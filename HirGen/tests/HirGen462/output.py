import tvm
from tvm import relay
from tvm.ir.transform import Sequential
from tvm.contrib import graph_runtime
import numpy as np
mod = tvm.IRModule()
mutated_mod = tvm.IRModule()
var_16 = relay.var("var_16", dtype = "float64", shape = (2, 12, 15))#candidate|16|(2, 12, 15)|var|float64
uop_17 = relay.atanh(var_16.astype('float64')) # shape=(2, 12, 15)
uop_22 = relay.cos(uop_17.astype('float64')) # shape=(2, 12, 15)
uop_24 = relay.log(uop_22.astype('float32')) # shape=(2, 12, 15)
uop_28 = relay.sin(uop_24.astype('float64')) # shape=(2, 12, 15)
output = uop_28
output2 = uop_28
func_30 = relay.Function([var_16,], output)
mod['func_30'] = func_30
mod = relay.transform.InferType()(mod)
mutated_mod['func_30'] = func_30
mutated_mod = relay.transform.InferType()(mutated_mod)
var_31 = relay.var("var_31", dtype = "float64", shape = (2, 12, 15))#candidate|31|(2, 12, 15)|var|float64
func_30_call = mutated_mod.get_global_var('func_30')
call_32 = func_30_call(var_31)
output = call_32
func_33 = relay.Function([var_31], output)
mutated_mod['func_33'] = func_33
mutated_mod = relay.transform.InferType()(mutated_mod)
var_225 = relay.var("var_225", dtype = "int8", shape = ())#candidate|225|()|var|int8
const_226 = relay.const([[[7,8,-4,-2,5,-7,5,-7,-10,-9,-3,10,-2,3,1],[9,-5,10,7,8,-9,2,9,-9,4,-9,2,10,-4,-1],[7,3,-4,9,-6,3,4,-1,5,-3,-9,-7,-2,4,-2],[-1,2,-8,10,10,-6,3,-8,-4,4,5,8,4,-1,-5],[1,9,-3,-2,6,-9,4,-4,-6,-7,-6,6,4,-5,8],[5,8,-3,-1,-6,-6,9,8,-4,2,7,-2,3,2,-1],[9,-10,-10,-10,9,-7,-10,6,-2,2,-2,3,3,1,5],[8,10,3,-10,-2,-10,5,-7,-7,3,-2,-2,8,2,-3],[-3,-1,8,2,8,8,-3,9,7,-9,-7,5,8,5,5]],[[7,8,1,-3,-5,-9,10,-7,1,4,4,3,-3,3,8],[-7,-7,4,-2,-3,9,-1,3,7,3,8,-5,7,1,-9],[9,4,2,4,-5,2,-8,-3,10,-6,3,10,-4,-7,8],[-4,3,-3,-7,10,5,-6,-2,5,-10,5,-7,-3,-2,6],[8,7,9,6,-8,-8,10,-7,6,6,-2,-9,-6,10,5],[-7,3,4,-5,-7,-9,-5,2,1,3,4,-10,4,7,5],[-9,5,-6,5,-9,4,1,7,1,-1,-7,10,2,-3,-10],[-3,1,-5,4,10,-4,1,4,-9,8,-9,-9,-2,5,-3],[6,-7,3,3,2,3,8,1,4,6,4,-6,-4,-5,6]],[[7,-4,-8,-6,6,-6,4,-7,-5,7,-4,7,-3,10,4],[-5,-9,-7,8,10,3,-5,2,-2,-2,8,-9,7,8,1],[3,-10,5,-1,-1,6,-7,-1,-2,5,5,1,-8,7,6],[-7,1,3,-7,8,-5,3,5,10,8,-3,-1,-6,-3,-7],[10,9,-1,7,7,5,-10,-4,2,-10,1,3,8,-3,2],[-9,3,-4,-10,-4,6,7,-10,1,-6,2,4,9,7,-4],[-3,-3,-3,-1,-10,10,-4,4,-9,-6,5,2,7,3,5],[-5,4,-5,5,-2,10,-10,2,-10,6,5,6,-3,3,7],[7,6,-1,8,6,-10,-5,-5,-4,-7,-1,-4,-2,-1,4]],[[4,-1,-3,-1,8,-3,8,-1,-3,5,7,-4,6,9,2],[-7,-5,7,1,-8,-7,-9,9,5,-3,3,10,-3,3,2],[-5,2,-7,7,6,9,6,-8,6,-8,6,2,-9,10,7],[7,-1,2,-5,8,-4,-5,-4,5,6,2,-5,10,9,5],[-4,-10,1,-4,2,-10,-10,-7,7,6,-5,9,-5,1,-9],[-10,1,7,-3,-10,3,-9,4,9,8,-9,6,-1,5,2],[10,-6,-3,5,-1,9,5,-9,4,4,-3,-4,-1,9,9],[-9,-5,-2,-7,4,-9,4,-3,-5,-2,10,2,-6,9,10],[-7,8,3,2,-4,9,-3,9,7,4,5,-7,-8,-1,-8]],[[-8,9,1,-4,3,1,-3,-5,10,-8,-3,8,1,3,-6],[4,-8,-8,8,-3,-1,-3,1,-9,-1,-5,2,-4,-1,7],[-10,1,-6,8,-10,5,7,8,-7,9,5,-2,-7,-10,-5],[-8,-9,-2,6,9,3,1,-1,6,-7,-5,8,7,-6,-8],[5,-6,2,9,10,-8,-9,2,10,-7,-4,-7,-2,2,3],[-10,5,-3,6,9,-10,-8,7,-1,10,4,-2,8,7,-3],[9,1,9,-3,7,-10,10,-8,-10,4,8,-5,8,6,5],[-8,-3,2,-2,-7,-6,8,7,-3,-4,8,-2,4,-10,9],[-10,-2,7,-4,-9,-10,8,-3,3,-1,-10,10,-5,5,-5]],[[-1,-1,-7,-8,-9,-2,4,-4,-4,-2,5,5,5,10,-5],[4,1,10,-6,-8,9,-2,9,-9,-5,9,2,-7,-4,-7],[-3,7,-8,9,9,-9,-7,-1,-10,-1,-1,7,6,10,-1],[1,8,8,-6,10,-6,4,-9,-2,-7,-4,-7,4,4,-5],[3,-9,-5,8,5,9,-6,-5,-7,-6,3,-3,-2,2,-2],[-3,5,7,10,-1,5,6,-2,8,9,-6,-7,-3,-7,-7],[3,4,-3,-6,-8,7,9,-5,-6,2,1,8,-6,-7,5],[2,3,6,10,-10,-8,-2,-2,-8,1,4,8,10,-4,-9],[-10,-6,10,10,3,8,8,-10,6,9,-10,1,-6,3,9]],[[-8,4,5,-8,-2,4,-4,-10,3,2,5,-4,9,-1,-9],[-4,-1,-10,10,1,9,-2,8,-7,7,-2,3,-3,5,7],[-4,10,9,2,-10,-3,-8,1,-6,8,2,-8,-7,9,4],[-7,-7,4,7,-7,-6,-7,5,2,-8,9,-10,7,9,-9],[-2,-9,-3,6,8,-8,-4,-3,-3,-4,-3,3,1,1,5],[-1,6,7,5,-9,9,-1,2,-5,7,8,-4,5,10,-3],[8,6,-6,-1,-8,-7,-10,1,-2,-7,-6,1,3,-3,-4],[1,-2,5,-10,2,9,-5,8,10,-2,1,9,8,-9,-8],[9,6,6,3,10,-6,-3,-9,-6,-2,-6,-8,4,9,-7]],[[8,-8,-1,-8,2,8,-8,-8,-5,-3,-7,-8,4,-9,7],[3,5,-2,8,1,-7,-8,3,1,4,-2,3,-4,-4,-1],[10,-6,7,-1,9,5,-2,-10,-10,-2,-5,3,-4,6,-9],[-9,-2,6,-5,4,-1,-10,1,8,3,4,-4,-7,-4,-8],[-9,-2,6,-10,-4,-4,3,-10,6,-6,7,8,-8,2,5],[5,-1,-6,-6,7,-3,7,-7,-2,4,-3,-1,4,5,1],[10,-5,-4,9,7,2,-8,-8,5,-7,10,-1,10,-10,5],[-4,-7,5,10,-3,-9,9,-5,2,6,10,9,9,-7,4],[-10,7,7,-1,8,-6,-1,6,-1,-6,10,-5,5,10,-2]],[[-6,-3,10,-6,9,-6,-5,-9,1,-1,-8,-2,2,6,-3],[-6,-9,-3,1,1,-5,4,-2,-1,4,9,-3,-5,-10,6],[-7,2,1,6,-7,9,-2,2,-7,-8,-6,-5,9,5,8],[1,-4,-3,8,-5,6,7,-1,5,-5,-1,1,-4,-5,-10],[-10,8,5,7,3,-10,-9,9,7,8,-7,7,-6,-8,7],[1,8,1,5,7,-3,-8,-6,-2,1,7,10,7,2,-6],[1,8,1,3,1,-3,-8,7,-8,-7,9,-10,-7,-7,-10],[9,10,-1,9,6,-5,-2,-10,7,8,-6,7,9,2,-2],[-9,-6,-10,-10,2,-9,-5,-1,2,10,1,8,-3,-1,-3]],[[9,-6,10,1,-3,8,-1,-4,7,-8,5,-6,-7,-2,-5],[-1,-6,7,-3,8,3,-9,-8,-5,-9,3,-4,9,-7,10],[-5,-4,10,-8,4,-10,-3,-9,1,7,7,-4,-6,-2,3],[3,-7,-8,2,1,-4,-1,1,8,-4,-2,5,-3,8,-4],[-9,8,5,4,-1,-3,7,2,6,10,6,-2,-9,-2,10],[7,-2,-7,10,-6,6,8,5,-1,-3,-2,4,-10,7,-9],[9,-8,10,9,9,-3,-7,10,4,-5,-4,-5,-9,9,-10],[-4,-4,-9,-10,-6,-6,-5,1,-4,-7,-3,-6,-9,-5,4],[7,-4,2,5,4,2,2,10,3,10,5,-2,2,-9,-10]],[[-4,-10,-7,-2,6,-6,5,-6,-1,2,-10,7,-9,3,-7],[10,-9,-10,3,-9,-9,7,-10,10,1,-7,1,5,2,-10],[1,10,2,-6,-3,4,-9,7,-4,-3,1,6,-3,-1,-8],[-3,1,-1,-7,-8,2,-4,2,2,-10,-1,-6,-2,7,-3],[-4,-8,-4,-10,5,-1,9,-10,7,-9,7,-10,6,-2,-3],[1,-5,-4,5,-10,-1,7,-6,-5,7,2,3,-8,3,-3],[7,6,1,1,-6,-6,1,1,2,-2,9,4,-5,-2,-4],[-7,-10,-1,4,9,-2,-9,10,-10,-5,3,6,9,-2,4],[-7,-5,3,-8,-9,-9,3,3,7,6,-8,9,6,9,-10]],[[-4,-1,3,-6,-3,9,-5,9,6,3,-1,10,-7,7,-6],[7,5,8,4,-1,8,-8,-2,3,4,-9,9,4,-10,1],[9,6,8,1,8,8,4,9,4,6,-7,2,8,3,-8],[-4,4,10,-5,-3,-7,-9,6,8,1,5,-1,-6,-4,7],[-3,8,10,-9,-1,8,-1,8,6,-7,-2,-4,1,1,9],[5,6,1,-1,1,-1,1,-5,-1,-5,-7,-3,9,1,9],[-6,3,-10,-10,-3,7,7,5,-5,4,-5,8,-9,1,-6],[1,-7,-6,7,9,4,-5,4,-4,8,-10,8,-10,6,9],[4,-4,4,-9,3,-2,-6,9,-9,-8,2,2,9,-6,-5]],[[-4,7,-1,7,2,10,8,-3,7,-1,-8,4,-4,-2,-7],[-7,8,-9,5,-1,-8,10,-8,-5,6,-9,-1,-4,5,7],[-5,-2,-8,-1,9,-9,4,4,-4,-6,-7,5,-9,2,7],[5,4,4,-2,-7,7,-9,7,3,-2,-2,-4,-6,-7,7],[10,5,-3,7,4,-6,10,-3,9,-8,7,-2,8,5,8],[1,-6,-1,-7,-4,-2,3,-6,-7,-4,-7,-7,-3,-7,-2],[10,3,2,-7,-2,-2,-1,-6,-3,9,-8,-10,5,1,4],[9,7,-2,-5,9,-9,-2,8,-5,-1,-2,-3,5,8,2],[-7,5,-2,-6,5,-2,8,3,2,-9,-4,-9,5,-5,-9]],[[-4,7,-2,-6,3,4,6,-1,-10,-6,-3,1,-7,7,-9],[8,-3,-3,-3,-3,-10,6,-3,-4,-10,-1,1,7,8,10],[10,-1,5,10,-4,-8,2,-2,-1,-7,9,5,9,9,-8],[7,9,3,-3,-5,5,-3,7,9,2,-8,3,-2,-7,-4],[-2,-3,6,-6,-8,-5,-4,8,-4,9,5,6,3,4,8],[5,6,2,5,-2,9,-5,-6,4,2,-5,-1,8,-10,3],[10,-10,7,10,-10,-4,10,3,2,3,1,4,-10,5,5],[-9,-8,-1,1,-7,-2,1,10,-7,1,8,-9,-1,5,8],[-6,2,6,-10,-5,-9,10,10,-1,-4,-4,-4,5,1,-3]]], dtype = "int8")#candidate|226|(14, 9, 15)|const|int8
bop_227 = relay.less_equal(var_225.astype('bool'), const_226.astype('bool')) # shape=(14, 9, 15)
output = bop_227
output2 = bop_227
func_232 = relay.Function([var_225,], output)
mod['func_232'] = func_232
mod = relay.transform.InferType()(mod)
var_233 = relay.var("var_233", dtype = "int8", shape = ())#candidate|233|()|var|int8
output = func_232(var_233)
func_234 = relay.Function([var_233], output)
mutated_mod['func_234'] = func_234
mutated_mod = relay.transform.InferType()(mutated_mod)
var_241 = relay.var("var_241", dtype = "float64", shape = (7, 6, 15))#candidate|241|(7, 6, 15)|var|float64
var_242 = relay.var("var_242", dtype = "float64", shape = (7, 6, 15))#candidate|242|(7, 6, 15)|var|float64
bop_243 = relay.power(var_241.astype('float64'), relay.reshape(var_242.astype('float64'), relay.shape_of(var_241))) # shape=(7, 6, 15)
output = relay.Tuple([bop_243,])
output2 = relay.Tuple([bop_243,])
func_255 = relay.Function([var_241,var_242,], output)
mod['func_255'] = func_255
mod = relay.transform.InferType()(mod)
var_256 = relay.var("var_256", dtype = "float64", shape = (7, 6, 15))#candidate|256|(7, 6, 15)|var|float64
var_257 = relay.var("var_257", dtype = "float64", shape = (7, 6, 15))#candidate|257|(7, 6, 15)|var|float64
output = func_255(var_256,var_257,)
func_258 = relay.Function([var_256,var_257,], output)
mutated_mod['func_258'] = func_258
mutated_mod = relay.transform.InferType()(mutated_mod)
var_324 = relay.var("var_324", dtype = "uint8", shape = (6, 15, 5))#candidate|324|(6, 15, 5)|var|uint8
var_325 = relay.var("var_325", dtype = "uint8", shape = (6, 15, 5))#candidate|325|(6, 15, 5)|var|uint8
bop_326 = relay.not_equal(var_324.astype('bool'), relay.reshape(var_325.astype('bool'), relay.shape_of(var_324))) # shape=(6, 15, 5)
var_333 = relay.var("var_333", dtype = "bool", shape = (6, 15, 5))#candidate|333|(6, 15, 5)|var|bool
bop_334 = relay.divide(bop_326.astype('float32'), relay.reshape(var_333.astype('float32'), relay.shape_of(bop_326))) # shape=(6, 15, 5)
output = relay.Tuple([bop_334,])
output2 = relay.Tuple([bop_334,])
func_337 = relay.Function([var_324,var_325,var_333,], output)
mod['func_337'] = func_337
mod = relay.transform.InferType()(mod)
var_338 = relay.var("var_338", dtype = "uint8", shape = (6, 15, 5))#candidate|338|(6, 15, 5)|var|uint8
var_339 = relay.var("var_339", dtype = "uint8", shape = (6, 15, 5))#candidate|339|(6, 15, 5)|var|uint8
var_340 = relay.var("var_340", dtype = "bool", shape = (6, 15, 5))#candidate|340|(6, 15, 5)|var|bool
output = func_337(var_338,var_339,var_340,)
func_341 = relay.Function([var_338,var_339,var_340,], output)
mutated_mod['func_341'] = func_341
mutated_mod = relay.transform.InferType()(mutated_mod)
var_535 = relay.var("var_535", dtype = "float32", shape = (12, 14, 13))#candidate|535|(12, 14, 13)|var|float32
var_536 = relay.var("var_536", dtype = "float32", shape = (12, 14, 13))#candidate|536|(12, 14, 13)|var|float32
bop_537 = relay.power(var_535.astype('float32'), relay.reshape(var_536.astype('float32'), relay.shape_of(var_535))) # shape=(12, 14, 13)
bop_545 = relay.multiply(var_535.astype('int16'), relay.reshape(var_536.astype('int16'), relay.shape_of(var_535))) # shape=(12, 14, 13)
output = relay.Tuple([bop_537,bop_545,])
output2 = relay.Tuple([bop_537,bop_545,])
func_548 = relay.Function([var_535,var_536,], output)
mod['func_548'] = func_548
mod = relay.transform.InferType()(mod)
var_549 = relay.var("var_549", dtype = "float32", shape = (12, 14, 13))#candidate|549|(12, 14, 13)|var|float32
var_550 = relay.var("var_550", dtype = "float32", shape = (12, 14, 13))#candidate|550|(12, 14, 13)|var|float32
output = func_548(var_549,var_550,)
func_551 = relay.Function([var_549,var_550,], output)
mutated_mod['func_551'] = func_551
mutated_mod = relay.transform.InferType()(mutated_mod)
const_876 = relay.const([[[-9.394444,-7.440824,-9.068058,-5.523251,9.361144,-0.902058,-1.492594,2.273802,6.651962,1.050799,-3.552285,4.200421,1.613031,-6.836869,-9.352158,5.165282],[-0.127898,-5.884812,3.058643,0.788903,7.659443,1.342065,3.089586,2.663576,-3.077569,3.695598,-1.972882,-9.075846,-6.235242,-5.118085,-8.712602,8.987678],[1.997559,1.980758,-0.378276,7.192029,5.223464,-4.098152,3.120917,3.508468,-5.391659,9.537162,6.174461,-9.473413,-1.577548,-8.150685,8.857067,9.114669]],[[2.769181,5.280119,6.167751,9.685658,2.258291,8.359813,3.526207,2.138836,-9.524966,7.734300,-6.821264,1.463743,-2.194677,6.638830,0.617246,-8.578911],[0.085265,3.929458,-7.627715,8.988110,-3.105989,-4.195767,7.600593,9.475808,-4.549648,1.091431,-5.997517,9.657206,4.292174,-6.821781,0.318672,7.817783],[-3.485288,9.887116,-8.535335,9.822254,-3.998086,-4.411095,0.765717,9.102880,-9.739421,-5.411411,6.624748,9.715608,-8.647546,2.686163,-1.530632,-6.861343]]], dtype = "float64")#candidate|876|(2, 3, 16)|const|float64
uop_877 = relay.atan(const_876.astype('float64')) # shape=(2, 3, 16)
output = relay.Tuple([uop_877,])
output2 = relay.Tuple([uop_877,])
func_888 = relay.Function([], output)
mod['func_888'] = func_888
mod = relay.transform.InferType()(mod)
output = func_888()
func_889 = relay.Function([], output)
mutated_mod['func_889'] = func_889
mutated_mod = relay.transform.InferType()(mutated_mod)
func_888_call = mod.get_global_var('func_888')
func_889_call = mutated_mod.get_global_var('func_889')
call_896 = relay.TupleGetItem(func_888_call(), 0)
call_897 = relay.TupleGetItem(func_889_call(), 0)
func_232_call = mod.get_global_var('func_232')
func_234_call = mutated_mod.get_global_var('func_234')
var_899 = relay.var("var_899", dtype = "int8", shape = ())#candidate|899|()|var|int8
call_898 = func_232_call(relay.reshape(var_899.astype('int8'), []))
call_900 = func_232_call(relay.reshape(var_899.astype('int8'), []))
output = relay.Tuple([call_896,call_898,var_899,])
output2 = relay.Tuple([call_897,call_900,var_899,])
func_906 = relay.Function([var_899,], output)
mod['func_906'] = func_906
mod = relay.transform.InferType()(mod)
var_907 = relay.var("var_907", dtype = "int8", shape = ())#candidate|907|()|var|int8
output = func_906(var_907)
func_908 = relay.Function([var_907], output)
mutated_mod['func_908'] = func_908
mutated_mod = relay.transform.InferType()(mutated_mod)
const_921 = relay.const([[[3,7],[7,2],[7,5],[-8,-10],[2,-4],[2,-5],[-7,9],[1,7],[1,-9],[-4,-4],[-5,-8],[5,-3],[-3,-5]],[[-1,4],[-9,9],[-6,5],[-10,6],[5,4],[1,5],[9,-1],[5,1],[-6,7],[8,5],[-10,-1],[-7,4],[-7,4]],[[-2,1],[6,-6],[-10,10],[-2,1],[-3,-5],[-9,3],[5,7],[-8,1],[-1,3],[-6,2],[-8,2],[-9,1],[9,5]],[[4,3],[-5,-3],[-3,-3],[7,-4],[7,-1],[-8,4],[-3,-9],[10,-10],[2,-6],[-4,-10],[-3,3],[-10,-3],[1,-1]],[[-6,-6],[1,3],[9,-6],[9,-8],[10,1],[-2,3],[9,9],[1,-1],[-9,8],[-4,9],[-6,-4],[8,-7],[-9,-4]],[[-3,3],[3,2],[-3,1],[-1,2],[-9,7],[-8,8],[3,8],[4,-1],[7,8],[5,5],[4,2],[4,1],[4,9]],[[-8,-10],[2,3],[8,-4],[-7,6],[-4,-9],[-7,-6],[-4,-4],[-4,10],[10,5],[8,2],[1,2],[10,-9],[10,-5]],[[-1,-10],[9,-3],[7,-8],[-3,-10],[2,-6],[8,2],[-7,2],[-3,4],[1,8],[8,-4],[-5,1],[-7,9],[-3,-6]],[[-3,8],[-1,5],[9,-7],[5,-2],[-7,7],[1,1],[1,9],[5,4],[6,-7],[-2,1],[6,-4],[3,4],[-4,-3]],[[-1,3],[4,-5],[-7,-10],[10,-10],[-4,6],[8,10],[7,3],[-7,4],[-1,-9],[9,8],[2,9],[-5,-4],[9,-8]],[[-1,-8],[2,-8],[8,-4],[-1,5],[-6,7],[1,10],[6,-5],[-4,-4],[1,1],[-3,-2],[-3,1],[-1,5],[1,7]],[[-8,8],[-1,-9],[-7,-9],[-4,2],[1,10],[10,1],[10,-1],[6,3],[-5,5],[7,10],[-4,-10],[1,-6],[6,10]],[[9,-7],[5,-10],[-6,-4],[7,4],[5,5],[4,8],[9,-8],[1,-1],[9,-7],[-8,5],[1,4],[1,9],[-3,-5]],[[-2,-10],[8,6],[-8,-10],[-6,1],[-6,-7],[-8,-5],[8,-6],[2,8],[6,-7],[-8,6],[1,-2],[4,3],[2,9]],[[3,-2],[1,4],[1,7],[9,-4],[6,-4],[-7,-4],[-10,3],[8,-3],[-7,2],[2,9],[-5,1],[-10,-3],[-8,-3]]], dtype = "int32")#candidate|921|(15, 13, 2)|const|int32
var_922 = relay.var("var_922", dtype = "int32", shape = (15, 13, 2))#candidate|922|(15, 13, 2)|var|int32
bop_923 = relay.less_equal(const_921.astype('bool'), relay.reshape(var_922.astype('bool'), relay.shape_of(const_921))) # shape=(15, 13, 2)
bop_926 = relay.add(bop_923.astype('uint64'), relay.reshape(const_921.astype('uint64'), relay.shape_of(bop_923))) # shape=(15, 13, 2)
output = relay.Tuple([bop_926,])
output2 = relay.Tuple([bop_926,])
func_932 = relay.Function([var_922,], output)
mod['func_932'] = func_932
mod = relay.transform.InferType()(mod)
mutated_mod['func_932'] = func_932
mutated_mod = relay.transform.InferType()(mutated_mod)
var_933 = relay.var("var_933", dtype = "int32", shape = (15, 13, 2))#candidate|933|(15, 13, 2)|var|int32
func_932_call = mutated_mod.get_global_var('func_932')
call_934 = func_932_call(var_933)
output = call_934
func_935 = relay.Function([var_933], output)
mutated_mod['func_935'] = func_935
mutated_mod = relay.transform.InferType()(mutated_mod)
func_888_call = mod.get_global_var('func_888')
func_889_call = mutated_mod.get_global_var('func_889')
call_1036 = relay.TupleGetItem(func_888_call(), 0)
call_1037 = relay.TupleGetItem(func_889_call(), 0)
func_30_call = mod.get_global_var('func_30')
func_33_call = mutated_mod.get_global_var('func_33')
var_1039 = relay.var("var_1039", dtype = "float64", shape = (180, 2))#candidate|1039|(180, 2)|var|float64
call_1038 = func_30_call(relay.reshape(var_1039.astype('float64'), [2, 12, 15]))
call_1040 = func_30_call(relay.reshape(var_1039.astype('float64'), [2, 12, 15]))
bop_1044 = relay.mod(var_1039.astype('float64'), relay.reshape(call_1038.astype('float64'), relay.shape_of(var_1039))) # shape=(180, 2)
bop_1047 = relay.mod(var_1039.astype('float64'), relay.reshape(call_1040.astype('float64'), relay.shape_of(var_1039))) # shape=(180, 2)
func_906_call = mod.get_global_var('func_906')
func_908_call = mutated_mod.get_global_var('func_908')
var_1054 = relay.var("var_1054", dtype = "int8", shape = ())#candidate|1054|()|var|int8
call_1053 = relay.TupleGetItem(func_906_call(relay.reshape(var_1054.astype('int8'), [])), 2)
call_1055 = relay.TupleGetItem(func_908_call(relay.reshape(var_1054.astype('int8'), [])), 2)
uop_1064 = relay.asin(var_1039.astype('float32')) # shape=(180, 2)
func_906_call = mod.get_global_var('func_906')
func_908_call = mutated_mod.get_global_var('func_908')
call_1066 = relay.TupleGetItem(func_906_call(relay.reshape(call_1053.astype('int8'), [])), 0)
call_1067 = relay.TupleGetItem(func_908_call(relay.reshape(call_1053.astype('int8'), [])), 0)
func_906_call = mod.get_global_var('func_906')
func_908_call = mutated_mod.get_global_var('func_908')
call_1070 = relay.TupleGetItem(func_906_call(relay.reshape(var_1054.astype('int8'), [])), 2)
call_1071 = relay.TupleGetItem(func_908_call(relay.reshape(var_1054.astype('int8'), [])), 2)
output = relay.Tuple([call_1036,bop_1044,call_1053,var_1054,uop_1064,call_1066,call_1070,])
output2 = relay.Tuple([call_1037,bop_1047,call_1055,var_1054,uop_1064,call_1067,call_1071,])
func_1076 = relay.Function([var_1039,var_1054,], output)
mod['func_1076'] = func_1076
mod = relay.transform.InferType()(mod)
var_1077 = relay.var("var_1077", dtype = "float64", shape = (180, 2))#candidate|1077|(180, 2)|var|float64
var_1078 = relay.var("var_1078", dtype = "int8", shape = ())#candidate|1078|()|var|int8
output = func_1076(var_1077,var_1078,)
func_1079 = relay.Function([var_1077,var_1078,], output)
mutated_mod['func_1079'] = func_1079
mutated_mod = relay.transform.InferType()(mutated_mod)
const_1104 = relay.const([[[-8.593447,-3.952523,8.382315,2.877557,-9.697777,-6.898577,6.410268,-9.629275,-7.552870,8.645749,2.734369,-0.772593,-7.347355],[5.682910,-9.892430,9.312803,-3.288937,-7.550419,-9.105525,0.096092,-8.894796,-0.970715,-3.177535,-2.009758,-1.194020,0.593532],[2.173268,2.010953,-1.615888,-0.399177,2.761797,-3.996049,2.842249,-8.545415,-5.750139,-9.217426,4.565193,4.111194,-6.733764],[-0.523440,3.185267,-0.321142,7.383573,4.145307,-3.252648,-3.956767,2.601467,7.261550,-7.399307,-4.883626,-2.890982,2.107125],[1.201623,8.564422,-7.189145,-9.142832,7.888652,-4.984972,1.078613,4.259756,9.863619,1.953154,-5.998432,-7.510147,-4.509554],[8.757058,5.663158,-9.455949,1.778318,-1.314441,-9.655958,-1.264482,9.231768,-4.824080,-8.245714,-6.184781,-9.982863,-8.333038],[8.750405,4.034451,1.459435,-3.519825,7.595755,3.541768,-1.603944,-9.418470,8.128714,-4.935061,0.384874,9.476322,-2.699164],[-7.155375,4.264678,4.453583,9.643183,8.056992,-4.109744,8.254744,-9.935192,-2.497924,9.826176,0.032503,2.301239,4.653911]],[[8.091865,-9.899842,2.041941,-4.271731,9.500475,2.573694,-1.358641,0.499092,-5.423781,-2.207102,-6.271335,7.810017,4.765021],[-3.532677,-0.301084,7.849955,-9.408636,-7.111229,-7.093474,-1.444762,-9.809636,-0.431768,-5.893881,3.273650,5.334873,-5.431050],[1.616416,9.366408,-1.508764,7.521465,1.103126,-9.228402,8.990404,7.850145,9.287097,8.444189,7.741305,-6.886445,-1.816980],[-6.411683,3.404486,8.416295,-1.645728,6.038397,-9.579849,-7.974197,-0.017524,9.446153,8.854345,5.723872,-1.821089,-5.765707],[9.160807,-0.871373,4.225400,8.025679,2.369108,5.176210,7.902694,-9.160085,7.689253,3.941252,-5.241386,1.618243,-2.647968],[-8.088421,-3.744598,-1.118715,-1.509217,0.158653,-6.667435,-2.933964,7.854837,8.579073,2.540880,-0.985266,-5.079621,-0.496280],[-4.642643,-2.616122,-3.553407,4.442635,-0.543516,-6.288368,-7.373197,-4.120130,-1.780387,-7.055492,-6.481346,-4.582877,-5.120541],[-6.789073,6.026532,7.944995,8.487390,-9.083219,-9.011085,-0.565941,7.460784,7.371036,-7.286549,-9.913868,1.150900,-5.201901]],[[2.146262,9.406628,4.058551,-5.072032,-3.132831,-9.769300,-3.066029,1.445766,-9.710116,7.364574,3.776134,-4.130387,-2.076841],[-6.022524,8.917994,7.401752,-2.107072,-8.734536,-7.053844,-5.055311,-5.188208,-2.430908,2.083915,-5.337515,3.492477,0.361189],[-2.177901,-7.668824,1.267299,-6.354335,2.264522,1.561300,-9.622219,9.840052,-1.479332,5.054815,-5.540409,4.258346,-3.414558],[-6.193750,4.953313,-6.075388,1.982960,-7.078110,7.790923,9.540636,-3.921953,-3.036059,0.100485,-1.384305,2.482911,-3.414748],[1.662731,4.118879,5.004078,-6.565573,-3.833587,8.860417,4.968692,-4.415681,-1.479076,-6.180079,-7.458877,-4.769800,-5.290831],[5.209821,-7.051311,-6.746541,-2.522193,3.232151,2.522252,-9.653231,-3.369146,3.673773,-8.273542,6.006136,0.367659,9.815409],[-6.011738,9.665255,-5.330554,5.549166,2.204425,9.976244,9.788369,1.565947,-0.531300,-5.451934,2.584050,-1.763933,1.379568],[5.825233,5.322718,-2.875433,-8.417398,7.340593,3.773243,0.098686,-7.161557,-0.661585,-5.296859,-2.319898,7.374099,6.031513]],[[-6.505065,-3.959206,5.956271,-8.291416,4.503958,4.617786,0.923582,-2.328859,6.355482,3.203697,-4.816570,9.997765,8.429757],[3.994195,8.559694,-5.348227,6.686492,8.696663,-3.467756,4.825119,7.784011,2.669161,0.916182,1.544781,4.147236,-6.889499],[-3.554477,-1.674570,9.932381,-4.291991,0.716391,-3.945577,-7.464341,8.699560,-0.706384,-6.338372,7.764544,-8.458447,6.015153],[0.489495,-0.495890,7.986200,-5.406704,-8.191031,4.644755,-0.780587,4.005941,6.461803,-3.688866,-2.490182,-6.444213,-7.083796],[-4.575361,-7.789527,-9.054037,0.141059,-0.031881,9.034424,-7.302995,-2.850762,8.521252,-4.429250,-9.863241,-1.085138,2.070015],[1.227399,3.180538,7.428690,-7.821538,8.346559,-8.610762,7.470147,7.313947,3.603750,-0.880215,-1.452847,-2.621050,7.992919],[-0.911932,0.726684,-4.006151,5.922858,2.334738,-1.561386,0.397070,-5.098445,-2.852683,-2.404095,4.864523,1.344022,6.753316],[7.154316,9.990722,-8.744044,-1.144394,5.259091,-5.472315,-2.391958,9.086438,4.655890,-4.917998,-2.701042,6.673880,5.787014]],[[-4.990258,7.604394,-9.077142,5.247968,7.797950,1.246383,-0.077133,-7.967227,-7.676474,-7.063001,4.235466,-9.354644,5.931426],[-0.495972,2.236993,8.379732,2.186336,2.974680,9.703911,1.024234,4.821351,-9.026277,3.436039,-8.742448,9.030580,4.958336],[9.895701,4.220772,3.357855,3.414916,8.283961,-8.380090,6.331997,-3.034380,6.302004,6.968813,-0.635695,-7.860636,6.623650],[5.339855,3.755013,3.783867,-7.356618,5.166722,1.573414,-5.291792,-8.605821,0.479241,8.943362,-6.560237,3.538010,8.465749],[-2.876663,1.165106,-0.667164,-9.257049,1.520098,-3.886586,-7.719324,5.160883,0.967490,-2.194466,9.306430,5.092510,2.407739],[8.010274,-5.070756,0.230529,-0.017982,-7.022870,1.067671,-1.965775,-7.062567,3.795932,-9.823248,-9.538801,-8.214617,2.236208],[-2.823916,-1.996876,2.974873,-1.002950,-9.218936,-0.593479,-7.508348,-8.632409,6.788667,8.602020,6.943680,1.296136,6.212733],[7.629412,-6.993902,1.036001,-1.826893,7.526585,9.720031,9.946161,3.347151,-2.036294,-1.198817,1.523821,7.364508,6.164007]],[[3.167990,0.248368,4.582304,7.392977,0.209179,-0.054580,-1.936948,2.127528,-8.447174,-0.932316,-2.614766,1.767715,2.099993],[1.207024,1.853795,2.631541,5.899173,-8.926513,-8.837706,-0.780681,-6.166392,1.172125,-5.067357,0.525851,3.439885,-7.328283],[-5.923420,-5.871159,2.061861,5.721493,-9.247343,4.530375,6.980554,-3.807049,5.074852,2.627853,-7.420977,0.348453,-2.405495],[9.751104,-9.099880,0.784423,0.287279,-5.043049,6.330621,-7.131578,-3.553250,1.745678,1.461546,1.986817,4.559828,-3.756548],[6.812648,-8.509787,-5.289611,9.399145,-3.270632,-7.142541,-2.567278,-6.086235,-3.588541,-3.357166,-4.044351,-3.608404,3.939748],[5.508491,-5.535539,-4.306960,0.130186,1.107781,-0.801308,-9.798258,-5.378493,2.423056,0.341079,-1.076907,-4.269787,-0.897697],[6.786953,-7.764940,7.487104,9.281541,1.323277,8.576628,-8.590371,3.676220,-0.689349,2.709833,-4.792278,0.763081,-8.270546],[0.089293,-9.320432,-1.425190,-6.794903,1.640959,-1.401045,6.487361,-1.178781,-6.570857,-5.732566,-0.104205,8.603737,2.859243]],[[-1.262861,0.522561,-0.196551,7.483368,-3.378358,-3.042346,-0.902327,-1.442871,-8.011087,-4.223173,1.014492,-9.965231,-5.529878],[-2.106144,-4.456914,2.030761,-1.900184,-6.324152,9.813579,-3.731453,7.439063,-6.920559,-9.960287,-9.622925,6.953442,7.662225],[1.611843,-9.489206,-4.915512,1.300071,-4.868715,7.960841,6.780650,1.016735,1.743462,-2.122975,5.456083,-8.650509,-3.773652],[-1.382845,-5.065665,-8.331596,5.501406,4.520782,0.584671,7.870833,-8.880262,-2.575047,-3.474345,-0.722947,5.677108,-8.895379],[-4.786339,-5.127558,2.306390,-3.193355,3.821104,5.377651,0.090479,-8.311809,5.105678,-9.514080,1.566606,2.694351,-6.822458],[5.067903,-9.610755,-0.777055,4.889772,9.887028,-9.887322,-2.771808,-3.668253,-9.956878,-8.872936,-1.926613,-7.327447,1.088086],[-7.821186,3.556516,8.339453,-3.958160,-9.593273,-4.808350,-6.483964,-2.346811,6.250134,-8.471953,-2.822003,3.640535,2.079791],[-2.090884,-4.104809,1.473683,-2.544086,4.843537,-9.943137,-3.462037,7.762588,-4.149451,-5.441987,-7.860533,9.350705,-9.602913]],[[7.517464,-8.991425,8.255040,9.318113,7.054257,-0.346968,2.466721,5.141270,-5.505726,4.098557,-7.626695,9.286508,-6.509478],[-1.923086,-9.127447,-0.467368,-7.859354,-1.292942,7.610947,5.011943,1.657551,1.443162,7.846894,-0.490176,-7.322430,4.191397],[5.702310,2.107589,-4.933930,7.771622,-2.641060,3.112400,-6.922073,1.641633,4.092953,-8.554382,-9.904290,1.061502,-4.687303],[4.609700,0.384127,0.357661,5.858131,5.048259,-8.509448,-0.197210,-2.642633,6.151802,-6.663949,-7.358911,9.520072,-1.817694],[-8.227825,-2.676114,1.984224,1.376516,-3.231058,5.014546,-4.607647,-4.736522,8.161381,4.477736,-8.490912,-3.374167,8.928271],[-3.512848,-1.339590,3.642335,-2.461492,3.951943,3.409630,0.247304,-5.571134,-8.310666,1.644691,5.530214,6.803976,-5.123411],[-3.857732,-7.015038,3.387869,-6.197349,6.052072,3.842271,8.907170,8.373973,8.623885,3.145574,1.882824,-7.738823,-2.879575],[7.684400,5.329388,5.522263,3.849992,1.289499,-9.105202,-4.604454,1.597518,1.643669,-9.962190,-0.968373,1.001156,4.523158]],[[6.174308,9.329764,-5.494189,9.041581,-0.164343,6.018408,0.040793,8.556390,-9.336442,1.807674,7.520550,7.332865,-0.595938],[7.754463,1.379368,-4.976687,5.393944,-7.275578,4.693468,3.047521,-8.923166,3.123026,8.513978,0.599337,-8.587640,-2.863342],[6.093243,3.752387,1.090227,-1.917236,-7.541309,5.418282,-0.911522,1.391060,2.383253,-2.676328,9.059102,3.366980,-3.861641],[-2.985533,-1.554625,-0.069786,-5.820917,3.175183,-1.842022,-3.063637,-6.787076,-4.491952,1.947783,-2.899585,-8.341154,-1.311905],[-9.253474,0.494129,-1.292888,1.104790,-4.244077,8.140590,-2.293887,-0.695751,-2.148481,1.591175,-5.972249,5.031958,3.773518],[-7.507153,-5.000411,4.549734,8.759201,3.170012,-2.595848,-8.768298,-6.541782,-0.888340,-0.189605,-5.129275,4.923161,3.651171],[1.129591,-1.967175,6.422241,1.279650,7.203323,-5.943761,7.285708,6.155342,4.536859,-3.114258,3.409778,-7.322458,1.128360],[-2.410348,-6.311028,-5.654936,-3.226758,-6.469854,8.739270,-8.568032,-5.948916,1.523574,-4.953713,7.333886,-9.078219,-0.193859]],[[-5.616595,5.353013,7.970743,2.879075,-4.174268,3.719465,-4.055588,-3.824302,7.414959,-8.934893,8.303762,5.774768,-7.704330],[0.297814,-5.454812,-2.259282,-8.395477,-5.003420,1.158113,7.372247,0.321269,7.786987,-0.919408,-7.506687,-1.836392,2.965324],[-1.395166,7.233125,-2.520802,-4.519472,-7.151684,1.572435,-4.652751,-4.735456,3.627257,5.983495,0.527139,-0.569991,-7.357368],[1.951112,-7.775225,7.573385,-1.451360,7.492112,8.928791,1.722872,0.328429,0.125639,8.632642,2.305526,2.543455,8.494570],[0.709122,9.761950,-3.338555,-1.817317,0.366536,-8.483303,9.565880,-6.713252,5.978324,-0.533886,2.207147,-7.185468,-4.900379],[5.934010,9.845668,-8.183645,6.472210,-7.080424,-4.885237,-6.489881,-6.824614,0.072546,-6.584081,6.558257,-7.673101,-7.263215],[3.810410,-5.456979,8.169062,2.087888,-6.351382,9.361234,8.743542,-7.900485,0.884314,-2.162192,7.495819,1.220874,2.562580],[5.350903,-2.685127,0.602903,-6.703517,0.734540,-8.671894,-1.027985,-0.901724,-8.167377,-4.213850,-6.225027,6.799529,9.494299]],[[-3.992721,-9.626162,5.571497,0.025310,-2.729705,2.796887,-1.510596,-0.551362,-0.828503,-6.428905,-3.489891,-7.696120,0.386204],[-3.892094,3.628278,8.659074,-8.711709,-7.815032,4.757079,-3.648141,-1.913941,-1.610741,-6.973436,7.608079,-7.271480,-6.679301],[-4.431511,4.944435,3.315329,-7.475019,8.430944,-6.595344,-2.015908,-3.582998,4.625350,4.857619,-6.237570,-5.232481,-1.086062],[7.940238,1.327797,9.710199,0.646518,0.518305,5.329103,1.271669,3.473475,-8.432455,-9.513829,2.541668,9.749586,-9.138485],[5.227578,7.888225,-7.494150,-3.055364,-1.268933,-5.397463,-6.825831,-5.106751,9.293529,-4.111387,9.817682,-3.885670,5.145771],[7.544505,-7.486566,8.198490,1.146440,7.540784,8.856045,8.889216,-8.286401,6.503993,-1.045051,-2.053485,-6.245036,-5.728617],[0.107824,4.921833,5.491117,-3.736728,-4.870985,6.650432,-0.759152,-6.434107,-6.864041,2.884512,1.324301,8.163586,-8.335333],[1.954657,-6.309101,-0.058186,9.292645,0.344954,5.585325,-8.769638,0.847565,6.698474,5.640733,5.148668,8.645980,-1.032461]],[[-0.264312,-1.563753,5.506294,9.386253,-7.091130,4.802188,5.451737,-7.610417,-5.075373,7.704534,-4.178722,1.504604,-3.476925],[1.413048,5.975940,-4.989258,2.510483,-0.019902,-3.039509,-2.054377,-1.588533,-5.138676,-8.549219,-7.441826,-7.458163,-6.837790],[-1.418822,-8.162235,1.673586,-0.443967,2.989413,-3.186255,-1.793145,9.645770,-5.549197,2.396071,3.254005,-1.266241,-9.024766],[9.783570,-0.164329,2.950401,6.913841,9.782703,8.346469,-7.539635,-0.291678,4.098308,3.516900,-8.398493,-8.425051,-1.055508],[5.704384,-7.405918,3.664927,-2.786924,7.140908,-0.146479,0.892187,2.013213,-1.779750,0.516287,-5.079825,2.428155,3.832122],[5.756527,3.518907,-2.056971,4.970019,-1.047701,-6.605505,-4.310162,-0.385623,-2.862221,6.808583,-4.079047,6.219747,-3.236145],[-1.129043,-1.109888,2.017481,1.326744,5.484046,-3.059965,-9.305775,-3.893541,0.171353,8.614430,4.307415,-8.377665,6.622558],[-4.540536,-2.282047,1.492671,-3.979498,9.412373,0.416284,-0.274565,-3.872404,6.957190,9.983464,0.124169,2.488018,-5.633576]]], dtype = "float32")#candidate|1104|(12, 8, 13)|const|float32
var_1105 = relay.var("var_1105", dtype = "float32", shape = (12, 8, 13))#candidate|1105|(12, 8, 13)|var|float32
bop_1106 = relay.maximum(const_1104.astype('float32'), relay.reshape(var_1105.astype('float32'), relay.shape_of(const_1104))) # shape=(12, 8, 13)
output = relay.Tuple([bop_1106,])
output2 = relay.Tuple([bop_1106,])
func_1151 = relay.Function([var_1105,], output)
mod['func_1151'] = func_1151
mod = relay.transform.InferType()(mod)
mutated_mod['func_1151'] = func_1151
mutated_mod = relay.transform.InferType()(mutated_mod)
var_1152 = relay.var("var_1152", dtype = "float32", shape = (12, 8, 13))#candidate|1152|(12, 8, 13)|var|float32
func_1151_call = mutated_mod.get_global_var('func_1151')
call_1153 = func_1151_call(var_1152)
output = call_1153
func_1154 = relay.Function([var_1152], output)
mutated_mod['func_1154'] = func_1154
mutated_mod = relay.transform.InferType()(mutated_mod)
func_888_call = mod.get_global_var('func_888')
func_889_call = mutated_mod.get_global_var('func_889')
call_1163 = relay.TupleGetItem(func_888_call(), 0)
call_1164 = relay.TupleGetItem(func_889_call(), 0)
output = relay.Tuple([call_1163,])
output2 = relay.Tuple([call_1164,])
func_1170 = relay.Function([], output)
mod['func_1170'] = func_1170
mod = relay.transform.InferType()(mod)
output = func_1170()
func_1171 = relay.Function([], output)
mutated_mod['func_1171'] = func_1171
mutated_mod = relay.transform.InferType()(mutated_mod)
var_1172 = relay.var("var_1172", dtype = "uint8", shape = ())#candidate|1172|()|var|uint8
var_1173 = relay.var("var_1173", dtype = "uint8", shape = (12, 3, 3))#candidate|1173|(12, 3, 3)|var|uint8
bop_1174 = relay.less_equal(var_1172.astype('bool'), var_1173.astype('bool')) # shape=(12, 3, 3)
output = relay.Tuple([bop_1174,])
output2 = relay.Tuple([bop_1174,])
func_1181 = relay.Function([var_1172,var_1173,], output)
mod['func_1181'] = func_1181
mod = relay.transform.InferType()(mod)
mutated_mod['func_1181'] = func_1181
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1181_call = mutated_mod.get_global_var('func_1181')
var_1183 = relay.var("var_1183", dtype = "uint8", shape = ())#candidate|1183|()|var|uint8
var_1184 = relay.var("var_1184", dtype = "uint8", shape = (12, 3, 3))#candidate|1184|(12, 3, 3)|var|uint8
call_1182 = func_1181_call(var_1183,var_1184,)
output = call_1182
func_1185 = relay.Function([var_1183,var_1184,], output)
mutated_mod['func_1185'] = func_1185
mutated_mod = relay.transform.InferType()(mutated_mod)
var_1192 = relay.var("var_1192", dtype = "float64", shape = (1, 13, 12))#candidate|1192|(1, 13, 12)|var|float64
uop_1193 = relay.asinh(var_1192.astype('float64')) # shape=(1, 13, 12)
output = uop_1193
output2 = uop_1193
func_1211 = relay.Function([var_1192,], output)
mod['func_1211'] = func_1211
mod = relay.transform.InferType()(mod)
var_1212 = relay.var("var_1212", dtype = "float64", shape = (1, 13, 12))#candidate|1212|(1, 13, 12)|var|float64
output = func_1211(var_1212)
func_1213 = relay.Function([var_1212], output)
mutated_mod['func_1213'] = func_1213
mutated_mod = relay.transform.InferType()(mutated_mod)
func_888_call = mod.get_global_var('func_888')
func_889_call = mutated_mod.get_global_var('func_889')
call_1231 = relay.TupleGetItem(func_888_call(), 0)
call_1232 = relay.TupleGetItem(func_889_call(), 0)
func_232_call = mod.get_global_var('func_232')
func_234_call = mutated_mod.get_global_var('func_234')
const_1240 = relay.const(7, dtype = "int8")#candidate|1240|()|const|int8
call_1239 = func_232_call(relay.reshape(const_1240.astype('int8'), []))
call_1241 = func_232_call(relay.reshape(const_1240.astype('int8'), []))
bop_1247 = relay.equal(call_1231.astype('bool'), const_1240.astype('bool')) # shape=(2, 3, 16)
bop_1250 = relay.equal(call_1232.astype('bool'), const_1240.astype('bool')) # shape=(2, 3, 16)
output = relay.Tuple([call_1239,bop_1247,])
output2 = relay.Tuple([call_1241,bop_1250,])
func_1251 = relay.Function([], output)
mod['func_1251'] = func_1251
mod = relay.transform.InferType()(mod)
mutated_mod['func_1251'] = func_1251
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1251_call = mutated_mod.get_global_var('func_1251')
call_1252 = func_1251_call()
output = call_1252
func_1253 = relay.Function([], output)
mutated_mod['func_1253'] = func_1253
mutated_mod = relay.transform.InferType()(mutated_mod)
func_888_call = mod.get_global_var('func_888')
func_889_call = mutated_mod.get_global_var('func_889')
call_1260 = relay.TupleGetItem(func_888_call(), 0)
call_1261 = relay.TupleGetItem(func_889_call(), 0)
output = call_1260
output2 = call_1261
func_1262 = relay.Function([], output)
mod['func_1262'] = func_1262
mod = relay.transform.InferType()(mod)
mutated_mod['func_1262'] = func_1262
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1262_call = mutated_mod.get_global_var('func_1262')
call_1263 = func_1262_call()
output = call_1263
func_1264 = relay.Function([], output)
mutated_mod['func_1264'] = func_1264
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1170_call = mod.get_global_var('func_1170')
func_1171_call = mutated_mod.get_global_var('func_1171')
call_1265 = relay.TupleGetItem(func_1170_call(), 0)
call_1266 = relay.TupleGetItem(func_1171_call(), 0)
output = relay.Tuple([call_1265,])
output2 = relay.Tuple([call_1266,])
func_1286 = relay.Function([], output)
mod['func_1286'] = func_1286
mod = relay.transform.InferType()(mod)
mutated_mod['func_1286'] = func_1286
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1286_call = mutated_mod.get_global_var('func_1286')
call_1287 = func_1286_call()
output = call_1287
func_1288 = relay.Function([], output)
mutated_mod['func_1288'] = func_1288
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1286_call = mod.get_global_var('func_1286')
func_1288_call = mutated_mod.get_global_var('func_1288')
call_1297 = relay.TupleGetItem(func_1286_call(), 0)
call_1298 = relay.TupleGetItem(func_1288_call(), 0)
func_932_call = mod.get_global_var('func_932')
func_935_call = mutated_mod.get_global_var('func_935')
var_1302 = relay.var("var_1302", dtype = "int32", shape = (390,))#candidate|1302|(390,)|var|int32
call_1301 = relay.TupleGetItem(func_932_call(relay.reshape(var_1302.astype('int32'), [15, 13, 2])), 0)
call_1303 = relay.TupleGetItem(func_935_call(relay.reshape(var_1302.astype('int32'), [15, 13, 2])), 0)
func_1151_call = mod.get_global_var('func_1151')
func_1154_call = mutated_mod.get_global_var('func_1154')
const_1317 = relay.const([-1.664376,4.428116,-1.455695,9.685255,-9.159532,-2.563954,-8.915043,-9.745270,8.179635,-2.022717,6.046084,9.241421,5.098860,-4.128519,-7.024312,-0.825472,-6.036319,4.713077,-5.061495,-7.844274,2.254809,9.976728,5.067804,3.031464,5.346171,1.057181,8.823365,-2.128153,-0.462839,2.972295,1.946663,9.793177,-2.523475,-1.333720,2.347052,2.057950,2.539449,-6.833104,-2.550583,3.529018,8.280979,-9.864221,3.612711,1.321513,4.992108,6.159038,-3.976564,8.125536,8.355984,4.949425,-1.581287,8.580469,-3.284303,-2.934611,8.027936,-6.734474,-1.813324,-3.860395,-0.271897,3.633678,-0.160183,-8.972909,5.342043,5.942223,-5.419810,-0.698876,4.859047,-1.666197,4.792280,6.251643,4.421984,-3.747572,-8.031011,0.259223,-5.362504,4.148682,1.559937,-9.909553,2.359066,9.050744,-0.522003,-9.681764,8.042567,9.399267,0.206705,-8.742378,2.118670,1.012254,9.213392,-7.956114,2.248586,-4.996744,5.381417,-4.102943,9.679036,-0.534369,8.206973,7.161979,-8.736103,4.521764,0.989908,-2.362153,-2.983602,0.460190,-0.148108,-5.145895,2.231297,4.704581,1.533027,5.183244,8.081312,-6.213630,-2.560718,-0.379906,0.958200,-9.819145,0.273669,4.114383,-2.503197,1.720892,-4.860698,6.236571,-7.265281,-2.853434,-5.883566,-3.797313,-0.238775,-1.190193,5.708388,1.121835,-9.314070,4.685136,-1.380670,-1.099502,1.896964,0.647359,6.844936,7.345286,3.872961,3.175407,5.963715,-5.558018,-7.240722,-5.673321,1.362176,-2.383941,-4.809235,7.254906,-2.578864,4.741926,4.529308,2.429719,4.299181,-2.514013,3.514003,-9.630467,-4.726617,-5.181783,2.489863,-1.128382,-7.561590,8.042459,-9.216142,3.181953,-4.443126,1.918590,8.276213,-6.357175,3.002684,-8.932758,-0.076436,-8.680230,1.772528,0.797644,5.485327,6.521629,9.239248,-0.813542,2.741516,-1.843844,6.577672,7.263671,0.217352,5.180582,-1.893250,0.382696,3.743450,4.054421,-7.262364,1.599836,-3.169041,6.185080,4.661527,-1.900916,5.397980,-6.732014,-2.765903,3.838187,4.737103,-6.092874,-2.959662,-6.561888,6.310319,-1.201103,3.897328,-2.941299,-9.535351,6.943582,5.628495,-7.207186,-2.280080,3.869553,-8.593787,-1.740292,-1.507795,-5.477576,-1.981584,-1.140137,-1.009543,1.487506,-4.170764,-0.786324,1.811188,3.273510,5.336314,9.398986,-5.285177,-8.193336,-7.918545,5.388763,2.213827,0.612310,-2.010290,-4.657834,8.661244,-1.202969,8.483483,-6.575955,-6.617160,3.417550,-7.004771,-3.404567,-5.745740,1.589348,0.935562,4.851812,-7.732336,6.083902,-4.385058,-8.424065,9.049459,5.840777,4.235694,-9.709149,6.810330,5.702220,-1.873703,0.799484,-0.393374,5.567538,7.024805,-3.967524,-0.061715,-3.026546,4.086371,-5.027666,-9.176092,3.863008,2.869747,6.523712,-9.471254,-2.804295,-2.353579,8.062532,8.265010,3.212284,7.646023,-9.473336,0.725160,-9.741848,5.141343,1.068417,-6.295690,9.959041,-8.335688,3.871324,3.459798,-1.558802,8.601015,-8.361097,-7.221338,1.387531,-2.904948,3.101978,-7.077170,-5.137050,-3.133838,2.757733,5.160477,0.256162,-7.111451,-1.979198,-3.576146,0.031585,-1.508626,-8.331249,6.213575,-6.269900,-1.637534,0.335871,6.867584,-9.071034,-9.580188,-9.290991,8.884336,9.726455,-7.838708,1.351916,-6.220199,-5.305386,0.382170,-7.374944,-7.845749,-8.076394,-3.657058,-1.237545,3.789885,-3.374603,-4.538702,6.374249,-7.108146,2.494600,-3.635222,9.902448,-6.284173,0.769335,9.744350,-6.857109,-6.886496,-1.079886,8.290755,-6.100309,8.364232,-6.221662,-1.797086,8.596047,-2.383443,7.609067,-3.516653,-7.789330,6.674179,-5.609742,2.806281,-1.073079,6.799435,-8.181522,6.752362,4.387365,7.798333,7.910581,-3.894976,-5.271738,5.204688,9.587524,7.583751,-6.960762,-7.137917,4.664825,-2.934978,7.501604,-8.760940,-3.679913,8.235373,-4.951735,2.349885,-0.126755,2.428317,-5.581314,-8.084835,-6.823486,8.928184,-3.616323,7.185607,7.574493,-1.558535,8.882159,1.241763,-9.464533,7.725885,0.164360,-2.316845,-2.604172,9.875035,2.441188,8.118238,4.981297,-6.869233,-9.138477,0.025341,1.426779,-1.058023,-7.978210,-6.763583,-5.030906,0.003923,-8.988536,0.220896,7.523366,-5.306661,6.956487,-0.988694,-9.574006,-9.189622,-6.837748,5.644660,5.065564,-3.234562,6.608758,5.100666,1.049466,7.139004,-5.000052,-2.318597,5.792497,-3.368375,-1.130553,7.161018,-9.598106,9.617976,4.906773,-0.222936,3.047661,-3.228253,-3.200386,-9.969888,4.311021,8.583761,5.456689,4.445914,-9.397951,7.985777,4.973927,-8.596491,-8.467984,-7.342835,-4.765162,0.037329,-3.319934,-9.923706,5.636924,-0.748791,-0.895691,-7.081303,0.659644,8.137156,-8.155684,5.422920,2.633528,3.957990,8.858790,-0.304109,-6.157418,1.651401,2.076361,9.496044,7.073944,9.224641,-8.999874,6.451516,-6.933608,8.054133,4.005435,-0.219417,-9.162475,-5.214271,1.015909,9.292469,-6.491865,-5.151961,-5.712716,-4.661816,3.918751,-2.638097,-8.130123,-6.683177,-8.109644,9.236953,-3.174517,-8.196771,4.082960,-9.369738,2.642489,-9.407385,3.066422,-1.551602,6.727076,1.758748,-5.597422,-7.407207,0.845263,7.054857,-6.753275,3.020650,-5.467948,-4.801145,-9.654998,7.700824,-2.286577,-8.806075,-7.371019,-2.320634,7.262440,0.834756,5.258921,-7.962059,-1.714612,-3.639698,-5.401397,3.268864,6.473502,-5.961990,-4.783577,-2.642976,-2.773405,-1.670862,6.262227,-0.417954,-9.779043,-4.719460,6.896452,-7.710499,9.906300,-4.822613,-6.094275,-5.753397,4.042762,-1.701885,-9.114374,0.079791,2.303808,-5.767984,-6.551673,2.607110,-9.774998,-5.712360,5.156733,4.155482,5.279127,-6.756726,0.403078,6.782029,-2.477876,-2.200535,-9.471343,5.970680,-5.049217,-7.162917,-6.073516,1.102383,-8.780888,-2.510806,3.337689,-7.836289,8.521500,-9.900503,6.961479,-3.207652,1.168441,5.956185,-3.739134,3.213096,-8.625176,4.828986,-5.433213,6.181059,-6.315368,-8.298928,5.797788,-9.465194,0.900740,6.686527,-0.228033,-4.428983,-8.109737,-6.693914,-2.623554,0.274452,3.794850,8.737466,-9.289446,-8.080982,-1.084984,-7.767631,1.299642,7.253756,5.498991,-5.390425,-9.040359,-2.196709,-4.863662,0.002806,-0.966070,6.037436,9.992195,7.404728,8.804802,-9.024579,-0.573425,8.209446,5.926775,7.297165,2.662886,-4.312677,-7.993513,-9.761918,4.356735,-7.590642,4.740695,-5.028435,-2.623910,-2.331483,8.296976,-6.085720,1.320383,-5.396825,-8.196071,1.315153,0.791911,0.884506,-8.724170,-9.266834,4.703919,-2.631865,-3.782469,2.603507,-9.020870,-1.970490,-9.345756,-3.571243,-5.410870,-2.025819,-1.325835,-8.152911,7.069673,5.853097,2.768056,-1.006797,-6.729433,7.377306,8.094807,-0.297143,-3.289891,1.186712,7.824795,-1.701431,-4.266290,-3.932317,5.054408,-7.138281,-6.778033,-7.540311,6.336093,-3.091453,1.480232,-9.176974,-8.140760,9.735945,7.536064,9.015528,-5.433712,-1.181843,-0.061933,2.542883,6.007399,-1.298623,2.776892,-2.119308,3.716091,9.404785,-4.199276,8.845772,-0.757073,-1.855708,-0.222079,-9.118441,4.806441,5.365007,4.768620,6.641100,8.560514,-4.219503,4.677089,7.541560,8.030658,4.749556,3.818800,-7.133258,3.238020,5.996862,-4.294690,-1.013240,2.652131,8.648503,-1.726988,3.022089,-5.565474,5.632345,-6.492804,3.214834,9.590820,-7.604788,8.888212,-7.580205,5.736146,-8.077767,7.332854,0.712897,9.484925,7.818876,-2.813388,5.516336,-1.699493,-7.644372,9.364308,-9.424544,-0.720610,7.469812,7.605028,0.417221,-2.357218,-1.978813,-3.972470,-8.287046,-4.577444,-7.451850,-2.215951,8.949420,-3.491052,-2.017627,6.603792,-5.696769,2.912328,-9.943472,3.248626,5.951032,4.634022,9.073401,7.615308,0.974271,0.707666,-9.202535,8.856087,-0.839772,9.450892,-7.169461,1.057139,6.493264,-0.062088,7.108818,0.756378,8.762213,-7.000640,-5.261756,-9.701090,1.200993,8.732004,-4.727538,5.262986,-7.935743,7.589260,-2.224116,5.369213,2.534692,5.433231,2.811860,0.527825,3.218042,7.239556,4.055561,-1.349790,8.350538,3.521851,-8.763016,-8.262140,1.889284,5.720759,-2.161487,9.933205,4.692775,-4.759640,6.251920,9.337350,6.445340,3.031670,9.653320,3.363278,1.695513,-2.284556,-5.057861,0.954642,-5.276961,4.956879,0.441314,-7.907421,4.584039,-0.887460,-6.571058,1.279208,-3.612809,-4.740317,-8.303230,0.598883,-1.283777,-2.262991,-6.600799,1.296791,-4.267859,-9.564492,8.806255,-4.903675,4.432946,-2.892318,1.369155,-8.092574,-6.479821,8.645159,-3.369217,-8.610708,-9.811746,5.825555,-1.333520,2.089463,4.310138,1.112947,-6.294901,2.052848,-1.981911,0.213638,-4.604986,9.912464,-5.773035,2.591230,7.860296,-4.767748,-7.270846,8.704980,-2.006413,-7.209888,-7.674626,-0.006310,5.155569,-1.105020,8.030124,2.768680,9.340283,-8.964750,0.500434,1.383618,-0.229246,-4.940532,1.361643,3.526744,-1.680922,-1.062279,8.176270,7.174890,-5.643461,-3.267736,5.576867,4.419574,7.715668,4.316174,-0.835325,1.409238,-9.278115,5.896749,4.426263,7.700707,-0.007727,-1.348127,-1.364262,8.018988,-9.482748,3.922079,0.145000,-8.640261,-3.906930,-6.676376,-9.769366,1.999215,5.210452,7.518826,-2.183030,0.909079,-4.996478,-5.472507,7.228633,0.588300,-2.104933,-8.737494,-6.745603,-7.755423,-4.300606,8.867605,-0.966653,6.450703,2.072403,6.869667,1.661201,2.351002,-2.150006,-6.138929,6.677523,5.288924,-5.818220,8.519696,6.158632,-4.887528,-6.828722,-0.602491,-2.360393,2.321275,-8.140170,0.771840,9.102573,8.986713,8.155648,2.916061,-4.564407,-8.255344,-5.330863,7.489381,4.290576,2.307188,4.416656,-3.195416,5.589894,8.707980,-0.161424,9.617280,7.354885,-6.406391,9.190403,0.135519,-1.108853,-9.806893,-9.561885,-8.404093,2.516769,5.064125,-9.229124,9.581601,4.524241,9.662755,4.847613,7.297617,-1.234842,5.362673,-9.031731,8.951110,-4.187680,6.372529,2.805427,-0.471208,-0.004670,4.629112,-4.136426,-5.495935,6.156372,2.525650,0.418370,-6.256092,-0.992765,1.281099,-4.653339,-3.465111,-8.719277,2.633513,6.291049,2.138694,-8.748644,-9.048552,6.194386,-9.254176,8.287106,7.573945,0.600608,-9.648921,-7.025010,-1.769019,-0.679687,3.157548,-4.898483,-7.770139,2.769349,0.663427,-6.284169,-7.611683,0.011973,-5.396235,-9.809174,6.383339,3.991418,-5.357777,0.914895,0.188070,3.244735,-0.892430,8.380919,5.651527,-4.924458,-8.852369,2.644729,-0.203786,-4.354124,2.559824,7.674471,-7.575050,-0.736788,-7.502828,5.987416,4.750440,-1.262806,-1.115362,-3.958175,-0.657658,3.017369,7.584938,3.071647,8.959093,-3.027744,9.190881,3.266229,1.670727,-1.758876,8.848469,9.969764,-6.869210,-3.770449,6.879287,-9.258320,-8.491973,6.121385,-8.343885,3.839332,-3.484684,-9.708236,5.190661,9.863816,8.791406,-7.900486,4.837866,1.622651,-0.126838,-7.358685,-6.385723,7.647017,-0.450894,-9.040487,-4.253942,-8.224998,-7.979479,-0.080483,-2.768826,-7.668762,5.028575,-4.096805,-2.998216,-6.442217,-7.144827,-5.714473,9.349149,3.759891,-9.749739,5.531680,1.654938,9.930426,-7.563513,-5.957541,3.418655,5.662752,8.743182,6.843905,5.719095,-9.197513,9.425036,5.631585,8.145347,-4.035317,-6.676945,-7.866944,-7.557252,3.651157,4.729290,9.920237,-6.780011,5.697634,7.680426,5.102043,-7.574720,-7.918887,5.990946,-4.462955,-3.592522,-5.716391,-5.403279,-8.898644,3.209114,-4.869851,3.468126,0.971526,-2.127902,-4.195760,-5.572556,-6.866495,7.884988,-7.080305,-6.561209,1.754173,7.442717,-2.224703,-4.548272,-0.057770,-5.986076,-0.833582,7.323180,-7.306608,-7.873341,7.785024,-9.092735,5.437923,-0.466447,-3.793881,7.173322,4.338976,-5.857567,-5.564126,-0.733072,-3.861999,2.810966,7.582651,-3.258379,-7.983897,-3.657614,8.561960,-6.808648,-3.510509,-8.484722,1.773634,6.158822,4.129935,-1.400396,-5.050596,-7.221007,-6.948269,-2.962288,-1.256233,6.852647,0.006435,-6.673561,-3.830254,-1.504224,3.576565,-9.852146,-5.141980,9.886097,6.411358,8.830835,4.054150,-9.595853,-0.670777,9.757244,0.073360,6.129828,-2.858020,-8.346172,-5.509775,1.359055,2.327007,0.607298,7.686732,3.390667,-4.553072,6.591359,4.431183,7.347237,-9.691230,-9.051464,1.057979,-2.829516,-1.125264,1.106877,4.522222,-6.903809,-4.569640,-4.942340,1.384413,-3.120962,0.099800,3.855610,5.156300,-3.407698,5.481449,0.950518,-8.110412,-4.544691,-1.212280,-8.537178,-5.459845,1.556799,-1.883807,8.601686,3.351291,6.365072,2.633355,6.287861,-1.786165,-6.609843,0.237407,-5.500810,9.052275,-2.627297,-6.036853,-6.910926,6.294066,6.137174,6.818098,9.966036,-5.477830,1.473579,6.185046,-8.432987,-2.486207,6.353287,1.629552,-6.028926,-4.307935,-4.572943,7.424814,-6.181062,-9.970349,-7.533576,-2.306371,9.161599,-6.606296,-9.533238,6.631834,7.436095], dtype = "float32")#candidate|1317|(1248,)|const|float32
call_1316 = relay.TupleGetItem(func_1151_call(relay.reshape(const_1317.astype('float32'), [12, 8, 13])), 0)
call_1318 = relay.TupleGetItem(func_1154_call(relay.reshape(const_1317.astype('float32'), [12, 8, 13])), 0)
uop_1332 = relay.log(const_1317.astype('float64')) # shape=(1248,)
output = relay.Tuple([call_1297,call_1301,var_1302,call_1316,uop_1332,])
output2 = relay.Tuple([call_1298,call_1303,var_1302,call_1318,uop_1332,])
func_1335 = relay.Function([var_1302,], output)
mod['func_1335'] = func_1335
mod = relay.transform.InferType()(mod)
mutated_mod['func_1335'] = func_1335
mutated_mod = relay.transform.InferType()(mutated_mod)
var_1336 = relay.var("var_1336", dtype = "int32", shape = (390,))#candidate|1336|(390,)|var|int32
func_1335_call = mutated_mod.get_global_var('func_1335')
call_1337 = func_1335_call(var_1336)
output = call_1337
func_1338 = relay.Function([var_1336], output)
mutated_mod['func_1338'] = func_1338
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1286_call = mod.get_global_var('func_1286')
func_1288_call = mutated_mod.get_global_var('func_1288')
call_1340 = relay.TupleGetItem(func_1286_call(), 0)
call_1341 = relay.TupleGetItem(func_1288_call(), 0)
output = call_1340
output2 = call_1341
func_1345 = relay.Function([], output)
mod['func_1345'] = func_1345
mod = relay.transform.InferType()(mod)
output = func_1345()
func_1346 = relay.Function([], output)
mutated_mod['func_1346'] = func_1346
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1251_call = mod.get_global_var('func_1251')
func_1253_call = mutated_mod.get_global_var('func_1253')
call_1378 = relay.TupleGetItem(func_1251_call(), 0)
call_1379 = relay.TupleGetItem(func_1253_call(), 0)
func_1170_call = mod.get_global_var('func_1170')
func_1171_call = mutated_mod.get_global_var('func_1171')
call_1384 = relay.TupleGetItem(func_1170_call(), 0)
call_1385 = relay.TupleGetItem(func_1171_call(), 0)
output = relay.Tuple([call_1378,call_1384,])
output2 = relay.Tuple([call_1379,call_1385,])
func_1389 = relay.Function([], output)
mod['func_1389'] = func_1389
mod = relay.transform.InferType()(mod)
output = func_1389()
func_1390 = relay.Function([], output)
mutated_mod['func_1390'] = func_1390
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1262_call = mod.get_global_var('func_1262')
func_1264_call = mutated_mod.get_global_var('func_1264')
call_1407 = func_1262_call()
call_1408 = func_1262_call()
output = call_1407
output2 = call_1408
func_1412 = relay.Function([], output)
mod['func_1412'] = func_1412
mod = relay.transform.InferType()(mod)
mutated_mod['func_1412'] = func_1412
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1412_call = mutated_mod.get_global_var('func_1412')
call_1413 = func_1412_call()
output = call_1413
func_1414 = relay.Function([], output)
mutated_mod['func_1414'] = func_1414
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1170_call = mod.get_global_var('func_1170')
func_1171_call = mutated_mod.get_global_var('func_1171')
call_1469 = relay.TupleGetItem(func_1170_call(), 0)
call_1470 = relay.TupleGetItem(func_1171_call(), 0)
func_1286_call = mod.get_global_var('func_1286')
func_1288_call = mutated_mod.get_global_var('func_1288')
call_1474 = relay.TupleGetItem(func_1286_call(), 0)
call_1475 = relay.TupleGetItem(func_1288_call(), 0)
func_1211_call = mod.get_global_var('func_1211')
func_1213_call = mutated_mod.get_global_var('func_1213')
var_1485 = relay.var("var_1485", dtype = "float64", shape = (39, 4))#candidate|1485|(39, 4)|var|float64
call_1484 = func_1211_call(relay.reshape(var_1485.astype('float64'), [1, 13, 12]))
call_1486 = func_1211_call(relay.reshape(var_1485.astype('float64'), [1, 13, 12]))
func_255_call = mod.get_global_var('func_255')
func_258_call = mutated_mod.get_global_var('func_258')
const_1488 = relay.const([-8.712117,-1.603236,6.594115,-0.946085,0.999898,-7.679468,0.780704,9.977776,-7.268328,-2.241720,-6.605801,2.185694,-6.978635,-7.584484,6.881002,2.560948,0.615055,-3.612233,-0.897943,2.000695,-0.694149,-8.926188,-4.115325,8.493623,-4.394230,-6.302173,-2.585656,-2.729873,-9.148016,-4.603948,7.741565,0.388600,3.920741,5.051175,8.746267,-4.770363,-1.643351,1.383361,-4.850831,-1.113112,9.100765,3.887919,-1.777254,-1.936496,-3.270073,-6.281816,2.535001,4.336892,0.732726,-6.512146,6.979961,-4.830090,6.942745,-0.926762,-0.550512,-4.232097,-3.018522,1.087011,8.019637,0.037015,5.600153,2.892415,2.887727,4.491915,5.028997,1.037995,-5.629164,8.816539,-4.528685,-8.887599,-1.689136,-6.257223,-2.150633,5.082738,3.307715,-2.434385,-9.362165,3.593184,-6.925968,-4.064076,-0.540040,-5.419519,-6.417346,6.546939,-2.719937,4.206073,-2.405123,2.322738,-7.929287,5.679892,6.945415,-9.933677,0.359986,1.074605,-0.997324,-0.121541,-7.191159,-8.240321,-1.481641,6.033780,5.709804,8.269630,-0.662757,-3.170184,4.240702,-3.716159,3.039662,-7.896706,4.147424,-9.864482,1.462068,-5.512949,-4.749076,-0.502435,-7.499995,4.244569,3.461238,-9.827938,7.104006,-4.663883,-1.372402,5.917880,2.151876,-8.217743,7.180127,-7.620595,3.194260,-7.522019,3.804943,-7.360880,-2.587644,8.890680,-4.972055,1.776622,5.106815,-9.369465,0.321739,8.970880,3.685983,1.544638,6.415485,-9.109479,-0.459987,-3.909641,7.045173,-4.778947,-8.343705,8.661066,1.940339,-7.775323,-1.966742,-7.763104,-2.712163,-6.164837,9.718924,-6.472728,-4.950341,-9.552041,-9.607481,-6.578552,0.276993,4.700640,5.450900,1.826449,-9.153964,3.220504,-7.906825,-8.694608,9.896584,9.339968,-8.549290,4.291278,-5.239652,7.730683,-4.246514,-6.434633,-1.514260,3.734330,6.415822,-7.931558,-1.548418,-1.264312,6.484720,5.962522,-5.270847,-9.153535,1.147144,3.648293,5.921641,-4.667328,-1.874876,2.940364,-6.419910,-2.082390,2.661295,8.451374,-2.534376,1.083861,-7.556833,5.693686,0.129227,9.217675,3.057989,-4.834283,-4.048563,4.063346,1.211541,9.424037,3.218168,6.403640,6.391486,3.218883,5.954327,8.652076,5.166711,-1.872264,-4.389311,1.475184,-4.000884,-0.763915,-9.699827,4.589589,0.218774,-1.116075,7.182409,5.484582,-4.053897,-1.880432,1.520156,-5.414896,-5.321165,7.988498,-4.412766,1.568599,-7.535781,1.680312,1.284604,0.579331,-4.517489,5.525343,1.785204,-8.387472,9.981647,5.935067,-2.656342,-4.934113,-0.019547,-4.282449,-8.346585,6.924633,4.834915,-9.775681,-7.762310,9.265603,4.299114,-8.219696,-7.233770,-3.151434,3.993263,-1.023456,1.741038,0.147112,6.375109,4.358130,3.833294,-3.729270,4.949621,0.055768,-4.663117,-5.702255,6.725425,7.605082,9.171927,-8.283325,3.669498,9.590058,5.903624,8.404146,-8.826873,-8.271600,2.533105,-3.159187,0.460342,-9.113824,9.031188,1.777925,9.710500,-0.082263,7.870856,-8.453126,9.497268,0.106346,-5.302385,6.936827,0.298548,-7.698656,6.799910,-5.851794,-3.922474,-0.552649,8.594448,-5.322653,-4.584257,-4.259784,1.320836,1.676161,-5.081866,8.436203,3.510493,6.868561,4.435348,1.963723,-8.414608,2.919299,7.913499,-7.665199,-8.730334,5.140229,5.324176,-2.037511,-2.859379,-6.628344,-4.674184,1.449290,-1.984952,8.980418,-7.300039,-4.441924,-3.446459,3.171779,-1.145560,-2.089651,8.203449,4.320089,9.523664,8.186162,3.919695,-8.000543,-4.807732,1.930608,-6.970417,-8.802670,-0.068810,-5.682313,-4.548094,-1.454557,7.018624,9.372398,-4.195465,-6.491958,-4.251807,-8.466231,4.319171,-3.588269,-1.599885,-7.017109,-9.389629,-4.033230,-3.360033,9.750390,-2.918969,2.458733,-8.583759,-8.887732,2.806473,5.103953,8.527613,-3.748652,-7.715559,-4.934181,-3.343825,-2.397231,1.469294,2.955512,2.322034,-9.211202,-4.846965,0.930270,1.889607,-2.135044,-9.112306,-1.183979,2.609186,-7.532605,0.785679,-1.988695,-7.633564,-3.009219,1.266430,2.222010,-1.706641,4.990432,0.354813,-5.985841,-9.350172,8.738845,-0.596673,-3.219285,-0.150494,4.100644,7.618157,-1.788437,-0.788139,4.186096,-2.865750,-9.866339,4.343304,-8.339733,5.780109,7.851723,9.046601,-7.794151,-4.892822,9.889020,-1.269334,9.724477,-0.061831,4.432435,-9.001209,5.325477,8.642085,-6.698285,9.510477,0.683762,6.526298,-6.385096,2.770285,-3.572836,-4.176852,4.698792,-0.590115,-5.564135,-8.795861,-1.477651,5.968239,1.048188,6.615026,2.091992,-4.670461,7.058492,8.404702,-4.753288,4.436553,-7.115078,-0.260798,-3.353906,-5.383639,-2.702903,-4.650837,-3.093085,-4.260988,-7.480592,9.399440,-0.813190,-3.483204,1.284782,9.336129,-9.775623,-0.570734,-2.907612,-7.399196,2.919701,-6.852651,5.670150,-9.756985,-0.686930,-7.953055,3.710918,-3.601490,6.454166,7.722271,-7.258729,2.172240,1.450317,2.656913,-1.754673,-7.782144,3.518285,8.327194,2.000231,-4.363323,-3.993408,-4.944710,-5.769493,1.632955,0.459366,-2.774415,-0.823313,8.775839,7.359592,0.599176,-9.296975,3.792731,-5.605864,9.657744,5.500176,1.202354,-4.961549,6.171932,-1.166671,-4.986656,2.750992,9.740268,-3.566790,-0.222940,-1.915272,-8.327770,3.917830,-6.870711,-4.398470,-8.092543,0.230663,-9.080004,9.245264,-7.874754,-8.625869,-7.911367,9.342753,4.160415,-6.216420,4.124337,-3.114781,8.160499,7.518177,8.568234,6.399289,6.559902,-6.033052,-4.178104,6.128097,1.225282,-2.809447,-6.720903,-0.876500,9.663400,4.586786,7.444622,-9.419295,1.867929,-9.505953,-5.365203,-4.994480,-5.221697,0.550730,8.270374,4.188819,-2.751996,-5.707886,6.311778,2.722718,5.436643,4.028958,-9.453563,5.061183,7.396397,-4.705785,-4.092129,-4.699691,7.784854,2.249422,-2.497343,-3.246861,-6.264312,8.601649,1.066949,0.042852,5.598516,4.418175,-5.420241,-6.302370,-9.174701,5.463749,0.023112,5.611017,8.961356,2.843430,1.922599,2.279798,-4.965027,1.358584,4.718583,-3.306346,1.150136,-5.515882,9.502726,0.502274,3.114890,-4.479160,-7.822940,-1.213205,-6.614672,-7.038073,7.539021,-5.888479,-1.233476,4.683703,-9.847771,2.387278,5.827250,5.016422,-8.548159,-3.088951,-4.892352,-2.273327,-6.996754,-3.620636,2.090532,-9.701633,-5.919090,-2.239005,-1.786679,-0.893445,-2.991856,-6.980538,7.439796,-1.545415,-6.940854,-0.499698,9.068718,-3.954966,4.441474,-1.223415,7.035653,2.969861,5.829841,-9.177067,6.401873,-7.204179,-1.254867,0.649319], dtype = "float64")#candidate|1488|(630,)|const|float64
call_1487 = relay.TupleGetItem(func_255_call(relay.reshape(const_1488.astype('float64'), [7, 6, 15]), relay.reshape(const_1488.astype('float64'), [7, 6, 15]), ), 0)
call_1489 = relay.TupleGetItem(func_258_call(relay.reshape(const_1488.astype('float64'), [7, 6, 15]), relay.reshape(const_1488.astype('float64'), [7, 6, 15]), ), 0)
output = relay.Tuple([call_1469,call_1474,call_1484,var_1485,call_1487,const_1488,])
output2 = relay.Tuple([call_1470,call_1475,call_1486,var_1485,call_1489,const_1488,])
func_1517 = relay.Function([var_1485,], output)
mod['func_1517'] = func_1517
mod = relay.transform.InferType()(mod)
var_1518 = relay.var("var_1518", dtype = "float64", shape = (39, 4))#candidate|1518|(39, 4)|var|float64
output = func_1517(var_1518)
func_1519 = relay.Function([var_1518], output)
mutated_mod['func_1519'] = func_1519
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1389_call = mod.get_global_var('func_1389')
func_1390_call = mutated_mod.get_global_var('func_1390')
call_1556 = relay.TupleGetItem(func_1389_call(), 0)
call_1557 = relay.TupleGetItem(func_1390_call(), 0)
output = call_1556
output2 = call_1557
func_1575 = relay.Function([], output)
mod['func_1575'] = func_1575
mod = relay.transform.InferType()(mod)
mutated_mod['func_1575'] = func_1575
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1575_call = mutated_mod.get_global_var('func_1575')
call_1576 = func_1575_call()
output = call_1576
func_1577 = relay.Function([], output)
mutated_mod['func_1577'] = func_1577
mutated_mod = relay.transform.InferType()(mutated_mod)
const_1584 = relay.const([[[-9,4,5],[-8,4,9],[-4,-4,8],[-4,-9,-5],[-1,-7,-5],[8,3,-7]]], dtype = "int32")#candidate|1584|(1, 6, 3)|const|int32
const_1585 = relay.const([[[-1,7,-8],[1,-9,-3],[5,8,-8],[-6,-3,-3],[-2,2,-3],[7,9,-4]]], dtype = "int32")#candidate|1585|(1, 6, 3)|const|int32
bop_1586 = relay.less(const_1584.astype('bool'), relay.reshape(const_1585.astype('bool'), relay.shape_of(const_1584))) # shape=(1, 6, 3)
output = bop_1586
output2 = bop_1586
func_1597 = relay.Function([], output)
mod['func_1597'] = func_1597
mod = relay.transform.InferType()(mod)
output = func_1597()
func_1598 = relay.Function([], output)
mutated_mod['func_1598'] = func_1598
mutated_mod = relay.transform.InferType()(mutated_mod)
func_888_call = mod.get_global_var('func_888')
func_889_call = mutated_mod.get_global_var('func_889')
call_1599 = relay.TupleGetItem(func_888_call(), 0)
call_1600 = relay.TupleGetItem(func_889_call(), 0)
func_1076_call = mod.get_global_var('func_1076')
func_1079_call = mutated_mod.get_global_var('func_1079')
const_1607 = relay.const([7.218289,-0.065338,7.332584,9.263021,-9.162403,5.178726,2.015360,-2.932027,0.609085,4.912449,5.582303,6.169132,0.254386,-2.875897,-4.608263,2.455779,-0.970558,9.170882,-5.346961,2.251536,6.194998,3.099056,-5.532408,-0.061908,9.136214,9.877825,-1.555264,4.758432,5.058101,-4.761020,7.137292,-0.353673,-7.204188,3.172038,-2.236974,2.249957,0.358543,-9.498933,-2.479177,1.640518,1.142053,-0.452493,1.088969,8.697163,-5.418859,1.205958,-4.516211,0.580392,8.827248,8.496377,1.546460,4.444422,6.516761,-3.870428,-6.386894,1.328184,4.638709,0.764053,4.094838,8.546640,-6.823882,3.528034,-9.087399,0.189292,3.516086,9.578225,-3.362769,-5.464015,3.336713,2.352401,-8.929999,4.608256,6.047008,1.381191,0.223491,-0.173624,7.158429,-0.440132,-3.210326,0.226614,1.409547,7.657586,7.315754,5.274530,-2.243998,-7.174333,-5.406385,-8.881837,-7.834342,-4.888846,1.049844,2.269313,2.147661,-2.789251,-1.859386,8.252388,8.835531,2.368628,-6.465766,2.401229,5.356131,-3.396173,3.846274,7.523248,-0.433100,4.320624,-0.789928,-4.892164,7.949175,-4.757740,-9.887140,4.391599,-3.708373,-5.145260,0.636504,5.376153,4.143532,-3.780254,6.238552,-7.577601,-4.118552,9.341186,-7.480376,-5.404629,-7.155978,4.984923,-1.878903,-1.726831,6.986356,-1.022112,-8.332824,-5.350470,7.201572,-6.299580,-4.112858,-5.891545,7.236111,-8.885253,2.860210,3.878529,1.180401,-2.837558,2.052248,-2.598051,9.595818,8.093397,-1.049091,5.697031,2.445816,-1.774844,-6.915145,-5.074368,-2.692463,1.755471,6.160387,-0.797680,-3.114676,-3.309942,6.799002,-6.617588,4.002948,9.248296,5.920816,7.192068,-9.892155,0.803774,-5.932658,-5.988747,-5.226789,-0.661686,-5.630609,-4.496164,4.296324,-1.504827,4.656234,1.384700,0.299117,-2.922527,9.858485,8.797805,-8.348350,-3.608822,-9.785106,1.916536,9.466198,-5.294418,-4.621363,-0.201872,5.852119,5.633317,2.489056,-5.697459,1.903850,-5.504111,-9.252130,-6.768540,-9.428427,-9.665082,-6.722994,3.674986,9.771125,8.127217,-9.963667,-2.759262,4.210661,-7.281825,-4.685189,7.656119,9.754708,7.100508,9.957975,-5.696415,-2.691170,-1.450922,9.699892,-2.017187,5.538621,-2.214696,4.546028,5.704670,-2.266216,-5.439907,-7.352699,-5.977337,0.231341,-5.817171,-2.520173,-2.334186,3.186293,6.263719,-9.492275,3.577328,0.757949,9.988515,-3.747185,5.886647,-4.419110,-7.872978,5.773132,-5.320322,-4.153715,3.332573,-0.644350,6.716961,-3.632474,-8.673354,0.344732,-7.999420,4.816155,2.001158,2.094040,4.638326,-9.303647,-3.877767,-5.030669,-0.567497,2.508520,2.555444,4.695773,5.463802,8.314459,-9.521231,-1.691047,-4.956800,-0.423918,2.108836,-2.332954,8.431550,-2.481681,6.315400,6.119791,0.439786,3.487720,-7.522456,-2.194047,3.286689,4.431377,-9.452026,-0.362309,1.968201,-2.621067,-6.207462,2.288755,-6.972752,-2.449863,6.878960,6.882028,-8.857280,5.883177,-5.166901,1.860486,-2.808296,0.294305,-0.306647,6.485573,5.707071,-0.406280,-6.685543,9.227100,-0.765475,-3.547615,7.953719,-9.135099,1.391011,-9.500194,1.857359,1.266710,-5.058054,-5.906706,-8.188074,3.965555,-2.430730,-6.272359,4.145785,3.158947,2.447851,8.800293,6.055422,-6.434219,-2.089629,-7.611432,-9.926870,7.165615,0.090244,6.844434,5.316582,7.146456,8.583988,-4.258388,9.515164,-5.542200,-1.919322,-3.676072,9.936193,-7.897960,9.992677,-7.178496,-1.915564,1.524564,1.813417,1.223495,5.580603,-3.587730,-6.207258,7.880665,-2.820481,-1.643422,-3.197133,3.748008,-5.322385,4.207999,-9.983773,5.785967,4.650792,-1.654367,-0.154204,0.575160,-2.476985,-6.709206,-4.147417], dtype = "float64")#candidate|1607|(360,)|const|float64
const_1608 = relay.const(1, dtype = "int8")#candidate|1608|()|const|int8
call_1606 = relay.TupleGetItem(func_1076_call(relay.reshape(const_1607.astype('float64'), [180, 2]), relay.reshape(const_1608.astype('int8'), []), ), 6)
call_1609 = relay.TupleGetItem(func_1079_call(relay.reshape(const_1607.astype('float64'), [180, 2]), relay.reshape(const_1608.astype('int8'), []), ), 6)
output = relay.Tuple([call_1599,call_1606,const_1607,const_1608,])
output2 = relay.Tuple([call_1600,call_1609,const_1607,const_1608,])
func_1626 = relay.Function([], output)
mod['func_1626'] = func_1626
mod = relay.transform.InferType()(mod)
output = func_1626()
func_1627 = relay.Function([], output)
mutated_mod['func_1627'] = func_1627
mutated_mod = relay.transform.InferType()(mutated_mod)
func_888_call = mod.get_global_var('func_888')
func_889_call = mutated_mod.get_global_var('func_889')
call_1650 = relay.TupleGetItem(func_888_call(), 0)
call_1651 = relay.TupleGetItem(func_889_call(), 0)
output = call_1650
output2 = call_1651
func_1660 = relay.Function([], output)
mod['func_1660'] = func_1660
mod = relay.transform.InferType()(mod)
mutated_mod['func_1660'] = func_1660
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1660_call = mutated_mod.get_global_var('func_1660')
call_1661 = func_1660_call()
output = call_1661
func_1662 = relay.Function([], output)
mutated_mod['func_1662'] = func_1662
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1575_call = mod.get_global_var('func_1575')
func_1577_call = mutated_mod.get_global_var('func_1577')
call_1678 = func_1575_call()
call_1679 = func_1575_call()
output = call_1678
output2 = call_1679
func_1688 = relay.Function([], output)
mod['func_1688'] = func_1688
mod = relay.transform.InferType()(mod)
mutated_mod['func_1688'] = func_1688
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1688_call = mutated_mod.get_global_var('func_1688')
call_1689 = func_1688_call()
output = call_1689
func_1690 = relay.Function([], output)
mutated_mod['func_1690'] = func_1690
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1626_call = mod.get_global_var('func_1626')
func_1627_call = mutated_mod.get_global_var('func_1627')
call_1699 = relay.TupleGetItem(func_1626_call(), 1)
call_1700 = relay.TupleGetItem(func_1627_call(), 1)
func_1211_call = mod.get_global_var('func_1211')
func_1213_call = mutated_mod.get_global_var('func_1213')
const_1719 = relay.const([[-3.337164,-0.105594,-1.885546,8.144659,-0.083167,1.596153,3.559217,3.923741,-7.302152,-9.443535,-8.942835,2.932407,8.024469,7.319933,-0.603166,-3.588128,-2.438804,1.268801,5.871489,0.019580,-6.821671,7.259564,0.808619,-1.243232,3.055179,-4.185183,7.026307,-6.910213,-2.820549,0.476256,-1.738710,8.344748,-1.349818,-0.163468,-2.763143,1.296342,-6.818446,-0.248551,-6.638805,7.332206,4.894717,4.220234,5.531052,1.263945,8.942532,-0.189955,-2.448361,-3.268689,7.392070,4.436177,-6.291271,-7.925911],[1.040169,-7.298835,5.724990,7.035410,2.921459,0.317063,-0.457668,4.271063,3.953091,-8.187996,5.923657,0.128939,9.242202,-0.385064,2.855592,-0.325040,7.978061,-6.543023,-5.970469,3.379985,-7.121471,-9.520479,-8.784634,-5.371903,-1.940447,5.313498,4.080291,-9.338329,3.566735,-4.479398,5.976172,7.110751,5.207042,4.812416,-8.527957,-1.606931,1.553154,4.695929,-9.974283,-0.570996,-9.111234,-2.283533,-5.459533,-1.219246,-6.517530,-5.235865,7.350475,-6.225789,-6.747468,-3.767122,1.249075,7.972399],[-7.562035,-2.530687,0.746832,6.241952,-2.747930,2.456240,-2.667043,5.202431,2.121342,-8.797165,0.123664,4.171102,-3.731673,-1.340621,-3.249811,-4.534970,5.250567,1.417221,0.250416,-7.733542,3.895478,-5.058463,-6.187685,-0.873058,-6.376723,-3.573575,9.324252,5.150293,-8.624430,8.139956,0.322678,6.384518,-6.638883,5.203865,0.931504,-1.243379,-1.507917,-0.806308,-5.813802,-2.777251,8.033939,-0.577242,-5.067095,-0.763755,-6.685841,-9.847320,9.089268,-9.269427,-9.205242,-7.309577,4.798249,-0.233808]], dtype = "float64")#candidate|1719|(3, 52)|const|float64
call_1718 = func_1211_call(relay.reshape(const_1719.astype('float64'), [1, 13, 12]))
call_1720 = func_1211_call(relay.reshape(const_1719.astype('float64'), [1, 13, 12]))
output = relay.Tuple([call_1699,call_1718,const_1719,])
output2 = relay.Tuple([call_1700,call_1720,const_1719,])
func_1725 = relay.Function([], output)
mod['func_1725'] = func_1725
mod = relay.transform.InferType()(mod)
mutated_mod['func_1725'] = func_1725
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1725_call = mutated_mod.get_global_var('func_1725')
call_1726 = func_1725_call()
output = call_1726
func_1727 = relay.Function([], output)
mutated_mod['func_1727'] = func_1727
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1688_call = mod.get_global_var('func_1688')
func_1690_call = mutated_mod.get_global_var('func_1690')
call_1771 = func_1688_call()
call_1772 = func_1688_call()
func_1335_call = mod.get_global_var('func_1335')
func_1338_call = mutated_mod.get_global_var('func_1338')
const_1783 = relay.const([3,-6,-9,7,-6,-4,-10,-10,6,-7,-10,-3,4,1,9,1,-10,-6,-7,9,-6,4,-7,-3,4,8,-8,10,-6,-4,-9,-8,-3,-7,7,-6,2,3,8,-4,7,-8,-5,-9,-9,8,1,8,2,6,3,4,-6,5,-4,-6,-1,8,-3,8,1,10,4,5,5,-5,7,-4,-6,-7,-7,1,-7,7,5,4,1,-5,-3,-1,4,-5,-3,4,-7,2,-3,-4,-2,-2,4,3,9,-2,-10,9,9,7,-4,-3,-1,4,10,4,-7,-10,-2,10,-3,-4,-5,1,8,10,-8,-2,10,2,-4,-3,-5,-1,6,-10,4,-5,8,7,-3,-9,-9,-9,9,-10,-10,-1,6,1,5,-2,-7,2,-1,3,-5,5,3,5,-5,-4,-8,9,-1,5,-4,-7,-3,6,7,8,-2,-7,6,9,-9,-8,10,-10,-8,6,-3,10,-1,10,6,1,-10,6,-10,-1,8,5,-5,-6,9,4,7,8,2,8,-5,-9,5,4,10,4,5,5,-4,4,5,7,-3,9,-10,-7,-4,-1,2,6,-1,10,-2,5,-6,-1,-8,-2,-3,8,8,10,4,2,-7,5,-3,-1,10,2,4,8,4,-2,-2,10,-8,3,4,-7,8,-6,-7,-5,-2,2,2,7,-1,-3,-1,-5,5,-2,-5,-9,-1,3,1,-4,7,-10,-9,5,8,-2,-2,2,7,6,1,5,10,9,-10,-4,-2,-7,1,-10,1,10,1,1,-5,9,2,-7,6,2,10,2,-2,2,3,4,4,-5,5,-2,-3,-6,7,-7,-1,8,7,-5,10,-2,-1,-5,10,9,-6,-6,4,-5,-5,-5,-3,10,-4,9,-2,7,9,8,1,-5,-10,9,-4,8,-7,8,7,-2,-10,-7,3,-6,5,2,-3,7,9,-9,8,-2,10,7,-7,10,-9,2,10,-4,3,-3,4,-10,-3,6,6,-8,-10,-6,3,4,3,-6,3,-10,-8,3,-2,-3,-3,8,-6,8,3,-3,-9,10,3,5,-8,4], dtype = "int32")#candidate|1783|(390,)|const|int32
call_1782 = relay.TupleGetItem(func_1335_call(relay.reshape(const_1783.astype('int32'), [390,])), 1)
call_1784 = relay.TupleGetItem(func_1338_call(relay.reshape(const_1783.astype('int32'), [390,])), 1)
output = relay.Tuple([call_1771,call_1782,const_1783,])
output2 = relay.Tuple([call_1772,call_1784,const_1783,])
func_1792 = relay.Function([], output)
mod['func_1792'] = func_1792
mod = relay.transform.InferType()(mod)
output = func_1792()
func_1793 = relay.Function([], output)
mutated_mod['func_1793'] = func_1793
mutated_mod = relay.transform.InferType()(mutated_mod)
var_1843 = relay.var("var_1843", dtype = "uint64", shape = (2, 10, 4))#candidate|1843|(2, 10, 4)|var|uint64
var_1844 = relay.var("var_1844", dtype = "uint64", shape = (2, 10, 4))#candidate|1844|(2, 10, 4)|var|uint64
bop_1845 = relay.not_equal(var_1843.astype('bool'), relay.reshape(var_1844.astype('bool'), relay.shape_of(var_1843))) # shape=(2, 10, 4)
output = bop_1845
output2 = bop_1845
func_1848 = relay.Function([var_1843,var_1844,], output)
mod['func_1848'] = func_1848
mod = relay.transform.InferType()(mod)
mutated_mod['func_1848'] = func_1848
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1848_call = mutated_mod.get_global_var('func_1848')
var_1850 = relay.var("var_1850", dtype = "uint64", shape = (2, 10, 4))#candidate|1850|(2, 10, 4)|var|uint64
var_1851 = relay.var("var_1851", dtype = "uint64", shape = (2, 10, 4))#candidate|1851|(2, 10, 4)|var|uint64
call_1849 = func_1848_call(var_1850,var_1851,)
output = call_1849
func_1852 = relay.Function([var_1850,var_1851,], output)
mutated_mod['func_1852'] = func_1852
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1688_call = mod.get_global_var('func_1688')
func_1690_call = mutated_mod.get_global_var('func_1690')
call_1864 = func_1688_call()
call_1865 = func_1688_call()
output = call_1864
output2 = call_1865
func_1877 = relay.Function([], output)
mod['func_1877'] = func_1877
mod = relay.transform.InferType()(mod)
mutated_mod['func_1877'] = func_1877
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1877_call = mutated_mod.get_global_var('func_1877')
call_1878 = func_1877_call()
output = call_1878
func_1879 = relay.Function([], output)
mutated_mod['func_1879'] = func_1879
mutated_mod = relay.transform.InferType()(mutated_mod)
var_1980 = relay.var("var_1980", dtype = "int32", shape = (16, 15, 1))#candidate|1980|(16, 15, 1)|var|int32
const_1981 = relay.const([[[-2,8],[-4,8],[-5,3],[-5,1],[-10,4],[-7,-10],[8,-4],[4,1],[-5,-5],[7,2],[-8,-7],[4,2],[-6,-8],[1,-5],[-3,4]],[[-9,3],[-7,4],[2,7],[8,4],[1,-8],[4,2],[-3,4],[10,-5],[-6,-2],[9,-6],[-1,-4],[4,-3],[-5,2],[8,-5],[-4,8]],[[9,-10],[4,-6],[9,5],[-3,-1],[6,-2],[6,10],[-9,-4],[4,-5],[-7,-5],[-9,5],[1,8],[-10,2],[2,7],[-7,1],[-2,7]],[[10,8],[-10,-10],[6,-9],[-7,2],[7,-3],[6,-8],[-9,-9],[5,-8],[1,-4],[-2,2],[-10,-4],[9,6],[10,4],[1,10],[-10,-2]],[[4,-1],[7,6],[10,7],[10,-8],[-9,-4],[6,-4],[-9,-7],[-3,7],[1,4],[3,-9],[-9,-4],[-8,-7],[-9,-6],[8,-1],[6,5]],[[7,7],[-2,-5],[-3,8],[1,-1],[4,-7],[-9,-5],[-5,-2],[-6,-10],[-1,-10],[10,-7],[-2,-6],[-7,-3],[7,4],[-5,10],[9,10]],[[-3,8],[-9,-8],[-6,3],[2,-2],[-8,-1],[-6,-10],[-6,-10],[-6,-8],[-3,4],[7,-3],[7,-10],[7,7],[6,10],[-5,-3],[-3,-5]],[[3,8],[2,-8],[-4,-1],[-6,1],[2,9],[-7,9],[1,4],[5,3],[-5,-4],[4,7],[4,2],[-8,5],[2,9],[5,3],[10,-10]],[[-9,2],[7,-2],[-9,-1],[-6,5],[6,5],[4,-1],[-1,-2],[4,-5],[6,-6],[5,-4],[-6,9],[7,-9],[4,5],[7,4],[10,1]],[[10,4],[7,-7],[-9,-9],[5,8],[-4,7],[10,-5],[-5,7],[6,9],[5,-10],[-5,-5],[9,9],[5,-7],[6,-6],[-5,-5],[1,8]],[[-3,-1],[-4,1],[9,6],[-3,3],[-4,-7],[-6,9],[6,-4],[10,-4],[2,-1],[8,8],[9,7],[-8,-10],[-3,-5],[9,-2],[7,-2]],[[9,10],[-1,10],[1,7],[9,-2],[6,-1],[8,-8],[9,-2],[6,-5],[-9,-8],[4,-10],[-3,6],[2,-3],[1,-5],[-10,-8],[3,-7]],[[-5,3],[7,-6],[9,-7],[4,-6],[-5,-3],[3,-7],[-3,3],[-4,-4],[-3,3],[-10,3],[7,-4],[5,-7],[9,7],[8,-6],[-9,-6]],[[9,10],[-10,-4],[-3,2],[8,1],[5,4],[-8,9],[-6,-8],[4,-8],[5,-7],[-2,-7],[-1,-7],[2,10],[5,-3],[-6,-10],[7,-5]],[[-3,6],[-10,5],[7,9],[9,-4],[-3,10],[10,-3],[-8,-7],[3,8],[5,-6],[-8,-9],[2,-2],[5,4],[2,-7],[1,-9],[7,6]],[[7,7],[-9,-1],[5,3],[-9,10],[2,-3],[10,-9],[4,-10],[3,2],[-1,4],[-4,-8],[-6,-6],[-7,-10],[-10,5],[6,9],[-9,2]]], dtype = "int32")#candidate|1981|(16, 15, 2)|const|int32
bop_1982 = relay.multiply(var_1980.astype('int32'), const_1981.astype('int32')) # shape=(16, 15, 2)
uop_1986 = relay.log(bop_1982.astype('float32')) # shape=(16, 15, 2)
output = relay.Tuple([uop_1986,])
output2 = relay.Tuple([uop_1986,])
func_1991 = relay.Function([var_1980,], output)
mod['func_1991'] = func_1991
mod = relay.transform.InferType()(mod)
mutated_mod['func_1991'] = func_1991
mutated_mod = relay.transform.InferType()(mutated_mod)
var_1992 = relay.var("var_1992", dtype = "int32", shape = (16, 15, 1))#candidate|1992|(16, 15, 1)|var|int32
func_1991_call = mutated_mod.get_global_var('func_1991')
call_1993 = func_1991_call(var_1992)
output = call_1993
func_1994 = relay.Function([var_1992], output)
mutated_mod['func_1994'] = func_1994
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1877_call = mod.get_global_var('func_1877')
func_1879_call = mutated_mod.get_global_var('func_1879')
call_1999 = func_1877_call()
call_2000 = func_1877_call()
output = relay.Tuple([call_1999,])
output2 = relay.Tuple([call_2000,])
func_2005 = relay.Function([], output)
mod['func_2005'] = func_2005
mod = relay.transform.InferType()(mod)
output = func_2005()
func_2006 = relay.Function([], output)
mutated_mod['func_2006'] = func_2006
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1660_call = mod.get_global_var('func_1660')
func_1662_call = mutated_mod.get_global_var('func_1662')
call_2012 = func_1660_call()
call_2013 = func_1660_call()
output = relay.Tuple([call_2012,])
output2 = relay.Tuple([call_2013,])
func_2020 = relay.Function([], output)
mod['func_2020'] = func_2020
mod = relay.transform.InferType()(mod)
output = func_2020()
func_2021 = relay.Function([], output)
mutated_mod['func_2021'] = func_2021
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2020_call = mod.get_global_var('func_2020')
func_2021_call = mutated_mod.get_global_var('func_2021')
call_2063 = relay.TupleGetItem(func_2020_call(), 0)
call_2064 = relay.TupleGetItem(func_2021_call(), 0)
output = relay.Tuple([call_2063,])
output2 = relay.Tuple([call_2064,])
func_2067 = relay.Function([], output)
mod['func_2067'] = func_2067
mod = relay.transform.InferType()(mod)
output = func_2067()
func_2068 = relay.Function([], output)
mutated_mod['func_2068'] = func_2068
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1792_call = mod.get_global_var('func_1792')
func_1793_call = mutated_mod.get_global_var('func_1793')
call_2069 = relay.TupleGetItem(func_1792_call(), 1)
call_2070 = relay.TupleGetItem(func_1793_call(), 1)
var_2077 = relay.var("var_2077", dtype = "uint64", shape = (15, 13, 2))#candidate|2077|(15, 13, 2)|var|uint64
bop_2078 = relay.maximum(call_2069.astype('float64'), relay.reshape(var_2077.astype('float64'), relay.shape_of(call_2069))) # shape=(15, 13, 2)
bop_2081 = relay.maximum(call_2070.astype('float64'), relay.reshape(var_2077.astype('float64'), relay.shape_of(call_2070))) # shape=(15, 13, 2)
output = bop_2078
output2 = bop_2081
func_2086 = relay.Function([var_2077,], output)
mod['func_2086'] = func_2086
mod = relay.transform.InferType()(mod)
mutated_mod['func_2086'] = func_2086
mutated_mod = relay.transform.InferType()(mutated_mod)
var_2087 = relay.var("var_2087", dtype = "uint64", shape = (15, 13, 2))#candidate|2087|(15, 13, 2)|var|uint64
func_2086_call = mutated_mod.get_global_var('func_2086')
call_2088 = func_2086_call(var_2087)
output = call_2088
func_2089 = relay.Function([var_2087], output)
mutated_mod['func_2089'] = func_2089
mutated_mod = relay.transform.InferType()(mutated_mod)
var_2110 = relay.var("var_2110", dtype = "float32", shape = (3, 7, 14))#candidate|2110|(3, 7, 14)|var|float32
uop_2111 = relay.acos(var_2110.astype('float32')) # shape=(3, 7, 14)
func_1517_call = mod.get_global_var('func_1517')
func_1519_call = mutated_mod.get_global_var('func_1519')
const_2131 = relay.const([-3.613359,-3.356556,-9.259810,1.997003,0.938472,-8.190771,7.716006,3.219652,2.395162,1.582785,6.101386,-5.508985,-6.838574,-8.411755,2.446702,6.737778,8.023904,8.939340,-6.855229,-1.527037,0.082589,4.665792,-1.450876,1.727298,0.511904,8.032417,1.086754,8.235319,-3.160614,4.502293,7.905318,9.864634,-6.213306,-4.998644,1.063190,-5.694017,-3.924281,8.437185,-4.033258,-5.434284,3.496068,5.425737,9.927881,7.423427,-0.620974,4.958377,9.164733,-7.974626,3.218255,1.817035,-3.421928,-7.451825,6.683028,0.440882,-5.174944,9.013430,-2.130194,-7.599482,-8.461067,0.844003,4.180131,-1.706380,7.258019,-0.711780,-9.674948,9.493432,-2.283740,6.536605,-2.098203,2.045576,-8.961152,-3.670152,4.127524,-2.373985,-0.848497,2.806532,7.316057,8.707926,-7.488758,9.434481,7.994929,1.347831,-4.906781,8.850863,-6.840981,9.029431,6.750763,7.505055,7.420676,-8.313149,2.283033,5.065341,-7.684878,3.416305,-0.649923,9.963213,5.908064,4.122825,5.282626,-8.185239,-2.699110,-8.950231,-6.951737,-5.868977,4.475668,7.025193,-9.895327,1.566138,8.354158,-3.142426,-1.137651,7.864303,-8.703882,3.374044,0.697860,8.706581,-0.826792,-7.076997,9.272679,-9.418373,0.349122,3.006045,-1.102722,-6.637234,8.576229,6.557195,-4.913161,-8.669332,-9.744629,-1.929971,8.870376,4.943453,5.752513,-0.078241,-9.294838,-7.263773,6.229816,-3.895140,-1.274476,3.814028,7.331539,6.304991,-8.539006,-9.999669,-6.672568,-2.818426,7.969647,2.093449,4.251318,6.802637,-6.142495,-9.784486,-1.221920,8.226771,4.816305,-3.622925], dtype = "float64")#candidate|2131|(156,)|const|float64
call_2130 = relay.TupleGetItem(func_1517_call(relay.reshape(const_2131.astype('float64'), [39, 4])), 2)
call_2132 = relay.TupleGetItem(func_1519_call(relay.reshape(const_2131.astype('float64'), [39, 4])), 2)
uop_2154 = relay.cosh(var_2110.astype('float64')) # shape=(3, 7, 14)
func_2086_call = mod.get_global_var('func_2086')
func_2089_call = mutated_mod.get_global_var('func_2089')
var_2162 = relay.var("var_2162", dtype = "uint64", shape = (390,))#candidate|2162|(390,)|var|uint64
call_2161 = func_2086_call(relay.reshape(var_2162.astype('uint64'), [15, 13, 2]))
call_2163 = func_2086_call(relay.reshape(var_2162.astype('uint64'), [15, 13, 2]))
var_2167 = relay.var("var_2167", dtype = "float64", shape = (3, 7, 14))#candidate|2167|(3, 7, 14)|var|float64
bop_2168 = relay.left_shift(uop_2154.astype('uint32'), relay.reshape(var_2167.astype('uint32'), relay.shape_of(uop_2154))) # shape=(3, 7, 14)
output = relay.Tuple([uop_2111,call_2130,const_2131,call_2161,var_2162,bop_2168,])
output2 = relay.Tuple([uop_2111,call_2132,const_2131,call_2163,var_2162,bop_2168,])
func_2171 = relay.Function([var_2110,var_2162,var_2167,], output)
mod['func_2171'] = func_2171
mod = relay.transform.InferType()(mod)
var_2172 = relay.var("var_2172", dtype = "float32", shape = (3, 7, 14))#candidate|2172|(3, 7, 14)|var|float32
var_2173 = relay.var("var_2173", dtype = "uint64", shape = (390,))#candidate|2173|(390,)|var|uint64
var_2174 = relay.var("var_2174", dtype = "float64", shape = (3, 7, 14))#candidate|2174|(3, 7, 14)|var|float64
output = func_2171(var_2172,var_2173,var_2174,)
func_2175 = relay.Function([var_2172,var_2173,var_2174,], output)
mutated_mod['func_2175'] = func_2175
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2005_call = mod.get_global_var('func_2005')
func_2006_call = mutated_mod.get_global_var('func_2006')
call_2211 = relay.TupleGetItem(func_2005_call(), 0)
call_2212 = relay.TupleGetItem(func_2006_call(), 0)
output = call_2211
output2 = call_2212
func_2225 = relay.Function([], output)
mod['func_2225'] = func_2225
mod = relay.transform.InferType()(mod)
output = func_2225()
func_2226 = relay.Function([], output)
mutated_mod['func_2226'] = func_2226
mutated_mod = relay.transform.InferType()(mutated_mod)
var_2229 = relay.var("var_2229", dtype = "float64", shape = (1, 1, 13))#candidate|2229|(1, 1, 13)|var|float64
uop_2230 = relay.rsqrt(var_2229.astype('float64')) # shape=(1, 1, 13)
func_548_call = mod.get_global_var('func_548')
func_551_call = mutated_mod.get_global_var('func_551')
const_2233 = relay.const([-6.251486,8.667704,9.655977,-2.632460,6.361172,-6.532502,9.775484,-2.965737,-8.831772,-2.502588,-6.154120,7.966554,4.515843,-6.457876,5.007969,1.941674,1.200589,2.066127,6.516418,2.400527,-9.156814,4.789334,-7.885602,-3.931192,-3.910279,-3.847147,8.810960,-6.226730,-6.127006,9.330689,4.248232,-9.086177,0.881292,1.220703,5.543251,6.571770,-6.480229,-5.482147,-9.154086,7.588965,1.226401,4.906366,-0.869157,9.355166,7.613226,-4.925460,7.969404,4.630323,-1.794311,3.542570,1.996874,6.542963,0.639467,-6.117376,-9.503238,-5.234496,9.451141,-5.103269,4.675545,2.535666,3.716064,-2.577226,-4.471878,1.142554,-0.280736,-8.776996,-7.345605,-1.574093,1.865670,5.838697,-0.124970,1.162306,-6.551725,1.275212,5.268524,-1.565686,6.975655,6.578038,-2.177392,-8.909813,0.110964,-4.810499,6.377222,9.705789,-6.525814,-1.760742,-6.938634,-7.129084,-2.650769,8.523648,-4.021722,-7.849523,-0.537557,4.704389,-4.335331,0.628448,5.143016,7.848606,-4.932570,5.540292,-5.610436,-9.380095,-9.229426,2.946670,-8.976988,-9.789668,-7.988466,-8.246414,8.899982,1.297890,-9.308551,2.961557,-6.236903,-5.287015,-3.618895,8.226485,2.392289,8.599147,1.647920,-6.574186,5.730006,-9.966703,1.970549,-5.890812,6.080240,1.043406,3.768475,5.471911,2.172609,-2.524493,9.637695,-2.536484,6.916632,-0.165590,-1.499069,5.751937,-6.693668,2.513222,-6.329285,-5.099373,3.790654,1.058452,-4.836286,4.292885,-4.938608,2.041528,3.066052,1.937144,-6.518063,5.314117,-6.992060,-7.670372,5.922106,4.408053,-8.807800,2.824938,8.684087,-5.876731,2.889361,6.701547,8.008660,5.762290,6.479961,-4.981338,8.442030,-5.998460,-8.771292,-4.960311,7.653482,0.089869,0.570681,2.398185,-8.891834,-8.367799,4.596738,2.891669,0.553432,-7.760047,3.446755,-9.073607,-5.506528,0.292638,8.424971,-0.262234,9.321615,-7.032829,-2.551811,0.214195,3.334228,-2.530928,9.900624,-2.212489,7.737956,9.906733,3.867824,8.657220,5.624843,-5.793547,-8.259150,6.146986,-5.305881,-2.775993,3.065380,9.802837,5.130701,-3.068928,-6.264661,7.368620,2.162060,-0.606368,-6.592421,-7.313026,-0.935704,2.792890,-8.556478,-8.495679,-8.148856,4.218146,-7.260407,3.992132,4.933137,3.262226,-4.075666,0.120907,0.556543,-6.222149,6.736892,7.416079,0.780665,-1.015017,4.493168,-5.544128,4.521347,-8.159875,6.615155,5.296548,3.201388,-2.920063,-5.528495,2.813306,9.514576,6.700731,-8.196336,6.400808,9.775599,9.017904,-9.670001,1.849915,-4.939845,-4.428061,2.899311,-8.425234,-0.016464,-3.024868,-9.900285,-4.103007,2.172502,-5.027731,3.560168,2.724768,6.325500,3.406267,-0.802440,1.304050,-9.414272,-3.707570,6.685677,-6.780953,3.961535,-9.091343,-7.323941,-7.050570,2.729269,-6.512941,-8.036974,1.325850,-5.099468,9.193127,5.062812,4.050535,-9.831921,2.069066,-7.343314,7.001107,-6.404643,1.936025,3.429504,-8.500476,-5.141126,2.456469,-8.875415,-8.056782,8.017419,-0.671407,-9.110269,7.545928,1.744655,5.744021,-3.955671,-6.432259,-1.286321,-5.166277,7.657194,-2.742504,1.671191,-9.949892,4.463393,-8.968213,-1.572211,2.174699,3.695822,-9.758827,-0.962997,-8.179254,-1.471789,7.736913,2.787802,-5.106251,1.670889,-9.953527,-6.389189,-1.821745,-8.831080,8.416641,6.522032,6.008226,1.755257,-1.381601,7.374599,-0.758225,3.129907,0.201308,4.683478,7.680793,-7.192131,6.858288,-9.980676,-4.936277,8.175397,5.902057,8.482337,3.070115,-4.880033,-7.218334,-3.903508,-2.900953,-9.516587,-1.478464,3.521527,-5.323139,-7.058373,2.676572,-7.988255,3.631674,7.734631,-8.966073,6.119257,3.312960,1.489220,-8.466074,-6.880035,2.807911,-9.513476,8.521941,7.665193,1.568361,8.774253,-4.917882,9.343006,8.291353,2.664088,2.258735,5.471148,-4.437574,-2.986924,3.385640,2.231920,9.298570,-9.383262,-1.386129,5.786185,7.972239,-6.411821,-1.204164,6.530442,-1.184316,5.845811,-4.024112,-3.180438,-5.375490,3.403801,7.287339,-5.935495,-3.053207,4.855913,0.154688,-7.324991,-8.157185,-4.252061,-1.654526,-9.863055,-9.765717,-8.313664,2.723406,-9.064901,7.552458,3.154481,-3.951313,-0.241405,-9.311051,9.669346,-8.054725,2.392643,-4.866428,8.516225,1.239727,9.862437,4.934865,-8.120127,-1.024519,-4.564733,-1.250675,5.773945,-4.095365,3.881571,6.257610,-7.805259,8.185152,-7.351265,1.802998,-3.571796,-5.314978,9.300669,-8.638592,-2.670633,-5.821575,-5.706783,-5.840681,9.085191,4.709599,3.418751,-7.333736,-8.807761,7.639637,5.925215,-6.795095,-7.472192,-6.889318,5.620115,7.575846,1.950023,-2.309940,8.834063,5.700651,6.199488,6.833193,-6.309103,-4.423966,8.806841,7.910255,9.476522,2.770127,-0.819001,1.274709,-3.224252,6.333194,-0.917563,0.438391,-0.408958,-2.344490,-2.209433,6.112865,9.189929,6.043460,4.154970,-8.069351,7.075830,-7.826194,4.813026,5.402534,1.782823,1.004206,-7.278918,6.706920,-0.252527,4.920673,7.105858,0.532328,-4.124525,-9.998614,6.078673,-9.998759,-0.488651,2.492033,-6.866825,9.741660,5.688866,5.151151,8.810190,1.455211,0.820281,-1.007959,0.868099,9.062089,3.638819,9.648444,-6.990470,9.808917,0.494282,-4.986814,7.934660,3.301336,9.906815,-7.937850,7.397704,-7.449404,-4.220278,3.130989,-3.637320,-7.395280,-1.016779,-3.550619,6.369843,8.766999,-3.391503,1.438268,0.222389,7.659238,0.168022,-5.986614,7.933067,0.941622,1.581916,8.723095,-1.184449,8.522320,9.182854,5.572892,0.788240,4.508083,6.495858,7.860511,9.592378,3.511703,1.644356,2.616025,-8.870329,-6.010223,-6.304105,6.037451,3.440344,2.230398,-1.253672,-9.381369,-9.033313,-0.868028,-5.816539,-2.954574,-2.821605,-6.510199,7.866720,-4.116633,2.626950,-2.388133,-9.154744,-2.332787,-8.201472,-9.025546,-8.511813,4.859994,6.659585,-0.902188,6.645327,4.249050,-7.268430,9.752124,-4.375866,5.039775,7.238691,9.814078,6.410212,3.929815,7.854726,9.629518,-9.085756,-5.840143,-5.063242,8.796192,-5.835099,3.829546,7.659901,-9.729027,-6.028963,9.966065,9.228158,5.605408,-0.001798,4.752079,-4.626003,8.857980,1.526636,-0.262726,7.851315,1.711197,5.245899,-4.760924,-1.036689,-2.463530,5.326668,-8.675417,-7.374251,6.808008,-5.141293,-6.892696,0.011982,-6.637484,-1.611014,-1.917947,-6.954496,1.417952,-1.650561,-6.236353,-1.850912,3.876247,-4.349686,6.795421,9.487176,2.880676,9.744531,7.122805,-6.535146,3.650921,-2.933269,-8.699140,6.664127,-4.149573,7.187994,-4.060021,3.190002,8.325179,7.364918,-3.913891,-8.602737,5.111461,-4.757489,-4.503442,-2.522936,1.793079,-3.339296,7.508225,5.335425,7.291864,0.517221,-4.042935,-4.191672,-4.381569,-9.082228,-8.420859,1.389582,-6.903958,-1.988451,-1.907138,-7.729855,-8.367094,4.506568,6.032873,6.973317,1.382092,-8.628530,-6.262670,-5.811130,2.970593,4.359716,7.621928,4.358923,-9.742515,-4.563363,-4.302202,-4.918984,8.381098,-8.170518,-7.247878,-0.024809,-1.107520,-4.638562,3.361859,-9.866361,8.369802,-7.618083,-9.652157,0.290073,-9.244197,6.637769,-4.798276,8.751488,8.069262,-2.426400,2.853267,1.642905,-8.187222,-5.032611,-4.944501,-1.334984,6.061461,-8.511762,-1.467731,-3.393852,-7.205874,8.798583,-5.653693,-1.188653,-7.394487,3.266143,5.585190,-4.359525,-4.773645,7.153909,3.194901,5.706595,5.400196,-8.812173,5.835362,-0.625871,-3.497913,-2.308198,-4.201960,-5.674088,-5.701944,-4.712224,-7.937345,9.969276,-2.947118,-9.082147,-0.536655,-1.564456,1.642094,2.775140,1.354649,-5.332640,9.081494,-8.200393,-9.956170,-0.808953,6.652129,-5.340602,0.718608,-2.500620,1.743048,8.422220,-6.561060,7.356857,-8.040681,-4.427740,-7.438966,2.508140,-7.587763,2.079629,-2.641079,1.789344,-8.936904,-4.756571,8.972859,1.549821,8.803416,-2.525355,-6.785185,9.829541,-7.943531,0.944374,8.030136,-6.733354,-0.787129,-8.032858,2.440538,-6.563065,4.471077,-3.824686,-1.819031,9.209912,-7.443839,6.406424,3.803623,-0.562340,4.669648,-9.464776,-1.598188,-5.949067,-2.079484,-9.183391,-3.299770,-9.412838,4.963538,-3.134467,-9.998203,0.623073,2.237634,-0.081706,9.853983,-6.711874,-4.331413,5.928213,0.450504,9.930820,-4.273828,3.901462,1.540016,3.207156,-9.791110,-8.829427,2.109320,-9.320286,-7.894579,-2.913894,3.725933,-6.812811,7.335364,-3.939269,9.693277,8.522957,4.788633,-7.315256,-1.057537,0.893382,6.998216,6.170992,5.697442,6.496297,-9.477585,-0.007876,-0.881347,5.800379,-1.039841,-0.553739,-6.623835,-8.681064,6.719655,-9.228836,-9.551157,-1.809419,2.302016,-0.021692,0.971255,-1.440928,6.410461,6.064750,-1.018443,-4.961778,8.559920,-1.635347,-5.818226,5.761990,-8.813626,0.369668,-8.903793,-3.193064,2.696300,-6.059468,4.912124,5.092896,1.953835,-1.544388,0.929376,1.662791,-1.412375,-6.926970,-5.743630,-9.953725,6.093733,7.884593,9.045270,5.872744,-1.931889,-9.387140,7.470119,5.657898,-0.813108,-7.550532,-8.591671,-8.447024,3.525498,2.740522,9.942423,-0.748558,6.245266,-2.906054,-7.307255,1.625983,0.293740,-6.371262,4.438416,-9.489387,7.064472,-4.276022,-3.657352,-0.904247,9.980065,9.328760,4.398851,-4.751284,4.996430,-4.988848,-7.685475,-1.878150,9.110857,-7.782981,-0.406265,-8.195600,0.532661,3.567215,-4.007219,-2.428052,3.379551,-1.731089,6.334642,8.870014,9.961267,-3.007009,-6.447918,8.922029,1.045878,-2.535221,-8.249667,-9.622294,1.631741,9.083244,1.892460,-5.863594,3.903666,-2.756479,7.309424,9.208624,1.133880,-3.741367,0.059529,1.203237,-1.520060,-4.222488,-4.362942,-6.540652,2.611335,7.560768,3.528456,0.810853,-1.617393,-6.523807,-7.849488,-2.182293,8.609793,9.072404,0.996701,-5.751529,-7.725800,-0.073394,2.524525,2.349360,3.707606,9.205692,-0.372378,9.914703,-7.390458,-3.797016,-4.642230,-1.458034,7.323866,-5.234570,-1.527030,-8.470128,3.545209,-1.970596,-2.303440,2.079762,-2.261914,-6.142427,-9.585891,-8.845052,6.450096,7.622068,2.127487,-6.678974,2.836615,5.516186,3.290698,-8.956730,6.646774,1.310990,-8.477219,3.962903,9.075875,4.410487,2.755153,2.074857,-5.199601,-1.785226,-4.778767,6.582752,7.058939,-4.759883,-6.962752,-8.319026,1.935031,3.378222,-5.188488,-4.400193,8.294641,2.728493,4.843627,7.322018,1.662282,-8.833759,-8.638905,4.902453,-6.923969,-7.088373,1.341043,-7.688928,-1.110089,-7.940674,-5.313828,1.126852,0.258215,4.005934,1.621924,-5.804309,-0.560750,-6.429853,-4.783071,3.684381,6.075189,-0.504136,-2.492119,3.238987,-1.291582,0.553530,3.088781,-9.780651,-5.429670,1.775296,0.520242,-6.515396,-2.596284,-6.535008,3.644310,-0.789069,-3.420647,5.422233,0.639093,6.599788,-9.923084,9.424912,6.334427,-5.871372,6.078508,0.939458,-3.889552,-1.299587,4.734707,3.882876,-9.160597,5.626895,-8.504470,3.995959,-7.593285,-5.978322,-9.313319,-9.435143,1.771482,0.662666,-9.062743,3.551610,-3.300852,-0.425547,5.779912,-6.544982,9.855547,-8.690648,-9.431457,4.503815,-5.400217,-1.480017,1.582229,0.151772,5.678156,2.779234,2.849482,-7.545574,9.367722,4.231383,2.226920,-8.054683,-9.272308,-1.687515,5.322106,2.292116,1.929029,-1.075261,-9.566234,-1.829467,-8.439983,2.565578,-2.974640,9.555637,-5.316980,-9.681027,8.892328,-0.942175,7.993090,-3.614756,9.630396,6.977412,3.248764,4.837556,0.433716,-5.739891,-4.486698,0.599389,7.366425,-3.659635,-3.721486,0.511634,7.308027,3.050377,3.288721,2.710321,6.773647,3.735950,-8.924731,-1.059682,-4.769912,4.305198,-3.000972,-4.162821,-8.828185,-4.981312,5.178509,-7.261107,2.120841,-6.501331,5.694146,3.623281,-4.092371,-6.942186,-9.664754,-5.842157,9.355874,5.610094,-3.994069,8.107586,-1.121576,7.548034,-4.727199,-7.957243,7.162593,-2.743124,0.137240,9.292654,-1.411207,-4.194027,-0.191923,-7.650728,8.955822,-6.547061,4.519199,-6.509346,7.675081,7.170358,3.559622,9.865161,-8.713215,9.651929,-8.306163,8.605259,-7.554114,0.982409,-0.232611,-5.576258,7.201844,-6.630236,4.564265,-0.286373,-3.990728,-9.493736,0.827566,4.387651,9.660986,8.587699,8.414906,-8.315721,0.915989,5.956578,6.879195,5.064619,-9.201901,0.947711,-5.568937,-6.017602,-9.954019,-9.667334,-0.675370,7.253613,-8.566194,7.552083,-6.594533,-7.549858,7.093834,3.536454,5.062741,7.293123,-7.261311,6.210011,-4.910614,-4.660419,-5.759429,9.977041,-9.971454,-9.602246,0.624076,-6.832556,-8.659670,3.985687,-8.678947,-4.236641,5.393001,5.795869,5.890016,-0.191463,-9.738865,-4.603769,3.373687,-8.607765,-3.488984,2.256490,-0.392392,6.845793,-5.217308,5.944261,-6.154525,-3.709461,9.490820,0.491609,0.785216,5.704035,-3.563459,-5.565340,3.693463,7.124541,-9.551163,1.425336,7.479781,4.298946,-8.782953,-5.793414,-5.414954,-0.143686,2.663266,-2.762809,-2.235417,-4.716117,3.468036,-1.006082,5.936703,8.290614,-5.011953,5.010783,3.221953,8.366602,1.325938,-5.913870,3.321459,6.534763,6.721200,6.070930,7.461730,-2.877416,-6.333776,6.817712,3.757734,3.234533,-9.148327,8.381945,5.287960,4.593370,-5.984774,6.913907,-6.572089,-2.146280,-6.421200,2.002497,-1.102031,2.703334,8.075766,-1.482952,1.252928,-8.132417,-5.850634,0.243225,0.497447,-9.560856,1.241224,4.847775,8.171801,7.856855,0.697874,0.692922,-7.900962,-6.063635,-2.748865,-1.047283,3.574757,6.855432,-9.384200,8.154839,4.927498,-4.076027,4.301421,-7.708560,8.775743,9.129419,3.123657,-7.064178,9.174532,3.519292,-0.639437,4.278915,-7.073385,8.108980,1.834956,-6.693995,5.401940,3.856989,-6.644013,2.738637,4.862597,-0.746393,0.374610,6.880781,-2.494750,-7.333357,-6.668383,-8.814453,-2.426309,-2.206020,-4.245128,-6.853620,0.951283,6.247310,-4.668674,0.631436,1.464174,-7.004031,2.787140,2.215317,-5.922762,-7.247646,9.779862,3.613431,-0.463981,4.049554,8.698175,-1.912049,-0.691466,-1.461127,-3.037984,-0.644839,-1.902171,3.738947,-7.354616,2.659177,-7.038643,-3.581242,-8.323386,-9.511579,8.262636,0.794011,5.630311,2.971822,5.805026,-2.526132,8.147434,5.328540,2.008042,7.611204,7.832504,-8.938267,-1.173152,2.761179,5.166309,-1.071577,-6.227340,8.559391,8.081252,1.159283,-2.576524,0.472080,-4.721657,7.210053,3.620194,-9.575224,3.926666,-0.252540,3.127752,-0.944713,8.060388,3.822317,7.205605,-6.967429,1.932301,6.297179,5.249775,9.151794,-9.064932,-2.790420,-1.468271,-1.437146,8.028868,7.545634,2.055862,7.374831,-9.742079,-1.720156,1.245720,1.994122,-8.623938,5.238939,2.089706,7.037767,1.944047,8.167075,-9.367796,-4.274703,-4.673588,-1.826591,8.147888,3.879583,-3.787535,9.787343,-8.339712,-8.771261,-1.674981,-9.272498,7.596036,0.043885,9.193846,-9.727517,-9.287375,-4.621761,-1.767178,-2.337421,-5.235603,-0.395910,0.667464,4.444320,-4.246767,-3.186406,5.712203,-1.794426,6.391225,5.678237,-0.783055,-6.211353,-1.692614,5.950352,-3.320475,8.559957,5.799425,4.299359,4.992582,-6.613158,9.459617,-2.216457,-5.470702,7.473439,-5.402372,-6.346370,-1.924107,-7.361947,9.499456,5.337472,7.309315,1.989083,-3.837388,-8.044250,7.671760,3.364824,9.816472,8.072419,-2.404469,1.518861,2.011955,6.934378,3.907483,7.462236,-1.784150,-4.806754,1.691059,-6.702835,-6.388612,8.937722,-5.556269,-6.035047,2.325075,2.780582,-3.771989,-3.671168,-5.676894,1.165982,6.274276,8.608431,-6.301804,-7.573593,4.212961,1.157235,2.786173,3.017479,-1.739890,0.231076,3.952551,7.468366,-3.477952,0.880290,-8.701153,-5.051483,0.584015,0.695134,2.903778,3.011067,-2.000997,-2.270637,-1.976551,9.704792,-9.630752,-2.913348,4.525213,4.355693,5.659614,9.975113,-9.577329,-0.353239,6.019660,3.790448,6.172577,1.854017,2.872711,1.537966,4.184134,-3.305779,1.642247,9.444507,3.368671,-9.294732,2.776878,-7.790487,4.290960,-4.586714,-1.258694,1.808785,-1.731897,4.011342,4.140509,5.241777,-5.119414,-3.184398,-9.414085,-5.315416,-8.620835,1.446786,-6.309767,3.891735,-8.120250,-2.325690,8.112098,-7.587009,-5.525238,-4.424230,-6.608850,-7.491871,9.685288,-3.877883,-9.555644,0.211746,-4.088975,9.313800,-3.269354,-4.500486,-2.405681,4.270934,4.808119,7.541161,-7.090527,3.884557,-6.212297,0.255038,-2.438484,7.486368,-2.326277,1.943735,1.409333,-0.347253,-6.207532,-7.927923,1.867618,-7.671467,2.510758,9.403728,3.968976,-7.055464,-4.576823,-8.440196,-3.654624,-3.947561,-8.189713,1.803084,-1.863026,-0.319820,-2.017171,4.473285,-3.369016,-7.977041,1.449205,1.969882,-3.381936,-0.013912,6.623210,4.028509,7.378169,6.383782,-5.876127,6.753053,-0.916992,1.847110,8.366664,-2.271646,-3.533883,3.161569,-2.884989,4.466971,5.142913,-8.470646,-3.052834,-4.365381,5.108635,0.921315,-2.049799,-8.864550,-6.811474,2.291787,-8.557905,-3.720732,4.602195,-3.098216,-0.193864,-1.560498,-3.417624,7.892108,9.478914,-3.592620,6.565016,-5.388583,-6.388143,-5.886182,-9.649795,-8.475921,9.247761,7.846556,0.786747,2.116110,7.695681,6.029908,-2.069865,-4.497002,-3.554808,-8.569910,1.985749,7.041005,7.902450,-2.719619,2.656105,-0.700633,2.543496,3.635912,6.721940,6.673131,4.070466,-4.014360,1.661419,4.599461,2.124796,1.879435,-8.264928,0.445410,-1.848830,1.875409,-2.301641,-1.068098,9.891815,-0.409880,-7.793616,-2.122983,-4.027765,6.674380,7.247753,2.094154,-6.009261,2.283081,5.313331,-0.514448,5.891091,-6.504773,2.976990,5.620327,-4.979220,-4.703462,4.975613,-8.257648,0.970554,9.126360,-0.511734,-1.348041,7.405549,7.324872,-9.616295,-9.341003,5.419699,1.477440,-0.206015,-4.154850,5.282489,5.739332,4.214482,-5.771775,-5.207763,5.820699,9.665587,2.430492,-7.370237,6.963007,1.192949,-4.807502,-4.530882,7.280086,-6.975472,-1.566661,-7.980973,4.123520,1.956485,3.584299,0.352889,4.040851,-7.854834,-9.728442,7.419865,3.717466,3.545861,-9.951300,1.968533,-7.114889,4.933269,3.645280,8.039469,8.956630,0.127464,-2.446708,6.738840,5.438992,-2.213352,-6.161125,7.877194,-4.866053,4.006792,8.981136,3.166860,5.838691,-4.904221,-1.486449,8.030976,-1.708730,-7.954507,5.189804,-4.438130,1.257570,-0.922127,4.819718,7.362153,0.772379,-7.354634,-9.931681,-4.542844,-0.779018,-6.627691,-9.889345,-4.554090,-1.810254,8.972322,-9.146804,-7.627677,9.234462,-1.301196,9.701368,-8.586508,-1.841564,3.569501,-0.994107,-6.227476,-7.938104,-4.332330,-0.603762,6.003909,9.966604,4.967297,3.604164,-0.061937,-2.500700,9.936547,-2.808973,-6.216987,-8.250136,5.103150,-0.380261,0.474840,6.719795,9.364062,-9.325981,-5.602532,-2.477188,6.057387,-6.762503,-5.845228,-3.653907,-0.682812,2.242756,-4.721309,-4.560451,2.172848,6.994486,7.864430,-2.106621,5.769370,3.460500,-6.617741,3.373991,0.930359,9.519671,-2.498360,7.496171,3.696629,-0.235473,-9.719938,0.282350,7.776865,-2.279385,9.369656,2.284738,0.433903,5.392837,-4.381926,-5.969003,-3.182039,2.901291,5.957061,5.801998,-0.161068,-4.357158,-8.369442,-1.501027,8.070336,-8.517998,6.481188,4.882219,-9.269763,-0.353087,5.282218,8.759506,0.409740,-6.159190,6.276176,1.059975,2.448121,9.738724,1.316994,3.450554,-7.717260,-8.333024,-0.221058,3.263355,-1.042611,5.274053,-5.596991,9.708802,-9.330555,-7.560627,6.076861,9.377031,-7.773414,-4.429933,-6.787830,-0.841007,0.052090,-6.425370,-3.817880,-2.828116,3.488026,-3.995109,-2.921116,9.324527,5.129927,8.166595,7.821686,-9.251410,3.958291,-6.377572,-3.090072,-8.051599,0.824183,1.809322,-9.304161,-0.921525,-7.174331,2.393652,-9.144074,1.615047,3.334354,-8.802309,7.705684,-4.017116,7.243387,-4.996881,5.552083,2.975198,2.187219,-5.258675,-8.994155,1.258054,5.381816,-5.972358,-0.105952,1.869717,-0.685198,-0.691428,-7.014061,-9.637781,9.581731,-3.974831,7.130261,7.577287,-2.607214,7.291768,-8.552102,4.611940,7.027818,0.480164,6.900942,9.834968,-5.125097,7.857420,-0.591039,-4.270879,-2.044758,-2.431061,-8.424171,-3.521045,2.073363,-1.786910,5.303633,0.296330,4.310201,-8.163659,-1.059347,-1.478977,6.068956,9.072173,4.799222,-4.872185,-2.381745,9.449601,-9.650670,-8.508994,8.738228,-5.496874,-5.101121,-3.568421,-6.935198,6.962357,-5.201396,-6.869582,1.302742,-2.299574,4.814595,4.800235,8.959131,1.028768,-4.526674,-5.722943,-5.399292,-5.267832,-0.926355,-2.197646,7.602604,1.162984,6.191065,-4.605114,-2.961985,1.302944,0.595113,5.587770,9.365864,-7.771306,-9.219970,-5.971530,7.048377,-0.733917,1.969184,1.362966,-7.021648,-9.749475,-7.010258,-9.596489,6.569785,-5.472404,-8.953585,-3.793827,-4.834098,-2.340006,4.640898,5.001337,1.049085,-5.718977,-0.080477,-3.139331,3.671331,-2.639457,6.039436,-1.455294,-2.469383,6.270013,-3.733218,8.728111,-0.635486,-7.665082,-6.065855,1.017613,2.378541,-2.135707,1.958967,-1.630303,4.968407,-8.498405,4.309456,-4.190414,9.158283,1.885945,0.781360,8.260495,-5.772456,1.632819,5.961763,-4.607217,-7.111703,0.422094,7.974748,-9.081600,-4.340325,1.518499,0.730823,-6.725493,7.425410,0.450590,-5.404915,9.051561,-5.831687,5.474260,0.534696,-2.088058,-1.980885,7.988743,0.138353,-1.712711,-7.546654,5.851832,8.119293,-3.687102,5.029449,1.642100,-7.785752,-9.269716,7.935978,5.123851,-1.545167,7.706051,1.855444,-3.971400,-4.449092,-5.324692,9.326504,2.375547,6.191596,5.617720,9.037394,-8.958570,6.636367,-2.764347,-8.186721,2.011883,3.949392,2.596782,6.392125,9.266980,3.293980,-6.869052,0.075468,2.122753,-0.281736,-8.839927,-8.052322,0.174601,5.840839,-3.770927,6.846277,-8.909262,-3.667889,7.888946,-4.458819,-1.328442,4.406555,-1.790119,-4.738351,9.892157,-1.386998,-3.227853,1.711478,7.074624,6.669017,-5.087903,7.173117,3.147305,0.877561,-5.528591,6.664716,5.161560,1.455178,1.573153,5.254432,-4.369465,-9.485887,-6.271987,5.562957,2.692299,-2.453958,6.204213,-8.034699,8.199823,-7.519438,0.878499,-9.558046,-4.906405,-8.707590,3.381114,-9.942403,-3.564059,-6.240064,-0.650932,-2.154837,-8.177407,-1.960224,-8.135423,-0.018583,-9.164715,5.967808,-0.211142,-1.106790,-4.496647,6.121148,-5.594969,0.486714,-8.625447,-3.782109,2.478420,-8.021352,5.535499,-4.279128,-6.214190,6.875781,9.832421,-0.798583,6.080867,-1.584243], dtype = "float32")#candidate|2233|(2184,)|const|float32
call_2232 = relay.TupleGetItem(func_548_call(relay.reshape(const_2233.astype('float32'), [12, 14, 13]), relay.reshape(const_2233.astype('float32'), [12, 14, 13]), ), 0)
call_2234 = relay.TupleGetItem(func_551_call(relay.reshape(const_2233.astype('float32'), [12, 14, 13]), relay.reshape(const_2233.astype('float32'), [12, 14, 13]), ), 0)
output = relay.Tuple([uop_2230,call_2232,const_2233,])
output2 = relay.Tuple([uop_2230,call_2234,const_2233,])
func_2238 = relay.Function([var_2229,], output)
mod['func_2238'] = func_2238
mod = relay.transform.InferType()(mod)
var_2239 = relay.var("var_2239", dtype = "float64", shape = (1, 1, 13))#candidate|2239|(1, 1, 13)|var|float64
output = func_2238(var_2239)
func_2240 = relay.Function([var_2239], output)
mutated_mod['func_2240'] = func_2240
mutated_mod = relay.transform.InferType()(mutated_mod)
func_888_call = mod.get_global_var('func_888')
func_889_call = mutated_mod.get_global_var('func_889')
call_2267 = relay.TupleGetItem(func_888_call(), 0)
call_2268 = relay.TupleGetItem(func_889_call(), 0)
func_2005_call = mod.get_global_var('func_2005')
func_2006_call = mutated_mod.get_global_var('func_2006')
call_2283 = relay.TupleGetItem(func_2005_call(), 0)
call_2284 = relay.TupleGetItem(func_2006_call(), 0)
output = relay.Tuple([call_2267,call_2283,])
output2 = relay.Tuple([call_2268,call_2284,])
func_2300 = relay.Function([], output)
mod['func_2300'] = func_2300
mod = relay.transform.InferType()(mod)
output = func_2300()
func_2301 = relay.Function([], output)
mutated_mod['func_2301'] = func_2301
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1170_call = mod.get_global_var('func_1170')
func_1171_call = mutated_mod.get_global_var('func_1171')
call_2309 = relay.TupleGetItem(func_1170_call(), 0)
call_2310 = relay.TupleGetItem(func_1171_call(), 0)
output = call_2309
output2 = call_2310
func_2311 = relay.Function([], output)
mod['func_2311'] = func_2311
mod = relay.transform.InferType()(mod)
output = func_2311()
func_2312 = relay.Function([], output)
mutated_mod['func_2312'] = func_2312
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1660_call = mod.get_global_var('func_1660')
func_1662_call = mutated_mod.get_global_var('func_1662')
call_2313 = func_1660_call()
call_2314 = func_1660_call()
func_1170_call = mod.get_global_var('func_1170')
func_1171_call = mutated_mod.get_global_var('func_1171')
call_2360 = relay.TupleGetItem(func_1170_call(), 0)
call_2361 = relay.TupleGetItem(func_1171_call(), 0)
output = relay.Tuple([call_2313,call_2360,])
output2 = relay.Tuple([call_2314,call_2361,])
func_2387 = relay.Function([], output)
mod['func_2387'] = func_2387
mod = relay.transform.InferType()(mod)
mutated_mod['func_2387'] = func_2387
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2387_call = mutated_mod.get_global_var('func_2387')
call_2388 = func_2387_call()
output = call_2388
func_2389 = relay.Function([], output)
mutated_mod['func_2389'] = func_2389
mutated_mod = relay.transform.InferType()(mutated_mod)
var_2392 = relay.var("var_2392", dtype = "float64", shape = (13, 5, 5))#candidate|2392|(13, 5, 5)|var|float64
uop_2393 = relay.acos(var_2392.astype('float64')) # shape=(13, 5, 5)
func_1412_call = mod.get_global_var('func_1412')
func_1414_call = mutated_mod.get_global_var('func_1414')
call_2396 = func_1412_call()
call_2397 = func_1412_call()
output = relay.Tuple([uop_2393,call_2396,])
output2 = relay.Tuple([uop_2393,call_2397,])
func_2408 = relay.Function([var_2392,], output)
mod['func_2408'] = func_2408
mod = relay.transform.InferType()(mod)
mutated_mod['func_2408'] = func_2408
mutated_mod = relay.transform.InferType()(mutated_mod)
var_2409 = relay.var("var_2409", dtype = "float64", shape = (13, 5, 5))#candidate|2409|(13, 5, 5)|var|float64
func_2408_call = mutated_mod.get_global_var('func_2408')
call_2410 = func_2408_call(var_2409)
output = call_2410
func_2411 = relay.Function([var_2409], output)
mutated_mod['func_2411'] = func_2411
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1688_call = mod.get_global_var('func_1688')
func_1690_call = mutated_mod.get_global_var('func_1690')
call_2449 = func_1688_call()
call_2450 = func_1688_call()
output = call_2449
output2 = call_2450
func_2454 = relay.Function([], output)
mod['func_2454'] = func_2454
mod = relay.transform.InferType()(mod)
output = func_2454()
func_2455 = relay.Function([], output)
mutated_mod['func_2455'] = func_2455
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1877_call = mod.get_global_var('func_1877')
func_1879_call = mutated_mod.get_global_var('func_1879')
call_2472 = func_1877_call()
call_2473 = func_1877_call()
var_2478 = relay.var("var_2478", dtype = "bool", shape = (14, 9, 15))#candidate|2478|(14, 9, 15)|var|bool
bop_2479 = relay.minimum(call_2472.astype('float32'), relay.reshape(var_2478.astype('float32'), relay.shape_of(call_2472))) # shape=(14, 9, 15)
bop_2482 = relay.minimum(call_2473.astype('float32'), relay.reshape(var_2478.astype('float32'), relay.shape_of(call_2473))) # shape=(14, 9, 15)
output = bop_2479
output2 = bop_2482
func_2501 = relay.Function([var_2478,], output)
mod['func_2501'] = func_2501
mod = relay.transform.InferType()(mod)
var_2502 = relay.var("var_2502", dtype = "bool", shape = (14, 9, 15))#candidate|2502|(14, 9, 15)|var|bool
output = func_2501(var_2502)
func_2503 = relay.Function([var_2502], output)
mutated_mod['func_2503'] = func_2503
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1389_call = mod.get_global_var('func_1389')
func_1390_call = mutated_mod.get_global_var('func_1390')
call_2541 = relay.TupleGetItem(func_1389_call(), 1)
call_2542 = relay.TupleGetItem(func_1390_call(), 1)
output = call_2541
output2 = call_2542
func_2552 = relay.Function([], output)
mod['func_2552'] = func_2552
mod = relay.transform.InferType()(mod)
mutated_mod['func_2552'] = func_2552
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2552_call = mutated_mod.get_global_var('func_2552')
call_2553 = func_2552_call()
output = call_2553
func_2554 = relay.Function([], output)
mutated_mod['func_2554'] = func_2554
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2225_call = mod.get_global_var('func_2225')
func_2226_call = mutated_mod.get_global_var('func_2226')
call_2597 = func_2225_call()
call_2598 = func_2225_call()
func_2020_call = mod.get_global_var('func_2020')
func_2021_call = mutated_mod.get_global_var('func_2021')
call_2600 = relay.TupleGetItem(func_2020_call(), 0)
call_2601 = relay.TupleGetItem(func_2021_call(), 0)
uop_2608 = relay.acosh(call_2597.astype('float32')) # shape=(14, 9, 15)
uop_2610 = relay.acosh(call_2598.astype('float32')) # shape=(14, 9, 15)
output = relay.Tuple([call_2600,uop_2608,])
output2 = relay.Tuple([call_2601,uop_2610,])
func_2611 = relay.Function([], output)
mod['func_2611'] = func_2611
mod = relay.transform.InferType()(mod)
output = func_2611()
func_2612 = relay.Function([], output)
mutated_mod['func_2612'] = func_2612
mutated_mod = relay.transform.InferType()(mutated_mod)
var_2673 = relay.var("var_2673", dtype = "float32", shape = (2, 10, 11))#candidate|2673|(2, 10, 11)|var|float32
uop_2674 = relay.cos(var_2673.astype('float32')) # shape=(2, 10, 11)
uop_2680 = relay.cosh(var_2673.astype('float64')) # shape=(2, 10, 11)
uop_2695 = relay.rsqrt(var_2673.astype('float32')) # shape=(2, 10, 11)
bop_2706 = relay.greater_equal(uop_2695.astype('bool'), relay.reshape(uop_2674.astype('bool'), relay.shape_of(uop_2695))) # shape=(2, 10, 11)
output = relay.Tuple([uop_2680,bop_2706,])
output2 = relay.Tuple([uop_2680,bop_2706,])
func_2719 = relay.Function([var_2673,], output)
mod['func_2719'] = func_2719
mod = relay.transform.InferType()(mod)
mutated_mod['func_2719'] = func_2719
mutated_mod = relay.transform.InferType()(mutated_mod)
var_2720 = relay.var("var_2720", dtype = "float32", shape = (2, 10, 11))#candidate|2720|(2, 10, 11)|var|float32
func_2719_call = mutated_mod.get_global_var('func_2719')
call_2721 = func_2719_call(var_2720)
output = call_2721
func_2722 = relay.Function([var_2720], output)
mutated_mod['func_2722'] = func_2722
mutated_mod = relay.transform.InferType()(mutated_mod)
var_2742 = relay.var("var_2742", dtype = "int16", shape = ())#candidate|2742|()|var|int16
var_2743 = relay.var("var_2743", dtype = "int16", shape = (13, 16, 4))#candidate|2743|(13, 16, 4)|var|int16
bop_2744 = relay.greater(var_2742.astype('bool'), var_2743.astype('bool')) # shape=(13, 16, 4)
uop_2760 = relay.asin(bop_2744.astype('float64')) # shape=(13, 16, 4)
func_1626_call = mod.get_global_var('func_1626')
func_1627_call = mutated_mod.get_global_var('func_1627')
call_2768 = relay.TupleGetItem(func_1626_call(), 1)
call_2769 = relay.TupleGetItem(func_1627_call(), 1)
func_337_call = mod.get_global_var('func_337')
func_341_call = mutated_mod.get_global_var('func_341')
const_2771 = relay.const([[6,1,7,-5,-2,10,3,1,-4,7,2,-10,10,8,3,-7,7,-6,4,7,-4,3,-5,-9,5,-10,8,10,7,-1,3,3,6,4,-9,-7,8,-10,-2,-3,-9,-6,10,4,3],[10,-3,-3,10,-10,-6,2,7,-8,-3,8,1,8,7,1,-9,-3,3,3,3,2,10,-5,6,-6,4,2,7,1,3,-3,4,-5,3,-10,-1,10,-6,8,10,-2,9,2,-5,-9],[6,1,9,-6,-5,-3,-7,-10,7,5,-4,-10,3,9,4,8,-2,-9,-4,5,9,6,8,1,3,-3,-4,-2,-6,9,-8,1,6,1,4,1,-6,1,4,1,9,6,6,2,-10],[-1,8,8,-1,3,-9,-1,3,10,4,-7,-5,6,-3,-3,-1,-1,8,4,2,-5,4,-7,9,-6,-9,8,6,-7,-4,1,-7,-8,-4,6,-10,7,8,2,-1,10,9,-8,-2,3],[-7,5,7,-1,-4,6,-8,1,-9,3,1,-4,9,-7,-6,9,7,9,7,-4,7,-8,-5,10,10,-5,-7,3,-10,-9,1,10,-3,-1,-9,1,6,-10,6,6,5,9,10,-8,-2],[-7,-4,-10,-5,7,-5,1,-8,2,-3,4,-10,8,6,-2,-2,3,5,-4,4,6,2,3,-10,-7,-3,-3,-5,5,-8,4,-6,-9,-10,-1,6,8,-7,-9,-5,-4,-9,-5,9,-8],[9,-8,-8,-3,-9,7,-6,-3,-5,1,-1,10,1,6,5,6,5,6,8,4,-8,1,5,6,-8,-9,2,-1,-5,3,-3,4,1,-3,-3,-6,-9,4,3,-5,-7,-4,-4,-1,3],[8,1,4,-4,-2,-6,-8,5,1,2,-3,-10,9,3,4,-6,-2,6,10,4,9,-10,5,10,7,3,2,-8,-9,5,-9,-10,9,-6,8,-10,-10,-7,-10,-2,-1,-9,-10,6,-10],[-7,-1,7,-2,8,4,8,-2,10,2,-9,9,-7,-4,10,-5,10,-1,5,-3,3,3,-1,10,7,3,6,3,-1,-6,1,-8,-7,-2,-2,7,2,1,-7,7,3,-1,2,-2,-10],[-5,-10,-4,2,1,-10,-9,10,-8,-1,2,-4,2,-6,-10,3,-9,-6,9,-10,-2,-9,-5,-3,8,9,-9,-3,-9,-5,5,-6,-2,7,2,2,-8,-7,1,-5,5,1,6,-4,10]], dtype = "uint8")#candidate|2771|(10, 45)|const|uint8
call_2770 = relay.TupleGetItem(func_337_call(relay.reshape(const_2771.astype('uint8'), [6, 15, 5]), relay.reshape(const_2771.astype('uint8'), [6, 15, 5]), relay.reshape(const_2771.astype('bool'), [6, 15, 5]), ), 0)
call_2772 = relay.TupleGetItem(func_341_call(relay.reshape(const_2771.astype('uint8'), [6, 15, 5]), relay.reshape(const_2771.astype('uint8'), [6, 15, 5]), relay.reshape(const_2771.astype('bool'), [6, 15, 5]), ), 0)
uop_2788 = relay.cosh(uop_2760.astype('float32')) # shape=(13, 16, 4)
uop_2811 = relay.sqrt(uop_2788.astype('float64')) # shape=(13, 16, 4)
output = relay.Tuple([call_2768,call_2770,const_2771,uop_2811,])
output2 = relay.Tuple([call_2769,call_2772,const_2771,uop_2811,])
func_2814 = relay.Function([var_2742,var_2743,], output)
mod['func_2814'] = func_2814
mod = relay.transform.InferType()(mod)
var_2815 = relay.var("var_2815", dtype = "int16", shape = ())#candidate|2815|()|var|int16
var_2816 = relay.var("var_2816", dtype = "int16", shape = (13, 16, 4))#candidate|2816|(13, 16, 4)|var|int16
output = func_2814(var_2815,var_2816,)
func_2817 = relay.Function([var_2815,var_2816,], output)
mutated_mod['func_2817'] = func_2817
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2552_call = mod.get_global_var('func_2552')
func_2554_call = mutated_mod.get_global_var('func_2554')
call_2819 = func_2552_call()
call_2820 = func_2552_call()
output = call_2819
output2 = call_2820
func_2833 = relay.Function([], output)
mod['func_2833'] = func_2833
mod = relay.transform.InferType()(mod)
mutated_mod['func_2833'] = func_2833
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2833_call = mutated_mod.get_global_var('func_2833')
call_2834 = func_2833_call()
output = call_2834
func_2835 = relay.Function([], output)
mutated_mod['func_2835'] = func_2835
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1412_call = mod.get_global_var('func_1412')
func_1414_call = mutated_mod.get_global_var('func_1414')
call_2886 = func_1412_call()
call_2887 = func_1412_call()
func_1335_call = mod.get_global_var('func_1335')
func_1338_call = mutated_mod.get_global_var('func_1338')
const_2889 = relay.const([-2,-1,8,10,-8,-7,-5,10,-10,-3,-5,-8,-7,5,6,7,2,-1,-7,8,-5,6,7,-1,7,3,-3,4,7,-5,3,1,1,-4,10,4,10,-7,-7,3,4,-9,8,-8,-5,7,4,3,-7,6,2,5,1,6,-2,-4,-8,5,6,-2,4,-1,7,-6,5,-6,-1,7,-4,-9,-6,7,8,2,5,7,5,-10,5,1,-7,5,9,-9,6,1,3,-6,2,-4,-3,-6,10,3,1,3,2,-7,9,3,-6,-5,-4,7,-8,1,-4,10,-5,1,-8,4,-4,10,-9,-9,7,1,7,-7,2,8,9,2,-4,7,-7,1,-4,-5,4,-7,1,4,9,-5,-3,7,-3,-3,-1,-9,5,-10,-1,-3,2,-7,7,9,3,7,8,-6,-2,-8,-1,-3,-8,-7,-9,-3,-8,2,-2,-5,8,10,5,-7,-7,2,-3,-6,8,-10,-4,10,5,-1,-6,1,6,9,9,10,2,-6,9,-6,7,-5,-10,5,8,2,10,-5,-5,10,10,-10,6,-7,-9,-1,10,-7,1,-4,8,3,9,6,2,-8,10,5,5,8,-7,-10,4,-7,-1,-6,-7,9,-4,-2,3,-9,7,6,5,5,2,1,7,3,-9,9,5,-3,-4,-5,4,-7,-7,-4,8,6,-9,8,-5,3,7,9,1,10,7,-2,1,-6,6,-3,-1,4,8,-3,-2,-4,-2,10,-4,-1,-6,-4,4,-5,9,-5,-9,-8,5,-9,-10,6,7,-7,4,2,1,-9,5,7,2,-2,-5,9,4,4,10,-7,-6,7,-2,-2,-4,-10,-4,3,-1,8,-9,-5,-2,8,1,-8,10,6,4,-5,-8,-9,1,8,-1,9,3,3,-7,9,6,4,5,-8,-10,9,-7,10,-4,-4,-7,5,9,7,-10,-3,-6,-2,10,7,-2,-8,7,-9,-8,-6,-5,7,8,1,10,4,-2,-6,8,-2,2,-9,10,9,-2,5,3,-3,-5,1,-8,-3,5,5,-5,-4,-1,-5,3,-10], dtype = "int32")#candidate|2889|(390,)|const|int32
call_2888 = relay.TupleGetItem(func_1335_call(relay.reshape(const_2889.astype('int32'), [390,])), 0)
call_2890 = relay.TupleGetItem(func_1338_call(relay.reshape(const_2889.astype('int32'), [390,])), 0)
func_1877_call = mod.get_global_var('func_1877')
func_1879_call = mutated_mod.get_global_var('func_1879')
call_2893 = func_1877_call()
call_2894 = func_1877_call()
func_1848_call = mod.get_global_var('func_1848')
func_1852_call = mutated_mod.get_global_var('func_1852')
var_2897 = relay.var("var_2897", dtype = "uint64", shape = (80, 1))#candidate|2897|(80, 1)|var|uint64
call_2896 = func_1848_call(relay.reshape(var_2897.astype('uint64'), [2, 10, 4]), relay.reshape(var_2897.astype('uint64'), [2, 10, 4]), )
call_2898 = func_1848_call(relay.reshape(var_2897.astype('uint64'), [2, 10, 4]), relay.reshape(var_2897.astype('uint64'), [2, 10, 4]), )
uop_2923 = relay.asinh(const_2889.astype('float64')) # shape=(390,)
uop_2926 = relay.cos(uop_2923.astype('float32')) # shape=(390,)
func_1251_call = mod.get_global_var('func_1251')
func_1253_call = mutated_mod.get_global_var('func_1253')
call_2939 = relay.TupleGetItem(func_1251_call(), 1)
call_2940 = relay.TupleGetItem(func_1253_call(), 1)
func_1181_call = mod.get_global_var('func_1181')
func_1185_call = mutated_mod.get_global_var('func_1185')
var_2960 = relay.var("var_2960", dtype = "uint8", shape = ())#candidate|2960|()|var|uint8
const_2961 = relay.const([-1,7,-7,-5,-1,-9,-10,5,7,-10,7,8,-4,6,-6,-8,-6,-5,5,3,2,1,7,3,-5,-8,8,8,3,-2,5,-5,4,-3,9,-4,-8,-3,5,10,-1,-10,6,-3,-6,-7,-6,3,2,6,1,-2,-9,7,3,3,6,4,-3,-1,3,-1,4,-6,9,-8,6,-1,-5,6,-6,1,-4,5,2,-6,8,6,1,-8,6,3,6,-4,2,8,-10,-1,-3,-4,4,2,9,-4,9,-1,8,6,9,6,3,1,-4,-10,1,-4,3,-7], dtype = "uint8")#candidate|2961|(108,)|const|uint8
call_2959 = relay.TupleGetItem(func_1181_call(relay.reshape(var_2960.astype('uint8'), []), relay.reshape(const_2961.astype('uint8'), [12, 3, 3]), ), 0)
call_2962 = relay.TupleGetItem(func_1185_call(relay.reshape(var_2960.astype('uint8'), []), relay.reshape(const_2961.astype('uint8'), [12, 3, 3]), ), 0)
output = relay.Tuple([call_2886,call_2888,call_2893,call_2896,var_2897,uop_2926,call_2939,call_2959,var_2960,const_2961,])
output2 = relay.Tuple([call_2887,call_2890,call_2894,call_2898,var_2897,uop_2926,call_2940,call_2962,var_2960,const_2961,])
func_2965 = relay.Function([var_2897,var_2960,], output)
mod['func_2965'] = func_2965
mod = relay.transform.InferType()(mod)
mutated_mod['func_2965'] = func_2965
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2965_call = mutated_mod.get_global_var('func_2965')
var_2967 = relay.var("var_2967", dtype = "uint64", shape = (80, 1))#candidate|2967|(80, 1)|var|uint64
var_2968 = relay.var("var_2968", dtype = "uint8", shape = ())#candidate|2968|()|var|uint8
call_2966 = func_2965_call(var_2967,var_2968,)
output = call_2966
func_2969 = relay.Function([var_2967,var_2968,], output)
mutated_mod['func_2969'] = func_2969
mutated_mod = relay.transform.InferType()(mutated_mod)
const_2998 = relay.const(2, dtype = "uint64")#candidate|2998|()|const|uint64
var_2999 = relay.var("var_2999", dtype = "uint64", shape = (2, 16, 7))#candidate|2999|(2, 16, 7)|var|uint64
bop_3000 = relay.add(const_2998.astype('uint64'), var_2999.astype('uint64')) # shape=(2, 16, 7)
output = bop_3000
output2 = bop_3000
func_3004 = relay.Function([var_2999,], output)
mod['func_3004'] = func_3004
mod = relay.transform.InferType()(mod)
var_3005 = relay.var("var_3005", dtype = "uint64", shape = (2, 16, 7))#candidate|3005|(2, 16, 7)|var|uint64
output = func_3004(var_3005)
func_3006 = relay.Function([var_3005], output)
mutated_mod['func_3006'] = func_3006
mutated_mod = relay.transform.InferType()(mutated_mod)
var_3054 = relay.var("var_3054", dtype = "float64", shape = (3, 6, 5))#candidate|3054|(3, 6, 5)|var|float64
uop_3055 = relay.tan(var_3054.astype('float64')) # shape=(3, 6, 5)
output = relay.Tuple([uop_3055,])
output2 = relay.Tuple([uop_3055,])
func_3063 = relay.Function([var_3054,], output)
mod['func_3063'] = func_3063
mod = relay.transform.InferType()(mod)
mutated_mod['func_3063'] = func_3063
mutated_mod = relay.transform.InferType()(mutated_mod)
var_3064 = relay.var("var_3064", dtype = "float64", shape = (3, 6, 5))#candidate|3064|(3, 6, 5)|var|float64
func_3063_call = mutated_mod.get_global_var('func_3063')
call_3065 = func_3063_call(var_3064)
output = call_3065
func_3066 = relay.Function([var_3064], output)
mutated_mod['func_3066'] = func_3066
mutated_mod = relay.transform.InferType()(mutated_mod)
const_3078 = relay.const(-9, dtype = "int8")#candidate|3078|()|const|int8
var_3079 = relay.var("var_3079", dtype = "int8", shape = (4, 14, 13))#candidate|3079|(4, 14, 13)|var|int8
bop_3080 = relay.logical_xor(const_3078.astype('int8'), var_3079.astype('int8')) # shape=(4, 14, 13)
func_2225_call = mod.get_global_var('func_2225')
func_2226_call = mutated_mod.get_global_var('func_2226')
call_3087 = func_2225_call()
call_3088 = func_2225_call()
func_2552_call = mod.get_global_var('func_2552')
func_2554_call = mutated_mod.get_global_var('func_2554')
call_3113 = func_2552_call()
call_3114 = func_2552_call()
output = relay.Tuple([bop_3080,call_3087,call_3113,])
output2 = relay.Tuple([bop_3080,call_3088,call_3114,])
func_3121 = relay.Function([var_3079,], output)
mod['func_3121'] = func_3121
mod = relay.transform.InferType()(mod)
mutated_mod['func_3121'] = func_3121
mutated_mod = relay.transform.InferType()(mutated_mod)
var_3122 = relay.var("var_3122", dtype = "int8", shape = (4, 14, 13))#candidate|3122|(4, 14, 13)|var|int8
func_3121_call = mutated_mod.get_global_var('func_3121')
call_3123 = func_3121_call(var_3122)
output = call_3123
func_3124 = relay.Function([var_3122], output)
mutated_mod['func_3124'] = func_3124
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1575_call = mod.get_global_var('func_1575')
func_1577_call = mutated_mod.get_global_var('func_1577')
call_3151 = func_1575_call()
call_3152 = func_1575_call()
func_3063_call = mod.get_global_var('func_3063')
func_3066_call = mutated_mod.get_global_var('func_3066')
const_3198 = relay.const([-3.384504,6.103112,-5.940416,-1.500074,1.461067,0.901774,-4.285800,4.625262,3.260929,-5.877363,-6.904605,-9.466659,9.643337,-6.322730,-6.822737,-1.631572,2.834628,-3.685066,-6.150602,9.071215,-0.102910,-7.395859,6.054771,1.732515,-3.308738,2.268374,-1.030722,-5.790177,-1.993228,-9.679130,-0.589384,-2.377024,-0.006479,0.060665,3.096995,-4.633977,0.917918,0.193730,-8.407162,7.847930,-3.622697,-4.906305,-9.702919,-9.261497,3.349985,3.168401,-7.047432,2.332238,1.460038,6.077427,9.133539,-5.813966,3.298031,-3.305160,-2.688116,-4.758046,-8.003572,9.554859,1.881135,2.954483,-4.605205,-1.585351,-1.621050,7.674945,-7.513867,3.602124,-9.150191,-9.150273,2.952009,-1.933676,-1.432188,-6.497605,6.841021,6.005803,-4.136827,6.577322,2.712355,7.100417,8.404377,5.926362,5.762083,2.100299,-1.623034,0.421511,-2.078186,6.598765,-7.509483,5.585340,8.403007,-1.603891], dtype = "float64")#candidate|3198|(90,)|const|float64
call_3197 = relay.TupleGetItem(func_3063_call(relay.reshape(const_3198.astype('float64'), [3, 6, 5])), 0)
call_3199 = relay.TupleGetItem(func_3066_call(relay.reshape(const_3198.astype('float64'), [3, 6, 5])), 0)
bop_3201 = relay.greater(call_3197.astype('bool'), relay.reshape(const_3198.astype('bool'), relay.shape_of(call_3197))) # shape=(3, 6, 5)
bop_3204 = relay.greater(call_3199.astype('bool'), relay.reshape(const_3198.astype('bool'), relay.shape_of(call_3199))) # shape=(3, 6, 5)
output = relay.Tuple([call_3151,bop_3201,])
output2 = relay.Tuple([call_3152,bop_3204,])
func_3226 = relay.Function([], output)
mod['func_3226'] = func_3226
mod = relay.transform.InferType()(mod)
output = func_3226()
func_3227 = relay.Function([], output)
mutated_mod['func_3227'] = func_3227
mutated_mod = relay.transform.InferType()(mutated_mod)
const_3315 = relay.const(-7, dtype = "uint64")#candidate|3315|()|const|uint64
const_3316 = relay.const([[[3,-9,5,-1,2,-4,7,-5,-8]],[[3,-2,10,2,10,-1,3,-6,-8]],[[-2,7,3,1,9,-9,3,-9,-8]],[[8,8,4,-4,3,7,-10,10,-3]],[[1,7,9,4,-7,-1,-3,6,9]],[[-1,5,5,-5,3,6,-10,-9,4]],[[-4,-4,-5,-5,5,10,-1,9,6]],[[10,-2,-7,-6,-3,6,6,8,-1]],[[4,3,-9,-5,5,6,9,3,6]],[[8,-6,10,-10,4,-4,-3,2,10]]], dtype = "uint64")#candidate|3316|(10, 1, 9)|const|uint64
bop_3317 = relay.bitwise_or(const_3315.astype('uint64'), const_3316.astype('uint64')) # shape=(10, 1, 9)
output = bop_3317
output2 = bop_3317
func_3322 = relay.Function([], output)
mod['func_3322'] = func_3322
mod = relay.transform.InferType()(mod)
mutated_mod['func_3322'] = func_3322
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3322_call = mutated_mod.get_global_var('func_3322')
call_3323 = func_3322_call()
output = call_3323
func_3324 = relay.Function([], output)
mutated_mod['func_3324'] = func_3324
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1877_call = mod.get_global_var('func_1877')
func_1879_call = mutated_mod.get_global_var('func_1879')
call_3336 = func_1877_call()
call_3337 = func_1877_call()
output = call_3336
output2 = call_3337
func_3358 = relay.Function([], output)
mod['func_3358'] = func_3358
mod = relay.transform.InferType()(mod)
mutated_mod['func_3358'] = func_3358
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3358_call = mutated_mod.get_global_var('func_3358')
call_3359 = func_3358_call()
output = call_3359
func_3360 = relay.Function([], output)
mutated_mod['func_3360'] = func_3360
mutated_mod = relay.transform.InferType()(mutated_mod)
var_3366 = relay.var("var_3366", dtype = "float64", shape = (1, 8, 14))#candidate|3366|(1, 8, 14)|var|float64
uop_3367 = relay.cos(var_3366.astype('float64')) # shape=(1, 8, 14)
output = uop_3367
output2 = uop_3367
func_3373 = relay.Function([var_3366,], output)
mod['func_3373'] = func_3373
mod = relay.transform.InferType()(mod)
var_3374 = relay.var("var_3374", dtype = "float64", shape = (1, 8, 14))#candidate|3374|(1, 8, 14)|var|float64
output = func_3373(var_3374)
func_3375 = relay.Function([var_3374], output)
mutated_mod['func_3375'] = func_3375
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2552_call = mod.get_global_var('func_2552')
func_2554_call = mutated_mod.get_global_var('func_2554')
call_3421 = func_2552_call()
call_3422 = func_2552_call()
output = call_3421
output2 = call_3422
func_3424 = relay.Function([], output)
mod['func_3424'] = func_3424
mod = relay.transform.InferType()(mod)
output = func_3424()
func_3425 = relay.Function([], output)
mutated_mod['func_3425'] = func_3425
mutated_mod = relay.transform.InferType()(mutated_mod)
var_3464 = relay.var("var_3464", dtype = "uint16", shape = ())#candidate|3464|()|var|uint16
var_3465 = relay.var("var_3465", dtype = "uint16", shape = (6, 4, 14))#candidate|3465|(6, 4, 14)|var|uint16
bop_3466 = relay.greater(var_3464.astype('bool'), var_3465.astype('bool')) # shape=(6, 4, 14)
output = bop_3466
output2 = bop_3466
func_3480 = relay.Function([var_3464,var_3465,], output)
mod['func_3480'] = func_3480
mod = relay.transform.InferType()(mod)
mutated_mod['func_3480'] = func_3480
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3480_call = mutated_mod.get_global_var('func_3480')
var_3482 = relay.var("var_3482", dtype = "uint16", shape = ())#candidate|3482|()|var|uint16
var_3483 = relay.var("var_3483", dtype = "uint16", shape = (6, 4, 14))#candidate|3483|(6, 4, 14)|var|uint16
call_3481 = func_3480_call(var_3482,var_3483,)
output = call_3481
func_3484 = relay.Function([var_3482,var_3483,], output)
mutated_mod['func_3484'] = func_3484
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1877_call = mod.get_global_var('func_1877')
func_1879_call = mutated_mod.get_global_var('func_1879')
call_3491 = func_1877_call()
call_3492 = func_1877_call()
uop_3499 = relay.erf(call_3491.astype('float64')) # shape=(14, 9, 15)
uop_3501 = relay.erf(call_3492.astype('float64')) # shape=(14, 9, 15)
func_3063_call = mod.get_global_var('func_3063')
func_3066_call = mutated_mod.get_global_var('func_3066')
const_3506 = relay.const([8.679783,-4.251562,3.538970,8.749388,-9.413854,-0.138869,2.052090,8.439438,4.184379,-9.016409,1.801296,1.516793,6.136846,3.760320,-8.195621,-0.741171,-4.492069,0.367340,-9.933087,-0.523530,-2.340707,-4.100264,-6.763543,-0.397580,5.372153,-9.674252,9.449947,0.781290,0.558387,9.506313,9.770163,0.752519,3.247863,4.935205,4.206807,-9.018581,-6.504964,4.956291,-2.874518,6.152547,4.773747,1.048720,4.895589,0.086881,2.716797,-7.374258,-2.348661,-6.107868,-1.099021,-7.883369,6.778291,-6.673510,1.159350,4.550822,3.814915,2.449811,-9.468666,9.206853,-6.597947,-2.975447,-2.028715,-8.158094,1.562296,-7.645436,-1.229109,2.886622,1.139143,1.466533,-4.681900,6.813954,7.476783,-2.697288,5.613260,7.805210,-2.475843,1.197562,6.237899,-0.052442,-8.693785,-1.654632,5.092437,9.620391,0.559316,6.317745,7.343869,-0.787915,6.444280,-5.417827,-1.885785,-8.349147], dtype = "float64")#candidate|3506|(90,)|const|float64
call_3505 = relay.TupleGetItem(func_3063_call(relay.reshape(const_3506.astype('float64'), [3, 6, 5])), 0)
call_3507 = relay.TupleGetItem(func_3066_call(relay.reshape(const_3506.astype('float64'), [3, 6, 5])), 0)
output = relay.Tuple([uop_3499,call_3505,const_3506,])
output2 = relay.Tuple([uop_3501,call_3507,const_3506,])
func_3526 = relay.Function([], output)
mod['func_3526'] = func_3526
mod = relay.transform.InferType()(mod)
mutated_mod['func_3526'] = func_3526
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3526_call = mutated_mod.get_global_var('func_3526')
call_3527 = func_3526_call()
output = call_3527
func_3528 = relay.Function([], output)
mutated_mod['func_3528'] = func_3528
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2552_call = mod.get_global_var('func_2552')
func_2554_call = mutated_mod.get_global_var('func_2554')
call_3529 = func_2552_call()
call_3530 = func_2552_call()
func_548_call = mod.get_global_var('func_548')
func_551_call = mutated_mod.get_global_var('func_551')
const_3535 = relay.const([-4.842936,-2.987482,0.778698,-7.694146,-2.201062,-1.017930,9.056076,4.055226,3.285675,-4.438656,-3.219064,-3.945938,-2.076662,5.810375,-8.220914,8.224303,-6.207823,-9.435070,3.802633,1.484204,-0.702850,-1.029837,3.970512,-6.802222,-1.456009,6.295550,-1.809197,-2.342804,5.082843,-4.511385,5.928707,-1.365495,8.814701,0.305050,-6.038032,5.858146,-9.236632,-0.295068,7.709055,-2.939414,6.393309,-8.962423,3.800128,1.727454,8.654772,-7.624780,4.856183,-7.868034,8.652237,8.175989,-5.799705,-7.494916,-8.221396,-5.136981,0.455766,3.053639,-2.315874,-0.413613,2.159932,7.910295,1.397505,5.249642,-7.653309,-8.987708,7.734391,5.980743,-3.312340,-2.718725,9.738715,-5.805955,-0.356285,3.274157,3.611120,-6.344175,8.067050,8.184611,-7.811055,-7.088804,-5.911638,-9.115294,-3.151650,2.903119,-4.455784,-1.485092,8.801722,-3.772345,-4.817443,-4.895291,-6.816553,-6.499163,-6.955128,-3.218689,-7.251677,-0.617712,2.698929,-1.358430,-9.105251,-8.846174,-2.125952,-6.387106,3.828741,6.409124,0.881115,-9.396593,-6.254303,0.925296,-1.630345,1.473742,-7.514134,-0.554282,9.339932,-2.449868,-5.404073,-7.557301,1.567718,-8.681959,1.921037,-9.862445,-1.345819,-4.224996,-0.609059,6.996819,-9.894825,9.901978,-7.796442,-0.901337,1.106219,-1.412901,-9.466913,-7.672312,6.638357,-6.121514,-6.565919,4.372240,8.666074,9.575962,-2.105185,6.103039,-4.555761,2.607895,-2.818391,-4.913271,-4.146254,2.661436,9.195188,-6.802819,1.165386,7.684402,-5.910841,-1.496221,0.639622,2.216503,-1.796908,-7.481431,3.382100,-5.634636,5.031480,5.558479,7.674366,-5.812668,-8.080930,6.343456,-0.345949,1.961222,-1.994615,-8.201566,-4.700118,7.865353,-9.187253,1.404040,8.457028,3.043066,-4.788130,0.403904,-9.339253,-0.794749,-1.010559,-5.315022,-3.305715,4.449139,7.978404,-4.648944,8.924629,-5.377679,5.780587,-7.162082,5.662073,-5.435391,-1.699234,2.124063,1.761165,-5.923110,-3.777158,-1.966111,-1.517962,0.709363,-2.710396,7.413272,7.428719,7.520120,0.271060,6.864965,-0.349460,-2.603359,0.137873,0.554542,3.037683,5.497545,-6.094282,3.652266,2.655287,-4.509088,-0.416604,-2.024297,5.185846,4.510825,5.898166,-4.999238,-5.207453,-6.750610,-0.011321,-4.477273,7.795240,7.995196,-4.951395,4.205391,9.751499,4.869067,9.319941,1.461333,3.161912,-0.647187,-3.834355,-9.441691,0.808291,-2.052901,-3.963660,-1.141790,-1.765131,6.804848,-5.803164,6.256345,-5.021388,1.692081,-0.409193,7.625600,8.158730,-7.195111,-3.874381,-3.344921,4.680832,1.866675,-8.408551,-8.784425,-3.748761,5.282546,-0.895184,-0.187861,8.551355,-7.546247,7.613556,6.619983,5.162958,-1.846231,5.293865,-6.808113,4.685564,-5.789151,3.199148,0.080198,6.952537,-5.254204,1.041488,-1.040566,-9.843468,-4.392130,-5.822447,3.334388,0.165642,5.975401,-5.094515,1.890105,-0.760074,2.592201,-6.146868,7.441085,3.204728,0.807579,-3.413119,8.730419,4.093764,-1.400370,-9.421063,7.794956,6.666110,-0.885292,-6.528111,-8.595880,3.132552,-1.078313,-0.289097,1.055166,9.974010,-6.241597,1.683603,8.407696,7.437048,-7.582441,1.479689,4.655386,6.291215,-3.541486,0.364218,-9.696606,5.767739,9.280413,-7.210316,3.506576,0.764629,9.487284,-1.850432,4.780387,4.896539,2.546776,-7.563856,8.722749,-2.759045,2.765177,-9.339087,-4.812717,0.364258,2.323036,6.097109,8.685584,-3.824218,5.439412,8.035238,-7.399765,-6.262163,4.792485,-4.953538,-4.838839,5.730462,2.718477,7.847418,8.384130,6.537476,-5.346625,4.463742,5.446547,2.002331,-5.264921,-0.672971,9.079477,-4.457406,7.167703,4.077371,7.190303,5.676233,4.643921,9.434219,2.283608,9.417002,3.030215,-4.017483,0.867190,6.824748,-5.828930,-9.527181,-6.333550,1.615989,-0.185142,-6.579068,2.910406,-6.250515,-4.475567,0.082367,-6.817142,-4.698426,6.113686,-9.132695,-8.436044,0.818593,7.719236,-9.508853,-6.331814,9.195388,-4.305996,3.594566,-5.914480,-8.512699,2.504256,-7.955525,7.851893,9.296415,4.915134,0.403345,6.106079,2.483265,-7.175541,-0.528601,8.288847,4.367602,6.452251,8.784565,-4.618284,5.052469,6.237133,6.048120,-2.400009,5.672566,2.142807,1.512387,8.083827,3.557843,-7.875068,2.722393,-6.737459,6.244049,9.062633,8.049001,5.051993,6.898593,-8.399666,3.819663,5.520577,3.728619,4.807484,4.760658,5.112404,-8.952969,-6.456792,9.933816,7.230704,3.495300,2.182914,-6.939728,9.974899,8.805053,0.160552,-5.686989,8.035514,7.859127,-2.781798,-9.212674,5.619158,4.573464,-8.490647,-5.287013,5.750065,-9.705550,-4.425932,3.731247,-3.187829,-9.397713,5.329154,-9.408554,-4.049693,0.042099,-2.037917,-2.246628,7.766071,2.736332,-9.606575,5.821746,8.302735,-9.106293,-0.806156,7.117376,-0.095167,-2.113618,-5.282002,-2.908745,-4.974337,4.058379,6.301730,1.542018,1.513221,-1.058483,-2.136320,-6.740468,8.538184,-2.369301,-6.783710,-3.023177,9.635051,9.014147,6.608306,-1.797570,0.182827,-2.008630,4.897679,3.136050,5.612714,-0.788392,1.400612,8.411644,3.101406,3.449623,-0.790275,-7.384612,-2.089012,4.202230,9.467598,-3.232556,-5.426543,-8.939748,-7.970454,-6.986893,9.688495,1.866861,8.620289,-2.768534,-4.720156,1.474236,0.088060,-7.781647,1.978459,-1.073107,9.825178,0.544172,7.810611,7.721926,-1.785408,6.850045,-8.447353,-4.737614,-5.734541,-4.493641,-2.004265,3.979271,7.032836,-3.002509,6.844276,-5.184701,6.945293,-4.067309,4.304421,-4.122233,-7.906595,4.727850,-4.073456,-1.265217,-4.191183,-7.404863,-1.252617,0.710671,8.141286,-6.013978,-0.094757,-2.536313,4.864056,-5.197812,-1.006014,-7.189720,7.309444,-5.315678,6.774680,-3.242641,3.067069,7.336211,-5.228709,-5.295574,-4.491623,-7.650969,3.762343,-5.179496,-1.650874,0.124895,5.109173,7.114293,3.220388,-6.927283,-3.734230,9.476316,7.817133,-2.721262,0.330103,-2.239644,4.602545,-5.492821,5.492107,8.865407,9.717081,-4.780846,-1.888173,6.584643,2.348281,2.953492,-8.448315,-2.139532,1.582212,0.545622,8.280507,-3.242883,1.833460,7.085997,3.978403,-8.037804,5.674460,3.886050,-4.027036,8.934979,-6.846288,3.162640,5.460356,1.903707,-8.685852,5.047732,-2.055222,8.625026,-3.734973,-1.516847,0.169584,7.525344,2.530517,0.802325,9.458728,-7.687085,0.169970,3.882318,8.669001,7.927682,0.141674,4.332057,-1.443358,1.345778,3.645851,-1.819030,-3.759957,5.061627,-7.147582,9.234449,0.432185,5.022321,-5.398122,-8.738984,4.010019,7.388821,-8.215660,-6.983254,8.506678,-8.884406,4.813889,-0.776833,-7.185655,-9.389851,-8.228242,-7.634773,7.741203,-1.132992,-2.554189,7.882800,-9.689545,4.190621,9.550150,7.986307,2.517690,8.217335,-7.006495,3.550070,3.569356,7.016108,5.080072,7.526755,5.505791,-0.142635,-5.217137,-6.763080,8.402379,-9.403141,8.716167,3.125935,0.434832,-9.178522,-8.099805,-7.623068,4.714371,1.310047,5.544719,0.932277,-2.667095,3.089632,4.575654,9.490533,8.576884,2.137213,4.206133,8.338996,4.773801,-3.461181,6.660094,6.469741,-3.363701,-4.099821,5.980611,7.488435,1.569802,3.447528,-0.822036,3.242763,-8.845290,-7.483847,-8.665931,-4.495306,7.917267,9.946005,7.725735,6.201261,-5.544559,2.661600,0.110049,6.809460,5.068196,9.981120,-5.365981,4.451842,0.860287,-3.346901,-9.051969,5.910537,-0.760451,-7.271797,7.220712,8.627185,7.364637,-3.170051,2.225899,-8.275584,-6.464671,-8.388323,-6.845876,9.495011,-2.402727,8.817020,-3.605176,-4.293376,-6.976202,-3.000705,2.785880,6.660427,-2.008040,8.350505,7.461042,3.043540,-0.606402,-5.999880,1.348115,-5.658075,-2.601855,-9.997866,6.890773,7.545695,-1.181964,5.144278,9.437365,-0.496305,-6.848943,-3.399402,6.098925,1.214232,6.594960,2.983932,2.529102,-5.346038,9.084536,-5.909950,-2.145682,-8.630431,4.623872,-9.797916,-0.695795,1.718882,-2.505461,6.768145,0.550636,6.228375,-9.322745,7.659417,0.362714,7.282144,1.257427,7.218396,7.241998,-5.235674,1.468855,-2.142267,9.220651,8.991756,9.963468,-7.307026,7.802693,2.660816,-9.354538,-2.172469,2.778743,-9.561662,1.878728,-8.442894,-2.096540,-8.859195,6.249738,6.508850,-9.073805,-1.780942,4.996437,-4.632100,8.892718,1.883662,-3.237348,6.459738,0.429633,-8.311563,3.500797,-6.302823,9.227085,2.449754,3.902948,-9.150667,3.684285,6.975807,4.687106,-5.516903,9.574355,-2.212290,2.883030,9.433855,2.857015,5.042122,-1.795817,-1.186124,-9.105241,-7.769600,6.168014,1.276242,-5.691326,6.592418,-3.170743,-5.439500,7.606631,-8.955212,-2.738067,-5.414911,7.850856,-4.393821,9.333892,-9.751181,-3.043557,8.443215,8.217564,2.216226,1.463785,6.567180,-4.068849,1.572162,-4.721421,-4.705851,-2.304989,-8.839846,-3.228341,6.134460,-8.762845,-2.006945,9.744587,-4.479948,-4.387148,-8.235245,-2.249314,-0.138184,6.671422,8.875885,5.941378,-7.134064,-3.697461,6.999061,7.834601,-9.526592,-1.463353,-1.584808,-1.263463,-4.335907,-5.248852,-9.340828,-3.772745,2.066231,-2.341465,8.027072,-8.819435,6.305511,8.859551,-3.373316,-4.651136,-9.778989,5.018096,-5.460773,0.252681,-4.526828,7.446135,-7.864575,4.925468,8.854604,-3.746903,4.530140,-9.007915,9.671079,-6.167208,-1.947280,-2.929232,5.629525,9.340734,2.669776,6.588925,5.499711,-4.419889,-0.311423,3.238643,-7.597427,8.418177,4.955794,-7.348640,4.639212,-7.666660,7.382821,-1.063838,-9.718985,-1.275534,-6.769284,9.796558,-8.195155,7.764424,-4.530043,-4.688006,5.043326,-6.943742,1.521237,0.935659,1.181573,-5.226667,3.118460,-6.705421,5.891407,2.532402,-5.024283,6.291643,5.789788,5.646722,8.666076,-9.566086,6.007742,1.566976,0.584092,3.243786,-4.139660,-6.462883,-2.286065,2.747893,2.931251,0.755984,-8.141398,3.756980,-9.453360,4.090740,-1.202378,-7.634229,-5.701695,5.908881,-5.364074,5.878734,-2.798213,-1.420531,-7.811817,-5.410089,5.851671,4.241751,-9.263718,7.424710,3.824825,8.786617,-3.488249,-9.109244,5.941770,-9.943895,-2.667696,5.737957,2.140735,-8.613597,1.178334,-0.334675,-2.629792,-3.436610,-2.259007,6.651926,-8.532448,6.803949,-6.731148,-8.644704,1.996488,-1.339688,-4.295967,1.214879,5.531153,6.554995,-4.024221,0.778766,1.534253,-8.614092,5.273490,5.838035,-4.305514,-8.824158,-9.217375,-2.480877,-4.043801,-5.927643,-4.119875,-0.344750,9.362618,2.581642,7.615190,-7.343307,-8.170366,-5.189665,7.872893,-3.846654,3.230374,-5.276219,2.727871,5.472895,2.353759,-9.141546,3.902287,-1.993791,-6.455900,3.278097,-1.477580,-9.522201,-2.336190,4.073258,-6.778765,2.166433,-9.182837,-8.712324,-1.942210,8.452000,3.289329,-4.884007,4.667387,3.569153,-7.774272,2.423935,-7.401514,8.604772,4.841026,-1.794428,-8.385124,2.720816,-4.636451,-9.612548,2.105359,-0.484930,7.197430,-1.295204,6.063953,-6.067980,-6.305465,0.442353,9.587684,5.972075,8.384422,4.710589,2.772993,-3.001948,-6.037429,-8.165469,3.846259,-5.989140,4.204405,7.574380,-6.950131,-3.523064,5.793041,9.804822,8.777788,2.040852,3.574543,-3.672810,0.734038,-6.168082,-6.783176,-1.947943,0.224626,-6.178294,6.115520,-1.481483,-9.016435,-2.926630,-2.028936,-6.208386,-2.931922,-7.208251,-6.123508,-0.053525,5.641155,9.553152,0.824882,1.620973,-1.199333,-1.458427,8.326993,7.282419,5.686250,-5.552560,-2.729340,8.921886,-6.680381,-7.764192,1.185618,2.376376,6.281374,-8.548137,-7.651636,1.650458,5.924355,-7.631027,-3.551453,-3.880982,3.455797,1.167289,-3.259162,-0.093417,-7.206459,8.755045,9.326819,5.414783,-6.955301,4.901322,8.042696,4.855994,-2.625540,-3.970665,-9.840384,1.907024,6.886132,6.537417,6.029254,-2.933786,-4.808628,2.684527,-2.963568,-6.963956,-8.156268,4.681127,-8.544781,5.834520,-0.238732,-1.617795,-0.682098,-6.901163,-9.176308,5.508507,4.161476,-8.765276,-8.363113,4.335306,-2.854095,5.323246,-8.556634,-0.541113,1.134662,3.359340,5.529859,-0.011703,5.810068,5.606696,-5.918886,-5.576433,0.593921,2.708025,-3.779977,-6.708004,-0.531868,-0.639580,5.811864,-1.791671,-7.159452,-2.978130,1.342383,5.665219,-9.069919,-6.954039,-3.375640,-1.788639,7.410848,6.665276,9.903344,-3.749307,3.437899,-8.315677,-0.746905,9.758909,-1.934321,-1.505339,4.178741,2.944198,5.593782,-0.661895,-8.404391,0.914667,9.143226,8.050043,-3.129549,-7.607398,-4.818378,-7.494964,2.281442,3.729828,-3.831072,3.410317,-2.510511,1.330296,3.981874,0.078299,-9.464443,4.984733,6.853236,-6.189225,0.467855,5.988752,5.863456,-0.650701,8.892712,8.100203,8.886920,9.921808,3.353737,3.808851,3.412807,-4.461973,3.558324,6.542942,-7.361861,1.559162,-1.854606,-1.442928,-5.886518,0.364056,-8.705582,3.555427,6.914743,1.852899,1.191245,9.236496,8.875767,0.651854,-4.822510,7.809210,-6.420917,-1.442857,7.532645,5.441119,4.800827,-0.580558,4.879687,3.272734,-6.546099,5.910109,-9.499085,-3.638172,-5.037312,-0.809313,-2.718288,1.769055,-5.507512,-2.466359,-9.785315,-6.516283,-8.486067,-0.449676,-1.358283,-8.911428,-5.348091,1.218587,9.765997,3.113938,8.287687,-7.230657,7.923146,-9.619666,4.893485,-4.831636,-3.404608,4.711212,4.479912,-9.296302,7.511655,-7.585661,-3.648198,-3.893234,-6.327880,3.451810,-4.089134,9.203701,-1.739867,0.059816,-4.197120,2.771661,-0.109667,3.425954,-9.594980,-1.213764,0.202444,-7.139814,-5.093011,6.001799,-9.084673,-4.641656,-4.674797,-6.009688,1.378863,-4.209272,1.064813,0.221260,-7.934226,9.457027,-0.441960,-4.864729,2.244929,-6.826994,-9.354657,-0.376475,-1.969311,4.909902,-0.966546,8.924264,5.165636,-7.872234,-4.937534,3.487945,-8.626139,3.985003,-4.172912,-8.074480,-0.812920,2.343549,-8.881070,9.853047,-1.083020,6.669121,1.300657,-5.323587,-8.820204,6.162354,-4.129951,8.490129,-9.487934,-2.896625,0.792497,-9.504562,5.175908,-3.485883,0.936604,-3.474065,-5.111683,-5.686046,8.060867,-1.763916,4.334279,-9.452128,-7.112911,3.696474,-6.635604,8.538808,-3.100982,-0.518643,1.204983,-6.253336,-3.242822,-1.907308,-5.603066,-3.899860,-3.515568,-2.585870,0.057915,2.948144,-3.694977,-5.829592,-6.117016,-9.765267,9.869998,-0.329331,2.761859,6.940017,-4.644639,-2.947941,-3.137369,-5.543871,-0.925914,8.275528,3.042387,7.535085,0.973554,-8.376662,-2.303156,-5.771139,4.460900,-5.640103,8.872058,2.687339,-7.919732,5.431508,-7.561895,8.077877,-5.905483,-9.978333,1.070027,4.087859,1.910295,6.409042,7.314875,9.536138,-0.926282,6.582469,6.340242,8.215577,4.147996,0.633318,-2.186513,-1.986020,5.707578,-5.023940,-8.042712,5.286022,-6.210796,4.573453,-8.960223,-9.125296,9.628806,3.690149,-0.514699,-7.363666,4.633828,-2.801329,-3.242235,-3.002930,3.410896,-2.521649,-5.889434,-4.252474,-7.629822,-3.039786,-0.930636,-0.383950,9.093908,4.005616,-5.273353,2.891526,3.719923,-8.726262,-8.590926,0.170286,9.164971,5.781981,5.629408,-9.958975,-5.213003,-4.363328,-9.868532,-3.520736,-2.434628,0.203787,9.540460,-5.894114,-5.206415,-6.890986,6.903160,6.324550,4.220615,2.267957,-2.695206,4.507056,-2.879751,0.001637,-6.249147,-0.918931,3.098038,5.209783,-5.352390,2.778464,-2.828137,4.173128,0.846427,3.360285,-2.290876,4.764442,-1.639291,8.602779,1.239131,3.144206,-0.948616,-3.111491,-8.402854,-6.014518,-8.781446,9.614874,6.056927,-5.983071,1.004071,4.308010,-5.481818,-3.269094,7.603862,-8.585828,8.964664,-7.193478,5.869332,5.604332,3.909301,0.964127,-3.775862,-1.337936,7.122602,-7.857648,-1.138162,-0.577604,0.254179,-9.787607,-2.798368,1.709641,-9.329529,5.818171,-4.446070,5.926535,-2.799643,7.053900,-7.786924,-5.203600,0.277764,-0.669942,3.361079,-6.737833,-7.406027,7.422788,0.858925,-2.501841,8.033550,-3.991234,-4.173862,3.811053,-9.034580,4.238489,-5.074337,-6.355699,7.187942,-9.261355,-5.543352,3.338275,5.487205,1.762876,9.529880,-6.303494,-4.807357,-3.470785,4.955298,0.259657,7.368436,-1.540994,2.089816,3.759564,2.856565,1.584363,-8.797985,-9.215229,4.311076,1.015867,4.669709,5.228974,-6.713978,3.729958,6.652612,0.038146,7.046830,6.563234,-6.386444,2.671814,-8.333376,3.494388,7.565395,-2.515930,-1.766469,4.011561,0.236922,1.116830,0.284293,1.073633,7.357635,1.268605,-6.008671,7.340662,6.200120,5.843238,6.944349,-3.932863,-6.469744,-3.972098,-3.157809,3.526529,-5.364918,6.430651,6.749657,5.020199,6.961795,3.469520,9.058354,6.662479,-6.897797,-4.615737,4.288157,-5.825892,5.108651,-7.198282,9.304738,0.307453,-0.777756,3.332610,-9.556547,0.919315,8.062380,1.886105,6.547164,3.918551,5.472481,-9.814432,-8.417083,6.443688,2.772389,-3.832023,1.837361,-7.568745,-3.590718,5.084081,-6.456052,8.363940,1.574261,-0.257148,1.784320,-0.366656,2.012028,6.529248,-4.495346,5.646249,0.355903,-3.688496,-0.753732,-8.082942,-2.960152,5.860618,-9.502748,-8.959451,0.116739,0.200682,-3.632491,-5.425180,-7.017044,0.008128,-9.393436,-0.403049,-9.840518,-5.067924,5.447580,-4.378415,-7.786901,8.103582,-8.464365,-0.178432,-0.192590,-5.033429,-7.818919,0.194609,-2.108357,3.313168,3.832515,-4.526418,-4.995497,-9.464946,-0.542701,9.938020,-5.626525,9.725017,-9.836568,6.041711,5.554149,5.130756,-5.431204,-4.598842,5.779729,2.431353,2.886065,7.265892,-0.132386,-3.268460,-5.062392,4.571793,-6.438858,1.495588,-6.801400,8.165386,-1.212750,0.851623,8.172003,9.078080,6.465314,-2.994437,8.258775,-0.824249,0.258975,-3.213048,-2.754973,6.368508,-8.417037,7.810748,3.979798,8.832207,9.690925,-4.849790,-6.745533,-9.884837,-9.394921,1.807051,-8.689456,6.384210,-3.724185,4.715561,3.159851,2.323272,6.227273,-3.702605,5.289709,-4.692809,3.065797,-5.206302,-5.174046,9.729889,5.669341,-5.505619,2.046540,9.310186,2.225057,-7.527116,0.338227,4.702662,5.834356,7.531114,0.212264,6.376520,-9.876012,-5.873602,-9.885771,4.768831,-4.441892,9.031126,2.651077,4.115528,4.861714,9.469239,6.707509,8.581311,7.857272,-5.923329,-5.663586,8.441405,3.596728,-1.536745,8.250934,3.837675,2.202646,0.112418,9.083748,-3.260055,8.885725,-5.380661,-5.154082,0.214094,-3.832213,-1.653512,9.547160,-3.598619,7.316686,9.002480,-9.327744,2.710300,3.998975,4.742716,1.908411,-4.263720,9.317868,-9.787223,-9.734831,0.999913,5.455225,-1.720888,7.743632,3.176133,0.179653,-8.110196,3.209177,6.021484,-5.569405,6.834160,-5.510539,-1.795576,-0.723271,7.635521,-5.790990,-7.440670,-0.402659,2.226230,7.037973,9.381300,3.138851,-8.965666,0.811663,6.351771,-0.060707,2.864033,-0.714082,5.755717,-9.734142,-4.023564,2.124045,-6.434625,9.861891,-4.808016,-3.261023,0.907761,5.246318,-4.713189,3.933038,-3.274312,4.734050,0.839393,-1.745497,-2.562342,0.879761,4.115320,7.538888,2.192297,2.602399,9.890683,1.717192,4.146186,9.333614,4.859617,-7.927242,-5.895488,3.231336,0.995511,-7.192995,1.751655,-8.117102,2.917337,-6.464088,-1.760916,-8.950378,-1.203083,-0.463453,-8.371130,2.792035,6.063308,8.195417,7.168488,0.157051,-0.579087,5.766653,6.888676,9.703123,7.600997,6.889540,1.857938,-4.724327,0.647242,-1.978998,-0.733564,1.030644,6.155801,3.358430,-8.221436,6.605990,6.174575,-1.176280,6.618543,5.283253,0.412017,-2.600829,-8.000372,-7.741492,-4.225722,7.973703,9.536190,-8.491040,6.164428,8.992896,-3.734029,1.395039,4.969676,-0.941790,9.905505,-5.881492,8.469308,5.134315,3.693458,4.478795,-5.408490,-2.247078,-7.714026,-1.171032,-1.877825,3.556530,7.734032,-1.308853,-7.758073,6.098996,-0.858113,-8.220995,-0.746789,1.396746,-3.155626,7.760413,3.048408,-1.465665,-9.185360,-1.547972,-3.220501,7.518619,-0.109974,7.973026,2.700450,-5.245167,-6.875310,9.793330,-1.274888,-7.769528,8.272073,-1.610785,8.162537,-9.249270,5.694116,-9.220092,-0.652781,6.882658,-3.406400,2.628325,2.492432,5.548063,6.000091,4.645526,-3.088253,-9.486380,0.608799,-6.618504,7.270009,6.398011,0.627223,-3.381025,2.408897,-4.107121,-5.020430,4.919554,5.850075,1.180466,7.701086,2.993802,-2.489194,-9.232383,-2.659650,-4.212307,6.387362,-5.732286,-2.903736,4.629311,4.560535,4.663609,8.545248,2.401565,2.142384,7.087917,9.779401,-0.947478,-7.959616,-5.482239,-6.948959,-4.070912,-9.437097,-3.912281,-8.058019,-2.589007,-5.435529,1.553968,8.993968,-0.640892,-4.928117,4.699626,-1.972036,8.559657,-7.232082,6.968026,2.152335,5.648955,7.400813,-0.248823,2.377518,7.968359,-3.984856,2.244584,2.212537,-3.389611,-6.154418,-3.800630,-3.260780,0.425181,3.362141,7.293154,8.743507,-8.975580,-7.625336,-3.081099,4.020004,7.174385,-7.908235,3.711797,5.038448,0.866140,-3.035733,-4.794728,-6.916250,1.046897,4.205452,-2.119663,2.199904,4.123196,9.350249,0.240828,2.475997,-1.378174,-5.161656,0.562952,1.364776,4.865786,-6.400005,-7.826388,2.399260,-6.573614,-2.146505,1.031938,0.208121,-7.847611,-0.707475,-6.814640,-9.825469,-2.322284,-9.989010,-6.936436,-0.520022,8.399548,-0.025815,6.888446,-0.709819,-6.879536,-7.120345,-3.542255,-8.230492,-6.505626,0.938553,-3.101916,9.742569,-5.041005,-9.019055,-6.526297,-1.508836,-2.141586,8.981108,-9.183681,2.757393,1.306282,1.291389,-4.101846,-4.362742,-5.961335,2.481348,6.143243,5.699986,-4.846170,0.445073,1.429058,3.155821,-2.222451,8.777158,-2.650883,5.192812,6.341276,3.603848,-1.653515,-4.611898,0.890191,5.696020,7.165856,-1.749692,-7.482136,-8.639347,2.215741,2.887396,-2.411139,3.251107,-7.739531,-7.684797,4.745911,7.459424,7.182135,-7.844592,3.254370,-3.367517,8.098158,-8.115697,-5.484120,8.774885,-6.307912,0.456149,8.696617,0.892074,8.520596,9.429929,-7.861367,-1.729126,6.027260,-2.669203,-3.859153,9.465358,-1.284729,3.241689,-6.629044,-6.196296,-4.307013,9.754793,-4.389544,1.618555,2.145118,-5.420331,0.162675,9.756508,-4.699954,3.881763,-7.969230,-1.274190,-2.799313,7.960357,-9.360169,-7.209175,1.574228,-5.172540,-9.724025,8.359395,9.929406,4.733362,-2.914212,3.328635,3.808377,5.152895,2.182263,-5.134609,-2.366959,-3.819068,2.450475,4.869704,-9.114912,3.179439,5.585046,-3.298732,-3.181730,9.731979,0.784926,2.148162,7.618784,-2.370615,-8.343520,-6.498177], dtype = "float32")#candidate|3535|(2184,)|const|float32
call_3534 = relay.TupleGetItem(func_548_call(relay.reshape(const_3535.astype('float32'), [12, 14, 13]), relay.reshape(const_3535.astype('float32'), [12, 14, 13]), ), 0)
call_3536 = relay.TupleGetItem(func_551_call(relay.reshape(const_3535.astype('float32'), [12, 14, 13]), relay.reshape(const_3535.astype('float32'), [12, 14, 13]), ), 0)
func_2408_call = mod.get_global_var('func_2408')
func_2411_call = mutated_mod.get_global_var('func_2411')
const_3539 = relay.const([6.893169,2.119143,-7.169419,3.687493,-7.494362,0.549274,-6.181418,5.953522,9.042093,4.745090,7.096028,3.527001,7.822684,-4.628960,2.390671,8.625468,6.038148,8.146407,-4.849901,-6.402806,-4.348286,-0.678772,5.037073,2.999560,1.286883,8.049387,0.060320,-2.608469,8.124824,9.846763,-5.147650,7.549053,-9.990884,6.219649,6.759604,5.317703,8.520806,-5.107641,7.845931,1.264861,-4.592239,5.625984,7.395994,-5.126345,0.415892,2.473222,-8.868964,0.836322,9.540871,-3.229965,-3.239827,5.204829,9.519863,-4.590593,1.726721,7.052327,-9.194374,3.082359,-4.156408,-2.198105,3.551642,-9.507052,-1.740556,-8.469181,-6.370439,-4.246599,9.873290,7.369180,6.675378,9.112033,6.999096,1.513416,-5.580368,-6.779313,-5.898524,-7.317911,-5.891886,-0.053660,-0.053790,2.890825,3.962202,1.758899,8.455222,4.597668,6.256963,2.072447,-1.391884,-2.400525,9.315865,2.730885,-2.532071,9.796534,-6.302949,9.939451,2.186825,-6.361267,7.094538,0.289158,-1.169730,6.424985,2.328600,-8.974128,0.109423,-6.861666,1.595560,8.774821,3.742954,3.487347,-9.258123,-1.054929,5.570060,-7.666581,0.703775,6.317729,-9.251499,3.556608,9.189516,6.739382,-9.117328,8.071907,-3.349304,9.799122,4.387834,3.404212,-7.103489,9.238830,-0.739614,-8.284069,9.135917,0.032516,-6.326581,-4.475023,2.634578,4.092819,8.415894,0.629079,4.003462,-5.857064,8.406979,-2.554595,9.894860,4.007676,8.171193,4.834364,8.036612,-3.272901,7.868942,3.808381,5.233825,0.272878,5.276352,-4.534457,5.805623,-6.406801,-9.342482,-7.327506,-5.892471,-6.863820,3.328352,5.318474,-3.686168,7.280158,-8.188535,-4.852350,5.302341,-6.199203,7.918884,7.997705,2.393987,6.286989,-9.012369,-6.142199,-0.083392,-0.256828,-6.968364,-5.132008,3.607309,5.079184,5.323826,7.273324,4.084084,3.360353,-2.739596,9.964886,-8.227619,-8.430511,1.795803,-5.188626,3.394541,5.038593,-1.866327,-2.679837,4.046319,3.145245,-5.572988,9.587379,-4.401475,-3.469619,9.913212,6.182090,-4.516656,-7.817521,-6.381872,6.660425,8.305390,0.643007,5.909603,-2.033112,9.203629,9.570691,-9.103450,4.659120,7.440110,-7.651403,-4.835325,5.957090,3.756176,-0.583412,-7.047501,2.512311,-9.980061,5.842616,-5.049853,1.132876,7.158488,0.463691,0.976742,-0.793273,-6.862997,-6.399118,-6.234025,-0.346761,1.643582,9.669611,-6.738185,-8.840238,-2.387796,-8.433621,9.649897,-4.082277,-1.844005,-3.872517,7.687676,2.578332,9.012597,-4.969783,1.286217,8.792100,2.802824,-1.700325,0.636072,-0.709452,-8.204226,3.560556,-7.839675,-2.393496,0.654275,0.352038,7.452773,7.054438,-1.957862,3.821397,-9.016830,-7.448095,2.970196,0.127873,2.494470,-3.432120,9.400463,9.185321,-6.037052,-9.759224,9.775168,-9.534580,-9.000146,5.372376,2.286857,-6.550657,-9.511493,4.313018,4.279224,-1.358096,-6.224536,-4.311058,-2.892792,-5.196755,8.929414,0.216587,-5.409807,-2.534928,8.261108,8.183356,-3.182534,-1.452516,-6.127389,-0.452632,-0.474293,5.702451,-9.132479,-2.365982,6.590854,3.080102,-6.247940,9.905589,-8.228000,3.265289,-8.171803,-9.536221,7.263932,4.147481,-8.657954,3.953033,-5.173500,4.605214,0.670595,-6.922555,-7.454040,0.481137,-4.213743,8.553426,-2.265178,-9.544042,5.464732,8.383192,7.182878], dtype = "float64")#candidate|3539|(325,)|const|float64
call_3538 = relay.TupleGetItem(func_2408_call(relay.reshape(const_3539.astype('float64'), [13, 5, 5])), 0)
call_3540 = relay.TupleGetItem(func_2411_call(relay.reshape(const_3539.astype('float64'), [13, 5, 5])), 0)
func_3424_call = mod.get_global_var('func_3424')
func_3425_call = mutated_mod.get_global_var('func_3425')
call_3546 = func_3424_call()
call_3547 = func_3424_call()
output = relay.Tuple([call_3529,call_3534,const_3535,call_3538,const_3539,call_3546,])
output2 = relay.Tuple([call_3530,call_3536,const_3535,call_3540,const_3539,call_3547,])
func_3550 = relay.Function([], output)
mod['func_3550'] = func_3550
mod = relay.transform.InferType()(mod)
mutated_mod['func_3550'] = func_3550
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3550_call = mutated_mod.get_global_var('func_3550')
call_3551 = func_3550_call()
output = call_3551
func_3552 = relay.Function([], output)
mutated_mod['func_3552'] = func_3552
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1345_call = mod.get_global_var('func_1345')
func_1346_call = mutated_mod.get_global_var('func_1346')
call_3577 = func_1345_call()
call_3578 = func_1345_call()
output = relay.Tuple([call_3577,])
output2 = relay.Tuple([call_3578,])
func_3579 = relay.Function([], output)
mod['func_3579'] = func_3579
mod = relay.transform.InferType()(mod)
mutated_mod['func_3579'] = func_3579
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3579_call = mutated_mod.get_global_var('func_3579')
call_3580 = func_3579_call()
output = call_3580
func_3581 = relay.Function([], output)
mutated_mod['func_3581'] = func_3581
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2225_call = mod.get_global_var('func_2225')
func_2226_call = mutated_mod.get_global_var('func_2226')
call_3599 = func_2225_call()
call_3600 = func_2225_call()
output = relay.Tuple([call_3599,])
output2 = relay.Tuple([call_3600,])
func_3607 = relay.Function([], output)
mod['func_3607'] = func_3607
mod = relay.transform.InferType()(mod)
output = func_3607()
func_3608 = relay.Function([], output)
mutated_mod['func_3608'] = func_3608
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1286_call = mod.get_global_var('func_1286')
func_1288_call = mutated_mod.get_global_var('func_1288')
call_3695 = relay.TupleGetItem(func_1286_call(), 0)
call_3696 = relay.TupleGetItem(func_1288_call(), 0)
func_1877_call = mod.get_global_var('func_1877')
func_1879_call = mutated_mod.get_global_var('func_1879')
call_3739 = func_1877_call()
call_3740 = func_1877_call()
uop_3780 = relay.rsqrt(call_3739.astype('float64')) # shape=(14, 9, 15)
uop_3782 = relay.rsqrt(call_3740.astype('float64')) # shape=(14, 9, 15)
output = relay.Tuple([call_3695,uop_3780,])
output2 = relay.Tuple([call_3696,uop_3782,])
func_3792 = relay.Function([], output)
mod['func_3792'] = func_3792
mod = relay.transform.InferType()(mod)
output = func_3792()
func_3793 = relay.Function([], output)
mutated_mod['func_3793'] = func_3793
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3526_call = mod.get_global_var('func_3526')
func_3528_call = mutated_mod.get_global_var('func_3528')
call_3797 = relay.TupleGetItem(func_3526_call(), 0)
call_3798 = relay.TupleGetItem(func_3528_call(), 0)
output = relay.Tuple([call_3797,])
output2 = relay.Tuple([call_3798,])
func_3802 = relay.Function([], output)
mod['func_3802'] = func_3802
mod = relay.transform.InferType()(mod)
output = func_3802()
func_3803 = relay.Function([], output)
mutated_mod['func_3803'] = func_3803
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2454_call = mod.get_global_var('func_2454')
func_2455_call = mutated_mod.get_global_var('func_2455')
call_3807 = func_2454_call()
call_3808 = func_2454_call()
output = call_3807
output2 = call_3808
func_3818 = relay.Function([], output)
mod['func_3818'] = func_3818
mod = relay.transform.InferType()(mod)
mutated_mod['func_3818'] = func_3818
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3818_call = mutated_mod.get_global_var('func_3818')
call_3819 = func_3818_call()
output = call_3819
func_3820 = relay.Function([], output)
mutated_mod['func_3820'] = func_3820
mutated_mod = relay.transform.InferType()(mutated_mod)
const_3901 = relay.const([[[-2.364693,-0.494586,0.568798,6.940643,-7.317621,-4.611579,-8.255785,9.866197,-8.241275,-4.294027,-2.819528],[8.736069,4.645371,0.108464,-9.082196,2.153160,1.830614,5.956595,-2.239577,-1.256266,9.107484,-5.633233],[2.294619,1.988642,2.617153,-3.855616,-0.657269,3.404756,9.614419,-8.616865,0.154892,5.696617,3.758569],[8.494864,9.896270,3.728794,-2.738532,-3.562493,0.985090,-4.486641,-5.254394,0.259095,-0.298733,-9.589582],[7.376240,9.545526,-3.173379,-6.135895,7.367625,-8.240998,1.748628,-3.577863,5.603958,2.084959,-1.487949],[0.074637,3.897677,2.989641,3.794323,1.853469,-6.032988,-1.041590,6.571994,1.571407,-6.204957,1.854381],[7.758470,-8.497609,6.633291,0.211729,9.638036,-3.268272,1.284236,-5.138116,9.606029,-1.595572,-0.370953],[7.864385,3.287423,-2.255910,-3.020547,3.188938,6.375508,-3.838665,-1.361770,-3.728490,-2.691230,-9.558454],[-1.959137,6.388245,-6.422616,-4.107307,-3.862856,3.060364,-2.149845,7.230997,0.531410,-0.686560,-1.138614],[5.699481,-4.097396,-4.155856,-3.778771,0.271657,4.383252,7.202445,-0.499073,-0.218580,2.689373,-6.133746],[-3.616752,-0.998974,-1.098727,-7.039797,7.508214,6.321140,-1.024117,-6.505954,-5.689932,6.883690,-0.808313],[-4.415008,-1.700398,7.580378,-7.053940,2.986622,-9.619094,-4.065550,-0.606153,2.864661,7.409482,-3.361149],[6.180866,-0.603796,-4.330049,0.900109,-6.568226,3.411887,0.342481,-4.539841,-5.946000,-0.801540,3.417854],[3.769827,9.947210,7.968732,-2.182337,-1.249940,0.802953,8.029256,0.033683,-4.926598,-5.561666,-9.165562]],[[8.706789,0.791239,4.060661,-2.990616,5.819021,-9.111825,-2.658583,7.003399,3.210839,-6.235159,-4.528369],[-8.543805,6.218754,-1.537723,-2.612246,1.866516,9.817203,1.547332,-1.701303,-4.446182,-9.851653,-4.930349],[-3.807072,3.368945,-6.047166,-6.451143,0.071445,-9.222277,-8.701464,1.503279,9.442723,-4.399797,0.776266],[8.820162,6.587909,3.831041,3.807328,-2.694053,2.840880,5.132443,-8.640540,3.550676,2.377530,-9.207011],[-7.979279,-2.951820,-9.778243,-8.245903,1.860109,9.724938,9.124240,-7.659610,-2.556404,3.374780,-5.784636],[1.086665,-9.919391,-7.459156,-4.619672,7.239125,-2.199758,3.118300,-5.201978,5.052323,5.195150,-5.115402],[8.366664,4.005379,-5.454187,-0.986620,-0.491658,0.550893,-4.359486,-5.927365,-5.405166,3.867247,3.254395],[7.994067,-9.068504,5.495171,6.133079,9.916000,-8.154476,-2.494032,7.973752,4.594686,4.852160,-5.102857],[2.846178,-2.521959,6.807065,-5.510634,-6.284032,-6.087903,-1.277970,1.283166,-4.305354,9.903903,3.908891],[2.519898,-7.498604,-7.728365,4.687721,7.624775,5.658984,-8.013312,7.273596,-4.040349,-6.465812,-6.897777],[-8.423159,-5.690021,-5.963120,-3.352000,0.676139,-7.470364,-8.551647,5.377450,-3.979982,-8.522361,5.474503],[-8.257747,-8.550280,-4.576261,6.497540,3.767236,-4.212609,-3.911638,1.220872,4.599037,-3.590968,-1.987754],[-7.883145,-7.238253,-5.796139,4.962902,1.486701,-1.707747,-7.033414,-8.318256,-0.052198,6.519439,2.272795],[6.402661,-6.174385,-7.483882,1.266024,-1.317213,-4.079134,-2.432531,0.987438,-5.526642,8.668019,-7.787169]],[[-0.856502,2.517386,4.227198,0.373785,8.307209,2.757148,7.969822,-5.269604,0.961589,4.247093,-9.810874],[-2.594535,4.074331,-6.370064,-5.088784,-7.813580,-4.755523,7.831142,-0.475202,-0.524142,9.216504,-5.862142],[2.603003,6.834052,1.298492,1.989439,-1.439844,5.411479,-8.325469,-3.926628,1.980592,2.869259,6.008956],[8.186683,-2.562927,1.682077,2.723541,-8.234371,-0.565749,3.738978,-6.630594,6.786388,5.950882,-1.319283],[2.950371,-4.245322,6.117294,-2.658416,-9.876884,1.741342,9.350807,-2.811321,-8.475659,-3.680196,8.743314],[-1.977081,-0.851589,-1.953069,-9.618690,1.370396,-7.418169,-8.900694,-0.367665,-5.246773,-1.864523,8.401106],[-8.806397,4.120664,-0.942059,7.740106,2.078921,-8.469990,-5.013725,5.996165,9.443061,-1.893240,-3.700084],[-9.727052,0.329436,3.351260,-7.501350,6.353999,5.734959,0.003954,-9.352131,0.510141,-2.379077,6.635568],[-2.215403,3.788674,-6.883220,4.633953,3.973036,1.814314,-2.176746,-9.168213,9.745255,4.250544,-8.539089],[-0.671000,-8.992440,9.093455,8.860128,5.893375,7.847870,-2.755345,-7.948480,9.547710,1.163618,-1.628456],[6.982224,-8.750599,-6.370897,4.643952,-0.539664,-6.399240,1.662763,2.212937,-6.281691,8.186872,5.901952],[0.324137,4.367274,2.235916,0.492051,4.774943,0.629463,6.852315,6.963924,-4.919687,9.904665,-1.189010],[-3.659683,2.751651,-5.602592,2.994367,-7.881615,6.213604,9.105063,-3.297984,-2.497282,7.872727,4.816307],[-2.143788,-3.856658,-8.613153,3.114228,-1.518155,-6.768835,-7.614486,-3.282190,0.321124,6.318623,0.359430]],[[6.051160,8.738089,7.332287,9.284421,-8.845562,2.338716,9.095462,-0.246118,9.270111,-2.587029,-6.674432],[-5.568143,-1.844862,-3.884286,3.790224,-6.992981,4.454649,-9.418929,6.519276,-5.075075,4.189460,-8.808245],[6.449233,9.582658,2.543488,7.869143,0.352009,0.999775,8.357106,0.329081,0.394390,3.183357,9.434503],[3.372982,-0.787552,-7.878696,0.576780,-3.239400,5.294972,8.807628,2.128297,0.981336,1.907010,9.924331],[-0.680926,7.386103,-4.671138,-3.229861,-2.154886,-1.800489,6.017416,2.974112,1.112960,-0.027836,6.925746],[-1.462859,-7.106552,7.139639,-2.138790,-7.083253,3.475022,-7.663511,-2.538002,-9.645370,-9.535049,1.041614],[1.358287,-2.593038,-5.105128,-3.312352,1.171174,9.654188,-9.220347,0.168649,2.706537,8.140274,1.214482],[-4.100626,-3.095537,-4.951450,-2.343316,3.852134,-6.306157,-2.251423,-2.895820,2.406874,4.512056,1.141794],[6.934319,-4.285929,-0.112631,-2.798735,6.014851,5.002585,2.685242,-2.736369,-7.811152,1.567703,-9.028341],[2.300937,-0.321180,-4.144284,6.355961,9.115185,-1.869395,6.450427,4.295231,-0.327811,8.967702,8.234768],[9.140582,-5.122147,7.840374,0.815590,2.423679,-0.082113,6.945010,-8.145227,-6.973040,1.532793,2.886447],[2.702183,-4.414744,-6.195736,0.244452,-7.875454,7.127069,-7.712440,1.877862,-7.093561,7.867872,-3.934185],[7.871643,2.110137,1.979552,-3.772108,-5.643159,5.976648,7.792304,-8.844327,9.045519,-3.848697,9.399797],[0.102768,-3.629123,1.335922,-1.319235,-0.576972,-7.002647,7.052681,-9.149267,4.888243,4.556579,-3.334943]],[[-7.002105,-8.999244,5.591369,-0.379547,6.464627,5.631524,-1.611886,2.833049,2.633198,-8.528512,-9.773522],[7.462441,-3.934685,3.037127,0.932241,-9.437687,-6.985963,-0.580098,6.220058,-9.112781,-3.602834,-2.929115],[-0.504599,-0.034867,9.549586,-4.946846,-7.139190,0.387474,-2.562345,3.741643,-8.555097,8.543135,-8.145751],[-4.934738,-3.361164,-1.816452,1.853771,5.446906,1.491197,0.584100,3.584636,-0.279204,3.588870,-3.382538],[-8.101500,6.290886,9.592368,6.185013,-7.499430,-7.998615,-7.000275,-2.515617,8.820481,4.613490,1.437031],[-6.145462,-2.397532,-2.390054,-5.958181,9.757138,-6.372806,8.294129,0.543489,2.475588,-4.794395,6.829594],[4.980881,-6.936757,4.406729,9.801017,-6.583107,7.861628,-4.251063,-0.936618,-9.718382,1.021368,7.339492],[1.349752,2.565643,-0.207901,-5.095935,-5.891684,8.553611,-0.134615,-3.981042,0.038819,5.967186,-8.956083],[0.799892,-3.810928,-0.455188,-9.524052,-6.825261,4.296104,4.683002,-7.224264,8.259959,4.429486,6.169940],[1.135196,7.224527,8.916799,-6.582831,-8.829423,-1.412817,3.602692,-5.116541,-8.337353,5.390490,-7.025714],[-5.786271,-7.597204,6.269285,-3.997936,-8.039764,-2.932333,0.162658,-2.801159,3.494828,9.736641,-1.752071],[7.390879,-2.337207,9.391338,4.479281,-0.345874,-0.409951,7.709270,-9.373412,3.371688,3.192707,-3.609875],[9.036771,-1.592079,8.304821,-7.774365,0.626326,-4.101917,-4.464423,9.341483,1.003067,4.525992,6.281164],[0.711847,-6.204418,-3.780815,8.844678,-9.029798,2.375619,3.496365,-1.524578,-3.421506,1.410612,-3.650120]],[[1.753131,1.359416,5.111990,-0.979966,4.925992,9.226735,-1.907406,-6.883944,-6.736871,-6.397989,2.621929],[3.627628,-5.460148,1.639243,-1.643421,7.593265,-0.543217,9.686665,1.310890,-5.761395,6.059230,-7.752782],[0.990230,1.964144,-1.780152,1.366884,-0.825606,0.355678,7.992813,-7.702272,-6.227444,6.540015,4.194320],[5.055808,-0.947605,4.687938,1.988596,-9.401958,-0.272263,-2.100401,7.151008,6.404426,-1.863733,-3.915033],[4.493677,-8.539214,-1.539626,-7.487993,-8.686256,-0.082020,5.162631,-8.089572,-6.138704,5.013252,1.563835],[2.882538,-4.800459,-9.304008,3.015655,-5.756022,0.627309,6.897764,-4.025959,9.953797,7.315808,3.634179],[-9.934231,1.685457,-2.880316,3.964847,-0.602714,2.877227,3.013158,-0.266397,-4.436038,-2.812562,3.392609],[-7.447526,2.156880,-8.347901,9.318029,-8.678845,1.819132,-3.297326,-4.295251,2.655522,-0.422364,4.092915],[-8.610964,0.498622,-6.701762,6.854759,4.400224,1.288660,0.643978,7.484311,-9.370915,-2.812687,6.499641],[9.524975,6.479037,-5.877286,4.639835,6.147326,2.579384,6.316734,-2.354964,7.866573,-4.387244,8.360038],[-9.349690,-3.164966,-7.323713,4.046128,-5.960946,2.291009,4.042952,5.016840,-8.223213,4.999667,3.407470],[0.833021,5.853888,1.397751,-8.826513,0.443213,9.656133,4.865648,9.614477,1.767951,9.753306,4.176948],[1.365808,-6.509793,3.867572,8.379964,-6.759811,9.170832,-7.217463,0.920586,8.026690,8.439008,-4.121678],[-1.550685,5.746845,4.461147,-8.588872,-9.043171,-9.478815,7.210422,-5.510983,-8.656458,-6.803480,-5.041788]]], dtype = "float32")#candidate|3901|(6, 14, 11)|const|float32
const_3902 = relay.const([[[2.520561,-2.295814,8.630725,7.973215,-0.481243,-8.151894,6.213953,-7.416595,-6.472176,-8.725648,8.359445],[-8.687092,9.226611,4.585336,7.739467,9.228388,7.392982,-6.428343,1.257807,-4.245355,-6.889408,5.645152],[9.388590,2.763040,-2.141662,-2.210203,-6.461706,-8.143954,1.712769,6.218065,-6.410223,6.891248,0.125874],[-6.859355,5.049830,-2.588253,1.856539,3.880530,-8.725070,-2.629273,9.583907,-2.301952,-5.913529,6.060166],[-7.907781,-7.077601,-4.338206,-4.205151,8.166894,-6.935288,7.854779,4.786264,-7.878114,1.251536,2.191435],[-1.116701,-7.669015,3.172262,2.499915,-9.571388,9.820055,-1.590780,-6.798094,0.458256,4.466304,-3.972766],[7.762722,-9.719222,9.066613,-9.585839,5.350868,5.153568,2.339744,-5.508432,0.385593,-0.733438,-5.546306],[-8.505426,4.572533,-4.412986,4.115535,9.640585,-3.345983,8.434438,4.701602,6.408310,-3.564567,1.763289],[8.498332,-6.610429,-1.255690,8.949763,0.221949,-2.869579,-3.001167,9.257620,8.948378,-7.803948,-0.953440],[8.913031,2.011616,8.654820,6.004288,6.579940,-8.204666,-9.692296,-1.521659,8.747104,6.373452,-6.973904],[0.191238,-9.694017,-6.566673,-1.373683,-3.988544,-3.333605,-6.987220,9.925920,-0.691648,-5.570210,-7.882886],[-2.061677,1.533802,-1.844184,3.025067,-2.203872,-4.895895,3.416650,7.286104,-7.295854,-2.113319,2.912855],[-9.101823,-4.259129,3.298109,3.065072,1.586470,-8.995981,-7.071387,-8.754055,4.603297,-0.807056,3.617292],[-4.441153,2.797907,-2.228085,0.409439,9.374569,-8.530912,0.344591,-4.145545,3.116427,-3.733106,-6.719317]],[[-5.351016,-5.815728,4.664532,0.688665,-3.362300,1.107609,-4.059300,2.872191,7.261679,0.447282,1.063532],[1.452985,-0.568588,1.156847,-7.514160,0.938544,-9.122685,-8.871478,-8.702630,-2.200805,5.493547,-1.309533],[5.926874,-4.872617,-8.524079,-6.403192,-9.708873,-4.527490,-2.707009,1.661887,7.569412,2.503407,-8.480241],[-5.201747,-2.583038,1.899463,-8.983584,6.331368,-5.784094,9.586670,-4.744500,-4.131975,4.592846,2.225691],[-6.627287,5.702846,2.105363,-1.154282,-5.360194,-6.577986,5.914877,0.627249,1.195209,-5.120905,-1.203358],[8.775292,6.219066,4.901652,-7.195997,3.549320,4.713498,-7.696172,8.020871,-1.111828,6.652523,-6.274921],[-0.635382,6.067675,1.168815,3.373140,1.264473,-2.906826,-8.508781,3.772980,-7.378419,-5.944778,0.916220],[-2.723922,2.712761,8.245116,2.321872,0.685839,9.629155,0.774039,-8.148270,-8.532660,6.768601,3.654391],[-5.603707,-1.153222,8.449625,-6.609864,-1.058746,0.871057,2.071819,-0.874014,0.850387,-0.019843,-3.151406],[4.097084,8.384538,-7.359720,-8.851775,-3.973806,1.822420,9.486872,8.716714,9.144455,-8.852093,1.246643],[7.687700,-6.421338,-9.722652,7.072539,-8.624537,0.781390,-0.978772,1.488232,4.995172,2.567816,-2.199451],[7.549673,-2.319263,3.344228,-2.679742,-3.133759,4.541477,-0.429990,-7.792960,-4.111920,-7.851082,-4.820055],[-4.454303,3.688623,9.841782,-7.720883,7.358084,-9.675170,-5.977100,-1.177894,-4.075735,7.601402,9.104980],[7.718649,4.881793,-1.637879,-4.625241,4.852971,-3.845736,-1.211092,7.010238,-4.435033,1.857662,3.471675]],[[-9.135471,-1.333492,-4.556823,-7.294069,5.907183,8.483830,-7.819735,-0.317046,-2.633583,2.973734,-7.735548],[4.691578,-4.916387,-6.937862,-4.624193,3.169440,4.617860,4.103188,0.622819,7.336173,-1.267234,-7.398694],[-2.063914,9.047323,-0.085996,-4.965924,-1.798156,-0.706233,5.627616,-2.136643,-1.072096,-1.688649,0.178325],[-7.321800,-1.609944,8.040525,-9.119259,5.703549,-1.852260,-7.373600,4.947910,4.708081,-0.768324,-5.214794],[-8.160289,8.695165,-7.221824,-2.666704,2.627723,7.560402,-9.150386,-2.499797,-6.808883,-0.255665,-6.497197],[4.120742,8.856328,-0.179438,-4.044606,2.552865,3.198036,-7.752816,-5.009802,-0.698986,4.226666,0.407488],[-5.835472,-4.561226,6.588571,-8.926515,9.832327,5.602244,-5.399808,-8.216274,-5.630580,-1.548112,-7.517273],[-2.268099,4.379662,2.515363,-9.728811,6.703731,-3.951288,6.180007,-0.500999,-7.220882,0.239978,-3.499549],[0.855620,-3.744440,-0.299922,4.729636,7.014353,2.607444,-1.681317,1.558821,-0.104075,-8.100117,1.219698],[-1.383095,0.997331,3.301408,9.974191,-4.577774,0.335872,-6.804438,3.875524,-6.309904,3.497463,-9.476346],[-2.051348,-8.283271,-9.327661,-2.983255,-7.102264,4.708851,7.840810,-2.731866,-4.999160,8.719508,-1.125441],[3.045709,7.804955,-7.462979,9.463516,6.758978,6.569377,-9.132655,-2.582566,7.118976,-5.622601,-5.041955],[2.689210,-2.012988,5.522996,8.528919,4.986643,-3.200212,1.825281,-0.751348,3.256450,-9.288229,2.741341],[-0.568772,7.068283,1.551559,-0.925944,9.073974,-5.408733,3.951726,9.531288,2.340199,9.256214,-8.346356]],[[1.675795,5.281408,-9.014131,6.802773,6.183374,6.606380,7.963904,-0.613172,-5.752662,3.943000,8.606347],[-1.968788,-9.101356,9.302373,0.665606,-2.013453,-6.726444,1.046837,1.075573,6.908588,-9.147575,-4.677016],[0.072005,8.764883,-5.808758,-4.674411,6.343963,7.767198,1.673484,1.411304,-6.593761,1.652224,-6.305234],[9.122275,0.978492,-6.539079,6.851310,3.535817,6.107341,-1.063901,3.937951,4.812534,1.716320,-0.503043],[1.245410,-1.769002,7.142372,6.701759,-9.579885,-7.874865,9.368374,-4.857533,1.523222,5.274704,-1.076218],[-1.579925,-8.505531,4.154546,-3.962016,-2.270531,5.069626,1.190138,-0.757872,-3.782056,0.896820,-7.421470],[2.939071,7.321696,-6.129667,9.759514,-7.638712,7.275520,8.057053,6.232718,-3.591937,-0.140593,-4.211578],[8.513412,-8.530802,8.585962,-0.846046,-6.925557,-8.398043,-9.403791,-0.452458,-7.161643,4.060640,8.003797],[-8.624010,1.101474,6.036600,-7.408803,2.064864,-1.603934,-5.085024,-1.215466,-3.546722,-0.222889,-1.287286],[6.422915,8.054018,-0.599868,4.924912,3.528196,-2.966625,4.463597,-0.643333,2.509218,3.361873,8.042655],[2.437345,-4.665215,-0.804234,4.551420,5.238562,5.304318,-0.560508,5.610130,-8.006860,0.820299,6.757507],[-1.891814,-0.444602,-3.025822,9.366997,3.079581,1.701540,-6.630533,7.612826,-0.956783,8.782512,0.101619],[8.512549,3.363624,8.777832,-0.563853,9.322483,2.928919,-2.671628,9.197939,2.951039,8.839396,-0.315968],[6.969275,4.729396,-3.752730,6.878325,-4.918518,3.165769,-9.797240,-8.674157,4.040423,3.782723,3.751418]],[[-0.226393,-1.246383,-7.308039,-0.715572,6.829130,-3.118715,-8.418447,0.914520,-1.552792,-4.571422,-7.563889],[-3.330598,-1.815592,-8.692114,-1.824880,2.054655,1.800342,4.419900,1.934344,-5.507526,9.016322,9.387865],[-5.145075,7.623825,-9.765697,-7.902869,5.044344,8.051269,-8.024853,9.976883,-4.412062,-8.231857,-5.607585],[3.055810,8.732919,6.046971,-6.145227,-1.898347,0.732054,4.482948,-4.634176,-7.456477,-0.947980,8.092942],[-6.898465,-2.789786,8.094055,-2.877700,-8.088851,-9.712192,2.278654,-3.406997,-3.770298,-9.563732,-4.283045],[-4.876538,3.422117,-1.076477,-9.004670,0.117002,6.479080,3.185071,-3.923058,-1.093927,2.718295,-8.027811],[-8.658858,-9.304999,-2.455080,6.962659,-7.776858,4.264236,-4.603109,-4.979080,6.802523,3.196851,5.459801],[7.382350,-4.954155,-6.886489,-9.940641,1.794250,0.077205,-2.663568,-7.484654,-0.633929,4.667729,4.197233],[-9.675780,-2.981777,6.504759,-0.583848,3.882945,-1.765979,4.229154,4.183977,2.829638,4.127694,8.549973],[-8.367829,3.361033,-9.781875,-5.799445,-0.549358,2.833577,-4.626121,7.319450,1.003719,3.196142,-5.458284],[-0.301901,-0.039788,-1.477974,-5.994903,9.559993,-0.835269,-0.602897,9.092717,-2.220667,9.680994,2.049584],[-3.881303,-4.257810,2.482940,7.156058,-0.268432,3.143439,3.334618,-5.273193,3.988750,5.131785,-6.190238],[5.911983,-1.633158,-0.235212,1.531311,-9.942757,-8.278825,-4.656933,-6.945748,3.877330,5.434681,2.101002],[1.429547,8.747148,-6.545329,-9.927960,-7.331732,-0.638340,8.085875,-7.688902,-7.685773,-4.410591,8.721404]],[[-3.742561,-4.174101,-2.732413,1.005912,-3.204445,-2.360858,4.625572,-2.524412,1.172536,8.752659,-0.193791],[-9.765429,-8.369112,3.445532,0.661823,2.946438,-0.932207,-7.809648,8.847113,-3.681295,-0.627013,7.903393],[4.191958,2.492047,-0.955872,7.170944,4.801693,2.794158,-9.185118,-0.269906,2.184071,-2.141922,0.638547],[8.797383,-0.709851,-2.183752,-0.845336,-5.343737,-8.243391,-8.998444,3.291099,1.553215,-0.319918,-8.530066],[6.924677,-4.835566,-8.273826,-9.226262,0.499090,-9.661474,3.131904,-4.142109,2.323930,-4.151506,-9.154344],[-1.480386,-6.304482,-7.346674,5.372468,8.518771,7.190205,7.995808,-8.937603,9.613649,7.500583,9.980887],[3.660319,-1.689555,1.599308,-8.986505,-6.471689,6.672877,-1.208794,0.531438,-0.733534,-1.274117,-9.742756],[8.300464,2.565190,8.619397,-5.798802,1.468718,-7.752450,-3.563981,-2.337644,-1.218538,-3.944628,5.345850],[4.355659,-1.109668,-7.045644,-3.417826,-4.392859,2.973453,-7.234501,9.458731,-6.354497,-0.099436,-7.913534],[-8.598656,3.941764,1.283011,-9.778313,-5.782705,8.142174,0.281782,4.953785,7.052581,2.550173,0.183343],[3.882631,-8.631777,-8.188613,-2.764049,-1.897079,1.710007,1.785515,9.884848,-0.008408,-3.868085,-3.271244],[0.484492,3.314403,4.040932,9.890248,-8.793696,6.353322,-6.244527,-5.808520,7.212686,2.901769,-7.586670],[2.028580,-1.167754,-9.481949,-7.783954,-0.694232,-5.316433,-1.500221,-8.437137,7.258955,-5.771677,-1.508903],[-8.800241,1.368347,3.789353,-3.026348,-0.550287,7.471805,1.176217,2.138715,-2.301133,0.668437,7.810120]]], dtype = "float32")#candidate|3902|(6, 14, 11)|const|float32
bop_3903 = relay.floor_mod(const_3901.astype('float32'), relay.reshape(const_3902.astype('float32'), relay.shape_of(const_3901))) # shape=(6, 14, 11)
func_3424_call = mod.get_global_var('func_3424')
func_3425_call = mutated_mod.get_global_var('func_3425')
call_3918 = func_3424_call()
call_3919 = func_3424_call()
func_1262_call = mod.get_global_var('func_1262')
func_1264_call = mutated_mod.get_global_var('func_1264')
call_3926 = func_1262_call()
call_3927 = func_1262_call()
func_3526_call = mod.get_global_var('func_3526')
func_3528_call = mutated_mod.get_global_var('func_3528')
call_3938 = relay.TupleGetItem(func_3526_call(), 1)
call_3939 = relay.TupleGetItem(func_3528_call(), 1)
bop_3959 = relay.less_equal(bop_3903.astype('bool'), relay.reshape(const_3901.astype('bool'), relay.shape_of(bop_3903))) # shape=(6, 14, 11)
output = relay.Tuple([call_3918,call_3926,call_3938,bop_3959,])
output2 = relay.Tuple([call_3919,call_3927,call_3939,bop_3959,])
func_3964 = relay.Function([], output)
mod['func_3964'] = func_3964
mod = relay.transform.InferType()(mod)
output = func_3964()
func_3965 = relay.Function([], output)
mutated_mod['func_3965'] = func_3965
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1725_call = mod.get_global_var('func_1725')
func_1727_call = mutated_mod.get_global_var('func_1727')
call_3984 = relay.TupleGetItem(func_1725_call(), 2)
call_3985 = relay.TupleGetItem(func_1727_call(), 2)
func_3322_call = mod.get_global_var('func_3322')
func_3324_call = mutated_mod.get_global_var('func_3324')
call_3988 = func_3322_call()
call_3989 = func_3322_call()
output = relay.Tuple([call_3984,call_3988,])
output2 = relay.Tuple([call_3985,call_3989,])
func_3999 = relay.Function([], output)
mod['func_3999'] = func_3999
mod = relay.transform.InferType()(mod)
output = func_3999()
func_4000 = relay.Function([], output)
mutated_mod['func_4000'] = func_4000
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2387_call = mod.get_global_var('func_2387')
func_2389_call = mutated_mod.get_global_var('func_2389')
call_4012 = relay.TupleGetItem(func_2387_call(), 1)
call_4013 = relay.TupleGetItem(func_2389_call(), 1)
func_3480_call = mod.get_global_var('func_3480')
func_3484_call = mutated_mod.get_global_var('func_3484')
const_4031 = relay.const(-8, dtype = "uint16")#candidate|4031|()|const|uint16
var_4032 = relay.var("var_4032", dtype = "uint16", shape = (336,))#candidate|4032|(336,)|var|uint16
call_4030 = func_3480_call(relay.reshape(const_4031.astype('uint16'), []), relay.reshape(var_4032.astype('uint16'), [6, 4, 14]), )
call_4033 = func_3480_call(relay.reshape(const_4031.astype('uint16'), []), relay.reshape(var_4032.astype('uint16'), [6, 4, 14]), )
func_2501_call = mod.get_global_var('func_2501')
func_2503_call = mutated_mod.get_global_var('func_2503')
const_4035 = relay.const([True,True,False,True,False,False,False,False,True,False,True,True,True,False,False,False,True,False,True,False,False,False,True,True,True,False,True,False,True,True,True,False,False,True,False,False,True,False,False,True,False,True,False,True,False,False,False,True,False,True,False,True,True,True,False,True,True,True,True,False,True,False,False,True,True,False,False,False,False,False,True,True,False,True,False,False,True,False,True,False,False,True,True,True,False,True,False,True,True,True,True,False,True,False,True,False,False,True,True,True,False,False,False,False,False,False,False,True,True,True,True,True,True,False,False,True,False,True,True,True,False,False,True,False,False,False,False,True,False,True,False,False,False,False,False,False,False,False,True,True,True,True,False,False,True,True,False,True,False,True,False,False,True,True,False,False,False,True,True,False,False,True,False,False,True,False,False,True,False,False,True,True,True,True,False,False,False,False,False,False,True,False,True,False,False,True,False,False,False,True,False,True,False,False,True,True,False,False,True,False,False,False,True,True,True,True,True,False,True,True,False,False,False,True,True,False,True,True,False,True,True,False,False,True,False,False,True,False,False,False,False,False,False,True,True,True,True,False,True,False,False,False,True,False,True,False,False,False,True,False,False,False,False,False,False,False,False,True,False,False,True,False,False,True,True,True,False,False,False,False,True,False,False,False,False,True,False,False,False,True,False,False,False,False,False,False,False,True,True,False,True,False,False,False,True,True,True,True,False,True,True,True,True,True,True,True,True,True,True,True,False,True,True,False,True,True,False,True,False,True,True,False,True,True,False,False,True,True,False,True,True,True,False,False,True,True,False,False,False,True,True,False,True,False,True,False,True,True,False,False,True,True,False,False,True,False,True,False,True,True,True,False,False,True,True,True,False,True,True,False,False,False,False,True,False,True,False,False,True,False,False,False,True,False,False,False,False,True,False,True,False,True,False,True,False,True,False,False,False,False,False,False,False,True,False,True,False,False,True,True,False,True,True,True,True,False,False,True,True,False,False,False,False,False,True,False,True,True,True,True,True,True,False,False,False,False,True,True,False,False,False,False,True,False,True,False,False,True,True,True,False,True,True,False,False,False,False,True,False,True,True,True,True,True,True,True,True,False,False,True,False,True,True,True,True,False,True,True,False,False,False,False,False,False,False,False,False,False,True,False,False,False,False,True,True,True,False,False,False,True,True,False,False,False,False,True,True,True,False,True,False,False,True,False,False,True,False,True,True,True,True,True,False,True,False,True,True,True,False,True,False,True,True,False,False,True,True,True,True,True,False,True,True,True,True,False,False,True,True,True,False,False,True,False,False,True,False,True,False,False,False,False,True,True,False,True,True,True,False,False,False,False,True,False,True,False,False,True,True,True,True,True,True,False,False,True,True,False,False,False,False,False,False,True,False,True,True,True,False,True,True,True,False,False,True,True,False,True,True,True,False,False,False,True,False,False,True,True,False,True,True,False,False,False,False,False,True,True,True,True,False,False,False,False,False,True,False,False,False,True,True,False,True,True,False,True,False,True,False,False,False,False,True,False,False,True,False,True,False,True,False,False,True,True,True,True,False,True,True,True,False,False,True,True,False,True,False,False,False,False,False,True,False,True,True,False,False,False,True,False,True,False,True,True,True,False,False,True,True,False,False,True,False,False,False,False,True,False,False,False,False,True,True,True,False,False,True,True,False,True,True,False,True,False,True,False,False,True,True,True,True,False,False,False,False,False,False,True,False,True,True,True,False,False,False,False,True,True,True,True,False,True,True,True,True,False,True,False,False,True,True,True,True,False,True,True,False,False,False,True,True,False,False,True,False,False,True,True,True,True,True,False,False,False,True,True,True,True,True,True,False,True,False,True,True,False,False,True,False,False,False,True,False,False,False,True,False,True,False,False,False,True,False,False,False,True,False,True,False,True,False,False,False,False,True,True,False,True,True,False,False,True,True,False,False,True,True,False,True,False,False,True,True,False,False,True,False,False,False,False,True,False,True,False,True,False,True,True,False,False,False,False,False,True,False,False,True,False,False,False,False,True,True,True,True,True,True,True,True,True,False,True,False,True,True,True,True,False,False,True,True,False,True,True,False,False,True,True,False,True,True,False,False,False,True,False,False,False,True,True,False,True,False,False,False,True,True,False,False,True,True,True,False,True,False,False,True,True,True,True,False,False,True,True,False,False,True,False,True,False,False,True,False,False,True,False,False,False,False,False,True,False,True,True,True,True,True,False,False,False,True,False,False,False,True,True,False,False,True,True,True,True,False,True,False,True,True,False,True,False,False,True,False,True,False,True,False,False,True,False,False,False,False,True,False,False,False,False,False,True,False,True,True,False,False,True,False,False,True,True,False,True,False,False,False,True,True,False,True,False,False,True,False,False,False,False,False,False,False,True,False,False,False,True,True,True,False,True,True,True,False,True,False,True,True,False,False,False,False,True,False,False,False,False,False,True,False,True,True,False,False,True,True,False,False,False,True,False,True,False,True,True,True,True,False,False,True,False,False,True,True,False,True,False,False,False,True,False,True,False,True,True,False,False,True,False,False,True,True,True,True,False,False,True,False,True,True,True,True,False,True,True,False,False,True,True,False,False,True,True,False,False,False,False,False,False,True,False,True,False,True,False,False,False,True,False,True,True,False,False,True,True,True,True,True,False,False,False,False,False,True,True,False,False,True,True,False,False,True,True,False,True,True,True,True,True,True,False,False,True,False,True,False,False,False,False,False,True,False,True,True,True,False,True,True,True,False,True,False,False,False,False,True,False,True,False,True,True,False,True,False,False,False,True,False,False,True,True,True,True,False,False,False,False,False,False,True,False,True,True,False,False,False,True,False,True,True,True,False,True,False,True,False,False,False,False,False,True,True,False,False,True,False,False,True,False,False,True,True,False,False,True,False,False,True,False,False,False,True,False,False,True,True,False,True,True,False,True,False,False,True,False,True,False,True,True,False,True,False,True,True,False,True,True,True,False,True,True,False,False,True,False,True,True,False,False,False,True,False,True,True,True,True,False,True,False,True,False,False,True,True,True,False,False,True,True,False,False,False,True,True,True,True,False,False,False,True,True,True,True,False,False,False,True,False,False,False,False,False,False,True,True,True,True,False,False,False,False,True,False,True,False,False,True,False,False,True,True,True,False,False,True,False,True,True,False,True,True,False,True,True,False,False,False,True,False,True,False,True,False,False,False,False,False,True,False,True,False,False,False,False,False,False,False,True,True,True,False,False,True,True,True,True,False,True,True,False,False,True,True,False,True,False,False,False,True,True,True,False,True,True,False,True,True,True,True,False,False,True,False,True,True,True,True,True,True,False,True,True,True,True,False,False,True,False,False,False,True,True,False,False,True,True,False,False,False,True,True,False,False,True,True,True,True,False,False,False,False,False,True,True,True,True,False,False,False,False,False,True,False,True,False,True,False,False,True,False,True,False,False,True,False,True,True,True,False,True,True,False,True,False,False,False,False,False,False,False,False,True,True,False,False,True,True,False,True,True,False,False,True,False,False,True,True,True,False,True,False,True,False,False,False,False,False,False,False,True,False,False,False,True,True,False,True,False,False,False,True,False,True,True,False,True,False,True,False,True,True,False,False,True,False,False,True,True,False,True,False,False,True,False,False,False,False,True,True,False,True,False,False,False,True,False,True,False,True,True,True,False,False,True,True,False,False,False,True,False,True,True,True,True,True,True,True,True,False,False,True,True,True,True,False,False,True,True,False,True,True,True,True,True,True,True,True,True,True,True,True,True,False,False,False,False,True,True,True,True,False,True,True,True,False,True,True,False,False,False,True,True,True,False,False,False,True,False,True,True,True,True,False,True,True,False,True,True,True,True,False,True,False,True,False,False,False,False,False,True,False,True,False,True,False,True,False,True,True,True,False,False,False,False,True,False,False,True,True,False,False,True,True,False,True,False,False,True,False,True,False,False,False,True,True,False,False,True,False,True,True,False,True,True,True,False,True,True,True,False,True,True,False,True,True,True,True,False,False,True,True,True,True,True,False,False,False,False,False,False,True,True,False,False,False,True,False,False,True,False,False,False,True,False,True,True,True,False,True,False,True,False,True,False,True,True,True,True,True,True,True,False,False,False,False,False,True,False,False,False,False,True,True,False,True,False,True,True,True,False,True,False,False,False,True,True,True,False,True,False,True,False,False,True,False,False,True,False,False,False,False,True,True,True,True,False,False,False,True,True,False,False,True,False,False,False,True,True,False,False,True,True,True,True,False,True,True,False,True,False,False,False,True,True,True,False,True,True,False,True,False,False,True,False,False,False,False,True,True,True,False,True,False,True,False,True,False,False,True,False,False,True,False,True,False,True,True,True,True,True,False,True,True], dtype = "bool")#candidate|4035|(1890,)|const|bool
call_4034 = func_2501_call(relay.reshape(const_4035.astype('bool'), [14, 9, 15]))
call_4036 = func_2501_call(relay.reshape(const_4035.astype('bool'), [14, 9, 15]))
bop_4042 = relay.right_shift(const_4035.astype('int64'), relay.reshape(call_4034.astype('int64'), relay.shape_of(const_4035))) # shape=(1890,)
bop_4045 = relay.right_shift(const_4035.astype('int64'), relay.reshape(call_4036.astype('int64'), relay.shape_of(const_4035))) # shape=(1890,)
func_3480_call = mod.get_global_var('func_3480')
func_3484_call = mutated_mod.get_global_var('func_3484')
call_4049 = func_3480_call(relay.reshape(const_4031.astype('uint16'), []), relay.reshape(call_4030.astype('uint16'), [6, 4, 14]), )
call_4050 = func_3480_call(relay.reshape(const_4031.astype('uint16'), []), relay.reshape(call_4030.astype('uint16'), [6, 4, 14]), )
func_1597_call = mod.get_global_var('func_1597')
func_1598_call = mutated_mod.get_global_var('func_1598')
call_4054 = func_1597_call()
call_4055 = func_1597_call()
func_3121_call = mod.get_global_var('func_3121')
func_3124_call = mutated_mod.get_global_var('func_3124')
const_4061 = relay.const([4,-3,-5,-10,9,7,5,-2,-1,-10,-7,-3,1,9,4,4,-1,-6,7,-5,1,4,1,5,-7,6,4,-8,-3,-6,-7,4,5,-8,-10,-3,-3,9,5,8,8,5,3,-8,-2,-1,5,7,-7,-6,-6,-8,-6,-4,8,4,-8,-10,4,-7,-2,-5,4,-7,-7,-8,2,5,-10,2,3,-7,-6,-1,-5,-9,5,-4,-8,-3,-3,-9,8,6,2,-7,-1,5,-1,10,-3,3,-2,10,-9,4,-4,9,-8,-2,-1,7,-3,-1,-9,4,-9,1,-5,1,5,-6,-10,-3,-7,1,3,-4,-10,-5,-6,-2,-6,-8,5,-3,-7,-1,3,9,8,10,8,8,-8,9,-9,-3,-6,-6,-2,-3,-7,10,-8,-1,-7,-6,6,-2,-6,-2,-2,2,8,10,6,-1,-10,6,-9,4,10,2,-5,-4,-7,-8,1,-8,-9,-9,4,9,-10,-1,1,-5,-7,-9,-1,-5,-9,-7,4,-1,4,7,1,-1,10,10,-5,-2,-1,-5,4,-1,5,-3,-5,-2,-6,6,-7,-8,9,8,-4,6,-3,-10,-1,10,-10,6,9,4,-7,3,-9,10,-1,-2,1,10,9,1,-10,-7,-3,-6,1,10,-2,3,-5,7,-5,1,-7,10,-1,-7,1,1,-6,-8,7,-6,-2,10,4,-3,8,-5,-7,10,-9,8,2,-5,6,-7,3,4,2,1,1,7,10,-4,-10,-4,3,6,-1,4,-6,4,4,-3,10,-4,-9,-2,-4,5,-3,10,1,3,-9,-3,10,6,-3,-10,-4,8,7,4,6,-5,8,-7,3,1,9,-9,-1,-2,-6,9,-1,5,7,-1,-9,-4,-4,-6,-2,-1,10,1,4,6,-8,-10,-2,-6,4,-1,-6,2,7,4,-4,10,4,-5,-5,-10,8,3,-7,-8,-8,6,4,-1,5,-10,-2,-2,4,-7,-2,3,9,9,-6,-6,6,8,9,2,-7,-2,-5,-5,6,9,1,8,-9,-5,-4,9,5,1,-7,10,5,2,8,8,-1,2,8,-3,8,2,-1,1,8,-9,-3,8,-1,-8,8,-5,-3,-3,8,8,4,-8,-2,-10,-9,7,8,-1,-8,9,5,6,-2,8,5,-6,9,1,-10,-4,-9,-4,8,9,-4,-3,4,-8,-10,-6,4,1,5,7,-2,8,-3,2,8,9,-10,3,-4,10,-9,9,10,7,2,3,-6,-9,3,-2,3,-3,6,8,-8,5,5,-1,2,10,-3,-1,-4,-7,2,-6,-3,-7,-8,10,-3,5,9,-5,-5,6,-8,8,7,-6,7,5,4,8,9,10,-2,-2,-1,1,-9,-6,6,-8,-3,6,-8,-9,-5,4,4,-5,-9,9,-1,-7,-9,-7,9,2,2,2,-8,-2,-8,6,10,-10,6,10,10,-10,-10,-8,4,1,-7,-6,3,-8,4,-5,-3,5,4,9,-3,-7,-5,2,-2,-5,-9,3,-9,-5,5,9,-4,-9,10,-4,-6,5,-5,-1,3,7,-7,4,-3,6,6,6,-10,10,-3,-4,-7,-10,-8,-1,-7,3,-1,7,-3,-2,10,10,-4,-1,-9,8,4,10,9,2,-2,-9,9,8,2,-4,-1,4,7,4,10,1,10,-5,3,-6,-10,1,-4,3,3,10,-2,-1,10,6,-7,-6,-8,-7,-8,-9,1,-10,-1,1,-2,7,-5,-4,4,-7,-7,-10,-5,10,-2,-6,9,10,-10,-3,1,-8,-8,3,4,-1,-4,10,9,-5,-6,-6,6,4,-6,-10,-5,-5,-3,-5,6,-10,8,-10,-7,-8,5,-10,9,-8,-9,1,-7,8,-3,-6,10,1,-5,3,-7,9,-2,-4,-10,-5,1,6,-2,-7,-9,8,-1,5,4,-10,-8,5,-5,-10,-1,8,3,-9,10,2,1,9,10,7,-2,7,7,2,10,9], dtype = "int8")#candidate|4061|(728,)|const|int8
call_4060 = relay.TupleGetItem(func_3121_call(relay.reshape(const_4061.astype('int8'), [4, 14, 13])), 2)
call_4062 = relay.TupleGetItem(func_3124_call(relay.reshape(const_4061.astype('int8'), [4, 14, 13])), 2)
output = relay.Tuple([call_4012,call_4030,const_4031,var_4032,bop_4042,call_4049,call_4054,call_4060,const_4061,])
output2 = relay.Tuple([call_4013,call_4033,const_4031,var_4032,bop_4045,call_4050,call_4055,call_4062,const_4061,])
func_4065 = relay.Function([var_4032,], output)
mod['func_4065'] = func_4065
mod = relay.transform.InferType()(mod)
mutated_mod['func_4065'] = func_4065
mutated_mod = relay.transform.InferType()(mutated_mod)
var_4066 = relay.var("var_4066", dtype = "uint16", shape = (336,))#candidate|4066|(336,)|var|uint16
func_4065_call = mutated_mod.get_global_var('func_4065')
call_4067 = func_4065_call(var_4066)
output = call_4067
func_4068 = relay.Function([var_4066], output)
mutated_mod['func_4068'] = func_4068
mutated_mod = relay.transform.InferType()(mutated_mod)
func_888_call = mod.get_global_var('func_888')
func_889_call = mutated_mod.get_global_var('func_889')
call_4087 = relay.TupleGetItem(func_888_call(), 0)
call_4088 = relay.TupleGetItem(func_889_call(), 0)
uop_4090 = relay.sigmoid(call_4087.astype('float32')) # shape=(2, 3, 16)
uop_4092 = relay.sigmoid(call_4088.astype('float32')) # shape=(2, 3, 16)
output = relay.Tuple([uop_4090,])
output2 = relay.Tuple([uop_4092,])
func_4094 = relay.Function([], output)
mod['func_4094'] = func_4094
mod = relay.transform.InferType()(mod)
output = func_4094()
func_4095 = relay.Function([], output)
mutated_mod['func_4095'] = func_4095
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1389_call = mod.get_global_var('func_1389')
func_1390_call = mutated_mod.get_global_var('func_1390')
call_4124 = relay.TupleGetItem(func_1389_call(), 1)
call_4125 = relay.TupleGetItem(func_1390_call(), 1)
func_1251_call = mod.get_global_var('func_1251')
func_1253_call = mutated_mod.get_global_var('func_1253')
call_4156 = relay.TupleGetItem(func_1251_call(), 1)
call_4157 = relay.TupleGetItem(func_1253_call(), 1)
output = relay.Tuple([call_4124,call_4156,])
output2 = relay.Tuple([call_4125,call_4157,])
func_4165 = relay.Function([], output)
mod['func_4165'] = func_4165
mod = relay.transform.InferType()(mod)
mutated_mod['func_4165'] = func_4165
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4165_call = mutated_mod.get_global_var('func_4165')
call_4166 = func_4165_call()
output = call_4166
func_4167 = relay.Function([], output)
mutated_mod['func_4167'] = func_4167
mutated_mod = relay.transform.InferType()(mutated_mod)
var_4175 = relay.var("var_4175", dtype = "int8", shape = (8, 1, 11))#candidate|4175|(8, 1, 11)|var|int8
var_4176 = relay.var("var_4176", dtype = "int8", shape = (8, 2, 11))#candidate|4176|(8, 2, 11)|var|int8
bop_4177 = relay.less(var_4175.astype('bool'), var_4176.astype('bool')) # shape=(8, 2, 11)
var_4196 = relay.var("var_4196", dtype = "int8", shape = (8, 2, 11))#candidate|4196|(8, 2, 11)|var|int8
bop_4197 = relay.floor_mod(var_4176.astype('float32'), relay.reshape(var_4196.astype('float32'), relay.shape_of(var_4176))) # shape=(8, 2, 11)
output = relay.Tuple([bop_4177,bop_4197,])
output2 = relay.Tuple([bop_4177,bop_4197,])
func_4214 = relay.Function([var_4175,var_4176,var_4196,], output)
mod['func_4214'] = func_4214
mod = relay.transform.InferType()(mod)
mutated_mod['func_4214'] = func_4214
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4214_call = mutated_mod.get_global_var('func_4214')
var_4216 = relay.var("var_4216", dtype = "int8", shape = (8, 1, 11))#candidate|4216|(8, 1, 11)|var|int8
var_4217 = relay.var("var_4217", dtype = "int8", shape = (8, 2, 11))#candidate|4217|(8, 2, 11)|var|int8
var_4218 = relay.var("var_4218", dtype = "int8", shape = (8, 2, 11))#candidate|4218|(8, 2, 11)|var|int8
call_4215 = func_4214_call(var_4216,var_4217,var_4218,)
output = call_4215
func_4219 = relay.Function([var_4216,var_4217,var_4218,], output)
mutated_mod['func_4219'] = func_4219
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1626_call = mod.get_global_var('func_1626')
func_1627_call = mutated_mod.get_global_var('func_1627')
call_4273 = relay.TupleGetItem(func_1626_call(), 1)
call_4274 = relay.TupleGetItem(func_1627_call(), 1)
func_1575_call = mod.get_global_var('func_1575')
func_1577_call = mutated_mod.get_global_var('func_1577')
call_4278 = func_1575_call()
call_4279 = func_1575_call()
output = relay.Tuple([call_4273,call_4278,])
output2 = relay.Tuple([call_4274,call_4279,])
func_4291 = relay.Function([], output)
mod['func_4291'] = func_4291
mod = relay.transform.InferType()(mod)
mutated_mod['func_4291'] = func_4291
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4291_call = mutated_mod.get_global_var('func_4291')
call_4292 = func_4291_call()
output = call_4292
func_4293 = relay.Function([], output)
mutated_mod['func_4293'] = func_4293
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2833_call = mod.get_global_var('func_2833')
func_2835_call = mutated_mod.get_global_var('func_2835')
call_4395 = func_2833_call()
call_4396 = func_2833_call()
output = call_4395
output2 = call_4396
func_4405 = relay.Function([], output)
mod['func_4405'] = func_4405
mod = relay.transform.InferType()(mod)
mutated_mod['func_4405'] = func_4405
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4405_call = mutated_mod.get_global_var('func_4405')
call_4406 = func_4405_call()
output = call_4406
func_4407 = relay.Function([], output)
mutated_mod['func_4407'] = func_4407
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4165_call = mod.get_global_var('func_4165')
func_4167_call = mutated_mod.get_global_var('func_4167')
call_4478 = relay.TupleGetItem(func_4165_call(), 0)
call_4479 = relay.TupleGetItem(func_4167_call(), 0)
output = call_4478
output2 = call_4479
func_4491 = relay.Function([], output)
mod['func_4491'] = func_4491
mod = relay.transform.InferType()(mod)
output = func_4491()
func_4492 = relay.Function([], output)
mutated_mod['func_4492'] = func_4492
mutated_mod = relay.transform.InferType()(mutated_mod)
var_4505 = relay.var("var_4505", dtype = "int8", shape = ())#candidate|4505|()|var|int8
var_4506 = relay.var("var_4506", dtype = "int8", shape = (1, 11, 8))#candidate|4506|(1, 11, 8)|var|int8
bop_4507 = relay.equal(var_4505.astype('bool'), var_4506.astype('bool')) # shape=(1, 11, 8)
output = relay.Tuple([bop_4507,])
output2 = relay.Tuple([bop_4507,])
func_4521 = relay.Function([var_4505,var_4506,], output)
mod['func_4521'] = func_4521
mod = relay.transform.InferType()(mod)
mutated_mod['func_4521'] = func_4521
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4521_call = mutated_mod.get_global_var('func_4521')
var_4523 = relay.var("var_4523", dtype = "int8", shape = ())#candidate|4523|()|var|int8
var_4524 = relay.var("var_4524", dtype = "int8", shape = (1, 11, 8))#candidate|4524|(1, 11, 8)|var|int8
call_4522 = func_4521_call(var_4523,var_4524,)
output = call_4522
func_4525 = relay.Function([var_4523,var_4524,], output)
mutated_mod['func_4525'] = func_4525
mutated_mod = relay.transform.InferType()(mutated_mod)
const_4533 = relay.const([[[4.524563,-5.468900,-3.508643],[-7.617402,8.501711,-1.765019],[-3.055726,0.237181,8.653304],[1.397450,-3.216505,-7.435460],[-8.059002,7.005974,6.678219],[0.150658,-4.767740,-6.086460],[0.769107,-1.724487,-6.963624],[4.598802,-8.588893,4.249457],[-4.923118,1.850189,-5.642087]],[[6.429828,-1.821866,2.346504],[0.348191,-1.290236,-1.816676],[-3.025004,3.312345,4.346305],[-2.981305,8.158181,6.432690],[-5.010384,9.121391,-2.096223],[-4.787234,-9.685424,-1.947178],[-3.423142,6.035992,-3.247577],[6.078586,9.249770,4.479785],[-1.624757,8.778073,0.262815]],[[-9.311457,-2.634740,7.860365],[-9.563885,-8.088052,-6.824048],[-5.142369,-5.776509,-0.402882],[8.640045,-5.963633,-4.852433],[4.461475,4.116599,-9.574592],[-9.526864,-6.181108,-2.420135],[2.141559,5.701028,-2.825195],[8.868002,-4.964944,-1.553946],[-9.108418,-9.879959,-9.436753]],[[-2.389918,9.305061,5.828875],[-7.414433,4.397663,-1.420401],[1.791780,-9.423743,-6.709112],[-3.139371,1.187267,1.525144],[4.013992,3.504085,-5.476294],[0.637680,-8.346300,-1.729134],[-1.288255,4.817553,-8.551354],[-1.156910,0.763928,-0.887395],[1.409968,4.041578,-5.349700]],[[-8.498890,-3.225792,7.564891],[2.299926,-1.520800,-3.033548],[9.278559,0.733523,-5.243995],[4.443366,1.581772,5.568359],[-9.348386,5.765673,8.238931],[-1.720485,4.102499,6.256585],[-1.076587,6.750816,-4.661645],[2.115046,6.471846,-7.775106],[-6.019697,-0.689057,0.284615]],[[-0.217061,-5.724753,8.284452],[9.921550,5.895779,5.073413],[5.890710,0.852552,-0.101935],[-6.209098,-8.723117,-7.735057],[7.000587,-7.614351,7.822587],[6.211193,6.604180,7.881473],[3.089242,-6.770139,6.251846],[-7.313649,9.883115,-0.255696],[3.207298,-3.089465,-5.535588]]], dtype = "float32")#candidate|4533|(6, 9, 3)|const|float32
const_4534 = relay.const([[[6.531162,2.459344,7.335583],[-5.894512,-8.684022,3.332869],[-0.355568,-2.559833,1.475047],[2.700865,-8.452809,-2.503006],[-3.818425,7.718007,-1.215469],[7.576243,-1.172262,-6.933775],[2.682894,-0.282768,-5.971489],[-7.695061,-6.734192,-4.498832],[5.892285,-0.790924,0.436270]],[[4.042650,8.391716,-4.835036],[1.527956,-3.945446,-8.442214],[8.563052,6.658533,9.732543],[-2.252225,9.940333,-3.121395],[-8.937736,4.457726,-0.127317],[-7.444296,-2.896319,-3.240533],[1.720307,-6.104010,-2.397858],[-6.379520,8.516611,0.351286],[8.401232,-5.630739,-6.782721]],[[-8.815175,-8.155623,-7.670913],[7.380446,-5.978983,-5.608479],[-9.667150,2.987840,0.814006],[-8.935917,6.492951,-4.650019],[-7.632517,-0.772013,-1.767592],[-4.503579,-6.337797,-4.285127],[7.955661,0.304714,2.744789],[-7.815786,5.039292,1.195150],[9.941466,-6.976932,4.747022]],[[-5.117185,-9.784587,-9.744586],[4.335588,5.758962,1.136858],[-6.257614,7.430756,-1.979253],[-1.271889,5.426167,-0.427866],[-5.666759,-1.515084,3.880168],[1.110514,0.893481,-8.043995],[-2.204549,-5.821251,3.439971],[5.361537,-8.075473,5.104912],[-5.559035,-5.929692,2.360479]],[[-6.687886,-4.419561,-1.894094],[-2.224518,6.483592,5.219857],[1.006090,-1.397470,-7.592641],[4.410141,6.904305,-6.738734],[-8.261900,-1.263776,-3.080027],[-9.859379,-7.778900,4.937521],[-7.629223,-8.630034,-0.212494],[3.259936,-9.568537,4.355698],[-3.734328,-4.830265,4.453719]],[[-6.415687,8.376236,-3.361602],[7.352501,-2.785687,7.641685],[-7.351150,3.434382,-8.434388],[3.136140,5.729740,6.255755],[-0.886683,4.913476,8.390493],[5.404794,6.007328,6.796984],[7.624762,-1.623169,-5.877124],[0.632773,1.433089,1.334981],[-2.253769,7.126036,-4.729006]]], dtype = "float32")#candidate|4534|(6, 9, 3)|const|float32
bop_4535 = relay.less_equal(const_4533.astype('bool'), relay.reshape(const_4534.astype('bool'), relay.shape_of(const_4533))) # shape=(6, 9, 3)
func_3579_call = mod.get_global_var('func_3579')
func_3581_call = mutated_mod.get_global_var('func_3581')
call_4580 = relay.TupleGetItem(func_3579_call(), 0)
call_4581 = relay.TupleGetItem(func_3581_call(), 0)
output = relay.Tuple([bop_4535,call_4580,])
output2 = relay.Tuple([bop_4535,call_4581,])
func_4591 = relay.Function([], output)
mod['func_4591'] = func_4591
mod = relay.transform.InferType()(mod)
mutated_mod['func_4591'] = func_4591
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4591_call = mutated_mod.get_global_var('func_4591')
call_4592 = func_4591_call()
output = call_4592
func_4593 = relay.Function([], output)
mutated_mod['func_4593'] = func_4593
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1792_call = mod.get_global_var('func_1792')
func_1793_call = mutated_mod.get_global_var('func_1793')
call_4632 = relay.TupleGetItem(func_1792_call(), 1)
call_4633 = relay.TupleGetItem(func_1793_call(), 1)
func_232_call = mod.get_global_var('func_232')
func_234_call = mutated_mod.get_global_var('func_234')
var_4638 = relay.var("var_4638", dtype = "int8", shape = ())#candidate|4638|()|var|int8
call_4637 = func_232_call(relay.reshape(var_4638.astype('int8'), []))
call_4639 = func_232_call(relay.reshape(var_4638.astype('int8'), []))
func_1286_call = mod.get_global_var('func_1286')
func_1288_call = mutated_mod.get_global_var('func_1288')
call_4651 = relay.TupleGetItem(func_1286_call(), 0)
call_4652 = relay.TupleGetItem(func_1288_call(), 0)
func_3424_call = mod.get_global_var('func_3424')
func_3425_call = mutated_mod.get_global_var('func_3425')
call_4654 = func_3424_call()
call_4655 = func_3424_call()
output = relay.Tuple([call_4632,call_4637,var_4638,call_4651,call_4654,])
output2 = relay.Tuple([call_4633,call_4639,var_4638,call_4652,call_4655,])
func_4664 = relay.Function([var_4638,], output)
mod['func_4664'] = func_4664
mod = relay.transform.InferType()(mod)
var_4665 = relay.var("var_4665", dtype = "int8", shape = ())#candidate|4665|()|var|int8
output = func_4664(var_4665)
func_4666 = relay.Function([var_4665], output)
mutated_mod['func_4666'] = func_4666
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3818_call = mod.get_global_var('func_3818')
func_3820_call = mutated_mod.get_global_var('func_3820')
call_4683 = func_3818_call()
call_4684 = func_3818_call()
var_4685 = relay.var("var_4685", dtype = "bool", shape = (14, 9, 15))#candidate|4685|(14, 9, 15)|var|bool
bop_4686 = relay.mod(call_4683.astype('float64'), relay.reshape(var_4685.astype('float64'), relay.shape_of(call_4683))) # shape=(14, 9, 15)
bop_4689 = relay.mod(call_4684.astype('float64'), relay.reshape(var_4685.astype('float64'), relay.shape_of(call_4684))) # shape=(14, 9, 15)
output = relay.Tuple([bop_4686,])
output2 = relay.Tuple([bop_4689,])
func_4690 = relay.Function([var_4685,], output)
mod['func_4690'] = func_4690
mod = relay.transform.InferType()(mod)
var_4691 = relay.var("var_4691", dtype = "bool", shape = (14, 9, 15))#candidate|4691|(14, 9, 15)|var|bool
output = func_4690(var_4691)
func_4692 = relay.Function([var_4691], output)
mutated_mod['func_4692'] = func_4692
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3818_call = mod.get_global_var('func_3818')
func_3820_call = mutated_mod.get_global_var('func_3820')
call_4697 = func_3818_call()
call_4698 = func_3818_call()
func_3063_call = mod.get_global_var('func_3063')
func_3066_call = mutated_mod.get_global_var('func_3066')
var_4702 = relay.var("var_4702", dtype = "float64", shape = (90,))#candidate|4702|(90,)|var|float64
call_4701 = relay.TupleGetItem(func_3063_call(relay.reshape(var_4702.astype('float64'), [3, 6, 5])), 0)
call_4703 = relay.TupleGetItem(func_3066_call(relay.reshape(var_4702.astype('float64'), [3, 6, 5])), 0)
output = relay.Tuple([call_4697,call_4701,var_4702,])
output2 = relay.Tuple([call_4698,call_4703,var_4702,])
func_4709 = relay.Function([var_4702,], output)
mod['func_4709'] = func_4709
mod = relay.transform.InferType()(mod)
mutated_mod['func_4709'] = func_4709
mutated_mod = relay.transform.InferType()(mutated_mod)
var_4710 = relay.var("var_4710", dtype = "float64", shape = (90,))#candidate|4710|(90,)|var|float64
func_4709_call = mutated_mod.get_global_var('func_4709')
call_4711 = func_4709_call(var_4710)
output = call_4711
func_4712 = relay.Function([var_4710], output)
mutated_mod['func_4712'] = func_4712
mutated_mod = relay.transform.InferType()(mutated_mod)
var_4783 = relay.var("var_4783", dtype = "int16", shape = ())#candidate|4783|()|var|int16
var_4784 = relay.var("var_4784", dtype = "int16", shape = (7, 13, 5))#candidate|4784|(7, 13, 5)|var|int16
bop_4785 = relay.bitwise_and(var_4783.astype('int16'), var_4784.astype('int16')) # shape=(7, 13, 5)
output = relay.Tuple([bop_4785,])
output2 = relay.Tuple([bop_4785,])
func_4798 = relay.Function([var_4783,var_4784,], output)
mod['func_4798'] = func_4798
mod = relay.transform.InferType()(mod)
var_4799 = relay.var("var_4799", dtype = "int16", shape = ())#candidate|4799|()|var|int16
var_4800 = relay.var("var_4800", dtype = "int16", shape = (7, 13, 5))#candidate|4800|(7, 13, 5)|var|int16
output = func_4798(var_4799,var_4800,)
func_4801 = relay.Function([var_4799,var_4800,], output)
mutated_mod['func_4801'] = func_4801
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1251_call = mod.get_global_var('func_1251')
func_1253_call = mutated_mod.get_global_var('func_1253')
call_4816 = relay.TupleGetItem(func_1251_call(), 0)
call_4817 = relay.TupleGetItem(func_1253_call(), 0)
output = relay.Tuple([call_4816,])
output2 = relay.Tuple([call_4817,])
func_4856 = relay.Function([], output)
mod['func_4856'] = func_4856
mod = relay.transform.InferType()(mod)
mutated_mod['func_4856'] = func_4856
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4856_call = mutated_mod.get_global_var('func_4856')
call_4857 = func_4856_call()
output = call_4857
func_4858 = relay.Function([], output)
mutated_mod['func_4858'] = func_4858
mutated_mod = relay.transform.InferType()(mutated_mod)
var_4861 = relay.var("var_4861", dtype = "int8", shape = (3, 15, 2))#candidate|4861|(3, 15, 2)|var|int8
const_4862 = relay.const([[[-2,-6],[-1,6],[7,8],[4,-4],[-4,7],[-1,-2],[2,4],[-4,3],[-7,-9],[-7,-10],[-4,6],[2,-8],[-4,-6],[10,3],[2,9]],[[8,-2],[-3,3],[7,-4],[4,8],[-1,-4],[3,-2],[-10,7],[2,7],[-8,-5],[1,10],[-1,-8],[-6,1],[-3,2],[5,-3],[1,-8]],[[-5,-5],[6,-3],[7,-7],[-10,1],[1,3],[7,4],[-3,10],[6,-9],[4,2],[-5,9],[8,10],[10,4],[-5,5],[-6,7],[-5,-3]]], dtype = "int8")#candidate|4862|(3, 15, 2)|const|int8
bop_4863 = relay.greater_equal(var_4861.astype('bool'), relay.reshape(const_4862.astype('bool'), relay.shape_of(var_4861))) # shape=(3, 15, 2)
output = bop_4863
output2 = bop_4863
func_4880 = relay.Function([var_4861,], output)
mod['func_4880'] = func_4880
mod = relay.transform.InferType()(mod)
var_4881 = relay.var("var_4881", dtype = "int8", shape = (3, 15, 2))#candidate|4881|(3, 15, 2)|var|int8
output = func_4880(var_4881)
func_4882 = relay.Function([var_4881], output)
mutated_mod['func_4882'] = func_4882
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2611_call = mod.get_global_var('func_2611')
func_2612_call = mutated_mod.get_global_var('func_2612')
call_4936 = relay.TupleGetItem(func_2611_call(), 1)
call_4937 = relay.TupleGetItem(func_2612_call(), 1)
func_2387_call = mod.get_global_var('func_2387')
func_2389_call = mutated_mod.get_global_var('func_2389')
call_4940 = relay.TupleGetItem(func_2387_call(), 1)
call_4941 = relay.TupleGetItem(func_2389_call(), 1)
func_2552_call = mod.get_global_var('func_2552')
func_2554_call = mutated_mod.get_global_var('func_2554')
call_4949 = func_2552_call()
call_4950 = func_2552_call()
output = relay.Tuple([call_4936,call_4940,call_4949,])
output2 = relay.Tuple([call_4937,call_4941,call_4950,])
func_4951 = relay.Function([], output)
mod['func_4951'] = func_4951
mod = relay.transform.InferType()(mod)
mutated_mod['func_4951'] = func_4951
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4951_call = mutated_mod.get_global_var('func_4951')
call_4952 = func_4951_call()
output = call_4952
func_4953 = relay.Function([], output)
mutated_mod['func_4953'] = func_4953
mutated_mod = relay.transform.InferType()(mutated_mod)
var_5001 = relay.var("var_5001", dtype = "uint8", shape = (12, 2, 14))#candidate|5001|(12, 2, 14)|var|uint8
var_5002 = relay.var("var_5002", dtype = "uint8", shape = (12, 2, 14))#candidate|5002|(12, 2, 14)|var|uint8
bop_5003 = relay.left_shift(var_5001.astype('uint8'), relay.reshape(var_5002.astype('uint8'), relay.shape_of(var_5001))) # shape=(12, 2, 14)
output = bop_5003
output2 = bop_5003
func_5011 = relay.Function([var_5001,var_5002,], output)
mod['func_5011'] = func_5011
mod = relay.transform.InferType()(mod)
var_5012 = relay.var("var_5012", dtype = "uint8", shape = (12, 2, 14))#candidate|5012|(12, 2, 14)|var|uint8
var_5013 = relay.var("var_5013", dtype = "uint8", shape = (12, 2, 14))#candidate|5013|(12, 2, 14)|var|uint8
output = func_5011(var_5012,var_5013,)
func_5014 = relay.Function([var_5012,var_5013,], output)
mutated_mod['func_5014'] = func_5014
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2387_call = mod.get_global_var('func_2387')
func_2389_call = mutated_mod.get_global_var('func_2389')
call_5126 = relay.TupleGetItem(func_2387_call(), 0)
call_5127 = relay.TupleGetItem(func_2389_call(), 0)
func_3579_call = mod.get_global_var('func_3579')
func_3581_call = mutated_mod.get_global_var('func_3581')
call_5134 = relay.TupleGetItem(func_3579_call(), 0)
call_5135 = relay.TupleGetItem(func_3581_call(), 0)
output = relay.Tuple([call_5126,call_5134,])
output2 = relay.Tuple([call_5127,call_5135,])
func_5150 = relay.Function([], output)
mod['func_5150'] = func_5150
mod = relay.transform.InferType()(mod)
output = func_5150()
func_5151 = relay.Function([], output)
mutated_mod['func_5151'] = func_5151
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3964_call = mod.get_global_var('func_3964')
func_3965_call = mutated_mod.get_global_var('func_3965')
call_5176 = relay.TupleGetItem(func_3964_call(), 2)
call_5177 = relay.TupleGetItem(func_3965_call(), 2)
output = call_5176
output2 = call_5177
func_5191 = relay.Function([], output)
mod['func_5191'] = func_5191
mod = relay.transform.InferType()(mod)
output = func_5191()
func_5192 = relay.Function([], output)
mutated_mod['func_5192'] = func_5192
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1877_call = mod.get_global_var('func_1877')
func_1879_call = mutated_mod.get_global_var('func_1879')
call_5193 = func_1877_call()
call_5194 = func_1877_call()
output = call_5193
output2 = call_5194
func_5225 = relay.Function([], output)
mod['func_5225'] = func_5225
mod = relay.transform.InferType()(mod)
mutated_mod['func_5225'] = func_5225
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5225_call = mutated_mod.get_global_var('func_5225')
call_5226 = func_5225_call()
output = call_5226
func_5227 = relay.Function([], output)
mutated_mod['func_5227'] = func_5227
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2311_call = mod.get_global_var('func_2311')
func_2312_call = mutated_mod.get_global_var('func_2312')
call_5288 = func_2311_call()
call_5289 = func_2311_call()
func_4709_call = mod.get_global_var('func_4709')
func_4712_call = mutated_mod.get_global_var('func_4712')
var_5349 = relay.var("var_5349", dtype = "float64", shape = (90,))#candidate|5349|(90,)|var|float64
call_5348 = relay.TupleGetItem(func_4709_call(relay.reshape(var_5349.astype('float64'), [90,])), 2)
call_5350 = relay.TupleGetItem(func_4712_call(relay.reshape(var_5349.astype('float64'), [90,])), 2)
func_1151_call = mod.get_global_var('func_1151')
func_1154_call = mutated_mod.get_global_var('func_1154')
const_5354 = relay.const([-3.956435,-5.560988,3.511495,3.090857,1.273970,7.723583,8.294420,2.651344,0.543940,-9.641478,-9.427270,-8.080378,9.112941,1.631174,9.050589,-4.259911,-7.475079,6.748616,0.183305,-7.445848,0.690725,-1.223757,-9.632169,-9.592898,-4.948215,7.459783,-8.020020,9.657145,6.143414,3.073974,3.480428,7.305168,-1.561060,1.000406,9.887630,-6.306479,0.144025,4.140223,-9.328394,3.848235,1.027182,-2.676383,6.812314,9.945098,-9.204148,5.631212,-7.830296,8.809710,-3.247129,-2.883673,-9.759916,-6.281044,6.063518,-6.189302,2.943063,-2.364796,-6.679938,-0.235747,-6.386953,-1.532801,-2.391678,0.684201,-0.570086,2.857009,7.353635,-8.495127,5.652299,-6.810546,3.272209,-4.905911,-8.729148,8.966229,0.338528,-7.430423,8.401803,-6.135168,4.248407,0.708403,3.964977,-2.978101,-0.349509,-0.187767,5.104324,6.405202,1.287188,2.118110,-5.888223,-5.469215,-8.588478,-9.022201,-8.154773,-1.961814,-5.662801,6.510873,-3.863519,-1.555441,0.127177,-0.644639,0.441026,8.529538,-2.639592,1.607062,6.817059,-6.205721,-5.968942,1.425979,-9.960108,-2.231868,9.583187,-6.355987,5.251323,7.678509,0.094930,6.535664,2.505463,-8.882795,5.615344,-5.207232,9.635441,3.300381,8.806701,-3.206829,-6.001342,-5.777021,8.354005,7.411311,-6.015245,1.014164,2.294440,-1.030198,0.473229,-4.321460,-3.219249,1.406224,2.923384,-7.859584,1.195743,-1.347162,5.802570,-7.395089,8.747090,-8.054706,-9.634141,-5.459477,-7.400425,-9.175260,2.513760,9.798606,8.186870,5.975000,1.321489,-4.209248,2.713254,-8.318203,1.223013,4.532032,-3.465463,-8.896696,5.821648,-6.607697,-1.539053,1.433841,5.081856,2.479923,3.276897,-1.709333,-4.077131,9.290241,4.341779,1.612771,-3.642891,-8.917282,-9.398464,0.767032,3.070186,1.376417,-1.877085,8.967916,3.948376,3.303190,0.401433,8.492387,-4.964249,4.744944,-6.851444,-6.518230,0.236288,-7.463399,-6.249007,7.962059,3.191582,6.412670,7.547356,-6.380805,6.230421,4.463389,8.786635,1.768446,-3.118040,8.711669,9.559164,9.819886,-1.734982,-9.267594,-4.175021,-2.190480,-0.284264,5.691984,-1.831831,2.691123,4.634635,3.307856,0.818951,-1.724275,8.461299,8.166549,-4.918042,-4.776701,-5.826414,3.489981,-5.803135,-8.398176,8.987461,1.449249,3.165242,7.456172,7.461255,5.399851,0.982831,-9.531235,-3.199867,3.855794,7.296978,5.788220,-8.043944,-0.725011,2.315720,-7.096689,-9.117616,-6.186381,-7.699162,2.916515,-3.528223,-1.191259,-0.407661,1.781278,-7.004937,9.423291,-3.378218,4.292796,0.276421,7.125799,8.533896,1.287864,6.196185,0.705714,-4.354095,-4.106723,-6.240131,-0.107431,0.466885,3.325156,1.520778,6.944240,4.479698,-3.696304,-3.647326,5.947605,4.897405,-5.785781,5.457983,-2.517141,-0.992119,-0.030440,-3.143251,9.786188,-8.277662,5.366856,-9.715985,4.787231,-0.461130,-4.640786,-7.486372,-5.005998,7.791311,-8.391363,-5.189076,-0.343046,1.341318,6.877449,8.544563,-5.125200,8.951344,6.976463,-9.322098,-6.616756,3.935445,-0.949062,-3.902976,1.279693,5.627670,-8.241261,1.828193,-8.809167,-2.585942,-3.342889,-6.121656,5.309721,-7.966038,4.915424,-9.986084,3.038513,7.559013,6.318778,-2.232063,7.694352,-9.138392,-7.392019,-2.283523,7.715039,-4.802317,-0.883370,-2.005446,0.311598,8.169580,4.473589,-5.108815,0.121927,-3.087132,0.520886,0.767781,-9.353078,4.707072,2.875654,3.237854,-3.153239,-1.321547,6.621038,-4.961222,-9.941115,2.341053,0.351985,-3.535703,3.306297,9.962481,-4.335016,4.897725,5.820766,2.281214,-7.344906,0.482514,-5.580652,-5.176043,-0.479711,-3.834921,-3.481580,-6.292547,2.426995,-9.879451,-5.226301,-8.659574,-9.098440,0.725216,-3.110195,7.370400,-1.596269,4.329530,-7.521222,-2.026090,-7.650244,7.279067,-2.685450,9.433220,3.878252,2.508631,0.618607,-2.269726,7.612483,9.705123,-5.878455,2.834463,6.090039,7.495730,-8.053770,-1.608799,8.536676,0.581492,-8.800946,6.634396,-5.326639,9.282890,-7.731123,4.741946,0.575995,1.771775,9.388853,-8.854823,1.541217,3.611871,3.288295,3.796583,3.822711,8.211820,3.560309,0.228258,6.502776,0.538808,-1.156366,5.970170,-0.839060,8.868420,2.500647,-6.474873,-3.927334,-7.453963,-3.402398,-3.969407,-3.073373,5.815429,-1.015174,2.339853,6.876907,-2.220875,-6.957498,7.332253,-3.911233,-8.499977,6.426527,7.222270,-5.502164,7.255343,5.546779,5.661025,6.579094,8.895478,1.105264,7.033429,8.738172,5.385491,-1.767350,-7.731128,4.119011,-8.591444,-2.426468,-4.529905,-7.274896,5.889720,8.358534,7.644559,3.343109,4.085151,-5.603299,7.248375,-6.075057,2.011032,1.056477,2.455802,-7.906628,3.467795,6.186939,-8.285968,-7.215417,9.434544,-6.833847,-2.484016,7.387502,-2.708635,3.406893,-7.412191,-2.232230,-0.585024,1.198891,6.903630,6.537011,-3.326327,-5.646443,-9.662649,-7.183824,0.896036,6.752813,-7.868450,1.055979,-6.018880,-2.572457,-4.552035,-6.558185,1.245384,-1.814154,9.457014,5.447922,6.362385,-9.149010,-5.091722,2.414865,4.333767,-4.462939,-9.328533,7.471179,-6.887413,7.686925,-9.975033,9.716956,3.818119,-5.738361,8.333556,4.508970,-0.765062,6.257935,-1.592807,-7.862001,0.367075,-8.382064,-0.586080,-2.363080,3.349222,1.927827,4.537653,3.742710,-0.772782,0.722245,-8.782273,-7.824192,2.478810,7.804364,0.390268,8.613620,-6.950926,-9.275009,1.128172,1.613399,-1.688305,6.816543,6.043285,-4.129036,-6.748350,-0.467672,-5.235422,4.056508,-4.619960,-3.592525,-1.036374,-5.216429,5.219429,9.797034,6.103805,3.406963,6.086733,7.326717,-3.465693,2.060104,4.221525,2.363608,-3.764098,7.463349,1.830255,-8.786285,-0.250048,0.482214,4.574534,-0.289861,9.531349,-8.915192,-5.014260,-7.099638,-7.822748,-5.811387,6.969503,5.612691,-2.089886,-5.913471,-0.437409,-7.216938,1.563355,-6.786378,-8.570653,6.337357,4.707325,0.077567,3.631036,-1.445100,6.263309,9.478006,-3.523066,-8.187707,-6.701715,-5.261580,-5.714438,5.641264,-3.675702,-9.880726,-3.160088,8.349857,-1.837779,-7.016474,-2.945062,1.909822,4.923503,-8.632210,6.721707,-2.027079,3.102109,3.329120,0.188262,6.670448,-4.274212,7.833740,7.535265,-2.997067,8.701688,0.913696,7.577961,3.532477,0.342355,-3.892444,-5.714205,-6.858517,-3.392946,3.695884,-3.724417,2.411588,7.609471,-6.854523,0.445208,-6.839092,8.961543,-4.375805,-8.894782,9.468544,9.923448,-0.016029,-4.305819,5.819602,-4.361727,7.600723,7.894694,-1.136739,8.825669,7.693335,8.829577,3.650678,7.823631,-4.284523,7.996618,-2.912873,3.472654,-8.983291,4.693418,-0.586060,8.614960,6.112115,7.307513,4.340851,-1.988296,2.912912,-4.752092,-3.159320,6.433928,3.229743,-0.738447,3.147333,-3.441944,4.393745,-0.978629,-3.854001,6.985456,-8.558025,3.761081,9.388481,5.243930,7.500060,5.589356,1.177865,-5.647029,5.260608,-9.051954,8.745880,0.499367,0.358131,-7.401494,2.913036,2.360175,-0.466410,0.485354,-9.514739,2.847983,-2.067371,4.200448,3.361296,-3.888128,-0.738452,4.412467,9.214306,-3.626005,-9.428575,-3.758126,6.060445,-0.694399,-2.906297,3.966421,-1.115306,5.792995,-2.153889,-2.677481,-8.985992,-3.648378,-5.159154,-6.446779,-0.651804,-8.657017,-3.455843,-2.295939,-5.757985,9.300553,-9.445150,2.879083,4.839126,9.758877,0.157140,0.528400,-8.446298,-9.232630,-2.626210,8.724730,0.505963,5.982497,-5.248519,4.638544,-6.319657,-1.016247,-8.142145,4.521875,-0.162971,5.540194,7.280981,9.513723,-3.359875,-6.399810,0.298242,-2.697595,9.721404,-6.055545,6.587333,-6.055253,-1.137013,9.539100,-1.476738,3.631038,0.413220,-4.495577,2.584728,5.429825,9.335849,-6.872989,8.001377,3.200881,9.451711,-3.006103,-1.306810,-9.799007,3.282504,3.316487,1.289788,-5.430272,2.453824,7.920848,1.560142,-8.107440,-4.334423,5.462009,7.075461,-0.040122,-3.499709,-6.055430,0.683577,6.581067,-3.922671,-6.933092,3.653094,-1.279542,6.151719,-8.521927,-4.221935,5.783749,8.833531,-7.777452,8.761948,4.061895,-1.296754,-7.900270,7.361187,-4.447128,-7.829719,3.652095,-3.038545,-6.347733,3.461848,-6.730920,-1.826931,-1.281668,-4.519284,-3.271227,3.033349,3.553876,5.552264,4.160763,3.791349,-9.244835,-8.143888,-0.411387,-8.380731,-7.149808,9.655090,1.987749,-2.496324,2.941155,1.953298,-2.307242,-6.033164,-5.799464,-7.018621,-5.923091,8.230572,3.528378,-1.384886,-0.691890,0.373878,-3.345819,9.203619,-6.666978,0.073076,-4.218206,5.082622,3.796054,-7.041471,-4.087664,1.691352,1.802072,0.013505,-2.017805,-7.558220,-8.820354,2.519771,-1.140476,6.019304,-0.504440,-3.558839,9.430311,3.922856,9.377620,-9.107231,-1.516256,-5.870600,-6.749950,0.336004,9.662079,-0.849780,7.944647,-8.874402,-9.895208,-7.827390,-7.698157,-7.493811,-4.406895,-3.131653,8.895623,3.054482,-5.250675,8.972276,-9.947491,0.745741,-3.484931,3.013899,4.005414,0.419333,3.667234,-5.589757,3.683593,3.710722,0.752464,3.838283,-9.959508,-6.911865,5.239167,-8.739714,-2.488036,0.019607,4.931445,-8.315018,4.813793,-1.220537,5.999020,-5.020023,3.490277,9.366152,-9.032035,-3.525113,7.566222,0.268687,-3.310136,-9.863933,-4.597221,-8.903621,4.655953,-9.495260,-6.319191,9.996860,-2.295911,-0.287414,-5.181374,-6.242283,8.515944,3.512075,2.148868,3.266276,-7.797164,0.055661,1.723201,-8.789900,-1.268438,3.598066,-5.371457,3.445665,7.667878,-6.397542,7.778294,-4.783358,9.460725,5.308336,-1.419075,2.971172,5.313029,7.942017,-1.964148,8.103217,0.454687,6.306553,6.015663,-6.336440,8.335472,-5.949221,0.680065,1.974590,9.632925,8.380641,2.038982,-8.841247,8.420438,7.744501,-6.620492,7.935701,-7.751699,2.100737,9.704555,-3.836751,-7.127678,8.450196,8.986131,1.526981,7.815915,-5.515006,8.748203,7.296150,0.679344,-4.592106,3.285898,2.019539,-8.724925,-4.284738,-9.980471,-8.705695,0.995663,-0.664403,-4.414833,7.072826,-4.788863,-0.633158,4.702785,4.951478,1.949485,-1.020111,6.803996,-8.030807,-9.988103,1.942985,7.693860,5.008290,4.904957,9.411149,0.185507,6.008934,-9.252579,6.345099,-8.389418,-3.715480,-1.291655,-4.168181,-8.137795,-3.198574,0.651159,5.534275,3.834472,-0.791271,-5.749372,2.730237,-8.447985,-4.902609,-6.701600,-0.060549,-5.393365,-8.103964,8.914233,-6.696970,3.127533,-4.829696,-5.236407,6.529757,3.955161,-7.835894,8.687114,9.661800,-7.028501,8.538995,-9.278661,4.790446,-5.465165,3.482583,4.814252,-2.476878,-1.624240,4.728409,-8.342034,7.090844,-6.057663,-3.771177,8.058392,-7.885433,0.853549,-4.015678,0.749367,-9.483050,-2.136646,-3.785193,3.368225,-1.368357,4.853165,-7.667506,6.015863,7.855404,0.973499,3.376538,-4.293052,-1.617525,6.508025,9.545609,9.404218,3.468483,0.746569,6.784243,-2.512969,2.526812,1.594271,9.500870,4.957474,2.597493,-8.659261,8.276299,-0.843392,-4.199810,-8.247533,-5.363558,3.141732,9.246204,2.562983,3.081819,3.414252,-1.464949,-7.376746,5.396287,-3.011379,-2.993420,3.956722,9.535823,-5.761523,-2.663823,0.050404,-3.739801,-0.941045,-7.212011,-1.707247,3.455182,-8.236898,-7.255100,4.660637,-0.644330,-3.265721,5.890858,-6.440072,4.271026,-0.273958,7.120917,9.142293,0.809358,-4.200628,5.326861,7.106555,-4.004015,-9.699595,1.644603,-0.706482,-1.504425,-6.729051,-1.759284,-7.547981,2.750900,4.830957,0.072086,-5.177276,-4.468724,-6.490128,8.614122,-0.849238,1.973556,0.428481,2.140337,-7.995469,-0.948152,5.792142,6.948840,3.126772,-3.587760,4.373726,4.221378,-9.737176,-9.458485,2.271367,9.224323,6.524401,4.008616,1.586710,-5.423564,-6.453834,-6.771935,-7.149427,9.845385,7.254733,-0.949117,0.675787,-1.609542,-5.294990,-3.322928,9.198527,4.859100,-0.708658,2.646736,7.756445,3.291241,-0.406993,0.371095,3.832463,-1.957852,4.059067,-5.155491,-8.367190,-7.269616,4.805878,5.836093,-5.620033,-5.245643,6.124259,-9.814278,6.022907,-0.828830,-4.165433,-7.195653,-4.616427,-6.905267,-0.619801,2.033444,8.635535,0.515411,-1.757472,6.989959,8.585312,-0.532298,3.016598,-8.814129,-8.587282,1.788010,-8.031154,0.747315,-1.889377,-6.812710,-4.396600,-6.703130,-1.228913,-6.389421,-2.835791,7.449890,0.282388,-2.442573,6.674227,-6.937095,3.289897,-1.297303,3.100601,-1.038632,4.145649,-3.724714,-3.502188,9.259206,-3.666516,-4.587696,-0.730177,3.430941,5.787729,-0.194827,-1.656743,-3.623663,-2.733571,8.511373,-2.313562,-7.132621,2.855730,4.288329,5.697000,-7.968851,1.697467,-3.866181,-5.050602,0.787074,2.614936,-1.178635,-7.122625,3.446461,3.468644,4.265342,-7.324028,3.071373,-3.202205,-3.061231,-5.985593,-6.706154,8.889930,3.148914,-5.873542,9.839610,-0.350563,2.643967], dtype = "float32")#candidate|5354|(1248,)|const|float32
call_5353 = relay.TupleGetItem(func_1151_call(relay.reshape(const_5354.astype('float32'), [12, 8, 13])), 0)
call_5355 = relay.TupleGetItem(func_1154_call(relay.reshape(const_5354.astype('float32'), [12, 8, 13])), 0)
output = relay.Tuple([call_5288,call_5348,var_5349,call_5353,const_5354,])
output2 = relay.Tuple([call_5289,call_5350,var_5349,call_5355,const_5354,])
func_5368 = relay.Function([var_5349,], output)
mod['func_5368'] = func_5368
mod = relay.transform.InferType()(mod)
mutated_mod['func_5368'] = func_5368
mutated_mod = relay.transform.InferType()(mutated_mod)
var_5369 = relay.var("var_5369", dtype = "float64", shape = (90,))#candidate|5369|(90,)|var|float64
func_5368_call = mutated_mod.get_global_var('func_5368')
call_5370 = func_5368_call(var_5369)
output = call_5370
func_5371 = relay.Function([var_5369], output)
mutated_mod['func_5371'] = func_5371
mutated_mod = relay.transform.InferType()(mutated_mod)
var_5417 = relay.var("var_5417", dtype = "float64", shape = (14, 11, 1))#candidate|5417|(14, 11, 1)|var|float64
uop_5418 = relay.cos(var_5417.astype('float64')) # shape=(14, 11, 1)
output = relay.Tuple([uop_5418,])
output2 = relay.Tuple([uop_5418,])
func_5422 = relay.Function([var_5417,], output)
mod['func_5422'] = func_5422
mod = relay.transform.InferType()(mod)
var_5423 = relay.var("var_5423", dtype = "float64", shape = (14, 11, 1))#candidate|5423|(14, 11, 1)|var|float64
output = func_5422(var_5423)
func_5424 = relay.Function([var_5423], output)
mutated_mod['func_5424'] = func_5424
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2387_call = mod.get_global_var('func_2387')
func_2389_call = mutated_mod.get_global_var('func_2389')
call_5433 = relay.TupleGetItem(func_2387_call(), 1)
call_5434 = relay.TupleGetItem(func_2389_call(), 1)
output = relay.Tuple([call_5433,])
output2 = relay.Tuple([call_5434,])
func_5442 = relay.Function([], output)
mod['func_5442'] = func_5442
mod = relay.transform.InferType()(mod)
mutated_mod['func_5442'] = func_5442
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5442_call = mutated_mod.get_global_var('func_5442')
call_5443 = func_5442_call()
output = call_5443
func_5444 = relay.Function([], output)
mutated_mod['func_5444'] = func_5444
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1688_call = mod.get_global_var('func_1688')
func_1690_call = mutated_mod.get_global_var('func_1690')
call_5445 = func_1688_call()
call_5446 = func_1688_call()
output = call_5445
output2 = call_5446
func_5447 = relay.Function([], output)
mod['func_5447'] = func_5447
mod = relay.transform.InferType()(mod)
mutated_mod['func_5447'] = func_5447
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5447_call = mutated_mod.get_global_var('func_5447')
call_5448 = func_5447_call()
output = call_5448
func_5449 = relay.Function([], output)
mutated_mod['func_5449'] = func_5449
mutated_mod = relay.transform.InferType()(mutated_mod)
var_5453 = relay.var("var_5453", dtype = "int16", shape = (14, 13, 9))#candidate|5453|(14, 13, 9)|var|int16
const_5454 = relay.const([[[-7,10,9,9,10,-2,-5,-1,6],[1,8,8,1,5,-2,-9,-7,10],[1,-10,7,1,-9,-4,-10,7,-5],[4,-7,-2,-9,9,-2,-1,-6,-7],[5,7,-10,-2,-6,-6,4,-6,2],[-1,1,-4,6,-9,6,-7,3,6],[-3,-4,7,-9,-2,5,3,5,-3],[10,-4,-2,-4,-3,3,10,10,-6],[-6,2,-9,3,1,7,-7,-5,-5],[-3,-8,-6,10,8,2,8,8,-9],[7,9,10,-5,-3,9,-9,-7,-1],[-9,-10,10,10,1,10,-5,10,6],[-1,8,-1,-2,-9,9,-9,-8,5]],[[1,6,3,10,4,3,-1,-10,8],[5,-6,-6,-2,-3,-4,-8,6,-6],[1,-9,7,4,-6,-10,10,2,-10],[2,3,-4,-6,1,10,10,-5,-6],[-9,-4,-9,-7,10,6,8,-1,5],[-8,-10,10,-6,1,9,4,2,-5],[2,9,-3,-9,-4,2,10,8,-8],[-1,-1,6,2,10,-9,2,-8,3],[-9,-4,7,-10,-5,6,-9,8,1],[-1,-7,6,7,9,-10,-9,-5,2],[9,8,10,-7,-2,8,10,-6,-4],[3,2,-9,4,-3,-2,-2,5,-5],[5,4,9,-3,-3,6,-3,9,10]],[[-10,-7,-3,6,-2,-5,-5,-10,-10],[-3,8,5,-3,2,4,1,8,6],[9,-9,2,9,-6,8,-10,2,7],[3,-4,2,-8,-3,-1,10,-1,-2],[-4,-4,-1,-10,-3,10,-8,10,7],[1,4,-6,4,-4,6,2,6,2],[-8,8,-3,-3,-1,-4,-4,-8,2],[3,9,-3,-5,4,-10,-9,-9,2],[-7,-6,8,9,-6,10,10,-3,1],[5,-2,-9,7,3,-7,1,-1,-4],[-4,1,-1,-7,-4,-1,8,-5,7],[3,2,-2,-2,-2,-8,4,-1,-4],[-7,5,-3,10,-4,-2,-7,-5,-10]],[[5,-9,-6,5,-1,-4,1,7,-3],[-2,-2,6,-7,8,1,10,9,-6],[6,-5,-10,-3,-8,-8,-1,-6,7],[6,6,-8,1,4,7,4,-3,-4],[8,7,10,-9,-6,-3,-6,8,2],[-8,6,-2,5,-10,-7,-5,-4,2],[-8,2,-3,-8,5,-2,4,1,-5],[-6,-2,-9,1,-5,6,8,6,5],[-6,-2,-9,-9,4,6,4,8,-8],[-5,2,-5,-7,10,2,7,-10,-10],[-1,5,-10,5,-3,-10,-3,-2,-6],[1,8,1,1,-10,6,10,-9,-5],[6,-5,-6,-9,-1,-3,-8,4,-8]],[[-7,-2,-9,-7,6,-4,6,-2,10],[-5,8,-10,5,-5,-5,4,1,-1],[2,9,-3,-10,4,8,-3,-3,-9],[10,-10,-2,8,-8,-2,9,-4,-4],[3,6,10,-3,8,-4,8,10,-10],[4,-10,9,1,6,8,4,5,-3],[5,8,4,10,-5,-2,3,-5,10],[5,-1,7,-10,-5,1,2,5,-9],[3,3,-10,-4,-2,-5,2,4,-10],[7,1,9,-1,10,-2,-5,8,4],[2,10,7,-6,7,2,-10,9,10],[-3,-8,7,2,4,1,-10,6,-8],[-7,-1,6,-2,-2,-10,-1,-3,8]],[[9,-3,1,-3,-8,-1,3,1,-2],[9,5,-7,6,-8,6,-1,5,2],[-10,7,5,2,-3,3,-2,-9,6],[2,3,2,-7,6,9,-9,4,-6],[-3,-8,3,-4,-6,4,1,5,-7],[5,10,-7,9,7,-2,-2,-1,-5],[-4,1,-4,-3,10,-10,2,2,-7],[10,-3,-9,2,-1,-4,9,-7,-7],[5,5,5,-6,-1,1,-5,5,-2],[4,8,6,4,-9,8,-2,-5,10],[-4,-8,-5,4,4,8,6,9,-9],[-5,2,4,7,3,-2,-3,-1,1],[2,4,7,-1,5,-6,-4,-7,-4]],[[-6,-4,-4,-2,-3,7,-9,-1,4],[-6,-2,2,-5,-10,3,-3,6,8],[4,-6,4,-10,2,-5,-3,1,6],[-5,4,-5,-1,7,-6,7,4,-6],[7,-1,-9,-7,-9,-8,-4,6,-10],[6,-9,-1,6,4,1,8,6,-9],[8,-9,-4,2,2,7,-10,5,4],[4,-6,-9,6,7,9,-9,1,3],[-5,-5,-6,-8,5,-6,1,-8,8],[-6,-9,6,-8,-4,-3,6,4,4],[6,-8,7,-10,4,7,-7,6,-5],[-3,-9,4,6,9,-3,-1,5,2],[3,-4,1,-9,-4,6,7,-2,8]],[[8,6,-5,-10,-10,6,-1,-5,6],[-6,-6,-9,-10,4,5,-8,8,-10],[-4,1,-7,7,6,3,-8,6,-9],[-8,5,9,-8,5,-2,10,7,-2],[-8,4,-3,-7,-4,-6,-2,-2,-10],[7,9,-3,6,6,7,-10,1,1],[9,-6,3,-7,-8,-9,9,6,7],[8,-5,9,-6,-8,-2,-10,9,7],[-8,6,-3,-4,-3,2,-2,-7,7],[-10,6,-2,1,3,-8,3,-7,3],[5,4,-2,2,-9,2,5,-10,1],[3,-6,3,7,1,4,5,3,-7],[-8,-8,8,-4,1,-5,-8,6,5]],[[5,5,7,9,-9,1,-9,7,-5],[-5,-9,3,-3,-2,-2,-10,10,-4],[-5,1,7,-1,3,4,-4,-7,7],[5,-2,1,-6,2,6,-7,10,6],[1,6,7,2,-10,2,-10,9,8],[5,-9,-1,4,6,7,-3,-1,-2],[10,-10,4,8,-1,-5,7,2,-8],[10,5,6,-2,-2,-10,1,-8,-10],[5,6,5,6,3,7,-2,-3,-7],[-1,-10,1,-5,9,5,8,7,7],[-7,-5,10,-2,-1,3,4,8,-5],[3,1,-7,-1,-8,1,2,8,-8],[1,3,5,-1,-10,-4,-8,-6,10]],[[7,10,-2,1,-7,-3,-7,5,6],[8,8,6,2,10,5,3,1,-7],[4,-1,7,6,-8,-6,10,2,9],[-1,-4,-2,10,10,1,-8,-5,6],[1,-6,2,3,-5,1,5,-6,4],[9,-3,9,6,9,-4,-5,-6,6],[-4,-3,6,-2,7,-3,6,-8,10],[-5,3,-2,-8,6,10,5,2,1],[-1,2,-1,-2,6,-7,7,5,-3],[-9,-3,-8,-8,7,10,-10,2,-10],[7,-9,-4,-9,8,1,10,4,-6],[8,-5,5,-2,-6,-9,7,-10,8],[5,-3,1,4,-5,-7,-1,6,-10]],[[9,8,-8,2,2,6,-6,-7,-3],[2,-2,-8,-7,-5,-4,3,-1,-9],[-9,-6,4,1,4,8,6,7,-4],[-8,1,-3,-10,-8,-9,-2,9,9],[2,1,8,3,9,2,4,-6,5],[10,8,-8,7,7,-8,7,-6,5],[-10,-8,10,-2,-3,-9,-10,6,9],[4,6,9,-8,5,7,-8,10,-5],[7,7,8,8,5,5,-10,7,10],[1,2,-2,5,5,-5,8,-8,1],[8,-3,5,-8,-6,-10,-1,-4,6],[4,-5,7,-9,-3,-9,-2,-4,-4],[2,-4,5,5,-7,-10,5,2,-5]],[[2,-5,1,-9,-3,-10,2,8,-2],[-9,10,-6,-9,-6,-10,2,-5,7],[3,10,7,-4,6,4,-7,-5,-1],[9,1,-2,8,-5,3,10,-7,5],[-4,4,2,-8,-3,6,-3,5,-2],[-4,-3,5,10,3,8,3,10,2],[5,3,-2,-3,5,8,7,8,-5],[-5,6,4,7,-6,5,10,-9,-10],[-3,-7,-3,4,10,-9,2,-10,1],[4,9,6,1,6,1,2,-10,-10],[3,4,-5,8,4,-10,2,-4,6],[-7,-8,-7,-8,2,-8,-1,-8,6],[-8,3,-4,7,-8,7,3,-3,6]],[[9,-10,1,5,1,-9,-7,3,8],[-4,1,8,-8,-3,-3,2,2,4],[10,-7,3,9,-2,-9,-10,-5,-4],[1,5,2,3,-1,6,8,5,6],[-3,7,7,-6,-8,8,-6,-6,2],[-9,2,2,5,1,-7,-7,3,-6],[9,-7,-2,1,-5,9,4,4,9],[-1,8,-4,2,5,-5,-6,-4,-3],[8,-6,-10,-4,-4,8,4,8,5],[7,5,-1,-5,-7,9,-5,4,4],[6,-8,-6,-4,6,-2,-5,-8,-3],[5,7,-6,3,-7,-5,-3,-9,-3],[-5,-5,10,4,10,-10,-3,2,-8]],[[-8,2,-8,-6,-9,-1,-10,-9,1],[-6,-9,-7,9,5,-9,10,1,-3],[-10,-1,-4,1,-1,10,-2,-7,3],[1,3,5,-8,-1,8,10,-5,-7],[5,4,8,8,-2,-2,-8,-9,10],[6,9,-7,-3,5,7,-6,7,8],[4,5,2,1,2,-2,-3,8,-6],[-9,1,-5,-3,3,-1,-3,-9,-10],[-8,1,-10,10,-1,-5,5,-6,-5],[7,3,8,-10,-10,-1,-10,-3,7],[-3,-9,9,-1,-8,-3,9,-3,-7],[-8,-1,-6,9,9,6,-7,7,3],[-2,10,-3,-4,-10,-7,-7,-6,3]]], dtype = "int16")#candidate|5454|(14, 13, 9)|const|int16
bop_5455 = relay.left_shift(var_5453.astype('int16'), relay.reshape(const_5454.astype('int16'), relay.shape_of(var_5453))) # shape=(14, 13, 9)
func_1792_call = mod.get_global_var('func_1792')
func_1793_call = mutated_mod.get_global_var('func_1793')
call_5477 = relay.TupleGetItem(func_1792_call(), 2)
call_5478 = relay.TupleGetItem(func_1793_call(), 2)
output = relay.Tuple([bop_5455,call_5477,])
output2 = relay.Tuple([bop_5455,call_5478,])
func_5485 = relay.Function([var_5453,], output)
mod['func_5485'] = func_5485
mod = relay.transform.InferType()(mod)
mutated_mod['func_5485'] = func_5485
mutated_mod = relay.transform.InferType()(mutated_mod)
var_5486 = relay.var("var_5486", dtype = "int16", shape = (14, 13, 9))#candidate|5486|(14, 13, 9)|var|int16
func_5485_call = mutated_mod.get_global_var('func_5485')
call_5487 = func_5485_call(var_5486)
output = call_5487
func_5488 = relay.Function([var_5486], output)
mutated_mod['func_5488'] = func_5488
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1251_call = mod.get_global_var('func_1251')
func_1253_call = mutated_mod.get_global_var('func_1253')
call_5508 = relay.TupleGetItem(func_1251_call(), 0)
call_5509 = relay.TupleGetItem(func_1253_call(), 0)
output = call_5508
output2 = call_5509
func_5517 = relay.Function([], output)
mod['func_5517'] = func_5517
mod = relay.transform.InferType()(mod)
mutated_mod['func_5517'] = func_5517
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5517_call = mutated_mod.get_global_var('func_5517')
call_5518 = func_5517_call()
output = call_5518
func_5519 = relay.Function([], output)
mutated_mod['func_5519'] = func_5519
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1412_call = mod.get_global_var('func_1412')
func_1414_call = mutated_mod.get_global_var('func_1414')
call_5710 = func_1412_call()
call_5711 = func_1412_call()
func_1262_call = mod.get_global_var('func_1262')
func_1264_call = mutated_mod.get_global_var('func_1264')
call_5716 = func_1262_call()
call_5717 = func_1262_call()
func_1688_call = mod.get_global_var('func_1688')
func_1690_call = mutated_mod.get_global_var('func_1690')
call_5719 = func_1688_call()
call_5720 = func_1688_call()
output = relay.Tuple([call_5710,call_5716,call_5719,])
output2 = relay.Tuple([call_5711,call_5717,call_5720,])
func_5746 = relay.Function([], output)
mod['func_5746'] = func_5746
mod = relay.transform.InferType()(mod)
output = func_5746()
func_5747 = relay.Function([], output)
mutated_mod['func_5747'] = func_5747
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3526_call = mod.get_global_var('func_3526')
func_3528_call = mutated_mod.get_global_var('func_3528')
call_5753 = relay.TupleGetItem(func_3526_call(), 0)
call_5754 = relay.TupleGetItem(func_3528_call(), 0)
func_3526_call = mod.get_global_var('func_3526')
func_3528_call = mutated_mod.get_global_var('func_3528')
call_5767 = relay.TupleGetItem(func_3526_call(), 1)
call_5768 = relay.TupleGetItem(func_3528_call(), 1)
uop_5776 = relay.sin(call_5767.astype('float64')) # shape=(3, 6, 5)
uop_5778 = relay.sin(call_5768.astype('float64')) # shape=(3, 6, 5)
output = relay.Tuple([call_5753,uop_5776,])
output2 = relay.Tuple([call_5754,uop_5778,])
func_5785 = relay.Function([], output)
mod['func_5785'] = func_5785
mod = relay.transform.InferType()(mod)
mutated_mod['func_5785'] = func_5785
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5785_call = mutated_mod.get_global_var('func_5785')
call_5786 = func_5785_call()
output = call_5786
func_5787 = relay.Function([], output)
mutated_mod['func_5787'] = func_5787
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2611_call = mod.get_global_var('func_2611')
func_2612_call = mutated_mod.get_global_var('func_2612')
call_5821 = relay.TupleGetItem(func_2611_call(), 0)
call_5822 = relay.TupleGetItem(func_2612_call(), 0)
func_932_call = mod.get_global_var('func_932')
func_935_call = mutated_mod.get_global_var('func_935')
const_5825 = relay.const([[-4,-3,-2,-5,-8,7,7,-2,-9,8,-9,-8,-7,-9,4,8,8,3,6,10,10,3,-1,-2,2,-10,6,-1,9,-10,7,-3,9,-7,-5,-8,2,2,6,4,6,8,-1,5,-9,5,2,3,5,4,-6,-4,-4,4,2,10,1,8,-9,2,-9,-5,6,-10,-9,10,9,-6,2,-4,9,2,2,-1,-4,-10,-1,-4,5,7,-2,-1,-3,-3,8,-9,1,-6,3,5,-4,2,2,-2,2,4,6,-5,4,-6,-5,-9,8,9,-7,-9,-1,-6,-7,-1,10,4,-1,-7,-7,7,-7,6,4,-7,2,-1,6,-6,-10,3,4,-7,6,-10,-6,5,-5,-1,8,9,-3,-3,-2,2,-9,1,2,-10,10,1,9,1,9,-3,9,7,4,1,-2,-7,7,6,-4,8,-6,-3,-7,9,8,4,-3,1,2,5,-4,7,-8,3,-7,7,-1,6,-5,-5,6,2,10,-9,5,8,-6,-3,8,-6,6,-8,-4,-9,1,3,5,9,9,10,1,7,5,-2,7,-9,3,-2,-2,-7,-4,10,-8,-5,-6,2,6,-5,-1,-5,-4,3,-10,4,5,4,-4,1,5,8,4,9,1,-1,10,1,8,1,9,1,9,-7,2,-4,7,-8,-1,-1,2,7,5,6,-1,3,-4,-8,-10,3,-5,10,-8,3,5,4,-5,9,-8,-5,-4,3,-3,-9,7,6,1,-6,-2,10,2,-7,6,6,3,-5,2,-4,-10,-7,-9,3,-6,-10,-7,-10,-6,-5,-4,-6,-4,5,2,8,-4,-1,7,4,-2,-4,7,-7,2,5,4,-5,4,-4,-1,8,-9,-10,-4,2,1,4,-1,-10,4,-10,-9,-7,-7,9,3,-3,8,-9,-10,-8,-8,-10,3,3,-7,6,-10,-9,1,-4,7,7,3,-8,8,5,-6,6,-6,9,-3,-9,5,9,8,-10,-3,10,6,10,-2,1,-9,-9,7,-8,2,-3,-9,-3,-8,-2,4,8,8,4,-2,-9,-4,-7,8,-9]], dtype = "int32")#candidate|5825|(1, 390)|const|int32
call_5824 = relay.TupleGetItem(func_932_call(relay.reshape(const_5825.astype('int32'), [15, 13, 2])), 0)
call_5826 = relay.TupleGetItem(func_935_call(relay.reshape(const_5825.astype('int32'), [15, 13, 2])), 0)
output = relay.Tuple([call_5821,call_5824,const_5825,])
output2 = relay.Tuple([call_5822,call_5826,const_5825,])
func_5829 = relay.Function([], output)
mod['func_5829'] = func_5829
mod = relay.transform.InferType()(mod)
mutated_mod['func_5829'] = func_5829
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5829_call = mutated_mod.get_global_var('func_5829')
call_5830 = func_5829_call()
output = call_5830
func_5831 = relay.Function([], output)
mutated_mod['func_5831'] = func_5831
mutated_mod = relay.transform.InferType()(mutated_mod)
var_5884 = relay.var("var_5884", dtype = "float32", shape = (5, 13, 4))#candidate|5884|(5, 13, 4)|var|float32
uop_5885 = relay.sqrt(var_5884.astype('float32')) # shape=(5, 13, 4)
bop_5889 = relay.not_equal(var_5884.astype('bool'), relay.reshape(uop_5885.astype('bool'), relay.shape_of(var_5884))) # shape=(5, 13, 4)
bop_5907 = relay.bitwise_xor(bop_5889.astype('int8'), relay.reshape(uop_5885.astype('int8'), relay.shape_of(bop_5889))) # shape=(5, 13, 4)
func_5442_call = mod.get_global_var('func_5442')
func_5444_call = mutated_mod.get_global_var('func_5444')
call_5911 = relay.TupleGetItem(func_5442_call(), 0)
call_5912 = relay.TupleGetItem(func_5444_call(), 0)
output = relay.Tuple([bop_5907,call_5911,])
output2 = relay.Tuple([bop_5907,call_5912,])
func_5914 = relay.Function([var_5884,], output)
mod['func_5914'] = func_5914
mod = relay.transform.InferType()(mod)
mutated_mod['func_5914'] = func_5914
mutated_mod = relay.transform.InferType()(mutated_mod)
var_5915 = relay.var("var_5915", dtype = "float32", shape = (5, 13, 4))#candidate|5915|(5, 13, 4)|var|float32
func_5914_call = mutated_mod.get_global_var('func_5914')
call_5916 = func_5914_call(var_5915)
output = call_5916
func_5917 = relay.Function([var_5915], output)
mutated_mod['func_5917'] = func_5917
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1688_call = mod.get_global_var('func_1688')
func_1690_call = mutated_mod.get_global_var('func_1690')
call_5933 = func_1688_call()
call_5934 = func_1688_call()
output = relay.Tuple([call_5933,])
output2 = relay.Tuple([call_5934,])
func_5972 = relay.Function([], output)
mod['func_5972'] = func_5972
mod = relay.transform.InferType()(mod)
mutated_mod['func_5972'] = func_5972
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5972_call = mutated_mod.get_global_var('func_5972')
call_5973 = func_5972_call()
output = call_5973
func_5974 = relay.Function([], output)
mutated_mod['func_5974'] = func_5974
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3607_call = mod.get_global_var('func_3607')
func_3608_call = mutated_mod.get_global_var('func_3608')
call_5999 = relay.TupleGetItem(func_3607_call(), 0)
call_6000 = relay.TupleGetItem(func_3608_call(), 0)
func_1412_call = mod.get_global_var('func_1412')
func_1414_call = mutated_mod.get_global_var('func_1414')
call_6011 = func_1412_call()
call_6012 = func_1412_call()
func_5368_call = mod.get_global_var('func_5368')
func_5371_call = mutated_mod.get_global_var('func_5371')
var_6020 = relay.var("var_6020", dtype = "float64", shape = (90,))#candidate|6020|(90,)|var|float64
call_6019 = relay.TupleGetItem(func_5368_call(relay.reshape(var_6020.astype('float64'), [90,])), 0)
call_6021 = relay.TupleGetItem(func_5371_call(relay.reshape(var_6020.astype('float64'), [90,])), 0)
output = relay.Tuple([call_5999,call_6011,call_6019,var_6020,])
output2 = relay.Tuple([call_6000,call_6012,call_6021,var_6020,])
func_6024 = relay.Function([var_6020,], output)
mod['func_6024'] = func_6024
mod = relay.transform.InferType()(mod)
mutated_mod['func_6024'] = func_6024
mutated_mod = relay.transform.InferType()(mutated_mod)
var_6025 = relay.var("var_6025", dtype = "float64", shape = (90,))#candidate|6025|(90,)|var|float64
func_6024_call = mutated_mod.get_global_var('func_6024')
call_6026 = func_6024_call(var_6025)
output = call_6026
func_6027 = relay.Function([var_6025], output)
mutated_mod['func_6027'] = func_6027
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3550_call = mod.get_global_var('func_3550')
func_3552_call = mutated_mod.get_global_var('func_3552')
call_6029 = relay.TupleGetItem(func_3550_call(), 4)
call_6030 = relay.TupleGetItem(func_3552_call(), 4)
output = call_6029
output2 = call_6030
func_6033 = relay.Function([], output)
mod['func_6033'] = func_6033
mod = relay.transform.InferType()(mod)
output = func_6033()
func_6034 = relay.Function([], output)
mutated_mod['func_6034'] = func_6034
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1389_call = mod.get_global_var('func_1389')
func_1390_call = mutated_mod.get_global_var('func_1390')
call_6049 = relay.TupleGetItem(func_1389_call(), 1)
call_6050 = relay.TupleGetItem(func_1390_call(), 1)
func_2965_call = mod.get_global_var('func_2965')
func_2969_call = mutated_mod.get_global_var('func_2969')
const_6052 = relay.const([9,2,-9,1,-8,6,5,10,5,-7,1,3,-9,-3,1,2,9,5,-8,7,-3,7,3,2,-7,3,2,7,5,10,7,3,-7,4,-7,3,-4,-7,-10,-6,-8,4,-5,1,-3,5,4,6,8,-9,2,4,4,4,-10,10,9,6,-7,1,10,9,-6,7,4,-1,-10,2,-6,-8,7,2,4,-10,-7,-10,-9,-10,4,10], dtype = "uint64")#candidate|6052|(80,)|const|uint64
const_6053 = relay.const(-10, dtype = "uint8")#candidate|6053|()|const|uint8
call_6051 = relay.TupleGetItem(func_2965_call(relay.reshape(const_6052.astype('uint64'), [80, 1]), relay.reshape(const_6053.astype('uint8'), []), ), 0)
call_6054 = relay.TupleGetItem(func_2969_call(relay.reshape(const_6052.astype('uint64'), [80, 1]), relay.reshape(const_6053.astype('uint8'), []), ), 0)
output = relay.Tuple([call_6049,call_6051,const_6052,const_6053,])
output2 = relay.Tuple([call_6050,call_6054,const_6052,const_6053,])
func_6061 = relay.Function([], output)
mod['func_6061'] = func_6061
mod = relay.transform.InferType()(mod)
mutated_mod['func_6061'] = func_6061
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6061_call = mutated_mod.get_global_var('func_6061')
call_6062 = func_6061_call()
output = call_6062
func_6063 = relay.Function([], output)
mutated_mod['func_6063'] = func_6063
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3818_call = mod.get_global_var('func_3818')
func_3820_call = mutated_mod.get_global_var('func_3820')
call_6068 = func_3818_call()
call_6069 = func_3818_call()
uop_6071 = relay.sigmoid(call_6068.astype('float64')) # shape=(14, 9, 15)
uop_6073 = relay.sigmoid(call_6069.astype('float64')) # shape=(14, 9, 15)
output = relay.Tuple([uop_6071,])
output2 = relay.Tuple([uop_6073,])
func_6086 = relay.Function([], output)
mod['func_6086'] = func_6086
mod = relay.transform.InferType()(mod)
mutated_mod['func_6086'] = func_6086
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6086_call = mutated_mod.get_global_var('func_6086')
call_6087 = func_6086_call()
output = call_6087
func_6088 = relay.Function([], output)
mutated_mod['func_6088'] = func_6088
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1626_call = mod.get_global_var('func_1626')
func_1627_call = mutated_mod.get_global_var('func_1627')
call_6109 = relay.TupleGetItem(func_1626_call(), 1)
call_6110 = relay.TupleGetItem(func_1627_call(), 1)
func_3792_call = mod.get_global_var('func_3792')
func_3793_call = mutated_mod.get_global_var('func_3793')
call_6115 = relay.TupleGetItem(func_3792_call(), 0)
call_6116 = relay.TupleGetItem(func_3793_call(), 0)
func_4798_call = mod.get_global_var('func_4798')
func_4801_call = mutated_mod.get_global_var('func_4801')
var_6118 = relay.var("var_6118", dtype = "int16", shape = (455, 1))#candidate|6118|(455, 1)|var|int16
call_6117 = relay.TupleGetItem(func_4798_call(relay.reshape(call_6109.astype('int16'), []), relay.reshape(var_6118.astype('int16'), [7, 13, 5]), ), 0)
call_6119 = relay.TupleGetItem(func_4801_call(relay.reshape(call_6109.astype('int16'), []), relay.reshape(var_6118.astype('int16'), [7, 13, 5]), ), 0)
output = relay.Tuple([call_6109,call_6115,call_6117,var_6118,])
output2 = relay.Tuple([call_6110,call_6116,call_6119,var_6118,])
func_6143 = relay.Function([var_6118,], output)
mod['func_6143'] = func_6143
mod = relay.transform.InferType()(mod)
mutated_mod['func_6143'] = func_6143
mutated_mod = relay.transform.InferType()(mutated_mod)
var_6144 = relay.var("var_6144", dtype = "int16", shape = (455, 1))#candidate|6144|(455, 1)|var|int16
func_6143_call = mutated_mod.get_global_var('func_6143')
call_6145 = func_6143_call(var_6144)
output = call_6145
func_6146 = relay.Function([var_6144], output)
mutated_mod['func_6146'] = func_6146
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2300_call = mod.get_global_var('func_2300')
func_2301_call = mutated_mod.get_global_var('func_2301')
call_6154 = relay.TupleGetItem(func_2300_call(), 1)
call_6155 = relay.TupleGetItem(func_2301_call(), 1)
func_1412_call = mod.get_global_var('func_1412')
func_1414_call = mutated_mod.get_global_var('func_1414')
call_6168 = func_1412_call()
call_6169 = func_1412_call()
output = relay.Tuple([call_6154,call_6168,])
output2 = relay.Tuple([call_6155,call_6169,])
func_6171 = relay.Function([], output)
mod['func_6171'] = func_6171
mod = relay.transform.InferType()(mod)
mutated_mod['func_6171'] = func_6171
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6171_call = mutated_mod.get_global_var('func_6171')
call_6172 = func_6171_call()
output = call_6172
func_6173 = relay.Function([], output)
mutated_mod['func_6173'] = func_6173
mutated_mod = relay.transform.InferType()(mutated_mod)
const_6206 = relay.const([[[5.224240,-5.755075,-1.362750,6.485981,-3.843366,3.061576,-4.472706,-3.268009,-4.737883,5.140849,0.931305,0.938158,-0.634479,-6.249238,-8.163027,1.802466],[5.633733,-8.129737,-5.718747,-4.180104,-8.434967,6.331520,5.244350,-1.119785,-6.918049,5.699576,9.416496,2.915020,-1.578085,-0.291137,4.007813,-1.087438],[3.904966,-4.673073,9.045773,-6.373633,-2.317635,-5.037829,8.634542,6.681789,-2.645406,-6.853439,2.839778,-2.518569,0.273217,-5.418356,-9.733854,4.623609],[-2.088999,5.277047,1.791626,6.280755,8.234538,4.299799,-8.040950,-4.777956,-8.217967,-2.567651,-1.071974,5.303105,8.325910,-6.600984,8.872330,9.012390],[3.316494,4.724861,-2.724140,-9.025690,-4.197957,4.542512,1.049450,6.306967,-3.790252,2.558493,-1.274001,-6.488862,8.777259,5.228889,4.764606,-9.422874],[2.203331,9.805044,-2.973055,-2.718772,4.320148,-2.381735,5.937259,-9.716085,9.885527,1.268994,4.337526,-8.272882,-2.615334,0.520328,-9.247102,9.939308],[1.267997,-1.571904,-2.689546,-6.268790,-1.369349,-7.640528,-5.374176,6.471356,2.584231,-4.647171,-9.161343,1.964945,-9.623708,-7.793586,-6.215170,1.145248],[-6.214130,7.025967,-2.775793,1.733898,-8.179743,-6.607719,-9.491360,9.580328,-7.442955,-5.553368,-2.126875,-4.481795,-7.599643,3.654785,-1.972294,-4.225607],[-7.247401,8.797994,2.813918,3.988258,1.457355,3.572709,1.660599,2.977108,-9.277960,4.991071,5.723683,1.361806,-9.983342,-4.946940,6.369088,-4.202154],[-7.543099,-5.639727,-6.390001,-4.567795,-4.736477,2.320925,-1.108434,6.019888,3.814450,7.574693,-3.606199,-9.630314,9.321867,9.961203,-0.457629,7.499270],[-8.724965,-3.969271,2.992862,-1.262161,-1.563293,-3.579829,-2.338385,7.259887,-2.918022,-8.842331,-6.121615,0.177611,2.070699,-8.174011,-7.550938,-2.473116],[-9.831849,1.962765,0.236452,6.016341,-3.739423,-0.273632,7.659382,-1.152489,-1.944445,9.022641,2.910911,4.814498,8.033268,-4.976723,5.870777,-9.430537],[-4.455279,0.664892,6.389580,3.267710,-0.170003,-9.647416,-9.149224,3.729996,5.469681,0.742602,-5.725315,6.879592,-6.932657,3.912140,2.037001,2.660596],[-2.579900,0.830129,0.508385,4.738140,9.098739,-9.212750,-8.762831,-1.445059,-1.719964,-8.340279,-6.055073,-2.271599,-8.298726,-1.239845,-1.841177,1.769373],[7.488838,-0.012308,8.597775,-4.796905,-6.215355,-7.075443,5.261658,-2.683810,-9.721500,-8.742693,7.142283,-5.277285,-0.749272,3.436784,-0.957087,1.819679],[5.504119,6.423736,1.824572,5.197985,-8.866277,-6.947693,2.865430,5.003949,-6.475428,-4.391116,-6.541082,5.129011,-9.751731,7.154571,5.161829,-2.544961]],[[4.191564,6.188623,3.386265,-6.231760,1.990166,7.660663,6.178016,-3.012115,-1.363452,3.935252,4.166765,-5.071356,0.815310,6.197026,-6.827636,-8.374856],[3.896171,2.817445,-4.379933,-3.518695,-3.679276,-3.297562,-9.568997,8.049660,-3.052889,4.086165,8.677560,6.974904,-0.860667,7.733731,-1.933972,-0.945506],[-2.829172,-7.694718,6.374821,-8.005588,2.609986,6.907894,1.474603,-5.692531,-4.476685,-6.414514,8.805534,-1.299522,-7.048663,8.863117,9.512792,-8.558043],[4.069967,6.310819,9.650927,-1.086052,-8.686803,-8.124714,3.699058,1.679241,-0.787282,0.969569,2.564442,9.128103,-0.405832,-8.116880,-7.836896,1.373626],[-8.363637,-6.255595,-3.389697,-0.030128,0.377914,-6.051754,5.099277,-7.582921,0.104144,-9.015736,7.850670,-0.569426,-7.222339,-6.573957,4.324220,-2.860129],[-1.222020,7.631162,2.391718,6.494928,-4.472687,1.218184,-6.555623,-3.331851,-1.819621,-2.816734,-5.717144,7.445088,-9.788670,-1.170234,2.491725,2.844985],[7.178021,-5.936959,-6.763621,0.976453,6.487994,-3.228342,-7.323917,-8.985663,6.737562,6.624385,0.424579,-4.696283,-1.949163,-3.025054,8.212812,1.066403],[-9.963954,-5.070092,7.404329,-5.500157,-8.173479,-1.010734,9.330423,3.653482,-9.661064,-5.225417,9.778077,3.200510,2.720034,8.179815,2.382205,-6.589253],[-5.409735,-2.585432,-4.750346,0.599756,6.284314,-1.486592,-2.062442,-2.938645,-7.219806,-2.799858,7.620231,4.022973,5.164902,-1.326254,9.862104,5.009541],[9.614249,5.937529,-6.851096,-1.246996,0.565156,-1.106159,8.677268,-2.437012,4.631259,9.449385,-7.388974,-0.820232,-7.946777,-1.873564,2.145692,2.802325],[2.641064,-9.772963,4.670318,9.174081,2.561951,-6.913733,-0.095608,-5.074311,-0.905882,6.507071,-6.645300,-1.383046,-1.012301,-7.571399,-1.208902,-6.147904],[7.216319,1.423475,5.776495,3.772849,-4.011983,4.187419,-9.425634,0.257900,-1.873358,0.017312,-7.803281,9.122709,-6.513903,-3.747736,1.873955,-2.549310],[2.390296,-8.716936,-4.532857,-5.273556,5.629577,-6.472338,0.082138,-8.709952,-3.918389,2.970221,-2.010639,4.086129,-9.472896,9.476722,-7.235426,-2.345660],[-5.363310,-3.836994,-1.646071,0.972867,4.341256,0.557168,1.427280,-7.864336,9.656663,-3.341773,-7.213942,-8.092084,7.589884,-2.717428,2.433585,-1.174661],[9.918735,5.915403,6.981142,-6.829601,-4.311754,7.165537,6.778296,9.281552,3.673448,-8.621516,3.479038,6.267417,5.328410,-8.488042,-1.380176,-4.467145],[0.823389,-7.519901,-0.941793,2.994636,-9.594826,5.480682,-1.335880,0.684811,-0.441346,7.706289,-9.730748,6.374411,0.946812,7.717811,-5.315442,3.893346]],[[2.443317,-5.878712,-7.119570,-7.542323,-7.689468,2.274030,-1.340829,3.911801,-8.677200,-2.417463,1.377061,-4.063496,4.540853,-7.182236,1.044301,8.001556],[5.037129,9.494633,-1.806545,4.099762,6.479567,4.569426,1.257966,-7.881782,-6.010178,-5.208693,-7.860065,-4.334767,-7.395374,6.441317,-0.964787,-9.737909],[-0.338286,-0.444201,7.432912,-8.557907,-1.652764,-7.640383,-0.931808,4.841929,6.055661,-2.131721,7.683242,2.988766,8.912857,2.767514,-9.713826,-5.126523],[2.573498,1.823883,-8.300604,8.831486,1.060060,-8.287577,5.271182,-0.784230,7.343082,-9.368576,2.972167,2.892200,5.732342,1.444616,-7.764161,-1.503660],[-8.055070,2.356300,3.620543,7.899884,-6.845943,-0.837600,4.659105,9.693095,7.937024,2.737190,3.775197,-6.286862,-7.824740,-9.283382,9.806623,-5.890960],[-9.961075,-5.716257,2.234980,7.256761,2.963070,7.795649,-7.607593,4.493515,-5.051120,7.351418,2.232029,-8.541361,8.675473,9.240018,-3.569870,-8.804156],[9.828422,-0.320040,-1.019102,-2.640942,-6.095469,-3.999916,-0.485154,-4.794295,5.955173,0.238643,0.875817,-2.776625,-5.461096,4.663155,7.659710,-7.167844],[-0.391681,3.403524,-7.716017,-0.300187,2.396398,1.583299,9.898876,1.649139,6.198527,4.993139,-8.533476,3.661251,3.802889,6.190392,-7.429202,7.970491],[1.575742,4.228843,0.977582,-5.889400,0.573359,-3.665356,1.043991,9.762901,-1.837201,-4.196739,-6.558534,-2.081120,-1.766587,-1.622906,1.079973,-4.166639],[4.418917,-6.491860,0.250896,3.130402,-3.997304,6.344016,4.591031,7.796914,-7.817614,4.528494,7.102044,-8.504800,3.570886,9.624840,5.222781,6.293660],[5.809588,7.014101,-1.748430,5.121273,-2.151125,6.605031,8.974743,-3.326250,-1.424435,-6.961925,7.595547,9.661090,-4.070719,5.790046,-4.554546,-4.918829],[-7.091251,4.686491,-4.461133,9.931695,2.582601,9.905046,9.355609,-3.686360,5.808085,-4.168281,-8.472412,4.805878,-0.780329,-6.919410,-0.130996,-9.792448],[-9.867674,8.464054,3.364491,9.931921,4.869530,9.631641,-5.368483,-4.311882,8.182779,-0.403977,0.394860,-4.885083,-1.214937,-1.872792,4.759358,7.943058],[-8.072858,-2.238726,-7.663141,9.606813,-2.440790,-5.059909,-4.336630,-1.574945,0.095296,2.552755,1.570271,-5.041757,-4.192573,-4.320691,-4.387234,3.854262],[-9.593029,-6.518135,-8.387106,1.033585,-9.604298,9.658193,-3.998141,-2.820034,9.764114,-7.291359,4.884399,-1.382828,-7.291293,5.660217,3.220309,4.909937],[9.402941,-7.047102,3.104232,-0.548310,1.002914,8.527727,-0.968617,-2.564114,2.674732,-9.714553,1.730983,2.646934,5.863833,-3.528030,4.249288,-0.677819]],[[7.402487,-0.751035,-1.409957,6.798213,6.244163,-6.834850,-4.967838,2.133526,6.297685,1.744127,-8.314349,-4.471843,8.898792,-8.060064,2.717062,3.463128],[8.338753,3.889664,6.063147,-6.498709,3.499641,-7.788384,8.200349,-0.660431,2.635675,6.546264,-3.708110,8.867814,2.376049,-4.317404,-8.854885,6.268730],[-8.518895,-5.655951,2.417186,-5.160066,8.702712,1.735759,-5.874032,0.179063,1.140655,7.066395,3.361746,8.297488,9.896864,6.041441,-1.264021,9.842525],[5.615577,-0.925529,-1.832678,-9.307232,4.080565,-1.907081,0.291871,4.658499,9.459336,-7.302473,9.154243,9.430549,4.116393,-9.960767,1.630252,-3.618775],[9.281537,-9.132197,4.078098,9.191673,-4.448173,-6.550239,-6.717921,-2.546186,9.919849,-2.743782,-0.685566,4.508514,-8.866390,9.563463,5.607730,-2.954737],[-1.611177,9.999552,1.395819,-6.143557,-1.388330,8.031428,-8.331210,-5.065790,-7.469813,-4.617098,-2.605572,7.396591,-5.168819,9.743704,-7.154630,-3.564887],[-5.494319,6.117174,7.900519,6.451176,-7.789950,-3.809992,-4.125587,-4.346576,8.571988,3.681391,-5.838760,-1.657574,-4.544784,7.497190,5.343368,9.929988],[1.446284,-7.264416,2.563030,-3.875742,-8.129149,-0.079301,-8.942574,-7.614982,-1.409099,9.574246,-9.917048,0.535518,2.260729,6.759455,-3.574774,-1.313809],[7.271890,-1.070941,-5.415822,0.113550,8.456705,3.725433,-4.012855,2.732034,-9.661068,-5.084510,-2.564026,8.924422,-4.256187,5.718161,4.508337,-9.163275],[-6.636200,3.523532,8.250608,6.563417,3.458868,-0.077561,-2.015466,-6.674431,0.041819,1.117267,-7.511616,6.130473,-0.616310,6.153771,1.347878,-0.380247],[9.300602,-6.335776,-3.473543,5.812555,8.117903,-6.859649,-1.937918,-2.088125,3.221946,5.631735,-2.376546,-7.075236,2.475296,-3.591541,0.604058,-4.491544],[2.857305,2.995701,9.256674,6.355904,7.204710,-0.457199,-3.721753,4.776617,9.797178,6.683797,0.504646,-2.772752,7.695419,4.422784,1.805767,7.308229],[0.451761,5.262342,-8.315381,3.311402,-8.741501,9.342221,-3.511831,-3.816652,7.580285,1.722830,4.500326,-0.722412,-2.391795,7.878996,4.438586,-1.392993],[8.214420,2.192524,-0.715239,6.462464,5.779763,8.984616,7.475387,4.021796,1.770668,-2.341839,-6.257250,-9.870520,-9.454477,-1.984823,-5.170956,-0.057147],[-2.622918,9.495845,-2.489098,4.326142,5.983140,1.565444,-0.186046,-1.523141,0.807340,-0.871422,8.734930,4.252591,-3.335275,7.794076,-9.065540,7.021943],[-9.998518,-1.355519,4.732321,-0.532861,-7.779635,-0.363532,-2.609002,3.607243,3.090320,8.584101,-8.431564,-9.479569,-2.240939,9.249383,-4.633615,-1.816559]]], dtype = "float64")#candidate|6206|(4, 16, 16)|const|float64
uop_6207 = relay.erf(const_6206.astype('float64')) # shape=(4, 16, 16)
output = uop_6207
output2 = uop_6207
func_6213 = relay.Function([], output)
mod['func_6213'] = func_6213
mod = relay.transform.InferType()(mod)
mutated_mod['func_6213'] = func_6213
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6213_call = mutated_mod.get_global_var('func_6213')
call_6214 = func_6213_call()
output = call_6214
func_6215 = relay.Function([], output)
mutated_mod['func_6215'] = func_6215
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3550_call = mod.get_global_var('func_3550')
func_3552_call = mutated_mod.get_global_var('func_3552')
call_6262 = relay.TupleGetItem(func_3550_call(), 5)
call_6263 = relay.TupleGetItem(func_3552_call(), 5)
output = call_6262
output2 = call_6263
func_6290 = relay.Function([], output)
mod['func_6290'] = func_6290
mod = relay.transform.InferType()(mod)
output = func_6290()
func_6291 = relay.Function([], output)
mutated_mod['func_6291'] = func_6291
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5829_call = mod.get_global_var('func_5829')
func_5831_call = mutated_mod.get_global_var('func_5831')
call_6296 = relay.TupleGetItem(func_5829_call(), 0)
call_6297 = relay.TupleGetItem(func_5831_call(), 0)
func_6290_call = mod.get_global_var('func_6290')
func_6291_call = mutated_mod.get_global_var('func_6291')
call_6298 = func_6290_call()
call_6299 = func_6290_call()
output = relay.Tuple([call_6296,call_6298,])
output2 = relay.Tuple([call_6297,call_6299,])
func_6308 = relay.Function([], output)
mod['func_6308'] = func_6308
mod = relay.transform.InferType()(mod)
output = func_6308()
func_6309 = relay.Function([], output)
mutated_mod['func_6309'] = func_6309
mutated_mod = relay.transform.InferType()(mutated_mod)
var_6348 = relay.var("var_6348", dtype = "float64", shape = (7, 1, 10))#candidate|6348|(7, 1, 10)|var|float64
uop_6349 = relay.sinh(var_6348.astype('float64')) # shape=(7, 1, 10)
bop_6353 = relay.multiply(uop_6349.astype('int64'), relay.reshape(var_6348.astype('int64'), relay.shape_of(uop_6349))) # shape=(7, 1, 10)
output = relay.Tuple([bop_6353,])
output2 = relay.Tuple([bop_6353,])
func_6356 = relay.Function([var_6348,], output)
mod['func_6356'] = func_6356
mod = relay.transform.InferType()(mod)
mutated_mod['func_6356'] = func_6356
mutated_mod = relay.transform.InferType()(mutated_mod)
var_6357 = relay.var("var_6357", dtype = "float64", shape = (7, 1, 10))#candidate|6357|(7, 1, 10)|var|float64
func_6356_call = mutated_mod.get_global_var('func_6356')
call_6358 = func_6356_call(var_6357)
output = call_6358
func_6359 = relay.Function([var_6357], output)
mutated_mod['func_6359'] = func_6359
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1792_call = mod.get_global_var('func_1792')
func_1793_call = mutated_mod.get_global_var('func_1793')
call_6366 = relay.TupleGetItem(func_1792_call(), 0)
call_6367 = relay.TupleGetItem(func_1793_call(), 0)
output = relay.Tuple([call_6366,])
output2 = relay.Tuple([call_6367,])
func_6369 = relay.Function([], output)
mod['func_6369'] = func_6369
mod = relay.transform.InferType()(mod)
output = func_6369()
func_6370 = relay.Function([], output)
mutated_mod['func_6370'] = func_6370
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6290_call = mod.get_global_var('func_6290')
func_6291_call = mutated_mod.get_global_var('func_6291')
call_6387 = func_6290_call()
call_6388 = func_6290_call()
func_3226_call = mod.get_global_var('func_3226')
func_3227_call = mutated_mod.get_global_var('func_3227')
call_6396 = relay.TupleGetItem(func_3226_call(), 1)
call_6397 = relay.TupleGetItem(func_3227_call(), 1)
output = relay.Tuple([call_6387,call_6396,])
output2 = relay.Tuple([call_6388,call_6397,])
func_6411 = relay.Function([], output)
mod['func_6411'] = func_6411
mod = relay.transform.InferType()(mod)
mutated_mod['func_6411'] = func_6411
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6411_call = mutated_mod.get_global_var('func_6411')
call_6412 = func_6411_call()
output = call_6412
func_6413 = relay.Function([], output)
mutated_mod['func_6413'] = func_6413
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5829_call = mod.get_global_var('func_5829')
func_5831_call = mutated_mod.get_global_var('func_5831')
call_6451 = relay.TupleGetItem(func_5829_call(), 2)
call_6452 = relay.TupleGetItem(func_5831_call(), 2)
output = relay.Tuple([call_6451,])
output2 = relay.Tuple([call_6452,])
func_6453 = relay.Function([], output)
mod['func_6453'] = func_6453
mod = relay.transform.InferType()(mod)
output = func_6453()
func_6454 = relay.Function([], output)
mutated_mod['func_6454'] = func_6454
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6308_call = mod.get_global_var('func_6308')
func_6309_call = mutated_mod.get_global_var('func_6309')
call_6467 = relay.TupleGetItem(func_6308_call(), 0)
call_6468 = relay.TupleGetItem(func_6309_call(), 0)
func_6033_call = mod.get_global_var('func_6033')
func_6034_call = mutated_mod.get_global_var('func_6034')
call_6469 = func_6033_call()
call_6470 = func_6033_call()
output = relay.Tuple([call_6467,call_6469,])
output2 = relay.Tuple([call_6468,call_6470,])
func_6475 = relay.Function([], output)
mod['func_6475'] = func_6475
mod = relay.transform.InferType()(mod)
mutated_mod['func_6475'] = func_6475
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6475_call = mutated_mod.get_global_var('func_6475')
call_6476 = func_6475_call()
output = call_6476
func_6477 = relay.Function([], output)
mutated_mod['func_6477'] = func_6477
mutated_mod = relay.transform.InferType()(mutated_mod)
var_6501 = relay.var("var_6501", dtype = "float64", shape = (1, 3, 10))#candidate|6501|(1, 3, 10)|var|float64
uop_6502 = relay.cosh(var_6501.astype('float64')) # shape=(1, 3, 10)
func_3607_call = mod.get_global_var('func_3607')
func_3608_call = mutated_mod.get_global_var('func_3608')
call_6504 = relay.TupleGetItem(func_3607_call(), 0)
call_6505 = relay.TupleGetItem(func_3608_call(), 0)
func_5011_call = mod.get_global_var('func_5011')
func_5014_call = mutated_mod.get_global_var('func_5014')
const_6523 = relay.const([[2,4,7,8,-10,-2,-5,-3,9,4,8,10,-8,-8,10,10,5,-7,1,-8,-6,-4,-9,10,3,-7,-9,-10,3,5,-9,-3,-10,-9,-6,4,7,5,-2,-7,10,5],[-3,6,6,7,-8,-2,-3,-7,-7,-2,-8,-4,3,7,-7,3,-9,4,-10,-1,-1,7,3,2,-7,-6,-1,-5,-2,-10,-7,9,-1,1,3,-2,-4,-8,-2,-9,-5,4],[-7,-2,3,10,-6,4,-1,1,-9,-8,-1,-10,-7,4,7,-7,6,5,-3,7,-5,9,8,-10,4,-9,-4,-9,-1,-4,10,-3,3,6,-3,7,6,6,3,-2,-3,3],[-2,-2,-5,9,8,-2,10,-8,10,2,9,-9,-3,-1,-2,8,7,6,4,7,-7,-4,-6,-9,6,-10,7,-1,-2,9,-7,7,4,-5,-9,2,-1,1,9,-2,1,-1],[-3,1,5,7,-4,3,8,-10,-10,2,-9,9,-3,2,-2,4,-5,9,2,9,2,8,2,8,-8,-3,5,4,2,-4,9,8,-1,-2,-4,-1,-7,-6,-6,-2,7,1],[7,10,1,4,1,2,10,7,8,-10,-8,3,5,6,1,3,-5,1,-8,4,8,3,3,-4,9,-6,-4,-9,-6,-10,6,-9,10,-5,-3,-10,-8,-1,-5,1,-10,-9],[8,5,6,-1,1,-1,7,9,-8,3,2,-6,10,10,-4,6,8,-6,-7,5,6,-8,6,7,6,8,5,-6,-1,8,-7,7,-6,-10,-9,-2,4,10,-9,2,8,-5],[5,-9,-10,-4,-1,-2,4,-1,-10,-10,5,4,8,9,-9,-10,-8,3,-5,-4,-9,-5,-10,-8,1,5,-9,-10,-7,2,5,-10,-10,-2,-1,-3,-3,-3,-7,5,8,-6]], dtype = "uint8")#candidate|6523|(8, 42)|const|uint8
call_6522 = func_5011_call(relay.reshape(const_6523.astype('uint8'), [12, 2, 14]), relay.reshape(const_6523.astype('uint8'), [12, 2, 14]), )
call_6524 = func_5011_call(relay.reshape(const_6523.astype('uint8'), [12, 2, 14]), relay.reshape(const_6523.astype('uint8'), [12, 2, 14]), )
bop_6527 = relay.logical_or(const_6523.astype('bool'), relay.reshape(call_6522.astype('bool'), relay.shape_of(const_6523))) # shape=(8, 42)
bop_6530 = relay.logical_or(const_6523.astype('bool'), relay.reshape(call_6524.astype('bool'), relay.shape_of(const_6523))) # shape=(8, 42)
bop_6532 = relay.greater_equal(uop_6502.astype('bool'), relay.reshape(var_6501.astype('bool'), relay.shape_of(uop_6502))) # shape=(1, 3, 10)
bop_6542 = relay.multiply(uop_6502.astype('float32'), relay.reshape(bop_6532.astype('float32'), relay.shape_of(uop_6502))) # shape=(1, 3, 10)
output = relay.Tuple([call_6504,bop_6527,bop_6542,])
output2 = relay.Tuple([call_6505,bop_6530,bop_6542,])
func_6545 = relay.Function([var_6501,], output)
mod['func_6545'] = func_6545
mod = relay.transform.InferType()(mod)
mutated_mod['func_6545'] = func_6545
mutated_mod = relay.transform.InferType()(mutated_mod)
var_6546 = relay.var("var_6546", dtype = "float64", shape = (1, 3, 10))#candidate|6546|(1, 3, 10)|var|float64
func_6545_call = mutated_mod.get_global_var('func_6545')
call_6547 = func_6545_call(var_6546)
output = call_6547
func_6548 = relay.Function([var_6546], output)
mutated_mod['func_6548'] = func_6548
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2833_call = mod.get_global_var('func_2833')
func_2835_call = mutated_mod.get_global_var('func_2835')
call_6576 = func_2833_call()
call_6577 = func_2833_call()
func_337_call = mod.get_global_var('func_337')
func_341_call = mutated_mod.get_global_var('func_341')
const_6586 = relay.const([9,3,9,-2,5,-5,-9,2,-5,-10,-4,3,-6,1,-5,9,10,9,-8,-8,-2,-1,3,-9,-2,3,-3,8,-5,-7,-9,4,10,1,-6,-3,3,-7,7,5,4,7,-6,9,6,-2,2,-6,-1,2,-5,-6,-1,3,1,-9,-9,2,-1,-7,-7,-4,6,3,5,5,-2,-8,-5,3,10,1,-8,5,6,-8,10,3,-10,-3,6,6,-10,1,7,3,5,9,9,-5,-5,-9,5,-2,2,3,-5,6,-5,-5,2,-2,-4,-4,-6,-9,2,-7,-1,3,4,1,-4,9,5,-4,1,-8,8,7,1,-4,-3,-1,9,6,-9,-7,6,-6,9,10,5,-3,9,8,6,-4,-2,1,-8,-7,6,4,9,2,10,-5,1,-2,8,2,-10,2,1,7,10,10,7,7,6,3,-3,-4,8,7,-4,1,5,-9,-7,-10,10,5,6,5,-3,-9,-9,-3,7,-7,8,6,-3,10,9,7,1,-7,5,-10,-2,-7,2,-10,-9,-1,-6,10,1,-9,1,-10,-7,-1,10,-3,10,5,-9,10,-3,6,-7,-9,6,9,-4,-10,-7,-5,2,-3,-7,2,-5,-5,3,-10,-6,9,6,1,-6,-3,2,1,-4,-6,-5,7,3,8,3,-6,-6,-3,2,2,-5,-2,3,-2,-10,-9,9,2,-10,-9,10,-4,-2,-1,-8,-2,-10,-9,8,1,10,-10,8,2,-6,-2,8,-7,10,-5,-4,9,-9,-8,-10,4,1,-10,10,8,4,-4,-4,5,10,-2,6,8,-2,4,-5,3,-6,4,6,2,2,6,-9,-9,10,-1,5,-6,6,-10,-2,-9,-5,-2,5,-2,-4,-2,-9,1,-6,-10,4,9,-7,10,-9,6,2,-6,-6,5,-9,2,-1,1,-7,-8,6,8,-4,3,-9,-9,10,9,8,-5,-2,6,2,-1,-8,-8,4,-10,-8,4,-3,-8,10,9,3,6,-5,-1,10,5,-10,-2,3,-5,-4,-6,-1,10,-4,-3,4,-6,-2,5,-10,-7,5,7,1,9,-10,-4,1,-4,4,-4,7,-9,-7,-8,-7,7,6,10,-7,-5,-3,-8,3,-1,-1,5,-5,4,9,10,1,-7,-3,-6,-7,-5,-10,-5,7,1,-3,6,1,1,-4,-7,8,1,3,2,-8,10,-4,-4,3,10,2,-3,8,6], dtype = "uint8")#candidate|6586|(450,)|const|uint8
call_6585 = relay.TupleGetItem(func_337_call(relay.reshape(const_6586.astype('uint8'), [6, 15, 5]), relay.reshape(const_6586.astype('uint8'), [6, 15, 5]), relay.reshape(const_6586.astype('bool'), [6, 15, 5]), ), 0)
call_6587 = relay.TupleGetItem(func_341_call(relay.reshape(const_6586.astype('uint8'), [6, 15, 5]), relay.reshape(const_6586.astype('uint8'), [6, 15, 5]), relay.reshape(const_6586.astype('bool'), [6, 15, 5]), ), 0)
func_2501_call = mod.get_global_var('func_2501')
func_2503_call = mutated_mod.get_global_var('func_2503')
var_6589 = relay.var("var_6589", dtype = "bool", shape = (1, 1890))#candidate|6589|(1, 1890)|var|bool
call_6588 = func_2501_call(relay.reshape(var_6589.astype('bool'), [14, 9, 15]))
call_6590 = func_2501_call(relay.reshape(var_6589.astype('bool'), [14, 9, 15]))
func_3999_call = mod.get_global_var('func_3999')
func_4000_call = mutated_mod.get_global_var('func_4000')
call_6594 = relay.TupleGetItem(func_3999_call(), 1)
call_6595 = relay.TupleGetItem(func_4000_call(), 1)
output = relay.Tuple([call_6576,call_6585,const_6586,call_6588,var_6589,call_6594,])
output2 = relay.Tuple([call_6577,call_6587,const_6586,call_6590,var_6589,call_6595,])
func_6603 = relay.Function([var_6589,], output)
mod['func_6603'] = func_6603
mod = relay.transform.InferType()(mod)
var_6604 = relay.var("var_6604", dtype = "bool", shape = (1, 1890))#candidate|6604|(1, 1890)|var|bool
output = func_6603(var_6604)
func_6605 = relay.Function([var_6604], output)
mutated_mod['func_6605'] = func_6605
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3358_call = mod.get_global_var('func_3358')
func_3360_call = mutated_mod.get_global_var('func_3360')
call_6636 = func_3358_call()
call_6637 = func_3358_call()
func_1170_call = mod.get_global_var('func_1170')
func_1171_call = mutated_mod.get_global_var('func_1171')
call_6642 = relay.TupleGetItem(func_1170_call(), 0)
call_6643 = relay.TupleGetItem(func_1171_call(), 0)
func_6143_call = mod.get_global_var('func_6143')
func_6146_call = mutated_mod.get_global_var('func_6146')
const_6646 = relay.const([-5,-10,9,10,-2,-7,2,10,4,10,-5,4,3,-10,-8,-9,-3,3,10,-4,-4,1,2,9,7,6,6,-3,-9,-4,-8,-9,-5,-3,-4,9,-9,-3,-4,-9,-6,4,-6,8,9,-2,6,-8,-4,6,-7,7,7,-6,-6,3,-1,1,5,-5,-3,1,-10,2,7,3,5,9,2,5,2,10,-5,3,2,4,4,-9,-4,6,1,7,-1,-9,2,3,-2,-9,3,6,-7,3,8,4,2,-5,-3,-8,7,-7,1,-4,10,7,3,-1,6,4,5,-7,-9,-10,3,7,5,-10,4,7,-7,-9,10,3,-5,3,4,-7,-2,-7,4,6,8,4,-10,-7,-7,-7,8,6,-6,3,9,-5,8,-6,6,2,8,5,8,4,8,-6,-3,10,-1,9,5,-3,-4,7,-2,3,6,-7,1,4,5,8,10,5,-10,-1,6,2,-2,-9,10,4,1,-2,5,4,6,7,-7,-7,-7,-6,4,-3,8,3,-6,-6,2,-1,-6,6,6,-7,-6,-2,7,-7,7,-1,4,3,-3,-10,8,4,8,-5,-5,-7,-9,5,-8,-6,2,2,-3,9,5,-3,-1,-7,6,3,-2,-4,7,6,-2,2,2,-2,-8,-1,10,-6,-10,10,-2,-9,1,-7,5,-8,6,2,2,10,-5,-5,-4,6,3,-2,-10,1,-4,-2,2,5,9,-7,-1,5,10,3,-10,-8,6,1,-10,-7,-3,-5,-10,4,-10,-2,-9,-9,6,3,-10,10,10,9,-4,-6,7,3,-4,9,-9,4,-8,7,4,2,10,9,-5,-1,9,7,9,-5,8,-6,7,-7,5,-8,5,-5,4,-6,-4,-8,-6,-9,7,-7,-8,-4,-3,9,-6,-6,-1,-7,-5,-3,-1,4,-8,-2,8,9,-4,-2,-5,-6,-10,-3,3,5,2,1,-1,-1,-7,-3,6,-3,-7,9,6,5,6,-8,-8,1,2,-5,4,-3,1,-7,10,-7,-5,-10,-2,6,3,-8,-8,10,8,5,1,6,6,1,5,4,6,10,9,5,1,-10,4,-1,3,-8,-5,-8,-10,-6,7,-7,-4,-1,5,2,1,9,1,-8,7,1,-10,3,-8,-7,1,-7,10,-9,-4,-5,4,-10,3,1,4,3,1,-4,-7,3,4,6,-8,1,7,-6,-9,5,-2,3,8,-10,2,-9,4,10,4], dtype = "int16")#candidate|6646|(455,)|const|int16
call_6645 = relay.TupleGetItem(func_6143_call(relay.reshape(const_6646.astype('int16'), [455, 1])), 1)
call_6647 = relay.TupleGetItem(func_6146_call(relay.reshape(const_6646.astype('int16'), [455, 1])), 1)
func_4798_call = mod.get_global_var('func_4798')
func_4801_call = mutated_mod.get_global_var('func_4801')
var_6653 = relay.var("var_6653", dtype = "int16", shape = ())#candidate|6653|()|var|int16
call_6652 = relay.TupleGetItem(func_4798_call(relay.reshape(var_6653.astype('int16'), []), relay.reshape(const_6646.astype('int16'), [7, 13, 5]), ), 0)
call_6654 = relay.TupleGetItem(func_4801_call(relay.reshape(var_6653.astype('int16'), []), relay.reshape(const_6646.astype('int16'), [7, 13, 5]), ), 0)
func_3063_call = mod.get_global_var('func_3063')
func_3066_call = mutated_mod.get_global_var('func_3066')
const_6672 = relay.const([6.062068,-2.373933,2.116794,2.221270,-5.098370,-5.006353,8.850381,-3.328867,-5.301088,1.507714,-6.581472,2.276476,7.745413,1.286036,1.822883,-9.724796,4.521510,-9.021214,8.331022,8.269032,5.207820,8.976398,3.107620,-0.219906,2.166547,8.707769,-1.856749,8.439463,-4.100649,3.366409,1.934422,-7.086613,-1.438461,9.902764,-2.209290,4.074841,-7.469750,1.749055,-7.595648,8.937133,3.851865,7.922605,-5.921058,0.865551,4.918156,-8.361950,-8.269151,-0.090710,-5.755788,5.518786,-0.782537,-3.539839,1.375913,1.802183,5.531264,4.346498,3.934726,5.920929,4.479954,-1.132930,0.015711,6.852097,3.816794,-8.001664,7.126748,-1.099424,-5.966735,-4.636642,-7.605940,7.901613,0.132399,-7.265971,-2.282518,-0.717370,5.636605,-3.325336,0.253789,-8.666493,5.543879,-0.428304,-9.469227,7.080384,8.960268,-0.723166,6.587922,-3.605263,-0.535346,7.722096,-1.143134,-6.398442], dtype = "float64")#candidate|6672|(90,)|const|float64
call_6671 = relay.TupleGetItem(func_3063_call(relay.reshape(const_6672.astype('float64'), [3, 6, 5])), 0)
call_6673 = relay.TupleGetItem(func_3066_call(relay.reshape(const_6672.astype('float64'), [3, 6, 5])), 0)
output = relay.Tuple([call_6636,call_6642,call_6645,const_6646,call_6652,var_6653,call_6671,const_6672,])
output2 = relay.Tuple([call_6637,call_6643,call_6647,const_6646,call_6654,var_6653,call_6673,const_6672,])
func_6674 = relay.Function([var_6653,], output)
mod['func_6674'] = func_6674
mod = relay.transform.InferType()(mod)
var_6675 = relay.var("var_6675", dtype = "int16", shape = ())#candidate|6675|()|var|int16
output = func_6674(var_6675)
func_6676 = relay.Function([var_6675], output)
mutated_mod['func_6676'] = func_6676
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2387_call = mod.get_global_var('func_2387')
func_2389_call = mutated_mod.get_global_var('func_2389')
call_6678 = relay.TupleGetItem(func_2387_call(), 0)
call_6679 = relay.TupleGetItem(func_2389_call(), 0)
func_1848_call = mod.get_global_var('func_1848')
func_1852_call = mutated_mod.get_global_var('func_1852')
var_6681 = relay.var("var_6681", dtype = "uint64", shape = (1, 80))#candidate|6681|(1, 80)|var|uint64
call_6680 = func_1848_call(relay.reshape(var_6681.astype('uint64'), [2, 10, 4]), relay.reshape(var_6681.astype('uint64'), [2, 10, 4]), )
call_6682 = func_1848_call(relay.reshape(var_6681.astype('uint64'), [2, 10, 4]), relay.reshape(var_6681.astype('uint64'), [2, 10, 4]), )
output = relay.Tuple([call_6678,call_6680,var_6681,])
output2 = relay.Tuple([call_6679,call_6682,var_6681,])
func_6683 = relay.Function([var_6681,], output)
mod['func_6683'] = func_6683
mod = relay.transform.InferType()(mod)
var_6684 = relay.var("var_6684", dtype = "uint64", shape = (1, 80))#candidate|6684|(1, 80)|var|uint64
output = func_6683(var_6684)
func_6685 = relay.Function([var_6684], output)
mutated_mod['func_6685'] = func_6685
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2311_call = mod.get_global_var('func_2311')
func_2312_call = mutated_mod.get_global_var('func_2312')
call_6719 = func_2311_call()
call_6720 = func_2311_call()
func_4690_call = mod.get_global_var('func_4690')
func_4692_call = mutated_mod.get_global_var('func_4692')
const_6723 = relay.const([True,True,True,False,True,False,True,True,False,False,True,True,False,False,False,True,True,True,True,True,True,True,True,False,False,False,True,False,False,False,True,True,True,False,True,False,False,True,False,False,True,True,False,False,True,False,True,False,False,True,False,True,False,True,True,False,True,False,False,False,False,True,True,False,True,True,False,True,False,False,False,True,True,False,True,True,False,True,True,False,False,True,True,False,False,False,False,False,True,False,False,True,False,True,True,True,False,False,True,False,False,True,False,False,True,True,True,True,False,False,False,False,False,True,False,False,False,False,False,True,True,False,False,True,False,False,False,False,False,True,True,False,False,True,False,True,False,True,True,True,False,True,True,False,False,False,False,False,False,True,True,True,True,False,False,True,False,True,False,False,False,True,False,True,False,True,False,False,False,True,True,False,False,True,False,True,True,True,True,True,False,True,True,True,True,True,True,True,False,True,True,True,False,True,False,False,False,False,False,True,False,False,True,False,True,False,True,False,True,True,True,True,False,False,False,True,False,True,False,False,False,True,True,False,False,True,False,True,False,True,False,False,True,True,False,False,True,False,False,False,True,True,True,True,False,False,False,False,True,False,False,False,True,False,False,True,True,True,False,True,False,False,True,True,False,False,True,True,False,True,False,True,False,True,False,False,True,False,False,True,False,True,True,True,True,True,False,False,False,True,False,False,True,True,True,True,True,False,True,True,True,True,False,False,False,False,False,False,False,True,True,False,False,False,True,True,True,False,True,False,True,True,False,False,True,False,False,False,False,True,False,False,False,False,False,False,True,False,False,True,True,True,False,True,True,True,False,True,True,False,True,False,True,True,True,False,True,True,True,False,False,True,False,False,True,False,False,False,False,True,False,False,False,False,True,False,True,False,True,True,False,False,True,True,True,False,False,True,True,True,True,True,False,True,True,True,True,False,False,True,True,False,True,True,False,True,True,True,True,False,False,True,False,False,False,False,False,False,True,False,True,False,True,True,True,True,True,False,True,True,True,False,True,True,True,True,False,True,False,True,True,True,False,False,True,False,False,True,True,True,True,False,True,True,False,False,False,True,False,True,False,True,True,True,False,False,False,False,True,False,True,True,True,True,True,False,False,True,False,True,False,True,True,True,False,True,True,False,False,True,True,False,False,False,True,True,True,True,True,False,False,True,True,True,False,False,False,False,True,False,True,True,True,True,False,False,False,True,False,True,False,False,True,True,False,True,False,True,False,True,False,False,False,True,False,True,False,False,True,True,False,True,True,True,False,True,True,False,True,False,True,True,False,True,False,False,False,False,False,False,False,False,True,False,True,True,True,True,True,True,True,True,False,False,False,False,True,False,False,False,False,False,False,False,True,False,False,True,True,False,True,True,False,False,True,False,True,True,True,False,False,False,True,False,False,False,False,False,False,False,False,False,False,False,False,True,True,False,False,False,True,False,True,True,False,False,True,False,True,True,False,True,True,False,True,False,False,True,False,False,False,False,False,False,True,False,False,False,False,False,False,True,False,True,True,True,True,False,True,True,True,True,False,True,True,False,True,True,True,True,True,True,True,True,False,False,True,False,False,False,False,False,True,True,True,False,False,True,True,True,False,False,False,False,True,False,False,False,True,False,True,True,True,True,False,True,True,False,True,False,False,False,False,True,True,False,False,True,True,True,False,True,True,False,True,True,False,False,True,False,False,True,True,True,False,True,True,True,True,False,True,True,False,False,True,True,False,True,False,True,False,False,False,True,True,True,False,True,True,False,True,True,True,False,True,True,False,False,False,True,False,False,True,True,False,False,False,False,True,True,True,True,True,True,False,False,False,True,False,False,True,True,True,False,False,False,True,False,False,True,True,True,True,False,False,True,False,False,True,True,True,False,False,True,True,True,True,False,False,True,False,True,True,True,True,True,False,False,True,False,True,False,True,True,True,True,False,True,False,False,True,True,False,True,False,False,False,False,False,False,True,False,True,False,True,False,True,True,False,False,False,False,True,True,True,False,True,True,True,True,True,False,False,False,False,True,False,False,True,False,True,False,False,False,True,True,True,False,True,True,True,True,True,False,False,False,False,True,False,True,False,True,False,True,True,False,False,True,False,True,True,True,True,True,False,False,True,True,True,False,False,False,True,False,False,True,False,False,True,False,True,True,False,True,False,True,True,False,True,False,True,False,True,True,False,True,True,True,False,False,True,True,False,False,True,False,True,True,False,False,False,False,False,False,True,False,True,True,True,False,True,False,True,False,True,True,False,True,False,False,True,True,True,False,True,False,False,False,False,True,True,False,True,True,False,False,True,True,True,False,False,False,True,True,True,False,False,True,True,False,True,True,True,True,True,False,True,True,False,True,False,True,True,True,False,True,False,False,True,True,False,True,False,True,False,True,False,False,False,True,False,True,False,True,False,True,True,False,True,True,True,True,True,True,True,True,False,True,True,True,False,False,False,False,True,False,True,True,False,True,True,False,True,True,True,True,True,False,True,False,False,True,True,True,False,False,False,False,True,False,False,False,False,False,False,True,True,False,True,True,True,False,False,False,True,True,False,False,False,True,False,False,False,False,True,False,False,True,True,False,True,True,False,True,True,False,True,False,False,False,False,False,False,False,False,True,True,False,False,True,False,False,True,False,False,False,True,True,False,False,True,True,True,True,True,False,True,False,True,False,False,True,False,False,True,False,True,False,True,True,False,True,False,True,True,False,False,False,True,False,False,False,True,True,True,False,False,True,False,True,True,False,False,True,False,True,True,False,True,False,True,True,True,True,True,True,False,True,True,True,True,False,False,False,True,True,True,True,False,True,False,True,False,False,False,False,True,False,False,True,False,False,False,False,True,True,True,True,False,False,True,True,False,True,False,False,False,True,True,True,False,False,False,False,False,True,True,False,True,True,True,True,True,True,True,True,True,False,False,True,True,True,True,True,False,True,True,True,False,True,False,False,True,False,True,True,True,False,True,False,True,False,False,True,False,True,False,True,False,False,False,True,False,True,False,False,False,False,True,False,True,True,True,False,False,False,True,True,False,True,False,True,True,False,False,True,True,False,False,True,True,True,False,True,False,True,True,True,True,True,True,False,False,False,False,False,False,True,False,False,False,False,False,False,False,False,True,True,True,False,True,False,True,True,True,True,False,False,False,True,True,False,True,False,False,True,False,True,True,False,True,True,False,True,True,False,False,True,False,True,True,True,True,False,False,False,True,True,False,False,False,False,False,False,False,False,True,False,True,False,True,True,False,True,False,True,False,False,False,False,True,True,True,False,True,True,False,True,False,True,True,True,True,True,True,True,True,False,True,True,True,False,False,True,False,False,False,False,True,True,False,False,False,True,True,False,False,True,True,True,False,False,False,True,True,True,False,False,True,False,True,False,False,True,True,False,False,False,False,True,True,False,True,True,True,False,True,False,False,False,True,False,False,True,False,True,False,False,False,True,False,True,False,True,True,True,True,True,True,False,False,False,False,True,False,False,False,True,False,False,False,True,False,False,False,False,False,False,True,False,True,True,True,True,False,False,True,False,True,False,False,True,True,False,True,True,False,True,False,False,True,False,True,True,True,True,False,True,True,True,True,True,False,False,False,True,True,True,True,False,False,True,False,True,True,True,False,False,False,False,False,True,True,False,False,False,True,False,True,True,True,False,False,False,False,False,True,True,False,False,False,False,True,False,True,False,True,True,False,True,True,True,False,False,True,False,False,False,True,True,True,False,True,True,False,False,False,True,True,False,True,True,False,False,True,True,True,False,False,True,True,True,False,True,False,True,False,False,False,True,False,True,True,True,True,False,True,True,True,True,True,True,False,True,True,False,False,False,False,False,False,False,True,False,True,True,False,True,False,False,False,False,True,False,True,False,False,True,True,True,False,False,False,False,True,False,False,True,False,True,True,False,True,True,True,False,False,True,False,False,True,False,False,False,False,False,True,False,True,False,False,True,True,False,True,False,False,False,False,True,True,True,True,False,False,False,False,True,True,False,True,False,True,False,True,True,False,False,False,True,False,False,False,True,False,True,False,True,True,False,False,False,True,True,False,False,False,True,True,True,True,False,False,False,False,True,False,False,True,False,True,True,False,True,True,False,True,True,True,False,True,True,True,False,True,True,False,True,False,True,False,False,False,False,False,False,True,False,True,False,False,False,False,False,False,True,True,True,False,False,True,True,False,False,True,True,False,False,False,False,True,False,False,True,True,True,False,False,True,True,True,False,True,True,False,True,False,True,False,False,False,False,True,False,False,False,True,False,False,True,True,False,True,True,True,False,False,True,True,False,False,False,False,False,True,False,True,True,False,False,True,False,False,False,False,False,False,True,True,True], dtype = "bool")#candidate|6723|(1890,)|const|bool
call_6722 = relay.TupleGetItem(func_4690_call(relay.reshape(const_6723.astype('bool'), [14, 9, 15])), 0)
call_6724 = relay.TupleGetItem(func_4692_call(relay.reshape(const_6723.astype('bool'), [14, 9, 15])), 0)
func_3121_call = mod.get_global_var('func_3121')
func_3124_call = mutated_mod.get_global_var('func_3124')
const_6727 = relay.const([6,-7,9,5,-3,9,5,1,5,-5,-10,-10,-7,-6,-4,8,-4,-10,-3,2,1,3,1,-9,5,1,5,8,2,2,8,7,-5,4,-3,1,8,-9,7,7,-5,9,10,4,9,9,6,-1,4,-6,-2,10,-2,-10,10,-2,6,5,-9,9,4,7,-3,-10,4,5,-2,5,-3,-4,-2,7,10,-3,8,-6,9,2,-2,10,-8,-1,9,6,-10,-6,9,-2,5,7,-9,-8,6,10,-4,-3,7,-5,-7,2,-1,4,4,-8,-1,-6,10,9,-8,4,-1,-4,-9,9,-2,-7,-1,-5,-7,8,10,8,-10,5,-8,-9,8,-1,4,6,1,9,6,-1,-6,3,-4,5,-10,1,-3,-8,4,9,7,4,-1,-4,-8,10,-5,-2,-3,-3,1,-2,-4,5,-8,-6,10,-5,-6,5,-3,9,-7,-6,-2,-7,5,-7,-8,5,-7,-10,-4,5,3,3,7,5,5,-8,2,-9,-5,-4,-9,8,3,-10,-3,6,-8,-4,-4,-3,-2,-5,-8,-1,-3,5,-7,5,-1,6,3,-9,-2,-8,-2,5,-3,8,7,4,6,1,10,-1,2,-4,1,7,-8,10,-5,-4,7,8,3,5,1,1,3,-4,-1,-1,-4,6,1,-4,2,5,-9,-7,-4,2,-10,9,-8,8,1,-2,8,-9,-5,-7,10,-8,4,-1,-10,6,-7,3,5,-5,-3,-3,6,-9,-4,1,8,-3,5,-3,-7,4,3,9,9,6,2,2,-3,10,9,1,1,2,-10,-2,3,2,3,3,5,3,-1,5,6,-1,-7,2,8,5,-6,-4,-2,4,8,-7,-9,2,3,-3,-3,4,9,-9,8,5,-10,5,-5,-7,-8,-8,7,6,7,1,-4,-1,10,9,3,-4,-5,7,9,5,-10,-4,-4,9,10,3,-4,6,-4,2,1,2,-6,-5,3,-2,-4,-2,-7,-10,-10,10,5,7,-2,-9,-6,8,10,-7,-5,7,-5,8,9,-8,8,10,5,7,8,-10,-8,8,-4,-2,4,-10,10,1,-5,8,-1,9,8,5,1,-4,-6,9,-7,-10,-2,-10,-6,4,1,5,10,8,-9,6,8,10,-2,5,10,10,6,6,2,5,10,5,-5,10,8,5,5,2,-4,9,-4,8,1,-4,-4,6,1,5,-6,2,-2,10,6,-7,10,-6,4,-6,10,8,1,9,5,9,-1,-5,-2,10,-8,-8,-2,-5,-10,3,-3,5,7,5,8,-3,-5,-1,5,4,-6,-4,-7,-7,1,7,3,7,4,3,-6,-2,-7,9,-4,-5,-5,1,9,-7,1,4,5,-5,-3,-4,5,3,1,-3,-5,5,9,-2,-5,-1,-4,-2,6,10,4,-10,10,-10,-5,5,-3,-10,8,3,2,2,8,-4,9,-4,8,3,-7,-10,-8,-2,7,5,5,-1,-3,2,-6,4,10,10,3,-7,-8,5,-4,-9,1,8,-4,-3,-3,8,1,7,-1,-9,-2,-7,5,-8,-10,-2,3,-7,9,5,6,1,5,-9,5,-3,6,1,3,-2,8,-4,-4,-9,-4,4,8,-7,3,9,4,9,3,5,9,1,-1,-10,9,-7,4,2,7,4,5,-2,-9,-1,10,10,-3,-9,-9,7,-8,10,-6,-5,4,-4,5,8,-6,-8,-4,6,-3,-10,-3,8,-3,-3,-3,-3,8,-5,-3,8,-1,8,7,3,-10,-2,-1,-4,1,5,-8,2,-6,-2,10,-10,8,-8,-3,-7,-3,-4,9,1,7,-5,-4,2,6,3,-4,8,-3,9,5,-7,-4,5,10,5,-3,4,-9,-1,10,10,-7,8,-5,3,2,10,-2,-9,-4,2,5,7,4,-9,-4,-10,9,10,-6,4,5,-4,-1,-1,-9,4,-1,-10,-1,-9,1,-5,-9,6], dtype = "int8")#candidate|6727|(728,)|const|int8
call_6726 = relay.TupleGetItem(func_3121_call(relay.reshape(const_6727.astype('int8'), [4, 14, 13])), 0)
call_6728 = relay.TupleGetItem(func_3124_call(relay.reshape(const_6727.astype('int8'), [4, 14, 13])), 0)
func_2833_call = mod.get_global_var('func_2833')
func_2835_call = mutated_mod.get_global_var('func_2835')
call_6733 = func_2833_call()
call_6734 = func_2833_call()
func_2005_call = mod.get_global_var('func_2005')
func_2006_call = mutated_mod.get_global_var('func_2006')
call_6735 = relay.TupleGetItem(func_2005_call(), 0)
call_6736 = relay.TupleGetItem(func_2006_call(), 0)
func_1725_call = mod.get_global_var('func_1725')
func_1727_call = mutated_mod.get_global_var('func_1727')
call_6748 = relay.TupleGetItem(func_1725_call(), 2)
call_6749 = relay.TupleGetItem(func_1727_call(), 2)
output = relay.Tuple([call_6719,call_6722,const_6723,call_6726,const_6727,call_6733,call_6735,call_6748,])
output2 = relay.Tuple([call_6720,call_6724,const_6723,call_6728,const_6727,call_6734,call_6736,call_6749,])
func_6754 = relay.Function([], output)
mod['func_6754'] = func_6754
mod = relay.transform.InferType()(mod)
mutated_mod['func_6754'] = func_6754
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6754_call = mutated_mod.get_global_var('func_6754')
call_6755 = func_6754_call()
output = call_6755
func_6756 = relay.Function([], output)
mutated_mod['func_6756'] = func_6756
mutated_mod = relay.transform.InferType()(mutated_mod)
const_6819 = relay.const([[[-3.220010,6.028609,-0.528008,4.881897,-5.112151,-5.731453,-8.106629,1.685945,-7.600103,8.914527],[7.905138,-8.856525,-0.313725,0.591393,-1.780774,-7.008163,-4.436246,-3.025410,-0.162225,2.335025],[-8.515091,-7.787340,-2.491174,6.036175,4.600670,-8.188010,8.569320,-4.951933,-8.144220,-0.740650],[8.720996,3.757061,5.711797,-8.674555,8.018657,-1.105006,0.942892,-7.353826,-8.802433,2.308098]],[[-5.292781,9.827238,-4.069403,-6.138803,4.238299,1.262152,7.783617,-5.575089,-5.652550,9.309875],[1.555038,-5.687945,-1.079724,-7.430907,-6.616295,6.479040,-5.618580,-0.283342,-6.060854,1.846898],[-9.750106,-7.488526,4.325092,-6.724525,0.335311,0.057156,0.936332,-5.817166,1.205406,-6.541128],[-4.153241,-2.530723,-1.722781,1.817472,1.585796,3.856721,-7.646749,-8.127886,-8.768185,3.167604]],[[-3.056748,-5.244699,-0.981135,8.163630,-5.612955,-6.706415,0.748477,8.399679,1.979853,4.360213],[9.588872,-8.372027,-7.136517,1.469649,3.123040,3.048502,7.616248,8.217197,-8.129389,9.136091],[5.987879,9.921164,1.716629,-2.341424,6.986653,5.253244,-6.915026,-9.486489,-4.158953,-4.686266],[8.363981,2.504618,3.846374,-8.111618,-6.127357,-9.585712,5.788947,-9.504409,-8.653408,-9.409289]],[[-4.291241,-4.946751,1.191704,-6.126977,-6.584356,-3.232130,-2.994994,2.992851,-9.902083,7.659144],[7.935307,-2.866445,0.152953,7.707488,-3.723240,9.742683,-3.734394,8.761128,7.315665,9.804175],[-3.799883,6.726875,-6.820696,0.871949,-3.076994,9.993887,-2.352589,9.786749,-8.977864,-7.037129],[-8.244429,-6.901268,6.758749,-1.595081,9.008433,5.433797,1.761578,-9.689550,8.184360,8.976565]],[[-1.291350,0.499365,-7.740766,-4.714621,-3.451300,5.689848,-0.838919,9.366730,-8.202555,-6.330778],[2.632491,7.528851,-6.291155,-3.423364,8.429364,-2.900750,-4.509984,1.238091,-1.863358,-0.244614],[-8.044793,8.585146,4.893702,-2.643947,-9.977454,9.170149,-6.455886,8.173184,-1.752604,-8.020603],[3.591861,4.854454,9.733094,-0.887513,-7.954337,-0.801350,3.765886,2.395266,-1.562891,-2.434871]],[[1.257585,-9.768802,-6.425696,-2.982601,-5.834570,0.381316,7.538374,4.411090,4.123420,-2.288324],[-0.071535,-2.545863,-1.518126,-6.398791,7.812631,-7.362041,-4.869611,2.419586,-2.512660,8.437965],[-7.996921,-8.497837,1.080736,-9.840708,0.371130,-5.276465,6.435181,9.622751,7.378444,-3.550283],[-5.828870,0.338985,-7.855826,-7.869629,-6.175196,7.804349,-8.314658,8.926492,0.525013,-6.005976]],[[-5.783240,0.299296,4.851771,-8.571923,-8.361358,4.186109,1.485295,-3.201718,2.107211,-4.981904],[-7.476236,3.851078,2.320026,9.710442,-3.457823,0.211181,-8.675483,3.355041,-4.636342,-2.829760],[-1.180931,4.066875,-9.214090,9.356521,-5.036204,-5.816830,0.282153,9.804834,-9.635335,-0.203406],[-9.717707,9.047925,-9.469868,-7.926517,-2.136234,9.128003,2.297228,-1.091848,-2.431513,9.371203]],[[0.680154,-6.884980,6.429565,5.459149,-6.429342,6.920490,-6.345367,1.966860,8.446117,6.380938],[3.525200,-0.072301,9.207896,-2.451060,2.276245,2.716187,9.258173,0.611193,0.291268,-4.201257],[-3.915769,9.308595,1.771376,9.326058,-4.152790,-2.934071,-7.706149,-0.708563,-3.901789,5.564294],[7.567994,-8.554216,-0.973906,3.723792,6.618678,9.378144,3.025777,-3.335801,-5.503640,4.257590]]], dtype = "float64")#candidate|6819|(8, 4, 10)|const|float64
uop_6820 = relay.sqrt(const_6819.astype('float64')) # shape=(8, 4, 10)
func_4165_call = mod.get_global_var('func_4165')
func_4167_call = mutated_mod.get_global_var('func_4167')
call_6827 = relay.TupleGetItem(func_4165_call(), 0)
call_6828 = relay.TupleGetItem(func_4167_call(), 0)
output = relay.Tuple([uop_6820,call_6827,])
output2 = relay.Tuple([uop_6820,call_6828,])
func_6846 = relay.Function([], output)
mod['func_6846'] = func_6846
mod = relay.transform.InferType()(mod)
mutated_mod['func_6846'] = func_6846
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6846_call = mutated_mod.get_global_var('func_6846')
call_6847 = func_6846_call()
output = call_6847
func_6848 = relay.Function([], output)
mutated_mod['func_6848'] = func_6848
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2005_call = mod.get_global_var('func_2005')
func_2006_call = mutated_mod.get_global_var('func_2006')
call_6887 = relay.TupleGetItem(func_2005_call(), 0)
call_6888 = relay.TupleGetItem(func_2006_call(), 0)
output = relay.Tuple([call_6887,])
output2 = relay.Tuple([call_6888,])
func_6928 = relay.Function([], output)
mod['func_6928'] = func_6928
mod = relay.transform.InferType()(mod)
mutated_mod['func_6928'] = func_6928
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6928_call = mutated_mod.get_global_var('func_6928')
call_6929 = func_6928_call()
output = call_6929
func_6930 = relay.Function([], output)
mutated_mod['func_6930'] = func_6930
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2387_call = mod.get_global_var('func_2387')
func_2389_call = mutated_mod.get_global_var('func_2389')
call_6967 = relay.TupleGetItem(func_2387_call(), 1)
call_6968 = relay.TupleGetItem(func_2389_call(), 1)
func_1181_call = mod.get_global_var('func_1181')
func_1185_call = mutated_mod.get_global_var('func_1185')
const_6976 = relay.const(10, dtype = "uint8")#candidate|6976|()|const|uint8
var_6977 = relay.var("var_6977", dtype = "uint8", shape = (108,))#candidate|6977|(108,)|var|uint8
call_6975 = relay.TupleGetItem(func_1181_call(relay.reshape(const_6976.astype('uint8'), []), relay.reshape(var_6977.astype('uint8'), [12, 3, 3]), ), 0)
call_6978 = relay.TupleGetItem(func_1185_call(relay.reshape(const_6976.astype('uint8'), []), relay.reshape(var_6977.astype('uint8'), [12, 3, 3]), ), 0)
output = relay.Tuple([call_6967,call_6975,const_6976,var_6977,])
output2 = relay.Tuple([call_6968,call_6978,const_6976,var_6977,])
func_6984 = relay.Function([var_6977,], output)
mod['func_6984'] = func_6984
mod = relay.transform.InferType()(mod)
mutated_mod['func_6984'] = func_6984
mutated_mod = relay.transform.InferType()(mutated_mod)
var_6985 = relay.var("var_6985", dtype = "uint8", shape = (108,))#candidate|6985|(108,)|var|uint8
func_6984_call = mutated_mod.get_global_var('func_6984')
call_6986 = func_6984_call(var_6985)
output = call_6986
func_6987 = relay.Function([var_6985], output)
mutated_mod['func_6987'] = func_6987
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4094_call = mod.get_global_var('func_4094')
func_4095_call = mutated_mod.get_global_var('func_4095')
call_7004 = relay.TupleGetItem(func_4094_call(), 0)
call_7005 = relay.TupleGetItem(func_4095_call(), 0)
output = call_7004
output2 = call_7005
func_7006 = relay.Function([], output)
mod['func_7006'] = func_7006
mod = relay.transform.InferType()(mod)
mutated_mod['func_7006'] = func_7006
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7006_call = mutated_mod.get_global_var('func_7006')
call_7007 = func_7006_call()
output = call_7007
func_7008 = relay.Function([], output)
mutated_mod['func_7008'] = func_7008
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6475_call = mod.get_global_var('func_6475')
func_6477_call = mutated_mod.get_global_var('func_6477')
call_7016 = relay.TupleGetItem(func_6475_call(), 1)
call_7017 = relay.TupleGetItem(func_6477_call(), 1)
output = relay.Tuple([call_7016,])
output2 = relay.Tuple([call_7017,])
func_7026 = relay.Function([], output)
mod['func_7026'] = func_7026
mod = relay.transform.InferType()(mod)
output = func_7026()
func_7027 = relay.Function([], output)
mutated_mod['func_7027'] = func_7027
mutated_mod = relay.transform.InferType()(mutated_mod)
var_7038 = relay.var("var_7038", dtype = "int8", shape = ())#candidate|7038|()|var|int8
var_7039 = relay.var("var_7039", dtype = "int8", shape = (10, 12, 13))#candidate|7039|(10, 12, 13)|var|int8
bop_7040 = relay.bitwise_and(var_7038.astype('int8'), var_7039.astype('int8')) # shape=(10, 12, 13)
func_1597_call = mod.get_global_var('func_1597')
func_1598_call = mutated_mod.get_global_var('func_1598')
call_7046 = func_1597_call()
call_7047 = func_1597_call()
bop_7051 = relay.subtract(call_7046.astype('int32'), var_7038.astype('int32')) # shape=(1, 6, 3)
bop_7054 = relay.subtract(call_7047.astype('int32'), var_7038.astype('int32')) # shape=(1, 6, 3)
output = relay.Tuple([bop_7040,bop_7051,])
output2 = relay.Tuple([bop_7040,bop_7054,])
func_7058 = relay.Function([var_7038,var_7039,], output)
mod['func_7058'] = func_7058
mod = relay.transform.InferType()(mod)
mutated_mod['func_7058'] = func_7058
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7058_call = mutated_mod.get_global_var('func_7058')
var_7060 = relay.var("var_7060", dtype = "int8", shape = ())#candidate|7060|()|var|int8
var_7061 = relay.var("var_7061", dtype = "int8", shape = (10, 12, 13))#candidate|7061|(10, 12, 13)|var|int8
call_7059 = func_7058_call(var_7060,var_7061,)
output = call_7059
func_7062 = relay.Function([var_7060,var_7061,], output)
mutated_mod['func_7062'] = func_7062
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1575_call = mod.get_global_var('func_1575')
func_1577_call = mutated_mod.get_global_var('func_1577')
call_7067 = func_1575_call()
call_7068 = func_1575_call()
output = call_7067
output2 = call_7068
func_7080 = relay.Function([], output)
mod['func_7080'] = func_7080
mod = relay.transform.InferType()(mod)
mutated_mod['func_7080'] = func_7080
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7080_call = mutated_mod.get_global_var('func_7080')
call_7081 = func_7080_call()
output = call_7081
func_7082 = relay.Function([], output)
mutated_mod['func_7082'] = func_7082
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2833_call = mod.get_global_var('func_2833')
func_2835_call = mutated_mod.get_global_var('func_2835')
call_7089 = func_2833_call()
call_7090 = func_2833_call()
output = call_7089
output2 = call_7090
func_7096 = relay.Function([], output)
mod['func_7096'] = func_7096
mod = relay.transform.InferType()(mod)
output = func_7096()
func_7097 = relay.Function([], output)
mutated_mod['func_7097'] = func_7097
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1626_call = mod.get_global_var('func_1626')
func_1627_call = mutated_mod.get_global_var('func_1627')
call_7118 = relay.TupleGetItem(func_1626_call(), 3)
call_7119 = relay.TupleGetItem(func_1627_call(), 3)
func_5422_call = mod.get_global_var('func_5422')
func_5424_call = mutated_mod.get_global_var('func_5424')
const_7128 = relay.const([8.089926,3.669076,5.383113,6.616072,-2.207555,-1.917606,8.259017,-4.422787,-4.279361,-0.061271,1.710698,6.475091,-7.183956,-4.893064,4.111080,-4.641982,7.778633,5.023642,2.911168,-3.847121,8.206000,9.146557,2.365416,8.602261,2.695523,-5.853407,-2.093528,-6.210324,0.055885,-3.101497,7.312112,2.569568,3.932042,-3.067861,3.146636,-1.793208,5.182605,-7.610326,0.049245,2.809872,1.654565,1.183451,7.164599,-0.303759,1.493391,0.911709,7.042638,9.902789,1.299252,-2.147091,3.383273,7.920634,-0.286640,3.987599,-5.339544,8.154440,-6.012135,5.389022,-4.049125,-7.974983,-9.729833,4.453718,-1.482844,-8.483096,-6.322454,3.549576,-1.366230,-4.814456,-1.440779,-2.386311,-2.106872,-8.824515,0.083417,-4.736132,1.152548,7.039329,-7.222105,-4.087965,0.205489,0.908132,9.527987,4.761051,3.496372,-1.780565,3.497788,-2.940659,-3.051746,3.841858,-8.116611,-8.867093,-2.300653,-7.006358,-7.724687,-9.254411,9.972185,8.403974,-1.318436,-0.635358,-9.209879,3.046649,-9.309431,-9.641523,-8.207151,-3.893862,3.988115,-3.813421,-3.680159,2.649060,4.927284,-6.037605,1.371276,4.145620,7.729249,3.760671,9.463645,4.887165,2.935674,-6.233979,7.957046,-9.992221,6.498774,3.209762,3.451574,-3.562592,-4.654373,-2.014425,-8.865478,0.266730,9.173614,-6.790195,3.610380,-5.663182,6.797552,-9.619533,3.891674,0.590150,7.440188,-0.212626,6.023787,-7.886730,-0.520278,8.438503,-8.181230,-8.048881,-9.616252,-4.463717,-8.592372,-6.979700,-7.216949,0.702336,2.347973,-4.722511,9.966104,-0.069577], dtype = "float64")#candidate|7128|(154,)|const|float64
call_7127 = relay.TupleGetItem(func_5422_call(relay.reshape(const_7128.astype('float64'), [14, 11, 1])), 0)
call_7129 = relay.TupleGetItem(func_5424_call(relay.reshape(const_7128.astype('float64'), [14, 11, 1])), 0)
func_3358_call = mod.get_global_var('func_3358')
func_3360_call = mutated_mod.get_global_var('func_3360')
call_7154 = func_3358_call()
call_7155 = func_3358_call()
uop_7160 = relay.asin(call_7127.astype('float64')) # shape=(14, 11, 1)
uop_7162 = relay.asin(call_7129.astype('float64')) # shape=(14, 11, 1)
bop_7163 = relay.mod(uop_7160.astype('float32'), relay.reshape(call_7127.astype('float32'), relay.shape_of(uop_7160))) # shape=(14, 11, 1)
bop_7166 = relay.mod(uop_7162.astype('float32'), relay.reshape(call_7129.astype('float32'), relay.shape_of(uop_7162))) # shape=(14, 11, 1)
output = relay.Tuple([call_7118,const_7128,call_7154,bop_7163,])
output2 = relay.Tuple([call_7119,const_7128,call_7155,bop_7166,])
func_7179 = relay.Function([], output)
mod['func_7179'] = func_7179
mod = relay.transform.InferType()(mod)
output = func_7179()
func_7180 = relay.Function([], output)
mutated_mod['func_7180'] = func_7180
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7006_call = mod.get_global_var('func_7006')
func_7008_call = mutated_mod.get_global_var('func_7008')
call_7196 = func_7006_call()
call_7197 = func_7006_call()
output = call_7196
output2 = call_7197
func_7212 = relay.Function([], output)
mod['func_7212'] = func_7212
mod = relay.transform.InferType()(mod)
mutated_mod['func_7212'] = func_7212
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7212_call = mutated_mod.get_global_var('func_7212')
call_7213 = func_7212_call()
output = call_7213
func_7214 = relay.Function([], output)
mutated_mod['func_7214'] = func_7214
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1170_call = mod.get_global_var('func_1170')
func_1171_call = mutated_mod.get_global_var('func_1171')
call_7215 = relay.TupleGetItem(func_1170_call(), 0)
call_7216 = relay.TupleGetItem(func_1171_call(), 0)
output = call_7215
output2 = call_7216
func_7223 = relay.Function([], output)
mod['func_7223'] = func_7223
mod = relay.transform.InferType()(mod)
mutated_mod['func_7223'] = func_7223
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7223_call = mutated_mod.get_global_var('func_7223')
call_7224 = func_7223_call()
output = call_7224
func_7225 = relay.Function([], output)
mutated_mod['func_7225'] = func_7225
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5785_call = mod.get_global_var('func_5785')
func_5787_call = mutated_mod.get_global_var('func_5787')
call_7300 = relay.TupleGetItem(func_5785_call(), 1)
call_7301 = relay.TupleGetItem(func_5787_call(), 1)
output = call_7300
output2 = call_7301
func_7307 = relay.Function([], output)
mod['func_7307'] = func_7307
mod = relay.transform.InferType()(mod)
mutated_mod['func_7307'] = func_7307
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7307_call = mutated_mod.get_global_var('func_7307')
call_7308 = func_7307_call()
output = call_7308
func_7309 = relay.Function([], output)
mutated_mod['func_7309'] = func_7309
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6086_call = mod.get_global_var('func_6086')
func_6088_call = mutated_mod.get_global_var('func_6088')
call_7349 = relay.TupleGetItem(func_6086_call(), 0)
call_7350 = relay.TupleGetItem(func_6088_call(), 0)
func_6603_call = mod.get_global_var('func_6603')
func_6605_call = mutated_mod.get_global_var('func_6605')
call_7351 = relay.TupleGetItem(func_6603_call(relay.reshape(call_7349.astype('bool'), [1, 1890])), 4)
call_7352 = relay.TupleGetItem(func_6605_call(relay.reshape(call_7349.astype('bool'), [1, 1890])), 4)
output = relay.Tuple([call_7349,call_7351,])
output2 = relay.Tuple([call_7350,call_7352,])
func_7356 = relay.Function([], output)
mod['func_7356'] = func_7356
mod = relay.transform.InferType()(mod)
mutated_mod['func_7356'] = func_7356
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7356_call = mutated_mod.get_global_var('func_7356')
call_7357 = func_7356_call()
output = call_7357
func_7358 = relay.Function([], output)
mutated_mod['func_7358'] = func_7358
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2454_call = mod.get_global_var('func_2454')
func_2455_call = mutated_mod.get_global_var('func_2455')
call_7362 = func_2454_call()
call_7363 = func_2454_call()
func_5442_call = mod.get_global_var('func_5442')
func_5444_call = mutated_mod.get_global_var('func_5444')
call_7375 = relay.TupleGetItem(func_5442_call(), 0)
call_7376 = relay.TupleGetItem(func_5444_call(), 0)
output = relay.Tuple([call_7362,call_7375,])
output2 = relay.Tuple([call_7363,call_7376,])
func_7399 = relay.Function([], output)
mod['func_7399'] = func_7399
mod = relay.transform.InferType()(mod)
mutated_mod['func_7399'] = func_7399
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7399_call = mutated_mod.get_global_var('func_7399')
call_7400 = func_7399_call()
output = call_7400
func_7401 = relay.Function([], output)
mutated_mod['func_7401'] = func_7401
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2454_call = mod.get_global_var('func_2454')
func_2455_call = mutated_mod.get_global_var('func_2455')
call_7443 = func_2454_call()
call_7444 = func_2454_call()
var_7448 = relay.var("var_7448", dtype = "bool", shape = (14, 9, 15))#candidate|7448|(14, 9, 15)|var|bool
bop_7449 = relay.bitwise_or(call_7443.astype('int64'), relay.reshape(var_7448.astype('int64'), relay.shape_of(call_7443))) # shape=(14, 9, 15)
bop_7452 = relay.bitwise_or(call_7444.astype('int64'), relay.reshape(var_7448.astype('int64'), relay.shape_of(call_7444))) # shape=(14, 9, 15)
func_2552_call = mod.get_global_var('func_2552')
func_2554_call = mutated_mod.get_global_var('func_2554')
call_7455 = func_2552_call()
call_7456 = func_2552_call()
output = relay.Tuple([bop_7449,call_7455,])
output2 = relay.Tuple([bop_7452,call_7456,])
func_7466 = relay.Function([var_7448,], output)
mod['func_7466'] = func_7466
mod = relay.transform.InferType()(mod)
var_7467 = relay.var("var_7467", dtype = "bool", shape = (14, 9, 15))#candidate|7467|(14, 9, 15)|var|bool
output = func_7466(var_7467)
func_7468 = relay.Function([var_7467], output)
mutated_mod['func_7468'] = func_7468
mutated_mod = relay.transform.InferType()(mutated_mod)
var_7486 = relay.var("var_7486", dtype = "float64", shape = ())#candidate|7486|()|var|float64
var_7487 = relay.var("var_7487", dtype = "float64", shape = (2, 1, 1))#candidate|7487|(2, 1, 1)|var|float64
bop_7488 = relay.greater_equal(var_7486.astype('bool'), var_7487.astype('bool')) # shape=(2, 1, 1)
output = relay.Tuple([bop_7488,])
output2 = relay.Tuple([bop_7488,])
func_7494 = relay.Function([var_7486,var_7487,], output)
mod['func_7494'] = func_7494
mod = relay.transform.InferType()(mod)
mutated_mod['func_7494'] = func_7494
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7494_call = mutated_mod.get_global_var('func_7494')
var_7496 = relay.var("var_7496", dtype = "float64", shape = ())#candidate|7496|()|var|float64
var_7497 = relay.var("var_7497", dtype = "float64", shape = (2, 1, 1))#candidate|7497|(2, 1, 1)|var|float64
call_7495 = func_7494_call(var_7496,var_7497,)
output = call_7495
func_7498 = relay.Function([var_7496,var_7497,], output)
mutated_mod['func_7498'] = func_7498
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2552_call = mod.get_global_var('func_2552')
func_2554_call = mutated_mod.get_global_var('func_2554')
call_7515 = func_2552_call()
call_7516 = func_2552_call()
output = relay.Tuple([call_7515,])
output2 = relay.Tuple([call_7516,])
func_7555 = relay.Function([], output)
mod['func_7555'] = func_7555
mod = relay.transform.InferType()(mod)
output = func_7555()
func_7556 = relay.Function([], output)
mutated_mod['func_7556'] = func_7556
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5829_call = mod.get_global_var('func_5829')
func_5831_call = mutated_mod.get_global_var('func_5831')
call_7596 = relay.TupleGetItem(func_5829_call(), 0)
call_7597 = relay.TupleGetItem(func_5831_call(), 0)
func_1517_call = mod.get_global_var('func_1517')
func_1519_call = mutated_mod.get_global_var('func_1519')
var_7599 = relay.var("var_7599", dtype = "float64", shape = (156,))#candidate|7599|(156,)|var|float64
call_7598 = relay.TupleGetItem(func_1517_call(relay.reshape(var_7599.astype('float64'), [39, 4])), 1)
call_7600 = relay.TupleGetItem(func_1519_call(relay.reshape(var_7599.astype('float64'), [39, 4])), 1)
func_1251_call = mod.get_global_var('func_1251')
func_1253_call = mutated_mod.get_global_var('func_1253')
call_7612 = relay.TupleGetItem(func_1251_call(), 0)
call_7613 = relay.TupleGetItem(func_1253_call(), 0)
output = relay.Tuple([call_7596,call_7598,var_7599,call_7612,])
output2 = relay.Tuple([call_7597,call_7600,var_7599,call_7613,])
func_7618 = relay.Function([var_7599,], output)
mod['func_7618'] = func_7618
mod = relay.transform.InferType()(mod)
var_7619 = relay.var("var_7619", dtype = "float64", shape = (156,))#candidate|7619|(156,)|var|float64
output = func_7618(var_7619)
func_7620 = relay.Function([var_7619], output)
mutated_mod['func_7620'] = func_7620
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1170_call = mod.get_global_var('func_1170')
func_1171_call = mutated_mod.get_global_var('func_1171')
call_7649 = relay.TupleGetItem(func_1170_call(), 0)
call_7650 = relay.TupleGetItem(func_1171_call(), 0)
output = call_7649
output2 = call_7650
func_7688 = relay.Function([], output)
mod['func_7688'] = func_7688
mod = relay.transform.InferType()(mod)
mutated_mod['func_7688'] = func_7688
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7688_call = mutated_mod.get_global_var('func_7688')
call_7689 = func_7688_call()
output = call_7689
func_7690 = relay.Function([], output)
mutated_mod['func_7690'] = func_7690
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2552_call = mod.get_global_var('func_2552')
func_2554_call = mutated_mod.get_global_var('func_2554')
call_7731 = func_2552_call()
call_7732 = func_2552_call()
func_6024_call = mod.get_global_var('func_6024')
func_6027_call = mutated_mod.get_global_var('func_6027')
const_7743 = relay.const([[-6.729892,3.996530,-6.073197,3.826315,9.446642,8.405424,1.690880,-7.292397,4.545968,-5.961413,-2.495709,4.330911,-2.946070,0.382153,3.291536,1.568303,-0.076545,2.488923,-9.482026,9.127384,-2.348622,9.260843,-7.034008,1.754666,-8.943260,8.068408,-6.221919,4.036517,-1.892942,0.809471,4.218538,7.120916,-1.423578,-0.440152,5.101242,-7.432549,-5.884772,9.428176,-0.433496,-0.162172,-8.828809,2.699410,9.695834,0.449315,0.181324,4.500598,8.185963,-0.031103,3.075665,-2.948907,-3.186544,3.125449,-1.278381,4.129760,3.416850,-0.800114,-9.590802,8.647686,-6.433058,0.468082,8.000785,-9.608637,6.197739,-3.683651,7.393803,4.727946,-9.680636,-0.149279,6.205375,7.758264,-9.926248,-1.473440,2.431944,-1.282689,-9.811386,0.364623,-4.775818,5.532991,-1.793142,0.653636,-8.538345,2.304698,2.611566,-3.625028,-5.141780,7.758384,2.293833,4.758816,9.286718,-8.148426]], dtype = "float64")#candidate|7743|(1, 90)|const|float64
call_7742 = relay.TupleGetItem(func_6024_call(relay.reshape(const_7743.astype('float64'), [90,])), 2)
call_7744 = relay.TupleGetItem(func_6027_call(relay.reshape(const_7743.astype('float64'), [90,])), 2)
output = relay.Tuple([call_7731,call_7742,const_7743,])
output2 = relay.Tuple([call_7732,call_7744,const_7743,])
func_7747 = relay.Function([], output)
mod['func_7747'] = func_7747
mod = relay.transform.InferType()(mod)
mutated_mod['func_7747'] = func_7747
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7747_call = mutated_mod.get_global_var('func_7747')
call_7748 = func_7747_call()
output = call_7748
func_7749 = relay.Function([], output)
mutated_mod['func_7749'] = func_7749
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1389_call = mod.get_global_var('func_1389')
func_1390_call = mutated_mod.get_global_var('func_1390')
call_7752 = relay.TupleGetItem(func_1389_call(), 0)
call_7753 = relay.TupleGetItem(func_1390_call(), 0)
output = call_7752
output2 = call_7753
func_7754 = relay.Function([], output)
mod['func_7754'] = func_7754
mod = relay.transform.InferType()(mod)
output = func_7754()
func_7755 = relay.Function([], output)
mutated_mod['func_7755'] = func_7755
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3226_call = mod.get_global_var('func_3226')
func_3227_call = mutated_mod.get_global_var('func_3227')
call_7855 = relay.TupleGetItem(func_3226_call(), 1)
call_7856 = relay.TupleGetItem(func_3227_call(), 1)
const_7865 = relay.const([[[False,True,True,False,False],[True,True,False,False,True],[False,False,False,True,False],[True,False,False,False,True],[True,True,False,True,True],[False,True,True,False,False]],[[True,False,True,True,False],[True,False,False,False,False],[True,False,False,True,True],[False,True,False,True,True],[True,False,False,True,True],[False,True,True,True,True]],[[True,True,True,True,False],[False,False,False,False,False],[False,True,False,True,False],[False,True,True,False,False],[True,True,True,True,True],[False,True,False,True,True]]], dtype = "bool")#candidate|7865|(3, 6, 5)|const|bool
bop_7866 = relay.left_shift(call_7855.astype('int16'), relay.reshape(const_7865.astype('int16'), relay.shape_of(call_7855))) # shape=(3, 6, 5)
bop_7869 = relay.left_shift(call_7856.astype('int16'), relay.reshape(const_7865.astype('int16'), relay.shape_of(call_7856))) # shape=(3, 6, 5)
func_6754_call = mod.get_global_var('func_6754')
func_6756_call = mutated_mod.get_global_var('func_6756')
call_7871 = relay.TupleGetItem(func_6754_call(), 6)
call_7872 = relay.TupleGetItem(func_6756_call(), 6)
func_1076_call = mod.get_global_var('func_1076')
func_1079_call = mutated_mod.get_global_var('func_1079')
var_7878 = relay.var("var_7878", dtype = "float64", shape = (360,))#candidate|7878|(360,)|var|float64
const_7879 = relay.const(-8, dtype = "int8")#candidate|7879|()|const|int8
call_7877 = relay.TupleGetItem(func_1076_call(relay.reshape(var_7878.astype('float64'), [180, 2]), relay.reshape(const_7879.astype('int8'), []), ), 3)
call_7880 = relay.TupleGetItem(func_1079_call(relay.reshape(var_7878.astype('float64'), [180, 2]), relay.reshape(const_7879.astype('int8'), []), ), 3)
func_1170_call = mod.get_global_var('func_1170')
func_1171_call = mutated_mod.get_global_var('func_1171')
call_7893 = relay.TupleGetItem(func_1170_call(), 0)
call_7894 = relay.TupleGetItem(func_1171_call(), 0)
output = relay.Tuple([bop_7866,call_7871,call_7877,var_7878,const_7879,call_7893,])
output2 = relay.Tuple([bop_7869,call_7872,call_7880,var_7878,const_7879,call_7894,])
func_7898 = relay.Function([var_7878,], output)
mod['func_7898'] = func_7898
mod = relay.transform.InferType()(mod)
mutated_mod['func_7898'] = func_7898
mutated_mod = relay.transform.InferType()(mutated_mod)
var_7899 = relay.var("var_7899", dtype = "float64", shape = (360,))#candidate|7899|(360,)|var|float64
func_7898_call = mutated_mod.get_global_var('func_7898')
call_7900 = func_7898_call(var_7899)
output = call_7900
func_7901 = relay.Function([var_7899], output)
mutated_mod['func_7901'] = func_7901
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7080_call = mod.get_global_var('func_7080')
func_7082_call = mutated_mod.get_global_var('func_7082')
call_7956 = func_7080_call()
call_7957 = func_7080_call()
output = call_7956
output2 = call_7957
func_7991 = relay.Function([], output)
mod['func_7991'] = func_7991
mod = relay.transform.InferType()(mod)
mutated_mod['func_7991'] = func_7991
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7991_call = mutated_mod.get_global_var('func_7991')
call_7992 = func_7991_call()
output = call_7992
func_7993 = relay.Function([], output)
mutated_mod['func_7993'] = func_7993
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6846_call = mod.get_global_var('func_6846')
func_6848_call = mutated_mod.get_global_var('func_6848')
call_8017 = relay.TupleGetItem(func_6846_call(), 1)
call_8018 = relay.TupleGetItem(func_6848_call(), 1)
output = call_8017
output2 = call_8018
func_8021 = relay.Function([], output)
mod['func_8021'] = func_8021
mod = relay.transform.InferType()(mod)
mutated_mod['func_8021'] = func_8021
mutated_mod = relay.transform.InferType()(mutated_mod)
func_8021_call = mutated_mod.get_global_var('func_8021')
call_8022 = func_8021_call()
output = call_8022
func_8023 = relay.Function([], output)
mutated_mod['func_8023'] = func_8023
mutated_mod = relay.transform.InferType()(mutated_mod)
var_8068 = relay.var("var_8068", dtype = "float64", shape = (6, 3, 3))#candidate|8068|(6, 3, 3)|var|float64
uop_8069 = relay.sin(var_8068.astype('float64')) # shape=(6, 3, 3)
output = uop_8069
output2 = uop_8069
func_8074 = relay.Function([var_8068,], output)
mod['func_8074'] = func_8074
mod = relay.transform.InferType()(mod)
mutated_mod['func_8074'] = func_8074
mutated_mod = relay.transform.InferType()(mutated_mod)
var_8075 = relay.var("var_8075", dtype = "float64", shape = (6, 3, 3))#candidate|8075|(6, 3, 3)|var|float64
func_8074_call = mutated_mod.get_global_var('func_8074')
call_8076 = func_8074_call(var_8075)
output = call_8076
func_8077 = relay.Function([var_8075], output)
mutated_mod['func_8077'] = func_8077
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6061_call = mod.get_global_var('func_6061')
func_6063_call = mutated_mod.get_global_var('func_6063')
call_8093 = relay.TupleGetItem(func_6061_call(), 3)
call_8094 = relay.TupleGetItem(func_6063_call(), 3)
output = call_8093
output2 = call_8094
func_8097 = relay.Function([], output)
mod['func_8097'] = func_8097
mod = relay.transform.InferType()(mod)
output = func_8097()
func_8098 = relay.Function([], output)
mutated_mod['func_8098'] = func_8098
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3424_call = mod.get_global_var('func_3424')
func_3425_call = mutated_mod.get_global_var('func_3425')
call_8135 = func_3424_call()
call_8136 = func_3424_call()
output = relay.Tuple([call_8135,])
output2 = relay.Tuple([call_8136,])
func_8148 = relay.Function([], output)
mod['func_8148'] = func_8148
mod = relay.transform.InferType()(mod)
output = func_8148()
func_8149 = relay.Function([], output)
mutated_mod['func_8149'] = func_8149
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1575_call = mod.get_global_var('func_1575')
func_1577_call = mutated_mod.get_global_var('func_1577')
call_8187 = func_1575_call()
call_8188 = func_1575_call()
output = call_8187
output2 = call_8188
func_8193 = relay.Function([], output)
mod['func_8193'] = func_8193
mod = relay.transform.InferType()(mod)
output = func_8193()
func_8194 = relay.Function([], output)
mutated_mod['func_8194'] = func_8194
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2311_call = mod.get_global_var('func_2311')
func_2312_call = mutated_mod.get_global_var('func_2312')
call_8293 = func_2311_call()
call_8294 = func_2311_call()
output = relay.Tuple([call_8293,])
output2 = relay.Tuple([call_8294,])
func_8311 = relay.Function([], output)
mod['func_8311'] = func_8311
mod = relay.transform.InferType()(mod)
output = func_8311()
func_8312 = relay.Function([], output)
mutated_mod['func_8312'] = func_8312
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2300_call = mod.get_global_var('func_2300')
func_2301_call = mutated_mod.get_global_var('func_2301')
call_8371 = relay.TupleGetItem(func_2300_call(), 1)
call_8372 = relay.TupleGetItem(func_2301_call(), 1)
output = relay.Tuple([call_8371,])
output2 = relay.Tuple([call_8372,])
func_8379 = relay.Function([], output)
mod['func_8379'] = func_8379
mod = relay.transform.InferType()(mod)
output = func_8379()
func_8380 = relay.Function([], output)
mutated_mod['func_8380'] = func_8380
mutated_mod = relay.transform.InferType()(mutated_mod)
var_8406 = relay.var("var_8406", dtype = "float64", shape = (3, 9, 13))#candidate|8406|(3, 9, 13)|var|float64
const_8407 = relay.const([[[-0.106310,-6.215791,-6.324853,-2.567768,4.163360,-1.795923,3.475120,-0.391882,8.711963,2.247226,-2.344025,3.270688,1.508782],[-1.860904,-9.065422,-6.916306,4.443334,-0.434738,0.187140,-6.683001,4.537188,7.468799,-1.058352,9.802121,-3.361743,7.656643],[-3.751150,-7.077339,-2.590409,8.177470,-8.748379,3.490287,2.310268,7.505971,-6.381191,3.611296,-2.357052,-9.021003,-6.700769],[-5.841298,9.177517,9.412874,-8.204374,4.074804,-9.415364,1.359250,9.049615,6.791139,-5.228780,9.417263,-3.182260,-4.565595],[2.051065,-7.748132,4.652272,-1.192300,-0.612474,-2.452981,6.963406,0.704400,-3.604746,-9.916481,4.883706,-4.308915,-0.605039],[-4.716731,-4.969729,8.268696,-8.768203,7.970831,-1.294612,-3.907855,-2.104563,9.772798,-0.719443,9.540551,8.838165,-7.745403],[6.378412,-8.576837,-6.749534,3.916110,-3.787866,8.003696,-0.522633,-0.425929,-7.019034,5.167034,8.707589,9.661847,-0.506413],[-0.150453,-2.734880,-7.317890,-7.758060,-3.166814,-7.722955,3.131474,-4.588906,3.082204,-2.096200,-6.539485,-0.590399,0.154365],[-2.918676,0.761616,4.802686,7.184989,7.640673,-1.216267,-9.490967,-8.144964,-4.040561,8.460971,-9.940498,9.638529,-4.547552]],[[-6.580701,4.496333,-1.373563,-7.195394,-9.243092,-5.878652,4.529609,-2.504631,3.898349,-8.700402,8.630251,1.131031,-5.048639],[6.022969,-0.478481,9.433166,-9.565645,-4.178307,-1.748614,-1.928968,9.611159,-3.598488,-4.420748,-2.703732,-8.003808,-0.621797],[7.354925,-2.236774,7.113366,8.902584,-5.637808,-5.525679,7.218155,9.710309,4.843544,0.106085,-5.747703,-6.887938,-3.586446],[-3.257208,9.980761,-0.603335,9.014510,-8.265743,-5.787496,-1.555648,-0.336332,9.850790,-7.991000,-3.642512,-9.122942,-2.979884],[8.853609,-7.099417,9.917887,-5.237672,4.647352,0.301143,-2.311856,4.828988,5.300792,7.064142,8.417001,5.773677,1.855614],[7.313908,1.253835,7.810620,-0.540440,-0.312505,-6.503792,8.832561,5.408798,-8.147828,-5.716381,-2.189539,-6.895418,-1.312802],[-2.810961,3.651426,4.611340,-6.503410,-9.098982,9.328059,4.852225,-7.167420,8.797823,5.095915,-5.680618,-3.943275,0.371656],[-4.162969,-9.378550,3.561746,-8.345017,-6.389928,-0.989834,3.812733,-6.100012,1.284084,-0.921190,-3.567720,9.088936,7.897378],[4.977799,3.619615,-6.261287,-7.272148,-5.825818,-8.342237,-1.314958,-8.837825,1.289301,4.810364,-6.779810,2.388412,-6.806418]],[[-8.393026,5.888970,7.273104,4.515318,3.107558,-3.209162,-1.902921,-6.342169,-0.340501,-0.291226,8.583553,-6.122475,1.152100],[5.954082,5.952029,-7.319330,-9.847104,9.308586,7.726422,-2.758383,2.584524,-3.469750,6.461988,-2.948063,-8.277351,-5.067482],[-0.375889,-2.591471,6.204356,-1.623518,-9.546767,0.341381,-0.780012,-4.008890,3.416269,-0.706133,-1.435243,0.947693,3.616008],[9.167599,-7.430699,6.126528,-4.482511,-2.952583,-2.254537,-0.922572,-5.455194,0.137761,5.425658,-1.028815,-6.022846,1.266354],[8.405917,-5.028311,-7.528153,-5.233562,8.746842,2.008085,-1.736175,5.887871,-8.913282,2.020257,7.133927,6.420042,-4.654444],[-6.161728,-6.523669,7.902971,-9.809855,3.325685,0.603750,6.154875,5.305906,-9.757218,-1.217374,-0.703110,-0.617145,7.119257],[-6.352489,-5.504366,-7.365290,8.621847,-5.645227,7.755712,-1.393559,0.858153,-6.270892,-6.540107,2.748474,5.420545,2.062559],[-3.667567,6.956141,4.192899,-5.761163,0.797229,-9.608560,4.425817,1.063589,1.491662,0.379554,-0.627980,8.943909,-1.681266],[8.393673,8.655782,1.767169,-3.110549,1.306661,7.514129,3.557974,5.852480,4.683925,-3.658941,5.835346,3.480122,-4.808538]]], dtype = "float64")#candidate|8407|(3, 9, 13)|const|float64
bop_8408 = relay.greater_equal(var_8406.astype('bool'), relay.reshape(const_8407.astype('bool'), relay.shape_of(var_8406))) # shape=(3, 9, 13)
var_8416 = relay.var("var_8416", dtype = "float64", shape = (3, 9, 13))#candidate|8416|(3, 9, 13)|var|float64
bop_8417 = relay.power(const_8407.astype('float64'), relay.reshape(var_8416.astype('float64'), relay.shape_of(const_8407))) # shape=(3, 9, 13)
output = relay.Tuple([bop_8408,bop_8417,])
output2 = relay.Tuple([bop_8408,bop_8417,])
func_8421 = relay.Function([var_8406,var_8416,], output)
mod['func_8421'] = func_8421
mod = relay.transform.InferType()(mod)
mutated_mod['func_8421'] = func_8421
mutated_mod = relay.transform.InferType()(mutated_mod)
func_8421_call = mutated_mod.get_global_var('func_8421')
var_8423 = relay.var("var_8423", dtype = "float64", shape = (3, 9, 13))#candidate|8423|(3, 9, 13)|var|float64
var_8424 = relay.var("var_8424", dtype = "float64", shape = (3, 9, 13))#candidate|8424|(3, 9, 13)|var|float64
call_8422 = func_8421_call(var_8423,var_8424,)
output = call_8422
func_8425 = relay.Function([var_8423,var_8424,], output)
mutated_mod['func_8425'] = func_8425
mutated_mod = relay.transform.InferType()(mutated_mod)
const_8457 = relay.const([[[-2.177979,0.473379,6.111208,9.243435,7.215637,4.670671,2.241155,-1.520716,2.706576,-5.228193,9.763500],[-2.437629,9.078670,0.910905,-4.678529,-8.491966,-1.038094,-9.458042,-2.122948,0.884303,-6.063617,-8.132748],[-2.056511,6.589658,-4.219196,6.747700,-7.942424,3.599336,7.113684,-1.265384,0.330153,-7.476197,2.866434],[9.349492,-8.078471,0.223151,2.842189,0.565984,-9.269107,-9.388323,-3.452279,-6.659232,7.512801,-4.073477],[3.712583,-0.876459,5.084062,-3.702834,3.881069,-7.405956,-7.776581,3.609323,-2.245946,6.766367,0.308272],[8.953705,-0.358223,-5.459604,2.454586,-0.024203,1.200944,-6.850272,2.392310,0.824241,-7.914891,2.351957],[-5.119685,8.336640,5.150703,4.854572,-3.236503,-3.866008,0.832641,-3.301620,5.798364,4.656260,-1.186513],[-5.403338,-8.537874,-3.181133,4.942180,0.550996,-5.556218,-2.915519,8.482207,-3.408325,6.955080,-9.925869],[7.786732,0.233782,5.428183,-4.658038,-4.413610,-7.857711,-8.450783,-1.558300,-9.430270,2.930086,-3.950664],[-2.756617,-4.509936,9.664076,9.863052,-2.294031,-1.326687,1.309975,-8.580878,6.471532,-3.436366,2.066322]],[[9.133867,0.074942,9.849215,-1.516340,-3.088330,7.481244,-8.620410,-5.892390,1.036288,-1.956816,3.256039],[0.024799,5.099840,-9.679317,-6.152479,2.236889,9.510333,2.372574,8.091343,-3.855595,-8.622910,-1.951175],[-2.473178,-8.451513,0.181602,-2.751368,9.334308,-9.425295,-3.184329,-6.843946,-8.454215,-3.592308,-6.611782],[-5.817690,-7.770295,-0.440769,2.959352,7.132926,9.546413,6.767299,-5.609018,9.570667,2.656929,5.751703],[3.854969,6.506377,9.055207,7.371796,9.666618,4.213694,0.008330,9.859173,2.041180,-4.601264,-3.989029],[3.948956,5.475942,-1.074873,8.114942,2.729162,-6.093288,-6.434936,-3.212975,4.163994,-9.939660,1.962657],[-7.113043,-0.603798,9.633065,1.151230,-1.301292,0.816104,1.699529,-2.544038,3.520487,7.624155,-4.902323],[1.677418,-7.523859,1.572811,3.487532,-0.935022,4.593329,1.496146,7.624461,-2.267240,-1.991421,-3.844845],[-3.512354,-5.242815,-8.580652,3.946588,3.367173,2.216640,7.948722,-0.442469,-3.949599,2.206361,1.035712],[-9.305540,5.960947,-6.557808,-3.704301,1.141993,-0.015588,-6.608456,-6.391531,8.214624,-4.666607,6.834040]],[[5.358806,1.061235,-9.486803,8.787326,6.376440,-4.352179,6.651521,-8.705026,7.115363,-5.965260,1.981953],[-8.668569,-4.928214,-6.388664,8.673059,-2.664471,5.819616,-3.252543,-6.038320,-8.467394,9.736313,-4.574602],[5.667195,6.924630,5.302251,-0.904824,-5.018490,-2.511082,2.373383,-2.925109,-5.269013,5.084061,-3.266776],[0.797359,-8.307809,-2.420382,-0.400069,-0.043611,-4.687973,0.557433,3.945170,-0.241244,-0.446007,-0.468325],[4.051921,-3.745508,4.436521,-8.494621,6.077924,2.383668,6.602738,-8.521979,-8.229670,3.586796,-7.776235],[-4.339419,4.543237,2.250223,0.817588,4.608084,-2.705579,-4.067827,0.947544,7.941560,-3.445268,-9.686565],[7.329778,-6.574609,3.645564,-3.785284,-5.462851,6.466124,3.047223,7.259012,-3.912834,-5.973840,6.087477],[0.729841,6.793288,9.212221,8.214167,2.905305,-0.754384,-4.444608,5.657661,8.744854,-9.328264,4.833328],[-6.910444,-3.486766,6.821963,5.643068,-6.336553,-4.036827,-0.397047,2.859182,9.667683,-3.400419,-8.140861],[-6.608606,7.576441,4.337064,-9.585809,2.886468,-7.365151,-2.178302,-7.325295,-5.992442,-3.577977,-6.113990]],[[-2.771829,-3.692228,-1.024307,-4.269731,3.075105,1.370292,-0.858733,-6.553352,2.163063,1.603986,-0.236893],[-4.870833,-2.301941,3.471819,7.792425,9.280229,7.542143,3.914978,-9.316346,1.365962,-6.022748,-5.172932],[5.624917,-3.390296,-1.545996,-5.416189,3.319135,-2.597774,4.896317,-6.826581,1.872263,8.802702,4.664418],[9.447927,-8.076501,4.636330,2.261218,0.342204,5.489013,5.641689,-8.328061,-5.514981,-2.255541,7.923719],[-1.080683,-5.224604,2.450608,-2.289397,8.293920,-1.276523,-0.364742,-2.920503,9.923213,5.083932,4.937949],[-2.218601,-0.846456,6.376972,8.023229,9.821362,-1.838458,-7.037641,9.700690,-9.437049,-6.874572,-2.789026],[5.195565,-5.641382,-7.056091,8.151945,-6.002953,1.613761,-3.242840,-9.514482,9.957174,0.898625,6.864735],[2.931236,-3.669131,2.010636,-0.839482,-0.839565,3.083122,-4.616257,-4.504042,9.456745,-1.228152,3.168488],[-6.224461,-1.797557,6.445852,2.581000,9.634760,6.980496,3.251391,-7.433263,-0.678871,2.823287,5.498039],[-9.670464,1.177018,6.066977,-8.051548,-6.086586,-3.572127,9.674794,-2.909861,-0.649059,2.668515,4.340841]],[[2.409789,5.893454,-0.784518,1.520001,-4.544160,3.841649,9.918644,4.540301,-0.690109,-9.388898,0.011590],[-7.217332,2.111591,9.811663,0.347256,2.978080,6.726291,-2.429970,9.084699,9.267280,7.578993,0.977517],[9.683625,4.420532,-1.468476,-2.404276,3.314572,9.338461,-2.698032,5.317183,6.792640,-3.677442,6.810859],[0.783122,-1.439717,4.597575,2.632917,-9.299195,8.151035,-1.405681,-4.553178,8.393371,-9.885383,-4.548499],[-7.033837,-9.665738,-1.715881,-3.979048,5.907117,-2.934990,-5.355487,-6.627204,-3.763745,2.784839,-6.215194],[2.972727,-9.253426,-0.212302,8.655453,8.508173,-6.710913,7.455606,-4.524329,2.340479,5.817858,1.220954],[6.206770,-9.472392,3.146214,6.143177,9.071077,-0.871561,-4.673470,-8.367201,5.700305,0.037286,8.703080],[-2.104148,-1.947515,-7.584397,4.695906,6.575229,8.184792,-0.942414,8.964253,-6.395661,-0.096323,9.727550],[9.124472,-4.739354,6.569634,-7.730981,-8.850796,7.717264,-6.257992,3.510874,1.502893,-6.124400,-3.104134],[2.403617,8.087002,-0.205322,-3.383260,-9.358648,-3.793518,-3.495572,-1.489957,-1.773838,0.364717,3.214185]],[[4.985364,5.199228,1.381361,6.319094,-4.104316,-8.629965,-7.545647,0.578508,-5.613551,-5.312022,-3.530011],[-9.412542,-4.407920,-9.049009,-1.120551,9.802360,-9.356363,4.540093,4.632467,0.131059,1.861946,7.627403],[-2.794849,2.324967,-3.753001,7.503010,-6.412893,7.406376,9.227386,3.491256,0.986709,7.931344,8.667198],[5.754669,-4.829357,2.238928,-0.061220,0.038205,4.517586,7.059527,4.550894,3.227912,9.583124,-3.434287],[-9.761207,-4.037758,-2.142144,2.613758,-5.546855,-0.638340,6.471618,0.801792,-0.995772,-9.691713,0.497965],[7.365571,3.655081,-6.577812,7.423888,1.766197,-0.477128,1.928582,4.909831,8.378384,-4.777063,-4.430272],[4.642066,1.921748,3.239824,8.842450,-5.115921,2.525334,1.931614,-6.334510,-0.061290,-6.993295,9.557122],[6.280685,-2.565530,0.415218,3.016232,-8.930862,9.258434,-6.893293,-0.174723,6.445808,8.932633,-3.149425],[-2.342470,7.899589,-4.648875,-6.611226,-4.392296,-0.977146,-8.737180,0.081116,-6.194975,-7.761106,3.151763],[-1.988704,-3.077734,-2.822920,-4.079517,8.887035,2.845677,5.109503,-6.047680,-2.005605,2.228740,-1.523912]],[[-1.806420,1.877292,8.013644,-8.034119,9.723580,-9.401014,-5.354946,8.885552,1.578690,4.049379,9.428921],[-5.551989,-2.079127,-7.773263,-0.166979,2.495555,-1.127196,7.682437,-8.452261,6.605203,-3.541189,-3.140660],[-2.928314,8.603198,-7.437763,3.958126,5.726160,0.340644,-3.822079,5.830022,-3.520861,6.960216,-5.477139],[6.186684,-9.525327,-4.568499,-3.143685,8.028840,-2.129096,5.223008,3.667941,-5.623855,-4.199082,1.764079],[-8.870192,7.320182,6.361573,0.194696,0.475285,4.926542,8.546961,-8.577469,-4.389424,0.023230,-8.925772],[8.531009,2.554086,-5.045873,6.451799,-9.465837,1.157707,0.737873,-5.763488,-4.530645,3.405277,0.469454],[5.991667,-3.614053,2.762553,-9.209034,-4.952294,3.590787,5.882851,-1.981401,3.776324,-5.011640,-4.479353],[-5.629195,6.803658,3.628206,-4.740567,0.183381,-0.306161,9.485745,8.977900,-6.750114,3.537442,3.806909],[1.615564,5.842433,-8.324985,0.666649,6.751263,7.968039,-5.931199,6.483808,5.502495,-4.529694,4.586071],[9.020912,6.933983,-8.473801,-6.016467,-8.008441,2.916399,-0.373340,2.696285,1.374824,2.747472,8.617282]]], dtype = "float32")#candidate|8457|(7, 10, 11)|const|float32
uop_8458 = relay.exp(const_8457.astype('float32')) # shape=(7, 10, 11)
uop_8484 = relay.acos(uop_8458.astype('float32')) # shape=(7, 10, 11)
func_3792_call = mod.get_global_var('func_3792')
func_3793_call = mutated_mod.get_global_var('func_3793')
call_8490 = relay.TupleGetItem(func_3792_call(), 0)
call_8491 = relay.TupleGetItem(func_3793_call(), 0)
bop_8504 = relay.right_shift(uop_8484.astype('int32'), relay.reshape(const_8457.astype('int32'), relay.shape_of(uop_8484))) # shape=(7, 10, 11)
output = relay.Tuple([call_8490,bop_8504,])
output2 = relay.Tuple([call_8491,bop_8504,])
func_8507 = relay.Function([], output)
mod['func_8507'] = func_8507
mod = relay.transform.InferType()(mod)
output = func_8507()
func_8508 = relay.Function([], output)
mutated_mod['func_8508'] = func_8508
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7399_call = mod.get_global_var('func_7399')
func_7401_call = mutated_mod.get_global_var('func_7401')
call_8518 = relay.TupleGetItem(func_7399_call(), 0)
call_8519 = relay.TupleGetItem(func_7401_call(), 0)
func_3480_call = mod.get_global_var('func_3480')
func_3484_call = mutated_mod.get_global_var('func_3484')
const_8521 = relay.const(9, dtype = "uint16")#candidate|8521|()|const|uint16
const_8522 = relay.const([-1,6,6,7,-8,-2,-6,-10,7,1,-4,-5,5,-10,-7,5,-9,-4,-6,-2,7,-7,-3,1,4,5,10,4,3,-8,-8,10,4,4,-6,-4,-10,-5,7,4,7,9,1,-3,-7,5,-3,-3,-1,-9,-1,10,-4,-6,-9,4,2,-5,9,7,8,9,9,2,-7,6,6,1,9,10,-10,7,-10,-6,2,-2,9,6,3,7,9,-2,-9,4,2,9,-10,5,3,-6,-9,7,-2,-6,-1,9,-6,4,3,7,-3,9,-3,5,8,-10,2,4,2,-2,-5,-2,1,-8,7,-10,-2,-6,-3,-2,4,1,1,1,7,6,-4,3,-8,10,8,6,8,4,4,-6,8,-6,5,2,-1,-4,-9,-2,1,2,1,7,1,5,-9,-6,10,-8,9,7,-10,-9,-1,8,1,9,-8,-5,10,-6,1,-8,6,-4,-7,7,5,10,4,-7,-8,1,5,-6,-4,-5,-8,5,-8,7,3,5,-9,-3,-3,-2,-7,6,8,6,-8,-8,4,8,-4,7,10,-5,-7,4,7,8,10,5,-7,2,3,-2,5,7,5,-9,6,-4,10,-2,5,-2,-5,4,1,-9,-8,-1,9,4,-4,10,5,-4,1,6,5,2,-7,1,-2,4,9,3,-5,-5,2,-8,7,-3,-7,8,-7,9,-5,-3,1,7,3,10,-8,7,-8,8,7,8,10,-6,-6,-2,7,10,-5,8,8,5,2,-8,9,10,5,1,-3,4,-4,-2,4,-7,-8,6,-4,2,5,8,5,-9,5,-8,7,-2,8,1,6,10,2,2,9,4,5,9,10,-10,9,7,-10,8,5,-10,7,6,8,-7,-3,2,-3,-8,10,-1,-6,7,-7,5,-4,2], dtype = "uint16")#candidate|8522|(336,)|const|uint16
call_8520 = func_3480_call(relay.reshape(const_8521.astype('uint16'), []), relay.reshape(const_8522.astype('uint16'), [6, 4, 14]), )
call_8523 = func_3480_call(relay.reshape(const_8521.astype('uint16'), []), relay.reshape(const_8522.astype('uint16'), [6, 4, 14]), )
output = relay.Tuple([call_8518,call_8520,const_8521,const_8522,])
output2 = relay.Tuple([call_8519,call_8523,const_8521,const_8522,])
func_8525 = relay.Function([], output)
mod['func_8525'] = func_8525
mod = relay.transform.InferType()(mod)
mutated_mod['func_8525'] = func_8525
mutated_mod = relay.transform.InferType()(mutated_mod)
func_8525_call = mutated_mod.get_global_var('func_8525')
call_8526 = func_8525_call()
output = call_8526
func_8527 = relay.Function([], output)
mutated_mod['func_8527'] = func_8527
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6061_call = mod.get_global_var('func_6061')
func_6063_call = mutated_mod.get_global_var('func_6063')
call_8531 = relay.TupleGetItem(func_6061_call(), 1)
call_8532 = relay.TupleGetItem(func_6063_call(), 1)
func_7080_call = mod.get_global_var('func_7080')
func_7082_call = mutated_mod.get_global_var('func_7082')
call_8536 = func_7080_call()
call_8537 = func_7080_call()
func_7212_call = mod.get_global_var('func_7212')
func_7214_call = mutated_mod.get_global_var('func_7214')
call_8556 = func_7212_call()
call_8557 = func_7212_call()
uop_8596 = relay.rsqrt(call_8556.astype('float32')) # shape=(2, 3, 16)
uop_8598 = relay.rsqrt(call_8557.astype('float32')) # shape=(2, 3, 16)
output = relay.Tuple([call_8531,call_8536,uop_8596,])
output2 = relay.Tuple([call_8532,call_8537,uop_8598,])
func_8601 = relay.Function([], output)
mod['func_8601'] = func_8601
mod = relay.transform.InferType()(mod)
mutated_mod['func_8601'] = func_8601
mutated_mod = relay.transform.InferType()(mutated_mod)
func_8601_call = mutated_mod.get_global_var('func_8601')
call_8602 = func_8601_call()
output = call_8602
func_8603 = relay.Function([], output)
mutated_mod['func_8603'] = func_8603
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2833_call = mod.get_global_var('func_2833')
func_2835_call = mutated_mod.get_global_var('func_2835')
call_8648 = func_2833_call()
call_8649 = func_2833_call()
output = relay.Tuple([call_8648,])
output2 = relay.Tuple([call_8649,])
func_8667 = relay.Function([], output)
mod['func_8667'] = func_8667
mod = relay.transform.InferType()(mod)
mutated_mod['func_8667'] = func_8667
mutated_mod = relay.transform.InferType()(mutated_mod)
func_8667_call = mutated_mod.get_global_var('func_8667')
call_8668 = func_8667_call()
output = call_8668
func_8669 = relay.Function([], output)
mutated_mod['func_8669'] = func_8669
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7223_call = mod.get_global_var('func_7223')
func_7225_call = mutated_mod.get_global_var('func_7225')
call_8747 = func_7223_call()
call_8748 = func_7223_call()
output = relay.Tuple([call_8747,])
output2 = relay.Tuple([call_8748,])
func_8749 = relay.Function([], output)
mod['func_8749'] = func_8749
mod = relay.transform.InferType()(mod)
mutated_mod['func_8749'] = func_8749
mutated_mod = relay.transform.InferType()(mutated_mod)
func_8749_call = mutated_mod.get_global_var('func_8749')
call_8750 = func_8749_call()
output = call_8750
func_8751 = relay.Function([], output)
mutated_mod['func_8751'] = func_8751
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7006_call = mod.get_global_var('func_7006')
func_7008_call = mutated_mod.get_global_var('func_7008')
call_8764 = func_7006_call()
call_8765 = func_7006_call()
output = relay.Tuple([call_8764,])
output2 = relay.Tuple([call_8765,])
func_8774 = relay.Function([], output)
mod['func_8774'] = func_8774
mod = relay.transform.InferType()(mod)
output = func_8774()
func_8775 = relay.Function([], output)
mutated_mod['func_8775'] = func_8775
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7754_call = mod.get_global_var('func_7754')
func_7755_call = mutated_mod.get_global_var('func_7755')
call_8798 = func_7754_call()
call_8799 = func_7754_call()
output = relay.Tuple([call_8798,])
output2 = relay.Tuple([call_8799,])
func_8833 = relay.Function([], output)
mod['func_8833'] = func_8833
mod = relay.transform.InferType()(mod)
mutated_mod['func_8833'] = func_8833
mutated_mod = relay.transform.InferType()(mutated_mod)
func_8833_call = mutated_mod.get_global_var('func_8833')
call_8834 = func_8833_call()
output = call_8834
func_8835 = relay.Function([], output)
mutated_mod['func_8835'] = func_8835
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4951_call = mod.get_global_var('func_4951')
func_4953_call = mutated_mod.get_global_var('func_4953')
call_8847 = relay.TupleGetItem(func_4951_call(), 0)
call_8848 = relay.TupleGetItem(func_4953_call(), 0)
output = call_8847
output2 = call_8848
func_8849 = relay.Function([], output)
mod['func_8849'] = func_8849
mod = relay.transform.InferType()(mod)
mutated_mod['func_8849'] = func_8849
mutated_mod = relay.transform.InferType()(mutated_mod)
func_8849_call = mutated_mod.get_global_var('func_8849')
call_8850 = func_8849_call()
output = call_8850
func_8851 = relay.Function([], output)
mutated_mod['func_8851'] = func_8851
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6846_call = mod.get_global_var('func_6846')
func_6848_call = mutated_mod.get_global_var('func_6848')
call_8884 = relay.TupleGetItem(func_6846_call(), 0)
call_8885 = relay.TupleGetItem(func_6848_call(), 0)
var_8907 = relay.var("var_8907", dtype = "float64", shape = (8, 4, 10))#candidate|8907|(8, 4, 10)|var|float64
bop_8908 = relay.logical_xor(call_8884.astype('uint64'), relay.reshape(var_8907.astype('uint64'), relay.shape_of(call_8884))) # shape=(8, 4, 10)
bop_8911 = relay.logical_xor(call_8885.astype('uint64'), relay.reshape(var_8907.astype('uint64'), relay.shape_of(call_8885))) # shape=(8, 4, 10)
func_6143_call = mod.get_global_var('func_6143')
func_6146_call = mutated_mod.get_global_var('func_6146')
var_8922 = relay.var("var_8922", dtype = "int16", shape = (455,))#candidate|8922|(455,)|var|int16
call_8921 = relay.TupleGetItem(func_6143_call(relay.reshape(var_8922.astype('int16'), [455, 1])), 1)
call_8923 = relay.TupleGetItem(func_6146_call(relay.reshape(var_8922.astype('int16'), [455, 1])), 1)
func_8667_call = mod.get_global_var('func_8667')
func_8669_call = mutated_mod.get_global_var('func_8669')
call_8933 = relay.TupleGetItem(func_8667_call(), 0)
call_8934 = relay.TupleGetItem(func_8669_call(), 0)
output = relay.Tuple([bop_8908,call_8921,var_8922,call_8933,])
output2 = relay.Tuple([bop_8911,call_8923,var_8922,call_8934,])
func_8940 = relay.Function([var_8907,var_8922,], output)
mod['func_8940'] = func_8940
mod = relay.transform.InferType()(mod)
mutated_mod['func_8940'] = func_8940
mutated_mod = relay.transform.InferType()(mutated_mod)
func_8940_call = mutated_mod.get_global_var('func_8940')
var_8942 = relay.var("var_8942", dtype = "float64", shape = (8, 4, 10))#candidate|8942|(8, 4, 10)|var|float64
var_8943 = relay.var("var_8943", dtype = "int16", shape = (455,))#candidate|8943|(455,)|var|int16
call_8941 = func_8940_call(var_8942,var_8943,)
output = call_8941
func_8944 = relay.Function([var_8942,var_8943,], output)
mutated_mod['func_8944'] = func_8944
mutated_mod = relay.transform.InferType()(mutated_mod)
func_8148_call = mod.get_global_var('func_8148')
func_8149_call = mutated_mod.get_global_var('func_8149')
call_9075 = relay.TupleGetItem(func_8148_call(), 0)
call_9076 = relay.TupleGetItem(func_8149_call(), 0)
func_5368_call = mod.get_global_var('func_5368')
func_5371_call = mutated_mod.get_global_var('func_5371')
const_9078 = relay.const([3.044793,5.088938,6.557932,-9.554126,1.477317,0.372001,-3.081376,3.237441,-8.397354,-1.228966,1.598037,-1.883091,1.244992,4.898528,-2.688371,-6.659895,-9.444542,0.270687,3.581383,-5.456482,-7.066248,5.383977,8.909591,3.932508,7.344980,1.446266,-6.708864,4.374732,-5.855307,5.967398,-3.760997,-0.514974,1.675325,-8.543081,-6.950181,9.328362,8.034353,8.229926,-6.754876,-9.110035,0.875699,-3.590362,-3.366763,9.263031,2.151478,3.444999,-3.116861,-9.475201,-6.704159,-3.337284,-6.554584,9.529388,-7.184371,-3.405074,7.529370,-5.758533,7.996169,3.676247,-1.156818,-1.923621,9.816650,4.662491,-9.259504,3.300611,4.157731,1.983741,-4.553144,6.231222,6.047908,2.408701,-7.930156,1.561033,-1.722068,3.979852,4.031518,-7.410755,-2.196880,-3.486928,-4.927335,8.532669,8.130639,9.921513,2.042690,-6.828065,-4.143955,-7.803834,9.622899,-5.921921,-8.180880,-7.001699], dtype = "float64")#candidate|9078|(90,)|const|float64
call_9077 = relay.TupleGetItem(func_5368_call(relay.reshape(const_9078.astype('float64'), [90,])), 2)
call_9079 = relay.TupleGetItem(func_5371_call(relay.reshape(const_9078.astype('float64'), [90,])), 2)
output = relay.Tuple([call_9075,call_9077,const_9078,])
output2 = relay.Tuple([call_9076,call_9079,const_9078,])
func_9107 = relay.Function([], output)
mod['func_9107'] = func_9107
mod = relay.transform.InferType()(mod)
mutated_mod['func_9107'] = func_9107
mutated_mod = relay.transform.InferType()(mutated_mod)
func_9107_call = mutated_mod.get_global_var('func_9107')
call_9108 = func_9107_call()
output = call_9108
func_9109 = relay.Function([], output)
mutated_mod['func_9109'] = func_9109
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1792_call = mod.get_global_var('func_1792')
func_1793_call = mutated_mod.get_global_var('func_1793')
call_9136 = relay.TupleGetItem(func_1792_call(), 2)
call_9137 = relay.TupleGetItem(func_1793_call(), 2)
output = call_9136
output2 = call_9137
func_9143 = relay.Function([], output)
mod['func_9143'] = func_9143
mod = relay.transform.InferType()(mod)
output = func_9143()
func_9144 = relay.Function([], output)
mutated_mod['func_9144'] = func_9144
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6171_call = mod.get_global_var('func_6171')
func_6173_call = mutated_mod.get_global_var('func_6173')
call_9171 = relay.TupleGetItem(func_6171_call(), 0)
call_9172 = relay.TupleGetItem(func_6173_call(), 0)
output = relay.Tuple([call_9171,])
output2 = relay.Tuple([call_9172,])
func_9191 = relay.Function([], output)
mod['func_9191'] = func_9191
mod = relay.transform.InferType()(mod)
mutated_mod['func_9191'] = func_9191
mutated_mod = relay.transform.InferType()(mutated_mod)
func_9191_call = mutated_mod.get_global_var('func_9191')
call_9192 = func_9191_call()
output = call_9192
func_9193 = relay.Function([], output)
mutated_mod['func_9193'] = func_9193
mutated_mod = relay.transform.InferType()(mutated_mod)
const_9200 = relay.const([[[7.905156,-3.447222,-4.854397,-1.091060,-6.742017,-8.552872,-6.516186,-2.538620,8.011702,-9.647001,-1.519706,-1.863532,-6.545533,7.518690],[-1.456343,-8.807191,-1.059321,6.003940,7.256100,3.363659,-1.706725,2.912770,-5.585178,2.378527,9.274271,2.914096,-7.025546,1.354784],[6.135615,9.405018,-7.246616,0.829739,-4.926782,9.427628,-9.030196,4.734688,-4.878176,3.371448,-1.615777,-6.089419,6.321440,8.846440],[7.448092,-3.233226,-3.144057,-4.072992,-7.537930,6.146088,4.069360,-3.632366,0.781279,-6.438355,-8.044072,-7.882113,-5.317606,-0.575754],[-2.435532,7.996828,5.567317,-1.898243,2.991271,-6.412545,-3.346528,-5.445632,-4.977816,-3.751234,-7.161811,2.126384,-6.645857,-3.506318],[-0.440809,-0.115705,-6.779228,4.210865,-6.046553,5.154882,-0.422129,4.652371,0.831095,-4.592861,-7.304201,8.179909,2.313534,1.647525],[1.572847,-9.737730,1.126547,-3.559926,-6.660818,7.115929,-9.648801,-5.722115,-8.244658,3.775026,7.386049,7.425056,-0.450366,7.320418],[6.683918,-3.157402,-6.271963,-8.077792,3.751926,5.390573,-5.944075,-3.944442,-0.539683,-6.379625,-8.711715,-7.703876,3.230953,3.078534],[1.506059,-0.374315,-7.412204,6.071993,5.293778,-5.452788,-1.366512,8.269065,-9.315135,5.660190,-9.389808,1.868078,-7.963372,5.246703],[8.826966,4.593812,3.243807,2.972651,-1.650172,-6.806753,-6.181113,4.778142,-0.910528,-9.283954,-4.182032,0.431934,2.600929,-8.871884],[7.040929,7.662129,-7.063064,2.044443,-0.502542,9.702699,2.469951,5.305079,-9.585280,-5.424632,0.359289,5.989514,0.377176,-2.173050]],[[0.632649,-7.169384,-2.452943,8.078179,-0.031916,-8.663492,0.153083,-1.492810,9.671533,1.911437,-4.806030,2.681109,-3.361169,5.824290],[2.747019,-6.636461,-0.009395,8.335823,-8.668732,-4.648260,0.659659,-4.891588,-6.128771,5.134292,-0.804764,-6.586743,1.947046,-4.374826],[-3.854278,2.498518,2.902988,5.528882,-7.252228,8.182062,3.121060,5.708954,-7.491386,-0.713946,-2.865800,8.939640,-5.824814,4.299667],[7.228248,6.965812,-7.731123,0.417470,-5.223733,8.724381,-9.299107,1.150789,-1.933465,-6.742680,-1.551767,-9.983371,0.617197,6.005427],[7.924802,0.426056,-9.763757,-2.412999,5.147617,1.880406,-9.221316,-4.922394,7.604941,3.570178,-9.389564,-0.180181,-6.189041,-6.519257],[-1.384768,1.977470,-2.117701,-4.093683,2.416850,4.652242,2.549428,-3.211138,-6.857101,-0.815966,-7.478382,3.140370,5.012028,-0.332943],[-2.078360,0.140874,-1.388418,-5.378585,9.411749,-6.776425,-9.192428,8.714692,-4.709339,9.908821,-3.553906,-6.482446,4.717526,-2.938619],[4.380664,-0.329275,2.166865,1.694185,-6.498588,-3.910816,-8.810090,-6.621236,1.117624,-5.282817,7.686230,-0.809792,0.105706,7.033149],[-8.026577,-0.162711,-7.611455,-0.152418,-8.532594,1.309983,6.255113,9.324014,-8.148875,-7.360209,6.204331,6.112950,5.126576,7.050356],[-0.493479,0.157745,-7.491528,2.570290,8.089466,-5.250607,7.153235,-8.258651,4.213994,-8.616626,-3.939446,5.769509,-5.812675,-6.893817],[-7.267671,-6.504906,-6.227076,-4.200205,7.001982,8.941317,2.877139,0.008372,-0.108703,0.844844,1.869891,8.862731,1.516509,8.915307]],[[-0.502413,9.765408,4.873021,8.687049,6.705026,-9.538487,0.012047,3.616151,5.647378,7.463098,1.868762,-1.210157,6.683439,-8.707667],[-8.175372,-0.845388,4.660413,-1.300627,2.254533,7.532974,2.954652,-6.261457,5.771077,1.888295,-5.422105,-9.359782,6.674175,-9.956692],[4.510472,1.241360,-5.202956,-0.041772,9.965161,9.864749,-3.770730,-8.365424,-9.534856,2.637269,-0.086266,7.835644,1.336062,-1.769014],[-5.053424,2.416009,9.418270,5.541299,-2.697051,-9.367967,-9.288015,6.175084,-7.461269,-2.314134,-8.966372,-0.645933,-8.618286,9.663448],[-7.973513,2.448013,-5.070517,-7.167931,6.237653,8.879215,7.027474,-7.852537,1.846122,-3.111190,4.999297,5.544407,-7.005060,-2.165415],[7.897610,4.554930,-7.436097,-2.846660,4.031522,-2.542954,-9.420163,5.016607,9.648499,-0.967761,2.892303,-7.131223,0.835610,-6.447030],[-6.864839,0.149404,-8.388776,3.785868,9.431313,6.846099,-0.795110,0.779902,8.659092,-4.987704,-1.735644,-3.549669,6.639055,-2.516205],[-6.849165,1.467489,-7.591553,-0.106525,2.224158,3.143886,0.111478,7.001517,-3.624412,-2.602743,8.706816,8.459195,7.607709,7.720761],[-9.351295,-5.590668,-1.247309,1.542259,-1.048023,6.937122,7.987165,-6.761318,6.968151,-9.224773,-3.665621,-7.669828,7.472616,-0.203615],[9.296342,-5.766372,1.913332,-4.147696,-2.697802,-6.792985,3.986451,-0.881638,-4.330975,0.013444,-6.240604,-2.745935,-6.177767,8.494600],[-1.378705,5.208685,7.176555,0.232986,-6.630962,1.827273,-8.256895,3.979195,1.215793,-8.985883,-6.621018,-2.754386,-7.875036,8.248608]],[[3.069700,-3.915548,-5.258328,1.545633,3.759626,9.093703,-7.322480,-2.775743,-7.410108,-2.128267,7.260492,-0.146609,-3.101427,0.712146],[3.134335,3.678840,0.971995,-1.735901,6.506908,6.030737,-4.185882,-9.060225,9.083944,6.060623,-6.458376,-6.298309,3.454367,7.045422],[5.951965,-7.315545,-4.217218,9.414011,6.788129,3.907807,7.834410,-6.842549,5.166722,-7.882184,9.851254,5.459035,2.313822,-3.952825],[-3.937200,-6.302305,-8.063181,-2.519097,-0.191388,-8.632934,2.531706,0.214035,-7.357915,-0.485459,-5.078966,3.475800,9.891089,-0.326521],[-4.415613,0.035593,-7.292894,-1.316107,-1.090034,7.870692,-1.497509,-5.101796,-3.211795,-6.184443,5.999258,-2.293110,4.886803,-6.806037],[-1.510344,1.429088,3.304239,2.889631,-5.818413,-3.262991,-8.772384,4.048127,2.786006,-4.273568,5.576765,-6.748560,-6.216343,7.422627],[-2.147333,-0.621556,-7.491123,1.534843,-6.684121,5.043277,-7.251186,8.892543,-7.715219,5.576340,-7.432049,0.905746,-9.492425,6.660722],[-0.297679,-4.503616,-1.103728,-5.439368,-1.330785,-4.150557,-3.509702,3.266808,4.814491,-3.106669,-4.567830,3.711144,0.235452,-5.919707],[-2.034014,-0.967279,-6.146351,-9.002422,3.765912,7.410891,-9.905479,-0.596723,-7.884339,-1.277340,-1.610026,6.490516,-9.055036,-9.936465],[9.590913,-2.171330,-7.260432,-0.835988,9.162621,1.548518,9.099376,8.206954,-6.361352,9.858075,3.030206,-3.868641,-4.000075,-9.462838],[-1.309991,-2.027995,-3.526469,8.877714,-8.721421,1.476253,-8.577685,-8.385513,-3.003845,-9.028692,-3.308440,8.475130,5.636073,9.123695]],[[7.920675,-2.905591,-0.766591,3.821387,6.371633,8.435735,-8.350901,-6.560146,0.582923,1.173072,-7.806814,-0.610630,6.404720,-5.275235],[3.393385,-7.026110,-2.911032,-2.227275,2.962162,9.858306,9.009036,-5.076753,6.229776,-5.853475,-2.910024,-8.351351,7.433661,0.217072],[-9.867585,2.502075,6.291879,-9.748250,1.282288,6.781755,-5.711399,2.240826,4.686152,-9.552038,-4.287780,-4.001918,-8.676458,9.423023],[1.538335,-8.888257,6.919748,-1.455925,4.613204,-0.509444,9.822412,2.883229,-9.220437,8.243534,9.229415,-6.743875,7.583847,-3.140203],[-6.448865,1.824401,-1.698457,1.447580,-7.740922,-2.132339,8.179701,-2.717295,-8.261772,-3.783722,-3.982421,8.489185,1.777246,-2.257588],[-5.045107,-3.145581,-1.947743,-1.696602,7.581837,-6.979954,7.679499,5.462791,0.441982,-0.021593,-9.662886,-8.559363,-5.609375,-6.437744],[-1.533341,-0.220463,7.820137,9.855954,4.634459,-3.064807,0.062013,-9.322705,3.927881,8.813791,5.911049,6.704885,1.119981,-7.110473],[8.387595,4.433778,7.044028,-7.794394,3.174121,0.773641,4.185896,3.416689,-5.115439,-5.738388,-8.691111,2.994336,6.055058,3.692694],[-6.173110,-0.894355,-7.609348,2.029636,-7.516601,-2.672835,1.470076,-8.764554,3.373362,-7.539623,1.763070,3.356999,-2.846945,1.933701],[8.670307,-3.751751,-4.426497,1.499526,4.854090,5.608497,-1.044004,6.922373,4.850887,0.352980,5.403735,-4.406701,-4.887157,-4.323524],[-5.541804,-9.621434,-1.703253,-5.523334,5.558735,6.094960,-6.246409,-0.237028,-2.219413,9.006701,2.129204,-0.357743,-4.224759,6.510134]]], dtype = "float64")#candidate|9200|(5, 11, 14)|const|float64
uop_9201 = relay.asin(const_9200.astype('float64')) # shape=(5, 11, 14)
func_2300_call = mod.get_global_var('func_2300')
func_2301_call = mutated_mod.get_global_var('func_2301')
call_9210 = relay.TupleGetItem(func_2300_call(), 1)
call_9211 = relay.TupleGetItem(func_2301_call(), 1)
uop_9213 = relay.log10(uop_9201.astype('float32')) # shape=(5, 11, 14)
uop_9221 = relay.acosh(uop_9213.astype('float32')) # shape=(5, 11, 14)
output = relay.Tuple([call_9210,uop_9221,])
output2 = relay.Tuple([call_9211,uop_9221,])
func_9225 = relay.Function([], output)
mod['func_9225'] = func_9225
mod = relay.transform.InferType()(mod)
output = func_9225()
func_9226 = relay.Function([], output)
mutated_mod['func_9226'] = func_9226
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5746_call = mod.get_global_var('func_5746')
func_5747_call = mutated_mod.get_global_var('func_5747')
call_9425 = relay.TupleGetItem(func_5746_call(), 0)
call_9426 = relay.TupleGetItem(func_5747_call(), 0)
output = call_9425
output2 = call_9426
func_9438 = relay.Function([], output)
mod['func_9438'] = func_9438
mod = relay.transform.InferType()(mod)
output = func_9438()
func_9439 = relay.Function([], output)
mutated_mod['func_9439'] = func_9439
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1170_call = mod.get_global_var('func_1170')
func_1171_call = mutated_mod.get_global_var('func_1171')
call_9442 = relay.TupleGetItem(func_1170_call(), 0)
call_9443 = relay.TupleGetItem(func_1171_call(), 0)
output = relay.Tuple([call_9442,])
output2 = relay.Tuple([call_9443,])
func_9451 = relay.Function([], output)
mod['func_9451'] = func_9451
mod = relay.transform.InferType()(mod)
mutated_mod['func_9451'] = func_9451
mutated_mod = relay.transform.InferType()(mutated_mod)
func_9451_call = mutated_mod.get_global_var('func_9451')
call_9452 = func_9451_call()
output = call_9452
func_9453 = relay.Function([], output)
mutated_mod['func_9453'] = func_9453
mutated_mod = relay.transform.InferType()(mutated_mod)
func_8749_call = mod.get_global_var('func_8749')
func_8751_call = mutated_mod.get_global_var('func_8751')
call_9474 = relay.TupleGetItem(func_8749_call(), 0)
call_9475 = relay.TupleGetItem(func_8751_call(), 0)
output = call_9474
output2 = call_9475
func_9477 = relay.Function([], output)
mod['func_9477'] = func_9477
mod = relay.transform.InferType()(mod)
mutated_mod['func_9477'] = func_9477
mutated_mod = relay.transform.InferType()(mutated_mod)
func_9477_call = mutated_mod.get_global_var('func_9477')
call_9478 = func_9477_call()
output = call_9478
func_9479 = relay.Function([], output)
mutated_mod['func_9479'] = func_9479
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5225_call = mod.get_global_var('func_5225')
func_5227_call = mutated_mod.get_global_var('func_5227')
call_9482 = func_5225_call()
call_9483 = func_5225_call()
output = relay.Tuple([call_9482,])
output2 = relay.Tuple([call_9483,])
func_9489 = relay.Function([], output)
mod['func_9489'] = func_9489
mod = relay.transform.InferType()(mod)
output = func_9489()
func_9490 = relay.Function([], output)
mutated_mod['func_9490'] = func_9490
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2454_call = mod.get_global_var('func_2454')
func_2455_call = mutated_mod.get_global_var('func_2455')
call_9503 = func_2454_call()
call_9504 = func_2454_call()
output = call_9503
output2 = call_9504
func_9540 = relay.Function([], output)
mod['func_9540'] = func_9540
mod = relay.transform.InferType()(mod)
output = func_9540()
func_9541 = relay.Function([], output)
mutated_mod['func_9541'] = func_9541
mutated_mod = relay.transform.InferType()(mutated_mod)
func_8148_call = mod.get_global_var('func_8148')
func_8149_call = mutated_mod.get_global_var('func_8149')
call_9571 = relay.TupleGetItem(func_8148_call(), 0)
call_9572 = relay.TupleGetItem(func_8149_call(), 0)
func_8601_call = mod.get_global_var('func_8601')
func_8603_call = mutated_mod.get_global_var('func_8603')
call_9635 = relay.TupleGetItem(func_8601_call(), 2)
call_9636 = relay.TupleGetItem(func_8603_call(), 2)
func_5746_call = mod.get_global_var('func_5746')
func_5747_call = mutated_mod.get_global_var('func_5747')
call_9682 = relay.TupleGetItem(func_5746_call(), 1)
call_9683 = relay.TupleGetItem(func_5747_call(), 1)
output = relay.Tuple([call_9571,call_9635,call_9682,])
output2 = relay.Tuple([call_9572,call_9636,call_9683,])
func_9709 = relay.Function([], output)
mod['func_9709'] = func_9709
mod = relay.transform.InferType()(mod)
output = func_9709()
func_9710 = relay.Function([], output)
mutated_mod['func_9710'] = func_9710
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5225_call = mod.get_global_var('func_5225')
func_5227_call = mutated_mod.get_global_var('func_5227')
call_9732 = func_5225_call()
call_9733 = func_5225_call()
func_1597_call = mod.get_global_var('func_1597')
func_1598_call = mutated_mod.get_global_var('func_1598')
call_9754 = func_1597_call()
call_9755 = func_1597_call()
func_1792_call = mod.get_global_var('func_1792')
func_1793_call = mutated_mod.get_global_var('func_1793')
call_9775 = relay.TupleGetItem(func_1792_call(), 1)
call_9776 = relay.TupleGetItem(func_1793_call(), 1)
output = relay.Tuple([call_9732,call_9754,call_9775,])
output2 = relay.Tuple([call_9733,call_9755,call_9776,])
func_9782 = relay.Function([], output)
mod['func_9782'] = func_9782
mod = relay.transform.InferType()(mod)
output = func_9782()
func_9783 = relay.Function([], output)
mutated_mod['func_9783'] = func_9783
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1626_call = mod.get_global_var('func_1626')
func_1627_call = mutated_mod.get_global_var('func_1627')
call_9784 = relay.TupleGetItem(func_1626_call(), 3)
call_9785 = relay.TupleGetItem(func_1627_call(), 3)
output = relay.Tuple([call_9784,])
output2 = relay.Tuple([call_9785,])
func_9796 = relay.Function([], output)
mod['func_9796'] = func_9796
mod = relay.transform.InferType()(mod)
output = func_9796()
func_9797 = relay.Function([], output)
mutated_mod['func_9797'] = func_9797
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3579_call = mod.get_global_var('func_3579')
func_3581_call = mutated_mod.get_global_var('func_3581')
call_9840 = relay.TupleGetItem(func_3579_call(), 0)
call_9841 = relay.TupleGetItem(func_3581_call(), 0)
func_1389_call = mod.get_global_var('func_1389')
func_1390_call = mutated_mod.get_global_var('func_1390')
call_9880 = relay.TupleGetItem(func_1389_call(), 0)
call_9881 = relay.TupleGetItem(func_1390_call(), 0)
output = relay.Tuple([call_9840,call_9880,])
output2 = relay.Tuple([call_9841,call_9881,])
func_9883 = relay.Function([], output)
mod['func_9883'] = func_9883
mod = relay.transform.InferType()(mod)
mutated_mod['func_9883'] = func_9883
mutated_mod = relay.transform.InferType()(mutated_mod)
func_9883_call = mutated_mod.get_global_var('func_9883')
call_9884 = func_9883_call()
output = call_9884
func_9885 = relay.Function([], output)
mutated_mod['func_9885'] = func_9885
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2311_call = mod.get_global_var('func_2311')
func_2312_call = mutated_mod.get_global_var('func_2312')
call_9886 = func_2311_call()
call_9887 = func_2311_call()
output = relay.Tuple([call_9886,])
output2 = relay.Tuple([call_9887,])
func_9899 = relay.Function([], output)
mod['func_9899'] = func_9899
mod = relay.transform.InferType()(mod)
output = func_9899()
func_9900 = relay.Function([], output)
mutated_mod['func_9900'] = func_9900
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7096_call = mod.get_global_var('func_7096')
func_7097_call = mutated_mod.get_global_var('func_7097')
call_9908 = func_7096_call()
call_9909 = func_7096_call()
output = relay.Tuple([call_9908,])
output2 = relay.Tuple([call_9909,])
func_9943 = relay.Function([], output)
mod['func_9943'] = func_9943
mod = relay.transform.InferType()(mod)
output = func_9943()
func_9944 = relay.Function([], output)
mutated_mod['func_9944'] = func_9944
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6171_call = mod.get_global_var('func_6171')
func_6173_call = mutated_mod.get_global_var('func_6173')
call_9952 = relay.TupleGetItem(func_6171_call(), 1)
call_9953 = relay.TupleGetItem(func_6173_call(), 1)
func_9477_call = mod.get_global_var('func_9477')
func_9479_call = mutated_mod.get_global_var('func_9479')
call_9959 = func_9477_call()
call_9960 = func_9477_call()
bop_9964 = relay.not_equal(call_9952.astype('bool'), relay.reshape(call_9959.astype('bool'), relay.shape_of(call_9952))) # shape=(2, 3, 16)
bop_9967 = relay.not_equal(call_9953.astype('bool'), relay.reshape(call_9960.astype('bool'), relay.shape_of(call_9953))) # shape=(2, 3, 16)
func_4591_call = mod.get_global_var('func_4591')
func_4593_call = mutated_mod.get_global_var('func_4593')
call_9968 = relay.TupleGetItem(func_4591_call(), 0)
call_9969 = relay.TupleGetItem(func_4593_call(), 0)
func_9796_call = mod.get_global_var('func_9796')
func_9797_call = mutated_mod.get_global_var('func_9797')
call_9987 = relay.TupleGetItem(func_9796_call(), 0)
call_9988 = relay.TupleGetItem(func_9797_call(), 0)
func_3550_call = mod.get_global_var('func_3550')
func_3552_call = mutated_mod.get_global_var('func_3552')
call_10002 = relay.TupleGetItem(func_3550_call(), 0)
call_10003 = relay.TupleGetItem(func_3552_call(), 0)
output = relay.Tuple([bop_9964,call_9968,call_9987,call_10002,])
output2 = relay.Tuple([bop_9967,call_9969,call_9988,call_10003,])
func_10009 = relay.Function([], output)
mod['func_10009'] = func_10009
mod = relay.transform.InferType()(mod)
output = func_10009()
func_10010 = relay.Function([], output)
mutated_mod['func_10010'] = func_10010
mutated_mod = relay.transform.InferType()(mutated_mod)
func_8667_call = mod.get_global_var('func_8667')
func_8669_call = mutated_mod.get_global_var('func_8669')
call_10068 = relay.TupleGetItem(func_8667_call(), 0)
call_10069 = relay.TupleGetItem(func_8669_call(), 0)
func_2501_call = mod.get_global_var('func_2501')
func_2503_call = mutated_mod.get_global_var('func_2503')
const_10078 = relay.const([True,False,True,True,True,False,False,False,False,False,True,True,True,True,True,False,False,True,False,False,True,False,True,False,True,False,True,True,True,True,True,False,True,False,True,False,False,True,True,False,True,False,False,False,True,True,True,True,False,True,True,True,False,True,True,True,True,False,False,False,True,True,False,True,False,True,True,False,True,False,True,False,False,True,True,True,False,False,False,False,True,False,True,True,True,False,True,False,True,True,False,False,True,False,True,True,True,True,True,False,True,False,True,False,True,False,True,True,False,False,True,True,False,False,True,True,True,False,True,False,True,True,False,False,True,False,True,False,True,True,True,False,True,False,False,True,False,False,False,False,False,False,True,False,False,False,True,True,False,False,True,False,True,False,False,False,False,False,False,True,True,True,True,False,True,False,True,True,False,False,True,False,False,True,False,False,True,True,False,False,True,True,False,False,True,False,False,True,False,False,False,True,False,False,False,True,False,True,True,False,True,False,False,True,True,False,False,True,True,False,True,False,True,True,False,True,True,False,False,False,False,True,True,False,True,True,False,True,True,True,True,False,True,True,False,True,True,False,False,False,False,True,False,True,False,False,False,True,False,True,True,False,False,True,True,True,False,True,False,True,False,True,False,True,False,False,False,True,False,False,True,False,True,True,True,True,True,False,True,True,True,False,True,True,True,False,False,False,True,False,True,True,True,True,True,True,True,True,False,True,False,True,True,True,False,True,True,True,True,False,False,False,False,True,True,False,False,True,False,True,True,True,True,False,True,False,True,False,True,True,False,True,False,True,True,False,False,False,True,True,False,True,True,False,False,False,False,False,True,False,False,False,False,True,False,True,True,True,True,False,False,True,False,False,True,True,False,True,True,True,True,True,False,False,True,True,True,False,True,False,False,True,True,False,False,True,True,True,True,True,False,True,False,False,False,True,True,False,True,False,False,False,True,False,False,False,True,True,False,True,False,True,False,True,True,True,False,True,False,True,False,False,True,False,False,True,False,True,True,True,True,True,True,False,False,True,True,True,True,True,False,True,False,True,False,False,False,False,True,False,False,True,True,True,True,True,False,True,True,True,False,False,True,True,True,True,True,False,False,False,True,True,True,False,False,True,False,False,True,True,False,True,False,True,False,True,True,False,True,False,False,True,False,True,True,True,False,False,True,False,False,True,True,True,True,True,False,True,True,True,False,False,True,False,True,True,True,False,False,False,False,False,False,True,True,True,False,True,True,False,True,True,True,True,False,False,False,False,True,False,True,True,False,False,True,True,False,False,False,False,True,False,False,True,True,True,False,False,False,True,False,True,False,True,False,False,True,True,False,False,True,True,True,True,False,False,False,False,False,False,False,True,True,False,False,False,True,False,False,True,True,False,False,True,True,True,True,False,False,True,False,True,True,True,False,True,True,False,True,False,True,True,True,False,True,False,False,False,False,True,True,False,True,True,True,True,False,True,True,False,False,False,True,True,True,True,False,True,False,True,True,True,False,False,True,True,False,True,True,True,False,False,True,False,False,False,True,False,True,False,True,False,False,False,True,False,False,False,True,False,True,False,True,False,False,False,True,True,True,True,False,False,True,True,False,True,True,True,False,True,True,True,True,False,True,False,False,True,False,True,True,False,True,False,False,True,False,True,False,False,False,False,False,False,True,False,True,True,True,True,False,False,False,True,False,False,True,False,True,False,True,True,False,False,True,False,False,False,True,False,False,False,True,False,False,False,False,True,True,True,True,True,True,True,False,False,True,False,False,True,False,False,False,False,False,True,False,False,True,True,True,True,True,False,True,True,False,True,True,False,False,False,True,False,True,False,False,True,False,False,False,False,False,False,False,True,True,False,True,True,True,False,False,True,False,False,False,True,True,True,True,False,True,False,False,True,False,False,False,False,False,False,False,True,False,False,False,True,False,True,False,False,False,True,True,False,True,True,True,False,True,False,False,False,True,False,True,True,False,True,False,True,True,False,False,True,True,False,True,True,True,True,True,True,False,False,False,True,False,True,False,True,False,False,True,True,True,True,False,True,False,False,False,False,True,False,True,False,False,False,True,False,False,True,True,False,True,True,False,True,True,False,False,True,False,False,False,True,True,False,True,True,True,True,True,False,False,True,False,False,True,True,False,True,False,False,False,False,True,False,True,False,False,False,True,False,False,True,False,True,False,True,False,True,False,False,True,False,True,True,True,False,False,True,False,True,True,False,True,True,False,False,True,False,False,True,False,False,False,False,True,False,True,False,True,False,False,False,False,True,True,True,True,False,True,True,True,False,True,False,True,True,False,True,True,True,False,False,True,False,False,True,True,False,True,False,False,True,True,False,False,False,False,True,False,True,True,True,True,False,True,True,False,False,False,True,True,False,True,False,False,False,True,True,False,False,False,False,True,True,False,True,True,False,True,False,True,False,True,True,False,True,False,False,True,False,False,False,False,True,False,False,True,False,False,True,False,False,True,False,True,False,True,False,False,False,False,False,False,False,True,True,True,True,True,False,True,True,False,True,True,False,True,False,False,True,False,True,True,True,True,False,True,False,True,False,True,True,False,True,True,True,False,False,False,False,False,True,True,False,False,False,True,True,True,True,True,True,False,False,False,True,True,False,False,False,False,True,True,False,False,True,True,True,True,True,True,False,False,False,False,False,True,True,True,False,True,False,True,True,True,True,True,False,True,True,False,True,False,True,True,False,False,False,True,False,True,False,False,True,True,False,True,False,False,True,False,True,True,True,False,False,False,True,False,False,False,False,True,False,False,True,True,False,True,False,False,True,True,False,False,False,True,False,False,True,True,False,False,False,True,False,True,True,False,True,True,False,False,True,True,False,False,False,False,True,False,True,False,True,True,True,True,False,True,True,True,False,True,True,False,False,False,True,False,False,True,True,False,True,False,True,True,False,True,True,False,False,False,False,True,False,True,True,False,False,False,False,False,False,True,True,False,True,False,False,True,True,False,False,False,False,True,True,True,True,True,True,True,True,True,False,True,True,True,False,True,False,False,False,False,True,True,False,True,True,True,False,True,True,False,True,True,False,True,False,True,False,True,False,True,True,False,True,False,False,True,True,False,True,True,False,False,False,False,True,False,True,False,True,False,False,False,False,False,True,False,True,True,False,True,True,True,False,False,True,False,True,False,False,False,False,False,False,False,False,False,False,False,False,True,False,False,False,False,True,True,True,False,True,True,False,False,False,False,False,True,False,True,True,False,True,True,False,True,False,False,True,False,False,True,False,True,False,False,True,True,True,False,True,False,True,True,False,True,True,False,False,True,True,False,True,False,True,True,False,True,False,True,False,False,True,False,True,True,False,True,False,True,True,True,False,True,True,False,False,False,True,True,False,False,True,True,True,False,True,True,False,True,False,False,True,True,False,True,False,False,False,False,True,True,False,True,False,True,False,True,True,True,False,True,True,True,True,False,True,False,True,True,True,False,True,False,True,True,True,False,True,True,False,True,True,False,False,True,True,False,False,True,True,False,False,True,True,True,True,True,True,True,False,False,True,False,True,False,True,False,False,True,False,True,False,True,True,False,False,True,True,True,False,False,True,False,True,True,False,True,False,True,False,False,False,True,False,True,True,False,True,False,True,True,True,True,False,False,True,True,True,False,False,True,True,True,False,False,False,False,True,False,True,True,True,True,False,True,False,False,True,False,False,False,True,True,True,False,True,True,True,True,True,True,False,False,False,False,True,True,False,False,True,False,False,False,True,False,False,False,False,True,False,False,False,True,True,True,True,True,False,False,False,False,True,False,False,False,True,True,True,True,False,False,True,False,True,True,False,True,True,True,False,True,True,False,False,True,False,False,False,False,False,False,False,False,False,True,False,True,False,True,True,False,True,False,False,False,True,True,True,False,False,False,True,True,False,False,False,False,False,False,True,False,False,True,False,True,False,False,False,True,True,True,True,True,False,False,True,True,True,True,False,True,True,True,False,True,True,True,False,True,True,True,False,False,False,False,True,True,True,True,False,False,True,True,True,True,True,True,False,False,False,False,True,True,False,False,False,True,True,False,True,False,True,True,False,False,True,True,True,False,True,True,True,False,False,False,True,False,True,True,False,True,False,False,False,False,False,True,True,True,True,False,True,True,True,False,True,True,True,False,True,False,True,False,False,True,True,True,True,False,True,False,False,True,False,False,True,False,True,False,True,True,True,False,False,False,False,True,True,False,True,True,False,False,True,True,True,False,False,True,True,True,True,True,False,True,True,True,True,True,False,False,False,True,False,False,True,True,True,True,True,False,False,True,False,True,False,True,False,True,False,True,False,True,False,True,False,True,False,True,False,False,True,False,True,False,False,True,True,True,False], dtype = "bool")#candidate|10078|(1890,)|const|bool
call_10077 = func_2501_call(relay.reshape(const_10078.astype('bool'), [14, 9, 15]))
call_10079 = func_2501_call(relay.reshape(const_10078.astype('bool'), [14, 9, 15]))
func_4664_call = mod.get_global_var('func_4664')
func_4666_call = mutated_mod.get_global_var('func_4666')
const_10084 = relay.const(10, dtype = "int8")#candidate|10084|()|const|int8
call_10083 = relay.TupleGetItem(func_4664_call(relay.reshape(const_10084.astype('int8'), [])), 0)
call_10085 = relay.TupleGetItem(func_4666_call(relay.reshape(const_10084.astype('int8'), [])), 0)
output = relay.Tuple([call_10068,call_10077,const_10078,call_10083,const_10084,])
output2 = relay.Tuple([call_10069,call_10079,const_10078,call_10085,const_10084,])
func_10095 = relay.Function([], output)
mod['func_10095'] = func_10095
mod = relay.transform.InferType()(mod)
mutated_mod['func_10095'] = func_10095
mutated_mod = relay.transform.InferType()(mutated_mod)
func_10095_call = mutated_mod.get_global_var('func_10095')
call_10096 = func_10095_call()
output = call_10096
func_10097 = relay.Function([], output)
mutated_mod['func_10097'] = func_10097
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3579_call = mod.get_global_var('func_3579')
func_3581_call = mutated_mod.get_global_var('func_3581')
call_10160 = relay.TupleGetItem(func_3579_call(), 0)
call_10161 = relay.TupleGetItem(func_3581_call(), 0)
func_6061_call = mod.get_global_var('func_6061')
func_6063_call = mutated_mod.get_global_var('func_6063')
call_10162 = relay.TupleGetItem(func_6061_call(), 3)
call_10163 = relay.TupleGetItem(func_6063_call(), 3)
output = relay.Tuple([call_10160,call_10162,])
output2 = relay.Tuple([call_10161,call_10163,])
func_10189 = relay.Function([], output)
mod['func_10189'] = func_10189
mod = relay.transform.InferType()(mod)
output = func_10189()
func_10190 = relay.Function([], output)
mutated_mod['func_10190'] = func_10190
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1286_call = mod.get_global_var('func_1286')
func_1288_call = mutated_mod.get_global_var('func_1288')
call_10194 = relay.TupleGetItem(func_1286_call(), 0)
call_10195 = relay.TupleGetItem(func_1288_call(), 0)
output = call_10194
output2 = call_10195
func_10210 = relay.Function([], output)
mod['func_10210'] = func_10210
mod = relay.transform.InferType()(mod)
output = func_10210()
func_10211 = relay.Function([], output)
mutated_mod['func_10211'] = func_10211
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7179_call = mod.get_global_var('func_7179')
func_7180_call = mutated_mod.get_global_var('func_7180')
call_10214 = relay.TupleGetItem(func_7179_call(), 3)
call_10215 = relay.TupleGetItem(func_7180_call(), 3)
output = call_10214
output2 = call_10215
func_10228 = relay.Function([], output)
mod['func_10228'] = func_10228
mod = relay.transform.InferType()(mod)
mutated_mod['func_10228'] = func_10228
mutated_mod = relay.transform.InferType()(mutated_mod)
func_10228_call = mutated_mod.get_global_var('func_10228')
call_10229 = func_10228_call()
output = call_10229
func_10230 = relay.Function([], output)
mutated_mod['func_10230'] = func_10230
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5442_call = mod.get_global_var('func_5442')
func_5444_call = mutated_mod.get_global_var('func_5444')
call_10242 = relay.TupleGetItem(func_5442_call(), 0)
call_10243 = relay.TupleGetItem(func_5444_call(), 0)
output = call_10242
output2 = call_10243
func_10246 = relay.Function([], output)
mod['func_10246'] = func_10246
mod = relay.transform.InferType()(mod)
output = func_10246()
func_10247 = relay.Function([], output)
mutated_mod['func_10247'] = func_10247
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6453_call = mod.get_global_var('func_6453')
func_6454_call = mutated_mod.get_global_var('func_6454')
call_10262 = relay.TupleGetItem(func_6453_call(), 0)
call_10263 = relay.TupleGetItem(func_6454_call(), 0)
func_2552_call = mod.get_global_var('func_2552')
func_2554_call = mutated_mod.get_global_var('func_2554')
call_10268 = func_2552_call()
call_10269 = func_2552_call()
output = relay.Tuple([call_10262,call_10268,])
output2 = relay.Tuple([call_10263,call_10269,])
func_10288 = relay.Function([], output)
mod['func_10288'] = func_10288
mod = relay.transform.InferType()(mod)
mutated_mod['func_10288'] = func_10288
mutated_mod = relay.transform.InferType()(mutated_mod)
func_10288_call = mutated_mod.get_global_var('func_10288')
call_10289 = func_10288_call()
output = call_10289
func_10290 = relay.Function([], output)
mutated_mod['func_10290'] = func_10290
mutated_mod = relay.transform.InferType()(mutated_mod)
const_10343 = relay.const([[[4.130580,-8.356680,0.300933,-9.933974,3.839571,-1.683733,4.971587,-6.126193],[-5.258151,3.082426,-3.611703,-1.225010,7.331664,5.824473,-6.598987,-4.125328],[4.459421,2.607403,6.722953,9.360939,2.283467,-6.575719,-0.049986,-8.919654],[-0.047755,-1.984118,-4.465126,-3.528635,4.579677,9.042397,3.721576,-8.719638],[2.559283,8.819724,0.600196,2.033098,-2.154621,-5.803242,9.834893,3.866602],[-6.434137,-9.560615,4.110877,-7.446238,-5.646142,-9.809922,0.502308,-0.783862]],[[-0.436312,2.266750,3.032324,8.699371,1.273231,-1.780102,-1.859419,-7.631755],[8.964962,7.161008,-6.533327,-1.443900,-1.117925,-5.476555,5.703627,-3.229237],[-1.852134,8.147177,-7.599759,-7.748177,-1.948437,-3.193961,-5.468945,1.322742],[9.708027,-1.808197,-8.413451,-8.698987,7.994896,9.031022,-2.036813,6.311313],[7.937037,-7.121986,0.642713,1.509142,6.714602,-4.218648,1.866863,-3.710942],[3.415833,-4.095165,3.881775,-1.884109,4.581641,0.302780,8.217466,-3.952107]],[[3.415332,-9.812591,9.379685,3.349130,-3.396974,5.059621,1.890467,-8.813452],[-1.753354,9.971821,-3.000354,3.773364,5.657996,8.925305,1.053455,9.733978],[-1.951764,1.033666,-2.710863,-8.962498,-9.703444,-8.947671,9.394516,-5.587783],[5.277718,5.319253,9.915782,0.472044,1.472505,7.335671,-0.910863,-2.224653],[3.023667,2.355102,-7.474000,-9.140637,9.928852,-1.943940,6.826067,-5.313137],[-4.400410,-0.240666,-0.914174,-5.910842,-6.495735,-8.722391,5.072847,2.360482]],[[-2.447737,-2.599631,0.848276,-9.016302,4.562777,8.672080,9.598188,3.947690],[-6.701507,-5.313839,2.887892,-5.217212,-8.990948,-2.795486,1.732274,-8.276415],[-9.792923,-5.308697,8.387407,-1.734683,-5.424326,-2.137638,-0.890817,0.319151],[5.496190,0.394735,1.476440,8.984289,9.938422,7.223521,1.728763,-2.024215],[-5.542196,8.149914,6.740012,-0.371681,-3.505522,-0.245585,-4.494609,9.122890],[3.336821,-8.842028,-5.784351,-1.408502,0.653761,3.290073,-6.883756,4.084544]],[[-7.317028,-9.282443,-1.676072,7.069681,1.420332,8.824872,-2.011775,-9.962462],[-2.560523,-1.851176,-8.088466,-2.372908,-1.520481,-7.448707,6.002269,4.898366],[0.794797,-8.725617,-4.529205,-7.533190,1.489041,2.155154,-1.996694,9.740703],[-2.263498,3.440042,-0.632031,-2.682226,1.141877,8.688249,-2.873578,5.881771],[3.489843,-6.190564,3.564474,5.575572,-3.659017,-0.733250,-8.677281,7.122912],[7.573301,0.195428,-7.180713,-3.269623,2.099127,3.935714,-0.915445,9.536344]],[[-8.892360,0.142880,-4.745590,-3.096008,6.261797,4.393846,-0.077605,-3.415689],[4.071305,5.438912,-0.692508,-6.121832,-6.400712,6.994906,-9.658138,-7.060521],[-6.944858,-9.782892,-9.938266,-1.262559,-3.346250,-1.599656,-0.643222,-7.055665],[-3.228052,-7.617348,-8.274405,-9.580951,-2.402808,8.350553,-4.760271,6.625730],[-9.471474,0.494728,-7.141374,-4.951002,7.283133,0.355697,-9.696856,-8.196065],[1.540673,1.488580,5.953181,-8.942533,4.714171,-6.848942,2.560218,1.591610]],[[6.057819,4.263730,-5.568310,-5.413076,-8.637036,4.681262,-0.512107,1.272300],[-7.473962,9.551712,2.850046,6.356046,1.504188,-3.544071,7.731602,-9.691629],[4.816593,-2.099958,-1.976594,4.729013,-6.542775,1.079132,-8.220019,9.933829],[2.984786,-3.007650,-4.640438,1.527567,9.770364,2.411492,0.269968,-6.597115],[0.265506,-8.911977,7.857406,-3.303436,2.561107,-5.835648,-6.769467,-4.291347],[-1.293866,-2.121187,2.733903,9.763647,-5.388648,5.738652,-0.181870,-5.158223]],[[6.690867,4.353293,-4.513290,-7.667011,7.688740,-2.416140,-3.105103,7.656719],[1.013633,-6.662638,-3.295158,-2.916637,-6.620434,-0.317806,2.049956,-3.688487],[-6.949367,5.593255,6.084208,-1.002106,4.850845,-3.662991,4.040799,-1.418666],[-2.061589,2.798479,-5.676447,2.009166,-4.041620,-6.093351,-8.705835,-4.664194],[-8.926303,8.659667,4.380809,6.440224,-4.512711,8.316978,7.960712,9.100331],[-3.699039,-0.228793,-0.218609,2.564083,-2.472223,-9.579909,-4.327334,4.066033]],[[-6.065546,-2.478542,-2.617110,-8.409171,7.716294,-6.088726,-2.031143,-6.739197],[7.457774,2.903451,-9.996675,-3.668135,-2.760145,3.808707,2.882598,-7.162926],[-8.159836,9.773399,-0.392483,8.264258,0.168952,-1.995950,0.768267,-9.612031],[-4.221773,-9.688270,-2.053461,0.529252,9.958803,5.684661,0.491876,5.800161],[-8.747426,-8.414587,-1.890487,0.226595,0.213584,9.673185,-7.725044,9.542245],[-0.426553,-1.074113,-0.064570,9.435769,-6.014159,-9.481537,-0.342690,8.041879]],[[0.111843,0.464724,-0.269274,2.523099,5.833113,-9.711621,3.845067,-2.496878],[-4.524913,-0.393479,-4.493505,-1.767203,7.138661,-0.620915,-3.746757,-7.955409],[2.448312,-3.529604,-0.309802,8.387152,-8.575997,-0.291548,-1.750762,6.859683],[9.975854,3.078073,-5.574772,-1.144321,5.061369,6.530094,6.461420,6.848864],[-9.201565,-8.065424,3.448537,-1.937693,7.546041,3.995867,9.704387,-2.389771],[6.490172,-1.452508,-6.567965,7.703757,3.607814,0.980431,-3.540572,0.014990]],[[-2.351701,-3.674749,6.442171,-8.496688,8.919811,-9.536052,-9.745832,1.444409],[2.580692,9.800729,-3.154461,3.466129,-8.914761,-2.981246,1.756316,5.074548],[0.614176,6.418842,-6.527751,-3.687537,-4.793422,-9.010998,9.901217,-7.511946],[8.265716,-0.239291,-8.248850,1.072502,0.093972,7.158217,8.510103,-1.399040],[-2.389972,9.606972,3.187342,-3.863318,1.539438,7.023041,-0.684439,4.371031],[8.093621,-5.430061,9.492509,-0.037111,7.097386,8.591392,-0.015521,-2.326656]],[[7.889440,3.312010,8.087690,-2.953065,-9.635440,3.074173,5.353731,-5.102554],[1.722667,-1.951755,-2.406699,5.165380,0.723692,-3.541524,-9.105228,-1.819487],[5.934096,8.334579,-0.634222,2.271261,8.471423,4.198293,0.308100,6.572764],[-5.303645,2.134616,7.465461,6.011016,7.280357,-9.281890,-6.774860,6.932001],[1.733629,-5.977780,2.725258,-2.463589,-7.712865,4.582968,-3.225747,-9.353758],[4.590116,2.633044,-4.749079,7.098090,8.404145,-6.666664,-2.846154,4.029186]],[[-7.306154,3.607515,8.722809,-1.742645,-8.171083,3.151234,-9.285570,6.673128],[7.416875,-8.315692,2.192180,7.478644,-4.859503,-0.031237,2.131349,-6.978427],[0.621977,1.135541,7.923593,3.591624,-1.475070,-7.970792,-3.530209,-0.456436],[4.209690,-3.279208,-8.871664,8.295157,5.736077,8.869482,8.304999,-4.718397],[-7.831874,7.253625,1.340127,5.323693,3.465980,-3.060153,8.885814,6.200169],[-9.774719,-8.365744,9.198968,4.823016,3.033288,2.656249,-7.926105,-3.823793]]], dtype = "float32")#candidate|10343|(13, 6, 8)|const|float32
var_10344 = relay.var("var_10344", dtype = "float32", shape = (13, 6, 8))#candidate|10344|(13, 6, 8)|var|float32
bop_10345 = relay.floor_divide(const_10343.astype('float32'), relay.reshape(var_10344.astype('float32'), relay.shape_of(const_10343))) # shape=(13, 6, 8)
output = bop_10345
output2 = bop_10345
func_10348 = relay.Function([var_10344,], output)
mod['func_10348'] = func_10348
mod = relay.transform.InferType()(mod)
var_10349 = relay.var("var_10349", dtype = "float32", shape = (13, 6, 8))#candidate|10349|(13, 6, 8)|var|float32
output = func_10348(var_10349)
func_10350 = relay.Function([var_10349], output)
mutated_mod['func_10350'] = func_10350
mutated_mod = relay.transform.InferType()(mutated_mod)
var_10386 = relay.var("var_10386", dtype = "float32", shape = (16, 10, 16))#candidate|10386|(16, 10, 16)|var|float32
uop_10387 = relay.tan(var_10386.astype('float32')) # shape=(16, 10, 16)
output = relay.Tuple([uop_10387,])
output2 = relay.Tuple([uop_10387,])
func_10392 = relay.Function([var_10386,], output)
mod['func_10392'] = func_10392
mod = relay.transform.InferType()(mod)
mutated_mod['func_10392'] = func_10392
mutated_mod = relay.transform.InferType()(mutated_mod)
var_10393 = relay.var("var_10393", dtype = "float32", shape = (16, 10, 16))#candidate|10393|(16, 10, 16)|var|float32
func_10392_call = mutated_mod.get_global_var('func_10392')
call_10394 = func_10392_call(var_10393)
output = call_10394
func_10395 = relay.Function([var_10393], output)
mutated_mod['func_10395'] = func_10395
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3818_call = mod.get_global_var('func_3818')
func_3820_call = mutated_mod.get_global_var('func_3820')
call_10417 = func_3818_call()
call_10418 = func_3818_call()
output = call_10417
output2 = call_10418
func_10424 = relay.Function([], output)
mod['func_10424'] = func_10424
mod = relay.transform.InferType()(mod)
output = func_10424()
func_10425 = relay.Function([], output)
mutated_mod['func_10425'] = func_10425
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1877_call = mod.get_global_var('func_1877')
func_1879_call = mutated_mod.get_global_var('func_1879')
call_10456 = func_1877_call()
call_10457 = func_1877_call()
func_7898_call = mod.get_global_var('func_7898')
func_7901_call = mutated_mod.get_global_var('func_7901')
var_10463 = relay.var("var_10463", dtype = "float64", shape = (360,))#candidate|10463|(360,)|var|float64
call_10462 = relay.TupleGetItem(func_7898_call(relay.reshape(var_10463.astype('float64'), [360,])), 4)
call_10464 = relay.TupleGetItem(func_7901_call(relay.reshape(var_10463.astype('float64'), [360,])), 4)
output = relay.Tuple([call_10456,call_10462,var_10463,])
output2 = relay.Tuple([call_10457,call_10464,var_10463,])
func_10472 = relay.Function([var_10463,], output)
mod['func_10472'] = func_10472
mod = relay.transform.InferType()(mod)
var_10473 = relay.var("var_10473", dtype = "float64", shape = (360,))#candidate|10473|(360,)|var|float64
output = func_10472(var_10473)
func_10474 = relay.Function([var_10473], output)
mutated_mod['func_10474'] = func_10474
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4491_call = mod.get_global_var('func_4491')
func_4492_call = mutated_mod.get_global_var('func_4492')
call_10512 = func_4491_call()
call_10513 = func_4491_call()
func_2387_call = mod.get_global_var('func_2387')
func_2389_call = mutated_mod.get_global_var('func_2389')
call_10514 = relay.TupleGetItem(func_2387_call(), 0)
call_10515 = relay.TupleGetItem(func_2389_call(), 0)
output = relay.Tuple([call_10512,call_10514,])
output2 = relay.Tuple([call_10513,call_10515,])
func_10517 = relay.Function([], output)
mod['func_10517'] = func_10517
mod = relay.transform.InferType()(mod)
mutated_mod['func_10517'] = func_10517
mutated_mod = relay.transform.InferType()(mutated_mod)
func_10517_call = mutated_mod.get_global_var('func_10517')
call_10518 = func_10517_call()
output = call_10518
func_10519 = relay.Function([], output)
mutated_mod['func_10519'] = func_10519
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1345_call = mod.get_global_var('func_1345')
func_1346_call = mutated_mod.get_global_var('func_1346')
call_10550 = func_1345_call()
call_10551 = func_1345_call()
func_8421_call = mod.get_global_var('func_8421')
func_8425_call = mutated_mod.get_global_var('func_8425')
var_10554 = relay.var("var_10554", dtype = "float64", shape = (351,))#candidate|10554|(351,)|var|float64
call_10553 = relay.TupleGetItem(func_8421_call(relay.reshape(var_10554.astype('float64'), [3, 9, 13]), relay.reshape(var_10554.astype('float64'), [3, 9, 13]), ), 0)
call_10555 = relay.TupleGetItem(func_8425_call(relay.reshape(var_10554.astype('float64'), [3, 9, 13]), relay.reshape(var_10554.astype('float64'), [3, 9, 13]), ), 0)
output = relay.Tuple([call_10550,call_10553,var_10554,])
output2 = relay.Tuple([call_10551,call_10555,var_10554,])
func_10563 = relay.Function([var_10554,], output)
mod['func_10563'] = func_10563
mod = relay.transform.InferType()(mod)
var_10564 = relay.var("var_10564", dtype = "float64", shape = (351,))#candidate|10564|(351,)|var|float64
output = func_10563(var_10564)
func_10565 = relay.Function([var_10564], output)
mutated_mod['func_10565'] = func_10565
mutated_mod = relay.transform.InferType()(mutated_mod)
func_8311_call = mod.get_global_var('func_8311')
func_8312_call = mutated_mod.get_global_var('func_8312')
call_10617 = relay.TupleGetItem(func_8311_call(), 0)
call_10618 = relay.TupleGetItem(func_8312_call(), 0)
func_7006_call = mod.get_global_var('func_7006')
func_7008_call = mutated_mod.get_global_var('func_7008')
call_10625 = func_7006_call()
call_10626 = func_7006_call()
func_7898_call = mod.get_global_var('func_7898')
func_7901_call = mutated_mod.get_global_var('func_7901')
var_10639 = relay.var("var_10639", dtype = "float64", shape = (360,))#candidate|10639|(360,)|var|float64
call_10638 = relay.TupleGetItem(func_7898_call(relay.reshape(var_10639.astype('float64'), [360,])), 1)
call_10640 = relay.TupleGetItem(func_7901_call(relay.reshape(var_10639.astype('float64'), [360,])), 1)
output = relay.Tuple([call_10617,call_10625,call_10638,var_10639,])
output2 = relay.Tuple([call_10618,call_10626,call_10640,var_10639,])
func_10651 = relay.Function([var_10639,], output)
mod['func_10651'] = func_10651
mod = relay.transform.InferType()(mod)
var_10652 = relay.var("var_10652", dtype = "float64", shape = (360,))#candidate|10652|(360,)|var|float64
output = func_10651(var_10652)
func_10653 = relay.Function([var_10652], output)
mutated_mod['func_10653'] = func_10653
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5746_call = mod.get_global_var('func_5746')
func_5747_call = mutated_mod.get_global_var('func_5747')
call_10655 = relay.TupleGetItem(func_5746_call(), 1)
call_10656 = relay.TupleGetItem(func_5747_call(), 1)
func_4094_call = mod.get_global_var('func_4094')
func_4095_call = mutated_mod.get_global_var('func_4095')
call_10657 = relay.TupleGetItem(func_4094_call(), 0)
call_10658 = relay.TupleGetItem(func_4095_call(), 0)
func_1877_call = mod.get_global_var('func_1877')
func_1879_call = mutated_mod.get_global_var('func_1879')
call_10663 = func_1877_call()
call_10664 = func_1877_call()
func_2238_call = mod.get_global_var('func_2238')
func_2240_call = mutated_mod.get_global_var('func_2240')
const_10667 = relay.const([6.033958,9.290332,-3.703932,8.438842,-0.660830,-5.343352,-8.949780,-4.658188,-8.093572,-9.783735,-6.887883,2.826524,-6.923647], dtype = "float64")#candidate|10667|(13,)|const|float64
call_10666 = relay.TupleGetItem(func_2238_call(relay.reshape(const_10667.astype('float64'), [1, 1, 13])), 2)
call_10668 = relay.TupleGetItem(func_2240_call(relay.reshape(const_10667.astype('float64'), [1, 1, 13])), 2)
output = relay.Tuple([call_10655,call_10657,call_10663,call_10666,const_10667,])
output2 = relay.Tuple([call_10656,call_10658,call_10664,call_10668,const_10667,])
func_10676 = relay.Function([], output)
mod['func_10676'] = func_10676
mod = relay.transform.InferType()(mod)
mutated_mod['func_10676'] = func_10676
mutated_mod = relay.transform.InferType()(mutated_mod)
func_10676_call = mutated_mod.get_global_var('func_10676')
call_10677 = func_10676_call()
output = call_10677
func_10678 = relay.Function([], output)
mutated_mod['func_10678'] = func_10678
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3802_call = mod.get_global_var('func_3802')
func_3803_call = mutated_mod.get_global_var('func_3803')
call_10692 = relay.TupleGetItem(func_3802_call(), 0)
call_10693 = relay.TupleGetItem(func_3803_call(), 0)
func_5517_call = mod.get_global_var('func_5517')
func_5519_call = mutated_mod.get_global_var('func_5519')
call_10694 = func_5517_call()
call_10695 = func_5517_call()
func_7494_call = mod.get_global_var('func_7494')
func_7498_call = mutated_mod.get_global_var('func_7498')
var_10710 = relay.var("var_10710", dtype = "float64", shape = ())#candidate|10710|()|var|float64
const_10711 = relay.const([[6.076984],[-2.815021]], dtype = "float64")#candidate|10711|(2, 1)|const|float64
call_10709 = relay.TupleGetItem(func_7494_call(relay.reshape(var_10710.astype('float64'), []), relay.reshape(const_10711.astype('float64'), [2, 1, 1]), ), 0)
call_10712 = relay.TupleGetItem(func_7498_call(relay.reshape(var_10710.astype('float64'), []), relay.reshape(const_10711.astype('float64'), [2, 1, 1]), ), 0)
output = relay.Tuple([call_10692,call_10694,call_10709,var_10710,const_10711,])
output2 = relay.Tuple([call_10693,call_10695,call_10712,var_10710,const_10711,])
func_10716 = relay.Function([var_10710,], output)
mod['func_10716'] = func_10716
mod = relay.transform.InferType()(mod)
mutated_mod['func_10716'] = func_10716
mutated_mod = relay.transform.InferType()(mutated_mod)
var_10717 = relay.var("var_10717", dtype = "float64", shape = ())#candidate|10717|()|var|float64
func_10716_call = mutated_mod.get_global_var('func_10716')
call_10718 = func_10716_call(var_10717)
output = call_10718
func_10719 = relay.Function([var_10717], output)
mutated_mod['func_10719'] = func_10719
mutated_mod = relay.transform.InferType()(mutated_mod)
var_10765 = relay.var("var_10765", dtype = "int8", shape = (4, 2, 6))#candidate|10765|(4, 2, 6)|var|int8
var_10766 = relay.var("var_10766", dtype = "int8", shape = (4, 2, 6))#candidate|10766|(4, 2, 6)|var|int8
bop_10767 = relay.subtract(var_10765.astype('int8'), relay.reshape(var_10766.astype('int8'), relay.shape_of(var_10765))) # shape=(4, 2, 6)
output = relay.Tuple([bop_10767,])
output2 = relay.Tuple([bop_10767,])
F = relay.Function([var_10765,var_10766,], output)
mod['main'] = F
mod = relay.transform.InferType()(mod)
print('==========mod==========')
print(mod.astext(show_meta_data=False))
print('===================================')
F = relay.Function([var_10765,var_10766,], output2)
mutated_mod['main'] = F
mutated_mod = relay.transform.InferType()(mutated_mod)
print('==========mutated_mod==========')
print(mutated_mod.astext(show_meta_data=False))
print('===================================')
graph, lib, params = relay.build(mod, target='llvm')
module1 = graph_runtime.create(graph, lib, tvm.device('llvm',0))
intrp2 = relay.build_module.create_executor('graph', mod, tvm.device('llvm',0),'llvm')
intrp3 = relay.build_module.create_executor('debug', mod, tvm.device('llvm',0),'llvm')
intrp4 = relay.build_module.create_executor('vm', mod, tvm.device('llvm',0),'llvm')
graph, lib, params = relay.build(mod, target='cuda')
module5 = graph_runtime.create(graph, lib, tvm.device('cuda',0))
intrp6 = relay.build_module.create_executor('graph', mod, tvm.device('cuda',0),'cuda')
intrp7 = relay.build_module.create_executor('debug', mod, tvm.device('cuda',0),'cuda')
intrp8 = relay.build_module.create_executor('vm', mod, tvm.device('cuda',0),'cuda')
seq = Sequential([
	relay.transform.AlterOpLayout(),
	relay.transform.AnnotateSpans(),
	relay.transform.BatchingOps(),
	relay.transform.CanonicalizeCast(),
	relay.transform.CanonicalizeOps(),
	relay.transform.DeadCodeElimination(),
	relay.transform.DynamicToStatic(),
	relay.transform.FastMath(),
	relay.transform.FirstOrderGradient(),
	relay.transform.EliminateCommonSubexpr(),
	relay.transform.MergeCompilerRegions(),
	relay.transform.Inline(),
	relay.transform.LambdaLift(),
	relay.transform.LazyGradientInit(),
])
mod = seq(mod)
print(mod.astext(show_meta_data=False))
graph, lib, params = relay.build(mod, target='llvm')
module9 = graph_runtime.create(graph, lib, tvm.device('llvm',0))
intrp10 = relay.build_module.create_executor('graph', mod, tvm.device('llvm',0),'llvm')
intrp11 = relay.build_module.create_executor('debug', mod, tvm.device('llvm',0),'llvm')
intrp12 = relay.build_module.create_executor('vm', mod, tvm.device('llvm',0),'llvm')
graph, lib, params = relay.build(mod, target='cuda')
module13 = graph_runtime.create(graph, lib, tvm.device('cuda',0))
intrp14 = relay.build_module.create_executor('graph', mod, tvm.device('cuda',0),'cuda')
intrp15 = relay.build_module.create_executor('debug', mod, tvm.device('cuda',0),'cuda')
intrp16 = relay.build_module.create_executor('vm', mod, tvm.device('cuda',0),'cuda')
graph, lib, params = relay.build(mutated_mod, target='llvm')
module17 = graph_runtime.create(graph, lib, tvm.device('llvm',0))
intrp18 = relay.build_module.create_executor('graph', mutated_mod, tvm.device('llvm',0),'llvm')
intrp19 = relay.build_module.create_executor('debug', mutated_mod, tvm.device('llvm',0),'llvm')
intrp20 = relay.build_module.create_executor('vm', mutated_mod, tvm.device('llvm',0),'llvm')
graph, lib, params = relay.build(mutated_mod, target='cuda')
module21 = graph_runtime.create(graph, lib, tvm.device('cuda',0))
intrp22 = relay.build_module.create_executor('graph', mutated_mod, tvm.device('cuda',0),'cuda')
intrp23 = relay.build_module.create_executor('debug', mutated_mod, tvm.device('cuda',0),'cuda')
intrp24 = relay.build_module.create_executor('vm', mutated_mod, tvm.device('cuda',0),'cuda')

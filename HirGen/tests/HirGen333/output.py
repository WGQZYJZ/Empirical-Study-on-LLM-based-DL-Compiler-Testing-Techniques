import tvm
from tvm import relay
from tvm.ir.transform import Sequential
from tvm.contrib import graph_runtime
import numpy as np
mod = tvm.IRModule()
mutated_mod = tvm.IRModule()
var_65 = relay.var("var_65", dtype = "float32", shape = (16, 4, 11))#candidate|65|(16, 4, 11)|var|float32
uop_66 = relay.atan(var_65.astype('float32')) # shape=(16, 4, 11)
output = relay.Tuple([uop_66,])
output2 = relay.Tuple([uop_66,])
func_84 = relay.Function([var_65,], output)
mod['func_84'] = func_84
mod = relay.transform.InferType()(mod)
var_85 = relay.var("var_85", dtype = "float32", shape = (16, 4, 11))#candidate|85|(16, 4, 11)|var|float32
output = func_84(var_85)
func_86 = relay.Function([var_85], output)
mutated_mod['func_86'] = func_86
mutated_mod = relay.transform.InferType()(mutated_mod)
const_98 = relay.const(5.603552, dtype = "float64")#candidate|98|()|const|float64
var_99 = relay.var("var_99", dtype = "float64", shape = (15, 5, 5))#candidate|99|(15, 5, 5)|var|float64
bop_100 = relay.divide(const_98.astype('float64'), var_99.astype('float64')) # shape=(15, 5, 5)
func_84_call = mod.get_global_var('func_84')
func_86_call = mutated_mod.get_global_var('func_86')
const_110 = relay.const([-4.956264,2.674291,-6.512885,-8.908571,3.258195,-4.150082,0.551222,-2.947669,-0.475775,6.031192,8.124541,3.553477,6.686213,-5.041525,5.418216,3.044127,5.644603,3.610776,-5.398992,-8.790760,0.084715,9.368647,5.675032,4.535233,6.467905,8.770304,1.866885,2.382046,0.189035,5.358589,-5.667873,-1.137173,3.367391,9.686034,5.025283,9.046611,-4.291575,-9.518962,1.423410,3.126982,-9.065826,4.199330,6.742225,-0.582125,2.640613,3.154328,6.982623,6.727446,3.195230,-2.895521,-3.753862,1.738085,-0.991357,-9.868844,6.206227,7.368183,-3.231633,-5.967103,6.416308,8.341979,-8.638621,-6.744683,-7.498267,8.341885,-8.874092,9.435962,6.773293,4.818862,-4.030476,1.582956,4.582765,3.023543,-6.896482,7.409278,8.064903,-0.554099,-6.791264,9.911921,-0.446421,-2.999231,-7.102762,3.619444,5.986248,-7.081809,-7.359962,8.401711,-5.861333,-8.427922,-4.300674,-1.791137,-8.485960,-8.537752,5.903822,1.486373,-6.534927,-2.899573,1.965717,-2.399348,-6.138875,-5.583919,4.075246,-6.311665,2.928689,-4.593976,-3.725104,8.857996,8.394526,2.352504,1.974899,-2.307910,3.220536,-5.360627,-2.162463,0.137612,3.020080,8.341866,2.151644,-3.327853,-9.109525,5.893460,3.136816,9.993089,-2.495518,0.495080,-1.518669,8.927017,-8.211246,-1.961231,-3.864318,5.498186,-8.202722,-8.872263,-1.773682,-1.003492,6.033056,-0.956782,-9.946669,1.173620,-0.043816,-7.489203,-3.414463,-1.413178,7.799086,9.178162,-5.920821,-0.316652,-8.013272,2.446195,4.501166,8.974392,6.954875,-6.067935,-6.907352,-6.073100,-0.287495,8.818520,-2.518094,-9.407548,-2.109731,5.138613,-6.392559,0.556077,4.799337,-4.299123,-3.772687,9.948421,9.032150,1.436752,-8.478919,-6.424106,-2.693598,9.552161,-5.293508,8.013880,-7.275103,8.996285,-5.585024,6.225666,4.460259,-4.298656,4.237889,5.653784,1.570218,-2.185995,-6.555041,2.743859,-6.446013,6.178859,-9.303887,-8.157256,-6.011658,7.139835,-5.109343,-5.273214,-2.957567,-7.111303,-2.718736,-3.542537,-4.221102,9.002882,-8.383524,-5.568336,-2.671618,7.835972,-1.969148,3.656452,1.245422,4.150679,2.831697,-4.464740,-9.506968,1.607803,-1.308964,3.320668,3.326194,-1.433049,6.409577,-0.404897,-3.318803,-4.450370,0.701185,5.880110,-8.807720,3.411033,-2.288105,-4.286367,-1.426052,-2.075528,5.229755,1.842552,-4.372395,-9.274313,-4.394659,2.349920,-4.282229,4.487941,5.388257,6.482520,0.943593,1.258330,-6.177724,8.561965,-3.583489,6.738092,1.291682,-6.415718,-4.135996,8.780856,5.006367,-9.244725,-1.093530,-2.132675,-6.996036,8.448959,-6.011665,-9.660810,-7.182162,6.053013,6.608715,8.515090,9.549449,-2.665999,-6.470106,7.724526,0.881094,-7.773361,1.965801,8.383685,-9.373030,-4.153292,-2.365330,3.821071,-4.293209,4.838712,2.313494,-0.488278,-3.206699,5.692023,-4.072717,-2.455674,-9.537466,7.231408,3.520841,4.594037,9.198426,-3.412789,-6.150899,0.330716,-9.533051,-2.872413,7.342253,8.753799,-6.702047,-4.880139,3.287240,-8.843429,0.186766,4.701216,-3.692292,-0.010378,-5.994183,2.810098,-8.493987,1.480655,1.240765,9.583606,-4.527776,-9.709910,4.896095,0.328306,-3.430142,-5.746711,0.590445,-5.591946,-6.948423,-8.060145,-2.145804,-5.445888,-7.366041,4.470232,8.108713,-9.245555,9.673648,-8.990696,5.030260,1.722886,9.423356,-6.843773,-8.835495,2.515348,3.685711,0.484283,6.850789,8.391406,-8.696523,-2.619900,7.415633,7.977696,2.884225,5.502042,-9.604914,-1.045926,-7.998677,-4.794923,-2.259583,9.196173,1.851274,6.022160,-1.719157,-3.008743,5.498940,7.077568,2.938173,-5.806400,-9.981032,-0.184598,-3.369433,0.944469,0.889505,4.801623,7.941422,8.233954,-3.117781,2.404945,9.551963,2.656817,-0.903169,9.579696,9.898327,3.229587,9.521688,-8.308080,-3.740050,-4.817793,-8.403943,6.904383,5.351998,-3.865899,9.751118,-7.253258,-0.457084,-7.501160,-9.703720,-5.152304,1.615480,-1.118034,9.132816,-5.572408,-8.782560,2.369211,0.915585,-9.139176,-9.947880,-7.387388,-0.779934,-3.417295,-4.055879,-0.479909,7.188320,-7.689290,-8.161812,3.310852,-3.651893,7.788110,5.567927,8.143414,-7.838448,3.762638,-3.457044,-5.804937,-1.242241,8.244930,6.371695,-0.975352,6.049827,6.088723,0.183274,9.282567,1.951916,-1.603046,-2.848513,5.239944,0.461553,6.830479,-2.554976,-9.113733,-0.612232,3.952325,1.567950,-5.079656,-1.314980,-6.468043,5.720649,0.642622,7.952184,0.597725,5.168048,-9.517179,6.262791,9.412523,4.702717,-7.822265,7.545513,-9.524459,2.797532,4.548614,-8.005446,3.393218,-3.582469,-2.681174,-4.161402,9.589190,-7.022444,-6.982321,8.971685,9.258048,-1.623318,-3.078912,6.843080,-6.194927,-2.196155,8.317321,-5.676440,-3.149242,1.950440,-8.502127,-3.825236,-4.952101,7.379710,-3.921731,-1.999401,7.853727,0.355153,-2.321249,-9.508933,-4.720788,9.599504,-6.940578,-9.338865,-7.535781,0.478718,-9.996310,-6.397415,4.723677,1.467089,-6.325183,0.783996,-8.735471,2.270285,-6.320584,-1.678745,-9.347560,-8.616473,6.240849,7.654090,-6.622718,-7.213071,-9.575903,0.303311,-3.100414,8.567818,-6.568665,-4.716814,-8.500987,-6.428429,-8.056178,0.385459,-0.792296,3.692512,-2.221048,8.130997,5.643462,2.969076,-0.625004,1.512754,-7.740352,1.622135,-5.878388,6.596838,7.014619,8.823445,-5.999874,8.074579,-7.016118,-1.039699,6.835608,6.334508,7.899914,7.786734,-9.155425,-8.418987,8.826463,5.455037,-9.903287,-0.870636,-4.773600,8.728297,-8.059525,9.946353,1.118920,-8.443265,4.467411,3.875909,-5.357012,-9.473079,-1.249246,5.128822,-9.448247,8.892245,-9.922321,0.790264,1.487459,9.080374,3.374818,-6.849021,0.711630,2.316137,-0.643322,6.325188,2.720380,8.848150,3.438397,-5.614025,-9.284670,-3.425508,3.837041,9.309777,-9.678052,2.140704,-7.925235,-4.725318,-1.326219,-7.157930,-2.375130,1.259354,-3.850440,9.301862,-5.343216,2.028757,5.320945,8.934473,6.033072,4.510317,9.985062,5.191190,-7.861299,8.957864,-0.419132,-0.675644,-0.525696,-5.994336,-3.930174,-6.710555,1.922096,3.096089,1.084315,-9.187948,-1.673543,-7.465419,-9.851363,9.729180,8.677067,8.653482,-5.054233,-6.894266,2.792831,7.719021,4.740690,-4.905784,-7.910641,2.076002,-5.839119,-6.910854,-7.594232,9.516020,9.493068,5.169079,1.337991,-7.586082,-1.205448,-0.251810,0.712989,-2.993048,2.327743,-6.563622,-7.016465,7.554935,8.295537,1.620251,-6.035795,-4.609583,9.135670,-0.039236,-8.730700,7.755977,-2.788627,-6.250632,9.103602,-1.679424,-7.729969,-9.004856,-9.594699,8.554511,-4.279283,4.514033,8.594134,-7.253223,-9.042828,-3.691587,6.925680,7.351214,6.701094,0.710414,-8.127944,-2.123784,-7.686401,-8.662491,-8.394663,-6.593088,-9.121292,-2.100614,4.035778,4.129085,4.278786,-7.701953,3.567353,-4.691714,-2.447648,3.246340,9.592914,2.814447,4.755847,0.303205,7.688758,-1.102889,7.387439,-6.586539,9.323895,-2.576331,1.482016,1.944582,4.539378,8.640948,6.087170,-3.204717,-5.390019,6.877148,2.827296,-0.106649,-5.916377,2.005459,0.852123,8.876671,4.778926,7.353408,-3.855102,0.211895,2.725289,1.976720,6.892748,5.490483,2.791570,9.977483,3.154209], dtype = "float32")#candidate|110|(704,)|const|float32
call_109 = relay.TupleGetItem(func_84_call(relay.reshape(const_110.astype('float32'), [16, 4, 11])), 0)
call_111 = relay.TupleGetItem(func_86_call(relay.reshape(const_110.astype('float32'), [16, 4, 11])), 0)
bop_113 = relay.logical_or(bop_100.astype('bool'), const_98.astype('bool')) # shape=(15, 5, 5)
func_84_call = mod.get_global_var('func_84')
func_86_call = mutated_mod.get_global_var('func_86')
call_117 = relay.TupleGetItem(func_84_call(relay.reshape(call_109.astype('float32'), [16, 4, 11])), 0)
call_118 = relay.TupleGetItem(func_86_call(relay.reshape(call_109.astype('float32'), [16, 4, 11])), 0)
func_84_call = mod.get_global_var('func_84')
func_86_call = mutated_mod.get_global_var('func_86')
call_123 = relay.TupleGetItem(func_84_call(relay.reshape(const_110.astype('float32'), [16, 4, 11])), 0)
call_124 = relay.TupleGetItem(func_86_call(relay.reshape(const_110.astype('float32'), [16, 4, 11])), 0)
bop_129 = relay.equal(const_98.astype('bool'), var_99.astype('bool')) # shape=(15, 5, 5)
output = relay.Tuple([call_109,const_110,bop_113,call_117,call_123,bop_129,])
output2 = relay.Tuple([call_111,const_110,bop_113,call_118,call_124,bop_129,])
func_135 = relay.Function([var_99,], output)
mod['func_135'] = func_135
mod = relay.transform.InferType()(mod)
var_136 = relay.var("var_136", dtype = "float64", shape = (15, 5, 5))#candidate|136|(15, 5, 5)|var|float64
output = func_135(var_136)
func_137 = relay.Function([var_136], output)
mutated_mod['func_137'] = func_137
mutated_mod = relay.transform.InferType()(mutated_mod)
var_212 = relay.var("var_212", dtype = "float32", shape = (10, 1, 1))#candidate|212|(10, 1, 1)|var|float32
uop_213 = relay.asinh(var_212.astype('float32')) # shape=(10, 1, 1)
uop_215 = relay.cosh(uop_213.astype('float32')) # shape=(10, 1, 1)
func_84_call = mod.get_global_var('func_84')
func_86_call = mutated_mod.get_global_var('func_86')
const_226 = relay.const([-6.860046,-4.522287,-9.322673,-6.011826,-4.790504,7.122355,-4.841474,-9.736083,-3.004182,8.628032,-9.331838,-8.051759,-9.185071,7.260904,-9.443334,-7.938712,-5.566830,-3.413188,-9.156883,6.368501,-7.679096,-0.242050,-0.601311,7.592558,5.690138,8.407606,-3.817000,4.540290,9.842986,-1.000933,6.906254,-0.730458,-1.171570,-7.790602,2.908799,4.119448,-6.631415,-4.888305,-9.652086,9.161789,-1.323081,-0.158112,-8.581434,-1.185962,-3.251927,1.122805,1.026917,5.036521,-4.416857,3.805603,2.901191,-4.894697,-2.151551,-5.524915,-9.579997,-6.914184,3.042864,7.811183,-2.164174,7.433214,0.459280,-4.934870,3.638890,-3.890708,7.984059,4.438058,-5.198025,-7.424745,8.737072,-1.866871,4.577792,-9.948346,0.283477,-3.831895,9.805986,-6.486176,8.068049,-7.518630,-3.517766,-4.828817,-8.295854,-9.777449,0.996952,4.837871,0.375608,-7.241526,-4.244063,1.649662,7.300689,0.174072,-2.214191,4.509010,-3.448057,-9.593973,-0.551543,-4.594603,-0.815922,0.249549,5.516694,-4.834817,-2.502237,4.355150,-1.037837,-8.402375,3.706297,-9.264036,5.484188,1.160238,3.228978,-8.841001,-3.144580,-9.540726,0.477591,5.046107,-5.027408,-9.210031,-3.642473,8.283644,-6.606302,-6.941243,0.694807,7.660313,-6.098790,-7.584132,-6.253478,5.564610,7.137689,-6.059475,-2.801473,-5.521885,3.544565,9.350855,-6.762851,-8.886428,3.573052,-9.512191,-9.702715,8.241925,-3.034112,-5.989433,0.080462,-0.614319,-0.813873,6.651567,-1.992720,5.480740,-5.191318,5.263322,-4.870124,-2.688116,7.819209,-8.524897,-5.945653,-0.896655,-1.559102,-0.169164,9.971199,-6.219990,0.140122,-4.816641,2.897543,1.350877,-0.774032,2.660214,4.586293,-3.838960,-3.585083,-4.691415,0.306223,-3.859304,4.571269,6.453500,6.338835,-5.748270,9.895323,-0.180612,5.682384,2.923548,-7.113069,-2.278783,-9.013787,-2.655158,4.103355,8.330997,-6.649763,-7.553648,-2.876026,-9.551536,-1.818706,-8.111878,4.973834,-8.433111,2.237202,-9.820902,-0.059216,2.007895,-4.425830,-5.157640,-6.122192,-3.958788,7.052393,-7.829762,-1.536899,8.872041,-3.019836,-5.936838,-9.217322,-2.617456,-9.906643,6.831889,8.581367,9.502039,0.583361,4.280765,-0.214574,-8.152195,4.502599,2.766406,5.930554,-2.678989,4.644280,0.216230,2.236462,6.301126,-7.198131,2.120928,4.200129,7.759672,-4.438510,-5.556226,-5.210085,-1.077513,0.350698,6.790061,-5.383079,-5.346861,6.529432,5.587700,8.733235,-8.961141,0.494260,0.241715,3.788568,5.482911,-5.777572,-1.796805,-7.415296,-5.675293,-7.447212,-8.685978,7.897918,-0.143131,-5.735308,1.099304,-8.806905,-4.830422,7.278312,-0.487670,-3.683200,-4.612120,3.164117,-8.447260,4.245369,-7.164995,-7.183545,-8.939951,1.797611,-2.109145,-4.049398,-7.270200,-4.875591,3.894946,-9.976583,-2.280767,6.918661,6.132008,9.243242,8.750787,-3.599940,-6.740887,-5.505685,-9.659666,-7.990326,-4.212653,6.020999,9.911209,3.447461,7.558682,8.485289,-2.881265,2.147057,8.497247,3.277532,6.141571,-7.237456,7.715725,9.776373,1.269762,-6.330592,-4.137358,-9.566995,0.230959,-8.085694,8.487649,-8.085594,9.427577,-1.044886,-4.714798,3.527967,1.967358,-4.702794,-2.805320,5.937957,9.919736,7.714133,0.106436,8.906227,2.952701,3.660221,3.743317,5.247542,5.210347,-5.246977,2.343207,-9.932098,8.656048,5.969375,-2.394072,6.663402,3.116244,9.158683,-8.825700,5.132346,5.099094,4.081617,7.394635,4.369225,-9.478282,-3.771775,5.680988,-9.761122,2.017437,-6.740605,-1.924298,5.687921,0.375059,-6.009955,-9.615429,1.835143,9.476379,-0.709326,4.161631,8.218470,8.479200,-0.588647,-7.522332,-0.562743,-3.761764,9.295459,-3.167431,-4.227549,-2.068914,-1.332429,7.085729,-1.246701,-7.222558,0.206230,-9.594072,6.709044,-6.163244,-2.403055,-0.801490,1.514243,3.259131,-3.660172,9.584980,6.150317,5.939745,-0.849996,-5.468099,1.861926,-0.318881,-7.244426,-0.354558,-9.095301,6.673909,8.912164,6.921317,2.447955,-5.859754,8.545247,-5.965311,2.128162,-2.555832,-6.047868,-7.555711,8.362742,-3.390395,0.836253,1.254010,-5.917875,-9.894995,-0.566022,-4.983173,-9.877341,9.392085,-6.472986,1.828342,-2.957251,-0.463318,-9.061423,-2.791707,5.393331,1.417285,7.789025,-3.189592,-2.645913,-1.988996,0.539844,-9.242569,2.111258,6.823258,6.278337,4.892671,-2.628802,2.615764,-0.066174,-4.979160,-6.373146,-6.635458,-0.044595,5.614192,2.253163,2.889885,-5.010270,-4.677556,-2.255234,-6.327888,-8.256996,5.925677,4.482854,4.604546,-6.350747,8.080199,-7.248691,7.367454,-3.890309,6.112839,-7.204414,-3.577821,-2.133407,-4.277602,-9.809411,-9.313305,-1.546657,5.142241,-2.504952,4.859417,-9.535683,-0.225616,-5.793959,3.558680,-6.603143,-5.115377,-8.448120,-5.901247,3.043378,9.740095,8.834171,2.224491,0.679758,1.316786,1.727432,-7.717102,8.724794,-2.773705,-0.311062,-5.111315,-3.444191,2.267766,-4.581686,3.012522,-1.571190,2.144041,2.207959,1.361624,-9.187449,-7.873258,6.432294,4.158230,1.770767,-4.861551,-8.706111,0.787283,7.261382,8.977863,-6.624820,-7.499142,4.858345,-3.636772,-6.548829,1.608470,-6.351898,-0.039166,-8.387073,-7.527416,-2.022467,-6.967980,9.865389,9.365778,-5.454038,-9.165547,-2.977084,-2.906567,7.283437,-5.120068,-0.549486,-7.640967,9.816259,8.989865,-7.478200,-6.313340,-6.131614,5.306746,-3.800449,7.302485,8.386845,5.788664,-9.006706,7.079631,-5.858742,6.248861,4.327485,1.943773,-7.786234,8.549987,-2.701023,1.347312,-8.324102,-1.716411,-1.949111,8.081265,-1.363077,2.251532,-8.231175,-3.695044,-0.512623,-4.073973,4.843527,-5.846760,-3.029893,-3.549424,8.157178,8.770668,9.661500,-7.399433,0.429076,4.032279,-7.367984,-2.607978,-7.482782,9.328874,-3.424280,-4.382827,3.771964,-5.172620,-6.417211,-6.898523,-3.726003,4.878959,-1.449711,8.073651,-8.294364,6.386875,6.754410,1.418514,-5.801627,-2.670225,-7.121285,-8.792564,-7.904628,5.506532,6.623967,-3.466080,-6.304254,1.604375,-3.761070,-8.665642,-1.016545,7.667259,-6.010669,5.479353,-1.167733,6.671963,-2.267531,-4.477170,-3.134605,-2.908492,-5.533054,-2.391802,-1.758813,1.914274,-9.536708,5.795177,8.707098,7.556603,-9.420440,-4.268937,-9.438960,8.357081,1.723991,0.402181,-5.247617,7.382116,2.015682,9.196838,-6.790320,-8.372362,-2.257873,8.186998,-3.227210,5.130768,3.036143,0.439593,-9.584621,-3.420726,6.173780,1.107271,2.229696,-5.104244,-5.888336,2.447166,-5.177366,-1.496190,1.224323,-8.912144,-9.525503,-7.358339,5.885533,9.664085,2.022102,6.226557,-3.773531,-9.314444,6.258034,-3.535583,-8.843476,-6.787395,0.829350,4.859991,-0.270996,-1.061557,-8.356542,-5.867290,3.639990,8.798598,-2.867975,6.020469,4.733146,-5.218105,-0.548706,2.840314,-5.654699,5.925345,-8.344117,5.110212,-4.238227,6.424318,-8.518783,-1.645400,3.803261,-2.687120,-5.653701,-2.037748,5.757074,-7.478133,0.633523,-1.310700,-8.172524,8.657788,1.984050,1.884955,1.393885,-1.219924,0.362237,6.825617,-6.629396,-5.916460,4.839582,-5.502676,7.455274,-9.302586,-1.617083,3.944684,-4.144593,4.833777,2.787545,9.942529,9.522955,-6.602851,-9.550228,-6.720487,-5.141642,4.280759], dtype = "float32")#candidate|226|(704,)|const|float32
call_225 = relay.TupleGetItem(func_84_call(relay.reshape(const_226.astype('float32'), [16, 4, 11])), 0)
call_227 = relay.TupleGetItem(func_86_call(relay.reshape(const_226.astype('float32'), [16, 4, 11])), 0)
func_135_call = mod.get_global_var('func_135')
func_137_call = mutated_mod.get_global_var('func_137')
var_229 = relay.var("var_229", dtype = "float64", shape = (375,))#candidate|229|(375,)|var|float64
call_228 = relay.TupleGetItem(func_135_call(relay.reshape(var_229.astype('float64'), [15, 5, 5])), 5)
call_230 = relay.TupleGetItem(func_137_call(relay.reshape(var_229.astype('float64'), [15, 5, 5])), 5)
func_135_call = mod.get_global_var('func_135')
func_137_call = mutated_mod.get_global_var('func_137')
call_232 = relay.TupleGetItem(func_135_call(relay.reshape(var_229.astype('float64'), [15, 5, 5])), 5)
call_233 = relay.TupleGetItem(func_137_call(relay.reshape(var_229.astype('float64'), [15, 5, 5])), 5)
bop_240 = relay.bitwise_xor(uop_213.astype('int64'), var_229.astype('int64')) # shape=(10, 1, 375)
func_135_call = mod.get_global_var('func_135')
func_137_call = mutated_mod.get_global_var('func_137')
call_246 = relay.TupleGetItem(func_135_call(relay.reshape(call_228.astype('float64'), [15, 5, 5])), 0)
call_247 = relay.TupleGetItem(func_137_call(relay.reshape(call_228.astype('float64'), [15, 5, 5])), 0)
uop_251 = relay.acosh(uop_215.astype('float32')) # shape=(10, 1, 1)
output = relay.Tuple([call_225,const_226,call_228,call_232,bop_240,call_246,uop_251,])
output2 = relay.Tuple([call_227,const_226,call_230,call_233,bop_240,call_247,uop_251,])
func_256 = relay.Function([var_212,var_229,], output)
mod['func_256'] = func_256
mod = relay.transform.InferType()(mod)
var_257 = relay.var("var_257", dtype = "float32", shape = (10, 1, 1))#candidate|257|(10, 1, 1)|var|float32
var_258 = relay.var("var_258", dtype = "float64", shape = (375,))#candidate|258|(375,)|var|float64
output = func_256(var_257,var_258,)
func_259 = relay.Function([var_257,var_258,], output)
mutated_mod['func_259'] = func_259
mutated_mod = relay.transform.InferType()(mutated_mod)
var_290 = relay.var("var_290", dtype = "uint64", shape = (11, 11, 10))#candidate|290|(11, 11, 10)|var|uint64
var_291 = relay.var("var_291", dtype = "uint64", shape = (11, 11, 10))#candidate|291|(11, 11, 10)|var|uint64
bop_292 = relay.greater_equal(var_290.astype('bool'), relay.reshape(var_291.astype('bool'), relay.shape_of(var_290))) # shape=(11, 11, 10)
bop_298 = relay.less(var_291.astype('bool'), relay.reshape(bop_292.astype('bool'), relay.shape_of(var_291))) # shape=(11, 11, 10)
func_84_call = mod.get_global_var('func_84')
func_86_call = mutated_mod.get_global_var('func_86')
var_303 = relay.var("var_303", dtype = "float32", shape = (8, 88))#candidate|303|(8, 88)|var|float32
call_302 = relay.TupleGetItem(func_84_call(relay.reshape(var_303.astype('float32'), [16, 4, 11])), 0)
call_304 = relay.TupleGetItem(func_86_call(relay.reshape(var_303.astype('float32'), [16, 4, 11])), 0)
func_256_call = mod.get_global_var('func_256')
func_259_call = mutated_mod.get_global_var('func_259')
var_312 = relay.var("var_312", dtype = "float32", shape = (10,))#candidate|312|(10,)|var|float32
const_313 = relay.const([-1.839819,3.243497,0.560967,3.085959,3.494169,-8.867047,-4.553553,8.456631,-2.179178,-7.686948,-7.889299,3.208150,1.440276,7.612585,1.114070,1.040207,5.884879,-6.658111,-6.726488,4.065740,-2.582477,8.027464,2.318870,4.839932,3.730330,-1.248082,2.784890,-8.482747,-2.550859,7.174129,7.047874,4.640860,-2.940199,5.666461,4.206365,-9.945776,9.007668,-8.103967,-2.422704,-6.169016,7.283068,7.005259,-1.498105,0.876176,5.565645,-9.561824,1.997773,8.029100,-1.962839,4.843111,6.199655,4.654787,7.746861,7.041174,-0.784361,4.045667,-4.180679,-3.773315,3.359804,2.106360,-0.077004,0.210887,2.796377,5.042082,1.284438,4.124515,-5.322383,0.584143,-8.050990,8.289900,3.584856,1.659310,1.136102,-2.478183,6.486607,3.452065,-4.826711,-6.463006,6.501028,1.193191,-3.272376,3.200830,1.344613,-0.043710,-7.629189,-0.566316,-8.980495,4.864886,1.606946,-2.348807,-3.820804,5.175541,-3.598312,-5.239790,1.464091,7.681740,6.741584,0.965067,9.626855,-4.676472,6.864659,9.268202,-2.834409,-1.885352,1.936742,0.366225,-4.382135,-9.948883,-7.562309,2.175660,-3.233810,5.655091,2.118881,-2.117747,-3.891686,-2.711797,-1.411098,7.256556,1.553202,-4.839472,8.859184,-2.766266,-6.578589,-7.270074,5.837564,1.871610,-8.080151,2.718954,6.906115,2.145598,8.165631,7.683112,0.326742,-1.425484,-1.068787,3.857226,-6.410034,-5.737992,-2.615368,2.217421,-0.461101,3.907374,4.098279,-4.682789,9.581135,-3.844840,-1.239500,-1.769919,7.773272,-1.340638,5.271571,5.693507,0.975765,6.087571,-8.324003,8.612472,7.477590,-1.409458,-4.424586,9.150427,-1.213507,-7.504506,1.208418,-6.635093,4.522983,3.497814,1.817066,6.538376,-5.204737,-8.824332,3.204367,3.336812,4.887617,-5.279995,-7.649937,2.862512,8.112245,1.308825,-9.623228,5.676825,-0.272022,-9.977772,0.875593,-1.636328,-3.031330,8.593569,7.217740,-7.703863,-1.294027,-6.290510,-8.171278,7.498688,0.953044,6.514858,-3.946269,9.450287,3.694644,-3.072340,2.586735,-3.670969,-7.232884,-7.397138,-4.240111,-5.041189,1.383683,5.460735,-3.755540,3.611428,-8.678082,2.141323,-1.736456,7.267432,-0.261036,-2.224392,1.439972,-6.905440,-9.688235,4.406423,5.102860,3.877742,-5.057737,4.408663,5.038425,-0.858070,9.533239,1.900122,-7.571690,6.830125,-8.238868,1.413679,-7.845990,5.187143,-7.660218,7.228001,-7.939540,-6.424542,9.826999,5.185711,-8.068779,-4.727259,8.711996,0.925053,6.912153,7.792540,2.107935,0.651686,-5.424099,-6.082070,4.862094,-4.386869,8.375389,-4.071922,-9.855600,5.141193,4.107089,-0.873539,8.915527,-2.301458,-0.697753,5.719206,-3.933668,1.125020,7.249895,6.961165,6.907393,8.305603,-9.009756,-2.513062,9.888112,-0.901981,0.692586,-6.619944,-4.261065,6.990788,-8.659514,-3.258058,9.406325,9.246143,-7.747910,6.920533,-8.922167,-1.142504,-0.565202,-2.774852,-0.182022,-3.638970,4.409167,0.293569,-1.305962,7.159816,1.138275,4.945243,4.409950,9.707496,-4.934733,-9.733823,9.439222,4.099174,9.413898,-8.137297,-3.182258,3.916031,0.370615,-8.702012,-2.944722,-6.672849,5.189618,-3.056580,-7.415854,-7.319662,1.216293,4.906420,9.335526,-5.850678,-5.382180,5.052383,-6.640068,7.140860,7.103977,9.869209,7.450207,2.850187,1.371503,1.462231,7.578701,-7.437214,-2.956306,-2.199843,2.604015,-8.766143,2.616126,-9.342086,4.750347,9.054961,4.096499,-2.245739,-7.744404,-5.434756,6.455449,7.440750,8.189502,9.579090,3.582185,-5.892632,9.803937,8.361810,-8.627625,-0.475723,9.417932,-5.830996,-3.153038,6.004171,-8.143960,-5.216557,2.816998,-1.385962,-7.422953,4.777854,2.386754,-4.397281,-8.222342,1.385852,1.721816,-3.382835,4.387296,-4.143560,4.100859,-0.284151,6.504588,-8.312900,-8.457072,2.076650,-3.324150,8.223767,-4.878058], dtype = "float64")#candidate|313|(375,)|const|float64
call_311 = relay.TupleGetItem(func_256_call(relay.reshape(var_312.astype('float32'), [10, 1, 1]), relay.reshape(const_313.astype('float64'), [375,]), ), 5)
call_314 = relay.TupleGetItem(func_259_call(relay.reshape(var_312.astype('float32'), [10, 1, 1]), relay.reshape(const_313.astype('float64'), [375,]), ), 5)
output = relay.Tuple([bop_298,call_302,var_303,call_311,var_312,const_313,])
output2 = relay.Tuple([bop_298,call_304,var_303,call_314,var_312,const_313,])
func_328 = relay.Function([var_290,var_291,var_303,var_312,], output)
mod['func_328'] = func_328
mod = relay.transform.InferType()(mod)
mutated_mod['func_328'] = func_328
mutated_mod = relay.transform.InferType()(mutated_mod)
func_328_call = mutated_mod.get_global_var('func_328')
var_330 = relay.var("var_330", dtype = "uint64", shape = (11, 11, 10))#candidate|330|(11, 11, 10)|var|uint64
var_331 = relay.var("var_331", dtype = "uint64", shape = (11, 11, 10))#candidate|331|(11, 11, 10)|var|uint64
var_332 = relay.var("var_332", dtype = "float32", shape = (8, 88))#candidate|332|(8, 88)|var|float32
var_333 = relay.var("var_333", dtype = "float32", shape = (10,))#candidate|333|(10,)|var|float32
call_329 = func_328_call(var_330,var_331,var_332,var_333,)
output = call_329
func_334 = relay.Function([var_330,var_331,var_332,var_333,], output)
mutated_mod['func_334'] = func_334
mutated_mod = relay.transform.InferType()(mutated_mod)
var_357 = relay.var("var_357", dtype = "uint16", shape = (2, 4, 2))#candidate|357|(2, 4, 2)|var|uint16
const_358 = relay.const([[[9,10],[1,4],[-4,-10],[10,5]],[[-5,1],[8,-5],[4,-1],[-8,-4]]], dtype = "uint16")#candidate|358|(2, 4, 2)|const|uint16
bop_359 = relay.greater_equal(var_357.astype('bool'), relay.reshape(const_358.astype('bool'), relay.shape_of(var_357))) # shape=(2, 4, 2)
output = relay.Tuple([bop_359,])
output2 = relay.Tuple([bop_359,])
func_362 = relay.Function([var_357,], output)
mod['func_362'] = func_362
mod = relay.transform.InferType()(mod)
mutated_mod['func_362'] = func_362
mutated_mod = relay.transform.InferType()(mutated_mod)
var_363 = relay.var("var_363", dtype = "uint16", shape = (2, 4, 2))#candidate|363|(2, 4, 2)|var|uint16
func_362_call = mutated_mod.get_global_var('func_362')
call_364 = func_362_call(var_363)
output = call_364
func_365 = relay.Function([var_363], output)
mutated_mod['func_365'] = func_365
mutated_mod = relay.transform.InferType()(mutated_mod)
var_416 = relay.var("var_416", dtype = "float32", shape = (13, 12, 16))#candidate|416|(13, 12, 16)|var|float32
uop_417 = relay.atan(var_416.astype('float32')) # shape=(13, 12, 16)
func_256_call = mod.get_global_var('func_256')
func_259_call = mutated_mod.get_global_var('func_259')
const_422 = relay.const([-9.174101,7.529261,5.303728,3.972828,3.872090,-4.640314,2.626481,7.149573,-2.031981,2.064100], dtype = "float32")#candidate|422|(10,)|const|float32
var_423 = relay.var("var_423", dtype = "float64", shape = (375,))#candidate|423|(375,)|var|float64
call_421 = relay.TupleGetItem(func_256_call(relay.reshape(const_422.astype('float32'), [10, 1, 1]), relay.reshape(var_423.astype('float64'), [375,]), ), 2)
call_424 = relay.TupleGetItem(func_259_call(relay.reshape(const_422.astype('float32'), [10, 1, 1]), relay.reshape(var_423.astype('float64'), [375,]), ), 2)
func_362_call = mod.get_global_var('func_362')
func_365_call = mutated_mod.get_global_var('func_365')
const_434 = relay.const([2,4,4,-5,-5,5,5,-8,-2,-5,-6,-6,-6,-10,-5,-7], dtype = "uint16")#candidate|434|(16,)|const|uint16
call_433 = relay.TupleGetItem(func_362_call(relay.reshape(const_434.astype('uint16'), [2, 4, 2])), 0)
call_435 = relay.TupleGetItem(func_365_call(relay.reshape(const_434.astype('uint16'), [2, 4, 2])), 0)
uop_451 = relay.asinh(uop_417.astype('float64')) # shape=(13, 12, 16)
output = relay.Tuple([call_421,const_422,var_423,call_433,const_434,uop_451,])
output2 = relay.Tuple([call_424,const_422,var_423,call_435,const_434,uop_451,])
func_453 = relay.Function([var_416,var_423,], output)
mod['func_453'] = func_453
mod = relay.transform.InferType()(mod)
var_454 = relay.var("var_454", dtype = "float32", shape = (13, 12, 16))#candidate|454|(13, 12, 16)|var|float32
var_455 = relay.var("var_455", dtype = "float64", shape = (375,))#candidate|455|(375,)|var|float64
output = func_453(var_454,var_455,)
func_456 = relay.Function([var_454,var_455,], output)
mutated_mod['func_456'] = func_456
mutated_mod = relay.transform.InferType()(mutated_mod)
var_714 = relay.var("var_714", dtype = "float32", shape = (13, 15, 6))#candidate|714|(13, 15, 6)|var|float32
uop_715 = relay.acos(var_714.astype('float32')) # shape=(13, 15, 6)
bop_717 = relay.subtract(uop_715.astype('int32'), relay.reshape(var_714.astype('int32'), relay.shape_of(uop_715))) # shape=(13, 15, 6)
output = relay.Tuple([bop_717,])
output2 = relay.Tuple([bop_717,])
func_723 = relay.Function([var_714,], output)
mod['func_723'] = func_723
mod = relay.transform.InferType()(mod)
mutated_mod['func_723'] = func_723
mutated_mod = relay.transform.InferType()(mutated_mod)
var_724 = relay.var("var_724", dtype = "float32", shape = (13, 15, 6))#candidate|724|(13, 15, 6)|var|float32
func_723_call = mutated_mod.get_global_var('func_723')
call_725 = func_723_call(var_724)
output = call_725
func_726 = relay.Function([var_724], output)
mutated_mod['func_726'] = func_726
mutated_mod = relay.transform.InferType()(mutated_mod)
const_745 = relay.const([[[-3,-8,-7,9,-10,-7,-3,-7,3,-1],[-4,-8,-9,3,-6,-7,-10,-10,-10,10],[-3,7,9,5,5,5,-4,-4,-8,4],[5,-2,6,3,2,8,-8,1,8,9],[5,-5,-9,-9,7,2,5,-1,8,1],[-5,7,-5,-5,6,8,-10,-8,3,7],[-3,6,-4,10,-8,4,-9,1,9,7],[-9,-7,-10,-7,4,-5,-4,-6,-5,-10],[9,-10,-3,4,-6,9,10,4,3,-2],[-7,6,5,8,2,7,-2,-4,6,8],[1,-7,3,10,5,5,-7,3,-4,-6],[-1,-8,7,-7,-9,7,2,10,9,3],[2,-8,-8,-2,4,-9,-8,9,10,-10],[-10,-1,-3,2,-3,-6,5,-5,-4,7],[5,-4,-4,10,-8,-7,9,5,-10,-6],[3,1,7,-1,3,3,-4,2,-2,4]],[[-3,10,-8,6,1,-5,5,4,-10,-4],[-3,-10,4,6,2,-5,10,9,-10,8],[-10,-8,6,6,7,8,7,-6,10,6],[-2,9,6,-10,6,8,8,10,9,10],[7,5,-6,4,5,-9,1,-8,7,-3],[-5,-10,8,7,-5,-5,-4,4,-3,5],[-10,-6,-2,8,-4,4,-2,10,-4,9],[-3,10,5,5,-6,-8,7,-7,-10,-10],[-8,4,9,-1,-1,2,5,9,-10,9],[-7,2,3,-2,-6,9,-7,3,-7,10],[-5,1,-6,9,9,2,5,1,-5,2],[5,3,-4,-9,1,10,2,5,4,-6],[1,10,-3,-3,1,-8,-7,-8,9,2],[5,-7,5,-6,5,-3,-9,-4,1,-9],[-3,9,-9,-2,4,-10,8,-9,7,-2],[-7,-1,-6,-9,2,-9,4,-8,-9,-3]],[[4,4,-9,5,-8,2,-1,-2,-10,6],[-6,1,-5,6,7,6,3,3,5,-9],[4,8,4,4,10,8,-5,7,5,-3],[-3,6,-3,7,9,-10,-7,10,-8,-7],[-2,-4,1,-6,-7,1,-10,-7,5,10],[9,-9,-8,-10,-1,7,-10,-8,-4,-9],[5,-2,-6,7,-4,5,7,-10,3,3],[6,5,1,-9,2,-8,8,2,-1,-5],[-6,-8,6,-9,-9,1,10,-3,3,-8],[2,10,7,5,-10,5,-3,-10,3,6],[-2,7,-4,7,-4,2,10,-7,-5,5],[3,3,2,-2,7,-7,6,-2,-6,-10],[3,-8,6,-10,-6,-8,6,4,9,5],[6,4,7,4,7,6,8,3,-7,-6],[-9,-3,-8,-4,-3,-2,10,2,-3,1],[-10,10,-10,1,7,2,4,10,2,-10]],[[3,-5,9,10,-4,2,9,10,-6,-7],[-8,8,4,-5,-1,3,-6,-7,-8,7],[-8,-5,-4,6,-8,4,4,10,-1,6],[8,8,-10,9,9,-1,6,6,3,-9],[-5,-6,6,-6,-9,-8,2,2,-10,9],[8,10,5,5,6,-8,-8,9,-2,-10],[-7,-9,6,-10,-4,-8,10,10,4,5],[1,2,-10,3,7,-5,4,5,7,8],[6,-8,6,4,-5,-9,-4,6,-3,10],[-4,6,8,10,7,-1,-4,3,-8,9],[8,10,8,-10,4,-10,-2,6,8,-9],[2,9,-10,-7,9,-4,3,-1,-9,-1],[-8,1,9,-3,-3,-1,-4,-4,-5,5],[-6,-3,2,-1,4,3,-7,3,4,-1],[8,-4,4,-7,9,-3,10,6,-9,-4],[-3,6,-3,-3,4,-6,8,7,5,1]],[[7,-1,-1,10,5,4,10,7,-8,2],[8,6,-5,-8,-8,-6,-4,-1,-3,-4],[4,-10,7,-10,10,6,-8,-4,7,7],[10,10,10,8,2,-6,1,1,-3,-2],[10,1,-2,5,6,5,-3,7,-4,-1],[-6,-5,2,4,6,8,-3,6,-5,-5],[10,6,-4,-1,9,-7,8,3,-7,-3],[4,8,2,5,6,-10,-9,-2,-3,-1],[4,9,-1,9,-1,10,-6,5,4,-7],[7,7,-8,-10,3,-3,-1,-8,-9,10],[-9,-5,1,-5,9,7,1,-3,6,-10],[-5,5,-7,10,-10,-6,-3,6,-3,2],[2,8,-5,2,4,-10,7,7,-10,10],[9,1,-10,-7,9,-5,-9,6,-5,7],[2,-10,-5,-3,-4,-5,10,7,4,-1],[3,5,10,-8,-2,4,-2,-3,1,-4]],[[-6,10,-6,5,10,4,-3,-5,-2,10],[8,8,-8,9,-4,6,1,-7,2,-8],[10,-6,-10,-6,6,6,9,7,4,9],[-10,-9,1,-7,-8,7,-6,-10,6,9],[-3,-9,9,-2,-4,1,5,5,8,1],[7,-5,-1,-1,3,2,-7,2,8,8],[-4,6,-3,-9,2,-6,-10,-4,-7,9],[-5,8,3,-7,-4,1,-8,-1,-7,-9],[-2,8,7,2,-6,-4,3,2,-1,-5],[8,7,2,-4,-8,-7,-9,10,-6,-9],[-5,-5,4,2,-10,2,-4,3,-7,-4],[1,5,6,-5,-10,-9,7,1,5,9],[-2,-3,-2,-2,-3,-5,-8,4,8,8],[-6,-2,3,4,-9,-3,-6,5,5,6],[-4,4,-3,-7,10,10,-4,-10,-6,-5],[7,-5,-8,-10,10,1,-1,7,5,-7]],[[-1,2,-7,-2,-7,9,-9,-9,-9,-10],[-9,4,-7,-3,4,9,5,1,-4,-7],[2,-6,-2,-7,-4,-9,-9,-2,-5,1],[3,5,1,-1,8,5,8,8,4,3],[2,2,7,10,-7,1,10,9,1,4],[10,9,1,-7,5,-5,-2,-10,1,10],[10,-9,7,-2,7,-10,-7,4,8,-3],[1,-2,4,-3,4,2,-5,6,10,4],[4,-6,-3,-9,2,-6,9,-8,-9,-8],[4,-9,-3,-5,-1,-10,-1,7,7,-6],[5,3,-9,-7,-2,3,6,-7,5,4],[8,-2,-10,-6,-5,7,-6,4,-1,-6],[-7,-9,1,4,7,-3,-1,6,5,10],[4,-2,10,-6,8,-4,-2,-9,-10,-10],[-8,1,-9,-3,-9,-8,2,3,-5,-3],[-2,-9,-1,-9,1,7,4,1,5,10]],[[8,-6,8,-4,-10,-10,-3,9,9,-4],[-7,2,-9,7,-8,9,-6,8,-4,-9],[-9,-9,7,-6,-5,-7,-1,6,-1,-5],[1,-6,-9,-9,7,7,6,-8,-5,-7],[5,5,-2,-6,-5,1,5,2,-4,-6],[10,8,-1,-9,3,7,2,3,-6,-7],[2,-8,7,-8,3,-3,9,-9,8,-7],[5,-10,-7,-1,6,5,-5,-4,2,-3],[-7,-8,-8,5,4,-8,5,6,-2,6],[-2,-3,-5,-1,-10,4,3,-2,-10,8],[10,-4,5,-8,4,5,6,-7,7,-9],[-4,-2,4,9,-10,9,4,-6,1,6],[-9,-5,8,-5,-10,2,7,3,8,7],[-1,-10,10,-4,10,-10,2,4,-7,-7],[-5,-3,2,6,-9,8,1,-5,-3,-4],[10,4,9,-3,10,3,8,-10,1,-8]],[[10,10,-5,-2,3,-3,-10,-8,8,-5],[-1,4,4,2,1,-8,8,-2,-3,1],[-2,3,-3,1,2,10,2,-5,-9,6],[6,10,-3,7,7,-4,-4,1,7,9],[-5,5,4,-8,6,4,7,6,-4,-6],[2,-2,-8,-4,-4,-6,-1,-8,10,9],[-9,8,6,-6,10,3,-5,-6,7,-9],[2,-10,8,-9,6,-4,2,-3,-7,-9],[4,-9,-5,1,7,-3,-5,2,-2,2],[1,-5,8,-1,8,4,-2,-8,-9,10],[-8,5,-7,7,-9,9,4,5,3,-9],[-6,2,7,6,8,-10,-1,2,-1,9],[-9,-2,-4,7,4,10,-10,-9,-2,-2],[1,9,-6,-9,-1,9,-7,-2,-9,-10],[-6,3,5,-4,-7,9,8,-9,10,-3],[6,-8,-4,-8,1,6,-10,-5,10,-2]]], dtype = "uint32")#candidate|745|(9, 16, 10)|const|uint32
var_746 = relay.var("var_746", dtype = "uint32", shape = (9, 16, 10))#candidate|746|(9, 16, 10)|var|uint32
bop_747 = relay.minimum(const_745.astype('uint32'), relay.reshape(var_746.astype('uint32'), relay.shape_of(const_745))) # shape=(9, 16, 10)
output = bop_747
output2 = bop_747
func_754 = relay.Function([var_746,], output)
mod['func_754'] = func_754
mod = relay.transform.InferType()(mod)
var_755 = relay.var("var_755", dtype = "uint32", shape = (9, 16, 10))#candidate|755|(9, 16, 10)|var|uint32
output = func_754(var_755)
func_756 = relay.Function([var_755], output)
mutated_mod['func_756'] = func_756
mutated_mod = relay.transform.InferType()(mutated_mod)
var_780 = relay.var("var_780", dtype = "float64", shape = (4, 1, 14))#candidate|780|(4, 1, 14)|var|float64
uop_781 = relay.atan(var_780.astype('float64')) # shape=(4, 1, 14)
output = uop_781
output2 = uop_781
func_801 = relay.Function([var_780,], output)
mod['func_801'] = func_801
mod = relay.transform.InferType()(mod)
var_802 = relay.var("var_802", dtype = "float64", shape = (4, 1, 14))#candidate|802|(4, 1, 14)|var|float64
output = func_801(var_802)
func_803 = relay.Function([var_802], output)
mutated_mod['func_803'] = func_803
mutated_mod = relay.transform.InferType()(mutated_mod)
var_892 = relay.var("var_892", dtype = "float32", shape = (1, 12, 12))#candidate|892|(1, 12, 12)|var|float32
uop_893 = relay.sigmoid(var_892.astype('float32')) # shape=(1, 12, 12)
bop_902 = relay.right_shift(uop_893.astype('uint64'), relay.reshape(var_892.astype('uint64'), relay.shape_of(uop_893))) # shape=(1, 12, 12)
uop_906 = relay.cosh(bop_902.astype('float32')) # shape=(1, 12, 12)
func_362_call = mod.get_global_var('func_362')
func_365_call = mutated_mod.get_global_var('func_365')
const_909 = relay.const([[5,-5,-5,1],[5,5,8,-10],[8,-1,-3,-6],[-10,10,8,6]], dtype = "uint16")#candidate|909|(4, 4)|const|uint16
call_908 = relay.TupleGetItem(func_362_call(relay.reshape(const_909.astype('uint16'), [2, 4, 2])), 0)
call_910 = relay.TupleGetItem(func_365_call(relay.reshape(const_909.astype('uint16'), [2, 4, 2])), 0)
bop_923 = relay.subtract(uop_906.astype('float64'), relay.reshape(var_892.astype('float64'), relay.shape_of(uop_906))) # shape=(1, 12, 12)
func_328_call = mod.get_global_var('func_328')
func_334_call = mutated_mod.get_global_var('func_334')
const_930 = relay.const([[5],[-2],[-10],[-7],[6],[7],[9],[2],[-5],[8],[3],[1],[8],[7],[1],[-8],[-3],[-9],[5],[-6],[-7],[9],[-2],[7],[-9],[5],[9],[-1],[-5],[6],[-2],[-10],[3],[9],[-5],[-1],[10],[10],[2],[-9],[2],[-4],[7],[7],[8],[8],[8],[-4],[-9],[-10],[-10],[1],[-4],[9],[-8],[-8],[-2],[9],[-10],[3],[-2],[7],[-3],[10],[7],[-10],[-3],[-4],[10],[3],[-4],[8],[5],[-7],[-6],[2],[-5],[7],[-3],[-2],[8],[-5],[3],[-10],[-7],[-10],[-3],[-8],[6],[3],[10],[-1],[6],[5],[-6],[10],[-8],[-9],[-8],[-5],[1],[5],[4],[2],[9],[-3],[1],[-3],[3],[-8],[4],[-6],[-5],[-5],[-3],[6],[-6],[8],[4],[-3],[3],[3],[-1],[1],[-4],[-4],[7],[5],[5],[4],[10],[2],[1],[-9],[9],[-2],[-7],[8],[-1],[1],[-8],[-8],[-5],[8],[2],[-9],[-2],[-10],[2],[9],[-1],[-6],[6],[-6],[3],[-6],[2],[-7],[-6],[-8],[6],[3],[-2],[-2],[4],[8],[4],[4],[7],[9],[-7],[2],[-9],[-8],[-5],[5],[8],[9],[3],[-4],[5],[-4],[5],[-9],[6],[-4],[-4],[-4],[-7],[-10],[-9],[-6],[-3],[6],[-6],[-4],[-2],[2],[-6],[2],[10],[7],[-6],[7],[-1],[8],[1],[8],[-8],[-1],[5],[-7],[-6],[4],[9],[-6],[-6],[5],[1],[-7],[-8],[-4],[-8],[-3],[9],[1],[3],[-10],[-9],[3],[-2],[9],[1],[2],[-3],[-6],[-6],[1],[5],[10],[-10],[-7],[-3],[4],[-1],[9],[5],[5],[-9],[7],[8],[6],[6],[-7],[1],[-6],[-2],[-6],[7],[-4],[8],[-6],[-1],[-10],[-8],[6],[-2],[1],[8],[-10],[7],[2],[8],[4],[-9],[-6],[2],[-1],[-10],[5],[1],[5],[4],[3],[4],[-4],[9],[2],[-5],[3],[-5],[-10],[-10],[1],[-5],[-2],[-2],[10],[-3],[-1],[-6],[9],[1],[1],[8],[-8],[4],[1],[3],[7],[-2],[2],[4],[-1],[5],[-3],[5],[4],[-3],[-9],[-10],[5],[7],[9],[-10],[7],[5],[-6],[-3],[5],[7],[7],[-2],[-7],[8],[8],[-3],[4],[-9],[-1],[1],[-2],[9],[-5],[-5],[8],[-8],[5],[6],[5],[-7],[3],[-7],[1],[2],[-4],[-4],[-9],[-4],[-5],[3],[-2],[-10],[3],[8],[1],[-2],[-7],[-3],[-5],[-2],[6],[-7],[9],[9],[2],[-9],[5],[3],[9],[-7],[-9],[7],[9],[4],[-3],[-5],[4],[-5],[-5],[9],[6],[-2],[-9],[-10],[-6],[-9],[7],[-1],[-3],[10],[-3],[4],[9],[2],[-4],[1],[-9],[3],[-8],[6],[-2],[-1],[8],[7],[8],[9],[4],[-1],[-5],[-7],[2],[-10],[-9],[-8],[-10],[4],[-9],[2],[8],[-1],[7],[-10],[-5],[4],[-1],[-8],[-6],[-3],[5],[-5],[6],[-6],[-4],[-6],[-8],[-1],[-7],[5],[-9],[2],[7],[3],[10],[2],[9],[-10],[-5],[-2],[5],[-5],[5],[7],[6],[-5],[-1],[7],[9],[-3],[7],[-4],[-3],[3],[-1],[8],[5],[10],[-1],[5],[8],[-4],[-9],[9],[2],[4],[-9],[6],[-3],[9],[4],[-1],[-3],[10],[-7],[-1],[4],[-6],[-6],[-8],[-8],[8],[5],[7],[-2],[1],[6],[-6],[2],[-2],[8],[-7],[-9],[-5],[9],[1],[-10],[-5],[2],[-2],[-10],[4],[-4],[4],[-6],[-8],[-8],[-9],[8],[-1],[-9],[-4],[-3],[3],[-3],[-2],[7],[-1],[-6],[-10],[1],[-9],[3],[-5],[-3],[-7],[1],[5],[-2],[-1],[-5],[-10],[-1],[-7],[5],[-1],[5],[5],[-9],[-10],[9],[7],[9],[-5],[-10],[8],[1],[10],[-8],[-9],[4],[7],[-8],[-7],[5],[9],[5],[5],[8],[8],[6],[5],[-3],[-9],[2],[4],[-6],[3],[-5],[10],[10],[-5],[7],[-2],[2],[7],[6],[-5],[-7],[-8],[2],[2],[4],[1],[10],[9],[-5],[6],[6],[9],[7],[-4],[-7],[2],[5],[2],[-3],[-5],[-2],[4],[10],[-3],[-10],[8],[-8],[-2],[2],[10],[6],[5],[1],[1],[4],[8],[-2],[1],[8],[8],[-4],[3],[-3],[8],[10],[-7],[9],[2],[-1],[-5],[8],[-4],[-10],[4],[-6],[7],[9],[1],[3],[-9],[9],[-3],[-2],[-2],[7],[10],[3],[-6],[9],[-10],[-4],[-7],[4],[-7],[9],[-4],[-6],[9],[-2],[-10],[8],[-4],[6],[-3],[-10],[9],[9],[9],[4],[-2],[5],[-3],[5],[-8],[-3],[-5],[10],[4],[-1],[-10],[10],[-7],[5],[-2],[-1],[6],[-2],[-7],[-1],[5],[-5],[6],[2],[-1],[7],[-4],[-1],[5],[6],[-7],[-4],[4],[-1],[3],[6],[-7],[10],[6],[3],[5],[-9],[6],[9],[-7],[9],[-9],[-6],[10],[-4],[1],[-3],[-2],[-2],[-5],[6],[-7],[-8],[-6],[-4],[-9],[7],[-7],[2],[4],[10],[-7],[4],[6],[-8],[2],[-10],[10],[2],[4],[-8],[-3],[10],[2],[9],[10],[-9],[-4],[6],[10],[-10],[9],[-1],[-9],[-8],[-3],[3],[-3],[-7],[-7],[-9],[6],[5],[3],[-10],[7],[-7],[-2],[-7],[5],[4],[-2],[-3],[-2],[-10],[-5],[-7],[10],[-10],[3],[-8],[-10],[7],[7],[-4],[1],[-8],[5],[-10],[2],[-7],[2],[7],[-7],[-7],[-9],[-1],[1],[-2],[3],[-1],[-2],[-9],[-10],[3],[2],[8],[-5],[8],[-4],[-2],[-1],[3],[-2],[10],[-10],[2],[-2],[10],[-4],[4],[4],[-10],[9],[-1],[-2],[-9],[8],[4],[-6],[7],[-7],[-2],[2],[1],[-7],[-1],[-8],[-2],[-8],[3],[7],[-4],[-3],[-7],[5],[7],[-5],[-3],[10],[-2],[-10],[8],[4],[7],[2],[-6],[4],[-6],[-8],[-6],[-8],[-7],[1],[-1],[-5],[-8],[6],[2],[-7],[-5],[-1],[-9],[-1],[-1],[-9],[4],[-9],[10],[2],[-1],[-4],[1],[-8],[-1],[-4],[-3],[7],[1],[5],[1],[-1],[1],[7],[-10],[-5],[-7],[3],[-1],[2],[3],[10],[2],[-7],[7],[7],[6],[-2],[-7],[-2],[-9],[9],[6],[-3],[2],[-8],[-9],[10],[8],[-6],[-9],[-5],[-2],[4],[6],[-6],[3],[-1],[7],[5],[-7],[-4],[-3],[-10],[2],[-8],[-1],[-6],[9],[-2],[-7],[2],[-6],[-8],[-4],[4],[-10],[-10],[3],[-6],[9],[5],[-6],[-5],[-4],[2],[5],[-1],[6],[6],[6],[3],[-6],[-9],[-6],[5],[-8],[5],[5],[2],[7],[1],[7],[-3],[-5],[5],[8],[-5],[3],[-5],[-8],[2],[3],[3],[7],[7],[9],[-6],[-2],[-9],[9],[-8],[2],[-1],[-9],[1],[9],[5],[-1],[1],[-2],[-4],[6],[7],[-10],[-5],[-2],[3],[-6],[8],[3],[3],[5],[3],[6],[7],[-2],[-9],[10],[8],[-6],[-8],[6],[2],[-8],[-9],[4],[-10],[-10],[8],[-8],[-6],[-6],[1],[-2],[-6],[10],[7],[-5],[-9],[-3],[-1],[-10],[7],[-5],[8],[10],[6],[-10],[3],[-3],[-2],[-3],[2],[10],[-1],[2],[10],[-5],[4],[2],[7],[-7],[-9],[9],[-8],[-9],[9],[1],[-9],[3],[-4],[4],[-8],[10],[10],[3],[3],[10],[6],[-2],[-4],[-7],[4],[-2],[-9],[-5],[-1],[6],[7],[-1],[-8],[-6],[-6],[-1],[-6],[9],[5],[-10],[-5],[3],[1],[-8],[6],[-2],[-2],[2],[9],[8],[-2],[10],[-5],[5],[6],[-10],[10],[-7],[-1],[3],[-3],[-10],[10],[-2],[10],[6],[3],[10],[-4],[8],[2],[1],[9],[-5],[4],[-8],[3],[-1],[-10],[3],[5],[1],[-7],[3],[-8],[9],[9],[6],[-9],[8],[6],[-10],[2],[3],[-4],[-1],[10],[-8],[5],[-6],[4],[-4],[9],[-9],[-8],[-2],[3],[-5],[-5],[8],[-9],[-10],[-2],[-5],[10],[9],[9],[5],[3],[6],[4],[-8],[-4],[-3],[-3],[8],[-3],[10],[9],[-2]], dtype = "uint64")#candidate|930|(1210, 1)|const|uint64
const_931 = relay.const([[3.894559,-4.029029,1.087695,6.341965,-4.499133,8.500463,5.475001,-2.232617,4.906192,-6.871627,4.798697,-5.003613,-1.476171,-2.286185,-3.554133,-5.141466,0.769937,5.482289,5.287057,-4.168705,-5.060707,-8.045795,-4.163703,-3.348329,-0.967576,5.956635,1.223093,-4.330757,8.237074,4.730976,-6.237874,3.486579,-1.445022,6.062805,-0.065049,-1.424332,2.017875,-6.641721,7.176885,4.295069,-9.205092,3.942466,7.289454,8.220235,-9.962002,-6.120820,-1.262730,9.667060,-3.495202,-8.298815,-4.549698,-1.513830,-5.930365,5.140589,6.543230,1.786497,6.953432,-1.453940,2.488169,-2.853360,-8.011861,-7.493085,-9.652467,0.658243,-5.139017,9.626358,-8.123730,-8.876035,8.086312,-8.958088,7.843520,-9.814456,0.155638,6.881496,-7.609627,-9.263383,-7.803308,1.193181,-5.080959,0.260035,3.596863,9.679376,-9.478975,-0.453887,2.485135,7.596078,-1.252088,-8.362919,-7.218618,-8.776155,5.639063,8.131651,-6.411849,-2.849089,1.357375,1.334365,3.028691,5.746017,1.023772,6.906750,-4.169147,1.944085,-6.858212,-7.509153,4.035646,2.812382,-1.083738,-9.719567,2.902186,4.709425,-0.453624,3.895525,-5.620326,-9.527657,-2.626783,-8.884742,-0.448200,-3.733410,8.316711,3.972067,0.138409,9.029481,6.836854,-8.755397,3.122635,7.920435,7.031941,4.015073,0.042509,0.504285,7.841517,3.295110,3.315592,-6.476474,-5.991592,7.140107,-2.172550,6.113437,-4.836141,-4.731153,-7.121344,6.726561,2.966559,7.705688,-6.268603,-2.805954,-9.642824,0.040468,5.545366,5.060351,6.183593,-2.506629,7.023269,4.069750,2.151763,8.612250,-7.797412,0.108648,4.991107,-0.433212,5.356575,0.647379,-9.182236,1.304386,-9.222010,-4.316142,3.762596,7.364046,-6.238665,-3.803716,2.876083,3.660278,3.480878,3.343453,7.052501,-8.384139],[-6.272637,2.413846,0.628953,3.624854,6.646756,3.949835,-2.222490,3.691645,-5.929709,-3.856448,-3.149135,4.380443,4.401218,-8.093159,-7.221168,3.629525,2.274003,-1.977187,-9.588479,-8.765434,3.520265,-1.789321,3.267476,-4.075430,-3.955397,2.394962,8.320228,-9.525047,0.296590,3.799075,7.908703,-9.935497,4.947067,8.320619,-2.829297,1.124974,-6.447341,2.717678,-0.979307,6.363276,9.174462,3.262208,5.181813,0.602027,-6.226290,-7.022069,8.473471,-9.418142,0.393905,-2.207158,-0.096572,0.902984,-6.820979,-0.164426,2.371880,4.554996,-4.199087,6.329635,-7.142317,-9.051900,5.414356,-5.048009,4.820257,-6.247505,2.399826,9.131003,-5.583874,-2.058266,0.359964,9.395824,-7.558887,7.131426,3.920666,-2.832715,3.794102,1.253035,8.421810,-7.495701,-4.883202,-2.911284,7.812261,5.460753,-7.065025,-4.806669,-4.031528,-8.594794,-1.741889,7.532287,-1.300242,2.536256,-5.909749,9.326669,5.710859,6.158633,-3.623777,6.415733,3.562424,0.297938,-2.150601,6.687140,-4.636879,0.384063,-6.231534,-6.231736,-7.732484,-6.444463,-4.797282,-8.125044,4.164291,-9.792733,0.533863,-8.588610,-7.334659,1.831352,7.540986,-9.576525,-8.882231,4.779478,-5.149721,-2.582624,9.672541,-1.866939,-2.080696,4.428822,-7.246034,8.006430,3.611956,-0.582342,5.778559,-5.874836,-9.099641,-1.847530,-9.671783,2.286525,-9.105508,2.539888,1.849315,2.146482,4.027904,7.678721,-8.466513,0.498531,-2.290257,-4.988784,2.523956,6.236000,3.532148,7.600887,8.835255,-9.761681,-8.329643,2.327647,7.149796,3.418497,-8.862900,-2.223829,2.210185,-9.650659,3.348064,8.732770,-1.286791,9.960808,4.725857,1.310319,4.191721,-6.332621,-6.182622,9.622067,-2.478449,-0.127305,-0.628862,-4.907195,-7.489311,7.143840,8.177821,2.253263],[3.431979,5.498417,6.147997,9.674045,-9.221983,-9.194912,-4.729535,3.670328,-0.234834,9.823599,-9.327599,-3.409638,-4.356970,4.826313,-6.616369,9.919228,6.909325,-4.053182,-8.153006,4.541231,5.775857,8.752803,-2.454811,9.340229,-0.365789,8.238316,-3.171910,0.602145,3.603321,-6.071599,2.581211,-2.521248,-3.629600,7.186173,-6.991286,0.490551,-5.735124,1.018817,9.229689,2.931042,2.145789,9.202226,-8.326210,9.624267,3.740062,-1.868166,4.795551,5.215814,3.141956,-7.476016,1.014080,-7.536226,-2.734926,-5.219515,-4.704171,5.509392,-0.490583,1.552504,-9.818963,5.007660,-7.851416,-5.143039,-5.607854,0.526799,3.560726,2.373111,4.046904,-1.575130,-6.063394,-9.222728,2.845755,-7.685281,-3.235178,-3.858233,-8.843389,-8.187032,5.512022,4.959648,-3.368648,-8.622130,-2.411646,-5.536953,1.125191,-2.178238,-8.978422,-7.811819,-4.550777,2.924766,-2.254457,8.221526,8.749227,7.753786,6.420402,-8.507784,8.814253,6.768430,4.912111,7.804640,-9.444257,-8.513693,-6.813091,-9.462780,7.167554,3.373342,-8.449377,1.771540,-0.797504,-3.752618,1.917324,8.258131,5.229470,-7.628836,4.415687,3.288794,8.568784,-0.772725,-1.360971,0.179743,-5.301419,5.292160,4.250651,9.488204,8.112513,0.700167,-1.866101,0.466554,0.995312,-7.925979,-1.657945,0.761354,4.373178,6.885686,-8.826102,-1.076413,-9.394045,5.042715,-9.389273,0.679336,3.438890,-8.672587,-8.085504,7.894820,4.399703,-9.198832,-9.469209,-7.362402,5.479231,2.138331,-6.249495,-2.218219,-7.469967,-5.851007,-8.236193,-7.892796,3.625664,-1.398616,8.601400,1.277150,8.517379,-1.465941,2.656882,-9.279515,-5.253791,9.296493,9.151117,2.810082,5.848522,-7.396810,-5.313611,5.845384,8.909613,6.909002,-5.192207,0.790519,-1.580942,4.341433],[-5.957568,-0.691556,6.062432,2.794834,8.159606,-1.110781,8.821797,0.219941,-8.290805,4.539163,-6.420081,-7.442310,8.425861,-6.038959,7.805634,-6.969437,3.615064,-2.564605,-6.432735,6.438332,3.251939,-5.829896,-4.126198,-3.794213,8.463906,-0.463542,-0.008868,-9.754952,4.006881,6.311968,-1.101937,-2.200310,-4.774012,-0.882245,2.863924,-2.332744,-3.803491,6.264190,-3.957253,8.805453,7.910029,3.579235,-9.904825,2.504833,9.379075,-4.633201,-0.935853,3.450712,4.491178,0.468088,-4.460306,0.742308,8.731529,0.377119,-9.233263,2.550526,3.835896,1.614048,-7.449210,5.596908,5.985939,1.590607,-3.310490,-2.076398,-9.650819,-2.896754,-1.094891,0.765871,-6.675175,1.449356,7.990028,-4.860807,-0.217196,-4.134363,7.967647,-9.777159,8.348386,-7.232535,-9.827897,-8.403108,1.296453,1.626178,-2.830391,9.305962,-0.037312,-9.815500,5.583110,-0.060560,-6.755049,-7.540416,-7.958011,2.036494,-9.029944,3.802072,-1.356445,4.447525,9.845177,7.437019,-4.633319,-5.379841,-3.231727,-8.671543,-4.877616,1.584721,-6.095620,-4.848443,-8.864791,-9.111014,9.444520,6.204345,9.214295,9.614113,-8.075511,1.550026,2.489363,0.596465,-2.897042,7.525251,-2.948396,6.735122,-2.723605,7.405541,5.788156,0.301206,8.586249,8.873483,-7.330410,3.937066,6.100123,2.635978,1.623602,-0.487449,-9.934376,-4.675140,-8.653708,2.744059,6.278839,6.930417,5.870209,0.737131,-2.886748,6.774067,-1.280351,1.509546,5.187156,-2.520233,4.739531,-3.588435,1.325065,-0.306096,3.712257,-1.223320,-4.426018,2.619282,3.024925,-4.756458,7.703752,-1.854327,9.702649,-8.260384,-6.755783,2.589671,4.267963,7.466378,-7.970295,0.511765,-3.257204,-8.949725,3.328815,-1.009772,-1.702124,-1.022219,-2.162692,6.977173,-4.375604,2.280572]], dtype = "float32")#candidate|931|(4, 176)|const|float32
const_932 = relay.const([-7.645797,4.527275,3.310581,-9.560491,-8.360029,-4.780057,2.575154,-9.050398,-6.391390,7.213118], dtype = "float32")#candidate|932|(10,)|const|float32
call_929 = relay.TupleGetItem(func_328_call(relay.reshape(const_930.astype('uint64'), [11, 11, 10]), relay.reshape(const_930.astype('uint64'), [11, 11, 10]), relay.reshape(const_931.astype('float32'), [8, 88]), relay.reshape(const_932.astype('float32'), [10,]), ), 5)
call_933 = relay.TupleGetItem(func_334_call(relay.reshape(const_930.astype('uint64'), [11, 11, 10]), relay.reshape(const_930.astype('uint64'), [11, 11, 10]), relay.reshape(const_931.astype('float32'), [8, 88]), relay.reshape(const_932.astype('float32'), [10,]), ), 5)
func_135_call = mod.get_global_var('func_135')
func_137_call = mutated_mod.get_global_var('func_137')
call_934 = relay.TupleGetItem(func_135_call(relay.reshape(call_929.astype('float64'), [15, 5, 5])), 3)
call_935 = relay.TupleGetItem(func_137_call(relay.reshape(call_929.astype('float64'), [15, 5, 5])), 3)
bop_940 = relay.less_equal(bop_923.astype('bool'), relay.reshape(uop_906.astype('bool'), relay.shape_of(bop_923))) # shape=(1, 12, 12)
bop_948 = relay.logical_and(uop_906.astype('bool'), relay.reshape(uop_893.astype('bool'), relay.shape_of(uop_906))) # shape=(1, 12, 12)
bop_952 = relay.add(bop_948.astype('uint16'), relay.reshape(uop_893.astype('uint16'), relay.shape_of(bop_948))) # shape=(1, 12, 12)
uop_958 = relay.atan(bop_923.astype('float32')) # shape=(1, 12, 12)
bop_966 = relay.greater(uop_958.astype('bool'), relay.reshape(bop_948.astype('bool'), relay.shape_of(uop_958))) # shape=(1, 12, 12)
output = relay.Tuple([call_908,const_909,call_929,const_930,const_931,const_932,call_934,bop_940,bop_952,bop_966,])
output2 = relay.Tuple([call_910,const_909,call_933,const_930,const_931,const_932,call_935,bop_940,bop_952,bop_966,])
func_970 = relay.Function([var_892,], output)
mod['func_970'] = func_970
mod = relay.transform.InferType()(mod)
var_971 = relay.var("var_971", dtype = "float32", shape = (1, 12, 12))#candidate|971|(1, 12, 12)|var|float32
output = func_970(var_971)
func_972 = relay.Function([var_971], output)
mutated_mod['func_972'] = func_972
mutated_mod = relay.transform.InferType()(mutated_mod)
var_1341 = relay.var("var_1341", dtype = "float32", shape = (15, 9, 5))#candidate|1341|(15, 9, 5)|var|float32
var_1342 = relay.var("var_1342", dtype = "float32", shape = (15, 9, 5))#candidate|1342|(15, 9, 5)|var|float32
bop_1343 = relay.floor_mod(var_1341.astype('float32'), relay.reshape(var_1342.astype('float32'), relay.shape_of(var_1341))) # shape=(15, 9, 5)
func_801_call = mod.get_global_var('func_801')
func_803_call = mutated_mod.get_global_var('func_803')
var_1350 = relay.var("var_1350", dtype = "float64", shape = (56,))#candidate|1350|(56,)|var|float64
call_1349 = func_801_call(relay.reshape(var_1350.astype('float64'), [4, 1, 14]))
call_1351 = func_801_call(relay.reshape(var_1350.astype('float64'), [4, 1, 14]))
func_801_call = mod.get_global_var('func_801')
func_803_call = mutated_mod.get_global_var('func_803')
call_1352 = func_801_call(relay.reshape(var_1350.astype('float64'), [4, 1, 14]))
call_1353 = func_801_call(relay.reshape(var_1350.astype('float64'), [4, 1, 14]))
bop_1360 = relay.floor_mod(var_1350.astype('float64'), relay.reshape(call_1349.astype('float64'), relay.shape_of(var_1350))) # shape=(56,)
bop_1363 = relay.floor_mod(var_1350.astype('float64'), relay.reshape(call_1351.astype('float64'), relay.shape_of(var_1350))) # shape=(56,)
output = relay.Tuple([bop_1343,call_1352,bop_1360,])
output2 = relay.Tuple([bop_1343,call_1353,bop_1363,])
func_1368 = relay.Function([var_1341,var_1342,var_1350,], output)
mod['func_1368'] = func_1368
mod = relay.transform.InferType()(mod)
mutated_mod['func_1368'] = func_1368
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1368_call = mutated_mod.get_global_var('func_1368')
var_1370 = relay.var("var_1370", dtype = "float32", shape = (15, 9, 5))#candidate|1370|(15, 9, 5)|var|float32
var_1371 = relay.var("var_1371", dtype = "float32", shape = (15, 9, 5))#candidate|1371|(15, 9, 5)|var|float32
var_1372 = relay.var("var_1372", dtype = "float64", shape = (56,))#candidate|1372|(56,)|var|float64
call_1369 = func_1368_call(var_1370,var_1371,var_1372,)
output = call_1369
func_1373 = relay.Function([var_1370,var_1371,var_1372,], output)
mutated_mod['func_1373'] = func_1373
mutated_mod = relay.transform.InferType()(mutated_mod)
var_1471 = relay.var("var_1471", dtype = "float32", shape = (14, 2, 4))#candidate|1471|(14, 2, 4)|var|float32
uop_1472 = relay.erf(var_1471.astype('float32')) # shape=(14, 2, 4)
var_1477 = relay.var("var_1477", dtype = "float32", shape = (14, 2, 4))#candidate|1477|(14, 2, 4)|var|float32
bop_1478 = relay.add(var_1471.astype('int8'), relay.reshape(var_1477.astype('int8'), relay.shape_of(var_1471))) # shape=(14, 2, 4)
output = relay.Tuple([uop_1472,bop_1478,])
output2 = relay.Tuple([uop_1472,bop_1478,])
func_1482 = relay.Function([var_1471,var_1477,], output)
mod['func_1482'] = func_1482
mod = relay.transform.InferType()(mod)
mutated_mod['func_1482'] = func_1482
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1482_call = mutated_mod.get_global_var('func_1482')
var_1484 = relay.var("var_1484", dtype = "float32", shape = (14, 2, 4))#candidate|1484|(14, 2, 4)|var|float32
var_1485 = relay.var("var_1485", dtype = "float32", shape = (14, 2, 4))#candidate|1485|(14, 2, 4)|var|float32
call_1483 = func_1482_call(var_1484,var_1485,)
output = call_1483
func_1486 = relay.Function([var_1484,var_1485,], output)
mutated_mod['func_1486'] = func_1486
mutated_mod = relay.transform.InferType()(mutated_mod)
var_1790 = relay.var("var_1790", dtype = "int16", shape = ())#candidate|1790|()|var|int16
var_1791 = relay.var("var_1791", dtype = "int16", shape = (2, 14, 9))#candidate|1791|(2, 14, 9)|var|int16
bop_1792 = relay.maximum(var_1790.astype('int16'), var_1791.astype('int16')) # shape=(2, 14, 9)
func_1368_call = mod.get_global_var('func_1368')
func_1373_call = mutated_mod.get_global_var('func_1373')
var_1816 = relay.var("var_1816", dtype = "float32", shape = (675,))#candidate|1816|(675,)|var|float32
const_1817 = relay.const([-2.262675,9.053195,-8.706267,-2.865392,0.819012,-1.937170,7.921658,5.080470,9.574920,4.222484,-2.623686,-0.603253,0.205134,-7.666126,3.505126,3.959827,-3.818044,5.723780,-2.888213,-9.128289,-2.074794,5.685091,-2.156944,7.708719,-0.355129,-3.396977,-4.551649,-9.279669,-5.642968,-8.995067,-2.072584,7.576321,-4.359556,7.830332,6.005786,-1.590962,-9.333681,6.755203,4.426663,0.076238,3.132186,-0.193957,-7.274195,4.497379,-7.700650,-2.269536,-7.849362,3.395078,5.591505,5.020585,-4.990499,-7.686746,0.607661,4.215012,-2.262291,-5.485262], dtype = "float64")#candidate|1817|(56,)|const|float64
call_1815 = relay.TupleGetItem(func_1368_call(relay.reshape(var_1816.astype('float32'), [15, 9, 5]), relay.reshape(var_1816.astype('float32'), [15, 9, 5]), relay.reshape(const_1817.astype('float64'), [56,]), ), 2)
call_1818 = relay.TupleGetItem(func_1373_call(relay.reshape(var_1816.astype('float32'), [15, 9, 5]), relay.reshape(var_1816.astype('float32'), [15, 9, 5]), relay.reshape(const_1817.astype('float64'), [56,]), ), 2)
func_256_call = mod.get_global_var('func_256')
func_259_call = mutated_mod.get_global_var('func_259')
const_1840 = relay.const([-1.376482,9.539763,0.067321,-3.078120,5.093920,6.904597,8.298763,-7.062017,-6.332217,9.142992], dtype = "float32")#candidate|1840|(10,)|const|float32
const_1841 = relay.const([2.293059,-2.139799,5.187324,0.619080,-0.680396,5.228349,8.981373,-3.160075,4.597373,-5.167154,9.687633,-9.114755,5.258825,8.770196,8.376531,6.006262,4.058338,5.812666,-3.448540,-5.740530,4.163925,-0.257144,-2.280405,6.044915,-3.360939,-3.715448,-4.734584,6.187088,9.946506,7.909904,-2.945455,6.422208,-0.195056,-1.453055,2.508806,4.664410,-7.986589,5.791232,-3.402634,5.773908,1.238190,-5.757641,-8.593968,4.930090,-5.933151,-5.081304,1.817750,0.207572,-5.860528,-8.242532,-8.214070,1.795307,-2.412371,7.000014,5.823452,7.346725,5.580838,0.667560,-0.185902,7.427123,7.907150,0.210211,0.151931,-9.518638,-9.494693,6.763398,-0.151855,2.062372,3.149583,4.339220,7.327679,1.849486,5.415833,-3.452078,9.587240,-1.045964,4.254810,-8.514650,-6.923507,2.690344,9.293748,-4.568491,5.270592,-5.284818,-7.494626,5.702241,3.714272,-6.499500,9.870362,-2.983124,-6.371787,5.230745,-7.314084,-7.886472,-2.941946,2.218534,-1.732428,7.868719,1.796104,8.816081,-8.397136,-6.827769,0.970403,-2.975030,3.505036,-0.512314,6.819130,-9.693037,6.277943,4.472815,-2.938778,7.951647,-3.078127,-0.155032,2.942056,1.911142,-3.759136,8.557671,2.545416,7.256884,-3.809102,-4.813577,6.378461,4.690057,-7.113823,8.342204,2.487614,3.246883,0.174697,7.113881,0.832848,-2.606761,-6.073249,-5.830002,1.845590,1.730811,7.338678,-7.468480,-1.896134,2.609398,-3.591979,2.370849,4.686360,7.129701,-2.373916,2.911467,6.711197,6.818441,9.069199,1.286606,3.015686,-9.501517,7.244205,-9.223910,-9.425741,-6.589004,-8.506636,-0.589791,-0.064213,-6.310290,0.901324,3.269175,-3.564058,-6.796329,-1.005393,-3.665204,-9.672498,-7.064022,5.243106,1.714200,-3.809098,-2.235077,1.941077,-8.866643,-3.752354,-7.417260,0.126716,3.417470,4.820160,2.381011,8.718003,6.228996,7.066985,6.512328,-8.269395,-6.750037,-1.120264,5.088794,-6.339486,-5.884778,7.754111,-5.685990,-1.634813,-0.543584,8.973635,9.742998,6.547165,8.452966,-1.393913,-8.423691,6.061123,7.889971,0.510123,-5.873697,-9.257917,7.920810,2.749721,-3.665690,7.556276,8.852929,9.184564,6.436403,-5.750379,9.782802,-0.883563,1.414337,-5.576021,9.691851,-0.464759,6.604491,-9.688027,-7.447961,-5.282778,6.826777,1.954333,7.653905,3.338873,7.140687,5.785871,-5.387227,-2.506550,4.386143,-0.092115,4.730210,-8.258374,-9.731948,0.431293,7.181867,9.369370,8.283512,6.346345,8.454140,5.266905,-0.208928,2.301778,-3.553069,3.449749,6.615556,1.991795,-0.091070,5.699191,-3.196102,4.367244,8.551345,8.751149,3.364446,6.932394,7.664442,7.559334,6.596114,5.454074,9.327078,4.986441,-3.700973,9.077302,3.319231,4.860156,9.235067,4.632546,-5.860102,8.548489,3.618222,-8.984007,5.995002,6.375913,4.442776,0.725158,8.996194,5.788719,0.780471,-7.401297,3.131054,-7.718779,-1.696979,7.784652,-7.937679,-5.455477,8.104899,0.247014,-1.965025,9.539628,4.312466,-6.397094,-4.073143,-1.017079,-9.552785,-8.449961,5.368426,-9.963819,-7.976443,-8.767518,-6.348247,-5.650213,4.175078,4.237432,-5.769686,4.046200,8.978657,-1.213722,2.892168,8.752103,2.908244,-4.233249,-9.279678,-6.851539,-5.949249,-6.211423,2.392181,6.188903,-2.035590,5.436451,1.905108,-5.302434,-9.421569,-7.774179,6.282022,-8.029038,0.728078,2.158964,6.048582,-9.768115,-1.260069,7.423822,-9.446326,2.860796,6.852703,5.190142,9.201869,1.693906,4.717958,-3.005556,0.656520,8.031714,6.820938,-7.111268,3.592597,-4.627398,5.722480,9.711549,-4.028281,-0.426722,9.316441,5.796642,2.256648,0.791868,-8.896960,-9.593406,-3.576962,4.197742,-5.463720,-8.245921,-2.497229,-4.414818,-6.143626,2.977302,-2.555967,-1.640127,-1.883831,-8.404663,-7.070325,-5.076362,2.029826,-9.892960,-9.123639,9.352749], dtype = "float64")#candidate|1841|(375,)|const|float64
call_1839 = relay.TupleGetItem(func_256_call(relay.reshape(const_1840.astype('float32'), [10, 1, 1]), relay.reshape(const_1841.astype('float64'), [375,]), ), 5)
call_1842 = relay.TupleGetItem(func_259_call(relay.reshape(const_1840.astype('float32'), [10, 1, 1]), relay.reshape(const_1841.astype('float64'), [375,]), ), 5)
func_801_call = mod.get_global_var('func_801')
func_803_call = mutated_mod.get_global_var('func_803')
call_1848 = func_801_call(relay.reshape(call_1815.astype('float64'), [4, 1, 14]))
call_1849 = func_801_call(relay.reshape(call_1815.astype('float64'), [4, 1, 14]))
output = relay.Tuple([bop_1792,call_1815,var_1816,const_1817,call_1839,const_1840,const_1841,call_1848,])
output2 = relay.Tuple([bop_1792,call_1818,var_1816,const_1817,call_1842,const_1840,const_1841,call_1849,])
func_1852 = relay.Function([var_1790,var_1791,var_1816,], output)
mod['func_1852'] = func_1852
mod = relay.transform.InferType()(mod)
mutated_mod['func_1852'] = func_1852
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1852_call = mutated_mod.get_global_var('func_1852')
var_1854 = relay.var("var_1854", dtype = "int16", shape = ())#candidate|1854|()|var|int16
var_1855 = relay.var("var_1855", dtype = "int16", shape = (2, 14, 9))#candidate|1855|(2, 14, 9)|var|int16
var_1856 = relay.var("var_1856", dtype = "float32", shape = (675,))#candidate|1856|(675,)|var|float32
call_1853 = func_1852_call(var_1854,var_1855,var_1856,)
output = call_1853
func_1857 = relay.Function([var_1854,var_1855,var_1856,], output)
mutated_mod['func_1857'] = func_1857
mutated_mod = relay.transform.InferType()(mutated_mod)
const_1957 = relay.const([[[-4.358308],[3.512676],[-3.329453],[9.598542]],[[8.885571],[6.531620],[5.535692],[8.415385]],[[-1.163479],[5.156688],[-0.358529],[-1.956368]],[[-2.779160],[1.804346],[8.277167],[-9.576672]],[[2.371747],[4.653181],[-1.463840],[-9.128208]],[[-3.489470],[-4.566511],[0.805186],[3.617086]],[[-7.906178],[7.969286],[-7.792949],[-9.254809]],[[-7.099035],[8.297540],[-6.753320],[3.204737]],[[2.278421],[5.833644],[0.080148],[5.976449]]], dtype = "float64")#candidate|1957|(9, 4, 1)|const|float64
var_1958 = relay.var("var_1958", dtype = "float64", shape = (9, 4, 1))#candidate|1958|(9, 4, 1)|var|float64
bop_1959 = relay.greater_equal(const_1957.astype('bool'), relay.reshape(var_1958.astype('bool'), relay.shape_of(const_1957))) # shape=(9, 4, 1)
func_453_call = mod.get_global_var('func_453')
func_456_call = mutated_mod.get_global_var('func_456')
const_1965 = relay.const([2.879505,6.975557,5.801769,-3.853444,5.747256,1.298092,-6.787959,5.822530,9.634507,8.267922,6.734633,-1.858259,-2.791009,-4.902755,-7.595826,7.468006,5.792401,1.102364,3.170825,0.947111,-2.946875,8.653209,-4.394732,-6.404316,-1.261924,5.039744,-3.219520,-9.562366,7.491864,5.176075,6.132184,-4.971818,4.861203,-8.126079,9.661564,7.291951,-4.770923,7.913996,8.121336,-0.906340,0.781179,5.597508,6.137342,-6.590916,-0.575362,-4.254115,-2.967311,1.296323,-3.990651,-5.364250,7.118425,-8.132513,5.401960,-3.556928,5.230073,-9.365404,-7.695860,-0.025661,-3.535891,2.164978,-8.003713,-7.430526,-9.514864,-7.829483,9.689856,-0.695878,-5.015096,-6.873250,-4.317719,-3.953873,-9.398151,-0.139432,1.110603,-8.987445,9.890120,-9.878506,-5.554248,-2.434760,-8.896578,3.806352,-0.076465,-1.091904,-1.400398,-9.962901,-0.363663,-1.971286,2.006577,4.161485,-5.532384,-4.641361,0.561128,2.075189,-3.638301,-3.305188,0.420917,-6.376957,-6.344911,-0.388734,-0.689915,5.902550,-8.502228,3.812401,1.458689,-3.079778,-0.979508,5.700625,2.052389,9.124184,9.357998,0.452063,-2.009170,-4.465138,-5.001663,9.146256,6.278304,2.501588,7.027864,3.976624,-7.638241,-9.515542,1.855065,-1.725652,-4.334518,-8.328445,-8.105869,-9.271134,4.677688,0.144589,-7.391136,-0.792251,7.313606,2.859251,-4.083350,9.206939,-5.964031,-1.987448,-4.853963,-1.072292,-1.119713,-6.399821,-1.132769,5.264505,6.054703,-8.340264,-0.107007,0.933817,-7.928628,-3.705625,6.199195,1.981644,2.599507,3.647557,5.792399,-5.089423,-7.425454,-4.374111,-4.368720,5.958138,-2.822461,0.786469,-6.917602,-0.560152,2.801926,-7.744773,0.560456,-3.166786,7.360697,-4.703627,1.958586,-8.459828,4.344751,3.952861,7.104971,9.204939,-9.436375,-2.713707,8.636739,2.008160,2.857150,0.360768,-8.936637,7.210634,-1.468874,-8.018883,-5.858527,0.793616,7.008453,0.805609,9.965220,-7.874082,3.737846,2.425215,5.536015,2.422047,-9.620001,0.754883,-0.919395,-7.114647,-3.951056,9.488759,8.932524,-1.263704,7.461888,8.832623,-2.678867,-4.398127,-7.543762,-1.330087,-1.530927,-6.171320,1.397406,5.397040,-2.313314,-4.603032,-1.818595,-5.775186,-5.611994,-8.997609,-4.194145,8.570911,8.487398,6.241656,9.256018,-3.501025,4.609679,-7.885281,-6.322400,0.343256,1.972600,-1.299971,1.412748,4.130362,9.166234,8.809425,-6.441084,9.086689,-6.563907,4.830108,-1.508993,1.073994,6.657663,-5.241689,-9.107125,-9.262100,8.171747,8.217038,2.816940,5.686488,7.144303,0.304785,2.870503,3.265894,1.485639,1.634871,-1.208989,6.931115,-3.265406,-3.783801,0.382423,-9.978088,4.309766,3.277648,-9.320638,8.232712,5.192848,3.190166,5.568878,-2.508840,-2.345081,2.858291,5.575959,-6.613985,-1.975106,-0.050717,1.055639,1.364154,-7.380340,-1.243437,1.601626,-5.776039,-3.522956,9.948181,9.416873,-1.422502,7.172184,-1.797372,-4.673959,-0.664713,8.429894,3.141899,8.171969,4.077448,3.535710,-2.763062,-2.871076,-0.453328,6.011147,-1.151769,5.900573,-1.780327,-0.700080,9.134382,8.530012,-3.680909,-6.490830,5.631948,-8.879640,-4.541598,-0.077393,-7.993334,5.372616,4.212269,-8.862946,4.675443,-7.624578,-9.353309,0.682090,-6.533037,5.886819,8.135714,-1.957977,7.723897,-2.078360,-3.247026,-6.995919,7.716313,6.006857,-4.210632,-7.738159,-8.428928,6.486052,-0.955068,-6.599051,4.050976,4.080143,-1.415757,-8.858106,-0.293427,1.282382,0.167633,9.001753,2.587026,-6.288824,-1.058325,-8.175122,5.854249,3.063411,-7.963344,-7.377619,2.555618,-0.021744,6.011767,9.142762,9.567102,9.593471,-7.573326,9.002110,5.963206,-0.573911,7.546939,-8.447371,-2.978068,-9.618679,-6.718071,9.596629,-7.479547,4.503250,-7.844897,8.795473,4.656907,-9.279271,0.534863,1.026658,6.567447,-8.804546,-3.783718,-0.775575,-2.769148,3.960888,5.479237,-4.146360,2.474180,-2.961189,-4.150613,3.747874,-8.584628,4.740659,-3.688659,-8.746003,-5.466200,-1.286607,-6.033379,-5.203373,3.076466,4.474044,-8.815244,-7.536294,8.627702,1.786154,-8.464801,0.036197,-7.726465,-4.262440,7.483907,0.416957,0.225386,5.130238,-4.558361,-5.183936,4.620380,-2.978856,2.383913,2.445878,9.773081,-5.026096,-2.588980,-6.313399,-2.672219,5.929300,-9.392353,-9.502958,-2.223314,2.246049,5.974689,-0.700403,6.268435,-6.387733,2.246406,7.783988,-1.398354,-9.807719,9.236279,5.078777,3.085626,1.337326,7.447124,1.728859,9.835583,-0.957894,-2.969624,-6.155028,-4.929999,-6.983581,-4.186911,-1.626158,2.848253,2.298420,-5.314176,-7.740999,9.193408,3.294382,9.416634,-2.226855,9.900217,9.625299,0.016277,3.987663,-2.178786,0.135727,5.606903,4.740401,-7.289874,5.123470,-7.778305,-5.973124,2.307754,-9.962776,-8.037709,-2.453312,-5.918380,7.774433,5.970050,7.079593,-3.413514,-1.113595,-2.108634,-2.869535,3.501118,6.259417,-6.162813,4.946073,4.920421,-5.815846,1.268937,5.986936,4.648371,7.008835,2.229787,-2.490605,-3.595814,6.106307,8.412405,8.657925,2.204288,-7.956256,6.080025,-0.307678,9.122200,-6.103800,2.459593,-1.905962,2.342473,1.390935,-3.346511,-0.782597,-3.396733,-6.430646,-5.887551,-8.864756,-4.542332,1.698759,7.049288,2.310422,-0.167385,8.885396,4.994067,-1.177234,7.311804,-6.463120,-0.885557,-3.858442,-6.207298,-6.685504,2.932443,6.261190,9.471918,3.409806,-3.241995,0.078796,-7.110790,-0.066399,9.509289,-3.115502,-6.588974,-3.431192,-3.334783,1.974055,7.307431,3.959053,5.015337,8.509298,3.250700,7.358544,3.827539,-2.782141,2.047491,1.869940,-1.626577,0.519489,-6.690254,0.608503,1.562061,-0.163665,-9.872368,7.452126,-7.326865,-9.479115,4.371223,6.851578,-5.434798,-8.318456,-6.955882,-7.370632,-1.685322,3.602696,-2.716295,8.884685,0.805391,-9.111886,8.988814,9.360950,-3.519916,4.141017,8.157020,-9.140876,-0.718010,4.431818,0.095038,4.728402,-3.061159,-3.282284,8.323059,-0.122347,0.281324,-3.836829,-9.419004,-3.777113,2.137070,-6.252679,-8.825711,8.987404,7.938895,1.169550,-2.396200,-7.627142,6.511600,3.637852,-8.448228,-1.236861,5.279008,-0.917174,-0.631076,-1.391539,-3.232595,7.023868,-6.691845,-5.518670,5.659010,-9.296432,-7.475199,-1.822129,2.745060,1.431270,8.283797,-3.219678,-5.082848,-6.825706,8.150981,5.798170,9.124915,0.600275,8.705879,-0.414646,0.088106,-2.713298,3.151714,-8.193506,9.494150,3.594420,7.656780,4.730382,-7.041187,-4.808175,-7.240097,-2.187825,-7.504604,5.533963,3.715131,9.954826,-0.699753,-2.750000,-6.984239,6.387830,-4.502317,4.873033,-8.202179,-6.513780,-8.723229,-4.939096,-0.557738,9.995996,-4.687081,-3.688611,-8.305331,0.446916,0.214908,-2.713297,-7.930306,9.973222,-4.835993,-7.620850,7.175617,-7.227398,1.309247,5.387984,1.909930,3.093326,9.100682,9.379482,5.287062,7.193040,-4.088963,-4.717693,6.634729,-7.954353,-1.305737,-5.177908,7.043621,-5.682545,5.133105,-5.654532,-5.773522,9.476875,9.911914,1.720608,0.666265,8.348116,-2.263039,-1.146437,-6.233756,-7.115707,4.682933,-0.050979,9.401899,3.034097,-2.728136,4.047386,7.736724,3.739900,5.167757,9.870038,5.134504,-3.271273,0.567508,1.046802,5.244941,-5.809028,-1.150349,4.032476,8.493668,-5.377288,-0.454433,-9.657326,-6.116017,-0.616207,-8.409516,-4.042317,2.551748,-9.644572,0.950416,-6.428535,4.298136,3.323435,5.842490,4.010944,-3.571700,0.501401,9.325869,-3.568069,7.861768,2.839593,6.185035,0.085601,-8.182559,5.425550,6.693952,5.620400,-0.884167,-1.911205,7.814036,1.220144,6.005771,6.249525,-6.977919,6.376173,-6.250858,-2.944344,-4.665018,-3.128520,5.027220,4.992644,1.965321,0.968514,5.081031,-7.981173,4.364146,-0.183075,-4.635802,5.892757,-1.369988,-0.426157,5.614837,-1.498102,-7.821559,-6.219521,-6.507750,-6.224599,-9.465582,4.452972,3.391664,1.396748,7.455481,0.995531,9.490663,7.840615,5.744050,-5.571035,-2.089863,5.129677,-6.378966,-6.065750,1.750847,-1.771920,-1.025217,7.809905,2.379859,-5.800669,5.534758,-9.716955,-2.686999,-3.853658,9.901190,-6.898436,3.636168,-7.908249,0.095012,-3.590968,6.893925,8.250178,-0.556008,1.246960,8.141094,7.374765,-3.265205,3.066661,8.210782,-4.669448,-7.065436,-0.834999,-0.075373,8.025094,1.238533,-1.711625,8.619976,-0.616820,7.748376,7.067466,3.151182,2.729212,4.983466,-0.555470,-1.435966,8.087410,0.923760,-9.761213,3.794605,2.312456,6.346385,1.339620,5.159487,-5.966070,-7.025069,2.722606,-2.964558,2.796250,3.316674,-2.724248,-7.497103,1.995456,1.915345,-6.880162,5.124066,8.132061,3.683141,8.120228,-3.562691,4.105438,-4.431196,-5.337898,1.854393,-6.225653,5.157468,-1.028283,-0.325366,2.744642,3.152693,-0.073222,-1.318162,0.497860,4.759157,-0.338747,2.922807,-2.649921,4.369524,-0.345906,-0.443566,9.459870,-4.784161,3.088778,2.849087,-9.110818,-1.504657,-6.129054,1.270272,0.172418,-7.756971,-5.139128,8.593420,8.709810,-5.916014,-5.517142,-1.199042,-0.126081,3.017919,-4.105658,2.015638,-7.691632,5.646890,-0.935018,-5.903834,6.612776,5.219038,-4.095601,-7.347514,0.150803,-9.374499,8.520334,-9.292714,9.901090,-6.948967,-6.310255,-5.552556,1.031133,8.827550,-5.452756,0.867665,1.193779,-0.055316,-0.161895,3.145609,3.714244,8.326082,8.043542,-4.165240,4.987142,-9.955730,-8.569846,-8.491365,-7.118040,9.561518,-3.048735,6.970226,-9.109212,8.891460,-3.487106,-9.315011,-1.374947,8.035486,9.885373,-8.665814,-6.491743,7.549065,-0.397017,-4.961193,7.401915,4.083026,5.565984,9.774328,-4.207546,-7.824115,-6.810925,-7.749687,-3.261769,-3.636280,-4.745081,-5.483983,8.417877,4.803840,-5.862113,-8.925122,-4.781812,0.331145,-5.374248,3.947031,5.404178,-0.925498,-5.963419,4.254722,-0.083331,6.097057,-2.311655,9.001716,6.388146,3.837664,-9.422873,7.695443,-6.467802,-3.990823,-4.794524,8.434987,0.926124,3.054407,5.226814,-7.057872,-3.315101,-5.120390,-1.534290,-0.357585,-5.758541,3.835085,0.002479,3.813260,9.850403,2.605592,8.649429,5.387408,-7.392096,1.023504,0.680822,8.152642,9.543935,1.114808,2.240288,3.892184,6.356518,-1.836968,9.367753,-1.602509,-4.049977,-1.606482,6.917589,-5.433904,-9.607369,2.424682,-4.009454,3.565988,-7.642256,5.235289,-6.539821,9.111173,0.207504,3.309196,-1.302379,1.745617,0.338238,-4.240505,3.868514,-1.247771,-8.644698,-8.179411,-7.185059,-8.148609,-8.539977,-7.159269,-2.589678,-1.414980,6.509649,9.401023,-3.665941,-1.635637,-2.026301,-4.407373,-6.113003,-1.899534,-9.311190,3.001379,-2.035837,0.568173,5.498213,-5.232267,2.463174,5.146268,-0.061187,-2.948320,8.474744,-5.204779,-7.061557,9.013122,5.092139,0.480288,-6.240317,-6.862444,1.281476,9.271882,7.020024,-6.651977,8.497067,7.441410,-7.624199,-6.016112,9.799788,-6.208065,1.495160,-1.902320,1.404019,-4.928529,-5.779523,-3.901739,-3.015333,-0.454029,7.134935,-2.521771,-1.958017,-5.986267,-7.933878,-9.271729,6.265016,3.868583,-0.927389,4.774068,8.440576,-6.752058,-9.209075,5.137572,-5.249347,-4.874227,4.795716,-7.254366,6.712432,-0.655650,3.428132,6.611513,9.144838,1.065457,-7.785115,3.010106,-1.674077,4.703403,9.015144,3.945187,-8.791504,5.346074,4.602524,7.127060,0.225011,-4.365092,-2.384398,7.942528,-4.174936,1.204414,-0.403155,-9.978645,-9.606460,0.246731,6.483536,-9.484497,7.314290,5.231027,1.471868,2.565650,-0.223467,-1.493334,9.151378,1.575363,-6.911495,-3.395568,9.580505,-0.630891,-2.256435,0.999660,-2.388884,6.782504,-3.350752,-3.509155,2.004192,-7.310631,9.298920,-4.275628,-0.380040,-0.374129,-3.352348,0.084628,-9.057811,-1.784888,-8.818083,-6.727139,9.655113,-0.779115,-8.336898,6.540067,-0.735795,1.080059,-5.635431,-0.804756,2.400501,-1.013546,2.433210,-3.650176,9.389701,-0.482040,-3.144370,-2.397436,-4.930058,5.473730,-0.686514,-5.672142,-6.837651,-4.745865,6.093987,-1.322779,-2.265702,-5.828089,-8.050922,4.264790,5.149814,1.425408,-6.342336,1.979370,-3.043289,8.767085,-3.233285,9.535403,1.119713,0.923438,-4.208507,-8.970317,-7.563191,-1.346330,5.962413,-2.636558,1.646760,-0.965257,-4.227475,-1.262824,3.528731,1.959049,3.385196,-0.719784,-2.953921,1.963640,9.157553,5.214109,2.329439,3.893849,9.695398,2.233329,5.727633,-9.948881,-3.885048,2.371596,-9.919031,1.074713,6.246148,2.127559,4.007450,0.285097,-9.689964,8.016904,-5.912763,-4.068683,-9.488240,0.116521,4.879425,0.545598,-8.996232,6.106305,9.959367,5.523774,2.562723,9.545327,7.715562,9.768897,8.579368,9.650863,3.095058,-3.144378,-2.061166,-9.187231,1.940363,3.045949,-2.592138,0.169400,8.712532,-2.891199,9.534807,4.591613,-2.990041,-8.610789,8.195244,-0.191641,0.464185,7.129241,-9.103810,6.149469,3.511532,8.609307,-8.225609,-4.862896,0.916811,-6.694390,-3.720402,-4.725311,-2.845753,-7.532980,-7.618746,9.091788,1.374117,4.959732,-1.705839,-2.737318,7.731237,2.092146,-3.003372,6.730584,-1.635630,-6.304153,-3.302423,-2.775490,3.126321,-6.018101,1.175812,7.282085,-1.646755,-9.140999,8.444998,2.712497,-6.190223,-7.358874,-7.649445,0.100994,8.135025,9.762901,-3.533588,3.624014,-4.318491,4.083699,6.407576,4.404894,-1.188092,-3.137831,-3.268364,-3.850721,-4.925830,8.039911,2.841780,0.198531,-6.115678,-9.725745,-5.705875,-8.598392,4.054760,-6.238882,-0.713130,4.776641,1.666966,-5.883149,5.898610,0.639452,-0.818496,-8.489448,2.403414,-0.213949,-4.669685,-7.496006,-1.553541,6.917788,-0.254847,-6.048444,9.550870,6.003645,6.000574,-3.202437,5.492971,-3.544421,-9.526898,7.638581,8.269932,8.539065,-8.236792,-8.012981,-4.272048,-5.407968,-0.951023,8.828834,-5.507871,-6.658539,5.300208,-5.666091,-9.230855,-3.794075,5.553409,-1.770511,5.839398,-5.909712,2.955651,6.997748,2.671616,0.680542,-1.362280,8.065035,6.146936,4.498973,8.993429,1.042750,-0.673445,-1.695316,6.109201,-8.061771,0.204187,-0.870448,-5.457724,-9.755590,-8.381625,9.526682,7.985899,7.099426,-3.662584,6.877128,4.273202,-9.731987,-1.823608,7.275589,0.276268,-9.271364,9.415510,-1.382859,-8.713769,8.137256,-0.114851,-2.786052,3.030639,-7.893933,-7.144884,0.188377,4.592010,4.712185,8.624757,5.189979,7.285089,9.600713,4.791953,-4.738151,-4.693310,-6.857596,-6.195410,-8.090360,-7.501315,4.696918,-9.718398,-9.913857,-9.368321,1.265062,3.917914,7.719483,2.203397,2.533739,-4.800777,-0.933004,0.473363,9.930231,6.542721,0.479772,-0.199650,-2.627033,-2.246554,-3.664855,9.364616,-6.372233,1.934767,0.165343,-5.840934,9.531729,-5.822754,1.453336,-0.194266,5.557427,9.022613,6.274038,2.682939,-3.081712,5.513960,3.998778,2.582691,3.623898,7.414888,9.959551,0.790655,-6.929295,-9.814534,1.709233,-3.653204,7.117643,9.087247,7.821727,-8.223483,-4.298797,5.582509,-6.448136,9.124504,3.534811,-2.118207,-1.299830,8.509221,0.940413,4.157769,-6.931969,5.583696,2.071210,-2.882084,-4.313309,-9.524802,-6.519351,-1.663154,-8.621518,-4.698101,-4.636874,-2.043723,-8.747273,0.740399,-0.362209,-0.148740,-7.518605,-6.032254,1.042183,-3.129125,7.798142,-0.113066,-3.993990,9.198910,1.476545,-1.154917,-9.033486,-0.889036,-5.782432,4.950437,-0.896611,8.583904,9.850567,-8.172615,5.249741,-7.784981,-4.158077,-1.802786,6.595131,1.605204,-4.033318,-6.377090,9.763558,3.326509,-9.486952,-6.871826,4.653319,4.880342,8.303143,6.875758,2.735515,7.859646,-9.352865,-2.445480,7.565389,-4.737905,-0.392693,2.386025,-0.408059,0.698711,6.871502,1.342516,-6.363154,9.945819,9.280182,-2.814209,6.937114,-9.847244,2.277469,1.919069,-9.970758,-5.116350,5.182077,-9.414729,9.830971,-2.407584,3.977917,7.749353,0.793003,9.348505,3.111530,2.522125,-1.383514,-8.286391,-9.944871,-8.994035,-0.640625,6.722288,-3.476387,0.069949,-4.301274,-0.659692,1.617929,7.984884,0.128751,4.670561,-4.627422,1.569670,-9.101122,-2.162228,8.946140,-6.603377,-5.984568,7.542409,0.594662,-5.041076,7.787030,-3.375843,-3.832623,0.189037,-9.951342,-2.343375,1.885267,3.450125,4.656601,-1.602096,4.875711,-3.209245,1.578150,-3.443190,-5.390542,-1.341599,-1.457823,7.506353,-9.558713,-7.519818,8.895639,2.359187,-0.772156,8.847787,-1.224405,-3.236202,-4.787431,0.914261,5.207204,-3.993651,-8.637003,7.195109,4.498772,7.156795,2.801926,3.084571,-3.587119,6.616128,7.007065,1.639169,-3.147868,1.285577,-5.165220,-1.850587,3.475512,-3.719579,2.478496,-0.713166,-5.427779,-0.985126,8.573822,-0.780314,-4.242542,-2.484367,-7.456190,-7.211211,4.599816,2.043291,-3.472200,9.451150,1.875394,-2.579615,7.233272,5.291891,-6.747205,1.359826,0.637320,-9.189460,3.126294,-0.413975,-6.321496,4.482767,-7.135556,9.462304,-1.921041,-7.620553,-2.847293,8.973955,6.176130,2.811528,-7.267141,1.307792,9.310313,-1.396932,-1.625976,-4.310319,5.961920,8.129179,3.347604,-6.711413,0.521190,4.702013,4.880409,-2.953719,3.326819,2.029649,-2.426307,-8.921052,-6.140225,4.358331,6.951138,5.299715,8.239843,-1.923310,4.410642,-9.464837,-4.567012,5.850178,-5.696285,-8.184476,9.756286,-8.986640,6.397938,9.162982,6.693773,-0.240482,4.873804,2.194361,-9.553436,9.144400,-0.362350,5.599192,0.408140,3.404984,-1.533627,7.656815,9.339639,0.042766,-3.167104,-5.674398,6.332916,-3.214119,-7.153596,4.347658,-9.166394,-4.114095,9.326303,7.959062,-3.242113,-4.094970,-0.493624,6.898402,9.901179,-0.548433,9.759205,9.762639,-8.522407,4.783480,1.954330,4.451125,5.798152,6.826809,0.410598,2.215466,2.260540,-9.414886,-4.150605,7.726331,0.546304,3.586005,-5.558576,2.942917,8.802080,1.531132,-8.896635,-9.809718,-5.060694,-0.398475,-4.652208,-1.230340,9.202238,9.862046,-1.648387,-9.997378,8.739576,-3.885025,-2.209837,-0.801021,0.553316,1.090316,-3.316701,3.907973,1.091403,6.327356,-7.509145,8.212732,-8.906191,7.551810,6.683956,-0.920532,6.629798,-1.647825,5.247683,1.470980,-1.767433,-2.199613,-0.119705,2.081846,7.958104,4.466732,-8.531960,4.545839,-9.780385,4.966042,-4.779575,-3.952325,0.893993,-7.219890,6.746131,8.184613,-1.483322,-3.469016,3.876726,-7.147561,-0.766638,-0.818565,-7.358320,-7.434803,-9.552986,-6.142619,7.000260,7.506876,6.234984,6.866415,5.766061,-2.332108,-3.561039,8.991868,-7.631644,-1.710462,5.255001,-9.094629,9.653621,-1.449201,-2.427250,-9.948145,2.353653,-2.133997,6.770557,2.138246,-1.550548,-2.330827,8.547790,9.790340,8.231421,-2.539166,-1.068503,-8.032819,2.060892,-4.807142,4.042072,-5.192886,-0.195033,6.877274,-3.650001,-9.815898,-1.809188,-8.153105,-8.772065,-4.285089,2.050860,5.576544,1.600852,3.063014,-2.164712,-4.373296,2.594345,9.453477,-2.700945,7.280212,0.393818,2.286058,6.249667,0.490046,0.770133,9.802065,7.541917,2.874586,3.347896,1.904237,-4.649924,3.866657,-8.201381,0.284933,-9.160949,-8.378617,-1.707612,8.717667,1.705422,-8.283106,-5.902825,4.562609,-0.448993,-3.304196,-0.177333,6.533696,-3.071439,-5.905939,1.128603,9.287570,-6.994900,-3.471091,7.032807,-1.493037,-0.150266,-4.860682,5.734702,-1.592430,-3.482821,2.283483,2.566408,5.280193,2.986460,-8.931377,2.983212,-2.924173,4.022347,-6.502163,4.995125,2.665380,0.796308,-4.377385,-5.809100,-4.860656,-6.401025,3.586923,8.077628,8.706246,-1.343930,3.609585,3.994364,4.554866,-6.206918,9.794712,5.440488,-4.772549,-6.664249,3.359977,2.613894,8.609294,3.913018,4.400821,7.309347,6.673213,2.439666,9.060367,6.693928,1.512829,2.314235,4.470631,-8.807107,8.565117,-3.052808,4.496812,0.676855,5.136033,2.176331,0.148906,8.509684,-5.637786,3.483013,9.333206,-9.597434,8.775625,-7.441381,-1.871350,-3.835608,0.644104,-3.798078,-2.243657,-7.316722,-3.574155,2.743487,-9.648109,7.889810,6.639198,7.454358,1.697986,9.421690,9.292333,5.982297,-3.906395,5.691849,-2.549728,-5.815637,4.581979,8.254361,-7.247174,1.131867,8.797750,3.266543,-5.710442,-0.434860,2.919915,-6.092502,6.467301,-2.634938,4.819972,1.406715,-2.213464,-3.965126,-3.657116,3.495882,-3.364078,-6.018372,5.558561,-7.791769,-5.872910,6.091197,6.626242,-2.632574,5.319263,-3.056110,-3.157700,4.914143,-2.644704,7.379860,0.006213,3.842856,4.639841,2.122033,-4.660803,-8.978199,-0.350895,-7.899026,4.955293,-4.595773,9.514175,7.715686,2.966472,-7.591750,6.025350,-2.238880,6.804841,-8.561032,2.457730,4.892422,-7.368399,-9.722540,-3.013236,-3.670570,4.399399,-0.380185,6.213239,2.934941,-6.571199,-6.245254,2.862350,-6.899513,8.404539,4.309287,2.467657,-7.168223,4.625757,-3.582861,4.820833,9.512191,-9.341664,9.155068,-3.980182,-5.639481,4.846445,-0.031217,2.453256,6.076869,7.754309,-8.263479,7.702336,-4.563116,1.881482,-1.628112,8.441722,-0.161163,-3.913106,-9.453253,-3.794905,6.266128,1.320749,-3.196741,1.205326,6.670435,-6.037332,1.816678,-5.991282,-5.819600,-5.073580,-1.929493,4.225694,1.603399,0.462868,-9.630492,-3.346585,7.935986,1.032169,8.413861,0.707191,5.872207,-3.701267,5.871231,3.021493,-0.006669,7.484220,0.018593,4.950302,-7.730008,-9.053812,-5.712785,-0.309741,7.080862,4.122938,-0.351222,0.954022,3.679634,-7.759067,7.181666,-5.748480,-6.236178,-6.013874,-9.847557,-2.052906,-7.950435,3.195818,-8.714005,-3.769474,1.303357,-4.982049,-1.429972,-4.815181,2.734129,7.005855,-1.597482,-4.336833,8.579515,-9.098151,9.221377,-9.918390,-5.239946,-0.736806,0.897784,-4.172017,6.175185,7.821086,-2.553686,9.972737,-7.459436,-3.807497,-2.011412,6.977442,-7.964281,-0.991635,2.714249,6.033766,-4.272528,-8.874516,5.521530,7.195517,8.648407,-9.173959,-2.116495,5.360463,-9.529558,2.095795,-3.870390,-3.840143,-4.364907,-2.370891,3.168390,2.723031,-7.088766,-0.237225,-7.446598,-7.617233,-0.251252,-2.327219,-5.117743,1.511007,2.735206,6.982870,-3.498943,-3.089934,-6.000040,-5.263869,2.239655,-7.444821,0.147011,0.532998,-5.055869,1.037362,-3.392396,0.503165,2.631174,-0.989578,2.114143,-2.757145,5.355741,-4.104876,-4.007706,-9.994376,4.227531,6.402666,3.457420,-6.525003,-9.276266,-8.898912,4.481674,1.741153,-6.154395,-9.110273,1.671162,7.053693,7.526949,4.162737,-1.718219,5.703572,-6.597875,-4.332992,9.637649,6.820950,-5.030025,3.341686,5.571077,-1.847688,-4.583836,9.083699,-1.873951,-6.661553,-8.532018,2.233639,2.328329,-4.608081,7.185754,1.025956,-1.812169,-5.450209,-5.109701,-1.249002,-7.277990,-6.471284,5.332857,-9.712127,-1.293527,-6.099349,-1.847179,-5.176639,-3.443925,9.064532,4.421994,9.097009,0.236583,7.460894,6.371455,9.997551,-0.183039,-2.166652,5.938926,6.198677,8.734321,8.940185,4.321437,-5.947944,-0.705615,0.668416,-9.771247,0.847145,-4.081185,-5.597499,0.031180,0.599164,7.766067,9.245119,6.533325,-5.939034,-2.221286,-6.628178,1.100929,-8.321869,2.570975,-8.470538,-0.245736,3.888636,-5.099743,-9.906251,-6.018236,6.137981,4.471519,-9.738675,-3.303826,7.444928,-9.083012,-1.569299,-8.453265,-7.748952,7.356164,-8.059212,-2.911173,-7.992127,5.685689,-6.074945,1.028589,9.603749,1.299925,9.715356,-5.469695,-4.236212,-7.486754,2.741662,8.064972,-1.874601,-0.683503,-9.457235,5.150199,5.906457,2.055571,-1.525740,8.156186,8.024902,4.496703,-1.893532,-9.860031,0.981339,-7.102271,2.502740,-7.197426,-4.512241,-4.430670,0.836159,3.046204,-1.832257,5.565166,7.815956,-1.424739,2.813439,1.735843,-7.519740,-1.594789,5.763601,-9.903254,0.037357,-2.367259,8.331279,-1.107852,-3.002900,0.615502,6.553350,1.268791,8.348768,7.689407,-7.258004,1.649781,-2.057978,-3.688630,-6.772446,8.044307,4.230378,6.828544,-0.487386,4.418720,5.234433,-8.405434,0.329717,-3.342606,4.198059,1.764382,-9.470751,-1.424508,5.091136,-4.921932,9.592829,8.506892,-2.644789,4.646088,-5.294469,4.126423,3.055234,-7.128576,-7.351552,-5.729644,5.657369,7.036025,-6.313697,-4.660525,-2.148780,5.920818,-9.813064,-8.649583,9.680101,-2.459948,-1.281371,1.615579,1.407454,0.544720,-1.400802,6.818026,8.963045,-2.343948,0.273819,5.655497,6.764329,3.633693,9.172304,-0.391537,-1.441392,7.876760,9.682242,-0.651586,-8.321556,-0.790813,0.592496,-8.900115,-4.629700,-9.462601,-1.628128,4.426770,-0.492898,4.270502,-7.543025,-8.188546,-6.929776,1.634412,1.726079,-0.166272,5.306014,-4.626070,7.425440,-6.892898,8.022936,7.087507,-2.294104,-2.436437,9.554146,0.271733,7.772344,-5.562329,1.241809,4.292200,-2.128827,-8.512397,-8.178295,-1.004120,-4.588741,0.388550,-4.338725,7.330645,3.321590,0.334260,4.455312,-0.971638,9.926828,0.118394,1.975856,2.211757,-1.655130,2.498402,-3.895834,-8.339288,-7.288071,2.572525,-7.111975,-5.072654,-7.064892,1.084577,-0.632378,-8.253005,-9.314615,-6.698858,4.327696,2.949523,6.862551,-2.663428,0.924220,-3.563494,2.199558,-6.156085,-6.093601,4.437369,-2.893967,9.525845,3.904064,-7.547781,7.699397,8.815441,-1.225455,-7.216867,2.311771,-7.998772,-3.482480,2.975655,-1.038551,9.190547,-6.031038,2.822946,2.926674,2.646950,-0.459703,2.933891,-9.604689,-5.187695,2.340564,-3.873181,-9.208052,9.000656,-8.432482,-7.017473,-8.019412,9.287506,-5.365986,-4.018904,0.315135,-2.825144,3.414595,9.122452,-6.291882,5.935172,3.669912,7.656251,-2.624142,-9.114987,6.546458,3.797958,-0.085440,-9.180821,6.561016,2.342828,-4.274867,-6.941416], dtype = "float32")#candidate|1965|(2496,)|const|float32
const_1966 = relay.const([-2.802332,1.978148,-2.773210,3.082133,-4.993260,4.287941,-6.782204,6.472569,-3.351629,5.581980,-4.749983,-3.920679,5.419998,3.383717,0.050063,-4.333905,5.902045,4.720731,-0.692125,-2.993905,-5.398367,-7.021590,-0.534799,8.627810,2.415121,-2.121591,1.529140,-5.745336,4.539751,2.444739,-7.780278,-3.252573,-0.118938,-9.460470,-7.282757,3.440948,-5.484589,6.960035,5.923607,4.094119,-7.221356,3.449962,7.943464,-3.909026,4.317250,3.619403,5.318685,2.389031,7.400667,5.015117,-3.473696,-6.439951,-5.169676,3.897696,-6.063604,0.357175,-5.704640,9.262894,-0.649911,-4.917999,6.432994,-8.723392,-7.031328,-5.795384,5.184246,0.897171,-9.585571,-7.158798,-5.954813,4.583216,2.920410,4.256321,0.611064,0.283274,-4.450315,1.016487,6.212928,-4.828355,9.260288,1.436090,-7.919098,-3.034390,-7.339973,-9.084805,-1.464904,0.799332,-0.107652,9.922109,9.516202,6.781791,-9.488433,-6.519092,-4.458028,8.808357,8.451754,-0.813439,-2.602888,4.919020,-1.615693,3.258504,9.953923,-1.946508,5.257163,6.265661,-0.987016,-0.386057,7.499348,-0.966129,1.335452,8.837712,-9.947818,4.914423,-0.991912,2.426318,-3.972542,6.723164,1.614633,3.583145,5.336574,-1.687739,6.500405,-8.193099,4.048719,7.549105,5.012056,3.316994,-5.412121,-5.257494,1.158882,5.929870,-0.263483,2.336639,-2.501230,-2.198008,9.753136,2.845106,8.936303,2.888543,-3.741383,1.154662,2.258995,9.945722,7.744462,-2.375165,4.694635,-7.571871,-6.805988,-5.014020,-0.634936,-4.803970,5.234985,6.766192,-5.883955,1.572491,9.989605,-2.188723,3.560333,-7.526971,4.768535,-2.833071,9.486931,-4.146893,-0.078204,-3.645201,8.044677,9.839986,0.029469,5.554927,6.415473,-1.665444,9.297158,-3.153887,8.184051,-4.526555,6.187422,4.532242,6.727684,9.537824,-1.040643,8.617022,-8.411651,-8.406933,9.029064,6.942935,-1.507700,7.127667,-0.637147,1.942560,-9.706343,-9.327838,-4.236550,-4.526642,1.735764,8.376286,-4.282816,7.276871,9.405379,-4.089641,8.965530,-2.831420,0.870006,-1.124000,3.593273,7.710101,5.762992,8.624876,-3.043095,4.249087,4.277046,0.143850,2.130835,2.578809,9.237044,2.690760,9.853489,-1.693008,8.102967,0.887833,-3.927107,6.452607,-5.194004,1.643789,-1.934134,1.529460,-3.815031,5.739173,9.367956,-9.952657,-6.878938,-0.808286,6.702405,0.655476,3.824038,7.730417,9.604732,9.733286,-0.536789,-0.511839,6.298351,-5.053260,9.659176,-1.346037,-4.785737,3.486475,-2.347342,2.805028,-0.678744,5.522223,4.234556,-6.230649,9.658074,-7.368349,-4.850271,-6.470007,-2.473926,0.989429,0.686766,5.830935,1.167785,-3.515193,-6.892757,7.800332,-6.861382,-3.366283,-9.896643,8.148697,-4.548055,8.101647,-2.097953,-2.343108,-1.358417,-9.242959,6.088528,-9.786189,-2.494454,7.245884,-6.354888,-9.152306,1.320345,-5.653323,7.515626,3.399640,1.536429,-9.582472,-7.461576,8.546251,4.650853,-2.703803,2.440716,6.898349,-6.311767,-1.748608,8.208647,1.222487,5.797495,-7.000616,7.416843,-5.242807,-9.788357,1.520283,4.458685,-5.483443,-7.714607,-0.323117,0.528670,-2.577641,-8.689136,-9.134558,0.394988,-3.023389,0.616675,4.432941,-4.386036,8.267554,-1.267856,5.020339,1.803992,-8.431037,8.323315,1.067950,-6.436205,-7.554600,-7.353778,3.143572,-9.842101,-9.971370,-4.543195,7.936838,8.952474,-9.908452,9.728816,-9.128480,9.641498,-4.131148,6.148802,4.331626,9.510124,-6.008831,-4.635730,0.142790,5.001400,-9.521090,3.629770,-0.103982,-5.269136,7.368472,-3.382596,4.953637,-7.137705,-4.903291,6.628455,-3.054507,0.523149,4.207836,-7.236179,7.720099,-7.726232,7.588102,0.316621,1.813145,-5.730154,8.226704,-5.506948,-0.175943,-0.531350,-3.311928,-3.756606,7.382818,6.667805,2.584831,8.980652,1.269738,-4.848268,-1.196921,-2.810083], dtype = "float64")#candidate|1966|(375,)|const|float64
call_1964 = relay.TupleGetItem(func_453_call(relay.reshape(const_1965.astype('float32'), [13, 12, 16]), relay.reshape(const_1966.astype('float64'), [375,]), ), 2)
call_1967 = relay.TupleGetItem(func_456_call(relay.reshape(const_1965.astype('float32'), [13, 12, 16]), relay.reshape(const_1966.astype('float64'), [375,]), ), 2)
output = relay.Tuple([bop_1959,call_1964,const_1965,const_1966,])
output2 = relay.Tuple([bop_1959,call_1967,const_1965,const_1966,])
func_1975 = relay.Function([var_1958,], output)
mod['func_1975'] = func_1975
mod = relay.transform.InferType()(mod)
mutated_mod['func_1975'] = func_1975
mutated_mod = relay.transform.InferType()(mutated_mod)
var_1976 = relay.var("var_1976", dtype = "float64", shape = (9, 4, 1))#candidate|1976|(9, 4, 1)|var|float64
func_1975_call = mutated_mod.get_global_var('func_1975')
call_1977 = func_1975_call(var_1976)
output = call_1977
func_1978 = relay.Function([var_1976], output)
mutated_mod['func_1978'] = func_1978
mutated_mod = relay.transform.InferType()(mutated_mod)
var_2024 = relay.var("var_2024", dtype = "float32", shape = (6, 15, 8))#candidate|2024|(6, 15, 8)|var|float32
uop_2025 = relay.sqrt(var_2024.astype('float32')) # shape=(6, 15, 8)
func_1482_call = mod.get_global_var('func_1482')
func_1486_call = mutated_mod.get_global_var('func_1486')
var_2032 = relay.var("var_2032", dtype = "float32", shape = (112,))#candidate|2032|(112,)|var|float32
call_2031 = relay.TupleGetItem(func_1482_call(relay.reshape(var_2032.astype('float32'), [14, 2, 4]), relay.reshape(var_2032.astype('float32'), [14, 2, 4]), ), 1)
call_2033 = relay.TupleGetItem(func_1486_call(relay.reshape(var_2032.astype('float32'), [14, 2, 4]), relay.reshape(var_2032.astype('float32'), [14, 2, 4]), ), 1)
func_362_call = mod.get_global_var('func_362')
func_365_call = mutated_mod.get_global_var('func_365')
const_2040 = relay.const([10,-4,-5,10,-6,5,-3,1,-9,7,-3,7,-3,5,3,3], dtype = "uint16")#candidate|2040|(16,)|const|uint16
call_2039 = relay.TupleGetItem(func_362_call(relay.reshape(const_2040.astype('uint16'), [2, 4, 2])), 0)
call_2041 = relay.TupleGetItem(func_365_call(relay.reshape(const_2040.astype('uint16'), [2, 4, 2])), 0)
output = relay.Tuple([uop_2025,call_2031,var_2032,call_2039,const_2040,])
output2 = relay.Tuple([uop_2025,call_2033,var_2032,call_2041,const_2040,])
func_2053 = relay.Function([var_2024,var_2032,], output)
mod['func_2053'] = func_2053
mod = relay.transform.InferType()(mod)
var_2054 = relay.var("var_2054", dtype = "float32", shape = (6, 15, 8))#candidate|2054|(6, 15, 8)|var|float32
var_2055 = relay.var("var_2055", dtype = "float32", shape = (112,))#candidate|2055|(112,)|var|float32
output = func_2053(var_2054,var_2055,)
func_2056 = relay.Function([var_2054,var_2055,], output)
mutated_mod['func_2056'] = func_2056
mutated_mod = relay.transform.InferType()(mutated_mod)
var_2075 = relay.var("var_2075", dtype = "int32", shape = (5, 11, 11))#candidate|2075|(5, 11, 11)|var|int32
var_2076 = relay.var("var_2076", dtype = "int32", shape = (5, 11, 11))#candidate|2076|(5, 11, 11)|var|int32
bop_2077 = relay.minimum(var_2075.astype('int32'), relay.reshape(var_2076.astype('int32'), relay.shape_of(var_2075))) # shape=(5, 11, 11)
bop_2089 = relay.not_equal(bop_2077.astype('bool'), relay.reshape(var_2076.astype('bool'), relay.shape_of(bop_2077))) # shape=(5, 11, 11)
output = relay.Tuple([bop_2089,])
output2 = relay.Tuple([bop_2089,])
func_2102 = relay.Function([var_2075,var_2076,], output)
mod['func_2102'] = func_2102
mod = relay.transform.InferType()(mod)
mutated_mod['func_2102'] = func_2102
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2102_call = mutated_mod.get_global_var('func_2102')
var_2104 = relay.var("var_2104", dtype = "int32", shape = (5, 11, 11))#candidate|2104|(5, 11, 11)|var|int32
var_2105 = relay.var("var_2105", dtype = "int32", shape = (5, 11, 11))#candidate|2105|(5, 11, 11)|var|int32
call_2103 = func_2102_call(var_2104,var_2105,)
output = call_2103
func_2106 = relay.Function([var_2104,var_2105,], output)
mutated_mod['func_2106'] = func_2106
mutated_mod = relay.transform.InferType()(mutated_mod)
var_2211 = relay.var("var_2211", dtype = "uint32", shape = (14, 3, 13))#candidate|2211|(14, 3, 13)|var|uint32
const_2212 = relay.const([[[-5,5,-9,-4,8,8,-3,2,-1,-3,1,-9,5],[8,5,5,2,-1,-8,8,8,-3,3,3,4,6],[3,8,3,5,1,7,1,-4,2,-6,2,-3,5]],[[-8,-1,-4,-8,-6,8,10,-3,-1,-4,5,9,-8],[1,5,-7,-4,-5,-7,-9,-5,-6,6,-1,-6,-4],[-3,-2,-5,2,10,-10,8,-1,10,7,8,-10,5]],[[-1,-8,-1,7,4,10,-1,3,-3,9,-7,-5,-4],[-10,-7,-8,5,3,-9,-3,4,6,2,-7,4,8],[-2,-8,5,-3,-4,-1,8,-6,6,-1,3,-4,-9]],[[-9,-6,6,9,6,-5,-6,-3,9,9,-10,7,5],[-1,2,-1,-4,-7,5,-8,9,4,-2,2,-8,-9],[8,-4,-3,-2,-6,7,10,-2,-3,7,-4,7,10]],[[7,10,8,1,1,-6,2,-5,-2,4,-1,-6,1],[1,-6,-7,1,-1,7,3,-8,2,1,-9,-4,10],[-2,-8,-6,10,2,-7,7,1,9,-6,3,7,7]],[[8,8,9,-4,-2,-5,-4,-2,-7,-8,4,2,-6],[-8,-8,8,-6,-6,8,-1,-2,-5,-5,-9,5,-1],[-7,-1,-8,8,3,4,2,-6,9,3,6,-10,-4]],[[-3,8,-9,7,-10,6,2,3,9,-3,-8,-4,8],[10,3,8,-4,-10,-3,-1,-3,-10,6,-1,3,-2],[8,3,-8,-5,8,6,10,-2,-4,-6,10,4,-1]],[[3,-6,-4,-10,2,1,-8,-9,-2,-10,-9,-7,-3],[-3,5,9,8,10,2,1,8,1,3,-10,-8,9],[-7,4,-7,5,1,-7,-1,-10,-9,-7,5,4,-10]],[[2,7,9,2,-3,2,-1,4,-3,7,8,-4,-4],[4,8,-4,-6,-4,4,10,-4,-5,-5,-3,4,2],[5,-6,9,-6,-6,5,-1,6,-4,-3,9,5,7]],[[-4,7,10,6,-10,-7,-9,-5,4,-3,1,7,10],[-2,-9,3,9,-1,-2,6,-9,-8,-8,3,9,4],[-7,-4,6,2,-4,-1,4,5,-7,8,5,-4,-9]],[[7,-5,9,-2,9,-8,5,7,-8,-6,-9,-3,-10],[-2,-3,3,10,3,-10,-4,-4,9,6,-3,-6,-7],[-3,1,1,10,-6,-6,-1,-8,5,-9,4,-6,1]],[[-7,10,2,-6,-1,-6,-5,-5,1,-1,6,-10,-4],[-2,-9,10,10,1,5,4,-6,-6,5,3,7,6],[9,8,-2,-2,3,-6,3,-8,-7,-4,-5,6,-2]],[[-7,-3,4,-10,-5,-5,5,2,5,-1,4,5,2],[10,1,9,3,-10,-5,-1,3,9,6,-9,7,-1],[-7,10,-8,9,2,-7,9,-4,-10,-7,1,-10,7]],[[7,1,-6,-8,-10,-9,-6,-7,6,2,2,-4,-6],[-5,3,8,-8,10,1,-2,-4,2,-2,5,-6,-7],[-1,-7,8,-3,-4,1,-2,-5,6,-6,10,10,-6]]], dtype = "uint32")#candidate|2212|(14, 3, 13)|const|uint32
bop_2213 = relay.left_shift(var_2211.astype('uint32'), relay.reshape(const_2212.astype('uint32'), relay.shape_of(var_2211))) # shape=(14, 3, 13)
uop_2232 = relay.rsqrt(const_2212.astype('float64')) # shape=(14, 3, 13)
output = relay.Tuple([bop_2213,uop_2232,])
output2 = relay.Tuple([bop_2213,uop_2232,])
func_2234 = relay.Function([var_2211,], output)
mod['func_2234'] = func_2234
mod = relay.transform.InferType()(mod)
var_2235 = relay.var("var_2235", dtype = "uint32", shape = (14, 3, 13))#candidate|2235|(14, 3, 13)|var|uint32
output = func_2234(var_2235)
func_2236 = relay.Function([var_2235], output)
mutated_mod['func_2236'] = func_2236
mutated_mod = relay.transform.InferType()(mutated_mod)
var_2378 = relay.var("var_2378", dtype = "float64", shape = (2, 5, 1))#candidate|2378|(2, 5, 1)|var|float64
uop_2379 = relay.acos(var_2378.astype('float64')) # shape=(2, 5, 1)
func_2234_call = mod.get_global_var('func_2234')
func_2236_call = mutated_mod.get_global_var('func_2236')
const_2382 = relay.const([-9,-9,-6,-1,3,-8,-6,-1,-10,-5,-3,9,-6,-7,1,7,7,-3,2,1,-9,2,3,-4,-4,2,-2,7,5,2,-6,-7,7,-5,3,-4,-2,-10,10,9,-2,3,-5,1,6,9,-4,-2,-6,2,2,4,4,10,7,-10,-2,1,7,9,-5,5,5,-10,6,-2,8,2,-9,8,2,5,2,1,-9,-3,9,4,7,6,-8,2,4,9,-8,1,4,-4,-3,-6,-7,7,-6,9,6,7,-4,1,-4,-1,-5,2,10,6,3,6,-10,6,-5,-9,10,7,6,-2,-6,5,-7,5,-3,3,-2,5,-1,7,-6,6,-4,-10,1,-3,6,2,-6,-3,7,-6,4,-10,2,10,6,4,1,10,-5,-10,-2,-4,-9,-9,10,5,7,-8,5,-7,-6,-10,-2,-8,5,7,10,8,-6,-6,-2,-10,-8,-10,-6,5,5,-8,8,-5,4,10,3,3,-5,-6,10,8,4,-3,2,-2,-5,-7,4,6,3,-4,-4,-6,6,5,-9,5,10,4,8,-2,-4,-6,10,8,7,-2,9,-1,-1,2,-1,3,-7,-5,3,-7,-4,-7,4,8,7,4,7,2,4,-7,-3,6,9,4,-7,-3,4,5,-7,-9,4,-10,-9,-10,8,-7,10,-10,3,5,5,-10,7,-6,2,-9,-9,7,3,2,-7,-2,-10,-7,8,-2,-9,-3,2,3,7,10,2,5,-5,9,-5,8,-7,8,-9,10,5,-8,-5,10,-2,-7,8,-2,-10,-4,3,-10,-8,-6,1,7,-9,4,4,5,4,2,5,-4,6,10,1,10,10,-6,-1,-8,8,6,6,9,5,-10,7,7,-4,-5,-9,-6,-2,-10,5,-5,8,6,5,3,-9,2,9,-1,6,-7,2,2,6,-9,9,-6,7,10,9,4,6,-4,-3,7,-3,-4,10,1,7,-10,5,-3,10,-6,7,-7,-6,-8,-7,10,-3,-7,10,2,-9,2,-10,8,-8,-1,6,10,8,-5,-4,7,1,2,-3,9,-9,-7,7,1,2,10,9,-2,-9,3,1,-3,-5,4,-3,9,-3,1,4,5,3,1,-7,-8,-9,-2,-3,5,-1,-6,-1,6,-3,-3,-6,-10,6,-10,8,9,-1,10,-5,-1,-7,3,-2,-3,6,4,6,1,-7,5,1,5,-5,5,3,10,-3,-7,4,1,-7,3,9,5,7,3,6,-9,2,-2,-7,2,-7,-4,10,10,10,-1,7,5,6,1,6,2,1,-3,-8,10,-6,8,-2,3,4,-3,10,7,7,-9,-6,-1,6,-9,10,4,6,2,-2,3,9,-9,3,-4,-1,-3,5,-8,-9,7,-6,5,-5,-3,-2,-3,10,9,-5,4,-5,7,-3,10,1,9,-10,-3,-3,-2,-1,-5,6,-4,6,-8,-7,2,-1,-1,-2,2,-7,9], dtype = "uint32")#candidate|2382|(546,)|const|uint32
call_2381 = relay.TupleGetItem(func_2234_call(relay.reshape(const_2382.astype('uint32'), [14, 3, 13])), 1)
call_2383 = relay.TupleGetItem(func_2236_call(relay.reshape(const_2382.astype('uint32'), [14, 3, 13])), 1)
output = relay.Tuple([uop_2379,call_2381,const_2382,])
output2 = relay.Tuple([uop_2379,call_2383,const_2382,])
func_2393 = relay.Function([var_2378,], output)
mod['func_2393'] = func_2393
mod = relay.transform.InferType()(mod)
mutated_mod['func_2393'] = func_2393
mutated_mod = relay.transform.InferType()(mutated_mod)
var_2394 = relay.var("var_2394", dtype = "float64", shape = (2, 5, 1))#candidate|2394|(2, 5, 1)|var|float64
func_2393_call = mutated_mod.get_global_var('func_2393')
call_2395 = func_2393_call(var_2394)
output = call_2395
func_2396 = relay.Function([var_2394], output)
mutated_mod['func_2396'] = func_2396
mutated_mod = relay.transform.InferType()(mutated_mod)
const_2682 = relay.const([[[8,4,-10,-2,8,7,4,4],[9,-7,-8,4,5,6,-2,9],[-6,9,3,-4,-3,-7,-4,-4],[-8,1,1,-5,5,-4,-4,10],[7,7,-9,2,-1,-1,-9,-8],[-6,-5,4,-5,-1,-7,1,8]],[[-7,7,3,7,8,1,-3,-4],[-5,7,-9,10,1,-9,-5,10],[10,-7,9,-9,4,-2,-6,-7],[7,2,-6,8,-10,-2,3,-8],[-3,8,-2,7,-6,2,-7,-6],[-3,-2,3,-8,8,1,-6,-6]],[[5,-9,2,3,-4,1,6,-8],[6,-7,2,3,7,-1,2,-10],[-3,5,4,5,-5,-1,-4,7],[1,-10,-9,-2,6,9,-3,4],[-7,-3,-7,1,3,-2,-3,8],[4,6,2,2,-1,5,-10,-10]],[[-9,6,-1,9,-8,-2,3,4],[1,-3,-6,-2,-5,-3,-7,-10],[5,-2,4,10,-6,5,-4,5],[9,-8,-2,-3,7,-10,8,1],[-7,-2,6,-4,-6,-2,-6,-8],[4,1,6,4,10,8,-5,3]]], dtype = "int16")#candidate|2682|(4, 6, 8)|const|int16
var_2683 = relay.var("var_2683", dtype = "int16", shape = (4, 6, 8))#candidate|2683|(4, 6, 8)|var|int16
bop_2684 = relay.bitwise_and(const_2682.astype('int16'), relay.reshape(var_2683.astype('int16'), relay.shape_of(const_2682))) # shape=(4, 6, 8)
bop_2696 = relay.multiply(var_2683.astype('float64'), relay.reshape(const_2682.astype('float64'), relay.shape_of(var_2683))) # shape=(4, 6, 8)
bop_2715 = relay.subtract(var_2683.astype('int32'), relay.reshape(const_2682.astype('int32'), relay.shape_of(var_2683))) # shape=(4, 6, 8)
output = relay.Tuple([bop_2684,bop_2696,bop_2715,])
output2 = relay.Tuple([bop_2684,bop_2696,bop_2715,])
func_2722 = relay.Function([var_2683,], output)
mod['func_2722'] = func_2722
mod = relay.transform.InferType()(mod)
var_2723 = relay.var("var_2723", dtype = "int16", shape = (4, 6, 8))#candidate|2723|(4, 6, 8)|var|int16
output = func_2722(var_2723)
func_2724 = relay.Function([var_2723], output)
mutated_mod['func_2724'] = func_2724
mutated_mod = relay.transform.InferType()(mutated_mod)
var_3042 = relay.var("var_3042", dtype = "float64", shape = ())#candidate|3042|()|var|float64
var_3043 = relay.var("var_3043", dtype = "float64", shape = (11, 7, 13))#candidate|3043|(11, 7, 13)|var|float64
bop_3044 = relay.mod(var_3042.astype('float64'), var_3043.astype('float64')) # shape=(11, 7, 13)
func_135_call = mod.get_global_var('func_135')
func_137_call = mutated_mod.get_global_var('func_137')
const_3049 = relay.const([8.217230,-2.030863,-0.074072,6.046246,1.558681,8.852281,-3.324027,5.408063,-0.189354,3.125450,2.271568,-3.795295,1.053413,2.407232,-0.130122,9.615357,5.138561,-4.769871,-4.398336,9.069184,2.525683,3.553214,-5.709609,-4.540622,6.410481,9.952517,7.780821,-5.116940,3.914201,7.127298,-0.374401,3.508811,0.725984,9.665460,0.143772,8.281232,9.524843,-1.633297,1.633623,4.402380,7.469691,-9.847404,-8.843128,2.439568,-3.234348,-2.052380,4.170999,-9.137511,2.491938,-3.605876,-4.062436,-8.870378,3.744471,8.440204,2.709123,9.702836,-6.823616,-8.073852,-7.296696,-7.225751,-0.403336,-9.726726,-4.882086,-7.275857,-4.121345,-6.279056,-0.891015,8.692512,9.402345,0.046315,6.299068,6.678627,-7.267698,-4.752083,2.786034,1.670704,6.614737,2.020396,-3.656556,-5.003902,8.346175,1.195421,6.451337,2.170105,0.084327,3.014441,6.324870,-9.577739,-3.507784,0.754689,7.765657,-7.116318,-5.036991,-1.335053,9.524527,2.328239,9.882255,7.460784,1.886009,-3.912816,3.883851,7.500610,-9.067090,-5.315255,8.247288,9.042897,-6.380455,2.597994,1.765333,5.558898,-5.507469,3.361717,4.748237,-5.323878,6.238725,4.116679,2.862985,-5.238256,8.157381,-8.112908,-8.184872,7.333985,3.619349,9.443075,5.104631,-6.778849,5.009705,6.071055,-7.710688,-2.779740,-2.567320,-3.385542,-3.841956,-2.877575,0.915683,-1.811983,-0.055527,-8.179240,7.647399,-3.499769,-0.682649,-7.529237,1.424871,-8.973438,-9.576781,0.869515,-5.779161,-9.606147,-5.942933,-9.527382,8.956061,9.631495,1.304360,-6.200691,9.144151,1.347528,5.032953,-1.018481,5.648133,-1.226598,1.375044,5.064529,0.181882,-9.469989,-1.367096,3.415308,-9.479671,5.151609,-1.991047,-5.608360,-6.315537,9.169209,8.619515,-4.351659,-6.106078,-5.870916,8.217686,3.364532,4.562037,-1.475376,8.412244,-0.097082,9.538696,5.657395,3.598834,0.128171,4.057557,5.271909,-9.169967,3.618954,-2.760710,-9.062749,5.409016,-0.257445,-8.838320,-0.829503,-9.167853,2.272178,-1.102263,4.469908,-8.605326,-4.470218,4.383395,-7.660191,7.784086,-0.865838,-0.043961,9.053796,-2.987698,-0.631432,5.278229,-8.121205,1.418182,9.021919,-7.160323,3.267485,5.348940,-5.289230,8.591985,3.373843,5.295509,-5.388569,-2.148614,6.609521,5.485297,5.708660,6.114886,-9.801959,7.351101,-9.545301,-0.559528,-3.652214,4.769484,-0.940960,-3.141458,-1.003270,7.465567,7.945479,-0.981204,9.812458,-1.490626,-1.262332,-7.412377,4.428996,-5.744023,-2.526084,8.192765,7.679314,1.671080,-5.787962,9.664800,7.318239,0.632914,-1.276488,-5.968791,-4.720386,5.851357,-1.143697,2.923531,0.768905,3.687245,4.770721,9.924898,-4.733491,-2.856808,-8.346669,6.130539,7.733235,-5.342572,-2.022231,0.160088,6.195258,-5.557869,-7.178656,9.634162,7.919840,1.096177,-6.787763,7.278907,-4.748543,9.737421,3.957008,-2.125733,3.839783,0.220690,8.435924,-2.848587,4.826259,-7.324105,5.289280,7.782758,3.537880,4.599725,0.797726,-4.066447,-7.718034,-5.459733,-7.698163,-3.431574,1.283709,3.081642,-3.244332,-4.220832,-4.910944,-3.266266,-6.168457,5.792422,-1.801411,4.729855,1.196109,1.298478,7.247957,-8.979138,7.539799,-3.259488,-6.001788,1.732165,9.901622,-9.824977,7.446709,1.402666,-7.783883,2.761658,4.986757,9.633324,-3.210678,2.043268,-1.409037,0.634847,-1.480255,1.565428,1.325824,-2.182921,-1.957096,7.193726,5.155387,4.546138,8.755350,-9.777790,-9.033772,8.747416,1.929823,-6.280384,-7.689363,6.560730,4.000943,3.069414,5.738252,-5.639859,-7.503929,2.884819,-2.243844,-8.969964,2.534311,7.408062,-6.377098,-6.300968,9.630753,5.464159,-6.655442,-8.200308,2.956041,7.322810,0.177919,-4.378326,8.555983,8.103715,1.337299,4.147630,0.369509,-0.037486,0.082507,0.484771,6.856468,6.501091], dtype = "float64")#candidate|3049|(375,)|const|float64
call_3048 = relay.TupleGetItem(func_135_call(relay.reshape(const_3049.astype('float64'), [15, 5, 5])), 1)
call_3050 = relay.TupleGetItem(func_137_call(relay.reshape(const_3049.astype('float64'), [15, 5, 5])), 1)
output = relay.Tuple([bop_3044,call_3048,const_3049,])
output2 = relay.Tuple([bop_3044,call_3050,const_3049,])
func_3051 = relay.Function([var_3042,var_3043,], output)
mod['func_3051'] = func_3051
mod = relay.transform.InferType()(mod)
var_3052 = relay.var("var_3052", dtype = "float64", shape = ())#candidate|3052|()|var|float64
var_3053 = relay.var("var_3053", dtype = "float64", shape = (11, 7, 13))#candidate|3053|(11, 7, 13)|var|float64
output = func_3051(var_3052,var_3053,)
func_3054 = relay.Function([var_3052,var_3053,], output)
mutated_mod['func_3054'] = func_3054
mutated_mod = relay.transform.InferType()(mutated_mod)
const_3149 = relay.const([[[5.811327,1.940526,-4.444912],[-8.390532,2.765008,4.971333],[-6.623944,1.180418,5.310463],[-6.476233,4.204985,-9.808018],[-2.480003,7.086650,8.073764],[-7.358963,-7.055503,-6.331200],[8.710256,-9.807443,2.544133],[-3.205305,-7.992906,-1.909793],[2.929269,3.426792,-9.084798],[-5.768332,-6.336221,-2.356774],[-3.547617,-8.314054,5.855966],[-1.006088,2.137986,4.387674],[-5.928335,-4.726036,7.655463],[-4.621687,1.109935,7.893883],[-1.003305,-1.400324,0.121168],[-4.885624,-5.579261,-3.452590]],[[2.891806,-5.152790,-5.251946],[5.714533,8.499301,8.882435],[-5.462654,2.504082,6.572989],[2.420159,3.977609,-3.988831],[0.842619,-7.461046,3.339734],[3.447206,2.497575,7.670814],[0.922279,0.685303,-8.673116],[9.160882,-2.757320,-1.363638],[3.714508,8.923442,-1.840372],[3.101626,-4.154815,8.188794],[-9.126487,-7.966150,-2.993473],[4.237858,-0.299387,-7.069735],[0.272710,-5.576684,4.156339],[8.256286,-6.014658,2.981911],[-3.663998,-7.956158,-0.989167],[-5.015596,-4.965908,7.001142]],[[-4.237383,-3.621767,8.847743],[7.023928,-8.555934,-3.437946],[6.499850,-1.733211,1.209373],[-3.184179,-9.902863,-8.884737],[-7.309875,-9.173114,-8.961856],[8.421184,-0.668941,6.201871],[-2.785624,7.792488,-1.064806],[-2.258468,0.309798,-8.650619],[-5.166522,5.193267,6.078013],[-6.903450,-3.617145,8.150870],[-5.897788,-7.608080,-5.136767],[-4.502468,-9.041297,-0.520100],[9.342514,-0.520731,8.113125],[5.545303,7.239826,6.467525],[6.022484,-9.184589,-5.890080],[-5.306238,-3.000808,1.219383]],[[-3.485331,-5.590220,9.441639],[-5.481470,1.989462,-2.333273],[0.792824,7.558357,-0.539571],[9.346124,-2.277892,6.127601],[7.467917,4.490214,-5.905949],[4.705236,-8.855943,-8.844546],[-7.864843,-1.431782,2.945727],[-8.282558,5.062740,-1.688636],[-7.772722,9.499642,2.744679],[9.353262,-0.614021,7.430676],[-6.387185,0.819237,-7.779800],[-0.237867,-5.466244,-7.383847],[2.259694,-1.184213,-5.612037],[-1.497243,4.421025,3.767226],[8.461212,9.916487,6.057226],[-5.992583,3.056365,-3.308131]],[[7.220460,-4.436225,-5.842878],[-5.773474,-0.417493,-1.825993],[2.933760,2.376904,-9.600786],[1.076884,-0.664778,1.377819],[5.087484,9.666989,2.456686],[-3.258413,-2.586260,7.036209],[-9.426025,8.621336,-5.940923],[0.142873,-8.683353,-4.841971],[-1.299964,-5.879608,9.812816],[-8.155663,-2.884298,0.009515],[-0.829195,-2.389043,2.866214],[0.908185,5.405477,-8.256033],[-4.698650,0.833534,-2.809043],[8.493300,-8.776553,4.851523],[3.105100,-0.713735,2.460652],[1.823668,-8.141802,5.645557]],[[7.008772,9.661424,5.786392],[0.728975,0.427377,-6.975579],[-7.254874,-7.445901,-7.977707],[-2.162681,-0.120210,4.861485],[7.571093,9.728365,-1.673761],[9.154451,5.520969,3.181187],[-3.235463,-6.772471,1.616383],[4.364120,-1.575792,-2.210938],[-4.587113,-0.331226,-9.947237],[-6.825354,-8.472099,2.299286],[-1.345804,2.584563,5.308054],[-8.398048,9.296065,9.191840],[-5.388241,-8.189799,6.601589],[0.832177,-0.428689,-1.407366],[1.134169,-7.802876,-5.172299],[-7.742583,-7.583393,-3.930227]],[[-7.529413,9.392008,4.641550],[3.148704,7.463176,-4.074170],[-2.070840,-3.429819,4.479857],[0.297316,-4.284251,-3.047817],[3.515172,8.636580,-6.473137],[9.939393,2.097916,-7.904930],[-3.366595,-5.755195,-5.217881],[-9.197038,-8.326858,1.695493],[6.699560,-0.582759,-9.521326],[-8.762285,2.950373,4.626540],[3.431342,2.923609,8.254738],[7.044731,3.239674,5.748606],[-8.362759,-3.440653,3.750624],[-8.980546,8.615824,-2.210726],[4.345018,6.528819,-3.211366],[1.784958,-5.435977,-2.521953]],[[-6.216351,5.953989,2.921431],[7.413517,-6.504365,-0.248947],[6.049695,-7.244241,9.393301],[-6.952690,8.093391,-5.894621],[-5.165030,2.614119,-3.576656],[-8.058557,2.669806,-3.290418],[0.791815,-4.597532,2.954736],[6.967390,6.169421,4.209906],[-5.253034,0.590046,-6.989918],[5.922751,3.906975,9.711781],[2.839631,1.087816,6.601824],[9.028866,7.358367,-7.484420],[5.017498,-5.219839,1.583039],[4.744056,0.726267,3.083769],[-2.359241,6.648496,8.801580],[4.672727,-0.535385,7.690060]],[[-5.947228,-0.958791,-2.172343],[4.639753,-3.434278,-5.594067],[6.266429,6.159039,-7.666738],[-9.763924,-0.106468,3.321986],[-9.663405,-4.147205,5.159674],[-8.795108,-4.097955,2.532052],[6.636929,-6.329232,-7.878575],[3.003509,0.489144,0.490356],[9.600140,-7.150245,0.064706],[8.911444,5.503254,-1.952000],[3.346653,-2.940731,-0.125725],[-4.396705,-7.409147,0.608756],[6.000785,0.624057,-1.410253],[4.555825,-7.114799,0.370949],[0.814170,-1.042383,-5.566487],[8.355289,8.513565,5.747000]],[[9.906343,-9.815874,1.343793],[1.446181,-7.427085,3.917949],[6.275752,5.963037,-7.880688],[5.212205,6.804282,-7.345584],[-6.886927,-9.622669,-9.592320],[8.967043,5.432339,0.137498],[-3.626311,-6.745455,3.662058],[7.854371,-0.815014,1.743840],[2.516401,-6.458480,-8.328477],[-7.376902,-9.198259,-2.075145],[-2.392441,-5.726566,8.484560],[-2.007241,-3.193190,5.482892],[-7.663396,-7.430793,9.782100],[-1.730618,-7.804385,9.495053],[3.536844,-9.623871,-6.211773],[-8.153129,-1.475177,9.704793]],[[0.340220,0.706946,-5.181497],[3.201200,7.424848,0.550686],[9.604318,8.322272,-1.112008],[-2.112164,-2.832592,6.818996],[-5.857841,-7.038165,-2.229377],[-6.574575,7.001048,-2.171863],[-0.343193,4.517754,1.211223],[-4.046010,-8.250710,3.784305],[5.031202,-1.631599,-4.819592],[-8.552567,-1.561019,0.443619],[-8.696827,-4.105056,-0.565098],[2.589212,-2.682694,-4.027845],[3.608644,7.267259,2.533269],[-9.648306,-8.115570,-9.309834],[-7.601854,5.648897,9.665333],[-8.821985,5.547240,-6.642659]],[[5.903915,-2.070178,-4.708632],[3.702608,-7.416508,3.045150],[1.813751,-8.851465,-0.269767],[-8.950173,6.461981,1.627223],[7.446943,9.346928,-7.185299],[-2.301580,8.379568,-4.093997],[9.646465,-2.779553,-2.442559],[4.452980,8.492282,9.308850],[8.949402,6.133316,-8.765779],[0.720694,-7.081908,-6.707131],[-3.408772,-6.356778,7.531766],[8.735737,-8.337364,-5.840410],[5.953028,4.205494,3.474624],[4.201534,-8.804921,-4.458715],[4.109667,-0.207918,-0.317087],[5.205254,8.307749,-3.286811]],[[-5.380005,-9.389369,9.589439],[3.944356,-2.961582,-3.233098],[6.400538,-0.967962,-7.992462],[-2.857244,0.923256,6.266445],[1.718555,-7.623580,-1.082027],[-4.203359,1.152644,9.273728],[3.293807,4.192584,0.062257],[-8.308270,2.241313,4.008682],[4.956934,-7.265640,-6.840269],[-6.348199,-0.038550,5.556082],[3.535787,8.679639,-9.213606],[-0.507786,0.154128,2.594525],[1.465018,5.749564,2.782978],[-3.113278,2.090441,1.501545],[-5.515005,8.858469,-0.600169],[0.519571,-8.050764,-7.461175]],[[1.964626,7.985439,9.644427],[-8.232534,-6.149488,5.754001],[-8.933206,-3.305407,-3.553013],[0.975354,5.208540,3.909802],[5.721613,2.994593,4.117432],[-7.369876,-7.979809,5.140603],[6.938256,-5.277640,-5.069467],[8.605093,2.328617,-4.182141],[1.908786,-1.773816,-3.093841],[-6.098994,-4.577617,-1.016553],[-3.347177,7.782307,-2.281550],[-5.502883,-7.462363,2.093575],[-0.486450,4.802231,-8.611042],[-3.270597,2.563650,-4.470009],[-7.024526,-7.637386,-8.531713],[4.413409,8.879142,-8.033573]]], dtype = "float32")#candidate|3149|(14, 16, 3)|const|float32
uop_3150 = relay.rsqrt(const_3149.astype('float32')) # shape=(14, 16, 3)
output = uop_3150
output2 = uop_3150
func_3153 = relay.Function([], output)
mod['func_3153'] = func_3153
mod = relay.transform.InferType()(mod)
mutated_mod['func_3153'] = func_3153
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3153_call = mutated_mod.get_global_var('func_3153')
call_3154 = func_3153_call()
output = call_3154
func_3155 = relay.Function([], output)
mutated_mod['func_3155'] = func_3155
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3153_call = mod.get_global_var('func_3153')
func_3155_call = mutated_mod.get_global_var('func_3155')
call_3247 = func_3153_call()
call_3248 = func_3153_call()
output = call_3247
output2 = call_3248
func_3264 = relay.Function([], output)
mod['func_3264'] = func_3264
mod = relay.transform.InferType()(mod)
mutated_mod['func_3264'] = func_3264
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3264_call = mutated_mod.get_global_var('func_3264')
call_3265 = func_3264_call()
output = call_3265
func_3266 = relay.Function([], output)
mutated_mod['func_3266'] = func_3266
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3264_call = mod.get_global_var('func_3264')
func_3266_call = mutated_mod.get_global_var('func_3266')
call_3326 = func_3264_call()
call_3327 = func_3264_call()
func_135_call = mod.get_global_var('func_135')
func_137_call = mutated_mod.get_global_var('func_137')
var_3341 = relay.var("var_3341", dtype = "float64", shape = (375,))#candidate|3341|(375,)|var|float64
call_3340 = relay.TupleGetItem(func_135_call(relay.reshape(var_3341.astype('float64'), [15, 5, 5])), 3)
call_3342 = relay.TupleGetItem(func_137_call(relay.reshape(var_3341.astype('float64'), [15, 5, 5])), 3)
func_135_call = mod.get_global_var('func_135')
func_137_call = mutated_mod.get_global_var('func_137')
call_3352 = relay.TupleGetItem(func_135_call(relay.reshape(var_3341.astype('float64'), [15, 5, 5])), 2)
call_3353 = relay.TupleGetItem(func_137_call(relay.reshape(var_3341.astype('float64'), [15, 5, 5])), 2)
output = relay.Tuple([call_3326,call_3340,var_3341,call_3352,])
output2 = relay.Tuple([call_3327,call_3342,var_3341,call_3353,])
func_3356 = relay.Function([var_3341,], output)
mod['func_3356'] = func_3356
mod = relay.transform.InferType()(mod)
mutated_mod['func_3356'] = func_3356
mutated_mod = relay.transform.InferType()(mutated_mod)
var_3357 = relay.var("var_3357", dtype = "float64", shape = (375,))#candidate|3357|(375,)|var|float64
func_3356_call = mutated_mod.get_global_var('func_3356')
call_3358 = func_3356_call(var_3357)
output = call_3358
func_3359 = relay.Function([var_3357], output)
mutated_mod['func_3359'] = func_3359
mutated_mod = relay.transform.InferType()(mutated_mod)
var_3407 = relay.var("var_3407", dtype = "float32", shape = (5, 13, 6))#candidate|3407|(5, 13, 6)|var|float32
var_3408 = relay.var("var_3408", dtype = "float32", shape = (5, 13, 6))#candidate|3408|(5, 13, 6)|var|float32
bop_3409 = relay.power(var_3407.astype('float32'), relay.reshape(var_3408.astype('float32'), relay.shape_of(var_3407))) # shape=(5, 13, 6)
output = bop_3409
output2 = bop_3409
func_3425 = relay.Function([var_3407,var_3408,], output)
mod['func_3425'] = func_3425
mod = relay.transform.InferType()(mod)
var_3426 = relay.var("var_3426", dtype = "float32", shape = (5, 13, 6))#candidate|3426|(5, 13, 6)|var|float32
var_3427 = relay.var("var_3427", dtype = "float32", shape = (5, 13, 6))#candidate|3427|(5, 13, 6)|var|float32
output = func_3425(var_3426,var_3427,)
func_3428 = relay.Function([var_3426,var_3427,], output)
mutated_mod['func_3428'] = func_3428
mutated_mod = relay.transform.InferType()(mutated_mod)
var_3470 = relay.var("var_3470", dtype = "int16", shape = (9, 3, 1))#candidate|3470|(9, 3, 1)|var|int16
var_3471 = relay.var("var_3471", dtype = "int16", shape = (9, 3, 4))#candidate|3471|(9, 3, 4)|var|int16
bop_3472 = relay.bitwise_xor(var_3470.astype('int16'), var_3471.astype('int16')) # shape=(9, 3, 4)
output = bop_3472
output2 = bop_3472
func_3478 = relay.Function([var_3470,var_3471,], output)
mod['func_3478'] = func_3478
mod = relay.transform.InferType()(mod)
mutated_mod['func_3478'] = func_3478
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3478_call = mutated_mod.get_global_var('func_3478')
var_3480 = relay.var("var_3480", dtype = "int16", shape = (9, 3, 1))#candidate|3480|(9, 3, 1)|var|int16
var_3481 = relay.var("var_3481", dtype = "int16", shape = (9, 3, 4))#candidate|3481|(9, 3, 4)|var|int16
call_3479 = func_3478_call(var_3480,var_3481,)
output = call_3479
func_3482 = relay.Function([var_3480,var_3481,], output)
mutated_mod['func_3482'] = func_3482
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3153_call = mod.get_global_var('func_3153')
func_3155_call = mutated_mod.get_global_var('func_3155')
call_3581 = func_3153_call()
call_3582 = func_3153_call()
output = call_3581
output2 = call_3582
func_3588 = relay.Function([], output)
mod['func_3588'] = func_3588
mod = relay.transform.InferType()(mod)
mutated_mod['func_3588'] = func_3588
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3588_call = mutated_mod.get_global_var('func_3588')
call_3589 = func_3588_call()
output = call_3589
func_3590 = relay.Function([], output)
mutated_mod['func_3590'] = func_3590
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3588_call = mod.get_global_var('func_3588')
func_3590_call = mutated_mod.get_global_var('func_3590')
call_3665 = func_3588_call()
call_3666 = func_3588_call()
var_3678 = relay.var("var_3678", dtype = "float32", shape = (14, 16, 3))#candidate|3678|(14, 16, 3)|var|float32
bop_3679 = relay.less_equal(call_3665.astype('bool'), relay.reshape(var_3678.astype('bool'), relay.shape_of(call_3665))) # shape=(14, 16, 3)
bop_3682 = relay.less_equal(call_3666.astype('bool'), relay.reshape(var_3678.astype('bool'), relay.shape_of(call_3666))) # shape=(14, 16, 3)
output = relay.Tuple([bop_3679,])
output2 = relay.Tuple([bop_3682,])
func_3695 = relay.Function([var_3678,], output)
mod['func_3695'] = func_3695
mod = relay.transform.InferType()(mod)
var_3696 = relay.var("var_3696", dtype = "float32", shape = (14, 16, 3))#candidate|3696|(14, 16, 3)|var|float32
output = func_3695(var_3696)
func_3697 = relay.Function([var_3696], output)
mutated_mod['func_3697'] = func_3697
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3153_call = mod.get_global_var('func_3153')
func_3155_call = mutated_mod.get_global_var('func_3155')
call_3716 = func_3153_call()
call_3717 = func_3153_call()
uop_3724 = relay.exp(call_3716.astype('float32')) # shape=(14, 16, 3)
uop_3726 = relay.exp(call_3717.astype('float32')) # shape=(14, 16, 3)
output = uop_3724
output2 = uop_3726
func_3734 = relay.Function([], output)
mod['func_3734'] = func_3734
mod = relay.transform.InferType()(mod)
mutated_mod['func_3734'] = func_3734
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3734_call = mutated_mod.get_global_var('func_3734')
call_3735 = func_3734_call()
output = call_3735
func_3736 = relay.Function([], output)
mutated_mod['func_3736'] = func_3736
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3264_call = mod.get_global_var('func_3264')
func_3266_call = mutated_mod.get_global_var('func_3266')
call_3751 = func_3264_call()
call_3752 = func_3264_call()
func_2053_call = mod.get_global_var('func_2053')
func_2056_call = mutated_mod.get_global_var('func_2056')
var_3757 = relay.var("var_3757", dtype = "float32", shape = (360, 2))#candidate|3757|(360, 2)|var|float32
var_3758 = relay.var("var_3758", dtype = "float32", shape = (28, 4))#candidate|3758|(28, 4)|var|float32
call_3756 = relay.TupleGetItem(func_2053_call(relay.reshape(var_3757.astype('float32'), [6, 15, 8]), relay.reshape(var_3758.astype('float32'), [112,]), ), 0)
call_3759 = relay.TupleGetItem(func_2056_call(relay.reshape(var_3757.astype('float32'), [6, 15, 8]), relay.reshape(var_3758.astype('float32'), [112,]), ), 0)
func_3588_call = mod.get_global_var('func_3588')
func_3590_call = mutated_mod.get_global_var('func_3590')
call_3769 = func_3588_call()
call_3770 = func_3588_call()
uop_3774 = relay.sqrt(var_3757.astype('float64')) # shape=(360, 2)
uop_3776 = relay.tan(uop_3774.astype('float32')) # shape=(360, 2)
output = relay.Tuple([call_3751,call_3756,var_3758,call_3769,uop_3776,])
output2 = relay.Tuple([call_3752,call_3759,var_3758,call_3770,uop_3776,])
func_3780 = relay.Function([var_3757,var_3758,], output)
mod['func_3780'] = func_3780
mod = relay.transform.InferType()(mod)
mutated_mod['func_3780'] = func_3780
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3780_call = mutated_mod.get_global_var('func_3780')
var_3782 = relay.var("var_3782", dtype = "float32", shape = (360, 2))#candidate|3782|(360, 2)|var|float32
var_3783 = relay.var("var_3783", dtype = "float32", shape = (28, 4))#candidate|3783|(28, 4)|var|float32
call_3781 = func_3780_call(var_3782,var_3783,)
output = call_3781
func_3784 = relay.Function([var_3782,var_3783,], output)
mutated_mod['func_3784'] = func_3784
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3588_call = mod.get_global_var('func_3588')
func_3590_call = mutated_mod.get_global_var('func_3590')
call_3790 = func_3588_call()
call_3791 = func_3588_call()
func_801_call = mod.get_global_var('func_801')
func_803_call = mutated_mod.get_global_var('func_803')
const_3796 = relay.const([4.514691,-0.583798,6.748086,3.309197,9.097664,-8.945112,-8.032741,5.194510,-7.716100,9.798874,3.120387,-2.320446,-2.237815,-8.195171,9.419179,-2.526070,5.563799,5.779326,-0.597437,-7.640442,-4.996305,7.045189,7.904423,1.665919,-7.977861,-2.835351,-0.136238,-0.841366,6.579585,-5.465314,9.682491,3.366655,6.248386,3.515494,3.812588,2.762624,-4.066385,9.824321,-3.847420,-0.182059,0.381919,-8.406189,4.129005,-3.062285,-4.246795,-3.196270,-4.179438,-7.297526,-0.671683,9.154482,5.355265,-2.840324,-3.509376,3.154772,-5.825595,2.011172], dtype = "float64")#candidate|3796|(56,)|const|float64
call_3795 = func_801_call(relay.reshape(const_3796.astype('float64'), [4, 1, 14]))
call_3797 = func_801_call(relay.reshape(const_3796.astype('float64'), [4, 1, 14]))
output = relay.Tuple([call_3790,call_3795,const_3796,])
output2 = relay.Tuple([call_3791,call_3797,const_3796,])
func_3801 = relay.Function([], output)
mod['func_3801'] = func_3801
mod = relay.transform.InferType()(mod)
output = func_3801()
func_3802 = relay.Function([], output)
mutated_mod['func_3802'] = func_3802
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3734_call = mod.get_global_var('func_3734')
func_3736_call = mutated_mod.get_global_var('func_3736')
call_3806 = func_3734_call()
call_3807 = func_3734_call()
output = call_3806
output2 = call_3807
func_3824 = relay.Function([], output)
mod['func_3824'] = func_3824
mod = relay.transform.InferType()(mod)
output = func_3824()
func_3825 = relay.Function([], output)
mutated_mod['func_3825'] = func_3825
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3153_call = mod.get_global_var('func_3153')
func_3155_call = mutated_mod.get_global_var('func_3155')
call_3889 = func_3153_call()
call_3890 = func_3153_call()
var_3891 = relay.var("var_3891", dtype = "float32", shape = (14, 16, 3))#candidate|3891|(14, 16, 3)|var|float32
bop_3892 = relay.divide(call_3889.astype('float64'), relay.reshape(var_3891.astype('float64'), relay.shape_of(call_3889))) # shape=(14, 16, 3)
bop_3895 = relay.divide(call_3890.astype('float64'), relay.reshape(var_3891.astype('float64'), relay.shape_of(call_3890))) # shape=(14, 16, 3)
func_453_call = mod.get_global_var('func_453')
func_456_call = mutated_mod.get_global_var('func_456')
const_3897 = relay.const([5.910604,1.345052,2.940041,1.314797,5.238268,-4.454429,-4.020402,4.593292,-6.713262,-6.393111,8.369295,-7.430266,-5.709962,-8.267446,7.203915,3.059471,1.087316,-0.701670,3.548131,1.750632,-4.500842,5.045738,-4.710353,-9.999127,-2.955755,-0.024692,-2.249342,7.389851,7.795232,-3.895811,-3.667361,3.557415,7.753092,-6.174704,-8.089986,6.068469,-5.144611,1.414498,2.955172,4.737664,-1.030127,9.652903,-5.900691,6.917115,6.834080,3.751090,5.130699,4.185162,-5.948805,4.542704,7.988150,-5.197128,-2.387088,7.550260,7.630794,2.521092,-0.727589,-6.972528,1.236763,5.672668,-7.975253,8.513596,1.385794,-1.717711,-8.461411,-8.422168,-3.912692,3.573497,-2.945663,4.435177,-1.194974,8.254273,0.522160,0.328331,0.713009,2.081806,1.601688,8.326442,-2.269797,2.692649,-9.005994,-9.993585,-4.454474,8.874927,-4.632741,-1.638485,6.570478,-2.113906,1.717271,-3.847823,-5.218625,-4.096061,-8.217466,-5.233804,2.267102,3.453724,-6.707796,2.302017,-3.282729,0.596841,6.334150,5.401995,-9.995604,1.901350,2.718597,-8.795514,-2.347846,-9.814558,4.581176,8.034445,-9.865581,-3.737280,-1.243311,6.532219,-7.945125,-6.862694,-1.777944,-4.421972,8.274585,-5.744647,3.133894,-5.459557,-5.507889,-0.747422,7.023983,-4.247586,2.037986,-5.181680,-4.082325,-5.008868,6.667307,-8.258055,-4.096579,-5.137744,5.120832,-3.419097,0.395309,-7.817609,6.270402,8.667314,-1.742983,-4.386757,-3.942781,5.914507,-6.481357,2.006909,-6.970488,2.768026,1.299908,-8.415080,8.930372,7.406064,7.127890,-8.115137,1.202427,-1.195944,2.590861,4.036483,0.507340,8.752301,-5.641427,2.762402,-1.014205,0.758889,-0.089650,-1.526013,-2.046807,7.333002,6.065990,0.096818,0.883935,-4.113378,-6.941339,5.940238,5.196077,-7.949488,8.609815,-0.721382,-8.642805,8.639996,-0.641869,-7.448723,-4.316759,-3.580909,5.189860,-9.462248,7.888217,-1.920828,-5.760854,-2.889972,-5.406234,5.344882,-3.591662,5.900695,8.458954,-2.072142,1.590361,-3.988509,-0.598987,6.628270,-2.853135,-9.235200,0.321472,-4.264616,-9.889271,2.978077,1.775640,9.888607,-2.023547,-9.208873,6.573977,1.425520,-8.785879,-0.778188,5.161208,-0.927956,0.655297,1.845552,2.206982,-7.749247,-7.122064,-4.437697,-6.675215,-0.498021,8.395864,-9.650771,3.445650,8.869142,-8.657709,-0.718599,7.462752,7.721149,2.482625,3.371046,-4.428430,0.973244,2.839412,-2.789544,6.441141,4.359001,-8.340998,1.279400,7.592556,4.079312,0.512113,7.244575,-1.170718,3.862760,-0.732470,5.334637,1.751473,8.164781,-6.492312,-9.813100,-6.019554,-0.682528,-4.886226,-6.436592,-8.185505,7.569175,6.434956,8.342726,5.297454,-7.905760,3.173502,7.166686,-2.180176,-2.532643,-6.034598,-0.776014,-7.313435,6.119591,-6.787092,-3.023523,5.245783,-6.253922,5.809567,8.839074,1.684306,-3.343829,1.314672,9.407751,-9.127351,-6.121763,-2.695153,-1.628370,-4.610082,9.014972,7.709361,1.139386,4.736254,-6.211059,5.808552,-9.482355,2.632442,-0.349993,-0.787506,-7.565429,0.173689,0.644180,2.305514,-4.546101,-6.145266,-9.791749,6.468304,-0.235292,-9.652379,2.903967,-1.201391,-9.648093,-7.321775,-6.945542,-0.198669,-5.901178,-3.753826,5.973819,9.283304,7.296982,-9.746760,1.068019,5.435598,-6.674470,-7.314862,-8.254675,2.212454,-1.485871,1.247036,-3.822743,3.180803,1.146647,4.876766,9.260973,-6.548284,-3.241932,8.328412,-3.241157,7.060717,-6.554783,9.842794,9.181634,6.705234,-8.025828,-2.798510,-2.443655,8.514133,9.965115,-3.023766,9.311848,7.820405,9.501698,-5.913576,-1.711282,1.051411,4.454066,7.888915,6.190635,9.615983,3.129595,2.694003,6.761837,6.741080,9.788794,-1.913925,-1.618713,-3.632152,-7.192053,6.846822,-1.107292,4.880392,5.132707,-8.097484,2.751580,1.861329,-4.844784,-7.801330,3.736710,-7.428410,6.364009,-3.659058,1.832745,-0.591484,1.154066,-6.338377,-6.516180,4.520221,-6.483277,-5.824254,8.399689,-6.709065,-1.907779,-9.293816,-0.453551,-2.894598,5.863545,6.827400,7.725562,-3.831125,2.877357,6.880278,-8.296378,-7.847817,-6.006896,-4.216764,-7.649342,3.347689,6.778222,-5.046781,2.639463,2.922927,3.519360,6.747767,-3.383199,5.244460,-3.592110,9.753175,-1.740792,1.298354,1.277607,-5.758574,-6.189652,-5.630274,9.269005,5.567993,-1.991718,7.691402,1.184742,-0.600438,-9.705741,0.280791,-8.967939,9.313048,-5.286798,-2.291648,-7.127746,6.672960,-0.477930,-6.653121,0.441402,-5.634027,0.322984,3.393317,-9.855399,-7.603115,-7.763072,8.447396,8.794886,5.978756,0.364389,1.839360,-0.948153,-8.230277,-8.264263,0.970430,-3.797867,3.009679,8.350809,-0.609107,5.188341,9.096188,5.754751,-3.026393,5.588383,-6.936083,9.713985,8.611317,3.671885,9.352065,-3.029625,7.798378,-0.829128,-0.788094,3.395542,-3.667111,-7.703844,-0.842972,-6.293861,-0.519126,-4.757508,3.625030,-9.329728,-4.253535,-5.309389,9.252539,-3.932279,-1.326018,-6.921276,-5.432577,2.031640,-4.538327,-3.290642,0.639209,2.193396,8.929894,1.913198,-0.618614,5.671025,7.841211,-0.545135,-0.633662,3.373519,9.008099,-1.092076,9.409055,-4.595268,7.909805,0.870124,-5.129049,-0.672485,-7.165847,-5.314259,6.238411,4.089787,5.720817,3.748207,-7.353049,-5.085045,-7.806751,-5.750187,2.294395,3.975975,8.184320,8.590762,-4.657880,4.658506,2.403010,8.073372,6.764694,3.645196,-8.260636,8.335331,7.441324,-8.124655,-7.778267,-2.286540,-2.542271,-4.619268,-3.882834,5.766443,6.955324,4.991825,-1.280671,4.187942,-8.225694,-8.553653,8.354120,1.403993,-4.656060,9.124483,-5.286419,-7.700765,1.863069,8.265559,-2.350880,-1.164072,4.398785,1.512016,-4.895552,-9.284304,4.722333,4.393656,-2.581598,-5.800895,1.808760,5.347275,5.503039,-1.857977,-0.217869,-8.128081,-4.757206,-9.397198,-4.505970,6.947005,-3.207002,7.186163,-5.889249,-1.212942,-3.656658,7.720260,-1.984606,5.229942,-8.347670,1.791788,0.788079,-0.665980,-7.007727,-8.228656,-3.233631,-6.498288,9.016297,-5.508729,-9.321353,-6.491714,3.339564,-9.358313,-8.211556,8.662289,2.762145,4.557324,-0.236658,-7.503584,-7.671873,-6.511080,-0.106316,5.192041,-9.099777,-6.900720,-1.786215,6.609101,-5.111191,-8.939179,-3.741178,-1.347672,-5.755513,-3.801753,2.122670,5.342222,2.807570,-1.604881,-1.223644,8.750678,9.217704,-9.460796,-8.354621,-0.619569,3.848615,7.013078,-8.031283,-5.322458,8.374103,-1.925458,8.824639,-6.685181,2.342705,2.735598,-1.875952,-9.173648,-6.998219,-8.236520,7.367191,3.286150,7.771889,-8.780487,-1.246789,-0.817695,8.758910,-8.973297,-8.420907,-8.891321,3.073126,-4.071361,-6.836065,-4.575132,3.631560,-4.492778,8.198574,4.652759,-7.378075,-3.927193,-0.458036,3.547436,4.713426,7.972140,-6.741718,2.505350,5.988713,-8.422346,2.644936,-2.193886,0.461416,1.089698,-8.020366,7.079560,-1.467979,-7.746670,-0.289589,-5.346545,4.790846,6.501442,0.111920,-1.396572,-2.188133,8.957452,4.467961,-1.281377,-6.981367,3.411015,1.347102,5.550461,-8.142883,-7.190658,1.809137,7.755523,-5.904184,5.916882,1.599371,-7.542919,-8.765750,2.663350,7.082932,-0.848310,5.240052,4.960052,-7.691671,-4.038367,-8.010501,5.647245,-2.082945,-6.346004,0.072441,-2.503865,0.660732,7.716486,-8.803880,6.056924,-4.861935,3.685194,9.469996,-3.839100,-3.785231,6.943891,-7.839662,-3.533050,6.637015,8.622127,-2.544751,6.337816,4.752779,3.956912,-9.527388,6.306194,-5.221550,-9.722406,3.353571,7.158441,-6.546279,-1.641403,0.247502,8.583091,-6.688649,-9.996824,-1.062120,-0.995640,-2.719614,-1.533574,9.559845,1.658272,-7.032007,8.201749,2.669474,7.808649,7.776343,-8.014262,3.933315,1.262818,-5.403816,-8.318458,-1.707888,-3.748795,3.973495,9.773614,7.099854,-2.060854,-7.254834,6.921359,7.221036,1.029035,7.928433,2.632420,5.703464,-3.982099,-5.682604,1.033408,4.370847,4.950469,-0.926983,4.791261,-6.717207,0.587287,-7.096382,-0.150901,-9.091280,-3.136685,2.665065,-7.534026,7.018456,-1.888470,3.326020,-1.393442,-1.474895,0.119268,-1.080412,-7.974187,1.803444,8.633048,-6.348922,7.617202,-0.168557,-1.695551,5.431600,-7.036808,2.290982,5.280252,-1.845486,-8.036806,2.244242,6.064875,-1.571128,-6.755223,-8.687222,1.048516,4.090200,9.325233,3.372306,4.199897,-8.556615,8.344773,7.283308,-0.841583,-0.294930,-7.794699,4.368252,1.512009,0.520886,6.723756,4.515677,-9.585433,7.612041,-5.006081,-3.550621,7.619277,-4.869100,-8.084811,2.832052,4.492585,0.249707,-0.255888,-2.677526,1.779272,2.240187,9.194870,7.341994,-7.868527,0.742202,2.254659,-1.758337,-2.710789,8.451125,-4.329895,5.924180,-4.560238,1.914999,5.071340,-9.392243,3.063123,2.224768,1.214680,6.558630,7.045174,-3.440742,-2.120936,-9.405753,3.493801,6.284958,-2.194922,-7.003695,-2.892217,3.097725,1.892965,-1.912151,-8.275937,8.797965,-3.465810,7.297163,1.333479,6.730012,-5.724522,-7.157215,5.249881,-3.023625,-7.197860,9.107494,-2.504123,3.148397,-7.828476,0.692147,6.798601,-2.445608,0.437355,-5.061735,-2.376129,-2.616638,4.742087,-1.865480,-5.666631,-9.239519,7.754470,5.551147,3.525864,5.158279,-6.219482,-0.361011,9.338471,-5.713921,-0.873390,6.393826,-0.561677,3.275083,-5.471555,-6.722124,-4.712108,-6.093060,-6.143522,-0.766913,-5.799562,-3.508524,-6.716304,-9.223065,9.122714,-9.146118,3.682979,-6.149272,7.708038,2.316858,-1.312083,-8.166849,4.559671,-6.552499,1.007008,8.277863,4.351336,-4.015947,-9.574503,4.246230,7.033670,4.388739,-9.537155,-9.439088,3.664591,6.318421,-8.426084,5.880554,-0.873550,5.163163,-5.594357,9.929134,-4.242296,4.381771,6.167501,4.492375,-3.118380,4.567866,-2.159807,-4.673504,-1.987910,6.627675,0.647225,-1.719997,5.686713,2.116873,-0.045295,9.585981,3.711583,1.292518,6.215926,7.177280,7.032110,-7.084304,3.607958,2.319739,5.883236,-4.673736,3.753225,-8.870274,-3.464575,-9.656498,2.593088,-0.975332,-5.845976,9.872277,-6.581730,4.598495,2.414432,7.592786,-3.842092,-6.441972,-3.256657,5.207910,1.991002,-0.163995,0.219069,-0.454930,-5.182132,3.703513,-8.950036,-8.451145,-2.605431,-2.845849,-1.002632,-1.397060,5.121393,-8.290538,9.874777,2.780529,5.218216,-1.601628,3.928060,5.924774,3.704367,-4.936792,1.503080,-9.009227,4.377528,-6.062786,6.897231,-8.735302,3.411323,-9.324894,-3.705865,-5.284909,7.657925,9.283516,4.250213,-9.121335,2.327694,9.765448,5.830059,-9.009354,-2.275241,-2.539229,9.956570,-6.983761,4.331591,8.027280,2.874601,-3.252045,4.577256,0.205010,-1.475390,3.087225,-3.659334,0.654166,3.971785,-9.381010,-1.373988,6.090427,-6.239208,-6.066096,-7.790008,2.892259,4.413192,-5.038472,6.057556,-0.934297,2.696005,-3.649822,-8.268480,1.043702,9.274634,0.916965,4.093167,-1.158824,0.182407,9.740220,-5.973194,0.164997,-2.287253,-1.243397,6.050091,-2.412167,0.220802,-9.990253,-7.697499,4.550729,-2.809845,6.887879,2.736270,8.045180,-5.447473,-0.870864,2.345809,0.818445,9.843864,-3.708118,-4.781740,9.890515,7.814798,5.169466,4.460149,7.182217,7.967500,3.111589,-1.095180,9.110479,-2.017269,-6.990141,4.011621,4.215795,1.924864,9.412065,-1.620036,0.034864,3.668690,6.632929,3.648960,-4.133679,2.283028,5.744570,-6.145762,6.529049,-4.474385,-2.567833,2.828929,-1.041564,9.438416,-5.466872,-3.011361,3.605503,-3.300651,6.676500,-8.814640,-8.814044,3.759180,3.811024,2.061160,-5.417462,-2.291635,0.690724,1.173184,4.721352,-5.399292,-2.771565,4.633346,-6.695895,0.424286,-3.564219,8.773439,8.899894,-2.467511,-5.886119,9.227697,-4.207913,7.259946,7.744876,6.829289,-9.506630,-8.987029,6.689998,-5.707963,1.150062,0.834567,8.654553,1.331479,3.618849,-0.419745,1.333116,4.268295,8.200431,5.942982,0.938311,5.739840,-2.410999,-5.144393,-9.438296,3.216355,-9.526173,7.966185,6.329358,2.375485,-0.407723,-3.131608,7.431171,6.007819,0.924316,-2.502366,-9.424052,-2.953019,3.765340,-6.061458,0.882933,-9.013631,-7.579591,-6.776847,-9.242907,-5.734371,0.656905,-4.578981,-0.892807,7.302337,-9.277522,-9.596730,-5.048205,-6.671287,-2.990430,1.575042,-0.087148,7.058719,9.553115,2.445932,5.547224,-8.967342,-5.174865,-5.735653,1.316863,-1.807182,9.245115,-4.189413,2.292636,9.235522,4.169885,-3.752405,-8.374758,-0.766988,2.050263,5.029775,7.553568,2.849307,-3.970122,0.353041,1.749455,-3.791047,-5.641533,-9.548692,3.592291,3.712770,-5.861161,-2.213766,-6.532856,-1.974234,-9.597514,-1.589194,-5.029867,-6.001164,1.669965,-8.026448,8.111599,8.872168,0.023771,-6.789682,-0.248713,0.062548,5.308569,1.703085,-8.828586,6.036298,-6.685354,-7.520004,4.774577,4.603001,-2.519345,0.711387,-3.562844,-1.632495,1.249103,-5.191108,-2.781306,-3.313210,-4.415786,3.439350,-4.363357,1.415557,9.808053,0.525520,-1.702332,5.312097,-9.516403,4.542230,-7.394443,-4.871072,-5.593173,0.386706,-2.338467,-3.413758,0.054132,1.033478,-6.881936,-0.660293,-8.323069,-8.688856,8.185660,-0.241915,-0.833491,-9.926500,4.645447,-2.479550,-9.493453,-3.718975,-2.565174,0.577179,2.947001,4.366220,3.201854,1.594200,2.513292,0.211296,5.629688,-1.862372,8.469160,-5.213310,0.630070,-3.992461,-5.636999,-9.990798,5.096414,1.859744,-2.323489,-4.379214,-2.451309,7.182174,0.939433,-3.984260,-8.358945,-7.823974,-6.043273,-4.279729,-4.357280,4.578799,-4.315207,0.352935,5.431774,-4.763280,8.579635,5.294906,-1.981430,7.126950,3.438569,-9.436662,-8.812679,3.283726,-7.737842,-9.210065,-8.387282,9.126251,2.679678,-8.057551,3.761310,-0.033277,1.915458,2.250330,-8.247687,7.484532,-5.941762,-6.421044,7.148064,1.346475,3.487087,-1.843520,7.820990,-1.571772,-1.171318,2.800276,4.534518,-1.751541,-0.854458,-9.347096,-8.532894,-5.740123,-5.492663,7.753935,4.112017,6.936347,-0.211835,-2.750184,5.245359,-0.844280,-5.909617,-3.837284,6.126948,-8.680427,-2.057434,-3.548972,2.808993,7.475682,6.548473,8.893336,-1.150717,-2.827206,-5.109601,-2.668276,8.491743,6.599153,7.651253,-2.453583,-8.000450,-2.201778,2.577530,3.256333,5.332865,-9.930351,1.497362,4.575822,-7.011409,-3.835452,8.485760,3.525370,5.016600,-1.964716,-3.144524,3.369594,8.628867,9.541289,-1.507117,8.355927,5.370763,1.133362,0.007759,-6.534918,-1.174784,-3.044520,-5.230152,-0.953259,-7.535893,-2.452903,2.789865,4.577433,6.644480,-4.038455,3.983311,0.639322,5.644356,8.230168,-4.597931,1.766132,-2.653746,-3.670905,2.936703,-0.104669,9.909277,-4.405682,-9.459022,7.441643,-3.604227,-0.930523,-5.079947,-8.339348,-8.276998,-8.152286,-8.332369,0.715839,-6.622406,0.204755,-6.820804,7.983647,-0.086043,1.127293,-9.045317,-9.898349,-1.533737,-0.960530,-8.458717,-4.565425,9.818098,5.610448,-3.727994,-8.602358,-8.097173,-2.001324,-7.305451,-7.902853,7.272390,0.639512,9.741819,-9.748340,-5.200676,-2.924433,-7.930941,0.431912,8.186274,2.127077,3.768502,-6.837817,2.886654,0.433750,0.908292,-6.152520,5.307106,-5.402484,8.919821,-7.593275,1.778555,-8.724014,1.616151,5.808924,9.371479,6.843927,5.209941,-1.060852,-6.349471,-3.362348,-1.104133,6.158741,-0.166926,-4.255171,-4.778302,-1.432409,4.528038,8.362512,-3.478041,4.289156,8.168371,4.564697,5.699016,1.467154,2.690272,4.530237,-5.194964,7.190128,-1.300964,-3.100048,-7.081197,-9.010296,-9.926362,-6.523987,2.597088,-1.927603,-7.396960,4.287145,4.079157,-9.130369,-6.499659,-8.410426,-8.535020,7.479086,2.283604,7.219989,-4.777845,6.626934,-4.337282,-9.775961,-3.483673,-0.639236,-6.813964,-7.066103,2.161687,-9.938753,-3.705908,-7.183149,-8.892873,1.992447,-0.374703,2.294062,-4.857421,6.988849,-2.769583,-2.925571,-3.291342,-2.194963,-3.270575,-1.044880,8.137223,0.227801,-5.905191,-4.204036,-1.320724,-3.068396,-9.064973,0.896691,3.615989,8.603683,-6.845758,-8.869681,6.195726,9.482147,0.430805,9.107520,-7.084535,-4.086875,-5.652861,2.909157,-8.759573,7.837338,2.524337,3.484168,9.189846,8.111977,3.997386,-3.994376,-0.301256,-8.556484,-5.662255,-1.817055,4.540147,4.727581,4.263125,-2.094212,-2.583267,-6.730960,-5.261875,-6.205252,5.030850,-2.988369,1.706810,7.302073,-4.495579,3.499244,8.194569,-6.746922,-5.519496,-1.522989,-5.309567,3.877437,3.189948,8.303082,-0.017050,8.328247,0.411881,-1.294279,9.772604,-2.297358,4.367295,-0.261474,7.903020,6.263202,-5.394304,0.432456,-5.135168,4.341427,-1.698350,-1.232720,1.769271,-3.329736,7.906217,7.846581,-2.545589,-2.572453,-2.277328,-6.382482,3.972631,0.531498,-6.703609,6.896665,-1.181565,-2.843693,9.395539,4.438536,-5.487271,7.259563,-2.674189,-9.291258,-8.448470,-4.222303,9.712803,-3.883416,5.110574,-8.096816,-4.364834,-0.128137,6.777686,5.203531,0.479621,9.643067,5.292452,0.971254,8.596345,-9.192226,8.425187,-9.260296,-6.328567,5.854314,2.802854,2.122232,1.806091,-8.148942,-5.282235,9.485252,-8.546067,6.872154,0.196893,2.681347,4.107389,-6.771961,-9.455367,4.725152,0.622874,-9.187334,0.559195,-7.307992,-0.598380,9.714863,2.645042,-9.499619,4.923497,0.867495,2.140641,8.661432,-6.965296,8.744079,9.741580,5.599844,7.105103,1.024071,8.546858,-2.742505,-1.455596,-5.017405,-0.330011,2.462923,0.301435,5.536874,8.021574,7.887631,-4.004079,-2.610233,7.134971,8.643857,-7.017279,4.449304,-6.707808,0.975864,5.140683,-6.852139,-1.206504,9.812370,-0.045606,-9.818797,-3.314543,-0.517224,-9.238505,-5.597956,-9.730678,5.198628,-0.626915,1.094297,-1.704510,5.982763,-6.768038,2.513457,3.570059,-2.476350,6.021418,7.083243,-5.066460,1.450905,-8.665021,0.934513,9.529899,7.833172,8.345989,-6.488955,5.487151,-5.735483,-8.240530,3.802711,-8.965936,9.424976,-7.730039,8.096756,-0.558288,-4.929561,-9.515344,-1.928160,-5.112070,5.314669,-1.401956,7.273685,2.283722,3.970355,0.977024,5.936168,2.479180,-9.523244,0.875179,-6.765286,-9.297880,9.759479,-9.362258,-6.056235,0.794935,8.361275,7.023190,-6.657459,-9.103500,-8.551056,-1.401378,0.864309,3.015909,8.846515,-5.666777,-8.661650,-7.095283,3.899464,6.526930,3.335660,-4.606524,-0.429549,4.460882,-8.251654,2.839217,-2.642182,3.371185,9.294576,2.193633,1.373315,-1.628927,-2.382679,7.996080,-1.576545,6.084892,-5.189788,-0.925078,0.435829,5.325434,8.682567,9.223026,-6.103289,2.776891,1.375947,-5.624521,-5.692685,-9.889910,-9.740384,3.368113,5.424769,-5.911291,-1.868683,-9.341610,8.035803,7.483097,-8.901466,-6.915101,2.568798,-8.192811,-9.302659,-1.349212,-1.019027,9.655224,-7.026879,9.861030,5.456111,2.223105,-2.406603,4.470399,9.392806,-6.934257,0.427829,-4.238052,-0.149374,3.573053,-3.907991,-1.668270,9.428939,2.358396,-1.131772,7.700844,-1.990219,1.308279,-9.488559,-1.650254,2.515632,-0.283818,3.312674,-5.071056,4.363500,-5.096374,6.665898,-5.151002,-8.176016,-7.358057,-4.375312,-3.339434,4.708251,6.529478,9.426392,9.351273,-3.455207,4.389971,9.727356,-3.607065,-4.476455,-5.492353,8.248684,-7.892541,-2.354755,-8.149880,-2.836006,1.361387,-3.777374,3.917903,6.417847,-8.018699,-1.642227,5.323227,0.937190,4.542639,6.049307,4.007915,-3.446496,-4.689676,3.416650,-0.755200,-7.043381,3.744272,-0.571777,-4.962947,0.662790,-4.513370,-3.392143,2.577947,3.149695,9.114308,-2.699959,8.955877,-9.436314,5.510843,-9.609910,0.425628,-2.440246,7.054620,-7.728272,-8.343580,-7.034329,7.621186,-2.885038,7.502219,6.181886,-5.165582,1.691616,0.261062,-0.914509,0.496479,-4.470701,8.519415,8.466093,8.743256,-0.805280,-9.394135,-5.530982,7.371628,-8.945951,-4.147890,-4.198076,-1.660505,-5.450634,6.451311,-5.376153,5.046783,-4.669662,3.089527,7.592549,5.352703,-1.869472,8.056313,2.164322,-2.133103,5.545894,-2.323512,4.998627,1.177789,-9.840510,-3.337247,-3.268245,7.045815,-7.732295,-6.816000,9.004691,7.068156,5.524348,7.705252,-0.636529,6.699759,-4.450162,2.847972,-0.862904,-6.926499,2.433379,6.994391,-7.910873,-7.808059,-0.778399,9.620035,-6.348629,8.903543,1.243435,7.662216,-4.161310,7.134356,-6.356327,6.729250,6.227276,3.183779,-8.312575,-7.730010,1.761790,-6.405764,-1.464219,8.297092,-1.974865,-4.623800,6.620482,4.162861,-7.335902,6.557518,5.130608,2.994213,-7.075739,-1.334837,-9.106298,7.148308,5.382295,9.864271,9.082858,0.186739,3.938296,5.920182,7.251202,4.304763,3.528069,-9.804215,2.124389,-6.708447,-0.983833,-7.260131,3.641469,-7.350959,9.817746,-6.725632,-3.559249,6.845319,-4.024056,6.619885,4.486888,9.378327,3.990037,-5.800147,-4.029516,-2.961471,3.146642,5.119416,-6.099951,9.038774,8.857375,8.778774,3.737954,2.396776,5.432928,4.112979,2.552547,-3.279237,-3.996160,0.954229,5.004119,9.579164,2.366671,5.739761,-3.998560,9.653966,2.588007,-7.278441,7.124193,-3.696972,-4.666869,-9.347760,-7.815819,-6.826730,4.876235,7.541792,6.727692,9.785179,2.664888,-5.846917,3.243083,7.539421,-9.496049,-2.389947,-8.955384,3.814838,-1.462513,-5.842816,-9.894718,-2.942071,3.434375,-0.013380,-0.030201,7.578894,-3.868194,-1.784006,3.707042,-9.576439,1.087752,-4.761024,9.299600,-3.384556,6.757042,6.437911,4.072888,4.867520,5.924768,9.843211,4.996539,-2.222195,-9.987001,4.098526,-9.130406,-8.879635,-7.936571,4.037469,-5.020425,-8.384190,7.685126,5.830906,6.801410,4.574160,-8.826030,-5.514976,3.690693,3.365373,2.488148,6.064739,1.006117,3.377479,-3.782026,6.650075,-8.350720,-2.391069,4.285177,-5.552733,-9.681564,-4.045923,-2.113635,-0.231529,0.326678,-2.371715,6.092876,-4.773098,4.589750,-3.477654,0.798844,-9.355957,3.693200,8.530580,-9.959945,6.724570,9.149963,0.126032,4.809392,9.945856,0.959758,5.566554,2.880851,8.482628,-4.084652,1.911766,-7.342191,6.256410,-8.390145,-2.091040,1.132349,-2.641808,1.956126,-7.143114,4.079718,1.546701,5.493776,6.428525,4.046567,7.645891,0.970331,8.843934,-1.733501,2.604141,1.922232,4.602123,-9.946243,6.953226,0.145505,-2.297938,1.307950,-5.538249,-2.281003,7.689174,-0.178865,4.878573,2.654506,4.883654,-1.295321,2.347305,1.744914,-6.121193,-5.976391,4.298350,3.028053,-9.793416,-6.612405,-0.037945,5.860273,-9.373535,-1.704867,9.033869,-3.006254,-7.304813,5.412183,-7.410637,-9.482428,-9.640260,-4.461312,0.928238,8.410284,-6.431449,-9.289850,2.094535,-7.441323,1.013996,0.762459,0.092577,-7.918010,-0.068789,5.832051,-8.023397,8.757023,-7.356555,-6.525961,-4.090884,3.656985,5.330483,7.113485,0.320151,-1.162652,-2.988975,0.322058,7.447089,1.450370,-5.827414,-2.236906,7.303412,0.966320,4.519257,4.108358,-3.355498,-8.485287,-8.043176,-8.581309,-6.321847,-6.797019,-6.715171,-2.855417,7.292961,-5.862878,-1.657969,-5.078647,-1.059097,9.930025,-4.759844,1.097431,0.597329,-5.030714,8.607126,-5.064532,-0.479008,3.168860,-7.203475,-0.218593,2.762402,7.157395,-8.759689,4.298946,-6.551050,-6.534090,1.363041,1.219236,-9.691769,-7.154893,-9.568817,2.436603,-3.782533,7.138396,-2.685943,-1.932969,-1.512063,4.346967,-1.867903,-7.563978,4.063098,4.093759,-5.854749,7.956195,-6.266411,9.247288,-1.209432,2.577581,9.954729,-7.989784,0.867190,6.392291,-5.618055,-6.497738,-7.590554,8.855521,1.320712,-1.325505,6.029532,-1.954115,-1.797472,-9.446976,-0.608445,5.366943,0.237416,8.879306,-8.330547,-9.158931,8.130584,2.550363,2.179571,7.055399,2.636490,2.462834,-4.993155,1.466096,5.655908,0.116994,9.154850,8.873444,-5.380249,0.750620,8.638203,-2.840362,-8.160586,-3.021677,-3.422792,9.629998,-2.487744,9.477600,-6.970169,9.015497,-1.259023,-8.068705,2.535758,-6.863223,-0.450257,-8.181185,-0.032962,1.610118,9.858519,-3.286953,2.499975,4.351859,-0.856377,-7.566709,2.653780,-1.203994,0.432043,-7.239475,-8.698712,-6.206207,-9.516532,2.810619,1.334515,-8.453618,-8.609848,4.523632,-3.330801,1.280607,1.374810,6.839709,4.235727,-1.745655,-2.471471,6.280839,-4.010145,-2.715669,2.648006,8.626382,-9.836615,5.580643,-7.670340,-9.403410,1.241609,-8.491828,-9.097523,-3.739660,6.310530,-6.629126,8.234268,9.018771,6.029503,-4.444118,6.479067,-5.089079,3.853848,-7.047463,-9.772737,-7.403516,9.969999,-7.632785,4.237714,9.694450,3.808096,-9.776538,-6.414797,-6.333259,1.040821,-9.807542,-6.332835,-7.353032,-7.392538,-0.790451,-8.444622,-6.232187,5.947724,5.512883,9.065298,9.042125,-9.670146,2.753217,0.359467,-0.879485,0.427466,8.339263,0.435036,5.820240,2.599881,-9.122006,1.426599,3.676843,7.635778,8.443805,2.838318,-5.436686,-0.050237,-0.273363,9.551103,6.421339,1.653081,3.759456,-1.204167,-1.213963,-7.367503,7.926289,-6.058179,-8.472327,9.676751,-5.856416,-7.117875,-3.371086,0.224716,2.673661,-9.167443,2.375822,3.013366,-9.626449,1.099899,1.151185,-7.919734,0.405841,8.761254,-5.352878,5.149634,-5.855123,7.365064,0.356149,6.758256,-0.671947,3.365113,-7.752465,-9.998780,-8.817841,7.784888,1.476539,6.992014,-7.103986,-2.245972,4.292910,-3.274888,2.296391,8.832236,-6.702764,9.505075,-8.701192,-8.335315,-7.015653,4.284125,-8.991699,-0.310228,-2.757553,2.313983,2.428968,-2.656195,3.922639,-6.665352,-8.674781,3.771228,-9.224994,9.551841,2.389958,4.601575,-9.282516,1.293254,-3.560629,-5.066779,2.390384,2.451545,3.720146,0.456875,-2.425170,-4.130009,0.822715,3.772121,-2.213497], dtype = "float32")#candidate|3897|(2496,)|const|float32
var_3898 = relay.var("var_3898", dtype = "float64", shape = (375,))#candidate|3898|(375,)|var|float64
call_3896 = relay.TupleGetItem(func_453_call(relay.reshape(const_3897.astype('float32'), [13, 12, 16]), relay.reshape(var_3898.astype('float64'), [375,]), ), 5)
call_3899 = relay.TupleGetItem(func_456_call(relay.reshape(const_3897.astype('float32'), [13, 12, 16]), relay.reshape(var_3898.astype('float64'), [375,]), ), 5)
output = relay.Tuple([bop_3892,call_3896,const_3897,var_3898,])
output2 = relay.Tuple([bop_3895,call_3899,const_3897,var_3898,])
func_3900 = relay.Function([var_3891,var_3898,], output)
mod['func_3900'] = func_3900
mod = relay.transform.InferType()(mod)
mutated_mod['func_3900'] = func_3900
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3900_call = mutated_mod.get_global_var('func_3900')
var_3902 = relay.var("var_3902", dtype = "float32", shape = (14, 16, 3))#candidate|3902|(14, 16, 3)|var|float32
var_3903 = relay.var("var_3903", dtype = "float64", shape = (375,))#candidate|3903|(375,)|var|float64
call_3901 = func_3900_call(var_3902,var_3903,)
output = call_3901
func_3904 = relay.Function([var_3902,var_3903,], output)
mutated_mod['func_3904'] = func_3904
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3824_call = mod.get_global_var('func_3824')
func_3825_call = mutated_mod.get_global_var('func_3825')
call_3933 = func_3824_call()
call_3934 = func_3824_call()
output = call_3933
output2 = call_3934
func_3969 = relay.Function([], output)
mod['func_3969'] = func_3969
mod = relay.transform.InferType()(mod)
mutated_mod['func_3969'] = func_3969
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3969_call = mutated_mod.get_global_var('func_3969')
call_3970 = func_3969_call()
output = call_3970
func_3971 = relay.Function([], output)
mutated_mod['func_3971'] = func_3971
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3588_call = mod.get_global_var('func_3588')
func_3590_call = mutated_mod.get_global_var('func_3590')
call_3972 = func_3588_call()
call_3973 = func_3588_call()
output = call_3972
output2 = call_3973
func_3976 = relay.Function([], output)
mod['func_3976'] = func_3976
mod = relay.transform.InferType()(mod)
output = func_3976()
func_3977 = relay.Function([], output)
mutated_mod['func_3977'] = func_3977
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3264_call = mod.get_global_var('func_3264')
func_3266_call = mutated_mod.get_global_var('func_3266')
call_4000 = func_3264_call()
call_4001 = func_3264_call()
func_3356_call = mod.get_global_var('func_3356')
func_3359_call = mutated_mod.get_global_var('func_3359')
var_4011 = relay.var("var_4011", dtype = "float64", shape = (375,))#candidate|4011|(375,)|var|float64
call_4010 = relay.TupleGetItem(func_3356_call(relay.reshape(var_4011.astype('float64'), [375,])), 0)
call_4012 = relay.TupleGetItem(func_3359_call(relay.reshape(var_4011.astype('float64'), [375,])), 0)
func_362_call = mod.get_global_var('func_362')
func_365_call = mutated_mod.get_global_var('func_365')
var_4016 = relay.var("var_4016", dtype = "uint16", shape = (16,))#candidate|4016|(16,)|var|uint16
call_4015 = relay.TupleGetItem(func_362_call(relay.reshape(var_4016.astype('uint16'), [2, 4, 2])), 0)
call_4017 = relay.TupleGetItem(func_365_call(relay.reshape(var_4016.astype('uint16'), [2, 4, 2])), 0)
uop_4031 = relay.cos(call_4010.astype('float32')) # shape=(14, 16, 3)
uop_4033 = relay.cos(call_4012.astype('float32')) # shape=(14, 16, 3)
func_3478_call = mod.get_global_var('func_3478')
func_3482_call = mutated_mod.get_global_var('func_3482')
const_4035 = relay.const([5,7,4,3,-9,-1,-4,5,-6,-9,-8,-2,-10,6,-10,-4,2,7,1,-9,10,-7,3,-2,-8,-10,9], dtype = "int16")#candidate|4035|(27,)|const|int16
const_4036 = relay.const([-10,-3,9,-7,1,8,-5,4,-8,-10,5,-10,4,9,5,-1,6,-5,-3,7,-8,6,3,9,-1,2,2,8,3,7,7,5,4,-10,4,-1,-4,8,-6,-9,-7,-4,-3,4,10,-6,-1,-10,-10,-4,-8,9,-1,-9,3,6,9,10,2,7,-5,-1,-5,5,-3,-2,-3,3,5,3,-2,-7,-8,-2,-10,4,-4,-6,-6,-6,10,-10,-6,-9,6,8,-10,6,3,10,-9,-9,-7,-1,5,-2,5,8,-4,2,-8,8,7,-7,4,-4,-4,-5], dtype = "int16")#candidate|4036|(108,)|const|int16
call_4034 = func_3478_call(relay.reshape(const_4035.astype('int16'), [9, 3, 1]), relay.reshape(const_4036.astype('int16'), [9, 3, 4]), )
call_4037 = func_3478_call(relay.reshape(const_4035.astype('int16'), [9, 3, 1]), relay.reshape(const_4036.astype('int16'), [9, 3, 4]), )
func_1975_call = mod.get_global_var('func_1975')
func_1978_call = mutated_mod.get_global_var('func_1978')
const_4050 = relay.const([5.737189,-8.012212,6.779095,-1.495544,9.292945,-9.368944,2.420395,2.734212,2.845809,3.207354,-2.270196,-9.932795,8.858408,-5.706428,-3.085928,-9.950682,6.318245,2.388153,3.930800,8.090822,1.351343,-1.909626,6.950523,-0.398985,-2.670379,-9.911043,8.989625,9.754690,7.504326,6.769553,4.950834,7.607140,-9.301059,9.001841,-0.874742,6.389572], dtype = "float64")#candidate|4050|(36,)|const|float64
call_4049 = relay.TupleGetItem(func_1975_call(relay.reshape(const_4050.astype('float64'), [9, 4, 1])), 3)
call_4051 = relay.TupleGetItem(func_1978_call(relay.reshape(const_4050.astype('float64'), [9, 4, 1])), 3)
var_4060 = relay.var("var_4060", dtype = "float32", shape = (14, 16, 3))#candidate|4060|(14, 16, 3)|var|float32
bop_4061 = relay.multiply(uop_4031.astype('uint32'), relay.reshape(var_4060.astype('uint32'), relay.shape_of(uop_4031))) # shape=(14, 16, 3)
bop_4064 = relay.multiply(uop_4033.astype('uint32'), relay.reshape(var_4060.astype('uint32'), relay.shape_of(uop_4033))) # shape=(14, 16, 3)
output = relay.Tuple([call_4000,var_4011,call_4015,var_4016,call_4034,const_4035,const_4036,call_4049,const_4050,bop_4061,])
output2 = relay.Tuple([call_4001,var_4011,call_4017,var_4016,call_4037,const_4035,const_4036,call_4051,const_4050,bop_4064,])
func_4071 = relay.Function([var_4011,var_4016,var_4060,], output)
mod['func_4071'] = func_4071
mod = relay.transform.InferType()(mod)
mutated_mod['func_4071'] = func_4071
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4071_call = mutated_mod.get_global_var('func_4071')
var_4073 = relay.var("var_4073", dtype = "float64", shape = (375,))#candidate|4073|(375,)|var|float64
var_4074 = relay.var("var_4074", dtype = "uint16", shape = (16,))#candidate|4074|(16,)|var|uint16
var_4075 = relay.var("var_4075", dtype = "float32", shape = (14, 16, 3))#candidate|4075|(14, 16, 3)|var|float32
call_4072 = func_4071_call(var_4073,var_4074,var_4075,)
output = call_4072
func_4076 = relay.Function([var_4073,var_4074,var_4075,], output)
mutated_mod['func_4076'] = func_4076
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3588_call = mod.get_global_var('func_3588')
func_3590_call = mutated_mod.get_global_var('func_3590')
call_4192 = func_3588_call()
call_4193 = func_3588_call()
func_84_call = mod.get_global_var('func_84')
func_86_call = mutated_mod.get_global_var('func_86')
var_4195 = relay.var("var_4195", dtype = "float32", shape = (704,))#candidate|4195|(704,)|var|float32
call_4194 = relay.TupleGetItem(func_84_call(relay.reshape(var_4195.astype('float32'), [16, 4, 11])), 0)
call_4196 = relay.TupleGetItem(func_86_call(relay.reshape(var_4195.astype('float32'), [16, 4, 11])), 0)
output = relay.Tuple([call_4192,call_4194,var_4195,])
output2 = relay.Tuple([call_4193,call_4196,var_4195,])
func_4208 = relay.Function([var_4195,], output)
mod['func_4208'] = func_4208
mod = relay.transform.InferType()(mod)
var_4209 = relay.var("var_4209", dtype = "float32", shape = (704,))#candidate|4209|(704,)|var|float32
output = func_4208(var_4209)
func_4210 = relay.Function([var_4209], output)
mutated_mod['func_4210'] = func_4210
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3976_call = mod.get_global_var('func_3976')
func_3977_call = mutated_mod.get_global_var('func_3977')
call_4225 = func_3976_call()
call_4226 = func_3976_call()
var_4232 = relay.var("var_4232", dtype = "float32", shape = (14, 16, 3))#candidate|4232|(14, 16, 3)|var|float32
bop_4233 = relay.logical_or(call_4225.astype('bool'), relay.reshape(var_4232.astype('bool'), relay.shape_of(call_4225))) # shape=(14, 16, 3)
bop_4236 = relay.logical_or(call_4226.astype('bool'), relay.reshape(var_4232.astype('bool'), relay.shape_of(call_4226))) # shape=(14, 16, 3)
var_4239 = relay.var("var_4239", dtype = "float32", shape = (14, 16, 3))#candidate|4239|(14, 16, 3)|var|float32
bop_4240 = relay.floor_mod(var_4232.astype('float64'), relay.reshape(var_4239.astype('float64'), relay.shape_of(var_4232))) # shape=(14, 16, 3)
func_1368_call = mod.get_global_var('func_1368')
func_1373_call = mutated_mod.get_global_var('func_1373')
const_4246 = relay.const([[5.574015,7.860731,-8.747812],[-5.275147,-2.785577,0.654759],[-2.687990,8.240969,8.591253],[-2.239028,-2.964781,0.782822],[-9.595593,-6.328872,-5.560008],[7.775752,2.950532,-2.213510],[-4.887129,-3.017516,9.418043],[5.953626,-7.105296,3.811941],[5.329428,-2.539094,9.270033],[7.077531,4.562214,-6.674908],[7.999771,1.302249,-5.221850],[-8.462729,-0.376653,3.923908],[-6.050859,4.682460,4.832023],[2.704639,1.200161,-0.381336],[4.431786,-0.438520,-8.216657],[-3.701079,7.789368,-8.647337],[0.449860,-2.132157,1.941365],[4.600977,-4.453826,-5.378351],[9.319072,2.277609,-1.830951],[2.786358,6.080006,-6.155140],[-4.207923,0.830675,-5.171720],[1.863758,6.234324,1.227611],[0.387934,-8.261927,3.943179],[9.118812,-0.807184,9.119220],[-0.171848,-8.348312,5.968700],[0.988733,2.258479,5.138805],[-7.098583,9.436192,-8.579203],[-2.585165,1.457222,-5.594052],[-2.354638,6.952703,-1.784713],[9.528410,0.157803,-1.373797],[-5.896581,-9.897442,-1.982251],[8.774016,-3.549548,-3.017493],[6.714018,-9.961365,-2.790298],[4.628533,-7.870720,6.883135],[-1.375107,-4.718002,3.424012],[-3.819605,-0.918966,4.127224],[-8.058987,-1.161582,-7.684673],[0.931210,8.745552,-3.255844],[-6.428024,-2.395432,8.764014],[3.526443,-1.272954,3.787518],[-9.337425,0.234207,8.763392],[-3.956392,1.364858,-0.278504],[3.711830,6.394314,-0.620978],[-8.912438,-6.137931,6.806165],[6.279160,5.779619,-0.756627],[4.616206,-7.904075,-2.962643],[1.019191,2.999031,4.857977],[-1.846682,0.077266,9.163902],[-3.795744,4.785335,9.399270],[-6.091960,3.827677,-9.611465],[-9.210663,8.995311,8.740058],[-6.658656,-0.199731,7.242723],[-6.426216,-7.291560,-5.159340],[7.549727,-5.773170,2.807865],[5.984251,-9.145375,4.364892],[7.307719,-6.104291,-8.575508],[-3.385732,-7.684154,-7.704984],[-8.964015,-7.864846,-8.910827],[-1.985549,6.888088,-3.527145],[-7.461715,-2.091713,1.461996],[-0.925420,4.673214,9.134306],[-6.522395,9.105261,-9.205598],[-7.972781,-5.738475,6.977342],[8.876755,-8.671126,-3.476051],[3.910618,-0.263659,1.876682],[6.183447,-0.522411,-0.876714],[-5.516370,6.029833,-1.958001],[2.810393,-2.389736,9.763237],[8.076759,-9.798728,4.198906],[-8.389205,0.950820,-2.000186],[-8.581298,-9.806659,-8.166008],[-5.460041,8.984536,-1.467413],[4.859489,1.265813,6.878980],[-4.781461,9.591196,-7.572721],[1.646559,-7.395056,-9.741779],[-2.685924,-4.330924,7.570680],[5.798881,-5.201136,-4.333059],[-5.683781,-3.912768,3.708235],[-1.201417,-2.094721,-2.444058],[-7.301911,-3.572959,6.228383],[9.145649,1.642684,-5.277857],[1.806980,6.623359,6.406007],[-3.456651,5.676765,9.438891],[6.665604,-7.097562,8.831078],[-7.400044,1.397333,-0.903299],[0.052574,-1.505084,-5.109482],[-5.006979,-4.642749,8.628048],[9.356198,-4.436664,-5.983161],[0.873422,8.152431,-5.939795],[1.936037,4.477375,4.862350],[0.234598,4.118092,2.542200],[-4.195387,4.394946,7.015960],[-7.405418,9.654278,-7.950706],[-9.165354,4.147600,7.044368],[2.426873,-7.098279,1.813523],[-6.375564,6.936544,-9.781066],[4.098104,-9.078552,-2.432618],[5.528139,-9.175361,7.301357],[8.149907,-6.394638,3.450811],[-6.399310,-8.813050,6.567434],[-3.168055,-3.855160,-7.003121],[-4.978837,-6.087364,-3.206932],[0.242354,3.745197,-6.925227],[-7.421804,6.570926,-4.909464],[-9.257527,8.257589,-6.984664],[7.445671,-5.121450,-4.313933],[-9.946342,1.487980,0.202830],[4.529300,1.709674,-1.559655],[9.395564,1.922676,3.101504],[-3.692290,-7.779037,4.144367],[-7.731087,4.601295,-7.210595],[4.994263,0.852937,6.450269],[3.633893,5.564481,-8.169478],[-0.128185,-5.911975,-9.781902],[-6.372507,5.451151,-7.596136],[7.818941,6.127634,2.980301],[-9.755745,6.481139,0.959398],[-3.417676,4.868179,-7.934832],[5.553164,-9.079076,-5.979966],[4.973426,1.103984,-7.657617],[9.412648,-0.427734,-8.104393],[7.261986,6.406968,-4.042085],[1.513558,8.651320,-1.556542],[-2.608181,-0.516454,3.811997],[9.110029,3.171739,-8.553432],[-1.956837,9.441015,-2.998564],[8.471352,-3.656367,-8.154444],[0.189040,0.717124,5.331087],[-4.784856,9.881247,-5.528375],[-7.728473,-2.304744,-9.569962],[0.808504,-9.412996,5.054128],[-9.939113,-5.883091,9.709074],[-6.796592,1.174561,8.454191],[3.485312,-3.480009,2.401593],[-5.923687,0.108647,5.759692],[4.091530,-6.345331,-7.710616],[-7.939938,-0.893375,8.580900],[-2.867300,0.023759,-4.305285],[-4.247411,-3.860549,-4.339020],[2.654773,9.605001,7.150638],[-9.972327,0.976781,0.415635],[-8.827895,2.901869,-7.592524],[3.985166,-1.214338,-2.685233],[4.533804,-7.352045,-0.354925],[2.097096,2.478053,-8.518704],[-8.555323,1.459722,9.461330],[2.350257,0.186170,1.939960],[9.998503,-7.843357,6.405785],[-1.771315,3.920574,-6.330384],[-3.756024,6.834708,4.500023],[-8.359089,-0.716584,9.572644],[-2.354507,0.410131,4.519720],[-5.714182,2.416876,-9.756833],[5.164874,-0.057579,-3.697256],[-6.795795,-9.385702,-9.538874],[6.218712,3.302773,1.803110],[-1.075126,9.040645,3.850364],[-4.764899,-6.982758,-9.975236],[-3.007974,8.961690,-8.872572],[1.614841,-1.771179,-3.778447],[6.700485,-2.192391,1.569740],[-9.440115,1.656210,4.185576],[-2.080670,-6.202459,-5.577126],[-6.412742,6.506445,9.013377],[9.048662,-9.515061,-3.746418],[-1.804704,2.384722,9.911600],[-5.382528,-8.968957,5.343837],[-5.169941,5.980923,-8.071304],[3.586089,-3.603246,4.934839],[-4.981458,-5.869115,-6.133981],[3.068312,3.427236,6.475021],[0.738995,-7.567891,-8.494520],[-1.070580,4.461484,3.821041],[1.824478,-8.092199,3.821228],[7.239567,-5.209511,3.238015],[-1.898598,-0.877415,9.791529],[-4.771982,3.403263,-5.732689],[3.945231,5.622686,-1.252108],[-2.913333,6.759052,1.901958],[-7.039821,9.418871,-6.126594],[-1.282080,0.247171,-2.984225],[-3.946016,-5.712085,7.621693],[6.615102,8.448389,-4.202741],[-1.811082,6.975522,0.983402],[-2.615259,3.813604,7.598511],[-5.300745,-2.830040,-4.555976],[-4.536363,-5.427576,-1.005640],[2.557243,-5.982095,-3.516364],[-1.497869,3.211005,2.373592],[-0.354954,6.218841,6.357519],[-2.517513,-0.293304,4.379606],[9.662680,7.099933,-8.367061],[-2.660158,-6.090337,-1.983516],[9.834832,9.001765,-2.423147],[5.566329,-9.967260,-3.404370],[7.989241,-8.244445,-1.148238],[-7.720806,2.018690,7.967394],[-8.061187,-3.275151,-8.750889],[2.937465,8.692432,-8.958615],[1.081809,1.611309,-7.565298],[3.138492,-4.373864,8.663438],[-5.164935,-6.403617,-4.046711],[9.049298,4.224571,5.495992],[6.395317,4.073382,2.225569],[-2.360531,-8.003227,-1.726028],[-0.205921,-0.966172,3.178941],[1.345398,-1.873819,-0.775597],[3.140073,9.635870,9.655593],[-9.318084,4.402153,9.014624],[9.715300,-7.950297,2.638636],[5.542889,-6.164073,-5.828804],[6.858017,9.661838,-2.783488],[-1.922094,-2.775554,-9.880853],[-4.363851,-3.501115,4.399108],[-0.062082,6.935325,-5.526193],[-6.282204,-5.903897,7.885449],[-9.706564,-9.462044,-3.459566],[3.863609,-1.913620,-6.108710],[9.519289,2.783269,7.099695],[-1.311846,-2.022439,-4.115996],[-4.537626,-6.313804,7.999729],[-5.457095,-8.582946,-2.465210],[2.281065,-5.564667,6.228063],[-9.816655,4.312147,-2.788707],[-5.121933,7.850418,-4.244485]], dtype = "float32")#candidate|4246|(225, 3)|const|float32
var_4247 = relay.var("var_4247", dtype = "float64", shape = (2, 28))#candidate|4247|(2, 28)|var|float64
call_4245 = relay.TupleGetItem(func_1368_call(relay.reshape(const_4246.astype('float32'), [15, 9, 5]), relay.reshape(const_4246.astype('float32'), [15, 9, 5]), relay.reshape(var_4247.astype('float64'), [56,]), ), 2)
call_4248 = relay.TupleGetItem(func_1373_call(relay.reshape(const_4246.astype('float32'), [15, 9, 5]), relay.reshape(const_4246.astype('float32'), [15, 9, 5]), relay.reshape(var_4247.astype('float64'), [56,]), ), 2)
output = relay.Tuple([bop_4233,bop_4240,call_4245,const_4246,var_4247,])
output2 = relay.Tuple([bop_4236,bop_4240,call_4248,const_4246,var_4247,])
func_4249 = relay.Function([var_4232,var_4239,var_4247,], output)
mod['func_4249'] = func_4249
mod = relay.transform.InferType()(mod)
mutated_mod['func_4249'] = func_4249
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4249_call = mutated_mod.get_global_var('func_4249')
var_4251 = relay.var("var_4251", dtype = "float32", shape = (14, 16, 3))#candidate|4251|(14, 16, 3)|var|float32
var_4252 = relay.var("var_4252", dtype = "float32", shape = (14, 16, 3))#candidate|4252|(14, 16, 3)|var|float32
var_4253 = relay.var("var_4253", dtype = "float64", shape = (2, 28))#candidate|4253|(2, 28)|var|float64
call_4250 = func_4249_call(var_4251,var_4252,var_4253,)
output = call_4250
func_4254 = relay.Function([var_4251,var_4252,var_4253,], output)
mutated_mod['func_4254'] = func_4254
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3153_call = mod.get_global_var('func_3153')
func_3155_call = mutated_mod.get_global_var('func_3155')
call_4272 = func_3153_call()
call_4273 = func_3153_call()
output = relay.Tuple([call_4272,])
output2 = relay.Tuple([call_4273,])
func_4278 = relay.Function([], output)
mod['func_4278'] = func_4278
mod = relay.transform.InferType()(mod)
output = func_4278()
func_4279 = relay.Function([], output)
mutated_mod['func_4279'] = func_4279
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3824_call = mod.get_global_var('func_3824')
func_3825_call = mutated_mod.get_global_var('func_3825')
call_4289 = func_3824_call()
call_4290 = func_3824_call()
output = call_4289
output2 = call_4290
func_4295 = relay.Function([], output)
mod['func_4295'] = func_4295
mod = relay.transform.InferType()(mod)
output = func_4295()
func_4296 = relay.Function([], output)
mutated_mod['func_4296'] = func_4296
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3734_call = mod.get_global_var('func_3734')
func_3736_call = mutated_mod.get_global_var('func_3736')
call_4320 = func_3734_call()
call_4321 = func_3734_call()
output = call_4320
output2 = call_4321
func_4322 = relay.Function([], output)
mod['func_4322'] = func_4322
mod = relay.transform.InferType()(mod)
output = func_4322()
func_4323 = relay.Function([], output)
mutated_mod['func_4323'] = func_4323
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3824_call = mod.get_global_var('func_3824')
func_3825_call = mutated_mod.get_global_var('func_3825')
call_4338 = func_3824_call()
call_4339 = func_3824_call()
func_3976_call = mod.get_global_var('func_3976')
func_3977_call = mutated_mod.get_global_var('func_3977')
call_4344 = func_3976_call()
call_4345 = func_3976_call()
func_362_call = mod.get_global_var('func_362')
func_365_call = mutated_mod.get_global_var('func_365')
const_4357 = relay.const([8,7,-10,6,-5,4,-10,4,-6,7,-4,-2,5,2,-8,-7], dtype = "uint16")#candidate|4357|(16,)|const|uint16
call_4356 = relay.TupleGetItem(func_362_call(relay.reshape(const_4357.astype('uint16'), [2, 4, 2])), 0)
call_4358 = relay.TupleGetItem(func_365_call(relay.reshape(const_4357.astype('uint16'), [2, 4, 2])), 0)
output = relay.Tuple([call_4338,call_4344,call_4356,const_4357,])
output2 = relay.Tuple([call_4339,call_4345,call_4358,const_4357,])
func_4384 = relay.Function([], output)
mod['func_4384'] = func_4384
mod = relay.transform.InferType()(mod)
output = func_4384()
func_4385 = relay.Function([], output)
mutated_mod['func_4385'] = func_4385
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3153_call = mod.get_global_var('func_3153')
func_3155_call = mutated_mod.get_global_var('func_3155')
call_4405 = func_3153_call()
call_4406 = func_3153_call()
uop_4417 = relay.erf(call_4405.astype('float32')) # shape=(14, 16, 3)
uop_4419 = relay.erf(call_4406.astype('float32')) # shape=(14, 16, 3)
output = relay.Tuple([uop_4417,])
output2 = relay.Tuple([uop_4419,])
func_4433 = relay.Function([], output)
mod['func_4433'] = func_4433
mod = relay.transform.InferType()(mod)
output = func_4433()
func_4434 = relay.Function([], output)
mutated_mod['func_4434'] = func_4434
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3588_call = mod.get_global_var('func_3588')
func_3590_call = mutated_mod.get_global_var('func_3590')
call_4493 = func_3588_call()
call_4494 = func_3588_call()
output = call_4493
output2 = call_4494
func_4496 = relay.Function([], output)
mod['func_4496'] = func_4496
mod = relay.transform.InferType()(mod)
output = func_4496()
func_4497 = relay.Function([], output)
mutated_mod['func_4497'] = func_4497
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3976_call = mod.get_global_var('func_3976')
func_3977_call = mutated_mod.get_global_var('func_3977')
call_4502 = func_3976_call()
call_4503 = func_3976_call()
output = relay.Tuple([call_4502,])
output2 = relay.Tuple([call_4503,])
func_4521 = relay.Function([], output)
mod['func_4521'] = func_4521
mod = relay.transform.InferType()(mod)
output = func_4521()
func_4522 = relay.Function([], output)
mutated_mod['func_4522'] = func_4522
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3801_call = mod.get_global_var('func_3801')
func_3802_call = mutated_mod.get_global_var('func_3802')
call_4537 = relay.TupleGetItem(func_3801_call(), 2)
call_4538 = relay.TupleGetItem(func_3802_call(), 2)
output = call_4537
output2 = call_4538
func_4544 = relay.Function([], output)
mod['func_4544'] = func_4544
mod = relay.transform.InferType()(mod)
output = func_4544()
func_4545 = relay.Function([], output)
mutated_mod['func_4545'] = func_4545
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4544_call = mod.get_global_var('func_4544')
func_4545_call = mutated_mod.get_global_var('func_4545')
call_4563 = func_4544_call()
call_4564 = func_4544_call()
var_4574 = relay.var("var_4574", dtype = "float64", shape = (56,))#candidate|4574|(56,)|var|float64
bop_4575 = relay.subtract(call_4563.astype('uint32'), relay.reshape(var_4574.astype('uint32'), relay.shape_of(call_4563))) # shape=(56,)
bop_4578 = relay.subtract(call_4564.astype('uint32'), relay.reshape(var_4574.astype('uint32'), relay.shape_of(call_4564))) # shape=(56,)
func_4521_call = mod.get_global_var('func_4521')
func_4522_call = mutated_mod.get_global_var('func_4522')
call_4582 = relay.TupleGetItem(func_4521_call(), 0)
call_4583 = relay.TupleGetItem(func_4522_call(), 0)
func_1482_call = mod.get_global_var('func_1482')
func_1486_call = mutated_mod.get_global_var('func_1486')
const_4601 = relay.const([4.633243,-4.875118,1.607930,-1.566416,4.049385,2.525761,3.042687,0.530518,9.501529,3.966051,2.603151,-2.190365,4.456633,-7.866447,3.108201,-0.312766,5.275986,0.364867,-7.020891,-0.024977,9.701903,-3.170689,6.532533,8.063180,-7.663723,3.832425,3.561201,7.771947,-9.336279,-4.289009,8.333630,-7.121840,2.628509,2.116193,7.507084,3.374831,8.551253,-4.621207,-0.454509,1.358468,-1.395839,-4.987690,-8.376157,1.394902,1.411155,2.842677,-1.026123,2.395603,8.368947,5.571894,-9.441915,7.671265,-7.057941,-4.554987,2.383709,0.644055,-4.941872,-8.916370,9.463461,1.650840,3.470783,9.834974,6.519194,1.294136,9.020803,7.960242,5.898330,-9.504469,-3.930048,-0.446860,-5.885235,-1.812780,7.452763,-8.503167,-2.303140,3.801148,-2.081758,8.267404,5.731978,-3.519049,0.882612,-8.156214,-4.817638,-6.686161,-7.708013,-0.072458,-3.368110,3.368780,8.363350,-7.428265,-5.831267,9.219077,-9.857257,-7.479296,8.712612,-2.140493,-6.053690,-7.075420,9.138362,-7.595648,4.528056,5.791522,1.583306,-7.209478,-4.170014,-5.570581,-7.558432,3.608613,-8.190562,9.826597,-9.062960,-1.216421], dtype = "float32")#candidate|4601|(112,)|const|float32
call_4600 = relay.TupleGetItem(func_1482_call(relay.reshape(const_4601.astype('float32'), [14, 2, 4]), relay.reshape(const_4601.astype('float32'), [14, 2, 4]), ), 1)
call_4602 = relay.TupleGetItem(func_1486_call(relay.reshape(const_4601.astype('float32'), [14, 2, 4]), relay.reshape(const_4601.astype('float32'), [14, 2, 4]), ), 1)
func_1852_call = mod.get_global_var('func_1852')
func_1857_call = mutated_mod.get_global_var('func_1857')
const_4635 = relay.const(-6, dtype = "int16")#candidate|4635|()|const|int16
var_4636 = relay.var("var_4636", dtype = "int16", shape = (252,))#candidate|4636|(252,)|var|int16
const_4637 = relay.const([0.679811,0.352713,-7.184973,-5.865606,3.663230,-2.133499,-8.215915,4.105499,-0.593037,-6.063853,1.724660,-6.317575,3.691615,5.693851,4.250197,-7.681233,3.172238,-0.856513,9.190224,1.870346,-6.906866,6.024316,0.612324,1.580342,5.085843,9.978894,-2.624515,-5.931686,3.919084,-3.402249,-4.689549,5.266949,-2.854380,0.825815,-8.506512,5.400721,-2.684519,-5.445617,7.293234,4.806858,3.950364,4.687506,-7.631737,-0.908612,-4.939690,-8.978984,5.193503,-7.922459,4.759494,8.786621,-2.331387,-1.086339,7.188755,-9.839313,-4.791066,8.242642,-4.333375,4.850532,-1.808962,-8.678161,7.831473,-7.200259,-2.848460,-9.870022,-8.926613,-4.450187,-2.498556,-1.662097,3.620514,-0.903156,-1.305508,1.039744,9.586951,-7.353222,-4.702673,-3.051589,9.478335,-4.715981,2.744976,-6.302719,-0.999661,-0.639276,1.099451,-6.781192,6.934008,6.860729,-6.326279,3.210301,4.050361,-5.085030,-0.946101,5.751335,3.815770,-6.140169,5.383172,-8.513722,8.187914,-4.768842,2.849510,7.934575,-1.892735,0.231606,3.240148,-3.800965,-4.625267,2.239621,8.842495,-7.760227,-9.646478,7.410779,9.072797,-9.715936,-2.261274,-3.992829,6.637350,-3.035216,-6.296260,8.506765,-7.721024,-8.586401,-6.106936,-5.967934,0.382864,-7.541610,6.279713,9.357957,8.581407,0.155770,-7.063070,-3.769777,7.718808,2.287237,-6.995245,8.930263,-2.014187,6.282081,6.508718,-9.367246,-9.073768,0.706823,-6.912122,2.002381,-4.562398,1.467246,-0.011005,-8.518576,9.801376,5.629381,-8.033334,-7.276615,-0.111198,4.489518,3.122575,-8.803964,-8.602404,7.386330,-9.881236,2.637197,0.461722,-0.010611,-2.496058,3.724842,-7.204114,9.837572,-2.763315,-5.297472,1.133128,-6.292902,9.163184,-4.850632,-7.507046,4.546926,-2.522975,5.116303,4.299549,2.515116,9.371259,1.552026,2.781099,-7.192743,3.718004,6.756744,3.003431,8.145896,-4.419513,-8.831324,-5.789917,-8.358026,-0.192189,-4.509188,8.551678,9.480534,8.314892,-2.841486,9.382248,-7.922230,5.493489,2.464279,6.114891,-3.415860,3.049113,7.580521,-2.270408,-6.889986,1.881455,-6.247653,1.454521,1.079203,2.555743,8.331759,8.775324,0.058616,3.761982,8.831432,4.853752,6.293132,-0.526946,-3.780602,-1.131055,-8.419934,-8.521289,-2.791315,-8.678218,-7.452287,9.749197,2.415757,4.274460,-5.483515,9.549763,1.037261,4.964299,4.777704,0.099485,-4.107675,1.932575,-5.751749,5.973781,6.731337,-3.244982,9.894547,0.918086,-6.687996,0.051421,-0.116710,-0.502253,-0.642376,-8.908428,-1.477788,6.447566,3.270439,6.520574,-3.110226,-6.130156,-5.240023,7.960177,-2.118797,-0.630282,6.152549,8.325281,0.805922,-1.700772,6.363611,5.804975,-3.895899,-3.878610,4.162622,9.939861,2.556931,9.273584,7.049540,4.099679,-4.651145,-2.022146,-5.299198,8.911734,-6.364128,6.623299,-9.330254,5.263372,3.552171,-5.096660,1.096716,6.200876,6.666093,-7.660848,3.067439,-2.623894,-2.563692,-7.077651,6.998444,-6.887733,5.364907,2.234884,-9.753543,-3.702666,7.510416,1.240975,0.917278,4.228982,8.069582,1.471285,9.800674,-2.168931,-0.794113,-3.666799,-7.294816,6.567507,-8.935463,1.848682,8.408137,3.463687,-6.087401,4.378220,8.226532,-0.162641,2.314033,4.229084,-0.774654,-2.219786,-7.696310,-6.459065,2.850866,-9.966510,-6.694894,-0.377626,-8.285445,-3.906051,-6.170071,-1.355349,-2.172008,8.477101,-0.142829,4.571357,-8.468899,6.314161,-6.965059,-6.747900,-5.132270,-9.583663,-5.921980,-9.884031,-2.823845,-5.953091,4.339650,-7.866059,3.801207,1.336928,-0.616212,-6.157391,-4.164711,-5.974496,5.908825,-9.368796,2.682372,3.300982,0.382131,-0.978329,-2.048448,6.914379,8.973880,-6.795262,6.175562,-6.600836,-0.086076,-0.914829,3.419151,7.035364,3.295135,-8.211437,-9.836285,4.668037,3.626349,1.287454,-0.833128,8.887386,-4.131924,-2.731226,3.396384,-5.865959,-0.687970,-0.483549,5.616108,-3.224147,8.722603,1.282809,-2.457364,-2.657316,9.262243,-8.645792,-5.371195,0.138499,9.977809,-3.957651,5.855982,-1.437287,7.194851,2.573111,-7.844551,-1.569149,-8.140979,-8.166330,-8.659798,-6.454090,-2.997455,3.988313,0.256283,-0.448495,-7.120753,2.970041,0.421813,1.327817,6.187343,1.489532,2.229881,0.873757,4.414619,-7.408143,-0.187291,9.727119,3.250614,0.207032,-9.175577,7.625066,-2.423001,-5.279812,-6.697742,8.703275,-2.720778,-8.951600,-2.110315,4.869196,2.946283,1.642306,-9.206641,-3.786516,5.636356,-0.654933,4.934262,-3.389136,6.967003,9.229443,0.779860,7.695867,8.682528,6.663063,4.145773,-4.074656,-1.212852,6.250907,-7.868111,8.635649,5.309310,3.249364,8.182681,8.563558,-9.322715,2.264458,2.357711,1.313445,-8.690093,-9.598027,7.266512,-6.337069,-2.928009,0.082149,9.708972,-7.273335,-1.679914,-4.777541,3.544644,-5.173253,-2.429306,2.519654,-6.964744,1.026305,4.718550,9.107700,-6.733989,3.891554,1.397113,5.556547,4.371805,6.866389,-0.560434,3.014187,6.797393,9.834410,7.185856,3.454538,-7.502118,-9.893040,-2.294835,-0.123431,3.374782,2.222689,-0.956415,-7.422326,-6.992863,-3.459052,3.691603,3.589685,9.875957,-8.268399,8.892083,3.861546,-5.528912,-7.873304,3.275129,7.052708,-5.533591,8.417972,-6.997291,-3.472895,6.848033,4.691428,-9.177107,-2.092504,7.230731,1.235383,-9.841284,-5.035717,-0.731592,-0.392393,-6.474199,3.373866,-3.063361,3.812224,-3.927389,-9.630214,-4.612857,-7.691733,-5.779840,6.357453,7.688140,-4.282999,6.593243,5.438325,4.899428,8.061066,0.334622,-1.551971,0.670414,-7.047275,7.007421,7.114954,-8.827490,9.054044,-5.477134,7.814941,5.346234,-9.444842,-8.581237,-0.692680,4.792819,9.964958,-1.084971,-2.286636,-6.017537,2.683576,3.349405,3.782053,-3.702504,-9.259515,5.696280,6.804812,-3.420087,2.406282,9.738797,-3.315368,4.019182,2.498434,-8.473150,8.216172,4.897900,-6.595957,-6.724901,-5.674222,-8.446451,4.640270,-8.006048,-4.903622,-7.284996,-5.933490,-7.530907,-9.952164,-0.518976,4.921601,-7.883733,6.004105,-5.372061,-2.453393,-7.219185,4.997821,-3.352610,-5.970418,4.469272,4.203086,9.228004,0.476920,-9.729737,3.405524,-6.980526,0.025965,-1.954782,-7.071215,7.028411,5.692427,7.802980,-7.008582,6.885951,0.189434,-0.386680,3.832373,-5.786931,2.546691,-0.420762,8.431094,4.529539,5.285499,-8.910592,-5.182623,9.208974,2.573839,5.093209,-0.203275,-7.134430,9.240647,-9.331676,-5.177444,-6.240540,8.682303,4.545389,2.457408,-4.987277,-3.797697,-7.899420,-7.152438,-9.580592,-6.352151,6.780202,-3.448997,-0.481091,-5.163176,-7.735676,1.304589,-2.600338,-0.628331,-4.839065,3.970201,-3.106349,6.562968,-1.871659,-5.884510,4.546076,-2.852727,0.050061,-6.358852,9.847134,-0.205545,-1.888501,-4.528290,5.626623,-8.825714,-5.980676,-0.702195,1.114008,7.922364,8.227502,-8.162357,-8.094704,2.997121,0.855668,-1.170450,2.295910,3.660341], dtype = "float32")#candidate|4637|(675,)|const|float32
call_4634 = relay.TupleGetItem(func_1852_call(relay.reshape(const_4635.astype('int16'), []), relay.reshape(var_4636.astype('int16'), [2, 14, 9]), relay.reshape(const_4637.astype('float32'), [675,]), ), 3)
call_4638 = relay.TupleGetItem(func_1857_call(relay.reshape(const_4635.astype('int16'), []), relay.reshape(var_4636.astype('int16'), [2, 14, 9]), relay.reshape(const_4637.astype('float32'), [675,]), ), 3)
func_4433_call = mod.get_global_var('func_4433')
func_4434_call = mutated_mod.get_global_var('func_4434')
call_4650 = relay.TupleGetItem(func_4433_call(), 0)
call_4651 = relay.TupleGetItem(func_4434_call(), 0)
var_4659 = relay.var("var_4659", dtype = "int8", shape = (14, 2, 4))#candidate|4659|(14, 2, 4)|var|int8
bop_4660 = relay.divide(call_4600.astype('float64'), relay.reshape(var_4659.astype('float64'), relay.shape_of(call_4600))) # shape=(14, 2, 4)
bop_4663 = relay.divide(call_4602.astype('float64'), relay.reshape(var_4659.astype('float64'), relay.shape_of(call_4602))) # shape=(14, 2, 4)
output = relay.Tuple([bop_4575,call_4582,const_4601,call_4634,const_4635,var_4636,const_4637,call_4650,bop_4660,])
output2 = relay.Tuple([bop_4578,call_4583,const_4601,call_4638,const_4635,var_4636,const_4637,call_4651,bop_4663,])
func_4666 = relay.Function([var_4574,var_4636,var_4659,], output)
mod['func_4666'] = func_4666
mod = relay.transform.InferType()(mod)
var_4667 = relay.var("var_4667", dtype = "float64", shape = (56,))#candidate|4667|(56,)|var|float64
var_4668 = relay.var("var_4668", dtype = "int16", shape = (252,))#candidate|4668|(252,)|var|int16
var_4669 = relay.var("var_4669", dtype = "int8", shape = (14, 2, 4))#candidate|4669|(14, 2, 4)|var|int8
output = func_4666(var_4667,var_4668,var_4669,)
func_4670 = relay.Function([var_4667,var_4668,var_4669,], output)
mutated_mod['func_4670'] = func_4670
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4496_call = mod.get_global_var('func_4496')
func_4497_call = mutated_mod.get_global_var('func_4497')
call_4705 = func_4496_call()
call_4706 = func_4496_call()
output = relay.Tuple([call_4705,])
output2 = relay.Tuple([call_4706,])
func_4709 = relay.Function([], output)
mod['func_4709'] = func_4709
mod = relay.transform.InferType()(mod)
output = func_4709()
func_4710 = relay.Function([], output)
mutated_mod['func_4710'] = func_4710
mutated_mod = relay.transform.InferType()(mutated_mod)
const_4785 = relay.const([[[-10,2,-7,-7,1,-3],[8,8,-10,-7,-7,-7],[7,-8,5,-8,5,9],[7,1,3,-3,-3,-3],[2,-7,4,-6,10,-6],[9,4,-8,-8,-8,-2],[-2,-2,-6,9,6,6],[3,-10,5,-10,4,10],[4,4,6,4,3,-6]],[[-2,6,2,7,6,-8],[5,-7,1,-8,5,10],[-2,-1,2,-3,-2,-4],[4,2,1,1,10,-3],[-5,-8,7,-4,-4,-3],[10,-3,-6,9,-10,-10],[-8,7,10,1,-2,-8],[6,-5,4,-9,3,-9],[10,-1,-6,3,3,-4]],[[-9,10,3,-10,9,9],[3,-8,-9,5,4,4],[-8,-5,-7,6,3,7],[6,-5,3,6,2,-2],[2,4,5,5,-5,4],[7,-7,-10,6,-4,-8],[-5,-2,-2,-1,2,-10],[3,10,-4,-9,-6,3],[3,-1,10,-1,-6,1]],[[-7,-2,-8,-6,8,7],[2,-4,4,-6,9,-1],[7,-2,-7,2,-5,-3],[-5,-4,-6,-4,8,-7],[-7,9,-2,-5,-6,-3],[9,-7,10,-9,-2,9],[-5,6,-2,8,-8,7],[7,9,6,6,-9,-4],[-6,3,8,-8,4,-8]]], dtype = "int16")#candidate|4785|(4, 9, 6)|const|int16
const_4786 = relay.const([[[-5,8,-4,9,8,4],[-1,-9,5,2,-1,-6],[7,-7,-7,2,3,5],[-8,-5,-8,-8,-10,-4],[6,4,8,2,-10,-8],[6,-10,9,-10,-10,3],[-6,7,-2,10,-8,7],[-4,1,-8,2,-8,-6],[-8,6,-1,-7,4,2]],[[-6,3,-9,-10,-7,-1],[-10,2,-7,-9,-3,4],[5,-3,-5,4,1,5],[-6,-7,4,10,10,3],[10,-2,-6,9,6,-2],[-8,2,4,1,10,4],[3,9,-8,1,-2,-3],[7,-2,5,-6,10,4],[7,3,1,-3,-1,-10]],[[-3,-9,1,-7,-5,5],[-3,-6,-1,7,4,-3],[-7,-1,-9,1,1,-8],[1,3,4,-7,9,2],[-2,5,-10,4,5,10],[-8,7,-9,2,-2,-8],[-2,-5,-8,8,7,7],[2,-7,-9,-2,-7,4],[5,8,10,-4,-10,-1]],[[10,-8,3,-4,-9,5],[-9,-4,-7,4,4,-9],[-9,7,6,8,9,10],[-5,8,-9,-1,9,5],[-2,8,-1,10,-2,1],[-5,3,-7,8,9,-6],[-9,7,10,6,10,-10],[2,3,9,3,5,7],[-9,3,-1,6,-6,9]]], dtype = "int16")#candidate|4786|(4, 9, 6)|const|int16
bop_4787 = relay.greater_equal(const_4785.astype('bool'), relay.reshape(const_4786.astype('bool'), relay.shape_of(const_4785))) # shape=(4, 9, 6)
bop_4791 = relay.divide(const_4786.astype('float64'), relay.reshape(bop_4787.astype('float64'), relay.shape_of(const_4786))) # shape=(4, 9, 6)
output = relay.Tuple([bop_4791,])
output2 = relay.Tuple([bop_4791,])
func_4803 = relay.Function([], output)
mod['func_4803'] = func_4803
mod = relay.transform.InferType()(mod)
mutated_mod['func_4803'] = func_4803
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4803_call = mutated_mod.get_global_var('func_4803')
call_4804 = func_4803_call()
output = call_4804
func_4805 = relay.Function([], output)
mutated_mod['func_4805'] = func_4805
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3801_call = mod.get_global_var('func_3801')
func_3802_call = mutated_mod.get_global_var('func_3802')
call_4834 = relay.TupleGetItem(func_3801_call(), 0)
call_4835 = relay.TupleGetItem(func_3802_call(), 0)
output = relay.Tuple([call_4834,])
output2 = relay.Tuple([call_4835,])
func_4851 = relay.Function([], output)
mod['func_4851'] = func_4851
mod = relay.transform.InferType()(mod)
output = func_4851()
func_4852 = relay.Function([], output)
mutated_mod['func_4852'] = func_4852
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4544_call = mod.get_global_var('func_4544')
func_4545_call = mutated_mod.get_global_var('func_4545')
call_4885 = func_4544_call()
call_4886 = func_4544_call()
func_1368_call = mod.get_global_var('func_1368')
func_1373_call = mutated_mod.get_global_var('func_1373')
var_4941 = relay.var("var_4941", dtype = "float32", shape = (675,))#candidate|4941|(675,)|var|float32
call_4940 = relay.TupleGetItem(func_1368_call(relay.reshape(var_4941.astype('float32'), [15, 9, 5]), relay.reshape(var_4941.astype('float32'), [15, 9, 5]), relay.reshape(call_4885.astype('float64'), [56,]), ), 2)
call_4942 = relay.TupleGetItem(func_1373_call(relay.reshape(var_4941.astype('float32'), [15, 9, 5]), relay.reshape(var_4941.astype('float32'), [15, 9, 5]), relay.reshape(call_4885.astype('float64'), [56,]), ), 2)
output = relay.Tuple([call_4885,call_4940,var_4941,])
output2 = relay.Tuple([call_4886,call_4942,var_4941,])
func_4959 = relay.Function([var_4941,], output)
mod['func_4959'] = func_4959
mod = relay.transform.InferType()(mod)
var_4960 = relay.var("var_4960", dtype = "float32", shape = (675,))#candidate|4960|(675,)|var|float32
output = func_4959(var_4960)
func_4961 = relay.Function([var_4960], output)
mutated_mod['func_4961'] = func_4961
mutated_mod = relay.transform.InferType()(mutated_mod)
var_4984 = relay.var("var_4984", dtype = "int32", shape = ())#candidate|4984|()|var|int32
var_4985 = relay.var("var_4985", dtype = "int32", shape = (10, 6, 1))#candidate|4985|(10, 6, 1)|var|int32
bop_4986 = relay.multiply(var_4984.astype('int32'), var_4985.astype('int32')) # shape=(10, 6, 1)
uop_4991 = relay.acosh(var_4985.astype('float64')) # shape=(10, 6, 1)
func_3801_call = mod.get_global_var('func_3801')
func_3802_call = mutated_mod.get_global_var('func_3802')
call_4994 = relay.TupleGetItem(func_3801_call(), 1)
call_4995 = relay.TupleGetItem(func_3802_call(), 1)
func_3824_call = mod.get_global_var('func_3824')
func_3825_call = mutated_mod.get_global_var('func_3825')
call_5001 = func_3824_call()
call_5002 = func_3824_call()
output = relay.Tuple([bop_4986,uop_4991,call_4994,call_5001,])
output2 = relay.Tuple([bop_4986,uop_4991,call_4995,call_5002,])
func_5004 = relay.Function([var_4984,var_4985,], output)
mod['func_5004'] = func_5004
mod = relay.transform.InferType()(mod)
var_5005 = relay.var("var_5005", dtype = "int32", shape = ())#candidate|5005|()|var|int32
var_5006 = relay.var("var_5006", dtype = "int32", shape = (10, 6, 1))#candidate|5006|(10, 6, 1)|var|int32
output = func_5004(var_5005,var_5006,)
func_5007 = relay.Function([var_5005,var_5006,], output)
mutated_mod['func_5007'] = func_5007
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4709_call = mod.get_global_var('func_4709')
func_4710_call = mutated_mod.get_global_var('func_4710')
call_5050 = relay.TupleGetItem(func_4709_call(), 0)
call_5051 = relay.TupleGetItem(func_4710_call(), 0)
func_4851_call = mod.get_global_var('func_4851')
func_4852_call = mutated_mod.get_global_var('func_4852')
call_5052 = relay.TupleGetItem(func_4851_call(), 0)
call_5053 = relay.TupleGetItem(func_4852_call(), 0)
output = relay.Tuple([call_5050,call_5052,])
output2 = relay.Tuple([call_5051,call_5053,])
func_5060 = relay.Function([], output)
mod['func_5060'] = func_5060
mod = relay.transform.InferType()(mod)
mutated_mod['func_5060'] = func_5060
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5060_call = mutated_mod.get_global_var('func_5060')
call_5061 = func_5060_call()
output = call_5061
func_5062 = relay.Function([], output)
mutated_mod['func_5062'] = func_5062
mutated_mod = relay.transform.InferType()(mutated_mod)
const_5126 = relay.const(-4, dtype = "int8")#candidate|5126|()|const|int8
const_5127 = relay.const([[[-9,-1,-10,-3,5,-10],[5,8,-9,-10,-6,-7],[-2,7,-6,-7,-3,-5],[-3,1,-6,-8,-5,1],[-1,-1,9,-5,10,-6],[8,-1,-4,-5,5,-5],[-9,6,-9,5,7,8],[-7,9,-4,4,-2,2],[-3,3,3,1,-4,5],[3,5,8,-7,4,-2],[5,-10,-1,3,1,2],[-7,-7,1,4,2,5],[1,-6,-10,-5,4,-1],[10,-1,-1,7,7,7],[-6,1,10,-9,-7,-8]],[[-3,3,-8,4,-8,3],[9,5,3,-3,5,-6],[-9,-8,10,-5,-8,-2],[-3,-6,-3,-10,8,10],[1,10,-9,-1,-1,-7],[4,4,10,-8,-2,6],[5,10,5,-7,-7,-4],[-3,-7,5,-5,-5,9],[-3,-2,3,-2,8,-2],[-4,-1,5,-9,10,3],[9,-4,-5,4,2,-4],[-6,5,-8,6,5,-5],[5,-9,10,-2,-9,5],[-9,-5,5,-8,-6,4],[10,-10,-1,7,8,1]]], dtype = "int8")#candidate|5127|(2, 15, 6)|const|int8
bop_5128 = relay.logical_xor(const_5126.astype('int8'), const_5127.astype('int8')) # shape=(2, 15, 6)
output = relay.Tuple([bop_5128,])
output2 = relay.Tuple([bop_5128,])
func_5141 = relay.Function([], output)
mod['func_5141'] = func_5141
mod = relay.transform.InferType()(mod)
output = func_5141()
func_5142 = relay.Function([], output)
mutated_mod['func_5142'] = func_5142
mutated_mod = relay.transform.InferType()(mutated_mod)
const_5220 = relay.const([[[5,10,-5,9,-8],[-9,5,4,9,6],[3,3,-7,3,7],[-9,-5,4,6,10],[-6,-10,-8,5,-10],[5,9,5,2,-10]]], dtype = "uint16")#candidate|5220|(1, 6, 5)|const|uint16
var_5221 = relay.var("var_5221", dtype = "uint16", shape = (3, 6, 5))#candidate|5221|(3, 6, 5)|var|uint16
bop_5222 = relay.equal(const_5220.astype('bool'), var_5221.astype('bool')) # shape=(3, 6, 5)
output = bop_5222
output2 = bop_5222
func_5228 = relay.Function([var_5221,], output)
mod['func_5228'] = func_5228
mod = relay.transform.InferType()(mod)
var_5229 = relay.var("var_5229", dtype = "uint16", shape = (3, 6, 5))#candidate|5229|(3, 6, 5)|var|uint16
output = func_5228(var_5229)
func_5230 = relay.Function([var_5229], output)
mutated_mod['func_5230'] = func_5230
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3969_call = mod.get_global_var('func_3969')
func_3971_call = mutated_mod.get_global_var('func_3971')
call_5237 = func_3969_call()
call_5238 = func_3969_call()
output = relay.Tuple([call_5237,])
output2 = relay.Tuple([call_5238,])
func_5246 = relay.Function([], output)
mod['func_5246'] = func_5246
mod = relay.transform.InferType()(mod)
mutated_mod['func_5246'] = func_5246
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5246_call = mutated_mod.get_global_var('func_5246')
call_5247 = func_5246_call()
output = call_5247
func_5248 = relay.Function([], output)
mutated_mod['func_5248'] = func_5248
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4521_call = mod.get_global_var('func_4521')
func_4522_call = mutated_mod.get_global_var('func_4522')
call_5266 = relay.TupleGetItem(func_4521_call(), 0)
call_5267 = relay.TupleGetItem(func_4522_call(), 0)
func_1482_call = mod.get_global_var('func_1482')
func_1486_call = mutated_mod.get_global_var('func_1486')
var_5288 = relay.var("var_5288", dtype = "float32", shape = (112,))#candidate|5288|(112,)|var|float32
call_5287 = relay.TupleGetItem(func_1482_call(relay.reshape(var_5288.astype('float32'), [14, 2, 4]), relay.reshape(var_5288.astype('float32'), [14, 2, 4]), ), 1)
call_5289 = relay.TupleGetItem(func_1486_call(relay.reshape(var_5288.astype('float32'), [14, 2, 4]), relay.reshape(var_5288.astype('float32'), [14, 2, 4]), ), 1)
uop_5295 = relay.sinh(call_5266.astype('float32')) # shape=(14, 16, 3)
uop_5297 = relay.sinh(call_5267.astype('float32')) # shape=(14, 16, 3)
output = relay.Tuple([call_5287,var_5288,uop_5295,])
output2 = relay.Tuple([call_5289,var_5288,uop_5297,])
func_5305 = relay.Function([var_5288,], output)
mod['func_5305'] = func_5305
mod = relay.transform.InferType()(mod)
var_5306 = relay.var("var_5306", dtype = "float32", shape = (112,))#candidate|5306|(112,)|var|float32
output = func_5305(var_5306)
func_5307 = relay.Function([var_5306], output)
mutated_mod['func_5307'] = func_5307
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4851_call = mod.get_global_var('func_4851')
func_4852_call = mutated_mod.get_global_var('func_4852')
call_5337 = relay.TupleGetItem(func_4851_call(), 0)
call_5338 = relay.TupleGetItem(func_4852_call(), 0)
func_4322_call = mod.get_global_var('func_4322')
func_4323_call = mutated_mod.get_global_var('func_4323')
call_5347 = func_4322_call()
call_5348 = func_4322_call()
output = relay.Tuple([call_5337,call_5347,])
output2 = relay.Tuple([call_5338,call_5348,])
func_5349 = relay.Function([], output)
mod['func_5349'] = func_5349
mod = relay.transform.InferType()(mod)
output = func_5349()
func_5350 = relay.Function([], output)
mutated_mod['func_5350'] = func_5350
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3976_call = mod.get_global_var('func_3976')
func_3977_call = mutated_mod.get_global_var('func_3977')
call_5412 = func_3976_call()
call_5413 = func_3976_call()
output = call_5412
output2 = call_5413
func_5419 = relay.Function([], output)
mod['func_5419'] = func_5419
mod = relay.transform.InferType()(mod)
output = func_5419()
func_5420 = relay.Function([], output)
mutated_mod['func_5420'] = func_5420
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4709_call = mod.get_global_var('func_4709')
func_4710_call = mutated_mod.get_global_var('func_4710')
call_5450 = relay.TupleGetItem(func_4709_call(), 0)
call_5451 = relay.TupleGetItem(func_4710_call(), 0)
output = call_5450
output2 = call_5451
func_5463 = relay.Function([], output)
mod['func_5463'] = func_5463
mod = relay.transform.InferType()(mod)
mutated_mod['func_5463'] = func_5463
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5463_call = mutated_mod.get_global_var('func_5463')
call_5464 = func_5463_call()
output = call_5464
func_5465 = relay.Function([], output)
mutated_mod['func_5465'] = func_5465
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4278_call = mod.get_global_var('func_4278')
func_4279_call = mutated_mod.get_global_var('func_4279')
call_5503 = relay.TupleGetItem(func_4278_call(), 0)
call_5504 = relay.TupleGetItem(func_4279_call(), 0)
func_4384_call = mod.get_global_var('func_4384')
func_4385_call = mutated_mod.get_global_var('func_4385')
call_5508 = relay.TupleGetItem(func_4384_call(), 2)
call_5509 = relay.TupleGetItem(func_4385_call(), 2)
func_5004_call = mod.get_global_var('func_5004')
func_5007_call = mutated_mod.get_global_var('func_5007')
var_5515 = relay.var("var_5515", dtype = "int32", shape = ())#candidate|5515|()|var|int32
const_5516 = relay.const([[3,9,4,-7],[-8,-9,9,10],[2,-7,-6,5],[-6,2,2,-1],[6,7,7,-7],[10,-6,10,10],[4,8,-2,3],[-2,2,-3,-1],[4,-8,-1,3],[-1,-2,-7,-4],[10,2,-4,2],[4,-2,-6,5],[-10,-10,-10,-6],[-4,-3,-3,-3],[-8,4,3,-2]], dtype = "int32")#candidate|5516|(15, 4)|const|int32
call_5514 = relay.TupleGetItem(func_5004_call(relay.reshape(var_5515.astype('int32'), []), relay.reshape(const_5516.astype('int32'), [10, 6, 1]), ), 2)
call_5517 = relay.TupleGetItem(func_5007_call(relay.reshape(var_5515.astype('int32'), []), relay.reshape(const_5516.astype('int32'), [10, 6, 1]), ), 2)
bop_5521 = relay.bitwise_or(call_5514.astype('int64'), var_5515.astype('int64')) # shape=(4, 1, 14)
bop_5524 = relay.bitwise_or(call_5517.astype('int64'), var_5515.astype('int64')) # shape=(4, 1, 14)
output = relay.Tuple([call_5503,call_5508,const_5516,bop_5521,])
output2 = relay.Tuple([call_5504,call_5509,const_5516,bop_5524,])
func_5527 = relay.Function([var_5515,], output)
mod['func_5527'] = func_5527
mod = relay.transform.InferType()(mod)
var_5528 = relay.var("var_5528", dtype = "int32", shape = ())#candidate|5528|()|var|int32
output = func_5527(var_5528)
func_5529 = relay.Function([var_5528], output)
mutated_mod['func_5529'] = func_5529
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3801_call = mod.get_global_var('func_3801')
func_3802_call = mutated_mod.get_global_var('func_3802')
call_5534 = relay.TupleGetItem(func_3801_call(), 2)
call_5535 = relay.TupleGetItem(func_3802_call(), 2)
func_2234_call = mod.get_global_var('func_2234')
func_2236_call = mutated_mod.get_global_var('func_2236')
const_5549 = relay.const([-7,5,-7,-9,8,-5,7,-1,1,10,10,1,-5,6,-9,-5,-3,2,-5,-2,-4,5,2,10,2,3,8,-7,-2,4,-1,10,9,-5,-2,-9,-3,8,2,1,2,3,-10,4,7,-5,-8,4,8,-2,-6,9,-7,5,8,1,-3,-9,-7,5,10,-4,-7,-6,6,7,10,1,4,-7,3,-2,4,-9,4,-7,-6,-3,-7,-9,-8,7,4,-5,6,-3,-10,5,-6,-7,8,5,4,8,8,6,-8,3,-3,-2,-10,7,-8,6,-5,-4,-6,9,-6,3,8,9,-4,-8,1,-5,-5,-3,-5,8,-3,-2,-9,10,10,9,-5,-6,9,8,-5,4,-5,4,-7,9,3,10,-4,7,-6,-4,5,1,-3,5,-2,-10,6,-9,6,-5,-1,3,7,-1,-8,-5,-4,-6,-5,-7,-10,4,-10,-10,-10,5,2,-7,10,4,-5,-1,-5,-8,-10,7,-3,-7,-5,9,-4,7,4,4,3,4,-5,7,-3,-10,1,4,-8,4,10,9,8,7,-1,6,9,2,-4,-5,1,2,5,-5,-7,-6,-2,10,-2,-2,7,7,-7,-1,-7,9,-2,-1,7,9,2,-2,4,-4,8,-1,3,3,8,-10,10,2,-2,-8,6,-4,7,-5,-7,-9,-5,10,-8,-6,6,-1,7,8,-6,-8,-8,-3,8,7,-6,-10,5,-7,-4,-1,-10,7,-6,5,-3,-6,-3,7,-8,-7,-9,7,9,-8,8,-3,2,6,-7,1,3,-3,8,-10,-2,-3,3,4,-6,5,2,2,10,-1,8,6,-1,8,9,-8,-4,-2,2,1,8,2,5,-3,4,1,8,-3,-6,-10,8,6,10,-1,3,2,9,1,-10,7,10,5,-7,9,-9,10,7,-9,3,-1,3,8,-7,-6,-5,2,10,5,6,-3,-3,2,9,8,5,-8,5,10,5,1,-8,-5,-10,8,-4,-3,-1,8,-8,2,10,-2,6,-6,-8,2,2,4,10,10,-2,1,-9,3,-7,-3,-5,-9,6,3,-4,10,4,10,8,8,-2,-1,-7,-8,-9,1,-5,4,-8,7,-4,10,3,-2,1,-10,6,-3,8,-9,-4,1,-1,-3,4,2,9,3,-3,4,4,6,7,-5,3,-4,-4,-6,-1,-3,1,2,9,-3,-2,-6,-2,8,-2,-8,7,-1,8,4,-8,-4,-4,10,-4,8,1,2,-4,5,-3,10,5,-1,-7,-4,-3,6,7,-3,-9,6,-4,-5,9,4,-5,2,-4,-2,-7,7,-7,9,9,2,2,-7,-8,-5,-4,-1,-3,-6,-7,9,-7,5,-1,7,-8,-7,-8,-7,7,-3,2,8,6,-2,6,-6,10,-8,-6,1,3,6,-2,-6,-6,-10,3,-6,5,2,1,-6,-9,-4,-7,-1,-2,-2,2,1,-8,-8,2,10,2,-9,-9,-8,9,-7], dtype = "uint32")#candidate|5549|(546,)|const|uint32
call_5548 = relay.TupleGetItem(func_2234_call(relay.reshape(const_5549.astype('uint32'), [14, 3, 13])), 1)
call_5550 = relay.TupleGetItem(func_2236_call(relay.reshape(const_5549.astype('uint32'), [14, 3, 13])), 1)
output = relay.Tuple([call_5534,call_5548,const_5549,])
output2 = relay.Tuple([call_5535,call_5550,const_5549,])
func_5556 = relay.Function([], output)
mod['func_5556'] = func_5556
mod = relay.transform.InferType()(mod)
mutated_mod['func_5556'] = func_5556
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5556_call = mutated_mod.get_global_var('func_5556')
call_5557 = func_5556_call()
output = call_5557
func_5558 = relay.Function([], output)
mutated_mod['func_5558'] = func_5558
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4851_call = mod.get_global_var('func_4851')
func_4852_call = mutated_mod.get_global_var('func_4852')
call_5577 = relay.TupleGetItem(func_4851_call(), 0)
call_5578 = relay.TupleGetItem(func_4852_call(), 0)
uop_5579 = relay.atanh(call_5577.astype('float32')) # shape=(14, 16, 3)
uop_5581 = relay.atanh(call_5578.astype('float32')) # shape=(14, 16, 3)
bop_5590 = relay.floor_divide(call_5577.astype('float32'), relay.reshape(uop_5579.astype('float32'), relay.shape_of(call_5577))) # shape=(14, 16, 3)
bop_5593 = relay.floor_divide(call_5578.astype('float32'), relay.reshape(uop_5581.astype('float32'), relay.shape_of(call_5578))) # shape=(14, 16, 3)
func_5004_call = mod.get_global_var('func_5004')
func_5007_call = mutated_mod.get_global_var('func_5007')
var_5604 = relay.var("var_5604", dtype = "int32", shape = ())#candidate|5604|()|var|int32
var_5605 = relay.var("var_5605", dtype = "int32", shape = (60,))#candidate|5605|(60,)|var|int32
call_5603 = relay.TupleGetItem(func_5004_call(relay.reshape(var_5604.astype('int32'), []), relay.reshape(var_5605.astype('int32'), [10, 6, 1]), ), 3)
call_5606 = relay.TupleGetItem(func_5007_call(relay.reshape(var_5604.astype('int32'), []), relay.reshape(var_5605.astype('int32'), [10, 6, 1]), ), 3)
func_4322_call = mod.get_global_var('func_4322')
func_4323_call = mutated_mod.get_global_var('func_4323')
call_5627 = func_4322_call()
call_5628 = func_4322_call()
func_1368_call = mod.get_global_var('func_1368')
func_1373_call = mutated_mod.get_global_var('func_1373')
const_5632 = relay.const([8.176856,-2.318225,9.257864,-0.211233,3.928508,9.708830,-9.421856,6.565434,-7.589696,-9.336073,-8.366822,5.656873,-0.187535,3.743060,1.156689,-8.556788,2.566599,-9.769718,8.462882,-8.618510,6.530004,6.103794,4.430255,4.591405,3.576373,9.788593,6.771295,9.520777,-8.701099,7.803025,-1.732616,2.956180,-3.088123,-9.030506,-0.251397,-2.865370,6.355952,4.071701,2.861395,-3.477669,-8.119510,-1.466861,8.168810,6.663888,-6.861964,4.271152,-4.091768,-9.938089,-5.485058,-3.678637,8.405740,-9.774393,0.002992,-1.415580,0.284116,6.152018,-1.792090,2.502996,-2.678365,1.371664,5.099472,7.264314,5.785573,-8.963264,-6.270454,9.465625,-9.487289,-9.463547,8.153578,-3.949873,-5.537365,5.066927,1.287774,-0.233371,8.130173,-0.328086,-8.527875,4.294213,8.134789,-9.330252,-3.518544,3.506971,4.465126,-4.207301,-5.514275,1.644053,0.337288,1.335768,8.281890,-8.782413,-0.320332,6.103822,-3.502758,-9.313961,7.861167,8.818770,-4.704981,-5.098972,4.689214,5.740111,6.765119,-3.833125,4.926178,2.881403,9.371563,8.108753,-9.869012,-5.834659,7.696458,-7.499392,1.860713,0.800466,-5.783980,-0.778781,-9.413696,-4.914735,-4.400795,-5.385943,-6.999255,8.813685,7.022537,2.514191,6.942952,-6.820033,0.415583,3.846618,3.649385,-8.516506,-4.317352,4.420399,-4.178614,-0.201976,-4.265218,-9.644280,-0.078462,-3.498465,5.853036,6.783018,3.689738,6.257033,-5.499838,-7.637112,5.339257,-1.163779,2.339009,4.995528,2.473248,-7.941148,-8.158892,-8.329986,-8.320575,0.894812,2.119916,0.747447,-8.858658,4.455103,9.109223,-9.529504,-2.242119,3.643112,-8.553554,-8.019815,-3.847437,6.633913,2.342194,-0.722944,-9.528306,6.580879,-7.317207,4.766960,-2.338024,-9.791926,-6.748700,-0.192381,8.201642,-1.221555,-9.785687,7.918948,5.603841,-1.650867,-0.646977,8.138274,-9.375068,-8.423101,9.980739,7.664408,-1.143568,0.803248,3.107747,-9.879067,0.438909,-3.806289,3.886770,6.164389,4.471897,9.956126,-4.222771,-3.769183,-2.857942,7.752156,-1.741953,0.302188,-8.362742,2.340968,-0.272140,-5.093698,-9.587124,-8.686852,-7.734118,2.378755,8.672273,-8.630217,3.136354,-3.924271,2.913786,6.767434,-9.012027,8.405996,2.034363,-2.610507,-9.566449,-2.619230,-8.327003,-8.487604,-2.492026,-0.978793,-0.446539,5.309455,5.371489,4.486461,6.599187,4.926277,3.740794,3.210483,9.424963,9.161402,-0.006356,1.094120,-7.837953,-9.703364,9.223856,-8.701639,2.957599,4.853401,8.866937,9.044298,4.727744,-3.328190,9.456440,3.849767,-6.578344,-6.019473,-9.149564,5.724181,9.752041,1.421324,-7.373937,1.609295,1.840274,-8.620265,4.185088,-6.843460,-5.544549,-8.155573,-4.122709,7.150932,-5.082116,7.312911,9.564386,5.179667,-9.485380,2.307397,-1.659431,-5.077398,2.395721,-3.583030,7.286881,7.805741,5.072449,1.890772,8.539081,-9.560130,3.943252,3.870313,-5.299234,4.967799,6.517466,9.949028,1.705062,-3.194321,8.763965,-7.340544,1.841299,-3.297043,9.472924,-5.473209,-8.022669,-5.111753,-2.511191,-9.592617,-8.556677,-8.929832,-9.237611,3.587142,3.443813,-2.447950,-6.637068,3.363346,-9.553796,-4.373412,-3.010294,6.651053,-6.676791,-5.108936,6.324292,3.965254,-8.692163,1.871923,-4.014246,1.043608,-8.945170,-0.124707,-0.238639,-8.570480,0.201098,-0.608442,4.503625,2.630522,4.555548,1.410067,-5.907078,-3.690063,-4.404269,-5.586898,-1.593467,-2.956157,5.994074,9.425946,3.713210,1.957891,-9.855369,-8.612866,1.599226,2.417516,1.751755,5.275865,-6.590919,-9.440769,0.923706,4.607694,-4.991235,2.518960,-6.561617,2.178765,-0.281958,-6.086028,-0.994532,5.590838,-6.127478,-6.827665,7.291035,-6.271720,6.328054,-9.255872,0.325041,-7.971418,4.091310,6.036789,-0.091059,9.443669,8.165026,-8.054867,-1.038048,9.236442,-9.664534,-0.538703,1.934793,9.528246,-7.818286,-9.034693,5.318221,9.416122,-4.557792,-8.530829,-0.587058,3.161792,-2.617815,4.015849,2.982646,8.566914,4.619610,8.023559,-4.436499,2.467155,-2.197032,-5.396938,9.813742,5.594495,0.301532,-7.116348,1.146826,8.626923,1.903685,6.822951,-9.210983,8.917846,-8.376610,-3.241595,0.402698,5.682553,1.404835,-9.689556,-4.577733,-2.434938,5.690515,7.269046,7.776419,-6.575205,8.226372,1.931146,5.030763,1.728238,-7.183554,-2.895742,-8.194395,4.457301,-4.810841,-4.946676,0.512986,-7.517889,7.018231,-4.709710,-8.181926,-1.638302,-4.795584,1.820741,-4.351747,6.553610,1.567840,-5.088873,-6.080222,6.510497,3.847469,5.408032,8.263435,-7.213161,8.489532,1.965099,0.625656,8.298738,2.038499,5.912542,-6.560530,-4.620029,1.021491,1.712314,1.907478,-9.016911,-2.058585,9.962330,0.860710,-7.378066,-1.863012,-2.104057,6.811639,8.343186,1.959133,-5.770808,-0.242330,1.800260,-2.740628,9.029967,0.277681,-7.393532,7.723116,9.980751,7.066961,5.905670,3.403019,-0.501308,6.812013,-2.208202,-8.522442,-4.404909,0.069449,-3.485321,-0.999970,9.820548,9.860434,8.184192,-8.352075,3.384886,5.296377,5.559134,3.040845,5.809518,-6.659582,4.991139,5.457708,7.437989,2.876343,-4.381676,4.265119,8.997665,7.331376,5.258697,-1.717945,-2.679155,8.974464,-2.309121,3.038626,9.810979,4.781521,-1.558881,8.020992,-8.967849,-6.022128,-6.298608,-5.253890,-6.725213,5.471434,0.057671,3.361008,3.316477,-3.324949,0.100830,0.436136,8.397257,0.464064,5.240868,2.026236,9.626248,-8.060712,8.735631,5.155802,8.667124,4.824543,-6.794469,-2.008514,8.586401,-5.962486,-5.337167,8.090349,-4.503989,6.044279,6.888957,1.903296,-8.616120,4.177928,6.628855,-4.556080,9.492998,2.378286,-9.787330,4.104277,-8.005446,-3.121103,8.736274,-7.487756,-0.405489,-4.374890,-8.005506,-3.417607,7.857761,-6.794750,-4.878562,3.920736,-0.942611,-2.737704,-4.877699,-4.163113,7.861297,8.299292,7.130245,-3.513381,-2.025042,3.388363,4.052345,9.939575,5.834533,2.067315,-8.718070,0.556696,7.882354,6.454896,9.292279,2.087331,-1.688814,-0.528060,-7.647096,0.121250,7.809937,-3.372561,-2.803086,1.544551,8.858418,-1.957542,-6.270911,8.369209,7.072631,7.063896,-1.735810,4.524918,-8.471564,-6.407138,-8.579750,4.598388,6.155544,-2.451338,7.119472,3.329796,-7.338309,5.125517,-7.508328,0.872254,8.806441,-5.298106,9.279628,7.320065,6.322925,-1.814686,9.194108,8.364505,4.583486,9.584919,-9.001225,-4.963931,-3.637319,5.208745,-9.983794,-8.352303,9.998736,0.913713,-7.020653,-1.642099,1.705345,0.212354,-7.688199,3.474432,3.729673,4.853050,5.467863,-2.193632,7.396739,-7.731861,-7.222011,6.902541,-8.735906,-9.243151,4.944622,-0.183030,-7.300991,-4.736384,1.582776,-0.939703,-5.886112,-6.111664,6.937945,7.868219,-6.904074,-4.975389,-7.932330,-5.838706,2.895722,7.639143,-5.153290,8.732752,2.779574,7.022571,5.723768,8.297437,6.548723,5.195995,3.359472,8.932364], dtype = "float32")#candidate|5632|(675,)|const|float32
var_5633 = relay.var("var_5633", dtype = "float64", shape = (56,))#candidate|5633|(56,)|var|float64
call_5631 = relay.TupleGetItem(func_1368_call(relay.reshape(const_5632.astype('float32'), [15, 9, 5]), relay.reshape(const_5632.astype('float32'), [15, 9, 5]), relay.reshape(var_5633.astype('float64'), [56,]), ), 0)
call_5634 = relay.TupleGetItem(func_1373_call(relay.reshape(const_5632.astype('float32'), [15, 9, 5]), relay.reshape(const_5632.astype('float32'), [15, 9, 5]), relay.reshape(var_5633.astype('float64'), [56,]), ), 0)
func_135_call = mod.get_global_var('func_135')
func_137_call = mutated_mod.get_global_var('func_137')
var_5638 = relay.var("var_5638", dtype = "float64", shape = (375,))#candidate|5638|(375,)|var|float64
call_5637 = relay.TupleGetItem(func_135_call(relay.reshape(var_5638.astype('float64'), [15, 5, 5])), 2)
call_5639 = relay.TupleGetItem(func_137_call(relay.reshape(var_5638.astype('float64'), [15, 5, 5])), 2)
output = relay.Tuple([bop_5590,call_5603,var_5604,var_5605,call_5627,call_5631,const_5632,var_5633,call_5637,var_5638,])
output2 = relay.Tuple([bop_5593,call_5606,var_5604,var_5605,call_5628,call_5634,const_5632,var_5633,call_5639,var_5638,])
func_5670 = relay.Function([var_5604,var_5605,var_5633,var_5638,], output)
mod['func_5670'] = func_5670
mod = relay.transform.InferType()(mod)
var_5671 = relay.var("var_5671", dtype = "int32", shape = ())#candidate|5671|()|var|int32
var_5672 = relay.var("var_5672", dtype = "int32", shape = (60,))#candidate|5672|(60,)|var|int32
var_5673 = relay.var("var_5673", dtype = "float64", shape = (56,))#candidate|5673|(56,)|var|float64
var_5674 = relay.var("var_5674", dtype = "float64", shape = (375,))#candidate|5674|(375,)|var|float64
output = func_5670(var_5671,var_5672,var_5673,var_5674,)
func_5675 = relay.Function([var_5671,var_5672,var_5673,var_5674,], output)
mutated_mod['func_5675'] = func_5675
mutated_mod = relay.transform.InferType()(mutated_mod)
var_5677 = relay.var("var_5677", dtype = "float32", shape = (16, 2, 16))#candidate|5677|(16, 2, 16)|var|float32
uop_5678 = relay.sin(var_5677.astype('float32')) # shape=(16, 2, 16)
uop_5680 = relay.acosh(uop_5678.astype('float32')) # shape=(16, 2, 16)
bop_5690 = relay.less(uop_5678.astype('bool'), relay.reshape(uop_5680.astype('bool'), relay.shape_of(uop_5678))) # shape=(16, 2, 16)
func_4803_call = mod.get_global_var('func_4803')
func_4805_call = mutated_mod.get_global_var('func_4805')
call_5693 = relay.TupleGetItem(func_4803_call(), 0)
call_5694 = relay.TupleGetItem(func_4805_call(), 0)
func_256_call = mod.get_global_var('func_256')
func_259_call = mutated_mod.get_global_var('func_259')
const_5700 = relay.const([9.632648,-6.803067,-0.238098,2.826981,3.357341,4.435576,-9.324253,2.015057,9.834285,-4.135099], dtype = "float32")#candidate|5700|(10,)|const|float32
const_5701 = relay.const([-1.300394,5.789982,-1.193929,6.488468,2.881752,-2.700037,6.336507,7.842067,-4.096992,7.472351,-0.687129,4.185692,-0.451119,-9.338269,0.610470,-8.890393,3.286097,0.645393,-0.994145,5.127564,-9.945819,1.792777,5.177007,-8.534219,-5.277655,-1.786528,-6.651439,-4.974177,5.709361,-4.786781,4.838008,1.199761,5.091647,-2.536721,3.514663,5.839863,3.609081,8.235413,6.109936,-7.339204,1.152440,3.493751,-4.689735,-7.118729,-8.646947,-3.769885,-3.119211,-8.405817,-5.515293,6.616793,-9.360090,-3.442930,-7.480181,-3.883616,7.387650,6.639386,5.623796,4.322452,-2.434323,2.463704,-2.403755,-8.649088,8.014376,-7.493944,3.366637,-3.516141,3.741066,-5.072475,-9.371889,5.683279,6.890133,5.378314,9.362990,0.496554,-8.174890,-2.223769,-7.817891,2.698280,7.861889,-7.080137,-1.228965,-8.800392,4.780956,0.637496,2.754773,1.323510,4.821058,3.209309,5.680179,-9.307648,-1.734112,0.568769,-2.487807,-5.508312,-7.290468,-3.583646,5.606061,-0.056828,6.269047,8.930999,1.142841,-8.567759,6.452314,8.632687,-2.810636,-5.924267,2.197527,2.355076,2.255244,9.618977,-3.090884,-2.981508,6.516721,-7.767597,-4.680054,3.376649,6.104048,-5.832439,-6.761219,2.845749,2.890944,0.571287,2.300809,-0.317104,-1.249162,1.162201,-3.255657,1.748560,-5.983013,-1.605441,3.375989,-7.051481,1.727877,5.633227,8.985480,-4.317526,-0.825690,9.565215,2.640256,-7.913461,1.496169,-1.813411,3.398824,2.949272,-4.685918,-5.747974,-4.145244,-2.202895,5.080682,4.961256,-5.804223,-1.858576,5.330955,4.664249,6.134823,-9.058872,0.587779,-2.497262,-1.514788,-8.174277,-7.454050,-6.429774,-8.480069,-5.067863,-7.663793,-1.528097,-2.844327,-0.771288,-1.384914,-8.171595,5.131100,-4.038203,5.530949,-3.747062,1.534427,-1.227762,7.110425,-4.135742,2.630184,-9.929212,-2.122709,5.125778,1.687792,-0.712963,3.594266,7.097982,4.444403,4.712371,0.658057,7.454926,-9.071256,-5.643026,-3.298437,4.980435,8.620333,-3.817530,-7.275973,-6.658473,7.989841,2.258119,4.154246,3.078330,3.607902,-3.881746,-9.643081,8.964852,0.641177,3.151620,-7.052401,-5.428296,-7.707241,0.786046,-9.585270,-2.027022,-6.304567,-1.996061,-1.606392,-8.275185,-2.221315,-5.585463,-4.782438,3.237807,8.575033,-9.674623,-0.473158,-8.734522,6.408966,2.602092,4.861456,1.344206,-9.542135,-2.770043,0.019756,-4.415990,9.501799,0.928930,-7.106238,8.430187,3.484393,7.710985,-3.754163,-8.385359,5.069683,4.861051,4.073118,-2.050708,-1.947347,-5.048356,5.785151,7.877831,-9.071983,1.304939,-4.569498,-6.073130,-5.894628,2.811956,0.820981,-6.724081,1.886497,-0.946738,-6.547292,-0.767445,7.876081,-8.390452,0.886796,7.290608,-0.892464,-4.856563,9.842299,-6.979667,-7.024414,0.803839,7.708531,-1.392642,0.264856,7.526429,6.022583,1.355173,5.549189,-1.526249,5.085641,-7.374877,-3.750207,-9.743583,9.281417,6.418276,-1.766133,-4.378618,-7.750944,0.083058,5.669346,8.758173,-4.027678,6.789931,-6.200808,1.275481,9.489394,-1.779070,-3.202173,9.807629,0.080386,-6.462096,0.370399,-6.469291,3.867967,-8.846806,-4.207716,-5.877370,-6.990451,-4.861946,4.094770,-2.506710,2.023940,-4.003059,-0.606450,-4.467038,-4.528863,8.654571,8.450727,1.803772,2.040555,5.776463,1.476183,5.490486,1.014296,-3.498298,2.393416,4.530926,7.174217,-9.153825,7.351154,-3.266215,0.122309,-3.552507,7.740016,-8.005111,2.439388,-6.235591,6.626136,-3.518868,-0.564979,6.388197,8.780237,-4.421886,-7.691385,-6.590444,3.576075,7.457927,6.767928,9.936899,6.103244,4.482926,7.434245,8.323568,9.835862,1.420331,-5.405360,3.072062,2.984930,7.988684,1.179469,-0.294526,-8.303874,7.288668,8.360499,-4.013217,-8.111261,0.857691,1.455655,-9.588557,-2.497214,-1.013490,-3.965222,-6.343151,-0.288724], dtype = "float64")#candidate|5701|(375,)|const|float64
call_5699 = relay.TupleGetItem(func_256_call(relay.reshape(const_5700.astype('float32'), [10, 1, 1]), relay.reshape(const_5701.astype('float64'), [375,]), ), 1)
call_5702 = relay.TupleGetItem(func_259_call(relay.reshape(const_5700.astype('float32'), [10, 1, 1]), relay.reshape(const_5701.astype('float64'), [375,]), ), 1)
func_5463_call = mod.get_global_var('func_5463')
func_5465_call = mutated_mod.get_global_var('func_5465')
call_5713 = func_5463_call()
call_5714 = func_5463_call()
func_3734_call = mod.get_global_var('func_3734')
func_3736_call = mutated_mod.get_global_var('func_3736')
call_5717 = func_3734_call()
call_5718 = func_3734_call()
func_4322_call = mod.get_global_var('func_4322')
func_4323_call = mutated_mod.get_global_var('func_4323')
call_5725 = func_4322_call()
call_5726 = func_4322_call()
const_5742 = relay.const([[[0.871659,3.800527,-5.411208,8.771874,6.755638,8.287576,-6.059484,-3.303949,-0.820944,3.448970,-4.769888,-0.747792,2.402099,6.832847,-8.078337,-1.194504],[-3.653369,-0.752341,-1.790096,-4.653198,0.839064,8.752725,-0.685496,-6.585855,-0.819065,6.411372,-8.977750,-9.945290,-5.341183,-4.103022,-1.427577,-8.730137]],[[-8.294306,-4.245124,4.238120,-5.291823,-6.538003,-8.960189,7.795812,-5.116352,4.116143,-7.495943,6.538793,7.768931,-5.893406,-8.966587,-4.646996,-2.309274],[-4.155647,2.884314,6.826905,-7.541086,4.722834,-2.799053,-9.300714,9.312872,7.746614,0.784281,-4.106633,-0.964369,-8.889702,7.270406,9.981372,1.017104]],[[-9.879224,8.213495,-9.635936,-8.738025,2.496985,-7.933219,4.478198,7.915783,0.634439,6.240944,4.040274,4.511408,1.270425,-3.181219,-0.253617,-2.791831],[-5.246869,-2.644640,8.314821,-1.973190,4.844707,-3.718776,-4.544406,5.282884,7.200289,2.168518,-6.763524,-9.177992,-9.187358,3.085380,2.230592,7.769792]],[[6.439187,-1.824249,-8.071788,3.883609,-6.891050,-4.979818,6.756975,-3.977196,0.162309,9.221018,-3.447796,9.495446,-4.438550,4.685385,-8.394180,5.717429],[-1.713284,-5.911653,4.791090,9.466573,-7.732162,-3.752085,7.547368,-9.227135,1.858361,2.577699,6.763820,-9.128187,8.507493,6.406393,-4.976223,5.005135]],[[4.490684,-6.290100,-3.107250,-1.930149,0.649374,-2.886934,8.496969,8.178417,4.789298,5.919646,9.294861,-5.546803,8.016255,-6.669277,0.823329,4.839516],[-5.808227,7.267193,9.024147,7.118040,-9.648827,8.390468,-6.829900,-5.855375,6.542108,-2.830338,3.753499,0.857978,8.092359,5.437381,-2.441904,3.385242]],[[-0.130312,0.534858,-8.341863,-5.767326,-7.334377,-4.253004,4.350443,-7.463335,-0.575367,5.040701,-7.351175,2.511145,1.293652,-2.418556,1.479799,-3.234733],[-2.061575,6.943948,-9.021335,3.064837,6.428383,6.156275,5.087145,-9.408992,-6.744150,4.400941,-5.448336,-6.821325,3.750345,5.603987,-2.277742,-5.269862]],[[9.017745,0.877556,-3.290318,3.402783,3.434401,-7.311574,-1.803809,-8.074740,-3.383725,6.398601,-5.428118,-2.369300,-9.861950,-5.120163,4.690346,8.322318],[-5.627293,-9.561619,-3.164477,9.830411,-8.111273,-8.960674,-9.580197,-9.219252,-7.666058,2.174195,4.190092,8.010321,-3.402110,5.241437,-3.477780,-1.967272]],[[2.872157,7.096421,-5.077343,4.988954,-4.555080,-1.137223,7.151756,-7.116967,-2.884871,-1.471567,8.690950,-8.853828,-4.918431,-5.993801,-7.682002,3.446600],[0.358470,6.771562,5.995284,0.924116,-6.775598,-2.048278,-6.655033,-0.477437,1.058822,-6.829885,-7.703002,-3.528383,-3.183549,1.600802,9.388487,0.507686]],[[-5.712054,8.410325,4.068685,8.312322,-0.734659,7.177230,-7.403551,0.214540,0.675702,7.172661,-8.511413,-0.693817,-1.875024,-2.499500,-5.281936,-3.540903],[-5.059560,1.859425,-5.923549,-1.402250,-0.084354,4.700121,0.834682,-6.084098,1.662429,-3.937294,2.037142,-7.300834,-5.983240,-2.516405,-3.224533,0.165723]],[[-0.203838,3.716089,-4.010851,2.228877,9.783042,9.337726,3.640495,9.481492,8.937682,9.473951,-0.787811,-3.801696,-8.677230,-8.849043,-4.752422,3.660425],[-5.266336,2.350166,-2.447514,5.529681,-4.045063,-9.242992,6.767741,-9.523933,4.358443,8.525354,9.082251,7.008244,-1.842269,6.167595,5.739934,1.662014]],[[8.709048,-7.752702,2.590712,8.018126,4.309091,-6.838693,-0.352880,8.215220,-1.382272,0.134363,0.615376,4.318597,-9.821004,-2.449807,7.957467,3.809678],[-4.251260,1.080178,-1.718809,5.857461,-6.170484,-1.473371,-0.487958,6.340536,-5.731885,7.135251,5.299509,-6.619166,3.640812,2.780898,-0.711579,9.647744]],[[0.372400,5.633006,7.711331,3.607460,-1.621140,-4.213242,4.285988,3.437218,0.283391,2.760763,5.013970,-3.523586,-0.226901,8.644161,5.768829,-0.344427],[1.787491,-4.006718,-9.149733,9.881034,6.693826,-4.082760,9.332970,-3.009463,-0.899168,3.483928,7.143118,-4.388897,4.617681,1.379280,-4.730135,6.364483]],[[1.997811,-3.890854,9.982213,-7.233261,-2.578772,-9.814049,-2.528137,-6.837566,-8.439458,-9.268423,7.990831,-3.523871,-5.632129,2.573430,1.700212,4.537856],[-1.468607,-5.090417,1.669780,-6.394210,8.584922,1.977047,-3.955835,-4.203789,5.632679,-0.017306,2.864603,9.860632,-1.840558,-8.701904,-7.952193,-5.206989]],[[-2.222283,-2.543590,3.757970,3.993755,2.432970,-2.175205,-4.533983,5.092332,1.584291,-2.080272,-7.271102,9.464043,9.519739,-8.698170,2.635429,-3.313163],[2.960943,7.321394,-6.338870,-3.956661,0.843511,1.198369,6.096438,9.784803,-4.572357,-0.847253,9.331749,-7.079973,9.944862,-2.319430,9.599945,-1.482466]],[[-4.142447,-6.726176,-5.629315,-3.993015,4.699299,6.799498,-6.985539,-1.146644,3.757085,9.081726,-6.065279,8.740330,-9.204690,-6.250614,-4.781594,4.159649],[-4.120348,1.932814,-6.394737,-3.300788,8.826601,-4.970764,-3.264032,9.435044,0.334673,-2.114529,-5.741891,-6.850337,-2.631097,-4.590269,7.743922,9.795256]],[[7.655949,5.646900,-2.378698,-5.916602,2.474828,-5.412027,3.466017,1.735790,-0.300067,-2.491222,3.002620,-7.319348,6.547607,2.376539,-2.409039,-0.656266],[0.333157,5.590160,9.574374,-2.088420,-2.516481,-3.504790,-6.398817,6.608185,2.119346,3.723623,-7.589156,-0.629148,-9.967069,-4.605898,-1.486925,0.905395]]], dtype = "float32")#candidate|5742|(16, 2, 16)|const|float32
bop_5743 = relay.add(uop_5680.astype('int64'), relay.reshape(const_5742.astype('int64'), relay.shape_of(uop_5680))) # shape=(16, 2, 16)
bop_5747 = relay.bitwise_and(uop_5678.astype('int8'), relay.reshape(bop_5690.astype('int8'), relay.shape_of(uop_5678))) # shape=(16, 2, 16)
output = relay.Tuple([call_5693,call_5699,const_5700,const_5701,call_5713,call_5717,call_5725,bop_5743,bop_5747,])
output2 = relay.Tuple([call_5694,call_5702,const_5700,const_5701,call_5714,call_5718,call_5726,bop_5743,bop_5747,])
func_5751 = relay.Function([var_5677,], output)
mod['func_5751'] = func_5751
mod = relay.transform.InferType()(mod)
mutated_mod['func_5751'] = func_5751
mutated_mod = relay.transform.InferType()(mutated_mod)
var_5752 = relay.var("var_5752", dtype = "float32", shape = (16, 2, 16))#candidate|5752|(16, 2, 16)|var|float32
func_5751_call = mutated_mod.get_global_var('func_5751')
call_5753 = func_5751_call(var_5752)
output = call_5753
func_5754 = relay.Function([var_5752], output)
mutated_mod['func_5754'] = func_5754
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3976_call = mod.get_global_var('func_3976')
func_3977_call = mutated_mod.get_global_var('func_3977')
call_5776 = func_3976_call()
call_5777 = func_3976_call()
output = relay.Tuple([call_5776,])
output2 = relay.Tuple([call_5777,])
func_5778 = relay.Function([], output)
mod['func_5778'] = func_5778
mod = relay.transform.InferType()(mod)
mutated_mod['func_5778'] = func_5778
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5778_call = mutated_mod.get_global_var('func_5778')
call_5779 = func_5778_call()
output = call_5779
func_5780 = relay.Function([], output)
mutated_mod['func_5780'] = func_5780
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5349_call = mod.get_global_var('func_5349')
func_5350_call = mutated_mod.get_global_var('func_5350')
call_5873 = relay.TupleGetItem(func_5349_call(), 0)
call_5874 = relay.TupleGetItem(func_5350_call(), 0)
func_5419_call = mod.get_global_var('func_5419')
func_5420_call = mutated_mod.get_global_var('func_5420')
call_5886 = func_5419_call()
call_5887 = func_5419_call()
func_801_call = mod.get_global_var('func_801')
func_803_call = mutated_mod.get_global_var('func_803')
var_5897 = relay.var("var_5897", dtype = "float64", shape = (56,))#candidate|5897|(56,)|var|float64
call_5896 = func_801_call(relay.reshape(var_5897.astype('float64'), [4, 1, 14]))
call_5898 = func_801_call(relay.reshape(var_5897.astype('float64'), [4, 1, 14]))
output = relay.Tuple([call_5873,call_5886,call_5896,var_5897,])
output2 = relay.Tuple([call_5874,call_5887,call_5898,var_5897,])
func_5905 = relay.Function([var_5897,], output)
mod['func_5905'] = func_5905
mod = relay.transform.InferType()(mod)
var_5906 = relay.var("var_5906", dtype = "float64", shape = (56,))#candidate|5906|(56,)|var|float64
output = func_5905(var_5906)
func_5907 = relay.Function([var_5906], output)
mutated_mod['func_5907'] = func_5907
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4709_call = mod.get_global_var('func_4709')
func_4710_call = mutated_mod.get_global_var('func_4710')
call_5933 = relay.TupleGetItem(func_4709_call(), 0)
call_5934 = relay.TupleGetItem(func_4710_call(), 0)
output = call_5933
output2 = call_5934
func_5975 = relay.Function([], output)
mod['func_5975'] = func_5975
mod = relay.transform.InferType()(mod)
mutated_mod['func_5975'] = func_5975
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5975_call = mutated_mod.get_global_var('func_5975')
call_5976 = func_5975_call()
output = call_5976
func_5977 = relay.Function([], output)
mutated_mod['func_5977'] = func_5977
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4295_call = mod.get_global_var('func_4295')
func_4296_call = mutated_mod.get_global_var('func_4296')
call_6066 = func_4295_call()
call_6067 = func_4295_call()
output = call_6066
output2 = call_6067
func_6080 = relay.Function([], output)
mod['func_6080'] = func_6080
mod = relay.transform.InferType()(mod)
mutated_mod['func_6080'] = func_6080
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6080_call = mutated_mod.get_global_var('func_6080')
call_6081 = func_6080_call()
output = call_6081
func_6082 = relay.Function([], output)
mutated_mod['func_6082'] = func_6082
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3264_call = mod.get_global_var('func_3264')
func_3266_call = mutated_mod.get_global_var('func_3266')
call_6094 = func_3264_call()
call_6095 = func_3264_call()
func_4249_call = mod.get_global_var('func_4249')
func_4254_call = mutated_mod.get_global_var('func_4254')
var_6104 = relay.var("var_6104", dtype = "float64", shape = (56,))#candidate|6104|(56,)|var|float64
call_6103 = relay.TupleGetItem(func_4249_call(relay.reshape(call_6094.astype('float32'), [14, 16, 3]), relay.reshape(call_6094.astype('float32'), [14, 16, 3]), relay.reshape(var_6104.astype('float64'), [2, 28]), ), 0)
call_6105 = relay.TupleGetItem(func_4254_call(relay.reshape(call_6094.astype('float32'), [14, 16, 3]), relay.reshape(call_6094.astype('float32'), [14, 16, 3]), relay.reshape(var_6104.astype('float64'), [2, 28]), ), 0)
uop_6108 = relay.asin(call_6103.astype('float32')) # shape=(14, 16, 3)
uop_6110 = relay.asin(call_6105.astype('float32')) # shape=(14, 16, 3)
func_1368_call = mod.get_global_var('func_1368')
func_1373_call = mutated_mod.get_global_var('func_1373')
const_6112 = relay.const([-7.821347,-3.796374,1.262897,2.675455,-4.645899,-6.456199,-3.958993,3.810462,8.295913,6.973271,-5.010726,-0.989569,2.685834,9.735181,1.692860,-5.594824,-8.015223,8.577887,1.694543,3.269476,-7.275167,2.520871,-0.589667,-4.227416,-2.209932,-2.088625,-2.100516,-8.791494,-9.334322,-9.675664,6.885884,-8.109116,5.433613,-5.445308,-9.422654,-3.226284,3.369037,3.800681,-9.563117,-4.631839,-4.923690,2.495134,4.015726,-4.393615,6.747442,7.596112,-1.621380,-4.317037,-3.041900,-6.364564,-9.195279,7.273139,7.074039,2.296189,-5.115734,-1.786260,-0.672582,-5.654442,7.118574,-2.948018,8.899094,4.449551,3.175899,-7.206773,-1.778590,-0.395069,0.134082,1.889594,-1.183419,8.154290,-9.306525,7.650213,6.080240,-1.453289,9.429574,-3.800626,0.951284,-6.409263,2.008084,-0.545436,1.857460,1.891013,-7.884889,9.123166,3.225973,-2.479377,-4.507194,6.531515,1.637552,-7.090750,-4.774619,7.934887,1.780642,-7.423288,-2.238183,-3.517975,1.361892,3.063123,-3.207589,-2.651811,1.412904,6.922851,7.691862,9.250650,8.297046,1.269232,-5.056476,5.029677,-5.768179,7.569485,-4.685275,-1.706076,1.240113,6.174052,3.374860,4.006631,-6.612865,-7.923459,9.089760,-7.161379,-6.533836,-8.980993,2.251884,-0.707518,8.356359,-5.974703,4.018962,9.598490,-6.850579,1.885142,8.760052,-6.492801,7.054228,0.610388,3.031740,8.326398,1.173676,-4.901929,6.954341,-7.927414,-5.357696,-4.921038,8.432024,-4.914863,4.575322,9.926461,0.101882,-3.189680,5.455279,4.571618,-1.685644,-0.843182,0.691753,-7.099175,6.085532,7.203188,2.686783,6.336757,-3.854651,8.312287,0.559669,-1.992795,-7.696062,-4.904349,-0.906723,-7.252996,-4.142077,-9.263005,-7.749006,1.778468,9.923517,8.505973,-8.947869,9.719383,4.175853,-4.676598,-6.678007,5.012636,-4.658283,-5.841513,3.703787,0.786796,6.148107,5.772277,-2.980253,1.129082,-4.869100,-9.164007,1.542047,5.146078,-2.394435,-4.468177,-6.111430,-1.092043,0.427985,5.496519,8.677186,-7.670155,-5.178380,-8.761598,-5.865308,-8.196775,4.152162,-1.172532,-6.744410,9.712762,1.301589,9.937736,0.257726,-6.680468,-0.808362,3.357476,-5.444147,-8.426455,-8.533747,3.865409,-7.259638,9.999415,1.326301,1.594076,6.467966,-0.072402,-1.414795,-1.230142,8.817795,-9.248991,-2.736049,-7.911755,3.497119,0.915398,3.469108,5.872996,-9.351913,4.233007,-3.358222,3.647231,8.431913,-6.911036,-0.103153,6.134687,-6.370059,4.408469,-9.464558,2.049110,2.332879,6.008766,-2.059042,-6.722584,2.682285,-1.754631,-7.656752,3.409138,7.106679,3.856512,-3.505271,-9.176559,-6.066963,8.324666,4.414638,7.874994,9.600206,1.767467,9.536996,-2.987062,-4.154668,-8.824143,-6.088951,-4.004241,6.371635,5.626721,8.756506,-6.352217,-6.775078,-1.352242,2.833704,-1.760719,-4.144147,-7.033328,3.719459,-7.458375,7.198158,8.386395,-0.235995,1.282088,2.857477,9.784712,-5.993139,3.321501,6.685359,-9.774051,2.064983,1.157126,8.660413,7.377995,-0.015349,-8.914242,-6.742312,2.463914,7.217386,-9.202036,-0.516569,3.694174,-6.442921,4.266735,-5.316268,-9.165834,-6.317452,9.231909,1.668995,-9.663096,-6.821267,0.451396,-5.152176,0.442874,0.598648,0.081176,9.405439,0.071149,5.750065,9.565573,-6.175418,5.037452,1.728017,-6.228482,2.371889,-9.043587,6.646312,-0.402883,9.388484,-1.356746,7.361159,-3.061423,-6.310493,-6.559051,-3.189366,-8.312433,3.430645,5.420523,-1.603678,1.873361,-6.452616,-4.375181,7.079296,-7.658062,-3.558010,-8.592623,-4.004441,1.500284,-9.225966,-2.907368,0.147669,9.850785,-8.864747,-8.530613,9.562408,-8.924553,5.147720,0.132328,5.663133,6.552416,-0.868096,6.849625,-4.043826,-6.483666,8.689967,2.707610,0.099999,3.173928,6.650754,-5.318471,-0.600952,0.178601,3.076114,-8.646040,-6.910902,5.034401,2.245991,2.741653,6.060204,-7.257358,-6.318733,8.466523,9.150115,5.239620,-4.416462,6.735210,-5.997786,7.739051,1.676883,-9.559121,9.195010,4.083058,-8.854449,4.472643,-4.098990,-7.817998,1.906226,-4.437748,5.614638,-7.234896,0.725630,-1.147826,-8.834991,-7.474200,9.135715,2.759059,-7.484879,-7.246342,5.434004,-2.536199,3.095759,-9.626353,-0.682267,5.555911,-5.682425,-0.911295,0.628413,2.936357,-5.601842,-2.746831,-7.635050,-0.516109,-9.625814,4.289819,-0.829825,2.777040,6.146187,3.585442,-1.537301,7.902156,-9.222154,-6.732720,-0.319491,4.034300,1.604711,-5.485053,3.951131,-7.137293,4.665559,3.854651,0.105617,-9.842611,-7.222949,9.174217,-8.752148,1.699468,-8.646822,0.875034,3.818492,8.118946,-6.035042,-2.224528,-2.936905,8.043069,-8.615668,-2.343566,7.171497,-9.391173,-2.696999,-9.927217,-9.310484,5.155207,4.883593,5.329051,7.893084,-0.146119,5.905056,5.918548,7.454861,8.236364,1.548880,-5.610137,-7.874521,-5.192345,-8.375789,-3.659244,-0.763761,8.957156,-2.279205,-5.009248,1.693395,1.312922,8.692710,-0.069666,5.485250,-3.684169,1.750071,5.518175,-5.043020,-4.954677,-4.521554,1.111634,-1.873182,-2.253485,-7.445442,-3.257013,9.393333,-4.048609,-2.444655,-5.284952,-3.711652,-8.757051,3.475506,-1.996908,4.911643,-1.111837,1.712277,-0.914858,-0.076270,-7.840495,6.748910,-0.644719,-4.595544,1.863044,1.521725,-9.419152,9.422317,-7.134713,-8.059953,-3.470656,5.455266,2.877888,-4.581341,6.799090,-9.666837,2.638854,-3.639068,2.058407,-3.340999,-8.932641,-8.865376,-8.868406,1.801132,-9.490047,7.363312,-6.392042,9.777174,7.880386,1.216891,-1.861906,-7.809818,-9.086735,3.997066,1.722572,-4.682197,9.212926,-9.898865,-2.161090,-4.305566,8.476505,9.685106,0.879765,7.193059,2.025575,6.929513,-2.132847,0.874918,-9.630647,-5.310992,5.618378,7.014179,5.261219,-4.911048,-7.136760,-0.048232,-2.311802,6.959914,-4.273684,-3.432537,0.684370,7.093675,0.739175,-2.232715,5.514203,3.053404,-1.512589,-0.749727,-8.135477,0.255798,7.786283,-6.623904,-2.950378,6.489047,-8.921900,-2.871188,4.342712,0.423446,-5.991018,1.962710,9.307329,-0.136263,1.383001,8.799255,5.011023,-6.387398,5.611550,-7.117974,-9.799528,-0.036865,1.589026,7.567461,9.204759,6.548322,-6.522445,0.500458,1.362876,3.137187,-9.923764,-7.538491,-3.171687,0.359480,7.934759,4.790591,0.072045,-9.222254,-6.179808,-9.644017,5.794799,4.061075,-3.313038,7.729346,0.057179,-3.734727,4.797962,2.257851,-8.689702,9.302868,6.619344,5.993472,6.329883,7.860950,9.354825,7.763443,-3.858454,9.444399,1.987068,-3.373791,3.082909,4.291459,-3.647204,-5.661905,3.568353,-3.611707,-9.593812,7.870095,-1.905635,8.582022,-2.557259,-9.582739,-9.187963,5.011359,-1.455884,-6.915366,0.634909,-2.725469,-5.353047,-6.351420,7.878584,-0.921601,-2.719627,5.813983,0.707569,7.189576,3.527403,-2.259566,2.487041,2.808392,1.351342,7.087731,2.162380,-0.112261,7.082261,5.239600,-0.943261,-9.387016], dtype = "float32")#candidate|6112|(675,)|const|float32
call_6111 = relay.TupleGetItem(func_1368_call(relay.reshape(const_6112.astype('float32'), [15, 9, 5]), relay.reshape(const_6112.astype('float32'), [15, 9, 5]), relay.reshape(var_6104.astype('float64'), [56,]), ), 0)
call_6113 = relay.TupleGetItem(func_1373_call(relay.reshape(const_6112.astype('float32'), [15, 9, 5]), relay.reshape(const_6112.astype('float32'), [15, 9, 5]), relay.reshape(var_6104.astype('float64'), [56,]), ), 0)
output = relay.Tuple([call_6094,var_6104,uop_6108,call_6111,const_6112,])
output2 = relay.Tuple([call_6095,var_6104,uop_6110,call_6113,const_6112,])
func_6143 = relay.Function([var_6104,], output)
mod['func_6143'] = func_6143
mod = relay.transform.InferType()(mod)
mutated_mod['func_6143'] = func_6143
mutated_mod = relay.transform.InferType()(mutated_mod)
var_6144 = relay.var("var_6144", dtype = "float64", shape = (56,))#candidate|6144|(56,)|var|float64
func_6143_call = mutated_mod.get_global_var('func_6143')
call_6145 = func_6143_call(var_6144)
output = call_6145
func_6146 = relay.Function([var_6144], output)
mutated_mod['func_6146'] = func_6146
mutated_mod = relay.transform.InferType()(mutated_mod)
var_6199 = relay.var("var_6199", dtype = "float32", shape = (12, 1, 13))#candidate|6199|(12, 1, 13)|var|float32
uop_6200 = relay.asin(var_6199.astype('float32')) # shape=(12, 1, 13)
func_5228_call = mod.get_global_var('func_5228')
func_5230_call = mutated_mod.get_global_var('func_5230')
var_6203 = relay.var("var_6203", dtype = "uint16", shape = (3, 30))#candidate|6203|(3, 30)|var|uint16
call_6202 = func_5228_call(relay.reshape(var_6203.astype('uint16'), [3, 6, 5]))
call_6204 = func_5228_call(relay.reshape(var_6203.astype('uint16'), [3, 6, 5]))
bop_6208 = relay.bitwise_xor(var_6203.astype('uint8'), relay.reshape(call_6202.astype('uint8'), relay.shape_of(var_6203))) # shape=(3, 30)
bop_6211 = relay.bitwise_xor(var_6203.astype('uint8'), relay.reshape(call_6204.astype('uint8'), relay.shape_of(var_6203))) # shape=(3, 30)
bop_6212 = relay.less_equal(uop_6200.astype('bool'), relay.reshape(var_6199.astype('bool'), relay.shape_of(uop_6200))) # shape=(12, 1, 13)
bop_6218 = relay.equal(bop_6212.astype('bool'), relay.reshape(var_6199.astype('bool'), relay.shape_of(bop_6212))) # shape=(12, 1, 13)
output = relay.Tuple([bop_6208,bop_6218,])
output2 = relay.Tuple([bop_6211,bop_6218,])
func_6221 = relay.Function([var_6199,var_6203,], output)
mod['func_6221'] = func_6221
mod = relay.transform.InferType()(mod)
mutated_mod['func_6221'] = func_6221
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6221_call = mutated_mod.get_global_var('func_6221')
var_6223 = relay.var("var_6223", dtype = "float32", shape = (12, 1, 13))#candidate|6223|(12, 1, 13)|var|float32
var_6224 = relay.var("var_6224", dtype = "uint16", shape = (3, 30))#candidate|6224|(3, 30)|var|uint16
call_6222 = func_6221_call(var_6223,var_6224,)
output = call_6222
func_6225 = relay.Function([var_6223,var_6224,], output)
mutated_mod['func_6225'] = func_6225
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5060_call = mod.get_global_var('func_5060')
func_5062_call = mutated_mod.get_global_var('func_5062')
call_6248 = relay.TupleGetItem(func_5060_call(), 1)
call_6249 = relay.TupleGetItem(func_5062_call(), 1)
func_3588_call = mod.get_global_var('func_3588')
func_3590_call = mutated_mod.get_global_var('func_3590')
call_6253 = func_3588_call()
call_6254 = func_3588_call()
output = relay.Tuple([call_6248,call_6253,])
output2 = relay.Tuple([call_6249,call_6254,])
func_6289 = relay.Function([], output)
mod['func_6289'] = func_6289
mod = relay.transform.InferType()(mod)
mutated_mod['func_6289'] = func_6289
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6289_call = mutated_mod.get_global_var('func_6289')
call_6290 = func_6289_call()
output = call_6290
func_6291 = relay.Function([], output)
mutated_mod['func_6291'] = func_6291
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5778_call = mod.get_global_var('func_5778')
func_5780_call = mutated_mod.get_global_var('func_5780')
call_6296 = relay.TupleGetItem(func_5778_call(), 0)
call_6297 = relay.TupleGetItem(func_5780_call(), 0)
func_4496_call = mod.get_global_var('func_4496')
func_4497_call = mutated_mod.get_global_var('func_4497')
call_6313 = func_4496_call()
call_6314 = func_4496_call()
output = relay.Tuple([call_6296,call_6313,])
output2 = relay.Tuple([call_6297,call_6314,])
func_6316 = relay.Function([], output)
mod['func_6316'] = func_6316
mod = relay.transform.InferType()(mod)
output = func_6316()
func_6317 = relay.Function([], output)
mutated_mod['func_6317'] = func_6317
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5246_call = mod.get_global_var('func_5246')
func_5248_call = mutated_mod.get_global_var('func_5248')
call_6331 = relay.TupleGetItem(func_5246_call(), 0)
call_6332 = relay.TupleGetItem(func_5248_call(), 0)
output = call_6331
output2 = call_6332
func_6340 = relay.Function([], output)
mod['func_6340'] = func_6340
mod = relay.transform.InferType()(mod)
mutated_mod['func_6340'] = func_6340
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6340_call = mutated_mod.get_global_var('func_6340')
call_6341 = func_6340_call()
output = call_6341
func_6342 = relay.Function([], output)
mutated_mod['func_6342'] = func_6342
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6289_call = mod.get_global_var('func_6289')
func_6291_call = mutated_mod.get_global_var('func_6291')
call_6360 = relay.TupleGetItem(func_6289_call(), 1)
call_6361 = relay.TupleGetItem(func_6291_call(), 1)
output = relay.Tuple([call_6360,])
output2 = relay.Tuple([call_6361,])
func_6372 = relay.Function([], output)
mod['func_6372'] = func_6372
mod = relay.transform.InferType()(mod)
mutated_mod['func_6372'] = func_6372
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6372_call = mutated_mod.get_global_var('func_6372')
call_6373 = func_6372_call()
output = call_6373
func_6374 = relay.Function([], output)
mutated_mod['func_6374'] = func_6374
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3969_call = mod.get_global_var('func_3969')
func_3971_call = mutated_mod.get_global_var('func_3971')
call_6375 = func_3969_call()
call_6376 = func_3969_call()
var_6415 = relay.var("var_6415", dtype = "float32", shape = (14, 16, 3))#candidate|6415|(14, 16, 3)|var|float32
bop_6416 = relay.add(call_6375.astype('int64'), relay.reshape(var_6415.astype('int64'), relay.shape_of(call_6375))) # shape=(14, 16, 3)
bop_6419 = relay.add(call_6376.astype('int64'), relay.reshape(var_6415.astype('int64'), relay.shape_of(call_6376))) # shape=(14, 16, 3)
output = bop_6416
output2 = bop_6419
func_6433 = relay.Function([var_6415,], output)
mod['func_6433'] = func_6433
mod = relay.transform.InferType()(mod)
var_6434 = relay.var("var_6434", dtype = "float32", shape = (14, 16, 3))#candidate|6434|(14, 16, 3)|var|float32
output = func_6433(var_6434)
func_6435 = relay.Function([var_6434], output)
mutated_mod['func_6435'] = func_6435
mutated_mod = relay.transform.InferType()(mutated_mod)
const_6515 = relay.const([[[True,False,False,True,False],[False,False,True,True,False],[True,False,False,False,True]],[[False,False,False,True,True],[True,True,True,True,False],[False,False,True,False,True]],[[True,True,True,True,False],[False,False,True,True,True],[True,False,True,True,True]],[[True,True,True,True,False],[True,False,True,False,True],[True,False,False,True,False]],[[True,False,False,False,False],[False,False,False,True,False],[True,False,False,False,True]],[[True,True,True,True,True],[True,False,True,True,False],[True,False,False,True,True]],[[False,False,False,False,False],[False,True,True,False,False],[True,True,True,True,True]],[[False,True,True,True,False],[False,True,False,True,False],[False,False,False,False,True]]], dtype = "bool")#candidate|6515|(8, 3, 5)|const|bool
var_6516 = relay.var("var_6516", dtype = "bool", shape = (8, 3, 5))#candidate|6516|(8, 3, 5)|var|bool
bop_6517 = relay.logical_or(const_6515.astype('bool'), relay.reshape(var_6516.astype('bool'), relay.shape_of(const_6515))) # shape=(8, 3, 5)
output = bop_6517
output2 = bop_6517
func_6526 = relay.Function([var_6516,], output)
mod['func_6526'] = func_6526
mod = relay.transform.InferType()(mod)
var_6527 = relay.var("var_6527", dtype = "bool", shape = (8, 3, 5))#candidate|6527|(8, 3, 5)|var|bool
output = func_6526(var_6527)
func_6528 = relay.Function([var_6527], output)
mutated_mod['func_6528'] = func_6528
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3969_call = mod.get_global_var('func_3969')
func_3971_call = mutated_mod.get_global_var('func_3971')
call_6618 = func_3969_call()
call_6619 = func_3969_call()
output = call_6618
output2 = call_6619
func_6627 = relay.Function([], output)
mod['func_6627'] = func_6627
mod = relay.transform.InferType()(mod)
output = func_6627()
func_6628 = relay.Function([], output)
mutated_mod['func_6628'] = func_6628
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3734_call = mod.get_global_var('func_3734')
func_3736_call = mutated_mod.get_global_var('func_3736')
call_6639 = func_3734_call()
call_6640 = func_3734_call()
func_3264_call = mod.get_global_var('func_3264')
func_3266_call = mutated_mod.get_global_var('func_3266')
call_6645 = func_3264_call()
call_6646 = func_3264_call()
bop_6654 = relay.greater_equal(call_6639.astype('bool'), relay.reshape(call_6645.astype('bool'), relay.shape_of(call_6639))) # shape=(14, 16, 3)
bop_6657 = relay.greater_equal(call_6640.astype('bool'), relay.reshape(call_6646.astype('bool'), relay.shape_of(call_6640))) # shape=(14, 16, 3)
func_4249_call = mod.get_global_var('func_4249')
func_4254_call = mutated_mod.get_global_var('func_4254')
const_6667 = relay.const([4.052028,6.122809,-1.478090,3.786083,-4.248386,-0.126373,-3.055127,-7.394529,4.791884,-1.604391,-4.616686,3.252397,-8.987554,-7.957626,-7.383472,-4.711924,-3.486397,5.907801,0.441519,-4.207927,-2.258366,5.300279,7.757841,-4.694684,-2.953998,-2.417365,-4.870834,-7.492482,0.486663,1.670584,9.920264,6.192081,6.410942,7.915011,1.969372,-1.218446,-1.750545,-5.379572,-7.812496,7.853258,-6.304739,3.925337,7.522073,2.297707,-4.554353,-4.981371,-8.431920,9.983381,-9.048471,-7.040220,3.417894,-7.611158,-4.581230,4.876397,7.413287,4.921962], dtype = "float64")#candidate|6667|(56,)|const|float64
call_6666 = relay.TupleGetItem(func_4249_call(relay.reshape(bop_6654.astype('float32'), [14, 16, 3]), relay.reshape(bop_6654.astype('float32'), [14, 16, 3]), relay.reshape(const_6667.astype('float64'), [2, 28]), ), 3)
call_6668 = relay.TupleGetItem(func_4254_call(relay.reshape(bop_6654.astype('float32'), [14, 16, 3]), relay.reshape(bop_6654.astype('float32'), [14, 16, 3]), relay.reshape(const_6667.astype('float64'), [2, 28]), ), 3)
output = relay.Tuple([bop_6654,call_6666,const_6667,])
output2 = relay.Tuple([bop_6657,call_6668,const_6667,])
func_6690 = relay.Function([], output)
mod['func_6690'] = func_6690
mod = relay.transform.InferType()(mod)
mutated_mod['func_6690'] = func_6690
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6690_call = mutated_mod.get_global_var('func_6690')
call_6691 = func_6690_call()
output = call_6691
func_6692 = relay.Function([], output)
mutated_mod['func_6692'] = func_6692
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3588_call = mod.get_global_var('func_3588')
func_3590_call = mutated_mod.get_global_var('func_3590')
call_6699 = func_3588_call()
call_6700 = func_3588_call()
func_362_call = mod.get_global_var('func_362')
func_365_call = mutated_mod.get_global_var('func_365')
var_6704 = relay.var("var_6704", dtype = "uint16", shape = (16,))#candidate|6704|(16,)|var|uint16
call_6703 = relay.TupleGetItem(func_362_call(relay.reshape(var_6704.astype('uint16'), [2, 4, 2])), 0)
call_6705 = relay.TupleGetItem(func_365_call(relay.reshape(var_6704.astype('uint16'), [2, 4, 2])), 0)
output = relay.Tuple([call_6699,call_6703,var_6704,])
output2 = relay.Tuple([call_6700,call_6705,var_6704,])
func_6749 = relay.Function([var_6704,], output)
mod['func_6749'] = func_6749
mod = relay.transform.InferType()(mod)
var_6750 = relay.var("var_6750", dtype = "uint16", shape = (16,))#candidate|6750|(16,)|var|uint16
output = func_6749(var_6750)
func_6751 = relay.Function([var_6750], output)
mutated_mod['func_6751'] = func_6751
mutated_mod = relay.transform.InferType()(mutated_mod)
var_6783 = relay.var("var_6783", dtype = "float32", shape = (4, 5, 10))#candidate|6783|(4, 5, 10)|var|float32
uop_6784 = relay.log2(var_6783.astype('float32')) # shape=(4, 5, 10)
output = uop_6784
output2 = uop_6784
func_6797 = relay.Function([var_6783,], output)
mod['func_6797'] = func_6797
mod = relay.transform.InferType()(mod)
mutated_mod['func_6797'] = func_6797
mutated_mod = relay.transform.InferType()(mutated_mod)
var_6798 = relay.var("var_6798", dtype = "float32", shape = (4, 5, 10))#candidate|6798|(4, 5, 10)|var|float32
func_6797_call = mutated_mod.get_global_var('func_6797')
call_6799 = func_6797_call(var_6798)
output = call_6799
func_6800 = relay.Function([var_6798], output)
mutated_mod['func_6800'] = func_6800
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5778_call = mod.get_global_var('func_5778')
func_5780_call = mutated_mod.get_global_var('func_5780')
call_6837 = relay.TupleGetItem(func_5778_call(), 0)
call_6838 = relay.TupleGetItem(func_5780_call(), 0)
func_2053_call = mod.get_global_var('func_2053')
func_2056_call = mutated_mod.get_global_var('func_2056')
const_6869 = relay.const([[3.102626,-7.163419,7.215081,-7.592051,-4.968880,2.619004,2.881567,7.733347,0.260783,5.119921,0.520635,9.257832,-6.735100,2.653582,-3.672710,5.624444,-3.241156,-7.637417,-2.870927,-3.904856,1.342773,5.592690,4.682283,8.793206,-7.061005,-4.979501,5.912634,-7.997685,-3.520104,-3.650278,-6.399285,-6.552734,9.019195,-7.662036,-0.236899,-0.706441,2.398277,-5.650282,-2.695786,3.916124,-3.132318,3.250075,7.879594,2.583530,7.824779,-4.678562,8.398906,-8.685718,5.340542,-5.293100,1.173934,9.657178,-9.702645,5.677421,2.141780,-6.733463,-7.733771,2.224238,9.123091,1.427164,3.497034,-1.013408,8.497199,0.994239,9.953833,-8.227127,0.697226,7.619629,6.137642,-6.049964,5.805012,-5.313311,-6.976663,4.080063,-4.963196,-3.270302,-1.512913,3.648330,2.157572,-7.744222,-6.699738,8.521898,-6.207294,-1.484372,-3.395906,-5.841275,3.068862,7.330822,0.705519,4.181881,-5.621172,0.521499,-5.326766,-8.904641,4.669391,-0.678145,4.084737,1.087363,7.294790,9.088060,0.440985,5.452132,-0.829045,-9.224506,-9.366803,8.425488,-7.950117,0.522111,8.633661,-9.545471,5.478674,0.437268,1.892084,-0.605997,-8.621263,-2.033482,-3.430691,-0.617088,-5.279501,-8.128103,-1.263479,3.238715,-9.729371,1.558365,-6.519707,-9.781719,-7.780436,-2.146172,0.056217,-3.932632,-8.517194,2.223225,8.113283,8.763168,-2.734874,-3.152029,-6.416302,5.658453,-7.094408,-7.264464,3.008256,-6.014960,-4.871718,4.439643,-0.869602,6.975085,-8.457662,8.225152,-5.877544,4.423524,-5.305972,1.408172,-8.905895,4.612237,2.243903,8.959631,-7.593822,9.220515,8.732977,-7.178102,-0.693543,-1.872089,-9.474180,-4.038362,8.738585,-0.190000,2.997780,-5.234089,-8.077192,5.796667,4.751054,-3.880968,-2.510588,4.854866,-8.421294,2.038571,6.425252,4.544029,2.258585,5.159066,-4.489496,-2.476518,9.621042,9.045929,-0.528411,-9.023660,4.272713,-2.535101,-6.944238,6.290129,5.543327,1.366465,4.641759,0.854123,9.812843,4.788442,-8.449891,7.341507,-3.739459,8.640425,2.898432,-5.416473,3.437229,5.847708,-5.737436,-8.330693,5.355152,7.829796,7.904788,-3.534944,1.480378,-2.101588,3.344068,0.623579,-5.487218,1.304943,-9.228951,-8.720251,-6.968082,9.388846,8.474999,-5.141338,-1.602856,3.365930,-4.724267,-7.459644,6.054443,3.901008,-8.339775,-4.018663,-4.921183,6.792491,1.352610,-0.043191,3.074478,7.222714,0.146773,5.350960,7.330700,1.349617,-9.446382,6.078775,-3.430315,3.983999,4.247642,4.863564,6.579112,1.543709,2.496755,-1.496169,3.362300,9.265672,5.800323,-2.928285,8.281871,1.720492,7.144023,4.301646,2.838160,6.966712,-8.997091,-0.360661,4.188871,-5.196369,1.988914,8.658789,-5.101461,-9.805906,9.015056,-7.334795,-7.383881,1.353704,-4.645731,-2.205606,0.731986,6.708609,-2.765712,8.565538,2.516722,-0.364194,-7.993482,0.954070,-5.087973,-1.698556,4.335182,-6.297897,-2.517570,9.732475,-3.629683,8.492539,2.344689,7.960519,-6.586580,1.856012,5.961624,5.124133,9.490065,-0.680344,-7.833498,-4.961134,-9.497160,0.707585,-8.428875,4.808920,-7.945871,-3.493975,4.189796,-7.296661,-6.093158,0.662520,3.222792,5.482692,-3.272718,6.353295,-7.022849,-3.130397,-5.443168,-3.485629,-2.517491,-5.847700,-8.259542,7.576823,-6.928375,1.021740,3.627534,-3.998061,0.641738,-0.189340,-2.427530,-9.765078,1.024793,7.371287,7.387273,-4.365365,5.379099,-9.593490,4.400450,-8.970973,6.387584,-5.273311,-8.037432,-8.073710,-3.371827,9.681267,-1.469272,4.278882,-0.553653,3.163389,-6.383032,-2.716186,-7.319549,1.437342,-5.763507,-7.855180,-0.151833,-9.784016,6.862221,-1.729743,3.479659,-0.025206,-2.396193,3.078779,-0.537961,-8.467269,-9.492137,3.321732,7.405310,-5.706496,-4.387547,-6.530986,3.640888,1.783291,9.458171,-4.212965,-5.657591,-3.941753,6.466357,3.852111,-7.705999,-8.504099,-6.748904,-4.425557,2.240242,9.273183,3.401063,-3.790278,3.237589,7.188217,0.730882,0.817890,5.815281,-9.118336,-0.477619,-0.901773,4.957296,8.579960,-0.648681,-4.148823,2.467604,3.673313,4.803480,7.498722,-0.910085,0.868024,6.367078,8.548914,-9.969375,7.062597,7.157765,4.478093,-4.323244,2.387463,-2.608608,-8.782941,8.131138,-1.521236,1.616107,9.328109,7.643686,-4.948118,-7.374561,1.936522,2.399540,8.657061,-0.694973,-3.637963,9.661795,-7.965479,3.885933,5.070699,-0.341991,6.158217,-9.034238,5.878898,5.662347,-1.888184,5.380443,-8.690887,-9.036628,-1.525222,-9.851638,0.838415,-6.367501,-9.399710,3.549693,-1.288805,2.665091,7.389490,5.077184,8.521600,-3.530503,-5.602317,6.396559,5.340876,-8.368718,0.323038,-8.522301,-5.929833,-0.964275,-3.509342,1.530044,3.741182,-9.810142,-0.360214,-8.404717,-9.469203,0.418986,-9.921717,6.773306,-9.727588,8.818230,-8.899692,-3.760025,-3.428351,2.586999,-6.367501,-5.647258,-7.875531,8.954089,-8.565353,-5.857247,-1.925035,3.219627,3.152006,-7.598783,-2.721769,9.621990,2.002155,8.173784,-8.671433,-3.085468,4.550411,-9.541198,9.581118,-7.565320,0.503969,-4.516897,-8.466124,0.525697,-0.511220,4.087556,0.887901,-7.203342,9.143887,5.751611,-9.781840,-4.587999,-9.696332,0.053147,-2.242667,6.558157,2.309009,-1.931439,1.318550,2.337558,7.247639,-5.523039,4.169339,-1.929894,-5.568065,-8.390400,2.831015,2.347974,4.925066,-1.737726,-8.933271,-8.028909,9.021820,-4.418120,-9.643190,4.575399,-5.972968,-9.564895,-1.875442,-9.584782,-2.368909,9.859920,-2.817086,3.021715,-4.878606,0.052874,8.099270,-4.779626,-3.872920,5.940613,-3.547154,6.023273,-9.593431,-2.678356,-9.772158,-3.138285,3.271010,-1.430835,-9.449173,8.430386,0.552485,8.149245,-4.500459,-7.259733,-8.590112,9.840577,-0.648089,-3.069539,3.550059,9.383179,4.644683,-7.531790,8.804721,-3.048550,7.832662,-6.434385,8.948856,6.316590,4.640725,-3.630911,-8.702343,-7.185982,-4.436570,3.845810,8.459401,2.857966,-0.998578,9.121060,5.613005,9.421959,-8.053836,7.080781,-4.911259,1.759619,-0.486012,7.020074,-6.557717,1.357759,-5.804360,-0.796916,4.500266,5.452047,0.819557,-0.262684,-9.174638,4.926605,0.170382,-6.779687,-0.203189,-2.546684,-1.779755,9.918957,0.525312,4.004619,2.392269,-7.637249,-2.315151,0.809018,-6.063025,-1.377532,6.420559,5.718279,-7.277409,-4.962979,-4.733941,-3.354309,4.386500,9.905535,-3.930980,-8.968228,-6.917182,7.597825,-7.452618,-7.161302,-5.218572,-7.959324,3.777275,-1.725811,3.185302,-6.070298,5.057629,-2.325932,-7.133735,-2.369545,4.594068,-4.653772,7.410865,-4.869558,-4.351157,-3.460218,1.937435,1.413233,8.009061,-5.513941,-6.238490,-6.109414,3.872353,-8.150555,-2.859420,4.104441,-4.222645,6.666019,4.816118,4.503210,-4.419022,-9.100657,-8.202606,-4.796840,1.305947,7.161275,4.714944,-9.641903,-1.760735,-3.906610,3.727441,-1.005818,-4.733315,3.886086,9.390514,6.442682,-6.797226,4.585065,1.443141,-4.312198,1.218399,2.384410,0.913244,7.450228,-4.922706,-4.760928,1.495414,2.958450,-6.535347,3.300712,-0.814712,-9.005869,-9.299957,4.872146,4.678493,8.181925,6.819924,-2.501246,-4.354641,7.026664,1.786880,-1.225468,-2.822989,-3.753906,-0.666431,7.261866,7.550562,1.043519,2.858073,6.209570,8.366031,5.455969,8.503349,8.650479,-9.909390,9.018465,0.191704,-9.884643,4.610249,-6.044200,0.321012]], dtype = "float32")#candidate|6869|(1, 720)|const|float32
var_6870 = relay.var("var_6870", dtype = "float32", shape = (112,))#candidate|6870|(112,)|var|float32
call_6868 = relay.TupleGetItem(func_2053_call(relay.reshape(const_6869.astype('float32'), [6, 15, 8]), relay.reshape(var_6870.astype('float32'), [112,]), ), 4)
call_6871 = relay.TupleGetItem(func_2056_call(relay.reshape(const_6869.astype('float32'), [6, 15, 8]), relay.reshape(var_6870.astype('float32'), [112,]), ), 4)
func_6289_call = mod.get_global_var('func_6289')
func_6291_call = mutated_mod.get_global_var('func_6291')
call_6878 = relay.TupleGetItem(func_6289_call(), 1)
call_6879 = relay.TupleGetItem(func_6291_call(), 1)
output = relay.Tuple([call_6837,call_6868,const_6869,var_6870,call_6878,])
output2 = relay.Tuple([call_6838,call_6871,const_6869,var_6870,call_6879,])
func_6883 = relay.Function([var_6870,], output)
mod['func_6883'] = func_6883
mod = relay.transform.InferType()(mod)
mutated_mod['func_6883'] = func_6883
mutated_mod = relay.transform.InferType()(mutated_mod)
var_6884 = relay.var("var_6884", dtype = "float32", shape = (112,))#candidate|6884|(112,)|var|float32
func_6883_call = mutated_mod.get_global_var('func_6883')
call_6885 = func_6883_call(var_6884)
output = call_6885
func_6886 = relay.Function([var_6884], output)
mutated_mod['func_6886'] = func_6886
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4496_call = mod.get_global_var('func_4496')
func_4497_call = mutated_mod.get_global_var('func_4497')
call_6904 = func_4496_call()
call_6905 = func_4496_call()
output = relay.Tuple([call_6904,])
output2 = relay.Tuple([call_6905,])
func_6934 = relay.Function([], output)
mod['func_6934'] = func_6934
mod = relay.transform.InferType()(mod)
output = func_6934()
func_6935 = relay.Function([], output)
mutated_mod['func_6935'] = func_6935
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6340_call = mod.get_global_var('func_6340')
func_6342_call = mutated_mod.get_global_var('func_6342')
call_6945 = func_6340_call()
call_6946 = func_6340_call()
func_6316_call = mod.get_global_var('func_6316')
func_6317_call = mutated_mod.get_global_var('func_6317')
call_6947 = relay.TupleGetItem(func_6316_call(), 1)
call_6948 = relay.TupleGetItem(func_6317_call(), 1)
func_4249_call = mod.get_global_var('func_4249')
func_4254_call = mutated_mod.get_global_var('func_4254')
const_6968 = relay.const([9.646202,-3.231337,7.546790,-4.679242,-4.453521,1.061345,-3.678045,-0.383297,-1.185021,3.393250,-3.814891,7.033934,5.639070,7.109720,-7.028726,-5.378295,7.878181,-6.820494,-8.354555,7.486808,1.471729,-6.997719,7.276618,-8.587149,-9.655663,2.055893,5.634430,-4.150569,-4.002144,9.492770,0.824806,3.232860,7.134401,9.261231,-4.709911,-0.108104,0.446896,-6.080429,5.880218,-1.840945,-4.832595,-9.792469,-5.961228,-0.883120,-8.009179,-6.733511,2.709267,6.989932,5.854032,-2.685732,7.558492,2.258632,6.364169,4.732598,-0.046969,4.254729], dtype = "float64")#candidate|6968|(56,)|const|float64
call_6967 = relay.TupleGetItem(func_4249_call(relay.reshape(call_6945.astype('float32'), [14, 16, 3]), relay.reshape(call_6947.astype('float32'), [14, 16, 3]), relay.reshape(const_6968.astype('float64'), [2, 28]), ), 0)
call_6969 = relay.TupleGetItem(func_4254_call(relay.reshape(call_6945.astype('float32'), [14, 16, 3]), relay.reshape(call_6947.astype('float32'), [14, 16, 3]), relay.reshape(const_6968.astype('float64'), [2, 28]), ), 0)
output = relay.Tuple([call_6945,call_6947,call_6967,const_6968,])
output2 = relay.Tuple([call_6946,call_6948,call_6969,const_6968,])
func_6984 = relay.Function([], output)
mod['func_6984'] = func_6984
mod = relay.transform.InferType()(mod)
output = func_6984()
func_6985 = relay.Function([], output)
mutated_mod['func_6985'] = func_6985
mutated_mod = relay.transform.InferType()(mutated_mod)
const_7011 = relay.const([[[8.945249,-9.148465,-2.390234],[-9.640586,7.272318,-9.505161],[-9.362268,-9.479232,9.517827],[5.537868,4.849771,6.751880],[6.791897,0.763670,-4.388437],[-1.072289,5.693544,-2.538324],[4.736555,-7.628797,8.960287],[0.558537,-4.056572,-3.895155]],[[-9.834867,2.592616,5.090213],[8.268248,-8.653264,-0.044375],[8.496247,-8.027303,2.598716],[-0.665484,6.829751,6.520929],[9.968420,-8.654779,-8.561988],[-4.337930,0.802238,9.195885],[-9.651930,6.145801,4.607110],[5.237007,-0.794634,-9.604051]],[[-7.960020,-0.918788,1.820042],[2.209394,-1.310183,-7.942858],[-1.311690,7.781539,-3.938427],[2.050122,-0.026984,-7.160640],[-8.346809,-3.998669,7.776001],[-5.075803,-3.803036,-1.977219],[-6.732039,-0.399300,0.913678],[0.329065,7.421777,4.871698]],[[7.083707,-4.028164,3.711677],[-8.579275,9.108069,-2.046191],[3.706811,-7.835451,8.409668],[4.175916,-3.852220,5.133280],[-6.644515,-8.868205,4.973297],[-9.219081,-4.318806,-2.101850],[3.171607,6.301015,-5.530601],[3.521690,-5.129571,9.395082]],[[-3.730580,8.034190,-4.569057],[1.223775,3.746889,0.172985],[0.715416,-1.590018,-8.691156],[-9.514172,9.251268,-5.064854],[7.632183,0.055821,-3.481452],[-6.062811,6.953365,1.168186],[-0.449307,-0.646319,-1.740920],[-0.294815,6.791304,4.631458]],[[-1.061272,3.546276,3.774984],[5.110439,-8.476058,-9.029098],[1.151119,6.888481,-0.739309],[-0.929205,9.279509,1.792805],[-5.170895,-9.719245,-6.889829],[-7.228843,3.095708,-3.750650],[7.592597,1.239957,-7.685598],[-9.812061,-7.724812,-9.258162]],[[0.192306,2.444089,0.840171],[-8.202733,1.038988,-4.423901],[0.807786,-8.651056,-6.490428],[0.548939,-2.555996,0.189698],[1.760998,-5.525518,-6.836811],[-1.906051,8.706284,-2.241270],[-2.994259,8.318571,9.405585],[0.692541,-0.759442,9.754864]],[[-7.347375,-4.353268,-5.346468],[8.426727,-9.985319,4.898175],[-6.175996,-2.080868,-9.177510],[2.106053,7.828856,-3.799383],[-0.460751,2.496180,8.300186],[9.461006,-3.139432,-1.326294],[-7.519602,-2.575251,9.863564],[1.638540,8.651340,0.760903]],[[-9.814165,6.558331,8.526048],[6.177241,4.289040,-3.998643],[4.401301,2.920740,-7.350456],[-7.653652,9.658054,3.334351],[0.159436,0.129123,-6.110386],[-7.714298,0.399533,-6.517114],[1.704377,-4.776349,9.359857],[1.259960,-7.068981,-7.519300]],[[-0.434380,4.013731,3.565018],[-8.238621,0.627103,8.879949],[-6.258992,8.566650,7.450852],[9.216846,4.310246,-9.923890],[-2.884647,2.103297,-8.115918],[2.877120,2.955339,-4.074184],[1.980777,4.018265,-1.202178],[-3.456674,-1.339065,-2.251422]]], dtype = "float64")#candidate|7011|(10, 8, 3)|const|float64
uop_7012 = relay.sinh(const_7011.astype('float64')) # shape=(10, 8, 3)
func_4709_call = mod.get_global_var('func_4709')
func_4710_call = mutated_mod.get_global_var('func_4710')
call_7032 = relay.TupleGetItem(func_4709_call(), 0)
call_7033 = relay.TupleGetItem(func_4710_call(), 0)
func_6433_call = mod.get_global_var('func_6433')
func_6435_call = mutated_mod.get_global_var('func_6435')
call_7068 = func_6433_call(relay.reshape(call_7032.astype('float32'), [14, 16, 3]))
call_7069 = func_6433_call(relay.reshape(call_7032.astype('float32'), [14, 16, 3]))
func_328_call = mod.get_global_var('func_328')
func_334_call = mutated_mod.get_global_var('func_334')
const_7071 = relay.const([5,-9,-8,9,-6,-10,-4,8,2,-6,6,-2,-9,-4,-5,2,-2,-7,5,-4,-4,2,3,4,1,6,-6,-2,7,3,-5,-4,-6,-9,6,2,8,-9,-5,10,-3,-5,-7,5,1,7,-4,4,1,-1,-9,-8,6,-1,10,-8,8,-1,10,-10,-5,8,-10,-9,10,-10,2,7,5,2,-7,-8,6,3,-9,-9,-2,6,-3,-4,7,-1,4,-9,-4,-4,-3,-8,-6,-7,6,9,-4,1,-10,-10,1,-5,7,-3,9,4,4,1,4,2,3,-9,4,6,-7,10,10,-2,-3,10,4,4,-5,-5,2,-1,9,-5,2,-9,-10,6,8,8,10,-3,-1,2,1,-7,5,9,-7,-8,-8,7,-8,9,-10,-9,-5,7,-9,-2,-4,-5,-8,-4,-1,-6,-9,-6,-8,5,3,10,-6,4,4,10,-6,1,-1,8,7,-2,9,-5,4,4,-6,5,-9,-1,-6,5,6,-5,10,3,-9,6,-3,-2,-3,-4,1,2,10,-5,4,8,7,-1,9,6,6,-4,3,6,2,-8,1,3,3,8,9,1,9,4,-3,6,10,-10,5,2,8,-8,-10,-2,10,-2,6,-6,-3,-3,-9,-10,8,-4,8,8,-6,8,-9,6,-10,10,-2,-1,5,5,-4,2,5,-2,-4,10,9,3,-6,-9,9,-2,-6,-8,-8,6,10,-3,6,7,-6,-9,4,-4,2,9,-5,-4,6,3,-7,-6,-6,1,4,3,6,6,-3,2,-6,-9,-4,1,7,5,-2,2,-10,10,-10,6,5,7,10,5,10,6,-9,5,-2,1,-3,-2,5,-9,-6,-2,-4,-3,6,-2,-4,-4,7,10,-2,-5,-5,8,-2,-4,9,-1,2,-7,4,9,-10,-4,4,8,6,-1,-10,-10,3,3,9,-6,10,3,3,-5,-5,-9,2,5,1,-10,4,-5,5,10,4,6,9,9,1,6,10,7,5,1,-7,-8,2,-7,-3,-2,2,10,-9,-3,2,8,-5,7,6,-5,-10,5,6,10,8,-6,-4,-2,-7,5,2,-5,-8,-6,-10,-9,-2,4,-8,-7,8,7,-10,-5,3,10,3,2,-8,8,-7,-8,-3,9,9,-8,-9,-9,5,8,5,-3,3,-2,4,-9,-8,2,-9,1,-4,5,3,4,9,5,-10,-4,4,4,-7,8,9,-5,10,-8,-4,-10,6,-6,-6,1,-1,-10,3,10,-6,3,10,-6,5,-5,-7,-9,-8,10,-8,-1,9,4,5,2,-4,-9,-5,5,8,-1,6,8,7,-8,-10,-3,-10,1,-1,-9,5,1,4,10,-9,-5,-10,-9,-10,1,-7,8,-1,5,9,-9,5,-6,8,-10,-8,-2,-5,-7,-1,6,-5,7,1,-2,-7,7,-2,10,-3,-9,-5,-1,-3,7,7,1,-8,-9,-10,1,3,1,5,7,4,-8,6,-1,-8,-4,2,8,-4,8,10,-5,-9,8,10,9,1,2,7,-6,-2,1,-6,3,-9,-7,-2,4,9,-5,-7,-4,2,-6,1,-5,4,8,-4,-3,-4,4,1,9,-7,-10,9,-3,-9,-1,2,-5,1,-8,6,9,-10,-8,-8,2,3,2,-5,4,-5,-8,2,-5,7,-9,-5,-5,-1,7,-1,-7,-2,-6,-5,4,-7,8,6,-2,7,5,2,-6,-2,2,-3,-8,9,5,-6,7,1,-3,-9,9,-6,5,-4,-1,-5,2,6,-4,-5,1,9,-5,3,9,-2,-7,5,-8,-4,-7,-4,6,10,4,-10,7,5,2,-7,-10,-9,9,1,-3,6,4,1,-9,10,4,-10,-9,-2,-3,-2,-10,-9,5,6,-5,-9,2,8,9,-9,-8,-6,4,-8,9,-9,10,-7,10,-4,6,3,-3,3,9,-7,-1,-3,-2,-1,4,-1,-9,-1,4,3,9,9,-7,4,-2,-10,-5,-7,8,2,-9,-8,3,-9,-5,6,8,-7,-6,10,3,1,5,-7,-6,-6,-1,-5,-4,-1,7,-4,-3,-10,4,-6,-2,-7,5,-3,-2,-5,-5,-1,-5,9,-2,-6,6,3,-8,8,-8,-6,-10,3,7,-9,8,-1,-10,4,-5,-6,-8,2,-2,5,-7,2,-1,-9,4,-3,8,7,4,2,2,2,-9,-6,-5,2,4,-1,-10,5,10,8,2,6,5,-9,5,6,6,-6,5,-4,1,-5,-6,5,-8,2,8,-10,-5,1,8,6,1,4,-8,-4,4,10,-10,5,-7,10,6,-10,6,-1,-9,8,-6,4,3,-3,-7,-8,-7,7,-10,1,8,7,1,10,-4,7,-5,6,-1,4,1,7,4,5,-2,10,-8,-5,4,8,-4,-7,-8,-6,1,8,-3,-1,-10,9,-3,-3,-5,-9,-4,6,-3,-8,4,-1,5,7,6,-2,-6,-2,1,7,6,8,4,7,-7,-8,10,-7,9,-2,4,3,7,9,1,-8,4,6,-10,-3,9,-9,3,5,-2,8,10,-5,7,9,-2,6,2,1,-6,-10,-8,-5,5,-10,6,4,-1,5,5,-7,-10,10,-4,6,7,-4,-5,3,-8,8,3,10,-2,-2,-8,5,-10,1,-8,-6,1,8,-9,-7,-6,-9,-6,10,3,-9,9,-8,-9,-6,6,-1,-10,-2,-2,5,3,-6,2,-8,-8,-3,-1,9,-10,8,-5,-2,2,5,4,-1,-4,7,-2,9,4,-8,-3,-6,2,-10,4,3,7,-1,5,-9,8,-5,10,2,-3,8,7,-10,7,5,1,7,-3,-10,-2,-9,4,-1,-5,-8,-3,-8,-10,1,-10,9,4,1,6,-10,-10,-7,3,9,-2,10,-5,8,-9,-1,7,10,5,9,-5,-10,-9,1,6,2,9,7,-10,-9,6,-6,9,-2,-9,8,1,-1,4,2,2,-9,-6,4,1,-3,-3,-8,6,7,-5,1,2,6,-4,5,4,6,10,4,-3,-8,7,-9,10,-10,2,10,-3,-9,7,-10,9,9,-8,-3,-9,9,9,-8,-7,-3,-8,-4,-9,8,8,5,8,9,8,-8,4,-2,9,-3,8,7,7,9,-6,-2,-6,4,-2,9,4,8,7,3,9,2,10,-5,1,-4,10,-1,-4,10,7,-7,-5,1,4,7,9,-3,1,9,4,8,9,10,-6,9,-8,-4,-1,6,-10,1,4,-2,3,-6,-5,1,-8,7,-1,-5,5,5,-8], dtype = "uint64")#candidate|7071|(1210,)|const|uint64
var_7072 = relay.var("var_7072", dtype = "float32", shape = (704,))#candidate|7072|(704,)|var|float32
const_7073 = relay.const([[1.178207,9.197569],[7.265783,-1.556125],[8.273180,-3.589870],[3.666462,2.922504],[6.828139,6.952179]], dtype = "float32")#candidate|7073|(5, 2)|const|float32
call_7070 = relay.TupleGetItem(func_328_call(relay.reshape(const_7071.astype('uint64'), [11, 11, 10]), relay.reshape(const_7071.astype('uint64'), [11, 11, 10]), relay.reshape(var_7072.astype('float32'), [8, 88]), relay.reshape(const_7073.astype('float32'), [10,]), ), 3)
call_7074 = relay.TupleGetItem(func_334_call(relay.reshape(const_7071.astype('uint64'), [11, 11, 10]), relay.reshape(const_7071.astype('uint64'), [11, 11, 10]), relay.reshape(var_7072.astype('float32'), [8, 88]), relay.reshape(const_7073.astype('float32'), [10,]), ), 3)
uop_7085 = relay.tan(uop_7012.astype('float32')) # shape=(10, 8, 3)
func_4496_call = mod.get_global_var('func_4496')
func_4497_call = mutated_mod.get_global_var('func_4497')
call_7087 = func_4496_call()
call_7088 = func_4496_call()
output = relay.Tuple([call_7032,call_7068,call_7070,const_7071,var_7072,const_7073,uop_7085,call_7087,])
output2 = relay.Tuple([call_7033,call_7069,call_7074,const_7071,var_7072,const_7073,uop_7085,call_7088,])
func_7093 = relay.Function([var_7072,], output)
mod['func_7093'] = func_7093
mod = relay.transform.InferType()(mod)
var_7094 = relay.var("var_7094", dtype = "float32", shape = (704,))#candidate|7094|(704,)|var|float32
output = func_7093(var_7094)
func_7095 = relay.Function([var_7094], output)
mutated_mod['func_7095'] = func_7095
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4496_call = mod.get_global_var('func_4496')
func_4497_call = mutated_mod.get_global_var('func_4497')
call_7161 = func_4496_call()
call_7162 = func_4496_call()
func_5670_call = mod.get_global_var('func_5670')
func_5675_call = mutated_mod.get_global_var('func_5675')
const_7171 = relay.const(3, dtype = "int32")#candidate|7171|()|const|int32
const_7172 = relay.const([10,-1,3,-2,-4,-7,1,-7,-6,8,-3,-8,-7,-3,6,-4,5,-5,-1,-9,2,-9,7,5,9,9,-2,-2,-1,1,6,8,-3,2,-1,-8,7,5,-5,7,4,3,7,6,2,-5,-5,2,5,-9,-4,-9,-6,7,3,-5,-2,-4,6,8], dtype = "int32")#candidate|7172|(60,)|const|int32
const_7173 = relay.const([-1.268074,7.410232,-6.075604,0.987965,4.692810,1.045588,7.829138,7.583019,-7.353547,7.278206,2.378649,-0.263588,-1.505972,-0.534580,1.020970,-8.822995,-1.241228,2.888785,8.389122,3.402577,-5.899721,-0.716295,-3.441747,1.960925,0.984312,5.370642,-6.246467,-7.390380,4.245220,-9.485774,-9.920670,7.313167,5.666800,-0.177792,8.172758,1.005647,-4.187451,-6.682122,-1.837670,6.431285,-4.246962,-5.609830,-8.931153,5.814596,6.150040,8.491278,0.827564,0.378772,1.514875,6.856517,7.251795,5.570265,-8.571000,-6.234776,4.293556,-3.974856], dtype = "float64")#candidate|7173|(56,)|const|float64
var_7174 = relay.var("var_7174", dtype = "float64", shape = (375,))#candidate|7174|(375,)|var|float64
call_7170 = relay.TupleGetItem(func_5670_call(relay.reshape(const_7171.astype('int32'), []), relay.reshape(const_7172.astype('int32'), [60,]), relay.reshape(const_7173.astype('float64'), [56,]), relay.reshape(var_7174.astype('float64'), [375,]), ), 1)
call_7175 = relay.TupleGetItem(func_5675_call(relay.reshape(const_7171.astype('int32'), []), relay.reshape(const_7172.astype('int32'), [60,]), relay.reshape(const_7173.astype('float64'), [56,]), relay.reshape(var_7174.astype('float64'), [375,]), ), 1)
func_135_call = mod.get_global_var('func_135')
func_137_call = mutated_mod.get_global_var('func_137')
call_7177 = relay.TupleGetItem(func_135_call(relay.reshape(var_7174.astype('float64'), [15, 5, 5])), 1)
call_7178 = relay.TupleGetItem(func_137_call(relay.reshape(var_7174.astype('float64'), [15, 5, 5])), 1)
func_4433_call = mod.get_global_var('func_4433')
func_4434_call = mutated_mod.get_global_var('func_4434')
call_7185 = relay.TupleGetItem(func_4433_call(), 0)
call_7186 = relay.TupleGetItem(func_4434_call(), 0)
func_1852_call = mod.get_global_var('func_1852')
func_1857_call = mutated_mod.get_global_var('func_1857')
const_7192 = relay.const([-8,-4,1,-8,7,2,2,-8,3,-1,-1,5,4,1,2,-9,-8,1,-4,-2,6,-2,9,3,-4,-1,5,9,3,3,1,8,-4,9,-8,10,-8,4,4,9,4,-3,7,-8,1,6,5,3,2,1,4,-6,6,2,-9,-8,-3,2,2,-10,3,-6,1,2,-3,3,-4,4,1,8,6,-3,-6,9,-4,10,5,8,9,-9,-10,-4,5,4,1,-6,-9,-6,-3,-2,3,4,2,-4,-1,5,-7,-6,4,-8,4,-2,4,-8,2,-4,6,3,-2,-10,9,-2,4,-7,-8,3,-9,-4,4,10,6,9,1,-1,-8,-6,6,-1,6,9,3,7,-9,-4,7,-9,7,-4,-9,-3,-7,3,-7,-6,-2,-8,-8,-6,-9,8,-2,6,4,-8,-8,1,10,-1,-10,-9,-3,-7,5,6,4,8,2,7,-6,10,-8,9,8,-4,-6,-1,1,10,3,-7,-1,-3,1,-8,5,-10,2,10,9,6,-4,-4,7,10,-1,7,4,-2,1,1,-9,-8,10,1,-1,-5,-6,-1,-5,2,-10,8,8,10,-2,-5,3,4,-3,-3,1,-9,-8,-9,3,-9,-10,-8,8,8,-10,3,-8,9,1,6,-9,-1,5,-2,-1,1,7,-10,9,5,2,-5,4,-4,5,8], dtype = "int16")#candidate|7192|(252,)|const|int16
var_7193 = relay.var("var_7193", dtype = "float32", shape = (5, 135))#candidate|7193|(5, 135)|var|float32
call_7191 = relay.TupleGetItem(func_1852_call(relay.reshape(const_7171.astype('int16'), []), relay.reshape(const_7192.astype('int16'), [2, 14, 9]), relay.reshape(var_7193.astype('float32'), [675,]), ), 3)
call_7194 = relay.TupleGetItem(func_1857_call(relay.reshape(const_7171.astype('int16'), []), relay.reshape(const_7192.astype('int16'), [2, 14, 9]), relay.reshape(var_7193.astype('float32'), [675,]), ), 3)
output = relay.Tuple([call_7161,call_7170,const_7171,const_7172,const_7173,var_7174,call_7177,call_7185,call_7191,const_7192,var_7193,])
output2 = relay.Tuple([call_7162,call_7175,const_7171,const_7172,const_7173,var_7174,call_7178,call_7186,call_7194,const_7192,var_7193,])
func_7197 = relay.Function([var_7174,var_7193,], output)
mod['func_7197'] = func_7197
mod = relay.transform.InferType()(mod)
var_7198 = relay.var("var_7198", dtype = "float64", shape = (375,))#candidate|7198|(375,)|var|float64
var_7199 = relay.var("var_7199", dtype = "float32", shape = (5, 135))#candidate|7199|(5, 135)|var|float32
output = func_7197(var_7198,var_7199,)
func_7200 = relay.Function([var_7198,var_7199,], output)
mutated_mod['func_7200'] = func_7200
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6627_call = mod.get_global_var('func_6627')
func_6628_call = mutated_mod.get_global_var('func_6628')
call_7215 = func_6627_call()
call_7216 = func_6627_call()
output = call_7215
output2 = call_7216
func_7223 = relay.Function([], output)
mod['func_7223'] = func_7223
mod = relay.transform.InferType()(mod)
mutated_mod['func_7223'] = func_7223
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7223_call = mutated_mod.get_global_var('func_7223')
call_7224 = func_7223_call()
output = call_7224
func_7225 = relay.Function([], output)
mutated_mod['func_7225'] = func_7225
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5060_call = mod.get_global_var('func_5060')
func_5062_call = mutated_mod.get_global_var('func_5062')
call_7291 = relay.TupleGetItem(func_5060_call(), 1)
call_7292 = relay.TupleGetItem(func_5062_call(), 1)
output = call_7291
output2 = call_7292
func_7295 = relay.Function([], output)
mod['func_7295'] = func_7295
mod = relay.transform.InferType()(mod)
mutated_mod['func_7295'] = func_7295
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7295_call = mutated_mod.get_global_var('func_7295')
call_7296 = func_7295_call()
output = call_7296
func_7297 = relay.Function([], output)
mutated_mod['func_7297'] = func_7297
mutated_mod = relay.transform.InferType()(mutated_mod)
var_7309 = relay.var("var_7309", dtype = "int64", shape = (6, 5, 6))#candidate|7309|(6, 5, 6)|var|int64
var_7310 = relay.var("var_7310", dtype = "int64", shape = (6, 5, 6))#candidate|7310|(6, 5, 6)|var|int64
bop_7311 = relay.bitwise_xor(var_7309.astype('int64'), relay.reshape(var_7310.astype('int64'), relay.shape_of(var_7309))) # shape=(6, 5, 6)
uop_7314 = relay.exp(var_7309.astype('float64')) # shape=(6, 5, 6)
output = relay.Tuple([bop_7311,uop_7314,])
output2 = relay.Tuple([bop_7311,uop_7314,])
func_7316 = relay.Function([var_7309,var_7310,], output)
mod['func_7316'] = func_7316
mod = relay.transform.InferType()(mod)
var_7317 = relay.var("var_7317", dtype = "int64", shape = (6, 5, 6))#candidate|7317|(6, 5, 6)|var|int64
var_7318 = relay.var("var_7318", dtype = "int64", shape = (6, 5, 6))#candidate|7318|(6, 5, 6)|var|int64
output = func_7316(var_7317,var_7318,)
func_7319 = relay.Function([var_7317,var_7318,], output)
mutated_mod['func_7319'] = func_7319
mutated_mod = relay.transform.InferType()(mutated_mod)
var_7321 = relay.var("var_7321", dtype = "float64", shape = (10, 10, 5))#candidate|7321|(10, 10, 5)|var|float64
uop_7322 = relay.erf(var_7321.astype('float64')) # shape=(10, 10, 5)
uop_7324 = relay.exp(var_7321.astype('float64')) # shape=(10, 10, 5)
output = relay.Tuple([uop_7322,uop_7324,])
output2 = relay.Tuple([uop_7322,uop_7324,])
func_7330 = relay.Function([var_7321,], output)
mod['func_7330'] = func_7330
mod = relay.transform.InferType()(mod)
var_7331 = relay.var("var_7331", dtype = "float64", shape = (10, 10, 5))#candidate|7331|(10, 10, 5)|var|float64
output = func_7330(var_7331)
func_7332 = relay.Function([var_7331], output)
mutated_mod['func_7332'] = func_7332
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7295_call = mod.get_global_var('func_7295')
func_7297_call = mutated_mod.get_global_var('func_7297')
call_7336 = func_7295_call()
call_7337 = func_7295_call()
output = call_7336
output2 = call_7337
func_7356 = relay.Function([], output)
mod['func_7356'] = func_7356
mod = relay.transform.InferType()(mod)
output = func_7356()
func_7357 = relay.Function([], output)
mutated_mod['func_7357'] = func_7357
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3824_call = mod.get_global_var('func_3824')
func_3825_call = mutated_mod.get_global_var('func_3825')
call_7382 = func_3824_call()
call_7383 = func_3824_call()
output = call_7382
output2 = call_7383
func_7384 = relay.Function([], output)
mod['func_7384'] = func_7384
mod = relay.transform.InferType()(mod)
output = func_7384()
func_7385 = relay.Function([], output)
mutated_mod['func_7385'] = func_7385
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6289_call = mod.get_global_var('func_6289')
func_6291_call = mutated_mod.get_global_var('func_6291')
call_7386 = relay.TupleGetItem(func_6289_call(), 0)
call_7387 = relay.TupleGetItem(func_6291_call(), 0)
output = call_7386
output2 = call_7387
func_7388 = relay.Function([], output)
mod['func_7388'] = func_7388
mod = relay.transform.InferType()(mod)
output = func_7388()
func_7389 = relay.Function([], output)
mutated_mod['func_7389'] = func_7389
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6316_call = mod.get_global_var('func_6316')
func_6317_call = mutated_mod.get_global_var('func_6317')
call_7392 = relay.TupleGetItem(func_6316_call(), 1)
call_7393 = relay.TupleGetItem(func_6317_call(), 1)
func_3824_call = mod.get_global_var('func_3824')
func_3825_call = mutated_mod.get_global_var('func_3825')
call_7394 = func_3824_call()
call_7395 = func_3824_call()
func_4496_call = mod.get_global_var('func_4496')
func_4497_call = mutated_mod.get_global_var('func_4497')
call_7398 = func_4496_call()
call_7399 = func_4496_call()
bop_7406 = relay.maximum(call_7394.astype('int8'), relay.reshape(call_7398.astype('int8'), relay.shape_of(call_7394))) # shape=(14, 16, 3)
bop_7409 = relay.maximum(call_7395.astype('int8'), relay.reshape(call_7399.astype('int8'), relay.shape_of(call_7395))) # shape=(14, 16, 3)
func_135_call = mod.get_global_var('func_135')
func_137_call = mutated_mod.get_global_var('func_137')
var_7411 = relay.var("var_7411", dtype = "float64", shape = (375,))#candidate|7411|(375,)|var|float64
call_7410 = relay.TupleGetItem(func_135_call(relay.reshape(var_7411.astype('float64'), [15, 5, 5])), 0)
call_7412 = relay.TupleGetItem(func_137_call(relay.reshape(var_7411.astype('float64'), [15, 5, 5])), 0)
uop_7416 = relay.rsqrt(call_7410.astype('float64')) # shape=(16, 4, 11)
uop_7418 = relay.rsqrt(call_7412.astype('float64')) # shape=(16, 4, 11)
func_1368_call = mod.get_global_var('func_1368')
func_1373_call = mutated_mod.get_global_var('func_1373')
const_7429 = relay.const([[9.517653],[-7.516379],[1.171133],[-0.980026],[-4.817532],[7.464906],[-5.215403],[8.793674],[-6.362481],[-7.925512],[-7.360107],[6.894621],[2.817568],[4.153506],[-7.407211],[4.397959],[5.277814],[-8.712401],[-6.445932],[8.587560],[-5.602639],[-4.440588],[-4.895793],[3.266554],[-0.804714],[8.429979],[-9.499375],[5.310361],[1.971945],[7.922603],[-8.998178],[-1.017681],[-5.579841],[5.282253],[7.287945],[-1.674959],[8.535060],[-0.263182],[-5.677577],[-9.532179],[1.686120],[6.544322],[8.764789],[8.025463],[2.539932],[-5.092328],[-4.379254],[-6.359629],[9.558813],[3.658508],[-5.789677],[2.937138],[-2.054405],[3.349261],[6.069313],[-8.019305],[3.445869],[-2.531826],[-4.221464],[-2.958286],[6.959432],[-3.337578],[8.232227],[-1.567860],[-0.606622],[3.194028],[0.440637],[-0.862319],[5.001786],[-2.543776],[1.750309],[4.661359],[-9.086519],[0.177745],[-6.490837],[5.879741],[-1.856135],[4.647376],[-4.499803],[9.617859],[9.143032],[0.251428],[5.019234],[9.976905],[-8.917298],[3.695418],[-7.451557],[-2.568511],[-3.353407],[1.424440],[4.106722],[-4.907806],[-2.826002],[3.730249],[-1.957960],[3.427165],[-2.887950],[-8.228713],[-9.371038],[-4.035925],[-5.432332],[6.174744],[-7.991542],[2.188195],[3.477024],[1.759762],[0.934404],[7.801510],[7.647706],[-2.187360],[7.979530],[-9.014612],[8.051657],[5.217601],[-7.957771],[-2.773294],[6.904708],[1.698791],[6.870844],[-6.418620],[8.282206],[-5.168958],[-8.922051],[3.465831],[-7.645772],[1.870176],[4.446285],[3.174095],[-2.656893],[6.021095],[-7.520072],[2.863363],[4.047337],[-7.422903],[-9.082170],[3.823816],[-3.280685],[-6.542489],[1.711057],[1.915211],[-2.456939],[6.205234],[-8.087125],[-5.758206],[6.412408],[2.249173],[5.272417],[2.975518],[3.621990],[5.136294],[0.273809],[4.339888],[-3.799073],[-9.722281],[4.963325],[-9.929484],[-2.690522],[-0.976299],[-4.647239],[1.363654],[-9.536612],[-4.427790],[-5.844010],[-1.954201],[5.475336],[3.084066],[-1.355341],[-5.440268],[-0.670469],[3.964637],[-6.492171],[3.083414],[4.921106],[9.631006],[-7.830492],[-9.531663],[9.354543],[-4.027732],[-4.999977],[3.627722],[8.912186],[-8.461030],[-5.274529],[-5.168950],[5.700512],[-9.427256],[4.914830],[-1.216874],[1.550039],[7.055367],[4.727259],[-3.290784],[-3.406411],[-8.935676],[2.939619],[-8.168702],[-6.577225],[7.804484],[9.048308],[0.123839],[7.214071],[5.776861],[-5.791743],[0.204944],[9.241487],[3.617181],[-4.607293],[-9.908914],[5.229935],[-5.185949],[-1.037253],[4.957235],[7.486795],[9.375209],[-4.066691],[-2.947619],[6.511965],[9.244405],[2.834456],[0.860179],[4.881600],[3.875674],[8.616032],[-8.441551],[-4.350643],[9.623004],[7.809740],[5.688820],[0.090627],[1.554069],[-7.398786],[3.303177],[1.988158],[3.878653],[-9.969410],[-7.702135],[8.799534],[4.509870],[4.247945],[9.722208],[-9.136941],[-3.841772],[6.606032],[1.620902],[0.618644],[0.642528],[-4.583378],[6.686391],[2.973989],[-6.504755],[2.702612],[4.520607],[2.595675],[9.419778],[-5.620709],[-1.872637],[-9.730132],[-6.081985],[0.505693],[-5.567863],[-2.015042],[-8.251788],[1.835409],[8.471456],[-5.539507],[-9.034626],[-7.346657],[-3.499341],[-6.920588],[-4.341759],[5.991302],[-5.989203],[8.326884],[3.890935],[-5.562074],[9.346309],[5.273104],[2.027671],[0.930583],[0.974291],[-6.036712],[-9.476163],[9.173008],[-8.574422],[-6.097613],[-4.731199],[-3.618292],[0.039033],[3.541568],[-2.468795],[1.251397],[4.144182],[7.054288],[2.885009],[5.435718],[-1.130374],[-4.083980],[-6.700750],[9.075655],[5.324385],[3.416349],[6.359144],[-0.273447],[6.609993],[-4.840562],[6.919129],[-4.151216],[-6.730881],[4.359119],[-3.757577],[2.598339],[9.771465],[5.183643],[3.789917],[-4.404811],[3.566628],[6.739660],[0.077757],[5.656029],[2.021727],[-6.578104],[4.323713],[8.627788],[-3.630695],[2.781749],[5.140669],[3.159717],[-0.685264],[-4.762974],[-9.132982],[2.387087],[-8.102396],[-3.391783],[-3.828220],[0.724832],[6.270462],[9.578283],[-8.488050],[6.995760],[1.458146],[7.980834],[1.301910],[0.549046],[-4.166068],[0.046577],[8.999000],[-9.116505],[5.357224],[4.590472],[-8.268207],[-7.988550],[7.141879],[2.515770],[-3.550329],[-9.978104],[2.070757],[8.157656],[4.920445],[6.184155],[-8.230813],[-2.589505],[0.428401],[-4.992678],[1.026586],[-1.078709],[-3.770926],[-2.339966],[-3.644303],[2.186394],[-0.799428],[9.909762],[3.024255],[-9.086323],[5.712332],[-3.716551],[-8.702326],[2.276239],[3.053409],[7.608440],[-0.390620],[8.053159],[-3.088808],[-9.155393],[4.380686],[8.605019],[4.667152],[2.615575],[1.083549],[8.844364],[2.095909],[6.247447],[-9.445666],[2.384750],[-5.178281],[2.379832],[9.559396],[3.121373],[-0.606764],[-2.980673],[2.577557],[6.078899],[-0.874950],[9.190603],[-0.724910],[5.437990],[0.198279],[0.105345],[9.398614],[1.050564],[8.676696],[-3.006529],[7.713782],[-8.150419],[6.651999],[5.410377],[4.590135],[-3.244840],[-2.137813],[1.229612],[-7.889030],[-8.685419],[0.597645],[-0.750122],[9.327907],[-9.242341],[-1.781584],[6.080186],[-2.779653],[1.758663],[-1.877277],[-1.608323],[5.367806],[-9.085483],[3.472923],[-4.174728],[-3.182673],[5.808814],[-2.778381],[-7.818619],[1.827510],[9.183745],[-9.715838],[-4.585476],[-7.191564],[-3.553732],[-8.415179],[-1.417089],[3.723840],[3.212193],[4.992433],[9.723544],[9.245310],[3.403475],[-4.036739],[6.559392],[6.664505],[6.320863],[7.626096],[-0.145236],[5.023379],[-9.645026],[-4.708547],[4.579061],[1.765071],[-0.745469],[-8.825442],[-5.080536],[-8.866227],[4.921300],[-1.026784],[-0.603062],[4.476545],[5.473588],[9.641743],[3.394424],[-8.354277],[6.246547],[-1.853851],[2.924276],[4.336355],[-4.021805],[6.482866],[8.848844],[0.622966],[-8.335291],[9.678825],[9.303370],[-5.871905],[2.320138],[-6.546793],[-1.400837],[8.961790],[8.145048],[-9.469503],[5.111467],[-3.426104],[7.131135],[5.598387],[2.075617],[9.667631],[-6.741319],[5.209232],[-1.837527],[-9.111937],[3.581202],[-5.958911],[1.782581],[5.484623],[0.376130],[5.565661],[-0.634376],[0.667199],[8.229193],[-3.277567],[2.541522],[-4.621851],[7.820168],[3.332027],[7.688093],[2.975167],[-8.951019],[-3.808676],[0.704306],[9.636872],[1.071572],[-4.741648],[-4.431400],[0.386135],[-1.284765],[7.958112],[-6.338875],[0.574751],[3.718435],[6.333898],[-8.611866],[9.514041],[-0.175516],[-4.782174],[-4.060555],[-5.125751],[5.894597],[1.957780],[-3.730578],[0.051448],[-3.390267],[-7.835993],[1.549931],[-5.886755],[-9.225866],[3.996465],[3.338697],[-8.935942],[8.731536],[9.599123],[-1.784625],[8.222142],[-1.213332],[2.190608],[-7.018364],[6.033160],[1.456213],[6.427066],[6.737115],[0.348660],[3.106365],[-0.381609],[-5.579691],[-9.864428],[-5.494111],[5.410510],[3.401016],[-1.636062],[3.900063],[3.866419],[-4.913648],[-3.079022],[-0.511835],[-1.312282],[-5.462094],[-2.738029],[4.860919],[-2.224485],[2.639069],[9.031002],[-2.469428],[-5.084715],[0.603276],[-7.851007],[-7.947583],[-8.462031],[-3.155499],[6.841160],[-8.270325],[0.005798],[9.323323],[-3.287314],[-7.499966],[-6.556127],[0.356071],[1.970244],[-4.654390],[-6.566979],[-8.107877],[-0.845330],[-3.106509],[-5.223623],[-6.183712],[7.634434],[2.058407],[2.278752],[-8.747923],[7.847090],[-5.358842],[-5.408245],[8.891801],[5.296003],[4.695587],[-1.834716],[-9.727826],[2.811530],[1.960914],[-0.384057],[0.276923],[9.072144],[-2.057802],[0.273982],[-4.448882],[4.981851],[3.233516],[4.119983],[-9.899161],[-8.802430],[-9.288830],[3.291305],[-2.006767],[4.193366],[-8.046989],[7.116610],[8.627712],[9.627784],[5.752242],[2.868057],[6.022367],[-5.330993],[-1.120207],[-9.968504],[-4.539982],[5.438157],[8.079430],[-0.799741],[3.666015],[8.122413],[0.040790],[9.264617],[1.143814],[-7.236418],[0.999887],[3.325302],[-0.893344],[6.554346],[7.484719],[8.743027],[3.890829],[-6.070445],[-4.402023],[-5.425418],[-8.765592],[7.031753],[-8.610183],[-8.651816],[9.333528],[-6.105335],[-5.979932],[-0.476878],[2.485024]], dtype = "float32")#candidate|7429|(675, 1)|const|float32
const_7430 = relay.const([[5.068364],[8.926178],[-7.799585],[2.566731],[4.902598],[-5.869547],[-0.921257],[-4.069638],[-0.064896],[-1.499561],[-1.590343],[0.704280],[-1.560262],[-0.675976],[7.743457],[6.457612],[8.901987],[-6.628549],[-7.897675],[-6.133108],[1.026172],[4.252575],[-7.540606],[-9.376479],[3.852518],[0.025774],[-5.481724],[-8.772201],[5.647515],[8.179158],[7.253434],[9.008821],[-2.693196],[-4.244255],[-9.743284],[-7.457708],[8.437706],[5.943816],[-4.512641],[-6.066156],[-5.486019],[8.247865],[-1.786499],[3.188098],[-3.703829],[-4.489758],[7.078029],[7.078133],[9.321883],[-7.021208],[-0.525991],[1.516151],[-5.896512],[7.557846],[-2.345368],[-0.861945]], dtype = "float64")#candidate|7430|(56, 1)|const|float64
call_7428 = relay.TupleGetItem(func_1368_call(relay.reshape(const_7429.astype('float32'), [15, 9, 5]), relay.reshape(const_7429.astype('float32'), [15, 9, 5]), relay.reshape(const_7430.astype('float64'), [56,]), ), 2)
call_7431 = relay.TupleGetItem(func_1373_call(relay.reshape(const_7429.astype('float32'), [15, 9, 5]), relay.reshape(const_7429.astype('float32'), [15, 9, 5]), relay.reshape(const_7430.astype('float64'), [56,]), ), 2)
func_4709_call = mod.get_global_var('func_4709')
func_4710_call = mutated_mod.get_global_var('func_4710')
call_7437 = relay.TupleGetItem(func_4709_call(), 0)
call_7438 = relay.TupleGetItem(func_4710_call(), 0)
var_7458 = relay.var("var_7458", dtype = "float64", shape = (16, 4, 11))#candidate|7458|(16, 4, 11)|var|float64
bop_7459 = relay.right_shift(uop_7416.astype('int64'), relay.reshape(var_7458.astype('int64'), relay.shape_of(uop_7416))) # shape=(16, 4, 11)
bop_7462 = relay.right_shift(uop_7418.astype('int64'), relay.reshape(var_7458.astype('int64'), relay.shape_of(uop_7418))) # shape=(16, 4, 11)
output = relay.Tuple([call_7392,bop_7406,var_7411,call_7428,const_7429,const_7430,call_7437,bop_7459,])
output2 = relay.Tuple([call_7393,bop_7409,var_7411,call_7431,const_7429,const_7430,call_7438,bop_7462,])
func_7469 = relay.Function([var_7411,var_7458,], output)
mod['func_7469'] = func_7469
mod = relay.transform.InferType()(mod)
var_7470 = relay.var("var_7470", dtype = "float64", shape = (375,))#candidate|7470|(375,)|var|float64
var_7471 = relay.var("var_7471", dtype = "float64", shape = (16, 4, 11))#candidate|7471|(16, 4, 11)|var|float64
output = func_7469(var_7470,var_7471,)
func_7472 = relay.Function([var_7470,var_7471,], output)
mutated_mod['func_7472'] = func_7472
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4433_call = mod.get_global_var('func_4433')
func_4434_call = mutated_mod.get_global_var('func_4434')
call_7478 = relay.TupleGetItem(func_4433_call(), 0)
call_7479 = relay.TupleGetItem(func_4434_call(), 0)
func_4071_call = mod.get_global_var('func_4071')
func_4076_call = mutated_mod.get_global_var('func_4076')
const_7501 = relay.const([[-6.997117,4.589350,-7.403731],[-8.391451,8.626359,3.192098],[-2.125403,0.475510,-6.078673],[3.078688,-5.238330,-2.025104],[5.700168,4.685500,9.956577],[6.346944,-3.521456,1.931919],[5.291534,8.791398,2.847060],[7.571685,-5.358711,-0.366711],[-7.532441,1.623049,6.472335],[1.171634,-9.422542,-0.206932],[3.416110,4.278289,-2.088661],[-0.991050,-8.518735,6.844874],[4.906070,0.552072,5.344872],[-4.250205,-9.717560,-7.069128],[6.619091,-8.428658,-7.371141],[0.721383,-3.803910,-7.627471],[-8.246340,2.196132,-0.067491],[-0.279954,0.636150,-8.778555],[-5.682323,-7.651622,-5.619196],[-8.485164,9.428500,4.788492],[4.031774,0.047389,0.799932],[2.830591,1.137230,7.449272],[9.361223,3.448961,7.810157],[6.954952,-8.111426,-4.540976],[-2.438366,-9.590113,-7.369781],[-8.150678,-0.153448,9.912164],[0.760726,5.576754,3.903721],[-5.731639,8.055214,5.414718],[3.064523,-1.094556,5.816066],[9.173779,1.162419,1.801315],[9.518154,9.528864,5.274003],[-0.439199,1.414105,1.692538],[-6.989191,4.619601,0.556991],[-2.787248,4.705951,-9.246831],[-9.205086,9.140128,0.487521],[5.147541,-8.678789,1.405706],[9.856334,-1.975617,0.588839],[-6.611970,8.675246,7.351817],[-6.343977,-8.385213,-7.128810],[-5.555043,-4.071105,-3.777634],[-4.936531,-0.062541,0.236575],[7.328052,3.355324,5.332337],[9.070254,-0.498230,-0.637685],[-5.571985,-9.872047,-7.257290],[0.179872,6.595523,-5.354903],[-5.306242,3.189390,8.781736],[-4.702400,6.731188,-8.871758],[-1.356767,-9.741345,2.478689],[1.551065,-5.365129,-0.131812],[-0.974335,3.207742,9.714986],[-2.394133,8.773061,-0.666992],[-3.917656,5.973307,4.185101],[-2.497537,6.979747,-9.768452],[3.493694,-5.577775,6.140556],[9.410080,0.890351,3.631301],[-3.620185,-5.610005,4.915623],[4.665005,0.479177,-9.132525],[-7.903917,-8.833276,4.817991],[-2.948774,-7.022257,-7.222584],[0.302790,-8.380443,8.735710],[9.371283,6.367034,7.865016],[8.398148,-7.159163,2.577483],[3.928662,8.002842,8.804148],[-5.767706,-3.203683,7.630232],[3.495502,-1.803648,5.093721],[8.659625,5.645574,-0.635330],[-0.027256,3.492188,-8.871049],[7.436519,3.590795,4.001511],[7.015369,-4.003916,5.468808],[9.822460,1.198521,-1.799902],[8.471644,5.007456,-3.384463],[0.304027,1.164630,8.024454],[2.224105,5.885851,0.044484],[5.380102,0.292974,-7.340311],[5.623928,3.582306,4.904930],[0.791274,2.361003,-9.122097],[-4.049368,-1.223219,-7.459108],[7.184540,-2.205352,-1.461212],[-4.553404,4.306253,-0.524436],[-7.198339,8.107955,-6.284795],[2.084423,7.116709,-7.580535],[-4.968676,0.787299,9.723491],[-5.798009,6.045646,0.576026],[-1.251129,9.289376,7.963487],[-7.354849,-3.255934,2.470672],[-5.667054,-8.448137,-8.723971],[4.480191,-3.800818,4.052832],[4.451000,-4.236044,3.201606],[-0.691496,6.776665,1.248998],[2.855799,-1.350246,7.463743],[-8.707016,-8.604637,0.486955],[-7.189504,1.344216,1.810064],[-5.877360,-0.062051,5.740350],[-9.173712,-2.175843,3.003686],[1.674316,0.643969,-0.268883],[5.992987,-7.274132,-6.758040],[-9.315583,1.885483,4.801217],[5.866485,9.735456,-6.101699],[2.597557,-1.830860,6.016841],[5.911567,2.233665,-5.539648],[0.931635,-8.568587,-0.047616],[8.219428,0.149566,-9.380540],[0.054594,-6.945351,-8.730640],[7.882601,-1.339469,9.534258],[7.625088,-3.929276,3.627326],[4.248398,-2.676121,-9.748932],[-4.816173,-3.896629,-8.450407],[-8.799222,-0.682189,-8.765646],[6.772549,-8.168722,-2.346107],[8.690943,-5.402810,-9.629531],[3.862093,-4.630491,5.823116],[-3.448300,-3.538709,-3.819562],[5.870123,-2.489804,6.914969],[-5.027191,-3.392527,-9.320786],[-9.084790,-7.189215,6.706671],[-8.277800,-1.247442,7.647855],[-5.135194,3.734173,-9.934470],[9.691884,-7.176022,4.889630],[0.876316,8.507609,-9.151270],[-3.574012,3.129505,3.205841],[2.690374,9.915105,-6.923076],[6.277072,-6.576411,6.879062],[-6.159345,9.845922,-0.095424],[5.254114,-8.386909,8.407296],[-5.419760,-6.826005,-5.169201]], dtype = "float64")#candidate|7501|(125, 3)|const|float64
const_7502 = relay.const([4,-6,4,-6,-3,-3,6,10,-4,-4,-4,-5,6,7,10,1], dtype = "uint16")#candidate|7502|(16,)|const|uint16
call_7500 = relay.TupleGetItem(func_4071_call(relay.reshape(const_7501.astype('float64'), [375,]), relay.reshape(const_7502.astype('uint16'), [16,]), relay.reshape(call_7478.astype('float32'), [14, 16, 3]), ), 5)
call_7503 = relay.TupleGetItem(func_4076_call(relay.reshape(const_7501.astype('float64'), [375,]), relay.reshape(const_7502.astype('uint16'), [16,]), relay.reshape(call_7478.astype('float32'), [14, 16, 3]), ), 5)
output = relay.Tuple([call_7478,call_7500,const_7501,const_7502,])
output2 = relay.Tuple([call_7479,call_7503,const_7501,const_7502,])
func_7516 = relay.Function([], output)
mod['func_7516'] = func_7516
mod = relay.transform.InferType()(mod)
output = func_7516()
func_7517 = relay.Function([], output)
mutated_mod['func_7517'] = func_7517
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4851_call = mod.get_global_var('func_4851')
func_4852_call = mutated_mod.get_global_var('func_4852')
call_7532 = relay.TupleGetItem(func_4851_call(), 0)
call_7533 = relay.TupleGetItem(func_4852_call(), 0)
func_801_call = mod.get_global_var('func_801')
func_803_call = mutated_mod.get_global_var('func_803')
const_7549 = relay.const([-5.876658,6.341480,8.877078,-3.975770,-3.131150,6.725050,0.811967,-7.106791,-9.164635,9.816333,-0.997488,4.799019,-3.227853,1.858616,-9.167236,8.387517,-4.454078,-4.378343,4.977176,9.628570,5.129050,6.024276,3.593384,4.842475,-0.776731,5.910975,-7.607978,-0.055606,9.263843,-7.890988,-8.765935,-4.284778,-8.326248,-7.057604,-0.991358,-5.154818,-4.204489,-2.377696,0.904991,1.415931,-5.016192,-8.870487,-4.191751,5.668484,-5.869565,3.186498,-9.030696,-0.394324,-1.575556,-7.964602,-1.035403,-2.897884,-1.487161,-9.753066,-9.234656,6.585364], dtype = "float64")#candidate|7549|(56,)|const|float64
call_7548 = func_801_call(relay.reshape(const_7549.astype('float64'), [4, 1, 14]))
call_7550 = func_801_call(relay.reshape(const_7549.astype('float64'), [4, 1, 14]))
output = relay.Tuple([call_7532,call_7548,const_7549,])
output2 = relay.Tuple([call_7533,call_7550,const_7549,])
func_7571 = relay.Function([], output)
mod['func_7571'] = func_7571
mod = relay.transform.InferType()(mod)
mutated_mod['func_7571'] = func_7571
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7571_call = mutated_mod.get_global_var('func_7571')
call_7572 = func_7571_call()
output = call_7572
func_7573 = relay.Function([], output)
mutated_mod['func_7573'] = func_7573
mutated_mod = relay.transform.InferType()(mutated_mod)
var_7577 = relay.var("var_7577", dtype = "float64", shape = (4, 16, 11))#candidate|7577|(4, 16, 11)|var|float64
uop_7578 = relay.atanh(var_7577.astype('float64')) # shape=(4, 16, 11)
output = uop_7578
output2 = uop_7578
func_7589 = relay.Function([var_7577,], output)
mod['func_7589'] = func_7589
mod = relay.transform.InferType()(mod)
mutated_mod['func_7589'] = func_7589
mutated_mod = relay.transform.InferType()(mutated_mod)
var_7590 = relay.var("var_7590", dtype = "float64", shape = (4, 16, 11))#candidate|7590|(4, 16, 11)|var|float64
func_7589_call = mutated_mod.get_global_var('func_7589')
call_7591 = func_7589_call(var_7590)
output = call_7591
func_7592 = relay.Function([var_7590], output)
mutated_mod['func_7592'] = func_7592
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5419_call = mod.get_global_var('func_5419')
func_5420_call = mutated_mod.get_global_var('func_5420')
call_7668 = func_5419_call()
call_7669 = func_5419_call()
func_2053_call = mod.get_global_var('func_2053')
func_2056_call = mutated_mod.get_global_var('func_2056')
var_7685 = relay.var("var_7685", dtype = "float32", shape = (720,))#candidate|7685|(720,)|var|float32
var_7686 = relay.var("var_7686", dtype = "float32", shape = (112,))#candidate|7686|(112,)|var|float32
call_7684 = relay.TupleGetItem(func_2053_call(relay.reshape(var_7685.astype('float32'), [6, 15, 8]), relay.reshape(var_7686.astype('float32'), [112,]), ), 4)
call_7687 = relay.TupleGetItem(func_2056_call(relay.reshape(var_7685.astype('float32'), [6, 15, 8]), relay.reshape(var_7686.astype('float32'), [112,]), ), 4)
output = relay.Tuple([call_7668,call_7684,var_7685,var_7686,])
output2 = relay.Tuple([call_7669,call_7687,var_7685,var_7686,])
func_7704 = relay.Function([var_7685,var_7686,], output)
mod['func_7704'] = func_7704
mod = relay.transform.InferType()(mod)
var_7705 = relay.var("var_7705", dtype = "float32", shape = (720,))#candidate|7705|(720,)|var|float32
var_7706 = relay.var("var_7706", dtype = "float32", shape = (112,))#candidate|7706|(112,)|var|float32
output = func_7704(var_7705,var_7706,)
func_7707 = relay.Function([var_7705,var_7706,], output)
mutated_mod['func_7707'] = func_7707
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5349_call = mod.get_global_var('func_5349')
func_5350_call = mutated_mod.get_global_var('func_5350')
call_7717 = relay.TupleGetItem(func_5349_call(), 1)
call_7718 = relay.TupleGetItem(func_5350_call(), 1)
output = relay.Tuple([call_7717,])
output2 = relay.Tuple([call_7718,])
func_7720 = relay.Function([], output)
mod['func_7720'] = func_7720
mod = relay.transform.InferType()(mod)
mutated_mod['func_7720'] = func_7720
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7720_call = mutated_mod.get_global_var('func_7720')
call_7721 = func_7720_call()
output = call_7721
func_7722 = relay.Function([], output)
mutated_mod['func_7722'] = func_7722
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6316_call = mod.get_global_var('func_6316')
func_6317_call = mutated_mod.get_global_var('func_6317')
call_7723 = relay.TupleGetItem(func_6316_call(), 1)
call_7724 = relay.TupleGetItem(func_6317_call(), 1)
output = relay.Tuple([call_7723,])
output2 = relay.Tuple([call_7724,])
func_7754 = relay.Function([], output)
mod['func_7754'] = func_7754
mod = relay.transform.InferType()(mod)
mutated_mod['func_7754'] = func_7754
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7754_call = mutated_mod.get_global_var('func_7754')
call_7755 = func_7754_call()
output = call_7755
func_7756 = relay.Function([], output)
mutated_mod['func_7756'] = func_7756
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7223_call = mod.get_global_var('func_7223')
func_7225_call = mutated_mod.get_global_var('func_7225')
call_7896 = func_7223_call()
call_7897 = func_7223_call()
output = call_7896
output2 = call_7897
func_7912 = relay.Function([], output)
mod['func_7912'] = func_7912
mod = relay.transform.InferType()(mod)
output = func_7912()
func_7913 = relay.Function([], output)
mutated_mod['func_7913'] = func_7913
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7356_call = mod.get_global_var('func_7356')
func_7357_call = mutated_mod.get_global_var('func_7357')
call_7947 = func_7356_call()
call_7948 = func_7356_call()
output = call_7947
output2 = call_7948
func_7956 = relay.Function([], output)
mod['func_7956'] = func_7956
mod = relay.transform.InferType()(mod)
output = func_7956()
func_7957 = relay.Function([], output)
mutated_mod['func_7957'] = func_7957
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7720_call = mod.get_global_var('func_7720')
func_7722_call = mutated_mod.get_global_var('func_7722')
call_7963 = relay.TupleGetItem(func_7720_call(), 0)
call_7964 = relay.TupleGetItem(func_7722_call(), 0)
output = call_7963
output2 = call_7964
func_7973 = relay.Function([], output)
mod['func_7973'] = func_7973
mod = relay.transform.InferType()(mod)
output = func_7973()
func_7974 = relay.Function([], output)
mutated_mod['func_7974'] = func_7974
mutated_mod = relay.transform.InferType()(mutated_mod)
var_7978 = relay.var("var_7978", dtype = "bool", shape = (11, 3, 7))#candidate|7978|(11, 3, 7)|var|bool
var_7979 = relay.var("var_7979", dtype = "bool", shape = (11, 3, 7))#candidate|7979|(11, 3, 7)|var|bool
bop_7980 = relay.logical_or(var_7978.astype('bool'), relay.reshape(var_7979.astype('bool'), relay.shape_of(var_7978))) # shape=(11, 3, 7)
func_4544_call = mod.get_global_var('func_4544')
func_4545_call = mutated_mod.get_global_var('func_4545')
call_7991 = func_4544_call()
call_7992 = func_4544_call()
func_5670_call = mod.get_global_var('func_5670')
func_5675_call = mutated_mod.get_global_var('func_5675')
var_7999 = relay.var("var_7999", dtype = "int32", shape = ())#candidate|7999|()|var|int32
var_8000 = relay.var("var_8000", dtype = "int32", shape = (60,))#candidate|8000|(60,)|var|int32
var_8001 = relay.var("var_8001", dtype = "float64", shape = (375,))#candidate|8001|(375,)|var|float64
call_7998 = relay.TupleGetItem(func_5670_call(relay.reshape(var_7999.astype('int32'), []), relay.reshape(var_8000.astype('int32'), [60,]), relay.reshape(call_7991.astype('float64'), [56,]), relay.reshape(var_8001.astype('float64'), [375,]), ), 4)
call_8002 = relay.TupleGetItem(func_5675_call(relay.reshape(var_7999.astype('int32'), []), relay.reshape(var_8000.astype('int32'), [60,]), relay.reshape(call_7991.astype('float64'), [56,]), relay.reshape(var_8001.astype('float64'), [375,]), ), 4)
output = relay.Tuple([bop_7980,call_7991,call_7998,var_7999,var_8000,var_8001,])
output2 = relay.Tuple([bop_7980,call_7992,call_8002,var_7999,var_8000,var_8001,])
func_8006 = relay.Function([var_7978,var_7979,var_7999,var_8000,var_8001,], output)
mod['func_8006'] = func_8006
mod = relay.transform.InferType()(mod)
var_8007 = relay.var("var_8007", dtype = "bool", shape = (11, 3, 7))#candidate|8007|(11, 3, 7)|var|bool
var_8008 = relay.var("var_8008", dtype = "bool", shape = (11, 3, 7))#candidate|8008|(11, 3, 7)|var|bool
var_8009 = relay.var("var_8009", dtype = "int32", shape = ())#candidate|8009|()|var|int32
var_8010 = relay.var("var_8010", dtype = "int32", shape = (60,))#candidate|8010|(60,)|var|int32
var_8011 = relay.var("var_8011", dtype = "float64", shape = (375,))#candidate|8011|(375,)|var|float64
output = func_8006(var_8007,var_8008,var_8009,var_8010,var_8011,)
func_8012 = relay.Function([var_8007,var_8008,var_8009,var_8010,var_8011,], output)
mutated_mod['func_8012'] = func_8012
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4384_call = mod.get_global_var('func_4384')
func_4385_call = mutated_mod.get_global_var('func_4385')
call_8040 = relay.TupleGetItem(func_4384_call(), 2)
call_8041 = relay.TupleGetItem(func_4385_call(), 2)
func_6340_call = mod.get_global_var('func_6340')
func_6342_call = mutated_mod.get_global_var('func_6342')
call_8045 = func_6340_call()
call_8046 = func_6340_call()
func_3780_call = mod.get_global_var('func_3780')
func_3784_call = mutated_mod.get_global_var('func_3784')
const_8058 = relay.const([-8.859958,-9.273060,3.344180,7.276213,3.055978,8.416273,8.223961,2.137063,-7.313243,-7.224613,6.387260,-0.110468,-7.602503,2.308117,-1.715985,7.970779,3.237465,-0.106216,-6.361715,-8.261117,9.787007,9.869287,-0.546353,-2.962384,-0.512497,-3.994975,-7.537327,-8.261296,-1.393295,5.614609,-1.250628,2.367474,-8.894063,-0.597097,7.101137,-4.561962,-7.717751,-9.783592,-5.873799,8.873647,5.159254,8.361785,-2.795770,-0.474898,7.842340,5.028001,2.234429,-5.626041,-2.081347,-4.175216,5.986681,4.959320,3.970851,4.341609,-0.386029,-7.602633,-6.557807,0.947731,2.879621,9.115040,2.669742,-8.613164,0.909081,3.459496,8.194048,-1.780724,-4.822058,-5.224347,9.014021,-7.546307,-1.463840,1.337808,-5.643272,2.875422,-3.889700,-9.112180,8.080510,-3.907815,3.462604,-9.425117,-7.988243,-1.730165,-2.946542,-3.271303,-8.586901,3.130121,0.727415,2.934334,-1.545060,1.347331,2.720780,-9.623565,-8.905857,4.686033,-7.138528,-4.054562,-0.071475,-1.338031,9.476273,-6.163309,7.593111,-1.598339,-2.103270,-1.276422,-8.398028,-3.133238,0.853547,-0.452491,8.692447,-2.754723,0.940882,-6.724933,3.609513,0.341220,1.732673,-0.799201,4.186622,0.018408,-2.369423,-4.340874,4.559351,-5.263090,-1.679421,-3.525444,-9.298308,7.634463,2.459000,-3.779130,-7.108683,2.752513,0.061797,-0.601972,-7.064004,6.915115,4.249854,4.274349,-4.771095,-8.943397,-7.096578,-0.917567,5.459329,0.141739,-1.475249,1.066155,4.750349,-1.737153,-1.374800,1.586968,1.999963,2.581757,0.874244,3.055561,-9.584060,-4.242532,0.455581,3.097969,-3.429674,3.944468,-8.947909,-8.307085,-7.731330,3.174164,4.914042,7.638754,1.525327,-7.142924,-9.049664,-0.423375,4.982249,3.663995,2.996625,8.733630,5.694811,-9.664656,8.659620,2.810418,-9.754724,-3.496751,-8.067108,-1.527437,-9.017059,-7.627674,-3.288065,4.983686,1.880286,-2.274282,1.032529,-7.350745,7.338778,7.416041,9.108684,-9.901453,3.864361,-6.750573,-3.384797,3.371966,5.848750,0.809441,-0.336247,2.967007,-0.058320,-7.225732,6.221189,-8.551330,-7.601155,8.527173,1.643499,7.276029,-9.183290,-2.665483,-7.427024,6.359361,2.944846,4.266091,2.860451,1.196960,1.147503,2.084942,-0.415216,5.775268,5.639006,2.373130,-4.034313,1.021107,-2.177953,7.094132,2.718409,-1.381521,-6.541894,-3.366752,-6.054436,3.903095,-4.391331,-9.510083,-6.199722,6.688393,-2.287195,-7.192118,5.697827,1.364507,2.540292,-1.709688,2.676297,1.577564,-8.345760,4.159110,4.652114,-1.463315,9.348183,3.757008,-9.994916,-5.838902,6.875983,1.848756,-7.735833,-9.778732,-7.016044,1.864516,2.135478,0.507251,-1.238565,-1.418690,4.861302,3.027278,0.739569,-5.390198,5.576088,-8.640700,-9.175793,2.386098,-2.048999,-7.856309,-2.747961,-8.499450,1.526934,-4.005365,-6.622485,5.008540,6.710309,-8.611154,4.912125,3.687508,5.145143,6.869349,7.208301,0.524128,-3.741411,-0.823707,9.647034,-6.003051,-3.929472,-1.700141,0.739413,-9.176087,1.787699,3.552082,-9.490130,2.249017,-4.618844,6.527627,-3.860497,3.581948,-9.763432,8.971104,-2.608691,-9.970457,-2.376058,9.230386,1.814617,2.722496,4.122944,0.814986,3.202698,6.141149,-0.310652,8.550440,5.324428,7.720878,4.864201,3.880432,9.070860,-2.160079,0.815361,2.244621,-5.296807,2.010587,-8.879908,9.827852,7.641968,5.854040,3.649736,-0.984478,-7.147772,-6.419762,7.718986,9.469668,-6.546332,-3.645734,-8.755886,-9.247153,-9.218876,-5.174003,-0.887310,-7.638404,-6.681191,6.522605,8.877442,1.856348,-4.465705,9.902150,2.745767,-1.808966,-6.462330,7.898950,-9.883685,4.571578,2.374615,1.675815,6.282487,-4.267180,-4.182957,8.485766,6.660415,9.593782,4.129610,8.213583,8.062444,-0.705700,1.628582,-7.535817,1.671375,-0.398305,3.491824,-5.291433,-0.299836,1.952297,9.624815,-9.069180,1.519017,-9.317143,-6.408865,1.448455,6.695569,2.736151,-2.409943,-7.511788,-3.030319,-7.506560,8.153983,-1.138200,4.081313,-0.892657,9.442072,-2.134244,-2.316354,8.156777,-8.432235,-1.606040,-5.113836,-0.178858,-7.422794,-4.711839,-7.814850,-1.422009,0.481548,4.313817,-3.047079,8.400226,-1.028421,-0.485257,-7.483121,0.379314,9.509376,-6.628875,0.877072,-9.750573,-8.005652,-3.270175,9.194498,-5.341962,-0.147916,-0.136803,0.279568,-3.306862,6.425114,-0.316808,-9.048493,-7.812889,5.895386,8.125115,-8.072276,-4.555578,-2.977321,8.754740,-8.936552,-5.328739,0.979921,0.893204,0.181724,-0.973043,1.367446,-4.568586,-9.445697,3.375279,-5.914187,-3.791410,-5.474614,3.549192,-3.689688,-8.860542,-5.124777,2.428892,3.355127,-6.391147,-0.665898,6.120176,1.830129,6.253990,1.147357,7.649998,1.826773,-3.081902,0.453064,-2.970303,-1.471683,-0.298253,3.247997,-0.046944,-9.157025,8.629306,4.245949,-3.093415,7.800506,-4.755845,-2.924920,-5.856259,9.116316,8.006650,-0.951531,-9.581490,0.180514,8.509255,-2.763842,7.117516,-5.881459,0.956267,-9.451063,-7.311563,6.847172,-8.038742,-3.475537,5.583722,3.650990,-0.400196,-6.620666,-8.748904,7.795926,6.055611,6.110019,2.328755,3.624840,7.700998,-6.747005,2.488291,-8.469101,-2.363358,-5.256912,-4.913198,-4.490616,8.268336,-9.968483,-3.529464,5.596686,9.061870,1.214363,-7.873995,-8.905298,-3.879158,5.448801,-3.961823,7.785148,3.102152,7.220136,3.918571,-6.182758,-4.432924,-6.122906,8.383336,-3.873117,-5.562102,4.548701,4.328459,-9.368673,-6.292565,1.914886,8.419747,4.112376,9.510999,-8.401505,6.138898,5.223601,3.870470,-7.356450,-3.965967,-8.903061,-6.444214,4.434561,8.217333,9.324049,-4.204544,-8.675404,6.144534,-9.231000,-8.130886,2.741409,2.038917,-8.322510,-4.018319,3.544837,1.743494,6.010880,0.687696,3.845670,-1.808663,4.012713,-2.497063,-2.901816,0.421878,-2.995697,-0.446211,9.942227,-1.896691,-6.964625,4.472388,6.277382,3.854244,-1.189227,-8.199598,3.410390,4.300802,7.759271,3.719693,0.034917,-6.170262,-0.808917,-7.346692,-0.408653,6.437354,3.387291,4.721011,-7.125699,-9.317626,2.746365,-7.259595,3.690649,7.200496,8.396976,4.405114,-2.780955,-9.939295,-4.953756,-8.156401,-1.153031,0.826446,-0.762830,-1.007158,-2.209142,-8.550355,6.861795,-4.886367,-2.297529,2.971847,-1.304778,-9.907234,-8.646117,-1.784283,4.785660,-0.226323,-1.180434,-2.167204,-6.996602,0.602434,6.068648,-2.649929,1.338180,6.250692,9.339520,6.527901,6.533498,-7.711300,9.487408,-8.619999,9.783998,-5.813051,8.401211,8.231508,7.361992,-5.039090,-6.127991,-3.898017,6.142549,8.279089,-2.038681,7.017355,-9.152199,-1.037309,-2.503419,3.709639,6.107876,2.929265,-0.623718,-7.974962,-5.337453,-0.481568,6.824430,-9.622485,-5.000174,1.094105,-1.582584,0.788969,-0.464328,-0.844501,-1.535758,3.679512,7.165012,-5.216817,7.463913,-7.418896,4.765399,-6.766062,9.801773,-9.940556,-5.135966,-6.807855,-7.849244,0.114649,3.725435,7.848927,5.937179,7.765155,6.320856,-8.039396,-4.133499,-1.030930,2.798364,6.322806,8.910837,3.704293,8.683891,4.680788,4.484941,0.431934,-0.740218,-5.850412,6.476126,6.808469,-3.478290,9.016269,-8.585977,-4.337961,-8.448251,-3.113551,6.871406,7.706785,3.555789,-6.115177,2.915264,-4.416955,-7.790173,-5.782088,-5.458953,3.595565,0.663323,-4.396959,-4.742253,-6.150007,-3.181690,8.124694,-1.789531,-5.380983], dtype = "float32")#candidate|8058|(720,)|const|float32
const_8059 = relay.const([-2.778936,-1.437371,9.828528,-9.877518,-7.427728,-1.194589,-6.386059,7.810400,-6.971539,3.243103,-2.230407,-2.134080,6.507323,6.576274,-1.354403,-1.727673,-1.590436,1.646815,5.796277,7.419825,0.715587,1.085400,-3.426853,4.917611,-1.496224,2.862218,3.569735,3.138262,4.698988,7.873761,-5.201513,-7.640711,-0.792848,5.003367,-4.442564,-7.969478,-5.140933,7.118653,-7.236978,0.344827,-0.379001,-7.537413,4.806038,-9.809747,-5.478582,-5.968971,8.888924,2.138917,-0.253886,3.574269,1.252636,2.140412,-1.679015,2.617796,1.693158,4.236998,2.985261,6.897325,-9.768375,6.736548,3.206067,8.291017,5.965247,-1.871167,7.690883,-4.986153,0.190622,2.776317,-8.095992,4.930203,3.955702,1.759447,-8.454066,7.933072,9.157430,9.269277,-0.291246,2.967429,6.280806,-3.526118,-6.189052,2.163433,-0.387068,8.052640,4.652812,-2.906471,3.136785,-6.342080,-4.904917,-1.856697,-6.069832,-8.999536,9.120803,-4.385668,8.467558,7.663314,0.900711,-5.923628,2.881550,6.790539,-8.114019,-8.234421,9.152654,5.013104,-7.611459,3.807269,5.805591,-1.340856,-4.105039,2.985203,8.680946,9.716005], dtype = "float32")#candidate|8059|(112,)|const|float32
call_8057 = relay.TupleGetItem(func_3780_call(relay.reshape(const_8058.astype('float32'), [360, 2]), relay.reshape(const_8059.astype('float32'), [28, 4]), ), 0)
call_8060 = relay.TupleGetItem(func_3784_call(relay.reshape(const_8058.astype('float32'), [360, 2]), relay.reshape(const_8059.astype('float32'), [28, 4]), ), 0)
func_2102_call = mod.get_global_var('func_2102')
func_2106_call = mutated_mod.get_global_var('func_2106')
const_8083 = relay.const([-7,9,8,-7,2,-5,-4,4,5,4,3,4,-2,4,4,-8,-2,2,-4,-8,-2,-9,-4,-2,10,-2,-4,3,-9,-8,4,3,3,-5,-6,-3,-6,7,-5,10,-5,-8,-7,4,8,10,-6,-10,-8,-7,-10,3,5,7,-8,-5,9,1,4,3,-7,-6,6,3,-4,8,-3,1,10,-9,-7,1,-6,2,-10,-2,8,2,-7,-7,9,7,6,-1,-10,-7,3,-10,2,10,7,-3,-1,10,-3,-1,2,-6,7,-7,8,-3,1,1,-7,9,5,10,8,6,-9,-4,6,-9,7,-2,-9,-7,10,8,-9,3,9,-1,-5,10,5,-3,4,-6,10,-6,-4,-1,-1,4,-6,-5,10,3,5,9,7,-3,-6,2,8,6,8,-8,6,10,-7,-8,1,4,5,5,5,-3,-8,8,-2,10,4,9,-10,-2,4,-5,1,10,-3,8,-5,-9,-5,-9,-1,-6,-6,5,-4,4,6,2,1,5,-6,-1,3,4,-5,4,-1,-1,5,-3,-2,6,10,-7,-9,4,5,-8,3,6,-6,-6,-1,4,-2,7,-5,3,-1,6,-3,7,4,-6,-7,7,-3,10,9,-1,2,6,-1,3,-9,1,-9,-10,4,-2,-8,-6,-3,6,2,-4,5,2,-8,7,-7,-9,-7,-1,-5,-3,3,4,6,9,-9,-2,2,-10,2,6,-8,-6,-4,-7,2,-1,-9,-3,5,5,-5,-8,-5,-7,-8,6,10,2,-1,-4,-6,1,10,-10,-8,-8,-4,-1,-7,-5,3,-10,3,8,10,8,7,-1,3,-1,-8,5,-7,10,5,10,7,3,-3,-6,5,9,5,-8,-3,1,-9,-5,3,2,-1,7,2,9,-3,6,-1,9,-7,8,5,1,-6,-2,-2,-10,-5,-10,-9,2,-6,-9,5,4,-4,-10,-2,4,-9,-8,1,5,-4,-2,-6,6,-3,8,4,8,2,8,-2,3,-1,4,8,-7,-8,7,1,5,-8,-2,5,-10,-1,-3,5,6,-7,-9,4,9,-2,6,-2,1,-4,-4,-4,-7,7,10,6,-7,8,7,-1,-2,5,-10,8,8,-4,-2,7,3,-9,-5,9,-9,-7,9,-5,2,-10,8,2,10,8,-4,1,-10,-10,-7,-6,-8,-5,2,-9,-1,-7,-6,4,-4,-10,-9,4,3,-2,-5,-9,3,1,3,10,-6,4,5,-10,2,7,-2,1,-7,6,-3,-6,-6,-4,4,4,2,-5,-5,5,-6,-9,3,4,2,3,-2,2,5,-10,1,-2,1,7,4,-5,4,9,-3,9,-2,3,-1,-3,-10,-7,6,-3,9,-4,3,1,3,-7,4,4,-8,9,1,-8,-4,3,6,-8,-5,8,-2,-5,1,-5,-8,1,5,5,-2,10,-10,8,8,-3,-6,1,9,5,8,5,9,1,-5,-4,3,-3,-5,-1,6,-6,-4,-2,-2,3,9,5,-5,5,-5,7,1,1,2,10,5,-2,-2,-1,5,4,5,3,-8,-2,-7,2,-10,5,4,-1,3,9,-2,-10,8,1,5,-5,-4,7,5,-1,-2,-8,4,-7,-5,-2,1,-1,8,-4,10,8,-8,7,-4,-8], dtype = "int32")#candidate|8083|(605,)|const|int32
call_8082 = relay.TupleGetItem(func_2102_call(relay.reshape(const_8083.astype('int32'), [5, 11, 11]), relay.reshape(const_8083.astype('int32'), [5, 11, 11]), ), 0)
call_8084 = relay.TupleGetItem(func_2106_call(relay.reshape(const_8083.astype('int32'), [5, 11, 11]), relay.reshape(const_8083.astype('int32'), [5, 11, 11]), ), 0)
func_5670_call = mod.get_global_var('func_5670')
func_5675_call = mutated_mod.get_global_var('func_5675')
var_8111 = relay.var("var_8111", dtype = "int32", shape = ())#candidate|8111|()|var|int32
const_8112 = relay.const([-4,6,2,-9,9,8,3,10,7,-2,-10,8,-2,-2,1,-9,-8,-10,-5,3,5,9,3,-3,-7,3,3,9,-6,-4,-4,-3,-6,-3,4,-6,-7,-8,-4,1,9,-9,5,-8,10,-9,5,-7,7,-1,-5,-1,-3,5,1,9,1,-2,7,-7], dtype = "int32")#candidate|8112|(60,)|const|int32
var_8113 = relay.var("var_8113", dtype = "float64", shape = (14, 4))#candidate|8113|(14, 4)|var|float64
var_8114 = relay.var("var_8114", dtype = "float64", shape = (375,))#candidate|8114|(375,)|var|float64
call_8110 = relay.TupleGetItem(func_5670_call(relay.reshape(var_8111.astype('int32'), []), relay.reshape(const_8112.astype('int32'), [60,]), relay.reshape(var_8113.astype('float64'), [56,]), relay.reshape(var_8114.astype('float64'), [375,]), ), 6)
call_8115 = relay.TupleGetItem(func_5675_call(relay.reshape(var_8111.astype('int32'), []), relay.reshape(const_8112.astype('int32'), [60,]), relay.reshape(var_8113.astype('float64'), [56,]), relay.reshape(var_8114.astype('float64'), [375,]), ), 6)
output = relay.Tuple([call_8040,call_8045,call_8057,const_8058,const_8059,call_8082,const_8083,call_8110,var_8111,const_8112,var_8113,var_8114,])
output2 = relay.Tuple([call_8041,call_8046,call_8060,const_8058,const_8059,call_8084,const_8083,call_8115,var_8111,const_8112,var_8113,var_8114,])
func_8119 = relay.Function([var_8111,var_8113,var_8114,], output)
mod['func_8119'] = func_8119
mod = relay.transform.InferType()(mod)
mutated_mod['func_8119'] = func_8119
mutated_mod = relay.transform.InferType()(mutated_mod)
func_8119_call = mutated_mod.get_global_var('func_8119')
var_8121 = relay.var("var_8121", dtype = "int32", shape = ())#candidate|8121|()|var|int32
var_8122 = relay.var("var_8122", dtype = "float64", shape = (14, 4))#candidate|8122|(14, 4)|var|float64
var_8123 = relay.var("var_8123", dtype = "float64", shape = (375,))#candidate|8123|(375,)|var|float64
call_8120 = func_8119_call(var_8121,var_8122,var_8123,)
output = call_8120
func_8124 = relay.Function([var_8121,var_8122,var_8123,], output)
mutated_mod['func_8124'] = func_8124
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7388_call = mod.get_global_var('func_7388')
func_7389_call = mutated_mod.get_global_var('func_7389')
call_8136 = func_7388_call()
call_8137 = func_7388_call()
func_6340_call = mod.get_global_var('func_6340')
func_6342_call = mutated_mod.get_global_var('func_6342')
call_8150 = func_6340_call()
call_8151 = func_6340_call()
func_7720_call = mod.get_global_var('func_7720')
func_7722_call = mutated_mod.get_global_var('func_7722')
call_8155 = relay.TupleGetItem(func_7720_call(), 0)
call_8156 = relay.TupleGetItem(func_7722_call(), 0)
func_4249_call = mod.get_global_var('func_4249')
func_4254_call = mutated_mod.get_global_var('func_4254')
var_8161 = relay.var("var_8161", dtype = "float64", shape = (28, 2))#candidate|8161|(28, 2)|var|float64
call_8160 = relay.TupleGetItem(func_4249_call(relay.reshape(call_8155.astype('float32'), [14, 16, 3]), relay.reshape(call_8155.astype('float32'), [14, 16, 3]), relay.reshape(var_8161.astype('float64'), [2, 28]), ), 0)
call_8162 = relay.TupleGetItem(func_4254_call(relay.reshape(call_8155.astype('float32'), [14, 16, 3]), relay.reshape(call_8155.astype('float32'), [14, 16, 3]), relay.reshape(var_8161.astype('float64'), [2, 28]), ), 0)
output = relay.Tuple([call_8136,call_8150,call_8155,call_8160,var_8161,])
output2 = relay.Tuple([call_8137,call_8151,call_8156,call_8162,var_8161,])
func_8166 = relay.Function([var_8161,], output)
mod['func_8166'] = func_8166
mod = relay.transform.InferType()(mod)
mutated_mod['func_8166'] = func_8166
mutated_mod = relay.transform.InferType()(mutated_mod)
var_8167 = relay.var("var_8167", dtype = "float64", shape = (28, 2))#candidate|8167|(28, 2)|var|float64
func_8166_call = mutated_mod.get_global_var('func_8166')
call_8168 = func_8166_call(var_8167)
output = call_8168
func_8169 = relay.Function([var_8167], output)
mutated_mod['func_8169'] = func_8169
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6934_call = mod.get_global_var('func_6934')
func_6935_call = mutated_mod.get_global_var('func_6935')
call_8216 = relay.TupleGetItem(func_6934_call(), 0)
call_8217 = relay.TupleGetItem(func_6935_call(), 0)
output = relay.Tuple([call_8216,])
output2 = relay.Tuple([call_8217,])
func_8218 = relay.Function([], output)
mod['func_8218'] = func_8218
mod = relay.transform.InferType()(mod)
mutated_mod['func_8218'] = func_8218
mutated_mod = relay.transform.InferType()(mutated_mod)
func_8218_call = mutated_mod.get_global_var('func_8218')
call_8219 = func_8218_call()
output = call_8219
func_8220 = relay.Function([], output)
mutated_mod['func_8220'] = func_8220
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3969_call = mod.get_global_var('func_3969')
func_3971_call = mutated_mod.get_global_var('func_3971')
call_8230 = func_3969_call()
call_8231 = func_3969_call()
func_7330_call = mod.get_global_var('func_7330')
func_7332_call = mutated_mod.get_global_var('func_7332')
const_8243 = relay.const([[-0.958789,1.846597,-7.351110,8.243877,-5.096450,3.921768,-7.155385,2.686000,-9.352991,1.384214],[-1.405852,-4.839056,-9.468020,9.651746,3.628702,0.464630,8.913001,-4.083400,-8.751493,4.246846],[-5.932526,-5.454326,4.477450,0.896579,3.449094,-3.935454,8.310796,7.204811,-8.481676,-4.568456],[0.015912,9.164065,-6.377633,-8.554430,5.300584,3.891276,9.728404,-1.777910,-0.793469,-6.340292],[-1.942033,6.875621,9.188093,4.313464,-4.381690,9.402045,-9.863641,-5.578202,6.322962,6.325964],[-8.306647,-0.151941,6.480751,3.875784,-6.327850,1.483304,-1.378793,-9.920785,5.272214,4.625794],[-8.545023,4.497761,9.363952,2.863993,7.947301,2.864421,-9.709733,3.852773,-9.896546,7.516056],[-5.908299,1.990848,9.398934,-0.501139,6.331697,-1.108845,7.603670,-6.841786,-2.580971,0.352861],[4.505850,5.361392,-5.056969,7.963175,0.886782,-3.689931,6.545987,-7.985630,5.126120,9.746642],[-9.533638,-8.385245,-5.854147,-2.669308,1.240194,-3.554223,-9.821155,-5.129180,-3.158450,4.429054],[-2.328912,5.010783,0.323463,-0.400631,-3.119967,-3.146914,-0.506127,-3.419298,3.425198,0.813632],[-0.016473,2.086391,1.437927,-6.040544,0.986770,-9.801926,6.721337,5.967685,9.186242,3.035210],[-7.321778,1.041378,3.797618,2.060225,-8.676846,2.903318,-6.846195,-6.092015,-3.286621,7.300184],[-7.331285,6.605533,8.210244,9.444355,-4.702101,-1.215081,-8.708002,8.670828,-0.377654,-7.664563],[2.816839,5.077250,2.179515,-5.190938,-2.704051,4.994512,1.460974,-9.092133,-6.514527,8.617176],[7.456854,4.028977,2.031892,4.813597,2.421341,7.816635,3.405500,-2.137781,-0.008804,-3.401092],[-1.634102,1.329025,-3.819774,-8.925907,2.017461,5.788683,3.233398,-8.712729,-7.868604,-9.594767],[-4.296763,-1.373450,9.109473,-5.013112,1.717188,-8.865255,-1.522971,8.881662,-2.907493,2.298421],[-6.348505,-3.442882,2.571387,-5.843869,-5.110206,4.096132,-9.276305,-7.677076,-6.998951,3.253381],[5.005164,7.209248,-8.725398,-4.213049,-9.869651,-8.095017,-4.737450,1.716629,-9.091846,0.392068],[-0.613685,2.164284,0.160907,-8.766742,-5.409590,0.020889,-1.396435,3.943875,-9.004637,5.983858],[-7.127468,4.208340,-9.386771,-9.696355,-1.764801,7.641184,7.657343,-3.894564,-0.245567,-0.590355],[-3.900298,-2.052645,1.995620,7.148589,0.894519,-4.940088,6.527475,-6.556182,-7.247925,-7.517581],[0.133528,-1.730315,-7.098599,5.424390,4.318574,6.897551,5.323758,-1.303686,0.087207,-0.238966],[-0.664541,-7.696208,-1.895292,7.943980,-6.319031,-5.386891,5.655337,-6.794109,8.150539,-4.501147],[3.757248,-6.934754,2.460679,7.007324,2.556103,2.302650,9.198689,2.384686,0.642358,-9.043566],[-8.686539,9.340581,0.035121,8.404191,0.523958,-8.939881,0.158493,7.049670,4.634041,8.775561],[9.310546,9.133383,5.669813,-1.841266,7.677519,-3.632175,8.357271,-3.541206,0.575945,3.895641],[8.106820,0.229857,7.309184,-8.497617,-2.479449,3.910516,-4.839796,-4.888051,9.779599,-2.624233],[8.636180,-0.004577,-8.780263,-3.245337,-9.147996,-1.396651,4.062345,-3.375614,7.135050,8.545377],[-1.195068,7.564752,8.281939,-8.339297,-1.841643,-2.302689,7.742090,1.505952,4.998653,3.873676],[6.822184,6.624588,-2.885816,2.995820,-2.617708,6.779551,2.470867,-2.938707,-2.613782,1.297999],[9.346181,-4.622632,-1.116281,2.880026,7.551311,8.613841,-7.272839,7.043172,-3.511795,-1.464318],[-6.086405,-3.160931,-5.879125,-7.689186,2.581382,-5.173113,0.217265,-4.062057,-4.140323,3.270200],[-9.266829,-3.320964,-0.911906,9.576172,2.587084,0.746882,2.063980,0.166197,-4.588242,-7.451975],[-9.372534,8.669455,-0.031645,7.619759,9.962364,-0.873010,-8.996221,-9.567949,6.471841,4.825984],[-3.976717,-7.840965,-7.535759,7.994009,0.547406,1.703691,-4.047662,-7.475843,-3.105422,3.520726],[-5.736319,6.197877,9.489336,4.132295,-0.043138,4.034250,-1.662001,-0.530538,9.173021,7.925681],[-2.847367,-1.750132,1.539854,8.290423,3.006152,8.968175,-1.225726,-3.036159,4.988408,-1.366687],[-3.987342,-9.888475,0.840943,-1.841398,-2.713011,-7.223110,-1.944355,-7.020877,3.206459,9.190402],[-1.528231,-6.422030,4.218891,-7.699896,6.977855,-3.714484,-6.741476,-6.699923,-1.445435,1.661406],[-1.343096,8.660931,-8.283062,8.850220,2.104725,-0.963338,3.924106,-6.553271,6.941963,8.494307],[-3.281148,7.034413,-1.388197,-5.276019,-1.522095,-2.672855,4.182313,4.705270,5.161203,2.919945],[6.235652,-4.491924,8.551183,0.851158,-9.911671,0.089529,0.217324,9.963537,-9.198691,-4.360164],[4.640131,1.169203,-8.789389,7.894057,2.938973,-7.538264,-6.672339,-4.954718,0.848899,4.726363],[-3.557833,-1.324186,1.974019,-2.960630,-5.724525,-5.074245,3.297399,-9.615356,-5.449268,7.343715],[6.200410,-6.517423,-2.704486,8.531790,-1.873350,0.240812,2.971402,-8.769554,-4.575773,-4.964648],[8.924942,-7.971614,-9.046121,-4.021517,-8.679202,3.554788,8.634235,-5.852280,-3.029138,-3.637173],[-9.018309,5.753590,7.998764,-7.706964,-0.542776,-3.376551,6.970165,-6.215904,-3.319162,-3.079686],[-1.112541,-1.755971,9.832688,-1.567797,-0.629034,-7.853190,-7.175413,-0.607888,-8.744515,1.938741]], dtype = "float64")#candidate|8243|(50, 10)|const|float64
call_8242 = relay.TupleGetItem(func_7330_call(relay.reshape(const_8243.astype('float64'), [10, 10, 5])), 0)
call_8244 = relay.TupleGetItem(func_7332_call(relay.reshape(const_8243.astype('float64'), [10, 10, 5])), 0)
output = relay.Tuple([call_8230,call_8242,const_8243,])
output2 = relay.Tuple([call_8231,call_8244,const_8243,])
func_8246 = relay.Function([], output)
mod['func_8246'] = func_8246
mod = relay.transform.InferType()(mod)
output = func_8246()
func_8247 = relay.Function([], output)
mutated_mod['func_8247'] = func_8247
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7571_call = mod.get_global_var('func_7571')
func_7573_call = mutated_mod.get_global_var('func_7573')
call_8260 = relay.TupleGetItem(func_7571_call(), 0)
call_8261 = relay.TupleGetItem(func_7573_call(), 0)
output = call_8260
output2 = call_8261
func_8269 = relay.Function([], output)
mod['func_8269'] = func_8269
mod = relay.transform.InferType()(mod)
mutated_mod['func_8269'] = func_8269
mutated_mod = relay.transform.InferType()(mutated_mod)
func_8269_call = mutated_mod.get_global_var('func_8269')
call_8270 = func_8269_call()
output = call_8270
func_8271 = relay.Function([], output)
mutated_mod['func_8271'] = func_8271
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6934_call = mod.get_global_var('func_6934')
func_6935_call = mutated_mod.get_global_var('func_6935')
call_8284 = relay.TupleGetItem(func_6934_call(), 0)
call_8285 = relay.TupleGetItem(func_6935_call(), 0)
func_453_call = mod.get_global_var('func_453')
func_456_call = mutated_mod.get_global_var('func_456')
const_8289 = relay.const([-1.166499,-3.747395,2.333203,-4.523771,0.142929,4.215759,7.219417,9.415657,8.862915,6.287149,-0.275296,-3.607869,-9.876154,5.536280,2.099822,9.138204,8.377892,3.980400,3.119406,8.187450,-4.711831,-8.510971,4.373547,0.247678,-8.854232,-0.701032,6.391961,-7.951834,-4.815692,4.983024,-1.124796,7.430371,-2.441620,-9.815863,4.832827,2.368970,-5.902048,8.806277,6.618856,-9.483054,-7.172734,-4.901806,1.911770,4.318467,-3.101649,1.437340,1.227105,-4.602845,-5.818294,2.701767,-0.091259,2.716632,8.242728,-5.642187,6.867191,-5.905890,8.167728,8.665158,0.374314,8.345834,1.959443,-0.931382,2.620741,-5.984264,3.489633,0.091199,-1.652339,7.852301,-8.662644,-5.994380,-6.502784,1.379466,4.491554,4.184353,6.763949,-4.711165,2.938700,8.478211,0.989112,-0.037231,-0.844802,-6.846197,-7.756031,-7.060171,9.743235,-0.454928,7.166674,-5.425532,-1.945008,-3.024904,-7.662122,-5.548366,6.164390,-9.714113,-7.150464,-6.046656,9.178462,8.097276,-4.180489,-8.888328,4.592254,8.055995,-8.368906,0.358807,5.764058,-4.241312,9.766094,-8.850555,-2.780005,2.980468,7.101091,5.446761,9.913592,7.522548,-5.231209,7.444823,-9.163540,1.893520,-1.439727,-2.672043,-3.982466,9.283465,1.194089,-0.954682,9.820944,-8.071224,7.618395,9.264189,4.094498,-6.650571,-4.610224,4.654870,6.453919,5.450346,2.268455,2.284595,-3.604884,8.633264,-3.264635,2.395165,-4.006293,5.260013,-7.502083,-6.103130,2.325403,2.576207,-3.621579,-3.682762,7.934043,-4.421333,7.693257,-5.142184,-1.449848,-7.813139,-7.164848,-6.979145,2.811513,-5.007538,-4.200665,4.748263,-4.728835,3.242907,0.603076,-9.591208,6.580017,-8.576384,-9.931880,-4.978531,-9.444512,-8.706693,6.808894,9.380447,-8.197259,-8.645442,-4.441069,-5.794980,-8.506833,-5.010309,5.049515,9.448074,6.333633,-2.050144,-0.566481,-3.469494,5.041999,3.582275,-7.674637,8.437449,0.062613,4.458295,-6.877182,-6.268267,-9.486753,-6.419300,8.860021,-0.487124,8.781953,-7.602039,-3.840340,9.623919,9.631438,-3.952275,9.381485,-4.763530,8.689213,4.878592,5.716669,-3.741744,-0.650897,-0.344417,-4.181934,-9.481279,0.731680,-3.640864,3.722933,1.810953,-4.782122,-0.962387,9.770350,-0.586202,9.522203,-5.535902,4.394040,-2.097753,-0.794853,7.302483,8.911586,-5.801159,3.717942,-9.244792,-1.633467,7.538207,6.361145,1.335668,9.994282,5.265899,4.346339,1.937693,1.001781,-2.957379,-9.444554,-5.934943,0.867925,-0.490701,3.659097,9.401004,-1.039422,8.822043,5.188493,7.426605,-3.639503,1.237850,-4.346883,9.923760,-5.740936,6.380674,6.312019,-5.822347,1.633186,0.498270,-8.915218,-9.662820,-0.369298,-7.218924,-0.059857,-0.004944,9.425273,-7.352714,-8.304438,5.332552,7.838040,-0.292198,-9.051949,6.846773,8.287564,7.292162,-3.715316,8.095493,7.288690,-2.134586,9.406611,-5.688321,-6.102283,-3.959326,-9.376666,0.772811,4.579072,6.934760,-9.207963,6.453544,6.403547,5.113189,-4.145641,-8.545339,6.732678,-6.945009,5.855277,9.277676,3.112443,9.589531,4.908375,-4.961313,-9.911886,-4.158775,-9.887131,-4.620288,-0.374619,9.074814,-4.626433,-5.856466,-5.966864,-3.176333,-1.452135,4.965759,-2.554770,6.421932,3.764257,-7.624630,4.203110,4.748307,-7.938846,-9.765172,1.071066,3.698945,8.311663,6.152104,-6.795125,-8.864345,4.270133,2.251342,-0.494032,1.021428,-9.158834,6.886381,9.963222,4.921872,-4.979007,-5.263159,-8.614478,-0.307766,-3.453411,1.237896,9.920448,7.301538,-8.323155,-6.523296,9.538810,-0.777068,0.044184,-6.747143,-8.222883,-6.634536,4.479942,9.812548,5.978154,3.530956,4.385755,-8.968040,-3.951388,-4.365882,-2.834034,9.834653,-0.423081,8.104463,0.547593,-7.989266,-6.986508,7.134156,-3.529130,6.518332,-7.354509,2.707929,5.387113,-5.212113,9.723130,-4.856481,-8.115688,2.138628,-9.523884,-3.952224,-0.174523,5.955210,-6.532294,-2.906169,6.721623,-3.652257,4.268748,-7.198114,5.225534,-1.360617,8.009607,2.209649,0.175288,-2.747114,8.066652,5.636358,-9.927856,-1.604903,1.798970,1.593766,-1.566050,-9.324114,7.761951,8.593606,-4.903955,9.323307,-5.991966,8.380881,8.525049,7.675122,-4.603083,6.731311,-9.649735,8.867171,-6.939044,-6.011317,-0.008768,-8.593348,5.163715,1.763874,-0.737522,8.420567,7.649574,-4.818826,0.875567,7.287486,-3.031382,-2.165643,7.345402,0.197904,-8.787963,-6.410959,-7.978123,-3.683482,-2.597113,3.779328,-4.567860,-2.185576,4.817937,-1.491880,-5.712697,1.689673,-7.400335,2.754447,4.429163,-6.421955,2.353851,2.604508,5.785582,5.102126,9.268865,-0.109458,-0.997556,0.102302,6.352446,-4.132200,4.272629,8.524476,8.147138,2.340262,8.615911,-4.507515,4.521583,-4.332707,1.932435,-7.467176,5.555098,-7.955887,9.767473,7.053591,4.699748,6.627638,2.981067,7.643094,3.053936,-7.086647,-1.046404,1.415138,-9.332504,-1.844414,-5.514667,-4.211270,-8.067619,3.900686,-2.944642,-2.674715,-4.402177,-5.913381,-2.344298,-0.307339,3.625249,-6.607201,5.896730,0.601132,-1.762653,2.415207,-6.972172,-6.620405,-6.068678,8.707945,-4.473905,-5.733502,6.468162,2.285838,-4.165435,8.853438,-9.249995,4.939790,-8.740892,9.053741,7.943022,7.539842,-4.422198,-2.105002,6.430352,0.594401,6.568561,-3.840791,-9.158826,4.951639,1.970800,-4.662758,-6.498024,6.021554,-6.724426,0.837222,1.202876,-6.749212,-9.283314,-2.452766,-9.394339,-3.665388,5.999189,-8.178346,-7.058161,7.186339,-9.749919,6.682592,1.620998,5.278088,9.008534,1.872708,5.444948,-9.781333,-7.527605,0.426728,-4.545122,8.247784,-8.683669,3.953132,3.044231,-7.486806,0.758190,-0.588854,-5.032043,-6.920190,3.823435,-6.536570,6.682062,-7.333086,2.638549,-5.192308,0.547568,-5.852802,4.515711,-0.134783,-8.349402,6.454932,-9.392314,-3.960696,0.386526,-9.904407,5.925801,-2.165141,8.378607,-8.737013,-2.458362,-8.664717,-4.944969,-5.166736,9.435100,-1.450574,0.016924,2.408433,-8.207615,6.780774,-4.658245,-8.012215,-3.310240,2.293504,1.260764,1.139837,-3.861369,-0.807973,-5.151847,0.391258,7.228650,7.415245,1.536302,9.740429,-0.669692,7.399492,-4.111883,-0.400111,-6.925209,1.386070,-8.792367,-0.818472,-3.810369,0.782350,3.821275,-0.804299,5.624608,2.267541,-7.027108,-4.302472,2.466145,-0.537499,1.057675,3.381709,-1.697310,3.122873,8.000922,1.846215,-2.134560,-3.347477,6.030993,0.448187,-5.027380,9.796014,8.157636,6.152659,-1.781995,-0.885802,8.582610,2.644061,-5.838954,-1.271263,-8.636669,-4.284724,-8.575067,-0.952413,9.783966,-4.372338,6.780124,1.032722,8.827696,8.796988,-6.050948,0.265001,9.082561,9.604994,-8.465220,7.734903,2.283607,5.185285,-5.315322,-6.610634,9.917804,8.039400,-1.763639,3.302017,-7.373994,6.712517,9.315861,-8.718166,-5.404868,-6.216402,3.455206,2.748919,5.425093,-4.623524,0.781219,-9.904420,-0.637593,2.244302,-6.739561,-9.775519,1.371465,7.988995,8.141443,-3.034933,6.671717,-9.350227,-2.137222,8.522209,-9.332546,-6.228302,-3.980250,8.715910,-6.581692,-4.596072,6.083886,3.265405,-5.234737,8.726241,-1.069186,1.973309,2.016820,-4.724189,-3.782002,1.867580,-5.222063,-7.906840,-5.672298,7.992572,-0.319511,5.304386,-6.074508,-2.076068,1.100812,-4.730577,4.743725,8.716345,0.193614,3.741130,-2.877071,7.235981,-4.141608,2.602298,9.739212,5.618238,-7.697926,3.912788,-8.188266,-4.597898,-1.826353,5.498914,-2.725174,-5.690200,8.694746,9.106241,-2.965011,-6.043455,-8.607230,-4.864188,-0.765028,0.047069,-0.378580,7.132491,8.324546,4.940605,6.025674,9.048974,6.357241,2.565764,9.507264,-3.684835,4.557568,-0.123938,8.690082,5.202972,2.402005,-9.558920,-4.551931,-6.380683,2.909897,9.055499,-6.981113,7.068834,-2.933311,-3.166598,5.992635,3.000880,2.777892,5.064335,-7.546417,-0.390985,5.388927,-7.427879,0.760501,5.619717,-0.625770,8.643139,-5.941212,-2.962488,4.428047,-0.068057,-3.022454,-2.986585,-4.582499,-9.299060,-3.987916,-5.612195,7.169719,8.400667,2.284111,-3.249871,5.248377,-5.850477,-4.813064,-3.439118,-1.288692,-6.589352,0.627649,-4.514996,-1.853628,-6.954785,-9.179518,6.979173,2.757356,-0.025712,3.866111,-2.996328,-1.897061,-7.810473,-8.017371,-1.688829,-6.692747,3.474999,6.608761,8.537890,-5.770433,3.115462,-4.107204,-3.931636,9.101016,-9.900076,0.715973,-1.285254,6.616265,-4.643000,1.074661,-6.633435,-7.535147,0.969528,-8.497365,5.784413,8.981254,1.911126,5.270129,8.652885,-0.654923,-4.786379,1.467302,7.129165,8.385204,-9.684394,-6.736716,-6.953330,-0.550532,1.176713,-1.997735,0.397876,6.614212,0.968925,-0.883182,8.457014,-9.854004,8.470233,-0.524750,8.340564,-2.402092,6.842212,-5.188924,8.863909,9.218619,9.966019,-9.588613,9.858617,2.251263,-3.750061,-3.042708,-0.707709,5.743584,-5.178775,-6.558481,-0.065887,8.579710,-2.600407,0.222234,-8.883345,-1.635183,0.427369,-2.790179,-0.753603,1.395140,5.000285,-5.738320,6.544646,7.055254,-4.684923,2.207037,0.436948,-3.948503,-5.478625,5.728782,-7.185251,8.673530,-3.821063,8.865588,6.263123,-5.060312,-2.806509,5.227807,-9.209135,8.797869,-5.677475,7.463575,2.896077,4.611581,-7.929550,-9.505098,-3.836875,-0.002148,2.260996,6.145932,-5.343380,5.073257,4.129285,-0.517012,-5.798689,-6.415574,-4.108185,-5.626841,7.053307,-4.361239,-4.226875,-8.709534,-4.146518,-5.439089,-0.503724,-7.236966,7.962121,4.793838,-6.738254,-6.316438,1.195042,-4.278702,1.277147,7.052736,-0.791995,-6.322633,-0.779601,-4.100616,0.552139,-7.975806,-2.716362,-7.981844,0.497931,-2.684388,-3.777012,-6.035683,8.571523,3.618666,7.464779,7.552709,-5.473843,-8.399432,5.845083,1.302575,3.202669,-2.028350,0.554160,5.170209,8.071280,-5.678930,7.758309,6.620251,9.138859,2.949951,-9.822808,0.231855,-2.973962,1.273137,-9.162576,-4.550482,0.696910,8.399855,6.374440,8.623935,3.849752,-3.582561,-6.032534,4.044751,2.778796,-9.160802,-4.654707,-8.523043,6.916045,-6.785458,9.741892,-4.418375,4.470347,8.678922,-2.303802,1.065202,-2.207240,-2.013564,-7.379173,7.863688,-6.786704,6.087160,9.780857,5.015182,9.556916,-8.299350,-1.556584,2.799045,-7.198590,6.884794,7.479800,-7.886685,-5.775661,-2.666593,8.547363,-9.096962,4.736766,-4.404076,-4.879783,-9.933671,8.300712,-2.638280,6.146839,6.374976,-6.274236,-3.378708,-1.167907,3.580372,-6.750316,8.388738,7.316109,3.417763,7.213881,3.869160,-6.857094,6.441518,-1.347812,5.342704,-1.118538,-4.280987,2.400923,-4.223337,8.906858,3.110055,-3.148772,1.948489,-5.774565,-6.989792,-7.146250,5.203333,4.799645,-2.345623,-6.325081,8.838631,0.694827,8.484642,8.015043,-9.808542,-2.520989,-6.979043,-7.966714,-0.907301,-6.833257,-1.527216,9.048729,6.614146,-7.276910,-2.988260,-0.624065,3.482012,1.747790,-7.875764,7.280697,-2.778774,-9.898740,-8.242325,-1.686327,-4.811392,9.526938,-3.109146,-1.085558,-1.736828,2.434143,-6.218153,-6.385775,4.854046,-5.279629,-9.913945,-7.357761,1.537857,8.460097,0.101601,4.195692,4.962081,-9.750530,6.652581,3.563796,-1.132548,-1.743729,-1.776877,-5.979055,8.469285,-9.050447,-0.188568,-5.597424,2.292489,5.120162,3.415003,-1.140724,-9.710731,-2.599654,-5.821021,1.117619,8.080210,0.796448,-1.478939,2.186856,-0.530471,-6.508601,4.615998,2.697133,-1.452851,7.267441,2.086822,-7.687618,4.750622,9.569064,0.758235,-0.033819,-2.519644,-2.401326,8.416690,-3.207413,9.991863,2.993199,9.590419,-4.039914,0.214832,-3.082884,8.848076,-9.447461,1.983077,-2.866249,-8.102648,7.598536,-5.851109,-0.023226,-4.422214,-4.729157,0.877027,-3.750876,-4.453058,-5.271642,-5.655268,-8.093076,-7.850860,-1.340053,-6.215300,-3.737412,7.987766,9.096892,7.970570,-1.055309,2.633782,-3.831317,-0.139589,3.720460,8.654660,-9.686647,-6.454416,1.139174,-9.789599,8.989838,3.469737,0.691267,7.158177,-2.518852,-1.043672,-8.148336,1.634777,-4.824950,2.744134,-6.862316,-5.034496,8.724013,5.844508,6.784769,-7.998222,-5.058690,-8.420938,8.141724,9.447051,-8.891146,-4.684666,9.532765,6.719835,6.793348,0.946347,9.623777,-8.198051,3.676509,-3.633620,5.402455,9.710411,-6.642767,-6.724212,4.549791,9.396564,9.198325,3.033431,-1.472348,9.106266,5.841383,1.989295,-2.728577,6.841384,-5.192194,-7.591316,8.905969,7.402822,0.708551,3.554770,7.668403,-4.188469,-1.230309,2.112483,8.319276,-5.456371,-4.056010,2.106123,4.973947,-6.371179,-3.678878,-7.042506,-9.961435,7.748243,0.728363,-6.228084,-5.723943,5.796907,-5.453615,3.019370,5.774331,2.702260,1.824853,-2.535585,2.432992,-8.309123,7.117323,8.657221,3.064369,9.546639,9.779291,5.791641,5.513534,-0.361506,-9.184097,7.937789,5.065342,3.458644,3.810712,-9.394407,-5.831469,2.236312,8.843183,8.479495,8.625797,4.747144,-9.198001,-8.155642,0.366107,-1.269035,-1.774429,-5.217340,-5.430152,4.869461,2.088044,-7.854215,-6.968999,-9.710336,5.471165,-0.331373,-0.386527,1.970829,3.756666,-0.837529,8.729387,-8.733988,-8.849238,8.402475,-6.488612,5.192206,-5.948478,3.481478,5.761324,-1.959398,5.907087,7.920390,-6.088957,-4.279067,2.375945,7.168596,5.662092,-3.285575,-5.423101,-2.291259,-4.306131,-8.038836,-6.679412,-1.656831,4.643114,-8.005683,8.939004,5.277469,-6.641000,7.389108,-4.359020,-7.779494,-1.990091,-6.635691,8.850938,9.879321,-0.810178,-0.033959,2.302685,-9.117477,-4.494491,6.785735,-3.700432,1.702314,9.329413,-8.351893,5.662491,8.146328,-8.653359,-6.510439,1.240498,1.296145,-9.443218,-1.476245,-8.714013,-0.971299,6.404559,2.204037,-3.342889,-4.090588,1.666418,-7.881061,-6.601160,1.064729,4.576190,-3.757927,2.843022,-0.760399,0.390452,-5.937848,4.593364,-2.162466,-4.391611,-1.549280,1.195690,-2.313990,-0.877841,9.900151,6.566386,9.060483,9.438066,3.238582,7.109582,-5.192067,-4.430198,3.770835,6.246284,-0.345555,5.234867,6.737123,9.037367,3.371092,-3.978782,-8.403974,1.609776,-8.860135,1.472481,-6.929526,1.055904,-8.187263,1.492304,5.166308,5.090006,-6.889544,-6.799761,4.184623,-3.190380,8.962165,-0.837768,-8.370024,5.166315,-9.564979,-5.777068,-5.557807,5.533094,1.645494,-3.817808,7.368325,-2.096171,-6.399888,9.495972,-2.255342,-8.662840,-5.774360,-2.917383,2.573811,7.232443,-6.179886,-3.018188,2.185047,2.862625,-7.741708,7.537752,-3.326824,4.889688,0.690849,-8.947758,-4.079164,9.304251,4.054551,6.953834,-8.244638,-7.526366,-6.838912,4.936557,-5.276848,-2.328672,-6.597565,8.273658,2.935806,6.228677,6.347106,2.386023,-3.547945,9.601459,-9.345471,-6.760056,5.844489,6.234118,1.760261,-5.428630,-2.960790,-6.614313,-7.845653,6.348454,9.008378,-6.103137,-4.305155,-1.634644,1.250926,5.806872,9.553888,-4.616699,-5.210959,-7.446094,-5.497006,-4.748852,-8.459946,6.023161,-8.345204,-4.828712,3.494613,-7.169848,-5.726423,-1.465217,-4.770832,7.666723,-2.923841,8.237262,-1.990027,-3.295506,-8.376481,4.052537,-1.272316,3.191931,2.517829,-5.779541,8.704766,-9.285875,4.536217,8.308385,-0.207768,1.416908,-2.868365,-4.876950,2.245900,5.753044,3.059809,-5.921794,0.712526,-7.707049,7.025797,3.847547,1.442709,9.831400,-6.442074,9.057531,5.590689,3.015687,4.009399,-5.730717,8.897104,-8.401552,-1.523945,-8.552200,-1.507921,-9.765741,6.120917,-2.370301,-6.879256,5.404571,-1.185915,0.787123,-6.408829,3.425160,-0.223694,-4.759684,1.460650,-1.418463,0.488303,7.262313,5.981195,9.826328,9.999810,-7.455128,9.300421,2.388387,-7.962175,-3.836360,1.700528,-7.605610,0.194454,7.720650,5.756214,3.420222,-3.814338,-8.278854,-2.231417,-3.956095,-2.055297,5.532040,9.174046,7.090649,-4.920191,-2.365398,-3.688703,4.972023,9.727270,-4.232103,3.187782,2.269381,1.806332,4.832976,9.020786,2.202052,-2.694567,-8.102338,1.423730,8.395087,6.376908,-1.830713,-0.148825,2.633724,-7.823892,-7.601700,0.169353,-0.779260,-5.586973,9.640954,4.784084,0.515364,0.460306,1.594448,3.088970,-3.352135,-0.614988,-7.919097,3.809998,-8.686441,-7.164046,7.770742,-9.347047,-0.608340,5.721345,8.227192,-0.395001,4.338887,-3.117523,4.447420,4.197283,-5.438949,-9.674414,9.234949,-3.987352,6.543522,-5.119971,4.963604,-3.220395,5.993774,4.406162,1.539781,1.276630,1.942756,7.586019,-0.808325,0.098920,2.963421,8.687205,1.900634,-1.918729,-1.915846,4.255734,-6.451262,9.548135,4.371754,-1.249800,7.686145,6.150639,0.945917,1.702819,-6.064531,-4.795984,-1.575236,-5.697090,1.597252,-0.981356,7.287702,6.509688,-5.685011,-8.532983,0.339022,-7.537712,-5.957690,-6.469111,-6.550951,3.941814,-4.725738,-5.293399,-4.443237,-5.160030,-0.787747,2.223649,-8.696242,1.382656,-4.568503,-0.028878,-1.618637,-3.859197,6.776499,-6.008979,-2.386311,-5.060632,7.255634,6.832788,8.651845,9.131553,-0.126439,2.125592,-2.463806,8.480144,-9.762608,-7.914946,-3.488633,-5.961506,4.473941,-7.252726,-4.664513,-6.218126,7.184671,7.021194,3.138018,-2.560220,-7.055866,-5.420346,-1.794818,8.205423,-1.909318,1.328399,-9.369592,-9.526736,-5.688439,9.702991,2.347155,-6.540495,3.163383,8.389404,5.581585,-7.222810,3.248674,-2.383681,1.663827,8.966317,7.262653,-9.440584,-3.144975,-3.402619,2.868758,2.183347,5.915782,-6.164636,-7.666657,-5.185573,1.379483,5.171116,0.146087,0.446707,6.089942,-6.947369,1.825077,-3.280667,8.767993,9.515688,-7.272196,1.659729,-5.145560,-4.194239,7.119174,-9.283038,4.930607,-5.944909,2.382104,1.489248,-9.827980,-8.699312,1.930491,8.822365,9.033064,0.408182,2.523306,9.950932,-9.445724,-0.958249,-7.337254,4.857781,-8.097877,7.835994,7.115743,-6.422108,-8.422209,8.512591,3.642864,9.509492,3.618814,-8.742907,8.849974,0.556594,7.988625,-4.653937,-3.664652,-1.814117,6.737140,2.321104,-4.442178,-7.071704,-7.479887,-4.044171,-4.045578,-7.931545,2.547312,-2.047989,-6.075791,-5.978603,-7.020752,-4.420704,-5.679620,5.796611,-5.123691,-7.639945,3.986200,3.752663,3.444686,5.569795,5.157566,8.024425,9.607630,-6.987468,3.586213,9.975597,3.371326,7.593878,-1.546907,3.251109,1.903742,-9.939060,-2.321774,-6.909582,5.028050,8.246887,2.573378,1.115673,-4.328997,-8.908632,8.701177,1.553299,3.971601,-5.568027,-7.285226,-3.073419,-6.180680,-4.775246,9.676008,-2.300504,-2.440246,0.900354,-3.501274,-9.055311,-9.519139,8.106586,4.638252,-0.946272,1.146792,-5.887120,-1.954732,8.932648,4.139613,5.509351,-4.493674,-1.061867,2.958072,-5.764514,-2.129379,9.264959,7.821661,-7.241700,0.915774,-2.839774,-7.715697,-4.978719,4.521217,6.393703,3.118839,9.187227,-6.911492,8.133688,-1.846827,7.444002,-5.817820,4.452841,5.238203,-4.194974,3.775600,3.232184,-6.278986,-7.245707,0.685228,-2.212608,1.000234,-0.943408,4.931162,5.022821,9.127962,8.475560,9.071012,-6.087524,-4.541445,-6.365794,3.199440,3.734582,8.165888,1.482133,3.328616,-7.029348,-3.860863,-8.278241,-7.336462,7.096878,9.083835,3.850898,1.724956,8.518882,1.189387,8.736554,-1.332926,-0.614477,0.702845,-4.385784,0.689267,5.397174,-0.970666,-0.903038,9.287909,-4.646731,-2.172902,-8.815632,6.856462,4.633200,2.180170,9.165996,-7.322090,0.571066,-8.118598,-8.230354,-0.559744,0.046494,-4.357532,2.157695,9.764312,-4.781809,-7.203669,1.544414,-5.258220,-1.273993,-7.118664,6.772315,6.687932,-8.350845,3.775815,1.912033,-0.743608,-9.392809,-5.804392,-3.466715,0.768651,5.690842,5.720106,-8.593257,-8.561870,3.651222,-2.323829,2.313631,-9.720321,4.808184,-3.380891,6.403651,6.867163,1.175042,-0.162341,4.033160,-4.965668,1.544564,-7.679546,-3.076675,-3.573695,4.588498,-9.642902,-1.521850,-7.947351,-7.926902,-4.590440,1.377470,4.695431,-0.076565,-3.858972,-5.046596,-5.906631,4.697898,2.876735,5.296506,9.784750,-8.340756,4.752185,-9.870945,4.952300,8.366001,5.759494,6.824088,6.491580,-5.287695,-8.158064,5.712692,-8.826368,3.730443,-3.940212,8.291390,9.417423,3.728507,-0.534087,-5.727990,1.751287,7.196255,-7.160204,1.729749,-6.170149,3.570428,-8.207353,-5.027434,7.156929,-2.474462,-3.006736,-8.829430,-8.536672,2.019262,8.430337,-1.751071,6.244632,7.698397,-0.860457,0.260741,-3.043606,0.879186,2.248004,9.478576,9.667173,-1.155188,4.692712,5.706605,1.758729,-8.558864,-8.707895,5.889629,2.505506,1.680488,9.023029,-8.736205,-9.336852,1.409479,3.312742,-5.620425,-4.151362,5.589031,2.712749,9.602758,3.991205,-0.301160,-9.370241,5.329732,-8.449421,-5.935095,1.052195,-3.630302,-9.673183,-1.588315,-4.988956,4.403400,8.270291,7.403383,6.185494,1.170017,-1.137068,5.852135,5.727723,-5.446240,7.352235,-7.647873,-2.385725,-4.424928,-7.726942,-4.891653,-7.536111,4.407400,-3.281542,-6.936235,-2.032366,-5.799582,8.657880,1.428523,-0.147677,4.963167,-5.608210,0.995690,-5.397974,-2.060417,-5.497365,4.119629,-6.112332,-7.589156,8.492714,-3.113071,2.197650,8.543957,-6.944368,1.798462,-0.988306,4.644583,-6.459924,4.887160,-9.581277,8.373595,6.938080,0.782061,-5.930800,-9.340596,1.301834,7.247308,-4.043485,5.869056,9.434845,3.339052,5.030649,8.758677,1.046323,-7.049232,-0.775961,-2.405451,4.210442,3.889844,-0.225680,6.811063,-2.150288,-9.547438,1.603071,-5.433715,-4.448883,8.385139,-4.412048,-9.614794,8.641068,9.764781,-0.361374,0.972411,-8.534149,3.734720,7.202221,-7.677185,4.886953,-4.671441,-6.542598,-7.088126,-0.977811,1.705320,-7.262564,4.725493,-8.847912,2.490964,-1.823377,-2.692606,5.410191,5.193255,1.725011,-9.698202,-9.506163,7.837989,4.567259,-7.940459,8.019499,-0.333471,5.323130,-1.828075,9.177364,-7.306399,-2.243778,-6.872261,6.252488,-4.675196,3.982459,1.235902,3.711679,-5.983369,-1.162143,6.769468,-9.744494,7.175702,0.408115,-6.851434,0.840052,-9.885052,6.627469,6.967536,7.206079,0.979349,2.547928,-7.591528,-9.468896,8.108281,5.669327,-7.946032,9.036338,4.805442,0.514713,9.986465,8.583270,1.854504,-2.515695,1.548058,-4.483414,-5.057459,6.043082,0.572045,8.192483,9.127547,5.931099,7.400427,7.124382,4.641029,-6.665487,-6.797621,-7.422205,-2.487634,-5.217404,-3.206567,1.115342,-4.662641,-2.873343,-9.404051,1.553786,-2.515557,0.673418,0.800127,4.856319,-7.702776,0.218065,1.292168,-5.755039,-9.949881,6.133946,9.893900,3.124451,1.422837,8.905028,1.427246,9.153070,7.640245,1.641560,-4.619188,3.269560,-0.168260,0.599597,6.169548,-1.825788,-5.740332,-8.330030,-0.344904,-7.951263,9.048771,4.585711,-9.518464,8.891216,1.496999,-8.254732,9.612060,-7.634395,-8.734391,3.066773,4.236854,9.223685,9.061759,-6.975976,1.592857,3.971507,-6.555228,7.738958,-5.079579,0.656884,-7.237811,9.044206,0.034746,6.714772,1.841362,3.029893,-4.441303,-2.140032,2.264652,4.924472,3.885607,5.356934,8.218595,-0.399602,9.888584,-2.921271,2.523506,1.807972,0.515484,-1.497356,3.349186,-7.503300,-8.669816,3.165460,9.075576,-8.584735,-6.586367,-5.609427,4.240094,4.376057,-1.134029,-5.031623,0.004476,7.303184,-4.060304,9.228184,5.237555,-5.756814,-2.964421,8.682385,-4.921467,0.443939,-1.601208,0.490182,-1.761221,-0.455458,-7.147589,2.467842,9.491437,-0.065195,-7.762443,2.255021,7.917935,-7.825210,-0.521649,3.015108,2.126479,3.663943,7.001339,8.390144,4.485235,-3.078131,-5.374743,5.451305,-5.157414,-5.218798,9.013810,2.926252,4.520851,-3.355750,1.057169,-4.537763,-2.124211,-0.845540,-3.963288,-7.865956,-8.793729,4.908674,-7.059777,-1.567546,5.762163,3.097156,-0.072061,8.910052,-3.547816,0.510143,-3.907622,6.269461,4.085623,-7.456160,9.677664,4.105843,8.471302,6.118374,7.842343,1.557215,-4.521615,4.627429,3.749027,-3.138237,1.507168,6.879558,9.814455,-1.812430,3.799800,5.959097,9.130983,-2.421254,2.989534,-1.851556,8.623242,7.237319,0.469959,-2.768424,-4.603684,-8.025515,4.536028,1.010501,-8.478915,3.511074,-5.722081,9.674638,-0.329853,-6.606685,8.488257,-3.968357,-8.795110,-8.051781,4.728230,-3.580183,5.484947,6.161305,6.928904,1.156814,-4.778648,9.579256,2.564277,1.921475,-0.202353,-5.757173,-6.416226,-3.585015,-9.043494,-9.473878,6.298295,3.049269,-6.768122,8.367720,8.339110,1.244493,-5.864212,-8.416759,9.266329,2.160522,-6.924415,6.557031,-4.632463,4.027249,-5.963612,-0.054065,8.965073,-0.142580,-2.774173,0.391151,5.943314,-1.617033,4.370947,8.070989,-9.086938,-5.430823,-3.393670,3.404379,4.393890,-9.091458,8.326144,3.798807,-2.497654,-8.058108,-5.964720,9.951547,-3.457041,2.875101,-8.092108,8.872122,3.703827,3.130660,3.998521,-6.087179,-5.977416,6.138885,-9.265542,-9.074433,-1.695968,5.076973,-2.942602,-0.607947,-1.626096,-9.145993,5.878566,7.916173,2.249180,-9.292519,-4.495386,9.001065,1.148057,-2.068724,1.781369,9.744180,5.327824,-5.990196,3.476922,-7.008074,-5.288520,-3.985219,-1.963479,-3.016815,9.641306,6.516166,-5.781557,-2.644199,4.715917,4.580295,4.805737,-1.997796,7.246720,-5.783784,-1.530023,3.914072,7.686216,-0.821834,8.982934,7.993597,9.746214,-4.526028,8.046768,-0.913844,5.087899,4.508913,-9.383126,7.657304,5.663271,-3.564368,8.258005,-7.829716,4.974873,-3.435952,-9.263960,4.677143,-9.207403,8.937440,-4.576499,-0.467573,9.503651,-5.484075,-6.763354,1.272617,4.620398,1.470613,8.642798,9.641268,-7.956598,-6.900514,1.021586,-4.480265,7.223129,5.455037], dtype = "float32")#candidate|8289|(2496,)|const|float32
const_8290 = relay.const([-1.464278,-3.387379,-2.088411,-1.493335,0.882962,-3.050609,1.119668,-3.113718,-9.085612,-5.552825,-4.881717,3.334017,-3.160220,-1.047158,9.081372,-9.882943,4.175631,-0.848695,1.439731,-0.104530,-8.114038,8.315047,-4.532489,4.908388,-1.967273,2.423393,-5.302310,5.058959,8.344563,3.226382,-2.676216,-5.654833,-7.240282,2.667037,0.049623,1.479125,5.317886,-0.424723,-7.688150,-5.377458,9.984153,9.882753,-2.048798,5.039876,-3.585808,-4.715201,-7.968819,3.874672,9.780620,-8.020819,-4.391544,-7.903542,1.875491,7.940780,-2.932428,-2.120978,3.791562,-4.119125,-8.229843,-1.581574,-8.351956,4.092876,1.965392,3.870955,-3.560919,-2.534403,5.575321,-9.887197,6.834886,-3.874520,6.143123,1.996458,1.942360,-0.567091,8.103661,-5.057690,-7.056977,8.002701,-6.751786,-0.360971,-3.557297,9.674579,-8.707273,-9.799307,-3.947026,1.048514,-6.822055,-9.959312,-8.246489,4.165616,0.079856,1.606425,-9.497123,-9.917080,-3.528581,6.810160,3.224386,-7.044820,-4.522068,9.712997,-5.684988,-7.949063,9.961685,-2.864123,7.959653,-2.815872,7.174494,-9.917494,-4.127394,1.229396,-8.127972,2.531034,7.096367,6.602518,6.194527,-3.950765,2.061530,-5.076816,-2.081078,9.764946,-3.195630,-5.446400,4.396369,1.253827,1.322407,-0.047126,5.450052,4.843752,-7.974785,-5.258396,8.120029,7.296914,2.707374,-4.462170,-6.794507,-2.035880,0.952205,-3.204641,5.686121,-7.276168,-7.226637,-5.950644,-5.663708,7.013695,-6.975353,-8.248318,-0.816233,1.166851,7.905998,4.059018,0.619945,6.024013,5.578778,3.501594,8.128600,7.178897,5.878200,-3.852243,-8.216711,-3.985763,2.332721,-9.348618,-3.836026,-1.272812,1.669712,7.593149,8.833928,7.819212,-5.532787,5.149520,-0.992747,-3.136754,6.855235,-6.142736,-1.244818,-7.803779,5.001512,9.195486,-8.623864,-4.668171,-3.368825,-8.883189,-1.614703,-2.426174,4.287643,-3.228580,-7.449008,1.727098,5.330883,6.014651,-1.230600,-5.053676,8.174232,4.429626,8.457418,4.772541,6.946608,4.131172,-2.479157,-8.702304,4.402498,9.916505,2.938815,8.618299,-5.988559,-9.531013,0.745537,1.953974,2.124034,-9.643799,-5.212472,-4.247611,-1.934337,6.736298,9.152185,-7.897241,-5.131371,-5.521909,-6.341495,1.031365,8.294860,8.427314,-2.724652,3.336287,6.303661,-8.290886,3.315440,3.275135,-2.065082,-4.485313,-2.976305,-4.901870,3.575333,0.552737,4.414266,-8.701418,-2.158364,2.799558,-0.446084,-3.160263,-9.889330,9.588426,5.161705,3.846800,6.466164,0.035139,-8.893698,6.669632,7.660114,7.815719,1.305608,6.293490,2.797421,-8.233624,2.674671,5.417765,1.088482,1.167413,1.530199,-7.598821,8.598225,3.563800,6.299136,1.692332,9.150163,1.331850,-9.973570,-8.116767,5.404682,-4.669361,-1.610580,1.364653,-5.548639,-7.855819,7.812620,2.713412,1.378379,6.538396,2.322671,3.177563,6.812770,1.438706,2.734371,-5.160758,-2.514177,4.652249,-3.583074,-1.968378,4.965990,9.720542,4.136994,1.705627,1.316645,0.880373,1.130510,2.616848,-6.151127,8.581501,-9.791318,-7.110505,-8.631788,1.338344,-0.233146,3.270577,4.042373,0.995080,6.211256,7.220354,2.718778,9.645195,3.019052,4.487960,5.976798,7.125267,-3.970170,-1.804799,5.454407,-2.039996,6.148869,3.540667,-6.933668,3.753594,-7.697091,-0.029450,-7.995038,-9.452224,-6.985031,9.008191,-3.690038,3.877280,-7.541196,4.171539,-1.670906,-0.135840,-4.008439,-8.340906,-5.182450,-5.126262,-1.226772,-1.435738,7.793742,-4.523713,-0.706210,8.266597,-9.855025,-5.923394,8.186756,-3.082432,0.874463,6.068035,-1.321316,-9.949453,-4.271642,7.837864,6.441415,1.068432,7.939948,-4.823608,8.702478,-1.570729,-8.784694,-1.528186,1.009197,1.095302,5.937703,-8.587646,-5.324357,-8.832635,3.543005,6.811725,6.648206,5.615639,-1.025916,5.094509,-3.560110], dtype = "float64")#candidate|8290|(375,)|const|float64
call_8288 = relay.TupleGetItem(func_453_call(relay.reshape(const_8289.astype('float32'), [13, 12, 16]), relay.reshape(const_8290.astype('float64'), [375,]), ), 2)
call_8291 = relay.TupleGetItem(func_456_call(relay.reshape(const_8289.astype('float32'), [13, 12, 16]), relay.reshape(const_8290.astype('float64'), [375,]), ), 2)
func_7093_call = mod.get_global_var('func_7093')
func_7095_call = mutated_mod.get_global_var('func_7095')
const_8294 = relay.const([9.272601,5.612280,-5.913371,-0.149900,3.201586,-7.493940,8.428173,2.091426,-2.692858,-0.125698,6.741947,9.151718,2.979220,2.154945,4.622702,-7.400135,0.563331,-0.002420,3.322398,7.324156,3.344393,-1.823614,-5.014723,-6.550014,2.335749,8.154088,6.374115,-2.256022,8.929689,-3.010315,-9.886007,2.124862,-6.560309,9.224349,-6.460394,0.931502,-8.898152,3.311567,7.676016,2.379606,-5.694591,9.996659,6.439231,-8.739385,1.952053,-5.629493,2.483988,-6.810393,9.628303,-4.410891,-1.150117,4.972826,3.599644,-3.514299,-6.405856,8.971465,-6.996022,-7.343915,8.030434,7.135857,1.666490,-0.575409,7.446038,2.031645,-2.253700,9.654106,2.529525,-2.650107,0.385348,1.600578,-1.199083,-0.991210,7.614061,3.701928,8.146344,-1.295505,-6.523863,-4.811960,9.706047,-9.338137,9.974480,-5.125708,-7.836709,7.481657,4.196240,2.853159,5.040641,0.748961,-9.155873,8.641732,1.173594,6.484231,-2.855081,4.133884,2.338379,-6.121330,2.155058,2.552676,5.232546,8.974331,9.590554,-9.987225,-2.930951,0.167473,-3.565415,4.865780,-5.204904,3.519690,-6.742609,-2.307185,-8.956753,-5.542804,-6.028879,8.281388,-2.696938,-4.033648,2.074855,-5.452223,-4.196984,5.841735,3.760368,-5.978582,1.945252,-4.957609,7.179638,2.418000,5.257849,5.276567,8.745379,8.095610,-8.909738,2.836296,4.968182,7.040658,6.585924,-7.361308,3.913218,0.419861,2.534477,-4.273876,-1.820012,-3.091598,4.997383,2.564397,3.365298,-0.052512,9.924148,2.221691,-0.272580,-2.985886,4.597725,-9.427615,-2.366858,4.758498,2.826991,-8.295813,4.412003,-6.313302,-4.027664,1.636605,-1.067899,3.944566,8.665237,-3.433949,-9.587710,-6.021107,-9.003204,-1.166266,-1.734264,-3.472524,-2.263318,7.600004,9.795059,-0.543068,-2.326947,1.494089,-5.213430,-2.743642,-9.281068,3.093101,3.380756,-2.176358,-0.889961,-8.609117,3.113367,-1.197078,0.002504,9.266555,1.139634,1.356216,-7.834193,0.850240,5.110977,-9.120163,-6.748836,-3.946191,1.941319,0.750845,-4.939290,-1.131372,-2.036604,7.578880,1.561806,5.399083,-6.411842,-3.262501,5.391570,3.400059,0.671045,-6.382450,1.123672,9.165283,-0.009876,-2.419635,7.674536,-7.864637,-5.685352,7.223186,-5.531302,-6.916106,5.417574,1.357296,-1.284747,-4.118906,6.684041,-7.418372,2.949521,0.297451,-6.918017,-4.929699,0.583817,-0.197770,-2.105391,8.557194,-6.401694,-2.754902,-5.644642,-7.283782,-4.989443,-6.671269,-8.090164,0.682850,-8.641117,3.525046,-6.201693,-6.197604,-1.859465,7.259933,2.933983,0.970863,8.178475,1.706348,-0.338189,-5.677544,-9.118846,-6.440045,0.547849,3.130170,-8.226171,6.775306,-3.052543,-3.966420,-3.271131,-3.574830,-3.240203,7.887188,1.321001,3.424947,-7.877237,-3.807352,-8.965042,0.284943,-2.049670,-4.995148,4.685227,-6.436280,0.388313,-5.593843,-0.912195,2.699776,8.898919,-0.068668,-2.397671,-0.437740,-9.194598,9.142854,7.725713,-1.301172,2.478264,-0.196029,-3.123588,7.133650,-2.000121,0.146613,-4.325269,0.697428,6.366552,-5.429160,-1.095745,4.085434,9.369040,5.499066,3.048336,3.457997,-9.807040,-0.167307,-3.187989,5.179380,5.370048,3.475377,6.723087,6.555461,9.566997,-3.816413,-6.801394,-0.417343,8.624430,-8.709205,5.246159,2.830024,-4.178543,3.775254,3.228641,7.548024,4.230939,-5.568341,7.049385,-4.643807,0.438309,-0.566341,-1.872048,-6.754994,1.216542,-7.702671,-3.401998,-1.765099,0.073101,1.419824,-1.822820,-7.355272,1.068704,0.253004,-4.772594,2.922676,-4.132226,-3.508198,-2.777809,-7.258814,4.205800,9.399505,5.258095,-4.153983,8.593816,2.775819,-5.049176,3.296817,1.488600,5.086342,-0.123150,1.466216,-5.773311,3.759506,-0.724669,-4.368622,3.993959,8.621038,-6.113759,0.566662,6.741790,3.794457,-3.492638,-4.181223,3.502435,-8.436570,-4.948925,7.418734,4.795643,-6.294955,-5.843468,0.511836,-7.257472,-6.463022,8.295257,-0.554191,8.144773,-0.588075,-6.755437,2.331758,-4.446475,-9.054509,7.288565,-8.848359,-9.442904,1.640153,8.853304,-9.469858,0.725766,-6.812210,0.140637,-6.424662,9.410549,-9.969347,4.181815,3.696669,4.999236,-5.795090,6.007304,5.029416,6.415521,0.470161,-8.195978,-5.529246,-9.872145,-6.749334,0.658876,-0.417017,8.594963,1.395905,-0.297236,7.391617,-3.268208,7.757456,-1.225362,8.832642,2.428154,-2.858487,9.888252,8.643714,-0.932073,1.149242,-6.479866,-5.203371,-7.625117,-6.380793,-8.488008,3.083461,-2.002112,2.448317,9.643474,-2.083174,2.489200,-3.206186,-1.706262,-5.814929,6.510565,-4.444186,-5.480545,-9.282232,-0.084192,2.718185,-0.855379,8.138095,1.287917,5.525940,-2.355165,1.229280,-6.593420,-5.049892,-6.826334,6.027847,-8.322481,8.433432,-0.967198,5.375075,0.029909,-5.831193,0.932875,-9.611979,-5.322429,-1.048913,6.481587,-9.215037,2.866629,-3.881034,2.580311,-0.222785,-8.308770,-5.210335,5.544398,6.323860,8.843646,-7.620665,-9.102329,1.395830,-5.269788,3.784300,-5.339374,0.447699,-2.323320,7.186303,-6.000215,2.859767,8.368201,8.874322,9.854946,5.587213,-9.518813,-9.802857,-1.834339,2.477444,4.892220,5.678135,-1.496817,0.114734,-3.318604,3.234310,-6.846419,4.956012,-1.155247,-4.616768,-0.093818,-0.968908,2.568602,5.223220,1.774081,-6.276011,4.750065,-1.710352,5.919288,-5.489499,-1.727205,-4.859877,-2.781109,-5.840468,-7.316750,-2.179976,0.343228,-1.753987,3.151113,-5.035571,-6.580553,5.477366,-2.960831,-3.621007,-9.149120,-7.921118,-9.660560,1.861136,-9.928507,1.605711,3.082809,1.318571,9.114315,0.716985,6.536712,9.239989,6.973958,2.753544,-0.181489,5.697861,-4.018412,7.506934,-5.040578,2.177258,-4.918151,6.947626,4.053289,-2.906794,-9.435263,1.973691,-0.651375,-5.058539,-5.677066,1.213767,5.352229,6.206478,-2.756769,-7.790700,3.502800,-5.900340,-1.079382,5.221942,-3.638836,-2.054674,-6.178863,6.838388,-4.329839,-9.913220,9.310989,3.739633,-8.340639,6.235274,7.002520,7.531482,2.319520,5.921632,1.963633,9.621343,-5.272720,6.854186,-6.114859,3.714045,-9.073007,5.772867,-6.235596,-3.490891,6.036285,7.355106,9.861835,5.276815,-5.868741,-7.013893,-5.737954,-4.832142,-0.161570,6.970930,-5.158276,9.565603,-9.698230,-0.976523,-1.197794,5.567681,-2.668439,-7.386022,1.016957,5.096279,-6.567794,6.069471,6.399469,-9.516233,9.473975,-7.505710,-9.123586,-2.105829,-5.301543,2.161349,0.565526,-8.310595,-3.432293,1.375664,2.658294,6.069469,1.647906,-7.680676,-6.327877,-0.227675,-5.172883,7.303418,-8.567109,7.802555,6.855592,7.938813,1.385823,-8.071719,1.975239,1.886015,-4.842587,-8.234991,3.000229,9.598606,6.618385,-9.297528,-6.409252,2.490317,1.650218,-6.779424,8.498126,-8.042043,3.382989,-8.648992,-8.805113,9.924390,0.185889,-8.366742,-6.913300,-6.303948,4.698102,1.052341,5.107597,8.298992,5.439401,9.391356,2.293488,9.171464,-7.831855,2.112073,7.353977,-0.592455,4.348246,-9.896147,-3.300819,0.030600,8.097894,7.399025,3.324222,2.306676,-4.606851,-7.947384,-4.133139,1.357526,7.599344,-1.494560,2.166583,5.390033,1.535126,9.372342,0.035836,-2.854772,1.030950,9.554749,-6.440960,-1.419484,0.990249,-8.876589], dtype = "float32")#candidate|8294|(704,)|const|float32
call_8293 = relay.TupleGetItem(func_7093_call(relay.reshape(const_8294.astype('float32'), [704,])), 2)
call_8295 = relay.TupleGetItem(func_7095_call(relay.reshape(const_8294.astype('float32'), [704,])), 2)
output = relay.Tuple([call_8284,call_8288,const_8289,const_8290,call_8293,const_8294,])
output2 = relay.Tuple([call_8285,call_8291,const_8289,const_8290,call_8295,const_8294,])
func_8302 = relay.Function([], output)
mod['func_8302'] = func_8302
mod = relay.transform.InferType()(mod)
output = func_8302()
func_8303 = relay.Function([], output)
mutated_mod['func_8303'] = func_8303
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3801_call = mod.get_global_var('func_3801')
func_3802_call = mutated_mod.get_global_var('func_3802')
call_8333 = relay.TupleGetItem(func_3801_call(), 0)
call_8334 = relay.TupleGetItem(func_3802_call(), 0)
output = call_8333
output2 = call_8334
func_8353 = relay.Function([], output)
mod['func_8353'] = func_8353
mod = relay.transform.InferType()(mod)
mutated_mod['func_8353'] = func_8353
mutated_mod = relay.transform.InferType()(mutated_mod)
func_8353_call = mutated_mod.get_global_var('func_8353')
call_8354 = func_8353_call()
output = call_8354
func_8355 = relay.Function([], output)
mutated_mod['func_8355'] = func_8355
mutated_mod = relay.transform.InferType()(mutated_mod)
const_8400 = relay.const([[[-4.195935,5.662577,2.932595,1.583875,-0.019527],[3.384000,-9.940288,4.190206,-7.445381,-0.274385],[2.933771,8.881152,7.850443,9.451684,-5.324928],[-2.434605,-6.699529,1.350581,-9.501776,1.340272],[-4.328425,-5.130642,0.213333,8.463860,-2.922096],[5.823559,-6.614300,-8.520167,4.641106,-4.684185],[3.629809,5.622946,-5.969667,9.678822,5.994686]],[[-3.035617,2.529204,-9.935539,-4.582166,-7.158722],[5.340076,5.673195,-8.945526,-5.941320,7.884282],[-5.253525,2.404261,-7.815726,-2.910785,-3.164450],[3.732267,4.526918,5.208135,2.064918,3.616404],[-2.235668,2.862128,1.850120,-5.133633,-6.719205],[-7.574313,-9.118799,-0.856894,-6.464065,-2.715084],[-6.534267,8.868514,-2.009941,5.301980,-8.468926]],[[-6.958911,-6.461099,-7.133058,5.780676,9.873837],[-8.456279,-5.398817,8.580845,-2.896929,7.748054],[-3.679241,-7.922389,-7.960424,-4.881698,-2.789228],[-0.746251,-0.030594,0.226674,-0.330934,4.506390],[-5.080432,-1.142606,-9.360048,2.441493,1.258530],[4.107652,-3.089428,3.108502,-3.139987,-7.725554],[-0.387050,3.631383,9.376117,-6.249261,-0.023509]],[[7.758270,1.676583,2.912055,3.137647,-8.039016],[-1.514781,-8.831265,9.505974,9.911183,-9.526794],[8.742912,-7.659715,1.288469,9.330721,-4.154358],[5.399919,-5.224588,9.486957,-9.296807,-6.684667],[0.689882,-6.339795,1.763752,2.289624,5.395235],[-9.929755,-9.537820,-5.502902,2.900336,7.293488],[3.986258,1.522000,-4.095713,8.287908,-9.063689]],[[4.236499,-6.396767,3.427197,-6.726079,-4.334210],[-6.082835,-3.332280,-4.549637,-5.003487,-6.992755],[0.368744,-4.403643,2.003791,1.480511,7.469003],[-6.342973,1.057853,-4.956450,-9.958452,2.183862],[6.890384,4.881929,-7.964372,-0.383733,8.188528],[9.141512,-3.416686,-3.595444,-3.287464,-8.052832],[5.712593,-8.712481,-5.483457,9.417818,2.269932]],[[3.273790,1.916351,-5.862113,-1.636954,-6.983122],[0.640063,-0.021449,-1.809789,6.795697,-7.840257],[-8.873112,-7.866865,-0.463081,-2.164298,4.986488],[-1.970242,-2.549619,-5.158972,-8.104073,3.026627],[-3.244129,-9.979814,-6.853938,2.561024,3.114800],[5.628497,7.748212,-1.837091,-2.072540,-1.258560],[4.198679,5.421165,-1.495517,-2.092829,-1.383952]],[[3.904637,6.161035,-4.557513,-2.104746,4.239621],[1.226819,-6.827866,1.272919,2.117343,0.978868],[9.313782,-3.607953,-2.965206,-1.388132,2.643098],[-6.477134,-9.182871,-8.875170,8.259150,-2.737145],[-3.929638,8.781295,2.874321,-7.646970,7.301977],[-4.714379,-8.610381,9.851989,0.985529,8.063122],[-3.949325,5.759035,1.753190,4.261418,0.398092]],[[-1.031582,-8.423327,-4.569516,-9.901057,-5.792637],[-2.724902,-7.844135,9.053522,2.439352,-2.075561],[-8.570876,-4.677758,3.775522,7.906404,-5.130946],[-4.428883,1.865559,-3.294746,-5.447852,-3.519791],[-1.475355,5.039737,6.147655,-3.489290,3.994675],[5.661282,-6.435130,-6.190953,-1.542469,-5.748904],[-3.076609,1.838223,2.419309,6.090113,-9.754838]],[[-1.906503,-7.943878,2.190489,6.111727,-3.034033],[-9.297488,-4.194047,6.250647,-4.146185,-9.577682],[-7.397591,-8.699866,-3.027180,7.979206,3.652068],[4.523325,3.955966,-6.907981,0.824526,-5.180315],[-6.057151,-8.486416,1.554980,9.661110,4.984666],[2.033225,-4.199772,2.115396,7.907791,-6.503124],[-7.628720,4.086961,7.250773,-8.901563,1.266285]],[[-8.410007,-8.475178,-1.150938,-2.349296,4.709722],[9.835691,3.960238,-5.104662,5.803605,-4.061055],[7.277544,5.190239,-2.170935,-7.705246,-2.566579],[3.901534,7.341949,5.049719,-0.021790,-5.784972],[0.416981,-4.770637,0.647892,1.579759,-3.959856],[6.286431,-9.657151,-8.814998,7.162830,5.380438],[-1.825512,6.210841,-0.438366,5.051779,-9.369542]],[[2.711902,-2.258670,9.311368,-8.828986,-8.841685],[-4.531553,-3.851870,-4.802864,4.550187,5.810220],[2.841102,3.160552,-3.820592,5.905415,-6.900218],[0.583853,6.651624,4.518472,1.030810,1.055515],[0.374666,3.063264,-0.091903,-6.016165,-1.086223],[9.004772,-6.332368,-8.753291,-2.426442,-7.318461],[9.454245,-8.527972,9.850241,9.250409,-7.678177]]], dtype = "float32")#candidate|8400|(11, 7, 5)|const|float32
uop_8401 = relay.sqrt(const_8400.astype('float32')) # shape=(11, 7, 5)
output = uop_8401
output2 = uop_8401
func_8404 = relay.Function([], output)
mod['func_8404'] = func_8404
mod = relay.transform.InferType()(mod)
mutated_mod['func_8404'] = func_8404
mutated_mod = relay.transform.InferType()(mutated_mod)
func_8404_call = mutated_mod.get_global_var('func_8404')
call_8405 = func_8404_call()
output = call_8405
func_8406 = relay.Function([], output)
mutated_mod['func_8406'] = func_8406
mutated_mod = relay.transform.InferType()(mutated_mod)
var_8420 = relay.var("var_8420", dtype = "int16", shape = (9, 9, 5))#candidate|8420|(9, 9, 5)|var|int16
var_8421 = relay.var("var_8421", dtype = "int16", shape = (9, 9, 5))#candidate|8421|(9, 9, 5)|var|int16
bop_8422 = relay.less_equal(var_8420.astype('bool'), relay.reshape(var_8421.astype('bool'), relay.shape_of(var_8420))) # shape=(9, 9, 5)
output = relay.Tuple([bop_8422,])
output2 = relay.Tuple([bop_8422,])
func_8425 = relay.Function([var_8420,var_8421,], output)
mod['func_8425'] = func_8425
mod = relay.transform.InferType()(mod)
var_8426 = relay.var("var_8426", dtype = "int16", shape = (9, 9, 5))#candidate|8426|(9, 9, 5)|var|int16
var_8427 = relay.var("var_8427", dtype = "int16", shape = (9, 9, 5))#candidate|8427|(9, 9, 5)|var|int16
output = func_8425(var_8426,var_8427,)
func_8428 = relay.Function([var_8426,var_8427,], output)
mutated_mod['func_8428'] = func_8428
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4384_call = mod.get_global_var('func_4384')
func_4385_call = mutated_mod.get_global_var('func_4385')
call_8464 = relay.TupleGetItem(func_4384_call(), 3)
call_8465 = relay.TupleGetItem(func_4385_call(), 3)
output = relay.Tuple([call_8464,])
output2 = relay.Tuple([call_8465,])
func_8468 = relay.Function([], output)
mod['func_8468'] = func_8468
mod = relay.transform.InferType()(mod)
mutated_mod['func_8468'] = func_8468
mutated_mod = relay.transform.InferType()(mutated_mod)
func_8468_call = mutated_mod.get_global_var('func_8468')
call_8469 = func_8468_call()
output = call_8469
func_8470 = relay.Function([], output)
mutated_mod['func_8470'] = func_8470
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5060_call = mod.get_global_var('func_5060')
func_5062_call = mutated_mod.get_global_var('func_5062')
call_8471 = relay.TupleGetItem(func_5060_call(), 0)
call_8472 = relay.TupleGetItem(func_5062_call(), 0)
func_7316_call = mod.get_global_var('func_7316')
func_7319_call = mutated_mod.get_global_var('func_7319')
const_8474 = relay.const([5,8,2,-10,5,-6,-5,-1,8,-9,-10,-6,5,-10,-8,-3,-2,3,-2,-5,-9,1,7,-10,-9,-3,3,-4,7,-9,6,9,10,1,7,1,8,9,6,-2,10,4,5,4,-1,-8,-4,6,-9,7,5,-1,2,10,-1,2,8,-5,-5,6,1,-4,8,-8,-9,2,-5,-10,-3,6,5,-5,8,-5,-8,-1,-4,3,-7,9,-6,-1,-4,-1,-3,10,6,10,-5,9,5,-4,4,-1,8,8,-2,6,-2,-10,-3,3,-6,-5,8,-6,-3,4,-8,10,-6,10,1,-4,3,10,-4,7,-3,-3,-6,6,9,-7,-6,1,-7,-1,-6,-3,-9,-7,3,-3,8,-9,-4,4,-6,10,-9,-5,-3,7,1,10,-3,3,5,-4,3,-7,-10,-10,-3,-10,1,-1,2,-6,9,3,5,6,1,2,5,10,-2,2,1,10,-9,-8,10,-6,-10,-9,-2,-4], dtype = "int64")#candidate|8474|(180,)|const|int64
call_8473 = relay.TupleGetItem(func_7316_call(relay.reshape(const_8474.astype('int64'), [6, 5, 6]), relay.reshape(const_8474.astype('int64'), [6, 5, 6]), ), 1)
call_8475 = relay.TupleGetItem(func_7319_call(relay.reshape(const_8474.astype('int64'), [6, 5, 6]), relay.reshape(const_8474.astype('int64'), [6, 5, 6]), ), 1)
output = relay.Tuple([call_8471,call_8473,const_8474,])
output2 = relay.Tuple([call_8472,call_8475,const_8474,])
func_8481 = relay.Function([], output)
mod['func_8481'] = func_8481
mod = relay.transform.InferType()(mod)
output = func_8481()
func_8482 = relay.Function([], output)
mutated_mod['func_8482'] = func_8482
mutated_mod = relay.transform.InferType()(mutated_mod)
func_8468_call = mod.get_global_var('func_8468')
func_8470_call = mutated_mod.get_global_var('func_8470')
call_8483 = relay.TupleGetItem(func_8468_call(), 0)
call_8484 = relay.TupleGetItem(func_8470_call(), 0)
func_4071_call = mod.get_global_var('func_4071')
func_4076_call = mutated_mod.get_global_var('func_4076')
var_8489 = relay.var("var_8489", dtype = "float64", shape = (375,))#candidate|8489|(375,)|var|float64
const_8490 = relay.const([8.098285,6.266599,-6.658489,-5.495091,2.488776,-7.717030,-9.051616,-2.815463,-3.192097,0.003077,-2.931074,-1.405545,2.504225,4.046712,-5.542064,-1.153636,3.161299,-6.291266,5.402442,-5.352902,-9.527215,-4.342168,-8.137143,-3.126636,6.029307,-3.106387,0.527592,-6.432821,-7.122398,-5.256581,-6.773330,-5.650311,-0.876318,-2.199915,3.692360,-7.307689,3.304894,-9.513288,6.042879,-3.504792,-0.898855,2.510937,-3.695681,-5.098973,4.456500,8.587326,6.053637,-6.686375,-0.237392,-3.117407,9.232529,7.023584,5.062202,-6.261106,2.052347,-3.998091,9.325654,0.891307,6.872358,-1.596721,-6.949303,3.697826,7.181365,8.089784,-9.665122,3.466311,-2.992922,-2.968406,-7.916800,7.860212,-9.405161,3.671651,0.850459,9.800856,2.148259,3.710204,0.954573,8.254230,-9.256886,-2.766381,-9.492448,5.256774,2.316863,4.547972,-1.873705,0.186779,-7.589498,8.910428,8.070393,-0.802398,-4.115894,9.950899,-9.687194,5.466260,6.804725,9.317649,1.443292,7.587562,0.632740,7.514292,1.728809,-2.647446,2.441398,8.426241,-3.770281,2.116906,0.593998,-7.338367,-3.568744,1.017517,7.491153,9.322738,8.124664,6.343037,6.367030,-2.247110,7.624584,-5.683771,-4.267620,-4.118468,-3.725508,-5.452490,-8.049426,0.092755,-6.576871,-4.737137,-6.328002,-8.683151,-0.305475,-1.325459,-8.818561,-2.118939,3.265213,9.065930,-5.601864,-6.059439,2.511473,6.126891,7.915143,-2.321282,8.878257,0.059905,8.942050,9.264093,-9.809544,5.418728,-3.482096,-7.641194,9.662595,-9.232115,0.430849,-9.755691,7.801949,-3.720270,-0.537039,-9.230368,-4.754119,4.914942,2.091102,7.294058,-1.487893,1.742579,6.249699,-0.885767,8.788855,-9.485312,7.203800,0.207507,-5.054504,3.558136,4.224780,-4.275362,-1.634339,7.347311,-4.020736,2.988406,8.085780,-5.263630,-0.756640,9.778494,2.869459,3.899430,-7.829858,5.502287,-6.467722,-5.293988,-2.196363,2.669943,-4.915410,-8.392362,-6.631189,-7.227280,-5.680327,-4.178594,9.653986,-1.675666,8.552605,-6.889717,4.565356,6.338493,-3.637759,3.265029,-1.181549,3.647032,4.239031,-8.285969,3.924856,6.234652,0.702130,2.342226,-9.746900,8.112297,3.751408,9.840534,6.814596,-6.428103,-5.824481,-9.102800,5.132331,-7.892510,0.807434,-1.133559,3.773048,8.772021,1.438452,1.090903,-0.489780,8.635129,-4.651164,-0.440259,0.881285,-0.209542,-0.004346,0.065589,-2.126039,-5.281789,-9.720625,9.868866,1.718027,-1.921282,5.065367,-3.747165,-0.997754,8.934532,-9.704768,-4.327614,-8.549606,-1.194812,5.986120,-1.983090,2.879500,6.602215,7.815055,2.509694,4.699697,9.966340,5.481258,9.319841,-1.246353,9.549959,-3.743562,-6.004163,-0.698372,-4.606270,-7.649912,3.106849,4.796347,1.416186,2.632212,2.878648,-9.001150,9.873379,-3.742236,5.811783,3.903837,-9.103072,-1.352731,0.288315,7.319936,-7.249418,-4.842362,5.909833,6.569250,2.636210,6.378440,7.548515,0.226046,4.777829,4.587148,-6.134000,1.725666,9.061404,-8.534960,-1.163779,-7.474036,8.026102,4.683128,-8.282105,-6.469724,4.757362,1.218987,0.896433,-0.166301,-2.142354,-2.927710,-6.077776,7.305936,1.773679,-1.207543,8.689480,1.328326,-2.337460,3.032504,4.977156,-4.343359,4.114345,7.103752,-5.250439,-4.837717,-4.387497,-0.685372,-7.144596,-4.644461,3.385389,-2.349525,8.738341,7.704280,-9.542612,-7.843296,-6.225718,-3.195087,-9.439175,8.258310,8.914941,-0.452747,-3.032764,9.714045,-2.163979,-1.993876,-5.203250,5.169408,-8.293920,8.599527,4.681947,-1.981325,-5.384581,-3.533220,3.778662,-2.242104,0.924172,-3.225587,9.263062,-5.905909,2.906162,5.101503,2.388126,9.796985,8.185854,-9.516349,-4.349088,1.573151,-5.732070,-4.023590,9.843464,-9.437951,1.992610,-9.424721,-7.444697,-8.061073,5.328390,-1.442471,-6.562217,6.812776,-6.288738,4.129862,-6.807901,-8.034890,-3.039467,-1.201580,0.219367,-3.086139,8.111279,5.491999,6.804174,7.843445,8.617856,-3.702701,4.613517,8.909134,6.841031,6.892556,2.612841,-8.610735,-2.431153,8.242374,-5.396690,-9.691209,-6.824347,5.065413,6.279797,9.529876,-0.984738,4.151183,4.969314,-0.094041,3.137610,-2.413306,5.166232,-6.644619,-2.947196,2.776223,0.409657,-4.421668,9.111084,8.405025,2.572514,7.562349,-3.500712,9.770120,5.378891,3.769438,9.600028,-4.193766,-7.555855,-5.358048,-1.103792,0.115938,8.612568,-3.344468,-5.034478,-2.736652,-1.598169,0.787880,-8.662760,-7.993516,-6.708316,-7.996815,4.675705,-1.141577,0.860149,-4.704290,-4.351025,7.601563,-1.299858,-3.945731,2.982511,-3.826207,-1.906443,7.308675,-2.495505,9.795374,2.110873,0.355320,-2.778092,-1.459330,-2.110397,9.438288,9.851123,5.494212,-8.241076,-6.935129,-0.573660,7.687321,-2.614617,3.359138,-6.983362,-9.428088,-5.637535,1.756877,7.836138,-1.885682,-0.362468,3.656971,-2.153033,5.700898,-0.845739,-9.070014,-2.252338,-2.020035,-6.898888,-2.692504,-5.404897,-2.199296,-6.110449,4.492042,-3.722043,7.793279,2.918047,-4.410694,5.235730,7.178113,8.905911,-4.883166,9.450707,-9.707485,-6.226910,2.072305,1.494062,7.889630,0.919841,-4.396303,-6.291005,-2.865371,-1.523202,9.737359,4.656083,4.852901,1.956204,-1.251322,-4.869392,-0.081439,1.390213,2.607337,-3.872414,-0.135268,2.223561,2.391639,7.822286,-5.940422,-8.024970,8.640967,-1.810189,-6.104241,6.435098,-2.882033,0.488133,-0.766104,-3.101890,-9.347696,0.452841,-6.561457,6.633479,-5.148695,-9.284963,-3.869313,7.151015,-3.332300,-5.747164,8.601383,0.215228,-2.910743,-1.632904,-3.576353,-6.558642,1.338716,8.584540,2.169450,9.755004,9.922424,-3.952774,-0.985550,-9.091702,5.854459,1.703042,-3.469990,-8.127079,-8.483749,4.864351,-9.928996,6.584417,5.083281,4.897031,1.644076,5.333257,-9.537202,-3.698487,9.328677,9.921183,8.865214,6.912123,-8.207061,-8.515209,-8.718343,2.302000,-5.339428,0.274986,2.752119,-6.475569,4.887121,-7.052933,5.558103,6.954565,6.523144,4.458344,1.515562,-0.731648,-1.083260,-7.792724,-2.479076,9.601471,-6.163474,9.981908,-5.491101,-4.903433,6.750388,3.336372,4.557130,3.311149,-6.606154,-3.617203,9.522993,4.447206,5.260362,-3.783444,3.187209,-8.507112,-5.118990,1.766619,2.892571,1.450687,-9.143510,5.949984,9.521592,-8.980377,4.908060,6.379843,6.838682,2.956429,8.793683,8.122798,3.406796,-2.035479,9.846178,-9.277893,-1.124789,5.393650,6.954379,-3.205104,8.494055,-8.485069,1.420884,7.114489,-2.039285,-3.038497,-8.856815,-6.025118,3.027803,-8.777938,-0.725496,-9.227455,-0.600760,-5.776508,-1.093354,-4.881931,8.797491,4.444875,-6.584548,-5.481066,7.621179,-9.079207,-5.516569,1.432572,-1.468039,-4.457669,6.746704,7.497561,-1.921336,3.020386,-5.915451,-3.158087,-9.057897,2.813437,-3.880850,6.983139,-4.085865,3.376236,-8.544605,-1.711283,-8.839812,7.095168,1.177257,3.098472], dtype = "float32")#candidate|8490|(672,)|const|float32
call_8488 = relay.TupleGetItem(func_4071_call(relay.reshape(var_8489.astype('float64'), [375,]), relay.reshape(call_8483.astype('uint16'), [16,]), relay.reshape(const_8490.astype('float32'), [14, 16, 3]), ), 2)
call_8491 = relay.TupleGetItem(func_4076_call(relay.reshape(var_8489.astype('float64'), [375,]), relay.reshape(call_8483.astype('uint16'), [16,]), relay.reshape(const_8490.astype('float32'), [14, 16, 3]), ), 2)
func_5141_call = mod.get_global_var('func_5141')
func_5142_call = mutated_mod.get_global_var('func_5142')
call_8496 = relay.TupleGetItem(func_5141_call(), 0)
call_8497 = relay.TupleGetItem(func_5142_call(), 0)
uop_8503 = relay.log10(call_8496.astype('float64')) # shape=(2, 15, 6)
uop_8505 = relay.log10(call_8497.astype('float64')) # shape=(2, 15, 6)
output = relay.Tuple([call_8483,call_8488,var_8489,const_8490,uop_8503,])
output2 = relay.Tuple([call_8484,call_8491,var_8489,const_8490,uop_8505,])
func_8532 = relay.Function([var_8489,], output)
mod['func_8532'] = func_8532
mod = relay.transform.InferType()(mod)
var_8533 = relay.var("var_8533", dtype = "float64", shape = (375,))#candidate|8533|(375,)|var|float64
output = func_8532(var_8533)
func_8534 = relay.Function([var_8533], output)
mutated_mod['func_8534'] = func_8534
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4384_call = mod.get_global_var('func_4384')
func_4385_call = mutated_mod.get_global_var('func_4385')
call_8613 = relay.TupleGetItem(func_4384_call(), 2)
call_8614 = relay.TupleGetItem(func_4385_call(), 2)
func_3976_call = mod.get_global_var('func_3976')
func_3977_call = mutated_mod.get_global_var('func_3977')
call_8629 = func_3976_call()
call_8630 = func_3976_call()
output = relay.Tuple([call_8613,call_8629,])
output2 = relay.Tuple([call_8614,call_8630,])
func_8648 = relay.Function([], output)
mod['func_8648'] = func_8648
mod = relay.transform.InferType()(mod)
mutated_mod['func_8648'] = func_8648
mutated_mod = relay.transform.InferType()(mutated_mod)
func_8648_call = mutated_mod.get_global_var('func_8648')
call_8649 = func_8648_call()
output = call_8649
func_8650 = relay.Function([], output)
mutated_mod['func_8650'] = func_8650
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4322_call = mod.get_global_var('func_4322')
func_4323_call = mutated_mod.get_global_var('func_4323')
call_8659 = func_4322_call()
call_8660 = func_4322_call()
func_4295_call = mod.get_global_var('func_4295')
func_4296_call = mutated_mod.get_global_var('func_4296')
call_8664 = func_4295_call()
call_8665 = func_4295_call()
output = relay.Tuple([call_8659,call_8664,])
output2 = relay.Tuple([call_8660,call_8665,])
func_8667 = relay.Function([], output)
mod['func_8667'] = func_8667
mod = relay.transform.InferType()(mod)
mutated_mod['func_8667'] = func_8667
mutated_mod = relay.transform.InferType()(mutated_mod)
func_8667_call = mutated_mod.get_global_var('func_8667')
call_8668 = func_8667_call()
output = call_8668
func_8669 = relay.Function([], output)
mutated_mod['func_8669'] = func_8669
mutated_mod = relay.transform.InferType()(mutated_mod)
var_8683 = relay.var("var_8683", dtype = "float32", shape = (3, 9, 3))#candidate|8683|(3, 9, 3)|var|float32
var_8684 = relay.var("var_8684", dtype = "float32", shape = (3, 9, 3))#candidate|8684|(3, 9, 3)|var|float32
bop_8685 = relay.floor_mod(var_8683.astype('float32'), relay.reshape(var_8684.astype('float32'), relay.shape_of(var_8683))) # shape=(3, 9, 3)
uop_8700 = relay.atanh(var_8683.astype('float64')) # shape=(3, 9, 3)
output = relay.Tuple([bop_8685,uop_8700,])
output2 = relay.Tuple([bop_8685,uop_8700,])
func_8724 = relay.Function([var_8683,var_8684,], output)
mod['func_8724'] = func_8724
mod = relay.transform.InferType()(mod)
mutated_mod['func_8724'] = func_8724
mutated_mod = relay.transform.InferType()(mutated_mod)
func_8724_call = mutated_mod.get_global_var('func_8724')
var_8726 = relay.var("var_8726", dtype = "float32", shape = (3, 9, 3))#candidate|8726|(3, 9, 3)|var|float32
var_8727 = relay.var("var_8727", dtype = "float32", shape = (3, 9, 3))#candidate|8727|(3, 9, 3)|var|float32
call_8725 = func_8724_call(var_8726,var_8727,)
output = call_8725
func_8728 = relay.Function([var_8726,var_8727,], output)
mutated_mod['func_8728'] = func_8728
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3969_call = mod.get_global_var('func_3969')
func_3971_call = mutated_mod.get_global_var('func_3971')
call_8735 = func_3969_call()
call_8736 = func_3969_call()
output = call_8735
output2 = call_8736
func_8744 = relay.Function([], output)
mod['func_8744'] = func_8744
mod = relay.transform.InferType()(mod)
mutated_mod['func_8744'] = func_8744
mutated_mod = relay.transform.InferType()(mutated_mod)
func_8744_call = mutated_mod.get_global_var('func_8744')
call_8745 = func_8744_call()
output = call_8745
func_8746 = relay.Function([], output)
mutated_mod['func_8746'] = func_8746
mutated_mod = relay.transform.InferType()(mutated_mod)
func_8481_call = mod.get_global_var('func_8481')
func_8482_call = mutated_mod.get_global_var('func_8482')
call_8760 = relay.TupleGetItem(func_8481_call(), 1)
call_8761 = relay.TupleGetItem(func_8482_call(), 1)
uop_8762 = relay.log(call_8760.astype('float32')) # shape=(6, 5, 6)
uop_8764 = relay.log(call_8761.astype('float32')) # shape=(6, 5, 6)
func_4208_call = mod.get_global_var('func_4208')
func_4210_call = mutated_mod.get_global_var('func_4210')
const_8772 = relay.const([-5.997502,-1.680417,-5.803976,6.914886,3.933788,-1.089921,-2.358966,3.597091,-9.351654,7.662038,6.054078,-2.028116,-8.763798,-6.132664,4.283174,3.942478,-4.138393,7.756940,7.068653,-5.965049,-0.159825,2.284625,2.445355,-7.157794,7.914746,-0.549925,2.788353,-0.612369,-0.946335,-8.093172,5.170452,0.380015,8.996937,-9.822979,6.344839,7.795175,8.089957,4.943873,7.540183,-3.822461,4.511042,8.937992,-2.190352,7.269320,-7.267535,-1.030647,3.255487,3.392597,-9.171245,8.557737,-4.357155,2.189290,9.261613,-2.040827,-5.810752,-1.214330,-1.742414,-6.593076,4.097001,0.733832,5.971296,5.243052,7.477925,3.888401,-8.157177,6.948955,4.046878,6.464926,7.605092,5.268301,-5.535106,-1.816379,5.403703,6.878913,-3.837804,7.267156,-7.262895,-6.320052,3.793118,2.065938,-7.137842,0.669169,2.924307,-7.119188,-0.885720,-2.891652,9.575639,9.160344,-5.542290,-5.486086,8.030235,-5.265526,-3.559860,2.666035,8.827206,-3.784084,-5.885735,9.680805,-8.892849,-6.808245,-3.106473,8.299200,0.754671,-0.493010,-9.911164,-1.706661,-7.539270,7.792336,9.335966,2.445254,-9.769406,-0.112501,6.495437,-8.413651,-7.507347,-5.076508,-4.534788,-1.068621,8.226600,9.695714,5.838060,1.051301,-6.461472,7.612279,-4.241674,-6.753246,-9.625546,5.383923,1.059230,4.667038,-3.934816,-3.040312,3.343020,7.070519,3.246734,-0.453340,-7.974954,6.560116,3.320232,6.299534,0.343204,-4.903211,-4.851108,4.711326,8.313952,1.100380,-6.275580,-5.398267,6.997875,-3.115607,-5.417861,4.113474,6.631310,-3.972768,1.596942,-6.545673,2.820482,-0.045527,-5.843990,3.170716,-3.610483,8.244620,-3.777919,7.370234,2.536509,7.484930,-7.348593,7.440536,8.502933,-7.618722,9.485620,4.831808,7.199529,-6.852892,5.741151,-0.747342,2.898072,-1.551406,9.869837,4.972052,-2.123942,8.624549,6.463421,-8.221223,-3.475479,-8.546751,9.714179,-7.030352,5.713506,-6.187011,7.746484,8.516506,-7.395797,-7.828409,3.991778,6.062113,-3.691133,-0.206213,2.679021,-6.572457,-5.303366,6.297221,-4.509761,-5.762349,-3.231823,-8.492371,2.071341,-7.519301,-6.960238,-1.562259,-2.167350,9.203558,-5.179668,2.700543,-1.283131,0.102545,-7.735960,-0.636053,-5.039866,-8.638192,7.651106,-9.810632,-1.182125,-6.081474,-2.470772,-3.784484,-0.027362,1.382887,-4.997808,-5.780898,2.474015,7.889108,-0.887486,-0.853312,-5.563806,-6.451968,-3.870849,0.855738,9.182690,8.835192,-8.833131,8.889362,7.675795,4.645995,1.852028,-4.614323,9.834773,-9.577189,4.085668,-2.761416,4.840252,6.273794,-6.393052,5.535970,-9.957454,2.880169,-4.813983,-6.617829,4.706289,3.533077,2.875566,2.094684,8.011545,8.315456,3.109178,9.725832,-3.325408,-0.396486,4.140078,-1.226591,-3.143978,-3.706371,-2.897078,-0.891731,-0.104975,-0.503550,8.089175,-0.022636,3.148102,7.330341,1.578595,-4.426569,0.382712,-5.998083,-8.760275,-7.381825,-1.496745,0.278609,1.605083,2.659910,-7.843679,-8.444552,9.011519,-3.468172,-7.870185,8.378617,-6.000329,0.005428,-9.167338,-2.812794,-1.832878,7.358381,9.871254,-5.691447,-3.434971,-6.377617,0.716422,-7.337424,1.975465,-7.616340,-4.779512,-5.144640,3.638106,-2.827570,8.596705,-2.908457,-9.025186,9.933175,-4.794216,-6.064354,0.001788,3.972927,1.397969,3.392562,7.758453,-5.970656,-5.583153,-8.585089,-6.992992,7.304455,-5.031424,-2.150525,-0.786675,-3.989697,3.454606,5.469791,-9.530792,3.815535,8.272989,-0.702662,-1.610703,-6.508984,3.983070,-8.336482,-0.769979,-7.922239,8.587844,4.480579,-1.525421,9.064152,-8.470877,-0.701227,8.547843,1.997910,-1.931316,3.622208,-9.683515,1.302215,2.820592,-7.018501,-2.258317,-9.746817,6.891660,9.777045,0.145853,8.661063,0.636938,-7.471422,1.986782,1.704429,-0.838930,1.997369,1.696279,-0.427888,-3.522824,-8.755445,0.515658,5.591277,-8.822667,-2.304810,1.149939,2.082574,7.357319,2.765318,6.462347,8.469317,-8.142695,3.217488,7.925583,-0.891683,-3.172885,-8.111556,2.568514,-9.071026,-1.117016,9.782080,-4.846380,2.618701,0.619800,-3.920829,9.188732,-9.750711,-9.554777,3.320791,5.663088,-3.055094,-6.619431,-0.653109,-1.907617,6.849172,2.961513,-6.899825,-4.757181,-3.734790,-0.024286,-1.264344,-0.580835,8.481662,-7.297324,-1.667906,-5.495992,2.400045,-0.250302,-0.191482,-0.393053,1.967110,0.984130,5.420751,0.274128,7.442923,4.901115,-0.440967,-2.435180,-5.478455,-8.496973,-7.425791,2.408866,-4.817323,9.562484,-6.075645,-0.824851,-3.443539,2.181032,9.052389,7.137724,3.498482,2.902438,-0.820315,8.011291,-9.036802,7.094374,6.077627,4.039948,-2.975859,-4.678507,-9.640322,9.434578,-7.195440,1.484248,1.930399,-3.107826,4.191262,-2.127602,6.315072,-1.609262,-9.011787,5.165338,7.176430,8.616229,2.062585,-9.277880,-9.824211,-5.358543,2.183874,2.076679,-7.635057,6.683548,5.597754,2.605621,3.876378,-4.238856,-2.610931,5.560000,-3.407431,9.433125,8.199517,-5.843037,2.539236,-0.845934,-5.660365,-9.196278,-4.281920,-1.612808,5.399568,-5.469547,3.476625,-9.413019,-8.925849,0.492189,-7.278467,7.737663,1.396819,-9.462146,-3.456117,5.532714,-9.740777,-1.553470,3.588053,-1.172868,-6.986830,3.857366,6.057470,2.523215,-8.334260,7.158532,-9.928933,-1.061760,-3.758404,-8.266484,5.659560,1.767215,2.015512,-7.243650,-9.021784,-5.851993,-8.820562,-7.620793,7.937457,7.535872,1.297028,7.422950,0.712893,0.471086,-7.781254,2.128494,8.792636,6.230048,-5.158630,6.038312,-6.064342,9.573423,2.931669,-9.265661,-7.562201,-6.735879,-4.249883,8.368453,6.211915,9.265068,-7.040936,-3.630508,6.866450,2.037716,3.935437,-7.213965,-7.573816,-2.617423,-7.096603,-0.074724,5.926180,-7.913341,-7.802074,8.755239,-5.542496,1.165602,8.817269,-9.169164,0.437929,-3.198487,-4.725959,-0.361854,9.515052,-4.940047,-7.190629,-9.504406,-8.445188,6.642259,-8.689799,-9.983671,-0.571252,9.693337,7.424811,-2.592713,7.102390,-2.020963,-2.594365,-9.088873,0.970296,4.745550,-7.271569,6.786709,-6.700267,5.989642,-1.245621,7.381352,-6.820110,-7.654181,-3.096108,-2.557738,-3.258872,3.446718,-8.130704,-1.021060,-5.300448,9.980143,6.353287,9.332343,8.915726,-9.046780,2.118494,-6.056875,-5.227498,3.618120,-2.406918,5.045746,-5.361499,4.376186,-2.966847,7.115183,3.105235,1.868499,8.540517,-4.183788,-6.626979,-4.553017,-4.367664,9.581900,-6.702164,9.854523,-6.167776,7.446054,4.842947,6.026850,-4.444816,-7.846663,0.453549,-1.640564,7.969791,-6.851230,2.752788,0.983876,0.805673,-5.572798,7.305097,-7.527664,-8.161726,9.173365,-0.160771,-6.242284,6.422330,-0.510863,-4.901919,1.874540,8.037829,0.301919,4.007025,-0.427807,3.208305,-5.226498,-8.373982,4.469018,-7.035802,-9.149524,7.331815,8.617807,-3.397553,-6.509437,-2.937255,-2.931425,3.702337,-7.402561,-1.522683,4.456085,8.103310,-0.972041,1.701899,4.494847,-3.711329,-1.977454,-9.968705,-5.964269,-9.879804,2.120330,7.705557,-2.894579,-9.202153,7.948657,-0.557216,-4.405962,-7.264076,5.100442,-9.885002,6.456433,5.536773,5.306589,0.682425,-8.669093,-0.952787,-5.076395,8.099350,-5.655855,3.744503,-6.685340,-9.435163], dtype = "float32")#candidate|8772|(704,)|const|float32
call_8771 = relay.TupleGetItem(func_4208_call(relay.reshape(const_8772.astype('float32'), [704,])), 2)
call_8773 = relay.TupleGetItem(func_4210_call(relay.reshape(const_8772.astype('float32'), [704,])), 2)
output = relay.Tuple([uop_8762,call_8771,const_8772,])
output2 = relay.Tuple([uop_8764,call_8773,const_8772,])
func_8776 = relay.Function([], output)
mod['func_8776'] = func_8776
mod = relay.transform.InferType()(mod)
output = func_8776()
func_8777 = relay.Function([], output)
mutated_mod['func_8777'] = func_8777
mutated_mod = relay.transform.InferType()(mutated_mod)
const_8781 = relay.const([[[False,False,True,True,False,False,True,False,True,True,True,False,True,True]],[[False,False,True,False,False,False,True,False,False,False,True,True,False,True]],[[True,True,True,True,True,False,False,True,False,True,False,True,True,True]],[[True,False,False,True,True,True,True,True,False,False,True,False,True,False]],[[True,True,True,False,False,False,True,True,True,True,True,True,True,True]],[[True,False,False,False,False,False,False,True,False,True,True,False,False,False]],[[False,True,True,False,False,False,False,False,True,False,True,False,True,False]],[[True,False,True,False,False,True,True,True,False,True,False,False,False,True]],[[False,False,False,False,True,True,False,True,True,True,True,False,True,True]],[[False,False,True,False,True,True,False,True,False,True,False,False,False,True]],[[False,True,False,False,True,False,True,True,True,True,False,True,False,False]],[[True,True,True,False,False,False,False,True,True,False,False,False,False,True]],[[False,False,False,True,True,False,True,True,True,False,False,False,False,False]],[[True,False,False,True,False,True,True,False,False,True,True,True,True,True]],[[True,True,False,False,False,False,True,True,True,False,False,False,True,False]]], dtype = "bool")#candidate|8781|(15, 1, 14)|const|bool
var_8782 = relay.var("var_8782", dtype = "bool", shape = (15, 13, 14))#candidate|8782|(15, 13, 14)|var|bool
bop_8783 = relay.logical_or(const_8781.astype('bool'), var_8782.astype('bool')) # shape=(15, 13, 14)
func_5228_call = mod.get_global_var('func_5228')
func_5230_call = mutated_mod.get_global_var('func_5230')
const_8788 = relay.const([[10,7,9,9,5,-6,10,4,7,9,-10,-1,-10,5,4,6,-5,10,-8,-8,4,5,5,7,-5,9,-3,-2,-5,2,8,3,-5,-7,-1,-8,-8,-1,4,6,4,5,-8,-8,-5,2,2,-7,10,10,9,-8,-2,-2,7,-6,-5,-8,-9,6,9,-9,3,8,10,-7,-7,-7,-6,-5,-7,3,3,5,-8,-8,-10,9,-3,-9,4,-3,2,10,-1,10,6,-1,7,-1]], dtype = "uint16")#candidate|8788|(1, 90)|const|uint16
call_8787 = func_5228_call(relay.reshape(const_8788.astype('uint16'), [3, 6, 5]))
call_8789 = func_5228_call(relay.reshape(const_8788.astype('uint16'), [3, 6, 5]))
output = relay.Tuple([bop_8783,call_8787,const_8788,])
output2 = relay.Tuple([bop_8783,call_8789,const_8788,])
func_8790 = relay.Function([var_8782,], output)
mod['func_8790'] = func_8790
mod = relay.transform.InferType()(mod)
var_8791 = relay.var("var_8791", dtype = "bool", shape = (15, 13, 14))#candidate|8791|(15, 13, 14)|var|bool
output = func_8790(var_8791)
func_8792 = relay.Function([var_8791], output)
mutated_mod['func_8792'] = func_8792
mutated_mod = relay.transform.InferType()(mutated_mod)
const_8819 = relay.const([[[-9.344518,7.221407,-2.750970,-5.890593,5.151415,2.425984,4.546591,3.114602],[5.178005,-8.112992,5.172710,6.999704,1.233829,1.648772,0.178214,-6.862286],[2.287346,6.231036,-8.391917,-2.963959,-7.826553,5.108073,4.922283,2.222208],[-8.335499,-4.620045,6.981633,1.250331,-9.234970,-8.073318,5.333603,5.909279],[-4.030326,-2.066332,0.993062,7.996919,-5.368965,9.757370,5.367642,4.987114],[-2.119542,-3.802752,4.652467,4.811573,-3.591509,0.267045,-1.610419,-5.269698],[6.861996,7.990453,2.897443,9.158639,6.611076,-8.398019,5.118951,5.709687],[3.588999,8.200655,8.782290,-6.179435,3.090539,9.728450,0.061940,-1.441855],[-5.092637,2.522645,-0.995169,-7.508759,5.870703,8.378758,-1.012718,-5.869896],[-1.398513,-6.774335,-4.849270,6.639864,-1.380532,-0.619658,-0.620782,9.412414],[-4.059440,9.014658,5.336545,0.821980,-5.086072,4.395430,7.619283,-3.367609],[-7.191458,5.630769,1.004350,-2.314719,0.032339,1.623664,1.131829,-3.659017],[5.377745,5.571422,9.091905,0.444091,0.229211,-1.055978,8.556421,-0.549460],[0.774336,-3.889451,-8.163564,5.803186,2.997906,0.919154,6.266258,8.997514],[9.782712,2.151762,6.408981,-8.588420,6.140999,6.310721,3.523375,-8.586609]],[[9.879828,-4.244241,7.631322,8.858553,-0.384518,-3.279214,-1.262220,0.110783],[-3.395748,1.365980,1.175874,-5.828789,-5.683149,5.069609,2.366594,3.292387],[1.428174,-8.881845,3.465987,4.840877,-3.759347,0.342297,8.150665,9.791429],[0.302951,1.132764,-9.545278,0.434738,1.325617,1.368888,5.214358,8.307203],[-4.462169,4.108229,9.016592,4.957967,-5.437109,0.400457,3.982420,9.886285],[5.809250,-3.877073,-1.132707,-6.595347,-5.038858,-5.532702,-0.069839,-5.064273],[0.218815,-1.561159,0.391633,9.463746,-5.533324,6.343467,5.308759,-5.086041],[-6.445760,-3.872304,5.409902,-9.861239,-1.677362,7.451153,7.836740,4.627620],[4.883239,9.832920,-2.560760,7.748584,4.156398,-7.421920,8.481433,5.451171],[6.662234,0.970970,6.521875,3.751346,-0.901037,-3.051791,-0.931010,0.776964],[-5.896726,-1.634892,9.231300,9.025912,3.721609,1.215187,1.351630,-4.015632],[-4.273409,0.212247,8.075501,-8.383222,6.458732,4.367335,-4.141034,8.033205],[-1.519876,9.190392,6.043338,-7.497430,3.810016,-3.831080,8.873583,2.043136],[-6.039149,1.401997,0.660770,9.627674,-1.604854,5.093890,0.310339,4.219232],[-0.846352,2.124591,-4.636805,-1.216360,3.930717,-9.683770,6.692368,0.459211]],[[-2.573711,-0.920042,-0.749260,-9.893199,-9.716108,2.809821,-6.019070,2.625344],[-7.395829,3.596535,4.364403,-3.198650,-6.238131,8.750205,-7.612561,7.443188],[5.902124,9.242837,7.707725,-4.029752,5.958640,-1.207281,1.686434,-1.879113],[-2.581992,-4.605753,-5.119770,3.249155,2.697590,-0.308822,0.621671,-4.340885],[8.860229,-0.347684,2.775426,3.493741,-1.598756,-7.044509,5.798883,8.843666],[-2.771005,5.177901,-6.314514,3.372935,4.935684,-6.097574,6.367248,1.594799],[-8.509792,-7.949022,8.708279,-1.505926,3.941536,1.119425,6.871696,-8.739905],[-0.619053,-1.636253,-1.003759,-0.584982,-6.153204,-4.428996,4.446133,-1.181596],[7.362739,8.439351,-6.863021,4.924925,-7.390008,7.720044,0.363295,-1.325647],[5.812853,7.138882,-5.780365,-9.536826,-6.575594,0.295206,-6.805449,9.820556],[-8.648056,-3.960817,-4.545147,-8.618802,-5.442243,-9.261886,5.986950,8.344852],[-2.927223,8.257347,-6.468822,6.263647,-3.735308,-8.730253,-3.599883,3.676655],[-6.819821,-8.083096,9.716591,-4.328262,-2.913558,3.256504,2.122931,-9.402880],[2.195705,-0.960340,7.115390,-3.179051,-8.500928,5.701449,-0.235028,9.105678],[-3.452403,9.860885,-4.868457,-5.367312,3.161018,0.767726,-8.986632,-5.831293]],[[4.757130,-9.110262,-3.435965,-2.791217,4.172283,9.453487,-6.918018,2.171883],[-8.332531,-5.594532,-7.982584,5.565170,3.327362,-6.719775,4.811595,2.061035],[8.338904,6.014135,5.156368,1.590999,8.184096,-9.635458,6.777201,4.037700],[6.825957,5.457548,-2.812201,6.009928,7.452628,3.246648,-8.076557,6.861703],[-4.013234,8.598337,-8.848428,3.211192,2.073642,-4.509092,3.169336,7.578404],[3.022120,-3.947581,5.186096,8.026479,7.730565,4.376312,-8.843490,5.188813],[-7.546815,-7.616942,1.438517,-1.022763,1.883359,-3.176081,-4.505034,8.336754],[-4.677709,2.499095,2.179162,-0.323413,-1.150628,-1.317342,-1.928999,0.357421],[-5.803158,7.659665,6.708449,6.569700,-4.693220,1.314740,7.762521,9.599324],[-7.315716,1.254524,2.314450,-8.619224,-4.137349,-8.213515,3.609364,8.793628],[4.225053,7.470807,-1.560225,-3.118968,-9.967084,-9.350270,-3.749768,6.039267],[-2.046599,5.144628,-9.348466,0.682367,-7.895637,4.080629,-5.132099,-5.249686],[-2.510437,-3.294322,-0.174392,4.810034,6.645318,-8.882312,1.440861,-3.725995],[-4.609872,-8.200612,-4.228823,5.301671,8.111251,-5.311149,1.674270,-4.882331],[-3.692443,6.026368,3.690100,-8.788206,-2.564756,-8.634212,-4.031173,3.525597]],[[-4.667110,-8.428244,-6.792648,-1.271153,-5.759491,6.082752,6.578274,8.899934],[-4.714682,-2.031097,-6.839046,-6.966084,5.235710,-3.779173,-0.902275,-8.839802],[0.312436,3.036735,2.576569,-3.699111,-3.097939,6.615579,2.928999,4.645251],[9.138251,9.393691,-7.329884,-7.922093,-9.913905,-3.224160,9.565974,-3.623845],[3.124029,-3.322581,0.016265,-4.413614,-5.386406,0.707179,7.449449,8.052554],[-0.066545,-4.719514,5.870900,-7.959588,3.088304,-0.301477,3.024378,-5.259015],[-5.433728,0.786997,8.507322,0.397114,-6.974131,6.302788,7.559396,-0.688652],[4.317473,6.674532,-9.188686,-1.707406,-8.374520,-2.025645,0.063426,-3.369275],[1.844965,7.200241,6.572110,-5.480755,1.404175,5.696845,-6.300927,-1.608359],[-7.553118,-9.062353,4.932919,4.063269,9.016123,-5.676459,-2.642695,-4.911607],[-4.422587,-5.463412,-0.428387,2.501673,-8.566602,9.585762,0.237298,-5.810779],[4.955459,-3.324072,3.887517,-1.842689,8.486935,-8.791358,3.905776,6.757266],[-2.935961,7.059484,-7.054351,1.257040,-8.160893,1.191026,-9.504924,5.051669],[0.375540,9.227938,8.213149,3.080493,-8.922536,-9.205505,4.559511,3.703459],[9.417085,-7.768637,-0.996762,-3.374562,-0.629417,-4.119411,1.075136,-1.968338]],[[9.820231,-8.075290,5.176692,4.164162,1.605988,3.207724,9.196262,-6.455246],[-6.180957,-4.709906,-1.081018,2.639710,-4.551481,-1.230412,2.756237,-4.643806],[-4.823910,-1.062057,0.785833,3.369316,2.185707,3.481255,1.234339,-1.859926],[-3.596027,-1.569656,3.317700,-1.363717,3.027851,-0.222469,1.112323,3.226806],[9.014526,-9.043661,9.264026,2.350916,-1.363242,9.846793,-9.768663,8.098564],[-1.939731,-5.254832,9.828687,-5.207098,5.348679,-2.449605,7.480507,-6.561928],[5.019243,8.508302,-3.452308,5.229377,0.371220,-6.045516,-5.413711,4.767601],[-2.257263,6.880129,-2.397063,-5.722125,-2.142910,-6.390459,3.717015,-8.180086],[2.054920,4.518491,-2.167987,9.664402,-6.782383,0.988544,9.243781,5.058203],[-5.940898,-1.346592,-6.826549,-7.112175,0.584710,7.598744,4.095023,0.144668],[8.726896,-9.414189,1.294835,-6.298538,-0.566131,5.443139,-0.697965,9.481406],[7.618706,9.071464,-0.794711,-5.397091,-3.590799,-7.954176,6.478387,0.035024],[1.768843,-7.882160,6.111844,-6.238628,-9.728935,1.612553,-0.698355,-1.578612],[-0.902346,-5.468641,5.867841,-5.133223,-2.991102,-4.365662,-4.160218,-7.401182],[3.536233,9.330104,1.227066,-4.561719,4.859090,-0.565540,-6.820378,4.446569]],[[-3.088126,-0.071819,-9.726380,-1.939537,1.631831,-5.348070,-6.373289,5.563353],[3.264649,-5.531845,-1.110760,-6.258541,-0.383709,-3.602852,2.536552,-3.252250],[7.361768,-2.020556,0.571679,-2.679402,0.318455,9.941442,6.957299,8.886712],[8.005587,-9.538065,2.023098,1.979757,6.476443,-5.890077,1.904693,7.266085],[4.885849,-6.103817,-3.405770,-7.478557,2.390744,7.210464,-4.151697,4.685211],[-4.413415,-2.275247,-2.918954,3.887021,1.112343,6.663658,-0.635315,7.286895],[-8.120354,6.297139,-2.312797,-1.728030,6.361507,-4.231366,-6.826411,3.811011],[4.638209,-1.602448,1.596998,-6.539511,-0.450814,8.248623,-2.991225,-6.606922],[-9.473672,6.683807,5.167204,-5.039818,4.463592,3.299551,-8.387982,-8.800934],[-1.336306,9.034538,-4.159824,-8.315889,5.990506,-0.927196,-4.410494,-0.036548],[-1.649316,4.526023,5.320819,-2.428839,-7.542040,4.326114,-5.052379,5.812435],[-6.019431,-7.805121,-5.657369,9.357139,-7.937413,2.962049,4.517760,4.929028],[8.356166,7.140034,-2.956314,0.372191,8.371740,6.575158,-0.220754,-7.983768],[1.913576,9.093099,5.311655,-4.568777,-5.523118,-9.624799,1.314873,6.997182],[-1.139503,-8.300052,-8.979867,-8.104296,-4.419685,7.245967,-7.449776,0.965935]],[[-2.838259,7.370796,-8.598275,6.532383,8.989909,-0.406275,3.111729,0.801764],[-2.514020,-9.875291,5.078068,7.995552,-0.318029,-0.874765,-3.124786,8.853470],[-5.837375,0.219004,-1.631992,-0.775176,-0.171734,-4.637638,-0.770242,-2.951326],[9.664268,-1.895654,5.546158,-5.386160,-7.115443,-9.808569,8.470266,-6.885273],[-4.123474,-5.628593,-4.431872,-9.074226,4.093227,9.180403,-4.916532,-3.653839],[-6.806744,-7.448220,-9.267172,-9.358670,7.660088,-5.544489,-6.600366,-3.044874],[-6.502443,6.755271,4.829503,4.730585,-5.526186,9.955408,-4.953969,3.631655],[-6.666410,-6.323915,-6.781603,5.117188,0.183932,-2.930126,-3.708158,-1.199673],[6.424785,-7.732592,9.505265,1.151341,-0.345169,-3.933251,6.816165,3.381323],[6.146350,-7.369892,-1.456782,6.735744,5.792605,3.040574,7.205638,-3.113202],[1.765218,7.115010,4.427100,7.914949,0.140333,-3.879816,4.733294,-4.862480],[-3.253163,-9.735010,1.825544,-0.577233,-6.213579,-8.888593,-5.561298,-0.044708],[8.765037,-2.938113,6.813197,-5.155507,-5.451435,4.135170,2.615831,-2.563968],[-7.614330,-1.008381,5.883680,6.826247,2.115364,5.495192,-0.269343,1.153559],[8.542173,-2.459306,6.159430,-5.627514,-5.865307,8.917637,3.736687,5.874465]],[[5.317805,2.816927,-2.393792,-0.601315,8.235813,9.592831,0.046202,8.504289],[3.660135,1.580046,5.936734,-6.158375,8.716315,9.446971,7.716309,2.049446],[-8.758984,5.785504,3.972506,-6.872967,2.925213,-8.296819,4.300044,-6.055429],[-5.603549,4.355289,8.705273,5.330813,-8.612945,3.587964,1.608936,-0.526283],[-2.327315,-3.649115,7.326884,-9.584253,0.356888,6.663455,-5.587639,2.492534],[-5.415566,-7.111601,-9.178609,-3.400812,-4.826143,-9.901060,-5.421452,-9.633597],[5.662510,-8.014735,9.442087,4.427696,-3.968728,3.155057,-9.988381,2.263784],[-7.035717,-6.193130,0.695615,7.146181,2.322268,8.833107,-6.492257,-6.866539],[-3.895687,-6.858048,6.864075,-4.077781,-2.876325,-5.911755,-6.168658,8.438508],[-2.635952,1.509058,9.678358,7.187196,1.447180,-3.539813,-7.829931,6.624345],[-2.382391,1.122201,3.589088,2.808911,0.755660,5.622271,1.383271,-8.174580],[-4.579998,0.561013,-5.202756,-0.064308,3.716185,3.089150,9.181911,-2.110616],[-0.031973,5.899150,-7.946296,-5.261121,4.403913,2.279201,-9.787629,-1.511552],[-5.208696,-5.201855,-9.573460,-1.300228,-8.524630,-5.575526,-4.195238,5.686906],[-7.408791,-0.442941,1.703080,-7.182948,-9.008977,1.089464,-3.940172,-8.911244]],[[0.189775,1.251731,0.762448,0.847170,-9.003426,-3.746106,-5.378570,2.402922],[-0.730427,4.527145,-4.410917,-5.779263,-1.852032,-4.728798,1.108967,5.252302],[8.804772,6.892254,-6.099290,-4.069184,-1.435109,6.549437,-5.917068,0.369054],[-7.172946,-2.090771,-2.616039,-7.379067,-5.994164,9.705474,8.048555,-0.599178],[-9.930409,3.765534,-6.629760,0.175127,-9.829858,-6.512016,8.375154,-5.837177],[-3.186796,4.864265,0.420406,7.792390,-0.070128,-9.074365,5.993578,-4.165784],[-1.336333,-3.609997,-9.164630,0.159736,-5.525465,5.309372,5.568090,-2.739226],[4.848652,-4.566388,3.538038,-3.150968,8.609999,4.651336,-4.614106,-2.247700],[9.638381,3.498689,-6.677542,2.145466,-1.074128,-7.495438,-5.835821,-9.562258],[-1.471473,-3.609805,-3.316620,6.959278,4.362881,8.269152,4.580323,-3.021161],[-1.664497,-0.803908,-9.509922,-6.067004,-8.705357,-5.126969,1.401810,-7.390530],[-2.149162,8.134219,-1.287568,-9.282431,7.493099,8.882746,5.507516,9.491824],[4.909047,-6.385827,8.804773,1.674033,2.004940,-9.467453,-4.021253,2.991265],[-4.355515,1.687404,1.547982,-6.646965,4.913012,7.852955,-0.954617,6.611804],[-4.634247,9.830246,-9.537072,-3.285615,1.869212,-4.492641,8.622732,-6.248597]],[[-8.469042,-7.592252,5.017983,-4.013953,-8.546392,3.649644,-6.993584,8.823741],[-1.783977,1.825792,3.087153,-2.000420,-9.907859,-5.678158,-3.038795,8.705233],[-9.336078,2.332899,4.460208,2.819922,4.128970,-7.688188,8.631392,3.691961],[-8.793068,-5.672399,-9.044305,-4.177578,1.195116,-7.176438,6.251533,-8.740132],[-4.583374,9.966667,6.718175,7.668024,4.134901,-8.176275,3.887889,-0.918788],[-3.897303,7.626765,-5.607213,-1.662803,-7.373865,1.262544,-2.006703,-8.731167],[0.027133,-1.145244,-6.442560,-5.182981,1.129961,-2.672270,-7.308060,0.530234],[8.890039,6.367947,-6.088269,6.071772,-8.717133,1.656893,-0.662053,2.522293],[4.816871,-5.262809,-1.762903,-6.017709,9.426571,-8.399298,5.398179,3.806335],[2.274480,-2.703384,-2.958266,-0.210924,0.296184,3.280802,4.549834,8.214700],[8.843018,-2.977314,-3.085157,3.934134,9.395779,4.915256,1.985493,9.051693],[8.930825,5.812426,1.603137,9.619201,2.179640,-1.368411,9.780160,1.905368],[0.076287,-1.748336,-4.942822,-4.877960,-6.245048,4.411914,-1.930349,-9.308453],[-0.805233,8.704274,9.767655,-8.298872,7.982401,-9.999472,4.434734,8.595245],[2.699247,-9.276774,-1.062358,-7.358386,2.880559,-7.393946,-9.789299,4.450661]],[[-6.165464,0.179668,7.387536,-2.810799,-2.585503,-3.127967,9.906634,1.226622],[0.043441,-0.011225,-6.468076,-2.679530,-3.339001,5.633263,4.668361,-1.007089],[3.949714,-2.769634,6.872268,9.889504,0.925062,8.975483,-7.568689,6.284060],[8.732427,4.638364,-2.303945,1.389936,-6.012301,-6.675809,5.743961,-1.510175],[-4.146156,-4.083059,2.190617,7.712590,4.054612,2.025842,4.153023,5.490777],[3.734972,-4.099523,6.147145,-4.291469,-8.004341,3.946998,6.495844,-3.239060],[-3.855580,-1.854826,2.826242,-5.863884,-8.857742,-8.110289,3.894223,-5.033132],[-2.558968,-1.117482,-9.282113,9.693913,8.178223,1.539555,-0.004556,-4.118898],[-7.423551,4.857806,8.119401,-8.031437,6.199372,4.548533,-2.060143,9.677238],[2.134216,-3.893751,9.710023,-0.223738,5.969671,9.507473,-9.547188,-3.476666],[-9.808937,-0.538990,-9.930872,-5.662268,8.741545,-2.329014,7.106161,-7.551601],[3.990941,2.990862,-0.101857,-8.267851,6.638163,-2.644276,8.691218,-7.267236],[-8.330221,5.707991,1.540162,-7.231056,-3.581672,-3.502542,3.069094,-7.375720],[-6.319873,1.533635,4.159009,-9.242260,4.696183,-8.468414,8.324822,1.219653],[4.875096,-7.162552,-2.422203,1.185821,6.571533,-4.383056,-2.932630,-1.485556]],[[-7.736103,-4.249148,4.616096,-6.132608,1.874880,5.928267,0.697004,-6.934160],[-0.381172,6.082042,6.748423,4.700893,2.093383,5.853718,-4.255707,-8.944120],[4.218458,-9.787022,8.031517,-6.941154,-0.794370,0.956893,-2.960152,-1.531399],[4.398435,6.086807,8.875157,6.090398,-4.839327,-4.126413,-2.142470,-6.663273],[9.655986,-0.362292,3.604392,6.709611,3.105030,-4.695797,-4.654549,-8.286203],[-0.596351,9.144496,-0.728789,-2.306041,5.706912,1.918231,8.695483,-6.000401],[-2.019926,5.397672,1.309244,8.898947,-4.398053,-8.135951,5.993156,-3.733208],[-0.441861,5.375689,-8.266363,6.231063,-3.950866,-6.635000,-8.670877,3.631604],[3.148956,2.143418,1.854729,8.699263,-0.254683,8.029297,-3.238129,9.009606],[2.340715,0.512921,6.152221,6.257918,3.573269,0.328631,-0.206497,1.940072],[-6.454558,-3.807321,3.897569,1.624331,8.352410,4.899527,-9.638559,-7.821519],[1.354743,3.954854,8.600646,9.368833,-5.352318,-3.382253,4.305624,5.052267],[-5.699343,6.426710,1.275118,1.441072,6.376093,5.652640,-6.235627,8.172612],[8.972883,-6.060160,-9.975767,-9.559496,-1.669723,3.748762,-0.898602,9.047686],[6.362947,-8.962636,4.658520,8.530019,0.628773,-5.650379,6.259296,8.522068]],[[3.519104,6.086854,8.303573,-7.172798,-9.558118,6.988528,-0.977333,-8.195060],[-8.031248,2.038272,-8.157416,-2.331542,0.333794,4.020142,1.714173,9.663401],[-8.311336,-5.965652,-2.049870,-0.669932,-8.834540,8.987233,-9.410141,-7.355144],[4.424314,0.981190,8.333620,2.753072,-1.206234,7.613302,9.342540,-7.478787],[4.187783,-3.990223,-1.029064,-4.457479,-9.275106,0.597482,7.588611,0.320126],[6.588779,7.099283,2.203913,2.986853,5.712417,4.031925,-9.725934,5.364031],[-0.824729,5.111438,-5.490466,7.881571,-9.305765,1.164264,4.284563,-1.550957],[2.815113,5.821588,-7.832134,4.093733,6.962858,-4.592632,-9.867275,1.259583],[0.107740,9.784918,-1.589199,7.538690,-3.005971,7.909819,4.284498,-6.049236],[6.945325,7.335660,5.612919,6.039892,8.484089,-0.207188,4.479582,-2.354890],[-6.923210,-9.123110,3.797980,3.755130,4.942388,0.267647,-0.782328,8.612847],[4.423569,6.272681,1.674035,1.964206,0.402237,5.414720,7.412238,4.422532],[4.803208,-5.338740,2.031401,-0.966361,-1.330815,-4.608526,-9.667458,-1.001218],[-9.524983,-4.915653,4.265101,3.713774,8.679020,4.610857,-0.621485,-9.353101],[1.687519,-9.962614,9.594850,3.055989,-8.518836,-9.613864,0.249848,-8.956735]],[[5.569990,-5.167713,-1.529807,7.931027,-0.864816,-2.632880,4.656388,-8.039259],[-9.530004,-4.017409,-0.051993,8.139568,5.817164,3.592758,3.583484,-3.376200],[-3.453294,4.002876,-1.687972,-4.336921,3.572356,-1.737373,7.487377,3.604645],[3.182023,8.378367,9.541725,5.740545,6.029723,-0.928018,-6.575020,2.272768],[7.397459,-2.006708,0.930533,-8.778476,8.110865,1.273928,4.490152,-9.798322],[-2.690302,-8.044569,0.241303,-4.014474,-5.914406,6.660017,-7.350353,6.739161],[9.196295,8.542829,-5.255226,3.861954,-5.281062,5.627769,-0.449031,1.597254],[1.526084,-7.630911,2.602143,8.585774,5.645852,-6.246697,6.882170,6.751464],[4.923508,7.383044,-1.647934,-1.007997,-6.603233,7.664899,1.002488,9.051509],[-9.242537,4.070564,0.191519,-3.506818,5.603324,-9.011074,-8.413041,3.800971],[-0.041612,-6.353753,-7.982579,-5.955832,-7.382481,5.976693,-0.829915,-6.649254],[-4.272677,-3.500027,7.022824,2.744527,9.152776,3.940391,5.595569,-4.202508],[-0.921420,4.887200,5.396338,9.936583,7.715783,6.823550,8.027698,-4.961928],[-3.659580,6.420894,7.841880,-1.826491,-5.775522,1.656691,2.129844,-7.307886],[-3.685529,-1.297499,6.008775,2.011032,-9.486848,-5.492295,-5.400107,8.190783]]], dtype = "float64")#candidate|8819|(15, 15, 8)|const|float64
const_8820 = relay.const([[[-4.470342,5.187874,9.697435,3.814699,-2.775017,-9.614349,-9.731956,-2.730887],[-8.750902,-4.665711,-3.034735,8.601107,-2.106413,3.189001,-1.221968,5.936485],[-8.721943,2.291359,-4.619523,-0.800087,7.752558,6.837997,7.761084,-2.061099],[7.732404,1.595373,8.542044,-8.631625,-3.632394,-8.920823,-3.864945,-5.855861],[-5.238053,0.944322,-8.092253,8.783388,-2.002237,1.688670,-9.564428,-5.646595],[-5.870059,6.809253,-8.006120,7.388080,-4.615319,6.769855,6.706514,5.982030],[9.411880,8.378682,-2.266421,-4.339396,0.955457,-0.917943,5.488093,-1.421855],[-0.670020,-7.334665,5.577255,7.028813,5.340228,6.135102,-6.656201,-9.467241],[5.112512,5.998706,0.277754,-1.329055,5.575239,-1.334718,0.556850,-6.123930],[3.994897,-3.302087,6.890377,-5.758137,-3.392019,0.290746,-4.315719,7.397913],[2.066448,0.769695,-3.072764,-5.338100,-2.828293,-4.455289,0.237567,9.451110],[6.847857,3.641127,7.917682,9.419163,8.592156,1.359098,1.134899,7.678165],[5.687104,7.840111,3.993213,-8.462542,-5.552607,6.859162,9.036521,-7.180220],[5.701446,1.177088,8.120948,-8.615897,-3.493115,-5.300341,-3.978858,-3.742492],[-7.130306,7.274243,8.778271,6.677127,2.970470,9.981176,9.089858,7.994713]],[[-6.279283,-9.860373,-6.525267,-8.897193,-9.036241,-4.704533,8.456320,-9.536734],[-7.991031,9.616555,9.450046,3.492628,6.446425,-5.090258,0.743802,7.330044],[-1.956145,4.524339,3.434708,4.332844,2.763884,-5.947214,5.526101,-0.946137],[4.577963,6.645372,4.857253,4.820595,-5.380813,7.128064,5.319875,0.845156],[-9.871656,-7.613644,-2.782629,4.111007,3.380189,-7.462422,0.943720,-2.779791],[-5.517616,4.609579,7.964082,0.709158,-6.649393,4.962012,2.837162,-5.584215],[8.196948,3.871159,-5.398910,4.654663,2.063332,-9.063621,1.519451,5.814607],[4.426726,8.203457,1.820628,-9.342673,8.945922,0.167328,-8.556568,6.036545],[6.597290,0.416751,4.264643,6.778257,0.314796,6.189013,7.823214,-1.047973],[-4.564160,0.814943,-1.525286,2.324931,2.390064,7.454780,-7.882772,4.451926],[9.804672,-4.599986,-6.793590,7.399916,6.830243,-0.191805,1.483627,3.504458],[-9.358322,3.568945,-1.940633,-5.294899,-8.959766,8.108531,-3.988826,-2.233008],[-8.141346,4.953926,-7.308673,-8.965171,4.609911,-7.690824,3.680053,-6.399631],[-4.564942,1.657161,5.256911,-7.938756,9.293143,-0.614006,8.039728,1.638645],[5.752861,-5.604335,-3.166964,-7.031065,5.100913,-7.330129,-7.859880,-2.222576]],[[9.182790,-5.380693,6.902421,-6.898326,-1.710280,6.519529,0.916535,4.310478],[2.570048,-3.410030,-9.995370,0.775108,-3.303402,1.750795,5.857459,1.735144],[0.473301,6.578162,7.362574,8.523035,-7.087260,7.267859,4.521994,4.560655],[-5.346661,-4.022843,-9.429016,-3.996440,-5.625172,9.334524,5.650047,-6.126192],[-4.279237,2.026570,3.617543,-4.535902,9.557878,6.868466,-7.894404,7.401704],[-1.039900,-4.648991,-7.157930,6.016940,-1.087071,-7.133743,-5.452179,-9.439991],[-7.078299,-5.542086,-3.114112,3.357036,-7.606282,-8.312863,5.211415,4.084527],[-8.426567,-0.228584,-4.533068,3.648577,3.514189,-2.419047,-3.549693,-9.892645],[-7.339723,-1.796858,5.711945,8.055948,-7.764527,4.451794,5.788905,7.239959],[-7.607918,-2.070039,-9.116988,1.360505,0.066849,6.979419,-6.310435,-1.048776],[-6.236643,6.000575,9.698517,9.831877,-7.557387,4.377163,3.112484,3.682843],[6.044743,-1.024403,0.935692,2.553589,4.249236,-5.783840,-2.877970,-1.387817],[8.103629,2.449393,-2.866109,-2.641933,9.503133,5.698712,0.556569,-7.311578],[-6.528881,-8.462342,-7.655639,6.119331,-4.267231,5.543930,-9.190609,1.439615],[3.797017,-4.373759,5.350136,-8.558779,3.415190,8.208919,2.057029,8.450118]],[[-7.402622,6.952162,1.819176,-7.482995,5.658778,-3.612643,7.923238,0.105053],[-0.618865,6.396244,5.224308,-6.337910,8.808320,8.429819,3.869807,-5.920093],[-4.080742,-1.073373,-9.343107,3.471759,-9.898727,-8.443866,7.560099,-6.690139],[1.327721,4.041692,-4.518648,1.173497,1.669656,-0.759113,1.236213,-7.138894],[-6.082616,3.037839,3.921233,-8.217062,9.871757,7.300963,9.191562,-6.426017],[9.002069,8.221481,-5.644481,0.940381,9.391362,-5.602978,6.505376,-3.414439],[-1.595769,-3.354105,-4.580512,3.173719,3.507823,-2.696072,0.270916,-1.143470],[-9.492595,-5.593570,-1.683246,-1.613350,3.662441,5.761385,8.505569,-7.872953],[8.807555,9.949629,-2.312974,1.678540,4.730530,-3.145487,2.075378,-8.704576],[-3.542215,-0.311651,-6.888546,-6.638625,5.675556,-8.054905,0.588166,-2.714408],[-5.083526,-9.500385,8.429032,-3.236975,5.075409,1.743826,6.572659,-5.935132],[-0.063719,0.059154,3.151518,-7.086812,5.932838,9.909525,3.427460,7.337036],[6.214197,-6.627674,-2.516697,5.366768,8.977950,-9.368801,-8.447588,-3.873987],[0.548964,-9.990481,1.429090,3.228147,3.031861,0.248547,1.995350,-9.009072],[-4.568776,0.527029,-3.403831,-2.358622,7.885153,-6.813683,2.749672,-8.342282]],[[-3.110889,7.446355,7.894862,-0.183967,4.551287,2.002006,0.920519,7.087949],[7.144341,-9.478503,-7.772574,8.833846,4.928218,6.165047,0.266342,0.317347],[-3.809076,5.679529,7.598822,9.609097,-6.989452,2.846880,-9.488349,9.721335],[6.327998,0.941120,8.521294,4.194118,0.146582,6.814090,-2.440411,-5.536785],[-0.410182,-8.936286,-7.864686,-1.482916,6.030060,-9.551101,7.709804,9.525733],[9.321032,-3.210922,8.710318,2.923875,-7.620448,1.914811,6.274879,-8.451120],[-8.577958,5.030906,-0.106082,6.124205,-7.880735,7.794862,0.474204,-2.816596],[-6.008681,8.656996,8.491080,-9.490713,-8.629366,-6.684607,2.044796,6.026961],[-6.234070,-6.175190,-3.951691,-0.277130,4.170900,-0.180614,-9.839317,6.646746],[3.563341,-7.520996,8.306697,8.865914,6.785708,7.827749,-4.546849,-5.266120],[-9.179602,7.250008,-5.177815,6.864273,6.353516,-7.212410,-8.016837,-7.428146],[4.113117,-0.024240,5.218855,-1.252623,-9.283914,-2.266143,-9.828328,8.043375],[1.571080,6.562652,-1.783460,-9.442735,8.009244,0.885231,-7.114803,5.188689],[-4.601173,8.053769,0.583891,-1.862596,5.839799,-0.596915,6.955657,-2.119720],[-1.791466,-9.720110,-7.606877,5.617757,-5.614604,-5.226415,-7.754198,-4.511065]],[[7.902878,6.998265,7.899917,-9.660810,-7.933639,-6.109473,-9.874699,-2.135038],[-7.660288,0.812794,7.963453,-5.909400,9.269081,5.008112,4.781953,7.628890],[3.193947,8.994640,-1.186060,6.669564,3.274431,9.271979,7.244437,-0.949251],[-9.516749,-8.555637,-9.329682,6.477883,1.143985,-7.998783,-9.135773,-8.901476],[-9.254542,-8.028139,1.624079,0.412310,9.768691,3.056465,-6.152480,4.460784],[5.399611,7.868473,-0.331043,-9.207310,3.677073,-1.462376,-6.205506,9.982068],[6.288118,1.963601,0.689430,9.588874,5.346017,6.909745,-8.998873,1.616946],[0.730191,-9.420189,2.812526,1.670437,9.545210,6.766162,-6.620141,-5.778773],[-2.626407,5.864633,-2.729042,5.703140,1.248207,5.587012,3.146683,6.934763],[7.662605,-8.179960,-4.970567,7.397876,-5.523272,6.460348,3.232541,-3.920031],[-3.605249,-3.646483,-5.779161,-4.409040,-0.151403,7.434316,-8.410457,-8.024975],[-2.907417,0.813073,0.333205,-9.730902,1.926811,-9.505543,2.718468,-4.842724],[-8.713818,-0.426973,-9.626700,-6.511128,8.679241,-3.463425,7.290323,3.277971],[-0.212040,-5.027227,-9.461605,9.500131,6.282761,-2.809729,-8.328670,-0.655452],[3.391591,0.485132,4.520538,6.732931,2.042058,5.944112,-0.362839,1.689162]],[[5.087763,-4.917399,-1.081827,8.760704,-4.524962,5.362643,-4.346063,1.745608],[-4.735089,-4.533173,4.006802,-0.248822,6.891853,0.509183,2.027644,-8.989966],[-0.506973,-8.042418,-4.409731,-2.559525,2.118032,4.407076,1.189289,-5.640430],[5.725757,-0.092998,-2.056818,-2.904378,-9.653370,8.336518,-8.008336,-0.579340],[3.717233,5.907926,-0.484708,-7.113684,5.569395,6.483582,-9.476224,9.714146],[-3.988707,-6.819720,-2.246024,6.934188,-7.319849,-3.991112,-2.055270,-3.899799],[1.384340,-0.332005,7.274802,-6.430956,-4.020577,-9.145440,1.708925,6.795515],[7.412867,-3.018445,-9.901920,-4.702193,-7.038422,0.886357,8.550224,-0.327481],[3.471470,-0.424023,2.733703,-3.703288,-6.785999,9.902549,-2.709111,-4.535880],[-6.146176,2.384135,-9.950596,-9.119460,7.502331,6.883070,6.612098,8.849553],[-4.037265,1.781280,-2.564963,-3.668004,-6.049396,-3.535790,-4.406808,-3.901059],[4.303891,3.230895,3.119950,5.845805,7.966601,9.490001,-4.234326,4.886741],[-1.720009,6.052344,-6.693585,-9.312668,0.258727,4.305340,1.460413,-1.342422],[-4.131035,-0.679943,2.168853,-5.345259,-5.778446,7.200861,-4.720023,-8.502255],[-7.272114,-4.575284,7.274547,7.705491,0.704599,-1.533713,1.074902,-9.306062]],[[-0.851526,4.250554,-8.834432,-2.399327,-3.391744,5.947393,-3.970363,7.552732],[0.666140,-0.784965,-7.064332,6.140622,-1.480824,-7.643730,5.435065,3.836859],[6.282404,9.196564,-1.925538,4.208258,-8.548966,-4.461498,-8.396565,3.916548],[5.721129,-8.123358,4.662826,7.887401,3.341297,9.962972,-1.127461,-7.805831],[-2.849705,9.863445,9.458226,2.854737,-1.372307,-4.975471,6.950299,-6.849930],[8.666842,3.627703,6.107629,5.308278,-4.562503,3.232956,2.636640,2.637036],[3.379011,5.239553,1.052834,-1.503606,-1.802084,-0.927887,-1.688909,-8.000260],[4.723093,3.399370,-7.377797,3.395441,9.265046,-7.090923,-3.330771,-7.501282],[-1.147008,-1.386037,-5.314470,7.711844,5.579633,0.785486,6.465893,-1.962265],[1.033502,6.022815,-4.068429,-9.970612,2.554975,-0.545776,-8.108953,1.785076],[-1.321776,-6.378475,0.404790,8.289099,3.335362,-1.995966,-2.338246,9.762029],[-8.691434,-4.445921,4.082506,7.544360,8.502068,-2.576939,-2.621342,-4.186384],[9.298040,-9.297244,0.264498,-2.106573,-3.336777,6.721158,3.056806,-6.821023],[4.607021,-4.005417,7.876186,4.258999,9.387394,5.478807,9.118558,4.583099],[-7.606253,3.486842,6.646438,2.578775,9.172562,7.519264,7.535648,-8.487998]],[[-0.886421,-9.766453,-2.936924,-0.996842,2.670709,-5.326233,2.790233,-4.972963],[3.110110,9.569804,2.998503,-1.806425,6.251547,5.236945,2.331691,7.145264],[-5.309026,0.859310,7.866259,-2.658011,7.673345,-0.266885,-8.051268,3.817979],[-8.861617,4.956356,6.691024,-4.016222,5.021468,0.260987,-4.167847,-4.646489],[-8.669849,0.204731,2.647423,2.969287,-8.380549,4.772158,-1.041695,-9.311899],[-2.769585,-8.595414,9.901911,-8.099872,-6.487910,2.922207,8.288331,7.931980],[-5.289789,1.466580,-7.502670,-6.326104,-5.914003,-1.809304,-5.381290,-7.683623],[-9.276310,-7.009773,0.311518,-2.728880,3.641028,-9.448580,4.509494,-7.300102],[4.581057,2.385649,-5.857568,-2.242641,9.272395,4.727393,-3.304110,-1.085996],[-6.592519,-1.139365,-9.422311,1.500062,8.240917,-7.696462,3.930621,-5.026531],[-7.160510,4.858357,3.744379,-7.161688,-3.194213,0.591107,3.811398,1.760108],[-8.022965,1.689122,-3.177595,-1.482749,9.612746,-3.424582,-3.528898,4.362007],[-0.218929,7.555198,-0.046813,-6.986079,-1.902901,6.632182,-8.194664,0.515502],[9.815574,6.774775,-3.478086,8.251298,-0.951014,-4.020651,-7.170314,8.554451],[-9.378038,-4.509739,-1.620731,3.034940,-1.119903,-2.156677,0.630501,-9.135673]],[[6.979813,-7.420797,9.366615,8.567922,8.284203,-5.974860,1.634517,-8.008545],[3.102785,-5.895484,-6.736270,-6.139372,6.393935,4.595046,-1.327702,1.596895],[1.978243,4.874654,6.034429,-2.545641,3.767983,-3.108427,-9.856538,-0.500575],[0.895694,-7.928197,7.236837,5.167194,7.863887,4.979277,-5.131702,2.895973],[6.360484,-3.993641,7.782113,2.913004,-3.377942,3.538442,7.220455,-7.197177],[8.164947,-9.037973,5.869254,0.317284,-5.833992,-9.622046,7.259380,-1.806215],[1.813511,2.165646,7.697528,9.890122,-4.390373,-1.038516,-6.934133,-3.737246],[8.165124,-7.422273,-5.440499,-0.191962,3.171443,1.089709,-7.517248,1.817723],[1.570266,7.281621,9.082733,-1.734882,8.475976,3.148033,7.536907,8.163345],[-7.886047,5.631002,0.960553,7.302087,-5.802089,9.831794,-2.860012,-4.885141],[7.021915,-7.916738,-2.251182,-5.634234,-4.319569,-4.591078,-4.558907,-5.225076],[2.814173,5.479265,9.297658,8.752888,-5.213688,5.976267,0.878579,-3.358477],[3.978806,-2.447489,8.429071,5.824011,-0.418519,7.803224,-5.820143,-2.708457],[6.467530,-4.439254,-0.058191,-6.511779,9.288277,-0.329761,-2.127869,1.890386],[7.637261,2.380062,6.778459,-3.650555,-0.361904,-5.374112,-5.044197,4.571369]],[[-8.937812,-1.872382,9.918834,3.313753,-2.888829,-5.419122,-6.787599,-9.877392],[4.900816,-3.294552,5.604668,-8.908747,-4.988539,-3.751255,6.816773,-1.957659],[0.053192,5.883005,-4.830867,3.077113,-2.932328,3.607753,-6.193432,-5.034949],[9.356435,-7.484978,-3.798274,7.506574,6.571959,3.828123,3.968210,-1.146637],[-7.254404,3.020629,5.920175,-7.102688,-0.833997,-9.029239,3.656675,-7.944853],[-4.398876,2.345718,-4.465322,8.804165,-4.331041,-7.423145,2.469112,2.750275],[-3.198749,-1.121966,1.439539,3.065420,-7.267708,-1.360310,1.415714,-1.954430],[3.328097,-1.135798,-5.652957,3.929179,-0.144568,-1.652382,0.494419,0.874016],[5.457481,2.599725,-3.724379,-5.214011,-6.416255,9.262295,-4.354250,7.421449],[9.168031,3.486371,-5.180493,1.228665,-5.030840,-6.651485,9.434574,-5.788338],[3.380517,9.194128,-2.576440,-4.384771,9.077764,-9.965173,7.606124,8.337835],[6.837132,9.637372,-9.153459,-9.412467,-4.923429,-2.498028,4.316391,-4.226226],[-3.660272,-5.407245,-9.093166,6.356908,-4.733554,5.901164,-4.353237,1.039204],[5.767860,1.934767,5.884011,-7.286854,-3.686275,5.521419,4.875558,-2.895107],[6.830887,9.380474,7.469430,7.182912,-8.159766,8.247005,-1.868919,6.542936]],[[7.767741,3.086555,-8.411375,0.410389,-2.175928,-0.036505,-2.336156,4.806913],[-6.560941,0.907570,7.555064,4.779662,3.608306,-7.275986,6.261164,3.847755],[-2.991923,2.302525,3.395925,5.905347,5.710581,0.586616,-2.837239,-5.912773],[2.178307,-1.730177,-0.107952,2.845107,2.826290,0.525866,4.711054,4.311799],[6.073077,-5.259872,3.852330,-5.706276,-5.145318,4.997509,-3.367102,3.980876],[4.904444,7.001595,9.441885,-5.524866,-9.932198,-6.451605,-5.613821,-0.689639],[-9.134076,-5.992731,-5.942488,7.174787,8.958611,-2.451586,-4.427840,3.934591],[4.143476,7.901118,0.522631,8.951153,-5.387092,2.615110,-0.039212,-9.282548],[9.294335,-6.294445,-0.388689,-8.894524,-2.327106,3.715256,-3.633062,6.427409],[0.309078,-6.067813,-0.188498,6.280006,1.845488,7.413075,-5.311353,1.000179],[7.503833,5.967105,4.139302,8.458374,-9.326128,-5.102131,2.914380,2.363738],[-3.598782,-6.205235,3.469396,6.414270,-7.559291,-8.584474,2.780107,-3.741478],[-1.778831,-7.746438,6.294541,4.797400,-6.132966,-7.794254,5.581922,1.458273],[-9.372193,-6.642149,4.616265,-8.712473,7.009008,-4.672158,-9.948684,5.932856],[-9.438101,-4.362336,2.545504,-9.402308,6.946217,2.392702,-7.397510,0.216824]],[[-4.818142,-6.713141,7.853943,-1.102002,-2.694130,9.625873,5.046110,3.570123],[-2.300156,-1.841489,4.763653,-2.965708,2.932151,-4.001514,-2.611062,-0.715606],[3.037119,-2.939846,-5.595604,8.594860,8.127023,4.544823,0.919672,-6.279546],[4.107493,0.304109,6.811980,9.969506,-8.705596,-8.491082,5.896064,3.945477],[-9.196667,-1.038237,-1.627043,5.136446,-2.530103,6.767550,6.932648,-5.072718],[-4.587278,0.589674,1.436622,-0.841402,-2.122846,-4.129334,-1.172075,0.345806],[9.577828,9.383650,2.193663,4.554455,8.282223,-6.648383,-0.914560,7.458320],[-5.275397,1.298761,-6.445708,3.011022,-6.838965,-0.078907,-7.158671,1.168052],[3.233960,0.782208,5.701849,6.258522,1.932805,1.347976,-4.752701,-5.267270],[-2.345633,-4.722069,-4.940721,2.008079,2.955316,6.520468,1.794100,5.709534],[7.458141,-0.266188,5.369619,8.440774,3.443218,-8.715224,-0.761518,-3.881065],[-3.435829,9.559687,4.479900,-4.532028,-8.695502,-3.642729,-5.872735,6.697579],[-6.370311,6.125569,0.039494,1.598404,0.634247,-6.987501,-9.187318,-3.082132],[7.619679,5.794707,7.271991,2.943423,3.502607,7.868461,0.647877,2.070801],[-0.988828,2.315811,-2.466715,-8.686021,-9.081617,0.469960,-0.104509,-6.172522]],[[0.518247,-2.269281,0.890106,-6.823194,5.458053,-0.508604,-6.503917,-8.372081],[-0.372413,-0.680145,-9.872437,0.660077,1.509472,-9.019707,-9.949450,2.367730],[-0.903416,-5.265286,0.878356,4.416700,1.437845,4.898932,9.436203,-6.702562],[0.262312,-3.525429,-7.265874,1.278221,-2.308277,9.664082,-9.050587,-8.108718],[-8.448672,-0.143564,-2.522228,-1.207640,1.540403,8.910056,0.445142,6.840223],[0.629281,5.097193,6.508771,0.600118,-5.578710,-0.403177,-0.806066,2.439721],[-6.890109,-4.863618,1.087950,-6.811617,3.040064,-6.974368,9.454221,4.608810],[6.450094,-5.358405,8.781849,3.062900,-5.286012,-9.745241,-0.172548,3.722653],[8.480528,7.170505,-3.131048,-8.975513,-9.749033,1.269492,-6.440390,-4.055964],[0.832789,-3.716266,-5.530197,-4.829581,7.925996,1.571794,-6.946061,-1.255043],[8.871021,3.813169,4.193347,5.426684,-5.478740,-8.485335,3.351820,-0.608046],[5.708415,-0.340541,-3.545893,5.636421,3.764879,-5.564746,5.209779,-9.042044],[-0.119796,9.340442,4.033058,0.044763,8.305031,-7.770430,-1.924770,3.057678],[6.275900,-5.584947,-3.188134,0.820138,-0.824982,3.273393,0.846936,-4.454550],[2.212318,1.186252,-3.481602,-8.706053,-6.032319,9.899210,-2.082092,5.566157]],[[-1.210257,9.014536,6.755483,-8.942679,-3.356962,8.876774,7.421109,-4.864174],[0.311941,2.069712,-5.728957,8.009579,-7.591546,-2.884418,2.736674,-6.761726],[7.536235,-1.705399,3.368828,-8.215978,3.222848,3.944600,-7.908391,7.290387],[3.944777,0.672737,3.362372,5.661284,6.673355,-2.426736,0.584426,-2.444309],[-1.034185,9.515067,-3.409783,-7.751822,8.772319,-1.924125,7.950873,-9.044541],[9.951249,-8.243158,-5.445024,-7.241651,7.443213,9.667972,-9.965682,1.086995],[-0.289696,-2.913874,0.024465,-7.845068,-1.065077,-4.955872,7.589436,-0.768226],[-1.159944,2.590961,-0.055456,0.367651,-1.643805,-1.003754,-1.613665,2.747554],[-8.543292,1.528541,-1.110992,2.523551,4.918960,-5.861229,-7.044996,7.674903],[-1.447024,4.768901,-9.974629,-7.587056,5.699563,4.004611,0.242153,8.963866],[-8.374996,4.007148,-3.943543,6.303698,-5.439801,-5.140218,8.066113,6.178565],[-1.880650,-4.685547,2.208250,1.238056,-9.231295,2.792628,-1.264397,6.682526],[1.992508,5.594349,9.725771,6.193651,9.685629,-4.309099,1.256809,-7.791156],[2.091062,1.200000,8.684698,8.013071,8.510057,9.696939,1.153072,7.395598],[3.253506,6.834593,7.096762,-9.121817,-2.265593,9.451457,9.431828,-2.932940]]], dtype = "float64")#candidate|8820|(15, 15, 8)|const|float64
bop_8821 = relay.not_equal(const_8819.astype('bool'), relay.reshape(const_8820.astype('bool'), relay.shape_of(const_8819))) # shape=(15, 15, 8)
output = bop_8821
output2 = bop_8821
F = relay.Function([], output)
mod['main'] = F
mod = relay.transform.InferType()(mod)
print('==========mod==========')
print(mod.astext(show_meta_data=False))
print('===================================')
F = relay.Function([], output2)
mutated_mod['main'] = F
mutated_mod = relay.transform.InferType()(mutated_mod)
print('==========mutated_mod==========')
print(mutated_mod.astext(show_meta_data=False))
print('===================================')
graph, lib, params = relay.build(mod, target='llvm')
module1 = graph_runtime.create(graph, lib, tvm.device('llvm',0))
intrp2 = relay.build_module.create_executor('graph', mod, tvm.device('llvm',0),'llvm')
intrp3 = relay.build_module.create_executor('debug', mod, tvm.device('llvm',0),'llvm')
intrp4 = relay.build_module.create_executor('vm', mod, tvm.device('llvm',0),'llvm')
graph, lib, params = relay.build(mod, target='cuda')
module5 = graph_runtime.create(graph, lib, tvm.device('cuda',0))
intrp6 = relay.build_module.create_executor('graph', mod, tvm.device('cuda',0),'cuda')
intrp7 = relay.build_module.create_executor('debug', mod, tvm.device('cuda',0),'cuda')
intrp8 = relay.build_module.create_executor('vm', mod, tvm.device('cuda',0),'cuda')
seq = Sequential([
	relay.transform.AlterOpLayout(),
	relay.transform.AnnotateSpans(),
	relay.transform.BatchingOps(),
])
mod = seq(mod)
print(mod.astext(show_meta_data=False))
graph, lib, params = relay.build(mod, target='llvm')
module9 = graph_runtime.create(graph, lib, tvm.device('llvm',0))
intrp10 = relay.build_module.create_executor('graph', mod, tvm.device('llvm',0),'llvm')
intrp11 = relay.build_module.create_executor('debug', mod, tvm.device('llvm',0),'llvm')
intrp12 = relay.build_module.create_executor('vm', mod, tvm.device('llvm',0),'llvm')
graph, lib, params = relay.build(mod, target='cuda')
module13 = graph_runtime.create(graph, lib, tvm.device('cuda',0))
intrp14 = relay.build_module.create_executor('graph', mod, tvm.device('cuda',0),'cuda')
intrp15 = relay.build_module.create_executor('debug', mod, tvm.device('cuda',0),'cuda')
intrp16 = relay.build_module.create_executor('vm', mod, tvm.device('cuda',0),'cuda')
graph, lib, params = relay.build(mutated_mod, target='llvm')
module17 = graph_runtime.create(graph, lib, tvm.device('llvm',0))
intrp18 = relay.build_module.create_executor('graph', mutated_mod, tvm.device('llvm',0),'llvm')
intrp19 = relay.build_module.create_executor('debug', mutated_mod, tvm.device('llvm',0),'llvm')
intrp20 = relay.build_module.create_executor('vm', mutated_mod, tvm.device('llvm',0),'llvm')
graph, lib, params = relay.build(mutated_mod, target='cuda')
module21 = graph_runtime.create(graph, lib, tvm.device('cuda',0))
intrp22 = relay.build_module.create_executor('graph', mutated_mod, tvm.device('cuda',0),'cuda')
intrp23 = relay.build_module.create_executor('debug', mutated_mod, tvm.device('cuda',0),'cuda')
intrp24 = relay.build_module.create_executor('vm', mutated_mod, tvm.device('cuda',0),'cuda')

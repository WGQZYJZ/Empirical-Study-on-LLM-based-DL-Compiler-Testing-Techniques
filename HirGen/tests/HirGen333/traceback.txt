==========mod==========
#[version = "0.0.5"]
def @func_5527(%var_5515: int32) -> (Tensor[(14, 16, 3), float32], Tensor[(2, 4, 2), bool], Tensor[(15, 4), int32], Tensor[(4, 1, 14), int64]) {
  %0 = @func_4278() /* ty=(Tensor[(14, 16, 3), float32],) */;
  %1 = @func_4384() /* ty=(Tensor[(14, 16, 3), float32], Tensor[(14, 16, 3), float32], Tensor[(2, 4, 2), bool], Tensor[(16), uint16]) */;
  %2 = cast(%var_5515, dtype="int32") /* ty=int32 */;
  %3 = cast(meta[relay.Constant][0] /* ty=Tensor[(15, 4), int32] */, dtype="int32") /* ty=Tensor[(15, 4), int32] */;
  %4 = reshape(%2, newshape=[]) /* ty=int32 */;
  %5 = reshape(%3, newshape=[10, 6, 1]) /* ty=Tensor[(10, 6, 1), int32] */;
  %6 = @func_5004(%4, %5) /* ty=(Tensor[(10, 6, 1), int32], Tensor[(10, 6, 1), float64], Tensor[(4, 1, 14), float64], Tensor[(14, 16, 3), float32]) */;
  %7 = %6.2;
  %8 = cast(%7, dtype="int64") /* ty=Tensor[(4, 1, 14), int64] */;
  %9 = cast(%var_5515, dtype="int64") /* ty=int64 */;
  %10 = %0.0;
  %11 = %1.2;
  %12 = bitwise_or(%8, %9) /* ty=Tensor[(4, 1, 14), int64] */;
  (%10, %11, meta[relay.Constant][0] /* ty=Tensor[(15, 4), int32] */, %12)
}

def @func_2393(%var_2378: Tensor[(2, 5, 1), float64]) -> (Tensor[(2, 5, 1), float64], Tensor[(14, 3, 13), float64], Tensor[(546), uint32]) {
  %13 = cast(%var_2378, dtype="float64") /* ty=Tensor[(2, 5, 1), float64] */;
  %14 = cast(meta[relay.Constant][1] /* ty=Tensor[(546), uint32] */, dtype="uint32") /* ty=Tensor[(546), uint32] */;
  %15 = reshape(%14, newshape=[14, 3, 13]) /* ty=Tensor[(14, 3, 13), uint32] */;
  %16 = @func_2234(%15) /* ty=(Tensor[(14, 3, 13), uint32], Tensor[(14, 3, 13), float64]) */;
  %17 = acos(%13) /* ty=Tensor[(2, 5, 1), float64] */;
  %18 = %16.1;
  (%17, %18, meta[relay.Constant][1] /* ty=Tensor[(546), uint32] */)
}

def @func_5778() -> (Tensor[(14, 16, 3), float32],) {
  %19 = @func_3976() /* ty=Tensor[(14, 16, 3), float32] */;
  (%19,)
}

def @func_2053(%var_2024: Tensor[(6, 15, 8), float32], %var_2032: Tensor[(112), float32]) -> (Tensor[(6, 15, 8), float32], Tensor[(14, 2, 4), int8], Tensor[(112), float32], Tensor[(2, 4, 2), bool], Tensor[(16), uint16]) {
  %20 = cast(%var_2024, dtype="float32") /* ty=Tensor[(6, 15, 8), float32] */;
  %21 = cast(%var_2032, dtype="float32") /* ty=Tensor[(112), float32] */;
  %22 = cast(%var_2032, dtype="float32") /* ty=Tensor[(112), float32] */;
  %23 = reshape(%21, newshape=[14, 2, 4]) /* ty=Tensor[(14, 2, 4), float32] */;
  %24 = reshape(%22, newshape=[14, 2, 4]) /* ty=Tensor[(14, 2, 4), float32] */;
  %25 = @func_1482(%23, %24) /* ty=(Tensor[(14, 2, 4), float32], Tensor[(14, 2, 4), int8]) */;
  %26 = cast(meta[relay.Constant][2] /* ty=Tensor[(16), uint16] */, dtype="uint16") /* ty=Tensor[(16), uint16] */;
  %27 = reshape(%26, newshape=[2, 4, 2]) /* ty=Tensor[(2, 4, 2), uint16] */;
  %28 = @func_362(%27) /* ty=(Tensor[(2, 4, 2), bool],) */;
  %29 = sqrt(%20) /* ty=Tensor[(6, 15, 8), float32] */;
  %30 = %25.1;
  %31 = %28.0;
  (%29, %30, %var_2032, %31, meta[relay.Constant][2] /* ty=Tensor[(16), uint16] */)
}

def @func_8006(%var_7978: Tensor[(11, 3, 7), bool], %var_7979: Tensor[(11, 3, 7), bool], %var_7999: int32, %var_8000: Tensor[(60), int32], %var_8001: Tensor[(375), float64]) -> (Tensor[(11, 3, 7), bool], Tensor[(56), float64], Tensor[(14, 16, 3), float32], int32, Tensor[(60), int32], Tensor[(375), float64]) {
  %32 = cast(%var_7979, dtype="bool") /* ty=Tensor[(11, 3, 7), bool] */;
  %33 = shape_of(%var_7978, dtype="int32") /* ty=Tensor[(3), int32] */;
  %34 = cast(%var_7978, dtype="bool") /* ty=Tensor[(11, 3, 7), bool] */;
  %35 = dyn.reshape(%32, %33, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %36 = cast(%var_7999, dtype="int32") /* ty=int32 */;
  %37 = cast(%var_8000, dtype="int32") /* ty=Tensor[(60), int32] */;
  %38 = @func_4544() /* ty=Tensor[(56), float64] */;
  %39 = cast(%38, dtype="float64") /* ty=Tensor[(56), float64] */;
  %40 = cast(%var_8001, dtype="float64") /* ty=Tensor[(375), float64] */;
  %41 = reshape(%36, newshape=[]) /* ty=int32 */;
  %42 = reshape(%37, newshape=[60]) /* ty=Tensor[(60), int32] */;
  %43 = reshape(%39, newshape=[56]) /* ty=Tensor[(56), float64] */;
  %44 = reshape(%40, newshape=[375]) /* ty=Tensor[(375), float64] */;
  %45 = @func_5670(%41, %42, %43, %44) /* ty=(Tensor[(14, 16, 3), float32], Tensor[(14, 16, 3), float32], int32, Tensor[(60), int32], Tensor[(14, 16, 3), float32], Tensor[(15, 9, 5), float32], Tensor[(675), float32], Tensor[(56), float64], Tensor[(15, 5, 5), bool], Tensor[(375), float64]) */;
  %46 = logical_or(%34, %35) /* ty=Tensor[(11, 3, 7), bool] */;
  %47 = %45.4;
  (%46, %38, %47, %var_7999, %var_8000, %var_8001)
}

def @func_8119(%var_8111: int32, %var_8113: Tensor[(14, 4), float64], %var_8114: Tensor[(375), float64]) -> (Tensor[(2, 4, 2), bool], Tensor[(14, 16, 3), float32], Tensor[(14, 16, 3), float32], Tensor[(720), float32], Tensor[(112), float32], Tensor[(5, 11, 11), bool], Tensor[(605), int32], Tensor[(675), float32], int32, Tensor[(60), int32], Tensor[(14, 4), float64], Tensor[(375), float64]) {
  %48 = @func_4384() /* ty=(Tensor[(14, 16, 3), float32], Tensor[(14, 16, 3), float32], Tensor[(2, 4, 2), bool], Tensor[(16), uint16]) */;
  %49 = cast(meta[relay.Constant][3] /* ty=Tensor[(720), float32] */, dtype="float32") /* ty=Tensor[(720), float32] */;
  %50 = cast(meta[relay.Constant][4] /* ty=Tensor[(112), float32] */, dtype="float32") /* ty=Tensor[(112), float32] */;
  %51 = reshape(%49, newshape=[360, 2]) /* ty=Tensor[(360, 2), float32] */;
  %52 = reshape(%50, newshape=[28, 4]) /* ty=Tensor[(28, 4), float32] */;
  %53 = @func_3780(%51, %52) /* ty=(Tensor[(14, 16, 3), float32], Tensor[(6, 15, 8), float32], Tensor[(28, 4), float32], Tensor[(14, 16, 3), float32], Tensor[(360, 2), float32]) */;
  %54 = cast(meta[relay.Constant][5] /* ty=Tensor[(605), int32] */, dtype="int32") /* ty=Tensor[(605), int32] */;
  %55 = cast(meta[relay.Constant][5] /* ty=Tensor[(605), int32] */, dtype="int32") /* ty=Tensor[(605), int32] */;
  %56 = reshape(%54, newshape=[5, 11, 11]) /* ty=Tensor[(5, 11, 11), int32] */;
  %57 = reshape(%55, newshape=[5, 11, 11]) /* ty=Tensor[(5, 11, 11), int32] */;
  %58 = @func_2102(%56, %57) /* ty=(Tensor[(5, 11, 11), bool],) */;
  %59 = cast(%var_8111, dtype="int32") /* ty=int32 */;
  %60 = cast(meta[relay.Constant][6] /* ty=Tensor[(60), int32] */, dtype="int32") /* ty=Tensor[(60), int32] */;
  %61 = cast(%var_8113, dtype="float64") /* ty=Tensor[(14, 4), float64] */;
  %62 = cast(%var_8114, dtype="float64") /* ty=Tensor[(375), float64] */;
  %63 = reshape(%59, newshape=[]) /* ty=int32 */;
  %64 = reshape(%60, newshape=[60]) /* ty=Tensor[(60), int32] */;
  %65 = reshape(%61, newshape=[56]) /* ty=Tensor[(56), float64] */;
  %66 = reshape(%62, newshape=[375]) /* ty=Tensor[(375), float64] */;
  %67 = @func_5670(%63, %64, %65, %66) /* ty=(Tensor[(14, 16, 3), float32], Tensor[(14, 16, 3), float32], int32, Tensor[(60), int32], Tensor[(14, 16, 3), float32], Tensor[(15, 9, 5), float32], Tensor[(675), float32], Tensor[(56), float64], Tensor[(15, 5, 5), bool], Tensor[(375), float64]) */;
  %68 = %48.2;
  %69 = @func_6340() /* ty=Tensor[(14, 16, 3), float32] */;
  %70 = %53.0;
  %71 = %58.0;
  %72 = %67.6;
  (%68, %69, %70, meta[relay.Constant][3] /* ty=Tensor[(720), float32] */, meta[relay.Constant][4] /* ty=Tensor[(112), float32] */, %71, meta[relay.Constant][5] /* ty=Tensor[(605), int32] */, %72, %var_8111, meta[relay.Constant][6] /* ty=Tensor[(60), int32] */, %var_8113, %var_8114)
}

def @func_7754() -> (Tensor[(14, 16, 3), float32],) {
  %73 = @func_6316() /* ty=(Tensor[(14, 16, 3), float32], Tensor[(14, 16, 3), float32]) */;
  %74 = %73.1;
  (%74,)
}

def @func_3153() -> Tensor[(14, 16, 3), float32] {
  %75 = cast(meta[relay.Constant][7] /* ty=Tensor[(14, 16, 3), float32] */, dtype="float32") /* ty=Tensor[(14, 16, 3), float32] */;
  rsqrt(%75) /* ty=Tensor[(14, 16, 3), float32] */
}

def @func_3264() -> Tensor[(14, 16, 3), float32] {
  @func_3153() /* ty=Tensor[(14, 16, 3), float32] */
}

def @func_4709() -> (Tensor[(14, 16, 3), float32],) {
  %76 = @func_4496() /* ty=Tensor[(14, 16, 3), float32] */;
  (%76,)
}

def @func_6221(%var_6199: Tensor[(12, 1, 13), float32], %var_6203: Tensor[(3, 30), uint16]) -> (Tensor[(3, 30), uint8], Tensor[(12, ?, 13), bool]) {
  %77 = cast(%var_6203, dtype="uint16") /* ty=Tensor[(3, 30), uint16] */;
  %78 = reshape(%77, newshape=[3, 6, 5]) /* ty=Tensor[(3, 6, 5), uint16] */;
  %79 = @func_5228(%78) /* ty=Tensor[(3, 6, 5), bool] */;
  %80 = cast(%79, dtype="uint8") /* ty=Tensor[(3, 6, 5), uint8] */;
  %81 = shape_of(%var_6203, dtype="int32") /* ty=Tensor[(2), int32] */;
  %82 = cast(%var_6203, dtype="uint8") /* ty=Tensor[(3, 30), uint8] */;
  %83 = dyn.reshape(%80, %81, newshape=[]) /* ty=Tensor[(?, ?), uint8] */;
  %84 = cast(%var_6199, dtype="float32") /* ty=Tensor[(12, 1, 13), float32] */;
  %85 = asin(%84) /* ty=Tensor[(12, 1, 13), float32] */;
  %86 = cast(%var_6199, dtype="bool") /* ty=Tensor[(12, 1, 13), bool] */;
  %87 = shape_of(%85, dtype="int32") /* ty=Tensor[(3), int32] */;
  %88 = cast(%85, dtype="bool") /* ty=Tensor[(12, 1, 13), bool] */;
  %89 = dyn.reshape(%86, %87, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %90 = less_equal(%88, %89) /* ty=Tensor[(12, ?, 13), bool] */;
  %91 = cast(%var_6199, dtype="bool") /* ty=Tensor[(12, 1, 13), bool] */;
  %92 = shape_of(%90, dtype="int32") /* ty=Tensor[(3), int32] */;
  %93 = cast(%90, dtype="bool") /* ty=Tensor[(12, ?, 13), bool] */;
  %94 = dyn.reshape(%91, %92, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %95 = bitwise_xor(%82, %83) /* ty=Tensor[(3, 30), uint8] */;
  %96 = equal(%93, %94) /* ty=Tensor[(12, ?, 13), bool] */;
  (%95, %96)
}

def @func_6627() -> Tensor[(14, 16, 3), float32] {
  @func_3969() /* ty=Tensor[(14, 16, 3), float32] */
}

def @func_328(%var_290: Tensor[(11, 11, 10), uint64], %var_291: Tensor[(11, 11, 10), uint64], %var_303: Tensor[(8, 88), float32], %var_312: Tensor[(10), float32]) -> (Tensor[(11, 11, 10), bool], Tensor[(16, 4, 11), float32], Tensor[(8, 88), float32], Tensor[(16, 4, 11), float32], Tensor[(10), float32], Tensor[(375), float64]) {
  %97 = cast(%var_291, dtype="bool") /* ty=Tensor[(11, 11, 10), bool] */;
  %98 = shape_of(%var_290, dtype="int32") /* ty=Tensor[(3), int32] */;
  %99 = cast(%var_290, dtype="bool") /* ty=Tensor[(11, 11, 10), bool] */;
  %100 = dyn.reshape(%97, %98, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %101 = greater_equal(%99, %100) /* ty=Tensor[(11, 11, 10), bool] */;
  %102 = cast(%101, dtype="bool") /* ty=Tensor[(11, 11, 10), bool] */;
  %103 = shape_of(%var_291, dtype="int32") /* ty=Tensor[(3), int32] */;
  %104 = cast(%var_291, dtype="bool") /* ty=Tensor[(11, 11, 10), bool] */;
  %105 = dyn.reshape(%102, %103, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %106 = cast(%var_303, dtype="float32") /* ty=Tensor[(8, 88), float32] */;
  %107 = reshape(%106, newshape=[16, 4, 11]) /* ty=Tensor[(16, 4, 11), float32] */;
  %108 = @func_84(%107) /* ty=(Tensor[(16, 4, 11), float32],) */;
  %109 = cast(%var_312, dtype="float32") /* ty=Tensor[(10), float32] */;
  %110 = cast(meta[relay.Constant][8] /* ty=Tensor[(375), float64] */, dtype="float64") /* ty=Tensor[(375), float64] */;
  %111 = reshape(%109, newshape=[10, 1, 1]) /* ty=Tensor[(10, 1, 1), float32] */;
  %112 = reshape(%110, newshape=[375]) /* ty=Tensor[(375), float64] */;
  %113 = @func_256(%111, %112) /* ty=(Tensor[(16, 4, 11), float32], Tensor[(704), float32], Tensor[(15, 5, 5), bool], Tensor[(15, 5, 5), bool], Tensor[(10, 1, 375), int64], Tensor[(16, 4, 11), float32], Tensor[(10, 1, 1), float32]) */;
  %114 = less(%104, %105) /* ty=Tensor[(11, 11, 10), bool] */;
  %115 = %108.0;
  %116 = %113.5;
  (%114, %115, %var_303, %116, %var_312, meta[relay.Constant][8] /* ty=Tensor[(375), float64] */)
}

def @func_8353() -> Tensor[(14, 16, 3), float32] {
  %117 = @func_3801() /* ty=(Tensor[(14, 16, 3), float32], Tensor[(4, 1, 14), float64], Tensor[(56), float64]) */;
  %117.0
}

def @func_7295() -> Tensor[(14, 16, 3), float32] {
  %118 = @func_5060() /* ty=(Tensor[(14, 16, 3), float32], Tensor[(14, 16, 3), float32]) */;
  %118.1
}

def @func_1852(%var_1790: int16, %var_1791: Tensor[(2, 14, 9), int16], %var_1816: Tensor[(675), float32]) -> (Tensor[(2, 14, 9), int16], Tensor[(56), float64], Tensor[(675), float32], Tensor[(56), float64], Tensor[(16, 4, 11), float32], Tensor[(10), float32], Tensor[(375), float64], Tensor[(4, 1, 14), float64]) {
  %119 = cast(%var_1790, dtype="int16") /* ty=int16 */;
  %120 = cast(%var_1791, dtype="int16") /* ty=Tensor[(2, 14, 9), int16] */;
  %121 = cast(%var_1816, dtype="float32") /* ty=Tensor[(675), float32] */;
  %122 = cast(%var_1816, dtype="float32") /* ty=Tensor[(675), float32] */;
  %123 = cast(meta[relay.Constant][9] /* ty=Tensor[(56), float64] */, dtype="float64") /* ty=Tensor[(56), float64] */;
  %124 = reshape(%121, newshape=[15, 9, 5]) /* ty=Tensor[(15, 9, 5), float32] */;
  %125 = reshape(%122, newshape=[15, 9, 5]) /* ty=Tensor[(15, 9, 5), float32] */;
  %126 = reshape(%123, newshape=[56]) /* ty=Tensor[(56), float64] */;
  %127 = @func_1368(%124, %125, %126) /* ty=(Tensor[(15, 9, 5), float32], Tensor[(4, 1, 14), float64], Tensor[(56), float64]) */;
  %128 = cast(meta[relay.Constant][10] /* ty=Tensor[(10), float32] */, dtype="float32") /* ty=Tensor[(10), float32] */;
  %129 = cast(meta[relay.Constant][11] /* ty=Tensor[(375), float64] */, dtype="float64") /* ty=Tensor[(375), float64] */;
  %130 = reshape(%128, newshape=[10, 1, 1]) /* ty=Tensor[(10, 1, 1), float32] */;
  %131 = reshape(%129, newshape=[375]) /* ty=Tensor[(375), float64] */;
  %132 = @func_256(%130, %131) /* ty=(Tensor[(16, 4, 11), float32], Tensor[(704), float32], Tensor[(15, 5, 5), bool], Tensor[(15, 5, 5), bool], Tensor[(10, 1, 375), int64], Tensor[(16, 4, 11), float32], Tensor[(10, 1, 1), float32]) */;
  %133 = %127.2;
  %134 = cast(%133, dtype="float64") /* ty=Tensor[(56), float64] */;
  %135 = reshape(%134, newshape=[4, 1, 14]) /* ty=Tensor[(4, 1, 14), float64] */;
  %136 = maximum(%119, %120) /* ty=Tensor[(2, 14, 9), int16] */;
  %137 = %132.5;
  %138 = @func_801(%135) /* ty=Tensor[(4, 1, 14), float64] */;
  (%136, %133, %var_1816, meta[relay.Constant][9] /* ty=Tensor[(56), float64] */, %137, meta[relay.Constant][10] /* ty=Tensor[(10), float32] */, meta[relay.Constant][11] /* ty=Tensor[(375), float64] */, %138)
}

def @func_3051(%var_3042: float64, %var_3043: Tensor[(11, 7, 13), float64]) -> (Tensor[(11, 7, 13), float64], Tensor[(704), float32], Tensor[(375), float64]) {
  %139 = cast(%var_3042, dtype="float64") /* ty=float64 */;
  %140 = cast(%var_3043, dtype="float64") /* ty=Tensor[(11, 7, 13), float64] */;
  %141 = cast(meta[relay.Constant][12] /* ty=Tensor[(375), float64] */, dtype="float64") /* ty=Tensor[(375), float64] */;
  %142 = reshape(%141, newshape=[15, 5, 5]) /* ty=Tensor[(15, 5, 5), float64] */;
  %143 = @func_135(%142) /* ty=(Tensor[(16, 4, 11), float32], Tensor[(704), float32], Tensor[(15, 5, 5), bool], Tensor[(16, 4, 11), float32], Tensor[(16, 4, 11), float32], Tensor[(15, 5, 5), bool]) */;
  %144 = mod(%139, %140) /* ty=Tensor[(11, 7, 13), float64] */;
  %145 = %143.1;
  (%144, %145, meta[relay.Constant][12] /* ty=Tensor[(375), float64] */)
}

def @func_7093(%var_7072: Tensor[(704), float32]) -> (Tensor[(14, 16, 3), float32], Tensor[(14, 16, 3), int64], Tensor[(16, 4, 11), float32], Tensor[(1210), uint64], Tensor[(704), float32], Tensor[(5, 2), float32], Tensor[(10, 8, 3), float32], Tensor[(14, 16, 3), float32]) {
  %146 = @func_4709() /* ty=(Tensor[(14, 16, 3), float32],) */;
  %147 = %146.0;
  %148 = cast(%147, dtype="float32") /* ty=Tensor[(14, 16, 3), float32] */;
  %149 = reshape(%148, newshape=[14, 16, 3]) /* ty=Tensor[(14, 16, 3), float32] */;
  %150 = cast(meta[relay.Constant][13] /* ty=Tensor[(1210), uint64] */, dtype="uint64") /* ty=Tensor[(1210), uint64] */;
  %151 = cast(meta[relay.Constant][13] /* ty=Tensor[(1210), uint64] */, dtype="uint64") /* ty=Tensor[(1210), uint64] */;
  %152 = cast(%var_7072, dtype="float32") /* ty=Tensor[(704), float32] */;
  %153 = cast(meta[relay.Constant][14] /* ty=Tensor[(5, 2), float32] */, dtype="float32") /* ty=Tensor[(5, 2), float32] */;
  %154 = reshape(%150, newshape=[11, 11, 10]) /* ty=Tensor[(11, 11, 10), uint64] */;
  %155 = reshape(%151, newshape=[11, 11, 10]) /* ty=Tensor[(11, 11, 10), uint64] */;
  %156 = reshape(%152, newshape=[8, 88]) /* ty=Tensor[(8, 88), float32] */;
  %157 = reshape(%153, newshape=[10]) /* ty=Tensor[(10), float32] */;
  %158 = @func_328(%154, %155, %156, %157) /* ty=(Tensor[(11, 11, 10), bool], Tensor[(16, 4, 11), float32], Tensor[(8, 88), float32], Tensor[(16, 4, 11), float32], Tensor[(10), float32], Tensor[(375), float64]) */;
  %159 = cast(meta[relay.Constant][15] /* ty=Tensor[(10, 8, 3), float64] */, dtype="float64") /* ty=Tensor[(10, 8, 3), float64] */;
  %160 = sinh(%159) /* ty=Tensor[(10, 8, 3), float64] */;
  %161 = cast(%160, dtype="float32") /* ty=Tensor[(10, 8, 3), float32] */;
  %162 = @func_6433(%149) /* ty=Tensor[(14, 16, 3), int64] */;
  %163 = %158.3;
  %164 = tan(%161) /* ty=Tensor[(10, 8, 3), float32] */;
  %165 = @func_4496() /* ty=Tensor[(14, 16, 3), float32] */;
  (%147, %162, %163, meta[relay.Constant][13] /* ty=Tensor[(1210), uint64] */, %var_7072, meta[relay.Constant][14] /* ty=Tensor[(5, 2), float32] */, %164, %165)
}

def @func_7720() -> (Tensor[(14, 16, 3), float32],) {
  %166 = @func_5349() /* ty=(Tensor[(14, 16, 3), float32], Tensor[(14, 16, 3), float32]) */;
  %167 = %166.1;
  (%167,)
}

def @func_135(%var_99: Tensor[(15, 5, 5), float64]) -> (Tensor[(16, 4, 11), float32], Tensor[(704), float32], Tensor[(15, 5, 5), bool], Tensor[(16, 4, 11), float32], Tensor[(16, 4, 11), float32], Tensor[(15, 5, 5), bool]) {
  %168 = cast(meta[relay.Constant][16] /* ty=Tensor[(704), float32] */, dtype="float32") /* ty=Tensor[(704), float32] */;
  %169 = reshape(%168, newshape=[16, 4, 11]) /* ty=Tensor[(16, 4, 11), float32] */;
  %170 = @func_84(%169) /* ty=(Tensor[(16, 4, 11), float32],) */;
  %171 = cast(5.60355f64 /* ty=float64 */, dtype="float64") /* ty=float64 */;
  %172 = cast(%var_99, dtype="float64") /* ty=Tensor[(15, 5, 5), float64] */;
  %173 = divide(%171, %172) /* ty=Tensor[(15, 5, 5), float64] */;
  %174 = cast(%173, dtype="bool") /* ty=Tensor[(15, 5, 5), bool] */;
  %175 = cast(5.60355f64 /* ty=float64 */, dtype="bool") /* ty=bool */;
  %176 = %170.0;
  %177 = cast(%176, dtype="float32") /* ty=Tensor[(16, 4, 11), float32] */;
  %178 = reshape(%177, newshape=[16, 4, 11]) /* ty=Tensor[(16, 4, 11), float32] */;
  %179 = @func_84(%178) /* ty=(Tensor[(16, 4, 11), float32],) */;
  %180 = cast(meta[relay.Constant][16] /* ty=Tensor[(704), float32] */, dtype="float32") /* ty=Tensor[(704), float32] */;
  %181 = reshape(%180, newshape=[16, 4, 11]) /* ty=Tensor[(16, 4, 11), float32] */;
  %182 = @func_84(%181) /* ty=(Tensor[(16, 4, 11), float32],) */;
  %183 = cast(5.60355f64 /* ty=float64 */, dtype="bool") /* ty=bool */;
  %184 = cast(%var_99, dtype="bool") /* ty=Tensor[(15, 5, 5), bool] */;
  %185 = logical_or(%174, %175) /* ty=Tensor[(15, 5, 5), bool] */;
  %186 = %179.0;
  %187 = %182.0;
  %188 = equal(%183, %184) /* ty=Tensor[(15, 5, 5), bool] */;
  (%176, meta[relay.Constant][16] /* ty=Tensor[(704), float32] */, %185, %186, %187, %188)
}

def @func_1368(%var_1341: Tensor[(15, 9, 5), float32], %var_1342: Tensor[(15, 9, 5), float32], %var_1350: Tensor[(56), float64]) -> (Tensor[(15, 9, 5), float32], Tensor[(4, 1, 14), float64], Tensor[(56), float64]) {
  %189 = cast(%var_1342, dtype="float32") /* ty=Tensor[(15, 9, 5), float32] */;
  %190 = shape_of(%var_1341, dtype="int32") /* ty=Tensor[(3), int32] */;
  %191 = cast(%var_1341, dtype="float32") /* ty=Tensor[(15, 9, 5), float32] */;
  %192 = dyn.reshape(%189, %190, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %193 = cast(%var_1350, dtype="float64") /* ty=Tensor[(56), float64] */;
  %194 = reshape(%193, newshape=[4, 1, 14]) /* ty=Tensor[(4, 1, 14), float64] */;
  %195 = cast(%var_1350, dtype="float64") /* ty=Tensor[(56), float64] */;
  %196 = reshape(%195, newshape=[4, 1, 14]) /* ty=Tensor[(4, 1, 14), float64] */;
  %197 = @func_801(%196) /* ty=Tensor[(4, 1, 14), float64] */;
  %198 = cast(%197, dtype="float64") /* ty=Tensor[(4, 1, 14), float64] */;
  %199 = shape_of(%var_1350, dtype="int32") /* ty=Tensor[(1), int32] */;
  %200 = cast(%var_1350, dtype="float64") /* ty=Tensor[(56), float64] */;
  %201 = dyn.reshape(%198, %199, newshape=[]) /* ty=Tensor[(?), float64] */;
  %202 = floor_mod(%191, %192) /* ty=Tensor[(15, 9, 5), float32] */;
  %203 = @func_801(%194) /* ty=Tensor[(4, 1, 14), float64] */;
  %204 = floor_mod(%200, %201) /* ty=Tensor[(56), float64] */;
  (%202, %203, %204)
}

def @func_4851() -> (Tensor[(14, 16, 3), float32],) {
  %205 = @func_3801() /* ty=(Tensor[(14, 16, 3), float32], Tensor[(4, 1, 14), float64], Tensor[(56), float64]) */;
  %206 = %205.0;
  (%206,)
}

def @func_3425(%var_3407: Tensor[(5, 13, 6), float32], %var_3408: Tensor[(5, 13, 6), float32]) -> Tensor[(5, 13, 6), float32] {
  %207 = cast(%var_3408, dtype="float32") /* ty=Tensor[(5, 13, 6), float32] */;
  %208 = shape_of(%var_3407, dtype="int32") /* ty=Tensor[(3), int32] */;
  %209 = cast(%var_3407, dtype="float32") /* ty=Tensor[(5, 13, 6), float32] */;
  %210 = dyn.reshape(%207, %208, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  power(%209, %210) /* ty=Tensor[(5, 13, 6), float32] */
}

def @func_5141() -> (Tensor[(2, 15, 6), int8],) {
  %211 = cast(meta[relay.Constant][17] /* ty=int8 */, dtype="int8") /* ty=int8 */;
  %212 = cast(meta[relay.Constant][18] /* ty=Tensor[(2, 15, 6), int8] */, dtype="int8") /* ty=Tensor[(2, 15, 6), int8] */;
  %213 = logical_xor(%211, %212) /* ty=Tensor[(2, 15, 6), int8] */;
  (%213,)
}

def @func_2234(%var_2211: Tensor[(14, 3, 13), uint32]) -> (Tensor[(14, 3, 13), uint32], Tensor[(14, 3, 13), float64]) {
  %214 = cast(meta[relay.Constant][19] /* ty=Tensor[(14, 3, 13), uint32] */, dtype="uint32") /* ty=Tensor[(14, 3, 13), uint32] */;
  %215 = shape_of(%var_2211, dtype="int32") /* ty=Tensor[(3), int32] */;
  %216 = cast(%var_2211, dtype="uint32") /* ty=Tensor[(14, 3, 13), uint32] */;
  %217 = dyn.reshape(%214, %215, newshape=[]) /* ty=Tensor[(?, ?, ?), uint32] */;
  %218 = cast(meta[relay.Constant][19] /* ty=Tensor[(14, 3, 13), uint32] */, dtype="float64") /* ty=Tensor[(14, 3, 13), float64] */;
  %219 = left_shift(%216, %217) /* ty=Tensor[(14, 3, 13), uint32] */;
  %220 = rsqrt(%218) /* ty=Tensor[(14, 3, 13), float64] */;
  (%219, %220)
}

def @func_6749(%var_6704: Tensor[(16), uint16]) -> (Tensor[(14, 16, 3), float32], Tensor[(2, 4, 2), bool], Tensor[(16), uint16]) {
  %221 = cast(%var_6704, dtype="uint16") /* ty=Tensor[(16), uint16] */;
  %222 = reshape(%221, newshape=[2, 4, 2]) /* ty=Tensor[(2, 4, 2), uint16] */;
  %223 = @func_362(%222) /* ty=(Tensor[(2, 4, 2), bool],) */;
  %224 = @func_3588() /* ty=Tensor[(14, 16, 3), float32] */;
  %225 = %223.0;
  (%224, %225, %var_6704)
}

def @func_1482(%var_1471: Tensor[(14, 2, 4), float32], %var_1477: Tensor[(14, 2, 4), float32]) -> (Tensor[(14, 2, 4), float32], Tensor[(14, 2, 4), int8]) {
  %226 = cast(%var_1471, dtype="float32") /* ty=Tensor[(14, 2, 4), float32] */;
  %227 = cast(%var_1477, dtype="int8") /* ty=Tensor[(14, 2, 4), int8] */;
  %228 = shape_of(%var_1471, dtype="int32") /* ty=Tensor[(3), int32] */;
  %229 = cast(%var_1471, dtype="int8") /* ty=Tensor[(14, 2, 4), int8] */;
  %230 = dyn.reshape(%227, %228, newshape=[]) /* ty=Tensor[(?, ?, ?), int8] */;
  %231 = erf(%226) /* ty=Tensor[(14, 2, 4), float32] */;
  %232 = add(%229, %230) /* ty=Tensor[(14, 2, 4), int8] */;
  (%231, %232)
}

def @main() -> Tensor[(15, 15, 8), bool] {
  %233 = cast(meta[relay.Constant][21] /* ty=Tensor[(15, 15, 8), float64] */, dtype="bool") /* ty=Tensor[(15, 15, 8), bool] */;
  %234 = shape_of(meta[relay.Constant][20] /* ty=Tensor[(15, 15, 8), float64] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %235 = cast(meta[relay.Constant][20] /* ty=Tensor[(15, 15, 8), float64] */, dtype="bool") /* ty=Tensor[(15, 15, 8), bool] */;
  %236 = dyn.reshape(%233, %234, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  not_equal(%235, %236) /* ty=Tensor[(15, 15, 8), bool] */
}

def @func_7469(%var_7411: Tensor[(375), float64], %var_7458: Tensor[(16, 4, 11), float64]) -> (Tensor[(14, 16, 3), float32], Tensor[(14, 16, 3), int8], Tensor[(375), float64], Tensor[(56), float64], Tensor[(675, 1), float32], Tensor[(56, 1), float64], Tensor[(14, 16, 3), float32], Tensor[(16, 4, 11), int64]) {
  %237 = @func_6316() /* ty=(Tensor[(14, 16, 3), float32], Tensor[(14, 16, 3), float32]) */;
  %238 = @func_3824() /* ty=Tensor[(14, 16, 3), float32] */;
  %239 = @func_4496() /* ty=Tensor[(14, 16, 3), float32] */;
  %240 = cast(%239, dtype="int8") /* ty=Tensor[(14, 16, 3), int8] */;
  %241 = shape_of(%238, dtype="int32") /* ty=Tensor[(3), int32] */;
  %242 = cast(%238, dtype="int8") /* ty=Tensor[(14, 16, 3), int8] */;
  %243 = dyn.reshape(%240, %241, newshape=[]) /* ty=Tensor[(?, ?, ?), int8] */;
  %244 = cast(meta[relay.Constant][22] /* ty=Tensor[(675, 1), float32] */, dtype="float32") /* ty=Tensor[(675, 1), float32] */;
  %245 = cast(meta[relay.Constant][22] /* ty=Tensor[(675, 1), float32] */, dtype="float32") /* ty=Tensor[(675, 1), float32] */;
  %246 = cast(meta[relay.Constant][23] /* ty=Tensor[(56, 1), float64] */, dtype="float64") /* ty=Tensor[(56, 1), float64] */;
  %247 = reshape(%244, newshape=[15, 9, 5]) /* ty=Tensor[(15, 9, 5), float32] */;
  %248 = reshape(%245, newshape=[15, 9, 5]) /* ty=Tensor[(15, 9, 5), float32] */;
  %249 = reshape(%246, newshape=[56]) /* ty=Tensor[(56), float64] */;
  %250 = @func_1368(%247, %248, %249) /* ty=(Tensor[(15, 9, 5), float32], Tensor[(4, 1, 14), float64], Tensor[(56), float64]) */;
  %251 = @func_4709() /* ty=(Tensor[(14, 16, 3), float32],) */;
  %252 = cast(%var_7411, dtype="float64") /* ty=Tensor[(375), float64] */;
  %253 = reshape(%252, newshape=[15, 5, 5]) /* ty=Tensor[(15, 5, 5), float64] */;
  %254 = @func_135(%253) /* ty=(Tensor[(16, 4, 11), float32], Tensor[(704), float32], Tensor[(15, 5, 5), bool], Tensor[(16, 4, 11), float32], Tensor[(16, 4, 11), float32], Tensor[(15, 5, 5), bool]) */;
  %255 = %254.0;
  %256 = cast(%255, dtype="float64") /* ty=Tensor[(16, 4, 11), float64] */;
  %257 = rsqrt(%256) /* ty=Tensor[(16, 4, 11), float64] */;
  %258 = cast(%var_7458, dtype="int64") /* ty=Tensor[(16, 4, 11), int64] */;
  %259 = shape_of(%257, dtype="int32") /* ty=Tensor[(3), int32] */;
  %260 = cast(%257, dtype="int64") /* ty=Tensor[(16, 4, 11), int64] */;
  %261 = dyn.reshape(%258, %259, newshape=[]) /* ty=Tensor[(?, ?, ?), int64] */;
  %262 = %237.1;
  %263 = maximum(%242, %243) /* ty=Tensor[(14, 16, 3), int8] */;
  %264 = %250.2;
  %265 = %251.0;
  %266 = right_shift(%260, %261) /* ty=Tensor[(16, 4, 11), int64] */;
  (%262, %263, %var_7411, %264, meta[relay.Constant][22] /* ty=Tensor[(675, 1), float32] */, meta[relay.Constant][23] /* ty=Tensor[(56, 1), float64] */, %265, %266)
}

def @func_8166(%var_8161: Tensor[(28, 2), float64]) -> (Tensor[(14, 16, 3), float32], Tensor[(14, 16, 3), float32], Tensor[(14, 16, 3), float32], Tensor[(14, 16, 3), bool], Tensor[(28, 2), float64]) {
  %267 = @func_7720() /* ty=(Tensor[(14, 16, 3), float32],) */;
  %268 = %267.0;
  %269 = cast(%268, dtype="float32") /* ty=Tensor[(14, 16, 3), float32] */;
  %270 = cast(%268, dtype="float32") /* ty=Tensor[(14, 16, 3), float32] */;
  %271 = cast(%var_8161, dtype="float64") /* ty=Tensor[(28, 2), float64] */;
  %272 = reshape(%269, newshape=[14, 16, 3]) /* ty=Tensor[(14, 16, 3), float32] */;
  %273 = reshape(%270, newshape=[14, 16, 3]) /* ty=Tensor[(14, 16, 3), float32] */;
  %274 = reshape(%271, newshape=[2, 28]) /* ty=Tensor[(2, 28), float64] */;
  %275 = @func_4249(%272, %273, %274) /* ty=(Tensor[(14, 16, 3), bool], Tensor[(14, 16, 3), float64], Tensor[(56), float64], Tensor[(225, 3), float32], Tensor[(2, 28), float64]) */;
  %276 = @func_7388() /* ty=Tensor[(14, 16, 3), float32] */;
  %277 = @func_6340() /* ty=Tensor[(14, 16, 3), float32] */;
  %278 = %275.0;
  (%276, %277, %268, %278, %var_8161)
}

def @func_5004(%var_4984: int32, %var_4985: Tensor[(10, 6, 1), int32]) -> (Tensor[(10, 6, 1), int32], Tensor[(10, 6, 1), float64], Tensor[(4, 1, 14), float64], Tensor[(14, 16, 3), float32]) {
  %279 = cast(%var_4984, dtype="int32") /* ty=int32 */;
  %280 = cast(%var_4985, dtype="int32") /* ty=Tensor[(10, 6, 1), int32] */;
  %281 = cast(%var_4985, dtype="float64") /* ty=Tensor[(10, 6, 1), float64] */;
  %282 = @func_3801() /* ty=(Tensor[(14, 16, 3), float32], Tensor[(4, 1, 14), float64], Tensor[(56), float64]) */;
  %283 = multiply(%279, %280) /* ty=Tensor[(10, 6, 1), int32] */;
  %284 = acosh(%281) /* ty=Tensor[(10, 6, 1), float64] */;
  %285 = %282.1;
  %286 = @func_3824() /* ty=Tensor[(14, 16, 3), float32] */;
  (%283, %284, %285, %286)
}

def @func_4278() -> (Tensor[(14, 16, 3), float32],) {
  %287 = @func_3153() /* ty=Tensor[(14, 16, 3), float32] */;
  (%287,)
}

def @func_4521() -> (Tensor[(14, 16, 3), float32],) {
  %288 = @func_3976() /* ty=Tensor[(14, 16, 3), float32] */;
  (%288,)
}

def @func_4433() -> (Tensor[(14, 16, 3), float32],) {
  %289 = @func_3153() /* ty=Tensor[(14, 16, 3), float32] */;
  %290 = cast(%289, dtype="float32") /* ty=Tensor[(14, 16, 3), float32] */;
  %291 = erf(%290) /* ty=Tensor[(14, 16, 3), float32] */;
  (%291,)
}

def @func_4496() -> Tensor[(14, 16, 3), float32] {
  @func_3588() /* ty=Tensor[(14, 16, 3), float32] */
}

def @func_723(%var_714: Tensor[(13, 15, 6), float32]) -> (Tensor[(13, 15, 6), int32],) {
  %292 = cast(%var_714, dtype="float32") /* ty=Tensor[(13, 15, 6), float32] */;
  %293 = acos(%292) /* ty=Tensor[(13, 15, 6), float32] */;
  %294 = cast(%var_714, dtype="int32") /* ty=Tensor[(13, 15, 6), int32] */;
  %295 = shape_of(%293, dtype="int32") /* ty=Tensor[(3), int32] */;
  %296 = cast(%293, dtype="int32") /* ty=Tensor[(13, 15, 6), int32] */;
  %297 = dyn.reshape(%294, %295, newshape=[]) /* ty=Tensor[(?, ?, ?), int32] */;
  %298 = subtract(%296, %297) /* ty=Tensor[(13, 15, 6), int32] */;
  (%298,)
}

def @func_8667() -> (Tensor[(14, 16, 3), float32], Tensor[(14, 16, 3), float32]) {
  %299 = @func_4322() /* ty=Tensor[(14, 16, 3), float32] */;
  %300 = @func_4295() /* ty=Tensor[(14, 16, 3), float32] */;
  (%299, %300)
}

def @func_8648() -> (Tensor[(2, 4, 2), bool], Tensor[(14, 16, 3), float32]) {
  %301 = @func_4384() /* ty=(Tensor[(14, 16, 3), float32], Tensor[(14, 16, 3), float32], Tensor[(2, 4, 2), bool], Tensor[(16), uint16]) */;
  %302 = %301.2;
  %303 = @func_3976() /* ty=Tensor[(14, 16, 3), float32] */;
  (%302, %303)
}

def @func_8790(%var_8782: Tensor[(15, 13, 14), bool]) -> (Tensor[(15, 13, 14), bool], Tensor[(3, 6, 5), bool], Tensor[(1, 90), uint16]) {
  %304 = cast(meta[relay.Constant][24] /* ty=Tensor[(15, 1, 14), bool] */, dtype="bool") /* ty=Tensor[(15, 1, 14), bool] */;
  %305 = cast(%var_8782, dtype="bool") /* ty=Tensor[(15, 13, 14), bool] */;
  %306 = cast(meta[relay.Constant][25] /* ty=Tensor[(1, 90), uint16] */, dtype="uint16") /* ty=Tensor[(1, 90), uint16] */;
  %307 = reshape(%306, newshape=[3, 6, 5]) /* ty=Tensor[(3, 6, 5), uint16] */;
  %308 = logical_or(%304, %305) /* ty=Tensor[(15, 13, 14), bool] */;
  %309 = @func_5228(%307) /* ty=Tensor[(3, 6, 5), bool] */;
  (%308, %309, meta[relay.Constant][25] /* ty=Tensor[(1, 90), uint16] */)
}

def @func_4666(%var_4574: Tensor[(56), float64], %var_4636: Tensor[(252), int16], %var_4659: Tensor[(14, 2, 4), int8]) -> (Tensor[(56), uint32], Tensor[(14, 16, 3), float32], Tensor[(112), float32], Tensor[(56), float64], int16, Tensor[(252), int16], Tensor[(675), float32], Tensor[(14, 16, 3), float32], Tensor[(14, 2, 4), float64]) {
  %310 = @func_4544() /* ty=Tensor[(56), float64] */;
  %311 = cast(%var_4574, dtype="uint32") /* ty=Tensor[(56), uint32] */;
  %312 = shape_of(%310, dtype="int32") /* ty=Tensor[(1), int32] */;
  %313 = cast(%310, dtype="uint32") /* ty=Tensor[(56), uint32] */;
  %314 = dyn.reshape(%311, %312, newshape=[]) /* ty=Tensor[(?), uint32] */;
  %315 = @func_4521() /* ty=(Tensor[(14, 16, 3), float32],) */;
  %316 = cast(meta[relay.Constant][27] /* ty=int16 */, dtype="int16") /* ty=int16 */;
  %317 = cast(%var_4636, dtype="int16") /* ty=Tensor[(252), int16] */;
  %318 = cast(meta[relay.Constant][28] /* ty=Tensor[(675), float32] */, dtype="float32") /* ty=Tensor[(675), float32] */;
  %319 = reshape(%316, newshape=[]) /* ty=int16 */;
  %320 = reshape(%317, newshape=[2, 14, 9]) /* ty=Tensor[(2, 14, 9), int16] */;
  %321 = reshape(%318, newshape=[675]) /* ty=Tensor[(675), float32] */;
  %322 = @func_1852(%319, %320, %321) /* ty=(Tensor[(2, 14, 9), int16], Tensor[(56), float64], Tensor[(675), float32], Tensor[(56), float64], Tensor[(16, 4, 11), float32], Tensor[(10), float32], Tensor[(375), float64], Tensor[(4, 1, 14), float64]) */;
  %323 = @func_4433() /* ty=(Tensor[(14, 16, 3), float32],) */;
  %324 = cast(meta[relay.Constant][26] /* ty=Tensor[(112), float32] */, dtype="float32") /* ty=Tensor[(112), float32] */;
  %325 = cast(meta[relay.Constant][26] /* ty=Tensor[(112), float32] */, dtype="float32") /* ty=Tensor[(112), float32] */;
  %326 = reshape(%324, newshape=[14, 2, 4]) /* ty=Tensor[(14, 2, 4), float32] */;
  %327 = reshape(%325, newshape=[14, 2, 4]) /* ty=Tensor[(14, 2, 4), float32] */;
  %328 = @func_1482(%326, %327) /* ty=(Tensor[(14, 2, 4), float32], Tensor[(14, 2, 4), int8]) */;
  %329 = %328.1;
  %330 = cast(%var_4659, dtype="float64") /* ty=Tensor[(14, 2, 4), float64] */;
  %331 = shape_of(%329, dtype="int32") /* ty=Tensor[(3), int32] */;
  %332 = cast(%329, dtype="float64") /* ty=Tensor[(14, 2, 4), float64] */;
  %333 = dyn.reshape(%330, %331, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %334 = subtract(%313, %314) /* ty=Tensor[(56), uint32] */;
  %335 = %315.0;
  %336 = %322.3;
  %337 = %323.0;
  %338 = divide(%332, %333) /* ty=Tensor[(14, 2, 4), float64] */;
  (%334, %335, meta[relay.Constant][26] /* ty=Tensor[(112), float32] */, %336, meta[relay.Constant][27] /* ty=int16 */, %var_4636, meta[relay.Constant][28] /* ty=Tensor[(675), float32] */, %337, %338)
}

def @func_6080() -> Tensor[(14, 16, 3), float32] {
  @func_4295() /* ty=Tensor[(14, 16, 3), float32] */
}

def @func_6690() -> (Tensor[(14, 16, 3), bool], Tensor[(225, 3), float32], Tensor[(56), float64]) {
  %339 = @func_3734() /* ty=Tensor[(14, 16, 3), float32] */;
  %340 = @func_3264() /* ty=Tensor[(14, 16, 3), float32] */;
  %341 = cast(%340, dtype="bool") /* ty=Tensor[(14, 16, 3), bool] */;
  %342 = shape_of(%339, dtype="int32") /* ty=Tensor[(3), int32] */;
  %343 = cast(%339, dtype="bool") /* ty=Tensor[(14, 16, 3), bool] */;
  %344 = dyn.reshape(%341, %342, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %345 = greater_equal(%343, %344) /* ty=Tensor[(14, 16, 3), bool] */;
  %346 = cast(%345, dtype="float32") /* ty=Tensor[(14, 16, 3), float32] */;
  %347 = cast(%345, dtype="float32") /* ty=Tensor[(14, 16, 3), float32] */;
  %348 = cast(meta[relay.Constant][29] /* ty=Tensor[(56), float64] */, dtype="float64") /* ty=Tensor[(56), float64] */;
  %349 = reshape(%346, newshape=[14, 16, 3]) /* ty=Tensor[(14, 16, 3), float32] */;
  %350 = reshape(%347, newshape=[14, 16, 3]) /* ty=Tensor[(14, 16, 3), float32] */;
  %351 = reshape(%348, newshape=[2, 28]) /* ty=Tensor[(2, 28), float64] */;
  %352 = @func_4249(%349, %350, %351) /* ty=(Tensor[(14, 16, 3), bool], Tensor[(14, 16, 3), float64], Tensor[(56), float64], Tensor[(225, 3), float32], Tensor[(2, 28), float64]) */;
  %353 = %352.3;
  (%345, %353, meta[relay.Constant][29] /* ty=Tensor[(56), float64] */)
}

def @func_8404() -> Tensor[(11, 7, 5), float32] {
  %354 = cast(meta[relay.Constant][30] /* ty=Tensor[(11, 7, 5), float32] */, dtype="float32") /* ty=Tensor[(11, 7, 5), float32] */;
  sqrt(%354) /* ty=Tensor[(11, 7, 5), float32] */
}

def @func_7704(%var_7685: Tensor[(720), float32], %var_7686: Tensor[(112), float32]) -> (Tensor[(14, 16, 3), float32], Tensor[(16), uint16], Tensor[(720), float32], Tensor[(112), float32]) {
  %355 = cast(%var_7685, dtype="float32") /* ty=Tensor[(720), float32] */;
  %356 = cast(%var_7686, dtype="float32") /* ty=Tensor[(112), float32] */;
  %357 = reshape(%355, newshape=[6, 15, 8]) /* ty=Tensor[(6, 15, 8), float32] */;
  %358 = reshape(%356, newshape=[112]) /* ty=Tensor[(112), float32] */;
  %359 = @func_2053(%357, %358) /* ty=(Tensor[(6, 15, 8), float32], Tensor[(14, 2, 4), int8], Tensor[(112), float32], Tensor[(2, 4, 2), bool], Tensor[(16), uint16]) */;
  %360 = @func_5419() /* ty=Tensor[(14, 16, 3), float32] */;
  %361 = %359.4;
  (%360, %361, %var_7685, %var_7686)
}

def @func_7356() -> Tensor[(14, 16, 3), float32] {
  @func_7295() /* ty=Tensor[(14, 16, 3), float32] */
}

def @func_6316() -> (Tensor[(14, 16, 3), float32], Tensor[(14, 16, 3), float32]) {
  %362 = @func_5778() /* ty=(Tensor[(14, 16, 3), float32],) */;
  %363 = %362.0;
  %364 = @func_4496() /* ty=Tensor[(14, 16, 3), float32] */;
  (%363, %364)
}

def @func_4208(%var_4195: Tensor[(704), float32]) -> (Tensor[(14, 16, 3), float32], Tensor[(16, 4, 11), float32], Tensor[(704), float32]) {
  %365 = cast(%var_4195, dtype="float32") /* ty=Tensor[(704), float32] */;
  %366 = reshape(%365, newshape=[16, 4, 11]) /* ty=Tensor[(16, 4, 11), float32] */;
  %367 = @func_84(%366) /* ty=(Tensor[(16, 4, 11), float32],) */;
  %368 = @func_3588() /* ty=Tensor[(14, 16, 3), float32] */;
  %369 = %367.0;
  (%368, %369, %var_4195)
}

def @func_3801() -> (Tensor[(14, 16, 3), float32], Tensor[(4, 1, 14), float64], Tensor[(56), float64]) {
  %370 = cast(meta[relay.Constant][31] /* ty=Tensor[(56), float64] */, dtype="float64") /* ty=Tensor[(56), float64] */;
  %371 = reshape(%370, newshape=[4, 1, 14]) /* ty=Tensor[(4, 1, 14), float64] */;
  %372 = @func_3588() /* ty=Tensor[(14, 16, 3), float32] */;
  %373 = @func_801(%371) /* ty=Tensor[(4, 1, 14), float64] */;
  (%372, %373, meta[relay.Constant][31] /* ty=Tensor[(56), float64] */)
}

def @func_5463() -> Tensor[(14, 16, 3), float32] {
  %374 = @func_4709() /* ty=(Tensor[(14, 16, 3), float32],) */;
  %374.0
}

def @func_6289() -> (Tensor[(14, 16, 3), float32], Tensor[(14, 16, 3), float32]) {
  %375 = @func_5060() /* ty=(Tensor[(14, 16, 3), float32], Tensor[(14, 16, 3), float32]) */;
  %376 = %375.1;
  %377 = @func_3588() /* ty=Tensor[(14, 16, 3), float32] */;
  (%376, %377)
}

def @func_8246() -> (Tensor[(14, 16, 3), float32], Tensor[(10, 10, 5), float64], Tensor[(50, 10), float64]) {
  %378 = cast(meta[relay.Constant][32] /* ty=Tensor[(50, 10), float64] */, dtype="float64") /* ty=Tensor[(50, 10), float64] */;
  %379 = reshape(%378, newshape=[10, 10, 5]) /* ty=Tensor[(10, 10, 5), float64] */;
  %380 = @func_7330(%379) /* ty=(Tensor[(10, 10, 5), float64], Tensor[(10, 10, 5), float64]) */;
  %381 = @func_3969() /* ty=Tensor[(14, 16, 3), float32] */;
  %382 = %380.0;
  (%381, %382, meta[relay.Constant][32] /* ty=Tensor[(50, 10), float64] */)
}

def @func_5228(%var_5221: Tensor[(3, 6, 5), uint16]) -> Tensor[(3, 6, 5), bool] {
  %383 = cast(meta[relay.Constant][33] /* ty=Tensor[(1, 6, 5), uint16] */, dtype="bool") /* ty=Tensor[(1, 6, 5), bool] */;
  %384 = cast(%var_5221, dtype="bool") /* ty=Tensor[(3, 6, 5), bool] */;
  equal(%383, %384) /* ty=Tensor[(3, 6, 5), bool] */
}

def @func_6883(%var_6870: Tensor[(112), float32]) -> (Tensor[(14, 16, 3), float32], Tensor[(16), uint16], Tensor[(1, 720), float32], Tensor[(112), float32], Tensor[(14, 16, 3), float32]) {
  %385 = @func_5778() /* ty=(Tensor[(14, 16, 3), float32],) */;
  %386 = cast(meta[relay.Constant][34] /* ty=Tensor[(1, 720), float32] */, dtype="float32") /* ty=Tensor[(1, 720), float32] */;
  %387 = cast(%var_6870, dtype="float32") /* ty=Tensor[(112), float32] */;
  %388 = reshape(%386, newshape=[6, 15, 8]) /* ty=Tensor[(6, 15, 8), float32] */;
  %389 = reshape(%387, newshape=[112]) /* ty=Tensor[(112), float32] */;
  %390 = @func_2053(%388, %389) /* ty=(Tensor[(6, 15, 8), float32], Tensor[(14, 2, 4), int8], Tensor[(112), float32], Tensor[(2, 4, 2), bool], Tensor[(16), uint16]) */;
  %391 = @func_6289() /* ty=(Tensor[(14, 16, 3), float32], Tensor[(14, 16, 3), float32]) */;
  %392 = %385.0;
  %393 = %390.4;
  %394 = %391.1;
  (%392, %393, meta[relay.Constant][34] /* ty=Tensor[(1, 720), float32] */, %var_6870, %394)
}

def @func_3356(%var_3341: Tensor[(375), float64]) -> (Tensor[(14, 16, 3), float32], Tensor[(16, 4, 11), float32], Tensor[(375), float64], Tensor[(15, 5, 5), bool]) {
  %395 = cast(%var_3341, dtype="float64") /* ty=Tensor[(375), float64] */;
  %396 = reshape(%395, newshape=[15, 5, 5]) /* ty=Tensor[(15, 5, 5), float64] */;
  %397 = @func_135(%396) /* ty=(Tensor[(16, 4, 11), float32], Tensor[(704), float32], Tensor[(15, 5, 5), bool], Tensor[(16, 4, 11), float32], Tensor[(16, 4, 11), float32], Tensor[(15, 5, 5), bool]) */;
  %398 = cast(%var_3341, dtype="float64") /* ty=Tensor[(375), float64] */;
  %399 = reshape(%398, newshape=[15, 5, 5]) /* ty=Tensor[(15, 5, 5), float64] */;
  %400 = @func_135(%399) /* ty=(Tensor[(16, 4, 11), float32], Tensor[(704), float32], Tensor[(15, 5, 5), bool], Tensor[(16, 4, 11), float32], Tensor[(16, 4, 11), float32], Tensor[(15, 5, 5), bool]) */;
  %401 = @func_3264() /* ty=Tensor[(14, 16, 3), float32] */;
  %402 = %397.3;
  %403 = %400.2;
  (%401, %402, %var_3341, %403)
}

def @func_4959(%var_4941: Tensor[(675), float32]) -> (Tensor[(56), float64], Tensor[(56), float64], Tensor[(675), float32]) {
  %404 = cast(%var_4941, dtype="float32") /* ty=Tensor[(675), float32] */;
  %405 = cast(%var_4941, dtype="float32") /* ty=Tensor[(675), float32] */;
  %406 = @func_4544() /* ty=Tensor[(56), float64] */;
  %407 = cast(%406, dtype="float64") /* ty=Tensor[(56), float64] */;
  %408 = reshape(%404, newshape=[15, 9, 5]) /* ty=Tensor[(15, 9, 5), float32] */;
  %409 = reshape(%405, newshape=[15, 9, 5]) /* ty=Tensor[(15, 9, 5), float32] */;
  %410 = reshape(%407, newshape=[56]) /* ty=Tensor[(56), float64] */;
  %411 = @func_1368(%408, %409, %410) /* ty=(Tensor[(15, 9, 5), float32], Tensor[(4, 1, 14), float64], Tensor[(56), float64]) */;
  %412 = %411.2;
  (%406, %412, %var_4941)
}

def @func_7330(%var_7321: Tensor[(10, 10, 5), float64]) -> (Tensor[(10, 10, 5), float64], Tensor[(10, 10, 5), float64]) {
  %413 = cast(%var_7321, dtype="float64") /* ty=Tensor[(10, 10, 5), float64] */;
  %414 = cast(%var_7321, dtype="float64") /* ty=Tensor[(10, 10, 5), float64] */;
  %415 = erf(%413) /* ty=Tensor[(10, 10, 5), float64] */;
  %416 = exp(%414) /* ty=Tensor[(10, 10, 5), float64] */;
  (%415, %416)
}

def @func_8468() -> (Tensor[(16), uint16],) {
  %417 = @func_4384() /* ty=(Tensor[(14, 16, 3), float32], Tensor[(14, 16, 3), float32], Tensor[(2, 4, 2), bool], Tensor[(16), uint16]) */;
  %418 = %417.3;
  (%418,)
}

def @func_3780(%var_3757: Tensor[(360, 2), float32], %var_3758: Tensor[(28, 4), float32]) -> (Tensor[(14, 16, 3), float32], Tensor[(6, 15, 8), float32], Tensor[(28, 4), float32], Tensor[(14, 16, 3), float32], Tensor[(360, 2), float32]) {
  %419 = cast(%var_3757, dtype="float32") /* ty=Tensor[(360, 2), float32] */;
  %420 = cast(%var_3758, dtype="float32") /* ty=Tensor[(28, 4), float32] */;
  %421 = reshape(%419, newshape=[6, 15, 8]) /* ty=Tensor[(6, 15, 8), float32] */;
  %422 = reshape(%420, newshape=[112]) /* ty=Tensor[(112), float32] */;
  %423 = @func_2053(%421, %422) /* ty=(Tensor[(6, 15, 8), float32], Tensor[(14, 2, 4), int8], Tensor[(112), float32], Tensor[(2, 4, 2), bool], Tensor[(16), uint16]) */;
  %424 = cast(%var_3757, dtype="float64") /* ty=Tensor[(360, 2), float64] */;
  %425 = sqrt(%424) /* ty=Tensor[(360, 2), float64] */;
  %426 = cast(%425, dtype="float32") /* ty=Tensor[(360, 2), float32] */;
  %427 = @func_3264() /* ty=Tensor[(14, 16, 3), float32] */;
  %428 = %423.0;
  %429 = @func_3588() /* ty=Tensor[(14, 16, 3), float32] */;
  %430 = tan(%426) /* ty=Tensor[(360, 2), float32] */;
  (%427, %428, %var_3758, %429, %430)
}

def @func_6143(%var_6104: Tensor[(56), float64]) -> (Tensor[(14, 16, 3), float32], Tensor[(56), float64], Tensor[(14, 16, 3), float32], Tensor[(15, 9, 5), float32], Tensor[(675), float32]) {
  %431 = @func_3264() /* ty=Tensor[(14, 16, 3), float32] */;
  %432 = cast(%431, dtype="float32") /* ty=Tensor[(14, 16, 3), float32] */;
  %433 = cast(%431, dtype="float32") /* ty=Tensor[(14, 16, 3), float32] */;
  %434 = cast(%var_6104, dtype="float64") /* ty=Tensor[(56), float64] */;
  %435 = reshape(%432, newshape=[14, 16, 3]) /* ty=Tensor[(14, 16, 3), float32] */;
  %436 = reshape(%433, newshape=[14, 16, 3]) /* ty=Tensor[(14, 16, 3), float32] */;
  %437 = reshape(%434, newshape=[2, 28]) /* ty=Tensor[(2, 28), float64] */;
  %438 = @func_4249(%435, %436, %437) /* ty=(Tensor[(14, 16, 3), bool], Tensor[(14, 16, 3), float64], Tensor[(56), float64], Tensor[(225, 3), float32], Tensor[(2, 28), float64]) */;
  %439 = %438.0;
  %440 = cast(%439, dtype="float32") /* ty=Tensor[(14, 16, 3), float32] */;
  %441 = cast(meta[relay.Constant][35] /* ty=Tensor[(675), float32] */, dtype="float32") /* ty=Tensor[(675), float32] */;
  %442 = cast(meta[relay.Constant][35] /* ty=Tensor[(675), float32] */, dtype="float32") /* ty=Tensor[(675), float32] */;
  %443 = cast(%var_6104, dtype="float64") /* ty=Tensor[(56), float64] */;
  %444 = reshape(%441, newshape=[15, 9, 5]) /* ty=Tensor[(15, 9, 5), float32] */;
  %445 = reshape(%442, newshape=[15, 9, 5]) /* ty=Tensor[(15, 9, 5), float32] */;
  %446 = reshape(%443, newshape=[56]) /* ty=Tensor[(56), float64] */;
  %447 = @func_1368(%444, %445, %446) /* ty=(Tensor[(15, 9, 5), float32], Tensor[(4, 1, 14), float64], Tensor[(56), float64]) */;
  %448 = asin(%440) /* ty=Tensor[(14, 16, 3), float32] */;
  %449 = %447.0;
  (%431, %var_6104, %448, %449, meta[relay.Constant][35] /* ty=Tensor[(675), float32] */)
}

def @func_8724(%var_8683: Tensor[(3, 9, 3), float32], %var_8684: Tensor[(3, 9, 3), float32]) -> (Tensor[(3, 9, 3), float32], Tensor[(3, 9, 3), float64]) {
  %450 = cast(%var_8684, dtype="float32") /* ty=Tensor[(3, 9, 3), float32] */;
  %451 = shape_of(%var_8683, dtype="int32") /* ty=Tensor[(3), int32] */;
  %452 = cast(%var_8683, dtype="float32") /* ty=Tensor[(3, 9, 3), float32] */;
  %453 = dyn.reshape(%450, %451, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %454 = cast(%var_8683, dtype="float64") /* ty=Tensor[(3, 9, 3), float64] */;
  %455 = floor_mod(%452, %453) /* ty=Tensor[(3, 9, 3), float32] */;
  %456 = atanh(%454) /* ty=Tensor[(3, 9, 3), float64] */;
  (%455, %456)
}

def @func_8744() -> Tensor[(14, 16, 3), float32] {
  @func_3969() /* ty=Tensor[(14, 16, 3), float32] */
}

def @func_6797(%var_6783: Tensor[(4, 5, 10), float32]) -> Tensor[(4, 5, 10), float32] {
  %457 = cast(%var_6783, dtype="float32") /* ty=Tensor[(4, 5, 10), float32] */;
  log2(%457) /* ty=Tensor[(4, 5, 10), float32] */
}

def @func_4249(%var_4232: Tensor[(14, 16, 3), float32], %var_4239: Tensor[(14, 16, 3), float32], %var_4247: Tensor[(2, 28), float64]) -> (Tensor[(14, 16, 3), bool], Tensor[(14, 16, 3), float64], Tensor[(56), float64], Tensor[(225, 3), float32], Tensor[(2, 28), float64]) {
  %458 = @func_3976() /* ty=Tensor[(14, 16, 3), float32] */;
  %459 = cast(%var_4232, dtype="bool") /* ty=Tensor[(14, 16, 3), bool] */;
  %460 = shape_of(%458, dtype="int32") /* ty=Tensor[(3), int32] */;
  %461 = cast(%458, dtype="bool") /* ty=Tensor[(14, 16, 3), bool] */;
  %462 = dyn.reshape(%459, %460, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %463 = cast(%var_4239, dtype="float64") /* ty=Tensor[(14, 16, 3), float64] */;
  %464 = shape_of(%var_4232, dtype="int32") /* ty=Tensor[(3), int32] */;
  %465 = cast(%var_4232, dtype="float64") /* ty=Tensor[(14, 16, 3), float64] */;
  %466 = dyn.reshape(%463, %464, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %467 = cast(meta[relay.Constant][36] /* ty=Tensor[(225, 3), float32] */, dtype="float32") /* ty=Tensor[(225, 3), float32] */;
  %468 = cast(meta[relay.Constant][36] /* ty=Tensor[(225, 3), float32] */, dtype="float32") /* ty=Tensor[(225, 3), float32] */;
  %469 = cast(%var_4247, dtype="float64") /* ty=Tensor[(2, 28), float64] */;
  %470 = reshape(%467, newshape=[15, 9, 5]) /* ty=Tensor[(15, 9, 5), float32] */;
  %471 = reshape(%468, newshape=[15, 9, 5]) /* ty=Tensor[(15, 9, 5), float32] */;
  %472 = reshape(%469, newshape=[56]) /* ty=Tensor[(56), float64] */;
  %473 = @func_1368(%470, %471, %472) /* ty=(Tensor[(15, 9, 5), float32], Tensor[(4, 1, 14), float64], Tensor[(56), float64]) */;
  %474 = logical_or(%461, %462) /* ty=Tensor[(14, 16, 3), bool] */;
  %475 = floor_mod(%465, %466) /* ty=Tensor[(14, 16, 3), float64] */;
  %476 = %473.2;
  (%474, %475, %476, meta[relay.Constant][36] /* ty=Tensor[(225, 3), float32] */, %var_4247)
}

def @func_4322() -> Tensor[(14, 16, 3), float32] {
  @func_3734() /* ty=Tensor[(14, 16, 3), float32] */
}

def @func_4384() -> (Tensor[(14, 16, 3), float32], Tensor[(14, 16, 3), float32], Tensor[(2, 4, 2), bool], Tensor[(16), uint16]) {
  %477 = cast(meta[relay.Constant][37] /* ty=Tensor[(16), uint16] */, dtype="uint16") /* ty=Tensor[(16), uint16] */;
  %478 = reshape(%477, newshape=[2, 4, 2]) /* ty=Tensor[(2, 4, 2), uint16] */;
  %479 = @func_362(%478) /* ty=(Tensor[(2, 4, 2), bool],) */;
  %480 = @func_3824() /* ty=Tensor[(14, 16, 3), float32] */;
  %481 = @func_3976() /* ty=Tensor[(14, 16, 3), float32] */;
  %482 = %479.0;
  (%480, %481, %482, meta[relay.Constant][37] /* ty=Tensor[(16), uint16] */)
}

def @func_6934() -> (Tensor[(14, 16, 3), float32],) {
  %483 = @func_4496() /* ty=Tensor[(14, 16, 3), float32] */;
  (%483,)
}

def @func_6372() -> (Tensor[(14, 16, 3), float32],) {
  %484 = @func_6289() /* ty=(Tensor[(14, 16, 3), float32], Tensor[(14, 16, 3), float32]) */;
  %485 = %484.1;
  (%485,)
}

def @func_2102(%var_2075: Tensor[(5, 11, 11), int32], %var_2076: Tensor[(5, 11, 11), int32]) -> (Tensor[(5, 11, 11), bool],) {
  %486 = cast(%var_2076, dtype="int32") /* ty=Tensor[(5, 11, 11), int32] */;
  %487 = shape_of(%var_2075, dtype="int32") /* ty=Tensor[(3), int32] */;
  %488 = cast(%var_2075, dtype="int32") /* ty=Tensor[(5, 11, 11), int32] */;
  %489 = dyn.reshape(%486, %487, newshape=[]) /* ty=Tensor[(?, ?, ?), int32] */;
  %490 = minimum(%488, %489) /* ty=Tensor[(5, 11, 11), int32] */;
  %491 = cast(%var_2076, dtype="bool") /* ty=Tensor[(5, 11, 11), bool] */;
  %492 = shape_of(%490, dtype="int32") /* ty=Tensor[(3), int32] */;
  %493 = cast(%490, dtype="bool") /* ty=Tensor[(5, 11, 11), bool] */;
  %494 = dyn.reshape(%491, %492, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %495 = not_equal(%493, %494) /* ty=Tensor[(5, 11, 11), bool] */;
  (%495,)
}

def @func_6984() -> (Tensor[(14, 16, 3), float32], Tensor[(14, 16, 3), float32], Tensor[(14, 16, 3), bool], Tensor[(56), float64]) {
  %496 = @func_6316() /* ty=(Tensor[(14, 16, 3), float32], Tensor[(14, 16, 3), float32]) */;
  %497 = @func_6340() /* ty=Tensor[(14, 16, 3), float32] */;
  %498 = cast(%497, dtype="float32") /* ty=Tensor[(14, 16, 3), float32] */;
  %499 = %496.1;
  %500 = cast(%499, dtype="float32") /* ty=Tensor[(14, 16, 3), float32] */;
  %501 = cast(meta[relay.Constant][38] /* ty=Tensor[(56), float64] */, dtype="float64") /* ty=Tensor[(56), float64] */;
  %502 = reshape(%498, newshape=[14, 16, 3]) /* ty=Tensor[(14, 16, 3), float32] */;
  %503 = reshape(%500, newshape=[14, 16, 3]) /* ty=Tensor[(14, 16, 3), float32] */;
  %504 = reshape(%501, newshape=[2, 28]) /* ty=Tensor[(2, 28), float64] */;
  %505 = @func_4249(%502, %503, %504) /* ty=(Tensor[(14, 16, 3), bool], Tensor[(14, 16, 3), float64], Tensor[(56), float64], Tensor[(225, 3), float32], Tensor[(2, 28), float64]) */;
  %506 = %505.0;
  (%497, %499, %506, meta[relay.Constant][38] /* ty=Tensor[(56), float64] */)
}

def @func_970(%var_892: Tensor[(1, 12, 12), float32]) -> (Tensor[(2, 4, 2), bool], Tensor[(4, 4), uint16], Tensor[(375), float64], Tensor[(1210, 1), uint64], Tensor[(4, 176), float32], Tensor[(10), float32], Tensor[(16, 4, 11), float32], Tensor[(?, 12, 12), bool], Tensor[(?, 12, 12), uint16], Tensor[(?, 12, 12), bool]) {
  %507 = cast(meta[relay.Constant][39] /* ty=Tensor[(4, 4), uint16] */, dtype="uint16") /* ty=Tensor[(4, 4), uint16] */;
  %508 = reshape(%507, newshape=[2, 4, 2]) /* ty=Tensor[(2, 4, 2), uint16] */;
  %509 = @func_362(%508) /* ty=(Tensor[(2, 4, 2), bool],) */;
  %510 = cast(meta[relay.Constant][40] /* ty=Tensor[(1210, 1), uint64] */, dtype="uint64") /* ty=Tensor[(1210, 1), uint64] */;
  %511 = cast(meta[relay.Constant][40] /* ty=Tensor[(1210, 1), uint64] */, dtype="uint64") /* ty=Tensor[(1210, 1), uint64] */;
  %512 = cast(meta[relay.Constant][41] /* ty=Tensor[(4, 176), float32] */, dtype="float32") /* ty=Tensor[(4, 176), float32] */;
  %513 = cast(meta[relay.Constant][42] /* ty=Tensor[(10), float32] */, dtype="float32") /* ty=Tensor[(10), float32] */;
  %514 = reshape(%510, newshape=[11, 11, 10]) /* ty=Tensor[(11, 11, 10), uint64] */;
  %515 = reshape(%511, newshape=[11, 11, 10]) /* ty=Tensor[(11, 11, 10), uint64] */;
  %516 = reshape(%512, newshape=[8, 88]) /* ty=Tensor[(8, 88), float32] */;
  %517 = reshape(%513, newshape=[10]) /* ty=Tensor[(10), float32] */;
  %518 = @func_328(%514, %515, %516, %517) /* ty=(Tensor[(11, 11, 10), bool], Tensor[(16, 4, 11), float32], Tensor[(8, 88), float32], Tensor[(16, 4, 11), float32], Tensor[(10), float32], Tensor[(375), float64]) */;
  %519 = %518.5;
  %520 = cast(%519, dtype="float64") /* ty=Tensor[(375), float64] */;
  %521 = reshape(%520, newshape=[15, 5, 5]) /* ty=Tensor[(15, 5, 5), float64] */;
  %522 = @func_135(%521) /* ty=(Tensor[(16, 4, 11), float32], Tensor[(704), float32], Tensor[(15, 5, 5), bool], Tensor[(16, 4, 11), float32], Tensor[(16, 4, 11), float32], Tensor[(15, 5, 5), bool]) */;
  %523 = cast(%var_892, dtype="float32") /* ty=Tensor[(1, 12, 12), float32] */;
  %524 = sigmoid(%523) /* ty=Tensor[(1, 12, 12), float32] */;
  %525 = cast(%var_892, dtype="uint64") /* ty=Tensor[(1, 12, 12), uint64] */;
  %526 = shape_of(%524, dtype="int32") /* ty=Tensor[(3), int32] */;
  %527 = cast(%524, dtype="uint64") /* ty=Tensor[(1, 12, 12), uint64] */;
  %528 = dyn.reshape(%525, %526, newshape=[]) /* ty=Tensor[(?, ?, ?), uint64] */;
  %529 = right_shift(%527, %528) /* ty=Tensor[(?, 12, 12), uint64] */;
  %530 = cast(%529, dtype="float32") /* ty=Tensor[(?, 12, 12), float32] */;
  %531 = cosh(%530) /* ty=Tensor[(?, 12, 12), float32] */;
  %532 = cast(%var_892, dtype="float64") /* ty=Tensor[(1, 12, 12), float64] */;
  %533 = shape_of(%531, dtype="int32") /* ty=Tensor[(3), int32] */;
  %534 = cast(%531, dtype="float64") /* ty=Tensor[(?, 12, 12), float64] */;
  %535 = dyn.reshape(%532, %533, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %536 = subtract(%534, %535) /* ty=Tensor[(?, 12, 12), float64] */;
  %537 = cast(%531, dtype="bool") /* ty=Tensor[(?, 12, 12), bool] */;
  %538 = shape_of(%536, dtype="int32") /* ty=Tensor[(3), int32] */;
  %539 = cast(%536, dtype="bool") /* ty=Tensor[(?, 12, 12), bool] */;
  %540 = dyn.reshape(%537, %538, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %541 = cast(%524, dtype="bool") /* ty=Tensor[(1, 12, 12), bool] */;
  %542 = shape_of(%531, dtype="int32") /* ty=Tensor[(3), int32] */;
  %543 = cast(%531, dtype="bool") /* ty=Tensor[(?, 12, 12), bool] */;
  %544 = dyn.reshape(%541, %542, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %545 = logical_and(%543, %544) /* ty=Tensor[(?, 12, 12), bool] */;
  %546 = cast(%524, dtype="uint16") /* ty=Tensor[(1, 12, 12), uint16] */;
  %547 = shape_of(%545, dtype="int32") /* ty=Tensor[(3), int32] */;
  %548 = cast(%545, dtype="uint16") /* ty=Tensor[(?, 12, 12), uint16] */;
  %549 = dyn.reshape(%546, %547, newshape=[]) /* ty=Tensor[(?, ?, ?), uint16] */;
  %550 = cast(%536, dtype="float32") /* ty=Tensor[(?, 12, 12), float32] */;
  %551 = atan(%550) /* ty=Tensor[(?, 12, 12), float32] */;
  %552 = cast(%545, dtype="bool") /* ty=Tensor[(?, 12, 12), bool] */;
  %553 = shape_of(%551, dtype="int32") /* ty=Tensor[(3), int32] */;
  %554 = cast(%551, dtype="bool") /* ty=Tensor[(?, 12, 12), bool] */;
  %555 = dyn.reshape(%552, %553, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %556 = %509.0;
  %557 = %522.3;
  %558 = less_equal(%539, %540) /* ty=Tensor[(?, 12, 12), bool] */;
  %559 = add(%548, %549) /* ty=Tensor[(?, 12, 12), uint16] */;
  %560 = greater(%554, %555) /* ty=Tensor[(?, 12, 12), bool] */;
  (%556, meta[relay.Constant][39] /* ty=Tensor[(4, 4), uint16] */, %519, meta[relay.Constant][40] /* ty=Tensor[(1210, 1), uint64] */, meta[relay.Constant][41] /* ty=Tensor[(4, 176), float32] */, meta[relay.Constant][42] /* ty=Tensor[(10), float32] */, %557, %558, %559, %560)
}

def @func_84(%var_65: Tensor[(16, 4, 11), float32]) -> (Tensor[(16, 4, 11), float32],) {
  %561 = cast(%var_65, dtype="float32") /* ty=Tensor[(16, 4, 11), float32] */;
  %562 = atan(%561) /* ty=Tensor[(16, 4, 11), float32] */;
  (%562,)
}

def @func_4295() -> Tensor[(14, 16, 3), float32] {
  @func_3824() /* ty=Tensor[(14, 16, 3), float32] */
}

def @func_8776() -> (Tensor[(6, 5, 6), float32], Tensor[(704), float32], Tensor[(704), float32]) {
  %563 = @func_8481() /* ty=(Tensor[(14, 16, 3), float32], Tensor[(6, 5, 6), float64], Tensor[(180), int64]) */;
  %564 = %563.1;
  %565 = cast(%564, dtype="float32") /* ty=Tensor[(6, 5, 6), float32] */;
  %566 = cast(meta[relay.Constant][43] /* ty=Tensor[(704), float32] */, dtype="float32") /* ty=Tensor[(704), float32] */;
  %567 = reshape(%566, newshape=[704]) /* ty=Tensor[(704), float32] */;
  %568 = @func_4208(%567) /* ty=(Tensor[(14, 16, 3), float32], Tensor[(16, 4, 11), float32], Tensor[(704), float32]) */;
  %569 = log(%565) /* ty=Tensor[(6, 5, 6), float32] */;
  %570 = %568.2;
  (%569, %570, meta[relay.Constant][43] /* ty=Tensor[(704), float32] */)
}

def @func_2722(%var_2683: Tensor[(4, 6, 8), int16]) -> (Tensor[(4, 6, 8), int16], Tensor[(4, 6, 8), float64], Tensor[(4, 6, 8), int32]) {
  %571 = cast(%var_2683, dtype="int16") /* ty=Tensor[(4, 6, 8), int16] */;
  %572 = shape_of(meta[relay.Constant][44] /* ty=Tensor[(4, 6, 8), int16] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %573 = cast(meta[relay.Constant][44] /* ty=Tensor[(4, 6, 8), int16] */, dtype="int16") /* ty=Tensor[(4, 6, 8), int16] */;
  %574 = dyn.reshape(%571, %572, newshape=[]) /* ty=Tensor[(?, ?, ?), int16] */;
  %575 = cast(meta[relay.Constant][44] /* ty=Tensor[(4, 6, 8), int16] */, dtype="float64") /* ty=Tensor[(4, 6, 8), float64] */;
  %576 = shape_of(%var_2683, dtype="int32") /* ty=Tensor[(3), int32] */;
  %577 = cast(%var_2683, dtype="float64") /* ty=Tensor[(4, 6, 8), float64] */;
  %578 = dyn.reshape(%575, %576, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %579 = cast(meta[relay.Constant][44] /* ty=Tensor[(4, 6, 8), int16] */, dtype="int32") /* ty=Tensor[(4, 6, 8), int32] */;
  %580 = shape_of(%var_2683, dtype="int32") /* ty=Tensor[(3), int32] */;
  %581 = cast(%var_2683, dtype="int32") /* ty=Tensor[(4, 6, 8), int32] */;
  %582 = dyn.reshape(%579, %580, newshape=[]) /* ty=Tensor[(?, ?, ?), int32] */;
  %583 = bitwise_and(%573, %574) /* ty=Tensor[(4, 6, 8), int16] */;
  %584 = multiply(%577, %578) /* ty=Tensor[(4, 6, 8), float64] */;
  %585 = subtract(%581, %582) /* ty=Tensor[(4, 6, 8), int32] */;
  (%583, %584, %585)
}

def @func_7516() -> (Tensor[(14, 16, 3), float32], Tensor[(27), int16], Tensor[(125, 3), float64], Tensor[(16), uint16]) {
  %586 = @func_4433() /* ty=(Tensor[(14, 16, 3), float32],) */;
  %587 = cast(meta[relay.Constant][45] /* ty=Tensor[(125, 3), float64] */, dtype="float64") /* ty=Tensor[(125, 3), float64] */;
  %588 = cast(meta[relay.Constant][46] /* ty=Tensor[(16), uint16] */, dtype="uint16") /* ty=Tensor[(16), uint16] */;
  %589 = %586.0;
  %590 = cast(%589, dtype="float32") /* ty=Tensor[(14, 16, 3), float32] */;
  %591 = reshape(%587, newshape=[375]) /* ty=Tensor[(375), float64] */;
  %592 = reshape(%588, newshape=[16]) /* ty=Tensor[(16), uint16] */;
  %593 = reshape(%590, newshape=[14, 16, 3]) /* ty=Tensor[(14, 16, 3), float32] */;
  %594 = @func_4071(%591, %592, %593) /* ty=(Tensor[(14, 16, 3), float32], Tensor[(375), float64], Tensor[(2, 4, 2), bool], Tensor[(16), uint16], Tensor[(9, 3, 4), int16], Tensor[(27), int16], Tensor[(108), int16], Tensor[(375), float64], Tensor[(36), float64], Tensor[(14, 16, 3), uint32]) */;
  %595 = %594.5;
  (%589, %595, meta[relay.Constant][45] /* ty=Tensor[(125, 3), float64] */, meta[relay.Constant][46] /* ty=Tensor[(16), uint16] */)
}

def @func_362(%var_357: Tensor[(2, 4, 2), uint16]) -> (Tensor[(2, 4, 2), bool],) {
  %596 = cast(meta[relay.Constant][47] /* ty=Tensor[(2, 4, 2), uint16] */, dtype="bool") /* ty=Tensor[(2, 4, 2), bool] */;
  %597 = shape_of(%var_357, dtype="int32") /* ty=Tensor[(3), int32] */;
  %598 = cast(%var_357, dtype="bool") /* ty=Tensor[(2, 4, 2), bool] */;
  %599 = dyn.reshape(%596, %597, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %600 = greater_equal(%598, %599) /* ty=Tensor[(2, 4, 2), bool] */;
  (%600,)
}

def @func_3900(%var_3891: Tensor[(14, 16, 3), float32], %var_3898: Tensor[(375), float64]) -> (Tensor[(14, 16, 3), float64], Tensor[(13, 12, 16), float64], Tensor[(2496), float32], Tensor[(375), float64]) {
  %601 = @func_3153() /* ty=Tensor[(14, 16, 3), float32] */;
  %602 = cast(%var_3891, dtype="float64") /* ty=Tensor[(14, 16, 3), float64] */;
  %603 = shape_of(%601, dtype="int32") /* ty=Tensor[(3), int32] */;
  %604 = cast(%601, dtype="float64") /* ty=Tensor[(14, 16, 3), float64] */;
  %605 = dyn.reshape(%602, %603, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %606 = cast(meta[relay.Constant][48] /* ty=Tensor[(2496), float32] */, dtype="float32") /* ty=Tensor[(2496), float32] */;
  %607 = cast(%var_3898, dtype="float64") /* ty=Tensor[(375), float64] */;
  %608 = reshape(%606, newshape=[13, 12, 16]) /* ty=Tensor[(13, 12, 16), float32] */;
  %609 = reshape(%607, newshape=[375]) /* ty=Tensor[(375), float64] */;
  %610 = @func_453(%608, %609) /* ty=(Tensor[(15, 5, 5), bool], Tensor[(10), float32], Tensor[(375), float64], Tensor[(2, 4, 2), bool], Tensor[(16), uint16], Tensor[(13, 12, 16), float64]) */;
  %611 = divide(%604, %605) /* ty=Tensor[(14, 16, 3), float64] */;
  %612 = %610.5;
  (%611, %612, meta[relay.Constant][48] /* ty=Tensor[(2496), float32] */, %var_3898)
}

def @func_3478(%var_3470: Tensor[(9, 3, 1), int16], %var_3471: Tensor[(9, 3, 4), int16]) -> Tensor[(9, 3, 4), int16] {
  %613 = cast(%var_3470, dtype="int16") /* ty=Tensor[(9, 3, 1), int16] */;
  %614 = cast(%var_3471, dtype="int16") /* ty=Tensor[(9, 3, 4), int16] */;
  bitwise_xor(%613, %614) /* ty=Tensor[(9, 3, 4), int16] */
}

def @func_4071(%var_4011: Tensor[(375), float64], %var_4016: Tensor[(16), uint16], %var_4060: Tensor[(14, 16, 3), float32]) -> (Tensor[(14, 16, 3), float32], Tensor[(375), float64], Tensor[(2, 4, 2), bool], Tensor[(16), uint16], Tensor[(9, 3, 4), int16], Tensor[(27), int16], Tensor[(108), int16], Tensor[(375), float64], Tensor[(36), float64], Tensor[(14, 16, 3), uint32]) {
  %615 = cast(%var_4016, dtype="uint16") /* ty=Tensor[(16), uint16] */;
  %616 = reshape(%615, newshape=[2, 4, 2]) /* ty=Tensor[(2, 4, 2), uint16] */;
  %617 = @func_362(%616) /* ty=(Tensor[(2, 4, 2), bool],) */;
  %618 = cast(meta[relay.Constant][49] /* ty=Tensor[(27), int16] */, dtype="int16") /* ty=Tensor[(27), int16] */;
  %619 = cast(meta[relay.Constant][50] /* ty=Tensor[(108), int16] */, dtype="int16") /* ty=Tensor[(108), int16] */;
  %620 = reshape(%618, newshape=[9, 3, 1]) /* ty=Tensor[(9, 3, 1), int16] */;
  %621 = reshape(%619, newshape=[9, 3, 4]) /* ty=Tensor[(9, 3, 4), int16] */;
  %622 = cast(meta[relay.Constant][51] /* ty=Tensor[(36), float64] */, dtype="float64") /* ty=Tensor[(36), float64] */;
  %623 = reshape(%622, newshape=[9, 4, 1]) /* ty=Tensor[(9, 4, 1), float64] */;
  %624 = @func_1975(%623) /* ty=(Tensor[(9, 4, ?), bool], Tensor[(375), float64], Tensor[(2496), float32], Tensor[(375), float64]) */;
  %625 = cast(%var_4011, dtype="float64") /* ty=Tensor[(375), float64] */;
  %626 = reshape(%625, newshape=[375]) /* ty=Tensor[(375), float64] */;
  %627 = @func_3356(%626) /* ty=(Tensor[(14, 16, 3), float32], Tensor[(16, 4, 11), float32], Tensor[(375), float64], Tensor[(15, 5, 5), bool]) */;
  %628 = %627.0;
  %629 = cast(%628, dtype="float32") /* ty=Tensor[(14, 16, 3), float32] */;
  %630 = cos(%629) /* ty=Tensor[(14, 16, 3), float32] */;
  %631 = cast(%var_4060, dtype="uint32") /* ty=Tensor[(14, 16, 3), uint32] */;
  %632 = shape_of(%630, dtype="int32") /* ty=Tensor[(3), int32] */;
  %633 = cast(%630, dtype="uint32") /* ty=Tensor[(14, 16, 3), uint32] */;
  %634 = dyn.reshape(%631, %632, newshape=[]) /* ty=Tensor[(?, ?, ?), uint32] */;
  %635 = @func_3264() /* ty=Tensor[(14, 16, 3), float32] */;
  %636 = %617.0;
  %637 = @func_3478(%620, %621) /* ty=Tensor[(9, 3, 4), int16] */;
  %638 = %624.3;
  %639 = multiply(%633, %634) /* ty=Tensor[(14, 16, 3), uint32] */;
  (%635, %var_4011, %636, %var_4016, %637, meta[relay.Constant][49] /* ty=Tensor[(27), int16] */, meta[relay.Constant][50] /* ty=Tensor[(108), int16] */, %638, meta[relay.Constant][51] /* ty=Tensor[(36), float64] */, %639)
}

def @func_3734() -> Tensor[(14, 16, 3), float32] {
  %640 = @func_3153() /* ty=Tensor[(14, 16, 3), float32] */;
  %641 = cast(%640, dtype="float32") /* ty=Tensor[(14, 16, 3), float32] */;
  exp(%641) /* ty=Tensor[(14, 16, 3), float32] */
}

def @func_8425(%var_8420: Tensor[(9, 9, 5), int16], %var_8421: Tensor[(9, 9, 5), int16]) -> (Tensor[(9, 9, 5), bool],) {
  %642 = cast(%var_8421, dtype="bool") /* ty=Tensor[(9, 9, 5), bool] */;
  %643 = shape_of(%var_8420, dtype="int32") /* ty=Tensor[(3), int32] */;
  %644 = cast(%var_8420, dtype="bool") /* ty=Tensor[(9, 9, 5), bool] */;
  %645 = dyn.reshape(%642, %643, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %646 = less_equal(%644, %645) /* ty=Tensor[(9, 9, 5), bool] */;
  (%646,)
}

def @func_3824() -> Tensor[(14, 16, 3), float32] {
  @func_3734() /* ty=Tensor[(14, 16, 3), float32] */
}

def @func_5060() -> (Tensor[(14, 16, 3), float32], Tensor[(14, 16, 3), float32]) {
  %647 = @func_4709() /* ty=(Tensor[(14, 16, 3), float32],) */;
  %648 = @func_4851() /* ty=(Tensor[(14, 16, 3), float32],) */;
  %649 = %647.0;
  %650 = %648.0;
  (%649, %650)
}

def @func_6340() -> Tensor[(14, 16, 3), float32] {
  %651 = @func_5246() /* ty=(Tensor[(14, 16, 3), float32],) */;
  %651.0
}

def @func_6433(%var_6415: Tensor[(14, 16, 3), float32]) -> Tensor[(14, 16, 3), int64] {
  %652 = @func_3969() /* ty=Tensor[(14, 16, 3), float32] */;
  %653 = cast(%var_6415, dtype="int64") /* ty=Tensor[(14, 16, 3), int64] */;
  %654 = shape_of(%652, dtype="int32") /* ty=Tensor[(3), int32] */;
  %655 = cast(%652, dtype="int64") /* ty=Tensor[(14, 16, 3), int64] */;
  %656 = dyn.reshape(%653, %654, newshape=[]) /* ty=Tensor[(?, ?, ?), int64] */;
  add(%655, %656) /* ty=Tensor[(14, 16, 3), int64] */
}

def @func_7571() -> (Tensor[(14, 16, 3), float32], Tensor[(4, 1, 14), float64], Tensor[(56), float64]) {
  %657 = @func_4851() /* ty=(Tensor[(14, 16, 3), float32],) */;
  %658 = cast(meta[relay.Constant][52] /* ty=Tensor[(56), float64] */, dtype="float64") /* ty=Tensor[(56), float64] */;
  %659 = reshape(%658, newshape=[4, 1, 14]) /* ty=Tensor[(4, 1, 14), float64] */;
  %660 = %657.0;
  %661 = @func_801(%659) /* ty=Tensor[(4, 1, 14), float64] */;
  (%660, %661, meta[relay.Constant][52] /* ty=Tensor[(56), float64] */)
}

def @func_7197(%var_7174: Tensor[(375), float64], %var_7193: Tensor[(5, 135), float32]) -> (Tensor[(14, 16, 3), float32], Tensor[(14, 16, 3), float32], int32, Tensor[(60), int32], Tensor[(56), float64], Tensor[(375), float64], Tensor[(704), float32], Tensor[(14, 16, 3), float32], Tensor[(56), float64], Tensor[(252), int16], Tensor[(5, 135), float32]) {
  %662 = cast(3 /* ty=int32 */, dtype="int32") /* ty=int32 */;
  %663 = cast(meta[relay.Constant][53] /* ty=Tensor[(60), int32] */, dtype="int32") /* ty=Tensor[(60), int32] */;
  %664 = cast(meta[relay.Constant][54] /* ty=Tensor[(56), float64] */, dtype="float64") /* ty=Tensor[(56), float64] */;
  %665 = cast(%var_7174, dtype="float64") /* ty=Tensor[(375), float64] */;
  %666 = reshape(%662, newshape=[]) /* ty=int32 */;
  %667 = reshape(%663, newshape=[60]) /* ty=Tensor[(60), int32] */;
  %668 = reshape(%664, newshape=[56]) /* ty=Tensor[(56), float64] */;
  %669 = reshape(%665, newshape=[375]) /* ty=Tensor[(375), float64] */;
  %670 = @func_5670(%666, %667, %668, %669) /* ty=(Tensor[(14, 16, 3), float32], Tensor[(14, 16, 3), float32], int32, Tensor[(60), int32], Tensor[(14, 16, 3), float32], Tensor[(15, 9, 5), float32], Tensor[(675), float32], Tensor[(56), float64], Tensor[(15, 5, 5), bool], Tensor[(375), float64]) */;
  %671 = cast(%var_7174, dtype="float64") /* ty=Tensor[(375), float64] */;
  %672 = reshape(%671, newshape=[15, 5, 5]) /* ty=Tensor[(15, 5, 5), float64] */;
  %673 = @func_135(%672) /* ty=(Tensor[(16, 4, 11), float32], Tensor[(704), float32], Tensor[(15, 5, 5), bool], Tensor[(16, 4, 11), float32], Tensor[(16, 4, 11), float32], Tensor[(15, 5, 5), bool]) */;
  %674 = @func_4433() /* ty=(Tensor[(14, 16, 3), float32],) */;
  %675 = cast(3 /* ty=int32 */, dtype="int16") /* ty=int16 */;
  %676 = cast(meta[relay.Constant][55] /* ty=Tensor[(252), int16] */, dtype="int16") /* ty=Tensor[(252), int16] */;
  %677 = cast(%var_7193, dtype="float32") /* ty=Tensor[(5, 135), float32] */;
  %678 = reshape(%675, newshape=[]) /* ty=int16 */;
  %679 = reshape(%676, newshape=[2, 14, 9]) /* ty=Tensor[(2, 14, 9), int16] */;
  %680 = reshape(%677, newshape=[675]) /* ty=Tensor[(675), float32] */;
  %681 = @func_1852(%678, %679, %680) /* ty=(Tensor[(2, 14, 9), int16], Tensor[(56), float64], Tensor[(675), float32], Tensor[(56), float64], Tensor[(16, 4, 11), float32], Tensor[(10), float32], Tensor[(375), float64], Tensor[(4, 1, 14), float64]) */;
  %682 = @func_4496() /* ty=Tensor[(14, 16, 3), float32] */;
  %683 = %670.1;
  %684 = %673.1;
  %685 = %674.0;
  %686 = %681.3;
  (%682, %683, 3 /* ty=int32 */, meta[relay.Constant][53] /* ty=Tensor[(60), int32] */, meta[relay.Constant][54] /* ty=Tensor[(56), float64] */, %var_7174, %684, %685, %686, meta[relay.Constant][55] /* ty=Tensor[(252), int16] */, %var_7193)
}

def @func_7316(%var_7309: Tensor[(6, 5, 6), int64], %var_7310: Tensor[(6, 5, 6), int64]) -> (Tensor[(6, 5, 6), int64], Tensor[(6, 5, 6), float64]) {
  %687 = cast(%var_7310, dtype="int64") /* ty=Tensor[(6, 5, 6), int64] */;
  %688 = shape_of(%var_7309, dtype="int32") /* ty=Tensor[(3), int32] */;
  %689 = cast(%var_7309, dtype="int64") /* ty=Tensor[(6, 5, 6), int64] */;
  %690 = dyn.reshape(%687, %688, newshape=[]) /* ty=Tensor[(?, ?, ?), int64] */;
  %691 = cast(%var_7309, dtype="float64") /* ty=Tensor[(6, 5, 6), float64] */;
  %692 = bitwise_xor(%689, %690) /* ty=Tensor[(6, 5, 6), int64] */;
  %693 = exp(%691) /* ty=Tensor[(6, 5, 6), float64] */;
  (%692, %693)
}

def @func_801(%var_780: Tensor[(4, 1, 14), float64]) -> Tensor[(4, 1, 14), float64] {
  %694 = cast(%var_780, dtype="float64") /* ty=Tensor[(4, 1, 14), float64] */;
  atan(%694) /* ty=Tensor[(4, 1, 14), float64] */
}

def @func_4544() -> Tensor[(56), float64] {
  %695 = @func_3801() /* ty=(Tensor[(14, 16, 3), float32], Tensor[(4, 1, 14), float64], Tensor[(56), float64]) */;
  %695.2
}

def @func_7223() -> Tensor[(14, 16, 3), float32] {
  @func_6627() /* ty=Tensor[(14, 16, 3), float32] */
}

def @func_4803() -> (Tensor[(4, 9, 6), float64],) {
  %696 = cast(meta[relay.Constant][56] /* ty=Tensor[(4, 9, 6), int16] */, dtype="bool") /* ty=Tensor[(4, 9, 6), bool] */;
  %697 = shape_of(meta[relay.Constant][57] /* ty=Tensor[(4, 9, 6), int16] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %698 = cast(meta[relay.Constant][57] /* ty=Tensor[(4, 9, 6), int16] */, dtype="bool") /* ty=Tensor[(4, 9, 6), bool] */;
  %699 = dyn.reshape(%696, %697, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %700 = greater_equal(%698, %699) /* ty=Tensor[(4, 9, 6), bool] */;
  %701 = cast(%700, dtype="float64") /* ty=Tensor[(4, 9, 6), float64] */;
  %702 = shape_of(meta[relay.Constant][56] /* ty=Tensor[(4, 9, 6), int16] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %703 = cast(meta[relay.Constant][56] /* ty=Tensor[(4, 9, 6), int16] */, dtype="float64") /* ty=Tensor[(4, 9, 6), float64] */;
  %704 = dyn.reshape(%701, %702, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %705 = divide(%703, %704) /* ty=Tensor[(4, 9, 6), float64] */;
  (%705,)
}

def @func_6526(%var_6516: Tensor[(8, 3, 5), bool]) -> Tensor[(8, 3, 5), bool] {
  %706 = cast(%var_6516, dtype="bool") /* ty=Tensor[(8, 3, 5), bool] */;
  %707 = shape_of(meta[relay.Constant][58] /* ty=Tensor[(8, 3, 5), bool] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %708 = cast(meta[relay.Constant][58] /* ty=Tensor[(8, 3, 5), bool] */, dtype="bool") /* ty=Tensor[(8, 3, 5), bool] */;
  %709 = dyn.reshape(%706, %707, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  logical_or(%708, %709) /* ty=Tensor[(8, 3, 5), bool] */
}

def @func_1975(%var_1958: Tensor[(9, 4, 1), float64]) -> (Tensor[(9, 4, ?), bool], Tensor[(375), float64], Tensor[(2496), float32], Tensor[(375), float64]) {
  %710 = cast(%var_1958, dtype="bool") /* ty=Tensor[(9, 4, 1), bool] */;
  %711 = shape_of(meta[relay.Constant][59] /* ty=Tensor[(9, 4, 1), float64] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %712 = cast(meta[relay.Constant][59] /* ty=Tensor[(9, 4, 1), float64] */, dtype="bool") /* ty=Tensor[(9, 4, 1), bool] */;
  %713 = dyn.reshape(%710, %711, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %714 = cast(meta[relay.Constant][60] /* ty=Tensor[(2496), float32] */, dtype="float32") /* ty=Tensor[(2496), float32] */;
  %715 = cast(meta[relay.Constant][61] /* ty=Tensor[(375), float64] */, dtype="float64") /* ty=Tensor[(375), float64] */;
  %716 = reshape(%714, newshape=[13, 12, 16]) /* ty=Tensor[(13, 12, 16), float32] */;
  %717 = reshape(%715, newshape=[375]) /* ty=Tensor[(375), float64] */;
  %718 = @func_453(%716, %717) /* ty=(Tensor[(15, 5, 5), bool], Tensor[(10), float32], Tensor[(375), float64], Tensor[(2, 4, 2), bool], Tensor[(16), uint16], Tensor[(13, 12, 16), float64]) */;
  %719 = greater_equal(%712, %713) /* ty=Tensor[(9, 4, ?), bool] */;
  %720 = %718.2;
  (%719, %720, meta[relay.Constant][60] /* ty=Tensor[(2496), float32] */, meta[relay.Constant][61] /* ty=Tensor[(375), float64] */)
}

def @func_7956() -> Tensor[(14, 16, 3), float32] {
  @func_7356() /* ty=Tensor[(14, 16, 3), float32] */
}

def @func_5349() -> (Tensor[(14, 16, 3), float32], Tensor[(14, 16, 3), float32]) {
  %721 = @func_4851() /* ty=(Tensor[(14, 16, 3), float32],) */;
  %722 = %721.0;
  %723 = @func_4322() /* ty=Tensor[(14, 16, 3), float32] */;
  (%722, %723)
}

def @func_7973() -> Tensor[(14, 16, 3), float32] {
  %724 = @func_7720() /* ty=(Tensor[(14, 16, 3), float32],) */;
  %724.0
}

def @func_5670(%var_5604: int32, %var_5605: Tensor[(60), int32], %var_5633: Tensor[(56), float64], %var_5638: Tensor[(375), float64]) -> (Tensor[(14, 16, 3), float32], Tensor[(14, 16, 3), float32], int32, Tensor[(60), int32], Tensor[(14, 16, 3), float32], Tensor[(15, 9, 5), float32], Tensor[(675), float32], Tensor[(56), float64], Tensor[(15, 5, 5), bool], Tensor[(375), float64]) {
  %725 = @func_4851() /* ty=(Tensor[(14, 16, 3), float32],) */;
  %726 = %725.0;
  %727 = cast(%726, dtype="float32") /* ty=Tensor[(14, 16, 3), float32] */;
  %728 = atanh(%727) /* ty=Tensor[(14, 16, 3), float32] */;
  %729 = cast(%728, dtype="float32") /* ty=Tensor[(14, 16, 3), float32] */;
  %730 = shape_of(%726, dtype="int32") /* ty=Tensor[(3), int32] */;
  %731 = cast(%726, dtype="float32") /* ty=Tensor[(14, 16, 3), float32] */;
  %732 = dyn.reshape(%729, %730, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %733 = cast(%var_5604, dtype="int32") /* ty=int32 */;
  %734 = cast(%var_5605, dtype="int32") /* ty=Tensor[(60), int32] */;
  %735 = reshape(%733, newshape=[]) /* ty=int32 */;
  %736 = reshape(%734, newshape=[10, 6, 1]) /* ty=Tensor[(10, 6, 1), int32] */;
  %737 = @func_5004(%735, %736) /* ty=(Tensor[(10, 6, 1), int32], Tensor[(10, 6, 1), float64], Tensor[(4, 1, 14), float64], Tensor[(14, 16, 3), float32]) */;
  %738 = cast(meta[relay.Constant][62] /* ty=Tensor[(675), float32] */, dtype="float32") /* ty=Tensor[(675), float32] */;
  %739 = cast(meta[relay.Constant][62] /* ty=Tensor[(675), float32] */, dtype="float32") /* ty=Tensor[(675), float32] */;
  %740 = cast(%var_5633, dtype="float64") /* ty=Tensor[(56), float64] */;
  %741 = reshape(%738, newshape=[15, 9, 5]) /* ty=Tensor[(15, 9, 5), float32] */;
  %742 = reshape(%739, newshape=[15, 9, 5]) /* ty=Tensor[(15, 9, 5), float32] */;
  %743 = reshape(%740, newshape=[56]) /* ty=Tensor[(56), float64] */;
  %744 = @func_1368(%741, %742, %743) /* ty=(Tensor[(15, 9, 5), float32], Tensor[(4, 1, 14), float64], Tensor[(56), float64]) */;
  %745 = cast(%var_5638, dtype="float64") /* ty=Tensor[(375), float64] */;
  %746 = reshape(%745, newshape=[15, 5, 5]) /* ty=Tensor[(15, 5, 5), float64] */;
  %747 = @func_135(%746) /* ty=(Tensor[(16, 4, 11), float32], Tensor[(704), float32], Tensor[(15, 5, 5), bool], Tensor[(16, 4, 11), float32], Tensor[(16, 4, 11), float32], Tensor[(15, 5, 5), bool]) */;
  %748 = floor_divide(%731, %732) /* ty=Tensor[(14, 16, 3), float32] */;
  %749 = %737.3;
  %750 = @func_4322() /* ty=Tensor[(14, 16, 3), float32] */;
  %751 = %744.0;
  %752 = %747.2;
  (%748, %749, %var_5604, %var_5605, %750, %751, meta[relay.Constant][62] /* ty=Tensor[(675), float32] */, %var_5633, %752, %var_5638)
}

def @func_8218() -> (Tensor[(14, 16, 3), float32],) {
  %753 = @func_6934() /* ty=(Tensor[(14, 16, 3), float32],) */;
  %754 = %753.0;
  (%754,)
}

def @func_8269() -> Tensor[(14, 16, 3), float32] {
  %755 = @func_7571() /* ty=(Tensor[(14, 16, 3), float32], Tensor[(4, 1, 14), float64], Tensor[(56), float64]) */;
  %755.0
}

def @func_3588() -> Tensor[(14, 16, 3), float32] {
  @func_3153() /* ty=Tensor[(14, 16, 3), float32] */
}

def @func_7912() -> Tensor[(14, 16, 3), float32] {
  @func_7223() /* ty=Tensor[(14, 16, 3), float32] */
}

def @func_8532(%var_8489: Tensor[(375), float64]) -> (Tensor[(16), uint16], Tensor[(2, 4, 2), bool], Tensor[(375), float64], Tensor[(672), float32], Tensor[(2, 15, 6), float64]) {
  %756 = @func_8468() /* ty=(Tensor[(16), uint16],) */;
  %757 = cast(%var_8489, dtype="float64") /* ty=Tensor[(375), float64] */;
  %758 = %756.0;
  %759 = cast(%758, dtype="uint16") /* ty=Tensor[(16), uint16] */;
  %760 = cast(meta[relay.Constant][63] /* ty=Tensor[(672), float32] */, dtype="float32") /* ty=Tensor[(672), float32] */;
  %761 = reshape(%757, newshape=[375]) /* ty=Tensor[(375), float64] */;
  %762 = reshape(%759, newshape=[16]) /* ty=Tensor[(16), uint16] */;
  %763 = reshape(%760, newshape=[14, 16, 3]) /* ty=Tensor[(14, 16, 3), float32] */;
  %764 = @func_4071(%761, %762, %763) /* ty=(Tensor[(14, 16, 3), float32], Tensor[(375), float64], Tensor[(2, 4, 2), bool], Tensor[(16), uint16], Tensor[(9, 3, 4), int16], Tensor[(27), int16], Tensor[(108), int16], Tensor[(375), float64], Tensor[(36), float64], Tensor[(14, 16, 3), uint32]) */;
  %765 = @func_5141() /* ty=(Tensor[(2, 15, 6), int8],) */;
  %766 = %765.0;
  %767 = cast(%766, dtype="float64") /* ty=Tensor[(2, 15, 6), float64] */;
  %768 = %764.2;
  %769 = log10(%767) /* ty=Tensor[(2, 15, 6), float64] */;
  (%758, %768, %var_8489, meta[relay.Constant][63] /* ty=Tensor[(672), float32] */, %769)
}

def @func_256(%var_212: Tensor[(10, 1, 1), float32], %var_229: Tensor[(375), float64]) -> (Tensor[(16, 4, 11), float32], Tensor[(704), float32], Tensor[(15, 5, 5), bool], Tensor[(15, 5, 5), bool], Tensor[(10, 1, 375), int64], Tensor[(16, 4, 11), float32], Tensor[(10, 1, 1), float32]) {
  %770 = cast(meta[relay.Constant][64] /* ty=Tensor[(704), float32] */, dtype="float32") /* ty=Tensor[(704), float32] */;
  %771 = reshape(%770, newshape=[16, 4, 11]) /* ty=Tensor[(16, 4, 11), float32] */;
  %772 = @func_84(%771) /* ty=(Tensor[(16, 4, 11), float32],) */;
  %773 = cast(%var_229, dtype="float64") /* ty=Tensor[(375), float64] */;
  %774 = reshape(%773, newshape=[15, 5, 5]) /* ty=Tensor[(15, 5, 5), float64] */;
  %775 = @func_135(%774) /* ty=(Tensor[(16, 4, 11), float32], Tensor[(704), float32], Tensor[(15, 5, 5), bool], Tensor[(16, 4, 11), float32], Tensor[(16, 4, 11), float32], Tensor[(15, 5, 5), bool]) */;
  %776 = cast(%var_229, dtype="float64") /* ty=Tensor[(375), float64] */;
  %777 = reshape(%776, newshape=[15, 5, 5]) /* ty=Tensor[(15, 5, 5), float64] */;
  %778 = @func_135(%777) /* ty=(Tensor[(16, 4, 11), float32], Tensor[(704), float32], Tensor[(15, 5, 5), bool], Tensor[(16, 4, 11), float32], Tensor[(16, 4, 11), float32], Tensor[(15, 5, 5), bool]) */;
  %779 = cast(%var_212, dtype="float32") /* ty=Tensor[(10, 1, 1), float32] */;
  %780 = asinh(%779) /* ty=Tensor[(10, 1, 1), float32] */;
  %781 = cast(%780, dtype="int64") /* ty=Tensor[(10, 1, 1), int64] */;
  %782 = cast(%var_229, dtype="int64") /* ty=Tensor[(375), int64] */;
  %783 = %775.5;
  %784 = cast(%783, dtype="float64") /* ty=Tensor[(15, 5, 5), float64] */;
  %785 = reshape(%784, newshape=[15, 5, 5]) /* ty=Tensor[(15, 5, 5), float64] */;
  %786 = @func_135(%785) /* ty=(Tensor[(16, 4, 11), float32], Tensor[(704), float32], Tensor[(15, 5, 5), bool], Tensor[(16, 4, 11), float32], Tensor[(16, 4, 11), float32], Tensor[(15, 5, 5), bool]) */;
  %787 = cast(%780, dtype="float32") /* ty=Tensor[(10, 1, 1), float32] */;
  %788 = cosh(%787) /* ty=Tensor[(10, 1, 1), float32] */;
  %789 = cast(%788, dtype="float32") /* ty=Tensor[(10, 1, 1), float32] */;
  %790 = %772.0;
  %791 = %778.5;
  %792 = bitwise_xor(%781, %782) /* ty=Tensor[(10, 1, 375), int64] */;
  %793 = %786.0;
  %794 = acosh(%789) /* ty=Tensor[(10, 1, 1), float32] */;
  (%790, meta[relay.Constant][64] /* ty=Tensor[(704), float32] */, %783, %791, %792, %793, %794)
}

def @func_5975() -> Tensor[(14, 16, 3), float32] {
  %795 = @func_4709() /* ty=(Tensor[(14, 16, 3), float32],) */;
  %795.0
}

def @func_5246() -> (Tensor[(14, 16, 3), float32],) {
  %796 = @func_3969() /* ty=Tensor[(14, 16, 3), float32] */;
  (%796,)
}

def @func_3695(%var_3678: Tensor[(14, 16, 3), float32]) -> (Tensor[(14, 16, 3), bool],) {
  %797 = @func_3588() /* ty=Tensor[(14, 16, 3), float32] */;
  %798 = cast(%var_3678, dtype="bool") /* ty=Tensor[(14, 16, 3), bool] */;
  %799 = shape_of(%797, dtype="int32") /* ty=Tensor[(3), int32] */;
  %800 = cast(%797, dtype="bool") /* ty=Tensor[(14, 16, 3), bool] */;
  %801 = dyn.reshape(%798, %799, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %802 = less_equal(%800, %801) /* ty=Tensor[(14, 16, 3), bool] */;
  (%802,)
}

def @func_8481() -> (Tensor[(14, 16, 3), float32], Tensor[(6, 5, 6), float64], Tensor[(180), int64]) {
  %803 = @func_5060() /* ty=(Tensor[(14, 16, 3), float32], Tensor[(14, 16, 3), float32]) */;
  %804 = cast(meta[relay.Constant][65] /* ty=Tensor[(180), int64] */, dtype="int64") /* ty=Tensor[(180), int64] */;
  %805 = cast(meta[relay.Constant][65] /* ty=Tensor[(180), int64] */, dtype="int64") /* ty=Tensor[(180), int64] */;
  %806 = reshape(%804, newshape=[6, 5, 6]) /* ty=Tensor[(6, 5, 6), int64] */;
  %807 = reshape(%805, newshape=[6, 5, 6]) /* ty=Tensor[(6, 5, 6), int64] */;
  %808 = @func_7316(%806, %807) /* ty=(Tensor[(6, 5, 6), int64], Tensor[(6, 5, 6), float64]) */;
  %809 = %803.0;
  %810 = %808.1;
  (%809, %810, meta[relay.Constant][65] /* ty=Tensor[(180), int64] */)
}

def @func_8302() -> (Tensor[(14, 16, 3), float32], Tensor[(375), float64], Tensor[(2496), float32], Tensor[(375), float64], Tensor[(16, 4, 11), float32], Tensor[(704), float32]) {
  %811 = @func_6934() /* ty=(Tensor[(14, 16, 3), float32],) */;
  %812 = cast(meta[relay.Constant][66] /* ty=Tensor[(2496), float32] */, dtype="float32") /* ty=Tensor[(2496), float32] */;
  %813 = cast(meta[relay.Constant][67] /* ty=Tensor[(375), float64] */, dtype="float64") /* ty=Tensor[(375), float64] */;
  %814 = reshape(%812, newshape=[13, 12, 16]) /* ty=Tensor[(13, 12, 16), float32] */;
  %815 = reshape(%813, newshape=[375]) /* ty=Tensor[(375), float64] */;
  %816 = @func_453(%814, %815) /* ty=(Tensor[(15, 5, 5), bool], Tensor[(10), float32], Tensor[(375), float64], Tensor[(2, 4, 2), bool], Tensor[(16), uint16], Tensor[(13, 12, 16), float64]) */;
  %817 = cast(meta[relay.Constant][68] /* ty=Tensor[(704), float32] */, dtype="float32") /* ty=Tensor[(704), float32] */;
  %818 = reshape(%817, newshape=[704]) /* ty=Tensor[(704), float32] */;
  %819 = @func_7093(%818) /* ty=(Tensor[(14, 16, 3), float32], Tensor[(14, 16, 3), int64], Tensor[(16, 4, 11), float32], Tensor[(1210), uint64], Tensor[(704), float32], Tensor[(5, 2), float32], Tensor[(10, 8, 3), float32], Tensor[(14, 16, 3), float32]) */;
  %820 = %811.0;
  %821 = %816.2;
  %822 = %819.2;
  (%820, %821, meta[relay.Constant][66] /* ty=Tensor[(2496), float32] */, meta[relay.Constant][67] /* ty=Tensor[(375), float64] */, %822, meta[relay.Constant][68] /* ty=Tensor[(704), float32] */)
}

def @func_7589(%var_7577: Tensor[(4, 16, 11), float64]) -> Tensor[(4, 16, 11), float64] {
  %823 = cast(%var_7577, dtype="float64") /* ty=Tensor[(4, 16, 11), float64] */;
  atanh(%823) /* ty=Tensor[(4, 16, 11), float64] */
}

def @func_754(%var_746: Tensor[(9, 16, 10), uint32]) -> Tensor[(9, 16, 10), uint32] {
  %824 = cast(%var_746, dtype="uint32") /* ty=Tensor[(9, 16, 10), uint32] */;
  %825 = shape_of(meta[relay.Constant][69] /* ty=Tensor[(9, 16, 10), uint32] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %826 = cast(meta[relay.Constant][69] /* ty=Tensor[(9, 16, 10), uint32] */, dtype="uint32") /* ty=Tensor[(9, 16, 10), uint32] */;
  %827 = dyn.reshape(%824, %825, newshape=[]) /* ty=Tensor[(?, ?, ?), uint32] */;
  minimum(%826, %827) /* ty=Tensor[(9, 16, 10), uint32] */
}

def @func_5419() -> Tensor[(14, 16, 3), float32] {
  @func_3976() /* ty=Tensor[(14, 16, 3), float32] */
}

def @func_7388() -> Tensor[(14, 16, 3), float32] {
  %828 = @func_6289() /* ty=(Tensor[(14, 16, 3), float32], Tensor[(14, 16, 3), float32]) */;
  %828.0
}

def @func_3969() -> Tensor[(14, 16, 3), float32] {
  @func_3824() /* ty=Tensor[(14, 16, 3), float32] */
}

def @func_5751(%var_5677: Tensor[(16, 2, 16), float32]) -> (Tensor[(4, 9, 6), float64], Tensor[(704), float32], Tensor[(10), float32], Tensor[(375), float64], Tensor[(14, 16, 3), float32], Tensor[(14, 16, 3), float32], Tensor[(14, 16, 3), float32], Tensor[(16, 2, 16), int64], Tensor[(16, 2, 16), int8]) {
  %829 = @func_4803() /* ty=(Tensor[(4, 9, 6), float64],) */;
  %830 = cast(meta[relay.Constant][70] /* ty=Tensor[(10), float32] */, dtype="float32") /* ty=Tensor[(10), float32] */;
  %831 = cast(meta[relay.Constant][71] /* ty=Tensor[(375), float64] */, dtype="float64") /* ty=Tensor[(375), float64] */;
  %832 = reshape(%830, newshape=[10, 1, 1]) /* ty=Tensor[(10, 1, 1), float32] */;
  %833 = reshape(%831, newshape=[375]) /* ty=Tensor[(375), float64] */;
  %834 = @func_256(%832, %833) /* ty=(Tensor[(16, 4, 11), float32], Tensor[(704), float32], Tensor[(15, 5, 5), bool], Tensor[(15, 5, 5), bool], Tensor[(10, 1, 375), int64], Tensor[(16, 4, 11), float32], Tensor[(10, 1, 1), float32]) */;
  %835 = cast(%var_5677, dtype="float32") /* ty=Tensor[(16, 2, 16), float32] */;
  %836 = sin(%835) /* ty=Tensor[(16, 2, 16), float32] */;
  %837 = cast(%836, dtype="float32") /* ty=Tensor[(16, 2, 16), float32] */;
  %838 = acosh(%837) /* ty=Tensor[(16, 2, 16), float32] */;
  %839 = cast(meta[relay.Constant][72] /* ty=Tensor[(16, 2, 16), float32] */, dtype="int64") /* ty=Tensor[(16, 2, 16), int64] */;
  %840 = shape_of(%838, dtype="int32") /* ty=Tensor[(3), int32] */;
  %841 = cast(%838, dtype="int64") /* ty=Tensor[(16, 2, 16), int64] */;
  %842 = dyn.reshape(%839, %840, newshape=[]) /* ty=Tensor[(?, ?, ?), int64] */;
  %843 = cast(%838, dtype="bool") /* ty=Tensor[(16, 2, 16), bool] */;
  %844 = shape_of(%836, dtype="int32") /* ty=Tensor[(3), int32] */;
  %845 = cast(%836, dtype="bool") /* ty=Tensor[(16, 2, 16), bool] */;
  %846 = dyn.reshape(%843, %844, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %847 = less(%845, %846) /* ty=Tensor[(16, 2, 16), bool] */;
  %848 = cast(%847, dtype="int8") /* ty=Tensor[(16, 2, 16), int8] */;
  %849 = shape_of(%836, dtype="int32") /* ty=Tensor[(3), int32] */;
  %850 = cast(%836, dtype="int8") /* ty=Tensor[(16, 2, 16), int8] */;
  %851 = dyn.reshape(%848, %849, newshape=[]) /* ty=Tensor[(?, ?, ?), int8] */;
  %852 = %829.0;
  %853 = %834.1;
  %854 = @func_5463() /* ty=Tensor[(14, 16, 3), float32] */;
  %855 = @func_3734() /* ty=Tensor[(14, 16, 3), float32] */;
  %856 = @func_4322() /* ty=Tensor[(14, 16, 3), float32] */;
  %857 = add(%841, %842) /* ty=Tensor[(16, 2, 16), int64] */;
  %858 = bitwise_and(%850, %851) /* ty=Tensor[(16, 2, 16), int8] */;
  (%852, %853, meta[relay.Constant][70] /* ty=Tensor[(10), float32] */, meta[relay.Constant][71] /* ty=Tensor[(375), float64] */, %854, %855, %856, %857, %858)
}

def @func_5556() -> (Tensor[(56), float64], Tensor[(14, 3, 13), float64], Tensor[(546), uint32]) {
  %859 = @func_3801() /* ty=(Tensor[(14, 16, 3), float32], Tensor[(4, 1, 14), float64], Tensor[(56), float64]) */;
  %860 = cast(meta[relay.Constant][73] /* ty=Tensor[(546), uint32] */, dtype="uint32") /* ty=Tensor[(546), uint32] */;
  %861 = reshape(%860, newshape=[14, 3, 13]) /* ty=Tensor[(14, 3, 13), uint32] */;
  %862 = @func_2234(%861) /* ty=(Tensor[(14, 3, 13), uint32], Tensor[(14, 3, 13), float64]) */;
  %863 = %859.2;
  %864 = %862.1;
  (%863, %864, meta[relay.Constant][73] /* ty=Tensor[(546), uint32] */)
}

def @func_7384() -> Tensor[(14, 16, 3), float32] {
  @func_3824() /* ty=Tensor[(14, 16, 3), float32] */
}

def @func_5305(%var_5288: Tensor[(112), float32]) -> (Tensor[(14, 2, 4), int8], Tensor[(112), float32], Tensor[(14, 16, 3), float32]) {
  %865 = cast(%var_5288, dtype="float32") /* ty=Tensor[(112), float32] */;
  %866 = cast(%var_5288, dtype="float32") /* ty=Tensor[(112), float32] */;
  %867 = reshape(%865, newshape=[14, 2, 4]) /* ty=Tensor[(14, 2, 4), float32] */;
  %868 = reshape(%866, newshape=[14, 2, 4]) /* ty=Tensor[(14, 2, 4), float32] */;
  %869 = @func_1482(%867, %868) /* ty=(Tensor[(14, 2, 4), float32], Tensor[(14, 2, 4), int8]) */;
  %870 = @func_4521() /* ty=(Tensor[(14, 16, 3), float32],) */;
  %871 = %870.0;
  %872 = cast(%871, dtype="float32") /* ty=Tensor[(14, 16, 3), float32] */;
  %873 = %869.1;
  %874 = sinh(%872) /* ty=Tensor[(14, 16, 3), float32] */;
  (%873, %var_5288, %874)
}

def @func_5905(%var_5897: Tensor[(56), float64]) -> (Tensor[(14, 16, 3), float32], Tensor[(14, 16, 3), float32], Tensor[(4, 1, 14), float64], Tensor[(56), float64]) {
  %875 = @func_5349() /* ty=(Tensor[(14, 16, 3), float32], Tensor[(14, 16, 3), float32]) */;
  %876 = cast(%var_5897, dtype="float64") /* ty=Tensor[(56), float64] */;
  %877 = reshape(%876, newshape=[4, 1, 14]) /* ty=Tensor[(4, 1, 14), float64] */;
  %878 = %875.0;
  %879 = @func_5419() /* ty=Tensor[(14, 16, 3), float32] */;
  %880 = @func_801(%877) /* ty=Tensor[(4, 1, 14), float64] */;
  (%878, %879, %880, %var_5897)
}

def @func_3976() -> Tensor[(14, 16, 3), float32] {
  @func_3588() /* ty=Tensor[(14, 16, 3), float32] */
}

def @func_453(%var_416: Tensor[(13, 12, 16), float32], %var_423: Tensor[(375), float64]) -> (Tensor[(15, 5, 5), bool], Tensor[(10), float32], Tensor[(375), float64], Tensor[(2, 4, 2), bool], Tensor[(16), uint16], Tensor[(13, 12, 16), float64]) {
  %881 = cast(meta[relay.Constant][74] /* ty=Tensor[(10), float32] */, dtype="float32") /* ty=Tensor[(10), float32] */;
  %882 = cast(%var_423, dtype="float64") /* ty=Tensor[(375), float64] */;
  %883 = reshape(%881, newshape=[10, 1, 1]) /* ty=Tensor[(10, 1, 1), float32] */;
  %884 = reshape(%882, newshape=[375]) /* ty=Tensor[(375), float64] */;
  %885 = @func_256(%883, %884) /* ty=(Tensor[(16, 4, 11), float32], Tensor[(704), float32], Tensor[(15, 5, 5), bool], Tensor[(15, 5, 5), bool], Tensor[(10, 1, 375), int64], Tensor[(16, 4, 11), float32], Tensor[(10, 1, 1), float32]) */;
  %886 = cast(meta[relay.Constant][75] /* ty=Tensor[(16), uint16] */, dtype="uint16") /* ty=Tensor[(16), uint16] */;
  %887 = reshape(%886, newshape=[2, 4, 2]) /* ty=Tensor[(2, 4, 2), uint16] */;
  %888 = @func_362(%887) /* ty=(Tensor[(2, 4, 2), bool],) */;
  %889 = cast(%var_416, dtype="float32") /* ty=Tensor[(13, 12, 16), float32] */;
  %890 = atan(%889) /* ty=Tensor[(13, 12, 16), float32] */;
  %891 = cast(%890, dtype="float64") /* ty=Tensor[(13, 12, 16), float64] */;
  %892 = %885.2;
  %893 = %888.0;
  %894 = asinh(%891) /* ty=Tensor[(13, 12, 16), float64] */;
  (%892, meta[relay.Constant][74] /* ty=Tensor[(10), float32] */, %var_423, %893, meta[relay.Constant][75] /* ty=Tensor[(16), uint16] */, %894)
}

/* For debugging purposes the metadata section has been omitted.
 * If you would like to see the full metadata section you can set the 
 * option to `True` when invoking `astext`. 
 */
===================================
==========mutated_mod==========
#[version = "0.0.5"]
def @func_6935() -> (Tensor[(14, 16, 3), float32],) {
  %1 = fn () -> (Tensor[(14, 16, 3), float32],) {
    %0 = @func_4496() /* ty=Tensor[(14, 16, 3), float32] */;
    (%0,)
  };
  %1() /* ty=(Tensor[(14, 16, 3), float32],) */
}

def @func_8470() -> (Tensor[(16), uint16],) {
  @func_8468() /* ty=(Tensor[(16), uint16],) */
}

def @func_365(%var_363: Tensor[(2, 4, 2), uint16]) -> (Tensor[(2, 4, 2), bool],) {
  @func_362(%var_363) /* ty=(Tensor[(2, 4, 2), bool],) */
}

def @func_1482(%var_1471: Tensor[(14, 2, 4), float32], %var_1477: Tensor[(14, 2, 4), float32]) -> (Tensor[(14, 2, 4), float32], Tensor[(14, 2, 4), int8]) {
  %2 = cast(%var_1471, dtype="float32") /* ty=Tensor[(14, 2, 4), float32] */;
  %3 = cast(%var_1477, dtype="int8") /* ty=Tensor[(14, 2, 4), int8] */;
  %4 = shape_of(%var_1471, dtype="int32") /* ty=Tensor[(3), int32] */;
  %5 = cast(%var_1471, dtype="int8") /* ty=Tensor[(14, 2, 4), int8] */;
  %6 = dyn.reshape(%3, %4, newshape=[]) /* ty=Tensor[(?, ?, ?), int8] */;
  %7 = erf(%2) /* ty=Tensor[(14, 2, 4), float32] */;
  %8 = add(%5, %6) /* ty=Tensor[(14, 2, 4), int8] */;
  (%7, %8)
}

def @func_1857(%var_1854: int16, %var_1855: Tensor[(2, 14, 9), int16], %var_1856: Tensor[(675), float32]) -> (Tensor[(2, 14, 9), int16], Tensor[(56), float64], Tensor[(675), float32], Tensor[(56), float64], Tensor[(16, 4, 11), float32], Tensor[(10), float32], Tensor[(375), float64], Tensor[(4, 1, 14), float64]) {
  @func_1852(%var_1854, %var_1855, %var_1856) /* ty=(Tensor[(2, 14, 9), int16], Tensor[(56), float64], Tensor[(675), float32], Tensor[(56), float64], Tensor[(16, 4, 11), float32], Tensor[(10), float32], Tensor[(375), float64], Tensor[(4, 1, 14), float64]) */
}

def @func_3054(%var_3052: float64, %var_3053: Tensor[(11, 7, 13), float64]) -> (Tensor[(11, 7, 13), float64], Tensor[(704), float32], Tensor[(375), float64]) {
  %16 = fn (%var_3042: float64, %var_3043: Tensor[(11, 7, 13), float64]) -> (Tensor[(11, 7, 13), float64], Tensor[(704), float32], Tensor[(375), float64]) {
    %9 = cast(%var_3042, dtype="float64") /* ty=float64 */;
    %10 = cast(%var_3043, dtype="float64") /* ty=Tensor[(11, 7, 13), float64] */;
    %11 = cast(meta[relay.Constant][0] /* ty=Tensor[(375), float64] */, dtype="float64") /* ty=Tensor[(375), float64] */;
    %12 = reshape(%11, newshape=[15, 5, 5]) /* ty=Tensor[(15, 5, 5), float64] */;
    %13 = @func_135(%12) /* ty=(Tensor[(16, 4, 11), float32], Tensor[(704), float32], Tensor[(15, 5, 5), bool], Tensor[(16, 4, 11), float32], Tensor[(16, 4, 11), float32], Tensor[(15, 5, 5), bool]) */;
    %14 = mod(%9, %10) /* ty=Tensor[(11, 7, 13), float64] */;
    %15 = %13.1;
    (%14, %15, meta[relay.Constant][0] /* ty=Tensor[(375), float64] */)
  };
  %16(%var_3052, %var_3053) /* ty=(Tensor[(11, 7, 13), float64], Tensor[(704), float32], Tensor[(375), float64]) */
}

def @func_5420() -> Tensor[(14, 16, 3), float32] {
  %17 = fn () -> Tensor[(14, 16, 3), float32] {
    @func_3976() /* ty=Tensor[(14, 16, 3), float32] */
  };
  %17() /* ty=Tensor[(14, 16, 3), float32] */
}

def @func_3780(%var_3757: Tensor[(360, 2), float32], %var_3758: Tensor[(28, 4), float32]) -> (Tensor[(14, 16, 3), float32], Tensor[(6, 15, 8), float32], Tensor[(28, 4), float32], Tensor[(14, 16, 3), float32], Tensor[(360, 2), float32]) {
  %18 = cast(%var_3757, dtype="float32") /* ty=Tensor[(360, 2), float32] */;
  %19 = cast(%var_3758, dtype="float32") /* ty=Tensor[(28, 4), float32] */;
  %20 = reshape(%18, newshape=[6, 15, 8]) /* ty=Tensor[(6, 15, 8), float32] */;
  %21 = reshape(%19, newshape=[112]) /* ty=Tensor[(112), float32] */;
  %22 = @func_2053(%20, %21) /* ty=(Tensor[(6, 15, 8), float32], Tensor[(14, 2, 4), int8], Tensor[(112), float32], Tensor[(2, 4, 2), bool], Tensor[(16), uint16]) */;
  %23 = cast(%var_3757, dtype="float64") /* ty=Tensor[(360, 2), float64] */;
  %24 = sqrt(%23) /* ty=Tensor[(360, 2), float64] */;
  %25 = cast(%24, dtype="float32") /* ty=Tensor[(360, 2), float32] */;
  %26 = @func_3264() /* ty=Tensor[(14, 16, 3), float32] */;
  %27 = %22.0;
  %28 = @func_3588() /* ty=Tensor[(14, 16, 3), float32] */;
  %29 = tan(%25) /* ty=Tensor[(360, 2), float32] */;
  (%26, %27, %var_3758, %28, %29)
}

def @func_5675(%var_5671: int32, %var_5672: Tensor[(60), int32], %var_5673: Tensor[(56), float64], %var_5674: Tensor[(375), float64]) -> (Tensor[(14, 16, 3), float32], Tensor[(14, 16, 3), float32], int32, Tensor[(60), int32], Tensor[(14, 16, 3), float32], Tensor[(15, 9, 5), float32], Tensor[(675), float32], Tensor[(56), float64], Tensor[(15, 5, 5), bool], Tensor[(375), float64]) {
  %58 = fn (%var_5604: int32, %var_5605: Tensor[(60), int32], %var_5633: Tensor[(56), float64], %var_5638: Tensor[(375), float64]) -> (Tensor[(14, 16, 3), float32], Tensor[(14, 16, 3), float32], int32, Tensor[(60), int32], Tensor[(14, 16, 3), float32], Tensor[(15, 9, 5), float32], Tensor[(675), float32], Tensor[(56), float64], Tensor[(15, 5, 5), bool], Tensor[(375), float64]) {
    %30 = @func_4851() /* ty=(Tensor[(14, 16, 3), float32],) */;
    %31 = %30.0;
    %32 = cast(%31, dtype="float32") /* ty=Tensor[(14, 16, 3), float32] */;
    %33 = atanh(%32) /* ty=Tensor[(14, 16, 3), float32] */;
    %34 = cast(%33, dtype="float32") /* ty=Tensor[(14, 16, 3), float32] */;
    %35 = shape_of(%31, dtype="int32") /* ty=Tensor[(3), int32] */;
    %36 = cast(%31, dtype="float32") /* ty=Tensor[(14, 16, 3), float32] */;
    %37 = dyn.reshape(%34, %35, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
    %38 = cast(%var_5604, dtype="int32") /* ty=int32 */;
    %39 = cast(%var_5605, dtype="int32") /* ty=Tensor[(60), int32] */;
    %40 = reshape(%38, newshape=[]) /* ty=int32 */;
    %41 = reshape(%39, newshape=[10, 6, 1]) /* ty=Tensor[(10, 6, 1), int32] */;
    %42 = @func_5004(%40, %41) /* ty=(Tensor[(10, 6, 1), int32], Tensor[(10, 6, 1), float64], Tensor[(4, 1, 14), float64], Tensor[(14, 16, 3), float32]) */;
    %43 = cast(meta[relay.Constant][1] /* ty=Tensor[(675), float32] */, dtype="float32") /* ty=Tensor[(675), float32] */;
    %44 = cast(meta[relay.Constant][1] /* ty=Tensor[(675), float32] */, dtype="float32") /* ty=Tensor[(675), float32] */;
    %45 = cast(%var_5633, dtype="float64") /* ty=Tensor[(56), float64] */;
    %46 = reshape(%43, newshape=[15, 9, 5]) /* ty=Tensor[(15, 9, 5), float32] */;
    %47 = reshape(%44, newshape=[15, 9, 5]) /* ty=Tensor[(15, 9, 5), float32] */;
    %48 = reshape(%45, newshape=[56]) /* ty=Tensor[(56), float64] */;
    %49 = @func_1368(%46, %47, %48) /* ty=(Tensor[(15, 9, 5), float32], Tensor[(4, 1, 14), float64], Tensor[(56), float64]) */;
    %50 = cast(%var_5638, dtype="float64") /* ty=Tensor[(375), float64] */;
    %51 = reshape(%50, newshape=[15, 5, 5]) /* ty=Tensor[(15, 5, 5), float64] */;
    %52 = @func_135(%51) /* ty=(Tensor[(16, 4, 11), float32], Tensor[(704), float32], Tensor[(15, 5, 5), bool], Tensor[(16, 4, 11), float32], Tensor[(16, 4, 11), float32], Tensor[(15, 5, 5), bool]) */;
    %53 = floor_divide(%36, %37) /* ty=Tensor[(14, 16, 3), float32] */;
    %54 = %42.3;
    %55 = @func_4322() /* ty=Tensor[(14, 16, 3), float32] */;
    %56 = %49.0;
    %57 = %52.2;
    (%53, %54, %var_5604, %var_5605, %55, %56, meta[relay.Constant][1] /* ty=Tensor[(675), float32] */, %var_5633, %57, %var_5638)
  };
  %58(%var_5671, %var_5672, %var_5673, %var_5674) /* ty=(Tensor[(14, 16, 3), float32], Tensor[(14, 16, 3), float32], int32, Tensor[(60), int32], Tensor[(14, 16, 3), float32], Tensor[(15, 9, 5), float32], Tensor[(675), float32], Tensor[(56), float64], Tensor[(15, 5, 5), bool], Tensor[(375), float64]) */
}

def @func_86(%var_85: Tensor[(16, 4, 11), float32]) -> (Tensor[(16, 4, 11), float32],) {
  %61 = fn (%var_65: Tensor[(16, 4, 11), float32]) -> (Tensor[(16, 4, 11), float32],) {
    %59 = cast(%var_65, dtype="float32") /* ty=Tensor[(16, 4, 11), float32] */;
    %60 = atan(%59) /* ty=Tensor[(16, 4, 11), float32] */;
    (%60,)
  };
  %61(%var_85) /* ty=(Tensor[(16, 4, 11), float32],) */
}

def @func_6692() -> (Tensor[(14, 16, 3), bool], Tensor[(225, 3), float32], Tensor[(56), float64]) {
  @func_6690() /* ty=(Tensor[(14, 16, 3), bool], Tensor[(225, 3), float32], Tensor[(56), float64]) */
}

def @func_4076(%var_4073: Tensor[(375), float64], %var_4074: Tensor[(16), uint16], %var_4075: Tensor[(14, 16, 3), float32]) -> (Tensor[(14, 16, 3), float32], Tensor[(375), float64], Tensor[(2, 4, 2), bool], Tensor[(16), uint16], Tensor[(9, 3, 4), int16], Tensor[(27), int16], Tensor[(108), int16], Tensor[(375), float64], Tensor[(36), float64], Tensor[(14, 16, 3), uint32]) {
  @func_4071(%var_4073, %var_4074, %var_4075) /* ty=(Tensor[(14, 16, 3), float32], Tensor[(375), float64], Tensor[(2, 4, 2), bool], Tensor[(16), uint16], Tensor[(9, 3, 4), int16], Tensor[(27), int16], Tensor[(108), int16], Tensor[(375), float64], Tensor[(36), float64], Tensor[(14, 16, 3), uint32]) */
}

def @func_6146(%var_6144: Tensor[(56), float64]) -> (Tensor[(14, 16, 3), float32], Tensor[(56), float64], Tensor[(14, 16, 3), float32], Tensor[(15, 9, 5), float32], Tensor[(675), float32]) {
  @func_6143(%var_6144) /* ty=(Tensor[(14, 16, 3), float32], Tensor[(56), float64], Tensor[(14, 16, 3), float32], Tensor[(15, 9, 5), float32], Tensor[(675), float32]) */
}

def @func_6800(%var_6798: Tensor[(4, 5, 10), float32]) -> Tensor[(4, 5, 10), float32] {
  @func_6797(%var_6798) /* ty=Tensor[(4, 5, 10), float32] */
}

def @func_7722() -> (Tensor[(14, 16, 3), float32],) {
  @func_7720() /* ty=(Tensor[(14, 16, 3), float32],) */
}

def @func_7295() -> Tensor[(14, 16, 3), float32] {
  %62 = @func_5060() /* ty=(Tensor[(14, 16, 3), float32], Tensor[(14, 16, 3), float32]) */;
  %62.1
}

def @func_5558() -> (Tensor[(56), float64], Tensor[(14, 3, 13), float64], Tensor[(546), uint32]) {
  @func_5556() /* ty=(Tensor[(56), float64], Tensor[(14, 3, 13), float64], Tensor[(546), uint32]) */
}

def @func_6372() -> (Tensor[(14, 16, 3), float32],) {
  %63 = @func_6289() /* ty=(Tensor[(14, 16, 3), float32], Tensor[(14, 16, 3), float32]) */;
  %64 = %63.1;
  (%64,)
}

def @func_8650() -> (Tensor[(2, 4, 2), bool], Tensor[(14, 16, 3), float32]) {
  @func_8648() /* ty=(Tensor[(2, 4, 2), bool], Tensor[(14, 16, 3), float32]) */
}

def @func_5246() -> (Tensor[(14, 16, 3), float32],) {
  %65 = @func_3969() /* ty=Tensor[(14, 16, 3), float32] */;
  (%65,)
}

def @func_7225() -> Tensor[(14, 16, 3), float32] {
  @func_7223() /* ty=Tensor[(14, 16, 3), float32] */
}

def @func_6317() -> (Tensor[(14, 16, 3), float32], Tensor[(14, 16, 3), float32]) {
  %69 = fn () -> (Tensor[(14, 16, 3), float32], Tensor[(14, 16, 3), float32]) {
    %66 = @func_5778() /* ty=(Tensor[(14, 16, 3), float32],) */;
    %67 = %66.0;
    %68 = @func_4496() /* ty=Tensor[(14, 16, 3), float32] */;
    (%67, %68)
  };
  %69() /* ty=(Tensor[(14, 16, 3), float32], Tensor[(14, 16, 3), float32]) */
}

def @func_4710() -> (Tensor[(14, 16, 3), float32],) {
  %71 = fn () -> (Tensor[(14, 16, 3), float32],) {
    %70 = @func_4496() /* ty=Tensor[(14, 16, 3), float32] */;
    (%70,)
  };
  %71() /* ty=(Tensor[(14, 16, 3), float32],) */
}

def @func_4385() -> (Tensor[(14, 16, 3), float32], Tensor[(14, 16, 3), float32], Tensor[(2, 4, 2), bool], Tensor[(16), uint16]) {
  %78 = fn () -> (Tensor[(14, 16, 3), float32], Tensor[(14, 16, 3), float32], Tensor[(2, 4, 2), bool], Tensor[(16), uint16]) {
    %72 = cast(meta[relay.Constant][2] /* ty=Tensor[(16), uint16] */, dtype="uint16") /* ty=Tensor[(16), uint16] */;
    %73 = reshape(%72, newshape=[2, 4, 2]) /* ty=Tensor[(2, 4, 2), uint16] */;
    %74 = @func_362(%73) /* ty=(Tensor[(2, 4, 2), bool],) */;
    %75 = @func_3824() /* ty=Tensor[(14, 16, 3), float32] */;
    %76 = @func_3976() /* ty=Tensor[(14, 16, 3), float32] */;
    %77 = %74.0;
    (%75, %76, %77, meta[relay.Constant][2] /* ty=Tensor[(16), uint16] */)
  };
  %78() /* ty=(Tensor[(14, 16, 3), float32], Tensor[(14, 16, 3), float32], Tensor[(2, 4, 2), bool], Tensor[(16), uint16]) */
}

def @func_5463() -> Tensor[(14, 16, 3), float32] {
  %79 = @func_4709() /* ty=(Tensor[(14, 16, 3), float32],) */;
  %79.0
}

def @func_7200(%var_7198: Tensor[(375), float64], %var_7199: Tensor[(5, 135), float32]) -> (Tensor[(14, 16, 3), float32], Tensor[(14, 16, 3), float32], int32, Tensor[(60), int32], Tensor[(56), float64], Tensor[(375), float64], Tensor[(704), float32], Tensor[(14, 16, 3), float32], Tensor[(56), float64], Tensor[(252), int16], Tensor[(5, 135), float32]) {
  %105 = fn (%var_7174: Tensor[(375), float64], %var_7193: Tensor[(5, 135), float32]) -> (Tensor[(14, 16, 3), float32], Tensor[(14, 16, 3), float32], int32, Tensor[(60), int32], Tensor[(56), float64], Tensor[(375), float64], Tensor[(704), float32], Tensor[(14, 16, 3), float32], Tensor[(56), float64], Tensor[(252), int16], Tensor[(5, 135), float32]) {
    %80 = cast(3 /* ty=int32 */, dtype="int32") /* ty=int32 */;
    %81 = cast(meta[relay.Constant][3] /* ty=Tensor[(60), int32] */, dtype="int32") /* ty=Tensor[(60), int32] */;
    %82 = cast(meta[relay.Constant][4] /* ty=Tensor[(56), float64] */, dtype="float64") /* ty=Tensor[(56), float64] */;
    %83 = cast(%var_7174, dtype="float64") /* ty=Tensor[(375), float64] */;
    %84 = reshape(%80, newshape=[]) /* ty=int32 */;
    %85 = reshape(%81, newshape=[60]) /* ty=Tensor[(60), int32] */;
    %86 = reshape(%82, newshape=[56]) /* ty=Tensor[(56), float64] */;
    %87 = reshape(%83, newshape=[375]) /* ty=Tensor[(375), float64] */;
    %88 = @func_5670(%84, %85, %86, %87) /* ty=(Tensor[(14, 16, 3), float32], Tensor[(14, 16, 3), float32], int32, Tensor[(60), int32], Tensor[(14, 16, 3), float32], Tensor[(15, 9, 5), float32], Tensor[(675), float32], Tensor[(56), float64], Tensor[(15, 5, 5), bool], Tensor[(375), float64]) */;
    %89 = cast(%var_7174, dtype="float64") /* ty=Tensor[(375), float64] */;
    %90 = reshape(%89, newshape=[15, 5, 5]) /* ty=Tensor[(15, 5, 5), float64] */;
    %91 = @func_135(%90) /* ty=(Tensor[(16, 4, 11), float32], Tensor[(704), float32], Tensor[(15, 5, 5), bool], Tensor[(16, 4, 11), float32], Tensor[(16, 4, 11), float32], Tensor[(15, 5, 5), bool]) */;
    %92 = @func_4433() /* ty=(Tensor[(14, 16, 3), float32],) */;
    %93 = cast(3 /* ty=int32 */, dtype="int16") /* ty=int16 */;
    %94 = cast(meta[relay.Constant][5] /* ty=Tensor[(252), int16] */, dtype="int16") /* ty=Tensor[(252), int16] */;
    %95 = cast(%var_7193, dtype="float32") /* ty=Tensor[(5, 135), float32] */;
    %96 = reshape(%93, newshape=[]) /* ty=int16 */;
    %97 = reshape(%94, newshape=[2, 14, 9]) /* ty=Tensor[(2, 14, 9), int16] */;
    %98 = reshape(%95, newshape=[675]) /* ty=Tensor[(675), float32] */;
    %99 = @func_1852(%96, %97, %98) /* ty=(Tensor[(2, 14, 9), int16], Tensor[(56), float64], Tensor[(675), float32], Tensor[(56), float64], Tensor[(16, 4, 11), float32], Tensor[(10), float32], Tensor[(375), float64], Tensor[(4, 1, 14), float64]) */;
    %100 = @func_4496() /* ty=Tensor[(14, 16, 3), float32] */;
    %101 = %88.1;
    %102 = %91.1;
    %103 = %92.0;
    %104 = %99.3;
    (%100, %101, 3 /* ty=int32 */, meta[relay.Constant][3] /* ty=Tensor[(60), int32] */, meta[relay.Constant][4] /* ty=Tensor[(56), float64] */, %var_7174, %102, %103, %104, meta[relay.Constant][5] /* ty=Tensor[(252), int16] */, %var_7193)
  };
  %105(%var_7198, %var_7199) /* ty=(Tensor[(14, 16, 3), float32], Tensor[(14, 16, 3), float32], int32, Tensor[(60), int32], Tensor[(56), float64], Tensor[(375), float64], Tensor[(704), float32], Tensor[(14, 16, 3), float32], Tensor[(56), float64], Tensor[(252), int16], Tensor[(5, 135), float32]) */
}

def @func_5142() -> (Tensor[(2, 15, 6), int8],) {
  %109 = fn () -> (Tensor[(2, 15, 6), int8],) {
    %106 = cast(meta[relay.Constant][6] /* ty=int8 */, dtype="int8") /* ty=int8 */;
    %107 = cast(meta[relay.Constant][7] /* ty=Tensor[(2, 15, 6), int8] */, dtype="int8") /* ty=Tensor[(2, 15, 6), int8] */;
    %108 = logical_xor(%106, %107) /* ty=Tensor[(2, 15, 6), int8] */;
    (%108,)
  };
  %109() /* ty=(Tensor[(2, 15, 6), int8],) */
}

def @func_1978(%var_1976: Tensor[(9, 4, 1), float64]) -> (Tensor[(9, 4, ?), bool], Tensor[(375), float64], Tensor[(2496), float32], Tensor[(375), float64]) {
  @func_1975(%var_1976) /* ty=(Tensor[(9, 4, ?), bool], Tensor[(375), float64], Tensor[(2496), float32], Tensor[(375), float64]) */
}

def @func_3264() -> Tensor[(14, 16, 3), float32] {
  @func_3153() /* ty=Tensor[(14, 16, 3), float32] */
}

def @func_8428(%var_8426: Tensor[(9, 9, 5), int16], %var_8427: Tensor[(9, 9, 5), int16]) -> (Tensor[(9, 9, 5), bool],) {
  %115 = fn (%var_8420: Tensor[(9, 9, 5), int16], %var_8421: Tensor[(9, 9, 5), int16]) -> (Tensor[(9, 9, 5), bool],) {
    %110 = cast(%var_8421, dtype="bool") /* ty=Tensor[(9, 9, 5), bool] */;
    %111 = shape_of(%var_8420, dtype="int32") /* ty=Tensor[(3), int32] */;
    %112 = cast(%var_8420, dtype="bool") /* ty=Tensor[(9, 9, 5), bool] */;
    %113 = dyn.reshape(%110, %111, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    %114 = less_equal(%112, %113) /* ty=Tensor[(9, 9, 5), bool] */;
    (%114,)
  };
  %115(%var_8426, %var_8427) /* ty=(Tensor[(9, 9, 5), bool],) */
}

def @func_3428(%var_3426: Tensor[(5, 13, 6), float32], %var_3427: Tensor[(5, 13, 6), float32]) -> Tensor[(5, 13, 6), float32] {
  %120 = fn (%var_3407: Tensor[(5, 13, 6), float32], %var_3408: Tensor[(5, 13, 6), float32]) -> Tensor[(5, 13, 6), float32] {
    %116 = cast(%var_3408, dtype="float32") /* ty=Tensor[(5, 13, 6), float32] */;
    %117 = shape_of(%var_3407, dtype="int32") /* ty=Tensor[(3), int32] */;
    %118 = cast(%var_3407, dtype="float32") /* ty=Tensor[(5, 13, 6), float32] */;
    %119 = dyn.reshape(%116, %117, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
    power(%118, %119) /* ty=Tensor[(5, 13, 6), float32] */
  };
  %120(%var_3426, %var_3427) /* ty=Tensor[(5, 13, 6), float32] */
}

def @func_6080() -> Tensor[(14, 16, 3), float32] {
  @func_4295() /* ty=Tensor[(14, 16, 3), float32] */
}

def @func_7385() -> Tensor[(14, 16, 3), float32] {
  %121 = fn () -> Tensor[(14, 16, 3), float32] {
    @func_3824() /* ty=Tensor[(14, 16, 3), float32] */
  };
  %121() /* ty=Tensor[(14, 16, 3), float32] */
}

def @func_2056(%var_2054: Tensor[(6, 15, 8), float32], %var_2055: Tensor[(112), float32]) -> (Tensor[(6, 15, 8), float32], Tensor[(14, 2, 4), int8], Tensor[(112), float32], Tensor[(2, 4, 2), bool], Tensor[(16), uint16]) {
  %134 = fn (%var_2024: Tensor[(6, 15, 8), float32], %var_2032: Tensor[(112), float32]) -> (Tensor[(6, 15, 8), float32], Tensor[(14, 2, 4), int8], Tensor[(112), float32], Tensor[(2, 4, 2), bool], Tensor[(16), uint16]) {
    %122 = cast(%var_2024, dtype="float32") /* ty=Tensor[(6, 15, 8), float32] */;
    %123 = cast(%var_2032, dtype="float32") /* ty=Tensor[(112), float32] */;
    %124 = cast(%var_2032, dtype="float32") /* ty=Tensor[(112), float32] */;
    %125 = reshape(%123, newshape=[14, 2, 4]) /* ty=Tensor[(14, 2, 4), float32] */;
    %126 = reshape(%124, newshape=[14, 2, 4]) /* ty=Tensor[(14, 2, 4), float32] */;
    %127 = @func_1482(%125, %126) /* ty=(Tensor[(14, 2, 4), float32], Tensor[(14, 2, 4), int8]) */;
    %128 = cast(meta[relay.Constant][8] /* ty=Tensor[(16), uint16] */, dtype="uint16") /* ty=Tensor[(16), uint16] */;
    %129 = reshape(%128, newshape=[2, 4, 2]) /* ty=Tensor[(2, 4, 2), uint16] */;
    %130 = @func_362(%129) /* ty=(Tensor[(2, 4, 2), bool],) */;
    %131 = sqrt(%122) /* ty=Tensor[(6, 15, 8), float32] */;
    %132 = %127.1;
    %133 = %130.0;
    (%131, %132, %var_2032, %133, meta[relay.Constant][8] /* ty=Tensor[(16), uint16] */)
  };
  %134(%var_2054, %var_2055) /* ty=(Tensor[(6, 15, 8), float32], Tensor[(14, 2, 4), int8], Tensor[(112), float32], Tensor[(2, 4, 2), bool], Tensor[(16), uint16]) */
}

def @func_3155() -> Tensor[(14, 16, 3), float32] {
  @func_3153() /* ty=Tensor[(14, 16, 3), float32] */
}

def @func_7913() -> Tensor[(14, 16, 3), float32] {
  %135 = fn () -> Tensor[(14, 16, 3), float32] {
    @func_7223() /* ty=Tensor[(14, 16, 3), float32] */
  };
  %135() /* ty=Tensor[(14, 16, 3), float32] */
}

def @func_3482(%var_3480: Tensor[(9, 3, 1), int16], %var_3481: Tensor[(9, 3, 4), int16]) -> Tensor[(9, 3, 4), int16] {
  @func_3478(%var_3480, %var_3481) /* ty=Tensor[(9, 3, 4), int16] */
}

def @func_3900(%var_3891: Tensor[(14, 16, 3), float32], %var_3898: Tensor[(375), float64]) -> (Tensor[(14, 16, 3), float64], Tensor[(13, 12, 16), float64], Tensor[(2496), float32], Tensor[(375), float64]) {
  %136 = @func_3153() /* ty=Tensor[(14, 16, 3), float32] */;
  %137 = cast(%var_3891, dtype="float64") /* ty=Tensor[(14, 16, 3), float64] */;
  %138 = shape_of(%136, dtype="int32") /* ty=Tensor[(3), int32] */;
  %139 = cast(%136, dtype="float64") /* ty=Tensor[(14, 16, 3), float64] */;
  %140 = dyn.reshape(%137, %138, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %141 = cast(meta[relay.Constant][9] /* ty=Tensor[(2496), float32] */, dtype="float32") /* ty=Tensor[(2496), float32] */;
  %142 = cast(%var_3898, dtype="float64") /* ty=Tensor[(375), float64] */;
  %143 = reshape(%141, newshape=[13, 12, 16]) /* ty=Tensor[(13, 12, 16), float32] */;
  %144 = reshape(%142, newshape=[375]) /* ty=Tensor[(375), float64] */;
  %145 = @func_453(%143, %144) /* ty=(Tensor[(15, 5, 5), bool], Tensor[(10), float32], Tensor[(375), float64], Tensor[(2, 4, 2), bool], Tensor[(16), uint16], Tensor[(13, 12, 16), float64]) */;
  %146 = divide(%139, %140) /* ty=Tensor[(14, 16, 3), float64] */;
  %147 = %145.5;
  (%146, %147, meta[relay.Constant][9] /* ty=Tensor[(2496), float32] */, %var_3898)
}

def @func_5062() -> (Tensor[(14, 16, 3), float32], Tensor[(14, 16, 3), float32]) {
  @func_5060() /* ty=(Tensor[(14, 16, 3), float32], Tensor[(14, 16, 3), float32]) */
}

def @func_8220() -> (Tensor[(14, 16, 3), float32],) {
  @func_8218() /* ty=(Tensor[(14, 16, 3), float32],) */
}

def @func_4210(%var_4209: Tensor[(704), float32]) -> (Tensor[(14, 16, 3), float32], Tensor[(16, 4, 11), float32], Tensor[(704), float32]) {
  %153 = fn (%var_4195: Tensor[(704), float32]) -> (Tensor[(14, 16, 3), float32], Tensor[(16, 4, 11), float32], Tensor[(704), float32]) {
    %148 = cast(%var_4195, dtype="float32") /* ty=Tensor[(704), float32] */;
    %149 = reshape(%148, newshape=[16, 4, 11]) /* ty=Tensor[(16, 4, 11), float32] */;
    %150 = @func_84(%149) /* ty=(Tensor[(16, 4, 11), float32],) */;
    %151 = @func_3588() /* ty=Tensor[(14, 16, 3), float32] */;
    %152 = %150.0;
    (%151, %152, %var_4195)
  };
  %153(%var_4209) /* ty=(Tensor[(14, 16, 3), float32], Tensor[(16, 4, 11), float32], Tensor[(704), float32]) */
}

def @func_7332(%var_7331: Tensor[(10, 10, 5), float64]) -> (Tensor[(10, 10, 5), float64], Tensor[(10, 10, 5), float64]) {
  %158 = fn (%var_7321: Tensor[(10, 10, 5), float64]) -> (Tensor[(10, 10, 5), float64], Tensor[(10, 10, 5), float64]) {
    %154 = cast(%var_7321, dtype="float64") /* ty=Tensor[(10, 10, 5), float64] */;
    %155 = cast(%var_7321, dtype="float64") /* ty=Tensor[(10, 10, 5), float64] */;
    %156 = erf(%154) /* ty=Tensor[(10, 10, 5), float64] */;
    %157 = exp(%155) /* ty=Tensor[(10, 10, 5), float64] */;
    (%156, %157)
  };
  %158(%var_7331) /* ty=(Tensor[(10, 10, 5), float64], Tensor[(10, 10, 5), float64]) */
}

def @func_3359(%var_3357: Tensor[(375), float64]) -> (Tensor[(14, 16, 3), float32], Tensor[(16, 4, 11), float32], Tensor[(375), float64], Tensor[(15, 5, 5), bool]) {
  @func_3356(%var_3357) /* ty=(Tensor[(14, 16, 3), float32], Tensor[(16, 4, 11), float32], Tensor[(375), float64], Tensor[(15, 5, 5), bool]) */
}

def @func_6082() -> Tensor[(14, 16, 3), float32] {
  @func_6080() /* ty=Tensor[(14, 16, 3), float32] */
}

def @func_6985() -> (Tensor[(14, 16, 3), float32], Tensor[(14, 16, 3), float32], Tensor[(14, 16, 3), bool], Tensor[(56), float64]) {
  %170 = fn () -> (Tensor[(14, 16, 3), float32], Tensor[(14, 16, 3), float32], Tensor[(14, 16, 3), bool], Tensor[(56), float64]) {
    %159 = @func_6316() /* ty=(Tensor[(14, 16, 3), float32], Tensor[(14, 16, 3), float32]) */;
    %160 = @func_6340() /* ty=Tensor[(14, 16, 3), float32] */;
    %161 = cast(%160, dtype="float32") /* ty=Tensor[(14, 16, 3), float32] */;
    %162 = %159.1;
    %163 = cast(%162, dtype="float32") /* ty=Tensor[(14, 16, 3), float32] */;
    %164 = cast(meta[relay.Constant][10] /* ty=Tensor[(56), float64] */, dtype="float64") /* ty=Tensor[(56), float64] */;
    %165 = reshape(%161, newshape=[14, 16, 3]) /* ty=Tensor[(14, 16, 3), float32] */;
    %166 = reshape(%163, newshape=[14, 16, 3]) /* ty=Tensor[(14, 16, 3), float32] */;
    %167 = reshape(%164, newshape=[2, 28]) /* ty=Tensor[(2, 28), float64] */;
    %168 = @func_4249(%165, %166, %167) /* ty=(Tensor[(14, 16, 3), bool], Tensor[(14, 16, 3), float64], Tensor[(56), float64], Tensor[(225, 3), float32], Tensor[(2, 28), float64]) */;
    %169 = %168.0;
    (%160, %162, %169, meta[relay.Constant][10] /* ty=Tensor[(56), float64] */)
  };
  %170() /* ty=(Tensor[(14, 16, 3), float32], Tensor[(14, 16, 3), float32], Tensor[(14, 16, 3), bool], Tensor[(56), float64]) */
}

def @func_7389() -> Tensor[(14, 16, 3), float32] {
  %172 = fn () -> Tensor[(14, 16, 3), float32] {
    %171 = @func_6289() /* ty=(Tensor[(14, 16, 3), float32], Tensor[(14, 16, 3), float32]) */;
    %171.0
  };
  %172() /* ty=Tensor[(14, 16, 3), float32] */
}

def @func_7357() -> Tensor[(14, 16, 3), float32] {
  %173 = fn () -> Tensor[(14, 16, 3), float32] {
    @func_7295() /* ty=Tensor[(14, 16, 3), float32] */
  };
  %173() /* ty=Tensor[(14, 16, 3), float32] */
}

def @func_8728(%var_8726: Tensor[(3, 9, 3), float32], %var_8727: Tensor[(3, 9, 3), float32]) -> (Tensor[(3, 9, 3), float32], Tensor[(3, 9, 3), float64]) {
  @func_8724(%var_8726, %var_8727) /* ty=(Tensor[(3, 9, 3), float32], Tensor[(3, 9, 3), float64]) */
}

def @func_723(%var_714: Tensor[(13, 15, 6), float32]) -> (Tensor[(13, 15, 6), int32],) {
  %174 = cast(%var_714, dtype="float32") /* ty=Tensor[(13, 15, 6), float32] */;
  %175 = acos(%174) /* ty=Tensor[(13, 15, 6), float32] */;
  %176 = cast(%var_714, dtype="int32") /* ty=Tensor[(13, 15, 6), int32] */;
  %177 = shape_of(%175, dtype="int32") /* ty=Tensor[(3), int32] */;
  %178 = cast(%175, dtype="int32") /* ty=Tensor[(13, 15, 6), int32] */;
  %179 = dyn.reshape(%176, %177, newshape=[]) /* ty=Tensor[(?, ?, ?), int32] */;
  %180 = subtract(%178, %179) /* ty=Tensor[(13, 15, 6), int32] */;
  (%180,)
}

def @func_3478(%var_3470: Tensor[(9, 3, 1), int16], %var_3471: Tensor[(9, 3, 4), int16]) -> Tensor[(9, 3, 4), int16] {
  %181 = cast(%var_3470, dtype="int16") /* ty=Tensor[(9, 3, 1), int16] */;
  %182 = cast(%var_3471, dtype="int16") /* ty=Tensor[(9, 3, 4), int16] */;
  bitwise_xor(%181, %182) /* ty=Tensor[(9, 3, 4), int16] */
}

def @func_4434() -> (Tensor[(14, 16, 3), float32],) {
  %186 = fn () -> (Tensor[(14, 16, 3), float32],) {
    %183 = @func_3153() /* ty=Tensor[(14, 16, 3), float32] */;
    %184 = cast(%183, dtype="float32") /* ty=Tensor[(14, 16, 3), float32] */;
    %185 = erf(%184) /* ty=Tensor[(14, 16, 3), float32] */;
    (%185,)
  };
  %186() /* ty=(Tensor[(14, 16, 3), float32],) */
}

def @func_6340() -> Tensor[(14, 16, 3), float32] {
  %187 = @func_5246() /* ty=(Tensor[(14, 16, 3), float32],) */;
  %187.0
}

def @func_4323() -> Tensor[(14, 16, 3), float32] {
  %188 = fn () -> Tensor[(14, 16, 3), float32] {
    @func_3734() /* ty=Tensor[(14, 16, 3), float32] */
  };
  %188() /* ty=Tensor[(14, 16, 3), float32] */
}

def @func_7095(%var_7094: Tensor[(704), float32]) -> (Tensor[(14, 16, 3), float32], Tensor[(14, 16, 3), int64], Tensor[(16, 4, 11), float32], Tensor[(1210), uint64], Tensor[(704), float32], Tensor[(5, 2), float32], Tensor[(10, 8, 3), float32], Tensor[(14, 16, 3), float32]) {
  %209 = fn (%var_7072: Tensor[(704), float32]) -> (Tensor[(14, 16, 3), float32], Tensor[(14, 16, 3), int64], Tensor[(16, 4, 11), float32], Tensor[(1210), uint64], Tensor[(704), float32], Tensor[(5, 2), float32], Tensor[(10, 8, 3), float32], Tensor[(14, 16, 3), float32]) {
    %189 = @func_4709() /* ty=(Tensor[(14, 16, 3), float32],) */;
    %190 = %189.0;
    %191 = cast(%190, dtype="float32") /* ty=Tensor[(14, 16, 3), float32] */;
    %192 = reshape(%191, newshape=[14, 16, 3]) /* ty=Tensor[(14, 16, 3), float32] */;
    %193 = cast(meta[relay.Constant][11] /* ty=Tensor[(1210), uint64] */, dtype="uint64") /* ty=Tensor[(1210), uint64] */;
    %194 = cast(meta[relay.Constant][11] /* ty=Tensor[(1210), uint64] */, dtype="uint64") /* ty=Tensor[(1210), uint64] */;
    %195 = cast(%var_7072, dtype="float32") /* ty=Tensor[(704), float32] */;
    %196 = cast(meta[relay.Constant][12] /* ty=Tensor[(5, 2), float32] */, dtype="float32") /* ty=Tensor[(5, 2), float32] */;
    %197 = reshape(%193, newshape=[11, 11, 10]) /* ty=Tensor[(11, 11, 10), uint64] */;
    %198 = reshape(%194, newshape=[11, 11, 10]) /* ty=Tensor[(11, 11, 10), uint64] */;
    %199 = reshape(%195, newshape=[8, 88]) /* ty=Tensor[(8, 88), float32] */;
    %200 = reshape(%196, newshape=[10]) /* ty=Tensor[(10), float32] */;
    %201 = @func_328(%197, %198, %199, %200) /* ty=(Tensor[(11, 11, 10), bool], Tensor[(16, 4, 11), float32], Tensor[(8, 88), float32], Tensor[(16, 4, 11), float32], Tensor[(10), float32], Tensor[(375), float64]) */;
    %202 = cast(meta[relay.Constant][13] /* ty=Tensor[(10, 8, 3), float64] */, dtype="float64") /* ty=Tensor[(10, 8, 3), float64] */;
    %203 = sinh(%202) /* ty=Tensor[(10, 8, 3), float64] */;
    %204 = cast(%203, dtype="float32") /* ty=Tensor[(10, 8, 3), float32] */;
    %205 = @func_6433(%192) /* ty=Tensor[(14, 16, 3), int64] */;
    %206 = %201.3;
    %207 = tan(%204) /* ty=Tensor[(10, 8, 3), float32] */;
    %208 = @func_4496() /* ty=Tensor[(14, 16, 3), float32] */;
    (%190, %205, %206, meta[relay.Constant][11] /* ty=Tensor[(1210), uint64] */, %var_7072, meta[relay.Constant][12] /* ty=Tensor[(5, 2), float32] */, %207, %208)
  };
  %209(%var_7094) /* ty=(Tensor[(14, 16, 3), float32], Tensor[(14, 16, 3), int64], Tensor[(16, 4, 11), float32], Tensor[(1210), uint64], Tensor[(704), float32], Tensor[(5, 2), float32], Tensor[(10, 8, 3), float32], Tensor[(14, 16, 3), float32]) */
}

def @func_3977() -> Tensor[(14, 16, 3), float32] {
  %210 = fn () -> Tensor[(14, 16, 3), float32] {
    @func_3588() /* ty=Tensor[(14, 16, 3), float32] */
  };
  %210() /* ty=Tensor[(14, 16, 3), float32] */
}

def @func_4522() -> (Tensor[(14, 16, 3), float32],) {
  %212 = fn () -> (Tensor[(14, 16, 3), float32],) {
    %211 = @func_3976() /* ty=Tensor[(14, 16, 3), float32] */;
    (%211,)
  };
  %212() /* ty=(Tensor[(14, 16, 3), float32],) */
}

def @func_5907(%var_5906: Tensor[(56), float64]) -> (Tensor[(14, 16, 3), float32], Tensor[(14, 16, 3), float32], Tensor[(4, 1, 14), float64], Tensor[(56), float64]) {
  %219 = fn (%var_5897: Tensor[(56), float64]) -> (Tensor[(14, 16, 3), float32], Tensor[(14, 16, 3), float32], Tensor[(4, 1, 14), float64], Tensor[(56), float64]) {
    %213 = @func_5349() /* ty=(Tensor[(14, 16, 3), float32], Tensor[(14, 16, 3), float32]) */;
    %214 = cast(%var_5897, dtype="float64") /* ty=Tensor[(56), float64] */;
    %215 = reshape(%214, newshape=[4, 1, 14]) /* ty=Tensor[(4, 1, 14), float64] */;
    %216 = %213.0;
    %217 = @func_5419() /* ty=Tensor[(14, 16, 3), float32] */;
    %218 = @func_801(%215) /* ty=Tensor[(4, 1, 14), float64] */;
    (%216, %217, %218, %var_5897)
  };
  %219(%var_5906) /* ty=(Tensor[(14, 16, 3), float32], Tensor[(14, 16, 3), float32], Tensor[(4, 1, 14), float64], Tensor[(56), float64]) */
}

def @func_5778() -> (Tensor[(14, 16, 3), float32],) {
  %220 = @func_3976() /* ty=Tensor[(14, 16, 3), float32] */;
  (%220,)
}

def @func_6374() -> (Tensor[(14, 16, 3), float32],) {
  @func_6372() /* ty=(Tensor[(14, 16, 3), float32],) */
}

def @func_4670(%var_4667: Tensor[(56), float64], %var_4668: Tensor[(252), int16], %var_4669: Tensor[(14, 2, 4), int8]) -> (Tensor[(56), uint32], Tensor[(14, 16, 3), float32], Tensor[(112), float32], Tensor[(56), float64], int16, Tensor[(252), int16], Tensor[(675), float32], Tensor[(14, 16, 3), float32], Tensor[(14, 2, 4), float64]) {
  %250 = fn (%var_4574: Tensor[(56), float64], %var_4636: Tensor[(252), int16], %var_4659: Tensor[(14, 2, 4), int8]) -> (Tensor[(56), uint32], Tensor[(14, 16, 3), float32], Tensor[(112), float32], Tensor[(56), float64], int16, Tensor[(252), int16], Tensor[(675), float32], Tensor[(14, 16, 3), float32], Tensor[(14, 2, 4), float64]) {
    %221 = @func_4544() /* ty=Tensor[(56), float64] */;
    %222 = cast(%var_4574, dtype="uint32") /* ty=Tensor[(56), uint32] */;
    %223 = shape_of(%221, dtype="int32") /* ty=Tensor[(1), int32] */;
    %224 = cast(%221, dtype="uint32") /* ty=Tensor[(56), uint32] */;
    %225 = dyn.reshape(%222, %223, newshape=[]) /* ty=Tensor[(?), uint32] */;
    %226 = @func_4521() /* ty=(Tensor[(14, 16, 3), float32],) */;
    %227 = cast(meta[relay.Constant][15] /* ty=int16 */, dtype="int16") /* ty=int16 */;
    %228 = cast(%var_4636, dtype="int16") /* ty=Tensor[(252), int16] */;
    %229 = cast(meta[relay.Constant][16] /* ty=Tensor[(675), float32] */, dtype="float32") /* ty=Tensor[(675), float32] */;
    %230 = reshape(%227, newshape=[]) /* ty=int16 */;
    %231 = reshape(%228, newshape=[2, 14, 9]) /* ty=Tensor[(2, 14, 9), int16] */;
    %232 = reshape(%229, newshape=[675]) /* ty=Tensor[(675), float32] */;
    %233 = @func_1852(%230, %231, %232) /* ty=(Tensor[(2, 14, 9), int16], Tensor[(56), float64], Tensor[(675), float32], Tensor[(56), float64], Tensor[(16, 4, 11), float32], Tensor[(10), float32], Tensor[(375), float64], Tensor[(4, 1, 14), float64]) */;
    %234 = @func_4433() /* ty=(Tensor[(14, 16, 3), float32],) */;
    %235 = cast(meta[relay.Constant][14] /* ty=Tensor[(112), float32] */, dtype="float32") /* ty=Tensor[(112), float32] */;
    %236 = cast(meta[relay.Constant][14] /* ty=Tensor[(112), float32] */, dtype="float32") /* ty=Tensor[(112), float32] */;
    %237 = reshape(%235, newshape=[14, 2, 4]) /* ty=Tensor[(14, 2, 4), float32] */;
    %238 = reshape(%236, newshape=[14, 2, 4]) /* ty=Tensor[(14, 2, 4), float32] */;
    %239 = @func_1482(%237, %238) /* ty=(Tensor[(14, 2, 4), float32], Tensor[(14, 2, 4), int8]) */;
    %240 = %239.1;
    %241 = cast(%var_4659, dtype="float64") /* ty=Tensor[(14, 2, 4), float64] */;
    %242 = shape_of(%240, dtype="int32") /* ty=Tensor[(3), int32] */;
    %243 = cast(%240, dtype="float64") /* ty=Tensor[(14, 2, 4), float64] */;
    %244 = dyn.reshape(%241, %242, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
    %245 = subtract(%224, %225) /* ty=Tensor[(56), uint32] */;
    %246 = %226.0;
    %247 = %233.3;
    %248 = %234.0;
    %249 = divide(%243, %244) /* ty=Tensor[(14, 2, 4), float64] */;
    (%245, %246, meta[relay.Constant][14] /* ty=Tensor[(112), float32] */, %247, meta[relay.Constant][15] /* ty=int16 */, %var_4636, meta[relay.Constant][16] /* ty=Tensor[(675), float32] */, %248, %249)
  };
  %250(%var_4667, %var_4668, %var_4669) /* ty=(Tensor[(56), uint32], Tensor[(14, 16, 3), float32], Tensor[(112), float32], Tensor[(56), float64], int16, Tensor[(252), int16], Tensor[(675), float32], Tensor[(14, 16, 3), float32], Tensor[(14, 2, 4), float64]) */
}

def @func_8792(%var_8791: Tensor[(15, 13, 14), bool]) -> (Tensor[(15, 13, 14), bool], Tensor[(3, 6, 5), bool], Tensor[(1, 90), uint16]) {
  %257 = fn (%var_8782: Tensor[(15, 13, 14), bool]) -> (Tensor[(15, 13, 14), bool], Tensor[(3, 6, 5), bool], Tensor[(1, 90), uint16]) {
    %251 = cast(meta[relay.Constant][17] /* ty=Tensor[(15, 1, 14), bool] */, dtype="bool") /* ty=Tensor[(15, 1, 14), bool] */;
    %252 = cast(%var_8782, dtype="bool") /* ty=Tensor[(15, 13, 14), bool] */;
    %253 = cast(meta[relay.Constant][18] /* ty=Tensor[(1, 90), uint16] */, dtype="uint16") /* ty=Tensor[(1, 90), uint16] */;
    %254 = reshape(%253, newshape=[3, 6, 5]) /* ty=Tensor[(3, 6, 5), uint16] */;
    %255 = logical_or(%251, %252) /* ty=Tensor[(15, 13, 14), bool] */;
    %256 = @func_5228(%254) /* ty=Tensor[(3, 6, 5), bool] */;
    (%255, %256, meta[relay.Constant][18] /* ty=Tensor[(1, 90), uint16] */)
  };
  %257(%var_8791) /* ty=(Tensor[(15, 13, 14), bool], Tensor[(3, 6, 5), bool], Tensor[(1, 90), uint16]) */
}

def @func_6886(%var_6884: Tensor[(112), float32]) -> (Tensor[(14, 16, 3), float32], Tensor[(16), uint16], Tensor[(1, 720), float32], Tensor[(112), float32], Tensor[(14, 16, 3), float32]) {
  @func_6883(%var_6884) /* ty=(Tensor[(14, 16, 3), float32], Tensor[(16), uint16], Tensor[(1, 720), float32], Tensor[(112), float32], Tensor[(14, 16, 3), float32]) */
}

def @func_8119(%var_8111: int32, %var_8113: Tensor[(14, 4), float64], %var_8114: Tensor[(375), float64]) -> (Tensor[(2, 4, 2), bool], Tensor[(14, 16, 3), float32], Tensor[(14, 16, 3), float32], Tensor[(720), float32], Tensor[(112), float32], Tensor[(5, 11, 11), bool], Tensor[(605), int32], Tensor[(675), float32], int32, Tensor[(60), int32], Tensor[(14, 4), float64], Tensor[(375), float64]) {
  %258 = @func_4384() /* ty=(Tensor[(14, 16, 3), float32], Tensor[(14, 16, 3), float32], Tensor[(2, 4, 2), bool], Tensor[(16), uint16]) */;
  %259 = cast(meta[relay.Constant][19] /* ty=Tensor[(720), float32] */, dtype="float32") /* ty=Tensor[(720), float32] */;
  %260 = cast(meta[relay.Constant][20] /* ty=Tensor[(112), float32] */, dtype="float32") /* ty=Tensor[(112), float32] */;
  %261 = reshape(%259, newshape=[360, 2]) /* ty=Tensor[(360, 2), float32] */;
  %262 = reshape(%260, newshape=[28, 4]) /* ty=Tensor[(28, 4), float32] */;
  %263 = @func_3780(%261, %262) /* ty=(Tensor[(14, 16, 3), float32], Tensor[(6, 15, 8), float32], Tensor[(28, 4), float32], Tensor[(14, 16, 3), float32], Tensor[(360, 2), float32]) */;
  %264 = cast(meta[relay.Constant][21] /* ty=Tensor[(605), int32] */, dtype="int32") /* ty=Tensor[(605), int32] */;
  %265 = cast(meta[relay.Constant][21] /* ty=Tensor[(605), int32] */, dtype="int32") /* ty=Tensor[(605), int32] */;
  %266 = reshape(%264, newshape=[5, 11, 11]) /* ty=Tensor[(5, 11, 11), int32] */;
  %267 = reshape(%265, newshape=[5, 11, 11]) /* ty=Tensor[(5, 11, 11), int32] */;
  %268 = @func_2102(%266, %267) /* ty=(Tensor[(5, 11, 11), bool],) */;
  %269 = cast(%var_8111, dtype="int32") /* ty=int32 */;
  %270 = cast(meta[relay.Constant][22] /* ty=Tensor[(60), int32] */, dtype="int32") /* ty=Tensor[(60), int32] */;
  %271 = cast(%var_8113, dtype="float64") /* ty=Tensor[(14, 4), float64] */;
  %272 = cast(%var_8114, dtype="float64") /* ty=Tensor[(375), float64] */;
  %273 = reshape(%269, newshape=[]) /* ty=int32 */;
  %274 = reshape(%270, newshape=[60]) /* ty=Tensor[(60), int32] */;
  %275 = reshape(%271, newshape=[56]) /* ty=Tensor[(56), float64] */;
  %276 = reshape(%272, newshape=[375]) /* ty=Tensor[(375), float64] */;
  %277 = @func_5670(%273, %274, %275, %276) /* ty=(Tensor[(14, 16, 3), float32], Tensor[(14, 16, 3), float32], int32, Tensor[(60), int32], Tensor[(14, 16, 3), float32], Tensor[(15, 9, 5), float32], Tensor[(675), float32], Tensor[(56), float64], Tensor[(15, 5, 5), bool], Tensor[(375), float64]) */;
  %278 = %258.2;
  %279 = @func_6340() /* ty=Tensor[(14, 16, 3), float32] */;
  %280 = %263.0;
  %281 = %268.0;
  %282 = %277.6;
  (%278, %279, %280, meta[relay.Constant][19] /* ty=Tensor[(720), float32] */, meta[relay.Constant][20] /* ty=Tensor[(112), float32] */, %281, meta[relay.Constant][21] /* ty=Tensor[(605), int32] */, %282, %var_8111, meta[relay.Constant][22] /* ty=Tensor[(60), int32] */, %var_8113, %var_8114)
}

def @func_1975(%var_1958: Tensor[(9, 4, 1), float64]) -> (Tensor[(9, 4, ?), bool], Tensor[(375), float64], Tensor[(2496), float32], Tensor[(375), float64]) {
  %283 = cast(%var_1958, dtype="bool") /* ty=Tensor[(9, 4, 1), bool] */;
  %284 = shape_of(meta[relay.Constant][23] /* ty=Tensor[(9, 4, 1), float64] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %285 = cast(meta[relay.Constant][23] /* ty=Tensor[(9, 4, 1), float64] */, dtype="bool") /* ty=Tensor[(9, 4, 1), bool] */;
  %286 = dyn.reshape(%283, %284, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %287 = cast(meta[relay.Constant][24] /* ty=Tensor[(2496), float32] */, dtype="float32") /* ty=Tensor[(2496), float32] */;
  %288 = cast(meta[relay.Constant][25] /* ty=Tensor[(375), float64] */, dtype="float64") /* ty=Tensor[(375), float64] */;
  %289 = reshape(%287, newshape=[13, 12, 16]) /* ty=Tensor[(13, 12, 16), float32] */;
  %290 = reshape(%288, newshape=[375]) /* ty=Tensor[(375), float64] */;
  %291 = @func_453(%289, %290) /* ty=(Tensor[(15, 5, 5), bool], Tensor[(10), float32], Tensor[(375), float64], Tensor[(2, 4, 2), bool], Tensor[(16), uint16], Tensor[(13, 12, 16), float64]) */;
  %292 = greater_equal(%285, %286) /* ty=Tensor[(9, 4, ?), bool] */;
  %293 = %291.2;
  (%292, %293, meta[relay.Constant][24] /* ty=Tensor[(2496), float32] */, meta[relay.Constant][25] /* ty=Tensor[(375), float64] */)
}

def @func_362(%var_357: Tensor[(2, 4, 2), uint16]) -> (Tensor[(2, 4, 2), bool],) {
  %294 = cast(meta[relay.Constant][26] /* ty=Tensor[(2, 4, 2), uint16] */, dtype="bool") /* ty=Tensor[(2, 4, 2), bool] */;
  %295 = shape_of(%var_357, dtype="int32") /* ty=Tensor[(3), int32] */;
  %296 = cast(%var_357, dtype="bool") /* ty=Tensor[(2, 4, 2), bool] */;
  %297 = dyn.reshape(%294, %295, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %298 = greater_equal(%296, %297) /* ty=Tensor[(2, 4, 2), bool] */;
  (%298,)
}

def @func_4296() -> Tensor[(14, 16, 3), float32] {
  %299 = fn () -> Tensor[(14, 16, 3), float32] {
    @func_3824() /* ty=Tensor[(14, 16, 3), float32] */
  };
  %299() /* ty=Tensor[(14, 16, 3), float32] */
}

def @func_6883(%var_6870: Tensor[(112), float32]) -> (Tensor[(14, 16, 3), float32], Tensor[(16), uint16], Tensor[(1, 720), float32], Tensor[(112), float32], Tensor[(14, 16, 3), float32]) {
  %300 = @func_5778() /* ty=(Tensor[(14, 16, 3), float32],) */;
  %301 = cast(meta[relay.Constant][27] /* ty=Tensor[(1, 720), float32] */, dtype="float32") /* ty=Tensor[(1, 720), float32] */;
  %302 = cast(%var_6870, dtype="float32") /* ty=Tensor[(112), float32] */;
  %303 = reshape(%301, newshape=[6, 15, 8]) /* ty=Tensor[(6, 15, 8), float32] */;
  %304 = reshape(%302, newshape=[112]) /* ty=Tensor[(112), float32] */;
  %305 = @func_2053(%303, %304) /* ty=(Tensor[(6, 15, 8), float32], Tensor[(14, 2, 4), int8], Tensor[(112), float32], Tensor[(2, 4, 2), bool], Tensor[(16), uint16]) */;
  %306 = @func_6289() /* ty=(Tensor[(14, 16, 3), float32], Tensor[(14, 16, 3), float32]) */;
  %307 = %300.0;
  %308 = %305.4;
  %309 = %306.1;
  (%307, %308, meta[relay.Constant][27] /* ty=Tensor[(1, 720), float32] */, %var_6870, %309)
}

def @func_7720() -> (Tensor[(14, 16, 3), float32],) {
  %310 = @func_5349() /* ty=(Tensor[(14, 16, 3), float32], Tensor[(14, 16, 3), float32]) */;
  %311 = %310.1;
  (%311,)
}

def @func_7756() -> (Tensor[(14, 16, 3), float32],) {
  @func_7754() /* ty=(Tensor[(14, 16, 3), float32],) */
}

def @func_8271() -> Tensor[(14, 16, 3), float32] {
  @func_8269() /* ty=Tensor[(14, 16, 3), float32] */
}

def @func_5751(%var_5677: Tensor[(16, 2, 16), float32]) -> (Tensor[(4, 9, 6), float64], Tensor[(704), float32], Tensor[(10), float32], Tensor[(375), float64], Tensor[(14, 16, 3), float32], Tensor[(14, 16, 3), float32], Tensor[(14, 16, 3), float32], Tensor[(16, 2, 16), int64], Tensor[(16, 2, 16), int8]) {
  %312 = @func_4803() /* ty=(Tensor[(4, 9, 6), float64],) */;
  %313 = cast(meta[relay.Constant][28] /* ty=Tensor[(10), float32] */, dtype="float32") /* ty=Tensor[(10), float32] */;
  %314 = cast(meta[relay.Constant][29] /* ty=Tensor[(375), float64] */, dtype="float64") /* ty=Tensor[(375), float64] */;
  %315 = reshape(%313, newshape=[10, 1, 1]) /* ty=Tensor[(10, 1, 1), float32] */;
  %316 = reshape(%314, newshape=[375]) /* ty=Tensor[(375), float64] */;
  %317 = @func_256(%315, %316) /* ty=(Tensor[(16, 4, 11), float32], Tensor[(704), float32], Tensor[(15, 5, 5), bool], Tensor[(15, 5, 5), bool], Tensor[(10, 1, 375), int64], Tensor[(16, 4, 11), float32], Tensor[(10, 1, 1), float32]) */;
  %318 = cast(%var_5677, dtype="float32") /* ty=Tensor[(16, 2, 16), float32] */;
  %319 = sin(%318) /* ty=Tensor[(16, 2, 16), float32] */;
  %320 = cast(%319, dtype="float32") /* ty=Tensor[(16, 2, 16), float32] */;
  %321 = acosh(%320) /* ty=Tensor[(16, 2, 16), float32] */;
  %322 = cast(meta[relay.Constant][30] /* ty=Tensor[(16, 2, 16), float32] */, dtype="int64") /* ty=Tensor[(16, 2, 16), int64] */;
  %323 = shape_of(%321, dtype="int32") /* ty=Tensor[(3), int32] */;
  %324 = cast(%321, dtype="int64") /* ty=Tensor[(16, 2, 16), int64] */;
  %325 = dyn.reshape(%322, %323, newshape=[]) /* ty=Tensor[(?, ?, ?), int64] */;
  %326 = cast(%321, dtype="bool") /* ty=Tensor[(16, 2, 16), bool] */;
  %327 = shape_of(%319, dtype="int32") /* ty=Tensor[(3), int32] */;
  %328 = cast(%319, dtype="bool") /* ty=Tensor[(16, 2, 16), bool] */;
  %329 = dyn.reshape(%326, %327, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %330 = less(%328, %329) /* ty=Tensor[(16, 2, 16), bool] */;
  %331 = cast(%330, dtype="int8") /* ty=Tensor[(16, 2, 16), int8] */;
  %332 = shape_of(%319, dtype="int32") /* ty=Tensor[(3), int32] */;
  %333 = cast(%319, dtype="int8") /* ty=Tensor[(16, 2, 16), int8] */;
  %334 = dyn.reshape(%331, %332, newshape=[]) /* ty=Tensor[(?, ?, ?), int8] */;
  %335 = %312.0;
  %336 = %317.1;
  %337 = @func_5463() /* ty=Tensor[(14, 16, 3), float32] */;
  %338 = @func_3734() /* ty=Tensor[(14, 16, 3), float32] */;
  %339 = @func_4322() /* ty=Tensor[(14, 16, 3), float32] */;
  %340 = add(%324, %325) /* ty=Tensor[(16, 2, 16), int64] */;
  %341 = bitwise_and(%333, %334) /* ty=Tensor[(16, 2, 16), int8] */;
  (%335, %336, meta[relay.Constant][28] /* ty=Tensor[(10), float32] */, meta[relay.Constant][29] /* ty=Tensor[(375), float64] */, %337, %338, %339, %340, %341)
}

def @func_8648() -> (Tensor[(2, 4, 2), bool], Tensor[(14, 16, 3), float32]) {
  %342 = @func_4384() /* ty=(Tensor[(14, 16, 3), float32], Tensor[(14, 16, 3), float32], Tensor[(2, 4, 2), bool], Tensor[(16), uint16]) */;
  %343 = %342.2;
  %344 = @func_3976() /* ty=Tensor[(14, 16, 3), float32] */;
  (%343, %344)
}

def @func_7589(%var_7577: Tensor[(4, 16, 11), float64]) -> Tensor[(4, 16, 11), float64] {
  %345 = cast(%var_7577, dtype="float64") /* ty=Tensor[(4, 16, 11), float64] */;
  atanh(%345) /* ty=Tensor[(4, 16, 11), float64] */
}

def @func_8353() -> Tensor[(14, 16, 3), float32] {
  %346 = @func_3801() /* ty=(Tensor[(14, 16, 3), float32], Tensor[(4, 1, 14), float64], Tensor[(56), float64]) */;
  %346.0
}

def @func_5977() -> Tensor[(14, 16, 3), float32] {
  @func_5975() /* ty=Tensor[(14, 16, 3), float32] */
}

def @func_3736() -> Tensor[(14, 16, 3), float32] {
  @func_3734() /* ty=Tensor[(14, 16, 3), float32] */
}

def @func_6751(%var_6750: Tensor[(16), uint16]) -> (Tensor[(14, 16, 3), float32], Tensor[(2, 4, 2), bool], Tensor[(16), uint16]) {
  %352 = fn (%var_6704: Tensor[(16), uint16]) -> (Tensor[(14, 16, 3), float32], Tensor[(2, 4, 2), bool], Tensor[(16), uint16]) {
    %347 = cast(%var_6704, dtype="uint16") /* ty=Tensor[(16), uint16] */;
    %348 = reshape(%347, newshape=[2, 4, 2]) /* ty=Tensor[(2, 4, 2), uint16] */;
    %349 = @func_362(%348) /* ty=(Tensor[(2, 4, 2), bool],) */;
    %350 = @func_3588() /* ty=Tensor[(14, 16, 3), float32] */;
    %351 = %349.0;
    (%350, %351, %var_6704)
  };
  %352(%var_6750) /* ty=(Tensor[(14, 16, 3), float32], Tensor[(2, 4, 2), bool], Tensor[(16), uint16]) */
}

def @func_5780() -> (Tensor[(14, 16, 3), float32],) {
  @func_5778() /* ty=(Tensor[(14, 16, 3), float32],) */
}

def @func_7974() -> Tensor[(14, 16, 3), float32] {
  %354 = fn () -> Tensor[(14, 16, 3), float32] {
    %353 = @func_7720() /* ty=(Tensor[(14, 16, 3), float32],) */;
    %353.0
  };
  %354() /* ty=Tensor[(14, 16, 3), float32] */
}

def @func_2393(%var_2378: Tensor[(2, 5, 1), float64]) -> (Tensor[(2, 5, 1), float64], Tensor[(14, 3, 13), float64], Tensor[(546), uint32]) {
  %355 = cast(%var_2378, dtype="float64") /* ty=Tensor[(2, 5, 1), float64] */;
  %356 = cast(meta[relay.Constant][31] /* ty=Tensor[(546), uint32] */, dtype="uint32") /* ty=Tensor[(546), uint32] */;
  %357 = reshape(%356, newshape=[14, 3, 13]) /* ty=Tensor[(14, 3, 13), uint32] */;
  %358 = @func_2234(%357) /* ty=(Tensor[(14, 3, 13), uint32], Tensor[(14, 3, 13), float64]) */;
  %359 = acos(%355) /* ty=Tensor[(2, 5, 1), float64] */;
  %360 = %358.1;
  (%359, %360, meta[relay.Constant][31] /* ty=Tensor[(546), uint32] */)
}

def @func_8534(%var_8533: Tensor[(375), float64]) -> (Tensor[(16), uint16], Tensor[(2, 4, 2), bool], Tensor[(375), float64], Tensor[(672), float32], Tensor[(2, 15, 6), float64]) {
  %375 = fn (%var_8489: Tensor[(375), float64]) -> (Tensor[(16), uint16], Tensor[(2, 4, 2), bool], Tensor[(375), float64], Tensor[(672), float32], Tensor[(2, 15, 6), float64]) {
    %361 = @func_8468() /* ty=(Tensor[(16), uint16],) */;
    %362 = cast(%var_8489, dtype="float64") /* ty=Tensor[(375), float64] */;
    %363 = %361.0;
    %364 = cast(%363, dtype="uint16") /* ty=Tensor[(16), uint16] */;
    %365 = cast(meta[relay.Constant][32] /* ty=Tensor[(672), float32] */, dtype="float32") /* ty=Tensor[(672), float32] */;
    %366 = reshape(%362, newshape=[375]) /* ty=Tensor[(375), float64] */;
    %367 = reshape(%364, newshape=[16]) /* ty=Tensor[(16), uint16] */;
    %368 = reshape(%365, newshape=[14, 16, 3]) /* ty=Tensor[(14, 16, 3), float32] */;
    %369 = @func_4071(%366, %367, %368) /* ty=(Tensor[(14, 16, 3), float32], Tensor[(375), float64], Tensor[(2, 4, 2), bool], Tensor[(16), uint16], Tensor[(9, 3, 4), int16], Tensor[(27), int16], Tensor[(108), int16], Tensor[(375), float64], Tensor[(36), float64], Tensor[(14, 16, 3), uint32]) */;
    %370 = @func_5141() /* ty=(Tensor[(2, 15, 6), int8],) */;
    %371 = %370.0;
    %372 = cast(%371, dtype="float64") /* ty=Tensor[(2, 15, 6), float64] */;
    %373 = %369.2;
    %374 = log10(%372) /* ty=Tensor[(2, 15, 6), float64] */;
    (%363, %373, %var_8489, meta[relay.Constant][32] /* ty=Tensor[(672), float32] */, %374)
  };
  %375(%var_8533) /* ty=(Tensor[(16), uint16], Tensor[(2, 4, 2), bool], Tensor[(375), float64], Tensor[(672), float32], Tensor[(2, 15, 6), float64]) */
}

def @func_3969() -> Tensor[(14, 16, 3), float32] {
  @func_3824() /* ty=Tensor[(14, 16, 3), float32] */
}

def @func_6289() -> (Tensor[(14, 16, 3), float32], Tensor[(14, 16, 3), float32]) {
  %376 = @func_5060() /* ty=(Tensor[(14, 16, 3), float32], Tensor[(14, 16, 3), float32]) */;
  %377 = %376.1;
  %378 = @func_3588() /* ty=Tensor[(14, 16, 3), float32] */;
  (%377, %378)
}

def @func_3825() -> Tensor[(14, 16, 3), float32] {
  %379 = fn () -> Tensor[(14, 16, 3), float32] {
    @func_3734() /* ty=Tensor[(14, 16, 3), float32] */
  };
  %379() /* ty=Tensor[(14, 16, 3), float32] */
}

def @func_259(%var_257: Tensor[(10, 1, 1), float32], %var_258: Tensor[(375), float64]) -> (Tensor[(16, 4, 11), float32], Tensor[(704), float32], Tensor[(15, 5, 5), bool], Tensor[(15, 5, 5), bool], Tensor[(10, 1, 375), int64], Tensor[(16, 4, 11), float32], Tensor[(10, 1, 1), float32]) {
  %405 = fn (%var_212: Tensor[(10, 1, 1), float32], %var_229: Tensor[(375), float64]) -> (Tensor[(16, 4, 11), float32], Tensor[(704), float32], Tensor[(15, 5, 5), bool], Tensor[(15, 5, 5), bool], Tensor[(10, 1, 375), int64], Tensor[(16, 4, 11), float32], Tensor[(10, 1, 1), float32]) {
    %380 = cast(meta[relay.Constant][33] /* ty=Tensor[(704), float32] */, dtype="float32") /* ty=Tensor[(704), float32] */;
    %381 = reshape(%380, newshape=[16, 4, 11]) /* ty=Tensor[(16, 4, 11), float32] */;
    %382 = @func_84(%381) /* ty=(Tensor[(16, 4, 11), float32],) */;
    %383 = cast(%var_229, dtype="float64") /* ty=Tensor[(375), float64] */;
    %384 = reshape(%383, newshape=[15, 5, 5]) /* ty=Tensor[(15, 5, 5), float64] */;
    %385 = @func_135(%384) /* ty=(Tensor[(16, 4, 11), float32], Tensor[(704), float32], Tensor[(15, 5, 5), bool], Tensor[(16, 4, 11), float32], Tensor[(16, 4, 11), float32], Tensor[(15, 5, 5), bool]) */;
    %386 = cast(%var_229, dtype="float64") /* ty=Tensor[(375), float64] */;
    %387 = reshape(%386, newshape=[15, 5, 5]) /* ty=Tensor[(15, 5, 5), float64] */;
    %388 = @func_135(%387) /* ty=(Tensor[(16, 4, 11), float32], Tensor[(704), float32], Tensor[(15, 5, 5), bool], Tensor[(16, 4, 11), float32], Tensor[(16, 4, 11), float32], Tensor[(15, 5, 5), bool]) */;
    %389 = cast(%var_212, dtype="float32") /* ty=Tensor[(10, 1, 1), float32] */;
    %390 = asinh(%389) /* ty=Tensor[(10, 1, 1), float32] */;
    %391 = cast(%390, dtype="int64") /* ty=Tensor[(10, 1, 1), int64] */;
    %392 = cast(%var_229, dtype="int64") /* ty=Tensor[(375), int64] */;
    %393 = %385.5;
    %394 = cast(%393, dtype="float64") /* ty=Tensor[(15, 5, 5), float64] */;
    %395 = reshape(%394, newshape=[15, 5, 5]) /* ty=Tensor[(15, 5, 5), float64] */;
    %396 = @func_135(%395) /* ty=(Tensor[(16, 4, 11), float32], Tensor[(704), float32], Tensor[(15, 5, 5), bool], Tensor[(16, 4, 11), float32], Tensor[(16, 4, 11), float32], Tensor[(15, 5, 5), bool]) */;
    %397 = cast(%390, dtype="float32") /* ty=Tensor[(10, 1, 1), float32] */;
    %398 = cosh(%397) /* ty=Tensor[(10, 1, 1), float32] */;
    %399 = cast(%398, dtype="float32") /* ty=Tensor[(10, 1, 1), float32] */;
    %400 = %382.0;
    %401 = %388.5;
    %402 = bitwise_xor(%391, %392) /* ty=Tensor[(10, 1, 375), int64] */;
    %403 = %396.0;
    %404 = acosh(%399) /* ty=Tensor[(10, 1, 1), float32] */;
    (%400, meta[relay.Constant][33] /* ty=Tensor[(704), float32] */, %393, %401, %402, %403, %404)
  };
  %405(%var_257, %var_258) /* ty=(Tensor[(16, 4, 11), float32], Tensor[(704), float32], Tensor[(15, 5, 5), bool], Tensor[(15, 5, 5), bool], Tensor[(10, 1, 375), int64], Tensor[(16, 4, 11), float32], Tensor[(10, 1, 1), float32]) */
}

def @func_8269() -> Tensor[(14, 16, 3), float32] {
  %406 = @func_7571() /* ty=(Tensor[(14, 16, 3), float32], Tensor[(4, 1, 14), float64], Tensor[(56), float64]) */;
  %406.0
}

def @func_334(%var_330: Tensor[(11, 11, 10), uint64], %var_331: Tensor[(11, 11, 10), uint64], %var_332: Tensor[(8, 88), float32], %var_333: Tensor[(10), float32]) -> (Tensor[(11, 11, 10), bool], Tensor[(16, 4, 11), float32], Tensor[(8, 88), float32], Tensor[(16, 4, 11), float32], Tensor[(10), float32], Tensor[(375), float64]) {
  @func_328(%var_330, %var_331, %var_332, %var_333) /* ty=(Tensor[(11, 11, 10), bool], Tensor[(16, 4, 11), float32], Tensor[(8, 88), float32], Tensor[(16, 4, 11), float32], Tensor[(10), float32], Tensor[(375), float64]) */
}

def @func_2396(%var_2394: Tensor[(2, 5, 1), float64]) -> (Tensor[(2, 5, 1), float64], Tensor[(14, 3, 13), float64], Tensor[(546), uint32]) {
  @func_2393(%var_2394) /* ty=(Tensor[(2, 5, 1), float64], Tensor[(14, 3, 13), float64], Tensor[(546), uint32]) */
}

def @func_7957() -> Tensor[(14, 16, 3), float32] {
  %407 = fn () -> Tensor[(14, 16, 3), float32] {
    @func_7356() /* ty=Tensor[(14, 16, 3), float32] */
  };
  %407() /* ty=Tensor[(14, 16, 3), float32] */
}

def @func_4249(%var_4232: Tensor[(14, 16, 3), float32], %var_4239: Tensor[(14, 16, 3), float32], %var_4247: Tensor[(2, 28), float64]) -> (Tensor[(14, 16, 3), bool], Tensor[(14, 16, 3), float64], Tensor[(56), float64], Tensor[(225, 3), float32], Tensor[(2, 28), float64]) {
  %408 = @func_3976() /* ty=Tensor[(14, 16, 3), float32] */;
  %409 = cast(%var_4232, dtype="bool") /* ty=Tensor[(14, 16, 3), bool] */;
  %410 = shape_of(%408, dtype="int32") /* ty=Tensor[(3), int32] */;
  %411 = cast(%408, dtype="bool") /* ty=Tensor[(14, 16, 3), bool] */;
  %412 = dyn.reshape(%409, %410, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %413 = cast(%var_4239, dtype="float64") /* ty=Tensor[(14, 16, 3), float64] */;
  %414 = shape_of(%var_4232, dtype="int32") /* ty=Tensor[(3), int32] */;
  %415 = cast(%var_4232, dtype="float64") /* ty=Tensor[(14, 16, 3), float64] */;
  %416 = dyn.reshape(%413, %414, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %417 = cast(meta[relay.Constant][34] /* ty=Tensor[(225, 3), float32] */, dtype="float32") /* ty=Tensor[(225, 3), float32] */;
  %418 = cast(meta[relay.Constant][34] /* ty=Tensor[(225, 3), float32] */, dtype="float32") /* ty=Tensor[(225, 3), float32] */;
  %419 = cast(%var_4247, dtype="float64") /* ty=Tensor[(2, 28), float64] */;
  %420 = reshape(%417, newshape=[15, 9, 5]) /* ty=Tensor[(15, 9, 5), float32] */;
  %421 = reshape(%418, newshape=[15, 9, 5]) /* ty=Tensor[(15, 9, 5), float32] */;
  %422 = reshape(%419, newshape=[56]) /* ty=Tensor[(56), float64] */;
  %423 = @func_1368(%420, %421, %422) /* ty=(Tensor[(15, 9, 5), float32], Tensor[(4, 1, 14), float64], Tensor[(56), float64]) */;
  %424 = logical_or(%411, %412) /* ty=Tensor[(14, 16, 3), bool] */;
  %425 = floor_mod(%415, %416) /* ty=Tensor[(14, 16, 3), float64] */;
  %426 = %423.2;
  (%424, %425, %426, meta[relay.Constant][34] /* ty=Tensor[(225, 3), float32] */, %var_4247)
}

def @func_7571() -> (Tensor[(14, 16, 3), float32], Tensor[(4, 1, 14), float64], Tensor[(56), float64]) {
  %427 = @func_4851() /* ty=(Tensor[(14, 16, 3), float32],) */;
  %428 = cast(meta[relay.Constant][35] /* ty=Tensor[(56), float64] */, dtype="float64") /* ty=Tensor[(56), float64] */;
  %429 = reshape(%428, newshape=[4, 1, 14]) /* ty=Tensor[(4, 1, 14), float64] */;
  %430 = %427.0;
  %431 = @func_801(%429) /* ty=Tensor[(4, 1, 14), float64] */;
  (%430, %431, meta[relay.Constant][35] /* ty=Tensor[(56), float64] */)
}

def @func_8482() -> (Tensor[(14, 16, 3), float32], Tensor[(6, 5, 6), float64], Tensor[(180), int64]) {
  %440 = fn () -> (Tensor[(14, 16, 3), float32], Tensor[(6, 5, 6), float64], Tensor[(180), int64]) {
    %432 = @func_5060() /* ty=(Tensor[(14, 16, 3), float32], Tensor[(14, 16, 3), float32]) */;
    %433 = cast(meta[relay.Constant][36] /* ty=Tensor[(180), int64] */, dtype="int64") /* ty=Tensor[(180), int64] */;
    %434 = cast(meta[relay.Constant][36] /* ty=Tensor[(180), int64] */, dtype="int64") /* ty=Tensor[(180), int64] */;
    %435 = reshape(%433, newshape=[6, 5, 6]) /* ty=Tensor[(6, 5, 6), int64] */;
    %436 = reshape(%434, newshape=[6, 5, 6]) /* ty=Tensor[(6, 5, 6), int64] */;
    %437 = @func_7316(%435, %436) /* ty=(Tensor[(6, 5, 6), int64], Tensor[(6, 5, 6), float64]) */;
    %438 = %432.0;
    %439 = %437.1;
    (%438, %439, meta[relay.Constant][36] /* ty=Tensor[(180), int64] */)
  };
  %440() /* ty=(Tensor[(14, 16, 3), float32], Tensor[(6, 5, 6), float64], Tensor[(180), int64]) */
}

def @func_456(%var_454: Tensor[(13, 12, 16), float32], %var_455: Tensor[(375), float64]) -> (Tensor[(15, 5, 5), bool], Tensor[(10), float32], Tensor[(375), float64], Tensor[(2, 4, 2), bool], Tensor[(16), uint16], Tensor[(13, 12, 16), float64]) {
  %455 = fn (%var_416: Tensor[(13, 12, 16), float32], %var_423: Tensor[(375), float64]) -> (Tensor[(15, 5, 5), bool], Tensor[(10), float32], Tensor[(375), float64], Tensor[(2, 4, 2), bool], Tensor[(16), uint16], Tensor[(13, 12, 16), float64]) {
    %441 = cast(meta[relay.Constant][37] /* ty=Tensor[(10), float32] */, dtype="float32") /* ty=Tensor[(10), float32] */;
    %442 = cast(%var_423, dtype="float64") /* ty=Tensor[(375), float64] */;
    %443 = reshape(%441, newshape=[10, 1, 1]) /* ty=Tensor[(10, 1, 1), float32] */;
    %444 = reshape(%442, newshape=[375]) /* ty=Tensor[(375), float64] */;
    %445 = @func_256(%443, %444) /* ty=(Tensor[(16, 4, 11), float32], Tensor[(704), float32], Tensor[(15, 5, 5), bool], Tensor[(15, 5, 5), bool], Tensor[(10, 1, 375), int64], Tensor[(16, 4, 11), float32], Tensor[(10, 1, 1), float32]) */;
    %446 = cast(meta[relay.Constant][38] /* ty=Tensor[(16), uint16] */, dtype="uint16") /* ty=Tensor[(16), uint16] */;
    %447 = reshape(%446, newshape=[2, 4, 2]) /* ty=Tensor[(2, 4, 2), uint16] */;
    %448 = @func_362(%447) /* ty=(Tensor[(2, 4, 2), bool],) */;
    %449 = cast(%var_416, dtype="float32") /* ty=Tensor[(13, 12, 16), float32] */;
    %450 = atan(%449) /* ty=Tensor[(13, 12, 16), float32] */;
    %451 = cast(%450, dtype="float64") /* ty=Tensor[(13, 12, 16), float64] */;
    %452 = %445.2;
    %453 = %448.0;
    %454 = asinh(%451) /* ty=Tensor[(13, 12, 16), float64] */;
    (%452, meta[relay.Constant][37] /* ty=Tensor[(10), float32] */, %var_423, %453, meta[relay.Constant][38] /* ty=Tensor[(16), uint16] */, %454)
  };
  %455(%var_454, %var_455) /* ty=(Tensor[(15, 5, 5), bool], Tensor[(10), float32], Tensor[(375), float64], Tensor[(2, 4, 2), bool], Tensor[(16), uint16], Tensor[(13, 12, 16), float64]) */
}

def @func_2106(%var_2104: Tensor[(5, 11, 11), int32], %var_2105: Tensor[(5, 11, 11), int32]) -> (Tensor[(5, 11, 11), bool],) {
  @func_2102(%var_2104, %var_2105) /* ty=(Tensor[(5, 11, 11), bool],) */
}

def @func_6143(%var_6104: Tensor[(56), float64]) -> (Tensor[(14, 16, 3), float32], Tensor[(56), float64], Tensor[(14, 16, 3), float32], Tensor[(15, 9, 5), float32], Tensor[(675), float32]) {
  %456 = @func_3264() /* ty=Tensor[(14, 16, 3), float32] */;
  %457 = cast(%456, dtype="float32") /* ty=Tensor[(14, 16, 3), float32] */;
  %458 = cast(%456, dtype="float32") /* ty=Tensor[(14, 16, 3), float32] */;
  %459 = cast(%var_6104, dtype="float64") /* ty=Tensor[(56), float64] */;
  %460 = reshape(%457, newshape=[14, 16, 3]) /* ty=Tensor[(14, 16, 3), float32] */;
  %461 = reshape(%458, newshape=[14, 16, 3]) /* ty=Tensor[(14, 16, 3), float32] */;
  %462 = reshape(%459, newshape=[2, 28]) /* ty=Tensor[(2, 28), float64] */;
  %463 = @func_4249(%460, %461, %462) /* ty=(Tensor[(14, 16, 3), bool], Tensor[(14, 16, 3), float64], Tensor[(56), float64], Tensor[(225, 3), float32], Tensor[(2, 28), float64]) */;
  %464 = %463.0;
  %465 = cast(%464, dtype="float32") /* ty=Tensor[(14, 16, 3), float32] */;
  %466 = cast(meta[relay.Constant][39] /* ty=Tensor[(675), float32] */, dtype="float32") /* ty=Tensor[(675), float32] */;
  %467 = cast(meta[relay.Constant][39] /* ty=Tensor[(675), float32] */, dtype="float32") /* ty=Tensor[(675), float32] */;
  %468 = cast(%var_6104, dtype="float64") /* ty=Tensor[(56), float64] */;
  %469 = reshape(%466, newshape=[15, 9, 5]) /* ty=Tensor[(15, 9, 5), float32] */;
  %470 = reshape(%467, newshape=[15, 9, 5]) /* ty=Tensor[(15, 9, 5), float32] */;
  %471 = reshape(%468, newshape=[56]) /* ty=Tensor[(56), float64] */;
  %472 = @func_1368(%469, %470, %471) /* ty=(Tensor[(15, 9, 5), float32], Tensor[(4, 1, 14), float64], Tensor[(56), float64]) */;
  %473 = asin(%465) /* ty=Tensor[(14, 16, 3), float32] */;
  %474 = %472.0;
  (%456, %var_6104, %473, %474, meta[relay.Constant][39] /* ty=Tensor[(675), float32] */)
}

def @func_7223() -> Tensor[(14, 16, 3), float32] {
  @func_6627() /* ty=Tensor[(14, 16, 3), float32] */
}

def @func_5307(%var_5306: Tensor[(112), float32]) -> (Tensor[(14, 2, 4), int8], Tensor[(112), float32], Tensor[(14, 16, 3), float32]) {
  %485 = fn (%var_5288: Tensor[(112), float32]) -> (Tensor[(14, 2, 4), int8], Tensor[(112), float32], Tensor[(14, 16, 3), float32]) {
    %475 = cast(%var_5288, dtype="float32") /* ty=Tensor[(112), float32] */;
    %476 = cast(%var_5288, dtype="float32") /* ty=Tensor[(112), float32] */;
    %477 = reshape(%475, newshape=[14, 2, 4]) /* ty=Tensor[(14, 2, 4), float32] */;
    %478 = reshape(%476, newshape=[14, 2, 4]) /* ty=Tensor[(14, 2, 4), float32] */;
    %479 = @func_1482(%477, %478) /* ty=(Tensor[(14, 2, 4), float32], Tensor[(14, 2, 4), int8]) */;
    %480 = @func_4521() /* ty=(Tensor[(14, 16, 3), float32],) */;
    %481 = %480.0;
    %482 = cast(%481, dtype="float32") /* ty=Tensor[(14, 16, 3), float32] */;
    %483 = %479.1;
    %484 = sinh(%482) /* ty=Tensor[(14, 16, 3), float32] */;
    (%483, %var_5288, %484)
  };
  %485(%var_5306) /* ty=(Tensor[(14, 2, 4), int8], Tensor[(112), float32], Tensor[(14, 16, 3), float32]) */
}

def @func_4852() -> (Tensor[(14, 16, 3), float32],) {
  %488 = fn () -> (Tensor[(14, 16, 3), float32],) {
    %486 = @func_3801() /* ty=(Tensor[(14, 16, 3), float32], Tensor[(4, 1, 14), float64], Tensor[(56), float64]) */;
    %487 = %486.0;
    (%487,)
  };
  %488() /* ty=(Tensor[(14, 16, 3), float32],) */
}

def @func_8124(%var_8121: int32, %var_8122: Tensor[(14, 4), float64], %var_8123: Tensor[(375), float64]) -> (Tensor[(2, 4, 2), bool], Tensor[(14, 16, 3), float32], Tensor[(14, 16, 3), float32], Tensor[(720), float32], Tensor[(112), float32], Tensor[(5, 11, 11), bool], Tensor[(605), int32], Tensor[(675), float32], int32, Tensor[(60), int32], Tensor[(14, 4), float64], Tensor[(375), float64]) {
  @func_8119(%var_8121, %var_8122, %var_8123) /* ty=(Tensor[(2, 4, 2), bool], Tensor[(14, 16, 3), float32], Tensor[(14, 16, 3), float32], Tensor[(720), float32], Tensor[(112), float32], Tensor[(5, 11, 11), bool], Tensor[(605), int32], Tensor[(675), float32], int32, Tensor[(60), int32], Tensor[(14, 4), float64], Tensor[(375), float64]) */
}

def @func_8468() -> (Tensor[(16), uint16],) {
  %489 = @func_4384() /* ty=(Tensor[(14, 16, 3), float32], Tensor[(14, 16, 3), float32], Tensor[(2, 4, 2), bool], Tensor[(16), uint16]) */;
  %490 = %489.3;
  (%490,)
}

def @func_6690() -> (Tensor[(14, 16, 3), bool], Tensor[(225, 3), float32], Tensor[(56), float64]) {
  %491 = @func_3734() /* ty=Tensor[(14, 16, 3), float32] */;
  %492 = @func_3264() /* ty=Tensor[(14, 16, 3), float32] */;
  %493 = cast(%492, dtype="bool") /* ty=Tensor[(14, 16, 3), bool] */;
  %494 = shape_of(%491, dtype="int32") /* ty=Tensor[(3), int32] */;
  %495 = cast(%491, dtype="bool") /* ty=Tensor[(14, 16, 3), bool] */;
  %496 = dyn.reshape(%493, %494, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %497 = greater_equal(%495, %496) /* ty=Tensor[(14, 16, 3), bool] */;
  %498 = cast(%497, dtype="float32") /* ty=Tensor[(14, 16, 3), float32] */;
  %499 = cast(%497, dtype="float32") /* ty=Tensor[(14, 16, 3), float32] */;
  %500 = cast(meta[relay.Constant][40] /* ty=Tensor[(56), float64] */, dtype="float64") /* ty=Tensor[(56), float64] */;
  %501 = reshape(%498, newshape=[14, 16, 3]) /* ty=Tensor[(14, 16, 3), float32] */;
  %502 = reshape(%499, newshape=[14, 16, 3]) /* ty=Tensor[(14, 16, 3), float32] */;
  %503 = reshape(%500, newshape=[2, 28]) /* ty=Tensor[(2, 28), float64] */;
  %504 = @func_4249(%501, %502, %503) /* ty=(Tensor[(14, 16, 3), bool], Tensor[(14, 16, 3), float64], Tensor[(56), float64], Tensor[(225, 3), float32], Tensor[(2, 28), float64]) */;
  %505 = %504.3;
  (%497, %505, meta[relay.Constant][40] /* ty=Tensor[(56), float64] */)
}

def @func_8247() -> (Tensor[(14, 16, 3), float32], Tensor[(10, 10, 5), float64], Tensor[(50, 10), float64]) {
  %511 = fn () -> (Tensor[(14, 16, 3), float32], Tensor[(10, 10, 5), float64], Tensor[(50, 10), float64]) {
    %506 = cast(meta[relay.Constant][41] /* ty=Tensor[(50, 10), float64] */, dtype="float64") /* ty=Tensor[(50, 10), float64] */;
    %507 = reshape(%506, newshape=[10, 10, 5]) /* ty=Tensor[(10, 10, 5), float64] */;
    %508 = @func_7330(%507) /* ty=(Tensor[(10, 10, 5), float64], Tensor[(10, 10, 5), float64]) */;
    %509 = @func_3969() /* ty=Tensor[(14, 16, 3), float32] */;
    %510 = %508.0;
    (%509, %510, meta[relay.Constant][41] /* ty=Tensor[(50, 10), float64] */)
  };
  %511() /* ty=(Tensor[(14, 16, 3), float32], Tensor[(10, 10, 5), float64], Tensor[(50, 10), float64]) */
}

def @func_3697(%var_3696: Tensor[(14, 16, 3), float32]) -> (Tensor[(14, 16, 3), bool],) {
  %518 = fn (%var_3678: Tensor[(14, 16, 3), float32]) -> (Tensor[(14, 16, 3), bool],) {
    %512 = @func_3588() /* ty=Tensor[(14, 16, 3), float32] */;
    %513 = cast(%var_3678, dtype="bool") /* ty=Tensor[(14, 16, 3), bool] */;
    %514 = shape_of(%512, dtype="int32") /* ty=Tensor[(3), int32] */;
    %515 = cast(%512, dtype="bool") /* ty=Tensor[(14, 16, 3), bool] */;
    %516 = dyn.reshape(%513, %514, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    %517 = less_equal(%515, %516) /* ty=Tensor[(14, 16, 3), bool] */;
    (%517,)
  };
  %518(%var_3696) /* ty=(Tensor[(14, 16, 3), bool],) */
}

def @func_5975() -> Tensor[(14, 16, 3), float32] {
  %519 = @func_4709() /* ty=(Tensor[(14, 16, 3), float32],) */;
  %519.0
}

def @func_1368(%var_1341: Tensor[(15, 9, 5), float32], %var_1342: Tensor[(15, 9, 5), float32], %var_1350: Tensor[(56), float64]) -> (Tensor[(15, 9, 5), float32], Tensor[(4, 1, 14), float64], Tensor[(56), float64]) {
  %520 = cast(%var_1342, dtype="float32") /* ty=Tensor[(15, 9, 5), float32] */;
  %521 = shape_of(%var_1341, dtype="int32") /* ty=Tensor[(3), int32] */;
  %522 = cast(%var_1341, dtype="float32") /* ty=Tensor[(15, 9, 5), float32] */;
  %523 = dyn.reshape(%520, %521, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %524 = cast(%var_1350, dtype="float64") /* ty=Tensor[(56), float64] */;
  %525 = reshape(%524, newshape=[4, 1, 14]) /* ty=Tensor[(4, 1, 14), float64] */;
  %526 = cast(%var_1350, dtype="float64") /* ty=Tensor[(56), float64] */;
  %527 = reshape(%526, newshape=[4, 1, 14]) /* ty=Tensor[(4, 1, 14), float64] */;
  %528 = @func_801(%527) /* ty=Tensor[(4, 1, 14), float64] */;
  %529 = cast(%528, dtype="float64") /* ty=Tensor[(4, 1, 14), float64] */;
  %530 = shape_of(%var_1350, dtype="int32") /* ty=Tensor[(1), int32] */;
  %531 = cast(%var_1350, dtype="float64") /* ty=Tensor[(56), float64] */;
  %532 = dyn.reshape(%529, %530, newshape=[]) /* ty=Tensor[(?), float64] */;
  %533 = floor_mod(%522, %523) /* ty=Tensor[(15, 9, 5), float32] */;
  %534 = @func_801(%525) /* ty=Tensor[(4, 1, 14), float64] */;
  %535 = floor_mod(%531, %532) /* ty=Tensor[(56), float64] */;
  (%533, %534, %535)
}

def @func_4805() -> (Tensor[(4, 9, 6), float64],) {
  @func_4803() /* ty=(Tensor[(4, 9, 6), float64],) */
}

def @func_1852(%var_1790: int16, %var_1791: Tensor[(2, 14, 9), int16], %var_1816: Tensor[(675), float32]) -> (Tensor[(2, 14, 9), int16], Tensor[(56), float64], Tensor[(675), float32], Tensor[(56), float64], Tensor[(16, 4, 11), float32], Tensor[(10), float32], Tensor[(375), float64], Tensor[(4, 1, 14), float64]) {
  %536 = cast(%var_1790, dtype="int16") /* ty=int16 */;
  %537 = cast(%var_1791, dtype="int16") /* ty=Tensor[(2, 14, 9), int16] */;
  %538 = cast(%var_1816, dtype="float32") /* ty=Tensor[(675), float32] */;
  %539 = cast(%var_1816, dtype="float32") /* ty=Tensor[(675), float32] */;
  %540 = cast(meta[relay.Constant][42] /* ty=Tensor[(56), float64] */, dtype="float64") /* ty=Tensor[(56), float64] */;
  %541 = reshape(%538, newshape=[15, 9, 5]) /* ty=Tensor[(15, 9, 5), float32] */;
  %542 = reshape(%539, newshape=[15, 9, 5]) /* ty=Tensor[(15, 9, 5), float32] */;
  %543 = reshape(%540, newshape=[56]) /* ty=Tensor[(56), float64] */;
  %544 = @func_1368(%541, %542, %543) /* ty=(Tensor[(15, 9, 5), float32], Tensor[(4, 1, 14), float64], Tensor[(56), float64]) */;
  %545 = cast(meta[relay.Constant][43] /* ty=Tensor[(10), float32] */, dtype="float32") /* ty=Tensor[(10), float32] */;
  %546 = cast(meta[relay.Constant][44] /* ty=Tensor[(375), float64] */, dtype="float64") /* ty=Tensor[(375), float64] */;
  %547 = reshape(%545, newshape=[10, 1, 1]) /* ty=Tensor[(10, 1, 1), float32] */;
  %548 = reshape(%546, newshape=[375]) /* ty=Tensor[(375), float64] */;
  %549 = @func_256(%547, %548) /* ty=(Tensor[(16, 4, 11), float32], Tensor[(704), float32], Tensor[(15, 5, 5), bool], Tensor[(15, 5, 5), bool], Tensor[(10, 1, 375), int64], Tensor[(16, 4, 11), float32], Tensor[(10, 1, 1), float32]) */;
  %550 = %544.2;
  %551 = cast(%550, dtype="float64") /* ty=Tensor[(56), float64] */;
  %552 = reshape(%551, newshape=[4, 1, 14]) /* ty=Tensor[(4, 1, 14), float64] */;
  %553 = maximum(%536, %537) /* ty=Tensor[(2, 14, 9), int16] */;
  %554 = %549.5;
  %555 = @func_801(%552) /* ty=Tensor[(4, 1, 14), float64] */;
  (%553, %550, %var_1816, meta[relay.Constant][42] /* ty=Tensor[(56), float64] */, %554, meta[relay.Constant][43] /* ty=Tensor[(10), float32] */, meta[relay.Constant][44] /* ty=Tensor[(375), float64] */, %555)
}

def @func_6221(%var_6199: Tensor[(12, 1, 13), float32], %var_6203: Tensor[(3, 30), uint16]) -> (Tensor[(3, 30), uint8], Tensor[(12, ?, 13), bool]) {
  %556 = cast(%var_6203, dtype="uint16") /* ty=Tensor[(3, 30), uint16] */;
  %557 = reshape(%556, newshape=[3, 6, 5]) /* ty=Tensor[(3, 6, 5), uint16] */;
  %558 = @func_5228(%557) /* ty=Tensor[(3, 6, 5), bool] */;
  %559 = cast(%558, dtype="uint8") /* ty=Tensor[(3, 6, 5), uint8] */;
  %560 = shape_of(%var_6203, dtype="int32") /* ty=Tensor[(2), int32] */;
  %561 = cast(%var_6203, dtype="uint8") /* ty=Tensor[(3, 30), uint8] */;
  %562 = dyn.reshape(%559, %560, newshape=[]) /* ty=Tensor[(?, ?), uint8] */;
  %563 = cast(%var_6199, dtype="float32") /* ty=Tensor[(12, 1, 13), float32] */;
  %564 = asin(%563) /* ty=Tensor[(12, 1, 13), float32] */;
  %565 = cast(%var_6199, dtype="bool") /* ty=Tensor[(12, 1, 13), bool] */;
  %566 = shape_of(%564, dtype="int32") /* ty=Tensor[(3), int32] */;
  %567 = cast(%564, dtype="bool") /* ty=Tensor[(12, 1, 13), bool] */;
  %568 = dyn.reshape(%565, %566, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %569 = less_equal(%567, %568) /* ty=Tensor[(12, ?, 13), bool] */;
  %570 = cast(%var_6199, dtype="bool") /* ty=Tensor[(12, 1, 13), bool] */;
  %571 = shape_of(%569, dtype="int32") /* ty=Tensor[(3), int32] */;
  %572 = cast(%569, dtype="bool") /* ty=Tensor[(12, ?, 13), bool] */;
  %573 = dyn.reshape(%570, %571, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %574 = bitwise_xor(%561, %562) /* ty=Tensor[(3, 30), uint8] */;
  %575 = equal(%572, %573) /* ty=Tensor[(12, ?, 13), bool] */;
  (%574, %575)
}

def @func_5060() -> (Tensor[(14, 16, 3), float32], Tensor[(14, 16, 3), float32]) {
  %576 = @func_4709() /* ty=(Tensor[(14, 16, 3), float32],) */;
  %577 = @func_4851() /* ty=(Tensor[(14, 16, 3), float32],) */;
  %578 = %576.0;
  %579 = %577.0;
  (%578, %579)
}

def @func_8012(%var_8007: Tensor[(11, 3, 7), bool], %var_8008: Tensor[(11, 3, 7), bool], %var_8009: int32, %var_8010: Tensor[(60), int32], %var_8011: Tensor[(375), float64]) -> (Tensor[(11, 3, 7), bool], Tensor[(56), float64], Tensor[(14, 16, 3), float32], int32, Tensor[(60), int32], Tensor[(375), float64]) {
  %596 = fn (%var_7978: Tensor[(11, 3, 7), bool], %var_7979: Tensor[(11, 3, 7), bool], %var_7999: int32, %var_8000: Tensor[(60), int32], %var_8001: Tensor[(375), float64]) -> (Tensor[(11, 3, 7), bool], Tensor[(56), float64], Tensor[(14, 16, 3), float32], int32, Tensor[(60), int32], Tensor[(375), float64]) {
    %580 = cast(%var_7979, dtype="bool") /* ty=Tensor[(11, 3, 7), bool] */;
    %581 = shape_of(%var_7978, dtype="int32") /* ty=Tensor[(3), int32] */;
    %582 = cast(%var_7978, dtype="bool") /* ty=Tensor[(11, 3, 7), bool] */;
    %583 = dyn.reshape(%580, %581, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    %584 = cast(%var_7999, dtype="int32") /* ty=int32 */;
    %585 = cast(%var_8000, dtype="int32") /* ty=Tensor[(60), int32] */;
    %586 = @func_4544() /* ty=Tensor[(56), float64] */;
    %587 = cast(%586, dtype="float64") /* ty=Tensor[(56), float64] */;
    %588 = cast(%var_8001, dtype="float64") /* ty=Tensor[(375), float64] */;
    %589 = reshape(%584, newshape=[]) /* ty=int32 */;
    %590 = reshape(%585, newshape=[60]) /* ty=Tensor[(60), int32] */;
    %591 = reshape(%587, newshape=[56]) /* ty=Tensor[(56), float64] */;
    %592 = reshape(%588, newshape=[375]) /* ty=Tensor[(375), float64] */;
    %593 = @func_5670(%589, %590, %591, %592) /* ty=(Tensor[(14, 16, 3), float32], Tensor[(14, 16, 3), float32], int32, Tensor[(60), int32], Tensor[(14, 16, 3), float32], Tensor[(15, 9, 5), float32], Tensor[(675), float32], Tensor[(56), float64], Tensor[(15, 5, 5), bool], Tensor[(375), float64]) */;
    %594 = logical_or(%582, %583) /* ty=Tensor[(11, 3, 7), bool] */;
    %595 = %593.4;
    (%594, %586, %595, %var_7999, %var_8000, %var_8001)
  };
  %596(%var_8007, %var_8008, %var_8009, %var_8010, %var_8011) /* ty=(Tensor[(11, 3, 7), bool], Tensor[(56), float64], Tensor[(14, 16, 3), float32], int32, Tensor[(60), int32], Tensor[(375), float64]) */
}

def @func_6342() -> Tensor[(14, 16, 3), float32] {
  @func_6340() /* ty=Tensor[(14, 16, 3), float32] */
}

def @func_4071(%var_4011: Tensor[(375), float64], %var_4016: Tensor[(16), uint16], %var_4060: Tensor[(14, 16, 3), float32]) -> (Tensor[(14, 16, 3), float32], Tensor[(375), float64], Tensor[(2, 4, 2), bool], Tensor[(16), uint16], Tensor[(9, 3, 4), int16], Tensor[(27), int16], Tensor[(108), int16], Tensor[(375), float64], Tensor[(36), float64], Tensor[(14, 16, 3), uint32]) {
  %597 = cast(%var_4016, dtype="uint16") /* ty=Tensor[(16), uint16] */;
  %598 = reshape(%597, newshape=[2, 4, 2]) /* ty=Tensor[(2, 4, 2), uint16] */;
  %599 = @func_362(%598) /* ty=(Tensor[(2, 4, 2), bool],) */;
  %600 = cast(meta[relay.Constant][45] /* ty=Tensor[(27), int16] */, dtype="int16") /* ty=Tensor[(27), int16] */;
  %601 = cast(meta[relay.Constant][46] /* ty=Tensor[(108), int16] */, dtype="int16") /* ty=Tensor[(108), int16] */;
  %602 = reshape(%600, newshape=[9, 3, 1]) /* ty=Tensor[(9, 3, 1), int16] */;
  %603 = reshape(%601, newshape=[9, 3, 4]) /* ty=Tensor[(9, 3, 4), int16] */;
  %604 = cast(meta[relay.Constant][47] /* ty=Tensor[(36), float64] */, dtype="float64") /* ty=Tensor[(36), float64] */;
  %605 = reshape(%604, newshape=[9, 4, 1]) /* ty=Tensor[(9, 4, 1), float64] */;
  %606 = @func_1975(%605) /* ty=(Tensor[(9, 4, ?), bool], Tensor[(375), float64], Tensor[(2496), float32], Tensor[(375), float64]) */;
  %607 = cast(%var_4011, dtype="float64") /* ty=Tensor[(375), float64] */;
  %608 = reshape(%607, newshape=[375]) /* ty=Tensor[(375), float64] */;
  %609 = @func_3356(%608) /* ty=(Tensor[(14, 16, 3), float32], Tensor[(16, 4, 11), float32], Tensor[(375), float64], Tensor[(15, 5, 5), bool]) */;
  %610 = %609.0;
  %611 = cast(%610, dtype="float32") /* ty=Tensor[(14, 16, 3), float32] */;
  %612 = cos(%611) /* ty=Tensor[(14, 16, 3), float32] */;
  %613 = cast(%var_4060, dtype="uint32") /* ty=Tensor[(14, 16, 3), uint32] */;
  %614 = shape_of(%612, dtype="int32") /* ty=Tensor[(3), int32] */;
  %615 = cast(%612, dtype="uint32") /* ty=Tensor[(14, 16, 3), uint32] */;
  %616 = dyn.reshape(%613, %614, newshape=[]) /* ty=Tensor[(?, ?, ?), uint32] */;
  %617 = @func_3264() /* ty=Tensor[(14, 16, 3), float32] */;
  %618 = %599.0;
  %619 = @func_3478(%602, %603) /* ty=Tensor[(9, 3, 4), int16] */;
  %620 = %606.3;
  %621 = multiply(%615, %616) /* ty=Tensor[(14, 16, 3), uint32] */;
  (%617, %var_4011, %618, %var_4016, %619, meta[relay.Constant][45] /* ty=Tensor[(27), int16] */, meta[relay.Constant][46] /* ty=Tensor[(108), int16] */, %620, meta[relay.Constant][47] /* ty=Tensor[(36), float64] */, %621)
}

def @func_7707(%var_7705: Tensor[(720), float32], %var_7706: Tensor[(112), float32]) -> (Tensor[(14, 16, 3), float32], Tensor[(16), uint16], Tensor[(720), float32], Tensor[(112), float32]) {
  %629 = fn (%var_7685: Tensor[(720), float32], %var_7686: Tensor[(112), float32]) -> (Tensor[(14, 16, 3), float32], Tensor[(16), uint16], Tensor[(720), float32], Tensor[(112), float32]) {
    %622 = cast(%var_7685, dtype="float32") /* ty=Tensor[(720), float32] */;
    %623 = cast(%var_7686, dtype="float32") /* ty=Tensor[(112), float32] */;
    %624 = reshape(%622, newshape=[6, 15, 8]) /* ty=Tensor[(6, 15, 8), float32] */;
    %625 = reshape(%623, newshape=[112]) /* ty=Tensor[(112), float32] */;
    %626 = @func_2053(%624, %625) /* ty=(Tensor[(6, 15, 8), float32], Tensor[(14, 2, 4), int8], Tensor[(112), float32], Tensor[(2, 4, 2), bool], Tensor[(16), uint16]) */;
    %627 = @func_5419() /* ty=Tensor[(14, 16, 3), float32] */;
    %628 = %626.4;
    (%627, %628, %var_7685, %var_7686)
  };
  %629(%var_7705, %var_7706) /* ty=(Tensor[(14, 16, 3), float32], Tensor[(16), uint16], Tensor[(720), float32], Tensor[(112), float32]) */
}

def @func_3266() -> Tensor[(14, 16, 3), float32] {
  @func_3264() /* ty=Tensor[(14, 16, 3), float32] */
}

def @func_4254(%var_4251: Tensor[(14, 16, 3), float32], %var_4252: Tensor[(14, 16, 3), float32], %var_4253: Tensor[(2, 28), float64]) -> (Tensor[(14, 16, 3), bool], Tensor[(14, 16, 3), float64], Tensor[(56), float64], Tensor[(225, 3), float32], Tensor[(2, 28), float64]) {
  @func_4249(%var_4251, %var_4252, %var_4253) /* ty=(Tensor[(14, 16, 3), bool], Tensor[(14, 16, 3), float64], Tensor[(56), float64], Tensor[(225, 3), float32], Tensor[(2, 28), float64]) */
}

def @func_8169(%var_8167: Tensor[(28, 2), float64]) -> (Tensor[(14, 16, 3), float32], Tensor[(14, 16, 3), float32], Tensor[(14, 16, 3), float32], Tensor[(14, 16, 3), bool], Tensor[(28, 2), float64]) {
  @func_8166(%var_8167) /* ty=(Tensor[(14, 16, 3), float32], Tensor[(14, 16, 3), float32], Tensor[(14, 16, 3), float32], Tensor[(14, 16, 3), bool], Tensor[(28, 2), float64]) */
}

def @func_4497() -> Tensor[(14, 16, 3), float32] {
  %630 = fn () -> Tensor[(14, 16, 3), float32] {
    @func_3588() /* ty=Tensor[(14, 16, 3), float32] */
  };
  %630() /* ty=Tensor[(14, 16, 3), float32] */
}

def @func_6291() -> (Tensor[(14, 16, 3), float32], Tensor[(14, 16, 3), float32]) {
  @func_6289() /* ty=(Tensor[(14, 16, 3), float32], Tensor[(14, 16, 3), float32]) */
}

def @func_4279() -> (Tensor[(14, 16, 3), float32],) {
  %632 = fn () -> (Tensor[(14, 16, 3), float32],) {
    %631 = @func_3153() /* ty=Tensor[(14, 16, 3), float32] */;
    (%631,)
  };
  %632() /* ty=(Tensor[(14, 16, 3), float32],) */
}

def @func_3356(%var_3341: Tensor[(375), float64]) -> (Tensor[(14, 16, 3), float32], Tensor[(16, 4, 11), float32], Tensor[(375), float64], Tensor[(15, 5, 5), bool]) {
  %633 = cast(%var_3341, dtype="float64") /* ty=Tensor[(375), float64] */;
  %634 = reshape(%633, newshape=[15, 5, 5]) /* ty=Tensor[(15, 5, 5), float64] */;
  %635 = @func_135(%634) /* ty=(Tensor[(16, 4, 11), float32], Tensor[(704), float32], Tensor[(15, 5, 5), bool], Tensor[(16, 4, 11), float32], Tensor[(16, 4, 11), float32], Tensor[(15, 5, 5), bool]) */;
  %636 = cast(%var_3341, dtype="float64") /* ty=Tensor[(375), float64] */;
  %637 = reshape(%636, newshape=[15, 5, 5]) /* ty=Tensor[(15, 5, 5), float64] */;
  %638 = @func_135(%637) /* ty=(Tensor[(16, 4, 11), float32], Tensor[(704), float32], Tensor[(15, 5, 5), bool], Tensor[(16, 4, 11), float32], Tensor[(16, 4, 11), float32], Tensor[(15, 5, 5), bool]) */;
  %639 = @func_3264() /* ty=Tensor[(14, 16, 3), float32] */;
  %640 = %635.3;
  %641 = %638.2;
  (%639, %640, %var_3341, %641)
}

def @func_2102(%var_2075: Tensor[(5, 11, 11), int32], %var_2076: Tensor[(5, 11, 11), int32]) -> (Tensor[(5, 11, 11), bool],) {
  %642 = cast(%var_2076, dtype="int32") /* ty=Tensor[(5, 11, 11), int32] */;
  %643 = shape_of(%var_2075, dtype="int32") /* ty=Tensor[(3), int32] */;
  %644 = cast(%var_2075, dtype="int32") /* ty=Tensor[(5, 11, 11), int32] */;
  %645 = dyn.reshape(%642, %643, newshape=[]) /* ty=Tensor[(?, ?, ?), int32] */;
  %646 = minimum(%644, %645) /* ty=Tensor[(5, 11, 11), int32] */;
  %647 = cast(%var_2076, dtype="bool") /* ty=Tensor[(5, 11, 11), bool] */;
  %648 = shape_of(%646, dtype="int32") /* ty=Tensor[(3), int32] */;
  %649 = cast(%646, dtype="bool") /* ty=Tensor[(5, 11, 11), bool] */;
  %650 = dyn.reshape(%647, %648, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %651 = not_equal(%649, %650) /* ty=Tensor[(5, 11, 11), bool] */;
  (%651,)
}

def @func_5007(%var_5005: int32, %var_5006: Tensor[(10, 6, 1), int32]) -> (Tensor[(10, 6, 1), int32], Tensor[(10, 6, 1), float64], Tensor[(4, 1, 14), float64], Tensor[(14, 16, 3), float32]) {
  %660 = fn (%var_4984: int32, %var_4985: Tensor[(10, 6, 1), int32]) -> (Tensor[(10, 6, 1), int32], Tensor[(10, 6, 1), float64], Tensor[(4, 1, 14), float64], Tensor[(14, 16, 3), float32]) {
    %652 = cast(%var_4984, dtype="int32") /* ty=int32 */;
    %653 = cast(%var_4985, dtype="int32") /* ty=Tensor[(10, 6, 1), int32] */;
    %654 = cast(%var_4985, dtype="float64") /* ty=Tensor[(10, 6, 1), float64] */;
    %655 = @func_3801() /* ty=(Tensor[(14, 16, 3), float32], Tensor[(4, 1, 14), float64], Tensor[(56), float64]) */;
    %656 = multiply(%652, %653) /* ty=Tensor[(10, 6, 1), int32] */;
    %657 = acosh(%654) /* ty=Tensor[(10, 6, 1), float64] */;
    %658 = %655.1;
    %659 = @func_3824() /* ty=Tensor[(14, 16, 3), float32] */;
    (%656, %657, %658, %659)
  };
  %660(%var_5005, %var_5006) /* ty=(Tensor[(10, 6, 1), int32], Tensor[(10, 6, 1), float64], Tensor[(4, 1, 14), float64], Tensor[(14, 16, 3), float32]) */
}

def @func_5230(%var_5229: Tensor[(3, 6, 5), uint16]) -> Tensor[(3, 6, 5), bool] {
  %663 = fn (%var_5221: Tensor[(3, 6, 5), uint16]) -> Tensor[(3, 6, 5), bool] {
    %661 = cast(meta[relay.Constant][48] /* ty=Tensor[(1, 6, 5), uint16] */, dtype="bool") /* ty=Tensor[(1, 6, 5), bool] */;
    %662 = cast(%var_5221, dtype="bool") /* ty=Tensor[(3, 6, 5), bool] */;
    equal(%661, %662) /* ty=Tensor[(3, 6, 5), bool] */
  };
  %663(%var_5229) /* ty=Tensor[(3, 6, 5), bool] */
}

def @func_1373(%var_1370: Tensor[(15, 9, 5), float32], %var_1371: Tensor[(15, 9, 5), float32], %var_1372: Tensor[(56), float64]) -> (Tensor[(15, 9, 5), float32], Tensor[(4, 1, 14), float64], Tensor[(56), float64]) {
  @func_1368(%var_1370, %var_1371, %var_1372) /* ty=(Tensor[(15, 9, 5), float32], Tensor[(4, 1, 14), float64], Tensor[(56), float64]) */
}

def @func_5529(%var_5528: int32) -> (Tensor[(14, 16, 3), float32], Tensor[(2, 4, 2), bool], Tensor[(15, 4), int32], Tensor[(4, 1, 14), int64]) {
  %677 = fn (%var_5515: int32) -> (Tensor[(14, 16, 3), float32], Tensor[(2, 4, 2), bool], Tensor[(15, 4), int32], Tensor[(4, 1, 14), int64]) {
    %664 = @func_4278() /* ty=(Tensor[(14, 16, 3), float32],) */;
    %665 = @func_4384() /* ty=(Tensor[(14, 16, 3), float32], Tensor[(14, 16, 3), float32], Tensor[(2, 4, 2), bool], Tensor[(16), uint16]) */;
    %666 = cast(%var_5515, dtype="int32") /* ty=int32 */;
    %667 = cast(meta[relay.Constant][49] /* ty=Tensor[(15, 4), int32] */, dtype="int32") /* ty=Tensor[(15, 4), int32] */;
    %668 = reshape(%666, newshape=[]) /* ty=int32 */;
    %669 = reshape(%667, newshape=[10, 6, 1]) /* ty=Tensor[(10, 6, 1), int32] */;
    %670 = @func_5004(%668, %669) /* ty=(Tensor[(10, 6, 1), int32], Tensor[(10, 6, 1), float64], Tensor[(4, 1, 14), float64], Tensor[(14, 16, 3), float32]) */;
    %671 = %670.2;
    %672 = cast(%671, dtype="int64") /* ty=Tensor[(4, 1, 14), int64] */;
    %673 = cast(%var_5515, dtype="int64") /* ty=int64 */;
    %674 = %664.0;
    %675 = %665.2;
    %676 = bitwise_or(%672, %673) /* ty=Tensor[(4, 1, 14), int64] */;
    (%674, %675, meta[relay.Constant][49] /* ty=Tensor[(15, 4), int32] */, %676)
  };
  %677(%var_5528) /* ty=(Tensor[(14, 16, 3), float32], Tensor[(2, 4, 2), bool], Tensor[(15, 4), int32], Tensor[(4, 1, 14), int64]) */
}

def @func_7517() -> (Tensor[(14, 16, 3), float32], Tensor[(27), int16], Tensor[(125, 3), float64], Tensor[(16), uint16]) {
  %688 = fn () -> (Tensor[(14, 16, 3), float32], Tensor[(27), int16], Tensor[(125, 3), float64], Tensor[(16), uint16]) {
    %678 = @func_4433() /* ty=(Tensor[(14, 16, 3), float32],) */;
    %679 = cast(meta[relay.Constant][50] /* ty=Tensor[(125, 3), float64] */, dtype="float64") /* ty=Tensor[(125, 3), float64] */;
    %680 = cast(meta[relay.Constant][51] /* ty=Tensor[(16), uint16] */, dtype="uint16") /* ty=Tensor[(16), uint16] */;
    %681 = %678.0;
    %682 = cast(%681, dtype="float32") /* ty=Tensor[(14, 16, 3), float32] */;
    %683 = reshape(%679, newshape=[375]) /* ty=Tensor[(375), float64] */;
    %684 = reshape(%680, newshape=[16]) /* ty=Tensor[(16), uint16] */;
    %685 = reshape(%682, newshape=[14, 16, 3]) /* ty=Tensor[(14, 16, 3), float32] */;
    %686 = @func_4071(%683, %684, %685) /* ty=(Tensor[(14, 16, 3), float32], Tensor[(375), float64], Tensor[(2, 4, 2), bool], Tensor[(16), uint16], Tensor[(9, 3, 4), int16], Tensor[(27), int16], Tensor[(108), int16], Tensor[(375), float64], Tensor[(36), float64], Tensor[(14, 16, 3), uint32]) */;
    %687 = %686.5;
    (%681, %687, meta[relay.Constant][50] /* ty=Tensor[(125, 3), float64] */, meta[relay.Constant][51] /* ty=Tensor[(16), uint16] */)
  };
  %688() /* ty=(Tensor[(14, 16, 3), float32], Tensor[(27), int16], Tensor[(125, 3), float64], Tensor[(16), uint16]) */
}

def @func_3153() -> Tensor[(14, 16, 3), float32] {
  %689 = cast(meta[relay.Constant][52] /* ty=Tensor[(14, 16, 3), float32] */, dtype="float32") /* ty=Tensor[(14, 16, 3), float32] */;
  rsqrt(%689) /* ty=Tensor[(14, 16, 3), float32] */
}

def @func_726(%var_724: Tensor[(13, 15, 6), float32]) -> (Tensor[(13, 15, 6), int32],) {
  @func_723(%var_724) /* ty=(Tensor[(13, 15, 6), int32],) */
}

def @func_7592(%var_7590: Tensor[(4, 16, 11), float64]) -> Tensor[(4, 16, 11), float64] {
  @func_7589(%var_7590) /* ty=Tensor[(4, 16, 11), float64] */
}

def @func_756(%var_755: Tensor[(9, 16, 10), uint32]) -> Tensor[(9, 16, 10), uint32] {
  %694 = fn (%var_746: Tensor[(9, 16, 10), uint32]) -> Tensor[(9, 16, 10), uint32] {
    %690 = cast(%var_746, dtype="uint32") /* ty=Tensor[(9, 16, 10), uint32] */;
    %691 = shape_of(meta[relay.Constant][53] /* ty=Tensor[(9, 16, 10), uint32] */, dtype="int32") /* ty=Tensor[(3), int32] */;
    %692 = cast(meta[relay.Constant][53] /* ty=Tensor[(9, 16, 10), uint32] */, dtype="uint32") /* ty=Tensor[(9, 16, 10), uint32] */;
    %693 = dyn.reshape(%690, %691, newshape=[]) /* ty=Tensor[(?, ?, ?), uint32] */;
    minimum(%692, %693) /* ty=Tensor[(9, 16, 10), uint32] */
  };
  %694(%var_755) /* ty=Tensor[(9, 16, 10), uint32] */
}

def @func_5350() -> (Tensor[(14, 16, 3), float32], Tensor[(14, 16, 3), float32]) {
  %698 = fn () -> (Tensor[(14, 16, 3), float32], Tensor[(14, 16, 3), float32]) {
    %695 = @func_4851() /* ty=(Tensor[(14, 16, 3), float32],) */;
    %696 = %695.0;
    %697 = @func_4322() /* ty=Tensor[(14, 16, 3), float32] */;
    (%696, %697)
  };
  %698() /* ty=(Tensor[(14, 16, 3), float32], Tensor[(14, 16, 3), float32]) */
}

def @func_8667() -> (Tensor[(14, 16, 3), float32], Tensor[(14, 16, 3), float32]) {
  %699 = @func_4322() /* ty=Tensor[(14, 16, 3), float32] */;
  %700 = @func_4295() /* ty=Tensor[(14, 16, 3), float32] */;
  (%699, %700)
}

def @func_7319(%var_7317: Tensor[(6, 5, 6), int64], %var_7318: Tensor[(6, 5, 6), int64]) -> (Tensor[(6, 5, 6), int64], Tensor[(6, 5, 6), float64]) {
  %708 = fn (%var_7309: Tensor[(6, 5, 6), int64], %var_7310: Tensor[(6, 5, 6), int64]) -> (Tensor[(6, 5, 6), int64], Tensor[(6, 5, 6), float64]) {
    %701 = cast(%var_7310, dtype="int64") /* ty=Tensor[(6, 5, 6), int64] */;
    %702 = shape_of(%var_7309, dtype="int32") /* ty=Tensor[(3), int32] */;
    %703 = cast(%var_7309, dtype="int64") /* ty=Tensor[(6, 5, 6), int64] */;
    %704 = dyn.reshape(%701, %702, newshape=[]) /* ty=Tensor[(?, ?, ?), int64] */;
    %705 = cast(%var_7309, dtype="float64") /* ty=Tensor[(6, 5, 6), float64] */;
    %706 = bitwise_xor(%703, %704) /* ty=Tensor[(6, 5, 6), int64] */;
    %707 = exp(%705) /* ty=Tensor[(6, 5, 6), float64] */;
    (%706, %707)
  };
  %708(%var_7317, %var_7318) /* ty=(Tensor[(6, 5, 6), int64], Tensor[(6, 5, 6), float64]) */
}

def @func_5465() -> Tensor[(14, 16, 3), float32] {
  @func_5463() /* ty=Tensor[(14, 16, 3), float32] */
}

def @func_4803() -> (Tensor[(4, 9, 6), float64],) {
  %709 = cast(meta[relay.Constant][54] /* ty=Tensor[(4, 9, 6), int16] */, dtype="bool") /* ty=Tensor[(4, 9, 6), bool] */;
  %710 = shape_of(meta[relay.Constant][55] /* ty=Tensor[(4, 9, 6), int16] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %711 = cast(meta[relay.Constant][55] /* ty=Tensor[(4, 9, 6), int16] */, dtype="bool") /* ty=Tensor[(4, 9, 6), bool] */;
  %712 = dyn.reshape(%709, %710, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %713 = greater_equal(%711, %712) /* ty=Tensor[(4, 9, 6), bool] */;
  %714 = cast(%713, dtype="float64") /* ty=Tensor[(4, 9, 6), float64] */;
  %715 = shape_of(meta[relay.Constant][54] /* ty=Tensor[(4, 9, 6), int16] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %716 = cast(meta[relay.Constant][54] /* ty=Tensor[(4, 9, 6), int16] */, dtype="float64") /* ty=Tensor[(4, 9, 6), float64] */;
  %717 = dyn.reshape(%714, %715, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %718 = divide(%716, %717) /* ty=Tensor[(4, 9, 6), float64] */;
  (%718,)
}

def @func_8404() -> Tensor[(11, 7, 5), float32] {
  %719 = cast(meta[relay.Constant][56] /* ty=Tensor[(11, 7, 5), float32] */, dtype="float32") /* ty=Tensor[(11, 7, 5), float32] */;
  sqrt(%719) /* ty=Tensor[(11, 7, 5), float32] */
}

def @func_137(%var_136: Tensor[(15, 5, 5), float64]) -> (Tensor[(16, 4, 11), float32], Tensor[(704), float32], Tensor[(15, 5, 5), bool], Tensor[(16, 4, 11), float32], Tensor[(16, 4, 11), float32], Tensor[(15, 5, 5), bool]) {
  %741 = fn (%var_99: Tensor[(15, 5, 5), float64]) -> (Tensor[(16, 4, 11), float32], Tensor[(704), float32], Tensor[(15, 5, 5), bool], Tensor[(16, 4, 11), float32], Tensor[(16, 4, 11), float32], Tensor[(15, 5, 5), bool]) {
    %720 = cast(meta[relay.Constant][57] /* ty=Tensor[(704), float32] */, dtype="float32") /* ty=Tensor[(704), float32] */;
    %721 = reshape(%720, newshape=[16, 4, 11]) /* ty=Tensor[(16, 4, 11), float32] */;
    %722 = @func_84(%721) /* ty=(Tensor[(16, 4, 11), float32],) */;
    %723 = cast(5.60355f64 /* ty=float64 */, dtype="float64") /* ty=float64 */;
    %724 = cast(%var_99, dtype="float64") /* ty=Tensor[(15, 5, 5), float64] */;
    %725 = divide(%723, %724) /* ty=Tensor[(15, 5, 5), float64] */;
    %726 = cast(%725, dtype="bool") /* ty=Tensor[(15, 5, 5), bool] */;
    %727 = cast(5.60355f64 /* ty=float64 */, dtype="bool") /* ty=bool */;
    %728 = %722.0;
    %729 = cast(%728, dtype="float32") /* ty=Tensor[(16, 4, 11), float32] */;
    %730 = reshape(%729, newshape=[16, 4, 11]) /* ty=Tensor[(16, 4, 11), float32] */;
    %731 = @func_84(%730) /* ty=(Tensor[(16, 4, 11), float32],) */;
    %732 = cast(meta[relay.Constant][57] /* ty=Tensor[(704), float32] */, dtype="float32") /* ty=Tensor[(704), float32] */;
    %733 = reshape(%732, newshape=[16, 4, 11]) /* ty=Tensor[(16, 4, 11), float32] */;
    %734 = @func_84(%733) /* ty=(Tensor[(16, 4, 11), float32],) */;
    %735 = cast(5.60355f64 /* ty=float64 */, dtype="bool") /* ty=bool */;
    %736 = cast(%var_99, dtype="bool") /* ty=Tensor[(15, 5, 5), bool] */;
    %737 = logical_or(%726, %727) /* ty=Tensor[(15, 5, 5), bool] */;
    %738 = %731.0;
    %739 = %734.0;
    %740 = equal(%735, %736) /* ty=Tensor[(15, 5, 5), bool] */;
    (%728, meta[relay.Constant][57] /* ty=Tensor[(704), float32] */, %737, %738, %739, %740)
  };
  %741(%var_136) /* ty=(Tensor[(16, 4, 11), float32], Tensor[(704), float32], Tensor[(15, 5, 5), bool], Tensor[(16, 4, 11), float32], Tensor[(16, 4, 11), float32], Tensor[(15, 5, 5), bool]) */
}

def @main() -> Tensor[(15, 15, 8), bool] {
  %742 = cast(meta[relay.Constant][59] /* ty=Tensor[(15, 15, 8), float64] */, dtype="bool") /* ty=Tensor[(15, 15, 8), bool] */;
  %743 = shape_of(meta[relay.Constant][58] /* ty=Tensor[(15, 15, 8), float64] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %744 = cast(meta[relay.Constant][58] /* ty=Tensor[(15, 15, 8), float64] */, dtype="bool") /* ty=Tensor[(15, 15, 8), bool] */;
  %745 = dyn.reshape(%742, %743, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  not_equal(%744, %745) /* ty=Tensor[(15, 15, 8), bool] */
}

def @func_3588() -> Tensor[(14, 16, 3), float32] {
  @func_3153() /* ty=Tensor[(14, 16, 3), float32] */
}

def @func_6797(%var_6783: Tensor[(4, 5, 10), float32]) -> Tensor[(4, 5, 10), float32] {
  %746 = cast(%var_6783, dtype="float32") /* ty=Tensor[(4, 5, 10), float32] */;
  log2(%746) /* ty=Tensor[(4, 5, 10), float32] */
}

def @func_972(%var_971: Tensor[(1, 12, 12), float32]) -> (Tensor[(2, 4, 2), bool], Tensor[(4, 4), uint16], Tensor[(375), float64], Tensor[(1210, 1), uint64], Tensor[(4, 176), float32], Tensor[(10), float32], Tensor[(16, 4, 11), float32], Tensor[(?, 12, 12), bool], Tensor[(?, 12, 12), uint16], Tensor[(?, 12, 12), bool]) {
  %801 = fn (%var_892: Tensor[(1, 12, 12), float32]) -> (Tensor[(2, 4, 2), bool], Tensor[(4, 4), uint16], Tensor[(375), float64], Tensor[(1210, 1), uint64], Tensor[(4, 176), float32], Tensor[(10), float32], Tensor[(16, 4, 11), float32], Tensor[(?, 12, 12), bool], Tensor[(?, 12, 12), uint16], Tensor[(?, 12, 12), bool]) {
    %747 = cast(meta[relay.Constant][60] /* ty=Tensor[(4, 4), uint16] */, dtype="uint16") /* ty=Tensor[(4, 4), uint16] */;
    %748 = reshape(%747, newshape=[2, 4, 2]) /* ty=Tensor[(2, 4, 2), uint16] */;
    %749 = @func_362(%748) /* ty=(Tensor[(2, 4, 2), bool],) */;
    %750 = cast(meta[relay.Constant][61] /* ty=Tensor[(1210, 1), uint64] */, dtype="uint64") /* ty=Tensor[(1210, 1), uint64] */;
    %751 = cast(meta[relay.Constant][61] /* ty=Tensor[(1210, 1), uint64] */, dtype="uint64") /* ty=Tensor[(1210, 1), uint64] */;
    %752 = cast(meta[relay.Constant][62] /* ty=Tensor[(4, 176), float32] */, dtype="float32") /* ty=Tensor[(4, 176), float32] */;
    %753 = cast(meta[relay.Constant][63] /* ty=Tensor[(10), float32] */, dtype="float32") /* ty=Tensor[(10), float32] */;
    %754 = reshape(%750, newshape=[11, 11, 10]) /* ty=Tensor[(11, 11, 10), uint64] */;
    %755 = reshape(%751, newshape=[11, 11, 10]) /* ty=Tensor[(11, 11, 10), uint64] */;
    %756 = reshape(%752, newshape=[8, 88]) /* ty=Tensor[(8, 88), float32] */;
    %757 = reshape(%753, newshape=[10]) /* ty=Tensor[(10), float32] */;
    %758 = @func_328(%754, %755, %756, %757) /* ty=(Tensor[(11, 11, 10), bool], Tensor[(16, 4, 11), float32], Tensor[(8, 88), float32], Tensor[(16, 4, 11), float32], Tensor[(10), float32], Tensor[(375), float64]) */;
    %759 = %758.5;
    %760 = cast(%759, dtype="float64") /* ty=Tensor[(375), float64] */;
    %761 = reshape(%760, newshape=[15, 5, 5]) /* ty=Tensor[(15, 5, 5), float64] */;
    %762 = @func_135(%761) /* ty=(Tensor[(16, 4, 11), float32], Tensor[(704), float32], Tensor[(15, 5, 5), bool], Tensor[(16, 4, 11), float32], Tensor[(16, 4, 11), float32], Tensor[(15, 5, 5), bool]) */;
    %763 = cast(%var_892, dtype="float32") /* ty=Tensor[(1, 12, 12), float32] */;
    %764 = sigmoid(%763) /* ty=Tensor[(1, 12, 12), float32] */;
    %765 = cast(%var_892, dtype="uint64") /* ty=Tensor[(1, 12, 12), uint64] */;
    %766 = shape_of(%764, dtype="int32") /* ty=Tensor[(3), int32] */;
    %767 = cast(%764, dtype="uint64") /* ty=Tensor[(1, 12, 12), uint64] */;
    %768 = dyn.reshape(%765, %766, newshape=[]) /* ty=Tensor[(?, ?, ?), uint64] */;
    %769 = right_shift(%767, %768) /* ty=Tensor[(?, 12, 12), uint64] */;
    %770 = cast(%769, dtype="float32") /* ty=Tensor[(?, 12, 12), float32] */;
    %771 = cosh(%770) /* ty=Tensor[(?, 12, 12), float32] */;
    %772 = cast(%var_892, dtype="float64") /* ty=Tensor[(1, 12, 12), float64] */;
    %773 = shape_of(%771, dtype="int32") /* ty=Tensor[(3), int32] */;
    %774 = cast(%771, dtype="float64") /* ty=Tensor[(?, 12, 12), float64] */;
    %775 = dyn.reshape(%772, %773, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
    %776 = subtract(%774, %775) /* ty=Tensor[(?, 12, 12), float64] */;
    %777 = cast(%771, dtype="bool") /* ty=Tensor[(?, 12, 12), bool] */;
    %778 = shape_of(%776, dtype="int32") /* ty=Tensor[(3), int32] */;
    %779 = cast(%776, dtype="bool") /* ty=Tensor[(?, 12, 12), bool] */;
    %780 = dyn.reshape(%777, %778, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    %781 = cast(%764, dtype="bool") /* ty=Tensor[(1, 12, 12), bool] */;
    %782 = shape_of(%771, dtype="int32") /* ty=Tensor[(3), int32] */;
    %783 = cast(%771, dtype="bool") /* ty=Tensor[(?, 12, 12), bool] */;
    %784 = dyn.reshape(%781, %782, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    %785 = logical_and(%783, %784) /* ty=Tensor[(?, 12, 12), bool] */;
    %786 = cast(%764, dtype="uint16") /* ty=Tensor[(1, 12, 12), uint16] */;
    %787 = shape_of(%785, dtype="int32") /* ty=Tensor[(3), int32] */;
    %788 = cast(%785, dtype="uint16") /* ty=Tensor[(?, 12, 12), uint16] */;
    %789 = dyn.reshape(%786, %787, newshape=[]) /* ty=Tensor[(?, ?, ?), uint16] */;
    %790 = cast(%776, dtype="float32") /* ty=Tensor[(?, 12, 12), float32] */;
    %791 = atan(%790) /* ty=Tensor[(?, 12, 12), float32] */;
    %792 = cast(%785, dtype="bool") /* ty=Tensor[(?, 12, 12), bool] */;
    %793 = shape_of(%791, dtype="int32") /* ty=Tensor[(3), int32] */;
    %794 = cast(%791, dtype="bool") /* ty=Tensor[(?, 12, 12), bool] */;
    %795 = dyn.reshape(%792, %793, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    %796 = %749.0;
    %797 = %762.3;
    %798 = less_equal(%779, %780) /* ty=Tensor[(?, 12, 12), bool] */;
    %799 = add(%788, %789) /* ty=Tensor[(?, 12, 12), uint16] */;
    %800 = greater(%794, %795) /* ty=Tensor[(?, 12, 12), bool] */;
    (%796, meta[relay.Constant][60] /* ty=Tensor[(4, 4), uint16] */, %759, meta[relay.Constant][61] /* ty=Tensor[(1210, 1), uint64] */, meta[relay.Constant][62] /* ty=Tensor[(4, 176), float32] */, meta[relay.Constant][63] /* ty=Tensor[(10), float32] */, %797, %798, %799, %800)
  };
  %801(%var_971) /* ty=(Tensor[(2, 4, 2), bool], Tensor[(4, 4), uint16], Tensor[(375), float64], Tensor[(1210, 1), uint64], Tensor[(4, 176), float32], Tensor[(10), float32], Tensor[(16, 4, 11), float32], Tensor[(?, 12, 12), bool], Tensor[(?, 12, 12), uint16], Tensor[(?, 12, 12), bool]) */
}

def @func_6435(%var_6434: Tensor[(14, 16, 3), float32]) -> Tensor[(14, 16, 3), int64] {
  %807 = fn (%var_6415: Tensor[(14, 16, 3), float32]) -> Tensor[(14, 16, 3), int64] {
    %802 = @func_3969() /* ty=Tensor[(14, 16, 3), float32] */;
    %803 = cast(%var_6415, dtype="int64") /* ty=Tensor[(14, 16, 3), int64] */;
    %804 = shape_of(%802, dtype="int32") /* ty=Tensor[(3), int32] */;
    %805 = cast(%802, dtype="int64") /* ty=Tensor[(14, 16, 3), int64] */;
    %806 = dyn.reshape(%803, %804, newshape=[]) /* ty=Tensor[(?, ?, ?), int64] */;
    add(%805, %806) /* ty=Tensor[(14, 16, 3), int64] */
  };
  %807(%var_6434) /* ty=Tensor[(14, 16, 3), int64] */
}

def @func_5754(%var_5752: Tensor[(16, 2, 16), float32]) -> (Tensor[(4, 9, 6), float64], Tensor[(704), float32], Tensor[(10), float32], Tensor[(375), float64], Tensor[(14, 16, 3), float32], Tensor[(14, 16, 3), float32], Tensor[(14, 16, 3), float32], Tensor[(16, 2, 16), int64], Tensor[(16, 2, 16), int8]) {
  @func_5751(%var_5752) /* ty=(Tensor[(4, 9, 6), float64], Tensor[(704), float32], Tensor[(10), float32], Tensor[(375), float64], Tensor[(14, 16, 3), float32], Tensor[(14, 16, 3), float32], Tensor[(14, 16, 3), float32], Tensor[(16, 2, 16), int64], Tensor[(16, 2, 16), int8]) */
}

def @func_7297() -> Tensor[(14, 16, 3), float32] {
  @func_7295() /* ty=Tensor[(14, 16, 3), float32] */
}

def @func_1486(%var_1484: Tensor[(14, 2, 4), float32], %var_1485: Tensor[(14, 2, 4), float32]) -> (Tensor[(14, 2, 4), float32], Tensor[(14, 2, 4), int8]) {
  @func_1482(%var_1484, %var_1485) /* ty=(Tensor[(14, 2, 4), float32], Tensor[(14, 2, 4), int8]) */
}

def @func_3802() -> (Tensor[(14, 16, 3), float32], Tensor[(4, 1, 14), float64], Tensor[(56), float64]) {
  %812 = fn () -> (Tensor[(14, 16, 3), float32], Tensor[(4, 1, 14), float64], Tensor[(56), float64]) {
    %808 = cast(meta[relay.Constant][64] /* ty=Tensor[(56), float64] */, dtype="float64") /* ty=Tensor[(56), float64] */;
    %809 = reshape(%808, newshape=[4, 1, 14]) /* ty=Tensor[(4, 1, 14), float64] */;
    %810 = @func_3588() /* ty=Tensor[(14, 16, 3), float32] */;
    %811 = @func_801(%809) /* ty=Tensor[(4, 1, 14), float64] */;
    (%810, %811, meta[relay.Constant][64] /* ty=Tensor[(56), float64] */)
  };
  %812() /* ty=(Tensor[(14, 16, 3), float32], Tensor[(4, 1, 14), float64], Tensor[(56), float64]) */
}

def @func_8744() -> Tensor[(14, 16, 3), float32] {
  @func_3969() /* ty=Tensor[(14, 16, 3), float32] */
}

def @func_2236(%var_2235: Tensor[(14, 3, 13), uint32]) -> (Tensor[(14, 3, 13), uint32], Tensor[(14, 3, 13), float64]) {
  %820 = fn (%var_2211: Tensor[(14, 3, 13), uint32]) -> (Tensor[(14, 3, 13), uint32], Tensor[(14, 3, 13), float64]) {
    %813 = cast(meta[relay.Constant][65] /* ty=Tensor[(14, 3, 13), uint32] */, dtype="uint32") /* ty=Tensor[(14, 3, 13), uint32] */;
    %814 = shape_of(%var_2211, dtype="int32") /* ty=Tensor[(3), int32] */;
    %815 = cast(%var_2211, dtype="uint32") /* ty=Tensor[(14, 3, 13), uint32] */;
    %816 = dyn.reshape(%813, %814, newshape=[]) /* ty=Tensor[(?, ?, ?), uint32] */;
    %817 = cast(meta[relay.Constant][65] /* ty=Tensor[(14, 3, 13), uint32] */, dtype="float64") /* ty=Tensor[(14, 3, 13), float64] */;
    %818 = left_shift(%815, %816) /* ty=Tensor[(14, 3, 13), uint32] */;
    %819 = rsqrt(%817) /* ty=Tensor[(14, 3, 13), float64] */;
    (%818, %819)
  };
  %820(%var_2235) /* ty=(Tensor[(14, 3, 13), uint32], Tensor[(14, 3, 13), float64]) */
}

def @func_7754() -> (Tensor[(14, 16, 3), float32],) {
  %821 = @func_6316() /* ty=(Tensor[(14, 16, 3), float32], Tensor[(14, 16, 3), float32]) */;
  %822 = %821.1;
  (%822,)
}

def @func_6628() -> Tensor[(14, 16, 3), float32] {
  %823 = fn () -> Tensor[(14, 16, 3), float32] {
    @func_3969() /* ty=Tensor[(14, 16, 3), float32] */
  };
  %823() /* ty=Tensor[(14, 16, 3), float32] */
}

def @func_8777() -> (Tensor[(6, 5, 6), float32], Tensor[(704), float32], Tensor[(704), float32]) {
  %832 = fn () -> (Tensor[(6, 5, 6), float32], Tensor[(704), float32], Tensor[(704), float32]) {
    %824 = @func_8481() /* ty=(Tensor[(14, 16, 3), float32], Tensor[(6, 5, 6), float64], Tensor[(180), int64]) */;
    %825 = %824.1;
    %826 = cast(%825, dtype="float32") /* ty=Tensor[(6, 5, 6), float32] */;
    %827 = cast(meta[relay.Constant][66] /* ty=Tensor[(704), float32] */, dtype="float32") /* ty=Tensor[(704), float32] */;
    %828 = reshape(%827, newshape=[704]) /* ty=Tensor[(704), float32] */;
    %829 = @func_4208(%828) /* ty=(Tensor[(14, 16, 3), float32], Tensor[(16, 4, 11), float32], Tensor[(704), float32]) */;
    %830 = log(%826) /* ty=Tensor[(6, 5, 6), float32] */;
    %831 = %829.2;
    (%830, %831, meta[relay.Constant][66] /* ty=Tensor[(704), float32] */)
  };
  %832() /* ty=(Tensor[(6, 5, 6), float32], Tensor[(704), float32], Tensor[(704), float32]) */
}

def @func_2724(%var_2723: Tensor[(4, 6, 8), int16]) -> (Tensor[(4, 6, 8), int16], Tensor[(4, 6, 8), float64], Tensor[(4, 6, 8), int32]) {
  %848 = fn (%var_2683: Tensor[(4, 6, 8), int16]) -> (Tensor[(4, 6, 8), int16], Tensor[(4, 6, 8), float64], Tensor[(4, 6, 8), int32]) {
    %833 = cast(%var_2683, dtype="int16") /* ty=Tensor[(4, 6, 8), int16] */;
    %834 = shape_of(meta[relay.Constant][67] /* ty=Tensor[(4, 6, 8), int16] */, dtype="int32") /* ty=Tensor[(3), int32] */;
    %835 = cast(meta[relay.Constant][67] /* ty=Tensor[(4, 6, 8), int16] */, dtype="int16") /* ty=Tensor[(4, 6, 8), int16] */;
    %836 = dyn.reshape(%833, %834, newshape=[]) /* ty=Tensor[(?, ?, ?), int16] */;
    %837 = cast(meta[relay.Constant][67] /* ty=Tensor[(4, 6, 8), int16] */, dtype="float64") /* ty=Tensor[(4, 6, 8), float64] */;
    %838 = shape_of(%var_2683, dtype="int32") /* ty=Tensor[(3), int32] */;
    %839 = cast(%var_2683, dtype="float64") /* ty=Tensor[(4, 6, 8), float64] */;
    %840 = dyn.reshape(%837, %838, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
    %841 = cast(meta[relay.Constant][67] /* ty=Tensor[(4, 6, 8), int16] */, dtype="int32") /* ty=Tensor[(4, 6, 8), int32] */;
    %842 = shape_of(%var_2683, dtype="int32") /* ty=Tensor[(3), int32] */;
    %843 = cast(%var_2683, dtype="int32") /* ty=Tensor[(4, 6, 8), int32] */;
    %844 = dyn.reshape(%841, %842, newshape=[]) /* ty=Tensor[(?, ?, ?), int32] */;
    %845 = bitwise_and(%835, %836) /* ty=Tensor[(4, 6, 8), int16] */;
    %846 = multiply(%839, %840) /* ty=Tensor[(4, 6, 8), float64] */;
    %847 = subtract(%843, %844) /* ty=Tensor[(4, 6, 8), int32] */;
    (%845, %846, %847)
  };
  %848(%var_2723) /* ty=(Tensor[(4, 6, 8), int16], Tensor[(4, 6, 8), float64], Tensor[(4, 6, 8), int32]) */
}

def @func_5556() -> (Tensor[(56), float64], Tensor[(14, 3, 13), float64], Tensor[(546), uint32]) {
  %849 = @func_3801() /* ty=(Tensor[(14, 16, 3), float32], Tensor[(4, 1, 14), float64], Tensor[(56), float64]) */;
  %850 = cast(meta[relay.Constant][68] /* ty=Tensor[(546), uint32] */, dtype="uint32") /* ty=Tensor[(546), uint32] */;
  %851 = reshape(%850, newshape=[14, 3, 13]) /* ty=Tensor[(14, 3, 13), uint32] */;
  %852 = @func_2234(%851) /* ty=(Tensor[(14, 3, 13), uint32], Tensor[(14, 3, 13), float64]) */;
  %853 = %849.2;
  %854 = %852.1;
  (%853, %854, meta[relay.Constant][68] /* ty=Tensor[(546), uint32] */)
}

def @func_8669() -> (Tensor[(14, 16, 3), float32], Tensor[(14, 16, 3), float32]) {
  @func_8667() /* ty=(Tensor[(14, 16, 3), float32], Tensor[(14, 16, 3), float32]) */
}

def @func_7472(%var_7470: Tensor[(375), float64], %var_7471: Tensor[(16, 4, 11), float64]) -> (Tensor[(14, 16, 3), float32], Tensor[(14, 16, 3), int8], Tensor[(375), float64], Tensor[(56), float64], Tensor[(675, 1), float32], Tensor[(56, 1), float64], Tensor[(14, 16, 3), float32], Tensor[(16, 4, 11), int64]) {
  %885 = fn (%var_7411: Tensor[(375), float64], %var_7458: Tensor[(16, 4, 11), float64]) -> (Tensor[(14, 16, 3), float32], Tensor[(14, 16, 3), int8], Tensor[(375), float64], Tensor[(56), float64], Tensor[(675, 1), float32], Tensor[(56, 1), float64], Tensor[(14, 16, 3), float32], Tensor[(16, 4, 11), int64]) {
    %855 = @func_6316() /* ty=(Tensor[(14, 16, 3), float32], Tensor[(14, 16, 3), float32]) */;
    %856 = @func_3824() /* ty=Tensor[(14, 16, 3), float32] */;
    %857 = @func_4496() /* ty=Tensor[(14, 16, 3), float32] */;
    %858 = cast(%857, dtype="int8") /* ty=Tensor[(14, 16, 3), int8] */;
    %859 = shape_of(%856, dtype="int32") /* ty=Tensor[(3), int32] */;
    %860 = cast(%856, dtype="int8") /* ty=Tensor[(14, 16, 3), int8] */;
    %861 = dyn.reshape(%858, %859, newshape=[]) /* ty=Tensor[(?, ?, ?), int8] */;
    %862 = cast(meta[relay.Constant][69] /* ty=Tensor[(675, 1), float32] */, dtype="float32") /* ty=Tensor[(675, 1), float32] */;
    %863 = cast(meta[relay.Constant][69] /* ty=Tensor[(675, 1), float32] */, dtype="float32") /* ty=Tensor[(675, 1), float32] */;
    %864 = cast(meta[relay.Constant][70] /* ty=Tensor[(56, 1), float64] */, dtype="float64") /* ty=Tensor[(56, 1), float64] */;
    %865 = reshape(%862, newshape=[15, 9, 5]) /* ty=Tensor[(15, 9, 5), float32] */;
    %866 = reshape(%863, newshape=[15, 9, 5]) /* ty=Tensor[(15, 9, 5), float32] */;
    %867 = reshape(%864, newshape=[56]) /* ty=Tensor[(56), float64] */;
    %868 = @func_1368(%865, %866, %867) /* ty=(Tensor[(15, 9, 5), float32], Tensor[(4, 1, 14), float64], Tensor[(56), float64]) */;
    %869 = @func_4709() /* ty=(Tensor[(14, 16, 3), float32],) */;
    %870 = cast(%var_7411, dtype="float64") /* ty=Tensor[(375), float64] */;
    %871 = reshape(%870, newshape=[15, 5, 5]) /* ty=Tensor[(15, 5, 5), float64] */;
    %872 = @func_135(%871) /* ty=(Tensor[(16, 4, 11), float32], Tensor[(704), float32], Tensor[(15, 5, 5), bool], Tensor[(16, 4, 11), float32], Tensor[(16, 4, 11), float32], Tensor[(15, 5, 5), bool]) */;
    %873 = %872.0;
    %874 = cast(%873, dtype="float64") /* ty=Tensor[(16, 4, 11), float64] */;
    %875 = rsqrt(%874) /* ty=Tensor[(16, 4, 11), float64] */;
    %876 = cast(%var_7458, dtype="int64") /* ty=Tensor[(16, 4, 11), int64] */;
    %877 = shape_of(%875, dtype="int32") /* ty=Tensor[(3), int32] */;
    %878 = cast(%875, dtype="int64") /* ty=Tensor[(16, 4, 11), int64] */;
    %879 = dyn.reshape(%876, %877, newshape=[]) /* ty=Tensor[(?, ?, ?), int64] */;
    %880 = %855.1;
    %881 = maximum(%860, %861) /* ty=Tensor[(14, 16, 3), int8] */;
    %882 = %868.2;
    %883 = %869.0;
    %884 = right_shift(%878, %879) /* ty=Tensor[(16, 4, 11), int64] */;
    (%880, %881, %var_7411, %882, meta[relay.Constant][69] /* ty=Tensor[(675, 1), float32] */, meta[relay.Constant][70] /* ty=Tensor[(56, 1), float64] */, %883, %884)
  };
  %885(%var_7470, %var_7471) /* ty=(Tensor[(14, 16, 3), float32], Tensor[(14, 16, 3), int8], Tensor[(375), float64], Tensor[(56), float64], Tensor[(675, 1), float32], Tensor[(56, 1), float64], Tensor[(14, 16, 3), float32], Tensor[(16, 4, 11), int64]) */
}

def @func_8746() -> Tensor[(14, 16, 3), float32] {
  @func_8744() /* ty=Tensor[(14, 16, 3), float32] */
}

def @func_4961(%var_4960: Tensor[(675), float32]) -> (Tensor[(56), float64], Tensor[(56), float64], Tensor[(675), float32]) {
  %895 = fn (%var_4941: Tensor[(675), float32]) -> (Tensor[(56), float64], Tensor[(56), float64], Tensor[(675), float32]) {
    %886 = cast(%var_4941, dtype="float32") /* ty=Tensor[(675), float32] */;
    %887 = cast(%var_4941, dtype="float32") /* ty=Tensor[(675), float32] */;
    %888 = @func_4544() /* ty=Tensor[(56), float64] */;
    %889 = cast(%888, dtype="float64") /* ty=Tensor[(56), float64] */;
    %890 = reshape(%886, newshape=[15, 9, 5]) /* ty=Tensor[(15, 9, 5), float32] */;
    %891 = reshape(%887, newshape=[15, 9, 5]) /* ty=Tensor[(15, 9, 5), float32] */;
    %892 = reshape(%889, newshape=[56]) /* ty=Tensor[(56), float64] */;
    %893 = @func_1368(%890, %891, %892) /* ty=(Tensor[(15, 9, 5), float32], Tensor[(4, 1, 14), float64], Tensor[(56), float64]) */;
    %894 = %893.2;
    (%888, %894, %var_4941)
  };
  %895(%var_4960) /* ty=(Tensor[(56), float64], Tensor[(56), float64], Tensor[(675), float32]) */
}

def @func_8355() -> Tensor[(14, 16, 3), float32] {
  @func_8353() /* ty=Tensor[(14, 16, 3), float32] */
}

def @func_328(%var_290: Tensor[(11, 11, 10), uint64], %var_291: Tensor[(11, 11, 10), uint64], %var_303: Tensor[(8, 88), float32], %var_312: Tensor[(10), float32]) -> (Tensor[(11, 11, 10), bool], Tensor[(16, 4, 11), float32], Tensor[(8, 88), float32], Tensor[(16, 4, 11), float32], Tensor[(10), float32], Tensor[(375), float64]) {
  %896 = cast(%var_291, dtype="bool") /* ty=Tensor[(11, 11, 10), bool] */;
  %897 = shape_of(%var_290, dtype="int32") /* ty=Tensor[(3), int32] */;
  %898 = cast(%var_290, dtype="bool") /* ty=Tensor[(11, 11, 10), bool] */;
  %899 = dyn.reshape(%896, %897, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %900 = greater_equal(%898, %899) /* ty=Tensor[(11, 11, 10), bool] */;
  %901 = cast(%900, dtype="bool") /* ty=Tensor[(11, 11, 10), bool] */;
  %902 = shape_of(%var_291, dtype="int32") /* ty=Tensor[(3), int32] */;
  %903 = cast(%var_291, dtype="bool") /* ty=Tensor[(11, 11, 10), bool] */;
  %904 = dyn.reshape(%901, %902, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %905 = cast(%var_303, dtype="float32") /* ty=Tensor[(8, 88), float32] */;
  %906 = reshape(%905, newshape=[16, 4, 11]) /* ty=Tensor[(16, 4, 11), float32] */;
  %907 = @func_84(%906) /* ty=(Tensor[(16, 4, 11), float32],) */;
  %908 = cast(%var_312, dtype="float32") /* ty=Tensor[(10), float32] */;
  %909 = cast(meta[relay.Constant][71] /* ty=Tensor[(375), float64] */, dtype="float64") /* ty=Tensor[(375), float64] */;
  %910 = reshape(%908, newshape=[10, 1, 1]) /* ty=Tensor[(10, 1, 1), float32] */;
  %911 = reshape(%909, newshape=[375]) /* ty=Tensor[(375), float64] */;
  %912 = @func_256(%910, %911) /* ty=(Tensor[(16, 4, 11), float32], Tensor[(704), float32], Tensor[(15, 5, 5), bool], Tensor[(15, 5, 5), bool], Tensor[(10, 1, 375), int64], Tensor[(16, 4, 11), float32], Tensor[(10, 1, 1), float32]) */;
  %913 = less(%903, %904) /* ty=Tensor[(11, 11, 10), bool] */;
  %914 = %907.0;
  %915 = %912.5;
  (%913, %914, %var_303, %915, %var_312, meta[relay.Constant][71] /* ty=Tensor[(375), float64] */)
}

def @func_8303() -> (Tensor[(14, 16, 3), float32], Tensor[(375), float64], Tensor[(2496), float32], Tensor[(375), float64], Tensor[(16, 4, 11), float32], Tensor[(704), float32]) {
  %928 = fn () -> (Tensor[(14, 16, 3), float32], Tensor[(375), float64], Tensor[(2496), float32], Tensor[(375), float64], Tensor[(16, 4, 11), float32], Tensor[(704), float32]) {
    %916 = @func_6934() /* ty=(Tensor[(14, 16, 3), float32],) */;
    %917 = cast(meta[relay.Constant][72] /* ty=Tensor[(2496), float32] */, dtype="float32") /* ty=Tensor[(2496), float32] */;
    %918 = cast(meta[relay.Constant][73] /* ty=Tensor[(375), float64] */, dtype="float64") /* ty=Tensor[(375), float64] */;
    %919 = reshape(%917, newshape=[13, 12, 16]) /* ty=Tensor[(13, 12, 16), float32] */;
    %920 = reshape(%918, newshape=[375]) /* ty=Tensor[(375), float64] */;
    %921 = @func_453(%919, %920) /* ty=(Tensor[(15, 5, 5), bool], Tensor[(10), float32], Tensor[(375), float64], Tensor[(2, 4, 2), bool], Tensor[(16), uint16], Tensor[(13, 12, 16), float64]) */;
    %922 = cast(meta[relay.Constant][74] /* ty=Tensor[(704), float32] */, dtype="float32") /* ty=Tensor[(704), float32] */;
    %923 = reshape(%922, newshape=[704]) /* ty=Tensor[(704), float32] */;
    %924 = @func_7093(%923) /* ty=(Tensor[(14, 16, 3), float32], Tensor[(14, 16, 3), int64], Tensor[(16, 4, 11), float32], Tensor[(1210), uint64], Tensor[(704), float32], Tensor[(5, 2), float32], Tensor[(10, 8, 3), float32], Tensor[(14, 16, 3), float32]) */;
    %925 = %916.0;
    %926 = %921.2;
    %927 = %924.2;
    (%925, %926, meta[relay.Constant][72] /* ty=Tensor[(2496), float32] */, meta[relay.Constant][73] /* ty=Tensor[(375), float64] */, %927, meta[relay.Constant][74] /* ty=Tensor[(704), float32] */)
  };
  %928() /* ty=(Tensor[(14, 16, 3), float32], Tensor[(375), float64], Tensor[(2496), float32], Tensor[(375), float64], Tensor[(16, 4, 11), float32], Tensor[(704), float32]) */
}

def @func_803(%var_802: Tensor[(4, 1, 14), float64]) -> Tensor[(4, 1, 14), float64] {
  %930 = fn (%var_780: Tensor[(4, 1, 14), float64]) -> Tensor[(4, 1, 14), float64] {
    %929 = cast(%var_780, dtype="float64") /* ty=Tensor[(4, 1, 14), float64] */;
    atan(%929) /* ty=Tensor[(4, 1, 14), float64] */
  };
  %930(%var_802) /* ty=Tensor[(4, 1, 14), float64] */
}

def @func_3784(%var_3782: Tensor[(360, 2), float32], %var_3783: Tensor[(28, 4), float32]) -> (Tensor[(14, 16, 3), float32], Tensor[(6, 15, 8), float32], Tensor[(28, 4), float32], Tensor[(14, 16, 3), float32], Tensor[(360, 2), float32]) {
  @func_3780(%var_3782, %var_3783) /* ty=(Tensor[(14, 16, 3), float32], Tensor[(6, 15, 8), float32], Tensor[(28, 4), float32], Tensor[(14, 16, 3), float32], Tensor[(360, 2), float32]) */
}

def @func_5248() -> (Tensor[(14, 16, 3), float32],) {
  @func_5246() /* ty=(Tensor[(14, 16, 3), float32],) */
}

def @func_6528(%var_6527: Tensor[(8, 3, 5), bool]) -> Tensor[(8, 3, 5), bool] {
  %935 = fn (%var_6516: Tensor[(8, 3, 5), bool]) -> Tensor[(8, 3, 5), bool] {
    %931 = cast(%var_6516, dtype="bool") /* ty=Tensor[(8, 3, 5), bool] */;
    %932 = shape_of(meta[relay.Constant][75] /* ty=Tensor[(8, 3, 5), bool] */, dtype="int32") /* ty=Tensor[(3), int32] */;
    %933 = cast(meta[relay.Constant][75] /* ty=Tensor[(8, 3, 5), bool] */, dtype="bool") /* ty=Tensor[(8, 3, 5), bool] */;
    %934 = dyn.reshape(%931, %932, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    logical_or(%933, %934) /* ty=Tensor[(8, 3, 5), bool] */
  };
  %935(%var_6527) /* ty=Tensor[(8, 3, 5), bool] */
}

def @func_8406() -> Tensor[(11, 7, 5), float32] {
  @func_8404() /* ty=Tensor[(11, 7, 5), float32] */
}

def @func_8166(%var_8161: Tensor[(28, 2), float64]) -> (Tensor[(14, 16, 3), float32], Tensor[(14, 16, 3), float32], Tensor[(14, 16, 3), float32], Tensor[(14, 16, 3), bool], Tensor[(28, 2), float64]) {
  %936 = @func_7720() /* ty=(Tensor[(14, 16, 3), float32],) */;
  %937 = %936.0;
  %938 = cast(%937, dtype="float32") /* ty=Tensor[(14, 16, 3), float32] */;
  %939 = cast(%937, dtype="float32") /* ty=Tensor[(14, 16, 3), float32] */;
  %940 = cast(%var_8161, dtype="float64") /* ty=Tensor[(28, 2), float64] */;
  %941 = reshape(%938, newshape=[14, 16, 3]) /* ty=Tensor[(14, 16, 3), float32] */;
  %942 = reshape(%939, newshape=[14, 16, 3]) /* ty=Tensor[(14, 16, 3), float32] */;
  %943 = reshape(%940, newshape=[2, 28]) /* ty=Tensor[(2, 28), float64] */;
  %944 = @func_4249(%941, %942, %943) /* ty=(Tensor[(14, 16, 3), bool], Tensor[(14, 16, 3), float64], Tensor[(56), float64], Tensor[(225, 3), float32], Tensor[(2, 28), float64]) */;
  %945 = @func_7388() /* ty=Tensor[(14, 16, 3), float32] */;
  %946 = @func_6340() /* ty=Tensor[(14, 16, 3), float32] */;
  %947 = %944.0;
  (%945, %946, %937, %947, %var_8161)
}

def @func_8724(%var_8683: Tensor[(3, 9, 3), float32], %var_8684: Tensor[(3, 9, 3), float32]) -> (Tensor[(3, 9, 3), float32], Tensor[(3, 9, 3), float64]) {
  %948 = cast(%var_8684, dtype="float32") /* ty=Tensor[(3, 9, 3), float32] */;
  %949 = shape_of(%var_8683, dtype="int32") /* ty=Tensor[(3), int32] */;
  %950 = cast(%var_8683, dtype="float32") /* ty=Tensor[(3, 9, 3), float32] */;
  %951 = dyn.reshape(%948, %949, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %952 = cast(%var_8683, dtype="float64") /* ty=Tensor[(3, 9, 3), float64] */;
  %953 = floor_mod(%950, %951) /* ty=Tensor[(3, 9, 3), float32] */;
  %954 = atanh(%952) /* ty=Tensor[(3, 9, 3), float64] */;
  (%953, %954)
}

def @func_6225(%var_6223: Tensor[(12, 1, 13), float32], %var_6224: Tensor[(3, 30), uint16]) -> (Tensor[(3, 30), uint8], Tensor[(12, ?, 13), bool]) {
  @func_6221(%var_6223, %var_6224) /* ty=(Tensor[(3, 30), uint8], Tensor[(12, ?, 13), bool]) */
}

def @func_3971() -> Tensor[(14, 16, 3), float32] {
  @func_3969() /* ty=Tensor[(14, 16, 3), float32] */
}

def @func_8218() -> (Tensor[(14, 16, 3), float32],) {
  %955 = @func_6934() /* ty=(Tensor[(14, 16, 3), float32],) */;
  %956 = %955.0;
  (%956,)
}

def @func_7573() -> (Tensor[(14, 16, 3), float32], Tensor[(4, 1, 14), float64], Tensor[(56), float64]) {
  @func_7571() /* ty=(Tensor[(14, 16, 3), float32], Tensor[(4, 1, 14), float64], Tensor[(56), float64]) */
}

def @func_3734() -> Tensor[(14, 16, 3), float32] {
  %957 = @func_3153() /* ty=Tensor[(14, 16, 3), float32] */;
  %958 = cast(%957, dtype="float32") /* ty=Tensor[(14, 16, 3), float32] */;
  exp(%958) /* ty=Tensor[(14, 16, 3), float32] */
}

def @func_3904(%var_3902: Tensor[(14, 16, 3), float32], %var_3903: Tensor[(375), float64]) -> (Tensor[(14, 16, 3), float64], Tensor[(13, 12, 16), float64], Tensor[(2496), float32], Tensor[(375), float64]) {
  @func_3900(%var_3902, %var_3903) /* ty=(Tensor[(14, 16, 3), float64], Tensor[(13, 12, 16), float64], Tensor[(2496), float32], Tensor[(375), float64]) */
}

def @func_4545() -> Tensor[(56), float64] {
  %960 = fn () -> Tensor[(56), float64] {
    %959 = @func_3801() /* ty=(Tensor[(14, 16, 3), float32], Tensor[(4, 1, 14), float64], Tensor[(56), float64]) */;
    %959.2
  };
  %960() /* ty=Tensor[(56), float64] */
}

def @func_3590() -> Tensor[(14, 16, 3), float32] {
  @func_3588() /* ty=Tensor[(14, 16, 3), float32] */
}

/* For debugging purposes the metadata section has been omitted.
 * If you would like to see the full metadata section you can set the 
 * option to `True` when invoking `astext`. 
 *//home/yujunzhe/Hirgen_generated/tvm0.8_test/HirGen333/build/output.py:2473: DeprecationWarning: legacy graph executor behavior of producing json / lib / params will be removed in the next release. Please see documents of tvm.contrib.graph_executor.GraphModule for the  new recommended usage.
  graph, lib, params = relay.build(mod, target='llvm')
/home/yujunzhe/tvm/python/tvm/contrib/graph_runtime.py:25: UserWarning: This function has been moved to tvm.contrib.graph_executor and will be removed in the next TVM release
  warnings.warn(
/home/yujunzhe/Hirgen_generated/tvm0.8_test/HirGen333/build/output.py:2478: DeprecationWarning: legacy graph executor behavior of producing json / lib / params will be removed in the next release. Please see documents of tvm.contrib.graph_executor.GraphModule for the  new recommended usage.
  graph, lib, params = relay.build(mod, target='cuda')
/home/yujunzhe/Hirgen_generated/tvm0.8_test/HirGen333/build/output.py:2490: DeprecationWarning: legacy graph executor behavior of producing json / lib / params will be removed in the next release. Please see documents of tvm.contrib.graph_executor.GraphModule for the  new recommended usage.
  graph, lib, params = relay.build(mod, target='llvm')
/home/yujunzhe/Hirgen_generated/tvm0.8_test/HirGen333/build/output.py:2495: DeprecationWarning: legacy graph executor behavior of producing json / lib / params will be removed in the next release. Please see documents of tvm.contrib.graph_executor.GraphModule for the  new recommended usage.
  graph, lib, params = relay.build(mod, target='cuda')
/home/yujunzhe/Hirgen_generated/tvm0.8_test/HirGen333/build/output.py:2500: DeprecationWarning: legacy graph executor behavior of producing json / lib / params will be removed in the next release. Please see documents of tvm.contrib.graph_executor.GraphModule for the  new recommended usage.
  graph, lib, params = relay.build(mutated_mod, target='llvm')
/home/yujunzhe/Hirgen_generated/tvm0.8_test/HirGen333/build/output.py:2505: DeprecationWarning: legacy graph executor behavior of producing json / lib / params will be removed in the next release. Please see documents of tvm.contrib.graph_executor.GraphModule for the  new recommended usage.
  graph, lib, params = relay.build(mutated_mod, target='cuda')

===================================
#[version = "0.0.5"]
def @main() -> Tensor[(15, 15, 8), bool] {
  %0 = cast(meta[relay.Constant][1] /* ty=Tensor[(15, 15, 8), float64] */, dtype="bool") /* GeneratedSource */ /* ty=Tensor[(15, 15, 8), bool] */;
  %1 = shape_of(meta[relay.Constant][0] /* ty=Tensor[(15, 15, 8), float64] */, dtype="int32") /* GeneratedSource */ /* ty=Tensor[(3), int32] */;
  %2 = cast(meta[relay.Constant][0] /* ty=Tensor[(15, 15, 8), float64] */, dtype="bool") /* GeneratedSource */ /* ty=Tensor[(15, 15, 8), bool] */;
  %3 = dyn.reshape(%0, %1, newshape=[]) /* GeneratedSource */ /* ty=Tensor[(?, ?, ?), bool] */;
  not_equal(%2, %3) /* GeneratedSource */ /* ty=Tensor[(15, 15, 8), bool] */
}

/* For debugging purposes the metadata section has been omitted.
 * If you would like to see the full metadata section you can set the 
 * option to `True` when invoking `astext`. 
 */

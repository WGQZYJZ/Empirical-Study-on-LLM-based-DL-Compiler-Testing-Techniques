==========mod==========
#[version = "0.0.5"]
def @func_2754(%var_2687: Tensor[(840, 4), float64], %var_2721: Tensor[(546), float32], %var_2741: Tensor[(96), float64]) -> (Tensor[(7, 10, 13), float64], Tensor[(7, 10, 13), float64], Tensor[(50, 6), float32], Tensor[(840, 4), float64], Tensor[(10, 30), float32], Tensor[(24, 1), float32], bool, Tensor[(420), uint8], Tensor[(546), float32], Tensor[(6, 4), float32], Tensor[(96), float64], Tensor[(24, 8), int8], Tensor[(7, 10, 13), float64], bool) {
  %0 = @func_1502() /* ty=(Tensor[(7, 10, 13), float64],) */;
  %1 = @func_1761() /* ty=(bool, Tensor[(7, 10, 13), float64], Tensor[(910), float32]) */;
  %2 = %1.1;
  %3 = @func_2272() /* ty=bool */;
  %4 = cast(%2, dtype="float64") /* ty=Tensor[(7, 10, 13), float64] */;
  %5 = cast(%3, dtype="float64") /* ty=float64 */;
  %6 = cast(%var_2687, dtype="float64") /* ty=Tensor[(840, 4), float64] */;
  %7 = cast(meta[relay.Constant][0] /* ty=Tensor[(10, 30), float32] */, dtype="float32") /* ty=Tensor[(10, 30), float32] */;
  %8 = cast(meta[relay.Constant][1] /* ty=Tensor[(24, 1), float32] */, dtype="float32") /* ty=Tensor[(24, 1), float32] */;
  %9 = reshape(%6, newshape=[14, 15, 16]) /* ty=Tensor[(14, 15, 16), float64] */;
  %10 = reshape(%7, newshape=[50, 6]) /* ty=Tensor[(50, 6), float32] */;
  %11 = reshape(%8, newshape=[24]) /* ty=Tensor[(24), float32] */;
  %12 = @func_2402(%9, %10, %11) /* ty=(Tensor[(14, 15, 16), float64], Tensor[(7, 10, 13), float64], Tensor[(50, 6), float32], Tensor[(24), float32]) */;
  %13 = cast(%3, dtype="uint8") /* ty=uint8 */;
  %14 = cast(meta[relay.Constant][2] /* ty=Tensor[(420), uint8] */, dtype="uint8") /* ty=Tensor[(420), uint8] */;
  %15 = cast(%var_2721, dtype="float32") /* ty=Tensor[(546), float32] */;
  %16 = cast(meta[relay.Constant][1] /* ty=Tensor[(24, 1), float32] */, dtype="float32") /* ty=Tensor[(24, 1), float32] */;
  %17 = reshape(%13, newshape=[]) /* ty=uint8 */;
  %18 = reshape(%14, newshape=[7, 5, 12]) /* ty=Tensor[(7, 5, 12), uint8] */;
  %19 = reshape(%15, newshape=[1, 546]) /* ty=Tensor[(1, 546), float32] */;
  %20 = reshape(%16, newshape=[24]) /* ty=Tensor[(24), float32] */;
  %21 = @func_2145(%17, %18, %19, %20) /* ty=(Tensor[(7, 5, 12), uint8], Tensor[(7, 5, 12), uint16], Tensor[(4, 8, 6), float32], Tensor[(96), float64], Tensor[(24), float32], Tensor[(192), int8], Tensor[(1, 546), int32], bool, Tensor[(7, 10, 13), float64], Tensor[(910), float32]) */;
  %22 = cast(%var_2741, dtype="float64") /* ty=Tensor[(96), float64] */;
  %23 = cast(%var_2721, dtype="float32") /* ty=Tensor[(546), float32] */;
  %24 = cast(meta[relay.Constant][1] /* ty=Tensor[(24, 1), float32] */, dtype="float32") /* ty=Tensor[(24, 1), float32] */;
  %25 = cast(meta[relay.Constant][3] /* ty=Tensor[(24, 8), int8] */, dtype="int8") /* ty=Tensor[(24, 8), int8] */;
  %26 = reshape(%22, newshape=[16, 2, 3]) /* ty=Tensor[(16, 2, 3), float64] */;
  %27 = reshape(%23, newshape=[546]) /* ty=Tensor[(546), float32] */;
  %28 = reshape(%24, newshape=[12, 2]) /* ty=Tensor[(12, 2), float32] */;
  %29 = reshape(%25, newshape=[192]) /* ty=Tensor[(192), int8] */;
  %30 = @func_842(%26, %27, %28, %29) /* ty=(Tensor[(16, 2, 3), float64], Tensor[(4, 8, 6), float32], Tensor[(546), float32], Tensor[(12, 2), float32], Tensor[(192), int8], Tensor[(6, 4), float32]) */;
  %31 = divide(%4, %5) /* ty=Tensor[(7, 10, 13), float64] */;
  %32 = cast(%31, dtype="float32") /* ty=Tensor[(7, 10, 13), float32] */;
  %33 = reshape(%32, newshape=[7, 10, 13]) /* ty=Tensor[(7, 10, 13), float32] */;
  %34 = @func_1657(%33) /* ty=(Tensor[(7, 10, 13), float64],) */;
  %35 = @func_2026() /* ty=(bool, Tensor[(7, 10, 13), float64]) */;
  %36 = %0.0;
  %37 = %12.2;
  %38 = %21.7;
  %39 = %30.5;
  %40 = %34.0;
  %41 = %35.0;
  (%36, %31, %37, %var_2687, meta[relay.Constant][0] /* ty=Tensor[(10, 30), float32] */, meta[relay.Constant][1] /* ty=Tensor[(24, 1), float32] */, %38, meta[relay.Constant][2] /* ty=Tensor[(420), uint8] */, %var_2721, %39, %var_2741, meta[relay.Constant][3] /* ty=Tensor[(24, 8), int8] */, %40, %41)
}

def @func_12891() -> (Tensor[(96), float64], Tensor[(7, 10, 13), float64]) {
  %42 = @func_9915() /* ty=Tensor[(96), float64] */;
  %43 = @func_6153() /* ty=Tensor[(7, 10, 13), float64] */;
  (%42, %43)
}

def @func_3682() -> (bool, Tensor[(4, ?, 6), int8], Tensor[(24), float32], Tensor[(7, 10, 13), float32], Tensor[(7, 10, 13), float32], Tensor[(910), float32]) {
  %44 = @func_2572() /* ty=(bool,) */;
  %45 = cast(meta[relay.Constant][4] /* ty=Tensor[(24), float32] */, dtype="float32") /* ty=Tensor[(24), float32] */;
  %46 = reshape(%45, newshape=[4, 1, 6]) /* ty=Tensor[(4, 1, 6), float32] */;
  %47 = @func_126(%46) /* ty=(Tensor[(4, ?, 6), int32], Tensor[(4, ?, 6), int8]) */;
  %48 = @func_2530() /* ty=(Tensor[(7, 10, 13), float32],) */;
  %49 = @func_2048() /* ty=(Tensor[(7, 10, 13), float32], Tensor[(7, 10, 13), float64]) */;
  %50 = @func_1761() /* ty=(bool, Tensor[(7, 10, 13), float64], Tensor[(910), float32]) */;
  %51 = %44.0;
  %52 = %47.1;
  %53 = %48.0;
  %54 = %49.0;
  %55 = %50.2;
  (%51, %52, meta[relay.Constant][4] /* ty=Tensor[(24), float32] */, %53, %54, %55)
}

def @func_4236(%var_4231: Tensor[(546), float32], %var_4233: Tensor[(192), int8]) -> (Tensor[(7, 10, 13), float32], Tensor[(7, 10, 13), float32], Tensor[(4, 8, 6), float32], Tensor[(546), float32], Tensor[(24), float32], Tensor[(192), int8]) {
  %56 = @func_3682() /* ty=(bool, Tensor[(4, ?, 6), int8], Tensor[(24), float32], Tensor[(7, 10, 13), float32], Tensor[(7, 10, 13), float32], Tensor[(910), float32]) */;
  %57 = @func_1232() /* ty=(Tensor[(7, 10, 13), float32],) */;
  %58 = cast(%var_4231, dtype="float32") /* ty=Tensor[(546), float32] */;
  %59 = cast(meta[relay.Constant][5] /* ty=Tensor[(24), float32] */, dtype="float32") /* ty=Tensor[(24), float32] */;
  %60 = cast(%var_4233, dtype="int8") /* ty=Tensor[(192), int8] */;
  %61 = reshape(%58, newshape=[3, 13, 14]) /* ty=Tensor[(3, 13, 14), float32] */;
  %62 = reshape(%59, newshape=[6, 4]) /* ty=Tensor[(6, 4), float32] */;
  %63 = reshape(%60, newshape=[4, 8, 6]) /* ty=Tensor[(4, 8, 6), int8] */;
  %64 = @func_247(%61, %62, %63) /* ty=(Tensor[(6, 4), float32], Tensor[(4, ?, 6), int8], Tensor[(4, ?, 6), int32], Tensor[(4, 8, 6), float32], Tensor[(4, ?, 6), int8], Tensor[(3, 13, 14), float64]) */;
  %65 = %56.3;
  %66 = %57.0;
  %67 = %64.3;
  (%65, %66, %67, %var_4231, meta[relay.Constant][5] /* ty=Tensor[(24), float32] */, %var_4233)
}

def @func_6009() -> (Tensor[(7, 10, 13), float64],) {
  %68 = @func_1502() /* ty=(Tensor[(7, 10, 13), float64],) */;
  %69 = %68.0;
  (%69,)
}

def @func_5340() -> (Tensor[(7, 10, 13), float32],) {
  %70 = @func_1858() /* ty=(Tensor[(7, 10, 13), float64], Tensor[(7, 10, 13), float32]) */;
  %71 = %70.1;
  %72 = cast(%71, dtype="float32") /* ty=Tensor[(7, 10, 13), float32] */;
  %73 = cos(%72) /* ty=Tensor[(7, 10, 13), float32] */;
  (%73,)
}

def @func_1118(%var_1110: bool) -> (Tensor[(1, 4), bool],) {
  %74 = cast(%var_1110, dtype="bool") /* ty=bool */;
  %75 = cast(meta[relay.Constant][6] /* ty=Tensor[(1, 4), bool] */, dtype="bool") /* ty=Tensor[(1, 4), bool] */;
  %76 = logical_and(%74, %75) /* ty=Tensor[(1, 4), bool] */;
  (%76,)
}

def @func_6063() -> (bool,) {
  %77 = @func_1426() /* ty=(Tensor[(7, 10, 13), float32], Tensor[(1, 4), bool], bool) */;
  %78 = %77.2;
  (%78,)
}

def @func_9160() -> (Tensor[(7, 10, 13), float32], Tensor[(7, 10, 13), float64], Tensor[(1, 4), bool]) {
  %79 = @func_5818() /* ty=(Tensor[(7, 10, 13), float32],) */;
  %80 = @func_4807() /* ty=(Tensor[(7, 10, 13), float64],) */;
  %81 = @func_2912() /* ty=(Tensor[(7, 10, 13), float64], Tensor[(1, 4), bool]) */;
  %82 = %79.0;
  %83 = %80.0;
  %84 = %81.1;
  (%82, %83, %84)
}

def @func_5421() -> Tensor[(7, 10, 13), float64] {
  %85 = @func_4407() /* ty=(Tensor[(7, 10, 13), float64], Tensor[(7, 10, 13), float64]) */;
  %85.1
}

def @func_10854(%var_10835: Tensor[(280), float32]) -> (Tensor[(7, 10, 13), float32], Tensor[(280), float32], Tensor[(280), float32], Tensor[(192), int8], Tensor[(360), uint64]) {
  %86 = @func_3950() /* ty=(bool, Tensor[(7, 10, 13), float64], Tensor[(7, 10, 13), float32]) */;
  %87 = cast(%var_10835, dtype="float32") /* ty=Tensor[(280), float32] */;
  %88 = cast(meta[relay.Constant][7] /* ty=Tensor[(192), int8] */, dtype="int8") /* ty=Tensor[(192), int8] */;
  %89 = cast(meta[relay.Constant][8] /* ty=Tensor[(360), uint64] */, dtype="uint64") /* ty=Tensor[(360), uint64] */;
  %90 = reshape(%87, newshape=[280]) /* ty=Tensor[(280), float32] */;
  %91 = reshape(%88, newshape=[192]) /* ty=Tensor[(192), int8] */;
  %92 = reshape(%89, newshape=[360]) /* ty=Tensor[(360), uint64] */;
  %93 = @func_9843(%90, %91, %92) /* ty=(Tensor[(7, 10, 13), float64], Tensor[(7, 10, 13), float64], Tensor[(378), float64], Tensor[(24, 8), int8], Tensor[(280), float32], Tensor[(192), int8], bool, bool, Tensor[(360), uint64]) */;
  %94 = %86.2;
  %95 = %93.4;
  (%94, %95, %var_10835, meta[relay.Constant][7] /* ty=Tensor[(192), int8] */, meta[relay.Constant][8] /* ty=Tensor[(360), uint64] */)
}

def @func_7920() -> (Tensor[(11, 15, 9), float32], Tensor[(7, 10, 13), float64]) {
  %96 = cast(meta[relay.Constant][9] /* ty=Tensor[(11, 15, 9), float32] */, dtype="float32") /* ty=Tensor[(11, 15, 9), float32] */;
  %97 = asin(%96) /* ty=Tensor[(11, 15, 9), float32] */;
  %98 = @func_5480() /* ty=Tensor[(7, 10, 13), float64] */;
  (%97, %98)
}

def @func_10951() -> (Tensor[(300, 1), float32], bool) {
  %99 = @func_6039() /* ty=(Tensor[(7, 10, 13), float32], bool) */;
  %100 = @func_10350() /* ty=Tensor[(300, 1), float32] */;
  %101 = %99.1;
  (%100, %101)
}

def @func_3004(%var_2990: Tensor[(11, 7, 13), float32]) -> (Tensor[(11, 7, 13), float32],) {
  %102 = cast(%var_2990, dtype="float32") /* ty=Tensor[(11, 7, 13), float32] */;
  %103 = exp(%102) /* ty=Tensor[(11, 7, 13), float32] */;
  (%103,)
}

def @func_2292() -> (Tensor[(7, 10, 13), float32], bool) {
  %104 = @func_1369() /* ty=(Tensor[(7, 10, 13), float32], Tensor[(7, 10, 13), float32]) */;
  %105 = @func_2026() /* ty=(bool, Tensor[(7, 10, 13), float64]) */;
  %106 = %104.0;
  %107 = %105.0;
  (%106, %107)
}

def @func_9759() -> (bool,) {
  %108 = @func_3809() /* ty=bool */;
  (%108,)
}

def @func_6714() -> bool {
  %109 = @func_6229() /* ty=(bool,) */;
  %109.0
}

def @func_8483() -> (bool, Tensor[(14, 15, 16), float64]) {
  %110 = @func_7667() /* ty=(Tensor[(7, 10, 13), float32], bool, Tensor[(7, 10, 13), float64]) */;
  %111 = @func_5294() /* ty=(Tensor[(1, 4), bool], Tensor[(7, 10, 13), float64], Tensor[(14, 15, 16), float64], Tensor[(3360), float64], Tensor[(300, 1), float32], Tensor[(24), float32]) */;
  %112 = %110.1;
  %113 = %111.2;
  (%112, %113)
}

def @func_1458() -> (Tensor[(1, 4), bool],) {
  %114 = @func_1426() /* ty=(Tensor[(7, 10, 13), float32], Tensor[(1, 4), bool], bool) */;
  %115 = %114.1;
  (%115,)
}

def @func_9259(%var_9254: Tensor[(7, 4, 3), uint32], %var_9255: Tensor[(7, 4, 3), uint32]) -> Tensor[(7, 4, 3), uint32] {
  %116 = cast(%var_9255, dtype="uint32") /* ty=Tensor[(7, 4, 3), uint32] */;
  %117 = shape_of(%var_9254, dtype="int32") /* ty=Tensor[(3), int32] */;
  %118 = cast(%var_9254, dtype="uint32") /* ty=Tensor[(7, 4, 3), uint32] */;
  %119 = dyn.reshape(%116, %117, newshape=[]) /* ty=Tensor[(?, ?, ?), uint32] */;
  subtract(%118, %119) /* ty=Tensor[(7, 4, 3), uint32] */
}

def @func_2912() -> (Tensor[(7, 10, 13), float64], Tensor[(1, 4), bool]) {
  %120 = @func_1318() /* ty=(Tensor[(7, 10, 13), float32], Tensor[(7, 10, 13), float32]) */;
  %121 = %120.1;
  %122 = cast(%121, dtype="float32") /* ty=Tensor[(7, 10, 13), float32] */;
  %123 = atan(%122) /* ty=Tensor[(7, 10, 13), float32] */;
  %124 = cast(%123, dtype="float64") /* ty=Tensor[(7, 10, 13), float64] */;
  %125 = @func_1458() /* ty=(Tensor[(1, 4), bool],) */;
  %126 = acosh(%124) /* ty=Tensor[(7, 10, 13), float64] */;
  %127 = %125.0;
  (%126, %127)
}

def @func_11267() -> (bool, Tensor[(11, 15, 9), float32], bool) {
  %128 = @func_7920() /* ty=(Tensor[(11, 15, 9), float32], Tensor[(7, 10, 13), float64]) */;
  %129 = @func_10812() /* ty=(bool, Tensor[(7, 10, 13), float32]) */;
  %130 = @func_4112() /* ty=bool */;
  %131 = %128.0;
  %132 = %129.0;
  (%130, %131, %132)
}

def @func_11998() -> (bool,) {
  %133 = @func_5839() /* ty=(bool,) */;
  %134 = %133.0;
  (%134,)
}

def @func_11760() -> (Tensor[(7, 10, 13), float32], bool) {
  %135 = @func_7097() /* ty=(bool, Tensor[(7, 10, 13), float32], Tensor[(7, 10, 13), float32], Tensor[(1001), float32], Tensor[(4, 4), bool]) */;
  %136 = @func_8887() /* ty=(bool,) */;
  %137 = %135.1;
  %138 = %136.0;
  (%137, %138)
}

def @func_1403(%var_1399: Tensor[(8, 16, 9), float64]) -> Tensor[(8, 16, 9), float64] {
  %139 = cast(%var_1399, dtype="float64") /* ty=Tensor[(8, 16, 9), float64] */;
  log2(%139) /* ty=Tensor[(8, 16, 9), float64] */
}

def @func_8286() -> bool {
  %140 = @func_6063() /* ty=(bool,) */;
  %140.0
}

def @func_11424() -> (Tensor[(7, 10, 13), float64], Tensor[(1, 4), bool]) {
  %141 = @func_7423() /* ty=(Tensor[(7, 10, 13), float64], Tensor[(7, 10, 13), float64]) */;
  %142 = @func_6503() /* ty=(Tensor[(1, 4), bool], Tensor[(1, 4), bool], Tensor[(7, 10, 13), float32]) */;
  %143 = %141.0;
  %144 = %142.0;
  (%143, %144)
}

def @func_7872() -> (bool, bool) {
  %145 = @func_6063() /* ty=(bool,) */;
  %146 = %145.0;
  %147 = @func_4112() /* ty=bool */;
  (%146, %147)
}

def @func_10316(%var_10294: Tensor[(5, 4, 5), uint8], %var_10295: Tensor[(5, 4, 5), uint8]) -> Tensor[(5, 4, 5), uint8] {
  %148 = cast(%var_10295, dtype="uint8") /* ty=Tensor[(5, 4, 5), uint8] */;
  %149 = shape_of(%var_10294, dtype="int32") /* ty=Tensor[(3), int32] */;
  %150 = cast(%var_10294, dtype="uint8") /* ty=Tensor[(5, 4, 5), uint8] */;
  %151 = dyn.reshape(%148, %149, newshape=[]) /* ty=Tensor[(?, ?, ?), uint8] */;
  subtract(%150, %151) /* ty=Tensor[(5, 4, 5), uint8] */
}

def @func_1975() -> (bool,) {
  %152 = @func_1761() /* ty=(bool, Tensor[(7, 10, 13), float64], Tensor[(910), float32]) */;
  %153 = %152.0;
  (%153,)
}

def @func_10646(%var_10613: Tensor[(480), float64]) -> (Tensor[(7, 10, 13), float64], Tensor[(10, 16, 3), bool]) {
  %154 = @func_5010() /* ty=(Tensor[(7, 10, 13), float64],) */;
  %155 = cast(%var_10613, dtype="float64") /* ty=Tensor[(480), float64] */;
  %156 = reshape(%155, newshape=[2, 240]) /* ty=Tensor[(2, 240), float64] */;
  %157 = @func_8580(%156) /* ty=(Tensor[(7, 10, 13), float64], Tensor[(10, 16, 3), float64], Tensor[(2, 240), float64], bool, Tensor[(7, 10, 13), float32], Tensor[(1, 4), bool]) */;
  %158 = %157.1;
  %159 = cast(%var_10613, dtype="bool") /* ty=Tensor[(480), bool] */;
  %160 = shape_of(%158, dtype="int32") /* ty=Tensor[(3), int32] */;
  %161 = cast(%158, dtype="bool") /* ty=Tensor[(10, 16, 3), bool] */;
  %162 = dyn.reshape(%159, %160, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %163 = %154.0;
  %164 = less(%161, %162) /* ty=Tensor[(10, 16, 3), bool] */;
  (%163, %164)
}

def @func_7043(%var_7017: uint8, %var_7018: Tensor[(420), uint8], %var_7019: Tensor[(91, 6), float32], %var_7020: Tensor[(24), float32]) -> (Tensor[(7, 10, 13), float32], Tensor[(7, 5, 12), uint16], uint8, Tensor[(420), uint8], Tensor[(91, 6), float32], Tensor[(24), float32]) {
  %165 = @func_1232() /* ty=(Tensor[(7, 10, 13), float32],) */;
  %166 = cast(%var_7017, dtype="uint8") /* ty=uint8 */;
  %167 = cast(%var_7018, dtype="uint8") /* ty=Tensor[(420), uint8] */;
  %168 = cast(%var_7019, dtype="float32") /* ty=Tensor[(91, 6), float32] */;
  %169 = cast(%var_7020, dtype="float32") /* ty=Tensor[(24), float32] */;
  %170 = reshape(%166, newshape=[]) /* ty=uint8 */;
  %171 = reshape(%167, newshape=[7, 5, 12]) /* ty=Tensor[(7, 5, 12), uint8] */;
  %172 = reshape(%168, newshape=[1, 546]) /* ty=Tensor[(1, 546), float32] */;
  %173 = reshape(%169, newshape=[24]) /* ty=Tensor[(24), float32] */;
  %174 = @func_2145(%170, %171, %172, %173) /* ty=(Tensor[(7, 5, 12), uint8], Tensor[(7, 5, 12), uint16], Tensor[(4, 8, 6), float32], Tensor[(96), float64], Tensor[(24), float32], Tensor[(192), int8], Tensor[(1, 546), int32], bool, Tensor[(7, 10, 13), float64], Tensor[(910), float32]) */;
  %175 = %165.0;
  %176 = %174.1;
  (%175, %176, %var_7017, %var_7018, %var_7019, %var_7020)
}

def @func_11135(%var_11065: Tensor[(15, 7, 11), float32]) -> (Tensor[(7, 10, 13), float32], Tensor[(7, 10, 13), float64], Tensor[(15, 7, 11), float64], Tensor[(15, 7, 11), float32]) {
  %177 = @func_2530() /* ty=(Tensor[(7, 10, 13), float32],) */;
  %178 = cast(meta[relay.Constant][10] /* ty=Tensor[(15, 7, 11), float32] */, dtype="int16") /* ty=Tensor[(15, 7, 11), int16] */;
  %179 = shape_of(%var_11065, dtype="int32") /* ty=Tensor[(3), int32] */;
  %180 = cast(%var_11065, dtype="int16") /* ty=Tensor[(15, 7, 11), int16] */;
  %181 = dyn.reshape(%178, %179, newshape=[]) /* ty=Tensor[(?, ?, ?), int16] */;
  %182 = left_shift(%180, %181) /* ty=Tensor[(15, 7, 11), int16] */;
  %183 = cast(%182, dtype="float64") /* ty=Tensor[(15, 7, 11), float64] */;
  %184 = shape_of(meta[relay.Constant][10] /* ty=Tensor[(15, 7, 11), float32] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %185 = cast(meta[relay.Constant][10] /* ty=Tensor[(15, 7, 11), float32] */, dtype="float64") /* ty=Tensor[(15, 7, 11), float64] */;
  %186 = dyn.reshape(%183, %184, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %187 = cast(meta[relay.Constant][10] /* ty=Tensor[(15, 7, 11), float32] */, dtype="bool") /* ty=Tensor[(15, 7, 11), bool] */;
  %188 = shape_of(%var_11065, dtype="int32") /* ty=Tensor[(3), int32] */;
  %189 = cast(%var_11065, dtype="bool") /* ty=Tensor[(15, 7, 11), bool] */;
  %190 = dyn.reshape(%187, %188, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %191 = less_equal(%189, %190) /* ty=Tensor[(15, 7, 11), bool] */;
  %192 = cast(%191, dtype="float32") /* ty=Tensor[(15, 7, 11), float32] */;
  %193 = asin(%192) /* ty=Tensor[(15, 7, 11), float32] */;
  %194 = cast(%193, dtype="float32") /* ty=Tensor[(15, 7, 11), float32] */;
  %195 = %177.0;
  %196 = @func_1704() /* ty=Tensor[(7, 10, 13), float64] */;
  %197 = add(%185, %186) /* ty=Tensor[(15, 7, 11), float64] */;
  %198 = atanh(%194) /* ty=Tensor[(15, 7, 11), float32] */;
  (%195, %196, %197, %198)
}

def @func_1797() -> (Tensor[(7, 10, 13), float64],) {
  %199 = @func_1704() /* ty=Tensor[(7, 10, 13), float64] */;
  (%199,)
}

def @func_8238() -> (Tensor[(7, 10, 13), float64], Tensor[(7, 12, 6), uint32], Tensor[(16), bool]) {
  %200 = @func_4588() /* ty=(Tensor[(7, 10, 13), uint8], Tensor[(1, 4), bool], Tensor[(7, 10, 13), float64], Tensor[(7, 10, 13), float64], Tensor[(910), float32], Tensor[(7, 10, 13), float64]) */;
  %201 = cast(meta[relay.Constant][11] /* ty=Tensor[(16), bool] */, dtype="bool") /* ty=Tensor[(16), bool] */;
  %202 = reshape(%201, newshape=[16]) /* ty=Tensor[(16), bool] */;
  %203 = @func_6203(%202) /* ty=(bool, bool, Tensor[(7, 10, 13), float64], Tensor[(1, 4), bool], Tensor[(11, 7, 13), float32], Tensor[(16), bool], Tensor[(7, 12, 6), uint32]) */;
  %204 = %200.3;
  %205 = %203.6;
  (%204, %205, meta[relay.Constant][11] /* ty=Tensor[(16), bool] */)
}

def @func_1426() -> (Tensor[(7, 10, 13), float32], Tensor[(1, 4), bool], bool) {
  %206 = @func_1369() /* ty=(Tensor[(7, 10, 13), float32], Tensor[(7, 10, 13), float32]) */;
  %207 = cast(True /* ty=bool */, dtype="bool") /* ty=bool */;
  %208 = reshape(%207, newshape=[]) /* ty=bool */;
  %209 = @func_1118(%208) /* ty=(Tensor[(1, 4), bool],) */;
  %210 = %206.0;
  %211 = %209.0;
  (%210, %211, True /* ty=bool */)
}

def @func_6203(%var_6191: Tensor[(16), bool]) -> (bool, bool, Tensor[(7, 10, 13), float64], Tensor[(1, 4), bool], Tensor[(11, 7, 13), float32], Tensor[(16), bool], Tensor[(7, 12, 6), uint32]) {
  %212 = @func_2572() /* ty=(bool,) */;
  %213 = @func_5608() /* ty=(Tensor[(7, 10, 13), float64],) */;
  %214 = @func_4196() /* ty=(Tensor[(1, 4), bool],) */;
  %215 = @func_3230() /* ty=bool */;
  %216 = cast(%215, dtype="bool") /* ty=bool */;
  %217 = cast(%var_6191, dtype="bool") /* ty=Tensor[(16), bool] */;
  %218 = reshape(%216, newshape=[]) /* ty=bool */;
  %219 = reshape(%217, newshape=[1, 4, 4]) /* ty=Tensor[(1, 4, 4), bool] */;
  %220 = @func_4153(%218, %219) /* ty=(Tensor[(1, 4, 4), bool], Tensor[(11, 7, 13), float32], Tensor[(1001), float32]) */;
  %221 = cast(%215, dtype="uint32") /* ty=uint32 */;
  %222 = reshape(%221, newshape=[]) /* ty=uint32 */;
  %223 = %212.0;
  %224 = %213.0;
  %225 = %214.0;
  %226 = %220.1;
  %227 = @func_2960(%222) /* ty=Tensor[(7, 12, 6), uint32] */;
  (%223, %215, %224, %225, %226, %var_6191, %227)
}

def @func_11798() -> (Tensor[(7, 10, 13), float32], bool) {
  %228 = @func_1318() /* ty=(Tensor[(7, 10, 13), float32], Tensor[(7, 10, 13), float32]) */;
  %229 = @func_6063() /* ty=(bool,) */;
  %230 = %228.0;
  %231 = %229.0;
  (%230, %231)
}

def @func_12770() -> (bool, bool, Tensor[(7, 10, 13), float64], Tensor[(24), float32]) {
  %232 = @func_8657() /* ty=(bool, Tensor[(7, 10, 13), float64], Tensor[(7, 10, 13), float64]) */;
  %233 = %232.2;
  %234 = cast(%233, dtype="float64") /* ty=Tensor[(7, 10, 13), float64] */;
  %235 = @func_9329() /* ty=(Tensor[(7, 10, 13), float32], Tensor[(24), float32], Tensor[(7, 12, 6), uint32]) */;
  %236 = @func_9538() /* ty=bool */;
  %237 = @func_12606() /* ty=bool */;
  %238 = sinh(%234) /* ty=Tensor[(7, 10, 13), float64] */;
  %239 = %235.1;
  (%236, %237, %238, %239)
}

def @func_4002() -> (Tensor[(7, 10, 13), float64],) {
  %240 = @func_1502() /* ty=(Tensor[(7, 10, 13), float64],) */;
  %241 = %240.0;
  (%241,)
}

def @func_5696() -> (Tensor[(7, 10, 13), float64], Tensor[(7, 10, 13), float64]) {
  %242 = @func_4407() /* ty=(Tensor[(7, 10, 13), float64], Tensor[(7, 10, 13), float64]) */;
  %243 = @func_1704() /* ty=Tensor[(7, 10, 13), float64] */;
  %244 = %242.0;
  (%243, %244)
}

def @func_10290() -> bool {
  @func_3186() /* ty=bool */
}

def @func_3186() -> bool {
  %245 = @func_1761() /* ty=(bool, Tensor[(7, 10, 13), float64], Tensor[(910), float32]) */;
  %245.0
}

def @func_4815(%var_4810: Tensor[(10, 16, 3), float64]) -> Tensor[(10, 16, 3), float64] {
  %246 = cast(%var_4810, dtype="float64") /* ty=Tensor[(10, 16, 3), float64] */;
  acos(%246) /* ty=Tensor[(10, 16, 3), float64] */
}

def @func_1502() -> (Tensor[(7, 10, 13), float64],) {
  %247 = @func_1232() /* ty=(Tensor[(7, 10, 13), float32],) */;
  %248 = %247.0;
  %249 = cast(%248, dtype="float64") /* ty=Tensor[(7, 10, 13), float64] */;
  %250 = atanh(%249) /* ty=Tensor[(7, 10, 13), float64] */;
  (%250,)
}

def @func_3968(%var_3953: Tensor[(2, 9, 11), uint8], %var_3954: Tensor[(2, 9, 11), uint8]) -> Tensor[(2, 9, 11), float64] {
  %251 = cast(%var_3954, dtype="uint8") /* ty=Tensor[(2, 9, 11), uint8] */;
  %252 = shape_of(%var_3953, dtype="int32") /* ty=Tensor[(3), int32] */;
  %253 = cast(%var_3953, dtype="uint8") /* ty=Tensor[(2, 9, 11), uint8] */;
  %254 = dyn.reshape(%251, %252, newshape=[]) /* ty=Tensor[(?, ?, ?), uint8] */;
  %255 = left_shift(%253, %254) /* ty=Tensor[(2, 9, 11), uint8] */;
  %256 = cast(%255, dtype="float32") /* ty=Tensor[(2, 9, 11), float32] */;
  %257 = log10(%256) /* ty=Tensor[(2, 9, 11), float32] */;
  %258 = cast(%257, dtype="float64") /* ty=Tensor[(2, 9, 11), float64] */;
  sqrt(%258) /* ty=Tensor[(2, 9, 11), float64] */
}

def @func_4848() -> (Tensor[(1, 4), bool], bool) {
  %259 = @func_4196() /* ty=(Tensor[(1, 4), bool],) */;
  %260 = @func_1761() /* ty=(bool, Tensor[(7, 10, 13), float64], Tensor[(910), float32]) */;
  %261 = %259.0;
  %262 = %260.0;
  (%261, %262)
}

def @func_11951() -> Tensor[(7, 10, 13), float32] {
  %263 = @func_6975() /* ty=(Tensor[(7, 10, 13), float32],) */;
  %263.0
}

def @func_7423() -> (Tensor[(7, 10, 13), float64], Tensor[(7, 10, 13), float64]) {
  %264 = @func_5608() /* ty=(Tensor[(7, 10, 13), float64],) */;
  %265 = @func_4277() /* ty=Tensor[(7, 10, 13), float64] */;
  %266 = %264.0;
  (%265, %266)
}

def @func_1761() -> (bool, Tensor[(7, 10, 13), float64], Tensor[(910), float32]) {
  %267 = @func_1426() /* ty=(Tensor[(7, 10, 13), float32], Tensor[(1, 4), bool], bool) */;
  %268 = cast(meta[relay.Constant][12] /* ty=Tensor[(910), float32] */, dtype="float32") /* ty=Tensor[(910), float32] */;
  %269 = reshape(%268, newshape=[7, 10, 13]) /* ty=Tensor[(7, 10, 13), float32] */;
  %270 = @func_1657(%269) /* ty=(Tensor[(7, 10, 13), float64],) */;
  %271 = %267.2;
  %272 = %270.0;
  (%271, %272, meta[relay.Constant][12] /* ty=Tensor[(910), float32] */)
}

def @func_5177() -> (Tensor[(7, 10, 13), float64], bool, Tensor[(96), float64], Tensor[(3360), float64], Tensor[(546), float32], Tensor[(96), float64], Tensor[(7, 10, 13), float64]) {
  %273 = @func_1858() /* ty=(Tensor[(7, 10, 13), float64], Tensor[(7, 10, 13), float32]) */;
  %274 = @func_4357() /* ty=(bool,) */;
  %275 = cast(meta[relay.Constant][13] /* ty=Tensor[(3360), float64] */, dtype="float64") /* ty=Tensor[(3360), float64] */;
  %276 = cast(meta[relay.Constant][14] /* ty=Tensor[(546), float32] */, dtype="float32") /* ty=Tensor[(546), float32] */;
  %277 = cast(meta[relay.Constant][15] /* ty=Tensor[(96), float64] */, dtype="float64") /* ty=Tensor[(96), float64] */;
  %278 = reshape(%275, newshape=[420, 8]) /* ty=Tensor[(420, 8), float64] */;
  %279 = reshape(%276, newshape=[546]) /* ty=Tensor[(546), float32] */;
  %280 = reshape(%277, newshape=[96]) /* ty=Tensor[(96), float64] */;
  %281 = @func_3518(%278, %279, %280) /* ty=(Tensor[(7, 10, 13), float32], Tensor[(7, 10, 13), float32], Tensor[(7, 10, 13), float32], Tensor[(24, 1), float32], Tensor[(420, 8), float64], Tensor[(546), float32], Tensor[(96), float64], bool, Tensor[(7, 10, 13), float64], Tensor[(280), float32]) */;
  %282 = @func_1502() /* ty=(Tensor[(7, 10, 13), float64],) */;
  %283 = %273.0;
  %284 = %274.0;
  %285 = %281.6;
  %286 = %282.0;
  (%283, %284, %285, meta[relay.Constant][13] /* ty=Tensor[(3360), float64] */, meta[relay.Constant][14] /* ty=Tensor[(546), float32] */, meta[relay.Constant][15] /* ty=Tensor[(96), float64] */, %286)
}

def @main() -> (Tensor[(2, 9, 11), float64],) {
  %287 = @func_7855() /* ty=(bool, Tensor[(2, 9, 11), float64], Tensor[(198), uint8]) */;
  %288 = %287.1;
  %289 = cast(%288, dtype="float64") /* ty=Tensor[(2, 9, 11), float64] */;
  %290 = tan(%289) /* ty=Tensor[(2, 9, 11), float64] */;
  (%290,)
}

def @func_2026() -> (bool, Tensor[(7, 10, 13), float64]) {
  %291 = @func_1858() /* ty=(Tensor[(7, 10, 13), float64], Tensor[(7, 10, 13), float32]) */;
  %292 = %291.0;
  %293 = cast(%292, dtype="float64") /* ty=Tensor[(7, 10, 13), float64] */;
  %294 = @func_1694() /* ty=bool */;
  %295 = log10(%293) /* ty=Tensor[(7, 10, 13), float64] */;
  (%294, %295)
}

def @func_10099(%var_10069: Tensor[(14, 4, 3), int32], %var_10070: Tensor[(14, 4, 3), int32]) -> (Tensor[(14, 4, 3), int32], Tensor[(7, 10, 13), float64], Tensor[(7, 10, 13), float64], Tensor[(910), float32]) {
  %296 = cast(%var_10070, dtype="int32") /* ty=Tensor[(14, 4, 3), int32] */;
  %297 = shape_of(%var_10069, dtype="int32") /* ty=Tensor[(3), int32] */;
  %298 = cast(%var_10069, dtype="int32") /* ty=Tensor[(14, 4, 3), int32] */;
  %299 = dyn.reshape(%296, %297, newshape=[]) /* ty=Tensor[(?, ?, ?), int32] */;
  %300 = @func_2787() /* ty=(Tensor[(7, 10, 13), float64],) */;
  %301 = @func_8657() /* ty=(bool, Tensor[(7, 10, 13), float64], Tensor[(7, 10, 13), float64]) */;
  %302 = @func_1761() /* ty=(bool, Tensor[(7, 10, 13), float64], Tensor[(910), float32]) */;
  %303 = add(%298, %299) /* ty=Tensor[(14, 4, 3), int32] */;
  %304 = %300.0;
  %305 = %301.1;
  %306 = %302.2;
  (%303, %304, %305, %306)
}

def @func_4112() -> bool {
  @func_3809() /* ty=bool */
}

def @func_8531() -> (Tensor[(7, 10, 13), float32],) {
  %307 = @func_5818() /* ty=(Tensor[(7, 10, 13), float32],) */;
  %308 = %307.0;
  (%308,)
}

def @func_10771() -> Tensor[(7, 10, 13), float64] {
  %309 = @func_7423() /* ty=(Tensor[(7, 10, 13), float64], Tensor[(7, 10, 13), float64]) */;
  %309.1
}

def @func_2145(%var_2069: uint8, %var_2070: Tensor[(7, 5, 12), uint8], %var_2093: Tensor[(1, 546), float32], %var_2094: Tensor[(24), float32]) -> (Tensor[(7, 5, 12), uint8], Tensor[(7, 5, 12), uint16], Tensor[(4, 8, 6), float32], Tensor[(96), float64], Tensor[(24), float32], Tensor[(192), int8], Tensor[(1, 546), int32], bool, Tensor[(7, 10, 13), float64], Tensor[(910), float32]) {
  %310 = cast(%var_2069, dtype="uint8") /* ty=uint8 */;
  %311 = cast(%var_2070, dtype="uint8") /* ty=Tensor[(7, 5, 12), uint8] */;
  %312 = cast(%var_2069, dtype="uint16") /* ty=uint16 */;
  %313 = cast(%var_2070, dtype="uint16") /* ty=Tensor[(7, 5, 12), uint16] */;
  %314 = cast(meta[relay.Constant][16] /* ty=Tensor[(96), float64] */, dtype="float64") /* ty=Tensor[(96), float64] */;
  %315 = cast(%var_2093, dtype="float32") /* ty=Tensor[(1, 546), float32] */;
  %316 = cast(%var_2094, dtype="float32") /* ty=Tensor[(24), float32] */;
  %317 = cast(meta[relay.Constant][17] /* ty=Tensor[(192), int8] */, dtype="int8") /* ty=Tensor[(192), int8] */;
  %318 = reshape(%314, newshape=[16, 2, 3]) /* ty=Tensor[(16, 2, 3), float64] */;
  %319 = reshape(%315, newshape=[546]) /* ty=Tensor[(546), float32] */;
  %320 = reshape(%316, newshape=[12, 2]) /* ty=Tensor[(12, 2), float32] */;
  %321 = reshape(%317, newshape=[192]) /* ty=Tensor[(192), int8] */;
  %322 = @func_842(%318, %319, %320, %321) /* ty=(Tensor[(16, 2, 3), float64], Tensor[(4, 8, 6), float32], Tensor[(546), float32], Tensor[(12, 2), float32], Tensor[(192), int8], Tensor[(6, 4), float32]) */;
  %323 = @func_2026() /* ty=(bool, Tensor[(7, 10, 13), float64]) */;
  %324 = %323.0;
  %325 = cast(%var_2093, dtype="int32") /* ty=Tensor[(1, 546), int32] */;
  %326 = cast(%324, dtype="int32") /* ty=int32 */;
  %327 = @func_1426() /* ty=(Tensor[(7, 10, 13), float32], Tensor[(1, 4), bool], bool) */;
  %328 = cast(meta[relay.Constant][18] /* ty=Tensor[(910), float32] */, dtype="float32") /* ty=Tensor[(910), float32] */;
  %329 = reshape(%328, newshape=[7, 10, 13]) /* ty=Tensor[(7, 10, 13), float32] */;
  %330 = @func_1657(%329) /* ty=(Tensor[(7, 10, 13), float64],) */;
  %331 = multiply(%310, %311) /* ty=Tensor[(7, 5, 12), uint8] */;
  %332 = bitwise_and(%312, %313) /* ty=Tensor[(7, 5, 12), uint16] */;
  %333 = %322.1;
  %334 = bitwise_xor(%325, %326) /* ty=Tensor[(1, 546), int32] */;
  %335 = %327.2;
  %336 = %330.0;
  (%331, %332, %333, meta[relay.Constant][16] /* ty=Tensor[(96), float64] */, %var_2094, meta[relay.Constant][17] /* ty=Tensor[(192), int8] */, %334, %335, %336, meta[relay.Constant][18] /* ty=Tensor[(910), float32] */)
}

def @func_1318() -> (Tensor[(7, 10, 13), float32], Tensor[(7, 10, 13), float32]) {
  %337 = @func_1232() /* ty=(Tensor[(7, 10, 13), float32],) */;
  %338 = @func_1232() /* ty=(Tensor[(7, 10, 13), float32],) */;
  %339 = %337.0;
  %340 = %338.0;
  (%339, %340)
}

def @func_8179() -> (Tensor[(7, 10, 13), float32], Tensor[(7, 10, 13), float64], Tensor[(7, 10, 13), float64], bool, Tensor[(10, 16, 3), float64], Tensor[(480), float64], bool) {
  %341 = @func_1318() /* ty=(Tensor[(7, 10, 13), float32], Tensor[(7, 10, 13), float32]) */;
  %342 = @func_7423() /* ty=(Tensor[(7, 10, 13), float64], Tensor[(7, 10, 13), float64]) */;
  %343 = @func_1502() /* ty=(Tensor[(7, 10, 13), float64],) */;
  %344 = @func_5628() /* ty=(bool,) */;
  %345 = cast(meta[relay.Constant][19] /* ty=Tensor[(480), float64] */, dtype="float64") /* ty=Tensor[(480), float64] */;
  %346 = reshape(%345, newshape=[10, 16, 3]) /* ty=Tensor[(10, 16, 3), float64] */;
  %347 = %341.1;
  %348 = %342.0;
  %349 = %343.0;
  %350 = %344.0;
  %351 = @func_4815(%346) /* ty=Tensor[(10, 16, 3), float64] */;
  %352 = @func_2272() /* ty=bool */;
  (%347, %348, %349, %350, %351, meta[relay.Constant][19] /* ty=Tensor[(480), float64] */, %352)
}

def @func_4701() -> Tensor[(7, 10, 13), float64] {
  @func_1704() /* ty=Tensor[(7, 10, 13), float64] */
}

def @func_3518(%var_3485: Tensor[(420, 8), float64], %var_3486: Tensor[(546), float32], %var_3487: Tensor[(96), float64]) -> (Tensor[(7, 10, 13), float32], Tensor[(7, 10, 13), float32], Tensor[(7, 10, 13), float32], Tensor[(24, 1), float32], Tensor[(420, 8), float64], Tensor[(546), float32], Tensor[(96), float64], bool, Tensor[(7, 10, 13), float64], Tensor[(280), float32]) {
  %353 = @func_1858() /* ty=(Tensor[(7, 10, 13), float64], Tensor[(7, 10, 13), float32]) */;
  %354 = @func_1318() /* ty=(Tensor[(7, 10, 13), float32], Tensor[(7, 10, 13), float32]) */;
  %355 = @func_2048() /* ty=(Tensor[(7, 10, 13), float32], Tensor[(7, 10, 13), float64]) */;
  %356 = cast(%var_3485, dtype="float64") /* ty=Tensor[(420, 8), float64] */;
  %357 = cast(%var_3486, dtype="float32") /* ty=Tensor[(546), float32] */;
  %358 = cast(%var_3487, dtype="float64") /* ty=Tensor[(96), float64] */;
  %359 = reshape(%356, newshape=[840, 4]) /* ty=Tensor[(840, 4), float64] */;
  %360 = reshape(%357, newshape=[546]) /* ty=Tensor[(546), float32] */;
  %361 = reshape(%358, newshape=[96]) /* ty=Tensor[(96), float64] */;
  %362 = @func_2754(%359, %360, %361) /* ty=(Tensor[(7, 10, 13), float64], Tensor[(7, 10, 13), float64], Tensor[(50, 6), float32], Tensor[(840, 4), float64], Tensor[(10, 30), float32], Tensor[(24, 1), float32], bool, Tensor[(420), uint8], Tensor[(546), float32], Tensor[(6, 4), float32], Tensor[(96), float64], Tensor[(24, 8), int8], Tensor[(7, 10, 13), float64], bool) */;
  %363 = @func_2572() /* ty=(bool,) */;
  %364 = %362.5;
  %365 = cast(%364, dtype="float32") /* ty=Tensor[(24, 1), float32] */;
  %366 = cast(meta[relay.Constant][20] /* ty=Tensor[(280), float32] */, dtype="float32") /* ty=Tensor[(280), float32] */;
  %367 = reshape(%365, newshape=[24]) /* ty=Tensor[(24), float32] */;
  %368 = reshape(%366, newshape=[280]) /* ty=Tensor[(280), float32] */;
  %369 = @func_3129(%367, %368) /* ty=(Tensor[(7, 10, 13), float64], Tensor[(280), float32], Tensor[(192), int8], Tensor[(24, 8), float32], Tensor[(4, ?, 6), bool]) */;
  %370 = %353.1;
  %371 = %354.0;
  %372 = %355.0;
  %373 = %363.0;
  %374 = %369.0;
  (%370, %371, %372, %364, %var_3485, %var_3486, %var_3487, %373, %374, meta[relay.Constant][20] /* ty=Tensor[(280), float32] */)
}

def @func_10987() -> (bool,) {
  %375 = @func_9895() /* ty=(bool,) */;
  %376 = %375.0;
  (%376,)
}

def @func_7221(%var_7213: Tensor[(8, 12), float64], %var_7215: Tensor[(24), float32]) -> (bool, Tensor[(7, 10, 13), float64], Tensor[(192), int8], Tensor[(8, 12), float64], Tensor[(91, 6), float32], Tensor[(24), float32], Tensor[(192), int8]) {
  %377 = @func_6063() /* ty=(bool,) */;
  %378 = @func_5010() /* ty=(Tensor[(7, 10, 13), float64],) */;
  %379 = cast(%var_7213, dtype="float64") /* ty=Tensor[(8, 12), float64] */;
  %380 = cast(meta[relay.Constant][21] /* ty=Tensor[(91, 6), float32] */, dtype="float32") /* ty=Tensor[(91, 6), float32] */;
  %381 = cast(%var_7215, dtype="float32") /* ty=Tensor[(24), float32] */;
  %382 = cast(meta[relay.Constant][22] /* ty=Tensor[(192), int8] */, dtype="int8") /* ty=Tensor[(192), int8] */;
  %383 = reshape(%379, newshape=[16, 2, 3]) /* ty=Tensor[(16, 2, 3), float64] */;
  %384 = reshape(%380, newshape=[546]) /* ty=Tensor[(546), float32] */;
  %385 = reshape(%381, newshape=[12, 2]) /* ty=Tensor[(12, 2), float32] */;
  %386 = reshape(%382, newshape=[192]) /* ty=Tensor[(192), int8] */;
  %387 = @func_842(%383, %384, %385, %386) /* ty=(Tensor[(16, 2, 3), float64], Tensor[(4, 8, 6), float32], Tensor[(546), float32], Tensor[(12, 2), float32], Tensor[(192), int8], Tensor[(6, 4), float32]) */;
  %388 = %377.0;
  %389 = %378.0;
  %390 = %387.4;
  (%388, %389, %390, %var_7213, meta[relay.Constant][21] /* ty=Tensor[(91, 6), float32] */, %var_7215, meta[relay.Constant][22] /* ty=Tensor[(192), int8] */)
}

def @func_1232() -> (Tensor[(7, 10, 13), float32],) {
  %391 = cast(meta[relay.Constant][23] /* ty=Tensor[(7, 10, 13), float32] */, dtype="float32") /* ty=Tensor[(7, 10, 13), float32] */;
  %392 = asin(%391) /* ty=Tensor[(7, 10, 13), float32] */;
  (%392,)
}

def @func_6091() -> Tensor[(7, 10, 13), float64] {
  %393 = @func_4407() /* ty=(Tensor[(7, 10, 13), float64], Tensor[(7, 10, 13), float64]) */;
  %393.0
}

def @func_11304() -> (Tensor[(24), float32], Tensor[(300, 1), float64]) {
  %394 = @func_3682() /* ty=(bool, Tensor[(4, ?, 6), int8], Tensor[(24), float32], Tensor[(7, 10, 13), float32], Tensor[(7, 10, 13), float32], Tensor[(910), float32]) */;
  %395 = @func_10350() /* ty=Tensor[(300, 1), float32] */;
  %396 = cast(%395, dtype="float64") /* ty=Tensor[(300, 1), float64] */;
  %397 = %394.2;
  %398 = cos(%396) /* ty=Tensor[(300, 1), float64] */;
  (%397, %398)
}

def @func_7563() -> (Tensor[(7, 10, 13), float64],) {
  %399 = @func_4407() /* ty=(Tensor[(7, 10, 13), float64], Tensor[(7, 10, 13), float64]) */;
  %400 = %399.1;
  (%400,)
}

def @func_9843(%var_9827: Tensor[(280), float32], %var_9828: Tensor[(192), int8], %var_9841: Tensor[(360), uint64]) -> (Tensor[(7, 10, 13), float64], Tensor[(7, 10, 13), float64], Tensor[(378), float64], Tensor[(24, 8), int8], Tensor[(280), float32], Tensor[(192), int8], bool, bool, Tensor[(360), uint64]) {
  %401 = @func_5177() /* ty=(Tensor[(7, 10, 13), float64], bool, Tensor[(96), float64], Tensor[(3360), float64], Tensor[(546), float32], Tensor[(96), float64], Tensor[(7, 10, 13), float64]) */;
  %402 = cast(meta[relay.Constant][24] /* ty=Tensor[(378), float64] */, dtype="float64") /* ty=Tensor[(378), float64] */;
  %403 = reshape(%402, newshape=[378]) /* ty=Tensor[(378), float64] */;
  %404 = @func_9719(%403) /* ty=(Tensor[(7, 10, 13), float32], Tensor[(9, 14, 3), float64], Tensor[(378), float64], Tensor[(7, 10, 13), float64], Tensor[(7, 10, 13), float64], Tensor[(7, 10, 13), float64], Tensor[(16, 3, 12), bool]) */;
  %405 = cast(%var_9827, dtype="float32") /* ty=Tensor[(280), float32] */;
  %406 = cast(%var_9828, dtype="int8") /* ty=Tensor[(192), int8] */;
  %407 = reshape(%405, newshape=[8, 7, 5]) /* ty=Tensor[(8, 7, 5), float32] */;
  %408 = reshape(%406, newshape=[24, 8]) /* ty=Tensor[(24, 8), int8] */;
  %409 = @func_2620(%407, %408) /* ty=(Tensor[(8, 7, 5), int16], Tensor[(7, 10, 13), float32], Tensor[(12, 2), float32], Tensor[(96), float64], Tensor[(546), float32], Tensor[(6, 4), float32], Tensor[(24, 8), int8], Tensor[(12, 2), float32], Tensor[(7, 10, 13), float32]) */;
  %410 = cast(%var_9841, dtype="uint64") /* ty=Tensor[(360), uint64] */;
  %411 = cast(%var_9841, dtype="uint64") /* ty=Tensor[(360), uint64] */;
  %412 = reshape(%410, newshape=[10, 6, 6]) /* ty=Tensor[(10, 6, 6), uint64] */;
  %413 = reshape(%411, newshape=[10, 6, 6]) /* ty=Tensor[(10, 6, 6), uint64] */;
  %414 = @func_3894(%412, %413) /* ty=(Tensor[(10, 6, 6), bool], Tensor[(10, 6, 6), float32], bool, Tensor[(7, 10, 13), float64], Tensor[(7, 12, 6), float64]) */;
  %415 = %401.6;
  %416 = %404.5;
  %417 = %409.6;
  %418 = @func_3230() /* ty=bool */;
  %419 = %414.2;
  (%415, %416, meta[relay.Constant][24] /* ty=Tensor[(378), float64] */, %417, %var_9827, %var_9828, %418, %419, %var_9841)
}

def @func_9329() -> (Tensor[(7, 10, 13), float32], Tensor[(24), float32], Tensor[(7, 12, 6), uint32]) {
  %420 = @func_8531() /* ty=(Tensor[(7, 10, 13), float32],) */;
  %421 = @func_5294() /* ty=(Tensor[(1, 4), bool], Tensor[(7, 10, 13), float64], Tensor[(14, 15, 16), float64], Tensor[(3360), float64], Tensor[(300, 1), float32], Tensor[(24), float32]) */;
  %422 = @func_8238() /* ty=(Tensor[(7, 10, 13), float64], Tensor[(7, 12, 6), uint32], Tensor[(16), bool]) */;
  %423 = %420.0;
  %424 = %421.5;
  %425 = %422.1;
  (%423, %424, %425)
}

def @func_4277() -> Tensor[(7, 10, 13), float64] {
  %426 = @func_2026() /* ty=(bool, Tensor[(7, 10, 13), float64]) */;
  %426.1
}

def @func_4083(%var_4053: Tensor[(16, 5, 12), int64], %var_4054: Tensor[(16, 5, 12), int64], %var_4075: Tensor[(16, 5, 12), int64]) -> (Tensor[(16, 5, 12), bool], Tensor[(16, 5, 12), uint16], bool) {
  %427 = cast(%var_4054, dtype="bool") /* ty=Tensor[(16, 5, 12), bool] */;
  %428 = shape_of(%var_4053, dtype="int32") /* ty=Tensor[(3), int32] */;
  %429 = cast(%var_4053, dtype="bool") /* ty=Tensor[(16, 5, 12), bool] */;
  %430 = dyn.reshape(%427, %428, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %431 = cast(%var_4075, dtype="uint16") /* ty=Tensor[(16, 5, 12), uint16] */;
  %432 = shape_of(%var_4053, dtype="int32") /* ty=Tensor[(3), int32] */;
  %433 = cast(%var_4053, dtype="uint16") /* ty=Tensor[(16, 5, 12), uint16] */;
  %434 = dyn.reshape(%431, %432, newshape=[]) /* ty=Tensor[(?, ?, ?), uint16] */;
  %435 = @func_2572() /* ty=(bool,) */;
  %436 = greater_equal(%429, %430) /* ty=Tensor[(16, 5, 12), bool] */;
  %437 = minimum(%433, %434) /* ty=Tensor[(16, 5, 12), uint16] */;
  %438 = %435.0;
  (%436, %437, %438)
}

def @func_10054(%var_9950: Tensor[(99, 2), uint8], %var_10028: Tensor[(24), float32]) -> (Tensor[(7, 10, 13), float64], bool, Tensor[(2, 9, 11), float64], Tensor[(99, 2), uint8], Tensor[(1001), uint32], Tensor[(24), float32], Tensor[(7, 10, 13), float32], Tensor[(24), int8]) {
  %439 = @func_1761() /* ty=(bool, Tensor[(7, 10, 13), float64], Tensor[(910), float32]) */;
  %440 = cast(%var_9950, dtype="uint8") /* ty=Tensor[(99, 2), uint8] */;
  %441 = cast(%var_9950, dtype="uint8") /* ty=Tensor[(99, 2), uint8] */;
  %442 = reshape(%440, newshape=[2, 9, 11]) /* ty=Tensor[(2, 9, 11), uint8] */;
  %443 = reshape(%441, newshape=[2, 9, 11]) /* ty=Tensor[(2, 9, 11), uint8] */;
  %444 = @func_8743() /* ty=(Tensor[(1001), uint32],) */;
  %445 = @func_9329() /* ty=(Tensor[(7, 10, 13), float32], Tensor[(24), float32], Tensor[(7, 12, 6), uint32]) */;
  %446 = @func_1318() /* ty=(Tensor[(7, 10, 13), float32], Tensor[(7, 10, 13), float32]) */;
  %447 = @func_3682() /* ty=(bool, Tensor[(4, ?, 6), int8], Tensor[(24), float32], Tensor[(7, 10, 13), float32], Tensor[(7, 10, 13), float32], Tensor[(910), float32]) */;
  %448 = %447.2;
  %449 = cast(%var_10028, dtype="int8") /* ty=Tensor[(24), int8] */;
  %450 = shape_of(%448, dtype="int32") /* ty=Tensor[(1), int32] */;
  %451 = cast(%448, dtype="int8") /* ty=Tensor[(24), int8] */;
  %452 = dyn.reshape(%449, %450, newshape=[]) /* ty=Tensor[(?), int8] */;
  %453 = %439.1;
  %454 = @func_3230() /* ty=bool */;
  %455 = @func_3968(%442, %443) /* ty=Tensor[(2, 9, 11), float64] */;
  %456 = %444.0;
  %457 = %445.1;
  %458 = %446.1;
  %459 = bitwise_xor(%451, %452) /* ty=Tensor[(24), int8] */;
  (%453, %454, %455, %var_9950, %456, %457, %458, %459)
}

def @func_3950() -> (bool, Tensor[(7, 10, 13), float64], Tensor[(7, 10, 13), float32]) {
  %460 = @func_3682() /* ty=(bool, Tensor[(4, ?, 6), int8], Tensor[(24), float32], Tensor[(7, 10, 13), float32], Tensor[(7, 10, 13), float32], Tensor[(910), float32]) */;
  %461 = @func_2048() /* ty=(Tensor[(7, 10, 13), float32], Tensor[(7, 10, 13), float64]) */;
  %462 = @func_1318() /* ty=(Tensor[(7, 10, 13), float32], Tensor[(7, 10, 13), float32]) */;
  %463 = %460.0;
  %464 = %461.1;
  %465 = %462.1;
  (%463, %464, %465)
}

def @func_8355() -> (Tensor[(96), float64], Tensor[(7, 10, 13), float64], Tensor[(910), float32]) {
  %466 = @func_5177() /* ty=(Tensor[(7, 10, 13), float64], bool, Tensor[(96), float64], Tensor[(3360), float64], Tensor[(546), float32], Tensor[(96), float64], Tensor[(7, 10, 13), float64]) */;
  %467 = cast(meta[relay.Constant][25] /* ty=Tensor[(910), float32] */, dtype="float32") /* ty=Tensor[(910), float32] */;
  %468 = reshape(%467, newshape=[7, 10, 13]) /* ty=Tensor[(7, 10, 13), float32] */;
  %469 = @func_1657(%468) /* ty=(Tensor[(7, 10, 13), float64],) */;
  %470 = %466.2;
  %471 = %469.0;
  (%470, %471, meta[relay.Constant][25] /* ty=Tensor[(910), float32] */)
}

def @func_5901() -> Tensor[(7, 10, 13), float64] {
  @func_5421() /* ty=Tensor[(7, 10, 13), float64] */
}

def @func_10485() -> (Tensor[(1, 4), bool],) {
  %472 = @func_2912() /* ty=(Tensor[(7, 10, 13), float64], Tensor[(1, 4), bool]) */;
  %473 = %472.1;
  (%473,)
}

def @func_9338() -> Tensor[(15, 5, 3), int16] {
  %474 = cast(meta[relay.Constant][26] /* ty=int16 */, dtype="int16") /* ty=int16 */;
  %475 = cast(meta[relay.Constant][27] /* ty=Tensor[(15, 5, 3), int16] */, dtype="int16") /* ty=Tensor[(15, 5, 3), int16] */;
  bitwise_xor(%474, %475) /* ty=Tensor[(15, 5, 3), int16] */
}

def @func_8743() -> (Tensor[(1001), uint32],) {
  %476 = @func_7097() /* ty=(bool, Tensor[(7, 10, 13), float32], Tensor[(7, 10, 13), float32], Tensor[(1001), float32], Tensor[(4, 4), bool]) */;
  %477 = %476.3;
  %478 = @func_6063() /* ty=(bool,) */;
  %479 = %478.0;
  %480 = cast(%477, dtype="bool") /* ty=Tensor[(1001), bool] */;
  %481 = cast(%479, dtype="bool") /* ty=bool */;
  %482 = logical_or(%480, %481) /* ty=Tensor[(1001), bool] */;
  %483 = cast(%482, dtype="uint32") /* ty=Tensor[(1001), uint32] */;
  %484 = cast(%479, dtype="uint32") /* ty=uint32 */;
  %485 = minimum(%483, %484) /* ty=Tensor[(1001), uint32] */;
  (%485,)
}

def @func_11324() -> Tensor[(7, 10, 13), float32] {
  %486 = @func_5818() /* ty=(Tensor[(7, 10, 13), float32],) */;
  %486.0
}

def @func_12598(%var_12572: Tensor[(546), float32], %var_12573: Tensor[(48, 4), int8]) -> (Tensor[(15, 5, 3), int16], Tensor[(546), float32], Tensor[(48, 4), int8]) {
  %487 = cast(%var_12572, dtype="float32") /* ty=Tensor[(546), float32] */;
  %488 = cast(%var_12573, dtype="int8") /* ty=Tensor[(48, 4), int8] */;
  %489 = reshape(%487, newshape=[546]) /* ty=Tensor[(546), float32] */;
  %490 = reshape(%488, newshape=[192]) /* ty=Tensor[(192), int8] */;
  %491 = @func_4236(%489, %490) /* ty=(Tensor[(7, 10, 13), float32], Tensor[(7, 10, 13), float32], Tensor[(4, 8, 6), float32], Tensor[(546), float32], Tensor[(24), float32], Tensor[(192), int8]) */;
  %492 = %491.2;
  %493 = cast(%492, dtype="int8") /* ty=Tensor[(4, 8, 6), int8] */;
  %494 = shape_of(%var_12573, dtype="int32") /* ty=Tensor[(2), int32] */;
  %495 = cast(%var_12573, dtype="int8") /* ty=Tensor[(48, 4), int8] */;
  %496 = dyn.reshape(%493, %494, newshape=[]) /* ty=Tensor[(?, ?), int8] */;
  %497 = @func_9338() /* ty=Tensor[(15, 5, 3), int16] */;
  %498 = maximum(%495, %496) /* ty=Tensor[(48, 4), int8] */;
  (%497, %var_12572, %498)
}

def @func_10688() -> bool {
  %499 = @func_7872() /* ty=(bool, bool) */;
  %499.0
}

def @func_12447() -> (Tensor[(7, 10, 13), float32], Tensor[(7, 10, 13), float32]) {
  %500 = @func_11760() /* ty=(Tensor[(7, 10, 13), float32], bool) */;
  %501 = %500.0;
  %502 = @func_7819() /* ty=Tensor[(7, 10, 13), float32] */;
  (%501, %502)
}

def @func_12821() -> (Tensor[(7, 10, 13), float32], Tensor[(910), float32], Tensor[(7, 10, 13), float64], Tensor[(198), uint8]) {
  %503 = @func_1426() /* ty=(Tensor[(7, 10, 13), float32], Tensor[(1, 4), bool], bool) */;
  %504 = @func_7899() /* ty=(Tensor[(910), float32],) */;
  %505 = @func_5294() /* ty=(Tensor[(1, 4), bool], Tensor[(7, 10, 13), float64], Tensor[(14, 15, 16), float64], Tensor[(3360), float64], Tensor[(300, 1), float32], Tensor[(24), float32]) */;
  %506 = @func_6248() /* ty=(Tensor[(7, 10, 13), float64], Tensor[(2, 9, 11), float64], Tensor[(198), uint8]) */;
  %507 = %503.0;
  %508 = %504.0;
  %509 = %505.1;
  %510 = %506.2;
  (%507, %508, %509, %510)
}

def @func_9585() -> (Tensor[(7, 10, 13), float64], Tensor[(7, 10, 13), float64], Tensor[(2, 1680), float64], Tensor[(3360), float64], Tensor[(546), float32], Tensor[(96), float64]) {
  %511 = cast(meta[relay.Constant][28] /* ty=Tensor[(3360), float64] */, dtype="float64") /* ty=Tensor[(3360), float64] */;
  %512 = cast(meta[relay.Constant][29] /* ty=Tensor[(546), float32] */, dtype="float32") /* ty=Tensor[(546), float32] */;
  %513 = cast(meta[relay.Constant][30] /* ty=Tensor[(96), float64] */, dtype="float64") /* ty=Tensor[(96), float64] */;
  %514 = reshape(%511, newshape=[2, 1680]) /* ty=Tensor[(2, 1680), float64] */;
  %515 = reshape(%512, newshape=[546]) /* ty=Tensor[(546), float32] */;
  %516 = reshape(%513, newshape=[96]) /* ty=Tensor[(96), float64] */;
  %517 = @func_4779(%514, %515, %516) /* ty=(Tensor[(7, 10, 13), float32], bool, Tensor[(24, 1), float32], Tensor[(2, 1680), float64], Tensor[(546), float32], Tensor[(96), float64]) */;
  %518 = @func_5917() /* ty=Tensor[(7, 10, 13), float64] */;
  %519 = @func_5901() /* ty=Tensor[(7, 10, 13), float64] */;
  %520 = %517.3;
  (%518, %519, %520, meta[relay.Constant][28] /* ty=Tensor[(3360), float64] */, meta[relay.Constant][29] /* ty=Tensor[(546), float32] */, meta[relay.Constant][30] /* ty=Tensor[(96), float64] */)
}

def @func_5839() -> (bool,) {
  %521 = @func_4312() /* ty=(bool,) */;
  %522 = %521.0;
  (%522,)
}

def @func_6503() -> (Tensor[(1, 4), bool], Tensor[(1, 4), bool], Tensor[(7, 10, 13), float32]) {
  %523 = @func_4196() /* ty=(Tensor[(1, 4), bool],) */;
  %524 = @func_1426() /* ty=(Tensor[(7, 10, 13), float32], Tensor[(1, 4), bool], bool) */;
  %525 = @func_5818() /* ty=(Tensor[(7, 10, 13), float32],) */;
  %526 = %523.0;
  %527 = %524.1;
  %528 = %525.0;
  (%526, %527, %528)
}

def @func_2530() -> (Tensor[(7, 10, 13), float32],) {
  %529 = @func_1426() /* ty=(Tensor[(7, 10, 13), float32], Tensor[(1, 4), bool], bool) */;
  %530 = %529.0;
  (%530,)
}

def @func_11579() -> (Tensor[(7, 10, 13), float64], Tensor[(96), float64]) {
  %531 = @func_7920() /* ty=(Tensor[(11, 15, 9), float32], Tensor[(7, 10, 13), float64]) */;
  %532 = %531.1;
  %533 = @func_9915() /* ty=Tensor[(96), float64] */;
  (%532, %533)
}

def @func_2787() -> (Tensor[(7, 10, 13), float64],) {
  %534 = @func_1797() /* ty=(Tensor[(7, 10, 13), float64],) */;
  %535 = %534.0;
  (%535,)
}

def @func_7162(%var_7133: Tensor[(1, 4, 3), uint64]) -> (Tensor[(7, 10, 13), float64], Tensor[(?, 4, 3), bool]) {
  %536 = @func_5696() /* ty=(Tensor[(7, 10, 13), float64], Tensor[(7, 10, 13), float64]) */;
  %537 = cast(meta[relay.Constant][31] /* ty=Tensor[(1, 4, 3), uint64] */, dtype="bool") /* ty=Tensor[(1, 4, 3), bool] */;
  %538 = shape_of(%var_7133, dtype="int32") /* ty=Tensor[(3), int32] */;
  %539 = cast(%var_7133, dtype="bool") /* ty=Tensor[(1, 4, 3), bool] */;
  %540 = dyn.reshape(%537, %538, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %541 = equal(%539, %540) /* ty=Tensor[(?, 4, 3), bool] */;
  %542 = cast(%541, dtype="bool") /* ty=Tensor[(?, 4, 3), bool] */;
  %543 = shape_of(%var_7133, dtype="int32") /* ty=Tensor[(3), int32] */;
  %544 = cast(%var_7133, dtype="bool") /* ty=Tensor[(1, 4, 3), bool] */;
  %545 = dyn.reshape(%542, %543, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %546 = not_equal(%544, %545) /* ty=Tensor[(?, 4, 3), bool] */;
  %547 = @func_4848() /* ty=(Tensor[(1, 4), bool], bool) */;
  %548 = %547.1;
  %549 = cast(%546, dtype="bool") /* ty=Tensor[(?, 4, 3), bool] */;
  %550 = cast(%548, dtype="bool") /* ty=bool */;
  %551 = %536.1;
  %552 = logical_or(%549, %550) /* ty=Tensor[(?, 4, 3), bool] */;
  (%551, %552)
}

def @func_9895() -> (bool,) {
  %553 = @func_7872() /* ty=(bool, bool) */;
  %554 = %553.1;
  (%554,)
}

def @func_5917() -> Tensor[(7, 10, 13), float64] {
  @func_1704() /* ty=Tensor[(7, 10, 13), float64] */
}

def @func_10570(%var_10538: Tensor[(1, 12, 4), float64], %var_10539: Tensor[(14, 12, 4), float64]) -> (Tensor[(14, 12, 4), float64], Tensor[(14, 12, 4), bool]) {
  %555 = cast(%var_10538, dtype="float64") /* ty=Tensor[(1, 12, 4), float64] */;
  %556 = cast(%var_10539, dtype="float64") /* ty=Tensor[(14, 12, 4), float64] */;
  %557 = cast(%var_10539, dtype="float32") /* ty=Tensor[(14, 12, 4), float32] */;
  %558 = atan(%557) /* ty=Tensor[(14, 12, 4), float32] */;
  %559 = cast(%var_10539, dtype="float32") /* ty=Tensor[(14, 12, 4), float32] */;
  %560 = acosh(%559) /* ty=Tensor[(14, 12, 4), float32] */;
  %561 = cast(%560, dtype="bool") /* ty=Tensor[(14, 12, 4), bool] */;
  %562 = shape_of(%558, dtype="int32") /* ty=Tensor[(3), int32] */;
  %563 = cast(%558, dtype="bool") /* ty=Tensor[(14, 12, 4), bool] */;
  %564 = dyn.reshape(%561, %562, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %565 = mod(%555, %556) /* ty=Tensor[(14, 12, 4), float64] */;
  %566 = greater_equal(%563, %564) /* ty=Tensor[(14, 12, 4), bool] */;
  (%565, %566)
}

def @func_7481(%var_7462: Tensor[(16), bool]) -> (Tensor[(2, 5, 16), float32], bool, bool, Tensor[(16), bool]) {
  %567 = @func_6287() /* ty=(Tensor[(2, 5, 16), float32], Tensor[(2, 5, 16), float32]) */;
  %568 = @func_6633() /* ty=(Tensor[(1, 4), bool], bool) */;
  %569 = cast(%var_7462, dtype="bool") /* ty=Tensor[(16), bool] */;
  %570 = reshape(%569, newshape=[16]) /* ty=Tensor[(16), bool] */;
  %571 = @func_6203(%570) /* ty=(bool, bool, Tensor[(7, 10, 13), float64], Tensor[(1, 4), bool], Tensor[(11, 7, 13), float32], Tensor[(16), bool], Tensor[(7, 12, 6), uint32]) */;
  %572 = %567.0;
  %573 = %568.1;
  %574 = %571.0;
  (%572, %573, %574, %var_7462)
}

def @func_12361(%var_12312: Tensor[(6, 6, 3), float64], %var_12313: Tensor[(6, 6, 3), float64], %var_12337: Tensor[(280), float32], %var_12353: Tensor[(1001), float32]) -> (Tensor[(6, 6, 3), float64], bool, Tensor[(8, 2), bool], Tensor[(192), int8], Tensor[(280), float32], Tensor[(7, 10, 13), float64], Tensor[(36), float32], Tensor[(1001), bool], Tensor[(7, 10, 13), float32]) {
  %575 = cast(%var_12313, dtype="float64") /* ty=Tensor[(6, 6, 3), float64] */;
  %576 = shape_of(%var_12312, dtype="int32") /* ty=Tensor[(3), int32] */;
  %577 = cast(%var_12312, dtype="float64") /* ty=Tensor[(6, 6, 3), float64] */;
  %578 = dyn.reshape(%575, %576, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %579 = cast(%var_12337, dtype="float32") /* ty=Tensor[(280), float32] */;
  %580 = reshape(%579, newshape=[280]) /* ty=Tensor[(280), float32] */;
  %581 = @func_10854(%580) /* ty=(Tensor[(7, 10, 13), float32], Tensor[(280), float32], Tensor[(280), float32], Tensor[(192), int8], Tensor[(360), uint64]) */;
  %582 = cast(meta[relay.Constant][33] /* ty=Tensor[(36), float32] */, dtype="float32") /* ty=Tensor[(36), float32] */;
  %583 = reshape(%582, newshape=[3, 12]) /* ty=Tensor[(3, 12), float32] */;
  %584 = @func_6564(%583) /* ty=(Tensor[(7, 10, 13), float64], Tensor[(546), float32], Tensor[(4, ?, 6), int32], Tensor[(24), float32], Tensor[(3, 4, 3), float32], Tensor[(3, 12), float32], Tensor[(7, 10, 13), float64]) */;
  %585 = cast(False /* ty=bool */, dtype="bool") /* ty=bool */;
  %586 = cast(meta[relay.Constant][32] /* ty=Tensor[(8, 2), bool] */, dtype="bool") /* ty=Tensor[(8, 2), bool] */;
  %587 = reshape(%585, newshape=[]) /* ty=bool */;
  %588 = reshape(%586, newshape=[1, 4, 4]) /* ty=Tensor[(1, 4, 4), bool] */;
  %589 = @func_4153(%587, %588) /* ty=(Tensor[(1, 4, 4), bool], Tensor[(11, 7, 13), float32], Tensor[(1001), float32]) */;
  %590 = %589.2;
  %591 = cast(%var_12353, dtype="bool") /* ty=Tensor[(1001), bool] */;
  %592 = shape_of(%590, dtype="int32") /* ty=Tensor[(1), int32] */;
  %593 = cast(%590, dtype="bool") /* ty=Tensor[(1001), bool] */;
  %594 = dyn.reshape(%591, %592, newshape=[]) /* ty=Tensor[(?), bool] */;
  %595 = cast(meta[relay.Constant][32] /* ty=Tensor[(8, 2), bool] */, dtype="bool") /* ty=Tensor[(8, 2), bool] */;
  %596 = reshape(%595, newshape=[16]) /* ty=Tensor[(16), bool] */;
  %597 = @func_4458(%596) /* ty=(Tensor[(7, 10, 13), float32], Tensor[(1001), float32], bool, Tensor[(16), bool]) */;
  %598 = floor_mod(%577, %578) /* ty=Tensor[(6, 6, 3), float64] */;
  %599 = %581.3;
  %600 = %584.0;
  %601 = greater(%593, %594) /* ty=Tensor[(1001), bool] */;
  %602 = %597.0;
  (%598, False /* ty=bool */, meta[relay.Constant][32] /* ty=Tensor[(8, 2), bool] */, %599, %var_12337, %600, meta[relay.Constant][33] /* ty=Tensor[(36), float32] */, %601, %602)
}

def @func_8785() -> (bool, Tensor[(7, 10, 13), float32], Tensor[(7, 10, 13), float64]) {
  %603 = @func_2530() /* ty=(Tensor[(7, 10, 13), float32],) */;
  %604 = @func_3230() /* ty=bool */;
  %605 = %603.0;
  %606 = @func_5421() /* ty=Tensor[(7, 10, 13), float64] */;
  (%604, %605, %606)
}

def @func_12934(%var_12916: Tensor[(10, 7, 11), int8]) -> Tensor[(10, 7, 11), float32] {
  %607 = cast(%var_12916, dtype="bool") /* ty=Tensor[(10, 7, 11), bool] */;
  %608 = shape_of(meta[relay.Constant][34] /* ty=Tensor[(10, 7, 11), int8] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %609 = cast(meta[relay.Constant][34] /* ty=Tensor[(10, 7, 11), int8] */, dtype="bool") /* ty=Tensor[(10, 7, 11), bool] */;
  %610 = dyn.reshape(%607, %608, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %611 = not_equal(%609, %610) /* ty=Tensor[(10, 7, 11), bool] */;
  %612 = cast(%611, dtype="float32") /* ty=Tensor[(10, 7, 11), float32] */;
  acosh(%612) /* ty=Tensor[(10, 7, 11), float32] */
}

def @func_12606() -> bool {
  %613 = @func_1975() /* ty=(bool,) */;
  %613.0
}

def @func_2572() -> (bool,) {
  %614 = @func_1694() /* ty=bool */;
  (%614,)
}

def @func_247(%var_204: Tensor[(3, 13, 14), float32], %var_208: Tensor[(6, 4), float32], %var_224: Tensor[(4, 8, 6), int8]) -> (Tensor[(6, 4), float32], Tensor[(4, ?, 6), int8], Tensor[(4, ?, 6), int32], Tensor[(4, 8, 6), float32], Tensor[(4, ?, 6), int8], Tensor[(3, 13, 14), float64]) {
  %615 = cast(%var_208, dtype="float32") /* ty=Tensor[(6, 4), float32] */;
  %616 = reshape(%615, newshape=[4, 1, 6]) /* ty=Tensor[(4, 1, 6), float32] */;
  %617 = @func_126(%616) /* ty=(Tensor[(4, ?, 6), int32], Tensor[(4, ?, 6), int8]) */;
  %618 = %617.1;
  %619 = cast(%618, dtype="float32") /* ty=Tensor[(4, ?, 6), float32] */;
  %620 = reshape(%619, newshape=[4, 1, 6]) /* ty=Tensor[(4, 1, 6), float32] */;
  %621 = @func_126(%620) /* ty=(Tensor[(4, ?, 6), int32], Tensor[(4, ?, 6), int8]) */;
  %622 = cast(%var_208, dtype="float32") /* ty=Tensor[(6, 4), float32] */;
  %623 = reshape(%622, newshape=[4, 1, 6]) /* ty=Tensor[(4, 1, 6), float32] */;
  %624 = @func_126(%623) /* ty=(Tensor[(4, ?, 6), int32], Tensor[(4, ?, 6), int8]) */;
  %625 = cast(%618, dtype="float32") /* ty=Tensor[(4, ?, 6), float32] */;
  %626 = cast(%var_224, dtype="float32") /* ty=Tensor[(4, 8, 6), float32] */;
  %627 = %621.1;
  %628 = cast(%627, dtype="float32") /* ty=Tensor[(4, ?, 6), float32] */;
  %629 = reshape(%628, newshape=[4, 1, 6]) /* ty=Tensor[(4, 1, 6), float32] */;
  %630 = @func_126(%629) /* ty=(Tensor[(4, ?, 6), int32], Tensor[(4, ?, 6), int8]) */;
  %631 = cast(%var_204, dtype="float32") /* ty=Tensor[(3, 13, 14), float32] */;
  %632 = rsqrt(%631) /* ty=Tensor[(3, 13, 14), float32] */;
  %633 = cast(%632, dtype="float64") /* ty=Tensor[(3, 13, 14), float64] */;
  %634 = %624.0;
  %635 = mod(%625, %626) /* ty=Tensor[(4, 8, 6), float32] */;
  %636 = %630.1;
  %637 = log10(%633) /* ty=Tensor[(3, 13, 14), float64] */;
  (%var_208, %627, %634, %635, %636, %637)
}

def @func_8657() -> (bool, Tensor[(7, 10, 13), float64], Tensor[(7, 10, 13), float64]) {
  %638 = @func_1502() /* ty=(Tensor[(7, 10, 13), float64],) */;
  %639 = @func_1694() /* ty=bool */;
  %640 = %638.0;
  %641 = @func_1704() /* ty=Tensor[(7, 10, 13), float64] */;
  (%639, %640, %641)
}

def @func_6248() -> (Tensor[(7, 10, 13), float64], Tensor[(2, 9, 11), float64], Tensor[(198), uint8]) {
  %642 = cast(meta[relay.Constant][35] /* ty=Tensor[(198), uint8] */, dtype="uint8") /* ty=Tensor[(198), uint8] */;
  %643 = cast(meta[relay.Constant][35] /* ty=Tensor[(198), uint8] */, dtype="uint8") /* ty=Tensor[(198), uint8] */;
  %644 = reshape(%642, newshape=[2, 9, 11]) /* ty=Tensor[(2, 9, 11), uint8] */;
  %645 = reshape(%643, newshape=[2, 9, 11]) /* ty=Tensor[(2, 9, 11), uint8] */;
  %646 = @func_4277() /* ty=Tensor[(7, 10, 13), float64] */;
  %647 = @func_3968(%644, %645) /* ty=Tensor[(2, 9, 11), float64] */;
  (%646, %647, meta[relay.Constant][35] /* ty=Tensor[(198), uint8] */)
}

def @func_4458(%var_4446: Tensor[(16), bool]) -> (Tensor[(7, 10, 13), float32], Tensor[(1001), float32], bool, Tensor[(16), bool]) {
  %648 = @func_3682() /* ty=(bool, Tensor[(4, ?, 6), int8], Tensor[(24), float32], Tensor[(7, 10, 13), float32], Tensor[(7, 10, 13), float32], Tensor[(910), float32]) */;
  %649 = cast(False /* ty=bool */, dtype="bool") /* ty=bool */;
  %650 = cast(%var_4446, dtype="bool") /* ty=Tensor[(16), bool] */;
  %651 = reshape(%649, newshape=[]) /* ty=bool */;
  %652 = reshape(%650, newshape=[1, 4, 4]) /* ty=Tensor[(1, 4, 4), bool] */;
  %653 = @func_4153(%651, %652) /* ty=(Tensor[(1, 4, 4), bool], Tensor[(11, 7, 13), float32], Tensor[(1001), float32]) */;
  %654 = %648.4;
  %655 = %653.2;
  (%654, %655, False /* ty=bool */, %var_4446)
}

def @func_5099() -> (bool,) {
  %656 = @func_3230() /* ty=bool */;
  (%656,)
}

def @func_7855() -> (bool, Tensor[(2, 9, 11), float64], Tensor[(198), uint8]) {
  %657 = @func_6633() /* ty=(Tensor[(1, 4), bool], bool) */;
  %658 = cast(meta[relay.Constant][36] /* ty=Tensor[(198), uint8] */, dtype="uint8") /* ty=Tensor[(198), uint8] */;
  %659 = cast(meta[relay.Constant][36] /* ty=Tensor[(198), uint8] */, dtype="uint8") /* ty=Tensor[(198), uint8] */;
  %660 = reshape(%658, newshape=[2, 9, 11]) /* ty=Tensor[(2, 9, 11), uint8] */;
  %661 = reshape(%659, newshape=[2, 9, 11]) /* ty=Tensor[(2, 9, 11), uint8] */;
  %662 = %657.1;
  %663 = @func_3968(%660, %661) /* ty=Tensor[(2, 9, 11), float64] */;
  (%662, %663, meta[relay.Constant][36] /* ty=Tensor[(198), uint8] */)
}

def @func_2960(%var_2954: uint32) -> Tensor[(7, 12, 6), uint32] {
  %664 = cast(%var_2954, dtype="uint32") /* ty=uint32 */;
  %665 = cast(meta[relay.Constant][37] /* ty=Tensor[(7, 12, 6), uint32] */, dtype="uint32") /* ty=Tensor[(7, 12, 6), uint32] */;
  left_shift(%664, %665) /* ty=Tensor[(7, 12, 6), uint32] */
}

def @func_3894(%var_3812: Tensor[(10, 6, 6), uint64], %var_3813: Tensor[(10, 6, 6), uint64]) -> (Tensor[(10, 6, 6), bool], Tensor[(10, 6, 6), float32], bool, Tensor[(7, 10, 13), float64], Tensor[(7, 12, 6), float64]) {
  %666 = cast(%var_3813, dtype="bool") /* ty=Tensor[(10, 6, 6), bool] */;
  %667 = shape_of(%var_3812, dtype="int32") /* ty=Tensor[(3), int32] */;
  %668 = cast(%var_3812, dtype="bool") /* ty=Tensor[(10, 6, 6), bool] */;
  %669 = dyn.reshape(%666, %667, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %670 = cast(%var_3812, dtype="float32") /* ty=Tensor[(10, 6, 6), float32] */;
  %671 = shape_of(%var_3813, dtype="int32") /* ty=Tensor[(3), int32] */;
  %672 = cast(%var_3813, dtype="float32") /* ty=Tensor[(10, 6, 6), float32] */;
  %673 = dyn.reshape(%670, %671, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %674 = @func_1858() /* ty=(Tensor[(7, 10, 13), float64], Tensor[(7, 10, 13), float32]) */;
  %675 = @func_2272() /* ty=bool */;
  %676 = cast(%675, dtype="uint32") /* ty=uint32 */;
  %677 = reshape(%676, newshape=[]) /* ty=uint32 */;
  %678 = @func_2960(%677) /* ty=Tensor[(7, 12, 6), uint32] */;
  %679 = cast(%678, dtype="float64") /* ty=Tensor[(7, 12, 6), float64] */;
  %680 = less_equal(%668, %669) /* ty=Tensor[(10, 6, 6), bool] */;
  %681 = floor_divide(%672, %673) /* ty=Tensor[(10, 6, 6), float32] */;
  %682 = %674.0;
  %683 = acos(%679) /* ty=Tensor[(7, 12, 6), float64] */;
  (%680, %681, %675, %682, %683)
}

def @func_7667() -> (Tensor[(7, 10, 13), float32], bool, Tensor[(7, 10, 13), float64]) {
  %684 = @func_1318() /* ty=(Tensor[(7, 10, 13), float32], Tensor[(7, 10, 13), float32]) */;
  %685 = @func_5839() /* ty=(bool,) */;
  %686 = @func_4807() /* ty=(Tensor[(7, 10, 13), float64],) */;
  %687 = %684.0;
  %688 = %685.0;
  %689 = %686.0;
  (%687, %688, %689)
}

def @func_11213() -> (bool, bool) {
  %690 = @func_5099() /* ty=(bool,) */;
  %691 = @func_8887() /* ty=(bool,) */;
  %692 = %690.0;
  %693 = %691.0;
  (%692, %693)
}

def @func_8887() -> (bool,) {
  %694 = @func_4312() /* ty=(bool,) */;
  %695 = %694.0;
  (%695,)
}

def @func_11977(%var_11953: Tensor[(1, 5, 11), float64], %var_11954: Tensor[(14, 5, 11), float64]) -> (Tensor[(14, 5, 11), float64], Tensor[(2, 5, 16), float32], Tensor[(14, 5, 11), bool]) {
  %696 = cast(%var_11953, dtype="float64") /* ty=Tensor[(1, 5, 11), float64] */;
  %697 = cast(%var_11954, dtype="float64") /* ty=Tensor[(14, 5, 11), float64] */;
  %698 = @func_6287() /* ty=(Tensor[(2, 5, 16), float32], Tensor[(2, 5, 16), float32]) */;
  %699 = cast(%var_11953, dtype="bool") /* ty=Tensor[(1, 5, 11), bool] */;
  %700 = cast(%var_11954, dtype="bool") /* ty=Tensor[(14, 5, 11), bool] */;
  %701 = power(%696, %697) /* ty=Tensor[(14, 5, 11), float64] */;
  %702 = %698.1;
  %703 = not_equal(%699, %700) /* ty=Tensor[(14, 5, 11), bool] */;
  (%701, %702, %703)
}

def @func_6633() -> (Tensor[(1, 4), bool], bool) {
  %704 = @func_2912() /* ty=(Tensor[(7, 10, 13), float64], Tensor[(1, 4), bool]) */;
  %705 = @func_4848() /* ty=(Tensor[(1, 4), bool], bool) */;
  %706 = %704.1;
  %707 = %705.1;
  (%706, %707)
}

def @func_10197(%var_10166: Tensor[(1, 16), bool]) -> (Tensor[(7, 10, 13), float64], Tensor[(910), float32], Tensor[(1, 4, 4), bool], bool, Tensor[(1, 16), bool]) {
  %708 = @func_5608() /* ty=(Tensor[(7, 10, 13), float64],) */;
  %709 = @func_7899() /* ty=(Tensor[(910), float32],) */;
  %710 = cast(True /* ty=bool */, dtype="bool") /* ty=bool */;
  %711 = cast(%var_10166, dtype="bool") /* ty=Tensor[(1, 16), bool] */;
  %712 = reshape(%710, newshape=[]) /* ty=bool */;
  %713 = reshape(%711, newshape=[1, 4, 4]) /* ty=Tensor[(1, 4, 4), bool] */;
  %714 = @func_4153(%712, %713) /* ty=(Tensor[(1, 4, 4), bool], Tensor[(11, 7, 13), float32], Tensor[(1001), float32]) */;
  %715 = %708.0;
  %716 = %709.0;
  %717 = %714.0;
  (%715, %716, %717, True /* ty=bool */, %var_10166)
}

def @func_10812() -> (bool, Tensor[(7, 10, 13), float32]) {
  %718 = @func_5099() /* ty=(bool,) */;
  %719 = @func_1858() /* ty=(Tensor[(7, 10, 13), float64], Tensor[(7, 10, 13), float32]) */;
  %720 = %718.0;
  %721 = %719.1;
  (%720, %721)
}

def @func_12854() -> Tensor[(96), float64] {
  @func_9915() /* ty=Tensor[(96), float64] */
}

def @func_1916() -> (Tensor[(7, 10, 13), float64], Tensor[(7, 10, 13), float64]) {
  %722 = @func_1704() /* ty=Tensor[(7, 10, 13), float64] */;
  %723 = @func_1704() /* ty=Tensor[(7, 10, 13), float64] */;
  (%722, %723)
}

def @func_4998(%var_4967: Tensor[(2, 12), float32], %var_4968: Tensor[(70, 4), float32]) -> (Tensor[(7, 10, 13), float64], Tensor[(2, 12), float32], Tensor[(70, 4), uint16]) {
  %724 = cast(%var_4967, dtype="float32") /* ty=Tensor[(2, 12), float32] */;
  %725 = cast(%var_4968, dtype="float32") /* ty=Tensor[(70, 4), float32] */;
  %726 = reshape(%724, newshape=[24]) /* ty=Tensor[(24), float32] */;
  %727 = reshape(%725, newshape=[280]) /* ty=Tensor[(280), float32] */;
  %728 = @func_3129(%726, %727) /* ty=(Tensor[(7, 10, 13), float64], Tensor[(280), float32], Tensor[(192), int8], Tensor[(24, 8), float32], Tensor[(4, ?, 6), bool]) */;
  %729 = %728.1;
  %730 = cast(%729, dtype="uint16") /* ty=Tensor[(280), uint16] */;
  %731 = shape_of(%var_4968, dtype="int32") /* ty=Tensor[(2), int32] */;
  %732 = cast(%var_4968, dtype="uint16") /* ty=Tensor[(70, 4), uint16] */;
  %733 = dyn.reshape(%730, %731, newshape=[]) /* ty=Tensor[(?, ?), uint16] */;
  %734 = @func_4277() /* ty=Tensor[(7, 10, 13), float64] */;
  %735 = right_shift(%732, %733) /* ty=Tensor[(70, 4), uint16] */;
  (%734, %var_4967, %735)
}

def @func_3792(%var_3764: Tensor[(546), float32], %var_3766: Tensor[(48, 4), int8]) -> (bool, Tensor[(7, 10, 13), float64], Tensor[(7, 10, 13), float64], Tensor[(4, 8, 6), float32], Tensor[(4, 24), float64], Tensor[(546), float32], Tensor[(24), float32], Tensor[(48, 4), int8], Tensor[(7, 10, 13), float32], bool) {
  %736 = @func_2787() /* ty=(Tensor[(7, 10, 13), float64],) */;
  %737 = cast(meta[relay.Constant][38] /* ty=Tensor[(4, 24), float64] */, dtype="float64") /* ty=Tensor[(4, 24), float64] */;
  %738 = cast(%var_3764, dtype="float32") /* ty=Tensor[(546), float32] */;
  %739 = cast(meta[relay.Constant][39] /* ty=Tensor[(24), float32] */, dtype="float32") /* ty=Tensor[(24), float32] */;
  %740 = cast(%var_3766, dtype="int8") /* ty=Tensor[(48, 4), int8] */;
  %741 = reshape(%737, newshape=[16, 2, 3]) /* ty=Tensor[(16, 2, 3), float64] */;
  %742 = reshape(%738, newshape=[546]) /* ty=Tensor[(546), float32] */;
  %743 = reshape(%739, newshape=[12, 2]) /* ty=Tensor[(12, 2), float32] */;
  %744 = reshape(%740, newshape=[192]) /* ty=Tensor[(192), int8] */;
  %745 = @func_842(%741, %742, %743, %744) /* ty=(Tensor[(16, 2, 3), float64], Tensor[(4, 8, 6), float32], Tensor[(546), float32], Tensor[(12, 2), float32], Tensor[(192), int8], Tensor[(6, 4), float32]) */;
  %746 = @func_2048() /* ty=(Tensor[(7, 10, 13), float32], Tensor[(7, 10, 13), float64]) */;
  %747 = @func_1694() /* ty=bool */;
  %748 = %736.0;
  %749 = @func_1704() /* ty=Tensor[(7, 10, 13), float64] */;
  %750 = %745.1;
  %751 = %746.0;
  %752 = @func_3230() /* ty=bool */;
  (%747, %748, %749, %750, meta[relay.Constant][38] /* ty=Tensor[(4, 24), float64] */, %var_3764, meta[relay.Constant][39] /* ty=Tensor[(24), float32] */, %var_3766, %751, %752)
}

def @func_4153(%var_4139: bool, %var_4140: Tensor[(1, 4, 4), bool]) -> (Tensor[(1, 4, 4), bool], Tensor[(11, 7, 13), float32], Tensor[(1001), float32]) {
  %753 = cast(%var_4139, dtype="bool") /* ty=bool */;
  %754 = cast(%var_4140, dtype="bool") /* ty=Tensor[(1, 4, 4), bool] */;
  %755 = cast(meta[relay.Constant][40] /* ty=Tensor[(1001), float32] */, dtype="float32") /* ty=Tensor[(1001), float32] */;
  %756 = reshape(%755, newshape=[11, 7, 13]) /* ty=Tensor[(11, 7, 13), float32] */;
  %757 = @func_3004(%756) /* ty=(Tensor[(11, 7, 13), float32],) */;
  %758 = logical_or(%753, %754) /* ty=Tensor[(1, 4, 4), bool] */;
  %759 = %757.0;
  (%758, %759, meta[relay.Constant][40] /* ty=Tensor[(1001), float32] */)
}

def @func_4196() -> (Tensor[(1, 4), bool],) {
  %760 = @func_2912() /* ty=(Tensor[(7, 10, 13), float64], Tensor[(1, 4), bool]) */;
  %761 = %760.1;
  (%761,)
}

def @func_5818() -> (Tensor[(7, 10, 13), float32],) {
  %762 = @func_2530() /* ty=(Tensor[(7, 10, 13), float32],) */;
  %763 = %762.0;
  (%763,)
}

def @func_7287(%var_7268: Tensor[(3, 14, 16), float64]) -> (Tensor[(10, 16, 3), float64], Tensor[(480), float64], Tensor[(3, 14, 16), float64]) {
  %764 = cast(meta[relay.Constant][41] /* ty=Tensor[(480), float64] */, dtype="float64") /* ty=Tensor[(480), float64] */;
  %765 = reshape(%764, newshape=[10, 16, 3]) /* ty=Tensor[(10, 16, 3), float64] */;
  %766 = cast(%var_7268, dtype="float64") /* ty=Tensor[(3, 14, 16), float64] */;
  %767 = sigmoid(%766) /* ty=Tensor[(3, 14, 16), float64] */;
  %768 = cast(%var_7268, dtype="float64") /* ty=Tensor[(3, 14, 16), float64] */;
  %769 = shape_of(%767, dtype="int32") /* ty=Tensor[(3), int32] */;
  %770 = cast(%767, dtype="float64") /* ty=Tensor[(3, 14, 16), float64] */;
  %771 = dyn.reshape(%768, %769, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %772 = @func_4815(%765) /* ty=Tensor[(10, 16, 3), float64] */;
  %773 = floor_divide(%770, %771) /* ty=Tensor[(3, 14, 16), float64] */;
  (%772, meta[relay.Constant][41] /* ty=Tensor[(480), float64] */, %773)
}

def @func_3129(%var_3089: Tensor[(24), float32], %var_3097: Tensor[(280), float32]) -> (Tensor[(7, 10, 13), float64], Tensor[(280), float32], Tensor[(192), int8], Tensor[(24, 8), float32], Tensor[(4, ?, 6), bool]) {
  %774 = @func_1502() /* ty=(Tensor[(7, 10, 13), float64],) */;
  %775 = cast(%var_3097, dtype="float32") /* ty=Tensor[(280), float32] */;
  %776 = cast(meta[relay.Constant][42] /* ty=Tensor[(192), int8] */, dtype="int8") /* ty=Tensor[(192), int8] */;
  %777 = reshape(%775, newshape=[8, 7, 5]) /* ty=Tensor[(8, 7, 5), float32] */;
  %778 = reshape(%776, newshape=[24, 8]) /* ty=Tensor[(24, 8), int8] */;
  %779 = @func_2620(%777, %778) /* ty=(Tensor[(8, 7, 5), int16], Tensor[(7, 10, 13), float32], Tensor[(12, 2), float32], Tensor[(96), float64], Tensor[(546), float32], Tensor[(6, 4), float32], Tensor[(24, 8), int8], Tensor[(12, 2), float32], Tensor[(7, 10, 13), float32]) */;
  %780 = %779.6;
  %781 = cast(%780, dtype="float32") /* ty=Tensor[(24, 8), float32] */;
  %782 = cast(%var_3089, dtype="float32") /* ty=Tensor[(24), float32] */;
  %783 = reshape(%782, newshape=[4, 1, 6]) /* ty=Tensor[(4, 1, 6), float32] */;
  %784 = @func_126(%783) /* ty=(Tensor[(4, ?, 6), int32], Tensor[(4, ?, 6), int8]) */;
  %785 = %784.1;
  %786 = cast(%var_3089, dtype="bool") /* ty=Tensor[(24), bool] */;
  %787 = shape_of(%785, dtype="int32") /* ty=Tensor[(3), int32] */;
  %788 = cast(%785, dtype="bool") /* ty=Tensor[(4, ?, 6), bool] */;
  %789 = dyn.reshape(%786, %787, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %790 = %774.0;
  %791 = erf(%781) /* ty=Tensor[(24, 8), float32] */;
  %792 = less(%788, %789) /* ty=Tensor[(4, ?, 6), bool] */;
  (%790, %var_3097, meta[relay.Constant][42] /* ty=Tensor[(192), int8] */, %791, %792)
}

def @func_12108(%var_12102: Tensor[(546), float32]) -> (bool, bool, Tensor[(546), float32], Tensor[(192, 1), int8]) {
  %793 = @func_4312() /* ty=(bool,) */;
  %794 = cast(%var_12102, dtype="float32") /* ty=Tensor[(546), float32] */;
  %795 = cast(meta[relay.Constant][43] /* ty=Tensor[(192, 1), int8] */, dtype="int8") /* ty=Tensor[(192, 1), int8] */;
  %796 = reshape(%794, newshape=[546]) /* ty=Tensor[(546), float32] */;
  %797 = reshape(%795, newshape=[48, 4]) /* ty=Tensor[(48, 4), int8] */;
  %798 = @func_3792(%796, %797) /* ty=(bool, Tensor[(7, 10, 13), float64], Tensor[(7, 10, 13), float64], Tensor[(4, 8, 6), float32], Tensor[(4, 24), float64], Tensor[(546), float32], Tensor[(24), float32], Tensor[(48, 4), int8], Tensor[(7, 10, 13), float32], bool) */;
  %799 = %793.0;
  %800 = %798.9;
  (%799, %800, %var_12102, meta[relay.Constant][43] /* ty=Tensor[(192, 1), int8] */)
}

def @func_6153() -> Tensor[(7, 10, 13), float64] {
  %801 = @func_2787() /* ty=(Tensor[(7, 10, 13), float64],) */;
  %801.0
}

def @func_2402(%var_2357: Tensor[(14, 15, 16), float64], %var_2387: Tensor[(50, 6), float32], %var_2388: Tensor[(24), float32]) -> (Tensor[(14, 15, 16), float64], Tensor[(7, 10, 13), float64], Tensor[(50, 6), float32], Tensor[(24), float32]) {
  %802 = cast(%var_2357, dtype="float64") /* ty=Tensor[(14, 15, 16), float64] */;
  %803 = cast(%var_2387, dtype="float32") /* ty=Tensor[(50, 6), float32] */;
  %804 = cast(%var_2388, dtype="float32") /* ty=Tensor[(24), float32] */;
  %805 = reshape(%803, newshape=[5, 5, 12]) /* ty=Tensor[(5, 5, 12), float32] */;
  %806 = reshape(%804, newshape=[24]) /* ty=Tensor[(24), float32] */;
  %807 = @func_1956(%805, %806) /* ty=(Tensor[(5, 5, 12), float32], Tensor[(4, ?, 6), int32], Tensor[(24), float32], Tensor[(7, 10, 13), float64]) */;
  %808 = log(%802) /* ty=Tensor[(14, 15, 16), float64] */;
  %809 = %807.3;
  (%808, %809, %var_2387, %var_2388)
}

def @func_10350() -> Tensor[(300, 1), float32] {
  %810 = @func_5294() /* ty=(Tensor[(1, 4), bool], Tensor[(7, 10, 13), float64], Tensor[(14, 15, 16), float64], Tensor[(3360), float64], Tensor[(300, 1), float32], Tensor[(24), float32]) */;
  %810.4
}

def @func_2202(%var_2174: Tensor[(7, 10, 13), float32]) -> (Tensor[(7, 10, 13), bool], Tensor[(8, 16, 9), float64], Tensor[(1152), float64]) {
  %811 = @func_1318() /* ty=(Tensor[(7, 10, 13), float32], Tensor[(7, 10, 13), float32]) */;
  %812 = %811.0;
  %813 = cast(%var_2174, dtype="bool") /* ty=Tensor[(7, 10, 13), bool] */;
  %814 = shape_of(%812, dtype="int32") /* ty=Tensor[(3), int32] */;
  %815 = cast(%812, dtype="bool") /* ty=Tensor[(7, 10, 13), bool] */;
  %816 = dyn.reshape(%813, %814, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %817 = cast(meta[relay.Constant][44] /* ty=Tensor[(1152), float64] */, dtype="float64") /* ty=Tensor[(1152), float64] */;
  %818 = reshape(%817, newshape=[8, 16, 9]) /* ty=Tensor[(8, 16, 9), float64] */;
  %819 = greater_equal(%815, %816) /* ty=Tensor[(7, 10, 13), bool] */;
  %820 = @func_1403(%818) /* ty=Tensor[(8, 16, 9), float64] */;
  (%819, %820, meta[relay.Constant][44] /* ty=Tensor[(1152), float64] */)
}

def @func_5294() -> (Tensor[(1, 4), bool], Tensor[(7, 10, 13), float64], Tensor[(14, 15, 16), float64], Tensor[(3360), float64], Tensor[(300, 1), float32], Tensor[(24), float32]) {
  %821 = @func_1458() /* ty=(Tensor[(1, 4), bool],) */;
  %822 = @func_4407() /* ty=(Tensor[(7, 10, 13), float64], Tensor[(7, 10, 13), float64]) */;
  %823 = cast(meta[relay.Constant][45] /* ty=Tensor[(3360), float64] */, dtype="float64") /* ty=Tensor[(3360), float64] */;
  %824 = cast(meta[relay.Constant][46] /* ty=Tensor[(300, 1), float32] */, dtype="float32") /* ty=Tensor[(300, 1), float32] */;
  %825 = cast(meta[relay.Constant][47] /* ty=Tensor[(24), float32] */, dtype="float32") /* ty=Tensor[(24), float32] */;
  %826 = reshape(%823, newshape=[14, 15, 16]) /* ty=Tensor[(14, 15, 16), float64] */;
  %827 = reshape(%824, newshape=[50, 6]) /* ty=Tensor[(50, 6), float32] */;
  %828 = reshape(%825, newshape=[24]) /* ty=Tensor[(24), float32] */;
  %829 = @func_2402(%826, %827, %828) /* ty=(Tensor[(14, 15, 16), float64], Tensor[(7, 10, 13), float64], Tensor[(50, 6), float32], Tensor[(24), float32]) */;
  %830 = %821.0;
  %831 = %822.0;
  %832 = %829.0;
  (%830, %831, %832, meta[relay.Constant][45] /* ty=Tensor[(3360), float64] */, meta[relay.Constant][46] /* ty=Tensor[(300, 1), float32] */, meta[relay.Constant][47] /* ty=Tensor[(24), float32] */)
}

def @func_11701() -> (Tensor[(1, 4), bool], Tensor[(7, 10, 13), float64], Tensor[(14, 15, 16), float64]) {
  %833 = @func_10485() /* ty=(Tensor[(1, 4), bool],) */;
  %834 = @func_5294() /* ty=(Tensor[(1, 4), bool], Tensor[(7, 10, 13), float64], Tensor[(14, 15, 16), float64], Tensor[(3360), float64], Tensor[(300, 1), float32], Tensor[(24), float32]) */;
  %835 = %833.0;
  %836 = @func_9437() /* ty=Tensor[(7, 10, 13), float64] */;
  %837 = %834.2;
  (%835, %836, %837)
}

def @func_1956(%var_1937: Tensor[(5, 5, 12), float32], %var_1941: Tensor[(24), float32]) -> (Tensor[(5, 5, 12), float32], Tensor[(4, ?, 6), int32], Tensor[(24), float32], Tensor[(7, 10, 13), float64]) {
  %838 = cast(%var_1937, dtype="float32") /* ty=Tensor[(5, 5, 12), float32] */;
  %839 = cast(%var_1941, dtype="float32") /* ty=Tensor[(24), float32] */;
  %840 = reshape(%839, newshape=[4, 1, 6]) /* ty=Tensor[(4, 1, 6), float32] */;
  %841 = @func_126(%840) /* ty=(Tensor[(4, ?, 6), int32], Tensor[(4, ?, 6), int8]) */;
  %842 = @func_1916() /* ty=(Tensor[(7, 10, 13), float64], Tensor[(7, 10, 13), float64]) */;
  %843 = acos(%838) /* ty=Tensor[(5, 5, 12), float32] */;
  %844 = %841.0;
  %845 = %842.1;
  (%843, %844, %var_1941, %845)
}

def @func_1369() -> (Tensor[(7, 10, 13), float32], Tensor[(7, 10, 13), float32]) {
  %846 = @func_1318() /* ty=(Tensor[(7, 10, 13), float32], Tensor[(7, 10, 13), float32]) */;
  %847 = @func_1232() /* ty=(Tensor[(7, 10, 13), float32],) */;
  %848 = %846.1;
  %849 = %847.0;
  (%848, %849)
}

def @func_6039() -> (Tensor[(7, 10, 13), float32], bool) {
  %850 = @func_4754() /* ty=(bool, Tensor[(7, 10, 13), float32]) */;
  %851 = @func_5177() /* ty=(Tensor[(7, 10, 13), float64], bool, Tensor[(96), float64], Tensor[(3360), float64], Tensor[(546), float32], Tensor[(96), float64], Tensor[(7, 10, 13), float64]) */;
  %852 = %850.1;
  %853 = %851.1;
  (%852, %853)
}

def @func_12087() -> (bool, bool, bool) {
  %854 = @func_1761() /* ty=(bool, Tensor[(7, 10, 13), float64], Tensor[(910), float32]) */;
  %855 = @func_11760() /* ty=(Tensor[(7, 10, 13), float32], bool) */;
  %856 = @func_3186() /* ty=bool */;
  %857 = %854.0;
  %858 = %855.1;
  (%856, %857, %858)
}

def @func_12254() -> (bool, bool, Tensor[(960), int64]) {
  %859 = @func_9895() /* ty=(bool,) */;
  %860 = cast(meta[relay.Constant][48] /* ty=Tensor[(960), int64] */, dtype="int64") /* ty=Tensor[(960), int64] */;
  %861 = cast(meta[relay.Constant][48] /* ty=Tensor[(960), int64] */, dtype="int64") /* ty=Tensor[(960), int64] */;
  %862 = cast(meta[relay.Constant][48] /* ty=Tensor[(960), int64] */, dtype="int64") /* ty=Tensor[(960), int64] */;
  %863 = reshape(%860, newshape=[16, 5, 12]) /* ty=Tensor[(16, 5, 12), int64] */;
  %864 = reshape(%861, newshape=[16, 5, 12]) /* ty=Tensor[(16, 5, 12), int64] */;
  %865 = reshape(%862, newshape=[16, 5, 12]) /* ty=Tensor[(16, 5, 12), int64] */;
  %866 = @func_4083(%863, %864, %865) /* ty=(Tensor[(16, 5, 12), bool], Tensor[(16, 5, 12), uint16], bool) */;
  %867 = %859.0;
  %868 = %866.2;
  (%867, %868, meta[relay.Constant][48] /* ty=Tensor[(960), int64] */)
}

def @func_2272() -> bool {
  %869 = @func_1975() /* ty=(bool,) */;
  %869.0
}

def @func_9538() -> bool {
  @func_3186() /* ty=bool */
}

def @func_9719(%var_9668: Tensor[(378), float64]) -> (Tensor[(7, 10, 13), float32], Tensor[(9, 14, 3), float64], Tensor[(378), float64], Tensor[(7, 10, 13), float64], Tensor[(7, 10, 13), float64], Tensor[(7, 10, 13), float64], Tensor[(16, 3, 12), bool]) {
  %870 = @func_5340() /* ty=(Tensor[(7, 10, 13), float32],) */;
  %871 = cast(%var_9668, dtype="float64") /* ty=Tensor[(378), float64] */;
  %872 = reshape(%871, newshape=[9, 14, 3]) /* ty=Tensor[(9, 14, 3), float64] */;
  %873 = @func_6775(%872) /* ty=(Tensor[(9, 14, 3), float64], Tensor[(9, 14, 3), uint32], bool, Tensor[(9, 14, 3), float32]) */;
  %874 = @func_4407() /* ty=(Tensor[(7, 10, 13), float64], Tensor[(7, 10, 13), float64]) */;
  %875 = @func_5608() /* ty=(Tensor[(7, 10, 13), float64],) */;
  %876 = cast(meta[relay.Constant][49] /* ty=Tensor[(16, 3, 12), float64] */, dtype="float64") /* ty=Tensor[(16, 3, 12), float64] */;
  %877 = atan(%876) /* ty=Tensor[(16, 3, 12), float64] */;
  %878 = cast(%877, dtype="float64") /* ty=Tensor[(16, 3, 12), float64] */;
  %879 = sinh(%878) /* ty=Tensor[(16, 3, 12), float64] */;
  %880 = cast(%879, dtype="float32") /* ty=Tensor[(16, 3, 12), float32] */;
  %881 = sin(%880) /* ty=Tensor[(16, 3, 12), float32] */;
  %882 = cast(%881, dtype="bool") /* ty=Tensor[(16, 3, 12), bool] */;
  %883 = shape_of(%879, dtype="int32") /* ty=Tensor[(3), int32] */;
  %884 = cast(%879, dtype="bool") /* ty=Tensor[(16, 3, 12), bool] */;
  %885 = dyn.reshape(%882, %883, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %886 = %870.0;
  %887 = %873.0;
  %888 = @func_9437() /* ty=Tensor[(7, 10, 13), float64] */;
  %889 = %874.0;
  %890 = %875.0;
  %891 = greater(%884, %885) /* ty=Tensor[(16, 3, 12), bool] */;
  (%886, %887, %var_9668, %888, %889, %890, %891)
}

def @func_7899() -> (Tensor[(910), float32],) {
  %892 = @func_3682() /* ty=(bool, Tensor[(4, ?, 6), int8], Tensor[(24), float32], Tensor[(7, 10, 13), float32], Tensor[(7, 10, 13), float32], Tensor[(910), float32]) */;
  %893 = %892.5;
  (%893,)
}

def @func_4407() -> (Tensor[(7, 10, 13), float64], Tensor[(7, 10, 13), float64]) {
  %894 = @func_2530() /* ty=(Tensor[(7, 10, 13), float32],) */;
  %895 = %894.0;
  %896 = cast(%895, dtype="float32") /* ty=Tensor[(7, 10, 13), float32] */;
  %897 = reshape(%896, newshape=[7, 10, 13]) /* ty=Tensor[(7, 10, 13), float32] */;
  %898 = @func_1657(%897) /* ty=(Tensor[(7, 10, 13), float64],) */;
  %899 = cast(%895, dtype="float64") /* ty=Tensor[(7, 10, 13), float64] */;
  %900 = %898.0;
  %901 = log2(%899) /* ty=Tensor[(7, 10, 13), float64] */;
  (%900, %901)
}

def @func_5245() -> (bool,) {
  %902 = @func_2272() /* ty=bool */;
  (%902,)
}

def @func_8971() -> (bool, bool) {
  %903 = @func_5839() /* ty=(bool,) */;
  %904 = @func_7872() /* ty=(bool, bool) */;
  %905 = %903.0;
  %906 = %904.0;
  (%905, %906)
}

def @func_8058() -> Tensor[(7, 10, 13), float64] {
  %907 = @func_5608() /* ty=(Tensor[(7, 10, 13), float64],) */;
  %907.0
}

def @func_12293() -> (bool, Tensor[(7, 10, 13), float64], bool) {
  %908 = @func_4848() /* ty=(Tensor[(1, 4), bool], bool) */;
  %909 = @func_6714() /* ty=bool */;
  %910 = @func_1704() /* ty=Tensor[(7, 10, 13), float64] */;
  %911 = %908.1;
  (%909, %910, %911)
}

def @func_9483(%var_9461: Tensor[(1, 13, 13), int16], %var_9462: Tensor[(9, 13, 13), int16]) -> (Tensor[(9, 13, 13), int16], Tensor[(?, 13, 13), float32]) {
  %912 = cast(%var_9461, dtype="int16") /* ty=Tensor[(1, 13, 13), int16] */;
  %913 = cast(%var_9462, dtype="int16") /* ty=Tensor[(9, 13, 13), int16] */;
  %914 = cast(%var_9461, dtype="float64") /* ty=Tensor[(1, 13, 13), float64] */;
  %915 = atan(%914) /* ty=Tensor[(1, 13, 13), float64] */;
  %916 = cast(%var_9461, dtype="float32") /* ty=Tensor[(1, 13, 13), float32] */;
  %917 = shape_of(%915, dtype="int32") /* ty=Tensor[(3), int32] */;
  %918 = cast(%915, dtype="float32") /* ty=Tensor[(1, 13, 13), float32] */;
  %919 = dyn.reshape(%916, %917, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %920 = multiply(%912, %913) /* ty=Tensor[(9, 13, 13), int16] */;
  %921 = divide(%918, %919) /* ty=Tensor[(?, 13, 13), float32] */;
  (%920, %921)
}

def @func_9876(%var_9865: Tensor[(5, 14, 6), int32]) -> (Tensor[(5, 14, 6), int32],) {
  %922 = cast(%var_9865, dtype="int32") /* ty=Tensor[(5, 14, 6), int32] */;
  %923 = shape_of(meta[relay.Constant][50] /* ty=Tensor[(5, 14, 6), int32] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %924 = cast(meta[relay.Constant][50] /* ty=Tensor[(5, 14, 6), int32] */, dtype="int32") /* ty=Tensor[(5, 14, 6), int32] */;
  %925 = dyn.reshape(%922, %923, newshape=[]) /* ty=Tensor[(?, ?, ?), int32] */;
  %926 = left_shift(%924, %925) /* ty=Tensor[(5, 14, 6), int32] */;
  (%926,)
}

def @func_7769(%var_7719: Tensor[(546), float32], %var_7766: Tensor[(96), float64]) -> (Tensor[(7, 10, 13), float64], Tensor[(7, 10, 13), float64], Tensor[(7, 5, 12), uint16], uint8, Tensor[(420), uint8], Tensor[(546), float32], Tensor[(24), float32], Tensor[(7, 10, 13), float64], Tensor[(546), float32], Tensor[(96), float64]) {
  %927 = @func_1502() /* ty=(Tensor[(7, 10, 13), float64],) */;
  %928 = @func_3950() /* ty=(bool, Tensor[(7, 10, 13), float64], Tensor[(7, 10, 13), float32]) */;
  %929 = cast(meta[relay.Constant][51] /* ty=uint8 */, dtype="uint8") /* ty=uint8 */;
  %930 = cast(meta[relay.Constant][52] /* ty=Tensor[(420), uint8] */, dtype="uint8") /* ty=Tensor[(420), uint8] */;
  %931 = cast(%var_7719, dtype="float32") /* ty=Tensor[(546), float32] */;
  %932 = cast(meta[relay.Constant][53] /* ty=Tensor[(24), float32] */, dtype="float32") /* ty=Tensor[(24), float32] */;
  %933 = reshape(%929, newshape=[]) /* ty=uint8 */;
  %934 = reshape(%930, newshape=[420]) /* ty=Tensor[(420), uint8] */;
  %935 = reshape(%931, newshape=[91, 6]) /* ty=Tensor[(91, 6), float32] */;
  %936 = reshape(%932, newshape=[24]) /* ty=Tensor[(24), float32] */;
  %937 = @func_7043(%933, %934, %935, %936) /* ty=(Tensor[(7, 10, 13), float32], Tensor[(7, 5, 12), uint16], uint8, Tensor[(420), uint8], Tensor[(91, 6), float32], Tensor[(24), float32]) */;
  %938 = @func_1797() /* ty=(Tensor[(7, 10, 13), float64],) */;
  %939 = cast(%var_7719, dtype="float32") /* ty=Tensor[(546), float32] */;
  %940 = cast(%var_7766, dtype="float64") /* ty=Tensor[(96), float64] */;
  %941 = reshape(%939, newshape=[546]) /* ty=Tensor[(546), float32] */;
  %942 = reshape(%940, newshape=[8, 12]) /* ty=Tensor[(8, 12), float64] */;
  %943 = @func_5589(%941, %942) /* ty=(Tensor[(3360), bool], Tensor[(7, 10, 13), float64], Tensor[(7, 10, 13), float64], bool, Tensor[(546), float32], Tensor[(8, 12), float64], Tensor[(4, 8, 6), float32], Tensor[(24), float32], Tensor[(8, 24), int8]) */;
  %944 = %927.0;
  %945 = %928.1;
  %946 = %937.1;
  %947 = %938.0;
  %948 = %943.4;
  (%944, %945, %946, meta[relay.Constant][51] /* ty=uint8 */, meta[relay.Constant][52] /* ty=Tensor[(420), uint8] */, %var_7719, meta[relay.Constant][53] /* ty=Tensor[(24), float32] */, %947, %948, %var_7766)
}

def @func_1704() -> Tensor[(7, 10, 13), float64] {
  %949 = @func_1502() /* ty=(Tensor[(7, 10, 13), float64],) */;
  %949.0
}

def @func_6859() -> bool {
  @func_4928() /* ty=bool */
}

def @func_8838() -> (Tensor[(7, 10, 13), float32], bool) {
  %950 = @func_4754() /* ty=(bool, Tensor[(7, 10, 13), float32]) */;
  %951 = %950.1;
  %952 = @func_3230() /* ty=bool */;
  (%951, %952)
}

def @func_4312() -> (bool,) {
  %953 = @func_2572() /* ty=(bool,) */;
  %954 = %953.0;
  (%954,)
}

def @func_4754() -> (bool, Tensor[(7, 10, 13), float32]) {
  %955 = @func_1232() /* ty=(Tensor[(7, 10, 13), float32],) */;
  %956 = @func_1694() /* ty=bool */;
  %957 = %955.0;
  (%956, %957)
}

def @func_7307() -> bool {
  %958 = @func_5839() /* ty=(bool,) */;
  %958.0
}

def @func_7819() -> Tensor[(7, 10, 13), float32] {
  %959 = @func_6503() /* ty=(Tensor[(1, 4), bool], Tensor[(1, 4), bool], Tensor[(7, 10, 13), float32]) */;
  %959.2
}

def @func_9915() -> Tensor[(96), float64] {
  %960 = @func_8355() /* ty=(Tensor[(96), float64], Tensor[(7, 10, 13), float64], Tensor[(910), float32]) */;
  %960.0
}

def @func_11509() -> (bool, bool) {
  %961 = @func_6633() /* ty=(Tensor[(1, 4), bool], bool) */;
  %962 = @func_9538() /* ty=bool */;
  %963 = %961.1;
  (%962, %963)
}

def @func_13208(%var_13170: Tensor[(378), float64]) -> (Tensor[(7, 10, 13), float32], Tensor[(378), float64], Tensor[(378), float64], Tensor[(7, 10, 13), float64], Tensor[(7, 10, 13), float64], Tensor[(36), float32]) {
  %964 = @func_6975() /* ty=(Tensor[(7, 10, 13), float32],) */;
  %965 = cast(%var_13170, dtype="float64") /* ty=Tensor[(378), float64] */;
  %966 = reshape(%965, newshape=[378]) /* ty=Tensor[(378), float64] */;
  %967 = @func_9719(%966) /* ty=(Tensor[(7, 10, 13), float32], Tensor[(9, 14, 3), float64], Tensor[(378), float64], Tensor[(7, 10, 13), float64], Tensor[(7, 10, 13), float64], Tensor[(7, 10, 13), float64], Tensor[(16, 3, 12), bool]) */;
  %968 = @func_1502() /* ty=(Tensor[(7, 10, 13), float64],) */;
  %969 = cast(meta[relay.Constant][54] /* ty=Tensor[(36), float32] */, dtype="float32") /* ty=Tensor[(36), float32] */;
  %970 = reshape(%969, newshape=[3, 12]) /* ty=Tensor[(3, 12), float32] */;
  %971 = @func_6564(%970) /* ty=(Tensor[(7, 10, 13), float64], Tensor[(546), float32], Tensor[(4, ?, 6), int32], Tensor[(24), float32], Tensor[(3, 4, 3), float32], Tensor[(3, 12), float32], Tensor[(7, 10, 13), float64]) */;
  %972 = %964.0;
  %973 = %967.2;
  %974 = %968.0;
  %975 = %971.6;
  (%972, %973, %var_13170, %974, %975, meta[relay.Constant][54] /* ty=Tensor[(36), float32] */)
}

def @func_5608() -> (Tensor[(7, 10, 13), float64],) {
  %976 = @func_1858() /* ty=(Tensor[(7, 10, 13), float64], Tensor[(7, 10, 13), float32]) */;
  %977 = %976.0;
  (%977,)
}

def @func_12536() -> (bool, Tensor[(7, 10, 13), float32]) {
  %978 = @func_1318() /* ty=(Tensor[(7, 10, 13), float32], Tensor[(7, 10, 13), float32]) */;
  %979 = @func_8286() /* ty=bool */;
  %980 = %978.1;
  (%979, %980)
}

def @func_5010() -> (Tensor[(7, 10, 13), float64],) {
  %981 = @func_4701() /* ty=Tensor[(7, 10, 13), float64] */;
  (%981,)
}

def @func_4779(%var_4774: Tensor[(2, 1680), float64], %var_4775: Tensor[(546), float32], %var_4776: Tensor[(96), float64]) -> (Tensor[(7, 10, 13), float32], bool, Tensor[(24, 1), float32], Tensor[(2, 1680), float64], Tensor[(546), float32], Tensor[(96), float64]) {
  %982 = @func_2530() /* ty=(Tensor[(7, 10, 13), float32],) */;
  %983 = cast(%var_4774, dtype="float64") /* ty=Tensor[(2, 1680), float64] */;
  %984 = cast(%var_4775, dtype="float32") /* ty=Tensor[(546), float32] */;
  %985 = cast(%var_4776, dtype="float64") /* ty=Tensor[(96), float64] */;
  %986 = reshape(%983, newshape=[420, 8]) /* ty=Tensor[(420, 8), float64] */;
  %987 = reshape(%984, newshape=[546]) /* ty=Tensor[(546), float32] */;
  %988 = reshape(%985, newshape=[96]) /* ty=Tensor[(96), float64] */;
  %989 = @func_3518(%986, %987, %988) /* ty=(Tensor[(7, 10, 13), float32], Tensor[(7, 10, 13), float32], Tensor[(7, 10, 13), float32], Tensor[(24, 1), float32], Tensor[(420, 8), float64], Tensor[(546), float32], Tensor[(96), float64], bool, Tensor[(7, 10, 13), float64], Tensor[(280), float32]) */;
  %990 = %982.0;
  %991 = @func_4112() /* ty=bool */;
  %992 = %989.3;
  (%990, %991, %992, %var_4774, %var_4775, %var_4776)
}

def @func_11175() -> (Tensor[(910), float32], Tensor[(7, 10, 13), bool]) {
  %993 = @func_1761() /* ty=(bool, Tensor[(7, 10, 13), float64], Tensor[(910), float32]) */;
  %994 = %993.2;
  %995 = cast(%994, dtype="float32") /* ty=Tensor[(910), float32] */;
  %996 = reshape(%995, newshape=[7, 10, 13]) /* ty=Tensor[(7, 10, 13), float32] */;
  %997 = @func_2202(%996) /* ty=(Tensor[(7, 10, 13), bool], Tensor[(8, 16, 9), float64], Tensor[(1152), float64]) */;
  %998 = %997.0;
  (%994, %998)
}

def @func_4928() -> bool {
  @func_1694() /* ty=bool */
}

def @func_12657() -> Tensor[(96), float64] {
  %999 = @func_8355() /* ty=(Tensor[(96), float64], Tensor[(7, 10, 13), float64], Tensor[(910), float32]) */;
  %999.0
}

def @func_6975() -> (Tensor[(7, 10, 13), float32],) {
  %1000 = @func_1426() /* ty=(Tensor[(7, 10, 13), float32], Tensor[(1, 4), bool], bool) */;
  %1001 = %1000.0;
  (%1001,)
}

def @func_1657(%var_1646: Tensor[(7, 10, 13), float32]) -> (Tensor[(7, 10, 13), float64],) {
  %1002 = @func_1369() /* ty=(Tensor[(7, 10, 13), float32], Tensor[(7, 10, 13), float32]) */;
  %1003 = %1002.1;
  %1004 = cast(%var_1646, dtype="int16") /* ty=Tensor[(7, 10, 13), int16] */;
  %1005 = shape_of(%1003, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1006 = cast(%1003, dtype="int16") /* ty=Tensor[(7, 10, 13), int16] */;
  %1007 = dyn.reshape(%1004, %1005, newshape=[]) /* ty=Tensor[(?, ?, ?), int16] */;
  %1008 = bitwise_xor(%1006, %1007) /* ty=Tensor[(7, 10, 13), int16] */;
  %1009 = cast(%1008, dtype="float64") /* ty=Tensor[(7, 10, 13), float64] */;
  %1010 = log(%1009) /* ty=Tensor[(7, 10, 13), float64] */;
  (%1010,)
}

def @func_4588() -> (Tensor[(7, 10, 13), uint8], Tensor[(1, 4), bool], Tensor[(7, 10, 13), float64], Tensor[(7, 10, 13), float64], Tensor[(910), float32], Tensor[(7, 10, 13), float64]) {
  %1011 = @func_1858() /* ty=(Tensor[(7, 10, 13), float64], Tensor[(7, 10, 13), float32]) */;
  %1012 = %1011.1;
  %1013 = @func_1502() /* ty=(Tensor[(7, 10, 13), float64],) */;
  %1014 = %1013.0;
  %1015 = cast(%1014, dtype="uint8") /* ty=Tensor[(7, 10, 13), uint8] */;
  %1016 = shape_of(%1012, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1017 = cast(%1012, dtype="uint8") /* ty=Tensor[(7, 10, 13), uint8] */;
  %1018 = dyn.reshape(%1015, %1016, newshape=[]) /* ty=Tensor[(?, ?, ?), uint8] */;
  %1019 = @func_1426() /* ty=(Tensor[(7, 10, 13), float32], Tensor[(1, 4), bool], bool) */;
  %1020 = @func_3950() /* ty=(bool, Tensor[(7, 10, 13), float64], Tensor[(7, 10, 13), float32]) */;
  %1021 = @func_1502() /* ty=(Tensor[(7, 10, 13), float64],) */;
  %1022 = @func_1761() /* ty=(bool, Tensor[(7, 10, 13), float64], Tensor[(910), float32]) */;
  %1023 = %1020.1;
  %1024 = cast(%1023, dtype="float32") /* ty=Tensor[(7, 10, 13), float32] */;
  %1025 = reshape(%1024, newshape=[7, 10, 13]) /* ty=Tensor[(7, 10, 13), float32] */;
  %1026 = @func_1657(%1025) /* ty=(Tensor[(7, 10, 13), float64],) */;
  %1027 = bitwise_and(%1017, %1018) /* ty=Tensor[(7, 10, 13), uint8] */;
  %1028 = %1019.1;
  %1029 = %1021.0;
  %1030 = %1022.2;
  %1031 = %1026.0;
  (%1027, %1028, %1023, %1029, %1030, %1031)
}

def @func_5313(%var_5301: Tensor[(3, 4, 3), float32], %var_5302: Tensor[(3, 4, 3), float32]) -> Tensor[(3, 4, 3), float32] {
  %1032 = cast(%var_5302, dtype="float32") /* ty=Tensor[(3, 4, 3), float32] */;
  %1033 = shape_of(%var_5301, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1034 = cast(%var_5301, dtype="float32") /* ty=Tensor[(3, 4, 3), float32] */;
  %1035 = dyn.reshape(%1032, %1033, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  power(%1034, %1035) /* ty=Tensor[(3, 4, 3), float32] */
}

def @func_5628() -> (bool,) {
  %1036 = @func_2572() /* ty=(bool,) */;
  %1037 = %1036.0;
  (%1037,)
}

def @func_12190(%var_12179: Tensor[(672), float64]) -> (Tensor[(7, 10, 13), float64], Tensor[(7, 10, 13), float64], Tensor[(3, 14, 16), float64], Tensor[(672), float64], bool) {
  %1038 = @func_4588() /* ty=(Tensor[(7, 10, 13), uint8], Tensor[(1, 4), bool], Tensor[(7, 10, 13), float64], Tensor[(7, 10, 13), float64], Tensor[(910), float32], Tensor[(7, 10, 13), float64]) */;
  %1039 = @func_5608() /* ty=(Tensor[(7, 10, 13), float64],) */;
  %1040 = cast(%var_12179, dtype="float64") /* ty=Tensor[(672), float64] */;
  %1041 = reshape(%1040, newshape=[3, 14, 16]) /* ty=Tensor[(3, 14, 16), float64] */;
  %1042 = @func_7287(%1041) /* ty=(Tensor[(10, 16, 3), float64], Tensor[(480), float64], Tensor[(3, 14, 16), float64]) */;
  %1043 = @func_8483() /* ty=(bool, Tensor[(14, 15, 16), float64]) */;
  %1044 = %1038.5;
  %1045 = %1039.0;
  %1046 = %1042.2;
  %1047 = %1043.0;
  (%1044, %1045, %1046, %var_12179, %1047)
}

def @func_13122() -> (Tensor[(7, 10, 13), float64],) {
  %1048 = @func_4701() /* ty=Tensor[(7, 10, 13), float64] */;
  (%1048,)
}

def @func_7097() -> (bool, Tensor[(7, 10, 13), float32], Tensor[(7, 10, 13), float32], Tensor[(1001), float32], Tensor[(4, 4), bool]) {
  %1049 = @func_5245() /* ty=(bool,) */;
  %1050 = @func_3950() /* ty=(bool, Tensor[(7, 10, 13), float64], Tensor[(7, 10, 13), float32]) */;
  %1051 = @func_2530() /* ty=(Tensor[(7, 10, 13), float32],) */;
  %1052 = %1049.0;
  %1053 = cast(%1052, dtype="bool") /* ty=bool */;
  %1054 = cast(meta[relay.Constant][55] /* ty=Tensor[(4, 4), bool] */, dtype="bool") /* ty=Tensor[(4, 4), bool] */;
  %1055 = reshape(%1053, newshape=[]) /* ty=bool */;
  %1056 = reshape(%1054, newshape=[1, 4, 4]) /* ty=Tensor[(1, 4, 4), bool] */;
  %1057 = @func_4153(%1055, %1056) /* ty=(Tensor[(1, 4, 4), bool], Tensor[(11, 7, 13), float32], Tensor[(1001), float32]) */;
  %1058 = %1050.2;
  %1059 = %1051.0;
  %1060 = %1057.2;
  (%1052, %1058, %1059, %1060, meta[relay.Constant][55] /* ty=Tensor[(4, 4), bool] */)
}

def @func_1858() -> (Tensor[(7, 10, 13), float64], Tensor[(7, 10, 13), float32]) {
  %1061 = @func_1797() /* ty=(Tensor[(7, 10, 13), float64],) */;
  %1062 = @func_1369() /* ty=(Tensor[(7, 10, 13), float32], Tensor[(7, 10, 13), float32]) */;
  %1063 = %1061.0;
  %1064 = %1062.0;
  (%1063, %1064)
}

def @func_126(%var_71: Tensor[(4, 1, 6), float32]) -> (Tensor[(4, ?, 6), int32], Tensor[(4, ?, 6), int8]) {
  %1065 = cast(%var_71, dtype="float32") /* ty=Tensor[(4, 1, 6), float32] */;
  %1066 = atan(%1065) /* ty=Tensor[(4, 1, 6), float32] */;
  %1067 = cast(%var_71, dtype="int32") /* ty=Tensor[(4, 1, 6), int32] */;
  %1068 = shape_of(%1066, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1069 = cast(%1066, dtype="int32") /* ty=Tensor[(4, 1, 6), int32] */;
  %1070 = dyn.reshape(%1067, %1068, newshape=[]) /* ty=Tensor[(?, ?, ?), int32] */;
  %1071 = cast(%1066, dtype="float64") /* ty=Tensor[(4, 1, 6), float64] */;
  %1072 = sqrt(%1071) /* ty=Tensor[(4, 1, 6), float64] */;
  %1073 = cast(%var_71, dtype="int8") /* ty=Tensor[(4, 1, 6), int8] */;
  %1074 = shape_of(%1072, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1075 = cast(%1072, dtype="int8") /* ty=Tensor[(4, 1, 6), int8] */;
  %1076 = dyn.reshape(%1073, %1074, newshape=[]) /* ty=Tensor[(?, ?, ?), int8] */;
  %1077 = add(%1069, %1070) /* ty=Tensor[(4, ?, 6), int32] */;
  %1078 = minimum(%1075, %1076) /* ty=Tensor[(4, ?, 6), int8] */;
  (%1077, %1078)
}

def @func_842(%var_757: Tensor[(16, 2, 3), float64], %var_790: Tensor[(546), float32], %var_791: Tensor[(12, 2), float32], %var_792: Tensor[(192), int8]) -> (Tensor[(16, 2, 3), float64], Tensor[(4, 8, 6), float32], Tensor[(546), float32], Tensor[(12, 2), float32], Tensor[(192), int8], Tensor[(6, 4), float32]) {
  %1079 = cast(%var_757, dtype="float64") /* ty=Tensor[(16, 2, 3), float64] */;
  %1080 = cast(%var_790, dtype="float32") /* ty=Tensor[(546), float32] */;
  %1081 = cast(%var_791, dtype="float32") /* ty=Tensor[(12, 2), float32] */;
  %1082 = cast(%var_792, dtype="int8") /* ty=Tensor[(192), int8] */;
  %1083 = reshape(%1080, newshape=[3, 13, 14]) /* ty=Tensor[(3, 13, 14), float32] */;
  %1084 = reshape(%1081, newshape=[6, 4]) /* ty=Tensor[(6, 4), float32] */;
  %1085 = reshape(%1082, newshape=[4, 8, 6]) /* ty=Tensor[(4, 8, 6), int8] */;
  %1086 = @func_247(%1083, %1084, %1085) /* ty=(Tensor[(6, 4), float32], Tensor[(4, ?, 6), int8], Tensor[(4, ?, 6), int32], Tensor[(4, 8, 6), float32], Tensor[(4, ?, 6), int8], Tensor[(3, 13, 14), float64]) */;
  %1087 = cast(%var_790, dtype="float32") /* ty=Tensor[(546), float32] */;
  %1088 = cast(%var_791, dtype="float32") /* ty=Tensor[(12, 2), float32] */;
  %1089 = cast(%var_792, dtype="int8") /* ty=Tensor[(192), int8] */;
  %1090 = reshape(%1087, newshape=[3, 13, 14]) /* ty=Tensor[(3, 13, 14), float32] */;
  %1091 = reshape(%1088, newshape=[6, 4]) /* ty=Tensor[(6, 4), float32] */;
  %1092 = reshape(%1089, newshape=[4, 8, 6]) /* ty=Tensor[(4, 8, 6), int8] */;
  %1093 = @func_247(%1090, %1091, %1092) /* ty=(Tensor[(6, 4), float32], Tensor[(4, ?, 6), int8], Tensor[(4, ?, 6), int32], Tensor[(4, 8, 6), float32], Tensor[(4, ?, 6), int8], Tensor[(3, 13, 14), float64]) */;
  %1094 = atanh(%1079) /* ty=Tensor[(16, 2, 3), float64] */;
  %1095 = %1086.3;
  %1096 = %1093.0;
  (%1094, %1095, %var_790, %var_791, %var_792, %1096)
}

def @func_2620(%var_2577: Tensor[(8, 7, 5), float32], %var_2591: Tensor[(24, 8), int8]) -> (Tensor[(8, 7, 5), int16], Tensor[(7, 10, 13), float32], Tensor[(12, 2), float32], Tensor[(96), float64], Tensor[(546), float32], Tensor[(6, 4), float32], Tensor[(24, 8), int8], Tensor[(12, 2), float32], Tensor[(7, 10, 13), float32]) {
  %1097 = cast(5.83192f /* ty=float32 */, dtype="float32") /* ty=float32 */;
  %1098 = cast(%var_2577, dtype="float32") /* ty=Tensor[(8, 7, 5), float32] */;
  %1099 = mod(%1097, %1098) /* ty=Tensor[(8, 7, 5), float32] */;
  %1100 = cast(%1099, dtype="int16") /* ty=Tensor[(8, 7, 5), int16] */;
  %1101 = shape_of(%var_2577, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1102 = cast(%var_2577, dtype="int16") /* ty=Tensor[(8, 7, 5), int16] */;
  %1103 = dyn.reshape(%1100, %1101, newshape=[]) /* ty=Tensor[(?, ?, ?), int16] */;
  %1104 = @func_1369() /* ty=(Tensor[(7, 10, 13), float32], Tensor[(7, 10, 13), float32]) */;
  %1105 = cast(meta[relay.Constant][56] /* ty=Tensor[(96), float64] */, dtype="float64") /* ty=Tensor[(96), float64] */;
  %1106 = cast(meta[relay.Constant][57] /* ty=Tensor[(546), float32] */, dtype="float32") /* ty=Tensor[(546), float32] */;
  %1107 = cast(meta[relay.Constant][58] /* ty=Tensor[(6, 4), float32] */, dtype="float32") /* ty=Tensor[(6, 4), float32] */;
  %1108 = cast(%var_2591, dtype="int8") /* ty=Tensor[(24, 8), int8] */;
  %1109 = reshape(%1105, newshape=[16, 2, 3]) /* ty=Tensor[(16, 2, 3), float64] */;
  %1110 = reshape(%1106, newshape=[546]) /* ty=Tensor[(546), float32] */;
  %1111 = reshape(%1107, newshape=[12, 2]) /* ty=Tensor[(12, 2), float32] */;
  %1112 = reshape(%1108, newshape=[192]) /* ty=Tensor[(192), int8] */;
  %1113 = @func_842(%1109, %1110, %1111, %1112) /* ty=(Tensor[(16, 2, 3), float64], Tensor[(4, 8, 6), float32], Tensor[(546), float32], Tensor[(12, 2), float32], Tensor[(192), int8], Tensor[(6, 4), float32]) */;
  %1114 = cast(meta[relay.Constant][56] /* ty=Tensor[(96), float64] */, dtype="float64") /* ty=Tensor[(96), float64] */;
  %1115 = cast(meta[relay.Constant][57] /* ty=Tensor[(546), float32] */, dtype="float32") /* ty=Tensor[(546), float32] */;
  %1116 = cast(meta[relay.Constant][58] /* ty=Tensor[(6, 4), float32] */, dtype="float32") /* ty=Tensor[(6, 4), float32] */;
  %1117 = cast(%var_2591, dtype="int8") /* ty=Tensor[(24, 8), int8] */;
  %1118 = reshape(%1114, newshape=[16, 2, 3]) /* ty=Tensor[(16, 2, 3), float64] */;
  %1119 = reshape(%1115, newshape=[546]) /* ty=Tensor[(546), float32] */;
  %1120 = reshape(%1116, newshape=[12, 2]) /* ty=Tensor[(12, 2), float32] */;
  %1121 = reshape(%1117, newshape=[192]) /* ty=Tensor[(192), int8] */;
  %1122 = @func_842(%1118, %1119, %1120, %1121) /* ty=(Tensor[(16, 2, 3), float64], Tensor[(4, 8, 6), float32], Tensor[(546), float32], Tensor[(12, 2), float32], Tensor[(192), int8], Tensor[(6, 4), float32]) */;
  %1123 = @func_1232() /* ty=(Tensor[(7, 10, 13), float32],) */;
  %1124 = logical_xor(%1102, %1103) /* ty=Tensor[(8, 7, 5), int16] */;
  %1125 = %1104.1;
  %1126 = %1113.3;
  %1127 = %1122.3;
  %1128 = %1123.0;
  (%1124, %1125, %1126, meta[relay.Constant][56] /* ty=Tensor[(96), float64] */, meta[relay.Constant][57] /* ty=Tensor[(546), float32] */, meta[relay.Constant][58] /* ty=Tensor[(6, 4), float32] */, %var_2591, %1127, %1128)
}

def @func_11602(%var_11587: Tensor[(7, 10, 3), float32]) -> (Tensor[(7, 10, 3), float32],) {
  %1129 = cast(%var_11587, dtype="float32") /* ty=Tensor[(7, 10, 3), float32] */;
  %1130 = asinh(%1129) /* ty=Tensor[(7, 10, 3), float32] */;
  (%1130,)
}

def @func_8926(%var_8907: Tensor[(24), float32], %var_8908: Tensor[(280), float32]) -> (Tensor[(7, 10, 13), float32], Tensor[(4, ?, 6), bool], Tensor[(24), float32], Tensor[(280), float32], Tensor[(7, 10, 13), float64]) {
  %1131 = @func_1318() /* ty=(Tensor[(7, 10, 13), float32], Tensor[(7, 10, 13), float32]) */;
  %1132 = cast(%var_8907, dtype="float32") /* ty=Tensor[(24), float32] */;
  %1133 = cast(%var_8908, dtype="float32") /* ty=Tensor[(280), float32] */;
  %1134 = reshape(%1132, newshape=[24]) /* ty=Tensor[(24), float32] */;
  %1135 = reshape(%1133, newshape=[280]) /* ty=Tensor[(280), float32] */;
  %1136 = @func_3129(%1134, %1135) /* ty=(Tensor[(7, 10, 13), float64], Tensor[(280), float32], Tensor[(192), int8], Tensor[(24, 8), float32], Tensor[(4, ?, 6), bool]) */;
  %1137 = %1131.1;
  %1138 = %1136.4;
  %1139 = @func_1704() /* ty=Tensor[(7, 10, 13), float64] */;
  (%1137, %1138, %var_8907, %var_8908, %1139)
}

def @func_6229() -> (bool,) {
  %1140 = @func_4312() /* ty=(bool,) */;
  %1141 = %1140.0;
  (%1141,)
}

def @func_9512() -> bool {
  %1142 = @func_8483() /* ty=(bool, Tensor[(14, 15, 16), float64]) */;
  %1142.0
}

def @func_12946() -> Tensor[(7, 10, 13), float64] {
  %1143 = @func_7920() /* ty=(Tensor[(11, 15, 9), float32], Tensor[(7, 10, 13), float64]) */;
  %1143.1
}

def @func_4659() -> (bool, Tensor[(7, 10, 13), float64]) {
  %1144 = @func_3950() /* ty=(bool, Tensor[(7, 10, 13), float64], Tensor[(7, 10, 13), float32]) */;
  %1145 = %1144.2;
  %1146 = cast(%1145, dtype="float64") /* ty=Tensor[(7, 10, 13), float64] */;
  %1147 = @func_3186() /* ty=bool */;
  %1148 = tan(%1146) /* ty=Tensor[(7, 10, 13), float64] */;
  (%1147, %1148)
}

def @func_6375(%var_6346: Tensor[(6, 4), float32], %var_6347: Tensor[(280), float32]) -> (bool, Tensor[(7, 10, 13), float64], Tensor[(6, 4), float32], Tensor[(280), float32], bool) {
  %1149 = @func_6229() /* ty=(bool,) */;
  %1150 = cast(%var_6346, dtype="float32") /* ty=Tensor[(6, 4), float32] */;
  %1151 = cast(%var_6347, dtype="float32") /* ty=Tensor[(280), float32] */;
  %1152 = reshape(%1150, newshape=[2, 12]) /* ty=Tensor[(2, 12), float32] */;
  %1153 = reshape(%1151, newshape=[70, 4]) /* ty=Tensor[(70, 4), float32] */;
  %1154 = @func_4998(%1152, %1153) /* ty=(Tensor[(7, 10, 13), float64], Tensor[(2, 12), float32], Tensor[(70, 4), uint16]) */;
  %1155 = @func_5839() /* ty=(bool,) */;
  %1156 = %1149.0;
  %1157 = %1154.0;
  %1158 = %1155.0;
  (%1156, %1157, %var_6346, %var_6347, %1158)
}

def @func_6564(%var_6554: Tensor[(3, 12), float32]) -> (Tensor[(7, 10, 13), float64], Tensor[(546), float32], Tensor[(4, ?, 6), int32], Tensor[(24), float32], Tensor[(3, 4, 3), float32], Tensor[(3, 12), float32], Tensor[(7, 10, 13), float64]) {
  %1159 = @func_4407() /* ty=(Tensor[(7, 10, 13), float64], Tensor[(7, 10, 13), float64]) */;
  %1160 = @func_5177() /* ty=(Tensor[(7, 10, 13), float64], bool, Tensor[(96), float64], Tensor[(3360), float64], Tensor[(546), float32], Tensor[(96), float64], Tensor[(7, 10, 13), float64]) */;
  %1161 = cast(meta[relay.Constant][59] /* ty=Tensor[(24), float32] */, dtype="float32") /* ty=Tensor[(24), float32] */;
  %1162 = reshape(%1161, newshape=[4, 1, 6]) /* ty=Tensor[(4, 1, 6), float32] */;
  %1163 = @func_126(%1162) /* ty=(Tensor[(4, ?, 6), int32], Tensor[(4, ?, 6), int8]) */;
  %1164 = cast(%var_6554, dtype="float32") /* ty=Tensor[(3, 12), float32] */;
  %1165 = cast(%var_6554, dtype="float32") /* ty=Tensor[(3, 12), float32] */;
  %1166 = reshape(%1164, newshape=[3, 4, 3]) /* ty=Tensor[(3, 4, 3), float32] */;
  %1167 = reshape(%1165, newshape=[3, 4, 3]) /* ty=Tensor[(3, 4, 3), float32] */;
  %1168 = @func_5177() /* ty=(Tensor[(7, 10, 13), float64], bool, Tensor[(96), float64], Tensor[(3360), float64], Tensor[(546), float32], Tensor[(96), float64], Tensor[(7, 10, 13), float64]) */;
  %1169 = %1159.1;
  %1170 = %1160.4;
  %1171 = %1163.0;
  %1172 = @func_5313(%1166, %1167) /* ty=Tensor[(3, 4, 3), float32] */;
  %1173 = %1168.0;
  (%1169, %1170, %1171, meta[relay.Constant][59] /* ty=Tensor[(24), float32] */, %1172, %var_6554, %1173)
}

def @func_3230() -> bool {
  @func_2272() /* ty=bool */
}

def @func_2048() -> (Tensor[(7, 10, 13), float32], Tensor[(7, 10, 13), float64]) {
  %1174 = @func_1232() /* ty=(Tensor[(7, 10, 13), float32],) */;
  %1175 = %1174.0;
  %1176 = cast(%1175, dtype="float32") /* ty=Tensor[(7, 10, 13), float32] */;
  %1177 = reshape(%1176, newshape=[7, 10, 13]) /* ty=Tensor[(7, 10, 13), float32] */;
  %1178 = @func_1657(%1177) /* ty=(Tensor[(7, 10, 13), float64],) */;
  %1179 = %1178.0;
  (%1175, %1179)
}

def @func_1694() -> bool {
  %1180 = @func_1426() /* ty=(Tensor[(7, 10, 13), float32], Tensor[(1, 4), bool], bool) */;
  %1180.2
}

def @func_4357() -> (bool,) {
  %1181 = @func_2272() /* ty=bool */;
  (%1181,)
}

def @func_9437() -> Tensor[(7, 10, 13), float64] {
  @func_4277() /* ty=Tensor[(7, 10, 13), float64] */
}

def @func_4807() -> (Tensor[(7, 10, 13), float64],) {
  %1182 = @func_4277() /* ty=Tensor[(7, 10, 13), float64] */;
  (%1182,)
}

def @func_4899(%var_4863: Tensor[(2, 576), float64]) -> (Tensor[(7, 10, 13), float32], Tensor[(8, 16, 9), float64], Tensor[(2, 576), float64], bool, Tensor[(360), uint64]) {
  %1183 = @func_1318() /* ty=(Tensor[(7, 10, 13), float32], Tensor[(7, 10, 13), float32]) */;
  %1184 = cast(%var_4863, dtype="float64") /* ty=Tensor[(2, 576), float64] */;
  %1185 = reshape(%1184, newshape=[8, 16, 9]) /* ty=Tensor[(8, 16, 9), float64] */;
  %1186 = cast(meta[relay.Constant][60] /* ty=Tensor[(360), uint64] */, dtype="uint64") /* ty=Tensor[(360), uint64] */;
  %1187 = cast(meta[relay.Constant][60] /* ty=Tensor[(360), uint64] */, dtype="uint64") /* ty=Tensor[(360), uint64] */;
  %1188 = reshape(%1186, newshape=[10, 6, 6]) /* ty=Tensor[(10, 6, 6), uint64] */;
  %1189 = reshape(%1187, newshape=[10, 6, 6]) /* ty=Tensor[(10, 6, 6), uint64] */;
  %1190 = @func_3894(%1188, %1189) /* ty=(Tensor[(10, 6, 6), bool], Tensor[(10, 6, 6), float32], bool, Tensor[(7, 10, 13), float64], Tensor[(7, 12, 6), float64]) */;
  %1191 = %1183.1;
  %1192 = @func_1403(%1185) /* ty=Tensor[(8, 16, 9), float64] */;
  %1193 = %1190.2;
  (%1191, %1192, %var_4863, %1193, meta[relay.Constant][60] /* ty=Tensor[(360), uint64] */)
}

def @func_3809() -> bool {
  @func_2272() /* ty=bool */
}

def @func_6775(%var_6731: Tensor[(9, 14, 3), float64]) -> (Tensor[(9, 14, 3), float64], Tensor[(9, 14, 3), uint32], bool, Tensor[(9, 14, 3), float32]) {
  %1194 = cast(%var_6731, dtype="float64") /* ty=Tensor[(9, 14, 3), float64] */;
  %1195 = cast(%var_6731, dtype="float64") /* ty=Tensor[(9, 14, 3), float64] */;
  %1196 = log10(%1195) /* ty=Tensor[(9, 14, 3), float64] */;
  %1197 = @func_5245() /* ty=(bool,) */;
  %1198 = %1197.0;
  %1199 = cast(%1196, dtype="uint32") /* ty=Tensor[(9, 14, 3), uint32] */;
  %1200 = cast(%1198, dtype="uint32") /* ty=uint32 */;
  %1201 = cast(%var_6731, dtype="float32") /* ty=Tensor[(9, 14, 3), float32] */;
  %1202 = sigmoid(%1194) /* ty=Tensor[(9, 14, 3), float64] */;
  %1203 = right_shift(%1199, %1200) /* ty=Tensor[(9, 14, 3), uint32] */;
  %1204 = @func_3809() /* ty=bool */;
  %1205 = asinh(%1201) /* ty=Tensor[(9, 14, 3), float32] */;
  (%1202, %1203, %1204, %1205)
}

def @func_6287() -> (Tensor[(2, 5, 16), float32], Tensor[(2, 5, 16), float32]) {
  %1206 = cast(meta[relay.Constant][62] /* ty=Tensor[(2, 5, 16), float32] */, dtype="float32") /* ty=Tensor[(2, 5, 16), float32] */;
  %1207 = shape_of(meta[relay.Constant][61] /* ty=Tensor[(2, 5, 16), float32] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1208 = cast(meta[relay.Constant][61] /* ty=Tensor[(2, 5, 16), float32] */, dtype="float32") /* ty=Tensor[(2, 5, 16), float32] */;
  %1209 = dyn.reshape(%1206, %1207, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %1210 = cast(meta[relay.Constant][63] /* ty=Tensor[(2, 5, 16), float32] */, dtype="float32") /* ty=Tensor[(2, 5, 16), float32] */;
  %1211 = shape_of(meta[relay.Constant][61] /* ty=Tensor[(2, 5, 16), float32] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1212 = cast(meta[relay.Constant][61] /* ty=Tensor[(2, 5, 16), float32] */, dtype="float32") /* ty=Tensor[(2, 5, 16), float32] */;
  %1213 = dyn.reshape(%1210, %1211, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %1214 = subtract(%1208, %1209) /* ty=Tensor[(2, 5, 16), float32] */;
  %1215 = mod(%1212, %1213) /* ty=Tensor[(2, 5, 16), float32] */;
  (%1214, %1215)
}

def @func_9621(%var_9591: Tensor[(3, 9, 11), float64], %var_9592: Tensor[(3, 9, 11), float64]) -> (bool, Tensor[(3, 9, 11), float32]) {
  %1216 = cast(%var_9592, dtype="float64") /* ty=Tensor[(3, 9, 11), float64] */;
  %1217 = shape_of(%var_9591, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1218 = cast(%var_9591, dtype="float64") /* ty=Tensor[(3, 9, 11), float64] */;
  %1219 = dyn.reshape(%1216, %1217, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %1220 = divide(%1218, %1219) /* ty=Tensor[(3, 9, 11), float64] */;
  %1221 = cast(%1220, dtype="float32") /* ty=Tensor[(3, 9, 11), float32] */;
  %1222 = @func_6714() /* ty=bool */;
  %1223 = rsqrt(%1221) /* ty=Tensor[(3, 9, 11), float32] */;
  (%1222, %1223)
}

def @func_12239() -> Tensor[(1, 4), bool] {
  %1224 = @func_1458() /* ty=(Tensor[(1, 4), bool],) */;
  %1224.0
}

def @func_13027(%var_12962: Tensor[(12, 15, 7), int64], %var_12995: Tensor[(96), float64], %var_13024: Tensor[(280), float32]) -> (Tensor[(12, 15, 7), float64], Tensor[(16, 2, 3), float64], Tensor[(96), float64], Tensor[(546), float32], Tensor[(24), float32], Tensor[(192), int8], bool, Tensor[(12, 15, 7), float64], Tensor[(280), float32], Tensor[(280), float32]) {
  %1225 = cast(%var_12962, dtype="int64") /* ty=Tensor[(12, 15, 7), int64] */;
  %1226 = shape_of(meta[relay.Constant][64] /* ty=Tensor[(12, 15, 7), int64] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1227 = cast(meta[relay.Constant][64] /* ty=Tensor[(12, 15, 7), int64] */, dtype="int64") /* ty=Tensor[(12, 15, 7), int64] */;
  %1228 = dyn.reshape(%1225, %1226, newshape=[]) /* ty=Tensor[(?, ?, ?), int64] */;
  %1229 = logical_xor(%1227, %1228) /* ty=Tensor[(12, 15, 7), int64] */;
  %1230 = cast(%1229, dtype="float64") /* ty=Tensor[(12, 15, 7), float64] */;
  %1231 = cast(%var_12995, dtype="float64") /* ty=Tensor[(96), float64] */;
  %1232 = cast(meta[relay.Constant][65] /* ty=Tensor[(546), float32] */, dtype="float32") /* ty=Tensor[(546), float32] */;
  %1233 = cast(meta[relay.Constant][66] /* ty=Tensor[(24), float32] */, dtype="float32") /* ty=Tensor[(24), float32] */;
  %1234 = cast(meta[relay.Constant][67] /* ty=Tensor[(192), int8] */, dtype="int8") /* ty=Tensor[(192), int8] */;
  %1235 = reshape(%1231, newshape=[16, 2, 3]) /* ty=Tensor[(16, 2, 3), float64] */;
  %1236 = reshape(%1232, newshape=[546]) /* ty=Tensor[(546), float32] */;
  %1237 = reshape(%1233, newshape=[12, 2]) /* ty=Tensor[(12, 2), float32] */;
  %1238 = reshape(%1234, newshape=[192]) /* ty=Tensor[(192), int8] */;
  %1239 = @func_842(%1235, %1236, %1237, %1238) /* ty=(Tensor[(16, 2, 3), float64], Tensor[(4, 8, 6), float32], Tensor[(546), float32], Tensor[(12, 2), float32], Tensor[(192), int8], Tensor[(6, 4), float32]) */;
  %1240 = @func_7872() /* ty=(bool, bool) */;
  %1241 = cast(meta[relay.Constant][64] /* ty=Tensor[(12, 15, 7), int64] */, dtype="float64") /* ty=Tensor[(12, 15, 7), float64] */;
  %1242 = cast(meta[relay.Constant][66] /* ty=Tensor[(24), float32] */, dtype="float32") /* ty=Tensor[(24), float32] */;
  %1243 = cast(%var_13024, dtype="float32") /* ty=Tensor[(280), float32] */;
  %1244 = reshape(%1242, newshape=[24]) /* ty=Tensor[(24), float32] */;
  %1245 = reshape(%1243, newshape=[280]) /* ty=Tensor[(280), float32] */;
  %1246 = @func_3129(%1244, %1245) /* ty=(Tensor[(7, 10, 13), float64], Tensor[(280), float32], Tensor[(192), int8], Tensor[(24, 8), float32], Tensor[(4, ?, 6), bool]) */;
  %1247 = sqrt(%1230) /* ty=Tensor[(12, 15, 7), float64] */;
  %1248 = %1239.0;
  %1249 = %1240.0;
  %1250 = exp(%1241) /* ty=Tensor[(12, 15, 7), float64] */;
  %1251 = %1246.1;
  (%1247, %1248, %var_12995, meta[relay.Constant][65] /* ty=Tensor[(546), float32] */, meta[relay.Constant][66] /* ty=Tensor[(24), float32] */, meta[relay.Constant][67] /* ty=Tensor[(192), int8] */, %1249, %1250, %1251, %var_13024)
}

def @func_5589(%var_5568: Tensor[(546), float32], %var_5569: Tensor[(8, 12), float64]) -> (Tensor[(3360), bool], Tensor[(7, 10, 13), float64], Tensor[(7, 10, 13), float64], bool, Tensor[(546), float32], Tensor[(8, 12), float64], Tensor[(4, 8, 6), float32], Tensor[(24), float32], Tensor[(8, 24), int8]) {
  %1252 = @func_5177() /* ty=(Tensor[(7, 10, 13), float64], bool, Tensor[(96), float64], Tensor[(3360), float64], Tensor[(546), float32], Tensor[(96), float64], Tensor[(7, 10, 13), float64]) */;
  %1253 = %1252.3;
  %1254 = cast(meta[relay.Constant][68] /* ty=Tensor[(3360), float64] */, dtype="bool") /* ty=Tensor[(3360), bool] */;
  %1255 = shape_of(%1253, dtype="int32") /* ty=Tensor[(1), int32] */;
  %1256 = cast(%1253, dtype="bool") /* ty=Tensor[(3360), bool] */;
  %1257 = dyn.reshape(%1254, %1255, newshape=[]) /* ty=Tensor[(?), bool] */;
  %1258 = @func_1858() /* ty=(Tensor[(7, 10, 13), float64], Tensor[(7, 10, 13), float32]) */;
  %1259 = @func_4002() /* ty=(Tensor[(7, 10, 13), float64],) */;
  %1260 = cast(%1253, dtype="float64") /* ty=Tensor[(3360), float64] */;
  %1261 = cast(%var_5568, dtype="float32") /* ty=Tensor[(546), float32] */;
  %1262 = cast(%var_5569, dtype="float64") /* ty=Tensor[(8, 12), float64] */;
  %1263 = reshape(%1260, newshape=[2, 1680]) /* ty=Tensor[(2, 1680), float64] */;
  %1264 = reshape(%1261, newshape=[546]) /* ty=Tensor[(546), float32] */;
  %1265 = reshape(%1262, newshape=[96]) /* ty=Tensor[(96), float64] */;
  %1266 = @func_4779(%1263, %1264, %1265) /* ty=(Tensor[(7, 10, 13), float32], bool, Tensor[(24, 1), float32], Tensor[(2, 1680), float64], Tensor[(546), float32], Tensor[(96), float64]) */;
  %1267 = cast(%var_5569, dtype="float64") /* ty=Tensor[(8, 12), float64] */;
  %1268 = cast(%var_5568, dtype="float32") /* ty=Tensor[(546), float32] */;
  %1269 = cast(meta[relay.Constant][69] /* ty=Tensor[(24), float32] */, dtype="float32") /* ty=Tensor[(24), float32] */;
  %1270 = cast(meta[relay.Constant][70] /* ty=Tensor[(8, 24), int8] */, dtype="int8") /* ty=Tensor[(8, 24), int8] */;
  %1271 = reshape(%1267, newshape=[16, 2, 3]) /* ty=Tensor[(16, 2, 3), float64] */;
  %1272 = reshape(%1268, newshape=[546]) /* ty=Tensor[(546), float32] */;
  %1273 = reshape(%1269, newshape=[12, 2]) /* ty=Tensor[(12, 2), float32] */;
  %1274 = reshape(%1270, newshape=[192]) /* ty=Tensor[(192), int8] */;
  %1275 = @func_842(%1271, %1272, %1273, %1274) /* ty=(Tensor[(16, 2, 3), float64], Tensor[(4, 8, 6), float32], Tensor[(546), float32], Tensor[(12, 2), float32], Tensor[(192), int8], Tensor[(6, 4), float32]) */;
  %1276 = logical_and(%1256, %1257) /* ty=Tensor[(3360), bool] */;
  %1277 = %1258.0;
  %1278 = %1259.0;
  %1279 = %1266.1;
  %1280 = %1275.1;
  (%1276, %1277, %1278, %1279, %var_5568, %var_5569, %1280, meta[relay.Constant][69] /* ty=Tensor[(24), float32] */, meta[relay.Constant][70] /* ty=Tensor[(8, 24), int8] */)
}

def @func_8580(%var_8547: Tensor[(2, 240), float64]) -> (Tensor[(7, 10, 13), float64], Tensor[(10, 16, 3), float64], Tensor[(2, 240), float64], bool, Tensor[(7, 10, 13), float32], Tensor[(1, 4), bool]) {
  %1281 = @func_5696() /* ty=(Tensor[(7, 10, 13), float64], Tensor[(7, 10, 13), float64]) */;
  %1282 = cast(%var_8547, dtype="float64") /* ty=Tensor[(2, 240), float64] */;
  %1283 = reshape(%1282, newshape=[10, 16, 3]) /* ty=Tensor[(10, 16, 3), float64] */;
  %1284 = @func_7872() /* ty=(bool, bool) */;
  %1285 = @func_1369() /* ty=(Tensor[(7, 10, 13), float32], Tensor[(7, 10, 13), float32]) */;
  %1286 = @func_4196() /* ty=(Tensor[(1, 4), bool],) */;
  %1287 = %1281.0;
  %1288 = @func_4815(%1283) /* ty=Tensor[(10, 16, 3), float64] */;
  %1289 = %1284.1;
  %1290 = %1285.0;
  %1291 = %1286.0;
  (%1287, %1288, %var_8547, %1289, %1290, %1291)
}

def @func_11037() -> (Tensor[(7, 10, 13), float32], bool, bool) {
  %1292 = @func_3950() /* ty=(bool, Tensor[(7, 10, 13), float64], Tensor[(7, 10, 13), float32]) */;
  %1293 = @func_2292() /* ty=(Tensor[(7, 10, 13), float32], bool) */;
  %1294 = %1292.2;
  %1295 = %1293.1;
  %1296 = @func_3186() /* ty=bool */;
  (%1294, %1295, %1296)
}

def @func_5480() -> Tensor[(7, 10, 13), float64] {
  %1297 = @func_1502() /* ty=(Tensor[(7, 10, 13), float64],) */;
  %1297.0
}

/* For debugging purposes the metadata section has been omitted.
 * If you would like to see the full metadata section you can set the 
 * option to `True` when invoking `astext`. 
 */
===================================
==========mutated_mod==========
#[version = "0.0.5"]
def @func_2048() -> (Tensor[(7, 10, 13), float32], Tensor[(7, 10, 13), float64]) {
  %0 = @func_1232() /* ty=(Tensor[(7, 10, 13), float32],) */;
  %1 = %0.0;
  %2 = cast(%1, dtype="float32") /* ty=Tensor[(7, 10, 13), float32] */;
  %3 = reshape(%2, newshape=[7, 10, 13]) /* ty=Tensor[(7, 10, 13), float32] */;
  %4 = @func_1657(%3) /* ty=(Tensor[(7, 10, 13), float64],) */;
  %5 = %4.0;
  (%1, %5)
}

def @func_4458(%var_4446: Tensor[(16), bool]) -> (Tensor[(7, 10, 13), float32], Tensor[(1001), float32], bool, Tensor[(16), bool]) {
  %6 = @func_3682() /* ty=(bool, Tensor[(4, ?, 6), int8], Tensor[(24), float32], Tensor[(7, 10, 13), float32], Tensor[(7, 10, 13), float32], Tensor[(910), float32]) */;
  %7 = cast(False /* ty=bool */, dtype="bool") /* ty=bool */;
  %8 = cast(%var_4446, dtype="bool") /* ty=Tensor[(16), bool] */;
  %9 = reshape(%7, newshape=[]) /* ty=bool */;
  %10 = reshape(%8, newshape=[1, 4, 4]) /* ty=Tensor[(1, 4, 4), bool] */;
  %11 = @func_4153(%9, %10) /* ty=(Tensor[(1, 4, 4), bool], Tensor[(11, 7, 13), float32], Tensor[(1001), float32]) */;
  %12 = %6.4;
  %13 = %11.2;
  (%12, %13, False /* ty=bool */, %var_4446)
}

def @func_11702() -> (Tensor[(1, 4), bool], Tensor[(7, 10, 13), float64], Tensor[(14, 15, 16), float64]) {
  %19 = fn () -> (Tensor[(1, 4), bool], Tensor[(7, 10, 13), float64], Tensor[(14, 15, 16), float64]) {
    %14 = @func_10485() /* ty=(Tensor[(1, 4), bool],) */;
    %15 = @func_5294() /* ty=(Tensor[(1, 4), bool], Tensor[(7, 10, 13), float64], Tensor[(14, 15, 16), float64], Tensor[(3360), float64], Tensor[(300, 1), float32], Tensor[(24), float32]) */;
    %16 = %14.0;
    %17 = @func_9437() /* ty=Tensor[(7, 10, 13), float64] */;
    %18 = %15.2;
    (%16, %17, %18)
  };
  %19() /* ty=(Tensor[(1, 4), bool], Tensor[(7, 10, 13), float64], Tensor[(14, 15, 16), float64]) */
}

def @func_12892() -> (Tensor[(96), float64], Tensor[(7, 10, 13), float64]) {
  %22 = fn () -> (Tensor[(96), float64], Tensor[(7, 10, 13), float64]) {
    %20 = @func_9915() /* ty=Tensor[(96), float64] */;
    %21 = @func_6153() /* ty=Tensor[(7, 10, 13), float64] */;
    (%20, %21)
  };
  %22() /* ty=(Tensor[(96), float64], Tensor[(7, 10, 13), float64]) */
}

def @func_10988() -> (bool,) {
  %25 = fn () -> (bool,) {
    %23 = @func_9895() /* ty=(bool,) */;
    %24 = %23.0;
    (%24,)
  };
  %25() /* ty=(bool,) */
}

def @func_1426() -> (Tensor[(7, 10, 13), float32], Tensor[(1, 4), bool], bool) {
  %26 = @func_1369() /* ty=(Tensor[(7, 10, 13), float32], Tensor[(7, 10, 13), float32]) */;
  %27 = cast(True /* ty=bool */, dtype="bool") /* ty=bool */;
  %28 = reshape(%27, newshape=[]) /* ty=bool */;
  %29 = @func_1118(%28) /* ty=(Tensor[(1, 4), bool],) */;
  %30 = %26.0;
  %31 = %29.0;
  (%30, %31, True /* ty=bool */)
}

def @func_1459() -> (Tensor[(1, 4), bool],) {
  %34 = fn () -> (Tensor[(1, 4), bool],) {
    %32 = @func_1426() /* ty=(Tensor[(7, 10, 13), float32], Tensor[(1, 4), bool], bool) */;
    %33 = %32.1;
    (%33,)
  };
  %34() /* ty=(Tensor[(1, 4), bool],) */
}

def @func_12294() -> (bool, Tensor[(7, 10, 13), float64], bool) {
  %39 = fn () -> (bool, Tensor[(7, 10, 13), float64], bool) {
    %35 = @func_4848() /* ty=(Tensor[(1, 4), bool], bool) */;
    %36 = @func_6714() /* ty=bool */;
    %37 = @func_1704() /* ty=Tensor[(7, 10, 13), float64] */;
    %38 = %35.1;
    (%36, %37, %38)
  };
  %39() /* ty=(bool, Tensor[(7, 10, 13), float64], bool) */
}

def @func_3811() -> bool {
  @func_3809() /* ty=bool */
}

def @func_4815(%var_4810: Tensor[(10, 16, 3), float64]) -> Tensor[(10, 16, 3), float64] {
  %40 = cast(%var_4810, dtype="float64") /* ty=Tensor[(10, 16, 3), float64] */;
  acos(%40) /* ty=Tensor[(10, 16, 3), float64] */
}

def @func_1428() -> (Tensor[(7, 10, 13), float32], Tensor[(1, 4), bool], bool) {
  @func_1426() /* ty=(Tensor[(7, 10, 13), float32], Tensor[(1, 4), bool], bool) */
}

def @func_5178() -> (Tensor[(7, 10, 13), float64], bool, Tensor[(96), float64], Tensor[(3360), float64], Tensor[(546), float32], Tensor[(96), float64], Tensor[(7, 10, 13), float64]) {
  %55 = fn () -> (Tensor[(7, 10, 13), float64], bool, Tensor[(96), float64], Tensor[(3360), float64], Tensor[(546), float32], Tensor[(96), float64], Tensor[(7, 10, 13), float64]) {
    %41 = @func_1858() /* ty=(Tensor[(7, 10, 13), float64], Tensor[(7, 10, 13), float32]) */;
    %42 = @func_4357() /* ty=(bool,) */;
    %43 = cast(meta[relay.Constant][0] /* ty=Tensor[(3360), float64] */, dtype="float64") /* ty=Tensor[(3360), float64] */;
    %44 = cast(meta[relay.Constant][1] /* ty=Tensor[(546), float32] */, dtype="float32") /* ty=Tensor[(546), float32] */;
    %45 = cast(meta[relay.Constant][2] /* ty=Tensor[(96), float64] */, dtype="float64") /* ty=Tensor[(96), float64] */;
    %46 = reshape(%43, newshape=[420, 8]) /* ty=Tensor[(420, 8), float64] */;
    %47 = reshape(%44, newshape=[546]) /* ty=Tensor[(546), float32] */;
    %48 = reshape(%45, newshape=[96]) /* ty=Tensor[(96), float64] */;
    %49 = @func_3518(%46, %47, %48) /* ty=(Tensor[(7, 10, 13), float32], Tensor[(7, 10, 13), float32], Tensor[(7, 10, 13), float32], Tensor[(24, 1), float32], Tensor[(420, 8), float64], Tensor[(546), float32], Tensor[(96), float64], bool, Tensor[(7, 10, 13), float64], Tensor[(280), float32]) */;
    %50 = @func_1502() /* ty=(Tensor[(7, 10, 13), float64],) */;
    %51 = %41.0;
    %52 = %42.0;
    %53 = %49.6;
    %54 = %50.0;
    (%51, %52, %53, meta[relay.Constant][0] /* ty=Tensor[(3360), float64] */, meta[relay.Constant][1] /* ty=Tensor[(546), float32] */, meta[relay.Constant][2] /* ty=Tensor[(96), float64] */, %54)
  };
  %55() /* ty=(Tensor[(7, 10, 13), float64], bool, Tensor[(96), float64], Tensor[(3360), float64], Tensor[(546), float32], Tensor[(96), float64], Tensor[(7, 10, 13), float64]) */
}

def @func_5012() -> (Tensor[(7, 10, 13), float64],) {
  @func_5010() /* ty=(Tensor[(7, 10, 13), float64],) */
}

def @func_3898(%var_3896: Tensor[(10, 6, 6), uint64], %var_3897: Tensor[(10, 6, 6), uint64]) -> (Tensor[(10, 6, 6), bool], Tensor[(10, 6, 6), float32], bool, Tensor[(7, 10, 13), float64], Tensor[(7, 12, 6), float64]) {
  @func_3894(%var_3896, %var_3897) /* ty=(Tensor[(10, 6, 6), bool], Tensor[(10, 6, 6), float32], bool, Tensor[(7, 10, 13), float64], Tensor[(7, 12, 6), float64]) */
}

def @func_1502() -> (Tensor[(7, 10, 13), float64],) {
  %56 = @func_1232() /* ty=(Tensor[(7, 10, 13), float32],) */;
  %57 = %56.0;
  %58 = cast(%57, dtype="float64") /* ty=Tensor[(7, 10, 13), float64] */;
  %59 = atanh(%58) /* ty=Tensor[(7, 10, 13), float64] */;
  (%59,)
}

def @func_7872() -> (bool, bool) {
  %60 = @func_6063() /* ty=(bool,) */;
  %61 = %60.0;
  %62 = @func_4112() /* ty=bool */;
  (%61, %62)
}

def @func_5630() -> (bool,) {
  @func_5628() /* ty=(bool,) */
}

def @func_9483(%var_9461: Tensor[(1, 13, 13), int16], %var_9462: Tensor[(9, 13, 13), int16]) -> (Tensor[(9, 13, 13), int16], Tensor[(?, 13, 13), float32]) {
  %63 = cast(%var_9461, dtype="int16") /* ty=Tensor[(1, 13, 13), int16] */;
  %64 = cast(%var_9462, dtype="int16") /* ty=Tensor[(9, 13, 13), int16] */;
  %65 = cast(%var_9461, dtype="float64") /* ty=Tensor[(1, 13, 13), float64] */;
  %66 = atan(%65) /* ty=Tensor[(1, 13, 13), float64] */;
  %67 = cast(%var_9461, dtype="float32") /* ty=Tensor[(1, 13, 13), float32] */;
  %68 = shape_of(%66, dtype="int32") /* ty=Tensor[(3), int32] */;
  %69 = cast(%66, dtype="float32") /* ty=Tensor[(1, 13, 13), float32] */;
  %70 = dyn.reshape(%67, %68, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %71 = multiply(%63, %64) /* ty=Tensor[(9, 13, 13), int16] */;
  %72 = divide(%69, %70) /* ty=Tensor[(?, 13, 13), float32] */;
  (%71, %72)
}

def @func_9759() -> (bool,) {
  %73 = @func_3809() /* ty=bool */;
  (%73,)
}

def @func_5295() -> (Tensor[(1, 4), bool], Tensor[(7, 10, 13), float64], Tensor[(14, 15, 16), float64], Tensor[(3360), float64], Tensor[(300, 1), float32], Tensor[(24), float32]) {
  %86 = fn () -> (Tensor[(1, 4), bool], Tensor[(7, 10, 13), float64], Tensor[(14, 15, 16), float64], Tensor[(3360), float64], Tensor[(300, 1), float32], Tensor[(24), float32]) {
    %74 = @func_1458() /* ty=(Tensor[(1, 4), bool],) */;
    %75 = @func_4407() /* ty=(Tensor[(7, 10, 13), float64], Tensor[(7, 10, 13), float64]) */;
    %76 = cast(meta[relay.Constant][3] /* ty=Tensor[(3360), float64] */, dtype="float64") /* ty=Tensor[(3360), float64] */;
    %77 = cast(meta[relay.Constant][4] /* ty=Tensor[(300, 1), float32] */, dtype="float32") /* ty=Tensor[(300, 1), float32] */;
    %78 = cast(meta[relay.Constant][5] /* ty=Tensor[(24), float32] */, dtype="float32") /* ty=Tensor[(24), float32] */;
    %79 = reshape(%76, newshape=[14, 15, 16]) /* ty=Tensor[(14, 15, 16), float64] */;
    %80 = reshape(%77, newshape=[50, 6]) /* ty=Tensor[(50, 6), float32] */;
    %81 = reshape(%78, newshape=[24]) /* ty=Tensor[(24), float32] */;
    %82 = @func_2402(%79, %80, %81) /* ty=(Tensor[(14, 15, 16), float64], Tensor[(7, 10, 13), float64], Tensor[(50, 6), float32], Tensor[(24), float32]) */;
    %83 = %74.0;
    %84 = %75.0;
    %85 = %82.0;
    (%83, %84, %85, meta[relay.Constant][3] /* ty=Tensor[(3360), float64] */, meta[relay.Constant][4] /* ty=Tensor[(300, 1), float32] */, meta[relay.Constant][5] /* ty=Tensor[(24), float32] */)
  };
  %86() /* ty=(Tensor[(1, 4), bool], Tensor[(7, 10, 13), float64], Tensor[(14, 15, 16), float64], Tensor[(3360), float64], Tensor[(300, 1), float32], Tensor[(24), float32]) */
}

def @func_1369() -> (Tensor[(7, 10, 13), float32], Tensor[(7, 10, 13), float32]) {
  %87 = @func_1318() /* ty=(Tensor[(7, 10, 13), float32], Tensor[(7, 10, 13), float32]) */;
  %88 = @func_1232() /* ty=(Tensor[(7, 10, 13), float32],) */;
  %89 = %87.1;
  %90 = %88.0;
  (%89, %90)
}

def @func_3129(%var_3089: Tensor[(24), float32], %var_3097: Tensor[(280), float32]) -> (Tensor[(7, 10, 13), float64], Tensor[(280), float32], Tensor[(192), int8], Tensor[(24, 8), float32], Tensor[(4, ?, 6), bool]) {
  %91 = @func_1502() /* ty=(Tensor[(7, 10, 13), float64],) */;
  %92 = cast(%var_3097, dtype="float32") /* ty=Tensor[(280), float32] */;
  %93 = cast(meta[relay.Constant][6] /* ty=Tensor[(192), int8] */, dtype="int8") /* ty=Tensor[(192), int8] */;
  %94 = reshape(%92, newshape=[8, 7, 5]) /* ty=Tensor[(8, 7, 5), float32] */;
  %95 = reshape(%93, newshape=[24, 8]) /* ty=Tensor[(24, 8), int8] */;
  %96 = @func_2620(%94, %95) /* ty=(Tensor[(8, 7, 5), int16], Tensor[(7, 10, 13), float32], Tensor[(12, 2), float32], Tensor[(96), float64], Tensor[(546), float32], Tensor[(6, 4), float32], Tensor[(24, 8), int8], Tensor[(12, 2), float32], Tensor[(7, 10, 13), float32]) */;
  %97 = %96.6;
  %98 = cast(%97, dtype="float32") /* ty=Tensor[(24, 8), float32] */;
  %99 = cast(%var_3089, dtype="float32") /* ty=Tensor[(24), float32] */;
  %100 = reshape(%99, newshape=[4, 1, 6]) /* ty=Tensor[(4, 1, 6), float32] */;
  %101 = @func_126(%100) /* ty=(Tensor[(4, ?, 6), int32], Tensor[(4, ?, 6), int8]) */;
  %102 = %101.1;
  %103 = cast(%var_3089, dtype="bool") /* ty=Tensor[(24), bool] */;
  %104 = shape_of(%102, dtype="int32") /* ty=Tensor[(3), int32] */;
  %105 = cast(%102, dtype="bool") /* ty=Tensor[(4, ?, 6), bool] */;
  %106 = dyn.reshape(%103, %104, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %107 = %91.0;
  %108 = erf(%98) /* ty=Tensor[(24, 8), float32] */;
  %109 = less(%105, %106) /* ty=Tensor[(4, ?, 6), bool] */;
  (%107, %var_3097, meta[relay.Constant][6] /* ty=Tensor[(192), int8] */, %108, %109)
}

def @func_6288() -> (Tensor[(2, 5, 16), float32], Tensor[(2, 5, 16), float32]) {
  %120 = fn () -> (Tensor[(2, 5, 16), float32], Tensor[(2, 5, 16), float32]) {
    %110 = cast(meta[relay.Constant][8] /* ty=Tensor[(2, 5, 16), float32] */, dtype="float32") /* ty=Tensor[(2, 5, 16), float32] */;
    %111 = shape_of(meta[relay.Constant][7] /* ty=Tensor[(2, 5, 16), float32] */, dtype="int32") /* ty=Tensor[(3), int32] */;
    %112 = cast(meta[relay.Constant][7] /* ty=Tensor[(2, 5, 16), float32] */, dtype="float32") /* ty=Tensor[(2, 5, 16), float32] */;
    %113 = dyn.reshape(%110, %111, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
    %114 = cast(meta[relay.Constant][9] /* ty=Tensor[(2, 5, 16), float32] */, dtype="float32") /* ty=Tensor[(2, 5, 16), float32] */;
    %115 = shape_of(meta[relay.Constant][7] /* ty=Tensor[(2, 5, 16), float32] */, dtype="int32") /* ty=Tensor[(3), int32] */;
    %116 = cast(meta[relay.Constant][7] /* ty=Tensor[(2, 5, 16), float32] */, dtype="float32") /* ty=Tensor[(2, 5, 16), float32] */;
    %117 = dyn.reshape(%114, %115, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
    %118 = subtract(%112, %113) /* ty=Tensor[(2, 5, 16), float32] */;
    %119 = mod(%116, %117) /* ty=Tensor[(2, 5, 16), float32] */;
    (%118, %119)
  };
  %120() /* ty=(Tensor[(2, 5, 16), float32], Tensor[(2, 5, 16), float32]) */
}

def @func_4659() -> (bool, Tensor[(7, 10, 13), float64]) {
  %121 = @func_3950() /* ty=(bool, Tensor[(7, 10, 13), float64], Tensor[(7, 10, 13), float32]) */;
  %122 = %121.2;
  %123 = cast(%122, dtype="float64") /* ty=Tensor[(7, 10, 13), float64] */;
  %124 = @func_3186() /* ty=bool */;
  %125 = tan(%123) /* ty=Tensor[(7, 10, 13), float64] */;
  (%124, %125)
}

def @func_4003() -> (Tensor[(7, 10, 13), float64],) {
  %128 = fn () -> (Tensor[(7, 10, 13), float64],) {
    %126 = @func_1502() /* ty=(Tensor[(7, 10, 13), float64],) */;
    %127 = %126.0;
    (%127,)
  };
  %128() /* ty=(Tensor[(7, 10, 13), float64],) */
}

def @func_6778(%var_6776: Tensor[(9, 14, 3), float64]) -> (Tensor[(9, 14, 3), float64], Tensor[(9, 14, 3), uint32], bool, Tensor[(9, 14, 3), float32]) {
  @func_6775(%var_6776) /* ty=(Tensor[(9, 14, 3), float64], Tensor[(9, 14, 3), uint32], bool, Tensor[(9, 14, 3), float32]) */
}

def @func_4087(%var_4084: Tensor[(16, 5, 12), int64], %var_4085: Tensor[(16, 5, 12), int64], %var_4086: Tensor[(16, 5, 12), int64]) -> (Tensor[(16, 5, 12), bool], Tensor[(16, 5, 12), uint16], bool) {
  %141 = fn (%var_4053: Tensor[(16, 5, 12), int64], %var_4054: Tensor[(16, 5, 12), int64], %var_4075: Tensor[(16, 5, 12), int64]) -> (Tensor[(16, 5, 12), bool], Tensor[(16, 5, 12), uint16], bool) {
    %129 = cast(%var_4054, dtype="bool") /* ty=Tensor[(16, 5, 12), bool] */;
    %130 = shape_of(%var_4053, dtype="int32") /* ty=Tensor[(3), int32] */;
    %131 = cast(%var_4053, dtype="bool") /* ty=Tensor[(16, 5, 12), bool] */;
    %132 = dyn.reshape(%129, %130, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    %133 = cast(%var_4075, dtype="uint16") /* ty=Tensor[(16, 5, 12), uint16] */;
    %134 = shape_of(%var_4053, dtype="int32") /* ty=Tensor[(3), int32] */;
    %135 = cast(%var_4053, dtype="uint16") /* ty=Tensor[(16, 5, 12), uint16] */;
    %136 = dyn.reshape(%133, %134, newshape=[]) /* ty=Tensor[(?, ?, ?), uint16] */;
    %137 = @func_2572() /* ty=(bool,) */;
    %138 = greater_equal(%131, %132) /* ty=Tensor[(16, 5, 12), bool] */;
    %139 = minimum(%135, %136) /* ty=Tensor[(16, 5, 12), uint16] */;
    %140 = %137.0;
    (%138, %139, %140)
  };
  %141(%var_4084, %var_4085, %var_4086) /* ty=(Tensor[(16, 5, 12), bool], Tensor[(16, 5, 12), uint16], bool) */
}

def @func_9719(%var_9668: Tensor[(378), float64]) -> (Tensor[(7, 10, 13), float32], Tensor[(9, 14, 3), float64], Tensor[(378), float64], Tensor[(7, 10, 13), float64], Tensor[(7, 10, 13), float64], Tensor[(7, 10, 13), float64], Tensor[(16, 3, 12), bool]) {
  %142 = @func_5340() /* ty=(Tensor[(7, 10, 13), float32],) */;
  %143 = cast(%var_9668, dtype="float64") /* ty=Tensor[(378), float64] */;
  %144 = reshape(%143, newshape=[9, 14, 3]) /* ty=Tensor[(9, 14, 3), float64] */;
  %145 = @func_6775(%144) /* ty=(Tensor[(9, 14, 3), float64], Tensor[(9, 14, 3), uint32], bool, Tensor[(9, 14, 3), float32]) */;
  %146 = @func_4407() /* ty=(Tensor[(7, 10, 13), float64], Tensor[(7, 10, 13), float64]) */;
  %147 = @func_5608() /* ty=(Tensor[(7, 10, 13), float64],) */;
  %148 = cast(meta[relay.Constant][10] /* ty=Tensor[(16, 3, 12), float64] */, dtype="float64") /* ty=Tensor[(16, 3, 12), float64] */;
  %149 = atan(%148) /* ty=Tensor[(16, 3, 12), float64] */;
  %150 = cast(%149, dtype="float64") /* ty=Tensor[(16, 3, 12), float64] */;
  %151 = sinh(%150) /* ty=Tensor[(16, 3, 12), float64] */;
  %152 = cast(%151, dtype="float32") /* ty=Tensor[(16, 3, 12), float32] */;
  %153 = sin(%152) /* ty=Tensor[(16, 3, 12), float32] */;
  %154 = cast(%153, dtype="bool") /* ty=Tensor[(16, 3, 12), bool] */;
  %155 = shape_of(%151, dtype="int32") /* ty=Tensor[(3), int32] */;
  %156 = cast(%151, dtype="bool") /* ty=Tensor[(16, 3, 12), bool] */;
  %157 = dyn.reshape(%154, %155, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %158 = %142.0;
  %159 = %145.0;
  %160 = @func_9437() /* ty=Tensor[(7, 10, 13), float64] */;
  %161 = %146.0;
  %162 = %147.0;
  %163 = greater(%156, %157) /* ty=Tensor[(16, 3, 12), bool] */;
  (%158, %159, %var_9668, %160, %161, %162, %163)
}

def @func_8973() -> (bool, bool) {
  @func_8971() /* ty=(bool, bool) */
}

def @func_2789() -> (Tensor[(7, 10, 13), float64],) {
  @func_2787() /* ty=(Tensor[(7, 10, 13), float64],) */
}

def @func_6230() -> (bool,) {
  %166 = fn () -> (bool,) {
    %164 = @func_4312() /* ty=(bool,) */;
    %165 = %164.0;
    (%165,)
  };
  %166() /* ty=(bool,) */
}

def @func_3518(%var_3485: Tensor[(420, 8), float64], %var_3486: Tensor[(546), float32], %var_3487: Tensor[(96), float64]) -> (Tensor[(7, 10, 13), float32], Tensor[(7, 10, 13), float32], Tensor[(7, 10, 13), float32], Tensor[(24, 1), float32], Tensor[(420, 8), float64], Tensor[(546), float32], Tensor[(96), float64], bool, Tensor[(7, 10, 13), float64], Tensor[(280), float32]) {
  %167 = @func_1858() /* ty=(Tensor[(7, 10, 13), float64], Tensor[(7, 10, 13), float32]) */;
  %168 = @func_1318() /* ty=(Tensor[(7, 10, 13), float32], Tensor[(7, 10, 13), float32]) */;
  %169 = @func_2048() /* ty=(Tensor[(7, 10, 13), float32], Tensor[(7, 10, 13), float64]) */;
  %170 = cast(%var_3485, dtype="float64") /* ty=Tensor[(420, 8), float64] */;
  %171 = cast(%var_3486, dtype="float32") /* ty=Tensor[(546), float32] */;
  %172 = cast(%var_3487, dtype="float64") /* ty=Tensor[(96), float64] */;
  %173 = reshape(%170, newshape=[840, 4]) /* ty=Tensor[(840, 4), float64] */;
  %174 = reshape(%171, newshape=[546]) /* ty=Tensor[(546), float32] */;
  %175 = reshape(%172, newshape=[96]) /* ty=Tensor[(96), float64] */;
  %176 = @func_2754(%173, %174, %175) /* ty=(Tensor[(7, 10, 13), float64], Tensor[(7, 10, 13), float64], Tensor[(50, 6), float32], Tensor[(840, 4), float64], Tensor[(10, 30), float32], Tensor[(24, 1), float32], bool, Tensor[(420), uint8], Tensor[(546), float32], Tensor[(6, 4), float32], Tensor[(96), float64], Tensor[(24, 8), int8], Tensor[(7, 10, 13), float64], bool) */;
  %177 = @func_2572() /* ty=(bool,) */;
  %178 = %176.5;
  %179 = cast(%178, dtype="float32") /* ty=Tensor[(24, 1), float32] */;
  %180 = cast(meta[relay.Constant][11] /* ty=Tensor[(280), float32] */, dtype="float32") /* ty=Tensor[(280), float32] */;
  %181 = reshape(%179, newshape=[24]) /* ty=Tensor[(24), float32] */;
  %182 = reshape(%180, newshape=[280]) /* ty=Tensor[(280), float32] */;
  %183 = @func_3129(%181, %182) /* ty=(Tensor[(7, 10, 13), float64], Tensor[(280), float32], Tensor[(192), int8], Tensor[(24, 8), float32], Tensor[(4, ?, 6), bool]) */;
  %184 = %167.1;
  %185 = %168.0;
  %186 = %169.0;
  %187 = %177.0;
  %188 = %183.0;
  (%184, %185, %186, %178, %var_3485, %var_3486, %var_3487, %187, %188, meta[relay.Constant][11] /* ty=Tensor[(280), float32] */)
}

def @func_8288() -> bool {
  @func_8286() /* ty=bool */
}

def @func_9896() -> (bool,) {
  %191 = fn () -> (bool,) {
    %189 = @func_7872() /* ty=(bool, bool) */;
    %190 = %189.1;
    (%190,)
  };
  %191() /* ty=(bool,) */
}

def @func_5480() -> Tensor[(7, 10, 13), float64] {
  %192 = @func_1502() /* ty=(Tensor[(7, 10, 13), float64],) */;
  %192.0
}

def @func_4113() -> bool {
  %193 = fn () -> bool {
    @func_3809() /* ty=bool */
  };
  %193() /* ty=bool */
}

def @func_2573() -> (bool,) {
  %195 = fn () -> (bool,) {
    %194 = @func_1694() /* ty=bool */;
    (%194,)
  };
  %195() /* ty=(bool,) */
}

def @func_8787() -> (bool, Tensor[(7, 10, 13), float32], Tensor[(7, 10, 13), float64]) {
  @func_8785() /* ty=(bool, Tensor[(7, 10, 13), float32], Tensor[(7, 10, 13), float64]) */
}

def @func_11799() -> (Tensor[(7, 10, 13), float32], bool) {
  %200 = fn () -> (Tensor[(7, 10, 13), float32], bool) {
    %196 = @func_1318() /* ty=(Tensor[(7, 10, 13), float32], Tensor[(7, 10, 13), float32]) */;
    %197 = @func_6063() /* ty=(bool,) */;
    %198 = %196.0;
    %199 = %197.0;
    (%198, %199)
  };
  %200() /* ty=(Tensor[(7, 10, 13), float32], bool) */
}

def @func_8181() -> (Tensor[(7, 10, 13), float32], Tensor[(7, 10, 13), float64], Tensor[(7, 10, 13), float64], bool, Tensor[(10, 16, 3), float64], Tensor[(480), float64], bool) {
  @func_8179() /* ty=(Tensor[(7, 10, 13), float32], Tensor[(7, 10, 13), float64], Tensor[(7, 10, 13), float64], bool, Tensor[(10, 16, 3), float64], Tensor[(480), float64], bool) */
}

def @func_7874() -> (bool, bool) {
  @func_7872() /* ty=(bool, bool) */
}

def @func_11213() -> (bool, bool) {
  %201 = @func_5099() /* ty=(bool,) */;
  %202 = @func_8887() /* ty=(bool,) */;
  %203 = %201.0;
  %204 = %202.0;
  (%203, %204)
}

def @func_11325() -> Tensor[(7, 10, 13), float32] {
  %206 = fn () -> Tensor[(7, 10, 13), float32] {
    %205 = @func_5818() /* ty=(Tensor[(7, 10, 13), float32],) */;
    %205.0
  };
  %206() /* ty=Tensor[(7, 10, 13), float32] */
}

def @func_10057(%var_10055: Tensor[(99, 2), uint8], %var_10056: Tensor[(24), float32]) -> (Tensor[(7, 10, 13), float64], bool, Tensor[(2, 9, 11), float64], Tensor[(99, 2), uint8], Tensor[(1001), uint32], Tensor[(24), float32], Tensor[(7, 10, 13), float32], Tensor[(24), int8]) {
  %228 = fn (%var_9950: Tensor[(99, 2), uint8], %var_10028: Tensor[(24), float32]) -> (Tensor[(7, 10, 13), float64], bool, Tensor[(2, 9, 11), float64], Tensor[(99, 2), uint8], Tensor[(1001), uint32], Tensor[(24), float32], Tensor[(7, 10, 13), float32], Tensor[(24), int8]) {
    %207 = @func_1761() /* ty=(bool, Tensor[(7, 10, 13), float64], Tensor[(910), float32]) */;
    %208 = cast(%var_9950, dtype="uint8") /* ty=Tensor[(99, 2), uint8] */;
    %209 = cast(%var_9950, dtype="uint8") /* ty=Tensor[(99, 2), uint8] */;
    %210 = reshape(%208, newshape=[2, 9, 11]) /* ty=Tensor[(2, 9, 11), uint8] */;
    %211 = reshape(%209, newshape=[2, 9, 11]) /* ty=Tensor[(2, 9, 11), uint8] */;
    %212 = @func_8743() /* ty=(Tensor[(1001), uint32],) */;
    %213 = @func_9329() /* ty=(Tensor[(7, 10, 13), float32], Tensor[(24), float32], Tensor[(7, 12, 6), uint32]) */;
    %214 = @func_1318() /* ty=(Tensor[(7, 10, 13), float32], Tensor[(7, 10, 13), float32]) */;
    %215 = @func_3682() /* ty=(bool, Tensor[(4, ?, 6), int8], Tensor[(24), float32], Tensor[(7, 10, 13), float32], Tensor[(7, 10, 13), float32], Tensor[(910), float32]) */;
    %216 = %215.2;
    %217 = cast(%var_10028, dtype="int8") /* ty=Tensor[(24), int8] */;
    %218 = shape_of(%216, dtype="int32") /* ty=Tensor[(1), int32] */;
    %219 = cast(%216, dtype="int8") /* ty=Tensor[(24), int8] */;
    %220 = dyn.reshape(%217, %218, newshape=[]) /* ty=Tensor[(?), int8] */;
    %221 = %207.1;
    %222 = @func_3230() /* ty=bool */;
    %223 = @func_3968(%210, %211) /* ty=Tensor[(2, 9, 11), float64] */;
    %224 = %212.0;
    %225 = %213.1;
    %226 = %214.1;
    %227 = bitwise_xor(%219, %220) /* ty=Tensor[(24), int8] */;
    (%221, %222, %223, %var_9950, %224, %225, %226, %227)
  };
  %228(%var_10055, %var_10056) /* ty=(Tensor[(7, 10, 13), float64], bool, Tensor[(2, 9, 11), float64], Tensor[(99, 2), uint8], Tensor[(1001), uint32], Tensor[(24), float32], Tensor[(7, 10, 13), float32], Tensor[(24), int8]) */
}

def @func_9621(%var_9591: Tensor[(3, 9, 11), float64], %var_9592: Tensor[(3, 9, 11), float64]) -> (bool, Tensor[(3, 9, 11), float32]) {
  %229 = cast(%var_9592, dtype="float64") /* ty=Tensor[(3, 9, 11), float64] */;
  %230 = shape_of(%var_9591, dtype="int32") /* ty=Tensor[(3), int32] */;
  %231 = cast(%var_9591, dtype="float64") /* ty=Tensor[(3, 9, 11), float64] */;
  %232 = dyn.reshape(%229, %230, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %233 = divide(%231, %232) /* ty=Tensor[(3, 9, 11), float64] */;
  %234 = cast(%233, dtype="float32") /* ty=Tensor[(3, 9, 11), float32] */;
  %235 = @func_6714() /* ty=bool */;
  %236 = rsqrt(%234) /* ty=Tensor[(3, 9, 11), float32] */;
  (%235, %236)
}

def @func_1976() -> (bool,) {
  %239 = fn () -> (bool,) {
    %237 = @func_1761() /* ty=(bool, Tensor[(7, 10, 13), float64], Tensor[(910), float32]) */;
    %238 = %237.0;
    (%238,)
  };
  %239() /* ty=(bool,) */
}

def @func_6009() -> (Tensor[(7, 10, 13), float64],) {
  %240 = @func_1502() /* ty=(Tensor[(7, 10, 13), float64],) */;
  %241 = %240.0;
  (%241,)
}

def @func_1798() -> (Tensor[(7, 10, 13), float64],) {
  %243 = fn () -> (Tensor[(7, 10, 13), float64],) {
    %242 = @func_1704() /* ty=Tensor[(7, 10, 13), float64] */;
    (%242,)
  };
  %243() /* ty=(Tensor[(7, 10, 13), float64],) */
}

def @func_9439() -> Tensor[(7, 10, 13), float64] {
  @func_9437() /* ty=Tensor[(7, 10, 13), float64] */
}

def @func_9847(%var_9844: Tensor[(280), float32], %var_9845: Tensor[(192), int8], %var_9846: Tensor[(360), uint64]) -> (Tensor[(7, 10, 13), float64], Tensor[(7, 10, 13), float64], Tensor[(378), float64], Tensor[(24, 8), int8], Tensor[(280), float32], Tensor[(192), int8], bool, bool, Tensor[(360), uint64]) {
  %263 = fn (%var_9827: Tensor[(280), float32], %var_9828: Tensor[(192), int8], %var_9841: Tensor[(360), uint64]) -> (Tensor[(7, 10, 13), float64], Tensor[(7, 10, 13), float64], Tensor[(378), float64], Tensor[(24, 8), int8], Tensor[(280), float32], Tensor[(192), int8], bool, bool, Tensor[(360), uint64]) {
    %244 = @func_5177() /* ty=(Tensor[(7, 10, 13), float64], bool, Tensor[(96), float64], Tensor[(3360), float64], Tensor[(546), float32], Tensor[(96), float64], Tensor[(7, 10, 13), float64]) */;
    %245 = cast(meta[relay.Constant][12] /* ty=Tensor[(378), float64] */, dtype="float64") /* ty=Tensor[(378), float64] */;
    %246 = reshape(%245, newshape=[378]) /* ty=Tensor[(378), float64] */;
    %247 = @func_9719(%246) /* ty=(Tensor[(7, 10, 13), float32], Tensor[(9, 14, 3), float64], Tensor[(378), float64], Tensor[(7, 10, 13), float64], Tensor[(7, 10, 13), float64], Tensor[(7, 10, 13), float64], Tensor[(16, 3, 12), bool]) */;
    %248 = cast(%var_9827, dtype="float32") /* ty=Tensor[(280), float32] */;
    %249 = cast(%var_9828, dtype="int8") /* ty=Tensor[(192), int8] */;
    %250 = reshape(%248, newshape=[8, 7, 5]) /* ty=Tensor[(8, 7, 5), float32] */;
    %251 = reshape(%249, newshape=[24, 8]) /* ty=Tensor[(24, 8), int8] */;
    %252 = @func_2620(%250, %251) /* ty=(Tensor[(8, 7, 5), int16], Tensor[(7, 10, 13), float32], Tensor[(12, 2), float32], Tensor[(96), float64], Tensor[(546), float32], Tensor[(6, 4), float32], Tensor[(24, 8), int8], Tensor[(12, 2), float32], Tensor[(7, 10, 13), float32]) */;
    %253 = cast(%var_9841, dtype="uint64") /* ty=Tensor[(360), uint64] */;
    %254 = cast(%var_9841, dtype="uint64") /* ty=Tensor[(360), uint64] */;
    %255 = reshape(%253, newshape=[10, 6, 6]) /* ty=Tensor[(10, 6, 6), uint64] */;
    %256 = reshape(%254, newshape=[10, 6, 6]) /* ty=Tensor[(10, 6, 6), uint64] */;
    %257 = @func_3894(%255, %256) /* ty=(Tensor[(10, 6, 6), bool], Tensor[(10, 6, 6), float32], bool, Tensor[(7, 10, 13), float64], Tensor[(7, 12, 6), float64]) */;
    %258 = %244.6;
    %259 = %247.5;
    %260 = %252.6;
    %261 = @func_3230() /* ty=bool */;
    %262 = %257.2;
    (%258, %259, meta[relay.Constant][12] /* ty=Tensor[(378), float64] */, %260, %var_9827, %var_9828, %261, %262, %var_9841)
  };
  %263(%var_9844, %var_9845, %var_9846) /* ty=(Tensor[(7, 10, 13), float64], Tensor[(7, 10, 13), float64], Tensor[(378), float64], Tensor[(24, 8), int8], Tensor[(280), float32], Tensor[(192), int8], bool, bool, Tensor[(360), uint64]) */
}

def @func_13124() -> (Tensor[(7, 10, 13), float64],) {
  @func_13122() /* ty=(Tensor[(7, 10, 13), float64],) */
}

def @func_7564() -> (Tensor[(7, 10, 13), float64],) {
  %266 = fn () -> (Tensor[(7, 10, 13), float64],) {
    %264 = @func_4407() /* ty=(Tensor[(7, 10, 13), float64], Tensor[(7, 10, 13), float64]) */;
    %265 = %264.1;
    (%265,)
  };
  %266() /* ty=(Tensor[(7, 10, 13), float64],) */
}

def @func_9761() -> (bool,) {
  @func_9759() /* ty=(bool,) */
}

def @func_2913() -> (Tensor[(7, 10, 13), float64], Tensor[(1, 4), bool]) {
  %275 = fn () -> (Tensor[(7, 10, 13), float64], Tensor[(1, 4), bool]) {
    %267 = @func_1318() /* ty=(Tensor[(7, 10, 13), float32], Tensor[(7, 10, 13), float32]) */;
    %268 = %267.1;
    %269 = cast(%268, dtype="float32") /* ty=Tensor[(7, 10, 13), float32] */;
    %270 = atan(%269) /* ty=Tensor[(7, 10, 13), float32] */;
    %271 = cast(%270, dtype="float64") /* ty=Tensor[(7, 10, 13), float64] */;
    %272 = @func_1458() /* ty=(Tensor[(1, 4), bool],) */;
    %273 = acosh(%271) /* ty=Tensor[(7, 10, 13), float64] */;
    %274 = %272.0;
    (%273, %274)
  };
  %275() /* ty=(Tensor[(7, 10, 13), float64], Tensor[(1, 4), bool]) */
}

def @func_3187() -> bool {
  %277 = fn () -> bool {
    %276 = @func_1761() /* ty=(bool, Tensor[(7, 10, 13), float64], Tensor[(910), float32]) */;
    %276.0
  };
  %277() /* ty=bool */
}

def @func_7773(%var_7771: Tensor[(546), float32], %var_7772: Tensor[(96), float64]) -> (Tensor[(7, 10, 13), float64], Tensor[(7, 10, 13), float64], Tensor[(7, 5, 12), uint16], uint8, Tensor[(420), uint8], Tensor[(546), float32], Tensor[(24), float32], Tensor[(7, 10, 13), float64], Tensor[(546), float32], Tensor[(96), float64]) {
  @func_7769(%var_7771, %var_7772) /* ty=(Tensor[(7, 10, 13), float64], Tensor[(7, 10, 13), float64], Tensor[(7, 5, 12), uint16], uint8, Tensor[(420), uint8], Tensor[(546), float32], Tensor[(24), float32], Tensor[(7, 10, 13), float64], Tensor[(546), float32], Tensor[(96), float64]) */
}

def @func_6634() -> (Tensor[(1, 4), bool], bool) {
  %282 = fn () -> (Tensor[(1, 4), bool], bool) {
    %278 = @func_2912() /* ty=(Tensor[(7, 10, 13), float64], Tensor[(1, 4), bool]) */;
    %279 = @func_4848() /* ty=(Tensor[(1, 4), bool], bool) */;
    %280 = %278.1;
    %281 = %279.1;
    (%280, %281)
  };
  %282() /* ty=(Tensor[(1, 4), bool], bool) */
}

def @func_3133(%var_3131: Tensor[(24), float32], %var_3132: Tensor[(280), float32]) -> (Tensor[(7, 10, 13), float64], Tensor[(280), float32], Tensor[(192), int8], Tensor[(24, 8), float32], Tensor[(4, ?, 6), bool]) {
  @func_3129(%var_3131, %var_3132) /* ty=(Tensor[(7, 10, 13), float64], Tensor[(280), float32], Tensor[(192), int8], Tensor[(24, 8), float32], Tensor[(4, ?, 6), bool]) */
}

def @func_3809() -> bool {
  @func_2272() /* ty=bool */
}

def @func_4590() -> (Tensor[(7, 10, 13), uint8], Tensor[(1, 4), bool], Tensor[(7, 10, 13), float64], Tensor[(7, 10, 13), float64], Tensor[(910), float32], Tensor[(7, 10, 13), float64]) {
  @func_4588() /* ty=(Tensor[(7, 10, 13), uint8], Tensor[(1, 4), bool], Tensor[(7, 10, 13), float64], Tensor[(7, 10, 13), float64], Tensor[(910), float32], Tensor[(7, 10, 13), float64]) */
}

def @func_5245() -> (bool,) {
  %283 = @func_2272() /* ty=bool */;
  (%283,)
}

def @func_7048(%var_7044: uint8, %var_7045: Tensor[(420), uint8], %var_7046: Tensor[(91, 6), float32], %var_7047: Tensor[(24), float32]) -> (Tensor[(7, 10, 13), float32], Tensor[(7, 5, 12), uint16], uint8, Tensor[(420), uint8], Tensor[(91, 6), float32], Tensor[(24), float32]) {
  %296 = fn (%var_7017: uint8, %var_7018: Tensor[(420), uint8], %var_7019: Tensor[(91, 6), float32], %var_7020: Tensor[(24), float32]) -> (Tensor[(7, 10, 13), float32], Tensor[(7, 5, 12), uint16], uint8, Tensor[(420), uint8], Tensor[(91, 6), float32], Tensor[(24), float32]) {
    %284 = @func_1232() /* ty=(Tensor[(7, 10, 13), float32],) */;
    %285 = cast(%var_7017, dtype="uint8") /* ty=uint8 */;
    %286 = cast(%var_7018, dtype="uint8") /* ty=Tensor[(420), uint8] */;
    %287 = cast(%var_7019, dtype="float32") /* ty=Tensor[(91, 6), float32] */;
    %288 = cast(%var_7020, dtype="float32") /* ty=Tensor[(24), float32] */;
    %289 = reshape(%285, newshape=[]) /* ty=uint8 */;
    %290 = reshape(%286, newshape=[7, 5, 12]) /* ty=Tensor[(7, 5, 12), uint8] */;
    %291 = reshape(%287, newshape=[1, 546]) /* ty=Tensor[(1, 546), float32] */;
    %292 = reshape(%288, newshape=[24]) /* ty=Tensor[(24), float32] */;
    %293 = @func_2145(%289, %290, %291, %292) /* ty=(Tensor[(7, 5, 12), uint8], Tensor[(7, 5, 12), uint16], Tensor[(4, 8, 6), float32], Tensor[(96), float64], Tensor[(24), float32], Tensor[(192), int8], Tensor[(1, 546), int32], bool, Tensor[(7, 10, 13), float64], Tensor[(910), float32]) */;
    %294 = %284.0;
    %295 = %293.1;
    (%294, %295, %var_7017, %var_7018, %var_7019, %var_7020)
  };
  %296(%var_7044, %var_7045, %var_7046, %var_7047) /* ty=(Tensor[(7, 10, 13), float32], Tensor[(7, 5, 12), uint16], uint8, Tensor[(420), uint8], Tensor[(91, 6), float32], Tensor[(24), float32]) */
}

def @func_8658() -> (bool, Tensor[(7, 10, 13), float64], Tensor[(7, 10, 13), float64]) {
  %301 = fn () -> (bool, Tensor[(7, 10, 13), float64], Tensor[(7, 10, 13), float64]) {
    %297 = @func_1502() /* ty=(Tensor[(7, 10, 13), float64],) */;
    %298 = @func_1694() /* ty=bool */;
    %299 = %297.0;
    %300 = @func_1704() /* ty=Tensor[(7, 10, 13), float64] */;
    (%298, %299, %300)
  };
  %301() /* ty=(bool, Tensor[(7, 10, 13), float64], Tensor[(7, 10, 13), float64]) */
}

def @func_12240() -> Tensor[(1, 4), bool] {
  %303 = fn () -> Tensor[(1, 4), bool] {
    %302 = @func_1458() /* ty=(Tensor[(1, 4), bool],) */;
    %302.0
  };
  %303() /* ty=Tensor[(1, 4), bool] */
}

def @func_12447() -> (Tensor[(7, 10, 13), float32], Tensor[(7, 10, 13), float32]) {
  %304 = @func_11760() /* ty=(Tensor[(7, 10, 13), float32], bool) */;
  %305 = %304.0;
  %306 = @func_7819() /* ty=Tensor[(7, 10, 13), float32] */;
  (%305, %306)
}

def @func_5609() -> (Tensor[(7, 10, 13), float64],) {
  %309 = fn () -> (Tensor[(7, 10, 13), float64],) {
    %307 = @func_1858() /* ty=(Tensor[(7, 10, 13), float64], Tensor[(7, 10, 13), float32]) */;
    %308 = %307.0;
    (%308,)
  };
  %309() /* ty=(Tensor[(7, 10, 13), float64],) */
}

def @func_7483(%var_7482: Tensor[(16), bool]) -> (Tensor[(2, 5, 16), float32], bool, bool, Tensor[(16), bool]) {
  %318 = fn (%var_7462: Tensor[(16), bool]) -> (Tensor[(2, 5, 16), float32], bool, bool, Tensor[(16), bool]) {
    %310 = @func_6287() /* ty=(Tensor[(2, 5, 16), float32], Tensor[(2, 5, 16), float32]) */;
    %311 = @func_6633() /* ty=(Tensor[(1, 4), bool], bool) */;
    %312 = cast(%var_7462, dtype="bool") /* ty=Tensor[(16), bool] */;
    %313 = reshape(%312, newshape=[16]) /* ty=Tensor[(16), bool] */;
    %314 = @func_6203(%313) /* ty=(bool, bool, Tensor[(7, 10, 13), float64], Tensor[(1, 4), bool], Tensor[(11, 7, 13), float32], Tensor[(16), bool], Tensor[(7, 12, 6), uint32]) */;
    %315 = %310.0;
    %316 = %311.1;
    %317 = %314.0;
    (%315, %316, %317, %var_7462)
  };
  %318(%var_7482) /* ty=(Tensor[(2, 5, 16), float32], bool, bool, Tensor[(16), bool]) */
}

def @func_8239() -> (Tensor[(7, 10, 13), float64], Tensor[(7, 12, 6), uint32], Tensor[(16), bool]) {
  %325 = fn () -> (Tensor[(7, 10, 13), float64], Tensor[(7, 12, 6), uint32], Tensor[(16), bool]) {
    %319 = @func_4588() /* ty=(Tensor[(7, 10, 13), uint8], Tensor[(1, 4), bool], Tensor[(7, 10, 13), float64], Tensor[(7, 10, 13), float64], Tensor[(910), float32], Tensor[(7, 10, 13), float64]) */;
    %320 = cast(meta[relay.Constant][13] /* ty=Tensor[(16), bool] */, dtype="bool") /* ty=Tensor[(16), bool] */;
    %321 = reshape(%320, newshape=[16]) /* ty=Tensor[(16), bool] */;
    %322 = @func_6203(%321) /* ty=(bool, bool, Tensor[(7, 10, 13), float64], Tensor[(1, 4), bool], Tensor[(11, 7, 13), float32], Tensor[(16), bool], Tensor[(7, 12, 6), uint32]) */;
    %323 = %319.3;
    %324 = %322.6;
    (%323, %324, meta[relay.Constant][13] /* ty=Tensor[(16), bool] */)
  };
  %325() /* ty=(Tensor[(7, 10, 13), float64], Tensor[(7, 12, 6), uint32], Tensor[(16), bool]) */
}

def @func_10197(%var_10166: Tensor[(1, 16), bool]) -> (Tensor[(7, 10, 13), float64], Tensor[(910), float32], Tensor[(1, 4, 4), bool], bool, Tensor[(1, 16), bool]) {
  %326 = @func_5608() /* ty=(Tensor[(7, 10, 13), float64],) */;
  %327 = @func_7899() /* ty=(Tensor[(910), float32],) */;
  %328 = cast(True /* ty=bool */, dtype="bool") /* ty=bool */;
  %329 = cast(%var_10166, dtype="bool") /* ty=Tensor[(1, 16), bool] */;
  %330 = reshape(%328, newshape=[]) /* ty=bool */;
  %331 = reshape(%329, newshape=[1, 4, 4]) /* ty=Tensor[(1, 4, 4), bool] */;
  %332 = @func_4153(%330, %331) /* ty=(Tensor[(1, 4, 4), bool], Tensor[(11, 7, 13), float32], Tensor[(1001), float32]) */;
  %333 = %326.0;
  %334 = %327.0;
  %335 = %332.0;
  (%333, %334, %335, True /* ty=bool */, %var_10166)
}

def @func_848(%var_844: Tensor[(16, 2, 3), float64], %var_845: Tensor[(546), float32], %var_846: Tensor[(12, 2), float32], %var_847: Tensor[(192), int8]) -> (Tensor[(16, 2, 3), float64], Tensor[(4, 8, 6), float32], Tensor[(546), float32], Tensor[(12, 2), float32], Tensor[(192), int8], Tensor[(6, 4), float32]) {
  @func_842(%var_844, %var_845, %var_846, %var_847) /* ty=(Tensor[(16, 2, 3), float64], Tensor[(4, 8, 6), float32], Tensor[(546), float32], Tensor[(12, 2), float32], Tensor[(192), int8], Tensor[(6, 4), float32]) */
}

def @func_7308() -> bool {
  %337 = fn () -> bool {
    %336 = @func_5839() /* ty=(bool,) */;
    %336.0
  };
  %337() /* ty=bool */
}

def @func_2027() -> (bool, Tensor[(7, 10, 13), float64]) {
  %343 = fn () -> (bool, Tensor[(7, 10, 13), float64]) {
    %338 = @func_1858() /* ty=(Tensor[(7, 10, 13), float64], Tensor[(7, 10, 13), float32]) */;
    %339 = %338.0;
    %340 = cast(%339, dtype="float64") /* ty=Tensor[(7, 10, 13), float64] */;
    %341 = @func_1694() /* ty=bool */;
    %342 = log10(%340) /* ty=Tensor[(7, 10, 13), float64] */;
    (%341, %342)
  };
  %343() /* ty=(bool, Tensor[(7, 10, 13), float64]) */
}

def @func_3952() -> (bool, Tensor[(7, 10, 13), float64], Tensor[(7, 10, 13), float32]) {
  @func_3950() /* ty=(bool, Tensor[(7, 10, 13), float64], Tensor[(7, 10, 13), float32]) */
}

def @func_9263(%var_9261: Tensor[(7, 4, 3), uint32], %var_9262: Tensor[(7, 4, 3), uint32]) -> Tensor[(7, 4, 3), uint32] {
  @func_9259(%var_9261, %var_9262) /* ty=Tensor[(7, 4, 3), uint32] */
}

def @func_6775(%var_6731: Tensor[(9, 14, 3), float64]) -> (Tensor[(9, 14, 3), float64], Tensor[(9, 14, 3), uint32], bool, Tensor[(9, 14, 3), float32]) {
  %344 = cast(%var_6731, dtype="float64") /* ty=Tensor[(9, 14, 3), float64] */;
  %345 = cast(%var_6731, dtype="float64") /* ty=Tensor[(9, 14, 3), float64] */;
  %346 = log10(%345) /* ty=Tensor[(9, 14, 3), float64] */;
  %347 = @func_5245() /* ty=(bool,) */;
  %348 = %347.0;
  %349 = cast(%346, dtype="uint32") /* ty=Tensor[(9, 14, 3), uint32] */;
  %350 = cast(%348, dtype="uint32") /* ty=uint32 */;
  %351 = cast(%var_6731, dtype="float32") /* ty=Tensor[(9, 14, 3), float32] */;
  %352 = sigmoid(%344) /* ty=Tensor[(9, 14, 3), float64] */;
  %353 = right_shift(%349, %350) /* ty=Tensor[(9, 14, 3), uint32] */;
  %354 = @func_3809() /* ty=bool */;
  %355 = asinh(%351) /* ty=Tensor[(9, 14, 3), float32] */;
  (%352, %353, %354, %355)
}

def @func_1118(%var_1110: bool) -> (Tensor[(1, 4), bool],) {
  %356 = cast(%var_1110, dtype="bool") /* ty=bool */;
  %357 = cast(meta[relay.Constant][14] /* ty=Tensor[(1, 4), bool] */, dtype="bool") /* ty=Tensor[(1, 4), bool] */;
  %358 = logical_and(%356, %357) /* ty=Tensor[(1, 4), bool] */;
  (%358,)
}

def @func_1859() -> (Tensor[(7, 10, 13), float64], Tensor[(7, 10, 13), float32]) {
  %363 = fn () -> (Tensor[(7, 10, 13), float64], Tensor[(7, 10, 13), float32]) {
    %359 = @func_1797() /* ty=(Tensor[(7, 10, 13), float64],) */;
    %360 = @func_1369() /* ty=(Tensor[(7, 10, 13), float32], Tensor[(7, 10, 13), float32]) */;
    %361 = %359.0;
    %362 = %360.0;
    (%361, %362)
  };
  %363() /* ty=(Tensor[(7, 10, 13), float64], Tensor[(7, 10, 13), float32]) */
}

def @func_5101() -> (bool,) {
  @func_5099() /* ty=(bool,) */
}

def @func_10319(%var_10317: Tensor[(5, 4, 5), uint8], %var_10318: Tensor[(5, 4, 5), uint8]) -> Tensor[(5, 4, 5), uint8] {
  %368 = fn (%var_10294: Tensor[(5, 4, 5), uint8], %var_10295: Tensor[(5, 4, 5), uint8]) -> Tensor[(5, 4, 5), uint8] {
    %364 = cast(%var_10295, dtype="uint8") /* ty=Tensor[(5, 4, 5), uint8] */;
    %365 = shape_of(%var_10294, dtype="int32") /* ty=Tensor[(3), int32] */;
    %366 = cast(%var_10294, dtype="uint8") /* ty=Tensor[(5, 4, 5), uint8] */;
    %367 = dyn.reshape(%364, %365, newshape=[]) /* ty=Tensor[(?, ?, ?), uint8] */;
    subtract(%366, %367) /* ty=Tensor[(5, 4, 5), uint8] */
  };
  %368(%var_10317, %var_10318) /* ty=Tensor[(5, 4, 5), uint8] */
}

def @func_2754(%var_2687: Tensor[(840, 4), float64], %var_2721: Tensor[(546), float32], %var_2741: Tensor[(96), float64]) -> (Tensor[(7, 10, 13), float64], Tensor[(7, 10, 13), float64], Tensor[(50, 6), float32], Tensor[(840, 4), float64], Tensor[(10, 30), float32], Tensor[(24, 1), float32], bool, Tensor[(420), uint8], Tensor[(546), float32], Tensor[(6, 4), float32], Tensor[(96), float64], Tensor[(24, 8), int8], Tensor[(7, 10, 13), float64], bool) {
  %369 = @func_1502() /* ty=(Tensor[(7, 10, 13), float64],) */;
  %370 = @func_1761() /* ty=(bool, Tensor[(7, 10, 13), float64], Tensor[(910), float32]) */;
  %371 = %370.1;
  %372 = @func_2272() /* ty=bool */;
  %373 = cast(%371, dtype="float64") /* ty=Tensor[(7, 10, 13), float64] */;
  %374 = cast(%372, dtype="float64") /* ty=float64 */;
  %375 = cast(%var_2687, dtype="float64") /* ty=Tensor[(840, 4), float64] */;
  %376 = cast(meta[relay.Constant][15] /* ty=Tensor[(10, 30), float32] */, dtype="float32") /* ty=Tensor[(10, 30), float32] */;
  %377 = cast(meta[relay.Constant][16] /* ty=Tensor[(24, 1), float32] */, dtype="float32") /* ty=Tensor[(24, 1), float32] */;
  %378 = reshape(%375, newshape=[14, 15, 16]) /* ty=Tensor[(14, 15, 16), float64] */;
  %379 = reshape(%376, newshape=[50, 6]) /* ty=Tensor[(50, 6), float32] */;
  %380 = reshape(%377, newshape=[24]) /* ty=Tensor[(24), float32] */;
  %381 = @func_2402(%378, %379, %380) /* ty=(Tensor[(14, 15, 16), float64], Tensor[(7, 10, 13), float64], Tensor[(50, 6), float32], Tensor[(24), float32]) */;
  %382 = cast(%372, dtype="uint8") /* ty=uint8 */;
  %383 = cast(meta[relay.Constant][17] /* ty=Tensor[(420), uint8] */, dtype="uint8") /* ty=Tensor[(420), uint8] */;
  %384 = cast(%var_2721, dtype="float32") /* ty=Tensor[(546), float32] */;
  %385 = cast(meta[relay.Constant][16] /* ty=Tensor[(24, 1), float32] */, dtype="float32") /* ty=Tensor[(24, 1), float32] */;
  %386 = reshape(%382, newshape=[]) /* ty=uint8 */;
  %387 = reshape(%383, newshape=[7, 5, 12]) /* ty=Tensor[(7, 5, 12), uint8] */;
  %388 = reshape(%384, newshape=[1, 546]) /* ty=Tensor[(1, 546), float32] */;
  %389 = reshape(%385, newshape=[24]) /* ty=Tensor[(24), float32] */;
  %390 = @func_2145(%386, %387, %388, %389) /* ty=(Tensor[(7, 5, 12), uint8], Tensor[(7, 5, 12), uint16], Tensor[(4, 8, 6), float32], Tensor[(96), float64], Tensor[(24), float32], Tensor[(192), int8], Tensor[(1, 546), int32], bool, Tensor[(7, 10, 13), float64], Tensor[(910), float32]) */;
  %391 = cast(%var_2741, dtype="float64") /* ty=Tensor[(96), float64] */;
  %392 = cast(%var_2721, dtype="float32") /* ty=Tensor[(546), float32] */;
  %393 = cast(meta[relay.Constant][16] /* ty=Tensor[(24, 1), float32] */, dtype="float32") /* ty=Tensor[(24, 1), float32] */;
  %394 = cast(meta[relay.Constant][18] /* ty=Tensor[(24, 8), int8] */, dtype="int8") /* ty=Tensor[(24, 8), int8] */;
  %395 = reshape(%391, newshape=[16, 2, 3]) /* ty=Tensor[(16, 2, 3), float64] */;
  %396 = reshape(%392, newshape=[546]) /* ty=Tensor[(546), float32] */;
  %397 = reshape(%393, newshape=[12, 2]) /* ty=Tensor[(12, 2), float32] */;
  %398 = reshape(%394, newshape=[192]) /* ty=Tensor[(192), int8] */;
  %399 = @func_842(%395, %396, %397, %398) /* ty=(Tensor[(16, 2, 3), float64], Tensor[(4, 8, 6), float32], Tensor[(546), float32], Tensor[(12, 2), float32], Tensor[(192), int8], Tensor[(6, 4), float32]) */;
  %400 = divide(%373, %374) /* ty=Tensor[(7, 10, 13), float64] */;
  %401 = cast(%400, dtype="float32") /* ty=Tensor[(7, 10, 13), float32] */;
  %402 = reshape(%401, newshape=[7, 10, 13]) /* ty=Tensor[(7, 10, 13), float32] */;
  %403 = @func_1657(%402) /* ty=(Tensor[(7, 10, 13), float64],) */;
  %404 = @func_2026() /* ty=(bool, Tensor[(7, 10, 13), float64]) */;
  %405 = %369.0;
  %406 = %381.2;
  %407 = %390.7;
  %408 = %399.5;
  %409 = %403.0;
  %410 = %404.0;
  (%405, %400, %406, %var_2687, meta[relay.Constant][15] /* ty=Tensor[(10, 30), float32] */, meta[relay.Constant][16] /* ty=Tensor[(24, 1), float32] */, %407, meta[relay.Constant][17] /* ty=Tensor[(420), uint8] */, %var_2721, %408, %var_2741, meta[relay.Constant][18] /* ty=Tensor[(24, 8), int8] */, %409, %410)
}

def @func_2145(%var_2069: uint8, %var_2070: Tensor[(7, 5, 12), uint8], %var_2093: Tensor[(1, 546), float32], %var_2094: Tensor[(24), float32]) -> (Tensor[(7, 5, 12), uint8], Tensor[(7, 5, 12), uint16], Tensor[(4, 8, 6), float32], Tensor[(96), float64], Tensor[(24), float32], Tensor[(192), int8], Tensor[(1, 546), int32], bool, Tensor[(7, 10, 13), float64], Tensor[(910), float32]) {
  %411 = cast(%var_2069, dtype="uint8") /* ty=uint8 */;
  %412 = cast(%var_2070, dtype="uint8") /* ty=Tensor[(7, 5, 12), uint8] */;
  %413 = cast(%var_2069, dtype="uint16") /* ty=uint16 */;
  %414 = cast(%var_2070, dtype="uint16") /* ty=Tensor[(7, 5, 12), uint16] */;
  %415 = cast(meta[relay.Constant][19] /* ty=Tensor[(96), float64] */, dtype="float64") /* ty=Tensor[(96), float64] */;
  %416 = cast(%var_2093, dtype="float32") /* ty=Tensor[(1, 546), float32] */;
  %417 = cast(%var_2094, dtype="float32") /* ty=Tensor[(24), float32] */;
  %418 = cast(meta[relay.Constant][20] /* ty=Tensor[(192), int8] */, dtype="int8") /* ty=Tensor[(192), int8] */;
  %419 = reshape(%415, newshape=[16, 2, 3]) /* ty=Tensor[(16, 2, 3), float64] */;
  %420 = reshape(%416, newshape=[546]) /* ty=Tensor[(546), float32] */;
  %421 = reshape(%417, newshape=[12, 2]) /* ty=Tensor[(12, 2), float32] */;
  %422 = reshape(%418, newshape=[192]) /* ty=Tensor[(192), int8] */;
  %423 = @func_842(%419, %420, %421, %422) /* ty=(Tensor[(16, 2, 3), float64], Tensor[(4, 8, 6), float32], Tensor[(546), float32], Tensor[(12, 2), float32], Tensor[(192), int8], Tensor[(6, 4), float32]) */;
  %424 = @func_2026() /* ty=(bool, Tensor[(7, 10, 13), float64]) */;
  %425 = %424.0;
  %426 = cast(%var_2093, dtype="int32") /* ty=Tensor[(1, 546), int32] */;
  %427 = cast(%425, dtype="int32") /* ty=int32 */;
  %428 = @func_1426() /* ty=(Tensor[(7, 10, 13), float32], Tensor[(1, 4), bool], bool) */;
  %429 = cast(meta[relay.Constant][21] /* ty=Tensor[(910), float32] */, dtype="float32") /* ty=Tensor[(910), float32] */;
  %430 = reshape(%429, newshape=[7, 10, 13]) /* ty=Tensor[(7, 10, 13), float32] */;
  %431 = @func_1657(%430) /* ty=(Tensor[(7, 10, 13), float64],) */;
  %432 = multiply(%411, %412) /* ty=Tensor[(7, 5, 12), uint8] */;
  %433 = bitwise_and(%413, %414) /* ty=Tensor[(7, 5, 12), uint16] */;
  %434 = %423.1;
  %435 = bitwise_xor(%426, %427) /* ty=Tensor[(1, 546), int32] */;
  %436 = %428.2;
  %437 = %431.0;
  (%432, %433, %434, meta[relay.Constant][19] /* ty=Tensor[(96), float64] */, %var_2094, meta[relay.Constant][20] /* ty=Tensor[(192), int8] */, %435, %436, %437, meta[relay.Constant][21] /* ty=Tensor[(910), float32] */)
}

def @func_13208(%var_13170: Tensor[(378), float64]) -> (Tensor[(7, 10, 13), float32], Tensor[(378), float64], Tensor[(378), float64], Tensor[(7, 10, 13), float64], Tensor[(7, 10, 13), float64], Tensor[(36), float32]) {
  %438 = @func_6975() /* ty=(Tensor[(7, 10, 13), float32],) */;
  %439 = cast(%var_13170, dtype="float64") /* ty=Tensor[(378), float64] */;
  %440 = reshape(%439, newshape=[378]) /* ty=Tensor[(378), float64] */;
  %441 = @func_9719(%440) /* ty=(Tensor[(7, 10, 13), float32], Tensor[(9, 14, 3), float64], Tensor[(378), float64], Tensor[(7, 10, 13), float64], Tensor[(7, 10, 13), float64], Tensor[(7, 10, 13), float64], Tensor[(16, 3, 12), bool]) */;
  %442 = @func_1502() /* ty=(Tensor[(7, 10, 13), float64],) */;
  %443 = cast(meta[relay.Constant][22] /* ty=Tensor[(36), float32] */, dtype="float32") /* ty=Tensor[(36), float32] */;
  %444 = reshape(%443, newshape=[3, 12]) /* ty=Tensor[(3, 12), float32] */;
  %445 = @func_6564(%444) /* ty=(Tensor[(7, 10, 13), float64], Tensor[(546), float32], Tensor[(4, ?, 6), int32], Tensor[(24), float32], Tensor[(3, 4, 3), float32], Tensor[(3, 12), float32], Tensor[(7, 10, 13), float64]) */;
  %446 = %438.0;
  %447 = %441.2;
  %448 = %442.0;
  %449 = %445.6;
  (%446, %447, %var_13170, %448, %449, meta[relay.Constant][22] /* ty=Tensor[(36), float32] */)
}

def @func_6861() -> bool {
  @func_6859() /* ty=bool */
}

def @func_4588() -> (Tensor[(7, 10, 13), uint8], Tensor[(1, 4), bool], Tensor[(7, 10, 13), float64], Tensor[(7, 10, 13), float64], Tensor[(910), float32], Tensor[(7, 10, 13), float64]) {
  %450 = @func_1858() /* ty=(Tensor[(7, 10, 13), float64], Tensor[(7, 10, 13), float32]) */;
  %451 = %450.1;
  %452 = @func_1502() /* ty=(Tensor[(7, 10, 13), float64],) */;
  %453 = %452.0;
  %454 = cast(%453, dtype="uint8") /* ty=Tensor[(7, 10, 13), uint8] */;
  %455 = shape_of(%451, dtype="int32") /* ty=Tensor[(3), int32] */;
  %456 = cast(%451, dtype="uint8") /* ty=Tensor[(7, 10, 13), uint8] */;
  %457 = dyn.reshape(%454, %455, newshape=[]) /* ty=Tensor[(?, ?, ?), uint8] */;
  %458 = @func_1426() /* ty=(Tensor[(7, 10, 13), float32], Tensor[(1, 4), bool], bool) */;
  %459 = @func_3950() /* ty=(bool, Tensor[(7, 10, 13), float64], Tensor[(7, 10, 13), float32]) */;
  %460 = @func_1502() /* ty=(Tensor[(7, 10, 13), float64],) */;
  %461 = @func_1761() /* ty=(bool, Tensor[(7, 10, 13), float64], Tensor[(910), float32]) */;
  %462 = %459.1;
  %463 = cast(%462, dtype="float32") /* ty=Tensor[(7, 10, 13), float32] */;
  %464 = reshape(%463, newshape=[7, 10, 13]) /* ty=Tensor[(7, 10, 13), float32] */;
  %465 = @func_1657(%464) /* ty=(Tensor[(7, 10, 13), float64],) */;
  %466 = bitwise_and(%456, %457) /* ty=Tensor[(7, 10, 13), uint8] */;
  %467 = %458.1;
  %468 = %460.0;
  %469 = %461.2;
  %470 = %465.0;
  (%466, %467, %462, %468, %469, %470)
}

def @func_4902(%var_4900: Tensor[(2, 576), float64]) -> (Tensor[(7, 10, 13), float32], Tensor[(8, 16, 9), float64], Tensor[(2, 576), float64], bool, Tensor[(360), uint64]) {
  @func_4899(%var_4900) /* ty=(Tensor[(7, 10, 13), float32], Tensor[(8, 16, 9), float64], Tensor[(2, 576), float64], bool, Tensor[(360), uint64]) */
}

def @func_11998() -> (bool,) {
  %471 = @func_5839() /* ty=(bool,) */;
  %472 = %471.0;
  (%472,)
}

def @func_4818(%var_4816: Tensor[(10, 16, 3), float64]) -> Tensor[(10, 16, 3), float64] {
  @func_4815(%var_4816) /* ty=Tensor[(10, 16, 3), float64] */
}

def @func_7857() -> (bool, Tensor[(2, 9, 11), float64], Tensor[(198), uint8]) {
  @func_7855() /* ty=(bool, Tensor[(2, 9, 11), float64], Tensor[(198), uint8]) */
}

def @func_5341() -> (Tensor[(7, 10, 13), float32],) {
  %477 = fn () -> (Tensor[(7, 10, 13), float32],) {
    %473 = @func_1858() /* ty=(Tensor[(7, 10, 13), float64], Tensor[(7, 10, 13), float32]) */;
    %474 = %473.1;
    %475 = cast(%474, dtype="float32") /* ty=Tensor[(7, 10, 13), float32] */;
    %476 = cos(%475) /* ty=Tensor[(7, 10, 13), float32] */;
    (%476,)
  };
  %477() /* ty=(Tensor[(7, 10, 13), float32],) */
}

def @func_4278() -> Tensor[(7, 10, 13), float64] {
  %479 = fn () -> Tensor[(7, 10, 13), float64] {
    %478 = @func_2026() /* ty=(bool, Tensor[(7, 10, 13), float64]) */;
    %478.1
  };
  %479() /* ty=Tensor[(7, 10, 13), float64] */
}

def @func_6154() -> Tensor[(7, 10, 13), float64] {
  %481 = fn () -> Tensor[(7, 10, 13), float64] {
    %480 = @func_2787() /* ty=(Tensor[(7, 10, 13), float64],) */;
    %480.0
  };
  %481() /* ty=Tensor[(7, 10, 13), float64] */
}

def @func_842(%var_757: Tensor[(16, 2, 3), float64], %var_790: Tensor[(546), float32], %var_791: Tensor[(12, 2), float32], %var_792: Tensor[(192), int8]) -> (Tensor[(16, 2, 3), float64], Tensor[(4, 8, 6), float32], Tensor[(546), float32], Tensor[(12, 2), float32], Tensor[(192), int8], Tensor[(6, 4), float32]) {
  %482 = cast(%var_757, dtype="float64") /* ty=Tensor[(16, 2, 3), float64] */;
  %483 = cast(%var_790, dtype="float32") /* ty=Tensor[(546), float32] */;
  %484 = cast(%var_791, dtype="float32") /* ty=Tensor[(12, 2), float32] */;
  %485 = cast(%var_792, dtype="int8") /* ty=Tensor[(192), int8] */;
  %486 = reshape(%483, newshape=[3, 13, 14]) /* ty=Tensor[(3, 13, 14), float32] */;
  %487 = reshape(%484, newshape=[6, 4]) /* ty=Tensor[(6, 4), float32] */;
  %488 = reshape(%485, newshape=[4, 8, 6]) /* ty=Tensor[(4, 8, 6), int8] */;
  %489 = @func_247(%486, %487, %488) /* ty=(Tensor[(6, 4), float32], Tensor[(4, ?, 6), int8], Tensor[(4, ?, 6), int32], Tensor[(4, 8, 6), float32], Tensor[(4, ?, 6), int8], Tensor[(3, 13, 14), float64]) */;
  %490 = cast(%var_790, dtype="float32") /* ty=Tensor[(546), float32] */;
  %491 = cast(%var_791, dtype="float32") /* ty=Tensor[(12, 2), float32] */;
  %492 = cast(%var_792, dtype="int8") /* ty=Tensor[(192), int8] */;
  %493 = reshape(%490, newshape=[3, 13, 14]) /* ty=Tensor[(3, 13, 14), float32] */;
  %494 = reshape(%491, newshape=[6, 4]) /* ty=Tensor[(6, 4), float32] */;
  %495 = reshape(%492, newshape=[4, 8, 6]) /* ty=Tensor[(4, 8, 6), int8] */;
  %496 = @func_247(%493, %494, %495) /* ty=(Tensor[(6, 4), float32], Tensor[(4, ?, 6), int8], Tensor[(4, ?, 6), int32], Tensor[(4, 8, 6), float32], Tensor[(4, ?, 6), int8], Tensor[(3, 13, 14), float64]) */;
  %497 = atanh(%482) /* ty=Tensor[(16, 2, 3), float64] */;
  %498 = %489.3;
  %499 = %496.0;
  (%497, %498, %var_790, %var_791, %var_792, %499)
}

def @func_3523(%var_3520: Tensor[(420, 8), float64], %var_3521: Tensor[(546), float32], %var_3522: Tensor[(96), float64]) -> (Tensor[(7, 10, 13), float32], Tensor[(7, 10, 13), float32], Tensor[(7, 10, 13), float32], Tensor[(24, 1), float32], Tensor[(420, 8), float64], Tensor[(546), float32], Tensor[(96), float64], bool, Tensor[(7, 10, 13), float64], Tensor[(280), float32]) {
  @func_3518(%var_3520, %var_3521, %var_3522) /* ty=(Tensor[(7, 10, 13), float32], Tensor[(7, 10, 13), float32], Tensor[(7, 10, 13), float32], Tensor[(24, 1), float32], Tensor[(420, 8), float64], Tensor[(546), float32], Tensor[(96), float64], bool, Tensor[(7, 10, 13), float64], Tensor[(280), float32]) */
}

def @func_1657(%var_1646: Tensor[(7, 10, 13), float32]) -> (Tensor[(7, 10, 13), float64],) {
  %500 = @func_1369() /* ty=(Tensor[(7, 10, 13), float32], Tensor[(7, 10, 13), float32]) */;
  %501 = %500.1;
  %502 = cast(%var_1646, dtype="int16") /* ty=Tensor[(7, 10, 13), int16] */;
  %503 = shape_of(%501, dtype="int32") /* ty=Tensor[(3), int32] */;
  %504 = cast(%501, dtype="int16") /* ty=Tensor[(7, 10, 13), int16] */;
  %505 = dyn.reshape(%502, %503, newshape=[]) /* ty=Tensor[(?, ?, ?), int16] */;
  %506 = bitwise_xor(%504, %505) /* ty=Tensor[(7, 10, 13), int16] */;
  %507 = cast(%506, dtype="float64") /* ty=Tensor[(7, 10, 13), float64] */;
  %508 = log(%507) /* ty=Tensor[(7, 10, 13), float64] */;
  (%508,)
}

def @func_3004(%var_2990: Tensor[(11, 7, 13), float32]) -> (Tensor[(11, 7, 13), float32],) {
  %509 = cast(%var_2990, dtype="float32") /* ty=Tensor[(11, 7, 13), float32] */;
  %510 = exp(%509) /* ty=Tensor[(11, 7, 13), float32] */;
  (%510,)
}

def @func_8356() -> (Tensor[(96), float64], Tensor[(7, 10, 13), float64], Tensor[(910), float32]) {
  %517 = fn () -> (Tensor[(96), float64], Tensor[(7, 10, 13), float64], Tensor[(910), float32]) {
    %511 = @func_5177() /* ty=(Tensor[(7, 10, 13), float64], bool, Tensor[(96), float64], Tensor[(3360), float64], Tensor[(546), float32], Tensor[(96), float64], Tensor[(7, 10, 13), float64]) */;
    %512 = cast(meta[relay.Constant][23] /* ty=Tensor[(910), float32] */, dtype="float32") /* ty=Tensor[(910), float32] */;
    %513 = reshape(%512, newshape=[7, 10, 13]) /* ty=Tensor[(7, 10, 13), float32] */;
    %514 = @func_1657(%513) /* ty=(Tensor[(7, 10, 13), float64],) */;
    %515 = %511.2;
    %516 = %514.0;
    (%515, %516, meta[relay.Constant][23] /* ty=Tensor[(910), float32] */)
  };
  %517() /* ty=(Tensor[(96), float64], Tensor[(7, 10, 13), float64], Tensor[(910), float32]) */
}

def @func_5902() -> Tensor[(7, 10, 13), float64] {
  %518 = fn () -> Tensor[(7, 10, 13), float64] {
    @func_5421() /* ty=Tensor[(7, 10, 13), float64] */
  };
  %518() /* ty=Tensor[(7, 10, 13), float64] */
}

def @func_4661() -> (bool, Tensor[(7, 10, 13), float64]) {
  @func_4659() /* ty=(bool, Tensor[(7, 10, 13), float64]) */
}

def @func_6975() -> (Tensor[(7, 10, 13), float32],) {
  %519 = @func_1426() /* ty=(Tensor[(7, 10, 13), float32], Tensor[(1, 4), bool], bool) */;
  %520 = %519.0;
  (%520,)
}

def @func_4239(%var_4237: Tensor[(546), float32], %var_4238: Tensor[(192), int8]) -> (Tensor[(7, 10, 13), float32], Tensor[(7, 10, 13), float32], Tensor[(4, 8, 6), float32], Tensor[(546), float32], Tensor[(24), float32], Tensor[(192), int8]) {
  %533 = fn (%var_4231: Tensor[(546), float32], %var_4233: Tensor[(192), int8]) -> (Tensor[(7, 10, 13), float32], Tensor[(7, 10, 13), float32], Tensor[(4, 8, 6), float32], Tensor[(546), float32], Tensor[(24), float32], Tensor[(192), int8]) {
    %521 = @func_3682() /* ty=(bool, Tensor[(4, ?, 6), int8], Tensor[(24), float32], Tensor[(7, 10, 13), float32], Tensor[(7, 10, 13), float32], Tensor[(910), float32]) */;
    %522 = @func_1232() /* ty=(Tensor[(7, 10, 13), float32],) */;
    %523 = cast(%var_4231, dtype="float32") /* ty=Tensor[(546), float32] */;
    %524 = cast(meta[relay.Constant][24] /* ty=Tensor[(24), float32] */, dtype="float32") /* ty=Tensor[(24), float32] */;
    %525 = cast(%var_4233, dtype="int8") /* ty=Tensor[(192), int8] */;
    %526 = reshape(%523, newshape=[3, 13, 14]) /* ty=Tensor[(3, 13, 14), float32] */;
    %527 = reshape(%524, newshape=[6, 4]) /* ty=Tensor[(6, 4), float32] */;
    %528 = reshape(%525, newshape=[4, 8, 6]) /* ty=Tensor[(4, 8, 6), int8] */;
    %529 = @func_247(%526, %527, %528) /* ty=(Tensor[(6, 4), float32], Tensor[(4, ?, 6), int8], Tensor[(4, ?, 6), int32], Tensor[(4, 8, 6), float32], Tensor[(4, ?, 6), int8], Tensor[(3, 13, 14), float64]) */;
    %530 = %521.3;
    %531 = %522.0;
    %532 = %529.3;
    (%530, %531, %532, %var_4231, meta[relay.Constant][24] /* ty=Tensor[(24), float32] */, %var_4233)
  };
  %533(%var_4237, %var_4238) /* ty=(Tensor[(7, 10, 13), float32], Tensor[(7, 10, 13), float32], Tensor[(4, 8, 6), float32], Tensor[(546), float32], Tensor[(24), float32], Tensor[(192), int8]) */
}

def @func_4702() -> Tensor[(7, 10, 13), float64] {
  %534 = fn () -> Tensor[(7, 10, 13), float64] {
    @func_1704() /* ty=Tensor[(7, 10, 13), float64] */
  };
  %534() /* ty=Tensor[(7, 10, 13), float64] */
}

def @func_4754() -> (bool, Tensor[(7, 10, 13), float32]) {
  %535 = @func_1232() /* ty=(Tensor[(7, 10, 13), float32],) */;
  %536 = @func_1694() /* ty=bool */;
  %537 = %535.0;
  (%536, %537)
}

def @func_12658() -> Tensor[(96), float64] {
  %539 = fn () -> Tensor[(96), float64] {
    %538 = @func_8355() /* ty=(Tensor[(96), float64], Tensor[(7, 10, 13), float64], Tensor[(910), float32]) */;
    %538.0
  };
  %539() /* ty=Tensor[(96), float64] */
}

def @func_4809() -> (Tensor[(7, 10, 13), float64],) {
  @func_4807() /* ty=(Tensor[(7, 10, 13), float64],) */
}

def @func_10350() -> Tensor[(300, 1), float32] {
  %540 = @func_5294() /* ty=(Tensor[(1, 4), bool], Tensor[(7, 10, 13), float64], Tensor[(14, 15, 16), float64], Tensor[(3360), float64], Tensor[(300, 1), float32], Tensor[(24), float32]) */;
  %540.4
}

def @func_9587() -> (Tensor[(7, 10, 13), float64], Tensor[(7, 10, 13), float64], Tensor[(2, 1680), float64], Tensor[(3360), float64], Tensor[(546), float32], Tensor[(96), float64]) {
  @func_9585() /* ty=(Tensor[(7, 10, 13), float64], Tensor[(7, 10, 13), float64], Tensor[(2, 1680), float64], Tensor[(3360), float64], Tensor[(546), float32], Tensor[(96), float64]) */
}

def @func_8582(%var_8581: Tensor[(2, 240), float64]) -> (Tensor[(7, 10, 13), float64], Tensor[(10, 16, 3), float64], Tensor[(2, 240), float64], bool, Tensor[(7, 10, 13), float32], Tensor[(1, 4), bool]) {
  %552 = fn (%var_8547: Tensor[(2, 240), float64]) -> (Tensor[(7, 10, 13), float64], Tensor[(10, 16, 3), float64], Tensor[(2, 240), float64], bool, Tensor[(7, 10, 13), float32], Tensor[(1, 4), bool]) {
    %541 = @func_5696() /* ty=(Tensor[(7, 10, 13), float64], Tensor[(7, 10, 13), float64]) */;
    %542 = cast(%var_8547, dtype="float64") /* ty=Tensor[(2, 240), float64] */;
    %543 = reshape(%542, newshape=[10, 16, 3]) /* ty=Tensor[(10, 16, 3), float64] */;
    %544 = @func_7872() /* ty=(bool, bool) */;
    %545 = @func_1369() /* ty=(Tensor[(7, 10, 13), float32], Tensor[(7, 10, 13), float32]) */;
    %546 = @func_4196() /* ty=(Tensor[(1, 4), bool],) */;
    %547 = %541.0;
    %548 = @func_4815(%543) /* ty=Tensor[(10, 16, 3), float64] */;
    %549 = %544.1;
    %550 = %545.0;
    %551 = %546.0;
    (%547, %548, %var_8547, %549, %550, %551)
  };
  %552(%var_8581) /* ty=(Tensor[(7, 10, 13), float64], Tensor[(10, 16, 3), float64], Tensor[(2, 240), float64], bool, Tensor[(7, 10, 13), float32], Tensor[(1, 4), bool]) */
}

def @func_9339() -> Tensor[(15, 5, 3), int16] {
  %555 = fn () -> Tensor[(15, 5, 3), int16] {
    %553 = cast(meta[relay.Constant][25] /* ty=int16 */, dtype="int16") /* ty=int16 */;
    %554 = cast(meta[relay.Constant][26] /* ty=Tensor[(15, 5, 3), int16] */, dtype="int16") /* ty=Tensor[(15, 5, 3), int16] */;
    bitwise_xor(%553, %554) /* ty=Tensor[(15, 5, 3), int16] */
  };
  %555() /* ty=Tensor[(15, 5, 3), int16] */
}

def @func_4314() -> (bool,) {
  @func_4312() /* ty=(bool,) */
}

def @func_5917() -> Tensor[(7, 10, 13), float64] {
  @func_1704() /* ty=Tensor[(7, 10, 13), float64] */
}

def @func_126(%var_71: Tensor[(4, 1, 6), float32]) -> (Tensor[(4, ?, 6), int32], Tensor[(4, ?, 6), int8]) {
  %556 = cast(%var_71, dtype="float32") /* ty=Tensor[(4, 1, 6), float32] */;
  %557 = atan(%556) /* ty=Tensor[(4, 1, 6), float32] */;
  %558 = cast(%var_71, dtype="int32") /* ty=Tensor[(4, 1, 6), int32] */;
  %559 = shape_of(%557, dtype="int32") /* ty=Tensor[(3), int32] */;
  %560 = cast(%557, dtype="int32") /* ty=Tensor[(4, 1, 6), int32] */;
  %561 = dyn.reshape(%558, %559, newshape=[]) /* ty=Tensor[(?, ?, ?), int32] */;
  %562 = cast(%557, dtype="float64") /* ty=Tensor[(4, 1, 6), float64] */;
  %563 = sqrt(%562) /* ty=Tensor[(4, 1, 6), float64] */;
  %564 = cast(%var_71, dtype="int8") /* ty=Tensor[(4, 1, 6), int8] */;
  %565 = shape_of(%563, dtype="int32") /* ty=Tensor[(3), int32] */;
  %566 = cast(%563, dtype="int8") /* ty=Tensor[(4, 1, 6), int8] */;
  %567 = dyn.reshape(%564, %565, newshape=[]) /* ty=Tensor[(?, ?, ?), int8] */;
  %568 = add(%560, %561) /* ty=Tensor[(4, ?, 6), int32] */;
  %569 = minimum(%566, %567) /* ty=Tensor[(4, ?, 6), int8] */;
  (%568, %569)
}

def @func_3230() -> bool {
  @func_2272() /* ty=bool */
}

def @func_11038() -> (Tensor[(7, 10, 13), float32], bool, bool) {
  %575 = fn () -> (Tensor[(7, 10, 13), float32], bool, bool) {
    %570 = @func_3950() /* ty=(bool, Tensor[(7, 10, 13), float64], Tensor[(7, 10, 13), float32]) */;
    %571 = @func_2292() /* ty=(Tensor[(7, 10, 13), float32], bool) */;
    %572 = %570.2;
    %573 = %571.1;
    %574 = @func_3186() /* ty=bool */;
    (%572, %573, %574)
  };
  %575() /* ty=(Tensor[(7, 10, 13), float32], bool, bool) */
}

def @func_12108(%var_12102: Tensor[(546), float32]) -> (bool, bool, Tensor[(546), float32], Tensor[(192, 1), int8]) {
  %576 = @func_4312() /* ty=(bool,) */;
  %577 = cast(%var_12102, dtype="float32") /* ty=Tensor[(546), float32] */;
  %578 = cast(meta[relay.Constant][27] /* ty=Tensor[(192, 1), int8] */, dtype="int8") /* ty=Tensor[(192, 1), int8] */;
  %579 = reshape(%577, newshape=[546]) /* ty=Tensor[(546), float32] */;
  %580 = reshape(%578, newshape=[48, 4]) /* ty=Tensor[(48, 4), int8] */;
  %581 = @func_3792(%579, %580) /* ty=(bool, Tensor[(7, 10, 13), float64], Tensor[(7, 10, 13), float64], Tensor[(4, 8, 6), float32], Tensor[(4, 24), float64], Tensor[(546), float32], Tensor[(24), float32], Tensor[(48, 4), int8], Tensor[(7, 10, 13), float32], bool) */;
  %582 = %576.0;
  %583 = %581.9;
  (%582, %583, %var_12102, meta[relay.Constant][27] /* ty=Tensor[(192, 1), int8] */)
}

def @func_2787() -> (Tensor[(7, 10, 13), float64],) {
  %584 = @func_1797() /* ty=(Tensor[(7, 10, 13), float64],) */;
  %585 = %584.0;
  (%585,)
}

def @func_6203(%var_6191: Tensor[(16), bool]) -> (bool, bool, Tensor[(7, 10, 13), float64], Tensor[(1, 4), bool], Tensor[(11, 7, 13), float32], Tensor[(16), bool], Tensor[(7, 12, 6), uint32]) {
  %586 = @func_2572() /* ty=(bool,) */;
  %587 = @func_5608() /* ty=(Tensor[(7, 10, 13), float64],) */;
  %588 = @func_4196() /* ty=(Tensor[(1, 4), bool],) */;
  %589 = @func_3230() /* ty=bool */;
  %590 = cast(%589, dtype="bool") /* ty=bool */;
  %591 = cast(%var_6191, dtype="bool") /* ty=Tensor[(16), bool] */;
  %592 = reshape(%590, newshape=[]) /* ty=bool */;
  %593 = reshape(%591, newshape=[1, 4, 4]) /* ty=Tensor[(1, 4, 4), bool] */;
  %594 = @func_4153(%592, %593) /* ty=(Tensor[(1, 4, 4), bool], Tensor[(11, 7, 13), float32], Tensor[(1001), float32]) */;
  %595 = cast(%589, dtype="uint32") /* ty=uint32 */;
  %596 = reshape(%595, newshape=[]) /* ty=uint32 */;
  %597 = %586.0;
  %598 = %587.0;
  %599 = %588.0;
  %600 = %594.1;
  %601 = @func_2960(%596) /* ty=Tensor[(7, 12, 6), uint32] */;
  (%597, %589, %598, %599, %600, %var_6191, %601)
}

def @func_4756() -> (bool, Tensor[(7, 10, 13), float32]) {
  @func_4754() /* ty=(bool, Tensor[(7, 10, 13), float32]) */
}

def @func_1504() -> (Tensor[(7, 10, 13), float64],) {
  @func_1502() /* ty=(Tensor[(7, 10, 13), float64],) */
}

def @func_1319() -> (Tensor[(7, 10, 13), float32], Tensor[(7, 10, 13), float32]) {
  %606 = fn () -> (Tensor[(7, 10, 13), float32], Tensor[(7, 10, 13), float32]) {
    %602 = @func_1232() /* ty=(Tensor[(7, 10, 13), float32],) */;
    %603 = @func_1232() /* ty=(Tensor[(7, 10, 13), float32],) */;
    %604 = %602.0;
    %605 = %603.0;
    (%604, %605)
  };
  %606() /* ty=(Tensor[(7, 10, 13), float32], Tensor[(7, 10, 13), float32]) */
}

def @func_3007(%var_3005: Tensor[(11, 7, 13), float32]) -> (Tensor[(11, 7, 13), float32],) {
  @func_3004(%var_3005) /* ty=(Tensor[(11, 7, 13), float32],) */
}

def @func_7668() -> (Tensor[(7, 10, 13), float32], bool, Tensor[(7, 10, 13), float64]) {
  %613 = fn () -> (Tensor[(7, 10, 13), float32], bool, Tensor[(7, 10, 13), float64]) {
    %607 = @func_1318() /* ty=(Tensor[(7, 10, 13), float32], Tensor[(7, 10, 13), float32]) */;
    %608 = @func_5839() /* ty=(bool,) */;
    %609 = @func_4807() /* ty=(Tensor[(7, 10, 13), float64],) */;
    %610 = %607.0;
    %611 = %608.0;
    %612 = %609.0;
    (%610, %611, %612)
  };
  %613() /* ty=(Tensor[(7, 10, 13), float32], bool, Tensor[(7, 10, 13), float64]) */
}

def @main() -> (Tensor[(2, 9, 11), float64],) {
  %614 = @func_7857() /* ty=(bool, Tensor[(2, 9, 11), float64], Tensor[(198), uint8]) */;
  %615 = %614.1;
  %616 = cast(%615, dtype="float64") /* ty=Tensor[(2, 9, 11), float64] */;
  %617 = tan(%616) /* ty=Tensor[(2, 9, 11), float64] */;
  (%617,)
}

def @func_9585() -> (Tensor[(7, 10, 13), float64], Tensor[(7, 10, 13), float64], Tensor[(2, 1680), float64], Tensor[(3360), float64], Tensor[(546), float32], Tensor[(96), float64]) {
  %618 = cast(meta[relay.Constant][28] /* ty=Tensor[(3360), float64] */, dtype="float64") /* ty=Tensor[(3360), float64] */;
  %619 = cast(meta[relay.Constant][29] /* ty=Tensor[(546), float32] */, dtype="float32") /* ty=Tensor[(546), float32] */;
  %620 = cast(meta[relay.Constant][30] /* ty=Tensor[(96), float64] */, dtype="float64") /* ty=Tensor[(96), float64] */;
  %621 = reshape(%618, newshape=[2, 1680]) /* ty=Tensor[(2, 1680), float64] */;
  %622 = reshape(%619, newshape=[546]) /* ty=Tensor[(546), float32] */;
  %623 = reshape(%620, newshape=[96]) /* ty=Tensor[(96), float64] */;
  %624 = @func_4779(%621, %622, %623) /* ty=(Tensor[(7, 10, 13), float32], bool, Tensor[(24, 1), float32], Tensor[(2, 1680), float64], Tensor[(546), float32], Tensor[(96), float64]) */;
  %625 = @func_5917() /* ty=Tensor[(7, 10, 13), float64] */;
  %626 = @func_5901() /* ty=Tensor[(7, 10, 13), float64] */;
  %627 = %624.3;
  (%625, %626, %627, meta[relay.Constant][28] /* ty=Tensor[(3360), float64] */, meta[relay.Constant][29] /* ty=Tensor[(546), float32] */, meta[relay.Constant][30] /* ty=Tensor[(96), float64] */)
}

def @func_9487(%var_9485: Tensor[(1, 13, 13), int16], %var_9486: Tensor[(9, 13, 13), int16]) -> (Tensor[(9, 13, 13), int16], Tensor[(?, 13, 13), float32]) {
  @func_9483(%var_9485, %var_9486) /* ty=(Tensor[(9, 13, 13), int16], Tensor[(?, 13, 13), float32]) */
}

def @func_6249() -> (Tensor[(7, 10, 13), float64], Tensor[(2, 9, 11), float64], Tensor[(198), uint8]) {
  %634 = fn () -> (Tensor[(7, 10, 13), float64], Tensor[(2, 9, 11), float64], Tensor[(198), uint8]) {
    %628 = cast(meta[relay.Constant][31] /* ty=Tensor[(198), uint8] */, dtype="uint8") /* ty=Tensor[(198), uint8] */;
    %629 = cast(meta[relay.Constant][31] /* ty=Tensor[(198), uint8] */, dtype="uint8") /* ty=Tensor[(198), uint8] */;
    %630 = reshape(%628, newshape=[2, 9, 11]) /* ty=Tensor[(2, 9, 11), uint8] */;
    %631 = reshape(%629, newshape=[2, 9, 11]) /* ty=Tensor[(2, 9, 11), uint8] */;
    %632 = @func_4277() /* ty=Tensor[(7, 10, 13), float64] */;
    %633 = @func_3968(%630, %631) /* ty=Tensor[(2, 9, 11), float64] */;
    (%632, %633, meta[relay.Constant][31] /* ty=Tensor[(198), uint8] */)
  };
  %634() /* ty=(Tensor[(7, 10, 13), float64], Tensor[(2, 9, 11), float64], Tensor[(198), uint8]) */
}

def @func_9538() -> bool {
  @func_3186() /* ty=bool */
}

def @func_7769(%var_7719: Tensor[(546), float32], %var_7766: Tensor[(96), float64]) -> (Tensor[(7, 10, 13), float64], Tensor[(7, 10, 13), float64], Tensor[(7, 5, 12), uint16], uint8, Tensor[(420), uint8], Tensor[(546), float32], Tensor[(24), float32], Tensor[(7, 10, 13), float64], Tensor[(546), float32], Tensor[(96), float64]) {
  %635 = @func_1502() /* ty=(Tensor[(7, 10, 13), float64],) */;
  %636 = @func_3950() /* ty=(bool, Tensor[(7, 10, 13), float64], Tensor[(7, 10, 13), float32]) */;
  %637 = cast(meta[relay.Constant][32] /* ty=uint8 */, dtype="uint8") /* ty=uint8 */;
  %638 = cast(meta[relay.Constant][33] /* ty=Tensor[(420), uint8] */, dtype="uint8") /* ty=Tensor[(420), uint8] */;
  %639 = cast(%var_7719, dtype="float32") /* ty=Tensor[(546), float32] */;
  %640 = cast(meta[relay.Constant][34] /* ty=Tensor[(24), float32] */, dtype="float32") /* ty=Tensor[(24), float32] */;
  %641 = reshape(%637, newshape=[]) /* ty=uint8 */;
  %642 = reshape(%638, newshape=[420]) /* ty=Tensor[(420), uint8] */;
  %643 = reshape(%639, newshape=[91, 6]) /* ty=Tensor[(91, 6), float32] */;
  %644 = reshape(%640, newshape=[24]) /* ty=Tensor[(24), float32] */;
  %645 = @func_7043(%641, %642, %643, %644) /* ty=(Tensor[(7, 10, 13), float32], Tensor[(7, 5, 12), uint16], uint8, Tensor[(420), uint8], Tensor[(91, 6), float32], Tensor[(24), float32]) */;
  %646 = @func_1797() /* ty=(Tensor[(7, 10, 13), float64],) */;
  %647 = cast(%var_7719, dtype="float32") /* ty=Tensor[(546), float32] */;
  %648 = cast(%var_7766, dtype="float64") /* ty=Tensor[(96), float64] */;
  %649 = reshape(%647, newshape=[546]) /* ty=Tensor[(546), float32] */;
  %650 = reshape(%648, newshape=[8, 12]) /* ty=Tensor[(8, 12), float64] */;
  %651 = @func_5589(%649, %650) /* ty=(Tensor[(3360), bool], Tensor[(7, 10, 13), float64], Tensor[(7, 10, 13), float64], bool, Tensor[(546), float32], Tensor[(8, 12), float64], Tensor[(4, 8, 6), float32], Tensor[(24), float32], Tensor[(8, 24), int8]) */;
  %652 = %635.0;
  %653 = %636.1;
  %654 = %645.1;
  %655 = %646.0;
  %656 = %651.4;
  (%652, %653, %654, meta[relay.Constant][32] /* ty=uint8 */, meta[relay.Constant][33] /* ty=Tensor[(420), uint8] */, %var_7719, meta[relay.Constant][34] /* ty=Tensor[(24), float32] */, %655, %656, %var_7766)
}

def @func_11579() -> (Tensor[(7, 10, 13), float64], Tensor[(96), float64]) {
  %657 = @func_7920() /* ty=(Tensor[(11, 15, 9), float32], Tensor[(7, 10, 13), float64]) */;
  %658 = %657.1;
  %659 = @func_9915() /* ty=Tensor[(96), float64] */;
  (%658, %659)
}

def @func_5482() -> Tensor[(7, 10, 13), float64] {
  @func_5480() /* ty=Tensor[(7, 10, 13), float64] */
}

def @func_4461(%var_4459: Tensor[(16), bool]) -> (Tensor[(7, 10, 13), float32], Tensor[(1001), float32], bool, Tensor[(16), bool]) {
  @func_4458(%var_4459) /* ty=(Tensor[(7, 10, 13), float32], Tensor[(1001), float32], bool, Tensor[(16), bool]) */
}

def @func_11424() -> (Tensor[(7, 10, 13), float64], Tensor[(1, 4), bool]) {
  %660 = @func_7423() /* ty=(Tensor[(7, 10, 13), float64], Tensor[(7, 10, 13), float64]) */;
  %661 = @func_6503() /* ty=(Tensor[(1, 4), bool], Tensor[(1, 4), bool], Tensor[(7, 10, 13), float32]) */;
  %662 = %660.0;
  %663 = %661.0;
  (%662, %663)
}

def @func_3682() -> (bool, Tensor[(4, ?, 6), int8], Tensor[(24), float32], Tensor[(7, 10, 13), float32], Tensor[(7, 10, 13), float32], Tensor[(910), float32]) {
  %664 = @func_2572() /* ty=(bool,) */;
  %665 = cast(meta[relay.Constant][35] /* ty=Tensor[(24), float32] */, dtype="float32") /* ty=Tensor[(24), float32] */;
  %666 = reshape(%665, newshape=[4, 1, 6]) /* ty=Tensor[(4, 1, 6), float32] */;
  %667 = @func_126(%666) /* ty=(Tensor[(4, ?, 6), int32], Tensor[(4, ?, 6), int8]) */;
  %668 = @func_2530() /* ty=(Tensor[(7, 10, 13), float32],) */;
  %669 = @func_2048() /* ty=(Tensor[(7, 10, 13), float32], Tensor[(7, 10, 13), float64]) */;
  %670 = @func_1761() /* ty=(bool, Tensor[(7, 10, 13), float64], Tensor[(910), float32]) */;
  %671 = %664.0;
  %672 = %667.1;
  %673 = %668.0;
  %674 = %669.0;
  %675 = %670.2;
  (%671, %672, meta[relay.Constant][35] /* ty=Tensor[(24), float32] */, %673, %674, %675)
}

def @func_6379(%var_6377: Tensor[(6, 4), float32], %var_6378: Tensor[(280), float32]) -> (bool, Tensor[(7, 10, 13), float64], Tensor[(6, 4), float32], Tensor[(280), float32], bool) {
  @func_6375(%var_6377, %var_6378) /* ty=(bool, Tensor[(7, 10, 13), float64], Tensor[(6, 4), float32], Tensor[(280), float32], bool) */
}

def @func_3894(%var_3812: Tensor[(10, 6, 6), uint64], %var_3813: Tensor[(10, 6, 6), uint64]) -> (Tensor[(10, 6, 6), bool], Tensor[(10, 6, 6), float32], bool, Tensor[(7, 10, 13), float64], Tensor[(7, 12, 6), float64]) {
  %676 = cast(%var_3813, dtype="bool") /* ty=Tensor[(10, 6, 6), bool] */;
  %677 = shape_of(%var_3812, dtype="int32") /* ty=Tensor[(3), int32] */;
  %678 = cast(%var_3812, dtype="bool") /* ty=Tensor[(10, 6, 6), bool] */;
  %679 = dyn.reshape(%676, %677, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %680 = cast(%var_3812, dtype="float32") /* ty=Tensor[(10, 6, 6), float32] */;
  %681 = shape_of(%var_3813, dtype="int32") /* ty=Tensor[(3), int32] */;
  %682 = cast(%var_3813, dtype="float32") /* ty=Tensor[(10, 6, 6), float32] */;
  %683 = dyn.reshape(%680, %681, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %684 = @func_1858() /* ty=(Tensor[(7, 10, 13), float64], Tensor[(7, 10, 13), float32]) */;
  %685 = @func_2272() /* ty=bool */;
  %686 = cast(%685, dtype="uint32") /* ty=uint32 */;
  %687 = reshape(%686, newshape=[]) /* ty=uint32 */;
  %688 = @func_2960(%687) /* ty=Tensor[(7, 12, 6), uint32] */;
  %689 = cast(%688, dtype="float64") /* ty=Tensor[(7, 12, 6), float64] */;
  %690 = less_equal(%678, %679) /* ty=Tensor[(10, 6, 6), bool] */;
  %691 = floor_divide(%682, %683) /* ty=Tensor[(10, 6, 6), float32] */;
  %692 = %684.0;
  %693 = acos(%689) /* ty=Tensor[(7, 12, 6), float64] */;
  (%690, %691, %685, %692, %693)
}

def @func_6503() -> (Tensor[(1, 4), bool], Tensor[(1, 4), bool], Tensor[(7, 10, 13), float32]) {
  %694 = @func_4196() /* ty=(Tensor[(1, 4), bool],) */;
  %695 = @func_1426() /* ty=(Tensor[(7, 10, 13), float32], Tensor[(1, 4), bool], bool) */;
  %696 = @func_5818() /* ty=(Tensor[(7, 10, 13), float32],) */;
  %697 = %694.0;
  %698 = %695.1;
  %699 = %696.0;
  (%697, %698, %699)
}

def @func_11760() -> (Tensor[(7, 10, 13), float32], bool) {
  %700 = @func_7097() /* ty=(bool, Tensor[(7, 10, 13), float32], Tensor[(7, 10, 13), float32], Tensor[(1001), float32], Tensor[(4, 4), bool]) */;
  %701 = @func_8887() /* ty=(bool,) */;
  %702 = %700.1;
  %703 = %701.0;
  (%702, %703)
}

def @func_12190(%var_12179: Tensor[(672), float64]) -> (Tensor[(7, 10, 13), float64], Tensor[(7, 10, 13), float64], Tensor[(3, 14, 16), float64], Tensor[(672), float64], bool) {
  %704 = @func_4588() /* ty=(Tensor[(7, 10, 13), uint8], Tensor[(1, 4), bool], Tensor[(7, 10, 13), float64], Tensor[(7, 10, 13), float64], Tensor[(910), float32], Tensor[(7, 10, 13), float64]) */;
  %705 = @func_5608() /* ty=(Tensor[(7, 10, 13), float64],) */;
  %706 = cast(%var_12179, dtype="float64") /* ty=Tensor[(672), float64] */;
  %707 = reshape(%706, newshape=[3, 14, 16]) /* ty=Tensor[(3, 14, 16), float64] */;
  %708 = @func_7287(%707) /* ty=(Tensor[(10, 16, 3), float64], Tensor[(480), float64], Tensor[(3, 14, 16), float64]) */;
  %709 = @func_8483() /* ty=(bool, Tensor[(14, 15, 16), float64]) */;
  %710 = %704.5;
  %711 = %705.0;
  %712 = %708.2;
  %713 = %709.0;
  (%710, %711, %712, %var_12179, %713)
}

def @func_7224(%var_7222: Tensor[(8, 12), float64], %var_7223: Tensor[(24), float32]) -> (bool, Tensor[(7, 10, 13), float64], Tensor[(192), int8], Tensor[(8, 12), float64], Tensor[(91, 6), float32], Tensor[(24), float32], Tensor[(192), int8]) {
  %728 = fn (%var_7213: Tensor[(8, 12), float64], %var_7215: Tensor[(24), float32]) -> (bool, Tensor[(7, 10, 13), float64], Tensor[(192), int8], Tensor[(8, 12), float64], Tensor[(91, 6), float32], Tensor[(24), float32], Tensor[(192), int8]) {
    %714 = @func_6063() /* ty=(bool,) */;
    %715 = @func_5010() /* ty=(Tensor[(7, 10, 13), float64],) */;
    %716 = cast(%var_7213, dtype="float64") /* ty=Tensor[(8, 12), float64] */;
    %717 = cast(meta[relay.Constant][36] /* ty=Tensor[(91, 6), float32] */, dtype="float32") /* ty=Tensor[(91, 6), float32] */;
    %718 = cast(%var_7215, dtype="float32") /* ty=Tensor[(24), float32] */;
    %719 = cast(meta[relay.Constant][37] /* ty=Tensor[(192), int8] */, dtype="int8") /* ty=Tensor[(192), int8] */;
    %720 = reshape(%716, newshape=[16, 2, 3]) /* ty=Tensor[(16, 2, 3), float64] */;
    %721 = reshape(%717, newshape=[546]) /* ty=Tensor[(546), float32] */;
    %722 = reshape(%718, newshape=[12, 2]) /* ty=Tensor[(12, 2), float32] */;
    %723 = reshape(%719, newshape=[192]) /* ty=Tensor[(192), int8] */;
    %724 = @func_842(%720, %721, %722, %723) /* ty=(Tensor[(16, 2, 3), float64], Tensor[(4, 8, 6), float32], Tensor[(546), float32], Tensor[(12, 2), float32], Tensor[(192), int8], Tensor[(6, 4), float32]) */;
    %725 = %714.0;
    %726 = %715.0;
    %727 = %724.4;
    (%725, %726, %727, %var_7213, meta[relay.Constant][36] /* ty=Tensor[(91, 6), float32] */, %var_7215, meta[relay.Constant][37] /* ty=Tensor[(192), int8] */)
  };
  %728(%var_7222, %var_7223) /* ty=(bool, Tensor[(7, 10, 13), float64], Tensor[(192), int8], Tensor[(8, 12), float64], Tensor[(91, 6), float32], Tensor[(24), float32], Tensor[(192), int8]) */
}

def @func_2532() -> (Tensor[(7, 10, 13), float32],) {
  @func_2530() /* ty=(Tensor[(7, 10, 13), float32],) */
}

def @func_2962(%var_2961: uint32) -> Tensor[(7, 12, 6), uint32] {
  %731 = fn (%var_2954: uint32) -> Tensor[(7, 12, 6), uint32] {
    %729 = cast(%var_2954, dtype="uint32") /* ty=uint32 */;
    %730 = cast(meta[relay.Constant][38] /* ty=Tensor[(7, 12, 6), uint32] */, dtype="uint32") /* ty=Tensor[(7, 12, 6), uint32] */;
    left_shift(%729, %730) /* ty=Tensor[(7, 12, 6), uint32] */
  };
  %731(%var_2961) /* ty=Tensor[(7, 12, 6), uint32] */
}

def @func_12000() -> (bool,) {
  @func_11998() /* ty=(bool,) */
}

def @func_1121(%var_1119: bool) -> (Tensor[(1, 4), bool],) {
  @func_1118(%var_1119) /* ty=(Tensor[(1, 4), bool],) */
}

def @func_10291() -> bool {
  %732 = fn () -> bool {
    @func_3186() /* ty=bool */
  };
  %732() /* ty=bool */
}

def @func_2272() -> bool {
  %733 = @func_1975() /* ty=(bool,) */;
  %733.0
}

def @func_2202(%var_2174: Tensor[(7, 10, 13), float32]) -> (Tensor[(7, 10, 13), bool], Tensor[(8, 16, 9), float64], Tensor[(1152), float64]) {
  %734 = @func_1318() /* ty=(Tensor[(7, 10, 13), float32], Tensor[(7, 10, 13), float32]) */;
  %735 = %734.0;
  %736 = cast(%var_2174, dtype="bool") /* ty=Tensor[(7, 10, 13), bool] */;
  %737 = shape_of(%735, dtype="int32") /* ty=Tensor[(3), int32] */;
  %738 = cast(%735, dtype="bool") /* ty=Tensor[(7, 10, 13), bool] */;
  %739 = dyn.reshape(%736, %737, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %740 = cast(meta[relay.Constant][39] /* ty=Tensor[(1152), float64] */, dtype="float64") /* ty=Tensor[(1152), float64] */;
  %741 = reshape(%740, newshape=[8, 16, 9]) /* ty=Tensor[(8, 16, 9), float64] */;
  %742 = greater_equal(%738, %739) /* ty=Tensor[(7, 10, 13), bool] */;
  %743 = @func_1403(%741) /* ty=Tensor[(8, 16, 9), float64] */;
  (%742, %743, meta[relay.Constant][39] /* ty=Tensor[(1152), float64] */)
}

def @func_4156(%var_4154: bool, %var_4155: Tensor[(1, 4, 4), bool]) -> (Tensor[(1, 4, 4), bool], Tensor[(11, 7, 13), float32], Tensor[(1001), float32]) {
  %751 = fn (%var_4139: bool, %var_4140: Tensor[(1, 4, 4), bool]) -> (Tensor[(1, 4, 4), bool], Tensor[(11, 7, 13), float32], Tensor[(1001), float32]) {
    %744 = cast(%var_4139, dtype="bool") /* ty=bool */;
    %745 = cast(%var_4140, dtype="bool") /* ty=Tensor[(1, 4, 4), bool] */;
    %746 = cast(meta[relay.Constant][40] /* ty=Tensor[(1001), float32] */, dtype="float32") /* ty=Tensor[(1001), float32] */;
    %747 = reshape(%746, newshape=[11, 7, 13]) /* ty=Tensor[(11, 7, 13), float32] */;
    %748 = @func_3004(%747) /* ty=(Tensor[(11, 7, 13), float32],) */;
    %749 = logical_or(%744, %745) /* ty=Tensor[(1, 4, 4), bool] */;
    %750 = %748.0;
    (%749, %750, meta[relay.Constant][40] /* ty=Tensor[(1001), float32] */)
  };
  %751(%var_4154, %var_4155) /* ty=(Tensor[(1, 4, 4), bool], Tensor[(11, 7, 13), float32], Tensor[(1001), float32]) */
}

def @func_13031(%var_13028: Tensor[(12, 15, 7), int64], %var_13029: Tensor[(96), float64], %var_13030: Tensor[(280), float32]) -> (Tensor[(12, 15, 7), float64], Tensor[(16, 2, 3), float64], Tensor[(96), float64], Tensor[(546), float32], Tensor[(24), float32], Tensor[(192), int8], bool, Tensor[(12, 15, 7), float64], Tensor[(280), float32], Tensor[(280), float32]) {
  %779 = fn (%var_12962: Tensor[(12, 15, 7), int64], %var_12995: Tensor[(96), float64], %var_13024: Tensor[(280), float32]) -> (Tensor[(12, 15, 7), float64], Tensor[(16, 2, 3), float64], Tensor[(96), float64], Tensor[(546), float32], Tensor[(24), float32], Tensor[(192), int8], bool, Tensor[(12, 15, 7), float64], Tensor[(280), float32], Tensor[(280), float32]) {
    %752 = cast(%var_12962, dtype="int64") /* ty=Tensor[(12, 15, 7), int64] */;
    %753 = shape_of(meta[relay.Constant][41] /* ty=Tensor[(12, 15, 7), int64] */, dtype="int32") /* ty=Tensor[(3), int32] */;
    %754 = cast(meta[relay.Constant][41] /* ty=Tensor[(12, 15, 7), int64] */, dtype="int64") /* ty=Tensor[(12, 15, 7), int64] */;
    %755 = dyn.reshape(%752, %753, newshape=[]) /* ty=Tensor[(?, ?, ?), int64] */;
    %756 = logical_xor(%754, %755) /* ty=Tensor[(12, 15, 7), int64] */;
    %757 = cast(%756, dtype="float64") /* ty=Tensor[(12, 15, 7), float64] */;
    %758 = cast(%var_12995, dtype="float64") /* ty=Tensor[(96), float64] */;
    %759 = cast(meta[relay.Constant][42] /* ty=Tensor[(546), float32] */, dtype="float32") /* ty=Tensor[(546), float32] */;
    %760 = cast(meta[relay.Constant][43] /* ty=Tensor[(24), float32] */, dtype="float32") /* ty=Tensor[(24), float32] */;
    %761 = cast(meta[relay.Constant][44] /* ty=Tensor[(192), int8] */, dtype="int8") /* ty=Tensor[(192), int8] */;
    %762 = reshape(%758, newshape=[16, 2, 3]) /* ty=Tensor[(16, 2, 3), float64] */;
    %763 = reshape(%759, newshape=[546]) /* ty=Tensor[(546), float32] */;
    %764 = reshape(%760, newshape=[12, 2]) /* ty=Tensor[(12, 2), float32] */;
    %765 = reshape(%761, newshape=[192]) /* ty=Tensor[(192), int8] */;
    %766 = @func_842(%762, %763, %764, %765) /* ty=(Tensor[(16, 2, 3), float64], Tensor[(4, 8, 6), float32], Tensor[(546), float32], Tensor[(12, 2), float32], Tensor[(192), int8], Tensor[(6, 4), float32]) */;
    %767 = @func_7872() /* ty=(bool, bool) */;
    %768 = cast(meta[relay.Constant][41] /* ty=Tensor[(12, 15, 7), int64] */, dtype="float64") /* ty=Tensor[(12, 15, 7), float64] */;
    %769 = cast(meta[relay.Constant][43] /* ty=Tensor[(24), float32] */, dtype="float32") /* ty=Tensor[(24), float32] */;
    %770 = cast(%var_13024, dtype="float32") /* ty=Tensor[(280), float32] */;
    %771 = reshape(%769, newshape=[24]) /* ty=Tensor[(24), float32] */;
    %772 = reshape(%770, newshape=[280]) /* ty=Tensor[(280), float32] */;
    %773 = @func_3129(%771, %772) /* ty=(Tensor[(7, 10, 13), float64], Tensor[(280), float32], Tensor[(192), int8], Tensor[(24, 8), float32], Tensor[(4, ?, 6), bool]) */;
    %774 = sqrt(%757) /* ty=Tensor[(12, 15, 7), float64] */;
    %775 = %766.0;
    %776 = %767.0;
    %777 = exp(%768) /* ty=Tensor[(12, 15, 7), float64] */;
    %778 = %773.1;
    (%774, %775, %var_12995, meta[relay.Constant][42] /* ty=Tensor[(546), float32] */, meta[relay.Constant][43] /* ty=Tensor[(24), float32] */, meta[relay.Constant][44] /* ty=Tensor[(192), int8] */, %776, %777, %778, %var_13024)
  };
  %779(%var_13028, %var_13029, %var_13030) /* ty=(Tensor[(12, 15, 7), float64], Tensor[(16, 2, 3), float64], Tensor[(96), float64], Tensor[(546), float32], Tensor[(24), float32], Tensor[(192), int8], bool, Tensor[(12, 15, 7), float64], Tensor[(280), float32], Tensor[(280), float32]) */
}

def @func_5316(%var_5314: Tensor[(3, 4, 3), float32], %var_5315: Tensor[(3, 4, 3), float32]) -> Tensor[(3, 4, 3), float32] {
  %784 = fn (%var_5301: Tensor[(3, 4, 3), float32], %var_5302: Tensor[(3, 4, 3), float32]) -> Tensor[(3, 4, 3), float32] {
    %780 = cast(%var_5302, dtype="float32") /* ty=Tensor[(3, 4, 3), float32] */;
    %781 = shape_of(%var_5301, dtype="int32") /* ty=Tensor[(3), int32] */;
    %782 = cast(%var_5301, dtype="float32") /* ty=Tensor[(3, 4, 3), float32] */;
    %783 = dyn.reshape(%780, %781, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
    power(%782, %783) /* ty=Tensor[(3, 4, 3), float32] */
  };
  %784(%var_5314, %var_5315) /* ty=Tensor[(3, 4, 3), float32] */
}

def @func_6977() -> (Tensor[(7, 10, 13), float32],) {
  @func_6975() /* ty=(Tensor[(7, 10, 13), float32],) */
}

def @func_7820() -> Tensor[(7, 10, 13), float32] {
  %786 = fn () -> Tensor[(7, 10, 13), float32] {
    %785 = @func_6503() /* ty=(Tensor[(1, 4), bool], Tensor[(1, 4), bool], Tensor[(7, 10, 13), float32]) */;
    %785.2
  };
  %786() /* ty=Tensor[(7, 10, 13), float32] */
}

def @func_12254() -> (bool, bool, Tensor[(960), int64]) {
  %787 = @func_9895() /* ty=(bool,) */;
  %788 = cast(meta[relay.Constant][45] /* ty=Tensor[(960), int64] */, dtype="int64") /* ty=Tensor[(960), int64] */;
  %789 = cast(meta[relay.Constant][45] /* ty=Tensor[(960), int64] */, dtype="int64") /* ty=Tensor[(960), int64] */;
  %790 = cast(meta[relay.Constant][45] /* ty=Tensor[(960), int64] */, dtype="int64") /* ty=Tensor[(960), int64] */;
  %791 = reshape(%788, newshape=[16, 5, 12]) /* ty=Tensor[(16, 5, 12), int64] */;
  %792 = reshape(%789, newshape=[16, 5, 12]) /* ty=Tensor[(16, 5, 12), int64] */;
  %793 = reshape(%790, newshape=[16, 5, 12]) /* ty=Tensor[(16, 5, 12), int64] */;
  %794 = @func_4083(%791, %792, %793) /* ty=(Tensor[(16, 5, 12), bool], Tensor[(16, 5, 12), uint16], bool) */;
  %795 = %787.0;
  %796 = %794.2;
  (%795, %796, meta[relay.Constant][45] /* ty=Tensor[(960), int64] */)
}

def @func_1705() -> Tensor[(7, 10, 13), float64] {
  %798 = fn () -> Tensor[(7, 10, 13), float64] {
    %797 = @func_1502() /* ty=(Tensor[(7, 10, 13), float64],) */;
    %797.0
  };
  %798() /* ty=Tensor[(7, 10, 13), float64] */
}

def @func_8058() -> Tensor[(7, 10, 13), float64] {
  %799 = @func_5608() /* ty=(Tensor[(7, 10, 13), float64],) */;
  %799.0
}

def @func_10352() -> Tensor[(300, 1), float32] {
  @func_10350() /* ty=Tensor[(300, 1), float32] */
}

def @func_5919() -> Tensor[(7, 10, 13), float64] {
  @func_5917() /* ty=Tensor[(7, 10, 13), float64] */
}

def @func_3232() -> bool {
  @func_3230() /* ty=bool */
}

def @func_2759(%var_2756: Tensor[(840, 4), float64], %var_2757: Tensor[(546), float32], %var_2758: Tensor[(96), float64]) -> (Tensor[(7, 10, 13), float64], Tensor[(7, 10, 13), float64], Tensor[(50, 6), float32], Tensor[(840, 4), float64], Tensor[(10, 30), float32], Tensor[(24, 1), float32], bool, Tensor[(420), uint8], Tensor[(546), float32], Tensor[(6, 4), float32], Tensor[(96), float64], Tensor[(24, 8), int8], Tensor[(7, 10, 13), float64], bool) {
  @func_2754(%var_2756, %var_2757, %var_2758) /* ty=(Tensor[(7, 10, 13), float64], Tensor[(7, 10, 13), float64], Tensor[(50, 6), float32], Tensor[(840, 4), float64], Tensor[(10, 30), float32], Tensor[(24, 1), float32], bool, Tensor[(420), uint8], Tensor[(546), float32], Tensor[(6, 4), float32], Tensor[(96), float64], Tensor[(24, 8), int8], Tensor[(7, 10, 13), float64], bool) */
}

def @func_4807() -> (Tensor[(7, 10, 13), float64],) {
  %800 = @func_4277() /* ty=Tensor[(7, 10, 13), float64] */;
  (%800,)
}

def @func_11762() -> (Tensor[(7, 10, 13), float32], bool) {
  @func_11760() /* ty=(Tensor[(7, 10, 13), float32], bool) */
}

def @func_11952() -> Tensor[(7, 10, 13), float32] {
  %802 = fn () -> Tensor[(7, 10, 13), float32] {
    %801 = @func_6975() /* ty=(Tensor[(7, 10, 13), float32],) */;
    %801.0
  };
  %802() /* ty=Tensor[(7, 10, 13), float32] */
}

def @func_8286() -> bool {
  %803 = @func_6063() /* ty=(bool,) */;
  %803.0
}

def @func_12598(%var_12572: Tensor[(546), float32], %var_12573: Tensor[(48, 4), int8]) -> (Tensor[(15, 5, 3), int16], Tensor[(546), float32], Tensor[(48, 4), int8]) {
  %804 = cast(%var_12572, dtype="float32") /* ty=Tensor[(546), float32] */;
  %805 = cast(%var_12573, dtype="int8") /* ty=Tensor[(48, 4), int8] */;
  %806 = reshape(%804, newshape=[546]) /* ty=Tensor[(546), float32] */;
  %807 = reshape(%805, newshape=[192]) /* ty=Tensor[(192), int8] */;
  %808 = @func_4236(%806, %807) /* ty=(Tensor[(7, 10, 13), float32], Tensor[(7, 10, 13), float32], Tensor[(4, 8, 6), float32], Tensor[(546), float32], Tensor[(24), float32], Tensor[(192), int8]) */;
  %809 = %808.2;
  %810 = cast(%809, dtype="int8") /* ty=Tensor[(4, 8, 6), int8] */;
  %811 = shape_of(%var_12573, dtype="int32") /* ty=Tensor[(2), int32] */;
  %812 = cast(%var_12573, dtype="int8") /* ty=Tensor[(48, 4), int8] */;
  %813 = dyn.reshape(%810, %811, newshape=[]) /* ty=Tensor[(?, ?), int8] */;
  %814 = @func_9338() /* ty=Tensor[(15, 5, 3), int16] */;
  %815 = maximum(%812, %813) /* ty=Tensor[(48, 4), int8] */;
  (%814, %var_12572, %815)
}

def @func_8930(%var_8928: Tensor[(24), float32], %var_8929: Tensor[(280), float32]) -> (Tensor[(7, 10, 13), float32], Tensor[(4, ?, 6), bool], Tensor[(24), float32], Tensor[(280), float32], Tensor[(7, 10, 13), float64]) {
  @func_8926(%var_8928, %var_8929) /* ty=(Tensor[(7, 10, 13), float32], Tensor[(4, ?, 6), bool], Tensor[(24), float32], Tensor[(280), float32], Tensor[(7, 10, 13), float64]) */
}

def @func_2530() -> (Tensor[(7, 10, 13), float32],) {
  %816 = @func_1426() /* ty=(Tensor[(7, 10, 13), float32], Tensor[(1, 4), bool], bool) */;
  %817 = %816.0;
  (%817,)
}

def @func_8744() -> (Tensor[(1001), uint32],) {
  %828 = fn () -> (Tensor[(1001), uint32],) {
    %818 = @func_7097() /* ty=(bool, Tensor[(7, 10, 13), float32], Tensor[(7, 10, 13), float32], Tensor[(1001), float32], Tensor[(4, 4), bool]) */;
    %819 = %818.3;
    %820 = @func_6063() /* ty=(bool,) */;
    %821 = %820.0;
    %822 = cast(%819, dtype="bool") /* ty=Tensor[(1001), bool] */;
    %823 = cast(%821, dtype="bool") /* ty=bool */;
    %824 = logical_or(%822, %823) /* ty=Tensor[(1001), bool] */;
    %825 = cast(%824, dtype="uint32") /* ty=Tensor[(1001), uint32] */;
    %826 = cast(%821, dtype="uint32") /* ty=uint32 */;
    %827 = minimum(%825, %826) /* ty=Tensor[(1001), uint32] */;
    (%827,)
  };
  %828() /* ty=(Tensor[(1001), uint32],) */
}

def @func_5422() -> Tensor[(7, 10, 13), float64] {
  %830 = fn () -> Tensor[(7, 10, 13), float64] {
    %829 = @func_4407() /* ty=(Tensor[(7, 10, 13), float64], Tensor[(7, 10, 13), float64]) */;
    %829.1
  };
  %830() /* ty=Tensor[(7, 10, 13), float64] */
}

def @func_12361(%var_12312: Tensor[(6, 6, 3), float64], %var_12313: Tensor[(6, 6, 3), float64], %var_12337: Tensor[(280), float32], %var_12353: Tensor[(1001), float32]) -> (Tensor[(6, 6, 3), float64], bool, Tensor[(8, 2), bool], Tensor[(192), int8], Tensor[(280), float32], Tensor[(7, 10, 13), float64], Tensor[(36), float32], Tensor[(1001), bool], Tensor[(7, 10, 13), float32]) {
  %831 = cast(%var_12313, dtype="float64") /* ty=Tensor[(6, 6, 3), float64] */;
  %832 = shape_of(%var_12312, dtype="int32") /* ty=Tensor[(3), int32] */;
  %833 = cast(%var_12312, dtype="float64") /* ty=Tensor[(6, 6, 3), float64] */;
  %834 = dyn.reshape(%831, %832, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %835 = cast(%var_12337, dtype="float32") /* ty=Tensor[(280), float32] */;
  %836 = reshape(%835, newshape=[280]) /* ty=Tensor[(280), float32] */;
  %837 = @func_10854(%836) /* ty=(Tensor[(7, 10, 13), float32], Tensor[(280), float32], Tensor[(280), float32], Tensor[(192), int8], Tensor[(360), uint64]) */;
  %838 = cast(meta[relay.Constant][47] /* ty=Tensor[(36), float32] */, dtype="float32") /* ty=Tensor[(36), float32] */;
  %839 = reshape(%838, newshape=[3, 12]) /* ty=Tensor[(3, 12), float32] */;
  %840 = @func_6564(%839) /* ty=(Tensor[(7, 10, 13), float64], Tensor[(546), float32], Tensor[(4, ?, 6), int32], Tensor[(24), float32], Tensor[(3, 4, 3), float32], Tensor[(3, 12), float32], Tensor[(7, 10, 13), float64]) */;
  %841 = cast(False /* ty=bool */, dtype="bool") /* ty=bool */;
  %842 = cast(meta[relay.Constant][46] /* ty=Tensor[(8, 2), bool] */, dtype="bool") /* ty=Tensor[(8, 2), bool] */;
  %843 = reshape(%841, newshape=[]) /* ty=bool */;
  %844 = reshape(%842, newshape=[1, 4, 4]) /* ty=Tensor[(1, 4, 4), bool] */;
  %845 = @func_4153(%843, %844) /* ty=(Tensor[(1, 4, 4), bool], Tensor[(11, 7, 13), float32], Tensor[(1001), float32]) */;
  %846 = %845.2;
  %847 = cast(%var_12353, dtype="bool") /* ty=Tensor[(1001), bool] */;
  %848 = shape_of(%846, dtype="int32") /* ty=Tensor[(1), int32] */;
  %849 = cast(%846, dtype="bool") /* ty=Tensor[(1001), bool] */;
  %850 = dyn.reshape(%847, %848, newshape=[]) /* ty=Tensor[(?), bool] */;
  %851 = cast(meta[relay.Constant][46] /* ty=Tensor[(8, 2), bool] */, dtype="bool") /* ty=Tensor[(8, 2), bool] */;
  %852 = reshape(%851, newshape=[16]) /* ty=Tensor[(16), bool] */;
  %853 = @func_4458(%852) /* ty=(Tensor[(7, 10, 13), float32], Tensor[(1001), float32], bool, Tensor[(16), bool]) */;
  %854 = floor_mod(%833, %834) /* ty=Tensor[(6, 6, 3), float64] */;
  %855 = %837.3;
  %856 = %840.0;
  %857 = greater(%849, %850) /* ty=Tensor[(1001), bool] */;
  %858 = %853.0;
  (%854, False /* ty=bool */, meta[relay.Constant][46] /* ty=Tensor[(8, 2), bool] */, %855, %var_12337, %856, meta[relay.Constant][47] /* ty=Tensor[(36), float32] */, %857, %858)
}

def @func_8060() -> Tensor[(7, 10, 13), float64] {
  @func_8058() /* ty=Tensor[(7, 10, 13), float64] */
}

def @func_3950() -> (bool, Tensor[(7, 10, 13), float64], Tensor[(7, 10, 13), float32]) {
  %859 = @func_3682() /* ty=(bool, Tensor[(4, ?, 6), int8], Tensor[(24), float32], Tensor[(7, 10, 13), float32], Tensor[(7, 10, 13), float32], Tensor[(910), float32]) */;
  %860 = @func_2048() /* ty=(Tensor[(7, 10, 13), float32], Tensor[(7, 10, 13), float64]) */;
  %861 = @func_1318() /* ty=(Tensor[(7, 10, 13), float32], Tensor[(7, 10, 13), float32]) */;
  %862 = %859.0;
  %863 = %860.1;
  %864 = %861.1;
  (%862, %863, %864)
}

def @func_2294() -> (Tensor[(7, 10, 13), float32], bool) {
  @func_2292() /* ty=(Tensor[(7, 10, 13), float32], bool) */
}

def @func_7165(%var_7163: Tensor[(1, 4, 3), uint64]) -> (Tensor[(7, 10, 13), float64], Tensor[(?, 4, 3), bool]) {
  @func_7162(%var_7163) /* ty=(Tensor[(7, 10, 13), float64], Tensor[(?, 4, 3), bool]) */
}

def @func_9161() -> (Tensor[(7, 10, 13), float32], Tensor[(7, 10, 13), float64], Tensor[(1, 4), bool]) {
  %871 = fn () -> (Tensor[(7, 10, 13), float32], Tensor[(7, 10, 13), float64], Tensor[(1, 4), bool]) {
    %865 = @func_5818() /* ty=(Tensor[(7, 10, 13), float32],) */;
    %866 = @func_4807() /* ty=(Tensor[(7, 10, 13), float64],) */;
    %867 = @func_2912() /* ty=(Tensor[(7, 10, 13), float64], Tensor[(1, 4), bool]) */;
    %868 = %865.0;
    %869 = %866.0;
    %870 = %867.1;
    (%868, %869, %870)
  };
  %871() /* ty=(Tensor[(7, 10, 13), float32], Tensor[(7, 10, 13), float64], Tensor[(1, 4), bool]) */
}

def @func_9540() -> bool {
  @func_9538() /* ty=bool */
}

def @func_1917() -> (Tensor[(7, 10, 13), float64], Tensor[(7, 10, 13), float64]) {
  %874 = fn () -> (Tensor[(7, 10, 13), float64], Tensor[(7, 10, 13), float64]) {
    %872 = @func_1704() /* ty=Tensor[(7, 10, 13), float64] */;
    %873 = @func_1704() /* ty=Tensor[(7, 10, 13), float64] */;
    (%872, %873)
  };
  %874() /* ty=(Tensor[(7, 10, 13), float64], Tensor[(7, 10, 13), float64]) */
}

def @func_6063() -> (bool,) {
  %875 = @func_1426() /* ty=(Tensor[(7, 10, 13), float32], Tensor[(1, 4), bool], bool) */;
  %876 = %875.2;
  (%876,)
}

def @func_8532() -> (Tensor[(7, 10, 13), float32],) {
  %879 = fn () -> (Tensor[(7, 10, 13), float32],) {
    %877 = @func_5818() /* ty=(Tensor[(7, 10, 13), float32],) */;
    %878 = %877.0;
    (%878,)
  };
  %879() /* ty=(Tensor[(7, 10, 13), float32],) */
}

def @func_10772() -> Tensor[(7, 10, 13), float64] {
  %881 = fn () -> Tensor[(7, 10, 13), float64] {
    %880 = @func_7423() /* ty=(Tensor[(7, 10, 13), float64], Tensor[(7, 10, 13), float64]) */;
    %880.1
  };
  %881() /* ty=Tensor[(7, 10, 13), float64] */
}

def @func_6566(%var_6565: Tensor[(3, 12), float32]) -> (Tensor[(7, 10, 13), float64], Tensor[(546), float32], Tensor[(4, ?, 6), int32], Tensor[(24), float32], Tensor[(3, 4, 3), float32], Tensor[(3, 12), float32], Tensor[(7, 10, 13), float64]) {
  %897 = fn (%var_6554: Tensor[(3, 12), float32]) -> (Tensor[(7, 10, 13), float64], Tensor[(546), float32], Tensor[(4, ?, 6), int32], Tensor[(24), float32], Tensor[(3, 4, 3), float32], Tensor[(3, 12), float32], Tensor[(7, 10, 13), float64]) {
    %882 = @func_4407() /* ty=(Tensor[(7, 10, 13), float64], Tensor[(7, 10, 13), float64]) */;
    %883 = @func_5177() /* ty=(Tensor[(7, 10, 13), float64], bool, Tensor[(96), float64], Tensor[(3360), float64], Tensor[(546), float32], Tensor[(96), float64], Tensor[(7, 10, 13), float64]) */;
    %884 = cast(meta[relay.Constant][48] /* ty=Tensor[(24), float32] */, dtype="float32") /* ty=Tensor[(24), float32] */;
    %885 = reshape(%884, newshape=[4, 1, 6]) /* ty=Tensor[(4, 1, 6), float32] */;
    %886 = @func_126(%885) /* ty=(Tensor[(4, ?, 6), int32], Tensor[(4, ?, 6), int8]) */;
    %887 = cast(%var_6554, dtype="float32") /* ty=Tensor[(3, 12), float32] */;
    %888 = cast(%var_6554, dtype="float32") /* ty=Tensor[(3, 12), float32] */;
    %889 = reshape(%887, newshape=[3, 4, 3]) /* ty=Tensor[(3, 4, 3), float32] */;
    %890 = reshape(%888, newshape=[3, 4, 3]) /* ty=Tensor[(3, 4, 3), float32] */;
    %891 = @func_5177() /* ty=(Tensor[(7, 10, 13), float64], bool, Tensor[(96), float64], Tensor[(3360), float64], Tensor[(546), float32], Tensor[(96), float64], Tensor[(7, 10, 13), float64]) */;
    %892 = %882.1;
    %893 = %883.4;
    %894 = %886.0;
    %895 = @func_5313(%889, %890) /* ty=Tensor[(3, 4, 3), float32] */;
    %896 = %891.0;
    (%892, %893, %894, meta[relay.Constant][48] /* ty=Tensor[(24), float32] */, %895, %var_6554, %896)
  };
  %897(%var_6565) /* ty=(Tensor[(7, 10, 13), float64], Tensor[(546), float32], Tensor[(4, ?, 6), int32], Tensor[(24), float32], Tensor[(3, 4, 3), float32], Tensor[(3, 12), float32], Tensor[(7, 10, 13), float64]) */
}

def @func_12602(%var_12600: Tensor[(546), float32], %var_12601: Tensor[(48, 4), int8]) -> (Tensor[(15, 5, 3), int16], Tensor[(546), float32], Tensor[(48, 4), int8]) {
  @func_12598(%var_12600, %var_12601) /* ty=(Tensor[(15, 5, 3), int16], Tensor[(546), float32], Tensor[(48, 4), int8]) */
}

def @func_10570(%var_10538: Tensor[(1, 12, 4), float64], %var_10539: Tensor[(14, 12, 4), float64]) -> (Tensor[(14, 12, 4), float64], Tensor[(14, 12, 4), bool]) {
  %898 = cast(%var_10538, dtype="float64") /* ty=Tensor[(1, 12, 4), float64] */;
  %899 = cast(%var_10539, dtype="float64") /* ty=Tensor[(14, 12, 4), float64] */;
  %900 = cast(%var_10539, dtype="float32") /* ty=Tensor[(14, 12, 4), float32] */;
  %901 = atan(%900) /* ty=Tensor[(14, 12, 4), float32] */;
  %902 = cast(%var_10539, dtype="float32") /* ty=Tensor[(14, 12, 4), float32] */;
  %903 = acosh(%902) /* ty=Tensor[(14, 12, 4), float32] */;
  %904 = cast(%903, dtype="bool") /* ty=Tensor[(14, 12, 4), bool] */;
  %905 = shape_of(%901, dtype="int32") /* ty=Tensor[(3), int32] */;
  %906 = cast(%901, dtype="bool") /* ty=Tensor[(14, 12, 4), bool] */;
  %907 = dyn.reshape(%904, %905, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %908 = mod(%898, %899) /* ty=Tensor[(14, 12, 4), float64] */;
  %909 = greater_equal(%906, %907) /* ty=Tensor[(14, 12, 4), bool] */;
  (%908, %909)
}

def @func_2292() -> (Tensor[(7, 10, 13), float32], bool) {
  %910 = @func_1369() /* ty=(Tensor[(7, 10, 13), float32], Tensor[(7, 10, 13), float32]) */;
  %911 = @func_2026() /* ty=(bool, Tensor[(7, 10, 13), float64]) */;
  %912 = %910.0;
  %913 = %911.0;
  (%912, %913)
}

def @func_2274() -> bool {
  @func_2272() /* ty=bool */
}

def @func_6505() -> (Tensor[(1, 4), bool], Tensor[(1, 4), bool], Tensor[(7, 10, 13), float32]) {
  @func_6503() /* ty=(Tensor[(1, 4), bool], Tensor[(1, 4), bool], Tensor[(7, 10, 13), float32]) */
}

def @func_1959(%var_1957: Tensor[(5, 5, 12), float32], %var_1958: Tensor[(24), float32]) -> (Tensor[(5, 5, 12), float32], Tensor[(4, ?, 6), int32], Tensor[(24), float32], Tensor[(7, 10, 13), float64]) {
  %922 = fn (%var_1937: Tensor[(5, 5, 12), float32], %var_1941: Tensor[(24), float32]) -> (Tensor[(5, 5, 12), float32], Tensor[(4, ?, 6), int32], Tensor[(24), float32], Tensor[(7, 10, 13), float64]) {
    %914 = cast(%var_1937, dtype="float32") /* ty=Tensor[(5, 5, 12), float32] */;
    %915 = cast(%var_1941, dtype="float32") /* ty=Tensor[(24), float32] */;
    %916 = reshape(%915, newshape=[4, 1, 6]) /* ty=Tensor[(4, 1, 6), float32] */;
    %917 = @func_126(%916) /* ty=(Tensor[(4, ?, 6), int32], Tensor[(4, ?, 6), int8]) */;
    %918 = @func_1916() /* ty=(Tensor[(7, 10, 13), float64], Tensor[(7, 10, 13), float64]) */;
    %919 = acos(%914) /* ty=Tensor[(5, 5, 12), float32] */;
    %920 = %917.0;
    %921 = %918.1;
    (%919, %920, %var_1941, %921)
  };
  %922(%var_1957, %var_1958) /* ty=(Tensor[(5, 5, 12), float32], Tensor[(4, ?, 6), int32], Tensor[(24), float32], Tensor[(7, 10, 13), float64]) */
}

def @func_11305() -> (Tensor[(24), float32], Tensor[(300, 1), float64]) {
  %928 = fn () -> (Tensor[(24), float32], Tensor[(300, 1), float64]) {
    %923 = @func_3682() /* ty=(bool, Tensor[(4, ?, 6), int8], Tensor[(24), float32], Tensor[(7, 10, 13), float32], Tensor[(7, 10, 13), float32], Tensor[(910), float32]) */;
    %924 = @func_10350() /* ty=Tensor[(300, 1), float32] */;
    %925 = cast(%924, dtype="float64") /* ty=Tensor[(300, 1), float64] */;
    %926 = %923.2;
    %927 = cos(%925) /* ty=Tensor[(300, 1), float64] */;
    (%926, %927)
  };
  %928() /* ty=(Tensor[(24), float32], Tensor[(300, 1), float64]) */
}

def @func_9876(%var_9865: Tensor[(5, 14, 6), int32]) -> (Tensor[(5, 14, 6), int32],) {
  %929 = cast(%var_9865, dtype="int32") /* ty=Tensor[(5, 14, 6), int32] */;
  %930 = shape_of(meta[relay.Constant][49] /* ty=Tensor[(5, 14, 6), int32] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %931 = cast(meta[relay.Constant][49] /* ty=Tensor[(5, 14, 6), int32] */, dtype="int32") /* ty=Tensor[(5, 14, 6), int32] */;
  %932 = dyn.reshape(%929, %930, newshape=[]) /* ty=Tensor[(?, ?, ?), int32] */;
  %933 = left_shift(%931, %932) /* ty=Tensor[(5, 14, 6), int32] */;
  (%933,)
}

def @func_3795(%var_3793: Tensor[(546), float32], %var_3794: Tensor[(48, 4), int8]) -> (bool, Tensor[(7, 10, 13), float64], Tensor[(7, 10, 13), float64], Tensor[(4, 8, 6), float32], Tensor[(4, 24), float64], Tensor[(546), float32], Tensor[(24), float32], Tensor[(48, 4), int8], Tensor[(7, 10, 13), float32], bool) {
  %951 = fn (%var_3764: Tensor[(546), float32], %var_3766: Tensor[(48, 4), int8]) -> (bool, Tensor[(7, 10, 13), float64], Tensor[(7, 10, 13), float64], Tensor[(4, 8, 6), float32], Tensor[(4, 24), float64], Tensor[(546), float32], Tensor[(24), float32], Tensor[(48, 4), int8], Tensor[(7, 10, 13), float32], bool) {
    %934 = @func_2787() /* ty=(Tensor[(7, 10, 13), float64],) */;
    %935 = cast(meta[relay.Constant][50] /* ty=Tensor[(4, 24), float64] */, dtype="float64") /* ty=Tensor[(4, 24), float64] */;
    %936 = cast(%var_3764, dtype="float32") /* ty=Tensor[(546), float32] */;
    %937 = cast(meta[relay.Constant][51] /* ty=Tensor[(24), float32] */, dtype="float32") /* ty=Tensor[(24), float32] */;
    %938 = cast(%var_3766, dtype="int8") /* ty=Tensor[(48, 4), int8] */;
    %939 = reshape(%935, newshape=[16, 2, 3]) /* ty=Tensor[(16, 2, 3), float64] */;
    %940 = reshape(%936, newshape=[546]) /* ty=Tensor[(546), float32] */;
    %941 = reshape(%937, newshape=[12, 2]) /* ty=Tensor[(12, 2), float32] */;
    %942 = reshape(%938, newshape=[192]) /* ty=Tensor[(192), int8] */;
    %943 = @func_842(%939, %940, %941, %942) /* ty=(Tensor[(16, 2, 3), float64], Tensor[(4, 8, 6), float32], Tensor[(546), float32], Tensor[(12, 2), float32], Tensor[(192), int8], Tensor[(6, 4), float32]) */;
    %944 = @func_2048() /* ty=(Tensor[(7, 10, 13), float32], Tensor[(7, 10, 13), float64]) */;
    %945 = @func_1694() /* ty=bool */;
    %946 = %934.0;
    %947 = @func_1704() /* ty=Tensor[(7, 10, 13), float64] */;
    %948 = %943.1;
    %949 = %944.0;
    %950 = @func_3230() /* ty=bool */;
    (%945, %946, %947, %948, meta[relay.Constant][50] /* ty=Tensor[(4, 24), float64] */, %var_3764, meta[relay.Constant][51] /* ty=Tensor[(24), float32] */, %var_3766, %949, %950)
  };
  %951(%var_3793, %var_3794) /* ty=(bool, Tensor[(7, 10, 13), float64], Tensor[(7, 10, 13), float64], Tensor[(4, 8, 6), float32], Tensor[(4, 24), float64], Tensor[(546), float32], Tensor[(24), float32], Tensor[(48, 4), int8], Tensor[(7, 10, 13), float32], bool) */
}

def @func_6375(%var_6346: Tensor[(6, 4), float32], %var_6347: Tensor[(280), float32]) -> (bool, Tensor[(7, 10, 13), float64], Tensor[(6, 4), float32], Tensor[(280), float32], bool) {
  %952 = @func_6229() /* ty=(bool,) */;
  %953 = cast(%var_6346, dtype="float32") /* ty=Tensor[(6, 4), float32] */;
  %954 = cast(%var_6347, dtype="float32") /* ty=Tensor[(280), float32] */;
  %955 = reshape(%953, newshape=[2, 12]) /* ty=Tensor[(2, 12), float32] */;
  %956 = reshape(%954, newshape=[70, 4]) /* ty=Tensor[(70, 4), float32] */;
  %957 = @func_4998(%955, %956) /* ty=(Tensor[(7, 10, 13), float64], Tensor[(2, 12), float32], Tensor[(70, 4), uint16]) */;
  %958 = @func_5839() /* ty=(bool,) */;
  %959 = %952.0;
  %960 = %957.0;
  %961 = %958.0;
  (%959, %960, %var_6346, %var_6347, %961)
}

def @func_8785() -> (bool, Tensor[(7, 10, 13), float32], Tensor[(7, 10, 13), float64]) {
  %962 = @func_2530() /* ty=(Tensor[(7, 10, 13), float32],) */;
  %963 = @func_3230() /* ty=bool */;
  %964 = %962.0;
  %965 = @func_5421() /* ty=Tensor[(7, 10, 13), float64] */;
  (%963, %964, %965)
}

def @func_8926(%var_8907: Tensor[(24), float32], %var_8908: Tensor[(280), float32]) -> (Tensor[(7, 10, 13), float32], Tensor[(4, ?, 6), bool], Tensor[(24), float32], Tensor[(280), float32], Tensor[(7, 10, 13), float64]) {
  %966 = @func_1318() /* ty=(Tensor[(7, 10, 13), float32], Tensor[(7, 10, 13), float32]) */;
  %967 = cast(%var_8907, dtype="float32") /* ty=Tensor[(24), float32] */;
  %968 = cast(%var_8908, dtype="float32") /* ty=Tensor[(280), float32] */;
  %969 = reshape(%967, newshape=[24]) /* ty=Tensor[(24), float32] */;
  %970 = reshape(%968, newshape=[280]) /* ty=Tensor[(280), float32] */;
  %971 = @func_3129(%969, %970) /* ty=(Tensor[(7, 10, 13), float64], Tensor[(280), float32], Tensor[(192), int8], Tensor[(24, 8), float32], Tensor[(4, ?, 6), bool]) */;
  %972 = %966.1;
  %973 = %971.4;
  %974 = @func_1704() /* ty=Tensor[(7, 10, 13), float64] */;
  (%972, %973, %var_8907, %var_8908, %974)
}

def @func_1371() -> (Tensor[(7, 10, 13), float32], Tensor[(7, 10, 13), float32]) {
  @func_1369() /* ty=(Tensor[(7, 10, 13), float32], Tensor[(7, 10, 13), float32]) */
}

def @func_8971() -> (bool, bool) {
  %975 = @func_5839() /* ty=(bool,) */;
  %976 = @func_7872() /* ty=(bool, bool) */;
  %977 = %975.0;
  %978 = %976.0;
  (%977, %978)
}

def @func_8484() -> (bool, Tensor[(14, 15, 16), float64]) {
  %983 = fn () -> (bool, Tensor[(14, 15, 16), float64]) {
    %979 = @func_7667() /* ty=(Tensor[(7, 10, 13), float32], bool, Tensor[(7, 10, 13), float64]) */;
    %980 = @func_5294() /* ty=(Tensor[(1, 4), bool], Tensor[(7, 10, 13), float64], Tensor[(14, 15, 16), float64], Tensor[(3360), float64], Tensor[(300, 1), float32], Tensor[(24), float32]) */;
    %981 = %979.1;
    %982 = %980.2;
    (%981, %982)
  };
  %983() /* ty=(bool, Tensor[(14, 15, 16), float64]) */
}

def @func_10486() -> (Tensor[(1, 4), bool],) {
  %986 = fn () -> (Tensor[(1, 4), bool],) {
    %984 = @func_2912() /* ty=(Tensor[(7, 10, 13), float64], Tensor[(1, 4), bool]) */;
    %985 = %984.1;
    (%985,)
  };
  %986() /* ty=(Tensor[(1, 4), bool],) */
}

def @func_11176() -> (Tensor[(910), float32], Tensor[(7, 10, 13), bool]) {
  %993 = fn () -> (Tensor[(910), float32], Tensor[(7, 10, 13), bool]) {
    %987 = @func_1761() /* ty=(bool, Tensor[(7, 10, 13), float64], Tensor[(910), float32]) */;
    %988 = %987.2;
    %989 = cast(%988, dtype="float32") /* ty=Tensor[(910), float32] */;
    %990 = reshape(%989, newshape=[7, 10, 13]) /* ty=Tensor[(7, 10, 13), float32] */;
    %991 = @func_2202(%990) /* ty=(Tensor[(7, 10, 13), bool], Tensor[(8, 16, 9), float64], Tensor[(1152), float64]) */;
    %992 = %991.0;
    (%988, %992)
  };
  %993() /* ty=(Tensor[(910), float32], Tensor[(7, 10, 13), bool]) */
}

def @func_1234() -> (Tensor[(7, 10, 13), float32],) {
  @func_1232() /* ty=(Tensor[(7, 10, 13), float32],) */
}

def @func_9329() -> (Tensor[(7, 10, 13), float32], Tensor[(24), float32], Tensor[(7, 12, 6), uint32]) {
  %994 = @func_8531() /* ty=(Tensor[(7, 10, 13), float32],) */;
  %995 = @func_5294() /* ty=(Tensor[(1, 4), bool], Tensor[(7, 10, 13), float64], Tensor[(14, 15, 16), float64], Tensor[(3360), float64], Tensor[(300, 1), float32], Tensor[(24), float32]) */;
  %996 = @func_8238() /* ty=(Tensor[(7, 10, 13), float64], Tensor[(7, 12, 6), uint32], Tensor[(16), bool]) */;
  %997 = %994.0;
  %998 = %995.5;
  %999 = %996.1;
  (%997, %998, %999)
}

def @func_9879(%var_9877: Tensor[(5, 14, 6), int32]) -> (Tensor[(5, 14, 6), int32],) {
  @func_9876(%var_9877) /* ty=(Tensor[(5, 14, 6), int32],) */
}

def @func_1762() -> (bool, Tensor[(7, 10, 13), float64], Tensor[(910), float32]) {
  %1006 = fn () -> (bool, Tensor[(7, 10, 13), float64], Tensor[(910), float32]) {
    %1000 = @func_1426() /* ty=(Tensor[(7, 10, 13), float32], Tensor[(1, 4), bool], bool) */;
    %1001 = cast(meta[relay.Constant][52] /* ty=Tensor[(910), float32] */, dtype="float32") /* ty=Tensor[(910), float32] */;
    %1002 = reshape(%1001, newshape=[7, 10, 13]) /* ty=Tensor[(7, 10, 13), float32] */;
    %1003 = @func_1657(%1002) /* ty=(Tensor[(7, 10, 13), float64],) */;
    %1004 = %1000.2;
    %1005 = %1003.0;
    (%1004, %1005, meta[relay.Constant][52] /* ty=Tensor[(910), float32] */)
  };
  %1006() /* ty=(bool, Tensor[(7, 10, 13), float64], Tensor[(910), float32]) */
}

def @func_5247() -> (bool,) {
  @func_5245() /* ty=(bool,) */
}

def @func_6039() -> (Tensor[(7, 10, 13), float32], bool) {
  %1007 = @func_4754() /* ty=(bool, Tensor[(7, 10, 13), float32]) */;
  %1008 = @func_5177() /* ty=(Tensor[(7, 10, 13), float64], bool, Tensor[(96), float64], Tensor[(3360), float64], Tensor[(546), float32], Tensor[(96), float64], Tensor[(7, 10, 13), float64]) */;
  %1009 = %1007.1;
  %1010 = %1008.1;
  (%1009, %1010)
}

def @func_4849() -> (Tensor[(1, 4), bool], bool) {
  %1015 = fn () -> (Tensor[(1, 4), bool], bool) {
    %1011 = @func_4196() /* ty=(Tensor[(1, 4), bool],) */;
    %1012 = @func_1761() /* ty=(bool, Tensor[(7, 10, 13), float64], Tensor[(910), float32]) */;
    %1013 = %1011.0;
    %1014 = %1012.0;
    (%1013, %1014)
  };
  %1015() /* ty=(Tensor[(1, 4), bool], bool) */
}

def @func_2624(%var_2622: Tensor[(8, 7, 5), float32], %var_2623: Tensor[(24, 8), int8]) -> (Tensor[(8, 7, 5), int16], Tensor[(7, 10, 13), float32], Tensor[(12, 2), float32], Tensor[(96), float64], Tensor[(546), float32], Tensor[(6, 4), float32], Tensor[(24, 8), int8], Tensor[(12, 2), float32], Tensor[(7, 10, 13), float32]) {
  @func_2620(%var_2622, %var_2623) /* ty=(Tensor[(8, 7, 5), int16], Tensor[(7, 10, 13), float32], Tensor[(12, 2), float32], Tensor[(96), float64], Tensor[(546), float32], Tensor[(6, 4), float32], Tensor[(24, 8), int8], Tensor[(12, 2), float32], Tensor[(7, 10, 13), float32]) */
}

def @func_5841() -> (bool,) {
  @func_5839() /* ty=(bool,) */
}

def @func_1695() -> bool {
  %1017 = fn () -> bool {
    %1016 = @func_1426() /* ty=(Tensor[(7, 10, 13), float32], Tensor[(1, 4), bool], bool) */;
    %1016.2
  };
  %1017() /* ty=bool */
}

def @func_7424() -> (Tensor[(7, 10, 13), float64], Tensor[(7, 10, 13), float64]) {
  %1021 = fn () -> (Tensor[(7, 10, 13), float64], Tensor[(7, 10, 13), float64]) {
    %1018 = @func_5608() /* ty=(Tensor[(7, 10, 13), float64],) */;
    %1019 = @func_4277() /* ty=Tensor[(7, 10, 13), float64] */;
    %1020 = %1018.0;
    (%1019, %1020)
  };
  %1021() /* ty=(Tensor[(7, 10, 13), float64], Tensor[(7, 10, 13), float64]) */
}

def @func_7900() -> (Tensor[(910), float32],) {
  %1024 = fn () -> (Tensor[(910), float32],) {
    %1022 = @func_3682() /* ty=(bool, Tensor[(4, ?, 6), int8], Tensor[(24), float32], Tensor[(7, 10, 13), float32], Tensor[(7, 10, 13), float32], Tensor[(910), float32]) */;
    %1023 = %1022.5;
    (%1023,)
  };
  %1024() /* ty=(Tensor[(910), float32],) */
}

def @func_4408() -> (Tensor[(7, 10, 13), float64], Tensor[(7, 10, 13), float64]) {
  %1033 = fn () -> (Tensor[(7, 10, 13), float64], Tensor[(7, 10, 13), float64]) {
    %1025 = @func_2530() /* ty=(Tensor[(7, 10, 13), float32],) */;
    %1026 = %1025.0;
    %1027 = cast(%1026, dtype="float32") /* ty=Tensor[(7, 10, 13), float32] */;
    %1028 = reshape(%1027, newshape=[7, 10, 13]) /* ty=Tensor[(7, 10, 13), float32] */;
    %1029 = @func_1657(%1028) /* ty=(Tensor[(7, 10, 13), float64],) */;
    %1030 = cast(%1026, dtype="float64") /* ty=Tensor[(7, 10, 13), float64] */;
    %1031 = %1029.0;
    %1032 = log2(%1030) /* ty=Tensor[(7, 10, 13), float64] */;
    (%1031, %1032)
  };
  %1033() /* ty=(Tensor[(7, 10, 13), float64], Tensor[(7, 10, 13), float64]) */
}

def @func_6011() -> (Tensor[(7, 10, 13), float64],) {
  @func_6009() /* ty=(Tensor[(7, 10, 13), float64],) */
}

def @func_9259(%var_9254: Tensor[(7, 4, 3), uint32], %var_9255: Tensor[(7, 4, 3), uint32]) -> Tensor[(7, 4, 3), uint32] {
  %1034 = cast(%var_9255, dtype="uint32") /* ty=Tensor[(7, 4, 3), uint32] */;
  %1035 = shape_of(%var_9254, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1036 = cast(%var_9254, dtype="uint32") /* ty=Tensor[(7, 4, 3), uint32] */;
  %1037 = dyn.reshape(%1034, %1035, newshape=[]) /* ty=Tensor[(?, ?, ?), uint32] */;
  subtract(%1036, %1037) /* ty=Tensor[(7, 4, 3), uint32] */
}

def @func_9331() -> (Tensor[(7, 10, 13), float32], Tensor[(24), float32], Tensor[(7, 12, 6), uint32]) {
  @func_9329() /* ty=(Tensor[(7, 10, 13), float32], Tensor[(24), float32], Tensor[(7, 12, 6), uint32]) */
}

def @func_10102(%var_10100: Tensor[(14, 4, 3), int32], %var_10101: Tensor[(14, 4, 3), int32]) -> (Tensor[(14, 4, 3), int32], Tensor[(7, 10, 13), float64], Tensor[(7, 10, 13), float64], Tensor[(910), float32]) {
  %1049 = fn (%var_10069: Tensor[(14, 4, 3), int32], %var_10070: Tensor[(14, 4, 3), int32]) -> (Tensor[(14, 4, 3), int32], Tensor[(7, 10, 13), float64], Tensor[(7, 10, 13), float64], Tensor[(910), float32]) {
    %1038 = cast(%var_10070, dtype="int32") /* ty=Tensor[(14, 4, 3), int32] */;
    %1039 = shape_of(%var_10069, dtype="int32") /* ty=Tensor[(3), int32] */;
    %1040 = cast(%var_10069, dtype="int32") /* ty=Tensor[(14, 4, 3), int32] */;
    %1041 = dyn.reshape(%1038, %1039, newshape=[]) /* ty=Tensor[(?, ?, ?), int32] */;
    %1042 = @func_2787() /* ty=(Tensor[(7, 10, 13), float64],) */;
    %1043 = @func_8657() /* ty=(bool, Tensor[(7, 10, 13), float64], Tensor[(7, 10, 13), float64]) */;
    %1044 = @func_1761() /* ty=(bool, Tensor[(7, 10, 13), float64], Tensor[(910), float32]) */;
    %1045 = add(%1040, %1041) /* ty=Tensor[(14, 4, 3), int32] */;
    %1046 = %1042.0;
    %1047 = %1043.1;
    %1048 = %1044.2;
    (%1045, %1046, %1047, %1048)
  };
  %1049(%var_10100, %var_10101) /* ty=(Tensor[(14, 4, 3), int32], Tensor[(7, 10, 13), float64], Tensor[(7, 10, 13), float64], Tensor[(910), float32]) */
}

def @func_12947() -> Tensor[(7, 10, 13), float64] {
  %1051 = fn () -> Tensor[(7, 10, 13), float64] {
    %1050 = @func_7920() /* ty=(Tensor[(11, 15, 9), float32], Tensor[(7, 10, 13), float64]) */;
    %1050.1
  };
  %1051() /* ty=Tensor[(7, 10, 13), float64] */
}

def @func_2205(%var_2203: Tensor[(7, 10, 13), float32]) -> (Tensor[(7, 10, 13), bool], Tensor[(8, 16, 9), float64], Tensor[(1152), float64]) {
  @func_2202(%var_2203) /* ty=(Tensor[(7, 10, 13), bool], Tensor[(8, 16, 9), float64], Tensor[(1152), float64]) */
}

def @func_12256() -> (bool, bool, Tensor[(960), int64]) {
  @func_12254() /* ty=(bool, bool, Tensor[(960), int64]) */
}

def @func_10648(%var_10647: Tensor[(480), float64]) -> (Tensor[(7, 10, 13), float64], Tensor[(10, 16, 3), bool]) {
  %1063 = fn (%var_10613: Tensor[(480), float64]) -> (Tensor[(7, 10, 13), float64], Tensor[(10, 16, 3), bool]) {
    %1052 = @func_5010() /* ty=(Tensor[(7, 10, 13), float64],) */;
    %1053 = cast(%var_10613, dtype="float64") /* ty=Tensor[(480), float64] */;
    %1054 = reshape(%1053, newshape=[2, 240]) /* ty=Tensor[(2, 240), float64] */;
    %1055 = @func_8580(%1054) /* ty=(Tensor[(7, 10, 13), float64], Tensor[(10, 16, 3), float64], Tensor[(2, 240), float64], bool, Tensor[(7, 10, 13), float32], Tensor[(1, 4), bool]) */;
    %1056 = %1055.1;
    %1057 = cast(%var_10613, dtype="bool") /* ty=Tensor[(480), bool] */;
    %1058 = shape_of(%1056, dtype="int32") /* ty=Tensor[(3), int32] */;
    %1059 = cast(%1056, dtype="bool") /* ty=Tensor[(10, 16, 3), bool] */;
    %1060 = dyn.reshape(%1057, %1058, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    %1061 = %1052.0;
    %1062 = less(%1059, %1060) /* ty=Tensor[(10, 16, 3), bool] */;
    (%1061, %1062)
  };
  %1063(%var_10647) /* ty=(Tensor[(7, 10, 13), float64], Tensor[(10, 16, 3), bool]) */
}

def @func_1660(%var_1658: Tensor[(7, 10, 13), float32]) -> (Tensor[(7, 10, 13), float64],) {
  @func_1657(%var_1658) /* ty=(Tensor[(7, 10, 13), float64],) */
}

def @func_11581() -> (Tensor[(7, 10, 13), float64], Tensor[(96), float64]) {
  @func_11579() /* ty=(Tensor[(7, 10, 13), float64], Tensor[(96), float64]) */
}

def @func_13211(%var_13209: Tensor[(378), float64]) -> (Tensor[(7, 10, 13), float32], Tensor[(378), float64], Tensor[(378), float64], Tensor[(7, 10, 13), float64], Tensor[(7, 10, 13), float64], Tensor[(36), float32]) {
  @func_13208(%var_13209) /* ty=(Tensor[(7, 10, 13), float32], Tensor[(378), float64], Tensor[(378), float64], Tensor[(7, 10, 13), float64], Tensor[(7, 10, 13), float64], Tensor[(36), float32]) */
}

def @func_2151(%var_2147: uint8, %var_2148: Tensor[(7, 5, 12), uint8], %var_2149: Tensor[(1, 546), float32], %var_2150: Tensor[(24), float32]) -> (Tensor[(7, 5, 12), uint8], Tensor[(7, 5, 12), uint16], Tensor[(4, 8, 6), float32], Tensor[(96), float64], Tensor[(24), float32], Tensor[(192), int8], Tensor[(1, 546), int32], bool, Tensor[(7, 10, 13), float64], Tensor[(910), float32]) {
  @func_2145(%var_2147, %var_2148, %var_2149, %var_2150) /* ty=(Tensor[(7, 5, 12), uint8], Tensor[(7, 5, 12), uint16], Tensor[(4, 8, 6), float32], Tensor[(96), float64], Tensor[(24), float32], Tensor[(192), int8], Tensor[(1, 546), int32], bool, Tensor[(7, 10, 13), float64], Tensor[(910), float32]) */
}

def @func_12772() -> (bool, bool, Tensor[(7, 10, 13), float64], Tensor[(24), float32]) {
  @func_12770() /* ty=(bool, bool, Tensor[(7, 10, 13), float64], Tensor[(24), float32]) */
}

def @func_5697() -> (Tensor[(7, 10, 13), float64], Tensor[(7, 10, 13), float64]) {
  %1067 = fn () -> (Tensor[(7, 10, 13), float64], Tensor[(7, 10, 13), float64]) {
    %1064 = @func_4407() /* ty=(Tensor[(7, 10, 13), float64], Tensor[(7, 10, 13), float64]) */;
    %1065 = @func_1704() /* ty=Tensor[(7, 10, 13), float64] */;
    %1066 = %1064.0;
    (%1065, %1066)
  };
  %1067() /* ty=(Tensor[(7, 10, 13), float64], Tensor[(7, 10, 13), float64]) */
}

def @func_12088() -> (bool, bool, bool) {
  %1073 = fn () -> (bool, bool, bool) {
    %1068 = @func_1761() /* ty=(bool, Tensor[(7, 10, 13), float64], Tensor[(910), float32]) */;
    %1069 = @func_11760() /* ty=(Tensor[(7, 10, 13), float32], bool) */;
    %1070 = @func_3186() /* ty=bool */;
    %1071 = %1068.0;
    %1072 = %1069.1;
    (%1070, %1071, %1072)
  };
  %1073() /* ty=(bool, bool, bool) */
}

def @func_11426() -> (Tensor[(7, 10, 13), float64], Tensor[(1, 4), bool]) {
  @func_11424() /* ty=(Tensor[(7, 10, 13), float64], Tensor[(1, 4), bool]) */
}

def @func_12536() -> (bool, Tensor[(7, 10, 13), float32]) {
  %1074 = @func_1318() /* ty=(Tensor[(7, 10, 13), float32], Tensor[(7, 10, 13), float32]) */;
  %1075 = @func_8286() /* ty=bool */;
  %1076 = %1074.1;
  (%1075, %1076)
}

def @func_13122() -> (Tensor[(7, 10, 13), float64],) {
  %1077 = @func_4701() /* ty=Tensor[(7, 10, 13), float64] */;
  (%1077,)
}

def @func_4928() -> bool {
  @func_1694() /* ty=bool */
}

def @func_5099() -> (bool,) {
  %1078 = @func_3230() /* ty=bool */;
  (%1078,)
}

def @func_10952() -> (Tensor[(300, 1), float32], bool) {
  %1082 = fn () -> (Tensor[(300, 1), float32], bool) {
    %1079 = @func_6039() /* ty=(Tensor[(7, 10, 13), float32], bool) */;
    %1080 = @func_10350() /* ty=Tensor[(300, 1), float32] */;
    %1081 = %1079.1;
    (%1080, %1081)
  };
  %1082() /* ty=(Tensor[(300, 1), float32], bool) */
}

def @func_11604(%var_11603: Tensor[(7, 10, 3), float32]) -> (Tensor[(7, 10, 3), float32],) {
  %1085 = fn (%var_11587: Tensor[(7, 10, 3), float32]) -> (Tensor[(7, 10, 3), float32],) {
    %1083 = cast(%var_11587, dtype="float32") /* ty=Tensor[(7, 10, 3), float32] */;
    %1084 = asinh(%1083) /* ty=Tensor[(7, 10, 3), float32] */;
    (%1084,)
  };
  %1085(%var_11603) /* ty=(Tensor[(7, 10, 3), float32],) */
}

def @func_6092() -> Tensor[(7, 10, 13), float64] {
  %1087 = fn () -> Tensor[(7, 10, 13), float64] {
    %1086 = @func_4407() /* ty=(Tensor[(7, 10, 13), float64], Tensor[(7, 10, 13), float64]) */;
    %1086.0
  };
  %1087() /* ty=Tensor[(7, 10, 13), float64] */
}

def @func_12111(%var_12109: Tensor[(546), float32]) -> (bool, bool, Tensor[(546), float32], Tensor[(192, 1), int8]) {
  @func_12108(%var_12109) /* ty=(bool, bool, Tensor[(546), float32], Tensor[(192, 1), int8]) */
}

def @func_4197() -> (Tensor[(1, 4), bool],) {
  %1090 = fn () -> (Tensor[(1, 4), bool],) {
    %1088 = @func_2912() /* ty=(Tensor[(7, 10, 13), float64], Tensor[(1, 4), bool]) */;
    %1089 = %1088.1;
    (%1089,)
  };
  %1090() /* ty=(Tensor[(1, 4), bool],) */
}

def @func_11268() -> (bool, Tensor[(11, 15, 9), float32], bool) {
  %1096 = fn () -> (bool, Tensor[(11, 15, 9), float32], bool) {
    %1091 = @func_7920() /* ty=(Tensor[(11, 15, 9), float32], Tensor[(7, 10, 13), float64]) */;
    %1092 = @func_10812() /* ty=(bool, Tensor[(7, 10, 13), float32]) */;
    %1093 = @func_4112() /* ty=bool */;
    %1094 = %1091.0;
    %1095 = %1092.0;
    (%1093, %1094, %1095)
  };
  %1096() /* ty=(bool, Tensor[(11, 15, 9), float32], bool) */
}

def @func_12538() -> (bool, Tensor[(7, 10, 13), float32]) {
  @func_12536() /* ty=(bool, Tensor[(7, 10, 13), float32]) */
}

def @func_10689() -> bool {
  %1098 = fn () -> bool {
    %1097 = @func_7872() /* ty=(bool, bool) */;
    %1097.0
  };
  %1098() /* ty=bool */
}

def @func_1405(%var_1404: Tensor[(8, 16, 9), float64]) -> Tensor[(8, 16, 9), float64] {
  %1100 = fn (%var_1399: Tensor[(8, 16, 9), float64]) -> Tensor[(8, 16, 9), float64] {
    %1099 = cast(%var_1399, dtype="float64") /* ty=Tensor[(8, 16, 9), float64] */;
    log2(%1099) /* ty=Tensor[(8, 16, 9), float64] */
  };
  %1100(%var_1404) /* ty=Tensor[(8, 16, 9), float64] */
}

def @func_4899(%var_4863: Tensor[(2, 576), float64]) -> (Tensor[(7, 10, 13), float32], Tensor[(8, 16, 9), float64], Tensor[(2, 576), float64], bool, Tensor[(360), uint64]) {
  %1101 = @func_1318() /* ty=(Tensor[(7, 10, 13), float32], Tensor[(7, 10, 13), float32]) */;
  %1102 = cast(%var_4863, dtype="float64") /* ty=Tensor[(2, 576), float64] */;
  %1103 = reshape(%1102, newshape=[8, 16, 9]) /* ty=Tensor[(8, 16, 9), float64] */;
  %1104 = cast(meta[relay.Constant][53] /* ty=Tensor[(360), uint64] */, dtype="uint64") /* ty=Tensor[(360), uint64] */;
  %1105 = cast(meta[relay.Constant][53] /* ty=Tensor[(360), uint64] */, dtype="uint64") /* ty=Tensor[(360), uint64] */;
  %1106 = reshape(%1104, newshape=[10, 6, 6]) /* ty=Tensor[(10, 6, 6), uint64] */;
  %1107 = reshape(%1105, newshape=[10, 6, 6]) /* ty=Tensor[(10, 6, 6), uint64] */;
  %1108 = @func_3894(%1106, %1107) /* ty=(Tensor[(10, 6, 6), bool], Tensor[(10, 6, 6), float32], bool, Tensor[(7, 10, 13), float64], Tensor[(7, 12, 6), float64]) */;
  %1109 = %1101.1;
  %1110 = @func_1403(%1103) /* ty=Tensor[(8, 16, 9), float64] */;
  %1111 = %1108.2;
  (%1109, %1110, %var_4863, %1111, meta[relay.Constant][53] /* ty=Tensor[(360), uint64] */)
}

def @func_2050() -> (Tensor[(7, 10, 13), float32], Tensor[(7, 10, 13), float64]) {
  @func_2048() /* ty=(Tensor[(7, 10, 13), float32], Tensor[(7, 10, 13), float64]) */
}

def @func_10574(%var_10572: Tensor[(1, 12, 4), float64], %var_10573: Tensor[(14, 12, 4), float64]) -> (Tensor[(14, 12, 4), float64], Tensor[(14, 12, 4), bool]) {
  @func_10570(%var_10572, %var_10573) /* ty=(Tensor[(14, 12, 4), float64], Tensor[(14, 12, 4), bool]) */
}

def @func_6714() -> bool {
  %1112 = @func_6229() /* ty=(bool,) */;
  %1112.0
}

def @func_11510() -> (bool, bool) {
  %1116 = fn () -> (bool, bool) {
    %1113 = @func_6633() /* ty=(Tensor[(1, 4), bool], bool) */;
    %1114 = @func_9538() /* ty=bool */;
    %1115 = %1113.1;
    (%1114, %1115)
  };
  %1116() /* ty=(bool, bool) */
}

def @func_8888() -> (bool,) {
  %1119 = fn () -> (bool,) {
    %1117 = @func_4312() /* ty=(bool,) */;
    %1118 = %1117.0;
    (%1118,)
  };
  %1119() /* ty=(bool,) */
}

def @func_7098() -> (bool, Tensor[(7, 10, 13), float32], Tensor[(7, 10, 13), float32], Tensor[(1001), float32], Tensor[(4, 4), bool]) {
  %1132 = fn () -> (bool, Tensor[(7, 10, 13), float32], Tensor[(7, 10, 13), float32], Tensor[(1001), float32], Tensor[(4, 4), bool]) {
    %1120 = @func_5245() /* ty=(bool,) */;
    %1121 = @func_3950() /* ty=(bool, Tensor[(7, 10, 13), float64], Tensor[(7, 10, 13), float32]) */;
    %1122 = @func_2530() /* ty=(Tensor[(7, 10, 13), float32],) */;
    %1123 = %1120.0;
    %1124 = cast(%1123, dtype="bool") /* ty=bool */;
    %1125 = cast(meta[relay.Constant][54] /* ty=Tensor[(4, 4), bool] */, dtype="bool") /* ty=Tensor[(4, 4), bool] */;
    %1126 = reshape(%1124, newshape=[]) /* ty=bool */;
    %1127 = reshape(%1125, newshape=[1, 4, 4]) /* ty=Tensor[(1, 4, 4), bool] */;
    %1128 = @func_4153(%1126, %1127) /* ty=(Tensor[(1, 4, 4), bool], Tensor[(11, 7, 13), float32], Tensor[(1001), float32]) */;
    %1129 = %1121.2;
    %1130 = %1122.0;
    %1131 = %1128.2;
    (%1123, %1129, %1130, %1131, meta[relay.Constant][54] /* ty=Tensor[(4, 4), bool] */)
  };
  %1132() /* ty=(bool, Tensor[(7, 10, 13), float32], Tensor[(7, 10, 13), float32], Tensor[(1001), float32], Tensor[(4, 4), bool]) */
}

def @func_9917() -> Tensor[(96), float64] {
  @func_9915() /* ty=Tensor[(96), float64] */
}

def @func_5839() -> (bool,) {
  %1133 = @func_4312() /* ty=(bool,) */;
  %1134 = %1133.0;
  (%1134,)
}

def @func_3971(%var_3969: Tensor[(2, 9, 11), uint8], %var_3970: Tensor[(2, 9, 11), uint8]) -> Tensor[(2, 9, 11), float64] {
  %1143 = fn (%var_3953: Tensor[(2, 9, 11), uint8], %var_3954: Tensor[(2, 9, 11), uint8]) -> Tensor[(2, 9, 11), float64] {
    %1135 = cast(%var_3954, dtype="uint8") /* ty=Tensor[(2, 9, 11), uint8] */;
    %1136 = shape_of(%var_3953, dtype="int32") /* ty=Tensor[(3), int32] */;
    %1137 = cast(%var_3953, dtype="uint8") /* ty=Tensor[(2, 9, 11), uint8] */;
    %1138 = dyn.reshape(%1135, %1136, newshape=[]) /* ty=Tensor[(?, ?, ?), uint8] */;
    %1139 = left_shift(%1137, %1138) /* ty=Tensor[(2, 9, 11), uint8] */;
    %1140 = cast(%1139, dtype="float32") /* ty=Tensor[(2, 9, 11), float32] */;
    %1141 = log10(%1140) /* ty=Tensor[(2, 9, 11), float32] */;
    %1142 = cast(%1141, dtype="float64") /* ty=Tensor[(2, 9, 11), float64] */;
    sqrt(%1142) /* ty=Tensor[(2, 9, 11), float64] */
  };
  %1143(%var_3969, %var_3970) /* ty=Tensor[(2, 9, 11), float64] */
}

def @func_3684() -> (bool, Tensor[(4, ?, 6), int8], Tensor[(24), float32], Tensor[(7, 10, 13), float32], Tensor[(7, 10, 13), float32], Tensor[(910), float32]) {
  @func_3682() /* ty=(bool, Tensor[(4, ?, 6), int8], Tensor[(24), float32], Tensor[(7, 10, 13), float32], Tensor[(7, 10, 13), float32], Tensor[(910), float32]) */
}

def @func_5819() -> (Tensor[(7, 10, 13), float32],) {
  %1146 = fn () -> (Tensor[(7, 10, 13), float32],) {
    %1144 = @func_2530() /* ty=(Tensor[(7, 10, 13), float32],) */;
    %1145 = %1144.0;
    (%1145,)
  };
  %1146() /* ty=(Tensor[(7, 10, 13), float32],) */
}

def @func_9437() -> Tensor[(7, 10, 13), float64] {
  @func_4277() /* ty=Tensor[(7, 10, 13), float64] */
}

def @func_7162(%var_7133: Tensor[(1, 4, 3), uint64]) -> (Tensor[(7, 10, 13), float64], Tensor[(?, 4, 3), bool]) {
  %1147 = @func_5696() /* ty=(Tensor[(7, 10, 13), float64], Tensor[(7, 10, 13), float64]) */;
  %1148 = cast(meta[relay.Constant][55] /* ty=Tensor[(1, 4, 3), uint64] */, dtype="bool") /* ty=Tensor[(1, 4, 3), bool] */;
  %1149 = shape_of(%var_7133, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1150 = cast(%var_7133, dtype="bool") /* ty=Tensor[(1, 4, 3), bool] */;
  %1151 = dyn.reshape(%1148, %1149, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %1152 = equal(%1150, %1151) /* ty=Tensor[(?, 4, 3), bool] */;
  %1153 = cast(%1152, dtype="bool") /* ty=Tensor[(?, 4, 3), bool] */;
  %1154 = shape_of(%var_7133, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1155 = cast(%var_7133, dtype="bool") /* ty=Tensor[(1, 4, 3), bool] */;
  %1156 = dyn.reshape(%1153, %1154, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %1157 = not_equal(%1155, %1156) /* ty=Tensor[(?, 4, 3), bool] */;
  %1158 = @func_4848() /* ty=(Tensor[(1, 4), bool], bool) */;
  %1159 = %1158.1;
  %1160 = cast(%1157, dtype="bool") /* ty=Tensor[(?, 4, 3), bool] */;
  %1161 = cast(%1159, dtype="bool") /* ty=bool */;
  %1162 = %1147.1;
  %1163 = logical_or(%1160, %1161) /* ty=Tensor[(?, 4, 3), bool] */;
  (%1162, %1163)
}

def @func_4784(%var_4781: Tensor[(2, 1680), float64], %var_4782: Tensor[(546), float32], %var_4783: Tensor[(96), float64]) -> (Tensor[(7, 10, 13), float32], bool, Tensor[(24, 1), float32], Tensor[(2, 1680), float64], Tensor[(546), float32], Tensor[(96), float64]) {
  @func_4779(%var_4781, %var_4782, %var_4783) /* ty=(Tensor[(7, 10, 13), float32], bool, Tensor[(24, 1), float32], Tensor[(2, 1680), float64], Tensor[(546), float32], Tensor[(96), float64]) */
}

def @func_4359() -> (bool,) {
  @func_4357() /* ty=(bool,) */
}

def @func_12770() -> (bool, bool, Tensor[(7, 10, 13), float64], Tensor[(24), float32]) {
  %1164 = @func_8657() /* ty=(bool, Tensor[(7, 10, 13), float64], Tensor[(7, 10, 13), float64]) */;
  %1165 = %1164.2;
  %1166 = cast(%1165, dtype="float64") /* ty=Tensor[(7, 10, 13), float64] */;
  %1167 = @func_9329() /* ty=(Tensor[(7, 10, 13), float32], Tensor[(24), float32], Tensor[(7, 12, 6), uint32]) */;
  %1168 = @func_9538() /* ty=bool */;
  %1169 = @func_12606() /* ty=bool */;
  %1170 = sinh(%1166) /* ty=Tensor[(7, 10, 13), float64] */;
  %1171 = %1167.1;
  (%1168, %1169, %1170, %1171)
}

def @func_5592(%var_5590: Tensor[(546), float32], %var_5591: Tensor[(8, 12), float64]) -> (Tensor[(3360), bool], Tensor[(7, 10, 13), float64], Tensor[(7, 10, 13), float64], bool, Tensor[(546), float32], Tensor[(8, 12), float64], Tensor[(4, 8, 6), float32], Tensor[(24), float32], Tensor[(8, 24), int8]) {
  %1201 = fn (%var_5568: Tensor[(546), float32], %var_5569: Tensor[(8, 12), float64]) -> (Tensor[(3360), bool], Tensor[(7, 10, 13), float64], Tensor[(7, 10, 13), float64], bool, Tensor[(546), float32], Tensor[(8, 12), float64], Tensor[(4, 8, 6), float32], Tensor[(24), float32], Tensor[(8, 24), int8]) {
    %1172 = @func_5177() /* ty=(Tensor[(7, 10, 13), float64], bool, Tensor[(96), float64], Tensor[(3360), float64], Tensor[(546), float32], Tensor[(96), float64], Tensor[(7, 10, 13), float64]) */;
    %1173 = %1172.3;
    %1174 = cast(meta[relay.Constant][56] /* ty=Tensor[(3360), float64] */, dtype="bool") /* ty=Tensor[(3360), bool] */;
    %1175 = shape_of(%1173, dtype="int32") /* ty=Tensor[(1), int32] */;
    %1176 = cast(%1173, dtype="bool") /* ty=Tensor[(3360), bool] */;
    %1177 = dyn.reshape(%1174, %1175, newshape=[]) /* ty=Tensor[(?), bool] */;
    %1178 = @func_1858() /* ty=(Tensor[(7, 10, 13), float64], Tensor[(7, 10, 13), float32]) */;
    %1179 = @func_4002() /* ty=(Tensor[(7, 10, 13), float64],) */;
    %1180 = cast(%1173, dtype="float64") /* ty=Tensor[(3360), float64] */;
    %1181 = cast(%var_5568, dtype="float32") /* ty=Tensor[(546), float32] */;
    %1182 = cast(%var_5569, dtype="float64") /* ty=Tensor[(8, 12), float64] */;
    %1183 = reshape(%1180, newshape=[2, 1680]) /* ty=Tensor[(2, 1680), float64] */;
    %1184 = reshape(%1181, newshape=[546]) /* ty=Tensor[(546), float32] */;
    %1185 = reshape(%1182, newshape=[96]) /* ty=Tensor[(96), float64] */;
    %1186 = @func_4779(%1183, %1184, %1185) /* ty=(Tensor[(7, 10, 13), float32], bool, Tensor[(24, 1), float32], Tensor[(2, 1680), float64], Tensor[(546), float32], Tensor[(96), float64]) */;
    %1187 = cast(%var_5569, dtype="float64") /* ty=Tensor[(8, 12), float64] */;
    %1188 = cast(%var_5568, dtype="float32") /* ty=Tensor[(546), float32] */;
    %1189 = cast(meta[relay.Constant][57] /* ty=Tensor[(24), float32] */, dtype="float32") /* ty=Tensor[(24), float32] */;
    %1190 = cast(meta[relay.Constant][58] /* ty=Tensor[(8, 24), int8] */, dtype="int8") /* ty=Tensor[(8, 24), int8] */;
    %1191 = reshape(%1187, newshape=[16, 2, 3]) /* ty=Tensor[(16, 2, 3), float64] */;
    %1192 = reshape(%1188, newshape=[546]) /* ty=Tensor[(546), float32] */;
    %1193 = reshape(%1189, newshape=[12, 2]) /* ty=Tensor[(12, 2), float32] */;
    %1194 = reshape(%1190, newshape=[192]) /* ty=Tensor[(192), int8] */;
    %1195 = @func_842(%1191, %1192, %1193, %1194) /* ty=(Tensor[(16, 2, 3), float64], Tensor[(4, 8, 6), float32], Tensor[(546), float32], Tensor[(12, 2), float32], Tensor[(192), int8], Tensor[(6, 4), float32]) */;
    %1196 = logical_and(%1176, %1177) /* ty=Tensor[(3360), bool] */;
    %1197 = %1178.0;
    %1198 = %1179.0;
    %1199 = %1186.1;
    %1200 = %1195.1;
    (%1196, %1197, %1198, %1199, %var_5568, %var_5569, %1200, meta[relay.Constant][57] /* ty=Tensor[(24), float32] */, meta[relay.Constant][58] /* ty=Tensor[(8, 24), int8] */)
  };
  %1201(%var_5590, %var_5591) /* ty=(Tensor[(3360), bool], Tensor[(7, 10, 13), float64], Tensor[(7, 10, 13), float64], bool, Tensor[(546), float32], Tensor[(8, 12), float64], Tensor[(4, 8, 6), float32], Tensor[(24), float32], Tensor[(8, 24), int8]) */
}

def @func_5628() -> (bool,) {
  %1202 = @func_2572() /* ty=(bool,) */;
  %1203 = %1202.0;
  (%1203,)
}

def @func_12193(%var_12191: Tensor[(672), float64]) -> (Tensor[(7, 10, 13), float64], Tensor[(7, 10, 13), float64], Tensor[(3, 14, 16), float64], Tensor[(672), float64], bool) {
  @func_12190(%var_12191) /* ty=(Tensor[(7, 10, 13), float64], Tensor[(7, 10, 13), float64], Tensor[(3, 14, 16), float64], Tensor[(672), float64], bool) */
}

def @func_247(%var_204: Tensor[(3, 13, 14), float32], %var_208: Tensor[(6, 4), float32], %var_224: Tensor[(4, 8, 6), int8]) -> (Tensor[(6, 4), float32], Tensor[(4, ?, 6), int8], Tensor[(4, ?, 6), int32], Tensor[(4, 8, 6), float32], Tensor[(4, ?, 6), int8], Tensor[(3, 13, 14), float64]) {
  %1204 = cast(%var_208, dtype="float32") /* ty=Tensor[(6, 4), float32] */;
  %1205 = reshape(%1204, newshape=[4, 1, 6]) /* ty=Tensor[(4, 1, 6), float32] */;
  %1206 = @func_126(%1205) /* ty=(Tensor[(4, ?, 6), int32], Tensor[(4, ?, 6), int8]) */;
  %1207 = %1206.1;
  %1208 = cast(%1207, dtype="float32") /* ty=Tensor[(4, ?, 6), float32] */;
  %1209 = reshape(%1208, newshape=[4, 1, 6]) /* ty=Tensor[(4, 1, 6), float32] */;
  %1210 = @func_126(%1209) /* ty=(Tensor[(4, ?, 6), int32], Tensor[(4, ?, 6), int8]) */;
  %1211 = cast(%var_208, dtype="float32") /* ty=Tensor[(6, 4), float32] */;
  %1212 = reshape(%1211, newshape=[4, 1, 6]) /* ty=Tensor[(4, 1, 6), float32] */;
  %1213 = @func_126(%1212) /* ty=(Tensor[(4, ?, 6), int32], Tensor[(4, ?, 6), int8]) */;
  %1214 = cast(%1207, dtype="float32") /* ty=Tensor[(4, ?, 6), float32] */;
  %1215 = cast(%var_224, dtype="float32") /* ty=Tensor[(4, 8, 6), float32] */;
  %1216 = %1210.1;
  %1217 = cast(%1216, dtype="float32") /* ty=Tensor[(4, ?, 6), float32] */;
  %1218 = reshape(%1217, newshape=[4, 1, 6]) /* ty=Tensor[(4, 1, 6), float32] */;
  %1219 = @func_126(%1218) /* ty=(Tensor[(4, ?, 6), int32], Tensor[(4, ?, 6), int8]) */;
  %1220 = cast(%var_204, dtype="float32") /* ty=Tensor[(3, 13, 14), float32] */;
  %1221 = rsqrt(%1220) /* ty=Tensor[(3, 13, 14), float32] */;
  %1222 = cast(%1221, dtype="float64") /* ty=Tensor[(3, 13, 14), float64] */;
  %1223 = %1213.0;
  %1224 = mod(%1214, %1215) /* ty=Tensor[(4, 8, 6), float32] */;
  %1225 = %1219.1;
  %1226 = log10(%1222) /* ty=Tensor[(3, 13, 14), float64] */;
  (%var_208, %1216, %1223, %1224, %1225, %1226)
}

def @func_2620(%var_2577: Tensor[(8, 7, 5), float32], %var_2591: Tensor[(24, 8), int8]) -> (Tensor[(8, 7, 5), int16], Tensor[(7, 10, 13), float32], Tensor[(12, 2), float32], Tensor[(96), float64], Tensor[(546), float32], Tensor[(6, 4), float32], Tensor[(24, 8), int8], Tensor[(12, 2), float32], Tensor[(7, 10, 13), float32]) {
  %1227 = cast(5.83192f /* ty=float32 */, dtype="float32") /* ty=float32 */;
  %1228 = cast(%var_2577, dtype="float32") /* ty=Tensor[(8, 7, 5), float32] */;
  %1229 = mod(%1227, %1228) /* ty=Tensor[(8, 7, 5), float32] */;
  %1230 = cast(%1229, dtype="int16") /* ty=Tensor[(8, 7, 5), int16] */;
  %1231 = shape_of(%var_2577, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1232 = cast(%var_2577, dtype="int16") /* ty=Tensor[(8, 7, 5), int16] */;
  %1233 = dyn.reshape(%1230, %1231, newshape=[]) /* ty=Tensor[(?, ?, ?), int16] */;
  %1234 = @func_1369() /* ty=(Tensor[(7, 10, 13), float32], Tensor[(7, 10, 13), float32]) */;
  %1235 = cast(meta[relay.Constant][59] /* ty=Tensor[(96), float64] */, dtype="float64") /* ty=Tensor[(96), float64] */;
  %1236 = cast(meta[relay.Constant][60] /* ty=Tensor[(546), float32] */, dtype="float32") /* ty=Tensor[(546), float32] */;
  %1237 = cast(meta[relay.Constant][61] /* ty=Tensor[(6, 4), float32] */, dtype="float32") /* ty=Tensor[(6, 4), float32] */;
  %1238 = cast(%var_2591, dtype="int8") /* ty=Tensor[(24, 8), int8] */;
  %1239 = reshape(%1235, newshape=[16, 2, 3]) /* ty=Tensor[(16, 2, 3), float64] */;
  %1240 = reshape(%1236, newshape=[546]) /* ty=Tensor[(546), float32] */;
  %1241 = reshape(%1237, newshape=[12, 2]) /* ty=Tensor[(12, 2), float32] */;
  %1242 = reshape(%1238, newshape=[192]) /* ty=Tensor[(192), int8] */;
  %1243 = @func_842(%1239, %1240, %1241, %1242) /* ty=(Tensor[(16, 2, 3), float64], Tensor[(4, 8, 6), float32], Tensor[(546), float32], Tensor[(12, 2), float32], Tensor[(192), int8], Tensor[(6, 4), float32]) */;
  %1244 = cast(meta[relay.Constant][59] /* ty=Tensor[(96), float64] */, dtype="float64") /* ty=Tensor[(96), float64] */;
  %1245 = cast(meta[relay.Constant][60] /* ty=Tensor[(546), float32] */, dtype="float32") /* ty=Tensor[(546), float32] */;
  %1246 = cast(meta[relay.Constant][61] /* ty=Tensor[(6, 4), float32] */, dtype="float32") /* ty=Tensor[(6, 4), float32] */;
  %1247 = cast(%var_2591, dtype="int8") /* ty=Tensor[(24, 8), int8] */;
  %1248 = reshape(%1244, newshape=[16, 2, 3]) /* ty=Tensor[(16, 2, 3), float64] */;
  %1249 = reshape(%1245, newshape=[546]) /* ty=Tensor[(546), float32] */;
  %1250 = reshape(%1246, newshape=[12, 2]) /* ty=Tensor[(12, 2), float32] */;
  %1251 = reshape(%1247, newshape=[192]) /* ty=Tensor[(192), int8] */;
  %1252 = @func_842(%1248, %1249, %1250, %1251) /* ty=(Tensor[(16, 2, 3), float64], Tensor[(4, 8, 6), float32], Tensor[(546), float32], Tensor[(12, 2), float32], Tensor[(192), int8], Tensor[(6, 4), float32]) */;
  %1253 = @func_1232() /* ty=(Tensor[(7, 10, 13), float32],) */;
  %1254 = logical_xor(%1232, %1233) /* ty=Tensor[(8, 7, 5), int16] */;
  %1255 = %1234.1;
  %1256 = %1243.3;
  %1257 = %1252.3;
  %1258 = %1253.0;
  (%1254, %1255, %1256, meta[relay.Constant][59] /* ty=Tensor[(96), float64] */, meta[relay.Constant][60] /* ty=Tensor[(546), float32] */, meta[relay.Constant][61] /* ty=Tensor[(6, 4), float32] */, %var_2591, %1257, %1258)
}

def @func_10813() -> (bool, Tensor[(7, 10, 13), float32]) {
  %1263 = fn () -> (bool, Tensor[(7, 10, 13), float32]) {
    %1259 = @func_5099() /* ty=(bool,) */;
    %1260 = @func_1858() /* ty=(Tensor[(7, 10, 13), float64], Tensor[(7, 10, 13), float32]) */;
    %1261 = %1259.0;
    %1262 = %1260.1;
    (%1261, %1262)
  };
  %1263() /* ty=(bool, Tensor[(7, 10, 13), float32]) */
}

def @func_6716() -> bool {
  @func_6714() /* ty=bool */
}

def @func_7289(%var_7288: Tensor[(3, 14, 16), float64]) -> (Tensor[(10, 16, 3), float64], Tensor[(480), float64], Tensor[(3, 14, 16), float64]) {
  %1274 = fn (%var_7268: Tensor[(3, 14, 16), float64]) -> (Tensor[(10, 16, 3), float64], Tensor[(480), float64], Tensor[(3, 14, 16), float64]) {
    %1264 = cast(meta[relay.Constant][62] /* ty=Tensor[(480), float64] */, dtype="float64") /* ty=Tensor[(480), float64] */;
    %1265 = reshape(%1264, newshape=[10, 16, 3]) /* ty=Tensor[(10, 16, 3), float64] */;
    %1266 = cast(%var_7268, dtype="float64") /* ty=Tensor[(3, 14, 16), float64] */;
    %1267 = sigmoid(%1266) /* ty=Tensor[(3, 14, 16), float64] */;
    %1268 = cast(%var_7268, dtype="float64") /* ty=Tensor[(3, 14, 16), float64] */;
    %1269 = shape_of(%1267, dtype="int32") /* ty=Tensor[(3), int32] */;
    %1270 = cast(%1267, dtype="float64") /* ty=Tensor[(3, 14, 16), float64] */;
    %1271 = dyn.reshape(%1268, %1269, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
    %1272 = @func_4815(%1265) /* ty=Tensor[(10, 16, 3), float64] */;
    %1273 = floor_divide(%1270, %1271) /* ty=Tensor[(3, 14, 16), float64] */;
    (%1272, meta[relay.Constant][62] /* ty=Tensor[(480), float64] */, %1273)
  };
  %1274(%var_7288) /* ty=(Tensor[(10, 16, 3), float64], Tensor[(480), float64], Tensor[(3, 14, 16), float64]) */
}

def @func_8840() -> (Tensor[(7, 10, 13), float32], bool) {
  @func_8838() /* ty=(Tensor[(7, 10, 13), float32], bool) */
}

def @func_12607() -> bool {
  %1276 = fn () -> bool {
    %1275 = @func_1975() /* ty=(bool,) */;
    %1275.0
  };
  %1276() /* ty=bool */
}

def @func_252(%var_249: Tensor[(3, 13, 14), float32], %var_250: Tensor[(6, 4), float32], %var_251: Tensor[(4, 8, 6), int8]) -> (Tensor[(6, 4), float32], Tensor[(4, ?, 6), int8], Tensor[(4, ?, 6), int32], Tensor[(4, 8, 6), float32], Tensor[(4, ?, 6), int8], Tensor[(3, 13, 14), float64]) {
  @func_247(%var_249, %var_250, %var_251) /* ty=(Tensor[(6, 4), float32], Tensor[(4, ?, 6), int8], Tensor[(4, ?, 6), int32], Tensor[(4, 8, 6), float32], Tensor[(4, ?, 6), int8], Tensor[(3, 13, 14), float64]) */
}

def @func_6859() -> bool {
  @func_4928() /* ty=bool */
}

def @func_9915() -> Tensor[(96), float64] {
  %1277 = @func_8355() /* ty=(Tensor[(96), float64], Tensor[(7, 10, 13), float64], Tensor[(910), float32]) */;
  %1277.0
}

def @func_9625(%var_9623: Tensor[(3, 9, 11), float64], %var_9624: Tensor[(3, 9, 11), float64]) -> (bool, Tensor[(3, 9, 11), float32]) {
  @func_9621(%var_9623, %var_9624) /* ty=(bool, Tensor[(3, 9, 11), float32]) */
}

def @func_7855() -> (bool, Tensor[(2, 9, 11), float64], Tensor[(198), uint8]) {
  %1278 = @func_6633() /* ty=(Tensor[(1, 4), bool], bool) */;
  %1279 = cast(meta[relay.Constant][63] /* ty=Tensor[(198), uint8] */, dtype="uint8") /* ty=Tensor[(198), uint8] */;
  %1280 = cast(meta[relay.Constant][63] /* ty=Tensor[(198), uint8] */, dtype="uint8") /* ty=Tensor[(198), uint8] */;
  %1281 = reshape(%1279, newshape=[2, 9, 11]) /* ty=Tensor[(2, 9, 11), uint8] */;
  %1282 = reshape(%1280, newshape=[2, 9, 11]) /* ty=Tensor[(2, 9, 11), uint8] */;
  %1283 = %1278.1;
  %1284 = @func_3968(%1281, %1282) /* ty=Tensor[(2, 9, 11), float64] */;
  (%1283, %1284, meta[relay.Constant][63] /* ty=Tensor[(198), uint8] */)
}

def @func_6206(%var_6204: Tensor[(16), bool]) -> (bool, bool, Tensor[(7, 10, 13), float64], Tensor[(1, 4), bool], Tensor[(11, 7, 13), float32], Tensor[(16), bool], Tensor[(7, 12, 6), uint32]) {
  @func_6203(%var_6204) /* ty=(bool, bool, Tensor[(7, 10, 13), float64], Tensor[(1, 4), bool], Tensor[(11, 7, 13), float32], Tensor[(16), bool], Tensor[(7, 12, 6), uint32]) */
}

def @func_7921() -> (Tensor[(11, 15, 9), float32], Tensor[(7, 10, 13), float64]) {
  %1288 = fn () -> (Tensor[(11, 15, 9), float32], Tensor[(7, 10, 13), float64]) {
    %1285 = cast(meta[relay.Constant][64] /* ty=Tensor[(11, 15, 9), float32] */, dtype="float32") /* ty=Tensor[(11, 15, 9), float32] */;
    %1286 = asin(%1285) /* ty=Tensor[(11, 15, 9), float32] */;
    %1287 = @func_5480() /* ty=Tensor[(7, 10, 13), float64] */;
    (%1286, %1287)
  };
  %1288() /* ty=(Tensor[(11, 15, 9), float32], Tensor[(7, 10, 13), float64]) */
}

def @func_4930() -> bool {
  @func_4928() /* ty=bool */
}

def @func_12367(%var_12363: Tensor[(6, 6, 3), float64], %var_12364: Tensor[(6, 6, 3), float64], %var_12365: Tensor[(280), float32], %var_12366: Tensor[(1001), float32]) -> (Tensor[(6, 6, 3), float64], bool, Tensor[(8, 2), bool], Tensor[(192), int8], Tensor[(280), float32], Tensor[(7, 10, 13), float64], Tensor[(36), float32], Tensor[(1001), bool], Tensor[(7, 10, 13), float32]) {
  @func_12361(%var_12363, %var_12364, %var_12365, %var_12366) /* ty=(Tensor[(6, 6, 3), float64], bool, Tensor[(8, 2), bool], Tensor[(192), int8], Tensor[(280), float32], Tensor[(7, 10, 13), float64], Tensor[(36), float32], Tensor[(1001), bool], Tensor[(7, 10, 13), float32]) */
}

def @func_2406(%var_2403: Tensor[(14, 15, 16), float64], %var_2404: Tensor[(50, 6), float32], %var_2405: Tensor[(24), float32]) -> (Tensor[(14, 15, 16), float64], Tensor[(7, 10, 13), float64], Tensor[(50, 6), float32], Tensor[(24), float32]) {
  %1297 = fn (%var_2357: Tensor[(14, 15, 16), float64], %var_2387: Tensor[(50, 6), float32], %var_2388: Tensor[(24), float32]) -> (Tensor[(14, 15, 16), float64], Tensor[(7, 10, 13), float64], Tensor[(50, 6), float32], Tensor[(24), float32]) {
    %1289 = cast(%var_2357, dtype="float64") /* ty=Tensor[(14, 15, 16), float64] */;
    %1290 = cast(%var_2387, dtype="float32") /* ty=Tensor[(50, 6), float32] */;
    %1291 = cast(%var_2388, dtype="float32") /* ty=Tensor[(24), float32] */;
    %1292 = reshape(%1290, newshape=[5, 5, 12]) /* ty=Tensor[(5, 5, 12), float32] */;
    %1293 = reshape(%1291, newshape=[24]) /* ty=Tensor[(24), float32] */;
    %1294 = @func_1956(%1292, %1293) /* ty=(Tensor[(5, 5, 12), float32], Tensor[(4, ?, 6), int32], Tensor[(24), float32], Tensor[(7, 10, 13), float64]) */;
    %1295 = log(%1289) /* ty=Tensor[(14, 15, 16), float64] */;
    %1296 = %1294.3;
    (%1295, %1296, %var_2387, %var_2388)
  };
  %1297(%var_2403, %var_2404, %var_2405) /* ty=(Tensor[(14, 15, 16), float64], Tensor[(7, 10, 13), float64], Tensor[(50, 6), float32], Tensor[(24), float32]) */
}

def @func_9722(%var_9720: Tensor[(378), float64]) -> (Tensor[(7, 10, 13), float32], Tensor[(9, 14, 3), float64], Tensor[(378), float64], Tensor[(7, 10, 13), float64], Tensor[(7, 10, 13), float64], Tensor[(7, 10, 13), float64], Tensor[(16, 3, 12), bool]) {
  @func_9719(%var_9720) /* ty=(Tensor[(7, 10, 13), float32], Tensor[(9, 14, 3), float64], Tensor[(378), float64], Tensor[(7, 10, 13), float64], Tensor[(7, 10, 13), float64], Tensor[(7, 10, 13), float64], Tensor[(16, 3, 12), bool]) */
}

def @func_129(%var_127: Tensor[(4, 1, 6), float32]) -> (Tensor[(4, ?, 6), int32], Tensor[(4, ?, 6), int8]) {
  @func_126(%var_127) /* ty=(Tensor[(4, ?, 6), int32], Tensor[(4, ?, 6), int8]) */
}

def @func_10857(%var_10855: Tensor[(280), float32]) -> (Tensor[(7, 10, 13), float32], Tensor[(280), float32], Tensor[(280), float32], Tensor[(192), int8], Tensor[(360), uint64]) {
  @func_10854(%var_10855) /* ty=(Tensor[(7, 10, 13), float32], Tensor[(280), float32], Tensor[(280), float32], Tensor[(192), int8], Tensor[(360), uint64]) */
}

def @func_5010() -> (Tensor[(7, 10, 13), float64],) {
  %1298 = @func_4701() /* ty=Tensor[(7, 10, 13), float64] */;
  (%1298,)
}

def @func_11215() -> (bool, bool) {
  @func_11213() /* ty=(bool, bool) */
}

def @func_12855() -> Tensor[(96), float64] {
  %1299 = fn () -> Tensor[(96), float64] {
    @func_9915() /* ty=Tensor[(96), float64] */
  };
  %1299() /* ty=Tensor[(96), float64] */
}

def @func_12822() -> (Tensor[(7, 10, 13), float32], Tensor[(910), float32], Tensor[(7, 10, 13), float64], Tensor[(198), uint8]) {
  %1308 = fn () -> (Tensor[(7, 10, 13), float32], Tensor[(910), float32], Tensor[(7, 10, 13), float64], Tensor[(198), uint8]) {
    %1300 = @func_1426() /* ty=(Tensor[(7, 10, 13), float32], Tensor[(1, 4), bool], bool) */;
    %1301 = @func_7899() /* ty=(Tensor[(910), float32],) */;
    %1302 = @func_5294() /* ty=(Tensor[(1, 4), bool], Tensor[(7, 10, 13), float64], Tensor[(14, 15, 16), float64], Tensor[(3360), float64], Tensor[(300, 1), float32], Tensor[(24), float32]) */;
    %1303 = @func_6248() /* ty=(Tensor[(7, 10, 13), float64], Tensor[(2, 9, 11), float64], Tensor[(198), uint8]) */;
    %1304 = %1300.0;
    %1305 = %1301.0;
    %1306 = %1302.1;
    %1307 = %1303.2;
    (%1304, %1305, %1306, %1307)
  };
  %1308() /* ty=(Tensor[(7, 10, 13), float32], Tensor[(910), float32], Tensor[(7, 10, 13), float64], Tensor[(198), uint8]) */
}

def @func_6041() -> (Tensor[(7, 10, 13), float32], bool) {
  @func_6039() /* ty=(Tensor[(7, 10, 13), float32], bool) */
}

def @func_5001(%var_4999: Tensor[(2, 12), float32], %var_5000: Tensor[(70, 4), float32]) -> (Tensor[(7, 10, 13), float64], Tensor[(2, 12), float32], Tensor[(70, 4), uint16]) {
  %1321 = fn (%var_4967: Tensor[(2, 12), float32], %var_4968: Tensor[(70, 4), float32]) -> (Tensor[(7, 10, 13), float64], Tensor[(2, 12), float32], Tensor[(70, 4), uint16]) {
    %1309 = cast(%var_4967, dtype="float32") /* ty=Tensor[(2, 12), float32] */;
    %1310 = cast(%var_4968, dtype="float32") /* ty=Tensor[(70, 4), float32] */;
    %1311 = reshape(%1309, newshape=[24]) /* ty=Tensor[(24), float32] */;
    %1312 = reshape(%1310, newshape=[280]) /* ty=Tensor[(280), float32] */;
    %1313 = @func_3129(%1311, %1312) /* ty=(Tensor[(7, 10, 13), float64], Tensor[(280), float32], Tensor[(192), int8], Tensor[(24, 8), float32], Tensor[(4, ?, 6), bool]) */;
    %1314 = %1313.1;
    %1315 = cast(%1314, dtype="uint16") /* ty=Tensor[(280), uint16] */;
    %1316 = shape_of(%var_4968, dtype="int32") /* ty=Tensor[(2), int32] */;
    %1317 = cast(%var_4968, dtype="uint16") /* ty=Tensor[(70, 4), uint16] */;
    %1318 = dyn.reshape(%1315, %1316, newshape=[]) /* ty=Tensor[(?, ?), uint16] */;
    %1319 = @func_4277() /* ty=Tensor[(7, 10, 13), float64] */;
    %1320 = right_shift(%1317, %1318) /* ty=Tensor[(70, 4), uint16] */;
    (%1319, %var_4967, %1320)
  };
  %1321(%var_4999, %var_5000) /* ty=(Tensor[(7, 10, 13), float64], Tensor[(2, 12), float32], Tensor[(70, 4), uint16]) */
}

def @func_11137(%var_11136: Tensor[(15, 7, 11), float32]) -> (Tensor[(7, 10, 13), float32], Tensor[(7, 10, 13), float64], Tensor[(15, 7, 11), float64], Tensor[(15, 7, 11), float32]) {
  %1344 = fn (%var_11065: Tensor[(15, 7, 11), float32]) -> (Tensor[(7, 10, 13), float32], Tensor[(7, 10, 13), float64], Tensor[(15, 7, 11), float64], Tensor[(15, 7, 11), float32]) {
    %1322 = @func_2530() /* ty=(Tensor[(7, 10, 13), float32],) */;
    %1323 = cast(meta[relay.Constant][65] /* ty=Tensor[(15, 7, 11), float32] */, dtype="int16") /* ty=Tensor[(15, 7, 11), int16] */;
    %1324 = shape_of(%var_11065, dtype="int32") /* ty=Tensor[(3), int32] */;
    %1325 = cast(%var_11065, dtype="int16") /* ty=Tensor[(15, 7, 11), int16] */;
    %1326 = dyn.reshape(%1323, %1324, newshape=[]) /* ty=Tensor[(?, ?, ?), int16] */;
    %1327 = left_shift(%1325, %1326) /* ty=Tensor[(15, 7, 11), int16] */;
    %1328 = cast(%1327, dtype="float64") /* ty=Tensor[(15, 7, 11), float64] */;
    %1329 = shape_of(meta[relay.Constant][65] /* ty=Tensor[(15, 7, 11), float32] */, dtype="int32") /* ty=Tensor[(3), int32] */;
    %1330 = cast(meta[relay.Constant][65] /* ty=Tensor[(15, 7, 11), float32] */, dtype="float64") /* ty=Tensor[(15, 7, 11), float64] */;
    %1331 = dyn.reshape(%1328, %1329, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
    %1332 = cast(meta[relay.Constant][65] /* ty=Tensor[(15, 7, 11), float32] */, dtype="bool") /* ty=Tensor[(15, 7, 11), bool] */;
    %1333 = shape_of(%var_11065, dtype="int32") /* ty=Tensor[(3), int32] */;
    %1334 = cast(%var_11065, dtype="bool") /* ty=Tensor[(15, 7, 11), bool] */;
    %1335 = dyn.reshape(%1332, %1333, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    %1336 = less_equal(%1334, %1335) /* ty=Tensor[(15, 7, 11), bool] */;
    %1337 = cast(%1336, dtype="float32") /* ty=Tensor[(15, 7, 11), float32] */;
    %1338 = asin(%1337) /* ty=Tensor[(15, 7, 11), float32] */;
    %1339 = cast(%1338, dtype="float32") /* ty=Tensor[(15, 7, 11), float32] */;
    %1340 = %1322.0;
    %1341 = @func_1704() /* ty=Tensor[(7, 10, 13), float64] */;
    %1342 = add(%1330, %1331) /* ty=Tensor[(15, 7, 11), float64] */;
    %1343 = atanh(%1339) /* ty=Tensor[(15, 7, 11), float32] */;
    (%1340, %1341, %1342, %1343)
  };
  %1344(%var_11136) /* ty=(Tensor[(7, 10, 13), float32], Tensor[(7, 10, 13), float64], Tensor[(15, 7, 11), float64], Tensor[(15, 7, 11), float32]) */
}

def @func_12449() -> (Tensor[(7, 10, 13), float32], Tensor[(7, 10, 13), float32]) {
  @func_12447() /* ty=(Tensor[(7, 10, 13), float32], Tensor[(7, 10, 13), float32]) */
}

def @func_10854(%var_10835: Tensor[(280), float32]) -> (Tensor[(7, 10, 13), float32], Tensor[(280), float32], Tensor[(280), float32], Tensor[(192), int8], Tensor[(360), uint64]) {
  %1345 = @func_3950() /* ty=(bool, Tensor[(7, 10, 13), float64], Tensor[(7, 10, 13), float32]) */;
  %1346 = cast(%var_10835, dtype="float32") /* ty=Tensor[(280), float32] */;
  %1347 = cast(meta[relay.Constant][66] /* ty=Tensor[(192), int8] */, dtype="int8") /* ty=Tensor[(192), int8] */;
  %1348 = cast(meta[relay.Constant][67] /* ty=Tensor[(360), uint64] */, dtype="uint64") /* ty=Tensor[(360), uint64] */;
  %1349 = reshape(%1346, newshape=[280]) /* ty=Tensor[(280), float32] */;
  %1350 = reshape(%1347, newshape=[192]) /* ty=Tensor[(192), int8] */;
  %1351 = reshape(%1348, newshape=[360]) /* ty=Tensor[(360), uint64] */;
  %1352 = @func_9843(%1349, %1350, %1351) /* ty=(Tensor[(7, 10, 13), float64], Tensor[(7, 10, 13), float64], Tensor[(378), float64], Tensor[(24, 8), int8], Tensor[(280), float32], Tensor[(192), int8], bool, bool, Tensor[(360), uint64]) */;
  %1353 = %1345.2;
  %1354 = %1352.4;
  (%1353, %1354, %var_10835, meta[relay.Constant][66] /* ty=Tensor[(192), int8] */, meta[relay.Constant][67] /* ty=Tensor[(360), uint64] */)
}

def @func_4357() -> (bool,) {
  %1355 = @func_2272() /* ty=bool */;
  (%1355,)
}

def @func_12936(%var_12935: Tensor[(10, 7, 11), int8]) -> Tensor[(10, 7, 11), float32] {
  %1362 = fn (%var_12916: Tensor[(10, 7, 11), int8]) -> Tensor[(10, 7, 11), float32] {
    %1356 = cast(%var_12916, dtype="bool") /* ty=Tensor[(10, 7, 11), bool] */;
    %1357 = shape_of(meta[relay.Constant][68] /* ty=Tensor[(10, 7, 11), int8] */, dtype="int32") /* ty=Tensor[(3), int32] */;
    %1358 = cast(meta[relay.Constant][68] /* ty=Tensor[(10, 7, 11), int8] */, dtype="bool") /* ty=Tensor[(10, 7, 11), bool] */;
    %1359 = dyn.reshape(%1356, %1357, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    %1360 = not_equal(%1358, %1359) /* ty=Tensor[(10, 7, 11), bool] */;
    %1361 = cast(%1360, dtype="float32") /* ty=Tensor[(10, 7, 11), float32] */;
    acosh(%1361) /* ty=Tensor[(10, 7, 11), float32] */
  };
  %1362(%var_12935) /* ty=Tensor[(10, 7, 11), float32] */
}

def @func_8179() -> (Tensor[(7, 10, 13), float32], Tensor[(7, 10, 13), float64], Tensor[(7, 10, 13), float64], bool, Tensor[(10, 16, 3), float64], Tensor[(480), float64], bool) {
  %1363 = @func_1318() /* ty=(Tensor[(7, 10, 13), float32], Tensor[(7, 10, 13), float32]) */;
  %1364 = @func_7423() /* ty=(Tensor[(7, 10, 13), float64], Tensor[(7, 10, 13), float64]) */;
  %1365 = @func_1502() /* ty=(Tensor[(7, 10, 13), float64],) */;
  %1366 = @func_5628() /* ty=(bool,) */;
  %1367 = cast(meta[relay.Constant][69] /* ty=Tensor[(480), float64] */, dtype="float64") /* ty=Tensor[(480), float64] */;
  %1368 = reshape(%1367, newshape=[10, 16, 3]) /* ty=Tensor[(10, 16, 3), float64] */;
  %1369 = %1363.1;
  %1370 = %1364.0;
  %1371 = %1365.0;
  %1372 = %1366.0;
  %1373 = @func_4815(%1368) /* ty=Tensor[(10, 16, 3), float64] */;
  %1374 = @func_2272() /* ty=bool */;
  (%1369, %1370, %1371, %1372, %1373, meta[relay.Constant][69] /* ty=Tensor[(480), float64] */, %1374)
}

def @func_4779(%var_4774: Tensor[(2, 1680), float64], %var_4775: Tensor[(546), float32], %var_4776: Tensor[(96), float64]) -> (Tensor[(7, 10, 13), float32], bool, Tensor[(24, 1), float32], Tensor[(2, 1680), float64], Tensor[(546), float32], Tensor[(96), float64]) {
  %1375 = @func_2530() /* ty=(Tensor[(7, 10, 13), float32],) */;
  %1376 = cast(%var_4774, dtype="float64") /* ty=Tensor[(2, 1680), float64] */;
  %1377 = cast(%var_4775, dtype="float32") /* ty=Tensor[(546), float32] */;
  %1378 = cast(%var_4776, dtype="float64") /* ty=Tensor[(96), float64] */;
  %1379 = reshape(%1376, newshape=[420, 8]) /* ty=Tensor[(420, 8), float64] */;
  %1380 = reshape(%1377, newshape=[546]) /* ty=Tensor[(546), float32] */;
  %1381 = reshape(%1378, newshape=[96]) /* ty=Tensor[(96), float64] */;
  %1382 = @func_3518(%1379, %1380, %1381) /* ty=(Tensor[(7, 10, 13), float32], Tensor[(7, 10, 13), float32], Tensor[(7, 10, 13), float32], Tensor[(24, 1), float32], Tensor[(420, 8), float64], Tensor[(546), float32], Tensor[(96), float64], bool, Tensor[(7, 10, 13), float64], Tensor[(280), float32]) */;
  %1383 = %1375.0;
  %1384 = @func_4112() /* ty=bool */;
  %1385 = %1382.3;
  (%1383, %1384, %1385, %var_4774, %var_4775, %var_4776)
}

def @func_1232() -> (Tensor[(7, 10, 13), float32],) {
  %1386 = cast(meta[relay.Constant][70] /* ty=Tensor[(7, 10, 13), float32] */, dtype="float32") /* ty=Tensor[(7, 10, 13), float32] */;
  %1387 = asin(%1386) /* ty=Tensor[(7, 10, 13), float32] */;
  (%1387,)
}

def @func_4312() -> (bool,) {
  %1388 = @func_2572() /* ty=(bool,) */;
  %1389 = %1388.0;
  (%1389,)
}

def @func_9513() -> bool {
  %1391 = fn () -> bool {
    %1390 = @func_8483() /* ty=(bool, Tensor[(14, 15, 16), float64]) */;
    %1390.0
  };
  %1391() /* ty=bool */
}

def @func_11980(%var_11978: Tensor[(1, 5, 11), float64], %var_11979: Tensor[(14, 5, 11), float64]) -> (Tensor[(14, 5, 11), float64], Tensor[(2, 5, 16), float32], Tensor[(14, 5, 11), bool]) {
  %1400 = fn (%var_11953: Tensor[(1, 5, 11), float64], %var_11954: Tensor[(14, 5, 11), float64]) -> (Tensor[(14, 5, 11), float64], Tensor[(2, 5, 16), float32], Tensor[(14, 5, 11), bool]) {
    %1392 = cast(%var_11953, dtype="float64") /* ty=Tensor[(1, 5, 11), float64] */;
    %1393 = cast(%var_11954, dtype="float64") /* ty=Tensor[(14, 5, 11), float64] */;
    %1394 = @func_6287() /* ty=(Tensor[(2, 5, 16), float32], Tensor[(2, 5, 16), float32]) */;
    %1395 = cast(%var_11953, dtype="bool") /* ty=Tensor[(1, 5, 11), bool] */;
    %1396 = cast(%var_11954, dtype="bool") /* ty=Tensor[(14, 5, 11), bool] */;
    %1397 = power(%1392, %1393) /* ty=Tensor[(14, 5, 11), float64] */;
    %1398 = %1394.1;
    %1399 = not_equal(%1395, %1396) /* ty=Tensor[(14, 5, 11), bool] */;
    (%1397, %1398, %1399)
  };
  %1400(%var_11978, %var_11979) /* ty=(Tensor[(14, 5, 11), float64], Tensor[(2, 5, 16), float32], Tensor[(14, 5, 11), bool]) */
}

def @func_10200(%var_10198: Tensor[(1, 16), bool]) -> (Tensor[(7, 10, 13), float64], Tensor[(910), float32], Tensor[(1, 4, 4), bool], bool, Tensor[(1, 16), bool]) {
  @func_10197(%var_10198) /* ty=(Tensor[(7, 10, 13), float64], Tensor[(910), float32], Tensor[(1, 4, 4), bool], bool, Tensor[(1, 16), bool]) */
}

def @func_8838() -> (Tensor[(7, 10, 13), float32], bool) {
  %1401 = @func_4754() /* ty=(bool, Tensor[(7, 10, 13), float32]) */;
  %1402 = %1401.1;
  %1403 = @func_3230() /* ty=bool */;
  (%1402, %1403)
}

def @func_6065() -> (bool,) {
  @func_6063() /* ty=(bool,) */
}

/* For debugging purposes the metadata section has been omitted.
 * If you would like to see the full metadata section you can set the 
 * option to `True` when invoking `astext`. 
 */The type inference pass was unable to infer a type for this expression.
This usually occurs when an operator call is under constrained in some way, check other reported errors for hints of what may of happened.

===================================
note: run with `TVM_BACKTRACE=1` environment variable to display a backtrace.

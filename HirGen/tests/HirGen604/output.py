import tvm
from tvm import relay
from tvm.ir.transform import Sequential
from tvm.contrib import graph_runtime
import numpy as np
mod = tvm.IRModule()
mutated_mod = tvm.IRModule()
var_297 = relay.var("var_297", dtype = "float64", shape = (8, 11, 7))#candidate|297|(8, 11, 7)|var|float64
uop_298 = relay.rsqrt(var_297.astype('float64')) # shape=(8, 11, 7)
output = relay.Tuple([uop_298,])
output2 = relay.Tuple([uop_298,])
func_300 = relay.Function([var_297,], output)
mod['func_300'] = func_300
mod = relay.transform.InferType()(mod)
mutated_mod['func_300'] = func_300
mutated_mod = relay.transform.InferType()(mutated_mod)
var_301 = relay.var("var_301", dtype = "float64", shape = (8, 11, 7))#candidate|301|(8, 11, 7)|var|float64
func_300_call = mutated_mod.get_global_var('func_300')
call_302 = func_300_call(var_301)
output = call_302
func_303 = relay.Function([var_301], output)
mutated_mod['func_303'] = func_303
mutated_mod = relay.transform.InferType()(mutated_mod)
var_321 = relay.var("var_321", dtype = "float64", shape = (3, 13, 8))#candidate|321|(3, 13, 8)|var|float64
uop_322 = relay.sinh(var_321.astype('float64')) # shape=(3, 13, 8)
output = uop_322
output2 = uop_322
func_324 = relay.Function([var_321,], output)
mod['func_324'] = func_324
mod = relay.transform.InferType()(mod)
var_325 = relay.var("var_325", dtype = "float64", shape = (3, 13, 8))#candidate|325|(3, 13, 8)|var|float64
output = func_324(var_325)
func_326 = relay.Function([var_325], output)
mutated_mod['func_326'] = func_326
mutated_mod = relay.transform.InferType()(mutated_mod)
const_573 = relay.const([[[1.348350,-5.849794,7.794067,-6.681078,-5.591861]],[[1.856419,-0.358796,-4.278935,-0.119198,2.504853]],[[-1.707953,3.100715,3.528803,-7.174764,-1.965289]],[[7.509039,-9.719132,9.356994,1.354353,-8.644480]],[[-2.152450,-2.615771,-0.291364,-4.751423,-1.170684]],[[1.428577,6.462106,8.392074,6.048777,3.891211]],[[7.919237,0.032758,8.000840,6.992504,3.346909]],[[-9.185269,5.028637,-3.159965,2.372032,-5.966546]],[[-8.548547,-7.478167,-9.347817,-6.648452,-2.615143]]], dtype = "float32")#candidate|573|(9, 1, 5)|const|float32
uop_574 = relay.sin(const_573.astype('float32')) # shape=(9, 1, 5)
func_300_call = mod.get_global_var('func_300')
func_303_call = mutated_mod.get_global_var('func_303')
var_588 = relay.var("var_588", dtype = "float64", shape = (1, 616))#candidate|588|(1, 616)|var|float64
call_587 = relay.TupleGetItem(func_300_call(relay.reshape(var_588.astype('float64'), [8, 11, 7])), 0)
call_589 = relay.TupleGetItem(func_303_call(relay.reshape(var_588.astype('float64'), [8, 11, 7])), 0)
output = relay.Tuple([uop_574,call_587,var_588,])
output2 = relay.Tuple([uop_574,call_589,var_588,])
func_590 = relay.Function([var_588,], output)
mod['func_590'] = func_590
mod = relay.transform.InferType()(mod)
var_591 = relay.var("var_591", dtype = "float64", shape = (1, 616))#candidate|591|(1, 616)|var|float64
output = func_590(var_591)
func_592 = relay.Function([var_591], output)
mutated_mod['func_592'] = func_592
mutated_mod = relay.transform.InferType()(mutated_mod)
var_991 = relay.var("var_991", dtype = "float64", shape = (12, 10, 11))#candidate|991|(12, 10, 11)|var|float64
uop_992 = relay.erf(var_991.astype('float64')) # shape=(12, 10, 11)
func_300_call = mod.get_global_var('func_300')
func_303_call = mutated_mod.get_global_var('func_303')
const_996 = relay.const([0.755148,-9.389858,-3.373314,0.346395,-8.149857,4.419621,7.156712,5.471446,5.482602,-5.505650,-4.641032,2.349522,9.657212,9.174458,7.732448,2.370224,-8.607950,0.752663,8.829889,3.900404,8.950700,7.910571,-8.578771,5.230588,9.286252,0.864385,7.937377,4.104400,-8.334735,7.448722,0.366620,5.473974,-0.155631,-9.232559,8.112233,4.580725,-5.454049,-5.988723,-8.417205,-8.656836,2.728006,8.895083,-0.871602,-3.581531,6.592354,3.118754,-4.661309,-2.255089,5.095418,-9.509653,-7.667742,6.067398,4.568208,-7.967736,-8.904295,2.581028,-7.889011,-0.028427,7.136246,-1.588187,-8.106752,7.683963,-0.324655,-9.652739,4.103604,-6.401738,-3.006576,-7.085509,8.919263,1.297052,-5.089489,-7.835380,-0.368836,5.179010,5.010898,-8.412097,2.062257,-9.017711,-9.941016,4.673051,8.924524,2.538205,-5.119245,1.451963,-2.923418,5.181397,3.035561,-7.634128,-1.608755,8.392725,5.984277,5.322034,-1.108629,-5.325192,-0.713954,-7.218091,9.073300,-2.208741,8.444988,-9.872794,-1.359236,-8.070112,9.126679,6.545462,8.901281,8.557597,2.563311,4.908369,-5.245775,-8.181714,-4.817192,-1.253179,-0.841074,2.880108,5.226519,-3.911114,6.166185,1.375217,7.594209,-7.661871,-4.561436,4.650861,-6.187182,8.612369,-3.025473,-9.051072,-6.258599,-6.664780,8.406434,-1.059941,8.863661,-5.821518,-7.709492,5.121581,5.600950,-8.153928,9.941934,4.850486,-9.094721,-0.870126,-5.286701,8.772913,-2.647369,6.091648,2.196558,-6.943772,-9.533014,2.782475,-3.608703,-0.866315,-4.417665,1.446053,-2.580250,-8.075791,8.384010,1.777599,2.604830,-3.269843,5.222514,6.908088,-4.431045,3.135720,-5.388920,0.374498,-0.359986,-3.194093,-7.540371,-6.794175,-6.981341,9.487718,-8.115628,9.935304,-9.356510,7.299200,-5.246502,-9.914056,-9.402562,4.085302,7.766390,3.249114,2.626174,-2.797474,-8.099502,-7.385027,5.803336,-6.249618,7.417608,4.958538,-9.785365,8.970790,8.654749,7.885012,6.703142,0.239495,7.684049,-6.993732,-2.076344,-4.224177,-7.391359,-6.062979,-0.887852,8.673187,-0.285615,7.825696,4.379402,9.501433,6.616146,-4.642986,-1.132007,6.970425,-8.884867,-5.912240,-8.820684,3.607872,1.844464,4.648411,3.419053,2.069609,4.446821,-5.906124,4.969438,-6.572442,-9.532844,-2.361384,-7.841837,-7.164382,3.415144,1.665765,0.146163,-9.447503,-7.818409,-6.543420,-9.773886,-9.510703,8.166861,-1.435374,-7.965593,7.877407,1.029731,1.855547,4.782881,8.576489,-7.355651,-5.080644,6.635967,9.728698,-2.106256,9.001678,7.925022,3.644509,-2.592559,-8.240610,-2.581461,1.465192,1.189875,7.038418,-7.868908,7.734356,8.477720,-6.937196,5.183494,9.017911,-9.998631,-5.886297,-2.455258,-9.136824,-1.072642,6.051619,-6.832919,-7.420565,-2.013245,-1.437460,-3.471978,2.696232,9.058977,8.184006,2.536058,9.410600,1.043556,-4.180012,4.350931,1.205693,7.629833,-0.738269,2.317064,8.529414,-7.595960,3.412827,5.605027,-4.829212,-7.519773,4.529754,-7.240711,7.380797,7.134616,6.890933,-0.465771,-4.188383,-6.302734,4.667570,8.223161,5.281562,-3.562974,1.183234,0.102903,0.751569,5.831977,-0.907428,9.967781,0.336415,8.406956,2.355967,3.111405,6.228294,-2.511662,-0.832768,4.397522,2.401799,-9.803122,8.443232,-0.840261,7.210904,-1.572538,-8.693780,-4.510702,-9.802577,-6.468770,8.313051,9.890460,4.187123,-5.027959,3.164310,9.772687,3.966474,2.725141,-4.806111,1.999287,1.617363,1.160819,0.405195,-9.000494,1.285426,2.566101,-4.233654,9.600626,-3.862761,8.673652,8.720689,-4.968188,-2.930650,4.069440,-2.543781,7.151799,-1.564062,9.199033,-5.845718,8.805545,-5.251064,-3.732804,5.406933,1.721584,6.259400,-1.916956,9.939705,-6.562139,-0.047771,-5.522120,-4.787267,4.058810,-4.024499,2.995740,-5.194076,-6.240644,5.771880,4.025849,-4.463832,7.043037,-4.527827,-5.294179,-5.512104,9.311493,0.622994,9.033823,9.781638,-1.252493,8.877373,-8.368852,1.303568,9.477026,-1.932040,6.047202,6.339139,-3.558125,-2.936122,3.107754,4.680868,-2.148477,6.087838,5.751020,-5.925610,-6.742859,0.894541,4.043708,-6.901464,1.399540,6.836482,1.174952,1.888802,-4.044795,6.181070,7.789706,4.274833,2.494674,2.588640,7.011397,-1.586536,-4.085670,4.118141,-9.130670,-7.889320,-8.748845,8.151972,-6.630890,8.977987,-6.902168,-1.713046,-5.213887,5.631507,-2.058711,-3.329857,-8.475411,-4.921582,-1.737073,-3.849459,7.061399,-9.201124,2.464891,0.681101,4.385492,-4.743053,5.667927,0.708049,-3.036176,2.013392,4.129799,7.617527,0.105222,-9.760789,0.817017,-8.858637,7.217787,-5.055534,-1.151882,-1.812585,-6.936711,-8.705427,-0.770338,3.312650,-1.872918,5.992128,-3.840221,-4.242129,-8.791439,3.684387,9.323315,-8.212769,3.754007,5.514749,7.902853,3.384221,0.124882,2.926109,3.643664,-4.143150,-6.118634,1.154771,-7.323024,-2.021771,4.447719,-7.913344,8.819684,3.882311,5.243585,5.147080,4.787962,6.773072,-6.677989,-4.792906,4.592862,5.521232,-8.667555,5.458282,-5.626846,-6.981100,5.737905,7.728599,0.216161,6.387278,3.626104,9.076486,4.867409,9.617841,-7.095351,6.084386,4.486673,2.186603,-2.465980,-3.259300,-9.322171,-3.990741,-6.886710,-6.087944,-8.350492,-9.385943,-8.497248,-5.655267,-0.737603,8.162402,9.417842,9.374712,-2.068690,8.015473,1.507214,5.683786,-1.015799,4.087158,3.416890,-9.814771,-8.143351,-2.164964,2.997602,-7.655553,-2.470510,-8.109472,1.328447,-9.999593,-1.139748,-2.421973,-6.120007,1.188899,9.000842,9.737491,-4.126554,-6.974656,-9.410741,-5.474922,-5.134509,-2.074771,-9.726225,-8.476110,-4.828140,6.954470,-7.824764,-9.865641,-7.105217,1.062407,-7.496353,-3.816481,9.389355,6.824996,3.300588,6.045055,8.821079,7.771327,-5.122957,4.833726,-5.485717,1.483221,-8.162024,3.672752,9.883146,-4.285595,7.507963,-3.118121,9.652400,7.403785,0.082770,-5.209675,-9.260303,4.430100,-3.050525,9.207386,8.145837,7.473336,-8.594444,-6.736844,-0.113023,7.570066,-3.872522,-5.765314,-0.622996,-6.460371,-1.108376,-5.671806,-8.458193,2.490050,-8.854524,-9.366102,9.117023,9.668967,-3.659993,5.578377,-7.286883,0.659538,-5.940268,-3.526731,5.294213,2.501161,-8.722392,-8.888775,8.130557,4.652130,-9.018241,9.096925,5.361118,5.190207], dtype = "float64")#candidate|996|(616,)|const|float64
call_995 = relay.TupleGetItem(func_300_call(relay.reshape(const_996.astype('float64'), [8, 11, 7])), 0)
call_997 = relay.TupleGetItem(func_303_call(relay.reshape(const_996.astype('float64'), [8, 11, 7])), 0)
output = relay.Tuple([uop_992,call_995,const_996,])
output2 = relay.Tuple([uop_992,call_997,const_996,])
func_1001 = relay.Function([var_991,], output)
mod['func_1001'] = func_1001
mod = relay.transform.InferType()(mod)
var_1002 = relay.var("var_1002", dtype = "float64", shape = (12, 10, 11))#candidate|1002|(12, 10, 11)|var|float64
output = func_1001(var_1002)
func_1003 = relay.Function([var_1002], output)
mutated_mod['func_1003'] = func_1003
mutated_mod = relay.transform.InferType()(mutated_mod)
var_1211 = relay.var("var_1211", dtype = "float64", shape = (1, 5, 3))#candidate|1211|(1, 5, 3)|var|float64
uop_1212 = relay.erf(var_1211.astype('float64')) # shape=(1, 5, 3)
func_1001_call = mod.get_global_var('func_1001')
func_1003_call = mutated_mod.get_global_var('func_1003')
const_1220 = relay.const([[-0.001828,-2.453981,-1.620590,-5.870064,-4.681178,7.517187,7.804231,7.617412,-6.692344,-1.268752,-6.449574,8.276757,-0.159290,-0.139508,-1.577349,-3.952205,-4.039143,-9.676382,6.468553,9.374120,2.870044,6.604603,-7.918573,-1.882449,-3.989486,-1.443855,0.864329,9.845031,-3.586801,7.045781,1.755795,-0.727879,-1.044044,2.900515,2.530236,1.577162,1.649018,-3.052373,8.534545,0.009058,5.368078,-0.631305,3.011835,6.016241,-7.613324,-5.195203,-9.810889,5.896904,4.100164,-9.679911,-6.549427,2.707133,1.432927,3.288787,-0.513539,-0.717418,-7.442864,6.202097,6.668049,-4.648220,0.384125,5.422332,2.190321,-1.572613,1.977907,5.303819,-5.703233,-4.723725,-4.991642,4.300518,-7.927477,7.118954,-0.337940,-8.303123,3.497158,1.457962,2.555875,-5.274470,-5.035742,0.674311,1.349536,9.409148,-5.708708,9.031659,3.505039,2.576753,6.274405,-1.223107,6.257781,1.746054,6.443522,8.608470,8.024286,4.996491,-3.135416,-9.519327,-4.345440,-0.525713,0.161035,4.194681,-7.770749,-0.471713,0.387104,9.750513,9.981789,1.078554,-2.397459,5.612748,-9.605935,5.828205],[8.279826,1.379740,8.803284,-8.352508,2.162989,7.488599,2.785901,4.893998,-6.535298,0.538470,3.908654,4.052320,-0.013509,-8.134249,2.063521,6.990513,1.785064,-0.160580,-8.307273,7.135549,8.740223,8.970028,-2.098634,3.850482,-4.805121,-0.369054,-8.409946,1.971129,-7.440987,5.139899,0.104364,-8.422496,9.323108,8.102115,-2.579064,-0.221082,2.051568,-2.174797,-2.149292,-1.052311,-3.494408,9.287529,-6.825626,0.429419,-3.186074,4.515732,-6.684413,-5.170566,-5.718529,9.591523,-3.234096,-8.485234,-3.719263,5.235136,1.073706,9.961168,-6.742613,-1.104446,5.746063,6.556519,-4.246957,4.170300,-5.670788,4.424301,4.255604,2.164097,-7.929911,0.744383,-8.285210,4.882451,-7.707620,-4.772896,5.918923,-6.081710,-8.968924,-0.621378,-8.192542,0.553888,8.727931,7.995857,-8.432946,-1.842029,4.065557,6.445175,-8.541381,2.473504,4.947264,9.470117,-9.614140,3.623663,5.084325,1.232222,1.014619,0.683977,7.656523,5.685737,8.861733,-5.307688,8.990873,7.948183,5.559834,-6.959379,-2.939627,3.248376,8.515774,0.650442,4.255230,-8.598630,-0.392785,0.453107],[6.947283,2.920568,2.108399,7.212200,2.270081,-7.044733,8.335832,6.816454,9.961587,-5.310246,8.219847,4.916058,-5.848300,1.773862,3.431949,4.473947,3.222456,-0.498003,-6.955578,3.548406,-2.956442,-5.783094,-0.458763,2.547368,9.964732,2.493147,8.339302,5.811248,-6.884451,-4.206978,8.235248,-2.676375,-1.698147,0.541265,-0.907450,-3.091867,8.832986,-7.183549,-1.286121,4.245978,9.882034,-5.749643,3.346304,0.268657,-5.369852,-8.945975,8.509438,-5.774476,7.699931,-5.159191,-8.242635,-3.089852,-9.999384,-4.513772,-1.408433,-1.135035,-2.083143,-4.845875,-0.473945,4.391710,-3.133352,-7.846881,8.415739,6.669825,9.908433,-8.786943,2.868537,5.226776,-4.753295,-0.479297,3.711939,-9.754979,-2.489199,0.859901,-3.117645,9.932788,-7.820729,-1.765719,9.745838,-2.216930,-2.341509,-3.594865,2.302479,0.476986,7.739441,-5.055381,-2.320125,-9.119717,-4.772382,4.820426,0.723762,0.692065,-7.998145,6.325659,3.812554,-4.418927,-6.086275,3.860423,-9.587484,1.211679,6.618475,-0.941980,2.396561,-9.064722,7.729125,-7.746018,-7.471017,-5.199929,-1.540407,-2.080971],[-2.802905,0.044061,-4.430885,-7.210925,9.227379,-4.263781,-5.975290,-0.034647,-6.733554,2.117739,-8.938620,-4.388702,5.926268,3.413285,-9.129236,4.193584,7.713616,1.963295,-9.015108,-2.302173,-8.721851,-4.711767,-1.147526,-7.407650,0.653238,-2.150867,3.014544,-8.994752,9.776403,-8.994986,-4.575035,-6.158027,-7.931268,8.036393,-4.174995,-2.938464,-3.446414,6.992333,7.477181,7.444912,7.504232,-5.590852,-1.514105,7.819515,5.777300,6.994156,0.516717,5.029346,-3.543675,-9.633093,-9.648733,9.601879,9.085818,8.788298,-2.181060,6.982729,-1.890408,-0.409962,0.485174,2.077841,-9.159797,-9.036249,-8.585782,3.779729,-1.026121,4.450673,1.331995,2.469332,5.901992,0.609009,-6.854352,1.584409,6.680263,2.395372,4.422878,7.648878,-6.694261,-3.615877,6.346531,3.992909,4.726939,-2.760348,0.614437,-2.587792,0.910530,-6.904094,-2.538609,-4.459524,2.194719,-7.097418,-1.248623,-9.027670,7.061395,-9.611747,7.787065,-3.225657,-9.740347,2.387981,7.432775,3.406935,1.968890,-5.740233,2.550045,9.372799,-3.919469,-4.434515,1.726483,9.372901,5.913567,8.475745],[9.625845,2.219666,9.779777,6.382323,-9.175560,6.143513,-6.614122,-0.354636,-1.449501,1.329588,0.382116,-2.179750,-0.544305,-4.786568,6.165125,-0.925951,2.272106,-6.049700,-8.424008,2.515712,-8.631037,6.756835,-3.740051,7.520204,9.419936,-0.293192,-7.159854,-2.228568,-2.305637,-4.079143,-4.316338,3.838662,-0.175914,-9.619658,0.715641,-8.948065,-6.920464,5.365217,0.995376,-0.299169,8.219988,1.517436,0.838047,-9.102409,-5.507088,6.188003,-0.650874,8.607583,-3.276115,3.401904,3.525471,-8.204697,9.147249,2.685686,-8.771758,-2.497353,-3.442297,8.237791,9.380970,0.146318,-8.171432,-6.468408,1.459677,8.240359,-0.844908,-8.868080,-9.146564,7.793134,-2.799615,-5.010491,-5.146729,-3.382236,4.443763,-7.396184,9.914965,-3.415483,-7.223545,-3.021882,-7.604937,-3.423290,6.561862,4.456525,3.789172,7.964185,5.201347,-7.168148,-4.643392,-3.896150,-0.638502,-1.282697,-3.178965,7.677167,-4.851908,6.448267,4.815086,8.087316,-0.752338,8.075739,2.511742,0.168244,-2.614595,9.747781,-9.581192,-6.946775,-4.664226,-9.695305,-5.309602,-9.079040,-4.245548,8.787721],[2.332313,-3.178066,4.099702,4.424206,-3.185281,8.274946,-9.693236,-8.971972,-1.328200,2.886395,6.624032,-1.723299,8.809863,-1.380651,-5.325465,8.399564,-4.731397,4.369531,6.755059,7.874638,6.939298,0.021947,6.709538,-9.245006,-6.717335,-4.594801,4.724325,3.552743,3.629829,-4.541256,-8.319284,5.140884,4.521581,-6.472966,0.292309,1.619176,0.004664,-7.511767,-8.269675,-5.924974,-4.776366,-4.177740,4.990256,-1.394734,-0.362804,-0.360829,3.693258,2.716785,-2.848860,5.928932,7.474983,-1.384869,7.901102,2.032042,7.304734,5.058501,1.947302,-1.751587,0.158489,9.068140,2.473542,-9.301122,-3.334998,-5.282892,-5.739031,-1.627902,-2.074742,-9.422818,-8.172158,0.587558,6.011877,1.633915,-1.808851,-4.647694,4.909467,4.341347,4.151955,8.515399,-5.318014,8.513570,0.614439,-1.370290,-2.185423,-5.649726,2.791189,4.045855,-3.937873,7.475441,-6.633973,-1.351688,2.607220,-0.515879,-9.789742,-7.586467,4.230054,2.687423,-3.538585,-0.337762,-9.596816,6.846859,-2.336895,-0.985982,8.416785,-4.791277,4.568207,4.762447,-2.880399,-6.249304,3.499222,2.902572],[-4.618405,-6.077742,3.496540,2.770084,8.499912,0.699635,5.372555,-4.503039,4.152804,-8.072628,0.999012,5.843500,-3.873346,-6.516185,2.549385,-8.740755,-4.467439,-0.009185,-5.466080,8.317967,-4.061288,0.758882,6.321462,-2.427528,-6.104732,1.301947,7.681728,-2.142120,-3.858465,0.192229,-2.981498,6.073349,-9.003331,-4.586040,-6.072581,-9.463405,-2.233459,-7.769345,4.813776,-1.665559,-9.505818,-4.265933,7.217134,2.798777,3.112349,7.996279,-9.462494,1.351053,-9.976999,9.740346,8.341832,6.884806,-1.647372,1.102825,-7.375646,1.152305,-0.722036,-7.445780,-6.095430,4.820140,2.134305,-5.888270,-7.205661,-2.005235,6.649997,1.458924,-8.764017,6.592944,-6.913693,-2.597964,-9.992828,2.848248,7.043174,-3.582214,1.630724,-4.282922,-1.656733,0.664261,-8.590709,7.953393,9.984355,-7.667126,1.502144,-9.553017,3.634429,1.079414,3.468086,-1.632079,-4.166374,-5.949730,-9.169253,-5.793212,7.332256,3.554846,-5.947456,-4.393287,7.847113,5.929579,-3.579448,4.754300,-4.382344,7.905247,6.638002,2.878804,3.647627,-6.704558,-0.189196,-7.345755,-8.337412,4.255426],[0.326786,-2.884444,-6.915465,0.420759,-7.974728,-3.690347,0.089643,-6.717495,4.291837,7.745185,2.275788,8.742953,-9.244754,-7.093485,0.016571,5.515814,9.305915,-1.457871,3.919217,-0.480123,-9.180321,0.973443,-9.126869,-2.662096,7.759641,-1.968127,3.063605,-3.153799,-7.365685,-2.248979,-6.854991,-9.733748,-7.886297,9.218493,-0.230451,0.152832,5.092430,2.106914,-4.465740,3.103760,1.675983,-0.060962,8.687840,-8.585261,8.837907,-3.515628,9.373654,7.405897,7.994074,5.209190,-7.585552,-8.654919,1.486525,-5.960604,3.845831,3.965323,7.087648,-8.767371,-0.152099,-7.095781,2.239618,8.209320,6.613194,-8.849336,-5.739198,9.319142,-7.627074,-6.560404,9.052481,2.816611,-5.946035,3.788898,6.541370,0.893228,-5.054681,2.765893,-3.331726,-4.650058,-1.910573,-6.652150,4.007842,1.777801,2.333312,6.097880,-6.072990,2.148113,-5.741217,1.496680,-0.917309,0.609853,-9.682747,3.588073,-7.336415,8.026296,-3.586137,1.441535,9.022053,-5.717984,-1.471721,8.837126,-8.341377,3.318708,5.407917,-1.388623,0.791351,-5.938443,5.934827,-3.885012,-0.916457,-6.353007],[9.338241,-3.803116,-3.789784,4.977999,-8.714998,-3.358562,-7.935918,1.206008,-6.380906,7.831919,-0.812975,8.513151,5.838361,7.524182,7.572563,1.989366,2.909678,9.716901,-7.544253,-9.372952,7.701684,9.164440,-2.318157,9.278815,9.325860,1.166843,1.778669,7.171866,-6.502313,-8.887788,-8.601131,9.394138,6.714550,7.194557,7.913768,-2.164226,-6.283110,-9.280119,7.429522,0.894767,4.456039,-5.395268,-5.725549,5.161539,-4.424029,-0.827572,3.549479,-4.778491,9.748240,-6.191184,0.743396,0.515182,8.967111,-6.875096,-3.998881,9.290377,-1.370214,-7.366621,4.973948,-2.146256,9.293074,-1.556303,-6.580799,2.814646,-5.293690,-8.928374,-0.926679,-3.308048,-2.158097,-0.956348,-3.310220,-8.626844,9.336395,5.293374,-9.563042,-0.027282,1.806512,3.532178,9.269343,5.637322,-2.330597,2.130209,0.045711,-9.022831,5.739171,-8.466504,-4.381889,-2.519875,3.310919,-8.657618,4.032637,3.163978,0.089231,-6.662589,3.480354,4.584656,-6.637861,0.520577,-4.134284,2.438360,-2.507731,1.482642,-7.167996,0.526014,-2.790107,3.067816,-1.901091,-6.428440,0.907605,6.358131],[-5.578745,7.744946,0.920123,-4.752078,-8.893288,3.645564,-8.541423,-2.461580,2.978617,-3.714839,2.464078,4.149032,3.527103,-9.384550,0.732255,2.879914,-2.670487,-9.662706,2.450590,9.445964,-6.539811,7.375758,2.299596,2.897177,4.663567,-4.653934,1.140932,-5.057084,8.077154,-7.859754,-8.034820,-3.948224,-3.085058,2.791095,-2.755885,5.181200,7.312479,6.879017,-2.428297,7.804947,-1.792046,3.299566,-2.711161,-7.841276,-6.793366,-9.221362,5.793287,3.834959,6.688880,4.488523,5.646438,-3.972038,4.878974,6.143175,-3.219298,8.850491,9.539961,-7.472114,0.965383,0.947787,9.010320,-9.932990,3.494326,-2.737607,-9.876464,-4.278310,8.372112,0.233545,-1.030760,-5.765916,0.152520,2.219818,-8.507958,-8.377746,5.050085,4.036005,1.840291,7.622561,3.521786,3.521589,5.152356,2.438301,-5.296124,-3.607374,-5.460042,4.459359,-4.948750,-9.721862,1.589800,-2.741477,-6.710730,5.232439,-1.438404,-5.755268,6.255975,8.500683,4.301119,3.262828,2.002566,-5.499687,-4.489049,-6.148124,0.474253,-1.067738,2.945761,5.353063,-8.787196,-1.158543,2.337681,9.580886],[-9.358318,1.545093,8.352637,-9.319610,-0.776321,-3.184582,-2.050540,-7.889989,8.923487,-8.153882,9.173791,2.912402,4.091743,-2.969873,-2.380131,2.435841,2.842300,1.575728,9.469059,6.194877,-6.139676,-4.441689,-7.197768,-9.622357,7.831829,0.620898,-0.329517,5.026211,-9.004985,-6.351558,8.842404,1.935953,0.647443,1.707175,-8.285684,-8.198430,9.322712,-3.954799,7.412593,8.734780,8.312439,-1.234916,0.549271,7.765250,7.456700,1.325338,2.435098,1.275896,0.328968,7.866708,-2.577142,-3.960209,8.096836,3.011994,-8.217296,3.320062,1.327755,2.276759,4.927110,-1.992677,1.735869,8.449481,7.845505,1.606534,-8.905156,-3.889460,-6.494200,-5.384286,4.946963,1.726866,-3.575096,-9.739798,-8.067571,0.418644,-7.085160,-6.772703,1.511175,1.181738,1.961055,3.286461,7.572621,-4.599929,-8.426625,9.315938,-2.064040,8.389539,-7.506171,2.286915,-6.053555,-2.566714,-4.262900,-5.042745,0.134379,-1.368726,-5.096433,-8.823272,-4.911037,3.697598,7.657776,-5.738674,2.793229,-4.955837,7.038067,-8.088654,-9.341099,3.344004,-6.242835,-0.948394,1.293246,-9.699789],[-7.236807,7.549976,1.929292,-1.435656,-1.309595,-4.873627,-6.748953,1.729196,-7.931899,3.632846,-0.662991,-8.353283,-9.966180,-7.652248,7.733052,3.875860,3.189419,-2.659463,-8.214267,2.617744,-4.845003,-4.344030,3.862586,-9.453168,-4.722262,-5.868101,-5.129200,4.824838,-3.797967,-0.446780,-9.969413,4.614548,0.280824,-6.290512,-0.633867,-5.620675,3.701883,-8.190462,-9.476663,3.122679,-9.199162,9.580826,-3.583528,-0.513284,4.501334,-6.966353,-5.968539,2.639632,-2.304199,2.041598,-8.688787,7.162989,3.547338,-6.938895,-7.439485,-4.526064,2.777463,-5.471125,-7.229522,-5.857695,3.313400,5.226352,2.214975,2.908215,-4.759599,-0.704471,-4.908592,-6.237375,1.833733,4.156794,-7.781884,8.476104,-4.891396,8.033524,-2.180583,-9.974780,5.019472,5.739043,-0.638562,-2.368541,-7.570752,3.767452,-2.806856,-1.426996,-6.021077,3.572865,1.494809,7.411662,-2.617397,-8.715683,-4.137248,0.762043,-9.651486,-0.650921,1.905479,3.547913,-4.047141,0.788661,-7.306514,-0.521117,3.239353,-2.188678,-7.188214,-2.724418,-9.002592,3.158430,6.948619,-1.338265,-9.415871,1.068201]], dtype = "float64")#candidate|1220|(12, 110)|const|float64
call_1219 = relay.TupleGetItem(func_1001_call(relay.reshape(const_1220.astype('float64'), [12, 10, 11])), 2)
call_1221 = relay.TupleGetItem(func_1003_call(relay.reshape(const_1220.astype('float64'), [12, 10, 11])), 2)
uop_1223 = relay.sigmoid(const_1220.astype('float64')) # shape=(12, 110)
bop_1231 = relay.bitwise_and(uop_1223.astype('int64'), relay.reshape(const_1220.astype('int64'), relay.shape_of(uop_1223))) # shape=(12, 110)
output = relay.Tuple([uop_1212,call_1219,bop_1231,])
output2 = relay.Tuple([uop_1212,call_1221,bop_1231,])
func_1236 = relay.Function([var_1211,], output)
mod['func_1236'] = func_1236
mod = relay.transform.InferType()(mod)
mutated_mod['func_1236'] = func_1236
mutated_mod = relay.transform.InferType()(mutated_mod)
var_1237 = relay.var("var_1237", dtype = "float64", shape = (1, 5, 3))#candidate|1237|(1, 5, 3)|var|float64
func_1236_call = mutated_mod.get_global_var('func_1236')
call_1238 = func_1236_call(var_1237)
output = call_1238
func_1239 = relay.Function([var_1237], output)
mutated_mod['func_1239'] = func_1239
mutated_mod = relay.transform.InferType()(mutated_mod)
var_1511 = relay.var("var_1511", dtype = "float32", shape = (4, 9, 2))#candidate|1511|(4, 9, 2)|var|float32
var_1512 = relay.var("var_1512", dtype = "float32", shape = (4, 9, 2))#candidate|1512|(4, 9, 2)|var|float32
bop_1513 = relay.floor_mod(var_1511.astype('float32'), relay.reshape(var_1512.astype('float32'), relay.shape_of(var_1511))) # shape=(4, 9, 2)
func_1236_call = mod.get_global_var('func_1236')
func_1239_call = mutated_mod.get_global_var('func_1239')
const_1520 = relay.const([4.884634,-5.118549,-5.020736,-4.899260,1.400483,9.937946,-4.679758,-9.825602,4.239665,-0.916927,-5.221931,0.556169,-6.526489,-5.708840,4.515175], dtype = "float64")#candidate|1520|(15,)|const|float64
call_1519 = relay.TupleGetItem(func_1236_call(relay.reshape(const_1520.astype('float64'), [1, 5, 3])), 0)
call_1521 = relay.TupleGetItem(func_1239_call(relay.reshape(const_1520.astype('float64'), [1, 5, 3])), 0)
bop_1522 = relay.mod(var_1512.astype('float32'), relay.reshape(bop_1513.astype('float32'), relay.shape_of(var_1512))) # shape=(4, 9, 2)
func_590_call = mod.get_global_var('func_590')
func_592_call = mutated_mod.get_global_var('func_592')
var_1529 = relay.var("var_1529", dtype = "float64", shape = (616,))#candidate|1529|(616,)|var|float64
call_1528 = relay.TupleGetItem(func_590_call(relay.reshape(var_1529.astype('float64'), [1, 616])), 2)
call_1530 = relay.TupleGetItem(func_592_call(relay.reshape(var_1529.astype('float64'), [1, 616])), 2)
func_1001_call = mod.get_global_var('func_1001')
func_1003_call = mutated_mod.get_global_var('func_1003')
const_1545 = relay.const([-4.334496,5.965792,2.664928,8.789966,-9.487756,6.577627,8.843331,-2.708611,-1.432629,-4.081194,-2.813950,-2.703983,2.282778,1.089212,6.091945,-1.914647,-7.525474,7.813813,-7.816106,4.502367,6.664840,3.178807,-0.772830,3.142733,-5.379963,4.315572,1.334583,5.322878,9.458042,2.878455,-9.644217,-3.752537,3.070249,-6.832427,1.372049,-9.858067,6.758256,2.890908,9.523289,-9.184081,2.180212,-8.303394,9.362499,2.385957,2.134890,8.345653,-4.849584,-1.358999,3.671803,-1.983575,-1.587813,4.078423,-2.904819,2.754088,-3.716122,-5.622261,-1.084131,-6.744661,-6.876219,-8.324408,-8.971917,-0.287590,-4.026496,-7.682420,0.266535,-6.385296,8.946960,5.027470,-5.680682,-0.749507,-7.503422,-4.763583,2.162271,-4.300131,-1.180468,4.673790,6.336206,-8.862649,-2.715293,6.544725,3.432748,-4.232213,-8.677936,-7.165975,-5.147401,6.182872,2.050183,1.712166,-3.770129,1.659021,8.060928,9.746015,-7.130830,-8.279483,-0.740993,-2.225464,7.682335,-5.685026,0.572664,-6.054823,4.126165,-0.858447,-6.958853,-2.476034,-4.780050,9.525613,-5.936264,-4.707804,-6.013102,-8.737585,-8.621990,-7.408368,6.418443,9.737688,-0.096898,-9.161974,5.241537,-4.850619,6.360407,-6.758970,-5.991312,9.558503,-6.762189,4.466141,-4.236402,4.623642,7.812189,-1.042132,8.084029,9.735491,6.449842,8.092495,-8.368902,-1.885213,-8.030978,2.064543,8.831350,-2.675502,-3.724981,-0.829965,0.007996,-2.136741,-6.571019,2.632946,-0.302879,4.485870,-3.566132,5.252842,-2.139729,-2.087777,-5.802834,-5.038816,-9.773520,-4.584134,-6.653251,0.866758,-4.910414,-7.818217,-0.318020,-5.244278,-4.703429,6.081338,3.845646,-1.104853,-8.734750,-2.120360,-0.092713,-5.624222,3.792052,-6.747566,-9.163969,9.217979,0.938934,6.896857,5.612602,-0.682506,7.196094,0.812948,-1.838316,-7.378053,-1.003043,-7.446282,9.647114,-0.575994,1.714147,1.581629,-5.808498,-4.302322,-7.374027,-1.717934,-6.277942,-8.623428,-1.624432,-5.150134,8.512558,8.415933,4.617003,-0.274387,9.786660,-7.365190,5.090726,-2.897656,-6.521452,2.504858,-3.117171,9.766020,1.531161,-6.141861,5.257226,-4.355914,1.923113,-8.019121,5.870442,-6.261184,1.954489,3.286301,-2.687395,1.674809,8.542603,5.359647,-6.173711,-5.521714,-2.889592,7.169883,7.103604,-9.612120,7.019165,3.244653,-6.514897,5.880386,-9.006443,-0.784607,-8.639268,-5.255121,8.990620,8.685883,-9.424005,7.711794,-3.926018,-5.139148,-8.218520,9.682989,0.567962,2.091427,-7.020644,-1.867721,4.014983,3.255899,-6.303932,6.417659,3.927107,4.542032,-6.919240,1.883702,6.143622,-1.825395,-3.851622,1.054620,7.837175,1.276860,-8.094389,-1.411644,9.784416,8.795306,1.687520,4.524352,-5.504659,-3.256637,3.715859,7.133174,8.617333,-2.812380,0.940865,-6.886459,-8.996775,-8.083034,3.914085,7.647071,-0.586668,-4.383700,6.019758,1.888435,-2.509021,0.504646,6.590609,-7.933578,-4.599874,-6.696783,-4.582813,-1.154484,4.589891,4.169307,-1.576566,8.079761,-5.422275,-8.209311,2.513924,3.279192,-7.984020,7.135101,3.773069,-1.256904,-1.258269,-3.181072,9.013040,-0.158387,5.665936,5.013138,-7.470175,5.646492,-7.901745,-0.870351,6.974083,8.960305,-6.049281,3.384620,-3.251066,-0.696058,-0.136502,-6.171723,4.474820,-3.064105,-8.489537,-1.620326,-5.510936,1.147051,-3.910128,-5.301935,3.251082,7.775788,-8.629659,-1.789393,-7.611807,-9.227285,3.314195,4.533911,8.411627,3.182897,9.621858,-1.441129,7.323519,3.507672,0.802770,2.407427,8.027436,9.410057,8.965148,3.820562,-3.151454,4.625549,-0.379079,-3.504763,-5.328115,4.913360,-8.001702,-7.945723,-4.814848,4.678066,7.986896,-0.664825,0.207538,1.555971,4.627507,-6.200250,-3.943330,4.486917,-3.156484,-0.446252,-0.456898,2.508286,9.154484,-2.138255,6.204889,4.058779,3.155086,2.129326,4.797901,3.591709,5.587613,-4.476315,8.666478,-2.442433,-2.315276,4.908854,8.095705,7.271911,-8.463623,-5.443490,9.209393,-4.843767,8.480982,0.032227,-1.250668,-8.038981,-8.966715,4.402477,-9.210173,-7.745578,-5.413984,7.539270,-3.460191,-0.830706,9.281252,-2.290573,4.039619,1.648542,-9.635828,7.413264,3.350439,6.769320,4.704886,-2.080576,-1.999594,-8.575464,-1.519761,-0.466135,-0.124335,8.244339,9.256701,-7.721487,-0.500351,-3.352025,-1.538705,-5.439460,6.282651,9.540125,-3.140918,-8.890179,-2.790066,-5.831582,8.762000,5.111261,2.796594,6.930350,-1.629588,4.192003,4.869350,-5.312623,-3.265151,5.789552,-7.081601,-5.090239,-3.038671,2.633324,9.543452,4.589848,3.200699,-6.173335,4.516917,8.357472,8.833441,5.255618,-2.936328,-1.079924,-2.085174,-2.760619,-7.607405,8.083920,-4.172942,-1.601485,-7.515169,-6.459125,-0.754304,5.275071,-2.822639,-6.932923,9.215144,-4.968851,6.544686,-8.374396,-2.225320,-2.559988,4.319378,-7.842662,-8.750770,4.714712,-3.298463,-0.839483,-3.422171,4.942624,4.534072,-7.774119,9.743340,-5.818367,5.733452,-7.588819,-0.051581,7.886294,-9.850744,8.741876,-5.973031,-9.327627,-4.275722,6.229669,-3.493820,3.987821,-4.873168,-5.086277,-0.117668,-7.721113,-0.799913,0.895078,0.859917,-7.578194,-5.954142,3.510239,7.806502,-2.555115,-1.926961,-6.829143,-2.841156,-2.844136,-1.113954,-0.347470,-5.734196,-5.146335,2.929455,1.477693,-7.544515,-3.244160,6.896710,6.539413,4.329953,-6.492994,-5.875569,-2.040968,-8.860322,1.603229,-6.636837,6.667075,8.194755,2.259345,5.575722,3.281447,-2.753904,2.683236,5.786202,-0.138310,-6.637804,4.121113,-7.077830,8.818227,-4.562247,9.841310,-1.815560,2.438554,-7.589047,-3.864647,1.119222,-7.726598,9.344598,2.272062,-9.846988,-4.682110,-6.854827,5.487682,8.394432,0.071695,-7.622649,-9.314228,3.662331,-1.873687,-1.492779,-2.008324,-6.603526,-5.163478,-8.434405,1.044070,3.399012,2.471780,7.352499,-7.233785,8.479108,-1.855794,-4.039357,-1.309501,2.023563,-8.056984,9.745248,6.429601,5.722085,0.497032,-5.696129,-2.961179,-1.384558,7.287784,8.771235,2.122167,-2.125499,-6.311365,-6.863105,-7.703613,7.589558,-7.639387,3.322621,-0.844981,0.064662,-1.049095,-6.722786,4.568750,-2.553265,-2.235146,3.395071,-2.918216,-8.444698,-5.576438,8.518173,-4.652658,2.429974,1.977172,-6.524524,3.589010,-9.189674,5.499947,5.792317,9.581573,-0.095687,5.236331,6.627557,5.256883,-5.987967,6.355046,-6.101396,-2.233427,-7.876520,8.315866,3.563254,-2.949147,-8.170337,0.158970,-0.697291,-4.009238,-3.882871,-3.032692,3.151275,1.175418,-8.902232,-6.472894,-1.564223,-1.831596,-4.611950,-3.687386,4.149509,1.049997,-8.872464,6.139802,-1.026126,5.985940,8.759204,-4.812500,9.145813,-6.034158,-0.512556,8.552967,9.082298,7.885843,7.011932,8.335591,-0.751571,-1.787031,1.365667,-1.509749,7.752238,2.346494,5.053037,-6.654366,4.497215,-9.836203,9.373872,1.414323,-5.196517,-5.611196,-6.360143,-7.957215,7.841764,5.557544,-8.333132,-3.377145,-1.444789,-6.425390,1.390257,-8.190525,6.813604,2.011531,-4.814996,5.159536,8.218344,-2.664460,4.205640,0.573096,-8.469170,-2.937687,-1.218970,-1.993275,-0.632241,-9.652501,3.592801,-1.305389,-7.994821,9.614773,-6.043244,4.683052,2.993937,5.894828,-8.038015,3.588241,-5.539435,6.788865,-2.512200,0.480590,-2.002685,-9.437577,-4.615114,-2.498419,-5.724815,-0.965560,-5.685160,9.169426,4.147213,-1.416289,6.856132,-6.059041,7.489466,-9.620805,-4.048558,-3.767917,5.770514,-5.888739,-5.355805,-4.927612,3.189655,9.053230,-7.320667,2.614330,-6.281045,8.300172,8.632339,7.928327,9.203344,-3.790560,8.529114,-2.672181,2.410167,-9.845628,4.614613,8.693138,7.114365,-2.207230,0.133862,-3.422697,-3.194164,1.775004,9.586954,-0.029872,-5.074235,-2.323734,-8.080627,-8.291520,-0.523644,1.974746,-7.432546,-6.809119,0.531318,5.493127,-6.065270,-7.742083,-3.627853,-3.984529,-4.108218,-5.693823,1.880928,-7.910892,-8.230400,8.321248,-4.246923,-4.019019,4.488895,-5.442232,-7.897283,5.697433,8.224361,0.304903,4.226941,-5.196078,-1.500743,-9.881432,7.238520,7.622784,-6.815157,-4.894041,7.617473,2.464810,3.860819,-0.205851,8.967619,-3.438898,6.096301,-0.788197,7.697086,4.846636,-4.787122,2.870595,-3.931141,0.992405,-8.203096,6.966373,-8.993729,-9.954024,8.985523,6.129478,3.132178,8.691407,3.770179,7.977621,-7.759949,2.468004,8.108529,9.274411,5.790251,-8.941169,-7.216380,-0.408228,-0.874637,5.199396,0.197280,-9.780065,-6.102979,2.328094,-4.353411,5.263911,0.055528,5.352070,9.614218,0.216422,9.577047,-0.400769,7.406843,-1.072898,-4.363844,7.752769,0.261896,-1.409774,-2.788701,1.896135,-3.788532,7.066391,3.159181,-1.508475,0.020368,-2.359847,7.037424,7.724151,0.166595,-6.704749,1.503741,3.540615,-4.547356,-0.937611,1.745061,0.118747,-5.938959,-3.884169,8.461271,4.310293,-5.151249,4.949709,-6.316499,-9.643721,-0.448847,9.839556,2.669955,-6.964514,-1.211912,-4.653850,4.768824,-2.879126,-7.583126,9.201784,4.385719,7.357828,-3.963158,-6.311690,6.713125,-6.314137,6.056799,1.904403,-0.860607,-8.012166,-4.529518,4.354770,-6.468857,-9.153675,-9.679468,-5.108879,-4.676973,4.749086,-3.367629,5.071424,-9.644150,-1.724530,-3.108804,-7.741358,9.306062,7.029241,9.541019,7.176195,-9.658150,9.392307,-4.380237,2.634863,9.170129,8.485261,-4.636442,2.408893,4.162172,-3.572322,8.608678,-0.645554,-3.233490,-3.144445,-6.026805,8.989046,1.545064,5.673369,6.630387,-7.321226,3.444546,-6.987178,7.818506,4.084985,9.579312,-7.881253,-4.775044,-4.625053,-6.536684,0.931155,-0.227590,-9.915260,1.572640,4.616775,-7.370950,0.075189,-0.006756,0.162116,9.816173,-8.327799,-2.256783,5.788163,6.886908,9.046311,-8.737661,6.756756,-3.814845,5.383956,7.175929,-8.681325,-9.538462,-1.090410,4.259104,-2.448911,-5.974541,-3.986525,9.570445,2.820830,4.183133,1.893558,1.657667,-3.399486,-2.436069,9.345224,0.852951,1.891203,1.304668,-7.100274,3.635764,1.065081,4.319641,-5.113039,0.731272,2.187002,1.974902,5.705795,8.888446,-2.553637,4.681196,-7.870809,3.607371,-1.938150,6.751566,9.023188,-4.837567,-6.235402,-4.963471,-3.131420,-1.327383,-1.284028,-5.290776,8.785714,-0.306381,6.614936,8.122495,-9.491493,0.638235,-8.544455,1.315521,6.795814,-8.199757,2.196149,0.845931,7.931889,6.725101,8.717472,8.599898,-2.568240,-3.658309,8.851791,9.666561,-5.222218,-9.756888,4.080728,-8.521591,4.779254,-8.522361,-2.379359,5.478687,4.777873,3.499786,-1.766345,6.097796,-2.818265,5.520432,-8.779755,0.862394,0.399714,0.144938,2.633703,-0.688362,-9.195300,4.357132,-9.826254,-3.365855,-5.661412,-7.440896,-5.833427,8.119919,2.091391,-5.686558,5.503175,-0.898720,-4.669747,3.071356,4.961060,-9.498116,-3.075321,-2.795863,-0.749197,-8.216482,5.634447,-4.524639,2.424791,-1.158800,-4.470564,-7.630245,3.568112,-5.690656,-7.014744,7.907622,3.883604,7.199525,-2.869130,-7.065395,8.389686,6.248992,1.888110,-7.914184,7.907115,4.031955,-7.588881,1.406870,-5.762896,8.164589,4.043789,0.060912,-7.673031,-9.821567,-8.941989,-5.582078,7.955829,-8.659257,3.532890,1.310766,-8.144343,-2.127844,-6.981580,-7.983239,5.482920,6.059250,-6.962597,-4.499251,-0.820169,0.300546,1.093312,-6.170290,3.434915,-1.518774,5.618866,1.166195,-3.777871,-4.738662,6.194940,-6.211227,-4.728824,2.025557,-5.095692,-2.965902,-7.708681,6.751938,4.372468,4.032700,6.552220,9.880956,8.375452,-2.649137,-2.574925,6.564596,1.527393,-5.727988,7.089391,-0.456702,4.059618,-8.809621,7.137425,-7.337157,5.271851,0.729562,7.930537,-5.285969,-1.716078,-1.068601,6.269637,-7.730800,3.148891,6.644769,4.864491,-0.628705,-6.379892,-5.608896,8.212127,-4.607803,-6.944996,3.005963,-7.122068,7.021325,-2.191233,7.720038,2.517041,-8.500378,-7.103105,2.000684,1.871920,1.320824,8.166501,8.645747,-2.188524,0.825465,-9.517073,-5.747723,-7.240803,0.773999,4.481022,5.633889,-4.739688,-1.790525,5.784025,-6.922312,7.299664,-3.469048,-0.108883,5.512010,0.814373,2.396331,8.682532,-0.342803,3.099014,-7.825725,-5.603987,9.672670,5.029043,2.522729,-4.249004,-9.654382,5.859465,-8.553296,-5.582899,-8.375040,-4.854232,0.518915,1.630020,-9.690514,0.579374,-4.658962,-7.579313,2.240865,8.073916,-3.553814,-0.113179,1.736064,7.346510,5.777213,-8.560038,6.097416,-3.613713,-2.763172,-1.204479,-8.373556,-5.808229,6.325481,7.724778,-6.581814,1.520282,-9.696030,0.754744,-7.387300,7.220212,5.672964,0.155293,-8.762554,8.472671,-2.389338,5.179552,-5.490808,3.987728,-2.846016,-9.747085,2.917721,6.529325,1.026322,1.254422,7.893965,-2.849396,-8.000211,7.757942,4.542918,-9.778666,-6.343375,-9.667265,2.312649,-8.686482,-0.116224,-7.122973,1.924488,8.659113,3.666239,-2.078208,2.858587,7.235239,-2.341748,2.030381,5.106379,6.993771,0.829756,-0.187775,5.009193,7.711889,8.898308,6.959013,9.321202,-6.654205,-7.023268,-6.098530,8.512958,1.539345,-3.193601,7.287052,-1.985486,-8.420206,-0.185992,-6.481050,7.983791,-1.355796,-7.085125,3.349381,-1.069453,-7.130096,-0.677177,4.970895,-9.182480,-5.203387,0.853132,-7.671363,-5.693599,1.970227,-8.902263,1.063144,0.288485,-4.537585,6.960562,-0.252600,6.881361,-9.044427,4.906313,5.546770,8.383953,-1.400269,0.869149,-3.525463,1.215697,9.516538,-3.737786,-9.860270,-9.032717,8.898193,-8.509912,7.904913,-5.363402,-1.780499,6.023788,8.377372,9.602360,9.937617], dtype = "float64")#candidate|1545|(1320,)|const|float64
call_1544 = relay.TupleGetItem(func_1001_call(relay.reshape(const_1545.astype('float64'), [12, 10, 11])), 2)
call_1546 = relay.TupleGetItem(func_1003_call(relay.reshape(const_1545.astype('float64'), [12, 10, 11])), 2)
output = relay.Tuple([call_1519,const_1520,bop_1522,call_1528,var_1529,call_1544,const_1545,])
output2 = relay.Tuple([call_1521,const_1520,bop_1522,call_1530,var_1529,call_1546,const_1545,])
func_1550 = relay.Function([var_1511,var_1512,var_1529,], output)
mod['func_1550'] = func_1550
mod = relay.transform.InferType()(mod)
mutated_mod['func_1550'] = func_1550
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1550_call = mutated_mod.get_global_var('func_1550')
var_1552 = relay.var("var_1552", dtype = "float32", shape = (4, 9, 2))#candidate|1552|(4, 9, 2)|var|float32
var_1553 = relay.var("var_1553", dtype = "float32", shape = (4, 9, 2))#candidate|1553|(4, 9, 2)|var|float32
var_1554 = relay.var("var_1554", dtype = "float64", shape = (616,))#candidate|1554|(616,)|var|float64
call_1551 = func_1550_call(var_1552,var_1553,var_1554,)
output = call_1551
func_1555 = relay.Function([var_1552,var_1553,var_1554,], output)
mutated_mod['func_1555'] = func_1555
mutated_mod = relay.transform.InferType()(mutated_mod)
const_1614 = relay.const([[[5,5,6,7,-1,-2,7,10],[8,-10,-3,-3,-10,1,-5,-1],[10,-10,7,8,4,9,-10,1],[-5,9,4,10,-2,-1,1,9],[7,-10,1,-6,-6,6,-4,-5],[6,4,5,-1,6,-6,-3,8],[6,-6,-4,10,5,-9,3,-7],[-8,-8,-6,2,2,-9,-4,-6],[-5,-7,-5,2,-5,1,4,6],[9,-9,-2,7,10,10,2,-4],[10,-9,-8,-7,9,10,7,7],[9,-1,6,6,3,-10,2,6],[-7,9,4,-10,-3,10,8,8],[-3,10,-6,-7,-2,7,-5,8]],[[-8,9,2,-6,-10,6,6,-5],[2,10,2,8,6,-8,8,3],[4,7,1,-2,2,9,2,6],[-9,-2,4,3,-5,3,10,7],[-9,-9,-10,1,10,9,-6,-8],[1,-6,-9,-7,3,-6,-7,6],[-9,-6,7,-10,-9,-1,-4,-10],[8,-10,-4,-3,-6,-9,-4,-8],[-9,4,4,-4,-3,-6,3,-9],[-9,-10,-5,-9,2,5,2,-10],[10,8,8,-6,7,7,7,1],[-5,10,-3,-3,8,2,-3,-2],[6,8,-2,-6,-6,8,-9,9],[9,-5,10,-9,6,-10,-6,4]],[[10,8,6,-10,-7,4,-7,-9],[4,-1,2,3,-1,-8,5,9],[-6,7,2,-4,6,-2,-5,-9],[5,-3,8,-4,1,6,-6,1],[-5,-5,8,4,1,6,9,5],[5,-10,6,-4,7,-2,6,-6],[4,7,-3,3,-7,10,-4,9],[-4,2,4,-6,-5,-6,4,3],[-5,7,1,4,8,-3,10,2],[2,2,10,-7,-8,8,-6,7],[3,-1,-5,4,10,8,1,4],[1,-9,5,6,10,-5,-6,2],[-10,4,10,1,-5,-10,6,-10],[-9,8,7,-9,-9,-5,-1,-4]],[[10,8,-8,-9,-5,-1,-2,-10],[2,-7,1,7,-4,-4,-9,-8],[8,10,5,1,8,-3,-5,-1],[10,-7,6,10,6,7,-4,-8],[-10,-10,-8,7,5,4,2,6],[-3,-2,4,-1,7,10,2,6],[4,1,7,6,7,-1,-5,-2],[7,-9,7,5,-5,-5,-1,-3],[7,9,-9,5,6,6,2,-10],[-1,1,-9,1,-1,3,5,9],[9,5,2,5,-5,-9,-10,-5],[-10,-8,-7,2,-5,-2,-2,-4],[8,8,-1,-9,-5,-5,-7,-5],[-1,5,4,-5,-4,-1,7,-5]],[[7,8,8,6,4,-10,2,-10],[-10,8,-2,-3,10,-1,9,6],[3,4,9,-7,-1,-8,4,-5],[-2,-8,-8,1,7,6,9,-2],[6,-6,-7,-10,9,9,-5,-8],[9,-3,9,4,-5,-1,-4,9],[-2,5,-7,6,-4,-1,-1,-7],[-7,7,4,1,6,8,-7,-8],[-1,8,9,-7,-1,3,9,4],[10,-3,7,-6,8,-10,10,-5],[4,-10,-7,5,5,-2,8,2],[1,4,1,-10,-3,-5,-10,-3],[-6,-7,-8,-3,-2,9,4,10],[7,3,4,-7,4,10,-6,8]],[[4,7,10,8,6,6,7,3],[-1,-1,8,4,2,5,6,10],[-1,-3,8,6,9,1,-9,-1],[3,-7,-10,4,-6,-1,-4,-2],[9,-5,9,10,3,-5,10,-3],[9,-5,-3,-2,9,1,8,6],[1,6,-5,1,10,10,-3,2],[-5,1,-5,6,8,-5,3,4],[7,5,6,9,3,3,-4,-5],[1,6,-1,-10,-2,-5,-8,-8],[-1,-6,10,-3,5,-6,-3,8],[1,10,8,2,4,-4,10,-7],[6,8,-9,8,8,-4,9,5],[-8,1,-6,8,2,-4,4,3]],[[-5,6,3,1,-10,-2,-9,-6],[-5,-4,1,1,-2,6,-8,-7],[-10,-8,-9,-4,-4,-5,-7,-9],[-1,3,5,-7,-1,-4,-4,4],[8,-4,-1,-5,7,9,2,-4],[2,-6,3,5,-8,3,-2,5],[8,-6,-10,-7,10,10,-5,8],[4,-6,9,3,10,1,-4,3],[-8,3,9,-6,8,-2,2,2],[-4,-5,10,4,5,-4,-4,2],[-6,-1,-7,-4,2,-9,6,2],[-2,4,-6,-3,-6,9,6,1],[6,-8,10,7,-8,8,-8,5],[-7,3,9,-4,5,-6,-5,-2]],[[10,4,-2,4,7,-5,2,6],[-10,5,-5,8,-2,-10,1,8],[1,-1,-2,4,-9,-8,-10,-2],[-3,4,8,9,-4,7,-10,7],[8,8,-5,1,1,6,-4,-4],[7,-7,9,5,5,-9,8,8],[-5,7,-9,5,10,3,-10,-2],[-6,10,-5,9,8,6,-5,1],[1,4,-8,9,-2,1,1,9],[-2,-5,5,-8,-3,8,-9,1],[-8,-7,6,4,10,10,-9,-1],[9,10,1,6,4,-3,2,2],[-7,-6,-7,-10,6,-2,-8,-5],[-8,-10,5,-2,-9,-2,7,1]],[[-3,8,7,-10,-8,5,-3,3],[-7,2,-7,1,-9,7,6,-1],[-4,10,-9,-2,1,2,-10,-9],[8,-9,6,-10,-2,3,6,-9],[-7,4,9,2,5,-6,-1,-2],[-6,3,-2,9,4,1,9,2],[9,1,-2,-8,9,2,10,-8],[-6,8,-5,-1,10,9,-4,-5],[-5,-2,9,3,-5,9,-10,2],[9,-1,9,-5,6,10,7,2],[10,-10,-4,-9,8,4,9,4],[-6,-4,9,-5,5,2,9,-3],[-7,-1,6,2,10,-3,-4,6],[-2,-6,-2,-5,-6,-9,2,-7]],[[-7,-10,6,8,-9,-6,-6,2],[5,-10,-9,-3,1,-2,-6,-1],[-5,5,-4,9,3,-6,-8,-10],[6,-9,4,-10,6,9,-10,6],[-3,9,5,3,-5,-9,-9,5],[7,-2,6,8,-5,5,-7,-1],[3,10,-9,-7,3,-7,-3,10],[6,2,4,-7,7,4,-4,-6],[6,6,10,10,-7,8,9,9],[7,-1,-1,10,10,-4,9,-1],[8,10,1,3,-7,8,-6,3],[-8,6,1,-9,-10,-3,-7,-5],[2,-2,7,10,6,-8,-5,-8],[3,4,10,5,8,-2,-4,9]],[[4,8,-9,-3,-6,-7,-4,-4],[7,-3,3,8,7,6,6,-7],[9,2,-4,2,8,1,-4,-10],[-2,9,-2,7,-4,-1,2,-1],[-3,-10,-9,-9,6,8,-4,1],[3,3,7,-5,7,-3,3,-2],[8,5,6,4,-1,-2,-3,3],[4,-3,6,-4,-5,-1,-3,-7],[5,-8,-4,-5,-5,10,-9,-7],[-8,6,10,8,10,-6,-2,-4],[4,10,-4,-3,-1,10,7,-4],[10,1,-3,7,-8,-4,7,9],[-2,9,1,7,-6,-3,6,10],[-9,-6,-1,6,8,-2,-10,6]],[[8,-7,9,3,3,-10,3,-5],[-10,5,-3,-3,-10,6,5,-3],[-9,-6,-6,-4,4,10,-4,2],[-5,7,7,-7,-4,1,6,4],[4,-4,8,-1,-3,-2,7,1],[10,-10,-10,7,1,-5,10,10],[9,4,3,-10,8,3,5,-9],[-4,5,7,9,-10,3,-6,-5],[1,10,9,-8,3,4,7,-4],[-2,6,1,-5,2,2,-5,2],[-10,-9,4,6,1,5,3,7],[-6,-3,8,7,-10,-7,8,2],[-4,5,-8,-5,-10,7,8,9],[8,-1,3,-8,9,-9,-5,-4]]], dtype = "uint16")#candidate|1614|(12, 14, 8)|const|uint16
var_1615 = relay.var("var_1615", dtype = "uint16", shape = (12, 14, 8))#candidate|1615|(12, 14, 8)|var|uint16
bop_1616 = relay.add(const_1614.astype('uint16'), relay.reshape(var_1615.astype('uint16'), relay.shape_of(const_1614))) # shape=(12, 14, 8)
uop_1630 = relay.log2(bop_1616.astype('float32')) # shape=(12, 14, 8)
uop_1642 = relay.exp(const_1614.astype('float64')) # shape=(12, 14, 8)
uop_1647 = relay.acosh(const_1614.astype('float32')) # shape=(12, 14, 8)
bop_1649 = relay.bitwise_xor(uop_1647.astype('uint32'), relay.reshape(var_1615.astype('uint32'), relay.shape_of(uop_1647))) # shape=(12, 14, 8)
output = relay.Tuple([uop_1630,uop_1642,bop_1649,])
output2 = relay.Tuple([uop_1630,uop_1642,bop_1649,])
func_1652 = relay.Function([var_1615,], output)
mod['func_1652'] = func_1652
mod = relay.transform.InferType()(mod)
mutated_mod['func_1652'] = func_1652
mutated_mod = relay.transform.InferType()(mutated_mod)
var_1653 = relay.var("var_1653", dtype = "uint16", shape = (12, 14, 8))#candidate|1653|(12, 14, 8)|var|uint16
func_1652_call = mutated_mod.get_global_var('func_1652')
call_1654 = func_1652_call(var_1653)
output = call_1654
func_1655 = relay.Function([var_1653], output)
mutated_mod['func_1655'] = func_1655
mutated_mod = relay.transform.InferType()(mutated_mod)
var_1715 = relay.var("var_1715", dtype = "float32", shape = (16, 9, 1))#candidate|1715|(16, 9, 1)|var|float32
var_1716 = relay.var("var_1716", dtype = "float32", shape = (16, 9, 16))#candidate|1716|(16, 9, 16)|var|float32
bop_1717 = relay.less(var_1715.astype('bool'), var_1716.astype('bool')) # shape=(16, 9, 16)
output = bop_1717
output2 = bop_1717
func_1722 = relay.Function([var_1715,var_1716,], output)
mod['func_1722'] = func_1722
mod = relay.transform.InferType()(mod)
mutated_mod['func_1722'] = func_1722
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1722_call = mutated_mod.get_global_var('func_1722')
var_1724 = relay.var("var_1724", dtype = "float32", shape = (16, 9, 1))#candidate|1724|(16, 9, 1)|var|float32
var_1725 = relay.var("var_1725", dtype = "float32", shape = (16, 9, 16))#candidate|1725|(16, 9, 16)|var|float32
call_1723 = func_1722_call(var_1724,var_1725,)
output = call_1723
func_1726 = relay.Function([var_1724,var_1725,], output)
mutated_mod['func_1726'] = func_1726
mutated_mod = relay.transform.InferType()(mutated_mod)
var_1946 = relay.var("var_1946", dtype = "float64", shape = (10, 16, 16))#candidate|1946|(10, 16, 16)|var|float64
const_1947 = relay.const([[[-7.964488,0.826058,0.768871,1.953812,8.394233,-0.629567,-0.236563,0.679006,-3.544301,2.962093,9.051833,5.516820,-4.039648,-3.724621,5.184257,-2.812983],[-0.551891,-5.201601,-0.625546,9.030743,-9.149109,-5.740084,7.154298,4.297286,-5.711578,-3.408795,-9.144241,-1.802838,4.070195,-8.344593,-6.178452,7.493958],[-7.531871,-1.653416,3.242677,-5.417962,-6.029849,-3.759727,-2.648376,7.870687,-3.466205,0.518155,8.917236,0.925802,-7.285259,1.366754,3.937293,0.272220],[-4.421271,-0.758713,9.895357,5.681274,4.062940,6.555450,7.849391,5.447223,-2.414143,3.187030,-1.986263,8.795092,-2.925405,2.662910,5.622748,8.079649],[9.429723,8.133209,-4.758104,-0.765970,-7.078516,-2.808809,-0.084575,2.166476,-9.595038,-6.518189,1.736620,7.528711,-5.286084,0.184382,-2.723636,2.823257],[1.226323,-4.354905,5.425651,9.406577,4.824442,-3.116887,4.558473,-4.179622,-5.016404,-0.361874,-3.950432,1.040620,9.165314,-8.400029,3.795865,9.474209],[-5.146680,-6.864983,-9.263118,6.217186,1.820195,1.997207,4.450101,-5.517045,-1.730385,-8.625109,1.431918,0.026670,-3.192680,-0.873716,8.522317,-7.559453],[5.114116,3.274272,6.338166,1.576365,-8.030371,6.615580,8.023901,0.529862,0.482229,-7.669792,0.016832,1.614737,-6.113888,8.821404,7.877666,1.033350],[7.266386,-1.068075,-2.937681,5.143489,-9.008134,-6.384418,2.398446,9.109632,3.803312,8.217447,4.990859,1.576397,-3.402000,5.246900,-7.730565,-3.425801],[6.256143,-3.754902,5.626413,3.605132,1.025984,9.364083,8.464614,4.212418,-3.940835,-3.817544,2.318822,7.442224,-7.529915,9.250825,-5.765080,-0.787758],[-2.597306,2.224149,0.824241,7.559478,-8.016576,1.199991,3.086510,5.738698,0.598357,9.669950,2.632267,-3.530280,9.980659,-6.066179,0.983996,0.769377],[-2.121595,4.020056,6.302047,-1.071239,7.097030,-4.353658,-7.211889,9.203143,3.589044,-6.614570,3.227473,-9.948344,-8.028879,-2.945745,-4.783456,6.952495],[-2.436672,-2.985506,5.550133,-8.776470,-1.484379,7.401569,-2.860700,-6.160200,8.706840,-1.291766,1.805369,4.986795,6.525063,1.384610,9.759339,-9.824198],[-8.488453,-4.648795,1.962581,-4.135337,9.968975,-3.088296,-9.436958,2.598418,6.468280,7.027298,-1.069287,-8.371888,-9.953771,0.940888,-6.657687,-6.938918],[-2.992951,-4.815608,9.981415,6.080668,-2.917257,-3.973365,-2.445159,-7.205729,6.920165,-3.246782,-9.826022,2.505598,5.842911,5.323578,8.027480,-1.854793],[-3.972993,4.823515,9.934192,-9.578714,5.535715,8.696313,-3.752175,0.516842,0.383710,9.376194,6.177727,-9.220143,-5.254564,-2.623308,0.907776,4.673092]],[[-5.890422,2.249260,-9.272470,0.392523,-0.033291,3.361513,7.984889,-1.350825,6.874014,-1.789343,8.592819,5.239770,-0.185125,5.116085,-4.744761,7.612139],[0.433499,-2.111912,-2.930023,9.378507,-4.624375,9.150305,-6.292976,-7.031004,-4.125774,-0.869739,-9.912270,2.244316,9.224741,-5.803333,9.729713,-1.754784],[2.753028,-6.261913,5.038679,-9.027074,3.664873,2.394563,-3.542736,5.287055,-6.040661,-5.425601,0.514515,-2.058968,-7.827234,-4.142759,-4.863391,-7.532418],[0.096774,-6.405905,9.611942,0.235991,-4.927095,-1.605494,-9.110899,1.106887,5.879721,1.596052,2.743601,3.736002,0.093040,-4.570425,2.033946,7.675787],[9.119545,3.318008,-8.920371,9.647176,8.280405,4.924491,2.310853,-3.869545,-3.127893,1.296110,7.217091,7.357671,-0.600306,2.632273,4.046594,7.795954],[-8.498201,8.269183,0.881453,6.964332,-1.843174,-9.271728,-8.838716,-6.077705,7.397631,-7.235996,-4.883324,0.782189,8.816849,-1.830697,3.320360,-6.443418],[-9.294936,-4.174981,-4.785229,-7.708164,2.587171,7.432644,-5.976432,-7.900596,4.437484,-5.795353,4.571940,7.127489,-2.677055,8.610217,9.663658,5.857620],[3.099363,3.285792,-1.006395,-1.563419,-3.958222,2.040797,7.151615,-8.584346,-3.275053,-8.182685,-6.287220,0.833367,-4.037907,-4.478354,-1.577758,6.509831],[-3.612639,9.349192,2.481573,-5.418370,2.435009,-5.832396,7.987373,-7.124082,2.985632,1.091761,-3.887284,3.174078,1.208290,-5.549326,0.146768,4.706815],[-5.970001,-4.513100,-6.303484,0.233316,-1.760877,-5.157410,1.254275,-9.103897,-8.366300,-5.563999,-6.673450,0.577964,-8.040775,3.104504,9.947161,1.349497],[2.253515,6.470011,-7.554642,-9.111923,-8.077767,-7.091159,4.473709,3.006905,3.152460,-6.555741,8.320065,2.689336,2.023679,2.558057,-3.654525,-0.398043],[0.404920,6.641561,-1.568919,-9.094472,9.159742,-4.029891,3.345778,-2.414212,-3.762642,-2.539813,-8.562049,3.534271,-4.216658,-0.831337,6.131208,7.035466],[4.088692,-8.766154,-1.976308,-8.318318,8.098849,-7.324910,-7.118676,7.514945,4.662603,-2.824848,-2.153744,6.075649,5.681396,4.780427,-2.712000,0.228168],[1.228256,5.562038,-3.058177,1.958490,9.894847,5.549831,-3.403953,-3.399719,-5.308640,4.712121,-7.970099,-6.063170,3.257762,-1.088982,-2.201783,8.477894],[7.097271,7.977456,-2.761152,0.493480,-1.519543,-9.560436,-4.825891,-9.587874,9.652171,6.133862,-9.203810,7.088694,2.312754,3.924913,1.187574,5.055585],[7.171224,0.355167,-3.143712,7.631010,1.185539,4.142615,-3.561984,-7.135255,-7.435257,7.113766,4.053718,-0.930021,-1.122224,-0.235292,-5.343441,-1.106543]],[[-4.387485,2.385466,6.101847,1.958986,-2.129197,-8.731876,-8.219122,3.436597,-3.185995,2.131884,4.923284,-3.141294,9.768584,-2.350937,-2.489850,-9.793456],[-5.450828,9.459680,-6.639303,-3.789591,-6.019632,-9.435546,5.630873,0.240718,-3.682668,-8.078429,-9.799960,-7.192438,1.679697,7.363742,7.000174,9.474722],[8.762731,3.317011,6.679983,6.611297,-0.056262,4.945651,2.095603,9.442976,9.570649,2.884906,-0.452118,-8.459898,-1.074601,-1.131271,0.414526,7.431340],[-7.818230,-4.878282,-1.970684,8.940311,3.748127,1.030720,9.573401,3.371206,-6.683313,-5.411935,-2.302019,-9.669089,-8.229206,-5.614581,-7.944502,1.479964],[7.719865,8.210057,5.018850,-7.583669,9.205870,7.748209,3.803453,4.205559,4.193225,-6.513979,-7.358014,0.728029,2.690701,-3.600203,9.849523,2.024562],[-7.172436,2.656604,7.848750,-2.651936,4.323019,-5.036059,-2.352747,-2.192752,4.960074,8.805877,2.204987,7.454748,9.653848,9.170611,2.257112,1.499877],[9.002019,7.083128,-2.054158,0.997650,6.660721,-1.167210,3.507562,6.823746,-4.020476,3.688371,4.363068,-5.048568,-1.169616,-2.383872,-8.347774,4.270931],[-5.144851,0.515737,7.253067,-6.394366,-7.440179,-6.218717,1.986901,-2.158573,8.504358,1.734454,-1.017047,4.247066,5.049094,-4.019784,0.754991,4.910454],[-3.131894,-1.971787,6.222091,-9.091001,-7.398662,-3.679942,8.197376,1.843126,-8.896098,3.275878,-2.842076,3.784025,-5.377950,-8.203828,-8.343757,4.326478],[-5.809421,-7.800174,-7.697793,5.484656,4.342459,-6.421919,-5.995200,5.423721,0.184293,-6.684800,6.515955,3.747328,6.744263,6.793734,-6.163927,2.065940],[7.618931,-3.107701,-3.811695,-3.239450,2.617390,-0.186545,-6.666170,-7.258949,2.016580,0.054181,5.100168,-0.242365,-8.374150,-4.670327,1.195405,1.249092],[0.477375,-0.368398,3.308388,2.906847,-6.197578,1.475540,-9.440702,-4.636512,-5.864951,-9.636505,-9.592991,-8.640674,5.148844,7.931654,-7.059150,2.103310],[1.146257,-8.327553,-6.829267,1.236949,8.978749,0.501078,4.008140,0.770900,6.774337,7.838578,5.517436,3.953643,-7.758052,6.573415,7.172917,-6.860332],[-5.287605,-6.569214,-9.117800,9.509121,-1.098395,4.036534,-2.432649,9.773989,5.058700,-2.754384,-2.650867,4.342757,-7.668014,-0.510978,5.667285,-8.663354],[0.703408,-6.608611,2.130544,4.889695,-4.957717,1.961348,-3.307567,-8.302991,8.540843,-2.759135,-2.303862,-1.123801,-2.890487,3.882316,3.989093,3.761963],[-5.769656,-9.899616,-6.941734,6.952863,9.716874,5.698446,8.197969,9.820460,-9.317189,-4.361957,7.839623,-7.986362,8.019348,9.741906,8.589121,2.010637]],[[-4.119451,1.211850,-4.964429,3.655101,9.374390,9.362923,-3.707515,0.641335,-6.807140,-6.020679,-9.784486,3.124981,-3.886992,-4.215356,8.013486,9.772480],[-0.888006,-7.471201,5.371240,-4.875088,8.806587,9.022759,-9.419515,-9.541139,-5.593643,-6.382541,1.605765,5.212758,-2.388551,-9.851538,9.954704,7.096170],[-4.600225,-7.301424,1.252192,0.771398,-2.674604,-9.545254,1.718305,1.766377,6.902402,3.855881,9.929134,-2.515664,-2.974554,-5.177400,-7.511701,5.860194],[7.490244,-3.300436,-4.864677,8.991283,-1.266492,3.869461,6.060019,-7.613301,-7.284663,8.037354,-3.672112,4.078549,-1.696886,-4.663308,5.712649,-8.961815],[-4.624714,9.754034,-5.246836,4.263741,9.748126,-7.119090,-3.185961,6.087651,-8.097615,-9.216659,1.847377,-7.501988,0.489119,-8.138859,-0.263609,-7.454544],[-7.175584,-8.964139,-5.288967,9.525619,-3.298866,-4.349009,-1.422726,-3.501350,2.219672,1.419606,-9.255810,-0.425772,4.949511,1.885938,2.626549,-0.230494],[7.321484,-1.987574,-9.238358,4.051350,-9.011370,3.021928,-8.061250,3.463433,9.507379,-9.846235,-8.565878,7.153680,8.709145,-9.099430,-0.023061,-2.463226],[8.688899,-8.191227,2.276258,-8.544309,8.593949,-0.893394,4.558539,2.608421,5.505352,3.178845,8.058835,5.935427,9.637245,3.944738,-7.302581,1.476383],[8.059884,9.583967,-2.925953,-6.024047,-5.242023,3.982476,-7.174763,-8.325710,-6.910477,-3.679307,-1.626706,-8.046309,6.911259,-2.211076,-7.458629,4.699848],[8.749828,-1.687155,-1.015311,5.757025,4.855886,7.867858,-4.417581,9.727865,5.367509,-6.050141,1.955493,7.072553,-7.623042,-7.734644,5.130296,-1.818046],[4.025156,-3.970687,7.401458,-5.122387,-3.692147,5.899681,5.018950,5.945122,-2.946421,-5.498192,8.304312,-5.438533,6.274379,-7.111321,-3.124288,6.507349],[2.640716,0.093028,-9.822871,2.412187,1.673520,1.998783,-8.594598,5.751075,-4.496096,-3.618905,3.224129,6.140734,-5.168248,-2.749451,3.874553,-3.158423],[2.106621,8.113243,4.873984,4.406732,4.196454,8.060217,8.975305,-8.126221,-4.191925,8.855356,0.646508,0.964691,-4.886970,-6.757830,6.521674,-6.364619],[9.102957,-1.846318,8.981407,2.270303,-9.471875,-4.564762,-6.736353,4.949110,6.137508,-5.950569,-0.962435,-1.673561,8.882786,-6.670768,7.290181,-2.535709],[-2.843137,4.358255,-7.981764,2.856002,5.761572,-8.244025,-1.924942,1.026350,3.842015,7.821905,1.225719,-0.467058,-0.857557,9.150055,-4.977924,-3.088212],[5.014012,-8.051849,8.204786,-2.330933,8.063716,-0.590867,0.155959,7.087842,1.768278,-5.712401,8.138783,-4.782385,7.460274,2.380341,5.799214,-3.105172]],[[-9.891715,-5.850980,-8.951655,-9.665363,6.512849,-0.378530,-8.924454,3.880395,-1.529082,-9.559218,2.304896,9.953307,3.903516,-9.096062,5.201289,0.085410],[5.941356,8.850727,-6.006889,7.545187,-0.988139,-4.030680,8.362110,-5.424408,7.072968,7.361474,3.727602,9.045046,-7.381775,9.504532,3.021610,9.710302],[-6.174228,-1.861370,-7.752360,0.866519,9.382818,-9.564273,8.795036,-5.729457,8.143208,0.899228,0.642034,2.712189,-8.965315,1.756189,7.847577,-6.534210],[8.497364,4.160599,-2.884511,-4.595510,-9.006798,3.471391,1.250859,2.612239,6.018829,-9.660886,7.357273,-9.423540,-2.039286,8.372703,-0.306016,-7.777155],[2.545695,-1.402099,-1.496886,0.098420,3.208200,-3.746972,7.184883,5.931800,4.558009,0.608473,-4.052083,-6.220258,0.494838,-7.277048,-2.082108,7.498332],[-5.301729,7.191752,-0.487527,-5.988611,6.914197,-6.021612,-2.479353,-8.613988,3.875191,-0.199567,3.177076,3.663599,7.903078,0.236619,-2.558753,1.490371],[-4.087550,8.491592,0.932826,-8.263684,-5.991186,7.842214,-4.284465,-9.359215,0.876268,5.147497,-5.578469,1.859444,3.618840,6.088639,0.923005,-1.802345],[3.863303,-6.950615,3.134285,-5.842733,-6.067115,-4.216741,3.491128,-5.076200,-0.797881,8.274851,-2.342161,-9.028973,6.027437,4.057962,-9.210396,-4.997246],[1.905980,-6.949650,2.909585,1.533152,5.910937,4.719530,-7.784337,4.533870,2.319756,7.113389,-5.484553,5.630851,8.567152,-8.109691,5.830685,-7.955539],[-6.468933,8.876147,6.183855,6.741176,7.844896,9.285499,-8.328410,-9.546086,7.528260,-5.976590,7.510174,-1.319857,-2.142469,-2.252792,1.922395,8.327072],[4.726807,-0.198980,0.326542,4.974539,-5.760371,-5.630573,-5.831388,-6.601073,1.172695,0.895771,2.746358,8.676191,-6.876992,4.997964,-7.887072,3.810545],[1.110681,-0.504744,9.831495,4.660606,-9.525656,5.946647,-8.106240,2.589307,-2.071293,-4.792444,-2.133858,2.948152,0.546754,-0.080318,5.919678,-5.259193],[4.790808,4.029713,-8.740582,-8.695552,4.471580,8.375144,-5.179148,5.297995,5.985771,-0.883751,2.822230,6.181469,-5.170812,2.974980,8.381320,-6.538559],[-1.267792,-8.879644,5.160209,-9.603017,-5.629147,-6.241603,-0.402724,8.229413,-6.674354,3.715886,4.507030,-2.065904,-2.057208,-1.057562,6.967762,5.386323],[-9.334106,8.628293,-0.967078,-8.110070,3.066355,4.628912,-9.581906,-9.271954,-9.108462,0.853102,-4.910461,7.782237,6.767462,-7.904801,9.751857,-8.651314],[4.562087,4.131525,9.042781,-4.420056,-0.952859,-3.730401,-7.333646,9.090319,-4.877204,8.849873,0.723127,-4.192133,-5.316075,1.262179,-3.404187,0.044957]],[[7.124229,7.117296,7.146947,-1.046903,-8.177359,-9.233013,7.387052,9.011221,-6.210712,-7.908684,-7.849122,-8.636185,9.800561,-7.254906,-1.857086,-4.056827],[-3.228880,-2.318077,9.375153,9.110577,-2.294283,2.069532,-8.663091,3.159849,2.528384,-3.869410,-0.256969,-4.943992,-0.402533,9.305104,-5.840749,8.088775],[-8.342490,-3.153114,-9.613083,1.718303,-6.688580,-2.467241,7.677349,2.818923,0.678923,-0.860010,6.863700,4.465061,0.987356,-8.782194,-9.172353,-9.811772],[9.358583,4.936821,2.287078,-3.653293,4.511059,-0.718389,5.728491,6.207819,5.370958,-9.316784,-4.937003,-3.458719,1.096793,5.971294,-1.279061,-5.435500],[6.053221,8.435849,-6.612979,-9.472339,-1.945571,-7.779978,-1.625184,-1.705228,-5.763845,-6.176702,5.476088,-2.252885,8.833372,-9.764784,-1.094857,-0.386396],[-3.386368,-1.024365,3.929747,-6.594492,9.559413,0.752685,-7.066482,0.273915,7.789313,5.031152,-3.148859,4.271585,-1.251941,-9.388196,-9.112947,-6.464776],[-5.098603,7.045076,1.530070,-9.439007,-8.811697,-0.845644,9.023910,6.939662,-6.784683,4.286545,1.856149,-7.824612,4.543099,-3.800593,3.454602,-3.667018],[2.205209,-7.934467,-8.331471,8.675945,-9.965539,1.319612,4.310684,-4.743604,-6.088214,-2.389683,-7.455111,0.213824,2.606845,1.917464,-9.374816,1.171404],[8.429680,-8.404431,-3.929051,7.497777,2.113116,-9.621804,0.153974,-2.927057,6.836206,3.821072,-2.411741,6.567506,-4.916619,-6.725028,-0.706464,-6.152765],[0.035672,4.119055,-2.744329,8.395236,-5.816761,-7.287261,-6.191040,9.715049,-8.295905,-9.617111,9.304672,-2.418262,-4.153568,-7.836329,-5.720269,0.937890],[8.339505,9.725461,1.570511,5.728528,9.426874,4.635117,8.302806,8.338124,-5.890098,-1.845623,4.823511,4.387958,3.173058,-2.768905,5.778499,-2.726122],[8.239698,-8.170550,-2.520269,-0.702145,-0.022582,0.510178,-1.323258,9.309293,-3.663742,-7.070981,-3.910065,-6.375529,3.598121,-7.088585,-8.012889,4.304253],[-6.674962,-5.452430,3.011672,-0.040928,-5.929426,3.554702,-5.212799,9.029659,-4.947452,-1.406136,-8.775527,1.721408,-5.618170,-5.744244,-2.955269,-2.139106],[4.962755,0.540201,1.475434,-5.274650,0.658189,-5.160023,-2.688213,3.542244,8.805403,-6.653184,-9.589985,1.720660,1.902500,1.972086,3.850238,-5.798000],[-5.907937,9.677226,-9.641795,8.933766,-3.207887,7.022030,-2.831311,7.134108,6.462184,5.391686,8.433259,-0.269355,-6.754536,-6.999358,3.150487,-1.409538],[-2.174965,6.549242,-3.714817,9.178018,-4.268581,4.744224,4.204491,-6.142330,-2.454873,-0.964546,-0.415177,-4.033586,-8.993914,-5.754618,-9.527069,7.144669]],[[-6.482601,9.110085,8.860875,4.959469,2.313751,-1.362806,-8.632931,2.930716,-9.278278,-2.172520,-9.955788,4.987027,-3.264128,-8.678197,0.429424,3.853493],[-4.247634,-8.897265,7.227362,0.359064,-9.582745,2.585949,-7.186161,-6.663979,-0.675068,3.391217,5.715200,4.991940,-3.570869,-7.962803,8.045350,-6.430624],[-2.096520,-8.781792,-1.869045,7.132232,7.735861,0.680672,9.378955,7.525426,9.935139,3.495838,2.858324,-9.755849,-5.942651,4.939237,-6.829321,-1.300455],[-2.634984,3.263453,-4.412461,-2.327564,0.157523,-6.774471,6.848867,4.731611,-1.431378,9.578164,1.734851,-2.530862,6.694263,-7.871793,3.704137,-6.156296],[0.235237,-3.346580,-6.558469,7.307781,8.554462,1.160606,7.226892,6.616804,5.089459,-4.633174,-2.825892,-0.194543,-5.177270,7.716728,2.921556,-4.374281],[3.111869,6.474158,4.596138,-9.455372,-5.341396,5.977323,-4.743078,0.559292,4.649431,-6.591197,-7.787740,3.678953,1.843190,-2.210508,0.681854,6.195012],[-6.832848,-5.632078,-5.989012,-3.513466,-0.217159,-8.423725,-9.153110,-7.794801,3.683677,6.884459,-8.097634,3.013560,1.308223,-0.925693,-7.637143,-1.171710],[-9.050449,-6.050418,1.655047,5.447593,-4.114803,-1.572557,-2.541228,-2.977574,6.812753,5.236186,8.064101,-9.716449,7.756506,4.096334,-4.455935,-0.094259],[-8.831684,4.569319,5.364370,-4.675824,7.697556,-4.553917,2.635961,1.876894,-7.945964,-5.452205,1.487081,-3.692930,-4.972759,-3.868746,2.147374,2.439693],[8.987576,1.185309,-8.448580,-9.094965,-8.101296,3.293703,-2.563994,0.014578,2.134941,-4.581129,-2.269023,9.603052,-9.499638,0.551875,-3.463624,3.176425],[-1.415108,-7.934560,-6.211215,-8.532363,2.516569,7.747587,-8.421255,-8.709209,-1.800756,4.048218,-1.770913,7.532377,-1.756952,-7.147116,-9.707067,2.612077],[9.393465,7.018079,-9.571354,-8.405816,7.334505,1.436101,-5.959909,8.728645,-0.047938,6.534977,-0.898541,3.002006,-5.098877,8.262296,-8.770419,5.227853],[0.669275,8.088463,-5.176347,3.284765,3.603035,3.689932,3.206870,5.084118,2.883242,-1.670818,5.421330,3.739381,2.146045,-9.705100,1.966502,7.875539],[-6.299360,-3.283277,8.263256,-5.671048,4.968371,-6.396167,7.004204,-2.680514,3.888647,-6.625955,2.158534,-1.729135,-4.136835,-4.551887,-9.761354,-4.590913],[-6.859472,0.939081,7.427719,2.718946,2.138500,8.265130,0.756839,-6.744850,-1.231122,8.564090,-4.245111,-3.851317,5.877598,-7.285829,1.542596,-2.936199],[5.888359,8.102533,-4.740263,8.895498,-9.009080,-2.755584,4.676407,-6.831884,6.946024,5.383069,3.469165,-0.970920,-9.721859,-4.626612,-5.450137,9.117646]],[[-9.991127,-0.467129,5.709070,9.530169,-8.883427,6.499021,-4.210904,4.940171,-8.455812,0.870685,-5.981471,-7.937261,-8.917380,-5.266815,1.705191,-7.938165],[-8.577033,-7.028252,5.812699,-2.666136,4.956772,2.349697,5.702103,4.159973,6.578222,-7.180273,4.324361,-5.696279,7.230652,-1.755768,-7.945134,1.916728],[0.864775,0.026783,0.244619,-7.959919,0.780077,-8.897469,-6.356380,-6.621540,-6.277809,7.091605,4.066841,1.323304,8.733299,-3.767526,-7.980960,-6.607874],[7.384449,-4.689272,8.392945,-7.719953,-0.798205,-5.884778,-1.177940,-9.371462,3.620870,-1.517434,8.019853,6.243549,5.856066,2.986932,5.130710,2.013697],[9.886892,5.105379,-3.078582,3.032189,-2.493795,6.857252,9.616229,2.700932,-7.584049,1.930248,5.532599,-0.287335,-5.826418,1.856396,4.712338,4.834535],[-8.137955,-6.792176,-5.613673,-7.142328,7.155357,6.563886,1.120073,9.378999,6.296901,-3.081744,3.760220,5.697082,-8.261393,-4.460094,-7.881523,-1.041168],[-4.828162,1.725671,-2.144263,-3.134371,-7.638866,-5.859510,-4.932139,2.873887,2.582301,7.006546,-3.219980,-4.068253,0.334536,-8.512464,-5.587509,-5.000433],[5.445094,4.694030,0.679013,0.672569,-8.060657,-6.268312,4.487917,-0.270600,4.008857,-0.293782,-1.507477,-4.081574,8.962127,5.611966,0.728189,-3.519820],[-0.098672,-5.047924,6.127265,0.056387,-5.863758,1.931402,9.674907,-7.245048,7.847831,-9.470950,6.996087,6.191059,2.810714,3.697538,-0.997052,-4.997885],[4.927089,5.697907,-3.786716,-0.307746,-1.321778,3.511841,4.373169,-7.898283,-1.494559,9.852538,9.535151,-9.746756,6.725066,7.872735,9.700441,-9.624884],[-3.395334,-3.202836,-5.042500,7.481959,-8.862682,-7.350838,-0.962125,-8.832977,3.668761,3.008617,-9.130388,-6.067127,8.436523,7.308610,1.632744,4.065303],[0.340805,-6.166484,3.924940,-0.614995,-7.783939,4.723898,8.888594,8.165703,1.948947,7.693435,-1.959979,-4.424640,1.200960,1.597863,0.191613,6.265640],[-1.751425,6.472706,5.412192,4.126141,-6.723732,8.957061,-4.800790,3.444156,0.115747,0.335166,-6.690301,3.384946,6.321637,-6.454180,0.548451,-5.135616],[8.382717,5.212294,4.587468,8.481514,-6.365721,-2.239812,5.822500,-8.697716,-9.382210,2.999708,9.689349,0.519829,1.604674,-9.023640,7.639704,-1.618741],[-9.869569,4.001788,-6.137844,8.929303,7.858501,6.106333,0.270091,3.375815,3.746942,-2.064500,6.380018,8.225429,7.674249,-5.006632,-3.450821,-8.179749],[-5.794491,8.958040,-2.034832,4.690768,-3.639785,-3.209482,9.204990,4.877095,-7.013483,9.910146,6.897415,-8.381344,-0.368696,9.301036,5.236973,2.666536]],[[-4.155793,-0.630657,-7.518428,-1.278283,-2.631553,-8.725136,3.907957,-9.040895,-8.124672,7.931769,1.575973,-9.891203,-1.703664,-5.236703,3.718093,-3.455948],[-1.529440,-8.417012,-3.001977,4.899692,-7.122956,-4.977100,-7.775433,5.164649,5.034976,-1.759053,9.726625,-9.725735,9.491807,3.894881,4.730401,-6.887448],[3.564306,-5.713154,6.031036,-7.918525,4.187201,4.618877,-5.559119,-0.351358,-3.495920,-3.370719,-0.115114,5.638745,5.349380,-1.188236,-0.612432,5.796225],[-5.090935,-2.477742,2.753870,2.586637,9.714323,-5.250408,2.502885,1.083271,-4.707119,3.353854,5.720210,-2.661568,-4.931377,5.701513,7.349983,-6.166590],[-8.121823,1.164251,5.319821,-2.864813,-3.592940,-2.140268,-8.526709,7.721153,0.859612,0.048204,7.204671,-1.642441,-6.087545,2.329910,-5.430236,5.414334],[-2.006551,-0.742068,5.808346,-6.814080,-9.448630,-9.829574,7.899687,4.471262,-9.819983,2.738871,-0.987831,9.567361,7.706664,-9.772410,-1.990341,-8.064016],[-8.733023,6.086439,2.553360,5.927821,-3.934255,-8.774734,4.345033,3.000456,-9.319831,-9.675053,-0.390411,-0.412122,-9.380008,8.830873,-2.249051,3.242904],[-0.712466,0.076311,-2.296992,8.563083,-5.939560,-8.528408,4.575653,9.733122,-1.957828,-8.129747,-9.739006,-6.071701,1.654496,7.551019,1.678886,2.260446],[1.792856,-1.134617,8.099100,6.329384,5.316133,-7.734237,5.821564,9.435381,9.876109,-4.155280,-9.521322,-8.220767,-3.169131,7.456539,-1.127317,9.961051],[6.461614,1.895543,-4.832443,-1.642250,8.668989,-9.203339,9.078840,-5.999153,-6.439961,-6.833650,-6.062995,-0.814649,-2.368766,-9.411126,-1.361430,4.685134],[9.219607,4.793467,2.382548,-6.556803,-1.221139,4.481255,-9.337481,-1.232979,-4.969644,2.584556,0.684658,6.810245,3.188255,-6.004679,1.417034,-4.372139],[-7.174017,-5.936091,3.101954,-0.799538,-6.693495,3.007823,-8.245066,1.383799,-8.500290,0.656553,-2.095126,-6.757866,-4.113226,-2.442787,-1.996738,9.114788],[-2.416914,-8.763469,-6.828547,6.126240,-8.531493,6.266273,-7.096614,8.897316,0.976380,-7.710543,3.049411,1.394222,0.241994,3.274269,-3.558108,-1.517568],[5.800056,0.070725,-3.776870,-7.812112,9.166408,1.168838,-8.339624,2.840707,4.479410,9.824089,-7.294570,-9.486060,-4.932721,4.887236,-6.988067,1.735693],[-4.840137,5.602407,9.851599,9.457784,7.100933,-0.256119,7.309604,4.394097,9.696465,0.236442,-5.923797,1.680550,1.242317,2.040574,4.850269,3.954782],[6.765655,-7.438968,-8.903684,-0.593738,-4.434470,4.634855,-7.683120,-6.923187,-8.389654,2.895562,7.258427,8.988566,8.081726,3.811757,-0.337934,-2.336204]],[[0.955453,-3.276326,-1.280242,-3.308868,-4.635397,-7.183751,-7.931975,-7.338463,-8.861015,5.092490,8.319442,-9.104556,-9.248022,6.882257,1.688400,-1.330596],[-6.911186,-6.126445,3.386566,2.483083,9.474165,-8.507914,-4.964454,-0.074553,-0.241389,-6.194051,-5.805897,-4.094609,-5.147957,0.305347,0.775150,6.113135],[2.185120,-4.676848,-0.192755,-6.665467,8.348889,0.047264,3.806694,-6.688033,-2.788355,8.306838,-3.657024,1.350748,3.460064,-2.525920,-0.615353,-5.617806],[7.832114,0.608528,-8.383830,2.282292,-0.292490,9.800758,-6.381279,-4.416626,7.265392,-5.878768,0.851680,-4.821174,-1.836272,-1.209196,-5.015904,-1.612284],[1.075175,5.109077,6.291126,-6.796806,-5.071156,-0.869442,0.118100,4.009984,-9.562422,-6.917628,6.092444,5.809499,2.533334,-4.418051,-0.033206,-0.644820],[-7.294174,-3.858070,-3.540697,-3.950855,-3.588975,-8.857710,9.712854,-4.352282,3.598219,9.548889,-8.165922,-3.288993,-9.739840,6.855564,-8.800214,3.896256],[-8.342000,-0.343639,-6.288305,0.519324,6.715251,-0.625667,0.950218,7.759654,-8.323848,7.152202,1.127256,-8.481924,-8.914672,-7.540229,0.742440,-6.343886],[1.827738,4.116764,2.001656,7.724473,-2.159810,6.555962,-2.113538,-3.252095,0.821799,7.885328,0.268264,9.513697,-0.456064,-9.379628,8.130923,6.269497],[-0.440317,-5.592240,6.938634,-5.089218,6.585779,6.290716,-5.923533,-2.344624,1.459881,-9.894421,-5.632651,-3.245399,-9.356237,-7.263456,2.041528,-6.117007],[-2.500143,3.213431,-2.096788,9.034882,6.257992,-9.970112,-7.982186,-0.734869,-7.450080,8.884610,-2.432495,8.645772,-1.488459,-5.021699,0.650275,2.292775],[6.117157,9.269853,8.788459,1.882852,8.734843,-4.188928,6.757233,3.515318,-8.060869,-6.431882,0.984980,6.036103,2.881195,0.672589,-9.545729,4.878346],[-6.484791,-5.736096,0.741933,-9.205936,0.967025,8.982960,8.747921,-4.427258,3.525891,-1.743578,6.802073,-1.172272,9.629782,2.144473,2.761871,6.785000],[-9.168351,2.186291,-9.447557,-3.366787,-9.801315,-8.875231,4.371418,3.819672,1.547059,1.369769,1.966976,2.972914,2.814474,9.153562,7.842609,-9.885168],[-3.074040,-3.798738,-1.282026,-8.378249,-3.339762,-7.835082,4.437890,-9.223946,-1.670637,9.067406,1.803054,-6.468306,-7.634386,4.524206,7.073289,2.262722],[3.855571,-3.893939,-1.515631,6.803785,2.629650,-7.125820,3.973351,3.784056,-7.888810,-1.123636,3.569313,8.184278,-7.951256,-5.646988,-0.635474,3.988408],[1.355565,6.799424,-9.874376,-5.119580,0.128417,-2.941086,6.050995,-2.305033,0.715360,4.938420,2.636654,-0.748831,-7.241053,0.348490,-9.138886,-6.244875]]], dtype = "float64")#candidate|1947|(10, 16, 16)|const|float64
bop_1948 = relay.floor_divide(var_1946.astype('float64'), relay.reshape(const_1947.astype('float64'), relay.shape_of(var_1946))) # shape=(10, 16, 16)
output = relay.Tuple([bop_1948,])
output2 = relay.Tuple([bop_1948,])
func_1956 = relay.Function([var_1946,], output)
mod['func_1956'] = func_1956
mod = relay.transform.InferType()(mod)
var_1957 = relay.var("var_1957", dtype = "float64", shape = (10, 16, 16))#candidate|1957|(10, 16, 16)|var|float64
output = func_1956(var_1957)
func_1958 = relay.Function([var_1957], output)
mutated_mod['func_1958'] = func_1958
mutated_mod = relay.transform.InferType()(mutated_mod)
var_2043 = relay.var("var_2043", dtype = "uint32", shape = (4, 7, 7))#candidate|2043|(4, 7, 7)|var|uint32
const_2044 = relay.const([[[4,-1,9,-8,-6,3,-9],[-8,4,-10,-9,3,7,8],[7,-1,8,-9,3,-3,-4],[8,-1,-10,10,-2,-10,-2],[-6,-4,-2,5,-9,7,2],[1,-8,3,-7,-6,2,-6],[5,-7,10,-8,-8,-2,-7]],[[-1,9,-7,2,8,-3,-8],[2,-7,-2,2,8,4,-2],[3,3,10,-5,-1,-9,8],[-3,6,10,4,8,6,5],[1,6,9,-9,1,8,-3],[-3,8,9,1,9,-5,-3],[-2,1,-8,-9,-6,7,-2]],[[-1,1,-10,-10,-5,10,8],[1,-8,-2,8,6,6,-6],[1,-8,-7,-8,10,-5,1],[-8,-3,-10,4,8,1,-9],[-7,-10,5,5,-8,8,-3],[10,-8,-2,-9,-10,6,3],[5,6,9,10,-5,7,-10]],[[-9,7,6,10,-6,4,-2],[-7,10,8,-2,2,-2,-9],[-2,3,-1,-3,-6,6,-3],[-10,-1,-9,7,-6,4,-2],[-7,-5,-9,2,-9,-8,-9],[-6,5,5,-1,8,4,6],[4,-6,1,1,2,-2,8]]], dtype = "uint32")#candidate|2044|(4, 7, 7)|const|uint32
bop_2045 = relay.greater(var_2043.astype('bool'), relay.reshape(const_2044.astype('bool'), relay.shape_of(var_2043))) # shape=(4, 7, 7)
func_1236_call = mod.get_global_var('func_1236')
func_1239_call = mutated_mod.get_global_var('func_1239')
var_2052 = relay.var("var_2052", dtype = "float64", shape = (15,))#candidate|2052|(15,)|var|float64
call_2051 = relay.TupleGetItem(func_1236_call(relay.reshape(var_2052.astype('float64'), [1, 5, 3])), 2)
call_2053 = relay.TupleGetItem(func_1239_call(relay.reshape(var_2052.astype('float64'), [1, 5, 3])), 2)
uop_2054 = relay.log2(const_2044.astype('float64')) # shape=(4, 7, 7)
uop_2056 = relay.cosh(bop_2045.astype('float64')) # shape=(4, 7, 7)
func_1001_call = mod.get_global_var('func_1001')
func_1003_call = mutated_mod.get_global_var('func_1003')
call_2059 = relay.TupleGetItem(func_1001_call(relay.reshape(call_2051.astype('float64'), [12, 10, 11])), 2)
call_2060 = relay.TupleGetItem(func_1003_call(relay.reshape(call_2051.astype('float64'), [12, 10, 11])), 2)
output = relay.Tuple([call_2051,var_2052,uop_2054,uop_2056,call_2059,])
output2 = relay.Tuple([call_2053,var_2052,uop_2054,uop_2056,call_2060,])
func_2061 = relay.Function([var_2043,var_2052,], output)
mod['func_2061'] = func_2061
mod = relay.transform.InferType()(mod)
mutated_mod['func_2061'] = func_2061
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2061_call = mutated_mod.get_global_var('func_2061')
var_2063 = relay.var("var_2063", dtype = "uint32", shape = (4, 7, 7))#candidate|2063|(4, 7, 7)|var|uint32
var_2064 = relay.var("var_2064", dtype = "float64", shape = (15,))#candidate|2064|(15,)|var|float64
call_2062 = func_2061_call(var_2063,var_2064,)
output = call_2062
func_2065 = relay.Function([var_2063,var_2064,], output)
mutated_mod['func_2065'] = func_2065
mutated_mod = relay.transform.InferType()(mutated_mod)
var_2114 = relay.var("var_2114", dtype = "uint8", shape = (8, 2, 4))#candidate|2114|(8, 2, 4)|var|uint8
var_2115 = relay.var("var_2115", dtype = "uint8", shape = (8, 2, 4))#candidate|2115|(8, 2, 4)|var|uint8
bop_2116 = relay.bitwise_or(var_2114.astype('uint8'), relay.reshape(var_2115.astype('uint8'), relay.shape_of(var_2114))) # shape=(8, 2, 4)
output = relay.Tuple([bop_2116,])
output2 = relay.Tuple([bop_2116,])
func_2121 = relay.Function([var_2114,var_2115,], output)
mod['func_2121'] = func_2121
mod = relay.transform.InferType()(mod)
var_2122 = relay.var("var_2122", dtype = "uint8", shape = (8, 2, 4))#candidate|2122|(8, 2, 4)|var|uint8
var_2123 = relay.var("var_2123", dtype = "uint8", shape = (8, 2, 4))#candidate|2123|(8, 2, 4)|var|uint8
output = func_2121(var_2122,var_2123,)
func_2124 = relay.Function([var_2122,var_2123,], output)
mutated_mod['func_2124'] = func_2124
mutated_mod = relay.transform.InferType()(mutated_mod)
var_2646 = relay.var("var_2646", dtype = "float32", shape = (11, 7, 7))#candidate|2646|(11, 7, 7)|var|float32
uop_2647 = relay.log(var_2646.astype('float32')) # shape=(11, 7, 7)
uop_2689 = relay.sin(uop_2647.astype('float64')) # shape=(11, 7, 7)
output = uop_2689
output2 = uop_2689
func_2692 = relay.Function([var_2646,], output)
mod['func_2692'] = func_2692
mod = relay.transform.InferType()(mod)
mutated_mod['func_2692'] = func_2692
mutated_mod = relay.transform.InferType()(mutated_mod)
var_2693 = relay.var("var_2693", dtype = "float32", shape = (11, 7, 7))#candidate|2693|(11, 7, 7)|var|float32
func_2692_call = mutated_mod.get_global_var('func_2692')
call_2694 = func_2692_call(var_2693)
output = call_2694
func_2695 = relay.Function([var_2693], output)
mutated_mod['func_2695'] = func_2695
mutated_mod = relay.transform.InferType()(mutated_mod)
const_3020 = relay.const([[[-1.788537,-1.029369,-7.094442,5.280752,-1.343186,5.598589,5.409310,3.292483,-4.847483,0.892904,8.890036,-6.375545,-8.259786,4.332024,-1.933753,2.767115],[-5.758161,-3.629876,8.539712,1.097081,-1.930212,-8.806551,-3.731579,-7.566246,7.352614,8.807397,1.511384,6.819669,-9.449105,-0.867801,3.050574,1.079989],[-0.302064,-5.418400,0.805767,3.565664,-1.819194,-4.438410,5.628557,-4.058583,-1.198381,0.611449,5.186330,0.342036,9.553150,-1.511347,0.097711,8.644181],[6.600953,1.450133,8.823271,-7.066556,-2.295325,8.640076,3.007051,-0.338257,2.417610,-8.659716,-1.502902,-6.002017,9.801583,-3.774222,-6.715748,-8.850331],[-1.562160,-7.355401,-9.665533,4.324171,9.490476,4.994634,-1.021346,-9.184829,6.820616,5.427700,2.884136,-3.304294,-5.547731,9.548966,-8.357378,6.258737],[-3.976813,-1.389923,-2.044145,4.965791,-4.571136,0.708985,0.447048,-9.145702,-2.839305,-1.955322,8.997681,-6.608733,-8.678226,-5.805038,-5.015233,8.404207],[-7.889253,7.665980,5.228036,-3.707096,8.696355,8.775965,-9.983664,-4.049734,9.036699,-1.205749,1.402146,-5.423375,-8.316866,-6.066213,-4.020876,2.405322],[8.736548,-9.769377,-1.053955,1.274103,-8.194189,-4.154713,-0.970298,2.654515,3.914788,3.447687,-1.085532,-8.030628,-3.215605,1.225944,-6.653590,9.634986],[-7.715661,4.033145,6.392558,-2.779151,4.817804,-3.364029,0.522568,6.444156,4.218462,0.615298,-8.222175,-7.821220,-9.318583,-2.561900,7.026005,0.703182],[8.994836,-1.851719,9.934115,-0.917442,6.579293,-7.478554,-2.492572,4.769363,-4.354106,8.255219,7.933549,-8.925663,-0.252861,-0.228362,-8.762786,5.064389]]], dtype = "float64")#candidate|3020|(1, 10, 16)|const|float64
uop_3021 = relay.atan(const_3020.astype('float64')) # shape=(1, 10, 16)
bop_3031 = relay.floor_divide(uop_3021.astype('float32'), relay.reshape(const_3020.astype('float32'), relay.shape_of(uop_3021))) # shape=(1, 10, 16)
func_1550_call = mod.get_global_var('func_1550')
func_1555_call = mutated_mod.get_global_var('func_1555')
var_3035 = relay.var("var_3035", dtype = "float32", shape = (72,))#candidate|3035|(72,)|var|float32
var_3036 = relay.var("var_3036", dtype = "float64", shape = (616,))#candidate|3036|(616,)|var|float64
call_3034 = relay.TupleGetItem(func_1550_call(relay.reshape(var_3035.astype('float32'), [4, 9, 2]), relay.reshape(var_3035.astype('float32'), [4, 9, 2]), relay.reshape(var_3036.astype('float64'), [616,]), ), 4)
call_3037 = relay.TupleGetItem(func_1555_call(relay.reshape(var_3035.astype('float32'), [4, 9, 2]), relay.reshape(var_3035.astype('float32'), [4, 9, 2]), relay.reshape(var_3036.astype('float64'), [616,]), ), 4)
output = relay.Tuple([bop_3031,call_3034,var_3035,var_3036,])
output2 = relay.Tuple([bop_3031,call_3037,var_3035,var_3036,])
func_3042 = relay.Function([var_3035,var_3036,], output)
mod['func_3042'] = func_3042
mod = relay.transform.InferType()(mod)
var_3043 = relay.var("var_3043", dtype = "float32", shape = (72,))#candidate|3043|(72,)|var|float32
var_3044 = relay.var("var_3044", dtype = "float64", shape = (616,))#candidate|3044|(616,)|var|float64
output = func_3042(var_3043,var_3044,)
func_3045 = relay.Function([var_3043,var_3044,], output)
mutated_mod['func_3045'] = func_3045
mutated_mod = relay.transform.InferType()(mutated_mod)
var_3367 = relay.var("var_3367", dtype = "uint8", shape = (14, 11, 8))#candidate|3367|(14, 11, 8)|var|uint8
var_3368 = relay.var("var_3368", dtype = "uint8", shape = (14, 11, 8))#candidate|3368|(14, 11, 8)|var|uint8
bop_3369 = relay.not_equal(var_3367.astype('bool'), relay.reshape(var_3368.astype('bool'), relay.shape_of(var_3367))) # shape=(14, 11, 8)
func_3042_call = mod.get_global_var('func_3042')
func_3045_call = mutated_mod.get_global_var('func_3045')
var_3377 = relay.var("var_3377", dtype = "float32", shape = (72,))#candidate|3377|(72,)|var|float32
const_3378 = relay.const([[-1.640312,6.025311,9.429773,-3.361112,6.516703,7.685434,-0.017109,7.505258,9.797324,6.956527,-4.223236,0.266852,-6.000340,6.213578,1.669386,5.243525,6.430991,-5.079168,-0.602084,-6.840440,1.322908,7.400877,6.514243,-2.042541,-6.261659,1.491873,1.240515,-5.202636,8.369813,-6.139500,2.740968,-6.932379,7.304250,-1.189688,0.247195,4.070535,-8.664636,-0.628549,5.362263,-4.547282,-0.331599,-1.289230,2.752658,-4.944009,5.418152,4.292120,-3.268666,6.885851,-6.854241,5.283275,-6.031406,-5.382244,7.095055,-3.429467,1.890996,-2.987806,-1.027557,5.652344,0.033661,-5.144281,4.601725,-7.581732,5.158812,5.153163,2.603516,4.365839,6.042052,-4.115802,-7.547686,-5.084496,-2.274024,-5.687986,8.381296,-6.853239,6.281131,9.311240,-0.838574,-8.262968,9.879336,8.710488,7.390720,8.673087,-2.056607,7.874010,-4.410193,-1.156931,1.838068,-2.755174],[-8.002909,2.607600,1.243436,-9.986126,-9.889612,-7.582487,-6.660224,-0.953970,-9.733228,3.859295,-2.111860,-7.463220,-7.573869,3.132601,0.655352,-5.328619,-0.468928,6.021095,6.501205,2.427478,-0.214807,3.319043,9.433529,-2.073402,5.861295,-9.964375,0.192890,0.110560,6.817671,7.305624,-4.508793,-4.963824,6.747265,-4.345446,-6.933162,7.880229,5.795108,7.184189,-3.775476,3.710344,9.103223,7.346790,-5.607728,-7.118816,8.670702,-4.362470,-0.930833,-9.846349,-7.369446,-7.770689,-0.523086,1.126819,-2.157658,-4.714958,1.817716,8.496429,6.300891,2.426521,6.370167,6.382185,6.619172,-1.491361,7.891879,2.155404,3.545026,-0.511477,6.399248,-6.714438,-4.129447,3.099069,-0.925687,3.172322,6.404469,1.422225,-3.975065,-9.980938,-7.802038,0.844275,6.361354,6.081524,-7.561547,6.845260,8.619638,-2.794543,-1.327766,4.754093,-2.015075,8.032697],[7.100389,-0.903646,2.120321,5.562372,1.749702,2.028000,-6.097025,2.086177,-1.471339,-7.913502,-0.256886,-4.190113,-0.155810,3.301614,-2.484654,4.660385,0.086234,4.601493,-3.464343,-4.769697,-4.856452,-2.134273,-0.889095,8.388801,-8.166596,9.140509,-8.814050,-6.094321,3.774197,5.925477,-6.374375,-5.202132,-6.271492,-7.512047,-9.632431,-0.705610,6.112179,4.568976,3.412064,-0.828008,9.864494,-7.441058,2.318958,-9.911586,7.546456,-6.927197,-8.581246,0.673373,7.656761,1.248876,9.148224,-7.641770,3.352368,-1.153016,-0.530566,-7.030844,-1.759194,-1.953536,4.669125,6.231390,-9.021170,-8.553559,-5.983613,-7.988546,-2.342425,1.801546,6.066682,-7.207164,-6.914458,1.667164,2.455641,-8.675644,8.388424,-1.292868,3.988289,8.889881,2.644244,0.377184,5.816522,1.500316,3.715396,3.513629,-9.520642,3.089172,6.441176,-4.575385,0.087364,-3.681184],[3.951900,5.049168,-2.602318,-4.717498,9.110221,7.695866,1.154351,-7.239369,-1.409460,-1.667666,8.214341,3.879954,-0.481242,7.969217,-9.149998,-2.258416,-3.625358,-0.442857,-1.588461,6.972945,-2.960886,1.812669,1.036771,9.962374,0.236649,7.553276,0.389028,3.342273,-6.198255,9.677276,8.519633,-9.079541,-9.073028,-1.816397,5.710066,-1.045129,2.376825,-1.784640,3.032723,-6.462115,0.583322,1.293785,-9.041432,-4.550505,6.684320,2.988426,-2.919932,4.042370,-6.437647,4.037498,2.266145,-8.545645,0.807110,6.472876,-4.577286,-0.116574,1.191145,-3.855580,-8.602376,-5.988450,4.595052,-9.434868,1.866177,-7.100155,-2.681623,-7.457690,4.580071,-2.330161,7.770531,6.502159,6.234358,0.161352,8.391871,-6.980515,-0.393097,8.082994,-4.122919,8.098997,3.351210,0.785934,-8.660795,2.403149,-2.704582,-2.341294,-6.361430,9.825408,8.177264,-5.443865],[8.884388,1.942120,-6.122937,4.624478,-2.384887,-5.131426,-9.062600,4.350880,2.996218,-0.111217,-3.350932,4.619674,-0.845114,-3.876192,8.651495,-6.773799,8.048525,5.453865,-4.508160,-9.055170,8.988459,4.154486,7.380416,-0.678648,3.971994,-9.240585,-8.463463,-9.998863,1.119939,-5.322140,-1.209126,6.002751,-3.072724,0.608574,5.550612,-2.946524,-7.859485,-9.944849,-2.421019,5.471555,0.982959,-0.764997,2.898879,-8.373818,5.852227,-8.443185,3.834899,-8.142103,-5.799560,-2.108561,1.503026,-1.196244,-6.210735,2.422257,-3.482457,5.854960,0.153680,6.232620,-9.718248,8.467391,-4.291085,2.752482,4.757710,-8.442126,4.954684,8.154100,9.059840,3.173833,-8.794080,-9.036154,3.772469,-1.580702,5.454204,9.730146,4.064967,-7.473204,-1.206350,1.075634,7.235592,1.657464,-1.482868,0.689554,8.571204,-9.780538,-8.007754,-0.510884,-8.378442,-5.846291],[-0.257676,7.824483,-9.496305,1.736892,-9.273094,-1.787555,-5.520056,-5.078469,-8.140414,-1.581418,-2.588380,1.241995,-2.211915,-6.586390,-1.347219,-8.377228,1.885013,-1.730397,3.970944,-8.143680,-6.866229,4.393312,2.905562,6.510487,-2.298751,1.358649,-6.574175,3.264801,-2.959679,4.279888,-9.314517,9.388503,-6.607386,3.943773,7.660949,9.653613,-8.807187,3.451357,-1.402625,0.332688,-1.049959,-6.242232,5.379045,9.942849,1.205920,-5.110445,0.354264,9.689194,7.273581,2.623839,9.425476,-4.082697,-8.734830,9.952079,-8.259486,9.923225,1.278396,-5.024367,3.849784,-6.247646,-0.230378,-9.779165,-8.681881,2.328825,-1.209838,-3.923903,8.880136,3.677297,-2.204787,3.324856,8.254936,-0.652025,-5.410947,5.447199,-0.878533,-4.200217,-3.418231,-0.425232,3.614648,-2.996786,4.433210,2.249770,4.393660,-0.710662,1.726483,-6.303736,-7.909975,0.907239],[1.975150,-1.631876,-4.320388,0.594510,9.713781,2.803108,2.818592,-0.541343,-7.220663,-0.595576,-8.858041,-6.590541,-2.206680,-5.704393,6.268223,7.687486,-2.551122,-2.236505,-3.813774,7.022641,-8.584040,-0.470315,-5.303569,-6.419699,-4.652060,-9.711166,3.816352,-6.372350,9.477300,-3.853653,-5.178822,-9.403883,4.494037,2.106216,-8.951716,5.288312,8.463383,-9.978943,-1.167987,2.698858,5.755920,7.168180,-7.640136,-4.211107,-7.688228,-8.310567,-9.006837,1.708878,6.704664,-1.211652,9.277532,-4.690839,5.730848,-8.945209,0.668352,7.585117,0.353794,3.376180,-7.847854,4.358111,-1.898345,-3.249335,-6.424105,-2.148301,-8.812199,1.895995,-1.933343,3.250348,0.180030,6.938070,5.655861,1.196097,7.956592,-3.242842,1.281667,-1.157386,6.823607,-9.261852,-2.953366,2.967248,5.153064,-4.309532,9.915324,-7.872770,2.485005,4.491225,-7.062118,9.274689]], dtype = "float64")#candidate|3378|(7, 88)|const|float64
call_3376 = relay.TupleGetItem(func_3042_call(relay.reshape(var_3377.astype('float32'), [72,]), relay.reshape(const_3378.astype('float64'), [616,]), ), 2)
call_3379 = relay.TupleGetItem(func_3045_call(relay.reshape(var_3377.astype('float32'), [72,]), relay.reshape(const_3378.astype('float64'), [616,]), ), 2)
func_2692_call = mod.get_global_var('func_2692')
func_2695_call = mutated_mod.get_global_var('func_2695')
var_3389 = relay.var("var_3389", dtype = "float32", shape = (539,))#candidate|3389|(539,)|var|float32
call_3388 = func_2692_call(relay.reshape(var_3389.astype('float32'), [11, 7, 7]))
call_3390 = func_2692_call(relay.reshape(var_3389.astype('float32'), [11, 7, 7]))
output = relay.Tuple([bop_3369,call_3376,var_3377,const_3378,call_3388,var_3389,])
output2 = relay.Tuple([bop_3369,call_3379,var_3377,const_3378,call_3390,var_3389,])
func_3394 = relay.Function([var_3367,var_3368,var_3377,var_3389,], output)
mod['func_3394'] = func_3394
mod = relay.transform.InferType()(mod)
mutated_mod['func_3394'] = func_3394
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3394_call = mutated_mod.get_global_var('func_3394')
var_3396 = relay.var("var_3396", dtype = "uint8", shape = (14, 11, 8))#candidate|3396|(14, 11, 8)|var|uint8
var_3397 = relay.var("var_3397", dtype = "uint8", shape = (14, 11, 8))#candidate|3397|(14, 11, 8)|var|uint8
var_3398 = relay.var("var_3398", dtype = "float32", shape = (72,))#candidate|3398|(72,)|var|float32
var_3399 = relay.var("var_3399", dtype = "float32", shape = (539,))#candidate|3399|(539,)|var|float32
call_3395 = func_3394_call(var_3396,var_3397,var_3398,var_3399,)
output = call_3395
func_3400 = relay.Function([var_3396,var_3397,var_3398,var_3399,], output)
mutated_mod['func_3400'] = func_3400
mutated_mod = relay.transform.InferType()(mutated_mod)
var_3412 = relay.var("var_3412", dtype = "float64", shape = (6, 3, 7))#candidate|3412|(6, 3, 7)|var|float64
uop_3413 = relay.sinh(var_3412.astype('float64')) # shape=(6, 3, 7)
uop_3418 = relay.tan(var_3412.astype('float64')) # shape=(6, 3, 7)
output = relay.Tuple([uop_3413,uop_3418,])
output2 = relay.Tuple([uop_3413,uop_3418,])
func_3420 = relay.Function([var_3412,], output)
mod['func_3420'] = func_3420
mod = relay.transform.InferType()(mod)
var_3421 = relay.var("var_3421", dtype = "float64", shape = (6, 3, 7))#candidate|3421|(6, 3, 7)|var|float64
output = func_3420(var_3421)
func_3422 = relay.Function([var_3421], output)
mutated_mod['func_3422'] = func_3422
mutated_mod = relay.transform.InferType()(mutated_mod)
var_3489 = relay.var("var_3489", dtype = "float64", shape = (15, 9, 14))#candidate|3489|(15, 9, 14)|var|float64
uop_3490 = relay.log2(var_3489.astype('float64')) # shape=(15, 9, 14)
func_2061_call = mod.get_global_var('func_2061')
func_2065_call = mutated_mod.get_global_var('func_2065')
var_3494 = relay.var("var_3494", dtype = "uint32", shape = (196,))#candidate|3494|(196,)|var|uint32
var_3495 = relay.var("var_3495", dtype = "float64", shape = (15, 1))#candidate|3495|(15, 1)|var|float64
call_3493 = relay.TupleGetItem(func_2061_call(relay.reshape(var_3494.astype('uint32'), [4, 7, 7]), relay.reshape(var_3495.astype('float64'), [15,]), ), 4)
call_3496 = relay.TupleGetItem(func_2065_call(relay.reshape(var_3494.astype('uint32'), [4, 7, 7]), relay.reshape(var_3495.astype('float64'), [15,]), ), 4)
uop_3508 = relay.exp(uop_3490.astype('float64')) # shape=(15, 9, 14)
output = relay.Tuple([call_3493,var_3494,var_3495,uop_3508,])
output2 = relay.Tuple([call_3496,var_3494,var_3495,uop_3508,])
func_3522 = relay.Function([var_3489,var_3494,var_3495,], output)
mod['func_3522'] = func_3522
mod = relay.transform.InferType()(mod)
mutated_mod['func_3522'] = func_3522
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3522_call = mutated_mod.get_global_var('func_3522')
var_3524 = relay.var("var_3524", dtype = "float64", shape = (15, 9, 14))#candidate|3524|(15, 9, 14)|var|float64
var_3525 = relay.var("var_3525", dtype = "uint32", shape = (196,))#candidate|3525|(196,)|var|uint32
var_3526 = relay.var("var_3526", dtype = "float64", shape = (15, 1))#candidate|3526|(15, 1)|var|float64
call_3523 = func_3522_call(var_3524,var_3525,var_3526,)
output = call_3523
func_3527 = relay.Function([var_3524,var_3525,var_3526,], output)
mutated_mod['func_3527'] = func_3527
mutated_mod = relay.transform.InferType()(mutated_mod)
const_3886 = relay.const([[[-6,6,-8,-1,9],[4,5,-7,-3,-1],[6,-2,7,2,-5],[-4,4,3,6,-6],[-4,-8,-8,-5,-5],[-7,4,-4,9,1],[-2,3,4,2,1]],[[-9,-8,4,-4,-10],[7,-2,7,2,-3],[-7,9,-3,-7,-4],[-10,-3,-10,8,-10],[-2,4,-8,1,6],[-6,-9,7,7,-4],[4,4,4,-6,7]],[[-9,-3,-7,5,-2],[2,-7,10,-10,10],[7,-9,1,6,-6],[-3,4,-9,6,8],[8,-5,-10,1,-3],[-5,-4,5,8,3],[4,10,-4,10,-4]]], dtype = "uint32")#candidate|3886|(3, 7, 5)|const|uint32
var_3887 = relay.var("var_3887", dtype = "uint32", shape = (3, 7, 5))#candidate|3887|(3, 7, 5)|var|uint32
bop_3888 = relay.add(const_3886.astype('uint32'), relay.reshape(var_3887.astype('uint32'), relay.shape_of(const_3886))) # shape=(3, 7, 5)
output = bop_3888
output2 = bop_3888
func_3899 = relay.Function([var_3887,], output)
mod['func_3899'] = func_3899
mod = relay.transform.InferType()(mod)
var_3900 = relay.var("var_3900", dtype = "uint32", shape = (3, 7, 5))#candidate|3900|(3, 7, 5)|var|uint32
output = func_3899(var_3900)
func_3901 = relay.Function([var_3900], output)
mutated_mod['func_3901'] = func_3901
mutated_mod = relay.transform.InferType()(mutated_mod)
var_3905 = relay.var("var_3905", dtype = "float64", shape = (3, 13, 15))#candidate|3905|(3, 13, 15)|var|float64
uop_3906 = relay.cos(var_3905.astype('float64')) # shape=(3, 13, 15)
output = uop_3906
output2 = uop_3906
func_3908 = relay.Function([var_3905,], output)
mod['func_3908'] = func_3908
mod = relay.transform.InferType()(mod)
var_3909 = relay.var("var_3909", dtype = "float64", shape = (3, 13, 15))#candidate|3909|(3, 13, 15)|var|float64
output = func_3908(var_3909)
func_3910 = relay.Function([var_3909], output)
mutated_mod['func_3910'] = func_3910
mutated_mod = relay.transform.InferType()(mutated_mod)
var_4670 = relay.var("var_4670", dtype = "uint16", shape = (2, 16, 8))#candidate|4670|(2, 16, 8)|var|uint16
var_4671 = relay.var("var_4671", dtype = "uint16", shape = (2, 16, 8))#candidate|4671|(2, 16, 8)|var|uint16
bop_4672 = relay.maximum(var_4670.astype('uint16'), relay.reshape(var_4671.astype('uint16'), relay.shape_of(var_4670))) # shape=(2, 16, 8)
func_590_call = mod.get_global_var('func_590')
func_592_call = mutated_mod.get_global_var('func_592')
const_4676 = relay.const([[-3.792762,-9.295514,4.290712,4.179405,-9.768026,-0.758389,-5.133842,2.255637,-9.855086,-0.930995,6.991369,9.825069,-1.256785,-8.794714,9.046243,1.893465,5.886479,-1.157310,8.514055,-1.521027,7.697011,-9.203155,-7.215060,0.187427,-8.280605,-2.844682,-3.954577,9.544660,3.681103,9.984840,9.308092,-3.454877,-7.599757,-7.244306,-3.822156,1.528604,5.489497,-3.769455,7.942024,-7.228498,7.132932,-0.949514,-2.941001,-8.633908,6.863970,-8.356706,-4.283523,6.909384,-6.604397,-0.520303,-6.771282,-8.950627,-0.417163,1.674890,1.588402,0.279741,-3.288746,-9.570125,9.389456,-5.814488,-4.264009,-2.171553,8.244746,8.510194,2.076087,6.879052,4.024262,4.310749,-8.158054,5.674032,-0.663229,-6.463609,-1.714965,5.936604,4.773052,-0.997794,-7.348174,-2.974315,-5.989034,5.402348,-0.436404,6.189577,7.546386,1.452005,4.536469,3.157522,5.720415,3.794673,-1.516145,0.743399,-9.098848,3.555851,-0.570412,8.141664,8.998660,-4.203658,1.682391,3.705336,-8.310141,-1.960868,3.675853,3.700166,8.730054,4.167576,2.237959,2.917320,-7.792839,9.484988,-2.094000,-1.378907,5.413146,3.265055,-9.830703,5.787992,1.314532,6.216746,9.598741,4.980838,3.463003,-2.823065,-0.596789,-5.489712,-1.828097,9.249108,-4.838179,-2.948870,6.268717,-3.166344,-1.855242,-6.612853,0.834099,4.465679,6.683363,8.492319,3.482933,0.400746,6.873270,-2.430720,9.708287,1.419924,0.207419,-0.355387,8.210331,1.616318,-4.134347,-4.716588,0.012680,7.889146,-6.018740,3.138071,-8.081019,2.498497,-8.800596,-2.859636,-4.374407,-6.335840,6.464195,-6.276649,5.373820,8.283301,1.012093,-3.238876,0.391958,3.813040,-5.150864,8.392001,-1.042006,2.601934,-0.474581,-3.056831,7.452475,8.657157,5.358044,0.693628,7.082529,2.466031,-1.343979,5.972805,9.299418,-7.837598,0.475105,-2.201789,-7.746602,-1.949492,2.403434,6.258270,1.302387,-1.882435,-2.153133,-4.631497,-0.572492,8.448387,6.891416,-7.215788,5.360036,-2.415523,-0.848904,-9.469805,-0.463990,6.895545,-5.073723,-4.705897,8.813917,-3.976175,0.754171,4.432713,-9.571479,-0.849028,7.386190,-3.045549,7.767674,8.903735,-5.903450,6.336569,4.100785,-2.677435,7.727114,6.251274,5.256904,3.804980,-2.058449,-4.723343,9.394624,-1.783314,1.294684,8.102152,-6.653487,-1.929939,1.963292,1.342213,9.689082,-4.150861,1.487166,0.914520,6.638818,3.846915,-7.286584,7.973674,-3.740236,-7.498978,-4.420997,4.603108,2.415020,4.787284,1.681130,5.343645,1.608858,6.314724,6.635385,2.710773,5.310944,3.785182,5.718233,4.098487,-5.772441,1.113462,-7.232829,4.093073,5.044655,-9.904833,-8.323442,8.538541,2.540960,-9.646348,9.563861,1.455648,-9.898468,-5.156120,1.722878,1.220357,-0.514988,0.861778,4.203392,-5.015949,2.964736,2.735930,-4.308957,6.062963,-5.790008,-0.385035,-7.404742,-5.077975,-2.740445,-1.803177,5.095006,-2.969474,-4.183877,-7.223994,-5.678635,-5.521079,2.637415,9.656518,-4.665382,7.561573,-0.144346,5.099519,8.353572,8.697010,-8.218706,-1.689193,-7.781242,0.913874,-8.707459,-4.015342,-0.940409,-9.083857,9.892009,0.211623,1.514077,-5.218724,9.534999,-0.158868,6.672718,-2.485165,4.002648,5.543129,0.285982,-6.351407,-9.133025,6.994156,-0.255143,-2.633625,1.164632,2.203944,-4.498896,9.574718,7.550853,0.007446,0.839815,2.831770,-8.010493,-8.597179,3.586525,0.286197,-1.584133,5.569537,-4.679717,-5.426395,7.987211,-7.021986,1.082320,5.795678,7.984498,6.630628,3.550692,8.717369,-7.236009,9.830536,4.017097,4.972018,8.839714,-1.032135,6.431991,-9.144267,-1.504197,-0.397644,-6.697749,4.377673,-1.143739,-3.074840,1.039190,1.884265,-3.306197,0.329027,7.947289,8.859635,0.334917,2.178473,-2.546936,-1.170748,-3.913576,-2.278329,-1.545356,7.505296,-1.319784,-3.754716,8.439037,7.432009,6.582071,0.957202,-5.521705,2.703632,-8.322924,-7.079530,-3.713847,-3.313817,8.517239,4.111883,-9.139467,9.574742,5.776029,-8.585161,6.951100,-8.509233,-6.130898,-4.916233,-7.118294,1.954787,-4.941937,1.881868,-5.821963,4.791933,-1.383692,8.732085,5.187950,5.608496,5.020047,-7.610928,-4.454507,2.343292,-8.163406,1.292721,1.857183,-7.528840,-7.747671,0.581177,7.488989,-8.982666,6.510859,-2.178031,-3.601497,1.937730,3.736209,9.544413,-0.463840,-3.932190,-4.807223,5.336434,-8.436474,2.332546,4.027611,4.870447,4.641312,-8.067994,-2.175521,-0.125037,1.186337,-1.766121,5.880648,-2.431243,-9.557237,-0.696734,-5.823989,-6.367189,8.497817,3.175546,-2.515978,1.176173,-5.381316,6.076891,-1.184697,-1.270553,3.067059,-6.735650,-0.233843,1.312932,-8.747266,3.586760,4.275394,3.460941,6.488369,-7.913206,-9.747670,8.453252,2.470750,7.368713,-1.018427,8.884876,-8.758319,-6.222437,-4.181213,8.557714,-2.484736,8.417838,-9.570330,-0.070746,2.864289,-5.934863,0.953106,0.098442,-8.855089,-3.945858,-3.877256,-8.683116,-7.201885,9.524808,-6.863396,2.003485,5.663801,5.996419,3.820906,0.013429,-2.386565,-2.154933,7.671918,-3.954720,-7.978761,0.617348,1.295482,1.440221,-8.528453,-9.189267,3.742531,5.621524,3.935531,0.476491,0.542475,5.729413,-9.962800,1.974155,3.821423,6.169011,-2.785993,-4.307817,-9.785019,2.812993,-0.684571,-3.089370,6.001110,-8.158797,-1.273148,-1.354351,-0.580210,1.697050,0.045827,7.231100,-0.705764,5.698355,2.307584,-7.509364,8.600859,-6.461729,-7.508757,-7.442255,2.177422,-8.651159,-0.159511,7.555594,-5.668728,8.398936,6.577311,3.390565,0.736560,-3.346519,-6.440480,-5.643316,7.913699,-6.033186,8.618356,8.995462,6.331614,-5.984504,-5.859112,4.298492,-2.790852,9.381064,3.548598,-8.527770,7.703620,9.947698,2.658578,7.871815,-4.911958,-4.920011,-3.245091,-5.213228,5.091830,4.957644,-6.874525,4.229755,7.148715,-1.505427,3.520255,7.625244,-2.006617,-1.525098,9.015767,-9.878106,8.406492,1.639977,-2.889201,-9.853145,1.520024,-3.341980,-4.766967,-9.330630,-6.562928,-2.441220,3.257584,-1.070438,-5.528312,-4.541171,-8.143694,5.324503,7.251343,-6.926353,1.723315,-8.538725,-5.022459,-0.934398,-1.408742,1.266547,-3.267725,-6.609588,5.892155,9.821902,4.401522,3.462357,-6.006438,-3.732664,-3.697801,8.660373,6.807300,-6.553435,-5.672742,-2.083187]], dtype = "float64")#candidate|4676|(1, 616)|const|float64
call_4675 = relay.TupleGetItem(func_590_call(relay.reshape(const_4676.astype('float64'), [1, 616])), 0)
call_4677 = relay.TupleGetItem(func_592_call(relay.reshape(const_4676.astype('float64'), [1, 616])), 0)
output = relay.Tuple([bop_4672,call_4675,const_4676,])
output2 = relay.Tuple([bop_4672,call_4677,const_4676,])
func_4679 = relay.Function([var_4670,var_4671,], output)
mod['func_4679'] = func_4679
mod = relay.transform.InferType()(mod)
mutated_mod['func_4679'] = func_4679
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4679_call = mutated_mod.get_global_var('func_4679')
var_4681 = relay.var("var_4681", dtype = "uint16", shape = (2, 16, 8))#candidate|4681|(2, 16, 8)|var|uint16
var_4682 = relay.var("var_4682", dtype = "uint16", shape = (2, 16, 8))#candidate|4682|(2, 16, 8)|var|uint16
call_4680 = func_4679_call(var_4681,var_4682,)
output = call_4680
func_4683 = relay.Function([var_4681,var_4682,], output)
mutated_mod['func_4683'] = func_4683
mutated_mod = relay.transform.InferType()(mutated_mod)
var_5266 = relay.var("var_5266", dtype = "int8", shape = ())#candidate|5266|()|var|int8
const_5267 = relay.const([[[4,-6,-2,6,4,-2],[9,2,4,-5,8,-3],[-7,-1,-4,2,4,5],[-7,-8,4,-2,8,8],[6,3,5,-10,6,3],[-6,-10,-10,-8,7,-10],[8,5,5,-7,7,6],[-3,4,-10,1,-1,8]]], dtype = "int8")#candidate|5267|(1, 8, 6)|const|int8
bop_5268 = relay.greater(var_5266.astype('bool'), const_5267.astype('bool')) # shape=(1, 8, 6)
output = bop_5268
output2 = bop_5268
func_5277 = relay.Function([var_5266,], output)
mod['func_5277'] = func_5277
mod = relay.transform.InferType()(mod)
mutated_mod['func_5277'] = func_5277
mutated_mod = relay.transform.InferType()(mutated_mod)
var_5278 = relay.var("var_5278", dtype = "int8", shape = ())#candidate|5278|()|var|int8
func_5277_call = mutated_mod.get_global_var('func_5277')
call_5279 = func_5277_call(var_5278)
output = call_5279
func_5280 = relay.Function([var_5278], output)
mutated_mod['func_5280'] = func_5280
mutated_mod = relay.transform.InferType()(mutated_mod)
var_5624 = relay.var("var_5624", dtype = "float64", shape = ())#candidate|5624|()|var|float64
var_5625 = relay.var("var_5625", dtype = "float64", shape = (7, 7, 2))#candidate|5625|(7, 7, 2)|var|float64
bop_5626 = relay.mod(var_5624.astype('float64'), var_5625.astype('float64')) # shape=(7, 7, 2)
func_1001_call = mod.get_global_var('func_1001')
func_1003_call = mutated_mod.get_global_var('func_1003')
const_5630 = relay.const([[-8.901872],[4.573584],[-9.108508],[0.512079],[-2.460708],[-6.488675],[5.364414],[4.341379],[-0.255744],[-1.116081],[-4.474467],[2.282363],[7.244948],[6.185006],[1.460187],[8.628735],[9.317829],[4.087340],[7.191702],[-1.077463],[6.783401],[8.150416],[-3.885961],[9.792045],[5.603899],[-0.568643],[-3.831059],[-5.876147],[-1.407450],[1.532497],[9.203260],[1.214976],[-5.269901],[-2.256179],[-2.995501],[9.770801],[9.460569],[-8.019895],[7.816910],[-7.253169],[-7.578065],[9.356238],[0.475191],[-2.065204],[8.719864],[2.183873],[1.574192],[-6.003923],[8.423041],[8.941939],[2.812510],[9.054150],[4.084447],[-9.581680],[3.088964],[9.635748],[2.942171],[-6.014366],[6.064305],[-0.619140],[1.060290],[0.215931],[8.343852],[-6.889249],[4.518491],[-7.538491],[-6.051876],[3.257992],[1.364268],[6.125583],[1.584074],[-0.536034],[0.698037],[8.670431],[-2.139048],[3.756506],[5.046628],[-4.850531],[-1.095204],[7.544386],[-0.957053],[6.805864],[3.949957],[-0.167752],[-1.717863],[-7.885426],[2.555400],[9.640049],[7.253965],[1.234810],[-7.536579],[1.125609],[1.748819],[-4.205697],[-2.581031],[9.729490],[8.657352],[-9.877455],[-5.567598],[-4.518405],[-6.981437],[-7.169660],[8.579801],[-1.591076],[-7.340791],[-0.628451],[-6.726210],[-1.552344],[0.673143],[-2.707106],[-1.066947],[-1.424869],[-0.758605],[-6.325191],[-8.903053],[6.860220],[6.613198],[-9.611634],[2.542176],[-9.498262],[-1.692582],[6.966607],[-6.489035],[-5.724372],[-4.476898],[-9.774592],[5.057095],[0.456768],[6.683976],[-4.927700],[-5.189485],[-4.067278],[1.635100],[-9.517410],[4.005069],[-1.512305],[-1.401846],[-6.346476],[7.389113],[-4.343972],[5.308334],[-2.091820],[-2.843064],[-6.005451],[8.201539],[0.083591],[9.725509],[-9.534536],[-4.460424],[3.259478],[6.211245],[9.991365],[1.634237],[-7.614320],[-0.891759],[4.449857],[8.002052],[-7.301554],[8.679677],[9.964915],[3.948548],[-7.986133],[-5.021630],[9.210680],[8.187608],[-7.081860],[-6.202110],[-3.723162],[-3.418148],[-5.730406],[-5.868558],[-6.611407],[4.808242],[5.988401],[-0.495248],[-0.524646],[6.363640],[-7.359767],[2.599275],[-7.708971],[-3.554502],[5.230191],[-9.698453],[4.185618],[-9.873799],[9.520608],[0.762473],[0.048699],[7.419944],[8.011719],[0.033425],[3.786304],[-3.212584],[9.844755],[-4.785320],[-2.058827],[-5.745250],[3.172736],[-3.994635],[6.832330],[8.369651],[6.835048],[6.871966],[5.613601],[7.894373],[-2.725818],[-8.080896],[9.316433],[4.488758],[-6.109899],[-9.619982],[-2.123948],[-8.313492],[7.485906],[-8.041081],[-5.775485],[6.477680],[-8.184570],[-8.668279],[4.186308],[-2.673859],[-4.784744],[-4.669035],[4.830200],[-6.540336],[8.859287],[5.976857],[-9.116164],[0.095919],[-6.134749],[-5.505681],[4.510402],[-3.732908],[-9.816676],[-3.577113],[-2.712223],[0.174283],[5.540778],[-3.606361],[0.064070],[6.922350],[7.728815],[0.364538],[-9.446861],[5.107809],[-2.790761],[9.131035],[9.017427],[-7.957692],[-5.312293],[-1.004084],[9.308512],[-4.997637],[3.433343],[-5.949343],[2.893298],[4.903836],[-6.344035],[-5.297595],[2.204918],[0.274999],[-8.393733],[-6.220920],[-1.560161],[1.739386],[4.466863],[1.913028],[-3.254378],[6.184133],[-2.174566],[-7.011790],[2.253481],[-7.652052],[-6.357255],[0.233657],[-3.219852],[-8.434399],[4.791453],[-0.100739],[9.619222],[7.165467],[7.549077],[3.007030],[-0.313444],[9.094999],[-6.679663],[-5.203495],[3.778059],[7.322861],[-2.852847],[-7.732137],[8.615895],[0.266425],[4.746071],[-2.603062],[1.327221],[4.430819],[-3.024950],[-2.153991],[1.888859],[6.345049],[-3.782876],[-6.485525],[-1.032520],[2.302157],[-2.795982],[7.339025],[-0.567353],[-5.487534],[5.415513],[-5.669009],[-5.891827],[4.457536],[5.049482],[4.941130],[-4.871401],[-4.914088],[4.830198],[-8.061284],[5.180293],[-7.908787],[3.514821],[8.039523],[-8.062462],[2.948167],[8.469855],[-5.584944],[0.612524],[-2.947372],[-8.800292],[-5.717719],[4.266486],[8.066797],[5.974266],[-4.107474],[5.911231],[-3.455948],[3.660923],[3.552947],[5.107269],[3.890326],[-3.823361],[0.928626],[6.974899],[-7.825769],[5.146528],[-3.098491],[-8.207588],[8.971243],[-4.820266],[-3.553557],[-0.188220],[-1.484171],[-5.060088],[0.419130],[2.814514],[-7.903650],[7.995052],[7.018468],[-7.541834],[-9.519026],[-2.199030],[-7.469098],[-8.291339],[-2.789095],[0.764858],[-5.706772],[7.780045],[4.106900],[-5.407728],[-1.625446],[0.773471],[-0.129011],[-2.597183],[-4.159358],[7.818637],[-4.795375],[2.142588],[-4.689660],[2.454151],[-8.080612],[4.711358],[-3.045222],[-5.110846],[9.049699],[1.489016],[-0.825286],[-3.131004],[1.223070],[-0.621981],[1.404930],[-3.160963],[-4.967295],[-8.628668],[0.534502],[0.558268],[1.636043],[-1.143144],[-8.475655],[1.733990],[-4.122723],[6.598395],[-7.659684],[9.092644],[-8.558285],[1.643273],[2.744168],[2.903057],[3.436461],[5.423357],[3.629376],[2.758647],[4.277418],[1.154638],[-9.818872],[7.749951],[8.654424],[2.194181],[2.741751],[0.237086],[-3.632961],[6.321541],[-0.361321],[5.558553],[6.971491],[-0.918511],[-1.709275],[5.989573],[7.305044],[2.830937],[3.559784],[-3.235648],[4.963164],[-2.594729],[-6.532455],[-0.685156],[-2.444931],[2.187957],[-5.314889],[7.904471],[8.306286],[6.346939],[1.945415],[5.150535],[6.527895],[-5.250363],[-9.915868],[2.015513],[-1.075101],[-2.851807],[1.828448],[5.293044],[-7.925779],[-5.442286],[-7.183363],[-2.999516],[7.382364],[5.639411],[-2.945324],[1.067306],[9.114175],[4.883332],[7.947334],[2.258848],[-0.346201],[-4.641733],[-8.902377],[-8.497669],[-1.479868],[7.712581],[-4.257621],[-6.611754],[5.431860],[-7.581219],[7.721871],[7.547208],[7.077034],[-8.945457],[8.168971],[-2.927817],[2.662688],[9.370239],[-1.324004],[-0.724091],[-5.296802],[8.906977],[-7.267478],[-5.389504],[4.982466],[5.476808],[2.235821],[9.183400],[6.130972],[5.818369],[0.043161],[7.835284],[-1.848120],[-1.243800],[-8.200105],[-5.790656],[9.987021],[8.752910],[6.619822],[3.907015],[-9.910603],[3.537188],[-0.221874],[-0.229807],[-5.399945],[-8.622970],[4.885452],[-8.532877],[0.515825],[-2.308163],[-4.629301],[-2.019226],[0.152567],[4.002545],[-3.221648],[0.430473],[5.180656],[-3.037098],[-6.830194],[-9.687977],[-5.493169],[-5.594276],[-6.627403],[9.513570],[-4.944916],[8.715772],[-3.182924],[-1.129992],[7.491496],[2.242850],[-0.193311],[-1.355418],[7.406687],[7.956737],[3.161044],[2.511076],[4.246611],[6.734186],[-3.530323],[1.844099],[-4.763223],[5.525263],[-5.549572],[-3.009982],[7.162109],[7.932265],[4.017066],[-5.157106],[-6.386595],[-8.419881],[0.834207],[9.716759],[4.027716],[-8.841896],[-2.346094],[-8.650811],[-3.760474],[8.299809],[8.415220],[-3.861381],[1.027278],[4.751137],[4.123349],[-0.809280],[3.117511],[1.666555],[-8.769310],[5.427288],[5.658043],[0.646892],[3.251510],[-0.975381],[-1.424401],[7.287015],[-5.155088],[-2.059720],[7.723712],[-0.160436],[6.662839],[4.861486],[3.292277],[0.089592],[8.588373],[8.420264],[-8.015234],[-8.421344],[3.866701],[7.475842],[3.100525],[6.410882],[-0.187507],[1.494364],[7.919392],[-7.569261],[-6.786994],[-0.493266],[-1.953598],[7.693574],[-6.952055],[-8.025087],[-8.764114],[0.116531],[-4.746380],[7.353709],[8.174468],[9.197442],[-5.238831],[6.782435],[-0.558717],[6.897131],[5.856557],[-7.589542],[7.721052],[-8.150720],[-5.819713],[4.841491],[8.581321],[-7.610141],[4.743297],[1.572731],[7.537075],[0.001452],[-1.473427],[8.050748],[-8.714528],[3.013039],[-9.194521],[-1.860447],[-4.682931],[-8.390932],[6.889055],[5.833758],[-2.008800],[-1.730504],[9.922896],[-4.905544],[-5.516733],[-9.939896],[-3.714524],[9.212550],[-7.538862],[4.787430],[-6.829807],[8.478613],[-2.978682],[-2.048213],[2.031817],[-5.542821],[0.418217],[7.377945],[3.537072],[7.867946],[9.105342],[-5.987171],[-9.795516],[3.030271],[-7.069846],[3.476629],[-5.143351],[2.815403],[-3.582158],[-5.510428],[1.448376],[6.259734],[-2.538986],[1.357738],[-0.333232],[8.967014],[3.936641],[-5.903052],[-9.190652],[-9.010137],[-2.443104],[1.605298],[-3.914729],[3.353852],[-1.743682],[-3.838850],[-4.744433],[7.237228],[7.935824],[-2.266999],[9.968085],[4.772136],[5.469550],[-5.527641],[3.371263],[6.939778],[2.813830],[-1.237325],[9.839416],[-7.635089],[-9.968636],[-7.591264],[0.888034],[2.131414],[-7.502995],[-2.975395],[5.307487],[-8.163560],[8.278565],[-7.415269],[-6.645397],[-2.236651],[9.584457],[3.930034],[-6.724171],[-6.686142],[4.498684],[-5.661255],[-9.479729],[8.243893],[7.479478],[2.717351],[7.411358],[-3.394973],[-2.324276],[-0.134039],[-9.869073],[-3.831244],[8.994627],[-4.485934],[-8.705790],[-6.650998],[4.584938],[-6.167842],[-3.377809],[0.739334],[3.019052],[2.788298],[-8.089294],[-6.609082],[-5.820807],[1.523126],[3.959295],[-2.896329],[-5.640621],[4.227576],[-0.703108],[-3.191359],[-5.503381],[6.954841],[-3.927505],[-6.716106],[8.832365],[-9.925182],[1.667681],[2.580444],[7.655130],[-6.778112],[-4.789292],[-7.169655],[-8.137386],[0.343484],[5.196704],[-7.532291],[-3.667578],[0.810130],[-8.864235],[2.080696],[4.086321],[-9.723399],[-4.745504],[-7.550497],[-0.716441],[-4.599137],[-9.557911],[3.796105],[-3.399395],[2.781883],[-2.837124],[1.913637],[3.964935],[3.253850],[2.032749],[-9.470128],[0.229240],[4.639314],[-4.326827],[6.329857],[1.138944],[5.787062],[-8.595659],[-4.176735],[-6.773069],[6.737183],[1.620825],[2.850611],[1.424061],[5.849869],[2.494863],[0.315382],[-7.296384],[-4.426047],[-7.726855],[9.908538],[-9.570035],[5.603552],[-6.639635],[5.075712],[1.801637],[8.970400],[-9.024498],[-2.590527],[-1.905920],[-0.547105],[5.002357],[-8.614862],[-5.951629],[-3.502839],[-0.904504],[-2.602261],[-1.285700],[-0.294891],[6.318753],[2.100306],[-1.999867],[-9.423747],[-8.317664],[-7.304538],[-1.411295],[-0.889443],[-1.546252],[6.701879],[-9.169961],[7.459438],[4.048115],[1.151010],[-8.869586],[-9.185348],[8.308052],[-7.896623],[3.960796],[-7.131833],[3.694577],[-4.391498],[7.022013],[5.078635],[7.166320],[4.708454],[-5.174886],[-6.125235],[-0.196621],[-0.330842],[6.085152],[5.099356],[-5.893545],[-6.656096],[-6.156587],[7.806259],[0.263042],[2.584552],[4.959800],[-6.097455],[6.511048],[-0.384379],[9.047307],[0.983526],[-5.004815],[-4.031564],[1.132713],[-4.808500],[9.315299],[9.274716],[-6.848219],[-0.747897],[-8.558945],[-4.995653],[-9.769897],[-5.223709],[-8.037414],[-5.957235],[7.405330],[-5.736616],[0.494784],[-9.140030],[-3.219256],[-1.255783],[9.418451],[3.954356],[5.678149],[-9.525484],[7.507105],[8.923902],[3.710014],[9.400216],[-4.997808],[6.429476],[2.583730],[6.550672],[-3.174696],[9.628185],[-2.291356],[0.279053],[6.286078],[5.640144],[-7.153852],[-8.430038],[3.496240],[5.538939],[9.180714],[-8.252886],[-7.525362],[-7.272285],[6.309413],[-2.088016],[2.483045],[-7.747575],[-0.915141],[2.728904],[-2.668353],[-5.886107],[-2.856198],[-3.631036],[-0.829539],[6.612705],[-2.492281],[3.946940],[7.915371],[5.955586],[4.090738],[9.937463],[7.839868],[-7.772783],[2.038360],[-4.719847],[1.780730],[-7.967932],[7.104586],[8.907692],[-9.898380],[-8.873127],[-2.722540],[-0.949732],[1.009792],[1.670622],[6.927569],[1.848678],[-2.900453],[-1.194975],[8.417143],[-9.382696],[9.132258],[0.565200],[7.181406],[-3.098955],[7.287901],[0.071926],[-4.102255],[6.373169],[1.988419],[-0.822459],[8.564070],[7.119125],[-9.166311],[3.647311],[-7.104358],[-0.013491],[-4.310324],[8.167542],[-6.574467],[-1.132081],[-1.490573],[8.900286],[2.954476],[-8.810157],[6.023995],[9.331265],[-0.315185],[6.797206],[1.089276],[-4.103067],[-0.008437],[0.203502],[-5.147210],[-9.668399],[5.115142],[-7.104652],[-2.017293],[-2.589033],[6.892997],[-3.528833],[-3.616309],[6.135366],[6.625384],[6.128255],[-0.425557],[-5.398049],[-1.558521],[7.553576],[-4.186602],[8.643911],[-0.174022],[9.514821],[7.117899],[-0.276634],[-7.039886],[-2.624646],[0.728330],[0.869153],[-1.424761],[6.058503],[0.867156],[1.240728],[0.453340],[-3.740101],[-5.732608],[8.391152],[-7.225003],[-0.511647],[8.648726],[-6.585443],[0.506236],[-9.150124],[-0.630077],[7.085520],[-6.608353],[2.988083],[3.250392],[5.812648],[-3.054089],[-2.219971],[8.831781],[6.490230],[7.907283],[5.759501],[9.926549],[-5.996337],[-1.388838],[5.585456],[3.375146],[8.690824],[7.360443],[4.632917],[7.363534],[3.373662],[-4.018689],[0.674236],[-9.562486],[2.370906],[-5.524788],[-2.765891],[-4.453624],[-4.502124],[3.455197],[-9.833347],[4.665796],[-4.247007],[-5.529367],[3.989681],[-5.458597],[2.003932],[-3.748039],[-7.565048],[-3.197880],[-7.806821],[-8.392404],[-3.784742],[-9.169892],[-6.786969],[-0.522417],[-9.274476],[-5.610659],[-0.986487],[-9.529247],[3.674005],[-2.100427],[7.810664],[9.466018],[6.862819],[-5.760759],[-6.158555],[-3.945649],[0.612661],[0.120154],[-7.850640],[-0.435262],[0.496752],[0.117422],[-4.291448],[0.401165],[-4.468443],[-7.995073],[2.615087],[3.352427],[0.420563],[-8.359933],[7.401856],[-1.320095],[7.153329],[-7.845804],[2.578428],[-1.995452],[4.237636],[-6.685188],[5.174346],[3.681004],[-1.922980],[-0.970082],[7.943275],[-9.410214],[6.823065],[-0.543202],[-3.859433],[4.848486],[3.681258],[2.944033],[7.215011],[9.945791],[-0.547471],[-9.266245],[-9.692890],[6.517940],[4.701624],[-7.820154],[-2.017879],[-1.483437],[2.361050],[-1.705544],[7.366007],[-6.211294],[3.538117],[-1.461471],[1.950955],[9.764499],[6.655084],[-6.081150],[-4.775647],[-6.222029],[1.421295],[-8.827208],[-6.853587],[4.082891],[-2.386017],[3.521415],[2.634823],[-7.256786],[0.198653],[6.921114],[-4.563612],[-2.026953],[-9.133836],[9.165333],[6.938227],[7.755016],[-9.708011],[-6.576847],[-6.726002],[3.325796],[7.014680],[-1.720180],[-0.433753],[7.661845],[3.299794],[-3.481478],[5.862366],[-1.226369],[0.725625],[-7.102619],[7.756383],[8.066796],[-2.822580],[-1.460544],[8.090778],[6.895724],[-9.527692],[-4.362288],[-2.926078],[4.794659],[-9.162467],[4.494806],[-6.669828],[-3.709257],[-7.366696],[-9.806814],[-8.696388],[3.227936],[6.778347],[3.994837],[5.269578],[3.702704],[-2.194336],[-3.180496],[0.406477],[7.544387],[-0.531676],[-8.932635],[-0.111077],[-7.246527],[0.890647],[-7.390604],[1.240891],[-4.370949],[-9.273780],[3.659100],[-9.811950],[6.494332],[-6.184038],[8.877904],[6.720636],[-2.542133],[-0.198163],[5.889138],[5.528442],[1.326454],[-3.140160],[-7.830084],[8.931124],[7.662252],[-9.627078],[-9.681091],[6.655257],[9.806357],[0.421145],[-6.186351],[5.169782],[-8.683889],[3.826087],[-7.270485],[-3.115800],[1.381346],[-2.268284],[-2.567947],[6.535436],[7.645966],[-9.105858],[-9.896506],[6.068387],[-9.983836],[2.045450],[-9.795495],[9.108505],[-5.857508],[-9.198966],[1.409132],[-7.033779],[2.138775],[-6.129979],[-1.503037],[5.088331],[1.476713],[5.050600],[-0.768368],[9.916019],[-2.331292],[8.547488],[-9.514246],[0.615081],[1.314656],[9.350553],[-7.942898],[9.658405],[-2.707621],[9.285871],[9.238658],[-2.694491],[2.218615],[0.573616],[4.992856],[-7.491724],[3.993585],[-0.808934],[-4.181758],[-8.911728],[3.870854],[-6.378750],[7.387533],[4.071652],[4.579054],[-8.496982],[-6.367613],[4.908038],[2.598408],[2.176606],[2.549665],[-3.153925],[0.503028],[-4.970017],[-7.004292],[1.167852],[2.647467],[-2.361095],[4.828357],[-8.191535],[-7.658336],[-3.321159],[-3.651477],[-2.422813],[-3.741709],[-3.810812],[0.396654],[-2.134367],[1.000472],[-8.495526],[3.478122],[7.803073],[4.609943],[8.384772],[8.430975],[8.916110],[-4.187457],[-7.016411],[7.914284],[-9.749315],[-1.873065],[-4.622748],[2.801418],[-3.313834],[0.977753],[9.088287],[-2.868006],[8.959873],[-8.380773],[7.963697],[3.004461],[8.275530]], dtype = "float64")#candidate|5630|(1320, 1)|const|float64
call_5629 = relay.TupleGetItem(func_1001_call(relay.reshape(const_5630.astype('float64'), [12, 10, 11])), 2)
call_5631 = relay.TupleGetItem(func_1003_call(relay.reshape(const_5630.astype('float64'), [12, 10, 11])), 2)
func_590_call = mod.get_global_var('func_590')
func_592_call = mutated_mod.get_global_var('func_592')
call_5648 = relay.TupleGetItem(func_590_call(relay.reshape(call_5629.astype('float64'), [1, 616])), 1)
call_5649 = relay.TupleGetItem(func_592_call(relay.reshape(call_5629.astype('float64'), [1, 616])), 1)
output = relay.Tuple([bop_5626,call_5629,const_5630,call_5648,])
output2 = relay.Tuple([bop_5626,call_5631,const_5630,call_5649,])
func_5651 = relay.Function([var_5624,var_5625,], output)
mod['func_5651'] = func_5651
mod = relay.transform.InferType()(mod)
mutated_mod['func_5651'] = func_5651
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5651_call = mutated_mod.get_global_var('func_5651')
var_5653 = relay.var("var_5653", dtype = "float64", shape = ())#candidate|5653|()|var|float64
var_5654 = relay.var("var_5654", dtype = "float64", shape = (7, 7, 2))#candidate|5654|(7, 7, 2)|var|float64
call_5652 = func_5651_call(var_5653,var_5654,)
output = call_5652
func_5655 = relay.Function([var_5653,var_5654,], output)
mutated_mod['func_5655'] = func_5655
mutated_mod = relay.transform.InferType()(mutated_mod)
var_5855 = relay.var("var_5855", dtype = "float32", shape = (7, 10, 6))#candidate|5855|(7, 10, 6)|var|float32
uop_5856 = relay.acos(var_5855.astype('float32')) # shape=(7, 10, 6)
output = relay.Tuple([uop_5856,])
output2 = relay.Tuple([uop_5856,])
func_5858 = relay.Function([var_5855,], output)
mod['func_5858'] = func_5858
mod = relay.transform.InferType()(mod)
mutated_mod['func_5858'] = func_5858
mutated_mod = relay.transform.InferType()(mutated_mod)
var_5859 = relay.var("var_5859", dtype = "float32", shape = (7, 10, 6))#candidate|5859|(7, 10, 6)|var|float32
func_5858_call = mutated_mod.get_global_var('func_5858')
call_5860 = func_5858_call(var_5859)
output = call_5860
func_5861 = relay.Function([var_5859], output)
mutated_mod['func_5861'] = func_5861
mutated_mod = relay.transform.InferType()(mutated_mod)
var_5971 = relay.var("var_5971", dtype = "float32", shape = (5, 3, 4))#candidate|5971|(5, 3, 4)|var|float32
uop_5972 = relay.sigmoid(var_5971.astype('float32')) # shape=(5, 3, 4)
uop_5975 = relay.log2(uop_5972.astype('float64')) # shape=(5, 3, 4)
bop_5979 = relay.less_equal(uop_5972.astype('bool'), relay.reshape(uop_5975.astype('bool'), relay.shape_of(uop_5972))) # shape=(5, 3, 4)
output = bop_5979
output2 = bop_5979
func_5988 = relay.Function([var_5971,], output)
mod['func_5988'] = func_5988
mod = relay.transform.InferType()(mod)
mutated_mod['func_5988'] = func_5988
mutated_mod = relay.transform.InferType()(mutated_mod)
var_5989 = relay.var("var_5989", dtype = "float32", shape = (5, 3, 4))#candidate|5989|(5, 3, 4)|var|float32
func_5988_call = mutated_mod.get_global_var('func_5988')
call_5990 = func_5988_call(var_5989)
output = call_5990
func_5991 = relay.Function([var_5989], output)
mutated_mod['func_5991'] = func_5991
mutated_mod = relay.transform.InferType()(mutated_mod)
var_6206 = relay.var("var_6206", dtype = "float32", shape = (11, 10, 12))#candidate|6206|(11, 10, 12)|var|float32
var_6207 = relay.var("var_6207", dtype = "float32", shape = (11, 10, 12))#candidate|6207|(11, 10, 12)|var|float32
bop_6208 = relay.mod(var_6206.astype('float32'), relay.reshape(var_6207.astype('float32'), relay.shape_of(var_6206))) # shape=(11, 10, 12)
func_5988_call = mod.get_global_var('func_5988')
func_5991_call = mutated_mod.get_global_var('func_5991')
const_6213 = relay.const([8.362095,9.531430,1.476916,3.686869,-9.297556,-8.249902,-9.344969,-6.523632,3.898283,7.355420,-3.293111,5.649277,-1.855358,5.566046,-7.745339,-0.694429,-1.013479,2.850774,6.659296,5.951020,5.341748,-8.372613,-2.970848,-6.980501,-8.449989,5.973919,2.957146,2.409867,0.434551,3.232093,-2.593997,-3.600305,3.230623,8.563953,-6.093839,8.749975,-6.609634,-1.207593,-6.186972,8.327763,-8.811822,-1.887302,2.982224,-3.711569,-9.708388,-6.749416,7.527457,-3.903680,0.809128,1.883346,-1.833515,7.172300,-4.580609,2.066759,-5.210920,-7.784204,2.864468,-9.873067,-7.290878,-4.974566], dtype = "float32")#candidate|6213|(60,)|const|float32
call_6212 = func_5988_call(relay.reshape(const_6213.astype('float32'), [5, 3, 4]))
call_6214 = func_5988_call(relay.reshape(const_6213.astype('float32'), [5, 3, 4]))
func_3899_call = mod.get_global_var('func_3899')
func_3901_call = mutated_mod.get_global_var('func_3901')
const_6235 = relay.const([1,4,-1,4,7,9,3,9,-9,-1,-2,4,8,-9,8,-5,-9,6,7,-2,-4,-10,-8,2,-6,6,7,7,3,10,-4,-10,-1,5,-8,4,1,10,-3,-7,-7,-8,-5,10,3,-7,4,-1,4,4,-4,6,4,-5,10,7,-4,-2,2,-5,3,-1,1,-3,-10,9,-7,1,10,-10,9,8,4,2,-1,8,-1,2,-3,-9,1,-8,2,2,7,-4,9,8,1,9,9,7,-8,-5,3,-3,1,-5,-3,5,-6,4,1,9,4], dtype = "uint32")#candidate|6235|(105,)|const|uint32
call_6234 = func_3899_call(relay.reshape(const_6235.astype('uint32'), [3, 7, 5]))
call_6236 = func_3899_call(relay.reshape(const_6235.astype('uint32'), [3, 7, 5]))
output = relay.Tuple([bop_6208,call_6212,const_6213,call_6234,const_6235,])
output2 = relay.Tuple([bop_6208,call_6214,const_6213,call_6236,const_6235,])
func_6245 = relay.Function([var_6206,var_6207,], output)
mod['func_6245'] = func_6245
mod = relay.transform.InferType()(mod)
mutated_mod['func_6245'] = func_6245
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6245_call = mutated_mod.get_global_var('func_6245')
var_6247 = relay.var("var_6247", dtype = "float32", shape = (11, 10, 12))#candidate|6247|(11, 10, 12)|var|float32
var_6248 = relay.var("var_6248", dtype = "float32", shape = (11, 10, 12))#candidate|6248|(11, 10, 12)|var|float32
call_6246 = func_6245_call(var_6247,var_6248,)
output = call_6246
func_6249 = relay.Function([var_6247,var_6248,], output)
mutated_mod['func_6249'] = func_6249
mutated_mod = relay.transform.InferType()(mutated_mod)
var_6298 = relay.var("var_6298", dtype = "int64", shape = (14, 4, 5))#candidate|6298|(14, 4, 5)|var|int64
var_6299 = relay.var("var_6299", dtype = "int64", shape = (14, 4, 5))#candidate|6299|(14, 4, 5)|var|int64
bop_6300 = relay.equal(var_6298.astype('bool'), relay.reshape(var_6299.astype('bool'), relay.shape_of(var_6298))) # shape=(14, 4, 5)
uop_6306 = relay.log10(bop_6300.astype('float64')) # shape=(14, 4, 5)
const_6310 = relay.const([[[1,5,-5,-3,-2],[-4,-6,-2,-2,8],[-1,-4,-1,8,-7],[5,10,9,10,6]],[[6,7,-4,1,-5],[-7,-7,3,-5,3],[8,1,10,5,-4],[4,-10,2,-9,-9]],[[3,-1,8,-8,6],[6,-1,-2,-9,-3],[-8,4,7,2,-10],[10,-9,-4,6,-10]],[[5,-6,5,9,7],[-8,6,-4,8,9],[-7,1,-2,2,9],[10,-6,-2,4,-6]],[[1,7,5,-2,-9],[3,2,1,3,3],[5,-7,10,3,-9],[7,2,9,7,-4]],[[-4,2,3,1,-9],[9,6,5,3,9],[7,-4,-2,-8,-6],[-7,1,6,7,1]],[[2,9,4,-5,6],[-1,-2,3,9,6],[6,-8,5,1,3],[-7,10,2,-4,2]],[[-1,-2,-9,-8,8],[4,7,9,7,-3],[1,-5,8,6,-6],[-1,-1,-1,-9,9]],[[-3,1,6,-2,-9],[-1,-5,-1,4,4],[-4,-7,9,7,9],[5,-10,3,-6,9]],[[10,-4,-8,9,-2],[4,-7,3,10,-3],[-8,10,5,-4,-10],[4,4,-6,-5,-6]],[[9,5,10,-3,-9],[-7,5,5,-3,-10],[-3,-5,-4,-1,8],[-8,-5,3,10,-4]],[[-2,-6,-2,-6,-1],[10,-3,-2,7,-8],[9,2,-8,9,-10],[-6,8,9,2,-5]],[[-4,-6,-1,5,-10],[-3,-8,4,9,-3],[8,3,-1,6,-10],[8,-7,4,-1,-7]],[[10,3,-4,-4,-2],[-2,-6,6,9,-3],[-4,-6,5,10,7],[-8,-5,6,8,4]]], dtype = "int64")#candidate|6310|(14, 4, 5)|const|int64
bop_6311 = relay.logical_and(var_6298.astype('bool'), relay.reshape(const_6310.astype('bool'), relay.shape_of(var_6298))) # shape=(14, 4, 5)
uop_6314 = relay.atan(uop_6306.astype('float32')) # shape=(14, 4, 5)
output = relay.Tuple([bop_6311,uop_6314,])
output2 = relay.Tuple([bop_6311,uop_6314,])
func_6316 = relay.Function([var_6298,var_6299,], output)
mod['func_6316'] = func_6316
mod = relay.transform.InferType()(mod)
mutated_mod['func_6316'] = func_6316
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6316_call = mutated_mod.get_global_var('func_6316')
var_6318 = relay.var("var_6318", dtype = "int64", shape = (14, 4, 5))#candidate|6318|(14, 4, 5)|var|int64
var_6319 = relay.var("var_6319", dtype = "int64", shape = (14, 4, 5))#candidate|6319|(14, 4, 5)|var|int64
call_6317 = func_6316_call(var_6318,var_6319,)
output = call_6317
func_6320 = relay.Function([var_6318,var_6319,], output)
mutated_mod['func_6320'] = func_6320
mutated_mod = relay.transform.InferType()(mutated_mod)
var_7232 = relay.var("var_7232", dtype = "float64", shape = (1, 2, 12))#candidate|7232|(1, 2, 12)|var|float64
uop_7233 = relay.log10(var_7232.astype('float64')) # shape=(1, 2, 12)
output = uop_7233
output2 = uop_7233
func_7237 = relay.Function([var_7232,], output)
mod['func_7237'] = func_7237
mod = relay.transform.InferType()(mod)
mutated_mod['func_7237'] = func_7237
mutated_mod = relay.transform.InferType()(mutated_mod)
var_7238 = relay.var("var_7238", dtype = "float64", shape = (1, 2, 12))#candidate|7238|(1, 2, 12)|var|float64
func_7237_call = mutated_mod.get_global_var('func_7237')
call_7239 = func_7237_call(var_7238)
output = call_7239
func_7240 = relay.Function([var_7238], output)
mutated_mod['func_7240'] = func_7240
mutated_mod = relay.transform.InferType()(mutated_mod)
var_7552 = relay.var("var_7552", dtype = "int16", shape = (3, 13, 16))#candidate|7552|(3, 13, 16)|var|int16
var_7553 = relay.var("var_7553", dtype = "int16", shape = (3, 13, 16))#candidate|7553|(3, 13, 16)|var|int16
bop_7554 = relay.logical_xor(var_7552.astype('int16'), relay.reshape(var_7553.astype('int16'), relay.shape_of(var_7552))) # shape=(3, 13, 16)
output = bop_7554
output2 = bop_7554
func_7588 = relay.Function([var_7552,var_7553,], output)
mod['func_7588'] = func_7588
mod = relay.transform.InferType()(mod)
mutated_mod['func_7588'] = func_7588
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7588_call = mutated_mod.get_global_var('func_7588')
var_7590 = relay.var("var_7590", dtype = "int16", shape = (3, 13, 16))#candidate|7590|(3, 13, 16)|var|int16
var_7591 = relay.var("var_7591", dtype = "int16", shape = (3, 13, 16))#candidate|7591|(3, 13, 16)|var|int16
call_7589 = func_7588_call(var_7590,var_7591,)
output = call_7589
func_7592 = relay.Function([var_7590,var_7591,], output)
mutated_mod['func_7592'] = func_7592
mutated_mod = relay.transform.InferType()(mutated_mod)
var_7643 = relay.var("var_7643", dtype = "uint32", shape = ())#candidate|7643|()|var|uint32
const_7644 = relay.const([[[5,-7,-7,2,-10,-3,-10,8,-3],[10,7,-10,2,7,-8,3,6,-4],[10,-3,4,-3,-2,-2,3,-1,-9],[-5,10,2,2,9,-3,1,10,-6],[-1,9,-1,-8,-4,-5,3,-6,1],[1,3,-3,5,-2,1,-9,6,-8]],[[8,1,9,5,-5,-5,8,2,-7],[8,1,9,7,-6,4,1,-10,-6],[-6,10,-1,-10,2,2,6,-3,9],[1,-10,10,1,-7,-4,9,-3,3],[-6,5,-2,-7,-7,7,4,4,7],[7,-5,-8,-9,-9,7,-6,-3,-1]],[[8,-5,-10,-10,4,-8,8,-8,2],[-2,-4,3,2,-6,-2,2,-5,-4],[-1,1,10,6,-7,-9,-10,-9,-1],[-8,6,8,9,8,6,2,10,-5],[-5,6,-5,2,-7,10,5,-3,-1],[9,-2,7,2,-7,5,3,-3,3]],[[-6,-3,-7,-5,2,5,10,3,-4],[-9,-10,-1,10,-6,-2,3,3,5],[1,-2,5,-6,1,6,-2,4,-5],[8,8,10,-2,-10,-9,2,-2,-4],[-2,-5,-4,10,7,-9,-8,8,2],[6,3,6,10,3,-4,2,-9,-1]],[[-7,10,-7,-6,7,-9,-6,-2,2],[10,-8,5,-1,-8,-3,5,1,3],[6,3,5,-4,-8,9,-6,1,1],[-6,4,-5,2,-6,-5,1,8,5],[-5,-6,5,2,-4,5,-10,10,-2],[8,4,7,2,-1,1,8,4,8]],[[9,1,4,3,-7,-5,-7,-5,6],[4,-1,10,10,-9,-2,-6,-8,8],[-4,-5,3,2,-4,5,-8,-9,2],[10,-9,-10,7,-6,4,-4,-5,1],[-8,8,-7,-1,1,-5,-1,-7,-3],[1,-5,-4,1,9,-8,3,-5,-7]],[[3,-9,-10,-9,9,-1,-5,4,-1],[10,6,-5,-2,-2,9,-9,-1,-9],[1,4,-4,-2,-9,-10,5,-10,9],[-7,6,-8,-9,9,7,1,-6,8],[1,-10,8,-1,-7,-4,-10,9,-10],[-3,8,-1,2,3,-8,-9,-2,-1]],[[8,-1,-5,-5,-8,3,3,-7,9],[-4,-9,-8,-7,-7,-7,-7,-10,-4],[-7,-2,-1,-1,2,-5,-7,10,5],[2,-7,1,7,1,-10,4,1,-10],[-2,9,10,-3,-5,2,2,-4,-5],[5,4,-9,2,-2,1,7,3,-5]],[[4,-2,10,-10,10,-3,10,-8,7],[-1,-3,2,-4,-5,-9,-2,8,-1],[-9,-3,7,-7,8,-3,5,2,6],[-3,-6,-7,-1,-7,4,9,1,4],[2,6,7,2,3,1,9,10,-2],[-10,6,4,-7,3,7,-7,7,8]],[[5,5,4,-9,-7,10,-6,4,8],[-1,-1,3,10,-6,5,8,-3,-8],[-8,-2,6,4,-2,3,6,-3,8],[4,7,-4,5,-4,6,7,-1,-9],[-1,-10,-3,1,8,-6,-1,4,-4],[4,-10,-8,-10,-10,-4,-7,-4,-7]]], dtype = "uint32")#candidate|7644|(10, 6, 9)|const|uint32
bop_7645 = relay.subtract(var_7643.astype('uint32'), const_7644.astype('uint32')) # shape=(10, 6, 9)
output = bop_7645
output2 = bop_7645
func_7683 = relay.Function([var_7643,], output)
mod['func_7683'] = func_7683
mod = relay.transform.InferType()(mod)
var_7684 = relay.var("var_7684", dtype = "uint32", shape = ())#candidate|7684|()|var|uint32
output = func_7683(var_7684)
func_7685 = relay.Function([var_7684], output)
mutated_mod['func_7685'] = func_7685
mutated_mod = relay.transform.InferType()(mutated_mod)
var_7804 = relay.var("var_7804", dtype = "float32", shape = (14, 12, 6))#candidate|7804|(14, 12, 6)|var|float32
uop_7805 = relay.erf(var_7804.astype('float32')) # shape=(14, 12, 6)
func_5277_call = mod.get_global_var('func_5277')
func_5280_call = mutated_mod.get_global_var('func_5280')
const_7818 = relay.const(-2, dtype = "int8")#candidate|7818|()|const|int8
call_7817 = func_5277_call(relay.reshape(const_7818.astype('int8'), []))
call_7819 = func_5277_call(relay.reshape(const_7818.astype('int8'), []))
func_5651_call = mod.get_global_var('func_5651')
func_5655_call = mutated_mod.get_global_var('func_5655')
const_7821 = relay.const([[5.876075,-3.418110,-3.463779,-7.982384,-2.241662,2.368399,3.170703],[-1.201573,1.817526,2.314223,-8.209242,0.467181,6.253109,1.627356],[7.415143,-2.233824,7.400715,-8.302183,-5.252876,-7.251892,7.683786],[-8.951955,1.016180,0.525192,-9.631679,3.637662,-4.743582,-7.392500],[-1.951398,9.073818,-4.707883,-9.586823,-0.878042,9.105582,1.854456],[3.431614,1.915972,-1.694487,-7.125889,-7.907566,-8.323951,1.556917],[-4.613512,1.239482,-2.919804,-1.176082,-9.883294,-8.593819,6.802495],[1.970155,8.952873,-9.867110,-0.762972,4.703227,-0.837080,4.130830],[-4.937188,2.718004,-3.693725,2.444746,1.245773,-3.513049,-7.158007],[-7.385107,-3.605560,1.070151,-4.928363,5.526743,-1.411647,-5.401974],[-5.445241,5.954290,-7.978791,2.761872,4.856064,0.593787,8.939686],[-3.908868,-4.302809,6.455824,-8.319102,-2.197499,-9.503187,9.086713],[3.011274,9.912775,-6.212349,-3.142583,7.249644,8.341309,-7.460611],[6.873514,-9.062863,1.905980,-2.026024,-3.262546,0.781903,-0.141491]], dtype = "float64")#candidate|7821|(14, 7)|const|float64
call_7820 = relay.TupleGetItem(func_5651_call(relay.reshape(const_7818.astype('float64'), []), relay.reshape(const_7821.astype('float64'), [7, 7, 2]), ), 1)
call_7822 = relay.TupleGetItem(func_5655_call(relay.reshape(const_7818.astype('float64'), []), relay.reshape(const_7821.astype('float64'), [7, 7, 2]), ), 1)
output = relay.Tuple([uop_7805,call_7817,const_7818,call_7820,const_7821,])
output2 = relay.Tuple([uop_7805,call_7819,const_7818,call_7822,const_7821,])
func_7829 = relay.Function([var_7804,], output)
mod['func_7829'] = func_7829
mod = relay.transform.InferType()(mod)
var_7830 = relay.var("var_7830", dtype = "float32", shape = (14, 12, 6))#candidate|7830|(14, 12, 6)|var|float32
output = func_7829(var_7830)
func_7831 = relay.Function([var_7830], output)
mutated_mod['func_7831'] = func_7831
mutated_mod = relay.transform.InferType()(mutated_mod)
var_8007 = relay.var("var_8007", dtype = "int16", shape = (9, 11, 1))#candidate|8007|(9, 11, 1)|var|int16
var_8008 = relay.var("var_8008", dtype = "int16", shape = (9, 11, 4))#candidate|8008|(9, 11, 4)|var|int16
bop_8009 = relay.right_shift(var_8007.astype('int16'), var_8008.astype('int16')) # shape=(9, 11, 4)
output = bop_8009
output2 = bop_8009
func_8016 = relay.Function([var_8007,var_8008,], output)
mod['func_8016'] = func_8016
mod = relay.transform.InferType()(mod)
var_8017 = relay.var("var_8017", dtype = "int16", shape = (9, 11, 1))#candidate|8017|(9, 11, 1)|var|int16
var_8018 = relay.var("var_8018", dtype = "int16", shape = (9, 11, 4))#candidate|8018|(9, 11, 4)|var|int16
output = func_8016(var_8017,var_8018,)
func_8019 = relay.Function([var_8017,var_8018,], output)
mutated_mod['func_8019'] = func_8019
mutated_mod = relay.transform.InferType()(mutated_mod)
var_8131 = relay.var("var_8131", dtype = "float32", shape = (3, 10, 1))#candidate|8131|(3, 10, 1)|var|float32
uop_8132 = relay.atanh(var_8131.astype('float32')) # shape=(3, 10, 1)
bop_8139 = relay.mod(uop_8132.astype('float32'), relay.reshape(var_8131.astype('float32'), relay.shape_of(uop_8132))) # shape=(3, 10, 1)
output = bop_8139
output2 = bop_8139
func_8144 = relay.Function([var_8131,], output)
mod['func_8144'] = func_8144
mod = relay.transform.InferType()(mod)
mutated_mod['func_8144'] = func_8144
mutated_mod = relay.transform.InferType()(mutated_mod)
var_8145 = relay.var("var_8145", dtype = "float32", shape = (3, 10, 1))#candidate|8145|(3, 10, 1)|var|float32
func_8144_call = mutated_mod.get_global_var('func_8144')
call_8146 = func_8144_call(var_8145)
output = call_8146
func_8147 = relay.Function([var_8145], output)
mutated_mod['func_8147'] = func_8147
mutated_mod = relay.transform.InferType()(mutated_mod)
var_8272 = relay.var("var_8272", dtype = "float32", shape = (13, 15, 16))#candidate|8272|(13, 15, 16)|var|float32
uop_8273 = relay.atanh(var_8272.astype('float32')) # shape=(13, 15, 16)
output = relay.Tuple([uop_8273,])
output2 = relay.Tuple([uop_8273,])
func_8287 = relay.Function([var_8272,], output)
mod['func_8287'] = func_8287
mod = relay.transform.InferType()(mod)
var_8288 = relay.var("var_8288", dtype = "float32", shape = (13, 15, 16))#candidate|8288|(13, 15, 16)|var|float32
output = func_8287(var_8288)
func_8289 = relay.Function([var_8288], output)
mutated_mod['func_8289'] = func_8289
mutated_mod = relay.transform.InferType()(mutated_mod)
var_8409 = relay.var("var_8409", dtype = "float32", shape = (1, 14, 8))#candidate|8409|(1, 14, 8)|var|float32
uop_8410 = relay.sin(var_8409.astype('float32')) # shape=(1, 14, 8)
output = uop_8410
output2 = uop_8410
func_8420 = relay.Function([var_8409,], output)
mod['func_8420'] = func_8420
mod = relay.transform.InferType()(mod)
mutated_mod['func_8420'] = func_8420
mutated_mod = relay.transform.InferType()(mutated_mod)
var_8421 = relay.var("var_8421", dtype = "float32", shape = (1, 14, 8))#candidate|8421|(1, 14, 8)|var|float32
func_8420_call = mutated_mod.get_global_var('func_8420')
call_8422 = func_8420_call(var_8421)
output = call_8422
func_8423 = relay.Function([var_8421], output)
mutated_mod['func_8423'] = func_8423
mutated_mod = relay.transform.InferType()(mutated_mod)
var_8526 = relay.var("var_8526", dtype = "float32", shape = (6, 3, 16))#candidate|8526|(6, 3, 16)|var|float32
uop_8527 = relay.exp(var_8526.astype('float32')) # shape=(6, 3, 16)
func_8144_call = mod.get_global_var('func_8144')
func_8147_call = mutated_mod.get_global_var('func_8147')
var_8531 = relay.var("var_8531", dtype = "float32", shape = (30,))#candidate|8531|(30,)|var|float32
call_8530 = func_8144_call(relay.reshape(var_8531.astype('float32'), [3, 10, 1]))
call_8532 = func_8144_call(relay.reshape(var_8531.astype('float32'), [3, 10, 1]))
uop_8536 = relay.asinh(uop_8527.astype('float64')) # shape=(6, 3, 16)
output = relay.Tuple([call_8530,var_8531,uop_8536,])
output2 = relay.Tuple([call_8532,var_8531,uop_8536,])
func_8538 = relay.Function([var_8526,var_8531,], output)
mod['func_8538'] = func_8538
mod = relay.transform.InferType()(mod)
var_8539 = relay.var("var_8539", dtype = "float32", shape = (6, 3, 16))#candidate|8539|(6, 3, 16)|var|float32
var_8540 = relay.var("var_8540", dtype = "float32", shape = (30,))#candidate|8540|(30,)|var|float32
output = func_8538(var_8539,var_8540,)
func_8541 = relay.Function([var_8539,var_8540,], output)
mutated_mod['func_8541'] = func_8541
mutated_mod = relay.transform.InferType()(mutated_mod)
var_9528 = relay.var("var_9528", dtype = "int8", shape = (8, 9, 16))#candidate|9528|(8, 9, 16)|var|int8
const_9529 = relay.const([[[-6,7,7,5,-9,-6,-7,-8,-3,-10,-3,9,-10,-2,-9,-6],[-1,2,-4,-4,1,3,10,-9,-10,-7,1,-2,4,1,-4,10],[-7,-3,-1,-5,-8,2,-10,2,-3,2,-6,-4,-8,-6,3,8],[-8,2,8,4,6,6,7,3,-9,-4,1,7,-5,2,7,-8],[10,6,7,-4,6,-6,-7,4,6,-3,8,-6,3,10,9,8],[-8,-7,-6,6,10,6,-3,-7,2,5,2,-4,-9,-6,2,8],[-10,-5,-6,8,-2,-5,-9,-3,-4,3,-10,-2,1,7,-4,5],[2,10,-10,-3,-5,7,-3,-6,-7,-5,-6,-5,-5,-4,1,-2],[-9,8,1,10,-4,-9,-7,5,4,10,7,8,-2,-2,2,-4]],[[8,-8,7,-4,-5,7,-10,6,2,-3,-5,-2,3,-10,10,6],[9,-7,-2,-5,-6,10,5,-7,4,-8,2,8,4,10,3,1],[10,6,9,-10,6,-10,-6,7,-8,10,5,-5,5,2,-1,-10],[1,2,9,-6,4,5,-4,1,-9,3,-9,2,4,-2,9,8],[9,-3,-4,5,-4,7,5,1,8,-6,2,9,-4,-3,-4,-4],[-10,3,-5,-1,9,8,-7,5,-2,-10,-3,-10,-3,-9,-5,2],[-9,1,-3,2,2,3,-8,5,-3,6,-6,-10,-1,-6,3,2],[-4,7,-7,9,-8,9,3,8,8,10,10,3,-3,8,8,10],[-4,9,-6,1,3,2,1,-3,-3,3,5,7,-6,3,-6,7]],[[-10,9,5,9,-9,5,10,1,1,9,3,-5,10,4,-3,-3],[-9,10,-4,3,2,5,6,-5,3,4,-9,-6,8,-2,1,5],[-10,4,-4,9,-5,-7,-4,9,-8,3,1,-6,-9,10,-6,2],[10,3,-4,-1,9,-1,2,-2,4,-8,7,6,4,10,2,7],[-7,-7,3,2,-6,6,-5,-8,6,-6,2,10,7,-6,-1,3],[1,1,-10,7,7,3,4,3,-9,-4,10,-9,-6,-5,7,-7],[10,4,2,-5,5,-5,1,-10,6,5,1,-2,-8,6,-7,-6],[2,4,-1,4,-8,6,6,2,-1,-7,-9,-1,-8,-4,1,-9],[-10,-8,-3,-7,-3,10,1,3,-9,6,1,-6,-6,3,8,10]],[[-6,-9,3,10,10,-5,-2,-5,-3,8,2,-5,4,-6,10,2],[-6,-5,-6,-5,6,9,2,-8,9,-9,10,7,-1,-8,-3,-7],[1,10,-8,6,-8,-2,1,5,6,10,7,-1,2,-9,2,-4],[1,-2,10,5,-5,8,6,7,-9,-9,-4,-5,2,1,-2,-6],[-10,4,-6,-10,5,-8,-3,-5,10,9,4,10,9,-1,6,-6],[6,6,6,-5,-4,-3,8,7,2,1,9,-4,-1,-9,-4,1],[2,4,-3,-10,1,-2,-1,-6,5,9,-9,10,9,8,4,-3],[-9,6,-7,-7,-2,-9,7,8,-5,6,1,5,-7,1,-4,-8],[1,-5,10,7,2,-7,-3,3,-1,1,6,1,-1,-5,-7,10]],[[-4,-6,-6,8,-1,8,-9,2,-1,1,-1,1,5,8,6,1],[2,6,-4,-7,7,-9,-6,8,3,5,4,-7,1,-2,-3,8],[-2,-5,-7,9,8,2,-8,1,10,5,-3,2,8,-2,-6,-8],[5,5,4,7,4,7,-10,3,-6,5,-1,-3,10,1,6,-6],[-1,-4,-5,-8,-2,10,3,3,4,-9,6,7,9,-4,7,7],[-3,4,4,8,7,8,-3,-1,3,-5,4,-5,-10,-2,-2,-5],[-2,2,3,9,-10,-9,-2,-2,-10,1,9,-1,-8,-7,1,-3],[3,8,7,-5,6,10,4,-2,10,-10,-3,9,-3,-10,-10,-9],[10,8,-7,-4,7,-1,-7,9,8,8,2,3,-6,4,-5,9]],[[-2,-3,-2,-10,-1,1,-5,5,2,7,1,-9,-2,-2,-6,4],[-10,5,-4,-2,-7,4,5,-9,3,9,7,-2,1,-8,7,-4],[-9,-10,5,9,-6,8,-4,-10,-3,10,9,9,-6,-8,8,-1],[-3,1,6,4,5,-5,6,-6,4,-1,10,2,6,10,-4,-1],[5,-6,2,-2,9,5,-3,-6,-9,-10,8,6,4,8,-10,-4],[2,5,-8,-10,6,-4,-10,-6,9,9,-7,-1,-2,8,9,8],[-2,3,2,6,-3,-7,-3,2,-8,-9,-6,8,1,-4,8,10],[-7,-9,-8,-6,-9,4,5,-6,-6,10,7,-4,3,-7,-9,10],[-9,2,-6,-10,3,-7,-1,3,-9,-3,-10,5,2,6,-8,-7]],[[7,-8,-10,-10,-4,1,-1,5,7,6,-5,-1,-2,10,3,-7],[-7,-3,-5,1,-9,7,7,10,1,1,5,-3,-1,7,10,-4],[10,5,-2,5,9,1,-3,1,-7,10,-8,-10,-7,3,-2,-6],[6,-8,-10,-10,-4,-8,-4,-10,5,6,4,2,-3,-1,-4,9],[-2,8,9,-2,1,-9,1,7,-9,9,8,-7,6,8,-4,-10],[4,-10,-8,-6,-4,-5,4,1,4,9,9,5,-3,-5,-9,-5],[5,-6,8,1,6,-7,7,-6,-7,-2,-2,-4,-9,-5,-6,-1],[-6,1,8,-7,5,5,-1,-2,7,-7,-3,3,9,-10,8,5],[10,-9,-5,3,10,3,-10,-4,-1,3,1,5,5,7,9,-9]],[[-8,-7,7,-5,9,-10,5,5,6,-9,7,-9,9,8,-9,-7],[5,10,-6,-1,-6,-6,-7,-6,-1,10,-9,10,6,-8,-5,2],[10,4,-10,3,-5,7,-1,3,-10,-2,3,-8,10,-5,-10,-6],[2,6,-4,8,-9,-1,9,-4,8,-9,8,1,-5,4,3,6],[10,7,-3,3,-9,-2,-8,-7,-2,9,-4,-9,-5,4,5,-3],[-4,-10,5,-8,-8,1,9,-4,4,5,2,-5,-9,4,1,-2],[10,-1,-5,-9,1,1,-8,5,6,10,-5,4,-5,9,-8,8],[-3,2,8,-3,1,-3,8,-3,-7,2,-9,6,-7,-10,8,-4],[7,-10,-9,-7,8,-1,7,9,-8,-6,9,1,-6,10,8,-6]]], dtype = "int8")#candidate|9529|(8, 9, 16)|const|int8
bop_9530 = relay.not_equal(var_9528.astype('bool'), relay.reshape(const_9529.astype('bool'), relay.shape_of(var_9528))) # shape=(8, 9, 16)
func_2692_call = mod.get_global_var('func_2692')
func_2695_call = mutated_mod.get_global_var('func_2695')
var_9538 = relay.var("var_9538", dtype = "float32", shape = (539,))#candidate|9538|(539,)|var|float32
call_9537 = func_2692_call(relay.reshape(var_9538.astype('float32'), [11, 7, 7]))
call_9539 = func_2692_call(relay.reshape(var_9538.astype('float32'), [11, 7, 7]))
bop_9540 = relay.less(var_9538.astype('bool'), relay.reshape(call_9537.astype('bool'), relay.shape_of(var_9538))) # shape=(539,)
bop_9543 = relay.less(var_9538.astype('bool'), relay.reshape(call_9539.astype('bool'), relay.shape_of(var_9538))) # shape=(539,)
output = relay.Tuple([bop_9530,bop_9540,])
output2 = relay.Tuple([bop_9530,bop_9543,])
func_9544 = relay.Function([var_9528,var_9538,], output)
mod['func_9544'] = func_9544
mod = relay.transform.InferType()(mod)
mutated_mod['func_9544'] = func_9544
mutated_mod = relay.transform.InferType()(mutated_mod)
func_9544_call = mutated_mod.get_global_var('func_9544')
var_9546 = relay.var("var_9546", dtype = "int8", shape = (8, 9, 16))#candidate|9546|(8, 9, 16)|var|int8
var_9547 = relay.var("var_9547", dtype = "float32", shape = (539,))#candidate|9547|(539,)|var|float32
call_9545 = func_9544_call(var_9546,var_9547,)
output = call_9545
func_9548 = relay.Function([var_9546,var_9547,], output)
mutated_mod['func_9548'] = func_9548
mutated_mod = relay.transform.InferType()(mutated_mod)
var_9899 = relay.var("var_9899", dtype = "bool", shape = (16, 1, 12))#candidate|9899|(16, 1, 12)|var|bool
var_9900 = relay.var("var_9900", dtype = "bool", shape = (16, 1, 12))#candidate|9900|(16, 1, 12)|var|bool
bop_9901 = relay.logical_or(var_9899.astype('bool'), relay.reshape(var_9900.astype('bool'), relay.shape_of(var_9899))) # shape=(16, 1, 12)
output = relay.Tuple([bop_9901,])
output2 = relay.Tuple([bop_9901,])
func_9907 = relay.Function([var_9899,var_9900,], output)
mod['func_9907'] = func_9907
mod = relay.transform.InferType()(mod)
var_9908 = relay.var("var_9908", dtype = "bool", shape = (16, 1, 12))#candidate|9908|(16, 1, 12)|var|bool
var_9909 = relay.var("var_9909", dtype = "bool", shape = (16, 1, 12))#candidate|9909|(16, 1, 12)|var|bool
output = func_9907(var_9908,var_9909,)
func_9910 = relay.Function([var_9908,var_9909,], output)
mutated_mod['func_9910'] = func_9910
mutated_mod = relay.transform.InferType()(mutated_mod)
var_9947 = relay.var("var_9947", dtype = "float64", shape = ())#candidate|9947|()|var|float64
var_9948 = relay.var("var_9948", dtype = "float64", shape = (16, 2, 2))#candidate|9948|(16, 2, 2)|var|float64
bop_9949 = relay.multiply(var_9947.astype('float64'), var_9948.astype('float64')) # shape=(16, 2, 2)
output = bop_9949
output2 = bop_9949
func_9962 = relay.Function([var_9947,var_9948,], output)
mod['func_9962'] = func_9962
mod = relay.transform.InferType()(mod)
var_9963 = relay.var("var_9963", dtype = "float64", shape = ())#candidate|9963|()|var|float64
var_9964 = relay.var("var_9964", dtype = "float64", shape = (16, 2, 2))#candidate|9964|(16, 2, 2)|var|float64
output = func_9962(var_9963,var_9964,)
func_9965 = relay.Function([var_9963,var_9964,], output)
mutated_mod['func_9965'] = func_9965
mutated_mod = relay.transform.InferType()(mutated_mod)
var_10702 = relay.var("var_10702", dtype = "uint8", shape = (14, 6, 13))#candidate|10702|(14, 6, 13)|var|uint8
var_10703 = relay.var("var_10703", dtype = "uint8", shape = (14, 6, 13))#candidate|10703|(14, 6, 13)|var|uint8
bop_10704 = relay.bitwise_xor(var_10702.astype('uint8'), relay.reshape(var_10703.astype('uint8'), relay.shape_of(var_10702))) # shape=(14, 6, 13)
bop_10707 = relay.logical_xor(bop_10704.astype('uint32'), relay.reshape(var_10702.astype('uint32'), relay.shape_of(bop_10704))) # shape=(14, 6, 13)
func_324_call = mod.get_global_var('func_324')
func_326_call = mutated_mod.get_global_var('func_326')
const_10718 = relay.const([-7.307721,9.182523,1.343692,5.140380,-8.548844,-6.766791,-2.087917,4.451269,1.993843,0.758242,-9.996760,-6.559171,-1.646789,1.825441,-6.653960,-8.772437,3.107883,2.871591,-1.515818,-5.169157,-8.259500,-1.308875,6.559762,-8.263051,3.481608,2.005836,-5.286654,3.837849,1.684447,0.699743,6.168693,-2.647851,5.847810,4.751462,-4.795210,4.042679,-8.808785,-1.175021,1.412593,-5.679225,-8.974388,-3.694516,0.907590,9.373182,-2.825703,-5.733705,-0.981702,-1.925631,-1.023176,6.538859,5.669852,-0.717393,9.232510,0.517116,7.487056,3.788369,-4.830129,6.175770,7.897114,-0.478748,2.769204,5.387551,4.337788,3.355044,0.956187,-0.610576,1.717279,-0.315435,5.337206,9.510283,8.475779,-1.025202,8.955709,7.496600,-9.221523,-8.191609,5.244415,-6.049827,-4.048390,-5.511277,-6.027874,-7.905673,2.417582,-0.723939,6.207336,-1.364042,-8.812776,-3.717512,-1.540423,-0.197092,7.638831,-3.532547,-6.541169,9.734761,-3.235385,-3.650846,-5.675890,7.135902,5.821912,3.327867,4.513648,5.164569,-7.275281,1.194074,-1.763419,-3.516830,7.072503,-7.978864,3.559382,-2.626319,5.495913,-6.504214,9.414205,-1.620060,-1.385535,5.731978,4.700448,3.954641,-2.740081,-7.335296,6.791644,-8.149945,3.103164,-3.976043,-9.503884,-2.969411,-3.535565,-1.282913,-7.713836,-0.758020,-7.787994,0.807956,1.211802,0.217326,7.548567,-8.489009,-2.910685,4.460166,5.006054,-7.829711,-4.040993,0.182536,-7.141409,3.021974,-0.721138,4.630911,0.538709,-6.625438,4.575683,9.693835,1.154666,7.326010,-0.938587,7.450357,0.842524,-4.305835,9.123402,-0.420584,7.163568,-0.548852,5.025486,-7.864980,-4.187233,2.803636,-3.787994,4.790065,-5.223372,-0.104953,8.178010,-1.347239,6.815348,4.106423,1.708312,-3.638523,7.758961,-4.326582,-9.972741,2.705539,-9.960254,2.531917,8.642933,-7.475782,0.381841,0.509925,5.079798,3.185479,-3.389690,7.790521,-9.566866,-0.413989,-9.500592,3.561361,5.412920,-0.810092,8.496317,-6.786891,-4.009661,2.262495,4.961292,-9.298221,-9.733581,-4.610218,-6.775439,-6.228637,2.614551,-0.886245,-3.062598,9.998913,9.593237,7.991868,5.926773,3.982558,-4.306935,4.770452,8.286345,-8.152429,-9.984323,-4.100468,-0.931162,6.596566,0.446281,-8.852938,7.119573,3.005477,4.660194,-5.976100,9.082525,-3.063579,-8.811487,6.006845,8.631688,0.462765,-8.409662,9.761069,0.057090,0.047574,-8.088462,-6.739605,2.993540,-6.260214,-3.501883,0.221563,4.811770,2.451294,9.390123,9.371150,1.968134,-7.040485,3.021040,-9.143159,0.877808,6.960576,4.794042,9.007642,-2.820415,5.997964,-4.994358,-5.964351,-5.731064,9.919991,-3.753247,7.011344,-8.727945,-4.394329,9.862320,-8.461942,-9.183030,-8.030638,1.764148,-1.579998,-6.137477,-9.573021,-1.019213,-3.182698,-4.574798,-1.481983,-7.252353,-7.124613,-2.311134,-2.287646,-7.686569,-3.039219,7.433926,-6.051495,-3.487161,-9.568066,3.024973,-9.016399,4.648072,-2.636789,-2.519627,-2.859432,-7.335599,0.056940,7.946113,-3.812726,-4.418615,-1.802882,-3.945390,-8.135053,5.842896,4.873431,3.319503,-8.476236,-4.811346,0.284068,-9.359482,8.093972,-3.009312,6.573892,9.582164,0.783394], dtype = "float64")#candidate|10718|(312,)|const|float64
call_10717 = func_324_call(relay.reshape(const_10718.astype('float64'), [3, 13, 8]))
call_10719 = func_324_call(relay.reshape(const_10718.astype('float64'), [3, 13, 8]))
func_1001_call = mod.get_global_var('func_1001')
func_1003_call = mutated_mod.get_global_var('func_1003')
const_10737 = relay.const([8.835930,-0.783217,8.492868,9.653688,-2.051202,4.041983,-9.114170,2.426917,4.385640,-7.361568,5.084348,6.728666,0.653284,-1.587929,-1.715599,6.372322,-4.470711,3.363629,-4.532424,9.738335,-2.245760,-4.905811,4.271742,-2.585335,-7.729773,6.332990,-7.982807,4.124383,9.047413,1.331403,-0.855693,4.796185,-8.243768,-4.647104,-8.820049,7.334127,-9.835049,4.222968,6.106303,-4.464373,1.355343,-8.482781,8.694550,5.347968,6.894402,-3.447823,-0.920137,-4.322954,-1.734003,7.197878,-4.457112,-7.643442,-5.494836,-9.734342,6.220257,5.446497,-9.510138,-1.730245,6.570074,8.017118,-2.009259,-4.081913,7.172560,7.273908,9.627201,-1.921507,1.582227,7.057400,1.354222,-7.321703,-9.539593,0.504450,9.476865,-9.322217,1.269208,4.219865,4.911210,-1.706721,6.661555,0.229657,-1.710451,-7.391760,-6.000936,7.375300,-4.679700,-4.323988,0.655508,4.552583,8.650673,-0.571539,1.267817,8.946951,7.044358,-4.115594,9.426569,-2.894220,9.423851,-4.524607,-6.904935,1.265377,9.784023,2.486814,7.022715,6.149060,1.070684,-8.425239,9.450165,5.231492,1.781214,4.703940,2.733085,3.185228,4.250243,-3.610161,3.505226,-8.625994,5.036477,-7.738868,-4.304399,-6.382011,7.124766,6.610501,-0.915207,9.981603,-1.302845,-0.928265,-5.019026,-6.887373,7.065788,7.134179,6.331929,5.623447,-4.550248,6.449922,9.592804,-6.940732,-4.810814,-7.753952,-9.703908,8.465842,-9.175558,1.972076,7.797493,-7.565116,-6.860457,1.718527,3.974263,2.929661,-6.961094,6.183224,-3.395396,-2.751677,8.722436,7.336168,9.604754,-9.720736,-3.877689,-4.235662,1.917504,3.877805,3.410815,6.306430,2.358373,-1.583597,-2.438512,-9.697412,9.705473,8.594423,5.422593,-6.413288,3.707070,-3.203209,-3.853196,1.336167,-1.451850,-7.226755,-4.878165,-5.209559,-2.225979,3.945380,-9.071157,6.387394,8.988890,-6.897980,6.884368,0.326786,7.667358,-1.533353,-7.915059,-0.541734,-5.252366,-7.196807,-4.662812,5.129566,2.080582,0.126138,-5.620748,8.044085,-2.893466,-7.721697,6.349881,-1.399832,1.395203,-3.861576,6.876382,-8.793136,0.696383,-2.313499,-6.262168,-1.044626,-7.863032,2.132666,-2.135056,-9.725924,4.939048,-6.007984,-5.169886,0.244627,-4.578984,-2.021465,-8.393314,9.354840,5.955041,-2.801867,9.513540,-5.218138,-1.462549,-4.368719,-9.450548,5.850264,1.750010,-8.902780,2.206260,-8.603432,-4.991647,7.405059,1.187571,-9.506274,-2.977897,-6.003155,-3.535423,4.079122,7.858602,8.253297,2.422886,9.883332,4.312628,-1.598221,6.769840,-2.208137,5.529501,0.615347,-7.183486,-8.999697,-7.170319,2.958978,9.364154,0.093847,-2.558758,-1.866223,-0.580761,2.272998,-3.321783,-4.580186,-5.741537,3.615786,-8.887648,-5.318392,-6.750841,3.924971,-5.467803,7.694304,0.876246,-2.148325,-6.181301,8.045089,-0.483193,-9.631803,7.622395,-7.449275,5.225068,0.628173,-2.134095,-9.652629,-3.977389,6.037334,-5.933451,-5.956478,-5.325539,-3.532058,-0.299360,3.968416,-7.429840,1.078513,-8.721607,2.072194,1.514219,4.517264,-0.756509,-0.676115,1.200108,9.697248,2.245815,9.272278,-4.087863,-7.381272,-1.262527,6.278709,8.427010,-8.145993,8.675832,4.352791,-0.734171,-4.059552,-2.986551,-2.343242,3.416050,-6.773538,1.197669,-8.702902,0.497004,-0.525606,-8.955231,-7.239747,-5.605464,8.562319,-6.497778,-6.317764,8.922619,9.233531,-8.007535,3.881888,-1.202450,-5.219084,3.028093,5.046727,5.026428,-2.519972,-2.742839,7.537212,3.517269,-3.574210,6.229822,1.467122,2.178284,-3.865540,-0.099644,6.266754,3.444906,-3.990859,-8.989301,4.551285,-1.317985,5.457853,-2.905986,8.744525,9.281431,0.664109,0.464513,4.263815,-1.306024,-6.392472,4.433043,5.814899,3.132417,-3.390623,3.744453,3.961648,4.411681,-9.715983,0.945815,-7.765223,6.122113,4.422942,-1.607870,-5.907466,-4.032038,0.612765,-6.866663,9.797514,-1.243266,-1.006562,1.266727,2.569864,-8.684817,4.982669,-6.565007,0.027956,6.058796,-0.235945,0.941068,-5.577815,4.574012,-3.521782,-3.191617,2.609705,7.490171,7.685681,9.406859,0.258498,-8.984499,0.972728,-5.688797,8.225150,3.107969,0.040170,-2.378320,-2.861639,0.343180,3.375261,-6.687436,6.355814,-0.996152,9.864172,7.417541,-4.067830,8.237484,-7.078824,-2.106832,5.171239,1.581243,-6.693286,9.728917,4.669496,2.656755,-7.788671,5.846852,4.254084,-7.204571,3.666857,-6.261928,-5.191927,4.351883,2.368406,-9.774195,8.884053,-3.819551,0.224044,1.854456,-9.396626,3.372719,-5.676894,-8.399211,1.067711,-0.223747,1.027414,-1.667840,-2.330407,-5.057533,2.446666,1.746014,8.156663,-5.213733,1.597353,1.560959,3.436053,-5.439362,-1.576534,8.995779,-7.972538,-7.316078,-3.093514,1.151271,4.216645,9.938804,-7.515992,1.655885,-1.636120,-3.954753,5.542114,3.488990,-2.072068,5.027122,5.226731,-9.194254,-2.061801,5.750437,0.596237,-4.840875,-2.027088,3.338231,-0.850951,-2.918776,8.459863,-4.346201,5.119104,5.079988,4.219660,-1.961091,0.767075,-5.579152,5.912404,9.655763,-9.632479,5.091616,5.270542,0.250483,-7.658231,-7.385229,-6.143535,-1.288809,-9.845122,-3.351538,-8.329210,-5.349281,4.664560,-0.336120,-7.405786,-2.502176,8.538482,-3.435283,-1.449073,-6.562801,3.759277,-6.003165,4.667362,9.822815,-4.956444,5.635022,-5.684115,0.429507,9.268870,2.946991,6.780697,-9.541069,3.274281,2.387195,7.904679,-5.618986,-5.802670,-9.391305,-0.087421,8.735011,7.899757,9.192223,9.056856,-8.904130,-5.862066,-5.056158,0.415591,-6.888853,5.644872,-8.726760,8.917008,-8.826282,-3.746616,0.422724,-0.054085,2.324948,-1.152923,-8.891631,5.860414,-7.964103,-2.788756,9.960065,2.209673,-7.241315,9.410170,2.865055,-0.204437,-8.831187,0.524128,2.112134,5.673860,6.197127,5.097856,6.092809,-7.988353,1.358125,-6.565315,-8.817419,-5.245340,5.241715,-1.112348,4.310987,-3.654151,1.072171,0.721171,9.635803,4.434665,-5.386565,-8.559687,-7.316315,3.817948,9.426496,-8.761010,-0.696082,3.406346,2.336839,-5.626316,-0.850173,-3.875493,-9.532766,-4.152857,-1.022691,9.348201,-7.084269,-3.011557,-1.135597,-2.393670,-8.140322,-3.806208,-2.570967,-5.497120,7.468319,-6.765705,2.244847,4.495456,-5.582668,6.898922,6.080232,-3.142458,7.798491,-5.410478,-0.284671,0.907172,-2.879933,2.618479,5.365589,-9.899840,9.635611,-6.874315,3.869602,-2.083151,0.513884,7.592253,-5.461942,6.680482,-7.846905,-9.251616,-6.286979,7.795051,5.036326,5.895274,-7.093430,8.403353,-7.554737,-1.153857,2.766533,-0.344515,1.518057,2.486307,5.541225,0.953924,5.366939,-4.698746,1.606946,-5.963557,3.796738,-9.714966,1.875581,7.154369,8.530787,0.983265,-0.002379,-8.777124,9.460576,-9.985859,-7.949849,6.150729,6.837250,1.645509,9.602784,3.448774,-8.323910,0.464206,8.592086,9.618089,-9.170388,5.069589,-4.561784,-6.156757,9.948557,-8.087683,-2.914312,4.115628,-4.639505,1.163574,-2.514799,-5.240159,-3.756597,-8.937408,-8.972402,-4.273622,2.680728,8.989438,6.843782,1.570448,-0.853467,-9.610149,3.698137,-3.671265,9.616697,-1.825248,-2.654293,-0.918857,-4.036121,-2.640182,-5.028727,8.332544,-5.754939,-9.151108,9.589488,4.049058,9.466881,-8.798951,5.945445,-3.622103,-7.941504,9.051784,5.877855,9.066369,-2.424073,-3.951637,6.398031,-1.256589,8.069117,6.410396,3.602268,-9.633035,7.147558,3.250435,-3.848356,7.627940,-9.756751,3.549008,-9.587306,7.975301,1.397322,8.984853,-8.164259,-4.968349,-2.646120,-5.738208,-0.141456,8.013940,6.109923,7.071641,-6.731221,8.413964,7.726886,8.602035,8.841330,-3.203356,-7.123678,2.748139,-7.430127,-1.738809,-3.518021,-5.399357,-3.640951,-5.424077,-2.657853,6.782349,-1.187459,-7.431692,5.676551,9.850666,-6.491608,5.805939,7.728825,9.420072,5.056231,9.970410,-5.658227,-4.292644,7.302753,2.246598,-1.173496,-7.969800,8.453241,-8.458131,-9.810822,6.808852,-1.643436,-5.533553,-5.526425,8.995776,8.848954,5.060884,-4.004959,-5.819329,-8.409087,8.496401,-2.614417,4.614136,-7.609835,9.694032,8.348676,-1.189429,8.326665,3.623513,-2.881533,5.270220,6.149497,-8.050680,3.403165,2.823886,-6.934838,-4.286356,6.068117,-1.018069,-1.243995,-5.799132,-5.269514,3.263577,1.711501,8.931359,0.922202,-6.268241,4.712222,-7.815955,3.729852,-7.147497,-3.856894,5.590639,-8.742154,-1.804827,7.507518,-5.974220,3.231277,9.627191,7.445714,-9.027547,-1.262970,2.507620,6.393491,-5.422141,-0.590921,-6.023656,8.357793,-1.241909,6.227050,-2.263726,6.968104,5.894779,-3.455266,-1.237069,6.369941,-4.336149,0.123976,-0.506185,8.918031,9.868602,3.432984,8.505950,2.485451,0.754391,-6.951583,9.818010,-3.453185,-7.765560,-6.958735,-8.542906,9.772885,2.030385,6.551674,-8.814188,-3.433990,-4.393189,7.483314,-3.554871,1.709384,-9.645630,-9.962130,9.141615,-8.638280,7.821669,-5.788076,-7.509219,1.382616,-7.859807,1.248074,2.016840,1.013708,-6.777205,3.035553,5.914308,-2.348168,-7.004269,-2.415979,2.057641,7.340086,2.688213,0.485808,-8.927973,9.106136,6.399281,3.736190,-9.798182,-8.268498,2.607478,2.815478,-8.385338,-0.006432,-7.732550,-0.309507,9.394168,1.671607,-5.397385,0.307524,8.327717,3.634248,0.146137,3.603445,3.600096,-0.101392,-5.826930,-8.026188,4.614902,9.641911,2.096873,-8.708875,-6.928457,2.191513,-2.296887,4.016594,2.132131,-6.643052,4.978489,-1.619726,1.459896,1.831977,-4.484654,-4.504162,7.086816,-6.678033,8.973892,4.308331,-9.058442,-1.746692,1.202225,-8.681898,1.994653,-3.006687,-4.957976,2.808146,7.714105,0.300391,-7.950153,-9.335440,-0.536444,-3.538129,7.767499,1.038072,-4.707560,-2.368135,9.787364,-5.120254,5.247698,5.981358,5.368205,6.363781,5.977381,0.159292,-4.323182,5.659531,-5.767287,-4.779444,-3.877156,9.279293,-0.661271,-9.982748,-3.700775,-4.772031,6.336456,4.841115,-6.825302,-6.832394,-3.584329,-1.690453,8.110448,9.799398,7.185873,3.102114,0.984753,0.321236,-6.003714,7.610289,-4.993185,-9.089478,9.470002,3.406225,-8.823634,0.261467,3.250668,5.410757,-8.316771,-3.150090,-3.320013,3.511524,-8.961335,9.669338,-3.293510,1.867918,-1.345900,2.217498,9.817239,-2.199421,-8.736171,-2.755174,6.254108,-5.185867,-7.583155,4.534151,-8.466133,-1.876194,8.476733,9.579578,-2.144828,4.927477,-8.467592,-4.548492,1.167137,5.865600,2.122673,7.842642,1.253143,-3.263152,-0.050782,-8.715221,-4.682722,3.297608,2.799230,0.751737,2.768301,-5.153602,8.905604,4.034829,8.702312,-6.576917,1.156716,4.184768,2.076840,-7.109620,-8.978665,-4.814169,-8.962656,-8.282512,-2.947026,5.455403,-9.107338,6.582357,4.485040,-7.178815,7.648778,5.653083,-6.350527,2.298099,-8.953975,4.445783,6.747435,8.382890,4.846106,9.967212,1.145035,6.669043,-9.146205,-9.078733,-8.601833,5.280374,8.738449,-1.279379,7.612029,-6.554227,9.634290,-4.947020,7.120579,-3.007720,-8.198215,6.000611,7.158956,6.728107,8.600021,6.226266,3.188298,-3.966130,7.060672,-5.505520,-0.745969,-7.624090,3.689349,-5.846505,-8.024483,2.293082,-1.315608,-5.055024,-5.416599,-8.861878,2.550856,7.838059,-8.506470,-3.615539,-9.818138,-2.306123,2.568229,-2.415951,-0.363541,3.134749,-4.157677,0.752563,5.505504,-9.074399,9.934732,-7.359266,-0.881028,5.250167,1.771185,-4.691358,1.577558,-2.076726,2.360433,0.262437,-6.554270,-8.115080,7.023094,7.533602,3.911494,-9.958981,-1.882469,-8.105267,-5.203375,8.661572,0.599954,5.523894,3.134728,6.379323,5.386962,-0.545740,1.217647,-6.376132,-7.798553,-6.449697,8.163499,-1.529340,8.626853,-6.192993,8.655429,3.817449,6.089034,6.767876,-7.760083,0.503340,8.665771,6.919902,-2.153508,0.362462,-4.003438,-6.464626,3.583551,7.732777,4.809948,-0.030500,-9.311320,4.495281,4.700324,-7.556944,0.395717,4.243370,2.106671,-2.285628,-4.626628,-8.643690,2.718718,-7.897790,9.681364,6.380299,1.628025,0.916686,8.235492,9.536006,9.795943,-3.786340,3.425378,7.626116,0.386481,-1.325725,-3.581055,-7.803901,4.905084,-6.655724,-5.938798,-7.270085,2.902377,2.311385,-3.594423,2.055343,-1.440824,1.892770,5.703405,-9.885515,-6.692227,-6.708552,9.735417,-0.311469,2.943510,-4.269098,-2.916280,8.246638,-1.913797,-6.520644,9.346898,0.028962,4.864306,7.763033,8.513057,9.315940,-1.810546,-1.702013,-6.710460,7.096385,5.989687,-5.086496,-1.060432,-2.075938,-9.106069,0.544661,-8.621019,-1.601428,3.524878,2.710558,2.045428,-4.500523,-2.918062,-8.074480,3.958707,0.870877,2.008129,-8.970039,8.118105,-3.294150,6.506792,-1.627414,-4.953051,-3.696342,-7.908291,3.209018,-7.657799,-0.247007,-4.731240,-7.890875,-9.706677,7.327860,9.439297,8.923960,-8.392278,-7.005315,1.746267,1.944885,2.965067,-9.993203,8.357921,-8.332738,1.681883,3.802163,6.648568,-4.384731,9.756728,6.271841,4.301897,7.346793,-0.957123,-3.888542,-9.653188,-2.701551,7.165207,-3.175629,-1.641800,-9.032292,8.304673,8.725972,1.835878,-2.467041,5.313824,6.219434,-6.448921,-1.190525,8.894155,-3.708955,0.513991,8.888602,9.946536,7.646604,-3.542442,-1.566284,7.755184,-1.401487,4.125411,4.034672,-1.871028,6.402553,-2.282596,-0.321370,-0.303889,1.670659,9.746225,-0.065491,-1.120173,-5.251444,-1.931556,-3.210703,-8.705077,-9.469075,2.128616,6.765373,6.080405,-3.557931,-9.683139,3.223887,-4.783406,-3.790773,7.846716,-5.117406,3.884373,0.063391,9.348163,8.808134,-1.252067,9.120071,-9.820794], dtype = "float64")#candidate|10737|(1320,)|const|float64
call_10736 = relay.TupleGetItem(func_1001_call(relay.reshape(const_10737.astype('float64'), [12, 10, 11])), 1)
call_10738 = relay.TupleGetItem(func_1003_call(relay.reshape(const_10737.astype('float64'), [12, 10, 11])), 1)
uop_10743 = relay.sin(var_10703.astype('float64')) # shape=(14, 6, 13)
output = relay.Tuple([bop_10707,call_10717,const_10718,call_10736,const_10737,uop_10743,])
output2 = relay.Tuple([bop_10707,call_10719,const_10718,call_10738,const_10737,uop_10743,])
func_10762 = relay.Function([var_10702,var_10703,], output)
mod['func_10762'] = func_10762
mod = relay.transform.InferType()(mod)
mutated_mod['func_10762'] = func_10762
mutated_mod = relay.transform.InferType()(mutated_mod)
func_10762_call = mutated_mod.get_global_var('func_10762')
var_10764 = relay.var("var_10764", dtype = "uint8", shape = (14, 6, 13))#candidate|10764|(14, 6, 13)|var|uint8
var_10765 = relay.var("var_10765", dtype = "uint8", shape = (14, 6, 13))#candidate|10765|(14, 6, 13)|var|uint8
call_10763 = func_10762_call(var_10764,var_10765,)
output = call_10763
func_10766 = relay.Function([var_10764,var_10765,], output)
mutated_mod['func_10766'] = func_10766
mutated_mod = relay.transform.InferType()(mutated_mod)
var_11133 = relay.var("var_11133", dtype = "uint16", shape = (12, 6, 9))#candidate|11133|(12, 6, 9)|var|uint16
var_11134 = relay.var("var_11134", dtype = "uint16", shape = (12, 6, 9))#candidate|11134|(12, 6, 9)|var|uint16
bop_11135 = relay.less(var_11133.astype('bool'), relay.reshape(var_11134.astype('bool'), relay.shape_of(var_11133))) # shape=(12, 6, 9)
func_7683_call = mod.get_global_var('func_7683')
func_7685_call = mutated_mod.get_global_var('func_7685')
const_11180 = relay.const(-9, dtype = "uint32")#candidate|11180|()|const|uint32
call_11179 = func_7683_call(relay.reshape(const_11180.astype('uint32'), []))
call_11181 = func_7683_call(relay.reshape(const_11180.astype('uint32'), []))
output = relay.Tuple([bop_11135,call_11179,const_11180,])
output2 = relay.Tuple([bop_11135,call_11181,const_11180,])
func_11189 = relay.Function([var_11133,var_11134,], output)
mod['func_11189'] = func_11189
mod = relay.transform.InferType()(mod)
mutated_mod['func_11189'] = func_11189
mutated_mod = relay.transform.InferType()(mutated_mod)
func_11189_call = mutated_mod.get_global_var('func_11189')
var_11191 = relay.var("var_11191", dtype = "uint16", shape = (12, 6, 9))#candidate|11191|(12, 6, 9)|var|uint16
var_11192 = relay.var("var_11192", dtype = "uint16", shape = (12, 6, 9))#candidate|11192|(12, 6, 9)|var|uint16
call_11190 = func_11189_call(var_11191,var_11192,)
output = call_11190
func_11193 = relay.Function([var_11191,var_11192,], output)
mutated_mod['func_11193'] = func_11193
mutated_mod = relay.transform.InferType()(mutated_mod)
var_11384 = relay.var("var_11384", dtype = "uint8", shape = (7, 15, 10))#candidate|11384|(7, 15, 10)|var|uint8
var_11385 = relay.var("var_11385", dtype = "uint8", shape = (7, 15, 10))#candidate|11385|(7, 15, 10)|var|uint8
bop_11386 = relay.multiply(var_11384.astype('uint8'), relay.reshape(var_11385.astype('uint8'), relay.shape_of(var_11384))) # shape=(7, 15, 10)
output = bop_11386
output2 = bop_11386
func_11390 = relay.Function([var_11384,var_11385,], output)
mod['func_11390'] = func_11390
mod = relay.transform.InferType()(mod)
mutated_mod['func_11390'] = func_11390
mutated_mod = relay.transform.InferType()(mutated_mod)
func_11390_call = mutated_mod.get_global_var('func_11390')
var_11392 = relay.var("var_11392", dtype = "uint8", shape = (7, 15, 10))#candidate|11392|(7, 15, 10)|var|uint8
var_11393 = relay.var("var_11393", dtype = "uint8", shape = (7, 15, 10))#candidate|11393|(7, 15, 10)|var|uint8
call_11391 = func_11390_call(var_11392,var_11393,)
output = call_11391
func_11394 = relay.Function([var_11392,var_11393,], output)
mutated_mod['func_11394'] = func_11394
mutated_mod = relay.transform.InferType()(mutated_mod)
var_11914 = relay.var("var_11914", dtype = "float32", shape = (13, 14, 6))#candidate|11914|(13, 14, 6)|var|float32
uop_11915 = relay.log(var_11914.astype('float32')) # shape=(13, 14, 6)
output = uop_11915
output2 = uop_11915
func_11932 = relay.Function([var_11914,], output)
mod['func_11932'] = func_11932
mod = relay.transform.InferType()(mod)
mutated_mod['func_11932'] = func_11932
mutated_mod = relay.transform.InferType()(mutated_mod)
var_11933 = relay.var("var_11933", dtype = "float32", shape = (13, 14, 6))#candidate|11933|(13, 14, 6)|var|float32
func_11932_call = mutated_mod.get_global_var('func_11932')
call_11934 = func_11932_call(var_11933)
output = call_11934
func_11935 = relay.Function([var_11933], output)
mutated_mod['func_11935'] = func_11935
mutated_mod = relay.transform.InferType()(mutated_mod)
var_11947 = relay.var("var_11947", dtype = "int16", shape = (5, 10, 13))#candidate|11947|(5, 10, 13)|var|int16
const_11948 = relay.const([[[9,-9,3,10,4,1,-6,-6,3,-8,-2,-3,-6],[3,-4,-3,6,3,-2,7,7,-1,-8,9,-8,8],[-7,-3,3,-2,-8,3,7,-5,1,4,-9,10,1],[-9,-6,7,1,8,-7,-2,-5,10,2,-2,9,-10],[-2,-8,-10,2,-7,1,10,-3,-8,-3,-1,-7,-10],[6,7,-8,6,4,4,-4,-4,8,-4,10,-7,7],[5,10,4,-5,-2,2,10,8,1,-6,6,-6,6],[-2,-10,-10,2,-10,-8,9,-7,-1,-6,-10,8,-1],[-1,-7,-4,9,-10,9,-1,-10,6,-10,-2,-10,10],[7,-8,-4,-5,6,-2,5,4,-3,5,-5,-3,-1]],[[-7,-5,-3,-5,-9,1,-4,5,-10,9,4,-10,-7],[7,-3,7,3,7,2,-8,4,7,6,5,4,-1],[-6,-7,-5,5,7,8,-1,6,10,4,-5,2,-5],[-7,-1,-7,-9,-1,1,4,5,-5,-8,10,9,2],[7,5,-10,-10,3,7,-2,-8,-4,8,-8,-6,8],[-4,3,10,1,3,10,-2,1,-4,-8,3,-7,-1],[-7,-1,6,1,5,-9,-7,-8,6,-7,-1,-9,5],[1,6,-9,3,-8,-9,-10,10,-1,-4,3,8,6],[-3,8,-8,4,-5,6,6,8,-5,-2,-8,2,-1],[-1,-5,10,-3,-7,-1,6,5,5,10,-9,-2,9]],[[-3,1,8,-6,-2,-2,-7,9,-10,-6,-8,8,-6],[4,7,7,6,3,3,-6,8,-9,7,-4,2,-5],[3,-10,-10,7,10,5,-4,-10,10,10,-6,-2,9],[-3,8,-3,1,9,10,9,10,5,-4,10,5,-9],[-1,5,7,-10,5,-7,9,-10,-2,6,-2,-5,-8],[-10,5,3,2,-5,-5,5,8,-8,6,3,-6,-9],[2,3,-8,-4,-4,-8,-4,-5,-8,10,-2,3,8],[-7,7,-1,1,2,8,-2,-10,9,3,-4,4,-7],[4,-6,5,7,1,-4,3,-2,1,-5,6,4,8],[10,-4,10,-8,2,-2,-7,8,-3,-7,-4,-9,-9]],[[5,-4,-3,-6,-3,7,-5,-5,10,9,-5,-1,-7],[1,5,3,-5,-4,-3,-9,1,8,-7,-4,-4,6],[-3,-2,-3,-8,-2,10,-8,-10,-7,7,-5,3,-5],[10,9,-9,-3,3,-3,-4,-2,4,1,10,1,5],[10,7,-6,-7,2,-7,6,-1,-3,-5,1,6,3],[9,3,1,3,-1,4,-6,-3,-1,5,7,7,6],[1,-2,-9,-2,7,8,-1,1,-6,-2,-1,9,3],[5,-7,-1,-4,7,-4,-6,10,2,-4,7,-1,-10],[-1,8,4,-7,-6,-3,9,-4,7,-5,5,-10,-2],[10,7,-8,8,4,1,4,10,-10,5,6,-3,1]],[[-10,-6,10,-8,5,-7,3,-6,7,-4,7,-7,-5],[6,-6,7,-10,8,8,-10,3,-7,-3,1,-2,6],[-8,-2,6,4,-7,-7,3,-8,3,-5,5,5,4],[7,-2,3,-6,4,3,5,8,-6,9,-3,1,-1],[1,-6,1,-10,8,2,10,-7,5,-2,4,-3,3],[-5,5,3,-1,10,4,-2,7,6,1,10,-3,-8],[-4,10,-8,-2,-1,8,7,2,10,-4,2,-4,-3],[-9,-1,-5,-10,2,10,-1,-2,2,9,-1,-10,7],[6,4,-10,-6,-10,5,6,9,5,6,1,7,2],[2,-4,5,-2,9,-2,2,8,3,9,9,-2,-3]]], dtype = "int16")#candidate|11948|(5, 10, 13)|const|int16
bop_11949 = relay.not_equal(var_11947.astype('bool'), relay.reshape(const_11948.astype('bool'), relay.shape_of(var_11947))) # shape=(5, 10, 13)
output = bop_11949
output2 = bop_11949
func_11960 = relay.Function([var_11947,], output)
mod['func_11960'] = func_11960
mod = relay.transform.InferType()(mod)
var_11961 = relay.var("var_11961", dtype = "int16", shape = (5, 10, 13))#candidate|11961|(5, 10, 13)|var|int16
output = func_11960(var_11961)
func_11962 = relay.Function([var_11961], output)
mutated_mod['func_11962'] = func_11962
mutated_mod = relay.transform.InferType()(mutated_mod)
var_12132 = relay.var("var_12132", dtype = "float64", shape = (9, 7, 11))#candidate|12132|(9, 7, 11)|var|float64
uop_12133 = relay.atan(var_12132.astype('float64')) # shape=(9, 7, 11)
func_11390_call = mod.get_global_var('func_11390')
func_11394_call = mutated_mod.get_global_var('func_11394')
const_12137 = relay.const([[-9,-4,-3,1,5,-2,-2,8,-8,1,9,1,7,-8,-9,4,5,1,2,-1,9,-1,-8,8,-9,1,4,-2,3,-5,-4,-10,-4,7,5,4,-1,-7,-3,-4,-4,2,8,1,8,2,3,-9,7,7,-3,-9,6,-1,1,-3,2,-4,-1,-10,1,1,5,4,-7,5,-2,4,2,-10,3,-9,1,3,-8,-3,4,2,-3,5,-7,-9,7,-8,-1,2,-2,-6,6,-4,-4,-3,10,-2,-4,-4,9,10,9,5,-6,1,-7,10,-8,-10,-3,3,-10,10,-1,-5,-10,-4,-4,-6,-5,-10,-5,10,5,8,-2,-3,5,6,-8,6,-9,6,1,-6,10,-3,-4,-10,10,1,10,-4,-9,-3,-5,-4,1,-8,3,-9,9,8,2,6,-8,3,1,5,10,-7,-8,9,-3,10,-2,7,-2,7,-6,5,8,-4,-7,-8,-8,4,-6,-5,-10,2,-5,-5,7,10,-5,-7,-5,3,-3,-1,-6,7,7,-2,7,9,7,9,-6,-7,-4,-3,7,-2,-8,1,7,-7,-2,-1,5,2,-6,5,-10,2,-9,4,10,6,9,4,-9,-2,2,-1,5,-8,-6,2,7,1,-8,2,1,8,7,-5,4,9,-1,2,8,7,-7,2,-1,-8,8,-9,-9,-8,-8,5,2,-8,6,9,4,-8,4,-2,2,6,-9,-8,1,-5,1,-2,3,6,-2,3,-2,6,8,-3,-8,-2,-3,7,8,-6,3,-2,8,8,-2,7,-2,9,10,2,-10,-9,7,-10,2,-2,4,3,-1,-3,4,6,-4,7,5,-6,-4,-10,2,5,-6,9,10,-1,5,-3,-3,-4,-4,-2,10,5,-2,-4,7,-6,-6,-10,-9,9,-4,-2,3,-5,-6,-7,-3,-2,-9,9,6,8,2,-10,8,2,2,-8,-1,2,-8,-6,3,-7,-4,10,-2,2,6,-3,-1,-4,-1,8,5,-1,-8,5,-5,-4,9,-9,-2,-2,-2,1,-2,-6,9,-6,3,9,-4,-3,-9,8,-2,-8,7,-3,7,-2,-10,3,-2,4,-6,-7,9,9,-6,3,-3,2,-3,9,-10,-8,-9,2,9,7,10,6,-3,-7,-4,-8,-1,5,7,3,-4,2,1,-5,3,-8,7,2,10,10,10,-9,8,7,9,-5,-1,6,-2,-4,4,-7,5,2,1,-9,8,3,3,3,10,-3,-6,2,-10,2,10,7,-9,1,9,-10,-8,-4,5,-3,9,5,-4,3,5,10,-3,1,3,1,-1,-10,-5,2,-6,-2,-8,8,4,-8,9,4,-4,-5,6,3,-6,-8,9,-1,-2,8,2,4,9,8,-1,-9,7,3,9,-3,-9,8,-1,-3,-5,-5,-6,4,-2,-5,-5,7,10,9,8,-8,3,4,-6,6,-7,10,-9,-1,9,3,4,-9,-2,8,10,-6,2,8,-7,1,7,-9,8,-9,-8,2,-2,10,9,5,-2,6,-3,1,-1,5,-4,4,4,8,6,8,10,6,-4,3,-4,-9,3,8,-2,4,7,7,-3,-7,-4,-9,-1,-8,-3,-2,-9,-3,-10,-8,4,-10,10,-4,2,-10,-4,-5,-3,1,-3,5,5,4,-9,-10,2,5,7,5,-1,-8,-5,2,-3,3,8,-7,8,-8,2,9,8,-8,-3,4,7,9,-4,-9,5,-2,2,8,1,-6,-4,10,10,8,-10,-7,6,-10,-10,7,3,-10,1,6,4,6,6,1,-2,9,-5,1,-6,-4,-8,-2,2,-7,-10,6,4,3,8,7,-4,3,5,-3,-3,-5,-7,3,9,-6,-4,2,-4,7,8,1,-10,-3,6,-4,-2,1,6,-3,-5,-3,-1,8,-9,-5,-1,-10,1,-6,9,6,-10,5,3,2,-6,9,-1,1,2,-8,-2,-1,-2,-10,8,-6,-4,-8,-8,-5,7,-2,-8,10,-8,-10,7,-5,-10,-1,2,-9,-10,-1,7,-3,-9,3,-7,-5,1,9,-7,-6,9,7,7,-6,-3,5,5,6,-2,-9,-4,-6,-10,-3,-9,-5,-8,-10,8,-4,-4,-5,-9,-3,2,2,6,10,-2,4,4,2,4,1,-9,-5,7,2,-10,9,-4,-7,8,8,-4,5,-4,2,-8,-9,1,8,5,4,-4,9,-3,-2,-8,2,3,-2,2,-4,-8,-7,-1,6,6,3,-2,-10,3,-5,2,-2,5,-1,-7,-9,-10,-5,1,8,1,9,-6,-8,1,-1,-1,10,-7,2,8,3,8,-10,9,-8,1,-8,6,-9,1,2,1,7,2,3,3,-9,-4,-1,9,7,-5,-1,3,8,8,-4,-3,-8,-2,-7,9,-7,-7,9,-6,-9,3,1,-10,8,8,-6,4,-6,-6,-3,-10,-9,-9,-4,7,5,1,-4,5,-8,5,-6,9,7,-6,2,3,3,-2,-8,-8,8,8,-2,-5,8,4,9,7,-1,-8,-10,-8,4,8,10,-6,-7,2,9,-10,7,2,-9,4,3,7,-5,-6,5,-3,-10,-3,3,-6,1,9,10,-4,2,1,1,1,-10,-7,1,-10,-10,9,8,-6,-1,-7,-8,-2,-10,-8,-10,7,5,7,-5,-6,1,8,1,10,-9,-5,-1,-7,-1,-2,-3,-2,-4,-4,-9,-3,6,-4,5,10,-3,3,3,5,-7,6,-7,-10,-9,-9,5,-3,-5,-9,-10,-6,-6,-7,9,3,-8,-5,7,-5,10,-7,9,-7,6,9,-6,7,4,-1,5,-10,-2,9,10,8,-1,6,-6,6,-2,-7,10,10,-7,10,4]], dtype = "uint8")#candidate|12137|(1, 1050)|const|uint8
call_12136 = func_11390_call(relay.reshape(const_12137.astype('uint8'), [7, 15, 10]), relay.reshape(const_12137.astype('uint8'), [7, 15, 10]), )
call_12138 = func_11390_call(relay.reshape(const_12137.astype('uint8'), [7, 15, 10]), relay.reshape(const_12137.astype('uint8'), [7, 15, 10]), )
func_9962_call = mod.get_global_var('func_9962')
func_9965_call = mutated_mod.get_global_var('func_9965')
const_12143 = relay.const(-8.712111, dtype = "float64")#candidate|12143|()|const|float64
const_12144 = relay.const([-8.879433,1.325399,-2.015546,4.643443,-5.159911,9.630330,0.179985,-1.025553,9.962169,-7.746009,0.193097,-3.066999,-8.482017,-8.120917,2.874734,7.951409,-2.091644,-6.971858,-4.535070,2.759865,-7.795249,-4.767188,2.530185,7.027264,7.507810,7.140175,1.161777,9.999775,-3.819989,1.034745,4.257147,4.082865,-5.065220,-6.246854,3.076536,4.067214,0.227471,7.814075,-2.663260,1.808277,-3.951876,-1.196304,-7.616908,4.451448,-6.055792,8.901331,-5.425259,4.420691,-3.114142,1.365119,7.584419,-6.194214,-4.404384,9.294729,-7.588739,-9.215293,6.395986,2.435315,9.539546,8.273641,0.905878,5.954728,7.316138,-5.642382], dtype = "float64")#candidate|12144|(64,)|const|float64
call_12142 = func_9962_call(relay.reshape(const_12143.astype('float64'), []), relay.reshape(const_12144.astype('float64'), [16, 2, 2]), )
call_12145 = func_9962_call(relay.reshape(const_12143.astype('float64'), []), relay.reshape(const_12144.astype('float64'), [16, 2, 2]), )
func_7588_call = mod.get_global_var('func_7588')
func_7592_call = mutated_mod.get_global_var('func_7592')
const_12161 = relay.const([-5,2,9,-10,4,-5,6,-5,1,-3,-1,-7,-1,10,6,-6,10,-2,-10,6,-4,7,6,-9,3,-6,-10,5,9,-1,-7,-5,4,5,-8,10,-4,4,-8,7,-6,8,-5,-9,10,-7,-8,-5,-10,8,5,-9,-4,-1,5,-6,10,-9,8,-7,-8,7,-9,-8,-7,6,-4,-1,10,-3,-9,-8,-4,3,-2,4,7,6,6,-4,2,-4,-6,5,6,-3,-6,3,-5,-5,7,7,-1,-1,-6,-9,-4,7,8,8,-9,-7,9,6,-6,-10,-8,-8,-9,5,3,-6,-7,-1,-4,-8,-9,7,-7,-1,-5,10,8,-2,9,2,5,1,10,8,-10,-6,-3,6,-7,-7,-7,-6,4,-2,9,-5,6,6,-7,-2,1,3,-1,6,-5,2,7,-9,-8,-4,-8,9,4,-10,10,-7,9,6,10,-10,4,-8,-10,4,9,4,8,1,-9,-4,-2,1,-2,3,-7,-8,5,-2,5,2,5,-1,-9,6,5,8,-2,9,4,-7,-5,1,-10,-6,2,-9,5,-9,-2,4,-6,5,9,-9,7,3,-10,-3,-1,5,10,8,4,2,4,-3,6,6,1,-10,3,10,10,-6,-4,-4,-3,-10,2,2,7,8,-3,-1,-4,-5,-4,2,10,-7,-9,9,-3,-10,2,-3,-7,-4,-7,-7,6,10,8,-6,-2,-3,1,-4,2,1,5,-4,-7,3,3,-9,-1,-1,-2,7,1,6,1,-8,5,-8,-5,1,1,10,-3,5,9,-4,4,-7,-1,-6,-7,9,4,-10,-10,-3,-4,-6,-1,4,-4,10,-2,-2,-4,-9,-3,-10,-6,5,3,8,2,-6,-3,-2,-3,-7,-3,-9,-7,7,7,-8,10,-10,3,10,-3,8,-1,5,7,8,-2,7,7,1,3,-8,3,6,7,-1,4,-8,-4,-6,6,-2,-1,10,-5,2,2,-9,-10,-3,10,-9,7,-7,10,-3,9,5,-4,-8,9,7,1,-8,-2,10,-9,6,6,-7,1,3,5,10,6,-10,-9,8,-2,1,-1,8,1,6,-1,4,-2,10,6,9,-7,8,-4,5,5,2,8,6,3,-7,-4,6,9,-3,5,8,1,-7,-2,-2,10,-3,-3,-8,-10,1,-7,9,-3,2,6,-10,-5,3,9,4,-9,-8,5,-9,4,-10,6,-8,4,5,-9,9,1,-1,9,-10,2,1,5,-4,-1,-9,-4,6,-8,-9,5,10,10,-8,7,-9,7,8,-1,10,-7,-1,-7,-10,-7,9,5,-9,1,7,-5,-8,-6,4,-9,3,5,-8,8,-5,-6,-6,6,-9,-3,6,1,-2,-10,-8,3,6,5,10,3,10,-2,2,4,-6,6,-6,-7,7,9,8,-7,9,10,7,5,-5,-6,4,8,6,1,4,4,-7,7,4,10,7,-3,5,4,2,9,-7,-5,3,-8,-7,-8,-3,8,8,1,9,-2,1,-6,-5,10,-10,-6,2,-9,4,1,-2,-5,10,10,9,4,7,4,5,-3,-8,9,10,-8,7,4,-2,-2,6,-2,5,6,5,3,1,-4,-6,8,3,10,5,9,-2,10,4,-2,7,2,-7,2,2,6,1,4,10,-5,-10,4,9,10,3,4,-2,-2,1,9,-3,1,-1], dtype = "int16")#candidate|12161|(624,)|const|int16
call_12160 = func_7588_call(relay.reshape(const_12161.astype('int16'), [3, 13, 16]), relay.reshape(const_12161.astype('int16'), [3, 13, 16]), )
call_12162 = func_7588_call(relay.reshape(const_12161.astype('int16'), [3, 13, 16]), relay.reshape(const_12161.astype('int16'), [3, 13, 16]), )
output = relay.Tuple([uop_12133,call_12136,const_12137,call_12142,const_12143,const_12144,call_12160,const_12161,])
output2 = relay.Tuple([uop_12133,call_12138,const_12137,call_12145,const_12143,const_12144,call_12162,const_12161,])
func_12170 = relay.Function([var_12132,], output)
mod['func_12170'] = func_12170
mod = relay.transform.InferType()(mod)
var_12171 = relay.var("var_12171", dtype = "float64", shape = (9, 7, 11))#candidate|12171|(9, 7, 11)|var|float64
output = func_12170(var_12171)
func_12172 = relay.Function([var_12171], output)
mutated_mod['func_12172'] = func_12172
mutated_mod = relay.transform.InferType()(mutated_mod)
var_12604 = relay.var("var_12604", dtype = "int64", shape = (13, 8, 10))#candidate|12604|(13, 8, 10)|var|int64
var_12605 = relay.var("var_12605", dtype = "int64", shape = (13, 8, 10))#candidate|12605|(13, 8, 10)|var|int64
bop_12606 = relay.greater_equal(var_12604.astype('bool'), relay.reshape(var_12605.astype('bool'), relay.shape_of(var_12604))) # shape=(13, 8, 10)
const_12613 = relay.const([[[False,True,False,False,True,False,True,False,False,True],[False,True,False,False,False,True,False,True,True,True],[True,False,False,True,False,True,True,False,True,True],[False,False,False,False,False,True,True,False,True,True],[True,True,False,True,False,False,False,False,False,True],[True,True,True,True,True,False,True,False,False,False],[True,False,False,True,True,True,False,False,True,True],[True,False,True,True,True,True,True,True,True,True]],[[True,False,True,False,True,False,False,False,False,False],[True,True,True,True,False,False,False,False,False,True],[True,True,True,False,False,False,True,True,False,False],[True,True,False,False,True,False,False,False,False,False],[False,True,True,True,True,True,True,True,True,True],[True,False,False,False,True,False,True,False,False,True],[True,True,False,True,True,True,True,True,True,False],[True,False,True,False,True,False,True,True,False,False]],[[False,True,False,True,True,True,True,False,False,True],[True,True,False,True,False,True,True,False,False,False],[False,True,False,True,True,False,False,False,True,False],[False,True,True,True,False,False,False,False,True,False],[True,False,True,False,False,False,True,True,False,False],[True,False,True,False,True,True,False,True,True,True],[True,False,False,False,True,True,True,True,True,False],[False,False,False,True,False,False,True,False,True,True]],[[False,True,True,True,True,True,False,True,False,False],[False,False,False,False,False,True,True,True,False,False],[True,False,True,False,False,True,False,True,True,False],[True,True,True,False,True,False,True,True,True,False],[True,True,False,True,True,False,False,True,False,True],[True,True,True,False,True,True,False,False,True,True],[False,False,True,True,False,False,True,False,True,False],[False,True,True,False,False,False,False,True,True,False]],[[False,True,False,True,True,True,True,True,True,False],[True,True,False,False,False,False,False,True,False,True],[True,False,False,False,False,True,True,True,False,False],[True,False,True,True,True,True,True,False,False,False],[False,True,False,False,True,False,True,True,False,True],[True,True,False,True,False,False,False,True,True,False],[True,True,False,True,False,False,False,True,False,False],[False,True,False,False,True,True,False,False,True,False]],[[False,False,False,False,True,False,False,False,True,False],[False,False,True,True,True,True,True,True,True,True],[False,True,False,False,True,False,True,True,False,False],[False,False,False,False,False,False,False,True,False,True],[True,False,True,False,True,True,True,False,False,False],[False,False,True,False,False,False,False,False,False,True],[False,False,True,True,False,False,True,False,True,True],[True,False,True,False,False,True,True,True,True,False]],[[False,True,False,True,False,True,False,False,True,False],[True,True,False,True,False,False,True,True,False,False],[False,True,False,False,True,False,True,True,True,False],[True,True,False,True,True,False,False,True,False,True],[True,False,True,True,True,True,True,False,True,True],[False,True,False,False,True,True,False,False,False,True],[True,True,True,True,True,False,True,True,True,True],[True,False,True,False,True,False,True,False,False,False]],[[True,False,False,True,False,True,False,False,False,True],[False,True,False,True,False,True,True,True,True,False],[False,False,False,False,False,True,False,True,True,True],[False,False,True,False,True,False,True,True,False,True],[False,False,False,True,True,False,False,False,True,True],[False,False,True,False,False,True,True,False,True,False],[True,True,False,True,True,True,True,False,True,True],[False,True,False,False,False,True,True,True,False,False]],[[False,False,False,False,True,False,True,False,True,False],[True,False,True,True,True,False,True,False,True,False],[False,True,True,False,True,False,True,False,True,True],[True,True,False,True,True,True,False,True,True,True],[True,False,True,True,False,True,True,True,True,False],[True,True,True,False,True,True,False,True,True,True],[False,False,True,False,False,False,True,False,True,True],[True,True,True,False,False,True,True,True,False,True]],[[False,True,False,True,False,False,False,False,True,False],[False,True,False,True,False,False,True,True,False,True],[False,True,False,False,False,False,True,True,True,False],[False,True,True,True,True,True,True,True,False,False],[True,False,True,False,True,True,False,False,True,True],[True,True,False,True,True,False,True,True,False,True],[True,False,False,False,True,True,False,False,True,False],[False,False,False,False,False,True,True,True,True,False]],[[False,True,False,False,False,True,True,False,False,True],[True,True,True,True,False,True,True,False,True,False],[False,False,False,False,False,True,True,True,False,False],[False,False,True,False,False,False,True,True,False,False],[False,True,True,False,False,True,True,True,True,False],[True,True,False,False,True,False,True,False,False,True],[True,False,True,False,False,True,False,True,True,False],[True,True,True,True,True,False,False,False,True,False]],[[True,True,True,True,True,True,False,False,True,False],[True,False,False,False,True,False,True,True,True,False],[False,True,False,True,False,True,True,False,False,True],[False,True,False,False,False,True,True,False,True,False],[False,False,True,False,False,False,False,True,True,False],[False,True,True,False,True,True,True,False,True,True],[True,False,False,True,False,True,False,True,True,True],[True,False,True,False,False,True,False,True,True,False]],[[True,True,True,False,True,False,True,False,True,False],[False,False,False,False,False,False,True,False,True,True],[False,True,True,True,True,True,True,False,False,False],[False,True,True,True,True,False,False,False,False,True],[True,False,True,True,True,True,False,False,False,True],[True,False,False,False,True,False,False,False,False,False],[False,False,False,True,True,True,True,True,False,False],[False,True,False,False,False,True,True,False,False,True]]], dtype = "bool")#candidate|12613|(13, 8, 10)|const|bool
bop_12614 = relay.power(bop_12606.astype('float32'), relay.reshape(const_12613.astype('float32'), relay.shape_of(bop_12606))) # shape=(13, 8, 10)
output = bop_12614
output2 = bop_12614
func_12626 = relay.Function([var_12604,var_12605,], output)
mod['func_12626'] = func_12626
mod = relay.transform.InferType()(mod)
mutated_mod['func_12626'] = func_12626
mutated_mod = relay.transform.InferType()(mutated_mod)
func_12626_call = mutated_mod.get_global_var('func_12626')
var_12628 = relay.var("var_12628", dtype = "int64", shape = (13, 8, 10))#candidate|12628|(13, 8, 10)|var|int64
var_12629 = relay.var("var_12629", dtype = "int64", shape = (13, 8, 10))#candidate|12629|(13, 8, 10)|var|int64
call_12627 = func_12626_call(var_12628,var_12629,)
output = call_12627
func_12630 = relay.Function([var_12628,var_12629,], output)
mutated_mod['func_12630'] = func_12630
mutated_mod = relay.transform.InferType()(mutated_mod)
var_13381 = relay.var("var_13381", dtype = "float64", shape = (14, 10, 15))#candidate|13381|(14, 10, 15)|var|float64
uop_13382 = relay.asinh(var_13381.astype('float64')) # shape=(14, 10, 15)
func_10762_call = mod.get_global_var('func_10762')
func_10766_call = mutated_mod.get_global_var('func_10766')
const_13388 = relay.const([[2],[-7],[-10],[-7],[10],[-5],[3],[-3],[-2],[-8],[-4],[8],[-8],[-10],[10],[3],[9],[-4],[-4],[9],[3],[9],[9],[6],[-2],[8],[-5],[7],[3],[-4],[9],[-5],[-1],[9],[-2],[-7],[2],[8],[1],[-3],[-10],[9],[9],[1],[-1],[-5],[4],[1],[8],[1],[10],[-4],[6],[-6],[-8],[10],[-1],[-5],[4],[4],[-3],[-6],[-6],[-2],[-8],[-4],[-1],[-1],[-2],[5],[-7],[10],[-3],[10],[-1],[3],[-1],[10],[-7],[-4],[5],[3],[8],[-4],[2],[-10],[4],[7],[-3],[7],[1],[-7],[-2],[-2],[9],[-5],[-3],[10],[-6],[-2],[4],[7],[10],[-7],[3],[6],[-5],[-6],[1],[-7],[-3],[-5],[-5],[-8],[9],[-9],[-9],[-9],[2],[-3],[-2],[-9],[-3],[-6],[-3],[5],[9],[2],[4],[5],[9],[-4],[-2],[-1],[-1],[-9],[5],[-1],[-5],[3],[2],[-3],[7],[-5],[7],[-4],[-7],[9],[1],[4],[-2],[4],[3],[8],[-2],[5],[10],[-5],[5],[-9],[1],[1],[10],[-7],[-7],[5],[-6],[-9],[-6],[-6],[-7],[-2],[-2],[5],[8],[-2],[-5],[-9],[2],[-8],[-9],[-2],[-3],[5],[-9],[6],[3],[-4],[-7],[-2],[3],[8],[-6],[7],[-4],[-1],[-7],[9],[8],[-7],[-4],[-3],[-5],[2],[8],[-8],[8],[10],[-2],[-6],[-1],[9],[-1],[-10],[-2],[-6],[-2],[-3],[-7],[-10],[9],[-7],[6],[2],[6],[6],[6],[7],[-4],[6],[4],[2],[10],[4],[10],[-4],[1],[-5],[9],[-7],[-7],[4],[8],[1],[-8],[8],[7],[-9],[-7],[6],[-4],[6],[2],[-4],[-1],[7],[4],[1],[3],[-4],[7],[5],[3],[-2],[-7],[-8],[1],[-8],[-5],[3],[5],[-6],[-1],[1],[-7],[7],[6],[-9],[-5],[9],[-1],[3],[-1],[4],[-7],[-4],[5],[1],[6],[-10],[-6],[8],[-10],[-1],[10],[-7],[7],[5],[-2],[5],[-4],[-2],[-10],[-6],[5],[-9],[4],[1],[4],[9],[1],[5],[7],[-5],[-8],[8],[9],[2],[-1],[6],[-6],[-6],[-2],[-6],[-8],[10],[-2],[-9],[-4],[-8],[7],[4],[-4],[-7],[-7],[-2],[8],[5],[5],[-6],[-6],[-4],[1],[7],[-2],[-8],[9],[-6],[8],[-1],[-8],[8],[-10],[-8],[4],[-10],[2],[1],[1],[-1],[-5],[1],[10],[-8],[-3],[-5],[-1],[-7],[-8],[6],[8],[-6],[-1],[-6],[-7],[5],[-5],[-7],[-6],[-5],[-3],[9],[7],[-4],[2],[-9],[-9],[-3],[-4],[-5],[3],[4],[-8],[4],[5],[4],[2],[-3],[-3],[4],[-1],[6],[-1],[-10],[-5],[7],[-7],[-9],[-3],[3],[-2],[7],[4],[3],[-9],[1],[-3],[9],[5],[9],[6],[-1],[9],[2],[-10],[-10],[-3],[6],[-9],[3],[7],[7],[2],[-4],[-5],[6],[-8],[-8],[6],[9],[-4],[8],[-7],[5],[3],[-1],[3],[-2],[4],[-1],[-8],[-4],[-5],[-3],[2],[-6],[-10],[6],[-1],[3],[-10],[-6],[-4],[9],[2],[-1],[-8],[-7],[7],[5],[-4],[10],[7],[3],[-8],[4],[1],[-2],[-6],[-5],[2],[3],[10],[4],[-1],[-9],[-3],[-9],[4],[10],[8],[-1],[-4],[8],[-5],[-10],[-10],[8],[2],[7],[2],[-8],[-6],[7],[3],[-1],[9],[-2],[4],[-3],[-4],[7],[-8],[3],[-6],[5],[8],[-5],[4],[-4],[9],[-8],[9],[1],[1],[-4],[1],[-6],[-6],[-10],[1],[4],[-1],[-6],[1],[10],[7],[-8],[7],[2],[7],[2],[7],[6],[-8],[8],[4],[-3],[-1],[9],[-10],[1],[8],[-6],[3],[4],[5],[-8],[3],[8],[4],[3],[5],[2],[4],[9],[-2],[-1],[-2],[-5],[6],[6],[5],[-4],[10],[2],[-7],[2],[10],[10],[-5],[7],[-9],[-8],[-9],[7],[4],[7],[-9],[-8],[2],[-5],[-4],[10],[10],[1],[7],[5],[-8],[9],[7],[3],[1],[-1],[-10],[9],[10],[8],[10],[-9],[8],[-8],[-7],[2],[-7],[5],[7],[7],[5],[-8],[8],[6],[3],[1],[3],[-6],[1],[-7],[8],[-6],[-8],[-10],[8],[-5],[-3],[7],[-10],[9],[-6],[-9],[-2],[10],[-8],[2],[4],[-10],[10],[1],[5],[-8],[-9],[-2],[-5],[-2],[-1],[9],[-5],[-7],[-6],[8],[8],[6],[8],[-3],[-3],[5],[-5],[1],[-10],[-2],[-6],[-6],[-10],[4],[1],[-9],[10],[4],[-3],[4],[7],[6],[-8],[3],[-1],[-1],[-8],[6],[10],[-5],[1],[-2],[9],[10],[-5],[8],[6],[6],[-2],[-4],[-6],[8],[3],[-1],[5],[8],[1],[-7],[-5],[4],[3],[-4],[7],[-5],[-2],[2],[5],[1],[5],[1],[-1],[-5],[8],[-3],[-1],[5],[-9],[5],[10],[5],[-8],[-2],[-8],[-10],[-7],[4],[-1],[-10],[-1],[2],[-10],[-5],[7],[-2],[-1],[-10],[3],[-1],[5],[3],[-4],[1],[6],[-4],[4],[8],[-4],[-2],[-5],[7],[3],[-7],[7],[7],[-1],[5],[-7],[-3],[-8],[1],[-3],[-6],[4],[-8],[-4],[6],[-2],[4],[-1],[3],[-1],[-9],[5],[-3],[-7],[4],[3],[-10],[10],[7],[3],[-3],[-8],[-6],[6],[-3],[8],[-7],[-2],[-5],[-5],[10],[1],[-7],[8],[-6],[9],[9],[6],[6],[-5],[-1],[9],[-7],[8],[-1],[-2],[-1],[2],[5],[1],[-2],[1],[-8],[7],[9],[3],[8],[-7],[2],[-8],[8],[-5],[-3],[4],[7],[-9],[6],[2],[-7],[5],[4],[7],[9],[-8],[1],[7],[8],[-8],[-9],[10],[8],[8],[-1],[5],[3],[5],[10],[-1],[8],[-4],[-5],[-8],[-3],[5],[9],[-1],[-5],[10],[-9],[-2],[-8],[10],[-1],[-9],[-10],[9],[5],[10],[4],[-1],[9],[1],[-1],[7],[-7],[-4],[8],[-3],[5],[-9],[8],[-2],[-5],[-1],[8],[-5],[6],[-2],[-6],[-8],[-10],[6],[-6],[-8],[-2],[10],[6],[2],[-6],[2],[9],[-2],[3],[1],[-3],[-10],[1],[4],[6],[10],[10],[9],[2],[9],[4],[-2],[9],[7],[10],[-1],[7],[7],[-9],[5],[2],[5],[-3],[-9],[-4],[1],[-8],[-3],[8],[10],[10],[-10],[-3],[4],[7],[-7],[-5],[2],[5],[-3],[8],[8],[-8],[6],[1],[-4],[7],[7],[-1],[10],[-2],[-9],[-9],[5],[2],[2],[-1],[-7],[-1],[6],[9],[4],[-4],[-6],[4],[4],[-4],[3],[6],[7],[5],[10],[-10],[-6],[2],[-3],[-2],[6],[10],[2],[7],[9],[1],[-5],[9],[6],[1],[-1],[-5],[-10],[-1],[-5],[-1],[-8],[5],[4],[7],[5],[7],[-6],[-2],[-2],[10],[-2],[2],[-9],[8],[-5],[-7],[2],[4],[3],[-9],[-1],[8],[3],[-4],[3],[-10],[-9],[10],[7],[-4],[-6],[7],[2],[-4],[-7],[5],[1],[9],[-3],[1],[-5],[4],[3],[-1],[-1],[5],[5],[-7],[-7],[4],[-6],[-2],[-2],[1],[4],[-3],[2],[2],[-3],[-8],[-8],[-2],[-6],[2],[10],[7],[-2],[-10],[-2],[10],[-4],[-4],[2],[4],[10],[10],[8],[3],[-2],[7],[-10],[7],[5],[-6]], dtype = "uint8")#candidate|13388|(1092, 1)|const|uint8
call_13387 = relay.TupleGetItem(func_10762_call(relay.reshape(const_13388.astype('uint8'), [14, 6, 13]), relay.reshape(const_13388.astype('uint8'), [14, 6, 13]), ), 0)
call_13389 = relay.TupleGetItem(func_10766_call(relay.reshape(const_13388.astype('uint8'), [14, 6, 13]), relay.reshape(const_13388.astype('uint8'), [14, 6, 13]), ), 0)
output = relay.Tuple([uop_13382,call_13387,const_13388,])
output2 = relay.Tuple([uop_13382,call_13389,const_13388,])
func_13391 = relay.Function([var_13381,], output)
mod['func_13391'] = func_13391
mod = relay.transform.InferType()(mod)
mutated_mod['func_13391'] = func_13391
mutated_mod = relay.transform.InferType()(mutated_mod)
var_13392 = relay.var("var_13392", dtype = "float64", shape = (14, 10, 15))#candidate|13392|(14, 10, 15)|var|float64
func_13391_call = mutated_mod.get_global_var('func_13391')
call_13393 = func_13391_call(var_13392)
output = call_13393
func_13394 = relay.Function([var_13392], output)
mutated_mod['func_13394'] = func_13394
mutated_mod = relay.transform.InferType()(mutated_mod)
var_13689 = relay.var("var_13689", dtype = "float64", shape = (1, 8, 2))#candidate|13689|(1, 8, 2)|var|float64
uop_13690 = relay.sqrt(var_13689.astype('float64')) # shape=(1, 8, 2)
output = relay.Tuple([uop_13690,])
output2 = relay.Tuple([uop_13690,])
func_13700 = relay.Function([var_13689,], output)
mod['func_13700'] = func_13700
mod = relay.transform.InferType()(mod)
mutated_mod['func_13700'] = func_13700
mutated_mod = relay.transform.InferType()(mutated_mod)
var_13701 = relay.var("var_13701", dtype = "float64", shape = (1, 8, 2))#candidate|13701|(1, 8, 2)|var|float64
func_13700_call = mutated_mod.get_global_var('func_13700')
call_13702 = func_13700_call(var_13701)
output = call_13702
func_13703 = relay.Function([var_13701], output)
mutated_mod['func_13703'] = func_13703
mutated_mod = relay.transform.InferType()(mutated_mod)
const_13723 = relay.const([[[3.485159,-9.660402,-7.474595,-2.017382,-2.834992,-5.396391,7.653220,-6.651719],[4.348376,-8.850558,-7.674115,5.641645,2.252050,1.428127,2.916571,7.214366],[1.429150,-9.992407,1.280618,8.395506,0.600605,-7.352571,-7.698503,-6.784442],[7.836104,1.602975,8.574593,2.632859,6.126632,-4.501892,4.459844,1.699624],[0.827604,-2.831350,-6.769726,7.277070,8.609732,-2.404412,-1.752493,-4.633393],[6.788896,0.587362,-2.229852,-8.087387,0.967590,-9.127344,-0.571150,-8.590304],[2.481692,-0.375837,-6.780108,3.271154,8.929678,5.720722,-3.663726,6.384340],[8.790732,3.298904,7.945582,9.205728,-3.104878,7.530290,7.103867,5.600076],[-8.228694,0.397857,3.741002,5.857172,-7.443383,-7.221642,-5.605252,3.086622],[-8.471857,5.630456,-4.216434,3.510903,-1.047931,0.724688,-4.790903,-1.019908],[-5.740009,9.053542,-8.598133,-0.464060,8.945268,6.598530,-7.100958,8.524872],[4.129874,-7.111631,-9.134573,9.108518,-8.170199,-4.514046,2.667387,0.434970]],[[-0.427674,7.847691,8.375468,-1.463478,-8.829881,-5.244703,-3.193535,5.291997],[-6.790756,5.703045,7.919266,7.815807,3.725624,-4.754032,-6.663426,-0.723895],[-7.106491,0.945296,9.437269,-8.398582,-8.791377,-1.428886,1.884470,-5.206894],[6.088230,-0.345785,-2.132459,-9.232084,1.795055,-9.976731,-7.702556,8.932956],[-4.532433,7.035193,-1.189022,8.990063,-2.334679,0.061411,-5.885904,-0.139241],[4.473350,-9.783310,-6.674789,5.323111,-6.855105,-3.771424,-6.576222,2.194589],[-0.187831,-3.853569,9.669163,8.030726,0.424735,5.858680,3.079494,3.937990],[-2.341403,-7.822548,-5.933086,-5.387559,-6.857616,3.683385,-0.414081,2.623769],[9.088712,6.032373,-5.708629,4.551240,9.638443,5.601048,-2.522601,8.638890],[-6.258380,0.715311,3.152614,2.456004,-9.240657,-1.329118,-4.193283,-8.953497],[5.422266,-9.528031,-3.450642,5.553287,-8.455577,-8.779948,8.569750,8.269815],[-8.528651,-5.404984,-2.695076,4.885310,9.128530,-9.662763,6.621894,5.437676]],[[-2.323272,-0.390742,4.529669,2.457331,-7.757007,-8.779413,8.491084,-6.893396],[4.386091,-5.605433,-2.736171,-7.492664,0.806702,7.036859,9.544507,-0.691970],[-5.076090,9.923390,-6.242679,6.267744,-7.111139,0.534259,0.405636,8.551346],[-5.081899,3.480346,9.214795,-5.515250,-9.712509,-4.627862,9.118296,2.056229],[8.481116,2.043507,5.474131,9.101284,6.710340,-6.345401,-6.797278,8.970208],[2.647151,1.567155,-0.871313,2.611297,-1.338586,8.013395,-7.113399,2.846412],[6.199106,-3.270245,-6.943456,-9.221900,-4.967174,-3.178875,3.807975,7.351581],[-4.187366,5.470683,1.205909,5.794349,-4.654981,1.071284,-0.960872,0.559637],[8.437245,-3.541977,6.219661,5.472009,3.841688,-1.972012,5.285492,1.274247],[-5.957987,2.063062,-4.698633,9.046166,9.418990,3.765369,-6.629319,6.474744],[-0.185612,4.307297,-5.055476,1.950540,-8.204393,-8.731921,-9.937550,-5.693796],[1.488292,-3.231884,-3.707902,-7.310272,-8.929134,9.305395,-7.166528,-7.100109]],[[3.384301,-6.025224,3.831719,2.820693,2.221088,1.638565,-5.599148,7.893592],[3.120871,5.115315,0.229830,9.756007,2.961031,-9.560761,4.442861,7.640035],[-6.070181,0.130626,3.040798,-7.130960,-0.856638,-7.516993,4.473118,-1.963324],[8.704546,-7.535372,-9.662680,-3.015787,0.816566,8.894787,-3.565110,4.937011],[0.516365,-5.281664,2.441899,5.211869,-5.953605,-0.806621,9.793853,4.241249],[-9.069291,-3.649049,8.578771,1.772909,4.978157,-6.928294,7.318135,5.964362],[-3.282147,6.535716,-6.356765,9.912430,5.453613,-4.877459,8.663242,2.013687],[2.073962,-8.174353,4.173450,6.896605,-7.495441,-0.215217,7.539985,-4.768037],[3.690142,-6.529356,5.755094,-0.337020,9.929625,9.347037,-4.823451,2.689722],[-9.340978,9.922492,3.311997,6.266950,-7.072170,9.690204,1.096087,5.002695],[4.166360,-7.113521,2.792213,6.596843,4.663644,5.045164,-7.184772,3.450311],[-6.813574,-3.941848,-4.786750,-0.519735,4.759338,-0.750731,3.115558,6.277920]],[[3.647012,4.631394,-8.050932,-4.640518,-0.925286,-6.907669,-6.159934,7.712662],[-6.174990,-8.170187,5.652310,0.286972,-7.292604,2.342202,0.246158,-3.393260],[-3.082113,2.513311,4.205883,-4.252895,-2.634862,-6.909392,7.267001,1.518640],[2.007374,-0.418998,-2.779318,4.882517,5.737013,8.748507,3.400895,-9.560734],[4.071088,-1.131243,3.742309,-5.831504,3.159365,-9.897613,5.548146,-6.940421],[8.607173,4.065527,-7.313136,-1.426326,-9.865518,-2.396323,5.926399,3.479865],[6.482490,4.804544,1.050907,-9.984512,-5.032337,6.468740,-8.000970,-0.885851],[-3.348418,-4.032882,-2.167133,-9.186741,-9.939096,-8.152924,7.242871,-6.600005],[-7.666421,9.164189,-0.513451,-8.373911,-7.216034,-2.708672,-0.785854,-8.897380],[-3.015573,1.760149,8.320580,1.422661,2.940033,-3.365386,-7.959138,3.430323],[-9.944000,-8.991655,-7.624676,-2.916729,-4.963217,1.300455,2.827445,6.630959],[-6.979207,6.093481,-9.902430,4.471883,-5.187441,9.664833,5.105006,9.803727]],[[6.536704,-5.406924,7.598978,6.106621,5.977936,-7.256367,-8.261701,-2.327382],[-8.716589,3.236342,0.620457,-7.037919,-4.221308,-8.239389,-1.970494,5.293612],[7.403670,3.681048,-8.654760,-9.023285,-8.931246,0.144055,-0.371068,5.599305],[7.506707,3.432935,-6.475662,-4.922574,0.359736,-4.902634,3.633600,-6.366846],[4.227531,1.802908,-4.857491,0.026198,-9.673359,0.977009,-5.600283,9.708208],[7.849201,-4.564122,2.048305,-7.265103,9.377478,-4.542039,4.951097,3.731503],[9.657761,-9.349927,-4.786504,-0.164850,-4.394332,1.472986,-1.879986,-6.999860],[-8.196182,5.935668,-3.850704,-1.778136,-0.557898,-4.916111,7.529881,-2.509691],[-1.960772,-7.919377,-0.036039,3.414380,8.176348,-2.323726,4.303541,2.479501],[7.928383,6.567844,6.918813,-0.543788,8.401450,7.136057,-7.908504,1.990661],[-8.376772,-4.668681,-4.323656,-5.257416,-1.780125,4.217964,5.436351,4.161223],[-8.851777,-4.112318,1.402584,8.935725,7.301409,4.772881,4.507343,-0.572012]],[[3.642036,-7.830036,-6.245022,7.872705,1.508661,3.286929,7.177725,-9.142291],[4.456797,4.784852,1.947260,8.348610,3.944090,-3.426016,3.476637,0.606899],[7.431956,-0.882749,-0.943402,9.481125,0.154910,-4.928581,2.500985,-2.688590],[-2.478426,5.446962,-7.912796,-1.396547,-4.029313,-4.619193,-3.402305,-4.239170],[-6.959332,2.923510,-7.411524,-8.414915,1.776434,-6.125799,9.960489,-5.015625],[4.972773,5.467004,-1.002672,7.197422,4.186319,1.241900,7.957462,9.125765],[-8.040035,-6.305880,1.790879,-4.104098,-4.126602,-6.793461,5.115000,3.147044],[-4.997315,2.775134,-1.901503,6.187193,-6.049358,5.195827,-5.726869,2.692530],[-5.275247,0.590509,9.094233,-3.125548,3.890899,9.800206,3.813026,6.165778],[-6.615027,7.411666,1.506121,-7.155015,6.294810,-6.757343,-1.203364,-7.097944],[1.608660,9.274978,-5.870721,-7.449169,-8.974065,-2.890026,-0.097176,7.720434],[-3.171377,-7.919234,-1.623047,-3.281187,-7.158221,6.788764,-6.024365,5.250284]],[[-2.914691,-0.336746,6.386545,-0.936836,7.962389,8.728509,-6.923917,-2.540765],[5.319672,-0.055190,8.112759,8.934602,7.748663,-1.373710,5.767129,-0.650342],[-5.335880,-9.347756,1.767307,9.049167,0.766315,9.124937,-4.132086,7.296288],[-8.430095,1.186681,-1.564546,0.862199,2.990228,2.004084,-3.098943,-6.249387],[0.029119,-5.463285,5.158244,5.300312,-8.093314,-6.586908,-8.022198,4.751751],[-6.282409,-1.782374,0.468579,-8.617482,0.194136,8.510469,1.800121,5.874424],[-4.264658,-5.226534,0.286264,7.601266,-0.973641,-0.769321,0.968749,8.879929],[-3.419701,-0.352709,5.649522,8.540824,-4.473820,-2.671124,-3.696786,-3.378644],[0.981374,8.275976,-5.585804,8.242757,-1.697155,5.321695,6.959630,9.549046],[-6.602218,8.190887,0.605313,3.459988,-2.079354,3.079517,8.796951,5.088587],[-2.891229,4.278709,4.992008,4.316343,8.360559,9.668711,9.807704,-0.851795],[-2.560228,-7.891623,-0.813794,-7.382473,4.574469,-4.295340,2.118515,-1.662780]],[[-5.631436,3.668070,-7.319241,1.875636,8.905753,-3.584011,-6.054590,5.661135],[-2.289595,-1.514239,0.659517,4.437620,-2.218678,3.636764,-9.098732,-3.800546],[0.342387,-5.822525,-9.198632,7.711638,6.943416,8.782539,8.545147,-7.978158],[-6.630349,-7.233301,8.206761,-3.680655,2.663892,-3.365027,4.605107,-3.479679],[-5.978337,-2.843254,3.831347,-4.449406,0.177303,-2.770386,-1.841274,2.717316],[8.262180,-3.596037,2.980879,-7.408283,-8.202087,-1.091410,1.974769,1.807327],[-8.354086,0.746288,0.242483,-1.722136,2.160866,4.444105,5.378723,-3.787910],[4.494675,-5.129136,6.149319,2.197447,5.824376,-7.638967,1.761942,-3.568211],[8.697846,4.666716,8.893755,-4.288871,-3.139399,2.775082,-2.633758,-8.837788],[-6.595826,-5.082939,4.250333,-6.177172,-5.668361,-0.205774,-0.006738,9.128918],[-5.460156,-1.138167,-3.862554,-6.800446,2.906938,-4.627257,4.063694,5.918601],[7.735391,9.309273,2.231864,0.131585,-6.053118,0.823857,-5.273237,5.476524]],[[5.023577,0.966200,-8.519208,-8.547276,7.402836,8.637371,3.318802,-8.571755],[-0.237847,-1.372525,6.621853,6.985847,0.092906,-3.623967,1.204534,-6.461870],[-0.807353,-9.379561,0.384652,-6.384447,-9.971522,4.471393,-0.858044,-5.772886],[9.788508,-1.742446,0.392717,9.678595,9.963814,-9.356641,6.513323,4.614600],[-5.062640,-2.363673,7.646498,-3.997567,-4.093975,1.452664,-0.893710,2.208874],[-1.952429,-2.154174,-8.730420,-4.720792,-8.519961,-3.619077,7.305784,2.452768],[-2.235574,6.033025,-6.691333,2.540208,5.688987,5.979505,-2.501101,-6.983174],[-0.646045,-4.565822,-2.008607,-1.990793,-7.724470,-1.010852,6.465252,7.802247],[6.901437,9.960663,7.989072,-5.175949,4.848948,-6.138349,-6.923238,8.456891],[1.420402,1.304822,-7.387036,-2.345863,6.012627,4.470648,-7.059437,-5.447809],[9.605215,6.407602,-8.207454,-0.677168,9.878336,2.311946,8.708810,3.770692],[4.457026,-4.958688,-3.518635,-6.178507,0.725095,-9.158417,-3.101208,8.556923]],[[-1.686782,-8.175790,-4.098427,0.132463,0.791233,5.255206,1.449522,-6.015491],[-2.908248,-6.796288,9.235758,-3.907911,-4.159769,7.422868,4.666325,6.125223],[0.880946,-0.293278,-1.306685,-6.479676,-6.707903,-0.481690,-8.417973,-6.956934],[5.733858,6.497301,3.502608,4.157861,7.486602,0.708987,3.722085,-2.140981],[-4.483840,-9.450884,-4.924357,7.951072,-5.707317,-6.197663,-6.493282,7.065635],[-2.418059,-6.181214,-9.425923,2.786774,-0.033602,-3.588568,2.977442,0.931793],[5.574908,-3.216283,-2.818782,7.724584,3.759071,3.514029,-3.243852,6.876375],[3.974724,1.390274,4.299989,9.179372,5.114882,2.455943,6.940606,-4.717413],[-5.161669,-5.794348,-5.625068,-6.832689,-8.927167,2.917203,-4.431799,1.111243],[0.658691,-8.288320,8.255573,-5.733984,9.673852,-7.148236,-7.596782,-7.044212],[2.841238,7.362648,-9.694322,-3.726749,3.163898,0.862853,-3.929761,-4.060981],[8.948182,2.093312,-4.873995,5.441101,8.979064,-5.136785,0.022493,0.434776]],[[-1.568958,-7.577399,-2.260291,1.012217,6.602631,7.698221,4.544233,9.819107],[-6.154093,7.783510,-1.181176,3.342940,-9.721593,-2.166438,-7.510616,7.995611],[-2.318174,6.052612,-4.034329,1.310360,1.876007,2.200279,-3.680426,-8.234035],[0.340177,4.747372,-4.774037,-6.179453,8.245204,-5.871626,-4.260798,-6.486363],[-3.346048,8.941656,-0.692131,-3.027744,0.980814,-9.782165,-6.688153,3.217700],[-7.018464,7.740928,4.676080,-9.475473,-8.004089,-0.469268,-2.456280,-0.191005],[-9.473109,6.343079,-0.081258,-3.719357,0.751078,9.339476,7.755520,-6.388403],[0.548299,8.486640,5.080461,0.082563,-0.386324,-0.407205,-8.030912,7.325646],[-5.511199,1.944505,-5.186084,-5.513139,-7.919217,6.063159,-4.977810,-5.038488],[-1.581637,-2.167887,5.106260,6.682489,6.400679,-7.094768,-6.572290,-7.811317],[-9.792915,8.123636,-3.029187,-2.180247,0.441447,-4.561926,9.940500,-4.281815],[-6.398981,0.723365,-6.592314,-6.542547,-7.570028,-8.425959,-0.622441,5.046743]],[[-3.703422,-2.582769,5.943561,-0.795013,-7.110204,-9.227988,9.696869,7.505506],[-6.652065,3.294242,-7.511930,-9.071576,-1.006304,9.226750,-6.304798,0.767847],[-4.235007,4.418053,-4.271634,-7.105292,-5.782675,7.406709,8.626812,-5.106122],[2.133557,3.905680,8.221660,9.205987,-1.482234,-0.432747,7.366708,9.094406],[8.343616,9.743353,-9.290339,9.514186,0.522078,-2.672275,2.988894,-5.271712],[-8.477453,-8.748191,9.120586,7.919687,3.775437,-1.216505,1.979572,-0.302158],[-7.454008,7.377505,0.674764,-1.202141,7.373879,-5.996382,2.504237,0.919929],[-5.840294,8.039143,5.998472,2.215355,-8.656528,-6.202661,0.973879,5.411030],[-2.060904,7.245526,2.611892,-6.302518,-7.243831,9.095002,9.887791,-9.157192],[8.483092,-9.899452,-0.981759,5.118641,6.941502,3.445787,-2.310075,5.641901],[7.107660,-0.624652,-1.388516,2.284609,2.097743,-5.162939,5.370885,-9.644142],[-7.279721,-7.984673,-5.738505,7.504940,4.681770,8.380205,2.392743,-4.880068]]], dtype = "float32")#candidate|13723|(13, 12, 8)|const|float32
uop_13724 = relay.sin(const_13723.astype('float32')) # shape=(13, 12, 8)
func_11932_call = mod.get_global_var('func_11932')
func_11935_call = mutated_mod.get_global_var('func_11935')
const_13740 = relay.const([0.546561,0.550572,6.049585,-0.508932,-2.680159,-4.752220,7.549983,7.181288,9.208654,3.825549,3.318806,-6.714667,-8.276938,-8.012088,0.775738,-1.214086,0.322623,9.557867,4.345090,2.884214,-5.075560,-4.678845,-9.227433,3.204340,7.192746,-1.735201,-8.212548,-3.757821,-1.770290,-5.110991,-5.052316,-8.037543,-4.665045,-6.326999,4.934392,0.794450,-9.736233,6.802402,-1.256981,-0.814110,6.975078,-1.364726,-7.084378,-8.269268,3.592328,-7.636775,4.663447,3.538570,-9.244219,5.315628,-0.185999,8.512814,-5.456048,1.231236,-1.523995,9.261630,-3.961622,5.172356,-3.892343,4.188385,5.299502,-3.342593,-8.243463,-1.813066,0.255092,-9.939947,4.183017,-3.080217,-9.476815,-8.525194,-4.191842,-3.973863,6.772784,9.488311,8.275733,-3.527299,-1.760291,2.981427,-5.618363,-9.152144,0.237408,8.203168,-2.915772,4.024809,6.431594,9.684067,4.271496,-6.471465,-8.587017,-0.819249,-7.353187,-4.875645,4.117969,5.154525,4.313725,-8.560275,-1.391851,7.015017,2.615478,1.647650,-6.534339,-4.176413,-0.619092,9.748967,-8.952494,-7.590986,-9.311279,-9.096682,-8.776856,4.498148,4.121454,3.879286,-8.506435,-4.571237,7.271444,-8.010744,8.012690,8.571942,-7.183809,-3.718492,-0.503914,7.014506,3.293290,2.930984,-8.531673,0.128513,-4.645688,8.055658,-6.893530,-9.086509,-4.928841,6.481894,-5.070606,4.951839,0.421947,4.734530,8.435437,-1.155730,-4.222167,-0.494572,6.871857,-5.803091,-4.063387,-6.855092,-9.183700,-8.375621,2.172038,-9.240785,-6.668380,-9.402955,8.195832,-7.021710,4.804604,0.293419,-0.393633,-6.193637,1.384561,9.065497,-9.757161,-1.295356,-3.828896,6.215793,6.796260,3.870744,-2.053739,6.260980,-9.082299,-3.334579,6.993246,1.671155,7.106498,1.176280,2.611099,0.287604,-7.676577,-7.706001,-5.101518,-6.262022,0.077533,-9.043585,-2.883582,7.893523,3.115435,-2.585922,2.727896,-2.798954,6.754053,7.516718,-9.063028,-4.140902,1.505425,7.589655,1.873113,0.221436,-6.329246,-3.824148,3.895003,1.238258,5.455437,6.727600,4.315024,7.533060,9.340001,1.642202,7.513307,-4.701682,-2.139276,5.794662,-5.493413,-7.130014,-4.876686,1.907881,-2.867885,-4.841621,-2.942199,-8.550573,3.587025,-7.737239,8.265098,-2.137790,4.609986,0.330862,-9.894109,4.445493,5.074108,2.538345,-5.846381,8.328401,5.663759,-6.352460,-9.590163,-4.162355,4.485781,-5.029304,-7.968871,5.372021,-7.251029,-4.649124,5.023977,1.424775,5.499881,-9.042276,3.745453,4.448389,5.680303,-7.031546,-7.475517,3.741738,1.007245,-5.959831,-3.970625,0.431083,-0.940966,-0.401949,-8.508253,-8.529454,-2.294653,0.924724,8.039432,4.143278,3.078408,-7.815786,-6.961109,1.866110,1.837179,5.364562,8.152060,-3.137693,-3.755068,-1.643358,-1.510389,4.143857,1.308425,-6.042111,5.201749,-3.651001,2.267430,-5.768895,-2.899763,6.655167,-8.258920,-4.919201,-7.085518,5.354903,5.572253,7.266864,9.342363,-8.568183,8.806549,2.596380,-7.322454,3.346615,-9.387463,6.843993,4.169338,-0.547433,-7.016494,-9.686313,-2.569528,2.104914,9.041619,4.041022,9.716220,1.090970,0.024240,4.515292,-0.005294,7.758767,3.692659,-6.573238,-9.514874,-1.916777,4.074475,6.467784,-5.210504,9.897181,8.176231,-7.993708,-5.491568,6.929965,-0.635755,-5.920428,-4.245005,8.062698,-3.713887,-1.274843,0.429396,3.731960,3.844810,-3.406865,-1.009790,4.209428,-0.518292,-4.695938,-4.434148,-0.396976,1.902646,1.048566,5.507637,5.999431,-2.312464,-9.986138,-9.019544,-6.740598,-8.612403,8.270643,-6.000227,-9.263275,8.519489,-9.721613,-2.466711,-1.028659,3.602988,7.956023,3.524202,-4.049093,2.633222,7.233450,1.521643,7.611941,-3.976371,-9.837906,-1.920072,8.794214,4.620201,7.780653,1.989244,0.206022,9.002918,2.893276,2.722435,1.483597,-0.871254,-6.386186,-5.466923,8.451603,5.710261,-9.616125,-0.753126,9.034636,0.428110,9.052582,-0.417548,4.175880,-2.466858,-8.352358,-8.629364,-1.835392,-6.516983,-0.059434,-9.659784,5.542673,0.818258,9.473086,-9.264377,-3.931746,6.722149,-5.415408,-3.896648,-7.367387,-9.934631,4.847232,-2.923660,8.523531,-9.936505,1.572623,3.881536,-8.952711,-4.740472,-7.964044,-4.443394,-6.109490,-3.768327,-2.461147,-6.643780,6.361885,6.023903,-7.652617,-4.181385,4.401562,8.713386,-1.047122,8.851488,-2.655843,-0.871879,-6.720617,5.612743,5.421653,8.228629,-2.171195,-8.956786,-5.436175,-5.719113,7.436323,-7.018548,-2.694314,4.906784,-0.873902,7.781852,7.447017,9.535208,4.116142,-6.945244,5.435163,-0.426196,-2.808917,4.413630,-3.110718,3.729395,2.394914,-9.729750,3.613412,-2.322261,8.075776,-6.320671,9.426221,-9.755338,-7.956356,9.689129,7.286388,-0.471373,-5.015650,-9.100438,4.259513,-7.523114,-5.936993,-2.756977,0.180176,4.476770,7.594620,0.509165,-8.899711,2.071743,-5.093044,-7.291943,-5.827662,3.743868,-2.015534,4.470064,7.851938,-1.373200,0.075017,-6.879854,9.384175,1.065210,3.982015,-2.481199,-0.118783,4.271984,-6.709260,-5.081336,-3.690777,-2.126201,-1.249282,-1.512483,5.805080,1.850674,-7.332367,3.361369,6.670357,-3.163128,7.007238,-9.042539,-2.637012,8.457073,1.074214,7.272700,0.915400,9.385359,1.283114,-2.685840,-1.126954,2.047796,5.875479,4.583058,7.853060,9.203981,-7.150914,3.707708,4.942932,7.128870,-4.192168,-6.796057,-7.299328,8.597158,-1.714688,3.282262,4.614534,0.667084,3.930408,-8.929787,-6.597877,-6.075413,9.322178,4.800673,-1.249143,-1.531781,0.430486,-8.640126,-6.576883,9.624274,3.369912,2.303897,-9.588565,0.771865,7.384169,-6.299704,-6.772243,-9.251438,-8.712908,-1.163524,0.704465,-6.472668,-4.797129,-6.022067,-3.769273,5.907703,-6.653290,6.472374,6.067280,0.454142,-4.889093,-4.537062,-9.497751,-4.533106,-5.894316,2.310932,8.434160,-2.857912,-9.416346,-3.908306,-1.548712,0.887704,1.795600,6.891280,6.409203,6.784467,2.610732,-3.512822,2.398711,-6.580246,-4.036899,0.037827,3.614198,8.458711,-0.862209,3.675009,4.242306,-5.581561,4.501716,6.737171,-2.253783,-0.401755,-9.699043,3.064710,9.867354,7.748489,9.022270,-7.138803,-1.008523,-0.676485,7.760934,9.014925,-6.509556,0.116300,-0.736603,5.270440,-8.445280,-6.648402,-6.860004,-9.728983,4.740712,8.211026,-9.076631,-5.551138,3.465494,1.655616,-2.703722,7.483210,-7.268073,-5.972846,9.192548,6.654577,6.781360,-3.479094,1.300783,2.285613,-7.488287,7.975619,-9.587434,4.389124,3.437449,0.837092,-3.032558,-1.317069,4.771328,4.980528,-2.740491,-0.551663,-7.367110,-3.787807,2.542378,-3.706733,-9.572916,-5.129773,0.694578,3.035721,3.417661,-1.454113,7.454572,-5.489199,5.902730,-5.810038,8.801440,4.588836,5.089170,2.538042,-2.280121,7.063071,-0.404502,6.623441,3.826438,-5.333599,6.898291,-7.609504,3.552679,-5.280198,-0.343119,1.822861,8.722262,0.781440,-0.889765,-7.756300,4.719389,9.480189,5.839015,2.013673,6.518507,1.720569,3.995856,-2.328046,3.766133,9.016904,4.948501,9.530195,-9.906661,0.870911,4.141156,3.084450,1.187607,-5.254311,5.965791,-5.080566,4.248640,-7.186664,4.375838,-5.657379,9.987980,1.687485,-2.583034,8.981619,1.793938,6.629213,-3.209232,3.316333,5.339834,8.491719,-1.005469,-3.677300,2.923327,-1.448315,6.146474,1.482655,-4.478199,0.427375,8.507057,8.435504,7.163681,-7.111248,5.500838,-0.185968,3.655675,-5.716497,2.070356,-4.761678,7.173618,3.398392,3.051189,5.587328,7.980342,-9.302829,2.870725,-2.972800,-9.068528,6.775644,-2.248911,-5.475622,0.173337,3.763102,2.779292,6.962724,-8.708782,6.451327,-6.345434,-2.135069,6.154025,-6.603140,-4.609722,-0.144248,4.156325,3.378868,1.312786,-5.848099,-2.051525,8.290502,3.202471,-8.256575,5.497816,7.503935,-8.649488,-1.180461,-8.838700,-7.833817,4.991569,9.838120,-4.026819,-6.144663,-3.902135,-3.953466,9.657175,5.095213,8.647947,-6.057611,5.518987,-3.526527,6.303337,-5.999875,2.511266,2.173272,1.186883,-7.373294,0.454703,6.489657,9.085104,-9.614207,3.321333,4.743475,6.055351,7.023082,6.539510,-8.532239,-9.443682,-5.210457,2.201014,-5.715416,-1.895903,0.573438,-6.566425,9.112165,-1.845953,-2.374704,4.821181,-5.449587,4.700402,-9.235962,2.427348,-2.212066,2.631866,-1.908906,-3.011104,4.438108,1.012306,-1.644927,5.980316,9.605913,3.542862,8.105612,4.848750,3.887019,8.793425,8.721398,-3.878441,3.597119,-5.978919,-2.713740,-7.454302,6.726187,-4.737775,6.724252,4.948323,-3.238222,-7.472036,-9.394251,1.887444,5.976679,4.315042,-7.258496,-3.466767,5.257428,3.158440,0.908723,3.159615,3.075938,-5.458029,1.516741,5.686193,-8.370464,4.814080,3.569505,-3.199472,0.817598,3.968535,8.342417,2.082813,-9.139713,-2.743645,4.411527,-6.832744,-8.725203,1.438029,-6.531676,4.114609,9.109248,6.147145,2.313540,4.982581,5.649706,-8.150276,-2.992466,4.117878,-6.994997,-3.982146,7.078634,-5.317251,2.155685,9.523835,-9.796531,-9.033568,7.974757,-3.771944,8.276899,-8.999707,-2.752904,5.006777,-2.357076,6.039329,-5.202866,-9.508631,-4.479969,4.708673,4.525484,-5.931574,6.106023,0.988557,-5.820075,-7.190180,7.799166,3.540548,0.935877,-5.635805,3.778882,9.419358,3.714207,-7.626940,-6.369689,6.871634,-3.889555,-8.149598,-8.887978,5.415784,9.112274,-5.422905,-6.246989,7.356900,-0.499356,4.774138,0.906016,5.933664,9.302060,5.108055,-9.898437,1.526054,-0.763331,-9.235084,0.163357,0.471650,7.477290,1.333274,6.682252,-3.397599,-2.433190,-2.632286,-4.185798,-2.377822,8.827449,6.835510,-9.239295,-0.292606,-2.142932,1.091868,-3.845201,7.300774,-0.472460,3.995064,1.612319,8.608049,-5.504828,8.381294,9.121173,-9.267441,0.864480,-5.090043,-2.900016,-3.071740,-5.271256,-4.849550,7.214704,-7.962927,-5.239050,8.422953,9.780603,2.456957,-2.225629,-2.873094,-8.676491,-9.132636,2.086612,8.966804,-9.213679,-9.255993,4.251887,2.476630,-0.655019,-2.262076,-3.620424,-5.072815,-1.675490,0.951587,0.441144,-8.605618,-0.239164,2.435742,-7.970509,2.105938,1.500903,5.866721,-3.217015,8.722215,-6.799494,3.128755,5.626627,8.233374,4.979401,3.039700,-8.680953,-2.011157,-4.359496,-2.447063,-9.335196,9.583734,-0.225059,-7.288311,-6.503801,6.363866,5.659574,4.416322,1.227731,-6.404800,5.067518,3.909000,0.811243,-3.054099,8.720277,-1.296587,-7.857262,2.506815,-8.524704,3.980803,7.445122,-6.163205,1.257461,-0.978738,-5.352972,9.967283,-5.602772,3.443043,-5.409900,3.219379,6.564118,6.689151,-8.403636,-1.852587,-0.075179,2.901683,-8.178395,-7.580186,0.861152,-2.008657,6.188269,5.910082,-2.650357,3.495598,-1.123555,6.850285,5.570294,1.445403,3.245929,-3.396853,1.350714,-1.920685,8.319659,0.052943,3.672207,-5.841837,9.140037,-6.996079,1.284039,-7.243429,-7.488237,7.385445,-1.098367,9.537750,-3.864527,7.344802,4.724124,1.486330,-9.086327,1.129724,0.539581,-6.928945,2.870498,-7.195127,-3.864331,-3.979354,-0.646970,-3.529081,-2.952378,3.215154,-7.177245,-3.566328,-9.466972,-9.068099,-2.725450,-3.559960,-8.723843,-0.255032,0.189180,-7.901221,2.636676,-0.744921,-7.433713,-3.561846], dtype = "float32")#candidate|13740|(1092,)|const|float32
call_13739 = func_11932_call(relay.reshape(const_13740.astype('float32'), [13, 14, 6]))
call_13741 = func_11932_call(relay.reshape(const_13740.astype('float32'), [13, 14, 6]))
func_2061_call = mod.get_global_var('func_2061')
func_2065_call = mutated_mod.get_global_var('func_2065')
const_13751 = relay.const([3,6,-1,-7,1,-9,-8,4,-1,9,9,-9,2,8,-3,2,8,-7,-6,8,-10,10,3,9,6,-9,2,3,4,-5,-6,-3,6,-7,-2,10,3,3,-5,-9,10,7,-8,9,-2,8,-1,4,9,-10,6,7,1,7,-2,-6,-4,6,3,-5,10,-5,-2,-10,10,-6,-9,10,-2,-5,-1,7,-4,-9,-10,2,-8,3,-5,3,-1,6,3,-4,-2,9,2,9,3,-4,2,3,2,10,-8,-7,-3,1,-8,10,5,-3,7,2,-10,3,4,-2,3,-6,-4,-10,-7,-4,7,6,3,-7,-3,-2,-7,7,-4,-10,10,8,10,-2,10,-3,-9,-8,-8,7,-8,-6,-8,8,1,-1,-3,-6,8,9,3,-4,1,-7,9,-10,-4,1,7,-4,-5,-9,3,-3,-5,-8,4,-3,3,2,3,-8,8,9,-1,6,-9,6,2,2,2,6,-1,9,-8,-8,2,-9,9,8,4,-6,2,-2,1,-2,3,7,6,8,6,8], dtype = "uint32")#candidate|13751|(196,)|const|uint32
const_13752 = relay.const([[-0.093317],[3.022533],[2.364200],[-0.668242],[-7.235433],[4.042296],[5.126204],[-8.536202],[4.764656],[-3.273944],[3.082148],[-5.639463],[-0.858376],[-8.163982],[1.688973]], dtype = "float64")#candidate|13752|(15, 1)|const|float64
call_13750 = relay.TupleGetItem(func_2061_call(relay.reshape(const_13751.astype('uint32'), [4, 7, 7]), relay.reshape(const_13752.astype('float64'), [15,]), ), 3)
call_13753 = relay.TupleGetItem(func_2065_call(relay.reshape(const_13751.astype('uint32'), [4, 7, 7]), relay.reshape(const_13752.astype('float64'), [15,]), ), 3)
func_8538_call = mod.get_global_var('func_8538')
func_8541_call = mutated_mod.get_global_var('func_8541')
var_13755 = relay.var("var_13755", dtype = "float32", shape = (288,))#candidate|13755|(288,)|var|float32
var_13756 = relay.var("var_13756", dtype = "float32", shape = (30,))#candidate|13756|(30,)|var|float32
call_13754 = relay.TupleGetItem(func_8538_call(relay.reshape(var_13755.astype('float32'), [6, 3, 16]), relay.reshape(var_13756.astype('float32'), [30,]), ), 0)
call_13757 = relay.TupleGetItem(func_8541_call(relay.reshape(var_13755.astype('float32'), [6, 3, 16]), relay.reshape(var_13756.astype('float32'), [30,]), ), 0)
func_1722_call = mod.get_global_var('func_1722')
func_1726_call = mutated_mod.get_global_var('func_1726')
var_13762 = relay.var("var_13762", dtype = "float32", shape = (144,))#candidate|13762|(144,)|var|float32
const_13763 = relay.const([-0.727645,9.933198,6.004069,-8.156131,7.431866,-2.753719,-1.260061,-8.600849,2.615231,4.098382,3.367342,3.773691,-7.934855,9.866385,7.308300,6.725874,-7.379108,7.231503,-6.181417,-8.769020,-4.108087,-1.246399,5.845126,0.416402,-8.382018,3.873165,-4.552766,-5.462984,9.458929,-4.990964,7.632409,4.796684,-0.601802,2.230717,-5.408752,-5.408351,-4.003767,6.252573,4.394739,-4.494976,4.373774,9.893693,-9.429476,-2.770226,9.801670,-7.468130,-0.125635,-4.057367,0.112091,8.734203,4.921279,-4.760862,-7.569242,0.786433,-0.297987,-5.336773,0.591729,7.747204,1.608177,-0.028183,-8.234610,0.360538,-1.833426,1.161012,8.322060,3.841548,-4.253011,-2.325616,5.920108,-0.568057,0.583198,5.266773,-0.888730,-9.015187,-0.401969,-0.213121,1.553077,0.004724,7.492666,3.298133,-8.269425,-2.336706,-0.811063,5.172674,-5.654910,9.196379,-6.658923,3.983477,4.757106,-8.760037,-2.403955,-0.859667,-6.208886,5.677131,-7.423800,-1.839359,9.146840,2.051973,8.637216,6.406528,-7.809171,2.233978,8.212101,0.027454,-8.359898,-5.867837,-5.381075,4.121420,-8.117329,6.220979,4.174409,4.119631,-8.767224,5.725854,-2.832212,6.369250,8.512949,1.111862,2.905700,-1.230655,0.289302,-1.550414,7.377591,-6.688456,-2.717114,4.523683,-4.722987,-6.946528,9.152489,-7.824122,-3.781539,0.505230,8.709018,-2.338988,1.292475,-1.441550,5.883904,7.050016,-1.082487,9.968989,8.821124,0.640413,8.447934,-0.383674,7.132418,-0.661820,-7.947013,6.566539,2.912984,7.847174,-8.879115,2.715207,-6.066347,5.028710,-0.724658,-3.140130,3.330154,2.146120,8.872257,6.221656,2.623082,0.087614,2.528568,7.506912,-5.525075,-5.707017,-2.943621,9.267344,-8.421878,-2.561566,9.317227,-2.193464,-3.640238,3.403597,7.360142,-0.713918,2.620692,-2.168010,-8.578747,1.711219,-6.639503,-5.810667,1.697713,-1.885123,-3.524881,-2.143706,2.361957,-9.421607,4.356705,4.315154,-5.421979,4.265764,5.776179,7.096803,8.843782,6.202517,-9.677942,-4.963208,9.810103,5.093845,3.581738,5.500181,-6.655314,-7.892278,6.244975,-1.284791,7.018019,0.572751,9.635612,5.537879,7.416992,6.917655,-0.997837,5.060621,-9.610333,4.586593,9.149501,-2.490190,-9.127074,3.233891,-5.839771,1.308084,7.542682,7.763696,1.416945,8.391785,6.879751,-2.544957,-4.839478,4.626389,-3.196165,3.903498,5.004531,0.097409,-2.371475,3.392986,-1.027065,0.989405,-5.051952,0.958770,0.685485,-7.088675,5.097405,-4.774829,8.097117,-2.745380,-9.032708,6.535603,8.536176,0.527249,3.828194,-7.410145,3.896004,3.669076,-4.616988,-9.253044,6.507782,-8.941409,1.757804,-8.452642,-2.691476,4.509547,-4.735665,-4.730703,3.613526,-0.988650,5.343290,8.814591,-9.459468,-3.120595,4.902227,-6.508653,1.920285,9.572032,5.972214,5.801830,-5.685067,-6.158328,8.757238,-1.522369,-9.453299,3.215812,7.941084,-7.004769,7.297618,6.666143,6.947216,8.207930,-6.779304,-7.784162,5.312728,-7.185072,-2.049053,-3.631159,6.821097,-0.488044,6.202709,6.480235,-2.487667,-1.693420,-8.893227,-5.126891,7.623253,8.828139,-8.482084,7.018606,7.156369,6.937623,-1.209010,-9.769467,-3.257634,6.896212,-5.695399,9.556787,6.775631,6.217955,2.474062,5.593796,2.780562,-7.484409,-4.918467,2.050403,3.167772,2.507765,3.167627,-3.058343,2.926020,4.511218,-0.048487,-5.677976,6.679317,-9.485659,-6.881731,9.190026,-6.165223,2.967029,-5.216023,-0.859023,-9.532377,7.519736,2.615406,0.852342,-3.621415,9.799270,9.112540,-7.667550,6.030696,1.926736,-8.598063,9.587153,0.831551,-9.276393,-7.456987,7.247360,-0.393903,-5.073219,-8.359543,-3.767244,-5.319581,-2.842814,-0.113334,-9.662001,2.656705,8.582361,3.302408,-0.665352,8.266313,-1.680519,0.687774,-9.631438,-5.440697,-3.808493,8.933668,8.119912,-4.531868,8.369340,-4.410565,-8.120509,-0.690568,-5.001017,-1.438606,-2.134665,7.688865,7.063839,-2.165962,-0.354230,-7.016894,-2.994250,-7.617702,-7.417772,4.857261,0.681943,0.714942,8.344431,1.627284,2.546093,-1.023146,4.715916,-5.319830,-6.195001,1.972289,-8.326803,1.556114,1.641352,-0.004235,-8.127556,9.635574,-5.063950,6.061585,-5.145410,1.578193,4.977045,8.143406,4.261085,9.260557,8.932465,-3.172653,5.458880,-9.710088,6.453730,-7.252629,-0.952571,5.387586,-5.864921,-1.497871,0.527421,4.642424,9.412590,-7.955668,-1.015028,-0.452370,-5.687822,9.901966,6.085164,-3.563661,3.865848,-1.723743,-6.169431,-3.647406,1.291960,-9.049345,-2.563631,0.266452,-6.815952,-3.668186,5.692774,-6.824801,9.426491,3.648469,6.138328,-6.441571,-7.375276,-5.497247,-4.072780,-8.578352,1.481164,8.912157,-1.019541,2.217795,-0.627543,2.981861,5.996894,3.796276,-8.512215,1.684593,-9.008094,-9.691569,-1.407723,4.628016,8.920649,-2.961277,-0.953637,-8.675425,-3.280554,-0.382327,3.061412,5.618931,7.496297,9.790381,5.809977,-7.334969,-0.932612,3.173435,8.174283,-3.799712,-3.341562,-4.371546,-4.447827,3.031448,-3.250855,0.011184,1.095891,-7.494083,3.375423,-6.440243,-7.903715,-6.744247,5.759956,-9.909877,-5.429816,6.565210,6.387744,-4.969625,-1.615447,6.694034,0.901749,-4.968454,9.081371,0.344421,5.415377,9.961594,-2.361775,-1.159354,8.291427,7.812439,1.536117,-4.617066,-8.171758,-9.787616,-2.176591,8.757670,-6.347549,9.321925,0.461626,-2.070567,-5.762104,-0.067864,8.130606,0.568557,6.110079,0.156027,6.208868,-8.007174,-4.936421,1.135764,-7.878253,-7.910233,-1.926730,-0.210240,-3.744324,-5.978226,-3.943264,-6.694574,-4.603573,6.073972,-7.349626,-4.474119,-8.289056,9.803799,-8.077223,-3.249119,2.630666,1.909646,-7.873318,8.526572,8.398986,6.185432,5.637468,8.131117,4.510351,3.852998,6.662951,-9.238139,-8.933887,-2.106781,-9.413669,0.933119,7.464833,4.515617,-8.528228,5.358246,6.025702,-0.040317,-7.470460,-5.096802,-0.083436,5.985297,0.307719,7.739215,3.966870,-7.835485,-0.013555,0.398560,4.099416,8.827652,-6.985377,6.341368,-9.988789,-9.981854,5.971401,-9.317026,-3.183214,-2.453436,4.963436,-1.889254,0.694928,-0.080397,-5.225270,-0.216169,4.565906,-4.831869,-7.719305,2.548869,1.862558,2.784848,-8.981380,-8.010470,6.545287,-3.554785,-4.787548,3.499298,-9.588502,-5.562645,3.759137,-6.735239,-9.987616,-9.031345,-3.413270,9.049825,4.003797,-9.994665,3.815730,2.982903,7.530154,1.342589,-8.640483,-9.521734,7.119002,2.719048,7.270446,7.312649,-9.989580,-2.658492,6.291603,-9.634498,-9.545825,-6.377214,8.072153,-4.829956,4.611725,5.016802,-8.074598,-6.615984,-8.390571,-6.351409,7.345892,9.477009,-7.571383,-3.167980,-0.956649,-1.777022,-3.265488,-1.542044,-3.935808,-9.276632,-1.654960,4.841734,5.807469,-9.106553,-2.944490,5.113893,-6.031376,4.908644,-1.877247,-8.805661,8.869826,9.769450,1.739172,6.701317,-9.390419,-7.349440,9.953847,8.792271,0.615589,-2.123639,6.383148,-9.162236,4.631973,-3.329156,2.837466,-7.359363,6.016308,-9.472746,7.550994,4.653438,-0.912389,-5.952418,9.834196,-9.938481,-3.973166,-0.969075,8.585338,5.816801,1.573720,-4.598664,4.677233,0.336365,5.841981,0.880994,7.331164,-0.254271,-5.006669,-4.326011,7.902084,1.675160,1.302179,3.986569,-6.046465,8.369214,-1.774205,-4.406022,-1.445811,-1.995816,-2.201941,-5.697785,-5.006434,0.791477,-0.735864,2.223132,-3.917147,7.223706,-6.312053,-8.814359,5.836491,-6.339498,-3.214731,9.513602,-2.638395,-8.759165,-7.174957,8.507904,8.236895,0.073693,-5.500071,3.737131,9.271495,-5.707666,2.555336,-8.646716,1.289922,-6.126849,-2.072399,-2.760230,-5.473237,5.981529,-3.007917,7.234053,1.081897,1.495490,9.226799,-3.220342,1.439392,7.253929,-3.967784,9.911973,-7.314763,5.434892,-2.468641,-8.642268,-7.768349,1.795261,-5.144983,-3.956510,4.255244,7.635459,9.048155,-4.328574,-4.921303,0.004375,2.786537,-0.879153,7.449444,-3.472938,-0.579176,-4.051715,-0.736948,2.177768,-1.058063,-0.180558,7.039246,9.112132,-2.727443,9.619375,4.131667,0.781244,8.556203,-6.174437,7.736338,-4.572556,8.485589,-5.390004,-5.549449,-5.842388,8.755947,9.249061,-2.645125,5.685877,-4.690875,-3.379618,-0.538858,-5.080243,5.194874,-8.961262,-1.500751,-8.705921,0.107374,4.288115,-7.195250,-8.320926,0.789299,-1.459063,-1.444972,-8.417342,-5.088311,-8.698152,-4.855730,6.191670,-5.638802,-4.281005,-0.587832,-4.095070,2.941240,-1.842226,-3.071611,4.645323,-5.174075,3.470982,-4.888487,7.493602,-6.248857,3.750449,-7.087057,2.106693,-0.995492,3.942911,-0.289819,-7.380949,-2.911332,-8.859536,5.487214,-3.187637,9.254689,5.495700,3.383916,5.676792,-2.554127,-3.843265,4.312130,1.815986,5.095691,-2.228034,4.741121,7.300087,5.216865,-8.297554,8.706013,-8.155390,-2.948783,-6.067057,-4.485456,-7.169345,-0.491076,-9.298808,-1.109266,7.632096,-9.356343,2.143696,-9.782572,8.097598,-3.992735,8.948246,-0.555255,1.287306,1.211535,-0.848750,4.472526,-7.026747,9.911380,4.803552,0.606674,7.608054,-0.986015,0.256969,4.670291,3.926686,-9.602423,-8.509031,-2.647788,4.232494,6.995881,-6.897665,-4.063302,4.429573,2.718253,7.208949,7.473248,-1.426216,-6.423448,9.983778,3.329545,4.500307,8.568117,-5.944814,5.900058,9.386556,-2.031885,9.875852,-1.053073,-0.097257,1.807222,-1.367355,5.522937,5.568999,-0.945165,0.049679,1.855512,1.059055,-7.421725,-5.628533,-5.629098,2.928823,1.415304,3.876007,3.280137,5.497469,-7.851335,7.491491,4.012641,6.483591,0.636005,1.438048,9.083288,2.550316,-0.986407,-8.238768,6.888557,0.201371,-6.683821,8.812108,2.980673,7.916413,-4.517840,6.297530,0.117197,-3.754614,4.918574,9.863695,-8.656932,0.955072,-1.320171,4.802362,9.184118,6.301762,-0.346471,9.668522,3.131731,1.800322,0.835953,9.418270,2.066526,-1.677518,9.364147,2.382165,-3.259793,1.287442,-2.950921,2.360401,2.546610,-5.605457,6.984449,1.869532,-5.380541,-9.031622,5.358477,-7.935175,2.177496,-6.791483,-9.918147,0.444609,-3.924095,2.445300,1.221595,-6.156403,2.740247,-7.098365,-4.777016,-0.870139,-5.470668,-4.056528,-6.432354,-7.691008,1.922375,7.418228,5.206152,7.384868,9.609140,-8.626950,1.007559,8.886772,5.092471,5.761169,-7.087845,-6.904276,-4.400412,-3.577774,0.824756,5.371954,1.419215,-4.551738,1.299531,-7.656179,0.335309,3.883236,6.204112,5.568133,7.909790,-2.382727,-0.943708,-6.559571,-5.499724,-4.919316,-6.732260,-6.238847,-0.775349,-8.123931,-1.824910,-8.881811,7.111648,-4.995360,-5.665750,-0.718832,-3.299640,7.235366,0.246232,-8.203030,9.192152,-4.265324,-5.716700,4.123634,2.455693,-8.012061,8.062241,6.819433,-9.529818,8.508787,-4.301986,-8.167175,9.840297,8.159790,-6.286171,-5.498105,-8.430926,9.396796,8.958331,6.950464,-8.123147,4.830713,-2.173292,-5.754956,-8.383928,-3.540512,2.997387,-7.550633,-5.600594,-3.037659,0.687715,-4.612364,7.154145,-6.467992,0.787753,9.634335,5.277437,2.188381,-1.636913,-0.134861,6.329789,2.127308,-3.788308,5.395288,5.894047,1.793740,-1.557059,0.647298,3.012735,3.228017,8.134783,-9.502111,1.905682,1.774530,8.701241,-8.010090,-6.287086,-9.448245,2.113793,2.726176,7.515181,6.266770,0.045621,6.375324,-2.098159,8.861304,7.617947,-4.596824,4.137458,-2.638554,-2.648344,7.523946,-6.440656,6.338245,-3.052387,5.767845,6.929947,5.894275,9.416228,6.037370,6.082719,0.666383,-1.792148,4.072172,2.237288,-9.888566,2.828839,-8.858321,8.494396,3.408554,2.840324,3.659600,-5.424281,0.465086,8.332266,7.006702,2.706559,-1.910620,3.419457,6.416686,6.963024,-5.338041,8.734044,4.042967,-7.485740,-6.515184,2.347358,-5.097343,0.755476,9.647022,-3.062497,3.031661,6.684254,6.084270,-0.887410,-1.988479,-3.139164,-4.612555,7.331636,0.996025,-0.889460,0.711878,9.152399,3.150345,5.664576,-1.170956,-9.482708,0.820947,2.752307,-6.419599,1.178925,0.574354,5.214879,-1.916848,9.772553,-2.257112,2.438074,8.381223,4.730777,6.949347,8.327523,-6.042969,-0.902846,-8.680877,-7.252603,9.431806,6.907626,7.522558,-9.723038,8.782179,3.716958,9.889274,-4.316989,-8.687036,-5.333614,-5.992547,5.115267,6.150998,0.675468,3.342997,-7.808681,2.374271,5.971204,-1.121996,-3.862171,-6.836860,8.034051,2.526479,-7.154070,3.855005,2.551007,7.149760,-6.395485,-0.277043,-2.683831,3.272751,-7.212650,-3.843468,7.175010,2.327068,-6.469780,-0.313386,-9.205536,1.425947,4.377311,8.268451,8.501813,8.239179,3.504678,8.487904,6.424800,-4.766562,5.004517,6.642112,4.756203,3.184501,-8.784848,3.060350,3.028878,-1.441128,5.839810,2.026266,-2.541747,-3.340986,3.803495,9.490925,-8.345038,-7.775626,-0.519301,-1.754956,1.887094,2.705908,4.432215,-3.134672,-6.185607,8.847468,-8.829310,-8.319073,6.230032,-3.074209,-3.830719,3.729254,6.076993,-6.198424,-9.571560,2.015565,-9.160225,4.630138,2.513509,-1.663638,-9.054056,5.508686,2.609793,7.069948,-1.070842,5.622602,6.610155,0.917026,-7.976147,-4.219875,-8.163751,-6.331462,4.614551,4.904124,9.861277,-3.265886,3.410360,-6.718467,5.962018,-1.241388,1.020497,-8.963865,-7.727378,6.438538,2.875259,2.605699,9.425776,3.970334,-2.647887,4.405655,-9.936302,2.361467,8.683057,-5.760846,-8.015581,-8.460442,-5.623659,-8.814851,-2.451711,-2.552707,-0.747292,-7.168278,3.184471,-4.648229,-9.368945,-1.994942,9.246100,-6.225088,3.900013,5.999609,0.769928,-5.564259,-8.491116,0.107257,-2.881524,-9.329231,6.582992,7.494892,-7.655368,-5.191354,5.969316,-3.429584,4.953690,-6.719090,5.351448,-1.524847,2.046342,7.530500,8.329269,7.348908,-4.768014,-4.620471,-6.792511,-5.862001,9.872437,2.473027,4.347722,8.402543,-4.876610,-7.831825,8.787323,1.527488,4.774383,-8.555962,5.625271,-7.327003,-6.787366,9.421996,-0.211315,0.796047,2.641372,6.715288,-4.644947,1.981263,-1.138168,9.080706,-9.712450,-1.756132,1.211861,-9.523605,-2.095596,-2.035097,-8.534172,5.796224,7.807307,-3.071446,3.741738,-6.801845,8.373880,4.619251,9.539478,6.845312,2.476108,6.516434,8.290384,9.956604,-5.153877,-2.435844,5.120495,-0.276208,-9.585577,2.368163,-9.073905,-9.832741,1.866952,8.023847,-6.776712,-2.876254,-2.975064,-2.139273,-1.233550,-0.147169,1.439367,3.478109,-9.403023,1.615253,-4.158040,9.823751,-8.848581,-0.944792,4.645804,-8.418281,0.591196,8.218918,-1.628885,0.508033,9.930409,-7.456273,-9.424064,8.570503,2.806934,2.657512,-0.920661,-5.896782,-2.129011,-4.327613,-3.183031,8.640016,-1.077845,9.039638,-3.776265,1.955754,-4.747461,-3.389606,1.761470,-3.983725,0.973684,-4.495082,-2.690840,-2.876510,-4.676450,-2.315154,-0.183650,-2.770634,-0.891698,6.475558,-7.588868,-2.468494,-4.208451,8.025945,-5.512533,-3.818385,8.057142,4.760351,3.700864,2.611350,4.914825,-9.757338,2.158659,-4.518115,5.964333,1.299609,-1.042382,-7.919593,-4.971854,-9.088117,0.765369,-0.594832,5.427994,-0.600515,-0.304049,-0.704866,1.800717,5.274685,0.220336,-2.456017,7.793507,-8.944618,7.677956,8.667088,-8.653906,6.916915,-1.127573,7.496479,2.240483,4.644246,7.373466,8.699274,-5.293640,6.154940,-4.976564,-7.798864,3.264001,3.692177,-4.252394,4.965642,-6.139644,-2.110822,-0.427233,2.224673,-9.571017,8.665281,-9.513913,-2.037257,0.126725,9.326743,-3.405615,-3.389191,-8.898698,-1.694815,-7.053661,-8.093149,-4.443307,0.995282,-1.058358,6.935231,9.086064,-7.204242,6.325855,2.409074,-4.034697,8.210557,-5.436990,1.241265,6.239110,3.240152,4.688786,3.431740,5.494118,-0.270493,8.054375,-0.171733,4.143440,-4.995632,1.478476,0.743073,-5.056028,-7.659095,-8.587410,-7.115888,-5.892929,5.891975,7.635821,1.492630,-8.114625,-5.629874,4.616786,-4.660846,0.133128,-9.419743,-2.613879,-9.478336,-1.812476,-3.649084,-6.402870,-5.134731,-2.432252,-4.065852,-5.243847,-4.788926,-8.091137,-5.801755,2.093745,-8.381805,-8.075833,-6.713919,-0.575987,5.828816,4.230110,-9.806659,-9.809108,-8.971761,-2.735359,-3.559041,6.280819,3.144420,1.519740,7.182906,5.311228,3.488735,-1.435595,-1.317960,0.507494,6.842136,6.305615,-6.119440,2.437028,6.541323,-4.876557,-6.676826,-4.728836,0.502129,-9.678201,0.817192,-6.452770,5.554921,-1.995782,3.740288,7.630042,-4.386766,-0.397319,8.446461,-9.511860,-6.646106,-0.049255,-2.641560,-0.106516,0.651618,-8.608292,-2.711834,8.563291,-1.929935,-8.133549,2.051364,-3.504994,-2.287044,8.923308,-4.570359,-2.925420,-7.090521,-0.600994,-1.045447,-2.612190,7.125752,-7.791911,5.775317,8.720000,4.778845,0.230900,7.012001,-9.098541,5.690216,8.184173,4.103722,-0.435270,7.743957,-1.011612,0.140571,9.080662,-0.922661,3.882762,8.483954,4.960771,-7.061866,-0.615357,-1.647938,6.005204,-3.598620,-1.765077,1.272745,3.215739,3.488083,-4.825733,-3.127813,3.679364,0.214076,-4.872047,0.812717,0.056469,-8.382917,7.370209,-1.707081,-1.661575,-4.158011,0.391047,6.950286,-5.203169,-5.008225,-3.963665,-7.985827,4.810683,-7.579491,-4.689209,9.826338,0.078950,6.187122,5.675473,4.560059,-8.650577,-6.857731,6.499435,-1.114209,-6.364603,-2.626506,5.691659,-1.836236,-9.911645,-3.064413,-9.589219,-1.834713,-3.018755,-4.811237,-1.105661,9.232354,5.673035,-0.982291,-9.010273,-3.224820,1.070736,3.419940,2.729035,-7.768184,-1.520189,4.420507,-4.870167,-2.842607,2.982391,-3.214105,-8.018776,9.359706,6.162597,8.112473,-2.950847,-5.385747,-2.977978,0.092861,4.917303,-6.330393,-3.913157,-1.037728,5.563823,5.648613,-0.427037,-9.723780,-5.222790,-5.435545,3.255770,0.191528,-4.182134,-1.265264,8.739288,-8.730826,7.196835,-5.148806,-2.102277,-0.955705,2.658727,0.381247,-2.339543,-8.581799,6.469700,-4.291611,-6.684026,-2.197758,-2.385850,-4.922838,-8.412523,-1.949466,4.922377,-5.922713,-7.993588,6.423050,-9.820691,7.973152,0.426465,0.173946,-1.804361,7.084039,9.868127,9.447824,-4.675621,6.038303,0.712849,-0.285181,-5.885060,-7.108611,-7.972895,-0.988871,-9.736190,8.845437,-2.260494,-3.660756,-7.529386,8.716316,-9.083000,9.356653,-9.481563,8.201699,4.697568,-3.222291,-6.119296,-4.928649,5.701823,-0.481972,-1.520954,9.345434,-4.487921,2.809564,4.721574,8.150464,-3.444349,9.615480,2.864696,-9.213997,-6.146342,7.263960,3.448003,1.991318,-9.114876,2.707562,3.305923,5.433843,-3.696481,1.549558,-9.985508,5.311030,0.748411,4.916618,-9.330690,7.240789,4.113989,7.615035,-4.014801,5.035531,-6.187899,7.500216,0.203349,-8.681617,-8.797998,8.567756,-1.453014,8.525106,2.724455,-1.677047,-3.863269,1.922061,-1.547245,-5.672981,1.902890,-7.881751,-6.118013,-5.084400,-9.882054,-2.849318,-2.638846,8.553144,-6.694469,-7.866497,-2.130031,1.945056,3.311233,-2.699726,-4.873605,-3.292386,-5.312586,2.997820,8.672720,-8.206969,-5.451511,-0.103643,-5.768694,6.873801,-2.345172,0.287633,1.770602,8.500340,8.879433,-3.731396,-6.066613,0.015922,7.112388,-7.859235,-7.490051,8.134108,6.443985,5.147121,3.553025,-4.420711,4.087517,-1.407489,1.556804,2.992840,1.745385,-1.497233,-9.984004,-3.152050,-9.477547,-6.859169,0.414331,-2.717939,1.934842,5.108815,-8.438720,-2.719749,2.192769,-2.656827,-4.381395,1.060121,-3.775786,-2.525553,9.260951,-5.745764,4.840983,1.386286,-1.424094,1.909326,7.652515,7.386764,-5.137891,8.712560,-2.140874,-9.012689,6.357681,2.192898,7.650472,2.199322,-3.127324,5.279308,-1.246555,4.442637,-1.147540,2.170896,5.921521,2.576117,-0.444073,7.850945,8.478529,-2.160329,6.385167,-5.224186,6.617233,1.072345,5.780573,5.605631,1.558050,1.908485,1.521759,-3.632772,2.073162,-8.319467,-4.694575,-4.590272,-6.185967,3.864114,-4.650075,-3.640993,1.461353,-3.785685,-5.325671,-6.068923,-4.481431,5.556361,-7.264017,-3.684719,-5.096855,-5.871801,-2.239586,-8.658048,4.601367,-4.257680,5.840892,1.024154,-2.940361,3.131605,9.855978,1.335357,8.843825,2.280764,-5.316684,1.059484,-2.992084,2.576323,9.143484,6.627905,9.276901,-4.407433,4.262508,9.637433,5.347443,-3.760206,3.112522,-9.848853,7.404049,-0.822273,7.594222,-5.896003,6.175358,-9.428341,0.163133,3.128843,5.523145,4.624790,0.182946,4.933651,0.511426,8.097727,2.931520,-0.528455,1.639381,-0.325916,-2.855739,9.159450,-4.692423,-6.438969,9.085282,6.334175,-2.693100,9.350361,8.992656,-8.236559,9.944637,3.303215,-2.175773,9.917411,4.328039,-5.724701,-0.220302,5.886992,-0.953449,-7.357406,-0.673571,-7.367046,-0.656629,-5.913942,-5.264112,-5.116597,4.518793,-6.119875,5.971576,8.074190,8.132786,5.382931,4.994379,3.302593,-9.108160,-5.470953,6.865417,4.861350,-1.554342,0.769847,2.492215,-0.259226,-4.402380,-2.303938,-4.459924,-3.902500,9.364578,3.789188,-6.058562,-7.553890,-0.523478,6.703513,-4.785808,6.151430,5.840983,4.408894,0.521083,8.137026,7.182274,6.200608,0.338601,7.276160,4.295752,-1.367089,0.880423,7.973365,6.517485,0.030726,6.189498,-1.225131,-0.285516,4.601517,-9.951049,8.411284,-6.485645,2.118599,-8.620242,2.039394,-6.084849,1.416114,-7.883305,3.912692,-9.935509,2.215378,-8.514849,-8.322792,-2.789498,-2.437600,-4.037151,-8.855011,-5.640557,-6.660242,-2.474704,9.893197,8.558980,5.688637,3.130222,8.055431,9.166065,8.110740,1.898890,-7.360202,-5.660465,-3.726418,-2.131201,6.516093,-7.418052,1.585379,9.555099,0.890249,-0.719477,4.941429,-7.827453,6.063767,1.425713,4.110280,-3.460879,-4.458865,-1.133945,1.142571,9.847287,8.082913,-8.101994,5.930621,5.662163,1.148629,0.473827,0.363793,8.924515,2.855568,-6.358875,0.880828,9.619508,8.138614,-1.874853,-7.415178,6.704785,-7.233930,5.552028,-2.346239,-3.662872,-3.047582,-3.025000,0.306762,-9.594432,-0.282199,1.046829,6.892193,-0.528124,-1.943167,1.157814,-8.037744,5.915698,-7.339026,-3.315371,1.455568,-0.304582,-9.003113,-4.742800,7.571990,2.715684,0.749872,7.945650,7.672852,0.244339,9.955219,-9.948455,9.602544,-0.010171,-9.322730,-7.369822,4.618933,1.161505,7.911524,-2.717219,-4.621054,6.376577,-5.442419,-0.055176,-8.935025,-7.431695,-8.988623,5.291087,-4.686142,-2.607655,1.502529,-1.208174,2.833256,-7.332853,7.478023,5.357630,-9.203478,0.612515,-4.036042,-5.280449,8.442485,-7.386371,-5.451885,-1.174637,2.374214,2.219997,9.957886,1.439010,-1.439238,-8.988378,-3.549938,1.936315,-6.212544,-5.519668,1.059548,4.863558,0.796107,-2.186589,0.055783,-5.693701,0.344576,4.082794,6.056908,-2.046343,2.792545,-7.242513,-2.923705,-8.671105,-8.427867,2.177373,-4.269983,3.745177,-3.438964,0.200465,-0.016917,-6.401723,4.022684,-4.886335,6.497977,-1.245204,7.411265,-5.531270,2.936079,-8.953514,2.991538,4.351335,-2.740767,4.297619,-0.298529,6.102245,-3.007402,1.553870,3.738514,7.398723,-1.950424,5.630405,-8.710432,9.502089,8.955240,3.321541,-0.962435,-3.999642,0.608026,8.056110,-5.023586,-7.273001,5.784790,-5.786518,-5.792928,5.847881,-2.209017,-9.574215,-1.318085,-8.200205,-3.302998,5.812856,-9.270780,3.778183,5.342474,0.984549,0.158672,7.252864,7.934710,-5.143504,9.788513,-6.635788,-0.927747,-7.141638,3.208231,-2.440417,-6.796142,-7.730176,2.430302,5.840348,-9.319802,-9.622865,-7.963608,-2.238628,-5.964967,3.390774,-5.337266,5.851599,2.462585,-6.068922,-2.027628,-1.738093,-9.941088,9.984177,-5.662946,-2.430497,0.635452,1.734051,-3.374477,-0.304179,-9.260409,-3.330122,1.293804,4.067525,8.748706,0.882896,2.911428,1.442762,-7.209810,7.846484], dtype = "float32")#candidate|13763|(2304,)|const|float32
call_13761 = func_1722_call(relay.reshape(var_13762.astype('float32'), [16, 9, 1]), relay.reshape(const_13763.astype('float32'), [16, 9, 16]), )
call_13764 = func_1722_call(relay.reshape(var_13762.astype('float32'), [16, 9, 1]), relay.reshape(const_13763.astype('float32'), [16, 9, 16]), )
uop_13769 = relay.atanh(uop_13724.astype('float32')) # shape=(13, 12, 8)
output = relay.Tuple([call_13739,const_13740,call_13750,const_13751,const_13752,call_13754,var_13755,var_13756,call_13761,var_13762,const_13763,uop_13769,])
output2 = relay.Tuple([call_13741,const_13740,call_13753,const_13751,const_13752,call_13757,var_13755,var_13756,call_13764,var_13762,const_13763,uop_13769,])
func_13771 = relay.Function([var_13755,var_13756,var_13762,], output)
mod['func_13771'] = func_13771
mod = relay.transform.InferType()(mod)
mutated_mod['func_13771'] = func_13771
mutated_mod = relay.transform.InferType()(mutated_mod)
func_13771_call = mutated_mod.get_global_var('func_13771')
var_13773 = relay.var("var_13773", dtype = "float32", shape = (288,))#candidate|13773|(288,)|var|float32
var_13774 = relay.var("var_13774", dtype = "float32", shape = (30,))#candidate|13774|(30,)|var|float32
var_13775 = relay.var("var_13775", dtype = "float32", shape = (144,))#candidate|13775|(144,)|var|float32
call_13772 = func_13771_call(var_13773,var_13774,var_13775,)
output = call_13772
func_13776 = relay.Function([var_13773,var_13774,var_13775,], output)
mutated_mod['func_13776'] = func_13776
mutated_mod = relay.transform.InferType()(mutated_mod)
const_14317 = relay.const([[[9,-10,1,-9,1,-4,1,-4,-5,-6],[4,6,-5,-1,-9,1,-6,-7,8,3]],[[-8,-4,1,1,9,-10,3,8,-9,9],[3,-6,-10,6,-8,9,8,-5,1,6]]], dtype = "uint32")#candidate|14317|(2, 2, 10)|const|uint32
const_14318 = relay.const([[[-8,-5,-2,2,4,-6,6,3,2,-6],[10,-1,-9,6,7,-8,-2,8,9,-6]],[[1,-7,9,6,-10,6,-8,-6,7,2],[1,7,-5,7,-8,1,8,8,-8,1]]], dtype = "uint32")#candidate|14318|(2, 2, 10)|const|uint32
bop_14319 = relay.equal(const_14317.astype('bool'), relay.reshape(const_14318.astype('bool'), relay.shape_of(const_14317))) # shape=(2, 2, 10)
func_8144_call = mod.get_global_var('func_8144')
func_8147_call = mutated_mod.get_global_var('func_8147')
var_14327 = relay.var("var_14327", dtype = "float32", shape = (30,))#candidate|14327|(30,)|var|float32
call_14326 = func_8144_call(relay.reshape(var_14327.astype('float32'), [3, 10, 1]))
call_14328 = func_8144_call(relay.reshape(var_14327.astype('float32'), [3, 10, 1]))
output = relay.Tuple([bop_14319,call_14326,var_14327,])
output2 = relay.Tuple([bop_14319,call_14328,var_14327,])
func_14334 = relay.Function([var_14327,], output)
mod['func_14334'] = func_14334
mod = relay.transform.InferType()(mod)
mutated_mod['func_14334'] = func_14334
mutated_mod = relay.transform.InferType()(mutated_mod)
var_14335 = relay.var("var_14335", dtype = "float32", shape = (30,))#candidate|14335|(30,)|var|float32
func_14334_call = mutated_mod.get_global_var('func_14334')
call_14336 = func_14334_call(var_14335)
output = call_14336
func_14337 = relay.Function([var_14335], output)
mutated_mod['func_14337'] = func_14337
mutated_mod = relay.transform.InferType()(mutated_mod)
var_14696 = relay.var("var_14696", dtype = "float32", shape = (7, 4, 7))#candidate|14696|(7, 4, 7)|var|float32
const_14697 = relay.const([[[9.389879,2.378811,0.627521,1.015627,4.307955,3.058296,3.240223],[5.785837,-6.963358,8.167843,1.383057,-8.733897,-9.541337,0.566227],[6.372186,-6.538407,2.715328,-4.249889,-1.597613,3.263594,-8.274107],[-5.788268,-5.600474,-2.270399,6.457372,0.220730,-8.712295,-1.565246]],[[0.502793,0.197288,8.924320,3.533922,7.223747,9.644401,8.238351],[3.365247,6.653298,7.445361,5.814489,6.788747,2.938951,2.941311],[-9.590901,6.603025,5.834675,-7.925867,-6.943939,8.189478,5.768073],[-2.204145,-8.042854,1.922471,0.354201,6.048467,-9.576230,9.258455]],[[-4.312290,8.921982,9.474689,-7.166064,-7.740879,0.278965,3.097142],[-2.550646,5.524961,0.826587,3.531347,-6.887370,-8.112821,5.357235],[-1.253123,-8.629531,-8.811589,5.537292,-3.862254,-6.786946,-2.252835],[-4.874409,0.203643,-0.266818,8.140370,-0.718811,-3.571730,1.849986]],[[-7.737110,4.197680,5.005428,2.469548,-6.428306,1.977235,5.863325],[3.188250,8.311457,2.547701,-1.746603,-5.830271,3.819287,-4.968357],[0.203006,-0.721193,2.643680,-1.286101,-9.742261,-0.808392,-5.488232],[7.505156,3.891789,6.165492,-3.812608,1.440729,-5.909551,-4.452399]],[[-0.152669,-1.538672,-1.689627,-1.902974,-2.994524,7.491716,-0.428611],[0.599939,5.164624,-6.869058,0.099642,-3.121253,-4.714379,7.704465],[2.215006,9.784952,-6.663199,2.709108,-2.306209,-5.052201,-7.474263],[9.121456,2.729518,7.961311,-8.474297,-3.370165,9.153370,6.534687]],[[-8.071118,-8.864260,4.704802,-5.650771,6.865800,-7.643591,6.867917],[1.666059,-3.893148,-3.535342,2.020550,2.658848,-8.379897,-3.980767],[-4.897183,2.904532,-0.346677,-1.394557,8.738041,2.308385,-6.862494],[3.605371,6.815578,2.590455,7.806834,4.450778,6.493422,-5.452801]],[[-5.759179,1.931181,0.735355,-5.300348,-3.874262,2.437459,4.595202],[3.472830,-7.305506,2.457355,2.205561,-9.456930,-5.392422,0.318878],[-0.543266,1.043275,-6.100808,3.031408,-6.771129,6.081036,-4.803764],[-7.746476,-2.520536,9.179753,-0.243573,-5.946665,4.903756,4.531204]]], dtype = "float32")#candidate|14697|(7, 4, 7)|const|float32
bop_14698 = relay.mod(var_14696.astype('float32'), relay.reshape(const_14697.astype('float32'), relay.shape_of(var_14696))) # shape=(7, 4, 7)
output = relay.Tuple([bop_14698,])
output2 = relay.Tuple([bop_14698,])
func_14703 = relay.Function([var_14696,], output)
mod['func_14703'] = func_14703
mod = relay.transform.InferType()(mod)
mutated_mod['func_14703'] = func_14703
mutated_mod = relay.transform.InferType()(mutated_mod)
var_14704 = relay.var("var_14704", dtype = "float32", shape = (7, 4, 7))#candidate|14704|(7, 4, 7)|var|float32
func_14703_call = mutated_mod.get_global_var('func_14703')
call_14705 = func_14703_call(var_14704)
output = call_14705
func_14706 = relay.Function([var_14704], output)
mutated_mod['func_14706'] = func_14706
mutated_mod = relay.transform.InferType()(mutated_mod)
const_14916 = relay.const([[[-0.980641,0.377369,-5.608276],[-4.520821,-1.256307,-8.715877],[-9.092118,1.044325,-5.699651],[-8.321164,7.284220,9.693131],[5.822709,-4.558707,3.211723],[-5.903928,4.423241,-1.324455],[1.286069,7.006914,6.539820],[1.303852,-3.883967,-4.388797],[0.712159,-6.353670,0.248464],[7.804823,0.476455,9.039672],[-3.838357,-8.257044,-6.415639],[8.898955,3.593367,8.987700]],[[-3.444886,-3.831716,2.759023],[0.279844,-2.354128,9.540832],[3.282408,-2.013426,4.881627],[4.445360,7.567846,4.800145],[-8.583954,-3.208219,-4.469002],[-4.403405,-3.852502,7.536073],[-7.896532,-1.178246,-8.285747],[-1.737079,-8.689352,9.388280],[7.557699,6.422459,-3.044104],[-3.516685,5.584662,3.085706],[-4.746988,-2.306941,-1.712214],[-9.638183,-6.826245,8.217401]],[[-1.537159,2.823206,-6.317800],[-2.057458,7.090081,1.987300],[9.365117,6.137786,-0.318258],[-4.971833,-0.299841,2.959821],[-3.119982,3.011917,-4.150011],[-3.247880,2.746099,0.790309],[-0.115407,8.925509,-4.478255],[7.561230,-2.691849,-3.773503],[3.933545,3.276320,-6.959216],[7.163842,-9.624167,3.368475],[8.183782,1.731078,1.731876],[5.100039,4.019834,-5.683285]],[[5.421309,0.892230,-8.783674],[-7.961139,-6.781745,4.895831],[-5.312001,8.882699,-7.739254],[0.310182,-4.042822,-4.522277],[7.199791,5.187707,-9.734031],[-6.377675,-7.570255,8.010440],[-9.671119,-5.109026,8.850494],[3.188514,-7.033521,-5.933290],[0.176324,6.311134,-8.024134],[-0.068178,1.876082,-6.907302],[4.177987,9.137535,-5.272421],[-5.780294,-5.262597,9.971711]],[[-2.113757,8.605087,-9.186831],[8.162719,6.411372,2.538185],[-0.563114,6.778443,-7.104059],[1.445882,0.297436,8.983939],[4.502958,-9.215353,-4.767308],[0.046116,-1.755132,-8.979096],[-3.613030,-6.674150,-4.557183],[-6.275139,3.841848,-1.932094],[0.492957,6.465465,-5.210656],[2.478256,-5.842420,9.718127],[3.526275,-4.502699,6.986139],[-9.149877,-2.266050,3.099939]],[[8.884068,-0.300383,8.050037],[-7.063120,-5.959801,3.046462],[-4.682256,9.144535,-3.021672],[9.862375,0.008268,1.699314],[-1.330002,6.599195,4.625895],[2.465235,-3.914423,0.751249],[-3.253663,-4.860080,-5.829574],[5.957253,-6.234225,1.917539],[4.741205,0.330601,-6.170617],[6.903832,-5.984199,-3.470488],[5.251248,-7.301779,5.135033],[-0.915532,1.511064,-7.117885]],[[-6.707046,-2.861212,-3.694656],[-2.779701,9.282066,0.035469],[-4.922114,-8.329459,2.689731],[-4.144146,2.227610,-2.431386],[6.125436,-2.503130,3.930436],[-9.076233,0.060283,3.345030],[-3.080320,2.802065,7.160424],[-5.611000,-1.258580,-0.746064],[0.829133,-0.619102,-3.108437],[5.582107,6.086886,-2.150746],[-4.247406,5.142808,-0.027413],[-7.346667,-5.494698,-0.565927]],[[-0.055166,1.552125,6.814657],[-5.089849,8.641451,1.207279],[7.179567,6.318781,5.915917],[8.369583,-8.035358,0.278374],[6.817912,4.044575,6.274881],[1.389585,-3.078022,-7.762346],[9.801080,-8.929293,-5.974888],[-9.252401,-8.881244,-2.493473],[8.696520,-0.876711,-4.669867],[-2.710813,2.305925,4.366265],[9.391203,-5.927380,-6.031547],[-8.712459,1.644217,-5.512381]],[[-8.809418,2.118508,-0.810780],[-5.781551,9.039740,1.386543],[-9.514386,-0.115914,5.819490],[4.681842,-6.809727,3.535476],[-0.541345,-2.505167,-9.894250],[9.877913,7.140176,-3.543588],[7.166732,-5.342411,1.046973],[-1.681725,8.151034,2.855747],[1.911787,-1.930572,-0.756013],[-0.480035,6.583087,-4.418703],[7.163483,-8.639622,-8.553108],[-9.430252,-4.006441,-3.854192]],[[-5.240196,3.066150,5.324969],[-0.707238,8.331490,7.293879],[-3.168859,0.207611,-3.347453],[-0.882685,1.373461,4.129897],[7.325071,2.684537,-4.322120],[6.117190,6.118733,-2.851104],[2.014569,0.562831,3.641858],[-7.660569,-6.604392,4.666889],[1.721159,-9.909983,4.447818],[-4.168191,1.840045,-7.293400],[2.230415,-8.603066,-9.816189],[-4.487793,6.839803,0.412257]],[[-4.438029,5.245489,3.848527],[7.304640,-1.406274,1.137634],[6.451070,-0.270604,-2.332676],[-5.420356,-5.606576,-5.706794],[-6.799042,-9.758733,-2.870077],[-1.160634,4.307324,4.307816],[9.819846,0.777580,-8.733544],[0.588347,-9.989372,-8.258469],[-7.333253,-5.408747,8.271479],[8.537713,5.375882,2.779278],[2.144429,-0.286294,6.462361],[2.380028,6.255772,-8.635959]],[[-6.515290,3.371548,5.445782],[9.580040,9.904153,-6.042558],[-0.987733,-9.197031,5.046476],[0.081637,9.437657,1.470435],[5.265932,0.549978,9.841799],[-4.252399,8.847843,-3.103779],[1.242096,-4.035116,-0.057309],[7.220520,9.317641,-1.245747],[0.365006,8.384826,-8.522726],[-9.988998,-7.455243,-3.972403],[7.976498,3.755063,-6.424979],[-2.071248,5.404572,-7.903597]],[[2.597757,-8.721825,9.156084],[-3.539939,-2.955526,-7.717876],[-6.190904,-2.248637,-7.973867],[1.672508,6.420980,0.270361],[-4.550099,8.719942,-3.580645],[2.947859,8.627033,-2.774939],[1.257863,8.827889,7.495188],[-6.118933,-8.667882,-8.590455],[9.984427,1.688707,-7.162973],[-8.763231,-1.138406,-6.605145],[-2.986385,-4.481686,6.334918],[-6.818617,3.623389,-2.117510]]], dtype = "float32")#candidate|14916|(13, 12, 3)|const|float32
uop_14917 = relay.acosh(const_14916.astype('float32')) # shape=(13, 12, 3)
output = uop_14917
output2 = uop_14917
func_14933 = relay.Function([], output)
mod['func_14933'] = func_14933
mod = relay.transform.InferType()(mod)
output = func_14933()
func_14934 = relay.Function([], output)
mutated_mod['func_14934'] = func_14934
mutated_mod = relay.transform.InferType()(mutated_mod)
func_14933_call = mod.get_global_var('func_14933')
func_14934_call = mutated_mod.get_global_var('func_14934')
call_14994 = func_14933_call()
call_14995 = func_14933_call()
output = relay.Tuple([call_14994,])
output2 = relay.Tuple([call_14995,])
func_15001 = relay.Function([], output)
mod['func_15001'] = func_15001
mod = relay.transform.InferType()(mod)
output = func_15001()
func_15002 = relay.Function([], output)
mutated_mod['func_15002'] = func_15002
mutated_mod = relay.transform.InferType()(mutated_mod)
func_14933_call = mod.get_global_var('func_14933')
func_14934_call = mutated_mod.get_global_var('func_14934')
call_15008 = func_14933_call()
call_15009 = func_14933_call()
uop_15013 = relay.asinh(call_15008.astype('float64')) # shape=(13, 12, 3)
uop_15015 = relay.asinh(call_15009.astype('float64')) # shape=(13, 12, 3)
func_2692_call = mod.get_global_var('func_2692')
func_2695_call = mutated_mod.get_global_var('func_2695')
var_15028 = relay.var("var_15028", dtype = "float32", shape = (539,))#candidate|15028|(539,)|var|float32
call_15027 = func_2692_call(relay.reshape(var_15028.astype('float32'), [11, 7, 7]))
call_15029 = func_2692_call(relay.reshape(var_15028.astype('float32'), [11, 7, 7]))
output = relay.Tuple([uop_15013,call_15027,var_15028,])
output2 = relay.Tuple([uop_15015,call_15029,var_15028,])
func_15052 = relay.Function([var_15028,], output)
mod['func_15052'] = func_15052
mod = relay.transform.InferType()(mod)
var_15053 = relay.var("var_15053", dtype = "float32", shape = (539,))#candidate|15053|(539,)|var|float32
output = func_15052(var_15053)
func_15054 = relay.Function([var_15053], output)
mutated_mod['func_15054'] = func_15054
mutated_mod = relay.transform.InferType()(mutated_mod)
func_14933_call = mod.get_global_var('func_14933')
func_14934_call = mutated_mod.get_global_var('func_14934')
call_15064 = func_14933_call()
call_15065 = func_14933_call()
func_5277_call = mod.get_global_var('func_5277')
func_5280_call = mutated_mod.get_global_var('func_5280')
var_15073 = relay.var("var_15073", dtype = "int8", shape = ())#candidate|15073|()|var|int8
call_15072 = func_5277_call(relay.reshape(var_15073.astype('int8'), []))
call_15074 = func_5277_call(relay.reshape(var_15073.astype('int8'), []))
output = relay.Tuple([call_15064,call_15072,var_15073,])
output2 = relay.Tuple([call_15065,call_15074,var_15073,])
func_15086 = relay.Function([var_15073,], output)
mod['func_15086'] = func_15086
mod = relay.transform.InferType()(mod)
mutated_mod['func_15086'] = func_15086
mutated_mod = relay.transform.InferType()(mutated_mod)
var_15087 = relay.var("var_15087", dtype = "int8", shape = ())#candidate|15087|()|var|int8
func_15086_call = mutated_mod.get_global_var('func_15086')
call_15088 = func_15086_call(var_15087)
output = call_15088
func_15089 = relay.Function([var_15087], output)
mutated_mod['func_15089'] = func_15089
mutated_mod = relay.transform.InferType()(mutated_mod)
func_14933_call = mod.get_global_var('func_14933')
func_14934_call = mutated_mod.get_global_var('func_14934')
call_15108 = func_14933_call()
call_15109 = func_14933_call()
output = relay.Tuple([call_15108,])
output2 = relay.Tuple([call_15109,])
func_15118 = relay.Function([], output)
mod['func_15118'] = func_15118
mod = relay.transform.InferType()(mod)
mutated_mod['func_15118'] = func_15118
mutated_mod = relay.transform.InferType()(mutated_mod)
func_15118_call = mutated_mod.get_global_var('func_15118')
call_15119 = func_15118_call()
output = call_15119
func_15120 = relay.Function([], output)
mutated_mod['func_15120'] = func_15120
mutated_mod = relay.transform.InferType()(mutated_mod)
func_15001_call = mod.get_global_var('func_15001')
func_15002_call = mutated_mod.get_global_var('func_15002')
call_15142 = relay.TupleGetItem(func_15001_call(), 0)
call_15143 = relay.TupleGetItem(func_15002_call(), 0)
output = call_15142
output2 = call_15143
func_15144 = relay.Function([], output)
mod['func_15144'] = func_15144
mod = relay.transform.InferType()(mod)
output = func_15144()
func_15145 = relay.Function([], output)
mutated_mod['func_15145'] = func_15145
mutated_mod = relay.transform.InferType()(mutated_mod)
func_15144_call = mod.get_global_var('func_15144')
func_15145_call = mutated_mod.get_global_var('func_15145')
call_15180 = func_15144_call()
call_15181 = func_15144_call()
output = relay.Tuple([call_15180,])
output2 = relay.Tuple([call_15181,])
func_15182 = relay.Function([], output)
mod['func_15182'] = func_15182
mod = relay.transform.InferType()(mod)
output = func_15182()
func_15183 = relay.Function([], output)
mutated_mod['func_15183'] = func_15183
mutated_mod = relay.transform.InferType()(mutated_mod)
var_15189 = relay.var("var_15189", dtype = "int32", shape = (13, 4, 13))#candidate|15189|(13, 4, 13)|var|int32
var_15190 = relay.var("var_15190", dtype = "int32", shape = (13, 4, 13))#candidate|15190|(13, 4, 13)|var|int32
bop_15191 = relay.subtract(var_15189.astype('int32'), relay.reshape(var_15190.astype('int32'), relay.shape_of(var_15189))) # shape=(13, 4, 13)
output = bop_15191
output2 = bop_15191
func_15198 = relay.Function([var_15189,var_15190,], output)
mod['func_15198'] = func_15198
mod = relay.transform.InferType()(mod)
mutated_mod['func_15198'] = func_15198
mutated_mod = relay.transform.InferType()(mutated_mod)
func_15198_call = mutated_mod.get_global_var('func_15198')
var_15200 = relay.var("var_15200", dtype = "int32", shape = (13, 4, 13))#candidate|15200|(13, 4, 13)|var|int32
var_15201 = relay.var("var_15201", dtype = "int32", shape = (13, 4, 13))#candidate|15201|(13, 4, 13)|var|int32
call_15199 = func_15198_call(var_15200,var_15201,)
output = call_15199
func_15202 = relay.Function([var_15200,var_15201,], output)
mutated_mod['func_15202'] = func_15202
mutated_mod = relay.transform.InferType()(mutated_mod)
func_15182_call = mod.get_global_var('func_15182')
func_15183_call = mutated_mod.get_global_var('func_15183')
call_15230 = relay.TupleGetItem(func_15182_call(), 0)
call_15231 = relay.TupleGetItem(func_15183_call(), 0)
func_3899_call = mod.get_global_var('func_3899')
func_3901_call = mutated_mod.get_global_var('func_3901')
var_15233 = relay.var("var_15233", dtype = "uint32", shape = (105,))#candidate|15233|(105,)|var|uint32
call_15232 = func_3899_call(relay.reshape(var_15233.astype('uint32'), [3, 7, 5]))
call_15234 = func_3899_call(relay.reshape(var_15233.astype('uint32'), [3, 7, 5]))
output = relay.Tuple([call_15230,call_15232,var_15233,])
output2 = relay.Tuple([call_15231,call_15234,var_15233,])
func_15237 = relay.Function([var_15233,], output)
mod['func_15237'] = func_15237
mod = relay.transform.InferType()(mod)
mutated_mod['func_15237'] = func_15237
mutated_mod = relay.transform.InferType()(mutated_mod)
var_15238 = relay.var("var_15238", dtype = "uint32", shape = (105,))#candidate|15238|(105,)|var|uint32
func_15237_call = mutated_mod.get_global_var('func_15237')
call_15239 = func_15237_call(var_15238)
output = call_15239
func_15240 = relay.Function([var_15238], output)
mutated_mod['func_15240'] = func_15240
mutated_mod = relay.transform.InferType()(mutated_mod)
func_14933_call = mod.get_global_var('func_14933')
func_14934_call = mutated_mod.get_global_var('func_14934')
call_15259 = func_14933_call()
call_15260 = func_14933_call()
output = relay.Tuple([call_15259,])
output2 = relay.Tuple([call_15260,])
func_15261 = relay.Function([], output)
mod['func_15261'] = func_15261
mod = relay.transform.InferType()(mod)
mutated_mod['func_15261'] = func_15261
mutated_mod = relay.transform.InferType()(mutated_mod)
func_15261_call = mutated_mod.get_global_var('func_15261')
call_15262 = func_15261_call()
output = call_15262
func_15263 = relay.Function([], output)
mutated_mod['func_15263'] = func_15263
mutated_mod = relay.transform.InferType()(mutated_mod)
const_15270 = relay.const([[[-2.261715,-5.357376,7.257067,-1.032538,-0.321958,8.579455,-5.469099,1.030677,3.725709,-4.236978,1.748749],[5.321444,-0.137952,9.299646,9.986540,8.508907,-2.177654,-4.350842,9.728062,-0.289866,-1.677959,-5.793213],[3.832322,5.920720,-4.933391,1.253538,-8.961713,0.785967,-1.890508,-9.669831,9.793262,4.971642,5.334799],[5.756761,-8.070597,-9.465517,8.415678,4.482353,-1.049116,4.887729,9.356268,-3.141714,4.165854,-8.532262],[5.463145,5.381697,2.017933,-2.943656,6.363067,2.834962,3.393130,-1.938074,-9.476980,-8.652004,-2.586526],[-2.032984,-6.656928,5.910952,-9.213509,8.064595,8.114807,8.999683,8.951086,6.122484,5.722115,-9.566158]],[[4.078584,-1.482779,-1.606864,-8.730278,-4.231779,-2.171627,-8.912397,0.592083,-4.802869,-3.076307,2.108210],[-0.286847,2.914882,5.226999,-9.142952,-3.724103,-2.876883,6.090319,5.997170,4.371489,-1.942610,-1.824651],[-6.199207,-1.405548,-3.126888,-6.866077,-6.002629,-7.410754,-6.403994,-5.073589,3.396320,-7.243898,8.485078],[-7.298082,-7.446952,0.952789,-2.173572,1.033867,8.459895,5.758032,-1.575770,8.399049,-9.172222,-2.892794],[-8.621743,2.277343,5.785633,5.334117,3.331937,3.679353,-0.595514,3.741076,-3.880240,8.337331,-5.716210],[4.231655,-6.692908,9.997762,-5.599314,5.124677,-0.372521,-4.246647,1.218722,1.169616,-8.027233,-8.038605]],[[6.456997,1.817527,-5.871753,3.348473,4.079623,5.565507,1.737656,-8.912383,-0.106759,-6.473757,-6.971960],[6.273393,6.908433,-8.804722,1.242704,-0.691949,-1.169113,4.139620,-8.262854,7.725664,1.220674,1.288656],[0.716008,8.520454,5.880041,9.135798,-0.675470,3.938635,0.165442,6.442886,-7.468694,3.533635,1.550985],[8.206779,3.966533,2.134782,8.734263,6.864818,-4.185523,3.144978,0.808272,8.785356,5.879223,8.176797],[3.095617,2.713563,-7.243858,-6.267550,3.172144,6.994262,2.492337,-9.873598,7.032525,3.846744,-1.421278],[0.974367,4.607415,0.921734,-7.870949,3.423757,-6.478032,6.837600,7.886607,-8.806021,-9.129308,4.137434]],[[5.311787,-6.973425,-3.118222,-6.593768,-4.968325,-5.881420,4.590937,-7.060985,-5.147701,5.098439,6.149368],[9.294355,-4.963500,6.917002,4.235769,-5.144531,-5.513778,0.267125,7.816910,3.715092,8.666793,5.314176],[-2.899419,-9.010118,-5.539646,5.498093,2.611611,-9.096826,-4.862418,-1.039698,8.009296,-1.784165,3.046336],[-7.312239,-9.219169,6.246115,3.645044,-0.360660,-4.501266,-7.758965,-4.309034,-4.096208,-0.555144,9.913032],[7.068170,-2.708180,4.747315,-7.974509,-4.705871,6.922991,8.680347,-2.808276,0.035885,-0.688081,-8.636411],[-0.982176,-1.825293,-7.222393,-9.928502,0.890319,9.978498,-0.909501,6.398082,0.303852,2.603667,-7.879486]],[[7.814394,1.408878,5.075780,1.052178,-2.470653,-0.801701,-6.747395,6.402588,-5.186590,-3.675241,-9.263815],[-6.420703,-7.322842,6.427169,-6.294642,-9.544889,-9.728882,4.167585,5.460153,5.403756,-7.268487,-3.838120],[-0.061506,7.560862,-7.070501,-7.920512,-5.821719,-4.543021,8.925116,-3.420844,7.417647,4.951512,-2.048460],[0.015012,6.231191,2.437153,-6.586987,0.900355,2.711213,-0.356161,-2.405143,-9.258521,4.924775,2.085680],[-9.684048,7.435159,-8.136339,-9.542805,4.967571,-5.856439,-1.964801,-5.934492,7.975733,-6.181219,5.508855],[5.600601,6.149743,-7.097980,-3.213141,1.607846,-2.539988,1.098523,-0.746243,5.388912,0.446690,-2.759582]],[[-7.690606,5.269166,-9.531503,-7.437751,-5.433649,-8.981351,-6.241409,-6.267742,-7.053791,5.059456,-5.623444],[-4.997042,-4.246195,-5.486222,7.086658,-8.584741,-1.620141,-0.592324,3.359242,-3.202715,-5.891652,6.103173],[8.794009,2.935186,-2.427378,-2.670569,8.090773,4.181764,4.894857,-3.070112,-2.891789,-1.871659,-2.738564],[-5.251444,5.481517,1.739111,5.089336,-8.468169,-3.293609,-9.232826,0.027133,-0.387188,4.000430,-5.032210],[2.576241,-0.392499,5.795104,-4.258880,2.842554,2.806594,5.783601,-5.946390,-9.755257,-2.054250,-7.590811],[8.963765,7.642375,4.729371,3.144986,5.841073,-9.297180,-7.626803,-4.425766,1.711248,8.137803,0.338020]]], dtype = "float32")#candidate|15270|(6, 6, 11)|const|float32
uop_15271 = relay.cosh(const_15270.astype('float32')) # shape=(6, 6, 11)
output = uop_15271
output2 = uop_15271
func_15274 = relay.Function([], output)
mod['func_15274'] = func_15274
mod = relay.transform.InferType()(mod)
output = func_15274()
func_15275 = relay.Function([], output)
mutated_mod['func_15275'] = func_15275
mutated_mod = relay.transform.InferType()(mutated_mod)
func_15118_call = mod.get_global_var('func_15118')
func_15120_call = mutated_mod.get_global_var('func_15120')
call_15307 = relay.TupleGetItem(func_15118_call(), 0)
call_15308 = relay.TupleGetItem(func_15120_call(), 0)
output = relay.Tuple([call_15307,])
output2 = relay.Tuple([call_15308,])
func_15309 = relay.Function([], output)
mod['func_15309'] = func_15309
mod = relay.transform.InferType()(mod)
mutated_mod['func_15309'] = func_15309
mutated_mod = relay.transform.InferType()(mutated_mod)
func_15309_call = mutated_mod.get_global_var('func_15309')
call_15310 = func_15309_call()
output = call_15310
func_15311 = relay.Function([], output)
mutated_mod['func_15311'] = func_15311
mutated_mod = relay.transform.InferType()(mutated_mod)
func_15274_call = mod.get_global_var('func_15274')
func_15275_call = mutated_mod.get_global_var('func_15275')
call_15341 = func_15274_call()
call_15342 = func_15274_call()
func_13700_call = mod.get_global_var('func_13700')
func_13703_call = mutated_mod.get_global_var('func_13703')
var_15350 = relay.var("var_15350", dtype = "float64", shape = (1, 16))#candidate|15350|(1, 16)|var|float64
call_15349 = relay.TupleGetItem(func_13700_call(relay.reshape(var_15350.astype('float64'), [1, 8, 2])), 0)
call_15351 = relay.TupleGetItem(func_13703_call(relay.reshape(var_15350.astype('float64'), [1, 8, 2])), 0)
output = relay.Tuple([call_15341,call_15349,var_15350,])
output2 = relay.Tuple([call_15342,call_15351,var_15350,])
func_15359 = relay.Function([var_15350,], output)
mod['func_15359'] = func_15359
mod = relay.transform.InferType()(mod)
mutated_mod['func_15359'] = func_15359
mutated_mod = relay.transform.InferType()(mutated_mod)
var_15360 = relay.var("var_15360", dtype = "float64", shape = (1, 16))#candidate|15360|(1, 16)|var|float64
func_15359_call = mutated_mod.get_global_var('func_15359')
call_15361 = func_15359_call(var_15360)
output = call_15361
func_15362 = relay.Function([var_15360], output)
mutated_mod['func_15362'] = func_15362
mutated_mod = relay.transform.InferType()(mutated_mod)
func_15001_call = mod.get_global_var('func_15001')
func_15002_call = mutated_mod.get_global_var('func_15002')
call_15386 = relay.TupleGetItem(func_15001_call(), 0)
call_15387 = relay.TupleGetItem(func_15002_call(), 0)
func_8287_call = mod.get_global_var('func_8287')
func_8289_call = mutated_mod.get_global_var('func_8289')
const_15402 = relay.const([-3.895533,5.964582,3.937582,-7.421579,-0.054396,0.437095,-9.914455,9.868709,5.419592,4.721228,-0.323824,-5.242350,-1.427121,9.405216,2.548396,5.282851,5.113972,4.244408,-3.842271,7.589944,7.373893,4.053954,3.769241,-6.344546,-5.683958,-0.841657,-6.239676,3.915254,-4.085961,-5.265576,-7.105431,5.555892,4.350080,-8.760183,-2.230922,-6.859247,1.764019,8.932064,-3.979525,5.041714,2.088455,-8.069226,1.903297,-4.456189,-6.982065,5.493646,4.753040,-8.702183,4.554363,-7.856557,-3.822943,-6.479492,8.561141,-6.726327,0.792685,-9.989104,-5.314122,5.337591,7.758564,9.831464,-2.815766,-5.701082,9.030869,-8.493419,1.952346,-3.600295,4.459997,1.221644,-9.950556,3.678073,-2.515145,-6.474674,-9.764267,-6.868593,3.613414,7.281527,-7.877868,9.982868,-9.757335,-0.639126,2.667619,8.359924,2.243249,0.032889,2.591456,-9.506503,-9.943924,-1.709361,-5.615757,-9.480587,-8.901691,1.575417,6.231029,-1.728865,9.631301,-3.685961,3.751207,9.844310,-7.516612,-2.996316,8.265044,8.787488,6.571870,-3.992164,-4.042408,1.925556,-1.821808,4.859501,-4.312780,0.994963,8.450843,-4.323507,-4.843659,1.830190,-6.462664,-3.109507,-4.593745,5.514706,8.289790,4.076263,7.001938,-0.680594,-0.086421,3.613494,8.317756,-7.781574,-2.116784,7.386343,-2.913177,-6.247844,-3.142822,1.125123,-3.091847,-0.882518,-3.681884,-6.269078,-6.615927,-0.063723,-2.199632,2.780826,-0.914321,-9.199242,-5.668155,5.865000,5.046299,0.882771,-5.265504,-2.977975,-5.010274,-6.188250,3.980035,-9.542983,4.970879,-1.211495,-3.012749,7.368710,2.531600,-2.376931,5.330915,-9.582741,9.184245,-6.208157,-6.867682,-7.459770,5.383786,-7.224566,8.705997,5.457399,7.336391,4.641933,1.664738,-4.351573,-8.637009,3.142323,8.937522,-5.364554,3.417819,-7.693061,-5.864008,-1.115781,-4.436045,-7.389185,6.440233,-9.098315,1.536537,7.258723,1.399349,6.832999,-5.695728,9.475076,-8.616466,-5.379280,2.282328,-8.989708,1.514640,7.815647,5.367812,-3.648403,6.718072,4.916313,-8.595208,-3.050312,-4.200167,2.104804,-0.185043,-4.849655,4.088732,-3.250744,-2.604695,-2.523069,-8.927679,0.870279,9.522354,-6.448638,-8.410416,8.858893,-4.482262,-4.795049,2.552643,1.400216,3.844283,-5.946436,-3.962839,4.242082,1.900038,3.444983,3.233826,2.385365,-3.211899,-7.472558,0.269974,6.639047,5.647630,8.987521,5.120617,-7.801609,-1.200820,5.907226,8.704803,4.612757,-4.066549,-0.819945,7.405172,-9.641768,-4.211854,3.670343,-7.205733,5.645553,-7.277432,-2.781997,-1.655797,-3.864410,-1.256271,3.037252,-2.304428,-1.272076,5.758721,8.456168,9.324808,-9.676957,-6.616544,6.423807,-1.710182,-5.754402,9.227447,5.731871,5.474301,6.936493,1.730922,2.588787,6.818674,1.335049,8.018071,-9.975927,-7.139112,-6.317174,-0.961774,-0.074411,-3.945924,2.196224,7.793460,2.642455,2.872827,-9.360692,-9.904584,-0.309876,-9.198239,-9.889513,-1.705590,-9.199026,-4.430598,9.509350,-7.864303,4.473482,-7.811757,2.389076,5.151913,-1.616817,0.627575,-8.667863,2.229238,6.398420,-8.401903,7.248566,-0.219961,4.191480,-2.374325,0.651992,-3.204717,9.846518,-2.354259,7.966815,-0.203627,-7.297383,-7.828859,3.276196,2.110647,9.219215,-6.564473,9.407189,-2.457690,8.981076,0.715652,-5.566391,-4.891309,9.955394,-8.110283,-8.055620,-6.347463,-6.569325,9.357638,-7.442392,-3.754894,-7.329869,-3.353725,-9.038194,3.086720,1.297628,-6.330704,-0.948306,-9.558810,7.647183,-8.617129,9.203976,-3.309760,-2.139574,9.255545,3.396528,-4.797752,-8.609793,2.341177,-5.140983,8.725566,3.219039,0.859082,-7.495132,3.134528,-6.227911,3.641432,9.311102,5.521755,-9.497046,-3.449641,-2.540774,5.737052,-0.610443,3.613927,9.319070,-4.913403,6.235058,9.974302,5.028798,9.587115,-6.810880,5.959321,9.511498,4.826488,4.579461,2.935928,4.948058,5.639438,9.023343,-7.399528,8.050171,7.663170,-4.087787,-8.442808,-5.974524,8.053587,-3.734991,-0.259603,4.116333,4.835251,5.567228,-9.215415,-8.481275,-8.543244,0.109527,-4.828223,-2.338377,9.975850,-0.770048,-9.650544,1.478966,-4.480489,6.634194,8.675709,-8.488635,3.766690,9.824546,-3.989354,8.506774,7.309318,8.418580,3.845620,-7.351253,-2.610545,-5.368793,8.789951,-1.054003,-2.929917,-2.952245,-5.792769,-4.799696,-7.856440,-1.431221,2.051396,-0.177277,-9.011894,2.747654,2.704217,-0.390112,-2.517273,-0.768011,-8.996899,7.991975,-2.117357,7.352856,2.332995,4.122176,5.943118,-7.655044,7.023992,-5.497051,3.604577,-6.268730,8.113159,-6.777762,0.724077,9.617365,-2.439704,-3.883079,-7.159995,5.797382,-1.014817,7.867078,-9.842872,-4.414982,-6.635758,7.899600,-9.297824,-7.964615,-0.305696,-4.871308,-4.411191,-0.564194,-5.930183,7.318331,-2.383732,-5.756237,5.358141,-8.724103,-6.188684,-5.424771,7.736189,-7.176992,3.844619,6.549213,7.211703,2.362017,5.297916,-6.032964,2.495312,-6.547184,1.761292,-8.898158,7.702501,-0.155741,1.682855,-2.286436,0.199970,8.773550,-8.314462,-9.206954,-4.061343,6.392505,2.368953,3.005042,2.527098,-8.600458,3.351823,-7.425791,-5.605304,-6.571264,3.790860,-1.101877,6.340032,7.672445,0.796824,1.315346,5.564779,8.753599,8.979336,5.725922,0.168002,8.005024,-3.832354,2.412304,-7.178591,6.366320,-8.589277,-2.599082,8.566632,8.741437,-3.617856,-6.600404,4.307056,-3.710630,-5.847189,-7.933861,-4.177398,-2.431089,1.687973,4.039969,2.328981,0.910821,-3.862689,0.653588,5.698583,-3.350877,-2.563848,9.054762,2.192093,-0.994481,-3.670924,4.147113,-2.038406,6.067528,2.178467,2.246027,1.008699,-6.109062,3.467932,1.647227,7.483159,-3.730552,-1.986746,0.895679,1.310746,-7.918662,-1.157916,-1.194369,9.533915,-7.220285,-2.611754,-8.761196,-0.538589,-5.338790,-9.251276,-9.761904,7.504817,8.819029,3.685002,5.352349,-5.352926,-7.813055,4.135827,7.136761,-7.277376,2.517026,-7.546005,0.036625,2.810084,-6.842414,5.097733,9.140577,2.299362,6.231109,7.195438,7.726244,-9.297676,5.443990,0.116511,-9.927048,-4.646153,-6.104291,0.627585,-9.456763,7.390208,0.119841,7.725076,-6.393595,1.211711,8.599543,-3.003882,0.613627,-7.925479,0.757657,9.620909,-6.922677,3.042579,-5.237073,-4.081614,6.645317,8.468118,-3.990945,0.741269,7.914876,-4.723173,-3.899507,-7.687999,3.585528,-6.257032,-1.845402,5.007513,3.272670,6.683722,8.947419,-5.822699,-3.971734,8.904652,6.674556,9.790058,-2.304926,9.313592,-7.414322,-1.254613,0.106265,-1.029153,-9.950890,-0.423697,9.689757,-6.951588,2.552509,0.281975,-5.913212,-6.878917,-9.817644,8.842954,-2.235107,5.589192,-1.794421,-8.923855,-5.361859,4.250139,-7.465878,-3.896499,8.102266,3.945123,-8.812076,-9.907677,7.264578,-1.231990,-7.596574,-8.904422,-8.502721,-1.594331,3.162877,-3.652725,9.134413,7.678434,7.591896,4.611385,-7.191843,0.221970,-0.665064,4.405305,7.235856,6.487408,8.415390,-3.117300,3.090390,-9.740107,7.947775,-7.855895,-6.986673,8.831938,6.094181,8.356120,0.466262,-8.219267,-5.802541,7.417695,1.451170,-1.833031,1.146835,9.105440,4.048411,3.835653,-4.039366,4.336976,5.731722,4.235174,-2.196132,-7.172143,2.734724,9.292855,8.728612,1.959400,9.703920,9.538750,-8.216077,3.549108,6.950114,5.149362,-8.078812,-6.632469,4.998509,-1.392817,-4.646872,8.668239,-1.646617,-0.758192,0.742168,-7.629458,5.547594,3.344211,-4.529410,4.696073,-2.382594,-1.850104,0.473961,-7.304366,-0.343776,-0.731352,-9.895549,-3.561616,-2.527887,-4.890604,9.056228,-4.594983,-3.908950,-1.060131,-2.050786,-4.093686,-0.666546,3.782925,-1.959106,-9.775346,2.966860,6.613770,-0.697435,-3.315007,-3.511335,7.392888,1.200157,-5.255024,5.275953,1.740982,-1.311504,-6.273449,-5.038699,9.820611,-3.824713,8.404200,-9.639311,0.366828,-5.022254,-5.617824,-7.049165,-1.354938,7.581050,3.760506,-6.834829,9.513646,7.648360,6.500318,8.174594,-6.907268,0.451224,4.063057,-4.963188,-5.837322,-1.498303,-2.843199,-8.458728,6.799702,6.577057,5.613848,5.524495,5.324663,-4.833059,-8.401711,8.986464,6.404352,-0.642324,-1.422947,8.340168,9.805275,4.680745,-3.263482,6.734894,-0.643818,5.174611,-1.844639,-3.031325,8.809714,-7.257416,-3.130951,-4.623553,-7.292991,6.430556,1.026560,-1.640790,-3.093594,-7.783491,0.539979,-7.045256,4.474451,6.976762,-4.534386,6.660878,4.989435,8.539556,2.223598,2.190394,-6.436861,-4.404683,-0.561897,9.395521,4.309570,5.026614,4.279118,-3.202390,4.449184,-4.679705,3.936778,5.497754,3.543751,-5.501122,-6.365178,7.909048,-9.645314,1.846666,-6.428133,-9.369343,-0.254393,-6.784935,8.043442,-9.862001,7.875371,1.846242,-3.656229,4.285459,9.114311,-0.624497,3.936389,9.546773,-1.344639,-1.422540,5.384238,-2.930026,0.366718,3.364782,7.794483,5.034454,-8.235861,7.266950,-2.940560,-8.467177,-0.552830,7.999616,-1.676734,-4.810252,5.032200,0.631917,3.009715,7.965273,3.184381,2.323944,-4.663815,5.475974,4.129512,-3.414239,8.669556,-5.151537,2.710743,1.053214,-5.979506,-1.376370,5.055993,-7.108873,4.193438,9.420370,-1.820357,2.889964,2.192193,6.520953,2.658737,-5.537274,-1.157497,8.487101,8.640612,-1.964165,-6.322066,8.918951,-3.326114,-2.840188,3.954508,-3.149659,-1.269954,6.677501,-2.604329,6.866592,-2.424138,-1.275255,-0.421779,-3.984626,7.200953,6.844852,-0.393371,0.031560,-3.341321,-9.526061,3.842609,7.775689,0.654546,5.061029,8.950415,6.556309,7.974661,-3.813006,3.896776,0.518242,6.604121,-6.621611,5.394150,5.926843,0.378117,-8.810963,-1.003013,9.526293,-2.637416,-3.732173,9.486446,0.481394,9.636451,-5.430623,-3.325267,9.871734,-5.242943,8.948412,9.998523,0.875803,7.418036,5.318428,3.225789,3.689383,-6.368398,0.066614,0.151858,-4.271978,-9.804914,-9.232107,-6.351328,9.821252,7.692370,-5.044988,5.302269,-9.443180,8.412156,-2.622362,-1.901226,-3.270525,8.440559,-0.887811,-1.772283,-2.996117,7.976209,-5.221652,-5.862304,-5.666332,-9.682221,2.820408,-7.868388,-6.495231,3.018102,-0.149998,-2.036631,-7.972741,-8.828644,7.879375,4.845378,2.875099,-4.535608,-3.655806,7.208397,-6.024072,-1.743894,5.362199,1.648079,-2.458296,3.017104,-4.619024,-7.871352,6.399568,8.090370,1.382694,-5.352420,4.313042,-8.964266,-7.700107,-7.720385,-0.629647,-8.800756,9.826091,4.813972,-6.224245,-8.720015,3.336197,-3.102769,3.200375,9.917438,-2.772012,-7.715118,-4.556533,-9.003868,-1.229768,6.484936,7.021079,4.421913,-3.805400,-1.599835,9.748066,9.442350,6.152492,3.596738,-6.569419,-0.807835,0.453728,-0.913631,1.688600,-0.411182,-3.277750,-8.742067,8.850667,-1.218940,3.551757,-6.108760,-2.284981,8.527446,4.990669,-6.858915,1.230477,9.869401,2.975668,-8.708579,-9.797616,9.846342,-2.165755,-7.087521,9.414074,6.095549,8.471779,1.969308,-4.592964,-1.634906,0.541216,3.907447,3.587850,3.137714,-8.356985,9.651204,-1.316998,5.220533,1.596479,-2.858828,4.544360,1.486879,-5.427595,-3.743282,8.635751,-2.626945,1.279678,7.473164,-3.729602,-9.007634,-0.653553,6.618640,-8.417378,7.330179,-7.662790,-4.478070,-6.489561,6.282919,-4.904008,3.081950,-0.869264,-8.437336,2.638424,-8.610448,1.711862,-1.213200,-0.696516,-6.306151,0.164775,-1.375403,-0.218937,4.972655,-5.093458,4.911567,-3.194535,-0.928460,-9.543689,-7.053931,-2.788922,-7.802875,5.396403,8.150593,-5.012230,-0.636477,-8.524233,-5.914064,5.449226,9.658659,-2.770403,-4.628751,7.002952,3.924149,-9.208060,9.386878,-1.861957,-8.623554,-4.937879,9.766829,4.429806,-5.184801,8.743414,-7.736972,-9.627533,-4.201121,-4.163596,9.681407,-2.835263,-8.077497,0.806181,4.772917,6.166331,9.377857,-5.884884,-3.942560,1.766025,9.528983,0.383676,9.704763,0.700041,-4.725812,8.554856,4.752027,-2.415213,-7.001014,9.565264,9.733168,5.033489,-5.253220,-8.608034,1.064269,-9.700525,-2.638613,7.157535,6.525004,5.327103,-8.337903,-0.043852,-5.049283,5.589599,-7.861068,7.402903,1.821418,-9.388485,-0.420542,1.181825,-2.006796,-9.757257,8.634466,8.009226,-8.008268,5.156623,9.956046,-3.483739,-1.453669,-5.025150,-4.750147,4.053446,-0.129315,2.967055,-1.609447,-6.142317,-2.661936,5.992256,-5.830544,5.593966,4.404728,-8.359700,-1.552710,7.854929,-3.951832,2.500261,0.551467,4.729622,-4.881978,-8.720571,1.972704,-6.214608,9.464991,8.385382,-4.895543,-8.356493,0.566152,-1.116803,4.162572,2.057947,0.463124,-6.122447,9.556560,-9.361007,-8.603999,-4.013050,0.475136,-8.622104,-6.703416,4.956472,-8.537386,-4.687264,-6.323150,7.908262,-0.113045,5.805714,6.412149,-8.218669,0.374272,-8.369091,8.005599,7.702368,3.421762,5.777299,-0.397231,-2.918823,-7.762015,-0.309726,8.173706,-9.924650,-9.878147,5.432366,6.271494,-8.773190,-8.417846,4.883256,4.946052,8.902736,-6.871387,-7.024117,6.981240,1.807068,-7.331424,-1.133777,4.003434,1.047630,-2.359438,9.685264,7.295624,7.961739,-6.283715,5.891891,7.042815,2.426828,-9.658495,-7.123333,-9.571473,8.034953,-4.152826,3.972262,6.578866,8.641121,5.458230,3.283865,0.751132,2.874229,8.171615,8.602191,0.038511,-6.275630,3.763813,7.752895,-6.671383,-2.585635,-5.064888,-6.813714,-3.674623,3.778561,-7.438888,-2.654091,5.214711,-0.879122,6.027089,-6.838568,-5.754932,-3.730576,0.668828,2.929043,-9.369318,-5.798626,0.166582,-1.191726,2.223185,-8.089666,7.990103,2.343073,-3.370809,1.394092,7.691680,-5.943963,7.061267,6.879437,-8.098340,-0.783644,-3.370983,9.598828,-0.136736,-1.920457,4.608602,9.952964,1.132858,-8.549260,-4.045317,1.539984,3.257106,3.016188,-6.805810,4.134458,-8.083885,-2.616028,6.833062,-8.007482,8.480374,3.563260,8.079502,1.607046,0.053535,-7.545731,-5.460290,3.488292,2.821095,-9.260341,-9.299972,-8.634186,0.648295,5.691043,-2.192385,-0.793662,-1.073365,7.620601,7.411323,5.545296,-1.034994,-4.301940,1.316098,-0.144941,9.177509,9.754174,-9.382436,-3.330950,-1.769289,-3.347090,6.552565,-3.214598,-2.475783,-1.900295,5.109224,-9.155070,2.174388,-9.917868,4.391777,-9.883999,4.741659,-6.755250,9.069244,6.109590,-4.456313,4.926097,5.153717,-0.216036,4.663887,5.981526,-5.414716,-9.763955,-4.648605,-0.077104,4.768981,-6.085365,-7.669017,-5.673715,1.990290,7.380913,-2.497996,-5.388495,1.731299,7.400738,2.685156,5.417517,4.684529,0.190560,-5.396651,9.575480,-9.348683,-5.848885,-6.347285,8.812016,-4.764571,1.536674,7.149363,-9.042932,-2.228982,8.419918,-4.017656,7.000781,-9.809725,-2.031411,5.019999,-5.416660,2.349521,-7.878978,1.997340,-4.206671,5.018013,-7.782737,3.514921,5.938327,4.173779,2.415561,3.360090,4.093314,3.046986,-3.801667,9.320774,2.765841,9.929664,-0.055946,3.675256,-0.537949,-5.178962,8.622950,-8.286296,-1.954078,1.871175,8.734474,-1.054073,-0.171575,-1.085907,-4.038761,5.965307,7.543455,-0.717152,5.536378,-5.464178,-2.521667,5.020680,-2.409919,-4.535832,3.943168,-7.834601,-1.001174,6.689039,-9.767390,9.182311,3.279576,-1.767390,9.614342,-4.744964,-2.558409,-2.291511,8.690024,-1.757372,9.566598,-2.704863,-5.944168,-4.724888,-7.506138,9.836633,3.053269,1.030267,0.321482,3.633262,-1.818662,-0.114064,-7.952739,2.523700,-6.969286,2.821998,-3.577808,-7.737454,-3.675137,6.027819,-7.706413,-0.857742,9.426862,-7.739996,6.873628,7.044291,4.747451,7.637241,1.007588,5.009320,-1.865548,0.349916,1.787643,-8.531997,-5.021964,-3.993686,-4.477337,8.829221,-9.057850,7.684770,6.213004,-5.510879,-2.641859,0.887942,-1.719221,3.499503,7.611095,-7.200722,-9.574819,2.858042,-4.673102,5.170457,-0.980100,6.253938,-8.955435,-2.599062,2.776382,-8.263345,-9.575662,6.344019,-8.375975,-5.146492,-0.887726,-6.382932,6.967945,1.771443,6.985723,-0.467091,4.747209,9.746128,-4.803062,-6.185978,-3.357867,7.415209,-7.744679,0.492162,7.953014,-7.885280,-6.507920,-8.961511,-1.743668,-6.265654,-8.358444,0.864468,-4.415851,1.253867,6.669061,-8.703747,-7.037004,-8.360023,3.233303,-5.638079,8.804088,-9.779065,4.576710,3.363183,-2.218552,-2.102883,4.834120,6.724052,-4.791751,-5.481246,-9.936302,7.528712,9.081548,9.289916,1.715575,7.757663,-5.329428,2.038969,6.633633,-2.224740,-3.527653,-0.295629,-7.021894,5.777378,1.131620,-5.751942,-4.743640,-2.614520,-2.612289,-8.547752,6.942050,-9.322139,0.419948,-1.491430,2.001933,0.199020,4.730523,2.220027,7.505677,-1.666878,-1.441438,-9.231810,-8.282986,-4.117313,-1.974778,-0.018281,1.801152,2.121685,-2.453023,2.615661,-1.529537,1.988547,-5.381871,-1.839079,8.518978,-3.587542,5.759206,1.418962,-2.695349,-1.413941,-7.507609,-9.843689,-8.424330,7.876282,9.388100,-8.200430,7.819232,0.133346,-8.406462,4.175081,-4.659452,5.182313,-3.283520,3.453916,7.498730,7.604757,6.569248,1.596939,3.605602,-6.576756,3.428392,8.670553,9.671146,-7.660577,-9.746619,2.069615,-1.679977,-6.035905,8.632204,3.850037,-4.668593,7.451704,-3.096868,3.711438,0.830017,4.923710,-2.649176,6.259412,8.958488,8.009808,2.939981,2.901692,6.006700,-3.651076,9.750378,8.940193,-7.151346,3.131901,9.637127,-4.160506,3.307551,0.786413,-8.610057,7.834488,8.293163,4.606481,4.213266,-3.457924,9.539799,-7.267943,-3.514018,-5.999806,-7.153774,7.047407,-2.571215,-8.328001,5.423320,7.540528,-2.592159,-9.463414,5.402026,-3.407050,-1.634979,5.726149,9.179845,-5.734338,-9.518096,-3.970424,8.837986,-6.509421,4.106095,2.048318,0.681379,1.325091,5.631763,0.229888,8.265686,4.698995,-4.905496,5.027994,-8.790172,9.365857,-4.034557,6.453026,7.051612,0.855710,-0.658737,-4.001149,3.054386,4.864395,0.427484,6.309314,-3.953456,-3.979901,-0.483144,-1.909950,7.645316,0.153218,8.334327,2.533359,-2.195685,-7.788835,0.852672,-6.777650,-0.898022,7.685505,-8.253016,-0.232379,-2.242307,7.271283,3.097009,2.257145,5.520481,-2.791833,-5.226721,-2.322477,5.072616,2.788149,0.958825,1.865508,-4.057874,8.876682,-6.070111,9.464455,-5.239260,0.114910,7.494923,-1.001477,8.982422,1.423326,0.650009,-6.366083,-1.410065,9.459796,-8.078607,7.999505,-3.390357,5.471450,8.838776,3.203064,-2.164402,5.491502,0.876215,-9.167307,-5.887732,-5.476996,2.234576,-8.481862,3.061760,6.045993,1.225606,-9.575234,3.062204,-5.342478,-2.745677,-5.326328,-1.098753,-1.837252,-2.455295,-0.809604,7.448471,-2.569462,4.053438,-3.228329,-9.588223,-6.908269,0.324395,2.368594,1.111896,4.115969,0.129087,-0.765361,2.903676,-2.006095,9.026471,-1.957700,0.317540,-6.067566,-5.141304,0.550691,-8.458723,-3.479645,-9.171580,3.678947,2.368846,-1.541654,-7.725593,-6.348179,6.794587,8.684062,5.326964,8.974250,-4.205029,6.501584,5.537328,-2.301423,4.199732,6.378146,-8.206772,8.514745,3.251621,7.284178,-5.436146,2.882629,-4.509635,-0.757051,-5.304391,-8.131471,1.815589,6.351541,0.146692,7.799135,-3.478007,-2.742877,6.158925,-3.656432,7.016784,-2.741511,8.662964,-1.666260,0.608441,5.237191,-5.486205,-2.899302,-2.570770,-8.415488,1.019399,-4.579527,-0.467616,7.549440,-5.804706,-6.611073,0.394460,1.192725,-4.856129,-2.275877,-7.695310,-0.595497,2.140828,0.205426,-1.168530,8.170697,6.524291,-6.746740,8.994689,5.075913,0.385539,2.168007,-8.751968,-9.461479,-4.188893,-4.519035,-2.227866,-4.912908,-9.821329,8.420463,2.814702,-1.132231,-4.384244,6.262403,-3.363067,7.380086,-4.407376,-4.152316,8.917552,-2.903025,1.670829,8.734603,2.648133,-8.224930,3.241286,-1.780934,-2.021268,5.116762,3.312408,-9.820198,3.704941,-7.215954,0.274105,-0.165280,9.078947,-5.033628,-7.411124,-2.816153,2.687599,7.017646,5.032025,-9.490566,-0.992163,-7.900316,-7.415221,-8.430853,5.641253,6.689026,4.253300,1.998718,-1.565383,-4.259524,1.305571,-9.383947,9.497330,8.505593,-3.530247,-4.748771,8.826176,-7.755476,-9.790647,8.747304,9.131084,-4.022372,8.564063,8.382628,5.063497,-4.183298,8.638975,-4.109138,-1.715138,7.856334,5.235215,6.063957,-4.360375,-8.368262,-0.733994,-1.596832,-1.112714,5.018938,6.119259,-5.018102,-4.260459,9.617651,3.118893,-8.226013,-2.415321,-8.651769,0.874669,-1.682575,-4.434767,-8.653246,7.984116,-6.031118,8.660874,6.603263,0.546338,-8.176375,-9.639148,4.253442,3.426023,6.878477,1.080079,5.525688,9.700515,-4.178214,-2.619049,6.756199,-0.324539,1.024605,9.212498,-0.413508,-1.894508,-1.413154,-3.092574,7.436361,6.765265,8.172812,-5.654275,0.691258,3.041072,5.129517,9.914440,6.489990,3.912822,5.758295,8.004480,0.853351,-5.695042,-7.783148,7.716440,-5.420668,-6.954242,6.285968,-6.834070,-4.157166,-2.600663,3.056739,-7.181095,6.730651,-7.159681,-3.991653,-1.649146,6.792254,7.002011,-1.290360,6.986332,1.690751,-3.450789,2.123709,-1.615105,-4.406111,6.876043,-8.493075,-6.422666,9.759872,-0.408686,-8.203977,9.473726,-1.683413,3.914909,3.814578,2.027579,-2.198359,2.680262,4.466866,-0.840331,5.400659,6.164392,8.558516,0.903722,-8.532453,0.097395,6.273666,7.227632,8.406855,-9.851964,3.603321,-0.350253,7.344039,8.156728,4.612252,5.786099,-6.784647,-6.726030,-2.280320,-4.178485,8.546067,-6.598295,9.525333,-6.424014,-1.335537,7.651469,1.014284,-3.191660,-9.840218,7.131704,8.996020,-3.085000,1.639736,6.439798,-8.101237,8.470033,2.934309,-1.890375,6.667538,-3.964123,1.922264,4.145167,4.957489,-2.286994,-3.458625,3.626639,-8.341420,0.147297,-3.456741,1.532771,-5.521832,-3.244443,-5.630014,-0.762763,-3.418837,-2.946280,2.487151,-4.953651,6.893353,-3.077142,-0.856641,0.678976,2.665875,-4.897914,7.335376,-8.201320,-0.112605,-7.884965,-3.519825,-9.690876,9.056145,-5.602284,9.518828,8.208179,2.981407,-3.583090,9.125125,-9.750722,-3.194080,-8.455238,2.772547,2.068779,2.886330,-0.356058,1.267959,-7.227014,3.480677,8.952541,7.622066,0.510735,-5.382207,-9.809150,1.671195,-3.936133,-3.212221,-4.186983,0.578190,2.047359,7.995487,-4.288185,1.653549,1.963389,-7.062452,3.546636,0.475339,-9.211739,-1.943293,7.825572,-6.934136,3.464100,-4.314772,-7.449007,2.878115,-0.158581,7.143812,1.408755,-8.461571,-5.028057,3.369686,-6.814952,-9.598985,-9.736537,-7.394329,5.716463,3.539235,8.227056,-0.535022,-7.929133,7.605955,-2.255809,7.113203,4.612229,-0.529065,-7.717674,8.313726,-3.136713,-8.268093,-9.325432,-0.156636,8.762055,-9.535739,0.530731,-8.401155,1.483922,-2.549372,-1.572833,8.158954,6.921279,2.071578,-6.671254,6.258070,0.939774,8.898916,-6.551963,8.327078,-4.563479,-9.268016,-8.555199,0.327384,-1.713275,9.781373,0.153574,0.145590,-3.044841,9.649380,2.842521,6.653331,-3.627755,1.889114,-0.676482,-1.285281,-7.664950,-8.021635,1.074805,-7.313327,2.403119,-9.209608,7.920284,-0.353743,7.760221,-4.007959,-6.819019,0.991613,-6.136857,1.933265,8.440240,9.361427,-2.506427,-5.017949,5.557407,6.685022,-2.772181,-0.193353,3.361397,0.301508,-9.629917,-2.649742,7.661988,8.813922,-2.957088,-7.311552,-7.987739,9.198771,4.549876,-5.978411,1.589458,2.235519,5.460067,7.341733,-6.161966,6.501788,-6.076013,0.888099,1.327982,9.776770,3.720971,2.039955,-3.249751,-4.565191,-8.504634,-3.404841,8.530002,0.270136,8.423268,2.815842,7.125926,-9.827907,-5.694632,7.045360,-2.798675,6.782307,-9.542686,0.210281,-1.643171,-3.514748,-2.409934,-5.109940,2.679115,7.904516,-5.075650,-8.204946,1.535741,9.908848,3.546570,-9.092651,6.439836,3.688324,-3.518532,-7.145145,7.527327,-0.126487,-2.170561,9.834271,-1.751277,-8.266692,1.790768,0.870455,-4.815925,8.969121,8.733096,0.189609,9.455492,1.336064,-0.885889,-9.853943,-4.840251,1.345387,8.206740,-4.220189,5.500639,-0.760370,-5.591019,-0.844115,-5.404522,-8.896175,3.409641,7.255958,-2.895526,-7.433806,-0.520825,-6.242309,4.658289,3.776207,-6.621329,7.343130,6.704819,1.637180,5.091318,-4.910625,0.321343,8.841017,-5.961656,8.155878,7.907570,6.398346,1.283421,1.478238,-7.474983,3.747877,-7.271886,-1.549849,7.749576,6.886819,4.474181,-1.076791,-7.935938,1.167738,-7.863605,-8.639328,1.350409,-5.280652,2.429664,0.235845,-6.073270,5.292832,9.262481,-7.919047,6.441512,6.321015,6.553359,4.695560,-3.725736,3.223201,9.227441,-2.429292,5.993825,9.095091,-0.666624,-1.193738,-5.883849,-8.333443,-7.383367,-6.190854,-6.907715,-0.078403,3.927444,-1.678430,0.895595,1.233184,8.911152,0.352181,-3.310067,0.234736,7.958346,3.922325,1.911190,-5.562726,2.206311,0.262568,-5.513464,0.165179,9.453128,0.790746,4.736746,-3.483912,2.108781,-0.466816,-8.791459,-1.140802,3.767978,7.377360,9.803316,-8.658911,-7.017173,7.513542,-0.493432,2.968481,-0.457525,-1.203094,2.015533,-4.582106,-0.137327,-6.922504,-0.201203,-3.648218,-3.637049,8.990051,2.942159,-6.641177,4.163471,0.048447,0.196849,-2.396664,7.228312,9.889192,7.861970,6.638943,-0.781803,-6.381304,5.153164,3.721668,5.985958,6.727652,-8.834955,-0.550736,7.618228,2.004409,-7.104412,-3.427979,-9.439291,-5.482424,6.329791,9.745464,3.508080,6.740128,4.400287,0.238287,6.995757,1.066264,-6.304230,5.509370,1.538867,-3.140125,-7.970378,-6.459231,6.365888,-5.755308,-9.811094,-5.747861,-8.896790,-1.822732,-0.008868,-8.608209,8.824661,-9.289953,2.705690,5.205351,-2.294535,0.849460,0.695790,-8.461194,-1.835040,4.491389,-7.374719,5.684968,2.914817,-8.540324,7.410760,5.376880,9.783455,-5.326520,-2.102738,3.616171,-7.001587,1.783797,-7.185218,-6.900995,4.468658,-4.419701,2.846118,-4.261469,8.901694,2.960892,6.294983,6.760408,-8.259305,4.784257,-2.398927,6.656253,4.546412,-0.230747,-7.739289,4.638863,-4.817095,-0.919141,5.154075,9.914443,5.707100,6.931122,8.102397,4.975602,-1.428192,-6.083677,-1.328383,4.285072,7.190734,3.087717,-6.795548,7.452519,-9.462660,5.260682,-3.348442,2.265015,1.732072,-0.643201,8.239443,-5.973791,-5.156203,-7.328113,-8.712525,5.788761,6.817736,-1.854471,3.479647,4.868874,1.569474,8.541849,9.866975,7.599151,6.953860,3.038277,-6.999582,-0.749511,5.134950,0.811869,1.732163,6.060436,2.640234,-2.795826,7.453329,1.716924,-9.314500,-3.703542,3.547243,-4.659583,2.927439,5.550062,7.748227,-0.064856,0.574696,2.136283,-7.235101,7.234812,-0.703413,-8.237012,2.174793,-6.344196,-6.466984,6.169645,-2.146783,-9.343093,-7.334303,3.492599,-6.374882,-1.084680,0.692889,-6.637660,-1.271374,-7.286374,8.713450,-3.082151,-8.875915,3.242689,3.733207,-0.802549,-2.250590,3.574795,-4.425618,9.545122,-9.278517,-2.840792,9.629287,-8.362273,6.615223,-8.840398,0.140699,7.171753,0.525729,1.581829,-6.165799,-1.844053,-4.192881,0.648057,6.549216,4.689065,-2.537488,8.985745,-1.762817,6.007000,-3.762152,0.361181,-9.633006,5.713665,7.113735,-9.061482,-3.427757,-5.029148,-0.249578,-2.313692,-0.581060,9.277327,4.329963,-4.965912,-4.659173,2.598787,2.057070,8.256493,-9.706858,5.213295,8.710703,9.433910,1.295862,-1.359786,0.780954,5.471456,8.814185,-2.871313,5.634698,-6.506619,-7.462185,6.123108,-2.370369,0.929253,3.450668,-0.366807,-1.507589,6.668423,-0.144275,6.810154,-5.977644,4.002431,4.346284,-6.895383,1.259049,3.971424,2.452117,8.233116,2.839528,-5.122543,-9.325204,3.669880,-7.048814,-1.373091,-1.857488,-2.021858,-7.211203,-5.907741,8.017787,-0.038647,-7.238311,-8.135561,-4.020491,9.861908,-1.682375,5.572577,7.002911,4.081182,6.442315,-3.521330,0.040547,-2.853638,-7.075057,7.246223,1.707796,-4.606459,2.749338,3.267448,9.582371,2.367724,-9.285393,-2.606825,4.410790,5.319100,6.264005,2.233849,-2.295120,-0.723454,-9.024047,-1.545314,4.280984,9.216358,1.632965,2.272356,-5.163083,-5.178917,0.992904,-2.182420,-8.114808,0.817197,4.202383,-1.935191,-9.364532,-8.460534,3.756238,-1.080421,-2.586260,6.300052,3.238780,-9.512958,-3.115521,-0.479690,7.206455,-5.373677,5.525057,7.971502,-1.409952,-3.719687,-9.912474,-5.742685,-7.647249,-2.226926,-9.047666,-3.742353,-4.623339,4.447988,-6.034108,-1.460993,-9.304219,4.338874,-7.476515,-4.618018,0.497054,8.815379,-9.780406,8.516197,2.576834,5.118785,6.637196,9.294172,-4.964030,-1.824918,-0.053800,-4.611311,-6.566372,-8.244318,-8.640634,7.192661,-4.142412,7.355785,-2.627707,3.250931,-7.353475,-6.921837,-6.772348,-9.408979,-6.109210,5.080157,1.045159,-9.393066,-6.793418,8.999131,0.495259,-8.413592,1.060133,-0.163221,-7.642750,6.614674,-4.958862,-3.520955,0.954522,7.447565,-0.251482,4.256707,-3.679100,9.583145,-0.465076,9.349036,6.273852,8.327226,9.841890,4.476878,1.737445,2.607772,-8.095996,6.671980,-9.609455,6.513801,6.149160,-7.836536,-6.160144,-7.693542,-8.659873,7.815611,9.773056,9.945946,-4.520215,-2.324630,6.847246,-2.565002,-7.236644,-4.992160,-0.715825,1.164055,-3.834767,-0.370734,9.662303,3.140290,-5.875864,4.118698,-1.320029,5.179995,0.544312,-0.908087,4.580514,-9.463847,-2.807279,-7.512132,7.431850,7.157851,4.565371,-6.532512,-3.018778,0.592371,-4.357537,2.925216,5.531339,-0.815868,-5.673509,3.503865,2.794370,2.732266,-1.828304,-9.223695,1.888719,1.882940,8.656053,1.773085,-8.176494,1.849144,-0.718372,5.028433,4.898062,-1.696299,-1.042096,9.145932,-7.785832,-3.394453,-8.502931,-2.835651,-7.312589,-1.780221,4.389754,2.423419,-4.114524,9.032770,4.764264,-1.147676,-6.930009,5.366240,4.608802,-6.100753,3.026204,-3.866482,8.471339,-2.743649,8.128299,-8.508005,-1.468642,-5.203088,-2.163183,4.858080,-8.221758,-4.126187,9.278696,8.826529,-2.703147,-7.162251,-7.557357,2.663998,0.763008,1.563490,-4.968160,3.464298,-1.013051,-5.833886,8.288338,-3.825008,6.022040,-4.139794,-8.625606,9.022141,8.019724,1.539378,8.338882,-6.994595,-6.244527,3.505636,7.578949,4.199406,-1.143408,-2.493905,-9.049547,6.325668,8.607492,-1.104936,4.488384,-4.429798,9.065267,6.952779,-5.858009,1.291674,8.079017,7.995461,6.471734,-7.489045,-2.709534,-0.179352,-5.933440,2.899770,6.360394,2.842965,5.309427,-8.073179,7.731031,7.482661,3.631765,-4.529224,5.723840,2.407452,5.498853,-8.817033,-1.161345,-8.373092,-8.951925,-5.982043,8.400847,6.492307,9.768446,3.015445,4.438401,-5.656211,8.290864,2.742876,-5.319285,6.391111,1.225152,-7.176606,-4.750719,-6.415974,-4.045167,0.301245,-7.485828,-0.423305,-2.542878,3.207473,9.086977,-4.289237,-9.522617,8.898318,-8.939307,-2.359756,2.159214,4.929374,5.868776,-2.891161,-4.640310,9.585493,-3.546527,-1.044690,4.883342,-8.730803,5.692160,5.448230,5.076943,-0.268152,-8.366717,3.957844,3.595537,9.108105,-6.708544,-7.929325,0.215459,2.541759,-7.617603,-1.004199,0.523492,-9.675485,3.032328,9.381265,-7.530581,-3.370341,-5.053747,-7.282961,-6.996720,7.757883,-3.361880,7.958963,6.042777,6.499911,-2.332198,-1.653349,3.034698,-3.474609,-6.251554,5.891218,-5.229592,4.158706,0.652006,-5.295919,-8.333941,-0.309134,-6.785106,-4.239030,-1.259011,4.929886,-7.186645,1.061398,-4.298114,-6.904828,0.484102,5.447488,-3.602489,-2.776195,9.383684,0.821022,-4.784848,-6.927536,-8.599388,0.493312,-4.057637,9.199978,-4.635421,-8.308412,4.284366,4.481873,-1.983518,-1.571568,-5.627699,-7.424948,0.895764,0.271437,0.045372,-9.669404,-8.951813,0.288381,-5.305877,7.264662,9.191743,4.714226,7.527807,8.897822,-7.642809,-8.859824,-9.297646,-6.364234,-5.438322,-4.552853,1.327506,7.737645,-2.069646,-7.534625,-0.995836,4.750695,-9.618882,-6.271526,6.512081,3.405081,1.198805,-3.047076,6.889694,4.725008,-9.018599,0.227247,8.977673,-7.254025,3.299300,-2.602310,-3.371579,7.643081,0.183175,-3.229555,1.514048,-3.351197,4.986535,7.414472,0.131807,1.535160,-0.032837,8.350824,0.799928,5.837936,-5.385118], dtype = "float32")#candidate|15402|(3120,)|const|float32
call_15401 = relay.TupleGetItem(func_8287_call(relay.reshape(const_15402.astype('float32'), [13, 15, 16])), 0)
call_15403 = relay.TupleGetItem(func_8289_call(relay.reshape(const_15402.astype('float32'), [13, 15, 16])), 0)
func_15309_call = mod.get_global_var('func_15309')
func_15311_call = mutated_mod.get_global_var('func_15311')
call_15415 = relay.TupleGetItem(func_15309_call(), 0)
call_15416 = relay.TupleGetItem(func_15311_call(), 0)
output = relay.Tuple([call_15386,call_15401,const_15402,call_15415,])
output2 = relay.Tuple([call_15387,call_15403,const_15402,call_15416,])
func_15418 = relay.Function([], output)
mod['func_15418'] = func_15418
mod = relay.transform.InferType()(mod)
mutated_mod['func_15418'] = func_15418
mutated_mod = relay.transform.InferType()(mutated_mod)
func_15418_call = mutated_mod.get_global_var('func_15418')
call_15419 = func_15418_call()
output = call_15419
func_15420 = relay.Function([], output)
mutated_mod['func_15420'] = func_15420
mutated_mod = relay.transform.InferType()(mutated_mod)
func_15001_call = mod.get_global_var('func_15001')
func_15002_call = mutated_mod.get_global_var('func_15002')
call_15439 = relay.TupleGetItem(func_15001_call(), 0)
call_15440 = relay.TupleGetItem(func_15002_call(), 0)
var_15472 = relay.var("var_15472", dtype = "float32", shape = (13, 12, 3))#candidate|15472|(13, 12, 3)|var|float32
bop_15473 = relay.logical_xor(call_15439.astype('uint16'), relay.reshape(var_15472.astype('uint16'), relay.shape_of(call_15439))) # shape=(13, 12, 3)
bop_15476 = relay.logical_xor(call_15440.astype('uint16'), relay.reshape(var_15472.astype('uint16'), relay.shape_of(call_15440))) # shape=(13, 12, 3)
func_1652_call = mod.get_global_var('func_1652')
func_1655_call = mutated_mod.get_global_var('func_1655')
const_15478 = relay.const([-3,2,2,10,-7,-2,-8,-7,6,9,-8,-1,8,-6,-7,8,-6,10,2,-7,3,-5,-2,-7,-2,6,-9,-10,-9,5,5,-5,-6,1,7,8,-7,2,7,-2,6,-2,-5,10,-1,9,10,9,1,3,-7,-9,-6,-6,2,4,5,1,-10,-5,7,9,8,-3,-9,8,-7,-2,9,8,7,-9,9,4,4,2,-3,-9,10,-1,-8,7,-7,-10,7,8,-9,-8,-9,-10,4,-4,-5,-8,-5,-4,-8,-2,-9,3,-10,2,10,-10,4,9,1,3,-8,-1,-1,-8,5,4,-4,-2,8,4,3,6,-3,3,10,-10,-8,1,-5,8,1,-5,-1,-9,-10,8,8,-9,10,-5,-10,9,5,9,3,9,1,10,1,-4,4,-2,-5,3,5,-6,-4,-4,6,-8,-1,4,-3,8,2,4,-4,-8,9,4,3,10,-6,-8,-8,-3,5,2,10,3,2,9,4,-4,-1,1,-10,-3,5,-3,2,-5,3,-7,9,-8,5,-6,-5,6,-1,-1,-7,-9,8,7,-8,-6,-2,-6,3,2,1,9,-10,-3,-1,4,-1,-10,7,-8,2,7,-9,2,9,9,2,6,-4,-5,-3,1,-1,2,10,2,8,-5,4,-10,-3,-3,-9,-9,7,-6,-2,-6,-9,1,-10,3,-4,-4,8,-9,3,8,-2,4,10,2,10,6,-6,-1,2,4,-4,2,2,-5,-5,8,-1,-9,-6,-4,8,-6,-7,-3,-4,-4,-5,2,-10,-4,-1,2,-5,-4,1,7,-8,-6,-1,5,-3,-6,5,-8,9,10,2,-2,3,10,-4,5,-2,-8,-7,-10,3,-1,-6,-3,-8,-4,5,1,-4,3,-8,1,-9,-4,-3,9,10,6,8,10,-2,-8,2,8,2,3,10,-1,2,-7,10,3,-5,-6,8,-1,-2,-1,10,-10,1,-4,9,1,-9,-8,-4,8,10,4,-2,8,8,10,-9,2,-6,-4,-10,-6,-5,9,-5,-1,-3,-1,-4,8,-10,-9,9,-2,6,9,3,6,-2,-7,3,10,-7,-10,-1,10,-9,4,-10,4,-2,-1,-10,1,3,-9,-10,-2,-1,5,-3,5,3,9,-4,9,-7,1,9,-9,1,-1,-6,-5,5,9,4,9,3,-1,4,5,10,9,7,6,-8,9,9,-3,4,4,7,-5,5,7,6,1,7,7,-1,-2,-9,-5,4,3,-1,8,-2,8,1,-7,9,-4,7,10,6,7,4,-4,-3,10,3,1,3,3,7,2,7,4,-1,1,8,-1,-1,3,-1,7,-1,1,10,-9,-5,2,-10,3,-3,-7,4,3,4,-9,-9,8,5,-5,5,-1,-8,10,1,9,10,5,7,-1,-6,-3,7,6,-5,8,-6,10,-5,-3,-6,10,-10,1,-5,-6,1,5,-5,3,-1,-9,1,10,-10,4,-5,1,1,3,-2,-4,-2,-4,-9,6,9,4,5,-8,9,8,-6,1,2,-1,5,-9,6,4,2,5,5,1,-5,4,1,-10,-2,-2,5,9,1,-8,3,2,4,-7,7,1,-9,8,7,-4,-8,-3,10,-6,-2,-5,6,2,-5,9,7,5,-4,-5,-2,-2,-3,-5,1,-1,-6,7,6,-4,-8,-4,-4,2,-4,3,-4,-6,1,2,-5,-4,3,-6,3,-1,-4,8,4,8,-7,-3,5,1,-3,10,6,-2,9,8,-8,3,-4,10,2,-5,8,-1,-9,10,3,-1,-6,-10,9,-7,8,8,2,9,5,-3,4,-5,6,5,7,-10,9,8,-1,6,4,3,-4,-9,8,2,-6,7,2,1,9,2,3,-9,-4,6,-1,-3,-3,3,-4,7,2,10,-7,-5,2,8,7,2,4,-1,-8,1,-7,-5,9,-1,-4,-5,9,9,7,-9,-5,-10,-8,6,-7,7,9,-7,2,9,8,-8,6,-10,-7,1,-7,-10,2,-1,1,5,8,10,9,-7,-5,-3,4,-6,-4,10,-8,8,-6,-10,-7,-9,-4,-6,-10,9,-7,8,8,2,-1,-5,5,-10,2,-10,-3,-7,-9,2,-5,-7,-3,-6,9,5,10,-10,3,8,1,6,10,-3,-6,10,-3,-6,4,-9,9,4,4,-8,7,4,-5,-2,-4,4,7,1,-1,-10,10,7,-5,-1,-8,-8,5,10,2,3,-4,-4,-10,-3,-4,7,4,5,6,8,5,6,-8,9,8,-4,10,-5,6,3,-1,-6,-4,-4,-7,4,-10,1,9,-8,4,9,-1,-4,2,-9,-8,10,5,4,-6,-5,1,4,8,6,3,5,10,1,1,-9,-6,-2,-2,-5,5,7,-6,5,-3,5,8,10,-3,2,-4,2,-9,-10,-1,1,3,-1,1,2,-8,-9,-8,6,3,-7,10,-6,-4,-10,-1,10,-1,4,6,5,4,-2,-5,6,-6,-5,-2,5,-7,-10,8,-4,-10,10,-6,-2,8,-5,-2,-1,5,7,8,5,7,-6,7,3,-8,-5,-7,-7,9,-8,-2,-1,6,6,8,-9,-9,1,5,-3,-8,-9,5,9,-5,-7,5,-6,4,3,5,8,-7,10,-4,4,3,-4,-7,-2,-10,-1,-5,-6,-9,2,2,-8,8,8,-2,1,-6,-2,9,-5,-5,6,3,10,4,6,1,-5,-1,-2,-7,-6,1,4,-6,-1,-5,-10,10,10,3,9,9,6,9,1,-2,-9,-9,-10,-3,-3,-9,-5,-4,-2,1,2,7,8,-5,-4,-9,9,-5,10,-2,-6,-7,-8,8,-9,-5,-8,8,-10,8,1,6,-3,9,-1,-8,9,-10,6,9,8,6,-6,-6,9,-2,-1,-8,-3,10,7,-3,-1,3,2,3,-8,7,-3,-10,-7,3,-3,2,8,-10,-8,-1,-7,-8,-8,8,-10,-10,10,-5,4,-2,-1,-5,-4,3,-7,3,-1,-2,10,7,-6,4,8,-2,-7,3,9,-6,2,-5,6,-4,6,7,7,7,2,-1,1,5,6,-8,6,7,5,-9,-9,9,-9,3,-4,-9,-2,-9,2,2,3,-4,-4,-9,5,2,-10,-9,-1,5,5,-2,-4,1,-4,-5,-3,-6,-2,-7,-2,2,2,-1,6,-8,9,9,8,9,-4,-9,-5,-5,-1,-5,1,-6,-9,-6,4,7,4,7,7,-6,-10,10,-1,4,7,-6,7,1,-1,-2,-1,-8,-6,-6,9,-5,-8,-4,-10,-2,8,-5,-2,-10,5,7,2,2,-8,-10,-10,-8,2,9,10,10,3,-4,4,-9,-7,-9,-2,6,9,7,-3,-10,-6,-8,2,6,-5,-10,6,10,-4,2,-9,-5,6,-8,8,-5,-6,-5,-1,4,3,5,-1,-3,-5,2,3,2,3,8,9,8,-8,-4,5,-7,1,-6,-8,-1,3,-8,-3,6,2,7,-9,7,-9,-6,-2,-3,-6,7,-9,8,-4,-8,9,-2,2,-2,-8,6,-3,-2,-7,10,-3,7,7,-3,2,-5,9,-3,9,-10,6,4,2,6,10,-1,3,6,5,-9,3,7,-3,1,-6,9,-10,-5,1,-10,-7,6,2,2,-1,2,6], dtype = "uint16")#candidate|15478|(1344,)|const|uint16
call_15477 = relay.TupleGetItem(func_1652_call(relay.reshape(const_15478.astype('uint16'), [12, 14, 8])), 1)
call_15479 = relay.TupleGetItem(func_1655_call(relay.reshape(const_15478.astype('uint16'), [12, 14, 8])), 1)
func_11189_call = mod.get_global_var('func_11189')
func_11193_call = mutated_mod.get_global_var('func_11193')
var_15488 = relay.var("var_15488", dtype = "uint16", shape = (648,))#candidate|15488|(648,)|var|uint16
call_15487 = relay.TupleGetItem(func_11189_call(relay.reshape(var_15488.astype('uint16'), [12, 6, 9]), relay.reshape(var_15488.astype('uint16'), [12, 6, 9]), ), 2)
call_15489 = relay.TupleGetItem(func_11193_call(relay.reshape(var_15488.astype('uint16'), [12, 6, 9]), relay.reshape(var_15488.astype('uint16'), [12, 6, 9]), ), 2)
func_11960_call = mod.get_global_var('func_11960')
func_11962_call = mutated_mod.get_global_var('func_11962')
const_15494 = relay.const([-3,7,-9,4,-6,-10,2,5,-2,5,-4,-1,6,-3,6,8,-4,-5,-7,-4,-6,5,-10,4,-3,-2,-1,1,6,-4,7,-2,-5,4,7,-7,4,-1,-4,-8,3,-4,-2,-2,1,1,-5,9,-1,4,-2,-9,2,-3,-6,-3,-1,-3,-4,-9,8,2,-6,-5,-5,3,1,4,-5,-10,-5,9,-10,7,7,8,10,1,3,3,9,5,-9,1,-3,-2,-4,6,-3,-9,-3,-8,-8,-8,-6,-9,6,-3,3,8,7,-6,-3,4,-7,8,1,-2,-4,-10,-3,5,2,-6,-4,-1,-4,-1,-1,-7,-9,8,-1,-8,3,5,-6,-5,8,3,6,4,-3,1,9,2,-10,-7,1,6,-3,9,-1,8,-8,3,7,5,10,3,1,1,-4,-4,4,-8,-1,6,3,-3,-7,4,4,3,5,-5,-1,-2,7,-1,-6,-9,6,-2,1,10,2,3,5,-9,-6,-9,-3,4,-6,2,-2,2,-8,8,8,9,-4,-5,2,1,10,-5,-10,-4,1,-10,-7,-4,-5,-6,10,4,-2,3,4,-2,-4,9,3,2,-9,1,-5,5,-7,4,8,1,8,6,8,8,2,-7,3,2,-2,-10,-10,-8,5,2,1,-7,-9,-2,-8,8,10,-8,-7,-4,5,-7,-8,10,8,-1,9,-9,-9,-3,3,-9,-9,3,9,-4,-1,9,-7,-7,5,3,3,10,4,1,7,8,10,3,-1,4,-9,3,4,-10,-7,-2,-4,4,-8,-5,6,-4,-7,6,5,1,-4,7,-6,10,-9,-4,7,-10,3,-3,-1,7,-3,7,4,-9,4,-10,-2,-2,3,5,-3,6,-2,-7,3,2,-7,-3,9,-1,9,-3,-2,-3,2,4,4,-3,6,-9,4,-6,-2,-3,-2,-2,-6,3,10,4,3,-7,-9,-3,-10,5,-6,4,1,-9,-2,3,5,-7,-3,9,10,-4,8,-3,4,4,-10,-9,8,3,8,9,3,2,-6,3,-1,-4,-4,9,4,7,-2,4,-4,-9,6,-10,3,-4,-3,4,3,2,4,5,-5,-3,-1,-6,-5,-9,-2,-9,-9,3,-1,7,-6,1,-10,-9,9,1,-10,-6,1,-7,2,-7,2,-6,-6,6,2,3,4,-9,5,-4,7,3,3,3,7,-10,-8,1,7,-8,-5,-3,5,1,-1,7,4,10,-10,-5,-10,8,-1,-4,8,-9,4,-1,3,-1,6,-6,9,-10,-6,-8,1,-6,8,-3,3,9,-4,-6,-4,-5,6,1,-5,6,5,10,3,8,-6,-8,-3,-6,-7,7,-1,4,-4,-5,-5,2,7,7,8,1,-6,-2,-6,-7,-3,6,7,-3,4,-9,1,10,1,-9,-3,-2,-9,-10,-7,10,9,3,-6,6,4,-1,-5,2,8,-7,-2,-4,7,8,10,3,-5,-7,3,-1,9,2,2,-1,5,-5,-1,10,2,-2,-5,2,-9,1,2,-1,-3,-6,6,9,-7,8,3,6,5,10,10,10,-2,-3,4,-7,6,-5,-1,4,9,8,10,-9,-9,-7,-10,-10,1,-7,7,1,9,4,10,-10,1,-1,9,8,-9,-8,-5,1,2,-8,-4,-2,6,-3,-5,-5,2,-7,-8,-10,1,7,-6,1,-10,9,-9,9,9,4,-6,2,7,-8,6,3,7,3,-2,-3,3,-8,-3,10,8,7,4,-3,-9,-7,10,4,2,1], dtype = "int16")#candidate|15494|(650,)|const|int16
call_15493 = func_11960_call(relay.reshape(const_15494.astype('int16'), [5, 10, 13]))
call_15495 = func_11960_call(relay.reshape(const_15494.astype('int16'), [5, 10, 13]))
func_3899_call = mod.get_global_var('func_3899')
func_3901_call = mutated_mod.get_global_var('func_3901')
const_15498 = relay.const([8,-6,-5,-6,-1,-9,2,10,7,3,-8,1,-6,-10,1,-10,1,8,8,4,9,-10,5,6,2,9,6,5,5,1,-5,9,-10,-3,8,-10,3,7,9,-9,3,-2,7,3,3,10,-6,5,3,-4,7,8,-3,-9,10,-5,5,-4,-5,6,4,7,2,-5,9,-6,3,-8,2,-1,7,-7,-5,7,-9,-9,9,-2,5,-6,9,5,-7,-10,-10,3,-9,2,-1,-6,-1,3,9,1,-5,2,-8,-9,10,7,-2,-7,-9,5,-7], dtype = "uint32")#candidate|15498|(105,)|const|uint32
call_15497 = func_3899_call(relay.reshape(const_15498.astype('uint32'), [3, 7, 5]))
call_15499 = func_3899_call(relay.reshape(const_15498.astype('uint32'), [3, 7, 5]))
func_14334_call = mod.get_global_var('func_14334')
func_14337_call = mutated_mod.get_global_var('func_14337')
var_15510 = relay.var("var_15510", dtype = "float32", shape = (30, 1))#candidate|15510|(30, 1)|var|float32
call_15509 = relay.TupleGetItem(func_14334_call(relay.reshape(var_15510.astype('float32'), [30,])), 0)
call_15511 = relay.TupleGetItem(func_14337_call(relay.reshape(var_15510.astype('float32'), [30,])), 0)
uop_15513 = relay.tan(call_15477.astype('float32')) # shape=(12, 14, 8)
uop_15515 = relay.tan(call_15479.astype('float32')) # shape=(12, 14, 8)
output = relay.Tuple([bop_15473,const_15478,call_15487,var_15488,call_15493,const_15494,call_15497,const_15498,call_15509,var_15510,uop_15513,])
output2 = relay.Tuple([bop_15476,const_15478,call_15489,var_15488,call_15495,const_15494,call_15499,const_15498,call_15511,var_15510,uop_15515,])
func_15517 = relay.Function([var_15472,var_15488,var_15510,], output)
mod['func_15517'] = func_15517
mod = relay.transform.InferType()(mod)
var_15518 = relay.var("var_15518", dtype = "float32", shape = (13, 12, 3))#candidate|15518|(13, 12, 3)|var|float32
var_15519 = relay.var("var_15519", dtype = "uint16", shape = (648,))#candidate|15519|(648,)|var|uint16
var_15520 = relay.var("var_15520", dtype = "float32", shape = (30, 1))#candidate|15520|(30, 1)|var|float32
output = func_15517(var_15518,var_15519,var_15520,)
func_15521 = relay.Function([var_15518,var_15519,var_15520,], output)
mutated_mod['func_15521'] = func_15521
mutated_mod = relay.transform.InferType()(mutated_mod)
func_15261_call = mod.get_global_var('func_15261')
func_15263_call = mutated_mod.get_global_var('func_15263')
call_15538 = relay.TupleGetItem(func_15261_call(), 0)
call_15539 = relay.TupleGetItem(func_15263_call(), 0)
uop_15541 = relay.erf(call_15538.astype('float32')) # shape=(13, 12, 3)
uop_15543 = relay.erf(call_15539.astype('float32')) # shape=(13, 12, 3)
func_4679_call = mod.get_global_var('func_4679')
func_4683_call = mutated_mod.get_global_var('func_4683')
const_15546 = relay.const([8,1,-6,-7,6,8,-10,2,8,4,2,1,-4,-3,1,-5,10,3,8,-10,3,-10,2,8,-4,7,8,5,7,2,-8,7,10,3,1,2,1,8,6,3,-6,7,-8,-7,-10,1,3,-3,-9,1,-10,-5,-9,-4,8,-6,-10,10,5,3,8,3,-3,4,-5,-3,2,-7,10,5,-1,-4,-3,-8,-4,6,-6,-3,5,2,-6,6,2,8,-5,2,5,-6,2,9,-7,-10,-1,-4,4,-10,-1,-8,-10,-7,-1,-2,4,-5,3,4,6,-3,-9,-7,2,-3,4,6,-10,-2,9,-9,1,1,7,-6,-9,2,-7,-9,6,2,5,-7,-10,-8,-2,-3,-9,9,-10,-1,-3,7,3,8,7,-1,-7,-9,-7,7,-2,-2,-7,-8,-3,5,3,-7,7,-6,-7,-1,7,-3,-5,-4,1,1,-5,4,-10,-8,-1,9,-10,6,-4,-4,-7,5,-7,10,-3,7,-9,-9,-10,-4,-2,2,-8,1,-7,10,2,-5,-2,-9,5,-6,7,-5,-2,1,-10,6,-3,-9,-4,2,4,-6,-10,3,3,10,-5,-10,-4,9,-3,-3,5,-7,-10,-4,-6,-1,9,4,5,3,-10,5,3,-9,10,-5,1,4,2,-6,-10,7,-4,1,-8,7,7,-4,-7,-9,5,4,7,-9,-5,7], dtype = "uint16")#candidate|15546|(256,)|const|uint16
call_15545 = relay.TupleGetItem(func_4679_call(relay.reshape(const_15546.astype('uint16'), [2, 16, 8]), relay.reshape(const_15546.astype('uint16'), [2, 16, 8]), ), 0)
call_15547 = relay.TupleGetItem(func_4683_call(relay.reshape(const_15546.astype('uint16'), [2, 16, 8]), relay.reshape(const_15546.astype('uint16'), [2, 16, 8]), ), 0)
func_590_call = mod.get_global_var('func_590')
func_592_call = mutated_mod.get_global_var('func_592')
var_15549 = relay.var("var_15549", dtype = "float64", shape = (616,))#candidate|15549|(616,)|var|float64
call_15548 = relay.TupleGetItem(func_590_call(relay.reshape(var_15549.astype('float64'), [1, 616])), 0)
call_15550 = relay.TupleGetItem(func_592_call(relay.reshape(var_15549.astype('float64'), [1, 616])), 0)
uop_15559 = relay.log(uop_15541.astype('float64')) # shape=(13, 12, 3)
uop_15561 = relay.log(uop_15543.astype('float64')) # shape=(13, 12, 3)
bop_15562 = relay.maximum(uop_15541.astype('uint8'), relay.reshape(uop_15559.astype('uint8'), relay.shape_of(uop_15541))) # shape=(13, 12, 3)
bop_15565 = relay.maximum(uop_15543.astype('uint8'), relay.reshape(uop_15561.astype('uint8'), relay.shape_of(uop_15543))) # shape=(13, 12, 3)
output = relay.Tuple([call_15545,const_15546,call_15548,var_15549,bop_15562,])
output2 = relay.Tuple([call_15547,const_15546,call_15550,var_15549,bop_15565,])
func_15583 = relay.Function([var_15549,], output)
mod['func_15583'] = func_15583
mod = relay.transform.InferType()(mod)
mutated_mod['func_15583'] = func_15583
mutated_mod = relay.transform.InferType()(mutated_mod)
var_15584 = relay.var("var_15584", dtype = "float64", shape = (616,))#candidate|15584|(616,)|var|float64
func_15583_call = mutated_mod.get_global_var('func_15583')
call_15585 = func_15583_call(var_15584)
output = call_15585
func_15586 = relay.Function([var_15584], output)
mutated_mod['func_15586'] = func_15586
mutated_mod = relay.transform.InferType()(mutated_mod)
func_15261_call = mod.get_global_var('func_15261')
func_15263_call = mutated_mod.get_global_var('func_15263')
call_15619 = relay.TupleGetItem(func_15261_call(), 0)
call_15620 = relay.TupleGetItem(func_15263_call(), 0)
func_3899_call = mod.get_global_var('func_3899')
func_3901_call = mutated_mod.get_global_var('func_3901')
var_15624 = relay.var("var_15624", dtype = "uint32", shape = (1, 105))#candidate|15624|(1, 105)|var|uint32
call_15623 = func_3899_call(relay.reshape(var_15624.astype('uint32'), [3, 7, 5]))
call_15625 = func_3899_call(relay.reshape(var_15624.astype('uint32'), [3, 7, 5]))
output = relay.Tuple([call_15619,call_15623,var_15624,])
output2 = relay.Tuple([call_15620,call_15625,var_15624,])
func_15633 = relay.Function([var_15624,], output)
mod['func_15633'] = func_15633
mod = relay.transform.InferType()(mod)
mutated_mod['func_15633'] = func_15633
mutated_mod = relay.transform.InferType()(mutated_mod)
var_15634 = relay.var("var_15634", dtype = "uint32", shape = (1, 105))#candidate|15634|(1, 105)|var|uint32
func_15633_call = mutated_mod.get_global_var('func_15633')
call_15635 = func_15633_call(var_15634)
output = call_15635
func_15636 = relay.Function([var_15634], output)
mutated_mod['func_15636'] = func_15636
mutated_mod = relay.transform.InferType()(mutated_mod)
func_15309_call = mod.get_global_var('func_15309')
func_15311_call = mutated_mod.get_global_var('func_15311')
call_15725 = relay.TupleGetItem(func_15309_call(), 0)
call_15726 = relay.TupleGetItem(func_15311_call(), 0)
output = relay.Tuple([call_15725,])
output2 = relay.Tuple([call_15726,])
func_15727 = relay.Function([], output)
mod['func_15727'] = func_15727
mod = relay.transform.InferType()(mod)
mutated_mod['func_15727'] = func_15727
mutated_mod = relay.transform.InferType()(mutated_mod)
func_15727_call = mutated_mod.get_global_var('func_15727')
call_15728 = func_15727_call()
output = call_15728
func_15729 = relay.Function([], output)
mutated_mod['func_15729'] = func_15729
mutated_mod = relay.transform.InferType()(mutated_mod)
func_14933_call = mod.get_global_var('func_14933')
func_14934_call = mutated_mod.get_global_var('func_14934')
call_15742 = func_14933_call()
call_15743 = func_14933_call()
var_15744 = relay.var("var_15744", dtype = "float32", shape = (13, 12, 3))#candidate|15744|(13, 12, 3)|var|float32
bop_15745 = relay.left_shift(call_15742.astype('int32'), relay.reshape(var_15744.astype('int32'), relay.shape_of(call_15742))) # shape=(13, 12, 3)
bop_15748 = relay.left_shift(call_15743.astype('int32'), relay.reshape(var_15744.astype('int32'), relay.shape_of(call_15743))) # shape=(13, 12, 3)
func_11960_call = mod.get_global_var('func_11960')
func_11962_call = mutated_mod.get_global_var('func_11962')
var_15770 = relay.var("var_15770", dtype = "int16", shape = (650, 1))#candidate|15770|(650, 1)|var|int16
call_15769 = func_11960_call(relay.reshape(var_15770.astype('int16'), [5, 10, 13]))
call_15771 = func_11960_call(relay.reshape(var_15770.astype('int16'), [5, 10, 13]))
output = relay.Tuple([bop_15745,call_15769,var_15770,])
output2 = relay.Tuple([bop_15748,call_15771,var_15770,])
func_15773 = relay.Function([var_15744,var_15770,], output)
mod['func_15773'] = func_15773
mod = relay.transform.InferType()(mod)
var_15774 = relay.var("var_15774", dtype = "float32", shape = (13, 12, 3))#candidate|15774|(13, 12, 3)|var|float32
var_15775 = relay.var("var_15775", dtype = "int16", shape = (650, 1))#candidate|15775|(650, 1)|var|int16
output = func_15773(var_15774,var_15775,)
func_15776 = relay.Function([var_15774,var_15775,], output)
mutated_mod['func_15776'] = func_15776
mutated_mod = relay.transform.InferType()(mutated_mod)
var_15793 = relay.var("var_15793", dtype = "int16", shape = ())#candidate|15793|()|var|int16
var_15794 = relay.var("var_15794", dtype = "int16", shape = (16, 1, 10))#candidate|15794|(16, 1, 10)|var|int16
bop_15795 = relay.left_shift(var_15793.astype('int16'), var_15794.astype('int16')) # shape=(16, 1, 10)
func_300_call = mod.get_global_var('func_300')
func_303_call = mutated_mod.get_global_var('func_303')
var_15833 = relay.var("var_15833", dtype = "float64", shape = (1, 616))#candidate|15833|(1, 616)|var|float64
call_15832 = relay.TupleGetItem(func_300_call(relay.reshape(var_15833.astype('float64'), [8, 11, 7])), 0)
call_15834 = relay.TupleGetItem(func_303_call(relay.reshape(var_15833.astype('float64'), [8, 11, 7])), 0)
uop_15835 = relay.exp(call_15832.astype('float32')) # shape=(8, 11, 7)
uop_15837 = relay.exp(call_15834.astype('float32')) # shape=(8, 11, 7)
func_590_call = mod.get_global_var('func_590')
func_592_call = mutated_mod.get_global_var('func_592')
call_15845 = relay.TupleGetItem(func_590_call(relay.reshape(var_15833.astype('float64'), [1, 616])), 0)
call_15846 = relay.TupleGetItem(func_592_call(relay.reshape(var_15833.astype('float64'), [1, 616])), 0)
const_15852 = relay.const([[[-4,-4,-7,5,-10,-2,8,-5,4,-8]],[[7,-10,-8,6,-10,6,5,6,3,-4]],[[2,5,7,-5,-3,-9,-8,7,6,5]],[[-4,1,3,3,-9,-8,6,-10,-5,-4]],[[-7,-9,4,10,9,5,10,-7,3,8]],[[-9,-2,-2,-8,7,-5,4,9,2,-7]],[[7,-6,-8,-10,3,3,-4,6,7,-3]],[[5,9,4,9,-9,6,-8,3,-5,9]],[[2,-1,8,4,-1,-10,-5,-10,-6,4]],[[7,1,2,3,10,-5,-7,9,-4,-3]],[[-10,-5,-3,-5,-6,-6,10,-8,3,10]],[[-7,-6,-3,-10,-7,-6,-5,3,6,8]],[[-8,-6,-2,-1,-8,-10,7,-7,-2,9]],[[-9,8,6,1,1,5,-4,10,-5,-2]],[[-3,8,-10,-2,4,-2,8,7,3,-7]],[[7,-8,3,6,-8,-3,-3,-2,-9,-3]]], dtype = "int16")#candidate|15852|(16, 1, 10)|const|int16
bop_15853 = relay.less(var_15794.astype('bool'), relay.reshape(const_15852.astype('bool'), relay.shape_of(var_15794))) # shape=(16, 1, 10)
func_7237_call = mod.get_global_var('func_7237')
func_7240_call = mutated_mod.get_global_var('func_7240')
const_15861 = relay.const([[-4.562853,9.080101,-5.385166,9.221414,-3.222514,2.555769,6.889093,-7.519210,-1.345725,-4.678875,2.890215,-8.294925],[-9.938023,-5.464115,-2.639777,-5.787816,3.684284,0.304993,-1.608954,2.813459,-5.228440,-6.856901,4.405695,-0.550933]], dtype = "float64")#candidate|15861|(2, 12)|const|float64
call_15860 = func_7237_call(relay.reshape(const_15861.astype('float64'), [1, 2, 12]))
call_15862 = func_7237_call(relay.reshape(const_15861.astype('float64'), [1, 2, 12]))
func_3899_call = mod.get_global_var('func_3899')
func_3901_call = mutated_mod.get_global_var('func_3901')
var_15870 = relay.var("var_15870", dtype = "uint32", shape = (105,))#candidate|15870|(105,)|var|uint32
call_15869 = func_3899_call(relay.reshape(var_15870.astype('uint32'), [3, 7, 5]))
call_15871 = func_3899_call(relay.reshape(var_15870.astype('uint32'), [3, 7, 5]))
func_13700_call = mod.get_global_var('func_13700')
func_13703_call = mutated_mod.get_global_var('func_13703')
const_15881 = relay.const([-3.293472,3.971449,-5.626507,5.316557,8.777850,-2.732973,9.095174,1.787673,-2.372586,-9.880367,-6.027971,-7.229031,-2.351446,2.267318,0.427719,4.544496], dtype = "float64")#candidate|15881|(16,)|const|float64
call_15880 = relay.TupleGetItem(func_13700_call(relay.reshape(const_15881.astype('float64'), [1, 8, 2])), 0)
call_15882 = relay.TupleGetItem(func_13703_call(relay.reshape(const_15881.astype('float64'), [1, 8, 2])), 0)
output = relay.Tuple([bop_15795,var_15833,uop_15835,call_15845,bop_15853,call_15860,const_15861,call_15869,var_15870,call_15880,const_15881,])
output2 = relay.Tuple([bop_15795,var_15833,uop_15837,call_15846,bop_15853,call_15862,const_15861,call_15871,var_15870,call_15882,const_15881,])
func_15899 = relay.Function([var_15793,var_15794,var_15833,var_15870,], output)
mod['func_15899'] = func_15899
mod = relay.transform.InferType()(mod)
var_15900 = relay.var("var_15900", dtype = "int16", shape = ())#candidate|15900|()|var|int16
var_15901 = relay.var("var_15901", dtype = "int16", shape = (16, 1, 10))#candidate|15901|(16, 1, 10)|var|int16
var_15902 = relay.var("var_15902", dtype = "float64", shape = (1, 616))#candidate|15902|(1, 616)|var|float64
var_15903 = relay.var("var_15903", dtype = "uint32", shape = (105,))#candidate|15903|(105,)|var|uint32
output = func_15899(var_15900,var_15901,var_15902,var_15903,)
func_15904 = relay.Function([var_15900,var_15901,var_15902,var_15903,], output)
mutated_mod['func_15904'] = func_15904
mutated_mod = relay.transform.InferType()(mutated_mod)
func_15261_call = mod.get_global_var('func_15261')
func_15263_call = mutated_mod.get_global_var('func_15263')
call_15930 = relay.TupleGetItem(func_15261_call(), 0)
call_15931 = relay.TupleGetItem(func_15263_call(), 0)
func_1722_call = mod.get_global_var('func_1722')
func_1726_call = mutated_mod.get_global_var('func_1726')
var_15943 = relay.var("var_15943", dtype = "float32", shape = (144,))#candidate|15943|(144,)|var|float32
var_15944 = relay.var("var_15944", dtype = "float32", shape = (2304,))#candidate|15944|(2304,)|var|float32
call_15942 = func_1722_call(relay.reshape(var_15943.astype('float32'), [16, 9, 1]), relay.reshape(var_15944.astype('float32'), [16, 9, 16]), )
call_15945 = func_1722_call(relay.reshape(var_15943.astype('float32'), [16, 9, 1]), relay.reshape(var_15944.astype('float32'), [16, 9, 16]), )
func_15517_call = mod.get_global_var('func_15517')
func_15521_call = mutated_mod.get_global_var('func_15521')
var_15949 = relay.var("var_15949", dtype = "uint16", shape = (648,))#candidate|15949|(648,)|var|uint16
const_15950 = relay.const([-7.683873,-6.676607,-9.561273,2.272772,3.157772,3.142982,1.468459,-4.733153,-3.727372,8.930107,6.810911,-1.202828,-4.161280,8.956827,2.653752,-5.521019,-5.287713,7.957955,9.622739,-9.091822,-4.743276,6.828484,-3.405454,-3.595891,-7.450136,-3.093152,6.733762,8.332672,-2.486520,9.538194], dtype = "float32")#candidate|15950|(30,)|const|float32
call_15948 = relay.TupleGetItem(func_15517_call(relay.reshape(call_15930.astype('float32'), [13, 12, 3]), relay.reshape(var_15949.astype('uint16'), [648,]), relay.reshape(const_15950.astype('float32'), [30, 1]), ), 6)
call_15951 = relay.TupleGetItem(func_15521_call(relay.reshape(call_15930.astype('float32'), [13, 12, 3]), relay.reshape(var_15949.astype('uint16'), [648,]), relay.reshape(const_15950.astype('float32'), [30, 1]), ), 6)
bop_15954 = relay.greater_equal(call_15942.astype('bool'), relay.reshape(var_15944.astype('bool'), relay.shape_of(call_15942))) # shape=(16, 9, 16)
bop_15957 = relay.greater_equal(call_15945.astype('bool'), relay.reshape(var_15944.astype('bool'), relay.shape_of(call_15945))) # shape=(16, 9, 16)
func_12626_call = mod.get_global_var('func_12626')
func_12630_call = mutated_mod.get_global_var('func_12630')
var_15959 = relay.var("var_15959", dtype = "int64", shape = (1040,))#candidate|15959|(1040,)|var|int64
call_15958 = func_12626_call(relay.reshape(var_15959.astype('int64'), [13, 8, 10]), relay.reshape(var_15959.astype('int64'), [13, 8, 10]), )
call_15960 = func_12626_call(relay.reshape(var_15959.astype('int64'), [13, 8, 10]), relay.reshape(var_15959.astype('int64'), [13, 8, 10]), )
bop_15962 = relay.minimum(var_15944.astype('int16'), relay.reshape(call_15942.astype('int16'), relay.shape_of(var_15944))) # shape=(2304,)
bop_15965 = relay.minimum(var_15944.astype('int16'), relay.reshape(call_15945.astype('int16'), relay.shape_of(var_15944))) # shape=(2304,)
bop_15992 = relay.maximum(call_15958.astype('uint32'), relay.reshape(var_15959.astype('uint32'), relay.shape_of(call_15958))) # shape=(13, 8, 10)
bop_15995 = relay.maximum(call_15960.astype('uint32'), relay.reshape(var_15959.astype('uint32'), relay.shape_of(call_15960))) # shape=(13, 8, 10)
func_3420_call = mod.get_global_var('func_3420')
func_3422_call = mutated_mod.get_global_var('func_3422')
const_15997 = relay.const([7.809961,1.397967,-5.675467,-2.109457,7.296173,4.646081,2.024307,-5.594578,2.854566,5.834838,-2.760113,7.908835,-6.332232,0.243918,-1.429596,3.092277,-3.629569,-2.482891,-6.755186,7.144519,-2.442594,4.328078,-2.679369,1.390196,2.902750,0.589835,-7.611678,-5.074780,-9.781307,-2.878860,2.214173,-1.540052,-5.696214,-7.248398,5.866915,-7.440255,9.174285,-5.722569,-9.279538,9.794988,-7.994620,5.414606,9.254415,6.535882,1.226946,-4.439144,2.822590,-4.591862,-5.607694,4.473976,-7.417231,6.183699,3.013790,-1.250757,-2.251846,7.933147,-0.889940,4.995598,-1.066048,0.367533,7.991610,-9.989196,5.167526,-8.255196,-5.845503,1.527248,-9.957239,-7.046078,-5.586477,6.728006,-4.715373,9.802728,9.584700,-9.827671,0.123003,0.496408,-7.786592,-6.701564,9.635851,1.690884,-6.734157,-3.216806,1.937065,-8.767240,3.838521,-0.039819,-6.338908,0.817454,6.740803,5.336087,8.981984,2.230972,2.894925,4.563995,-4.666329,-2.082732,-8.927823,3.299581,5.598929,1.262140,2.351954,-0.986629,-7.208077,5.914657,0.696663,-8.653662,-8.140391,-7.641528,5.731270,-4.328963,-2.368146,-6.508978,2.275828,6.647467,6.634432,-7.068607,-2.514838,-3.384714,-8.667780,-7.083423,2.484533,-4.268419,-3.360830,2.569612,9.687978,-2.747422], dtype = "float64")#candidate|15997|(126,)|const|float64
call_15996 = relay.TupleGetItem(func_3420_call(relay.reshape(const_15997.astype('float64'), [6, 3, 7])), 0)
call_15998 = relay.TupleGetItem(func_3422_call(relay.reshape(const_15997.astype('float64'), [6, 3, 7])), 0)
func_15727_call = mod.get_global_var('func_15727')
func_15729_call = mutated_mod.get_global_var('func_15729')
call_16003 = relay.TupleGetItem(func_15727_call(), 0)
call_16004 = relay.TupleGetItem(func_15729_call(), 0)
uop_16022 = relay.log2(var_15944.astype('float32')) # shape=(2304,)
output = relay.Tuple([call_15930,var_15943,call_15948,var_15949,const_15950,bop_15954,bop_15962,bop_15992,call_15996,const_15997,call_16003,uop_16022,])
output2 = relay.Tuple([call_15931,var_15943,call_15951,var_15949,const_15950,bop_15957,bop_15965,bop_15995,call_15998,const_15997,call_16004,uop_16022,])
func_16034 = relay.Function([var_15943,var_15944,var_15949,var_15959,], output)
mod['func_16034'] = func_16034
mod = relay.transform.InferType()(mod)
mutated_mod['func_16034'] = func_16034
mutated_mod = relay.transform.InferType()(mutated_mod)
func_16034_call = mutated_mod.get_global_var('func_16034')
var_16036 = relay.var("var_16036", dtype = "float32", shape = (144,))#candidate|16036|(144,)|var|float32
var_16037 = relay.var("var_16037", dtype = "float32", shape = (2304,))#candidate|16037|(2304,)|var|float32
var_16038 = relay.var("var_16038", dtype = "uint16", shape = (648,))#candidate|16038|(648,)|var|uint16
var_16039 = relay.var("var_16039", dtype = "int64", shape = (1040,))#candidate|16039|(1040,)|var|int64
call_16035 = func_16034_call(var_16036,var_16037,var_16038,var_16039,)
output = call_16035
func_16040 = relay.Function([var_16036,var_16037,var_16038,var_16039,], output)
mutated_mod['func_16040'] = func_16040
mutated_mod = relay.transform.InferType()(mutated_mod)
func_15309_call = mod.get_global_var('func_15309')
func_15311_call = mutated_mod.get_global_var('func_15311')
call_16068 = relay.TupleGetItem(func_15309_call(), 0)
call_16069 = relay.TupleGetItem(func_15311_call(), 0)
output = relay.Tuple([call_16068,])
output2 = relay.Tuple([call_16069,])
func_16074 = relay.Function([], output)
mod['func_16074'] = func_16074
mod = relay.transform.InferType()(mod)
mutated_mod['func_16074'] = func_16074
mutated_mod = relay.transform.InferType()(mutated_mod)
func_16074_call = mutated_mod.get_global_var('func_16074')
call_16075 = func_16074_call()
output = call_16075
func_16076 = relay.Function([], output)
mutated_mod['func_16076'] = func_16076
mutated_mod = relay.transform.InferType()(mutated_mod)
func_15144_call = mod.get_global_var('func_15144')
func_15145_call = mutated_mod.get_global_var('func_15145')
call_16124 = func_15144_call()
call_16125 = func_15144_call()
output = call_16124
output2 = call_16125
func_16128 = relay.Function([], output)
mod['func_16128'] = func_16128
mod = relay.transform.InferType()(mod)
output = func_16128()
func_16129 = relay.Function([], output)
mutated_mod['func_16129'] = func_16129
mutated_mod = relay.transform.InferType()(mutated_mod)
func_15418_call = mod.get_global_var('func_15418')
func_15420_call = mutated_mod.get_global_var('func_15420')
call_16153 = relay.TupleGetItem(func_15418_call(), 3)
call_16154 = relay.TupleGetItem(func_15420_call(), 3)
func_13700_call = mod.get_global_var('func_13700')
func_13703_call = mutated_mod.get_global_var('func_13703')
const_16157 = relay.const([[-8.328166,-5.688255,-8.095691,-2.262193,3.315014,6.483969,-1.707770,-2.133383,8.153422,-2.601127,-3.161171,2.095977,9.569861,-5.547801,-1.371387,3.903364]], dtype = "float64")#candidate|16157|(1, 16)|const|float64
call_16156 = relay.TupleGetItem(func_13700_call(relay.reshape(const_16157.astype('float64'), [1, 8, 2])), 0)
call_16158 = relay.TupleGetItem(func_13703_call(relay.reshape(const_16157.astype('float64'), [1, 8, 2])), 0)
func_15583_call = mod.get_global_var('func_15583')
func_15586_call = mutated_mod.get_global_var('func_15586')
const_16171 = relay.const([7.774105,7.187223,-3.559130,-6.296206,6.755141,8.939736,-5.484109,4.562705,-7.438250,-1.866866,-1.536227,-9.297549,4.881861,-4.085496,8.813564,2.420618,-0.548630,1.567561,9.609387,-5.238130,-7.837082,-9.056007,0.180110,-2.369880,5.687668,-0.684456,8.345734,2.452638,0.550525,7.698547,5.230974,-7.576545,-0.060176,8.017249,6.766874,-7.527922,8.158154,-5.681772,-1.452534,-6.455471,0.251459,-6.056943,9.322328,5.779696,3.043728,6.914629,5.476192,-9.464621,5.254486,7.759677,7.324638,-9.068369,-4.580539,-4.261173,-6.806762,-7.685097,2.507934,-6.164506,8.125907,-7.206726,1.158805,5.837021,6.888276,-6.257737,3.253168,7.387579,3.494146,5.931050,-4.677616,-9.540202,4.877330,-5.269763,4.473086,6.417499,9.348275,-4.066253,-8.130423,9.870211,8.403409,-2.152196,-2.713395,-6.716224,-0.372551,4.496755,1.109884,1.859521,7.278386,2.592020,-3.176234,0.514432,-5.502389,-9.730636,2.406138,-9.126270,6.441784,-8.617314,-0.323978,4.670175,-1.957291,1.265219,9.333562,-9.967926,8.472329,1.671008,7.304836,2.862016,-2.966406,-6.912338,5.060216,8.638598,8.053708,-8.064387,-1.904493,-5.249255,5.602036,-7.385835,-8.921722,3.403589,-9.013828,-6.105619,5.704769,-7.906875,5.897622,1.434161,8.215563,-3.568202,-9.195253,1.745057,-0.540404,-2.371247,2.073126,-0.682134,3.404087,2.023649,4.660014,9.978449,2.254894,-6.379961,-6.142097,-7.634878,-9.989857,9.876104,2.210637,5.709089,-2.454020,5.709202,-9.680826,-0.764350,8.741730,-0.681765,5.155571,4.474766,8.538165,5.056970,-9.498918,6.901268,-6.758644,3.018926,7.333480,-3.599237,-7.295878,-0.901572,7.918192,7.392568,-4.817400,4.289904,6.564880,6.834074,2.176412,1.992154,-7.140909,-3.440886,8.856735,-6.307644,6.331312,-3.810422,8.286222,-3.183791,4.991025,3.669120,2.229898,0.775298,-8.718650,7.062372,-4.714467,8.620178,-7.097264,6.676892,3.060302,-7.140893,-8.999454,5.548872,1.184310,4.998524,8.019276,2.596694,8.204946,1.626163,1.160356,6.148253,3.738052,-6.667450,3.913396,1.495782,4.893874,1.379051,2.755290,9.074194,-6.261298,3.475621,-3.237463,5.421584,-7.771418,8.201265,3.793842,9.707501,8.709844,-3.370376,1.032242,0.673221,-5.460843,1.321375,0.388372,-6.009295,0.590772,7.560316,-4.182503,6.492220,-6.375215,-0.079484,-4.179759,-0.096664,2.759381,-7.978541,9.826890,-5.646367,-5.520111,2.334067,-9.714103,2.343807,5.104906,9.407681,9.418292,-5.951659,1.101495,-8.332709,-2.507186,2.811318,5.512826,7.037442,-9.719114,-0.836612,1.179102,-6.472348,-8.793719,5.867078,2.641065,8.164019,4.513675,-3.317942,8.677169,-6.470366,0.098059,7.966753,5.869719,9.185520,-9.203701,-9.395810,8.809349,-3.260993,0.746499,-1.325299,-0.572183,5.512438,5.969084,9.233792,-9.877929,5.974182,3.196978,1.679794,0.469503,-1.802126,-1.090763,8.556262,-8.061820,2.719568,9.645234,-2.229341,-4.300838,7.653782,5.171613,-6.776096,8.140113,5.006958,-6.184119,0.229174,-2.966502,-0.581808,6.885878,-5.536533,9.874157,0.445322,9.260466,-0.844772,2.739177,-9.799581,-0.772237,5.555215,-0.124820,8.366847,9.113119,-8.717362,-6.190853,-2.732687,-6.938472,3.313204,7.301160,-1.525065,-8.787325,-3.922695,-6.610160,-5.875611,6.063549,-1.050806,2.983451,-0.786362,1.528532,-1.206831,9.073248,9.294697,3.304852,5.036267,2.634601,-8.814510,4.500261,4.733686,5.039714,-7.518453,5.031303,-1.011011,-2.795560,9.373537,9.140624,-6.203364,0.964336,-3.094892,-1.117432,6.060226,2.738377,-0.365054,-4.332336,-0.796908,2.764666,-5.790824,-6.164322,7.396660,8.838600,-2.122528,-8.153506,-1.934583,-3.294810,6.378870,-0.726310,-9.045819,-9.440894,-0.452226,-4.591654,-5.935540,-4.675959,1.027489,1.563810,6.167035,6.061023,2.359616,-8.220303,7.887743,-8.036807,-4.143496,4.440446,-8.850763,4.270870,-9.909139,0.535761,6.863712,5.880379,-9.443563,-8.001335,-8.209009,0.874281,7.753135,2.308847,-2.528804,1.950207,-2.653429,1.435563,-8.804813,-0.979768,7.771494,0.522415,0.116399,7.596662,3.473969,6.372645,7.922046,1.281118,9.307792,-7.905498,-1.664483,-4.131775,-8.162894,8.966215,-0.704371,-0.731864,-3.540997,-0.040981,-0.708584,3.646448,6.124730,0.095593,-2.222036,-1.953679,1.980611,7.941867,-0.235109,0.193833,-8.178147,-4.576313,-0.220587,-6.484779,-6.985013,-3.375926,-4.660448,3.182075,-5.983159,-0.450182,2.750394,-0.348244,5.862643,4.452597,8.008907,1.138324,2.267688,-2.422068,-2.694052,-8.009808,-7.824518,8.316630,9.435545,-8.448063,-8.218594,-7.935179,6.297823,-7.779704,-7.498971,9.167637,-1.662620,7.681164,-2.456429,8.937700,-1.864309,7.382859,-9.767479,0.895318,0.847668,-9.208824,8.712866,-6.036636,2.180297,7.881574,-1.558173,-0.433167,6.113373,-5.429835,4.025076,-6.699014,-3.189766,-0.216223,5.241758,-2.068968,-1.707477,-0.983814,6.731577,-3.322270,9.588774,-7.009372,-4.536763,7.558773,5.570226,4.251374,2.246818,-5.679539,-0.102195,6.256761,5.681180,-0.561888,-9.093296,8.189633,8.970233,-6.691090,0.560642,-4.264431,1.120464,-1.279062,-8.743403,-9.654469,7.192058,3.874308,3.202112,5.785417,-3.866748,-0.999100,-0.546051,-7.495377,-6.626432,6.383581,2.295074,2.118099,2.785839,5.546232,-6.724642,4.029740,7.339268,4.371993,8.332586,2.079231,-0.012594,-1.338618,6.423727,6.442407,-8.378402,7.933799,-3.330166,-1.186829,-1.293746,5.164400,4.486253,0.667524,1.276135,-1.300617,9.088688,-3.775781,5.905829,1.557923,2.093823,-1.294934,9.609357,-8.722399,4.886296,4.412417,-9.450776,-8.303284,0.011197,-1.715869,-6.663627,-1.845779,-1.762095,2.537910,1.057375,-6.017313,0.325556,-4.949814,0.821266,0.149564,-4.546974,-2.167453,1.738870,-0.021364,-2.087330,-6.386948,4.312399,4.839356,5.932865,-7.875762,3.645249,-0.632410,5.167924,4.853079,1.564156,7.075280,3.271144,-1.122725,-7.533066,2.905509,-3.045946,5.907267,-7.588399,0.539031,-6.836034,9.308057,5.351923,-9.003277,-3.602073,8.904254,-8.391459,5.570552,-8.887179,1.336561,5.889890,-8.966028,-9.962951,8.555569,-6.442924,-7.568603,-0.547849,-2.399366,6.181190,1.245868,-6.334454,6.002103,4.576318,-1.540611,8.778793,1.985915,-6.500804,-9.851687,5.623813], dtype = "float64")#candidate|16171|(616,)|const|float64
call_16170 = relay.TupleGetItem(func_15583_call(relay.reshape(const_16171.astype('float64'), [616,])), 0)
call_16172 = relay.TupleGetItem(func_15586_call(relay.reshape(const_16171.astype('float64'), [616,])), 0)
output = relay.Tuple([call_16153,call_16156,const_16157,call_16170,const_16171,])
output2 = relay.Tuple([call_16154,call_16158,const_16157,call_16172,const_16171,])
func_16180 = relay.Function([], output)
mod['func_16180'] = func_16180
mod = relay.transform.InferType()(mod)
mutated_mod['func_16180'] = func_16180
mutated_mod = relay.transform.InferType()(mutated_mod)
func_16180_call = mutated_mod.get_global_var('func_16180')
call_16181 = func_16180_call()
output = call_16181
func_16182 = relay.Function([], output)
mutated_mod['func_16182'] = func_16182
mutated_mod = relay.transform.InferType()(mutated_mod)
func_15727_call = mod.get_global_var('func_15727')
func_15729_call = mutated_mod.get_global_var('func_15729')
call_16225 = relay.TupleGetItem(func_15727_call(), 0)
call_16226 = relay.TupleGetItem(func_15729_call(), 0)
func_13391_call = mod.get_global_var('func_13391')
func_13394_call = mutated_mod.get_global_var('func_13394')
const_16237 = relay.const([-9.204510,8.395844,-4.831182,6.399111,6.546428,-7.174435,-7.400188,-9.579554,0.050828,-4.429268,4.768490,0.421879,-0.621581,0.965015,-0.162141,4.165226,7.870553,3.865387,1.770606,3.026363,-0.627514,6.156739,-0.284609,6.178513,-1.919153,9.305645,-4.687032,8.637055,-1.411894,-1.078176,-4.909876,7.815341,-5.472898,1.108013,5.902901,9.270944,-3.864908,8.633601,-3.292147,4.737127,-0.269924,0.429469,9.356389,3.801751,8.122707,-1.100171,8.897747,7.272487,8.268127,2.548341,6.457410,-7.688369,-3.334632,-4.327338,5.738397,5.642847,6.356008,-7.584734,-1.514305,-9.969453,-6.872859,7.605580,-2.829915,1.094570,4.100213,8.208420,5.560554,-8.739853,5.329245,1.542374,-2.151610,-1.597279,8.580470,-4.834016,0.444982,9.063625,-7.234357,3.431732,0.909631,-4.874232,-8.144482,3.648388,2.647188,7.198560,-2.429935,2.690283,3.248881,-1.351554,4.028720,-4.410145,2.093638,-6.099970,-5.825592,0.935473,-4.775260,-5.261874,1.054686,8.912777,-9.150294,0.046296,3.870236,7.988281,-4.758879,0.367620,3.168043,-7.460063,0.508643,-4.660751,3.772128,6.208557,0.367439,-5.256378,1.152211,0.090883,-1.816783,-6.178873,-0.196903,-7.062911,-9.276447,-3.002798,-2.054344,-5.755880,5.390274,7.059208,-8.244082,-9.649567,2.396179,-8.172403,-5.507150,-9.518273,-1.759873,-3.411845,-4.178877,-6.467445,-2.330155,-1.714073,5.383633,-1.200377,7.404197,3.206650,-0.662094,0.785883,-4.100822,-8.824480,-7.699274,9.341525,-1.050617,1.514883,5.407694,7.589460,-7.176289,-1.850892,-0.724547,-1.576853,-0.262562,-4.086744,7.583416,-1.011322,1.535403,6.035214,8.158745,7.226565,-3.533495,0.057605,-8.227812,-3.941121,-1.867006,-6.805788,1.716817,4.493505,3.931350,0.273525,1.857454,-2.397704,-7.290225,-6.575529,7.759733,1.650665,-0.334463,0.831873,0.210853,3.626258,-9.633980,6.422002,-3.033009,8.758235,-8.754641,6.601866,3.711844,-1.649579,3.235152,1.135471,-5.545619,-0.017094,7.222912,1.317123,7.298810,5.921760,4.597170,-0.510850,6.888726,2.429991,-7.090114,7.290449,-2.070655,7.970157,4.870377,-9.060521,-1.423401,-5.402251,-6.118683,-4.649093,7.511971,0.778898,-6.500013,-3.763257,-7.597831,6.431588,-3.368512,-3.079339,2.436021,-0.451839,-9.869337,-3.365746,-8.146592,9.744074,9.887789,-7.752801,8.456881,8.136387,7.501739,1.129185,4.892859,-3.007223,0.918026,-7.737875,0.839902,9.259436,-2.326606,-2.253519,9.718957,9.834322,8.453009,5.272373,-1.642565,7.069952,-3.649046,4.627657,9.040980,-0.287096,-2.166346,1.793785,8.052992,4.594448,5.811773,-3.114180,2.492831,3.524082,-3.578673,8.119609,8.525789,-6.722552,1.599798,5.929818,-6.451992,-6.404112,-8.452668,-6.335399,-3.102536,3.389974,1.086724,-9.451437,-0.338406,3.806300,-9.049475,2.597588,8.957241,-7.092928,4.913336,-6.376368,2.530665,-8.574017,-5.259099,1.351927,-9.558363,-2.457274,6.358281,8.824646,-2.674901,-3.160891,5.963554,-4.163709,5.406579,-4.104002,-4.549815,-9.212502,2.111177,-7.809231,4.326443,-1.896026,-8.783234,6.640369,-3.594221,8.276941,-0.860955,1.146023,8.913281,-2.746757,-2.333195,1.937422,9.464553,-7.059729,-4.920159,9.660967,2.623789,-9.631031,-7.956802,6.706696,-7.854488,-5.780716,-0.327494,-2.479887,5.302816,-9.344893,8.830719,6.219690,-9.656834,3.233295,-4.725732,-3.835374,3.542838,1.567352,9.131419,-0.082208,-0.760928,-1.173494,-9.955624,-4.872856,0.864737,-0.083997,3.183874,-5.661432,5.444709,-6.212224,-2.439540,5.160328,3.552837,5.142040,8.965078,-6.954466,-0.683792,-3.030933,-3.294590,0.618270,-5.784046,-4.543454,0.034180,1.233230,1.869952,-2.609281,-2.554516,8.078127,-6.750089,-6.061163,-6.012819,6.478188,9.933657,1.285616,3.612735,-8.897750,-1.636784,7.604941,6.001430,7.150476,-3.541165,-3.959952,7.685829,9.532305,-5.838609,-7.588212,-6.726523,-3.388246,6.106065,5.814244,-0.354841,-1.720517,7.088444,-0.043751,-0.037436,1.739595,2.355694,-7.141860,6.115062,-2.675712,9.777188,-3.117079,3.971247,-0.221857,-5.117194,8.186755,3.010854,-3.337202,8.577886,0.021872,-4.230864,-8.875773,-9.100319,-2.767214,-6.462539,3.851233,4.408748,-0.735634,-4.188101,-6.904872,-6.896383,6.106132,4.553537,-5.827911,-5.033548,3.490656,-2.872484,-4.696859,-3.167451,-7.045901,-8.709223,-1.071081,0.983676,-7.477373,1.165643,3.038782,-2.434910,9.783232,-2.851512,-9.683176,8.601961,2.409572,9.561042,-1.882021,-0.792554,4.143990,6.114889,9.637808,-2.143014,-3.744247,-9.778119,3.097272,5.268987,-4.979441,6.145133,-5.895089,-8.461780,-0.600717,-7.383263,5.770502,-1.578193,3.582820,4.637675,-8.008602,-0.424039,9.008419,-3.539279,4.727904,-0.495798,8.771161,-9.839298,-2.077164,6.233295,-3.348100,-9.194227,3.589815,-1.242247,-6.210743,0.828609,2.703854,5.496127,-4.863922,-2.393933,6.013344,4.147060,-4.276464,1.488268,1.759960,9.769970,-7.233407,7.250890,-8.830080,-0.039245,4.352698,-5.117570,4.977151,-5.209897,2.153314,1.443361,1.521646,-0.026415,-9.391473,-7.004577,-5.316929,2.149690,0.994771,-1.489362,2.148699,-4.386697,-0.062279,5.885286,8.058071,8.386907,-8.804816,5.258504,-8.669473,7.337975,4.047864,-2.731107,-5.890475,-0.900081,-4.385089,5.644496,7.378388,7.404932,-3.668384,0.300389,-3.543416,1.459702,8.788174,-4.330211,-9.038138,-3.661815,2.584200,2.209008,4.378064,-1.999530,5.283586,2.092850,4.361585,-6.915574,2.985442,9.167842,4.406303,9.156395,-5.169552,-6.468602,6.616750,-2.685583,4.510317,-9.852074,-5.810438,-3.395342,1.681303,-9.817055,-5.432551,-8.098162,3.807378,6.419314,-0.216031,2.427738,-3.968878,3.391072,7.518667,2.990315,-2.804300,7.006764,-7.305268,-7.877052,9.775037,-0.974228,1.947630,2.846392,6.143069,6.186129,3.122934,-8.501053,-2.551738,-7.089528,4.024060,-2.522634,9.607700,-5.716541,-3.428695,9.375096,-7.183305,2.221471,9.713085,-4.203634,-2.468454,-1.448168,-4.745638,5.156726,2.891606,-7.258317,5.838457,-8.046742,-8.238057,-0.643717,2.959713,-5.985248,-7.694499,2.960051,6.901936,-4.475534,-1.296562,8.650242,1.642296,5.774399,-5.141383,6.352523,5.553568,6.159033,3.202616,-7.040648,0.070212,-0.861913,-2.852320,1.806405,2.868527,6.694368,5.657182,-3.700363,-2.249692,1.212956,-6.575193,-4.195539,-4.592501,2.991519,-9.589006,-6.014850,6.978035,6.251107,-1.811367,7.682488,-2.407761,0.355100,4.051404,-4.107695,-3.638451,0.188281,-4.486510,-1.600608,2.783773,-2.515371,8.679203,2.547464,5.102519,-3.188646,-2.400428,5.064298,0.265829,-3.134994,3.775002,-7.671991,-5.551374,-8.996672,0.692483,2.192776,-3.417441,-2.476487,-1.700531,-9.817767,-4.809067,8.430792,-2.372341,7.463645,-0.744596,7.920477,-1.914960,3.949038,4.534975,-1.207871,-0.692290,3.850647,5.445856,-1.355749,4.292223,-5.367343,2.439006,-2.921616,-8.419528,6.332658,9.047359,-2.830978,-6.763913,-1.065950,8.884153,3.016165,-6.142483,2.227484,-0.829428,5.855564,-9.263097,-5.789111,-0.093646,-4.616846,-6.699394,8.652956,-5.871042,-6.514032,0.325873,-7.975769,6.396956,-6.862902,-9.577814,8.799974,1.374232,-4.392586,-2.931528,0.393120,-3.747874,-1.824081,-9.607083,-4.056260,9.795499,5.340765,-1.596598,-5.869784,8.209749,9.012338,-0.509412,3.733816,-8.396804,1.090102,-1.131240,8.475720,-4.291874,5.854402,9.530449,3.930631,-9.219468,5.469369,-8.931582,-0.014840,-9.971791,2.660843,6.742287,-9.903294,1.636914,-5.328164,-4.584677,-4.933326,0.936038,4.460398,9.719226,-6.822004,-6.565406,-4.469016,1.676247,-8.311426,3.546336,-0.655867,-8.278941,-1.989156,-3.030745,5.587263,-5.286879,-9.018389,-9.377989,-0.637585,-3.779460,4.927454,-9.132365,-0.722211,8.382892,0.160073,-1.572952,8.524204,-3.165424,-6.971319,-8.599167,8.750940,7.184598,3.130280,-1.091712,-1.393558,-3.306427,7.196238,0.222658,-7.860356,-9.630901,1.786751,2.359117,-2.847149,-5.261629,-2.580859,-2.802709,2.918189,9.864034,6.158269,-4.456754,3.314268,-1.776844,5.382763,-4.688776,-9.575220,8.386496,7.175062,-4.284922,-9.536901,8.614979,0.469932,3.962979,9.184274,4.419521,-4.410888,-4.059143,-0.086029,-4.998631,0.344181,8.126367,5.245042,7.609821,9.294915,-0.058117,5.280609,4.759660,-7.503202,3.866579,9.307023,-0.490459,2.324265,0.139584,0.424805,4.849047,-5.798456,-0.411406,-1.375143,2.941483,3.147386,0.858180,6.093334,-0.322703,9.206985,7.622418,-2.166376,-8.914822,2.115501,-0.526994,2.543445,9.045751,-9.059682,-4.610286,6.726856,1.256265,5.515750,2.776269,3.658406,-8.014290,-7.823636,2.565274,-0.979319,-0.752893,-0.447302,-7.151957,-4.173089,9.889950,-2.110622,4.485784,0.796766,-8.382613,-2.172107,4.480626,3.132195,-1.925241,-5.447236,0.468678,-5.593867,-9.244673,-2.651885,-2.242439,-2.082925,8.997712,4.126283,-6.026537,9.702979,-0.023486,7.621493,9.933765,1.276911,-3.820969,-9.596831,-3.528038,5.168777,2.621731,-1.457384,-9.377687,3.860836,9.129279,2.611305,-9.001256,-8.101827,-7.093474,-3.766657,2.523426,8.551848,7.299161,9.306803,-7.359141,-6.148654,-4.073277,-9.190208,6.260175,-0.510339,-8.610509,4.650495,2.088803,6.996834,5.859908,9.963650,-1.874587,-5.681782,-0.338880,8.903506,-8.324784,-5.784220,-7.023121,8.410538,6.874271,-6.313968,8.925820,-7.339237,-6.734501,-0.852721,5.707464,-1.516136,3.543492,-7.767173,-0.816795,-1.910362,8.381200,1.500659,0.623223,-8.004959,-7.668045,7.886712,-9.619078,-2.800145,8.042605,-9.528760,8.314752,-3.476532,3.046770,-2.035635,1.784717,-9.298166,-7.993134,-9.630428,-3.706923,-0.903097,-7.510916,8.053212,8.165095,9.629848,-6.662497,8.233398,-1.477067,-1.916595,-6.486021,3.845742,-4.349923,5.797869,3.882338,-2.940556,-2.247375,-2.860830,-3.044281,2.339066,-3.031151,9.565029,-4.081128,-6.413832,-9.927635,-4.416002,6.785984,-4.179815,5.787008,-7.006758,-7.747089,-9.945373,1.050407,6.969319,-7.412392,0.634422,5.954305,-2.910905,-7.359823,-8.029843,5.441588,7.974582,-1.395168,-6.379411,6.036275,-2.779021,-9.486305,-9.410819,0.228276,3.574129,-4.259538,-3.662717,8.704280,6.819161,3.923072,8.328665,-5.820244,-8.742953,-5.487603,-3.714710,9.129778,3.829357,-6.625999,-4.366700,5.956626,0.065134,-5.321713,0.050086,-7.032323,0.791138,-6.266147,5.983028,-0.429880,0.025627,-3.706112,-3.675428,-1.689284,5.369769,-4.912434,1.591228,-4.409923,3.029674,-5.478435,-2.646306,-1.760476,9.698532,-2.870926,1.543301,-6.036704,-2.529625,6.180859,-4.301411,-7.973496,-5.721792,8.768502,5.654038,-2.907124,9.793361,4.897879,-5.924553,1.841867,4.673132,-6.968735,-8.751403,0.831257,8.728694,-9.225390,1.379806,-3.819915,2.941908,2.981545,9.319974,2.446448,-3.153976,-8.339736,-6.097212,-0.604063,-0.858320,8.324768,4.989366,0.393668,2.130019,3.039471,-0.947666,-7.607397,7.294820,-7.854772,2.436432,6.543554,7.603531,-2.132163,-6.006136,9.555540,8.142956,9.013087,5.058477,-9.195245,-1.190788,2.419915,2.402048,-2.216824,0.760027,4.586635,6.300231,8.897835,-5.051038,-1.636377,-7.275784,5.632337,-0.106146,9.778470,3.079270,-7.536524,7.590099,7.143108,8.040723,6.549570,-7.440541,-9.314294,-4.546156,-1.596118,0.734610,6.591924,-3.827343,-2.491358,7.033830,5.026358,7.908232,9.757407,9.991629,1.857990,-7.468826,-9.180232,4.474449,-7.990627,-3.909137,-5.244877,-4.751662,9.655452,9.445711,2.236202,4.581479,4.936737,5.015687,2.664666,3.805215,6.906777,-0.902085,5.442820,-4.403133,1.317262,-1.763986,7.643758,9.304952,-8.985759,-0.291411,5.292323,-2.854176,-5.936818,4.980536,-8.691657,-1.023353,4.930082,2.608392,-9.421420,-4.193537,-0.771283,5.127793,8.339971,8.450008,8.231103,-0.186906,7.635708,-0.959497,-9.761863,-0.212875,-3.544494,-0.832600,8.162686,-9.210087,-0.181671,8.775689,-0.449300,-5.841663,5.601630,4.099233,2.329425,5.336926,-7.648206,-2.265153,-5.502897,8.266117,4.313385,-9.405087,-4.202636,-1.242317,6.526109,9.419649,-7.471096,-1.228120,6.727996,1.455742,7.865015,-0.947716,-7.569118,-6.916801,5.727193,4.880236,9.700681,9.775020,2.709928,-8.834394,7.815939,-7.175534,8.154059,4.228047,-7.310617,9.407255,8.264185,1.367711,-1.488972,-4.408300,1.634576,-2.328339,6.999021,-7.669698,4.626243,-7.370893,0.049960,4.433795,0.830938,3.928369,6.556088,9.793563,-8.837532,-9.690400,-0.596655,-2.783866,-6.019212,-5.432213,-0.831770,-7.604664,-7.485985,-8.776178,3.468566,-5.595000,-7.177463,-2.846575,7.442606,4.095305,-0.427170,-7.631152,-1.966952,2.111384,-4.103580,7.689282,-1.576394,-6.502644,-7.748828,-3.083936,-5.144910,-1.578530,2.211983,-0.819611,-2.049447,-8.062122,7.499869,9.996582,-3.728419,9.116731,-9.587633,3.059087,-4.069809,6.085087,4.384080,8.761635,2.106426,-7.600989,-3.047764,4.232155,-9.051696,-8.455314,-1.004617,-8.973710,-0.773059,9.768846,-6.526276,7.264034,2.841129,3.437015,0.803547,-7.124438,-4.746624,6.957676,-1.215971,5.001425,-7.924557,-0.757928,4.242068,9.416334,-4.444448,-6.242172,-4.099786,-3.768045,8.935915,-9.344311,-9.257565,8.549279,2.201274,7.937169,2.235013,0.578805,-0.985139,-5.139596,-6.253116,1.649490,8.305060,4.324442,-4.159327,3.410693,2.175634,-7.725630,-6.344788,-4.245034,-9.210668,0.636442,-7.292089,4.011995,0.082643,-9.976663,-7.276899,-0.809605,4.813590,2.361536,2.184906,5.682706,-3.646061,-8.565351,0.735062,-1.587784,0.713168,4.906091,-8.728780,-7.924119,5.954012,1.359576,0.325962,7.210348,0.821261,-0.225741,3.067321,6.494934,7.124898,-0.430342,-3.119770,-5.944645,2.427967,1.202472,-5.304356,1.322576,-0.632251,0.818963,-0.531618,5.550993,7.550771,7.840881,8.636855,-0.927652,-6.123366,-5.382761,-7.342632,-8.767713,-5.530046,8.681931,-5.450723,-1.601826,-5.264187,-6.704165,-4.235994,-4.627823,7.028745,-7.119139,3.694645,1.652623,-6.517186,-5.387751,-9.665381,-1.568786,2.652744,5.904378,-1.586058,-8.131184,-3.056497,8.517257,-0.119771,-0.943104,6.591452,4.339571,-1.017310,4.942323,-8.928185,9.971145,-9.130359,9.988199,5.146566,5.328260,7.207031,-1.774510,-6.272741,-3.653188,-9.718347,-5.817650,-3.715736,-5.713274,-3.328214,1.588852,2.916875,1.431213,-9.118954,0.347694,-5.213874,0.631734,5.728465,1.096433,0.582086,-3.946285,-8.614304,-4.757255,-6.201499,7.321426,-5.423468,4.284986,8.448750,9.406528,-9.158220,-2.886720,-9.860522,-3.327985,2.704722,3.541439,0.165893,-9.118627,2.782916,-8.048877,1.139344,-9.978191,-4.191930,-5.747388,0.729192,4.441317,-6.427269,-6.149746,2.022614,-3.338471,-7.316424,-0.354723,-7.695212,3.382270,8.832304,8.743657,-9.151886,-3.869834,-3.840779,-0.870385,-2.805912,9.528943,8.158063,4.356212,-0.575407,-0.471259,-6.867343,-7.692755,7.843301,-1.207620,-9.051839,-9.341087,0.323795,6.742758,9.871955,2.568352,-7.420184,-3.589730,-3.668719,-9.381009,-6.379840,2.611090,5.220698,0.131925,-1.993820,4.566027,4.915016,1.492686,-3.143840,-2.967314,-5.246911,-5.805039,-4.110114,9.914551,-3.392748,9.534149,-4.800863,2.287182,7.901110,-3.948692,-7.547623,-9.666292,7.663725,6.690129,-5.275642,2.353614,3.740480,0.122332,6.803332,5.780379,7.638752,-1.847632,9.767913,6.108242,-4.548302,-2.853242,-4.699620,-1.991371,-9.095064,1.603032,-3.682925,-1.325261,-4.371083,8.761326,-2.291054,-1.814657,-8.701771,3.600694,-9.044979,-1.298456,-1.865736,-8.348805,6.334580,9.191562,-2.884118,-2.204726,5.654608,-7.511787,1.473113,8.709952,-4.588967,7.412425,-2.839610,5.482452,6.091008,6.671346,-2.810146,-8.561220,3.223721,-1.720232,6.188231,-1.898341,7.866975,-4.556470,-8.971181,-0.483439,2.734539,9.370781,-0.969652,7.537928,-1.111768,5.159708,-6.300496,-1.975530,0.869075,4.625815,-8.228958,-3.865681,-3.327067,-9.551659,-7.217026,-1.392934,-7.333078,-1.732732,-2.527230,-9.373977,-9.772204,5.489950,-5.779634,-6.593898,-3.250186,-4.745533,9.474362,-9.934358,2.427407,3.120834,5.967088,-0.562038,5.542647,-1.322447,-4.655269,1.199364,1.897790,0.161076,-0.113135,5.289311,1.385018,0.375408,-0.866678,-9.990770,-0.406141,-8.490603,0.858421,8.133036,3.023659,-8.677347,5.010174,-5.488766,7.365298,-3.979972,-9.951424,-7.804879,8.308660,-2.709415,-8.166621,1.975671,-5.303661,-4.363777,-1.883213,4.475289,-9.770604,3.380004,6.841592,-1.398694,7.058950,-8.364655,-3.853022,1.120522,3.193461,-4.473418,2.207419,-8.178693,8.326703,0.621855,7.798826,6.287415,2.444675,3.881887,-0.377818,9.982449,-0.708388,3.001429,-1.767852,-4.195030,6.349093,9.928172,-4.845054,-0.079996,1.418442,-7.143291,-6.062824,-6.229603,-5.895801,-8.131440,6.588590,9.575665,-1.051545,-8.230491,4.426476,-4.768820,9.910227,1.715550,2.364630,0.005285,-4.078628,3.801922,6.001980,-7.841449,3.866189,1.016713,-4.921175,-3.969651,8.042149,8.230408,8.714921,2.254638,-0.220882,6.844803,5.598952,-2.875784,-7.492023,-7.213789,3.721269,6.950676,-8.747811,3.895860,2.831099,4.576280,-6.950227,-5.197365,-7.496173,0.267124,-7.852449,-1.369552,6.740033,2.293186,9.361475,-8.143324,-4.915765,6.212148,-0.220650,8.219740,9.356765,-8.740123,-4.660934,9.227154,0.500950,7.131602,5.662719,1.331524,-5.489905,-4.447440,-4.909425,-6.489389,3.885242,8.231924,-9.373201,4.514732,9.505245,4.033979,-7.524588,-1.523490,2.275410,-9.045897,-2.693945,-0.144277,-0.913789,-2.951529,7.988420,-3.095569,-1.178258,-2.713443,-3.140853,-7.634656,9.821597,6.039862,7.762444,8.328387,9.777092,4.102752,6.874532,-4.845637,5.868728,8.766940,7.853101,5.869852,9.362051,-3.560745,1.748728,-1.337744,6.952987,3.768319,4.358478,7.356342,-4.589892,-8.745812,-4.873853,1.223948,4.866522,-3.974410,-3.431639,1.258745,4.527729,-1.214989,-4.004119,-5.976197,-3.100716,-2.269773,-2.595542,7.670230,2.339981,0.901652,-1.373486,3.325843,1.156001,9.585692,5.037713,5.274877,-4.128861,3.402995,-9.940817,-9.338048,0.189684,3.587823,3.117409,-7.017524,-8.007256,-4.072461,0.842386,9.587113,-1.800591,-6.995893,4.210608,-6.945828,8.217412,-0.521302,4.504610,7.081556,-0.417737,7.801970,7.379686,-4.095577,0.182944,-6.217112,-6.850926,0.136465,-4.050072,-4.647784,6.836006,-3.800433,-7.794291,9.396663,0.226304,1.388803,0.174208,5.728803,-5.555551,-3.620577,0.703114,-3.637425,-3.932431,-5.535189,-2.136877,-0.682302,7.576287,-4.456096,-0.648295,-3.685599,-2.710684,6.232815,-0.097965,-9.964516,-6.958126,-6.832532,-8.400235,5.734692,-3.725986,9.063625,-6.350930,-8.648239,-8.333933,4.619003,-1.735307,6.601406,3.238531,-6.018780,4.199373,6.661066,-1.936754,8.567298,-6.996517,2.780235,-9.131826,2.093619,9.843151,1.689712,8.652303,-6.256189,-6.658238,-5.922524,-5.851459,9.751693,-1.922363,8.048621,-2.712006,0.464718,1.534400,0.235930,9.233878,-8.508406,-6.290537,5.460000,-1.912057,-6.307608,9.950566,1.412742,5.376410,9.282305,4.514512,-8.884188,-6.761558,-8.477987,6.534994,7.712497,0.186090,8.584687,2.664534,5.206023,-2.931458,-7.757892,-0.739651,4.124032,-7.274719,7.310770,5.185922,6.641742,6.981462,8.473928,4.137013,-8.380403,-1.844452,7.105438,-0.403258,3.192873,-5.238642,-4.663121,7.539005,-0.741079,-9.061912,5.053512,-7.992824,5.214754,0.868273,-3.851640,-7.969777,0.673807,-5.351025,-8.745929,9.782504,8.914110,-5.622549,-2.168160,9.194942,0.604048,9.375982,6.299915,-3.038360,5.444004,0.535002,-0.532705,-8.515481,-2.729900,-3.220586,6.071378,-7.213739,5.919611,-2.553927,8.801238,5.404188,-7.799335,2.291666,-7.584423,-6.576961,5.963503,7.300894,5.545590,2.121379,-9.238736,9.930867,5.696964,-6.629250,-8.533807,0.804784,-4.155527,-5.690125,6.454098,-8.506931,0.731208,0.475089,-9.940135,3.317379,7.747261,5.514409,-1.428586,3.777719,-0.103796,9.001595,4.319091,-2.655586,6.816933,-1.651439,4.632734,-8.075577,8.332363,6.838874,-1.686858,-4.317516,-9.403004,6.211208,-0.811993,-9.184787,-2.026136,3.054899,-3.043606,2.580638,-5.002460,-2.369331,-9.434342,0.187024,4.092342,6.507338,8.823075,2.804614,3.622812,-2.039880,0.179470,-8.366736,-7.548944,5.769121,-4.487011,-3.610923,-9.395309,-3.760520,8.132489,1.415079,-7.352617,-4.965051,-7.895908,9.302776,-8.199757,8.530485,6.760621,1.081139,4.751496,-7.233049,5.774977,-9.356102,-0.349734,-3.589310,-4.281692,-3.575132,-1.811056,-5.231886,-0.255111,-4.690529,-1.756417,-0.995163,-7.949168,9.733656,7.885034,9.251078,7.083038,-3.069327,-6.208483,7.709939,-6.954135,6.012943,8.492039,7.064574,-9.376783,-2.824866,0.603270,-7.795987,2.614292,0.219401,9.102802,8.480638,7.766492,-0.450614,7.223396,-2.041750,4.238985,-5.281256,-7.730733,-9.645667,-9.961994,4.009667,-9.824029,4.150432,2.781249,-1.339446,2.188473,9.241557,3.068440,-1.466175,-1.557205,2.168109,-5.670841,-5.816627,9.976968,5.706672,0.431331,-5.222225,-0.695896,1.864966,-3.527917,8.412445,-1.237015,-2.632833,-8.339255,-4.745870,-8.646359,6.062232,8.590212,8.293403,-9.726448,-3.607512,2.242217,0.888144,-7.777133,2.368417,-7.474127,-1.068911,-9.000313,3.465930,5.796985,1.247823,4.559591,2.048383,-1.292566,0.184354,0.198928,-2.771977,-8.815722,5.610226,5.323970,-2.826223,5.666132,-8.680657,1.148280,-4.019706,7.362400,-8.419514], dtype = "float64")#candidate|16237|(2100,)|const|float64
call_16236 = relay.TupleGetItem(func_13391_call(relay.reshape(const_16237.astype('float64'), [14, 10, 15])), 2)
call_16238 = relay.TupleGetItem(func_13394_call(relay.reshape(const_16237.astype('float64'), [14, 10, 15])), 2)
uop_16239 = relay.erf(call_16236.astype('float64')) # shape=(1092, 1)
uop_16241 = relay.erf(call_16238.astype('float64')) # shape=(1092, 1)
uop_16253 = relay.acos(uop_16239.astype('float64')) # shape=(1092, 1)
uop_16255 = relay.acos(uop_16241.astype('float64')) # shape=(1092, 1)
bop_16259 = relay.not_equal(uop_16239.astype('bool'), relay.reshape(uop_16253.astype('bool'), relay.shape_of(uop_16239))) # shape=(1092, 1)
bop_16262 = relay.not_equal(uop_16241.astype('bool'), relay.reshape(uop_16255.astype('bool'), relay.shape_of(uop_16241))) # shape=(1092, 1)
func_5858_call = mod.get_global_var('func_5858')
func_5861_call = mutated_mod.get_global_var('func_5861')
const_16265 = relay.const([6.574739,0.438632,-1.868090,9.410615,5.294811,-3.174314,9.474933,-6.996444,-1.763804,9.396185,4.575773,-5.726887,-8.134701,-3.854467,1.135780,2.703152,1.213552,0.466283,-2.633681,-3.551161,7.592182,6.666677,4.871840,-0.334694,-1.651704,-1.688541,-6.096402,-3.453990,-8.499857,-7.125663,-4.318816,-6.736768,-1.451520,6.022069,-7.213998,-1.077373,-3.435725,5.949990,3.304996,1.557029,4.543989,8.836110,-9.562887,3.230024,-5.912610,-7.401546,7.044425,-9.554430,2.568959,-2.919940,8.747384,9.077043,-2.134690,7.656947,-9.489252,7.513565,-8.581652,4.399232,-2.932935,5.734342,-4.207435,1.125948,-7.521115,9.818802,7.339753,-3.127213,1.043956,-6.158328,-5.279085,4.115380,-9.702757,-7.109039,-6.373073,4.033623,-9.717604,6.833060,1.938512,-2.150259,1.805411,5.224608,1.870779,3.305340,5.206878,-5.845887,-9.902320,6.379735,2.946487,6.933891,8.191507,-5.753198,-3.668175,6.867675,3.309980,6.548216,7.994556,0.449467,-1.083090,2.009638,3.968378,3.534584,-2.289037,-0.661599,6.909641,4.520245,3.219434,-9.102762,4.697203,7.480176,-2.290862,5.573816,2.502602,-9.984609,-9.693692,1.473881,-7.237287,9.206487,4.616240,-8.918215,3.994321,-2.682141,5.608607,-9.739617,-9.254475,7.112160,9.800165,-7.542877,-1.475126,-3.916720,9.147533,-4.979390,4.632605,-1.640869,4.180836,0.577895,-5.226054,5.191711,-9.251367,-6.339713,1.509941,9.205824,6.110285,2.606752,2.655386,-3.422748,-0.182787,-5.276776,-8.531021,-6.114340,2.545385,-5.128576,6.854183,7.582823,-1.741172,-8.314866,-0.966090,-4.424719,-2.664641,2.388219,4.864492,-8.785114,-4.049409,6.121053,8.112729,-2.894274,3.858951,-1.376487,0.815967,2.352185,2.408383,6.267334,9.507520,5.872543,-3.280370,6.315261,-0.253219,6.193967,-5.823546,9.194461,-8.776015,-4.949952,6.582888,7.230809,8.663245,-3.092415,-8.106922,-5.579331,0.081212,7.946492,-8.687707,4.741161,-2.865828,5.715401,-2.431699,-9.880526,-6.188009,-0.532679,1.562873,-5.075817,-9.615529,-2.043729,4.601553,8.997126,-8.983210,-2.374193,4.960883,-8.857566,-0.141684,5.215758,-9.767037,1.875721,-8.224080,-2.245942,9.579535,-7.993673,0.634288,6.612182,9.208521,8.574963,7.981096,-9.344442,-8.597444,7.203171,-5.255937,5.941279,-5.438828,-4.996010,-8.378642,7.773770,9.562474,-1.648039,-3.034443,6.884287,-7.380806,9.775409,-4.726837,-6.172043,-7.989686,1.825533,-7.194073,-9.017378,-5.859121,-6.833635,2.915784,-6.715782,0.622957,-5.763403,-5.224459,-8.485163,-3.486632,9.961534,9.495945,1.987825,6.389419,4.328835,6.938905,-0.868247,-7.766761,4.481950,-3.954994,-0.730738,-8.320963,0.458575,9.423377,3.648965,-2.641018,-7.013210,-9.334548,9.338912,2.736870,-3.673087,-1.734638,-2.965248,3.021418,5.453239,2.517207,8.346173,-4.346760,7.602795,-8.910927,2.822919,2.653724,9.999183,-1.828945,2.774187,8.094547,-8.741865,-1.959032,-4.664062,-1.959483,-0.646193,0.330768,4.703584,-7.564690,6.677753,3.555021,2.359375,1.983392,7.987993,-9.969310,9.620154,-1.049058,3.941552,-5.632157,-5.038193,9.552238,-6.206333,-3.414188,-2.940086,-2.465343,-3.183876,4.909712,-4.203357,-3.464220,-8.742577,-1.155945,-9.802622,5.469185,-6.054133,6.670539,0.138228,3.619067,0.643952,5.632532,-6.049609,-4.284936,-2.417666,7.094420,-9.243973,-0.323621,-5.647931,-9.795493,3.371852,-7.870827,5.256127,-2.807779,6.469189,-2.396532,1.552330,-1.943618,-4.366797,-7.882076,-0.471535,4.366568,3.428027,7.641019,4.972706,-6.634330,-0.041339,-2.489342,-8.383283,-6.074883,-6.397128,4.999828,-9.770575,2.691482,-1.383642,1.376296,7.051189,0.435662,-2.248049,-1.538613,-4.811659,-6.489102,-1.771063,-9.371076,2.337939,-9.603405,6.032048,-1.368827,2.783708,-3.944649,7.794640,9.660683,8.772956,-9.536569,0.938424,2.690095,6.282052,-7.170718,-1.682598,4.676459,6.147053,8.005251,4.759768,9.082121,9.188292,-2.580117,6.530055,-2.924189,-1.814409,6.274396,9.327591,6.186444,-4.472032,-1.197675,-1.669510,8.075618,3.390202,-7.699933,-2.560221,-7.196982,-5.114896,-7.725765,-8.467486,-3.605121,7.136636,-4.584223,-4.421766,-3.370017,-7.611069,6.820100,-6.657129,-2.335297,0.787196,-7.519774,-3.937909,3.661704,8.856316,3.668543,-4.020457], dtype = "float32")#candidate|16265|(420,)|const|float32
call_16264 = relay.TupleGetItem(func_5858_call(relay.reshape(const_16265.astype('float32'), [7, 10, 6])), 0)
call_16266 = relay.TupleGetItem(func_5861_call(relay.reshape(const_16265.astype('float32'), [7, 10, 6])), 0)
uop_16269 = relay.atanh(uop_16239.astype('float32')) # shape=(1092, 1)
uop_16271 = relay.atanh(uop_16241.astype('float32')) # shape=(1092, 1)
func_300_call = mod.get_global_var('func_300')
func_303_call = mutated_mod.get_global_var('func_303')
const_16273 = relay.const([0.071090,-6.902673,-8.822857,-2.035427,-5.968646,-0.862130,6.484974,1.624168,-1.077487,5.987442,-1.357086,-5.926754,7.412043,-1.210035,1.328118,8.064565,-5.636870,-4.224656,-3.207930,-2.207446,-8.371119,-4.197363,-7.217238,-0.415273,3.280837,-7.478660,-6.904347,-1.878094,3.803412,-5.972028,-4.661260,3.163735,-1.381451,9.843233,-5.343123,7.437124,8.510966,9.845140,-5.914668,-6.621805,7.326979,6.493660,0.783831,0.791999,8.904340,-3.891561,4.260591,-1.335665,0.688538,-5.795724,0.484467,-7.693765,3.639392,-7.639162,6.016596,-1.914644,-9.592987,-2.193513,8.122434,-1.816029,-4.683786,-3.327503,-5.825129,4.378573,-7.777110,-5.070825,4.953360,-8.343613,-0.105919,-6.574502,-2.551169,-6.918035,9.631412,-9.872538,1.386461,4.264795,6.312770,0.209893,-5.414165,4.378196,1.332636,-4.207880,-2.549526,8.313650,-1.795362,9.916593,-9.470040,0.447672,-2.027657,-5.330157,-3.542650,8.072562,3.569877,4.686817,7.700883,8.212939,-4.805971,-1.417487,-7.151489,3.758841,2.947362,3.477702,4.098669,6.563706,6.660667,8.316455,1.358184,1.406480,1.414931,-8.064793,-3.663750,5.731960,-7.612683,9.728993,-4.178966,9.941558,6.265891,8.338381,1.701335,8.878068,6.836077,-4.005597,0.965017,6.275737,-2.339528,-2.049030,9.022582,-4.932218,6.743951,4.764874,-7.071355,5.064723,1.527604,-3.727608,-1.193883,2.257551,-6.000932,-0.271388,-3.212305,7.300706,-2.351308,4.878091,6.156222,5.529214,5.909845,-3.935584,8.754108,-7.265707,4.760823,7.913225,-0.373516,8.690827,-1.371948,-4.126690,4.047717,4.026077,2.174468,-5.590240,-2.121202,9.025284,-9.947652,-8.894509,-0.287384,-0.134213,3.519591,9.739485,4.962224,2.840876,-0.002032,-0.618893,5.946994,9.924815,-2.764740,3.987321,5.440738,-3.021656,7.914407,9.602007,2.578315,0.365094,7.773194,-3.154426,1.452818,-7.884878,-4.410185,4.236402,7.416062,-3.739648,-9.320846,-2.206272,9.297773,9.572762,5.032710,-6.054453,2.463775,-9.063436,-3.433116,7.733095,-1.737962,0.870841,-1.739447,-4.904451,-6.742202,5.011900,-1.188482,-3.009444,-7.647071,-7.826635,5.292497,3.602080,-5.029246,2.408956,-5.160120,-7.471777,3.216092,5.847015,7.254057,6.696416,4.444339,-0.806276,-8.593490,3.054940,0.312329,5.060977,-8.037349,9.534563,-9.657715,3.125723,6.945907,5.789471,4.162397,-5.929617,-7.577920,-7.949210,-8.566059,0.836845,-7.186890,2.221025,3.287608,-9.498654,7.015823,-1.151981,-6.770564,1.337889,-8.638941,-0.907068,3.760895,-1.667643,-1.266686,2.102805,9.362251,-0.078187,1.908942,4.311152,-6.693920,-9.697699,1.501822,2.358902,-1.141000,5.661946,2.174721,9.913036,-3.849788,-5.974811,-9.591705,5.811308,-7.973335,3.425870,-1.557855,-1.716002,-7.503156,-7.049790,-1.489844,-3.408859,-7.331346,1.282068,6.434944,8.581438,-5.712372,0.477445,0.347040,-4.445941,-0.055650,-0.056830,6.371073,8.000371,3.093085,9.948822,5.586602,4.279504,-6.961384,7.412567,1.517138,9.968407,-6.290266,-7.309451,-1.882061,1.767522,8.929971,7.237516,2.778284,-5.242421,-0.976766,-9.314024,7.939402,-6.723966,-4.693999,-5.315362,-7.756015,3.361495,-0.699951,-0.886454,-9.958709,1.935634,7.642615,-4.347031,4.925804,-9.065325,1.614482,0.021616,-5.852076,-9.010191,5.312499,-8.940758,-6.318090,-4.003900,8.347627,3.902352,-0.591108,6.308794,1.265969,-0.868765,4.423542,1.792844,2.912781,9.982894,-3.578190,-8.279920,-0.976445,7.301264,-8.579205,1.963289,-2.410716,-1.809047,9.054172,6.660718,1.775874,9.718228,-7.449993,9.556754,5.878224,2.464632,-4.716837,2.194798,-6.399008,-8.512077,-9.599030,-4.627314,-6.420254,-8.743141,2.732886,4.469225,2.847835,1.491640,6.700233,-3.209575,4.513464,-0.429420,8.179329,3.818525,-8.068212,7.156740,5.546829,4.703932,-1.162345,-2.081644,0.608295,-7.918393,-7.042326,-2.310278,4.183093,4.330090,-1.776847,-5.625182,5.155387,8.315264,3.344281,9.690736,1.261999,8.975930,-9.989252,0.416696,5.284878,-4.987831,3.333895,0.117748,5.027722,4.630854,-7.927577,-3.014584,7.953221,3.934299,-7.179005,-8.969535,8.922053,1.576921,1.551638,-7.606662,-0.573010,-5.555668,2.915717,-4.234629,-1.442582,8.026475,-7.463988,5.797637,3.397709,-1.829978,8.200543,2.305576,-2.101624,-2.387753,8.096130,-3.519094,5.761136,4.473940,-8.549649,-7.495692,-3.077858,6.831302,8.490932,-7.541035,9.041651,-2.475477,1.659193,-8.482831,-2.979008,0.217184,8.817638,0.984254,9.467528,6.241551,0.621735,-9.713741,3.499034,-8.649485,-0.818403,-4.556471,6.570610,-1.230291,-9.677742,5.803791,8.698330,3.832535,-5.675951,-4.581992,7.703246,-5.489059,9.906478,-4.099241,-9.989197,5.771279,-4.697423,8.780712,-4.619245,-6.673745,-9.336255,5.214138,6.580674,-0.283159,0.269636,8.203225,-0.699673,4.769868,-9.790173,9.314736,-1.408499,-1.983554,-5.171880,7.086130,1.550270,9.178113,8.437111,-0.770081,8.413090,-3.321387,2.329923,-8.205950,6.966724,2.847890,4.576354,4.944789,8.059261,-5.049147,1.589340,-2.439003,-0.215302,-2.804404,-1.504049,-4.328470,5.070943,-7.421873,-0.125985,-3.774625,1.267643,1.174771,-6.285120,-3.590287,-9.564181,6.217725,-4.661857,4.090677,-3.032268,-8.361065,-4.417542,-1.799587,-6.616817,-2.040839,4.211806,-1.652900,-3.470848,-3.126279,-7.322903,-3.971100,7.508679,-0.780775,8.632683,-0.708739,8.512059,-7.206180,4.255137,5.137092,7.578856,-2.208745,3.925728,4.019632,7.318957,-1.540502,5.216445,-3.089389,7.443083,-8.645864,-7.510399,-8.481798,-3.272472,5.592066,7.182616,3.016547,-3.050512,-8.770682,-9.237401,0.541337,7.212905,-4.854567,-6.456528,0.883133,2.793474,-2.355055,2.941426,-9.901435,1.454433,6.190463,-3.749865,-8.717777,8.336684,-6.335579,-7.901398,4.888726,-8.120774,-5.060263,-6.016908,-0.785736,-4.174114,-2.411854,4.966504,1.000029,-0.321075,9.162390,0.006306,-5.869038,-2.225274,-8.847460,-7.736872,-0.709918,6.968472,-6.069148,6.811019,-6.528948,3.647652,2.035029,4.174694,-2.506301,9.354267,-8.212478,3.737126,9.601304,-2.179290,-1.082940,3.024944,6.243799,-5.706314,2.196593,-1.847147,3.233983,-2.317377,-0.280629,2.238765,0.881995,-0.082881,9.152408,-1.860486,-7.218677,-7.063160,-0.597410,3.316128,6.815678], dtype = "float64")#candidate|16273|(616,)|const|float64
call_16272 = relay.TupleGetItem(func_300_call(relay.reshape(const_16273.astype('float64'), [8, 11, 7])), 0)
call_16274 = relay.TupleGetItem(func_303_call(relay.reshape(const_16273.astype('float64'), [8, 11, 7])), 0)
bop_16276 = relay.subtract(uop_16269.astype('uint64'), relay.reshape(bop_16259.astype('uint64'), relay.shape_of(uop_16269))) # shape=(1092, 1)
bop_16279 = relay.subtract(uop_16271.astype('uint64'), relay.reshape(bop_16262.astype('uint64'), relay.shape_of(uop_16271))) # shape=(1092, 1)
bop_16285 = relay.bitwise_or(bop_16276.astype('int16'), const_16273.astype('int16')) # shape=(1092, 616)
bop_16288 = relay.bitwise_or(bop_16279.astype('int16'), const_16273.astype('int16')) # shape=(1092, 616)
bop_16293 = relay.floor_mod(uop_16239.astype('float64'), bop_16285.astype('float64')) # shape=(1092, 616)
bop_16296 = relay.floor_mod(uop_16241.astype('float64'), bop_16288.astype('float64')) # shape=(1092, 616)
func_14933_call = mod.get_global_var('func_14933')
func_14934_call = mutated_mod.get_global_var('func_14934')
call_16300 = func_14933_call()
call_16301 = func_14933_call()
func_16074_call = mod.get_global_var('func_16074')
func_16076_call = mutated_mod.get_global_var('func_16076')
call_16303 = relay.TupleGetItem(func_16074_call(), 0)
call_16304 = relay.TupleGetItem(func_16076_call(), 0)
uop_16305 = relay.rsqrt(uop_16239.astype('float32')) # shape=(1092, 1)
uop_16307 = relay.rsqrt(uop_16241.astype('float32')) # shape=(1092, 1)
bop_16312 = relay.left_shift(bop_16276.astype('int16'), relay.reshape(uop_16305.astype('int16'), relay.shape_of(bop_16276))) # shape=(1092, 1)
bop_16315 = relay.left_shift(bop_16279.astype('int16'), relay.reshape(uop_16307.astype('int16'), relay.shape_of(bop_16279))) # shape=(1092, 1)
output = relay.Tuple([call_16225,const_16237,call_16264,const_16265,call_16272,bop_16293,call_16300,call_16303,bop_16312,])
output2 = relay.Tuple([call_16226,const_16237,call_16266,const_16265,call_16274,bop_16296,call_16301,call_16304,bop_16315,])
F = relay.Function([], output)
mod['main'] = F
mod = relay.transform.InferType()(mod)
print('==========mod==========')
print(mod.astext(show_meta_data=False))
print('===================================')
F = relay.Function([], output2)
mutated_mod['main'] = F
mutated_mod = relay.transform.InferType()(mutated_mod)
print('==========mutated_mod==========')
print(mutated_mod.astext(show_meta_data=False))
print('===================================')
graph, lib, params = relay.build(mod, target='llvm')
module1 = graph_runtime.create(graph, lib, tvm.device('llvm',0))
intrp2 = relay.build_module.create_executor('graph', mod, tvm.device('llvm',0),'llvm')
intrp3 = relay.build_module.create_executor('debug', mod, tvm.device('llvm',0),'llvm')
intrp4 = relay.build_module.create_executor('vm', mod, tvm.device('llvm',0),'llvm')
graph, lib, params = relay.build(mod, target='cuda')
module5 = graph_runtime.create(graph, lib, tvm.device('cuda',0))
intrp6 = relay.build_module.create_executor('graph', mod, tvm.device('cuda',0),'cuda')
intrp7 = relay.build_module.create_executor('debug', mod, tvm.device('cuda',0),'cuda')
intrp8 = relay.build_module.create_executor('vm', mod, tvm.device('cuda',0),'cuda')
seq = Sequential([
	relay.transform.AlterOpLayout(),
	relay.transform.AnnotateSpans(),
	relay.transform.BatchingOps(),
	relay.transform.CanonicalizeCast(),
	relay.transform.CanonicalizeOps(),
	relay.transform.DeadCodeElimination(),
	relay.transform.DynamicToStatic(),
	relay.transform.FastMath(),
	relay.transform.FirstOrderGradient(),
	relay.transform.EliminateCommonSubexpr(),
	relay.transform.MergeCompilerRegions(),
	relay.transform.Inline(),
	relay.transform.LambdaLift(),
	relay.transform.LazyGradientInit(),
	relay.transform.PartialEvaluate(),
	relay.transform.Legalize(),
	relay.transform.FoldConstant(),
	relay.transform.ToANormalForm(),
])
mod = seq(mod)
print(mod.astext(show_meta_data=False))
graph, lib, params = relay.build(mod, target='llvm')
module9 = graph_runtime.create(graph, lib, tvm.device('llvm',0))
intrp10 = relay.build_module.create_executor('graph', mod, tvm.device('llvm',0),'llvm')
intrp11 = relay.build_module.create_executor('debug', mod, tvm.device('llvm',0),'llvm')
intrp12 = relay.build_module.create_executor('vm', mod, tvm.device('llvm',0),'llvm')
graph, lib, params = relay.build(mod, target='cuda')
module13 = graph_runtime.create(graph, lib, tvm.device('cuda',0))
intrp14 = relay.build_module.create_executor('graph', mod, tvm.device('cuda',0),'cuda')
intrp15 = relay.build_module.create_executor('debug', mod, tvm.device('cuda',0),'cuda')
intrp16 = relay.build_module.create_executor('vm', mod, tvm.device('cuda',0),'cuda')
graph, lib, params = relay.build(mutated_mod, target='llvm')
module17 = graph_runtime.create(graph, lib, tvm.device('llvm',0))
intrp18 = relay.build_module.create_executor('graph', mutated_mod, tvm.device('llvm',0),'llvm')
intrp19 = relay.build_module.create_executor('debug', mutated_mod, tvm.device('llvm',0),'llvm')
intrp20 = relay.build_module.create_executor('vm', mutated_mod, tvm.device('llvm',0),'llvm')
graph, lib, params = relay.build(mutated_mod, target='cuda')
module21 = graph_runtime.create(graph, lib, tvm.device('cuda',0))
intrp22 = relay.build_module.create_executor('graph', mutated_mod, tvm.device('cuda',0),'cuda')
intrp23 = relay.build_module.create_executor('debug', mutated_mod, tvm.device('cuda',0),'cuda')
intrp24 = relay.build_module.create_executor('vm', mutated_mod, tvm.device('cuda',0),'cuda')

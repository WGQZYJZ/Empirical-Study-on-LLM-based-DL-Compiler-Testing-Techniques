==========mod==========
#[version = "0.0.5"]
def @func_15727() -> (Tensor[(13, 12, 3), float32],) {
  %0 = @func_15309() /* ty=(Tensor[(13, 12, 3), float32],) */;
  %1 = %0.0;
  (%1,)
}

def @func_5277(%var_5266: int8) -> Tensor[(1, 8, 6), bool] {
  %2 = cast(%var_5266, dtype="bool") /* ty=bool */;
  %3 = cast(meta[relay.Constant][0] /* ty=Tensor[(1, 8, 6), int8] */, dtype="bool") /* ty=Tensor[(1, 8, 6), bool] */;
  greater(%2, %3) /* ty=Tensor[(1, 8, 6), bool] */
}

def @func_8287(%var_8272: Tensor[(13, 15, 16), float32]) -> (Tensor[(13, 15, 16), float32],) {
  %4 = cast(%var_8272, dtype="float32") /* ty=Tensor[(13, 15, 16), float32] */;
  %5 = atanh(%4) /* ty=Tensor[(13, 15, 16), float32] */;
  (%5,)
}

def @func_2061(%var_2043: Tensor[(4, 7, 7), uint32], %var_2052: Tensor[(15), float64]) -> (Tensor[(12, 110), int64], Tensor[(15), float64], Tensor[(4, 7, 7), float64], Tensor[(4, 7, 7), float64], Tensor[(616), float64]) {
  %6 = cast(%var_2052, dtype="float64") /* ty=Tensor[(15), float64] */;
  %7 = reshape(%6, newshape=[1, 5, 3]) /* ty=Tensor[(1, 5, 3), float64] */;
  %8 = @func_1236(%7) /* ty=(Tensor[(1, 5, 3), float64], Tensor[(616), float64], Tensor[(12, 110), int64]) */;
  %9 = cast(meta[relay.Constant][1] /* ty=Tensor[(4, 7, 7), uint32] */, dtype="float64") /* ty=Tensor[(4, 7, 7), float64] */;
  %10 = cast(meta[relay.Constant][1] /* ty=Tensor[(4, 7, 7), uint32] */, dtype="bool") /* ty=Tensor[(4, 7, 7), bool] */;
  %11 = shape_of(%var_2043, dtype="int32") /* ty=Tensor[(3), int32] */;
  %12 = cast(%var_2043, dtype="bool") /* ty=Tensor[(4, 7, 7), bool] */;
  %13 = dyn.reshape(%10, %11, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %14 = greater(%12, %13) /* ty=Tensor[(4, 7, 7), bool] */;
  %15 = cast(%14, dtype="float64") /* ty=Tensor[(4, 7, 7), float64] */;
  %16 = %8.2;
  %17 = cast(%16, dtype="float64") /* ty=Tensor[(12, 110), float64] */;
  %18 = reshape(%17, newshape=[12, 10, 11]) /* ty=Tensor[(12, 10, 11), float64] */;
  %19 = @func_1001(%18) /* ty=(Tensor[(12, 10, 11), float64], Tensor[(8, 11, 7), float64], Tensor[(616), float64]) */;
  %20 = log2(%9) /* ty=Tensor[(4, 7, 7), float64] */;
  %21 = cosh(%15) /* ty=Tensor[(4, 7, 7), float64] */;
  %22 = %19.2;
  (%16, %var_2052, %20, %21, %22)
}

def @func_11960(%var_11947: Tensor[(5, 10, 13), int16]) -> Tensor[(5, 10, 13), bool] {
  %23 = cast(meta[relay.Constant][2] /* ty=Tensor[(5, 10, 13), int16] */, dtype="bool") /* ty=Tensor[(5, 10, 13), bool] */;
  %24 = shape_of(%var_11947, dtype="int32") /* ty=Tensor[(3), int32] */;
  %25 = cast(%var_11947, dtype="bool") /* ty=Tensor[(5, 10, 13), bool] */;
  %26 = dyn.reshape(%23, %24, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  not_equal(%25, %26) /* ty=Tensor[(5, 10, 13), bool] */
}

def @func_7829(%var_7804: Tensor[(14, 12, 6), float32]) -> (Tensor[(14, 12, 6), float32], Tensor[(1, 8, 6), bool], int8, Tensor[(616), float64], Tensor[(14, 7), float64]) {
  %27 = cast(%var_7804, dtype="float32") /* ty=Tensor[(14, 12, 6), float32] */;
  %28 = cast(meta[relay.Constant][3] /* ty=int8 */, dtype="int8") /* ty=int8 */;
  %29 = reshape(%28, newshape=[]) /* ty=int8 */;
  %30 = cast(meta[relay.Constant][3] /* ty=int8 */, dtype="float64") /* ty=float64 */;
  %31 = cast(meta[relay.Constant][4] /* ty=Tensor[(14, 7), float64] */, dtype="float64") /* ty=Tensor[(14, 7), float64] */;
  %32 = reshape(%30, newshape=[]) /* ty=float64 */;
  %33 = reshape(%31, newshape=[7, 7, 2]) /* ty=Tensor[(7, 7, 2), float64] */;
  %34 = @func_5651(%32, %33) /* ty=(Tensor[(7, 7, 2), float64], Tensor[(616), float64], Tensor[(1320, 1), float64], Tensor[(8, 11, 7), float64]) */;
  %35 = erf(%27) /* ty=Tensor[(14, 12, 6), float32] */;
  %36 = @func_5277(%29) /* ty=Tensor[(1, 8, 6), bool] */;
  %37 = %34.1;
  (%35, %36, meta[relay.Constant][3] /* ty=int8 */, %37, meta[relay.Constant][4] /* ty=Tensor[(14, 7), float64] */)
}

def @func_15144() -> Tensor[(13, 12, 3), float32] {
  %38 = @func_15001() /* ty=(Tensor[(13, 12, 3), float32],) */;
  %38.0
}

def @func_14703(%var_14696: Tensor[(7, 4, 7), float32]) -> (Tensor[(7, 4, 7), float32],) {
  %39 = cast(meta[relay.Constant][5] /* ty=Tensor[(7, 4, 7), float32] */, dtype="float32") /* ty=Tensor[(7, 4, 7), float32] */;
  %40 = shape_of(%var_14696, dtype="int32") /* ty=Tensor[(3), int32] */;
  %41 = cast(%var_14696, dtype="float32") /* ty=Tensor[(7, 4, 7), float32] */;
  %42 = dyn.reshape(%39, %40, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %43 = mod(%41, %42) /* ty=Tensor[(7, 4, 7), float32] */;
  (%43,)
}

def @func_15359(%var_15350: Tensor[(1, 16), float64]) -> (Tensor[(6, 6, 11), float32], Tensor[(1, 8, 2), float64], Tensor[(1, 16), float64]) {
  %44 = cast(%var_15350, dtype="float64") /* ty=Tensor[(1, 16), float64] */;
  %45 = reshape(%44, newshape=[1, 8, 2]) /* ty=Tensor[(1, 8, 2), float64] */;
  %46 = @func_13700(%45) /* ty=(Tensor[(1, 8, 2), float64],) */;
  %47 = @func_15274() /* ty=Tensor[(6, 6, 11), float32] */;
  %48 = %46.0;
  (%47, %48, %var_15350)
}

def @func_11390(%var_11384: Tensor[(7, 15, 10), uint8], %var_11385: Tensor[(7, 15, 10), uint8]) -> Tensor[(7, 15, 10), uint8] {
  %49 = cast(%var_11385, dtype="uint8") /* ty=Tensor[(7, 15, 10), uint8] */;
  %50 = shape_of(%var_11384, dtype="int32") /* ty=Tensor[(3), int32] */;
  %51 = cast(%var_11384, dtype="uint8") /* ty=Tensor[(7, 15, 10), uint8] */;
  %52 = dyn.reshape(%49, %50, newshape=[]) /* ty=Tensor[(?, ?, ?), uint8] */;
  multiply(%51, %52) /* ty=Tensor[(7, 15, 10), uint8] */
}

def @main() -> (Tensor[(13, 12, 3), float32], Tensor[(2100), float64], Tensor[(7, 10, 6), float32], Tensor[(420), float32], Tensor[(8, 11, 7), float64], Tensor[(1092, 616), float64], Tensor[(13, 12, 3), float32], Tensor[(13, 12, 3), float32], Tensor[(1092, ?), int16]) {
  %53 = @func_15727() /* ty=(Tensor[(13, 12, 3), float32],) */;
  %54 = cast(meta[relay.Constant][7] /* ty=Tensor[(420), float32] */, dtype="float32") /* ty=Tensor[(420), float32] */;
  %55 = reshape(%54, newshape=[7, 10, 6]) /* ty=Tensor[(7, 10, 6), float32] */;
  %56 = @func_5858(%55) /* ty=(Tensor[(7, 10, 6), float32],) */;
  %57 = cast(meta[relay.Constant][8] /* ty=Tensor[(616), float64] */, dtype="float64") /* ty=Tensor[(616), float64] */;
  %58 = reshape(%57, newshape=[8, 11, 7]) /* ty=Tensor[(8, 11, 7), float64] */;
  %59 = @func_300(%58) /* ty=(Tensor[(8, 11, 7), float64],) */;
  %60 = cast(meta[relay.Constant][6] /* ty=Tensor[(2100), float64] */, dtype="float64") /* ty=Tensor[(2100), float64] */;
  %61 = reshape(%60, newshape=[14, 10, 15]) /* ty=Tensor[(14, 10, 15), float64] */;
  %62 = @func_13391(%61) /* ty=(Tensor[(14, 10, 15), float64], Tensor[(14, 6, 13), uint32], Tensor[(1092, 1), uint8]) */;
  %63 = %62.2;
  %64 = cast(%63, dtype="float64") /* ty=Tensor[(1092, 1), float64] */;
  %65 = erf(%64) /* ty=Tensor[(1092, 1), float64] */;
  %66 = cast(%65, dtype="float32") /* ty=Tensor[(1092, 1), float32] */;
  %67 = atanh(%66) /* ty=Tensor[(1092, 1), float32] */;
  %68 = cast(%65, dtype="float64") /* ty=Tensor[(1092, 1), float64] */;
  %69 = acos(%68) /* ty=Tensor[(1092, 1), float64] */;
  %70 = cast(%69, dtype="bool") /* ty=Tensor[(1092, 1), bool] */;
  %71 = shape_of(%65, dtype="int32") /* ty=Tensor[(2), int32] */;
  %72 = cast(%65, dtype="bool") /* ty=Tensor[(1092, 1), bool] */;
  %73 = dyn.reshape(%70, %71, newshape=[]) /* ty=Tensor[(?, ?), bool] */;
  %74 = not_equal(%72, %73) /* ty=Tensor[(1092, ?), bool] */;
  %75 = cast(%74, dtype="uint64") /* ty=Tensor[(1092, ?), uint64] */;
  %76 = shape_of(%67, dtype="int32") /* ty=Tensor[(2), int32] */;
  %77 = cast(%67, dtype="uint64") /* ty=Tensor[(1092, 1), uint64] */;
  %78 = dyn.reshape(%75, %76, newshape=[]) /* ty=Tensor[(?, ?), uint64] */;
  %79 = subtract(%77, %78) /* ty=Tensor[(1092, ?), uint64] */;
  %80 = cast(%79, dtype="int16") /* ty=Tensor[(1092, ?), int16] */;
  %81 = cast(meta[relay.Constant][8] /* ty=Tensor[(616), float64] */, dtype="int16") /* ty=Tensor[(616), int16] */;
  %82 = bitwise_or(%80, %81) /* ty=Tensor[(1092, 616), int16] */;
  %83 = cast(%65, dtype="float64") /* ty=Tensor[(1092, 1), float64] */;
  %84 = cast(%82, dtype="float64") /* ty=Tensor[(1092, 616), float64] */;
  %85 = @func_16074() /* ty=(Tensor[(13, 12, 3), float32],) */;
  %86 = cast(%65, dtype="float32") /* ty=Tensor[(1092, 1), float32] */;
  %87 = rsqrt(%86) /* ty=Tensor[(1092, 1), float32] */;
  %88 = cast(%87, dtype="int16") /* ty=Tensor[(1092, 1), int16] */;
  %89 = shape_of(%79, dtype="int32") /* ty=Tensor[(2), int32] */;
  %90 = cast(%79, dtype="int16") /* ty=Tensor[(1092, ?), int16] */;
  %91 = dyn.reshape(%88, %89, newshape=[]) /* ty=Tensor[(?, ?), int16] */;
  %92 = %53.0;
  %93 = %56.0;
  %94 = %59.0;
  %95 = floor_mod(%83, %84) /* ty=Tensor[(1092, 616), float64] */;
  %96 = @func_14933() /* ty=Tensor[(13, 12, 3), float32] */;
  %97 = %85.0;
  %98 = left_shift(%90, %91) /* ty=Tensor[(1092, ?), int16] */;
  (%92, meta[relay.Constant][6] /* ty=Tensor[(2100), float64] */, %93, meta[relay.Constant][7] /* ty=Tensor[(420), float32] */, %94, %95, %96, %97, %98)
}

def @func_15086(%var_15073: int8) -> (Tensor[(13, 12, 3), float32], Tensor[(1, 8, 6), bool], int8) {
  %99 = cast(%var_15073, dtype="int8") /* ty=int8 */;
  %100 = reshape(%99, newshape=[]) /* ty=int8 */;
  %101 = @func_14933() /* ty=Tensor[(13, 12, 3), float32] */;
  %102 = @func_5277(%100) /* ty=Tensor[(1, 8, 6), bool] */;
  (%101, %102, %var_15073)
}

def @func_3394(%var_3367: Tensor[(14, 11, 8), uint8], %var_3368: Tensor[(14, 11, 8), uint8], %var_3377: Tensor[(72), float32], %var_3389: Tensor[(539), float32]) -> (Tensor[(14, 11, 8), bool], Tensor[(72), float32], Tensor[(72), float32], Tensor[(7, 88), float64], Tensor[(11, 7, 7), float64], Tensor[(539), float32]) {
  %103 = cast(%var_3368, dtype="bool") /* ty=Tensor[(14, 11, 8), bool] */;
  %104 = shape_of(%var_3367, dtype="int32") /* ty=Tensor[(3), int32] */;
  %105 = cast(%var_3367, dtype="bool") /* ty=Tensor[(14, 11, 8), bool] */;
  %106 = dyn.reshape(%103, %104, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %107 = cast(%var_3377, dtype="float32") /* ty=Tensor[(72), float32] */;
  %108 = cast(meta[relay.Constant][9] /* ty=Tensor[(7, 88), float64] */, dtype="float64") /* ty=Tensor[(7, 88), float64] */;
  %109 = reshape(%107, newshape=[72]) /* ty=Tensor[(72), float32] */;
  %110 = reshape(%108, newshape=[616]) /* ty=Tensor[(616), float64] */;
  %111 = @func_3042(%109, %110) /* ty=(Tensor[(?, 10, 16), float32], Tensor[(616), float64], Tensor[(72), float32], Tensor[(616), float64]) */;
  %112 = cast(%var_3389, dtype="float32") /* ty=Tensor[(539), float32] */;
  %113 = reshape(%112, newshape=[11, 7, 7]) /* ty=Tensor[(11, 7, 7), float32] */;
  %114 = not_equal(%105, %106) /* ty=Tensor[(14, 11, 8), bool] */;
  %115 = %111.2;
  %116 = @func_2692(%113) /* ty=Tensor[(11, 7, 7), float64] */;
  (%114, %115, %var_3377, meta[relay.Constant][9] /* ty=Tensor[(7, 88), float64] */, %116, %var_3389)
}

def @func_13700(%var_13689: Tensor[(1, 8, 2), float64]) -> (Tensor[(1, 8, 2), float64],) {
  %117 = cast(%var_13689, dtype="float64") /* ty=Tensor[(1, 8, 2), float64] */;
  %118 = sqrt(%117) /* ty=Tensor[(1, 8, 2), float64] */;
  (%118,)
}

def @func_6316(%var_6298: Tensor[(14, 4, 5), int64], %var_6299: Tensor[(14, 4, 5), int64]) -> (Tensor[(14, 4, 5), bool], Tensor[(14, 4, 5), float32]) {
  %119 = cast(meta[relay.Constant][10] /* ty=Tensor[(14, 4, 5), int64] */, dtype="bool") /* ty=Tensor[(14, 4, 5), bool] */;
  %120 = shape_of(%var_6298, dtype="int32") /* ty=Tensor[(3), int32] */;
  %121 = cast(%var_6298, dtype="bool") /* ty=Tensor[(14, 4, 5), bool] */;
  %122 = dyn.reshape(%119, %120, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %123 = cast(%var_6299, dtype="bool") /* ty=Tensor[(14, 4, 5), bool] */;
  %124 = shape_of(%var_6298, dtype="int32") /* ty=Tensor[(3), int32] */;
  %125 = cast(%var_6298, dtype="bool") /* ty=Tensor[(14, 4, 5), bool] */;
  %126 = dyn.reshape(%123, %124, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %127 = equal(%125, %126) /* ty=Tensor[(14, 4, 5), bool] */;
  %128 = cast(%127, dtype="float64") /* ty=Tensor[(14, 4, 5), float64] */;
  %129 = log10(%128) /* ty=Tensor[(14, 4, 5), float64] */;
  %130 = cast(%129, dtype="float32") /* ty=Tensor[(14, 4, 5), float32] */;
  %131 = logical_and(%121, %122) /* ty=Tensor[(14, 4, 5), bool] */;
  %132 = atan(%130) /* ty=Tensor[(14, 4, 5), float32] */;
  (%131, %132)
}

def @func_15309() -> (Tensor[(13, 12, 3), float32],) {
  %133 = @func_15118() /* ty=(Tensor[(13, 12, 3), float32],) */;
  %134 = %133.0;
  (%134,)
}

def @func_16034(%var_15943: Tensor[(144), float32], %var_15944: Tensor[(2304), float32], %var_15949: Tensor[(648), uint16], %var_15959: Tensor[(1040), int64]) -> (Tensor[(13, 12, 3), float32], Tensor[(144), float32], Tensor[(3, 7, 5), uint32], Tensor[(648), uint16], Tensor[(30), float32], Tensor[(16, 9, 16), bool], Tensor[(2304), int16], Tensor[(13, 8, 10), uint32], Tensor[(6, 3, 7), float64], Tensor[(126), float64], Tensor[(13, 12, 3), float32], Tensor[(2304), float32]) {
  %135 = @func_15261() /* ty=(Tensor[(13, 12, 3), float32],) */;
  %136 = %135.0;
  %137 = cast(%136, dtype="float32") /* ty=Tensor[(13, 12, 3), float32] */;
  %138 = cast(%var_15949, dtype="uint16") /* ty=Tensor[(648), uint16] */;
  %139 = cast(meta[relay.Constant][11] /* ty=Tensor[(30), float32] */, dtype="float32") /* ty=Tensor[(30), float32] */;
  %140 = reshape(%137, newshape=[13, 12, 3]) /* ty=Tensor[(13, 12, 3), float32] */;
  %141 = reshape(%138, newshape=[648]) /* ty=Tensor[(648), uint16] */;
  %142 = reshape(%139, newshape=[30, 1]) /* ty=Tensor[(30, 1), float32] */;
  %143 = @func_15517(%140, %141, %142) /* ty=(Tensor[(13, 12, 3), uint16], Tensor[(1344), uint16], uint32, Tensor[(648), uint16], Tensor[(5, 10, 13), bool], Tensor[(650), int16], Tensor[(3, 7, 5), uint32], Tensor[(105), uint32], Tensor[(2, 2, 10), bool], Tensor[(30, 1), float32], Tensor[(12, 14, 8), float32]) */;
  %144 = cast(%var_15943, dtype="float32") /* ty=Tensor[(144), float32] */;
  %145 = cast(%var_15944, dtype="float32") /* ty=Tensor[(2304), float32] */;
  %146 = reshape(%144, newshape=[16, 9, 1]) /* ty=Tensor[(16, 9, 1), float32] */;
  %147 = reshape(%145, newshape=[16, 9, 16]) /* ty=Tensor[(16, 9, 16), float32] */;
  %148 = @func_1722(%146, %147) /* ty=Tensor[(16, 9, 16), bool] */;
  %149 = cast(%var_15944, dtype="bool") /* ty=Tensor[(2304), bool] */;
  %150 = shape_of(%148, dtype="int32") /* ty=Tensor[(3), int32] */;
  %151 = cast(%148, dtype="bool") /* ty=Tensor[(16, 9, 16), bool] */;
  %152 = dyn.reshape(%149, %150, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %153 = cast(%148, dtype="int16") /* ty=Tensor[(16, 9, 16), int16] */;
  %154 = shape_of(%var_15944, dtype="int32") /* ty=Tensor[(1), int32] */;
  %155 = cast(%var_15944, dtype="int16") /* ty=Tensor[(2304), int16] */;
  %156 = dyn.reshape(%153, %154, newshape=[]) /* ty=Tensor[(?), int16] */;
  %157 = cast(%var_15959, dtype="int64") /* ty=Tensor[(1040), int64] */;
  %158 = cast(%var_15959, dtype="int64") /* ty=Tensor[(1040), int64] */;
  %159 = reshape(%157, newshape=[13, 8, 10]) /* ty=Tensor[(13, 8, 10), int64] */;
  %160 = reshape(%158, newshape=[13, 8, 10]) /* ty=Tensor[(13, 8, 10), int64] */;
  %161 = @func_12626(%159, %160) /* ty=Tensor[(13, 8, 10), float32] */;
  %162 = cast(%var_15959, dtype="uint32") /* ty=Tensor[(1040), uint32] */;
  %163 = shape_of(%161, dtype="int32") /* ty=Tensor[(3), int32] */;
  %164 = cast(%161, dtype="uint32") /* ty=Tensor[(13, 8, 10), uint32] */;
  %165 = dyn.reshape(%162, %163, newshape=[]) /* ty=Tensor[(?, ?, ?), uint32] */;
  %166 = cast(meta[relay.Constant][12] /* ty=Tensor[(126), float64] */, dtype="float64") /* ty=Tensor[(126), float64] */;
  %167 = reshape(%166, newshape=[6, 3, 7]) /* ty=Tensor[(6, 3, 7), float64] */;
  %168 = @func_3420(%167) /* ty=(Tensor[(6, 3, 7), float64], Tensor[(6, 3, 7), float64]) */;
  %169 = @func_15727() /* ty=(Tensor[(13, 12, 3), float32],) */;
  %170 = cast(%var_15944, dtype="float32") /* ty=Tensor[(2304), float32] */;
  %171 = %143.6;
  %172 = greater_equal(%151, %152) /* ty=Tensor[(16, 9, 16), bool] */;
  %173 = minimum(%155, %156) /* ty=Tensor[(2304), int16] */;
  %174 = maximum(%164, %165) /* ty=Tensor[(13, 8, 10), uint32] */;
  %175 = %168.0;
  %176 = %169.0;
  %177 = log2(%170) /* ty=Tensor[(2304), float32] */;
  (%136, %var_15943, %171, %var_15949, meta[relay.Constant][11] /* ty=Tensor[(30), float32] */, %172, %173, %174, %175, meta[relay.Constant][12] /* ty=Tensor[(126), float64] */, %176, %177)
}

def @func_7588(%var_7552: Tensor[(3, 13, 16), int16], %var_7553: Tensor[(3, 13, 16), int16]) -> Tensor[(3, 13, 16), int16] {
  %178 = cast(%var_7553, dtype="int16") /* ty=Tensor[(3, 13, 16), int16] */;
  %179 = shape_of(%var_7552, dtype="int32") /* ty=Tensor[(3), int32] */;
  %180 = cast(%var_7552, dtype="int16") /* ty=Tensor[(3, 13, 16), int16] */;
  %181 = dyn.reshape(%178, %179, newshape=[]) /* ty=Tensor[(?, ?, ?), int16] */;
  logical_xor(%180, %181) /* ty=Tensor[(3, 13, 16), int16] */
}

def @func_8016(%var_8007: Tensor[(9, 11, 1), int16], %var_8008: Tensor[(9, 11, 4), int16]) -> Tensor[(9, 11, 4), int16] {
  %182 = cast(%var_8007, dtype="int16") /* ty=Tensor[(9, 11, 1), int16] */;
  %183 = cast(%var_8008, dtype="int16") /* ty=Tensor[(9, 11, 4), int16] */;
  right_shift(%182, %183) /* ty=Tensor[(9, 11, 4), int16] */
}

def @func_15237(%var_15233: Tensor[(105), uint32]) -> (Tensor[(13, 12, 3), float32], Tensor[(3, 7, 5), uint32], Tensor[(105), uint32]) {
  %184 = @func_15182() /* ty=(Tensor[(13, 12, 3), float32],) */;
  %185 = cast(%var_15233, dtype="uint32") /* ty=Tensor[(105), uint32] */;
  %186 = reshape(%185, newshape=[3, 7, 5]) /* ty=Tensor[(3, 7, 5), uint32] */;
  %187 = %184.0;
  %188 = @func_3899(%186) /* ty=Tensor[(3, 7, 5), uint32] */;
  (%187, %188, %var_15233)
}

def @func_14334(%var_14327: Tensor[(30), float32]) -> (Tensor[(2, 2, 10), bool], Tensor[(3, 10, ?), float32], Tensor[(30), float32]) {
  %189 = cast(meta[relay.Constant][14] /* ty=Tensor[(2, 2, 10), uint32] */, dtype="bool") /* ty=Tensor[(2, 2, 10), bool] */;
  %190 = shape_of(meta[relay.Constant][13] /* ty=Tensor[(2, 2, 10), uint32] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %191 = cast(meta[relay.Constant][13] /* ty=Tensor[(2, 2, 10), uint32] */, dtype="bool") /* ty=Tensor[(2, 2, 10), bool] */;
  %192 = dyn.reshape(%189, %190, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %193 = cast(%var_14327, dtype="float32") /* ty=Tensor[(30), float32] */;
  %194 = reshape(%193, newshape=[3, 10, 1]) /* ty=Tensor[(3, 10, 1), float32] */;
  %195 = equal(%191, %192) /* ty=Tensor[(2, 2, 10), bool] */;
  %196 = @func_8144(%194) /* ty=Tensor[(3, 10, ?), float32] */;
  (%195, %196, %var_14327)
}

def @func_3420(%var_3412: Tensor[(6, 3, 7), float64]) -> (Tensor[(6, 3, 7), float64], Tensor[(6, 3, 7), float64]) {
  %197 = cast(%var_3412, dtype="float64") /* ty=Tensor[(6, 3, 7), float64] */;
  %198 = cast(%var_3412, dtype="float64") /* ty=Tensor[(6, 3, 7), float64] */;
  %199 = sinh(%197) /* ty=Tensor[(6, 3, 7), float64] */;
  %200 = tan(%198) /* ty=Tensor[(6, 3, 7), float64] */;
  (%199, %200)
}

def @func_8420(%var_8409: Tensor[(1, 14, 8), float32]) -> Tensor[(1, 14, 8), float32] {
  %201 = cast(%var_8409, dtype="float32") /* ty=Tensor[(1, 14, 8), float32] */;
  sin(%201) /* ty=Tensor[(1, 14, 8), float32] */
}

def @func_13391(%var_13381: Tensor[(14, 10, 15), float64]) -> (Tensor[(14, 10, 15), float64], Tensor[(14, 6, 13), uint32], Tensor[(1092, 1), uint8]) {
  %202 = cast(%var_13381, dtype="float64") /* ty=Tensor[(14, 10, 15), float64] */;
  %203 = cast(meta[relay.Constant][15] /* ty=Tensor[(1092, 1), uint8] */, dtype="uint8") /* ty=Tensor[(1092, 1), uint8] */;
  %204 = cast(meta[relay.Constant][15] /* ty=Tensor[(1092, 1), uint8] */, dtype="uint8") /* ty=Tensor[(1092, 1), uint8] */;
  %205 = reshape(%203, newshape=[14, 6, 13]) /* ty=Tensor[(14, 6, 13), uint8] */;
  %206 = reshape(%204, newshape=[14, 6, 13]) /* ty=Tensor[(14, 6, 13), uint8] */;
  %207 = @func_10762(%205, %206) /* ty=(Tensor[(14, 6, 13), uint32], Tensor[(3, 13, 8), float64], Tensor[(312), float64], Tensor[(8, 11, 7), float64], Tensor[(1320), float64], Tensor[(14, 6, 13), float64]) */;
  %208 = asinh(%202) /* ty=Tensor[(14, 10, 15), float64] */;
  %209 = %207.0;
  (%208, %209, meta[relay.Constant][15] /* ty=Tensor[(1092, 1), uint8] */)
}

def @func_1001(%var_991: Tensor[(12, 10, 11), float64]) -> (Tensor[(12, 10, 11), float64], Tensor[(8, 11, 7), float64], Tensor[(616), float64]) {
  %210 = cast(%var_991, dtype="float64") /* ty=Tensor[(12, 10, 11), float64] */;
  %211 = cast(meta[relay.Constant][16] /* ty=Tensor[(616), float64] */, dtype="float64") /* ty=Tensor[(616), float64] */;
  %212 = reshape(%211, newshape=[8, 11, 7]) /* ty=Tensor[(8, 11, 7), float64] */;
  %213 = @func_300(%212) /* ty=(Tensor[(8, 11, 7), float64],) */;
  %214 = erf(%210) /* ty=Tensor[(12, 10, 11), float64] */;
  %215 = %213.0;
  (%214, %215, meta[relay.Constant][16] /* ty=Tensor[(616), float64] */)
}

def @func_5651(%var_5624: float64, %var_5625: Tensor[(7, 7, 2), float64]) -> (Tensor[(7, 7, 2), float64], Tensor[(616), float64], Tensor[(1320, 1), float64], Tensor[(8, 11, 7), float64]) {
  %216 = cast(%var_5624, dtype="float64") /* ty=float64 */;
  %217 = cast(%var_5625, dtype="float64") /* ty=Tensor[(7, 7, 2), float64] */;
  %218 = cast(meta[relay.Constant][17] /* ty=Tensor[(1320, 1), float64] */, dtype="float64") /* ty=Tensor[(1320, 1), float64] */;
  %219 = reshape(%218, newshape=[12, 10, 11]) /* ty=Tensor[(12, 10, 11), float64] */;
  %220 = @func_1001(%219) /* ty=(Tensor[(12, 10, 11), float64], Tensor[(8, 11, 7), float64], Tensor[(616), float64]) */;
  %221 = %220.2;
  %222 = cast(%221, dtype="float64") /* ty=Tensor[(616), float64] */;
  %223 = reshape(%222, newshape=[1, 616]) /* ty=Tensor[(1, 616), float64] */;
  %224 = @func_590(%223) /* ty=(Tensor[(9, 1, 5), float32], Tensor[(8, 11, 7), float64], Tensor[(1, 616), float64]) */;
  %225 = mod(%216, %217) /* ty=Tensor[(7, 7, 2), float64] */;
  %226 = %224.1;
  (%225, %221, meta[relay.Constant][17] /* ty=Tensor[(1320, 1), float64] */, %226)
}

def @func_15118() -> (Tensor[(13, 12, 3), float32],) {
  %227 = @func_14933() /* ty=Tensor[(13, 12, 3), float32] */;
  (%227,)
}

def @func_16180() -> (Tensor[(13, 12, 3), float32], Tensor[(1, 8, 2), float64], Tensor[(1, 16), float64], Tensor[(2, 16, 8), uint16], Tensor[(616), float64]) {
  %228 = @func_15418() /* ty=(Tensor[(13, 12, 3), float32], Tensor[(13, 15, 16), float32], Tensor[(3120), float32], Tensor[(13, 12, 3), float32]) */;
  %229 = cast(meta[relay.Constant][18] /* ty=Tensor[(1, 16), float64] */, dtype="float64") /* ty=Tensor[(1, 16), float64] */;
  %230 = reshape(%229, newshape=[1, 8, 2]) /* ty=Tensor[(1, 8, 2), float64] */;
  %231 = @func_13700(%230) /* ty=(Tensor[(1, 8, 2), float64],) */;
  %232 = cast(meta[relay.Constant][19] /* ty=Tensor[(616), float64] */, dtype="float64") /* ty=Tensor[(616), float64] */;
  %233 = reshape(%232, newshape=[616]) /* ty=Tensor[(616), float64] */;
  %234 = @func_15583(%233) /* ty=(Tensor[(2, 16, 8), uint16], Tensor[(256), uint16], Tensor[(9, 1, 5), float32], Tensor[(616), float64], Tensor[(13, 12, 3), uint8]) */;
  %235 = %228.3;
  %236 = %231.0;
  %237 = %234.0;
  (%235, %236, meta[relay.Constant][18] /* ty=Tensor[(1, 16), float64] */, %237, meta[relay.Constant][19] /* ty=Tensor[(616), float64] */)
}

def @func_2121(%var_2114: Tensor[(8, 2, 4), uint8], %var_2115: Tensor[(8, 2, 4), uint8]) -> (Tensor[(8, 2, 4), uint8],) {
  %238 = cast(%var_2115, dtype="uint8") /* ty=Tensor[(8, 2, 4), uint8] */;
  %239 = shape_of(%var_2114, dtype="int32") /* ty=Tensor[(3), int32] */;
  %240 = cast(%var_2114, dtype="uint8") /* ty=Tensor[(8, 2, 4), uint8] */;
  %241 = dyn.reshape(%238, %239, newshape=[]) /* ty=Tensor[(?, ?, ?), uint8] */;
  %242 = bitwise_or(%240, %241) /* ty=Tensor[(8, 2, 4), uint8] */;
  (%242,)
}

def @func_11189(%var_11133: Tensor[(12, 6, 9), uint16], %var_11134: Tensor[(12, 6, 9), uint16]) -> (Tensor[(12, 6, 9), bool], Tensor[(10, 6, 9), uint32], uint32) {
  %243 = cast(%var_11134, dtype="bool") /* ty=Tensor[(12, 6, 9), bool] */;
  %244 = shape_of(%var_11133, dtype="int32") /* ty=Tensor[(3), int32] */;
  %245 = cast(%var_11133, dtype="bool") /* ty=Tensor[(12, 6, 9), bool] */;
  %246 = dyn.reshape(%243, %244, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %247 = cast(meta[relay.Constant][20] /* ty=uint32 */, dtype="uint32") /* ty=uint32 */;
  %248 = reshape(%247, newshape=[]) /* ty=uint32 */;
  %249 = less(%245, %246) /* ty=Tensor[(12, 6, 9), bool] */;
  %250 = @func_7683(%248) /* ty=Tensor[(10, 6, 9), uint32] */;
  (%249, %250, meta[relay.Constant][20] /* ty=uint32 */)
}

def @func_3042(%var_3035: Tensor[(72), float32], %var_3036: Tensor[(616), float64]) -> (Tensor[(?, 10, 16), float32], Tensor[(616), float64], Tensor[(72), float32], Tensor[(616), float64]) {
  %251 = cast(meta[relay.Constant][21] /* ty=Tensor[(1, 10, 16), float64] */, dtype="float64") /* ty=Tensor[(1, 10, 16), float64] */;
  %252 = atan(%251) /* ty=Tensor[(1, 10, 16), float64] */;
  %253 = cast(meta[relay.Constant][21] /* ty=Tensor[(1, 10, 16), float64] */, dtype="float32") /* ty=Tensor[(1, 10, 16), float32] */;
  %254 = shape_of(%252, dtype="int32") /* ty=Tensor[(3), int32] */;
  %255 = cast(%252, dtype="float32") /* ty=Tensor[(1, 10, 16), float32] */;
  %256 = dyn.reshape(%253, %254, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %257 = cast(%var_3035, dtype="float32") /* ty=Tensor[(72), float32] */;
  %258 = cast(%var_3035, dtype="float32") /* ty=Tensor[(72), float32] */;
  %259 = cast(%var_3036, dtype="float64") /* ty=Tensor[(616), float64] */;
  %260 = reshape(%257, newshape=[4, 9, 2]) /* ty=Tensor[(4, 9, 2), float32] */;
  %261 = reshape(%258, newshape=[4, 9, 2]) /* ty=Tensor[(4, 9, 2), float32] */;
  %262 = reshape(%259, newshape=[616]) /* ty=Tensor[(616), float64] */;
  %263 = @func_1550(%260, %261, %262) /* ty=(Tensor[(1, 5, 3), float64], Tensor[(15), float64], Tensor[(4, 9, 2), float32], Tensor[(1, 616), float64], Tensor[(616), float64], Tensor[(616), float64], Tensor[(1320), float64]) */;
  %264 = floor_divide(%255, %256) /* ty=Tensor[(?, 10, 16), float32] */;
  %265 = %263.4;
  (%264, %265, %var_3035, %var_3036)
}

def @func_1236(%var_1211: Tensor[(1, 5, 3), float64]) -> (Tensor[(1, 5, 3), float64], Tensor[(616), float64], Tensor[(12, 110), int64]) {
  %266 = cast(%var_1211, dtype="float64") /* ty=Tensor[(1, 5, 3), float64] */;
  %267 = cast(meta[relay.Constant][22] /* ty=Tensor[(12, 110), float64] */, dtype="float64") /* ty=Tensor[(12, 110), float64] */;
  %268 = reshape(%267, newshape=[12, 10, 11]) /* ty=Tensor[(12, 10, 11), float64] */;
  %269 = @func_1001(%268) /* ty=(Tensor[(12, 10, 11), float64], Tensor[(8, 11, 7), float64], Tensor[(616), float64]) */;
  %270 = cast(meta[relay.Constant][22] /* ty=Tensor[(12, 110), float64] */, dtype="float64") /* ty=Tensor[(12, 110), float64] */;
  %271 = sigmoid(%270) /* ty=Tensor[(12, 110), float64] */;
  %272 = cast(meta[relay.Constant][22] /* ty=Tensor[(12, 110), float64] */, dtype="int64") /* ty=Tensor[(12, 110), int64] */;
  %273 = shape_of(%271, dtype="int32") /* ty=Tensor[(2), int32] */;
  %274 = cast(%271, dtype="int64") /* ty=Tensor[(12, 110), int64] */;
  %275 = dyn.reshape(%272, %273, newshape=[]) /* ty=Tensor[(?, ?), int64] */;
  %276 = erf(%266) /* ty=Tensor[(1, 5, 3), float64] */;
  %277 = %269.2;
  %278 = bitwise_and(%274, %275) /* ty=Tensor[(12, 110), int64] */;
  (%276, %277, %278)
}

def @func_7237(%var_7232: Tensor[(1, 2, 12), float64]) -> Tensor[(1, 2, 12), float64] {
  %279 = cast(%var_7232, dtype="float64") /* ty=Tensor[(1, 2, 12), float64] */;
  log10(%279) /* ty=Tensor[(1, 2, 12), float64] */
}

def @func_15001() -> (Tensor[(13, 12, 3), float32],) {
  %280 = @func_14933() /* ty=Tensor[(13, 12, 3), float32] */;
  (%280,)
}

def @func_6245(%var_6206: Tensor[(11, 10, 12), float32], %var_6207: Tensor[(11, 10, 12), float32]) -> (Tensor[(11, 10, 12), float32], Tensor[(5, 3, 4), bool], Tensor[(60), float32], Tensor[(3, 7, 5), uint32], Tensor[(105), uint32]) {
  %281 = cast(%var_6207, dtype="float32") /* ty=Tensor[(11, 10, 12), float32] */;
  %282 = shape_of(%var_6206, dtype="int32") /* ty=Tensor[(3), int32] */;
  %283 = cast(%var_6206, dtype="float32") /* ty=Tensor[(11, 10, 12), float32] */;
  %284 = dyn.reshape(%281, %282, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %285 = cast(meta[relay.Constant][23] /* ty=Tensor[(60), float32] */, dtype="float32") /* ty=Tensor[(60), float32] */;
  %286 = reshape(%285, newshape=[5, 3, 4]) /* ty=Tensor[(5, 3, 4), float32] */;
  %287 = cast(meta[relay.Constant][24] /* ty=Tensor[(105), uint32] */, dtype="uint32") /* ty=Tensor[(105), uint32] */;
  %288 = reshape(%287, newshape=[3, 7, 5]) /* ty=Tensor[(3, 7, 5), uint32] */;
  %289 = mod(%283, %284) /* ty=Tensor[(11, 10, 12), float32] */;
  %290 = @func_5988(%286) /* ty=Tensor[(5, 3, 4), bool] */;
  %291 = @func_3899(%288) /* ty=Tensor[(3, 7, 5), uint32] */;
  (%289, %290, meta[relay.Constant][23] /* ty=Tensor[(60), float32] */, %291, meta[relay.Constant][24] /* ty=Tensor[(105), uint32] */)
}

def @func_7683(%var_7643: uint32) -> Tensor[(10, 6, 9), uint32] {
  %292 = cast(%var_7643, dtype="uint32") /* ty=uint32 */;
  %293 = cast(meta[relay.Constant][25] /* ty=Tensor[(10, 6, 9), uint32] */, dtype="uint32") /* ty=Tensor[(10, 6, 9), uint32] */;
  subtract(%292, %293) /* ty=Tensor[(10, 6, 9), uint32] */
}

def @func_3899(%var_3887: Tensor[(3, 7, 5), uint32]) -> Tensor[(3, 7, 5), uint32] {
  %294 = cast(%var_3887, dtype="uint32") /* ty=Tensor[(3, 7, 5), uint32] */;
  %295 = shape_of(meta[relay.Constant][26] /* ty=Tensor[(3, 7, 5), uint32] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %296 = cast(meta[relay.Constant][26] /* ty=Tensor[(3, 7, 5), uint32] */, dtype="uint32") /* ty=Tensor[(3, 7, 5), uint32] */;
  %297 = dyn.reshape(%294, %295, newshape=[]) /* ty=Tensor[(?, ?, ?), uint32] */;
  add(%296, %297) /* ty=Tensor[(3, 7, 5), uint32] */
}

def @func_16128() -> Tensor[(13, 12, 3), float32] {
  @func_15144() /* ty=Tensor[(13, 12, 3), float32] */
}

def @func_3522(%var_3489: Tensor[(15, 9, 14), float64], %var_3494: Tensor[(196), uint32], %var_3495: Tensor[(15, 1), float64]) -> (Tensor[(616), float64], Tensor[(196), uint32], Tensor[(15, 1), float64], Tensor[(15, 9, 14), float64]) {
  %298 = cast(%var_3494, dtype="uint32") /* ty=Tensor[(196), uint32] */;
  %299 = cast(%var_3495, dtype="float64") /* ty=Tensor[(15, 1), float64] */;
  %300 = reshape(%298, newshape=[4, 7, 7]) /* ty=Tensor[(4, 7, 7), uint32] */;
  %301 = reshape(%299, newshape=[15]) /* ty=Tensor[(15), float64] */;
  %302 = @func_2061(%300, %301) /* ty=(Tensor[(12, 110), int64], Tensor[(15), float64], Tensor[(4, 7, 7), float64], Tensor[(4, 7, 7), float64], Tensor[(616), float64]) */;
  %303 = cast(%var_3489, dtype="float64") /* ty=Tensor[(15, 9, 14), float64] */;
  %304 = log2(%303) /* ty=Tensor[(15, 9, 14), float64] */;
  %305 = cast(%304, dtype="float64") /* ty=Tensor[(15, 9, 14), float64] */;
  %306 = %302.4;
  %307 = exp(%305) /* ty=Tensor[(15, 9, 14), float64] */;
  (%306, %var_3494, %var_3495, %307)
}

def @func_15418() -> (Tensor[(13, 12, 3), float32], Tensor[(13, 15, 16), float32], Tensor[(3120), float32], Tensor[(13, 12, 3), float32]) {
  %308 = @func_15001() /* ty=(Tensor[(13, 12, 3), float32],) */;
  %309 = cast(meta[relay.Constant][27] /* ty=Tensor[(3120), float32] */, dtype="float32") /* ty=Tensor[(3120), float32] */;
  %310 = reshape(%309, newshape=[13, 15, 16]) /* ty=Tensor[(13, 15, 16), float32] */;
  %311 = @func_8287(%310) /* ty=(Tensor[(13, 15, 16), float32],) */;
  %312 = @func_15309() /* ty=(Tensor[(13, 12, 3), float32],) */;
  %313 = %308.0;
  %314 = %311.0;
  %315 = %312.0;
  (%313, %314, meta[relay.Constant][27] /* ty=Tensor[(3120), float32] */, %315)
}

def @func_13771(%var_13755: Tensor[(288), float32], %var_13756: Tensor[(30), float32], %var_13762: Tensor[(144), float32]) -> (Tensor[(13, 14, 6), float32], Tensor[(1092), float32], Tensor[(4, 7, 7), float64], Tensor[(196), uint32], Tensor[(15, 1), float64], Tensor[(3, 10, ?), float32], Tensor[(288), float32], Tensor[(30), float32], Tensor[(16, 9, 16), bool], Tensor[(144), float32], Tensor[(2304), float32], Tensor[(13, 12, 8), float32]) {
  %316 = cast(meta[relay.Constant][28] /* ty=Tensor[(1092), float32] */, dtype="float32") /* ty=Tensor[(1092), float32] */;
  %317 = reshape(%316, newshape=[13, 14, 6]) /* ty=Tensor[(13, 14, 6), float32] */;
  %318 = cast(meta[relay.Constant][29] /* ty=Tensor[(196), uint32] */, dtype="uint32") /* ty=Tensor[(196), uint32] */;
  %319 = cast(meta[relay.Constant][30] /* ty=Tensor[(15, 1), float64] */, dtype="float64") /* ty=Tensor[(15, 1), float64] */;
  %320 = reshape(%318, newshape=[4, 7, 7]) /* ty=Tensor[(4, 7, 7), uint32] */;
  %321 = reshape(%319, newshape=[15]) /* ty=Tensor[(15), float64] */;
  %322 = @func_2061(%320, %321) /* ty=(Tensor[(12, 110), int64], Tensor[(15), float64], Tensor[(4, 7, 7), float64], Tensor[(4, 7, 7), float64], Tensor[(616), float64]) */;
  %323 = cast(%var_13755, dtype="float32") /* ty=Tensor[(288), float32] */;
  %324 = cast(%var_13756, dtype="float32") /* ty=Tensor[(30), float32] */;
  %325 = reshape(%323, newshape=[6, 3, 16]) /* ty=Tensor[(6, 3, 16), float32] */;
  %326 = reshape(%324, newshape=[30]) /* ty=Tensor[(30), float32] */;
  %327 = @func_8538(%325, %326) /* ty=(Tensor[(3, 10, ?), float32], Tensor[(30), float32], Tensor[(6, 3, 16), float64]) */;
  %328 = cast(%var_13762, dtype="float32") /* ty=Tensor[(144), float32] */;
  %329 = cast(meta[relay.Constant][31] /* ty=Tensor[(2304), float32] */, dtype="float32") /* ty=Tensor[(2304), float32] */;
  %330 = reshape(%328, newshape=[16, 9, 1]) /* ty=Tensor[(16, 9, 1), float32] */;
  %331 = reshape(%329, newshape=[16, 9, 16]) /* ty=Tensor[(16, 9, 16), float32] */;
  %332 = cast(meta[relay.Constant][32] /* ty=Tensor[(13, 12, 8), float32] */, dtype="float32") /* ty=Tensor[(13, 12, 8), float32] */;
  %333 = sin(%332) /* ty=Tensor[(13, 12, 8), float32] */;
  %334 = cast(%333, dtype="float32") /* ty=Tensor[(13, 12, 8), float32] */;
  %335 = @func_11932(%317) /* ty=Tensor[(13, 14, 6), float32] */;
  %336 = %322.3;
  %337 = %327.0;
  %338 = @func_1722(%330, %331) /* ty=Tensor[(16, 9, 16), bool] */;
  %339 = atanh(%334) /* ty=Tensor[(13, 12, 8), float32] */;
  (%335, meta[relay.Constant][28] /* ty=Tensor[(1092), float32] */, %336, meta[relay.Constant][29] /* ty=Tensor[(196), uint32] */, meta[relay.Constant][30] /* ty=Tensor[(15, 1), float64] */, %337, %var_13755, %var_13756, %338, %var_13762, meta[relay.Constant][31] /* ty=Tensor[(2304), float32] */, %339)
}

def @func_15261() -> (Tensor[(13, 12, 3), float32],) {
  %340 = @func_14933() /* ty=Tensor[(13, 12, 3), float32] */;
  (%340,)
}

def @func_4679(%var_4670: Tensor[(2, 16, 8), uint16], %var_4671: Tensor[(2, 16, 8), uint16]) -> (Tensor[(2, 16, 8), uint16], Tensor[(9, 1, 5), float32], Tensor[(1, 616), float64]) {
  %341 = cast(%var_4671, dtype="uint16") /* ty=Tensor[(2, 16, 8), uint16] */;
  %342 = shape_of(%var_4670, dtype="int32") /* ty=Tensor[(3), int32] */;
  %343 = cast(%var_4670, dtype="uint16") /* ty=Tensor[(2, 16, 8), uint16] */;
  %344 = dyn.reshape(%341, %342, newshape=[]) /* ty=Tensor[(?, ?, ?), uint16] */;
  %345 = cast(meta[relay.Constant][33] /* ty=Tensor[(1, 616), float64] */, dtype="float64") /* ty=Tensor[(1, 616), float64] */;
  %346 = reshape(%345, newshape=[1, 616]) /* ty=Tensor[(1, 616), float64] */;
  %347 = @func_590(%346) /* ty=(Tensor[(9, 1, 5), float32], Tensor[(8, 11, 7), float64], Tensor[(1, 616), float64]) */;
  %348 = maximum(%343, %344) /* ty=Tensor[(2, 16, 8), uint16] */;
  %349 = %347.0;
  (%348, %349, meta[relay.Constant][33] /* ty=Tensor[(1, 616), float64] */)
}

def @func_15274() -> Tensor[(6, 6, 11), float32] {
  %350 = cast(meta[relay.Constant][34] /* ty=Tensor[(6, 6, 11), float32] */, dtype="float32") /* ty=Tensor[(6, 6, 11), float32] */;
  cosh(%350) /* ty=Tensor[(6, 6, 11), float32] */
}

def @func_15899(%var_15793: int16, %var_15794: Tensor[(16, 1, 10), int16], %var_15833: Tensor[(1, 616), float64], %var_15870: Tensor[(105), uint32]) -> (Tensor[(16, 1, 10), int16], Tensor[(1, 616), float64], Tensor[(8, 11, 7), float32], Tensor[(9, 1, 5), float32], Tensor[(16, ?, 10), bool], Tensor[(1, 2, 12), float64], Tensor[(2, 12), float64], Tensor[(3, 7, 5), uint32], Tensor[(105), uint32], Tensor[(1, 8, 2), float64], Tensor[(16), float64]) {
  %351 = cast(%var_15793, dtype="int16") /* ty=int16 */;
  %352 = cast(%var_15794, dtype="int16") /* ty=Tensor[(16, 1, 10), int16] */;
  %353 = cast(%var_15833, dtype="float64") /* ty=Tensor[(1, 616), float64] */;
  %354 = reshape(%353, newshape=[8, 11, 7]) /* ty=Tensor[(8, 11, 7), float64] */;
  %355 = @func_300(%354) /* ty=(Tensor[(8, 11, 7), float64],) */;
  %356 = %355.0;
  %357 = cast(%356, dtype="float32") /* ty=Tensor[(8, 11, 7), float32] */;
  %358 = cast(%var_15833, dtype="float64") /* ty=Tensor[(1, 616), float64] */;
  %359 = reshape(%358, newshape=[1, 616]) /* ty=Tensor[(1, 616), float64] */;
  %360 = @func_590(%359) /* ty=(Tensor[(9, 1, 5), float32], Tensor[(8, 11, 7), float64], Tensor[(1, 616), float64]) */;
  %361 = cast(meta[relay.Constant][35] /* ty=Tensor[(16, 1, 10), int16] */, dtype="bool") /* ty=Tensor[(16, 1, 10), bool] */;
  %362 = shape_of(%var_15794, dtype="int32") /* ty=Tensor[(3), int32] */;
  %363 = cast(%var_15794, dtype="bool") /* ty=Tensor[(16, 1, 10), bool] */;
  %364 = dyn.reshape(%361, %362, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %365 = cast(meta[relay.Constant][36] /* ty=Tensor[(2, 12), float64] */, dtype="float64") /* ty=Tensor[(2, 12), float64] */;
  %366 = reshape(%365, newshape=[1, 2, 12]) /* ty=Tensor[(1, 2, 12), float64] */;
  %367 = cast(%var_15870, dtype="uint32") /* ty=Tensor[(105), uint32] */;
  %368 = reshape(%367, newshape=[3, 7, 5]) /* ty=Tensor[(3, 7, 5), uint32] */;
  %369 = cast(meta[relay.Constant][37] /* ty=Tensor[(16), float64] */, dtype="float64") /* ty=Tensor[(16), float64] */;
  %370 = reshape(%369, newshape=[1, 8, 2]) /* ty=Tensor[(1, 8, 2), float64] */;
  %371 = @func_13700(%370) /* ty=(Tensor[(1, 8, 2), float64],) */;
  %372 = left_shift(%351, %352) /* ty=Tensor[(16, 1, 10), int16] */;
  %373 = exp(%357) /* ty=Tensor[(8, 11, 7), float32] */;
  %374 = %360.0;
  %375 = less(%363, %364) /* ty=Tensor[(16, ?, 10), bool] */;
  %376 = @func_7237(%366) /* ty=Tensor[(1, 2, 12), float64] */;
  %377 = @func_3899(%368) /* ty=Tensor[(3, 7, 5), uint32] */;
  %378 = %371.0;
  (%372, %var_15833, %373, %374, %375, %376, meta[relay.Constant][36] /* ty=Tensor[(2, 12), float64] */, %377, %var_15870, %378, meta[relay.Constant][37] /* ty=Tensor[(16), float64] */)
}

def @func_3908(%var_3905: Tensor[(3, 13, 15), float64]) -> Tensor[(3, 13, 15), float64] {
  %379 = cast(%var_3905, dtype="float64") /* ty=Tensor[(3, 13, 15), float64] */;
  cos(%379) /* ty=Tensor[(3, 13, 15), float64] */
}

def @func_15517(%var_15472: Tensor[(13, 12, 3), float32], %var_15488: Tensor[(648), uint16], %var_15510: Tensor[(30, 1), float32]) -> (Tensor[(13, 12, 3), uint16], Tensor[(1344), uint16], uint32, Tensor[(648), uint16], Tensor[(5, 10, 13), bool], Tensor[(650), int16], Tensor[(3, 7, 5), uint32], Tensor[(105), uint32], Tensor[(2, 2, 10), bool], Tensor[(30, 1), float32], Tensor[(12, 14, 8), float32]) {
  %380 = @func_15001() /* ty=(Tensor[(13, 12, 3), float32],) */;
  %381 = %380.0;
  %382 = cast(%var_15472, dtype="uint16") /* ty=Tensor[(13, 12, 3), uint16] */;
  %383 = shape_of(%381, dtype="int32") /* ty=Tensor[(3), int32] */;
  %384 = cast(%381, dtype="uint16") /* ty=Tensor[(13, 12, 3), uint16] */;
  %385 = dyn.reshape(%382, %383, newshape=[]) /* ty=Tensor[(?, ?, ?), uint16] */;
  %386 = cast(%var_15488, dtype="uint16") /* ty=Tensor[(648), uint16] */;
  %387 = cast(%var_15488, dtype="uint16") /* ty=Tensor[(648), uint16] */;
  %388 = reshape(%386, newshape=[12, 6, 9]) /* ty=Tensor[(12, 6, 9), uint16] */;
  %389 = reshape(%387, newshape=[12, 6, 9]) /* ty=Tensor[(12, 6, 9), uint16] */;
  %390 = @func_11189(%388, %389) /* ty=(Tensor[(12, 6, 9), bool], Tensor[(10, 6, 9), uint32], uint32) */;
  %391 = cast(meta[relay.Constant][39] /* ty=Tensor[(650), int16] */, dtype="int16") /* ty=Tensor[(650), int16] */;
  %392 = reshape(%391, newshape=[5, 10, 13]) /* ty=Tensor[(5, 10, 13), int16] */;
  %393 = cast(meta[relay.Constant][40] /* ty=Tensor[(105), uint32] */, dtype="uint32") /* ty=Tensor[(105), uint32] */;
  %394 = reshape(%393, newshape=[3, 7, 5]) /* ty=Tensor[(3, 7, 5), uint32] */;
  %395 = cast(%var_15510, dtype="float32") /* ty=Tensor[(30, 1), float32] */;
  %396 = reshape(%395, newshape=[30]) /* ty=Tensor[(30), float32] */;
  %397 = @func_14334(%396) /* ty=(Tensor[(2, 2, 10), bool], Tensor[(3, 10, ?), float32], Tensor[(30), float32]) */;
  %398 = cast(meta[relay.Constant][38] /* ty=Tensor[(1344), uint16] */, dtype="uint16") /* ty=Tensor[(1344), uint16] */;
  %399 = reshape(%398, newshape=[12, 14, 8]) /* ty=Tensor[(12, 14, 8), uint16] */;
  %400 = @func_1652(%399) /* ty=(Tensor[(12, 14, 8), float32], Tensor[(12, 14, 8), float64], Tensor[(12, 14, 8), uint32]) */;
  %401 = %400.1;
  %402 = cast(%401, dtype="float32") /* ty=Tensor[(12, 14, 8), float32] */;
  %403 = logical_xor(%384, %385) /* ty=Tensor[(13, 12, 3), uint16] */;
  %404 = %390.2;
  %405 = @func_11960(%392) /* ty=Tensor[(5, 10, 13), bool] */;
  %406 = @func_3899(%394) /* ty=Tensor[(3, 7, 5), uint32] */;
  %407 = %397.0;
  %408 = tan(%402) /* ty=Tensor[(12, 14, 8), float32] */;
  (%403, meta[relay.Constant][38] /* ty=Tensor[(1344), uint16] */, %404, %var_15488, %405, meta[relay.Constant][39] /* ty=Tensor[(650), int16] */, %406, meta[relay.Constant][40] /* ty=Tensor[(105), uint32] */, %407, %var_15510, %408)
}

def @func_8144(%var_8131: Tensor[(3, 10, 1), float32]) -> Tensor[(3, 10, ?), float32] {
  %409 = cast(%var_8131, dtype="float32") /* ty=Tensor[(3, 10, 1), float32] */;
  %410 = atanh(%409) /* ty=Tensor[(3, 10, 1), float32] */;
  %411 = cast(%var_8131, dtype="float32") /* ty=Tensor[(3, 10, 1), float32] */;
  %412 = shape_of(%410, dtype="int32") /* ty=Tensor[(3), int32] */;
  %413 = cast(%410, dtype="float32") /* ty=Tensor[(3, 10, 1), float32] */;
  %414 = dyn.reshape(%411, %412, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  mod(%413, %414) /* ty=Tensor[(3, 10, ?), float32] */
}

def @func_14933() -> Tensor[(13, 12, 3), float32] {
  %415 = cast(meta[relay.Constant][41] /* ty=Tensor[(13, 12, 3), float32] */, dtype="float32") /* ty=Tensor[(13, 12, 3), float32] */;
  acosh(%415) /* ty=Tensor[(13, 12, 3), float32] */
}

def @func_15182() -> (Tensor[(13, 12, 3), float32],) {
  %416 = @func_15144() /* ty=Tensor[(13, 12, 3), float32] */;
  (%416,)
}

def @func_15633(%var_15624: Tensor[(1, 105), uint32]) -> (Tensor[(13, 12, 3), float32], Tensor[(3, 7, 5), uint32], Tensor[(1, 105), uint32]) {
  %417 = @func_15261() /* ty=(Tensor[(13, 12, 3), float32],) */;
  %418 = cast(%var_15624, dtype="uint32") /* ty=Tensor[(1, 105), uint32] */;
  %419 = reshape(%418, newshape=[3, 7, 5]) /* ty=Tensor[(3, 7, 5), uint32] */;
  %420 = %417.0;
  %421 = @func_3899(%419) /* ty=Tensor[(3, 7, 5), uint32] */;
  (%420, %421, %var_15624)
}

def @func_1722(%var_1715: Tensor[(16, 9, 1), float32], %var_1716: Tensor[(16, 9, 16), float32]) -> Tensor[(16, 9, 16), bool] {
  %422 = cast(%var_1715, dtype="bool") /* ty=Tensor[(16, 9, 1), bool] */;
  %423 = cast(%var_1716, dtype="bool") /* ty=Tensor[(16, 9, 16), bool] */;
  less(%422, %423) /* ty=Tensor[(16, 9, 16), bool] */
}

def @func_10762(%var_10702: Tensor[(14, 6, 13), uint8], %var_10703: Tensor[(14, 6, 13), uint8]) -> (Tensor[(14, 6, 13), uint32], Tensor[(3, 13, 8), float64], Tensor[(312), float64], Tensor[(8, 11, 7), float64], Tensor[(1320), float64], Tensor[(14, 6, 13), float64]) {
  %424 = cast(%var_10703, dtype="uint8") /* ty=Tensor[(14, 6, 13), uint8] */;
  %425 = shape_of(%var_10702, dtype="int32") /* ty=Tensor[(3), int32] */;
  %426 = cast(%var_10702, dtype="uint8") /* ty=Tensor[(14, 6, 13), uint8] */;
  %427 = dyn.reshape(%424, %425, newshape=[]) /* ty=Tensor[(?, ?, ?), uint8] */;
  %428 = bitwise_xor(%426, %427) /* ty=Tensor[(14, 6, 13), uint8] */;
  %429 = cast(%var_10702, dtype="uint32") /* ty=Tensor[(14, 6, 13), uint32] */;
  %430 = shape_of(%428, dtype="int32") /* ty=Tensor[(3), int32] */;
  %431 = cast(%428, dtype="uint32") /* ty=Tensor[(14, 6, 13), uint32] */;
  %432 = dyn.reshape(%429, %430, newshape=[]) /* ty=Tensor[(?, ?, ?), uint32] */;
  %433 = cast(meta[relay.Constant][42] /* ty=Tensor[(312), float64] */, dtype="float64") /* ty=Tensor[(312), float64] */;
  %434 = reshape(%433, newshape=[3, 13, 8]) /* ty=Tensor[(3, 13, 8), float64] */;
  %435 = cast(meta[relay.Constant][43] /* ty=Tensor[(1320), float64] */, dtype="float64") /* ty=Tensor[(1320), float64] */;
  %436 = reshape(%435, newshape=[12, 10, 11]) /* ty=Tensor[(12, 10, 11), float64] */;
  %437 = @func_1001(%436) /* ty=(Tensor[(12, 10, 11), float64], Tensor[(8, 11, 7), float64], Tensor[(616), float64]) */;
  %438 = cast(%var_10703, dtype="float64") /* ty=Tensor[(14, 6, 13), float64] */;
  %439 = logical_xor(%431, %432) /* ty=Tensor[(14, 6, 13), uint32] */;
  %440 = @func_324(%434) /* ty=Tensor[(3, 13, 8), float64] */;
  %441 = %437.1;
  %442 = sin(%438) /* ty=Tensor[(14, 6, 13), float64] */;
  (%439, %440, meta[relay.Constant][42] /* ty=Tensor[(312), float64] */, %441, meta[relay.Constant][43] /* ty=Tensor[(1320), float64] */, %442)
}

def @func_9962(%var_9947: float64, %var_9948: Tensor[(16, 2, 2), float64]) -> Tensor[(16, 2, 2), float64] {
  %443 = cast(%var_9947, dtype="float64") /* ty=float64 */;
  %444 = cast(%var_9948, dtype="float64") /* ty=Tensor[(16, 2, 2), float64] */;
  multiply(%443, %444) /* ty=Tensor[(16, 2, 2), float64] */
}

def @func_12170(%var_12132: Tensor[(9, 7, 11), float64]) -> (Tensor[(9, 7, 11), float64], Tensor[(7, 15, 10), uint8], Tensor[(1, 1050), uint8], Tensor[(16, 2, 2), float64], float64, Tensor[(64), float64], Tensor[(3, 13, 16), int16], Tensor[(624), int16]) {
  %445 = cast(%var_12132, dtype="float64") /* ty=Tensor[(9, 7, 11), float64] */;
  %446 = cast(meta[relay.Constant][44] /* ty=Tensor[(1, 1050), uint8] */, dtype="uint8") /* ty=Tensor[(1, 1050), uint8] */;
  %447 = cast(meta[relay.Constant][44] /* ty=Tensor[(1, 1050), uint8] */, dtype="uint8") /* ty=Tensor[(1, 1050), uint8] */;
  %448 = reshape(%446, newshape=[7, 15, 10]) /* ty=Tensor[(7, 15, 10), uint8] */;
  %449 = reshape(%447, newshape=[7, 15, 10]) /* ty=Tensor[(7, 15, 10), uint8] */;
  %450 = cast(-8.71211f64 /* ty=float64 */, dtype="float64") /* ty=float64 */;
  %451 = cast(meta[relay.Constant][45] /* ty=Tensor[(64), float64] */, dtype="float64") /* ty=Tensor[(64), float64] */;
  %452 = reshape(%450, newshape=[]) /* ty=float64 */;
  %453 = reshape(%451, newshape=[16, 2, 2]) /* ty=Tensor[(16, 2, 2), float64] */;
  %454 = cast(meta[relay.Constant][46] /* ty=Tensor[(624), int16] */, dtype="int16") /* ty=Tensor[(624), int16] */;
  %455 = cast(meta[relay.Constant][46] /* ty=Tensor[(624), int16] */, dtype="int16") /* ty=Tensor[(624), int16] */;
  %456 = reshape(%454, newshape=[3, 13, 16]) /* ty=Tensor[(3, 13, 16), int16] */;
  %457 = reshape(%455, newshape=[3, 13, 16]) /* ty=Tensor[(3, 13, 16), int16] */;
  %458 = atan(%445) /* ty=Tensor[(9, 7, 11), float64] */;
  %459 = @func_11390(%448, %449) /* ty=Tensor[(7, 15, 10), uint8] */;
  %460 = @func_9962(%452, %453) /* ty=Tensor[(16, 2, 2), float64] */;
  %461 = @func_7588(%456, %457) /* ty=Tensor[(3, 13, 16), int16] */;
  (%458, %459, meta[relay.Constant][44] /* ty=Tensor[(1, 1050), uint8] */, %460, -8.71211f64 /* ty=float64 */, meta[relay.Constant][45] /* ty=Tensor[(64), float64] */, %461, meta[relay.Constant][46] /* ty=Tensor[(624), int16] */)
}

def @func_5858(%var_5855: Tensor[(7, 10, 6), float32]) -> (Tensor[(7, 10, 6), float32],) {
  %462 = cast(%var_5855, dtype="float32") /* ty=Tensor[(7, 10, 6), float32] */;
  %463 = acos(%462) /* ty=Tensor[(7, 10, 6), float32] */;
  (%463,)
}

def @func_8538(%var_8526: Tensor[(6, 3, 16), float32], %var_8531: Tensor[(30), float32]) -> (Tensor[(3, 10, ?), float32], Tensor[(30), float32], Tensor[(6, 3, 16), float64]) {
  %464 = cast(%var_8531, dtype="float32") /* ty=Tensor[(30), float32] */;
  %465 = reshape(%464, newshape=[3, 10, 1]) /* ty=Tensor[(3, 10, 1), float32] */;
  %466 = cast(%var_8526, dtype="float32") /* ty=Tensor[(6, 3, 16), float32] */;
  %467 = exp(%466) /* ty=Tensor[(6, 3, 16), float32] */;
  %468 = cast(%467, dtype="float64") /* ty=Tensor[(6, 3, 16), float64] */;
  %469 = @func_8144(%465) /* ty=Tensor[(3, 10, ?), float32] */;
  %470 = asinh(%468) /* ty=Tensor[(6, 3, 16), float64] */;
  (%469, %var_8531, %470)
}

def @func_15583(%var_15549: Tensor[(616), float64]) -> (Tensor[(2, 16, 8), uint16], Tensor[(256), uint16], Tensor[(9, 1, 5), float32], Tensor[(616), float64], Tensor[(13, 12, 3), uint8]) {
  %471 = cast(meta[relay.Constant][47] /* ty=Tensor[(256), uint16] */, dtype="uint16") /* ty=Tensor[(256), uint16] */;
  %472 = cast(meta[relay.Constant][47] /* ty=Tensor[(256), uint16] */, dtype="uint16") /* ty=Tensor[(256), uint16] */;
  %473 = reshape(%471, newshape=[2, 16, 8]) /* ty=Tensor[(2, 16, 8), uint16] */;
  %474 = reshape(%472, newshape=[2, 16, 8]) /* ty=Tensor[(2, 16, 8), uint16] */;
  %475 = @func_4679(%473, %474) /* ty=(Tensor[(2, 16, 8), uint16], Tensor[(9, 1, 5), float32], Tensor[(1, 616), float64]) */;
  %476 = cast(%var_15549, dtype="float64") /* ty=Tensor[(616), float64] */;
  %477 = reshape(%476, newshape=[1, 616]) /* ty=Tensor[(1, 616), float64] */;
  %478 = @func_590(%477) /* ty=(Tensor[(9, 1, 5), float32], Tensor[(8, 11, 7), float64], Tensor[(1, 616), float64]) */;
  %479 = @func_15261() /* ty=(Tensor[(13, 12, 3), float32],) */;
  %480 = %479.0;
  %481 = cast(%480, dtype="float32") /* ty=Tensor[(13, 12, 3), float32] */;
  %482 = erf(%481) /* ty=Tensor[(13, 12, 3), float32] */;
  %483 = cast(%482, dtype="float64") /* ty=Tensor[(13, 12, 3), float64] */;
  %484 = log(%483) /* ty=Tensor[(13, 12, 3), float64] */;
  %485 = cast(%484, dtype="uint8") /* ty=Tensor[(13, 12, 3), uint8] */;
  %486 = shape_of(%482, dtype="int32") /* ty=Tensor[(3), int32] */;
  %487 = cast(%482, dtype="uint8") /* ty=Tensor[(13, 12, 3), uint8] */;
  %488 = dyn.reshape(%485, %486, newshape=[]) /* ty=Tensor[(?, ?, ?), uint8] */;
  %489 = %475.0;
  %490 = %478.0;
  %491 = maximum(%487, %488) /* ty=Tensor[(13, 12, 3), uint8] */;
  (%489, meta[relay.Constant][47] /* ty=Tensor[(256), uint16] */, %490, %var_15549, %491)
}

def @func_1550(%var_1511: Tensor[(4, 9, 2), float32], %var_1512: Tensor[(4, 9, 2), float32], %var_1529: Tensor[(616), float64]) -> (Tensor[(1, 5, 3), float64], Tensor[(15), float64], Tensor[(4, 9, 2), float32], Tensor[(1, 616), float64], Tensor[(616), float64], Tensor[(616), float64], Tensor[(1320), float64]) {
  %492 = cast(meta[relay.Constant][48] /* ty=Tensor[(15), float64] */, dtype="float64") /* ty=Tensor[(15), float64] */;
  %493 = reshape(%492, newshape=[1, 5, 3]) /* ty=Tensor[(1, 5, 3), float64] */;
  %494 = @func_1236(%493) /* ty=(Tensor[(1, 5, 3), float64], Tensor[(616), float64], Tensor[(12, 110), int64]) */;
  %495 = cast(%var_1512, dtype="float32") /* ty=Tensor[(4, 9, 2), float32] */;
  %496 = shape_of(%var_1511, dtype="int32") /* ty=Tensor[(3), int32] */;
  %497 = cast(%var_1511, dtype="float32") /* ty=Tensor[(4, 9, 2), float32] */;
  %498 = dyn.reshape(%495, %496, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %499 = floor_mod(%497, %498) /* ty=Tensor[(4, 9, 2), float32] */;
  %500 = cast(%499, dtype="float32") /* ty=Tensor[(4, 9, 2), float32] */;
  %501 = shape_of(%var_1512, dtype="int32") /* ty=Tensor[(3), int32] */;
  %502 = cast(%var_1512, dtype="float32") /* ty=Tensor[(4, 9, 2), float32] */;
  %503 = dyn.reshape(%500, %501, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %504 = cast(%var_1529, dtype="float64") /* ty=Tensor[(616), float64] */;
  %505 = reshape(%504, newshape=[1, 616]) /* ty=Tensor[(1, 616), float64] */;
  %506 = @func_590(%505) /* ty=(Tensor[(9, 1, 5), float32], Tensor[(8, 11, 7), float64], Tensor[(1, 616), float64]) */;
  %507 = cast(meta[relay.Constant][49] /* ty=Tensor[(1320), float64] */, dtype="float64") /* ty=Tensor[(1320), float64] */;
  %508 = reshape(%507, newshape=[12, 10, 11]) /* ty=Tensor[(12, 10, 11), float64] */;
  %509 = @func_1001(%508) /* ty=(Tensor[(12, 10, 11), float64], Tensor[(8, 11, 7), float64], Tensor[(616), float64]) */;
  %510 = %494.0;
  %511 = mod(%502, %503) /* ty=Tensor[(4, 9, 2), float32] */;
  %512 = %506.2;
  %513 = %509.2;
  (%510, meta[relay.Constant][48] /* ty=Tensor[(15), float64] */, %511, %512, %var_1529, %513, meta[relay.Constant][49] /* ty=Tensor[(1320), float64] */)
}

def @func_1956(%var_1946: Tensor[(10, 16, 16), float64]) -> (Tensor[(10, 16, 16), float64],) {
  %514 = cast(meta[relay.Constant][50] /* ty=Tensor[(10, 16, 16), float64] */, dtype="float64") /* ty=Tensor[(10, 16, 16), float64] */;
  %515 = shape_of(%var_1946, dtype="int32") /* ty=Tensor[(3), int32] */;
  %516 = cast(%var_1946, dtype="float64") /* ty=Tensor[(10, 16, 16), float64] */;
  %517 = dyn.reshape(%514, %515, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %518 = floor_divide(%516, %517) /* ty=Tensor[(10, 16, 16), float64] */;
  (%518,)
}

def @func_16074() -> (Tensor[(13, 12, 3), float32],) {
  %519 = @func_15309() /* ty=(Tensor[(13, 12, 3), float32],) */;
  %520 = %519.0;
  (%520,)
}

def @func_11932(%var_11914: Tensor[(13, 14, 6), float32]) -> Tensor[(13, 14, 6), float32] {
  %521 = cast(%var_11914, dtype="float32") /* ty=Tensor[(13, 14, 6), float32] */;
  log(%521) /* ty=Tensor[(13, 14, 6), float32] */
}

def @func_300(%var_297: Tensor[(8, 11, 7), float64]) -> (Tensor[(8, 11, 7), float64],) {
  %522 = cast(%var_297, dtype="float64") /* ty=Tensor[(8, 11, 7), float64] */;
  %523 = rsqrt(%522) /* ty=Tensor[(8, 11, 7), float64] */;
  (%523,)
}

def @func_5988(%var_5971: Tensor[(5, 3, 4), float32]) -> Tensor[(5, 3, 4), bool] {
  %524 = cast(%var_5971, dtype="float32") /* ty=Tensor[(5, 3, 4), float32] */;
  %525 = sigmoid(%524) /* ty=Tensor[(5, 3, 4), float32] */;
  %526 = cast(%525, dtype="float64") /* ty=Tensor[(5, 3, 4), float64] */;
  %527 = log2(%526) /* ty=Tensor[(5, 3, 4), float64] */;
  %528 = cast(%527, dtype="bool") /* ty=Tensor[(5, 3, 4), bool] */;
  %529 = shape_of(%525, dtype="int32") /* ty=Tensor[(3), int32] */;
  %530 = cast(%525, dtype="bool") /* ty=Tensor[(5, 3, 4), bool] */;
  %531 = dyn.reshape(%528, %529, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  less_equal(%530, %531) /* ty=Tensor[(5, 3, 4), bool] */
}

def @func_2692(%var_2646: Tensor[(11, 7, 7), float32]) -> Tensor[(11, 7, 7), float64] {
  %532 = cast(%var_2646, dtype="float32") /* ty=Tensor[(11, 7, 7), float32] */;
  %533 = log(%532) /* ty=Tensor[(11, 7, 7), float32] */;
  %534 = cast(%533, dtype="float64") /* ty=Tensor[(11, 7, 7), float64] */;
  sin(%534) /* ty=Tensor[(11, 7, 7), float64] */
}

def @func_15052(%var_15028: Tensor[(539), float32]) -> (Tensor[(13, 12, 3), float64], Tensor[(11, 7, 7), float64], Tensor[(539), float32]) {
  %535 = @func_14933() /* ty=Tensor[(13, 12, 3), float32] */;
  %536 = cast(%535, dtype="float64") /* ty=Tensor[(13, 12, 3), float64] */;
  %537 = cast(%var_15028, dtype="float32") /* ty=Tensor[(539), float32] */;
  %538 = reshape(%537, newshape=[11, 7, 7]) /* ty=Tensor[(11, 7, 7), float32] */;
  %539 = asinh(%536) /* ty=Tensor[(13, 12, 3), float64] */;
  %540 = @func_2692(%538) /* ty=Tensor[(11, 7, 7), float64] */;
  (%539, %540, %var_15028)
}

def @func_1652(%var_1615: Tensor[(12, 14, 8), uint16]) -> (Tensor[(12, 14, 8), float32], Tensor[(12, 14, 8), float64], Tensor[(12, 14, 8), uint32]) {
  %541 = cast(%var_1615, dtype="uint16") /* ty=Tensor[(12, 14, 8), uint16] */;
  %542 = shape_of(meta[relay.Constant][51] /* ty=Tensor[(12, 14, 8), uint16] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %543 = cast(meta[relay.Constant][51] /* ty=Tensor[(12, 14, 8), uint16] */, dtype="uint16") /* ty=Tensor[(12, 14, 8), uint16] */;
  %544 = dyn.reshape(%541, %542, newshape=[]) /* ty=Tensor[(?, ?, ?), uint16] */;
  %545 = add(%543, %544) /* ty=Tensor[(12, 14, 8), uint16] */;
  %546 = cast(%545, dtype="float32") /* ty=Tensor[(12, 14, 8), float32] */;
  %547 = cast(meta[relay.Constant][51] /* ty=Tensor[(12, 14, 8), uint16] */, dtype="float64") /* ty=Tensor[(12, 14, 8), float64] */;
  %548 = cast(meta[relay.Constant][51] /* ty=Tensor[(12, 14, 8), uint16] */, dtype="float32") /* ty=Tensor[(12, 14, 8), float32] */;
  %549 = acosh(%548) /* ty=Tensor[(12, 14, 8), float32] */;
  %550 = cast(%var_1615, dtype="uint32") /* ty=Tensor[(12, 14, 8), uint32] */;
  %551 = shape_of(%549, dtype="int32") /* ty=Tensor[(3), int32] */;
  %552 = cast(%549, dtype="uint32") /* ty=Tensor[(12, 14, 8), uint32] */;
  %553 = dyn.reshape(%550, %551, newshape=[]) /* ty=Tensor[(?, ?, ?), uint32] */;
  %554 = log2(%546) /* ty=Tensor[(12, 14, 8), float32] */;
  %555 = exp(%547) /* ty=Tensor[(12, 14, 8), float64] */;
  %556 = bitwise_xor(%552, %553) /* ty=Tensor[(12, 14, 8), uint32] */;
  (%554, %555, %556)
}

def @func_15773(%var_15744: Tensor[(13, 12, 3), float32], %var_15770: Tensor[(650, 1), int16]) -> (Tensor[(13, 12, 3), int32], Tensor[(5, 10, 13), bool], Tensor[(650, 1), int16]) {
  %557 = @func_14933() /* ty=Tensor[(13, 12, 3), float32] */;
  %558 = cast(%var_15744, dtype="int32") /* ty=Tensor[(13, 12, 3), int32] */;
  %559 = shape_of(%557, dtype="int32") /* ty=Tensor[(3), int32] */;
  %560 = cast(%557, dtype="int32") /* ty=Tensor[(13, 12, 3), int32] */;
  %561 = dyn.reshape(%558, %559, newshape=[]) /* ty=Tensor[(?, ?, ?), int32] */;
  %562 = cast(%var_15770, dtype="int16") /* ty=Tensor[(650, 1), int16] */;
  %563 = reshape(%562, newshape=[5, 10, 13]) /* ty=Tensor[(5, 10, 13), int16] */;
  %564 = left_shift(%560, %561) /* ty=Tensor[(13, 12, 3), int32] */;
  %565 = @func_11960(%563) /* ty=Tensor[(5, 10, 13), bool] */;
  (%564, %565, %var_15770)
}

def @func_324(%var_321: Tensor[(3, 13, 8), float64]) -> Tensor[(3, 13, 8), float64] {
  %566 = cast(%var_321, dtype="float64") /* ty=Tensor[(3, 13, 8), float64] */;
  sinh(%566) /* ty=Tensor[(3, 13, 8), float64] */
}

def @func_15198(%var_15189: Tensor[(13, 4, 13), int32], %var_15190: Tensor[(13, 4, 13), int32]) -> Tensor[(13, 4, 13), int32] {
  %567 = cast(%var_15190, dtype="int32") /* ty=Tensor[(13, 4, 13), int32] */;
  %568 = shape_of(%var_15189, dtype="int32") /* ty=Tensor[(3), int32] */;
  %569 = cast(%var_15189, dtype="int32") /* ty=Tensor[(13, 4, 13), int32] */;
  %570 = dyn.reshape(%567, %568, newshape=[]) /* ty=Tensor[(?, ?, ?), int32] */;
  subtract(%569, %570) /* ty=Tensor[(13, 4, 13), int32] */
}

def @func_9907(%var_9899: Tensor[(16, 1, 12), bool], %var_9900: Tensor[(16, 1, 12), bool]) -> (Tensor[(16, ?, 12), bool],) {
  %571 = cast(%var_9900, dtype="bool") /* ty=Tensor[(16, 1, 12), bool] */;
  %572 = shape_of(%var_9899, dtype="int32") /* ty=Tensor[(3), int32] */;
  %573 = cast(%var_9899, dtype="bool") /* ty=Tensor[(16, 1, 12), bool] */;
  %574 = dyn.reshape(%571, %572, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %575 = logical_or(%573, %574) /* ty=Tensor[(16, ?, 12), bool] */;
  (%575,)
}

def @func_590(%var_588: Tensor[(1, 616), float64]) -> (Tensor[(9, 1, 5), float32], Tensor[(8, 11, 7), float64], Tensor[(1, 616), float64]) {
  %576 = cast(meta[relay.Constant][52] /* ty=Tensor[(9, 1, 5), float32] */, dtype="float32") /* ty=Tensor[(9, 1, 5), float32] */;
  %577 = cast(%var_588, dtype="float64") /* ty=Tensor[(1, 616), float64] */;
  %578 = reshape(%577, newshape=[8, 11, 7]) /* ty=Tensor[(8, 11, 7), float64] */;
  %579 = @func_300(%578) /* ty=(Tensor[(8, 11, 7), float64],) */;
  %580 = sin(%576) /* ty=Tensor[(9, 1, 5), float32] */;
  %581 = %579.0;
  (%580, %581, %var_588)
}

def @func_12626(%var_12604: Tensor[(13, 8, 10), int64], %var_12605: Tensor[(13, 8, 10), int64]) -> Tensor[(13, 8, 10), float32] {
  %582 = cast(%var_12605, dtype="bool") /* ty=Tensor[(13, 8, 10), bool] */;
  %583 = shape_of(%var_12604, dtype="int32") /* ty=Tensor[(3), int32] */;
  %584 = cast(%var_12604, dtype="bool") /* ty=Tensor[(13, 8, 10), bool] */;
  %585 = dyn.reshape(%582, %583, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %586 = greater_equal(%584, %585) /* ty=Tensor[(13, 8, 10), bool] */;
  %587 = cast(meta[relay.Constant][53] /* ty=Tensor[(13, 8, 10), bool] */, dtype="float32") /* ty=Tensor[(13, 8, 10), float32] */;
  %588 = shape_of(%586, dtype="int32") /* ty=Tensor[(3), int32] */;
  %589 = cast(%586, dtype="float32") /* ty=Tensor[(13, 8, 10), float32] */;
  %590 = dyn.reshape(%587, %588, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  power(%589, %590) /* ty=Tensor[(13, 8, 10), float32] */
}

def @func_9544(%var_9528: Tensor[(8, 9, 16), int8], %var_9538: Tensor[(539), float32]) -> (Tensor[(8, 9, 16), bool], Tensor[(539), bool]) {
  %591 = cast(meta[relay.Constant][54] /* ty=Tensor[(8, 9, 16), int8] */, dtype="bool") /* ty=Tensor[(8, 9, 16), bool] */;
  %592 = shape_of(%var_9528, dtype="int32") /* ty=Tensor[(3), int32] */;
  %593 = cast(%var_9528, dtype="bool") /* ty=Tensor[(8, 9, 16), bool] */;
  %594 = dyn.reshape(%591, %592, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %595 = cast(%var_9538, dtype="float32") /* ty=Tensor[(539), float32] */;
  %596 = reshape(%595, newshape=[11, 7, 7]) /* ty=Tensor[(11, 7, 7), float32] */;
  %597 = @func_2692(%596) /* ty=Tensor[(11, 7, 7), float64] */;
  %598 = cast(%597, dtype="bool") /* ty=Tensor[(11, 7, 7), bool] */;
  %599 = shape_of(%var_9538, dtype="int32") /* ty=Tensor[(1), int32] */;
  %600 = cast(%var_9538, dtype="bool") /* ty=Tensor[(539), bool] */;
  %601 = dyn.reshape(%598, %599, newshape=[]) /* ty=Tensor[(?), bool] */;
  %602 = not_equal(%593, %594) /* ty=Tensor[(8, 9, 16), bool] */;
  %603 = less(%600, %601) /* ty=Tensor[(539), bool] */;
  (%602, %603)
}

/* For debugging purposes the metadata section has been omitted.
 * If you would like to see the full metadata section you can set the 
 * option to `True` when invoking `astext`. 
 */
===================================
==========mutated_mod==========
#[version = "0.0.5"]
def @func_11962(%var_11961: Tensor[(5, 10, 13), int16]) -> Tensor[(5, 10, 13), bool] {
  %4 = fn (%var_11947: Tensor[(5, 10, 13), int16]) -> Tensor[(5, 10, 13), bool] {
    %0 = cast(meta[relay.Constant][0] /* ty=Tensor[(5, 10, 13), int16] */, dtype="bool") /* ty=Tensor[(5, 10, 13), bool] */;
    %1 = shape_of(%var_11947, dtype="int32") /* ty=Tensor[(3), int32] */;
    %2 = cast(%var_11947, dtype="bool") /* ty=Tensor[(5, 10, 13), bool] */;
    %3 = dyn.reshape(%0, %1, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    not_equal(%2, %3) /* ty=Tensor[(5, 10, 13), bool] */
  };
  %4(%var_11961) /* ty=Tensor[(5, 10, 13), bool] */
}

def @func_14934() -> Tensor[(13, 12, 3), float32] {
  %6 = fn () -> Tensor[(13, 12, 3), float32] {
    %5 = cast(meta[relay.Constant][1] /* ty=Tensor[(13, 12, 3), float32] */, dtype="float32") /* ty=Tensor[(13, 12, 3), float32] */;
    acosh(%5) /* ty=Tensor[(13, 12, 3), float32] */
  };
  %6() /* ty=Tensor[(13, 12, 3), float32] */
}

def @func_9548(%var_9546: Tensor[(8, 9, 16), int8], %var_9547: Tensor[(539), float32]) -> (Tensor[(8, 9, 16), bool], Tensor[(539), bool]) {
  @func_9544(%var_9546, %var_9547) /* ty=(Tensor[(8, 9, 16), bool], Tensor[(539), bool]) */
}

def @func_15362(%var_15360: Tensor[(1, 16), float64]) -> (Tensor[(6, 6, 11), float32], Tensor[(1, 8, 2), float64], Tensor[(1, 16), float64]) {
  @func_15359(%var_15360) /* ty=(Tensor[(6, 6, 11), float32], Tensor[(1, 8, 2), float64], Tensor[(1, 16), float64]) */
}

def @func_5277(%var_5266: int8) -> Tensor[(1, 8, 6), bool] {
  %7 = cast(%var_5266, dtype="bool") /* ty=bool */;
  %8 = cast(meta[relay.Constant][2] /* ty=Tensor[(1, 8, 6), int8] */, dtype="bool") /* ty=Tensor[(1, 8, 6), bool] */;
  greater(%7, %8) /* ty=Tensor[(1, 8, 6), bool] */
}

def @func_300(%var_297: Tensor[(8, 11, 7), float64]) -> (Tensor[(8, 11, 7), float64],) {
  %9 = cast(%var_297, dtype="float64") /* ty=Tensor[(8, 11, 7), float64] */;
  %10 = rsqrt(%9) /* ty=Tensor[(8, 11, 7), float64] */;
  (%10,)
}

def @func_15240(%var_15238: Tensor[(105), uint32]) -> (Tensor[(13, 12, 3), float32], Tensor[(3, 7, 5), uint32], Tensor[(105), uint32]) {
  @func_15237(%var_15238) /* ty=(Tensor[(13, 12, 3), float32], Tensor[(3, 7, 5), uint32], Tensor[(105), uint32]) */
}

def @func_1236(%var_1211: Tensor[(1, 5, 3), float64]) -> (Tensor[(1, 5, 3), float64], Tensor[(616), float64], Tensor[(12, 110), int64]) {
  %11 = cast(%var_1211, dtype="float64") /* ty=Tensor[(1, 5, 3), float64] */;
  %12 = cast(meta[relay.Constant][3] /* ty=Tensor[(12, 110), float64] */, dtype="float64") /* ty=Tensor[(12, 110), float64] */;
  %13 = reshape(%12, newshape=[12, 10, 11]) /* ty=Tensor[(12, 10, 11), float64] */;
  %14 = @func_1001(%13) /* ty=(Tensor[(12, 10, 11), float64], Tensor[(8, 11, 7), float64], Tensor[(616), float64]) */;
  %15 = cast(meta[relay.Constant][3] /* ty=Tensor[(12, 110), float64] */, dtype="float64") /* ty=Tensor[(12, 110), float64] */;
  %16 = sigmoid(%15) /* ty=Tensor[(12, 110), float64] */;
  %17 = cast(meta[relay.Constant][3] /* ty=Tensor[(12, 110), float64] */, dtype="int64") /* ty=Tensor[(12, 110), int64] */;
  %18 = shape_of(%16, dtype="int32") /* ty=Tensor[(2), int32] */;
  %19 = cast(%16, dtype="int64") /* ty=Tensor[(12, 110), int64] */;
  %20 = dyn.reshape(%17, %18, newshape=[]) /* ty=Tensor[(?, ?), int64] */;
  %21 = erf(%11) /* ty=Tensor[(1, 5, 3), float64] */;
  %22 = %14.2;
  %23 = bitwise_and(%19, %20) /* ty=Tensor[(12, 110), int64] */;
  (%21, %22, %23)
}

def @func_5988(%var_5971: Tensor[(5, 3, 4), float32]) -> Tensor[(5, 3, 4), bool] {
  %24 = cast(%var_5971, dtype="float32") /* ty=Tensor[(5, 3, 4), float32] */;
  %25 = sigmoid(%24) /* ty=Tensor[(5, 3, 4), float32] */;
  %26 = cast(%25, dtype="float64") /* ty=Tensor[(5, 3, 4), float64] */;
  %27 = log2(%26) /* ty=Tensor[(5, 3, 4), float64] */;
  %28 = cast(%27, dtype="bool") /* ty=Tensor[(5, 3, 4), bool] */;
  %29 = shape_of(%25, dtype="int32") /* ty=Tensor[(3), int32] */;
  %30 = cast(%25, dtype="bool") /* ty=Tensor[(5, 3, 4), bool] */;
  %31 = dyn.reshape(%28, %29, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  less_equal(%30, %31) /* ty=Tensor[(5, 3, 4), bool] */
}

def @func_15145() -> Tensor[(13, 12, 3), float32] {
  %33 = fn () -> Tensor[(13, 12, 3), float32] {
    %32 = @func_15001() /* ty=(Tensor[(13, 12, 3), float32],) */;
    %32.0
  };
  %33() /* ty=Tensor[(13, 12, 3), float32] */
}

def @func_15118() -> (Tensor[(13, 12, 3), float32],) {
  %34 = @func_14933() /* ty=Tensor[(13, 12, 3), float32] */;
  (%34,)
}

def @func_7592(%var_7590: Tensor[(3, 13, 16), int16], %var_7591: Tensor[(3, 13, 16), int16]) -> Tensor[(3, 13, 16), int16] {
  @func_7588(%var_7590, %var_7591) /* ty=Tensor[(3, 13, 16), int16] */
}

def @func_8423(%var_8421: Tensor[(1, 14, 8), float32]) -> Tensor[(1, 14, 8), float32] {
  @func_8420(%var_8421) /* ty=Tensor[(1, 14, 8), float32] */
}

def @func_15636(%var_15634: Tensor[(1, 105), uint32]) -> (Tensor[(13, 12, 3), float32], Tensor[(3, 7, 5), uint32], Tensor[(1, 105), uint32]) {
  @func_15633(%var_15634) /* ty=(Tensor[(13, 12, 3), float32], Tensor[(3, 7, 5), uint32], Tensor[(1, 105), uint32]) */
}

def @func_15729() -> (Tensor[(13, 12, 3), float32],) {
  @func_15727() /* ty=(Tensor[(13, 12, 3), float32],) */
}

def @func_5858(%var_5855: Tensor[(7, 10, 6), float32]) -> (Tensor[(7, 10, 6), float32],) {
  %35 = cast(%var_5855, dtype="float32") /* ty=Tensor[(7, 10, 6), float32] */;
  %36 = acos(%35) /* ty=Tensor[(7, 10, 6), float32] */;
  (%36,)
}

def @func_8420(%var_8409: Tensor[(1, 14, 8), float32]) -> Tensor[(1, 14, 8), float32] {
  %37 = cast(%var_8409, dtype="float32") /* ty=Tensor[(1, 14, 8), float32] */;
  sin(%37) /* ty=Tensor[(1, 14, 8), float32] */
}

def @func_5991(%var_5989: Tensor[(5, 3, 4), float32]) -> Tensor[(5, 3, 4), bool] {
  @func_5988(%var_5989) /* ty=Tensor[(5, 3, 4), bool] */
}

def @func_10762(%var_10702: Tensor[(14, 6, 13), uint8], %var_10703: Tensor[(14, 6, 13), uint8]) -> (Tensor[(14, 6, 13), uint32], Tensor[(3, 13, 8), float64], Tensor[(312), float64], Tensor[(8, 11, 7), float64], Tensor[(1320), float64], Tensor[(14, 6, 13), float64]) {
  %38 = cast(%var_10703, dtype="uint8") /* ty=Tensor[(14, 6, 13), uint8] */;
  %39 = shape_of(%var_10702, dtype="int32") /* ty=Tensor[(3), int32] */;
  %40 = cast(%var_10702, dtype="uint8") /* ty=Tensor[(14, 6, 13), uint8] */;
  %41 = dyn.reshape(%38, %39, newshape=[]) /* ty=Tensor[(?, ?, ?), uint8] */;
  %42 = bitwise_xor(%40, %41) /* ty=Tensor[(14, 6, 13), uint8] */;
  %43 = cast(%var_10702, dtype="uint32") /* ty=Tensor[(14, 6, 13), uint32] */;
  %44 = shape_of(%42, dtype="int32") /* ty=Tensor[(3), int32] */;
  %45 = cast(%42, dtype="uint32") /* ty=Tensor[(14, 6, 13), uint32] */;
  %46 = dyn.reshape(%43, %44, newshape=[]) /* ty=Tensor[(?, ?, ?), uint32] */;
  %47 = cast(meta[relay.Constant][4] /* ty=Tensor[(312), float64] */, dtype="float64") /* ty=Tensor[(312), float64] */;
  %48 = reshape(%47, newshape=[3, 13, 8]) /* ty=Tensor[(3, 13, 8), float64] */;
  %49 = cast(meta[relay.Constant][5] /* ty=Tensor[(1320), float64] */, dtype="float64") /* ty=Tensor[(1320), float64] */;
  %50 = reshape(%49, newshape=[12, 10, 11]) /* ty=Tensor[(12, 10, 11), float64] */;
  %51 = @func_1001(%50) /* ty=(Tensor[(12, 10, 11), float64], Tensor[(8, 11, 7), float64], Tensor[(616), float64]) */;
  %52 = cast(%var_10703, dtype="float64") /* ty=Tensor[(14, 6, 13), float64] */;
  %53 = logical_xor(%45, %46) /* ty=Tensor[(14, 6, 13), uint32] */;
  %54 = @func_324(%48) /* ty=Tensor[(3, 13, 8), float64] */;
  %55 = %51.1;
  %56 = sin(%52) /* ty=Tensor[(14, 6, 13), float64] */;
  (%53, %54, meta[relay.Constant][4] /* ty=Tensor[(312), float64] */, %55, meta[relay.Constant][5] /* ty=Tensor[(1320), float64] */, %56)
}

def @func_15202(%var_15200: Tensor[(13, 4, 13), int32], %var_15201: Tensor[(13, 4, 13), int32]) -> Tensor[(13, 4, 13), int32] {
  @func_15198(%var_15200, %var_15201) /* ty=Tensor[(13, 4, 13), int32] */
}

def @func_15727() -> (Tensor[(13, 12, 3), float32],) {
  %57 = @func_15309() /* ty=(Tensor[(13, 12, 3), float32],) */;
  %58 = %57.0;
  (%58,)
}

def @func_14706(%var_14704: Tensor[(7, 4, 7), float32]) -> (Tensor[(7, 4, 7), float32],) {
  @func_14703(%var_14704) /* ty=(Tensor[(7, 4, 7), float32],) */
}

def @func_2692(%var_2646: Tensor[(11, 7, 7), float32]) -> Tensor[(11, 7, 7), float64] {
  %59 = cast(%var_2646, dtype="float32") /* ty=Tensor[(11, 7, 7), float32] */;
  %60 = log(%59) /* ty=Tensor[(11, 7, 7), float32] */;
  %61 = cast(%60, dtype="float64") /* ty=Tensor[(11, 7, 7), float64] */;
  sin(%61) /* ty=Tensor[(11, 7, 7), float64] */
}

def @func_3522(%var_3489: Tensor[(15, 9, 14), float64], %var_3494: Tensor[(196), uint32], %var_3495: Tensor[(15, 1), float64]) -> (Tensor[(616), float64], Tensor[(196), uint32], Tensor[(15, 1), float64], Tensor[(15, 9, 14), float64]) {
  %62 = cast(%var_3494, dtype="uint32") /* ty=Tensor[(196), uint32] */;
  %63 = cast(%var_3495, dtype="float64") /* ty=Tensor[(15, 1), float64] */;
  %64 = reshape(%62, newshape=[4, 7, 7]) /* ty=Tensor[(4, 7, 7), uint32] */;
  %65 = reshape(%63, newshape=[15]) /* ty=Tensor[(15), float64] */;
  %66 = @func_2061(%64, %65) /* ty=(Tensor[(12, 110), int64], Tensor[(15), float64], Tensor[(4, 7, 7), float64], Tensor[(4, 7, 7), float64], Tensor[(616), float64]) */;
  %67 = cast(%var_3489, dtype="float64") /* ty=Tensor[(15, 9, 14), float64] */;
  %68 = log2(%67) /* ty=Tensor[(15, 9, 14), float64] */;
  %69 = cast(%68, dtype="float64") /* ty=Tensor[(15, 9, 14), float64] */;
  %70 = %66.4;
  %71 = exp(%69) /* ty=Tensor[(15, 9, 14), float64] */;
  (%70, %var_3494, %var_3495, %71)
}

def @func_11193(%var_11191: Tensor[(12, 6, 9), uint16], %var_11192: Tensor[(12, 6, 9), uint16]) -> (Tensor[(12, 6, 9), bool], Tensor[(10, 6, 9), uint32], uint32) {
  @func_11189(%var_11191, %var_11192) /* ty=(Tensor[(12, 6, 9), bool], Tensor[(10, 6, 9), uint32], uint32) */
}

def @func_14703(%var_14696: Tensor[(7, 4, 7), float32]) -> (Tensor[(7, 4, 7), float32],) {
  %72 = cast(meta[relay.Constant][6] /* ty=Tensor[(7, 4, 7), float32] */, dtype="float32") /* ty=Tensor[(7, 4, 7), float32] */;
  %73 = shape_of(%var_14696, dtype="int32") /* ty=Tensor[(3), int32] */;
  %74 = cast(%var_14696, dtype="float32") /* ty=Tensor[(7, 4, 7), float32] */;
  %75 = dyn.reshape(%72, %73, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %76 = mod(%74, %75) /* ty=Tensor[(7, 4, 7), float32] */;
  (%76,)
}

def @func_15054(%var_15053: Tensor[(539), float32]) -> (Tensor[(13, 12, 3), float64], Tensor[(11, 7, 7), float64], Tensor[(539), float32]) {
  %83 = fn (%var_15028: Tensor[(539), float32]) -> (Tensor[(13, 12, 3), float64], Tensor[(11, 7, 7), float64], Tensor[(539), float32]) {
    %77 = @func_14933() /* ty=Tensor[(13, 12, 3), float32] */;
    %78 = cast(%77, dtype="float64") /* ty=Tensor[(13, 12, 3), float64] */;
    %79 = cast(%var_15028, dtype="float32") /* ty=Tensor[(539), float32] */;
    %80 = reshape(%79, newshape=[11, 7, 7]) /* ty=Tensor[(11, 7, 7), float32] */;
    %81 = asinh(%78) /* ty=Tensor[(13, 12, 3), float64] */;
    %82 = @func_2692(%80) /* ty=Tensor[(11, 7, 7), float64] */;
    (%81, %82, %var_15028)
  };
  %83(%var_15053) /* ty=(Tensor[(13, 12, 3), float64], Tensor[(11, 7, 7), float64], Tensor[(539), float32]) */
}

def @func_7237(%var_7232: Tensor[(1, 2, 12), float64]) -> Tensor[(1, 2, 12), float64] {
  %84 = cast(%var_7232, dtype="float64") /* ty=Tensor[(1, 2, 12), float64] */;
  log10(%84) /* ty=Tensor[(1, 2, 12), float64] */
}

def @func_16040(%var_16036: Tensor[(144), float32], %var_16037: Tensor[(2304), float32], %var_16038: Tensor[(648), uint16], %var_16039: Tensor[(1040), int64]) -> (Tensor[(13, 12, 3), float32], Tensor[(144), float32], Tensor[(3, 7, 5), uint32], Tensor[(648), uint16], Tensor[(30), float32], Tensor[(16, 9, 16), bool], Tensor[(2304), int16], Tensor[(13, 8, 10), uint32], Tensor[(6, 3, 7), float64], Tensor[(126), float64], Tensor[(13, 12, 3), float32], Tensor[(2304), float32]) {
  @func_16034(%var_16036, %var_16037, %var_16038, %var_16039) /* ty=(Tensor[(13, 12, 3), float32], Tensor[(144), float32], Tensor[(3, 7, 5), uint32], Tensor[(648), uint16], Tensor[(30), float32], Tensor[(16, 9, 16), bool], Tensor[(2304), int16], Tensor[(13, 8, 10), uint32], Tensor[(6, 3, 7), float64], Tensor[(126), float64], Tensor[(13, 12, 3), float32], Tensor[(2304), float32]) */
}

def @func_9965(%var_9963: float64, %var_9964: Tensor[(16, 2, 2), float64]) -> Tensor[(16, 2, 2), float64] {
  %87 = fn (%var_9947: float64, %var_9948: Tensor[(16, 2, 2), float64]) -> Tensor[(16, 2, 2), float64] {
    %85 = cast(%var_9947, dtype="float64") /* ty=float64 */;
    %86 = cast(%var_9948, dtype="float64") /* ty=Tensor[(16, 2, 2), float64] */;
    multiply(%85, %86) /* ty=Tensor[(16, 2, 2), float64] */
  };
  %87(%var_9963, %var_9964) /* ty=Tensor[(16, 2, 2), float64] */
}

def @func_15311() -> (Tensor[(13, 12, 3), float32],) {
  @func_15309() /* ty=(Tensor[(13, 12, 3), float32],) */
}

def @func_13700(%var_13689: Tensor[(1, 8, 2), float64]) -> (Tensor[(1, 8, 2), float64],) {
  %88 = cast(%var_13689, dtype="float64") /* ty=Tensor[(1, 8, 2), float64] */;
  %89 = sqrt(%88) /* ty=Tensor[(1, 8, 2), float64] */;
  (%89,)
}

def @func_16129() -> Tensor[(13, 12, 3), float32] {
  %90 = fn () -> Tensor[(13, 12, 3), float32] {
    @func_15144() /* ty=Tensor[(13, 12, 3), float32] */
  };
  %90() /* ty=Tensor[(13, 12, 3), float32] */
}

def @func_3045(%var_3043: Tensor[(72), float32], %var_3044: Tensor[(616), float64]) -> (Tensor[(?, 10, 16), float32], Tensor[(616), float64], Tensor[(72), float32], Tensor[(616), float64]) {
  %106 = fn (%var_3035: Tensor[(72), float32], %var_3036: Tensor[(616), float64]) -> (Tensor[(?, 10, 16), float32], Tensor[(616), float64], Tensor[(72), float32], Tensor[(616), float64]) {
    %91 = cast(meta[relay.Constant][7] /* ty=Tensor[(1, 10, 16), float64] */, dtype="float64") /* ty=Tensor[(1, 10, 16), float64] */;
    %92 = atan(%91) /* ty=Tensor[(1, 10, 16), float64] */;
    %93 = cast(meta[relay.Constant][7] /* ty=Tensor[(1, 10, 16), float64] */, dtype="float32") /* ty=Tensor[(1, 10, 16), float32] */;
    %94 = shape_of(%92, dtype="int32") /* ty=Tensor[(3), int32] */;
    %95 = cast(%92, dtype="float32") /* ty=Tensor[(1, 10, 16), float32] */;
    %96 = dyn.reshape(%93, %94, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
    %97 = cast(%var_3035, dtype="float32") /* ty=Tensor[(72), float32] */;
    %98 = cast(%var_3035, dtype="float32") /* ty=Tensor[(72), float32] */;
    %99 = cast(%var_3036, dtype="float64") /* ty=Tensor[(616), float64] */;
    %100 = reshape(%97, newshape=[4, 9, 2]) /* ty=Tensor[(4, 9, 2), float32] */;
    %101 = reshape(%98, newshape=[4, 9, 2]) /* ty=Tensor[(4, 9, 2), float32] */;
    %102 = reshape(%99, newshape=[616]) /* ty=Tensor[(616), float64] */;
    %103 = @func_1550(%100, %101, %102) /* ty=(Tensor[(1, 5, 3), float64], Tensor[(15), float64], Tensor[(4, 9, 2), float32], Tensor[(1, 616), float64], Tensor[(616), float64], Tensor[(616), float64], Tensor[(1320), float64]) */;
    %104 = floor_divide(%95, %96) /* ty=Tensor[(?, 10, 16), float32] */;
    %105 = %103.4;
    (%104, %105, %var_3035, %var_3036)
  };
  %106(%var_3043, %var_3044) /* ty=(Tensor[(?, 10, 16), float32], Tensor[(616), float64], Tensor[(72), float32], Tensor[(616), float64]) */
}

def @func_6316(%var_6298: Tensor[(14, 4, 5), int64], %var_6299: Tensor[(14, 4, 5), int64]) -> (Tensor[(14, 4, 5), bool], Tensor[(14, 4, 5), float32]) {
  %107 = cast(meta[relay.Constant][8] /* ty=Tensor[(14, 4, 5), int64] */, dtype="bool") /* ty=Tensor[(14, 4, 5), bool] */;
  %108 = shape_of(%var_6298, dtype="int32") /* ty=Tensor[(3), int32] */;
  %109 = cast(%var_6298, dtype="bool") /* ty=Tensor[(14, 4, 5), bool] */;
  %110 = dyn.reshape(%107, %108, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %111 = cast(%var_6299, dtype="bool") /* ty=Tensor[(14, 4, 5), bool] */;
  %112 = shape_of(%var_6298, dtype="int32") /* ty=Tensor[(3), int32] */;
  %113 = cast(%var_6298, dtype="bool") /* ty=Tensor[(14, 4, 5), bool] */;
  %114 = dyn.reshape(%111, %112, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %115 = equal(%113, %114) /* ty=Tensor[(14, 4, 5), bool] */;
  %116 = cast(%115, dtype="float64") /* ty=Tensor[(14, 4, 5), float64] */;
  %117 = log10(%116) /* ty=Tensor[(14, 4, 5), float64] */;
  %118 = cast(%117, dtype="float32") /* ty=Tensor[(14, 4, 5), float32] */;
  %119 = logical_and(%109, %110) /* ty=Tensor[(14, 4, 5), bool] */;
  %120 = atan(%118) /* ty=Tensor[(14, 4, 5), float32] */;
  (%119, %120)
}

def @func_15002() -> (Tensor[(13, 12, 3), float32],) {
  %122 = fn () -> (Tensor[(13, 12, 3), float32],) {
    %121 = @func_14933() /* ty=Tensor[(13, 12, 3), float32] */;
    (%121,)
  };
  %122() /* ty=(Tensor[(13, 12, 3), float32],) */
}

def @func_11394(%var_11392: Tensor[(7, 15, 10), uint8], %var_11393: Tensor[(7, 15, 10), uint8]) -> Tensor[(7, 15, 10), uint8] {
  @func_11390(%var_11392, %var_11393) /* ty=Tensor[(7, 15, 10), uint8] */
}

def @func_16180() -> (Tensor[(13, 12, 3), float32], Tensor[(1, 8, 2), float64], Tensor[(1, 16), float64], Tensor[(2, 16, 8), uint16], Tensor[(616), float64]) {
  %123 = @func_15418() /* ty=(Tensor[(13, 12, 3), float32], Tensor[(13, 15, 16), float32], Tensor[(3120), float32], Tensor[(13, 12, 3), float32]) */;
  %124 = cast(meta[relay.Constant][9] /* ty=Tensor[(1, 16), float64] */, dtype="float64") /* ty=Tensor[(1, 16), float64] */;
  %125 = reshape(%124, newshape=[1, 8, 2]) /* ty=Tensor[(1, 8, 2), float64] */;
  %126 = @func_13700(%125) /* ty=(Tensor[(1, 8, 2), float64],) */;
  %127 = cast(meta[relay.Constant][10] /* ty=Tensor[(616), float64] */, dtype="float64") /* ty=Tensor[(616), float64] */;
  %128 = reshape(%127, newshape=[616]) /* ty=Tensor[(616), float64] */;
  %129 = @func_15583(%128) /* ty=(Tensor[(2, 16, 8), uint16], Tensor[(256), uint16], Tensor[(9, 1, 5), float32], Tensor[(616), float64], Tensor[(13, 12, 3), uint8]) */;
  %130 = %123.3;
  %131 = %126.0;
  %132 = %129.0;
  (%130, %131, meta[relay.Constant][9] /* ty=Tensor[(1, 16), float64] */, %132, meta[relay.Constant][10] /* ty=Tensor[(616), float64] */)
}

def @func_2065(%var_2063: Tensor[(4, 7, 7), uint32], %var_2064: Tensor[(15), float64]) -> (Tensor[(12, 110), int64], Tensor[(15), float64], Tensor[(4, 7, 7), float64], Tensor[(4, 7, 7), float64], Tensor[(616), float64]) {
  @func_2061(%var_2063, %var_2064) /* ty=(Tensor[(12, 110), int64], Tensor[(15), float64], Tensor[(4, 7, 7), float64], Tensor[(4, 7, 7), float64], Tensor[(616), float64]) */
}

def @func_12172(%var_12171: Tensor[(9, 7, 11), float64]) -> (Tensor[(9, 7, 11), float64], Tensor[(7, 15, 10), uint8], Tensor[(1, 1050), uint8], Tensor[(16, 2, 2), float64], float64, Tensor[(64), float64], Tensor[(3, 13, 16), int16], Tensor[(624), int16]) {
  %150 = fn (%var_12132: Tensor[(9, 7, 11), float64]) -> (Tensor[(9, 7, 11), float64], Tensor[(7, 15, 10), uint8], Tensor[(1, 1050), uint8], Tensor[(16, 2, 2), float64], float64, Tensor[(64), float64], Tensor[(3, 13, 16), int16], Tensor[(624), int16]) {
    %133 = cast(%var_12132, dtype="float64") /* ty=Tensor[(9, 7, 11), float64] */;
    %134 = cast(meta[relay.Constant][11] /* ty=Tensor[(1, 1050), uint8] */, dtype="uint8") /* ty=Tensor[(1, 1050), uint8] */;
    %135 = cast(meta[relay.Constant][11] /* ty=Tensor[(1, 1050), uint8] */, dtype="uint8") /* ty=Tensor[(1, 1050), uint8] */;
    %136 = reshape(%134, newshape=[7, 15, 10]) /* ty=Tensor[(7, 15, 10), uint8] */;
    %137 = reshape(%135, newshape=[7, 15, 10]) /* ty=Tensor[(7, 15, 10), uint8] */;
    %138 = cast(-8.71211f64 /* ty=float64 */, dtype="float64") /* ty=float64 */;
    %139 = cast(meta[relay.Constant][12] /* ty=Tensor[(64), float64] */, dtype="float64") /* ty=Tensor[(64), float64] */;
    %140 = reshape(%138, newshape=[]) /* ty=float64 */;
    %141 = reshape(%139, newshape=[16, 2, 2]) /* ty=Tensor[(16, 2, 2), float64] */;
    %142 = cast(meta[relay.Constant][13] /* ty=Tensor[(624), int16] */, dtype="int16") /* ty=Tensor[(624), int16] */;
    %143 = cast(meta[relay.Constant][13] /* ty=Tensor[(624), int16] */, dtype="int16") /* ty=Tensor[(624), int16] */;
    %144 = reshape(%142, newshape=[3, 13, 16]) /* ty=Tensor[(3, 13, 16), int16] */;
    %145 = reshape(%143, newshape=[3, 13, 16]) /* ty=Tensor[(3, 13, 16), int16] */;
    %146 = atan(%133) /* ty=Tensor[(9, 7, 11), float64] */;
    %147 = @func_11390(%136, %137) /* ty=Tensor[(7, 15, 10), uint8] */;
    %148 = @func_9962(%140, %141) /* ty=Tensor[(16, 2, 2), float64] */;
    %149 = @func_7588(%144, %145) /* ty=Tensor[(3, 13, 16), int16] */;
    (%146, %147, meta[relay.Constant][11] /* ty=Tensor[(1, 1050), uint8] */, %148, -8.71211f64 /* ty=float64 */, meta[relay.Constant][12] /* ty=Tensor[(64), float64] */, %149, meta[relay.Constant][13] /* ty=Tensor[(624), int16] */)
  };
  %150(%var_12171) /* ty=(Tensor[(9, 7, 11), float64], Tensor[(7, 15, 10), uint8], Tensor[(1, 1050), uint8], Tensor[(16, 2, 2), float64], float64, Tensor[(64), float64], Tensor[(3, 13, 16), int16], Tensor[(624), int16]) */
}

def @func_8019(%var_8017: Tensor[(9, 11, 1), int16], %var_8018: Tensor[(9, 11, 4), int16]) -> Tensor[(9, 11, 4), int16] {
  %153 = fn (%var_8007: Tensor[(9, 11, 1), int16], %var_8008: Tensor[(9, 11, 4), int16]) -> Tensor[(9, 11, 4), int16] {
    %151 = cast(%var_8007, dtype="int16") /* ty=Tensor[(9, 11, 1), int16] */;
    %152 = cast(%var_8008, dtype="int16") /* ty=Tensor[(9, 11, 4), int16] */;
    right_shift(%151, %152) /* ty=Tensor[(9, 11, 4), int16] */
  };
  %153(%var_8017, %var_8018) /* ty=Tensor[(9, 11, 4), int16] */
}

def @func_1655(%var_1653: Tensor[(12, 14, 8), uint16]) -> (Tensor[(12, 14, 8), float32], Tensor[(12, 14, 8), float64], Tensor[(12, 14, 8), uint32]) {
  @func_1652(%var_1653) /* ty=(Tensor[(12, 14, 8), float32], Tensor[(12, 14, 8), float64], Tensor[(12, 14, 8), uint32]) */
}

def @func_326(%var_325: Tensor[(3, 13, 8), float64]) -> Tensor[(3, 13, 8), float64] {
  %155 = fn (%var_321: Tensor[(3, 13, 8), float64]) -> Tensor[(3, 13, 8), float64] {
    %154 = cast(%var_321, dtype="float64") /* ty=Tensor[(3, 13, 8), float64] */;
    sinh(%154) /* ty=Tensor[(3, 13, 8), float64] */
  };
  %155(%var_325) /* ty=Tensor[(3, 13, 8), float64] */
}

def @func_15521(%var_15518: Tensor[(13, 12, 3), float32], %var_15519: Tensor[(648), uint16], %var_15520: Tensor[(30, 1), float32]) -> (Tensor[(13, 12, 3), uint16], Tensor[(1344), uint16], uint32, Tensor[(648), uint16], Tensor[(5, 10, 13), bool], Tensor[(650), int16], Tensor[(3, 7, 5), uint32], Tensor[(105), uint32], Tensor[(2, 2, 10), bool], Tensor[(30, 1), float32], Tensor[(12, 14, 8), float32]) {
  %185 = fn (%var_15472: Tensor[(13, 12, 3), float32], %var_15488: Tensor[(648), uint16], %var_15510: Tensor[(30, 1), float32]) -> (Tensor[(13, 12, 3), uint16], Tensor[(1344), uint16], uint32, Tensor[(648), uint16], Tensor[(5, 10, 13), bool], Tensor[(650), int16], Tensor[(3, 7, 5), uint32], Tensor[(105), uint32], Tensor[(2, 2, 10), bool], Tensor[(30, 1), float32], Tensor[(12, 14, 8), float32]) {
    %156 = @func_15001() /* ty=(Tensor[(13, 12, 3), float32],) */;
    %157 = %156.0;
    %158 = cast(%var_15472, dtype="uint16") /* ty=Tensor[(13, 12, 3), uint16] */;
    %159 = shape_of(%157, dtype="int32") /* ty=Tensor[(3), int32] */;
    %160 = cast(%157, dtype="uint16") /* ty=Tensor[(13, 12, 3), uint16] */;
    %161 = dyn.reshape(%158, %159, newshape=[]) /* ty=Tensor[(?, ?, ?), uint16] */;
    %162 = cast(%var_15488, dtype="uint16") /* ty=Tensor[(648), uint16] */;
    %163 = cast(%var_15488, dtype="uint16") /* ty=Tensor[(648), uint16] */;
    %164 = reshape(%162, newshape=[12, 6, 9]) /* ty=Tensor[(12, 6, 9), uint16] */;
    %165 = reshape(%163, newshape=[12, 6, 9]) /* ty=Tensor[(12, 6, 9), uint16] */;
    %166 = @func_11189(%164, %165) /* ty=(Tensor[(12, 6, 9), bool], Tensor[(10, 6, 9), uint32], uint32) */;
    %167 = cast(meta[relay.Constant][15] /* ty=Tensor[(650), int16] */, dtype="int16") /* ty=Tensor[(650), int16] */;
    %168 = reshape(%167, newshape=[5, 10, 13]) /* ty=Tensor[(5, 10, 13), int16] */;
    %169 = cast(meta[relay.Constant][16] /* ty=Tensor[(105), uint32] */, dtype="uint32") /* ty=Tensor[(105), uint32] */;
    %170 = reshape(%169, newshape=[3, 7, 5]) /* ty=Tensor[(3, 7, 5), uint32] */;
    %171 = cast(%var_15510, dtype="float32") /* ty=Tensor[(30, 1), float32] */;
    %172 = reshape(%171, newshape=[30]) /* ty=Tensor[(30), float32] */;
    %173 = @func_14334(%172) /* ty=(Tensor[(2, 2, 10), bool], Tensor[(3, 10, ?), float32], Tensor[(30), float32]) */;
    %174 = cast(meta[relay.Constant][14] /* ty=Tensor[(1344), uint16] */, dtype="uint16") /* ty=Tensor[(1344), uint16] */;
    %175 = reshape(%174, newshape=[12, 14, 8]) /* ty=Tensor[(12, 14, 8), uint16] */;
    %176 = @func_1652(%175) /* ty=(Tensor[(12, 14, 8), float32], Tensor[(12, 14, 8), float64], Tensor[(12, 14, 8), uint32]) */;
    %177 = %176.1;
    %178 = cast(%177, dtype="float32") /* ty=Tensor[(12, 14, 8), float32] */;
    %179 = logical_xor(%160, %161) /* ty=Tensor[(13, 12, 3), uint16] */;
    %180 = %166.2;
    %181 = @func_11960(%168) /* ty=Tensor[(5, 10, 13), bool] */;
    %182 = @func_3899(%170) /* ty=Tensor[(3, 7, 5), uint32] */;
    %183 = %173.0;
    %184 = tan(%178) /* ty=Tensor[(12, 14, 8), float32] */;
    (%179, meta[relay.Constant][14] /* ty=Tensor[(1344), uint16] */, %180, %var_15488, %181, meta[relay.Constant][15] /* ty=Tensor[(650), int16] */, %182, meta[relay.Constant][16] /* ty=Tensor[(105), uint32] */, %183, %var_15510, %184)
  };
  %185(%var_15518, %var_15519, %var_15520) /* ty=(Tensor[(13, 12, 3), uint16], Tensor[(1344), uint16], uint32, Tensor[(648), uint16], Tensor[(5, 10, 13), bool], Tensor[(650), int16], Tensor[(3, 7, 5), uint32], Tensor[(105), uint32], Tensor[(2, 2, 10), bool], Tensor[(30, 1), float32], Tensor[(12, 14, 8), float32]) */
}

def @func_8147(%var_8145: Tensor[(3, 10, 1), float32]) -> Tensor[(3, 10, ?), float32] {
  @func_8144(%var_8145) /* ty=Tensor[(3, 10, ?), float32] */
}

def @func_15904(%var_15900: int16, %var_15901: Tensor[(16, 1, 10), int16], %var_15902: Tensor[(1, 616), float64], %var_15903: Tensor[(105), uint32]) -> (Tensor[(16, 1, 10), int16], Tensor[(1, 616), float64], Tensor[(8, 11, 7), float32], Tensor[(9, 1, 5), float32], Tensor[(16, ?, 10), bool], Tensor[(1, 2, 12), float64], Tensor[(2, 12), float64], Tensor[(3, 7, 5), uint32], Tensor[(105), uint32], Tensor[(1, 8, 2), float64], Tensor[(16), float64]) {
  %214 = fn (%var_15793: int16, %var_15794: Tensor[(16, 1, 10), int16], %var_15833: Tensor[(1, 616), float64], %var_15870: Tensor[(105), uint32]) -> (Tensor[(16, 1, 10), int16], Tensor[(1, 616), float64], Tensor[(8, 11, 7), float32], Tensor[(9, 1, 5), float32], Tensor[(16, ?, 10), bool], Tensor[(1, 2, 12), float64], Tensor[(2, 12), float64], Tensor[(3, 7, 5), uint32], Tensor[(105), uint32], Tensor[(1, 8, 2), float64], Tensor[(16), float64]) {
    %186 = cast(%var_15793, dtype="int16") /* ty=int16 */;
    %187 = cast(%var_15794, dtype="int16") /* ty=Tensor[(16, 1, 10), int16] */;
    %188 = cast(%var_15833, dtype="float64") /* ty=Tensor[(1, 616), float64] */;
    %189 = reshape(%188, newshape=[8, 11, 7]) /* ty=Tensor[(8, 11, 7), float64] */;
    %190 = @func_300(%189) /* ty=(Tensor[(8, 11, 7), float64],) */;
    %191 = %190.0;
    %192 = cast(%191, dtype="float32") /* ty=Tensor[(8, 11, 7), float32] */;
    %193 = cast(%var_15833, dtype="float64") /* ty=Tensor[(1, 616), float64] */;
    %194 = reshape(%193, newshape=[1, 616]) /* ty=Tensor[(1, 616), float64] */;
    %195 = @func_590(%194) /* ty=(Tensor[(9, 1, 5), float32], Tensor[(8, 11, 7), float64], Tensor[(1, 616), float64]) */;
    %196 = cast(meta[relay.Constant][17] /* ty=Tensor[(16, 1, 10), int16] */, dtype="bool") /* ty=Tensor[(16, 1, 10), bool] */;
    %197 = shape_of(%var_15794, dtype="int32") /* ty=Tensor[(3), int32] */;
    %198 = cast(%var_15794, dtype="bool") /* ty=Tensor[(16, 1, 10), bool] */;
    %199 = dyn.reshape(%196, %197, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    %200 = cast(meta[relay.Constant][18] /* ty=Tensor[(2, 12), float64] */, dtype="float64") /* ty=Tensor[(2, 12), float64] */;
    %201 = reshape(%200, newshape=[1, 2, 12]) /* ty=Tensor[(1, 2, 12), float64] */;
    %202 = cast(%var_15870, dtype="uint32") /* ty=Tensor[(105), uint32] */;
    %203 = reshape(%202, newshape=[3, 7, 5]) /* ty=Tensor[(3, 7, 5), uint32] */;
    %204 = cast(meta[relay.Constant][19] /* ty=Tensor[(16), float64] */, dtype="float64") /* ty=Tensor[(16), float64] */;
    %205 = reshape(%204, newshape=[1, 8, 2]) /* ty=Tensor[(1, 8, 2), float64] */;
    %206 = @func_13700(%205) /* ty=(Tensor[(1, 8, 2), float64],) */;
    %207 = left_shift(%186, %187) /* ty=Tensor[(16, 1, 10), int16] */;
    %208 = exp(%192) /* ty=Tensor[(8, 11, 7), float32] */;
    %209 = %195.0;
    %210 = less(%198, %199) /* ty=Tensor[(16, ?, 10), bool] */;
    %211 = @func_7237(%201) /* ty=Tensor[(1, 2, 12), float64] */;
    %212 = @func_3899(%203) /* ty=Tensor[(3, 7, 5), uint32] */;
    %213 = %206.0;
    (%207, %var_15833, %208, %209, %210, %211, meta[relay.Constant][18] /* ty=Tensor[(2, 12), float64] */, %212, %var_15870, %213, meta[relay.Constant][19] /* ty=Tensor[(16), float64] */)
  };
  %214(%var_15900, %var_15901, %var_15902, %var_15903) /* ty=(Tensor[(16, 1, 10), int16], Tensor[(1, 616), float64], Tensor[(8, 11, 7), float32], Tensor[(9, 1, 5), float32], Tensor[(16, ?, 10), bool], Tensor[(1, 2, 12), float64], Tensor[(2, 12), float64], Tensor[(3, 7, 5), uint32], Tensor[(105), uint32], Tensor[(1, 8, 2), float64], Tensor[(16), float64]) */
}

def @func_15420() -> (Tensor[(13, 12, 3), float32], Tensor[(13, 15, 16), float32], Tensor[(3120), float32], Tensor[(13, 12, 3), float32]) {
  @func_15418() /* ty=(Tensor[(13, 12, 3), float32], Tensor[(13, 15, 16), float32], Tensor[(3120), float32], Tensor[(13, 12, 3), float32]) */
}

def @func_3901(%var_3900: Tensor[(3, 7, 5), uint32]) -> Tensor[(3, 7, 5), uint32] {
  %219 = fn (%var_3887: Tensor[(3, 7, 5), uint32]) -> Tensor[(3, 7, 5), uint32] {
    %215 = cast(%var_3887, dtype="uint32") /* ty=Tensor[(3, 7, 5), uint32] */;
    %216 = shape_of(meta[relay.Constant][20] /* ty=Tensor[(3, 7, 5), uint32] */, dtype="int32") /* ty=Tensor[(3), int32] */;
    %217 = cast(meta[relay.Constant][20] /* ty=Tensor[(3, 7, 5), uint32] */, dtype="uint32") /* ty=Tensor[(3, 7, 5), uint32] */;
    %218 = dyn.reshape(%215, %216, newshape=[]) /* ty=Tensor[(?, ?, ?), uint32] */;
    add(%217, %218) /* ty=Tensor[(3, 7, 5), uint32] */
  };
  %219(%var_3900) /* ty=Tensor[(3, 7, 5), uint32] */
}

def @func_1652(%var_1615: Tensor[(12, 14, 8), uint16]) -> (Tensor[(12, 14, 8), float32], Tensor[(12, 14, 8), float64], Tensor[(12, 14, 8), uint32]) {
  %220 = cast(%var_1615, dtype="uint16") /* ty=Tensor[(12, 14, 8), uint16] */;
  %221 = shape_of(meta[relay.Constant][21] /* ty=Tensor[(12, 14, 8), uint16] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %222 = cast(meta[relay.Constant][21] /* ty=Tensor[(12, 14, 8), uint16] */, dtype="uint16") /* ty=Tensor[(12, 14, 8), uint16] */;
  %223 = dyn.reshape(%220, %221, newshape=[]) /* ty=Tensor[(?, ?, ?), uint16] */;
  %224 = add(%222, %223) /* ty=Tensor[(12, 14, 8), uint16] */;
  %225 = cast(%224, dtype="float32") /* ty=Tensor[(12, 14, 8), float32] */;
  %226 = cast(meta[relay.Constant][21] /* ty=Tensor[(12, 14, 8), uint16] */, dtype="float64") /* ty=Tensor[(12, 14, 8), float64] */;
  %227 = cast(meta[relay.Constant][21] /* ty=Tensor[(12, 14, 8), uint16] */, dtype="float32") /* ty=Tensor[(12, 14, 8), float32] */;
  %228 = acosh(%227) /* ty=Tensor[(12, 14, 8), float32] */;
  %229 = cast(%var_1615, dtype="uint32") /* ty=Tensor[(12, 14, 8), uint32] */;
  %230 = shape_of(%228, dtype="int32") /* ty=Tensor[(3), int32] */;
  %231 = cast(%228, dtype="uint32") /* ty=Tensor[(12, 14, 8), uint32] */;
  %232 = dyn.reshape(%229, %230, newshape=[]) /* ty=Tensor[(?, ?, ?), uint32] */;
  %233 = log2(%225) /* ty=Tensor[(12, 14, 8), float32] */;
  %234 = exp(%226) /* ty=Tensor[(12, 14, 8), float64] */;
  %235 = bitwise_xor(%231, %232) /* ty=Tensor[(12, 14, 8), uint32] */;
  (%233, %234, %235)
}

def @func_15263() -> (Tensor[(13, 12, 3), float32],) {
  @func_15261() /* ty=(Tensor[(13, 12, 3), float32],) */
}

def @func_15418() -> (Tensor[(13, 12, 3), float32], Tensor[(13, 15, 16), float32], Tensor[(3120), float32], Tensor[(13, 12, 3), float32]) {
  %236 = @func_15001() /* ty=(Tensor[(13, 12, 3), float32],) */;
  %237 = cast(meta[relay.Constant][22] /* ty=Tensor[(3120), float32] */, dtype="float32") /* ty=Tensor[(3120), float32] */;
  %238 = reshape(%237, newshape=[13, 15, 16]) /* ty=Tensor[(13, 15, 16), float32] */;
  %239 = @func_8287(%238) /* ty=(Tensor[(13, 15, 16), float32],) */;
  %240 = @func_15309() /* ty=(Tensor[(13, 12, 3), float32],) */;
  %241 = %236.0;
  %242 = %239.0;
  %243 = %240.0;
  (%241, %242, meta[relay.Constant][22] /* ty=Tensor[(3120), float32] */, %243)
}

def @func_5861(%var_5859: Tensor[(7, 10, 6), float32]) -> (Tensor[(7, 10, 6), float32],) {
  @func_5858(%var_5859) /* ty=(Tensor[(7, 10, 6), float32],) */
}

def @func_16034(%var_15943: Tensor[(144), float32], %var_15944: Tensor[(2304), float32], %var_15949: Tensor[(648), uint16], %var_15959: Tensor[(1040), int64]) -> (Tensor[(13, 12, 3), float32], Tensor[(144), float32], Tensor[(3, 7, 5), uint32], Tensor[(648), uint16], Tensor[(30), float32], Tensor[(16, 9, 16), bool], Tensor[(2304), int16], Tensor[(13, 8, 10), uint32], Tensor[(6, 3, 7), float64], Tensor[(126), float64], Tensor[(13, 12, 3), float32], Tensor[(2304), float32]) {
  %244 = @func_15261() /* ty=(Tensor[(13, 12, 3), float32],) */;
  %245 = %244.0;
  %246 = cast(%245, dtype="float32") /* ty=Tensor[(13, 12, 3), float32] */;
  %247 = cast(%var_15949, dtype="uint16") /* ty=Tensor[(648), uint16] */;
  %248 = cast(meta[relay.Constant][23] /* ty=Tensor[(30), float32] */, dtype="float32") /* ty=Tensor[(30), float32] */;
  %249 = reshape(%246, newshape=[13, 12, 3]) /* ty=Tensor[(13, 12, 3), float32] */;
  %250 = reshape(%247, newshape=[648]) /* ty=Tensor[(648), uint16] */;
  %251 = reshape(%248, newshape=[30, 1]) /* ty=Tensor[(30, 1), float32] */;
  %252 = @func_15517(%249, %250, %251) /* ty=(Tensor[(13, 12, 3), uint16], Tensor[(1344), uint16], uint32, Tensor[(648), uint16], Tensor[(5, 10, 13), bool], Tensor[(650), int16], Tensor[(3, 7, 5), uint32], Tensor[(105), uint32], Tensor[(2, 2, 10), bool], Tensor[(30, 1), float32], Tensor[(12, 14, 8), float32]) */;
  %253 = cast(%var_15943, dtype="float32") /* ty=Tensor[(144), float32] */;
  %254 = cast(%var_15944, dtype="float32") /* ty=Tensor[(2304), float32] */;
  %255 = reshape(%253, newshape=[16, 9, 1]) /* ty=Tensor[(16, 9, 1), float32] */;
  %256 = reshape(%254, newshape=[16, 9, 16]) /* ty=Tensor[(16, 9, 16), float32] */;
  %257 = @func_1722(%255, %256) /* ty=Tensor[(16, 9, 16), bool] */;
  %258 = cast(%var_15944, dtype="bool") /* ty=Tensor[(2304), bool] */;
  %259 = shape_of(%257, dtype="int32") /* ty=Tensor[(3), int32] */;
  %260 = cast(%257, dtype="bool") /* ty=Tensor[(16, 9, 16), bool] */;
  %261 = dyn.reshape(%258, %259, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %262 = cast(%257, dtype="int16") /* ty=Tensor[(16, 9, 16), int16] */;
  %263 = shape_of(%var_15944, dtype="int32") /* ty=Tensor[(1), int32] */;
  %264 = cast(%var_15944, dtype="int16") /* ty=Tensor[(2304), int16] */;
  %265 = dyn.reshape(%262, %263, newshape=[]) /* ty=Tensor[(?), int16] */;
  %266 = cast(%var_15959, dtype="int64") /* ty=Tensor[(1040), int64] */;
  %267 = cast(%var_15959, dtype="int64") /* ty=Tensor[(1040), int64] */;
  %268 = reshape(%266, newshape=[13, 8, 10]) /* ty=Tensor[(13, 8, 10), int64] */;
  %269 = reshape(%267, newshape=[13, 8, 10]) /* ty=Tensor[(13, 8, 10), int64] */;
  %270 = @func_12626(%268, %269) /* ty=Tensor[(13, 8, 10), float32] */;
  %271 = cast(%var_15959, dtype="uint32") /* ty=Tensor[(1040), uint32] */;
  %272 = shape_of(%270, dtype="int32") /* ty=Tensor[(3), int32] */;
  %273 = cast(%270, dtype="uint32") /* ty=Tensor[(13, 8, 10), uint32] */;
  %274 = dyn.reshape(%271, %272, newshape=[]) /* ty=Tensor[(?, ?, ?), uint32] */;
  %275 = cast(meta[relay.Constant][24] /* ty=Tensor[(126), float64] */, dtype="float64") /* ty=Tensor[(126), float64] */;
  %276 = reshape(%275, newshape=[6, 3, 7]) /* ty=Tensor[(6, 3, 7), float64] */;
  %277 = @func_3420(%276) /* ty=(Tensor[(6, 3, 7), float64], Tensor[(6, 3, 7), float64]) */;
  %278 = @func_15727() /* ty=(Tensor[(13, 12, 3), float32],) */;
  %279 = cast(%var_15944, dtype="float32") /* ty=Tensor[(2304), float32] */;
  %280 = %252.6;
  %281 = greater_equal(%260, %261) /* ty=Tensor[(16, 9, 16), bool] */;
  %282 = minimum(%264, %265) /* ty=Tensor[(2304), int16] */;
  %283 = maximum(%273, %274) /* ty=Tensor[(13, 8, 10), uint32] */;
  %284 = %277.0;
  %285 = %278.0;
  %286 = log2(%279) /* ty=Tensor[(2304), float32] */;
  (%245, %var_15943, %280, %var_15949, meta[relay.Constant][23] /* ty=Tensor[(30), float32] */, %281, %282, %283, %284, meta[relay.Constant][24] /* ty=Tensor[(126), float64] */, %285, %286)
}

def @func_2124(%var_2122: Tensor[(8, 2, 4), uint8], %var_2123: Tensor[(8, 2, 4), uint8]) -> (Tensor[(8, 2, 4), uint8],) {
  %292 = fn (%var_2114: Tensor[(8, 2, 4), uint8], %var_2115: Tensor[(8, 2, 4), uint8]) -> (Tensor[(8, 2, 4), uint8],) {
    %287 = cast(%var_2115, dtype="uint8") /* ty=Tensor[(8, 2, 4), uint8] */;
    %288 = shape_of(%var_2114, dtype="int32") /* ty=Tensor[(3), int32] */;
    %289 = cast(%var_2114, dtype="uint8") /* ty=Tensor[(8, 2, 4), uint8] */;
    %290 = dyn.reshape(%287, %288, newshape=[]) /* ty=Tensor[(?, ?, ?), uint8] */;
    %291 = bitwise_or(%289, %290) /* ty=Tensor[(8, 2, 4), uint8] */;
    (%291,)
  };
  %292(%var_2122, %var_2123) /* ty=(Tensor[(8, 2, 4), uint8],) */
}

def @func_13776(%var_13773: Tensor[(288), float32], %var_13774: Tensor[(30), float32], %var_13775: Tensor[(144), float32]) -> (Tensor[(13, 14, 6), float32], Tensor[(1092), float32], Tensor[(4, 7, 7), float64], Tensor[(196), uint32], Tensor[(15, 1), float64], Tensor[(3, 10, ?), float32], Tensor[(288), float32], Tensor[(30), float32], Tensor[(16, 9, 16), bool], Tensor[(144), float32], Tensor[(2304), float32], Tensor[(13, 12, 8), float32]) {
  @func_13771(%var_13773, %var_13774, %var_13775) /* ty=(Tensor[(13, 14, 6), float32], Tensor[(1092), float32], Tensor[(4, 7, 7), float64], Tensor[(196), uint32], Tensor[(15, 1), float64], Tensor[(3, 10, ?), float32], Tensor[(288), float32], Tensor[(30), float32], Tensor[(16, 9, 16), bool], Tensor[(144), float32], Tensor[(2304), float32], Tensor[(13, 12, 8), float32]) */
}

def @func_592(%var_591: Tensor[(1, 616), float64]) -> (Tensor[(9, 1, 5), float32], Tensor[(8, 11, 7), float64], Tensor[(1, 616), float64]) {
  %299 = fn (%var_588: Tensor[(1, 616), float64]) -> (Tensor[(9, 1, 5), float32], Tensor[(8, 11, 7), float64], Tensor[(1, 616), float64]) {
    %293 = cast(meta[relay.Constant][25] /* ty=Tensor[(9, 1, 5), float32] */, dtype="float32") /* ty=Tensor[(9, 1, 5), float32] */;
    %294 = cast(%var_588, dtype="float64") /* ty=Tensor[(1, 616), float64] */;
    %295 = reshape(%294, newshape=[8, 11, 7]) /* ty=Tensor[(8, 11, 7), float64] */;
    %296 = @func_300(%295) /* ty=(Tensor[(8, 11, 7), float64],) */;
    %297 = sin(%293) /* ty=Tensor[(9, 1, 5), float32] */;
    %298 = %296.0;
    (%297, %298, %var_588)
  };
  %299(%var_591) /* ty=(Tensor[(9, 1, 5), float32], Tensor[(8, 11, 7), float64], Tensor[(1, 616), float64]) */
}

def @func_1239(%var_1237: Tensor[(1, 5, 3), float64]) -> (Tensor[(1, 5, 3), float64], Tensor[(616), float64], Tensor[(12, 110), int64]) {
  @func_1236(%var_1237) /* ty=(Tensor[(1, 5, 3), float64], Tensor[(616), float64], Tensor[(12, 110), int64]) */
}

def @func_14334(%var_14327: Tensor[(30), float32]) -> (Tensor[(2, 2, 10), bool], Tensor[(3, 10, ?), float32], Tensor[(30), float32]) {
  %300 = cast(meta[relay.Constant][27] /* ty=Tensor[(2, 2, 10), uint32] */, dtype="bool") /* ty=Tensor[(2, 2, 10), bool] */;
  %301 = shape_of(meta[relay.Constant][26] /* ty=Tensor[(2, 2, 10), uint32] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %302 = cast(meta[relay.Constant][26] /* ty=Tensor[(2, 2, 10), uint32] */, dtype="bool") /* ty=Tensor[(2, 2, 10), bool] */;
  %303 = dyn.reshape(%300, %301, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %304 = cast(%var_14327, dtype="float32") /* ty=Tensor[(30), float32] */;
  %305 = reshape(%304, newshape=[3, 10, 1]) /* ty=Tensor[(3, 10, 1), float32] */;
  %306 = equal(%302, %303) /* ty=Tensor[(2, 2, 10), bool] */;
  %307 = @func_8144(%305) /* ty=Tensor[(3, 10, ?), float32] */;
  (%306, %307, %var_14327)
}

def @func_8541(%var_8539: Tensor[(6, 3, 16), float32], %var_8540: Tensor[(30), float32]) -> (Tensor[(3, 10, ?), float32], Tensor[(30), float32], Tensor[(6, 3, 16), float64]) {
  %315 = fn (%var_8526: Tensor[(6, 3, 16), float32], %var_8531: Tensor[(30), float32]) -> (Tensor[(3, 10, ?), float32], Tensor[(30), float32], Tensor[(6, 3, 16), float64]) {
    %308 = cast(%var_8531, dtype="float32") /* ty=Tensor[(30), float32] */;
    %309 = reshape(%308, newshape=[3, 10, 1]) /* ty=Tensor[(3, 10, 1), float32] */;
    %310 = cast(%var_8526, dtype="float32") /* ty=Tensor[(6, 3, 16), float32] */;
    %311 = exp(%310) /* ty=Tensor[(6, 3, 16), float32] */;
    %312 = cast(%311, dtype="float64") /* ty=Tensor[(6, 3, 16), float64] */;
    %313 = @func_8144(%309) /* ty=Tensor[(3, 10, ?), float32] */;
    %314 = asinh(%312) /* ty=Tensor[(6, 3, 16), float64] */;
    (%313, %var_8531, %314)
  };
  %315(%var_8539, %var_8540) /* ty=(Tensor[(3, 10, ?), float32], Tensor[(30), float32], Tensor[(6, 3, 16), float64]) */
}

def @func_15183() -> (Tensor[(13, 12, 3), float32],) {
  %317 = fn () -> (Tensor[(13, 12, 3), float32],) {
    %316 = @func_15144() /* ty=Tensor[(13, 12, 3), float32] */;
    (%316,)
  };
  %317() /* ty=(Tensor[(13, 12, 3), float32],) */
}

def @func_2695(%var_2693: Tensor[(11, 7, 7), float32]) -> Tensor[(11, 7, 7), float64] {
  @func_2692(%var_2693) /* ty=Tensor[(11, 7, 7), float64] */
}

def @func_15198(%var_15189: Tensor[(13, 4, 13), int32], %var_15190: Tensor[(13, 4, 13), int32]) -> Tensor[(13, 4, 13), int32] {
  %318 = cast(%var_15190, dtype="int32") /* ty=Tensor[(13, 4, 13), int32] */;
  %319 = shape_of(%var_15189, dtype="int32") /* ty=Tensor[(3), int32] */;
  %320 = cast(%var_15189, dtype="int32") /* ty=Tensor[(13, 4, 13), int32] */;
  %321 = dyn.reshape(%318, %319, newshape=[]) /* ty=Tensor[(?, ?, ?), int32] */;
  subtract(%320, %321) /* ty=Tensor[(13, 4, 13), int32] */
}

def @func_13394(%var_13392: Tensor[(14, 10, 15), float64]) -> (Tensor[(14, 10, 15), float64], Tensor[(14, 6, 13), uint32], Tensor[(1092, 1), uint8]) {
  @func_13391(%var_13392) /* ty=(Tensor[(14, 10, 15), float64], Tensor[(14, 6, 13), uint32], Tensor[(1092, 1), uint8]) */
}

def @func_3400(%var_3396: Tensor[(14, 11, 8), uint8], %var_3397: Tensor[(14, 11, 8), uint8], %var_3398: Tensor[(72), float32], %var_3399: Tensor[(539), float32]) -> (Tensor[(14, 11, 8), bool], Tensor[(72), float32], Tensor[(72), float32], Tensor[(7, 88), float64], Tensor[(11, 7, 7), float64], Tensor[(539), float32]) {
  @func_3394(%var_3396, %var_3397, %var_3398, %var_3399) /* ty=(Tensor[(14, 11, 8), bool], Tensor[(72), float32], Tensor[(72), float32], Tensor[(7, 88), float64], Tensor[(11, 7, 7), float64], Tensor[(539), float32]) */
}

def @func_4679(%var_4670: Tensor[(2, 16, 8), uint16], %var_4671: Tensor[(2, 16, 8), uint16]) -> (Tensor[(2, 16, 8), uint16], Tensor[(9, 1, 5), float32], Tensor[(1, 616), float64]) {
  %322 = cast(%var_4671, dtype="uint16") /* ty=Tensor[(2, 16, 8), uint16] */;
  %323 = shape_of(%var_4670, dtype="int32") /* ty=Tensor[(3), int32] */;
  %324 = cast(%var_4670, dtype="uint16") /* ty=Tensor[(2, 16, 8), uint16] */;
  %325 = dyn.reshape(%322, %323, newshape=[]) /* ty=Tensor[(?, ?, ?), uint16] */;
  %326 = cast(meta[relay.Constant][28] /* ty=Tensor[(1, 616), float64] */, dtype="float64") /* ty=Tensor[(1, 616), float64] */;
  %327 = reshape(%326, newshape=[1, 616]) /* ty=Tensor[(1, 616), float64] */;
  %328 = @func_590(%327) /* ty=(Tensor[(9, 1, 5), float32], Tensor[(8, 11, 7), float64], Tensor[(1, 616), float64]) */;
  %329 = maximum(%324, %325) /* ty=Tensor[(2, 16, 8), uint16] */;
  %330 = %328.0;
  (%329, %330, meta[relay.Constant][28] /* ty=Tensor[(1, 616), float64] */)
}

def @func_3422(%var_3421: Tensor[(6, 3, 7), float64]) -> (Tensor[(6, 3, 7), float64], Tensor[(6, 3, 7), float64]) {
  %335 = fn (%var_3412: Tensor[(6, 3, 7), float64]) -> (Tensor[(6, 3, 7), float64], Tensor[(6, 3, 7), float64]) {
    %331 = cast(%var_3412, dtype="float64") /* ty=Tensor[(6, 3, 7), float64] */;
    %332 = cast(%var_3412, dtype="float64") /* ty=Tensor[(6, 3, 7), float64] */;
    %333 = sinh(%331) /* ty=Tensor[(6, 3, 7), float64] */;
    %334 = tan(%332) /* ty=Tensor[(6, 3, 7), float64] */;
    (%333, %334)
  };
  %335(%var_3421) /* ty=(Tensor[(6, 3, 7), float64], Tensor[(6, 3, 7), float64]) */
}

def @func_13771(%var_13755: Tensor[(288), float32], %var_13756: Tensor[(30), float32], %var_13762: Tensor[(144), float32]) -> (Tensor[(13, 14, 6), float32], Tensor[(1092), float32], Tensor[(4, 7, 7), float64], Tensor[(196), uint32], Tensor[(15, 1), float64], Tensor[(3, 10, ?), float32], Tensor[(288), float32], Tensor[(30), float32], Tensor[(16, 9, 16), bool], Tensor[(144), float32], Tensor[(2304), float32], Tensor[(13, 12, 8), float32]) {
  %336 = cast(meta[relay.Constant][29] /* ty=Tensor[(1092), float32] */, dtype="float32") /* ty=Tensor[(1092), float32] */;
  %337 = reshape(%336, newshape=[13, 14, 6]) /* ty=Tensor[(13, 14, 6), float32] */;
  %338 = cast(meta[relay.Constant][30] /* ty=Tensor[(196), uint32] */, dtype="uint32") /* ty=Tensor[(196), uint32] */;
  %339 = cast(meta[relay.Constant][31] /* ty=Tensor[(15, 1), float64] */, dtype="float64") /* ty=Tensor[(15, 1), float64] */;
  %340 = reshape(%338, newshape=[4, 7, 7]) /* ty=Tensor[(4, 7, 7), uint32] */;
  %341 = reshape(%339, newshape=[15]) /* ty=Tensor[(15), float64] */;
  %342 = @func_2061(%340, %341) /* ty=(Tensor[(12, 110), int64], Tensor[(15), float64], Tensor[(4, 7, 7), float64], Tensor[(4, 7, 7), float64], Tensor[(616), float64]) */;
  %343 = cast(%var_13755, dtype="float32") /* ty=Tensor[(288), float32] */;
  %344 = cast(%var_13756, dtype="float32") /* ty=Tensor[(30), float32] */;
  %345 = reshape(%343, newshape=[6, 3, 16]) /* ty=Tensor[(6, 3, 16), float32] */;
  %346 = reshape(%344, newshape=[30]) /* ty=Tensor[(30), float32] */;
  %347 = @func_8538(%345, %346) /* ty=(Tensor[(3, 10, ?), float32], Tensor[(30), float32], Tensor[(6, 3, 16), float64]) */;
  %348 = cast(%var_13762, dtype="float32") /* ty=Tensor[(144), float32] */;
  %349 = cast(meta[relay.Constant][32] /* ty=Tensor[(2304), float32] */, dtype="float32") /* ty=Tensor[(2304), float32] */;
  %350 = reshape(%348, newshape=[16, 9, 1]) /* ty=Tensor[(16, 9, 1), float32] */;
  %351 = reshape(%349, newshape=[16, 9, 16]) /* ty=Tensor[(16, 9, 16), float32] */;
  %352 = cast(meta[relay.Constant][33] /* ty=Tensor[(13, 12, 8), float32] */, dtype="float32") /* ty=Tensor[(13, 12, 8), float32] */;
  %353 = sin(%352) /* ty=Tensor[(13, 12, 8), float32] */;
  %354 = cast(%353, dtype="float32") /* ty=Tensor[(13, 12, 8), float32] */;
  %355 = @func_11932(%337) /* ty=Tensor[(13, 14, 6), float32] */;
  %356 = %342.3;
  %357 = %347.0;
  %358 = @func_1722(%350, %351) /* ty=Tensor[(16, 9, 16), bool] */;
  %359 = atanh(%354) /* ty=Tensor[(13, 12, 8), float32] */;
  (%355, meta[relay.Constant][29] /* ty=Tensor[(1092), float32] */, %356, meta[relay.Constant][30] /* ty=Tensor[(196), uint32] */, meta[relay.Constant][31] /* ty=Tensor[(15, 1), float64] */, %357, %var_13755, %var_13756, %358, %var_13762, meta[relay.Constant][32] /* ty=Tensor[(2304), float32] */, %359)
}

def @func_15633(%var_15624: Tensor[(1, 105), uint32]) -> (Tensor[(13, 12, 3), float32], Tensor[(3, 7, 5), uint32], Tensor[(1, 105), uint32]) {
  %360 = @func_15261() /* ty=(Tensor[(13, 12, 3), float32],) */;
  %361 = cast(%var_15624, dtype="uint32") /* ty=Tensor[(1, 105), uint32] */;
  %362 = reshape(%361, newshape=[3, 7, 5]) /* ty=Tensor[(3, 7, 5), uint32] */;
  %363 = %360.0;
  %364 = @func_3899(%362) /* ty=Tensor[(3, 7, 5), uint32] */;
  (%363, %364, %var_15624)
}

def @func_15776(%var_15774: Tensor[(13, 12, 3), float32], %var_15775: Tensor[(650, 1), int16]) -> (Tensor[(13, 12, 3), int32], Tensor[(5, 10, 13), bool], Tensor[(650, 1), int16]) {
  %374 = fn (%var_15744: Tensor[(13, 12, 3), float32], %var_15770: Tensor[(650, 1), int16]) -> (Tensor[(13, 12, 3), int32], Tensor[(5, 10, 13), bool], Tensor[(650, 1), int16]) {
    %365 = @func_14933() /* ty=Tensor[(13, 12, 3), float32] */;
    %366 = cast(%var_15744, dtype="int32") /* ty=Tensor[(13, 12, 3), int32] */;
    %367 = shape_of(%365, dtype="int32") /* ty=Tensor[(3), int32] */;
    %368 = cast(%365, dtype="int32") /* ty=Tensor[(13, 12, 3), int32] */;
    %369 = dyn.reshape(%366, %367, newshape=[]) /* ty=Tensor[(?, ?, ?), int32] */;
    %370 = cast(%var_15770, dtype="int16") /* ty=Tensor[(650, 1), int16] */;
    %371 = reshape(%370, newshape=[5, 10, 13]) /* ty=Tensor[(5, 10, 13), int16] */;
    %372 = left_shift(%368, %369) /* ty=Tensor[(13, 12, 3), int32] */;
    %373 = @func_11960(%371) /* ty=Tensor[(5, 10, 13), bool] */;
    (%372, %373, %var_15770)
  };
  %374(%var_15774, %var_15775) /* ty=(Tensor[(13, 12, 3), int32], Tensor[(5, 10, 13), bool], Tensor[(650, 1), int16]) */
}

def @func_6249(%var_6247: Tensor[(11, 10, 12), float32], %var_6248: Tensor[(11, 10, 12), float32]) -> (Tensor[(11, 10, 12), float32], Tensor[(5, 3, 4), bool], Tensor[(60), float32], Tensor[(3, 7, 5), uint32], Tensor[(105), uint32]) {
  @func_6245(%var_6247, %var_6248) /* ty=(Tensor[(11, 10, 12), float32], Tensor[(5, 3, 4), bool], Tensor[(60), float32], Tensor[(3, 7, 5), uint32], Tensor[(105), uint32]) */
}

def @func_4683(%var_4681: Tensor[(2, 16, 8), uint16], %var_4682: Tensor[(2, 16, 8), uint16]) -> (Tensor[(2, 16, 8), uint16], Tensor[(9, 1, 5), float32], Tensor[(1, 616), float64]) {
  @func_4679(%var_4681, %var_4682) /* ty=(Tensor[(2, 16, 8), uint16], Tensor[(9, 1, 5), float32], Tensor[(1, 616), float64]) */
}

def @func_15086(%var_15073: int8) -> (Tensor[(13, 12, 3), float32], Tensor[(1, 8, 6), bool], int8) {
  %375 = cast(%var_15073, dtype="int8") /* ty=int8 */;
  %376 = reshape(%375, newshape=[]) /* ty=int8 */;
  %377 = @func_14933() /* ty=Tensor[(13, 12, 3), float32] */;
  %378 = @func_5277(%376) /* ty=Tensor[(1, 8, 6), bool] */;
  (%377, %378, %var_15073)
}

def @func_9544(%var_9528: Tensor[(8, 9, 16), int8], %var_9538: Tensor[(539), float32]) -> (Tensor[(8, 9, 16), bool], Tensor[(539), bool]) {
  %379 = cast(meta[relay.Constant][34] /* ty=Tensor[(8, 9, 16), int8] */, dtype="bool") /* ty=Tensor[(8, 9, 16), bool] */;
  %380 = shape_of(%var_9528, dtype="int32") /* ty=Tensor[(3), int32] */;
  %381 = cast(%var_9528, dtype="bool") /* ty=Tensor[(8, 9, 16), bool] */;
  %382 = dyn.reshape(%379, %380, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %383 = cast(%var_9538, dtype="float32") /* ty=Tensor[(539), float32] */;
  %384 = reshape(%383, newshape=[11, 7, 7]) /* ty=Tensor[(11, 7, 7), float32] */;
  %385 = @func_2692(%384) /* ty=Tensor[(11, 7, 7), float64] */;
  %386 = cast(%385, dtype="bool") /* ty=Tensor[(11, 7, 7), bool] */;
  %387 = shape_of(%var_9538, dtype="int32") /* ty=Tensor[(1), int32] */;
  %388 = cast(%var_9538, dtype="bool") /* ty=Tensor[(539), bool] */;
  %389 = dyn.reshape(%386, %387, newshape=[]) /* ty=Tensor[(?), bool] */;
  %390 = not_equal(%381, %382) /* ty=Tensor[(8, 9, 16), bool] */;
  %391 = less(%388, %389) /* ty=Tensor[(539), bool] */;
  (%390, %391)
}

def @func_15261() -> (Tensor[(13, 12, 3), float32],) {
  %392 = @func_14933() /* ty=Tensor[(13, 12, 3), float32] */;
  (%392,)
}

def @func_8289(%var_8288: Tensor[(13, 15, 16), float32]) -> (Tensor[(13, 15, 16), float32],) {
  %395 = fn (%var_8272: Tensor[(13, 15, 16), float32]) -> (Tensor[(13, 15, 16), float32],) {
    %393 = cast(%var_8272, dtype="float32") /* ty=Tensor[(13, 15, 16), float32] */;
    %394 = atanh(%393) /* ty=Tensor[(13, 15, 16), float32] */;
    (%394,)
  };
  %395(%var_8288) /* ty=(Tensor[(13, 15, 16), float32],) */
}

def @func_3394(%var_3367: Tensor[(14, 11, 8), uint8], %var_3368: Tensor[(14, 11, 8), uint8], %var_3377: Tensor[(72), float32], %var_3389: Tensor[(539), float32]) -> (Tensor[(14, 11, 8), bool], Tensor[(72), float32], Tensor[(72), float32], Tensor[(7, 88), float64], Tensor[(11, 7, 7), float64], Tensor[(539), float32]) {
  %396 = cast(%var_3368, dtype="bool") /* ty=Tensor[(14, 11, 8), bool] */;
  %397 = shape_of(%var_3367, dtype="int32") /* ty=Tensor[(3), int32] */;
  %398 = cast(%var_3367, dtype="bool") /* ty=Tensor[(14, 11, 8), bool] */;
  %399 = dyn.reshape(%396, %397, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %400 = cast(%var_3377, dtype="float32") /* ty=Tensor[(72), float32] */;
  %401 = cast(meta[relay.Constant][35] /* ty=Tensor[(7, 88), float64] */, dtype="float64") /* ty=Tensor[(7, 88), float64] */;
  %402 = reshape(%400, newshape=[72]) /* ty=Tensor[(72), float32] */;
  %403 = reshape(%401, newshape=[616]) /* ty=Tensor[(616), float64] */;
  %404 = @func_3042(%402, %403) /* ty=(Tensor[(?, 10, 16), float32], Tensor[(616), float64], Tensor[(72), float32], Tensor[(616), float64]) */;
  %405 = cast(%var_3389, dtype="float32") /* ty=Tensor[(539), float32] */;
  %406 = reshape(%405, newshape=[11, 7, 7]) /* ty=Tensor[(11, 7, 7), float32] */;
  %407 = not_equal(%398, %399) /* ty=Tensor[(14, 11, 8), bool] */;
  %408 = %404.2;
  %409 = @func_2692(%406) /* ty=Tensor[(11, 7, 7), float64] */;
  (%407, %408, %var_3377, meta[relay.Constant][35] /* ty=Tensor[(7, 88), float64] */, %409, %var_3389)
}

def @func_15583(%var_15549: Tensor[(616), float64]) -> (Tensor[(2, 16, 8), uint16], Tensor[(256), uint16], Tensor[(9, 1, 5), float32], Tensor[(616), float64], Tensor[(13, 12, 3), uint8]) {
  %410 = cast(meta[relay.Constant][36] /* ty=Tensor[(256), uint16] */, dtype="uint16") /* ty=Tensor[(256), uint16] */;
  %411 = cast(meta[relay.Constant][36] /* ty=Tensor[(256), uint16] */, dtype="uint16") /* ty=Tensor[(256), uint16] */;
  %412 = reshape(%410, newshape=[2, 16, 8]) /* ty=Tensor[(2, 16, 8), uint16] */;
  %413 = reshape(%411, newshape=[2, 16, 8]) /* ty=Tensor[(2, 16, 8), uint16] */;
  %414 = @func_4679(%412, %413) /* ty=(Tensor[(2, 16, 8), uint16], Tensor[(9, 1, 5), float32], Tensor[(1, 616), float64]) */;
  %415 = cast(%var_15549, dtype="float64") /* ty=Tensor[(616), float64] */;
  %416 = reshape(%415, newshape=[1, 616]) /* ty=Tensor[(1, 616), float64] */;
  %417 = @func_590(%416) /* ty=(Tensor[(9, 1, 5), float32], Tensor[(8, 11, 7), float64], Tensor[(1, 616), float64]) */;
  %418 = @func_15261() /* ty=(Tensor[(13, 12, 3), float32],) */;
  %419 = %418.0;
  %420 = cast(%419, dtype="float32") /* ty=Tensor[(13, 12, 3), float32] */;
  %421 = erf(%420) /* ty=Tensor[(13, 12, 3), float32] */;
  %422 = cast(%421, dtype="float64") /* ty=Tensor[(13, 12, 3), float64] */;
  %423 = log(%422) /* ty=Tensor[(13, 12, 3), float64] */;
  %424 = cast(%423, dtype="uint8") /* ty=Tensor[(13, 12, 3), uint8] */;
  %425 = shape_of(%421, dtype="int32") /* ty=Tensor[(3), int32] */;
  %426 = cast(%421, dtype="uint8") /* ty=Tensor[(13, 12, 3), uint8] */;
  %427 = dyn.reshape(%424, %425, newshape=[]) /* ty=Tensor[(?, ?, ?), uint8] */;
  %428 = %414.0;
  %429 = %417.0;
  %430 = maximum(%426, %427) /* ty=Tensor[(13, 12, 3), uint8] */;
  (%428, meta[relay.Constant][36] /* ty=Tensor[(256), uint16] */, %429, %var_15549, %430)
}

def @func_15120() -> (Tensor[(13, 12, 3), float32],) {
  @func_15118() /* ty=(Tensor[(13, 12, 3), float32],) */
}

def @func_16182() -> (Tensor[(13, 12, 3), float32], Tensor[(1, 8, 2), float64], Tensor[(1, 16), float64], Tensor[(2, 16, 8), uint16], Tensor[(616), float64]) {
  @func_16180() /* ty=(Tensor[(13, 12, 3), float32], Tensor[(1, 8, 2), float64], Tensor[(1, 16), float64], Tensor[(2, 16, 8), uint16], Tensor[(616), float64]) */
}

def @func_9910(%var_9908: Tensor[(16, 1, 12), bool], %var_9909: Tensor[(16, 1, 12), bool]) -> (Tensor[(16, ?, 12), bool],) {
  %436 = fn (%var_9899: Tensor[(16, 1, 12), bool], %var_9900: Tensor[(16, 1, 12), bool]) -> (Tensor[(16, ?, 12), bool],) {
    %431 = cast(%var_9900, dtype="bool") /* ty=Tensor[(16, 1, 12), bool] */;
    %432 = shape_of(%var_9899, dtype="int32") /* ty=Tensor[(3), int32] */;
    %433 = cast(%var_9899, dtype="bool") /* ty=Tensor[(16, 1, 12), bool] */;
    %434 = dyn.reshape(%431, %432, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    %435 = logical_or(%433, %434) /* ty=Tensor[(16, ?, 12), bool] */;
    (%435,)
  };
  %436(%var_9908, %var_9909) /* ty=(Tensor[(16, ?, 12), bool],) */
}

def @func_13391(%var_13381: Tensor[(14, 10, 15), float64]) -> (Tensor[(14, 10, 15), float64], Tensor[(14, 6, 13), uint32], Tensor[(1092, 1), uint8]) {
  %437 = cast(%var_13381, dtype="float64") /* ty=Tensor[(14, 10, 15), float64] */;
  %438 = cast(meta[relay.Constant][37] /* ty=Tensor[(1092, 1), uint8] */, dtype="uint8") /* ty=Tensor[(1092, 1), uint8] */;
  %439 = cast(meta[relay.Constant][37] /* ty=Tensor[(1092, 1), uint8] */, dtype="uint8") /* ty=Tensor[(1092, 1), uint8] */;
  %440 = reshape(%438, newshape=[14, 6, 13]) /* ty=Tensor[(14, 6, 13), uint8] */;
  %441 = reshape(%439, newshape=[14, 6, 13]) /* ty=Tensor[(14, 6, 13), uint8] */;
  %442 = @func_10762(%440, %441) /* ty=(Tensor[(14, 6, 13), uint32], Tensor[(3, 13, 8), float64], Tensor[(312), float64], Tensor[(8, 11, 7), float64], Tensor[(1320), float64], Tensor[(14, 6, 13), float64]) */;
  %443 = asinh(%437) /* ty=Tensor[(14, 10, 15), float64] */;
  %444 = %442.0;
  (%443, %444, meta[relay.Constant][37] /* ty=Tensor[(1092, 1), uint8] */)
}

def @main() -> (Tensor[(13, 12, 3), float32], Tensor[(2100), float64], Tensor[(7, 10, 6), float32], Tensor[(420), float32], Tensor[(8, 11, 7), float64], Tensor[(1092, 616), float64], Tensor[(13, 12, 3), float32], Tensor[(13, 12, 3), float32], Tensor[(1092, ?), int16]) {
  %445 = @func_15729() /* ty=(Tensor[(13, 12, 3), float32],) */;
  %446 = cast(meta[relay.Constant][39] /* ty=Tensor[(420), float32] */, dtype="float32") /* ty=Tensor[(420), float32] */;
  %447 = reshape(%446, newshape=[7, 10, 6]) /* ty=Tensor[(7, 10, 6), float32] */;
  %448 = @func_5861(%447) /* ty=(Tensor[(7, 10, 6), float32],) */;
  %449 = cast(meta[relay.Constant][40] /* ty=Tensor[(616), float64] */, dtype="float64") /* ty=Tensor[(616), float64] */;
  %450 = reshape(%449, newshape=[8, 11, 7]) /* ty=Tensor[(8, 11, 7), float64] */;
  %451 = @func_303(%450) /* ty=(Tensor[(8, 11, 7), float64],) */;
  %452 = cast(meta[relay.Constant][38] /* ty=Tensor[(2100), float64] */, dtype="float64") /* ty=Tensor[(2100), float64] */;
  %453 = reshape(%452, newshape=[14, 10, 15]) /* ty=Tensor[(14, 10, 15), float64] */;
  %454 = @func_13394(%453) /* ty=(Tensor[(14, 10, 15), float64], Tensor[(14, 6, 13), uint32], Tensor[(1092, 1), uint8]) */;
  %455 = %454.2;
  %456 = cast(%455, dtype="float64") /* ty=Tensor[(1092, 1), float64] */;
  %457 = erf(%456) /* ty=Tensor[(1092, 1), float64] */;
  %458 = cast(%457, dtype="float32") /* ty=Tensor[(1092, 1), float32] */;
  %459 = atanh(%458) /* ty=Tensor[(1092, 1), float32] */;
  %460 = cast(%457, dtype="float64") /* ty=Tensor[(1092, 1), float64] */;
  %461 = acos(%460) /* ty=Tensor[(1092, 1), float64] */;
  %462 = cast(%461, dtype="bool") /* ty=Tensor[(1092, 1), bool] */;
  %463 = shape_of(%457, dtype="int32") /* ty=Tensor[(2), int32] */;
  %464 = cast(%457, dtype="bool") /* ty=Tensor[(1092, 1), bool] */;
  %465 = dyn.reshape(%462, %463, newshape=[]) /* ty=Tensor[(?, ?), bool] */;
  %466 = not_equal(%464, %465) /* ty=Tensor[(1092, ?), bool] */;
  %467 = cast(%466, dtype="uint64") /* ty=Tensor[(1092, ?), uint64] */;
  %468 = shape_of(%459, dtype="int32") /* ty=Tensor[(2), int32] */;
  %469 = cast(%459, dtype="uint64") /* ty=Tensor[(1092, 1), uint64] */;
  %470 = dyn.reshape(%467, %468, newshape=[]) /* ty=Tensor[(?, ?), uint64] */;
  %471 = subtract(%469, %470) /* ty=Tensor[(1092, ?), uint64] */;
  %472 = cast(%471, dtype="int16") /* ty=Tensor[(1092, ?), int16] */;
  %473 = cast(meta[relay.Constant][40] /* ty=Tensor[(616), float64] */, dtype="int16") /* ty=Tensor[(616), int16] */;
  %474 = bitwise_or(%472, %473) /* ty=Tensor[(1092, 616), int16] */;
  %475 = cast(%457, dtype="float64") /* ty=Tensor[(1092, 1), float64] */;
  %476 = cast(%474, dtype="float64") /* ty=Tensor[(1092, 616), float64] */;
  %477 = @func_16076() /* ty=(Tensor[(13, 12, 3), float32],) */;
  %478 = cast(%457, dtype="float32") /* ty=Tensor[(1092, 1), float32] */;
  %479 = rsqrt(%478) /* ty=Tensor[(1092, 1), float32] */;
  %480 = cast(%479, dtype="int16") /* ty=Tensor[(1092, 1), int16] */;
  %481 = shape_of(%471, dtype="int32") /* ty=Tensor[(2), int32] */;
  %482 = cast(%471, dtype="int16") /* ty=Tensor[(1092, ?), int16] */;
  %483 = dyn.reshape(%480, %481, newshape=[]) /* ty=Tensor[(?, ?), int16] */;
  %484 = %445.0;
  %485 = %448.0;
  %486 = %451.0;
  %487 = floor_mod(%475, %476) /* ty=Tensor[(1092, 616), float64] */;
  %488 = @func_14933() /* ty=Tensor[(13, 12, 3), float32] */;
  %489 = %477.0;
  %490 = left_shift(%482, %483) /* ty=Tensor[(1092, ?), int16] */;
  (%484, meta[relay.Constant][38] /* ty=Tensor[(2100), float64] */, %485, meta[relay.Constant][39] /* ty=Tensor[(420), float32] */, %486, %487, %488, %489, %490)
}

def @func_11189(%var_11133: Tensor[(12, 6, 9), uint16], %var_11134: Tensor[(12, 6, 9), uint16]) -> (Tensor[(12, 6, 9), bool], Tensor[(10, 6, 9), uint32], uint32) {
  %491 = cast(%var_11134, dtype="bool") /* ty=Tensor[(12, 6, 9), bool] */;
  %492 = shape_of(%var_11133, dtype="int32") /* ty=Tensor[(3), int32] */;
  %493 = cast(%var_11133, dtype="bool") /* ty=Tensor[(12, 6, 9), bool] */;
  %494 = dyn.reshape(%491, %492, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %495 = cast(meta[relay.Constant][41] /* ty=uint32 */, dtype="uint32") /* ty=uint32 */;
  %496 = reshape(%495, newshape=[]) /* ty=uint32 */;
  %497 = less(%493, %494) /* ty=Tensor[(12, 6, 9), bool] */;
  %498 = @func_7683(%496) /* ty=Tensor[(10, 6, 9), uint32] */;
  (%497, %498, meta[relay.Constant][41] /* ty=uint32 */)
}

def @func_16074() -> (Tensor[(13, 12, 3), float32],) {
  %499 = @func_15309() /* ty=(Tensor[(13, 12, 3), float32],) */;
  %500 = %499.0;
  (%500,)
}

def @func_1722(%var_1715: Tensor[(16, 9, 1), float32], %var_1716: Tensor[(16, 9, 16), float32]) -> Tensor[(16, 9, 16), bool] {
  %501 = cast(%var_1715, dtype="bool") /* ty=Tensor[(16, 9, 1), bool] */;
  %502 = cast(%var_1716, dtype="bool") /* ty=Tensor[(16, 9, 16), bool] */;
  less(%501, %502) /* ty=Tensor[(16, 9, 16), bool] */
}

def @func_7240(%var_7238: Tensor[(1, 2, 12), float64]) -> Tensor[(1, 2, 12), float64] {
  @func_7237(%var_7238) /* ty=Tensor[(1, 2, 12), float64] */
}

def @func_1726(%var_1724: Tensor[(16, 9, 1), float32], %var_1725: Tensor[(16, 9, 16), float32]) -> Tensor[(16, 9, 16), bool] {
  @func_1722(%var_1724, %var_1725) /* ty=Tensor[(16, 9, 16), bool] */
}

def @func_6245(%var_6206: Tensor[(11, 10, 12), float32], %var_6207: Tensor[(11, 10, 12), float32]) -> (Tensor[(11, 10, 12), float32], Tensor[(5, 3, 4), bool], Tensor[(60), float32], Tensor[(3, 7, 5), uint32], Tensor[(105), uint32]) {
  %503 = cast(%var_6207, dtype="float32") /* ty=Tensor[(11, 10, 12), float32] */;
  %504 = shape_of(%var_6206, dtype="int32") /* ty=Tensor[(3), int32] */;
  %505 = cast(%var_6206, dtype="float32") /* ty=Tensor[(11, 10, 12), float32] */;
  %506 = dyn.reshape(%503, %504, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %507 = cast(meta[relay.Constant][42] /* ty=Tensor[(60), float32] */, dtype="float32") /* ty=Tensor[(60), float32] */;
  %508 = reshape(%507, newshape=[5, 3, 4]) /* ty=Tensor[(5, 3, 4), float32] */;
  %509 = cast(meta[relay.Constant][43] /* ty=Tensor[(105), uint32] */, dtype="uint32") /* ty=Tensor[(105), uint32] */;
  %510 = reshape(%509, newshape=[3, 7, 5]) /* ty=Tensor[(3, 7, 5), uint32] */;
  %511 = mod(%505, %506) /* ty=Tensor[(11, 10, 12), float32] */;
  %512 = @func_5988(%508) /* ty=Tensor[(5, 3, 4), bool] */;
  %513 = @func_3899(%510) /* ty=Tensor[(3, 7, 5), uint32] */;
  (%511, %512, meta[relay.Constant][42] /* ty=Tensor[(60), float32] */, %513, meta[relay.Constant][43] /* ty=Tensor[(105), uint32] */)
}

def @func_11390(%var_11384: Tensor[(7, 15, 10), uint8], %var_11385: Tensor[(7, 15, 10), uint8]) -> Tensor[(7, 15, 10), uint8] {
  %514 = cast(%var_11385, dtype="uint8") /* ty=Tensor[(7, 15, 10), uint8] */;
  %515 = shape_of(%var_11384, dtype="int32") /* ty=Tensor[(3), int32] */;
  %516 = cast(%var_11384, dtype="uint8") /* ty=Tensor[(7, 15, 10), uint8] */;
  %517 = dyn.reshape(%514, %515, newshape=[]) /* ty=Tensor[(?, ?, ?), uint8] */;
  multiply(%516, %517) /* ty=Tensor[(7, 15, 10), uint8] */
}

def @func_13703(%var_13701: Tensor[(1, 8, 2), float64]) -> (Tensor[(1, 8, 2), float64],) {
  @func_13700(%var_13701) /* ty=(Tensor[(1, 8, 2), float64],) */
}

def @func_6320(%var_6318: Tensor[(14, 4, 5), int64], %var_6319: Tensor[(14, 4, 5), int64]) -> (Tensor[(14, 4, 5), bool], Tensor[(14, 4, 5), float32]) {
  @func_6316(%var_6318, %var_6319) /* ty=(Tensor[(14, 4, 5), bool], Tensor[(14, 4, 5), float32]) */
}

def @func_15309() -> (Tensor[(13, 12, 3), float32],) {
  %518 = @func_15118() /* ty=(Tensor[(13, 12, 3), float32],) */;
  %519 = %518.0;
  (%519,)
}

def @func_5651(%var_5624: float64, %var_5625: Tensor[(7, 7, 2), float64]) -> (Tensor[(7, 7, 2), float64], Tensor[(616), float64], Tensor[(1320, 1), float64], Tensor[(8, 11, 7), float64]) {
  %520 = cast(%var_5624, dtype="float64") /* ty=float64 */;
  %521 = cast(%var_5625, dtype="float64") /* ty=Tensor[(7, 7, 2), float64] */;
  %522 = cast(meta[relay.Constant][44] /* ty=Tensor[(1320, 1), float64] */, dtype="float64") /* ty=Tensor[(1320, 1), float64] */;
  %523 = reshape(%522, newshape=[12, 10, 11]) /* ty=Tensor[(12, 10, 11), float64] */;
  %524 = @func_1001(%523) /* ty=(Tensor[(12, 10, 11), float64], Tensor[(8, 11, 7), float64], Tensor[(616), float64]) */;
  %525 = %524.2;
  %526 = cast(%525, dtype="float64") /* ty=Tensor[(616), float64] */;
  %527 = reshape(%526, newshape=[1, 616]) /* ty=Tensor[(1, 616), float64] */;
  %528 = @func_590(%527) /* ty=(Tensor[(9, 1, 5), float32], Tensor[(8, 11, 7), float64], Tensor[(1, 616), float64]) */;
  %529 = mod(%520, %521) /* ty=Tensor[(7, 7, 2), float64] */;
  %530 = %528.1;
  (%529, %525, meta[relay.Constant][44] /* ty=Tensor[(1320, 1), float64] */, %530)
}

def @func_7588(%var_7552: Tensor[(3, 13, 16), int16], %var_7553: Tensor[(3, 13, 16), int16]) -> Tensor[(3, 13, 16), int16] {
  %531 = cast(%var_7553, dtype="int16") /* ty=Tensor[(3, 13, 16), int16] */;
  %532 = shape_of(%var_7552, dtype="int32") /* ty=Tensor[(3), int32] */;
  %533 = cast(%var_7552, dtype="int16") /* ty=Tensor[(3, 13, 16), int16] */;
  %534 = dyn.reshape(%531, %532, newshape=[]) /* ty=Tensor[(?, ?, ?), int16] */;
  logical_xor(%533, %534) /* ty=Tensor[(3, 13, 16), int16] */
}

def @func_15359(%var_15350: Tensor[(1, 16), float64]) -> (Tensor[(6, 6, 11), float32], Tensor[(1, 8, 2), float64], Tensor[(1, 16), float64]) {
  %535 = cast(%var_15350, dtype="float64") /* ty=Tensor[(1, 16), float64] */;
  %536 = reshape(%535, newshape=[1, 8, 2]) /* ty=Tensor[(1, 8, 2), float64] */;
  %537 = @func_13700(%536) /* ty=(Tensor[(1, 8, 2), float64],) */;
  %538 = @func_15274() /* ty=Tensor[(6, 6, 11), float32] */;
  %539 = %537.0;
  (%538, %539, %var_15350)
}

def @func_5280(%var_5278: int8) -> Tensor[(1, 8, 6), bool] {
  @func_5277(%var_5278) /* ty=Tensor[(1, 8, 6), bool] */
}

def @func_15089(%var_15087: int8) -> (Tensor[(13, 12, 3), float32], Tensor[(1, 8, 6), bool], int8) {
  @func_15086(%var_15087) /* ty=(Tensor[(13, 12, 3), float32], Tensor[(1, 8, 6), bool], int8) */
}

def @func_15237(%var_15233: Tensor[(105), uint32]) -> (Tensor[(13, 12, 3), float32], Tensor[(3, 7, 5), uint32], Tensor[(105), uint32]) {
  %540 = @func_15182() /* ty=(Tensor[(13, 12, 3), float32],) */;
  %541 = cast(%var_15233, dtype="uint32") /* ty=Tensor[(105), uint32] */;
  %542 = reshape(%541, newshape=[3, 7, 5]) /* ty=Tensor[(3, 7, 5), uint32] */;
  %543 = %540.0;
  %544 = @func_3899(%542) /* ty=Tensor[(3, 7, 5), uint32] */;
  (%543, %544, %var_15233)
}

def @func_5655(%var_5653: float64, %var_5654: Tensor[(7, 7, 2), float64]) -> (Tensor[(7, 7, 2), float64], Tensor[(616), float64], Tensor[(1320, 1), float64], Tensor[(8, 11, 7), float64]) {
  @func_5651(%var_5653, %var_5654) /* ty=(Tensor[(7, 7, 2), float64], Tensor[(616), float64], Tensor[(1320, 1), float64], Tensor[(8, 11, 7), float64]) */
}

def @func_11932(%var_11914: Tensor[(13, 14, 6), float32]) -> Tensor[(13, 14, 6), float32] {
  %545 = cast(%var_11914, dtype="float32") /* ty=Tensor[(13, 14, 6), float32] */;
  log(%545) /* ty=Tensor[(13, 14, 6), float32] */
}

def @func_15586(%var_15584: Tensor[(616), float64]) -> (Tensor[(2, 16, 8), uint16], Tensor[(256), uint16], Tensor[(9, 1, 5), float32], Tensor[(616), float64], Tensor[(13, 12, 3), uint8]) {
  @func_15583(%var_15584) /* ty=(Tensor[(2, 16, 8), uint16], Tensor[(256), uint16], Tensor[(9, 1, 5), float32], Tensor[(616), float64], Tensor[(13, 12, 3), uint8]) */
}

def @func_1555(%var_1552: Tensor[(4, 9, 2), float32], %var_1553: Tensor[(4, 9, 2), float32], %var_1554: Tensor[(616), float64]) -> (Tensor[(1, 5, 3), float64], Tensor[(15), float64], Tensor[(4, 9, 2), float32], Tensor[(1, 616), float64], Tensor[(616), float64], Tensor[(616), float64], Tensor[(1320), float64]) {
  @func_1550(%var_1552, %var_1553, %var_1554) /* ty=(Tensor[(1, 5, 3), float64], Tensor[(15), float64], Tensor[(4, 9, 2), float32], Tensor[(1, 616), float64], Tensor[(616), float64], Tensor[(616), float64], Tensor[(1320), float64]) */
}

def @func_10766(%var_10764: Tensor[(14, 6, 13), uint8], %var_10765: Tensor[(14, 6, 13), uint8]) -> (Tensor[(14, 6, 13), uint32], Tensor[(3, 13, 8), float64], Tensor[(312), float64], Tensor[(8, 11, 7), float64], Tensor[(1320), float64], Tensor[(14, 6, 13), float64]) {
  @func_10762(%var_10764, %var_10765) /* ty=(Tensor[(14, 6, 13), uint32], Tensor[(3, 13, 8), float64], Tensor[(312), float64], Tensor[(8, 11, 7), float64], Tensor[(1320), float64], Tensor[(14, 6, 13), float64]) */
}

def @func_7831(%var_7830: Tensor[(14, 12, 6), float32]) -> (Tensor[(14, 12, 6), float32], Tensor[(1, 8, 6), bool], int8, Tensor[(616), float64], Tensor[(14, 7), float64]) {
  %557 = fn (%var_7804: Tensor[(14, 12, 6), float32]) -> (Tensor[(14, 12, 6), float32], Tensor[(1, 8, 6), bool], int8, Tensor[(616), float64], Tensor[(14, 7), float64]) {
    %546 = cast(%var_7804, dtype="float32") /* ty=Tensor[(14, 12, 6), float32] */;
    %547 = cast(meta[relay.Constant][45] /* ty=int8 */, dtype="int8") /* ty=int8 */;
    %548 = reshape(%547, newshape=[]) /* ty=int8 */;
    %549 = cast(meta[relay.Constant][45] /* ty=int8 */, dtype="float64") /* ty=float64 */;
    %550 = cast(meta[relay.Constant][46] /* ty=Tensor[(14, 7), float64] */, dtype="float64") /* ty=Tensor[(14, 7), float64] */;
    %551 = reshape(%549, newshape=[]) /* ty=float64 */;
    %552 = reshape(%550, newshape=[7, 7, 2]) /* ty=Tensor[(7, 7, 2), float64] */;
    %553 = @func_5651(%551, %552) /* ty=(Tensor[(7, 7, 2), float64], Tensor[(616), float64], Tensor[(1320, 1), float64], Tensor[(8, 11, 7), float64]) */;
    %554 = erf(%546) /* ty=Tensor[(14, 12, 6), float32] */;
    %555 = @func_5277(%548) /* ty=Tensor[(1, 8, 6), bool] */;
    %556 = %553.1;
    (%554, %555, meta[relay.Constant][45] /* ty=int8 */, %556, meta[relay.Constant][46] /* ty=Tensor[(14, 7), float64] */)
  };
  %557(%var_7830) /* ty=(Tensor[(14, 12, 6), float32], Tensor[(1, 8, 6), bool], int8, Tensor[(616), float64], Tensor[(14, 7), float64]) */
}

def @func_11935(%var_11933: Tensor[(13, 14, 6), float32]) -> Tensor[(13, 14, 6), float32] {
  @func_11932(%var_11933) /* ty=Tensor[(13, 14, 6), float32] */
}

def @func_12626(%var_12604: Tensor[(13, 8, 10), int64], %var_12605: Tensor[(13, 8, 10), int64]) -> Tensor[(13, 8, 10), float32] {
  %558 = cast(%var_12605, dtype="bool") /* ty=Tensor[(13, 8, 10), bool] */;
  %559 = shape_of(%var_12604, dtype="int32") /* ty=Tensor[(3), int32] */;
  %560 = cast(%var_12604, dtype="bool") /* ty=Tensor[(13, 8, 10), bool] */;
  %561 = dyn.reshape(%558, %559, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %562 = greater_equal(%560, %561) /* ty=Tensor[(13, 8, 10), bool] */;
  %563 = cast(meta[relay.Constant][47] /* ty=Tensor[(13, 8, 10), bool] */, dtype="float32") /* ty=Tensor[(13, 8, 10), float32] */;
  %564 = shape_of(%562, dtype="int32") /* ty=Tensor[(3), int32] */;
  %565 = cast(%562, dtype="float32") /* ty=Tensor[(13, 8, 10), float32] */;
  %566 = dyn.reshape(%563, %564, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  power(%565, %566) /* ty=Tensor[(13, 8, 10), float32] */
}

def @func_12630(%var_12628: Tensor[(13, 8, 10), int64], %var_12629: Tensor[(13, 8, 10), int64]) -> Tensor[(13, 8, 10), float32] {
  @func_12626(%var_12628, %var_12629) /* ty=Tensor[(13, 8, 10), float32] */
}

def @func_14337(%var_14335: Tensor[(30), float32]) -> (Tensor[(2, 2, 10), bool], Tensor[(3, 10, ?), float32], Tensor[(30), float32]) {
  @func_14334(%var_14335) /* ty=(Tensor[(2, 2, 10), bool], Tensor[(3, 10, ?), float32], Tensor[(30), float32]) */
}

def @func_8144(%var_8131: Tensor[(3, 10, 1), float32]) -> Tensor[(3, 10, ?), float32] {
  %567 = cast(%var_8131, dtype="float32") /* ty=Tensor[(3, 10, 1), float32] */;
  %568 = atanh(%567) /* ty=Tensor[(3, 10, 1), float32] */;
  %569 = cast(%var_8131, dtype="float32") /* ty=Tensor[(3, 10, 1), float32] */;
  %570 = shape_of(%568, dtype="int32") /* ty=Tensor[(3), int32] */;
  %571 = cast(%568, dtype="float32") /* ty=Tensor[(3, 10, 1), float32] */;
  %572 = dyn.reshape(%569, %570, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  mod(%571, %572) /* ty=Tensor[(3, 10, ?), float32] */
}

def @func_15275() -> Tensor[(6, 6, 11), float32] {
  %574 = fn () -> Tensor[(6, 6, 11), float32] {
    %573 = cast(meta[relay.Constant][48] /* ty=Tensor[(6, 6, 11), float32] */, dtype="float32") /* ty=Tensor[(6, 6, 11), float32] */;
    cosh(%573) /* ty=Tensor[(6, 6, 11), float32] */
  };
  %574() /* ty=Tensor[(6, 6, 11), float32] */
}

def @func_16076() -> (Tensor[(13, 12, 3), float32],) {
  @func_16074() /* ty=(Tensor[(13, 12, 3), float32],) */
}

def @func_1003(%var_1002: Tensor[(12, 10, 11), float64]) -> (Tensor[(12, 10, 11), float64], Tensor[(8, 11, 7), float64], Tensor[(616), float64]) {
  %581 = fn (%var_991: Tensor[(12, 10, 11), float64]) -> (Tensor[(12, 10, 11), float64], Tensor[(8, 11, 7), float64], Tensor[(616), float64]) {
    %575 = cast(%var_991, dtype="float64") /* ty=Tensor[(12, 10, 11), float64] */;
    %576 = cast(meta[relay.Constant][49] /* ty=Tensor[(616), float64] */, dtype="float64") /* ty=Tensor[(616), float64] */;
    %577 = reshape(%576, newshape=[8, 11, 7]) /* ty=Tensor[(8, 11, 7), float64] */;
    %578 = @func_300(%577) /* ty=(Tensor[(8, 11, 7), float64],) */;
    %579 = erf(%575) /* ty=Tensor[(12, 10, 11), float64] */;
    %580 = %578.0;
    (%579, %580, meta[relay.Constant][49] /* ty=Tensor[(616), float64] */)
  };
  %581(%var_1002) /* ty=(Tensor[(12, 10, 11), float64], Tensor[(8, 11, 7), float64], Tensor[(616), float64]) */
}

def @func_7685(%var_7684: uint32) -> Tensor[(10, 6, 9), uint32] {
  %584 = fn (%var_7643: uint32) -> Tensor[(10, 6, 9), uint32] {
    %582 = cast(%var_7643, dtype="uint32") /* ty=uint32 */;
    %583 = cast(meta[relay.Constant][50] /* ty=Tensor[(10, 6, 9), uint32] */, dtype="uint32") /* ty=Tensor[(10, 6, 9), uint32] */;
    subtract(%582, %583) /* ty=Tensor[(10, 6, 9), uint32] */
  };
  %584(%var_7684) /* ty=Tensor[(10, 6, 9), uint32] */
}

def @func_3527(%var_3524: Tensor[(15, 9, 14), float64], %var_3525: Tensor[(196), uint32], %var_3526: Tensor[(15, 1), float64]) -> (Tensor[(616), float64], Tensor[(196), uint32], Tensor[(15, 1), float64], Tensor[(15, 9, 14), float64]) {
  @func_3522(%var_3524, %var_3525, %var_3526) /* ty=(Tensor[(616), float64], Tensor[(196), uint32], Tensor[(15, 1), float64], Tensor[(15, 9, 14), float64]) */
}

def @func_303(%var_301: Tensor[(8, 11, 7), float64]) -> (Tensor[(8, 11, 7), float64],) {
  @func_300(%var_301) /* ty=(Tensor[(8, 11, 7), float64],) */
}

def @func_1958(%var_1957: Tensor[(10, 16, 16), float64]) -> (Tensor[(10, 16, 16), float64],) {
  %590 = fn (%var_1946: Tensor[(10, 16, 16), float64]) -> (Tensor[(10, 16, 16), float64],) {
    %585 = cast(meta[relay.Constant][51] /* ty=Tensor[(10, 16, 16), float64] */, dtype="float64") /* ty=Tensor[(10, 16, 16), float64] */;
    %586 = shape_of(%var_1946, dtype="int32") /* ty=Tensor[(3), int32] */;
    %587 = cast(%var_1946, dtype="float64") /* ty=Tensor[(10, 16, 16), float64] */;
    %588 = dyn.reshape(%585, %586, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
    %589 = floor_divide(%587, %588) /* ty=Tensor[(10, 16, 16), float64] */;
    (%589,)
  };
  %590(%var_1957) /* ty=(Tensor[(10, 16, 16), float64],) */
}

def @func_2061(%var_2043: Tensor[(4, 7, 7), uint32], %var_2052: Tensor[(15), float64]) -> (Tensor[(12, 110), int64], Tensor[(15), float64], Tensor[(4, 7, 7), float64], Tensor[(4, 7, 7), float64], Tensor[(616), float64]) {
  %591 = cast(%var_2052, dtype="float64") /* ty=Tensor[(15), float64] */;
  %592 = reshape(%591, newshape=[1, 5, 3]) /* ty=Tensor[(1, 5, 3), float64] */;
  %593 = @func_1236(%592) /* ty=(Tensor[(1, 5, 3), float64], Tensor[(616), float64], Tensor[(12, 110), int64]) */;
  %594 = cast(meta[relay.Constant][52] /* ty=Tensor[(4, 7, 7), uint32] */, dtype="float64") /* ty=Tensor[(4, 7, 7), float64] */;
  %595 = cast(meta[relay.Constant][52] /* ty=Tensor[(4, 7, 7), uint32] */, dtype="bool") /* ty=Tensor[(4, 7, 7), bool] */;
  %596 = shape_of(%var_2043, dtype="int32") /* ty=Tensor[(3), int32] */;
  %597 = cast(%var_2043, dtype="bool") /* ty=Tensor[(4, 7, 7), bool] */;
  %598 = dyn.reshape(%595, %596, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %599 = greater(%597, %598) /* ty=Tensor[(4, 7, 7), bool] */;
  %600 = cast(%599, dtype="float64") /* ty=Tensor[(4, 7, 7), float64] */;
  %601 = %593.2;
  %602 = cast(%601, dtype="float64") /* ty=Tensor[(12, 110), float64] */;
  %603 = reshape(%602, newshape=[12, 10, 11]) /* ty=Tensor[(12, 10, 11), float64] */;
  %604 = @func_1001(%603) /* ty=(Tensor[(12, 10, 11), float64], Tensor[(8, 11, 7), float64], Tensor[(616), float64]) */;
  %605 = log2(%594) /* ty=Tensor[(4, 7, 7), float64] */;
  %606 = cosh(%600) /* ty=Tensor[(4, 7, 7), float64] */;
  %607 = %604.2;
  (%601, %var_2052, %605, %606, %607)
}

def @func_3910(%var_3909: Tensor[(3, 13, 15), float64]) -> Tensor[(3, 13, 15), float64] {
  %609 = fn (%var_3905: Tensor[(3, 13, 15), float64]) -> Tensor[(3, 13, 15), float64] {
    %608 = cast(%var_3905, dtype="float64") /* ty=Tensor[(3, 13, 15), float64] */;
    cos(%608) /* ty=Tensor[(3, 13, 15), float64] */
  };
  %609(%var_3909) /* ty=Tensor[(3, 13, 15), float64] */
}

def @func_1550(%var_1511: Tensor[(4, 9, 2), float32], %var_1512: Tensor[(4, 9, 2), float32], %var_1529: Tensor[(616), float64]) -> (Tensor[(1, 5, 3), float64], Tensor[(15), float64], Tensor[(4, 9, 2), float32], Tensor[(1, 616), float64], Tensor[(616), float64], Tensor[(616), float64], Tensor[(1320), float64]) {
  %610 = cast(meta[relay.Constant][53] /* ty=Tensor[(15), float64] */, dtype="float64") /* ty=Tensor[(15), float64] */;
  %611 = reshape(%610, newshape=[1, 5, 3]) /* ty=Tensor[(1, 5, 3), float64] */;
  %612 = @func_1236(%611) /* ty=(Tensor[(1, 5, 3), float64], Tensor[(616), float64], Tensor[(12, 110), int64]) */;
  %613 = cast(%var_1512, dtype="float32") /* ty=Tensor[(4, 9, 2), float32] */;
  %614 = shape_of(%var_1511, dtype="int32") /* ty=Tensor[(3), int32] */;
  %615 = cast(%var_1511, dtype="float32") /* ty=Tensor[(4, 9, 2), float32] */;
  %616 = dyn.reshape(%613, %614, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %617 = floor_mod(%615, %616) /* ty=Tensor[(4, 9, 2), float32] */;
  %618 = cast(%617, dtype="float32") /* ty=Tensor[(4, 9, 2), float32] */;
  %619 = shape_of(%var_1512, dtype="int32") /* ty=Tensor[(3), int32] */;
  %620 = cast(%var_1512, dtype="float32") /* ty=Tensor[(4, 9, 2), float32] */;
  %621 = dyn.reshape(%618, %619, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %622 = cast(%var_1529, dtype="float64") /* ty=Tensor[(616), float64] */;
  %623 = reshape(%622, newshape=[1, 616]) /* ty=Tensor[(1, 616), float64] */;
  %624 = @func_590(%623) /* ty=(Tensor[(9, 1, 5), float32], Tensor[(8, 11, 7), float64], Tensor[(1, 616), float64]) */;
  %625 = cast(meta[relay.Constant][54] /* ty=Tensor[(1320), float64] */, dtype="float64") /* ty=Tensor[(1320), float64] */;
  %626 = reshape(%625, newshape=[12, 10, 11]) /* ty=Tensor[(12, 10, 11), float64] */;
  %627 = @func_1001(%626) /* ty=(Tensor[(12, 10, 11), float64], Tensor[(8, 11, 7), float64], Tensor[(616), float64]) */;
  %628 = %612.0;
  %629 = mod(%620, %621) /* ty=Tensor[(4, 9, 2), float32] */;
  %630 = %624.2;
  %631 = %627.2;
  (%628, meta[relay.Constant][53] /* ty=Tensor[(15), float64] */, %629, %630, %var_1529, %631, meta[relay.Constant][54] /* ty=Tensor[(1320), float64] */)
}

/* For debugging purposes the metadata section has been omitted.
 * If you would like to see the full metadata section you can set the 
 * option to `True` when invoking `astext`. 
 */The type inference pass was unable to infer a type for this expression.
This usually occurs when an operator call is under constrained in some way, check other reported errors for hints of what may of happened.

===================================
note: run with `TVM_BACKTRACE=1` environment variable to display a backtrace.

import tvm
from tvm import relay
from tvm.ir.transform import Sequential
from tvm.contrib import graph_runtime
import numpy as np
mod = tvm.IRModule()
mutated_mod = tvm.IRModule()
var_84 = relay.var("var_84", dtype = "float64", shape = (7, 14, 5))#candidate|84|(7, 14, 5)|var|float64
uop_85 = relay.cosh(var_84.astype('float64')) # shape=(7, 14, 5)
bop_101 = relay.left_shift(var_84.astype('int8'), relay.reshape(uop_85.astype('int8'), relay.shape_of(var_84))) # shape=(7, 14, 5)
output = bop_101
output2 = bop_101
func_114 = relay.Function([var_84,], output)
mod['func_114'] = func_114
mod = relay.transform.InferType()(mod)
var_115 = relay.var("var_115", dtype = "float64", shape = (7, 14, 5))#candidate|115|(7, 14, 5)|var|float64
output = func_114(var_115)
func_116 = relay.Function([var_115], output)
mutated_mod['func_116'] = func_116
mutated_mod = relay.transform.InferType()(mutated_mod)
var_506 = relay.var("var_506", dtype = "float64", shape = (10, 4, 9))#candidate|506|(10, 4, 9)|var|float64
uop_507 = relay.cos(var_506.astype('float64')) # shape=(10, 4, 9)
output = uop_507
output2 = uop_507
func_509 = relay.Function([var_506,], output)
mod['func_509'] = func_509
mod = relay.transform.InferType()(mod)
mutated_mod['func_509'] = func_509
mutated_mod = relay.transform.InferType()(mutated_mod)
var_510 = relay.var("var_510", dtype = "float64", shape = (10, 4, 9))#candidate|510|(10, 4, 9)|var|float64
func_509_call = mutated_mod.get_global_var('func_509')
call_511 = func_509_call(var_510)
output = call_511
func_512 = relay.Function([var_510], output)
mutated_mod['func_512'] = func_512
mutated_mod = relay.transform.InferType()(mutated_mod)
var_732 = relay.var("var_732", dtype = "uint16", shape = (8, 8, 3))#candidate|732|(8, 8, 3)|var|uint16
var_733 = relay.var("var_733", dtype = "uint16", shape = (8, 8, 3))#candidate|733|(8, 8, 3)|var|uint16
bop_734 = relay.bitwise_or(var_732.astype('uint16'), relay.reshape(var_733.astype('uint16'), relay.shape_of(var_732))) # shape=(8, 8, 3)
output = bop_734
output2 = bop_734
func_748 = relay.Function([var_732,var_733,], output)
mod['func_748'] = func_748
mod = relay.transform.InferType()(mod)
mutated_mod['func_748'] = func_748
mutated_mod = relay.transform.InferType()(mutated_mod)
func_748_call = mutated_mod.get_global_var('func_748')
var_750 = relay.var("var_750", dtype = "uint16", shape = (8, 8, 3))#candidate|750|(8, 8, 3)|var|uint16
var_751 = relay.var("var_751", dtype = "uint16", shape = (8, 8, 3))#candidate|751|(8, 8, 3)|var|uint16
call_749 = func_748_call(var_750,var_751,)
output = call_749
func_752 = relay.Function([var_750,var_751,], output)
mutated_mod['func_752'] = func_752
mutated_mod = relay.transform.InferType()(mutated_mod)
var_768 = relay.var("var_768", dtype = "float64", shape = (6, 7))#candidate|768|(6, 7)|var|float64
uop_769 = relay.asin(var_768.astype('float64')) # shape=(6, 7)
func_748_call = mod.get_global_var('func_748')
func_752_call = mutated_mod.get_global_var('func_752')
var_779 = relay.var("var_779", dtype = "uint16", shape = (192,))#candidate|779|(192,)|var|uint16
call_778 = func_748_call(relay.reshape(var_779.astype('uint16'), [8, 8, 3]), relay.reshape(var_779.astype('uint16'), [8, 8, 3]), )
call_780 = func_748_call(relay.reshape(var_779.astype('uint16'), [8, 8, 3]), relay.reshape(var_779.astype('uint16'), [8, 8, 3]), )
output = relay.Tuple([uop_769,call_778,var_779,])
output2 = relay.Tuple([uop_769,call_780,var_779,])
func_793 = relay.Function([var_768,var_779,], output)
mod['func_793'] = func_793
mod = relay.transform.InferType()(mod)
mutated_mod['func_793'] = func_793
mutated_mod = relay.transform.InferType()(mutated_mod)
func_793_call = mutated_mod.get_global_var('func_793')
var_795 = relay.var("var_795", dtype = "float64", shape = (6, 7))#candidate|795|(6, 7)|var|float64
var_796 = relay.var("var_796", dtype = "uint16", shape = (192,))#candidate|796|(192,)|var|uint16
call_794 = func_793_call(var_795,var_796,)
output = call_794
func_797 = relay.Function([var_795,var_796,], output)
mutated_mod['func_797'] = func_797
mutated_mod = relay.transform.InferType()(mutated_mod)
const_1662 = relay.const([[[8,-6,-3],[-6,9,-1],[-10,5,2],[-5,-6,9],[-6,-10,2],[7,-9,2],[1,-6,-3],[-9,-1,-4],[2,3,6],[3,1,-3]],[[1,4,4],[-1,5,5],[-6,2,-9],[-10,8,10],[-5,6,-8],[-10,6,8],[1,4,1],[-3,6,-6],[-6,7,-10],[-7,-9,5]],[[-1,-8,-1],[6,-8,-8],[-2,5,8],[2,-8,7],[-5,6,-9],[-5,8,-9],[10,10,8],[6,-1,-9],[-4,5,1],[3,8,3]],[[-10,10,-10],[6,-4,9],[-6,-3,9],[8,-6,-7],[-6,-6,10],[4,6,8],[2,-7,4],[-10,2,-9],[-9,4,1],[4,-2,2]],[[8,1,-9],[-1,5,-9],[5,-9,-5],[7,5,-9],[5,-4,6],[8,-9,9],[6,-10,7],[9,-7,8],[-7,5,-8],[-10,10,9]]], dtype = "uint8")#candidate|1662|(5, 10, 3)|const|uint8
const_1663 = relay.const([[[6,-7,7],[1,-5,5],[10,1,4],[5,-9,-7],[-9,-7,9],[-10,1,9],[3,7,10],[-9,7,-10],[3,-9,8],[-9,-4,-1]],[[8,8,-9],[1,-5,-10],[-8,9,1],[6,-9,-8],[2,-3,-4],[9,-4,-3],[-2,-6,1],[-5,-5,6],[-4,-9,9],[9,5,-8]],[[-4,8,4],[2,-6,-4],[-4,-7,3],[-4,6,-1],[9,6,10],[2,9,-4],[3,-8,6],[-3,-2,9],[4,2,7],[6,-1,-1]],[[-6,-5,-4],[9,-6,-4],[10,-1,10],[8,7,7],[-1,-1,5],[5,6,-6],[10,-6,2],[-7,1,-7],[-1,-6,-2],[2,6,-10]],[[-7,2,-7],[-2,6,5],[9,-2,-1],[-3,3,3],[-4,1,-8],[3,-5,7],[-5,-1,8],[-9,-8,-9],[-2,-3,6],[10,-1,-2]]], dtype = "uint8")#candidate|1663|(5, 10, 3)|const|uint8
bop_1664 = relay.bitwise_and(const_1662.astype('uint8'), relay.reshape(const_1663.astype('uint8'), relay.shape_of(const_1662))) # shape=(5, 10, 3)
func_509_call = mod.get_global_var('func_509')
func_512_call = mutated_mod.get_global_var('func_512')
var_1668 = relay.var("var_1668", dtype = "float64", shape = (360,))#candidate|1668|(360,)|var|float64
call_1667 = func_509_call(relay.reshape(var_1668.astype('float64'), [10, 4, 9]))
call_1669 = func_509_call(relay.reshape(var_1668.astype('float64'), [10, 4, 9]))
output = relay.Tuple([bop_1664,call_1667,var_1668,])
output2 = relay.Tuple([bop_1664,call_1669,var_1668,])
func_1674 = relay.Function([var_1668,], output)
mod['func_1674'] = func_1674
mod = relay.transform.InferType()(mod)
var_1675 = relay.var("var_1675", dtype = "float64", shape = (360,))#candidate|1675|(360,)|var|float64
output = func_1674(var_1675)
func_1676 = relay.Function([var_1675], output)
mutated_mod['func_1676'] = func_1676
mutated_mod = relay.transform.InferType()(mutated_mod)
const_1767 = relay.const([[[-8,-10,4,-5,7,9,3,7,-8,2,4,9],[3,-7,-5,-4,-5,7,8,-4,-8,-2,-2,4],[3,-9,-1,-2,-6,7,-5,-6,9,-2,7,-1],[-9,-7,3,3,9,-4,-2,-5,9,-10,6,7],[-1,-2,6,-3,-6,8,-2,-7,6,-3,2,-7],[-3,5,2,5,-2,-10,-8,-5,-5,-6,-7,10],[-6,4,-5,9,5,-7,8,10,7,-10,7,1],[-2,9,-10,5,-3,4,-9,6,-6,2,-5,6],[4,-8,3,3,6,7,2,-2,2,-5,-8,4],[5,10,8,-1,3,-5,1,-2,-1,-3,-10,8],[-10,2,3,5,-1,6,-2,6,-10,-2,1,8]],[[-2,3,-7,-5,-1,8,-2,-1,-8,6,6,5],[-3,7,-2,3,7,7,6,-2,10,2,2,9],[-2,2,-5,6,-6,1,9,2,-10,1,-5,-3],[-2,9,8,-6,10,-8,6,2,-6,-2,7,-2],[-4,-4,-5,-4,-2,1,-8,2,-4,5,-6,-4],[2,-9,9,-7,-4,2,8,6,-10,1,5,-7],[6,1,-9,-8,10,-9,1,-1,-6,4,-2,5],[-9,-9,-2,7,10,-3,4,9,9,2,7,4],[-10,-7,-9,2,9,-4,10,10,-1,9,4,-1],[8,-10,-1,-8,3,1,10,-9,5,-1,-9,4],[-5,7,-1,-10,-4,-3,7,3,-9,-1,8,-7]],[[7,9,-10,-6,-8,-2,-1,-7,5,1,-3,1],[1,-10,-3,-5,6,4,8,9,-3,4,-5,1],[3,1,8,-8,5,-9,7,-7,-9,7,1,3],[8,7,10,-3,-2,9,-8,9,6,-2,-4,-4],[-1,10,8,7,-3,-1,-4,8,-1,-8,-5,-4],[8,4,8,5,-10,3,-10,-7,-7,-8,3,9],[-2,-4,-7,-7,-8,-5,8,6,-4,-9,-1,9],[-5,1,2,3,-8,-10,7,7,8,-2,1,8],[8,10,-4,-9,6,8,-1,-4,7,-3,-3,8],[4,2,9,-3,-7,-8,3,-1,-9,-9,-7,-9],[-8,9,-7,-5,-8,-8,-6,3,7,-4,3,1]],[[4,4,2,-8,-8,-4,-5,-5,5,-7,6,4],[-5,6,-6,10,7,-3,-7,-3,-7,9,-5,4],[-10,3,-3,1,-5,-6,6,-1,1,-5,-7,5],[-5,-8,9,-2,-3,6,2,-3,-6,10,-6,6],[6,-8,-10,-9,-7,7,8,-6,-4,6,10,5],[-10,-8,5,-4,7,-4,-4,2,-9,-7,8,-8],[4,8,-3,1,-7,10,5,5,-7,-9,-3,10],[9,8,1,-10,10,-10,-3,6,10,-2,-1,8],[-7,7,-7,-3,-4,-4,9,-9,-3,3,10,6],[5,-8,6,-2,-3,4,-8,8,9,7,7,-8],[7,-6,9,10,9,-10,-3,7,-5,-8,9,-5]],[[8,-8,-9,5,8,-6,3,-2,-3,-7,-9,4],[7,-5,8,7,-3,2,1,-10,1,5,4,-4],[2,-5,8,-2,-3,-1,8,-8,-3,3,-10,-1],[10,4,-3,-1,2,3,7,-4,4,-1,5,1],[2,2,-10,-2,8,4,-4,8,3,5,9,-10],[7,5,-3,-10,2,-6,4,3,-5,7,4,-5],[-7,10,-2,-10,4,-2,10,3,-5,-4,-8,-5],[4,2,5,8,10,1,8,4,5,-10,-10,-8],[-3,-8,-9,-4,2,4,5,-3,-10,10,6,-4],[10,7,-9,8,9,-5,-8,-3,6,2,-1,-8],[-9,-3,-2,5,10,-5,9,1,1,8,4,2]],[[3,3,10,5,2,4,4,10,-3,3,10,2],[9,-3,-5,4,10,2,-9,-9,6,4,3,3],[9,-8,9,2,-3,-10,-9,-6,2,-7,6,3],[-9,1,-1,8,10,10,-7,7,7,-8,-4,3],[4,-8,-8,-4,7,7,-2,1,2,-1,-6,-10],[-8,9,-7,-7,-4,3,7,9,7,-6,-2,2],[10,4,6,1,4,-3,4,-2,-8,-2,-6,-10],[6,1,3,-3,-1,-1,3,-10,-1,10,4,4],[10,-6,5,-7,-10,-3,6,-5,5,5,-7,-8],[7,-2,3,2,1,8,-3,-1,7,-7,-9,1],[10,5,8,-4,5,-7,-5,10,6,4,-4,4]],[[8,-4,6,5,1,1,-5,-6,4,-7,-2,-5],[-6,10,3,-1,7,-9,1,7,4,-3,5,-9],[5,-8,-2,5,-3,8,-1,6,-4,-1,7,-9],[7,1,-3,3,-6,-5,5,8,7,1,-5,-7],[1,6,-3,-2,8,2,-2,9,5,6,-6,-7],[10,-4,-6,6,7,9,8,2,-3,-7,-9,-2],[-2,6,3,-4,3,2,9,9,1,-5,7,4],[2,-6,-8,9,7,2,1,6,6,-5,5,10],[-2,-2,-2,1,-8,9,5,9,-5,5,9,-2],[-7,-7,-1,-6,-1,1,7,-1,1,2,-10,-10],[-2,-3,-4,3,1,6,8,-4,2,-4,7,5]],[[-7,-4,8,2,-6,-2,-1,4,6,6,3,2],[-5,-6,2,-10,10,6,7,9,-4,-8,5,-8],[3,4,-2,-1,3,-9,1,-3,-5,-9,6,8],[9,4,-9,5,-6,7,-5,5,8,-2,5,-7],[2,-5,-4,-8,-10,-6,-5,-2,-10,-9,9,-3],[-9,-3,-8,-7,8,9,-4,4,-9,4,9,-5],[4,4,-7,10,9,2,-6,10,-8,6,5,-7],[-10,10,-8,-8,10,-8,10,5,-3,-9,-4,5],[-7,6,-10,-10,-8,10,7,10,2,6,-8,-3],[8,2,-10,-7,-7,-3,-8,7,-3,-1,5,-10],[9,-10,9,-8,5,10,-6,-4,-10,7,-8,-3]],[[1,5,-5,-4,-3,3,-10,-8,10,2,-4,6],[3,-3,8,-4,-10,-5,-6,-1,-5,-8,5,2],[5,-1,10,5,3,-6,2,1,1,-8,7,3],[-2,-1,-8,-2,8,-1,1,4,4,6,-10,-9],[-5,7,4,7,2,5,-10,-2,-10,-9,-1,-6],[2,10,-1,2,-3,9,8,7,2,1,-9,-2],[-8,-2,3,5,-2,-7,3,10,-8,-7,-4,6],[4,-10,10,4,1,10,-5,-9,-1,1,-4,2],[-9,8,-3,9,-4,4,9,6,1,-5,-1,3],[-1,-6,7,-8,-8,2,-3,-3,-10,-2,3,2],[-4,-2,3,6,2,-10,-1,7,-7,3,2,8]],[[2,-2,10,1,-2,8,10,9,8,-5,10,-8],[-1,-8,6,-4,7,-3,1,-10,9,-8,4,3],[9,-10,-9,7,-9,4,10,-4,-5,4,5,9],[-2,2,-4,-9,-4,3,7,-5,2,2,9,-9],[-6,-2,-6,2,-8,5,3,7,3,3,10,6],[9,-6,-7,7,-9,-2,-10,7,1,1,8,-3],[10,10,-4,-3,-6,3,5,5,-1,-3,3,10],[-1,-10,-1,-9,9,-10,-8,7,-2,-9,2,-3],[3,3,-5,2,4,-7,6,-5,-7,-9,-5,-3],[9,-4,-6,-6,-2,-4,2,4,-1,2,-7,2],[1,1,10,-3,-5,-1,-5,-9,6,5,-1,-5]],[[-8,-10,5,10,-5,-1,4,3,-2,-10,1,-5],[5,6,-9,-10,9,3,-4,-9,-6,4,-4,-1],[3,-7,-1,3,4,-1,2,1,1,-5,-9,-4],[5,-4,8,9,-7,8,-9,-3,2,-8,-5,-6],[-5,9,-7,6,2,-5,5,4,10,-1,2,-4],[8,-9,-10,-7,-7,-6,1,10,-4,-6,9,-3],[1,-6,8,7,1,-6,2,8,2,-8,8,8],[3,10,-5,8,7,-9,5,10,4,1,-9,-7],[-2,4,5,9,8,-9,-4,-7,3,7,-3,-8],[-5,5,5,-5,-9,7,2,1,7,1,6,-6],[5,1,-2,-9,5,1,9,8,-6,3,3,8]],[[-3,3,8,-2,-5,-2,-9,4,-6,7,2,3],[-2,-5,-10,5,1,-5,-9,1,10,-1,-6,-7],[1,-8,-9,10,-7,6,-8,-1,9,8,-4,2],[-6,-7,9,5,-7,-4,5,-8,10,10,-5,9],[-8,3,-7,10,-7,6,-10,-7,-5,3,-6,-10],[7,4,-2,7,1,-4,5,2,10,10,-10,-6],[10,4,-2,-2,-6,-2,-1,-6,1,9,-3,-9],[-8,4,-8,2,10,3,10,-3,-4,-3,-4,-5],[1,2,-6,1,-2,3,-3,-9,1,-7,9,-9],[2,6,-3,4,9,-1,9,-1,5,2,-1,3],[4,4,7,-6,5,7,-7,3,-7,10,-4,-6]],[[7,9,10,9,-9,9,8,4,-9,1,-4,-1],[9,-8,2,-2,-5,-6,-2,-10,10,6,7,1],[-3,-4,-7,1,-6,-8,6,-7,2,7,-10,4],[8,-8,-10,-3,-3,3,1,5,4,8,-7,2],[-10,-3,5,10,7,-8,-9,1,9,-2,-9,-10],[2,4,4,-1,4,7,-3,-3,-7,9,-4,-7],[-8,1,-8,10,-10,-1,10,-1,8,-4,-6,-3],[-7,-10,7,-4,-8,10,-8,6,-7,-4,-1,-3],[-4,-1,-5,-3,9,5,-1,-10,-4,5,-3,1],[9,10,10,-2,2,5,10,-2,-1,4,6,1],[4,-3,8,-10,-9,9,-4,6,-4,5,-8,4]],[[6,3,4,3,9,-7,-1,-4,-7,-4,5,9],[10,5,1,-9,-7,-8,-6,1,10,-4,6,5],[-2,4,-8,7,5,6,-1,-4,7,1,4,1],[-1,6,5,-1,-8,-6,-8,-4,7,10,7,8],[5,-1,1,-4,9,10,-1,2,-5,-6,1,5],[-4,-6,8,-8,5,-3,-9,1,-7,3,3,7],[-2,-3,7,-3,-5,-1,-4,6,-8,8,-8,-7],[-9,4,4,1,6,-2,-4,-1,5,9,-3,-1],[-8,8,7,2,6,9,5,7,-6,4,4,-6],[-1,10,-4,5,-9,7,-10,1,4,5,2,1],[-9,-7,-2,1,1,-7,4,8,-7,-9,-3,3]],[[10,7,10,-9,4,-1,10,8,-3,6,-7,1],[9,-2,-10,-2,-3,-2,10,1,7,10,1,-9],[-5,4,-9,-7,-4,-5,-4,-5,-7,-9,8,10],[-9,3,10,-8,8,8,-8,-8,-4,7,1,4],[-10,-4,2,-6,-6,-2,-2,1,2,-9,-4,3],[1,3,-5,-9,-9,-3,-7,-1,7,-9,-2,9],[2,4,-7,2,-8,-8,-4,-8,-10,-6,-8,-3],[-8,6,-5,-6,2,-2,9,-7,-1,-10,3,-1],[-8,1,-2,3,-7,2,3,-10,9,6,-6,-5],[-7,5,6,5,1,-2,-2,-4,5,2,5,-4],[4,2,-2,-8,-5,-1,8,-5,-1,3,3,2]]], dtype = "int8")#candidate|1767|(15, 11, 12)|const|int8
const_1768 = relay.const([[[4,-10,10,9,6,-4,-6,8,-6,-7,-4,10],[-9,3,6,3,-7,-6,6,-8,-5,7,-9,-9],[5,-3,-3,10,-8,1,2,-5,-7,-6,8,5],[8,-3,1,1,10,-7,-9,-8,-10,4,-2,-9],[-9,2,-10,-1,1,7,-9,-9,4,-3,-3,-3],[-1,2,-3,-2,9,2,-3,10,-8,-7,5,6],[-10,-4,10,-5,-2,6,-10,-10,4,-8,6,2],[-5,8,5,-3,3,-7,5,-5,8,6,2,9],[-9,-5,-7,8,-6,-5,-2,-5,6,-1,-5,-9],[10,5,1,-7,2,-7,9,-10,4,7,4,3],[7,10,-10,6,-4,1,-4,-8,-10,-3,10,5]],[[1,-10,-7,4,4,-5,4,-6,2,-6,8,3],[8,-9,1,2,10,-6,4,-9,3,5,-7,6],[8,8,-7,-6,-8,5,10,1,1,5,9,-4],[-9,-10,9,8,7,5,-8,10,5,5,-5,3],[6,-1,-3,-7,-3,-3,-2,-10,-8,4,-4,-1],[-10,-4,3,-10,9,-3,-6,9,7,10,2,10],[-4,7,1,-7,-2,-5,-2,5,-6,-6,-9,4],[6,7,3,-9,4,-5,1,3,6,-2,4,-10],[6,-5,-10,4,2,-3,9,-3,7,5,1,3],[7,-8,3,-1,3,-5,-4,8,-10,-10,10,-9],[1,-4,3,2,3,1,7,4,-10,4,7,10]],[[10,6,3,-8,1,-1,-1,6,-2,-1,-1,-10],[5,-2,3,-2,4,-6,3,-3,7,-1,-8,4],[4,-8,2,5,-1,2,1,-8,1,-1,-7,-1],[10,-3,-10,8,-2,-8,-6,2,10,-1,7,5],[1,-4,-2,-1,8,-3,-10,-2,-9,9,-5,-3],[6,-7,1,-10,-8,9,9,4,-5,-6,10,-1],[10,4,-2,10,1,8,-9,-4,-3,9,-6,-9],[-2,8,-3,-10,-9,-6,-5,7,-4,-8,5,4],[-9,-10,-7,-6,4,-2,-2,-7,1,10,-2,10],[3,-10,3,6,6,9,-5,-6,-10,5,1,1],[-7,-7,-1,4,-6,2,-10,-3,4,-2,6,7]],[[6,-8,-4,-10,3,10,6,-5,2,-4,-6,1],[-9,-1,2,-3,-10,9,1,6,7,-5,4,5],[-9,-8,-6,-7,3,1,7,-4,-4,-2,-2,-8],[-6,4,-5,6,10,9,3,2,-5,1,-9,-9],[-10,8,9,3,-9,7,-9,-5,7,6,1,7],[-1,10,-5,-2,9,-7,6,-8,-8,-10,-6,-6],[1,4,-8,-10,9,-10,8,-9,4,7,-5,-6],[8,2,10,-8,7,-5,-2,7,-6,6,-9,-2],[3,4,6,3,-5,-9,-2,-8,-8,-6,-1,-2],[10,-2,6,-3,-5,7,6,-7,-4,7,-5,4],[9,6,3,-4,9,-1,10,-2,-10,6,8,6]],[[-2,-7,-8,-2,1,5,-7,6,-7,-9,-2,3],[1,-5,-3,-10,-3,-3,7,6,-1,-1,-1,4],[-3,-6,5,4,-9,4,3,-8,-2,7,-6,9],[-5,-6,7,-6,-3,5,2,-4,10,6,4,10],[-4,-7,-2,-10,7,3,5,4,4,8,9,-8],[1,-4,7,-1,3,-3,-6,-9,-8,7,-4,5],[-10,-5,-6,10,8,-2,-10,-7,-3,-5,5,4],[-10,1,3,3,9,-4,2,4,-10,6,3,10],[-6,-7,-2,-6,-1,6,3,7,7,8,-7,-1],[3,4,1,-2,-10,-9,7,5,-4,-1,-10,10],[-2,-9,3,6,9,1,-6,8,9,10,-5,-5]],[[-4,8,7,-1,8,-9,-2,-8,5,-1,-2,8],[-6,-9,-3,-4,9,1,1,4,-4,2,-8,-6],[-10,3,-8,5,-9,-7,-9,9,4,-5,-2,2],[-1,-3,-5,-3,8,6,9,1,6,-2,10,2],[-1,-7,-5,10,-3,7,4,4,-6,-9,4,4],[-8,4,8,-2,-4,-4,7,-6,-9,-10,-5,-6],[-7,-7,-4,10,7,-2,1,-4,10,-3,-1,9],[4,-4,6,-9,4,-3,-6,2,8,-6,7,-5],[7,-6,-8,10,-6,8,-2,-6,-2,-7,-5,-2],[5,3,8,-9,-7,5,9,7,8,1,4,-10],[-8,7,-8,-6,6,4,-1,-1,7,-6,-1,-4]],[[-2,-1,-2,-5,8,4,10,10,3,-10,-7,3],[-6,10,1,6,-9,-2,-8,9,-8,3,-5,1],[-6,-2,-1,7,-1,-3,-3,8,6,10,8,9],[4,-3,2,9,-7,1,4,-5,6,-1,-7,-10],[-10,6,-2,3,6,9,2,-7,8,8,7,9],[1,4,-1,-2,7,-7,4,8,-8,9,-4,-10],[6,6,-9,-1,-5,10,-1,6,-4,-8,-5,-10],[3,2,8,4,9,-1,5,1,-7,7,-5,6],[8,-10,2,5,-1,-7,-8,-7,8,-5,8,-4],[-9,2,6,3,-4,6,-5,1,9,-7,8,-5],[-9,-1,8,-1,8,9,1,-5,-9,9,3,9]],[[10,8,7,-4,4,5,-1,-9,8,-3,1,4],[-1,3,-4,6,6,2,9,-4,-3,7,3,-5],[3,2,5,6,-8,2,1,8,3,-3,-9,-5],[5,-8,-7,3,-8,6,10,1,-10,2,2,9],[3,6,-10,-4,-5,7,-5,2,5,9,1,-5],[-5,-2,-10,-10,6,7,-9,5,3,-5,-2,2],[-8,-5,10,-10,1,-2,7,-6,-10,-9,1,-2],[-5,5,-8,5,7,-3,-1,4,6,-5,-9,-6],[-1,5,-10,-10,-6,2,-1,7,10,7,-4,-5],[8,-5,-10,-4,-7,-3,-8,2,8,-9,3,-7],[8,6,6,4,1,10,10,2,-7,-2,8,10]],[[-10,-4,-4,5,6,6,5,7,9,7,3,5],[-4,4,3,-9,2,-5,6,-10,3,4,6,-4],[-1,2,-10,-4,6,-6,4,9,1,-6,-5,-1],[2,6,9,3,-1,-3,-4,5,7,-8,-9,10],[-2,-10,3,-7,9,7,3,7,6,5,7,1],[-3,8,9,-3,6,-10,-5,6,-10,9,4,7],[5,2,-4,-9,-6,-1,7,-6,7,2,2,-3],[2,4,-9,-5,-7,-10,2,7,8,-2,2,-8],[5,1,1,-10,8,-10,-8,-5,4,5,-5,-3],[-2,8,7,3,9,9,-9,-4,4,-6,-8,5],[-6,-7,5,-4,9,1,9,7,-9,9,-5,5]],[[-8,2,-1,10,-9,8,1,1,3,5,5,1],[8,9,4,7,-4,8,7,-5,-4,-10,-5,4],[-10,-4,-3,-6,7,-6,-1,3,-1,-3,8,5],[-10,-9,-6,7,-4,-1,-5,7,6,3,8,3],[6,10,-3,-7,1,-10,-1,-5,7,1,6,-4],[-1,8,-10,1,-6,-1,9,3,-4,-9,1,9],[9,-10,7,-7,-10,10,-5,-7,3,3,-7,-1],[1,-7,3,4,5,-9,9,-3,-1,10,-5,1],[6,1,10,4,4,-6,7,-1,6,-7,5,4],[2,-4,-1,-6,-6,-10,-10,8,6,-3,5,-7],[5,6,1,-6,3,1,-4,3,-5,8,9,-3]],[[1,-8,-1,9,-9,4,6,5,1,-5,5,6],[-3,9,-2,7,-8,2,-1,3,-10,10,-10,-5],[-10,-7,8,-7,8,1,8,-5,-2,-6,-10,3],[-10,3,-7,-1,9,-4,-1,-6,-6,-1,4,3],[-3,-10,-1,-2,-3,9,5,7,-5,-1,-1,-7],[3,-3,4,-4,8,7,-5,8,-5,-8,-8,4],[-7,2,-1,6,7,-4,7,7,2,-5,-4,-6],[2,1,2,-5,-2,6,-8,-9,4,-7,1,-8],[-7,-3,6,1,-5,9,-10,6,-3,-5,-7,-5],[10,-1,5,8,-2,6,10,7,-10,5,-3,1],[-3,9,5,-10,8,-7,-1,-7,-6,1,10,3]],[[6,-1,-9,9,1,4,1,-2,-5,2,-6,9],[3,9,-9,5,-10,-6,-9,5,-10,7,-2,2],[7,-3,4,4,1,-3,8,6,4,-9,7,-4],[-2,2,-7,-1,-8,-5,4,2,-5,-6,10,-10],[-3,9,2,1,-2,10,-5,2,-3,6,8,-3],[-2,5,10,-8,4,-7,9,-4,10,10,3,9],[-1,-5,4,4,-6,7,6,-1,3,1,-5,-4],[-9,10,-8,-7,-7,-10,10,-6,4,-4,-1,3],[2,-9,-8,-2,7,8,3,4,8,1,-9,6],[-10,-6,-5,8,-2,4,10,-7,-8,-4,-10,8],[-4,8,6,9,-4,9,-3,-7,-4,6,-9,-2]],[[-6,5,-7,-6,2,4,-7,5,7,1,3,-4],[-10,-2,3,-3,2,-7,-3,-10,6,-4,-9,4],[-3,6,2,-4,10,1,-1,4,-4,-4,3,-1],[-10,-4,4,-4,3,-4,10,9,-5,5,5,-1],[2,6,-1,-6,2,1,8,-2,5,-5,-1,9],[5,1,-5,8,10,-3,-9,-6,-9,-6,2,7],[1,6,-6,-7,9,10,-4,9,10,-9,-1,1],[-9,4,-4,-3,-2,-6,-2,-1,5,-4,10,5],[5,3,6,-3,-1,-10,-9,10,10,4,-1,2],[6,4,-7,-8,-2,8,2,-5,-2,8,8,5],[-3,9,-3,9,4,3,-4,-6,1,4,-7,8]],[[6,1,3,-1,4,-10,10,4,3,-5,-10,3],[5,7,-10,1,9,1,9,-10,-3,-10,10,-7],[3,1,-5,7,4,3,-6,-2,-8,1,-7,8],[1,-5,2,-5,-5,2,-3,-3,-2,-2,3,-7],[7,6,-9,5,4,1,1,-5,-4,-10,6,5],[10,-10,9,1,5,1,-4,6,-4,6,-4,-4],[7,-7,-5,-1,-8,-7,-10,5,6,1,-2,-9],[-5,2,7,-8,-9,-5,7,-1,-9,-4,-7,-4],[4,-4,-4,3,-10,-7,-2,-1,-1,-7,-4,-5],[-9,4,7,10,5,8,-8,7,5,-7,10,-9],[-6,-3,-7,5,-5,-3,-7,4,8,1,4,-4]],[[-1,-7,10,-6,-2,-7,7,-6,-1,7,-3,-1],[-4,7,-8,6,-3,-4,8,-7,9,9,6,-8],[-8,4,-7,-2,-5,8,9,5,-8,-5,9,7],[6,3,3,8,8,1,-6,6,-4,-9,8,-7],[2,-3,5,-10,5,-4,9,-8,-3,2,-3,-3],[1,-2,-7,-7,4,-2,9,-2,7,3,-8,-3],[-9,4,-1,3,-10,-3,5,-6,2,-7,-9,-5],[5,-2,-8,-5,10,-1,8,-5,8,-3,-9,-3],[6,4,-9,4,7,-6,-5,-2,-2,-5,6,7],[9,-8,-1,-1,-8,-4,4,-10,8,-5,-9,-5],[7,-1,2,-8,10,-1,-6,-7,9,-3,1,-3]]], dtype = "int8")#candidate|1768|(15, 11, 12)|const|int8
bop_1769 = relay.equal(const_1767.astype('bool'), relay.reshape(const_1768.astype('bool'), relay.shape_of(const_1767))) # shape=(15, 11, 12)
uop_1794 = relay.log2(const_1768.astype('float32')) # shape=(15, 11, 12)
uop_1798 = relay.acosh(uop_1794.astype('float32')) # shape=(15, 11, 12)
bop_1803 = relay.bitwise_and(uop_1794.astype('uint16'), relay.reshape(const_1768.astype('uint16'), relay.shape_of(uop_1794))) # shape=(15, 11, 12)
output = relay.Tuple([bop_1769,uop_1798,bop_1803,])
output2 = relay.Tuple([bop_1769,uop_1798,bop_1803,])
func_1808 = relay.Function([], output)
mod['func_1808'] = func_1808
mod = relay.transform.InferType()(mod)
mutated_mod['func_1808'] = func_1808
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1808_call = mutated_mod.get_global_var('func_1808')
call_1809 = func_1808_call()
output = call_1809
func_1810 = relay.Function([], output)
mutated_mod['func_1810'] = func_1810
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1808_call = mod.get_global_var('func_1808')
func_1810_call = mutated_mod.get_global_var('func_1810')
call_1823 = relay.TupleGetItem(func_1808_call(), 1)
call_1824 = relay.TupleGetItem(func_1810_call(), 1)
var_1844 = relay.var("var_1844", dtype = "float32", shape = (15, 11, 12))#candidate|1844|(15, 11, 12)|var|float32
bop_1845 = relay.less_equal(call_1823.astype('bool'), relay.reshape(var_1844.astype('bool'), relay.shape_of(call_1823))) # shape=(15, 11, 12)
bop_1848 = relay.less_equal(call_1824.astype('bool'), relay.reshape(var_1844.astype('bool'), relay.shape_of(call_1824))) # shape=(15, 11, 12)
output = bop_1845
output2 = bop_1848
func_1852 = relay.Function([var_1844,], output)
mod['func_1852'] = func_1852
mod = relay.transform.InferType()(mod)
var_1853 = relay.var("var_1853", dtype = "float32", shape = (15, 11, 12))#candidate|1853|(15, 11, 12)|var|float32
output = func_1852(var_1853)
func_1854 = relay.Function([var_1853], output)
mutated_mod['func_1854'] = func_1854
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1808_call = mod.get_global_var('func_1808')
func_1810_call = mutated_mod.get_global_var('func_1810')
call_1856 = relay.TupleGetItem(func_1808_call(), 1)
call_1857 = relay.TupleGetItem(func_1810_call(), 1)
uop_1878 = relay.acos(call_1856.astype('float64')) # shape=(15, 11, 12)
uop_1880 = relay.acos(call_1857.astype('float64')) # shape=(15, 11, 12)
uop_1884 = relay.log10(uop_1878.astype('float64')) # shape=(15, 11, 12)
uop_1886 = relay.log10(uop_1880.astype('float64')) # shape=(15, 11, 12)
output = uop_1884
output2 = uop_1886
func_1890 = relay.Function([], output)
mod['func_1890'] = func_1890
mod = relay.transform.InferType()(mod)
mutated_mod['func_1890'] = func_1890
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1890_call = mutated_mod.get_global_var('func_1890')
call_1891 = func_1890_call()
output = call_1891
func_1892 = relay.Function([], output)
mutated_mod['func_1892'] = func_1892
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1890_call = mod.get_global_var('func_1890')
func_1892_call = mutated_mod.get_global_var('func_1892')
call_1901 = func_1890_call()
call_1902 = func_1890_call()
func_509_call = mod.get_global_var('func_509')
func_512_call = mutated_mod.get_global_var('func_512')
const_1924 = relay.const([-5.810609,-2.029794,1.079910,-1.823459,-0.244469,8.832152,-0.072667,7.171612,-4.890712,9.051018,4.294398,-3.220064,3.838889,-6.317172,8.226211,8.312476,-1.640482,-6.093140,1.525345,5.597290,6.324082,-7.861139,-1.479335,-7.832317,2.897382,-4.182237,-8.290707,-6.906077,-1.425793,-5.970998,0.593739,2.944141,6.149560,9.602394,-9.274864,-4.817266,-9.463134,7.179249,9.218661,2.384099,7.296212,9.643701,-6.207081,4.606204,-0.213681,-8.844659,0.975172,-1.756040,2.854656,9.166239,-6.801137,-1.144091,9.265088,4.013969,4.609077,1.873650,0.791764,-6.207503,-5.947240,-1.245042,3.220944,-6.183874,-6.480478,5.504350,5.740566,9.881493,9.553504,-9.546320,5.996998,9.111630,-8.712444,7.425745,5.602474,8.653979,-2.455351,-3.750766,7.947324,-1.853324,5.497734,9.769756,2.206386,-2.508231,-2.918880,6.822586,2.002971,7.791679,1.089822,5.413619,-3.341528,-2.556253,-1.659157,6.042737,7.393477,9.134448,6.136957,7.504577,7.990783,9.941741,-7.547715,9.623979,6.871083,0.461116,7.938066,8.235461,-0.423588,-2.202705,3.377764,-3.219516,-1.519619,3.328801,-4.724660,-9.879043,5.942754,-2.900022,-8.260238,0.102417,-2.531295,-8.687740,4.942935,7.807218,1.224100,-6.485265,2.777914,8.163323,-2.275556,-6.105241,-9.246547,-3.100435,-5.927998,5.085763,-7.974038,2.474967,-5.337420,-5.998745,6.315294,7.184772,-3.952449,6.619394,-0.297820,4.410898,-8.693732,1.010117,-3.574917,-4.458226,-2.068473,4.649579,-1.531527,1.182025,-2.257779,-9.055387,-8.322187,-4.145684,7.475066,-5.196192,-7.972460,-2.549394,0.184071,4.998707,5.608472,1.200732,-3.244946,-6.448995,2.208325,9.483570,1.108614,6.142456,1.056184,-3.053385,-7.019622,-6.860695,-1.266304,3.435053,-6.262179,0.808986,-9.254666,-2.128455,1.403388,6.188729,-5.467810,-3.579314,-1.986541,3.568571,5.750792,-3.976082,5.989776,6.516811,3.425695,6.706259,7.152286,9.868867,6.124257,-3.617006,-9.500925,5.378031,-7.825160,-3.083087,-1.148472,-9.356134,-1.225078,9.273325,3.872354,7.152236,9.385598,4.071496,-8.799579,-9.858096,-3.072371,-8.485722,-0.051879,7.736610,-1.156557,2.367668,-6.708097,-8.819828,-2.964045,-8.165092,-7.727378,-8.167749,-0.908074,8.232173,-1.672764,4.232914,-4.303224,9.585864,1.945105,-1.506845,-9.589579,-2.497871,5.837965,0.388200,-3.494728,-1.306328,-7.765244,-0.761155,-8.574580,4.690658,1.779470,0.349730,-6.275685,-3.845646,5.656767,5.012379,-4.954409,-5.651725,5.315710,8.701634,6.380091,-1.400271,-9.017770,0.175570,-1.902828,6.725404,7.662112,-5.397851,1.356457,3.282717,6.819071,2.951377,9.226987,4.323038,8.107428,-8.051155,-1.148179,-9.591058,-4.919856,3.108456,-7.558176,-6.370704,8.365675,-7.314203,-5.412020,-1.699754,-1.915932,3.372475,7.075348,-4.999451,-6.527413,-0.451310,-9.100649,8.904971,-4.890326,9.720941,-2.237939,-9.666700,-4.678784,-6.002863,-9.328825,-9.451895,-5.755911,-6.403154,1.160942,6.295758,-3.952157,-5.206510,-6.012853,3.043918,9.424610,-4.265415,-8.611704,6.535602,7.610864,7.104442,-7.934867,-9.911044,-5.034847,1.838066,-7.167404,0.695249,-6.084496,7.933660,3.909193,0.568049,4.437479,-7.920905,-3.470462,3.951079,-3.467857,4.023606,-8.735498,0.210005,9.927332,-2.697083,1.878673,-3.668774,-2.430724,8.654158,-2.931251,-8.784382,-3.878606,1.641588,-4.358300,-1.830864,-7.510753,-7.986066,8.617472,8.588988,-4.036207,-8.405760,6.630755,5.144049,-3.424473,3.590355,4.849747,4.184012,5.941875,-4.001941,4.681518,-6.656367,-6.453824,-3.492751,-9.043493,-0.951555,-8.253079,8.296837,7.945234,4.398674,5.933654,-9.490198,-4.520372,-9.725892], dtype = "float64")#candidate|1924|(360,)|const|float64
call_1923 = func_509_call(relay.reshape(const_1924.astype('float64'), [10, 4, 9]))
call_1925 = func_509_call(relay.reshape(const_1924.astype('float64'), [10, 4, 9]))
func_793_call = mod.get_global_var('func_793')
func_797_call = mutated_mod.get_global_var('func_797')
var_1930 = relay.var("var_1930", dtype = "float64", shape = (42,))#candidate|1930|(42,)|var|float64
const_1931 = relay.const([2,1,-5,1,-9,8,-10,-6,10,-2,4,-10,7,9,-5,-2,-10,-8,-5,-10,7,-8,-2,7,8,-9,-7,9,6,-7,-2,7,-4,-8,5,5,5,-9,10,1,7,4,-10,8,-3,-7,4,9,-1,6,5,10,-9,-7,6,8,-9,-7,-5,4,-10,3,5,1,-8,-3,-10,-3,3,7,7,5,6,-6,7,-7,1,10,-3,-3,7,4,-9,4,6,-3,7,-10,8,-3,5,1,-1,3,1,5,-2,-5,3,-4,1,3,-3,-10,-8,-7,5,1,8,-2,-8,9,3,10,1,8,-1,-1,-3,-5,-6,-5,10,-8,8,9,6,-7,-10,-6,2,7,4,-8,-1,-9,-5,1,-10,6,-1,-7,3,-6,10,-5,8,6,10,-1,8,9,4,-1,-10,-4,1,6,5,4,7,-8,1,-7,1,-3,7,4,-3,6,9,-2,1,-4,-1,-2,10,-5,7,2,-9,-6,-9,10,5,-5,5,-7,-5,-5,-1,-7], dtype = "uint16")#candidate|1931|(192,)|const|uint16
call_1929 = relay.TupleGetItem(func_793_call(relay.reshape(var_1930.astype('float64'), [6, 7]), relay.reshape(const_1931.astype('uint16'), [192,]), ), 2)
call_1932 = relay.TupleGetItem(func_797_call(relay.reshape(var_1930.astype('float64'), [6, 7]), relay.reshape(const_1931.astype('uint16'), [192,]), ), 2)
func_1674_call = mod.get_global_var('func_1674')
func_1676_call = mutated_mod.get_global_var('func_1676')
call_1933 = relay.TupleGetItem(func_1674_call(relay.reshape(call_1923.astype('float64'), [360,])), 2)
call_1934 = relay.TupleGetItem(func_1676_call(relay.reshape(call_1923.astype('float64'), [360,])), 2)
func_1852_call = mod.get_global_var('func_1852')
func_1854_call = mutated_mod.get_global_var('func_1854')
call_1935 = func_1852_call(relay.reshape(call_1901.astype('float32'), [15, 11, 12]))
call_1936 = func_1852_call(relay.reshape(call_1901.astype('float32'), [15, 11, 12]))
func_1890_call = mod.get_global_var('func_1890')
func_1892_call = mutated_mod.get_global_var('func_1892')
call_1948 = func_1890_call()
call_1949 = func_1890_call()
uop_1953 = relay.log2(call_1929.astype('float32')) # shape=(192,)
uop_1955 = relay.log2(call_1932.astype('float32')) # shape=(192,)
output = relay.Tuple([call_1901,call_1923,const_1924,var_1930,const_1931,call_1933,call_1935,call_1948,uop_1953,])
output2 = relay.Tuple([call_1902,call_1925,const_1924,var_1930,const_1931,call_1934,call_1936,call_1949,uop_1955,])
func_1960 = relay.Function([var_1930,], output)
mod['func_1960'] = func_1960
mod = relay.transform.InferType()(mod)
mutated_mod['func_1960'] = func_1960
mutated_mod = relay.transform.InferType()(mutated_mod)
var_1961 = relay.var("var_1961", dtype = "float64", shape = (42,))#candidate|1961|(42,)|var|float64
func_1960_call = mutated_mod.get_global_var('func_1960')
call_1962 = func_1960_call(var_1961)
output = call_1962
func_1963 = relay.Function([var_1961], output)
mutated_mod['func_1963'] = func_1963
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1890_call = mod.get_global_var('func_1890')
func_1892_call = mutated_mod.get_global_var('func_1892')
call_1991 = func_1890_call()
call_1992 = func_1890_call()
output = call_1991
output2 = call_1992
func_2000 = relay.Function([], output)
mod['func_2000'] = func_2000
mod = relay.transform.InferType()(mod)
mutated_mod['func_2000'] = func_2000
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2000_call = mutated_mod.get_global_var('func_2000')
call_2001 = func_2000_call()
output = call_2001
func_2002 = relay.Function([], output)
mutated_mod['func_2002'] = func_2002
mutated_mod = relay.transform.InferType()(mutated_mod)
const_2044 = relay.const([[[-4.328162,-0.137351,2.856877,3.511959,-9.792275]],[[-2.285707,3.243168,6.175671,-3.289508,-5.175167]],[[9.099199,-6.701043,-3.211080,9.829721,3.370407]],[[-4.908898,1.531429,-4.648281,9.342690,-2.840498]],[[2.564372,-9.410547,4.514347,9.535197,7.232371]],[[-2.244206,-2.106788,9.808442,-2.916283,-5.337838]],[[4.624888,-2.091317,1.653712,8.196586,-1.636245]],[[-2.286244,-7.720934,7.777828,-4.549189,8.853280]]], dtype = "float64")#candidate|2044|(8, 1, 5)|const|float64
uop_2045 = relay.cos(const_2044.astype('float64')) # shape=(8, 1, 5)
output = uop_2045
output2 = uop_2045
func_2047 = relay.Function([], output)
mod['func_2047'] = func_2047
mod = relay.transform.InferType()(mod)
mutated_mod['func_2047'] = func_2047
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2047_call = mutated_mod.get_global_var('func_2047')
call_2048 = func_2047_call()
output = call_2048
func_2049 = relay.Function([], output)
mutated_mod['func_2049'] = func_2049
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1808_call = mod.get_global_var('func_1808')
func_1810_call = mutated_mod.get_global_var('func_1810')
call_2069 = relay.TupleGetItem(func_1808_call(), 0)
call_2070 = relay.TupleGetItem(func_1810_call(), 0)
func_114_call = mod.get_global_var('func_114')
func_116_call = mutated_mod.get_global_var('func_116')
const_2072 = relay.const([-4.400588,-9.841317,-8.787693,-3.254347,-3.482962,-3.405956,2.321975,-1.085374,3.868363,1.681752,5.874222,4.644644,6.961093,2.911730,9.324672,-1.783179,-6.720451,3.094760,3.838023,-6.880437,-8.293918,-7.582100,8.601394,2.366126,-9.800167,4.464748,-3.816453,-9.813786,5.594748,-1.460239,7.908138,8.212902,7.480392,-7.444597,-3.926128,9.808261,8.096852,-5.537967,-8.961000,-8.125377,0.875125,-5.639939,-6.702141,8.967124,1.291629,1.100843,0.101508,-8.486608,3.019667,4.813387,8.249980,4.999996,7.078135,0.345000,6.906166,-3.617822,-7.870613,-5.401894,6.929120,-3.465780,4.932653,4.142318,-7.105681,7.575623,1.734695,-2.774195,7.989693,1.035130,3.871195,0.127847,-3.213678,1.123803,-8.270830,-1.462804,-2.516276,-2.566555,-6.911760,-5.241064,2.863293,-6.133029,-7.296723,-2.206891,-3.741088,-0.386794,-9.056953,-5.917684,0.638796,7.955061,3.049232,-1.261530,4.975174,6.849481,-8.761808,-9.359172,-1.254555,-7.166549,3.456236,-1.276633,8.589363,-1.614828,-4.879683,-5.333397,-9.498875,-5.058344,8.525848,6.541040,9.655947,-3.754486,-1.732405,-5.116474,-7.111671,-6.247091,9.718336,4.449333,8.769068,-2.111555,8.967846,-8.153387,5.698943,4.843582,2.604483,3.903671,-7.067980,-2.942485,-1.595732,3.809610,-6.762796,1.815211,-4.833796,-0.332933,-9.045005,-6.076147,5.290726,9.139606,5.620499,-2.210747,-4.355726,5.171421,2.508712,9.028076,-1.413905,-3.422167,-0.360379,-5.686718,8.200216,7.184679,-6.499856,4.198262,-0.625695,-9.333175,0.534395,-3.936057,-8.283184,-6.188040,9.142887,4.568696,-9.214960,-6.062550,1.514757,-5.078742,3.361364,-8.429959,6.458835,-0.539393,4.821300,2.506042,6.159056,-2.246950,8.070012,7.127998,-4.222873,8.383317,8.682701,-6.663423,-2.501007,4.321332,-9.489875,3.338405,8.973282,8.214904,-4.306395,9.336319,-9.329221,5.060196,7.840041,-9.175791,-3.857712,-6.763412,-5.094833,-8.433487,2.536917,-0.312470,-8.361340,8.738090,5.260241,-5.337181,8.326308,2.647490,1.016281,-4.463803,-1.166827,-2.960570,-6.175774,-8.654213,1.207675,2.705618,-4.483549,-3.279146,-7.603276,-9.301321,-3.615337,9.183799,-4.160447,9.256445,-9.471176,-0.747216,9.220487,4.814489,-4.049367,-7.860050,-2.640053,-9.333077,7.584469,1.330934,0.415032,-5.353532,-5.948055,4.597399,-7.408752,-7.625456,-8.430679,5.174213,-5.391818,7.030036,-7.067390,-3.890979,-0.696553,1.414164,-4.009013,2.679771,-1.442693,0.224967,2.630963,-1.444214,-5.205316,-8.855381,4.762927,-6.604663,-5.859666,-6.871925,3.027273,-0.616677,-9.924769,3.490569,-3.672091,-2.222076,-4.401442,-3.772554,-5.630583,-4.589428,0.214424,-5.119001,-0.588089,-5.425248,-5.791067,-6.707237,-5.369334,2.695229,-6.728520,4.782523,8.345664,-1.564068,8.210869,-4.780409,3.035158,-6.534045,9.956219,8.379482,3.535954,9.385786,8.592532,7.352705,-9.717394,-4.085926,-9.635158,5.026863,6.445925,2.200700,-4.056988,-6.413474,-8.868557,5.227882,5.590673,-5.226929,-7.733926,2.545436,0.637950,3.889051,6.077399,-3.491420,8.347992,-8.215239,0.458662,-4.295814,3.402687,0.925303,2.897649,2.287511,-1.882012,-3.410277,3.281688,-8.655234,-7.803730,-0.498061,5.314442,2.464555,1.718586,7.429797,-4.703196,-8.798401,-6.345331,3.505082,-9.412605,7.465090,-3.854842,-3.224643,5.476666,-7.935376,-3.290555,6.006385,-7.445142,7.302833,-8.830495,-9.613376,-8.384152,-4.604821,6.942274,-5.424869,4.869473,-7.604172,1.504013,0.054204,5.820674,5.248725,6.471074,9.209730,5.025639,4.720661,6.957081,-9.275846,-7.279278,-5.813109,3.717516,-4.771626,-5.299489,-1.230185,4.618044,-2.460457,-8.479530,-9.655469,7.303099,8.287052,-1.849587,-1.856930,-5.955040,9.600467,-4.710843,-6.990788,2.878212,-4.073301,2.535965,0.980355,-0.595775,3.641301,0.538050,-3.665782,1.476503,-6.352249,-5.546337,4.542064,4.310224,-1.306862,6.451709,3.455606,3.591237,-4.301889,0.379209,7.197492,-2.654455,-0.706286,-5.011086,-4.081771,-2.046398,-9.110524,8.514156,0.298332,-5.185576,-4.011442,8.512802,-5.248847,2.907757,8.853720,9.063139,4.487550,-8.184596,6.606628,-9.674004,-6.347169,-9.862376,-7.664262,2.998430,1.222597,3.500453,6.653648,0.750576,3.740523,-7.474360,3.065103,8.718683,0.087659,-8.393175,-9.130098,-7.345076,2.393822,1.667635,6.249718,-6.084061,0.134335,-7.862802,-5.260315,-0.057538,3.383285,-4.928609,-5.861217,7.197876,2.368840,8.071547,-7.150281,0.572591,-9.092168,9.385990,9.941711,-0.728675,2.821703,0.500133,9.266643,6.622749,-3.439889,1.252316,4.157571,9.630373,2.377832,6.780324,-1.180305,3.070513,4.061595,-4.869551,-1.703180,0.165220,-6.045335,1.829591,9.479845,-8.893076,2.901521,-1.789192,-6.686354,0.619224,-7.232050,4.789577,9.015461,-3.230767,-9.237618,0.920218,9.035953,-7.362351,0.106166,5.546505,4.385535,1.224271,-9.525591,2.354324,3.561604,-7.336127,7.326981,-7.807890,-1.192976,-3.291886,-0.208855,-5.425401,-3.587885], dtype = "float64")#candidate|2072|(490,)|const|float64
call_2071 = func_114_call(relay.reshape(const_2072.astype('float64'), [7, 14, 5]))
call_2073 = func_114_call(relay.reshape(const_2072.astype('float64'), [7, 14, 5]))
bop_2084 = relay.logical_and(const_2072.astype('bool'), relay.reshape(call_2071.astype('bool'), relay.shape_of(const_2072))) # shape=(490,)
bop_2087 = relay.logical_and(const_2072.astype('bool'), relay.reshape(call_2073.astype('bool'), relay.shape_of(const_2072))) # shape=(490,)
bop_2088 = relay.greater(const_2072.astype('bool'), relay.reshape(call_2071.astype('bool'), relay.shape_of(const_2072))) # shape=(490,)
bop_2091 = relay.greater(const_2072.astype('bool'), relay.reshape(call_2073.astype('bool'), relay.shape_of(const_2072))) # shape=(490,)
bop_2093 = relay.subtract(const_2072.astype('int32'), relay.reshape(call_2071.astype('int32'), relay.shape_of(const_2072))) # shape=(490,)
bop_2096 = relay.subtract(const_2072.astype('int32'), relay.reshape(call_2073.astype('int32'), relay.shape_of(const_2072))) # shape=(490,)
uop_2106 = relay.asinh(bop_2084.astype('float32')) # shape=(490,)
uop_2108 = relay.asinh(bop_2087.astype('float32')) # shape=(490,)
var_2113 = relay.var("var_2113", dtype = "float32", shape = (490,))#candidate|2113|(490,)|var|float32
bop_2114 = relay.bitwise_and(uop_2106.astype('int16'), relay.reshape(var_2113.astype('int16'), relay.shape_of(uop_2106))) # shape=(490,)
bop_2117 = relay.bitwise_and(uop_2108.astype('int16'), relay.reshape(var_2113.astype('int16'), relay.shape_of(uop_2108))) # shape=(490,)
output = relay.Tuple([call_2069,bop_2088,bop_2093,bop_2114,])
output2 = relay.Tuple([call_2070,bop_2091,bop_2096,bop_2117,])
func_2122 = relay.Function([var_2113,], output)
mod['func_2122'] = func_2122
mod = relay.transform.InferType()(mod)
var_2123 = relay.var("var_2123", dtype = "float32", shape = (490,))#candidate|2123|(490,)|var|float32
output = func_2122(var_2123)
func_2124 = relay.Function([var_2123], output)
mutated_mod['func_2124'] = func_2124
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2000_call = mod.get_global_var('func_2000')
func_2002_call = mutated_mod.get_global_var('func_2002')
call_2183 = func_2000_call()
call_2184 = func_2000_call()
func_1890_call = mod.get_global_var('func_1890')
func_1892_call = mutated_mod.get_global_var('func_1892')
call_2208 = func_1890_call()
call_2209 = func_1890_call()
output = relay.Tuple([call_2183,call_2208,])
output2 = relay.Tuple([call_2184,call_2209,])
func_2211 = relay.Function([], output)
mod['func_2211'] = func_2211
mod = relay.transform.InferType()(mod)
mutated_mod['func_2211'] = func_2211
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2211_call = mutated_mod.get_global_var('func_2211')
call_2212 = func_2211_call()
output = call_2212
func_2213 = relay.Function([], output)
mutated_mod['func_2213'] = func_2213
mutated_mod = relay.transform.InferType()(mutated_mod)
const_2292 = relay.const([[[0.182688,0.562308,-6.481529,-4.667411,-7.509739,-8.259336,-3.985264,7.987915],[-8.455196,3.499436,-3.003576,0.430858,2.554651,-8.705968,-9.256789,3.136851],[-3.675389,1.706956,-5.400472,6.569513,-7.661537,-0.688650,-1.232400,4.032417],[8.975213,-2.526936,9.130325,-1.141623,4.793307,-1.645612,-4.408212,3.810215],[-3.962358,0.511005,-6.535843,4.781096,9.604033,4.991974,5.983577,-3.093887],[8.182786,5.415882,-6.880968,-5.480272,-2.405335,0.251079,-9.620881,9.687854],[3.823696,3.287881,4.230388,-5.225654,-4.741351,3.291702,2.990220,6.786568],[-6.188576,6.023716,-1.213669,-3.799166,-3.507790,3.169181,-2.036179,-6.948740],[0.880798,3.161709,-6.376260,9.574873,3.217530,8.171160,-4.252518,6.442352],[1.981518,-4.746938,-2.343405,-3.606962,-3.804523,-4.510982,-3.217845,1.754861],[-2.710938,-6.200194,-0.434262,-6.409988,-1.565528,-2.601684,-9.692672,2.722547],[-2.278040,8.119461,-0.455306,-7.494891,3.530516,4.905465,8.930452,3.999048],[5.382575,-4.083784,-3.744953,5.547933,-0.124347,9.457445,-5.366305,-5.375800],[-6.738587,3.179524,7.875993,-1.760577,-6.598842,-9.456090,-7.588480,-2.747872]],[[-3.126603,7.399615,6.332000,6.751024,3.769813,-1.088888,-6.192810,-8.542723],[-8.813360,9.969673,5.774867,-6.534928,-2.776347,6.257154,-8.205408,-2.382126],[0.250866,5.855153,0.015066,-6.913359,-1.858276,-6.639600,-1.160508,9.421916],[-4.276952,-1.412793,-7.403927,-4.721299,-0.807748,2.010402,4.645665,6.858649],[-2.358262,3.327744,5.918316,-7.477431,-2.262864,-9.632795,9.356934,9.422942],[4.248732,-3.570706,-8.198240,-3.527530,-9.689080,0.695600,7.933192,-8.832764],[-1.042175,8.055611,-8.376630,1.458453,-7.167564,0.998699,0.929586,-7.536451],[-3.481617,3.518117,4.925428,5.496562,4.978576,5.260605,7.126692,-9.959686],[2.826398,-3.751917,2.879188,-7.413983,2.788749,-3.256085,-4.727696,7.400897],[3.716875,8.385752,-0.917385,-8.429121,2.607690,4.016824,-4.863064,-1.584872],[9.550160,4.351726,-3.372975,9.623186,6.593527,6.514503,-6.727970,-2.249692],[6.074131,-8.739389,0.036269,3.009194,-4.693959,0.237925,8.611011,-1.954927],[-8.895912,2.333284,2.688882,8.473377,-0.996620,-9.747890,2.788963,-2.234097],[-0.121745,2.006355,-9.525916,-3.373459,0.689457,1.837456,-4.521090,8.895359]],[[9.276554,1.724750,2.816558,1.723319,8.872369,-7.285687,-3.827375,6.632929],[1.779276,-6.680074,-4.744347,-8.361197,8.239156,-7.751130,3.284175,-2.772298],[-9.492670,0.299904,-4.409859,-0.619250,-2.655406,6.035076,2.167031,4.579785],[1.230511,-4.816740,6.102558,3.378168,-9.426832,-4.158950,1.343665,-7.685392],[-1.438979,-7.173956,-6.972049,6.270398,7.686178,-9.388653,4.825809,-9.426124],[6.773152,-5.351650,2.602155,6.641371,3.754226,-1.775350,7.843967,4.850389],[-9.097944,-3.305348,-1.183392,-8.705202,-4.576707,-7.300959,-7.893123,-7.072339],[-7.143841,-2.372032,-1.067500,4.076416,7.789202,2.927804,4.266187,8.918198],[-7.473595,-3.668271,6.251194,-6.955344,2.958920,0.613361,1.678958,-4.041708],[4.957340,-5.645695,-1.188602,9.645836,5.690481,-5.962726,5.388344,-8.878918],[-7.665567,-9.357502,7.990081,7.578417,-2.552326,4.668509,0.913193,3.187079],[-8.253425,-6.738265,2.885696,1.340171,-5.005240,9.016327,0.582469,8.835442],[4.741234,3.787010,0.464798,6.149287,9.228641,8.773101,-8.983372,8.347633],[-1.869915,-6.767839,-3.068416,-6.276252,2.443084,-3.614724,-5.653607,-5.803862]]], dtype = "float32")#candidate|2292|(3, 14, 8)|const|float32
uop_2293 = relay.exp(const_2292.astype('float32')) # shape=(3, 14, 8)
output = uop_2293
output2 = uop_2293
func_2300 = relay.Function([], output)
mod['func_2300'] = func_2300
mod = relay.transform.InferType()(mod)
mutated_mod['func_2300'] = func_2300
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2300_call = mutated_mod.get_global_var('func_2300')
call_2301 = func_2300_call()
output = call_2301
func_2302 = relay.Function([], output)
mutated_mod['func_2302'] = func_2302
mutated_mod = relay.transform.InferType()(mutated_mod)
const_2337 = relay.const([[[False,False,True,False],[False,True,True,True],[False,True,True,True],[True,False,True,False],[True,False,True,False],[False,True,False,False]]], dtype = "bool")#candidate|2337|(1, 6, 4)|const|bool
var_2338 = relay.var("var_2338", dtype = "bool", shape = (11, 6, 4))#candidate|2338|(11, 6, 4)|var|bool
bop_2339 = relay.logical_and(const_2337.astype('bool'), var_2338.astype('bool')) # shape=(11, 6, 4)
output = bop_2339
output2 = bop_2339
func_2353 = relay.Function([var_2338,], output)
mod['func_2353'] = func_2353
mod = relay.transform.InferType()(mod)
mutated_mod['func_2353'] = func_2353
mutated_mod = relay.transform.InferType()(mutated_mod)
var_2354 = relay.var("var_2354", dtype = "bool", shape = (11, 6, 4))#candidate|2354|(11, 6, 4)|var|bool
func_2353_call = mutated_mod.get_global_var('func_2353')
call_2355 = func_2353_call(var_2354)
output = call_2355
func_2356 = relay.Function([var_2354], output)
mutated_mod['func_2356'] = func_2356
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2211_call = mod.get_global_var('func_2211')
func_2213_call = mutated_mod.get_global_var('func_2213')
call_2361 = relay.TupleGetItem(func_2211_call(), 0)
call_2362 = relay.TupleGetItem(func_2213_call(), 0)
func_2047_call = mod.get_global_var('func_2047')
func_2049_call = mutated_mod.get_global_var('func_2049')
call_2364 = func_2047_call()
call_2365 = func_2047_call()
func_1890_call = mod.get_global_var('func_1890')
func_1892_call = mutated_mod.get_global_var('func_1892')
call_2381 = func_1890_call()
call_2382 = func_1890_call()
uop_2390 = relay.cosh(call_2381.astype('float64')) # shape=(15, 11, 12)
uop_2392 = relay.cosh(call_2382.astype('float64')) # shape=(15, 11, 12)
func_1960_call = mod.get_global_var('func_1960')
func_1963_call = mutated_mod.get_global_var('func_1963')
var_2400 = relay.var("var_2400", dtype = "float64", shape = (42,))#candidate|2400|(42,)|var|float64
call_2399 = relay.TupleGetItem(func_1960_call(relay.reshape(var_2400.astype('float64'), [42,])), 8)
call_2401 = relay.TupleGetItem(func_1963_call(relay.reshape(var_2400.astype('float64'), [42,])), 8)
func_1852_call = mod.get_global_var('func_1852')
func_1854_call = mutated_mod.get_global_var('func_1854')
call_2407 = func_1852_call(relay.reshape(call_2381.astype('float32'), [15, 11, 12]))
call_2408 = func_1852_call(relay.reshape(call_2381.astype('float32'), [15, 11, 12]))
const_2429 = relay.constdtype = "float64")#candidate|2429|(15, 11, 12)|const|float64
bop_2430 = relay.logical_or(uop_2390.astype('bool'), relay.reshape(const_2429.astype('bool'), relay.shape_of(uop_2390))) # shape=(15, 11, 12)
bop_2433 = relay.logical_or(uop_2392.astype('bool'), relay.reshape(const_2429.astype('bool'), relay.shape_of(uop_2392))) # shape=(15, 11, 12)
output = relay.Tuple([call_2361,call_2364,call_2399,var_2400,call_2407,bop_2430,])
output2 = relay.Tuple([call_2362,call_2365,call_2401,var_2400,call_2408,bop_2433,])
func_2439 = relay.Function([var_2400,], output)
mod['func_2439'] = func_2439
mod = relay.transform.InferType()(mod)
mutated_mod['func_2439'] = func_2439
mutated_mod = relay.transform.InferType()(mutated_mod)
var_2440 = relay.var("var_2440", dtype = "float64", shape = (42,))#candidate|2440|(42,)|var|float64
func_2439_call = mutated_mod.get_global_var('func_2439')
call_2441 = func_2439_call(var_2440)
output = call_2441
func_2442 = relay.Function([var_2440], output)
mutated_mod['func_2442'] = func_2442
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2211_call = mod.get_global_var('func_2211')
func_2213_call = mutated_mod.get_global_var('func_2213')
call_2449 = relay.TupleGetItem(func_2211_call(), 1)
call_2450 = relay.TupleGetItem(func_2213_call(), 1)
output = relay.Tuple([call_2449,])
output2 = relay.Tuple([call_2450,])
func_2454 = relay.Function([], output)
mod['func_2454'] = func_2454
mod = relay.transform.InferType()(mod)
output = func_2454()
func_2455 = relay.Function([], output)
mutated_mod['func_2455'] = func_2455
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2047_call = mod.get_global_var('func_2047')
func_2049_call = mutated_mod.get_global_var('func_2049')
call_2496 = func_2047_call()
call_2497 = func_2047_call()
func_1674_call = mod.get_global_var('func_1674')
func_1676_call = mutated_mod.get_global_var('func_1676')
const_2513 = relay.const([0.299574,9.177524,5.070693,-2.223645,5.806608,-8.744135,-2.786627,-2.893437,7.226153,-0.858605,5.137568,-7.425465,-4.829492,8.643513,-8.724582,3.101563,-1.220481,3.180547,-6.519150,-1.504901,9.445172,9.089317,2.305082,-6.914807,0.488451,-3.237305,-0.536233,7.953799,-7.033318,-8.323408,-6.099321,-4.141519,-1.148898,-4.946245,-6.712040,8.833127,9.183514,1.849646,-7.196603,7.715284,3.205820,-6.400378,-5.099062,-6.131845,-9.573976,7.398167,-2.235547,5.534891,2.174021,-6.406274,-9.531510,3.923101,-9.919895,-8.850493,-7.139480,0.808084,-4.924272,0.043865,5.399102,4.327756,-3.810917,-7.641284,-4.537805,-9.963542,-2.164139,8.013857,-6.492977,-9.206886,-6.466279,3.304518,3.420541,-5.971780,-2.872831,-1.330900,1.734126,6.408243,4.933548,-8.807927,2.220505,7.415815,7.142826,4.254937,-6.102428,9.803096,-9.934266,4.764491,0.427694,1.814138,-3.849846,7.780832,4.770055,3.837358,-1.232456,0.364135,-3.177157,5.794403,1.961885,1.757848,6.596438,-9.546963,5.183304,0.798120,9.630915,-8.119086,-4.077211,6.864660,-5.884668,-6.895913,2.649366,9.716827,5.193751,5.179544,3.142434,-7.072916,2.298755,-6.659129,-2.240339,1.652038,6.387526,3.741288,7.949480,5.291457,-4.891710,5.651418,9.239981,1.024375,4.106430,-8.870601,-1.287568,2.139062,3.511127,-9.072182,8.172300,-6.826662,-5.068530,9.582344,-6.231290,0.057088,-3.904197,-1.696353,8.136863,-0.768132,7.080176,3.903245,5.021054,7.005060,5.639566,5.249926,-7.440013,4.765107,0.860477,-4.220510,1.616033,-4.168568,-7.258450,-0.680939,8.091910,7.726893,8.071635,-6.856510,8.435841,9.096710,2.712902,-6.674321,-8.407452,-4.489838,-3.186024,-3.520365,3.512058,9.631943,9.476334,2.685513,1.031622,2.927297,-0.054591,7.373761,-2.594895,-8.309093,3.069671,1.511822,-7.367661,-3.103033,-2.735658,-9.983186,6.209551,-8.108970,6.946498,1.305665,-2.174015,0.844643,-2.877790,-6.966724,-7.519728,0.841466,0.975953,8.557369,-0.128084,-1.754188,-9.988463,-1.438178,8.909023,8.595945,3.345115,4.278734,3.040905,-1.325081,8.471897,-6.063704,8.599406,-6.735174,-1.409762,-6.020686,2.477479,-5.029199,6.130547,9.319796,6.655665,-4.563048,-9.917720,-6.717687,-8.998028,6.802839,8.625628,8.901272,8.436722,-0.282462,-4.772745,5.665182,6.397480,3.193417,-5.065545,9.197117,8.574262,-2.745961,1.367663,-4.716107,1.450300,-1.656301,2.133538,9.714683,6.076417,6.692870,-0.574678,2.877081,-8.568878,0.352019,4.764428,-3.895698,-6.835860,-9.548490,7.091818,1.931127,0.083711,0.740922,-7.200709,9.892586,-3.175244,5.723206,6.270770,4.142848,7.655641,1.614200,3.405349,-7.637658,-9.909653,-6.626678,7.723963,1.519823,5.308263,3.746592,5.806865,2.218885,8.490559,8.843125,0.874217,-2.909939,0.636434,6.119720,9.902931,-1.503696,7.893501,9.311263,-2.041020,9.773018,-6.293433,6.791938,4.845813,2.307181,0.355055,-0.267969,7.228195,-0.191250,-0.134302,-9.728766,7.511019,5.918877,9.696545,5.283831,0.889521,5.904661,2.452130,-4.582044,9.165920,-6.363162,-5.794290,3.598801,5.649690,-7.947510,8.879228,-4.528583,2.512465,4.525089,-4.787989,-9.929424,1.323048,8.717945,3.092185,-0.454610,-0.839994,7.702642,4.131449,-2.357680,-4.978947,-7.326381,1.003583,-6.872093,-3.173985,2.141041,-5.557491,6.478169,6.872515,0.416809,-5.538031,3.188909,-9.496461,1.170769,6.062256,-5.734752,-5.657420,-1.135008,7.544767,-5.750552,-8.503408,3.298895,8.729008,4.687837,1.407077,7.314759,-8.747783,-3.547057,-3.252293,-5.933205,-6.155761,2.702093,6.774518,-3.819606,5.950839,-9.757235,7.973979,-3.526474], dtype = "float64")#candidate|2513|(360,)|const|float64
call_2512 = relay.TupleGetItem(func_1674_call(relay.reshape(const_2513.astype('float64'), [360,])), 0)
call_2514 = relay.TupleGetItem(func_1676_call(relay.reshape(const_2513.astype('float64'), [360,])), 0)
func_2454_call = mod.get_global_var('func_2454')
func_2455_call = mutated_mod.get_global_var('func_2455')
call_2525 = relay.TupleGetItem(func_2454_call(), 0)
call_2526 = relay.TupleGetItem(func_2455_call(), 0)
func_2454_call = mod.get_global_var('func_2454')
func_2455_call = mutated_mod.get_global_var('func_2455')
call_2529 = relay.TupleGetItem(func_2454_call(), 0)
call_2530 = relay.TupleGetItem(func_2455_call(), 0)
output = relay.Tuple([call_2496,call_2512,const_2513,call_2525,call_2529,])
output2 = relay.Tuple([call_2497,call_2514,const_2513,call_2526,call_2530,])
func_2531 = relay.Function([], output)
mod['func_2531'] = func_2531
mod = relay.transform.InferType()(mod)
output = func_2531()
func_2532 = relay.Function([], output)
mutated_mod['func_2532'] = func_2532
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2000_call = mod.get_global_var('func_2000')
func_2002_call = mutated_mod.get_global_var('func_2002')
call_2554 = func_2000_call()
call_2555 = func_2000_call()
func_2353_call = mod.get_global_var('func_2353')
func_2356_call = mutated_mod.get_global_var('func_2356')
const_2566 = relay.const([[True,True,True,True,True,False,False,False,True,False,True,False,False,True,False,True,True,False,True,True,False,True,True,True,True,True,True,True,True,False,True,False,False,False,False,True,False,False,True,False,False,False,False,False,True,True,False,False,True,True,False,True,False,True,True,True,False,False,False,True,True,True,False,True,False,False,False,False,False,True,False,True,True,True,True,False,False,True,True,True,False,True,True,False,False,False,True,True],[False,False,False,True,True,False,False,True,False,False,False,True,True,False,False,False,True,True,True,True,True,False,True,True,True,False,False,True,False,True,False,False,True,True,False,True,True,False,False,False,True,False,True,False,True,True,True,False,False,False,False,True,False,True,True,True,True,True,False,True,False,True,True,False,False,True,True,True,False,True,True,True,False,False,True,True,True,False,True,False,False,True,True,False,False,False,True,True],[True,False,False,False,True,False,False,True,True,True,False,True,False,False,False,False,False,False,True,False,False,True,False,True,False,True,True,True,False,True,False,True,True,True,True,False,True,True,True,False,False,True,False,True,True,False,True,False,False,True,False,True,False,False,False,False,True,True,True,True,False,False,True,True,True,False,True,False,False,False,False,False,False,False,True,True,True,True,True,True,False,True,False,False,True,False,False,True]], dtype = "bool")#candidate|2566|(3, 88)|const|bool
call_2565 = func_2353_call(relay.reshape(const_2566.astype('bool'), [11, 6, 4]))
call_2567 = func_2353_call(relay.reshape(const_2566.astype('bool'), [11, 6, 4]))
output = relay.Tuple([call_2554,call_2565,const_2566,])
output2 = relay.Tuple([call_2555,call_2567,const_2566,])
func_2571 = relay.Function([], output)
mod['func_2571'] = func_2571
mod = relay.transform.InferType()(mod)
mutated_mod['func_2571'] = func_2571
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2571_call = mutated_mod.get_global_var('func_2571')
call_2572 = func_2571_call()
output = call_2572
func_2573 = relay.Function([], output)
mutated_mod['func_2573'] = func_2573
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2211_call = mod.get_global_var('func_2211')
func_2213_call = mutated_mod.get_global_var('func_2213')
call_2589 = relay.TupleGetItem(func_2211_call(), 0)
call_2590 = relay.TupleGetItem(func_2213_call(), 0)
output = relay.Tuple([call_2589,])
output2 = relay.Tuple([call_2590,])
func_2615 = relay.Function([], output)
mod['func_2615'] = func_2615
mod = relay.transform.InferType()(mod)
mutated_mod['func_2615'] = func_2615
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2615_call = mutated_mod.get_global_var('func_2615')
call_2616 = func_2615_call()
output = call_2616
func_2617 = relay.Function([], output)
mutated_mod['func_2617'] = func_2617
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1808_call = mod.get_global_var('func_1808')
func_1810_call = mutated_mod.get_global_var('func_1810')
call_2630 = relay.TupleGetItem(func_1808_call(), 1)
call_2631 = relay.TupleGetItem(func_1810_call(), 1)
func_2211_call = mod.get_global_var('func_2211')
func_2213_call = mutated_mod.get_global_var('func_2213')
call_2634 = relay.TupleGetItem(func_2211_call(), 0)
call_2635 = relay.TupleGetItem(func_2213_call(), 0)
func_1890_call = mod.get_global_var('func_1890')
func_1892_call = mutated_mod.get_global_var('func_1892')
call_2638 = func_1890_call()
call_2639 = func_1890_call()
bop_2641 = relay.greater_equal(call_2630.astype('bool'), relay.reshape(call_2634.astype('bool'), relay.shape_of(call_2630))) # shape=(15, 11, 12)
bop_2644 = relay.greater_equal(call_2631.astype('bool'), relay.reshape(call_2635.astype('bool'), relay.shape_of(call_2631))) # shape=(15, 11, 12)
output = relay.Tuple([call_2638,bop_2641,])
output2 = relay.Tuple([call_2639,bop_2644,])
func_2648 = relay.Function([], output)
mod['func_2648'] = func_2648
mod = relay.transform.InferType()(mod)
output = func_2648()
func_2649 = relay.Function([], output)
mutated_mod['func_2649'] = func_2649
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1808_call = mod.get_global_var('func_1808')
func_1810_call = mutated_mod.get_global_var('func_1810')
call_2661 = relay.TupleGetItem(func_1808_call(), 0)
call_2662 = relay.TupleGetItem(func_1810_call(), 0)
output = call_2661
output2 = call_2662
func_2673 = relay.Function([], output)
mod['func_2673'] = func_2673
mod = relay.transform.InferType()(mod)
mutated_mod['func_2673'] = func_2673
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2673_call = mutated_mod.get_global_var('func_2673')
call_2674 = func_2673_call()
output = call_2674
func_2675 = relay.Function([], output)
mutated_mod['func_2675'] = func_2675
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2615_call = mod.get_global_var('func_2615')
func_2617_call = mutated_mod.get_global_var('func_2617')
call_2687 = relay.TupleGetItem(func_2615_call(), 0)
call_2688 = relay.TupleGetItem(func_2617_call(), 0)
output = call_2687
output2 = call_2688
func_2696 = relay.Function([], output)
mod['func_2696'] = func_2696
mod = relay.transform.InferType()(mod)
output = func_2696()
func_2697 = relay.Function([], output)
mutated_mod['func_2697'] = func_2697
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2648_call = mod.get_global_var('func_2648')
func_2649_call = mutated_mod.get_global_var('func_2649')
call_2698 = relay.TupleGetItem(func_2648_call(), 1)
call_2699 = relay.TupleGetItem(func_2649_call(), 1)
func_2648_call = mod.get_global_var('func_2648')
func_2649_call = mutated_mod.get_global_var('func_2649')
call_2703 = relay.TupleGetItem(func_2648_call(), 1)
call_2704 = relay.TupleGetItem(func_2649_call(), 1)
output = relay.Tuple([call_2698,call_2703,])
output2 = relay.Tuple([call_2699,call_2704,])
func_2708 = relay.Function([], output)
mod['func_2708'] = func_2708
mod = relay.transform.InferType()(mod)
mutated_mod['func_2708'] = func_2708
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2708_call = mutated_mod.get_global_var('func_2708')
call_2709 = func_2708_call()
output = call_2709
func_2710 = relay.Function([], output)
mutated_mod['func_2710'] = func_2710
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2047_call = mod.get_global_var('func_2047')
func_2049_call = mutated_mod.get_global_var('func_2049')
call_2769 = func_2047_call()
call_2770 = func_2047_call()
func_2353_call = mod.get_global_var('func_2353')
func_2356_call = mutated_mod.get_global_var('func_2356')
const_2772 = relay.const([False,False,True,False,True,False,False,True,False,True,True,False,False,True,False,False,False,False,False,True,True,False,False,False,True,False,True,False,False,True,False,False,False,False,False,True,False,True,True,False,False,False,False,False,True,False,False,True,False,False,False,True,False,True,True,False,True,True,False,True,False,True,False,False,True,False,False,True,True,True,True,True,True,True,False,True,True,False,False,True,True,True,False,True,False,False,True,True,True,False,False,True,True,False,False,False,True,False,True,False,True,False,False,False,True,False,True,False,False,False,True,True,True,True,True,True,True,False,False,False,False,False,False,True,True,False,True,False,False,False,False,True,False,False,True,True,False,True,True,True,True,False,False,False,False,True,True,True,False,True,False,False,True,False,False,False,False,True,False,False,False,True,True,False,True,False,False,False,True,True,True,False,False,True,False,False,True,True,True,True,False,True,True,False,True,True,False,True,True,True,True,True,False,False,True,True,True,True,True,False,True,False,True,True,False,True,True,True,True,False,False,True,False,True,True,True,True,False,True,False,True,False,True,True,True,False,False,False,False,False,False,True,False,True,False,False,True,True,True,False,True,True,True,True,True,True,True,False,True,False,False,False,False,True,True,True,True,True,True,True,True,False,False,False], dtype = "bool")#candidate|2772|(264,)|const|bool
call_2771 = func_2353_call(relay.reshape(const_2772.astype('bool'), [11, 6, 4]))
call_2773 = func_2353_call(relay.reshape(const_2772.astype('bool'), [11, 6, 4]))
output = relay.Tuple([call_2769,call_2771,const_2772,])
output2 = relay.Tuple([call_2770,call_2773,const_2772,])
func_2778 = relay.Function([], output)
mod['func_2778'] = func_2778
mod = relay.transform.InferType()(mod)
mutated_mod['func_2778'] = func_2778
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2778_call = mutated_mod.get_global_var('func_2778')
call_2779 = func_2778_call()
output = call_2779
func_2780 = relay.Function([], output)
mutated_mod['func_2780'] = func_2780
mutated_mod = relay.transform.InferType()(mutated_mod)
const_2794 = relay.const([[[False,False],[True,False],[True,True],[True,True],[True,False],[True,True],[True,False],[False,True],[False,True],[True,False],[True,True],[True,False],[False,True],[True,True],[True,False],[True,True]],[[False,False],[True,False],[False,True],[True,True],[True,False],[True,False],[False,True],[True,True],[True,False],[True,False],[True,False],[True,False],[True,False],[True,False],[True,False],[False,True]],[[True,True],[True,True],[False,False],[False,True],[False,True],[True,True],[True,False],[False,False],[True,True],[False,False],[True,True],[False,False],[False,True],[True,True],[False,True],[False,True]],[[False,False],[False,True],[False,False],[False,True],[False,False],[False,True],[False,False],[True,True],[True,True],[False,False],[True,False],[False,True],[False,True],[False,False],[False,False],[True,True]],[[False,True],[False,True],[True,False],[False,True],[False,False],[False,True],[False,True],[False,True],[True,False],[True,False],[True,True],[True,True],[True,True],[True,True],[True,False],[False,False]],[[True,False],[True,False],[True,True],[False,True],[True,False],[False,True],[False,True],[False,True],[True,True],[True,False],[False,False],[True,True],[True,False],[True,False],[False,True],[False,True]],[[False,True],[False,True],[False,False],[False,True],[False,True],[False,False],[False,False],[True,True],[True,False],[False,False],[False,True],[True,True],[False,False],[False,False],[False,False],[False,False]],[[False,False],[True,False],[False,True],[False,False],[False,False],[True,False],[True,False],[False,False],[True,False],[False,True],[True,False],[True,True],[False,True],[False,False],[True,False],[False,True]],[[False,True],[False,False],[True,False],[False,True],[False,True],[False,True],[False,False],[False,True],[False,False],[False,True],[False,True],[True,True],[False,True],[True,False],[True,False],[True,True]],[[True,True],[True,False],[True,True],[False,False],[True,False],[True,True],[False,True],[False,False],[False,False],[True,False],[False,False],[True,False],[True,True],[False,False],[True,False],[True,False]],[[True,False],[True,True],[False,True],[True,True],[True,False],[False,True],[False,False],[True,False],[False,False],[False,False],[True,False],[True,False],[True,True],[True,False],[True,False],[False,True]],[[True,True],[False,True],[False,True],[False,True],[True,False],[False,True],[False,True],[True,False],[False,False],[True,True],[False,False],[True,True],[True,False],[True,True],[True,True],[False,False]],[[True,False],[True,True],[True,True],[True,False],[True,True],[False,True],[True,True],[True,True],[True,False],[False,True],[False,True],[False,False],[False,True],[True,True],[True,True],[True,False]],[[True,False],[True,False],[True,False],[False,False],[False,False],[True,True],[False,False],[False,True],[True,False],[True,True],[True,True],[True,True],[True,False],[False,False],[True,True],[False,False]],[[True,True],[False,False],[False,True],[False,False],[True,True],[True,True],[False,True],[True,True],[True,False],[False,False],[True,False],[False,False],[False,False],[False,False],[False,False],[False,True]]], dtype = "bool")#candidate|2794|(15, 16, 2)|const|bool
const_2795 = relay.const([[[True,False],[False,False],[False,False],[True,False],[True,True],[False,False],[False,True],[True,False],[True,True],[True,True],[True,False],[False,False],[False,False],[False,True],[False,True],[True,True]],[[True,True],[True,False],[True,True],[False,False],[False,False],[False,False],[True,True],[False,False],[False,True],[False,False],[True,False],[False,False],[False,False],[True,False],[True,False],[False,True]],[[True,True],[True,False],[False,True],[False,False],[True,False],[False,False],[True,False],[False,True],[False,False],[True,True],[False,True],[True,False],[True,False],[True,True],[False,True],[False,True]],[[False,True],[True,True],[False,True],[True,True],[True,False],[True,False],[False,True],[False,False],[False,True],[False,False],[True,True],[True,False],[False,False],[True,False],[True,True],[False,True]],[[False,True],[False,False],[True,False],[True,False],[False,False],[True,False],[False,True],[True,False],[False,True],[False,True],[False,True],[False,False],[True,True],[True,False],[True,True],[False,True]],[[False,False],[False,True],[False,True],[False,False],[False,True],[True,False],[False,False],[False,False],[True,False],[False,True],[False,False],[False,True],[True,True],[False,False],[False,False],[False,False]],[[False,False],[False,True],[True,False],[True,True],[True,False],[True,True],[False,True],[True,True],[False,True],[True,False],[True,True],[True,True],[False,True],[True,False],[True,True],[False,False]],[[True,False],[True,True],[False,False],[False,True],[True,False],[False,True],[True,False],[True,True],[True,False],[True,True],[True,True],[False,True],[False,True],[True,False],[True,True],[False,False]],[[False,True],[True,False],[True,False],[False,False],[False,False],[False,True],[False,True],[True,False],[True,False],[True,False],[True,True],[True,False],[False,False],[False,True],[True,False],[False,True]],[[True,True],[False,False],[True,False],[True,True],[False,True],[True,True],[False,False],[True,True],[False,False],[True,False],[True,False],[False,True],[False,False],[True,True],[False,True],[True,True]],[[False,True],[True,False],[True,False],[True,True],[True,False],[False,True],[False,True],[False,True],[True,True],[True,False],[True,True],[False,True],[True,True],[True,True],[False,False],[False,False]],[[True,True],[False,False],[False,False],[True,True],[False,False],[True,True],[True,True],[False,True],[True,True],[True,False],[False,True],[False,True],[False,True],[False,False],[True,False],[True,False]],[[True,True],[False,True],[True,True],[True,False],[True,False],[True,True],[True,True],[False,False],[False,True],[True,False],[True,True],[True,True],[False,True],[False,True],[True,True],[True,False]],[[False,True],[False,False],[False,True],[False,False],[True,True],[True,False],[False,True],[True,False],[False,False],[False,True],[True,True],[True,True],[False,True],[False,True],[False,True],[True,False]],[[False,True],[False,False],[False,False],[False,True],[True,True],[False,True],[False,True],[True,True],[True,True],[False,False],[False,True],[True,False],[False,True],[True,False],[False,True],[True,False]]], dtype = "bool")#candidate|2795|(15, 16, 2)|const|bool
bop_2796 = relay.logical_and(const_2794.astype('bool'), relay.reshape(const_2795.astype('bool'), relay.shape_of(const_2794))) # shape=(15, 16, 2)
bop_2813 = relay.floor_mod(const_2794.astype('float64'), relay.reshape(const_2795.astype('float64'), relay.shape_of(const_2794))) # shape=(15, 16, 2)
var_2820 = relay.var("var_2820", dtype = "float64", shape = (15, 16, 2))#candidate|2820|(15, 16, 2)|var|float64
bop_2821 = relay.left_shift(bop_2813.astype('uint64'), relay.reshape(var_2820.astype('uint64'), relay.shape_of(bop_2813))) # shape=(15, 16, 2)
func_1674_call = mod.get_global_var('func_1674')
func_1676_call = mutated_mod.get_global_var('func_1676')
const_2843 = relay.const([-3.803629,1.002623,5.957554,-6.202035,-9.034502,4.246596,5.439628,8.482969,-0.706505,3.843920,2.782201,4.949444,-8.966079,6.534993,-0.558789,9.553037,8.192503,-7.513678,2.859532,7.791535,-4.006487,6.839684,8.944983,-5.301714,7.651065,-8.750588,-4.663824,-6.526730,1.748097,-5.460005,-2.222273,-3.996073,-9.243207,-1.723630,3.450920,9.397409,-8.402412,-7.411697,1.655189,-4.925304,-9.122616,-8.906403,-7.565003,9.642081,-1.432292,3.235477,-2.695361,-2.075600,-5.080985,-0.721169,-0.807111,0.604805,-0.916306,-5.551699,6.487085,8.925531,5.102704,-2.121613,-2.388204,-1.676088,0.893542,8.238088,2.112531,-3.361535,-1.682030,-0.415920,-1.073506,4.102287,9.505037,-5.743830,-6.488815,-6.009002,9.662314,-2.154805,-7.905589,-3.007927,-8.974162,8.789935,-4.894015,-2.888255,-8.445783,3.925420,-8.874254,-3.316261,0.464594,-4.912861,-2.886554,5.444377,5.250912,8.002948,-0.936599,2.594933,8.082798,2.287367,-2.399276,-0.539161,-6.896347,1.648725,-1.184812,-2.545881,0.814978,-9.542540,9.637466,2.846333,8.705075,-9.183059,4.278141,-7.936221,0.978122,-1.633963,5.115519,-0.473657,-8.021893,9.895281,3.131665,-6.969326,-9.740219,-4.731655,0.048145,8.227977,-1.493908,-4.111458,6.247983,-7.405780,-8.119117,5.385636,5.193669,5.668554,6.315354,6.556878,-7.063058,9.084377,-6.397564,-9.928698,-9.572973,-4.632631,-5.411616,-0.727890,1.401306,-6.453519,9.977041,-1.118405,4.151735,-8.300859,-4.933206,-4.616314,-2.232072,7.748313,6.538348,-5.449984,3.830189,2.723982,6.976324,-4.536023,-4.289427,2.970074,-4.287439,1.735429,7.267034,-6.317319,8.595668,2.128206,4.382955,-1.069140,-4.793046,-5.866311,7.241480,6.692801,2.072368,4.855380,-4.376110,3.784651,-7.581390,9.248988,-9.993530,7.246911,-6.094930,7.596268,-7.689816,-7.857035,-3.488183,-1.253304,-7.207715,4.564447,9.315544,-3.457278,3.883183,-6.070162,-5.896806,8.993201,-7.188665,-7.551703,4.183704,-4.381367,9.972709,7.799853,0.586486,0.673155,8.259912,7.326706,2.583939,3.086086,5.852474,5.398066,0.145151,-0.500850,1.392860,-3.451642,3.581327,-1.934101,4.158106,-2.606204,-4.553335,2.926655,-2.839637,-5.420600,-0.494885,-5.779469,-4.621893,6.782030,5.613579,5.099776,-1.047812,5.706862,-3.169969,-1.089384,2.271180,-7.955910,-8.051725,-2.154625,-5.173243,-7.480129,-0.307034,-9.982833,-2.432730,-4.021660,3.783699,1.004388,1.212856,8.339789,-1.837739,7.716431,1.682244,7.593647,4.493507,-2.571746,0.746765,-8.758076,-0.392717,-6.116241,-3.577633,-4.006086,-5.080347,8.497417,-8.328646,8.068160,-2.564283,4.345327,-9.947355,1.757492,-9.439088,4.003024,2.814452,2.230955,-4.869578,-1.575209,-1.676596,-7.408063,-2.260225,-4.376258,6.561489,-2.752451,-4.538744,0.765969,-9.087129,4.705447,-2.581204,-8.870358,-3.297280,1.418105,0.048920,-8.146834,-1.018126,-1.758845,-2.940264,-9.531020,-1.893870,-1.665378,-9.941667,7.501853,-7.045726,8.588700,9.176351,-8.217698,6.829812,-3.130748,-2.366731,-7.357387,-3.584496,8.764199,9.253713,-1.486786,-5.922509,-3.775043,-4.098724,-9.827862,-2.325791,3.031740,8.130644,-9.864450,-7.553680,-1.313543,7.016576,4.213552,2.760347,-2.300029,-2.274836,0.850443,8.946839,0.029628,8.442746,7.497093,8.231181,-7.169861,-2.736737,1.185447,5.471504,6.233876,-8.618883,-2.077313,-9.194531,-3.464779,3.360351,7.953056,-6.833138,-1.467917,-8.195344,2.784779,4.947417,6.778161,-3.949128,-6.347473,-4.272812,-9.218087,-5.232129,-3.876697,-6.880412,-7.679426,-3.980882,-2.074103,-3.709024,4.529079,-8.949183,2.199236,-0.536389,-0.803743,8.464177,-9.172104,-3.042420,6.226711], dtype = "float64")#candidate|2843|(360,)|const|float64
call_2842 = relay.TupleGetItem(func_1674_call(relay.reshape(const_2843.astype('float64'), [360,])), 1)
call_2844 = relay.TupleGetItem(func_1676_call(relay.reshape(const_2843.astype('float64'), [360,])), 1)
uop_2845 = relay.sinh(call_2842.astype('float64')) # shape=(10, 4, 9)
uop_2847 = relay.sinh(call_2844.astype('float64')) # shape=(10, 4, 9)
output = relay.Tuple([bop_2796,bop_2821,const_2843,uop_2845,])
output2 = relay.Tuple([bop_2796,bop_2821,const_2843,uop_2847,])
func_2854 = relay.Function([var_2820,], output)
mod['func_2854'] = func_2854
mod = relay.transform.InferType()(mod)
var_2855 = relay.var("var_2855", dtype = "float64", shape = (15, 16, 2))#candidate|2855|(15, 16, 2)|var|float64
output = func_2854(var_2855)
func_2856 = relay.Function([var_2855], output)
mutated_mod['func_2856'] = func_2856
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2531_call = mod.get_global_var('func_2531')
func_2532_call = mutated_mod.get_global_var('func_2532')
call_2945 = relay.TupleGetItem(func_2531_call(), 1)
call_2946 = relay.TupleGetItem(func_2532_call(), 1)
output = relay.Tuple([call_2945,])
output2 = relay.Tuple([call_2946,])
func_2956 = relay.Function([], output)
mod['func_2956'] = func_2956
mod = relay.transform.InferType()(mod)
mutated_mod['func_2956'] = func_2956
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2956_call = mutated_mod.get_global_var('func_2956')
call_2957 = func_2956_call()
output = call_2957
func_2958 = relay.Function([], output)
mutated_mod['func_2958'] = func_2958
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2696_call = mod.get_global_var('func_2696')
func_2697_call = mutated_mod.get_global_var('func_2697')
call_3011 = func_2696_call()
call_3012 = func_2696_call()
func_2571_call = mod.get_global_var('func_2571')
func_2573_call = mutated_mod.get_global_var('func_2573')
call_3015 = relay.TupleGetItem(func_2571_call(), 2)
call_3016 = relay.TupleGetItem(func_2573_call(), 2)
func_793_call = mod.get_global_var('func_793')
func_797_call = mutated_mod.get_global_var('func_797')
const_3024 = relay.const([2.822748,1.214649,-2.961063,-5.367705,3.049931,7.009692,-3.015418,2.085824,-6.089826,-7.434498,9.584349,8.820723,9.486818,7.790366,-1.654500,3.643572,4.586092,-9.675148,4.101324,-9.123464,-2.716381,7.049867,0.611324,7.054869,5.692469,-8.232184,-4.012343,-9.116832,3.375818,-9.671178,-9.475191,0.046767,-3.356809,5.580007,-8.702079,-8.037025,1.628971,7.137430,-1.456434,-5.425278,-6.336503,-8.030763], dtype = "float64")#candidate|3024|(42,)|const|float64
const_3025 = relay.const([[-10,-8,8,9,7,5,-10,1,5,7,-4,-3,10,5,-1,-1,-6,9,5,5,-4,7,7,-6,-9,-6,5,-7,7,9,9,-10,10,-8,7,-7,2,-7,-2,-5,7,4,-1,9,5,7,-9,-8,6,6,-9,-6,-6,4,-9,9,-10,-10,-7,8,-10,-7,-2,9,-1,1,9,3,-2,5,5,7,-8,6,-9,-7,-9,-7,-9,9,3,-4,-7,10,-5,1,9,-5,7,4,6,-5,8,-8,-8,1],[-6,6,3,3,10,-9,-5,10,8,8,-9,-10,4,-6,-4,-6,5,4,-9,-7,2,-2,2,9,-5,-5,1,-1,-5,9,-7,10,8,-9,10,8,4,10,-1,8,-7,10,8,3,2,3,-9,-1,-8,6,10,1,-3,2,2,-1,2,-7,5,-6,-3,8,3,-3,-4,8,-4,-8,9,-10,-1,-10,-2,-3,-10,-8,7,7,9,-8,8,7,-4,8,8,-6,10,-9,-6,1,-1,-7,7,8,-5,-9]], dtype = "uint16")#candidate|3025|(2, 96)|const|uint16
call_3023 = relay.TupleGetItem(func_793_call(relay.reshape(const_3024.astype('float64'), [6, 7]), relay.reshape(const_3025.astype('uint16'), [192,]), ), 0)
call_3026 = relay.TupleGetItem(func_797_call(relay.reshape(const_3024.astype('float64'), [6, 7]), relay.reshape(const_3025.astype('uint16'), [192,]), ), 0)
output = relay.Tuple([call_3011,call_3015,call_3023,const_3024,const_3025,])
output2 = relay.Tuple([call_3012,call_3016,call_3026,const_3024,const_3025,])
func_3032 = relay.Function([], output)
mod['func_3032'] = func_3032
mod = relay.transform.InferType()(mod)
output = func_3032()
func_3033 = relay.Function([], output)
mutated_mod['func_3033'] = func_3033
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2000_call = mod.get_global_var('func_2000')
func_2002_call = mutated_mod.get_global_var('func_2002')
call_3034 = func_2000_call()
call_3035 = func_2000_call()
output = relay.Tuple([call_3034,])
output2 = relay.Tuple([call_3035,])
func_3036 = relay.Function([], output)
mod['func_3036'] = func_3036
mod = relay.transform.InferType()(mod)
output = func_3036()
func_3037 = relay.Function([], output)
mutated_mod['func_3037'] = func_3037
mutated_mod = relay.transform.InferType()(mutated_mod)
const_3100 = relay.const([[[True,True,True,True,True,False,False,True,False,True,True],[False,False,False,True,True,False,False,False,False,False,True],[True,True,False,False,False,True,True,True,True,False,False],[False,False,True,False,False,False,False,True,True,True,True],[True,False,False,False,False,True,False,False,False,True,True],[True,True,False,False,True,True,True,True,True,True,True],[False,True,False,False,False,True,True,True,True,False,True],[True,False,True,False,False,False,True,False,True,False,True],[True,False,False,False,True,False,True,False,True,True,True],[True,True,True,True,False,False,False,True,True,True,True],[True,False,False,True,True,False,False,True,True,False,True],[False,False,False,False,False,False,True,True,True,True,True],[True,False,True,True,False,False,True,True,False,False,True],[False,True,False,False,True,True,True,True,False,True,False]],[[False,True,False,False,True,True,False,False,False,True,False],[False,False,False,False,True,True,False,True,True,False,False],[True,False,False,True,False,True,True,True,True,False,True],[True,False,False,True,False,False,True,True,False,True,False],[False,False,True,True,False,True,False,True,True,False,True],[True,True,True,True,False,True,False,False,False,False,True],[False,True,True,False,False,True,False,False,True,False,False],[False,True,False,True,False,True,True,False,True,False,True],[False,True,True,True,False,False,True,False,True,True,True],[False,True,True,True,True,True,False,True,True,True,True],[False,False,True,True,True,True,False,False,False,True,True],[True,False,True,True,False,True,False,True,False,True,True],[False,False,False,True,True,False,True,False,True,True,False],[False,False,False,True,True,False,True,False,True,False,False]],[[True,False,False,False,False,False,True,True,True,True,False],[True,False,True,True,True,True,False,False,True,False,True],[True,True,False,True,False,False,True,True,False,False,True],[True,False,True,True,True,True,False,False,True,True,True],[False,True,False,True,True,True,False,False,False,False,True],[False,True,False,False,False,True,False,False,False,True,True],[True,False,False,False,False,True,True,False,False,True,True],[False,False,False,True,True,False,True,True,False,True,False],[False,True,True,True,False,True,True,True,False,False,False],[True,True,False,False,False,False,False,False,True,False,False],[False,False,True,False,True,False,False,True,True,False,False],[False,True,False,True,False,False,False,True,False,True,False],[False,True,False,True,True,False,False,True,True,False,True],[False,True,True,True,True,False,False,False,False,False,True]],[[True,True,False,True,True,True,True,False,True,True,True],[True,False,False,False,True,False,True,True,True,True,False],[False,False,False,False,False,False,True,False,True,False,False],[True,True,True,False,False,False,True,True,True,True,False],[False,True,True,False,False,False,True,True,True,False,False],[True,False,False,True,True,True,False,True,True,False,False],[False,False,False,False,False,False,False,True,False,False,False],[True,False,False,True,True,True,False,True,True,True,False],[False,False,True,True,True,True,False,True,True,False,True],[False,True,True,False,True,False,False,True,False,True,True],[False,False,False,False,True,False,True,False,False,True,True],[True,False,False,False,False,True,False,True,False,False,False],[False,False,True,False,False,False,True,True,True,True,True],[True,True,False,True,True,True,True,False,False,True,True]],[[False,True,True,True,True,False,True,True,False,True,True],[True,False,True,True,True,False,False,False,False,False,False],[False,True,True,True,True,True,True,False,False,True,True],[False,False,True,False,False,False,True,True,False,False,True],[True,False,False,False,False,True,False,False,True,False,False],[False,False,True,True,True,True,False,True,False,False,True],[True,False,True,False,True,True,False,False,False,True,False],[True,True,False,False,True,True,True,False,True,True,False],[False,False,True,True,False,False,True,False,False,True,True],[True,True,False,False,True,False,True,False,False,False,False],[True,False,True,False,True,True,True,False,True,True,False],[True,False,True,True,True,True,True,False,False,True,True],[True,True,False,True,False,True,False,False,True,True,False],[False,True,True,False,False,True,True,True,False,False,True]],[[True,False,False,False,True,True,True,False,False,False,False],[True,True,False,False,True,True,True,False,True,True,True],[True,True,True,False,True,False,False,True,True,True,True],[False,False,True,True,True,True,True,True,True,False,False],[False,False,False,True,True,False,False,True,False,True,False],[True,False,True,False,False,True,True,False,False,True,False],[True,False,True,True,False,False,False,False,False,False,True],[False,True,False,True,False,True,True,True,False,False,True],[True,False,False,False,False,False,True,True,False,False,False],[True,True,False,True,False,False,True,False,True,False,False],[False,True,False,True,False,True,True,False,True,True,True],[True,True,True,True,False,False,True,True,False,False,False],[False,True,False,True,False,True,False,False,True,False,True],[True,False,True,False,True,False,True,False,True,False,False]],[[False,True,False,False,False,True,True,False,False,True,True],[False,False,False,True,True,False,False,True,False,True,True],[True,False,True,True,True,True,False,False,True,False,True],[False,True,False,True,False,False,True,True,False,False,False],[False,True,True,False,False,False,False,True,False,False,True],[True,True,True,False,False,True,False,False,False,False,True],[False,True,True,True,True,True,True,True,True,True,False],[False,True,False,False,False,False,False,False,True,True,True],[False,False,True,True,False,False,False,False,True,False,True],[True,True,False,False,False,True,True,True,False,True,True],[False,True,True,False,False,True,False,True,False,False,True],[False,False,True,False,False,True,True,False,True,False,False],[True,False,False,True,True,False,True,False,True,True,False],[False,False,False,True,False,True,True,False,True,True,False]]], dtype = "bool")#candidate|3100|(7, 14, 11)|const|bool
var_3101 = relay.var("var_3101", dtype = "bool", shape = (7, 14, 11))#candidate|3101|(7, 14, 11)|var|bool
bop_3102 = relay.logical_or(const_3100.astype('bool'), relay.reshape(var_3101.astype('bool'), relay.shape_of(const_3100))) # shape=(7, 14, 11)
output = bop_3102
output2 = bop_3102
func_3105 = relay.Function([var_3101,], output)
mod['func_3105'] = func_3105
mod = relay.transform.InferType()(mod)
var_3106 = relay.var("var_3106", dtype = "bool", shape = (7, 14, 11))#candidate|3106|(7, 14, 11)|var|bool
output = func_3105(var_3106)
func_3107 = relay.Function([var_3106], output)
mutated_mod['func_3107'] = func_3107
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2211_call = mod.get_global_var('func_2211')
func_2213_call = mutated_mod.get_global_var('func_2213')
call_3129 = relay.TupleGetItem(func_2211_call(), 0)
call_3130 = relay.TupleGetItem(func_2213_call(), 0)
func_2956_call = mod.get_global_var('func_2956')
func_2958_call = mutated_mod.get_global_var('func_2958')
call_3148 = relay.TupleGetItem(func_2956_call(), 0)
call_3149 = relay.TupleGetItem(func_2958_call(), 0)
func_1674_call = mod.get_global_var('func_1674')
func_1676_call = mutated_mod.get_global_var('func_1676')
var_3151 = relay.var("var_3151", dtype = "float64", shape = (360,))#candidate|3151|(360,)|var|float64
call_3150 = relay.TupleGetItem(func_1674_call(relay.reshape(var_3151.astype('float64'), [360,])), 2)
call_3152 = relay.TupleGetItem(func_1676_call(relay.reshape(var_3151.astype('float64'), [360,])), 2)
func_1674_call = mod.get_global_var('func_1674')
func_1676_call = mutated_mod.get_global_var('func_1676')
call_3162 = relay.TupleGetItem(func_1674_call(relay.reshape(call_3150.astype('float64'), [360,])), 2)
call_3163 = relay.TupleGetItem(func_1676_call(relay.reshape(call_3150.astype('float64'), [360,])), 2)
output = relay.Tuple([call_3129,call_3148,call_3150,var_3151,call_3162,])
output2 = relay.Tuple([call_3130,call_3149,call_3152,var_3151,call_3163,])
func_3188 = relay.Function([var_3151,], output)
mod['func_3188'] = func_3188
mod = relay.transform.InferType()(mod)
mutated_mod['func_3188'] = func_3188
mutated_mod = relay.transform.InferType()(mutated_mod)
var_3189 = relay.var("var_3189", dtype = "float64", shape = (360,))#candidate|3189|(360,)|var|float64
func_3188_call = mutated_mod.get_global_var('func_3188')
call_3190 = func_3188_call(var_3189)
output = call_3190
func_3191 = relay.Function([var_3189], output)
mutated_mod['func_3191'] = func_3191
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3036_call = mod.get_global_var('func_3036')
func_3037_call = mutated_mod.get_global_var('func_3037')
call_3197 = relay.TupleGetItem(func_3036_call(), 0)
call_3198 = relay.TupleGetItem(func_3037_call(), 0)
func_114_call = mod.get_global_var('func_114')
func_116_call = mutated_mod.get_global_var('func_116')
const_3204 = relay.const([-7.420049,-6.043296,3.110233,-3.280006,-0.186231,-4.386183,3.984276,-1.164230,9.896068,-6.177283,1.473731,-0.055243,-8.837635,9.172563,4.844743,-6.495532,-9.375753,4.240143,0.275566,7.875170,5.552657,3.826442,4.400391,-4.936585,5.508627,2.109217,-2.889933,-6.147128,-6.316200,-2.764903,9.548107,-6.041922,3.466006,9.725800,6.305994,5.805822,0.154477,7.909813,-2.321199,4.304842,-5.908738,6.143131,5.511413,9.907333,8.599277,1.351516,-1.570377,-2.886850,2.490023,-2.694285,6.306930,9.443967,-1.227567,9.841135,8.018634,-0.157350,1.155080,-0.927493,9.794248,7.843669,1.938798,1.655827,-0.078537,2.986780,-0.072382,-4.175192,6.384725,-0.248744,-5.397292,5.942655,-8.721814,0.535945,9.046176,-1.746285,1.741769,7.259418,-8.053336,-4.676774,-6.660833,5.672983,1.441899,-7.490842,2.883519,-1.847935,0.283455,6.584055,5.561378,3.305187,-0.556326,5.469018,1.310096,-7.319341,-1.122356,-6.138117,5.976339,1.524710,4.412473,1.000141,-1.912254,-4.228353,8.175243,1.144210,-8.136376,9.376170,6.318057,-1.343411,8.872160,-0.313902,2.827942,8.738182,-8.992081,1.981687,-3.510334,8.692501,-3.040502,-9.893112,8.145069,-0.963741,9.333066,9.682655,4.482315,8.657376,-2.675105,-2.042962,5.673852,-7.661011,-2.227219,6.255332,1.395130,4.867045,1.849682,3.762423,7.612694,-7.033926,-5.645862,3.654261,-0.398822,-6.635487,6.612145,-7.791062,-9.994230,-9.976036,5.548047,-1.675147,-9.208441,-6.457604,4.717200,5.623253,-7.860246,2.862408,5.617904,-5.316622,-7.563902,-0.402211,6.162818,-0.700804,-5.408110,-6.412706,-4.484481,-0.552912,-6.339507,-8.520050,-3.248350,-5.774527,-9.545297,5.036607,8.156960,9.708254,2.790878,2.483805,-2.275845,-7.288910,-6.021640,-4.860264,6.143187,-2.657399,-4.588703,-9.775332,-7.094515,2.778751,-0.191679,-1.008873,-3.706904,3.961700,9.658011,-6.338985,-5.510607,-0.976733,2.773687,-5.076196,7.703377,-5.590298,3.631834,0.895124,9.165288,-7.207954,5.920103,0.030055,-7.465497,6.192467,3.601141,-1.375579,4.523863,9.085913,7.228761,3.068284,-1.067188,-1.875665,-7.811136,2.799851,-8.980954,-3.465103,-8.075162,1.693732,-6.350645,-6.735782,-1.247287,-2.381606,-8.114224,-3.165438,8.618296,-9.030393,5.822918,6.497440,-3.733256,-7.542546,7.301836,8.294960,-9.147851,-5.700313,2.537747,0.911564,2.044893,6.810717,3.175512,-9.174149,-7.958025,-8.497876,7.254113,1.652342,-6.891456,7.506850,-2.379717,5.183315,8.100832,-6.907138,-0.254221,4.746058,3.689701,4.592348,-4.203535,5.626245,1.117546,1.882442,6.774017,-0.599328,-1.223287,5.417024,-3.384808,4.731186,1.818083,7.249454,5.194123,3.130578,5.144766,2.447091,-8.288146,-7.735432,-4.846461,6.340029,6.886937,4.232062,1.645894,-7.484109,2.779789,9.981533,8.127827,2.530249,1.299683,4.134666,9.197725,8.573916,7.446731,3.861726,9.897005,-6.788364,3.773088,-0.990845,-2.473838,-1.186623,-7.023951,-0.979606,-2.623747,8.039444,5.182174,9.797576,6.194009,-9.579333,-1.854015,3.423658,-9.333765,-9.268348,4.010664,-4.086377,-7.253296,-8.522532,5.310787,-5.744828,-2.971892,6.477861,9.893951,-9.816035,8.157993,0.866433,2.483680,4.078986,-9.665070,4.529617,-4.502860,-8.421786,-8.004763,-6.431332,7.091677,-0.812059,-1.884959,0.491437,-1.499033,-6.009598,1.767785,1.212141,-4.319986,-3.042549,9.510688,7.120280,-4.525471,-3.584883,-5.610651,-7.386192,7.897628,9.788979,-6.506321,0.857757,-6.585075,6.699832,-6.099234,-3.134714,9.676711,3.166118,-5.844759,1.599268,-5.318002,-1.520299,-7.250646,0.119221,9.375376,4.185905,4.688544,-0.966913,-2.364140,7.301698,-0.622256,-4.800276,4.177927,-8.410394,-7.076835,-4.734432,5.911364,3.077004,2.580707,-7.082308,3.232170,-2.253506,-0.972969,-9.305971,-9.726378,1.141514,-3.781803,8.784496,-3.250163,1.153028,2.157478,2.363600,-5.556093,-0.067984,3.556242,-5.315049,-2.190380,-0.317427,3.721193,6.079954,-1.514603,6.332439,-5.074256,-4.312651,-2.275171,1.038940,0.625923,4.481300,2.360580,3.597898,-5.547745,3.506332,1.901448,5.277443,5.508702,-8.982514,-7.232737,-3.365809,-0.565520,1.054434,-9.649682,-4.126253,3.535762,-7.743384,6.993009,-3.663907,3.724728,-4.325435,7.684488,-0.773314,9.265494,-3.478669,-1.251138,-1.611880,-0.579877,6.969728,2.481440,-5.768364,8.489738,1.552376,4.936367,-6.965820,-3.330055,2.680038,6.833551,-3.188789,-5.299440,-3.791496,0.991270,-5.540388,-5.563996,-3.885833,6.479793,-1.114056,1.899842,-2.960601,7.801910,-5.595333,0.215281,3.040352,5.988969,7.163854,7.903016,-1.309743,4.007576,-6.761553,-5.105792,9.413384,2.514267,7.680508,0.019473,8.116616,-1.401764,-4.026322,7.506213,-4.708546,9.571525,1.071053,3.395781,4.463060,-9.450638,-4.834224,3.144286,-9.426649,-5.683077,4.040467,4.604859,-1.298394,-4.943654,-3.200415,2.590734,-9.380668,-4.889099,6.318067,0.433593,-5.476050,-3.394440,1.061315,-9.876911,-0.342194], dtype = "float64")#candidate|3204|(490,)|const|float64
call_3203 = func_114_call(relay.reshape(const_3204.astype('float64'), [7, 14, 5]))
call_3205 = func_114_call(relay.reshape(const_3204.astype('float64'), [7, 14, 5]))
output = relay.Tuple([call_3197,call_3203,const_3204,])
output2 = relay.Tuple([call_3198,call_3205,const_3204,])
func_3210 = relay.Function([], output)
mod['func_3210'] = func_3210
mod = relay.transform.InferType()(mod)
mutated_mod['func_3210'] = func_3210
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3210_call = mutated_mod.get_global_var('func_3210')
call_3211 = func_3210_call()
output = call_3211
func_3212 = relay.Function([], output)
mutated_mod['func_3212'] = func_3212
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2300_call = mod.get_global_var('func_2300')
func_2302_call = mutated_mod.get_global_var('func_2302')
call_3225 = func_2300_call()
call_3226 = func_2300_call()
func_2571_call = mod.get_global_var('func_2571')
func_2573_call = mutated_mod.get_global_var('func_2573')
call_3232 = relay.TupleGetItem(func_2571_call(), 0)
call_3233 = relay.TupleGetItem(func_2573_call(), 0)
func_2708_call = mod.get_global_var('func_2708')
func_2710_call = mutated_mod.get_global_var('func_2710')
call_3234 = relay.TupleGetItem(func_2708_call(), 0)
call_3235 = relay.TupleGetItem(func_2710_call(), 0)
output = relay.Tuple([call_3225,call_3232,call_3234,])
output2 = relay.Tuple([call_3226,call_3233,call_3235,])
func_3237 = relay.Function([], output)
mod['func_3237'] = func_3237
mod = relay.transform.InferType()(mod)
output = func_3237()
func_3238 = relay.Function([], output)
mutated_mod['func_3238'] = func_3238
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3237_call = mod.get_global_var('func_3237')
func_3238_call = mutated_mod.get_global_var('func_3238')
call_3243 = relay.TupleGetItem(func_3237_call(), 1)
call_3244 = relay.TupleGetItem(func_3238_call(), 1)
output = call_3243
output2 = call_3244
func_3262 = relay.Function([], output)
mod['func_3262'] = func_3262
mod = relay.transform.InferType()(mod)
mutated_mod['func_3262'] = func_3262
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3262_call = mutated_mod.get_global_var('func_3262')
call_3263 = func_3262_call()
output = call_3263
func_3264 = relay.Function([], output)
mutated_mod['func_3264'] = func_3264
mutated_mod = relay.transform.InferType()(mutated_mod)
const_3280 = relay.const([[[-3.587044,1.678857,0.686065,-3.105107,4.348755],[8.964871,-0.639953,-3.949307,7.142669,-5.178815],[1.062206,-7.740704,2.758391,3.110368,3.087184],[-1.176703,-1.068329,-2.748480,-4.202296,-0.838450]],[[0.008478,0.689977,-7.451562,-4.805889,-9.901663],[5.910424,9.585928,-7.139358,9.926579,0.032437],[-8.820115,-7.604839,2.533203,2.632238,6.773957],[-8.821151,9.378122,-9.247581,4.537050,5.320207]],[[6.580906,5.574644,-7.184427,2.124137,7.318914],[-2.170232,3.103230,-0.839147,-3.369020,-3.257237],[6.316660,-0.249380,-6.794565,-8.992936,-2.246894],[7.973412,5.912470,-2.276625,-5.301879,6.119313]],[[7.905414,-3.535388,-7.045177,0.946654,-3.516994],[0.732435,-6.620006,-0.944615,-9.960470,-5.633067],[2.704585,3.263022,-8.247650,-1.678129,0.306042],[-4.365167,-3.334539,5.982134,4.352311,6.975944]],[[-8.070469,5.769155,-2.517365,-8.557813,4.003411],[5.503618,-4.920299,6.850097,0.626577,-8.437399],[4.791990,4.505241,1.691165,-4.804950,2.600368],[-4.231753,-6.981205,5.588050,5.792341,-1.243520]],[[-7.072719,5.673640,-7.041824,-3.229875,9.586474],[-2.944130,2.848076,-3.438948,3.306493,-1.957561],[-8.801514,-5.724896,-3.732389,2.541407,2.440198],[-7.155986,-6.627293,1.984305,-1.999646,-1.762306]],[[-7.714150,-7.429096,-4.315469,-4.315092,-6.051345],[-4.971764,8.766371,8.537338,-3.498098,8.261763],[-9.324323,-5.229517,-1.492480,4.505745,7.099875],[-5.122131,4.641004,0.524567,5.325254,3.718116]],[[-3.017950,-2.835213,-7.035092,-5.997966,-4.698888],[3.846168,5.023815,0.876402,9.541349,9.493822],[-0.679645,-1.567523,-6.522297,5.235723,8.881952],[4.779668,9.576881,0.890899,-0.127098,-9.975497]],[[3.492904,8.924161,2.988531,-4.616702,-7.946660],[8.919474,8.325348,-9.707340,-2.337287,8.326882],[-6.252005,6.788994,-3.533961,7.972286,-1.015202],[-2.032950,6.934423,0.508230,-9.021763,7.323355]]], dtype = "float32")#candidate|3280|(9, 4, 5)|const|float32
uop_3281 = relay.asinh(const_3280.astype('float32')) # shape=(9, 4, 5)
uop_3286 = relay.sigmoid(uop_3281.astype('float32')) # shape=(9, 4, 5)
uop_3292 = relay.atanh(const_3280.astype('float32')) # shape=(9, 4, 5)
func_2211_call = mod.get_global_var('func_2211')
func_2213_call = mutated_mod.get_global_var('func_2213')
call_3294 = relay.TupleGetItem(func_2211_call(), 1)
call_3295 = relay.TupleGetItem(func_2213_call(), 1)
uop_3296 = relay.cos(uop_3281.astype('float64')) # shape=(9, 4, 5)
output = relay.Tuple([uop_3286,uop_3292,call_3294,uop_3296,])
output2 = relay.Tuple([uop_3286,uop_3292,call_3295,uop_3296,])
func_3301 = relay.Function([], output)
mod['func_3301'] = func_3301
mod = relay.transform.InferType()(mod)
mutated_mod['func_3301'] = func_3301
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3301_call = mutated_mod.get_global_var('func_3301')
call_3302 = func_3301_call()
output = call_3302
func_3303 = relay.Function([], output)
mutated_mod['func_3303'] = func_3303
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2531_call = mod.get_global_var('func_2531')
func_2532_call = mutated_mod.get_global_var('func_2532')
call_3306 = relay.TupleGetItem(func_2531_call(), 1)
call_3307 = relay.TupleGetItem(func_2532_call(), 1)
func_3237_call = mod.get_global_var('func_3237')
func_3238_call = mutated_mod.get_global_var('func_3238')
call_3310 = relay.TupleGetItem(func_3237_call(), 0)
call_3311 = relay.TupleGetItem(func_3238_call(), 0)
func_2047_call = mod.get_global_var('func_2047')
func_2049_call = mutated_mod.get_global_var('func_2049')
call_3316 = func_2047_call()
call_3317 = func_2047_call()
output = relay.Tuple([call_3306,call_3310,call_3316,])
output2 = relay.Tuple([call_3307,call_3311,call_3317,])
func_3352 = relay.Function([], output)
mod['func_3352'] = func_3352
mod = relay.transform.InferType()(mod)
mutated_mod['func_3352'] = func_3352
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3352_call = mutated_mod.get_global_var('func_3352')
call_3353 = func_3352_call()
output = call_3353
func_3354 = relay.Function([], output)
mutated_mod['func_3354'] = func_3354
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3262_call = mod.get_global_var('func_3262')
func_3264_call = mutated_mod.get_global_var('func_3264')
call_3358 = func_3262_call()
call_3359 = func_3262_call()
func_2300_call = mod.get_global_var('func_2300')
func_2302_call = mutated_mod.get_global_var('func_2302')
call_3368 = func_2300_call()
call_3369 = func_2300_call()
func_1960_call = mod.get_global_var('func_1960')
func_1963_call = mutated_mod.get_global_var('func_1963')
const_3387 = relay.const([-3.228698,-7.253783,8.872535,-9.950311,5.814155,-3.625100,2.793080,-9.484879,-5.885475,2.266947,2.081264,7.694066,-0.272086,8.440757,1.783884,-4.502230,-7.163517,-1.348521,8.331322,-3.513212,1.622718,-3.989184,-7.569012,-4.975961,-4.815543,-6.295561,3.141306,5.054899,-8.513608,-0.541001,6.638463,6.322286,9.176085,8.235753,-5.635635,4.527520,-5.545815,-7.641798,-2.033558,5.163794,-2.803447,-5.900253], dtype = "float64")#candidate|3387|(42,)|const|float64
call_3386 = relay.TupleGetItem(func_1960_call(relay.reshape(const_3387.astype('float64'), [42,])), 2)
call_3388 = relay.TupleGetItem(func_1963_call(relay.reshape(const_3387.astype('float64'), [42,])), 2)
func_1852_call = mod.get_global_var('func_1852')
func_1854_call = mutated_mod.get_global_var('func_1854')
call_3391 = func_1852_call(relay.reshape(call_3358.astype('float32'), [15, 11, 12]))
call_3392 = func_1852_call(relay.reshape(call_3358.astype('float32'), [15, 11, 12]))
func_3032_call = mod.get_global_var('func_3032')
func_3033_call = mutated_mod.get_global_var('func_3033')
call_3393 = relay.TupleGetItem(func_3032_call(), 0)
call_3394 = relay.TupleGetItem(func_3033_call(), 0)
func_2353_call = mod.get_global_var('func_2353')
func_2356_call = mutated_mod.get_global_var('func_2356')
const_3407 = relay.const([True,False,True,False,False,True,False,True,False,True,True,False,True,True,False,False,False,False,True,True,True,True,False,False,False,True,True,False,True,True,False,False,False,True,False,False,True,True,True,True,False,False,True,True,True,True,False,False,False,True,True,True,False,True,False,False,False,True,True,True,True,True,True,True,True,False,True,False,True,True,True,True,True,False,False,True,True,False,True,True,False,False,True,False,True,True,True,False,False,False,True,True,True,True,False,False,True,False,False,False,True,True,True,False,True,True,True,True,False,False,False,False,False,True,False,False,False,True,False,True,True,True,False,True,False,True,True,True,True,False,True,False,True,False,False,True,False,False,False,False,False,False,False,True,False,False,True,False,False,True,True,True,False,False,False,True,True,False,False,False,False,False,False,True,False,False,False,False,False,False,False,True,True,False,False,True,True,True,True,True,False,True,False,False,True,True,True,False,True,False,False,True,False,False,False,False,False,True,True,True,True,True,False,False,False,False,True,True,True,True,False,True,False,False,True,True,True,True,True,False,True,True,True,True,True,False,True,True,True,False,False,False,False,False,True,False,False,False,True,True,True,True,False,True,True,False,False,True,True,True,True,False,False,True,True,True,True,False,True,False,True,True,False,True], dtype = "bool")#candidate|3407|(264,)|const|bool
call_3406 = func_2353_call(relay.reshape(const_3407.astype('bool'), [11, 6, 4]))
call_3408 = func_2353_call(relay.reshape(const_3407.astype('bool'), [11, 6, 4]))
func_509_call = mod.get_global_var('func_509')
func_512_call = mutated_mod.get_global_var('func_512')
call_3420 = func_509_call(relay.reshape(call_3386.astype('float64'), [10, 4, 9]))
call_3421 = func_509_call(relay.reshape(call_3386.astype('float64'), [10, 4, 9]))
bop_3438 = relay.minimum(call_3391.astype('uint64'), relay.reshape(call_3393.astype('uint64'), relay.shape_of(call_3391))) # shape=(15, 11, 12)
bop_3441 = relay.minimum(call_3392.astype('uint64'), relay.reshape(call_3394.astype('uint64'), relay.shape_of(call_3392))) # shape=(15, 11, 12)
func_2648_call = mod.get_global_var('func_2648')
func_2649_call = mutated_mod.get_global_var('func_2649')
call_3448 = relay.TupleGetItem(func_2648_call(), 1)
call_3449 = relay.TupleGetItem(func_2649_call(), 1)
var_3451 = relay.var("var_3451", dtype = "float64", shape = (15, 11, 12))#candidate|3451|(15, 11, 12)|var|float64
bop_3452 = relay.bitwise_xor(call_3358.astype('uint64'), relay.reshape(var_3451.astype('uint64'), relay.shape_of(call_3358))) # shape=(15, 11, 12)
bop_3455 = relay.bitwise_xor(call_3359.astype('uint64'), relay.reshape(var_3451.astype('uint64'), relay.shape_of(call_3359))) # shape=(15, 11, 12)
output = relay.Tuple([call_3368,call_3386,const_3387,call_3406,const_3407,call_3420,bop_3438,call_3448,bop_3452,])
output2 = relay.Tuple([call_3369,call_3388,const_3387,call_3408,const_3407,call_3421,bop_3441,call_3449,bop_3455,])
func_3461 = relay.Function([var_3451,], output)
mod['func_3461'] = func_3461
mod = relay.transform.InferType()(mod)
var_3462 = relay.var("var_3462", dtype = "float64", shape = (15, 11, 12))#candidate|3462|(15, 11, 12)|var|float64
output = func_3461(var_3462)
func_3463 = relay.Function([var_3462], output)
mutated_mod['func_3463'] = func_3463
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2708_call = mod.get_global_var('func_2708')
func_2710_call = mutated_mod.get_global_var('func_2710')
call_3498 = relay.TupleGetItem(func_2708_call(), 1)
call_3499 = relay.TupleGetItem(func_2710_call(), 1)
output = call_3498
output2 = call_3499
func_3525 = relay.Function([], output)
mod['func_3525'] = func_3525
mod = relay.transform.InferType()(mod)
mutated_mod['func_3525'] = func_3525
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3525_call = mutated_mod.get_global_var('func_3525')
call_3526 = func_3525_call()
output = call_3526
func_3527 = relay.Function([], output)
mutated_mod['func_3527'] = func_3527
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2696_call = mod.get_global_var('func_2696')
func_2697_call = mutated_mod.get_global_var('func_2697')
call_3540 = func_2696_call()
call_3541 = func_2696_call()
uop_3544 = relay.tan(call_3540.astype('float64')) # shape=(15, 11, 12)
uop_3546 = relay.tan(call_3541.astype('float64')) # shape=(15, 11, 12)
output = uop_3544
output2 = uop_3546
func_3548 = relay.Function([], output)
mod['func_3548'] = func_3548
mod = relay.transform.InferType()(mod)
output = func_3548()
func_3549 = relay.Function([], output)
mutated_mod['func_3549'] = func_3549
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2000_call = mod.get_global_var('func_2000')
func_2002_call = mutated_mod.get_global_var('func_2002')
call_3550 = func_2000_call()
call_3551 = func_2000_call()
output = relay.Tuple([call_3550,])
output2 = relay.Tuple([call_3551,])
func_3579 = relay.Function([], output)
mod['func_3579'] = func_3579
mod = relay.transform.InferType()(mod)
output = func_3579()
func_3580 = relay.Function([], output)
mutated_mod['func_3580'] = func_3580
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2615_call = mod.get_global_var('func_2615')
func_2617_call = mutated_mod.get_global_var('func_2617')
call_3586 = relay.TupleGetItem(func_2615_call(), 0)
call_3587 = relay.TupleGetItem(func_2617_call(), 0)
func_2531_call = mod.get_global_var('func_2531')
func_2532_call = mutated_mod.get_global_var('func_2532')
call_3590 = relay.TupleGetItem(func_2531_call(), 3)
call_3591 = relay.TupleGetItem(func_2532_call(), 3)
output = relay.Tuple([call_3586,call_3590,])
output2 = relay.Tuple([call_3587,call_3591,])
func_3594 = relay.Function([], output)
mod['func_3594'] = func_3594
mod = relay.transform.InferType()(mod)
mutated_mod['func_3594'] = func_3594
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3594_call = mutated_mod.get_global_var('func_3594')
call_3595 = func_3594_call()
output = call_3595
func_3596 = relay.Function([], output)
mutated_mod['func_3596'] = func_3596
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3594_call = mod.get_global_var('func_3594')
func_3596_call = mutated_mod.get_global_var('func_3596')
call_3637 = relay.TupleGetItem(func_3594_call(), 1)
call_3638 = relay.TupleGetItem(func_3596_call(), 1)
uop_3643 = relay.sinh(call_3637.astype('float64')) # shape=(15, 11, 12)
uop_3645 = relay.sinh(call_3638.astype('float64')) # shape=(15, 11, 12)
output = relay.Tuple([uop_3643,])
output2 = relay.Tuple([uop_3645,])
func_3646 = relay.Function([], output)
mod['func_3646'] = func_3646
mod = relay.transform.InferType()(mod)
output = func_3646()
func_3647 = relay.Function([], output)
mutated_mod['func_3647'] = func_3647
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2708_call = mod.get_global_var('func_2708')
func_2710_call = mutated_mod.get_global_var('func_2710')
call_3654 = relay.TupleGetItem(func_2708_call(), 0)
call_3655 = relay.TupleGetItem(func_2710_call(), 0)
func_3210_call = mod.get_global_var('func_3210')
func_3212_call = mutated_mod.get_global_var('func_3212')
call_3661 = relay.TupleGetItem(func_3210_call(), 1)
call_3662 = relay.TupleGetItem(func_3212_call(), 1)
output = relay.Tuple([call_3654,call_3661,])
output2 = relay.Tuple([call_3655,call_3662,])
func_3676 = relay.Function([], output)
mod['func_3676'] = func_3676
mod = relay.transform.InferType()(mod)
output = func_3676()
func_3677 = relay.Function([], output)
mutated_mod['func_3677'] = func_3677
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3210_call = mod.get_global_var('func_3210')
func_3212_call = mutated_mod.get_global_var('func_3212')
call_3684 = relay.TupleGetItem(func_3210_call(), 0)
call_3685 = relay.TupleGetItem(func_3212_call(), 0)
output = call_3684
output2 = call_3685
func_3696 = relay.Function([], output)
mod['func_3696'] = func_3696
mod = relay.transform.InferType()(mod)
mutated_mod['func_3696'] = func_3696
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3696_call = mutated_mod.get_global_var('func_3696')
call_3697 = func_3696_call()
output = call_3697
func_3698 = relay.Function([], output)
mutated_mod['func_3698'] = func_3698
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3676_call = mod.get_global_var('func_3676')
func_3677_call = mutated_mod.get_global_var('func_3677')
call_3707 = relay.TupleGetItem(func_3676_call(), 0)
call_3708 = relay.TupleGetItem(func_3677_call(), 0)
output = relay.Tuple([call_3707,])
output2 = relay.Tuple([call_3708,])
func_3720 = relay.Function([], output)
mod['func_3720'] = func_3720
mod = relay.transform.InferType()(mod)
mutated_mod['func_3720'] = func_3720
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3720_call = mutated_mod.get_global_var('func_3720')
call_3721 = func_3720_call()
output = call_3721
func_3722 = relay.Function([], output)
mutated_mod['func_3722'] = func_3722
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1890_call = mod.get_global_var('func_1890')
func_1892_call = mutated_mod.get_global_var('func_1892')
call_3783 = func_1890_call()
call_3784 = func_1890_call()
func_2854_call = mod.get_global_var('func_2854')
func_2856_call = mutated_mod.get_global_var('func_2856')
var_3786 = relay.var("var_3786", dtype = "float64", shape = (120, 4))#candidate|3786|(120, 4)|var|float64
call_3785 = relay.TupleGetItem(func_2854_call(relay.reshape(var_3786.astype('float64'), [15, 16, 2])), 3)
call_3787 = relay.TupleGetItem(func_2856_call(relay.reshape(var_3786.astype('float64'), [15, 16, 2])), 3)
output = relay.Tuple([call_3783,call_3785,var_3786,])
output2 = relay.Tuple([call_3784,call_3787,var_3786,])
func_3793 = relay.Function([var_3786,], output)
mod['func_3793'] = func_3793
mod = relay.transform.InferType()(mod)
var_3794 = relay.var("var_3794", dtype = "float64", shape = (120, 4))#candidate|3794|(120, 4)|var|float64
output = func_3793(var_3794)
func_3795 = relay.Function([var_3794], output)
mutated_mod['func_3795'] = func_3795
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2956_call = mod.get_global_var('func_2956')
func_2958_call = mutated_mod.get_global_var('func_2958')
call_3808 = relay.TupleGetItem(func_2956_call(), 0)
call_3809 = relay.TupleGetItem(func_2958_call(), 0)
output = relay.Tuple([call_3808,])
output2 = relay.Tuple([call_3809,])
func_3817 = relay.Function([], output)
mod['func_3817'] = func_3817
mod = relay.transform.InferType()(mod)
output = func_3817()
func_3818 = relay.Function([], output)
mutated_mod['func_3818'] = func_3818
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2571_call = mod.get_global_var('func_2571')
func_2573_call = mutated_mod.get_global_var('func_2573')
call_3842 = relay.TupleGetItem(func_2571_call(), 1)
call_3843 = relay.TupleGetItem(func_2573_call(), 1)
uop_3861 = relay.acosh(call_3842.astype('float64')) # shape=(11, 6, 4)
uop_3863 = relay.acosh(call_3843.astype('float64')) # shape=(11, 6, 4)
output = relay.Tuple([uop_3861,])
output2 = relay.Tuple([uop_3863,])
func_3868 = relay.Function([], output)
mod['func_3868'] = func_3868
mod = relay.transform.InferType()(mod)
output = func_3868()
func_3869 = relay.Function([], output)
mutated_mod['func_3869'] = func_3869
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3210_call = mod.get_global_var('func_3210')
func_3212_call = mutated_mod.get_global_var('func_3212')
call_3873 = relay.TupleGetItem(func_3210_call(), 2)
call_3874 = relay.TupleGetItem(func_3212_call(), 2)
func_3646_call = mod.get_global_var('func_3646')
func_3647_call = mutated_mod.get_global_var('func_3647')
call_3888 = relay.TupleGetItem(func_3646_call(), 0)
call_3889 = relay.TupleGetItem(func_3647_call(), 0)
func_2648_call = mod.get_global_var('func_2648')
func_2649_call = mutated_mod.get_global_var('func_2649')
call_3892 = relay.TupleGetItem(func_2648_call(), 0)
call_3893 = relay.TupleGetItem(func_2649_call(), 0)
output = relay.Tuple([call_3873,call_3888,call_3892,])
output2 = relay.Tuple([call_3874,call_3889,call_3893,])
func_3900 = relay.Function([], output)
mod['func_3900'] = func_3900
mod = relay.transform.InferType()(mod)
mutated_mod['func_3900'] = func_3900
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3900_call = mutated_mod.get_global_var('func_3900')
call_3901 = func_3900_call()
output = call_3901
func_3902 = relay.Function([], output)
mutated_mod['func_3902'] = func_3902
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3579_call = mod.get_global_var('func_3579')
func_3580_call = mutated_mod.get_global_var('func_3580')
call_3919 = relay.TupleGetItem(func_3579_call(), 0)
call_3920 = relay.TupleGetItem(func_3580_call(), 0)
func_3793_call = mod.get_global_var('func_3793')
func_3795_call = mutated_mod.get_global_var('func_3795')
const_3923 = relay.const([[8.858701,3.319734,-1.950604,-2.815893,2.861979,2.653138,1.828915,9.571259,-3.874072,-2.923147,-2.777184,-2.397632,2.823582,-4.273627,9.448386,-4.419767,-3.807721,4.406370,-9.573144,-8.998477,5.275813,-2.513285,2.236317,0.433602,-4.355697,9.658623,-4.679282,4.965897,8.365028,9.770985,-9.567347,2.237674,-7.339051,-0.138121,2.581647,-6.906331,-5.989503,4.014121,-2.644996,-6.257370,-8.657403,5.409978,2.615617,-4.666642,-0.357190,4.714988,-2.887245,7.616268,-3.370327,6.397330,-5.681666,-7.235051,-0.185425,-6.350544,2.686527,2.098560,0.512842,-0.567820,-6.270425,0.753514],[9.649412,6.632931,-0.217005,-6.566225,-3.312863,-7.328489,1.287577,-3.324228,-2.562639,-5.561501,0.714403,1.244330,-9.951261,5.297148,6.428937,-7.502053,2.484838,-2.039254,-1.429836,-2.960902,-7.246745,-4.528217,-8.360792,7.409218,3.407177,-5.264907,8.073259,1.368828,4.164950,-8.199636,-6.606267,5.287823,5.998040,6.948368,-2.941299,-3.147517,-9.607869,-7.089122,2.606550,3.455267,0.188635,9.728546,3.373834,7.436840,9.324977,7.342198,-7.242579,-3.347940,-0.407286,4.294975,6.567098,7.445408,-5.142411,-4.134124,5.116361,5.857217,0.251285,-9.883878,3.246501,-9.157673],[1.785220,-2.246733,-2.452831,2.948105,-5.785193,-7.758989,3.069578,1.608869,2.592480,8.235729,1.300395,-7.285005,-9.672715,-0.055233,-9.882578,-1.927062,-2.045883,9.478794,4.581972,-7.671987,7.082612,-7.332361,-8.376470,6.538273,6.983564,6.397317,9.830897,-3.124542,-6.587116,8.310704,6.913299,-5.428302,4.538085,-5.331582,7.624218,-0.477003,3.836566,3.729556,4.515147,-4.032776,9.604766,1.837491,4.114997,-0.189960,-0.208078,-6.084233,-2.588394,-0.844849,-2.806322,-5.801813,6.047178,-7.282540,7.776483,-5.012844,-3.683328,-4.174516,-8.178385,-2.212230,5.881998,9.785564],[6.171434,9.176958,8.533213,8.928163,-1.566879,7.826450,-0.740225,4.772453,7.052140,-5.330986,-8.042573,3.052939,1.329163,-6.407238,8.299995,-5.809432,8.826194,-9.185450,3.981292,-9.233824,0.276410,8.652173,7.172976,-0.269574,1.492132,3.957704,7.790840,-2.139248,-3.547082,8.027232,6.411907,-0.122503,0.676566,9.855482,-5.824220,-4.798567,7.120330,-0.787631,-1.548793,6.279419,2.718341,2.431237,6.352538,1.825448,-3.677013,0.737416,9.042888,-3.866942,-6.896455,5.926523,8.128818,7.906591,-5.975928,-5.576623,-9.128392,-4.201463,-5.338697,-4.311683,8.989068,7.066704],[-4.099950,5.387720,8.296534,-6.451770,4.282939,-8.970645,9.196909,2.287295,0.808560,0.442620,7.914117,-3.321257,1.139868,-5.172481,-7.023295,8.282030,-1.754345,-3.588820,-1.816610,-3.872707,9.327542,3.402138,-3.485214,-0.662438,-7.569256,7.432467,6.954974,4.371431,-5.853620,6.041343,5.922134,5.611806,-4.020982,5.856587,-0.430981,-7.381824,8.243131,-9.297061,3.463565,7.368496,-4.859988,6.976388,-1.578280,9.529309,-2.400021,-0.645759,8.920072,-8.877274,3.929258,-6.209729,2.267881,6.759559,-3.191933,-8.551014,-5.870530,3.129863,-2.884001,-7.023360,9.201501,1.542723],[8.516204,-0.067175,2.143442,-3.737381,-9.785173,-6.438191,1.741469,-3.666747,6.225944,1.113648,6.282581,6.880025,-8.530659,-0.271880,3.762825,0.841519,0.080486,8.711862,-6.931338,-5.437950,-3.604688,-5.736966,-1.781743,-8.659080,9.794843,-5.821859,-5.757816,-8.916603,2.572800,4.935407,-0.149657,5.195321,-9.957344,-8.156064,-1.440116,4.398461,9.105632,2.228052,5.312771,-6.505972,5.168175,3.544408,-3.626849,-8.928314,-6.381676,-8.052533,4.868979,7.631682,-7.327175,-9.537073,-5.462992,5.682870,-6.093269,9.919689,-8.993826,-1.499940,-8.163188,-6.254076,-4.504498,0.603800],[-8.813770,4.756688,7.679507,7.341867,9.541054,3.282424,2.693272,9.540076,5.288921,2.717054,-6.508263,0.113373,8.300387,8.768084,1.149365,8.050253,-5.552479,2.934443,8.107610,0.692682,-4.121524,-4.549323,-2.621550,5.675288,-3.651755,2.854592,3.242199,-8.050730,-9.377534,-4.705996,-6.220661,2.517594,-0.288399,-0.010560,1.919253,-2.998181,-4.455841,-2.065450,1.155349,-7.299068,-9.383453,-5.803348,2.741081,9.486284,7.451603,8.878096,1.003808,-9.523554,0.507287,6.486040,3.681534,-4.404179,-3.268967,-4.128607,0.701807,2.121697,-3.194321,1.121271,-8.990737,-2.677226],[-1.510299,8.769827,-0.962142,6.380008,0.125207,4.854774,6.681294,-1.795027,-2.484310,9.807083,-3.317636,0.323327,-2.605430,-9.553787,9.142032,-4.299262,-4.824742,2.146079,-2.263975,-7.708757,8.971638,-1.064058,9.266488,-1.809457,9.498491,0.153939,9.734445,-7.843666,7.407185,-1.775825,2.459089,-4.842011,9.604110,0.242528,2.868884,0.463414,6.508642,4.345669,-8.938941,-7.852265,5.121261,6.782791,-7.416025,-4.039019,-5.813064,9.452729,-1.555764,9.668620,2.843722,1.710074,-6.022087,-3.152538,-7.861488,2.984876,1.474426,-4.424877,0.809093,9.442931,6.103645,-6.464715]], dtype = "float64")#candidate|3923|(8, 60)|const|float64
call_3922 = relay.TupleGetItem(func_3793_call(relay.reshape(const_3923.astype('float64'), [120, 4])), 1)
call_3924 = relay.TupleGetItem(func_3795_call(relay.reshape(const_3923.astype('float64'), [120, 4])), 1)
output = relay.Tuple([call_3919,call_3922,const_3923,])
output2 = relay.Tuple([call_3920,call_3924,const_3923,])
func_3938 = relay.Function([], output)
mod['func_3938'] = func_3938
mod = relay.transform.InferType()(mod)
mutated_mod['func_3938'] = func_3938
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3938_call = mutated_mod.get_global_var('func_3938')
call_3939 = func_3938_call()
output = call_3939
func_3940 = relay.Function([], output)
mutated_mod['func_3940'] = func_3940
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2708_call = mod.get_global_var('func_2708')
func_2710_call = mutated_mod.get_global_var('func_2710')
call_3941 = relay.TupleGetItem(func_2708_call(), 0)
call_3942 = relay.TupleGetItem(func_2710_call(), 0)
output = call_3941
output2 = call_3942
func_3943 = relay.Function([], output)
mod['func_3943'] = func_3943
mod = relay.transform.InferType()(mod)
mutated_mod['func_3943'] = func_3943
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3943_call = mutated_mod.get_global_var('func_3943')
call_3944 = func_3943_call()
output = call_3944
func_3945 = relay.Function([], output)
mutated_mod['func_3945'] = func_3945
mutated_mod = relay.transform.InferType()(mutated_mod)
var_3952 = relay.var("var_3952", dtype = "float64", shape = (8, 15, 14))#candidate|3952|(8, 15, 14)|var|float64
var_3953 = relay.var("var_3953", dtype = "float64", shape = (8, 15, 14))#candidate|3953|(8, 15, 14)|var|float64
bop_3954 = relay.floor_divide(var_3952.astype('float64'), relay.reshape(var_3953.astype('float64'), relay.shape_of(var_3952))) # shape=(8, 15, 14)
func_1852_call = mod.get_global_var('func_1852')
func_1854_call = mutated_mod.get_global_var('func_1854')
var_3965 = relay.var("var_3965", dtype = "float32", shape = (1980,))#candidate|3965|(1980,)|var|float32
call_3964 = func_1852_call(relay.reshape(var_3965.astype('float32'), [15, 11, 12]))
call_3966 = func_1852_call(relay.reshape(var_3965.astype('float32'), [15, 11, 12]))
uop_3996 = relay.cosh(var_3952.astype('float32')) # shape=(8, 15, 14)
func_3032_call = mod.get_global_var('func_3032')
func_3033_call = mutated_mod.get_global_var('func_3033')
call_4004 = relay.TupleGetItem(func_3032_call(), 3)
call_4005 = relay.TupleGetItem(func_3033_call(), 3)
uop_4013 = relay.atan(call_3964.astype('float32')) # shape=(15, 11, 12)
uop_4015 = relay.atan(call_3966.astype('float32')) # shape=(15, 11, 12)
output = relay.Tuple([bop_3954,var_3965,uop_3996,call_4004,uop_4013,])
output2 = relay.Tuple([bop_3954,var_3965,uop_3996,call_4005,uop_4015,])
func_4036 = relay.Function([var_3952,var_3953,var_3965,], output)
mod['func_4036'] = func_4036
mod = relay.transform.InferType()(mod)
var_4037 = relay.var("var_4037", dtype = "float64", shape = (8, 15, 14))#candidate|4037|(8, 15, 14)|var|float64
var_4038 = relay.var("var_4038", dtype = "float64", shape = (8, 15, 14))#candidate|4038|(8, 15, 14)|var|float64
var_4039 = relay.var("var_4039", dtype = "float32", shape = (1980,))#candidate|4039|(1980,)|var|float32
output = func_4036(var_4037,var_4038,var_4039,)
func_4040 = relay.Function([var_4037,var_4038,var_4039,], output)
mutated_mod['func_4040'] = func_4040
mutated_mod = relay.transform.InferType()(mutated_mod)
const_4067 = relay.const([[[9,-3,-7,10,5,-7,-2],[2,-6,-4,7,-6,7,7],[-5,7,2,-3,-3,8,7],[-3,-4,8,5,-6,1,9],[-9,5,-5,-8,-2,-5,-5],[5,8,10,2,-4,9,1],[-2,-7,-9,5,-7,-10,-5],[4,-7,4,6,1,-2,-4],[5,-3,8,-9,4,-2,8]],[[-10,6,-5,-4,2,2,5],[-8,-7,6,1,-3,10,2],[-8,3,-3,3,-6,6,-4],[-9,2,-10,10,10,8,10],[1,-2,-4,7,6,7,7],[-9,-2,10,8,5,-5,-7],[-8,-3,-3,-10,-9,-4,8],[-8,3,-6,8,10,-5,3],[-10,5,9,9,-2,-9,-7]],[[-6,2,-10,3,-1,3,8],[6,7,2,-4,-9,-5,5],[2,4,-8,3,-5,-5,1],[10,5,-9,-2,4,3,10],[-6,1,6,5,-6,-4,-9],[9,-5,7,5,-2,-8,2],[4,1,-6,6,-10,5,-3],[6,8,-2,-2,-2,-7,-3],[-5,-6,6,6,2,5,-5]],[[5,-1,-2,6,-1,2,-5],[-2,-4,3,3,-9,-1,-1],[2,-9,7,-10,7,10,-4],[5,-1,-8,-1,7,2,3],[7,-2,-3,6,8,-9,-1],[7,3,-5,-7,9,5,4],[-2,-3,-4,-7,-3,-6,-8],[10,-4,-5,6,-1,-4,-5],[-6,8,-7,-8,5,5,-8]],[[-1,-6,8,-7,-6,4,10],[-8,6,-3,4,5,-10,-7],[8,-7,-6,1,2,-6,3],[-6,7,-7,7,-7,-9,-5],[3,-3,9,-4,-1,-8,3],[1,-3,10,-10,3,6,-10],[-4,-3,7,10,3,1,-8],[-1,3,10,9,-6,-4,8],[-8,-4,-1,1,-2,4,-6]],[[-3,1,7,6,-10,7,5],[4,3,10,-6,4,-1,-8],[-4,-9,9,1,-4,5,-1],[1,-4,-9,-8,-4,-4,-10],[7,-7,2,-7,5,-7,6],[-6,-2,5,1,3,-7,-2],[5,3,1,2,7,2,-9],[5,-1,-2,-8,-1,3,10],[10,8,-5,-7,4,-8,1]],[[4,-1,7,2,8,-8,-10],[-4,-10,2,2,-2,4,8],[-6,-5,1,1,-1,7,2],[-8,-6,-3,-9,-8,-2,7],[4,-1,-6,-5,4,3,1],[-3,-7,5,5,2,3,-2],[10,-5,9,-9,2,-2,-9],[2,-6,3,5,-7,-8,-4],[-10,-7,10,-7,10,1,-7]],[[8,7,8,-4,7,10,2],[4,10,4,4,-1,-10,4],[-1,-4,9,-9,-7,7,-4],[7,-5,-4,4,-2,2,9],[2,-5,6,-4,-5,1,7],[5,5,7,-4,2,-9,-8],[8,4,3,-3,-1,6,-1],[7,5,9,-3,-9,-7,4],[-5,-6,-2,-3,10,-3,-4]],[[-8,-6,-4,6,-10,-10,-7],[-9,-3,-3,-9,9,-9,-9],[-9,-3,-9,1,-9,-7,-7],[7,-5,5,3,7,3,2],[-7,6,4,-3,8,6,-3],[8,9,-2,-2,-2,-4,-4],[7,1,-9,-9,8,-7,10],[-6,4,2,9,-10,2,-7],[5,5,9,5,7,-2,10]],[[1,-3,-2,1,2,10,3],[6,-10,1,-2,-3,10,-4],[5,4,-5,-5,3,3,-5],[9,-4,-8,-3,-10,-9,3],[3,4,1,-5,2,-3,5],[-2,8,-8,6,9,-5,6],[1,5,-7,3,-4,6,8],[3,-5,4,8,-10,-10,-6],[7,10,3,6,-4,-10,7]],[[6,-5,-9,-8,6,6,10],[4,-10,-10,-10,4,5,-5],[8,-10,1,5,-6,4,-9],[-9,-4,-7,-5,-3,-9,3],[6,-8,-3,-9,4,4,-7],[3,7,-4,-8,-5,7,-9],[6,-2,-1,-9,9,-7,-3],[2,-9,5,8,7,2,8],[-10,8,1,10,-2,-6,-8]]], dtype = "uint8")#candidate|4067|(11, 9, 7)|const|uint8
const_4068 = relay.const([[[-1,4,4,8,-6,-7,1],[9,8,8,9,4,-10,-9],[-9,4,-9,4,8,-7,10],[-7,-3,1,-6,-3,-10,-4],[-9,-3,-8,-2,5,4,-7],[-10,-4,10,-5,-7,1,5],[8,2,-4,10,1,-1,-6],[-2,6,2,10,7,2,-6],[7,4,1,-5,-10,9,4]],[[8,2,5,-1,-8,-6,4],[-1,10,-4,-3,10,-1,2],[-2,9,8,-9,1,-9,-8],[-6,-4,-5,-4,9,-5,5],[9,-8,-6,8,-10,9,4],[-10,5,-7,4,-3,2,-8],[-9,4,2,7,-1,-4,-4],[10,-2,-2,-8,-6,-4,3],[-9,4,-5,5,2,-7,-1]],[[-2,5,4,-6,-4,7,9],[9,7,4,-7,2,8,8],[-9,-8,3,-6,-1,-5,-7],[9,4,-7,-7,4,9,7],[-4,-3,-3,5,-4,-3,3],[4,-10,5,10,-7,-4,10],[-9,-3,2,-7,8,-9,4],[9,-1,7,-7,-5,6,-3],[-5,6,-10,8,-6,4,-8]],[[6,6,1,-2,9,3,-6],[8,-1,-2,8,7,-5,2],[7,-6,-3,-10,-10,-5,2],[4,8,7,6,6,5,-9],[-6,-2,2,6,10,2,-10],[10,-8,10,-10,-5,8,10],[7,-4,2,-6,3,2,1],[3,2,3,-10,5,-2,6],[-6,-5,-6,5,-6,2,4]],[[3,9,-7,9,-10,7,-1],[-8,8,3,-6,-4,-7,-4],[10,-5,5,8,5,-6,-8],[-4,9,-4,-7,-4,-6,-4],[9,-3,7,-3,-4,-6,8],[-5,4,-3,-1,-2,6,1],[-4,-6,-4,3,9,-6,7],[-3,6,1,-7,-3,-3,-9],[10,-4,5,-9,-1,2,10]],[[-4,-2,2,-4,7,7,-2],[-4,-1,8,-1,7,6,4],[-9,-6,3,-9,7,6,-7],[-2,5,-9,-2,-4,-2,7],[-7,5,-7,-1,10,-3,-5],[1,-6,-2,-10,-7,-8,9],[2,-7,7,6,-5,-2,5],[4,-8,4,9,-3,5,-3],[-3,-2,-8,-3,-2,-9,-4]],[[-4,8,-2,2,-10,-2,-9],[-7,1,-5,-2,-3,-10,-3],[-2,9,9,1,-6,5,-3],[1,5,4,-7,-6,-6,5],[4,2,-9,9,10,7,-4],[-4,-1,-10,-2,-10,-5,-7],[7,-6,1,6,-3,-8,-8],[1,-7,-10,-9,-3,-5,9],[1,-3,-9,9,1,2,2]],[[-6,-4,2,-9,2,-3,8],[-9,-9,2,-9,3,3,-5],[7,-6,10,8,-3,-6,-5],[-9,-8,10,1,1,5,7],[-9,6,2,7,-1,-3,1],[9,-8,-1,-9,4,-4,-9],[9,8,2,2,-5,-5,-3],[1,8,4,-10,-10,5,-10],[-9,10,9,-5,-2,-5,7]],[[3,6,8,6,10,4,-7],[-6,-9,-10,-2,-7,-9,6],[-5,-4,5,-2,4,4,4],[-5,-8,-9,-5,-6,-7,-6],[1,2,6,-4,-8,5,-4],[5,8,10,9,5,-8,1],[-3,6,10,9,4,1,10],[3,7,-4,9,5,3,4],[-2,-7,-3,-10,-10,2,-2]],[[7,9,10,9,-2,-5,-6],[8,10,-4,-4,1,-3,3],[-9,6,-1,-6,-4,-2,-3],[5,7,-1,1,5,4,1],[9,3,-1,1,-6,2,4],[-8,2,8,7,8,7,-5],[-9,10,-10,-5,-2,4,5],[-9,9,8,3,3,-7,5],[-4,7,-9,-3,-10,2,5]],[[1,2,-1,-1,4,-4,1],[-10,7,9,9,-5,-6,9],[8,-4,5,10,10,-2,-5],[-3,-2,-3,7,5,7,-6],[-4,3,-10,2,4,9,5],[-10,10,5,6,-2,-9,9],[-8,10,-2,5,-9,-5,-9],[9,-8,4,-2,-9,-6,-1],[8,10,-5,-8,-3,-6,8]]], dtype = "uint8")#candidate|4068|(11, 9, 7)|const|uint8
bop_4069 = relay.greater_equal(const_4067.astype('bool'), relay.reshape(const_4068.astype('bool'), relay.shape_of(const_4067))) # shape=(11, 9, 7)
output = relay.Tuple([bop_4069,])
output2 = relay.Tuple([bop_4069,])
func_4073 = relay.Function([], output)
mod['func_4073'] = func_4073
mod = relay.transform.InferType()(mod)
mutated_mod['func_4073'] = func_4073
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4073_call = mutated_mod.get_global_var('func_4073')
call_4074 = func_4073_call()
output = call_4074
func_4075 = relay.Function([], output)
mutated_mod['func_4075'] = func_4075
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3036_call = mod.get_global_var('func_3036')
func_3037_call = mutated_mod.get_global_var('func_3037')
call_4161 = relay.TupleGetItem(func_3036_call(), 0)
call_4162 = relay.TupleGetItem(func_3037_call(), 0)
output = relay.Tuple([call_4161,])
output2 = relay.Tuple([call_4162,])
func_4184 = relay.Function([], output)
mod['func_4184'] = func_4184
mod = relay.transform.InferType()(mod)
mutated_mod['func_4184'] = func_4184
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4184_call = mutated_mod.get_global_var('func_4184')
call_4185 = func_4184_call()
output = call_4185
func_4186 = relay.Function([], output)
mutated_mod['func_4186'] = func_4186
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3676_call = mod.get_global_var('func_3676')
func_3677_call = mutated_mod.get_global_var('func_3677')
call_4187 = relay.TupleGetItem(func_3676_call(), 0)
call_4188 = relay.TupleGetItem(func_3677_call(), 0)
output = relay.Tuple([call_4187,])
output2 = relay.Tuple([call_4188,])
func_4191 = relay.Function([], output)
mod['func_4191'] = func_4191
mod = relay.transform.InferType()(mod)
output = func_4191()
func_4192 = relay.Function([], output)
mutated_mod['func_4192'] = func_4192
mutated_mod = relay.transform.InferType()(mutated_mod)
const_4199 = relay.const([[[-5.768031,-5.840870,-4.950826,8.755265,3.356504,6.165157,-3.770053],[1.299401,0.842011,-8.098890,-2.238422,0.688077,-5.246957,3.658120],[9.939746,6.423001,-0.879100,-8.049522,9.875781,3.381724,1.833718],[3.111068,-0.981630,-8.424183,8.080295,7.645022,-9.276143,2.721087],[2.377733,-2.458407,7.942218,-8.894350,-9.323068,6.507994,7.611796],[-7.017915,2.967042,-8.637501,-5.078534,1.885515,8.483218,-3.250092],[0.324723,-7.912422,-8.972648,5.809277,-2.043820,6.487119,5.288168],[-0.967179,8.830293,4.062520,-8.515530,2.565347,-4.105705,-0.398989],[8.660978,3.755842,-0.879728,4.691073,7.966016,6.118498,-7.349103],[-6.678187,6.409410,-4.699318,6.283548,0.785126,-2.102683,-3.216038],[6.910933,-4.865037,0.420511,7.377365,-3.059557,-8.677737,-2.474859]]], dtype = "float64")#candidate|4199|(1, 11, 7)|const|float64
const_4200 = relay.const([[[-6.560728,8.373615,9.271675,-4.363978,-1.408036,4.778938,6.941327],[-6.443578,8.113679,-0.835908,3.705198,2.808927,-3.518787,6.333487],[5.619246,2.791071,1.442110,-9.593760,0.453876,2.845824,0.421621],[-5.293727,5.927994,6.221844,2.520698,-2.171909,-5.352845,-4.088436],[5.030630,-1.778646,-7.814250,-9.819841,-2.546343,9.784620,8.125182],[-2.914437,4.325558,3.958188,9.087358,-0.357155,-6.607343,5.250129],[-2.749184,2.520203,-8.791318,-8.335556,9.326746,-9.932591,-3.845732],[5.398639,3.678340,-8.550984,0.947982,5.737895,-5.755849,5.299170],[-9.573161,2.913974,-2.471836,-6.385314,3.533249,-9.233496,8.057231],[-4.340894,-6.212784,2.140356,6.118264,-5.477985,-7.899265,5.255800],[1.843485,5.466568,-6.861028,6.750481,-6.188919,9.939637,-6.544635]]], dtype = "float64")#candidate|4200|(1, 11, 7)|const|float64
bop_4201 = relay.divide(const_4199.astype('float64'), relay.reshape(const_4200.astype('float64'), relay.shape_of(const_4199))) # shape=(1, 11, 7)
bop_4210 = relay.greater_equal(const_4199.astype('bool'), relay.reshape(const_4200.astype('bool'), relay.shape_of(const_4199))) # shape=(1, 11, 7)
bop_4216 = relay.minimum(bop_4210.astype('float32'), relay.reshape(const_4200.astype('float32'), relay.shape_of(bop_4210))) # shape=(1, 11, 7)
uop_4231 = relay.tan(const_4199.astype('float64')) # shape=(1, 11, 7)
uop_4235 = relay.asin(bop_4216.astype('float64')) # shape=(1, 11, 7)
uop_4237 = relay.sigmoid(uop_4231.astype('float32')) # shape=(1, 11, 7)
func_1960_call = mod.get_global_var('func_1960')
func_1963_call = mutated_mod.get_global_var('func_1963')
const_4254 = relay.const([-2.695617,6.987750,-6.393223,0.703502,8.024841,5.104890,8.630059,-7.378096,4.118146,5.613640,-3.719868,-6.852065,-4.980920,1.964923,-4.231559,-3.388793,-2.889946,-4.998780,-3.739031,2.363741,1.802729,-3.638438,0.666743,1.918157,7.952831,-5.623375,9.688360,5.188137,-9.044451,6.878943,7.966338,5.163098,3.320767,8.188899,3.169497,4.848963,9.768756,4.991461,-7.188725,4.061506,-1.469128,-2.727329], dtype = "float64")#candidate|4254|(42,)|const|float64
call_4253 = relay.TupleGetItem(func_1960_call(relay.reshape(const_4254.astype('float64'), [42,])), 0)
call_4255 = relay.TupleGetItem(func_1963_call(relay.reshape(const_4254.astype('float64'), [42,])), 0)
uop_4258 = relay.exp(uop_4235.astype('float64')) # shape=(1, 11, 7)
func_4073_call = mod.get_global_var('func_4073')
func_4075_call = mutated_mod.get_global_var('func_4075')
call_4262 = relay.TupleGetItem(func_4073_call(), 0)
call_4263 = relay.TupleGetItem(func_4075_call(), 0)
func_1890_call = mod.get_global_var('func_1890')
func_1892_call = mutated_mod.get_global_var('func_1892')
call_4274 = func_1890_call()
call_4275 = func_1890_call()
func_509_call = mod.get_global_var('func_509')
func_512_call = mutated_mod.get_global_var('func_512')
var_4297 = relay.var("var_4297", dtype = "float64", shape = (360,))#candidate|4297|(360,)|var|float64
call_4296 = func_509_call(relay.reshape(var_4297.astype('float64'), [10, 4, 9]))
call_4298 = func_509_call(relay.reshape(var_4297.astype('float64'), [10, 4, 9]))
uop_4306 = relay.acosh(const_4200.astype('float64')) # shape=(1, 11, 7)
func_2300_call = mod.get_global_var('func_2300')
func_2302_call = mutated_mod.get_global_var('func_2302')
call_4308 = func_2300_call()
call_4309 = func_2300_call()
output = relay.Tuple([bop_4201,uop_4237,call_4253,const_4254,uop_4258,call_4262,call_4274,call_4296,var_4297,uop_4306,call_4308,])
output2 = relay.Tuple([bop_4201,uop_4237,call_4255,const_4254,uop_4258,call_4263,call_4275,call_4298,var_4297,uop_4306,call_4309,])
func_4311 = relay.Function([var_4297,], output)
mod['func_4311'] = func_4311
mod = relay.transform.InferType()(mod)
mutated_mod['func_4311'] = func_4311
mutated_mod = relay.transform.InferType()(mutated_mod)
var_4312 = relay.var("var_4312", dtype = "float64", shape = (360,))#candidate|4312|(360,)|var|float64
func_4311_call = mutated_mod.get_global_var('func_4311')
call_4313 = func_4311_call(var_4312)
output = call_4313
func_4314 = relay.Function([var_4312], output)
mutated_mod['func_4314'] = func_4314
mutated_mod = relay.transform.InferType()(mutated_mod)
var_4336 = relay.var("var_4336", dtype = "float64", shape = (6, 9, 4))#candidate|4336|(6, 9, 4)|var|float64
const_4337 = relay.const([[[-4.991887,-4.457425,3.987166,9.558973],[8.230720,2.153453,-3.377685,-8.401172],[-4.914203,-1.451518,5.091222,-0.868396],[8.499902,4.392079,6.968542,-9.903049],[-5.091904,4.701594,-1.676911,-7.630353],[-6.603652,-2.784608,9.424062,7.220786],[-7.238185,-0.248168,1.703244,-6.176721],[0.888762,-8.134277,4.165392,5.697682],[-0.803261,5.667709,2.618648,-7.645486]],[[0.793556,-7.873471,2.982684,-6.147405],[9.605961,2.859538,7.666245,9.923086],[9.430024,-6.252877,-0.368631,1.792218],[-5.237390,5.197848,-3.857032,6.647939],[-4.469515,-7.683509,-5.462420,1.306527],[-3.370645,-5.919958,3.248212,-8.041402],[7.365437,5.438082,-1.250422,-3.758279],[6.791799,-6.601889,0.121016,5.349991],[-9.723929,6.040344,-8.496806,-7.812065]],[[-5.819379,-2.570815,6.216584,-7.396955],[2.114137,-3.302404,-1.060185,-4.255778],[2.803726,9.885880,1.308596,-5.884767],[3.418516,-5.876858,2.331233,-3.054231],[5.747505,3.286013,3.490876,5.074207],[4.354297,9.906552,7.768539,6.022162],[-4.019278,3.705192,8.556849,9.919725],[-5.089230,-5.386015,3.834159,6.415063],[0.783025,3.540320,-5.463811,-0.849202]],[[-9.497609,-2.297720,1.308988,-3.923992],[-5.630354,3.907274,-5.954706,-7.559645],[-7.459842,-5.279749,1.933876,-2.810520],[-4.371601,-1.026644,8.709575,-7.580492],[-6.664282,4.685921,-6.295233,8.985449],[9.894984,-9.346323,-7.755943,-6.282565],[8.466426,-8.094573,-9.953793,9.908581],[-0.847066,-6.004619,-6.204671,0.300039],[7.731364,6.456776,1.419630,-6.655700]],[[7.773515,-8.830827,-8.506748,3.452742],[8.681303,-1.515235,-4.704761,-0.857291],[9.040896,-3.395033,2.613249,-3.431598],[-5.964752,-5.039437,4.496239,9.070229],[7.836805,-0.818645,-7.361270,5.126076],[9.178934,-6.639990,3.046024,-4.943273],[6.366114,4.560000,-6.916713,1.004685],[6.136943,-0.922359,-2.181632,9.641247],[2.145173,6.979894,3.101638,1.714326]],[[4.310944,0.567497,-8.074790,3.792541],[-3.928428,-4.225518,4.086145,-3.192054],[6.768275,8.168277,-1.408242,4.727249],[-2.363097,1.588508,9.920262,-3.652137],[-4.623522,-5.685208,7.281546,-6.291807],[-8.766762,-4.713067,-4.490741,-3.091291],[-1.617684,-2.232897,-0.043403,-0.772030],[-0.517336,7.022631,4.139997,-5.027948],[4.761049,-7.386625,7.993186,-3.045137]]], dtype = "float64")#candidate|4337|(6, 9, 4)|const|float64
bop_4338 = relay.mod(var_4336.astype('float64'), relay.reshape(const_4337.astype('float64'), relay.shape_of(var_4336))) # shape=(6, 9, 4)
output = relay.Tuple([bop_4338,])
output2 = relay.Tuple([bop_4338,])
func_4344 = relay.Function([var_4336,], output)
mod['func_4344'] = func_4344
mod = relay.transform.InferType()(mod)
mutated_mod['func_4344'] = func_4344
mutated_mod = relay.transform.InferType()(mutated_mod)
var_4345 = relay.var("var_4345", dtype = "float64", shape = (6, 9, 4))#candidate|4345|(6, 9, 4)|var|float64
func_4344_call = mutated_mod.get_global_var('func_4344')
call_4346 = func_4344_call(var_4345)
output = call_4346
func_4347 = relay.Function([var_4345], output)
mutated_mod['func_4347'] = func_4347
mutated_mod = relay.transform.InferType()(mutated_mod)
var_4366 = relay.var("var_4366", dtype = "int64", shape = (2, 11, 1))#candidate|4366|(2, 11, 1)|var|int64
var_4367 = relay.var("var_4367", dtype = "int64", shape = (2, 11, 16))#candidate|4367|(2, 11, 16)|var|int64
bop_4368 = relay.right_shift(var_4366.astype('int64'), var_4367.astype('int64')) # shape=(2, 11, 16)
uop_4372 = relay.tan(var_4366.astype('float32')) # shape=(2, 11, 1)
func_2300_call = mod.get_global_var('func_2300')
func_2302_call = mutated_mod.get_global_var('func_2302')
call_4376 = func_2300_call()
call_4377 = func_2300_call()
output = relay.Tuple([bop_4368,uop_4372,call_4376,])
output2 = relay.Tuple([bop_4368,uop_4372,call_4377,])
func_4385 = relay.Function([var_4366,var_4367,], output)
mod['func_4385'] = func_4385
mod = relay.transform.InferType()(mod)
var_4386 = relay.var("var_4386", dtype = "int64", shape = (2, 11, 1))#candidate|4386|(2, 11, 1)|var|int64
var_4387 = relay.var("var_4387", dtype = "int64", shape = (2, 11, 16))#candidate|4387|(2, 11, 16)|var|int64
output = func_4385(var_4386,var_4387,)
func_4388 = relay.Function([var_4386,var_4387,], output)
mutated_mod['func_4388'] = func_4388
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2000_call = mod.get_global_var('func_2000')
func_2002_call = mutated_mod.get_global_var('func_2002')
call_4390 = func_2000_call()
call_4391 = func_2000_call()
output = relay.Tuple([call_4390,])
output2 = relay.Tuple([call_4391,])
func_4392 = relay.Function([], output)
mod['func_4392'] = func_4392
mod = relay.transform.InferType()(mod)
output = func_4392()
func_4393 = relay.Function([], output)
mutated_mod['func_4393'] = func_4393
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3036_call = mod.get_global_var('func_3036')
func_3037_call = mutated_mod.get_global_var('func_3037')
call_4415 = relay.TupleGetItem(func_3036_call(), 0)
call_4416 = relay.TupleGetItem(func_3037_call(), 0)
func_2708_call = mod.get_global_var('func_2708')
func_2710_call = mutated_mod.get_global_var('func_2710')
call_4421 = relay.TupleGetItem(func_2708_call(), 0)
call_4422 = relay.TupleGetItem(func_2710_call(), 0)
output = relay.Tuple([call_4415,call_4421,])
output2 = relay.Tuple([call_4416,call_4422,])
func_4424 = relay.Function([], output)
mod['func_4424'] = func_4424
mod = relay.transform.InferType()(mod)
mutated_mod['func_4424'] = func_4424
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4424_call = mutated_mod.get_global_var('func_4424')
call_4425 = func_4424_call()
output = call_4425
func_4426 = relay.Function([], output)
mutated_mod['func_4426'] = func_4426
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3262_call = mod.get_global_var('func_3262')
func_3264_call = mutated_mod.get_global_var('func_3264')
call_4516 = func_3262_call()
call_4517 = func_3262_call()
func_3210_call = mod.get_global_var('func_3210')
func_3212_call = mutated_mod.get_global_var('func_3212')
call_4531 = relay.TupleGetItem(func_3210_call(), 2)
call_4532 = relay.TupleGetItem(func_3212_call(), 2)
output = relay.Tuple([call_4516,call_4531,])
output2 = relay.Tuple([call_4517,call_4532,])
func_4548 = relay.Function([], output)
mod['func_4548'] = func_4548
mod = relay.transform.InferType()(mod)
mutated_mod['func_4548'] = func_4548
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4548_call = mutated_mod.get_global_var('func_4548')
call_4549 = func_4548_call()
output = call_4549
func_4550 = relay.Function([], output)
mutated_mod['func_4550'] = func_4550
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2696_call = mod.get_global_var('func_2696')
func_2697_call = mutated_mod.get_global_var('func_2697')
call_4559 = func_2696_call()
call_4560 = func_2696_call()
output = relay.Tuple([call_4559,])
output2 = relay.Tuple([call_4560,])
func_4605 = relay.Function([], output)
mod['func_4605'] = func_4605
mod = relay.transform.InferType()(mod)
output = func_4605()
func_4606 = relay.Function([], output)
mutated_mod['func_4606'] = func_4606
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1808_call = mod.get_global_var('func_1808')
func_1810_call = mutated_mod.get_global_var('func_1810')
call_4615 = relay.TupleGetItem(func_1808_call(), 2)
call_4616 = relay.TupleGetItem(func_1810_call(), 2)
func_2454_call = mod.get_global_var('func_2454')
func_2455_call = mutated_mod.get_global_var('func_2455')
call_4628 = relay.TupleGetItem(func_2454_call(), 0)
call_4629 = relay.TupleGetItem(func_2455_call(), 0)
func_3525_call = mod.get_global_var('func_3525')
func_3527_call = mutated_mod.get_global_var('func_3527')
call_4630 = func_3525_call()
call_4631 = func_3525_call()
output = relay.Tuple([call_4615,call_4628,call_4630,])
output2 = relay.Tuple([call_4616,call_4629,call_4631,])
func_4642 = relay.Function([], output)
mod['func_4642'] = func_4642
mod = relay.transform.InferType()(mod)
mutated_mod['func_4642'] = func_4642
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4642_call = mutated_mod.get_global_var('func_4642')
call_4643 = func_4642_call()
output = call_4643
func_4644 = relay.Function([], output)
mutated_mod['func_4644'] = func_4644
mutated_mod = relay.transform.InferType()(mutated_mod)
var_4697 = relay.var("var_4697", dtype = "int8", shape = (2, 2, 2))#candidate|4697|(2, 2, 2)|var|int8
const_4698 = relay.const([[[-7,-4],[-10,4]],[[-5,-2],[-10,2]]], dtype = "int8")#candidate|4698|(2, 2, 2)|const|int8
bop_4699 = relay.subtract(var_4697.astype('int8'), relay.reshape(const_4698.astype('int8'), relay.shape_of(var_4697))) # shape=(2, 2, 2)
func_3793_call = mod.get_global_var('func_3793')
func_3795_call = mutated_mod.get_global_var('func_3795')
var_4711 = relay.var("var_4711", dtype = "float64", shape = (480,))#candidate|4711|(480,)|var|float64
call_4710 = relay.TupleGetItem(func_3793_call(relay.reshape(var_4711.astype('float64'), [120, 4])), 1)
call_4712 = relay.TupleGetItem(func_3795_call(relay.reshape(var_4711.astype('float64'), [120, 4])), 1)
output = relay.Tuple([bop_4699,call_4710,var_4711,])
output2 = relay.Tuple([bop_4699,call_4712,var_4711,])
func_4729 = relay.Function([var_4697,var_4711,], output)
mod['func_4729'] = func_4729
mod = relay.transform.InferType()(mod)
mutated_mod['func_4729'] = func_4729
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4729_call = mutated_mod.get_global_var('func_4729')
var_4731 = relay.var("var_4731", dtype = "int8", shape = (2, 2, 2))#candidate|4731|(2, 2, 2)|var|int8
var_4732 = relay.var("var_4732", dtype = "float64", shape = (480,))#candidate|4732|(480,)|var|float64
call_4730 = func_4729_call(var_4731,var_4732,)
output = call_4730
func_4733 = relay.Function([var_4731,var_4732,], output)
mutated_mod['func_4733'] = func_4733
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3301_call = mod.get_global_var('func_3301')
func_3303_call = mutated_mod.get_global_var('func_3303')
call_4735 = relay.TupleGetItem(func_3301_call(), 1)
call_4736 = relay.TupleGetItem(func_3303_call(), 1)
output = relay.Tuple([call_4735,])
output2 = relay.Tuple([call_4736,])
func_4739 = relay.Function([], output)
mod['func_4739'] = func_4739
mod = relay.transform.InferType()(mod)
output = func_4739()
func_4740 = relay.Function([], output)
mutated_mod['func_4740'] = func_4740
mutated_mod = relay.transform.InferType()(mutated_mod)
var_4810 = relay.var("var_4810", dtype = "float32", shape = (9, 1, 9))#candidate|4810|(9, 1, 9)|var|float32
var_4811 = relay.var("var_4811", dtype = "float32", shape = (9, 8, 9))#candidate|4811|(9, 8, 9)|var|float32
bop_4812 = relay.power(var_4810.astype('float32'), var_4811.astype('float32')) # shape=(9, 8, 9)
output = bop_4812
output2 = bop_4812
func_4825 = relay.Function([var_4810,var_4811,], output)
mod['func_4825'] = func_4825
mod = relay.transform.InferType()(mod)
var_4826 = relay.var("var_4826", dtype = "float32", shape = (9, 1, 9))#candidate|4826|(9, 1, 9)|var|float32
var_4827 = relay.var("var_4827", dtype = "float32", shape = (9, 8, 9))#candidate|4827|(9, 8, 9)|var|float32
output = func_4825(var_4826,var_4827,)
func_4828 = relay.Function([var_4826,var_4827,], output)
mutated_mod['func_4828'] = func_4828
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2211_call = mod.get_global_var('func_2211')
func_2213_call = mutated_mod.get_global_var('func_2213')
call_4853 = relay.TupleGetItem(func_2211_call(), 1)
call_4854 = relay.TupleGetItem(func_2213_call(), 1)
func_3210_call = mod.get_global_var('func_3210')
func_3212_call = mutated_mod.get_global_var('func_3212')
call_4855 = relay.TupleGetItem(func_3210_call(), 2)
call_4856 = relay.TupleGetItem(func_3212_call(), 2)
func_3696_call = mod.get_global_var('func_3696')
func_3698_call = mutated_mod.get_global_var('func_3698')
call_4860 = func_3696_call()
call_4861 = func_3696_call()
func_4642_call = mod.get_global_var('func_4642')
func_4644_call = mutated_mod.get_global_var('func_4644')
call_4866 = relay.TupleGetItem(func_4642_call(), 2)
call_4867 = relay.TupleGetItem(func_4644_call(), 2)
output = relay.Tuple([call_4853,call_4855,call_4860,call_4866,])
output2 = relay.Tuple([call_4854,call_4856,call_4861,call_4867,])
func_4868 = relay.Function([], output)
mod['func_4868'] = func_4868
mod = relay.transform.InferType()(mod)
mutated_mod['func_4868'] = func_4868
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4868_call = mutated_mod.get_global_var('func_4868')
call_4869 = func_4868_call()
output = call_4869
func_4870 = relay.Function([], output)
mutated_mod['func_4870'] = func_4870
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3210_call = mod.get_global_var('func_3210')
func_3212_call = mutated_mod.get_global_var('func_3212')
call_4874 = relay.TupleGetItem(func_3210_call(), 0)
call_4875 = relay.TupleGetItem(func_3212_call(), 0)
func_2708_call = mod.get_global_var('func_2708')
func_2710_call = mutated_mod.get_global_var('func_2710')
call_4887 = relay.TupleGetItem(func_2708_call(), 1)
call_4888 = relay.TupleGetItem(func_2710_call(), 1)
func_4424_call = mod.get_global_var('func_4424')
func_4426_call = mutated_mod.get_global_var('func_4426')
call_4890 = relay.TupleGetItem(func_4424_call(), 1)
call_4891 = relay.TupleGetItem(func_4426_call(), 1)
output = relay.Tuple([call_4874,call_4887,call_4890,])
output2 = relay.Tuple([call_4875,call_4888,call_4891,])
func_4893 = relay.Function([], output)
mod['func_4893'] = func_4893
mod = relay.transform.InferType()(mod)
mutated_mod['func_4893'] = func_4893
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4893_call = mutated_mod.get_global_var('func_4893')
call_4894 = func_4893_call()
output = call_4894
func_4895 = relay.Function([], output)
mutated_mod['func_4895'] = func_4895
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3938_call = mod.get_global_var('func_3938')
func_3940_call = mutated_mod.get_global_var('func_3940')
call_4901 = relay.TupleGetItem(func_3938_call(), 2)
call_4902 = relay.TupleGetItem(func_3940_call(), 2)
var_4906 = relay.var("var_4906", dtype = "float64", shape = (8, 60))#candidate|4906|(8, 60)|var|float64
bop_4907 = relay.logical_xor(call_4901.astype('uint8'), relay.reshape(var_4906.astype('uint8'), relay.shape_of(call_4901))) # shape=(8, 60)
bop_4910 = relay.logical_xor(call_4902.astype('uint8'), relay.reshape(var_4906.astype('uint8'), relay.shape_of(call_4902))) # shape=(8, 60)
bop_4920 = relay.left_shift(bop_4907.astype('int64'), relay.reshape(call_4901.astype('int64'), relay.shape_of(bop_4907))) # shape=(8, 60)
bop_4923 = relay.left_shift(bop_4910.astype('int64'), relay.reshape(call_4902.astype('int64'), relay.shape_of(bop_4910))) # shape=(8, 60)
const_4929 = relay.const([[4,9,-7,-5,1,-6,-8,-5,-1,-9,5,7,5,7,7,1,5,7,2,-4,10,4,-2,9,9,10,-5,5,-6,-5,2,8,-7,9,7,-4,5,4,-6,1,-10,-7,-7,-5,7,-9,8,-8,2,-6,-3,5,6,-5,2,-8,-8,-9,9,9],[-6,7,-8,10,-4,-1,7,-7,7,7,-10,4,-10,-3,9,-7,10,10,8,-8,-8,-1,6,8,-10,5,-2,9,3,10,-4,6,10,-2,6,3,10,9,-4,1,3,-5,4,6,-6,9,3,3,-9,-4,-6,1,4,6,-8,-1,3,-6,10,4],[8,3,9,7,-1,-5,1,-7,-7,-1,9,5,-8,9,-3,-1,8,-4,-9,5,3,1,7,7,2,-8,-9,-5,6,-4,-8,-9,8,1,4,1,7,1,3,-7,-7,-8,-10,3,8,4,-2,-2,8,-2,-1,-2,-7,2,3,5,-6,8,7,-3],[-1,-2,-10,7,-2,-2,2,-1,9,8,-3,-3,7,9,3,10,-9,-6,9,-8,-2,3,-4,-4,-8,-6,7,-3,9,10,-2,-5,-3,9,-4,-4,-7,2,-9,-6,-9,9,-10,-10,-2,10,-1,6,-5,7,-2,-8,5,-2,-6,-3,-1,-1,-7,-1],[-1,5,-5,5,6,1,-2,8,-9,-4,-3,10,-1,6,-3,-7,7,4,4,3,-1,9,5,1,-10,-3,-3,-8,5,4,-10,-2,-4,-2,-8,-8,3,-4,-7,-6,-1,-1,-1,1,-2,4,8,2,2,2,-10,9,-10,-2,8,-5,7,5,4,4],[3,-9,-3,4,-6,3,9,-7,-5,-7,9,3,-7,-1,-6,-8,-2,1,9,-1,2,-8,6,-1,6,-5,9,8,8,-6,6,-3,-10,-4,-10,1,-8,4,-6,-6,-2,-7,1,-4,7,-3,-3,-3,-3,-1,1,4,10,-5,2,9,2,-4,1,2],[-9,3,3,6,-3,8,8,3,-9,-4,-10,4,7,7,-5,8,-5,-7,-6,-6,-7,-3,6,3,-6,8,-8,-10,-2,4,5,3,-2,-2,-3,-7,3,-7,6,8,-7,-8,1,-3,-2,-10,1,-10,-4,-1,-1,9,-8,4,-6,-6,1,1,9,-2],[-1,1,-8,4,3,8,6,9,4,8,8,-5,7,10,10,-8,-6,2,1,-5,5,-10,1,-5,-5,-8,-8,-3,-9,-2,4,-9,-10,-4,8,5,3,4,-7,10,5,-6,-1,9,-1,-10,-10,5,3,-9,7,4,-1,5,-9,-9,-4,-7,-5,6]], dtype = "uint8")#candidate|4929|(8, 60)|const|uint8
bop_4930 = relay.add(bop_4907.astype('float64'), relay.reshape(const_4929.astype('float64'), relay.shape_of(bop_4907))) # shape=(8, 60)
bop_4933 = relay.add(bop_4910.astype('float64'), relay.reshape(const_4929.astype('float64'), relay.shape_of(bop_4910))) # shape=(8, 60)
output = relay.Tuple([bop_4920,bop_4930,])
output2 = relay.Tuple([bop_4923,bop_4933,])
func_4936 = relay.Function([var_4906,], output)
mod['func_4936'] = func_4936
mod = relay.transform.InferType()(mod)
mutated_mod['func_4936'] = func_4936
mutated_mod = relay.transform.InferType()(mutated_mod)
var_4937 = relay.var("var_4937", dtype = "float64", shape = (8, 60))#candidate|4937|(8, 60)|var|float64
func_4936_call = mutated_mod.get_global_var('func_4936')
call_4938 = func_4936_call(var_4937)
output = call_4938
func_4939 = relay.Function([var_4937], output)
mutated_mod['func_4939'] = func_4939
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3548_call = mod.get_global_var('func_3548')
func_3549_call = mutated_mod.get_global_var('func_3549')
call_4998 = func_3548_call()
call_4999 = func_3548_call()
var_5018 = relay.var("var_5018", dtype = "float64", shape = (15, 11, 12))#candidate|5018|(15, 11, 12)|var|float64
bop_5019 = relay.right_shift(call_4998.astype('int8'), relay.reshape(var_5018.astype('int8'), relay.shape_of(call_4998))) # shape=(15, 11, 12)
bop_5022 = relay.right_shift(call_4999.astype('int8'), relay.reshape(var_5018.astype('int8'), relay.shape_of(call_4999))) # shape=(15, 11, 12)
func_3579_call = mod.get_global_var('func_3579')
func_3580_call = mutated_mod.get_global_var('func_3580')
call_5046 = relay.TupleGetItem(func_3579_call(), 0)
call_5047 = relay.TupleGetItem(func_3580_call(), 0)
func_2047_call = mod.get_global_var('func_2047')
func_2049_call = mutated_mod.get_global_var('func_2049')
call_5051 = func_2047_call()
call_5052 = func_2047_call()
uop_5091 = relay.atanh(call_5046.astype('float64')) # shape=(15, 11, 12)
uop_5093 = relay.atanh(call_5047.astype('float64')) # shape=(15, 11, 12)
func_3594_call = mod.get_global_var('func_3594')
func_3596_call = mutated_mod.get_global_var('func_3596')
call_5096 = relay.TupleGetItem(func_3594_call(), 0)
call_5097 = relay.TupleGetItem(func_3596_call(), 0)
bop_5109 = relay.logical_and(uop_5091.astype('bool'), relay.reshape(call_5046.astype('bool'), relay.shape_of(uop_5091))) # shape=(15, 11, 12)
bop_5112 = relay.logical_and(uop_5093.astype('bool'), relay.reshape(call_5047.astype('bool'), relay.shape_of(uop_5093))) # shape=(15, 11, 12)
output = relay.Tuple([bop_5019,call_5051,call_5096,bop_5109,])
output2 = relay.Tuple([bop_5022,call_5052,call_5097,bop_5112,])
func_5119 = relay.Function([var_5018,], output)
mod['func_5119'] = func_5119
mod = relay.transform.InferType()(mod)
mutated_mod['func_5119'] = func_5119
mutated_mod = relay.transform.InferType()(mutated_mod)
var_5120 = relay.var("var_5120", dtype = "float64", shape = (15, 11, 12))#candidate|5120|(15, 11, 12)|var|float64
func_5119_call = mutated_mod.get_global_var('func_5119')
call_5121 = func_5119_call(var_5120)
output = call_5121
func_5122 = relay.Function([var_5120], output)
mutated_mod['func_5122'] = func_5122
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2000_call = mod.get_global_var('func_2000')
func_2002_call = mutated_mod.get_global_var('func_2002')
call_5136 = func_2000_call()
call_5137 = func_2000_call()
output = call_5136
output2 = call_5137
func_5146 = relay.Function([], output)
mod['func_5146'] = func_5146
mod = relay.transform.InferType()(mod)
mutated_mod['func_5146'] = func_5146
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5146_call = mutated_mod.get_global_var('func_5146')
call_5147 = func_5146_call()
output = call_5147
func_5148 = relay.Function([], output)
mutated_mod['func_5148'] = func_5148
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4424_call = mod.get_global_var('func_4424')
func_4426_call = mutated_mod.get_global_var('func_4426')
call_5155 = relay.TupleGetItem(func_4424_call(), 1)
call_5156 = relay.TupleGetItem(func_4426_call(), 1)
uop_5170 = relay.log(call_5155.astype('float64')) # shape=(15, 11, 12)
uop_5172 = relay.log(call_5156.astype('float64')) # shape=(15, 11, 12)
func_3548_call = mod.get_global_var('func_3548')
func_3549_call = mutated_mod.get_global_var('func_3549')
call_5174 = func_3548_call()
call_5175 = func_3548_call()
func_4424_call = mod.get_global_var('func_4424')
func_4426_call = mutated_mod.get_global_var('func_4426')
call_5177 = relay.TupleGetItem(func_4424_call(), 0)
call_5178 = relay.TupleGetItem(func_4426_call(), 0)
output = relay.Tuple([uop_5170,call_5174,call_5177,])
output2 = relay.Tuple([uop_5172,call_5175,call_5178,])
func_5195 = relay.Function([], output)
mod['func_5195'] = func_5195
mod = relay.transform.InferType()(mod)
mutated_mod['func_5195'] = func_5195
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5195_call = mutated_mod.get_global_var('func_5195')
call_5196 = func_5195_call()
output = call_5196
func_5197 = relay.Function([], output)
mutated_mod['func_5197'] = func_5197
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3352_call = mod.get_global_var('func_3352')
func_3354_call = mutated_mod.get_global_var('func_3354')
call_5203 = relay.TupleGetItem(func_3352_call(), 2)
call_5204 = relay.TupleGetItem(func_3354_call(), 2)
func_3525_call = mod.get_global_var('func_3525')
func_3527_call = mutated_mod.get_global_var('func_3527')
call_5209 = func_3525_call()
call_5210 = func_3525_call()
output = relay.Tuple([call_5203,call_5209,])
output2 = relay.Tuple([call_5204,call_5210,])
func_5215 = relay.Function([], output)
mod['func_5215'] = func_5215
mod = relay.transform.InferType()(mod)
output = func_5215()
func_5216 = relay.Function([], output)
mutated_mod['func_5216'] = func_5216
mutated_mod = relay.transform.InferType()(mutated_mod)
const_5250 = relay.const([[[-5,8,3,10,-4,-6,8,-9,-4,-3],[1,3,2,-6,8,-1,-2,-1,-10,2]],[[5,4,1,-10,-4,7,-4,7,-2,-4],[-10,5,8,6,6,2,8,-5,-1,6]],[[-7,-3,7,8,4,2,-7,-3,-3,-2],[8,10,-2,-9,-9,8,-9,-8,2,8]],[[6,-7,6,-9,-10,-8,5,-8,-3,9],[1,-10,10,-9,-2,6,4,4,-7,9]],[[-5,10,6,-6,3,1,-5,-6,-8,7],[1,-1,-1,7,7,-7,-4,2,-3,9]],[[6,-1,2,9,-2,2,-2,-10,-8,-2],[2,9,6,-6,-2,8,4,2,-7,-5]],[[-7,-4,-10,5,9,4,9,-9,-7,-6],[7,-8,5,6,10,3,-10,8,9,-9]],[[1,2,-9,4,6,-4,6,-6,1,-3],[5,10,-2,7,-2,-2,2,-2,6,6]],[[8,7,-3,6,-4,6,-4,-7,7,-8],[10,3,-5,-2,4,5,9,7,4,7]],[[2,-1,4,-3,-2,1,2,-4,2,1],[6,-8,-9,-9,6,-3,3,-5,2,7]],[[8,5,-5,-8,-5,-1,-7,3,1,9],[10,-8,-5,-10,-10,10,7,9,-2,-7]]], dtype = "uint32")#candidate|5250|(11, 2, 10)|const|uint32
const_5251 = relay.const([[[9,-3,-10,-10,-8,-3,5,-4,-4,7],[1,9,-5,-9,-8,-1,1,-5,-4,5]],[[-4,-2,-2,8,-9,9,-3,6,-9,-3],[1,5,7,6,4,5,8,9,-4,-9]],[[3,2,4,-4,-4,1,10,-1,7,10],[7,-3,3,-6,-8,7,-2,-7,-9,-1]],[[-9,-2,2,6,9,5,3,2,8,2],[-4,9,-10,-2,7,-5,8,5,-1,1]],[[9,5,-2,10,6,9,-1,-3,3,9],[1,-8,1,10,6,-3,7,-1,-6,10]],[[10,-9,-8,-9,2,-2,-4,-3,-8,9],[4,1,10,10,-10,8,-2,1,3,-10]],[[10,7,6,10,-3,-8,-3,-8,-10,10],[3,-1,7,2,2,5,5,5,-10,-3]],[[-6,-9,9,-3,-10,-10,3,5,-3,-1],[10,-4,-8,6,4,2,-10,8,-10,10]],[[-3,2,-2,-5,-7,-8,2,2,3,-9],[-7,6,2,7,-4,-4,7,-5,5,6]],[[8,-9,-7,2,10,4,2,3,5,-10],[8,8,-1,6,4,-10,-5,-5,-3,-2]],[[-10,-8,-8,8,4,-2,1,-8,4,-2],[6,-3,2,-3,6,-8,4,9,-9,-5]]], dtype = "uint32")#candidate|5251|(11, 2, 10)|const|uint32
bop_5252 = relay.subtract(const_5250.astype('uint32'), relay.reshape(const_5251.astype('uint32'), relay.shape_of(const_5250))) # shape=(11, 2, 10)
func_4936_call = mod.get_global_var('func_4936')
func_4939_call = mutated_mod.get_global_var('func_4939')
const_5256 = relay.const([-2.554102,7.083368,9.394154,-8.412438,-9.181168,-4.116776,-3.416438,-3.757695,7.807334,-7.829849,-4.681770,-5.966867,2.880177,3.137686,-6.709997,-2.239625,-9.831311,6.624220,1.447138,-1.254249,3.046040,3.895484,-1.091225,-0.356295,-3.082475,-1.849851,-6.778803,3.237508,-9.482942,-5.971796,-4.808641,-2.318920,-1.894723,-2.222190,2.245909,0.030372,2.596804,-5.430654,-7.855333,-6.054041,0.882328,8.331416,3.338634,-1.451531,-7.147330,-4.575648,6.175281,3.049808,-6.183190,4.725447,9.727074,-2.908746,9.023574,-7.834146,9.596475,4.700355,8.361219,-4.556764,2.672667,-0.371841,-1.070919,-3.713195,8.264636,9.718732,-3.747982,4.011457,-3.146848,-2.065212,7.074912,8.457580,8.659883,7.706401,-6.420213,4.302716,-4.073858,5.573447,-4.231635,6.904497,0.622801,6.611669,1.667828,8.044687,5.689419,-7.123649,-9.809258,1.913035,-6.944244,-2.209224,2.912163,-0.966995,-9.584186,-8.931760,8.672910,-1.265411,-1.873952,-0.325119,2.574993,9.766171,-2.581564,8.325498,-6.885384,-2.187822,0.397757,1.658456,3.907009,2.677898,2.222532,-7.219716,2.630555,0.334817,6.123173,6.543764,-7.998622,0.837838,-6.425754,9.967389,5.431909,5.184939,2.220501,9.862598,-0.861151,-2.024049,-5.365340,2.928631,6.681890,-0.125337,-2.004726,7.478781,-6.982405,2.261426,5.551159,5.853397,8.599534,-6.857936,9.108086,7.182069,-5.066526,4.072487,-6.860855,-8.012493,-4.218601,-5.996075,-4.432728,2.800996,-7.750006,-7.289291,3.470634,1.621293,-4.078421,6.871168,2.121762,-0.769728,-9.929015,2.817401,-9.581906,8.302010,-1.143600,9.834447,7.830511,2.716362,-3.739041,-0.501392,-2.471824,-8.638682,7.021888,-7.442581,-3.239807,-8.421003,8.449968,9.180154,9.633887,-1.641599,3.254151,-5.270944,-4.041391,-5.113175,1.390762,-2.559088,-3.677582,7.391583,2.010469,8.492212,-0.275963,-2.112544,7.859302,1.724539,-3.047468,-1.526554,7.339833,6.670577,-8.936720,-7.119655,-2.835371,3.740755,7.065883,-1.640023,3.185394,-2.637142,5.454113,4.540949,0.502863,5.280688,-5.719088,7.723490,-7.792979,0.903490,-8.536927,5.674215,-2.307064,-7.294640,6.433528,-8.178401,-1.903678,-1.626472,-4.620398,-2.519554,-4.977996,1.611657,1.329608,-9.611561,7.468408,-1.081631,-6.708303,-3.236168,5.372578,-7.917300,4.697285,7.707120,-3.215797,6.052471,0.024466,-4.396720,0.772234,-0.230179,-9.793145,3.740489,-5.174173,7.971712,7.146676,0.320345,-8.006355,6.461367,9.696762,0.934125,-1.128237,-9.667094,-6.954199,0.690233,-4.034677,-5.825926,-7.695035,9.573931,-1.861423,6.160344,-3.952816,-3.396183,0.884403,0.771959,-3.992100,-7.922819,6.715546,-5.881789,8.045638,-6.176598,8.924237,-1.812602,-0.927952,-0.238989,-8.446658,-3.493858,-5.845311,-7.250884,-2.291737,-3.296565,-6.883658,5.189305,0.024436,-7.545763,8.681427,7.752305,4.962216,-7.764479,5.536387,-4.993483,0.260506,-9.864658,4.519438,8.470717,-3.505446,-0.720052,-8.469448,0.179594,3.854944,-7.747000,-5.911615,1.709052,0.292861,5.380279,-0.559814,-3.023686,-5.124948,-9.383401,1.671169,5.215686,4.221930,3.957338,0.846531,-5.400104,-1.091445,8.890540,-4.741584,-6.543319,-6.302222,-9.004331,-6.078040,-8.162728,0.452571,-8.935439,-8.758331,3.416640,-1.110527,1.771463,6.648250,-6.165821,-5.866577,-1.925468,4.834825,-4.366788,-3.553792,-7.262354,-0.323122,4.448142,2.189409,-4.023742,2.323500,-2.382219,-6.732809,2.067429,9.360706,5.936639,2.408598,-9.310864,7.899360,-3.804270,4.316610,-7.230275,-0.243371,8.269228,7.131322,1.098215,2.893257,-1.936005,-1.381523,7.240614,-8.747663,7.492368,-7.920897,-8.027407,5.851368,4.255937,6.951015,-5.171394,9.440005,-0.382100,6.110890,9.673967,0.223793,6.584527,4.275739,8.958011,3.863847,2.083218,-0.432737,8.075393,4.394429,-4.953982,-2.905624,-1.257409,-9.275919,8.493184,-0.302109,6.406197,-7.954175,2.060901,2.786845,5.316439,-9.151004,4.306581,-5.403473,-7.051890,6.166546,7.802699,8.078900,-6.545600,-1.267379,9.890921,-5.881403,-4.101500,9.441570,0.669227,-3.331461,-5.796403,5.426515,2.898533,-6.239481,8.340943,-4.963480,-4.687526,-0.015889,4.156055,-2.552462,-6.934381,0.323973,6.197543,-5.936310,-6.588608,-8.666011,5.623786,-2.852492,3.115501,-0.811502,-6.015568,0.978040,-3.691863,0.776104,-0.107730,8.946561,9.832971,8.242425,4.358403,7.847657,-3.236558,-1.332578,4.613320,-5.599053,-3.583699,-8.033615,1.564897,7.837855,6.720735,-1.037292,-1.276859,-5.563612,-7.978982,-8.830428,-0.736711,9.345977,5.005345,-5.708358,-5.991115,-4.472525,-7.451042,-7.116610,-2.430697,5.189908,-9.670601,-1.360998,4.762352,-2.914907,-0.610860,-5.947678,-0.263487,-1.862380,4.346698,1.434332,2.944467,-6.372109,-7.600866,-7.560280,-4.386927,-0.772056,8.081399,8.121952,-3.407228,-2.158755,4.232279,7.500272,4.853105,8.076752,-3.814643], dtype = "float64")#candidate|5256|(480,)|const|float64
call_5255 = relay.TupleGetItem(func_4936_call(relay.reshape(const_5256.astype('float64'), [8, 60])), 0)
call_5257 = relay.TupleGetItem(func_4939_call(relay.reshape(const_5256.astype('float64'), [8, 60])), 0)
func_3461_call = mod.get_global_var('func_3461')
func_3463_call = mutated_mod.get_global_var('func_3463')
const_5270 = relay.const([-6.342886,-4.435734,-8.396485,-1.187581,9.802178,-0.030137,8.432533,7.650887,-8.148285,-1.507895,-4.076049,6.589425,4.288624,3.340469,-0.213775,9.646451,0.761796,-2.839205,6.335695,-2.907598,-0.112507,-6.721067,3.166487,4.157598,7.634754,-8.079999,7.762569,9.662416,7.806509,5.561711,4.775518,-1.671119,9.316041,-3.863130,-5.874957,5.635439,0.124863,-6.136597,7.071687,-3.631353,7.953853,4.467035,1.639426,-9.326704,6.546806,-8.654139,-8.296786,-9.906692,4.357470,-7.745835,3.511914,4.123018,-2.023994,-0.831171,0.250650,-6.390820,6.880555,2.866237,-1.384058,9.521269,-5.801798,-9.600611,-5.730897,-2.988930,0.854324,5.531334,-5.485039,-1.771021,-4.076991,0.356738,0.096861,5.854190,5.115788,5.291004,-8.891975,0.011775,9.308282,5.658128,-8.054601,4.851113,-2.423945,1.156082,5.189781,2.753285,-2.330198,5.286600,2.862241,-9.090737,-0.244039,-8.418154,-2.732029,8.933967,-3.820596,4.542473,-8.199555,-9.075900,-9.724942,1.231325,6.945302,8.078809,9.997662,-9.805205,6.768152,8.966687,-8.532067,-1.516626,-6.189199,-8.721561,-9.100808,2.824241,7.202224,-9.363948,6.455346,7.595505,-1.090348,-0.506231,-0.022216,-5.176551,4.449226,8.221395,-9.107800,-4.888114,1.781055,8.737042,1.290172,-0.646596,-6.294367,-7.615976,-3.988760,9.566886,-1.145853,7.564886,-9.393451,0.926906,8.081213,5.439569,-0.723789,-7.075720,1.726742,-5.041072,6.607209,8.996183,6.360472,1.397516,8.384271,-4.139424,3.364828,-6.384267,-5.418517,0.690820,-9.543960,9.448463,9.782490,-4.937493,3.809733,0.309460,8.086222,-1.230219,-4.198282,5.370486,-8.690357,9.365230,6.996526,7.299521,8.121816,1.047913,-3.018471,5.461619,7.720575,-4.033361,-4.701290,4.870024,-1.165411,-5.532611,5.036093,-4.160073,7.042214,7.432246,-6.250798,-2.306143,-4.364128,5.157705,-8.748701,-2.801263,8.420730,-8.376270,-4.393937,6.895604,-5.755245,9.331069,1.338226,7.519142,2.489787,5.697071,-5.685053,-3.578038,-7.527254,4.150338,-6.824089,-1.932461,-3.733705,9.898403,-2.178370,8.815002,-0.532588,-3.180739,-6.087545,-3.743692,2.078091,1.115083,-8.474823,-2.099681,-6.264434,5.367909,0.896831,-6.159666,1.081619,-9.307822,-1.049019,-4.442072,-3.900702,3.817748,-0.248852,-1.023064,4.301492,8.000381,2.411944,-2.875534,6.159662,-2.764382,4.274857,-5.972635,-9.665492,-0.200284,-2.054536,3.443213,-6.560523,-8.295956,3.682970,-5.369306,-3.592305,-7.550947,5.460100,8.854629,-5.672949,0.550765,-9.773595,-8.611294,-1.037937,-2.485652,2.884606,6.285655,-6.065874,8.518411,-0.433157,-4.476769,9.526613,1.943703,-3.453436,-8.286737,-3.785909,-6.723384,3.224903,-4.621690,-6.635562,5.480862,-5.502350,7.963331,-2.408715,-4.166092,-5.031240,3.115819,2.829804,-5.802351,-1.054638,5.394095,-6.843656,7.166354,-4.327603,4.579190,-9.771152,5.308645,2.979169,0.761543,7.365651,-9.364747,2.681138,8.624795,-6.517527,-3.126127,-6.831408,-0.957718,5.506036,8.196700,8.457672,-4.421085,9.529822,-6.039224,-3.835814,-9.058981,-6.124552,4.875516,-1.282527,-9.255405,-1.135200,7.017271,-3.211802,5.941801,-1.683779,-5.776512,5.899055,0.036426,-4.798943,0.285567,-2.942228,-5.150714,8.831610,-1.538792,-7.818753,-1.202137,1.164566,-9.502723,3.937561,9.388423,-6.831983,4.556780,9.233824,-6.436174,3.051227,-1.023197,2.770222,-7.257233,6.373929,-6.936265,3.145577,-6.139414,2.417102,2.014697,5.974177,-8.719271,-1.710417,5.004347,-4.366294,5.067046,-9.221702,1.797385,-5.323892,-6.504878,-8.075401,6.727343,8.225675,-3.200744,-6.080445,-4.631903,4.094118,2.042267,-5.182718,1.152766,-0.142131,-0.995781,-6.308698,-8.292392,5.717492,-1.972260,-4.814456,-8.005308,-3.575460,-4.382658,-4.212187,-1.187598,2.003998,4.814836,-9.713577,-7.337360,5.171409,9.657206,6.543455,-6.281783,-0.061864,-6.160729,-3.834313,5.804099,-7.466490,-4.461433,-9.983379,-8.438273,-4.755087,5.028168,-6.504707,-6.848069,3.091905,9.800734,3.068403,9.077419,7.244605,-7.526702,-9.190675,-3.537187,0.744125,2.549713,9.786447,7.210093,3.466104,-2.230295,4.860768,2.139206,4.572153,6.580298,-3.050291,-8.447321,-4.403429,-9.798092,-6.137810,2.362110,5.570349,2.970289,-9.931887,-5.856927,-6.409319,0.279940,8.396041,-2.485980,-3.816056,-4.257574,-7.870865,-2.680164,1.442229,-1.607274,6.942495,-2.064131,-7.284008,0.915336,-0.257663,4.243352,-2.429715,-9.166859,5.461408,-5.072900,-4.393776,2.436703,-5.822597,-6.622373,-6.458577,9.209924,-3.356004,-9.801843,-6.045113,-3.556289,5.573611,3.335970,-4.759396,-4.633182,-6.294347,1.483307,7.923834,6.562268,-4.500906,3.888772,-3.018797,-7.113597,-1.795248,-8.035941,-1.991848,-4.844634,-1.290444,-4.980056,4.379726,-4.421735,6.684293,1.699357,-4.739624,-9.996072,-3.351897,4.010472,0.033900,4.613691,-9.661127,-6.354926,-4.353392,8.212685,-7.680227,-3.342766,-6.573002,6.143314,-5.313283,-0.723747,6.085614,-4.388403,-7.608899,6.999094,3.815621,-9.267348,-4.943066,1.990972,6.620144,3.301769,-0.387750,5.738705,-3.914792,-6.455753,4.262819,-7.586327,-1.104228,-5.375094,-3.791181,-4.763552,2.869957,-9.317369,1.337255,-5.905457,-2.070156,-3.288160,3.594819,4.259220,-8.006815,2.784974,-0.963541,-7.890311,-6.140417,6.570075,-6.621440,-5.878828,-2.400686,9.605644,-9.277973,-0.403308,6.262181,1.056348,3.470156,0.525472,7.314689,4.954761,-4.467678,-7.536906,8.161055,4.304602,7.571244,9.338029,-6.096841,3.697237,-1.135666,5.182871,-7.746546,0.284150,5.475797,2.320706,7.668287,-7.142519,-5.458036,-7.973523,0.539571,-0.011004,0.648733,-2.214612,-1.736782,6.873763,-4.930720,0.174778,5.775375,-9.100437,6.725307,2.511135,-0.368931,-8.982146,-5.564583,-6.859983,-1.352093,-3.746768,-6.207545,-7.549343,-0.798816,-4.742733,-0.195658,8.817163,-0.373094,9.469572,1.031682,-4.753114,-4.118115,0.198533,9.218182,-3.429837,-7.909100,9.335348,-5.477448,8.247739,4.285561,9.371706,3.617438,-6.082743,-9.784896,2.649181,-7.514102,3.292885,-0.490914,-7.155711,0.903627,-8.096034,0.329903,-2.853566,1.395716,0.927526,4.446219,-2.820122,1.697829,-9.763815,-3.790754,-9.210894,2.057877,-2.535489,-7.898771,9.224496,9.252408,2.482226,-7.154899,-7.195093,4.884267,-8.172113,-1.427397,-4.803086,2.205801,8.637146,-3.943245,0.324553,-9.650439,-0.238433,-2.519967,-3.259086,0.008007,-5.118461,2.626894,6.370435,-5.650243,-9.345478,-7.609694,9.640813,6.704474,-2.608236,-2.479098,-6.133128,2.605316,6.236512,-5.161983,5.201562,9.667419,0.956793,2.887045,4.482248,9.229827,-1.734852,-5.315417,3.903767,7.961067,-4.328763,7.175492,-4.392743,5.686615,-3.457428,5.033892,3.346745,-5.066361,9.432872,3.983563,3.055039,-0.787677,-5.536219,0.929198,0.734129,6.687396,-2.947059,-1.077300,5.420604,-5.740219,8.852748,-1.465269,-5.063611,-2.808645,-2.046751,9.357694,-6.318788,7.058713,-1.563705,-5.376909,0.149548,5.725072,2.138110,-5.272117,1.170052,-4.643526,-5.761894,1.848123,7.600618,9.529927,4.222529,-9.848878,-8.635268,9.458872,-5.901600,-4.410636,6.184230,-1.091844,3.460558,-9.618458,9.707993,-0.386782,7.762350,3.336754,4.578970,-7.161389,9.852334,-2.769213,-6.882878,-9.640582,4.123991,2.808004,1.443551,7.262700,-4.012260,0.215833,9.331820,-3.036190,-4.564094,4.186721,-6.056087,-1.626460,-5.607524,0.990604,-5.957254,-8.686057,7.743731,3.819953,9.793677,5.761912,-5.304305,6.918854,-2.010203,-0.457611,3.335892,-7.794605,6.480492,7.068870,8.960205,-5.046795,8.055557,-8.235452,-2.339830,9.080184,-5.556214,-1.325740,2.913823,-1.318209,2.784310,-7.881112,1.033699,-3.545870,-0.102399,-7.941628,-5.838168,7.115774,6.299945,-6.719061,8.089021,4.026506,5.474319,-4.201214,-3.983664,-1.418090,3.973343,-3.694372,-5.955032,7.201646,3.053466,-6.443700,8.231389,9.894098,3.938641,-4.378704,4.958848,5.243858,2.648859,2.924798,-4.640593,5.596702,7.025444,-1.764632,-7.861540,-3.205708,-8.352233,-4.172957,-0.254112,-0.753508,3.807530,8.197231,6.934576,0.522074,-8.026614,-6.641083,7.441359,8.033604,5.722205,-7.886958,2.898569,9.627995,3.220099,1.572822,9.278807,-8.678300,7.209243,5.020898,-6.133150,5.054730,-3.394932,1.314696,-6.497797,-0.920300,9.477478,3.493269,5.394806,-0.721409,-6.023212,-3.158015,4.005344,2.028870,-9.488369,1.958492,8.801584,-7.151163,-4.524060,4.231788,-1.973449,8.320638,-9.587123,-1.577549,5.710742,9.467019,0.951559,-9.896775,-1.696897,3.553522,-8.441161,7.728743,6.190855,1.765591,0.735292,-5.822291,-3.042190,6.378815,3.147787,-6.838468,-9.958763,-5.555169,-3.913884,8.275780,-4.910753,5.315799,2.920278,7.315799,-1.642850,9.661302,0.340220,3.998151,4.424273,0.728873,4.148045,3.199529,6.739672,4.826634,-0.127429,-9.976139,3.630612,-2.599470,-0.502992,5.847766,-7.303392,-0.371831,0.568649,-4.373602,4.297174,3.130640,1.768351,-2.064851,-8.395716,-6.664849,-7.893983,-5.545772,1.822066,6.757232,-9.318449,-4.121871,9.925271,-5.998197,1.709188,3.759695,-6.952829,0.632271,0.318430,-7.322216,0.748691,2.312343,4.858165,7.874741,-9.563709,-9.366503,3.772440,1.554830,-4.720934,6.325836,-6.947364,-9.542054,5.359183,4.321949,0.501176,2.022277,-5.322662,1.065024,-7.439860,-8.333677,4.140596,5.296519,-2.856490,2.809995,-6.555948,-4.042814,4.354316,-2.190297,-6.517191,4.344728,7.575263,-3.836563,0.146203,-8.524508,-5.735392,-8.135866,8.731418,-3.426369,5.017966,-5.661131,6.562387,-8.618477,1.240381,8.982884,-9.865771,-1.337092,8.493919,-7.357769,-9.528883,-9.341509,0.751336,-6.645823,-1.718912,-3.186582,-1.410370,-6.332570,6.181716,-7.975094,6.740668,-3.700596,-2.536893,5.734592,5.886820,4.043751,-4.123078,-7.151077,-6.141290,3.587381,-1.943091,-6.073815,-4.960727,-9.144702,-8.136197,1.218267,-0.399693,0.080866,-7.940395,6.957452,-6.007572,2.838653,-8.369942,4.946414,-5.524811,-0.228645,-9.646415,7.784015,8.725002,4.562155,-0.121617,6.766953,-1.763593,4.868047,5.015413,5.508668,2.979284,2.574495,-4.033927,8.464853,5.665279,6.702109,-7.684367,-6.409974,-3.475942,1.712372,-8.427773,-8.786968,-9.385920,6.778578,-3.491277,4.423766,6.591872,6.740914,5.286426,-1.900682,-4.046105,6.200520,-7.350879,-2.201605,5.320034,4.545592,-1.437310,-2.072114,-4.490436,6.990989,-0.389516,-3.120452,7.757993,-3.009283,-6.920257,7.710139,-0.709512,-1.697561,-7.530923,-2.962337,-5.635590,-5.846011,3.600568,6.050016,-4.409890,-5.230743,-8.432989,9.234457,-5.232533,-4.922609,-4.342166,-1.725152,-7.097693,-4.102141,4.585110,-1.046701,-0.208323,6.555996,-2.548309,0.082080,9.726968,5.074363,0.220179,9.386953,-7.575859,-7.434530,9.128730,-2.918478,4.994860,-5.386104,9.614486,1.081748,2.655615,5.418597,6.636195,0.683231,-2.914963,-2.968494,0.050080,1.814851,-6.364500,-4.402556,-9.292598,3.916297,0.326805,2.110857,2.967580,1.256992,0.261942,-0.716026,5.303893,8.801140,-2.870792,5.464739,0.981106,-6.353863,3.977279,4.747989,9.486317,3.385479,-2.731414,3.214636,6.662445,7.851311,6.447739,-5.422852,5.619503,-2.899182,6.501052,3.988202,-7.526436,-8.736391,-8.664604,-0.747436,4.476272,3.701616,-5.378122,7.809104,9.128939,-1.930772,-9.973923,8.287384,-6.879690,5.391992,-0.084127,-7.560848,-2.662250,-1.282393,-8.427370,-1.483836,-6.235776,0.388845,-8.678762,0.709923,4.847553,-0.816560,-1.437511,1.725177,4.587786,-6.255643,9.409461,4.536670,-2.372716,6.059768,-5.896855,-6.844982,9.204745,7.057173,-4.755126,0.252201,-1.913642,0.284463,3.188195,3.197372,8.400006,-7.101708,-2.220584,1.961823,3.646272,6.360708,-6.756247,5.779057,0.278207,-3.000498,2.278881,-5.883346,1.400174,-9.866070,-3.822352,-2.840054,1.515174,0.130428,-4.152249,-4.673524,2.329836,6.610619,3.622634,9.797384,7.751172,-9.496289,8.466978,-2.278433,-4.173078,7.222614,-5.452028,1.806749,2.273345,9.631391,2.973828,6.250950,0.395801,-7.694494,7.411388,2.967314,8.446037,4.674765,-4.869578,-7.482601,-0.202619,-2.984847,0.505796,0.275089,-1.270846,-3.745569,-5.652604,-9.769178,-3.906773,1.733818,-0.737004,-4.971528,-6.599493,-0.187545,7.319203,-4.452656,-2.119332,-2.805981,-5.397565,-6.925443,-8.562989,-7.320117,1.531293,-8.299114,1.969757,4.911060,-1.866348,-4.592701,-3.338467,-4.142055,5.491437,4.742875,1.618542,9.509570,6.832955,-0.228042,-8.951068,2.811441,8.273484,4.241656,0.857022,-9.827368,-2.798447,-5.279841,3.506324,-3.800044,0.641005,-7.737600,5.909007,-5.962353,-3.198082,-7.314141,9.813570,-4.497805,9.527977,-4.527176,-9.778527,-4.035463,0.324720,2.305380,1.683856,0.026150,-6.791707,1.200655,4.125995,-2.064178,-8.879812,-3.094881,-1.663585,-2.522555,-1.208098,-5.854697,8.471550,4.150501,-9.746477,2.878204,-1.584939,-7.651198,7.782521,-9.067823,-1.791498,-4.261464,5.428784,-0.806420,9.847939,6.926729,9.790803,-3.352710,-4.533084,0.240275,2.507851,4.087030,8.573425,-5.254544,4.608668,7.733773,0.105076,2.173011,-5.030310,7.605975,-0.413339,4.627811,-9.901300,9.220047,6.077377,5.956149,7.510054,-0.463446,6.321388,8.535310,4.949315,-3.416555,-8.595038,4.030716,4.529917,-0.051918,5.087882,-5.589159,-6.494593,1.362661,-2.134275,-5.106651,9.209525,8.539159,4.823553,5.688254,6.275749,8.617978,2.589044,2.693072,4.154020,6.545619,2.024526,7.268021,9.646676,-6.194711,6.515543,7.402211,5.090578,9.084140,-1.138378,-3.931607,-8.748449,6.683617,-7.612997,3.984716,9.556853,7.943533,-8.760081,-3.587407,6.106492,5.466919,6.868471,4.918461,4.796797,0.499570,2.633939,-5.707319,8.273024,-0.781395,-1.670197,-3.616284,-4.192066,-8.236272,-8.768582,-0.385010,0.008748,-5.755981,-8.355387,-2.805693,7.050135,6.546959,6.105689,-0.286062,-7.015811,-5.524897,-4.029023,-4.168552,-1.189940,0.280591,8.830507,-0.940986,-0.639195,1.214728,-0.629492,-6.439228,2.069714,2.170303,8.998278,4.911920,-1.025804,-9.103780,-4.848734,2.020991,-8.821666,2.158599,-7.993671,-4.474135,4.006019,3.715203,9.199406,7.621317,-5.430257,6.715771,-6.365699,0.760854,7.173103,-3.566122,-0.238206,-2.229147,-8.900268,-3.149539,-5.779299,8.765504,-4.536870,4.522210,0.928957,-4.345301,4.430126,1.123880,-1.854505,-5.021485,9.393124,-2.802244,-9.739470,-0.223671,-1.998780,7.512547,8.543057,-7.934722,-0.236800,-3.040109,-5.775304,8.209295,-5.052741,-9.928553,3.597707,-8.060251,0.646675,-2.670362,-6.095037,-7.665089,7.242153,1.451938,9.207225,-5.987287,2.861224,2.394833,8.296347,-5.894244,6.696161,-3.076610,4.495942,5.212443,9.160544,8.384322,-7.529228,7.197100,2.333254,6.850747,-4.512426,-9.809649,-4.895982,-8.243311,-6.507433,9.838287,3.069617,-0.845633,1.843997,4.711262,2.537670,-8.812511,-9.927386,5.465502,-7.577987,-4.269777,-9.223861,-6.954811,-9.400086,-5.707022,2.789786,5.721928,-3.758774,-3.846203,3.087724,-5.184744,-8.403759,0.189803,-5.572306,-3.209257,3.048481,-1.770133,-4.545622,-7.901638,5.306178,1.998939,-3.278469,5.401607,9.417679,-2.745680,1.123760,8.186919,2.004728,-6.404675,-4.421829,-6.487115,-7.908679,4.177796,-8.429765,3.494264,3.603990,-4.113570,6.510068,-2.558889,5.889440,-2.186529,7.781935,-8.320859,-0.471754,7.927591,-3.074194,-7.008772,-6.504350,8.831075,9.422260,-5.783368,0.241845,-2.501540,-7.595425,2.793940,-2.500149,-9.153429,-0.084469,-6.670646,5.053934,4.359057,-3.115166,-7.009022,4.466932,3.011858,9.855973,6.541037,-9.591822,6.737336,-4.821118,7.844722,-9.968360,0.492704,-9.558298,6.508560,7.581130,9.933527,-1.130115,-8.251810,0.334530,-0.734161,1.146102,-1.014471,-9.844913,-0.363542,-3.577223,0.658962,5.004942,1.255054,-3.080351,7.476132,7.728916,0.756084,9.500003,-2.118132,4.032258,8.960700,-7.259947,0.296453,2.713221,-2.549013,0.063419,9.226636,-5.239569,-3.869109,2.338966,-1.047859,1.401581,4.572107,9.725114,5.960831,-1.686293,1.787509,-0.469329,0.244392,-2.840302,-3.227427,4.481093,-4.630977,-4.661456,1.512983,-3.307714,6.371025,8.304179,-6.809443,-9.888939,-5.870028,-3.324462,9.322422,-5.450558,0.308543,-2.221918,-2.928857,5.475162,2.887895,8.679789,5.660597,-8.522802,7.284337,6.096995,-5.153340,-9.065926,7.152375,-0.315136,0.643737,5.395568,0.127023,-3.545772,-2.705982,-6.926187,-9.132937,-3.352548,-2.623192,-2.286057,-2.720685,7.371693,6.873362,3.015655,6.713561,5.611050,-7.891104,1.956429,0.797144,7.655458,5.401869,3.090279,-3.173471,4.511865,1.849455,-8.704354,-0.141940,-2.176090,8.495915,-2.815331,-5.888530,-6.971471,-9.524548,-2.416395,3.882718,8.987397,-7.054483,-4.924824,-6.467856,1.243044,7.560006,-3.050855,2.119872,3.640278,-9.570030,9.960457,-9.208377,-7.594436,8.052371,-0.821305,-6.644191,0.235900,-2.389464,6.939358,-8.149087,-0.279671,3.918437,3.961716,-1.335805,6.968390,-2.846701,6.717065,-5.509087,7.118726,-1.105703,1.197530,-4.362686,6.688572,-9.477979,6.851585,1.916525,5.367752,-3.354166,-7.319983,2.969720,-5.258671,-8.806303,-0.331164,9.983232,5.666381,2.446542,-5.207881,4.511827,3.806515,6.178696,-9.531846,-0.406383,3.006799,-4.876530,7.846067,1.162775,2.665763,0.488519,4.029032,-2.069240,2.495509,9.263384,7.827475,7.937217,-9.538271,4.943705,-1.127494,-0.579559,3.541974,2.205583,7.346659,-4.576567,-3.298811,-2.340736,-6.210954,-9.589891,4.480916,1.415091,9.844598,4.666374,3.632965,-3.461905,-5.863708,4.434541,-5.299637,0.845454,-5.222371,-9.643973,3.674797,-4.532554,0.441453,7.605365,-0.261577,8.330016,-2.741511,0.236171,-6.411517,4.775418,7.487802,-5.801641,0.045609,0.053756,4.210204,-2.477659,-8.625551,-5.113521,-8.111138,-3.157317,-2.272836,-3.175746,-3.139125,1.832968,3.906674,-6.823383,7.302451,-4.435708,-8.588140,-3.576317,-9.672928,-1.828583,3.886274,-9.900114,6.723935,-4.438486,0.984116,-2.573856,3.129792,-0.116853,-7.185286,8.310916,0.013603,-0.104973,0.728063,3.004255,8.734472,-5.795833,-1.409509,-0.790253,-5.083356,3.770237,2.066869,4.761492,0.886770,-6.784965,-1.108557,-1.636994,3.119952,0.670842,4.184976,-3.707307,4.517436,-6.647506,-1.833428,6.982390,3.623811,-9.168573,-0.868411,1.872818,9.216368,6.258993,3.886039,7.057636,-7.330530,8.531262,7.213231,-4.492808,7.890509,-0.311032,-9.760279,-4.103486,-9.264198,-9.175582,-4.862792,1.878457,6.803906,-6.965698,-3.692946,-8.154411,-6.654820,-4.475948,0.364448,-8.458963,2.518427,-0.447573,-0.024858,-4.984769,0.914135,8.778249,-7.076624,6.901564,7.172356,9.231023,0.447865,-6.858356,0.736680,0.592488,-3.933195,5.551757,-0.809826,0.210408,-9.201755,-3.550307,-7.627525,-5.179608,-3.724175,1.923749,1.336017,3.075772,-9.142996,-5.167028,-0.472476,-1.285954,-5.524158,5.715899,-8.009099,9.843362,-7.237537,-0.099469,-8.536872,8.871738,8.707397,-4.944004,6.931361,1.047862,-5.843401,-0.289470,-7.450107,0.728211,-2.798565,8.761172,9.159719,-6.122319,-8.646843,-1.534719,7.498041,7.050998,-1.829636,8.910033,9.394757,9.071606,-2.920067,7.243517,9.453001,8.299017,9.218636,-6.709258,-1.057597,-7.465523,1.410376,5.592756,-2.109832,1.114304,-0.640541,5.916342,-9.784506,3.637336,-4.811295,9.797507,1.774066,3.454810,2.018415,8.305468,-1.599551,4.552368,0.941006,-4.882104,2.814255,-8.771093,-1.881202,-1.504807,8.882335,-5.144957,-9.973309,4.863918,-6.195198,-4.442255,-3.078159,3.839892,0.170778,-3.685634,5.539654,-5.866057,3.680305,8.928759,-2.778536,-9.519773,7.570561,9.040074,-4.993774,-3.830616,-0.531149,-6.631206,-0.501003,0.593537,-5.646569,-4.970460,3.591437,7.932711,-9.947285,-4.502797,-3.762641,-0.473623,5.305549,8.513986,-8.216094,1.010925,-7.022361,0.213151,8.371540,-2.067542,-4.101361,-9.316270,9.685972,-6.821565,-7.924673,2.315955,6.786570,-0.464834,7.539180,-6.107997,6.862844,-8.130833,-0.043328,7.323206,7.922246,6.863338,-4.222753,7.159115,5.107866,7.644779,-4.546585,-6.865651,-5.685656,8.356352,-5.508685,2.886176,0.915989], dtype = "float64")#candidate|5270|(1980,)|const|float64
call_5269 = relay.TupleGetItem(func_3461_call(relay.reshape(const_5270.astype('float64'), [15, 11, 12])), 6)
call_5271 = relay.TupleGetItem(func_3463_call(relay.reshape(const_5270.astype('float64'), [15, 11, 12])), 6)
func_2439_call = mod.get_global_var('func_2439')
func_2442_call = mutated_mod.get_global_var('func_2442')
var_5289 = relay.var("var_5289", dtype = "float64", shape = (42,))#candidate|5289|(42,)|var|float64
call_5288 = relay.TupleGetItem(func_2439_call(relay.reshape(var_5289.astype('float64'), [42,])), 2)
call_5290 = relay.TupleGetItem(func_2442_call(relay.reshape(var_5289.astype('float64'), [42,])), 2)
output = relay.Tuple([bop_5252,call_5255,const_5256,call_5269,const_5270,call_5288,var_5289,])
output2 = relay.Tuple([bop_5252,call_5257,const_5256,call_5271,const_5270,call_5290,var_5289,])
func_5293 = relay.Function([var_5289,], output)
mod['func_5293'] = func_5293
mod = relay.transform.InferType()(mod)
mutated_mod['func_5293'] = func_5293
mutated_mod = relay.transform.InferType()(mutated_mod)
var_5294 = relay.var("var_5294", dtype = "float64", shape = (42,))#candidate|5294|(42,)|var|float64
func_5293_call = mutated_mod.get_global_var('func_5293')
call_5295 = func_5293_call(var_5294)
output = call_5295
func_5296 = relay.Function([var_5294], output)
mutated_mod['func_5296'] = func_5296
mutated_mod = relay.transform.InferType()(mutated_mod)
var_5376 = relay.var("var_5376", dtype = "uint16", shape = (14, 8, 11))#candidate|5376|(14, 8, 11)|var|uint16
var_5377 = relay.var("var_5377", dtype = "uint16", shape = (14, 8, 11))#candidate|5377|(14, 8, 11)|var|uint16
bop_5378 = relay.add(var_5376.astype('uint16'), relay.reshape(var_5377.astype('uint16'), relay.shape_of(var_5376))) # shape=(14, 8, 11)
bop_5387 = relay.multiply(var_5376.astype('int16'), relay.reshape(bop_5378.astype('int16'), relay.shape_of(var_5376))) # shape=(14, 8, 11)
func_2047_call = mod.get_global_var('func_2047')
func_2049_call = mutated_mod.get_global_var('func_2049')
call_5396 = func_2047_call()
call_5397 = func_2047_call()
bop_5400 = relay.greater(var_5376.astype('bool'), relay.reshape(bop_5378.astype('bool'), relay.shape_of(var_5376))) # shape=(14, 8, 11)
func_3938_call = mod.get_global_var('func_3938')
func_3940_call = mutated_mod.get_global_var('func_3940')
call_5403 = relay.TupleGetItem(func_3938_call(), 2)
call_5404 = relay.TupleGetItem(func_3940_call(), 2)
const_5409 = relay.const([[-8.688013,-3.968590,-4.748975,9.669956,-8.007662,9.642798,0.462379,1.200575,2.718290,6.527186,7.368729,-7.793056,4.663326,-2.777610,-9.100482,-6.841638,5.529717,5.211658,-9.402643,4.701018,-8.062657,1.943095,-6.594132,3.955870,1.255157,-7.332862,8.072123,8.321768,-0.533554,0.715931,-8.306750,9.388201,0.329518,6.302343,7.279147,-3.544922,8.961747,-0.920414,-7.785533,9.731750,-6.755232,-3.680921,-3.927273,-7.254040,1.593170,7.194577,2.312522,6.973260,1.619084,-5.219731,-3.350575,8.758311,9.116673,6.357305,6.663910,0.275379,-4.388281,-8.210756,4.662571,1.107474],[-5.701377,-8.053197,-5.229577,-7.333860,-2.721501,-5.940808,6.039620,-9.401957,0.114117,-5.066948,-3.754934,1.130889,8.249642,-4.036938,-5.635610,9.641840,-8.042686,8.595875,-8.814081,0.160383,-8.247597,1.212377,9.089498,-5.580995,8.589912,5.881961,-4.432303,-6.804553,-3.469034,7.657897,-8.889821,-6.594941,-7.909153,0.487848,1.661082,-9.380419,9.063286,-8.733519,5.960351,4.588311,6.711437,0.291573,3.673789,-7.934932,-3.162188,3.661773,-2.479504,6.206661,5.100408,5.525245,2.214093,-3.401367,3.116904,2.227178,-1.074676,2.646336,-0.899035,2.926486,-2.505694,4.518444],[6.677231,-0.485786,-9.375123,1.113450,-4.599350,8.968694,-9.717369,-9.475264,-8.035554,-6.550431,6.696735,-4.860380,-5.803746,4.307196,7.253922,0.944879,7.002453,2.865968,-6.348759,6.581644,4.977271,-9.611380,5.495280,-3.856403,5.462295,-4.383175,-5.956754,-6.451008,-0.361643,-6.271404,-3.511840,8.589137,1.457744,-0.344054,5.056948,-7.176560,-1.297622,-7.828186,-0.199540,9.789468,2.200228,-9.058699,-2.113235,6.908304,-7.807671,3.868704,1.898135,1.828077,1.079184,-4.476916,2.047186,5.526933,-7.028131,4.841781,-0.291453,-1.968887,-9.162330,-4.689793,2.433505,-9.890291],[6.022046,-9.985733,-6.053528,4.278416,3.726552,-3.982281,-2.885313,-2.887555,5.182329,5.005398,-8.912491,5.854696,-4.496643,-9.525110,6.495477,-2.252202,-3.145953,-1.883226,-9.809147,-9.390202,9.421679,-9.533498,-3.211295,-9.368090,1.989827,-0.307974,2.933432,-6.890492,4.810317,0.757834,6.665928,1.815885,1.654142,-4.519693,1.183750,1.457887,1.660485,-9.765214,5.401704,6.022250,5.113537,-2.048932,-5.021674,-3.927546,1.748866,-5.290244,4.446563,-0.745700,3.875491,-0.174472,1.918877,-7.908798,-1.837965,7.988387,9.072526,-8.386317,-7.723739,-8.278673,7.664807,-7.421709],[-6.605020,-3.824626,-5.513662,-1.817067,6.886108,-9.516607,8.061691,-4.760552,5.398452,7.668346,-5.906326,3.686123,-7.189575,6.187959,7.400030,9.838041,0.565003,9.137892,-8.190660,5.272070,5.320582,8.679885,-2.441473,-8.026457,3.971120,8.646474,1.712947,-4.788419,-2.518054,5.417028,7.265619,9.629018,-1.204498,-4.330238,7.612464,3.668321,1.972368,9.200867,-0.222643,9.428483,6.454244,1.892958,-3.841305,-9.707679,-3.782612,-7.167233,-6.585351,-0.412314,-2.052605,-4.809953,-9.773677,-7.285241,-2.374362,-9.843719,4.483384,-9.147934,-0.910896,2.684802,7.361656,4.315544],[-6.840353,2.861753,0.287419,3.612224,-3.955962,0.242284,7.140400,-2.869631,1.248319,-0.203902,-7.780112,9.802663,6.575582,9.857316,6.937619,-8.161540,-3.798810,-9.971739,5.630037,-2.818522,8.723503,-9.850454,9.539325,-3.226241,7.426967,-9.845306,7.381612,-8.122799,-2.326936,5.445541,-2.403945,5.812482,1.271368,9.430476,-9.172489,-3.617291,4.052462,-9.708365,2.844529,-4.807962,-0.277934,2.323050,-5.324643,-7.378466,5.916286,-4.373799,0.622178,2.618351,-6.204375,1.816064,-7.606887,-0.980287,-0.773854,-3.729289,-8.967972,5.006784,1.773826,-9.619931,-8.988889,2.286995],[1.527702,-8.158456,4.385755,8.578300,-5.916478,-9.159831,0.592336,-0.961984,-3.726372,1.822727,2.000011,1.302894,4.706159,3.611562,-9.297663,-1.537592,-8.600451,-1.869610,-1.515267,5.728305,-8.518930,2.652402,9.297411,9.924664,-3.508626,-5.315807,6.958032,3.459725,4.468879,8.211306,5.954243,0.195243,-6.128099,1.750558,-9.542774,2.710952,2.532373,-0.988078,-8.195078,-8.860409,-2.788273,6.493133,-6.742483,7.350193,1.632481,1.033588,-3.502173,-1.164523,-6.374454,3.303754,4.790802,8.793286,0.430802,9.488920,0.529358,-9.326381,-5.870028,-7.524929,-5.548227,-0.170967],[-4.689632,-5.617244,4.380399,1.971503,8.324698,-1.671205,6.335599,9.599991,7.113188,-6.872538,-0.679393,-1.329422,-7.658104,0.818169,-2.423250,-6.206505,7.526683,1.838749,-8.164907,-4.565102,2.174365,-9.586237,-8.074207,6.744776,-3.608908,-3.328521,7.046864,0.507851,5.586824,-3.390872,-4.949545,-7.683359,-7.075793,-9.462699,-7.854918,-4.773057,5.481694,-3.361503,-3.088867,9.435723,-5.196452,1.449810,1.419172,6.667267,1.017557,-2.202129,4.235886,8.961615,5.107986,-8.898648,-8.098125,5.655180,2.909774,6.831331,-8.099069,-5.060641,-9.105533,-2.618269,-5.224460,3.519020]], dtype = "float64")#candidate|5409|(8, 60)|const|float64
bop_5410 = relay.multiply(call_5403.astype('uint32'), relay.reshape(const_5409.astype('uint32'), relay.shape_of(call_5403))) # shape=(8, 60)
bop_5413 = relay.multiply(call_5404.astype('uint32'), relay.reshape(const_5409.astype('uint32'), relay.shape_of(call_5404))) # shape=(8, 60)
uop_5418 = relay.log2(bop_5400.astype('float64')) # shape=(14, 8, 11)
func_2300_call = mod.get_global_var('func_2300')
func_2302_call = mutated_mod.get_global_var('func_2302')
call_5421 = func_2300_call()
call_5422 = func_2300_call()
bop_5423 = relay.left_shift(uop_5418.astype('uint32'), relay.reshape(bop_5387.astype('uint32'), relay.shape_of(uop_5418))) # shape=(14, 8, 11)
bop_5441 = relay.power(bop_5423.astype('float32'), relay.reshape(var_5377.astype('float32'), relay.shape_of(bop_5423))) # shape=(14, 8, 11)
func_2211_call = mod.get_global_var('func_2211')
func_2213_call = mutated_mod.get_global_var('func_2213')
call_5448 = relay.TupleGetItem(func_2211_call(), 1)
call_5449 = relay.TupleGetItem(func_2213_call(), 1)
bop_5451 = relay.logical_or(bop_5441.astype('bool'), relay.reshape(bop_5387.astype('bool'), relay.shape_of(bop_5441))) # shape=(14, 8, 11)
func_1960_call = mod.get_global_var('func_1960')
func_1963_call = mutated_mod.get_global_var('func_1963')
var_5459 = relay.var("var_5459", dtype = "float64", shape = (7, 6))#candidate|5459|(7, 6)|var|float64
call_5458 = relay.TupleGetItem(func_1960_call(relay.reshape(var_5459.astype('float64'), [42,])), 3)
call_5460 = relay.TupleGetItem(func_1963_call(relay.reshape(var_5459.astype('float64'), [42,])), 3)
func_2300_call = mod.get_global_var('func_2300')
func_2302_call = mutated_mod.get_global_var('func_2302')
call_5461 = func_2300_call()
call_5462 = func_2300_call()
uop_5486 = relay.log2(call_5421.astype('float64')) # shape=(3, 14, 8)
uop_5488 = relay.log2(call_5422.astype('float64')) # shape=(3, 14, 8)
func_1960_call = mod.get_global_var('func_1960')
func_1963_call = mutated_mod.get_global_var('func_1963')
call_5498 = relay.TupleGetItem(func_1960_call(relay.reshape(var_5459.astype('float64'), [42,])), 2)
call_5499 = relay.TupleGetItem(func_1963_call(relay.reshape(var_5459.astype('float64'), [42,])), 2)
uop_5506 = relay.cos(bop_5423.astype('float64')) # shape=(14, 8, 11)
func_4893_call = mod.get_global_var('func_4893')
func_4895_call = mutated_mod.get_global_var('func_4895')
call_5512 = relay.TupleGetItem(func_4893_call(), 0)
call_5513 = relay.TupleGetItem(func_4895_call(), 0)
output = relay.Tuple([call_5396,bop_5410,call_5448,bop_5451,call_5458,var_5459,call_5461,uop_5486,call_5498,uop_5506,call_5512,])
output2 = relay.Tuple([call_5397,bop_5413,call_5449,bop_5451,call_5460,var_5459,call_5462,uop_5488,call_5499,uop_5506,call_5513,])
func_5518 = relay.Function([var_5376,var_5377,var_5459,], output)
mod['func_5518'] = func_5518
mod = relay.transform.InferType()(mod)
var_5519 = relay.var("var_5519", dtype = "uint16", shape = (14, 8, 11))#candidate|5519|(14, 8, 11)|var|uint16
var_5520 = relay.var("var_5520", dtype = "uint16", shape = (14, 8, 11))#candidate|5520|(14, 8, 11)|var|uint16
var_5521 = relay.var("var_5521", dtype = "float64", shape = (7, 6))#candidate|5521|(7, 6)|var|float64
output = func_5518(var_5519,var_5520,var_5521,)
func_5522 = relay.Function([var_5519,var_5520,var_5521,], output)
mutated_mod['func_5522'] = func_5522
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4184_call = mod.get_global_var('func_4184')
func_4186_call = mutated_mod.get_global_var('func_4186')
call_5542 = relay.TupleGetItem(func_4184_call(), 0)
call_5543 = relay.TupleGetItem(func_4186_call(), 0)
func_3579_call = mod.get_global_var('func_3579')
func_3580_call = mutated_mod.get_global_var('func_3580')
call_5556 = relay.TupleGetItem(func_3579_call(), 0)
call_5557 = relay.TupleGetItem(func_3580_call(), 0)
output = relay.Tuple([call_5542,call_5556,])
output2 = relay.Tuple([call_5543,call_5557,])
func_5558 = relay.Function([], output)
mod['func_5558'] = func_5558
mod = relay.transform.InferType()(mod)
output = func_5558()
func_5559 = relay.Function([], output)
mutated_mod['func_5559'] = func_5559
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2300_call = mod.get_global_var('func_2300')
func_2302_call = mutated_mod.get_global_var('func_2302')
call_5591 = func_2300_call()
call_5592 = func_2300_call()
func_3525_call = mod.get_global_var('func_3525')
func_3527_call = mutated_mod.get_global_var('func_3527')
call_5611 = func_3525_call()
call_5612 = func_3525_call()
func_2353_call = mod.get_global_var('func_2353')
func_2356_call = mutated_mod.get_global_var('func_2356')
const_5621 = relay.const([True,True,False,True,False,True,True,False,False,True,False,True,False,False,True,False,True,True,True,False,True,True,True,True,True,False,False,False,False,False,False,False,True,False,True,True,True,False,True,False,True,False,True,True,False,False,False,True,True,True,True,True,False,True,False,True,True,False,True,False,False,False,False,True,False,True,False,False,False,True,False,True,True,True,True,True,True,True,True,True,False,False,False,False,True,False,True,True,False,True,True,False,True,True,True,True,False,True,True,False,False,True,False,False,False,True,True,False,False,False,True,False,True,True,False,False,True,True,True,True,False,False,True,True,True,False,True,False,True,False,False,True,False,False,True,False,True,True,False,True,True,True,True,False,False,True,True,True,True,False,False,True,True,True,True,False,True,False,False,False,False,True,False,False,True,True,True,True,False,True,False,False,True,False,False,True,True,True,True,False,False,True,False,True,True,True,True,False,True,False,True,True,True,True,False,False,False,True,True,True,False,False,True,True,False,True,True,True,True,False,False,True,True,False,False,False,True,True,True,False,True,False,True,False,True,True,True,True,False,False,False,True,False,True,False,False,True,True,False,False,True,False,True,True,False,True,True,True,False,False,True,False,False,False,False,True,False,True,True,False,False,True,True,False], dtype = "bool")#candidate|5621|(264,)|const|bool
call_5620 = func_2353_call(relay.reshape(const_5621.astype('bool'), [11, 6, 4]))
call_5622 = func_2353_call(relay.reshape(const_5621.astype('bool'), [11, 6, 4]))
uop_5629 = relay.sin(call_5620.astype('float32')) # shape=(11, 6, 4)
uop_5631 = relay.sin(call_5622.astype('float32')) # shape=(11, 6, 4)
output = relay.Tuple([call_5591,call_5611,const_5621,uop_5629,])
output2 = relay.Tuple([call_5592,call_5612,const_5621,uop_5631,])
func_5655 = relay.Function([], output)
mod['func_5655'] = func_5655
mod = relay.transform.InferType()(mod)
output = func_5655()
func_5656 = relay.Function([], output)
mutated_mod['func_5656'] = func_5656
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3900_call = mod.get_global_var('func_3900')
func_3902_call = mutated_mod.get_global_var('func_3902')
call_5763 = relay.TupleGetItem(func_3900_call(), 2)
call_5764 = relay.TupleGetItem(func_3902_call(), 2)
func_5146_call = mod.get_global_var('func_5146')
func_5148_call = mutated_mod.get_global_var('func_5148')
call_5777 = func_5146_call()
call_5778 = func_5146_call()
output = relay.Tuple([call_5763,call_5777,])
output2 = relay.Tuple([call_5764,call_5778,])
func_5791 = relay.Function([], output)
mod['func_5791'] = func_5791
mod = relay.transform.InferType()(mod)
output = func_5791()
func_5792 = relay.Function([], output)
mutated_mod['func_5792'] = func_5792
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3036_call = mod.get_global_var('func_3036')
func_3037_call = mutated_mod.get_global_var('func_3037')
call_5815 = relay.TupleGetItem(func_3036_call(), 0)
call_5816 = relay.TupleGetItem(func_3037_call(), 0)
func_2615_call = mod.get_global_var('func_2615')
func_2617_call = mutated_mod.get_global_var('func_2617')
call_5823 = relay.TupleGetItem(func_2615_call(), 0)
call_5824 = relay.TupleGetItem(func_2617_call(), 0)
func_5119_call = mod.get_global_var('func_5119')
func_5122_call = mutated_mod.get_global_var('func_5122')
call_5833 = relay.TupleGetItem(func_5119_call(relay.reshape(call_5815.astype('float64'), [15, 11, 12])), 3)
call_5834 = relay.TupleGetItem(func_5122_call(relay.reshape(call_5815.astype('float64'), [15, 11, 12])), 3)
func_3525_call = mod.get_global_var('func_3525')
func_3527_call = mutated_mod.get_global_var('func_3527')
call_5835 = func_3525_call()
call_5836 = func_3525_call()
uop_5844 = relay.asinh(call_5833.astype('float64')) # shape=(15, 11, 12)
uop_5846 = relay.asinh(call_5834.astype('float64')) # shape=(15, 11, 12)
func_2439_call = mod.get_global_var('func_2439')
func_2442_call = mutated_mod.get_global_var('func_2442')
const_5852 = relay.const([0.516234,4.790484,0.780558,1.209857,-6.371113,-3.801662,7.264892,-4.632123,4.575781,0.542682,-8.962601,7.290844,2.564366,7.942867,4.482111,-7.615641,0.871425,3.529674,1.782009,9.742375,-7.227478,9.206397,-7.139346,5.645269,-7.299742,0.904961,2.054091,-4.382713,-7.559053,4.557726,-5.176597,-5.800143,5.923845,-8.126464,8.905113,-5.647519,9.113365,2.230907,0.725995,5.968519,0.537320,2.832054], dtype = "float64")#candidate|5852|(42,)|const|float64
call_5851 = relay.TupleGetItem(func_2439_call(relay.reshape(const_5852.astype('float64'), [42,])), 1)
call_5853 = relay.TupleGetItem(func_2442_call(relay.reshape(const_5852.astype('float64'), [42,])), 1)
uop_5863 = relay.sin(call_5823.astype('float32')) # shape=(15, 11, 12)
uop_5865 = relay.sin(call_5824.astype('float32')) # shape=(15, 11, 12)
bop_5867 = relay.floor_divide(call_5815.astype('float64'), relay.reshape(uop_5844.astype('float64'), relay.shape_of(call_5815))) # shape=(15, 11, 12)
bop_5870 = relay.floor_divide(call_5816.astype('float64'), relay.reshape(uop_5846.astype('float64'), relay.shape_of(call_5816))) # shape=(15, 11, 12)
output = relay.Tuple([call_5835,call_5851,const_5852,uop_5863,bop_5867,])
output2 = relay.Tuple([call_5836,call_5853,const_5852,uop_5865,bop_5870,])
func_5879 = relay.Function([], output)
mod['func_5879'] = func_5879
mod = relay.transform.InferType()(mod)
mutated_mod['func_5879'] = func_5879
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5879_call = mutated_mod.get_global_var('func_5879')
call_5880 = func_5879_call()
output = call_5880
func_5881 = relay.Function([], output)
mutated_mod['func_5881'] = func_5881
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5791_call = mod.get_global_var('func_5791')
func_5792_call = mutated_mod.get_global_var('func_5792')
call_5887 = relay.TupleGetItem(func_5791_call(), 1)
call_5888 = relay.TupleGetItem(func_5792_call(), 1)
output = call_5887
output2 = call_5888
func_5895 = relay.Function([], output)
mod['func_5895'] = func_5895
mod = relay.transform.InferType()(mod)
output = func_5895()
func_5896 = relay.Function([], output)
mutated_mod['func_5896'] = func_5896
mutated_mod = relay.transform.InferType()(mutated_mod)
const_5930 = relay.const(6.194855, dtype = "float64")#candidate|5930|()|const|float64
var_5931 = relay.var("var_5931", dtype = "float64", shape = (1, 6, 2))#candidate|5931|(1, 6, 2)|var|float64
bop_5932 = relay.floor_mod(const_5930.astype('float64'), var_5931.astype('float64')) # shape=(1, 6, 2)
output = relay.Tuple([bop_5932,])
output2 = relay.Tuple([bop_5932,])
func_5943 = relay.Function([var_5931,], output)
mod['func_5943'] = func_5943
mod = relay.transform.InferType()(mod)
var_5944 = relay.var("var_5944", dtype = "float64", shape = (1, 6, 2))#candidate|5944|(1, 6, 2)|var|float64
output = func_5943(var_5944)
func_5945 = relay.Function([var_5944], output)
mutated_mod['func_5945'] = func_5945
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2000_call = mod.get_global_var('func_2000')
func_2002_call = mutated_mod.get_global_var('func_2002')
call_6007 = func_2000_call()
call_6008 = func_2000_call()
func_5215_call = mod.get_global_var('func_5215')
func_5216_call = mutated_mod.get_global_var('func_5216')
call_6013 = relay.TupleGetItem(func_5215_call(), 0)
call_6014 = relay.TupleGetItem(func_5216_call(), 0)
output = relay.Tuple([call_6007,call_6013,])
output2 = relay.Tuple([call_6008,call_6014,])
func_6027 = relay.Function([], output)
mod['func_6027'] = func_6027
mod = relay.transform.InferType()(mod)
mutated_mod['func_6027'] = func_6027
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6027_call = mutated_mod.get_global_var('func_6027')
call_6028 = func_6027_call()
output = call_6028
func_6029 = relay.Function([], output)
mutated_mod['func_6029'] = func_6029
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5146_call = mod.get_global_var('func_5146')
func_5148_call = mutated_mod.get_global_var('func_5148')
call_6068 = func_5146_call()
call_6069 = func_5146_call()
output = call_6068
output2 = call_6069
func_6072 = relay.Function([], output)
mod['func_6072'] = func_6072
mod = relay.transform.InferType()(mod)
mutated_mod['func_6072'] = func_6072
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6072_call = mutated_mod.get_global_var('func_6072')
call_6073 = func_6072_call()
output = call_6073
func_6074 = relay.Function([], output)
mutated_mod['func_6074'] = func_6074
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2000_call = mod.get_global_var('func_2000')
func_2002_call = mutated_mod.get_global_var('func_2002')
call_6081 = func_2000_call()
call_6082 = func_2000_call()
output = relay.Tuple([call_6081,])
output2 = relay.Tuple([call_6082,])
func_6083 = relay.Function([], output)
mod['func_6083'] = func_6083
mod = relay.transform.InferType()(mod)
mutated_mod['func_6083'] = func_6083
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6083_call = mutated_mod.get_global_var('func_6083')
call_6084 = func_6083_call()
output = call_6084
func_6085 = relay.Function([], output)
mutated_mod['func_6085'] = func_6085
mutated_mod = relay.transform.InferType()(mutated_mod)
var_6091 = relay.var("var_6091", dtype = "float64", shape = (5, 4, 3))#candidate|6091|(5, 4, 3)|var|float64
uop_6092 = relay.sqrt(var_6091.astype('float64')) # shape=(5, 4, 3)
uop_6104 = relay.atan(uop_6092.astype('float32')) # shape=(5, 4, 3)
output = relay.Tuple([uop_6104,])
output2 = relay.Tuple([uop_6104,])
func_6109 = relay.Function([var_6091,], output)
mod['func_6109'] = func_6109
mod = relay.transform.InferType()(mod)
var_6110 = relay.var("var_6110", dtype = "float64", shape = (5, 4, 3))#candidate|6110|(5, 4, 3)|var|float64
output = func_6109(var_6110)
func_6111 = relay.Function([var_6110], output)
mutated_mod['func_6111'] = func_6111
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4868_call = mod.get_global_var('func_4868')
func_4870_call = mutated_mod.get_global_var('func_4870')
call_6113 = relay.TupleGetItem(func_4868_call(), 0)
call_6114 = relay.TupleGetItem(func_4870_call(), 0)
output = relay.Tuple([call_6113,])
output2 = relay.Tuple([call_6114,])
func_6148 = relay.Function([], output)
mod['func_6148'] = func_6148
mod = relay.transform.InferType()(mod)
mutated_mod['func_6148'] = func_6148
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6148_call = mutated_mod.get_global_var('func_6148')
call_6149 = func_6148_call()
output = call_6149
func_6150 = relay.Function([], output)
mutated_mod['func_6150'] = func_6150
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4191_call = mod.get_global_var('func_4191')
func_4192_call = mutated_mod.get_global_var('func_4192')
call_6185 = relay.TupleGetItem(func_4191_call(), 0)
call_6186 = relay.TupleGetItem(func_4192_call(), 0)
func_2648_call = mod.get_global_var('func_2648')
func_2649_call = mutated_mod.get_global_var('func_2649')
call_6189 = relay.TupleGetItem(func_2648_call(), 0)
call_6190 = relay.TupleGetItem(func_2649_call(), 0)
func_2531_call = mod.get_global_var('func_2531')
func_2532_call = mutated_mod.get_global_var('func_2532')
call_6197 = relay.TupleGetItem(func_2531_call(), 3)
call_6198 = relay.TupleGetItem(func_2532_call(), 3)
output = relay.Tuple([call_6185,call_6189,call_6197,])
output2 = relay.Tuple([call_6186,call_6190,call_6198,])
func_6240 = relay.Function([], output)
mod['func_6240'] = func_6240
mod = relay.transform.InferType()(mod)
output = func_6240()
func_6241 = relay.Function([], output)
mutated_mod['func_6241'] = func_6241
mutated_mod = relay.transform.InferType()(mutated_mod)
var_6258 = relay.var("var_6258", dtype = "float32", shape = (5, 9, 14))#candidate|6258|(5, 9, 14)|var|float32
uop_6259 = relay.exp(var_6258.astype('float32')) # shape=(5, 9, 14)
output = uop_6259
output2 = uop_6259
func_6266 = relay.Function([var_6258,], output)
mod['func_6266'] = func_6266
mod = relay.transform.InferType()(mod)
var_6267 = relay.var("var_6267", dtype = "float32", shape = (5, 9, 14))#candidate|6267|(5, 9, 14)|var|float32
output = func_6266(var_6267)
func_6268 = relay.Function([var_6267], output)
mutated_mod['func_6268'] = func_6268
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4868_call = mod.get_global_var('func_4868')
func_4870_call = mutated_mod.get_global_var('func_4870')
call_6333 = relay.TupleGetItem(func_4868_call(), 0)
call_6334 = relay.TupleGetItem(func_4870_call(), 0)
func_5293_call = mod.get_global_var('func_5293')
func_5296_call = mutated_mod.get_global_var('func_5296')
var_6376 = relay.var("var_6376", dtype = "float64", shape = (42, 1))#candidate|6376|(42, 1)|var|float64
call_6375 = relay.TupleGetItem(func_5293_call(relay.reshape(var_6376.astype('float64'), [42,])), 1)
call_6377 = relay.TupleGetItem(func_5296_call(relay.reshape(var_6376.astype('float64'), [42,])), 1)
func_4385_call = mod.get_global_var('func_4385')
func_4388_call = mutated_mod.get_global_var('func_4388')
var_6382 = relay.var("var_6382", dtype = "int64", shape = (11, 2))#candidate|6382|(11, 2)|var|int64
var_6383 = relay.var("var_6383", dtype = "int64", shape = (8, 44))#candidate|6383|(8, 44)|var|int64
call_6381 = relay.TupleGetItem(func_4385_call(relay.reshape(var_6382.astype('int64'), [2, 11, 1]), relay.reshape(var_6383.astype('int64'), [2, 11, 16]), ), 0)
call_6384 = relay.TupleGetItem(func_4388_call(relay.reshape(var_6382.astype('int64'), [2, 11, 1]), relay.reshape(var_6383.astype('int64'), [2, 11, 16]), ), 0)
output = relay.Tuple([call_6333,call_6375,var_6376,call_6381,var_6382,var_6383,])
output2 = relay.Tuple([call_6334,call_6377,var_6376,call_6384,var_6382,var_6383,])
func_6397 = relay.Function([var_6376,var_6382,var_6383,], output)
mod['func_6397'] = func_6397
mod = relay.transform.InferType()(mod)
mutated_mod['func_6397'] = func_6397
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6397_call = mutated_mod.get_global_var('func_6397')
var_6399 = relay.var("var_6399", dtype = "float64", shape = (42, 1))#candidate|6399|(42, 1)|var|float64
var_6400 = relay.var("var_6400", dtype = "int64", shape = (11, 2))#candidate|6400|(11, 2)|var|int64
var_6401 = relay.var("var_6401", dtype = "int64", shape = (8, 44))#candidate|6401|(8, 44)|var|int64
call_6398 = func_6397_call(var_6399,var_6400,var_6401,)
output = call_6398
func_6402 = relay.Function([var_6399,var_6400,var_6401,], output)
mutated_mod['func_6402'] = func_6402
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5558_call = mod.get_global_var('func_5558')
func_5559_call = mutated_mod.get_global_var('func_5559')
call_6464 = relay.TupleGetItem(func_5558_call(), 0)
call_6465 = relay.TupleGetItem(func_5559_call(), 0)
output = call_6464
output2 = call_6465
func_6483 = relay.Function([], output)
mod['func_6483'] = func_6483
mod = relay.transform.InferType()(mod)
output = func_6483()
func_6484 = relay.Function([], output)
mutated_mod['func_6484'] = func_6484
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3817_call = mod.get_global_var('func_3817')
func_3818_call = mutated_mod.get_global_var('func_3818')
call_6492 = relay.TupleGetItem(func_3817_call(), 0)
call_6493 = relay.TupleGetItem(func_3818_call(), 0)
uop_6494 = relay.acosh(call_6492.astype('float64')) # shape=(5, 10, 3)
uop_6496 = relay.acosh(call_6493.astype('float64')) # shape=(5, 10, 3)
bop_6506 = relay.less_equal(uop_6494.astype('bool'), relay.reshape(call_6492.astype('bool'), relay.shape_of(uop_6494))) # shape=(5, 10, 3)
bop_6509 = relay.less_equal(uop_6496.astype('bool'), relay.reshape(call_6493.astype('bool'), relay.shape_of(uop_6496))) # shape=(5, 10, 3)
output = relay.Tuple([bop_6506,])
output2 = relay.Tuple([bop_6509,])
func_6524 = relay.Function([], output)
mod['func_6524'] = func_6524
mod = relay.transform.InferType()(mod)
mutated_mod['func_6524'] = func_6524
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6524_call = mutated_mod.get_global_var('func_6524')
call_6525 = func_6524_call()
output = call_6525
func_6526 = relay.Function([], output)
mutated_mod['func_6526'] = func_6526
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2571_call = mod.get_global_var('func_2571')
func_2573_call = mutated_mod.get_global_var('func_2573')
call_6542 = relay.TupleGetItem(func_2571_call(), 1)
call_6543 = relay.TupleGetItem(func_2573_call(), 1)
output = relay.Tuple([call_6542,])
output2 = relay.Tuple([call_6543,])
func_6548 = relay.Function([], output)
mod['func_6548'] = func_6548
mod = relay.transform.InferType()(mod)
mutated_mod['func_6548'] = func_6548
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6548_call = mutated_mod.get_global_var('func_6548')
call_6549 = func_6548_call()
output = call_6549
func_6550 = relay.Function([], output)
mutated_mod['func_6550'] = func_6550
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4893_call = mod.get_global_var('func_4893')
func_4895_call = mutated_mod.get_global_var('func_4895')
call_6578 = relay.TupleGetItem(func_4893_call(), 0)
call_6579 = relay.TupleGetItem(func_4895_call(), 0)
func_3352_call = mod.get_global_var('func_3352')
func_3354_call = mutated_mod.get_global_var('func_3354')
call_6586 = relay.TupleGetItem(func_3352_call(), 2)
call_6587 = relay.TupleGetItem(func_3354_call(), 2)
func_4184_call = mod.get_global_var('func_4184')
func_4186_call = mutated_mod.get_global_var('func_4186')
call_6601 = relay.TupleGetItem(func_4184_call(), 0)
call_6602 = relay.TupleGetItem(func_4186_call(), 0)
func_2956_call = mod.get_global_var('func_2956')
func_2958_call = mutated_mod.get_global_var('func_2958')
call_6606 = relay.TupleGetItem(func_2956_call(), 0)
call_6607 = relay.TupleGetItem(func_2958_call(), 0)
var_6626 = relay.var("var_6626", dtype = "float64", shape = (8, 5, 5))#candidate|6626|(8, 5, 5)|var|float64
bop_6627 = relay.maximum(call_6586.astype('float64'), var_6626.astype('float64')) # shape=(8, 5, 5)
bop_6630 = relay.maximum(call_6587.astype('float64'), var_6626.astype('float64')) # shape=(8, 5, 5)
output = relay.Tuple([call_6578,call_6601,call_6606,bop_6627,])
output2 = relay.Tuple([call_6579,call_6602,call_6607,bop_6630,])
func_6636 = relay.Function([var_6626,], output)
mod['func_6636'] = func_6636
mod = relay.transform.InferType()(mod)
mutated_mod['func_6636'] = func_6636
mutated_mod = relay.transform.InferType()(mutated_mod)
var_6637 = relay.var("var_6637", dtype = "float64", shape = (8, 5, 5))#candidate|6637|(8, 5, 5)|var|float64
func_6636_call = mutated_mod.get_global_var('func_6636')
call_6638 = func_6636_call(var_6637)
output = call_6638
func_6639 = relay.Function([var_6637], output)
mutated_mod['func_6639'] = func_6639
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2300_call = mod.get_global_var('func_2300')
func_2302_call = mutated_mod.get_global_var('func_2302')
call_6644 = func_2300_call()
call_6645 = func_2300_call()
func_509_call = mod.get_global_var('func_509')
func_512_call = mutated_mod.get_global_var('func_512')
var_6650 = relay.var("var_6650", dtype = "float64", shape = (360,))#candidate|6650|(360,)|var|float64
call_6649 = func_509_call(relay.reshape(var_6650.astype('float64'), [10, 4, 9]))
call_6651 = func_509_call(relay.reshape(var_6650.astype('float64'), [10, 4, 9]))
output = relay.Tuple([call_6644,call_6649,var_6650,])
output2 = relay.Tuple([call_6645,call_6651,var_6650,])
func_6654 = relay.Function([var_6650,], output)
mod['func_6654'] = func_6654
mod = relay.transform.InferType()(mod)
var_6655 = relay.var("var_6655", dtype = "float64", shape = (360,))#candidate|6655|(360,)|var|float64
output = func_6654(var_6655)
func_6656 = relay.Function([var_6655], output)
mutated_mod['func_6656'] = func_6656
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3676_call = mod.get_global_var('func_3676')
func_3677_call = mutated_mod.get_global_var('func_3677')
call_6669 = relay.TupleGetItem(func_3676_call(), 0)
call_6670 = relay.TupleGetItem(func_3677_call(), 0)
output = relay.Tuple([call_6669,])
output2 = relay.Tuple([call_6670,])
func_6675 = relay.Function([], output)
mod['func_6675'] = func_6675
mod = relay.transform.InferType()(mod)
mutated_mod['func_6675'] = func_6675
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6675_call = mutated_mod.get_global_var('func_6675')
call_6676 = func_6675_call()
output = call_6676
func_6677 = relay.Function([], output)
mutated_mod['func_6677'] = func_6677
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5895_call = mod.get_global_var('func_5895')
func_5896_call = mutated_mod.get_global_var('func_5896')
call_6688 = func_5895_call()
call_6689 = func_5895_call()
output = call_6688
output2 = call_6689
func_6693 = relay.Function([], output)
mod['func_6693'] = func_6693
mod = relay.transform.InferType()(mod)
mutated_mod['func_6693'] = func_6693
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6693_call = mutated_mod.get_global_var('func_6693')
call_6694 = func_6693_call()
output = call_6694
func_6695 = relay.Function([], output)
mutated_mod['func_6695'] = func_6695
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4073_call = mod.get_global_var('func_4073')
func_4075_call = mutated_mod.get_global_var('func_4075')
call_6729 = relay.TupleGetItem(func_4073_call(), 0)
call_6730 = relay.TupleGetItem(func_4075_call(), 0)
uop_6731 = relay.atan(call_6729.astype('float64')) # shape=(11, 9, 7)
uop_6733 = relay.atan(call_6730.astype('float64')) # shape=(11, 9, 7)
uop_6739 = relay.erf(call_6729.astype('float64')) # shape=(11, 9, 7)
uop_6741 = relay.erf(call_6730.astype('float64')) # shape=(11, 9, 7)
func_2778_call = mod.get_global_var('func_2778')
func_2780_call = mutated_mod.get_global_var('func_2780')
call_6754 = relay.TupleGetItem(func_2778_call(), 2)
call_6755 = relay.TupleGetItem(func_2780_call(), 2)
output = relay.Tuple([uop_6731,uop_6739,call_6754,])
output2 = relay.Tuple([uop_6733,uop_6741,call_6755,])
func_6760 = relay.Function([], output)
mod['func_6760'] = func_6760
mod = relay.transform.InferType()(mod)
mutated_mod['func_6760'] = func_6760
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6760_call = mutated_mod.get_global_var('func_6760')
call_6761 = func_6760_call()
output = call_6761
func_6762 = relay.Function([], output)
mutated_mod['func_6762'] = func_6762
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5879_call = mod.get_global_var('func_5879')
func_5881_call = mutated_mod.get_global_var('func_5881')
call_6832 = relay.TupleGetItem(func_5879_call(), 3)
call_6833 = relay.TupleGetItem(func_5881_call(), 3)
uop_6847 = relay.erf(call_6832.astype('float64')) # shape=(15, 11, 12)
uop_6849 = relay.erf(call_6833.astype('float64')) # shape=(15, 11, 12)
output = uop_6847
output2 = uop_6849
func_6850 = relay.Function([], output)
mod['func_6850'] = func_6850
mod = relay.transform.InferType()(mod)
mutated_mod['func_6850'] = func_6850
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6850_call = mutated_mod.get_global_var('func_6850')
call_6851 = func_6850_call()
output = call_6851
func_6852 = relay.Function([], output)
mutated_mod['func_6852'] = func_6852
mutated_mod = relay.transform.InferType()(mutated_mod)
var_6892 = relay.var("var_6892", dtype = "uint16", shape = (8, 15, 16))#candidate|6892|(8, 15, 16)|var|uint16
const_6893 = relay.const([[[-2,4,-8,-7,9,-1,-2,-2,4,9,-9,-2,5,-9,-4,6],[-1,4,-5,10,7,-9,-10,-5,7,8,2,10,-4,10,9,8],[8,-9,2,-7,3,-10,-8,-9,-3,-10,9,-4,10,-2,4,9],[1,7,9,4,1,-7,3,4,7,10,-6,2,2,5,6,-8],[-5,-10,-10,-8,-2,-1,-5,8,-3,-9,-5,-4,-4,3,-4,7],[-9,-4,5,3,9,10,-1,5,9,2,4,2,-7,-10,-9,10],[5,-6,-8,-6,3,10,-6,-7,-10,10,-6,-5,-9,-6,1,-4],[-2,7,-9,8,10,-5,6,1,4,-1,4,-5,-9,9,7,-6],[-4,-10,5,7,7,-2,-6,8,-6,2,4,-3,6,-5,-7,-1],[-6,-6,-10,-8,6,1,-7,-4,7,3,1,8,-9,-10,6,9],[-6,-6,-9,3,-6,-9,-3,-6,-1,6,4,-1,7,-1,-5,-8],[7,-7,-8,-4,-7,7,-8,-4,9,-10,4,-8,-3,7,-1,-10],[6,-7,-10,-9,5,-8,-9,1,2,3,-5,10,-1,-9,-1,1],[6,2,-8,-2,-8,-6,-3,-5,2,-5,-8,-6,-2,-1,2,10],[1,-4,4,-2,6,-9,6,-6,-1,-7,5,-8,-8,10,5,10]],[[4,3,-9,10,4,6,5,-2,2,5,-3,-6,4,-1,-6,2],[-2,-5,3,-8,-9,9,-6,-8,10,-10,6,2,-10,10,-3,-3],[1,-7,7,1,10,8,3,-8,9,4,2,7,10,-9,2,-7],[1,-7,-9,-6,10,-7,-2,-4,3,-8,7,-8,-5,-9,8,-9],[-9,-9,5,-7,1,-6,9,2,9,6,7,2,-10,8,6,-8],[4,-1,-5,3,-2,-7,-10,-4,10,6,3,-9,8,2,-5,-9],[10,-9,10,-10,-1,-5,9,2,9,-7,6,9,5,10,-4,10],[-2,-10,1,9,1,4,3,-9,2,9,4,-3,-1,-1,-3,10],[2,-10,-2,-6,2,2,4,2,-7,-5,8,2,-3,4,-5,-3],[-4,9,-1,10,-5,-1,-4,-6,-1,-6,10,-8,-2,-9,7,-4],[-5,9,-8,-7,3,-1,-10,-2,7,-2,5,-10,-4,-3,-10,-4],[-8,1,5,-6,-8,7,-3,9,-6,-8,2,-9,-8,-9,-7,-7],[7,-10,6,1,4,-1,7,-8,-4,-8,-6,-5,9,-7,7,3],[10,4,-1,1,3,4,-6,4,1,-4,-9,3,3,4,2,3],[1,1,10,-9,5,-4,-8,-9,-2,-3,-4,-9,-6,6,-10,-1]],[[6,-3,3,-1,9,-9,4,3,-3,-7,5,-3,-6,-1,9,7],[4,-2,-6,-5,-8,10,-2,-8,-3,1,10,1,4,4,3,-9],[-3,-4,-5,4,3,7,-8,8,1,-1,3,7,-5,-3,4,5],[-4,-6,8,-4,3,6,-8,5,4,-10,-2,-8,-10,3,-2,1],[7,-7,-7,-8,4,-4,-8,2,6,3,-9,-5,2,4,8,10],[-3,4,9,10,6,4,2,-8,-7,8,-1,-8,-3,-7,-8,-8],[-5,10,-4,7,-2,-6,8,3,-6,-5,4,-10,-6,9,5,6],[10,5,-4,-4,5,1,5,-3,6,7,-3,-6,5,4,3,-1],[-4,6,9,6,-1,1,10,-6,2,-6,-4,4,10,-9,-8,5],[-7,1,5,1,-4,-4,6,1,-7,3,-9,-1,4,1,10,-5],[-1,4,4,3,-8,2,-9,2,-8,-7,1,-8,-6,9,7,5],[-2,5,6,4,5,10,7,-9,-8,-3,-2,7,10,-8,-2,6],[-1,10,6,-1,-9,6,4,10,4,10,4,6,3,-10,6,-9],[-6,-6,2,-5,8,-7,-9,-4,-2,-8,2,-10,-9,-2,-6,-2],[9,-7,5,3,3,8,9,-4,-8,9,8,7,-2,2,1,2]],[[-4,-2,-9,4,5,8,4,8,6,-4,-9,-2,1,8,-10,1],[-9,10,-7,4,8,7,3,6,3,6,10,-2,1,-10,-2,4],[-3,9,-1,-2,-4,1,-4,-7,-6,10,10,-6,4,4,6,-5],[-2,-8,7,2,-9,-9,9,-4,8,2,8,2,3,-5,-6,9],[-5,1,-9,3,7,4,7,-2,2,6,-1,9,6,4,-4,-10],[-3,1,5,9,6,-9,-1,-10,2,-4,-4,-6,9,-2,4,-2],[-4,-9,6,2,-1,-7,-9,-7,10,-3,-6,-7,-10,6,1,-3],[10,6,9,-10,-7,7,3,-7,7,9,3,-6,5,9,1,-10],[3,1,-4,-4,-7,4,-7,2,5,5,7,10,-7,-5,2,-1],[3,-9,-4,-5,6,-10,-4,-4,4,-6,-5,3,7,10,5,-4],[-5,5,-6,10,-4,4,5,-7,-7,9,9,-4,2,-4,7,-5],[-1,-4,3,-10,6,-4,-1,-9,-4,-10,2,7,-10,-9,3,3],[-6,-2,1,-7,5,6,-10,6,-3,7,2,9,9,1,6,5],[-9,3,8,-8,9,10,-1,5,5,-1,-8,-9,8,6,-3,6],[-7,-3,8,9,-5,9,7,10,-8,9,1,10,7,5,-6,-2]],[[-1,7,6,9,6,9,-3,-5,2,-6,1,6,3,-10,4,1],[8,-7,3,10,-5,1,10,1,-10,-8,-5,3,-6,9,6,7],[8,-2,1,8,-3,-6,-7,-8,5,9,10,10,-4,8,-8,6],[9,5,-10,-6,4,-5,-10,-9,8,-9,-10,4,9,-4,7,3],[5,-5,-2,7,6,10,-6,-5,7,-5,-4,-2,1,1,5,-3],[3,7,-3,-3,10,-7,2,-3,5,-7,6,-1,5,-6,-6,-1],[9,4,4,-10,-3,-1,6,-6,-3,-1,4,10,6,10,-3,10],[-10,-3,-6,-9,8,3,-7,7,4,10,10,5,-4,-9,-7,10],[-5,-2,-3,-9,-2,-9,1,-8,5,-3,8,2,-5,10,10,-9],[-2,-6,-1,-10,-7,-3,-6,-3,1,-8,6,-2,1,-10,1,-5],[-10,1,-8,-8,9,-3,-2,-6,2,1,-1,8,-4,-2,10,1],[-10,3,1,-1,3,-5,-2,-10,-4,2,-4,9,1,-7,9,-10],[8,7,7,2,-3,4,8,10,5,-9,-4,-8,-10,-5,3,-9],[1,10,5,-5,-1,-6,5,2,1,10,10,2,5,8,-3,8],[-5,1,2,-10,6,-3,3,-4,7,-10,4,-8,9,6,4,-5]],[[4,-9,-3,1,-7,2,-10,-4,10,5,-6,-4,8,7,6,1],[10,-8,8,-2,-2,5,-1,-8,-5,-7,-7,-5,3,-8,-6,8],[-8,-10,-4,1,7,9,-7,2,-1,10,-2,-2,9,-5,-9,-2],[9,-3,-4,-2,-10,-10,-7,8,3,-3,-5,1,7,10,9,2],[1,3,-10,6,-6,-9,-1,9,7,1,9,7,-8,-3,-6,-4],[-10,4,-4,10,-1,10,-7,7,3,7,10,9,8,4,4,-5],[-9,-4,1,4,4,5,-5,7,-10,1,8,-9,-9,-2,-5,9],[6,-8,9,9,5,7,6,-7,10,-8,7,7,-2,-1,8,10],[5,-10,-9,-8,-5,-4,10,-9,9,-1,7,-4,-8,8,7,9],[6,-6,10,-9,2,-8,-7,5,6,-4,-5,-6,3,9,1,-2],[9,4,-4,4,8,-8,-1,-3,-10,-2,5,-10,-1,8,8,9],[-10,5,-7,9,3,2,-2,-2,4,-9,-3,9,7,8,-7,-3],[1,10,10,-5,9,-8,-6,7,-6,1,5,-5,-5,-10,-9,9],[2,8,-9,5,-2,-10,3,8,-4,-9,7,5,-7,6,7,-4],[5,3,6,-3,-10,5,-2,3,2,-7,5,2,-7,8,6,-5]],[[5,-4,-5,-9,9,8,-7,-7,2,9,-6,-1,-1,-6,-10,-7],[-10,-6,-9,-10,9,2,-9,-6,-5,-10,5,-3,-8,-3,-2,3],[-3,-5,-4,-1,-2,-8,3,4,6,-8,-5,7,-2,2,-3,5],[4,8,-6,-10,3,-3,-1,-4,-1,9,-3,-7,-1,8,6,1],[5,9,-10,2,-6,-10,2,-7,4,8,6,-4,-6,10,8,-1],[1,-6,8,4,3,-4,-8,9,-9,-1,2,-2,8,10,5,8],[-3,9,-4,-7,7,-3,2,-6,7,-6,3,-7,1,-8,9,2],[-2,-3,-4,-5,-2,7,-10,-7,-2,-8,-2,-7,-2,-9,3,-5],[2,3,-10,8,-7,-8,-8,6,7,-5,8,-9,-9,5,10,8],[10,8,10,-4,1,-3,-4,-8,-2,-7,9,3,4,9,-10,6],[10,1,-1,6,4,10,-10,-8,-5,3,3,-1,5,-3,-9,-6],[6,-9,-2,-9,-8,-4,-9,-9,9,10,1,1,1,3,-4,9],[8,-4,-6,-7,-4,-1,5,-9,3,6,-1,9,10,2,-3,-3],[2,1,2,2,-1,1,4,-8,-1,2,1,4,5,7,-8,1],[10,7,2,-2,-4,-6,-6,5,1,1,-1,7,-2,4,-7,-9]],[[-8,2,8,10,-6,-10,3,10,-5,7,-6,9,-1,10,-1,4],[7,-7,10,7,-6,-10,2,-4,-1,-2,7,6,8,5,-5,7],[7,-9,3,-4,-2,-7,-2,-3,4,-3,9,-1,5,4,-5,4],[-7,8,10,9,4,-8,9,-3,-9,7,6,-2,-2,-3,-7,8],[9,-4,-7,10,-10,-10,-2,-5,-9,-6,8,4,-4,6,3,7],[-1,-2,3,10,2,6,4,2,2,6,6,2,8,-3,-4,-4],[1,-3,-8,10,6,-2,7,-2,2,3,-10,9,-4,9,-3,5],[9,-8,3,-6,6,-9,-4,4,-1,-7,1,-10,-8,-3,4,-5],[-5,9,-5,-9,5,-5,-9,6,-7,2,8,-3,3,-9,5,9],[9,2,-2,-4,-8,-7,-10,-8,7,5,4,-4,-5,3,5,1],[-9,-7,-3,2,-9,-8,-2,-6,-8,6,8,-8,-1,6,-4,-9],[10,-8,6,-6,-8,4,1,-1,-10,1,-5,2,4,1,6,3],[-5,-1,-2,3,-1,2,-6,3,9,3,-2,9,4,-6,-7,6],[-1,-2,4,-4,2,-7,8,2,3,-9,-2,-3,-8,5,-7,9],[8,2,5,-6,-10,7,4,-3,-7,-4,-3,-3,5,8,1,-9]]], dtype = "uint16")#candidate|6893|(8, 15, 16)|const|uint16
bop_6894 = relay.less(var_6892.astype('bool'), relay.reshape(const_6893.astype('bool'), relay.shape_of(var_6892))) # shape=(8, 15, 16)
var_6902 = relay.var("var_6902", dtype = "uint16", shape = (8, 15, 16))#candidate|6902|(8, 15, 16)|var|uint16
bop_6903 = relay.floor_divide(const_6893.astype('float64'), relay.reshape(var_6902.astype('float64'), relay.shape_of(const_6893))) # shape=(8, 15, 16)
uop_6908 = relay.asinh(bop_6903.astype('float64')) # shape=(8, 15, 16)
func_6483_call = mod.get_global_var('func_6483')
func_6484_call = mutated_mod.get_global_var('func_6484')
call_6918 = func_6483_call()
call_6919 = func_6483_call()
uop_6920 = relay.acos(uop_6908.astype('float64')) # shape=(8, 15, 16)
output = relay.Tuple([bop_6894,call_6918,uop_6920,])
output2 = relay.Tuple([bop_6894,call_6919,uop_6920,])
func_6922 = relay.Function([var_6892,var_6902,], output)
mod['func_6922'] = func_6922
mod = relay.transform.InferType()(mod)
var_6923 = relay.var("var_6923", dtype = "uint16", shape = (8, 15, 16))#candidate|6923|(8, 15, 16)|var|uint16
var_6924 = relay.var("var_6924", dtype = "uint16", shape = (8, 15, 16))#candidate|6924|(8, 15, 16)|var|uint16
output = func_6922(var_6923,var_6924,)
func_6925 = relay.Function([var_6923,var_6924,], output)
mutated_mod['func_6925'] = func_6925
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4739_call = mod.get_global_var('func_4739')
func_4740_call = mutated_mod.get_global_var('func_4740')
call_6930 = relay.TupleGetItem(func_4739_call(), 0)
call_6931 = relay.TupleGetItem(func_4740_call(), 0)
var_6933 = relay.var("var_6933", dtype = "float32", shape = (9, 4, 5))#candidate|6933|(9, 4, 5)|var|float32
bop_6934 = relay.logical_and(call_6930.astype('bool'), relay.reshape(var_6933.astype('bool'), relay.shape_of(call_6930))) # shape=(9, 4, 5)
bop_6937 = relay.logical_and(call_6931.astype('bool'), relay.reshape(var_6933.astype('bool'), relay.shape_of(call_6931))) # shape=(9, 4, 5)
func_6027_call = mod.get_global_var('func_6027')
func_6029_call = mutated_mod.get_global_var('func_6029')
call_6940 = relay.TupleGetItem(func_6027_call(), 0)
call_6941 = relay.TupleGetItem(func_6029_call(), 0)
uop_6952 = relay.sqrt(var_6933.astype('float64')) # shape=(9, 4, 5)
output = relay.Tuple([bop_6934,call_6940,uop_6952,])
output2 = relay.Tuple([bop_6937,call_6941,uop_6952,])
func_6955 = relay.Function([var_6933,], output)
mod['func_6955'] = func_6955
mod = relay.transform.InferType()(mod)
mutated_mod['func_6955'] = func_6955
mutated_mod = relay.transform.InferType()(mutated_mod)
var_6956 = relay.var("var_6956", dtype = "float32", shape = (9, 4, 5))#candidate|6956|(9, 4, 5)|var|float32
func_6955_call = mutated_mod.get_global_var('func_6955')
call_6957 = func_6955_call(var_6956)
output = call_6957
func_6958 = relay.Function([var_6956], output)
mutated_mod['func_6958'] = func_6958
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3900_call = mod.get_global_var('func_3900')
func_3902_call = mutated_mod.get_global_var('func_3902')
call_7000 = relay.TupleGetItem(func_3900_call(), 1)
call_7001 = relay.TupleGetItem(func_3902_call(), 1)
func_4036_call = mod.get_global_var('func_4036')
func_4040_call = mutated_mod.get_global_var('func_4040')
const_7006 = relay.const([6.846992,-9.539823,-0.540389,-8.782239,1.276872,5.375482,4.133220,3.677528,0.166601,3.552296,1.278576,-5.455466,6.441484,-3.361648,-0.290889,6.636058,6.469053,7.675378,6.144557,-7.809198,9.599663,2.497409,-9.216063,9.920293,8.696621,6.119246,5.690753,9.464368,-4.101158,8.990280,8.756957,-8.097852,4.112525,-7.215658,2.737245,4.483095,9.650606,9.146849,6.969479,4.563621,6.580276,1.283601,-4.741210,0.472529,-6.170134,5.396242,-8.040018,-3.856402,-0.003480,-2.551520,-5.913312,-4.723569,7.584897,9.618878,-8.759951,9.796836,0.481716,-3.079824,2.380364,-8.358264,2.620294,-9.352349,9.593422,9.911753,8.613359,5.993521,6.294787,7.369318,-2.758453,0.095707,3.181202,-5.876610,5.081812,1.891927,9.484546,-8.452885,2.376930,-6.587890,1.871833,-1.781806,7.097178,-2.633481,-4.385170,0.216764,-7.472020,7.227350,-1.668967,9.612790,4.492645,-6.881199,-4.350524,6.601829,6.223654,1.013857,5.273824,-0.118859,8.625359,2.959166,-2.989876,-9.374176,5.995681,1.634342,-6.780410,2.188415,3.369331,-5.162171,-7.534614,0.176919,9.440710,-7.463300,8.465097,8.045192,-3.656935,-3.415973,-8.218091,7.229470,-4.323825,1.338954,3.471380,-5.052491,-8.298880,3.270172,-3.998310,2.707531,6.970803,-7.498540,-5.893987,9.601945,-6.282711,4.977302,3.340819,-2.329593,6.567413,-5.455680,-4.384699,5.284296,9.119501,5.943585,-4.745450,0.236105,6.724172,-6.740079,8.282729,-7.798505,2.419333,-1.191256,-5.111833,-5.279061,-8.365589,5.719066,-9.914424,-9.720400,0.011269,3.612922,-4.856078,3.235801,6.129813,4.879104,2.924809,-0.097632,2.551987,2.517443,-5.451968,-8.746380,-9.892802,5.749914,-2.166027,-8.695719,-6.848802,2.215365,-6.111278,-6.659772,-4.929422,3.646163,6.985927,-5.803167,-1.518197,-9.004879,-5.809453,-9.268610,-0.822736,9.066476,2.260895,-3.334303,8.421119,-9.644379,-6.040468,4.231282,-7.101007,6.727295,9.103360,-2.995161,0.191930,-0.697485,4.369798,8.882989,-6.948911,3.531025,-8.772675,5.936237,7.010879,-5.619064,-7.129763,0.569993,-4.949530,-4.602299,-9.775128,2.228221,-1.555767,2.165139,-3.178887,9.740674,7.761256,-6.329753,8.632386,-5.920018,8.559047,-5.478624,-4.956507,-3.738140,-5.730278,-9.543175,-9.538101,9.620816,0.302224,-4.434748,9.967376,6.463836,-8.055284,-8.865972,7.617531,5.062443,4.409560,9.789184,4.727299,-2.650564,-2.636447,-0.833830,2.088041,1.233661,6.372266,-4.314482,-1.589290,6.404247,-4.943190,-4.316482,-6.762138,-4.280940,3.639440,-9.164118,-3.640970,0.556892,4.192086,5.813843,7.278737,-4.742181,-2.133192,2.448902,-8.997255,-3.249094,-3.963425,-3.803323,-2.741400,7.792506,-8.642439,-5.672042,-4.811610,-4.861087,8.147984,-5.820365,-7.688695,4.235948,-8.965754,4.410161,-7.565005,7.816639,-8.968372,0.851507,-5.219934,3.421745,-4.908869,0.343686,0.297675,1.859785,0.006282,6.871485,-0.259677,3.936384,7.188360,4.632302,-6.518606,-3.662629,-4.262055,0.086988,-0.717639,-3.416167,-9.156365,-6.498267,0.772548,-1.689336,6.660199,-9.343291,3.165649,-1.957999,2.131788,-9.639307,-9.569606,-4.998917,-0.088968,-8.972033,-0.103056,-4.510704,-3.822997,-5.865032,-9.831120,9.847148,-4.233798,5.070600,6.143409,-0.150095,8.346138,-0.599656,-1.030746,-0.813513,-3.383841,5.643668,0.374548,0.616024,-4.744139,3.914980,-5.388733,8.618902,4.649916,-2.378251,-0.610145,7.805038,3.545194,-1.373390,-7.997417,8.525614,0.932453,-3.457170,-7.157205,-5.829166,7.837193,4.554697,-5.255044,0.728415,3.694684,-2.817578,-8.050751,6.636024,0.121124,5.704873,-2.151169,-6.413661,-5.633201,0.684616,-6.187497,7.574305,1.130430,-8.812765,2.677579,2.536397,0.323004,2.579665,2.192165,-8.095331,-1.368271,6.417993,-7.448644,-3.648126,-2.073783,4.336983,3.373058,-0.928627,0.392541,9.847945,-6.239156,5.139421,-2.760129,-1.990178,5.050464,5.033759,-4.841568,-5.019720,-9.653033,2.173640,-9.078734,-7.614959,-7.436476,5.741290,7.228516,-2.897324,4.374614,5.819172,-9.820586,-8.477448,-0.201335,3.722755,-8.228106,9.769777,-4.579133,7.846047,3.183965,4.718624,-3.843737,9.873422,6.134284,-6.015336,5.256986,-4.449085,7.759149,7.887253,-5.529540,-2.457783,6.076311,-5.564765,4.785356,-2.387048,4.300344,-2.072489,-9.050414,3.458533,4.480559,2.500277,5.538879,7.514402,-8.603084,3.084056,9.371489,4.258055,3.782024,7.080199,7.869822,-8.767103,2.743169,-4.546678,-3.750042,7.399018,8.423966,0.168126,-2.530265,1.533565,4.939435,-2.175164,3.762311,4.666544,8.242563,0.597960,4.817205,8.192119,-5.685813,-7.401282,8.884283,-1.181620,-1.380524,1.427960,-5.324558,0.290179,5.462786,9.771825,8.947182,-4.162133,5.610032,4.115293,5.414471,6.949697,9.070924,-9.988856,6.487397,4.441066,-7.534640,-3.980356,-2.085228,8.094344,8.179182,-3.866453,4.714385,5.782146,-7.230435,9.496592,5.654615,7.415566,5.160055,9.028239,-4.077131,-4.175961,-9.849715,-8.877479,0.942630,-8.437661,-0.551037,5.483734,3.994725,-4.014117,-5.357179,9.321268,-7.413026,-8.875550,1.911851,-2.455731,-4.531794,-7.763809,9.937918,6.248958,-6.286135,-6.621949,-7.075747,7.094957,-5.273873,3.851285,1.085998,2.760367,1.174074,0.350951,4.202066,6.393711,0.597243,-7.711507,-8.256385,5.459162,-7.922893,3.971856,2.414133,-1.571557,-2.119758,-9.043958,9.021201,9.346602,3.023080,7.816961,-5.766912,3.121036,-0.516288,-4.368881,3.036716,-7.333389,7.754731,3.843765,-5.016749,0.280658,9.439394,-8.564390,6.157059,-4.881612,6.667966,2.925849,-0.191234,6.872660,5.983098,8.109504,5.483552,-3.065145,0.583719,7.362268,3.682912,-9.278601,4.151958,9.281173,-2.196364,8.234285,1.208398,5.929344,1.968642,7.136600,-1.065156,-5.777866,-9.923636,9.134973,-9.139883,5.655479,5.415275,-3.840577,-2.169813,2.681190,3.246820,-0.339674,9.460290,-0.873246,-7.310009,9.534914,-0.606717,-6.010642,-6.543893,-7.488042,9.580366,5.948563,8.152897,6.073165,8.157627,-9.375651,9.454228,-5.059501,-5.871898,-0.753904,-8.198676,-1.648788,8.705851,3.160050,-3.856569,-9.700181,1.972480,-2.236600,5.194920,-6.851339,-8.538591,-1.427522,-4.989699,-1.182557,0.079013,7.298257,1.253582,2.924846,2.873886,-6.534383,-9.421234,9.895913,-7.319207,3.135780,5.334709,1.086469,-6.379465,8.764056,-5.260901,-7.250580,-2.195607,4.614186,0.855730,-5.743984,8.859307,-0.139331,5.254213,5.904794,3.258433,-5.389104,-4.130141,-0.435747,2.474248,5.269291,3.508469,7.296951,-9.512909,4.027532,2.874463,-7.344531,7.974198,1.188429,-3.495358,-3.186386,4.184659,-6.503255,-8.023406,-5.954117,-3.953639,8.475472,9.455698,-5.409492,8.508147,4.600326,9.753886,5.093728,-0.043753,-4.361064,7.522589,-5.015430,0.837100,5.467871,3.081546,2.344144,5.928335,-3.716693,4.285785,-5.321644,-0.640080,-7.870549,2.901628,-2.506671,-6.409579,-6.760720,-4.760305,-7.922771,3.788382,2.302772,5.746549,0.880785,-4.781074,-8.361166,-2.089461,-2.261930,-3.922494,-4.396994,3.082537,-3.718922,9.179200,5.912602,9.076540,4.971743,6.125632,-5.712778,3.029677,-5.461044,1.800423,-1.643288,5.382275,-8.109213,3.619351,-5.514537,-1.607992,-4.150940,2.936010,0.056965,3.954339,-8.554693,2.664184,3.947785,-0.280098,-2.717566,-6.436105,2.791523,-2.311772,-4.060364,-7.471436,-8.853886,4.862484,2.593804,-8.171759,3.903419,2.450629,4.301981,-1.654402,-1.968641,-0.747857,-4.581799,9.832323,-7.758286,-3.622239,7.870913,4.382423,7.217675,-2.060741,-5.991340,8.535819,-4.996274,7.703410,6.065616,-8.082576,-5.136564,8.901609,-5.361387,-8.452609,-4.026077,1.865430,2.241735,0.905009,5.033309,8.389582,-3.252989,4.528026,-4.588012,-2.843393,3.554407,0.253368,1.385515,-0.938150,0.097012,0.492071,9.717440,4.534496,1.678670,0.169474,-2.206714,-4.497863,9.205938,9.594764,-3.581060,-1.365049,-2.611738,7.002594,-0.267352,6.438746,-3.583705,9.607629,1.409286,2.293257,2.188781,4.607661,1.221470,-6.204128,-3.627207,-8.651505,-9.726131,-5.720968,-5.713188,-2.693048,8.518105,-4.889830,-2.650744,-3.858384,-5.727547,1.006465,-2.487138,8.638163,-8.611915,8.221670,4.278659,-4.729968,-9.397487,3.590854,-7.433263,9.765892,0.048728,-9.459682,7.962327,-5.299170,-3.755717,1.828739,-3.574939,-9.400982,-6.191427,9.643008,-4.908896,6.200939,-4.223954,8.814199,6.781716,6.361794,2.613155,-3.687582,-7.314491,-9.870687,-4.604261,1.659082,5.068511,-0.156738,2.003959,5.816813,0.580578,-5.677751,4.345644,-5.875295,-2.771296,-3.232481,3.153948,-9.906041,8.368730,-5.145897,-5.919065,-4.397425,-5.631903,-1.459239,1.099282,0.833605,-5.431303,-8.836775,9.373313,-3.135926,-6.496424,2.467169,-3.413781,5.486218,2.946049,0.344344,-7.510719,0.146714,-8.717746,-3.277618,0.471138,-1.276491,-8.010951,-7.226128,-7.370909,6.656074,4.917637,-2.503367,4.833392,6.190091,-2.458268,-0.765738,-3.780923,4.559508,4.585080,-6.644607,4.972732,1.188059,-8.103408,1.930327,-2.428838,8.407570,-9.712979,4.834723,-3.167366,-3.395034,-2.822166,6.665074,-5.864885,5.694375,-4.907835,-3.748753,9.277579,2.860951,1.281810,-5.154043,-1.326180,9.040072,2.812236,-7.669558,4.604703,-0.700794,2.252642,8.455315,-4.199978,-3.672365,-1.813366,-8.809594,-1.465717,9.847047,8.333294,7.399019,-4.034857,-6.656492,-9.706157,3.222011,8.294939,5.597974,0.251327,-6.899836,1.805166,-8.292680,7.242928,2.905293,6.568549,-3.044096,-7.218521,-5.997692,-0.364339,6.026763,7.951122,0.812975,-0.967722,9.201441,0.079881,-1.418715,-9.343803,-3.447015,2.083996,4.887541,0.602949,4.622346,-0.151990,-1.915067,-3.609510,7.820101,-5.939667,-5.776896,7.434058,-6.228767,5.449224,1.553020,2.642440,-1.090503,-6.890952,0.095781,8.312056,5.588877,-5.693090,-8.037920,1.141342,-0.568109,-5.743692,9.429791,6.475789,-3.482446,-9.427859,-7.383288,-4.174596,-9.249379,1.136417,-0.771903,9.600332,-2.061616,9.614668,-8.307029,-8.001570,-6.254628,-8.515413,-2.468886,7.281465,-4.199655,-0.257082,6.251196,4.454544,8.973197,-0.153660,5.549459,-3.804626,6.465334,1.267003,-3.760127,2.592250,-2.353590,-1.973047,9.410922,-5.366099,5.559531,-9.691371,4.833463,6.468266,-2.772987,-0.328213,7.890825,9.276707,-7.130775,-8.111541,-6.027995,9.665776,9.362374,0.215298,1.956580,0.530992,4.486123,4.361599,1.130871,4.965759,-1.319730,-8.551456,-6.545798,2.186201,-7.946902,-9.679762,3.197412,4.353767,5.501689,9.231127,-1.574810,-8.447793,-6.335844,-9.787811,-5.416831,-2.512076,3.371457,-7.173138,-3.889992,-8.268841,7.055711,-9.445063,-5.971743,-6.306628,-2.423461,-6.923618,-6.247121,-3.445497,1.978385,-0.460054,6.145518,-2.402495,3.474433,-0.111645,-6.340411,-2.175988,4.884842,-5.437842,7.473986,-3.424187,-0.119621,-0.106484,3.889693,-6.240073,-3.103902,-3.986853,7.491640,-8.566156,1.805146,-9.128376,-6.182653,8.808124,7.494328,6.187205,-5.288440,2.622388,8.207654,8.903592,-7.175793,4.147009,3.299351,-9.443856,-0.972111,3.259405,-2.435460,-2.925739,2.087903,-4.542476,5.435289,1.339610,4.123191,1.607390,-8.132987,1.242039,-0.883584,2.295292,-7.114147,-5.172701,4.247536,-8.588657,3.589333,-5.343653,5.714472,-2.890170,-2.225419,-4.685136,-1.206203,-0.632118,5.226067,4.800159,-9.926644,9.386819,6.689731,-5.019516,6.505695,-2.701756,4.888949,1.704476,3.214989,1.626100,0.289677,-7.073945,5.361479,6.414839,-3.601983,-0.451094,7.674295,-0.107489,9.698497,9.179124,1.106088,-7.158435,-9.625119,2.447670,0.727876,-2.962146,9.909351,-1.399299,4.039954,9.810111,-9.433794,0.357889,2.434052,-4.143076,-5.249775,2.765040,4.140402,-7.220756,-1.016629,-6.119134,-3.453834,-7.594720,9.563242,7.718307,-5.532057,-7.843259,-2.297352,6.693709,4.434412,3.380955,0.293893,-2.426369,-0.568526,2.368496,-8.943419,-7.812083,-2.910621,-0.999007,6.128313,-4.589869,-1.193018,-4.996982,-1.068210,-8.355687,-3.338134,6.617479,4.201513,-4.930579,-5.897397,-2.512159,6.489479,-2.656250,2.069845,2.674809,-2.209741,4.034988,0.432526,6.121395,6.935292,7.494199,6.315219,4.519672,-3.701329,-1.643262,9.764890,-6.540017,3.944762,-7.592702,7.438100,0.125943,-1.133240,7.148493,0.690673,8.791853,-7.975121,-1.030967,-0.598754,-7.208101,1.991572,9.450875,8.529044,-5.127120,-6.660987,-3.214211,-4.888030,5.663500,-4.556884,-6.000645,-0.945427,-0.570325,5.150301,-9.350444,-2.860399,-1.151678,-8.048764,6.980186,0.308812,-5.576749,-1.035187,-1.711506,7.764888,3.640295,-6.306285,3.783709,-1.181386,2.861356,-1.889540,7.093392,6.843997,-1.431739,9.415960,6.309753,9.295831,2.553392,-5.174402,8.612990,3.372257,0.472258,-9.426643,-5.340969,-0.802180,-8.882515,-4.951739,-3.501198,-5.969079,6.523582,-4.188892,-7.827343,-5.325796,3.292777,5.442215,-8.921444,-1.473587,-8.550979,-6.286217,5.066670,2.625668,8.808453,2.083609,0.702575,0.727171,1.755148,3.688792,5.588110,4.554765,0.444800,6.144591,-3.846032,7.070545,1.924945,3.634749,2.920494,-7.923017,-9.286221,-4.471013,1.355131,-9.649175,6.980587,6.155877,-3.946244,8.173529,0.655158,4.183327,-7.851505,1.326493,9.288573,-6.339695,8.527149,0.200378,-6.186598,4.456770,8.496519,3.420723,2.931159,-4.753248,7.017661,5.491180,-8.229925,-1.005908,-0.600081,-2.617769,7.973600,-8.230343,-4.256788,-5.559953,4.710291,-3.424834,-5.507720,1.064252,-2.315545,2.699626,0.534942,2.105779,8.453902,9.994969,5.759301,4.148726,-8.839004,3.915394,-6.247063,-3.919578,6.532687,-5.022842,-3.909800,9.510632,7.401982,-5.466059,-3.795606,2.144772,-4.000474,5.987111,-6.621134,-6.253874,-5.414087,8.771677,9.684453,-1.255667,5.179113,-9.793311,-3.895297,-9.177042,-9.437938,-9.621741,-7.951524,3.323283,-3.361191,-6.906533,0.169767,-0.252086,-0.473086,-8.149408,9.823126,-4.941419,-0.739785,-3.479272,3.466827,-0.592497,2.636504,-2.001188,-3.811457,-6.785920,-8.459200,-3.552231,4.435530,2.189455,-6.521267,-6.475222,-2.145217,-4.910154,7.179429,8.060348,-0.898308,5.354530,-6.137172,8.180005,9.282485,-2.120406,4.558105,2.644881,8.592466,-6.616918,0.092186,5.808554,-6.957912,-3.372893,-2.500807,-6.274034,6.078575,-0.582198,9.965074,2.506742,-2.789347,-2.560022,-4.507064,-6.866881,-3.920519,4.838930,3.823355,6.937782,0.047192,-8.672453,6.347075,-3.656534,-1.430802,-4.985492,-5.421138,-7.332666,1.606639,-3.422119,-4.932953,1.093902,-7.866686,-6.317163,0.418600,1.155592,8.650976,-6.517393,-4.237714,-6.794401,-3.716156,-0.996299,-6.186124,6.347398,4.130666,7.736972,-2.655546,-7.941715,4.151467,9.582912,-9.994700,9.577178,-5.060043,-3.301244,-2.512250,0.391396,8.502516,-9.254917,-9.625083,-4.029438,1.206253,4.008269,-4.560659,-2.218158,6.387742,7.235480,-8.470115,0.864008,-2.558297,2.192870,-0.171356,2.680196,-8.899241,0.062940,0.749532,-9.962738,1.623208,6.099114,3.108848,-2.427626,6.914759,-6.786632,-3.107091,-7.358374,6.472307,-1.743670,-7.227602,-1.717468,4.428688,0.920798,1.135847,7.598022,5.926561,-8.575278,0.444134,0.619756,-9.446726,-9.997108,-2.279030,-8.441770,4.763178,7.971743,-8.604284,-6.916548,-3.670908,5.802629,-8.857051,-7.038090,7.139973,-1.143079,3.884448,3.007780,-6.977827,2.991930,-9.466625,-1.430731,-0.689746,2.686635,7.329887,-1.290838,6.202129,0.464806,-5.844910,8.224859,4.997456,-8.506433,-6.119667,-5.797755,-2.022102,7.543449,7.158396,-2.654642,5.886220,1.343699,2.889577,-4.519603,9.091532,-9.640766,-2.398186,7.013827,-4.584153,-1.717804,4.716356,0.687039,-8.260234,-3.398869,-7.991763,0.696762,-8.276900,3.802144,-7.252434,-7.223495,8.243516,-1.243841,-0.423508,3.620996,1.290717,7.286287,3.386549,-1.191204,9.237181,5.248842,9.046201,-4.039615,0.212553,-5.906632,8.584653,0.067255,8.801682,-7.327764,9.808899,-0.133387,-5.609662,3.333929,-7.712871,8.079063,-1.014533,-5.338123,-0.260165,2.557735,-0.065286,9.546090,-3.628634,-0.501227,-2.783421,-2.290920,4.837721,8.106862,-4.160441,7.000525,-7.176384,5.048338,5.106511,5.564285,-8.055111,-8.907386,-4.163486,-6.550615,-6.317772,-6.808706,-1.921171,6.854012,-9.589881,5.631349,3.954898,7.080815,0.442460,6.304308,-1.142363,-0.975869,0.904872,1.945868,3.017077,9.614997,0.339870,-3.123052,-0.305308,5.030810,-5.592863,1.494462,0.785942,-0.279810,3.550479,5.350581,-7.612751,-8.265984,-6.865033,7.523658,-2.711924,-9.663784,-5.288516,4.418066,-5.236426,1.515583,7.001089,-2.228168,-7.476792,8.831623,-6.662997,7.501811,2.054797,9.333303,-1.182980,8.416420,7.883870,-1.794671,-0.334905,-5.137664,-9.823049,-5.696236,-8.764556,-3.827175,7.607451,0.644376,-7.420063,-5.592618,-1.591691,-2.556525,-4.053841,1.109177,8.383552,7.589110,4.944034,-2.222825,-2.941284,0.177459,5.894863,7.106251,-2.583225,6.833033,3.486856,-5.507756,6.281912,-7.950936,-3.604997,2.646925,1.160590,7.793018,-4.349271,-6.279142,-6.814580,3.775253,4.162295,-7.525686,6.786671,9.292722,2.919307], dtype = "float64")#candidate|7006|(1680,)|const|float64
call_7005 = relay.TupleGetItem(func_4036_call(relay.reshape(const_7006.astype('float64'), [8, 15, 14]), relay.reshape(const_7006.astype('float64'), [8, 15, 14]), relay.reshape(call_7000.astype('float32'), [1980,]), ), 1)
call_7007 = relay.TupleGetItem(func_4040_call(relay.reshape(const_7006.astype('float64'), [8, 15, 14]), relay.reshape(const_7006.astype('float64'), [8, 15, 14]), relay.reshape(call_7000.astype('float32'), [1980,]), ), 1)
output = relay.Tuple([call_7000,call_7005,const_7006,])
output2 = relay.Tuple([call_7001,call_7007,const_7006,])
func_7008 = relay.Function([], output)
mod['func_7008'] = func_7008
mod = relay.transform.InferType()(mod)
mutated_mod['func_7008'] = func_7008
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7008_call = mutated_mod.get_global_var('func_7008')
call_7009 = func_7008_call()
output = call_7009
func_7010 = relay.Function([], output)
mutated_mod['func_7010'] = func_7010
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3720_call = mod.get_global_var('func_3720')
func_3722_call = mutated_mod.get_global_var('func_3722')
call_7011 = relay.TupleGetItem(func_3720_call(), 0)
call_7012 = relay.TupleGetItem(func_3722_call(), 0)
func_3036_call = mod.get_global_var('func_3036')
func_3037_call = mutated_mod.get_global_var('func_3037')
call_7018 = relay.TupleGetItem(func_3036_call(), 0)
call_7019 = relay.TupleGetItem(func_3037_call(), 0)
func_3868_call = mod.get_global_var('func_3868')
func_3869_call = mutated_mod.get_global_var('func_3869')
call_7024 = relay.TupleGetItem(func_3868_call(), 0)
call_7025 = relay.TupleGetItem(func_3869_call(), 0)
func_6636_call = mod.get_global_var('func_6636')
func_6639_call = mutated_mod.get_global_var('func_6639')
const_7042 = relay.const([[9.999674,-6.268803,5.229754,-0.671676],[-9.355153,-9.968882,3.938897,-2.553460],[-1.089884,-0.680958,-3.172663,2.967385],[7.308950,4.308768,-0.633345,8.992551],[-9.338428,-7.903343,-0.754752,-6.760020],[-8.869282,-6.818894,3.197244,0.120731],[9.783106,-0.909904,8.225614,-9.215357],[-2.128472,-1.935436,6.370759,5.155880],[1.903524,6.544688,-8.642292,-7.632224],[7.849841,-9.379068,-3.974274,-5.802991],[0.279496,4.298958,4.834970,-3.048672],[2.426964,-1.277220,-9.446520,-2.932241],[5.593835,-1.143410,2.335596,-9.865376],[0.574161,5.831163,6.308840,7.291426],[2.706440,3.967440,-6.947819,-0.570139],[-6.669884,-5.259342,-9.259272,6.345405],[9.416548,2.963562,-5.963371,1.650726],[3.153441,7.218145,-1.303290,0.203921],[0.346793,-0.420394,-8.762253,3.866334],[7.853044,-9.174351,-9.579773,4.516484],[7.950683,-9.722689,7.757392,9.504242],[4.571603,1.541329,6.969672,5.598272],[4.194950,-9.066750,-8.675958,-9.698576],[9.906149,-2.301664,-5.141283,2.461275],[-1.660678,-9.109636,9.844057,-2.053166],[-5.392657,7.878647,1.966880,9.977722],[-3.758786,-6.872216,9.774101,9.744569],[8.459058,2.121781,7.501324,1.113419],[-2.979408,6.713633,9.343742,-4.315042],[2.295978,5.394758,-5.656056,7.501118],[-8.926821,-4.902318,7.077842,3.626798],[8.726777,-6.393543,8.966303,-6.028857],[1.897949,-6.422112,-5.128956,8.543259],[-9.109183,-2.847654,6.598350,9.348067],[8.443599,9.872678,2.735693,-8.165114],[6.457396,-0.769890,-0.544819,6.662712],[-8.518206,2.298689,-8.001125,0.493605],[3.999602,-2.587096,0.299045,7.467268],[5.193592,2.341653,0.629505,2.488640],[1.998513,4.402119,-3.665486,6.336125],[-7.483007,1.853673,4.471563,0.287708],[-7.984868,8.745790,-7.888350,9.512111],[-2.083295,-9.154645,-8.782242,-9.421916],[6.325839,5.123799,-4.762633,0.539570],[9.980776,-7.264664,4.745093,-4.363140],[7.188251,6.369947,-5.268501,7.372045],[-2.713109,-3.960887,6.025509,-6.733417],[-5.657119,-5.877502,-4.118212,-2.454525],[0.699403,5.244980,-7.554014,-6.596488],[2.521626,5.591419,-4.716909,-0.041552]], dtype = "float64")#candidate|7042|(50, 4)|const|float64
call_7041 = relay.TupleGetItem(func_6636_call(relay.reshape(const_7042.astype('float64'), [8, 5, 5])), 1)
call_7043 = relay.TupleGetItem(func_6639_call(relay.reshape(const_7042.astype('float64'), [8, 5, 5])), 1)
output = relay.Tuple([call_7011,call_7018,call_7024,call_7041,const_7042,])
output2 = relay.Tuple([call_7012,call_7019,call_7025,call_7043,const_7042,])
func_7050 = relay.Function([], output)
mod['func_7050'] = func_7050
mod = relay.transform.InferType()(mod)
mutated_mod['func_7050'] = func_7050
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7050_call = mutated_mod.get_global_var('func_7050')
call_7051 = func_7050_call()
output = call_7051
func_7052 = relay.Function([], output)
mutated_mod['func_7052'] = func_7052
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3301_call = mod.get_global_var('func_3301')
func_3303_call = mutated_mod.get_global_var('func_3303')
call_7065 = relay.TupleGetItem(func_3301_call(), 0)
call_7066 = relay.TupleGetItem(func_3303_call(), 0)
output = call_7065
output2 = call_7066
func_7068 = relay.Function([], output)
mod['func_7068'] = func_7068
mod = relay.transform.InferType()(mod)
mutated_mod['func_7068'] = func_7068
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7068_call = mutated_mod.get_global_var('func_7068')
call_7069 = func_7068_call()
output = call_7069
func_7070 = relay.Function([], output)
mutated_mod['func_7070'] = func_7070
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3720_call = mod.get_global_var('func_3720')
func_3722_call = mutated_mod.get_global_var('func_3722')
call_7121 = relay.TupleGetItem(func_3720_call(), 0)
call_7122 = relay.TupleGetItem(func_3722_call(), 0)
output = relay.Tuple([call_7121,])
output2 = relay.Tuple([call_7122,])
func_7131 = relay.Function([], output)
mod['func_7131'] = func_7131
mod = relay.transform.InferType()(mod)
mutated_mod['func_7131'] = func_7131
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7131_call = mutated_mod.get_global_var('func_7131')
call_7132 = func_7131_call()
output = call_7132
func_7133 = relay.Function([], output)
mutated_mod['func_7133'] = func_7133
mutated_mod = relay.transform.InferType()(mutated_mod)
const_7299 = relay.const([[[-7,7,-4],[4,-4,-5],[-4,3,-6]],[[8,-9,8],[10,8,-5],[6,-2,7]]], dtype = "uint64")#candidate|7299|(2, 3, 3)|const|uint64
var_7300 = relay.var("var_7300", dtype = "uint64", shape = (2, 3, 3))#candidate|7300|(2, 3, 3)|var|uint64
bop_7301 = relay.add(const_7299.astype('uint64'), relay.reshape(var_7300.astype('uint64'), relay.shape_of(const_7299))) # shape=(2, 3, 3)
func_2047_call = mod.get_global_var('func_2047')
func_2049_call = mutated_mod.get_global_var('func_2049')
call_7315 = func_2047_call()
call_7316 = func_2047_call()
output = relay.Tuple([bop_7301,call_7315,])
output2 = relay.Tuple([bop_7301,call_7316,])
func_7319 = relay.Function([var_7300,], output)
mod['func_7319'] = func_7319
mod = relay.transform.InferType()(mod)
var_7320 = relay.var("var_7320", dtype = "uint64", shape = (2, 3, 3))#candidate|7320|(2, 3, 3)|var|uint64
output = func_7319(var_7320)
func_7321 = relay.Function([var_7320], output)
mutated_mod['func_7321'] = func_7321
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2696_call = mod.get_global_var('func_2696')
func_2697_call = mutated_mod.get_global_var('func_2697')
call_7362 = func_2696_call()
call_7363 = func_2696_call()
func_6850_call = mod.get_global_var('func_6850')
func_6852_call = mutated_mod.get_global_var('func_6852')
call_7373 = func_6850_call()
call_7374 = func_6850_call()
output = relay.Tuple([call_7362,call_7373,])
output2 = relay.Tuple([call_7363,call_7374,])
func_7376 = relay.Function([], output)
mod['func_7376'] = func_7376
mod = relay.transform.InferType()(mod)
output = func_7376()
func_7377 = relay.Function([], output)
mutated_mod['func_7377'] = func_7377
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2000_call = mod.get_global_var('func_2000')
func_2002_call = mutated_mod.get_global_var('func_2002')
call_7478 = func_2000_call()
call_7479 = func_2000_call()
func_4311_call = mod.get_global_var('func_4311')
func_4314_call = mutated_mod.get_global_var('func_4314')
const_7516 = relay.const([-1.624404,-5.043221,5.521537,5.434615,8.984488,0.917060,2.186102,0.845422,-1.354990,-6.548856,6.443195,-4.437878,7.316142,1.536226,2.743453,3.474185,4.954780,4.684735,4.191905,-7.744769,-8.754599,7.188398,0.294506,2.230884,6.506814,2.964451,-7.771089,-3.398375,6.629357,-0.968739,-8.362217,5.148296,9.219931,-6.073433,5.133854,7.422745,5.604014,8.913967,-6.875827,-4.071957,1.833179,-0.440073,7.399029,6.036586,-9.587245,-7.228338,6.249686,-4.726020,-5.732013,-3.968044,4.164656,2.778594,-6.240377,5.938626,1.619152,-0.177892,1.565725,-7.841897,1.415470,-4.485279,-5.329909,-3.763232,-1.055608,-4.851422,-3.770230,-5.894510,6.730403,-0.381892,9.699751,-4.794405,7.094335,6.802583,2.643213,-0.432592,0.041757,-5.284254,7.180623,0.641884,4.579463,-5.718206,-0.261084,9.589832,-7.770387,-6.553507,7.183095,9.704025,5.906911,-9.701078,-2.779485,-1.781845,3.360431,0.631620,4.004240,-8.063046,5.932027,-6.344219,0.453190,0.575694,1.902862,2.190935,-4.519276,-3.065152,2.632143,-0.194787,1.290960,6.982101,5.580812,7.463768,-5.292734,0.252740,-8.460040,2.097210,7.215015,0.143754,-1.942964,6.487921,1.541942,0.331722,-1.822551,2.407394,-5.541095,-8.974238,9.413954,-2.750424,8.427363,3.392512,-6.904524,-2.806849,8.545766,-7.113230,-7.131551,-6.211628,6.791444,8.441408,6.799052,9.829315,0.077538,4.504660,0.724053,-3.396614,9.743871,-5.431277,1.241692,7.044456,3.401055,-0.166310,-3.881081,0.131037,-4.655495,7.112744,1.672425,3.741843,3.152848,-9.890587,3.057710,6.419578,-4.477015,-3.476597,-2.194638,8.269618,7.619244,-2.605149,-7.042916,-6.534031,-6.290269,4.580109,-8.653239,-2.297040,9.690690,8.373768,-5.680976,-1.907426,-1.747558,-0.056994,-0.831931,-4.578237,2.847726,3.095518,2.783970,9.580791,-6.013244,7.174867,4.022641,-5.547077,-5.013197,1.120564,-4.181042,-4.016104,-9.680333,-9.655767,-6.589067,3.495580,6.915653,7.857110,-3.620407,-1.314499,5.698583,7.947129,1.103725,-3.476560,6.042633,-5.038145,3.982118,2.006314,8.051303,-5.457434,-5.435257,-3.314403,5.284858,-4.494948,-1.086090,-9.128115,3.972672,-7.289364,8.915079,-0.582336,0.541087,-4.743472,1.483375,-9.474305,0.239516,-8.055330,-4.551515,0.133143,7.272059,1.558602,-6.986393,6.910950,-8.505379,8.118145,-7.060693,-0.533226,-5.286653,-6.614557,-5.593401,2.990527,-4.195607,-8.537837,-7.822857,-4.229868,1.530570,5.820854,0.306980,0.999682,-8.146788,9.928301,6.635780,-2.058025,-3.683766,0.435931,-4.172098,2.843937,8.983124,4.660239,8.973445,9.282659,-1.895070,2.815517,8.234911,3.533404,9.812052,2.267865,-4.353639,-2.714111,-5.901376,-3.199577,-4.488866,8.408357,1.584056,2.400139,-8.904731,1.495041,4.407002,-7.946479,-4.434904,9.447934,-1.637653,-8.433968,-6.375822,-4.468094,-4.068549,3.589145,-9.330666,-9.188083,-1.703992,-2.264187,-0.104298,5.933507,-9.803819,6.303008,0.510688,-6.507716,7.683691,-0.879031,-6.924736,-2.954953,3.959842,0.792224,4.075671,0.155757,-6.251669,-8.643688,-8.919490,-9.881743,-2.227539,8.672474,-2.475441,8.360541,-4.916765,-1.867148,-9.266299,0.661434,-0.377383,2.244889,9.862178,7.020209,7.604868,-7.742358,1.976634,-4.710982,-2.874279,2.819529,-3.286514,-4.459047,4.731618,1.202817,-4.366723,5.844991,6.279347,-4.136271,-8.551863,-3.455376,3.198542,9.141338,-7.983270,-6.798477,4.211347,6.992161,3.755409,-1.363792,-0.224091,-5.111275,-0.884824,-1.718367,4.105383,-6.797663,-7.875686,6.437679,-0.670628,6.686955,-6.317290,7.816084,3.655855,8.576483,9.206626,9.511616,2.466140,-7.202195,-7.805750,-6.409452], dtype = "float64")#candidate|7516|(360,)|const|float64
call_7515 = relay.TupleGetItem(func_4311_call(relay.reshape(const_7516.astype('float64'), [360,])), 8)
call_7517 = relay.TupleGetItem(func_4314_call(relay.reshape(const_7516.astype('float64'), [360,])), 8)
func_7376_call = mod.get_global_var('func_7376')
func_7377_call = mutated_mod.get_global_var('func_7377')
call_7526 = relay.TupleGetItem(func_7376_call(), 1)
call_7527 = relay.TupleGetItem(func_7377_call(), 1)
func_4311_call = mod.get_global_var('func_4311')
func_4314_call = mutated_mod.get_global_var('func_4314')
call_7528 = relay.TupleGetItem(func_4311_call(relay.reshape(call_7515.astype('float64'), [360,])), 1)
call_7529 = relay.TupleGetItem(func_4314_call(relay.reshape(call_7515.astype('float64'), [360,])), 1)
func_4868_call = mod.get_global_var('func_4868')
func_4870_call = mutated_mod.get_global_var('func_4870')
call_7541 = relay.TupleGetItem(func_4868_call(), 0)
call_7542 = relay.TupleGetItem(func_4870_call(), 0)
func_3188_call = mod.get_global_var('func_3188')
func_3191_call = mutated_mod.get_global_var('func_3191')
call_7549 = relay.TupleGetItem(func_3188_call(relay.reshape(call_7515.astype('float64'), [360,])), 1)
call_7550 = relay.TupleGetItem(func_3191_call(relay.reshape(call_7515.astype('float64'), [360,])), 1)
func_6760_call = mod.get_global_var('func_6760')
func_6762_call = mutated_mod.get_global_var('func_6762')
call_7554 = relay.TupleGetItem(func_6760_call(), 2)
call_7555 = relay.TupleGetItem(func_6762_call(), 2)
output = relay.Tuple([call_7478,call_7515,const_7516,call_7526,call_7528,call_7541,call_7549,call_7554,])
output2 = relay.Tuple([call_7479,call_7517,const_7516,call_7527,call_7529,call_7542,call_7550,call_7555,])
func_7582 = relay.Function([], output)
mod['func_7582'] = func_7582
mod = relay.transform.InferType()(mod)
mutated_mod['func_7582'] = func_7582
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7582_call = mutated_mod.get_global_var('func_7582')
call_7583 = func_7582_call()
output = call_7583
func_7584 = relay.Function([], output)
mutated_mod['func_7584'] = func_7584
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3301_call = mod.get_global_var('func_3301')
func_3303_call = mutated_mod.get_global_var('func_3303')
call_7603 = relay.TupleGetItem(func_3301_call(), 1)
call_7604 = relay.TupleGetItem(func_3303_call(), 1)
output = relay.Tuple([call_7603,])
output2 = relay.Tuple([call_7604,])
func_7606 = relay.Function([], output)
mod['func_7606'] = func_7606
mod = relay.transform.InferType()(mod)
mutated_mod['func_7606'] = func_7606
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7606_call = mutated_mod.get_global_var('func_7606')
call_7607 = func_7606_call()
output = call_7607
func_7608 = relay.Function([], output)
mutated_mod['func_7608'] = func_7608
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5895_call = mod.get_global_var('func_5895')
func_5896_call = mutated_mod.get_global_var('func_5896')
call_7614 = func_5895_call()
call_7615 = func_5895_call()
func_3676_call = mod.get_global_var('func_3676')
func_3677_call = mutated_mod.get_global_var('func_3677')
call_7649 = relay.TupleGetItem(func_3676_call(), 0)
call_7650 = relay.TupleGetItem(func_3677_call(), 0)
output = relay.Tuple([call_7614,call_7649,])
output2 = relay.Tuple([call_7615,call_7650,])
func_7651 = relay.Function([], output)
mod['func_7651'] = func_7651
mod = relay.transform.InferType()(mod)
mutated_mod['func_7651'] = func_7651
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7651_call = mutated_mod.get_global_var('func_7651')
call_7652 = func_7651_call()
output = call_7652
func_7653 = relay.Function([], output)
mutated_mod['func_7653'] = func_7653
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6083_call = mod.get_global_var('func_6083')
func_6085_call = mutated_mod.get_global_var('func_6085')
call_7667 = relay.TupleGetItem(func_6083_call(), 0)
call_7668 = relay.TupleGetItem(func_6085_call(), 0)
output = call_7667
output2 = call_7668
func_7685 = relay.Function([], output)
mod['func_7685'] = func_7685
mod = relay.transform.InferType()(mod)
mutated_mod['func_7685'] = func_7685
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7685_call = mutated_mod.get_global_var('func_7685')
call_7686 = func_7685_call()
output = call_7686
func_7687 = relay.Function([], output)
mutated_mod['func_7687'] = func_7687
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5215_call = mod.get_global_var('func_5215')
func_5216_call = mutated_mod.get_global_var('func_5216')
call_7718 = relay.TupleGetItem(func_5215_call(), 0)
call_7719 = relay.TupleGetItem(func_5216_call(), 0)
func_2300_call = mod.get_global_var('func_2300')
func_2302_call = mutated_mod.get_global_var('func_2302')
call_7722 = func_2300_call()
call_7723 = func_2300_call()
const_7727 = relay.const([[[4.209444,-9.866278,9.217139,6.877313,7.821870,9.582407,-9.453580,1.027002],[4.840112,7.472816,-3.595611,-9.351661,0.711513,9.663022,-9.633047,2.560713],[2.875767,-2.872325,-4.521007,-0.849405,-0.503033,1.414385,6.683823,-3.612362],[-4.068777,-2.151199,-7.145158,7.243497,0.868914,-1.441062,9.750091,3.668541],[1.647529,-3.265898,3.268245,-8.231044,-8.390136,-8.364040,-7.651483,-4.513038],[8.957585,0.121471,5.315862,1.825505,5.694094,4.402912,4.977277,8.433477],[-5.116171,6.732538,7.540265,5.888397,7.476514,4.065552,5.411091,-6.288129],[1.346919,-9.454869,-9.517530,4.113771,9.573860,-8.475511,-0.920615,-4.847233],[4.931444,-1.149202,8.456761,-3.727921,-6.109491,-7.092714,-3.853809,-4.425509],[-7.658102,-9.683299,-0.219870,-2.128186,-0.500919,9.548863,9.815118,0.933136],[3.219373,0.990884,-0.006188,7.110748,1.629004,-2.622818,-8.103623,1.583112],[2.744084,6.774834,-0.086273,-2.445652,-9.283808,1.895365,4.963633,4.511040],[-1.878652,3.472910,-2.482251,1.970494,-8.153112,7.733614,-7.054240,3.924203],[1.182866,-7.397229,-1.555339,-0.812454,-1.751060,-8.838124,5.922550,-8.024177]],[[-9.558822,-1.916270,-1.587064,2.257267,3.881657,5.165585,6.919701,2.291406],[4.640754,-0.226662,-0.645804,-2.788680,-4.525008,-2.707682,-9.867429,-0.806673],[-5.076751,-1.406515,-1.825988,7.841335,-2.758013,-7.115688,2.604568,-5.769446],[7.068133,9.144583,-2.564114,-9.729287,-9.459572,-8.995728,6.712869,-6.969007],[3.224406,-4.103407,-9.036359,7.947627,-2.872362,-1.510558,2.110067,-0.073698],[-9.602068,1.297676,3.496813,5.846652,-6.533570,8.120854,-1.749542,-4.534069],[-3.026828,-7.744670,-0.707489,9.862577,0.756286,8.682209,7.223347,7.892696],[4.194653,-4.328832,-9.327020,-2.139655,8.901488,-4.095126,2.488780,1.396079],[3.380208,-3.742763,6.280606,-6.778409,-3.457642,2.915216,6.603993,4.455946],[2.302595,4.392178,9.963071,9.923604,2.163036,9.215660,-3.157981,-3.522856],[-9.343603,7.359043,0.147250,-5.234408,1.853325,5.977924,-1.830953,8.120639],[-0.081793,9.127309,0.260066,-8.141459,-2.773822,3.121065,-7.732150,-7.539188],[7.328610,-1.185965,9.074678,-3.167462,-9.814070,6.288587,-7.135289,9.217997],[9.040450,-5.311690,4.793941,-1.096956,-0.683793,-5.787349,2.100173,2.314092]],[[-9.141635,7.816047,-8.829308,8.938766,4.035499,1.070115,0.728155,-1.490380],[6.907521,3.339685,4.522095,-9.293889,-8.567364,-9.099393,1.919441,-9.905093],[8.845761,2.782185,2.159802,2.424933,2.040624,-5.542366,7.175227,-1.799246],[5.158475,5.185536,5.279770,6.508927,-2.656987,5.310522,2.581484,6.993296],[-5.868109,9.773827,2.473464,-5.195648,7.881316,-6.477513,-0.328787,-4.755405],[-6.795986,-5.316436,4.166372,0.158955,-4.152069,-8.398299,-1.456234,-5.511932],[-2.654841,-3.306405,-2.503458,4.962930,9.863077,-5.678638,-5.357198,-5.239076],[-2.902333,-8.982276,-8.300451,6.322481,-9.228492,-1.753380,-3.662512,4.769575],[-3.432615,-5.931350,6.483637,3.160855,8.383076,-4.349586,-5.355558,0.961808],[4.025583,-4.157042,5.354037,-1.711548,3.063949,3.104154,-8.236361,3.946440],[-9.580640,5.248627,5.923529,9.725847,1.595726,-4.562513,-1.613085,-9.658870],[6.912216,6.361417,6.608605,-8.598632,-0.055842,-8.079943,4.080936,-8.190424],[5.989705,7.599908,-3.237686,-8.330839,-0.442078,6.452798,-4.843957,-6.014601],[-4.200868,-1.759285,-4.957633,5.630008,-1.638996,8.606536,8.426835,-4.762010]]], dtype = "float32")#candidate|7727|(3, 14, 8)|const|float32
bop_7728 = relay.bitwise_and(call_7722.astype('int16'), relay.reshape(const_7727.astype('int16'), relay.shape_of(call_7722))) # shape=(3, 14, 8)
bop_7731 = relay.bitwise_and(call_7723.astype('int16'), relay.reshape(const_7727.astype('int16'), relay.shape_of(call_7723))) # shape=(3, 14, 8)
output = relay.Tuple([call_7718,bop_7728,])
output2 = relay.Tuple([call_7719,bop_7731,])
func_7733 = relay.Function([], output)
mod['func_7733'] = func_7733
mod = relay.transform.InferType()(mod)
mutated_mod['func_7733'] = func_7733
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7733_call = mutated_mod.get_global_var('func_7733')
call_7734 = func_7733_call()
output = call_7734
func_7735 = relay.Function([], output)
mutated_mod['func_7735'] = func_7735
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3696_call = mod.get_global_var('func_3696')
func_3698_call = mutated_mod.get_global_var('func_3698')
call_7738 = func_3696_call()
call_7739 = func_3696_call()
output = relay.Tuple([call_7738,])
output2 = relay.Tuple([call_7739,])
func_7742 = relay.Function([], output)
mod['func_7742'] = func_7742
mod = relay.transform.InferType()(mod)
output = func_7742()
func_7743 = relay.Function([], output)
mutated_mod['func_7743'] = func_7743
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6148_call = mod.get_global_var('func_6148')
func_6150_call = mutated_mod.get_global_var('func_6150')
call_7787 = relay.TupleGetItem(func_6148_call(), 0)
call_7788 = relay.TupleGetItem(func_6150_call(), 0)
func_4729_call = mod.get_global_var('func_4729')
func_4733_call = mutated_mod.get_global_var('func_4733')
const_7796 = relay.const([-7,4,-6,6,-4,4,-3,1], dtype = "int8")#candidate|7796|(8,)|const|int8
const_7797 = relay.const([-0.860293,4.201603,9.523978,-8.577075,4.120107,-8.307213,7.603061,-1.188304,-0.358781,-4.677542,8.049417,3.150437,-4.114023,2.876906,-5.336670,-5.550300,-0.593364,2.674609,4.552053,2.761697,9.409608,-2.460879,-3.675819,-7.377802,-6.297837,-6.601661,9.456436,7.683740,-9.428734,1.281952,5.018814,9.769167,-7.248968,3.824982,-0.541390,-7.753089,6.746953,1.173590,9.214224,-8.843132,-0.356203,1.654098,-0.862351,-6.997636,-0.051873,0.003955,9.568593,5.545042,-8.137252,5.627829,3.854828,-9.224592,-4.963032,-5.866846,-3.065223,-9.648099,1.219566,-6.999261,-3.385739,-4.115934,1.356035,-6.546999,-3.990735,-4.409136,8.535825,-2.776499,6.509343,2.198668,-2.525511,8.136763,-3.347322,2.068419,-3.733787,-0.251052,-5.826923,1.205123,-1.826207,-2.365491,5.765468,1.079036,-5.210469,6.687908,6.012232,-9.610742,-2.567662,-9.501899,1.394744,-0.244720,3.735279,-1.741539,4.023694,9.576982,1.552117,-5.526137,-0.026185,9.125180,1.877980,-4.447493,2.505743,-7.338440,7.800495,4.786245,4.029625,-0.040725,-2.900547,-3.188987,-9.731408,4.970876,-6.042332,-5.791329,-2.934150,3.962935,-1.790783,-5.627606,-4.892397,5.595341,5.757247,-0.181297,-9.513582,7.760547,9.503258,-8.065114,-9.288003,-3.396109,5.191802,8.808406,-4.175465,-9.447700,2.183578,1.892904,0.966330,9.737897,6.713467,5.716912,-8.532266,-7.927684,9.401009,9.909351,-9.885744,-1.616156,-6.877506,3.393602,-4.142015,1.424132,-7.719473,-8.775873,9.238791,-6.114386,9.711821,-9.900575,9.109422,-0.819960,2.072177,-3.402371,2.275226,8.582602,-2.462564,-4.233511,-1.026763,-0.826973,-3.424471,2.231947,-3.297358,-1.357910,0.965278,3.009755,2.643244,8.498514,5.472183,6.444930,-6.991824,-9.890515,4.993843,-4.593185,-7.557694,7.368428,5.852364,-3.426348,-6.861326,4.872524,1.240291,-4.716094,-4.113916,0.165323,1.518839,-5.269122,-5.238429,5.067167,-2.615282,5.251315,-8.563265,6.833842,4.690992,-8.100180,9.539397,-0.098276,-6.744615,1.356803,-8.867879,3.002058,2.160172,-0.327191,-6.480580,-8.668933,4.845521,-5.141998,-5.512113,6.988867,8.312490,9.413182,1.344490,-8.266850,6.928658,6.831175,-5.305187,4.123149,-4.469897,2.706709,0.216698,6.913670,-5.792979,0.626113,-3.245574,-0.723137,-6.696959,-3.451202,1.148655,6.987040,-9.080404,7.730181,0.736135,6.307076,-3.106988,0.120033,-4.581172,-8.192161,-7.366197,1.161189,-5.518837,-0.579609,5.438467,-3.301077,1.692504,4.015108,-5.982040,0.270070,-5.753506,-3.522928,6.606651,-7.201896,-1.041480,-5.758004,-9.236700,3.336902,-7.323385,3.059841,-2.502862,-0.239895,-9.205778,-2.313303,-5.220364,-0.817651,-7.858667,8.298490,-7.733401,0.850309,-5.359049,4.834370,4.878076,5.825353,5.611437,4.968134,7.679980,8.206479,-8.762881,-7.980659,7.756942,6.415903,6.574623,-1.486037,-5.019017,2.821244,7.526781,-4.955045,5.314761,-5.774747,-7.543421,5.751328,-6.830117,7.836154,-5.475472,8.548961,5.465230,4.369600,-6.335667,-0.236763,7.216639,3.412611,6.776181,3.074806,-5.660301,7.680163,0.452088,-9.721444,8.581455,-9.675965,7.115912,-8.339858,-3.252891,-7.461275,5.757712,-9.407932,-5.167224,9.108315,0.135471,-5.291180,9.950737,-7.445713,-7.514977,-4.607580,4.559122,9.361674,-2.866638,6.763982,4.334521,3.536656,-1.130779,4.452176,-1.783616,-9.807792,1.269405,8.797020,-3.514889,-1.389566,-7.678810,6.635245,1.223680,-9.776872,-4.856701,4.835411,0.918263,-9.714614,-6.104411,-1.727477,-0.356510,-3.159440,-2.759145,-7.008715,5.924844,4.994808,2.048796,8.783006,-4.783763,7.466107,6.602621,-1.566512,0.898572,1.821742,4.142780,-9.120283,-3.461311,2.129597,-3.358144,-0.451331,-0.541395,6.286235,-0.493390,0.620774,0.199356,0.699982,7.948439,0.137220,-8.879058,-1.388219,9.924678,4.780229,8.752263,-3.331943,8.776247,3.183448,-4.998661,9.238295,-2.562366,5.328606,0.680224,-6.713170,4.389328,-6.718770,-0.951222,8.064431,0.781417,-7.466024,2.069897,5.968970,3.251941,4.386823,0.704129,-1.943771,8.843756,7.241089,-1.417608,1.442424,-0.665386,3.877222,-3.697758,-6.226145,1.899382,-1.858281,1.675954,0.678258,-4.051775,-2.554628,-4.356158,3.074440,9.926181,-2.619872,7.101594,2.510380,5.791786,-7.624230,3.217535,-5.963858,1.580513,7.451207,-8.142907,7.166900,4.727792,-3.579893,-7.088291,6.776754,8.980848,7.364562,4.168463,-5.473963,3.660239,-1.849724,7.134362,-4.517324,0.078781,6.152582,-1.312677,8.864428,-4.095730,1.021157,0.005203,-4.079241,4.277135,0.721372,-1.361738,1.438770,4.455655,-9.331943,-7.168448,5.460022,4.748150,9.096783,-1.818526,5.909068,8.566304,3.577288,-3.201702,6.344513,-4.946660,-1.841732,-1.144211,-4.607835,-9.816801,-3.485261,1.213959,-1.816552,-3.210339,9.434844,-1.083618,2.595769,2.841798,2.875538,5.086567,8.216226,3.550632,-3.967380], dtype = "float64")#candidate|7797|(480,)|const|float64
call_7795 = relay.TupleGetItem(func_4729_call(relay.reshape(const_7796.astype('int8'), [2, 2, 2]), relay.reshape(const_7797.astype('float64'), [480,]), ), 1)
call_7798 = relay.TupleGetItem(func_4733_call(relay.reshape(const_7796.astype('int8'), [2, 2, 2]), relay.reshape(const_7797.astype('float64'), [480,]), ), 1)
func_4184_call = mod.get_global_var('func_4184')
func_4186_call = mutated_mod.get_global_var('func_4186')
call_7845 = relay.TupleGetItem(func_4184_call(), 0)
call_7846 = relay.TupleGetItem(func_4186_call(), 0)
output = relay.Tuple([call_7787,call_7795,const_7796,const_7797,call_7845,])
output2 = relay.Tuple([call_7788,call_7798,const_7796,const_7797,call_7846,])
func_7873 = relay.Function([], output)
mod['func_7873'] = func_7873
mod = relay.transform.InferType()(mod)
output = func_7873()
func_7874 = relay.Function([], output)
mutated_mod['func_7874'] = func_7874
mutated_mod = relay.transform.InferType()(mutated_mod)
var_7901 = relay.var("var_7901", dtype = "float64", shape = (13, 7, 12))#candidate|7901|(13, 7, 12)|var|float64
const_7902 = relay.const([[[-0.096514,3.603149,0.233206,-1.590677,7.623383,7.753826,4.807140,-2.409033,9.700027,6.394578,3.611571,2.294821],[9.633772,1.586123,7.779694,8.636399,-6.525295,0.054081,5.919307,-4.332997,-3.316538,-2.955309,-0.898620,-4.243289],[9.773750,-6.012948,-8.842187,4.303605,4.974682,6.998732,0.477330,7.379937,5.122688,8.933230,-7.916875,8.013176],[-9.535951,7.272461,0.350363,-6.254409,7.355268,9.735870,7.066003,7.423528,0.056639,1.897673,1.280337,-4.042315],[6.729351,0.386097,-6.815703,-5.931280,5.660497,0.823928,5.603711,6.660690,-5.207557,-0.218049,2.833161,3.295941],[-9.570299,3.353742,1.928627,9.300178,8.715683,-1.499942,3.654363,-2.395274,-5.242779,6.788257,-2.272106,-0.669142],[-2.437456,-6.025377,-9.754667,-1.676452,-6.692440,2.359412,-4.494971,2.880693,0.450869,7.661705,-3.452708,2.174306]],[[9.659724,0.552039,7.304179,0.476913,-3.132373,0.335637,0.373748,-9.056169,9.010236,4.938006,-9.694324,-2.253031],[-3.486972,-4.066886,0.443743,-5.209592,3.416842,-0.811449,6.184919,-6.600999,0.690607,3.168491,6.681834,0.107371],[6.256140,-4.657939,8.333984,1.563388,-6.233115,-0.749363,-2.743707,2.101259,-7.077579,-9.914993,8.180110,-1.031586],[5.881309,7.474413,5.835945,7.914972,7.526740,-7.966665,-4.862288,-6.033903,6.904988,2.974422,4.104010,6.807646],[-8.615299,-1.878145,-9.417766,3.667098,-0.207451,1.656351,8.882317,-4.464966,-3.372240,8.576647,-1.212133,-2.117418],[-9.386757,5.521307,-1.110247,-3.492037,6.798627,-0.549900,1.483959,2.217694,-7.840524,5.806900,3.578773,-6.597232],[-9.669568,5.446581,6.870044,-1.161193,6.408613,-8.127583,0.086305,-2.767178,8.293155,-4.923681,-9.258781,-0.785581]],[[-5.173459,-3.669816,0.457817,-7.835474,-9.285520,-9.288476,5.355337,-1.750965,4.092110,-1.813262,2.126390,2.926639],[6.309389,6.383204,9.134659,-9.828156,3.341958,0.665969,0.824889,-8.418729,3.765443,5.333228,4.211896,5.566695],[-7.200180,8.984833,6.902820,-9.084660,0.503282,-0.393303,8.205711,-3.636746,-0.198225,7.749717,6.072284,9.049684],[4.763581,4.303141,-9.192508,3.063637,-5.601453,-3.857235,0.036474,-7.835375,-4.458144,3.070501,7.439991,-7.409577],[3.530017,7.530701,3.871174,-2.847970,-8.129025,-1.669731,-5.725242,4.352720,-3.824127,-5.334360,7.729039,-9.644703],[-6.207135,4.378749,-5.086525,9.987684,-7.733368,-9.498734,4.220759,-6.960718,1.294830,8.774286,-6.290088,-8.311755],[-9.010911,-5.282736,-0.466684,-5.167403,-7.166789,-3.191906,1.739868,-3.035651,6.885948,-0.298691,8.808727,-7.740897]],[[6.611596,2.636539,-8.504745,-1.487027,-9.020748,-2.284919,-1.304976,0.254264,8.182175,2.559013,5.415936,-9.938304],[-6.172963,-7.518299,1.124252,-7.649070,-3.898163,-4.950974,-0.519379,5.808035,5.455739,2.471047,-4.748644,-2.244234],[-7.434785,8.546121,9.251516,-5.781324,-7.968861,-5.190120,3.532902,-9.745532,-4.014779,8.479724,7.527945,7.064454],[-0.926577,-4.161317,-0.049745,-9.097038,-8.959520,-6.236417,8.158565,-6.768940,6.052320,2.590900,0.835094,-6.547110],[-1.802168,-8.827995,2.781268,-2.967588,-8.870963,-5.838679,3.285761,-9.250570,-9.080336,-6.112063,8.357029,7.889537],[1.224120,-9.564216,-9.528139,-0.702570,-2.320286,9.520154,-0.809784,3.908375,-0.531747,9.134897,8.110809,-6.976847],[5.616556,6.515253,7.405100,7.909888,-6.522851,4.554063,5.215471,1.729963,5.097297,9.939760,6.851589,-8.099884]],[[-0.192767,6.087349,9.581239,-3.774854,-0.744589,-2.724036,-6.429897,-7.840169,9.703383,-2.001061,9.985407,-5.900218],[-5.325928,6.404201,-4.497367,6.188170,3.134904,-0.760264,-7.213696,5.271348,2.296580,-2.129909,-9.658876,-9.886138],[4.246942,-3.926373,-8.098970,2.032515,-6.199935,-3.409894,-3.806298,1.667381,7.672706,6.490623,-5.635838,-1.459941],[-1.920997,-7.954734,-0.042479,-8.662855,7.239805,-3.448227,7.907285,-9.299653,-5.296923,-8.104423,-7.578098,2.518291],[-9.095169,-9.470748,9.406407,-6.021791,8.491384,-8.884382,9.522853,1.637532,5.617786,-4.250214,6.933683,-8.875921],[-5.645696,6.064918,8.856948,-7.014730,4.112694,-0.508920,8.786528,-2.473988,6.253580,-5.636079,7.208326,9.443413],[-6.678655,4.762678,-3.333874,2.859867,-8.029832,-1.455922,9.986652,6.660993,8.785336,-0.091648,-1.258729,5.404615]],[[2.614902,-8.035277,-8.086120,-1.098603,-5.312621,-4.425173,3.782435,8.456012,-7.814387,0.035731,-5.663460,-5.960155],[3.369814,-8.796802,2.108913,2.258070,-9.105737,6.636801,-4.570071,0.359874,1.784581,0.103409,4.865804,7.643064],[-5.544279,-5.637106,1.525254,-7.471514,6.801730,3.448963,0.075659,7.409017,-5.532609,-7.340975,-2.528923,7.266253],[0.434754,9.999067,2.413157,5.686100,9.320782,-7.533919,-7.862337,2.706748,-0.259952,8.830085,-6.934418,7.299929],[2.190938,6.622677,2.549720,-4.028861,6.457464,9.000720,-9.207479,3.865257,-2.701654,-2.493100,-4.242963,-6.070174],[-2.711826,-3.217429,0.455692,-3.566857,4.335194,-0.572543,-4.411561,-3.239941,-1.170914,4.481678,-9.050926,8.466899],[-1.907977,8.328524,0.423700,0.771000,1.667795,-0.911995,7.019428,-6.236731,-4.679164,6.334944,6.048374,8.066394]],[[-5.571150,-5.112875,6.908299,3.922240,4.496347,-3.361126,5.009396,8.872098,-4.259551,8.938333,-2.904966,-3.002740],[-2.226083,0.589915,8.737683,-1.914808,8.445864,-6.201794,-0.818903,4.346665,2.718059,-2.752540,8.066167,7.899531],[-0.378795,-8.949314,-2.965099,5.014378,-2.753214,-1.107069,0.756038,4.458392,1.237126,1.713582,-5.991079,-4.845293],[8.326418,-2.884728,-4.061744,-4.268288,-6.449879,7.377973,1.749982,9.137053,6.124116,-3.147972,-4.043550,-3.536337],[4.137623,2.708977,-9.018308,4.836607,3.563436,-7.430714,-0.719658,-7.464200,4.168170,2.413964,-1.554450,1.588472],[2.425827,7.423930,4.336070,5.415340,8.252576,-2.250235,-3.133260,9.134889,5.429393,6.737427,-5.250724,-2.085926],[2.527556,8.887646,8.543053,-2.245449,-3.936298,-4.722992,7.072935,-1.316217,8.285523,-3.703671,6.661050,8.933724]],[[1.819895,-2.403839,-8.180214,-7.702811,-5.273532,2.933197,-5.457820,-7.131954,3.971877,-3.416138,7.350581,-1.551174],[-3.516099,-6.835338,-4.108305,-5.593436,2.310304,-4.991749,-5.751208,3.611015,-1.431915,-5.534385,-7.959386,2.380036],[3.127876,-9.886807,-9.327818,5.815838,1.393498,-3.632856,2.915269,-2.110546,8.963272,-6.512775,4.994992,0.707723],[0.445601,-1.714177,-0.292612,7.593416,4.167778,-4.351376,-9.512776,-1.548081,-0.167336,-8.653854,-9.805340,-0.614072],[9.737973,6.688099,-1.590741,-5.461085,-5.648596,-7.284367,-8.250758,-6.458618,7.239219,5.717719,3.122724,-4.290116],[0.664551,9.453835,3.012066,4.865076,9.089294,3.260705,8.033600,7.348712,-3.748540,5.493826,2.243793,-6.776276],[-9.884238,7.684609,-0.077902,3.084554,-0.838427,4.854224,-8.982258,-3.316736,4.186178,-9.990757,0.428923,-0.583893]],[[9.841061,-0.253424,4.919218,5.562321,-0.318019,0.559159,-3.412258,-7.505704,-4.110590,-6.550970,4.911824,-4.016476],[-9.312420,7.876505,-4.494527,4.397874,0.325742,-4.656922,0.323456,1.392539,-2.644339,-8.699519,2.898390,7.637486],[-0.713192,1.638491,-8.254777,-7.822619,-7.380606,-3.318695,6.575387,-3.219424,2.640667,7.801116,-1.427016,2.177821],[-3.642880,-7.996991,-4.049219,3.429004,6.106167,-2.398460,-6.984727,6.878220,0.432199,6.533833,7.721570,7.769884],[-0.695751,8.864703,1.427625,-9.399836,-8.061848,-4.128964,-3.735666,1.211596,-0.720044,-3.146874,-3.440550,8.635368],[2.524810,-4.491846,-2.935674,-6.511367,1.337809,5.500598,-1.281031,-6.974900,-8.981206,0.275580,-7.137152,1.867425],[3.814228,5.101285,6.834380,9.284065,5.246305,0.548813,4.381682,-2.295255,-5.091304,-0.028429,8.337773,3.081888]],[[1.498381,0.434254,-1.153184,-0.552329,-6.993415,4.936826,-3.277881,-4.644003,3.531845,2.585362,1.365673,5.809911],[8.955838,-6.084462,-5.660520,3.702329,5.599524,8.813144,9.580368,4.985761,3.348288,2.713369,7.093875,5.624285],[7.643562,4.029027,-6.503479,-8.310329,-6.558351,6.834211,4.527892,-7.854242,5.730144,-4.479014,8.862314,-5.424625],[-0.450062,-1.904305,1.432066,-5.914372,-6.333943,-0.836918,-8.012226,6.981408,7.352947,2.167588,0.072616,4.027712],[7.158107,7.402070,7.755090,9.417178,0.600908,1.701650,9.884979,2.859559,-2.290195,4.997777,3.608466,7.543564],[3.985059,9.296874,3.181011,6.654261,-4.618537,8.727886,-5.729305,7.720942,4.847996,-5.295055,0.550087,-4.872841],[2.156451,-8.667882,-7.128526,-0.030727,1.935994,-0.305336,-7.633143,2.062371,-9.880741,7.282664,-0.932569,-3.434927]],[[9.610099,-3.916418,8.617586,-2.926012,-1.595848,1.207743,8.600457,-7.129502,1.680855,1.431460,-4.020591,-9.861844],[9.376223,6.365824,-1.196488,9.343554,3.834496,-0.535751,1.200236,2.963879,-6.988899,-3.561146,-6.638747,-7.045402],[-4.860811,-9.467883,-1.664880,2.238789,-8.302578,1.855827,3.119652,-8.616465,7.453525,2.874489,-1.353874,-0.055025],[0.359608,-8.594341,-8.264736,4.835008,-1.662518,1.378433,-1.242883,-0.195258,-1.236928,1.814195,2.139396,-1.395350],[4.715507,0.339576,-0.597475,-5.549857,-3.592288,-2.879420,3.039685,4.727109,3.171751,-7.194375,-3.601255,-8.041132],[7.707977,-5.699344,4.385253,8.783183,-3.877081,-2.892555,-7.682249,-5.660210,6.109385,3.107685,-7.365484,-9.031662],[-5.073275,0.689330,-7.842220,0.568624,8.118007,-2.787015,-3.152858,8.502799,-6.139236,5.876769,-8.523934,9.939002]],[[-9.625488,-4.910505,-6.738859,-2.164964,-9.416801,0.443539,9.133134,-9.254192,-1.693144,-1.502774,-4.677503,7.647649],[3.817566,1.279780,-0.233320,-0.198353,-2.174876,1.630732,3.372829,2.141857,2.181902,-9.372098,5.743826,1.774745],[4.469644,-0.741677,-7.521994,-6.577706,-2.338557,6.166690,8.953291,-6.948269,0.061611,-0.040204,6.177563,-9.893070],[-1.310485,-8.017562,7.534736,5.150781,8.871058,-9.013256,4.403981,6.139905,-1.318966,-5.203736,-0.660943,0.656786],[-9.849880,0.967660,5.178220,-0.299395,-5.182622,6.874367,-8.086008,6.436348,-2.965462,8.490753,-9.035666,-5.080306],[-3.779459,-9.989940,0.877552,-5.319207,2.279520,9.646432,1.046163,-9.219062,-2.055962,0.560438,-9.978006,-0.349677],[-3.610606,-0.934193,6.783380,6.497550,8.964600,-4.785534,-2.505812,-4.528239,-0.274066,-6.711160,7.238003,-3.223688]],[[8.719570,2.211206,-4.590948,-6.407078,6.143770,0.610142,4.818824,-2.080542,1.603085,1.812463,0.197096,9.729629],[-8.166636,6.655532,0.736881,8.093204,2.918605,-3.857594,1.530413,-7.905536,-4.029551,1.920700,1.493938,-9.168997],[-2.876457,-4.637843,-1.796611,-3.993791,5.306729,-9.021863,0.430826,8.281842,-2.662114,-1.140095,4.619024,9.366809],[-5.625257,6.182782,-8.707811,-6.270180,-1.139936,9.920028,7.177898,9.688152,4.978945,2.948436,3.247178,-0.142707],[-0.412612,5.245114,5.788902,1.517438,2.931737,6.219776,3.180136,0.349714,-7.875919,-3.302372,-8.739303,8.823558],[3.244772,-5.353987,3.473747,8.755122,2.579118,6.864807,8.281114,-5.011392,-1.369843,-5.150288,-1.693827,4.748345],[-0.527680,-8.522027,0.629287,1.331981,-7.096990,7.574713,-0.671176,9.835269,-7.890835,-1.375092,-7.424389,-7.352925]]], dtype = "float64")#candidate|7902|(13, 7, 12)|const|float64
bop_7903 = relay.divide(var_7901.astype('float64'), relay.reshape(const_7902.astype('float64'), relay.shape_of(var_7901))) # shape=(13, 7, 12)
func_4825_call = mod.get_global_var('func_4825')
func_4828_call = mutated_mod.get_global_var('func_4828')
var_7907 = relay.var("var_7907", dtype = "float32", shape = (81,))#candidate|7907|(81,)|var|float32
const_7908 = relay.const([0.403225,-1.632565,6.044781,0.547221,-2.509884,8.160632,3.430764,-1.838389,-4.641030,7.274049,6.673325,-3.382381,-4.352234,-7.205863,-9.847359,-9.496111,6.946080,2.109529,2.013007,6.095084,-6.251935,6.357962,-8.787234,1.795325,8.908891,3.538833,7.460574,-1.195020,3.146438,9.122217,-3.125661,-1.665398,7.524150,-4.501688,-0.480020,-7.133330,-8.368934,1.300898,1.139199,-5.601590,4.994230,1.662697,1.055575,-8.071958,-0.662927,9.078866,-5.943822,-2.013170,4.014864,-2.199149,2.661567,-5.184558,-0.523820,-9.652497,-1.251411,-6.303612,9.291083,-7.843148,-2.125771,8.543759,4.274935,6.755269,-0.063012,2.839759,-6.494047,-9.010165,-9.511581,7.939131,-8.157934,9.580225,-9.056218,-0.512225,0.099951,9.236930,9.852736,2.262311,9.689004,-7.154558,-4.169115,2.021278,-6.677725,-5.387903,-7.384864,5.500641,-5.301678,3.995734,7.775959,-6.577380,7.058255,-0.008816,-4.565250,1.929606,-0.350073,-5.345796,1.906840,3.780721,1.405724,-3.701012,7.575817,-2.216833,-6.503287,4.616531,3.022801,5.989311,6.546303,7.031476,1.961332,9.209204,7.482569,-2.672150,0.397786,-1.766851,-5.612215,-3.910771,-7.371673,2.398134,-4.810421,-8.368289,-6.738405,-6.007267,0.328884,1.986831,-6.654037,-0.724928,-5.756183,-6.814704,-0.059481,-8.542291,-2.396967,7.624604,8.556668,1.669703,4.330649,5.250668,2.378906,6.776684,-1.596531,9.185904,7.531058,-7.173399,9.576001,0.113899,5.470566,-5.985219,-5.177277,-4.498147,-2.130093,3.232329,-2.868963,2.447756,6.131260,-7.009677,2.638199,-1.948435,-4.182624,5.215528,-0.084263,9.511185,-2.062815,6.894068,8.517921,4.724850,3.827457,9.722827,2.505396,-1.431213,9.647442,-5.123843,-8.352402,5.013405,2.145482,-6.879290,7.415299,0.687519,9.037061,-9.695225,4.085705,-7.601323,3.802592,-8.743805,-5.132942,9.826409,3.164478,7.765747,-4.813786,-0.537180,1.425514,3.301144,7.091175,-9.938435,2.735726,3.394797,-4.017237,-9.648765,-9.448878,2.137840,4.374098,-9.087426,-7.951070,-7.937073,7.583167,2.958535,-2.919722,1.557514,5.435646,-4.010003,3.197215,9.748241,-2.342487,2.921799,-3.625387,7.202999,0.556429,2.643861,8.658449,-4.736426,-9.191205,4.348746,1.116716,-5.473926,2.388720,7.735391,1.761740,-7.226957,-4.412941,-9.234785,-8.215533,-4.495803,9.550301,-1.301257,-9.027747,8.649884,-5.007730,5.005570,-1.004899,-5.017346,-0.400292,-7.319237,9.267910,7.712972,-6.998699,-2.201014,-7.561434,-6.114900,-2.712478,-1.972699,4.513440,-3.018160,3.526304,4.805860,2.234903,8.568735,-6.362357,9.496463,-8.907750,7.009637,-7.950214,-5.455083,9.342435,5.260875,2.057553,-1.130272,0.693138,-8.078736,-3.129982,-5.915407,9.415834,2.664770,1.420717,5.554492,-9.370694,-4.382678,1.832743,5.090986,5.876606,-0.622386,-8.793465,-3.057766,1.257235,-9.649948,-7.626005,-5.998190,-7.681772,3.501333,-1.480045,-0.666755,-3.945662,-0.334768,0.949866,-0.622099,-2.316176,7.918743,4.717792,-4.449522,-5.876256,-0.025899,-5.393428,-6.682667,-0.675246,-1.920921,2.459270,5.086141,-2.309601,1.567531,9.141964,-4.128222,-9.284110,8.054750,3.816513,7.861464,-5.810387,8.493089,-8.914292,-0.746230,9.337380,4.515306,1.670000,-7.032750,-2.133719,2.757603,8.393080,8.516542,4.354568,0.082055,2.470118,-9.424066,-6.029674,-4.358083,2.645420,-6.319800,7.440891,1.232462,-7.130153,-0.401610,7.101964,3.447624,-5.541978,9.312765,3.717235,-9.978524,1.658556,-2.806477,-0.054851,-3.740655,8.743052,6.682138,-3.118731,8.632961,-5.358799,-9.342425,9.157569,3.402050,-8.817955,6.823237,4.554466,-2.430029,-3.421916,3.751748,8.862051,7.194899,-0.652897,-1.686967,0.630003,7.685973,4.585106,-7.624583,6.509466,-0.764201,-9.383113,3.425386,-8.318652,-5.928627,1.037079,3.721396,2.810233,1.278342,5.664724,-9.273762,-8.869010,1.425010,1.764597,-2.741033,4.142927,3.028685,7.870915,1.799613,-7.147629,-3.708534,9.039337,3.466892,-0.950409,-2.531216,-0.332917,1.181488,8.426689,-5.820893,-2.632324,2.105915,-3.736163,1.410703,-0.437108,4.499209,-2.147443,-3.958474,5.111812,-0.392307,-4.828918,-8.950820,0.581745,1.255544,-1.951849,-6.663229,6.771455,-0.167958,-9.634897,4.345732,-8.465958,3.263544,-0.900819,2.682990,2.788540,-5.027911,-2.193755,-2.048255,-6.347505,-1.939336,-3.541566,3.727389,8.146889,2.476053,2.608035,-6.956069,3.343038,-5.013058,4.193150,4.628632,5.998704,-1.463146,-0.961684,0.829121,7.962421,1.681974,-4.482127,1.552898,-9.706448,9.326582,7.302888,-4.798261,-7.687334,-9.478614,-7.475823,-3.778242,2.471050,2.594031,-2.854353,-0.682758,2.147319,6.769945,-4.797682,8.462437,1.379364,-4.066269,-5.411216,1.573766,4.307526,-5.555252,1.502890,8.250254,1.383631,6.008123,-0.994069,6.591218,0.908344,4.957523,1.009170,0.696153,-0.881645,7.955046,-7.446395,4.797471,5.646260,1.080212,-5.235610,4.299487,0.474749,9.793405,9.519289,8.175347,2.673759,-1.042090,8.045495,9.190986,-4.935407,-3.693560,2.619824,-4.645723,8.630614,-3.392016,5.595786,-5.710182,-1.098728,-4.123419,-9.638444,-1.358453,-4.503611,4.642239,-3.991512,0.085233,3.751550,6.336699,8.095694,6.281153,8.468462,0.047255,-5.259392,-4.754923,7.156628,-9.815265,-3.395895,-3.000693,1.459760,3.126403,-7.831662,-2.573580,-7.580358,4.370121,-5.823697,5.645872,-3.717289,-1.283444,-0.320490,4.737967,9.775134,9.059359,-3.073961,-6.442223,1.458203,-2.766985,9.164195,-4.316803,-5.683616,0.252238,-5.076314,6.970640,2.699490,2.500979,-1.398577,-7.921185,-8.769206,3.265967,4.609224,4.435522,7.897620,-3.762392,-2.031486,0.176967,-4.264166,6.028743,2.723051,0.303851,-2.939304,-9.350732,0.360898,-8.154980,-9.443757,6.481514,-1.409050,1.423198,-7.055667,-9.252086,-2.748428,2.275313,-2.401971,4.204262,8.540684,9.151529,-8.653020,-8.009905,-8.627021,7.621583,2.022225,-7.153095,1.299762,6.070213,9.053016,5.084419,7.000501,3.558398,8.844437,9.300493,8.118461,5.241862,-9.854742,-3.686638,-1.747747,-8.649346,-9.315387,4.333949,-2.746222,0.882952,-2.317000,9.033844,3.266391,-8.947836,9.449034,-4.610992,-2.489035,-4.220964,6.665308,8.714286,2.015972,1.182409,-4.111832,3.724519,-0.343463,-5.603289,6.307474,-9.181335,-4.806048,-6.052761,7.333384,3.178077,-7.889424,-0.730996,-5.101173,9.863164,6.649755,6.831878,-4.987163,-1.439707,8.161560,5.878173,-9.906561,2.762766,-6.050190,4.329142,-9.187678,1.450773,-5.761665,8.463345,1.810354,-8.969120,4.756216,-3.312125,7.009730,-4.129352,-9.212591,2.355554], dtype = "float32")#candidate|7908|(648,)|const|float32
call_7906 = func_4825_call(relay.reshape(var_7907.astype('float32'), [9, 1, 9]), relay.reshape(const_7908.astype('float32'), [9, 8, 9]), )
call_7909 = func_4825_call(relay.reshape(var_7907.astype('float32'), [9, 1, 9]), relay.reshape(const_7908.astype('float32'), [9, 8, 9]), )
output = relay.Tuple([bop_7903,call_7906,var_7907,const_7908,])
output2 = relay.Tuple([bop_7903,call_7909,var_7907,const_7908,])
func_7910 = relay.Function([var_7901,var_7907,], output)
mod['func_7910'] = func_7910
mod = relay.transform.InferType()(mod)
mutated_mod['func_7910'] = func_7910
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7910_call = mutated_mod.get_global_var('func_7910')
var_7912 = relay.var("var_7912", dtype = "float64", shape = (13, 7, 12))#candidate|7912|(13, 7, 12)|var|float64
var_7913 = relay.var("var_7913", dtype = "float32", shape = (81,))#candidate|7913|(81,)|var|float32
call_7911 = func_7910_call(var_7912,var_7913,)
output = call_7911
func_7914 = relay.Function([var_7912,var_7913,], output)
mutated_mod['func_7914'] = func_7914
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6850_call = mod.get_global_var('func_6850')
func_6852_call = mutated_mod.get_global_var('func_6852')
call_7960 = func_6850_call()
call_7961 = func_6850_call()
output = call_7960
output2 = call_7961
func_7962 = relay.Function([], output)
mod['func_7962'] = func_7962
mod = relay.transform.InferType()(mod)
output = func_7962()
func_7963 = relay.Function([], output)
mutated_mod['func_7963'] = func_7963
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2615_call = mod.get_global_var('func_2615')
func_2617_call = mutated_mod.get_global_var('func_2617')
call_7996 = relay.TupleGetItem(func_2615_call(), 0)
call_7997 = relay.TupleGetItem(func_2617_call(), 0)
func_2615_call = mod.get_global_var('func_2615')
func_2617_call = mutated_mod.get_global_var('func_2617')
call_8005 = relay.TupleGetItem(func_2615_call(), 0)
call_8006 = relay.TupleGetItem(func_2617_call(), 0)
func_7376_call = mod.get_global_var('func_7376')
func_7377_call = mutated_mod.get_global_var('func_7377')
call_8008 = relay.TupleGetItem(func_7376_call(), 1)
call_8009 = relay.TupleGetItem(func_7377_call(), 1)
output = relay.Tuple([call_7996,call_8005,call_8008,])
output2 = relay.Tuple([call_7997,call_8006,call_8009,])
func_8023 = relay.Function([], output)
mod['func_8023'] = func_8023
mod = relay.transform.InferType()(mod)
output = func_8023()
func_8024 = relay.Function([], output)
mutated_mod['func_8024'] = func_8024
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4739_call = mod.get_global_var('func_4739')
func_4740_call = mutated_mod.get_global_var('func_4740')
call_8071 = relay.TupleGetItem(func_4739_call(), 0)
call_8072 = relay.TupleGetItem(func_4740_call(), 0)
var_8073 = relay.var("var_8073", dtype = "float32", shape = (9, 4, 5))#candidate|8073|(9, 4, 5)|var|float32
bop_8074 = relay.add(call_8071.astype('uint16'), relay.reshape(var_8073.astype('uint16'), relay.shape_of(call_8071))) # shape=(9, 4, 5)
bop_8077 = relay.add(call_8072.astype('uint16'), relay.reshape(var_8073.astype('uint16'), relay.shape_of(call_8072))) # shape=(9, 4, 5)
output = bop_8074
output2 = bop_8077
func_8088 = relay.Function([var_8073,], output)
mod['func_8088'] = func_8088
mod = relay.transform.InferType()(mod)
var_8089 = relay.var("var_8089", dtype = "float32", shape = (9, 4, 5))#candidate|8089|(9, 4, 5)|var|float32
output = func_8088(var_8089)
func_8090 = relay.Function([var_8089], output)
mutated_mod['func_8090'] = func_8090
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7742_call = mod.get_global_var('func_7742')
func_7743_call = mutated_mod.get_global_var('func_7743')
call_8214 = relay.TupleGetItem(func_7742_call(), 0)
call_8215 = relay.TupleGetItem(func_7743_call(), 0)
func_5119_call = mod.get_global_var('func_5119')
func_5122_call = mutated_mod.get_global_var('func_5122')
call_8233 = relay.TupleGetItem(func_5119_call(relay.reshape(call_8214.astype('float64'), [15, 11, 12])), 0)
call_8234 = relay.TupleGetItem(func_5122_call(relay.reshape(call_8214.astype('float64'), [15, 11, 12])), 0)
func_1890_call = mod.get_global_var('func_1890')
func_1892_call = mutated_mod.get_global_var('func_1892')
call_8249 = func_1890_call()
call_8250 = func_1890_call()
func_2047_call = mod.get_global_var('func_2047')
func_2049_call = mutated_mod.get_global_var('func_2049')
call_8257 = func_2047_call()
call_8258 = func_2047_call()
func_4642_call = mod.get_global_var('func_4642')
func_4644_call = mutated_mod.get_global_var('func_4644')
call_8262 = relay.TupleGetItem(func_4642_call(), 1)
call_8263 = relay.TupleGetItem(func_4644_call(), 1)
output = relay.Tuple([call_8214,call_8233,call_8249,call_8257,call_8262,])
output2 = relay.Tuple([call_8215,call_8234,call_8250,call_8258,call_8263,])
func_8264 = relay.Function([], output)
mod['func_8264'] = func_8264
mod = relay.transform.InferType()(mod)
output = func_8264()
func_8265 = relay.Function([], output)
mutated_mod['func_8265'] = func_8265
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2000_call = mod.get_global_var('func_2000')
func_2002_call = mutated_mod.get_global_var('func_2002')
call_8295 = func_2000_call()
call_8296 = func_2000_call()
func_7008_call = mod.get_global_var('func_7008')
func_7010_call = mutated_mod.get_global_var('func_7010')
call_8298 = relay.TupleGetItem(func_7008_call(), 0)
call_8299 = relay.TupleGetItem(func_7010_call(), 0)
func_7873_call = mod.get_global_var('func_7873')
func_7874_call = mutated_mod.get_global_var('func_7874')
call_8305 = relay.TupleGetItem(func_7873_call(), 0)
call_8306 = relay.TupleGetItem(func_7874_call(), 0)
func_7582_call = mod.get_global_var('func_7582')
func_7584_call = mutated_mod.get_global_var('func_7584')
call_8316 = relay.TupleGetItem(func_7582_call(), 0)
call_8317 = relay.TupleGetItem(func_7584_call(), 0)
func_6922_call = mod.get_global_var('func_6922')
func_6925_call = mutated_mod.get_global_var('func_6925')
const_8327 = relay.const([3,-5,-4,-1,1,8,-5,6,4,5,8,4,-5,4,-4,-4,4,5,2,9,-10,-1,-1,10,-3,-5,-10,-10,9,-5,-6,-3,-8,-10,-6,2,-3,-8,2,-2,-2,-7,-5,7,1,-10,-3,-9,3,1,-8,3,10,8,1,6,-6,-6,-9,6,5,1,8,10,9,9,8,9,-5,-7,-6,10,7,-4,8,-8,-5,-2,-9,6,-6,5,9,2,-10,2,4,-7,-7,7,2,-8,-6,-4,3,-3,5,2,2,7,5,-8,-1,-7,-10,4,2,1,-4,-5,2,-7,7,-10,5,1,-7,6,7,-6,2,9,4,3,4,5,5,-3,-3,-3,10,-8,-4,3,-2,8,-1,-9,4,2,-10,-6,-1,9,-1,4,-6,-8,-1,-4,2,-6,-7,-7,-8,1,-6,-5,5,10,-6,-9,9,5,-10,2,8,-6,-4,8,-2,10,-5,4,8,-7,-10,-9,2,10,2,6,1,-7,-3,-7,-5,2,3,-9,1,7,10,2,-9,-6,4,3,3,2,-6,-2,7,10,-1,-1,6,-4,4,-10,8,-6,-9,-10,10,8,-3,6,6,10,-4,10,10,6,-9,9,-6,4,5,-8,7,2,8,-10,3,-4,4,6,-7,8,-3,-7,-3,2,4,4,8,1,-1,10,4,10,7,10,10,-2,-8,-10,8,8,4,5,-5,7,9,1,-3,-9,-8,-4,10,3,-5,-8,9,-6,7,2,-8,-1,8,10,2,-10,2,-3,10,-10,-1,7,-4,10,2,3,-2,-9,-6,-10,10,-3,5,-3,-9,9,1,9,-9,-7,10,-5,6,-3,-2,-3,4,-3,9,4,-10,10,-1,9,6,4,-7,2,-2,-4,-9,-5,2,-2,5,-8,10,-8,-7,-4,-2,2,-9,3,-7,-6,-5,-9,-10,-5,-6,-9,3,1,2,-4,6,-6,-8,8,5,4,-6,6,-4,8,5,8,5,-9,-7,-3,-1,-7,7,6,1,1,-5,-3,7,-10,-1,2,10,-2,6,-9,4,8,5,-5,-8,-4,-5,-1,-10,-7,-3,-4,-2,-1,2,7,-8,-9,-1,-9,-3,1,2,8,-4,3,-4,10,3,-4,1,-3,8,-2,-8,-7,6,7,-9,1,10,9,-1,1,10,1,9,-2,7,6,-7,-4,-1,2,-8,1,5,3,3,-1,1,6,-5,-9,-2,-8,9,3,-5,-8,-6,-2,-3,8,-10,10,-1,3,5,-10,6,8,-2,-5,-4,1,-4,-4,9,-4,10,-10,8,-9,-5,10,7,-9,8,9,7,-3,-4,-9,-8,-3,6,-1,9,7,-9,7,4,-8,-10,-6,8,1,6,-4,-4,5,10,-2,6,-3,8,-10,6,7,-4,4,-2,-3,-6,5,3,7,7,-2,-1,-7,-7,-3,6,10,1,-1,10,3,10,5,9,-7,-3,1,-8,-5,9,7,-6,-7,-2,1,-2,-7,4,6,-5,-2,-3,-4,-5,-5,5,-10,-8,7,5,1,4,-10,1,-2,10,-5,-8,6,-8,-8,3,-3,6,3,9,9,-4,-2,4,3,9,-6,9,-2,3,7,9,6,-1,5,5,-3,-2,5,-10,-9,-8,-8,7,1,10,-5,-9,2,-2,-8,-2,5,8,1,10,-7,-7,3,-2,5,4,1,-10,3,-10,8,-4,8,-5,-7,1,3,-6,-3,3,-2,-7,-10,4,1,-4,7,-4,-9,-4,-5,-10,-4,-7,9,-4,-8,-2,9,2,1,9,-6,-5,-3,3,3,-10,-2,-3,-8,-1,-9,7,-10,-8,-6,1,1,7,4,-3,3,-5,10,-9,-6,-7,5,10,2,8,-4,-2,-6,8,10,8,-5,-10,2,7,10,-10,-5,-10,-10,-7,-9,9,7,-5,9,10,-8,-2,2,8,-3,-6,-1,-7,7,5,-10,-9,-4,-4,8,8,4,4,-1,-7,3,3,2,-6,4,4,8,3,-8,4,10,-9,5,-2,8,-9,5,-6,1,-7,-3,-9,4,4,6,7,-1,-2,-2,3,4,-10,3,7,7,-9,4,-3,9,-8,5,-10,-2,5,7,-5,-9,1,2,-9,1,-9,-5,1,8,-8,-7,-9,3,4,-1,10,-5,-5,-8,-5,-10,3,-7,-1,8,-7,-10,-5,-2,2,9,5,-4,10,-3,-10,-1,2,9,-4,3,-9,10,5,-4,-7,-10,8,3,5,-5,10,-7,-6,6,-1,-3,-1,8,-7,4,7,4,-5,1,2,-6,-4,9,-9,-9,-3,5,-5,1,-5,-4,8,-6,-7,-4,7,-5,2,8,-8,-4,-9,-6,-1,-4,3,-9,-8,-5,-5,5,-8,-10,2,-2,7,1,4,-10,-8,1,2,2,8,6,6,-3,2,5,-5,6,2,10,7,-10,4,-8,-5,8,-8,5,8,10,-5,-5,1,-2,1,8,-2,4,-2,-2,-3,-10,-5,-6,-5,2,-1,-10,-10,-5,6,10,-4,2,7,2,-4,-2,9,3,-6,4,4,4,-8,-5,-4,10,9,3,6,7,-10,-1,1,-3,-9,-8,10,-6,-1,-3,-6,-3,5,-3,3,-2,-1,4,-7,10,-3,-10,10,-1,5,-6,-7,7,6,2,2,-4,7,6,2,-1,-6,-8,-6,-7,-5,3,-1,3,-10,7,-10,-4,9,-4,-6,6,5,8,6,-2,6,4,-6,5,5,6,4,-4,-10,2,3,-7,5,-10,9,-2,9,-4,-7,1,-4,-7,8,9,-2,-5,-10,-5,-8,-6,9,5,5,5,2,-4,-6,3,2,4,-3,-9,3,-8,9,1,-1,7,8,10,1,-4,-2,-3,-7,10,-7,-2,3,3,-5,1,1,-4,2,-6,-5,-10,-7,3,9,3,2,-6,9,-6,-4,-8,5,-3,-5,9,-1,-7,1,2,3,8,5,8,-5,-6,-1,3,8,2,9,3,10,8,-10,-5,-8,-8,-9,6,-3,3,9,-10,6,-2,1,2,-5,-7,3,-10,5,7,-6,-7,5,3,-8,3,-2,6,10,9,2,-4,7,9,2,9,-9,9,8,10,-4,9,-9,1,5,-9,-5,-4,-7,-8,7,8,-4,9,-10,8,-5,-10,-2,-6,-3,5,-7,2,-2,-4,-10,6,-1,7,-8,-5,-2,7,-6,-2,-7,-6,-8,8,-1,-2,5,6,-4,7,-6,5,7,-3,-5,1,3,-8,-10,-2,9,3,-3,1,-9,-1,1,4,-8,-1,1,-6,-3,-7,1,3,5,-5,2,6,-4,-8,-3,-3,9,-5,-7,-7,5,3,-5,-5,2,-9,-6,8,9,5,8,2,-1,10,-8,-8,4,9,8,10,-4,6,3,7,10,6,7,7,-5,-6,5,5,7,-9,-8,9,-7,1,9,-3,-10,-6,9,7,-10,8,-10,3,9,-4,-2,-8,-8,-10,-6,3,-4,-5,2,-4,6,8,-6,-3,4,9,-2,4,5,4,-6,7,10,10,3,-4,7,5,4,8,7,3,-6,7,10,-5,2,6,-4,-4,4,6,-2,7,-6,4,-4,-3,4,4,-3,2,-10,5,-7,-1,-9,-2,-5,-6,4,6,-9,-10,7,8,-2,-5,-9,8,-1,6,-5,8,-7,-1,-6,-9,-6,-9,3,-2,8,-9,10,-4,4,1,-8,9,5,6,-9,-8,6,-7,-5,-5,-10,1,-10,1,4,-5,-2,8,8,-9,-1,-1,4,-5,1,-1,4,1,8,-2,-5,-5,-3,4,-6,-8,10,3,1,3,2,3,10,2,9,8,-2,10,-5,9,-9,-8,8,5,3,-9,3,-1,-9,9,-6,1,2,-5,6,-6,-1,-6,-10,-6,8,-6,-9,-4,-9,-4,1,-6,9,-10,5,9,-2,5,-5,-5,-8,4,7,6,2,-4,7,8,9,-10,3,2,-6,9,8,4,4,-3,-5,-8,9,2,10,-2,7,5,3,7,-2,1,-10,-6,-3,5,8,-5,-5,-4,8,-4,-10,-4,6,-4,-8,10,2,-2,5,-2,-1,1,-5,-9,-3,-5,3,7,3,-10,10,8,-8,-6,-8,-5,7,-2,-2,-5,-7,-7,-2,-2,10,5,-5,-2,3,-5,6,9,7,8,-4,4,5,-4,10,1,1,9,-1,7,1,-5,4,-2,7,10,-3,5,-8,5,6,-5,4,-2,-7,8,-5,-4,-1,9,6,-9,6,5,4,9,7,-8,-1,5,1,7,10,-4,8,9,7,-3,4,6,-9,8,2,-9,8,3,1,7,1,-2,-9,5,1,-10,9,2,2,5,8,8,-10,-7,-9,2,-10,-9,7,4,3,10,-9,-9,2,6,8,8,-3,8,-1,-1,7,9,-5,2,6,-7,6,-5,-10,10,5,7,-3,1,5,5,4,-6,7,-7,9,8,-2,4,6,-1,2,-10,-2,10,-4,7,-9,9,10,8,1,-5,-9,-4,-2,5,-4,-8,-7,-2,-3,3,4,9,7,3,3,1,-6,-6,-4,4,-7,2,1,5,5,-10,-9,2,6,5,5,3,5,-2,10,4,-8,-1,2,-7,-3,5,3,9,-7,1,4,-5,-3,7,5,-3,10,4,-10,-9,7,7,5,1,2,-4,-8,-5,-8,-6,-6,7,-3,-7,3,5,2,-10,-10,9,-5,-8,3,-5,8,5,-10,-9,5,-3,-4,6,2,2,-1,4,3,-10,-5,-7,-6,-6,-5,7,-1,-6,-1,-10,2,-3,-5,8,8,4,3,-8,-4,-5,-9,8,-3,4,9,-4,-8,-2,5,10,-10,-9,-6,1,-1,-10,7,10,-2,-3,-10,2,6,-2,-5,-4,-9,-7,-2,-6,5,1,1,5,8,4,4,6,9,-1,-2,-1,-8,7,-9,2,6,9,7,-3,-1,-10,3,3,8,8,8,3,10,-7,1,-4,-5,8,-6,-6,8,-1,6,2,-9,3,4,5,-6,-4,4,-5,2,2,4,4,-5,-10,-1,4,7,-9,-3,-6,9,-5,-7,-5,-4,6,4,-8,6,-10,4,-7,1,-1,-2,-1,-6,-5,7,-9,-8,8,4,-3,-6,7,6,1,2,10,-1,-5,9,8,-2,6,-2,2,-10,8,7,-6,-1,-8,10,-5,1,6,9,-6,2,1], dtype = "uint16")#candidate|8327|(1920,)|const|uint16
call_8326 = relay.TupleGetItem(func_6922_call(relay.reshape(const_8327.astype('uint16'), [8, 15, 16]), relay.reshape(const_8327.astype('uint16'), [8, 15, 16]), ), 2)
call_8328 = relay.TupleGetItem(func_6925_call(relay.reshape(const_8327.astype('uint16'), [8, 15, 16]), relay.reshape(const_8327.astype('uint16'), [8, 15, 16]), ), 2)
func_4191_call = mod.get_global_var('func_4191')
func_4192_call = mutated_mod.get_global_var('func_4192')
call_8330 = relay.TupleGetItem(func_4191_call(), 0)
call_8331 = relay.TupleGetItem(func_4192_call(), 0)
func_2778_call = mod.get_global_var('func_2778')
func_2780_call = mutated_mod.get_global_var('func_2780')
call_8335 = relay.TupleGetItem(func_2778_call(), 0)
call_8336 = relay.TupleGetItem(func_2780_call(), 0)
output = relay.Tuple([call_8295,call_8298,call_8305,call_8316,call_8326,const_8327,call_8330,call_8335,])
output2 = relay.Tuple([call_8296,call_8299,call_8306,call_8317,call_8328,const_8327,call_8331,call_8336,])
func_8351 = relay.Function([], output)
mod['func_8351'] = func_8351
mod = relay.transform.InferType()(mod)
output = func_8351()
func_8352 = relay.Function([], output)
mutated_mod['func_8352'] = func_8352
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3696_call = mod.get_global_var('func_3696')
func_3698_call = mutated_mod.get_global_var('func_3698')
call_8481 = func_3696_call()
call_8482 = func_3696_call()
func_2300_call = mod.get_global_var('func_2300')
func_2302_call = mutated_mod.get_global_var('func_2302')
call_8491 = func_2300_call()
call_8492 = func_2300_call()
func_4184_call = mod.get_global_var('func_4184')
func_4186_call = mutated_mod.get_global_var('func_4186')
call_8506 = relay.TupleGetItem(func_4184_call(), 0)
call_8507 = relay.TupleGetItem(func_4186_call(), 0)
func_6072_call = mod.get_global_var('func_6072')
func_6074_call = mutated_mod.get_global_var('func_6074')
call_8513 = func_6072_call()
call_8514 = func_6072_call()
func_7319_call = mod.get_global_var('func_7319')
func_7321_call = mutated_mod.get_global_var('func_7321')
var_8518 = relay.var("var_8518", dtype = "uint64", shape = (18,))#candidate|8518|(18,)|var|uint64
call_8517 = relay.TupleGetItem(func_7319_call(relay.reshape(var_8518.astype('uint64'), [2, 3, 3])), 0)
call_8519 = relay.TupleGetItem(func_7321_call(relay.reshape(var_8518.astype('uint64'), [2, 3, 3])), 0)
const_8522 = relay.const([[[0.402380,-8.791593,5.808742,1.105786,-9.483267,-7.919344,-1.622077,8.059959],[5.768432,-3.158458,-9.521958,-1.446877,-5.216234,-2.023881,2.624309,4.037323],[0.209086,0.874337,-0.406288,6.362551,2.026510,-3.562791,-3.284798,5.799570],[1.107087,0.546985,-3.898130,3.848433,-9.292004,-7.041251,-4.754703,-5.780845],[8.413017,-7.925994,-3.137904,-8.293442,1.482169,6.357072,7.878521,4.449706],[-3.780425,-5.875384,-5.354014,8.850375,3.398740,-7.179320,4.818597,7.290483],[4.657464,9.738666,-5.097052,2.111624,-8.489732,9.503020,-9.895258,-2.504099],[6.833949,3.728623,4.060795,-4.427218,-1.393960,-1.395666,3.507303,-4.725478],[3.921549,-7.091212,2.895965,7.555662,6.845294,6.924305,5.303285,-8.170826],[0.529585,-7.700678,0.307233,8.841444,0.566803,5.371997,-2.603534,8.576736],[3.630118,7.251601,-8.936394,-6.810973,2.416710,5.573969,-6.507431,0.273409],[2.197747,-6.682964,-8.059965,-7.954036,4.741159,-2.691721,1.231251,7.863284],[3.082671,1.454144,3.206674,0.657260,-3.283587,7.952039,1.552329,-6.380404],[-9.912401,2.292284,-9.226716,-0.674816,2.908139,6.616640,0.548699,-0.967950]],[[6.705081,-0.086762,1.350417,5.825173,-3.043013,-7.059704,9.996343,-7.155498],[4.611984,-4.698145,2.200353,6.397945,5.850179,1.439709,9.975193,-4.271112],[8.841908,9.449153,-2.370961,-4.391334,9.977635,-1.099579,2.223290,-3.824912],[-4.684570,0.112919,-2.787467,7.537580,7.439752,-7.877852,-3.834235,-6.508122],[8.658506,-1.861680,-4.399126,-1.510005,-2.708046,3.611540,1.089219,-5.358156],[-2.394027,0.957135,4.855472,0.286548,1.326445,7.127883,-8.215451,7.915324],[-4.348608,7.842588,6.715374,-3.313031,0.882490,0.605896,-8.481018,-5.313067],[1.605247,8.005110,-4.808275,-2.648277,-9.883589,4.628408,6.600427,-7.727353],[8.771615,-3.759890,1.244815,-7.437166,-1.125321,6.778016,3.354106,-8.728569],[5.628410,6.923028,-3.980185,3.299522,-4.222913,1.502357,4.470902,9.381644],[4.224961,1.395548,-2.619159,6.057626,-7.631490,0.689405,2.360718,-0.958548],[0.890448,-1.454450,9.326148,-1.634030,8.346587,0.966181,2.130126,4.707056],[2.784596,3.187644,-1.588312,-3.297497,8.714007,-0.452676,3.836724,3.606754],[7.388899,-7.358516,6.587786,-1.786542,-8.203991,-3.007991,-4.754123,6.668474]],[[-8.236096,4.472872,9.074858,9.555179,-1.852124,7.597730,0.340614,-3.705443],[0.423608,6.569523,-7.373857,2.116828,-2.568002,-2.977600,5.125941,-4.890205],[1.439640,-9.452315,4.286464,8.718184,1.176614,-7.845008,-1.309004,6.396985],[6.668574,-8.349151,-8.930432,2.197521,8.952080,2.224926,1.258232,6.476039],[-7.899785,9.559481,0.361579,3.094005,-7.048365,3.760474,-1.901629,-4.166427],[-7.342162,0.849529,-2.578173,4.483623,4.621940,-2.874076,-3.952731,7.913677],[3.026600,-9.337719,5.430276,5.098321,9.084382,-5.684059,-5.115700,-9.627823],[-5.162438,3.223156,-5.886372,-7.627592,-1.415140,-1.106817,-2.955160,8.247829],[-0.324561,6.096898,6.259410,1.901597,8.568013,-9.672689,-7.441789,-1.047499],[0.684712,7.637077,-7.903771,1.049457,-1.201685,1.071691,0.289371,-0.590492],[7.980144,5.273100,4.579530,9.020937,2.879976,-8.999965,-4.547211,-0.240480],[-8.292060,7.200830,1.078231,3.907783,-9.225642,4.371134,5.996994,-6.157272],[3.270145,8.529690,-1.848200,1.330822,5.018179,-3.299661,9.328108,8.067065],[-0.526259,-2.776668,7.974667,-6.502022,0.074542,0.026564,7.000053,1.400088]]], dtype = "float32")#candidate|8522|(3, 14, 8)|const|float32
bop_8523 = relay.logical_or(call_8491.astype('bool'), relay.reshape(const_8522.astype('bool'), relay.shape_of(call_8491))) # shape=(3, 14, 8)
bop_8526 = relay.logical_or(call_8492.astype('bool'), relay.reshape(const_8522.astype('bool'), relay.shape_of(call_8492))) # shape=(3, 14, 8)
output = relay.Tuple([call_8481,call_8506,call_8513,call_8517,var_8518,bop_8523,])
output2 = relay.Tuple([call_8482,call_8507,call_8514,call_8519,var_8518,bop_8526,])
func_8538 = relay.Function([var_8518,], output)
mod['func_8538'] = func_8538
mod = relay.transform.InferType()(mod)
mutated_mod['func_8538'] = func_8538
mutated_mod = relay.transform.InferType()(mutated_mod)
var_8539 = relay.var("var_8539", dtype = "uint64", shape = (18,))#candidate|8539|(18,)|var|uint64
func_8538_call = mutated_mod.get_global_var('func_8538')
call_8540 = func_8538_call(var_8539)
output = call_8540
func_8541 = relay.Function([var_8539], output)
mutated_mod['func_8541'] = func_8541
mutated_mod = relay.transform.InferType()(mutated_mod)
var_8645 = relay.var("var_8645", dtype = "float32", shape = (5, 5, 6))#candidate|8645|(5, 5, 6)|var|float32
var_8646 = relay.var("var_8646", dtype = "float32", shape = (5, 5, 6))#candidate|8646|(5, 5, 6)|var|float32
bop_8647 = relay.maximum(var_8645.astype('float32'), relay.reshape(var_8646.astype('float32'), relay.shape_of(var_8645))) # shape=(5, 5, 6)
output = bop_8647
output2 = bop_8647
F = relay.Function([var_8645,var_8646,], output)
mod['main'] = F
mod = relay.transform.InferType()(mod)
print('==========mod==========')
print(mod.astext(show_meta_data=False))
print('===================================')
F = relay.Function([var_8645,var_8646,], output2)
mutated_mod['main'] = F
mutated_mod = relay.transform.InferType()(mutated_mod)
print('==========mutated_mod==========')
print(mutated_mod.astext(show_meta_data=False))
print('===================================')
graph, lib, params = relay.build(mod, target='llvm')
module1 = graph_runtime.create(graph, lib, tvm.device('llvm',0))
intrp2 = relay.build_module.create_executor('graph', mod, tvm.device('llvm',0),'llvm')
intrp3 = relay.build_module.create_executor('debug', mod, tvm.device('llvm',0),'llvm')
intrp4 = relay.build_module.create_executor('vm', mod, tvm.device('llvm',0),'llvm')
graph, lib, params = relay.build(mod, target='cuda')
module5 = graph_runtime.create(graph, lib, tvm.device('cuda',0))
intrp6 = relay.build_module.create_executor('graph', mod, tvm.device('cuda',0),'cuda')
intrp7 = relay.build_module.create_executor('debug', mod, tvm.device('cuda',0),'cuda')
intrp8 = relay.build_module.create_executor('vm', mod, tvm.device('cuda',0),'cuda')
seq = Sequential([
	relay.transform.AlterOpLayout(),
	relay.transform.AnnotateSpans(),
	relay.transform.BatchingOps(),
	relay.transform.CanonicalizeCast(),
	relay.transform.CanonicalizeOps(),
	relay.transform.DeadCodeElimination(),
	relay.transform.DynamicToStatic(),
	relay.transform.FastMath(),
	relay.transform.FirstOrderGradient(),
	relay.transform.EliminateCommonSubexpr(),
	relay.transform.MergeCompilerRegions(),
	relay.transform.Inline(),
	relay.transform.LambdaLift(),
	relay.transform.LazyGradientInit(),
	relay.transform.PartialEvaluate(),
	relay.transform.Legalize(),
	relay.transform.FoldConstant(),
	relay.transform.ToANormalForm(),
	relay.transform.ToGraphNormalForm(),
	relay.transform.SimplifyInference(),
	relay.transform.ToBasicBlockNormalForm(),
	relay.transform.FuseOps(3),
	relay.transform.DefuseOps(),
])
mod = seq(mod)
print(mod.astext(show_meta_data=False))
graph, lib, params = relay.build(mod, target='llvm')
module9 = graph_runtime.create(graph, lib, tvm.device('llvm',0))
intrp10 = relay.build_module.create_executor('graph', mod, tvm.device('llvm',0),'llvm')
intrp11 = relay.build_module.create_executor('debug', mod, tvm.device('llvm',0),'llvm')
intrp12 = relay.build_module.create_executor('vm', mod, tvm.device('llvm',0),'llvm')
graph, lib, params = relay.build(mod, target='cuda')
module13 = graph_runtime.create(graph, lib, tvm.device('cuda',0))
intrp14 = relay.build_module.create_executor('graph', mod, tvm.device('cuda',0),'cuda')
intrp15 = relay.build_module.create_executor('debug', mod, tvm.device('cuda',0),'cuda')
intrp16 = relay.build_module.create_executor('vm', mod, tvm.device('cuda',0),'cuda')
graph, lib, params = relay.build(mutated_mod, target='llvm')
module17 = graph_runtime.create(graph, lib, tvm.device('llvm',0))
intrp18 = relay.build_module.create_executor('graph', mutated_mod, tvm.device('llvm',0),'llvm')
intrp19 = relay.build_module.create_executor('debug', mutated_mod, tvm.device('llvm',0),'llvm')
intrp20 = relay.build_module.create_executor('vm', mutated_mod, tvm.device('llvm',0),'llvm')
graph, lib, params = relay.build(mutated_mod, target='cuda')
module21 = graph_runtime.create(graph, lib, tvm.device('cuda',0))
intrp22 = relay.build_module.create_executor('graph', mutated_mod, tvm.device('cuda',0),'cuda')
intrp23 = relay.build_module.create_executor('debug', mutated_mod, tvm.device('cuda',0),'cuda')
intrp24 = relay.build_module.create_executor('vm', mutated_mod, tvm.device('cuda',0),'cuda')

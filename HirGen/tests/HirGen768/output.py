import tvm
from tvm import relay
from tvm.ir.transform import Sequential
from tvm.contrib import graph_runtime
import numpy as np
mod = tvm.IRModule()
mutated_mod = tvm.IRModule()
var_5 = relay.var("var_5", dtype = "float32", shape = (4, 12, 7))#candidate|5|(4, 12, 7)|var|float32
uop_6 = relay.tan(var_5.astype('float32')) # shape=(4, 12, 7)
output = uop_6
output2 = uop_6
func_40 = relay.Function([var_5,], output)
mod['func_40'] = func_40
mod = relay.transform.InferType()(mod)
var_41 = relay.var("var_41", dtype = "float32", shape = (4, 12, 7))#candidate|41|(4, 12, 7)|var|float32
output = func_40(var_41)
func_42 = relay.Function([var_41], output)
mutated_mod['func_42'] = func_42
mutated_mod = relay.transform.InferType()(mutated_mod)
var_68 = relay.var("var_68", dtype = "int32", shape = ())#candidate|68|()|var|int32
const_69 = relay.const([[[5,1,3,7,-5,-9,-6,2,3,-10],[3,9,-1,-7,-10,-10,2,-2,-3,-6],[9,-3,-10,-1,-10,-8,-4,3,6,6],[6,3,-9,-4,6,-3,9,-10,-1,-10],[3,-4,-8,2,8,2,-6,-3,-1,-7],[8,2,6,-4,4,-9,-5,1,1,-7],[-5,-10,-5,-4,-1,3,-1,-7,-8,5],[9,6,7,5,-5,5,-5,-9,-10,-5],[5,2,-3,-4,-2,-3,-3,2,8,-7],[4,-3,9,-7,8,-1,2,-1,-4,7],[2,-6,-1,-6,-10,4,-5,2,10,4],[-3,-10,-2,-3,-6,2,-2,-4,1,-6],[2,-6,8,10,9,-7,-3,-9,-10,9],[5,-3,-4,-2,6,9,-7,-5,-4,4],[-1,6,-9,-6,9,2,-1,-5,-1,-3]],[[4,-5,8,9,-4,-5,-5,8,-8,-3],[-2,-3,10,-9,4,10,-5,-2,-6,2],[3,7,-8,9,9,-5,7,-3,5,-1],[-5,10,7,-2,-2,-5,2,2,-4,6],[-3,4,6,-8,-3,-3,-2,-10,-4,4],[-5,-2,10,4,4,-9,10,8,3,8],[-7,-4,-5,-9,-5,6,1,-8,1,5],[4,4,-7,10,10,-6,1,7,-6,-7],[-9,-2,3,1,2,1,2,-9,-8,9],[-9,9,6,-7,4,3,1,6,-5,-9],[-5,-4,6,5,2,-3,10,-2,8,7],[5,7,-5,-1,-10,-9,1,-1,9,-10],[-2,4,3,-6,-7,-4,5,8,4,4],[10,-8,-9,5,-7,-10,7,10,-10,-2],[-1,9,2,10,9,-2,7,1,1,5]],[[10,-8,9,-9,-4,8,-9,-5,-6,-7],[-9,5,8,-4,-1,-8,6,10,-2,6],[9,-5,-1,-1,3,2,-6,-10,5,5],[2,-9,-9,-6,9,9,4,-10,2,1],[-9,9,-2,-2,-2,-4,-10,5,-3,10],[-2,4,5,-10,5,-4,4,2,4,-4],[-10,-5,1,-2,2,10,3,10,8,-6],[-9,7,-8,1,2,-10,-4,-5,-6,1],[10,-2,5,-10,-9,-6,-9,-4,-4,8],[-10,8,-5,9,9,9,-3,-2,-2,3],[-1,2,4,6,10,-3,2,4,-6,9],[5,5,-1,-6,3,4,10,3,-1,3],[-3,-4,8,4,-1,1,5,1,5,8],[-9,-2,-10,5,6,-5,-2,7,4,-6],[-8,-10,5,8,-1,7,-1,-10,-6,4]],[[-1,-4,-7,7,-4,-8,-1,5,10,-3],[-2,-10,1,-5,3,10,10,8,-5,-1],[-9,-1,-5,-4,2,5,-10,-8,-3,8],[6,-1,-2,-4,-4,-5,-3,-3,5,-5],[-5,-10,5,3,-4,-3,1,-7,-3,-9],[7,1,-2,-10,2,-3,-8,-1,10,-9],[7,5,8,-10,-2,-9,6,-10,-4,5],[-10,2,-1,8,-7,8,-3,-3,-4,1],[3,-6,9,7,-8,1,3,3,6,-7],[-2,-8,-7,-5,5,6,5,-7,10,2],[-10,-6,-6,-9,2,-7,1,1,-8,9],[-4,1,1,-6,4,8,10,-7,3,-1],[1,1,-5,10,-1,-9,7,4,8,8],[-9,5,8,-8,-7,-6,-8,10,1,9],[2,9,-5,-9,5,6,2,7,-3,-3]],[[-5,9,-7,-7,3,-4,-1,4,6,-3],[-1,-6,8,4,-10,2,-5,-7,1,3],[-9,9,-8,9,8,-4,9,-1,7,10],[10,1,2,8,-3,7,7,-3,9,-10],[4,-6,-6,-3,10,-10,-5,8,10,-1],[8,-6,-6,-2,3,-3,-6,3,4,6],[-9,-8,7,2,-1,-2,-2,6,9,4],[7,-10,-6,4,-9,6,7,2,10,-3],[6,-2,4,-10,-5,5,-2,5,-8,-8],[1,4,-9,-2,-10,-4,10,7,-5,7],[1,-9,6,1,-3,2,-6,-2,3,-8],[10,-7,7,4,-3,1,4,-9,4,-6],[-2,10,5,2,7,8,1,8,3,9],[5,-10,-10,9,10,10,6,-9,-6,-6],[3,2,1,-2,-2,-10,3,-5,-10,8]],[[2,1,9,-8,3,10,9,-9,-10,7],[-4,-10,-9,-1,-9,-9,6,-8,2,-2],[1,-8,-3,-3,8,8,8,-10,-3,8],[-9,-3,-8,3,-9,4,8,2,-1,-8],[-6,-2,4,-3,-2,-7,7,9,4,-5],[9,-5,-1,2,-2,10,5,-4,3,-6],[-8,9,4,9,10,-1,3,-9,10,8],[-10,-4,2,5,-5,2,5,-7,9,-5],[1,-9,-1,-1,-10,7,-1,8,-6,1],[-6,-5,6,8,-1,4,2,-6,-4,5],[10,-3,-10,-6,-5,-2,-2,10,10,-3],[4,2,-3,-6,-7,-10,-3,-8,5,1],[-3,-9,-9,-4,8,9,5,5,-10,-4],[3,4,8,-9,9,2,-5,6,-1,-3],[8,-10,-5,-2,9,-4,9,-8,-3,9]],[[-9,4,4,-7,2,4,6,-4,1,8],[1,2,-3,8,-7,5,-2,1,-1,-8],[10,3,-8,-7,-3,10,-10,-6,5,6],[-5,-10,-2,-10,9,5,4,5,5,2],[10,3,-6,-10,5,3,-1,-6,5,-5],[7,-6,-8,-2,5,-10,-8,5,-2,-5],[5,8,2,-8,-3,3,-4,9,-2,-4],[5,-3,9,-6,-7,9,-10,9,-4,-3],[1,-4,-7,-7,-4,-7,9,1,-10,-10],[-10,10,-7,-4,-5,7,-2,-10,-4,7],[10,-8,-4,8,9,-4,6,-9,-4,-5],[1,-6,2,2,-5,-5,-3,-5,-5,-4],[10,1,1,-2,-6,-5,-8,10,6,-8],[-2,-7,8,-3,-4,7,-4,-1,-10,-1],[9,-3,-6,-9,-6,-5,-1,-3,-4,-4]],[[-3,4,9,2,8,8,-1,6,-4,4],[-5,-8,1,7,-8,-6,10,-8,-7,2],[6,-5,-1,-4,8,-4,-7,9,-4,7],[-7,-2,-5,8,3,-7,10,-3,3,-5],[-7,3,-3,-6,-1,10,-6,-5,-5,2],[2,4,-1,2,-8,4,8,-3,-4,-10],[10,10,-4,-6,7,4,9,-3,9,-4],[-2,4,8,5,-4,6,4,-1,-1,7],[7,1,-9,6,-10,5,-9,-4,-6,-8],[3,-4,9,7,-2,-2,-4,-5,-7,-3],[1,7,-8,-6,9,5,-7,-8,4,-8],[10,9,3,8,-5,5,2,-8,4,-3],[8,-4,8,-3,9,-1,1,2,-4,-4],[-3,6,2,6,-8,8,8,2,5,-8],[-7,3,9,-2,6,-5,-4,6,7,-1]],[[-10,10,2,-4,9,3,-1,4,2,6],[-3,-8,-1,4,-6,-10,7,-4,6,-5],[-8,-1,-5,-10,2,-4,6,-1,-6,-3],[-3,9,-7,-6,-1,-7,1,9,-4,2],[6,8,-10,8,-7,8,-8,-7,-2,-9],[8,-3,6,5,-2,4,7,-1,-5,2],[-4,2,-1,-6,-4,5,4,10,-9,-10],[4,-10,-9,7,-2,6,3,-7,-6,7],[-1,-1,8,5,-8,10,-10,-4,-3,-3],[-2,-2,-8,9,-5,6,-9,-9,10,-6],[-8,2,-9,8,-7,-1,-1,-6,-4,-5],[-3,5,1,3,-9,-4,7,8,2,10],[-7,10,5,-9,3,10,-8,-10,-10,-4],[1,-7,-2,6,10,-5,8,7,1,4],[3,-2,10,1,6,-10,-1,-7,3,9]],[[9,2,-9,-1,-6,-6,1,-1,-1,-3],[-10,-4,-4,-6,-2,2,-8,1,3,8],[8,-2,2,-4,-8,10,1,-8,4,-2],[10,-10,-8,6,4,3,-9,-3,-8,6],[5,1,9,-1,-5,1,-8,-4,3,-8],[-7,1,7,9,-2,-1,-8,-2,-4,-1],[-9,4,5,-4,9,7,6,-2,-3,-8],[3,-3,4,9,10,6,-2,7,-8,8],[-4,1,-5,2,-3,5,10,6,-3,9],[-3,-3,7,4,2,3,5,7,-9,7],[9,-8,2,-10,-7,8,-8,-6,-2,10],[-2,-9,1,8,5,1,-9,-1,-3,6],[2,1,-5,-4,-9,1,9,8,-6,-1],[-2,-2,-3,2,6,5,1,9,-7,5],[9,-7,7,-10,2,3,6,-6,10,5]],[[7,-5,10,-6,-7,10,6,4,-5,-6],[6,10,7,-10,-6,-5,7,-1,4,-1],[-10,-8,-10,-10,9,-1,-7,8,9,-1],[5,9,-5,-8,-10,3,1,6,6,-8],[6,-3,-2,-7,10,-9,-3,6,1,-7],[2,10,-1,-9,-6,3,6,-5,6,-1],[-9,1,7,7,3,10,6,-3,8,-6],[-6,-6,-5,-1,4,-7,-2,-2,10,-8],[7,-10,-8,2,4,-2,-8,-3,1,4],[-7,8,-3,-10,-2,-8,8,4,3,-4],[5,-7,8,6,5,-7,-2,4,7,-10],[6,-10,8,-2,9,7,-4,4,4,1],[1,4,3,1,-5,9,-9,-6,10,-9],[4,2,8,-1,-8,-4,10,-2,-5,5],[4,-1,-2,1,5,-2,3,8,-9,-6]],[[1,6,7,8,-9,-1,-6,7,9,9],[-5,2,4,1,-9,10,6,-3,4,-4],[4,-7,10,-6,1,3,-8,-3,-5,8],[3,3,-6,2,-8,2,-4,2,-4,-2],[-6,8,-8,-8,7,-6,-6,10,7,-9],[-8,7,-3,-5,7,-9,-2,9,-1,-4],[5,-9,-1,2,-2,-5,5,4,10,2],[-7,-2,-9,1,-2,-8,-5,9,-9,3],[5,2,9,5,-5,9,-9,3,6,9],[6,-6,-6,8,7,5,-1,-9,4,2],[-4,-3,5,-2,-9,8,8,-10,-8,-10],[-2,-6,-3,-5,-2,8,9,-8,9,-5],[1,-8,7,3,-6,4,-9,1,7,9],[-3,3,10,6,3,2,7,5,7,1],[3,3,6,-4,-10,-10,1,6,-7,3]],[[-4,-6,-4,-6,10,-8,3,-7,-7,-1],[5,1,7,9,10,5,-8,6,3,5],[-9,10,-4,2,7,8,7,8,-7,-1],[9,-2,9,9,9,-9,6,-2,-4,4],[10,-3,-1,2,-8,-6,8,-3,7,-3],[7,7,-1,8,3,-9,1,-1,-1,-2],[-5,5,8,4,-4,-4,-9,6,9,-5],[5,-7,-6,-1,-1,-5,5,4,1,-9],[-5,6,3,3,-8,-6,2,1,4,-4],[-7,5,-2,5,7,8,8,-3,10,5],[-6,-2,6,6,-5,7,1,4,-9,7],[-5,-7,1,-4,-7,10,9,2,3,-7],[8,2,6,-5,5,2,-6,-2,10,-7],[-4,10,9,3,10,10,-4,1,8,-6],[7,4,-6,10,2,-2,-4,-2,-6,5]],[[-4,8,-9,9,-3,4,-2,3,5,-3],[1,-5,-2,10,-3,4,3,-7,-10,-2],[3,5,4,-3,-1,8,-6,1,-2,-5],[-9,4,2,-4,10,-7,6,8,8,-1],[-10,3,1,-3,4,-8,9,-4,-5,-5],[-8,8,2,4,-7,-1,3,2,-7,-7],[-7,5,-8,8,9,8,6,1,-2,-10],[-9,6,6,-6,-7,7,9,-9,-2,10],[-2,9,4,8,5,5,-10,8,10,-2],[-6,-8,-10,1,6,1,10,6,2,-10],[-1,-2,3,-8,1,-10,6,3,-5,-7],[-8,8,10,1,-5,8,-5,4,8,1],[-1,-10,8,-2,8,3,8,5,3,-10],[7,4,-8,-10,-2,10,3,-10,-1,-4],[-2,8,-10,9,-9,2,9,-9,-6,-5]],[[-1,10,5,5,-2,9,-7,5,-8,-1],[-5,4,-8,-3,2,-3,-5,7,4,-7],[10,-10,3,-2,-10,-9,-5,9,5,-10],[-9,2,-7,-5,-10,9,8,-6,-5,-3],[3,-1,6,4,1,-10,8,-6,10,7],[-4,1,6,-5,8,-7,10,9,-10,-7],[8,3,9,4,3,-1,-8,10,-10,6],[-3,-8,2,8,2,-3,5,10,-7,5],[-6,6,-7,-9,-1,4,1,-6,-1,5],[2,-8,5,-10,2,10,-2,-3,3,7],[-8,-8,6,2,-8,5,-6,-8,-10,-1],[6,2,8,-8,-9,4,9,-6,8,2],[-4,8,9,9,4,6,1,-9,-5,-9],[3,2,7,-7,-8,1,-6,-2,-4,-6],[2,10,10,-2,6,9,-7,3,1,-9]]], dtype = "int32")#candidate|69|(15, 15, 10)|const|int32
bop_70 = relay.left_shift(var_68.astype('int32'), const_69.astype('int32')) # shape=(15, 15, 10)
func_40_call = mod.get_global_var('func_40')
func_42_call = mutated_mod.get_global_var('func_42')
const_82 = relay.const([-3.663960,-1.804879,2.103952,-3.621171,-5.179423,-1.412115,-0.047885,9.233043,0.558440,-8.026726,6.838139,-6.917275,-0.591950,-3.575607,5.128571,3.019910,9.717350,1.523943,9.613961,-6.741497,-9.239469,-1.990954,-8.874652,0.669713,4.654700,-1.684164,1.449938,-6.539049,-8.987470,-0.280263,-9.303748,1.455444,9.783446,-9.428266,-1.787330,-8.451179,7.687441,4.036782,6.192541,2.286193,-3.382232,6.711692,7.958933,-5.873695,-7.824540,8.062168,-8.664378,-4.975830,6.619203,-3.558788,4.217984,1.280294,1.476237,0.010321,5.467119,5.143714,-2.140067,3.727433,-8.599993,8.290178,-8.330171,4.581154,6.690296,1.887181,-2.309431,-1.546830,-6.738499,2.341823,-7.012641,-5.101423,5.718495,-3.252407,-3.298198,0.495549,0.363255,-2.138484,-5.254734,-6.245589,2.709337,-8.328764,4.263426,-8.690494,-1.739209,4.324322,-1.730623,-1.160782,-5.668389,2.004192,1.677323,7.215433,2.312473,-7.140748,-8.058157,5.603463,-6.012459,3.993675,-3.291097,-8.754763,2.127613,4.310016,3.537260,-8.754516,-1.934588,1.852817,-8.735638,-9.575346,-8.929686,0.294151,1.684217,-1.768968,8.492012,5.943233,0.052870,-2.149242,-6.584218,-2.558887,-4.910985,0.320860,-5.110761,-1.467066,3.572213,-2.843632,0.403363,-0.689049,-7.139888,8.393356,8.178539,4.756590,-4.883973,6.750213,-1.590222,-8.016228,-3.899871,9.009603,-4.694463,-5.000661,8.589709,0.589616,-4.120554,2.131582,9.281477,-8.541758,-9.519546,1.107151,-0.305547,8.730221,1.507667,6.880072,1.101273,-3.365661,-0.558947,9.614808,-7.599632,-0.858395,5.615094,8.939253,-5.698775,5.878926,-0.093858,6.624394,3.982016,4.341881,2.905464,2.425091,4.621705,-6.251669,-2.158020,4.404495,3.156418,1.178129,-6.728225,4.957254,2.861488,3.692360,6.908564,-1.335299,4.380543,2.219997,-0.253555,2.227767,5.023500,5.379138,0.981700,-8.251775,-0.936819,3.158806,-3.038637,-7.145305,8.800144,8.755803,-4.042801,-3.003687,8.648460,-6.119185,-5.029279,-8.179067,-0.478908,8.986442,-3.549233,-9.710335,9.138961,1.474116,-6.262836,7.011024,2.413410,-5.375110,-3.848358,8.242963,9.277186,1.685383,9.290365,1.643835,8.872623,-3.876250,-4.020197,1.295176,-2.362649,0.308888,-0.189197,2.711698,-3.746872,6.738199,-8.149408,-1.910585,9.102733,2.288845,2.722611,-1.427490,3.057291,0.085999,9.952349,1.821247,0.268888,-9.611518,-0.571794,-6.772755,1.673037,8.907757,-4.172012,2.252783,-8.541089,1.297105,8.802579,-0.970462,-3.044956,-6.928735,-9.689409,9.582537,9.214162,1.276385,9.532832,-7.455023,-4.774045,-3.595134,5.673009,-3.526164,-8.734616,-1.999535,0.142707,-0.825336,-7.704406,2.824306,8.886605,-0.609616,-5.439234,-6.944204,2.385294,-8.302695,-3.857050,6.268634,1.795112,9.637034,8.097258,9.448536,2.165977,-8.597315,5.287117,-0.463335,-5.834791,9.497352,5.178177,0.832064,-0.497440,-3.128218,-8.602489,-7.818167,7.633206,-5.513674,9.472410,8.048205,2.258370,-6.148562,7.596872,2.079170,-9.918460,-6.729826,-6.621414,-4.220094,9.708884,-6.298764,-4.443585,3.827464,-4.710105,-7.180918,-3.086425,-3.485395,2.281573,-2.670353,-9.425680,0.470330,-1.149552,-6.519588,0.263610,5.977534,5.167151,-7.633944,-2.673721,6.140815,1.468788,3.232701,9.262913,-3.089661,-5.787492,2.942410,-1.985059,2.934156,-2.115010,-1.981032,6.969401,-6.588250,9.376067,-0.410828,0.556583,-1.613537,-6.201190,-0.166447], dtype = "float32")#candidate|82|(336,)|const|float32
call_81 = func_40_call(relay.reshape(const_82.astype('float32'), [4, 12, 7]))
call_83 = func_40_call(relay.reshape(const_82.astype('float32'), [4, 12, 7]))
output = relay.Tuple([bop_70,call_81,const_82,])
output2 = relay.Tuple([bop_70,call_83,const_82,])
func_95 = relay.Function([var_68,], output)
mod['func_95'] = func_95
mod = relay.transform.InferType()(mod)
var_96 = relay.var("var_96", dtype = "int32", shape = ())#candidate|96|()|var|int32
output = func_95(var_96)
func_97 = relay.Function([var_96], output)
mutated_mod['func_97'] = func_97
mutated_mod = relay.transform.InferType()(mutated_mod)
const_238 = relay.const([[[0.769555,-5.051413,2.283250,6.727391,8.485105,-2.262331,4.086583,0.379690,-6.556406,5.381787],[-2.401882,-0.149579,-1.008296,-3.130813,-0.701080,6.582697,-3.680383,-8.607301,8.084520,-7.216219],[8.629605,8.214929,2.543465,-8.960570,6.400350,-1.408775,4.569053,7.179179,0.225302,-3.538259],[0.341778,3.030177,9.344739,3.277004,5.467102,9.161396,-0.366101,3.750443,9.399919,-6.659984],[8.751595,1.362125,0.330565,3.091309,-4.510262,1.198334,4.617695,7.812383,-2.089340,7.939172]]], dtype = "float32")#candidate|238|(1, 5, 10)|const|float32
uop_239 = relay.atanh(const_238.astype('float32')) # shape=(1, 5, 10)
uop_248 = relay.atan(uop_239.astype('float64')) # shape=(1, 5, 10)
func_95_call = mod.get_global_var('func_95')
func_97_call = mutated_mod.get_global_var('func_97')
var_263 = relay.var("var_263", dtype = "int32", shape = ())#candidate|263|()|var|int32
call_262 = relay.TupleGetItem(func_95_call(relay.reshape(var_263.astype('int32'), [])), 0)
call_264 = relay.TupleGetItem(func_97_call(relay.reshape(var_263.astype('int32'), [])), 0)
output = relay.Tuple([uop_248,call_262,var_263,])
output2 = relay.Tuple([uop_248,call_264,var_263,])
func_268 = relay.Function([var_263,], output)
mod['func_268'] = func_268
mod = relay.transform.InferType()(mod)
var_269 = relay.var("var_269", dtype = "int32", shape = ())#candidate|269|()|var|int32
output = func_268(var_269)
func_270 = relay.Function([var_269], output)
mutated_mod['func_270'] = func_270
mutated_mod = relay.transform.InferType()(mutated_mod)
var_323 = relay.var("var_323", dtype = "float64", shape = (16, 13, 11))#candidate|323|(16, 13, 11)|var|float64
uop_324 = relay.erf(var_323.astype('float64')) # shape=(16, 13, 11)
output = relay.Tuple([uop_324,])
output2 = relay.Tuple([uop_324,])
func_343 = relay.Function([var_323,], output)
mod['func_343'] = func_343
mod = relay.transform.InferType()(mod)
mutated_mod['func_343'] = func_343
mutated_mod = relay.transform.InferType()(mutated_mod)
var_344 = relay.var("var_344", dtype = "float64", shape = (16, 13, 11))#candidate|344|(16, 13, 11)|var|float64
func_343_call = mutated_mod.get_global_var('func_343')
call_345 = func_343_call(var_344)
output = call_345
func_346 = relay.Function([var_344], output)
mutated_mod['func_346'] = func_346
mutated_mod = relay.transform.InferType()(mutated_mod)
var_487 = relay.var("var_487", dtype = "int16", shape = (15, 12, 4))#candidate|487|(15, 12, 4)|var|int16
const_488 = relay.const([[[6,-2,9,-1],[-5,4,6,-8],[-1,7,3,-8],[1,-6,4,1],[-3,-2,-8,3],[-10,9,2,8],[-8,-1,-1,3],[-4,1,4,7],[-6,2,-2,9],[-3,1,6,1],[6,-8,-1,-7],[9,5,1,-3]],[[-3,-2,1,8],[-2,1,8,-3],[-6,-1,1,3],[7,5,10,-6],[-10,-7,-2,7],[5,3,2,8],[-6,-4,-7,8],[5,-2,9,9],[8,2,-2,-5],[1,-10,3,-10],[7,5,10,-9],[-7,1,1,-5]],[[7,-3,10,-8],[6,-1,-8,-8],[-4,-10,-8,-1],[-10,-1,6,1],[5,2,2,6],[8,6,8,-2],[9,-9,8,4],[-6,-10,10,4],[5,-3,-8,4],[-6,-3,-6,-9],[6,4,7,4],[2,6,7,-9]],[[7,-9,3,-4],[-8,5,3,-1],[-1,-3,-2,2],[2,7,-7,2],[-10,-1,-8,4],[-4,-10,-3,4],[-5,-10,5,-4],[-1,6,7,4],[-3,-2,1,-7],[-5,2,7,9],[4,-2,5,-7],[6,4,5,3]],[[-4,9,1,10],[4,-5,7,-4],[7,-3,-1,-9],[-6,-10,-3,-1],[8,-4,-7,-6],[-6,1,-6,6],[10,-6,-10,7],[1,10,-10,3],[-10,-8,9,7],[6,-9,-2,6],[6,2,10,-3],[9,-5,4,-7]],[[-2,5,-1,-9],[10,-9,-4,-6],[-8,6,10,-7],[5,-7,9,-7],[-1,4,-5,-6],[2,-1,2,-7],[-6,8,-4,-4],[-8,-10,-5,8],[9,7,-7,-3],[8,-5,9,-1],[-5,-10,4,10],[5,9,-8,7]],[[10,-3,4,-8],[-10,-3,5,4],[2,10,8,-8],[-9,4,-5,-7],[2,2,8,10],[-2,-4,8,-8],[-2,8,8,4],[4,-5,6,4],[3,-5,7,-6],[-10,-8,10,1],[-4,-3,-7,-10],[-4,2,8,-9]],[[-5,10,10,2],[6,-10,-6,10],[2,-2,2,-3],[-6,8,2,-3],[-2,8,-8,-3],[2,3,-8,8],[8,-10,10,7],[-10,-10,-2,9],[5,-7,-10,1],[8,10,9,-6],[7,-7,1,5],[-1,-4,-7,9]],[[10,6,6,2],[1,10,9,7],[3,-5,10,-8],[4,-5,2,-2],[8,2,5,-10],[3,6,-5,10],[-9,-4,4,9],[3,8,6,8],[9,-9,-4,-9],[-8,-1,-10,-1],[-7,-5,9,10],[9,-5,-9,10]],[[5,-10,-8,-9],[8,9,2,-4],[-7,9,-4,-5],[-6,-10,5,3],[-9,10,6,4],[-1,9,-3,2],[3,-3,10,-1],[-10,5,9,7],[3,-5,-9,2],[-2,-3,7,4],[-7,-8,-6,-7],[-10,-4,-10,-6]],[[2,-3,-4,3],[9,2,1,7],[-6,-7,4,1],[-6,-10,9,1],[-1,2,-3,-1],[1,10,3,10],[-10,2,-10,-7],[-1,5,5,9],[4,3,-8,-10],[10,-1,-7,2],[7,-1,-8,-5],[7,9,8,10]],[[-1,7,-9,-10],[-7,4,1,1],[-10,5,3,9],[10,4,5,-7],[-6,8,3,6],[7,6,-4,6],[-3,3,8,6],[9,-5,-3,-1],[-7,6,-6,-10],[2,1,-4,1],[-7,-3,-8,5],[10,-2,-2,-4]],[[3,-9,-2,-2],[-6,10,1,5],[-6,6,-9,1],[-1,-10,5,4],[-4,7,-3,-10],[-3,8,10,3],[-2,-9,-10,-10],[-3,-5,-6,6],[-9,6,1,10],[-4,9,2,1],[-3,-6,-3,3],[9,-4,-7,5]],[[-5,-8,8,-2],[6,8,5,3],[2,-10,-6,-10],[-1,9,5,3],[-6,-6,-1,-9],[-10,-7,8,3],[-1,-4,-6,-1],[-7,4,-6,-3],[2,-9,8,1],[6,-4,-10,-4],[-10,8,-3,2],[3,3,4,2]],[[-7,-10,10,4],[-1,-10,-5,-4],[3,8,2,5],[7,5,-5,-9],[9,-7,3,4],[-10,-5,-7,10],[2,7,2,-9],[1,2,2,-10],[3,1,1,-9],[8,-7,-4,8],[-9,-10,-6,-9],[5,-4,-5,2]]], dtype = "int16")#candidate|488|(15, 12, 4)|const|int16
bop_489 = relay.greater(var_487.astype('bool'), relay.reshape(const_488.astype('bool'), relay.shape_of(var_487))) # shape=(15, 12, 4)
func_343_call = mod.get_global_var('func_343')
func_346_call = mutated_mod.get_global_var('func_346')
var_505 = relay.var("var_505", dtype = "float64", shape = (2288,))#candidate|505|(2288,)|var|float64
call_504 = relay.TupleGetItem(func_343_call(relay.reshape(var_505.astype('float64'), [16, 13, 11])), 0)
call_506 = relay.TupleGetItem(func_346_call(relay.reshape(var_505.astype('float64'), [16, 13, 11])), 0)
output = relay.Tuple([bop_489,call_504,var_505,])
output2 = relay.Tuple([bop_489,call_506,var_505,])
func_529 = relay.Function([var_487,var_505,], output)
mod['func_529'] = func_529
mod = relay.transform.InferType()(mod)
mutated_mod['func_529'] = func_529
mutated_mod = relay.transform.InferType()(mutated_mod)
func_529_call = mutated_mod.get_global_var('func_529')
var_531 = relay.var("var_531", dtype = "int16", shape = (15, 12, 4))#candidate|531|(15, 12, 4)|var|int16
var_532 = relay.var("var_532", dtype = "float64", shape = (2288,))#candidate|532|(2288,)|var|float64
call_530 = func_529_call(var_531,var_532,)
output = call_530
func_533 = relay.Function([var_531,var_532,], output)
mutated_mod['func_533'] = func_533
mutated_mod = relay.transform.InferType()(mutated_mod)
var_773 = relay.var("var_773", dtype = "uint8", shape = (1, 5, 8))#candidate|773|(1, 5, 8)|var|uint8
var_774 = relay.var("var_774", dtype = "uint8", shape = (1, 5, 8))#candidate|774|(1, 5, 8)|var|uint8
bop_775 = relay.greater(var_773.astype('bool'), relay.reshape(var_774.astype('bool'), relay.shape_of(var_773))) # shape=(1, 5, 8)
func_268_call = mod.get_global_var('func_268')
func_270_call = mutated_mod.get_global_var('func_270')
const_780 = relay.const(-6, dtype = "int32")#candidate|780|()|const|int32
call_779 = relay.TupleGetItem(func_268_call(relay.reshape(const_780.astype('int32'), [])), 0)
call_781 = relay.TupleGetItem(func_270_call(relay.reshape(const_780.astype('int32'), [])), 0)
output = relay.Tuple([bop_775,call_779,const_780,])
output2 = relay.Tuple([bop_775,call_781,const_780,])
func_801 = relay.Function([var_773,var_774,], output)
mod['func_801'] = func_801
mod = relay.transform.InferType()(mod)
mutated_mod['func_801'] = func_801
mutated_mod = relay.transform.InferType()(mutated_mod)
func_801_call = mutated_mod.get_global_var('func_801')
var_803 = relay.var("var_803", dtype = "uint8", shape = (1, 5, 8))#candidate|803|(1, 5, 8)|var|uint8
var_804 = relay.var("var_804", dtype = "uint8", shape = (1, 5, 8))#candidate|804|(1, 5, 8)|var|uint8
call_802 = func_801_call(var_803,var_804,)
output = call_802
func_805 = relay.Function([var_803,var_804,], output)
mutated_mod['func_805'] = func_805
mutated_mod = relay.transform.InferType()(mutated_mod)
var_1399 = relay.var("var_1399", dtype = "int8", shape = ())#candidate|1399|()|var|int8
var_1400 = relay.var("var_1400", dtype = "int8", shape = (3, 1, 15))#candidate|1400|(3, 1, 15)|var|int8
bop_1401 = relay.bitwise_or(var_1399.astype('int8'), var_1400.astype('int8')) # shape=(3, 1, 15)
func_343_call = mod.get_global_var('func_343')
func_346_call = mutated_mod.get_global_var('func_346')
const_1405 = relay.const([5.126187,5.507552,-2.124620,-9.507292,-2.948068,3.252797,0.670366,-1.098447,3.572933,-0.442102,7.352949,3.799650,0.110728,-0.845008,-5.470159,0.454728,-7.479740,7.675141,3.507715,4.242451,-8.543716,4.977498,-5.570249,3.294342,-3.276907,-2.046082,-4.827691,6.035371,7.425935,4.885453,0.877601,8.953911,4.040218,-5.130523,-1.818338,9.062476,-7.828252,-1.542558,-7.966674,-3.314218,1.461930,-1.353628,8.064401,9.866367,2.525090,-1.741258,9.945085,-9.264740,-6.880780,5.676446,6.438624,-7.902293,0.563590,-7.703154,-9.324401,7.525684,8.555871,2.100256,7.839712,1.855582,1.192742,-1.158795,6.752710,-8.184611,5.429578,-0.658763,-1.582666,1.210908,5.554325,5.748338,-4.949069,8.216495,-4.138793,-0.376141,3.185804,4.108756,-9.032214,-1.298294,-2.037476,4.901935,-7.779352,-2.649342,-0.605082,8.419667,3.485240,3.722361,8.387814,8.687916,-3.443255,6.079964,6.663800,-8.822626,-1.689725,4.099668,8.389645,1.204562,-9.771176,-6.648976,2.065774,-6.912370,-5.782763,-6.342809,-8.999187,-8.077760,-4.405843,3.634881,-8.671120,0.306712,-7.128701,4.323200,4.818015,6.099104,4.091433,6.106942,8.093208,8.551444,8.398987,0.900119,-8.786613,-6.738097,-5.327817,-5.468032,-6.064355,7.935062,3.056250,-8.072349,4.526827,-4.561985,-1.954925,5.366170,-7.457721,2.854269,4.273163,5.827005,-0.105560,-0.892003,3.359292,4.128311,-6.349306,-1.518699,-6.200566,-5.276147,0.483907,-2.361539,-2.017287,6.858512,-5.173162,9.694990,-2.618892,8.541399,-0.474785,3.871074,3.415366,0.921899,1.052798,5.162361,4.072902,-3.809877,-7.973742,-8.213135,-4.273848,0.514722,-5.380720,-1.932217,-0.091741,-6.805609,0.464545,-5.742510,-2.393575,-6.886319,-6.442753,1.305915,-5.802194,-3.422160,-1.951153,2.797583,-9.594801,-6.664425,4.081604,2.270734,-1.333584,4.328614,3.675264,-0.949606,1.246288,-2.544905,-4.876653,3.922408,2.867161,-7.354343,-5.590002,-8.283284,-5.069447,-7.231288,-7.113166,5.655041,3.551948,-9.977601,6.166040,-7.107876,-0.623767,-4.092012,9.124577,5.792055,1.563791,-5.062570,7.625902,-7.702369,0.621004,-9.603759,0.557757,9.978920,-0.348330,3.541489,-1.819787,-8.988671,-2.813328,-5.155763,8.472782,-2.108638,5.480203,-2.718583,-6.073880,-1.709247,4.643711,0.931117,1.896109,6.902907,-5.312712,4.416246,0.493786,8.649598,-4.207941,1.324273,8.968547,-9.488088,-9.263588,-6.045481,2.974703,4.923269,3.866795,5.376958,1.959077,-0.922060,-1.892728,-4.808666,7.136953,7.105342,0.538552,5.459007,4.508039,3.294461,0.858627,-4.200022,6.175212,9.792394,-7.516817,5.653387,-7.029130,3.588303,7.786279,-3.560035,-9.882648,-4.616344,-5.990773,-4.926211,9.163138,7.115103,3.842721,7.009389,2.751727,2.786451,-0.652399,4.774365,-6.914760,3.117023,2.573166,3.025135,9.076875,7.480540,4.078679,0.861878,-3.697393,4.613203,-5.344658,-1.621027,-1.136182,2.856464,-3.831213,5.877884,-4.173270,-6.839278,-6.076878,3.808313,3.962239,7.267056,-9.878872,7.237794,0.934984,6.072863,8.979753,-5.541923,6.975875,-0.197932,-1.033115,3.476857,-6.087193,-0.125731,2.746815,6.870619,8.626178,5.840711,7.135115,-7.778447,-3.355230,1.164468,9.213908,1.480664,5.724350,-5.118643,6.486679,-4.153916,0.883385,-4.024769,-6.164626,0.707574,-4.995595,-8.646397,5.279914,-7.606726,-1.973483,2.072000,0.871351,-3.100089,5.658901,5.389791,-7.077686,-8.341579,-0.641419,-9.913996,-8.771596,-7.082776,1.817924,1.905309,6.659921,-7.449687,3.014913,6.636989,-5.569865,0.545419,-4.461584,-8.674185,1.420630,-9.001623,2.827974,-2.499301,-7.985928,-4.808444,7.908295,-1.138961,6.064773,-1.911188,9.042781,-7.638220,-8.176681,0.009889,-7.795427,1.278932,-9.126234,4.875899,1.884140,-8.558824,2.594738,4.456528,-0.332926,7.992293,-3.940559,-5.627354,-5.524617,4.089849,-9.557568,0.047326,-0.386603,-3.094258,0.273239,-0.243953,-1.972615,-5.713150,0.644277,-8.969587,-0.025595,7.814992,-8.575715,-7.755850,-9.819571,3.663732,-8.828267,6.549226,1.860477,3.849707,-2.987806,3.647361,-7.148289,-6.247265,1.578468,6.730666,-6.189654,-4.974551,-9.889910,3.151644,-1.112033,-4.485470,-4.407645,6.956208,6.207755,-6.207357,-3.349880,-0.445765,7.204838,-0.514232,-7.605452,-4.785687,3.427281,4.481720,3.661889,-0.402990,2.441416,-2.969206,4.733720,0.244197,6.716404,-8.026581,-8.399497,-1.985720,0.439087,-8.235244,4.765038,-8.968394,-4.631705,-6.769543,9.633287,1.170493,7.496831,-6.546351,-6.352025,-2.620958,9.611621,5.655604,3.481795,6.134849,1.738662,-6.138999,9.489699,0.796829,-9.550186,9.601531,-0.868176,-8.613902,5.444964,-8.178293,2.596984,3.050839,5.743064,-5.314364,-2.186562,9.878347,7.446259,-8.066710,3.622813,-5.910139,-5.494158,6.152885,1.697192,-7.455041,-9.233717,-6.177680,6.471828,-0.840074,-9.758343,-0.563949,-2.603994,-0.360865,2.790831,-3.082916,-0.251106,5.926711,5.717819,-3.978395,-6.279248,3.145642,1.538661,-3.873790,3.913349,-2.675272,8.275550,-9.486343,-1.311838,-7.774609,-8.557405,-7.405579,8.097145,7.027044,-0.210953,9.648033,-1.331525,4.855353,-2.100669,6.855907,-3.671617,-4.155826,-1.020922,-4.556123,9.737958,-3.045151,9.393278,7.662497,-5.927630,5.318993,-8.121256,-1.293842,9.995715,-7.430114,0.740294,5.730522,6.017990,-5.383291,6.078429,1.996669,2.110438,-2.440381,-4.074698,0.693498,-4.365132,-4.785098,-9.351103,0.165729,-8.285088,2.231981,1.970190,-6.426955,-1.842009,-0.624745,7.954025,2.113961,-0.051170,9.153597,8.388329,2.513732,-5.662298,-0.831169,-8.916124,-5.962303,0.894116,4.734244,0.864440,-0.628116,-8.880494,5.608418,-9.691685,-1.743134,-6.689666,5.850408,-6.066605,5.096791,-4.914787,6.787788,0.428713,-2.870573,-0.532793,-8.675685,8.602380,2.348263,6.958440,2.450795,1.174668,-6.184525,9.823506,2.812429,7.208450,-6.904195,-4.260699,-0.502267,-6.344201,3.880759,-5.216167,-5.458788,-9.995439,5.473279,-5.641905,5.976809,-4.606363,0.657368,7.684088,-5.237584,3.867377,0.963963,-4.910525,8.453830,-2.785116,4.644004,-5.518190,-9.744966,-9.462235,8.405630,-9.405828,-6.743543,-5.083688,-6.999175,7.827014,-3.838893,-1.048978,-2.313327,-9.833850,1.104388,-8.267109,8.244001,-9.627335,6.452819,-0.525184,6.067093,5.777621,6.351111,6.212857,-6.274013,-3.790640,8.776649,-4.388840,-7.606576,6.002329,4.964706,-2.080893,8.458085,-0.268374,6.293894,4.989101,3.450665,5.399920,-8.542322,-5.067259,5.537109,-1.953415,7.120513,-1.069006,2.832719,2.710285,-5.509840,6.400516,-7.060870,-8.178627,-4.047961,-8.854298,9.040450,7.813424,-3.451442,-3.393032,-7.924263,-0.468759,5.079477,6.247613,8.579597,0.197279,6.763373,0.401211,-6.596669,0.095757,6.583528,-0.686311,7.680031,-9.440882,0.525329,1.266887,6.934732,-4.264197,8.260080,9.760416,-3.869674,-2.032615,-0.806819,-0.464705,0.581476,1.053182,4.717470,0.802046,4.655510,1.381199,-4.451010,0.987881,-7.280330,-3.831738,6.007785,-4.037978,-1.458475,3.409387,-4.016119,4.064406,-7.046307,-2.852538,-3.609628,-9.563718,-5.869801,2.504115,6.112749,-0.237130,-4.404796,9.106918,1.383769,8.978191,-6.503867,-4.728912,-3.497986,-0.112842,-7.676139,9.159141,9.437847,6.357040,2.045627,-3.296684,0.165947,-9.785531,-5.623626,2.663765,-6.362492,0.395798,-4.295693,8.722025,-8.195330,2.328614,8.753994,2.903422,-3.977895,-8.636316,3.491612,-1.757482,4.676372,-7.926060,-5.294986,1.130909,5.615535,1.339630,-4.407539,-6.458282,9.118381,-4.444697,-9.715694,8.626035,-5.914842,-6.181432,-4.589165,-8.122068,-2.449663,4.860452,-3.186926,2.921360,-4.719797,6.465736,2.607316,9.111037,0.202809,2.485969,9.211466,9.299666,-6.990879,-8.367953,-7.594384,1.233521,6.193611,-4.398602,8.190721,6.871139,-7.086868,6.987675,6.753958,-4.584528,-3.487685,-8.726105,-3.041962,2.026332,-2.807659,-3.750099,-6.468162,8.788424,-1.727348,7.046610,3.064777,1.266013,-7.887664,8.238847,5.689578,-5.311984,-4.505015,-3.132447,-4.720662,9.169399,4.260651,-7.196110,4.153076,2.824685,4.206827,-6.562525,-3.985211,-1.113162,-1.587669,-6.795584,-2.741175,7.178073,8.863498,1.048166,1.346203,-2.218064,-7.540736,-4.188271,-5.323721,-4.636204,-8.073802,-7.951282,-2.636086,0.446796,8.399082,8.261254,0.427088,-4.976570,-0.549076,-5.181402,-1.875128,-5.675502,9.153798,0.366843,-0.991926,8.199159,-6.517900,1.246256,4.003713,0.776643,-1.352182,-2.344371,8.517878,0.681505,-7.413431,1.165335,-7.202101,-9.746504,-9.968578,-7.181167,5.664787,9.738944,2.161732,-3.450120,-1.665433,4.230598,-4.326260,-9.212519,-5.996083,7.971839,7.578184,-2.388744,-7.249039,-9.522542,-6.947335,-4.058945,-0.312424,3.128632,-7.741258,-5.012635,5.798000,-8.533697,6.715064,7.195760,-5.786536,2.838549,8.579676,0.355672,-8.578756,-7.427999,-6.504544,-4.390921,-7.464802,4.438138,5.292271,8.979408,0.713812,0.341104,-0.570713,5.635295,7.418247,2.583690,-3.907888,4.926630,-2.979149,5.642971,-4.045790,5.136412,5.597384,8.037815,4.891994,3.060039,-8.595090,7.692455,2.195043,1.059239,6.510992,2.864183,-9.992980,-9.185957,-3.924737,6.410991,0.936345,0.913770,9.459041,-0.463007,-9.501419,-5.236349,-1.867882,8.332348,-5.363600,-2.717370,7.213162,2.664674,-0.862976,-3.471242,6.079140,7.890972,1.414122,3.196213,-7.305691,3.412396,2.570078,7.187383,5.016887,3.950698,-4.115608,-3.652712,5.664258,0.241144,0.707808,-2.588638,6.839150,-2.144938,-1.101840,-6.827364,8.858996,6.274780,5.807537,-2.030396,-4.000682,-1.323179,0.739797,-3.777356,-6.399123,7.783563,-7.974792,-5.154203,1.173958,-0.692416,-2.487668,-4.778542,-5.200410,-1.167057,0.140492,-0.686525,-6.274089,-3.619633,0.747968,-3.680630,-6.907880,-8.020254,0.818687,-7.670228,2.105734,-9.489179,9.423408,0.258740,6.918771,5.711039,-1.767959,-4.235485,-7.728839,-8.630105,9.725960,8.635414,-3.987160,-6.322674,-0.837451,7.700009,0.202749,7.420071,-7.792711,-3.168030,-8.736242,-6.998676,-7.777466,3.559379,3.672946,-1.139074,-0.409665,-5.133350,7.597368,-8.541617,-6.892098,9.927267,-0.757740,-9.024867,5.132331,-8.560888,8.455551,-7.647855,0.869556,-0.490334,-8.717123,8.384676,8.790440,9.068973,7.771390,-5.509276,0.678779,0.091437,7.657579,6.939668,7.651310,-6.469479,-2.116464,-8.427052,5.160292,4.744155,2.801997,-4.397436,-4.272608,-2.371213,-4.315472,2.467865,-1.610890,3.987118,9.803374,7.730884,-5.782388,7.211911,-1.075444,-9.499753,-5.800279,3.020267,-5.253053,-1.886787,-5.642747,-0.197002,-2.114838,-8.834999,1.578266,-3.526558,-5.064471,2.687514,9.808748,-4.256114,-5.672313,4.540315,-1.223291,-2.999858,6.622333,5.788567,8.618785,-2.054244,-7.374029,1.033576,-6.770499,-7.421980,3.486009,0.294641,-6.871983,-5.981172,-6.436014,1.675888,6.253663,4.860745,6.764999,-7.383158,2.394464,-5.416739,0.284477,2.391668,4.015256,1.511099,5.585739,1.230677,-8.022084,-3.537744,-7.273937,8.931353,0.767641,-9.477790,9.168589,-5.833089,2.698812,-2.434852,-8.454721,-3.439648,8.881875,-0.815606,-4.188419,-3.419034,7.884947,2.430550,3.352275,5.116075,6.049544,0.177134,-0.826542,8.579281,-0.933788,7.281557,5.813549,-3.663096,6.996609,8.716059,-8.731711,-3.102531,-8.029360,4.750436,-2.378130,8.711811,-6.824538,-6.754952,-5.766889,-7.957002,-1.443622,2.958660,9.658129,-0.561376,-1.327522,-6.575645,-1.006611,-7.487261,-9.966745,-5.945022,8.286803,1.314219,-4.900977,-2.606381,9.420284,6.517651,-0.465900,-7.504198,-9.803898,-1.663918,-4.689450,7.084800,7.948716,-6.134918,-4.169196,-5.001241,-3.996040,1.035569,-9.792322,8.921787,5.342658,5.222377,6.033376,7.866606,-3.182325,-4.714049,0.386134,5.693377,8.099507,-0.765182,-5.247104,2.535014,-3.737038,1.225177,4.643743,8.304443,9.261238,-7.133407,-9.839500,-7.456863,-6.244939,8.940766,4.491844,-5.417393,-1.189800,-8.077357,-6.283151,7.596552,-0.049198,5.181013,3.628172,-7.769321,0.848769,4.132069,1.530268,-9.073809,-4.838660,4.048810,1.332266,3.370260,-6.719939,-9.516387,5.189438,-1.305851,3.269660,2.866782,-3.243727,4.326239,7.427997,1.989353,6.244558,-0.972526,2.400583,9.073294,9.090041,7.531844,-5.404589,-4.592346,3.669863,0.161207,-1.934498,-3.552532,2.152985,-5.209982,-3.113273,6.392471,-2.231680,-3.266498,9.835763,-9.829158,-6.142507,-4.598496,4.400410,-1.243920,3.931712,1.811671,3.757636,-3.426199,-8.620680,7.650225,-8.442854,-5.552472,-0.954045,7.280183,-3.432957,-8.911015,0.022720,0.145961,-8.209842,5.632953,6.438706,1.348546,-3.623335,2.724424,1.923316,-6.609072,3.497661,-3.977644,4.887537,1.032101,9.635147,-8.059698,9.295241,5.838448,2.062963,6.881507,-8.596976,8.108524,3.409603,2.507035,9.666946,-5.992046,-6.559666,-1.738984,-6.997891,8.272225,-5.006028,-2.849493,1.901540,8.208937,1.722263,7.967928,2.743922,-2.879566,-8.331446,2.966368,9.881686,-7.178506,-5.633194,0.529510,1.210932,-7.020208,-8.524271,1.732909,3.890910,7.328450,6.118693,-0.580966,7.229325,1.518779,-4.481253,-7.080625,8.999978,8.817626,0.313935,-6.234831,6.181240,-4.002607,-1.051190,1.582353,-8.318711,-4.619694,7.976022,3.866125,3.372783,-8.971009,2.388314,-0.475452,-4.122324,3.337374,-7.256161,-1.172678,-3.519755,-6.297111,-1.706573,-7.389726,-5.269999,-2.611052,6.338985,-1.144270,9.857215,-3.654880,8.583432,9.412869,-0.176451,-3.985543,-4.390252,-0.521019,1.927053,4.727279,-8.788703,7.820974,-7.811096,9.220793,9.517652,7.696773,-4.488171,8.093938,-3.519934,8.444560,9.018765,5.455468,-2.137982,2.263134,-1.951296,4.765447,-4.710075,6.850793,6.955944,2.965009,0.166966,5.511211,-0.282891,6.181642,9.727090,-2.626776,-1.619247,-9.310477,4.123273,7.507813,4.922695,1.860294,4.601480,-4.242532,4.444084,8.430319,-5.971798,-9.715922,4.853905,9.586359,0.534107,-6.104367,-9.833391,-3.991502,-0.339867,8.912493,6.806076,8.469282,-3.580906,6.917789,2.061543,-8.017812,3.393865,4.593616,-7.763388,7.143734,-0.377960,-4.477088,-9.510270,-5.240596,-3.587141,-1.526513,-0.152319,-6.293798,-0.991237,-7.342613,-8.116247,4.952550,-7.818292,-9.842898,-8.624506,-3.042154,9.257543,5.101069,3.301302,-6.533751,3.113190,4.434306,0.652710,-6.691914,5.299315,3.281382,2.904968,9.317585,9.810241,1.661564,6.982097,-7.890629,-8.506516,0.271605,-5.771270,3.654467,-1.604739,9.791831,-8.623789,2.936349,7.812476,9.117655,-9.241128,-3.113048,-5.761312,2.029747,0.420861,4.764632,0.190998,6.292208,-0.023699,9.085036,-0.917069,-4.952143,3.409478,-5.186712,7.516178,0.201723,2.913360,0.928429,3.169651,9.159501,5.495498,-4.981704,9.696834,-5.721973,-2.567595,5.883769,-0.908010,8.392907,6.986302,-5.978303,3.183415,-9.097583,7.261888,0.061153,-8.903795,5.316557,9.380855,-2.291168,-5.524430,-0.052689,4.910833,6.475715,-4.415902,5.242528,-8.990497,-4.834981,0.512301,-3.362030,-3.166600,-3.327129,5.592468,-3.435214,4.804716,9.272068,1.151216,9.796235,6.390529,5.144552,7.674362,-9.462183,-3.759339,-4.883434,1.521262,5.310659,-5.239870,6.026640,1.316323,-3.813863,-0.004103,-0.540247,6.407252,-4.261718,-6.282489,-7.366266,-6.090412,-9.709608,5.358046,3.420826,2.165604,4.402795,-2.931091,8.939458,-0.057768,-6.527351,-9.063715,4.540541,-0.398558,-0.188473,0.846831,6.894162,7.469332,-4.844251,-6.499469,-3.325797,-3.245970,7.806644,-6.685864,4.383009,-9.426045,1.732270,-6.284601,-0.687997,8.587494,-2.443935,-6.072667,-4.227116,1.045163,-8.439023,-8.130183,1.311860,-6.091211,3.332335,-3.183720,-3.192004,6.292157,1.887568,-1.744372,-0.685064,-0.465181,-3.058382,-5.621972,6.491191,4.072839,4.087448,-8.671282,1.774558,5.845627,0.628823,7.839785,-0.642294,1.816497,-1.880499,-0.576205,1.808550,0.584410,4.279367,6.810498,7.050556,-4.689099,-4.164764,-5.489684,-0.754244,8.186481,0.807480,6.905973,6.366334,5.625726,-4.616092,-6.014720,-4.990137,4.254667,-7.594731,-8.487714,4.683599,-7.691315,6.735067,2.720879,3.171576,0.323421,4.743592,-6.700225,-0.660015,2.401124,8.477287,-1.554870,7.707476,4.066705,-2.559717,-7.520964,4.984731,-0.653149,5.752143,-0.303708,-9.684069,0.499813,-8.181968,-2.573813,3.812563,0.766684,6.407831,-1.496361,5.010775,-4.497533,-9.168031,7.685842,-8.458610,-5.447467,-8.220344,-7.564882,6.533400,-8.206676,4.210837,-4.140122,-3.857305,-9.409923,9.088143,5.199257,-6.778035,3.618992,-2.550726,-5.542084,-2.418891,-2.476793,1.388165,4.675878,-1.530177,-7.764709,-2.788341,-1.128780,-7.596123,-9.574404,0.930884,-0.760289,-2.911666,-9.917011,4.705695,5.653844,-3.877458,-0.585546,-6.542868,-8.606347,4.997535,-8.363348,5.596669,2.203025,8.870162,5.170585,7.364085,1.675493,9.082846,-7.232640,-7.753329,-1.829497,2.603443,5.621405,-7.387752,-2.749260,-8.132384,1.995979,1.277469,-6.354899,9.624535,2.687251,1.615866,-2.746175,3.675441,8.492912,-8.332989,-2.955651,-2.583837,4.323407,4.503725,3.669795,-1.658172,5.263195,1.518643,9.048749,2.231548,5.928072,7.069906,-7.640359,-2.697270,-4.879717,6.351621,-0.940138,-2.994935,1.297293,5.810502,-9.889480,0.122607,0.785821,8.579925,0.766805,1.524498,5.005960,-6.112730,3.563687,-3.486117,5.724921,-0.245424,3.240847,2.491482,-0.346550,5.627763,1.079150,-4.072044,7.078437,3.071298,7.790728,1.136218,8.296906,-9.607780,-7.721101,-1.538104,-3.201003,5.073369,-2.468580,-9.678604,2.471326,6.888295,1.115472,8.363401,5.836469,0.366173,-1.043156,6.784443,4.638682,-9.057095,-3.435951,7.709764,-3.204930,7.444194,-1.735299,1.016856,1.792808,-4.936256,6.943537,-0.280742,-3.753180,3.366391,-4.459651,-8.570439,-0.581306,-1.692228,6.912708,7.758330,-4.592974,-7.368689,5.788526,1.551476,-1.614009,7.953833,4.436236,-5.100371,4.861986,-7.555232,9.317152,3.496510,-5.297691,-1.201547,-2.620118,6.516204,-2.820199,0.960350,5.881310,7.350819,-2.124068,3.044050,-1.259097,1.820152,2.657236,1.585673,-5.048461,-2.673103,-1.171096,-8.123236,6.765024,-4.070304,-8.270894,5.023254,-7.157050,6.792301,4.991637,-8.900433,3.895145,9.642269,-9.976625,0.409963,-7.543124,5.329343,-3.249839,9.043672,0.837687,-8.535534,1.333408,8.942777,-2.260121,-3.554284,-4.136549,5.885323,-6.647095,-4.069035,0.156011,7.917148,-3.188962,5.365403,-5.932436,-7.627383,-6.665384,3.485424,-0.813883,8.557796,-4.384197,-0.663276,-8.310593,-8.169887,-9.075525,3.973024,-7.510255,5.306314,0.537140,0.719425,3.608545,6.226144,-8.867588,9.244875,-2.652912,9.018748,-1.834450,1.137819,8.001777,7.645779,-2.415568,-8.540831,6.518029,5.428623,-1.204966,2.495409,-1.643250,6.733213,7.149131,0.729359,3.304156,-1.831436,-2.726327,-5.935631,2.067042,-9.702976,2.190786,-8.527585,-4.688627,9.622643,3.553185,4.626021,-0.718667,-1.109113,1.456293,6.886916,8.820816,1.741232,4.205791,2.983731,1.274620,-5.135157,-3.280188,-7.855499,0.835748,3.693436,-5.491103,-9.599812,7.589902,-3.842930,2.280112,0.804280,-8.983377,-8.088641,8.573528,-6.001295,2.394976,1.964666,-7.061758,9.587540,6.227990,-9.172256,3.902499,-7.034603,1.976142,8.861385,-0.340707,8.364183,2.655842,-8.730798,-7.865859,-2.706458,-0.640235,8.590866,7.368859,-9.607779,-3.543639,-1.091320,8.518410,-1.872022,5.291923,6.260042,9.098287,-5.181059,2.611731,1.831859,-8.762875,0.169088,3.866411,2.595146,0.736871,0.268821,-2.379404,9.349615,6.165437,-5.460490,-8.064799,-8.383826,3.701715,-0.238195,-1.069609,-2.523342,7.624502,1.261614,-1.495861,9.080557,-7.601928,0.787942,-9.635280,-0.311116,2.091593,5.190877,1.649807,6.137421,-4.656099,8.127917,5.696115,1.360258,6.103082,4.572558,3.845201,-2.980081,4.989963,-0.575936,-4.545712,4.556718,-8.754387,3.466159,0.767568,-0.738218,5.953765,-4.962526,2.321969,4.451628,-5.341638,-1.290592,-9.062218,0.450693,8.961597,5.421031,-2.526415,4.432472,5.556159,-1.799816,5.342016,0.688875,-5.334530,7.004573,6.809024,5.169020,3.296471,-9.139834,-2.589902,5.029179,8.934138,8.867505,-1.030148,-5.909631,-5.234944,-4.557695,9.298047,-4.712598,0.476094,4.725841,-8.480193,-3.548226,2.132367,1.243934,-9.407870,4.743288,-4.955708,9.178080,2.236446,-8.164718,4.251904,6.751318,-0.942988,-4.685881,0.475597,1.040854,-0.509495,6.000335,-6.585551,5.139033,4.784977,-8.019550,-3.940916,-3.996996,-6.500310,8.699857,7.313972,-7.878099,-2.253943,3.971448,7.496378,7.225588,-3.586744,1.571576,-5.516298,0.673349,0.603036,8.968362,-4.175221,6.160987,-7.270470,-7.129238,2.584961,-9.159346,2.370510,2.413860,-0.290340,1.511226,4.232039,3.634197,2.285990,4.700445,-7.585209,-2.897757,5.314272,9.714307,-6.135927,6.103770,5.237232,1.167972,-2.422580,0.055429,-0.632388,5.420093,4.717088,3.120963,-2.277763,8.551002,4.589870,2.869121,8.135299,-7.072942,-7.960293,5.863757,7.651048,-0.052530,0.436335,-2.373597,-7.137296,2.891657,-3.072638,7.957511,2.477811,-0.176257,-1.435372,2.191216,-0.388475,-6.347632,-7.794104,-0.118687,-8.442293,1.398624,-7.258714,8.374495,5.215245,-7.211531,6.883646,-6.544789,-6.105872,8.003138,-4.132278,-2.596697,6.992618,2.830864,-4.080146,5.237557,1.333455,-2.154568,5.067568,-9.706593,-7.950633,-8.685292,-3.703324,6.135720,5.295649,-0.808293,1.383377,5.969094,5.881473,-8.526195,-2.101261,-5.080082,-8.581380,-7.344228,7.123880,4.171903,6.347235,6.129344,-2.090067,8.129214,-2.928634,-5.306506,-8.421263,-4.672010,-3.934970,-8.323335,-4.866970,-2.464435,3.655785,-3.579871,-7.397260,8.013501,-8.624689,3.532488,3.590308,-6.143995,-7.022633,4.889766,-8.150981,-2.575674,1.728486,-2.238750,-0.831742,-7.671682,3.936696,-0.045141,-4.623681,0.678019,-1.309329,-6.872577,1.732434,9.030416,4.096123,4.880130,-0.878023,-3.851801,-4.241590,-8.321077,-9.002169,-2.974614,4.330105,1.569594,-6.254018,-0.242108,8.687896,-8.680892,-8.238361,5.580126,0.106254,9.875620,-4.407769,6.819567,-1.153391,2.697234,-4.092161,-0.153649,-2.465805,-6.435057,1.033679,-3.819213,2.012605,9.244103,-7.011982,9.752265,5.412345,-6.568768,-7.380794,-5.425268,5.481705,9.270779,-0.928476,7.235481,3.430570,1.855057,9.404402,-9.281579,7.585265,-7.606644,-1.341635,4.620282,-5.030646,0.646444,9.634681,-0.869981,-9.920691,-7.835748,1.760931,4.644411,2.729266,8.983632,-8.042476,5.427968,-3.309045,-9.685419,5.565841,-4.977268,3.306667,6.208178,-8.886107,2.701674,6.922982,1.941662,3.224304,-2.192596,9.523909,7.613039,0.277048,3.314660,-7.617624,-6.436651,0.417488,-4.958292,-6.618836,9.988281,2.198272,0.992632,8.562573,8.537794,-4.063710,4.357159,-2.093139,8.762518,-1.884928,7.876644,-5.604329,-4.467891,-6.318485,-2.552112,-5.476069,5.000356,-9.522467,4.988555,7.684736,7.708697,-9.658060,-3.450317,7.124976,-7.170451,-5.212090,8.212721,8.734316,0.407462,-6.271728,-2.739406,3.002688,-6.612730,5.036510,4.718108,-4.207707,-8.320134,-1.043419,4.322415,-9.107109,4.208215,3.789326,-9.628294,-7.066848,7.506356,8.520246,-6.346442,9.051770,7.884274,-2.808521], dtype = "float64")#candidate|1405|(2288,)|const|float64
call_1404 = relay.TupleGetItem(func_343_call(relay.reshape(const_1405.astype('float64'), [16, 13, 11])), 0)
call_1406 = relay.TupleGetItem(func_346_call(relay.reshape(const_1405.astype('float64'), [16, 13, 11])), 0)
func_343_call = mod.get_global_var('func_343')
func_346_call = mutated_mod.get_global_var('func_346')
call_1408 = relay.TupleGetItem(func_343_call(relay.reshape(call_1404.astype('float64'), [16, 13, 11])), 0)
call_1409 = relay.TupleGetItem(func_346_call(relay.reshape(call_1404.astype('float64'), [16, 13, 11])), 0)
bop_1426 = relay.floor_mod(call_1404.astype('float32'), relay.reshape(call_1408.astype('float32'), relay.shape_of(call_1404))) # shape=(16, 13, 11)
bop_1429 = relay.floor_mod(call_1406.astype('float32'), relay.reshape(call_1409.astype('float32'), relay.shape_of(call_1406))) # shape=(16, 13, 11)
bop_1432 = relay.greater(var_1400.astype('bool'), var_1399.astype('bool')) # shape=(3, 1, 15)
func_529_call = mod.get_global_var('func_529')
func_533_call = mutated_mod.get_global_var('func_533')
var_1442 = relay.var("var_1442", dtype = "int16", shape = (720,))#candidate|1442|(720,)|var|int16
call_1441 = relay.TupleGetItem(func_529_call(relay.reshape(var_1442.astype('int16'), [15, 12, 4]), relay.reshape(call_1408.astype('float64'), [2288,]), ), 1)
call_1443 = relay.TupleGetItem(func_533_call(relay.reshape(var_1442.astype('int16'), [15, 12, 4]), relay.reshape(call_1408.astype('float64'), [2288,]), ), 1)
output = relay.Tuple([bop_1401,const_1405,bop_1426,bop_1432,call_1441,var_1442,])
output2 = relay.Tuple([bop_1401,const_1405,bop_1429,bop_1432,call_1443,var_1442,])
func_1444 = relay.Function([var_1399,var_1400,var_1442,], output)
mod['func_1444'] = func_1444
mod = relay.transform.InferType()(mod)
mutated_mod['func_1444'] = func_1444
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1444_call = mutated_mod.get_global_var('func_1444')
var_1446 = relay.var("var_1446", dtype = "int8", shape = ())#candidate|1446|()|var|int8
var_1447 = relay.var("var_1447", dtype = "int8", shape = (3, 1, 15))#candidate|1447|(3, 1, 15)|var|int8
var_1448 = relay.var("var_1448", dtype = "int16", shape = (720,))#candidate|1448|(720,)|var|int16
call_1445 = func_1444_call(var_1446,var_1447,var_1448,)
output = call_1445
func_1449 = relay.Function([var_1446,var_1447,var_1448,], output)
mutated_mod['func_1449'] = func_1449
mutated_mod = relay.transform.InferType()(mutated_mod)
const_1808 = relay.const([[[-9,8,-5,1,2,6,8,9,7,2],[1,-3,-6,-1,-9,4,2,-6,-8,8],[-4,-8,-2,-4,2,-9,9,-5,1,9],[-9,-8,7,-9,10,-5,-4,1,-9,6],[-10,-6,9,6,-7,9,-10,-6,2,-3],[5,-1,2,4,6,5,-5,6,4,3]],[[1,-7,1,-7,9,7,10,2,9,-3],[3,2,-1,-1,4,-4,6,-3,5,9],[-4,9,-4,5,-6,-10,-6,-7,3,-2],[10,2,-7,4,-9,-7,1,6,-4,1],[-9,9,7,4,1,-7,-2,-8,5,3],[5,4,4,3,1,10,-7,7,4,-4]],[[-7,-8,1,10,-10,-10,10,2,6,-4],[1,8,2,2,7,2,10,-5,-8,8],[7,-4,6,1,-1,-10,8,2,3,7],[-1,-6,-9,-3,5,6,3,-8,-5,-10],[5,-1,-6,-4,-7,9,-8,-1,5,5],[-9,-1,-8,-9,10,-1,7,-8,3,4]],[[-3,-7,7,9,4,-1,4,5,-10,6],[2,-5,-7,4,6,-7,-2,-1,4,8],[-5,-3,10,10,-2,10,-2,-5,-7,-9],[8,4,-2,-8,5,8,-4,9,-9,-3],[-3,-5,7,6,-10,7,-8,-7,-5,1],[-10,2,-10,-9,9,-9,7,9,-5,-8]],[[-7,4,-5,8,-5,-10,7,-2,-2,-5],[-5,3,-2,5,-7,-4,-9,2,9,-4],[10,-3,7,-4,-6,-9,-7,4,9,9],[-4,2,1,-7,-5,-9,4,-4,5,9],[-8,4,-5,3,8,9,4,5,-5,-8],[-1,7,-8,6,8,-7,-8,-10,-7,-6]],[[-6,7,6,7,-2,6,-1,1,-4,3],[6,8,8,4,2,10,-7,-10,-9,-8],[2,-8,-7,-2,-8,2,-6,-6,10,-2],[2,-2,1,3,7,-4,-5,3,1,-2],[-2,-3,-7,-3,-10,9,8,-2,3,10],[-9,10,5,6,9,-5,6,-9,6,2]],[[-6,-8,2,5,7,7,8,-10,1,10],[-7,10,2,6,1,2,1,-4,-1,-10],[4,6,5,6,-3,-7,-9,4,8,7],[-10,-1,-2,5,3,4,3,9,6,-7],[10,-1,-2,-10,7,-2,-10,-9,7,6],[9,7,-9,-1,2,6,-1,10,-4,-6]]], dtype = "uint64")#candidate|1808|(7, 6, 10)|const|uint64
var_1809 = relay.var("var_1809", dtype = "uint64", shape = (7, 6, 10))#candidate|1809|(7, 6, 10)|var|uint64
bop_1810 = relay.left_shift(const_1808.astype('uint64'), relay.reshape(var_1809.astype('uint64'), relay.shape_of(const_1808))) # shape=(7, 6, 10)
output = bop_1810
output2 = bop_1810
func_1823 = relay.Function([var_1809,], output)
mod['func_1823'] = func_1823
mod = relay.transform.InferType()(mod)
var_1824 = relay.var("var_1824", dtype = "uint64", shape = (7, 6, 10))#candidate|1824|(7, 6, 10)|var|uint64
output = func_1823(var_1824)
func_1825 = relay.Function([var_1824], output)
mutated_mod['func_1825'] = func_1825
mutated_mod = relay.transform.InferType()(mutated_mod)
var_2146 = relay.var("var_2146", dtype = "float64", shape = (14, 16, 3))#candidate|2146|(14, 16, 3)|var|float64
uop_2147 = relay.asinh(var_2146.astype('float64')) # shape=(14, 16, 3)
func_95_call = mod.get_global_var('func_95')
func_97_call = mutated_mod.get_global_var('func_97')
var_2160 = relay.var("var_2160", dtype = "int32", shape = ())#candidate|2160|()|var|int32
call_2159 = relay.TupleGetItem(func_95_call(relay.reshape(var_2160.astype('int32'), [])), 1)
call_2161 = relay.TupleGetItem(func_97_call(relay.reshape(var_2160.astype('int32'), [])), 1)
output = relay.Tuple([uop_2147,call_2159,var_2160,])
output2 = relay.Tuple([uop_2147,call_2161,var_2160,])
func_2170 = relay.Function([var_2146,var_2160,], output)
mod['func_2170'] = func_2170
mod = relay.transform.InferType()(mod)
mutated_mod['func_2170'] = func_2170
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2170_call = mutated_mod.get_global_var('func_2170')
var_2172 = relay.var("var_2172", dtype = "float64", shape = (14, 16, 3))#candidate|2172|(14, 16, 3)|var|float64
var_2173 = relay.var("var_2173", dtype = "int32", shape = ())#candidate|2173|()|var|int32
call_2171 = func_2170_call(var_2172,var_2173,)
output = call_2171
func_2174 = relay.Function([var_2172,var_2173,], output)
mutated_mod['func_2174'] = func_2174
mutated_mod = relay.transform.InferType()(mutated_mod)
const_2463 = relay.const([[[-6,-7,-3],[-5,-1,-10],[-10,7,-2],[-4,6,2],[8,-5,2],[1,2,-4],[3,6,2],[-10,-7,-8],[-7,-3,-8]]], dtype = "uint8")#candidate|2463|(1, 9, 3)|const|uint8
var_2464 = relay.var("var_2464", dtype = "uint8", shape = (1, 9, 3))#candidate|2464|(1, 9, 3)|var|uint8
bop_2465 = relay.bitwise_or(const_2463.astype('uint8'), relay.reshape(var_2464.astype('uint8'), relay.shape_of(const_2463))) # shape=(1, 9, 3)
uop_2469 = relay.acos(const_2463.astype('float32')) # shape=(1, 9, 3)
output = relay.Tuple([bop_2465,uop_2469,])
output2 = relay.Tuple([bop_2465,uop_2469,])
func_2472 = relay.Function([var_2464,], output)
mod['func_2472'] = func_2472
mod = relay.transform.InferType()(mod)
mutated_mod['func_2472'] = func_2472
mutated_mod = relay.transform.InferType()(mutated_mod)
var_2473 = relay.var("var_2473", dtype = "uint8", shape = (1, 9, 3))#candidate|2473|(1, 9, 3)|var|uint8
func_2472_call = mutated_mod.get_global_var('func_2472')
call_2474 = func_2472_call(var_2473)
output = call_2474
func_2475 = relay.Function([var_2473], output)
mutated_mod['func_2475'] = func_2475
mutated_mod = relay.transform.InferType()(mutated_mod)
var_2571 = relay.var("var_2571", dtype = "int64", shape = (6, 11, 11))#candidate|2571|(6, 11, 11)|var|int64
const_2572 = relay.const([[[-2,6,-2,-9,2,-8,10,9,-1,2,4],[5,-3,-2,-8,8,3,7,4,2,1,-8],[7,-4,-2,2,-6,-1,1,5,-4,-9,-9],[-2,4,7,-2,-6,-6,9,7,-2,-10,3],[-8,1,1,7,-8,-3,1,-8,6,-5,-4],[-10,8,3,-7,-9,3,7,2,4,-2,-4],[8,7,-8,6,-9,-3,10,-4,2,-2,-5],[-1,-2,1,-3,-9,9,-2,-10,-10,-7,-5],[9,-4,5,6,-4,9,3,1,4,-6,8],[1,8,-7,4,-2,1,4,3,-6,-10,-4],[-4,8,7,-3,3,2,-5,6,1,4,5]],[[6,9,-6,6,1,-7,7,2,8,4,-7],[-1,10,-3,1,-2,6,8,10,2,-3,-10],[-4,10,10,-3,5,-9,5,-9,10,3,5],[-9,-3,-6,-1,-7,-9,-8,1,5,7,-10],[6,9,3,5,3,-2,-5,5,5,5,-10],[-2,-6,8,-10,8,-10,-5,2,2,2,-4],[-4,-6,-2,2,4,5,-10,-7,-1,-10,3],[5,-3,-1,-3,-3,7,-4,10,2,-2,6],[-8,-4,-8,-10,-10,-8,-2,-10,-5,1,-4],[-2,-3,-10,9,-6,-1,-6,7,-1,2,1],[-8,10,6,7,8,-6,-2,-7,4,-10,6]],[[-3,-5,-3,4,1,-7,-5,-2,-2,-2,1],[-7,-6,2,8,-5,4,-5,-7,10,-1,6],[-9,10,9,2,-7,8,1,-1,-1,-2,-8],[-1,8,-10,-10,6,-7,3,-10,5,5,9],[5,-5,-8,-1,-3,-9,6,1,8,-7,6],[10,-4,-1,8,5,2,2,-6,-8,7,-2],[-9,-3,10,3,-8,10,-7,1,3,-3,-7],[-8,-9,-3,-4,-1,8,3,4,2,10,-5],[4,-4,-3,3,1,-2,6,7,2,4,-2],[8,2,7,3,-10,-10,-6,-1,-3,-10,3],[4,-7,-9,-6,9,-8,-5,4,-9,-7,-9]],[[1,9,4,-3,-7,-8,3,5,-8,-5,-5],[1,8,-4,-8,7,-4,-5,8,-7,5,9],[-3,-9,-9,9,-5,-5,-10,-10,-3,10,-5],[-8,-3,8,-10,-7,-1,4,-1,6,-3,8],[10,-6,5,2,10,-3,-3,-4,7,-6,8],[-10,4,4,7,-3,-10,-1,4,6,-1,9],[-1,-7,-6,9,-4,4,5,5,10,8,-6],[6,10,6,-3,5,9,2,-6,1,2,-8],[-3,-6,3,-4,2,-9,-4,-4,-1,10,-3],[-5,-5,-1,-2,-3,-5,10,4,-7,6,1],[-2,-6,5,2,8,9,6,2,10,-4,8]],[[-3,8,1,7,-3,-6,-9,-4,-9,10,10],[9,-3,9,5,1,-10,-7,2,-2,10,-5],[10,-2,4,8,-10,-5,-7,-2,10,10,2],[-2,1,3,-5,-2,8,6,10,5,3,2],[-4,2,-8,5,-10,-6,2,-2,-10,2,10],[9,3,7,5,8,4,1,-2,1,3,1],[-1,-2,7,6,-1,-7,-2,-4,8,4,4],[3,4,-8,-5,4,-1,-4,8,8,-8,8],[3,-7,-6,2,-8,5,-1,1,-1,-10,1],[5,-6,1,-9,-6,-2,3,1,7,-10,-3],[5,-7,-9,3,2,9,10,-6,10,-3,-2]],[[-10,2,4,10,-5,9,5,8,8,-3,-10],[7,-4,-7,-9,3,-1,7,-9,3,3,-3],[-2,6,2,6,-4,9,10,-5,4,6,-5],[1,1,-5,9,-3,-2,10,-8,-8,-9,-10],[-3,-6,5,2,-7,1,10,2,-7,-10,-4],[10,7,6,-7,5,-5,6,-6,-7,3,3],[-5,3,-2,8,-1,1,8,-6,-6,-4,-5],[-1,1,6,-8,-7,3,-5,-1,2,5,4],[3,-10,-2,-1,7,5,-2,1,-9,-2,-6],[-1,2,-1,-9,2,-4,10,-7,2,-5,-1],[10,-4,10,-3,-3,-3,10,-3,10,10,8]]], dtype = "int64")#candidate|2572|(6, 11, 11)|const|int64
bop_2573 = relay.greater(var_2571.astype('bool'), relay.reshape(const_2572.astype('bool'), relay.shape_of(var_2571))) # shape=(6, 11, 11)
func_268_call = mod.get_global_var('func_268')
func_270_call = mutated_mod.get_global_var('func_270')
var_2578 = relay.var("var_2578", dtype = "int32", shape = ())#candidate|2578|()|var|int32
call_2577 = relay.TupleGetItem(func_268_call(relay.reshape(var_2578.astype('int32'), [])), 0)
call_2579 = relay.TupleGetItem(func_270_call(relay.reshape(var_2578.astype('int32'), [])), 0)
bop_2580 = relay.floor_divide(bop_2573.astype('float32'), var_2578.astype('float32')) # shape=(6, 11, 11)
output = relay.Tuple([call_2577,bop_2580,])
output2 = relay.Tuple([call_2579,bop_2580,])
func_2588 = relay.Function([var_2571,var_2578,], output)
mod['func_2588'] = func_2588
mod = relay.transform.InferType()(mod)
var_2589 = relay.var("var_2589", dtype = "int64", shape = (6, 11, 11))#candidate|2589|(6, 11, 11)|var|int64
var_2590 = relay.var("var_2590", dtype = "int32", shape = ())#candidate|2590|()|var|int32
output = func_2588(var_2589,var_2590,)
func_2591 = relay.Function([var_2589,var_2590,], output)
mutated_mod['func_2591'] = func_2591
mutated_mod = relay.transform.InferType()(mutated_mod)
const_2915 = relay.const([[[4,-7,7,-2,1,10,-3,-8],[7,2,-2,-6,10,5,-1,-1],[2,9,-3,6,1,5,-9,5],[-10,2,1,-4,-3,6,-8,6],[-8,-9,7,2,-3,4,-1,-8],[3,-5,-5,5,10,3,-2,-9],[-5,9,6,-10,2,3,-2,-4],[-8,-1,-10,2,-2,7,3,2],[6,1,-5,-3,6,10,-4,5],[5,-4,6,2,-2,-10,9,-4],[-3,7,8,7,-3,-2,-3,-8],[6,-1,1,-8,6,-7,-10,-10],[-7,-3,6,-9,-8,7,-1,-8]],[[-10,-9,4,-1,5,-5,-2,-10],[-1,-2,-4,7,3,3,-8,10],[2,8,-7,6,8,7,-8,9],[-9,-6,3,6,7,9,-2,5],[8,-10,4,-7,9,4,-10,-7],[-5,1,-6,5,8,-1,5,-2],[1,8,-8,-8,8,2,-5,4],[-4,8,-5,5,5,2,4,-2],[6,8,4,10,-8,-7,-1,-10],[9,-5,9,8,8,5,-3,-6],[-9,-2,-10,5,5,10,-7,3],[10,-2,9,-6,-7,-8,-10,-9],[9,-3,4,-9,-2,-6,-1,6]],[[-8,2,-6,4,-9,-6,-9,9],[-8,10,-10,4,-10,-10,-9,4],[-5,-5,-7,6,3,7,9,-3],[8,-1,-4,2,-5,-9,-1,2],[-1,6,-7,-6,-4,-6,10,-10],[-5,-9,-7,-7,5,9,-8,1],[9,9,-4,8,-7,1,-6,-8],[-5,3,7,-4,-5,8,3,3],[1,-10,7,4,-4,3,-7,4],[7,-4,7,-9,-9,6,-8,-8],[2,-5,7,7,4,3,1,5],[-7,4,-5,6,10,9,-10,-9],[4,3,5,3,10,-5,5,8]],[[-7,4,5,-7,2,3,1,-4],[7,-4,-7,-4,-5,9,6,-10],[2,-6,-5,-10,-7,9,-4,-4],[-10,3,-7,6,7,2,3,-6],[-7,9,-5,9,1,-1,10,-6],[-4,-10,10,-3,-1,10,-6,-8],[9,8,-10,6,-6,-6,2,9],[-5,-9,6,9,6,3,6,-8],[3,-10,3,-2,-7,-5,4,-7],[4,-3,-5,-8,-4,4,4,-8],[5,8,6,-9,2,-1,10,5],[-3,4,3,-8,5,-8,3,-6],[3,-10,-5,3,-3,-4,-4,4]],[[-7,5,2,-4,7,-4,7,-3],[-5,1,-2,-7,-1,-9,-10,-2],[3,7,-3,10,5,2,-5,2],[2,2,-10,-10,-2,5,3,-10],[-7,10,8,-9,6,-2,-10,3],[-2,5,-5,-4,-3,-10,-8,-3],[-5,-4,4,5,7,-5,6,9],[4,-9,-1,8,3,2,-8,6],[-9,8,4,-5,3,-9,7,-4],[-4,-10,7,8,-7,1,5,-1],[-8,8,-4,-2,-1,3,-1,-9],[-1,9,-8,-8,-7,-10,-6,7],[-2,5,-7,1,10,-8,-3,5]],[[7,-4,8,7,2,-10,-8,2],[3,6,-4,10,2,-4,-6,-9],[-10,-7,6,6,3,8,-4,-3],[-8,8,5,6,5,-2,-9,-3],[5,-7,-6,-3,-8,2,1,-10],[-4,1,-6,9,-6,-4,4,-4],[-9,-4,-4,2,5,-6,9,5],[2,-5,2,-10,6,5,-1,-1],[-10,5,-3,5,-3,6,7,-5],[7,9,-5,10,-3,1,4,6],[8,-7,8,-1,-5,3,8,2],[10,-5,-10,-4,1,-1,-9,8],[-8,-10,-9,7,8,7,-10,9]],[[10,-4,-10,7,8,-6,-3,-6],[-3,7,-7,-7,6,1,3,-9],[8,7,-4,1,10,-8,-4,-4],[-1,9,5,5,10,-1,-9,-7],[-4,7,7,-1,-5,-10,3,6],[-4,4,-2,5,8,-4,6,6],[-6,-1,10,1,-1,4,4,-10],[8,-10,-6,2,-2,-2,10,10],[10,-10,-3,8,2,2,6,6],[7,-4,-4,-6,3,-5,-6,10],[6,10,10,5,-2,2,10,-9],[6,9,-10,-6,-5,-9,-6,8],[-8,1,-6,4,5,5,-5,-4]],[[8,3,-10,-4,-8,5,1,-5],[-4,8,7,10,-9,-9,9,-5],[7,-8,5,-2,-4,-6,-2,5],[9,10,7,-10,-4,9,2,-4],[-10,-4,4,-9,-4,-5,-7,-4],[4,-2,5,5,1,-5,-8,10],[9,4,-3,-4,-7,5,9,-10],[-5,-4,-6,-10,-5,-10,1,-2],[7,4,6,-6,6,6,-1,8],[9,-6,1,2,8,8,3,10],[5,-9,-3,-5,-6,-6,-5,3],[-8,-9,-3,-4,2,-2,3,4],[-5,10,-7,1,-6,-8,-1,7]],[[10,-8,-6,7,8,4,9,-1],[10,-6,-8,8,-4,-5,9,-6],[-7,-3,-9,-2,10,-10,3,-5],[7,-9,8,9,6,-7,-7,4],[-7,8,9,-5,-7,10,-6,-4],[-8,-8,-10,8,-2,-1,-10,-4],[3,-3,5,3,-2,-3,-10,3],[-1,6,-9,-9,1,-1,-6,8],[-10,-4,-10,6,-4,2,7,-3],[8,2,-4,-10,3,-8,8,-10],[8,1,3,-3,6,2,-3,-4],[4,8,-8,-5,-8,10,8,4],[4,-7,5,-5,-5,8,1,9]],[[-7,3,3,-6,10,9,-6,7],[2,-8,-4,-10,9,9,10,-5],[-2,2,-6,-6,-4,6,2,9],[-7,-1,-9,2,-8,10,-8,5],[-5,5,5,8,10,1,-7,-4],[-7,-9,-5,-6,3,-3,3,3],[4,9,-1,3,3,3,-4,6],[1,8,8,1,10,-2,-1,-10],[3,8,-6,-7,-5,-9,-7,-10],[2,-8,-4,10,2,-6,7,10],[5,5,-9,10,-3,4,-6,2],[-6,8,7,5,-2,-4,9,10],[-4,-5,7,8,4,2,10,-8]]], dtype = "uint8")#candidate|2915|(10, 13, 8)|const|uint8
var_2916 = relay.var("var_2916", dtype = "uint8", shape = (10, 13, 8))#candidate|2916|(10, 13, 8)|var|uint8
bop_2917 = relay.maximum(const_2915.astype('uint8'), relay.reshape(var_2916.astype('uint8'), relay.shape_of(const_2915))) # shape=(10, 13, 8)
output = relay.Tuple([bop_2917,])
output2 = relay.Tuple([bop_2917,])
func_2927 = relay.Function([var_2916,], output)
mod['func_2927'] = func_2927
mod = relay.transform.InferType()(mod)
var_2928 = relay.var("var_2928", dtype = "uint8", shape = (10, 13, 8))#candidate|2928|(10, 13, 8)|var|uint8
output = func_2927(var_2928)
func_2929 = relay.Function([var_2928], output)
mutated_mod['func_2929'] = func_2929
mutated_mod = relay.transform.InferType()(mutated_mod)
var_2998 = relay.var("var_2998", dtype = "float64", shape = (12, 12, 2))#candidate|2998|(12, 12, 2)|var|float64
uop_2999 = relay.erf(var_2998.astype('float64')) # shape=(12, 12, 2)
func_95_call = mod.get_global_var('func_95')
func_97_call = mutated_mod.get_global_var('func_97')
const_3007 = relay.const(8, dtype = "int32")#candidate|3007|()|const|int32
call_3006 = relay.TupleGetItem(func_95_call(relay.reshape(const_3007.astype('int32'), [])), 2)
call_3008 = relay.TupleGetItem(func_97_call(relay.reshape(const_3007.astype('int32'), [])), 2)
func_1823_call = mod.get_global_var('func_1823')
func_1825_call = mutated_mod.get_global_var('func_1825')
const_3014 = relay.const([1,9,10,7,3,6,4,5,3,7,5,7,2,9,6,10,-5,9,6,-5,6,4,7,1,9,3,6,3,1,3,-6,-7,3,-6,5,-7,5,3,1,3,-2,3,8,5,-10,1,5,-6,-7,9,-6,-3,8,-4,-7,-8,-7,6,6,9,4,-1,9,9,-4,7,5,-2,3,-1,-6,1,9,-1,1,-1,9,3,-1,-3,3,6,10,-10,-7,5,-1,7,4,-4,-5,9,7,1,8,-7,-3,-8,3,8,-10,-1,9,-8,-3,7,7,1,10,6,-5,-9,-5,3,-5,-8,-4,-6,7,6,-6,10,-1,-1,-5,8,-9,-10,4,-2,6,3,-9,5,-3,-7,-5,4,8,-6,-2,4,-3,-6,10,7,-8,-8,-9,4,-7,3,-6,8,4,-8,10,8,6,2,1,-4,10,-5,-6,-3,8,6,2,-1,-8,3,-2,-3,2,-6,5,-2,-3,-5,6,3,3,1,3,-2,-4,3,5,-6,-1,1,-6,2,10,10,7,-1,3,6,7,-1,4,-6,-7,-7,7,-8,-1,-2,-10,-8,-6,-7,-4,-6,-2,9,-10,4,-7,8,1,9,-6,4,5,-3,10,9,3,-2,-4,-1,-5,-2,8,-10,-3,2,2,-7,5,-8,-10,-10,4,-7,4,-3,-3,-5,2,-1,-6,8,8,-7,-5,-9,-3,9,-10,8,-4,-4,3,-1,5,-3,6,9,7,6,-10,-7,3,-2,10,-10,-10,-5,-4,-9,-8,-9,4,-8,-3,-2,-9,-6,3,-9,8,1,-2,1,1,-6,-4,3,3,10,-6,-9,-1,9,-2,9,6,10,-6,-7,-2,-6,-5,6,-10,4,-1,1,7,-8,-8,1,-8,-5,1,-1,-2,7,8,5,-2,-4,-1,4,8,-7,8,-2,8,-1,7,9,-1,-9,4,6,3,8,8,-2,-4,1,-6,8,-10,4,-3,7,1,-10,1,10,8,10,10,10,-10,3,6,3,-2,-5,9,-6,9,-7,4,4,5,-5,3,-6,8,10,-3,-2,-9,-8,9,9,2,6,-3,-7,2,3,9,2,-1,3,-5,-8,2,-3,2,10,-1,-9,7,-5,7,-8,-9,6,-3,3], dtype = "uint64")#candidate|3014|(420,)|const|uint64
call_3013 = func_1823_call(relay.reshape(const_3014.astype('uint64'), [7, 6, 10]))
call_3015 = func_1823_call(relay.reshape(const_3014.astype('uint64'), [7, 6, 10]))
func_2927_call = mod.get_global_var('func_2927')
func_2929_call = mutated_mod.get_global_var('func_2929')
var_3019 = relay.var("var_3019", dtype = "uint8", shape = (8, 130))#candidate|3019|(8, 130)|var|uint8
call_3018 = relay.TupleGetItem(func_2927_call(relay.reshape(var_3019.astype('uint8'), [10, 13, 8])), 0)
call_3020 = relay.TupleGetItem(func_2929_call(relay.reshape(var_3019.astype('uint8'), [10, 13, 8])), 0)
func_343_call = mod.get_global_var('func_343')
func_346_call = mutated_mod.get_global_var('func_346')
var_3055 = relay.var("var_3055", dtype = "float64", shape = (1144, 2))#candidate|3055|(1144, 2)|var|float64
call_3054 = relay.TupleGetItem(func_343_call(relay.reshape(var_3055.astype('float64'), [16, 13, 11])), 0)
call_3056 = relay.TupleGetItem(func_346_call(relay.reshape(var_3055.astype('float64'), [16, 13, 11])), 0)
func_2472_call = mod.get_global_var('func_2472')
func_2475_call = mutated_mod.get_global_var('func_2475')
var_3058 = relay.var("var_3058", dtype = "uint8", shape = (27,))#candidate|3058|(27,)|var|uint8
call_3057 = relay.TupleGetItem(func_2472_call(relay.reshape(var_3058.astype('uint8'), [1, 9, 3])), 0)
call_3059 = relay.TupleGetItem(func_2475_call(relay.reshape(var_3058.astype('uint8'), [1, 9, 3])), 0)
func_40_call = mod.get_global_var('func_40')
func_42_call = mutated_mod.get_global_var('func_42')
call_3068 = func_40_call(relay.reshape(call_3006.astype('float32'), [4, 12, 7]))
call_3069 = func_40_call(relay.reshape(call_3006.astype('float32'), [4, 12, 7]))
func_2927_call = mod.get_global_var('func_2927')
func_2929_call = mutated_mod.get_global_var('func_2929')
call_3092 = relay.TupleGetItem(func_2927_call(relay.reshape(var_3019.astype('uint8'), [10, 13, 8])), 0)
call_3093 = relay.TupleGetItem(func_2929_call(relay.reshape(var_3019.astype('uint8'), [10, 13, 8])), 0)
output = relay.Tuple([uop_2999,call_3006,const_3007,call_3013,const_3014,call_3018,var_3019,call_3054,var_3055,call_3057,var_3058,call_3068,call_3092,])
output2 = relay.Tuple([uop_2999,call_3008,const_3007,call_3015,const_3014,call_3020,var_3019,call_3056,var_3055,call_3059,var_3058,call_3069,call_3093,])
func_3094 = relay.Function([var_2998,var_3019,var_3055,var_3058,], output)
mod['func_3094'] = func_3094
mod = relay.transform.InferType()(mod)
mutated_mod['func_3094'] = func_3094
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3094_call = mutated_mod.get_global_var('func_3094')
var_3096 = relay.var("var_3096", dtype = "float64", shape = (12, 12, 2))#candidate|3096|(12, 12, 2)|var|float64
var_3097 = relay.var("var_3097", dtype = "uint8", shape = (8, 130))#candidate|3097|(8, 130)|var|uint8
var_3098 = relay.var("var_3098", dtype = "float64", shape = (1144, 2))#candidate|3098|(1144, 2)|var|float64
var_3099 = relay.var("var_3099", dtype = "uint8", shape = (27,))#candidate|3099|(27,)|var|uint8
call_3095 = func_3094_call(var_3096,var_3097,var_3098,var_3099,)
output = call_3095
func_3100 = relay.Function([var_3096,var_3097,var_3098,var_3099,], output)
mutated_mod['func_3100'] = func_3100
mutated_mod = relay.transform.InferType()(mutated_mod)
var_3142 = relay.var("var_3142", dtype = "float64", shape = (8, 12, 9))#candidate|3142|(8, 12, 9)|var|float64
uop_3143 = relay.sqrt(var_3142.astype('float64')) # shape=(8, 12, 9)
bop_3148 = relay.logical_xor(uop_3143.astype('uint32'), relay.reshape(var_3142.astype('uint32'), relay.shape_of(uop_3143))) # shape=(8, 12, 9)
output = bop_3148
output2 = bop_3148
func_3153 = relay.Function([var_3142,], output)
mod['func_3153'] = func_3153
mod = relay.transform.InferType()(mod)
mutated_mod['func_3153'] = func_3153
mutated_mod = relay.transform.InferType()(mutated_mod)
var_3154 = relay.var("var_3154", dtype = "float64", shape = (8, 12, 9))#candidate|3154|(8, 12, 9)|var|float64
func_3153_call = mutated_mod.get_global_var('func_3153')
call_3155 = func_3153_call(var_3154)
output = call_3155
func_3156 = relay.Function([var_3154], output)
mutated_mod['func_3156'] = func_3156
mutated_mod = relay.transform.InferType()(mutated_mod)
var_3347 = relay.var("var_3347", dtype = "float64", shape = (4, 7, 13))#candidate|3347|(4, 7, 13)|var|float64
uop_3348 = relay.tan(var_3347.astype('float64')) # shape=(4, 7, 13)
output = uop_3348
output2 = uop_3348
func_3362 = relay.Function([var_3347,], output)
mod['func_3362'] = func_3362
mod = relay.transform.InferType()(mod)
mutated_mod['func_3362'] = func_3362
mutated_mod = relay.transform.InferType()(mutated_mod)
var_3363 = relay.var("var_3363", dtype = "float64", shape = (4, 7, 13))#candidate|3363|(4, 7, 13)|var|float64
func_3362_call = mutated_mod.get_global_var('func_3362')
call_3364 = func_3362_call(var_3363)
output = call_3364
func_3365 = relay.Function([var_3363], output)
mutated_mod['func_3365'] = func_3365
mutated_mod = relay.transform.InferType()(mutated_mod)
var_3788 = relay.var("var_3788", dtype = "float64", shape = ())#candidate|3788|()|var|float64
var_3789 = relay.var("var_3789", dtype = "float64", shape = (1, 15, 1))#candidate|3789|(1, 15, 1)|var|float64
bop_3790 = relay.divide(var_3788.astype('float64'), var_3789.astype('float64')) # shape=(1, 15, 1)
bop_3800 = relay.equal(bop_3790.astype('bool'), relay.reshape(var_3789.astype('bool'), relay.shape_of(bop_3790))) # shape=(1, 15, 1)
output = relay.Tuple([bop_3800,])
output2 = relay.Tuple([bop_3800,])
func_3804 = relay.Function([var_3788,var_3789,], output)
mod['func_3804'] = func_3804
mod = relay.transform.InferType()(mod)
mutated_mod['func_3804'] = func_3804
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3804_call = mutated_mod.get_global_var('func_3804')
var_3806 = relay.var("var_3806", dtype = "float64", shape = ())#candidate|3806|()|var|float64
var_3807 = relay.var("var_3807", dtype = "float64", shape = (1, 15, 1))#candidate|3807|(1, 15, 1)|var|float64
call_3805 = func_3804_call(var_3806,var_3807,)
output = call_3805
func_3808 = relay.Function([var_3806,var_3807,], output)
mutated_mod['func_3808'] = func_3808
mutated_mod = relay.transform.InferType()(mutated_mod)
var_4781 = relay.var("var_4781", dtype = "float64", shape = (12, 9, 14))#candidate|4781|(12, 9, 14)|var|float64
const_4782 = relay.const([[[-8.092288,5.774685,6.537430,6.618542,-5.384407,-6.450887,-4.867168,-6.992855,3.357055,7.559068,5.321860,9.888348,8.116048,-9.572526],[3.109030,5.250543,-8.176824,7.873546,-5.478330,-7.276976,-2.061384,7.405644,9.110560,0.700644,3.245383,1.483885,-7.879227,2.237712],[-4.700258,-6.900513,2.875919,3.981429,8.425727,3.436762,-6.429640,-0.124148,3.309127,9.914858,-6.859223,8.272010,-4.186429,-2.140906],[1.956129,-9.217763,7.416413,5.699415,-1.256696,9.155459,5.701006,4.780384,-2.746533,-5.416945,0.192361,-8.283834,-3.585806,4.382472],[-2.406462,-2.228563,3.417862,2.180654,1.654246,3.015382,-4.522048,2.269078,-7.336208,0.389170,0.275681,-1.794432,0.848108,-0.197233],[-9.508817,-8.723747,6.764269,-4.726328,6.210938,6.925131,-9.324947,1.123365,5.120878,-2.984489,3.356162,-4.223365,0.040912,-5.058539],[-6.104279,-3.992109,-8.910401,5.678993,6.161352,7.756334,-6.862008,-3.451521,3.818253,1.642628,-8.117302,-6.621320,2.940276,-5.729241],[5.983855,9.954452,9.721462,-3.086462,8.530645,9.563435,6.813654,3.472187,-7.931941,-2.077690,0.404722,-6.144790,4.661281,-6.853273],[-9.140767,8.990422,5.984929,0.442843,6.277264,-2.337439,6.183902,5.548153,-4.503144,-4.154795,-5.761521,2.323574,-3.472417,-5.290052]],[[-2.312195,-9.409010,7.178739,9.207929,9.808426,-4.673942,-4.307686,5.638327,-5.734611,5.935152,1.356109,0.888015,-0.228532,-5.937487],[9.740371,6.928789,5.896765,-1.946099,9.496992,7.395721,-7.333315,9.564041,-4.963816,-3.861395,-4.763899,-8.285504,-4.038529,7.529876],[-1.418861,0.703312,-7.680399,0.483024,7.335607,0.197817,9.756214,8.240013,-3.894645,2.124641,9.978612,4.035935,9.510639,4.316280],[-3.594185,-8.684408,-5.940396,-8.869877,-3.538527,-0.171534,5.195797,0.515273,-0.190067,-3.431169,3.219523,-6.712516,6.355667,-4.280306],[9.557269,-9.777935,9.045193,-8.910256,3.836609,-6.476637,-0.589708,6.125584,-2.021151,1.509781,8.482577,8.050269,3.758447,7.609288],[-3.398901,8.550474,5.621997,8.969170,-9.355933,4.477254,-2.035994,-4.013721,-9.188947,-9.802460,-5.798992,-7.540869,7.395780,-0.186959],[5.792912,2.796892,-0.597210,5.942873,8.278343,-5.884758,-2.449020,8.601840,2.562383,7.354783,1.147459,2.965264,6.875499,9.225578],[3.771780,0.474209,8.985227,-9.802855,5.446696,1.604441,-1.851566,4.733258,0.806987,8.294928,-3.953370,3.633565,-6.175205,2.152860],[-0.596608,-0.154225,-7.759444,-7.470447,2.161336,4.882762,-3.560784,1.185400,-4.917797,2.961538,9.037910,3.725213,4.260967,1.117673]],[[0.017896,-9.459082,4.354690,7.528007,-4.719218,9.132533,5.966843,1.591779,9.388413,-4.103549,0.735245,-0.621474,8.026448,-5.673208],[-8.404108,-3.438396,-8.514711,7.581416,-9.056359,1.866184,-1.451687,-9.955095,-7.633271,5.323876,-6.613678,0.581770,5.498564,-4.134445],[3.316232,7.635629,-4.409083,5.287175,-2.994797,-1.462791,-4.814927,-0.737841,-3.957824,-2.269693,-5.034007,-2.504247,1.059423,-6.881479],[6.177395,7.668449,4.026575,-1.509283,9.299245,-4.420184,-2.352706,-7.514938,-6.436050,7.686298,0.047943,1.131470,2.978305,-0.537630],[-8.673831,8.543351,5.312705,-7.815741,-5.795110,-2.522217,5.964143,0.160072,6.306122,-1.092306,-2.663463,-2.360762,1.970767,7.472997],[9.438476,5.885763,-8.915704,-4.973370,-4.893437,-2.380923,5.341284,-4.254935,5.731258,8.424360,9.668352,6.759646,3.278478,7.696230],[0.415442,-0.522956,-3.205354,-4.114063,-4.337466,-5.130790,-1.120132,8.081524,2.579205,-6.118766,-5.893031,3.415480,9.051349,0.693400],[-1.129836,8.738099,-7.219131,-1.979808,0.835685,8.352842,7.906636,-6.256686,7.586972,-3.848285,2.417427,9.375571,-2.013919,6.778426],[8.769427,-1.045535,9.194416,-4.369179,3.226726,-6.506372,0.071139,5.229554,7.938023,-9.181871,7.043649,9.080695,5.699244,-9.128685]],[[3.260440,5.572264,2.920156,-1.750877,1.602685,-9.411873,-6.899320,-2.739534,-7.273584,-3.320237,8.993133,-5.683055,3.930828,-0.096591],[4.002811,-7.589128,-4.791675,0.412157,-0.727228,6.354528,-8.900581,-4.895599,-9.201204,8.051983,-9.095294,5.948513,-7.048208,6.847416],[2.575952,0.205847,-0.866141,-0.186314,4.699562,-6.452250,3.697897,-7.471893,3.999156,-0.717661,9.344697,2.465040,-1.123947,0.919020],[-0.397158,-2.525169,-8.842833,-3.001449,-9.804446,-1.892480,3.952404,9.171052,-4.563171,-6.990347,-2.530370,8.302958,-3.194125,-8.019927],[6.923476,-1.959657,-6.005694,-9.871309,-3.544171,8.060482,0.006520,-9.576740,2.898373,4.391676,9.180838,8.488368,6.511257,1.567655],[5.797597,-1.120309,-7.648175,6.355347,8.774616,0.535325,-9.033588,-6.974190,-6.734023,-8.792451,-4.966662,9.597423,-2.758936,-3.346437],[-7.494535,2.420733,1.865686,-9.574781,-3.144897,-1.720875,5.661412,8.040684,-6.965395,3.744878,1.113759,-6.976897,-4.798211,3.506803],[4.748015,-4.391523,-4.326406,9.490538,0.180190,8.641181,0.199921,7.974851,0.190856,5.912065,4.645500,0.681094,-6.821910,-9.457880],[9.711126,6.329374,0.568817,-9.185925,-6.336831,0.285763,-7.558185,4.165430,-6.667878,-1.112839,-5.429855,-3.129362,6.567540,-7.872590]],[[7.667157,-1.651268,-8.575138,5.105937,3.579287,8.128256,-9.199875,1.917170,1.087573,-2.920564,6.049857,-0.103008,-2.692408,8.116305],[-8.554546,-7.059934,9.745809,-7.816045,-1.371242,0.635772,-0.956577,2.093574,-6.023127,5.135261,-3.483303,8.907835,-8.933879,7.985090],[-0.790286,-8.877472,-3.611466,7.135972,3.231994,1.449028,5.179390,5.048058,-7.110377,-5.890171,3.345817,-4.907108,-5.928104,-1.487457],[7.102357,6.587959,-3.036657,-2.861138,-5.835498,-2.099482,-3.811039,-2.023095,5.950014,5.471628,-3.895175,-5.222980,7.884195,4.014526],[-7.536423,-0.060274,1.252440,-8.059254,-6.562962,-5.496281,-5.263524,-3.641864,2.386262,-7.362549,9.122165,-3.251734,-1.435831,0.505809],[2.133463,8.684847,-6.732137,-5.842670,3.168611,-0.150178,4.198511,1.991392,3.468358,-6.327736,-7.880232,9.995889,-9.716077,2.620111],[-5.682702,-3.823131,-6.348261,-9.904987,-9.402091,-1.248094,6.144210,7.318392,-8.615317,-6.105912,-5.502811,-0.023484,1.472651,-1.260802],[6.638507,-9.552106,3.859701,6.959707,-1.407165,-4.816944,-6.521112,5.547048,1.899190,4.696214,6.219939,-4.440396,-9.099197,-4.640447],[-5.235805,-8.525886,-5.753778,-8.174289,2.956433,4.558088,7.510468,-2.779356,8.298612,6.147384,-8.867178,-8.481617,-5.380153,-0.324969]],[[1.559040,-6.959624,0.465091,2.831624,-5.389351,5.696864,0.269586,0.007380,4.920823,2.456914,5.488712,3.324711,0.858320,5.209507],[-4.930190,-6.222588,-0.833928,-7.104357,6.233331,-3.372576,8.166749,-5.321018,-2.343733,1.568720,7.145202,-9.090901,5.292080,6.551466],[0.375837,-4.808331,-0.147503,3.416398,1.506954,-6.581954,4.807776,-9.262731,4.486153,-7.583044,1.839322,2.227819,-5.854287,9.051673],[9.112772,-6.411728,-3.794009,0.551990,8.368149,6.780636,-0.164894,-3.208023,-4.874891,-8.925357,4.973294,-2.333588,-0.517218,0.666007],[6.212881,-1.404078,2.321470,-6.727723,9.832989,-2.580343,-0.620602,9.032046,-8.581008,5.539815,6.064886,-0.168962,-6.935224,2.056073],[-9.802353,7.206751,9.131301,-4.470476,-2.288650,-5.917137,-3.378293,-8.780944,5.174891,4.980854,4.314773,-6.486166,-8.827683,7.881731],[9.143384,3.426688,-5.383351,-3.254944,-1.696877,-4.345653,9.068765,-2.336857,-3.403756,-5.934938,5.157603,6.971849,-8.418475,3.572632],[-6.773456,5.844531,9.048651,7.015344,2.077087,2.013443,-5.502643,-8.111090,1.927751,-7.971440,-8.312184,0.239444,-0.937773,-1.191203],[-7.196214,-1.755660,1.040264,0.232900,-7.858008,-6.124046,-5.124725,-3.233106,0.200061,-9.126206,6.020852,-7.165654,1.967380,3.169645]],[[-4.627244,5.858552,9.763038,5.968244,5.975118,6.215511,9.707886,-9.136318,-9.764775,8.911278,5.668740,-2.099378,-7.045344,-2.822970],[-5.300728,2.955975,-1.396961,5.925757,-3.691605,-0.439019,6.769500,-5.753121,1.524833,-0.830582,7.839414,1.593155,8.883838,2.168850],[9.570086,-1.309480,-5.354942,-4.272795,-8.703940,-0.686987,7.692050,-1.476142,2.574832,0.344606,2.453664,-6.436577,0.624868,-2.125017],[7.217699,-0.148578,8.082656,-8.648958,0.239956,-1.321853,-4.098752,-6.288819,6.663300,1.200722,9.334472,8.100020,-1.371548,2.641786],[-6.539513,5.717429,-3.143830,-7.125110,-2.688961,2.734899,1.899511,0.175720,-0.700404,6.652390,-7.098594,-9.965829,-4.867857,9.461379],[7.338517,-4.789925,-5.391550,1.922909,-5.649681,-3.113304,-6.652756,-4.508426,-6.728835,-1.459684,9.139991,-5.210523,-3.505886,-3.851813],[4.935756,9.736602,-7.614358,-0.575693,1.351245,7.470086,5.161309,-6.389493,6.487210,9.482267,-1.553063,3.293431,-2.609008,-6.882433],[-3.502157,9.691160,-7.549538,1.404013,-2.051416,3.293938,9.589695,9.372125,-1.068640,9.173415,-8.617655,8.935967,-8.106061,9.939218],[7.921821,2.934801,-7.319053,0.034978,1.061877,6.310202,-9.823311,-3.445855,-7.797628,-3.763244,5.686050,-5.059146,-3.349585,1.861253]],[[-6.797680,6.786224,-3.403219,-0.545133,1.831944,6.701769,-8.309673,2.218783,0.457543,-3.078837,8.509219,-3.507651,-3.051241,9.253638],[4.377208,7.270058,6.674687,8.344585,3.896054,-0.599979,4.327504,-9.577721,-3.246611,-5.034140,2.294705,2.919428,8.801827,0.830526],[8.686027,-7.115697,1.057411,-2.236928,3.793022,-3.249413,1.741618,8.936617,-0.042500,-3.327272,1.276364,-8.758409,-6.246755,-1.413453],[-1.815160,2.996957,-0.180705,-5.211881,-5.624877,-5.979171,-5.552670,-6.484190,8.211987,-5.969766,8.429430,-1.414951,0.219758,8.729198],[9.037863,4.720543,-7.341567,0.038714,-9.908642,-4.355058,-4.234550,-5.038359,-3.505959,8.253017,7.731259,6.176722,-0.353853,5.794990],[4.247467,4.076016,-1.650924,-0.128071,-7.463945,0.300960,0.308846,9.018341,-0.110018,-7.152522,-1.312468,-5.237367,2.439419,8.485124],[-7.882825,4.194289,5.850136,-9.083119,8.450300,-1.046259,-2.772295,-6.323836,-0.199477,1.971050,-7.005351,4.380652,8.249790,-4.509576],[0.114581,1.683883,-4.133696,8.628249,6.097562,-3.488310,-5.928934,-4.233439,-4.885838,-9.139312,-0.472252,-7.023558,7.009823,-8.923433],[7.503107,0.962451,-5.810857,-4.234947,6.405392,-3.315682,7.282389,6.381809,-6.084759,-3.903296,8.992000,6.662219,3.695690,-1.941952]],[[7.609437,0.781727,9.703277,5.819305,3.931232,-9.809048,-7.943398,-1.600081,7.559696,1.271496,0.033561,2.777071,7.047547,4.366902],[-9.320983,3.070161,-6.621474,-1.704489,-6.307943,5.730992,-5.043575,-0.622254,-6.499641,-5.710256,3.189152,7.210063,-9.339069,5.919460],[8.161358,-3.019520,-7.745199,7.769974,-7.094339,-2.873617,-3.343443,9.307352,6.164123,5.141966,-1.278404,-5.603962,9.484059,-9.756296],[-3.912952,5.991752,-6.671342,0.390198,-3.201317,2.019842,-0.147115,0.865829,6.149277,1.048439,-2.048897,8.124712,6.001015,-2.115592],[9.402230,-8.825305,-7.606840,-2.481181,4.273528,4.084450,-2.128936,-5.969242,-0.380856,6.702048,-9.832884,7.654468,3.360786,9.262355],[-3.982252,-2.950225,1.542956,5.422091,-4.506134,-2.236109,5.789619,0.762083,2.087119,-4.509646,7.198146,4.344090,7.544304,4.235798],[2.866307,6.179692,-6.892689,-0.451838,-2.615523,-8.680404,9.443539,-0.890975,-5.696205,-5.510419,4.874003,-2.614807,0.792448,3.354653],[-9.743171,2.984796,6.348614,1.748988,-3.459076,4.353973,7.198515,-7.090554,9.431636,5.375404,-4.227206,1.698327,-9.168500,5.019472],[2.499741,-9.278590,5.502156,-3.594115,-4.195740,-1.568338,7.449996,1.036955,9.551265,2.935322,-6.858061,2.029680,-8.741901,6.084668]],[[-1.720114,-9.380018,8.857867,2.511798,6.267924,0.667604,2.888953,-6.481021,-7.409636,3.022246,9.215661,-0.539582,8.015300,3.515457],[-0.260702,-0.179597,7.567107,-2.916140,-2.063467,9.997585,5.533028,5.097124,-6.899521,0.225867,-5.793298,2.990581,7.583938,4.525330],[0.633281,1.662910,2.248092,-4.627651,-2.846193,5.234238,-8.096275,-2.668390,-1.804568,-6.719071,-8.048902,3.610148,-8.580942,-9.839825],[-2.579664,-8.220731,-4.557988,8.155065,0.390571,-2.234583,-5.599315,-0.287516,-7.542236,5.918883,6.181213,-8.699884,4.870381,-6.858466],[-7.303172,-1.386153,-4.773686,-0.775767,-4.847406,9.585323,4.362590,4.617629,3.135661,-1.331922,4.431686,-6.047901,2.443909,-2.764950],[-6.592572,-4.184385,4.234327,0.440672,2.019025,8.711217,8.690057,6.611628,-2.542352,9.889039,3.665446,-5.425090,4.887442,8.009607],[0.246933,1.574208,-9.937342,-1.643271,-8.334826,3.058747,3.796056,1.436127,4.849981,1.965244,-5.704571,-5.651918,-6.233265,-7.599471],[4.303581,-3.944558,0.068824,8.622035,8.143448,6.035635,6.405400,7.282637,5.790252,-8.413690,1.560241,4.443546,-2.990005,3.497453],[-4.305194,-7.695927,1.501523,-7.223238,-2.216424,-8.175066,6.908478,-9.102191,3.927341,9.553816,-2.309411,3.917448,8.693620,4.946846]],[[-0.093250,-8.801099,-8.671728,9.797468,6.036148,-6.953098,6.117930,6.704975,0.839126,0.256333,8.514259,4.709044,-9.036650,7.541169],[7.460419,7.930155,-6.662392,-0.728165,-9.673863,-0.843829,3.455482,-1.171307,-4.596694,5.059097,0.441999,-4.556454,2.888678,-2.074593],[-3.561211,6.326369,1.618580,-5.064303,-6.334554,-8.839292,-1.302055,-3.324627,-2.252195,-5.088621,-0.511432,-7.506482,-5.077077,-6.034861],[-4.244049,-0.557870,7.414565,4.906314,-2.898692,-4.880970,-1.783639,-8.892147,9.479164,8.150796,9.225377,-6.821033,7.756750,4.558966],[9.186337,-5.708226,-8.839100,6.803442,-9.289537,-1.527859,-3.847321,-1.178545,-7.044225,1.849553,0.553835,3.037876,-4.178447,0.069860],[-2.185088,5.533107,-9.836597,9.851533,-2.353046,-4.169226,6.914735,-6.687675,9.724827,5.097225,1.206040,-6.830116,4.132224,2.381104],[3.819792,1.947073,2.713452,-8.091008,-7.655055,-4.676641,-7.386020,-3.938270,-6.591060,2.996910,6.563384,9.718771,9.591581,9.293067],[1.443427,-7.079074,7.540377,-1.948290,-9.738712,8.078770,-3.542446,-2.590089,-8.863076,6.347565,4.733095,7.198643,2.977024,8.459762],[-9.940692,3.970082,4.017168,-6.182328,3.952409,7.562157,9.275520,4.054521,-3.250599,-4.170463,-9.472676,1.419977,-4.354906,-3.584712]],[[3.383551,-8.476558,-2.972392,7.003179,7.992037,5.608362,-2.076205,3.512875,2.359325,-1.273626,-5.782821,-5.372717,-3.508979,-3.027178],[-0.946054,-6.882733,-6.339694,8.106146,-3.737158,-9.993060,6.092671,-3.083967,-7.132111,6.598383,-3.959288,1.662178,8.054424,6.486748],[-5.972119,-1.813300,-4.160953,-4.905569,-1.718925,-1.652276,5.504220,-6.339528,-2.501539,-1.125454,-8.209878,-7.672033,3.501801,5.162256],[6.253963,-6.584322,-7.217408,2.231553,9.353845,1.106548,2.454310,-9.325286,-0.703982,9.719550,-2.604804,7.465158,-6.028065,0.188417],[-9.940749,-5.564514,-5.676866,4.112852,2.075630,6.355657,-6.311310,-7.711459,-2.603762,-1.412411,-6.852067,5.736648,-4.774375,2.721169],[-3.857408,-1.231227,-1.838582,2.184436,-0.004577,5.679350,1.690799,-3.848887,-3.329770,4.996149,-2.759586,8.418878,-9.167538,8.419031],[-1.279243,1.856944,1.750697,5.980204,-6.348942,-0.671732,9.272866,-3.023765,1.770973,-6.983238,-6.642686,-4.587735,-3.590504,4.219794],[4.008532,7.949030,1.564924,-2.813141,-5.994897,-9.005410,-6.253290,9.808952,7.760721,-2.978657,2.108612,-7.125197,5.106380,-0.231276],[-8.574520,-1.980058,-4.895688,1.160043,-0.027087,-0.286884,7.914969,6.930933,-9.812670,2.596733,-1.961014,-6.869695,6.022277,1.245261]]], dtype = "float64")#candidate|4782|(12, 9, 14)|const|float64
bop_4783 = relay.add(var_4781.astype('float64'), relay.reshape(const_4782.astype('float64'), relay.shape_of(var_4781))) # shape=(12, 9, 14)
func_40_call = mod.get_global_var('func_40')
func_42_call = mutated_mod.get_global_var('func_42')
var_4788 = relay.var("var_4788", dtype = "float32", shape = (336,))#candidate|4788|(336,)|var|float32
call_4787 = func_40_call(relay.reshape(var_4788.astype('float32'), [4, 12, 7]))
call_4789 = func_40_call(relay.reshape(var_4788.astype('float32'), [4, 12, 7]))
func_343_call = mod.get_global_var('func_343')
func_346_call = mutated_mod.get_global_var('func_346')
var_4809 = relay.var("var_4809", dtype = "float64", shape = (2288,))#candidate|4809|(2288,)|var|float64
call_4808 = relay.TupleGetItem(func_343_call(relay.reshape(var_4809.astype('float64'), [16, 13, 11])), 0)
call_4810 = relay.TupleGetItem(func_346_call(relay.reshape(var_4809.astype('float64'), [16, 13, 11])), 0)
output = relay.Tuple([bop_4783,call_4787,var_4788,call_4808,var_4809,])
output2 = relay.Tuple([bop_4783,call_4789,var_4788,call_4810,var_4809,])
func_4824 = relay.Function([var_4781,var_4788,var_4809,], output)
mod['func_4824'] = func_4824
mod = relay.transform.InferType()(mod)
mutated_mod['func_4824'] = func_4824
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4824_call = mutated_mod.get_global_var('func_4824')
var_4826 = relay.var("var_4826", dtype = "float64", shape = (12, 9, 14))#candidate|4826|(12, 9, 14)|var|float64
var_4827 = relay.var("var_4827", dtype = "float32", shape = (336,))#candidate|4827|(336,)|var|float32
var_4828 = relay.var("var_4828", dtype = "float64", shape = (2288,))#candidate|4828|(2288,)|var|float64
call_4825 = func_4824_call(var_4826,var_4827,var_4828,)
output = call_4825
func_4829 = relay.Function([var_4826,var_4827,var_4828,], output)
mutated_mod['func_4829'] = func_4829
mutated_mod = relay.transform.InferType()(mutated_mod)
var_4912 = relay.var("var_4912", dtype = "float64", shape = (9, 1, 13))#candidate|4912|(9, 1, 13)|var|float64
uop_4913 = relay.atan(var_4912.astype('float64')) # shape=(9, 1, 13)
func_3804_call = mod.get_global_var('func_3804')
func_3808_call = mutated_mod.get_global_var('func_3808')
var_4918 = relay.var("var_4918", dtype = "float64", shape = ())#candidate|4918|()|var|float64
const_4919 = relay.const([-9.989085,6.215606,6.501177,8.401903,-4.920125,-0.644398,-0.729471,2.542767,-8.625760,7.965593,-0.199531,4.160846,7.470965,-5.859122,5.917812], dtype = "float64")#candidate|4919|(15,)|const|float64
call_4917 = relay.TupleGetItem(func_3804_call(relay.reshape(var_4918.astype('float64'), []), relay.reshape(const_4919.astype('float64'), [1, 15, 1]), ), 0)
call_4920 = relay.TupleGetItem(func_3808_call(relay.reshape(var_4918.astype('float64'), []), relay.reshape(const_4919.astype('float64'), [1, 15, 1]), ), 0)
output = relay.Tuple([uop_4913,call_4917,var_4918,const_4919,])
output2 = relay.Tuple([uop_4913,call_4920,var_4918,const_4919,])
func_4923 = relay.Function([var_4912,var_4918,], output)
mod['func_4923'] = func_4923
mod = relay.transform.InferType()(mod)
mutated_mod['func_4923'] = func_4923
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4923_call = mutated_mod.get_global_var('func_4923')
var_4925 = relay.var("var_4925", dtype = "float64", shape = (9, 1, 13))#candidate|4925|(9, 1, 13)|var|float64
var_4926 = relay.var("var_4926", dtype = "float64", shape = ())#candidate|4926|()|var|float64
call_4924 = func_4923_call(var_4925,var_4926,)
output = call_4924
func_4927 = relay.Function([var_4925,var_4926,], output)
mutated_mod['func_4927'] = func_4927
mutated_mod = relay.transform.InferType()(mutated_mod)
var_4992 = relay.var("var_4992", dtype = "bool", shape = (12, 10, 6))#candidate|4992|(12, 10, 6)|var|bool
var_4993 = relay.var("var_4993", dtype = "bool", shape = (12, 10, 6))#candidate|4993|(12, 10, 6)|var|bool
bop_4994 = relay.logical_and(var_4992.astype('bool'), relay.reshape(var_4993.astype('bool'), relay.shape_of(var_4992))) # shape=(12, 10, 6)
output = relay.Tuple([bop_4994,])
output2 = relay.Tuple([bop_4994,])
func_5011 = relay.Function([var_4992,var_4993,], output)
mod['func_5011'] = func_5011
mod = relay.transform.InferType()(mod)
mutated_mod['func_5011'] = func_5011
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5011_call = mutated_mod.get_global_var('func_5011')
var_5013 = relay.var("var_5013", dtype = "bool", shape = (12, 10, 6))#candidate|5013|(12, 10, 6)|var|bool
var_5014 = relay.var("var_5014", dtype = "bool", shape = (12, 10, 6))#candidate|5014|(12, 10, 6)|var|bool
call_5012 = func_5011_call(var_5013,var_5014,)
output = call_5012
func_5015 = relay.Function([var_5013,var_5014,], output)
mutated_mod['func_5015'] = func_5015
mutated_mod = relay.transform.InferType()(mutated_mod)
var_5017 = relay.var("var_5017", dtype = "float64", shape = ())#candidate|5017|()|var|float64
var_5018 = relay.var("var_5018", dtype = "float64", shape = (16, 10, 12))#candidate|5018|(16, 10, 12)|var|float64
bop_5019 = relay.power(var_5017.astype('float64'), var_5018.astype('float64')) # shape=(16, 10, 12)
func_95_call = mod.get_global_var('func_95')
func_97_call = mutated_mod.get_global_var('func_97')
call_5025 = relay.TupleGetItem(func_95_call(relay.reshape(var_5017.astype('int32'), [])), 2)
call_5026 = relay.TupleGetItem(func_97_call(relay.reshape(var_5017.astype('int32'), [])), 2)
bop_5035 = relay.add(bop_5019.astype('float64'), var_5017.astype('float64')) # shape=(16, 10, 12)
uop_5040 = relay.asin(var_5018.astype('float64')) # shape=(16, 10, 12)
func_1823_call = mod.get_global_var('func_1823')
func_1825_call = mutated_mod.get_global_var('func_1825')
const_5049 = relay.const([-2,5,5,-1,4,6,-2,7,7,-5,-2,-8,8,-5,5,-2,-4,-4,-10,1,-4,-1,6,-6,-3,7,-9,-6,-6,8,5,-10,-10,6,-1,5,6,2,4,-4,-10,-4,-7,5,-9,7,-4,3,-3,-3,7,-10,4,6,1,-6,-10,9,1,3,9,-6,-4,7,9,2,10,3,-5,5,-9,-6,-3,8,-10,-8,8,-4,-4,-2,2,2,-7,9,4,-5,-5,3,7,-4,10,-8,5,-3,-2,1,-8,-8,-8,4,-1,6,-1,7,-8,-6,4,-9,5,-7,4,1,-3,-6,5,2,10,-5,-6,-10,3,5,2,-6,5,-2,-3,2,1,6,7,-6,-7,9,-3,-10,-4,6,10,-3,-7,-5,-7,8,-4,-5,-4,9,4,-9,-6,5,-5,-8,-5,1,3,4,-2,9,9,-6,-7,-6,-4,7,-5,9,-5,6,-7,4,2,1,2,-9,-6,-4,1,-1,5,4,10,10,2,5,-5,-1,-9,-1,4,2,7,10,-5,5,-9,-2,6,-4,9,10,-10,-1,7,10,3,3,9,10,-6,-8,5,4,1,2,9,4,-4,8,6,-5,1,9,-1,6,3,2,3,1,-6,-5,-4,-4,-3,-2,-2,10,-6,5,-7,5,-6,-9,-7,-2,3,9,6,10,6,10,10,3,-8,-5,1,6,9,6,-8,-8,-8,2,10,5,3,-6,-7,1,9,-4,-6,-10,8,10,6,10,-6,-10,-2,4,4,2,-1,1,-9,-10,5,-1,-6,10,-2,8,3,-4,-6,-2,-10,-4,-7,9,-9,-2,-9,-9,7,-10,2,-7,-9,9,1,6,6,-2,-6,-1,-2,-9,-8,-7,-10,4,-7,8,-3,-1,-10,6,10,1,9,-9,4,3,8,7,-8,-1,-1,3,6,8,5,-4,-4,-9,4,5,7,2,-7,-5,-7,2,-7,-3,10,-1,-7,-8,-9,-7,4,-2,1,8,10,-5,-10,-8,3,-2,-3,8,7,3,2,8,4,-8,-4,7,10,5,-10,-8,2,-5,-2,-5,8,4,9,-7,2,2,-4,9,10,7,-7,-2,-7,-4,-10,10,10,-10,-6,6,4,3,4,5,8,-3,-9,3], dtype = "uint64")#candidate|5049|(420,)|const|uint64
call_5048 = func_1823_call(relay.reshape(const_5049.astype('uint64'), [7, 6, 10]))
call_5050 = func_1823_call(relay.reshape(const_5049.astype('uint64'), [7, 6, 10]))
output = relay.Tuple([call_5025,bop_5035,uop_5040,call_5048,const_5049,])
output2 = relay.Tuple([call_5026,bop_5035,uop_5040,call_5050,const_5049,])
func_5053 = relay.Function([var_5017,var_5018,], output)
mod['func_5053'] = func_5053
mod = relay.transform.InferType()(mod)
mutated_mod['func_5053'] = func_5053
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5053_call = mutated_mod.get_global_var('func_5053')
var_5055 = relay.var("var_5055", dtype = "float64", shape = ())#candidate|5055|()|var|float64
var_5056 = relay.var("var_5056", dtype = "float64", shape = (16, 10, 12))#candidate|5056|(16, 10, 12)|var|float64
call_5054 = func_5053_call(var_5055,var_5056,)
output = call_5054
func_5057 = relay.Function([var_5055,var_5056,], output)
mutated_mod['func_5057'] = func_5057
mutated_mod = relay.transform.InferType()(mutated_mod)
var_5186 = relay.var("var_5186", dtype = "float32", shape = (9, 4, 3))#candidate|5186|(9, 4, 3)|var|float32
uop_5187 = relay.atanh(var_5186.astype('float32')) # shape=(9, 4, 3)
func_95_call = mod.get_global_var('func_95')
func_97_call = mutated_mod.get_global_var('func_97')
var_5192 = relay.var("var_5192", dtype = "int32", shape = ())#candidate|5192|()|var|int32
call_5191 = relay.TupleGetItem(func_95_call(relay.reshape(var_5192.astype('int32'), [])), 1)
call_5193 = relay.TupleGetItem(func_97_call(relay.reshape(var_5192.astype('int32'), [])), 1)
func_2588_call = mod.get_global_var('func_2588')
func_2591_call = mutated_mod.get_global_var('func_2591')
const_5195 = relay.const([4,2,-9,5,-10,1,3,-6,-1,10,9,-3,-7,8,4,5,-7,-4,-6,8,-3,8,4,4,10,5,3,2,-7,-8,-10,-8,3,-5,-2,-7,-4,2,8,-5,-1,10,10,-6,2,5,8,-1,7,2,-1,-6,-3,-6,6,1,-2,3,-3,-7,4,7,7,-3,-7,6,3,6,-10,-6,2,4,-8,-3,6,6,-6,-4,-4,-9,-1,9,-5,-9,-5,-1,-6,-10,2,5,-7,-1,-7,-6,-1,10,-10,-7,5,-1,-3,-7,9,-3,-3,2,3,-1,-6,1,-3,-9,-1,-9,-2,-7,5,6,-3,7,-1,-6,-2,-5,5,6,-7,1,3,4,-2,-2,5,3,1,6,10,-8,-10,-3,-9,2,-5,-3,5,-4,8,-6,-8,-5,-8,2,-2,2,-3,6,5,-7,-3,9,-10,6,10,5,10,8,-10,8,3,3,-7,8,-8,-4,-9,-10,-7,9,10,-7,1,-10,8,-2,-2,-6,3,-2,-1,4,1,-9,2,-6,-9,5,-8,2,5,-4,-10,-7,-6,-5,-5,-7,3,-5,-3,9,1,5,-9,5,2,10,-2,4,-5,-5,8,-9,9,5,-4,-5,10,-6,6,4,3,-9,-10,2,-3,-10,-10,-1,-2,10,-3,-2,-4,2,10,-7,10,9,-10,9,-10,4,7,-9,-4,-6,-6,1,-5,-2,-9,-1,7,-2,4,10,-10,6,-10,8,-5,-10,-1,3,-4,-2,-5,5,-4,1,-6,-2,7,-6,2,-10,6,-10,-3,-2,9,1,8,10,-10,-10,3,-5,-9,-5,4,-9,-7,5,1,8,-3,8,4,-3,-8,-5,6,-9,-2,5,-2,-4,3,-1,-9,6,8,5,-1,-10,-3,2,-6,2,7,-2,4,-2,-7,1,1,-10,-3,-3,-5,-5,-8,6,10,-10,9,-8,1,-8,-2,-6,8,2,-3,6,-7,-6,10,7,-2,-8,2,-4,7,-1,2,-2,7,2,8,-10,10,10,-10,1,5,-4,7,-7,-1,3,-8,-4,8,7,-3,-1,-2,5,7,3,5,-8,-5,-7,5,-10,7,-10,-9,1,5,-6,-2,-9,7,10,1,-6,-2,3,-5,2,8,-6,-10,-10,8,4,-7,10,6,7,9,4,-4,-9,-1,-10,-5,-5,-3,2,10,-3,8,2,5,-1,-1,-6,-5,6,9,4,-2,1,-3,7,8,2,-5,-1,-4,-7,-9,-3,-9,2,-5,-2,-5,-4,-7,-6,3,2,-4,2,-7,-4,1,3,-6,-8,1,-10,4,-7,-7,7,-2,-9,1,-4,-10,5,6,1,-2,3,-10,10,-8,-4,-1,-4,9,-9,7,-1,4,8,5,-1,10,-10,10,-6,-6,-3,3,-2,-5,7,4,8,-7,7,-8,8,-4,-10,-10,-3,1,5,-7,10,-6,3,6,-10,-8,2,-7,3,3,-8,-2,-9,-8,8,-1,-9,-5,9,-6,4,-7,-9,9,6,7,-4,6,3,8,-3,-2,-6,-7,-10,-3,6,-1,4,6,3,-5,-4,10,7,3,-5,-2,-1,7,1,-4,-1,1,6,-7,-5,-3,7,8,-1,4,5,-8,-7,8,4,5,8,1,7,10,-4,1,-8,5,-10,-5,7,3,-10,-1,4,2,-4,-7,-2,-3,2,8,-2,9,-10,-9,10,10,-3,-6,9,-1,2,-5,5,-3,-1,6,1,-5,2,9,-6,-1,4,-5,7,7,4,-4,-8,-7,-5,2,10,9,3,-3,-1,-7,-4,-5,8,8,3,-4,-8,-10,6,3,1,-8,-1,3,-7,-6,-1,-2,4,5,-4,8,10,7,2,-1,-1,7,-10,-6,9,8,3,-2,-9,-4,-6,7,10,1,5,7,1,-9,-4,-9,-7,6,-6,8,-7,-10,-5,-10,-2,-9,3,2,1,6,-8,-10,-2,4,-9,7,5,9,-4], dtype = "int64")#candidate|5195|(726,)|const|int64
call_5194 = relay.TupleGetItem(func_2588_call(relay.reshape(const_5195.astype('int64'), [6, 11, 11]), relay.reshape(var_5192.astype('int32'), []), ), 1)
call_5196 = relay.TupleGetItem(func_2591_call(relay.reshape(const_5195.astype('int64'), [6, 11, 11]), relay.reshape(var_5192.astype('int32'), []), ), 1)
func_3804_call = mod.get_global_var('func_3804')
func_3808_call = mutated_mod.get_global_var('func_3808')
var_5204 = relay.var("var_5204", dtype = "float64", shape = (15,))#candidate|5204|(15,)|var|float64
call_5203 = relay.TupleGetItem(func_3804_call(relay.reshape(var_5192.astype('float64'), []), relay.reshape(var_5204.astype('float64'), [1, 15, 1]), ), 0)
call_5205 = relay.TupleGetItem(func_3808_call(relay.reshape(var_5192.astype('float64'), []), relay.reshape(var_5204.astype('float64'), [1, 15, 1]), ), 0)
output = relay.Tuple([uop_5187,call_5191,var_5192,call_5194,const_5195,call_5203,var_5204,])
output2 = relay.Tuple([uop_5187,call_5193,var_5192,call_5196,const_5195,call_5205,var_5204,])
func_5233 = relay.Function([var_5186,var_5192,var_5204,], output)
mod['func_5233'] = func_5233
mod = relay.transform.InferType()(mod)
mutated_mod['func_5233'] = func_5233
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5233_call = mutated_mod.get_global_var('func_5233')
var_5235 = relay.var("var_5235", dtype = "float32", shape = (9, 4, 3))#candidate|5235|(9, 4, 3)|var|float32
var_5236 = relay.var("var_5236", dtype = "int32", shape = ())#candidate|5236|()|var|int32
var_5237 = relay.var("var_5237", dtype = "float64", shape = (15,))#candidate|5237|(15,)|var|float64
call_5234 = func_5233_call(var_5235,var_5236,var_5237,)
output = call_5234
func_5238 = relay.Function([var_5235,var_5236,var_5237,], output)
mutated_mod['func_5238'] = func_5238
mutated_mod = relay.transform.InferType()(mutated_mod)
var_5486 = relay.var("var_5486", dtype = "float32", shape = (13, 1, 13))#candidate|5486|(13, 1, 13)|var|float32
uop_5487 = relay.cos(var_5486.astype('float32')) # shape=(13, 1, 13)
output = uop_5487
output2 = uop_5487
func_5497 = relay.Function([var_5486,], output)
mod['func_5497'] = func_5497
mod = relay.transform.InferType()(mod)
var_5498 = relay.var("var_5498", dtype = "float32", shape = (13, 1, 13))#candidate|5498|(13, 1, 13)|var|float32
output = func_5497(var_5498)
func_5499 = relay.Function([var_5498], output)
mutated_mod['func_5499'] = func_5499
mutated_mod = relay.transform.InferType()(mutated_mod)
const_6106 = relay.const([[[-0.512417,7.611885,8.411830,8.557546,-0.066499,0.148282,5.225821,5.155097,-4.450210,-6.410960,-2.023342,-5.415103],[5.512209,-6.760214,5.285855,5.150747,2.141939,-3.784901,-6.553919,7.532240,-6.373364,5.670567,2.514223,5.368207],[-2.840093,2.784244,-3.148037,6.410926,-0.410979,2.277221,2.096392,-8.218116,1.749346,-5.797755,-6.685734,-3.335524],[-1.878619,-5.053618,-1.706543,-2.666697,8.394299,7.641041,3.584948,8.328784,5.420477,7.000121,4.304038,2.253058],[6.238273,-3.654973,5.872744,-4.048347,-4.524559,8.563265,-7.272376,-9.946603,2.862605,6.103202,-0.803056,0.990152],[5.443176,9.120159,-3.140088,6.824238,-8.031836,6.492317,-9.452158,6.211274,-2.186624,-7.223274,-1.301653,-3.778218],[-1.180196,3.189406,1.863857,-7.250225,9.480629,7.271873,9.082696,1.204187,9.649642,3.854451,9.519544,-1.331126],[-0.093343,-2.728070,8.299539,-7.306899,3.528365,7.216486,-3.396483,6.867902,5.084793,7.563918,-0.918453,-0.628740],[8.518194,1.096391,-0.713350,-6.632540,-4.681950,-7.549118,-2.393570,-7.914229,-8.045154,-1.076487,7.602614,-1.103683],[-9.179180,9.792774,4.454027,-9.712218,-2.816877,3.563696,-3.776870,7.023644,-3.478439,-7.988669,-5.396003,-1.839942],[-3.352583,-9.357790,7.321427,-3.581422,-1.593771,-2.715863,2.947136,1.342397,-1.202722,8.450479,-8.750155,-2.943234],[-7.745779,0.794871,1.952402,8.530473,-9.583176,4.237507,-7.428144,-5.379142,-5.456699,-8.560691,3.489457,1.006116]],[[-3.550719,-0.811111,7.965101,-8.611021,-2.370371,-6.085458,2.841402,0.825290,2.082426,4.303070,4.575426,3.171774],[-7.950780,4.560742,8.119735,-2.133371,9.298241,-3.117208,9.579517,-5.912417,8.335802,0.699651,-4.341898,-4.476883],[0.147039,-4.777129,8.521297,-1.594570,7.524165,-9.984382,-5.562117,5.275504,7.985103,-8.640886,-2.644915,-7.775740],[-8.629497,-7.277058,2.183719,-5.584879,7.889133,3.996489,-9.294724,-7.764264,2.944534,-7.655340,8.964892,-3.057168],[-4.841997,6.026370,2.933323,-6.743317,8.454832,1.352866,9.267327,-3.094912,-0.487742,-7.937824,8.480980,-9.555085],[2.862131,9.276655,-4.230777,4.110713,-6.164111,5.883842,8.837733,8.056900,0.730063,4.713223,4.496145,5.357873],[3.174036,-6.107075,-5.604493,5.995297,-8.892937,5.923618,-7.170685,6.950279,3.140151,1.940517,-9.164266,-0.187789],[5.721098,-0.833205,5.363276,-1.569040,9.502322,7.756986,9.151551,5.564793,1.396828,9.183580,-4.130864,8.265631],[6.102569,-8.025230,2.184485,3.670418,-9.622078,6.578082,3.883212,-1.891659,6.335043,5.290969,-8.545643,-4.908697],[5.580616,-6.897507,-4.640437,2.500211,-9.600122,5.378293,-1.737630,-8.915902,-9.959788,-9.389752,2.504828,7.554464],[8.453129,2.733988,9.840291,6.613109,1.890687,-0.035540,8.311230,-1.987489,4.078808,-2.635102,-5.326827,-9.348456],[-3.050543,2.930075,9.757568,-1.203455,5.001705,9.350632,1.804056,5.406887,-7.322921,-5.465059,8.042081,7.136830]],[[-9.375984,9.970627,-7.931292,-3.804724,-7.108132,-2.350752,-3.655607,-9.803736,-2.849724,-4.648322,7.823655,4.736756],[-4.273299,2.042677,-3.229536,-6.637072,-9.217322,5.250901,-4.078699,-6.623425,9.981163,-2.176840,8.336407,7.705094],[-7.544631,-6.560177,3.421194,4.048479,6.355823,-9.672113,6.089711,8.760698,-2.937132,-7.204346,-4.926133,7.237571],[6.938147,2.079348,1.692392,7.507354,-2.164306,8.990644,7.330861,0.132596,0.700976,-9.686505,3.394695,0.524868],[-6.867319,-2.073811,-1.668772,1.203502,4.579491,-9.135624,9.953326,4.146953,7.383492,-9.165223,5.275311,-5.793517],[9.472679,-3.687687,-6.386596,-0.293316,9.238618,6.636182,-9.577558,-3.690043,3.728185,-3.543878,-6.781376,-0.669153],[-6.748032,-3.932499,2.252532,5.324830,6.825685,3.270259,5.489814,-1.151701,-0.085693,-7.678837,-2.379543,-5.908527],[0.536822,1.634090,-1.595135,-5.765261,-7.204837,2.531331,9.478521,-2.528700,-4.124521,-5.710621,3.040550,-8.110309],[-1.018245,-0.173799,5.976285,-6.843072,-6.555810,-7.811336,7.329830,7.739536,9.341000,4.464357,5.694393,6.469669],[6.004418,7.717466,4.101207,-7.995510,-8.061571,-8.488892,-4.025797,8.720921,-9.069334,8.663086,-3.539610,6.526879],[3.627500,-5.120792,-6.317146,-9.018082,5.070115,-9.003964,-3.317658,-4.609008,-1.177242,-1.480386,3.421577,5.217441],[-1.575021,0.360363,2.950745,-4.558346,-4.601075,-0.360492,0.869627,-3.925920,-8.742393,6.015901,-9.300933,-2.163589]],[[-8.699869,7.173184,-3.808448,-0.592192,5.725062,3.208232,-2.249468,-3.309424,-4.547332,-2.885587,2.047529,-1.928043],[4.919738,-1.788851,7.513815,-6.318616,-0.363664,0.375497,-3.786429,6.544657,9.242846,3.277963,-5.174534,-7.910235],[-2.350393,-8.743985,-3.892957,6.508389,-7.467123,9.295709,-8.699064,-4.620358,7.707366,1.717288,6.109315,9.508493],[5.330327,-8.575612,-4.965802,-3.969331,6.769430,1.297978,8.892012,-3.726564,-9.770192,5.175265,8.471666,7.653762],[7.328046,2.526417,9.609842,-0.880821,4.901966,6.324807,3.997679,-2.561791,-2.337879,-5.791142,-0.224030,-1.110726],[-0.340826,-8.547058,8.624074,-9.391148,-0.580638,8.405424,2.452352,3.708705,-9.900688,-7.388441,-4.840444,1.235899],[-2.231978,7.528872,-5.230694,-7.391771,7.991670,-8.829993,-3.302370,-4.594352,-0.581690,0.299880,8.000320,-7.635913],[6.081479,4.995402,9.453352,-9.425856,5.634139,1.635777,1.758199,-4.669215,-1.099920,8.955506,-6.953213,6.953097],[4.593619,-3.874729,7.984663,2.239078,4.140363,7.156425,5.270370,9.368059,9.466501,-5.711155,-7.029030,5.637073],[2.287364,4.078891,-4.870567,0.067721,4.318150,-1.111729,-2.744671,8.697018,0.318186,6.596713,8.228286,7.358338],[9.358068,0.154515,-8.851544,-7.850527,-8.800787,9.433473,-3.937316,-1.630843,-3.172644,1.298377,-0.057568,4.259576],[4.028079,-7.703850,0.436520,7.921277,4.917270,-7.842466,5.055432,-1.774291,-1.067624,2.363471,-6.238259,2.535388]],[[-4.914617,1.494772,9.651369,-7.674654,7.094536,6.110180,-0.441712,6.082403,-7.475542,-9.741803,-1.903590,4.115917],[-1.310623,-5.989628,-8.173029,-4.524790,-4.263618,-8.090802,-2.228241,-2.217418,3.699597,-3.514247,-5.276193,-8.973949],[3.058156,-5.913469,3.257698,-6.613931,-5.402076,-0.361049,-4.002760,-9.023618,-5.497308,9.811649,7.580368,4.588189],[3.904585,3.369457,0.416711,-2.605714,-3.211700,0.585553,-9.245408,6.414287,-0.646795,-0.489912,-0.262274,5.122434],[8.835614,4.593895,-7.580004,6.784367,-5.455689,1.994366,-3.996947,-5.715055,-6.842591,-7.742501,-8.855401,-9.602639],[4.412438,1.894307,2.214969,9.160239,3.332874,5.638628,7.450322,-1.902140,0.479377,7.080616,0.195068,-8.047803],[0.988305,3.081351,2.250474,-9.782135,-6.395118,-0.318897,-8.898064,-6.012328,3.241319,5.823128,-8.295868,-9.245787],[5.469042,-5.364600,-0.460494,3.252171,7.650071,9.283624,-2.736976,-2.218536,4.567554,-1.243249,-0.145255,-1.459804],[-2.379838,-3.510284,9.762175,0.490576,-5.347531,3.057548,-9.860060,9.343997,2.708891,-2.699678,-5.426378,-8.653694],[-6.168003,-8.199793,4.551607,-2.136613,-8.824516,7.973944,8.553305,4.011628,-4.011488,-9.307472,5.453879,-9.186809],[-1.882494,-4.539744,5.710709,4.178631,6.296748,-2.277071,-3.760952,-1.068070,9.360346,-1.732295,-9.012064,6.579725],[-4.096316,-8.796574,2.403978,0.357449,5.901501,-8.146770,-0.203105,-7.856823,8.406368,4.023832,1.142239,8.309816]],[[6.983033,-6.226940,2.313646,-4.412988,2.370665,1.670619,5.437321,5.415150,-5.046989,-5.899077,9.719882,-2.299597],[8.090267,-9.979001,3.745330,-1.092231,3.662637,0.585446,-0.126398,-5.992669,-9.362611,-9.246508,-1.219745,-5.710443],[9.156197,-2.309441,-3.664379,-1.499070,-5.295425,-1.074298,-9.054790,-5.921181,5.790911,-5.930071,0.635018,-4.736035],[-7.631384,4.780133,-1.434936,2.403718,-2.505731,-3.281108,-2.692117,9.811295,7.224097,-1.619670,-3.590889,5.437181],[-7.143708,4.392924,-7.222731,5.142436,-9.530738,-0.498821,9.137848,-5.106834,1.869477,-2.149867,0.706956,-1.112850],[5.031555,-0.797919,6.838594,-0.293640,2.969091,1.381896,8.253120,-9.884870,7.160519,-1.918348,-2.172499,9.961454],[0.156970,3.760394,1.973356,4.839360,8.136710,-5.503370,8.622325,-2.399197,-2.890628,-0.899935,7.454483,2.210391],[1.995073,6.671779,-3.987727,0.098878,-7.129640,5.364729,-1.296377,-6.080399,-5.843095,-0.262423,8.590212,5.361478],[-8.112596,8.895389,-2.303816,1.445890,-6.478529,-1.156332,8.319756,-2.262845,-7.536088,4.680935,-8.154565,-8.817599],[-5.715675,-1.760102,-9.320696,0.267204,-2.876565,-3.983688,5.269092,-1.228053,-1.161711,-6.524385,8.097620,5.081577],[-4.834342,-3.255615,-8.270044,-7.069051,-3.033538,8.151254,-4.446822,8.682643,3.150310,2.951812,9.300101,8.337174],[-6.246237,8.080867,-3.194419,-4.638485,9.868941,-5.363427,3.966748,-7.703519,9.630820,-9.965897,-8.916355,-6.236868]]], dtype = "float64")#candidate|6106|(6, 12, 12)|const|float64
uop_6107 = relay.asin(const_6106.astype('float64')) # shape=(6, 12, 12)
uop_6118 = relay.acosh(uop_6107.astype('float32')) # shape=(6, 12, 12)
uop_6133 = relay.exp(const_6106.astype('float32')) # shape=(6, 12, 12)
output = relay.Tuple([uop_6118,uop_6133,])
output2 = relay.Tuple([uop_6118,uop_6133,])
func_6135 = relay.Function([], output)
mod['func_6135'] = func_6135
mod = relay.transform.InferType()(mod)
output = func_6135()
func_6136 = relay.Function([], output)
mutated_mod['func_6136'] = func_6136
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6135_call = mod.get_global_var('func_6135')
func_6136_call = mutated_mod.get_global_var('func_6136')
call_6195 = relay.TupleGetItem(func_6135_call(), 1)
call_6196 = relay.TupleGetItem(func_6136_call(), 1)
func_2472_call = mod.get_global_var('func_2472')
func_2475_call = mutated_mod.get_global_var('func_2475')
const_6201 = relay.const([[-5],[-6],[-8],[-4],[-1],[-7],[-6],[-7],[-10],[8],[4],[7],[-9],[-8],[-10],[6],[5],[-6],[1],[6],[-5],[-5],[10],[9],[-10],[3],[8]], dtype = "uint8")#candidate|6201|(27, 1)|const|uint8
call_6200 = relay.TupleGetItem(func_2472_call(relay.reshape(const_6201.astype('uint8'), [1, 9, 3])), 1)
call_6202 = relay.TupleGetItem(func_2475_call(relay.reshape(const_6201.astype('uint8'), [1, 9, 3])), 1)
uop_6207 = relay.sinh(call_6200.astype('float32')) # shape=(1, 9, 3)
uop_6209 = relay.sinh(call_6202.astype('float32')) # shape=(1, 9, 3)
output = relay.Tuple([call_6195,const_6201,uop_6207,])
output2 = relay.Tuple([call_6196,const_6201,uop_6209,])
func_6211 = relay.Function([], output)
mod['func_6211'] = func_6211
mod = relay.transform.InferType()(mod)
output = func_6211()
func_6212 = relay.Function([], output)
mutated_mod['func_6212'] = func_6212
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6135_call = mod.get_global_var('func_6135')
func_6136_call = mutated_mod.get_global_var('func_6136')
call_6259 = relay.TupleGetItem(func_6135_call(), 1)
call_6260 = relay.TupleGetItem(func_6136_call(), 1)
output = call_6259
output2 = call_6260
func_6270 = relay.Function([], output)
mod['func_6270'] = func_6270
mod = relay.transform.InferType()(mod)
output = func_6270()
func_6271 = relay.Function([], output)
mutated_mod['func_6271'] = func_6271
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6211_call = mod.get_global_var('func_6211')
func_6212_call = mutated_mod.get_global_var('func_6212')
call_6321 = relay.TupleGetItem(func_6211_call(), 0)
call_6322 = relay.TupleGetItem(func_6212_call(), 0)
uop_6330 = relay.sin(call_6321.astype('float32')) # shape=(6, 12, 12)
uop_6332 = relay.sin(call_6322.astype('float32')) # shape=(6, 12, 12)
output = relay.Tuple([uop_6330,])
output2 = relay.Tuple([uop_6332,])
func_6336 = relay.Function([], output)
mod['func_6336'] = func_6336
mod = relay.transform.InferType()(mod)
output = func_6336()
func_6337 = relay.Function([], output)
mutated_mod['func_6337'] = func_6337
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6336_call = mod.get_global_var('func_6336')
func_6337_call = mutated_mod.get_global_var('func_6337')
call_6386 = relay.TupleGetItem(func_6336_call(), 0)
call_6387 = relay.TupleGetItem(func_6337_call(), 0)
func_4923_call = mod.get_global_var('func_4923')
func_4927_call = mutated_mod.get_global_var('func_4927')
var_6394 = relay.var("var_6394", dtype = "float64", shape = (117,))#candidate|6394|(117,)|var|float64
var_6395 = relay.var("var_6395", dtype = "float64", shape = ())#candidate|6395|()|var|float64
call_6393 = relay.TupleGetItem(func_4923_call(relay.reshape(var_6394.astype('float64'), [9, 1, 13]), relay.reshape(var_6395.astype('float64'), []), ), 1)
call_6396 = relay.TupleGetItem(func_4927_call(relay.reshape(var_6394.astype('float64'), [9, 1, 13]), relay.reshape(var_6395.astype('float64'), []), ), 1)
func_6336_call = mod.get_global_var('func_6336')
func_6337_call = mutated_mod.get_global_var('func_6337')
call_6398 = relay.TupleGetItem(func_6336_call(), 0)
call_6399 = relay.TupleGetItem(func_6337_call(), 0)
output = relay.Tuple([call_6386,call_6393,var_6394,var_6395,call_6398,])
output2 = relay.Tuple([call_6387,call_6396,var_6394,var_6395,call_6399,])
func_6406 = relay.Function([var_6394,var_6395,], output)
mod['func_6406'] = func_6406
mod = relay.transform.InferType()(mod)
var_6407 = relay.var("var_6407", dtype = "float64", shape = (117,))#candidate|6407|(117,)|var|float64
var_6408 = relay.var("var_6408", dtype = "float64", shape = ())#candidate|6408|()|var|float64
output = func_6406(var_6407,var_6408,)
func_6409 = relay.Function([var_6407,var_6408,], output)
mutated_mod['func_6409'] = func_6409
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6211_call = mod.get_global_var('func_6211')
func_6212_call = mutated_mod.get_global_var('func_6212')
call_6417 = relay.TupleGetItem(func_6211_call(), 2)
call_6418 = relay.TupleGetItem(func_6212_call(), 2)
output = relay.Tuple([call_6417,])
output2 = relay.Tuple([call_6418,])
func_6419 = relay.Function([], output)
mod['func_6419'] = func_6419
mod = relay.transform.InferType()(mod)
output = func_6419()
func_6420 = relay.Function([], output)
mutated_mod['func_6420'] = func_6420
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6336_call = mod.get_global_var('func_6336')
func_6337_call = mutated_mod.get_global_var('func_6337')
call_6473 = relay.TupleGetItem(func_6336_call(), 0)
call_6474 = relay.TupleGetItem(func_6337_call(), 0)
const_6489 = relay.const([[[-9.026587,6.043790,-4.010006,-9.481127,0.493702,0.309108,-5.304360,6.907595,-4.744318,-5.250709,-9.723099,-0.795489],[9.036812,1.333761,-5.780706,-9.434253,0.441890,1.928142,1.153898,2.939746,0.464377,-2.432369,6.676555,-5.864888],[1.975556,-5.069225,-1.658956,1.404746,1.771143,8.015977,-1.425202,-4.322854,6.166060,8.904359,3.602354,8.768402],[-3.779715,9.534963,4.196004,8.450282,-5.405306,-9.253918,-6.368338,-4.897735,8.836119,3.482089,-7.213819,5.580926],[8.836700,-6.546483,6.997051,9.255329,2.736608,-4.266927,-5.706863,-0.782132,8.681486,-5.156978,-9.289981,2.956563],[-7.843758,2.220093,-4.939000,-1.056791,-9.814518,7.230550,-9.060819,5.695380,5.774424,-3.836809,6.295052,-4.448403],[-3.887290,-9.108430,-6.277334,-4.731688,-0.452457,6.800670,-0.588146,-1.956118,-3.401659,4.442696,2.082409,-3.795000],[-7.393983,-1.533488,6.227088,-8.805060,5.276988,1.481368,-6.044948,-0.480276,6.006522,2.147291,7.660949,-2.390581],[5.294748,-2.457190,-7.810567,5.352454,-8.929016,-8.469973,0.133779,5.589223,9.515286,-4.661351,-1.081659,-5.360034],[-4.702962,4.904485,-9.052284,8.336547,6.061653,-8.187317,-0.817090,-1.113594,6.201297,6.518420,3.426943,-4.175590],[8.866376,-0.319597,7.107678,8.707656,5.560490,-4.405671,0.217934,2.966307,1.106530,-5.293652,-4.069247,-1.581368],[-1.255773,-4.374837,-5.706724,-8.483972,9.022639,1.048414,-2.547099,-1.476668,-2.186260,0.906780,-5.193755,-2.978920]],[[-9.430696,1.464545,-0.449756,-1.069727,6.629694,-1.962757,8.409535,2.096323,-6.066728,-0.896680,-5.312721,-2.681649],[9.694255,-4.084379,-4.103993,9.523693,6.038791,5.382957,8.219252,-6.788896,-1.662886,-0.566764,-8.088414,-8.982234],[2.340716,9.590011,1.923183,-8.889146,9.309181,-1.536816,8.390058,-2.065623,4.504330,-2.253229,2.115154,3.670103],[-2.690769,-2.407467,-2.881559,3.897593,6.694679,4.275782,-1.333294,2.119128,-3.168184,3.635739,2.894200,-4.162514],[-7.799297,6.914672,-5.100237,5.718449,0.448027,7.200010,8.903786,0.444387,1.631810,3.232324,-7.979191,9.005900],[7.354423,-5.360753,-8.178197,6.372649,-4.401421,-6.349610,1.087100,0.699281,7.719391,-9.797230,5.908638,8.956323],[-7.719413,-5.353919,8.068258,8.971992,-9.691538,-2.350424,3.673482,1.785064,-5.939908,-1.217976,-3.042973,-5.134090],[-3.009966,-0.713589,-6.694916,-6.447722,-4.381147,4.349963,-6.931847,-1.572488,5.377430,9.052469,-0.560787,-4.020660],[-8.320825,5.958642,-0.906259,1.995490,-5.052743,-9.934135,4.750658,-3.733073,5.571253,-2.816784,-2.756109,-7.035111],[2.748740,-9.401527,6.135479,-9.253336,9.417414,-3.431169,-1.266286,-4.310613,5.762505,5.222614,0.721633,-9.773464],[-1.391315,-8.989326,-3.286101,-1.062817,-6.506559,6.024178,7.277512,-2.303431,1.403211,-0.875538,-2.613478,8.494281],[5.704191,-5.764294,-1.545741,7.547479,7.156963,8.189544,-4.820047,4.434208,3.150723,-2.344475,6.396218,1.849490]],[[2.413839,-9.239338,2.918998,3.950029,-1.507366,4.405651,0.453782,0.082895,4.051743,-3.587797,-6.960726,-1.729352],[-1.729972,-8.750079,5.183586,5.691135,7.927668,-1.044230,9.786577,8.376065,-8.849810,-5.808463,3.471259,-0.821106],[-7.572897,7.242582,6.266197,-3.953223,-1.479171,4.570102,9.653953,8.323157,-0.847039,7.163668,0.420176,4.744727],[7.873517,5.250580,-8.624855,4.561582,-8.144799,1.895292,4.390546,-7.143529,7.732090,7.624744,-6.281099,1.437671],[4.658574,-3.674423,-6.589441,-8.872794,3.423248,-7.471759,9.413942,-0.041247,-6.785620,9.686654,-2.902379,-7.290053],[1.646870,-2.166806,-3.115073,-6.580864,-2.743413,-7.695165,5.695647,-7.959494,4.121410,-2.882833,3.925471,-0.323548],[-5.469089,8.142426,1.467240,-3.403415,5.510219,-4.869894,3.804318,9.124149,3.297862,-0.816745,-6.720486,4.286466],[2.641823,6.925398,0.231955,6.467433,0.101251,-9.006440,-7.036657,-5.145371,2.016603,2.186380,1.982258,-9.988971],[-5.143121,3.918320,5.454503,-2.031283,-9.888925,1.665810,-1.358984,-5.059004,8.188239,-9.365850,3.159208,-0.895504],[-7.316281,1.075461,-5.484189,-6.339962,-3.452565,-6.333774,3.619269,3.459911,-9.009969,2.919798,5.248495,-8.607500],[-5.715793,-8.793692,9.032252,-3.147538,-5.028790,-2.156239,1.794106,6.028528,-8.939161,2.849322,3.106522,-9.965490],[-4.670684,-5.012554,5.980430,-6.880181,8.767990,9.089992,3.498605,-1.188892,-3.982594,0.428627,-1.873587,0.993537]],[[-2.360640,-3.623508,5.443206,6.303629,-7.022799,7.972294,-1.106228,3.466447,-7.600319,5.989215,-6.481447,6.348928],[-6.117697,-6.341179,-0.278120,8.351013,-5.932036,-5.181704,-1.927116,3.509132,8.105491,-4.765808,3.539546,5.844776],[7.319150,9.771385,8.876340,-1.497412,7.463237,-7.462081,-4.096920,-5.782620,3.525156,6.401791,-1.728125,-5.018917],[7.940592,-5.997365,-7.080951,4.998952,-2.294375,8.796418,0.280948,4.595082,-1.481647,-8.210025,3.804597,4.368346],[8.095706,8.818564,-7.764814,3.763577,-8.143792,-1.013759,-1.879046,-1.685437,-7.112222,-1.952627,1.948156,1.234719],[4.445092,7.302265,-0.167213,2.616413,2.700599,-6.837803,-3.381277,1.684817,2.765589,3.607336,3.300310,-8.807763],[6.342165,-9.358637,-5.947640,-7.515671,6.030326,-1.002187,-7.906718,-9.417654,-4.330941,4.630383,-1.755819,-5.928034],[-0.718969,0.240867,6.439152,-6.281241,-0.128853,-8.104392,-7.321377,-2.830671,-9.481012,7.902963,-6.122951,-5.722495],[-2.515372,2.938368,-6.578894,-5.613341,7.109082,5.560008,0.151852,9.262017,-0.130488,-7.370960,-7.919338,-8.408154],[-4.966074,-7.293571,2.008478,2.839577,-0.165640,6.952811,-0.675099,-2.713696,2.623758,9.977001,0.293024,3.340240],[-7.657034,-2.283993,-3.885866,9.000227,-0.667343,-2.717871,-8.074951,-0.249954,-0.275603,9.118343,7.528282,7.492442],[2.196465,-3.027256,0.805978,-1.361840,9.159418,1.033910,-6.707772,-7.181041,-2.730132,-0.225003,9.135510,1.199794]],[[-3.216469,-3.276730,-8.736955,9.685694,-5.493326,-0.400495,5.017745,5.148974,8.720881,-2.678453,2.640342,2.410629],[5.110435,-7.709137,-0.174759,0.299603,8.691533,-4.171722,3.550773,1.525495,3.177337,6.609995,7.100120,-4.374588],[5.773135,-8.070561,9.796572,-9.748234,0.631277,7.489781,5.922033,9.297813,7.931165,-3.724311,8.098051,-1.145207],[-1.247378,0.103476,3.074698,-4.912547,-8.844258,2.155774,-5.220547,9.423100,6.291082,4.030623,5.411175,8.421973],[5.291949,6.885581,9.709565,3.816345,8.692350,1.507609,-5.158958,-0.934123,-7.183671,0.760706,0.321694,2.480407],[1.257182,2.654908,6.279172,0.286658,2.990483,3.486344,6.810380,-8.822237,3.384697,3.954732,0.686160,-1.920745],[7.314465,1.422451,-0.836226,0.180385,8.905664,-3.179610,4.816177,7.412979,-6.286748,-0.590930,-4.666098,7.568373],[-4.764651,7.899335,-7.863477,-3.311436,5.128131,-3.519323,-3.787279,-3.453885,0.483098,-8.208267,-7.806564,7.707122],[-6.524144,-4.353040,-9.800973,-8.856987,-8.646555,-2.134199,9.051075,0.534072,-7.313555,2.359328,6.440306,0.359648],[-1.893193,-5.864303,2.967997,-3.321128,5.718504,-4.400233,-8.710962,-6.222819,8.873112,1.817607,8.678939,4.239860],[-9.130669,-2.705631,-8.812227,-2.477465,1.811168,-3.600452,-0.315822,-5.686208,4.412205,9.952506,0.844075,5.178406],[9.983388,-4.163043,4.095153,-6.024727,-6.257751,7.032824,-6.626861,5.494359,-8.461236,5.448863,-2.965501,-9.346634]],[[-1.522648,6.048081,-4.909032,-8.401265,0.964685,-6.670848,5.308457,6.938946,-5.688171,-8.020179,-3.301476,-8.458359],[2.600254,-6.124829,-3.242543,-9.762893,-9.320977,-6.478458,-5.611498,-9.661569,0.750659,-4.689272,-2.480567,-6.254749],[-4.993980,5.344303,6.793198,-3.877397,4.709551,-1.498444,9.461265,4.321023,0.729163,-7.080214,-4.632934,6.673828],[-3.473375,-2.658693,7.080353,1.411347,-4.947005,1.217688,-8.125495,-8.508365,-1.651546,4.978330,0.316095,2.966112],[5.899811,-3.797763,4.667436,9.900255,0.198878,-4.821439,3.566565,9.373432,-4.408407,4.464790,-9.830340,9.616649],[-0.739551,-7.048571,7.496020,-5.030189,-0.635092,-2.751403,5.911674,1.440928,-7.094644,8.676771,1.005657,3.368355],[9.004991,-4.862283,-2.513047,-2.672132,8.551161,9.871772,4.628624,7.434067,-7.431939,7.276970,8.396196,5.110621],[-3.850327,2.310812,5.876527,9.923169,2.909205,-6.036099,1.407493,6.558441,8.189306,7.753541,-1.985790,-9.249947],[3.565789,-4.315209,-4.039737,-4.382976,0.415118,-6.152406,-9.564331,7.980489,-0.602939,7.614618,5.282869,-7.692470],[7.252169,5.399757,-4.334159,8.908617,9.496769,-7.335768,5.021397,-1.352034,8.181812,8.333064,-1.867883,3.185204],[-0.725816,8.238595,2.537365,-7.802523,5.692592,4.733058,-2.494714,7.987214,-2.269521,9.169277,-7.966387,-1.509453],[7.197328,4.386460,2.366336,-2.462142,-4.177323,3.639570,1.536741,-5.536779,8.244692,-4.851658,-0.208094,8.707131]]], dtype = "float32")#candidate|6489|(6, 12, 12)|const|float32
bop_6490 = relay.greater_equal(call_6473.astype('bool'), relay.reshape(const_6489.astype('bool'), relay.shape_of(call_6473))) # shape=(6, 12, 12)
bop_6493 = relay.greater_equal(call_6474.astype('bool'), relay.reshape(const_6489.astype('bool'), relay.shape_of(call_6474))) # shape=(6, 12, 12)
uop_6510 = relay.log2(bop_6490.astype('float64')) # shape=(6, 12, 12)
uop_6512 = relay.log2(bop_6493.astype('float64')) # shape=(6, 12, 12)
uop_6515 = relay.cosh(call_6473.astype('float64')) # shape=(6, 12, 12)
uop_6517 = relay.cosh(call_6474.astype('float64')) # shape=(6, 12, 12)
func_2170_call = mod.get_global_var('func_2170')
func_2174_call = mutated_mod.get_global_var('func_2174')
var_6519 = relay.var("var_6519", dtype = "float64", shape = (4, 168))#candidate|6519|(4, 168)|var|float64
var_6520 = relay.var("var_6520", dtype = "int32", shape = ())#candidate|6520|()|var|int32
call_6518 = relay.TupleGetItem(func_2170_call(relay.reshape(var_6519.astype('float64'), [14, 16, 3]), relay.reshape(var_6520.astype('int32'), []), ), 2)
call_6521 = relay.TupleGetItem(func_2174_call(relay.reshape(var_6519.astype('float64'), [14, 16, 3]), relay.reshape(var_6520.astype('int32'), []), ), 2)
uop_6543 = relay.acos(var_6519.astype('float32')) # shape=(4, 168)
func_5497_call = mod.get_global_var('func_5497')
func_5499_call = mutated_mod.get_global_var('func_5499')
var_6550 = relay.var("var_6550", dtype = "float32", shape = (169,))#candidate|6550|(169,)|var|float32
call_6549 = func_5497_call(relay.reshape(var_6550.astype('float32'), [13, 1, 13]))
call_6551 = func_5497_call(relay.reshape(var_6550.astype('float32'), [13, 1, 13]))
output = relay.Tuple([uop_6510,uop_6515,call_6518,var_6520,uop_6543,call_6549,var_6550,])
output2 = relay.Tuple([uop_6512,uop_6517,call_6521,var_6520,uop_6543,call_6551,var_6550,])
func_6580 = relay.Function([var_6519,var_6520,var_6550,], output)
mod['func_6580'] = func_6580
mod = relay.transform.InferType()(mod)
mutated_mod['func_6580'] = func_6580
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6580_call = mutated_mod.get_global_var('func_6580')
var_6582 = relay.var("var_6582", dtype = "float64", shape = (4, 168))#candidate|6582|(4, 168)|var|float64
var_6583 = relay.var("var_6583", dtype = "int32", shape = ())#candidate|6583|()|var|int32
var_6584 = relay.var("var_6584", dtype = "float32", shape = (169,))#candidate|6584|(169,)|var|float32
call_6581 = func_6580_call(var_6582,var_6583,var_6584,)
output = call_6581
func_6585 = relay.Function([var_6582,var_6583,var_6584,], output)
mutated_mod['func_6585'] = func_6585
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6419_call = mod.get_global_var('func_6419')
func_6420_call = mutated_mod.get_global_var('func_6420')
call_6587 = relay.TupleGetItem(func_6419_call(), 0)
call_6588 = relay.TupleGetItem(func_6420_call(), 0)
output = relay.Tuple([call_6587,])
output2 = relay.Tuple([call_6588,])
func_6601 = relay.Function([], output)
mod['func_6601'] = func_6601
mod = relay.transform.InferType()(mod)
mutated_mod['func_6601'] = func_6601
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6601_call = mutated_mod.get_global_var('func_6601')
call_6602 = func_6601_call()
output = call_6602
func_6603 = relay.Function([], output)
mutated_mod['func_6603'] = func_6603
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6419_call = mod.get_global_var('func_6419')
func_6420_call = mutated_mod.get_global_var('func_6420')
call_6652 = relay.TupleGetItem(func_6419_call(), 0)
call_6653 = relay.TupleGetItem(func_6420_call(), 0)
output = relay.Tuple([call_6652,])
output2 = relay.Tuple([call_6653,])
func_6676 = relay.Function([], output)
mod['func_6676'] = func_6676
mod = relay.transform.InferType()(mod)
output = func_6676()
func_6677 = relay.Function([], output)
mutated_mod['func_6677'] = func_6677
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6135_call = mod.get_global_var('func_6135')
func_6136_call = mutated_mod.get_global_var('func_6136')
call_6681 = relay.TupleGetItem(func_6135_call(), 0)
call_6682 = relay.TupleGetItem(func_6136_call(), 0)
output = call_6681
output2 = call_6682
func_6704 = relay.Function([], output)
mod['func_6704'] = func_6704
mod = relay.transform.InferType()(mod)
mutated_mod['func_6704'] = func_6704
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6704_call = mutated_mod.get_global_var('func_6704')
call_6705 = func_6704_call()
output = call_6705
func_6706 = relay.Function([], output)
mutated_mod['func_6706'] = func_6706
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6211_call = mod.get_global_var('func_6211')
func_6212_call = mutated_mod.get_global_var('func_6212')
call_6707 = relay.TupleGetItem(func_6211_call(), 2)
call_6708 = relay.TupleGetItem(func_6212_call(), 2)
uop_6716 = relay.tan(call_6707.astype('float64')) # shape=(1, 9, 3)
uop_6718 = relay.tan(call_6708.astype('float64')) # shape=(1, 9, 3)
output = uop_6716
output2 = uop_6718
func_6739 = relay.Function([], output)
mod['func_6739'] = func_6739
mod = relay.transform.InferType()(mod)
mutated_mod['func_6739'] = func_6739
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6739_call = mutated_mod.get_global_var('func_6739')
call_6740 = func_6739_call()
output = call_6740
func_6741 = relay.Function([], output)
mutated_mod['func_6741'] = func_6741
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6676_call = mod.get_global_var('func_6676')
func_6677_call = mutated_mod.get_global_var('func_6677')
call_6769 = relay.TupleGetItem(func_6676_call(), 0)
call_6770 = relay.TupleGetItem(func_6677_call(), 0)
output = call_6769
output2 = call_6770
func_6772 = relay.Function([], output)
mod['func_6772'] = func_6772
mod = relay.transform.InferType()(mod)
mutated_mod['func_6772'] = func_6772
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6772_call = mutated_mod.get_global_var('func_6772')
call_6773 = func_6772_call()
output = call_6773
func_6774 = relay.Function([], output)
mutated_mod['func_6774'] = func_6774
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6772_call = mod.get_global_var('func_6772')
func_6774_call = mutated_mod.get_global_var('func_6774')
call_6778 = func_6772_call()
call_6779 = func_6772_call()
func_3362_call = mod.get_global_var('func_3362')
func_3365_call = mutated_mod.get_global_var('func_3365')
const_6784 = relay.const([9.331008,-7.642273,-7.122089,-7.766816,-8.818255,-6.065609,-7.310275,7.840457,9.524203,0.156312,-4.306351,-4.803408,-2.041635,-1.174660,-3.361585,-4.366671,-5.343540,-1.181175,7.015789,0.888876,1.425792,-7.939894,-6.828179,9.002832,-5.597200,2.274695,7.926941,-1.374282,0.580441,1.537256,-3.554841,-2.521489,-1.082240,2.605491,0.807609,6.228659,-8.716618,8.704416,9.573090,-0.171092,5.918177,3.693480,-5.298195,-6.494273,-2.316799,5.817265,8.844998,-6.374390,-4.041961,8.169266,-1.767972,-3.926879,1.976690,8.391167,4.601894,-8.203305,0.411671,2.380310,3.830097,-9.081161,6.234373,-2.547134,1.957252,-5.087519,-1.229040,7.659160,-4.299834,-6.402340,2.134504,8.531674,4.689841,8.926195,7.400671,-5.896596,3.570651,-8.177550,-0.078531,3.124103,8.228399,-6.662649,-7.942099,5.279906,1.774507,-4.861250,0.387290,2.785194,7.918288,-3.114058,7.488727,5.632968,7.801645,9.463110,-8.149998,6.759118,-5.112016,2.584464,8.951262,-0.057015,-9.178790,-8.727455,-2.035642,2.257417,-8.945846,-2.328901,-1.285458,-6.951619,0.719639,-4.516366,2.190714,-3.027085,7.705033,-4.927485,-4.921991,2.312190,9.093238,-9.067018,-0.655412,9.752214,2.675524,-1.277881,2.462743,6.208679,6.389232,-1.290227,9.963591,-1.850606,-7.282493,-7.989405,0.058165,-9.008354,2.886520,-9.756983,-6.270714,-5.781368,1.670960,9.875501,-9.998311,-3.151387,-9.290092,-3.191708,5.105293,-0.659966,3.365023,-6.752137,5.975561,0.180769,7.738326,-6.549390,8.176724,-0.652125,4.786882,3.338566,-8.909267,6.331283,-6.018811,2.016384,1.804368,5.663052,-8.988708,0.893829,-3.331810,-7.309180,9.804655,9.764284,3.541992,0.028206,-2.216753,-7.518895,-2.327443,8.738175,8.608604,-0.248519,2.433093,4.479842,2.744137,1.940883,2.209213,-8.103558,-6.330721,1.261007,9.763585,-1.059101,3.781667,-6.036886,3.851984,-5.956093,-4.706713,3.280387,2.100591,4.290821,3.347791,-1.233870,-9.664121,1.140474,0.537856,6.124608,-1.251588,-2.578875,-7.212710,0.292482,-3.869694,0.277966,5.090888,-0.161424,0.390552,1.640255,-6.553837,-6.735167,-4.325476,3.969386,-1.111567,-5.459162,7.571667,7.829168,-2.045033,5.378995,-4.682817,0.865780,9.672375,-1.889282,-1.307516,7.243432,-9.991172,4.561905,-0.320727,-9.942974,8.038263,0.988452,4.080111,1.626358,5.129367,-9.470660,6.763388,0.799452,-9.111887,7.498834,-2.222815,1.003960,-6.465689,9.841236,-7.082816,-9.675568,0.579047,-5.549424,-8.432142,-6.721262,-2.380135,9.950140,-3.834793,-9.125213,1.406223,7.006558,-2.100135,-5.372568,-1.728723,0.630929,5.535556,-9.529576,9.391144,9.323269,-3.008503,-4.047050,-5.797010,-1.820114,-5.894734,7.964664,5.518465,0.471372,-9.948898,-7.418557,-7.668605,8.536032,5.484630,-2.874346,-8.472761,-1.722263,9.256444,9.709431,7.793199,-2.811243,-2.342529,7.241607,8.501293,3.835867,-2.710022,-3.598693,-5.510040,-7.417066,4.515717,-2.281913,-4.814787,7.051926,3.970131,5.592011,-4.935325,7.130384,-3.917243,-3.043162,0.562793,8.905082,-3.006984,-6.293040,8.820604,-8.098615,1.562726,-8.577089,-5.807741,5.693551,-6.136973,-9.654308,7.115853,9.451405,-9.743009,7.449232,8.107827,5.065169,-1.583370,-8.246764,-1.085037,-7.453296,-9.937484,1.381683,-5.591188,-7.851532,3.975246,-4.922178,-9.826850,-8.397828,5.754733,7.341430,-6.553151,-1.480107,-2.630309,-7.243739,-4.882104,5.173864,3.211902,7.421560,0.102794,-3.128757,-5.222019,2.936766,-4.699682,9.969200,9.812129,6.845716,1.139013,-6.926329,-3.476375,-5.685370,-4.653896,8.515981,-6.108417,8.955359,2.513491,-5.884297,-4.266841,-9.322593,-9.428488,5.285278,-3.826217,4.617620,-3.525715,-7.406700], dtype = "float64")#candidate|6784|(364,)|const|float64
call_6783 = func_3362_call(relay.reshape(const_6784.astype('float64'), [4, 7, 13]))
call_6785 = func_3362_call(relay.reshape(const_6784.astype('float64'), [4, 7, 13]))
func_3804_call = mod.get_global_var('func_3804')
func_3808_call = mutated_mod.get_global_var('func_3808')
const_6794 = relay.const(-6.461466, dtype = "float64")#candidate|6794|()|const|float64
var_6795 = relay.var("var_6795", dtype = "float64", shape = (15,))#candidate|6795|(15,)|var|float64
call_6793 = relay.TupleGetItem(func_3804_call(relay.reshape(const_6794.astype('float64'), []), relay.reshape(var_6795.astype('float64'), [1, 15, 1]), ), 0)
call_6796 = relay.TupleGetItem(func_3808_call(relay.reshape(const_6794.astype('float64'), []), relay.reshape(var_6795.astype('float64'), [1, 15, 1]), ), 0)
output = relay.Tuple([call_6778,call_6783,const_6784,call_6793,const_6794,var_6795,])
output2 = relay.Tuple([call_6779,call_6785,const_6784,call_6796,const_6794,var_6795,])
func_6799 = relay.Function([var_6795,], output)
mod['func_6799'] = func_6799
mod = relay.transform.InferType()(mod)
mutated_mod['func_6799'] = func_6799
mutated_mod = relay.transform.InferType()(mutated_mod)
var_6800 = relay.var("var_6800", dtype = "float64", shape = (15,))#candidate|6800|(15,)|var|float64
func_6799_call = mutated_mod.get_global_var('func_6799')
call_6801 = func_6799_call(var_6800)
output = call_6801
func_6802 = relay.Function([var_6800], output)
mutated_mod['func_6802'] = func_6802
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6270_call = mod.get_global_var('func_6270')
func_6271_call = mutated_mod.get_global_var('func_6271')
call_6811 = func_6270_call()
call_6812 = func_6270_call()
const_6818 = relay.const([[[6.310551,7.021386,-8.638552,-9.725735,-9.922124,-0.614712,3.813822,0.675632,-9.104435,-1.998541,-7.290654,6.073631],[5.453162,-2.712062,9.978864,6.066811,7.424247,-6.419815,-8.562607,2.916469,8.414618,4.080490,5.652190,-5.177581],[9.276111,-9.466519,-4.419799,-8.693370,-5.516652,-7.352060,2.164348,5.663568,-6.569859,-0.848257,-7.592521,4.092000],[0.833006,4.885458,-5.614965,-6.038203,-2.249718,6.475707,4.143282,3.326997,-0.742611,4.931213,8.066957,-3.789847],[-2.456289,-0.898972,5.440689,-1.996091,1.054930,0.920970,8.936427,1.171873,-2.009272,-1.405828,-6.805447,-8.856021],[-1.260963,-9.767219,-3.139447,7.126822,8.349828,2.904669,-6.451240,-0.562582,7.743480,5.481574,5.549049,5.629960],[6.683304,0.516043,5.103814,8.726272,3.934055,7.262597,-8.278031,-5.903094,-7.179985,-6.173056,-3.285314,-6.449835],[-4.377451,-7.116393,-9.172654,-8.207223,-7.902170,-7.128925,5.797635,2.990712,4.633911,-5.035525,0.117968,-3.992138],[-8.574859,-1.394405,8.155813,2.190901,-8.854693,1.697006,0.572312,5.301478,-6.998868,5.360935,9.068872,-7.230869],[5.044009,-0.348094,-8.466544,-7.897225,-6.799239,1.614985,-4.721322,8.882916,-5.923104,3.324142,-0.454672,9.690066],[-7.876507,-5.195834,6.267241,3.322372,9.479339,-5.884847,-3.914327,7.130272,1.480283,-5.318665,3.452888,7.971178],[-2.161149,9.632425,0.184636,5.479918,2.876078,1.622736,4.552637,6.764814,-8.268314,-6.130214,-0.956142,0.915762]],[[-7.366709,7.424604,-9.662054,4.827934,-5.215212,7.230442,-6.538432,9.573896,7.233821,-1.380481,9.687463,5.797833],[8.151455,-8.001321,1.648807,-0.961545,8.777979,0.823728,-7.920972,9.999212,1.985834,-0.512261,7.894363,3.632322],[-5.024675,2.222522,1.983457,8.800820,-6.693727,7.966736,-7.748124,1.729947,6.850013,6.583988,-3.724319,-4.077597],[9.549984,0.223624,6.513840,0.474966,-8.673126,2.010349,-7.138435,7.151066,7.102272,-8.711712,-2.292692,3.767920],[9.974579,2.627414,2.335705,6.145622,-7.649720,-3.977941,-1.128620,4.292400,-7.271867,-4.855367,8.693348,-9.790493],[-3.993655,-6.627378,-3.567303,0.298254,-5.943698,1.674871,-9.668096,3.740776,6.714647,-6.887755,7.229811,7.069512],[0.657894,-5.651279,7.810301,3.914923,-3.853541,-7.761258,8.291520,-9.898199,-8.714889,-0.783239,-8.011783,5.430376],[3.365641,3.928359,5.123414,-5.044164,3.722190,8.211721,3.974386,-2.143656,1.464738,2.325346,-6.300563,-2.241571],[1.635519,-7.829846,-6.410909,-8.745558,5.397570,8.481178,-5.997409,2.660080,-8.641559,-8.987975,0.135051,1.947445],[3.805115,-4.321151,-7.111577,-3.809207,5.735494,-1.775815,-5.886647,7.910250,-2.432780,-1.694269,-0.568884,-7.189327],[-1.754405,1.678773,-3.268110,-5.614307,2.484459,0.031221,-3.601572,4.475219,-6.042039,1.313244,-2.729814,1.589198],[8.744373,8.209045,6.592555,7.964776,-1.484011,-1.479446,9.588264,-1.895346,7.223098,0.381006,6.239982,9.946261]],[[-5.204811,-8.278480,6.821313,8.452540,6.374643,-1.771790,7.964992,6.604120,-4.734981,-1.781372,-4.691482,-7.382112],[-8.986246,2.619963,8.196073,-1.048216,-7.238393,-8.193080,-3.235550,-7.340809,9.337511,-8.794757,-0.119071,-9.898701],[5.161099,7.887258,-6.482795,1.133463,7.442467,-3.962772,1.100613,-8.603419,-5.545892,0.825777,-9.447008,-2.756238],[0.712552,-9.568577,-8.992739,-0.001772,6.754984,-5.643176,-6.459096,0.888804,-0.216627,-1.390675,-2.479969,1.235839],[5.638091,3.771750,0.853526,6.018341,-0.928098,-5.117430,0.377204,8.191285,-3.117534,-8.074736,2.211845,-3.124245],[9.953961,-9.444837,4.913291,-2.019746,-2.748661,3.861208,-5.560617,-2.736146,-7.793725,9.270759,-0.591013,5.631268],[-3.648080,9.177719,3.489439,-6.791475,-7.558397,-0.839463,-5.709079,-2.573028,-1.496856,-7.179379,5.386490,0.619146],[-3.072910,3.077576,4.771708,2.742954,-0.266671,-2.384818,7.742442,-7.955562,9.056220,5.358327,-1.272339,-2.940734],[4.536327,7.776036,-8.568249,3.731959,0.370151,4.585575,3.707052,9.000954,6.664873,7.981384,-2.089368,-9.520832],[-8.360015,7.992018,7.490096,4.227168,9.378666,9.418777,8.058711,-9.952928,1.705252,-2.024213,-5.170522,-9.061673],[6.107854,-3.264678,-0.373443,8.620426,6.106081,6.460590,-9.325969,5.863309,6.063923,7.022963,1.240925,7.172167],[6.296318,8.280808,5.597584,2.790932,2.756658,-5.342142,-4.739418,-1.651564,8.093181,9.895221,-6.869159,1.376242]],[[3.538695,4.954190,-2.284997,-3.807898,-1.386796,5.065044,3.859778,-5.445490,8.466743,-8.788242,-6.030564,0.580125],[-1.453215,9.826139,1.338243,-3.111044,-8.187918,-2.041521,5.519231,-0.806220,-6.015190,5.461070,8.999715,6.318465],[5.539417,-0.925586,-5.066118,6.435669,-5.358794,-1.598338,1.778153,8.776446,-1.382114,-8.947456,-5.256613,0.127240],[-3.150392,-8.810990,-9.487685,-1.087055,-7.466872,3.936512,-2.573777,0.896246,9.299633,9.745072,1.036390,-8.978666],[-4.582151,2.663325,-0.408489,3.000252,4.756303,-5.895251,0.306365,9.191246,0.968029,4.337944,8.339504,7.990916],[-7.868855,3.483760,3.885752,0.557463,-4.186878,-1.867146,4.985786,-0.207944,6.915086,-5.128805,9.259278,-9.785527],[-2.771761,4.970221,0.263238,-9.663467,0.142043,3.559715,-0.128655,-5.838955,7.472654,0.581474,-2.614818,8.159191],[-1.431108,0.061439,-9.806780,-3.156379,8.874964,-2.642132,-5.413780,-6.526403,3.482147,-0.879595,-1.476703,-4.342076],[9.465187,-7.062543,4.903810,-1.216099,0.293051,-5.508677,7.622935,-2.713348,-0.370248,7.752052,5.686556,-7.838351],[8.813605,-2.162524,4.857341,4.515776,-4.089405,-9.175024,-4.362305,5.649277,-7.803303,7.555996,4.977296,-9.141527],[-2.589611,-7.010130,4.956890,-1.948363,-9.553814,-6.864897,-4.543275,-9.400740,1.038617,-5.912931,7.334419,2.916873],[3.701838,-0.325502,-9.551061,-2.542533,-1.739689,7.322010,6.520331,5.049952,-3.010454,1.780912,5.805138,-7.739547]],[[6.943804,-4.939426,-9.252887,-9.990202,-8.427215,-0.343907,-9.882427,-6.357284,-4.547169,-9.798811,7.404727,6.405285],[-1.573509,-7.594730,-7.394321,-4.117134,-5.958512,1.086990,7.569879,-4.646449,-1.416397,-1.299929,-0.897972,1.809406],[-8.614900,-8.792162,8.795231,-7.070048,2.564408,-4.658373,6.613287,7.571371,0.122172,-0.885707,-3.872501,8.747163],[-5.985022,0.982715,-5.702139,8.662581,6.417663,-9.812509,4.677165,-6.122055,-1.588803,-0.575086,9.278148,2.503926],[-0.760598,7.273605,-4.712637,5.284992,1.767762,9.038879,-8.719718,-1.521615,1.539595,-0.446706,4.417239,5.064545],[3.512660,8.315574,3.987253,-5.745507,3.113366,-2.454427,-7.749588,-9.728283,3.544802,4.530581,-3.347955,5.775554],[-0.466779,-3.449947,-5.068093,8.270245,8.930337,-6.673426,4.612582,5.679327,0.259405,4.194110,6.475287,1.899646],[1.958663,-0.803378,-0.821959,0.111146,-9.773750,6.505278,1.598254,-9.275224,7.875806,6.875171,6.682985,8.076800],[8.260472,-4.810875,-4.975934,1.948567,-1.023906,1.237281,6.998367,-8.586807,-8.769200,-6.519160,-9.036739,7.060367],[4.568030,1.412120,4.519756,4.328319,6.087168,6.935793,9.655963,5.647676,3.341550,8.255431,-3.616234,-8.630275],[5.712725,-4.932428,7.108330,5.120259,3.807795,-5.622250,-3.990837,5.373181,9.182712,1.974359,6.402933,7.213387],[-4.400541,6.345259,-7.924004,7.917104,-4.659513,9.691665,4.709476,-9.432655,5.963772,5.492961,3.840041,7.010953]],[[-7.532703,0.118503,-7.319941,-7.630744,4.658219,7.353374,3.866598,6.361649,-6.568669,4.473936,-3.443747,-9.638060],[-5.935245,2.635940,-7.414250,7.273694,1.468099,-4.568226,9.640630,-4.466386,-7.888416,-8.635142,1.076631,9.518590],[-3.494960,3.341633,1.385277,7.938333,-2.345259,2.513563,9.224934,3.655332,4.528493,-9.632274,-0.909041,-5.129735],[-0.538121,-2.019000,-0.412117,-7.435248,-8.618282,6.075046,8.027880,-4.004390,4.727319,6.486975,-1.966644,-1.765670],[-9.102942,-4.080214,3.116272,-0.298242,4.647021,6.910695,-8.716430,-7.525641,-6.960961,-0.886592,-1.974028,8.204025],[-6.121528,5.840143,8.045629,5.707197,-7.478201,-2.240909,-3.795470,-7.184102,4.772043,5.562739,9.743249,-5.295403],[-3.217533,0.819497,0.938980,-2.463740,2.094583,-5.982170,3.568423,7.823863,3.644772,-4.727945,-9.449702,1.356351],[-7.962208,5.714862,0.647413,5.011630,2.099635,-5.797615,4.636998,-2.946985,-6.692478,5.912584,-0.421606,-7.516008],[-3.760683,8.107897,5.218022,-0.827187,-8.376812,0.728606,-6.961127,6.659276,5.730550,-3.805586,-6.145948,-1.314385],[-4.706798,6.789058,-0.943999,-4.093153,-7.853368,5.825752,3.984069,1.830275,3.647357,5.804093,-2.920410,1.052803],[-4.942127,-7.753457,3.343181,-2.805929,3.926489,-1.128063,9.513758,-7.657053,3.934401,6.873073,-3.590738,-9.754412],[6.773195,0.991118,-0.554989,4.656352,-9.829330,9.552245,-3.026736,3.499642,3.131356,8.026605,7.108589,-7.016203]]], dtype = "float32")#candidate|6818|(6, 12, 12)|const|float32
bop_6819 = relay.bitwise_or(call_6811.astype('int16'), relay.reshape(const_6818.astype('int16'), relay.shape_of(call_6811))) # shape=(6, 12, 12)
bop_6822 = relay.bitwise_or(call_6812.astype('int16'), relay.reshape(const_6818.astype('int16'), relay.shape_of(call_6812))) # shape=(6, 12, 12)
func_6704_call = mod.get_global_var('func_6704')
func_6706_call = mutated_mod.get_global_var('func_6706')
call_6827 = func_6704_call()
call_6828 = func_6704_call()
bop_6830 = relay.minimum(const_6818.astype('float32'), relay.reshape(bop_6819.astype('float32'), relay.shape_of(const_6818))) # shape=(6, 12, 12)
bop_6833 = relay.minimum(const_6818.astype('float32'), relay.reshape(bop_6822.astype('float32'), relay.shape_of(const_6818))) # shape=(6, 12, 12)
output = relay.Tuple([call_6827,bop_6830,])
output2 = relay.Tuple([call_6828,bop_6833,])
func_6844 = relay.Function([], output)
mod['func_6844'] = func_6844
mod = relay.transform.InferType()(mod)
output = func_6844()
func_6845 = relay.Function([], output)
mutated_mod['func_6845'] = func_6845
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6601_call = mod.get_global_var('func_6601')
func_6603_call = mutated_mod.get_global_var('func_6603')
call_6868 = relay.TupleGetItem(func_6601_call(), 0)
call_6869 = relay.TupleGetItem(func_6603_call(), 0)
func_6799_call = mod.get_global_var('func_6799')
func_6802_call = mutated_mod.get_global_var('func_6802')
const_6892 = relay.const([[3.452167],[1.282447],[-7.599443],[-3.031363],[1.236216],[-3.676483],[2.853753],[-9.320107],[6.566200],[7.726303],[7.874287],[1.337026],[-5.430059],[0.284809],[8.897090]], dtype = "float64")#candidate|6892|(15, 1)|const|float64
call_6891 = relay.TupleGetItem(func_6799_call(relay.reshape(const_6892.astype('float64'), [15,])), 2)
call_6893 = relay.TupleGetItem(func_6802_call(relay.reshape(const_6892.astype('float64'), [15,])), 2)
func_6580_call = mod.get_global_var('func_6580')
func_6585_call = mutated_mod.get_global_var('func_6585')
const_6896 = relay.const([[7.809660],[-5.366575],[1.518099],[5.113979],[4.809582],[-5.455490],[4.402366],[-4.145636],[9.905648],[-7.027042],[-9.116921],[0.672456],[0.151965],[-9.322326],[0.392389],[9.959034],[-0.566177],[-1.896751],[-8.252534],[-6.837746],[-2.687154],[-3.460863],[0.772937],[-5.872277],[-9.160401],[5.635064],[-1.971416],[8.792377],[3.483668],[8.113994],[-1.717603],[9.197975],[-9.576728],[-5.402695],[9.861216],[5.069189],[3.323922],[-6.338261],[-0.156997],[-5.318266],[2.534860],[8.841436],[-3.197127],[5.817743],[-8.391141],[-8.651078],[8.832018],[-4.582397],[5.024973],[-7.713805],[3.342917],[0.739833],[4.231490],[9.842586],[-9.082151],[-9.666943],[5.529959],[5.931034],[-5.203620],[-8.589299],[-2.615611],[-1.054307],[-0.153627],[9.303094],[1.681136],[8.180958],[3.285003],[-6.116855],[-2.300956],[-3.609385],[8.018936],[-6.313372],[1.800711],[-3.229245],[2.871917],[-8.130255],[7.741088],[7.037652],[5.384146],[-3.808674],[0.602178],[-3.952567],[-8.591175],[6.408829],[-3.327314],[0.432620],[4.728562],[1.190765],[8.051695],[-2.242070],[-6.047925],[-2.019521],[4.490098],[4.317347],[9.066011],[-6.279949],[1.899948],[7.405047],[6.719797],[-4.970087],[0.305637],[2.115169],[-1.334761],[6.885707],[-6.099184],[-4.965195],[-4.105546],[-7.809443],[-4.922135],[7.205727],[8.978701],[-4.984418],[-8.490396],[-3.779434],[3.527653],[0.949387],[-6.559621],[0.609975],[8.115821],[8.255588],[-0.710364],[-0.330378],[-5.582044],[1.620536],[9.087899],[-6.046407],[-6.007788],[9.050511],[2.351377],[-4.204191],[8.347862],[2.923080],[-2.135134],[-8.225326],[8.204899],[6.318293],[7.541109],[-3.918263],[-7.248035],[-2.412213],[-3.375319],[6.198511],[-1.573500],[1.268180],[-9.566883],[-3.168752],[-4.771416],[-5.152120],[-9.960758],[-5.367286],[-1.833834],[6.245401],[-9.291888],[5.335560],[0.506538],[-8.245520],[2.794658],[-1.490792],[-4.069695],[8.828175],[7.707883],[-2.453220],[5.076096],[-3.199293],[9.458892],[7.742347],[-4.561410],[8.666285],[-2.156611],[-9.783445],[8.836432],[-6.494865],[-7.916821],[-1.933901],[-2.461696],[4.766738],[8.194097],[1.367558],[-8.783057],[-8.593866],[4.426365],[0.324709],[-3.485576],[-8.234082],[-1.161959],[4.135950],[3.820579],[-6.372247],[-5.022757],[-8.915108],[-1.793960],[6.241218],[-1.099584],[-8.869330],[-7.482232],[-5.767501],[-6.389557],[-4.424014],[2.307053],[1.579729],[5.881012],[0.720695],[-7.726164],[-9.280412],[-7.062710],[-9.047377],[-1.564653],[-3.134666],[-7.625759],[-8.005080],[0.049217],[-1.806607],[-7.143220],[-5.629584],[1.138749],[7.496109],[-9.561854],[2.323489],[-1.318957],[-5.413486],[3.618092],[6.977398],[-2.796322],[-1.165503],[-4.855469],[6.308267],[6.245200],[0.422764],[-7.688892],[4.423559],[-8.377958],[-8.326804],[9.946876],[8.705020],[7.761625],[-4.102001],[-4.295170],[8.487223],[1.782999],[-5.990391],[-3.399967],[4.467239],[2.372848],[1.770152],[0.198517],[-4.930994],[-4.498128],[-2.822593],[-8.275126],[3.426518],[0.732427],[-2.805393],[-6.674910],[-8.640662],[5.659756],[0.242873],[1.454097],[-1.050302],[-1.633408],[-8.886538],[-6.543576],[9.136637],[-3.820200],[5.044333],[2.668495],[-3.357873],[-0.949265],[3.732145],[-1.725555],[1.602533],[-4.051147],[2.103477],[0.506927],[-1.986581],[-9.712466],[8.260665],[5.931183],[5.807475],[2.171080],[2.520514],[1.497405],[8.023773],[-2.872031],[-4.728651],[2.436025],[3.346700],[4.056751],[8.352316],[-3.671814],[-9.480005],[-9.576291],[3.540552],[-1.185750],[7.599162],[4.476894],[-5.484192],[7.559848],[9.281538],[-9.118590],[-3.268212],[3.681535],[1.007592],[6.189903],[9.712193],[3.732679],[-6.159116],[-0.006088],[2.962078],[-0.973670],[-5.621451],[0.836540],[-3.141892],[-4.448745],[1.027134],[-0.183739],[-8.476734],[9.911613],[-2.013976],[-5.150398],[-6.790057],[3.018084],[-6.474635],[-4.569912],[-4.270093],[-5.679914],[7.859556],[1.628420],[-9.254208],[9.873093],[6.770359],[-2.721286],[7.344663],[2.798704],[-7.055045],[5.257694],[1.119707],[0.423014],[-7.725536],[-0.054962],[-7.711920],[7.369404],[-7.209140],[9.166344],[0.225895],[-9.497172],[-7.503710],[-3.541194],[-9.725033],[0.268776],[-4.940177],[8.001210],[7.597157],[9.735286],[6.990764],[-2.748525],[-3.159680],[1.436656],[3.060061],[-7.098016],[5.801493],[5.909607],[3.035492],[2.355172],[6.114312],[-9.571882],[4.147170],[-1.966790],[-4.246678],[0.321354],[2.272954],[1.633085],[3.825588],[-4.147355],[9.191813],[4.283473],[-7.306004],[4.135504],[6.710481],[5.654182],[8.382711],[-3.899891],[-0.666570],[-5.952973],[-9.764489],[-4.940906],[9.263509],[6.206530],[-8.082388],[7.213053],[-9.910850],[-4.381896],[2.513257],[-8.372893],[-0.585564],[-8.365845],[0.978129],[-2.595437],[0.768243],[-1.754726],[-8.330571],[0.430647],[-0.279871],[0.120237],[-4.877313],[3.973042],[1.877652],[2.719268],[9.738528],[0.656396],[-7.070678],[4.220677],[-0.433606],[8.985227],[-7.908194],[2.382105],[-0.863093],[5.943524],[-6.177222],[1.187049],[9.334152],[2.113101],[-6.830312],[-0.659546],[2.773132],[4.682840],[5.302494],[4.628628],[-0.301477],[8.995928],[4.147000],[-6.432658],[1.106162],[-8.457310],[-3.743851],[-8.944570],[-4.413378],[-5.222685],[8.675924],[-0.175560],[9.370795],[-0.231786],[8.289096],[-2.021192],[-7.272366],[-4.980742],[8.339836],[2.398460],[-7.610651],[-4.577710],[7.592364],[6.227292],[-8.237658],[-6.491535],[-4.606802],[-3.195061],[-3.328259],[-3.343089],[3.316231],[4.885141],[-0.787624],[5.175816],[-1.393734],[-8.646991],[-0.594128],[1.721036],[5.208024],[-3.316414],[0.221882],[3.369654],[4.264918],[3.415440],[-2.708531],[1.113540],[-8.072012],[7.305494],[6.369486],[-8.540097],[7.946218],[-2.602428],[6.706118],[8.038428],[-2.629693],[4.991938],[-1.554682],[5.652656],[-2.383860],[1.463818],[-8.113086],[-5.438162],[-2.562870],[3.111627],[-1.554960],[9.823243],[-9.583936],[-8.247880],[-4.956088],[1.952504],[8.698021],[-0.034361],[4.440206],[8.359357],[-2.674081],[0.776103],[-3.644922],[6.599444],[4.860480],[-4.555037],[8.762372],[-6.852045],[2.780603],[1.855049],[-9.739180],[8.931279],[9.182351],[-1.580064],[6.209845],[4.914642],[-2.042727],[2.455493],[-9.736161],[7.493057],[7.586224],[-3.010500],[-3.581555],[8.189402],[8.764506],[4.618596],[9.675431],[7.325519],[-2.956194],[1.883660],[8.434298],[0.186638],[7.912283],[-4.924837],[6.692600],[-0.351860],[3.499665],[1.352390],[5.108406],[-7.248659],[-4.347223],[-4.338176],[-4.904963],[-1.910782],[1.437430],[-8.664238],[-4.468081],[9.718683],[-5.244709],[-4.443618],[8.708172],[9.948774],[9.591036],[-9.625563],[8.686899],[3.979394],[-0.774358],[1.646749],[4.841802],[6.159445],[2.572236],[0.271992],[8.612665],[-4.843473],[3.541380],[-6.425420],[2.047036],[8.724073],[-0.001919],[1.677994],[-0.997814],[9.075583],[-6.789333],[7.305842],[7.039734],[6.573966],[1.978414],[-4.263083],[4.065099],[-0.373115],[9.207503],[8.176861],[-3.163046],[9.286932],[1.706377],[-7.223223],[8.440724],[-8.636413],[-0.648262],[7.622427],[4.806397],[6.962797],[-4.213395],[6.567288],[-9.388716],[-1.892282],[-2.957669],[-3.171080],[-3.348540],[-4.014527],[-9.184161],[-9.575606],[-5.860223],[6.487976],[-9.320021],[-9.376012],[6.027100],[-5.477438],[-2.921221],[5.639355],[-7.519595],[-8.674022],[-9.637000],[4.327660],[2.388082],[-7.883215],[8.673586],[7.681389],[9.352126],[-6.800166],[-5.854454],[9.491170],[-1.177883],[4.613449],[-0.181205],[3.955674],[-5.394811],[6.141053],[-6.408429],[3.326773],[-8.564795],[7.620102],[-2.533841],[-0.472843],[-4.241587],[-7.052108],[6.192184],[-9.677362],[9.369747],[-5.047299],[9.214768],[-8.127205],[-0.725857],[-7.470538],[9.970483],[-1.693801],[1.932630],[4.855531],[-3.376859],[3.248068],[-7.894540],[2.443351],[-9.467406],[-7.390821],[3.434580],[9.423551],[-5.985077],[-3.843906],[1.439074],[-5.865155],[9.031680],[6.849467],[-7.835904],[-2.903892],[-7.612615],[2.425700],[4.765847],[-6.051833],[1.021564],[-9.285083],[-7.069545]], dtype = "float64")#candidate|6896|(672, 1)|const|float64
const_6897 = relay.const(3, dtype = "int32")#candidate|6897|()|const|int32
var_6898 = relay.var("var_6898", dtype = "float32", shape = (169,))#candidate|6898|(169,)|var|float32
call_6895 = relay.TupleGetItem(func_6580_call(relay.reshape(const_6896.astype('float64'), [4, 168]), relay.reshape(const_6897.astype('int32'), []), relay.reshape(var_6898.astype('float32'), [169,]), ), 1)
call_6899 = relay.TupleGetItem(func_6585_call(relay.reshape(const_6896.astype('float64'), [4, 168]), relay.reshape(const_6897.astype('int32'), []), relay.reshape(var_6898.astype('float32'), [169,]), ), 1)
output = relay.Tuple([call_6868,call_6891,const_6892,call_6895,const_6896,const_6897,var_6898,])
output2 = relay.Tuple([call_6869,call_6893,const_6892,call_6899,const_6896,const_6897,var_6898,])
func_6904 = relay.Function([var_6898,], output)
mod['func_6904'] = func_6904
mod = relay.transform.InferType()(mod)
var_6905 = relay.var("var_6905", dtype = "float32", shape = (169,))#candidate|6905|(169,)|var|float32
output = func_6904(var_6905)
func_6906 = relay.Function([var_6905], output)
mutated_mod['func_6906'] = func_6906
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6211_call = mod.get_global_var('func_6211')
func_6212_call = mutated_mod.get_global_var('func_6212')
call_6984 = relay.TupleGetItem(func_6211_call(), 1)
call_6985 = relay.TupleGetItem(func_6212_call(), 1)
func_6211_call = mod.get_global_var('func_6211')
func_6212_call = mutated_mod.get_global_var('func_6212')
call_6988 = relay.TupleGetItem(func_6211_call(), 1)
call_6989 = relay.TupleGetItem(func_6212_call(), 1)
bop_6993 = relay.minimum(call_6984.astype('int64'), relay.reshape(call_6988.astype('int64'), relay.shape_of(call_6984))) # shape=(27, 1)
bop_6996 = relay.minimum(call_6985.astype('int64'), relay.reshape(call_6989.astype('int64'), relay.shape_of(call_6985))) # shape=(27, 1)
uop_7001 = relay.rsqrt(call_6988.astype('float32')) # shape=(27, 1)
uop_7003 = relay.rsqrt(call_6989.astype('float32')) # shape=(27, 1)
var_7010 = relay.var("var_7010", dtype = "float32", shape = (27, 13))#candidate|7010|(27, 13)|var|float32
bop_7011 = relay.subtract(uop_7001.astype('int32'), var_7010.astype('int32')) # shape=(27, 13)
bop_7014 = relay.subtract(uop_7003.astype('int32'), var_7010.astype('int32')) # shape=(27, 13)
output = relay.Tuple([bop_6993,bop_7011,])
output2 = relay.Tuple([bop_6996,bop_7014,])
func_7021 = relay.Function([var_7010,], output)
mod['func_7021'] = func_7021
mod = relay.transform.InferType()(mod)
mutated_mod['func_7021'] = func_7021
mutated_mod = relay.transform.InferType()(mutated_mod)
var_7022 = relay.var("var_7022", dtype = "float32", shape = (27, 13))#candidate|7022|(27, 13)|var|float32
func_7021_call = mutated_mod.get_global_var('func_7021')
call_7023 = func_7021_call(var_7022)
output = call_7023
func_7024 = relay.Function([var_7022], output)
mutated_mod['func_7024'] = func_7024
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6336_call = mod.get_global_var('func_6336')
func_6337_call = mutated_mod.get_global_var('func_6337')
call_7053 = relay.TupleGetItem(func_6336_call(), 0)
call_7054 = relay.TupleGetItem(func_6337_call(), 0)
uop_7056 = relay.atanh(call_7053.astype('float32')) # shape=(6, 12, 12)
uop_7058 = relay.atanh(call_7054.astype('float32')) # shape=(6, 12, 12)
func_6772_call = mod.get_global_var('func_6772')
func_6774_call = mutated_mod.get_global_var('func_6774')
call_7059 = func_6772_call()
call_7060 = func_6772_call()
func_1823_call = mod.get_global_var('func_1823')
func_1825_call = mutated_mod.get_global_var('func_1825')
var_7064 = relay.var("var_7064", dtype = "uint64", shape = (420,))#candidate|7064|(420,)|var|uint64
call_7063 = func_1823_call(relay.reshape(var_7064.astype('uint64'), [7, 6, 10]))
call_7065 = func_1823_call(relay.reshape(var_7064.astype('uint64'), [7, 6, 10]))
uop_7078 = relay.tan(call_7053.astype('float32')) # shape=(6, 12, 12)
uop_7080 = relay.tan(call_7054.astype('float32')) # shape=(6, 12, 12)
func_6844_call = mod.get_global_var('func_6844')
func_6845_call = mutated_mod.get_global_var('func_6845')
call_7081 = relay.TupleGetItem(func_6844_call(), 0)
call_7082 = relay.TupleGetItem(func_6845_call(), 0)
output = relay.Tuple([uop_7056,call_7059,call_7063,var_7064,uop_7078,call_7081,])
output2 = relay.Tuple([uop_7058,call_7060,call_7065,var_7064,uop_7080,call_7082,])
func_7090 = relay.Function([var_7064,], output)
mod['func_7090'] = func_7090
mod = relay.transform.InferType()(mod)
mutated_mod['func_7090'] = func_7090
mutated_mod = relay.transform.InferType()(mutated_mod)
var_7091 = relay.var("var_7091", dtype = "uint64", shape = (420,))#candidate|7091|(420,)|var|uint64
func_7090_call = mutated_mod.get_global_var('func_7090')
call_7092 = func_7090_call(var_7091)
output = call_7092
func_7093 = relay.Function([var_7091], output)
mutated_mod['func_7093'] = func_7093
mutated_mod = relay.transform.InferType()(mutated_mod)
var_7154 = relay.var("var_7154", dtype = "float32", shape = (15, 3, 4))#candidate|7154|(15, 3, 4)|var|float32
uop_7155 = relay.exp(var_7154.astype('float32')) # shape=(15, 3, 4)
func_7090_call = mod.get_global_var('func_7090')
func_7093_call = mutated_mod.get_global_var('func_7093')
const_7161 = relay.const([[-10,-9,-8,3,-3,5,3,-8,10,10,-9,-7,2,-3,-7,1,7,2,-8,9,3,1,-9,-10,4,-10,-1,-2,-4,1,10,-1,-9,4,-9,9,6,-5,3,-3,-7,10,10,10,6,7,3,-7,-2,-2,-4,2,4,-5,5,4,1,-2,5,-4,5,-1,1,3,-6,6,-7,-2,-8,-8,4,-8,7,5,2,-2,-1,5,10,-5,2,-8,2,2,8,-6,3,9,-4,1,-4,-4,8,6,7,4,-5,-8,2,-8,1,5,7,-1,6,6,-7,-6,-10,-10,-6,-6,-7,-9,-4,1,10,-9,-10,8,4,-8,4,3,4,1,-10,-2,-1,7,-5,-1,6,2,10,-2,3,5,-1,1,4,7,9,10,-8,5,9,10,6,1,-1,-10,2,4,-4,1,9,1,-9,7,-1,-3,-8,6,-7,10,8,4,7,-3,5,10,-4,-3,1,-10,-4,-3,-8,-8,3,-2,-2,-3,6,-2,2,6,-1,10,-3,-6,-5,-1,7,-7,1,-3,8,2,6,7,-5,5,-4,-2,7,-3,-7,5,-6,-6,2,10,7,-5,9,2,-5,-2,4,-5,1,3,-2,6,1,-7,-3,-4,-2,-5,1,4,4,4,-9,-7,4,-2,10,-8,-10,-5,-3,-3,-10,-5,4,6,5,-6,-6,7,-4,-10,-7,-5,-3,-7,-1,-3,-7,-1,-10,-10,4,9,8,-4,7,7,10,8,-4,2,-5,6,5,-6,-4,-10,-10,-10,7,3,8,5,-3,3,-9,-3,-2,-10,-8,-10,1,-3,-8,-1,7,-8,-3,-4,7,-4,-4,1,-9,3,-7,2,-4,1,7,9,-8,-10,-10,-9,-2,3,1,-4,-5,10,1,-2,-4,-6,-6,5,-2,7,9,-8,9,1,-5,4,1,4,5,-6,8,10,-9,-8,-1,-2,10,-5,9,-1,-10,-6,9,2,3,-3,-2,-5,-9,3,-5,-4,4,6,-3,10,3,4,-6,-6,-6,10,-3,8,-7,5,5,8,7,5,-10,5,2,5,-8,7,-1,10,1,7,-1,1,-10,-5,3,-8,6,-6,5,-6,-2,6,9,7,-6,-9,7,-2,9,5,-1,4,-8,-8,10,7]], dtype = "uint64")#candidate|7161|(1, 420)|const|uint64
call_7160 = relay.TupleGetItem(func_7090_call(relay.reshape(const_7161.astype('uint64'), [420,])), 4)
call_7162 = relay.TupleGetItem(func_7093_call(relay.reshape(const_7161.astype('uint64'), [420,])), 4)
func_2170_call = mod.get_global_var('func_2170')
func_2174_call = mutated_mod.get_global_var('func_2174')
const_7166 = relay.const([3.115526,8.473348,-4.659562,0.993968,5.006182,-8.635324,9.563800,4.863367,9.910848,-2.824694,8.346618,8.482104,1.617814,-2.787798,-6.256333,-7.527167,2.750866,1.087527,7.305548,2.624376,1.564657,7.758199,8.443956,0.668622,-5.986534,-3.685952,0.196998,-2.912583,-8.360725,8.873161,-0.941457,-1.844012,1.814354,9.946246,-9.108251,1.264974,-8.862705,-9.722454,-4.997592,3.906013,1.748519,-6.377391,1.622304,-5.708515,-7.657098,-1.736915,9.422228,-0.568540,-4.018483,0.228887,-8.130204,-5.166622,-1.541239,-8.303043,3.998393,6.024064,-3.103549,0.141079,4.584388,5.110166,8.462026,-6.100497,-0.656869,-3.676257,1.617962,0.590875,-1.861624,-1.275321,-3.988374,7.159271,-3.793920,-9.740657,6.366422,-8.330703,9.565748,-4.607014,-5.304794,-9.520837,0.673407,4.989098,-8.553800,-9.015670,6.420117,4.764768,1.856076,9.836144,-2.476519,-8.809448,2.955562,-5.192042,-0.769615,3.323561,5.516782,4.744430,-1.409083,5.112392,0.630751,-9.251336,6.852203,-7.613310,-3.440402,-5.432618,-1.447307,-8.242842,-8.498387,-9.607065,2.047308,8.803746,8.343488,8.484264,1.723982,2.957244,-5.415336,1.142137,5.479982,9.252573,2.093951,-3.242284,-0.129287,3.372013,9.646006,-6.025266,-3.195607,-4.286486,-3.405423,5.413498,-3.052781,1.595569,-1.266858,-9.131889,-4.195789,-8.841672,-4.487913,5.251090,4.742430,8.619410,6.513835,-0.870593,1.290514,9.166884,-9.425405,3.573461,9.436061,-7.529242,-1.802532,-2.992943,-7.318338,-0.024491,0.993705,4.861186,4.360669,-2.200359,-2.577842,-9.665279,6.979546,-9.817721,-4.420180,-7.426532,-7.997868,-1.249899,-1.573967,5.297402,0.180038,5.160861,-4.427508,8.628061,8.781338,-0.158913,-8.534340,8.050922,-1.849367,-8.955688,1.446403,0.112214,3.349510,-1.005591,-8.267930,-1.285441,-6.612114,-0.821546,-3.143396,-0.951954,0.189547,-1.195718,4.923938,6.123845,2.188305,-8.735695,8.000978,-9.920545,9.966306,-7.275957,-1.049256,9.804097,-5.143324,5.569926,-6.263541,-6.186513,-0.799532,7.215900,-3.318437,-5.135196,-1.454279,-7.730565,-7.293694,-3.265106,-6.545969,2.253410,3.201410,7.250443,-4.340840,5.758126,-6.375007,8.202929,-5.416660,-9.086585,9.606013,-0.632943,2.641935,3.206187,2.139038,-3.487219,-3.877605,-6.649967,-3.468791,2.966638,7.985912,1.992185,-3.365615,-8.893746,-9.587470,4.888554,8.728261,3.283882,8.786642,-1.076234,6.444092,-3.174012,-4.844713,9.857523,-7.451873,-7.770071,3.388493,1.615704,-8.176572,-5.292970,-4.568336,-6.225235,8.632216,-3.262344,1.950796,4.985332,1.703410,-5.352293,1.217586,3.699810,2.777557,6.702960,5.356271,-7.811928,-1.012532,-0.097211,9.253987,8.887404,1.078213,6.808058,-4.620753,5.236844,-1.811553,-4.478431,7.207945,7.936547,1.413474,-2.747446,9.505070,-4.369532,7.412108,-6.221258,4.197734,-7.821130,8.541196,0.845841,-3.460356,-9.929029,1.143583,-3.864180,-4.377436,6.081216,-9.424055,-0.155342,-4.549203,-9.815920,-3.902376,-7.669152,-6.111412,-4.946146,-6.459307,0.053399,-0.184532,3.756268,-6.083972,-0.248375,8.793055,-6.940176,8.049373,2.930399,4.556835,-3.190919,-2.397250,-0.876738,0.444612,2.505939,-3.127151,-4.986442,-6.778571,-3.686529,-5.080735,0.062509,-9.131449,0.059618,-7.417859,-1.777269,-0.592963,0.617303,5.364801,1.000082,-0.467375,7.357008,-9.461896,0.384215,6.413868,4.426047,4.435085,-8.772348,7.149558,9.825347,-8.401729,2.664715,-5.913160,-1.135631,-2.013849,-3.594968,-8.454511,-7.616959,-8.688429,4.932058,9.764331,9.533593,2.687246,7.975762,6.834264,-7.518742,-9.816598,9.832847,2.534178,-9.017371,3.375014,-1.445097,-3.683425,-2.020921,7.098573,7.393738,5.366869,0.698176,-9.430121,4.921739,4.522850,6.313815,7.657276,9.887379,-0.317594,9.765905,-3.171905,6.120329,-1.998614,2.215237,8.750402,-3.047277,0.877367,0.017242,-9.304808,-8.354216,8.121434,6.255689,-6.260750,1.470645,2.758079,-3.147299,-9.812267,-4.460578,-7.036612,-2.153139,-2.712855,-7.307378,-0.987069,5.017361,-5.423370,4.073841,-4.078548,-9.523006,9.935814,6.147974,-4.239527,-1.246557,-7.003680,8.669325,6.827423,-8.171577,7.280660,8.211659,2.083150,-6.251730,-4.531572,5.168411,4.953603,7.213752,8.127156,9.664221,1.480745,-7.078009,-5.778902,-7.379712,-6.611222,-9.441291,1.405616,6.297901,-1.423011,-9.478375,1.529588,9.347384,9.797152,3.448825,-5.390751,7.166859,7.227636,7.139819,8.792386,7.538155,-4.590990,6.956122,9.642680,-0.505479,4.660938,1.631993,-5.450533,2.189774,6.196332,-1.424562,4.659463,0.480376,-6.247083,-2.347674,-7.759998,2.586648,7.421262,-5.044207,1.047969,9.212993,9.622697,-6.944058,6.164113,-5.611453,-8.827239,-8.595246,-1.371923,-6.956315,-8.873488,-7.922241,-8.971267,-9.919859,4.313136,0.249052,7.247162,3.266223,4.741127,4.218189,8.071904,5.511246,-5.100021,5.097677,-4.733123,6.657609,-0.879375,1.884100,8.901431,4.590460,1.554900,-5.527647,1.748162,0.674468,5.828850,8.163159,-9.796748,-4.326349,9.890757,5.973673,-1.739629,-4.669368,1.597991,7.577581,8.205811,7.055466,1.495115,-1.685444,6.233138,7.585586,-2.231562,6.504025,-3.157651,7.412598,9.216732,1.087328,-5.667884,-5.080606,7.454522,-5.711687,-3.305286,1.737813,2.665909,-9.672550,-6.519919,0.673337,2.577257,1.499225,9.139089,4.949139,-0.614017,-7.602400,-7.456800,-6.114991,-1.742903,3.904282,-2.587992,7.928344,-8.734555,-0.586525,9.572412,5.648738,-7.290908,-2.482123,2.530301,-0.696481,-0.130329,-5.479618,4.718647,9.262243,-4.888371,9.081238,8.022910,-9.104371,-4.627082,-4.322124,1.037942,-1.549164,7.170726,4.876382,-0.990727,-4.141849,-7.371455,-7.409168,2.468345,2.769689,-7.649969,-2.962560,8.614426,4.182623,6.041377,-1.728255,7.651614,-2.962506,6.145227,0.926224,7.785432,6.810132,4.260330,9.799864,4.024578,-3.666547,3.434978,7.416502,3.067599,3.933448,5.409677,3.919695,-3.245192,1.780754,7.826238,-7.318921,-1.628505,-2.768390,8.150939,-6.637530,5.553527,-4.161949,8.429802,6.220518,-4.919896,5.010463,-5.616282,-0.234292,-9.207489,6.264142,-2.190567,-6.974266,8.424368,-7.439430,-0.834608,8.162235,2.821005,9.247949,0.111097,-9.459913,1.867413,9.588317,-5.687390,-8.347910,9.152887,9.216869,4.791840,-2.925390,-5.958053,2.922810,6.097601,-7.482505,-4.812973,2.706545,6.948141,9.966556,5.613282,-8.250977,-4.769492,-5.635491,-4.501967,-8.981271,2.849956,-4.910441,2.028514,4.847611,-8.275903,-7.210243,4.251430,6.833714,0.148985,5.140053,0.527902,-5.301012,-7.495300,-4.784783,-0.577920,3.433459,2.555068,-0.190611,9.002482,-1.173041,7.865118,7.847650,-7.052543,6.776334,8.278398,5.621206,4.330388,5.117210,-0.674332,-6.592835,-4.719542,7.537002,-1.651739,-8.193211,2.067806,5.211286,7.889809,9.128647], dtype = "float64")#candidate|7166|(672,)|const|float64
const_7167 = relay.const(5, dtype = "int32")#candidate|7167|()|const|int32
call_7165 = relay.TupleGetItem(func_2170_call(relay.reshape(const_7166.astype('float64'), [14, 16, 3]), relay.reshape(const_7167.astype('int32'), []), ), 1)
call_7168 = relay.TupleGetItem(func_2174_call(relay.reshape(const_7166.astype('float64'), [14, 16, 3]), relay.reshape(const_7167.astype('int32'), []), ), 1)
output = relay.Tuple([uop_7155,call_7160,const_7161,call_7165,const_7166,const_7167,])
output2 = relay.Tuple([uop_7155,call_7162,const_7161,call_7168,const_7166,const_7167,])
func_7172 = relay.Function([var_7154,], output)
mod['func_7172'] = func_7172
mod = relay.transform.InferType()(mod)
mutated_mod['func_7172'] = func_7172
mutated_mod = relay.transform.InferType()(mutated_mod)
var_7173 = relay.var("var_7173", dtype = "float32", shape = (15, 3, 4))#candidate|7173|(15, 3, 4)|var|float32
func_7172_call = mutated_mod.get_global_var('func_7172')
call_7174 = func_7172_call(var_7173)
output = call_7174
func_7175 = relay.Function([var_7173], output)
mutated_mod['func_7175'] = func_7175
mutated_mod = relay.transform.InferType()(mutated_mod)
var_7185 = relay.var("var_7185", dtype = "int8", shape = (5, 2, 8))#candidate|7185|(5, 2, 8)|var|int8
var_7186 = relay.var("var_7186", dtype = "int8", shape = (5, 2, 8))#candidate|7186|(5, 2, 8)|var|int8
bop_7187 = relay.maximum(var_7185.astype('int8'), relay.reshape(var_7186.astype('int8'), relay.shape_of(var_7185))) # shape=(5, 2, 8)
output = relay.Tuple([bop_7187,])
output2 = relay.Tuple([bop_7187,])
func_7190 = relay.Function([var_7185,var_7186,], output)
mod['func_7190'] = func_7190
mod = relay.transform.InferType()(mod)
mutated_mod['func_7190'] = func_7190
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7190_call = mutated_mod.get_global_var('func_7190')
var_7192 = relay.var("var_7192", dtype = "int8", shape = (5, 2, 8))#candidate|7192|(5, 2, 8)|var|int8
var_7193 = relay.var("var_7193", dtype = "int8", shape = (5, 2, 8))#candidate|7193|(5, 2, 8)|var|int8
call_7191 = func_7190_call(var_7192,var_7193,)
output = call_7191
func_7194 = relay.Function([var_7192,var_7193,], output)
mutated_mod['func_7194'] = func_7194
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6844_call = mod.get_global_var('func_6844')
func_6845_call = mutated_mod.get_global_var('func_6845')
call_7196 = relay.TupleGetItem(func_6844_call(), 1)
call_7197 = relay.TupleGetItem(func_6845_call(), 1)
uop_7198 = relay.sigmoid(call_7196.astype('float32')) # shape=(6, 12, 12)
uop_7200 = relay.sigmoid(call_7197.astype('float32')) # shape=(6, 12, 12)
bop_7205 = relay.floor_divide(uop_7198.astype('float32'), relay.reshape(call_7196.astype('float32'), relay.shape_of(uop_7198))) # shape=(6, 12, 12)
bop_7208 = relay.floor_divide(uop_7200.astype('float32'), relay.reshape(call_7197.astype('float32'), relay.shape_of(uop_7200))) # shape=(6, 12, 12)
output = bop_7205
output2 = bop_7208
func_7211 = relay.Function([], output)
mod['func_7211'] = func_7211
mod = relay.transform.InferType()(mod)
mutated_mod['func_7211'] = func_7211
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7211_call = mutated_mod.get_global_var('func_7211')
call_7212 = func_7211_call()
output = call_7212
func_7213 = relay.Function([], output)
mutated_mod['func_7213'] = func_7213
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6704_call = mod.get_global_var('func_6704')
func_6706_call = mutated_mod.get_global_var('func_6706')
call_7295 = func_6704_call()
call_7296 = func_6704_call()
output = relay.Tuple([call_7295,])
output2 = relay.Tuple([call_7296,])
func_7298 = relay.Function([], output)
mod['func_7298'] = func_7298
mod = relay.transform.InferType()(mod)
output = func_7298()
func_7299 = relay.Function([], output)
mutated_mod['func_7299'] = func_7299
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7298_call = mod.get_global_var('func_7298')
func_7299_call = mutated_mod.get_global_var('func_7299')
call_7365 = relay.TupleGetItem(func_7298_call(), 0)
call_7366 = relay.TupleGetItem(func_7299_call(), 0)
output = call_7365
output2 = call_7366
func_7394 = relay.Function([], output)
mod['func_7394'] = func_7394
mod = relay.transform.InferType()(mod)
output = func_7394()
func_7395 = relay.Function([], output)
mutated_mod['func_7395'] = func_7395
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6419_call = mod.get_global_var('func_6419')
func_6420_call = mutated_mod.get_global_var('func_6420')
call_7424 = relay.TupleGetItem(func_6419_call(), 0)
call_7425 = relay.TupleGetItem(func_6420_call(), 0)
output = relay.Tuple([call_7424,])
output2 = relay.Tuple([call_7425,])
func_7446 = relay.Function([], output)
mod['func_7446'] = func_7446
mod = relay.transform.InferType()(mod)
mutated_mod['func_7446'] = func_7446
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7446_call = mutated_mod.get_global_var('func_7446')
call_7447 = func_7446_call()
output = call_7447
func_7448 = relay.Function([], output)
mutated_mod['func_7448'] = func_7448
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7298_call = mod.get_global_var('func_7298')
func_7299_call = mutated_mod.get_global_var('func_7299')
call_7497 = relay.TupleGetItem(func_7298_call(), 0)
call_7498 = relay.TupleGetItem(func_7299_call(), 0)
func_6580_call = mod.get_global_var('func_6580')
func_6585_call = mutated_mod.get_global_var('func_6585')
var_7510 = relay.var("var_7510", dtype = "float64", shape = (672,))#candidate|7510|(672,)|var|float64
const_7511 = relay.const(6, dtype = "int32")#candidate|7511|()|const|int32
var_7512 = relay.var("var_7512", dtype = "float32", shape = (169,))#candidate|7512|(169,)|var|float32
call_7509 = relay.TupleGetItem(func_6580_call(relay.reshape(var_7510.astype('float64'), [4, 168]), relay.reshape(const_7511.astype('int32'), []), relay.reshape(var_7512.astype('float32'), [169,]), ), 6)
call_7513 = relay.TupleGetItem(func_6585_call(relay.reshape(var_7510.astype('float64'), [4, 168]), relay.reshape(const_7511.astype('int32'), []), relay.reshape(var_7512.astype('float32'), [169,]), ), 6)
bop_7519 = relay.greater_equal(var_7512.astype('bool'), relay.reshape(call_7509.astype('bool'), relay.shape_of(var_7512))) # shape=(169,)
bop_7522 = relay.greater_equal(var_7512.astype('bool'), relay.reshape(call_7513.astype('bool'), relay.shape_of(var_7512))) # shape=(169,)
func_7190_call = mod.get_global_var('func_7190')
func_7194_call = mutated_mod.get_global_var('func_7194')
var_7524 = relay.var("var_7524", dtype = "int8", shape = (2, 40))#candidate|7524|(2, 40)|var|int8
call_7523 = relay.TupleGetItem(func_7190_call(relay.reshape(var_7524.astype('int8'), [5, 2, 8]), relay.reshape(var_7524.astype('int8'), [5, 2, 8]), ), 0)
call_7525 = relay.TupleGetItem(func_7194_call(relay.reshape(var_7524.astype('int8'), [5, 2, 8]), relay.reshape(var_7524.astype('int8'), [5, 2, 8]), ), 0)
func_6799_call = mod.get_global_var('func_6799')
func_6802_call = mutated_mod.get_global_var('func_6802')
const_7532 = relay.const([6.721098,-8.895107,5.617670,0.953086,4.415675,-7.788747,-6.728663,6.372785,-0.215880,-8.949035,1.256923,7.099996,-2.675690,6.968674,-9.963773], dtype = "float64")#candidate|7532|(15,)|const|float64
call_7531 = relay.TupleGetItem(func_6799_call(relay.reshape(const_7532.astype('float64'), [15,])), 5)
call_7533 = relay.TupleGetItem(func_6802_call(relay.reshape(const_7532.astype('float64'), [15,])), 5)
func_6772_call = mod.get_global_var('func_6772')
func_6774_call = mutated_mod.get_global_var('func_6774')
call_7542 = func_6772_call()
call_7543 = func_6772_call()
uop_7544 = relay.sqrt(call_7509.astype('float64')) # shape=(169,)
uop_7546 = relay.sqrt(call_7513.astype('float64')) # shape=(169,)
func_6772_call = mod.get_global_var('func_6772')
func_6774_call = mutated_mod.get_global_var('func_6774')
call_7552 = func_6772_call()
call_7553 = func_6772_call()
func_1444_call = mod.get_global_var('func_1444')
func_1449_call = mutated_mod.get_global_var('func_1449')
var_7559 = relay.var("var_7559", dtype = "int8", shape = (45,))#candidate|7559|(45,)|var|int8
var_7560 = relay.var("var_7560", dtype = "int16", shape = (720,))#candidate|7560|(720,)|var|int16
call_7558 = relay.TupleGetItem(func_1444_call(relay.reshape(const_7511.astype('int8'), []), relay.reshape(var_7559.astype('int8'), [3, 1, 15]), relay.reshape(var_7560.astype('int16'), [720,]), ), 4)
call_7561 = relay.TupleGetItem(func_1449_call(relay.reshape(const_7511.astype('int8'), []), relay.reshape(var_7559.astype('int8'), [3, 1, 15]), relay.reshape(var_7560.astype('int16'), [720,]), ), 4)
uop_7562 = relay.asin(uop_7544.astype('float32')) # shape=(169,)
uop_7564 = relay.asin(uop_7546.astype('float32')) # shape=(169,)
uop_7565 = relay.sigmoid(uop_7562.astype('float32')) # shape=(169,)
uop_7567 = relay.sigmoid(uop_7564.astype('float32')) # shape=(169,)
func_7090_call = mod.get_global_var('func_7090')
func_7093_call = mutated_mod.get_global_var('func_7093')
const_7571 = relay.const([-3,-3,7,-1,8,-5,-5,8,3,-3,4,7,-8,6,-4,8,-3,4,-2,-3,2,-1,-4,-1,2,10,-7,-2,5,9,-4,-9,-8,8,-9,-10,3,-10,-10,-6,6,10,2,-8,-9,-10,-2,3,3,1,4,-5,-5,-6,7,-9,9,-6,-1,-9,9,-5,-8,2,2,5,5,5,-6,-4,4,-8,3,3,8,6,1,10,-2,3,8,-1,8,2,8,1,-1,4,-2,-10,1,8,7,-3,10,4,2,10,5,7,2,-7,6,-9,-10,-9,-4,5,4,-4,-2,4,-8,-7,8,6,10,3,7,-4,-2,10,-9,9,2,8,4,9,6,-4,-10,6,-4,-5,2,7,-2,10,-3,5,-4,1,-6,-9,8,9,-4,5,-4,8,-2,10,6,-5,10,-4,6,-2,6,5,7,-2,-8,8,9,-10,2,5,1,-7,-2,7,6,10,-5,8,8,-10,6,10,3,-6,-9,5,3,-5,2,-4,-3,4,9,7,-1,2,4,-7,-2,-4,-4,-5,2,3,-1,-6,-1,-10,2,6,4,-3,1,-7,-2,6,-3,-4,-10,-1,-4,-3,7,3,-3,-3,8,9,-5,-4,9,-5,-10,7,6,1,7,2,9,3,6,-3,1,6,8,5,10,2,-8,2,-9,3,8,9,-3,-1,8,3,-8,5,9,-5,-1,10,8,-3,-4,-2,-2,-2,-5,3,-9,-1,5,2,10,-4,-6,10,6,-10,4,5,-5,10,-9,1,1,-4,-2,10,-6,2,-9,-6,10,9,8,-9,-2,2,3,-9,7,-1,-2,10,-7,1,-9,-3,5,-2,-8,7,-1,1,-4,10,-6,2,-4,-7,7,9,7,4,3,-4,-8,-1,1,4,-2,5,-5,-7,1,2,-2,-3,-10,-10,4,6,-6,-8,-8,-2,-7,10,6,-3,-3,-5,3,-5,-5,-7,-10,1,-1,5,-3,2,4,2,-1,-4,-9,9,-7,6,-9,2,-8,-5,4,-6,7,-9,-10,-10,7,5,-3,7,-1,3,-5,-9,-8,2,6,-10,-6,3,-1,8,7,3,2,-1,2,2,8,2,6,9,2,7,10,5,-5,9,-8,3,4,-10,-7,-6], dtype = "uint64")#candidate|7571|(420,)|const|uint64
call_7570 = relay.TupleGetItem(func_7090_call(relay.reshape(const_7571.astype('uint64'), [420,])), 4)
call_7572 = relay.TupleGetItem(func_7093_call(relay.reshape(const_7571.astype('uint64'), [420,])), 4)
output = relay.Tuple([call_7497,var_7510,const_7511,bop_7519,call_7523,var_7524,call_7531,const_7532,call_7542,call_7552,call_7558,var_7559,var_7560,uop_7565,call_7570,const_7571,])
output2 = relay.Tuple([call_7498,var_7510,const_7511,bop_7522,call_7525,var_7524,call_7533,const_7532,call_7543,call_7553,call_7561,var_7559,var_7560,uop_7567,call_7572,const_7571,])
func_7599 = relay.Function([var_7510,var_7512,var_7524,var_7559,var_7560,], output)
mod['func_7599'] = func_7599
mod = relay.transform.InferType()(mod)
var_7600 = relay.var("var_7600", dtype = "float64", shape = (672,))#candidate|7600|(672,)|var|float64
var_7601 = relay.var("var_7601", dtype = "float32", shape = (169,))#candidate|7601|(169,)|var|float32
var_7602 = relay.var("var_7602", dtype = "int8", shape = (2, 40))#candidate|7602|(2, 40)|var|int8
var_7603 = relay.var("var_7603", dtype = "int8", shape = (45,))#candidate|7603|(45,)|var|int8
var_7604 = relay.var("var_7604", dtype = "int16", shape = (720,))#candidate|7604|(720,)|var|int16
output = func_7599(var_7600,var_7601,var_7602,var_7603,var_7604,)
func_7605 = relay.Function([var_7600,var_7601,var_7602,var_7603,var_7604,], output)
mutated_mod['func_7605'] = func_7605
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6336_call = mod.get_global_var('func_6336')
func_6337_call = mutated_mod.get_global_var('func_6337')
call_7619 = relay.TupleGetItem(func_6336_call(), 0)
call_7620 = relay.TupleGetItem(func_6337_call(), 0)
func_3153_call = mod.get_global_var('func_3153')
func_3156_call = mutated_mod.get_global_var('func_3156')
call_7643 = func_3153_call(relay.reshape(call_7619.astype('float64'), [8, 12, 9]))
call_7644 = func_3153_call(relay.reshape(call_7619.astype('float64'), [8, 12, 9]))
func_7446_call = mod.get_global_var('func_7446')
func_7448_call = mutated_mod.get_global_var('func_7448')
call_7657 = relay.TupleGetItem(func_7446_call(), 0)
call_7658 = relay.TupleGetItem(func_7448_call(), 0)
func_7446_call = mod.get_global_var('func_7446')
func_7448_call = mutated_mod.get_global_var('func_7448')
call_7661 = relay.TupleGetItem(func_7446_call(), 0)
call_7662 = relay.TupleGetItem(func_7448_call(), 0)
func_3362_call = mod.get_global_var('func_3362')
func_3365_call = mutated_mod.get_global_var('func_3365')
var_7666 = relay.var("var_7666", dtype = "float64", shape = (364,))#candidate|7666|(364,)|var|float64
call_7665 = func_3362_call(relay.reshape(var_7666.astype('float64'), [4, 7, 13]))
call_7667 = func_3362_call(relay.reshape(var_7666.astype('float64'), [4, 7, 13]))
uop_7668 = relay.exp(call_7665.astype('float32')) # shape=(4, 7, 13)
uop_7670 = relay.exp(call_7667.astype('float32')) # shape=(4, 7, 13)
func_6676_call = mod.get_global_var('func_6676')
func_6677_call = mutated_mod.get_global_var('func_6677')
call_7673 = relay.TupleGetItem(func_6676_call(), 0)
call_7674 = relay.TupleGetItem(func_6677_call(), 0)
output = relay.Tuple([call_7619,call_7643,call_7657,call_7661,var_7666,uop_7668,call_7673,])
output2 = relay.Tuple([call_7620,call_7644,call_7658,call_7662,var_7666,uop_7670,call_7674,])
func_7682 = relay.Function([var_7666,], output)
mod['func_7682'] = func_7682
mod = relay.transform.InferType()(mod)
var_7683 = relay.var("var_7683", dtype = "float64", shape = (364,))#candidate|7683|(364,)|var|float64
output = func_7682(var_7683)
func_7684 = relay.Function([var_7683], output)
mutated_mod['func_7684'] = func_7684
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6211_call = mod.get_global_var('func_6211')
func_6212_call = mutated_mod.get_global_var('func_6212')
call_7686 = relay.TupleGetItem(func_6211_call(), 2)
call_7687 = relay.TupleGetItem(func_6212_call(), 2)
output = relay.Tuple([call_7686,])
output2 = relay.Tuple([call_7687,])
func_7694 = relay.Function([], output)
mod['func_7694'] = func_7694
mod = relay.transform.InferType()(mod)
mutated_mod['func_7694'] = func_7694
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7694_call = mutated_mod.get_global_var('func_7694')
call_7695 = func_7694_call()
output = call_7695
func_7696 = relay.Function([], output)
mutated_mod['func_7696'] = func_7696
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6844_call = mod.get_global_var('func_6844')
func_6845_call = mutated_mod.get_global_var('func_6845')
call_7715 = relay.TupleGetItem(func_6844_call(), 1)
call_7716 = relay.TupleGetItem(func_6845_call(), 1)
output = call_7715
output2 = call_7716
func_7765 = relay.Function([], output)
mod['func_7765'] = func_7765
mod = relay.transform.InferType()(mod)
mutated_mod['func_7765'] = func_7765
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7765_call = mutated_mod.get_global_var('func_7765')
call_7766 = func_7765_call()
output = call_7766
func_7767 = relay.Function([], output)
mutated_mod['func_7767'] = func_7767
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7298_call = mod.get_global_var('func_7298')
func_7299_call = mutated_mod.get_global_var('func_7299')
call_7790 = relay.TupleGetItem(func_7298_call(), 0)
call_7791 = relay.TupleGetItem(func_7299_call(), 0)
func_1823_call = mod.get_global_var('func_1823')
func_1825_call = mutated_mod.get_global_var('func_1825')
const_7819 = relay.const([2,-1,6,9,6,-1,-2,1,-7,-8,-4,-2,7,-1,1,-4,2,4,-3,-5,10,10,-9,5,-4,10,2,-5,1,9,-6,7,-6,-5,-3,-10,8,-4,-10,4,-4,4,-6,4,-4,1,3,1,-8,-10,9,-3,-1,6,8,5,-4,-7,-9,10,-5,7,-1,-9,5,10,-1,-2,2,4,-8,1,10,-4,10,-4,7,2,8,-6,5,6,1,-8,6,2,-3,-5,2,3,3,8,9,-9,3,1,-1,4,6,4,4,-7,-10,9,4,-5,-9,9,3,6,-3,-6,5,6,-3,-7,-6,-3,9,-8,6,-9,4,-5,-6,-5,-10,-3,10,-10,8,10,-2,-10,-9,-1,10,3,8,5,3,-4,10,9,7,-4,7,-10,-9,7,9,-6,-9,-4,-7,2,-8,2,-4,-9,2,-5,-7,7,5,7,-3,-2,-10,-1,7,6,2,5,-10,-6,-10,-1,-7,-5,2,6,-5,-10,-9,1,-8,3,-8,5,-5,-10,3,-1,2,5,-10,-1,-3,9,6,10,-10,4,-1,5,4,-10,9,-9,9,-4,7,3,10,2,3,-10,4,10,6,1,1,7,3,10,10,-1,1,8,8,-7,-3,4,4,-3,9,10,-7,9,-3,-2,-5,3,-6,9,-3,7,-5,3,4,10,4,-3,-9,9,-1,8,-3,-4,-1,7,9,-2,-4,6,3,-3,-7,7,1,7,-8,-8,5,-4,-4,2,4,2,9,7,-5,2,-9,6,-7,-1,-10,-8,4,-1,2,4,7,3,3,1,-4,-9,-2,-4,10,3,-6,-4,2,9,-1,9,10,-8,-4,10,-4,1,-6,4,-10,-5,-8,9,8,-2,-4,9,-5,-6,7,-6,-6,6,10,7,5,-8,-3,-2,6,10,-7,3,-5,10,6,-1,-1,-4,7,4,-5,4,1,9,-2,-7,-7,10,9,3,3,8,3,8,-3,-3,-5,6,-4,3,-3,2,9,3,-1,-3,-4,-10,-3,8,-3,6,-7,3,-7,-7,7,4,1,-5,-8,9,-9,1,-9,10,10,-9,-8,8,9,10,7,3,3,-2,-6,3,10,-7,-2,1,5,-9,-2,-2,4,-8,-8,-9], dtype = "uint64")#candidate|7819|(420,)|const|uint64
call_7818 = func_1823_call(relay.reshape(const_7819.astype('uint64'), [7, 6, 10]))
call_7820 = func_1823_call(relay.reshape(const_7819.astype('uint64'), [7, 6, 10]))
func_801_call = mod.get_global_var('func_801')
func_805_call = mutated_mod.get_global_var('func_805')
const_7823 = relay.const([[-8,-2,-3,-8,1,8,2,6,-7,2,6,10,-10,9,-10,10,2,-9,-4,-7,-6,10,-1,9,3,-3,-5,8,-3,-3,-6,9,6,2,-6,7,-6,-4,-5,-4]], dtype = "uint8")#candidate|7823|(1, 40)|const|uint8
call_7822 = relay.TupleGetItem(func_801_call(relay.reshape(const_7823.astype('uint8'), [1, 5, 8]), relay.reshape(const_7823.astype('uint8'), [1, 5, 8]), ), 0)
call_7824 = relay.TupleGetItem(func_805_call(relay.reshape(const_7823.astype('uint8'), [1, 5, 8]), relay.reshape(const_7823.astype('uint8'), [1, 5, 8]), ), 0)
output = relay.Tuple([call_7790,call_7818,const_7819,call_7822,const_7823,])
output2 = relay.Tuple([call_7791,call_7820,const_7819,call_7824,const_7823,])
func_7832 = relay.Function([], output)
mod['func_7832'] = func_7832
mod = relay.transform.InferType()(mod)
mutated_mod['func_7832'] = func_7832
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7832_call = mutated_mod.get_global_var('func_7832')
call_7833 = func_7832_call()
output = call_7833
func_7834 = relay.Function([], output)
mutated_mod['func_7834'] = func_7834
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6704_call = mod.get_global_var('func_6704')
func_6706_call = mutated_mod.get_global_var('func_6706')
call_7845 = func_6704_call()
call_7846 = func_6704_call()
output = call_7845
output2 = call_7846
func_7850 = relay.Function([], output)
mod['func_7850'] = func_7850
mod = relay.transform.InferType()(mod)
mutated_mod['func_7850'] = func_7850
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7850_call = mutated_mod.get_global_var('func_7850')
call_7851 = func_7850_call()
output = call_7851
func_7852 = relay.Function([], output)
mutated_mod['func_7852'] = func_7852
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7694_call = mod.get_global_var('func_7694')
func_7696_call = mutated_mod.get_global_var('func_7696')
call_7860 = relay.TupleGetItem(func_7694_call(), 0)
call_7861 = relay.TupleGetItem(func_7696_call(), 0)
output = call_7860
output2 = call_7861
func_7885 = relay.Function([], output)
mod['func_7885'] = func_7885
mod = relay.transform.InferType()(mod)
mutated_mod['func_7885'] = func_7885
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7885_call = mutated_mod.get_global_var('func_7885')
call_7886 = func_7885_call()
output = call_7886
func_7887 = relay.Function([], output)
mutated_mod['func_7887'] = func_7887
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7765_call = mod.get_global_var('func_7765')
func_7767_call = mutated_mod.get_global_var('func_7767')
call_7899 = func_7765_call()
call_7900 = func_7765_call()
func_6406_call = mod.get_global_var('func_6406')
func_6409_call = mutated_mod.get_global_var('func_6409')
const_7907 = relay.const([[3.720137],[-7.726949],[5.176536],[2.247414],[-9.168059],[-8.820069],[-8.156451],[2.116223],[-3.090181],[1.350830],[-2.561828],[-8.756831],[-6.245310],[2.255228],[-3.431922],[-7.819978],[9.327550],[2.372197],[-7.177970],[-1.028750],[-4.919721],[-6.544033],[-8.695094],[3.162080],[0.261331],[6.971389],[4.265101],[0.205741],[1.838651],[-9.012864],[-4.382690],[-5.602998],[9.481519],[-1.170589],[-3.309177],[4.904847],[-7.050393],[5.454273],[9.619526],[7.339860],[4.359545],[-9.865193],[-5.830625],[-1.330422],[-3.805102],[2.337029],[2.067740],[-4.018978],[-5.308979],[-3.088466],[1.308987],[6.955535],[0.537895],[-4.251204],[8.394334],[2.787004],[3.419182],[1.561908],[6.279099],[7.031742],[-0.826687],[-6.982475],[-2.988881],[0.604648],[-7.591887],[4.317182],[6.559908],[1.378830],[2.343390],[2.738055],[1.097729],[3.049705],[-1.161658],[5.964276],[-7.308492],[9.055516],[3.332058],[2.784857],[4.221592],[-0.777434],[-9.111851],[9.537964],[-9.158355],[3.828855],[1.018695],[-4.393416],[6.602310],[1.338586],[-9.877559],[-5.758119],[6.204662],[-9.050742],[8.576854],[3.083696],[-3.456476],[-3.590575],[3.460689],[-3.959859],[-4.860367],[-4.120292],[-1.816425],[0.905884],[-5.229864],[3.282021],[7.523673],[-2.989542],[2.629955],[6.490714],[-5.752501],[5.219349],[1.411220],[5.841979],[-6.981839],[-2.778142],[5.389397],[-1.306323],[-2.933376]], dtype = "float64")#candidate|7907|(117, 1)|const|float64
var_7908 = relay.var("var_7908", dtype = "float64", shape = ())#candidate|7908|()|var|float64
call_7906 = relay.TupleGetItem(func_6406_call(relay.reshape(const_7907.astype('float64'), [117,]), relay.reshape(var_7908.astype('float64'), []), ), 4)
call_7909 = relay.TupleGetItem(func_6409_call(relay.reshape(const_7907.astype('float64'), [117,]), relay.reshape(var_7908.astype('float64'), []), ), 4)
output = relay.Tuple([call_7899,call_7906,const_7907,var_7908,])
output2 = relay.Tuple([call_7900,call_7909,const_7907,var_7908,])
func_7911 = relay.Function([var_7908,], output)
mod['func_7911'] = func_7911
mod = relay.transform.InferType()(mod)
mutated_mod['func_7911'] = func_7911
mutated_mod = relay.transform.InferType()(mutated_mod)
var_7912 = relay.var("var_7912", dtype = "float64", shape = ())#candidate|7912|()|var|float64
func_7911_call = mutated_mod.get_global_var('func_7911')
call_7913 = func_7911_call(var_7912)
output = call_7913
func_7914 = relay.Function([var_7912], output)
mutated_mod['func_7914'] = func_7914
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6135_call = mod.get_global_var('func_6135')
func_6136_call = mutated_mod.get_global_var('func_6136')
call_7951 = relay.TupleGetItem(func_6135_call(), 1)
call_7952 = relay.TupleGetItem(func_6136_call(), 1)
func_2472_call = mod.get_global_var('func_2472')
func_2475_call = mutated_mod.get_global_var('func_2475')
var_7960 = relay.var("var_7960", dtype = "uint8", shape = (27,))#candidate|7960|(27,)|var|uint8
call_7959 = relay.TupleGetItem(func_2472_call(relay.reshape(var_7960.astype('uint8'), [1, 9, 3])), 1)
call_7961 = relay.TupleGetItem(func_2475_call(relay.reshape(var_7960.astype('uint8'), [1, 9, 3])), 1)
output = relay.Tuple([call_7951,call_7959,var_7960,])
output2 = relay.Tuple([call_7952,call_7961,var_7960,])
func_7962 = relay.Function([var_7960,], output)
mod['func_7962'] = func_7962
mod = relay.transform.InferType()(mod)
var_7963 = relay.var("var_7963", dtype = "uint8", shape = (27,))#candidate|7963|(27,)|var|uint8
output = func_7962(var_7963)
func_7964 = relay.Function([var_7963], output)
mutated_mod['func_7964'] = func_7964
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7765_call = mod.get_global_var('func_7765')
func_7767_call = mutated_mod.get_global_var('func_7767')
call_7983 = func_7765_call()
call_7984 = func_7765_call()
func_7211_call = mod.get_global_var('func_7211')
func_7213_call = mutated_mod.get_global_var('func_7213')
call_7990 = func_7211_call()
call_7991 = func_7211_call()
func_4824_call = mod.get_global_var('func_4824')
func_4829_call = mutated_mod.get_global_var('func_4829')
var_8035 = relay.var("var_8035", dtype = "float64", shape = (1512,))#candidate|8035|(1512,)|var|float64
const_8036 = relay.const([-0.790115,4.914571,-7.653858,0.390733,-7.662005,-0.494072,-7.105601,-0.007498,-5.165317,9.523375,-6.217415,-3.164957,-2.856146,-3.378358,-8.985151,7.287894,-8.099620,4.424603,4.683865,-5.599587,3.772565,3.366639,-0.407484,2.354632,9.724419,-3.087951,2.458647,-9.949004,-7.202926,1.532856,7.162167,5.125421,-6.614783,-2.737123,2.333016,1.933356,7.442506,-9.972307,-3.092264,5.012365,8.296842,-0.620258,-8.937463,-1.407968,2.918367,-4.808265,4.829620,-3.966133,-6.028563,0.298286,-1.060447,-7.110453,0.469167,1.681363,-1.634447,-7.385158,4.223106,-3.208396,6.853234,-5.698024,-8.918429,3.872563,1.145464,0.614613,0.309860,8.030677,1.559032,4.273304,3.145976,2.050344,7.998016,8.475047,-5.397929,2.543193,-0.163641,-2.068878,-2.542374,-9.311246,5.711091,3.608533,4.010914,-1.631658,-0.360544,5.938850,7.770948,8.283092,-0.207840,1.494193,-3.387007,3.599167,-8.453417,4.465061,9.494370,-0.277009,-5.534881,3.937454,2.007038,-2.818220,-7.418143,0.977925,-8.952224,-7.675801,4.359129,4.696878,-9.224260,-9.655738,-2.359233,2.590144,-3.290664,7.830542,4.580605,-0.103690,-3.028874,-7.778697,-2.713860,-9.733995,-7.698309,-4.109765,-0.790471,9.451428,-8.464256,-2.965920,-6.339311,-2.190482,0.181257,1.125251,1.870373,3.098945,-9.457675,-7.396272,8.353723,-9.638365,2.082196,3.535358,-4.408698,9.023788,1.449563,-5.939883,4.357300,-4.684467,-7.753074,-3.709290,0.557640,1.337850,8.168546,-6.032159,5.289265,6.375456,8.328040,-2.102319,6.560093,-2.366523,3.041177,-6.920729,-2.894104,-3.863676,-1.969226,-9.478200,-9.456145,-7.309147,1.019695,0.695642,5.078119,7.844917,9.165493,-9.307649,8.703546,8.641404,9.087230,-5.666898,-4.910530,-5.462156,6.243444,-1.601733,4.042200,7.687880,-2.225433,4.962411,0.421015,-4.531081,-7.618404,-9.428140,-4.332235,3.983280,3.596661,1.513843,-1.512937,0.060426,-4.615872,6.481987,-6.700263,-6.868526,4.678722,-6.829090,-8.376485,-1.588934,1.607205,3.450322,-5.498451,-0.233864,-8.112039,-9.894533,4.155394,-1.321546,5.143033,6.149764,-3.178569,-0.139930,9.148124,9.004207,-9.842228,1.510710,-2.937385,3.360592,6.399948,-8.420768,6.527417,-0.358314,-2.511502,-6.573607,-1.291982,2.432817,7.256683,1.487201,-4.499613,-7.939392,-3.075917,6.455108,-6.265032,7.320213,-3.948045,8.570515,-9.742346,-1.959510,-1.754431,6.579891,6.327781,-4.840944,-3.491589,9.441796,-2.205574,8.135108,0.053252,2.635593,6.881195,6.896288,-1.502031,0.215774,-4.088375,-0.454786,-9.573533,-7.279486,-2.454361,-5.484193,-0.359358,-9.618542,-5.751516,7.163792,-9.181730,6.720364,4.158980,6.220666,-4.651300,8.340425,-7.180125,8.947569,7.093403,-9.970457,-0.840614,-4.097170,5.798461,1.903744,2.161210,0.719810,6.469288,9.599002,-9.385742,7.959147,-4.199876,5.290218,-0.268923,5.722590,-3.401749,3.105887,6.283125,7.999050,-3.296429,-1.267760,6.740577,8.916732,-3.469956,-2.912157,1.728952,7.094235,-9.593892,3.472118,-3.482705,-0.008744,-9.289258,3.232107,0.215295,-7.308907,-1.163685,7.359142,8.156738,-2.456756,-2.146999,-6.372205,-3.858799,5.373989,-7.580198,3.384927,5.326973,-0.491799,-5.536029,4.557875,-7.387387,2.362767,-4.526527,0.794624,-2.146793,-2.015318,-3.742862,-7.396972,-3.529589,5.442193,-4.632930,7.174664,-2.875890,-7.963021,-7.813987,-3.924550,7.076989,7.688980,5.256151,8.879501], dtype = "float32")#candidate|8036|(336,)|const|float32
var_8037 = relay.var("var_8037", dtype = "float64", shape = (88, 26))#candidate|8037|(88, 26)|var|float64
call_8034 = relay.TupleGetItem(func_4824_call(relay.reshape(var_8035.astype('float64'), [12, 9, 14]), relay.reshape(const_8036.astype('float32'), [336,]), relay.reshape(var_8037.astype('float64'), [2288,]), ), 4)
call_8038 = relay.TupleGetItem(func_4829_call(relay.reshape(var_8035.astype('float64'), [12, 9, 14]), relay.reshape(const_8036.astype('float32'), [336,]), relay.reshape(var_8037.astype('float64'), [2288,]), ), 4)
output = relay.Tuple([call_7983,call_7990,call_8034,var_8035,const_8036,var_8037,])
output2 = relay.Tuple([call_7984,call_7991,call_8038,var_8035,const_8036,var_8037,])
func_8040 = relay.Function([var_8035,var_8037,], output)
mod['func_8040'] = func_8040
mod = relay.transform.InferType()(mod)
mutated_mod['func_8040'] = func_8040
mutated_mod = relay.transform.InferType()(mutated_mod)
func_8040_call = mutated_mod.get_global_var('func_8040')
var_8042 = relay.var("var_8042", dtype = "float64", shape = (1512,))#candidate|8042|(1512,)|var|float64
var_8043 = relay.var("var_8043", dtype = "float64", shape = (88, 26))#candidate|8043|(88, 26)|var|float64
call_8041 = func_8040_call(var_8042,var_8043,)
output = call_8041
func_8044 = relay.Function([var_8042,var_8043,], output)
mutated_mod['func_8044'] = func_8044
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6739_call = mod.get_global_var('func_6739')
func_6741_call = mutated_mod.get_global_var('func_6741')
call_8161 = func_6739_call()
call_8162 = func_6739_call()
output = call_8161
output2 = call_8162
func_8173 = relay.Function([], output)
mod['func_8173'] = func_8173
mod = relay.transform.InferType()(mod)
mutated_mod['func_8173'] = func_8173
mutated_mod = relay.transform.InferType()(mutated_mod)
func_8173_call = mutated_mod.get_global_var('func_8173')
call_8174 = func_8173_call()
output = call_8174
func_8175 = relay.Function([], output)
mutated_mod['func_8175'] = func_8175
mutated_mod = relay.transform.InferType()(mutated_mod)
const_8179 = relay.const([[[-6,-3,9,-4],[9,5,-7,8],[5,3,-5,-9],[-4,1,4,3],[8,-4,-4,-2],[-2,-7,-9,-4],[-8,2,-3,10],[10,5,5,-4],[6,9,-6,4],[-7,-9,-8,1],[-2,-9,6,10],[-1,1,-7,-10],[-1,-2,2,-7],[9,-7,10,4],[3,-7,-1,4]],[[-4,-7,-10,-3],[-5,-9,2,-8],[-3,1,3,7],[9,4,3,-3],[2,9,8,-2],[6,2,9,-1],[2,-10,-7,10],[3,5,1,4],[-9,-5,2,10],[1,7,9,-4],[2,-8,3,7],[4,-3,-2,-8],[7,-6,1,10],[-7,1,7,-8],[3,9,6,3]],[[10,4,-2,-10],[6,-9,-3,8],[-6,-5,8,3],[1,-7,-10,8],[-8,-9,-5,-9],[-7,9,-9,-2],[-7,9,2,7],[6,4,-6,-3],[5,5,2,-2],[-6,3,-7,2],[1,9,3,-9],[-2,4,-5,2],[-8,-1,-5,-3],[3,6,-8,6],[-8,-5,3,-2]]], dtype = "uint8")#candidate|8179|(3, 15, 4)|const|uint8
var_8180 = relay.var("var_8180", dtype = "uint8", shape = (3, 15, 4))#candidate|8180|(3, 15, 4)|var|uint8
bop_8181 = relay.not_equal(const_8179.astype('bool'), relay.reshape(var_8180.astype('bool'), relay.shape_of(const_8179))) # shape=(3, 15, 4)
output = relay.Tuple([bop_8181,])
output2 = relay.Tuple([bop_8181,])
func_8197 = relay.Function([var_8180,], output)
mod['func_8197'] = func_8197
mod = relay.transform.InferType()(mod)
mutated_mod['func_8197'] = func_8197
mutated_mod = relay.transform.InferType()(mutated_mod)
var_8198 = relay.var("var_8198", dtype = "uint8", shape = (3, 15, 4))#candidate|8198|(3, 15, 4)|var|uint8
func_8197_call = mutated_mod.get_global_var('func_8197')
call_8199 = func_8197_call(var_8198)
output = call_8199
func_8200 = relay.Function([var_8198], output)
mutated_mod['func_8200'] = func_8200
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7832_call = mod.get_global_var('func_7832')
func_7834_call = mutated_mod.get_global_var('func_7834')
call_8234 = relay.TupleGetItem(func_7832_call(), 3)
call_8235 = relay.TupleGetItem(func_7834_call(), 3)
func_3804_call = mod.get_global_var('func_3804')
func_3808_call = mutated_mod.get_global_var('func_3808')
const_8239 = relay.const(6.996387, dtype = "float64")#candidate|8239|()|const|float64
const_8240 = relay.const([[4.819771,6.424826,-5.731481,-9.156937,-0.011192,2.266025,-9.191360,-0.582228,-8.163827,-5.351273,-7.467666,9.872722,6.844433,7.601773,-4.994411]], dtype = "float64")#candidate|8240|(1, 15)|const|float64
call_8238 = relay.TupleGetItem(func_3804_call(relay.reshape(const_8239.astype('float64'), []), relay.reshape(const_8240.astype('float64'), [1, 15, 1]), ), 0)
call_8241 = relay.TupleGetItem(func_3808_call(relay.reshape(const_8239.astype('float64'), []), relay.reshape(const_8240.astype('float64'), [1, 15, 1]), ), 0)
output = relay.Tuple([call_8234,call_8238,const_8239,const_8240,])
output2 = relay.Tuple([call_8235,call_8241,const_8239,const_8240,])
func_8246 = relay.Function([], output)
mod['func_8246'] = func_8246
mod = relay.transform.InferType()(mod)
mutated_mod['func_8246'] = func_8246
mutated_mod = relay.transform.InferType()(mutated_mod)
func_8246_call = mutated_mod.get_global_var('func_8246')
call_8247 = func_8246_call()
output = call_8247
func_8248 = relay.Function([], output)
mutated_mod['func_8248'] = func_8248
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6270_call = mod.get_global_var('func_6270')
func_6271_call = mutated_mod.get_global_var('func_6271')
call_8354 = func_6270_call()
call_8355 = func_6270_call()
output = relay.Tuple([call_8354,])
output2 = relay.Tuple([call_8355,])
func_8359 = relay.Function([], output)
mod['func_8359'] = func_8359
mod = relay.transform.InferType()(mod)
mutated_mod['func_8359'] = func_8359
mutated_mod = relay.transform.InferType()(mutated_mod)
func_8359_call = mutated_mod.get_global_var('func_8359')
call_8360 = func_8359_call()
output = call_8360
func_8361 = relay.Function([], output)
mutated_mod['func_8361'] = func_8361
mutated_mod = relay.transform.InferType()(mutated_mod)
var_8455 = relay.var("var_8455", dtype = "float32", shape = (2, 16, 7))#candidate|8455|(2, 16, 7)|var|float32
uop_8456 = relay.log2(var_8455.astype('float32')) # shape=(2, 16, 7)
output = relay.Tuple([uop_8456,])
output2 = relay.Tuple([uop_8456,])
func_8459 = relay.Function([var_8455,], output)
mod['func_8459'] = func_8459
mod = relay.transform.InferType()(mod)
var_8460 = relay.var("var_8460", dtype = "float32", shape = (2, 16, 7))#candidate|8460|(2, 16, 7)|var|float32
output = func_8459(var_8460)
func_8461 = relay.Function([var_8460], output)
mutated_mod['func_8461'] = func_8461
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7885_call = mod.get_global_var('func_7885')
func_7887_call = mutated_mod.get_global_var('func_7887')
call_8466 = func_7885_call()
call_8467 = func_7885_call()
output = call_8466
output2 = call_8467
func_8476 = relay.Function([], output)
mod['func_8476'] = func_8476
mod = relay.transform.InferType()(mod)
output = func_8476()
func_8477 = relay.Function([], output)
mutated_mod['func_8477'] = func_8477
mutated_mod = relay.transform.InferType()(mutated_mod)
const_8495 = relay.constdtype = "float64")#candidate|8495|(5, 3, 15)|const|float64
uop_8496 = relay.acosh(const_8495.astype('float64')) # shape=(5, 3, 15)
output = relay.Tuple([uop_8496,])
output2 = relay.Tuple([uop_8496,])
func_8499 = relay.Function([], output)
mod['func_8499'] = func_8499
mod = relay.transform.InferType()(mod)
output = func_8499()
func_8500 = relay.Function([], output)
mutated_mod['func_8500'] = func_8500
mutated_mod = relay.transform.InferType()(mutated_mod)
func_8246_call = mod.get_global_var('func_8246')
func_8248_call = mutated_mod.get_global_var('func_8248')
call_8533 = relay.TupleGetItem(func_8246_call(), 3)
call_8534 = relay.TupleGetItem(func_8248_call(), 3)
output = call_8533
output2 = call_8534
func_8546 = relay.Function([], output)
mod['func_8546'] = func_8546
mod = relay.transform.InferType()(mod)
output = func_8546()
func_8547 = relay.Function([], output)
mutated_mod['func_8547'] = func_8547
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6676_call = mod.get_global_var('func_6676')
func_6677_call = mutated_mod.get_global_var('func_6677')
call_8628 = relay.TupleGetItem(func_6676_call(), 0)
call_8629 = relay.TupleGetItem(func_6677_call(), 0)
output = relay.Tuple([call_8628,])
output2 = relay.Tuple([call_8629,])
func_8635 = relay.Function([], output)
mod['func_8635'] = func_8635
mod = relay.transform.InferType()(mod)
mutated_mod['func_8635'] = func_8635
mutated_mod = relay.transform.InferType()(mutated_mod)
func_8635_call = mutated_mod.get_global_var('func_8635')
call_8636 = func_8635_call()
output = call_8636
func_8637 = relay.Function([], output)
mutated_mod['func_8637'] = func_8637
mutated_mod = relay.transform.InferType()(mutated_mod)
func_8635_call = mod.get_global_var('func_8635')
func_8637_call = mutated_mod.get_global_var('func_8637')
call_8660 = relay.TupleGetItem(func_8635_call(), 0)
call_8661 = relay.TupleGetItem(func_8637_call(), 0)
func_801_call = mod.get_global_var('func_801')
func_805_call = mutated_mod.get_global_var('func_805')
const_8670 = relay.const([1,-5,10,3,10,-4,4,8,1,-1,9,-3,5,-10,-5,-1,4,3,5,4,8,2,5,-3,2,-5,3,7,-9,3,9,-2,-1,-8,1,-2,2,-2,5,-3], dtype = "uint8")#candidate|8670|(40,)|const|uint8
call_8669 = relay.TupleGetItem(func_801_call(relay.reshape(const_8670.astype('uint8'), [1, 5, 8]), relay.reshape(const_8670.astype('uint8'), [1, 5, 8]), ), 2)
call_8671 = relay.TupleGetItem(func_805_call(relay.reshape(const_8670.astype('uint8'), [1, 5, 8]), relay.reshape(const_8670.astype('uint8'), [1, 5, 8]), ), 2)
func_343_call = mod.get_global_var('func_343')
func_346_call = mutated_mod.get_global_var('func_346')
const_8692 = relay.const([[9.295215,-2.176335,9.752339,-5.789807,5.629869,-6.230903,-2.911174,-0.130613,6.575499,-9.700162,-2.012780,6.476711,0.524791,-9.404642,-2.761520,0.700822,-7.205233,-2.163108,9.660730,1.661704,5.336077,-7.122486,1.165828,6.065647,5.393614,4.764109,6.054703,6.088001,4.510106,-9.740232,8.066150,2.729511,-0.360489,-2.965986,1.627074,-5.112429,2.893822,-2.953410,0.182912,3.097660,8.422706,-9.743183,6.015780,5.144179,5.699070,6.666677,2.560687,7.422567,-1.126478,4.540857,7.602021,-3.753262,4.266047,-5.544915,2.318423,8.158051,-1.146886,2.070216,-1.961347,-8.502059,-9.212416,-5.212767,-6.877267,9.546966,7.611880,-7.939859,-0.540791,-7.747820,0.580165,-6.855037,-6.037227,6.663265,0.365215,4.645113,-6.895563,-7.921608,7.899823,-0.066254,-3.950371,-4.463377,8.367657,-5.685833,0.498527,1.854167,0.133621,4.571567,8.043293,-4.338228,6.136461,-3.661298,8.304706,9.024150,-6.134063,4.082064,8.026238,-6.051397,-7.554001,7.660524,2.970692,0.441540,-3.472876,6.591336,0.848162,8.123367,8.720196,-4.552925,-5.493482,7.421925,-3.793326,6.319683,-1.105169,-0.078043,-3.591351,-0.477073,-3.681809,6.372395,1.616866,-1.465538,-5.961904,3.736976,-0.583063,0.202873,6.158404,6.345060,0.781413,-6.364398,-9.940269,-3.946851,-3.925190,1.976636,-3.364015,2.144941,6.576850,5.312398,0.672941,0.762870,-8.348876,-0.887934,6.171948,3.588958,-9.244996,-3.258365,-5.167554,-6.261362,0.484190,0.102979,-9.338075,2.899070,7.739877,4.143731,-9.662697,-7.814678,7.574080,-6.516679,-9.029934,2.818378,1.019711,9.147301,8.175768,-6.905316,3.463644,-3.452725,4.165985,5.698575,-4.587677,8.377603,6.871434,-0.960776,2.427444,8.664965,-4.869370,-7.182349,-9.204835,-7.902825,8.666853,5.068359,-7.883268,-1.054708,5.843248,-8.055208,1.758794,-1.983239,2.199578,9.465751,-2.961009,-0.448511,-7.893806,-8.856074,5.830010,-2.001598,-4.462215,2.693061,8.685387,-9.740316,-9.703918,7.874442,-4.573722,-0.872087,-6.225118,-1.375039,6.362730,6.312304,-5.417997,-6.844885,-9.736250,-7.735289,-1.297967,-8.369821,-8.965199,8.791795,0.895354,-9.164038,-0.586384,-0.194094,-9.619619,0.599916,2.709626,8.462916,0.244345,7.637342,-6.943863,-7.536008,-9.251333,9.087681,7.565173,4.544115,7.191440,-3.491484,-4.344601,-1.263812,-6.911153,-6.836263,-4.206796,2.761123,-5.493753,-6.360928,-5.742087,7.378925,8.073474,0.202766,5.600861,0.741044,-7.194185,0.145030,-7.137836,-3.880490,3.136365,5.518363,-9.261553,7.981564,9.731423,-9.063687,-4.467294,-8.617204,-6.872154,-1.531183,-8.757486,-7.709106,-1.276249,-3.044351,4.636465,4.697967,3.164737,-0.489334,8.860817,-0.022509,4.253127,-3.374215,1.912571,4.021381,7.396330,5.500315,-3.410250,-6.870203,6.453982,1.351347,8.681753,-4.014675,8.876431,8.501088,-2.772684,-8.975003,-8.376425,-9.748755,1.874823,1.168415,2.490547,1.454548,-5.940146,-3.957397,-9.220408,-5.436638,-2.818387,-5.574478,7.268455,-0.362361,-8.993694,-9.168802,-6.091009,-4.576894,-8.464206,-7.541254,-7.236278,3.154410,7.597419,9.402820,-6.623834,-6.260187,-3.729532,-8.082131,-4.304933,0.674920,1.339715,0.070023,-6.875417,-5.122757,0.363706,5.455822,-7.005625,-4.727728,-8.856539,0.206584,2.610821,-7.423107,-3.447489,3.005984,1.454097,2.809664,-7.002490,-4.324671,-5.521667,-0.136257,8.611205,-0.235923,-8.380209,-7.128601,-1.102387,8.517066,7.726333,4.234040,7.154292,-8.464226,1.946154,2.878602,-3.711604,8.457077,-8.843264,-4.245093,1.675645,5.806696,3.873415,-3.483785,8.878861,3.372903,3.748986,4.701047,7.067331,-7.400645,7.228986,2.518983,2.294804,9.676563,-7.815665,-7.377226,-2.854381,8.797106,1.429697,0.187593,-2.106359,4.142063,2.193028,-5.590795,-3.589332,4.569193,-1.711549,0.567555,5.863514,-0.398782,-5.640395,1.998541,-6.057955,-9.380589,8.983442,5.598807,-7.245242,6.349378,2.974055,-2.807359,-3.939296,0.807480,-2.082802,8.824458,8.438203,6.214456,-7.995895,-7.124717,-3.495275,-7.525134,-1.619012,4.458709,-6.588109,-2.311895,-6.248902,7.483171,8.749167,8.144973,5.435474,0.749340,-4.499321,-0.576654,-7.106257,-6.377539,0.732782,-3.659523,-3.556199,-1.214818,-7.583769,-3.157069,4.761892,-7.238387,-1.296392,4.463429,-7.370406,1.680036,2.946516,8.408307,-5.426572,-2.911055,-6.375085,-6.534689,-1.623709,4.184279,9.176505,3.283312,5.646144,2.271716,-8.546879,9.140468,-5.271607,9.824162,-9.513955,8.883383,-2.607815,-0.379854,-8.257146,8.760152,5.551243,1.935312,-4.595307,4.398995,-7.464822,-1.162991,3.034153,2.862873,-7.104448,-5.439314,7.532186,0.171149,7.858173,-8.074700,-6.197658,7.427397,-5.462992,2.939868,0.069389,-7.744458,1.008547,-2.971047,-3.200987,-0.506666,2.123921,7.010441,-1.233027,-8.662438,-3.357586,8.442115,6.553858,-3.465821,-4.152304,-5.269789,7.373965,3.776960,7.391190,4.061646,-3.774584,-4.800480,-6.008761,-7.787190,8.508315,1.863011,-4.638785,-8.195099,5.391514,8.709607,-8.425741,9.448023,8.119386,2.185658,2.029575,-0.206433,-8.401623,2.657485,7.021200,-0.675914,-5.995560,-3.838736,-2.250535,-6.947116,-8.761591,6.689786,-2.866225,-4.228104,-6.415365,-7.889365,-1.293125,2.597299,-6.015110,-2.737390,-6.194104,-0.193989,-7.634666,7.773987,0.074192,-9.453418,-9.930995,1.460767,-8.965341,-4.121373,0.340405,-4.668397,5.067785,-3.630672,-1.591222,9.118448,2.269692,-3.201750,1.312330,5.288899,2.685010,-9.473603,9.641567,-0.517184,0.691366,-0.852482,-3.995927,-0.088791,-9.944274,6.904706,6.436332,-8.193532,-5.952592,-3.738883,-1.574940,-1.060894,7.022340,8.238345,-5.087435,7.005167,-0.867345,-9.069083,-0.249254,9.772681,-0.920458,-1.945999,0.202373,-8.130204,6.237404,4.335539,-9.039373,1.008391,-7.821087,1.865698,9.823565,-7.528992,-5.757013,-6.124159,-7.179924,-7.380190,-5.979585,-8.750710,6.339629,9.153977,-1.618063,-6.775018,-0.338721,-1.029949,4.191565,-8.409915,-0.823466,-9.536308,2.366514,-7.950738,-7.724269,-5.328630,1.267808,9.567359,-4.685860,3.058570,9.481929,8.195413,7.327714,2.919512,9.599878,5.920809,-9.091176,2.525616,-9.006070,3.766332,-8.934039,0.222187,0.541422,-1.174081,2.325280,-2.554603,1.251411,4.206773,0.954005,2.783918,-1.570691,4.820738,8.458307,-4.715306,-8.300603,-6.983195,-9.548652,-4.901224,-1.718075,0.543607,-3.752620,1.280327,6.209102,-0.395585,6.451633,-8.876075,1.452783,-3.144497,-1.163069,-5.539119,7.076206,9.409696,3.826539,1.352680,-5.715200,6.090544,-6.953471,-1.613952,1.301510,-8.685839,2.625811,-9.936360,-6.715728,0.390982,-2.114488,3.884456,-3.700558,4.713810,-2.397295,-9.044325,1.899673,5.663466,-6.215913,6.220234,2.196456,-3.647455,-4.806737,5.108382,3.770420,4.420957,-3.909733,7.501932,3.832902,-4.946630,3.894996,-5.686659,1.005075,-0.509999,-9.384839,2.466090,-3.025138,-2.957412,8.700080,2.622553,-9.406750,-2.376603,-4.734902,5.702218,-7.564839,4.031935,-2.284820,-1.014745,-4.389538,9.029950,-8.876903,-2.144679,-5.183063,-2.446251,-8.786972,7.567110,-3.998212,7.471650,4.594679,7.526120,6.689461,-5.789454,-2.788000,5.417215,9.549795,2.167736,8.295386,-2.583904,-0.874828,3.662848,8.380275,7.626547,-3.439204,-5.262107,-5.711313,2.305538,-8.685110,0.899879,-2.157472,3.426797,-4.939071,-7.628174,-7.911843,0.537796,1.451175,2.253755,2.958386,-6.760189,-2.783584,-2.476143,-3.643804,-5.883691,3.213546,-0.218014,-9.555659,8.992611,-3.072530,-8.991528,7.794055,-6.264729,5.698692,8.541508,-2.892680,-8.054770,-8.603967,1.044503,1.869253,6.866101,-1.535106,-6.865263,-8.685578,0.123241,0.750227,8.135082,9.358278,3.757021,-6.562020,-6.462416,4.656533,2.937207,8.996724,-2.666020,-0.855842,2.278692,4.776608,4.587003,1.469728,3.791926,-6.326294,1.163934,-6.214241,-6.766410,6.073696,1.832836,-1.268425,-3.283186,-2.869303,-7.582032,4.040674,7.696860,0.763116,-0.814008,3.405439,-5.038485,-7.467339,7.402776,-6.211262,6.150705,-5.878329,-1.190567,5.416343,-9.228454,-4.139533,-8.894308,-6.993354,-3.704310,-6.342725,1.651177,-8.540130,-6.973981,6.717648,3.461154,9.155765,-6.215949,-3.785317,-5.787327,2.606590,3.341619,3.936437,7.278621,6.097155,-8.502849,-0.761680,2.778618,0.239332,-9.896762,6.221705,-9.283265,-3.039105,2.367321,-2.895201,8.074802,-2.510149,9.245186,-0.829685,-2.863520,-5.658663,-1.862402,-9.458627,-5.626807,3.497927,-2.718743,-5.535523,9.113608,3.538516,3.283241,8.168539,-4.261832,1.740390,1.009071,-8.870507,9.873381,-1.693101,-5.111820,5.121152,-3.937783,3.656292,-0.820177,-3.959378,-2.744702,-0.723391,1.117894,-4.140840,6.960764,3.960816,-7.782859,-2.924599,-0.249011,9.065443,6.377728,6.937472,6.723594,9.813199,5.496455,8.742244,9.490115,8.062839,7.607338,-3.064031,-4.770390,-8.767083,-3.569221,-1.093232,6.472118,3.843822,1.025484,6.905732,7.464340,-3.167622,-8.136781,-2.246918,4.587671,-5.931000,-6.451637,5.797200,-3.549657,0.725952,6.568477,6.358898,8.662407,9.348152,-3.693788,9.202921,0.260325,-0.673783,5.910461,-3.675787,-3.658174,-0.099638,8.560269,4.418632,0.167169,-7.071167,5.767393,1.176377,-9.125569,4.037292,2.415556,-7.241349,-6.190868,-1.870258,-6.090994,-8.917876,2.352255,9.299641,-1.624445,-8.741326,3.681382,-3.315817,9.257916,5.140960,2.987128,-3.972761,8.553448,9.574902,1.195804,0.295444,-9.278920,-2.852041,-0.025374,2.339087,3.134035,-1.131118,-6.505896,8.903864,3.087463,-1.396358,8.225208,0.195926,1.426130,-3.659434,2.817356,-8.061667,4.047397,6.463856,-9.799149,-1.986978,6.002244,-6.938455,-4.560793,3.482633,-9.889638,-7.852384,-9.072232,-2.797444,-1.071850,-4.531185,7.339813,-5.206683,8.456641,-1.231552,-9.256369,7.988270,-5.594938,0.180638,8.684872,-0.469813,-2.903698,4.127071,-0.624851,8.225625,-2.752971,-7.399172,-8.591636,-0.354572,9.325818,-7.468894,-9.939802,2.293605,8.445772,1.841355,9.611874,2.726230,-8.951248,-5.342345,-6.337291,1.831179,7.122511,-6.571868,-3.276086,0.007152,-0.253345,6.900277,-4.649158,3.021318,-6.671662,-8.527881,-6.187491,9.096930,6.043354,6.574166,3.447660,-5.952066,2.970691,1.325252,-7.306804,5.631158,-2.767978,2.936739,0.134535,-0.774322,7.137776,3.642338,-1.846317,-7.486848,-1.305401,-0.057964,-2.739728,-0.116306,5.447196,-4.626036,-8.133256,-9.720424,-5.141453,4.204959,-3.372473,4.924505,7.361997,4.461374,-0.898474,2.793561,-0.634316,-6.980242,-6.268439,-1.407520,-1.519713,5.459005,-4.474386,9.702475,7.480419,-4.314139,1.422375,3.637548,-4.205662,-8.557385,-6.203407,2.126489,9.552313,-0.091335,-1.718952,-4.290359,5.930641,0.180178,0.080819,-0.253010,-6.081106,3.854538,6.014517,-9.719008,6.310077,-6.542415,-2.172010,-2.862224,0.162328,6.860297,0.020506,5.321930,-7.234425,-1.337971,9.953097,-4.096413,8.805580,0.986122,1.986352,-7.009483,6.998304,-8.219035,-0.011974,5.167406,6.694621,2.332974,-2.483322,0.785143,-0.366539,6.085496,4.171965,9.863280,1.224636,6.687076,-0.146715,3.190758,-0.961953,1.850569,4.857734,-4.416109,6.372947,8.305879,-2.237217,-3.968133,3.278572,3.102102,-9.366780,6.761736,4.821900,-1.663616,8.139237,6.667375,9.567593,-3.111962,-8.586856,-2.978004,7.190003,1.521942,-4.884630,-5.657801,6.657931,-4.238122,-4.503001,1.391696,-9.616996,4.105041,-4.932327,9.240697,2.148105,-6.528282,1.369132,6.376323,-2.573059,-8.694959,5.684650,-3.418556,-4.366556,-9.735426,2.073630,5.061760,1.988468,9.560973,5.787345,4.933867,-7.318071,-4.797552,-0.970244],[-3.327924,0.029658,-0.289057,8.252624,6.541763,1.926687,-7.319696,-2.051857,9.013895,-5.621218,4.798726,9.620519,-1.680730,-7.090087,7.789781,9.055777,4.020165,8.306896,9.055373,3.197933,-7.651264,-4.981758,5.080795,-2.766414,-6.138734,5.699900,9.647820,-2.931173,-7.422966,-3.261411,-1.586357,-0.189340,-0.336602,4.192469,-0.897600,5.443764,6.444400,-0.313730,-2.626750,6.739098,7.773258,-8.613348,-6.307717,0.237400,5.315624,-0.166997,1.778343,1.145792,-7.646287,1.650932,9.523437,-4.955535,-2.471971,5.291199,9.270118,9.035957,4.279954,6.104251,-4.736054,9.353423,2.023045,9.776291,-1.723427,-5.782354,7.668403,4.290316,-0.771881,-2.825151,-5.474924,2.061019,-1.956553,0.529439,-0.675906,8.187158,4.787450,-8.343404,0.603713,9.508363,8.777859,-3.387616,9.620736,8.737919,1.137212,-7.222209,-1.371431,-0.529692,-0.762117,-6.843666,-8.204194,1.494554,-3.042189,-7.772226,-0.242301,0.450920,-7.178833,-9.618372,-0.528700,3.501313,2.138121,9.907491,-0.397904,7.591737,2.132985,7.798209,6.272518,3.432648,8.996702,7.355847,5.632307,9.395296,6.754276,5.242129,5.278979,2.508141,-4.594025,-6.252694,-6.317967,3.058258,-0.023270,-3.310491,-9.609842,4.188129,1.762048,8.587638,-5.864072,-3.187939,-7.828276,5.171152,7.433762,4.824761,0.831556,-6.276369,8.466881,-6.458855,-4.976371,1.793997,-3.035511,-8.862601,-1.353147,5.143391,-3.096576,-4.881970,0.533844,7.403732,-4.042751,7.319402,-2.744732,-7.760037,0.863866,6.509970,7.464138,-9.882189,-7.969228,3.002806,-1.665077,5.202424,4.959139,-5.610383,5.307306,4.658855,-6.015533,3.766292,-0.381871,-6.855468,-0.138314,5.526982,-2.677879,-1.834171,5.788424,1.143672,-2.185245,-2.152606,-1.971805,-6.726633,-2.015012,-9.888604,-0.092448,-5.277891,0.655881,8.220062,-4.865644,5.230224,-7.466403,1.746391,4.350877,-1.857042,5.870003,3.262277,7.980670,6.419557,2.394139,-4.663202,-2.713880,-1.953627,4.953668,5.961849,9.646293,-2.242688,-4.359182,4.823335,4.199387,0.494128,-6.058656,-2.057936,3.653249,-8.656864,5.795266,-0.037759,4.049614,6.630662,-9.161496,-3.461533,4.116878,-1.583690,1.068809,-0.707600,5.859136,5.886917,-8.879173,6.178293,-5.666271,3.845600,-1.819080,5.994111,-9.075357,-1.276739,8.162868,-5.460813,3.715640,3.575831,-5.931629,7.311767,2.619360,-0.994421,9.700251,2.977124,6.159409,3.316207,5.015284,6.208722,-0.432688,-3.085484,-7.028165,-4.198296,2.399406,-2.045288,0.902976,4.842856,6.470943,8.452337,5.082907,-6.674423,2.526648,-7.997124,-8.833294,-0.513664,8.071440,-6.282973,-3.974036,-4.771243,-5.389077,7.081560,-0.804467,1.348538,-0.727905,-5.839481,4.838374,-0.787666,4.304198,5.739416,-8.969000,-9.954826,1.090345,-3.511667,3.610832,6.524299,0.939756,-8.002040,-4.003514,2.312582,-0.133363,-6.268307,-5.914010,-4.847115,-2.723855,3.224058,9.493157,-3.464664,7.246960,-6.171081,2.189769,-3.502818,9.298145,3.727391,-8.556129,-0.408734,-1.116817,3.506318,-7.829264,-8.492533,8.677044,5.051944,4.595970,6.194165,-9.517799,-6.251545,-9.927969,8.291334,1.767137,3.519792,5.433479,-1.126049,-0.034436,0.129688,4.179674,3.552303,4.365803,7.121780,4.877012,0.592078,4.440579,7.203556,7.268935,1.832532,4.080828,-8.029399,-4.548397,2.091978,-7.642613,1.314679,-1.928321,1.087599,-0.918357,7.990768,4.830812,6.120823,-8.840494,-7.719705,4.044011,-1.911216,-1.298988,-9.178364,6.571820,-3.497080,-8.649704,1.102781,-9.478801,-2.682265,3.232030,-6.702974,4.576557,0.054958,2.678325,2.191006,7.968997,9.075835,-0.793205,7.677230,0.928907,-1.349398,2.780758,4.460828,-1.845272,-5.618368,2.269375,-4.872615,8.410855,-9.040703,-1.692185,5.410439,5.573987,8.615540,-4.025642,5.001195,-7.444999,6.787869,2.392549,-3.878002,3.696348,3.406130,8.213522,6.360813,-9.403381,2.911621,0.190339,-8.428219,-8.026610,-4.578937,-0.628114,-1.959446,4.968152,1.884517,-5.491002,-7.072376,-3.654441,-3.841127,-4.794880,-8.827998,0.771884,3.283990,6.337503,9.593175,9.451448,-2.063455,7.467758,6.876821,5.397423,9.253869,-5.483799,0.352622,-9.746073,-8.132335,0.632764,6.074459,7.400223,8.917603,-5.512458,-2.161822,-9.646655,-0.494573,3.770654,6.249130,-6.824926,1.221726,-5.686702,9.583004,-2.095657,3.000685,7.745367,4.055910,6.427055,1.568780,7.592229,-4.208820,-0.323946,-8.274912,-8.333165,-5.105352,-4.339786,2.676948,-5.347444,6.415537,-1.105442,-2.064142,5.527363,-7.303411,-7.156491,8.943598,5.205758,-5.231899,-7.759670,-9.700493,-3.106611,5.027837,-1.411890,6.571656,7.925485,6.598493,-3.476104,6.411950,8.514256,-7.380872,5.474405,-7.539417,5.770732,6.091190,2.281780,-7.761780,-5.931470,-6.717347,-3.308930,-8.247423,8.238461,-3.671889,5.060765,7.957352,5.466575,0.720446,9.547213,-6.037311,-8.924565,-9.572965,4.120428,2.337882,-0.447249,-1.723059,4.602265,0.031509,-1.597989,-0.291709,3.411465,0.675833,-9.602036,-4.988755,-7.982975,-7.022503,-2.366603,-2.116455,-1.022788,8.869756,8.065509,8.347752,-8.763551,0.840886,-0.530073,4.906659,-2.444708,8.276613,5.625272,-9.643091,-3.406059,-6.301899,-8.828150,-8.051045,-6.231535,8.931432,8.763927,-1.860874,1.521623,-5.558374,-7.435529,-6.148634,-2.923231,6.462884,5.624419,3.000038,-2.152563,-3.383922,-4.429167,2.797423,-3.987287,9.725349,-0.186061,-2.685690,5.737459,7.662950,-2.924670,-3.622648,5.259975,-8.313525,-2.490366,-4.179741,5.892971,1.686011,2.603640,-7.207590,7.485768,2.129527,9.370546,-6.928784,4.356835,-9.074284,3.337159,-2.498566,-4.346261,1.973310,8.465643,-5.398556,-3.405307,-8.273537,-8.596488,5.419979,-5.559499,6.452741,-3.084848,9.217410,-1.530476,9.833932,-9.120176,-7.201395,-4.487786,6.383962,-6.496823,-0.160042,5.601420,-7.181188,5.112528,-7.318067,9.948762,-9.872377,9.814805,6.925265,9.452344,6.667025,-9.610188,8.254435,3.906804,-8.846794,-7.021506,-0.454530,-1.848339,9.377208,-1.807075,6.865680,-6.610809,-5.504137,9.168069,3.818927,-0.500582,7.387906,-9.607990,-0.306150,7.167476,4.432504,9.159359,-7.550738,5.985726,-2.812268,2.301559,1.673028,2.394226,4.497623,3.773080,5.508351,5.392301,-3.613878,5.287565,0.295406,-3.597761,-8.060494,-1.054292,1.018916,3.342155,6.473027,3.904071,-0.209514,-0.401951,-6.874753,-4.679062,-0.269273,-6.549394,4.393811,2.633213,-6.809492,-9.088246,8.536839,7.225984,-5.478526,-8.530607,7.180376,-8.001305,-9.394089,9.485192,-3.728516,2.780732,4.207078,8.666656,8.745788,0.172730,-9.768470,6.242232,-6.647525,-4.601836,7.432006,8.879696,8.815127,-4.900290,-8.826354,-0.546182,4.499639,9.589060,2.213860,2.538670,5.662546,-9.928569,-8.386186,-8.740882,4.531623,4.247412,3.702818,9.768041,-9.915396,6.818978,-7.348374,4.778074,3.012038,-8.836540,-2.205515,3.954085,0.298134,9.952258,8.376508,-6.393562,5.481052,4.637600,-6.908531,9.141357,-2.665139,-6.228476,-1.377370,-3.414453,-1.477640,-8.580365,6.753750,4.400149,6.013575,-7.194295,-5.940351,1.621478,8.984758,-2.810041,-7.217585,-2.670737,-1.859483,3.660004,6.530680,-7.609339,-8.642422,-6.520816,2.790724,-0.708196,-6.081549,0.379135,-2.031008,-5.120749,-6.514740,5.987859,-2.327672,8.931645,-4.277466,5.410076,6.962847,-5.180242,-9.393476,0.734991,-1.394566,5.579071,-6.621932,5.109492,8.120333,-8.478746,-5.528149,-6.466308,-8.396658,-6.256417,-2.009635,-4.449664,0.774694,-1.739579,5.485918,3.416659,4.253063,-1.199225,-0.167872,-7.399796,-5.287164,1.437960,1.393478,9.989576,9.759047,-1.639806,-6.655332,9.797617,6.829225,0.899325,2.387122,-0.820292,5.806472,2.967715,-0.547219,-3.939624,-7.186257,-6.747362,9.160231,2.011052,2.810161,0.869056,-5.084080,7.371448,-9.202742,-2.139066,-6.500776,-2.336578,-8.629107,6.121763,-9.807360,9.058363,7.910924,-2.152391,3.903999,2.830236,0.282237,-3.567021,-3.143097,-8.165789,8.166037,-9.290036,8.793253,7.670561,-8.406147,5.906462,-7.861576,-5.116329,-0.258455,7.636738,-4.306113,-8.864311,1.780687,-7.810777,-2.633531,-2.914017,9.773021,1.614462,8.680710,-6.300428,3.149687,-5.001531,-3.430587,3.939002,2.088327,8.216103,-2.083359,-4.931580,-4.733215,6.128176,9.996471,-7.074786,-7.152559,3.485753,5.943048,-0.961180,4.288372,-5.534437,9.864638,-6.708287,-7.265812,-9.143288,6.040635,-9.690505,1.915105,1.097170,8.819764,-7.824406,4.456994,-1.072383,8.697117,-0.524142,9.004584,0.132903,-0.076789,-6.127176,3.479862,1.037426,4.463053,-4.235208,1.703692,1.096569,-4.289749,1.122325,3.567833,-9.461630,-3.085695,-2.935366,4.466736,-9.627484,5.476611,4.339477,2.207107,-5.110968,-9.540642,-4.927596,-8.778343,6.774988,2.357267,-4.126901,-6.441350,9.865469,1.701604,-8.554879,8.399313,2.109388,9.658830,0.291090,2.788405,9.130324,4.343801,-1.102416,5.967209,-6.607059,-6.514980,-6.363924,5.698121,3.457087,7.189735,9.704374,-0.689568,2.583851,1.239005,-2.918486,-3.766822,6.533688,5.616838,3.924739,8.024505,6.999346,6.858774,-1.823710,-9.932927,5.255699,2.062667,-8.497699,2.174188,-1.007619,0.713912,-7.236093,-6.636624,8.353949,6.700763,5.274447,-4.501329,-1.255563,-3.571903,-0.207220,-0.372069,-5.148350,-3.216836,1.236967,-6.893886,1.801294,-9.474875,-8.970248,7.950809,7.267748,-2.931168,1.104610,3.916154,-5.426871,-9.645328,-1.367106,3.830999,-9.683375,-7.678636,1.201103,8.840065,-6.416715,-1.084982,7.481055,-2.376660,-8.380015,0.507053,2.584060,6.803042,-0.506293,-4.021551,-4.577757,1.730858,8.826395,-0.318669,-3.524310,7.565730,-3.103317,4.077335,2.741802,-3.295723,6.686736,0.142634,-3.387555,-1.330450,-7.649098,-4.825289,-6.194020,-3.562399,3.687450,0.095108,-3.206883,-6.681111,-5.229881,-7.721186,5.220171,-8.562320,-3.330084,0.655710,-6.625597,8.138204,-6.097816,-0.579372,0.008078,-0.886433,2.372842,0.293240,1.860940,-9.732031,7.569211,7.266289,0.735037,1.595572,-2.468704,0.043948,2.426627,0.661863,-1.461011,-9.481352,-9.242782,-6.357119,-5.400781,-5.958974,2.357925,-6.304745,1.642125,0.047107,3.364171,3.484852,6.083556,-6.781125,5.046364,-2.854496,0.142178,-3.612673,4.752057,-6.631554,-0.473846,4.337926,4.799687,-0.878869,-8.831172,-6.904285,7.454929,7.080469,-3.027236,9.310755,3.064811,7.519006,-9.429029,5.228601,-8.288080,-5.394837,-2.075720,-1.024129,5.788734,-0.766398,-4.289052,7.170842,-7.066306,-5.194281,-6.956767,6.595989,7.171534,2.210690,-7.281246,5.151869,-8.973611,8.493755,-2.237959,-0.178658,-5.127283,4.702412,8.530151,-6.562353,1.237305,-6.310551,-7.018021,5.579516,-7.205602,-4.916281,9.047771,6.671779,3.444388,-8.653979,-7.702227,6.870525,-1.960285,7.733158,4.315406,8.146845,-9.697341,-2.557030,0.984789,-5.671202,-2.005072,-8.439637,1.113667,3.323590,-8.347174,-6.531913,1.824541,-9.571817,-3.484357,3.069448,6.071261,-0.695331,9.917241,9.214264,-6.562437,-6.521598,-9.420189,8.580645,6.014042,-7.355118,-1.103972,-5.902870,-7.868698,9.299638,1.467738,-7.332492,-6.113194,-9.588031,4.454026,-6.995545,-8.625023,8.317455,-0.660859,-1.866596,7.967505,2.665883,3.344159,3.129029,-3.777127,-2.207920,-9.999999,0.160336,6.461295,-1.490687,9.523097,-1.956694,2.933272,-6.687724,-7.711224,7.080665,0.342235,-6.649884,6.152840,-4.295167,-2.577778,7.772742,6.290491,1.010463,-0.540621,6.790620,5.009451,2.487095,1.747008,-7.615499,-2.845424,-4.812572,-6.815346,-7.794930,-0.562423,-4.091302,8.180778,8.084846,-1.465637,8.595958,-7.327010,-4.105798]], dtype = "float64")#candidate|8692|(2, 1144)|const|float64
call_8691 = relay.TupleGetItem(func_343_call(relay.reshape(const_8692.astype('float64'), [16, 13, 11])), 0)
call_8693 = relay.TupleGetItem(func_346_call(relay.reshape(const_8692.astype('float64'), [16, 13, 11])), 0)
bop_8700 = relay.divide(const_8692.astype('float64'), relay.reshape(call_8691.astype('float64'), relay.shape_of(const_8692))) # shape=(2, 1144)
bop_8703 = relay.divide(const_8692.astype('float64'), relay.reshape(call_8693.astype('float64'), relay.shape_of(const_8692))) # shape=(2, 1144)
output = relay.Tuple([call_8660,call_8669,const_8670,bop_8700,])
output2 = relay.Tuple([call_8661,call_8671,const_8670,bop_8703,])
func_8713 = relay.Function([], output)
mod['func_8713'] = func_8713
mod = relay.transform.InferType()(mod)
output = func_8713()
func_8714 = relay.Function([], output)
mutated_mod['func_8714'] = func_8714
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6676_call = mod.get_global_var('func_6676')
func_6677_call = mutated_mod.get_global_var('func_6677')
call_8774 = relay.TupleGetItem(func_6676_call(), 0)
call_8775 = relay.TupleGetItem(func_6677_call(), 0)
func_8173_call = mod.get_global_var('func_8173')
func_8175_call = mutated_mod.get_global_var('func_8175')
call_8776 = func_8173_call()
call_8777 = func_8173_call()
func_8246_call = mod.get_global_var('func_8246')
func_8248_call = mutated_mod.get_global_var('func_8248')
call_8787 = relay.TupleGetItem(func_8246_call(), 3)
call_8788 = relay.TupleGetItem(func_8248_call(), 3)
func_7211_call = mod.get_global_var('func_7211')
func_7213_call = mutated_mod.get_global_var('func_7213')
call_8795 = func_7211_call()
call_8796 = func_7211_call()
output = relay.Tuple([call_8774,call_8776,call_8787,call_8795,])
output2 = relay.Tuple([call_8775,call_8777,call_8788,call_8796,])
func_8809 = relay.Function([], output)
mod['func_8809'] = func_8809
mod = relay.transform.InferType()(mod)
output = func_8809()
func_8810 = relay.Function([], output)
mutated_mod['func_8810'] = func_8810
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6704_call = mod.get_global_var('func_6704')
func_6706_call = mutated_mod.get_global_var('func_6706')
call_8814 = func_6704_call()
call_8815 = func_6704_call()
output = relay.Tuple([call_8814,])
output2 = relay.Tuple([call_8815,])
func_8818 = relay.Function([], output)
mod['func_8818'] = func_8818
mod = relay.transform.InferType()(mod)
output = func_8818()
func_8819 = relay.Function([], output)
mutated_mod['func_8819'] = func_8819
mutated_mod = relay.transform.InferType()(mutated_mod)
func_8713_call = mod.get_global_var('func_8713')
func_8714_call = mutated_mod.get_global_var('func_8714')
call_8838 = relay.TupleGetItem(func_8713_call(), 2)
call_8839 = relay.TupleGetItem(func_8714_call(), 2)
func_6772_call = mod.get_global_var('func_6772')
func_6774_call = mutated_mod.get_global_var('func_6774')
call_8840 = func_6772_call()
call_8841 = func_6772_call()
output = relay.Tuple([call_8838,call_8840,])
output2 = relay.Tuple([call_8839,call_8841,])
func_8856 = relay.Function([], output)
mod['func_8856'] = func_8856
mod = relay.transform.InferType()(mod)
output = func_8856()
func_8857 = relay.Function([], output)
mutated_mod['func_8857'] = func_8857
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7885_call = mod.get_global_var('func_7885')
func_7887_call = mutated_mod.get_global_var('func_7887')
call_8858 = func_7885_call()
call_8859 = func_7885_call()
func_529_call = mod.get_global_var('func_529')
func_533_call = mutated_mod.get_global_var('func_533')
var_8866 = relay.var("var_8866", dtype = "int16", shape = (720,))#candidate|8866|(720,)|var|int16
const_8867 = relay.const([8.406000,-1.392230,-3.199727,-4.759285,-8.211883,-9.087433,-4.736572,-8.048117,7.734580,1.783291,-5.122572,8.099714,4.378433,-4.545576,0.516323,-8.023722,7.155347,2.504205,5.198135,-8.675089,-7.286925,-6.062970,-0.341405,5.674822,4.598572,-2.958095,6.988133,-8.555133,6.261671,0.328353,-0.954331,5.878595,4.593173,0.182392,-3.392568,-4.871344,-6.855984,6.951041,8.470367,4.061141,9.531609,-8.636266,1.284782,-7.753173,7.589417,5.934435,7.939248,1.119069,-3.526517,2.561825,-2.926631,0.373954,7.074084,9.289075,-9.658552,5.730904,-9.015551,-4.447950,-4.892953,-2.138994,-5.906063,-7.145444,-1.994380,-5.885680,-1.870970,9.146706,3.878403,-6.895568,8.343620,8.423643,-5.610038,-4.349793,-6.554445,-6.043795,3.016076,-8.174823,-7.348324,6.910592,-0.175276,4.859909,9.830117,-7.993503,-6.944643,2.550987,-0.535894,8.069123,2.120568,-6.321852,-5.549068,4.069127,9.183891,9.808797,-4.959583,4.454752,5.307308,3.267999,9.135678,7.875261,-0.366745,-7.759295,-7.644622,6.935472,9.736382,1.782031,-0.116531,8.522215,6.297406,-9.490508,0.833721,-1.781815,-6.883527,8.803603,5.603132,1.323574,-2.584583,2.643953,9.791397,-2.909508,-9.119124,-3.618791,-4.889603,-7.735779,7.012356,3.181278,-6.471346,9.512477,-0.402658,7.591825,5.811008,4.593862,-5.406463,-2.731057,-1.290299,-2.541127,7.012399,1.782277,-9.411784,1.536178,-6.883602,-1.713636,-1.962047,-9.132172,-1.022900,9.521949,-9.604638,9.620909,7.588446,8.053483,7.954178,-6.175743,-9.946804,-7.114224,3.984831,-2.768120,5.656204,9.390562,-9.842427,-2.028142,2.201135,9.310708,-1.172436,-3.471526,-0.364309,0.545703,4.773471,-9.535165,-1.279989,-3.382183,-4.931348,1.574933,2.874635,-7.556024,-6.150983,-9.713848,-0.554589,-8.671731,0.116323,-9.608809,-0.736690,7.321590,9.359112,6.989573,-5.140531,7.389358,1.348649,-5.218615,9.369908,-7.367967,6.443280,1.539238,-7.643018,8.869903,-5.966398,-5.687096,6.910457,-7.813638,7.901575,-7.734882,0.720239,1.783628,6.879876,4.261305,-5.498883,-9.155752,2.607344,2.798873,9.430446,0.718993,-5.364482,-4.509825,5.459771,-2.970191,6.396774,-6.174083,-5.433285,3.872912,-0.895615,7.610783,-8.183060,-0.628690,2.275260,-3.978774,-4.761529,7.733645,3.273141,1.971033,-9.438671,1.196036,-6.553423,6.150121,6.969015,-2.033696,1.873995,-4.400258,-1.950623,0.907602,-0.515900,-8.278922,7.539242,0.545028,-0.175576,9.251056,-5.697152,-1.053271,8.300475,-6.672008,-1.719527,-8.229462,-3.638694,9.842247,6.351128,-7.915804,-7.293099,7.625123,-8.766567,-3.912441,0.628817,-2.248828,1.665313,-9.133082,-3.901914,9.243155,-6.542336,-4.333683,3.132286,0.493426,7.163962,-2.588577,-1.694080,7.549806,1.775221,7.927147,-2.542352,-8.936454,-6.405183,-7.795466,8.907113,5.198785,3.516788,-8.973762,-7.074025,1.647843,-5.208124,9.243871,8.873628,1.271968,8.922984,1.924361,-9.888237,6.083828,2.640884,8.748408,0.608934,-4.097523,9.487180,9.569317,-9.118126,1.880583,2.107041,5.547775,5.246473,2.169797,-4.317873,-7.828775,-8.953108,4.302048,0.627726,0.401582,-5.743477,5.371501,-7.620192,7.874268,-2.801634,5.785435,0.682190,-1.732882,-6.454737,1.643023,9.512688,8.418295,6.471095,9.997391,-2.292147,-5.772332,-2.089381,-8.064275,-8.918951,3.202920,-7.735943,-1.168776,5.174772,-5.461819,-8.732215,-7.170019,-1.387160,-4.328115,5.197629,-2.467120,-7.876684,-6.863497,2.260167,5.655192,-9.115859,-4.555185,-0.591848,-1.148089,7.905722,5.121172,4.326918,3.148889,9.587717,7.901758,1.148943,-3.258539,-4.263052,-3.447045,1.514043,-0.995348,-1.114808,-2.891090,6.180042,2.443323,-8.867008,5.028352,-9.482213,0.786114,-3.167735,-2.943676,-1.748720,9.057105,5.619894,-0.046600,2.748098,-3.932412,1.828962,-7.899968,-6.768183,-6.946757,-1.588808,-0.717406,-7.627661,3.420708,-3.146761,0.511450,-9.790988,-8.164865,-8.490185,7.641313,2.314132,-5.781157,-5.692357,2.197842,-3.821037,5.529150,3.732133,5.767451,0.171187,-8.445043,5.593651,4.749818,-9.366085,4.750691,-4.962665,4.545850,3.318732,1.066255,-5.542080,-5.028573,-9.488122,-5.490614,6.657036,9.756922,-3.678190,-3.314024,5.676369,8.882556,1.042804,5.679473,3.554140,7.913932,-0.280983,9.993213,-1.026792,2.772132,0.647022,-9.626279,6.642776,-1.267891,-7.178794,9.115112,-0.004154,6.827796,-7.236318,9.303795,8.502876,-6.587320,3.449636,8.764619,8.694470,-7.194586,-8.916363,2.572009,7.713870,1.514848,-3.139373,3.851135,9.729231,9.031646,7.335085,-1.513851,7.841855,-7.684190,-0.941772,-7.408919,-3.566755,-6.256730,-1.392931,0.003470,9.100283,8.809526,5.566643,-9.887940,3.728831,-7.034263,9.979851,-5.342888,0.436033,6.635402,-4.018301,1.476782,7.793577,6.919836,3.544392,2.689662,9.374839,1.003569,4.807829,2.168872,8.320233,-8.929219,-5.399885,6.769598,1.295618,4.190859,1.183146,9.869735,7.697824,-4.761313,0.941696,0.823956,-1.497418,2.500348,2.098945,-4.010756,1.761767,5.150272,1.980643,6.164349,4.435941,-3.802491,-7.801687,9.165839,-1.251177,-1.510732,9.098274,-9.297442,-7.552596,-9.515963,8.694611,-3.824365,1.267200,-0.525894,1.096686,5.723113,3.863966,3.977646,5.751041,3.600031,-0.244119,9.173439,1.478161,0.929822,-6.294652,0.464698,-5.978518,-9.092831,9.496844,0.351941,-6.074108,-6.088018,-9.646588,4.698800,-5.154239,-6.115966,4.865773,0.238111,6.454081,-8.331208,-4.850267,4.793852,-3.284787,-0.615542,6.243479,-3.952327,-6.629669,7.767629,-1.130910,0.780321,1.766484,6.069015,0.091378,9.817414,6.816752,-8.485544,-6.209004,-5.237563,4.333457,-0.756806,-0.057823,7.811729,6.018784,-7.685607,0.202400,5.895359,8.038197,8.547903,3.992199,5.708179,3.612838,-1.191117,-6.267420,-4.002018,0.786119,-4.813922,3.895618,-0.142095,-0.847005,-3.857402,-0.947089,-4.157038,-8.766830,2.185494,-7.205295,-7.153549,-4.037673,5.334912,8.912565,5.799034,7.765335,5.070374,7.226372,8.497474,-9.177796,8.461524,6.932567,-9.844232,-9.154316,7.321504,-8.759595,-9.081204,-5.289931,5.763161,4.342378,-6.114592,-9.988412,5.581924,-8.239139,0.618153,-1.273800,1.538901,-0.723334,0.475423,3.540262,-1.456300,-4.428074,0.723256,-0.102709,-4.678573,8.108829,-2.392340,-2.022581,1.459999,7.830409,8.941548,4.821764,4.485426,-7.627614,-1.072825,-3.529694,-7.879785,5.155947,9.681787,-0.450597,6.246904,9.790929,-8.603642,0.429828,-7.349177,-6.282728,-6.094226,-1.963973,-4.220186,-6.732316,9.432796,2.918878,2.117045,2.635461,-2.807429,5.220551,4.289931,-6.903707,-1.613242,6.514961,-2.122116,5.302325,5.445351,-4.034981,-1.189492,2.679957,2.106982,4.789318,7.471652,-5.690506,4.333432,-1.698969,-1.913425,-2.066195,-2.894867,5.259191,4.710227,-6.727227,-1.114845,-7.943829,4.995499,-9.120617,-9.039566,-1.527710,-5.474663,-1.180118,-4.186083,-7.940806,5.846830,3.309650,-2.458981,-8.235696,3.374225,5.122840,9.388813,7.288945,8.074202,-7.111423,2.749382,5.112674,8.419913,2.770623,-0.590563,-0.826271,-2.267528,-4.444430,-5.716716,5.536973,0.900197,9.756806,-0.084285,6.532051,3.547730,-1.628751,-5.110342,-5.129585,1.859953,4.262687,-8.772327,1.583421,-0.966772,7.653358,-9.729376,-5.576220,3.695766,-0.179491,-1.146460,0.014835,0.126521,1.559188,-3.345198,6.336068,7.095860,2.104408,-6.462796,2.079585,-8.127401,8.046397,4.590684,-3.798998,-2.636434,-4.891111,1.815955,-7.397474,0.073393,-7.383365,6.636119,6.353763,7.703760,-7.490619,6.342176,-6.255050,0.853033,-2.044794,5.274742,8.897092,-7.155802,8.550247,-2.422179,-4.580617,4.477812,7.038999,2.708621,5.068512,0.145169,-5.133952,8.437685,0.684328,0.070906,9.083280,-0.519358,-2.264674,6.558464,-3.483650,0.199116,6.647137,-1.858418,0.339390,-1.486168,-2.940900,6.502073,-7.211351,6.561895,6.323187,-6.403865,0.556583,8.031461,0.717529,9.888798,-8.859771,-4.003732,4.767883,-2.899318,-2.568721,-8.159685,2.553244,-1.670161,-4.019546,9.005563,-9.391855,2.995061,-5.423486,6.379108,0.873680,-1.030330,8.777003,5.092817,6.672376,4.009639,-0.947473,-0.688053,9.300219,-8.150663,-3.624021,9.812984,8.265436,-1.341606,-9.168945,7.570201,2.164509,2.549383,-7.944696,6.230722,0.380058,-7.585369,-1.325579,1.896206,2.148643,-9.164050,2.457415,-6.015866,-1.522464,-3.582798,-3.044920,-2.932906,4.495569,-5.441969,-4.416711,5.548459,-6.206982,-1.543758,-5.089982,9.232681,9.152902,1.596397,5.640175,7.933670,3.207303,-3.469017,1.328330,1.784180,5.658771,-9.205552,2.678655,1.160965,1.295442,7.521121,8.657743,5.581327,-0.788381,6.796084,-8.738641,7.952944,-8.711560,6.054712,-0.790990,0.373406,-1.711836,5.123610,7.445956,-8.823492,-9.221342,8.572271,-9.808605,-3.002541,1.398898,-1.679045,-8.651771,4.005808,-5.726549,-2.634034,3.065408,-5.992507,-8.585011,-1.964936,-8.399039,-6.509464,-9.671751,-3.912632,0.333447,0.772019,-5.762514,-2.892065,3.050034,1.733743,2.856435,-1.129676,9.338864,-6.157191,-8.084063,-9.382216,2.521519,-4.416336,-8.599858,-6.580322,0.686229,-6.082975,-2.610634,5.828374,6.574651,0.937685,-4.763317,1.994345,-7.898218,3.520110,-8.790726,6.316605,4.630598,9.705616,-6.847252,0.473346,4.786792,2.294021,-5.292392,0.576329,1.688147,-5.595637,-1.512726,-7.119873,-7.204547,-4.492312,7.920158,-7.018499,2.932724,-4.199878,-1.742888,9.429359,1.343261,5.378126,6.874537,0.879741,0.359945,6.000129,-6.666105,-0.807751,6.161750,1.650402,-1.285645,3.738790,-3.279033,7.811604,9.876220,-4.828724,5.884217,8.962015,6.287038,6.685473,-3.914557,-1.848983,-1.124701,8.939721,3.782879,-4.682755,9.684497,3.859167,1.488213,-7.835337,-0.558895,-4.759095,-9.278177,-7.524537,-3.764295,-2.836053,-8.992847,0.461110,0.014408,2.887739,-2.571710,-2.527297,6.748865,2.757354,-9.862835,-9.204735,-8.329059,-7.279763,-7.389917,-7.694195,-8.547516,0.518345,-5.921157,-9.324135,-8.953146,-9.020189,2.777745,-8.388371,0.740540,-7.418512,7.107553,-4.067457,5.424831,-4.324759,7.535715,-7.367208,1.665735,2.229578,9.272955,5.966165,7.131118,-8.091851,-2.242628,7.649652,-7.804821,1.331200,-4.747005,8.241204,-1.696094,2.912715,7.735652,5.013995,-9.607642,-2.999166,-0.429706,9.976694,6.243826,6.812212,-7.631981,7.911972,-8.581785,-1.951894,-3.485814,-0.123590,8.967173,9.023226,9.937420,1.304659,0.298888,7.444180,7.711081,7.766310,-4.213150,-9.940305,3.171266,4.154428,-7.066069,0.810645,-0.229660,2.402181,2.975078,-9.633410,7.331420,-4.726887,8.451018,9.768740,-3.008110,4.256261,8.399529,8.318118,-2.138030,-4.077262,-7.320366,1.002136,5.533414,-5.760710,0.884209,1.945795,-7.717908,9.910115,-3.519178,-1.157831,6.015824,4.146589,6.588645,-6.624593,-4.153743,-5.078998,-7.654717,3.724107,-2.013766,-1.484080,-3.950229,2.705237,-0.204627,-7.762831,3.367803,4.412173,-6.797185,1.585582,-7.040342,9.487618,-1.633341,2.187389,-3.982945,-8.096992,2.024521,-1.341404,-5.637978,-4.348134,4.826540,8.311708,-6.851829,5.957465,-6.131379,-4.056228,-7.882629,4.283285,-3.061301,9.174784,6.040981,9.624809,1.880307,-6.082347,5.806707,-8.059051,6.724903,8.040427,-7.420870,-3.267799,3.701721,2.894690,4.452732,-1.828888,-5.217715,-5.638466,8.021924,-1.378415,4.589859,8.776430,5.210612,4.279046,8.445063,-2.669674,-4.227138,-7.659216,-8.480351,3.816932,-2.796267,7.673401,-9.322993,-7.871738,4.969225,-0.112875,4.560824,-4.980794,4.909451,5.154005,-8.977691,-4.284045,0.348861,1.971525,6.298878,6.681959,-8.920672,-0.739156,-8.522744,8.169997,0.984550,-4.919216,3.780493,1.184199,1.080468,9.245379,9.331811,-0.883629,8.619724,-9.454890,-6.606860,-8.778422,-8.188546,9.958637,-7.283525,-7.832443,-2.314933,-3.680677,3.688205,-8.417871,7.492270,1.315732,-5.877384,0.849260,7.959922,-6.286977,0.075295,-8.635985,7.303848,-5.954521,-1.042900,6.941587,9.482649,-8.496668,2.667368,1.402036,5.314966,7.731897,-6.445251,5.611171,-2.068303,-9.871697,-3.631475,7.668542,-5.688564,7.291976,9.861506,-0.018386,9.509431,7.388704,0.874639,2.923510,7.733905,-1.369243,1.784423,8.599000,4.658551,9.258905,1.060285,5.439046,-6.043881,-7.738620,5.048477,-7.054583,-3.887745,-8.221035,1.950369,-3.079276,-3.836201,-2.951695,-0.283682,-0.184133,3.289312,0.735474,-0.506484,2.719793,-5.874579,-0.494729,-9.175731,-7.007276,3.759923,-1.974774,-4.922187,2.780197,-8.618777,-9.779356,-0.200624,-6.804366,-2.539454,-6.215094,6.602170,4.763321,1.439937,2.516298,-2.009394,-4.262029,-4.439408,-2.427120,7.246194,-9.242228,-3.601380,-9.365487,2.217894,-2.149874,5.064664,-9.159724,-1.755805,-2.048415,-8.951273,8.349410,9.499283,-3.008228,7.076509,-9.366615,-9.084830,-9.332118,7.345124,8.284919,6.457404,-9.516899,-5.219131,8.618607,-8.952616,9.897697,-4.630511,8.821387,-1.529759,0.468549,1.564430,3.390988,-4.775756,-2.076765,-8.013250,-3.465729,1.503114,-7.672429,-9.910281,1.640936,9.620720,2.250276,3.611942,9.406138,-4.894099,7.112672,-8.685857,3.889274,-6.162809,-5.224591,-6.027767,5.603602,3.173289,1.669394,2.096651,-7.187233,1.486708,-3.973177,7.791242,0.502879,8.627200,6.013396,5.797042,-6.665018,-5.510535,-0.754262,-7.701435,-6.892126,-6.552738,6.974446,-3.591347,-2.076077,2.765910,0.311758,6.070364,-6.019817,6.386202,-6.848654,-5.120733,6.607573,-1.367208,6.421994,4.515018,-7.121876,-7.962299,2.257097,-0.044756,-0.646585,1.384770,-2.478226,-3.570991,2.414515,-4.066276,-2.929690,-7.494561,0.463330,-9.486194,8.134230,-6.150560,3.191592,7.097265,-5.835718,-4.621834,0.268681,-8.064323,-3.776161,-5.542347,-0.425142,-6.175711,-1.103758,-3.648457,0.509312,-9.465862,-3.278208,-4.189094,2.606902,3.534467,8.737830,0.543133,1.051265,-5.989101,-3.181539,3.318533,0.078575,-1.724405,-8.182276,4.528655,5.436017,1.844274,2.272266,0.082356,0.532168,-9.423309,-2.333729,-1.530669,7.295329,-0.256487,9.249118,-8.263251,8.391945,-7.417195,-2.956149,7.972163,-8.019056,9.087525,-2.092396,-9.858804,9.684573,7.777791,-4.445831,2.670701,-6.196173,-0.692699,8.163836,8.290803,3.853426,1.515760,5.374783,2.568626,9.907380,5.595934,0.867247,8.843364,-3.455778,-7.942382,-7.525705,-4.867246,3.061810,0.079927,-5.851412,1.345285,-6.746767,1.195373,0.968461,5.949758,3.262201,6.175199,6.599894,-9.402536,8.422882,-3.049756,-4.924718,-2.095192,2.442881,2.283651,-9.224046,3.089242,9.320606,8.917423,8.303851,8.076129,2.316746,3.507808,7.978823,0.611743,5.477942,2.233783,-4.614123,2.723074,3.334424,5.196486,-3.174982,-6.163960,5.968807,-0.924195,5.436270,-8.797829,-1.224874,1.103196,8.342765,-5.955279,-6.280523,-1.718134,-1.804066,3.087411,-2.535405,3.230716,4.968771,-5.283937,8.211702,-7.633788,-4.616710,-5.585185,-0.487529,2.992514,-6.901505,-4.228383,7.138736,4.949418,8.015131,2.507703,-4.891785,-7.575474,-7.031134,-9.009837,9.509242,-9.339927,9.465847,7.089243,-4.680249,0.844650,-8.323525,-4.951267,1.838342,3.174841,-8.519984,-7.727659,-7.900784,-9.249924,-9.398722,-5.950010,1.845957,8.638672,7.089153,7.873212,7.217860,-1.703926,-6.360337,9.947019,2.894124,-5.546204,0.594862,-2.246201,7.791946,0.765917,0.464796,-4.420083,-6.256861,-7.924682,-7.294143,-2.016107,-5.278072,1.220246,0.121642,-6.600115,-4.296427,-7.445351,-5.431749,0.004492,9.393752,7.720246,-6.362355,-8.901854,9.588585,7.555485,-6.638957,-8.498070,-2.803448,1.136616,-6.318479,-4.402276,9.027695,3.782897,7.816994,8.296566,4.341674,-8.025088,-4.552471,-7.514898,5.548892,3.503590,1.020908,-2.694459,-6.254786,9.470297,-3.831555,9.478384,-8.743344,3.754181,5.901338,1.527415,5.318993,-8.564011,-2.463278,4.891028,-2.619764,3.172763,-9.259799,-6.870273,9.520898,-8.107089,3.745196,4.828684,-1.037718,-9.348387,-3.927106,-2.105746,2.188413,4.117177,3.663104,0.517559,-7.850868,-3.053305,-0.451983,9.227213,-7.163972,2.192911,3.753995,-3.672482,1.670411,0.111683,-8.193124,1.218064,-0.523708,1.746587,-3.089678,-8.864287,7.363355,0.876865,9.397263,4.888978,-3.902701,5.251389,-9.169520,3.741957,-4.976291,7.189095,-8.894464,-6.029864,9.628634,7.144990,-2.537949,-3.882759,-4.378043,-0.156982,-8.967315,2.839117,-1.508980,-3.408555,-6.681846,2.040163,-2.475003,5.630531,1.553107,-0.630032,5.867449,-8.302960,1.875751,2.613916,8.055017,3.843740,-8.184281,-7.484797,0.280533,2.446631,4.534398,8.780883,2.685637,-2.913420,-4.092067,8.869363,-3.946959,-1.791605,0.989056,7.148848,2.701288,-1.853810,-8.396212,-2.610394,-2.407954,3.014334,-8.506723,3.511802,-0.608486,6.161987,-5.411748,-7.478000,-4.161583,-8.513571,7.760781,-5.315356,-6.840804,-9.724451,-8.090252,6.622635,-6.598910,-0.570697,6.019546,-5.749804,8.231490,-2.833342,-5.286781,4.543653,6.204593,-9.689996,3.899766,6.979577,-9.529735,-5.910233,7.567341,0.417634,1.314047,-2.586519,8.683173,-7.265467,-5.418330,6.704090,1.566801,-9.886355,-3.512791,7.053067,4.475651,-0.995222,-9.152767,-5.168080,-4.152403,3.289242,4.996379,-8.936418,-0.942238,-8.383710,6.564375,-1.212349,-7.289260,-3.198785,3.381312,-1.916645,-2.123438,-0.014934,-4.442786,-0.085993,-6.052146,-6.916645,-3.416053,4.936259,1.508890,2.830355,7.126421,9.078112,-3.004687,-4.006610,-7.840952,2.111995,9.661737,4.221041,-1.588081,-1.469114,-6.300917,9.062016,0.898788,6.745050,-5.118640,-5.866418,-9.718854,1.542329,6.144181,3.558067,-4.678811,-5.238211,-2.803902,9.571160,-1.143497,-3.702496,-5.280047,9.577132,-1.605354,-6.047786,8.222950,-5.534996,0.859564,1.530298,1.487280,-3.023998,7.802250,-3.983368,-2.745035,-5.069929,6.708762,8.614305,-9.567620,-1.824047,-2.254546,5.084204,5.902852,6.999044,1.445884,2.168824,8.987196,2.515067,-0.884488,7.587945,7.431515,2.780976,-0.387698,7.252141,8.051598,1.135192,-0.948834,-6.673956,-9.462102,-2.206137,-5.810204,-6.999770,9.195651,-8.781370,4.736151,2.427482,4.838271,-2.312128,4.189245,5.335984,4.929818,-2.647720,9.414804,0.530585,1.333343,-0.834178,8.553396,4.953877,-7.851999,-5.393371,0.054501,-9.048741,4.156943,-4.532357,-4.305043,4.632335,-7.149019,-0.723485,-5.087103,1.872663,8.023402,4.700465,1.690835,-6.846680,-0.013980,0.995808,-4.369369,9.891622,-7.840098,-5.017066,0.310716,-4.517728,-5.589348,9.422470,-0.677270,-3.758204,-9.753148,-5.598906,-0.044088,9.918432,-4.950556,6.620272,2.050339,-9.037970,-3.783581,-3.811834,-5.364000,-2.082402,6.673313,-5.051518,-5.440060,-2.659255,-5.753558,-9.866105,9.919300,-8.572013,3.612703,-0.284479,-5.478474,-6.355327,4.927804,-4.741062,-3.353365,-4.160620,-8.552771,2.793528,3.974357,-6.764828,3.945420,8.033806,-0.792076,-6.023960,1.395277,-0.316655,4.064129,-9.442468,-5.946973,-6.922998,0.730509,-6.450991,0.921931,9.638443,1.627957,4.644706,-8.369810,5.609736,-2.757987,-4.057633,-0.074777,7.407066,-9.499827,7.088054,-7.371066,1.302041,-4.410760,9.476547,3.346548,7.808572,-5.483847,9.919613,7.481389,-6.220552,-0.323707,5.189720,8.126358,-4.054824,-8.675657,-7.755835,-1.178310,0.548701,-0.458789,-2.140117,1.182975,-2.957588,-4.040431,-3.371277,3.406130,1.343365,-1.545043,-0.889959,5.084539,6.398930,-2.263825,-2.659776,9.135294,-8.314113,8.524487,5.777708,-6.196425,-7.543993,-3.678917,-0.072062,2.146807,0.851205,-8.921418,-8.118454,2.771908,8.098739,2.628354,-7.362142,1.317983,-9.535685,1.839722,9.358659,-9.630533,4.475094,8.297126,-5.650805,4.597691,-1.805107,1.163622,-6.956283,-3.199792,4.910709,5.442482,-2.890936,-6.276483,2.895143,-8.231534,3.305149,0.212218,4.364048,-3.506395,3.868352,-3.787828,7.089684,-9.396257,-1.189662,2.074590,0.545817,3.488813,-4.946306,-7.863651,9.975321,-8.982257,8.643641,7.408874,-5.910018,-9.265347,-0.392789,2.993562,7.830103,7.205012,-3.663296,0.568717,4.484326,5.556578,-8.921456,-6.818882,5.995008,-1.001310,-8.304054,3.914284,7.165739,-4.406240,-9.249006,3.999393,-5.487716,4.601311,6.239848,-7.849849,9.268604,-1.168083,2.313899,-2.593772,-7.658480,-3.202360,-1.100180,5.916405,6.502834,9.416464,-6.549796,0.954946,9.750069,8.940862,5.118883,-4.193124,-5.225944,-1.948659,7.712020,-4.584972,5.104222,-1.545729,-3.781023,6.787745,2.645946,-2.170803,9.158701,-8.662213,-1.990170,-5.863630,0.462258,9.202550,4.245035,-2.200767,-1.082303,-0.368103,9.142738,0.484149,7.664114,0.846333,-2.478518,-8.308034,-8.712120,-0.242859,-6.762668,-9.091603,3.690879,6.548528,-8.762953,8.683352,-2.012813,-9.337452,-2.056639,-8.327851,0.640255,3.246439,5.849279,1.492390,-7.472383,-3.601745,-5.438952,2.223725,-7.511418,4.114339,-9.021707,1.249514,-3.867783,-2.130448,-5.310381,-9.409241,-4.799818,3.420445,8.527605,9.625523,-5.327023,9.327018,9.236274,5.675126,1.641473,-3.692691,2.075463,3.884504,3.441244,4.615279,-5.149951,1.735343,4.639898,-6.578218,-8.935980,-5.119004,7.738897,8.054789,-9.922855,7.696628,8.860996,4.791202,2.882990,0.471668,-4.072516,-4.271594,-7.964918,-6.709903,-2.885676,8.440497,-4.511512,-6.075474,7.369628,-1.847014,-3.600924,1.221935,3.062259,-8.305530,2.622548,-7.081024,-5.867346,-0.330165,-8.252849,-2.390737,9.095625,8.513364,-7.533155,-4.135782,-9.096902,6.622375,-1.440718,-1.590551,-9.421353,-4.271332,-6.987834,4.189805,-7.919229,-2.162294,-8.120164,8.198241,-5.247105,-5.412007,-3.681810,-9.566163,6.481275,7.466937,-9.582102,-8.031219,1.496352,2.281990,9.943564,-5.392340,-7.338839,-0.030713,-5.791595,0.583222,2.975043,2.503949,-4.355336,-9.202865,9.625182,0.691884,9.232010,-4.271368,-2.716040,7.624080,0.164071,3.877648,-2.410572,-9.158741,-2.119486,9.264595,5.466314,7.233104,-5.460420,-4.335575,-7.673904,6.317983,4.675636,-9.636902,5.208335,7.291147,8.939826,8.856735,-3.031045,-1.686576,3.308652,-3.326357,-5.547264,-6.274381,3.882727,7.848784,-9.429185,-6.379925,-6.340744,0.388566,-2.817998,-8.642980,-9.990560,1.546466,-0.928533,7.435496,1.177754,-0.713210,1.558475,-2.494583,1.599238,-9.379000,-8.769167,1.906334,1.816493,2.024344,9.232184,-7.401266,9.807220,1.868689,3.395279,9.209698,-3.800273,6.800306,-3.830309,1.415115,6.165386,7.113404,-8.248196,-0.015510,2.471860,6.396456,-7.992700,-3.473986,4.343790,0.856182,-9.135622,4.043885,-7.462286,3.417336,-3.756963,4.522408,-9.537601,1.363801,7.380770,0.327418,6.854062,-5.845011,-5.264370,5.980867,-1.620620,-6.838631,9.624364,8.394609,-0.094613,-8.998350,7.918390,-0.435443,-1.186891,-6.303955,-3.243389,0.013159,-2.108757,4.706342,-5.864860,-3.111731,4.612530,-3.745600,-8.484372,-3.531395,-4.878429,7.561520,-7.200056,2.222103,-4.938399,7.142030,8.063367,-6.742727,-1.647787,-8.271696,7.635130,0.992623,-6.395424,6.099420,8.951457,3.724250,4.836286,-8.264134,2.786855,-7.614563,4.146861,-3.270753,-8.104709,8.627795,-8.570681,-5.706930,-3.748348,-7.035730,1.992494,-6.033928,6.598218,-3.509561,-3.389044,6.187346,-1.332839,3.944540,4.854632,1.640921,1.146360,-2.723149], dtype = "float64")#candidate|8867|(2288,)|const|float64
call_8865 = relay.TupleGetItem(func_529_call(relay.reshape(var_8866.astype('int16'), [15, 12, 4]), relay.reshape(const_8867.astype('float64'), [2288,]), ), 2)
call_8868 = relay.TupleGetItem(func_533_call(relay.reshape(var_8866.astype('int16'), [15, 12, 4]), relay.reshape(const_8867.astype('float64'), [2288,]), ), 2)
output = relay.Tuple([call_8858,call_8865,var_8866,const_8867,])
output2 = relay.Tuple([call_8859,call_8868,var_8866,const_8867,])
func_8882 = relay.Function([var_8866,], output)
mod['func_8882'] = func_8882
mod = relay.transform.InferType()(mod)
mutated_mod['func_8882'] = func_8882
mutated_mod = relay.transform.InferType()(mutated_mod)
var_8883 = relay.var("var_8883", dtype = "int16", shape = (720,))#candidate|8883|(720,)|var|int16
func_8882_call = mutated_mod.get_global_var('func_8882')
call_8884 = func_8882_call(var_8883)
output = call_8884
func_8885 = relay.Function([var_8883], output)
mutated_mod['func_8885'] = func_8885
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7832_call = mod.get_global_var('func_7832')
func_7834_call = mutated_mod.get_global_var('func_7834')
call_8908 = relay.TupleGetItem(func_7832_call(), 4)
call_8909 = relay.TupleGetItem(func_7834_call(), 4)
var_8910 = relay.var("var_8910", dtype = "uint8", shape = (13, 40))#candidate|8910|(13, 40)|var|uint8
bop_8911 = relay.bitwise_or(call_8908.astype('uint8'), var_8910.astype('uint8')) # shape=(13, 40)
bop_8914 = relay.bitwise_or(call_8909.astype('uint8'), var_8910.astype('uint8')) # shape=(13, 40)
bop_8919 = relay.equal(call_8908.astype('bool'), var_8910.astype('bool')) # shape=(13, 40)
bop_8922 = relay.equal(call_8909.astype('bool'), var_8910.astype('bool')) # shape=(13, 40)
func_7694_call = mod.get_global_var('func_7694')
func_7696_call = mutated_mod.get_global_var('func_7696')
call_8934 = relay.TupleGetItem(func_7694_call(), 0)
call_8935 = relay.TupleGetItem(func_7696_call(), 0)
bop_8937 = relay.multiply(bop_8919.astype('int16'), relay.reshape(var_8910.astype('int16'), relay.shape_of(bop_8919))) # shape=(13, 40)
bop_8940 = relay.multiply(bop_8922.astype('int16'), relay.reshape(var_8910.astype('int16'), relay.shape_of(bop_8922))) # shape=(13, 40)
output = relay.Tuple([bop_8911,call_8934,bop_8937,])
output2 = relay.Tuple([bop_8914,call_8935,bop_8940,])
func_8941 = relay.Function([var_8910,], output)
mod['func_8941'] = func_8941
mod = relay.transform.InferType()(mod)
mutated_mod['func_8941'] = func_8941
mutated_mod = relay.transform.InferType()(mutated_mod)
var_8942 = relay.var("var_8942", dtype = "uint8", shape = (13, 40))#candidate|8942|(13, 40)|var|uint8
func_8941_call = mutated_mod.get_global_var('func_8941')
call_8943 = func_8941_call(var_8942)
output = call_8943
func_8944 = relay.Function([var_8942], output)
mutated_mod['func_8944'] = func_8944
mutated_mod = relay.transform.InferType()(mutated_mod)
func_8499_call = mod.get_global_var('func_8499')
func_8500_call = mutated_mod.get_global_var('func_8500')
call_8986 = relay.TupleGetItem(func_8499_call(), 0)
call_8987 = relay.TupleGetItem(func_8500_call(), 0)
func_7885_call = mod.get_global_var('func_7885')
func_7887_call = mutated_mod.get_global_var('func_7887')
call_8992 = func_7885_call()
call_8993 = func_7885_call()
uop_8998 = relay.cos(call_8986.astype('float64')) # shape=(5, 3, 15)
uop_9000 = relay.cos(call_8987.astype('float64')) # shape=(5, 3, 15)
output = relay.Tuple([call_8992,uop_8998,])
output2 = relay.Tuple([call_8993,uop_9000,])
func_9002 = relay.Function([], output)
mod['func_9002'] = func_9002
mod = relay.transform.InferType()(mod)
mutated_mod['func_9002'] = func_9002
mutated_mod = relay.transform.InferType()(mutated_mod)
func_9002_call = mutated_mod.get_global_var('func_9002')
call_9003 = func_9002_call()
output = call_9003
func_9004 = relay.Function([], output)
mutated_mod['func_9004'] = func_9004
mutated_mod = relay.transform.InferType()(mutated_mod)
func_8246_call = mod.get_global_var('func_8246')
func_8248_call = mutated_mod.get_global_var('func_8248')
call_9014 = relay.TupleGetItem(func_8246_call(), 2)
call_9015 = relay.TupleGetItem(func_8248_call(), 2)
var_9019 = relay.var("var_9019", dtype = "float64", shape = (12, 13, 10))#candidate|9019|(12, 13, 10)|var|float64
bop_9020 = relay.bitwise_xor(call_9014.astype('int8'), var_9019.astype('int8')) # shape=(12, 13, 10)
bop_9023 = relay.bitwise_xor(call_9015.astype('int8'), var_9019.astype('int8')) # shape=(12, 13, 10)
func_7090_call = mod.get_global_var('func_7090')
func_7093_call = mutated_mod.get_global_var('func_7093')
const_9025 = relay.const([-6,5,3,-6,-8,8,1,-4,-1,-9,-7,-10,3,-3,1,-9,4,-4,-5,6,3,7,-9,-10,-1,-7,-9,5,8,-9,7,7,3,-8,4,-4,-2,-8,-3,1,5,-10,3,-10,-5,-10,-8,6,8,2,10,6,-6,-2,3,10,-1,6,-6,-5,-7,5,-1,7,-5,-1,4,8,6,-6,5,-8,-6,10,-3,5,9,-5,1,2,-10,4,4,3,-5,-8,-5,-5,-3,7,10,-7,-3,1,-4,-3,-8,10,10,2,2,-4,-8,-2,-3,-8,10,-2,-8,9,8,6,-9,-9,-10,4,5,-1,-8,6,1,-4,9,-5,1,-9,-8,-6,-1,-7,8,-3,9,5,-6,-9,-5,9,1,1,10,8,6,4,-8,10,-2,10,8,1,6,-2,-2,-5,5,-4,7,-2,5,2,-4,-3,5,8,-7,-7,8,4,-2,-5,-6,-3,-1,7,8,-1,-2,-9,-8,-8,7,-7,-7,-6,-1,-8,-8,-1,-4,4,10,4,-2,6,-3,4,-2,-4,-4,-9,-1,-4,-6,7,5,-1,9,-4,-2,2,5,-5,8,7,2,-9,-3,-2,-7,-8,-4,-7,6,-5,-2,-4,-2,-3,10,2,-7,5,-5,-8,7,7,5,-4,3,-9,-6,-1,4,9,-5,-6,-4,-2,-9,3,4,-9,2,-2,-5,-2,-6,1,9,3,-1,-6,-9,5,-9,-6,-8,4,8,-7,-6,6,-1,3,-5,4,3,-4,-10,-2,7,2,1,-5,1,-4,10,1,4,-1,-10,8,7,-8,1,6,8,-5,-3,1,-4,-2,-2,-8,-7,-9,6,-2,9,1,-10,10,-6,-10,-7,4,-4,8,1,4,8,7,-1,8,9,-2,10,-8,8,7,6,9,-8,-8,4,9,7,8,4,-10,7,1,-5,-4,-8,-8,-2,6,3,-3,8,-1,-9,-7,-6,6,-8,-1,-10,5,7,2,-10,1,2,2,-5,9,3,7,-2,3,3,-2,-10,-9,-8,-6,9,4,1,-3,1,10,-7,-5,1,-8,1,-5,5,-10,7,3,-5,-7,-3,3,-4,1,-10,-2,-4,5,-10,-8,6,-10,-6,-7,10,-5,6,-10,-3,-4,7,5,-6,-9], dtype = "uint64")#candidate|9025|(420,)|const|uint64
call_9024 = relay.TupleGetItem(func_7090_call(relay.reshape(const_9025.astype('uint64'), [420,])), 0)
call_9026 = relay.TupleGetItem(func_7093_call(relay.reshape(const_9025.astype('uint64'), [420,])), 0)
func_8809_call = mod.get_global_var('func_8809')
func_8810_call = mutated_mod.get_global_var('func_8810')
call_9042 = relay.TupleGetItem(func_8809_call(), 2)
call_9043 = relay.TupleGetItem(func_8810_call(), 2)
output = relay.Tuple([bop_9020,call_9024,const_9025,call_9042,])
output2 = relay.Tuple([bop_9023,call_9026,const_9025,call_9043,])
func_9044 = relay.Function([var_9019,], output)
mod['func_9044'] = func_9044
mod = relay.transform.InferType()(mod)
mutated_mod['func_9044'] = func_9044
mutated_mod = relay.transform.InferType()(mutated_mod)
var_9045 = relay.var("var_9045", dtype = "float64", shape = (12, 13, 10))#candidate|9045|(12, 13, 10)|var|float64
func_9044_call = mutated_mod.get_global_var('func_9044')
call_9046 = func_9044_call(var_9045)
output = call_9046
func_9047 = relay.Function([var_9045], output)
mutated_mod['func_9047'] = func_9047
mutated_mod = relay.transform.InferType()(mutated_mod)
func_8246_call = mod.get_global_var('func_8246')
func_8248_call = mutated_mod.get_global_var('func_8248')
call_9078 = relay.TupleGetItem(func_8246_call(), 2)
call_9079 = relay.TupleGetItem(func_8248_call(), 2)
func_7021_call = mod.get_global_var('func_7021')
func_7024_call = mutated_mod.get_global_var('func_7024')
var_9085 = relay.var("var_9085", dtype = "float32", shape = (351,))#candidate|9085|(351,)|var|float32
call_9084 = relay.TupleGetItem(func_7021_call(relay.reshape(var_9085.astype('float32'), [27, 13])), 0)
call_9086 = relay.TupleGetItem(func_7024_call(relay.reshape(var_9085.astype('float32'), [27, 13])), 0)
uop_9088 = relay.erf(call_9084.astype('float64')) # shape=(27, 1)
uop_9090 = relay.erf(call_9086.astype('float64')) # shape=(27, 1)
func_6336_call = mod.get_global_var('func_6336')
func_6337_call = mutated_mod.get_global_var('func_6337')
call_9096 = relay.TupleGetItem(func_6336_call(), 0)
call_9097 = relay.TupleGetItem(func_6337_call(), 0)
func_7682_call = mod.get_global_var('func_7682')
func_7684_call = mutated_mod.get_global_var('func_7684')
var_9101 = relay.var("var_9101", dtype = "float64", shape = (364,))#candidate|9101|(364,)|var|float64
call_9100 = relay.TupleGetItem(func_7682_call(relay.reshape(var_9101.astype('float64'), [364,])), 4)
call_9102 = relay.TupleGetItem(func_7684_call(relay.reshape(var_9101.astype('float64'), [364,])), 4)
uop_9110 = relay.asin(uop_9088.astype('float64')) # shape=(27, 1)
uop_9112 = relay.asin(uop_9090.astype('float64')) # shape=(27, 1)
output = relay.Tuple([call_9078,var_9085,call_9096,call_9100,var_9101,uop_9110,])
output2 = relay.Tuple([call_9079,var_9085,call_9097,call_9102,var_9101,uop_9112,])
func_9114 = relay.Function([var_9085,var_9101,], output)
mod['func_9114'] = func_9114
mod = relay.transform.InferType()(mod)
var_9115 = relay.var("var_9115", dtype = "float32", shape = (351,))#candidate|9115|(351,)|var|float32
var_9116 = relay.var("var_9116", dtype = "float64", shape = (364,))#candidate|9116|(364,)|var|float64
output = func_9114(var_9115,var_9116,)
func_9117 = relay.Function([var_9115,var_9116,], output)
mutated_mod['func_9117'] = func_9117
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6601_call = mod.get_global_var('func_6601')
func_6603_call = mutated_mod.get_global_var('func_6603')
call_9233 = relay.TupleGetItem(func_6601_call(), 0)
call_9234 = relay.TupleGetItem(func_6603_call(), 0)
output = call_9233
output2 = call_9234
func_9236 = relay.Function([], output)
mod['func_9236'] = func_9236
mod = relay.transform.InferType()(mod)
output = func_9236()
func_9237 = relay.Function([], output)
mutated_mod['func_9237'] = func_9237
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7211_call = mod.get_global_var('func_7211')
func_7213_call = mutated_mod.get_global_var('func_7213')
call_9238 = func_7211_call()
call_9239 = func_7211_call()
func_7694_call = mod.get_global_var('func_7694')
func_7696_call = mutated_mod.get_global_var('func_7696')
call_9242 = relay.TupleGetItem(func_7694_call(), 0)
call_9243 = relay.TupleGetItem(func_7696_call(), 0)
func_8246_call = mod.get_global_var('func_8246')
func_8248_call = mutated_mod.get_global_var('func_8248')
call_9259 = relay.TupleGetItem(func_8246_call(), 2)
call_9260 = relay.TupleGetItem(func_8248_call(), 2)
output = relay.Tuple([call_9238,call_9242,call_9259,])
output2 = relay.Tuple([call_9239,call_9243,call_9260,])
func_9270 = relay.Function([], output)
mod['func_9270'] = func_9270
mod = relay.transform.InferType()(mod)
output = func_9270()
func_9271 = relay.Function([], output)
mutated_mod['func_9271'] = func_9271
mutated_mod = relay.transform.InferType()(mutated_mod)
func_8173_call = mod.get_global_var('func_8173')
func_8175_call = mutated_mod.get_global_var('func_8175')
call_9296 = func_8173_call()
call_9297 = func_8173_call()
func_3804_call = mod.get_global_var('func_3804')
func_3808_call = mutated_mod.get_global_var('func_3808')
const_9304 = relay.const(-8.910650, dtype = "float64")#candidate|9304|()|const|float64
const_9305 = relay.const([8.426893,-8.472512,1.446617,-7.993064,-7.944609,3.729927,-6.638028,3.013147,1.185760,0.549650,-9.617038,0.316411,0.186176,6.879644,-1.342710], dtype = "float64")#candidate|9305|(15,)|const|float64
call_9303 = relay.TupleGetItem(func_3804_call(relay.reshape(const_9304.astype('float64'), []), relay.reshape(const_9305.astype('float64'), [1, 15, 1]), ), 0)
call_9306 = relay.TupleGetItem(func_3808_call(relay.reshape(const_9304.astype('float64'), []), relay.reshape(const_9305.astype('float64'), [1, 15, 1]), ), 0)
func_3804_call = mod.get_global_var('func_3804')
func_3808_call = mutated_mod.get_global_var('func_3808')
call_9311 = relay.TupleGetItem(func_3804_call(relay.reshape(const_9304.astype('float64'), []), relay.reshape(const_9305.astype('float64'), [1, 15, 1]), ), 0)
call_9312 = relay.TupleGetItem(func_3808_call(relay.reshape(const_9304.astype('float64'), []), relay.reshape(const_9305.astype('float64'), [1, 15, 1]), ), 0)
output = relay.Tuple([call_9296,call_9303,const_9304,const_9305,call_9311,])
output2 = relay.Tuple([call_9297,call_9306,const_9304,const_9305,call_9312,])
func_9317 = relay.Function([], output)
mod['func_9317'] = func_9317
mod = relay.transform.InferType()(mod)
mutated_mod['func_9317'] = func_9317
mutated_mod = relay.transform.InferType()(mutated_mod)
func_9317_call = mutated_mod.get_global_var('func_9317')
call_9318 = func_9317_call()
output = call_9318
func_9319 = relay.Function([], output)
mutated_mod['func_9319'] = func_9319
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7765_call = mod.get_global_var('func_7765')
func_7767_call = mutated_mod.get_global_var('func_7767')
call_9323 = func_7765_call()
call_9324 = func_7765_call()
uop_9351 = relay.asinh(call_9323.astype('float64')) # shape=(6, 12, 12)
uop_9353 = relay.asinh(call_9324.astype('float64')) # shape=(6, 12, 12)
output = relay.Tuple([uop_9351,])
output2 = relay.Tuple([uop_9353,])
func_9367 = relay.Function([], output)
mod['func_9367'] = func_9367
mod = relay.transform.InferType()(mod)
output = func_9367()
func_9368 = relay.Function([], output)
mutated_mod['func_9368'] = func_9368
mutated_mod = relay.transform.InferType()(mutated_mod)
func_8246_call = mod.get_global_var('func_8246')
func_8248_call = mutated_mod.get_global_var('func_8248')
call_9392 = relay.TupleGetItem(func_8246_call(), 1)
call_9393 = relay.TupleGetItem(func_8248_call(), 1)
var_9396 = relay.var("var_9396", dtype = "bool", shape = (10, 15, 8))#candidate|9396|(10, 15, 8)|var|bool
bop_9397 = relay.divide(call_9392.astype('float64'), var_9396.astype('float64')) # shape=(10, 15, 8)
bop_9400 = relay.divide(call_9393.astype('float64'), var_9396.astype('float64')) # shape=(10, 15, 8)
uop_9410 = relay.rsqrt(var_9396.astype('float64')) # shape=(10, 15, 8)
func_8809_call = mod.get_global_var('func_8809')
func_8810_call = mutated_mod.get_global_var('func_8810')
call_9420 = relay.TupleGetItem(func_8809_call(), 0)
call_9421 = relay.TupleGetItem(func_8810_call(), 0)
func_801_call = mod.get_global_var('func_801')
func_805_call = mutated_mod.get_global_var('func_805')
const_9426 = relay.const([-7,7,2,8,6,6,-6,2,-1,1,-1,-8,7,-6,-4,10,-6,5,-2,2,1,-2,6,-1,8,-10,-10,1,4,-2,2,10,-10,-8,7,8,7,7,3,-2], dtype = "uint8")#candidate|9426|(40,)|const|uint8
call_9425 = relay.TupleGetItem(func_801_call(relay.reshape(const_9426.astype('uint8'), [1, 5, 8]), relay.reshape(const_9426.astype('uint8'), [1, 5, 8]), ), 1)
call_9427 = relay.TupleGetItem(func_805_call(relay.reshape(const_9426.astype('uint8'), [1, 5, 8]), relay.reshape(const_9426.astype('uint8'), [1, 5, 8]), ), 1)
func_3362_call = mod.get_global_var('func_3362')
func_3365_call = mutated_mod.get_global_var('func_3365')
const_9429 = relay.const([-7.531582,7.571082,-1.010423,-1.237921,-2.822354,2.947273,4.209750,-4.694518,-5.993286,-8.266149,7.653217,0.199245,0.815526,-7.971230,-7.272590,4.714282,-0.700347,-7.731065,5.010228,-9.895722,-5.706907,8.207741,3.711928,-7.665491,9.204805,-5.362788,8.960868,-4.886091,5.787925,2.568190,-4.130919,-0.608836,4.984068,8.375542,8.330137,-6.147046,-9.618524,2.981148,3.704001,6.338188,-5.106410,2.273055,-2.915863,-6.974160,0.288673,1.021913,-0.480294,-0.893431,-4.222523,6.101698,2.691445,-7.087444,0.106223,5.187937,0.168217,6.692045,1.802518,6.953146,-6.129817,8.130629,7.984386,6.434430,-1.175557,5.313706,-0.009450,-4.285904,-4.384250,7.069952,-1.060808,-7.784138,4.839061,-7.823706,5.441309,-5.555393,0.445701,1.545990,-6.726702,5.802407,-7.866459,-2.736255,8.475932,-6.626754,0.150292,7.990928,0.880491,7.105155,-7.438704,7.525376,-5.110862,6.785034,0.174481,-0.938008,-9.780998,-2.854898,0.224932,4.658269,9.026684,-4.273690,1.409801,-2.367915,-4.787358,1.098025,0.421811,-0.043945,7.476858,-7.527969,-6.930767,-9.419481,-2.346026,1.521342,7.908427,-0.752649,-3.560262,8.221396,-8.652974,-2.209156,-4.629161,4.517336,-7.544188,2.132059,-9.996577,-0.511087,-4.066169,2.028876,8.033514,-0.350536,1.801649,6.432186,-9.604518,6.706817,7.997832,0.007810,5.089993,2.543462,-6.819894,1.376035,-4.283271,5.489032,9.364356,2.792306,0.018109,6.340139,-6.020217,-6.430691,-7.542759,-8.817742,-2.678449,9.789878,-0.547236,5.400127,8.613982,4.100954,3.081985,-4.816237,8.518409,5.593070,-7.918764,0.727474,-0.547488,6.524167,2.754681,-1.279936,0.461253,-5.574383,-1.032769,-5.688132,-7.493670,-9.897556,-2.897069,-7.460847,-5.216788,-4.447210,4.852170,-3.041180,6.176452,-2.957088,7.252959,-5.133639,-1.736677,-8.507134,0.541103,-5.883706,2.311880,6.111178,3.540933,9.098934,4.941843,-2.594977,-6.767431,-0.566558,-1.228544,-8.068368,6.530466,-6.610880,0.639598,3.416264,0.784709,6.966690,-2.152622,-3.089472,-5.356339,5.839470,4.789520,-3.308225,-2.410266,-3.009074,7.557880,-1.881171,4.684102,-9.654771,-6.308647,0.463235,4.361832,-7.052170,0.419223,-2.286048,-2.399031,-3.971884,1.287027,9.408294,1.019036,8.697429,1.782107,-1.497608,-9.376958,9.113535,-8.733911,9.392683,0.465709,2.285192,-0.501955,5.189730,0.750576,6.443118,-6.842120,6.351987,-2.364577,8.027560,-0.931128,-9.790375,-8.750861,0.862385,5.377731,7.464650,-0.465048,7.672757,-5.276461,-1.395122,-2.723056,-2.147286,-4.144534,6.568401,-8.236385,-2.808418,-7.881220,-6.555714,4.933972,8.315961,-1.000169,0.103063,7.804160,3.305971,6.014924,4.676450,6.427225,9.829369,1.799249,-8.157941,2.956397,0.227515,-3.850626,-4.737013,5.609558,-7.559238,-4.214463,6.990219,-1.416508,2.402918,-0.538623,-1.815571,7.944647,6.232962,-2.849151,-6.103738,3.699026,9.579936,6.354984,5.128165,0.548729,-8.075175,4.809660,5.975826,2.706204,-4.570547,9.519801,3.818581,-3.420843,-2.218171,8.670596,-0.505178,-0.938857,-9.234628,7.947263,-2.390179,7.106689,5.537205,-4.491923,-5.451716,3.161546,6.652860,1.986768,2.155159,-5.531412,-2.613793,2.006703,-6.617886,-2.573876,7.786544,-9.335503,-2.989439,5.578981,-5.457006,-0.588317,9.661946,6.509618,4.774792,5.326740,-2.962855,-0.048326,6.015481,4.523406,5.895138,-5.163479,-3.723702,-4.672954,-1.670918,-3.079119,-5.126010,-5.955664,-3.286270,-2.276916,-5.910960,6.857407,8.735461,-6.260582,6.017358,-2.420702,5.670947,7.998753,4.027767,1.671498,1.654323,6.727843,-5.310594,7.612679,7.528962,-1.287787,-5.594165,4.411540,4.958079,-6.483650,3.474155,4.580621,-1.070206], dtype = "float64")#candidate|9429|(364,)|const|float64
call_9428 = func_3362_call(relay.reshape(const_9429.astype('float64'), [4, 7, 13]))
call_9430 = func_3362_call(relay.reshape(const_9429.astype('float64'), [4, 7, 13]))
var_9434 = relay.var("var_9434", dtype = "float64", shape = (10, 15, 8))#candidate|9434|(10, 15, 8)|var|float64
bop_9435 = relay.logical_xor(uop_9410.astype('int32'), relay.reshape(var_9434.astype('int32'), relay.shape_of(uop_9410))) # shape=(10, 15, 8)
output = relay.Tuple([bop_9397,call_9420,call_9425,const_9426,call_9428,const_9429,bop_9435,])
output2 = relay.Tuple([bop_9400,call_9421,call_9427,const_9426,call_9430,const_9429,bop_9435,])
func_9441 = relay.Function([var_9396,var_9434,], output)
mod['func_9441'] = func_9441
mod = relay.transform.InferType()(mod)
mutated_mod['func_9441'] = func_9441
mutated_mod = relay.transform.InferType()(mutated_mod)
func_9441_call = mutated_mod.get_global_var('func_9441')
var_9443 = relay.var("var_9443", dtype = "bool", shape = (10, 15, 8))#candidate|9443|(10, 15, 8)|var|bool
var_9444 = relay.var("var_9444", dtype = "float64", shape = (10, 15, 8))#candidate|9444|(10, 15, 8)|var|float64
call_9442 = func_9441_call(var_9443,var_9444,)
output = call_9442
func_9445 = relay.Function([var_9443,var_9444,], output)
mutated_mod['func_9445'] = func_9445
mutated_mod = relay.transform.InferType()(mutated_mod)
func_8809_call = mod.get_global_var('func_8809')
func_8810_call = mutated_mod.get_global_var('func_8810')
call_9468 = relay.TupleGetItem(func_8809_call(), 1)
call_9469 = relay.TupleGetItem(func_8810_call(), 1)
var_9470 = relay.var("var_9470", dtype = "float64", shape = (1, 9, 3))#candidate|9470|(1, 9, 3)|var|float64
bop_9471 = relay.less(call_9468.astype('bool'), relay.reshape(var_9470.astype('bool'), relay.shape_of(call_9468))) # shape=(1, 9, 3)
bop_9474 = relay.less(call_9469.astype('bool'), relay.reshape(var_9470.astype('bool'), relay.shape_of(call_9469))) # shape=(1, 9, 3)
output = bop_9471
output2 = bop_9474
func_9481 = relay.Function([var_9470,], output)
mod['func_9481'] = func_9481
mod = relay.transform.InferType()(mod)
mutated_mod['func_9481'] = func_9481
mutated_mod = relay.transform.InferType()(mutated_mod)
var_9482 = relay.var("var_9482", dtype = "float64", shape = (1, 9, 3))#candidate|9482|(1, 9, 3)|var|float64
func_9481_call = mutated_mod.get_global_var('func_9481')
call_9483 = func_9481_call(var_9482)
output = call_9483
func_9484 = relay.Function([var_9482], output)
mutated_mod['func_9484'] = func_9484
mutated_mod = relay.transform.InferType()(mutated_mod)
func_8635_call = mod.get_global_var('func_8635')
func_8637_call = mutated_mod.get_global_var('func_8637')
call_9500 = relay.TupleGetItem(func_8635_call(), 0)
call_9501 = relay.TupleGetItem(func_8637_call(), 0)
output = call_9500
output2 = call_9501
func_9505 = relay.Function([], output)
mod['func_9505'] = func_9505
mod = relay.transform.InferType()(mod)
mutated_mod['func_9505'] = func_9505
mutated_mod = relay.transform.InferType()(mutated_mod)
func_9505_call = mutated_mod.get_global_var('func_9505')
call_9506 = func_9505_call()
output = call_9506
func_9507 = relay.Function([], output)
mutated_mod['func_9507'] = func_9507
mutated_mod = relay.transform.InferType()(mutated_mod)
func_9367_call = mod.get_global_var('func_9367')
func_9368_call = mutated_mod.get_global_var('func_9368')
call_9552 = relay.TupleGetItem(func_9367_call(), 0)
call_9553 = relay.TupleGetItem(func_9368_call(), 0)
output = relay.Tuple([call_9552,])
output2 = relay.Tuple([call_9553,])
func_9554 = relay.Function([], output)
mod['func_9554'] = func_9554
mod = relay.transform.InferType()(mod)
mutated_mod['func_9554'] = func_9554
mutated_mod = relay.transform.InferType()(mutated_mod)
func_9554_call = mutated_mod.get_global_var('func_9554')
call_9555 = func_9554_call()
output = call_9555
func_9556 = relay.Function([], output)
mutated_mod['func_9556'] = func_9556
mutated_mod = relay.transform.InferType()(mutated_mod)
var_9568 = relay.var("var_9568", dtype = "int32", shape = (1, 3, 9))#candidate|9568|(1, 3, 9)|var|int32
var_9569 = relay.var("var_9569", dtype = "int32", shape = (14, 3, 9))#candidate|9569|(14, 3, 9)|var|int32
bop_9570 = relay.greater_equal(var_9568.astype('bool'), var_9569.astype('bool')) # shape=(14, 3, 9)
output = relay.Tuple([bop_9570,])
output2 = relay.Tuple([bop_9570,])
func_9580 = relay.Function([var_9568,var_9569,], output)
mod['func_9580'] = func_9580
mod = relay.transform.InferType()(mod)
var_9581 = relay.var("var_9581", dtype = "int32", shape = (1, 3, 9))#candidate|9581|(1, 3, 9)|var|int32
var_9582 = relay.var("var_9582", dtype = "int32", shape = (14, 3, 9))#candidate|9582|(14, 3, 9)|var|int32
output = func_9580(var_9581,var_9582,)
func_9583 = relay.Function([var_9581,var_9582,], output)
mutated_mod['func_9583'] = func_9583
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7694_call = mod.get_global_var('func_7694')
func_7696_call = mutated_mod.get_global_var('func_7696')
call_9613 = relay.TupleGetItem(func_7694_call(), 0)
call_9614 = relay.TupleGetItem(func_7696_call(), 0)
func_8856_call = mod.get_global_var('func_8856')
func_8857_call = mutated_mod.get_global_var('func_8857')
call_9632 = relay.TupleGetItem(func_8856_call(), 0)
call_9633 = relay.TupleGetItem(func_8857_call(), 0)
output = relay.Tuple([call_9613,call_9632,])
output2 = relay.Tuple([call_9614,call_9633,])
func_9644 = relay.Function([], output)
mod['func_9644'] = func_9644
mod = relay.transform.InferType()(mod)
mutated_mod['func_9644'] = func_9644
mutated_mod = relay.transform.InferType()(mutated_mod)
func_9644_call = mutated_mod.get_global_var('func_9644')
call_9645 = func_9644_call()
output = call_9645
func_9646 = relay.Function([], output)
mutated_mod['func_9646'] = func_9646
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7832_call = mod.get_global_var('func_7832')
func_7834_call = mutated_mod.get_global_var('func_7834')
call_9660 = relay.TupleGetItem(func_7832_call(), 4)
call_9661 = relay.TupleGetItem(func_7834_call(), 4)
func_9505_call = mod.get_global_var('func_9505')
func_9507_call = mutated_mod.get_global_var('func_9507')
call_9662 = func_9505_call()
call_9663 = func_9505_call()
func_6676_call = mod.get_global_var('func_6676')
func_6677_call = mutated_mod.get_global_var('func_6677')
call_9667 = relay.TupleGetItem(func_6676_call(), 0)
call_9668 = relay.TupleGetItem(func_6677_call(), 0)
output = relay.Tuple([call_9660,call_9662,call_9667,])
output2 = relay.Tuple([call_9661,call_9663,call_9668,])
func_9680 = relay.Function([], output)
mod['func_9680'] = func_9680
mod = relay.transform.InferType()(mod)
output = func_9680()
func_9681 = relay.Function([], output)
mutated_mod['func_9681'] = func_9681
mutated_mod = relay.transform.InferType()(mutated_mod)
func_9505_call = mod.get_global_var('func_9505')
func_9507_call = mutated_mod.get_global_var('func_9507')
call_9737 = func_9505_call()
call_9738 = func_9505_call()
uop_9739 = relay.exp(call_9737.astype('float64')) # shape=(1, 9, 3)
uop_9741 = relay.exp(call_9738.astype('float64')) # shape=(1, 9, 3)
output = relay.Tuple([uop_9739,])
output2 = relay.Tuple([uop_9741,])
func_9742 = relay.Function([], output)
mod['func_9742'] = func_9742
mod = relay.transform.InferType()(mod)
mutated_mod['func_9742'] = func_9742
mutated_mod = relay.transform.InferType()(mutated_mod)
func_9742_call = mutated_mod.get_global_var('func_9742')
call_9743 = func_9742_call()
output = call_9743
func_9744 = relay.Function([], output)
mutated_mod['func_9744'] = func_9744
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6772_call = mod.get_global_var('func_6772')
func_6774_call = mutated_mod.get_global_var('func_6774')
call_9750 = func_6772_call()
call_9751 = func_6772_call()
var_9754 = relay.var("var_9754", dtype = "float32", shape = (8, 9, 3))#candidate|9754|(8, 9, 3)|var|float32
bop_9755 = relay.maximum(call_9750.astype('float64'), var_9754.astype('float64')) # shape=(8, 9, 3)
bop_9758 = relay.maximum(call_9751.astype('float64'), var_9754.astype('float64')) # shape=(8, 9, 3)
uop_9763 = relay.log10(var_9754.astype('float64')) # shape=(8, 9, 3)
func_9554_call = mod.get_global_var('func_9554')
func_9556_call = mutated_mod.get_global_var('func_9556')
call_9768 = relay.TupleGetItem(func_9554_call(), 0)
call_9769 = relay.TupleGetItem(func_9556_call(), 0)
func_2588_call = mod.get_global_var('func_2588')
func_2591_call = mutated_mod.get_global_var('func_2591')
const_9772 = relay.const([3,7,-5,1,8,8,-1,-7,4,9,-6,3,3,8,-1,8,-4,-9,-7,-1,-2,-5,3,8,-9,-3,1,-9,-7,10,10,4,-2,-7,3,-4,-4,-10,10,-6,-6,5,4,4,3,-1,-4,10,-8,-7,-6,8,9,-9,-5,-9,4,10,10,-1,-8,7,-9,-9,6,8,4,-4,-3,1,7,-2,-6,1,6,8,-6,7,-3,-4,10,-1,-7,9,-9,1,2,7,6,1,-9,8,-3,-3,-3,5,1,2,-2,-10,-1,7,2,3,-1,2,5,-9,6,5,9,7,-10,7,-9,-3,10,6,-3,2,3,-5,-3,-9,6,-10,-5,-6,5,-7,2,5,-1,4,9,-7,9,3,8,-2,-5,1,1,-5,3,-9,1,9,-4,-5,10,-7,5,2,9,10,-6,4,-10,-4,-8,-10,-8,10,-1,-4,6,-1,-1,-6,4,-4,7,-10,4,10,6,2,6,-5,-4,1,2,5,-4,4,7,10,4,2,3,-2,1,-2,-4,5,8,2,-7,-3,-7,1,-5,-1,3,8,3,-7,-4,1,-8,9,-4,7,-7,-6,-7,2,10,-10,-5,2,-10,4,2,3,-6,7,5,-5,4,9,-8,3,4,-2,-4,1,-5,-8,-4,8,-5,-2,-9,-3,8,-4,4,-6,-3,-1,5,10,9,-9,-3,5,-2,-8,-5,3,4,-2,5,9,8,-4,4,-5,6,-9,2,6,-10,2,5,1,-3,10,-10,-7,-2,3,8,10,3,2,-3,9,3,1,7,9,-4,1,9,4,10,7,7,-2,7,8,-2,-5,8,-3,9,-6,-3,9,-4,3,-10,4,8,-10,1,4,6,-8,-7,-9,5,9,2,-9,-1,-2,3,-10,3,-7,-9,8,2,8,-9,6,-4,-3,3,5,-6,-2,-5,1,2,2,1,-7,-8,-4,5,4,-5,6,-2,-9,-9,9,-5,2,10,-1,6,6,4,-4,10,-6,6,2,-4,6,1,-9,-10,4,-7,-3,-10,10,10,2,-3,-6,2,-6,-6,2,-2,4,2,-1,2,3,-6,-7,-4,-6,-7,5,-10,-8,7,-4,2,8,5,-2,-5,10,-5,-8,5,-7,8,-2,5,5,-3,-9,-6,-9,-8,9,-6,-7,-5,4,-2,-2,5,1,7,1,4,3,9,-4,-4,4,-3,5,-7,7,9,2,-7,-3,-10,2,-4,-5,-8,-2,3,4,-9,3,7,-7,-3,-2,3,-3,-10,6,-2,9,-1,6,-6,-9,1,-3,6,-9,-9,9,4,5,-9,-8,-4,-2,-7,-9,1,10,-2,2,-2,-6,2,5,7,10,4,6,-4,-3,1,5,-1,-5,9,2,-10,2,-6,-8,10,-9,-5,-2,-7,1,8,9,-3,4,-4,3,7,-6,6,-5,1,9,-1,6,-8,6,-6,-7,1,-1,10,-9,-3,7,8,-4,-8,-4,5,-6,10,1,1,5,9,-9,1,-5,2,4,6,6,2,-2,1,-2,-4,-6,-2,6,-6,10,2,4,9,-1,-5,-8,6,-5,-8,9,3,6,6,-7,-9,-2,4,3,5,8,-3,-8,-6,8,-4,-7,-2,-10,-7,1,-6,4,-2,-3,5,6,8,6,8,8,-3,-9,-10,-3,6,10,10,1,-5,8,6,7,-9,7,-9,1,2,6,1,-8,7,10,-5,9,5,-9,3,-6,9,2,-2,9,-5,5,-6,2,2,3,2,7,-1,-10,-2,-9,-10,8,-5,6,-2,7,-6,3,10,-5,-8,-2,9,-3,6,2,4,10,7,-3,-10,8,7,6,-7,-2,3,4,-3,3,-9,-9,-6,-6,6,-3,8,-2,5,4,9,5,-9,-4,-5,6,-1,-1,-6,10,-4,8,-8,-9,-8,-3,1,9,-8,-6,9,9,7,-6,4,-4,-3,-2,-3,-2], dtype = "int64")#candidate|9772|(726,)|const|int64
var_9773 = relay.var("var_9773", dtype = "int32", shape = ())#candidate|9773|()|var|int32
call_9771 = relay.TupleGetItem(func_2588_call(relay.reshape(const_9772.astype('int64'), [6, 11, 11]), relay.reshape(var_9773.astype('int32'), []), ), 1)
call_9774 = relay.TupleGetItem(func_2591_call(relay.reshape(const_9772.astype('int64'), [6, 11, 11]), relay.reshape(var_9773.astype('int32'), []), ), 1)
func_5233_call = mod.get_global_var('func_5233')
func_5238_call = mutated_mod.get_global_var('func_5238')
var_9783 = relay.var("var_9783", dtype = "float32", shape = (108,))#candidate|9783|(108,)|var|float32
const_9784 = relay.const([1.908655,-9.577862,2.964675,5.041354,-0.741988,-3.732361,4.881037,5.824790,-8.676755,0.733358,-9.481375,2.004410,1.454675,-1.406282,6.320601], dtype = "float64")#candidate|9784|(15,)|const|float64
call_9782 = relay.TupleGetItem(func_5233_call(relay.reshape(var_9783.astype('float32'), [9, 4, 3]), relay.reshape(var_9773.astype('int32'), []), relay.reshape(const_9784.astype('float64'), [15,]), ), 3)
call_9785 = relay.TupleGetItem(func_5238_call(relay.reshape(var_9783.astype('float32'), [9, 4, 3]), relay.reshape(var_9773.astype('int32'), []), relay.reshape(const_9784.astype('float64'), [15,]), ), 3)
func_8882_call = mod.get_global_var('func_8882')
func_8885_call = mutated_mod.get_global_var('func_8885')
const_9791 = relay.const([-4,-2,10,9,6,-6,1,8,-3,3,-5,-9,-2,9,1,-6,10,7,-7,-3,-4,-2,9,2,6,-9,4,5,9,3,-1,-5,6,-2,-10,-8,4,-1,9,-4,-1,-5,-2,-2,-4,1,3,-8,-9,1,-7,-4,-10,-5,-10,-3,-1,7,-1,-4,-3,2,-10,4,1,7,-8,-1,9,7,-5,10,1,9,8,6,-8,-9,7,8,-3,-7,7,1,-6,-5,1,6,5,-1,-1,-6,5,7,-3,3,-1,8,10,6,-8,-4,-8,-10,-8,-6,9,-7,-9,8,1,-7,4,10,5,-10,7,-3,-6,8,5,10,7,-10,-2,-10,2,3,3,7,-1,4,-1,-5,-1,9,-8,-3,6,3,4,1,1,9,9,-3,-5,2,-3,2,-1,-1,2,4,-7,-6,-8,-6,-10,4,-1,4,3,1,-5,1,6,5,-8,-5,-5,8,9,4,-9,1,-5,-5,2,-6,8,3,3,-3,-6,-8,1,-4,-9,10,-9,7,7,-2,-9,4,-8,-3,-4,2,5,8,-7,6,5,6,-6,-5,7,2,6,7,-4,4,7,5,-5,9,9,8,9,5,-8,-8,10,3,7,-9,-10,-6,-9,2,8,-4,7,1,5,-3,8,8,-3,-3,10,-9,7,9,8,7,-1,3,4,-3,-9,2,10,-5,-10,1,-2,-10,6,4,1,8,-4,-9,4,-5,-10,10,6,1,4,8,2,5,-9,2,10,-1,10,1,6,8,-5,-6,-4,9,-10,-3,4,10,5,-3,-1,-9,8,8,-10,-10,3,-5,4,4,-10,-6,-3,10,-10,4,1,6,-7,-1,-9,1,-8,8,2,-6,8,-1,-2,-10,-5,-4,2,-4,-4,-6,-10,4,5,10,3,2,-9,2,-3,4,9,-4,9,7,-7,-4,-2,-4,10,4,1,-5,-6,-2,9,9,-5,6,3,5,8,6,8,7,-4,-9,7,-5,-1,2,-4,-8,3,3,9,5,-7,-7,1,-3,7,9,-8,-6,3,8,8,8,-10,-9,-1,6,7,5,9,4,1,-9,10,-7,3,4,-3,-3,5,10,8,6,-9,-3,10,-6,3,-10,-1,7,6,5,6,-10,2,7,-8,-3,-5,-7,6,-3,-1,1,4,5,-1,-7,8,8,-9,-10,-9,4,-1,-8,-8,-5,8,10,8,-9,-4,6,6,-4,10,-2,8,4,10,-6,4,7,1,-3,-3,-8,1,-10,7,-1,-7,7,-2,-5,-4,3,4,2,-7,4,9,6,-5,6,10,8,-4,-5,7,-1,10,-3,-3,-2,1,-2,-8,-10,-5,-3,-4,4,-8,-4,-8,-10,-8,7,-9,6,4,10,-4,-5,7,-6,10,8,-1,-7,-9,1,1,1,-6,-9,2,-4,-2,-7,-6,-1,-5,8,-3,-6,3,10,-7,3,-7,-4,4,7,-7,-8,-9,3,9,-3,6,5,-9,3,-7,7,-9,-4,1,2,10,-2,8,-7,7,-9,9,2,10,-2,-2,-2,-2,-7,-2,2,10,2,-9,4,7,9,-9,2,6,8,-4,2,-9,-10,9,-2,8,-6,-1,1,8,-3,-2,-8,-2,-8,-9,4,-9,-8,8,7,1,1,8,1,-5,-2,-3,5,9,10,4,-5,-10,-3,-10,-4,-6,7,8,-1,-4,10,-5,1,-8,1,8,-7,6,7,-10,1,6,1,5,9,-5,9,3,4,-2,3,1,-10,-8,3,8,6,-1,1,1,5,8,5,-5,-1,6,-9,-4,1,6,1,-9,9,6,-6,-10,2,-7,9,10,9,6,2,-4,3,9,3,3,-8,2,7,-4,-1,-7,-3,2,2,7,-9,9,3,8,-7,-10,9,8,-5,4,-5,8,-8,7,10,6,-7,3,-2,-7,-9,4,10,-5,-6], dtype = "int16")#candidate|9791|(720,)|const|int16
call_9790 = relay.TupleGetItem(func_8882_call(relay.reshape(const_9791.astype('int16'), [720,])), 1)
call_9792 = relay.TupleGetItem(func_8885_call(relay.reshape(const_9791.astype('int16'), [720,])), 1)
func_7850_call = mod.get_global_var('func_7850')
func_7852_call = mutated_mod.get_global_var('func_7852')
call_9794 = func_7850_call()
call_9795 = func_7850_call()
output = relay.Tuple([bop_9755,uop_9763,call_9768,call_9771,const_9772,var_9773,call_9782,var_9783,const_9784,call_9790,const_9791,call_9794,])
output2 = relay.Tuple([bop_9758,uop_9763,call_9769,call_9774,const_9772,var_9773,call_9785,var_9783,const_9784,call_9792,const_9791,call_9795,])
func_9821 = relay.Function([var_9754,var_9773,var_9783,], output)
mod['func_9821'] = func_9821
mod = relay.transform.InferType()(mod)
var_9822 = relay.var("var_9822", dtype = "float32", shape = (8, 9, 3))#candidate|9822|(8, 9, 3)|var|float32
var_9823 = relay.var("var_9823", dtype = "int32", shape = ())#candidate|9823|()|var|int32
var_9824 = relay.var("var_9824", dtype = "float32", shape = (108,))#candidate|9824|(108,)|var|float32
output = func_9821(var_9822,var_9823,var_9824,)
func_9825 = relay.Function([var_9822,var_9823,var_9824,], output)
mutated_mod['func_9825'] = func_9825
mutated_mod = relay.transform.InferType()(mutated_mod)
func_8359_call = mod.get_global_var('func_8359')
func_8361_call = mutated_mod.get_global_var('func_8361')
call_9827 = relay.TupleGetItem(func_8359_call(), 0)
call_9828 = relay.TupleGetItem(func_8361_call(), 0)
func_5053_call = mod.get_global_var('func_5053')
func_5057_call = mutated_mod.get_global_var('func_5057')
var_9832 = relay.var("var_9832", dtype = "float64", shape = ())#candidate|9832|()|var|float64
var_9833 = relay.var("var_9833", dtype = "float64", shape = (1920,))#candidate|9833|(1920,)|var|float64
call_9831 = relay.TupleGetItem(func_5053_call(relay.reshape(var_9832.astype('float64'), []), relay.reshape(var_9833.astype('float64'), [16, 10, 12]), ), 1)
call_9834 = relay.TupleGetItem(func_5057_call(relay.reshape(var_9832.astype('float64'), []), relay.reshape(var_9833.astype('float64'), [16, 10, 12]), ), 1)
output = relay.Tuple([call_9827,call_9831,var_9832,var_9833,])
output2 = relay.Tuple([call_9828,call_9834,var_9832,var_9833,])
func_9841 = relay.Function([var_9832,var_9833,], output)
mod['func_9841'] = func_9841
mod = relay.transform.InferType()(mod)
var_9842 = relay.var("var_9842", dtype = "float64", shape = ())#candidate|9842|()|var|float64
var_9843 = relay.var("var_9843", dtype = "float64", shape = (1920,))#candidate|9843|(1920,)|var|float64
output = func_9841(var_9842,var_9843,)
func_9844 = relay.Function([var_9842,var_9843,], output)
mutated_mod['func_9844'] = func_9844
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7850_call = mod.get_global_var('func_7850')
func_7852_call = mutated_mod.get_global_var('func_7852')
call_9851 = func_7850_call()
call_9852 = func_7850_call()
output = relay.Tuple([call_9851,])
output2 = relay.Tuple([call_9852,])
func_9853 = relay.Function([], output)
mod['func_9853'] = func_9853
mod = relay.transform.InferType()(mod)
output = func_9853()
func_9854 = relay.Function([], output)
mutated_mod['func_9854'] = func_9854
mutated_mod = relay.transform.InferType()(mutated_mod)
func_8499_call = mod.get_global_var('func_8499')
func_8500_call = mutated_mod.get_global_var('func_8500')
call_9915 = relay.TupleGetItem(func_8499_call(), 0)
call_9916 = relay.TupleGetItem(func_8500_call(), 0)
func_9580_call = mod.get_global_var('func_9580')
func_9583_call = mutated_mod.get_global_var('func_9583')
var_9918 = relay.var("var_9918", dtype = "int32", shape = (3, 9))#candidate|9918|(3, 9)|var|int32
const_9919 = relay.const([4,-6,2,-7,-10,3,10,-5,-10,1,-10,-5,-3,1,-8,4,4,9,9,10,2,-1,3,-7,4,4,10,7,6,9,-10,6,-5,10,2,-5,3,7,4,10,-1,2,-4,7,8,-6,8,-4,8,1,4,-4,-2,3,-6,5,-7,-1,7,1,-3,-8,8,6,-4,7,2,2,-4,-3,-10,-8,-7,-6,-8,-2,5,-1,-1,-10,-7,2,-8,-5,-1,-3,-7,8,1,-8,2,-9,1,-9,-1,7,5,5,-6,-6,-1,8,3,1,9,-2,-1,-9,2,-7,8,-9,3,-4,8,-6,2,-6,9,8,7,10,-2,-2,-8,9,1,6,-4,3,-4,-1,-2,-1,4,-8,1,9,-6,10,-8,-9,-7,-4,-7,2,-7,-8,-2,7,-8,5,4,1,-4,5,9,2,-9,4,-7,-7,-3,-1,-2,9,5,7,9,-1,-10,7,-2,-3,9,-7,8,-9,9,-6,-10,10,10,-9,7,1,8,-9,9,3,1,-2,-4,-10,3,-3,-2,2,-2,10,-1,-9,1,1,-1,-5,4,3,-2,-2,-10,10,8,1,-3,9,2,-6,5,-2,-2,9,6,-6,5,-3,-1,-7,7,8,9,-5,-7,-3,-8,9,1,6,1,8,-9,3,6,-10,-9,2,-8,-8,-7,7,7,-7,-7,-8,6,6,-6,5,10,6,4,7,6,6,8,1,1,-4,1,-9,-9,-2,6,9,-5,-5,-3,-2,8,2,-3,-3,-1,5,2,-10,-8,6,-2,-10,-7,7,-7,-9,-6,3,4,-4,-7,-6,2,8,10,4,6,-10,-8,7,3,10,-8,9,-3,6,3,-8,10,6,9,-4,3,2,-9,7,-4,1,2,-4,4,-6,4,3,10,-3,-7,-6,9,4,-6,1,-7,-3,-4,-5,-7,-7,-5,-4,-8,-3,-4,-7,-6,2,-1,-1,-7,9,-1,2,-5,8,9,-4,1,-2,-6,-7,-2,-4,3,-1,-2,-4,5,3,-4,2], dtype = "int32")#candidate|9919|(378,)|const|int32
call_9917 = relay.TupleGetItem(func_9580_call(relay.reshape(var_9918.astype('int32'), [1, 3, 9]), relay.reshape(const_9919.astype('int32'), [14, 3, 9]), ), 0)
call_9920 = relay.TupleGetItem(func_9583_call(relay.reshape(var_9918.astype('int32'), [1, 3, 9]), relay.reshape(const_9919.astype('int32'), [14, 3, 9]), ), 0)
func_6270_call = mod.get_global_var('func_6270')
func_6271_call = mutated_mod.get_global_var('func_6271')
call_9931 = func_6270_call()
call_9932 = func_6270_call()
uop_9939 = relay.sqrt(call_9917.astype('float32')) # shape=(14, 3, 9)
uop_9941 = relay.sqrt(call_9920.astype('float32')) # shape=(14, 3, 9)
uop_9963 = relay.log(uop_9939.astype('float32')) # shape=(14, 3, 9)
uop_9965 = relay.log(uop_9941.astype('float32')) # shape=(14, 3, 9)
uop_9971 = relay.tan(uop_9939.astype('float32')) # shape=(14, 3, 9)
uop_9973 = relay.tan(uop_9941.astype('float32')) # shape=(14, 3, 9)
uop_9981 = relay.asinh(uop_9963.astype('float64')) # shape=(14, 3, 9)
uop_9983 = relay.asinh(uop_9965.astype('float64')) # shape=(14, 3, 9)
output = relay.Tuple([call_9915,var_9918,const_9919,call_9931,uop_9971,uop_9981,])
output2 = relay.Tuple([call_9916,var_9918,const_9919,call_9932,uop_9973,uop_9983,])
func_9986 = relay.Function([var_9918,], output)
mod['func_9986'] = func_9986
mod = relay.transform.InferType()(mod)
mutated_mod['func_9986'] = func_9986
mutated_mod = relay.transform.InferType()(mutated_mod)
var_9987 = relay.var("var_9987", dtype = "int32", shape = (3, 9))#candidate|9987|(3, 9)|var|int32
func_9986_call = mutated_mod.get_global_var('func_9986')
call_9988 = func_9986_call(var_9987)
output = call_9988
func_9989 = relay.Function([var_9987], output)
mutated_mod['func_9989'] = func_9989
mutated_mod = relay.transform.InferType()(mutated_mod)
func_8499_call = mod.get_global_var('func_8499')
func_8500_call = mutated_mod.get_global_var('func_8500')
call_10019 = relay.TupleGetItem(func_8499_call(), 0)
call_10020 = relay.TupleGetItem(func_8500_call(), 0)
output = relay.Tuple([call_10019,])
output2 = relay.Tuple([call_10020,])
func_10022 = relay.Function([], output)
mod['func_10022'] = func_10022
mod = relay.transform.InferType()(mod)
output = func_10022()
func_10023 = relay.Function([], output)
mutated_mod['func_10023'] = func_10023
mutated_mod = relay.transform.InferType()(mutated_mod)
func_9554_call = mod.get_global_var('func_9554')
func_9556_call = mutated_mod.get_global_var('func_9556')
call_10029 = relay.TupleGetItem(func_9554_call(), 0)
call_10030 = relay.TupleGetItem(func_9556_call(), 0)
func_9580_call = mod.get_global_var('func_9580')
func_9583_call = mutated_mod.get_global_var('func_9583')
var_10038 = relay.var("var_10038", dtype = "int32", shape = (27,))#candidate|10038|(27,)|var|int32
var_10039 = relay.var("var_10039", dtype = "int32", shape = (378,))#candidate|10039|(378,)|var|int32
call_10037 = relay.TupleGetItem(func_9580_call(relay.reshape(var_10038.astype('int32'), [1, 3, 9]), relay.reshape(var_10039.astype('int32'), [14, 3, 9]), ), 0)
call_10040 = relay.TupleGetItem(func_9583_call(relay.reshape(var_10038.astype('int32'), [1, 3, 9]), relay.reshape(var_10039.astype('int32'), [14, 3, 9]), ), 0)
func_6336_call = mod.get_global_var('func_6336')
func_6337_call = mutated_mod.get_global_var('func_6337')
call_10044 = relay.TupleGetItem(func_6336_call(), 0)
call_10045 = relay.TupleGetItem(func_6337_call(), 0)
output = relay.Tuple([call_10029,call_10037,var_10038,var_10039,call_10044,])
output2 = relay.Tuple([call_10030,call_10040,var_10038,var_10039,call_10045,])
func_10047 = relay.Function([var_10038,var_10039,], output)
mod['func_10047'] = func_10047
mod = relay.transform.InferType()(mod)
mutated_mod['func_10047'] = func_10047
mutated_mod = relay.transform.InferType()(mutated_mod)
func_10047_call = mutated_mod.get_global_var('func_10047')
var_10049 = relay.var("var_10049", dtype = "int32", shape = (27,))#candidate|10049|(27,)|var|int32
var_10050 = relay.var("var_10050", dtype = "int32", shape = (378,))#candidate|10050|(378,)|var|int32
call_10048 = func_10047_call(var_10049,var_10050,)
output = call_10048
func_10051 = relay.Function([var_10049,var_10050,], output)
mutated_mod['func_10051'] = func_10051
mutated_mod = relay.transform.InferType()(mutated_mod)
func_8173_call = mod.get_global_var('func_8173')
func_8175_call = mutated_mod.get_global_var('func_8175')
call_10069 = func_8173_call()
call_10070 = func_8173_call()
output = relay.Tuple([call_10069,])
output2 = relay.Tuple([call_10070,])
func_10081 = relay.Function([], output)
mod['func_10081'] = func_10081
mod = relay.transform.InferType()(mod)
mutated_mod['func_10081'] = func_10081
mutated_mod = relay.transform.InferType()(mutated_mod)
func_10081_call = mutated_mod.get_global_var('func_10081')
call_10082 = func_10081_call()
output = call_10082
func_10083 = relay.Function([], output)
mutated_mod['func_10083'] = func_10083
mutated_mod = relay.transform.InferType()(mutated_mod)
func_9853_call = mod.get_global_var('func_9853')
func_9854_call = mutated_mod.get_global_var('func_9854')
call_10184 = relay.TupleGetItem(func_9853_call(), 0)
call_10185 = relay.TupleGetItem(func_9854_call(), 0)
func_6211_call = mod.get_global_var('func_6211')
func_6212_call = mutated_mod.get_global_var('func_6212')
call_10190 = relay.TupleGetItem(func_6211_call(), 1)
call_10191 = relay.TupleGetItem(func_6212_call(), 1)
func_8635_call = mod.get_global_var('func_8635')
func_8637_call = mutated_mod.get_global_var('func_8637')
call_10195 = relay.TupleGetItem(func_8635_call(), 0)
call_10196 = relay.TupleGetItem(func_8637_call(), 0)
bop_10199 = relay.greater(call_10190.astype('bool'), relay.reshape(call_10195.astype('bool'), relay.shape_of(call_10190))) # shape=(27, 1)
bop_10202 = relay.greater(call_10191.astype('bool'), relay.reshape(call_10196.astype('bool'), relay.shape_of(call_10191))) # shape=(27, 1)
func_5011_call = mod.get_global_var('func_5011')
func_5015_call = mutated_mod.get_global_var('func_5015')
const_10214 = relay.const([False,False,False,True,False,True,False,True,False,False,True,True,True,True,False,True,True,True,False,False,False,True,True,False,False,False,True,True,False,True,True,False,False,True,False,False,False,False,True,True,True,True,False,False,False,False,True,True,True,True,True,False,True,True,False,True,True,False,False,False,True,False,False,True,True,False,False,False,True,True,True,False,False,True,False,False,False,False,False,True,True,True,True,False,False,False,False,False,False,False,False,True,False,False,True,False,True,True,False,False,False,True,False,True,False,False,True,False,False,True,False,False,True,True,False,True,True,False,True,True,True,True,True,True,False,False,True,True,True,True,True,True,False,True,False,True,True,False,True,False,True,True,False,False,True,False,False,False,True,True,False,False,True,True,True,True,True,True,False,False,False,True,True,True,False,False,False,True,False,True,True,True,True,True,False,False,False,False,False,True,True,False,True,False,True,False,True,False,True,True,False,False,False,False,True,False,False,True,False,False,False,True,True,True,True,True,True,True,True,False,False,True,False,True,True,False,True,True,False,True,False,True,True,True,True,False,True,True,True,True,True,True,True,False,True,False,False,False,True,True,False,True,False,True,False,False,True,True,True,True,False,True,False,True,False,True,True,False,False,False,True,True,False,False,False,True,False,False,True,True,True,False,False,False,True,False,False,False,False,True,True,False,False,False,False,True,True,True,True,False,False,False,True,False,True,True,True,True,True,False,True,True,False,True,True,True,False,True,True,False,False,True,False,False,True,False,True,False,False,False,False,False,True,False,False,False,True,True,True,True,True,False,False,False,False,True,True,False,False,True,False,False,False,False,False,True,True,False,True,True,False,False,True,True,False,True,True,True,False,True,False,True,True,False,True,True,True,True,True,True,False,True,True,False,False,False,True,True,False,False,False,False,False,True,False,False,False,True,False,False,False,False,True,False,True,True,True,False,False,True,False,False,False,True,False,False,True,True,True,True,True,True,False,False,False,False,False,False,True,False,False,False,True,False,False,False,True,True,False,True,False,False,True,True,False,True,True,True,False,True,True,True,False,True,True,True,True,False,True,False,False,False,False,True,False,False,True,True,False,False,False,False,False,True,True,False,False,True,False,False,False,True,True,False,False,True,True,True,True,True,True,True,True,False,True,True,False,False,False,False,False,False,True,True,True,False,True,True,True,True,True,True,False,False,False,False,True,True,True,False,False,True,False,True,True,True,False,True,True,False,False,False,False,True,True,True,True,False,False,True,False,True,False,False,False,False,True,True,False,False,False,False,True,False,False,False,True,False,False,False,True,False,False,True,True,True,True,False,False,True,True,False,True,False,False,True,False,True,False,False,False,False,True,True,False,True,False,True,True,False,False,False,False,False,False,True,False,True,True,False,False,True,False,True,True,False,False,True,False,True,False,False,True,True,True,False,False,True,True,True,True,True,False,True,False,False,False,False,True,False,False,True,True,False,True,False,False,True,True,False,False,True,False,False,False,False,False,False,True,True,False,True,True,False,False,True,False,True,True,True,True,True,False,False,True,True,False,True,True,True,False,True,True,False,True,True,False,True,False,False,True,False,True,False,False,True,True,False,False,False,True,True,True,True,True,False,True,True,True,False,True,True,True,False,False,True,True,False,False,True,False,True,True,True,True,True,True,False,True,True,False,False,True,True,False,False,True,True,False,True], dtype = "bool")#candidate|10214|(720,)|const|bool
call_10213 = relay.TupleGetItem(func_5011_call(relay.reshape(const_10214.astype('bool'), [12, 10, 6]), relay.reshape(const_10214.astype('bool'), [12, 10, 6]), ), 0)
call_10215 = relay.TupleGetItem(func_5015_call(relay.reshape(const_10214.astype('bool'), [12, 10, 6]), relay.reshape(const_10214.astype('bool'), [12, 10, 6]), ), 0)
uop_10216 = relay.atan(call_10213.astype('float64')) # shape=(12, 10, 6)
uop_10218 = relay.atan(call_10215.astype('float64')) # shape=(12, 10, 6)
bop_10223 = relay.logical_xor(bop_10199.astype('uint16'), relay.reshape(call_10195.astype('uint16'), relay.shape_of(bop_10199))) # shape=(27, 1)
bop_10226 = relay.logical_xor(bop_10202.astype('uint16'), relay.reshape(call_10196.astype('uint16'), relay.shape_of(bop_10202))) # shape=(27, 1)
func_2472_call = mod.get_global_var('func_2472')
func_2475_call = mutated_mod.get_global_var('func_2475')
call_10231 = relay.TupleGetItem(func_2472_call(relay.reshape(call_10190.astype('uint8'), [1, 9, 3])), 1)
call_10232 = relay.TupleGetItem(func_2475_call(relay.reshape(call_10190.astype('uint8'), [1, 9, 3])), 1)
output = relay.Tuple([call_10184,const_10214,uop_10216,bop_10223,call_10231,])
output2 = relay.Tuple([call_10185,const_10214,uop_10218,bop_10226,call_10232,])
func_10250 = relay.Function([], output)
mod['func_10250'] = func_10250
mod = relay.transform.InferType()(mod)
output = func_10250()
func_10251 = relay.Function([], output)
mutated_mod['func_10251'] = func_10251
mutated_mod = relay.transform.InferType()(mutated_mod)
var_10302 = relay.var("var_10302", dtype = "float64", shape = (16, 3, 6))#candidate|10302|(16, 3, 6)|var|float64
uop_10303 = relay.sinh(var_10302.astype('float64')) # shape=(16, 3, 6)
output = uop_10303
output2 = uop_10303
func_10317 = relay.Function([var_10302,], output)
mod['func_10317'] = func_10317
mod = relay.transform.InferType()(mod)
var_10318 = relay.var("var_10318", dtype = "float64", shape = (16, 3, 6))#candidate|10318|(16, 3, 6)|var|float64
output = func_10317(var_10318)
func_10319 = relay.Function([var_10318], output)
mutated_mod['func_10319'] = func_10319
mutated_mod = relay.transform.InferType()(mutated_mod)
const_10343 = relay.constdtype = "float32")#candidate|10343|(12, 15, 11)|const|float32
uop_10344 = relay.asinh(const_10343.astype('float32')) # shape=(12, 15, 11)
func_8499_call = mod.get_global_var('func_8499')
func_8500_call = mutated_mod.get_global_var('func_8500')
call_10347 = relay.TupleGetItem(func_8499_call(), 0)
call_10348 = relay.TupleGetItem(func_8500_call(), 0)
output = relay.Tuple([uop_10344,call_10347,])
output2 = relay.Tuple([uop_10344,call_10348,])
func_10352 = relay.Function([], output)
mod['func_10352'] = func_10352
mod = relay.transform.InferType()(mod)
mutated_mod['func_10352'] = func_10352
mutated_mod = relay.transform.InferType()(mutated_mod)
func_10352_call = mutated_mod.get_global_var('func_10352')
call_10353 = func_10352_call()
output = call_10353
func_10354 = relay.Function([], output)
mutated_mod['func_10354'] = func_10354
mutated_mod = relay.transform.InferType()(mutated_mod)
var_10371 = relay.var("var_10371", dtype = "float64", shape = (12, 11, 1))#candidate|10371|(12, 11, 1)|var|float64
uop_10372 = relay.atan(var_10371.astype('float64')) # shape=(12, 11, 1)
output = relay.Tuple([uop_10372,])
output2 = relay.Tuple([uop_10372,])
func_10396 = relay.Function([var_10371,], output)
mod['func_10396'] = func_10396
mod = relay.transform.InferType()(mod)
var_10397 = relay.var("var_10397", dtype = "float64", shape = (12, 11, 1))#candidate|10397|(12, 11, 1)|var|float64
output = func_10396(var_10397)
func_10398 = relay.Function([var_10397], output)
mutated_mod['func_10398'] = func_10398
mutated_mod = relay.transform.InferType()(mutated_mod)
func_8818_call = mod.get_global_var('func_8818')
func_8819_call = mutated_mod.get_global_var('func_8819')
call_10414 = relay.TupleGetItem(func_8818_call(), 0)
call_10415 = relay.TupleGetItem(func_8819_call(), 0)
func_9841_call = mod.get_global_var('func_9841')
func_9844_call = mutated_mod.get_global_var('func_9844')
const_10418 = relay.const(0.226905, dtype = "float64")#candidate|10418|()|const|float64
var_10419 = relay.var("var_10419", dtype = "float64", shape = (4, 480))#candidate|10419|(4, 480)|var|float64
call_10417 = relay.TupleGetItem(func_9841_call(relay.reshape(const_10418.astype('float64'), []), relay.reshape(var_10419.astype('float64'), [1920,]), ), 1)
call_10420 = relay.TupleGetItem(func_9844_call(relay.reshape(const_10418.astype('float64'), []), relay.reshape(var_10419.astype('float64'), [1920,]), ), 1)
output = relay.Tuple([call_10414,call_10417,const_10418,var_10419,])
output2 = relay.Tuple([call_10415,call_10420,const_10418,var_10419,])
func_10433 = relay.Function([var_10419,], output)
mod['func_10433'] = func_10433
mod = relay.transform.InferType()(mod)
mutated_mod['func_10433'] = func_10433
mutated_mod = relay.transform.InferType()(mutated_mod)
var_10434 = relay.var("var_10434", dtype = "float64", shape = (4, 480))#candidate|10434|(4, 480)|var|float64
func_10433_call = mutated_mod.get_global_var('func_10433')
call_10435 = func_10433_call(var_10434)
output = call_10435
func_10436 = relay.Function([var_10434], output)
mutated_mod['func_10436'] = func_10436
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6419_call = mod.get_global_var('func_6419')
func_6420_call = mutated_mod.get_global_var('func_6420')
call_10479 = relay.TupleGetItem(func_6419_call(), 0)
call_10480 = relay.TupleGetItem(func_6420_call(), 0)
func_5053_call = mod.get_global_var('func_5053')
func_5057_call = mutated_mod.get_global_var('func_5057')
var_10486 = relay.var("var_10486", dtype = "float64", shape = ())#candidate|10486|()|var|float64
var_10487 = relay.var("var_10487", dtype = "float64", shape = (1920,))#candidate|10487|(1920,)|var|float64
call_10485 = relay.TupleGetItem(func_5053_call(relay.reshape(var_10486.astype('float64'), []), relay.reshape(var_10487.astype('float64'), [16, 10, 12]), ), 0)
call_10488 = relay.TupleGetItem(func_5057_call(relay.reshape(var_10486.astype('float64'), []), relay.reshape(var_10487.astype('float64'), [16, 10, 12]), ), 0)
func_8476_call = mod.get_global_var('func_8476')
func_8477_call = mutated_mod.get_global_var('func_8477')
call_10493 = func_8476_call()
call_10494 = func_8476_call()
output = relay.Tuple([call_10479,call_10485,var_10486,var_10487,call_10493,])
output2 = relay.Tuple([call_10480,call_10488,var_10486,var_10487,call_10494,])
func_10504 = relay.Function([var_10486,var_10487,], output)
mod['func_10504'] = func_10504
mod = relay.transform.InferType()(mod)
mutated_mod['func_10504'] = func_10504
mutated_mod = relay.transform.InferType()(mutated_mod)
func_10504_call = mutated_mod.get_global_var('func_10504')
var_10506 = relay.var("var_10506", dtype = "float64", shape = ())#candidate|10506|()|var|float64
var_10507 = relay.var("var_10507", dtype = "float64", shape = (1920,))#candidate|10507|(1920,)|var|float64
call_10505 = func_10504_call(var_10506,var_10507,)
output = call_10505
func_10508 = relay.Function([var_10506,var_10507,], output)
mutated_mod['func_10508'] = func_10508
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7850_call = mod.get_global_var('func_7850')
func_7852_call = mutated_mod.get_global_var('func_7852')
call_10529 = func_7850_call()
call_10530 = func_7850_call()
func_10081_call = mod.get_global_var('func_10081')
func_10083_call = mutated_mod.get_global_var('func_10083')
call_10539 = relay.TupleGetItem(func_10081_call(), 0)
call_10540 = relay.TupleGetItem(func_10083_call(), 0)
func_9580_call = mod.get_global_var('func_9580')
func_9583_call = mutated_mod.get_global_var('func_9583')
var_10544 = relay.var("var_10544", dtype = "int32", shape = (378,))#candidate|10544|(378,)|var|int32
call_10543 = relay.TupleGetItem(func_9580_call(relay.reshape(call_10539.astype('int32'), [1, 3, 9]), relay.reshape(var_10544.astype('int32'), [14, 3, 9]), ), 0)
call_10545 = relay.TupleGetItem(func_9583_call(relay.reshape(call_10539.astype('int32'), [1, 3, 9]), relay.reshape(var_10544.astype('int32'), [14, 3, 9]), ), 0)
uop_10552 = relay.sqrt(var_10544.astype('float64')) # shape=(378,)
func_9270_call = mod.get_global_var('func_9270')
func_9271_call = mutated_mod.get_global_var('func_9271')
call_10564 = relay.TupleGetItem(func_9270_call(), 0)
call_10565 = relay.TupleGetItem(func_9271_call(), 0)
output = relay.Tuple([call_10529,call_10539,call_10543,uop_10552,call_10564,])
output2 = relay.Tuple([call_10530,call_10540,call_10545,uop_10552,call_10565,])
func_10578 = relay.Function([var_10544,], output)
mod['func_10578'] = func_10578
mod = relay.transform.InferType()(mod)
var_10579 = relay.var("var_10579", dtype = "int32", shape = (378,))#candidate|10579|(378,)|var|int32
output = func_10578(var_10579)
func_10580 = relay.Function([var_10579], output)
mutated_mod['func_10580'] = func_10580
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7298_call = mod.get_global_var('func_7298')
func_7299_call = mutated_mod.get_global_var('func_7299')
call_10622 = relay.TupleGetItem(func_7298_call(), 0)
call_10623 = relay.TupleGetItem(func_7299_call(), 0)
func_8459_call = mod.get_global_var('func_8459')
func_8461_call = mutated_mod.get_global_var('func_8461')
var_10636 = relay.var("var_10636", dtype = "float32", shape = (224,))#candidate|10636|(224,)|var|float32
call_10635 = relay.TupleGetItem(func_8459_call(relay.reshape(var_10636.astype('float32'), [2, 16, 7])), 0)
call_10637 = relay.TupleGetItem(func_8461_call(relay.reshape(var_10636.astype('float32'), [2, 16, 7])), 0)
func_9680_call = mod.get_global_var('func_9680')
func_9681_call = mutated_mod.get_global_var('func_9681')
call_10660 = relay.TupleGetItem(func_9680_call(), 1)
call_10661 = relay.TupleGetItem(func_9681_call(), 1)
func_9114_call = mod.get_global_var('func_9114')
func_9117_call = mutated_mod.get_global_var('func_9117')
const_10666 = relay.const([[-1.544466,-1.146355,-1.240584],[5.964014,8.628420,8.709835],[2.959830,-1.555687,1.234803],[-4.409966,-9.988447,-7.914150],[5.204554,3.491369,5.113452],[6.952089,-4.064846,-5.800316],[-2.517916,-9.884281,-8.644771],[-0.312030,8.418824,-6.303001],[-8.338253,-6.222826,-4.071273],[-3.095727,-3.742055,4.469154],[5.676332,4.928136,4.014249],[0.972426,-1.581226,5.558765],[4.418833,-3.635304,1.154168],[0.540749,-9.860011,-1.743100],[-0.045051,-0.106282,-6.294260],[-4.443282,-7.578775,2.007888],[-3.735032,0.120810,-7.198558],[7.479707,-8.882551,-8.215735],[-0.558668,0.671591,7.466305],[7.100334,5.122353,6.582163],[-5.162710,7.141724,1.794209],[-0.318106,4.624966,-7.273512],[-6.307917,2.173988,-8.410401],[-8.769275,5.218724,4.448961],[3.724932,2.877003,-7.719292],[-2.926415,-2.834870,7.314452],[-9.909070,1.446480,7.307983],[-5.599175,9.657296,1.058410],[8.649975,2.892930,9.173318],[-1.566025,6.535446,2.119224],[-1.466476,-9.174838,-3.649290],[-8.365078,4.667856,-2.834284],[-9.579801,3.867173,5.307437],[1.218436,-5.438754,7.666263],[8.839023,1.733062,5.799232],[-5.122910,-8.028852,5.862018],[-5.850019,-3.221822,3.522884],[-4.132158,8.971130,-9.546820],[-6.303263,1.615277,-3.263593],[7.320130,-0.615615,-1.155258],[0.021903,8.885652,-8.841322],[-3.747605,4.737740,-2.436366],[-7.685197,-2.658533,-6.784277],[-5.281291,-3.964306,-9.140756],[-1.830576,-1.179566,-4.375691],[4.051964,4.136280,4.819499],[8.748028,-7.032695,-7.789638],[7.330577,6.628414,-9.063099],[-3.515591,7.379884,5.075865],[7.396981,2.627591,-0.660088],[8.076596,2.743733,0.257108],[-1.548059,8.072633,1.897335],[5.486292,-6.139158,-3.680563],[4.125915,9.707960,3.733908],[-9.734336,-2.423381,-5.538697],[1.060668,-8.886772,-7.554401],[1.252899,-0.615139,4.385917],[5.289403,5.928640,4.106640],[-0.666194,-6.487324,3.612100],[-4.176570,8.080701,6.629569],[-3.500173,2.720960,-8.029139],[-1.442116,-5.004342,-5.299741],[-0.728711,-1.701191,2.580440],[3.635546,-5.926508,7.352831],[4.154940,4.246737,-2.221275],[-3.127964,6.053978,-0.693076],[9.842063,-8.181246,6.789452],[9.068480,-6.926555,4.527072],[5.240167,5.074285,6.838467],[-3.257422,8.559583,1.106506],[-3.766107,-1.969709,1.822908],[3.986152,2.413361,-3.825674],[-9.626121,-8.564600,5.037460],[-8.625074,-4.803289,3.569975],[-1.993123,-4.429672,1.837983],[-6.218667,2.440798,-2.237630],[1.991817,2.460846,5.142942],[8.059257,8.784266,-4.593737],[-6.691639,6.015470,-6.798771],[-1.341137,-6.590094,-6.249496],[-4.031727,-2.311734,7.871072],[-5.545191,-1.493215,9.022972],[4.462376,-1.085218,-2.080937],[5.493348,9.680423,1.021885],[8.185977,4.505801,-0.649900],[-3.224061,-2.197506,-0.089387],[7.972973,-0.952565,-8.109550],[3.210457,-0.700453,-0.839769],[-1.956253,1.280289,7.812206],[7.937362,-3.675067,-8.606327],[5.244166,4.089786,2.735809],[3.650581,-1.589033,6.766882],[-6.780499,-8.507403,-9.816050],[8.877041,4.037184,-0.089578],[-7.988210,4.689060,-3.017948],[3.899208,-7.811234,9.757096],[3.263644,-5.046238,-0.931132],[-8.474249,-3.434979,-2.601695],[-8.562256,8.035383,-5.804247],[-8.597807,-6.491425,-4.415198],[5.347808,-7.018226,-6.029305],[-5.530440,-0.974258,-2.127363],[-5.296996,3.954734,0.953606],[1.483756,-4.337200,3.742173],[-1.657622,4.911083,-6.854407],[-5.089491,1.736524,7.922150],[-8.976098,2.794336,8.288984],[-9.329401,7.711574,-2.973265],[6.095171,-8.689276,6.802050],[-1.281077,8.656859,-0.450754],[7.650359,9.870876,8.386445],[5.843547,-8.563641,-1.943760],[-3.854478,4.361016,8.837934],[-8.634898,4.846085,-0.362289],[3.820140,5.740090,-1.983812],[-1.740501,-1.878686,-3.827364],[-6.466570,7.619126,7.901927]], dtype = "float32")#candidate|10666|(117, 3)|const|float32
var_10667 = relay.var("var_10667", dtype = "float64", shape = (1, 364))#candidate|10667|(1, 364)|var|float64
call_10665 = relay.TupleGetItem(func_9114_call(relay.reshape(const_10666.astype('float32'), [351,]), relay.reshape(var_10667.astype('float64'), [364,]), ), 2)
call_10668 = relay.TupleGetItem(func_9117_call(relay.reshape(const_10666.astype('float32'), [351,]), relay.reshape(var_10667.astype('float64'), [364,]), ), 2)
uop_10682 = relay.asin(call_10660.astype('float64')) # shape=(1, 9, 3)
uop_10684 = relay.asin(call_10661.astype('float64')) # shape=(1, 9, 3)
func_6270_call = mod.get_global_var('func_6270')
func_6271_call = mutated_mod.get_global_var('func_6271')
call_10695 = func_6270_call()
call_10696 = func_6270_call()
output = relay.Tuple([call_10622,call_10635,var_10636,call_10665,const_10666,var_10667,uop_10682,call_10695,])
output2 = relay.Tuple([call_10623,call_10637,var_10636,call_10668,const_10666,var_10667,uop_10684,call_10696,])
func_10698 = relay.Function([var_10636,var_10667,], output)
mod['func_10698'] = func_10698
mod = relay.transform.InferType()(mod)
var_10699 = relay.var("var_10699", dtype = "float32", shape = (224,))#candidate|10699|(224,)|var|float32
var_10700 = relay.var("var_10700", dtype = "float64", shape = (1, 364))#candidate|10700|(1, 364)|var|float64
output = func_10698(var_10699,var_10700,)
func_10701 = relay.Function([var_10699,var_10700,], output)
mutated_mod['func_10701'] = func_10701
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7885_call = mod.get_global_var('func_7885')
func_7887_call = mutated_mod.get_global_var('func_7887')
call_10708 = func_7885_call()
call_10709 = func_7885_call()
output = call_10708
output2 = call_10709
func_10745 = relay.Function([], output)
mod['func_10745'] = func_10745
mod = relay.transform.InferType()(mod)
output = func_10745()
func_10746 = relay.Function([], output)
mutated_mod['func_10746'] = func_10746
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6211_call = mod.get_global_var('func_6211')
func_6212_call = mutated_mod.get_global_var('func_6212')
call_10768 = relay.TupleGetItem(func_6211_call(), 0)
call_10769 = relay.TupleGetItem(func_6212_call(), 0)
func_5053_call = mod.get_global_var('func_5053')
func_5057_call = mutated_mod.get_global_var('func_5057')
var_10780 = relay.var("var_10780", dtype = "float64", shape = ())#candidate|10780|()|var|float64
const_10781 = relay.const([-7.704459,2.379592,1.577526,-6.049795,-1.743317,-6.039965,6.652543,8.550323,-9.128799,9.147090,2.321584,6.261968,-8.823108,4.972682,4.835602,-3.943309,-5.020391,0.224214,7.903473,4.538753,5.087884,-3.554358,9.326765,-4.355684,6.509524,-1.810243,9.651940,-4.631431,1.548398,8.668785,-3.460526,-5.485993,-7.677000,9.015845,-5.464405,2.883488,-2.968817,-5.023772,1.462783,6.654269,-8.447857,6.612192,7.926344,8.646052,5.454968,-2.235401,3.648468,-0.304478,-9.742709,0.509302,-2.427001,-9.126525,3.364424,7.607937,4.723321,4.222774,-6.377322,1.603979,-3.156618,-1.485604,8.034364,1.746183,-1.251248,-3.619200,4.081551,9.061075,-0.083514,-0.288799,-5.136473,-4.876021,-8.100590,1.723147,4.305361,3.918628,-5.858356,4.193959,-5.238158,-1.133075,8.613385,8.795086,-2.958140,-3.190528,-9.616406,-7.956060,-6.470744,-8.022153,-6.772070,4.710228,-4.134993,7.032507,1.334852,-0.817484,-1.927486,-7.632691,-7.324993,-6.502170,-1.597306,9.547547,-1.829001,7.372303,8.291680,0.749716,3.090989,2.718126,6.352213,-3.746573,7.077022,-2.243259,6.256404,8.398505,-4.182286,4.723292,6.332771,2.308271,-3.976062,-2.663895,-3.622005,-1.486197,6.867476,5.342359,-7.041517,4.107079,4.650208,6.689029,-1.764237,-1.224445,0.233912,8.506467,-1.510302,-0.339334,8.760264,-2.929046,-6.091658,7.061865,-5.838445,6.041049,9.328476,7.486763,-4.223598,8.059963,4.670825,-0.517082,4.178050,2.644814,-5.044493,3.710948,2.779622,-3.402493,-5.709340,8.784382,-5.974730,1.931860,8.525788,-1.470554,-1.358103,-9.536020,5.995136,-5.184228,-1.759415,8.172528,7.231804,-6.669879,-7.938240,-1.677799,-1.688580,-7.665520,-4.031411,-8.897572,-0.960763,-7.142245,1.169312,-4.945503,9.301143,4.388905,8.783085,-3.209206,9.798859,2.296926,7.079269,-7.186317,3.147122,5.818016,9.531982,4.452936,-5.808209,-3.387394,-6.969574,2.007341,2.768227,7.370237,7.454750,3.167719,-0.208670,-6.875183,-7.984494,8.702655,1.315151,-7.238528,5.986495,-9.610511,6.867634,4.870478,-2.082154,6.564094,4.693549,-3.973530,-1.104024,-0.432975,-2.014145,0.025844,0.115171,-8.484148,9.777841,8.583956,-4.179303,-6.172018,-6.765912,0.143552,-0.555330,-4.351108,7.053898,-7.125783,-5.231328,-0.432107,-9.002950,-9.101778,-5.035642,-0.133366,8.607242,-6.304250,-5.837940,5.560859,-1.692929,6.896718,3.095178,4.687837,-5.101573,-7.151898,-8.451935,2.468896,-2.564976,-5.513780,-8.406866,-8.474108,1.099816,9.607596,-1.939293,-7.372735,7.942689,1.686273,-7.692533,1.286295,4.328320,7.783870,-3.817553,-6.043414,-3.294463,4.449002,5.817895,-2.388157,3.270530,-8.012282,-5.211336,-6.552885,-8.631553,-0.616408,-7.939668,4.030172,-9.843991,9.339749,2.468730,0.392126,4.480552,-1.117820,5.841775,2.932382,-2.776697,-0.509885,-5.360891,-5.767757,-8.415806,8.115660,-4.968841,-2.399635,-7.063795,9.606717,3.806697,4.961661,-2.533972,-2.194215,8.604886,-2.596073,3.554924,-0.389429,2.703998,7.940580,-2.183405,4.889745,3.684162,1.935449,6.163555,-5.065323,7.768965,3.201163,6.408843,8.681260,6.837199,6.436509,-4.722839,9.213947,-4.477416,-6.078054,4.432444,-9.642475,6.592192,-2.587056,-2.632174,-3.274664,3.230101,0.835552,6.640019,6.537608,-8.670691,3.715839,-3.562998,3.187249,7.768765,7.419183,8.027970,-6.486954,0.528892,6.774958,9.629101,-6.748587,-1.308893,3.765057,-1.132990,-6.456412,2.506082,-5.672414,-4.607087,5.446898,4.023989,9.992987,-4.980247,5.953494,-6.322144,7.628316,-3.648853,-5.282854,-5.945764,-6.842424,-5.599696,8.534682,7.636578,-0.306135,9.748305,5.537524,-6.865770,0.400174,-8.003932,2.674825,-0.109967,-2.436734,-9.514857,3.749680,8.859443,0.197435,-5.237837,5.893437,-6.995897,-5.609053,0.448983,-6.654761,-2.897311,-8.023561,7.656786,6.037493,2.570216,-6.676791,9.262345,-5.870915,-6.984252,-6.501444,-5.606143,-4.718279,0.243435,6.337678,-7.431968,5.416627,8.029860,-8.008553,4.949692,-8.147712,5.222802,-1.553364,-9.363510,5.821534,-2.007738,-0.143493,-3.798035,-3.041907,1.925454,-2.268848,3.286958,-4.964489,-6.798555,5.982716,-8.526835,-8.701182,8.764973,-5.084078,2.857204,-8.579352,-2.766456,-5.825774,2.872189,-8.601568,-3.800277,-4.156118,-6.802325,4.565708,5.038502,-1.289629,-9.533617,-1.873698,5.902719,-5.993112,-3.351995,1.138882,3.772274,9.572728,-3.181153,8.854746,2.155236,-7.464313,-6.634804,-0.576145,7.863502,0.241424,0.453367,4.704431,9.566052,8.604443,-0.342330,-8.651849,-9.996604,-0.944608,2.819044,-2.330722,9.807129,4.107146,-2.122334,-8.898446,-7.251985,3.971380,8.025132,7.353467,-2.783004,-6.281172,1.404870,-9.147837,3.599016,-6.259077,-5.664726,1.389137,6.961098,6.105440,-0.945100,4.024437,-0.655895,-1.113944,7.957730,-8.847640,-5.772568,-9.373176,6.795392,3.066406,0.366864,3.803412,-1.478385,-4.194393,7.282316,1.321642,2.767681,2.074540,-2.818957,8.429544,6.998327,2.890577,-0.732704,7.393243,7.833037,-9.881030,-7.569722,-3.331892,-5.342393,-3.467585,8.845571,6.880988,1.786236,-7.573898,-5.946947,1.978559,2.631134,6.674130,3.689684,3.088858,-9.287474,1.675936,8.235125,2.463890,-3.465996,-2.191038,-9.344799,-9.104364,-0.622953,8.034373,-6.305314,-3.401798,9.311912,-8.089853,-1.515606,8.163096,8.082986,7.094897,0.678223,2.251853,-7.940606,5.702613,6.510474,-9.772302,-4.970909,5.087268,9.295572,-7.642150,8.467211,5.153218,-6.463382,-9.829823,0.002502,-1.918086,9.392445,6.006959,2.226657,-8.444052,-3.659286,-2.426814,-1.057131,-5.971898,0.032490,-9.812448,8.469235,-6.873019,7.387060,4.094183,-1.065607,1.665061,9.216954,-4.571626,6.958828,-3.038307,3.462197,-3.290770,-2.031297,2.605964,9.456713,-4.155270,7.137065,-4.592710,-0.484703,-1.481028,7.914641,-2.265308,-7.870497,-1.029278,1.344971,0.916328,2.350978,-2.085382,-4.562295,-1.723477,7.924394,-1.616934,5.436027,2.387521,0.414395,1.282342,7.503594,6.484860,-8.191920,4.848036,-1.670399,-4.219286,-3.234914,3.976213,2.681271,-5.728402,1.646888,0.518057,9.198711,-8.355648,-6.266606,-2.816239,3.721147,4.780198,9.796384,0.533038,-7.457505,9.035325,-3.350422,9.372574,-7.244406,-7.870523,0.014051,2.434334,0.443911,3.567090,9.106183,6.967874,0.093985,-5.804582,-0.833337,7.241937,7.887343,0.010492,1.602005,9.844554,0.997903,6.601563,-9.075662,9.136005,-7.373401,5.392403,-1.122834,-1.428886,-9.850690,-9.491899,-5.001645,7.995346,2.974852,1.456225,2.542390,-2.331577,6.532126,0.303449,-8.382669,8.739568,4.512693,-4.664034,2.531736,-4.524701,2.274350,-3.645949,-4.117577,-3.645779,6.402999,-7.100010,-8.868861,5.267405,7.834200,7.886421,7.068330,-1.130433,-6.020847,3.551628,-9.031025,6.084831,-3.978351,3.586365,4.717494,-9.259463,-1.969402,6.980901,-2.748250,-2.395365,-8.834528,3.345746,-2.225843,-4.264831,6.056873,-3.939427,3.900091,4.293261,-1.504947,-7.939138,-5.535974,-7.833758,-2.013606,-8.120399,-8.931612,-6.008738,-1.647107,-7.047410,4.659629,2.485384,-2.906330,-3.852964,2.337474,-2.708230,0.747090,9.716687,1.451701,-8.988208,-8.519645,-1.607469,5.208861,5.675231,1.972348,-8.209781,-1.828753,9.851808,6.937683,6.494958,0.298328,-8.974620,-7.305177,6.382438,4.545056,2.668907,-1.242616,-9.545914,-6.178394,9.687380,-3.216239,5.133296,-6.486711,1.288790,-7.278429,-0.564868,-9.526175,-4.860114,6.510822,5.224202,3.617845,-3.013178,-8.479798,7.611864,-1.554751,-3.568024,-8.852116,3.675721,-7.134196,0.010416,4.050268,7.873338,-9.478528,3.972913,7.451320,8.056387,3.436161,-0.612329,-0.960541,3.148808,-2.652668,4.366310,0.574862,5.254465,-0.472116,-5.249725,1.235526,6.165854,-6.672139,6.002909,0.304764,-5.434657,-7.392510,6.353722,6.500737,4.229956,-0.937575,-1.495596,8.707794,-2.331297,-8.906079,-9.107066,-6.237715,-7.066143,-7.960756,-8.660290,-2.693921,-2.868029,5.186382,2.248217,-6.324656,-2.760907,-4.317087,-4.894105,1.321890,9.406154,-9.945769,6.720770,2.051708,5.538945,9.412479,-4.987221,-1.628490,-8.795341,-7.164318,-5.157567,-6.145558,6.168747,-1.967144,-2.762471,-2.332171,4.363306,0.382821,5.146951,-5.809209,-3.367995,-5.611437,0.183777,-6.540446,-4.046104,-3.897943,2.343861,-1.362879,2.281875,4.286919,-6.875783,9.489427,-5.657595,-4.771827,1.749438,-3.497185,-5.355929,-3.277930,7.446054,5.746536,3.973984,5.065405,-0.432015,-0.885084,-2.534772,0.940014,2.202549,-4.419914,-4.349928,-7.670230,-1.429729,6.263649,5.201521,-1.535643,-4.579825,4.351481,7.004786,1.544426,-2.638016,4.831129,8.381773,6.947216,9.074154,-5.492120,-0.236757,-0.567823,8.043581,7.613525,4.377542,4.322962,0.206595,-0.382098,9.025838,-5.256597,1.205275,-1.459808,-7.491848,3.426886,-4.809953,9.266347,-0.691720,4.629623,-5.425822,8.710628,-7.703570,0.892417,8.456956,2.311722,1.098508,-7.299651,9.114199,9.874406,-9.170011,-5.759391,-2.216536,4.105080,7.466336,-4.457437,8.499964,9.939648,2.524869,6.231299,-1.296312,5.496478,-1.891418,-4.215043,8.577905,0.457562,1.975288,-1.927538,-5.122636,-6.934169,-9.381669,7.933677,-5.808110,6.198294,4.699087,-5.509166,2.050125,-3.598533,4.782652,-8.388396,-0.135361,-2.098146,3.798629,-2.984365,-7.754919,9.432014,7.501280,-6.891150,8.139262,4.517819,-4.981136,1.144607,-8.449256,5.524617,-0.218514,-1.912207,-5.338392,-6.252267,2.797838,1.762629,-0.491121,-3.610857,4.892523,6.861819,-0.329846,3.258691,6.736103,7.679098,-1.170672,8.669228,-4.620774,-7.108619,1.820778,-5.023440,9.135508,-6.242526,-6.037914,5.063296,-8.768303,-6.066015,-5.712991,7.840022,-1.354250,2.248802,-7.552848,-5.653278,-9.555960,9.753202,7.417229,-6.382699,4.982526,-7.485353,2.448922,9.811176,4.853724,-6.714779,2.894526,0.632853,-8.296109,7.964132,7.606663,7.632626,-7.329000,4.300057,-2.991525,-1.710399,6.750188,4.729286,-4.314582,-0.389469,8.712447,9.533236,-3.031077,-6.471095,5.956003,6.100090,3.295811,-1.092227,4.231166,-9.395917,4.926038,8.450997,8.986386,1.671588,7.605784,6.591288,9.532815,-7.880587,7.949146,-1.647566,-7.524528,-8.101092,2.896491,8.324459,-7.402004,-4.217217,-8.289793,-4.111179,2.937285,3.200454,0.880256,4.072063,-4.210291,1.042557,-2.077275,-2.459904,4.187599,5.149819,-6.368168,-8.430739,-9.524901,-0.907625,-0.610041,-1.103206,6.562795,0.591551,6.079707,3.593264,-1.120166,4.648711,-2.347860,2.198779,-3.752657,-5.948430,5.063485,-4.221637,-7.562766,-7.241443,5.895118,-4.748913,-5.333820,-2.251613,-0.955664,9.961691,-7.796871,8.679888,7.745024,-8.874067,5.551230,-6.122380,6.872955,-8.466655,4.834557,8.220387,-5.570441,9.579233,4.653431,-3.784396,1.470810,-5.171014,-5.737357,1.291783,-9.136024,-1.995649,-6.982950,-5.160503,3.146680,2.211207,3.597607,3.661747,-5.039210,-9.595458,-3.039606,4.635154,1.432414,1.879966,-7.624733,7.607449,3.103136,-6.263167,-6.448116,8.171504,-4.321817,-9.255576,9.166395,5.860579,7.676772,2.254007,-4.227385,6.780956,-4.340413,9.041939,6.366260,5.635317,-2.587304,9.045810,-7.549273,-9.198326,0.976866,-8.439048,7.034290,7.678997,-3.123931,-1.860469,5.669151,-0.720490,7.954541,-9.988826,-5.808866,3.159774,-6.056026,9.222097,0.227136,3.738082,-2.968994,-2.781966,1.111376,-7.211072,-0.011110,-6.752262,4.771772,-9.661758,-2.685856,6.562067,-8.625002,-5.944564,1.631396,-4.325110,5.176722,-4.311872,2.214297,5.620148,-8.584657,-8.495362,8.072319,-2.605006,0.319750,5.988671,-2.878512,-0.206952,0.637175,7.349761,-4.986894,8.193977,1.459071,-5.461997,-1.318866,4.140943,3.313336,-2.530154,-6.839596,6.597033,3.805251,8.285137,-9.816130,-2.211926,-1.760209,-5.567893,9.766302,9.169561,2.177043,-0.860298,6.080432,-3.045836,6.798535,0.664990,-4.126497,-6.617204,9.008406,0.416863,5.309526,8.948023,7.935970,6.201250,-0.107748,2.337514,-3.848205,7.986898,0.266750,-3.191402,-9.733422,-6.307998,4.095316,-3.083858,-9.449202,-7.885682,-4.062521,-4.510995,3.656881,-6.807083,-2.959435,-8.557914,0.423355,-4.050739,2.871099,-8.785466,6.288012,-3.125812,6.303823,5.091844,-4.964259,4.268529,-4.561492,-2.321960,2.310143,1.667800,-4.160147,-7.795224,9.951014,-5.651002,-1.290627,2.435934,6.673840,-5.231855,-1.317978,7.672503,0.441705,8.253684,-7.807676,1.859550,3.558942,4.421080,-9.481857,7.786795,-0.757854,2.895296,-5.469447,-5.215990,-2.477526,-6.100129,1.827570,-6.698642,2.064840,-5.872525,7.133526,6.280820,-8.020396,5.411869,1.427130,-5.809093,-1.102828,-7.802652,-2.031539,4.435894,7.066023,-8.366585,3.387766,8.931398,-7.778433,-2.811290,0.351943,-6.804854,-1.961406,4.677481,2.318899,1.353751,5.994357,-6.622429,1.921186,-7.822714,-5.677802,6.772685,9.154273,-0.836616,-0.112475,-8.766096,-5.074572,0.360578,-3.779256,-4.337918,-6.532685,7.833081,9.493349,-7.312458,6.347335,5.664176,5.441436,0.272561,4.942597,-0.339911,-9.879565,-4.150250,-2.405465,7.377147,-8.931913,-6.604474,-0.651958,-2.116923,8.373305,-5.267664,0.109161,-0.335714,-1.205869,-7.178258,2.688734,9.094017,2.644915,6.665398,0.669945,-5.755126,-1.489714,-9.016711,-1.307017,7.327069,0.476560,1.892328,3.455519,5.427918,7.016320,-9.824974,3.365382,4.340857,5.005967,-4.207015,5.750604,-7.071679,8.285866,-5.241502,2.674083,9.144338,5.541793,3.938156,2.004738,-2.514240,-5.796079,7.995056,-6.774366,-6.301225,4.407727,-6.460902,6.329908,2.332242,-7.744259,0.463545,5.510198,-1.710782,3.410547,9.906033,2.847323,5.275407,-6.953153,5.547679,5.384267,-8.581811,-0.010202,-2.361773,4.130035,-9.789498,9.991718,2.865536,-6.313769,-7.732067,-5.480890,-2.108116,2.828718,6.548839,8.829292,5.172688,2.948414,1.887392,-9.823207,0.995957,4.144895,9.664950,8.213050,3.267227,6.390199,8.482490,-1.272691,8.982457,-6.828955,8.650227,4.348525,-9.839395,0.194552,-1.457043,1.081765,9.417812,5.503918,-1.952152,-4.251723,-3.243361,8.702326,1.067401,-4.815803,2.456080,8.284204,-8.123333,4.590869,1.581348,-0.047535,2.429743,-5.898351,0.328976,4.687177,-7.816810,9.311202,1.464147,6.104121,-7.734337,2.390523,-2.018790,0.037463,2.647836,7.518194,1.005546,-6.214444,-3.009004,3.706002,-7.697590,9.935237,-1.540925,-8.399458,6.570946,-6.110906,7.555909,2.505344,6.594990,-5.099576,-7.735506,1.123398,1.612080,-1.767692,-6.632258,2.531602,-3.963269,-8.262407,-5.503598,1.197723,-7.216027,6.450621,9.089848,5.938958,0.691436,-3.293521,7.892210,0.475646,1.964618,-4.615177,-2.684176,9.709069,-2.432952,9.327514,-2.898216,-7.544743,7.505120,-4.753329,1.986853,0.710344,2.838912,-7.964930,5.698948,6.407088,4.009491,6.353649,-7.907126,-0.029945,-9.818979,1.648045,-8.142553,1.582613,7.611474,7.580987,3.774749,-4.397002,-4.810645,1.597960,-8.074629,-3.165580,1.658545,6.746854,-5.081878,-0.607342,-6.483260,5.921901,-1.078612,-3.164733,-2.829162,-6.638181,-9.634059,-7.003990,5.076127,-8.333006,7.943506,6.626959,-8.515905,-5.873771,-3.227300,0.330294,-6.572131,-5.396846,3.163149,-1.708472,-7.225538,2.580801,1.472937,4.682738,-5.433705,2.398215,-1.489351,-1.078130,5.523989,-5.479768,5.991319,-2.885189,-0.338539,-7.441194,5.133931,-2.003553,6.087009,-1.703681,7.180384,6.808235,-0.313042,0.465203,6.959410,4.664137,-4.592498,4.399375,-7.283180,4.833397,-8.035525,-8.929529,1.397879,6.609388,3.171874,6.870921,6.201797,-7.068337,5.410524,-8.100595,0.748810,-0.214632,5.917536,0.440321,7.276068,3.218089,3.314079,-6.923433,-1.510662,5.254844,1.722371,-3.062391,-0.942873,-8.237199,3.287574,-2.014816,2.136682,-2.783908,-2.706550,-5.826312,1.750812,6.378342,8.602864,4.320750,8.226236,8.508781,6.323155,2.341774,-4.981700,-4.505079,8.072422,-2.306732,0.282677,6.289992,4.827829,1.308850,6.566403,7.206686,-4.754095,-2.884468,3.489633,1.221162,-3.938458,-1.946940,-9.515834,-4.989284,-9.750311,-5.003188,7.961338,2.004168,4.034677,9.160828,-2.766582,-7.639957,0.512014,-9.841544,-4.454198,-0.068949,5.580525,-3.874312,3.305621,7.286805,9.647285,1.042195,3.842027,6.917987,7.513201,-2.940713,5.722689,0.533757,9.354433,-9.599556,9.242232,-7.453141,4.854743,-9.181986,0.106933,-6.011629,-8.415980,-4.458225,9.827433,-7.567882,-4.944755,-9.284911,2.964839,9.634587,6.934884,5.304781,-3.616706,0.051835,-5.706226,-8.896300,9.462176,-8.979691,-3.128961,-7.244757,6.647251,-3.586570,2.906614,2.568333,-7.774892,5.749012,-9.849756,-9.906381,0.364012,6.874644,-3.320066,4.273077,-6.143736,8.001438,-7.618440,-0.473768,-0.439596,-2.259450,9.112337,7.041381,-5.469052,-0.058813,7.175881,5.012785,-5.480337,-6.605299,-2.328128,2.541962,3.436054,6.368002,-2.299396,4.461170,-7.117890,-8.833219,-3.565164,-9.680464,-3.481463,3.226368,1.804443,-8.300263,2.094036,-1.503806,1.583575,0.190338,-1.802084,-9.340890,-3.361862,-4.503041,6.691781,7.433287,-1.920760,-1.090094,-6.849104,-0.563891,-7.566011,2.038571,5.170290,2.791144,5.124236,8.933511,7.925424,-2.755283,-9.897784,4.137393,6.493267,8.961826,-1.231843,1.907398,0.727509,-5.581295,-8.568136,-8.884430,-4.798635,-7.674649,-4.599353,7.984504,-9.776216,4.257946,-6.431318,-4.588189,1.118689,6.851045,-7.959279,-2.247028,-8.495859,0.982042,4.947544,-4.940116,-4.981552,3.018984,2.482702,-0.745883,9.908783,-1.776249,-8.394027,9.485358,-7.079176,2.586599,9.991727,-2.776715,4.610557,7.802878,2.232953,-5.509530,-1.162245,-3.551736,-8.302664,5.043768,8.852977,-1.781628,7.283735,4.437638,-0.477730,-4.799273,7.253617,-4.705121,-0.916578,2.687528,1.540667,2.970206,4.079724,8.621637,5.428495,4.071160,-9.974448,-1.757774,-6.910125,0.874603,1.306280,-6.096867,7.479554,7.444792,-8.171664,1.261939,-4.887862,-7.702172,9.829188,7.780678,-8.036402,9.211296,-5.949509,-4.015951,2.319101,-0.021767,0.381911,7.320200,4.485622,7.207740,2.994269,8.001236,8.711412,-9.255660,-1.069578,2.843739,-7.653878,8.843637,1.944263,9.796549,-4.704422,5.953076,1.268583,-5.550806,8.412698,-2.326896,-9.454605,-1.497628,8.641601,-6.921708,-7.950666,3.664280,-4.145273,-5.336563,-2.002621,4.426143,3.723944,7.997242,7.833219,9.464124,9.698643,-4.965263,6.723973,8.685516,8.420547,-3.923163,-3.454335,-8.164149,7.530514,-8.939873,6.409452,-7.969821,-7.197033,7.608184,4.202137,-2.080561,-9.121313,-9.117183,2.419612,0.244969,-5.657495,-6.371051,1.874587,3.809044,8.499284,-2.557013,7.629343,9.737068,-1.980106,-0.095314,1.251689,-7.646491,3.168817,-9.441220,5.968256,9.193493,8.012887,-9.133464,-9.663440,2.760312,9.727181,-7.788978,-2.701793,-7.489427,-9.756489,-1.451747,5.312853,-1.311929,-4.404796,8.641600,-3.906200,8.372555,-7.958228,-1.126406,0.848732,9.960338,7.617155,-5.212054,8.678751,4.391779,7.736756,-7.910346,-9.097791,1.370612,2.981476,-8.771160,9.563565,7.847494,7.683160,-1.807415,-6.925946,1.823768,-2.552956,9.659084,-6.008425,1.775293,8.644498,-0.039597,-0.707447,-3.701068,-7.663995,6.864317,-2.526483,-1.827225,-1.940137,-7.310468,-2.047750,7.711871,3.853947,-2.663649,2.353493,1.693472,9.396171,-9.464527,1.553088,9.296737,-7.964809,2.820543,-1.687081,-7.201105,6.984192,6.120126,5.360704,-6.234830,3.654654,-8.161631,-0.688939,4.151225,-1.219942,-4.456561,-5.399139,5.079551,-5.818214,1.303460], dtype = "float64")#candidate|10781|(1920,)|const|float64
call_10779 = relay.TupleGetItem(func_5053_call(relay.reshape(var_10780.astype('float64'), []), relay.reshape(const_10781.astype('float64'), [16, 10, 12]), ), 1)
call_10782 = relay.TupleGetItem(func_5057_call(relay.reshape(var_10780.astype('float64'), []), relay.reshape(const_10781.astype('float64'), [16, 10, 12]), ), 1)
func_8173_call = mod.get_global_var('func_8173')
func_8175_call = mutated_mod.get_global_var('func_8175')
call_10786 = func_8173_call()
call_10787 = func_8173_call()
func_9853_call = mod.get_global_var('func_9853')
func_9854_call = mutated_mod.get_global_var('func_9854')
call_10802 = relay.TupleGetItem(func_9853_call(), 0)
call_10803 = relay.TupleGetItem(func_9854_call(), 0)
output = relay.Tuple([call_10768,call_10779,var_10780,const_10781,call_10786,call_10802,])
output2 = relay.Tuple([call_10769,call_10782,var_10780,const_10781,call_10787,call_10803,])
func_10808 = relay.Function([var_10780,], output)
mod['func_10808'] = func_10808
mod = relay.transform.InferType()(mod)
var_10809 = relay.var("var_10809", dtype = "float64", shape = ())#candidate|10809|()|var|float64
output = func_10808(var_10809)
func_10810 = relay.Function([var_10809], output)
mutated_mod['func_10810'] = func_10810
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7694_call = mod.get_global_var('func_7694')
func_7696_call = mutated_mod.get_global_var('func_7696')
call_10829 = relay.TupleGetItem(func_7694_call(), 0)
call_10830 = relay.TupleGetItem(func_7696_call(), 0)
output = relay.Tuple([call_10829,])
output2 = relay.Tuple([call_10830,])
func_10849 = relay.Function([], output)
mod['func_10849'] = func_10849
mod = relay.transform.InferType()(mod)
mutated_mod['func_10849'] = func_10849
mutated_mod = relay.transform.InferType()(mutated_mod)
func_10849_call = mutated_mod.get_global_var('func_10849')
call_10850 = func_10849_call()
output = call_10850
func_10851 = relay.Function([], output)
mutated_mod['func_10851'] = func_10851
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7211_call = mod.get_global_var('func_7211')
func_7213_call = mutated_mod.get_global_var('func_7213')
call_10859 = func_7211_call()
call_10860 = func_7211_call()
output = relay.Tuple([call_10859,])
output2 = relay.Tuple([call_10860,])
func_10861 = relay.Function([], output)
mod['func_10861'] = func_10861
mod = relay.transform.InferType()(mod)
output = func_10861()
func_10862 = relay.Function([], output)
mutated_mod['func_10862'] = func_10862
mutated_mod = relay.transform.InferType()(mutated_mod)
var_10869 = relay.var("var_10869", dtype = "float32", shape = (12, 16, 5))#candidate|10869|(12, 16, 5)|var|float32
uop_10870 = relay.acos(var_10869.astype('float32')) # shape=(12, 16, 5)
output = uop_10870
output2 = uop_10870
func_10877 = relay.Function([var_10869,], output)
mod['func_10877'] = func_10877
mod = relay.transform.InferType()(mod)
mutated_mod['func_10877'] = func_10877
mutated_mod = relay.transform.InferType()(mutated_mod)
var_10878 = relay.var("var_10878", dtype = "float32", shape = (12, 16, 5))#candidate|10878|(12, 16, 5)|var|float32
func_10877_call = mutated_mod.get_global_var('func_10877')
call_10879 = func_10877_call(var_10878)
output = call_10879
func_10880 = relay.Function([var_10878], output)
mutated_mod['func_10880'] = func_10880
mutated_mod = relay.transform.InferType()(mutated_mod)
func_9505_call = mod.get_global_var('func_9505')
func_9507_call = mutated_mod.get_global_var('func_9507')
call_10894 = func_9505_call()
call_10895 = func_9505_call()
func_6739_call = mod.get_global_var('func_6739')
func_6741_call = mutated_mod.get_global_var('func_6741')
call_10919 = func_6739_call()
call_10920 = func_6739_call()
func_1444_call = mod.get_global_var('func_1444')
func_1449_call = mutated_mod.get_global_var('func_1449')
var_10923 = relay.var("var_10923", dtype = "int8", shape = ())#candidate|10923|()|var|int8
var_10924 = relay.var("var_10924", dtype = "int8", shape = (45,))#candidate|10924|(45,)|var|int8
const_10925 = relay.const([[10,8,-7,-9,9,7,4,10,-2,9,9,3,-8,4,-8,4,-6,-2,-7,1,8,5,-10,8,-5,1,10,-10,8,-4,-2,-8,1,1,-2,-3,2,2,4,3,-8,-3,-10,-9,-7,-7,-1,9,-5,-3,3,-9,5,9,3,9,8,-10,-5,9,1,-2,2,-8,2,-6,-7,-3,6,2,-6,9,-4,-4,-9,10,-10,-6,-6,9,-6,-4,-10,5,-9,-3,9,10,-2,-2,-9,3,-9,-4,-3,-2,8,4,-2,-3,-8,-7,10,-2,-4,-7,9,4,9,2,1,-5,-1,-8,-7,-6,-7,6,2,2,-2,-9,-9,10,1,3,7,2,6,1,-10,2,3,7,-6,1,9,1,-5,7,-5,9,-10,-8,-10,2,9,5,10,7,-2,5,2,-9,-9,4,-9,-5,-5,-5,-3,3,9,-6,-2,6,-3,5,-9,2,-1,1,1,-8,1,1,8,-8,2,9,-6,9,-6,-5,-9,2,-5,-9,-10,-3,10,-7,-6,7,-8,5,1,-3,6,-1,-7,4,-9,6,-2,2,-3,-10,3,-10,-6,-7,6,-6,-10,-9,2,-6,-8,10,-3,2,3,-8,1,-9,2,-6,8,3,10,4,5,3,-4,5,-9,-5,7,1,1,9,-6,2,-8,1,-6,10,-6,-9,9,-8,-9,1,8,5,1,-5,-8,2,-1,-4,9,2,-8,-6,3,5,8,-7,9,-8,-8,9,9,2,4,10,-9,-9,-3,3,-8,7,6,4,8,6,-4,-3,-6,-6,-10,-6,-1,7,-9,-8,-1,-4,-1,-2,2,-6,-3,-3,4,9,-8,-5,9,10,4,-8,-5,2,3,-4,4,-3,-8,5,-6,6,-9,-2,4,-10,-4,-3,-5,6,1,-4,1,-1,4,1,-2,5,-9,-4,2,1,-4,-4,3,6,-9,10,-8,9,9,-3,4,-2,6,5,-10,4],[5,3,-8,-2,9,-7,3,10,-5,-2,-10,3,2,6,8,-8,-7,-1,-9,-4,-6,-7,8,-10,-8,-3,9,-8,3,3,-3,-4,-1,7,-9,10,1,-4,-3,-1,9,1,9,-10,-3,-6,5,7,7,6,5,3,1,7,4,-7,2,-4,7,-5,-7,5,3,8,5,9,-9,-6,-10,8,-10,10,3,5,7,10,-3,6,8,7,9,5,-8,2,-5,3,-3,9,6,8,6,-7,-3,-4,-8,-6,6,-5,-4,2,7,-3,8,-8,8,8,-4,-10,8,9,6,3,9,-6,-6,10,-4,6,7,-8,10,8,1,-2,-3,-2,-8,-10,-4,-8,5,-4,3,4,-3,-4,8,-6,1,5,9,-2,4,-4,8,-9,-1,3,2,-5,-10,8,2,-5,2,-8,1,9,-2,6,-8,5,9,-5,-3,-5,-1,1,7,-8,-7,-3,6,6,7,-10,-6,-4,2,5,2,-8,-5,10,-4,2,-5,-2,6,-3,-7,-8,9,-9,5,-6,-5,2,3,3,-2,-9,-9,10,-8,-10,7,1,2,-4,-5,4,5,2,-9,5,10,-8,6,6,-4,-2,-6,4,-2,-5,-1,7,-6,-5,-1,-6,-6,-2,4,-10,-6,-9,3,10,-4,-10,-5,-2,-5,-4,7,7,-6,-8,9,-1,8,7,5,-7,-4,5,-6,-10,2,-7,-6,2,3,4,-8,7,5,7,3,9,5,-9,-9,-3,-5,-1,7,4,-3,-2,-3,7,4,8,-2,-7,10,-9,6,-1,-4,-3,8,-1,-8,-4,-3,-9,-8,4,-3,-6,-6,-4,-9,-5,-9,-4,-10,2,7,8,-8,6,-3,6,1,1,-7,2,-9,-8,7,-9,-6,-4,-6,2,-9,-2,9,10,-9,9,-3,-3,10,-3,3,6,3,-2,-2,5,-3,4,4,-3,-5,9,3,-10,-5,-4,7,8,9,8]], dtype = "int16")#candidate|10925|(2, 360)|const|int16
call_10922 = relay.TupleGetItem(func_1444_call(relay.reshape(var_10923.astype('int8'), []), relay.reshape(var_10924.astype('int8'), [3, 1, 15]), relay.reshape(const_10925.astype('int16'), [720,]), ), 3)
call_10926 = relay.TupleGetItem(func_1449_call(relay.reshape(var_10923.astype('int8'), []), relay.reshape(var_10924.astype('int8'), [3, 1, 15]), relay.reshape(const_10925.astype('int16'), [720,]), ), 3)
output = relay.Tuple([call_10894,call_10919,call_10922,var_10923,var_10924,const_10925,])
output2 = relay.Tuple([call_10895,call_10920,call_10926,var_10923,var_10924,const_10925,])
func_10938 = relay.Function([var_10923,var_10924,], output)
mod['func_10938'] = func_10938
mod = relay.transform.InferType()(mod)
mutated_mod['func_10938'] = func_10938
mutated_mod = relay.transform.InferType()(mutated_mod)
func_10938_call = mutated_mod.get_global_var('func_10938')
var_10940 = relay.var("var_10940", dtype = "int8", shape = ())#candidate|10940|()|var|int8
var_10941 = relay.var("var_10941", dtype = "int8", shape = (45,))#candidate|10941|(45,)|var|int8
call_10939 = func_10938_call(var_10940,var_10941,)
output = call_10939
func_10942 = relay.Function([var_10940,var_10941,], output)
mutated_mod['func_10942'] = func_10942
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7765_call = mod.get_global_var('func_7765')
func_7767_call = mutated_mod.get_global_var('func_7767')
call_10954 = func_7765_call()
call_10955 = func_7765_call()
output = call_10954
output2 = call_10955
func_10985 = relay.Function([], output)
mod['func_10985'] = func_10985
mod = relay.transform.InferType()(mod)
mutated_mod['func_10985'] = func_10985
mutated_mod = relay.transform.InferType()(mutated_mod)
func_10985_call = mutated_mod.get_global_var('func_10985')
call_10986 = func_10985_call()
output = call_10986
func_10987 = relay.Function([], output)
mutated_mod['func_10987'] = func_10987
mutated_mod = relay.transform.InferType()(mutated_mod)
func_9002_call = mod.get_global_var('func_9002')
func_9004_call = mutated_mod.get_global_var('func_9004')
call_11000 = relay.TupleGetItem(func_9002_call(), 0)
call_11001 = relay.TupleGetItem(func_9004_call(), 0)
func_10808_call = mod.get_global_var('func_10808')
func_10810_call = mutated_mod.get_global_var('func_10810')
var_11020 = relay.var("var_11020", dtype = "float64", shape = ())#candidate|11020|()|var|float64
call_11019 = relay.TupleGetItem(func_10808_call(relay.reshape(var_11020.astype('float64'), [])), 5)
call_11021 = relay.TupleGetItem(func_10810_call(relay.reshape(var_11020.astype('float64'), [])), 5)
output = relay.Tuple([call_11000,call_11019,var_11020,])
output2 = relay.Tuple([call_11001,call_11021,var_11020,])
func_11025 = relay.Function([var_11020,], output)
mod['func_11025'] = func_11025
mod = relay.transform.InferType()(mod)
mutated_mod['func_11025'] = func_11025
mutated_mod = relay.transform.InferType()(mutated_mod)
var_11026 = relay.var("var_11026", dtype = "float64", shape = ())#candidate|11026|()|var|float64
func_11025_call = mutated_mod.get_global_var('func_11025')
call_11027 = func_11025_call(var_11026)
output = call_11027
func_11028 = relay.Function([var_11026], output)
mutated_mod['func_11028'] = func_11028
mutated_mod = relay.transform.InferType()(mutated_mod)
func_9505_call = mod.get_global_var('func_9505')
func_9507_call = mutated_mod.get_global_var('func_9507')
call_11075 = func_9505_call()
call_11076 = func_9505_call()
func_8856_call = mod.get_global_var('func_8856')
func_8857_call = mutated_mod.get_global_var('func_8857')
call_11077 = relay.TupleGetItem(func_8856_call(), 1)
call_11078 = relay.TupleGetItem(func_8857_call(), 1)
func_7885_call = mod.get_global_var('func_7885')
func_7887_call = mutated_mod.get_global_var('func_7887')
call_11080 = func_7885_call()
call_11081 = func_7885_call()
output = relay.Tuple([call_11075,call_11077,call_11080,])
output2 = relay.Tuple([call_11076,call_11078,call_11081,])
func_11090 = relay.Function([], output)
mod['func_11090'] = func_11090
mod = relay.transform.InferType()(mod)
output = func_11090()
func_11091 = relay.Function([], output)
mutated_mod['func_11091'] = func_11091
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7765_call = mod.get_global_var('func_7765')
func_7767_call = mutated_mod.get_global_var('func_7767')
call_11171 = func_7765_call()
call_11172 = func_7765_call()
func_529_call = mod.get_global_var('func_529')
func_533_call = mutated_mod.get_global_var('func_533')
const_11174 = relay.const([6,-8,-6,-1,4,8,-9,-2,10,5,-7,1,-10,-7,7,6,3,-6,-2,4,3,5,-8,8,-2,-5,9,-6,-8,7,-1,7,-8,3,-2,-7,8,10,8,3,10,-10,-4,8,-3,7,10,8,-1,-10,-9,-9,-9,-2,-4,9,-6,2,7,-4,-5,-6,7,2,6,-10,-9,1,-7,-4,-1,6,4,-7,-8,-3,2,-7,-1,6,9,2,4,-5,-8,1,-4,7,4,8,5,-4,-1,7,-8,-1,8,6,-7,-4,-3,-6,-3,-4,-7,9,-4,-10,-4,8,9,-2,3,10,10,-6,-10,-10,5,7,6,3,-1,-6,-9,8,4,-6,9,-6,9,-1,-4,1,-5,-1,-6,-5,-7,-3,-7,-6,-10,-7,-10,7,-7,-10,1,8,10,1,4,-3,6,1,9,-4,10,10,-4,-1,7,-2,1,-6,-1,-6,-10,-8,-7,10,6,6,7,8,-1,4,8,-6,-6,-7,7,2,4,-6,8,-8,-1,-10,8,-2,5,-9,-2,2,-9,-6,4,-6,7,1,1,10,4,2,8,-3,8,5,-8,9,-6,4,1,10,3,5,-3,-5,5,-10,-1,-5,4,-10,-7,-10,2,-2,-5,4,6,-3,4,-5,-5,-1,8,7,8,-6,6,7,-9,2,-3,-3,6,7,4,-1,9,-7,-10,10,-4,2,-2,8,9,-7,-8,1,-6,6,-4,-1,8,9,2,5,-6,6,5,-1,-5,7,9,-9,-8,-5,1,5,-3,7,-4,1,-9,-9,-2,9,9,3,5,2,-7,8,-4,7,-9,-3,7,4,5,-2,-4,-4,-10,10,1,3,-1,-5,-5,-2,-7,9,3,1,9,-2,-8,-7,-5,4,-10,-3,-7,8,9,6,7,1,1,7,-7,4,-7,-4,9,-10,6,-2,2,-6,-1,6,-10,-9,8,2,5,3,-6,-6,-6,3,-2,4,6,4,4,7,-8,6,2,-3,3,-9,-2,3,-3,-9,-5,8,5,-1,3,-5,-4,-7,9,3,6,1,9,4,-2,9,-8,-9,1,3,7,5,1,8,-1,-3,5,3,-10,9,1,-9,7,3,-7,-3,6,-8,9,-8,8,-5,7,-10,8,9,7,10,6,-5,-10,9,-6,5,-4,-6,-6,7,3,-8,-5,10,-5,-10,-4,5,-5,1,1,7,-9,-8,-5,8,-2,-9,-3,1,-9,-10,7,-8,10,-4,-5,6,5,1,-1,-2,-5,-10,-9,-8,-3,3,6,4,1,8,-10,-2,-10,-9,-1,-2,9,7,-2,-8,5,-6,-3,6,-8,-1,-1,-5,5,-4,4,-3,9,-3,-6,7,-6,-2,-3,4,5,2,-6,8,3,-8,-9,2,-10,8,-7,7,8,-2,-8,-4,2,10,7,1,-10,-6,9,-7,-2,5,2,5,-1,-2,-3,-1,-6,-5,1,-2,-3,1,8,-3,5,-2,-9,-6,3,-9,-6,-3,3,5,4,-4,8,10,-5,6,10,4,6,10,-10,8,-9,-8,1,-4,-1,-3,-6,-4,-6,1,-10,-7,-7,-8,6,-2,-8,-5,4,-5,2,7,-1,-10,-3,4,6,-2,8,9,-5,-9,1,-4,-5,-3,7,6,-1,6,7,-7,-3,7,8,-5,7,8,10,-5,2,-4,8,-8,6,2,4,-8,6,-8,1,7,-9,-6,-10,-4,8,3,7,4,-3,-1,-6,4,4,8,5,-3,-2,-3,-9,5,4,3,7,-9,4,7,-8,-1,3,8,-7,-6,10,-1,8,-6,4,-6,-7,-3,-4,10,-3,6,10,-8,7,-6,-3,5,5,-4,1,1,-6,8,9,3,8,-10,5,7,-1,-8,10,-4,5,5,9,-3,-2,-4,-6,3,-8,4,2,-7,4,5,-1,10,-8,-1,1,-9,-4,4,-4,5,1,-7], dtype = "int16")#candidate|11174|(720,)|const|int16
const_11175 = relay.const([[-3.650092,-1.125146,-3.253623,4.119820,-3.135081,7.683636,-2.870021,-8.016387,0.566802,-7.466883,-8.781932,-9.194041,-0.516445,-3.374868,4.307951,1.292716,1.924047,-9.378053,-1.935589,1.530189,1.976538,5.120336,6.336523,-8.955247,9.124766,5.432918],[-4.611163,-4.096654,5.694622,9.847643,2.926279,1.027540,-5.421787,-7.876072,4.599095,8.039433,-3.167265,-5.856322,-3.403610,-3.285435,6.724834,6.602015,-8.695228,-6.578334,-3.202585,-7.322056,4.835165,-6.974076,2.663039,-8.895465,-5.630012,-9.721781],[6.892832,4.776895,1.550679,2.739864,2.582776,-7.353479,6.418465,-6.887760,9.782824,7.856961,-2.379460,-9.599560,-6.995131,-6.695343,0.677059,2.922283,3.263772,-4.262439,0.680106,-0.255605,8.198722,-7.164489,1.196519,-4.040919,6.529536,4.864760],[-4.958150,7.319525,8.858699,4.619552,-9.551639,9.756275,4.595165,-1.198589,7.582647,-2.448187,-9.559873,1.710414,4.478737,-0.072774,4.427434,-9.874078,5.918360,-0.763334,8.597945,9.504444,9.330054,0.298361,0.952930,1.638817,-9.618116,6.850727],[-5.666494,6.325801,-3.130984,-8.625405,9.332673,1.715106,-5.883568,7.164322,-5.594104,-4.649789,6.996668,-9.545603,7.024621,-2.216932,0.467824,-0.524747,-4.585729,4.674678,2.586709,7.117172,-7.153640,-1.044577,-1.839782,-9.815552,-9.008942,-7.296074],[0.954167,-0.708046,-4.612778,-0.454579,-2.675878,4.565469,-4.754426,-2.274032,-5.543005,7.979051,-2.675003,-1.617355,4.086834,9.879314,1.121965,-2.005478,5.064849,8.513452,2.300755,4.943201,1.425649,-6.179515,-8.957554,9.753710,-0.923041,8.942733],[-9.318828,-7.222324,0.884184,-7.990945,5.503495,5.036873,6.690284,8.478637,-4.086527,7.233429,3.353498,-4.479761,-5.056058,3.026020,-3.823938,7.958432,-5.951467,-3.059957,-1.218879,-0.883783,9.481982,-4.764233,-7.756281,2.161106,-8.311173,-8.596323],[4.257176,5.319596,3.063598,-5.606410,-9.742733,-7.199816,6.418096,-2.202668,1.800434,-4.179388,-8.056182,-8.166028,-7.061254,7.816989,-9.102818,-3.128882,-6.264250,0.479542,-3.433583,7.163363,0.601303,3.826000,2.156565,-7.021900,-7.084842,6.578303],[7.072827,-6.369825,-0.033153,0.476397,8.063020,-1.403766,8.482294,3.686757,9.904462,-8.459251,6.667613,-5.438586,2.982006,7.017156,3.347594,-7.857756,-0.301210,-0.330374,0.023301,6.348301,6.618819,-0.506639,1.213407,5.082077,4.501412,-9.762073],[2.863794,9.658729,2.708485,9.223108,8.050446,-1.324571,-7.101697,-7.943782,-7.869137,-5.288782,0.984551,-4.699913,1.254173,-0.610271,-2.165971,4.630345,3.080593,-1.841597,5.649964,0.139877,-0.505205,0.157406,-2.776768,-1.668473,1.497959,-2.243233],[8.855171,-9.479997,-5.398449,9.685057,7.498674,9.895032,0.419401,0.010354,4.697884,-9.707284,-1.861455,-8.625903,6.331670,8.412160,6.809533,-4.788392,5.002374,0.991166,8.520507,-4.665533,1.693030,9.520564,6.319362,-6.900915,1.133066,-3.192492],[-0.810750,-1.568927,7.715316,-6.052200,7.976146,-9.815165,8.735472,5.237072,-5.495397,4.985218,2.263223,5.359508,-8.737243,4.022815,-7.218451,5.518906,-3.512382,-5.461022,-7.464578,-1.725687,1.648807,-0.705724,5.115758,4.408609,7.351508,0.425377],[0.938012,4.671288,-9.988714,7.175575,2.407887,6.198442,-6.239884,6.889228,3.581382,9.758770,-8.804033,7.024127,4.116974,-2.352579,-6.805723,8.761822,-9.251427,4.865036,7.351851,9.440604,3.086120,-3.478816,-6.420736,-6.781007,4.228047,8.107575],[5.755301,1.119660,2.798477,8.542310,-7.120521,-2.195252,-2.355727,5.611690,-0.768535,-0.396699,-1.497484,-8.985602,-7.030367,-9.411253,-0.697409,-4.216740,-5.197542,-0.755130,2.234871,3.122716,-1.970572,-5.213484,6.701963,-5.562511,-2.920993,-9.258880],[6.026242,5.694300,9.771438,3.938548,0.759453,-4.414203,-9.410319,-2.843251,-5.798036,0.773211,5.133188,6.936294,1.250837,-9.361384,-9.599390,-6.118214,5.282470,-5.977491,0.969744,-2.834210,2.284103,9.368115,8.320870,1.178519,4.377438,-5.666853],[-7.010761,-9.331855,6.479692,6.803939,5.291028,9.383621,3.398684,8.124477,-5.528862,-3.034012,-0.890228,2.962517,0.178497,-2.056188,8.192994,7.092932,-3.138434,0.217174,-6.900037,-2.844604,0.428814,1.787059,7.328781,2.278883,-4.054851,9.791366],[9.464579,0.399389,9.503564,-0.699517,-9.382233,-7.476522,9.228765,1.655362,-6.200898,5.631870,7.698552,-8.374473,2.796632,-8.432308,8.225845,3.076123,-2.291502,5.913750,-5.461566,-2.146796,0.963022,8.248430,0.385089,4.183538,-5.018295,4.563596],[8.432712,-7.914805,7.216724,-5.486466,-1.934629,-4.806265,-0.682954,-7.600094,8.041026,-8.549072,0.145027,2.591539,-6.502995,-0.485207,8.219495,-8.291641,-8.686031,5.091497,-7.794956,-5.397412,6.508491,1.697545,6.489295,-9.883642,6.172288,5.008916],[7.761639,7.325352,8.261662,-4.214320,9.232740,0.396409,-2.744846,3.417562,5.419246,7.053016,-0.283131,-7.843781,4.810310,-3.457982,8.625301,2.128501,-0.401050,-0.825354,0.005016,-0.762884,-0.505818,-0.083857,0.707413,2.844719,8.733373,6.862642],[0.434627,7.134117,4.858130,9.558480,-7.224418,9.402433,2.628110,-6.114263,-5.011533,7.098814,4.536432,5.636046,-7.812306,2.831845,-5.791521,0.633244,-6.606672,-5.906941,8.033595,8.240848,-3.163001,-6.121536,-6.774468,-5.779345,-9.175174,4.430793],[9.239789,-3.211479,4.399934,-2.635068,-5.892659,-7.286047,-8.699892,-1.065685,-8.029773,4.930255,-5.881401,0.775472,8.604028,-6.134776,1.413743,4.932553,-1.519543,-1.159344,8.197164,5.913524,7.574342,-1.885581,-6.124193,1.388485,-8.279312,-0.220055],[-9.306522,-9.447989,5.730299,5.683705,-1.032788,-6.697694,-4.632536,6.821741,5.318546,-7.215150,-4.473697,-0.255639,5.207078,8.159401,1.719560,5.945404,5.009392,3.893133,-4.835570,-9.390387,7.498148,3.789002,5.693788,2.799874,-9.798363,7.671822],[-6.418549,9.427169,8.302511,-9.079729,-9.844300,4.879627,7.358508,5.359712,6.069127,-6.448320,-3.975921,6.206849,-3.906565,-1.307328,-8.489852,0.940320,2.892233,-7.323262,-4.523833,6.966665,-3.768000,-0.939374,5.820068,8.666494,6.789799,0.450129],[-8.401984,-7.139359,6.310213,1.876872,-1.974116,5.941439,0.186112,6.503488,-2.225924,0.431788,7.223593,-8.261098,8.137945,2.465147,7.309349,-8.397720,8.636583,4.077000,4.237310,-9.456359,3.787246,1.140391,-7.608740,-9.635790,-7.018082,4.903284],[-9.767836,-5.297436,-5.091089,-1.703739,0.403368,5.498861,8.993611,6.196157,6.347402,2.039278,2.865539,1.269048,4.139252,-3.274038,7.330930,3.392067,0.906024,5.893581,9.223309,-8.060630,-5.291986,-9.719504,-1.603541,-0.918779,5.848738,-4.892746],[9.299332,-8.194618,-2.064540,-4.996074,9.311168,4.791433,1.541791,-1.358815,-8.825168,7.619091,-5.848792,1.151190,-3.233764,-3.376241,1.851648,-0.467634,-2.678928,3.955383,-4.017209,8.376613,1.391925,-2.516786,6.493051,0.764305,3.867675,8.421848],[-2.120391,-5.590008,-2.966282,2.743059,-0.703453,-9.631075,-2.902964,5.146079,7.757443,-9.983282,5.229138,-4.653964,0.520913,-6.383659,-3.280678,-1.258339,-0.061137,5.320161,9.812937,-9.969572,2.596458,1.082604,-1.201150,-0.816400,5.412283,-8.714397],[3.395787,8.296680,2.405135,-2.038636,7.767420,-7.925216,8.204296,3.800277,-5.203927,-5.055207,-6.727171,-8.307261,-7.365836,6.065287,7.843545,-9.488745,-6.289803,-4.850980,-8.699513,7.432974,8.718819,9.305497,-4.070191,-8.901381,6.089768,-3.043669],[-9.206458,-6.592242,5.891873,-3.894058,-5.309913,1.768292,-5.112687,-4.227902,-6.241218,2.586363,8.354970,2.755536,5.188977,7.832276,-8.238449,-8.938537,-9.958466,-6.613576,-3.950350,-1.805396,5.538354,7.192023,6.495151,-8.848234,-4.398375,-7.670775],[7.370796,9.413519,3.515281,2.173459,-8.531074,-2.933327,-1.687766,-4.472779,4.465547,3.692580,-1.655891,-7.295416,-2.487942,-4.954279,-2.431157,7.344045,-7.174564,-0.235062,1.003990,5.882212,-1.244670,-5.277189,-1.737244,2.939443,1.488135,8.955814],[-7.187275,-1.267994,-5.732588,8.943376,8.657370,-6.087911,2.547218,2.310734,-3.444993,-6.375437,-4.596024,-9.410980,3.441197,-1.458764,-4.968916,-4.304520,4.657704,-4.622528,8.463585,8.662150,-0.791006,-0.020868,-4.261320,-6.152491,4.798726,8.629025],[6.907587,-4.080395,-1.390288,7.110935,-6.244780,5.131300,-7.126692,-0.975655,6.938847,-5.405437,1.682942,5.195692,-3.364090,2.245580,-4.345719,5.239565,-0.916526,-6.239713,-6.850554,5.556940,5.859764,5.554074,-9.060755,-4.321852,1.472752,3.574476],[9.137701,-6.900744,-1.408769,0.365352,3.161811,-2.350962,3.077658,-5.801390,9.319334,-0.465154,-9.746115,-2.319750,0.824954,-9.662072,-7.780499,-9.027854,-0.754204,2.789796,-5.787945,9.823174,-9.559655,3.407724,-3.666389,3.240747,5.325186,-4.673871],[2.614286,5.512756,4.360353,2.119414,1.780922,-3.952066,2.704335,5.012516,-3.516546,1.162377,-6.460807,-8.344397,-9.228418,-4.830854,-6.151280,9.444613,-9.908661,-3.630457,-8.497256,7.745294,8.051270,4.175557,4.105537,-1.736633,9.108809,-1.984423],[-7.454544,-9.602920,1.722973,7.006766,8.677018,9.060088,9.164023,-6.767089,-3.286648,4.067923,6.164887,-3.060352,3.129777,-1.290962,-7.406274,4.014968,-4.880729,1.474365,-2.202347,7.060742,0.381398,0.473778,-1.908147,-0.004518,1.631087,4.536902],[-9.537168,-5.479429,-6.149055,-0.283019,7.864588,-1.007303,1.895013,9.523884,-0.318543,9.751873,-3.474736,-7.710547,-7.311600,1.896079,-2.973220,-4.706729,-5.488076,0.993885,-6.206661,9.253043,9.024133,0.128478,4.773509,-2.799826,4.253844,4.958568],[0.089210,-0.431336,-1.983483,4.584081,-5.918739,4.089745,-3.124115,-0.126127,-1.217003,8.946432,1.501009,-0.704718,2.490409,-1.557841,-9.571603,-4.693478,3.406276,-6.101613,-2.566158,-0.459402,1.000626,9.264507,-6.559950,-8.089032,5.717500,-2.503524],[-5.097738,9.634842,-4.118956,-0.814078,5.285852,-0.242344,-8.373287,-1.969095,-4.975546,5.786158,-9.503156,-0.162897,-9.508477,1.586613,-1.826315,-4.288283,-2.988175,-6.001389,4.881771,-6.802381,-6.156937,2.911004,9.381735,5.032926,8.965640,4.800173],[-3.855139,-5.139727,3.279596,-4.525821,-8.786812,-7.287261,3.952584,6.607974,-7.052697,0.036940,-3.443871,1.495466,4.292866,5.909253,3.002058,-4.724295,-0.631335,0.742220,8.306365,9.894131,-2.262265,-3.200895,7.052558,0.313032,0.650937,-8.950196],[8.044352,1.792207,-6.036051,3.227584,-8.245022,9.351207,9.224172,-0.442701,9.643976,-9.188173,8.452676,8.264750,-9.202651,-0.595276,1.396543,9.601304,-5.112947,8.552002,0.333724,0.975227,2.449025,4.455168,2.815526,8.688812,3.813261,-7.242121],[-1.406390,2.974516,-1.181701,1.573503,-7.499692,0.517748,3.648513,-8.994386,4.430871,-5.703632,-1.187692,1.349477,6.425959,-1.846787,-5.162964,-9.421149,-5.279341,8.494249,9.464539,8.589891,9.973705,0.219257,2.088106,-3.380635,7.477990,3.199613],[-0.210244,8.190014,6.264486,-4.991585,-5.953969,9.993176,9.408382,-2.477507,5.904016,-9.258233,-3.767958,0.016916,0.790416,-2.286070,4.571756,0.235148,5.372590,3.623057,-8.629620,-6.901994,-9.546781,-1.502767,8.533862,9.718078,-7.099353,7.038541],[1.637854,-5.472594,-9.473097,7.448164,3.103728,6.389879,8.250028,8.623942,5.753580,-4.963397,3.383973,0.297546,0.495683,8.625768,-3.763946,-1.261609,-8.094110,1.004319,-6.331917,-2.013699,0.200909,-7.138635,-1.043113,-1.981345,7.322670,-5.035851],[3.894127,0.837268,-2.032572,-8.370213,-1.233469,-5.092567,-7.596767,8.239183,-0.589209,-5.446085,-9.098402,-1.068784,-4.149111,-5.911055,9.371854,6.895720,-6.969069,-4.032714,1.013372,0.600586,0.740581,-5.639875,7.439809,-2.031919,0.858698,0.777628],[7.191492,4.037167,7.490726,-1.672547,-7.173297,3.016768,-5.505762,8.965191,0.904126,1.050669,-8.953109,-0.258911,-0.263264,8.792631,3.509221,5.048874,-1.018847,-6.960779,-5.700665,-5.538601,-4.537270,1.881294,6.734362,6.507692,3.095818,-3.017256],[-1.684514,-0.174676,8.242365,3.046033,-6.950597,-3.267206,5.773826,-7.411980,2.914726,-7.809139,3.635927,-6.813249,-3.757415,8.106876,0.170545,7.694980,-1.711261,-0.032192,8.896669,-6.043351,-0.817828,-2.113103,1.379652,2.709524,4.841783,1.811196],[2.864953,-6.088326,8.273998,4.114927,4.488443,-7.857477,-7.814720,9.862214,-6.536764,-5.618490,-8.965712,-0.820883,5.961622,-0.717827,3.179699,7.377630,-3.821856,-7.207487,0.965765,-4.772891,-7.569524,-1.682780,4.675162,-0.614252,6.427787,-6.781437],[3.976078,-5.060660,-9.879442,-8.727850,-8.437081,-0.136510,7.265814,-1.023497,-1.859362,3.557833,2.884523,-3.704577,3.184377,0.693389,7.260473,0.277580,-5.874118,3.733126,-0.291895,5.612546,-9.325968,5.706603,-5.043729,-6.823877,-4.105788,-8.981878],[-1.464471,-4.295956,7.762105,-8.473059,6.854373,-3.174069,1.571452,-4.574755,6.097767,-3.404885,1.780790,3.987972,5.369305,8.079662,7.819449,-3.317107,-9.095544,2.742376,-8.925249,-7.083552,6.839090,2.942547,-4.272844,4.254432,3.247540,1.327915],[0.843858,4.195190,1.511172,9.102666,-4.662210,-8.856813,-3.494305,-0.388183,8.571458,6.537216,6.463979,-7.518957,-4.293176,7.474835,1.188548,0.112365,4.402981,-5.900850,2.028668,3.529013,3.033070,-6.095378,-3.414324,-1.369789,1.826399,-8.992915],[-4.840287,-7.345050,-2.470162,7.599686,2.550979,2.919576,8.719333,3.019673,2.956722,-2.241789,-6.255281,-0.225192,1.802647,-9.898929,-5.448963,-4.339477,0.766240,-9.182719,-3.413449,-5.129754,-8.788793,3.735350,3.343467,-7.879272,4.595586,0.210511],[7.126443,-2.445888,-4.106681,4.495770,-1.020053,1.335416,-1.864327,8.906932,3.564641,-6.428791,0.552818,3.039923,-9.927892,4.010946,-3.700148,7.734773,7.313494,2.385659,9.471757,-5.168229,-2.659253,6.576198,3.829127,5.646058,-5.436692,-5.980800],[1.722416,-2.946443,7.086482,-9.381060,-7.170676,7.112667,9.879138,2.833304,8.029095,-1.309167,-2.937241,1.494733,6.832473,-7.827119,-4.756355,0.101297,6.246021,-2.995766,-4.325018,-9.396096,-2.972134,-9.855270,-1.628066,-0.354284,9.885197,9.600648],[8.155397,-8.981487,-2.008276,-9.029250,1.352301,-9.203688,-4.363360,-6.255646,0.628878,1.446498,-5.952049,-5.682953,-0.974907,5.133508,6.775630,4.007891,7.699219,1.411466,-8.483229,-3.851431,-2.813080,-0.070594,1.636801,7.693222,-6.912478,6.974896],[-0.983606,9.989589,-5.006397,-9.870658,-3.465151,-9.484595,0.856080,4.860263,-9.675624,-7.237864,-9.976696,8.379163,0.278225,0.439545,0.929305,-6.345410,-6.012065,-7.038542,-5.627232,-6.144453,-8.012464,-3.332220,8.073859,-7.700072,-4.766586,-4.233572],[4.689275,-8.893162,-5.884244,-8.120504,-8.325301,8.239971,6.440839,-2.367246,-2.458180,-1.083712,0.384371,1.984987,-0.060170,-0.763302,-2.288152,3.153486,-5.497287,-6.076946,2.367078,1.938225,6.017961,-4.449429,-6.923404,3.858377,-3.244836,-5.324105],[-5.265104,-3.306764,6.041856,1.897228,6.179770,1.277630,5.910647,-1.581049,7.667785,-4.123436,-2.363318,7.355572,0.340704,6.522187,-2.212888,-5.580722,6.174401,5.817522,7.163115,-1.632650,6.921587,3.992246,3.692534,-5.026676,9.149911,-8.001867],[1.008425,-8.631506,-8.331292,-4.841488,9.735798,2.324622,0.968604,6.225818,-8.993264,7.616864,-2.296903,-1.461497,-9.016849,-9.664614,2.298835,6.975263,-8.520543,-6.970324,-0.300025,7.233826,5.701961,-0.335383,7.706334,8.573998,-6.904943,8.646143],[6.434898,-6.643461,-2.425015,1.868331,4.654820,5.557373,7.625134,-2.318880,-2.856602,5.142550,6.600461,5.111518,-7.305027,-3.789432,4.204579,8.679085,4.003137,5.941538,-7.921089,4.946925,7.668100,0.150230,-6.934621,-6.707971,6.496861,-5.471667],[-5.011496,1.551810,0.802006,0.481669,6.257736,3.741974,-7.574646,6.053631,-5.169064,1.975079,5.463248,-5.684314,-5.784723,-5.224663,-1.042638,-7.735529,-5.225146,1.562890,6.138275,5.949930,9.451703,0.711595,7.874602,-6.956409,-2.157385,0.567686],[-4.757456,1.135428,4.320342,-0.647414,5.787151,-9.652833,-8.375038,6.214177,-7.814870,3.317484,4.459020,0.688854,5.301271,-6.121584,8.076482,1.937276,6.945043,3.773326,-4.653491,3.755906,-5.718978,-7.549459,7.133400,5.945504,-4.376358,-1.680134],[7.190987,-4.087946,9.306170,-1.385336,-5.023134,7.282699,8.683075,-6.461298,-8.687396,6.395162,7.533082,-7.560580,9.988170,-1.257339,-4.218296,2.658867,9.541304,-6.136860,7.690821,8.353705,-0.229474,4.129202,7.974973,5.623856,1.292900,8.689433],[-9.049705,-0.458223,4.039098,8.250443,1.067231,1.449028,-5.348030,2.741436,9.604629,-6.904707,9.929342,9.605047,8.973969,3.774010,6.020815,-5.924562,-6.433141,1.992280,6.154222,6.641183,2.843157,7.773474,-4.102909,9.549014,-4.271646,1.778846],[-2.170521,-6.103966,4.532672,-6.809840,-1.610703,1.774180,2.233789,-7.682218,8.982206,1.542465,4.361932,4.922805,-9.017906,6.278529,-8.760777,-8.900759,3.487309,-1.248638,-1.170878,1.570001,0.038602,2.205227,7.302963,-9.279245,0.966869,2.792221],[-6.890209,-0.616044,-7.813834,8.452691,-0.930043,5.075504,0.554146,5.306112,-9.246229,-0.216795,0.564092,5.542623,-3.642346,1.092711,7.756682,-9.552164,6.419121,-1.345178,-4.880627,-5.572766,-2.937794,-6.176514,-5.038330,8.988025,-7.054961,-8.625381],[-2.335673,-3.178736,6.315167,-6.176276,-7.487988,5.056815,-4.069853,1.842847,3.663241,7.862053,0.335844,4.971713,8.193643,9.474766,7.004068,4.914940,2.702389,-1.162879,-6.968748,8.643324,6.169160,-9.001831,8.957390,-8.252182,-2.685991,-1.636845],[4.536215,7.117599,-1.542539,-8.185982,-3.528880,6.209268,3.539538,6.377286,1.669539,-3.309918,5.964054,-7.129617,2.936273,0.041419,-6.254220,6.610105,-9.041508,3.483412,7.936445,-6.648723,2.426211,3.215723,9.691521,-0.600141,-3.175451,8.717796],[-5.438509,-3.812498,-6.479602,2.489732,2.070925,-7.212928,1.446339,-0.363160,9.450178,-6.358430,8.904634,5.439255,-8.363347,7.196341,-5.692090,-2.205159,-9.726391,-9.538045,2.820739,5.887832,7.269676,-8.237451,6.545150,5.467061,2.293564,-1.032558],[-5.759047,1.565796,6.932162,1.522975,5.503228,-2.922494,-1.160669,-0.704245,-7.923114,-6.858043,7.012309,-0.413432,2.922621,2.785928,-9.872178,1.497501,5.638423,0.603551,5.309834,-3.793232,0.041977,-6.554175,-4.127573,7.509000,0.293408,-6.166432],[-3.924991,1.733732,-4.245310,-0.564833,-5.255265,2.565706,-6.576537,2.374072,3.545371,-1.380208,-6.666965,-3.782755,1.429895,-8.762895,6.732032,1.525931,3.118129,-3.274529,0.768074,-7.175482,-0.794195,0.024569,2.355399,3.503394,-7.261863,0.279170],[-5.549128,8.504733,1.108158,-5.235011,-2.620178,-2.155633,1.933428,-9.959870,8.112824,-6.151698,-9.580946,-4.125080,-8.285296,5.286954,7.118448,-1.252561,-0.778835,3.102625,3.504063,9.151108,0.987067,1.535272,-7.841594,9.552494,9.863676,7.448314],[2.617611,2.910736,7.568530,-2.590168,3.046852,1.475686,8.173393,7.143350,-6.147373,-9.611100,-1.923618,-4.847670,8.648560,-6.781007,-9.534113,8.964044,2.379840,2.807819,9.319021,2.416476,-1.301389,-3.609173,5.149216,-5.681686,-1.713172,9.524720],[3.215609,3.664276,8.035058,2.906167,-8.307784,0.634767,0.173976,-7.719465,-5.250170,2.188062,-8.334871,-3.382024,4.932733,-2.067237,-4.367324,-7.258374,6.749299,-6.990316,5.420055,-8.189210,-4.054569,7.719555,3.174705,-1.040361,7.212256,-1.984402],[-7.157887,8.037020,-8.963130,0.145078,2.260550,-3.049448,-2.747033,5.498546,-4.749606,5.377868,1.173731,-2.425511,-4.523246,-5.365646,-4.989515,-0.407903,-5.451636,-2.182496,3.153872,6.073850,9.760281,6.232790,-9.573626,3.109965,3.804844,-4.557147],[9.980502,2.195624,6.896867,2.535386,-9.979675,-1.570795,3.695725,7.287241,9.326708,3.173718,-4.426024,-0.603539,3.722048,1.111952,-5.890713,6.544901,-5.902753,9.184429,-5.573035,3.719629,-8.742220,8.213554,-7.076288,-3.595125,4.729048,-5.371460],[2.307585,1.210287,-4.461116,5.034958,-4.854262,-4.499645,9.581189,-2.243019,-9.118203,-5.596396,-3.762756,-8.633235,8.730814,-0.915814,-6.763738,-0.348310,3.611702,-9.354167,1.586598,-5.441588,-0.614404,-5.845353,-0.305706,-3.786317,7.417236,-8.024653],[-9.195090,-8.150696,6.566857,6.317431,-9.182877,8.884463,5.999408,1.537789,5.043889,-2.318478,8.187890,8.071708,1.738529,-3.646760,6.818617,-3.587712,-3.682429,0.691768,6.750627,0.818643,-3.695859,6.546092,1.458839,-5.338633,-7.415887,-1.851709],[-9.949959,-6.336824,5.809811,-8.745174,6.995717,7.795847,2.775152,9.971123,1.317098,-9.755562,-6.624845,0.095373,0.053152,-1.412508,-5.877709,0.400475,6.711715,-9.945726,-4.215299,3.902090,-3.534952,6.169018,3.561552,-3.770112,-9.100294,-7.180514],[0.804114,-1.516788,-2.124086,-7.889450,3.785298,9.686523,1.802958,-6.442596,-5.446933,1.066098,-1.457157,-9.511480,-0.728256,-0.504867,-1.202620,5.555258,-8.681896,-7.339391,-2.510815,1.354082,-3.216845,-4.640710,-4.089108,0.404217,-6.747780,3.995550],[-5.779361,-2.241618,5.230089,1.608688,-0.607430,1.867243,-8.723705,1.750674,-9.340056,-8.910270,8.267625,1.264955,0.374538,-9.983053,7.342531,-7.692892,1.807061,-5.113329,7.221569,-3.793779,-7.179713,-4.627117,1.889662,-0.054460,-9.245481,-7.579428],[4.300287,-4.359707,8.505073,0.002495,-0.374654,-7.400013,-1.079586,-5.926432,-9.008736,9.908226,-8.057292,9.693643,6.497556,-1.959226,-7.350709,9.387555,-7.217244,7.572693,-6.100639,-3.854300,-0.032406,8.138747,-9.805609,8.042580,-3.561624,2.286804],[-2.954563,2.653613,-7.551678,-4.781733,-7.644436,6.815437,1.425067,-3.595545,0.485311,-7.318368,0.440220,-1.149646,-2.306681,-1.443033,7.541362,7.060940,-8.170175,0.357072,-6.430129,-0.452112,-5.273691,3.371432,-9.786000,0.443453,2.418538,4.680875],[3.986275,-0.902406,8.701632,7.745939,-6.151273,6.506535,7.202392,-8.010629,-8.045617,-6.908480,-5.910746,-2.706096,-5.370731,-9.969254,4.745169,-3.988443,0.423469,-2.483076,-3.069747,1.930321,1.633276,6.645535,-8.203980,-4.291168,-2.799380,6.755039],[0.948694,2.826785,2.808443,3.131112,-1.911816,-9.694907,-0.078798,-7.794685,-0.624166,8.173851,-1.504932,-4.673803,-9.458466,6.815943,1.319501,7.990444,-6.040916,-2.486373,-5.242050,4.286560,-3.660245,3.767116,-7.830473,0.662366,2.231229,-7.801375],[9.210047,-5.562451,-4.744754,1.823070,-5.785695,-0.151220,3.249097,4.419421,-9.689054,-9.609427,-3.341307,0.437071,-4.199733,3.159958,8.243873,1.721051,-5.757979,5.508159,-5.274893,-5.599185,7.580460,7.779766,-5.905407,7.742704,3.180509,7.184240],[5.351287,4.717219,1.530120,9.214449,-5.064595,1.069101,9.361750,8.789996,1.286173,-0.196159,-6.573578,-6.819400,-9.097232,3.263836,3.027106,7.174285,3.327905,-6.127816,3.304828,-1.205701,0.774182,-0.614110,-0.381376,-4.196005,-1.077054,-7.333230],[-7.932478,0.739655,-4.595947,0.778197,4.454865,-8.994910,8.505612,0.222632,1.481562,-4.711612,2.948271,1.145853,6.886316,-7.060887,-1.829251,-7.553986,5.621646,-4.151936,0.521768,8.771150,-7.185721,4.604449,0.029168,6.322597,-9.638507,2.663945],[-2.131972,2.217943,-7.133649,1.724042,5.276678,6.074123,7.489572,-0.649660,0.667400,9.968417,-7.527728,7.434875,9.752461,-0.076788,6.095075,-8.820747,-0.127770,6.366986,5.743216,2.427965,-5.003110,1.328695,-9.092472,-0.790743,8.234295,-7.305465]], dtype = "float64")#candidate|11175|(88, 26)|const|float64
call_11173 = relay.TupleGetItem(func_529_call(relay.reshape(const_11174.astype('int16'), [15, 12, 4]), relay.reshape(const_11175.astype('float64'), [2288,]), ), 1)
call_11176 = relay.TupleGetItem(func_533_call(relay.reshape(const_11174.astype('int16'), [15, 12, 4]), relay.reshape(const_11175.astype('float64'), [2288,]), ), 1)
output = relay.Tuple([call_11171,call_11173,const_11174,const_11175,])
output2 = relay.Tuple([call_11172,call_11176,const_11174,const_11175,])
func_11182 = relay.Function([], output)
mod['func_11182'] = func_11182
mod = relay.transform.InferType()(mod)
output = func_11182()
func_11183 = relay.Function([], output)
mutated_mod['func_11183'] = func_11183
mutated_mod = relay.transform.InferType()(mutated_mod)
func_10250_call = mod.get_global_var('func_10250')
func_10251_call = mutated_mod.get_global_var('func_10251')
call_11189 = relay.TupleGetItem(func_10250_call(), 0)
call_11190 = relay.TupleGetItem(func_10251_call(), 0)
uop_11194 = relay.cos(call_11189.astype('float32')) # shape=(6, 12, 12)
uop_11196 = relay.cos(call_11190.astype('float32')) # shape=(6, 12, 12)
func_9236_call = mod.get_global_var('func_9236')
func_9237_call = mutated_mod.get_global_var('func_9237')
call_11206 = func_9236_call()
call_11207 = func_9236_call()
func_3804_call = mod.get_global_var('func_3804')
func_3808_call = mutated_mod.get_global_var('func_3808')
var_11209 = relay.var("var_11209", dtype = "float64", shape = ())#candidate|11209|()|var|float64
const_11210 = relay.const([-1.857856,6.740358,-3.658985,-4.719159,1.419205,0.559221,1.710172,-6.692552,7.691269,-2.375773,2.771904,1.743880,8.218566,-0.685621,6.395833], dtype = "float64")#candidate|11210|(15,)|const|float64
call_11208 = relay.TupleGetItem(func_3804_call(relay.reshape(var_11209.astype('float64'), []), relay.reshape(const_11210.astype('float64'), [1, 15, 1]), ), 0)
call_11211 = relay.TupleGetItem(func_3808_call(relay.reshape(var_11209.astype('float64'), []), relay.reshape(const_11210.astype('float64'), [1, 15, 1]), ), 0)
func_9580_call = mod.get_global_var('func_9580')
func_9583_call = mutated_mod.get_global_var('func_9583')
const_11246 = relay.const([9,-8,3,9,9,-10,-2,7,10,-7,5,5,5,-5,1,-2,-8,-1,2,-10,-9,-6,-1,8,-10,-4,6,7,5,10,3,-8,-4,-1,1,1,-2,-9,-9,-4,-6,4,-8,-1,-4,-8,-5,-10,-7,9,-2,6,-7,-7,-5,-7,-9,-1,5,-1,5,8,8,-2,8,-1,-4,-6,-5,7,-6,-9,7,-4,-3,1,-4,1,6,-7,5,-7,-8,-9,-8,2,-3,8,2,2,9,-5,-2,-5,10,-3,3,-5,4,1,-4,-3,4,7,-5,3,-2,-7,7,-3,5,5,5,-6,-5,9,1,-6,-5,-3,2,4,-6,-8,-2,-1,4,-4,7,-10,-8,10,2,4,-9,-8,3,-4,-1,-4,-3,2,3,10,8,2,8,-7,8,-8,10,-9,-5,4,7,-1,-6,-10,8,9,-10,4,-3,-8,2,-9,1,-7,-10,6,-10,-10,9,5,1,-3,-5,9,-8,10,-7,4,4,6,-4,-1,-9,-1,10,6,-2,-2,-6,6,2,-3,2,6,-9,-1,-7,9,3,4,8,7,-9,-8,4,6,-9,-4,6,-6,-4,-10,-9,-7,-1,-10,-1,10,7,-2,3,4,8,-2,10,1,-4,7,2,-8,6,-3,-4,-6,2,-10,7,4,4,2,-3,-1,6,2,3,10,-7,-8,-5,-2,4,1,-7,-9,-2,-8,5,-3,9,-8,5,-4,2,-5,-6,-5,8,2,-2,10,-3,8,8,-7,-7,1,-5,-6,7,-6,-8,-3,-9,-6,7,5,-2,8,-4,-9,1,5,-5,3,-2,-4,1,9,-6,9,8,-3,-6,-2,-5,-3,1,2,-9,-7,-5,-1,10,-4,-4,-10,-8,-7,-4,-7,10,-7,10,-6,-4,9,-3,4,10,-10,3,-1,4,7,6,1,6,8,5,4,-4,9,-3,3,-2,-10,-4,8,-10,10,-1,-2,6,4,4,3,8,7,4,7,-4,1,-9,-8,3,4,8,2,8,7,3,3,-1,-5], dtype = "int32")#candidate|11246|(378,)|const|int32
call_11245 = relay.TupleGetItem(func_9580_call(relay.reshape(call_11206.astype('int32'), [1, 3, 9]), relay.reshape(const_11246.astype('int32'), [14, 3, 9]), ), 0)
call_11247 = relay.TupleGetItem(func_9583_call(relay.reshape(call_11206.astype('int32'), [1, 3, 9]), relay.reshape(const_11246.astype('int32'), [14, 3, 9]), ), 0)
func_9821_call = mod.get_global_var('func_9821')
func_9825_call = mutated_mod.get_global_var('func_9825')
var_11258 = relay.var("var_11258", dtype = "float32", shape = (216,))#candidate|11258|(216,)|var|float32
var_11259 = relay.var("var_11259", dtype = "float32", shape = (108,))#candidate|11259|(108,)|var|float32
call_11257 = relay.TupleGetItem(func_9821_call(relay.reshape(var_11258.astype('float32'), [8, 9, 3]), relay.reshape(var_11209.astype('int32'), []), relay.reshape(var_11259.astype('float32'), [108,]), ), 8)
call_11260 = relay.TupleGetItem(func_9825_call(relay.reshape(var_11258.astype('float32'), [8, 9, 3]), relay.reshape(var_11209.astype('int32'), []), relay.reshape(var_11259.astype('float32'), [108,]), ), 8)
func_8713_call = mod.get_global_var('func_8713')
func_8714_call = mutated_mod.get_global_var('func_8714')
call_11264 = relay.TupleGetItem(func_8713_call(), 3)
call_11265 = relay.TupleGetItem(func_8714_call(), 3)
bop_11274 = relay.multiply(uop_11194.astype('uint64'), var_11209.astype('uint64')) # shape=(6, 12, 12)
bop_11277 = relay.multiply(uop_11196.astype('uint64'), var_11209.astype('uint64')) # shape=(6, 12, 12)
func_8476_call = mod.get_global_var('func_8476')
func_8477_call = mutated_mod.get_global_var('func_8477')
call_11305 = func_8476_call()
call_11306 = func_8476_call()
output = relay.Tuple([call_11206,call_11208,const_11210,call_11245,const_11246,call_11257,var_11258,var_11259,call_11264,bop_11274,call_11305,])
output2 = relay.Tuple([call_11207,call_11211,const_11210,call_11247,const_11246,call_11260,var_11258,var_11259,call_11265,bop_11277,call_11306,])
func_11308 = relay.Function([var_11209,var_11258,var_11259,], output)
mod['func_11308'] = func_11308
mod = relay.transform.InferType()(mod)
mutated_mod['func_11308'] = func_11308
mutated_mod = relay.transform.InferType()(mutated_mod)
func_11308_call = mutated_mod.get_global_var('func_11308')
var_11310 = relay.var("var_11310", dtype = "float64", shape = ())#candidate|11310|()|var|float64
var_11311 = relay.var("var_11311", dtype = "float32", shape = (216,))#candidate|11311|(216,)|var|float32
var_11312 = relay.var("var_11312", dtype = "float32", shape = (108,))#candidate|11312|(108,)|var|float32
call_11309 = func_11308_call(var_11310,var_11311,var_11312,)
output = call_11309
func_11313 = relay.Function([var_11310,var_11311,var_11312,], output)
mutated_mod['func_11313'] = func_11313
mutated_mod = relay.transform.InferType()(mutated_mod)
var_11363 = relay.var("var_11363", dtype = "float64", shape = (6, 15, 10))#candidate|11363|(6, 15, 10)|var|float64
uop_11364 = relay.erf(var_11363.astype('float64')) # shape=(6, 15, 10)
func_3153_call = mod.get_global_var('func_3153')
func_3156_call = mutated_mod.get_global_var('func_3156')
const_11368 = relay.const([-2.792519,-8.929749,-6.163096,-2.948772,1.621502,-2.836021,-1.868204,8.506822,0.639398,-7.281281,9.377724,8.837088,-3.020583,1.490817,5.854117,-2.183504,8.486533,1.932381,5.413186,-8.540024,-7.642768,-4.489111,5.946016,9.000543,-4.119284,-7.714451,6.295591,0.243133,-1.839724,4.711835,4.754471,-3.730292,-0.111323,3.592455,9.043712,-5.010334,-8.131065,1.309897,-5.587941,5.264051,-1.328872,6.449345,3.583977,-1.241851,7.160917,-2.231698,3.650631,8.153283,-7.508428,0.386593,0.112274,2.445592,4.905397,5.497431,0.226937,-9.333278,4.202110,7.005238,-1.225471,-2.540389,9.519449,7.030009,6.655122,-1.749112,3.472674,-1.953585,4.852108,-1.886705,-0.043726,2.861932,-7.545127,5.303928,6.487776,8.708191,-5.037041,5.159518,-7.560621,-6.762310,-4.957593,4.383349,2.876231,-7.449022,-1.359595,8.639030,-1.262572,-3.249775,-4.270797,-0.889018,1.194820,9.588844,-6.852418,2.008089,5.359580,-5.569745,3.648151,8.136262,4.087470,5.226743,9.034692,-3.918902,5.659578,-4.820100,7.002027,8.270413,-0.487105,-7.916016,-7.105026,9.308584,-9.372810,3.993226,-4.573258,-1.445056,-4.304446,7.413695,-6.591908,6.191022,-1.188704,7.971592,3.411670,-9.594852,1.191034,-0.845753,6.911999,-6.260995,3.306702,8.528310,-0.654865,-5.624072,5.042718,-6.505496,2.370475,-6.983057,-8.454522,3.187117,-9.179757,7.395916,8.499680,9.155967,-8.008730,-8.093460,7.167647,7.321803,6.956156,-3.950483,8.333464,-8.846986,0.131253,-9.643966,-6.358343,4.193914,-7.931097,-4.861052,-6.402935,-5.776008,2.112390,-6.062717,-6.725394,3.027625,6.433258,-1.808771,-2.248516,-7.074119,1.723864,1.090259,-1.162768,0.923782,-7.170932,-3.220035,9.734203,0.629149,4.200685,-9.781835,6.053695,6.362432,0.569836,4.711519,-4.236912,9.763235,-4.967372,9.084826,8.498456,5.760138,8.002782,-4.097673,-6.509926,5.828489,-6.679441,1.333192,6.001567,-0.159356,5.811508,2.776915,1.864043,4.436147,9.523071,4.409566,5.366902,-2.325074,-7.085945,-9.523688,-5.166624,4.988192,7.023651,-7.119296,9.472615,0.661671,-8.256262,8.373591,-2.802318,-2.066663,2.731758,-7.106481,-2.348570,0.685895,-9.839617,-0.024892,-4.847237,4.031298,-9.117910,-1.484335,-1.973427,-7.716934,-0.754057,1.139812,8.663544,5.044873,3.435351,2.308509,-5.812397,-2.330406,-3.731993,-3.344845,-2.577148,-8.659713,3.915056,2.929738,2.161828,7.985026,4.036777,-0.763552,-5.713235,4.059112,9.440132,2.981261,-4.433512,-7.201784,-1.436725,7.665100,-7.112592,-3.815897,-4.433291,-3.277272,6.083035,-2.945280,-2.009245,4.624479,-1.403474,-9.460044,-4.686490,2.794645,5.641281,2.392646,-5.548910,8.688781,8.418960,5.207892,7.963337,9.048853,1.982061,8.691484,-0.564408,-4.022021,8.608999,-0.829161,-1.060487,-0.908636,-2.111046,-7.411355,-2.386652,1.952390,2.777687,-7.448643,-3.013174,3.038547,4.319611,1.133382,-9.249619,-3.898139,-1.095065,9.316167,-7.532552,5.426311,4.846704,-2.339628,0.387620,2.207414,-2.094905,0.054903,0.745355,-8.717087,3.471324,-3.483629,0.515449,6.389847,-9.548274,-8.120965,1.483241,0.245613,8.626179,-8.866585,0.540049,9.023716,5.270990,1.489756,-0.341694,0.396874,5.593938,0.509570,-9.662455,6.122595,3.683723,-1.291510,3.184774,5.529565,1.651756,7.094027,-4.103846,-4.316345,8.807355,-8.448511,5.240362,2.202144,-8.819422,4.076947,1.443702,8.637120,-0.066537,8.321423,3.113241,3.218053,8.202637,1.198583,2.238972,6.234026,3.628409,-0.644313,-2.559497,-8.255663,-4.149202,2.648177,-5.056209,-4.131813,-3.926573,-5.895819,8.449015,-1.521625,-1.572787,-3.316487,2.632267,-0.917001,3.528686,1.498604,-5.023545,-7.889086,3.822162,-8.590008,-1.531455,1.650384,4.298973,-7.684996,3.749787,9.384895,3.545532,8.617008,8.744501,7.431353,1.752824,-9.149956,-1.565329,-8.214311,7.581439,4.132489,-8.604052,-2.184558,-3.369700,-3.297312,-1.820514,1.391979,9.034539,-6.196600,-0.033282,5.424156,5.132841,2.826530,8.941719,5.525934,7.400479,-3.031863,9.017320,8.967927,-6.515413,8.021860,2.662216,-4.631157,-2.063150,4.278570,-7.382328,-3.436282,2.660816,-6.890749,3.725564,0.453324,-1.776235,-3.553010,-2.383199,-8.220316,2.271186,1.385173,-3.020372,3.502942,6.626518,-5.926416,-5.307843,0.293204,-3.623216,-1.360851,6.141217,-3.025125,6.494252,-7.604782,-7.591608,-8.995290,-7.978726,-5.267151,5.668424,6.471043,1.775075,8.374837,-1.644831,5.109671,-0.767585,5.153431,8.656479,3.255277,-1.832035,-6.202711,-5.743460,9.245394,1.900809,-5.825723,0.022586,8.053151,9.988605,-5.162922,6.993116,-9.858277,2.265443,8.037284,-7.353658,-9.112620,-5.248642,8.039509,2.515531,-4.721200,7.313705,-8.173752,-5.739416,3.538875,-3.362563,-8.940023,4.412572,5.425645,-7.221574,9.045238,1.018007,1.899923,-0.804610,7.569434,8.988325,-1.807681,-2.387859,-6.096653,-7.278699,-2.458414,3.985070,-2.613707,2.786570,-3.215412,1.759779,-5.240394,7.302101,-4.328402,3.575283,0.986752,2.537199,0.511661,-7.654849,1.097627,7.945850,8.622840,-5.489203,8.300594,5.150563,6.501879,2.710704,-5.223220,0.192741,-9.858997,-8.715403,-2.380796,-5.991678,2.552698,3.425221,8.909222,-3.016083,1.099571,5.418457,-9.087246,-7.763232,0.181442,-2.910693,-8.226145,-9.473587,-7.424402,1.406258,5.138887,-7.932499,-4.913897,5.525701,-8.843497,8.221793,-9.305488,-0.196653,3.664015,-1.119786,-7.109562,-0.931710,-3.389404,0.851532,4.700801,0.299023,-7.598686,6.810941,4.530430,5.342457,-1.143969,-3.405945,3.851689,-5.475957,8.761367,6.295800,0.290080,1.543018,-5.315794,-2.604710,1.769179,-3.110259,1.109919,-8.648382,-0.579581,-4.819755,-0.926224,5.266872,7.928085,2.266550,-9.969893,-4.873168,-8.714865,-5.140195,-1.830969,6.885595,-1.511421,-1.836766,1.313536,9.139733,-6.856561,7.526178,-3.866475,-7.611974,-1.707376,-3.670803,-4.232203,-3.764242,-3.283307,2.107777,5.004131,-3.907864,3.434506,9.183315,-9.123141,-1.882659,-8.507052,7.824613,4.378521,-8.811408,0.563096,-0.091705,9.586872,5.826379,5.742640,-9.412002,9.449912,9.844520,7.333553,7.174052,6.381680,-6.691091,9.265494,-3.003743,8.148408,-1.147026,4.103571,-3.904910,1.953564,9.789716,3.450297,3.116296,-2.273545,4.723170,0.661079,0.321251,-9.262802,-1.785267,-7.583794,-2.836058,3.300163,-8.278788,-2.211564,1.736562,-2.386636,-4.550502,1.047058,-1.888325,-0.053800,5.943051,3.808308,-7.136885,6.598859,7.288088,6.478364,5.942623,2.352953,-8.450280,5.074018,9.746978,-5.334613,5.061190,-7.187825,6.216453,9.923257,-8.511344,-2.652952,-5.571413,-9.087346,6.914559,-7.799129,-0.291429,-8.268970,1.590031,8.504300,-0.759664,-6.901439,2.869127,9.635466,-8.956873,0.079616,6.262544,9.158199,8.966865,-2.413690,-5.483399,-5.910155,-1.509386,2.604580,-2.985898,-1.035872,-7.812065,-6.774230,3.742158,-1.360277,-0.728417,1.163821,4.988902,8.991911,-7.006332,5.712451,-3.951443,9.242429,0.042270,-5.738984,7.436989,-1.631907,-1.968963,0.639947,-4.825665,9.272164,-5.616453,0.585608,1.889818,-5.139970,-6.461007,-3.043354,5.456515,8.265476,-3.033737,-8.219724,-7.178119,6.477650,7.425880,6.159192,7.563086,-0.853448,6.276277,8.954263,6.803194,-2.699609,-9.446125,-0.978712,-1.845881,-1.094561,-0.709260,4.169237,4.117163,7.410797,4.642416,-4.153214,0.055139,-8.233409,-8.488840,4.649390,-3.653778,4.636404,1.726951,-6.935982,0.744122,-7.717780,-5.560240,9.103770,7.076511,-8.817664,0.852745,6.897379,-1.736830,2.705153,6.990189,-3.196828,-1.931386,-4.139315,0.819158,3.338618,2.989482,-2.134397,0.585881,8.777567,-6.794018,-7.556310,7.800078,-4.828263,0.650031,-8.107500,3.996915,-1.045459,5.971387,5.082021,-6.283062,5.307342,-7.415588,2.888995,9.027930,-7.160261,-8.900222,4.327475,-9.208130,1.567995,8.042416,8.568773,-7.146717,-7.120079,-8.108023,2.509338,0.637898,3.100949,-2.064783,7.959303,2.071946,-2.959736,-5.414309,3.932435,1.065744,0.264504,2.678763,0.571643,-3.066053,9.591572,8.944550,0.802948,6.948637,5.274433,2.884855,-3.910799,-8.039547,2.186542,-7.309340,-9.932050,8.684699,7.634655,-7.081158,9.303712,-8.075131,9.225620,9.152508,-8.723936,2.079527,-8.704122,0.566270,-6.874318,4.132415,-8.500140,-5.597944,-7.338765,-1.127641,-0.156159,-8.874876,-1.577340,-6.249011,0.104749,-7.263133,7.696440,2.566404,1.292739,-8.594909,-8.670920,3.206257,3.956709,8.970985,5.632459,1.734754,-6.118778,4.553673,1.984710,5.980394,7.418779,-5.315435,2.690562,1.551003,-5.968811,-0.836663,1.766685,-8.923799,-9.417250,-4.767158,8.474236,2.698242,-8.553368,-3.157667,4.695112,-1.777390,-8.705206,2.576002,-6.927923,-7.148709,-3.488342,2.423434,-1.793327], dtype = "float64")#candidate|11368|(864,)|const|float64
call_11367 = func_3153_call(relay.reshape(const_11368.astype('float64'), [8, 12, 9]))
call_11369 = func_3153_call(relay.reshape(const_11368.astype('float64'), [8, 12, 9]))
output = relay.Tuple([uop_11364,call_11367,const_11368,])
output2 = relay.Tuple([uop_11364,call_11369,const_11368,])
func_11371 = relay.Function([var_11363,], output)
mod['func_11371'] = func_11371
mod = relay.transform.InferType()(mod)
mutated_mod['func_11371'] = func_11371
mutated_mod = relay.transform.InferType()(mutated_mod)
var_11372 = relay.var("var_11372", dtype = "float64", shape = (6, 15, 10))#candidate|11372|(6, 15, 10)|var|float64
func_11371_call = mutated_mod.get_global_var('func_11371')
call_11373 = func_11371_call(var_11372)
output = call_11373
func_11374 = relay.Function([var_11372], output)
mutated_mod['func_11374'] = func_11374
mutated_mod = relay.transform.InferType()(mutated_mod)
func_8546_call = mod.get_global_var('func_8546')
func_8547_call = mutated_mod.get_global_var('func_8547')
call_11397 = func_8546_call()
call_11398 = func_8546_call()
output = call_11397
output2 = call_11398
func_11405 = relay.Function([], output)
mod['func_11405'] = func_11405
mod = relay.transform.InferType()(mod)
mutated_mod['func_11405'] = func_11405
mutated_mod = relay.transform.InferType()(mutated_mod)
func_11405_call = mutated_mod.get_global_var('func_11405')
call_11406 = func_11405_call()
output = call_11406
func_11407 = relay.Function([], output)
mutated_mod['func_11407'] = func_11407
mutated_mod = relay.transform.InferType()(mutated_mod)
const_11495 = relay.const([[[9.492893],[-8.731285],[3.310369],[8.028502],[-2.704487],[-5.099792],[9.511482],[9.031933],[4.250287],[-9.261246]],[[-2.949012],[6.601401],[-0.820743],[-3.370901],[-5.054018],[7.174704],[-8.835626],[-8.030313],[-2.077616],[-2.880010]],[[-7.229992],[2.756894],[0.463296],[7.123311],[0.732109],[-5.836488],[-4.318958],[-4.365858],[-2.237824],[-0.894050]],[[6.440179],[-2.608029],[8.453563],[1.892305],[-6.989974],[-8.836863],[-5.381482],[-4.331668],[3.494158],[-7.289766]]], dtype = "float32")#candidate|11495|(4, 10, 1)|const|float32
uop_11496 = relay.atan(const_11495.astype('float32')) # shape=(4, 10, 1)
output = uop_11496
output2 = uop_11496
func_11498 = relay.Function([], output)
mod['func_11498'] = func_11498
mod = relay.transform.InferType()(mod)
mutated_mod['func_11498'] = func_11498
mutated_mod = relay.transform.InferType()(mutated_mod)
func_11498_call = mutated_mod.get_global_var('func_11498')
call_11499 = func_11498_call()
output = call_11499
func_11500 = relay.Function([], output)
mutated_mod['func_11500'] = func_11500
mutated_mod = relay.transform.InferType()(mutated_mod)
func_8818_call = mod.get_global_var('func_8818')
func_8819_call = mutated_mod.get_global_var('func_8819')
call_11512 = relay.TupleGetItem(func_8818_call(), 0)
call_11513 = relay.TupleGetItem(func_8819_call(), 0)
output = call_11512
output2 = call_11513
func_11521 = relay.Function([], output)
mod['func_11521'] = func_11521
mod = relay.transform.InferType()(mod)
mutated_mod['func_11521'] = func_11521
mutated_mod = relay.transform.InferType()(mutated_mod)
func_11521_call = mutated_mod.get_global_var('func_11521')
call_11522 = func_11521_call()
output = call_11522
func_11523 = relay.Function([], output)
mutated_mod['func_11523'] = func_11523
mutated_mod = relay.transform.InferType()(mutated_mod)
func_9853_call = mod.get_global_var('func_9853')
func_9854_call = mutated_mod.get_global_var('func_9854')
call_11590 = relay.TupleGetItem(func_9853_call(), 0)
call_11591 = relay.TupleGetItem(func_9854_call(), 0)
output = relay.Tuple([call_11590,])
output2 = relay.Tuple([call_11591,])
func_11624 = relay.Function([], output)
mod['func_11624'] = func_11624
mod = relay.transform.InferType()(mod)
mutated_mod['func_11624'] = func_11624
mutated_mod = relay.transform.InferType()(mutated_mod)
func_11624_call = mutated_mod.get_global_var('func_11624')
call_11625 = func_11624_call()
output = call_11625
func_11626 = relay.Function([], output)
mutated_mod['func_11626'] = func_11626
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7298_call = mod.get_global_var('func_7298')
func_7299_call = mutated_mod.get_global_var('func_7299')
call_11635 = relay.TupleGetItem(func_7298_call(), 0)
call_11636 = relay.TupleGetItem(func_7299_call(), 0)
output = call_11635
output2 = call_11636
func_11652 = relay.Function([], output)
mod['func_11652'] = func_11652
mod = relay.transform.InferType()(mod)
mutated_mod['func_11652'] = func_11652
mutated_mod = relay.transform.InferType()(mutated_mod)
func_11652_call = mutated_mod.get_global_var('func_11652')
call_11653 = func_11652_call()
output = call_11653
func_11654 = relay.Function([], output)
mutated_mod['func_11654'] = func_11654
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6135_call = mod.get_global_var('func_6135')
func_6136_call = mutated_mod.get_global_var('func_6136')
call_11764 = relay.TupleGetItem(func_6135_call(), 0)
call_11765 = relay.TupleGetItem(func_6136_call(), 0)
func_2588_call = mod.get_global_var('func_2588')
func_2591_call = mutated_mod.get_global_var('func_2591')
const_11790 = relay.const([[3,-1,4,2,5,1,6,-9,-1,-7,1,-4,-5,7,-5,5,5,-9,-2,-4,-6,-6,-8,1,7,10,5,9,2,-10,-10,-7,3,-7,-8,1,-6,8,-5,-5,-9,4,-6,-6,8,-9,2,-7,-1,-9,7,-7,-10,9,6,-10,9,-8,7,-7,-1,7,-2,10,1,4],[-1,1,6,7,-5,6,10,-1,10,-6,-4,-6,-9,10,6,-8,-5,-6,-8,-2,1,7,1,-10,7,2,1,8,4,10,1,5,-4,6,6,-4,-5,-8,-10,7,-6,-9,-5,-7,-4,-9,6,1,-4,3,-7,7,-10,8,3,9,4,-8,-6,10,-3,-7,2,10,-8,-8],[-10,9,-1,-3,-4,-6,4,-9,-1,2,-7,-5,-8,-7,-6,1,1,9,7,-6,6,-9,-6,-1,-5,-2,-4,3,10,8,4,-3,7,7,-3,5,7,-10,-2,1,-5,-2,-8,1,-5,-3,8,8,-7,1,9,7,-2,8,-9,-3,-2,3,2,-9,5,-9,-7,8,1,-3],[-9,-4,-7,-7,1,-1,9,-4,-10,-1,4,-7,7,6,7,8,-10,-7,7,5,5,3,-2,6,-8,8,-5,3,-10,-9,6,3,2,-5,5,6,-6,4,4,1,-7,3,3,5,5,-2,-3,-9,4,-3,3,-9,-8,8,-2,-5,-9,-2,-8,-8,1,6,-5,-1,10,-6],[-3,4,7,-7,-3,10,3,-6,9,4,6,-7,8,9,-10,-2,9,6,8,-7,-6,-4,-10,-1,-6,10,6,2,5,-1,6,10,9,-3,1,-7,8,-9,-2,7,5,2,7,5,-5,9,-10,-7,8,6,-10,8,6,6,8,-8,5,6,1,-5,8,10,-6,-10,6,4],[1,-6,1,-7,-9,4,2,-5,-9,-1,-8,-8,-7,7,-4,-3,-4,4,-3,6,3,-6,-8,-9,-3,8,3,-6,-4,-8,-5,-7,-2,-6,-1,6,2,10,3,1,-2,-9,-4,-7,-7,1,6,3,-9,2,5,4,2,-9,3,-2,8,-2,-8,3,4,9,1,9,-5,2],[10,9,-9,-6,-8,-9,-4,1,10,9,-1,7,4,-4,6,1,1,8,8,-4,6,5,6,4,-3,1,3,5,-3,-8,-4,-7,-9,-7,-10,-3,4,-8,7,6,5,3,-7,-5,1,9,2,-2,-10,-8,-8,9,-3,2,-1,10,-8,-5,-5,-7,-6,2,2,-9,-3,-7],[9,4,-4,-2,5,-10,8,9,-8,10,5,-1,5,1,10,10,-3,3,-9,2,-8,-10,-10,10,5,3,1,7,8,6,6,-7,-8,-8,-7,2,5,-4,1,4,-3,8,-10,9,-4,4,-1,-3,-3,-8,9,6,2,-8,3,2,6,-1,6,-4,5,4,-1,6,6,-6],[4,1,-3,2,1,-3,4,5,4,-2,-9,6,3,-6,4,4,-4,-5,-3,3,8,5,10,4,1,-4,4,2,9,-4,8,2,-4,8,-3,3,9,-5,-10,-4,7,-3,5,6,-3,-1,-10,-6,-10,-4,-7,6,7,-6,10,-9,-5,8,10,-6,-8,-6,9,-5,-6,2],[7,1,9,2,7,-8,8,2,4,10,6,10,-10,4,5,-1,-6,-8,-2,-6,-6,9,4,9,-3,2,7,-5,-9,4,9,-6,-10,9,7,-10,4,6,-5,8,5,7,9,10,-3,2,4,6,-6,-7,-2,7,-6,-4,7,-9,9,4,-8,-10,1,-2,3,10,-2,-2],[1,2,2,8,-7,2,3,-8,4,-1,-9,1,-10,1,5,-8,-5,-6,6,8,1,3,-8,2,-8,-9,5,-1,9,6,-7,10,3,-1,-10,-4,9,-4,8,-10,-10,-5,7,1,-10,-9,1,9,9,-5,-8,-1,-6,-5,2,1,4,-10,-4,8,8,-2,-1,3,2,-9]], dtype = "int64")#candidate|11790|(11, 66)|const|int64
var_11791 = relay.var("var_11791", dtype = "int32", shape = ())#candidate|11791|()|var|int32
call_11789 = relay.TupleGetItem(func_2588_call(relay.reshape(const_11790.astype('int64'), [6, 11, 11]), relay.reshape(var_11791.astype('int32'), []), ), 0)
call_11792 = relay.TupleGetItem(func_2591_call(relay.reshape(const_11790.astype('int64'), [6, 11, 11]), relay.reshape(var_11791.astype('int32'), []), ), 0)
func_11025_call = mod.get_global_var('func_11025')
func_11028_call = mutated_mod.get_global_var('func_11028')
call_11796 = relay.TupleGetItem(func_11025_call(relay.reshape(var_11791.astype('float64'), [])), 0)
call_11797 = relay.TupleGetItem(func_11028_call(relay.reshape(var_11791.astype('float64'), [])), 0)
output = relay.Tuple([call_11764,call_11789,const_11790,var_11791,call_11796,])
output2 = relay.Tuple([call_11765,call_11792,const_11790,var_11791,call_11797,])
func_11801 = relay.Function([var_11791,], output)
mod['func_11801'] = func_11801
mod = relay.transform.InferType()(mod)
mutated_mod['func_11801'] = func_11801
mutated_mod = relay.transform.InferType()(mutated_mod)
var_11802 = relay.var("var_11802", dtype = "int32", shape = ())#candidate|11802|()|var|int32
func_11801_call = mutated_mod.get_global_var('func_11801')
call_11803 = func_11801_call(var_11802)
output = call_11803
func_11804 = relay.Function([var_11802], output)
mutated_mod['func_11804'] = func_11804
mutated_mod = relay.transform.InferType()(mutated_mod)
func_8713_call = mod.get_global_var('func_8713')
func_8714_call = mutated_mod.get_global_var('func_8714')
call_11829 = relay.TupleGetItem(func_8713_call(), 1)
call_11830 = relay.TupleGetItem(func_8714_call(), 1)
func_7911_call = mod.get_global_var('func_7911')
func_7914_call = mutated_mod.get_global_var('func_7914')
call_11836 = relay.TupleGetItem(func_7911_call(relay.reshape(call_11829.astype('float64'), [])), 3)
call_11837 = relay.TupleGetItem(func_7914_call(relay.reshape(call_11829.astype('float64'), [])), 3)
output = relay.Tuple([call_11829,call_11836,])
output2 = relay.Tuple([call_11830,call_11837,])
func_11838 = relay.Function([], output)
mod['func_11838'] = func_11838
mod = relay.transform.InferType()(mod)
mutated_mod['func_11838'] = func_11838
mutated_mod = relay.transform.InferType()(mutated_mod)
func_11838_call = mutated_mod.get_global_var('func_11838')
call_11839 = func_11838_call()
output = call_11839
func_11840 = relay.Function([], output)
mutated_mod['func_11840'] = func_11840
mutated_mod = relay.transform.InferType()(mutated_mod)
func_9505_call = mod.get_global_var('func_9505')
func_9507_call = mutated_mod.get_global_var('func_9507')
call_11902 = func_9505_call()
call_11903 = func_9505_call()
output = call_11902
output2 = call_11903
func_11908 = relay.Function([], output)
mod['func_11908'] = func_11908
mod = relay.transform.InferType()(mod)
output = func_11908()
func_11909 = relay.Function([], output)
mutated_mod['func_11909'] = func_11909
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7446_call = mod.get_global_var('func_7446')
func_7448_call = mutated_mod.get_global_var('func_7448')
call_11910 = relay.TupleGetItem(func_7446_call(), 0)
call_11911 = relay.TupleGetItem(func_7448_call(), 0)
func_11624_call = mod.get_global_var('func_11624')
func_11626_call = mutated_mod.get_global_var('func_11626')
call_11917 = relay.TupleGetItem(func_11624_call(), 0)
call_11918 = relay.TupleGetItem(func_11626_call(), 0)
func_6336_call = mod.get_global_var('func_6336')
func_6337_call = mutated_mod.get_global_var('func_6337')
call_11919 = relay.TupleGetItem(func_6336_call(), 0)
call_11920 = relay.TupleGetItem(func_6337_call(), 0)
func_9554_call = mod.get_global_var('func_9554')
func_9556_call = mutated_mod.get_global_var('func_9556')
call_11921 = relay.TupleGetItem(func_9554_call(), 0)
call_11922 = relay.TupleGetItem(func_9556_call(), 0)
func_9853_call = mod.get_global_var('func_9853')
func_9854_call = mutated_mod.get_global_var('func_9854')
call_11954 = relay.TupleGetItem(func_9853_call(), 0)
call_11955 = relay.TupleGetItem(func_9854_call(), 0)
output = relay.Tuple([call_11910,call_11917,call_11919,call_11921,call_11954,])
output2 = relay.Tuple([call_11911,call_11918,call_11920,call_11922,call_11955,])
func_11966 = relay.Function([], output)
mod['func_11966'] = func_11966
mod = relay.transform.InferType()(mod)
output = func_11966()
func_11967 = relay.Function([], output)
mutated_mod['func_11967'] = func_11967
mutated_mod = relay.transform.InferType()(mutated_mod)
func_11182_call = mod.get_global_var('func_11182')
func_11183_call = mutated_mod.get_global_var('func_11183')
call_11994 = relay.TupleGetItem(func_11182_call(), 0)
call_11995 = relay.TupleGetItem(func_11183_call(), 0)
func_11652_call = mod.get_global_var('func_11652')
func_11654_call = mutated_mod.get_global_var('func_11654')
call_11996 = func_11652_call()
call_11997 = func_11652_call()
output = relay.Tuple([call_11994,call_11996,])
output2 = relay.Tuple([call_11995,call_11997,])
func_12001 = relay.Function([], output)
mod['func_12001'] = func_12001
mod = relay.transform.InferType()(mod)
output = func_12001()
func_12002 = relay.Function([], output)
mutated_mod['func_12002'] = func_12002
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7211_call = mod.get_global_var('func_7211')
func_7213_call = mutated_mod.get_global_var('func_7213')
call_12010 = func_7211_call()
call_12011 = func_7211_call()
func_801_call = mod.get_global_var('func_801')
func_805_call = mutated_mod.get_global_var('func_805')
const_12034 = relay.const([[-5,-9,-4,10,10,10,4,2,-7,-7,2,8,-3,4,-3,3,9,-10,8,-6],[-5,4,10,-9,7,-5,-3,-2,-2,-4,-7,4,10,-2,-4,-9,-5,-10,-2,-5]], dtype = "uint8")#candidate|12034|(2, 20)|const|uint8
call_12033 = relay.TupleGetItem(func_801_call(relay.reshape(const_12034.astype('uint8'), [1, 5, 8]), relay.reshape(const_12034.astype('uint8'), [1, 5, 8]), ), 2)
call_12035 = relay.TupleGetItem(func_805_call(relay.reshape(const_12034.astype('uint8'), [1, 5, 8]), relay.reshape(const_12034.astype('uint8'), [1, 5, 8]), ), 2)
output = relay.Tuple([call_12010,call_12033,const_12034,])
output2 = relay.Tuple([call_12011,call_12035,const_12034,])
func_12037 = relay.Function([], output)
mod['func_12037'] = func_12037
mod = relay.transform.InferType()(mod)
output = func_12037()
func_12038 = relay.Function([], output)
mutated_mod['func_12038'] = func_12038
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6772_call = mod.get_global_var('func_6772')
func_6774_call = mutated_mod.get_global_var('func_6774')
call_12039 = func_6772_call()
call_12040 = func_6772_call()
output = relay.Tuple([call_12039,])
output2 = relay.Tuple([call_12040,])
func_12042 = relay.Function([], output)
mod['func_12042'] = func_12042
mod = relay.transform.InferType()(mod)
mutated_mod['func_12042'] = func_12042
mutated_mod = relay.transform.InferType()(mutated_mod)
func_12042_call = mutated_mod.get_global_var('func_12042')
call_12043 = func_12042_call()
output = call_12043
func_12044 = relay.Function([], output)
mutated_mod['func_12044'] = func_12044
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7694_call = mod.get_global_var('func_7694')
func_7696_call = mutated_mod.get_global_var('func_7696')
call_12121 = relay.TupleGetItem(func_7694_call(), 0)
call_12122 = relay.TupleGetItem(func_7696_call(), 0)
func_6270_call = mod.get_global_var('func_6270')
func_6271_call = mutated_mod.get_global_var('func_6271')
call_12124 = func_6270_call()
call_12125 = func_6270_call()
output = relay.Tuple([call_12121,call_12124,])
output2 = relay.Tuple([call_12122,call_12125,])
func_12129 = relay.Function([], output)
mod['func_12129'] = func_12129
mod = relay.transform.InferType()(mod)
output = func_12129()
func_12130 = relay.Function([], output)
mutated_mod['func_12130'] = func_12130
mutated_mod = relay.transform.InferType()(mutated_mod)
func_8359_call = mod.get_global_var('func_8359')
func_8361_call = mutated_mod.get_global_var('func_8361')
call_12147 = relay.TupleGetItem(func_8359_call(), 0)
call_12148 = relay.TupleGetItem(func_8361_call(), 0)
func_7394_call = mod.get_global_var('func_7394')
func_7395_call = mutated_mod.get_global_var('func_7395')
call_12154 = func_7394_call()
call_12155 = func_7394_call()
output = relay.Tuple([call_12147,call_12154,])
output2 = relay.Tuple([call_12148,call_12155,])
func_12157 = relay.Function([], output)
mod['func_12157'] = func_12157
mod = relay.transform.InferType()(mod)
mutated_mod['func_12157'] = func_12157
mutated_mod = relay.transform.InferType()(mutated_mod)
func_12157_call = mutated_mod.get_global_var('func_12157')
call_12158 = func_12157_call()
output = call_12158
func_12159 = relay.Function([], output)
mutated_mod['func_12159'] = func_12159
mutated_mod = relay.transform.InferType()(mutated_mod)
func_10849_call = mod.get_global_var('func_10849')
func_10851_call = mutated_mod.get_global_var('func_10851')
call_12189 = relay.TupleGetItem(func_10849_call(), 0)
call_12190 = relay.TupleGetItem(func_10851_call(), 0)
var_12207 = relay.var("var_12207", dtype = "float32", shape = (2, 9, 3))#candidate|12207|(2, 9, 3)|var|float32
bop_12208 = relay.logical_xor(call_12189.astype('uint8'), var_12207.astype('uint8')) # shape=(2, 9, 3)
bop_12211 = relay.logical_xor(call_12190.astype('uint8'), var_12207.astype('uint8')) # shape=(2, 9, 3)
output = bop_12208
output2 = bop_12211
func_12216 = relay.Function([var_12207,], output)
mod['func_12216'] = func_12216
mod = relay.transform.InferType()(mod)
mutated_mod['func_12216'] = func_12216
mutated_mod = relay.transform.InferType()(mutated_mod)
var_12217 = relay.var("var_12217", dtype = "float32", shape = (2, 9, 3))#candidate|12217|(2, 9, 3)|var|float32
func_12216_call = mutated_mod.get_global_var('func_12216')
call_12218 = func_12216_call(var_12217)
output = call_12218
func_12219 = relay.Function([var_12217], output)
mutated_mod['func_12219'] = func_12219
mutated_mod = relay.transform.InferType()(mutated_mod)
func_10022_call = mod.get_global_var('func_10022')
func_10023_call = mutated_mod.get_global_var('func_10023')
call_12243 = relay.TupleGetItem(func_10022_call(), 0)
call_12244 = relay.TupleGetItem(func_10023_call(), 0)
uop_12247 = relay.sigmoid(call_12243.astype('float32')) # shape=(5, 3, 15)
uop_12249 = relay.sigmoid(call_12244.astype('float32')) # shape=(5, 3, 15)
func_343_call = mod.get_global_var('func_343')
func_346_call = mutated_mod.get_global_var('func_346')
const_12261 = relay.const([[7.308015],[-6.936965],[5.419359],[-6.276623],[-0.135403],[3.714843],[4.348134],[5.525820],[-1.154847],[9.590411],[8.437437],[3.595648],[7.390885],[2.867743],[-3.432059],[-6.898583],[3.249218],[-0.381651],[1.990937],[-9.608853],[-6.088137],[-2.327389],[-0.846566],[-4.536000],[-4.182387],[4.005509],[5.417060],[-5.259840],[-7.633907],[1.200950],[3.549523],[-3.994604],[-3.342075],[-3.005359],[2.784329],[6.047986],[-9.613684],[7.732374],[6.880149],[6.687863],[-7.635223],[3.625707],[8.976831],[-6.760594],[1.901280],[-7.265698],[8.027562],[-9.267090],[2.482247],[3.892359],[1.080373],[6.685345],[9.226065],[-3.520341],[-0.023364],[-8.550572],[-9.561121],[-5.888759],[-6.483962],[1.001288],[-3.643013],[-0.862428],[-9.489951],[-2.792082],[5.221595],[-5.381427],[-2.132269],[-5.423423],[2.876820],[3.289029],[-2.165524],[-3.166620],[4.505041],[-2.751856],[3.139862],[-8.275198],[1.704139],[6.611146],[7.272838],[-1.694553],[-6.765274],[6.685929],[-4.527292],[-6.499559],[-4.098144],[6.179927],[2.002494],[6.611333],[-1.744010],[-7.952108],[-6.245390],[-7.350818],[-8.809756],[7.485386],[2.743090],[-3.911842],[4.472682],[-7.237956],[-2.509588],[6.121262],[-2.988553],[3.824943],[-1.129721],[2.664976],[9.048603],[-0.342177],[-6.383799],[3.238154],[-3.303852],[-1.536485],[-6.151552],[8.685379],[-8.664384],[2.915411],[-6.129260],[0.237000],[6.928275],[1.131274],[6.061898],[7.711745],[-9.685729],[-0.277612],[-2.830016],[6.247688],[0.385395],[-6.423813],[8.780683],[4.266780],[3.549311],[-1.115956],[0.943986],[5.232341],[-5.429426],[-6.072904],[0.366411],[-6.059591],[1.196870],[-3.560628],[5.747755],[-5.680992],[9.904416],[-0.734078],[7.963580],[-4.540676],[4.876320],[-6.236115],[-8.812500],[3.013116],[-6.885501],[-1.684714],[6.952671],[-1.943362],[-2.007988],[-3.781440],[-4.734585],[-8.859204],[3.584242],[-4.610744],[-2.000017],[-0.956093],[3.399287],[-6.488245],[-6.713608],[8.285602],[9.928498],[-4.509579],[-8.308430],[8.345817],[2.431831],[-4.012127],[-9.526495],[1.068308],[-8.453187],[-4.545991],[-0.228987],[-9.816159],[-6.210598],[2.325163],[-2.472616],[9.518930],[-7.231113],[7.879596],[-5.520878],[9.411727],[-9.151776],[-4.988500],[-6.805838],[6.288097],[2.338245],[7.791718],[-4.285280],[-5.022016],[-6.898832],[7.594727],[-8.011828],[-5.862741],[-9.068506],[8.482749],[-0.860754],[-7.635079],[7.055400],[-9.355761],[-1.692586],[-5.581321],[2.848995],[7.803388],[4.252042],[-7.008833],[3.904915],[-4.380666],[1.718235],[-9.366640],[-7.665290],[-6.114710],[5.064249],[-9.398290],[6.264570],[-2.849814],[-8.029505],[-9.960669],[7.175647],[7.524959],[9.162358],[-2.719381],[4.341264],[-6.082640],[-1.994330],[-6.004582],[-9.802806],[0.030826],[9.400899],[-8.425591],[-4.038828],[-2.739867],[6.640906],[4.411398],[-2.118172],[0.582392],[-9.499578],[-4.063255],[2.180967],[-5.175685],[6.778335],[-2.942719],[-5.310840],[0.691353],[9.139965],[-9.159037],[0.501565],[-2.049827],[0.960582],[7.358247],[-2.455590],[7.226440],[-2.077217],[-6.435980],[-7.274298],[3.489245],[5.394436],[-4.602775],[-0.092737],[4.545886],[4.702262],[8.303456],[-8.129398],[-3.661524],[3.648573],[0.857633],[-4.355453],[4.482569],[-0.383094],[-0.988761],[-5.400710],[0.411814],[-3.561844],[0.347731],[0.984176],[-9.307693],[6.399233],[7.587952],[-8.827925],[5.196662],[7.045928],[7.444091],[-3.285091],[2.871029],[9.768786],[8.325393],[2.129489],[4.740045],[-8.074655],[-4.527717],[-3.087076],[3.464502],[0.275566],[0.090224],[-7.733587],[3.225985],[-3.106432],[3.820050],[7.831309],[2.601255],[5.331097],[7.220582],[0.683762],[-4.997114],[5.122620],[-2.676824],[3.935295],[1.719330],[-0.396565],[-5.435538],[-4.818046],[0.843080],[5.055269],[0.216687],[3.045544],[9.275552],[3.166664],[1.335916],[9.351127],[9.657056],[1.508269],[-3.668947],[5.694130],[1.149289],[5.829505],[-6.107293],[4.388310],[-4.221412],[-8.744948],[-8.546451],[-0.756329],[-1.696797],[-9.431088],[7.129658],[1.118112],[-0.930295],[-2.372493],[-9.539973],[1.496840],[3.446925],[2.124260],[-8.234526],[7.389893],[2.798004],[-4.715020],[1.219163],[8.143130],[-4.210923],[-6.440346],[-0.075243],[-8.265207],[-7.894609],[8.982993],[-9.417283],[-6.775658],[6.030293],[4.886131],[-8.135598],[-1.549976],[5.968325],[2.363085],[-3.221358],[-4.091665],[-0.665653],[-8.860494],[2.708020],[-0.385302],[8.687226],[-6.925352],[-4.592579],[6.044519],[-2.856442],[3.017874],[-9.244249],[7.416590],[-7.761569],[-5.959270],[4.604026],[6.884911],[1.664286],[-0.689283],[6.070373],[-2.017765],[6.596994],[-8.681765],[3.898373],[2.595628],[3.741043],[8.433299],[9.391311],[0.055228],[9.359758],[-3.967722],[-0.456804],[9.891398],[2.767723],[-1.179203],[-7.421243],[7.563727],[9.616715],[9.005303],[8.867243],[8.778537],[2.625945],[-8.364538],[7.375665],[-4.397938],[-8.805050],[6.185350],[-9.160008],[-0.344962],[9.550985],[-2.052844],[-5.551829],[0.663634],[-7.604306],[-1.335952],[0.757321],[-0.406838],[-5.547628],[4.779396],[-6.838684],[9.374376],[-6.071939],[4.470685],[4.485728],[-8.654820],[9.860160],[-0.422350],[-5.037372],[7.054033],[-8.866720],[6.905458],[0.837215],[-1.122000],[-8.338234],[9.683441],[9.585898],[2.516426],[-4.874310],[-6.652922],[2.024907],[-4.595927],[-8.354728],[-1.378133],[-5.671164],[8.715889],[2.580728],[-6.704591],[-0.205401],[9.295610],[7.887775],[4.576723],[5.420488],[-7.296366],[1.847264],[4.137927],[-7.224483],[4.302114],[-3.236284],[8.796830],[-9.290958],[3.144946],[1.444312],[-3.988485],[-7.520391],[7.229785],[8.181252],[-8.283449],[4.166964],[-0.442308],[7.185602],[5.542296],[2.933915],[-7.438992],[-0.098406],[-5.462973],[-9.221298],[0.317207],[1.321892],[2.678140],[3.999319],[4.244361],[0.214720],[3.635119],[9.432112],[-1.699680],[1.946360],[-7.359620],[-9.993323],[-5.173198],[-4.900715],[1.824832],[-6.241654],[8.985253],[4.012276],[6.195967],[0.257469],[7.377615],[-5.802852],[9.744397],[-4.188785],[-4.028423],[-3.500339],[-7.434254],[-5.688825],[9.946742],[6.151299],[4.625395],[6.877649],[8.708554],[-1.398391],[8.348334],[-7.304194],[-1.899771],[4.183318],[-5.301062],[9.881653],[7.208007],[2.322069],[9.549651],[-7.983383],[-2.133666],[4.498889],[7.866663],[-3.708301],[6.993796],[4.873648],[-0.157042],[5.569256],[-7.815902],[9.447329],[-2.337675],[-8.947964],[-3.468070],[3.193084],[7.211945],[-4.413191],[3.927500],[6.101238],[6.745762],[-4.857219],[-2.861215],[2.291322],[8.003018],[-5.549041],[-4.642940],[-0.845916],[-5.306220],[-0.342350],[-1.371871],[-7.844842],[-4.941977],[5.062124],[6.294807],[-8.184542],[5.739694],[6.705412],[8.164911],[-3.314897],[-4.895789],[-7.358519],[-1.597364],[8.498944],[4.671152],[9.343513],[-2.724842],[9.094309],[8.845810],[-1.452894],[-4.052799],[9.182893],[5.522564],[6.977925],[3.088799],[1.286105],[-3.804175],[-8.993247],[-1.796202],[-2.746771],[-1.018304],[2.324248],[1.905786],[2.298178],[-9.166426],[1.247106],[-9.674263],[-7.284256],[-0.483869],[-7.121882],[9.932354],[0.247447],[-2.980754],[4.736978],[4.057129],[-0.953347],[3.357687],[-5.357495],[5.773383],[3.843886],[-7.492785],[-8.908517],[0.883502],[-0.398874],[-3.151383],[-1.578594],[6.824588],[-9.531523],[6.137384],[-1.207262],[0.937579],[-2.939800],[7.017616],[1.026970],[-6.526635],[-3.995455],[-3.120686],[-1.495361],[9.768216],[9.833580],[8.218557],[3.527535],[6.100542],[-9.895124],[5.418558],[3.282476],[-5.654493],[-6.059478],[4.278156],[-7.874167],[-5.908672],[-2.926852],[0.120784],[2.532564],[5.742251],[-2.246720],[-1.542706],[8.992080],[1.416720],[-5.883014],[2.091467],[4.843164],[-1.705836],[7.561780],[-0.392702],[7.458700],[-5.213441],[1.080306],[-5.882549],[-9.881242],[2.830100],[3.870918],[-4.137745],[5.100896],[-3.619484],[7.995179],[6.411583],[7.747527],[-1.681563],[9.333146],[-7.368433],[2.808538],[-8.659624],[-3.982214],[7.555698],[5.552506],[-9.593987],[-0.197094],[2.923430],[-5.399784],[-6.716392],[2.352267],[9.681150],[0.294438],[6.502041],[-7.936652],[2.782353],[-6.458720],[-4.883352],[3.904763],[6.584381],[-6.640646],[3.932976],[9.658308],[-0.310304],[-3.778134],[9.440210],[-3.411194],[1.776351],[-9.399684],[5.284511],[-3.137059],[-1.435833],[-6.348921],[-8.635480],[2.107946],[-2.295177],[4.553174],[-7.855586],[6.688229],[-1.943494],[3.524413],[0.941530],[-4.140332],[7.319759],[-0.873939],[2.479425],[-0.935914],[0.678298],[-9.398792],[-5.389119],[-6.378769],[7.678958],[-7.124987],[-4.532874],[-9.040905],[9.780566],[-0.851005],[-5.826662],[8.120914],[1.455029],[-7.547936],[7.089630],[-6.440616],[9.394018],[-3.451018],[-1.630658],[0.251510],[-5.424962],[-5.483854],[2.769479],[1.576007],[-6.672200],[5.515217],[8.748035],[9.076242],[-7.998086],[0.659750],[-2.309014],[4.512593],[5.650345],[4.787372],[-7.582294],[8.859536],[-2.020689],[4.985051],[0.587228],[-1.840654],[-8.702817],[-1.321875],[1.927106],[-7.644974],[1.466060],[5.109839],[7.833500],[3.822819],[-7.001411],[3.558234],[6.580767],[0.518186],[-9.211595],[3.833852],[4.554657],[7.557794],[-6.298417],[5.676571],[4.183642],[8.348866],[-0.111216],[-5.875981],[2.380294],[-5.363343],[-7.819824],[-6.784937],[-8.913148],[9.267375],[-6.627532],[-1.350188],[3.986244],[3.781872],[7.874854],[7.219478],[-3.302302],[7.861809],[7.987298],[1.073133],[-0.459472],[-7.669752],[9.858796],[-8.896750],[-2.518555],[-5.382978],[6.667853],[-6.573911],[-9.551449],[-9.329016],[9.995534],[4.959381],[-3.008172],[-5.591307],[-9.387768],[3.532084],[5.582180],[-0.018010],[-4.410543],[-0.031832],[-9.401743],[-9.469558],[-1.351993],[-5.230128],[-9.948618],[-8.619070],[-9.561070],[-8.190285],[9.113213],[-8.781198],[-6.762628],[-0.998412],[9.341651],[-1.748348],[2.178827],[-1.967684],[7.715063],[9.909774],[-2.432349],[-3.684198],[-7.467205],[-3.616336],[-5.632432],[-4.044434],[2.813135],[-4.064313],[-7.774017],[9.173315],[2.051767],[6.375662],[-8.556520],[-6.318424],[-7.472377],[0.288253],[-4.160595],[-6.970128],[5.894657],[2.003492],[5.688515],[8.773256],[8.144629],[-5.811692],[-6.554479],[1.279912],[7.050957],[-5.813641],[1.661947],[1.853124],[8.108026],[-9.621781],[-0.471879],[-7.481955],[5.558703],[-9.978796],[2.700748],[5.700930],[7.662763],[-8.225011],[8.878563],[9.732309],[1.862650],[-5.546582],[-6.498966],[-3.237062],[6.838504],[4.620317],[4.259504],[5.657969],[-0.362307],[4.398404],[8.909102],[-1.706987],[-0.524360],[-1.049992],[-1.039396],[-9.233529],[1.581379],[-9.551845],[-6.410223],[9.245498],[3.617349],[-2.417279],[3.881458],[9.338111],[2.673132],[6.262782],[1.633781],[0.400678],[5.462383],[8.110915],[4.632125],[5.890192],[8.545818],[-2.555903],[-1.046834],[7.483705],[0.261493],[6.620205],[1.448252],[-8.320526],[5.651671],[8.962410],[7.964821],[5.087203],[-7.773423],[-9.003246],[-9.495902],[-9.862172],[-2.712923],[-8.338598],[0.535033],[-7.397231],[7.836176],[2.033973],[7.782060],[5.836120],[1.294601],[1.330015],[4.032860],[6.579814],[-8.910751],[4.942605],[0.757528],[-8.535024],[-2.674882],[9.406343],[-3.577864],[-4.151710],[9.662263],[-0.933444],[9.738864],[3.456469],[-6.076870],[5.917918],[6.636642],[9.984870],[2.524599],[0.367885],[-3.631391],[-0.494305],[-7.546876],[-7.924548],[8.232677],[-1.915754],[-2.500596],[2.557295],[-0.412137],[3.704836],[-7.068370],[-1.457537],[2.144140],[1.723683],[-0.470913],[-5.543895],[-0.808644],[5.100204],[-4.639164],[2.863297],[8.158577],[-0.774046],[-9.510554],[2.988619],[-4.575487],[2.555529],[-4.845422],[4.062376],[1.497551],[-0.329034],[9.875668],[-7.355173],[7.570381],[-7.092478],[-9.177977],[6.894204],[0.167741],[5.457505],[-8.193065],[-5.759259],[0.341492],[5.519367],[7.236726],[-6.421692],[8.327367],[-2.392057],[4.615329],[-2.448461],[-3.476636],[-5.515755],[-8.556472],[-4.643925],[2.212677],[8.828144],[8.444506],[-4.498848],[4.596635],[-6.007365],[-6.997883],[3.282805],[3.231088],[-3.964904],[-8.648185],[7.677702],[2.305669],[8.094608],[3.865273],[5.795835],[-5.334422],[-1.294569],[-3.031149],[-5.545837],[-9.533183],[-2.077371],[3.069635],[-1.916548],[9.010627],[3.331285],[6.641909],[8.171600],[-8.760204],[-8.844382],[-2.302217],[-4.274673],[-8.659017],[-5.197545],[-8.967854],[-0.197235],[6.452419],[2.526367],[-2.641080],[4.413738],[7.159803],[-4.073873],[1.570396],[5.632200],[-9.820638],[-5.953407],[-7.506963],[7.477372],[5.550032],[4.379772],[3.758022],[0.914443],[7.443002],[3.970701],[-7.042945],[4.824295],[-5.192240],[1.322175],[1.998401],[2.926401],[-1.515939],[4.807660],[7.500195],[-5.767994],[-7.376310],[-7.380009],[2.987773],[1.590871],[-2.774963],[6.886480],[7.346397],[-6.754507],[-3.059905],[-8.498665],[1.040855],[6.861557],[8.207097],[-9.071509],[-3.425453],[1.213898],[-0.991261],[-1.588041],[1.398337],[-0.975188],[-1.056654],[0.081948],[7.852761],[2.683156],[2.403078],[6.600069],[-0.171480],[-5.666621],[0.144591],[-0.716319],[4.821071],[2.012687],[4.492400],[-2.012357],[0.500102],[-2.159005],[-9.652296],[6.508131],[-3.162755],[0.144264],[-4.779103],[-3.894397],[0.119028],[-1.805296],[7.725098],[-9.175860],[8.863042],[-9.240772],[2.426304],[6.711992],[-2.866761],[3.556219],[2.106901],[-8.922557],[7.396366],[4.493480],[-7.457489],[-1.587871],[2.988248],[8.720220],[7.265682],[2.491405],[6.274447],[3.037106],[-6.573295],[8.486823],[3.594280],[5.157993],[5.957337],[-0.284842],[1.166436],[2.754067],[0.980389],[-8.496342],[-6.502653],[8.804256],[5.150350],[-6.150662],[-4.329562],[-0.062474],[8.038207],[0.680804],[-8.738165],[3.595272],[-9.221265],[-0.109615],[-0.022148],[-0.174226],[-2.690398],[-6.372660],[-7.444647],[-3.111963],[-8.719504],[-3.223801],[4.089989],[-3.082828],[-5.803472],[4.139923],[-0.480770],[-3.488100],[-7.288769],[7.430398],[-5.181694],[-2.956173],[-5.135244],[-0.837536],[-9.471488],[-4.353212],[0.006042],[0.625034],[8.649985],[2.350351],[-5.405655],[-0.899099],[-2.833454],[9.399903],[-5.165315],[2.547661],[-2.130459],[3.115731],[-1.687922],[7.504163],[-4.834183],[3.805552],[-1.765838],[-9.044405],[-1.543812],[9.337903],[-2.273080],[-6.989718],[2.202807],[9.882051],[-2.523119],[-6.392895],[-3.312756],[4.112638],[5.371104],[6.263848],[-4.307429],[-5.171372],[-9.328443],[6.733055],[-8.385296],[0.717668],[-5.180025],[2.101711],[8.372049],[8.415764],[1.379245],[5.492774],[3.771834],[-7.063700],[2.654656],[3.172117],[5.863719],[1.110702],[-7.899193],[-9.825900],[9.845590],[-1.148552],[7.781845],[6.987533],[-0.147370],[-5.787372],[7.629154],[-9.667286],[-1.497682],[7.730770],[-3.798699],[-3.814057],[-5.930422],[9.420004],[-5.471577],[-9.097506],[8.451621],[7.499164],[-2.386311],[-6.624126],[-7.046472],[6.809015],[-7.237927],[-7.340653],[-8.767974],[-7.097645],[-6.661924],[-0.234564],[-8.539861],[-1.078886],[-1.593236],[6.822599],[3.945797],[-5.466051],[4.348630],[-7.763709],[-6.591136],[2.847803],[9.888581],[8.534703],[-4.959594],[8.697451],[-3.778488],[5.629650],[2.370483],[5.909620],[-0.526684],[-6.463254],[-8.578724],[-8.801084],[5.781608],[9.430273],[-1.832006],[-9.875894],[-2.255346],[4.450220],[5.212178],[-9.419398],[0.762503],[8.085870],[8.638466],[-2.581104],[4.617739],[0.598096],[7.247503],[2.168378],[-0.951738],[-0.875905],[-7.117276],[4.445009],[0.842592],[3.866873],[7.719779],[-3.387732],[3.027588],[6.047344],[6.794345],[5.341242],[-9.218628],[-0.648119],[-6.062042],[-3.365300],[-2.984754],[6.786279],[9.619817],[5.372381],[4.336699],[-5.550411],[-9.230438],[9.433337],[-5.269037],[-5.859123],[-2.979040],[-2.575266],[-2.674677],[8.720588],[-8.098387],[-6.410465],[-1.942598],[4.148889],[-6.224075],[-9.984515],[2.021899],[-6.125395],[-3.608978],[-6.340292],[-5.599277],[-4.536942],[-0.890537],[-5.549903],[6.930064],[4.844974],[8.763639],[-3.504449],[7.402797],[-7.806359],[-4.272282],[2.170376],[5.807097],[-1.982271],[-7.852270],[-6.064549],[1.797624],[0.550327],[4.847010],[5.576487],[6.575472],[-6.219077],[-3.354678],[9.031142],[5.428047],[1.159167],[-9.193481],[6.439972],[-6.749257],[5.177885],[-2.415574],[6.579605],[-7.520669],[8.467744],[-0.947892],[-2.594915],[5.950388],[2.091017],[7.701012],[6.852255],[-1.587973],[8.329965],[-7.396453],[-9.692003],[-0.232592],[8.686219],[1.493436],[-0.308139],[1.940165],[1.037994],[-8.754523],[-7.075357],[-3.167871],[9.079907],[-6.730196],[-2.262061],[2.773306],[4.703869],[7.207825],[-5.035469],[-9.128228],[-9.499153],[8.421040],[2.777031],[6.981339],[-4.340959],[2.326421],[5.169363],[-5.248036],[7.722946],[-3.107488],[7.768429],[4.678743],[1.531628],[-4.209583],[-7.222348],[4.910325],[-6.680127],[-6.055283],[2.546490],[-5.989211],[1.610193],[-6.787866],[-6.843270],[-5.871412],[5.856870],[7.137995],[-4.860707],[-6.651867],[5.750238],[-3.453849],[6.410982],[0.555229],[-3.678412],[4.185749],[7.304441],[9.866362],[1.376575],[2.354038],[5.374177],[-2.220397],[-4.376391],[7.909276],[-5.549117],[-2.162214],[4.359389],[-9.270990],[-3.637423],[-5.995891],[3.233201],[7.649804],[-1.626237],[7.854275],[-7.406659],[4.847817],[-8.061381],[5.695779],[1.968793],[-4.499531],[-9.985234],[-4.276208],[1.561400],[-7.185355],[-6.077804],[-4.317434],[-6.081732],[-6.420145],[-8.074108],[1.329766],[-8.413910],[-8.047500],[-1.059548],[-2.868566],[7.712272],[7.351828],[9.817186],[8.734960],[-0.515823],[4.522635],[-9.924841],[-9.987746],[5.407334],[6.018399],[8.899956],[-0.312254],[8.882418],[-2.363405],[-1.590233],[-5.450321],[3.823505],[4.521633],[9.560611],[6.267634],[-3.827963],[-6.701107],[-1.576463],[-0.168730],[4.730474],[-5.231343],[-6.344147],[-7.598455],[8.360572],[9.698837],[5.608000],[2.071582],[8.544958],[-1.844710],[1.229879],[6.879834],[-9.176603],[9.676806],[-0.607926],[-6.973467],[7.833514],[-1.769841],[4.964427],[-0.715738],[-8.081067],[9.559676],[0.928395],[-9.460582],[5.883956],[6.192050],[5.797144],[5.760408],[-6.281401],[-2.736311],[-6.116261],[-1.371594],[9.734189],[7.422340],[8.280455],[-2.331234],[6.429536],[-6.116368],[-0.823236],[2.833351],[0.693857],[1.479148],[7.340076],[-2.486457],[1.884753],[9.018956],[9.076336],[5.301670],[-0.906912],[3.400849],[-0.054776],[8.444423],[8.757687],[-6.237263],[7.785029],[-3.528726],[-7.877605],[4.972340],[-9.514832],[5.329421],[-8.350372],[7.615911],[-3.305059],[6.028969],[0.171051],[8.558202],[-0.166700],[1.861629],[-7.884148],[3.851075],[2.211980],[-6.023419],[7.770024],[-9.583915],[4.239735],[8.487793],[-6.037967],[8.079891],[-5.242099],[6.953393],[5.203648],[2.921000],[-8.621313],[-4.561505],[7.802181],[-6.826895],[5.329823],[-7.302604],[-4.035452],[-8.642417],[5.290933],[7.600404],[-1.053159],[-5.395126],[8.210388],[-5.766029],[-7.853517],[-9.215790],[-5.135253],[9.538758],[8.070036],[-0.499705],[-8.686739],[1.594673],[2.552023],[-0.234320],[-9.935053],[-7.712293],[-2.069958],[6.993830],[8.619057],[0.936118],[0.097091],[-1.134672],[-9.848533],[9.097020],[7.870428],[-6.978194],[2.847845],[-7.910096],[4.753541],[3.263534],[-7.441986],[-4.822814],[-5.705553],[2.153055],[1.726883],[-4.856215],[-4.503598],[-4.335083],[-7.412774],[-2.475602],[1.105072],[-3.649175],[7.938366],[-4.554477],[5.305117],[-7.906393],[9.126156],[8.108706],[-3.882026],[4.667195],[8.079466],[-3.202757],[-2.912768],[-5.967347],[6.756785],[-8.707879],[5.598839],[0.431109],[5.374355],[5.482626],[8.096548],[4.175485],[-3.924633],[-5.543623],[2.318626],[-3.221221],[8.478623],[-0.047331],[7.297252],[4.845318],[-5.090060],[9.611214],[-2.643972],[-0.649391],[-0.024361],[-2.927895],[7.033089],[2.458727],[-1.554401],[-3.951190],[5.404173],[-7.910715],[3.142526],[8.352352],[5.626463],[8.851498],[-6.443281],[3.874807],[3.039683],[8.988801],[1.633655],[4.998018],[0.565043],[-1.317167],[1.749961],[0.649710],[5.601697],[2.048200],[-1.287720],[8.216354],[9.836694],[7.002982],[-9.229881],[-4.884285],[-2.575209],[6.575148],[-0.394591],[-7.195986],[2.085859],[3.496810],[4.968483],[-6.851348],[7.655745],[-0.230052],[-5.569777],[2.983918],[-7.281516],[9.313415],[-3.665434],[7.824498],[7.954285],[-3.294186],[7.287388],[1.620270],[-1.640812],[3.239061],[5.308359],[-0.562769],[-6.026828],[7.488319],[9.136241],[-1.056259],[5.680519],[-1.432611],[-3.103952],[8.234391],[-6.517748],[1.968940],[-0.123386],[2.230295],[9.236540],[7.037942],[-0.836892],[9.199229],[-0.422573],[5.461019],[-8.287697],[8.648014],[4.350217],[3.932068],[3.016206],[-5.002829],[-3.403103],[-3.869798],[-1.272142],[2.947824],[-3.204580],[2.861705],[1.636625],[7.397904],[2.537291],[4.433226],[3.720281],[7.415243],[-7.912827],[-8.004166],[2.798978],[8.062790],[-8.153467],[6.655468],[9.863510],[-5.423463],[8.500589],[-5.619963],[8.618436],[-3.356467],[-5.477893],[-5.057262],[-8.017744],[6.213456],[-4.001996],[8.276381],[-3.694836],[9.107917],[-8.566988],[8.136307],[-2.424613],[5.174047],[9.199043],[-2.081364],[-8.313883],[0.401451],[-0.066202],[-9.920431],[-1.156853],[8.653944],[9.157073],[-3.557387],[0.934933],[-6.496827],[-2.889108],[-1.212778],[9.728856],[-8.783373],[3.524925],[6.466220],[4.778302],[0.158138],[-9.242717],[1.544919],[6.050291],[2.496237],[3.812886],[-4.039658],[-0.345186],[-0.024688],[-5.389434],[6.591335],[-1.727912],[6.634537],[-7.719862],[0.319297],[7.526630],[9.070849],[-5.314304],[-0.765037],[7.089624],[-4.719606],[-9.337750],[8.971867],[9.964919],[7.530853],[-4.416075],[-2.144585],[7.380763],[1.313525],[-3.283657],[5.695197],[8.821660],[-5.989480],[5.666847],[1.569796],[-8.367068],[3.227930],[-0.812016],[8.954480],[-3.171250],[4.373236],[9.394855],[-2.137736],[3.546523],[-7.940222],[-4.756073],[-1.327715],[-8.186239],[-6.023662],[0.772051],[-5.009964],[6.809299],[-6.509811],[8.202871],[-5.277723],[4.867760],[-4.607756],[8.000607],[3.417726],[-3.176564],[-4.473619],[7.946096],[-3.262651],[1.885458],[-3.733660],[-7.023938],[6.239758],[-9.707496],[1.621978],[5.872291],[-9.360498],[-2.212802],[-1.735756],[0.057402],[-1.549664],[7.793777],[-4.252441],[4.271660],[5.757834],[4.722844],[-5.786542],[-1.111119],[-6.155760],[8.351216],[-3.256014],[4.769701],[8.416660],[-3.054082],[0.017935],[5.491236],[1.020327],[-3.453683],[-2.958247],[9.029915],[7.937320],[1.686534],[-7.084840],[4.910305],[-8.642443],[2.783736],[2.941125],[5.085509],[-5.001717],[-6.327279],[2.919874],[4.583179],[0.525944],[3.615456],[-4.897098],[5.501978],[7.597008],[9.772822],[-3.057008],[-9.638030],[3.352314],[-2.199135],[-5.467422],[-5.635704],[7.340084],[-7.322263],[-7.576398],[8.647808],[-3.780584],[4.444907],[4.298292],[-5.644821],[7.475662],[9.336419],[-9.581398],[4.208871],[0.543239],[-8.491398],[8.869491],[-0.298283],[-4.242893],[-4.082077],[-3.030568],[-5.694873],[-4.409538],[9.347044],[-3.959037],[-1.597843],[7.849904],[9.485483],[-3.607737],[-2.885149],[-5.562623],[4.823070],[7.347542],[-2.970958],[0.288038],[-4.951112],[4.150253],[-6.547457],[3.900159],[9.833436],[5.204961],[7.816974],[9.635667],[-5.397017],[9.638015],[5.711256],[4.861948],[-5.503734],[-8.338696],[-9.186208],[0.064745],[-9.778334],[4.341014],[-1.168077],[-9.448375],[-9.892776],[4.423115],[3.835585],[9.393254],[-9.944705],[-3.399235],[-5.031482],[1.607493],[-2.109957],[-1.505496],[6.009462],[0.977801],[-9.642687],[-5.500261],[9.855508],[-0.797819],[-7.396141],[-6.229316],[3.686775],[3.602328],[-0.781414],[1.154360],[7.863466],[1.132946],[2.308925],[8.883537],[4.787463],[-4.332795],[4.528138],[-9.262521],[3.919653],[8.489436],[1.514265],[7.521327],[0.693400],[-8.208850],[-4.452110],[-0.528438],[-3.531443],[8.622470],[3.367296],[-5.686189],[-8.844452],[-2.552664],[5.861519],[-3.487884],[-4.006124],[-3.070578],[0.009148],[-5.532781],[-9.564345],[6.206452],[-2.698058],[9.556931],[4.899898],[-9.950438],[4.450958],[-5.248886],[7.956850],[8.876457],[1.342627],[-6.263336],[7.842637],[2.124346],[-1.397622],[1.028250],[3.184777],[-4.712846],[7.497063],[-2.566675],[-7.660064],[0.913553],[-1.321140],[6.044946],[7.018966],[-9.272408],[4.952422],[-9.560258],[-2.707341],[6.751931],[0.760800],[4.848506],[3.067104],[-2.219274],[2.726384],[-8.535912],[-8.744146],[2.426027],[7.402252],[-0.393583],[-8.380878],[3.969476],[8.501444],[-0.817631],[-5.510205],[2.941855],[3.433533],[-4.063997],[-2.529691],[2.794207],[2.693990],[2.138232],[9.939460],[-9.043696],[-9.103217],[8.304035],[-9.964894],[-5.925078],[-1.111301],[5.633813],[-6.098414],[-6.216689],[8.242935],[6.437596],[-6.761546],[-6.196859],[-7.922302],[2.080638],[-9.507357],[-6.741812],[-4.399706],[5.371343],[-6.786574],[4.966366],[7.514873],[5.159081],[0.664636],[5.639928],[-7.933254],[-7.200563],[3.131514],[8.853298],[-7.326855],[9.928698],[-7.111463],[9.922163],[-2.381623],[5.860836],[-8.613869],[0.323604],[6.838312],[-3.800991],[4.176211],[-3.199915],[-2.482921],[-8.593344],[5.864123],[1.576628],[-1.716930],[-7.945736],[-0.747604],[3.126035],[0.577715],[1.373489],[4.850455],[9.949423],[-7.025373],[7.152325],[4.787467],[4.058200],[-3.586152],[2.314730],[2.675606],[-1.053288],[7.000281],[2.743493],[-6.465530],[-9.698751],[3.777163],[-3.571265],[5.353630],[-8.434121],[8.556725],[0.316562],[2.763597],[-9.622436],[-8.296322],[1.471066],[-9.842072],[3.506431],[-7.077064],[5.946504],[3.055946],[-7.648976],[8.346010],[-5.981635],[-6.216214],[-6.416055],[-2.842770],[-8.543911],[3.225215],[-2.044046],[-3.087394],[8.133323],[8.858281],[2.742502],[9.558464],[-7.798171],[-2.268344],[-3.399861],[1.913438],[-6.415537],[9.735780],[2.860171],[-5.910424],[1.932109],[-8.542670],[4.691012],[8.396179],[0.927453],[3.708958],[-4.115287],[6.518284],[-2.267022],[-6.677446],[-6.770247],[9.734313],[1.399211],[1.268314],[-5.867007],[2.460509],[6.247289],[6.156918],[-5.044249],[-5.419635],[3.931844],[-7.804812],[-8.351500],[2.929242],[-4.471016],[9.679700],[9.878574],[3.695156],[2.598078],[-5.209457],[5.346612],[8.782997],[1.209742],[1.281783],[2.602204],[-5.419155],[-6.340895],[0.520398],[-6.993326],[7.587307],[-0.289791],[8.647148],[7.741444],[-6.081916],[-0.211670],[-1.752962],[-4.335820],[-1.976295],[8.056914],[-5.000914],[3.839668],[4.558402],[9.426926],[8.692971],[2.283231],[-3.250712],[5.240290],[-7.335262],[0.941023],[-2.158283],[2.172674],[3.410781],[-7.981428],[4.508469],[2.148438],[4.149195],[-4.680274],[-3.733676],[7.368691],[-7.933524],[-8.224015],[-1.316998],[-4.335397],[-6.861621],[5.172212],[0.582338],[-9.508180],[6.279588],[3.355699],[-7.401639],[-2.502748],[2.026480],[-3.121699],[-5.638314],[7.479498],[6.582560],[-6.046060],[-1.951232],[-9.479323],[-7.118108],[2.330380],[-5.144513],[-8.028139],[-0.416343],[-5.430400],[-5.582300],[-6.680079],[-4.731881],[-7.570779],[-3.510268],[6.084714],[8.360519],[5.862589],[-2.584963],[5.862871],[-4.499676],[9.994669],[-7.461100],[-3.270473],[6.008664],[7.187721],[9.117415],[0.661355],[-1.116525],[-1.243225],[-1.690921],[-6.791519],[9.267767],[3.391636],[1.745132],[-4.970191],[5.594573],[-4.624505],[8.306186],[-3.810287],[-7.493054],[3.074274],[-9.387334],[2.418647],[-2.236126]], dtype = "float64")#candidate|12261|(2288, 1)|const|float64
call_12260 = relay.TupleGetItem(func_343_call(relay.reshape(const_12261.astype('float64'), [16, 13, 11])), 0)
call_12262 = relay.TupleGetItem(func_346_call(relay.reshape(const_12261.astype('float64'), [16, 13, 11])), 0)
func_9505_call = mod.get_global_var('func_9505')
func_9507_call = mutated_mod.get_global_var('func_9507')
call_12264 = func_9505_call()
call_12265 = func_9505_call()
output = relay.Tuple([uop_12247,call_12260,const_12261,call_12264,])
output2 = relay.Tuple([uop_12249,call_12262,const_12261,call_12265,])
func_12270 = relay.Function([], output)
mod['func_12270'] = func_12270
mod = relay.transform.InferType()(mod)
output = func_12270()
func_12271 = relay.Function([], output)
mutated_mod['func_12271'] = func_12271
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7885_call = mod.get_global_var('func_7885')
func_7887_call = mutated_mod.get_global_var('func_7887')
call_12277 = func_7885_call()
call_12278 = func_7885_call()
func_11498_call = mod.get_global_var('func_11498')
func_11500_call = mutated_mod.get_global_var('func_11500')
call_12290 = func_11498_call()
call_12291 = func_11498_call()
output = relay.Tuple([call_12277,call_12290,])
output2 = relay.Tuple([call_12278,call_12291,])
func_12296 = relay.Function([], output)
mod['func_12296'] = func_12296
mod = relay.transform.InferType()(mod)
mutated_mod['func_12296'] = func_12296
mutated_mod = relay.transform.InferType()(mutated_mod)
func_12296_call = mutated_mod.get_global_var('func_12296')
call_12297 = func_12296_call()
output = call_12297
func_12298 = relay.Function([], output)
mutated_mod['func_12298'] = func_12298
mutated_mod = relay.transform.InferType()(mutated_mod)
func_10352_call = mod.get_global_var('func_10352')
func_10354_call = mutated_mod.get_global_var('func_10354')
call_12315 = relay.TupleGetItem(func_10352_call(), 0)
call_12316 = relay.TupleGetItem(func_10354_call(), 0)
func_10022_call = mod.get_global_var('func_10022')
func_10023_call = mutated_mod.get_global_var('func_10023')
call_12331 = relay.TupleGetItem(func_10022_call(), 0)
call_12332 = relay.TupleGetItem(func_10023_call(), 0)
output = relay.Tuple([call_12315,call_12331,])
output2 = relay.Tuple([call_12316,call_12332,])
func_12333 = relay.Function([], output)
mod['func_12333'] = func_12333
mod = relay.transform.InferType()(mod)
output = func_12333()
func_12334 = relay.Function([], output)
mutated_mod['func_12334'] = func_12334
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7298_call = mod.get_global_var('func_7298')
func_7299_call = mutated_mod.get_global_var('func_7299')
call_12369 = relay.TupleGetItem(func_7298_call(), 0)
call_12370 = relay.TupleGetItem(func_7299_call(), 0)
func_12216_call = mod.get_global_var('func_12216')
func_12219_call = mutated_mod.get_global_var('func_12219')
var_12384 = relay.var("var_12384", dtype = "float32", shape = (54,))#candidate|12384|(54,)|var|float32
call_12383 = func_12216_call(relay.reshape(var_12384.astype('float32'), [2, 9, 3]))
call_12385 = func_12216_call(relay.reshape(var_12384.astype('float32'), [2, 9, 3]))
output = relay.Tuple([call_12369,call_12383,var_12384,])
output2 = relay.Tuple([call_12370,call_12385,var_12384,])
func_12390 = relay.Function([var_12384,], output)
mod['func_12390'] = func_12390
mod = relay.transform.InferType()(mod)
var_12391 = relay.var("var_12391", dtype = "float32", shape = (54,))#candidate|12391|(54,)|var|float32
output = func_12390(var_12391)
func_12392 = relay.Function([var_12391], output)
mutated_mod['func_12392'] = func_12392
mutated_mod = relay.transform.InferType()(mutated_mod)
func_10250_call = mod.get_global_var('func_10250')
func_10251_call = mutated_mod.get_global_var('func_10251')
call_12612 = relay.TupleGetItem(func_10250_call(), 4)
call_12613 = relay.TupleGetItem(func_10251_call(), 4)
func_9270_call = mod.get_global_var('func_9270')
func_9271_call = mutated_mod.get_global_var('func_9271')
call_12617 = relay.TupleGetItem(func_9270_call(), 2)
call_12618 = relay.TupleGetItem(func_9271_call(), 2)
bop_12621 = relay.multiply(call_12617.astype('float64'), call_12612.astype('float64')) # shape=(1, 9, 3)
bop_12624 = relay.multiply(call_12618.astype('float64'), call_12613.astype('float64')) # shape=(1, 9, 3)
uop_12627 = relay.log2(call_12612.astype('float32')) # shape=(1, 9, 3)
uop_12629 = relay.log2(call_12613.astype('float32')) # shape=(1, 9, 3)
func_12216_call = mod.get_global_var('func_12216')
func_12219_call = mutated_mod.get_global_var('func_12219')
const_12634 = relay.const([[4.717334,9.719317,8.483988,-3.252610,-8.595116,-3.884211,0.704967,6.263961,-7.930555,-5.224096,-3.549936,-4.118223,0.492850,9.178050,0.443927,-4.874083,-5.575538,-9.032355,-1.215055,2.336902,-2.631763,6.610017,3.873078,-8.037196,-1.186012,-9.539419,7.245707,3.990748,0.398275,4.343638,-2.708744,1.411510,0.118768,-2.933903,-5.370271,-7.575956,4.083963,3.961355,-3.208543,0.563884,-4.552400,-6.586172,-2.814174,-3.235564,-8.521514,-2.941943,2.883767,2.640108,9.806575,-6.700083,-0.421455,8.214752,-7.185454,-0.804771]], dtype = "float32")#candidate|12634|(1, 54)|const|float32
call_12633 = func_12216_call(relay.reshape(const_12634.astype('float32'), [2, 9, 3]))
call_12635 = func_12216_call(relay.reshape(const_12634.astype('float32'), [2, 9, 3]))
output = relay.Tuple([bop_12621,uop_12627,call_12633,const_12634,])
output2 = relay.Tuple([bop_12624,uop_12629,call_12635,const_12634,])
func_12642 = relay.Function([], output)
mod['func_12642'] = func_12642
mod = relay.transform.InferType()(mod)
mutated_mod['func_12642'] = func_12642
mutated_mod = relay.transform.InferType()(mutated_mod)
func_12642_call = mutated_mod.get_global_var('func_12642')
call_12643 = func_12642_call()
output = call_12643
func_12644 = relay.Function([], output)
mutated_mod['func_12644'] = func_12644
mutated_mod = relay.transform.InferType()(mutated_mod)
func_12270_call = mod.get_global_var('func_12270')
func_12271_call = mutated_mod.get_global_var('func_12271')
call_12666 = relay.TupleGetItem(func_12270_call(), 2)
call_12667 = relay.TupleGetItem(func_12271_call(), 2)
uop_12668 = relay.sinh(call_12666.astype('float32')) # shape=(2288, 1)
uop_12670 = relay.sinh(call_12667.astype('float32')) # shape=(2288, 1)
bop_12686 = relay.greater(call_12666.astype('bool'), relay.reshape(uop_12668.astype('bool'), relay.shape_of(call_12666))) # shape=(2288, 1)
bop_12689 = relay.greater(call_12667.astype('bool'), relay.reshape(uop_12670.astype('bool'), relay.shape_of(call_12667))) # shape=(2288, 1)
output = relay.Tuple([bop_12686,])
output2 = relay.Tuple([bop_12689,])
F = relay.Function([], output)
mod['main'] = F
mod = relay.transform.InferType()(mod)
print('==========mod==========')
print(mod.astext(show_meta_data=False))
print('===================================')
F = relay.Function([], output2)
mutated_mod['main'] = F
mutated_mod = relay.transform.InferType()(mutated_mod)
print('==========mutated_mod==========')
print(mutated_mod.astext(show_meta_data=False))
print('===================================')
graph, lib, params = relay.build(mod, target='llvm')
module1 = graph_runtime.create(graph, lib, tvm.device('llvm',0))
intrp2 = relay.build_module.create_executor('graph', mod, tvm.device('llvm',0),'llvm')
intrp3 = relay.build_module.create_executor('debug', mod, tvm.device('llvm',0),'llvm')
intrp4 = relay.build_module.create_executor('vm', mod, tvm.device('llvm',0),'llvm')
graph, lib, params = relay.build(mod, target='cuda')
module5 = graph_runtime.create(graph, lib, tvm.device('cuda',0))
intrp6 = relay.build_module.create_executor('graph', mod, tvm.device('cuda',0),'cuda')
intrp7 = relay.build_module.create_executor('debug', mod, tvm.device('cuda',0),'cuda')
intrp8 = relay.build_module.create_executor('vm', mod, tvm.device('cuda',0),'cuda')
seq = Sequential([
	relay.transform.AlterOpLayout(),
	relay.transform.AnnotateSpans(),
	relay.transform.BatchingOps(),
	relay.transform.CanonicalizeCast(),
	relay.transform.CanonicalizeOps(),
	relay.transform.DeadCodeElimination(),
	relay.transform.DynamicToStatic(),
	relay.transform.FastMath(),
	relay.transform.FirstOrderGradient(),
	relay.transform.EliminateCommonSubexpr(),
	relay.transform.MergeCompilerRegions(),
	relay.transform.Inline(),
	relay.transform.LambdaLift(),
	relay.transform.LazyGradientInit(),
	relay.transform.PartialEvaluate(),
	relay.transform.Legalize(),
	relay.transform.FoldConstant(),
	relay.transform.ToANormalForm(),
	relay.transform.ToGraphNormalForm(),
	relay.transform.SimplifyInference(),
	relay.transform.ToBasicBlockNormalForm(),
	relay.transform.FuseOps(3),
	relay.transform.DefuseOps(),
	relay.transform.SimplifyExpr(),
])
mod = seq(mod)
print(mod.astext(show_meta_data=False))
graph, lib, params = relay.build(mod, target='llvm')
module9 = graph_runtime.create(graph, lib, tvm.device('llvm',0))
intrp10 = relay.build_module.create_executor('graph', mod, tvm.device('llvm',0),'llvm')
intrp11 = relay.build_module.create_executor('debug', mod, tvm.device('llvm',0),'llvm')
intrp12 = relay.build_module.create_executor('vm', mod, tvm.device('llvm',0),'llvm')
graph, lib, params = relay.build(mod, target='cuda')
module13 = graph_runtime.create(graph, lib, tvm.device('cuda',0))
intrp14 = relay.build_module.create_executor('graph', mod, tvm.device('cuda',0),'cuda')
intrp15 = relay.build_module.create_executor('debug', mod, tvm.device('cuda',0),'cuda')
intrp16 = relay.build_module.create_executor('vm', mod, tvm.device('cuda',0),'cuda')
graph, lib, params = relay.build(mutated_mod, target='llvm')
module17 = graph_runtime.create(graph, lib, tvm.device('llvm',0))
intrp18 = relay.build_module.create_executor('graph', mutated_mod, tvm.device('llvm',0),'llvm')
intrp19 = relay.build_module.create_executor('debug', mutated_mod, tvm.device('llvm',0),'llvm')
intrp20 = relay.build_module.create_executor('vm', mutated_mod, tvm.device('llvm',0),'llvm')
graph, lib, params = relay.build(mutated_mod, target='cuda')
module21 = graph_runtime.create(graph, lib, tvm.device('cuda',0))
intrp22 = relay.build_module.create_executor('graph', mutated_mod, tvm.device('cuda',0),'cuda')
intrp23 = relay.build_module.create_executor('debug', mutated_mod, tvm.device('cuda',0),'cuda')
intrp24 = relay.build_module.create_executor('vm', mutated_mod, tvm.device('cuda',0),'cuda')

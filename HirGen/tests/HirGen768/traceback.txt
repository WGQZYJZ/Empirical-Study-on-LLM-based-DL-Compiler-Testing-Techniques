==========mod==========
#[version = "0.0.5"]
def @func_40(%var_5: Tensor[(4, 12, 7), float32]) -> Tensor[(4, 12, 7), float32] {
  %0 = cast(%var_5, dtype="float32") /* ty=Tensor[(4, 12, 7), float32] */;
  tan(%0) /* ty=Tensor[(4, 12, 7), float32] */
}

def @func_7850() -> Tensor[(6, 12, 12), float32] {
  @func_6704() /* ty=Tensor[(6, 12, 12), float32] */
}

def @func_6904(%var_6898: Tensor[(169), float32]) -> (Tensor[(1, 9, 3), float32], Tensor[(364), float64], Tensor[(15, 1), float64], Tensor[(6, 12, 12), float64], Tensor[(672, 1), float64], int32, Tensor[(169), float32]) {
  %1 = @func_6601() /* ty=(Tensor[(1, 9, 3), float32],) */;
  %2 = cast(meta[relay.Constant][0] /* ty=Tensor[(15, 1), float64] */, dtype="float64") /* ty=Tensor[(15, 1), float64] */;
  %3 = reshape(%2, newshape=[15]) /* ty=Tensor[(15), float64] */;
  %4 = @func_6799(%3) /* ty=(Tensor[(1, 9, 3), float32], Tensor[(4, 7, 13), float64], Tensor[(364), float64], Tensor[(?, 15, ?), bool], float64, Tensor[(15), float64]) */;
  %5 = cast(meta[relay.Constant][1] /* ty=Tensor[(672, 1), float64] */, dtype="float64") /* ty=Tensor[(672, 1), float64] */;
  %6 = cast(3 /* ty=int32 */, dtype="int32") /* ty=int32 */;
  %7 = cast(%var_6898, dtype="float32") /* ty=Tensor[(169), float32] */;
  %8 = reshape(%5, newshape=[4, 168]) /* ty=Tensor[(4, 168), float64] */;
  %9 = reshape(%6, newshape=[]) /* ty=int32 */;
  %10 = reshape(%7, newshape=[169]) /* ty=Tensor[(169), float32] */;
  %11 = @func_6580(%8, %9, %10) /* ty=(Tensor[(6, 12, 12), float64], Tensor[(6, 12, 12), float64], int32, int32, Tensor[(4, 168), float32], Tensor[(13, 1, 13), float32], Tensor[(169), float32]) */;
  %12 = %1.0;
  %13 = %4.2;
  %14 = %11.1;
  (%12, %13, meta[relay.Constant][0] /* ty=Tensor[(15, 1), float64] */, %14, meta[relay.Constant][1] /* ty=Tensor[(672, 1), float64] */, 3 /* ty=int32 */, %var_6898)
}

def @func_10698(%var_10636: Tensor[(224), float32], %var_10667: Tensor[(1, 364), float64]) -> (Tensor[(6, 12, 12), float32], Tensor[(2, 16, 7), float32], Tensor[(224), float32], Tensor[(6, 12, 12), float32], Tensor[(117, 3), float32], Tensor[(1, 364), float64], Tensor[(1, 9, 3), float64], Tensor[(6, 12, 12), float32]) {
  %15 = @func_7298() /* ty=(Tensor[(6, 12, 12), float32],) */;
  %16 = cast(%var_10636, dtype="float32") /* ty=Tensor[(224), float32] */;
  %17 = reshape(%16, newshape=[2, 16, 7]) /* ty=Tensor[(2, 16, 7), float32] */;
  %18 = @func_8459(%17) /* ty=(Tensor[(2, 16, 7), float32],) */;
  %19 = cast(meta[relay.Constant][2] /* ty=Tensor[(117, 3), float32] */, dtype="float32") /* ty=Tensor[(117, 3), float32] */;
  %20 = cast(%var_10667, dtype="float64") /* ty=Tensor[(1, 364), float64] */;
  %21 = reshape(%19, newshape=[351]) /* ty=Tensor[(351), float32] */;
  %22 = reshape(%20, newshape=[364]) /* ty=Tensor[(364), float64] */;
  %23 = @func_9114(%21, %22) /* ty=(float64, Tensor[(351), float32], Tensor[(6, 12, 12), float32], Tensor[(364), float64], Tensor[(364), float64], Tensor[(27, ?), float64]) */;
  %24 = @func_9680() /* ty=(Tensor[(1, 40), uint8], Tensor[(1, 9, 3), float32], Tensor[(1, 9, 3), float32]) */;
  %25 = %24.1;
  %26 = cast(%25, dtype="float64") /* ty=Tensor[(1, 9, 3), float64] */;
  %27 = %15.0;
  %28 = %18.0;
  %29 = %23.2;
  %30 = asin(%26) /* ty=Tensor[(1, 9, 3), float64] */;
  %31 = @func_6270() /* ty=Tensor[(6, 12, 12), float32] */;
  (%27, %28, %var_10636, %29, meta[relay.Constant][2] /* ty=Tensor[(117, 3), float32] */, %var_10667, %30, %31)
}

def @func_9821(%var_9754: Tensor[(8, 9, 3), float32], %var_9773: int32, %var_9783: Tensor[(108), float32]) -> (Tensor[(8, 9, 3), float64], Tensor[(8, 9, 3), float64], Tensor[(6, 12, 12), float64], Tensor[(6, 11, 11), float32], Tensor[(726), int64], int32, Tensor[(6, 11, 11), float32], Tensor[(108), float32], Tensor[(15), float64], Tensor[(2288), float64], Tensor[(720), int16], Tensor[(6, 12, 12), float32]) {
  %32 = @func_6772() /* ty=Tensor[(1, 9, 3), float32] */;
  %33 = cast(%32, dtype="float64") /* ty=Tensor[(1, 9, 3), float64] */;
  %34 = cast(%var_9754, dtype="float64") /* ty=Tensor[(8, 9, 3), float64] */;
  %35 = cast(%var_9754, dtype="float64") /* ty=Tensor[(8, 9, 3), float64] */;
  %36 = @func_9554() /* ty=(Tensor[(6, 12, 12), float64],) */;
  %37 = cast(meta[relay.Constant][3] /* ty=Tensor[(726), int64] */, dtype="int64") /* ty=Tensor[(726), int64] */;
  %38 = cast(%var_9773, dtype="int32") /* ty=int32 */;
  %39 = reshape(%37, newshape=[6, 11, 11]) /* ty=Tensor[(6, 11, 11), int64] */;
  %40 = reshape(%38, newshape=[]) /* ty=int32 */;
  %41 = @func_2588(%39, %40) /* ty=(Tensor[(1, 5, 10), float64], Tensor[(6, 11, 11), float32]) */;
  %42 = cast(%var_9783, dtype="float32") /* ty=Tensor[(108), float32] */;
  %43 = cast(%var_9773, dtype="int32") /* ty=int32 */;
  %44 = cast(meta[relay.Constant][4] /* ty=Tensor[(15), float64] */, dtype="float64") /* ty=Tensor[(15), float64] */;
  %45 = reshape(%42, newshape=[9, 4, 3]) /* ty=Tensor[(9, 4, 3), float32] */;
  %46 = reshape(%43, newshape=[]) /* ty=int32 */;
  %47 = reshape(%44, newshape=[15]) /* ty=Tensor[(15), float64] */;
  %48 = @func_5233(%45, %46, %47) /* ty=(Tensor[(9, 4, 3), float32], Tensor[(4, 12, 7), float32], int32, Tensor[(6, 11, 11), float32], Tensor[(726), int64], Tensor[(?, 15, ?), bool], Tensor[(15), float64]) */;
  %49 = cast(meta[relay.Constant][5] /* ty=Tensor[(720), int16] */, dtype="int16") /* ty=Tensor[(720), int16] */;
  %50 = reshape(%49, newshape=[720]) /* ty=Tensor[(720), int16] */;
  %51 = @func_8882(%50) /* ty=(Tensor[(1, 9, 3), float32], Tensor[(2288), float64], Tensor[(720), int16], Tensor[(2288), float64]) */;
  %52 = maximum(%33, %34) /* ty=Tensor[(8, 9, 3), float64] */;
  %53 = log10(%35) /* ty=Tensor[(8, 9, 3), float64] */;
  %54 = %36.0;
  %55 = %41.1;
  %56 = %48.3;
  %57 = %51.1;
  %58 = @func_7850() /* ty=Tensor[(6, 12, 12), float32] */;
  (%52, %53, %54, %55, meta[relay.Constant][3] /* ty=Tensor[(726), int64] */, %var_9773, %56, %var_9783, meta[relay.Constant][4] /* ty=Tensor[(15), float64] */, %57, meta[relay.Constant][5] /* ty=Tensor[(720), int16] */, %58)
}

def @func_9002() -> (Tensor[(1, 9, 3), float32], Tensor[(5, 3, 15), float64]) {
  %59 = @func_8499() /* ty=(Tensor[(5, 3, 15), float64],) */;
  %60 = %59.0;
  %61 = cast(%60, dtype="float64") /* ty=Tensor[(5, 3, 15), float64] */;
  %62 = @func_7885() /* ty=Tensor[(1, 9, 3), float32] */;
  %63 = cos(%61) /* ty=Tensor[(5, 3, 15), float64] */;
  (%62, %63)
}

def @func_11405() -> Tensor[(1, 15), float64] {
  @func_8546() /* ty=Tensor[(1, 15), float64] */
}

def @func_10317(%var_10302: Tensor[(16, 3, 6), float64]) -> Tensor[(16, 3, 6), float64] {
  %64 = cast(%var_10302, dtype="float64") /* ty=Tensor[(16, 3, 6), float64] */;
  sinh(%64) /* ty=Tensor[(16, 3, 6), float64] */
}

def @func_7021(%var_7010: Tensor[(27, 13), float32]) -> (Tensor[(27, ?), int64], Tensor[(27, 13), int32]) {
  %65 = @func_6211() /* ty=(Tensor[(6, 12, 12), float32], Tensor[(27, 1), uint8], Tensor[(1, 9, 3), float32]) */;
  %66 = %65.1;
  %67 = @func_6211() /* ty=(Tensor[(6, 12, 12), float32], Tensor[(27, 1), uint8], Tensor[(1, 9, 3), float32]) */;
  %68 = %67.1;
  %69 = cast(%68, dtype="int64") /* ty=Tensor[(27, 1), int64] */;
  %70 = shape_of(%66, dtype="int32") /* ty=Tensor[(2), int32] */;
  %71 = cast(%66, dtype="int64") /* ty=Tensor[(27, 1), int64] */;
  %72 = dyn.reshape(%69, %70, newshape=[]) /* ty=Tensor[(?, ?), int64] */;
  %73 = cast(%68, dtype="float32") /* ty=Tensor[(27, 1), float32] */;
  %74 = rsqrt(%73) /* ty=Tensor[(27, 1), float32] */;
  %75 = cast(%74, dtype="int32") /* ty=Tensor[(27, 1), int32] */;
  %76 = cast(%var_7010, dtype="int32") /* ty=Tensor[(27, 13), int32] */;
  %77 = minimum(%71, %72) /* ty=Tensor[(27, ?), int64] */;
  %78 = subtract(%75, %76) /* ty=Tensor[(27, 13), int32] */;
  (%77, %78)
}

def @func_343(%var_323: Tensor[(16, 13, 11), float64]) -> (Tensor[(16, 13, 11), float64],) {
  %79 = cast(%var_323, dtype="float64") /* ty=Tensor[(16, 13, 11), float64] */;
  %80 = erf(%79) /* ty=Tensor[(16, 13, 11), float64] */;
  (%80,)
}

def @func_6676() -> (Tensor[(1, 9, 3), float32],) {
  %81 = @func_6419() /* ty=(Tensor[(1, 9, 3), float32],) */;
  %82 = %81.0;
  (%82,)
}

def @func_1444(%var_1399: int8, %var_1400: Tensor[(3, 1, 15), int8], %var_1442: Tensor[(720), int16]) -> (Tensor[(3, 1, 15), int8], Tensor[(2288), float64], Tensor[(16, 13, 11), float32], Tensor[(3, 1, 15), bool], Tensor[(16, 13, 11), float64], Tensor[(720), int16]) {
  %83 = cast(%var_1399, dtype="int8") /* ty=int8 */;
  %84 = cast(%var_1400, dtype="int8") /* ty=Tensor[(3, 1, 15), int8] */;
  %85 = cast(meta[relay.Constant][6] /* ty=Tensor[(2288), float64] */, dtype="float64") /* ty=Tensor[(2288), float64] */;
  %86 = reshape(%85, newshape=[16, 13, 11]) /* ty=Tensor[(16, 13, 11), float64] */;
  %87 = @func_343(%86) /* ty=(Tensor[(16, 13, 11), float64],) */;
  %88 = %87.0;
  %89 = cast(%88, dtype="float64") /* ty=Tensor[(16, 13, 11), float64] */;
  %90 = reshape(%89, newshape=[16, 13, 11]) /* ty=Tensor[(16, 13, 11), float64] */;
  %91 = @func_343(%90) /* ty=(Tensor[(16, 13, 11), float64],) */;
  %92 = %91.0;
  %93 = cast(%92, dtype="float32") /* ty=Tensor[(16, 13, 11), float32] */;
  %94 = shape_of(%88, dtype="int32") /* ty=Tensor[(3), int32] */;
  %95 = cast(%88, dtype="float32") /* ty=Tensor[(16, 13, 11), float32] */;
  %96 = dyn.reshape(%93, %94, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %97 = cast(%var_1400, dtype="bool") /* ty=Tensor[(3, 1, 15), bool] */;
  %98 = cast(%var_1399, dtype="bool") /* ty=bool */;
  %99 = cast(%var_1442, dtype="int16") /* ty=Tensor[(720), int16] */;
  %100 = cast(%92, dtype="float64") /* ty=Tensor[(16, 13, 11), float64] */;
  %101 = reshape(%99, newshape=[15, 12, 4]) /* ty=Tensor[(15, 12, 4), int16] */;
  %102 = reshape(%100, newshape=[2288]) /* ty=Tensor[(2288), float64] */;
  %103 = @func_529(%101, %102) /* ty=(Tensor[(15, 12, 4), bool], Tensor[(16, 13, 11), float64], Tensor[(2288), float64]) */;
  %104 = bitwise_or(%83, %84) /* ty=Tensor[(3, 1, 15), int8] */;
  %105 = floor_mod(%95, %96) /* ty=Tensor[(16, 13, 11), float32] */;
  %106 = greater(%97, %98) /* ty=Tensor[(3, 1, 15), bool] */;
  %107 = %103.1;
  (%104, meta[relay.Constant][6] /* ty=Tensor[(2288), float64] */, %105, %106, %107, %var_1442)
}

def @func_2472(%var_2464: Tensor[(1, 9, 3), uint8]) -> (Tensor[(?, 9, 3), uint8], Tensor[(1, 9, 3), float32]) {
  %108 = cast(%var_2464, dtype="uint8") /* ty=Tensor[(1, 9, 3), uint8] */;
  %109 = shape_of(meta[relay.Constant][7] /* ty=Tensor[(1, 9, 3), uint8] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %110 = cast(meta[relay.Constant][7] /* ty=Tensor[(1, 9, 3), uint8] */, dtype="uint8") /* ty=Tensor[(1, 9, 3), uint8] */;
  %111 = dyn.reshape(%108, %109, newshape=[]) /* ty=Tensor[(?, ?, ?), uint8] */;
  %112 = cast(meta[relay.Constant][7] /* ty=Tensor[(1, 9, 3), uint8] */, dtype="float32") /* ty=Tensor[(1, 9, 3), float32] */;
  %113 = bitwise_or(%110, %111) /* ty=Tensor[(?, 9, 3), uint8] */;
  %114 = acos(%112) /* ty=Tensor[(1, 9, 3), float32] */;
  (%113, %114)
}

def @func_12216(%var_12207: Tensor[(2, 9, 3), float32]) -> Tensor[(2, 9, 3), uint8] {
  %115 = @func_10849() /* ty=(Tensor[(1, 9, 3), float32],) */;
  %116 = %115.0;
  %117 = cast(%116, dtype="uint8") /* ty=Tensor[(1, 9, 3), uint8] */;
  %118 = cast(%var_12207, dtype="uint8") /* ty=Tensor[(2, 9, 3), uint8] */;
  logical_xor(%117, %118) /* ty=Tensor[(2, 9, 3), uint8] */
}

def @func_9554() -> (Tensor[(6, 12, 12), float64],) {
  %119 = @func_9367() /* ty=(Tensor[(6, 12, 12), float64],) */;
  %120 = %119.0;
  (%120,)
}

def @func_8713() -> (Tensor[(1, 9, 3), float32], int32, Tensor[(40), uint8], Tensor[(2, 1144), float64]) {
  %121 = @func_8635() /* ty=(Tensor[(1, 9, 3), float32],) */;
  %122 = cast(meta[relay.Constant][8] /* ty=Tensor[(40), uint8] */, dtype="uint8") /* ty=Tensor[(40), uint8] */;
  %123 = cast(meta[relay.Constant][8] /* ty=Tensor[(40), uint8] */, dtype="uint8") /* ty=Tensor[(40), uint8] */;
  %124 = reshape(%122, newshape=[1, 5, 8]) /* ty=Tensor[(1, 5, 8), uint8] */;
  %125 = reshape(%123, newshape=[1, 5, 8]) /* ty=Tensor[(1, 5, 8), uint8] */;
  %126 = @func_801(%124, %125) /* ty=(Tensor[(?, 5, 8), bool], Tensor[(1, 5, 10), float64], int32) */;
  %127 = cast(meta[relay.Constant][9] /* ty=Tensor[(2, 1144), float64] */, dtype="float64") /* ty=Tensor[(2, 1144), float64] */;
  %128 = reshape(%127, newshape=[16, 13, 11]) /* ty=Tensor[(16, 13, 11), float64] */;
  %129 = @func_343(%128) /* ty=(Tensor[(16, 13, 11), float64],) */;
  %130 = %129.0;
  %131 = cast(%130, dtype="float64") /* ty=Tensor[(16, 13, 11), float64] */;
  %132 = shape_of(meta[relay.Constant][9] /* ty=Tensor[(2, 1144), float64] */, dtype="int32") /* ty=Tensor[(2), int32] */;
  %133 = cast(meta[relay.Constant][9] /* ty=Tensor[(2, 1144), float64] */, dtype="float64") /* ty=Tensor[(2, 1144), float64] */;
  %134 = dyn.reshape(%131, %132, newshape=[]) /* ty=Tensor[(?, ?), float64] */;
  %135 = %121.0;
  %136 = %126.2;
  %137 = divide(%133, %134) /* ty=Tensor[(2, 1144), float64] */;
  (%135, %136, meta[relay.Constant][8] /* ty=Tensor[(40), uint8] */, %137)
}

def @func_10250() -> (Tensor[(6, 12, 12), float32], Tensor[(720), bool], Tensor[(12, 10, 6), float64], Tensor[(27, ?), uint16], Tensor[(1, 9, 3), float32]) {
  %138 = @func_9853() /* ty=(Tensor[(6, 12, 12), float32],) */;
  %139 = cast(meta[relay.Constant][10] /* ty=Tensor[(720), bool] */, dtype="bool") /* ty=Tensor[(720), bool] */;
  %140 = cast(meta[relay.Constant][10] /* ty=Tensor[(720), bool] */, dtype="bool") /* ty=Tensor[(720), bool] */;
  %141 = reshape(%139, newshape=[12, 10, 6]) /* ty=Tensor[(12, 10, 6), bool] */;
  %142 = reshape(%140, newshape=[12, 10, 6]) /* ty=Tensor[(12, 10, 6), bool] */;
  %143 = @func_5011(%141, %142) /* ty=(Tensor[(12, 10, 6), bool],) */;
  %144 = %143.0;
  %145 = cast(%144, dtype="float64") /* ty=Tensor[(12, 10, 6), float64] */;
  %146 = @func_6211() /* ty=(Tensor[(6, 12, 12), float32], Tensor[(27, 1), uint8], Tensor[(1, 9, 3), float32]) */;
  %147 = %146.1;
  %148 = @func_8635() /* ty=(Tensor[(1, 9, 3), float32],) */;
  %149 = %148.0;
  %150 = cast(%149, dtype="bool") /* ty=Tensor[(1, 9, 3), bool] */;
  %151 = shape_of(%147, dtype="int32") /* ty=Tensor[(2), int32] */;
  %152 = cast(%147, dtype="bool") /* ty=Tensor[(27, 1), bool] */;
  %153 = dyn.reshape(%150, %151, newshape=[]) /* ty=Tensor[(?, ?), bool] */;
  %154 = greater(%152, %153) /* ty=Tensor[(27, ?), bool] */;
  %155 = cast(%149, dtype="uint16") /* ty=Tensor[(1, 9, 3), uint16] */;
  %156 = shape_of(%154, dtype="int32") /* ty=Tensor[(2), int32] */;
  %157 = cast(%154, dtype="uint16") /* ty=Tensor[(27, ?), uint16] */;
  %158 = dyn.reshape(%155, %156, newshape=[]) /* ty=Tensor[(?, ?), uint16] */;
  %159 = cast(%147, dtype="uint8") /* ty=Tensor[(27, 1), uint8] */;
  %160 = reshape(%159, newshape=[1, 9, 3]) /* ty=Tensor[(1, 9, 3), uint8] */;
  %161 = @func_2472(%160) /* ty=(Tensor[(?, 9, 3), uint8], Tensor[(1, 9, 3), float32]) */;
  %162 = %138.0;
  %163 = atan(%145) /* ty=Tensor[(12, 10, 6), float64] */;
  %164 = logical_xor(%157, %158) /* ty=Tensor[(27, ?), uint16] */;
  %165 = %161.1;
  (%162, meta[relay.Constant][10] /* ty=Tensor[(720), bool] */, %163, %164, %165)
}

def @func_11624() -> (Tensor[(6, 12, 12), float32],) {
  %166 = @func_9853() /* ty=(Tensor[(6, 12, 12), float32],) */;
  %167 = %166.0;
  (%167,)
}

def @func_7885() -> Tensor[(1, 9, 3), float32] {
  %168 = @func_7694() /* ty=(Tensor[(1, 9, 3), float32],) */;
  %168.0
}

def @func_10985() -> Tensor[(6, 12, 12), float32] {
  @func_7765() /* ty=Tensor[(6, 12, 12), float32] */
}

def @func_9114(%var_9085: Tensor[(351), float32], %var_9101: Tensor[(364), float64]) -> (float64, Tensor[(351), float32], Tensor[(6, 12, 12), float32], Tensor[(364), float64], Tensor[(364), float64], Tensor[(27, ?), float64]) {
  %169 = @func_8246() /* ty=(Tensor[(?, 5, 8), bool], Tensor[(?, 15, ?), bool], float64, Tensor[(1, 15), float64]) */;
  %170 = @func_6336() /* ty=(Tensor[(6, 12, 12), float32],) */;
  %171 = cast(%var_9101, dtype="float64") /* ty=Tensor[(364), float64] */;
  %172 = reshape(%171, newshape=[364]) /* ty=Tensor[(364), float64] */;
  %173 = @func_7682(%172) /* ty=(Tensor[(6, 12, 12), float32], Tensor[(8, 12, 9), uint32], Tensor[(1, 9, 3), float32], Tensor[(1, 9, 3), float32], Tensor[(364), float64], Tensor[(4, 7, 13), float32], Tensor[(1, 9, 3), float32]) */;
  %174 = cast(%var_9085, dtype="float32") /* ty=Tensor[(351), float32] */;
  %175 = reshape(%174, newshape=[27, 13]) /* ty=Tensor[(27, 13), float32] */;
  %176 = @func_7021(%175) /* ty=(Tensor[(27, ?), int64], Tensor[(27, 13), int32]) */;
  %177 = %176.0;
  %178 = cast(%177, dtype="float64") /* ty=Tensor[(27, ?), float64] */;
  %179 = erf(%178) /* ty=Tensor[(27, ?), float64] */;
  %180 = cast(%179, dtype="float64") /* ty=Tensor[(27, ?), float64] */;
  %181 = %169.2;
  %182 = %170.0;
  %183 = %173.4;
  %184 = asin(%180) /* ty=Tensor[(27, ?), float64] */;
  (%181, %var_9085, %182, %183, %var_9101, %184)
}

def @func_5053(%var_5017: float64, %var_5018: Tensor[(16, 10, 12), float64]) -> (Tensor[(336), float32], Tensor[(16, 10, 12), float64], Tensor[(16, 10, 12), float64], Tensor[(7, 6, 10), uint64], Tensor[(420), uint64]) {
  %185 = cast(%var_5017, dtype="int32") /* ty=int32 */;
  %186 = reshape(%185, newshape=[]) /* ty=int32 */;
  %187 = @func_95(%186) /* ty=(Tensor[(15, 15, 10), int32], Tensor[(4, 12, 7), float32], Tensor[(336), float32]) */;
  %188 = cast(%var_5017, dtype="float64") /* ty=float64 */;
  %189 = cast(%var_5018, dtype="float64") /* ty=Tensor[(16, 10, 12), float64] */;
  %190 = power(%188, %189) /* ty=Tensor[(16, 10, 12), float64] */;
  %191 = cast(%190, dtype="float64") /* ty=Tensor[(16, 10, 12), float64] */;
  %192 = cast(%var_5017, dtype="float64") /* ty=float64 */;
  %193 = cast(%var_5018, dtype="float64") /* ty=Tensor[(16, 10, 12), float64] */;
  %194 = cast(meta[relay.Constant][11] /* ty=Tensor[(420), uint64] */, dtype="uint64") /* ty=Tensor[(420), uint64] */;
  %195 = reshape(%194, newshape=[7, 6, 10]) /* ty=Tensor[(7, 6, 10), uint64] */;
  %196 = %187.2;
  %197 = add(%191, %192) /* ty=Tensor[(16, 10, 12), float64] */;
  %198 = asin(%193) /* ty=Tensor[(16, 10, 12), float64] */;
  %199 = @func_1823(%195) /* ty=Tensor[(7, 6, 10), uint64] */;
  (%196, %197, %198, %199, meta[relay.Constant][11] /* ty=Tensor[(420), uint64] */)
}

def @func_9680() -> (Tensor[(1, 40), uint8], Tensor[(1, 9, 3), float32], Tensor[(1, 9, 3), float32]) {
  %200 = @func_7832() /* ty=(Tensor[(6, 12, 12), float32], Tensor[(7, 6, 10), uint64], Tensor[(420), uint64], Tensor[(?, 5, 8), bool], Tensor[(1, 40), uint8]) */;
  %201 = @func_6676() /* ty=(Tensor[(1, 9, 3), float32],) */;
  %202 = %200.4;
  %203 = @func_9505() /* ty=Tensor[(1, 9, 3), float32] */;
  %204 = %201.0;
  (%202, %203, %204)
}

def @func_3094(%var_2998: Tensor[(12, 12, 2), float64], %var_3019: Tensor[(8, 130), uint8], %var_3055: Tensor[(1144, 2), float64], %var_3058: Tensor[(27), uint8]) -> (Tensor[(12, 12, 2), float64], Tensor[(336), float32], int32, Tensor[(7, 6, 10), uint64], Tensor[(420), uint64], Tensor[(10, 13, 8), uint8], Tensor[(8, 130), uint8], Tensor[(16, 13, 11), float64], Tensor[(1144, 2), float64], Tensor[(?, 9, 3), uint8], Tensor[(27), uint8], Tensor[(4, 12, 7), float32], Tensor[(10, 13, 8), uint8]) {
  %205 = cast(%var_2998, dtype="float64") /* ty=Tensor[(12, 12, 2), float64] */;
  %206 = cast(8 /* ty=int32 */, dtype="int32") /* ty=int32 */;
  %207 = reshape(%206, newshape=[]) /* ty=int32 */;
  %208 = @func_95(%207) /* ty=(Tensor[(15, 15, 10), int32], Tensor[(4, 12, 7), float32], Tensor[(336), float32]) */;
  %209 = cast(meta[relay.Constant][12] /* ty=Tensor[(420), uint64] */, dtype="uint64") /* ty=Tensor[(420), uint64] */;
  %210 = reshape(%209, newshape=[7, 6, 10]) /* ty=Tensor[(7, 6, 10), uint64] */;
  %211 = cast(%var_3019, dtype="uint8") /* ty=Tensor[(8, 130), uint8] */;
  %212 = reshape(%211, newshape=[10, 13, 8]) /* ty=Tensor[(10, 13, 8), uint8] */;
  %213 = @func_2927(%212) /* ty=(Tensor[(10, 13, 8), uint8],) */;
  %214 = cast(%var_3055, dtype="float64") /* ty=Tensor[(1144, 2), float64] */;
  %215 = reshape(%214, newshape=[16, 13, 11]) /* ty=Tensor[(16, 13, 11), float64] */;
  %216 = @func_343(%215) /* ty=(Tensor[(16, 13, 11), float64],) */;
  %217 = cast(%var_3058, dtype="uint8") /* ty=Tensor[(27), uint8] */;
  %218 = reshape(%217, newshape=[1, 9, 3]) /* ty=Tensor[(1, 9, 3), uint8] */;
  %219 = @func_2472(%218) /* ty=(Tensor[(?, 9, 3), uint8], Tensor[(1, 9, 3), float32]) */;
  %220 = %208.2;
  %221 = cast(%220, dtype="float32") /* ty=Tensor[(336), float32] */;
  %222 = reshape(%221, newshape=[4, 12, 7]) /* ty=Tensor[(4, 12, 7), float32] */;
  %223 = cast(%var_3019, dtype="uint8") /* ty=Tensor[(8, 130), uint8] */;
  %224 = reshape(%223, newshape=[10, 13, 8]) /* ty=Tensor[(10, 13, 8), uint8] */;
  %225 = @func_2927(%224) /* ty=(Tensor[(10, 13, 8), uint8],) */;
  %226 = erf(%205) /* ty=Tensor[(12, 12, 2), float64] */;
  %227 = @func_1823(%210) /* ty=Tensor[(7, 6, 10), uint64] */;
  %228 = %213.0;
  %229 = %216.0;
  %230 = %219.0;
  %231 = @func_40(%222) /* ty=Tensor[(4, 12, 7), float32] */;
  %232 = %225.0;
  (%226, %220, 8 /* ty=int32 */, %227, meta[relay.Constant][12] /* ty=Tensor[(420), uint64] */, %228, %var_3019, %229, %var_3055, %230, %var_3058, %231, %232)
}

def @func_11801(%var_11791: int32) -> (Tensor[(6, 12, 12), float32], Tensor[(1, 5, 10), float64], Tensor[(11, 66), int64], int32, Tensor[(1, 9, 3), float32]) {
  %233 = @func_6135() /* ty=(Tensor[(6, 12, 12), float32], Tensor[(6, 12, 12), float32]) */;
  %234 = cast(meta[relay.Constant][13] /* ty=Tensor[(11, 66), int64] */, dtype="int64") /* ty=Tensor[(11, 66), int64] */;
  %235 = cast(%var_11791, dtype="int32") /* ty=int32 */;
  %236 = reshape(%234, newshape=[6, 11, 11]) /* ty=Tensor[(6, 11, 11), int64] */;
  %237 = reshape(%235, newshape=[]) /* ty=int32 */;
  %238 = @func_2588(%236, %237) /* ty=(Tensor[(1, 5, 10), float64], Tensor[(6, 11, 11), float32]) */;
  %239 = cast(%var_11791, dtype="float64") /* ty=float64 */;
  %240 = reshape(%239, newshape=[]) /* ty=float64 */;
  %241 = @func_11025(%240) /* ty=(Tensor[(1, 9, 3), float32], Tensor[(6, 12, 12), float32], float64) */;
  %242 = %233.0;
  %243 = %238.0;
  %244 = %241.0;
  (%242, %243, meta[relay.Constant][13] /* ty=Tensor[(11, 66), int64] */, %var_11791, %244)
}

def @func_12042() -> (Tensor[(1, 9, 3), float32],) {
  %245 = @func_6772() /* ty=Tensor[(1, 9, 3), float32] */;
  (%245,)
}

def @func_11308(%var_11209: float64, %var_11258: Tensor[(216), float32], %var_11259: Tensor[(108), float32]) -> (Tensor[(1, 9, 3), float32], Tensor[(?, 15, ?), bool], Tensor[(15), float64], Tensor[(14, 3, 9), bool], Tensor[(378), int32], Tensor[(15), float64], Tensor[(216), float32], Tensor[(108), float32], Tensor[(2, 1144), float64], Tensor[(6, 12, 12), uint64], Tensor[(1, 9, 3), float32]) {
  %246 = cast(%var_11209, dtype="float64") /* ty=float64 */;
  %247 = cast(meta[relay.Constant][14] /* ty=Tensor[(15), float64] */, dtype="float64") /* ty=Tensor[(15), float64] */;
  %248 = reshape(%246, newshape=[]) /* ty=float64 */;
  %249 = reshape(%247, newshape=[1, 15, 1]) /* ty=Tensor[(1, 15, 1), float64] */;
  %250 = @func_3804(%248, %249) /* ty=(Tensor[(?, 15, ?), bool],) */;
  %251 = @func_9236() /* ty=Tensor[(1, 9, 3), float32] */;
  %252 = cast(%251, dtype="int32") /* ty=Tensor[(1, 9, 3), int32] */;
  %253 = cast(meta[relay.Constant][15] /* ty=Tensor[(378), int32] */, dtype="int32") /* ty=Tensor[(378), int32] */;
  %254 = reshape(%252, newshape=[1, 3, 9]) /* ty=Tensor[(1, 3, 9), int32] */;
  %255 = reshape(%253, newshape=[14, 3, 9]) /* ty=Tensor[(14, 3, 9), int32] */;
  %256 = @func_9580(%254, %255) /* ty=(Tensor[(14, 3, 9), bool],) */;
  %257 = cast(%var_11258, dtype="float32") /* ty=Tensor[(216), float32] */;
  %258 = cast(%var_11209, dtype="int32") /* ty=int32 */;
  %259 = cast(%var_11259, dtype="float32") /* ty=Tensor[(108), float32] */;
  %260 = reshape(%257, newshape=[8, 9, 3]) /* ty=Tensor[(8, 9, 3), float32] */;
  %261 = reshape(%258, newshape=[]) /* ty=int32 */;
  %262 = reshape(%259, newshape=[108]) /* ty=Tensor[(108), float32] */;
  %263 = @func_9821(%260, %261, %262) /* ty=(Tensor[(8, 9, 3), float64], Tensor[(8, 9, 3), float64], Tensor[(6, 12, 12), float64], Tensor[(6, 11, 11), float32], Tensor[(726), int64], int32, Tensor[(6, 11, 11), float32], Tensor[(108), float32], Tensor[(15), float64], Tensor[(2288), float64], Tensor[(720), int16], Tensor[(6, 12, 12), float32]) */;
  %264 = @func_8713() /* ty=(Tensor[(1, 9, 3), float32], int32, Tensor[(40), uint8], Tensor[(2, 1144), float64]) */;
  %265 = @func_10250() /* ty=(Tensor[(6, 12, 12), float32], Tensor[(720), bool], Tensor[(12, 10, 6), float64], Tensor[(27, ?), uint16], Tensor[(1, 9, 3), float32]) */;
  %266 = %265.0;
  %267 = cast(%266, dtype="float32") /* ty=Tensor[(6, 12, 12), float32] */;
  %268 = cos(%267) /* ty=Tensor[(6, 12, 12), float32] */;
  %269 = cast(%268, dtype="uint64") /* ty=Tensor[(6, 12, 12), uint64] */;
  %270 = cast(%var_11209, dtype="uint64") /* ty=uint64 */;
  %271 = %250.0;
  %272 = %256.0;
  %273 = %263.8;
  %274 = %264.3;
  %275 = multiply(%269, %270) /* ty=Tensor[(6, 12, 12), uint64] */;
  %276 = @func_8476() /* ty=Tensor[(1, 9, 3), float32] */;
  (%251, %271, meta[relay.Constant][14] /* ty=Tensor[(15), float64] */, %272, meta[relay.Constant][15] /* ty=Tensor[(378), int32] */, %273, %var_11258, %var_11259, %274, %275, %276)
}

def @func_8197(%var_8180: Tensor[(3, 15, 4), uint8]) -> (Tensor[(3, 15, 4), bool],) {
  %277 = cast(%var_8180, dtype="bool") /* ty=Tensor[(3, 15, 4), bool] */;
  %278 = shape_of(meta[relay.Constant][16] /* ty=Tensor[(3, 15, 4), uint8] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %279 = cast(meta[relay.Constant][16] /* ty=Tensor[(3, 15, 4), uint8] */, dtype="bool") /* ty=Tensor[(3, 15, 4), bool] */;
  %280 = dyn.reshape(%277, %278, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %281 = not_equal(%279, %280) /* ty=Tensor[(3, 15, 4), bool] */;
  (%281,)
}

def @func_6406(%var_6394: Tensor[(117), float64], %var_6395: float64) -> (Tensor[(6, 12, 12), float32], Tensor[(?, 15, ?), bool], Tensor[(117), float64], float64, Tensor[(6, 12, 12), float32]) {
  %282 = @func_6336() /* ty=(Tensor[(6, 12, 12), float32],) */;
  %283 = cast(%var_6394, dtype="float64") /* ty=Tensor[(117), float64] */;
  %284 = cast(%var_6395, dtype="float64") /* ty=float64 */;
  %285 = reshape(%283, newshape=[9, 1, 13]) /* ty=Tensor[(9, 1, 13), float64] */;
  %286 = reshape(%284, newshape=[]) /* ty=float64 */;
  %287 = @func_4923(%285, %286) /* ty=(Tensor[(9, 1, 13), float64], Tensor[(?, 15, ?), bool], float64, Tensor[(15), float64]) */;
  %288 = @func_6336() /* ty=(Tensor[(6, 12, 12), float32],) */;
  %289 = %282.0;
  %290 = %287.1;
  %291 = %288.0;
  (%289, %290, %var_6394, %var_6395, %291)
}

def @func_9580(%var_9568: Tensor[(1, 3, 9), int32], %var_9569: Tensor[(14, 3, 9), int32]) -> (Tensor[(14, 3, 9), bool],) {
  %292 = cast(%var_9568, dtype="bool") /* ty=Tensor[(1, 3, 9), bool] */;
  %293 = cast(%var_9569, dtype="bool") /* ty=Tensor[(14, 3, 9), bool] */;
  %294 = greater_equal(%292, %293) /* ty=Tensor[(14, 3, 9), bool] */;
  (%294,)
}

def @func_7962(%var_7960: Tensor[(27), uint8]) -> (Tensor[(6, 12, 12), float32], Tensor[(1, 9, 3), float32], Tensor[(27), uint8]) {
  %295 = @func_6135() /* ty=(Tensor[(6, 12, 12), float32], Tensor[(6, 12, 12), float32]) */;
  %296 = cast(%var_7960, dtype="uint8") /* ty=Tensor[(27), uint8] */;
  %297 = reshape(%296, newshape=[1, 9, 3]) /* ty=Tensor[(1, 9, 3), uint8] */;
  %298 = @func_2472(%297) /* ty=(Tensor[(?, 9, 3), uint8], Tensor[(1, 9, 3), float32]) */;
  %299 = %295.1;
  %300 = %298.1;
  (%299, %300, %var_7960)
}

def @func_11966() -> (Tensor[(1, 9, 3), float32], Tensor[(6, 12, 12), float32], Tensor[(6, 12, 12), float32], Tensor[(6, 12, 12), float64], Tensor[(6, 12, 12), float32]) {
  %301 = @func_7446() /* ty=(Tensor[(1, 9, 3), float32],) */;
  %302 = @func_11624() /* ty=(Tensor[(6, 12, 12), float32],) */;
  %303 = @func_6336() /* ty=(Tensor[(6, 12, 12), float32],) */;
  %304 = @func_9554() /* ty=(Tensor[(6, 12, 12), float64],) */;
  %305 = @func_9853() /* ty=(Tensor[(6, 12, 12), float32],) */;
  %306 = %301.0;
  %307 = %302.0;
  %308 = %303.0;
  %309 = %304.0;
  %310 = %305.0;
  (%306, %307, %308, %309, %310)
}

def @func_7298() -> (Tensor[(6, 12, 12), float32],) {
  %311 = @func_6704() /* ty=Tensor[(6, 12, 12), float32] */;
  (%311,)
}

def @func_801(%var_773: Tensor[(1, 5, 8), uint8], %var_774: Tensor[(1, 5, 8), uint8]) -> (Tensor[(?, 5, 8), bool], Tensor[(1, 5, 10), float64], int32) {
  %312 = cast(%var_774, dtype="bool") /* ty=Tensor[(1, 5, 8), bool] */;
  %313 = shape_of(%var_773, dtype="int32") /* ty=Tensor[(3), int32] */;
  %314 = cast(%var_773, dtype="bool") /* ty=Tensor[(1, 5, 8), bool] */;
  %315 = dyn.reshape(%312, %313, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %316 = cast(-6 /* ty=int32 */, dtype="int32") /* ty=int32 */;
  %317 = reshape(%316, newshape=[]) /* ty=int32 */;
  %318 = @func_268(%317) /* ty=(Tensor[(1, 5, 10), float64], Tensor[(15, 15, 10), int32], int32) */;
  %319 = greater(%314, %315) /* ty=Tensor[(?, 5, 8), bool] */;
  %320 = %318.0;
  (%319, %320, -6 /* ty=int32 */)
}

def @func_9317() -> (Tensor[(1, 9, 3), float64], Tensor[(?, 15, ?), bool], float64, Tensor[(15), float64], Tensor[(?, 15, ?), bool]) {
  %321 = cast(-8.91065f64 /* ty=float64 */, dtype="float64") /* ty=float64 */;
  %322 = cast(meta[relay.Constant][17] /* ty=Tensor[(15), float64] */, dtype="float64") /* ty=Tensor[(15), float64] */;
  %323 = reshape(%321, newshape=[]) /* ty=float64 */;
  %324 = reshape(%322, newshape=[1, 15, 1]) /* ty=Tensor[(1, 15, 1), float64] */;
  %325 = @func_3804(%323, %324) /* ty=(Tensor[(?, 15, ?), bool],) */;
  %326 = cast(-8.91065f64 /* ty=float64 */, dtype="float64") /* ty=float64 */;
  %327 = cast(meta[relay.Constant][17] /* ty=Tensor[(15), float64] */, dtype="float64") /* ty=Tensor[(15), float64] */;
  %328 = reshape(%326, newshape=[]) /* ty=float64 */;
  %329 = reshape(%327, newshape=[1, 15, 1]) /* ty=Tensor[(1, 15, 1), float64] */;
  %330 = @func_3804(%328, %329) /* ty=(Tensor[(?, 15, ?), bool],) */;
  %331 = @func_8173() /* ty=Tensor[(1, 9, 3), float64] */;
  %332 = %325.0;
  %333 = %330.0;
  (%331, %332, -8.91065f64 /* ty=float64 */, meta[relay.Constant][17] /* ty=Tensor[(15), float64] */, %333)
}

def @func_9044(%var_9019: Tensor[(12, 13, 10), float64]) -> (Tensor[(12, 13, 10), int8], Tensor[(6, 12, 12), float32], Tensor[(420), uint64], Tensor[(1, 15), float64]) {
  %334 = @func_8246() /* ty=(Tensor[(?, 5, 8), bool], Tensor[(?, 15, ?), bool], float64, Tensor[(1, 15), float64]) */;
  %335 = %334.2;
  %336 = cast(%335, dtype="int8") /* ty=int8 */;
  %337 = cast(%var_9019, dtype="int8") /* ty=Tensor[(12, 13, 10), int8] */;
  %338 = cast(meta[relay.Constant][18] /* ty=Tensor[(420), uint64] */, dtype="uint64") /* ty=Tensor[(420), uint64] */;
  %339 = reshape(%338, newshape=[420]) /* ty=Tensor[(420), uint64] */;
  %340 = @func_7090(%339) /* ty=(Tensor[(6, 12, 12), float32], Tensor[(1, 9, 3), float32], Tensor[(7, 6, 10), uint64], Tensor[(420), uint64], Tensor[(6, 12, 12), float32], Tensor[(6, 12, 12), float32]) */;
  %341 = @func_8809() /* ty=(Tensor[(1, 9, 3), float32], Tensor[(1, 9, 3), float64], Tensor[(1, 15), float64], Tensor[(6, 12, 12), float32]) */;
  %342 = bitwise_xor(%336, %337) /* ty=Tensor[(12, 13, 10), int8] */;
  %343 = %340.0;
  %344 = %341.2;
  (%342, %343, meta[relay.Constant][18] /* ty=Tensor[(420), uint64] */, %344)
}

def @func_6211() -> (Tensor[(6, 12, 12), float32], Tensor[(27, 1), uint8], Tensor[(1, 9, 3), float32]) {
  %345 = @func_6135() /* ty=(Tensor[(6, 12, 12), float32], Tensor[(6, 12, 12), float32]) */;
  %346 = cast(meta[relay.Constant][19] /* ty=Tensor[(27, 1), uint8] */, dtype="uint8") /* ty=Tensor[(27, 1), uint8] */;
  %347 = reshape(%346, newshape=[1, 9, 3]) /* ty=Tensor[(1, 9, 3), uint8] */;
  %348 = @func_2472(%347) /* ty=(Tensor[(?, 9, 3), uint8], Tensor[(1, 9, 3), float32]) */;
  %349 = %348.1;
  %350 = cast(%349, dtype="float32") /* ty=Tensor[(1, 9, 3), float32] */;
  %351 = %345.1;
  %352 = sinh(%350) /* ty=Tensor[(1, 9, 3), float32] */;
  (%351, meta[relay.Constant][19] /* ty=Tensor[(27, 1), uint8] */, %352)
}

def @func_6135() -> (Tensor[(6, 12, 12), float32], Tensor[(6, 12, 12), float32]) {
  %353 = cast(meta[relay.Constant][20] /* ty=Tensor[(6, 12, 12), float64] */, dtype="float64") /* ty=Tensor[(6, 12, 12), float64] */;
  %354 = asin(%353) /* ty=Tensor[(6, 12, 12), float64] */;
  %355 = cast(%354, dtype="float32") /* ty=Tensor[(6, 12, 12), float32] */;
  %356 = cast(meta[relay.Constant][20] /* ty=Tensor[(6, 12, 12), float64] */, dtype="float32") /* ty=Tensor[(6, 12, 12), float32] */;
  %357 = acosh(%355) /* ty=Tensor[(6, 12, 12), float32] */;
  %358 = exp(%356) /* ty=Tensor[(6, 12, 12), float32] */;
  (%357, %358)
}

def @func_268(%var_263: int32) -> (Tensor[(1, 5, 10), float64], Tensor[(15, 15, 10), int32], int32) {
  %359 = cast(meta[relay.Constant][21] /* ty=Tensor[(1, 5, 10), float32] */, dtype="float32") /* ty=Tensor[(1, 5, 10), float32] */;
  %360 = atanh(%359) /* ty=Tensor[(1, 5, 10), float32] */;
  %361 = cast(%360, dtype="float64") /* ty=Tensor[(1, 5, 10), float64] */;
  %362 = cast(%var_263, dtype="int32") /* ty=int32 */;
  %363 = reshape(%362, newshape=[]) /* ty=int32 */;
  %364 = @func_95(%363) /* ty=(Tensor[(15, 15, 10), int32], Tensor[(4, 12, 7), float32], Tensor[(336), float32]) */;
  %365 = atan(%361) /* ty=Tensor[(1, 5, 10), float64] */;
  %366 = %364.0;
  (%365, %366, %var_263)
}

def @func_8818() -> (Tensor[(6, 12, 12), float32],) {
  %367 = @func_6704() /* ty=Tensor[(6, 12, 12), float32] */;
  (%367,)
}

def @func_12270() -> (Tensor[(5, 3, 15), float32], Tensor[(16, 13, 11), float64], Tensor[(2288, 1), float64], Tensor[(1, 9, 3), float32]) {
  %368 = @func_10022() /* ty=(Tensor[(5, 3, 15), float64],) */;
  %369 = %368.0;
  %370 = cast(%369, dtype="float32") /* ty=Tensor[(5, 3, 15), float32] */;
  %371 = cast(meta[relay.Constant][22] /* ty=Tensor[(2288, 1), float64] */, dtype="float64") /* ty=Tensor[(2288, 1), float64] */;
  %372 = reshape(%371, newshape=[16, 13, 11]) /* ty=Tensor[(16, 13, 11), float64] */;
  %373 = @func_343(%372) /* ty=(Tensor[(16, 13, 11), float64],) */;
  %374 = sigmoid(%370) /* ty=Tensor[(5, 3, 15), float32] */;
  %375 = %373.0;
  %376 = @func_9505() /* ty=Tensor[(1, 9, 3), float32] */;
  (%374, %375, meta[relay.Constant][22] /* ty=Tensor[(2288, 1), float64] */, %376)
}

def @func_6601() -> (Tensor[(1, 9, 3), float32],) {
  %377 = @func_6419() /* ty=(Tensor[(1, 9, 3), float32],) */;
  %378 = %377.0;
  (%378,)
}

def @func_7765() -> Tensor[(6, 12, 12), float32] {
  %379 = @func_6844() /* ty=(Tensor[(6, 12, 12), float32], Tensor[(6, 12, 12), float32]) */;
  %379.1
}

def @func_8546() -> Tensor[(1, 15), float64] {
  %380 = @func_8246() /* ty=(Tensor[(?, 5, 8), bool], Tensor[(?, 15, ?), bool], float64, Tensor[(1, 15), float64]) */;
  %380.3
}

def @func_10047(%var_10038: Tensor[(27), int32], %var_10039: Tensor[(378), int32]) -> (Tensor[(6, 12, 12), float64], Tensor[(14, 3, 9), bool], Tensor[(27), int32], Tensor[(378), int32], Tensor[(6, 12, 12), float32]) {
  %381 = @func_9554() /* ty=(Tensor[(6, 12, 12), float64],) */;
  %382 = cast(%var_10038, dtype="int32") /* ty=Tensor[(27), int32] */;
  %383 = cast(%var_10039, dtype="int32") /* ty=Tensor[(378), int32] */;
  %384 = reshape(%382, newshape=[1, 3, 9]) /* ty=Tensor[(1, 3, 9), int32] */;
  %385 = reshape(%383, newshape=[14, 3, 9]) /* ty=Tensor[(14, 3, 9), int32] */;
  %386 = @func_9580(%384, %385) /* ty=(Tensor[(14, 3, 9), bool],) */;
  %387 = @func_6336() /* ty=(Tensor[(6, 12, 12), float32],) */;
  %388 = %381.0;
  %389 = %386.0;
  %390 = %387.0;
  (%388, %389, %var_10038, %var_10039, %390)
}

def @func_8476() -> Tensor[(1, 9, 3), float32] {
  @func_7885() /* ty=Tensor[(1, 9, 3), float32] */
}

def @func_12037() -> (Tensor[(6, 12, 12), float32], int32, Tensor[(2, 20), uint8]) {
  %391 = cast(meta[relay.Constant][23] /* ty=Tensor[(2, 20), uint8] */, dtype="uint8") /* ty=Tensor[(2, 20), uint8] */;
  %392 = cast(meta[relay.Constant][23] /* ty=Tensor[(2, 20), uint8] */, dtype="uint8") /* ty=Tensor[(2, 20), uint8] */;
  %393 = reshape(%391, newshape=[1, 5, 8]) /* ty=Tensor[(1, 5, 8), uint8] */;
  %394 = reshape(%392, newshape=[1, 5, 8]) /* ty=Tensor[(1, 5, 8), uint8] */;
  %395 = @func_801(%393, %394) /* ty=(Tensor[(?, 5, 8), bool], Tensor[(1, 5, 10), float64], int32) */;
  %396 = @func_7211() /* ty=Tensor[(6, 12, 12), float32] */;
  %397 = %395.2;
  (%396, %397, meta[relay.Constant][23] /* ty=Tensor[(2, 20), uint8] */)
}

def @func_6704() -> Tensor[(6, 12, 12), float32] {
  %398 = @func_6135() /* ty=(Tensor[(6, 12, 12), float32], Tensor[(6, 12, 12), float32]) */;
  %398.0
}

def @func_9505() -> Tensor[(1, 9, 3), float32] {
  %399 = @func_8635() /* ty=(Tensor[(1, 9, 3), float32],) */;
  %399.0
}

def @func_11371(%var_11363: Tensor[(6, 15, 10), float64]) -> (Tensor[(6, 15, 10), float64], Tensor[(8, 12, 9), uint32], Tensor[(864), float64]) {
  %400 = cast(%var_11363, dtype="float64") /* ty=Tensor[(6, 15, 10), float64] */;
  %401 = cast(meta[relay.Constant][24] /* ty=Tensor[(864), float64] */, dtype="float64") /* ty=Tensor[(864), float64] */;
  %402 = reshape(%401, newshape=[8, 12, 9]) /* ty=Tensor[(8, 12, 9), float64] */;
  %403 = erf(%400) /* ty=Tensor[(6, 15, 10), float64] */;
  %404 = @func_3153(%402) /* ty=Tensor[(8, 12, 9), uint32] */;
  (%403, %404, meta[relay.Constant][24] /* ty=Tensor[(864), float64] */)
}

def @func_9270() -> (Tensor[(6, 12, 12), float32], Tensor[(1, 9, 3), float32], float64) {
  %405 = @func_7694() /* ty=(Tensor[(1, 9, 3), float32],) */;
  %406 = @func_8246() /* ty=(Tensor[(?, 5, 8), bool], Tensor[(?, 15, ?), bool], float64, Tensor[(1, 15), float64]) */;
  %407 = @func_7211() /* ty=Tensor[(6, 12, 12), float32] */;
  %408 = %405.0;
  %409 = %406.2;
  (%407, %408, %409)
}

def @main() -> (Tensor[(2288, ?), bool],) {
  %410 = @func_12270() /* ty=(Tensor[(5, 3, 15), float32], Tensor[(16, 13, 11), float64], Tensor[(2288, 1), float64], Tensor[(1, 9, 3), float32]) */;
  %411 = %410.2;
  %412 = cast(%411, dtype="float32") /* ty=Tensor[(2288, 1), float32] */;
  %413 = sinh(%412) /* ty=Tensor[(2288, 1), float32] */;
  %414 = cast(%413, dtype="bool") /* ty=Tensor[(2288, 1), bool] */;
  %415 = shape_of(%411, dtype="int32") /* ty=Tensor[(2), int32] */;
  %416 = cast(%411, dtype="bool") /* ty=Tensor[(2288, 1), bool] */;
  %417 = dyn.reshape(%414, %415, newshape=[]) /* ty=Tensor[(?, ?), bool] */;
  %418 = greater(%416, %417) /* ty=Tensor[(2288, ?), bool] */;
  (%418,)
}

def @func_529(%var_487: Tensor[(15, 12, 4), int16], %var_505: Tensor[(2288), float64]) -> (Tensor[(15, 12, 4), bool], Tensor[(16, 13, 11), float64], Tensor[(2288), float64]) {
  %419 = cast(meta[relay.Constant][25] /* ty=Tensor[(15, 12, 4), int16] */, dtype="bool") /* ty=Tensor[(15, 12, 4), bool] */;
  %420 = shape_of(%var_487, dtype="int32") /* ty=Tensor[(3), int32] */;
  %421 = cast(%var_487, dtype="bool") /* ty=Tensor[(15, 12, 4), bool] */;
  %422 = dyn.reshape(%419, %420, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %423 = cast(%var_505, dtype="float64") /* ty=Tensor[(2288), float64] */;
  %424 = reshape(%423, newshape=[16, 13, 11]) /* ty=Tensor[(16, 13, 11), float64] */;
  %425 = @func_343(%424) /* ty=(Tensor[(16, 13, 11), float64],) */;
  %426 = greater(%421, %422) /* ty=Tensor[(15, 12, 4), bool] */;
  %427 = %425.0;
  (%426, %427, %var_505)
}

def @func_10022() -> (Tensor[(5, 3, 15), float64],) {
  %428 = @func_8499() /* ty=(Tensor[(5, 3, 15), float64],) */;
  %429 = %428.0;
  (%429,)
}

def @func_6580(%var_6519: Tensor[(4, 168), float64], %var_6520: int32, %var_6550: Tensor[(169), float32]) -> (Tensor[(6, 12, 12), float64], Tensor[(6, 12, 12), float64], int32, int32, Tensor[(4, 168), float32], Tensor[(13, 1, 13), float32], Tensor[(169), float32]) {
  %430 = @func_6336() /* ty=(Tensor[(6, 12, 12), float32],) */;
  %431 = %430.0;
  %432 = cast(meta[relay.Constant][26] /* ty=Tensor[(6, 12, 12), float32] */, dtype="bool") /* ty=Tensor[(6, 12, 12), bool] */;
  %433 = shape_of(%431, dtype="int32") /* ty=Tensor[(3), int32] */;
  %434 = cast(%431, dtype="bool") /* ty=Tensor[(6, 12, 12), bool] */;
  %435 = dyn.reshape(%432, %433, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %436 = greater_equal(%434, %435) /* ty=Tensor[(6, 12, 12), bool] */;
  %437 = cast(%436, dtype="float64") /* ty=Tensor[(6, 12, 12), float64] */;
  %438 = cast(%431, dtype="float64") /* ty=Tensor[(6, 12, 12), float64] */;
  %439 = cast(%var_6519, dtype="float64") /* ty=Tensor[(4, 168), float64] */;
  %440 = cast(%var_6520, dtype="int32") /* ty=int32 */;
  %441 = reshape(%439, newshape=[14, 16, 3]) /* ty=Tensor[(14, 16, 3), float64] */;
  %442 = reshape(%440, newshape=[]) /* ty=int32 */;
  %443 = @func_2170(%441, %442) /* ty=(Tensor[(14, 16, 3), float64], Tensor[(4, 12, 7), float32], int32) */;
  %444 = cast(%var_6519, dtype="float32") /* ty=Tensor[(4, 168), float32] */;
  %445 = cast(%var_6550, dtype="float32") /* ty=Tensor[(169), float32] */;
  %446 = reshape(%445, newshape=[13, 1, 13]) /* ty=Tensor[(13, 1, 13), float32] */;
  %447 = log2(%437) /* ty=Tensor[(6, 12, 12), float64] */;
  %448 = cosh(%438) /* ty=Tensor[(6, 12, 12), float64] */;
  %449 = %443.2;
  %450 = acos(%444) /* ty=Tensor[(4, 168), float32] */;
  %451 = @func_5497(%446) /* ty=Tensor[(13, 1, 13), float32] */;
  (%447, %448, %449, %var_6520, %450, %451, %var_6550)
}

def @func_5497(%var_5486: Tensor[(13, 1, 13), float32]) -> Tensor[(13, 1, 13), float32] {
  %452 = cast(%var_5486, dtype="float32") /* ty=Tensor[(13, 1, 13), float32] */;
  cos(%452) /* ty=Tensor[(13, 1, 13), float32] */
}

def @func_12129() -> (Tensor[(1, 9, 3), float32], Tensor[(6, 12, 12), float32]) {
  %453 = @func_7694() /* ty=(Tensor[(1, 9, 3), float32],) */;
  %454 = %453.0;
  %455 = @func_6270() /* ty=Tensor[(6, 12, 12), float32] */;
  (%454, %455)
}

def @func_9481(%var_9470: Tensor[(1, 9, 3), float64]) -> Tensor[(?, 9, 3), bool] {
  %456 = @func_8809() /* ty=(Tensor[(1, 9, 3), float32], Tensor[(1, 9, 3), float64], Tensor[(1, 15), float64], Tensor[(6, 12, 12), float32]) */;
  %457 = %456.1;
  %458 = cast(%var_9470, dtype="bool") /* ty=Tensor[(1, 9, 3), bool] */;
  %459 = shape_of(%457, dtype="int32") /* ty=Tensor[(3), int32] */;
  %460 = cast(%457, dtype="bool") /* ty=Tensor[(1, 9, 3), bool] */;
  %461 = dyn.reshape(%458, %459, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  less(%460, %461) /* ty=Tensor[(?, 9, 3), bool] */
}

def @func_10578(%var_10544: Tensor[(378), int32]) -> (Tensor[(6, 12, 12), float32], Tensor[(1, 9, 3), float64], Tensor[(14, 3, 9), bool], Tensor[(378), float64], Tensor[(6, 12, 12), float32]) {
  %462 = @func_10081() /* ty=(Tensor[(1, 9, 3), float64],) */;
  %463 = %462.0;
  %464 = cast(%463, dtype="int32") /* ty=Tensor[(1, 9, 3), int32] */;
  %465 = cast(%var_10544, dtype="int32") /* ty=Tensor[(378), int32] */;
  %466 = reshape(%464, newshape=[1, 3, 9]) /* ty=Tensor[(1, 3, 9), int32] */;
  %467 = reshape(%465, newshape=[14, 3, 9]) /* ty=Tensor[(14, 3, 9), int32] */;
  %468 = @func_9580(%466, %467) /* ty=(Tensor[(14, 3, 9), bool],) */;
  %469 = cast(%var_10544, dtype="float64") /* ty=Tensor[(378), float64] */;
  %470 = @func_9270() /* ty=(Tensor[(6, 12, 12), float32], Tensor[(1, 9, 3), float32], float64) */;
  %471 = @func_7850() /* ty=Tensor[(6, 12, 12), float32] */;
  %472 = %468.0;
  %473 = sqrt(%469) /* ty=Tensor[(378), float64] */;
  %474 = %470.0;
  (%471, %463, %472, %473, %474)
}

def @func_8941(%var_8910: Tensor[(13, 40), uint8]) -> (Tensor[(13, 40), uint8], Tensor[(1, 9, 3), float32], Tensor[(13, 40), int16]) {
  %475 = @func_7832() /* ty=(Tensor[(6, 12, 12), float32], Tensor[(7, 6, 10), uint64], Tensor[(420), uint64], Tensor[(?, 5, 8), bool], Tensor[(1, 40), uint8]) */;
  %476 = %475.4;
  %477 = cast(%476, dtype="uint8") /* ty=Tensor[(1, 40), uint8] */;
  %478 = cast(%var_8910, dtype="uint8") /* ty=Tensor[(13, 40), uint8] */;
  %479 = @func_7694() /* ty=(Tensor[(1, 9, 3), float32],) */;
  %480 = cast(%476, dtype="bool") /* ty=Tensor[(1, 40), bool] */;
  %481 = cast(%var_8910, dtype="bool") /* ty=Tensor[(13, 40), bool] */;
  %482 = equal(%480, %481) /* ty=Tensor[(13, 40), bool] */;
  %483 = cast(%var_8910, dtype="int16") /* ty=Tensor[(13, 40), int16] */;
  %484 = shape_of(%482, dtype="int32") /* ty=Tensor[(2), int32] */;
  %485 = cast(%482, dtype="int16") /* ty=Tensor[(13, 40), int16] */;
  %486 = dyn.reshape(%483, %484, newshape=[]) /* ty=Tensor[(?, ?), int16] */;
  %487 = bitwise_or(%477, %478) /* ty=Tensor[(13, 40), uint8] */;
  %488 = %479.0;
  %489 = multiply(%485, %486) /* ty=Tensor[(13, 40), int16] */;
  (%487, %488, %489)
}

def @func_7211() -> Tensor[(6, 12, 12), float32] {
  %490 = @func_6844() /* ty=(Tensor[(6, 12, 12), float32], Tensor[(6, 12, 12), float32]) */;
  %491 = %490.1;
  %492 = cast(%491, dtype="float32") /* ty=Tensor[(6, 12, 12), float32] */;
  %493 = sigmoid(%492) /* ty=Tensor[(6, 12, 12), float32] */;
  %494 = cast(%491, dtype="float32") /* ty=Tensor[(6, 12, 12), float32] */;
  %495 = shape_of(%493, dtype="int32") /* ty=Tensor[(3), int32] */;
  %496 = cast(%493, dtype="float32") /* ty=Tensor[(6, 12, 12), float32] */;
  %497 = dyn.reshape(%494, %495, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  floor_divide(%496, %497) /* ty=Tensor[(6, 12, 12), float32] */
}

def @func_9986(%var_9918: Tensor[(3, 9), int32]) -> (Tensor[(5, 3, 15), float64], Tensor[(3, 9), int32], Tensor[(378), int32], Tensor[(6, 12, 12), float32], Tensor[(14, 3, 9), float32], Tensor[(14, 3, 9), float64]) {
  %498 = @func_8499() /* ty=(Tensor[(5, 3, 15), float64],) */;
  %499 = cast(%var_9918, dtype="int32") /* ty=Tensor[(3, 9), int32] */;
  %500 = cast(meta[relay.Constant][27] /* ty=Tensor[(378), int32] */, dtype="int32") /* ty=Tensor[(378), int32] */;
  %501 = reshape(%499, newshape=[1, 3, 9]) /* ty=Tensor[(1, 3, 9), int32] */;
  %502 = reshape(%500, newshape=[14, 3, 9]) /* ty=Tensor[(14, 3, 9), int32] */;
  %503 = @func_9580(%501, %502) /* ty=(Tensor[(14, 3, 9), bool],) */;
  %504 = %503.0;
  %505 = cast(%504, dtype="float32") /* ty=Tensor[(14, 3, 9), float32] */;
  %506 = sqrt(%505) /* ty=Tensor[(14, 3, 9), float32] */;
  %507 = cast(%506, dtype="float32") /* ty=Tensor[(14, 3, 9), float32] */;
  %508 = cast(%506, dtype="float32") /* ty=Tensor[(14, 3, 9), float32] */;
  %509 = log(%508) /* ty=Tensor[(14, 3, 9), float32] */;
  %510 = cast(%509, dtype="float64") /* ty=Tensor[(14, 3, 9), float64] */;
  %511 = %498.0;
  %512 = @func_6270() /* ty=Tensor[(6, 12, 12), float32] */;
  %513 = tan(%507) /* ty=Tensor[(14, 3, 9), float32] */;
  %514 = asinh(%510) /* ty=Tensor[(14, 3, 9), float64] */;
  (%511, %var_9918, meta[relay.Constant][27] /* ty=Tensor[(378), int32] */, %512, %513, %514)
}

def @func_9853() -> (Tensor[(6, 12, 12), float32],) {
  %515 = @func_7850() /* ty=Tensor[(6, 12, 12), float32] */;
  (%515,)
}

def @func_6799(%var_6795: Tensor[(15), float64]) -> (Tensor[(1, 9, 3), float32], Tensor[(4, 7, 13), float64], Tensor[(364), float64], Tensor[(?, 15, ?), bool], float64, Tensor[(15), float64]) {
  %516 = cast(meta[relay.Constant][28] /* ty=Tensor[(364), float64] */, dtype="float64") /* ty=Tensor[(364), float64] */;
  %517 = reshape(%516, newshape=[4, 7, 13]) /* ty=Tensor[(4, 7, 13), float64] */;
  %518 = cast(-6.46147f64 /* ty=float64 */, dtype="float64") /* ty=float64 */;
  %519 = cast(%var_6795, dtype="float64") /* ty=Tensor[(15), float64] */;
  %520 = reshape(%518, newshape=[]) /* ty=float64 */;
  %521 = reshape(%519, newshape=[1, 15, 1]) /* ty=Tensor[(1, 15, 1), float64] */;
  %522 = @func_3804(%520, %521) /* ty=(Tensor[(?, 15, ?), bool],) */;
  %523 = @func_6772() /* ty=Tensor[(1, 9, 3), float32] */;
  %524 = @func_3362(%517) /* ty=Tensor[(4, 7, 13), float64] */;
  %525 = %522.0;
  (%523, %524, meta[relay.Constant][28] /* ty=Tensor[(364), float64] */, %525, -6.46147f64 /* ty=float64 */, %var_6795)
}

def @func_6844() -> (Tensor[(6, 12, 12), float32], Tensor[(6, 12, 12), float32]) {
  %526 = @func_6270() /* ty=Tensor[(6, 12, 12), float32] */;
  %527 = cast(meta[relay.Constant][29] /* ty=Tensor[(6, 12, 12), float32] */, dtype="int16") /* ty=Tensor[(6, 12, 12), int16] */;
  %528 = shape_of(%526, dtype="int32") /* ty=Tensor[(3), int32] */;
  %529 = cast(%526, dtype="int16") /* ty=Tensor[(6, 12, 12), int16] */;
  %530 = dyn.reshape(%527, %528, newshape=[]) /* ty=Tensor[(?, ?, ?), int16] */;
  %531 = bitwise_or(%529, %530) /* ty=Tensor[(6, 12, 12), int16] */;
  %532 = cast(%531, dtype="float32") /* ty=Tensor[(6, 12, 12), float32] */;
  %533 = shape_of(meta[relay.Constant][29] /* ty=Tensor[(6, 12, 12), float32] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %534 = cast(meta[relay.Constant][29] /* ty=Tensor[(6, 12, 12), float32] */, dtype="float32") /* ty=Tensor[(6, 12, 12), float32] */;
  %535 = dyn.reshape(%532, %533, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %536 = @func_6704() /* ty=Tensor[(6, 12, 12), float32] */;
  %537 = minimum(%534, %535) /* ty=Tensor[(6, 12, 12), float32] */;
  (%536, %537)
}

def @func_10081() -> (Tensor[(1, 9, 3), float64],) {
  %538 = @func_8173() /* ty=Tensor[(1, 9, 3), float64] */;
  (%538,)
}

def @func_11090() -> (Tensor[(1, 9, 3), float32], Tensor[(1, 9, 3), float32], Tensor[(1, 9, 3), float32]) {
  %539 = @func_8856() /* ty=(Tensor[(40), uint8], Tensor[(1, 9, 3), float32]) */;
  %540 = @func_9505() /* ty=Tensor[(1, 9, 3), float32] */;
  %541 = %539.1;
  %542 = @func_7885() /* ty=Tensor[(1, 9, 3), float32] */;
  (%540, %541, %542)
}

def @func_11838() -> (int32, float64) {
  %543 = @func_8713() /* ty=(Tensor[(1, 9, 3), float32], int32, Tensor[(40), uint8], Tensor[(2, 1144), float64]) */;
  %544 = %543.1;
  %545 = cast(%544, dtype="float64") /* ty=float64 */;
  %546 = reshape(%545, newshape=[]) /* ty=float64 */;
  %547 = @func_7911(%546) /* ty=(Tensor[(6, 12, 12), float32], Tensor[(6, 12, 12), float32], Tensor[(117, 1), float64], float64) */;
  %548 = %547.3;
  (%544, %548)
}

def @func_6772() -> Tensor[(1, 9, 3), float32] {
  %549 = @func_6676() /* ty=(Tensor[(1, 9, 3), float32],) */;
  %549.0
}

def @func_2588(%var_2571: Tensor[(6, 11, 11), int64], %var_2578: int32) -> (Tensor[(1, 5, 10), float64], Tensor[(6, 11, 11), float32]) {
  %550 = cast(%var_2578, dtype="int32") /* ty=int32 */;
  %551 = reshape(%550, newshape=[]) /* ty=int32 */;
  %552 = @func_268(%551) /* ty=(Tensor[(1, 5, 10), float64], Tensor[(15, 15, 10), int32], int32) */;
  %553 = cast(meta[relay.Constant][30] /* ty=Tensor[(6, 11, 11), int64] */, dtype="bool") /* ty=Tensor[(6, 11, 11), bool] */;
  %554 = shape_of(%var_2571, dtype="int32") /* ty=Tensor[(3), int32] */;
  %555 = cast(%var_2571, dtype="bool") /* ty=Tensor[(6, 11, 11), bool] */;
  %556 = dyn.reshape(%553, %554, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %557 = greater(%555, %556) /* ty=Tensor[(6, 11, 11), bool] */;
  %558 = cast(%557, dtype="float32") /* ty=Tensor[(6, 11, 11), float32] */;
  %559 = cast(%var_2578, dtype="float32") /* ty=float32 */;
  %560 = %552.0;
  %561 = floor_divide(%558, %559) /* ty=Tensor[(6, 11, 11), float32] */;
  (%560, %561)
}

def @func_8856() -> (Tensor[(40), uint8], Tensor[(1, 9, 3), float32]) {
  %562 = @func_8713() /* ty=(Tensor[(1, 9, 3), float32], int32, Tensor[(40), uint8], Tensor[(2, 1144), float64]) */;
  %563 = %562.2;
  %564 = @func_6772() /* ty=Tensor[(1, 9, 3), float32] */;
  (%563, %564)
}

def @func_12296() -> (Tensor[(1, 9, 3), float32], Tensor[(4, 10, 1), float32]) {
  %565 = @func_7885() /* ty=Tensor[(1, 9, 3), float32] */;
  %566 = @func_11498() /* ty=Tensor[(4, 10, 1), float32] */;
  (%565, %566)
}

def @func_11521() -> Tensor[(6, 12, 12), float32] {
  %567 = @func_8818() /* ty=(Tensor[(6, 12, 12), float32],) */;
  %567.0
}

def @func_6270() -> Tensor[(6, 12, 12), float32] {
  %568 = @func_6135() /* ty=(Tensor[(6, 12, 12), float32], Tensor[(6, 12, 12), float32]) */;
  %568.1
}

def @func_9441(%var_9396: Tensor[(10, 15, 8), bool], %var_9434: Tensor[(10, 15, 8), float64]) -> (Tensor[(10, 15, 8), float64], Tensor[(1, 9, 3), float32], Tensor[(1, 5, 10), float64], Tensor[(40), uint8], Tensor[(4, 7, 13), float64], Tensor[(364), float64], Tensor[(10, 15, 8), int32]) {
  %569 = @func_8246() /* ty=(Tensor[(?, 5, 8), bool], Tensor[(?, 15, ?), bool], float64, Tensor[(1, 15), float64]) */;
  %570 = %569.1;
  %571 = cast(%570, dtype="float64") /* ty=Tensor[(?, 15, ?), float64] */;
  %572 = cast(%var_9396, dtype="float64") /* ty=Tensor[(10, 15, 8), float64] */;
  %573 = @func_8809() /* ty=(Tensor[(1, 9, 3), float32], Tensor[(1, 9, 3), float64], Tensor[(1, 15), float64], Tensor[(6, 12, 12), float32]) */;
  %574 = cast(meta[relay.Constant][31] /* ty=Tensor[(40), uint8] */, dtype="uint8") /* ty=Tensor[(40), uint8] */;
  %575 = cast(meta[relay.Constant][31] /* ty=Tensor[(40), uint8] */, dtype="uint8") /* ty=Tensor[(40), uint8] */;
  %576 = reshape(%574, newshape=[1, 5, 8]) /* ty=Tensor[(1, 5, 8), uint8] */;
  %577 = reshape(%575, newshape=[1, 5, 8]) /* ty=Tensor[(1, 5, 8), uint8] */;
  %578 = @func_801(%576, %577) /* ty=(Tensor[(?, 5, 8), bool], Tensor[(1, 5, 10), float64], int32) */;
  %579 = cast(meta[relay.Constant][32] /* ty=Tensor[(364), float64] */, dtype="float64") /* ty=Tensor[(364), float64] */;
  %580 = reshape(%579, newshape=[4, 7, 13]) /* ty=Tensor[(4, 7, 13), float64] */;
  %581 = cast(%var_9396, dtype="float64") /* ty=Tensor[(10, 15, 8), float64] */;
  %582 = rsqrt(%581) /* ty=Tensor[(10, 15, 8), float64] */;
  %583 = cast(%var_9434, dtype="int32") /* ty=Tensor[(10, 15, 8), int32] */;
  %584 = shape_of(%582, dtype="int32") /* ty=Tensor[(3), int32] */;
  %585 = cast(%582, dtype="int32") /* ty=Tensor[(10, 15, 8), int32] */;
  %586 = dyn.reshape(%583, %584, newshape=[]) /* ty=Tensor[(?, ?, ?), int32] */;
  %587 = divide(%571, %572) /* ty=Tensor[(10, 15, 8), float64] */;
  %588 = %573.0;
  %589 = %578.1;
  %590 = @func_3362(%580) /* ty=Tensor[(4, 7, 13), float64] */;
  %591 = logical_xor(%585, %586) /* ty=Tensor[(10, 15, 8), int32] */;
  (%587, %588, %589, meta[relay.Constant][31] /* ty=Tensor[(40), uint8] */, %590, meta[relay.Constant][32] /* ty=Tensor[(364), float64] */, %591)
}

def @func_10745() -> Tensor[(1, 9, 3), float32] {
  @func_7885() /* ty=Tensor[(1, 9, 3), float32] */
}

def @func_10808(%var_10780: float64) -> (Tensor[(6, 12, 12), float32], Tensor[(16, 10, 12), float64], float64, Tensor[(1920), float64], Tensor[(1, 9, 3), float64], Tensor[(6, 12, 12), float32]) {
  %592 = @func_6211() /* ty=(Tensor[(6, 12, 12), float32], Tensor[(27, 1), uint8], Tensor[(1, 9, 3), float32]) */;
  %593 = cast(%var_10780, dtype="float64") /* ty=float64 */;
  %594 = cast(meta[relay.Constant][33] /* ty=Tensor[(1920), float64] */, dtype="float64") /* ty=Tensor[(1920), float64] */;
  %595 = reshape(%593, newshape=[]) /* ty=float64 */;
  %596 = reshape(%594, newshape=[16, 10, 12]) /* ty=Tensor[(16, 10, 12), float64] */;
  %597 = @func_5053(%595, %596) /* ty=(Tensor[(336), float32], Tensor[(16, 10, 12), float64], Tensor[(16, 10, 12), float64], Tensor[(7, 6, 10), uint64], Tensor[(420), uint64]) */;
  %598 = @func_9853() /* ty=(Tensor[(6, 12, 12), float32],) */;
  %599 = %592.0;
  %600 = %597.1;
  %601 = @func_8173() /* ty=Tensor[(1, 9, 3), float64] */;
  %602 = %598.0;
  (%599, %600, %var_10780, meta[relay.Constant][33] /* ty=Tensor[(1920), float64] */, %601, %602)
}

def @func_9742() -> (Tensor[(1, 9, 3), float64],) {
  %603 = @func_9505() /* ty=Tensor[(1, 9, 3), float32] */;
  %604 = cast(%603, dtype="float64") /* ty=Tensor[(1, 9, 3), float64] */;
  %605 = exp(%604) /* ty=Tensor[(1, 9, 3), float64] */;
  (%605,)
}

def @func_2927(%var_2916: Tensor[(10, 13, 8), uint8]) -> (Tensor[(10, 13, 8), uint8],) {
  %606 = cast(%var_2916, dtype="uint8") /* ty=Tensor[(10, 13, 8), uint8] */;
  %607 = shape_of(meta[relay.Constant][34] /* ty=Tensor[(10, 13, 8), uint8] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %608 = cast(meta[relay.Constant][34] /* ty=Tensor[(10, 13, 8), uint8] */, dtype="uint8") /* ty=Tensor[(10, 13, 8), uint8] */;
  %609 = dyn.reshape(%606, %607, newshape=[]) /* ty=Tensor[(?, ?, ?), uint8] */;
  %610 = maximum(%608, %609) /* ty=Tensor[(10, 13, 8), uint8] */;
  (%610,)
}

def @func_8809() -> (Tensor[(1, 9, 3), float32], Tensor[(1, 9, 3), float64], Tensor[(1, 15), float64], Tensor[(6, 12, 12), float32]) {
  %611 = @func_6676() /* ty=(Tensor[(1, 9, 3), float32],) */;
  %612 = @func_8246() /* ty=(Tensor[(?, 5, 8), bool], Tensor[(?, 15, ?), bool], float64, Tensor[(1, 15), float64]) */;
  %613 = %611.0;
  %614 = @func_8173() /* ty=Tensor[(1, 9, 3), float64] */;
  %615 = %612.3;
  %616 = @func_7211() /* ty=Tensor[(6, 12, 12), float32] */;
  (%613, %614, %615, %616)
}

def @func_12642() -> (Tensor[(1, 9, 3), float64], Tensor[(1, 9, 3), float32], Tensor[(2, 9, 3), uint8], Tensor[(1, 54), float32]) {
  %617 = @func_9270() /* ty=(Tensor[(6, 12, 12), float32], Tensor[(1, 9, 3), float32], float64) */;
  %618 = %617.2;
  %619 = @func_10250() /* ty=(Tensor[(6, 12, 12), float32], Tensor[(720), bool], Tensor[(12, 10, 6), float64], Tensor[(27, ?), uint16], Tensor[(1, 9, 3), float32]) */;
  %620 = %619.4;
  %621 = cast(%618, dtype="float64") /* ty=float64 */;
  %622 = cast(%620, dtype="float64") /* ty=Tensor[(1, 9, 3), float64] */;
  %623 = cast(%620, dtype="float32") /* ty=Tensor[(1, 9, 3), float32] */;
  %624 = cast(meta[relay.Constant][35] /* ty=Tensor[(1, 54), float32] */, dtype="float32") /* ty=Tensor[(1, 54), float32] */;
  %625 = reshape(%624, newshape=[2, 9, 3]) /* ty=Tensor[(2, 9, 3), float32] */;
  %626 = multiply(%621, %622) /* ty=Tensor[(1, 9, 3), float64] */;
  %627 = log2(%623) /* ty=Tensor[(1, 9, 3), float32] */;
  %628 = @func_12216(%625) /* ty=Tensor[(2, 9, 3), uint8] */;
  (%626, %627, %628, meta[relay.Constant][35] /* ty=Tensor[(1, 54), float32] */)
}

def @func_1823(%var_1809: Tensor[(7, 6, 10), uint64]) -> Tensor[(7, 6, 10), uint64] {
  %629 = cast(%var_1809, dtype="uint64") /* ty=Tensor[(7, 6, 10), uint64] */;
  %630 = shape_of(meta[relay.Constant][36] /* ty=Tensor[(7, 6, 10), uint64] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %631 = cast(meta[relay.Constant][36] /* ty=Tensor[(7, 6, 10), uint64] */, dtype="uint64") /* ty=Tensor[(7, 6, 10), uint64] */;
  %632 = dyn.reshape(%629, %630, newshape=[]) /* ty=Tensor[(?, ?, ?), uint64] */;
  left_shift(%631, %632) /* ty=Tensor[(7, 6, 10), uint64] */
}

def @func_9367() -> (Tensor[(6, 12, 12), float64],) {
  %633 = @func_7765() /* ty=Tensor[(6, 12, 12), float32] */;
  %634 = cast(%633, dtype="float64") /* ty=Tensor[(6, 12, 12), float64] */;
  %635 = asinh(%634) /* ty=Tensor[(6, 12, 12), float64] */;
  (%635,)
}

def @func_9644() -> (Tensor[(1, 9, 3), float32], Tensor[(40), uint8]) {
  %636 = @func_7694() /* ty=(Tensor[(1, 9, 3), float32],) */;
  %637 = @func_8856() /* ty=(Tensor[(40), uint8], Tensor[(1, 9, 3), float32]) */;
  %638 = %636.0;
  %639 = %637.0;
  (%638, %639)
}

def @func_11025(%var_11020: float64) -> (Tensor[(1, 9, 3), float32], Tensor[(6, 12, 12), float32], float64) {
  %640 = @func_9002() /* ty=(Tensor[(1, 9, 3), float32], Tensor[(5, 3, 15), float64]) */;
  %641 = cast(%var_11020, dtype="float64") /* ty=float64 */;
  %642 = reshape(%641, newshape=[]) /* ty=float64 */;
  %643 = @func_10808(%642) /* ty=(Tensor[(6, 12, 12), float32], Tensor[(16, 10, 12), float64], float64, Tensor[(1920), float64], Tensor[(1, 9, 3), float64], Tensor[(6, 12, 12), float32]) */;
  %644 = %640.0;
  %645 = %643.5;
  (%644, %645, %var_11020)
}

def @func_3804(%var_3788: float64, %var_3789: Tensor[(1, 15, 1), float64]) -> (Tensor[(?, 15, ?), bool],) {
  %646 = cast(%var_3788, dtype="float64") /* ty=float64 */;
  %647 = cast(%var_3789, dtype="float64") /* ty=Tensor[(1, 15, 1), float64] */;
  %648 = divide(%646, %647) /* ty=Tensor[(1, 15, 1), float64] */;
  %649 = cast(%var_3789, dtype="bool") /* ty=Tensor[(1, 15, 1), bool] */;
  %650 = shape_of(%648, dtype="int32") /* ty=Tensor[(3), int32] */;
  %651 = cast(%648, dtype="bool") /* ty=Tensor[(1, 15, 1), bool] */;
  %652 = dyn.reshape(%649, %650, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %653 = equal(%651, %652) /* ty=Tensor[(?, 15, ?), bool] */;
  (%653,)
}

def @func_3362(%var_3347: Tensor[(4, 7, 13), float64]) -> Tensor[(4, 7, 13), float64] {
  %654 = cast(%var_3347, dtype="float64") /* ty=Tensor[(4, 7, 13), float64] */;
  tan(%654) /* ty=Tensor[(4, 7, 13), float64] */
}

def @func_8040(%var_8035: Tensor[(1512), float64], %var_8037: Tensor[(88, 26), float64]) -> (Tensor[(6, 12, 12), float32], Tensor[(6, 12, 12), float32], Tensor[(2288), float64], Tensor[(1512), float64], Tensor[(336), float32], Tensor[(88, 26), float64]) {
  %655 = cast(%var_8035, dtype="float64") /* ty=Tensor[(1512), float64] */;
  %656 = cast(meta[relay.Constant][37] /* ty=Tensor[(336), float32] */, dtype="float32") /* ty=Tensor[(336), float32] */;
  %657 = cast(%var_8037, dtype="float64") /* ty=Tensor[(88, 26), float64] */;
  %658 = reshape(%655, newshape=[12, 9, 14]) /* ty=Tensor[(12, 9, 14), float64] */;
  %659 = reshape(%656, newshape=[336]) /* ty=Tensor[(336), float32] */;
  %660 = reshape(%657, newshape=[2288]) /* ty=Tensor[(2288), float64] */;
  %661 = @func_4824(%658, %659, %660) /* ty=(Tensor[(12, 9, 14), float64], Tensor[(4, 12, 7), float32], Tensor[(336), float32], Tensor[(16, 13, 11), float64], Tensor[(2288), float64]) */;
  %662 = @func_7765() /* ty=Tensor[(6, 12, 12), float32] */;
  %663 = @func_7211() /* ty=Tensor[(6, 12, 12), float32] */;
  %664 = %661.4;
  (%662, %663, %664, %var_8035, meta[relay.Constant][37] /* ty=Tensor[(336), float32] */, %var_8037)
}

def @func_10861() -> (Tensor[(6, 12, 12), float32],) {
  %665 = @func_7211() /* ty=Tensor[(6, 12, 12), float32] */;
  (%665,)
}

def @func_8246() -> (Tensor[(?, 5, 8), bool], Tensor[(?, 15, ?), bool], float64, Tensor[(1, 15), float64]) {
  %666 = @func_7832() /* ty=(Tensor[(6, 12, 12), float32], Tensor[(7, 6, 10), uint64], Tensor[(420), uint64], Tensor[(?, 5, 8), bool], Tensor[(1, 40), uint8]) */;
  %667 = cast(6.99639f64 /* ty=float64 */, dtype="float64") /* ty=float64 */;
  %668 = cast(meta[relay.Constant][38] /* ty=Tensor[(1, 15), float64] */, dtype="float64") /* ty=Tensor[(1, 15), float64] */;
  %669 = reshape(%667, newshape=[]) /* ty=float64 */;
  %670 = reshape(%668, newshape=[1, 15, 1]) /* ty=Tensor[(1, 15, 1), float64] */;
  %671 = @func_3804(%669, %670) /* ty=(Tensor[(?, 15, ?), bool],) */;
  %672 = %666.3;
  %673 = %671.0;
  (%672, %673, 6.99639f64 /* ty=float64 */, meta[relay.Constant][38] /* ty=Tensor[(1, 15), float64] */)
}

def @func_7682(%var_7666: Tensor[(364), float64]) -> (Tensor[(6, 12, 12), float32], Tensor[(8, 12, 9), uint32], Tensor[(1, 9, 3), float32], Tensor[(1, 9, 3), float32], Tensor[(364), float64], Tensor[(4, 7, 13), float32], Tensor[(1, 9, 3), float32]) {
  %674 = @func_6336() /* ty=(Tensor[(6, 12, 12), float32],) */;
  %675 = %674.0;
  %676 = cast(%675, dtype="float64") /* ty=Tensor[(6, 12, 12), float64] */;
  %677 = reshape(%676, newshape=[8, 12, 9]) /* ty=Tensor[(8, 12, 9), float64] */;
  %678 = @func_7446() /* ty=(Tensor[(1, 9, 3), float32],) */;
  %679 = @func_7446() /* ty=(Tensor[(1, 9, 3), float32],) */;
  %680 = cast(%var_7666, dtype="float64") /* ty=Tensor[(364), float64] */;
  %681 = reshape(%680, newshape=[4, 7, 13]) /* ty=Tensor[(4, 7, 13), float64] */;
  %682 = @func_3362(%681) /* ty=Tensor[(4, 7, 13), float64] */;
  %683 = cast(%682, dtype="float32") /* ty=Tensor[(4, 7, 13), float32] */;
  %684 = @func_6676() /* ty=(Tensor[(1, 9, 3), float32],) */;
  %685 = @func_3153(%677) /* ty=Tensor[(8, 12, 9), uint32] */;
  %686 = %678.0;
  %687 = %679.0;
  %688 = exp(%683) /* ty=Tensor[(4, 7, 13), float32] */;
  %689 = %684.0;
  (%675, %685, %686, %687, %var_7666, %688, %689)
}

def @func_95(%var_68: int32) -> (Tensor[(15, 15, 10), int32], Tensor[(4, 12, 7), float32], Tensor[(336), float32]) {
  %690 = cast(%var_68, dtype="int32") /* ty=int32 */;
  %691 = cast(meta[relay.Constant][39] /* ty=Tensor[(15, 15, 10), int32] */, dtype="int32") /* ty=Tensor[(15, 15, 10), int32] */;
  %692 = cast(meta[relay.Constant][40] /* ty=Tensor[(336), float32] */, dtype="float32") /* ty=Tensor[(336), float32] */;
  %693 = reshape(%692, newshape=[4, 12, 7]) /* ty=Tensor[(4, 12, 7), float32] */;
  %694 = left_shift(%690, %691) /* ty=Tensor[(15, 15, 10), int32] */;
  %695 = @func_40(%693) /* ty=Tensor[(4, 12, 7), float32] */;
  (%694, %695, meta[relay.Constant][40] /* ty=Tensor[(336), float32] */)
}

def @func_10938(%var_10923: int8, %var_10924: Tensor[(45), int8]) -> (Tensor[(1, 9, 3), float32], Tensor[(1, 9, 3), float64], Tensor[(3, 1, 15), bool], int8, Tensor[(45), int8], Tensor[(2, 360), int16]) {
  %696 = cast(%var_10923, dtype="int8") /* ty=int8 */;
  %697 = cast(%var_10924, dtype="int8") /* ty=Tensor[(45), int8] */;
  %698 = cast(meta[relay.Constant][41] /* ty=Tensor[(2, 360), int16] */, dtype="int16") /* ty=Tensor[(2, 360), int16] */;
  %699 = reshape(%696, newshape=[]) /* ty=int8 */;
  %700 = reshape(%697, newshape=[3, 1, 15]) /* ty=Tensor[(3, 1, 15), int8] */;
  %701 = reshape(%698, newshape=[720]) /* ty=Tensor[(720), int16] */;
  %702 = @func_1444(%699, %700, %701) /* ty=(Tensor[(3, 1, 15), int8], Tensor[(2288), float64], Tensor[(16, 13, 11), float32], Tensor[(3, 1, 15), bool], Tensor[(16, 13, 11), float64], Tensor[(720), int16]) */;
  %703 = @func_9505() /* ty=Tensor[(1, 9, 3), float32] */;
  %704 = @func_6739() /* ty=Tensor[(1, 9, 3), float64] */;
  %705 = %702.3;
  (%703, %704, %705, %var_10923, %var_10924, meta[relay.Constant][41] /* ty=Tensor[(2, 360), int16] */)
}

def @func_7911(%var_7908: float64) -> (Tensor[(6, 12, 12), float32], Tensor[(6, 12, 12), float32], Tensor[(117, 1), float64], float64) {
  %706 = cast(meta[relay.Constant][42] /* ty=Tensor[(117, 1), float64] */, dtype="float64") /* ty=Tensor[(117, 1), float64] */;
  %707 = cast(%var_7908, dtype="float64") /* ty=float64 */;
  %708 = reshape(%706, newshape=[117]) /* ty=Tensor[(117), float64] */;
  %709 = reshape(%707, newshape=[]) /* ty=float64 */;
  %710 = @func_6406(%708, %709) /* ty=(Tensor[(6, 12, 12), float32], Tensor[(?, 15, ?), bool], Tensor[(117), float64], float64, Tensor[(6, 12, 12), float32]) */;
  %711 = @func_7765() /* ty=Tensor[(6, 12, 12), float32] */;
  %712 = %710.4;
  (%711, %712, meta[relay.Constant][42] /* ty=Tensor[(117, 1), float64] */, %var_7908)
}

def @func_6419() -> (Tensor[(1, 9, 3), float32],) {
  %713 = @func_6211() /* ty=(Tensor[(6, 12, 12), float32], Tensor[(27, 1), uint8], Tensor[(1, 9, 3), float32]) */;
  %714 = %713.2;
  (%714,)
}

def @func_5233(%var_5186: Tensor[(9, 4, 3), float32], %var_5192: int32, %var_5204: Tensor[(15), float64]) -> (Tensor[(9, 4, 3), float32], Tensor[(4, 12, 7), float32], int32, Tensor[(6, 11, 11), float32], Tensor[(726), int64], Tensor[(?, 15, ?), bool], Tensor[(15), float64]) {
  %715 = cast(%var_5186, dtype="float32") /* ty=Tensor[(9, 4, 3), float32] */;
  %716 = cast(%var_5192, dtype="int32") /* ty=int32 */;
  %717 = reshape(%716, newshape=[]) /* ty=int32 */;
  %718 = @func_95(%717) /* ty=(Tensor[(15, 15, 10), int32], Tensor[(4, 12, 7), float32], Tensor[(336), float32]) */;
  %719 = cast(meta[relay.Constant][43] /* ty=Tensor[(726), int64] */, dtype="int64") /* ty=Tensor[(726), int64] */;
  %720 = cast(%var_5192, dtype="int32") /* ty=int32 */;
  %721 = reshape(%719, newshape=[6, 11, 11]) /* ty=Tensor[(6, 11, 11), int64] */;
  %722 = reshape(%720, newshape=[]) /* ty=int32 */;
  %723 = @func_2588(%721, %722) /* ty=(Tensor[(1, 5, 10), float64], Tensor[(6, 11, 11), float32]) */;
  %724 = cast(%var_5192, dtype="float64") /* ty=float64 */;
  %725 = cast(%var_5204, dtype="float64") /* ty=Tensor[(15), float64] */;
  %726 = reshape(%724, newshape=[]) /* ty=float64 */;
  %727 = reshape(%725, newshape=[1, 15, 1]) /* ty=Tensor[(1, 15, 1), float64] */;
  %728 = @func_3804(%726, %727) /* ty=(Tensor[(?, 15, ?), bool],) */;
  %729 = atanh(%715) /* ty=Tensor[(9, 4, 3), float32] */;
  %730 = %718.1;
  %731 = %723.1;
  %732 = %728.0;
  (%729, %730, %var_5192, %731, meta[relay.Constant][43] /* ty=Tensor[(726), int64] */, %732, %var_5204)
}

def @func_7394() -> Tensor[(6, 12, 12), float32] {
  %733 = @func_7298() /* ty=(Tensor[(6, 12, 12), float32],) */;
  %733.0
}

def @func_12001() -> (Tensor[(6, 12, 12), float32], Tensor[(6, 12, 12), float32]) {
  %734 = @func_11182() /* ty=(Tensor[(6, 12, 12), float32], Tensor[(16, 13, 11), float64], Tensor[(720), int16], Tensor[(88, 26), float64]) */;
  %735 = %734.0;
  %736 = @func_11652() /* ty=Tensor[(6, 12, 12), float32] */;
  (%735, %736)
}

def @func_7446() -> (Tensor[(1, 9, 3), float32],) {
  %737 = @func_6419() /* ty=(Tensor[(1, 9, 3), float32],) */;
  %738 = %737.0;
  (%738,)
}

def @func_8459(%var_8455: Tensor[(2, 16, 7), float32]) -> (Tensor[(2, 16, 7), float32],) {
  %739 = cast(%var_8455, dtype="float32") /* ty=Tensor[(2, 16, 7), float32] */;
  %740 = log2(%739) /* ty=Tensor[(2, 16, 7), float32] */;
  (%740,)
}

def @func_7694() -> (Tensor[(1, 9, 3), float32],) {
  %741 = @func_6211() /* ty=(Tensor[(6, 12, 12), float32], Tensor[(27, 1), uint8], Tensor[(1, 9, 3), float32]) */;
  %742 = %741.2;
  (%742,)
}

def @func_7599(%var_7510: Tensor[(672), float64], %var_7512: Tensor[(169), float32], %var_7524: Tensor[(2, 40), int8], %var_7559: Tensor[(45), int8], %var_7560: Tensor[(720), int16]) -> (Tensor[(6, 12, 12), float32], Tensor[(672), float64], int32, Tensor[(169), bool], Tensor[(5, 2, 8), int8], Tensor[(2, 40), int8], Tensor[(15), float64], Tensor[(15), float64], Tensor[(1, 9, 3), float32], Tensor[(1, 9, 3), float32], Tensor[(16, 13, 11), float64], Tensor[(45), int8], Tensor[(720), int16], Tensor[(169), float32], Tensor[(6, 12, 12), float32], Tensor[(420), uint64]) {
  %743 = @func_7298() /* ty=(Tensor[(6, 12, 12), float32],) */;
  %744 = cast(%var_7510, dtype="float64") /* ty=Tensor[(672), float64] */;
  %745 = cast(6 /* ty=int32 */, dtype="int32") /* ty=int32 */;
  %746 = cast(%var_7512, dtype="float32") /* ty=Tensor[(169), float32] */;
  %747 = reshape(%744, newshape=[4, 168]) /* ty=Tensor[(4, 168), float64] */;
  %748 = reshape(%745, newshape=[]) /* ty=int32 */;
  %749 = reshape(%746, newshape=[169]) /* ty=Tensor[(169), float32] */;
  %750 = @func_6580(%747, %748, %749) /* ty=(Tensor[(6, 12, 12), float64], Tensor[(6, 12, 12), float64], int32, int32, Tensor[(4, 168), float32], Tensor[(13, 1, 13), float32], Tensor[(169), float32]) */;
  %751 = %750.6;
  %752 = cast(%751, dtype="bool") /* ty=Tensor[(169), bool] */;
  %753 = shape_of(%var_7512, dtype="int32") /* ty=Tensor[(1), int32] */;
  %754 = cast(%var_7512, dtype="bool") /* ty=Tensor[(169), bool] */;
  %755 = dyn.reshape(%752, %753, newshape=[]) /* ty=Tensor[(?), bool] */;
  %756 = cast(%var_7524, dtype="int8") /* ty=Tensor[(2, 40), int8] */;
  %757 = cast(%var_7524, dtype="int8") /* ty=Tensor[(2, 40), int8] */;
  %758 = reshape(%756, newshape=[5, 2, 8]) /* ty=Tensor[(5, 2, 8), int8] */;
  %759 = reshape(%757, newshape=[5, 2, 8]) /* ty=Tensor[(5, 2, 8), int8] */;
  %760 = @func_7190(%758, %759) /* ty=(Tensor[(5, 2, 8), int8],) */;
  %761 = cast(meta[relay.Constant][44] /* ty=Tensor[(15), float64] */, dtype="float64") /* ty=Tensor[(15), float64] */;
  %762 = reshape(%761, newshape=[15]) /* ty=Tensor[(15), float64] */;
  %763 = @func_6799(%762) /* ty=(Tensor[(1, 9, 3), float32], Tensor[(4, 7, 13), float64], Tensor[(364), float64], Tensor[(?, 15, ?), bool], float64, Tensor[(15), float64]) */;
  %764 = cast(6 /* ty=int32 */, dtype="int8") /* ty=int8 */;
  %765 = cast(%var_7559, dtype="int8") /* ty=Tensor[(45), int8] */;
  %766 = cast(%var_7560, dtype="int16") /* ty=Tensor[(720), int16] */;
  %767 = reshape(%764, newshape=[]) /* ty=int8 */;
  %768 = reshape(%765, newshape=[3, 1, 15]) /* ty=Tensor[(3, 1, 15), int8] */;
  %769 = reshape(%766, newshape=[720]) /* ty=Tensor[(720), int16] */;
  %770 = @func_1444(%767, %768, %769) /* ty=(Tensor[(3, 1, 15), int8], Tensor[(2288), float64], Tensor[(16, 13, 11), float32], Tensor[(3, 1, 15), bool], Tensor[(16, 13, 11), float64], Tensor[(720), int16]) */;
  %771 = cast(%751, dtype="float64") /* ty=Tensor[(169), float64] */;
  %772 = sqrt(%771) /* ty=Tensor[(169), float64] */;
  %773 = cast(%772, dtype="float32") /* ty=Tensor[(169), float32] */;
  %774 = asin(%773) /* ty=Tensor[(169), float32] */;
  %775 = cast(%774, dtype="float32") /* ty=Tensor[(169), float32] */;
  %776 = cast(meta[relay.Constant][45] /* ty=Tensor[(420), uint64] */, dtype="uint64") /* ty=Tensor[(420), uint64] */;
  %777 = reshape(%776, newshape=[420]) /* ty=Tensor[(420), uint64] */;
  %778 = @func_7090(%777) /* ty=(Tensor[(6, 12, 12), float32], Tensor[(1, 9, 3), float32], Tensor[(7, 6, 10), uint64], Tensor[(420), uint64], Tensor[(6, 12, 12), float32], Tensor[(6, 12, 12), float32]) */;
  %779 = %743.0;
  %780 = greater_equal(%754, %755) /* ty=Tensor[(169), bool] */;
  %781 = %760.0;
  %782 = %763.5;
  %783 = @func_6772() /* ty=Tensor[(1, 9, 3), float32] */;
  %784 = @func_6772() /* ty=Tensor[(1, 9, 3), float32] */;
  %785 = %770.4;
  %786 = sigmoid(%775) /* ty=Tensor[(169), float32] */;
  %787 = %778.4;
  (%779, %var_7510, 6 /* ty=int32 */, %780, %781, %var_7524, %782, meta[relay.Constant][44] /* ty=Tensor[(15), float64] */, %783, %784, %785, %var_7559, %var_7560, %786, %787, meta[relay.Constant][45] /* ty=Tensor[(420), uint64] */)
}

def @func_9841(%var_9832: float64, %var_9833: Tensor[(1920), float64]) -> (Tensor[(6, 12, 12), float32], Tensor[(16, 10, 12), float64], float64, Tensor[(1920), float64]) {
  %788 = @func_8359() /* ty=(Tensor[(6, 12, 12), float32],) */;
  %789 = cast(%var_9832, dtype="float64") /* ty=float64 */;
  %790 = cast(%var_9833, dtype="float64") /* ty=Tensor[(1920), float64] */;
  %791 = reshape(%789, newshape=[]) /* ty=float64 */;
  %792 = reshape(%790, newshape=[16, 10, 12]) /* ty=Tensor[(16, 10, 12), float64] */;
  %793 = @func_5053(%791, %792) /* ty=(Tensor[(336), float32], Tensor[(16, 10, 12), float64], Tensor[(16, 10, 12), float64], Tensor[(7, 6, 10), uint64], Tensor[(420), uint64]) */;
  %794 = %788.0;
  %795 = %793.1;
  (%794, %795, %var_9832, %var_9833)
}

def @func_4824(%var_4781: Tensor[(12, 9, 14), float64], %var_4788: Tensor[(336), float32], %var_4809: Tensor[(2288), float64]) -> (Tensor[(12, 9, 14), float64], Tensor[(4, 12, 7), float32], Tensor[(336), float32], Tensor[(16, 13, 11), float64], Tensor[(2288), float64]) {
  %796 = cast(meta[relay.Constant][46] /* ty=Tensor[(12, 9, 14), float64] */, dtype="float64") /* ty=Tensor[(12, 9, 14), float64] */;
  %797 = shape_of(%var_4781, dtype="int32") /* ty=Tensor[(3), int32] */;
  %798 = cast(%var_4781, dtype="float64") /* ty=Tensor[(12, 9, 14), float64] */;
  %799 = dyn.reshape(%796, %797, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %800 = cast(%var_4788, dtype="float32") /* ty=Tensor[(336), float32] */;
  %801 = reshape(%800, newshape=[4, 12, 7]) /* ty=Tensor[(4, 12, 7), float32] */;
  %802 = cast(%var_4809, dtype="float64") /* ty=Tensor[(2288), float64] */;
  %803 = reshape(%802, newshape=[16, 13, 11]) /* ty=Tensor[(16, 13, 11), float64] */;
  %804 = @func_343(%803) /* ty=(Tensor[(16, 13, 11), float64],) */;
  %805 = add(%798, %799) /* ty=Tensor[(12, 9, 14), float64] */;
  %806 = @func_40(%801) /* ty=Tensor[(4, 12, 7), float32] */;
  %807 = %804.0;
  (%805, %806, %var_4788, %807, %var_4809)
}

def @func_7172(%var_7154: Tensor[(15, 3, 4), float32]) -> (Tensor[(15, 3, 4), float32], Tensor[(6, 12, 12), float32], Tensor[(1, 420), uint64], Tensor[(4, 12, 7), float32], Tensor[(672), float64], int32) {
  %808 = cast(%var_7154, dtype="float32") /* ty=Tensor[(15, 3, 4), float32] */;
  %809 = cast(meta[relay.Constant][47] /* ty=Tensor[(1, 420), uint64] */, dtype="uint64") /* ty=Tensor[(1, 420), uint64] */;
  %810 = reshape(%809, newshape=[420]) /* ty=Tensor[(420), uint64] */;
  %811 = @func_7090(%810) /* ty=(Tensor[(6, 12, 12), float32], Tensor[(1, 9, 3), float32], Tensor[(7, 6, 10), uint64], Tensor[(420), uint64], Tensor[(6, 12, 12), float32], Tensor[(6, 12, 12), float32]) */;
  %812 = cast(meta[relay.Constant][48] /* ty=Tensor[(672), float64] */, dtype="float64") /* ty=Tensor[(672), float64] */;
  %813 = cast(5 /* ty=int32 */, dtype="int32") /* ty=int32 */;
  %814 = reshape(%812, newshape=[14, 16, 3]) /* ty=Tensor[(14, 16, 3), float64] */;
  %815 = reshape(%813, newshape=[]) /* ty=int32 */;
  %816 = @func_2170(%814, %815) /* ty=(Tensor[(14, 16, 3), float64], Tensor[(4, 12, 7), float32], int32) */;
  %817 = exp(%808) /* ty=Tensor[(15, 3, 4), float32] */;
  %818 = %811.4;
  %819 = %816.1;
  (%817, %818, meta[relay.Constant][47] /* ty=Tensor[(1, 420), uint64] */, %819, meta[relay.Constant][48] /* ty=Tensor[(672), float64] */, 5 /* ty=int32 */)
}

def @func_10877(%var_10869: Tensor[(12, 16, 5), float32]) -> Tensor[(12, 16, 5), float32] {
  %820 = cast(%var_10869, dtype="float32") /* ty=Tensor[(12, 16, 5), float32] */;
  acos(%820) /* ty=Tensor[(12, 16, 5), float32] */
}

def @func_11182() -> (Tensor[(6, 12, 12), float32], Tensor[(16, 13, 11), float64], Tensor[(720), int16], Tensor[(88, 26), float64]) {
  %821 = cast(meta[relay.Constant][49] /* ty=Tensor[(720), int16] */, dtype="int16") /* ty=Tensor[(720), int16] */;
  %822 = cast(meta[relay.Constant][50] /* ty=Tensor[(88, 26), float64] */, dtype="float64") /* ty=Tensor[(88, 26), float64] */;
  %823 = reshape(%821, newshape=[15, 12, 4]) /* ty=Tensor[(15, 12, 4), int16] */;
  %824 = reshape(%822, newshape=[2288]) /* ty=Tensor[(2288), float64] */;
  %825 = @func_529(%823, %824) /* ty=(Tensor[(15, 12, 4), bool], Tensor[(16, 13, 11), float64], Tensor[(2288), float64]) */;
  %826 = @func_7765() /* ty=Tensor[(6, 12, 12), float32] */;
  %827 = %825.1;
  (%826, %827, meta[relay.Constant][49] /* ty=Tensor[(720), int16] */, meta[relay.Constant][50] /* ty=Tensor[(88, 26), float64] */)
}

def @func_8499() -> (Tensor[(5, 3, 15), float64],) {
  %828 = cast(meta[relay.Constant][51] /* ty=Tensor[(5, 3, 15), float64] */, dtype="float64") /* ty=Tensor[(5, 3, 15), float64] */;
  %829 = acosh(%828) /* ty=Tensor[(5, 3, 15), float64] */;
  (%829,)
}

def @func_3153(%var_3142: Tensor[(8, 12, 9), float64]) -> Tensor[(8, 12, 9), uint32] {
  %830 = cast(%var_3142, dtype="float64") /* ty=Tensor[(8, 12, 9), float64] */;
  %831 = sqrt(%830) /* ty=Tensor[(8, 12, 9), float64] */;
  %832 = cast(%var_3142, dtype="uint32") /* ty=Tensor[(8, 12, 9), uint32] */;
  %833 = shape_of(%831, dtype="int32") /* ty=Tensor[(3), int32] */;
  %834 = cast(%831, dtype="uint32") /* ty=Tensor[(8, 12, 9), uint32] */;
  %835 = dyn.reshape(%832, %833, newshape=[]) /* ty=Tensor[(?, ?, ?), uint32] */;
  logical_xor(%834, %835) /* ty=Tensor[(8, 12, 9), uint32] */
}

def @func_8635() -> (Tensor[(1, 9, 3), float32],) {
  %836 = @func_6676() /* ty=(Tensor[(1, 9, 3), float32],) */;
  %837 = %836.0;
  (%837,)
}

def @func_8173() -> Tensor[(1, 9, 3), float64] {
  @func_6739() /* ty=Tensor[(1, 9, 3), float64] */
}

def @func_9236() -> Tensor[(1, 9, 3), float32] {
  %838 = @func_6601() /* ty=(Tensor[(1, 9, 3), float32],) */;
  %838.0
}

def @func_8359() -> (Tensor[(6, 12, 12), float32],) {
  %839 = @func_6270() /* ty=Tensor[(6, 12, 12), float32] */;
  (%839,)
}

def @func_11908() -> Tensor[(1, 9, 3), float32] {
  @func_9505() /* ty=Tensor[(1, 9, 3), float32] */
}

def @func_7190(%var_7185: Tensor[(5, 2, 8), int8], %var_7186: Tensor[(5, 2, 8), int8]) -> (Tensor[(5, 2, 8), int8],) {
  %840 = cast(%var_7186, dtype="int8") /* ty=Tensor[(5, 2, 8), int8] */;
  %841 = shape_of(%var_7185, dtype="int32") /* ty=Tensor[(3), int32] */;
  %842 = cast(%var_7185, dtype="int8") /* ty=Tensor[(5, 2, 8), int8] */;
  %843 = dyn.reshape(%840, %841, newshape=[]) /* ty=Tensor[(?, ?, ?), int8] */;
  %844 = maximum(%842, %843) /* ty=Tensor[(5, 2, 8), int8] */;
  (%844,)
}

def @func_7090(%var_7064: Tensor[(420), uint64]) -> (Tensor[(6, 12, 12), float32], Tensor[(1, 9, 3), float32], Tensor[(7, 6, 10), uint64], Tensor[(420), uint64], Tensor[(6, 12, 12), float32], Tensor[(6, 12, 12), float32]) {
  %845 = @func_6336() /* ty=(Tensor[(6, 12, 12), float32],) */;
  %846 = %845.0;
  %847 = cast(%846, dtype="float32") /* ty=Tensor[(6, 12, 12), float32] */;
  %848 = cast(%var_7064, dtype="uint64") /* ty=Tensor[(420), uint64] */;
  %849 = reshape(%848, newshape=[7, 6, 10]) /* ty=Tensor[(7, 6, 10), uint64] */;
  %850 = cast(%846, dtype="float32") /* ty=Tensor[(6, 12, 12), float32] */;
  %851 = @func_6844() /* ty=(Tensor[(6, 12, 12), float32], Tensor[(6, 12, 12), float32]) */;
  %852 = atanh(%847) /* ty=Tensor[(6, 12, 12), float32] */;
  %853 = @func_6772() /* ty=Tensor[(1, 9, 3), float32] */;
  %854 = @func_1823(%849) /* ty=Tensor[(7, 6, 10), uint64] */;
  %855 = tan(%850) /* ty=Tensor[(6, 12, 12), float32] */;
  %856 = %851.0;
  (%852, %853, %854, %var_7064, %855, %856)
}

def @func_2170(%var_2146: Tensor[(14, 16, 3), float64], %var_2160: int32) -> (Tensor[(14, 16, 3), float64], Tensor[(4, 12, 7), float32], int32) {
  %857 = cast(%var_2146, dtype="float64") /* ty=Tensor[(14, 16, 3), float64] */;
  %858 = cast(%var_2160, dtype="int32") /* ty=int32 */;
  %859 = reshape(%858, newshape=[]) /* ty=int32 */;
  %860 = @func_95(%859) /* ty=(Tensor[(15, 15, 10), int32], Tensor[(4, 12, 7), float32], Tensor[(336), float32]) */;
  %861 = asinh(%857) /* ty=Tensor[(14, 16, 3), float64] */;
  %862 = %860.1;
  (%861, %862, %var_2160)
}

def @func_12157() -> (Tensor[(6, 12, 12), float32], Tensor[(6, 12, 12), float32]) {
  %863 = @func_8359() /* ty=(Tensor[(6, 12, 12), float32],) */;
  %864 = %863.0;
  %865 = @func_7394() /* ty=Tensor[(6, 12, 12), float32] */;
  (%864, %865)
}

def @func_11498() -> Tensor[(4, 10, 1), float32] {
  %866 = cast(meta[relay.Constant][52] /* ty=Tensor[(4, 10, 1), float32] */, dtype="float32") /* ty=Tensor[(4, 10, 1), float32] */;
  atan(%866) /* ty=Tensor[(4, 10, 1), float32] */
}

def @func_6739() -> Tensor[(1, 9, 3), float64] {
  %867 = @func_6211() /* ty=(Tensor[(6, 12, 12), float32], Tensor[(27, 1), uint8], Tensor[(1, 9, 3), float32]) */;
  %868 = %867.2;
  %869 = cast(%868, dtype="float64") /* ty=Tensor[(1, 9, 3), float64] */;
  tan(%869) /* ty=Tensor[(1, 9, 3), float64] */
}

def @func_10504(%var_10486: float64, %var_10487: Tensor[(1920), float64]) -> (Tensor[(1, 9, 3), float32], Tensor[(336), float32], float64, Tensor[(1920), float64], Tensor[(1, 9, 3), float32]) {
  %870 = @func_6419() /* ty=(Tensor[(1, 9, 3), float32],) */;
  %871 = cast(%var_10486, dtype="float64") /* ty=float64 */;
  %872 = cast(%var_10487, dtype="float64") /* ty=Tensor[(1920), float64] */;
  %873 = reshape(%871, newshape=[]) /* ty=float64 */;
  %874 = reshape(%872, newshape=[16, 10, 12]) /* ty=Tensor[(16, 10, 12), float64] */;
  %875 = @func_5053(%873, %874) /* ty=(Tensor[(336), float32], Tensor[(16, 10, 12), float64], Tensor[(16, 10, 12), float64], Tensor[(7, 6, 10), uint64], Tensor[(420), uint64]) */;
  %876 = %870.0;
  %877 = %875.0;
  %878 = @func_8476() /* ty=Tensor[(1, 9, 3), float32] */;
  (%876, %877, %var_10486, %var_10487, %878)
}

def @func_10433(%var_10419: Tensor[(4, 480), float64]) -> (Tensor[(6, 12, 12), float32], Tensor[(16, 10, 12), float64], float64, Tensor[(4, 480), float64]) {
  %879 = @func_8818() /* ty=(Tensor[(6, 12, 12), float32],) */;
  %880 = cast(0.226905f64 /* ty=float64 */, dtype="float64") /* ty=float64 */;
  %881 = cast(%var_10419, dtype="float64") /* ty=Tensor[(4, 480), float64] */;
  %882 = reshape(%880, newshape=[]) /* ty=float64 */;
  %883 = reshape(%881, newshape=[1920]) /* ty=Tensor[(1920), float64] */;
  %884 = @func_9841(%882, %883) /* ty=(Tensor[(6, 12, 12), float32], Tensor[(16, 10, 12), float64], float64, Tensor[(1920), float64]) */;
  %885 = %879.0;
  %886 = %884.1;
  (%885, %886, 0.226905f64 /* ty=float64 */, %var_10419)
}

def @func_6336() -> (Tensor[(6, 12, 12), float32],) {
  %887 = @func_6211() /* ty=(Tensor[(6, 12, 12), float32], Tensor[(27, 1), uint8], Tensor[(1, 9, 3), float32]) */;
  %888 = %887.0;
  %889 = cast(%888, dtype="float32") /* ty=Tensor[(6, 12, 12), float32] */;
  %890 = sin(%889) /* ty=Tensor[(6, 12, 12), float32] */;
  (%890,)
}

def @func_4923(%var_4912: Tensor[(9, 1, 13), float64], %var_4918: float64) -> (Tensor[(9, 1, 13), float64], Tensor[(?, 15, ?), bool], float64, Tensor[(15), float64]) {
  %891 = cast(%var_4912, dtype="float64") /* ty=Tensor[(9, 1, 13), float64] */;
  %892 = cast(%var_4918, dtype="float64") /* ty=float64 */;
  %893 = cast(meta[relay.Constant][53] /* ty=Tensor[(15), float64] */, dtype="float64") /* ty=Tensor[(15), float64] */;
  %894 = reshape(%892, newshape=[]) /* ty=float64 */;
  %895 = reshape(%893, newshape=[1, 15, 1]) /* ty=Tensor[(1, 15, 1), float64] */;
  %896 = @func_3804(%894, %895) /* ty=(Tensor[(?, 15, ?), bool],) */;
  %897 = atan(%891) /* ty=Tensor[(9, 1, 13), float64] */;
  %898 = %896.0;
  (%897, %898, %var_4918, meta[relay.Constant][53] /* ty=Tensor[(15), float64] */)
}

def @func_11652() -> Tensor[(6, 12, 12), float32] {
  %899 = @func_7298() /* ty=(Tensor[(6, 12, 12), float32],) */;
  %899.0
}

def @func_10396(%var_10371: Tensor[(12, 11, 1), float64]) -> (Tensor[(12, 11, 1), float64],) {
  %900 = cast(%var_10371, dtype="float64") /* ty=Tensor[(12, 11, 1), float64] */;
  %901 = atan(%900) /* ty=Tensor[(12, 11, 1), float64] */;
  (%901,)
}

def @func_5011(%var_4992: Tensor[(12, 10, 6), bool], %var_4993: Tensor[(12, 10, 6), bool]) -> (Tensor[(12, 10, 6), bool],) {
  %902 = cast(%var_4993, dtype="bool") /* ty=Tensor[(12, 10, 6), bool] */;
  %903 = shape_of(%var_4992, dtype="int32") /* ty=Tensor[(3), int32] */;
  %904 = cast(%var_4992, dtype="bool") /* ty=Tensor[(12, 10, 6), bool] */;
  %905 = dyn.reshape(%902, %903, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %906 = logical_and(%904, %905) /* ty=Tensor[(12, 10, 6), bool] */;
  (%906,)
}

def @func_10352() -> (Tensor[(12, 15, 11), float32], Tensor[(5, 3, 15), float64]) {
  %907 = cast(meta[relay.Constant][54] /* ty=Tensor[(12, 15, 11), float32] */, dtype="float32") /* ty=Tensor[(12, 15, 11), float32] */;
  %908 = @func_8499() /* ty=(Tensor[(5, 3, 15), float64],) */;
  %909 = asinh(%907) /* ty=Tensor[(12, 15, 11), float32] */;
  %910 = %908.0;
  (%909, %910)
}

def @func_7832() -> (Tensor[(6, 12, 12), float32], Tensor[(7, 6, 10), uint64], Tensor[(420), uint64], Tensor[(?, 5, 8), bool], Tensor[(1, 40), uint8]) {
  %911 = @func_7298() /* ty=(Tensor[(6, 12, 12), float32],) */;
  %912 = cast(meta[relay.Constant][55] /* ty=Tensor[(420), uint64] */, dtype="uint64") /* ty=Tensor[(420), uint64] */;
  %913 = reshape(%912, newshape=[7, 6, 10]) /* ty=Tensor[(7, 6, 10), uint64] */;
  %914 = cast(meta[relay.Constant][56] /* ty=Tensor[(1, 40), uint8] */, dtype="uint8") /* ty=Tensor[(1, 40), uint8] */;
  %915 = cast(meta[relay.Constant][56] /* ty=Tensor[(1, 40), uint8] */, dtype="uint8") /* ty=Tensor[(1, 40), uint8] */;
  %916 = reshape(%914, newshape=[1, 5, 8]) /* ty=Tensor[(1, 5, 8), uint8] */;
  %917 = reshape(%915, newshape=[1, 5, 8]) /* ty=Tensor[(1, 5, 8), uint8] */;
  %918 = @func_801(%916, %917) /* ty=(Tensor[(?, 5, 8), bool], Tensor[(1, 5, 10), float64], int32) */;
  %919 = %911.0;
  %920 = @func_1823(%913) /* ty=Tensor[(7, 6, 10), uint64] */;
  %921 = %918.0;
  (%919, %920, meta[relay.Constant][55] /* ty=Tensor[(420), uint64] */, %921, meta[relay.Constant][56] /* ty=Tensor[(1, 40), uint8] */)
}

def @func_8882(%var_8866: Tensor[(720), int16]) -> (Tensor[(1, 9, 3), float32], Tensor[(2288), float64], Tensor[(720), int16], Tensor[(2288), float64]) {
  %922 = cast(%var_8866, dtype="int16") /* ty=Tensor[(720), int16] */;
  %923 = cast(meta[relay.Constant][57] /* ty=Tensor[(2288), float64] */, dtype="float64") /* ty=Tensor[(2288), float64] */;
  %924 = reshape(%922, newshape=[15, 12, 4]) /* ty=Tensor[(15, 12, 4), int16] */;
  %925 = reshape(%923, newshape=[2288]) /* ty=Tensor[(2288), float64] */;
  %926 = @func_529(%924, %925) /* ty=(Tensor[(15, 12, 4), bool], Tensor[(16, 13, 11), float64], Tensor[(2288), float64]) */;
  %927 = @func_7885() /* ty=Tensor[(1, 9, 3), float32] */;
  %928 = %926.2;
  (%927, %928, %var_8866, meta[relay.Constant][57] /* ty=Tensor[(2288), float64] */)
}

def @func_10849() -> (Tensor[(1, 9, 3), float32],) {
  %929 = @func_7694() /* ty=(Tensor[(1, 9, 3), float32],) */;
  %930 = %929.0;
  (%930,)
}

def @func_12390(%var_12384: Tensor[(54), float32]) -> (Tensor[(6, 12, 12), float32], Tensor[(2, 9, 3), uint8], Tensor[(54), float32]) {
  %931 = @func_7298() /* ty=(Tensor[(6, 12, 12), float32],) */;
  %932 = cast(%var_12384, dtype="float32") /* ty=Tensor[(54), float32] */;
  %933 = reshape(%932, newshape=[2, 9, 3]) /* ty=Tensor[(2, 9, 3), float32] */;
  %934 = %931.0;
  %935 = @func_12216(%933) /* ty=Tensor[(2, 9, 3), uint8] */;
  (%934, %935, %var_12384)
}

def @func_12333() -> (Tensor[(12, 15, 11), float32], Tensor[(5, 3, 15), float64]) {
  %936 = @func_10352() /* ty=(Tensor[(12, 15, 11), float32], Tensor[(5, 3, 15), float64]) */;
  %937 = @func_10022() /* ty=(Tensor[(5, 3, 15), float64],) */;
  %938 = %936.0;
  %939 = %937.0;
  (%938, %939)
}

/* For debugging purposes the metadata section has been omitted.
 * If you would like to see the full metadata section you can set the 
 * option to `True` when invoking `astext`. 
 */
===================================
==========mutated_mod==========
#[version = "0.0.5"]
def @func_10251() -> (Tensor[(6, 12, 12), float32], Tensor[(720), bool], Tensor[(12, 10, 6), float64], Tensor[(27, ?), uint16], Tensor[(1, 9, 3), float32]) {
  %28 = fn () -> (Tensor[(6, 12, 12), float32], Tensor[(720), bool], Tensor[(12, 10, 6), float64], Tensor[(27, ?), uint16], Tensor[(1, 9, 3), float32]) {
    %0 = @func_9853() /* ty=(Tensor[(6, 12, 12), float32],) */;
    %1 = cast(meta[relay.Constant][0] /* ty=Tensor[(720), bool] */, dtype="bool") /* ty=Tensor[(720), bool] */;
    %2 = cast(meta[relay.Constant][0] /* ty=Tensor[(720), bool] */, dtype="bool") /* ty=Tensor[(720), bool] */;
    %3 = reshape(%1, newshape=[12, 10, 6]) /* ty=Tensor[(12, 10, 6), bool] */;
    %4 = reshape(%2, newshape=[12, 10, 6]) /* ty=Tensor[(12, 10, 6), bool] */;
    %5 = @func_5011(%3, %4) /* ty=(Tensor[(12, 10, 6), bool],) */;
    %6 = %5.0;
    %7 = cast(%6, dtype="float64") /* ty=Tensor[(12, 10, 6), float64] */;
    %8 = @func_6211() /* ty=(Tensor[(6, 12, 12), float32], Tensor[(27, 1), uint8], Tensor[(1, 9, 3), float32]) */;
    %9 = %8.1;
    %10 = @func_8635() /* ty=(Tensor[(1, 9, 3), float32],) */;
    %11 = %10.0;
    %12 = cast(%11, dtype="bool") /* ty=Tensor[(1, 9, 3), bool] */;
    %13 = shape_of(%9, dtype="int32") /* ty=Tensor[(2), int32] */;
    %14 = cast(%9, dtype="bool") /* ty=Tensor[(27, 1), bool] */;
    %15 = dyn.reshape(%12, %13, newshape=[]) /* ty=Tensor[(?, ?), bool] */;
    %16 = greater(%14, %15) /* ty=Tensor[(27, ?), bool] */;
    %17 = cast(%11, dtype="uint16") /* ty=Tensor[(1, 9, 3), uint16] */;
    %18 = shape_of(%16, dtype="int32") /* ty=Tensor[(2), int32] */;
    %19 = cast(%16, dtype="uint16") /* ty=Tensor[(27, ?), uint16] */;
    %20 = dyn.reshape(%17, %18, newshape=[]) /* ty=Tensor[(?, ?), uint16] */;
    %21 = cast(%9, dtype="uint8") /* ty=Tensor[(27, 1), uint8] */;
    %22 = reshape(%21, newshape=[1, 9, 3]) /* ty=Tensor[(1, 9, 3), uint8] */;
    %23 = @func_2472(%22) /* ty=(Tensor[(?, 9, 3), uint8], Tensor[(1, 9, 3), float32]) */;
    %24 = %0.0;
    %25 = atan(%7) /* ty=Tensor[(12, 10, 6), float64] */;
    %26 = logical_xor(%19, %20) /* ty=Tensor[(27, ?), uint16] */;
    %27 = %23.1;
    (%24, meta[relay.Constant][0] /* ty=Tensor[(720), bool] */, %25, %26, %27)
  };
  %28() /* ty=(Tensor[(6, 12, 12), float32], Tensor[(720), bool], Tensor[(12, 10, 6), float64], Tensor[(27, ?), uint16], Tensor[(1, 9, 3), float32]) */
}

def @func_12216(%var_12207: Tensor[(2, 9, 3), float32]) -> Tensor[(2, 9, 3), uint8] {
  %29 = @func_10849() /* ty=(Tensor[(1, 9, 3), float32],) */;
  %30 = %29.0;
  %31 = cast(%30, dtype="uint8") /* ty=Tensor[(1, 9, 3), uint8] */;
  %32 = cast(%var_12207, dtype="uint8") /* ty=Tensor[(2, 9, 3), uint8] */;
  logical_xor(%31, %32) /* ty=Tensor[(2, 9, 3), uint8] */
}

def @func_1825(%var_1824: Tensor[(7, 6, 10), uint64]) -> Tensor[(7, 6, 10), uint64] {
  %37 = fn (%var_1809: Tensor[(7, 6, 10), uint64]) -> Tensor[(7, 6, 10), uint64] {
    %33 = cast(%var_1809, dtype="uint64") /* ty=Tensor[(7, 6, 10), uint64] */;
    %34 = shape_of(meta[relay.Constant][1] /* ty=Tensor[(7, 6, 10), uint64] */, dtype="int32") /* ty=Tensor[(3), int32] */;
    %35 = cast(meta[relay.Constant][1] /* ty=Tensor[(7, 6, 10), uint64] */, dtype="uint64") /* ty=Tensor[(7, 6, 10), uint64] */;
    %36 = dyn.reshape(%33, %34, newshape=[]) /* ty=Tensor[(?, ?, ?), uint64] */;
    left_shift(%35, %36) /* ty=Tensor[(7, 6, 10), uint64] */
  };
  %37(%var_1824) /* ty=Tensor[(7, 6, 10), uint64] */
}

def @func_6580(%var_6519: Tensor[(4, 168), float64], %var_6520: int32, %var_6550: Tensor[(169), float32]) -> (Tensor[(6, 12, 12), float64], Tensor[(6, 12, 12), float64], int32, int32, Tensor[(4, 168), float32], Tensor[(13, 1, 13), float32], Tensor[(169), float32]) {
  %38 = @func_6336() /* ty=(Tensor[(6, 12, 12), float32],) */;
  %39 = %38.0;
  %40 = cast(meta[relay.Constant][2] /* ty=Tensor[(6, 12, 12), float32] */, dtype="bool") /* ty=Tensor[(6, 12, 12), bool] */;
  %41 = shape_of(%39, dtype="int32") /* ty=Tensor[(3), int32] */;
  %42 = cast(%39, dtype="bool") /* ty=Tensor[(6, 12, 12), bool] */;
  %43 = dyn.reshape(%40, %41, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %44 = greater_equal(%42, %43) /* ty=Tensor[(6, 12, 12), bool] */;
  %45 = cast(%44, dtype="float64") /* ty=Tensor[(6, 12, 12), float64] */;
  %46 = cast(%39, dtype="float64") /* ty=Tensor[(6, 12, 12), float64] */;
  %47 = cast(%var_6519, dtype="float64") /* ty=Tensor[(4, 168), float64] */;
  %48 = cast(%var_6520, dtype="int32") /* ty=int32 */;
  %49 = reshape(%47, newshape=[14, 16, 3]) /* ty=Tensor[(14, 16, 3), float64] */;
  %50 = reshape(%48, newshape=[]) /* ty=int32 */;
  %51 = @func_2170(%49, %50) /* ty=(Tensor[(14, 16, 3), float64], Tensor[(4, 12, 7), float32], int32) */;
  %52 = cast(%var_6519, dtype="float32") /* ty=Tensor[(4, 168), float32] */;
  %53 = cast(%var_6550, dtype="float32") /* ty=Tensor[(169), float32] */;
  %54 = reshape(%53, newshape=[13, 1, 13]) /* ty=Tensor[(13, 1, 13), float32] */;
  %55 = log2(%45) /* ty=Tensor[(6, 12, 12), float64] */;
  %56 = cosh(%46) /* ty=Tensor[(6, 12, 12), float64] */;
  %57 = %51.2;
  %58 = acos(%52) /* ty=Tensor[(4, 168), float32] */;
  %59 = @func_5497(%54) /* ty=Tensor[(13, 1, 13), float32] */;
  (%55, %56, %57, %var_6520, %58, %59, %var_6550)
}

def @func_8175() -> Tensor[(1, 9, 3), float64] {
  @func_8173() /* ty=Tensor[(1, 9, 3), float64] */
}

def @func_7767() -> Tensor[(6, 12, 12), float32] {
  @func_7765() /* ty=Tensor[(6, 12, 12), float32] */
}

def @func_10081() -> (Tensor[(1, 9, 3), float64],) {
  %60 = @func_8173() /* ty=Tensor[(1, 9, 3), float64] */;
  (%60,)
}

def @func_7885() -> Tensor[(1, 9, 3), float32] {
  %61 = @func_7694() /* ty=(Tensor[(1, 9, 3), float32],) */;
  %61.0
}

def @func_11801(%var_11791: int32) -> (Tensor[(6, 12, 12), float32], Tensor[(1, 5, 10), float64], Tensor[(11, 66), int64], int32, Tensor[(1, 9, 3), float32]) {
  %62 = @func_6135() /* ty=(Tensor[(6, 12, 12), float32], Tensor[(6, 12, 12), float32]) */;
  %63 = cast(meta[relay.Constant][3] /* ty=Tensor[(11, 66), int64] */, dtype="int64") /* ty=Tensor[(11, 66), int64] */;
  %64 = cast(%var_11791, dtype="int32") /* ty=int32 */;
  %65 = reshape(%63, newshape=[6, 11, 11]) /* ty=Tensor[(6, 11, 11), int64] */;
  %66 = reshape(%64, newshape=[]) /* ty=int32 */;
  %67 = @func_2588(%65, %66) /* ty=(Tensor[(1, 5, 10), float64], Tensor[(6, 11, 11), float32]) */;
  %68 = cast(%var_11791, dtype="float64") /* ty=float64 */;
  %69 = reshape(%68, newshape=[]) /* ty=float64 */;
  %70 = @func_11025(%69) /* ty=(Tensor[(1, 9, 3), float32], Tensor[(6, 12, 12), float32], float64) */;
  %71 = %62.0;
  %72 = %67.0;
  %73 = %70.0;
  (%71, %72, meta[relay.Constant][3] /* ty=Tensor[(11, 66), int64] */, %var_11791, %73)
}

def @func_12042() -> (Tensor[(1, 9, 3), float32],) {
  %74 = @func_6772() /* ty=Tensor[(1, 9, 3), float32] */;
  (%74,)
}

def @func_12130() -> (Tensor[(1, 9, 3), float32], Tensor[(6, 12, 12), float32]) {
  %78 = fn () -> (Tensor[(1, 9, 3), float32], Tensor[(6, 12, 12), float32]) {
    %75 = @func_7694() /* ty=(Tensor[(1, 9, 3), float32],) */;
    %76 = %75.0;
    %77 = @func_6270() /* ty=Tensor[(6, 12, 12), float32] */;
    (%76, %77)
  };
  %78() /* ty=(Tensor[(1, 9, 3), float32], Tensor[(6, 12, 12), float32]) */
}

def @func_11405() -> Tensor[(1, 15), float64] {
  @func_8546() /* ty=Tensor[(1, 15), float64] */
}

def @func_12296() -> (Tensor[(1, 9, 3), float32], Tensor[(4, 10, 1), float32]) {
  %79 = @func_7885() /* ty=Tensor[(1, 9, 3), float32] */;
  %80 = @func_11498() /* ty=Tensor[(4, 10, 1), float32] */;
  (%79, %80)
}

def @func_12334() -> (Tensor[(12, 15, 11), float32], Tensor[(5, 3, 15), float64]) {
  %85 = fn () -> (Tensor[(12, 15, 11), float32], Tensor[(5, 3, 15), float64]) {
    %81 = @func_10352() /* ty=(Tensor[(12, 15, 11), float32], Tensor[(5, 3, 15), float64]) */;
    %82 = @func_10022() /* ty=(Tensor[(5, 3, 15), float64],) */;
    %83 = %81.0;
    %84 = %82.0;
    (%83, %84)
  };
  %85() /* ty=(Tensor[(12, 15, 11), float32], Tensor[(5, 3, 15), float64]) */
}

def @func_9742() -> (Tensor[(1, 9, 3), float64],) {
  %86 = @func_9505() /* ty=Tensor[(1, 9, 3), float32] */;
  %87 = cast(%86, dtype="float64") /* ty=Tensor[(1, 9, 3), float64] */;
  %88 = exp(%87) /* ty=Tensor[(1, 9, 3), float64] */;
  (%88,)
}

def @func_4824(%var_4781: Tensor[(12, 9, 14), float64], %var_4788: Tensor[(336), float32], %var_4809: Tensor[(2288), float64]) -> (Tensor[(12, 9, 14), float64], Tensor[(4, 12, 7), float32], Tensor[(336), float32], Tensor[(16, 13, 11), float64], Tensor[(2288), float64]) {
  %89 = cast(meta[relay.Constant][4] /* ty=Tensor[(12, 9, 14), float64] */, dtype="float64") /* ty=Tensor[(12, 9, 14), float64] */;
  %90 = shape_of(%var_4781, dtype="int32") /* ty=Tensor[(3), int32] */;
  %91 = cast(%var_4781, dtype="float64") /* ty=Tensor[(12, 9, 14), float64] */;
  %92 = dyn.reshape(%89, %90, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %93 = cast(%var_4788, dtype="float32") /* ty=Tensor[(336), float32] */;
  %94 = reshape(%93, newshape=[4, 12, 7]) /* ty=Tensor[(4, 12, 7), float32] */;
  %95 = cast(%var_4809, dtype="float64") /* ty=Tensor[(2288), float64] */;
  %96 = reshape(%95, newshape=[16, 13, 11]) /* ty=Tensor[(16, 13, 11), float64] */;
  %97 = @func_343(%96) /* ty=(Tensor[(16, 13, 11), float64],) */;
  %98 = add(%91, %92) /* ty=Tensor[(12, 9, 14), float64] */;
  %99 = @func_40(%94) /* ty=Tensor[(4, 12, 7), float32] */;
  %100 = %97.0;
  (%98, %99, %var_4788, %100, %var_4809)
}

def @func_7911(%var_7908: float64) -> (Tensor[(6, 12, 12), float32], Tensor[(6, 12, 12), float32], Tensor[(117, 1), float64], float64) {
  %101 = cast(meta[relay.Constant][5] /* ty=Tensor[(117, 1), float64] */, dtype="float64") /* ty=Tensor[(117, 1), float64] */;
  %102 = cast(%var_7908, dtype="float64") /* ty=float64 */;
  %103 = reshape(%101, newshape=[117]) /* ty=Tensor[(117), float64] */;
  %104 = reshape(%102, newshape=[]) /* ty=float64 */;
  %105 = @func_6406(%103, %104) /* ty=(Tensor[(6, 12, 12), float32], Tensor[(?, 15, ?), bool], Tensor[(117), float64], float64, Tensor[(6, 12, 12), float32]) */;
  %106 = @func_7765() /* ty=Tensor[(6, 12, 12), float32] */;
  %107 = %105.4;
  (%106, %107, meta[relay.Constant][5] /* ty=Tensor[(117, 1), float64] */, %var_7908)
}

def @func_11183() -> (Tensor[(6, 12, 12), float32], Tensor[(16, 13, 11), float64], Tensor[(720), int16], Tensor[(88, 26), float64]) {
  %115 = fn () -> (Tensor[(6, 12, 12), float32], Tensor[(16, 13, 11), float64], Tensor[(720), int16], Tensor[(88, 26), float64]) {
    %108 = cast(meta[relay.Constant][6] /* ty=Tensor[(720), int16] */, dtype="int16") /* ty=Tensor[(720), int16] */;
    %109 = cast(meta[relay.Constant][7] /* ty=Tensor[(88, 26), float64] */, dtype="float64") /* ty=Tensor[(88, 26), float64] */;
    %110 = reshape(%108, newshape=[15, 12, 4]) /* ty=Tensor[(15, 12, 4), int16] */;
    %111 = reshape(%109, newshape=[2288]) /* ty=Tensor[(2288), float64] */;
    %112 = @func_529(%110, %111) /* ty=(Tensor[(15, 12, 4), bool], Tensor[(16, 13, 11), float64], Tensor[(2288), float64]) */;
    %113 = @func_7765() /* ty=Tensor[(6, 12, 12), float32] */;
    %114 = %112.1;
    (%113, %114, meta[relay.Constant][6] /* ty=Tensor[(720), int16] */, meta[relay.Constant][7] /* ty=Tensor[(88, 26), float64] */)
  };
  %115() /* ty=(Tensor[(6, 12, 12), float32], Tensor[(16, 13, 11), float64], Tensor[(720), int16], Tensor[(88, 26), float64]) */
}

def @func_11374(%var_11372: Tensor[(6, 15, 10), float64]) -> (Tensor[(6, 15, 10), float64], Tensor[(8, 12, 9), uint32], Tensor[(864), float64]) {
  @func_11371(%var_11372) /* ty=(Tensor[(6, 15, 10), float64], Tensor[(8, 12, 9), uint32], Tensor[(864), float64]) */
}

def @func_1444(%var_1399: int8, %var_1400: Tensor[(3, 1, 15), int8], %var_1442: Tensor[(720), int16]) -> (Tensor[(3, 1, 15), int8], Tensor[(2288), float64], Tensor[(16, 13, 11), float32], Tensor[(3, 1, 15), bool], Tensor[(16, 13, 11), float64], Tensor[(720), int16]) {
  %116 = cast(%var_1399, dtype="int8") /* ty=int8 */;
  %117 = cast(%var_1400, dtype="int8") /* ty=Tensor[(3, 1, 15), int8] */;
  %118 = cast(meta[relay.Constant][8] /* ty=Tensor[(2288), float64] */, dtype="float64") /* ty=Tensor[(2288), float64] */;
  %119 = reshape(%118, newshape=[16, 13, 11]) /* ty=Tensor[(16, 13, 11), float64] */;
  %120 = @func_343(%119) /* ty=(Tensor[(16, 13, 11), float64],) */;
  %121 = %120.0;
  %122 = cast(%121, dtype="float64") /* ty=Tensor[(16, 13, 11), float64] */;
  %123 = reshape(%122, newshape=[16, 13, 11]) /* ty=Tensor[(16, 13, 11), float64] */;
  %124 = @func_343(%123) /* ty=(Tensor[(16, 13, 11), float64],) */;
  %125 = %124.0;
  %126 = cast(%125, dtype="float32") /* ty=Tensor[(16, 13, 11), float32] */;
  %127 = shape_of(%121, dtype="int32") /* ty=Tensor[(3), int32] */;
  %128 = cast(%121, dtype="float32") /* ty=Tensor[(16, 13, 11), float32] */;
  %129 = dyn.reshape(%126, %127, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %130 = cast(%var_1400, dtype="bool") /* ty=Tensor[(3, 1, 15), bool] */;
  %131 = cast(%var_1399, dtype="bool") /* ty=bool */;
  %132 = cast(%var_1442, dtype="int16") /* ty=Tensor[(720), int16] */;
  %133 = cast(%125, dtype="float64") /* ty=Tensor[(16, 13, 11), float64] */;
  %134 = reshape(%132, newshape=[15, 12, 4]) /* ty=Tensor[(15, 12, 4), int16] */;
  %135 = reshape(%133, newshape=[2288]) /* ty=Tensor[(2288), float64] */;
  %136 = @func_529(%134, %135) /* ty=(Tensor[(15, 12, 4), bool], Tensor[(16, 13, 11), float64], Tensor[(2288), float64]) */;
  %137 = bitwise_or(%116, %117) /* ty=Tensor[(3, 1, 15), int8] */;
  %138 = floor_mod(%128, %129) /* ty=Tensor[(16, 13, 11), float32] */;
  %139 = greater(%130, %131) /* ty=Tensor[(3, 1, 15), bool] */;
  %140 = %136.1;
  (%137, meta[relay.Constant][8] /* ty=Tensor[(2288), float64] */, %138, %139, %140, %var_1442)
}

def @func_10746() -> Tensor[(1, 9, 3), float32] {
  %141 = fn () -> Tensor[(1, 9, 3), float32] {
    @func_7885() /* ty=Tensor[(1, 9, 3), float32] */
  };
  %141() /* ty=Tensor[(1, 9, 3), float32] */
}

def @func_2174(%var_2172: Tensor[(14, 16, 3), float64], %var_2173: int32) -> (Tensor[(14, 16, 3), float64], Tensor[(4, 12, 7), float32], int32) {
  @func_2170(%var_2172, %var_2173) /* ty=(Tensor[(14, 16, 3), float64], Tensor[(4, 12, 7), float32], int32) */
}

def @func_10942(%var_10940: int8, %var_10941: Tensor[(45), int8]) -> (Tensor[(1, 9, 3), float32], Tensor[(1, 9, 3), float64], Tensor[(3, 1, 15), bool], int8, Tensor[(45), int8], Tensor[(2, 360), int16]) {
  @func_10938(%var_10940, %var_10941) /* ty=(Tensor[(1, 9, 3), float32], Tensor[(1, 9, 3), float64], Tensor[(3, 1, 15), bool], int8, Tensor[(45), int8], Tensor[(2, 360), int16]) */
}

def @func_5053(%var_5017: float64, %var_5018: Tensor[(16, 10, 12), float64]) -> (Tensor[(336), float32], Tensor[(16, 10, 12), float64], Tensor[(16, 10, 12), float64], Tensor[(7, 6, 10), uint64], Tensor[(420), uint64]) {
  %142 = cast(%var_5017, dtype="int32") /* ty=int32 */;
  %143 = reshape(%142, newshape=[]) /* ty=int32 */;
  %144 = @func_95(%143) /* ty=(Tensor[(15, 15, 10), int32], Tensor[(4, 12, 7), float32], Tensor[(336), float32]) */;
  %145 = cast(%var_5017, dtype="float64") /* ty=float64 */;
  %146 = cast(%var_5018, dtype="float64") /* ty=Tensor[(16, 10, 12), float64] */;
  %147 = power(%145, %146) /* ty=Tensor[(16, 10, 12), float64] */;
  %148 = cast(%147, dtype="float64") /* ty=Tensor[(16, 10, 12), float64] */;
  %149 = cast(%var_5017, dtype="float64") /* ty=float64 */;
  %150 = cast(%var_5018, dtype="float64") /* ty=Tensor[(16, 10, 12), float64] */;
  %151 = cast(meta[relay.Constant][9] /* ty=Tensor[(420), uint64] */, dtype="uint64") /* ty=Tensor[(420), uint64] */;
  %152 = reshape(%151, newshape=[7, 6, 10]) /* ty=Tensor[(7, 6, 10), uint64] */;
  %153 = %144.2;
  %154 = add(%148, %149) /* ty=Tensor[(16, 10, 12), float64] */;
  %155 = asin(%150) /* ty=Tensor[(16, 10, 12), float64] */;
  %156 = @func_1823(%152) /* ty=Tensor[(7, 6, 10), uint64] */;
  (%153, %154, %155, %156, meta[relay.Constant][9] /* ty=Tensor[(420), uint64] */)
}

def @func_5057(%var_5055: float64, %var_5056: Tensor[(16, 10, 12), float64]) -> (Tensor[(336), float32], Tensor[(16, 10, 12), float64], Tensor[(16, 10, 12), float64], Tensor[(7, 6, 10), uint64], Tensor[(420), uint64]) {
  @func_5053(%var_5055, %var_5056) /* ty=(Tensor[(336), float32], Tensor[(16, 10, 12), float64], Tensor[(16, 10, 12), float64], Tensor[(7, 6, 10), uint64], Tensor[(420), uint64]) */
}

def @func_5499(%var_5498: Tensor[(13, 1, 13), float32]) -> Tensor[(13, 1, 13), float32] {
  %158 = fn (%var_5486: Tensor[(13, 1, 13), float32]) -> Tensor[(13, 1, 13), float32] {
    %157 = cast(%var_5486, dtype="float32") /* ty=Tensor[(13, 1, 13), float32] */;
    cos(%157) /* ty=Tensor[(13, 1, 13), float32] */
  };
  %158(%var_5498) /* ty=Tensor[(13, 1, 13), float32] */
}

def @func_6802(%var_6800: Tensor[(15), float64]) -> (Tensor[(1, 9, 3), float32], Tensor[(4, 7, 13), float64], Tensor[(364), float64], Tensor[(?, 15, ?), bool], float64, Tensor[(15), float64]) {
  @func_6799(%var_6800) /* ty=(Tensor[(1, 9, 3), float32], Tensor[(4, 7, 13), float64], Tensor[(364), float64], Tensor[(?, 15, ?), bool], float64, Tensor[(15), float64]) */
}

def @func_9744() -> (Tensor[(1, 9, 3), float64],) {
  @func_9742() /* ty=(Tensor[(1, 9, 3), float64],) */
}

def @func_9507() -> Tensor[(1, 9, 3), float32] {
  @func_9505() /* ty=Tensor[(1, 9, 3), float32] */
}

def @func_7213() -> Tensor[(6, 12, 12), float32] {
  @func_7211() /* ty=Tensor[(6, 12, 12), float32] */
}

def @func_8941(%var_8910: Tensor[(13, 40), uint8]) -> (Tensor[(13, 40), uint8], Tensor[(1, 9, 3), float32], Tensor[(13, 40), int16]) {
  %159 = @func_7832() /* ty=(Tensor[(6, 12, 12), float32], Tensor[(7, 6, 10), uint64], Tensor[(420), uint64], Tensor[(?, 5, 8), bool], Tensor[(1, 40), uint8]) */;
  %160 = %159.4;
  %161 = cast(%160, dtype="uint8") /* ty=Tensor[(1, 40), uint8] */;
  %162 = cast(%var_8910, dtype="uint8") /* ty=Tensor[(13, 40), uint8] */;
  %163 = @func_7694() /* ty=(Tensor[(1, 9, 3), float32],) */;
  %164 = cast(%160, dtype="bool") /* ty=Tensor[(1, 40), bool] */;
  %165 = cast(%var_8910, dtype="bool") /* ty=Tensor[(13, 40), bool] */;
  %166 = equal(%164, %165) /* ty=Tensor[(13, 40), bool] */;
  %167 = cast(%var_8910, dtype="int16") /* ty=Tensor[(13, 40), int16] */;
  %168 = shape_of(%166, dtype="int32") /* ty=Tensor[(2), int32] */;
  %169 = cast(%166, dtype="int16") /* ty=Tensor[(13, 40), int16] */;
  %170 = dyn.reshape(%167, %168, newshape=[]) /* ty=Tensor[(?, ?), int16] */;
  %171 = bitwise_or(%161, %162) /* ty=Tensor[(13, 40), uint8] */;
  %172 = %163.0;
  %173 = multiply(%169, %170) /* ty=Tensor[(13, 40), int16] */;
  (%171, %172, %173)
}

def @func_12644() -> (Tensor[(1, 9, 3), float64], Tensor[(1, 9, 3), float32], Tensor[(2, 9, 3), uint8], Tensor[(1, 54), float32]) {
  @func_12642() /* ty=(Tensor[(1, 9, 3), float64], Tensor[(1, 9, 3), float32], Tensor[(2, 9, 3), uint8], Tensor[(1, 54), float32]) */
}

def @func_6409(%var_6407: Tensor[(117), float64], %var_6408: float64) -> (Tensor[(6, 12, 12), float32], Tensor[(?, 15, ?), bool], Tensor[(117), float64], float64, Tensor[(6, 12, 12), float32]) {
  %184 = fn (%var_6394: Tensor[(117), float64], %var_6395: float64) -> (Tensor[(6, 12, 12), float32], Tensor[(?, 15, ?), bool], Tensor[(117), float64], float64, Tensor[(6, 12, 12), float32]) {
    %174 = @func_6336() /* ty=(Tensor[(6, 12, 12), float32],) */;
    %175 = cast(%var_6394, dtype="float64") /* ty=Tensor[(117), float64] */;
    %176 = cast(%var_6395, dtype="float64") /* ty=float64 */;
    %177 = reshape(%175, newshape=[9, 1, 13]) /* ty=Tensor[(9, 1, 13), float64] */;
    %178 = reshape(%176, newshape=[]) /* ty=float64 */;
    %179 = @func_4923(%177, %178) /* ty=(Tensor[(9, 1, 13), float64], Tensor[(?, 15, ?), bool], float64, Tensor[(15), float64]) */;
    %180 = @func_6336() /* ty=(Tensor[(6, 12, 12), float32],) */;
    %181 = %174.0;
    %182 = %179.1;
    %183 = %180.0;
    (%181, %182, %var_6394, %var_6395, %183)
  };
  %184(%var_6407, %var_6408) /* ty=(Tensor[(6, 12, 12), float32], Tensor[(?, 15, ?), bool], Tensor[(117), float64], float64, Tensor[(6, 12, 12), float32]) */
}

def @func_11313(%var_11310: float64, %var_11311: Tensor[(216), float32], %var_11312: Tensor[(108), float32]) -> (Tensor[(1, 9, 3), float32], Tensor[(?, 15, ?), bool], Tensor[(15), float64], Tensor[(14, 3, 9), bool], Tensor[(378), int32], Tensor[(15), float64], Tensor[(216), float32], Tensor[(108), float32], Tensor[(2, 1144), float64], Tensor[(6, 12, 12), uint64], Tensor[(1, 9, 3), float32]) {
  @func_11308(%var_11310, %var_11311, %var_11312) /* ty=(Tensor[(1, 9, 3), float32], Tensor[(?, 15, ?), bool], Tensor[(15), float64], Tensor[(14, 3, 9), bool], Tensor[(378), int32], Tensor[(15), float64], Tensor[(216), float32], Tensor[(108), float32], Tensor[(2, 1144), float64], Tensor[(6, 12, 12), uint64], Tensor[(1, 9, 3), float32]) */
}

def @func_7684(%var_7683: Tensor[(364), float64]) -> (Tensor[(6, 12, 12), float32], Tensor[(8, 12, 9), uint32], Tensor[(1, 9, 3), float32], Tensor[(1, 9, 3), float32], Tensor[(364), float64], Tensor[(4, 7, 13), float32], Tensor[(1, 9, 3), float32]) {
  %201 = fn (%var_7666: Tensor[(364), float64]) -> (Tensor[(6, 12, 12), float32], Tensor[(8, 12, 9), uint32], Tensor[(1, 9, 3), float32], Tensor[(1, 9, 3), float32], Tensor[(364), float64], Tensor[(4, 7, 13), float32], Tensor[(1, 9, 3), float32]) {
    %185 = @func_6336() /* ty=(Tensor[(6, 12, 12), float32],) */;
    %186 = %185.0;
    %187 = cast(%186, dtype="float64") /* ty=Tensor[(6, 12, 12), float64] */;
    %188 = reshape(%187, newshape=[8, 12, 9]) /* ty=Tensor[(8, 12, 9), float64] */;
    %189 = @func_7446() /* ty=(Tensor[(1, 9, 3), float32],) */;
    %190 = @func_7446() /* ty=(Tensor[(1, 9, 3), float32],) */;
    %191 = cast(%var_7666, dtype="float64") /* ty=Tensor[(364), float64] */;
    %192 = reshape(%191, newshape=[4, 7, 13]) /* ty=Tensor[(4, 7, 13), float64] */;
    %193 = @func_3362(%192) /* ty=Tensor[(4, 7, 13), float64] */;
    %194 = cast(%193, dtype="float32") /* ty=Tensor[(4, 7, 13), float32] */;
    %195 = @func_6676() /* ty=(Tensor[(1, 9, 3), float32],) */;
    %196 = @func_3153(%188) /* ty=Tensor[(8, 12, 9), uint32] */;
    %197 = %189.0;
    %198 = %190.0;
    %199 = exp(%194) /* ty=Tensor[(4, 7, 13), float32] */;
    %200 = %195.0;
    (%186, %196, %197, %198, %var_7666, %199, %200)
  };
  %201(%var_7683) /* ty=(Tensor[(6, 12, 12), float32], Tensor[(8, 12, 9), uint32], Tensor[(1, 9, 3), float32], Tensor[(1, 9, 3), float32], Tensor[(364), float64], Tensor[(4, 7, 13), float32], Tensor[(1, 9, 3), float32]) */
}

def @func_8500() -> (Tensor[(5, 3, 15), float64],) {
  %204 = fn () -> (Tensor[(5, 3, 15), float64],) {
    %202 = cast(meta[relay.Constant][10] /* ty=Tensor[(5, 3, 15), float64] */, dtype="float64") /* ty=Tensor[(5, 3, 15), float64] */;
    %203 = acosh(%202) /* ty=Tensor[(5, 3, 15), float64] */;
    (%203,)
  };
  %204() /* ty=(Tensor[(5, 3, 15), float64],) */
}

def @func_8714() -> (Tensor[(1, 9, 3), float32], int32, Tensor[(40), uint8], Tensor[(2, 1144), float64]) {
  %222 = fn () -> (Tensor[(1, 9, 3), float32], int32, Tensor[(40), uint8], Tensor[(2, 1144), float64]) {
    %205 = @func_8635() /* ty=(Tensor[(1, 9, 3), float32],) */;
    %206 = cast(meta[relay.Constant][11] /* ty=Tensor[(40), uint8] */, dtype="uint8") /* ty=Tensor[(40), uint8] */;
    %207 = cast(meta[relay.Constant][11] /* ty=Tensor[(40), uint8] */, dtype="uint8") /* ty=Tensor[(40), uint8] */;
    %208 = reshape(%206, newshape=[1, 5, 8]) /* ty=Tensor[(1, 5, 8), uint8] */;
    %209 = reshape(%207, newshape=[1, 5, 8]) /* ty=Tensor[(1, 5, 8), uint8] */;
    %210 = @func_801(%208, %209) /* ty=(Tensor[(?, 5, 8), bool], Tensor[(1, 5, 10), float64], int32) */;
    %211 = cast(meta[relay.Constant][12] /* ty=Tensor[(2, 1144), float64] */, dtype="float64") /* ty=Tensor[(2, 1144), float64] */;
    %212 = reshape(%211, newshape=[16, 13, 11]) /* ty=Tensor[(16, 13, 11), float64] */;
    %213 = @func_343(%212) /* ty=(Tensor[(16, 13, 11), float64],) */;
    %214 = %213.0;
    %215 = cast(%214, dtype="float64") /* ty=Tensor[(16, 13, 11), float64] */;
    %216 = shape_of(meta[relay.Constant][12] /* ty=Tensor[(2, 1144), float64] */, dtype="int32") /* ty=Tensor[(2), int32] */;
    %217 = cast(meta[relay.Constant][12] /* ty=Tensor[(2, 1144), float64] */, dtype="float64") /* ty=Tensor[(2, 1144), float64] */;
    %218 = dyn.reshape(%215, %216, newshape=[]) /* ty=Tensor[(?, ?), float64] */;
    %219 = %205.0;
    %220 = %210.2;
    %221 = divide(%217, %218) /* ty=Tensor[(2, 1144), float64] */;
    (%219, %220, meta[relay.Constant][11] /* ty=Tensor[(40), uint8] */, %221)
  };
  %222() /* ty=(Tensor[(1, 9, 3), float32], int32, Tensor[(40), uint8], Tensor[(2, 1144), float64]) */
}

def @func_9825(%var_9822: Tensor[(8, 9, 3), float32], %var_9823: int32, %var_9824: Tensor[(108), float32]) -> (Tensor[(8, 9, 3), float64], Tensor[(8, 9, 3), float64], Tensor[(6, 12, 12), float64], Tensor[(6, 11, 11), float32], Tensor[(726), int64], int32, Tensor[(6, 11, 11), float32], Tensor[(108), float32], Tensor[(15), float64], Tensor[(2288), float64], Tensor[(720), int16], Tensor[(6, 12, 12), float32]) {
  %250 = fn (%var_9754: Tensor[(8, 9, 3), float32], %var_9773: int32, %var_9783: Tensor[(108), float32]) -> (Tensor[(8, 9, 3), float64], Tensor[(8, 9, 3), float64], Tensor[(6, 12, 12), float64], Tensor[(6, 11, 11), float32], Tensor[(726), int64], int32, Tensor[(6, 11, 11), float32], Tensor[(108), float32], Tensor[(15), float64], Tensor[(2288), float64], Tensor[(720), int16], Tensor[(6, 12, 12), float32]) {
    %223 = @func_6772() /* ty=Tensor[(1, 9, 3), float32] */;
    %224 = cast(%223, dtype="float64") /* ty=Tensor[(1, 9, 3), float64] */;
    %225 = cast(%var_9754, dtype="float64") /* ty=Tensor[(8, 9, 3), float64] */;
    %226 = cast(%var_9754, dtype="float64") /* ty=Tensor[(8, 9, 3), float64] */;
    %227 = @func_9554() /* ty=(Tensor[(6, 12, 12), float64],) */;
    %228 = cast(meta[relay.Constant][13] /* ty=Tensor[(726), int64] */, dtype="int64") /* ty=Tensor[(726), int64] */;
    %229 = cast(%var_9773, dtype="int32") /* ty=int32 */;
    %230 = reshape(%228, newshape=[6, 11, 11]) /* ty=Tensor[(6, 11, 11), int64] */;
    %231 = reshape(%229, newshape=[]) /* ty=int32 */;
    %232 = @func_2588(%230, %231) /* ty=(Tensor[(1, 5, 10), float64], Tensor[(6, 11, 11), float32]) */;
    %233 = cast(%var_9783, dtype="float32") /* ty=Tensor[(108), float32] */;
    %234 = cast(%var_9773, dtype="int32") /* ty=int32 */;
    %235 = cast(meta[relay.Constant][14] /* ty=Tensor[(15), float64] */, dtype="float64") /* ty=Tensor[(15), float64] */;
    %236 = reshape(%233, newshape=[9, 4, 3]) /* ty=Tensor[(9, 4, 3), float32] */;
    %237 = reshape(%234, newshape=[]) /* ty=int32 */;
    %238 = reshape(%235, newshape=[15]) /* ty=Tensor[(15), float64] */;
    %239 = @func_5233(%236, %237, %238) /* ty=(Tensor[(9, 4, 3), float32], Tensor[(4, 12, 7), float32], int32, Tensor[(6, 11, 11), float32], Tensor[(726), int64], Tensor[(?, 15, ?), bool], Tensor[(15), float64]) */;
    %240 = cast(meta[relay.Constant][15] /* ty=Tensor[(720), int16] */, dtype="int16") /* ty=Tensor[(720), int16] */;
    %241 = reshape(%240, newshape=[720]) /* ty=Tensor[(720), int16] */;
    %242 = @func_8882(%241) /* ty=(Tensor[(1, 9, 3), float32], Tensor[(2288), float64], Tensor[(720), int16], Tensor[(2288), float64]) */;
    %243 = maximum(%224, %225) /* ty=Tensor[(8, 9, 3), float64] */;
    %244 = log10(%226) /* ty=Tensor[(8, 9, 3), float64] */;
    %245 = %227.0;
    %246 = %232.1;
    %247 = %239.3;
    %248 = %242.1;
    %249 = @func_7850() /* ty=Tensor[(6, 12, 12), float32] */;
    (%243, %244, %245, %246, meta[relay.Constant][13] /* ty=Tensor[(726), int64] */, %var_9773, %247, %var_9783, meta[relay.Constant][14] /* ty=Tensor[(15), float64] */, %248, meta[relay.Constant][15] /* ty=Tensor[(720), int16] */, %249)
  };
  %250(%var_9822, %var_9823, %var_9824) /* ty=(Tensor[(8, 9, 3), float64], Tensor[(8, 9, 3), float64], Tensor[(6, 12, 12), float64], Tensor[(6, 11, 11), float32], Tensor[(726), int64], int32, Tensor[(6, 11, 11), float32], Tensor[(108), float32], Tensor[(15), float64], Tensor[(2288), float64], Tensor[(720), int16], Tensor[(6, 12, 12), float32]) */
}

def @func_12298() -> (Tensor[(1, 9, 3), float32], Tensor[(4, 10, 1), float32]) {
  @func_12296() /* ty=(Tensor[(1, 9, 3), float32], Tensor[(4, 10, 1), float32]) */
}

def @func_7299() -> (Tensor[(6, 12, 12), float32],) {
  %252 = fn () -> (Tensor[(6, 12, 12), float32],) {
    %251 = @func_6704() /* ty=Tensor[(6, 12, 12), float32] */;
    (%251,)
  };
  %252() /* ty=(Tensor[(6, 12, 12), float32],) */
}

def @func_10433(%var_10419: Tensor[(4, 480), float64]) -> (Tensor[(6, 12, 12), float32], Tensor[(16, 10, 12), float64], float64, Tensor[(4, 480), float64]) {
  %253 = @func_8818() /* ty=(Tensor[(6, 12, 12), float32],) */;
  %254 = cast(0.226905f64 /* ty=float64 */, dtype="float64") /* ty=float64 */;
  %255 = cast(%var_10419, dtype="float64") /* ty=Tensor[(4, 480), float64] */;
  %256 = reshape(%254, newshape=[]) /* ty=float64 */;
  %257 = reshape(%255, newshape=[1920]) /* ty=Tensor[(1920), float64] */;
  %258 = @func_9841(%256, %257) /* ty=(Tensor[(6, 12, 12), float32], Tensor[(16, 10, 12), float64], float64, Tensor[(1920), float64]) */;
  %259 = %253.0;
  %260 = %258.1;
  (%259, %260, 0.226905f64 /* ty=float64 */, %var_10419)
}

def @func_5015(%var_5013: Tensor[(12, 10, 6), bool], %var_5014: Tensor[(12, 10, 6), bool]) -> (Tensor[(12, 10, 6), bool],) {
  @func_5011(%var_5013, %var_5014) /* ty=(Tensor[(12, 10, 6), bool],) */
}

def @func_3153(%var_3142: Tensor[(8, 12, 9), float64]) -> Tensor[(8, 12, 9), uint32] {
  %261 = cast(%var_3142, dtype="float64") /* ty=Tensor[(8, 12, 9), float64] */;
  %262 = sqrt(%261) /* ty=Tensor[(8, 12, 9), float64] */;
  %263 = cast(%var_3142, dtype="uint32") /* ty=Tensor[(8, 12, 9), uint32] */;
  %264 = shape_of(%262, dtype="int32") /* ty=Tensor[(3), int32] */;
  %265 = cast(%262, dtype="uint32") /* ty=Tensor[(8, 12, 9), uint32] */;
  %266 = dyn.reshape(%263, %264, newshape=[]) /* ty=Tensor[(?, ?, ?), uint32] */;
  logical_xor(%265, %266) /* ty=Tensor[(8, 12, 9), uint32] */
}

def @func_7395() -> Tensor[(6, 12, 12), float32] {
  %268 = fn () -> Tensor[(6, 12, 12), float32] {
    %267 = @func_7298() /* ty=(Tensor[(6, 12, 12), float32],) */;
    %267.0
  };
  %268() /* ty=Tensor[(6, 12, 12), float32] */
}

def @func_9644() -> (Tensor[(1, 9, 3), float32], Tensor[(40), uint8]) {
  %269 = @func_7694() /* ty=(Tensor[(1, 9, 3), float32],) */;
  %270 = @func_8856() /* ty=(Tensor[(40), uint8], Tensor[(1, 9, 3), float32]) */;
  %271 = %269.0;
  %272 = %270.0;
  (%271, %272)
}

def @func_6271() -> Tensor[(6, 12, 12), float32] {
  %274 = fn () -> Tensor[(6, 12, 12), float32] {
    %273 = @func_6135() /* ty=(Tensor[(6, 12, 12), float32], Tensor[(6, 12, 12), float32]) */;
    %273.1
  };
  %274() /* ty=Tensor[(6, 12, 12), float32] */
}

def @func_7024(%var_7022: Tensor[(27, 13), float32]) -> (Tensor[(27, ?), int64], Tensor[(27, 13), int32]) {
  @func_7021(%var_7022) /* ty=(Tensor[(27, ?), int64], Tensor[(27, 13), int32]) */
}

def @func_10938(%var_10923: int8, %var_10924: Tensor[(45), int8]) -> (Tensor[(1, 9, 3), float32], Tensor[(1, 9, 3), float64], Tensor[(3, 1, 15), bool], int8, Tensor[(45), int8], Tensor[(2, 360), int16]) {
  %275 = cast(%var_10923, dtype="int8") /* ty=int8 */;
  %276 = cast(%var_10924, dtype="int8") /* ty=Tensor[(45), int8] */;
  %277 = cast(meta[relay.Constant][16] /* ty=Tensor[(2, 360), int16] */, dtype="int16") /* ty=Tensor[(2, 360), int16] */;
  %278 = reshape(%275, newshape=[]) /* ty=int8 */;
  %279 = reshape(%276, newshape=[3, 1, 15]) /* ty=Tensor[(3, 1, 15), int8] */;
  %280 = reshape(%277, newshape=[720]) /* ty=Tensor[(720), int16] */;
  %281 = @func_1444(%278, %279, %280) /* ty=(Tensor[(3, 1, 15), int8], Tensor[(2288), float64], Tensor[(16, 13, 11), float32], Tensor[(3, 1, 15), bool], Tensor[(16, 13, 11), float64], Tensor[(720), int16]) */;
  %282 = @func_9505() /* ty=Tensor[(1, 9, 3), float32] */;
  %283 = @func_6739() /* ty=Tensor[(1, 9, 3), float64] */;
  %284 = %281.3;
  (%282, %283, %284, %var_10923, %var_10924, meta[relay.Constant][16] /* ty=Tensor[(2, 360), int16] */)
}

def @func_5011(%var_4992: Tensor[(12, 10, 6), bool], %var_4993: Tensor[(12, 10, 6), bool]) -> (Tensor[(12, 10, 6), bool],) {
  %285 = cast(%var_4993, dtype="bool") /* ty=Tensor[(12, 10, 6), bool] */;
  %286 = shape_of(%var_4992, dtype="int32") /* ty=Tensor[(3), int32] */;
  %287 = cast(%var_4992, dtype="bool") /* ty=Tensor[(12, 10, 6), bool] */;
  %288 = dyn.reshape(%285, %286, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %289 = logical_and(%287, %288) /* ty=Tensor[(12, 10, 6), bool] */;
  (%289,)
}

def @func_11500() -> Tensor[(4, 10, 1), float32] {
  @func_11498() /* ty=Tensor[(4, 10, 1), float32] */
}

def @func_533(%var_531: Tensor[(15, 12, 4), int16], %var_532: Tensor[(2288), float64]) -> (Tensor[(15, 12, 4), bool], Tensor[(16, 13, 11), float64], Tensor[(2288), float64]) {
  @func_529(%var_531, %var_532) /* ty=(Tensor[(15, 12, 4), bool], Tensor[(16, 13, 11), float64], Tensor[(2288), float64]) */
}

def @func_8361() -> (Tensor[(6, 12, 12), float32],) {
  @func_8359() /* ty=(Tensor[(6, 12, 12), float32],) */
}

def @func_42(%var_41: Tensor[(4, 12, 7), float32]) -> Tensor[(4, 12, 7), float32] {
  %291 = fn (%var_5: Tensor[(4, 12, 7), float32]) -> Tensor[(4, 12, 7), float32] {
    %290 = cast(%var_5, dtype="float32") /* ty=Tensor[(4, 12, 7), float32] */;
    tan(%290) /* ty=Tensor[(4, 12, 7), float32] */
  };
  %291(%var_41) /* ty=Tensor[(4, 12, 7), float32] */
}

def @func_8819() -> (Tensor[(6, 12, 12), float32],) {
  %293 = fn () -> (Tensor[(6, 12, 12), float32],) {
    %292 = @func_6704() /* ty=Tensor[(6, 12, 12), float32] */;
    (%292,)
  };
  %293() /* ty=(Tensor[(6, 12, 12), float32],) */
}

def @func_12271() -> (Tensor[(5, 3, 15), float32], Tensor[(16, 13, 11), float64], Tensor[(2288, 1), float64], Tensor[(1, 9, 3), float32]) {
  %303 = fn () -> (Tensor[(5, 3, 15), float32], Tensor[(16, 13, 11), float64], Tensor[(2288, 1), float64], Tensor[(1, 9, 3), float32]) {
    %294 = @func_10022() /* ty=(Tensor[(5, 3, 15), float64],) */;
    %295 = %294.0;
    %296 = cast(%295, dtype="float32") /* ty=Tensor[(5, 3, 15), float32] */;
    %297 = cast(meta[relay.Constant][17] /* ty=Tensor[(2288, 1), float64] */, dtype="float64") /* ty=Tensor[(2288, 1), float64] */;
    %298 = reshape(%297, newshape=[16, 13, 11]) /* ty=Tensor[(16, 13, 11), float64] */;
    %299 = @func_343(%298) /* ty=(Tensor[(16, 13, 11), float64],) */;
    %300 = sigmoid(%296) /* ty=Tensor[(5, 3, 15), float32] */;
    %301 = %299.0;
    %302 = @func_9505() /* ty=Tensor[(1, 9, 3), float32] */;
    (%300, %301, meta[relay.Constant][17] /* ty=Tensor[(2288, 1), float64] */, %302)
  };
  %303() /* ty=(Tensor[(5, 3, 15), float32], Tensor[(16, 13, 11), float64], Tensor[(2288, 1), float64], Tensor[(1, 9, 3), float32]) */
}

def @func_9002() -> (Tensor[(1, 9, 3), float32], Tensor[(5, 3, 15), float64]) {
  %304 = @func_8499() /* ty=(Tensor[(5, 3, 15), float64],) */;
  %305 = %304.0;
  %306 = cast(%305, dtype="float64") /* ty=Tensor[(5, 3, 15), float64] */;
  %307 = @func_7885() /* ty=Tensor[(1, 9, 3), float32] */;
  %308 = cos(%306) /* ty=Tensor[(5, 3, 15), float64] */;
  (%307, %308)
}

def @func_11091() -> (Tensor[(1, 9, 3), float32], Tensor[(1, 9, 3), float32], Tensor[(1, 9, 3), float32]) {
  %313 = fn () -> (Tensor[(1, 9, 3), float32], Tensor[(1, 9, 3), float32], Tensor[(1, 9, 3), float32]) {
    %309 = @func_8856() /* ty=(Tensor[(40), uint8], Tensor[(1, 9, 3), float32]) */;
    %310 = @func_9505() /* ty=Tensor[(1, 9, 3), float32] */;
    %311 = %309.1;
    %312 = @func_7885() /* ty=Tensor[(1, 9, 3), float32] */;
    (%310, %311, %312)
  };
  %313() /* ty=(Tensor[(1, 9, 3), float32], Tensor[(1, 9, 3), float32], Tensor[(1, 9, 3), float32]) */
}

def @func_9117(%var_9115: Tensor[(351), float32], %var_9116: Tensor[(364), float64]) -> (float64, Tensor[(351), float32], Tensor[(6, 12, 12), float32], Tensor[(364), float64], Tensor[(364), float64], Tensor[(27, ?), float64]) {
  %330 = fn (%var_9085: Tensor[(351), float32], %var_9101: Tensor[(364), float64]) -> (float64, Tensor[(351), float32], Tensor[(6, 12, 12), float32], Tensor[(364), float64], Tensor[(364), float64], Tensor[(27, ?), float64]) {
    %314 = @func_8246() /* ty=(Tensor[(?, 5, 8), bool], Tensor[(?, 15, ?), bool], float64, Tensor[(1, 15), float64]) */;
    %315 = @func_6336() /* ty=(Tensor[(6, 12, 12), float32],) */;
    %316 = cast(%var_9101, dtype="float64") /* ty=Tensor[(364), float64] */;
    %317 = reshape(%316, newshape=[364]) /* ty=Tensor[(364), float64] */;
    %318 = @func_7682(%317) /* ty=(Tensor[(6, 12, 12), float32], Tensor[(8, 12, 9), uint32], Tensor[(1, 9, 3), float32], Tensor[(1, 9, 3), float32], Tensor[(364), float64], Tensor[(4, 7, 13), float32], Tensor[(1, 9, 3), float32]) */;
    %319 = cast(%var_9085, dtype="float32") /* ty=Tensor[(351), float32] */;
    %320 = reshape(%319, newshape=[27, 13]) /* ty=Tensor[(27, 13), float32] */;
    %321 = @func_7021(%320) /* ty=(Tensor[(27, ?), int64], Tensor[(27, 13), int32]) */;
    %322 = %321.0;
    %323 = cast(%322, dtype="float64") /* ty=Tensor[(27, ?), float64] */;
    %324 = erf(%323) /* ty=Tensor[(27, ?), float64] */;
    %325 = cast(%324, dtype="float64") /* ty=Tensor[(27, ?), float64] */;
    %326 = %314.2;
    %327 = %315.0;
    %328 = %318.4;
    %329 = asin(%325) /* ty=Tensor[(27, ?), float64] */;
    (%326, %var_9085, %327, %328, %var_9101, %329)
  };
  %330(%var_9115, %var_9116) /* ty=(float64, Tensor[(351), float32], Tensor[(6, 12, 12), float32], Tensor[(364), float64], Tensor[(364), float64], Tensor[(27, ?), float64]) */
}

def @func_3362(%var_3347: Tensor[(4, 7, 13), float64]) -> Tensor[(4, 7, 13), float64] {
  %331 = cast(%var_3347, dtype="float64") /* ty=Tensor[(4, 7, 13), float64] */;
  tan(%331) /* ty=Tensor[(4, 7, 13), float64] */
}

def @func_3100(%var_3096: Tensor[(12, 12, 2), float64], %var_3097: Tensor[(8, 130), uint8], %var_3098: Tensor[(1144, 2), float64], %var_3099: Tensor[(27), uint8]) -> (Tensor[(12, 12, 2), float64], Tensor[(336), float32], int32, Tensor[(7, 6, 10), uint64], Tensor[(420), uint64], Tensor[(10, 13, 8), uint8], Tensor[(8, 130), uint8], Tensor[(16, 13, 11), float64], Tensor[(1144, 2), float64], Tensor[(?, 9, 3), uint8], Tensor[(27), uint8], Tensor[(4, 12, 7), float32], Tensor[(10, 13, 8), uint8]) {
  @func_3094(%var_3096, %var_3097, %var_3098, %var_3099) /* ty=(Tensor[(12, 12, 2), float64], Tensor[(336), float32], int32, Tensor[(7, 6, 10), uint64], Tensor[(420), uint64], Tensor[(10, 13, 8), uint8], Tensor[(8, 130), uint8], Tensor[(16, 13, 11), float64], Tensor[(1144, 2), float64], Tensor[(?, 9, 3), uint8], Tensor[(27), uint8], Tensor[(4, 12, 7), float32], Tensor[(10, 13, 8), uint8]) */
}

def @func_11308(%var_11209: float64, %var_11258: Tensor[(216), float32], %var_11259: Tensor[(108), float32]) -> (Tensor[(1, 9, 3), float32], Tensor[(?, 15, ?), bool], Tensor[(15), float64], Tensor[(14, 3, 9), bool], Tensor[(378), int32], Tensor[(15), float64], Tensor[(216), float32], Tensor[(108), float32], Tensor[(2, 1144), float64], Tensor[(6, 12, 12), uint64], Tensor[(1, 9, 3), float32]) {
  %332 = cast(%var_11209, dtype="float64") /* ty=float64 */;
  %333 = cast(meta[relay.Constant][18] /* ty=Tensor[(15), float64] */, dtype="float64") /* ty=Tensor[(15), float64] */;
  %334 = reshape(%332, newshape=[]) /* ty=float64 */;
  %335 = reshape(%333, newshape=[1, 15, 1]) /* ty=Tensor[(1, 15, 1), float64] */;
  %336 = @func_3804(%334, %335) /* ty=(Tensor[(?, 15, ?), bool],) */;
  %337 = @func_9236() /* ty=Tensor[(1, 9, 3), float32] */;
  %338 = cast(%337, dtype="int32") /* ty=Tensor[(1, 9, 3), int32] */;
  %339 = cast(meta[relay.Constant][19] /* ty=Tensor[(378), int32] */, dtype="int32") /* ty=Tensor[(378), int32] */;
  %340 = reshape(%338, newshape=[1, 3, 9]) /* ty=Tensor[(1, 3, 9), int32] */;
  %341 = reshape(%339, newshape=[14, 3, 9]) /* ty=Tensor[(14, 3, 9), int32] */;
  %342 = @func_9580(%340, %341) /* ty=(Tensor[(14, 3, 9), bool],) */;
  %343 = cast(%var_11258, dtype="float32") /* ty=Tensor[(216), float32] */;
  %344 = cast(%var_11209, dtype="int32") /* ty=int32 */;
  %345 = cast(%var_11259, dtype="float32") /* ty=Tensor[(108), float32] */;
  %346 = reshape(%343, newshape=[8, 9, 3]) /* ty=Tensor[(8, 9, 3), float32] */;
  %347 = reshape(%344, newshape=[]) /* ty=int32 */;
  %348 = reshape(%345, newshape=[108]) /* ty=Tensor[(108), float32] */;
  %349 = @func_9821(%346, %347, %348) /* ty=(Tensor[(8, 9, 3), float64], Tensor[(8, 9, 3), float64], Tensor[(6, 12, 12), float64], Tensor[(6, 11, 11), float32], Tensor[(726), int64], int32, Tensor[(6, 11, 11), float32], Tensor[(108), float32], Tensor[(15), float64], Tensor[(2288), float64], Tensor[(720), int16], Tensor[(6, 12, 12), float32]) */;
  %350 = @func_8713() /* ty=(Tensor[(1, 9, 3), float32], int32, Tensor[(40), uint8], Tensor[(2, 1144), float64]) */;
  %351 = @func_10250() /* ty=(Tensor[(6, 12, 12), float32], Tensor[(720), bool], Tensor[(12, 10, 6), float64], Tensor[(27, ?), uint16], Tensor[(1, 9, 3), float32]) */;
  %352 = %351.0;
  %353 = cast(%352, dtype="float32") /* ty=Tensor[(6, 12, 12), float32] */;
  %354 = cos(%353) /* ty=Tensor[(6, 12, 12), float32] */;
  %355 = cast(%354, dtype="uint64") /* ty=Tensor[(6, 12, 12), uint64] */;
  %356 = cast(%var_11209, dtype="uint64") /* ty=uint64 */;
  %357 = %336.0;
  %358 = %342.0;
  %359 = %349.8;
  %360 = %350.3;
  %361 = multiply(%355, %356) /* ty=Tensor[(6, 12, 12), uint64] */;
  %362 = @func_8476() /* ty=Tensor[(1, 9, 3), float32] */;
  (%337, %357, meta[relay.Constant][18] /* ty=Tensor[(15), float64] */, %358, meta[relay.Constant][19] /* ty=Tensor[(378), int32] */, %359, %var_11258, %var_11259, %360, %361, %362)
}

def @func_12392(%var_12391: Tensor[(54), float32]) -> (Tensor[(6, 12, 12), float32], Tensor[(2, 9, 3), uint8], Tensor[(54), float32]) {
  %368 = fn (%var_12384: Tensor[(54), float32]) -> (Tensor[(6, 12, 12), float32], Tensor[(2, 9, 3), uint8], Tensor[(54), float32]) {
    %363 = @func_7298() /* ty=(Tensor[(6, 12, 12), float32],) */;
    %364 = cast(%var_12384, dtype="float32") /* ty=Tensor[(54), float32] */;
    %365 = reshape(%364, newshape=[2, 9, 3]) /* ty=Tensor[(2, 9, 3), float32] */;
    %366 = %363.0;
    %367 = @func_12216(%365) /* ty=Tensor[(2, 9, 3), uint8] */;
    (%366, %367, %var_12384)
  };
  %368(%var_12391) /* ty=(Tensor[(6, 12, 12), float32], Tensor[(2, 9, 3), uint8], Tensor[(54), float32]) */
}

def @func_8637() -> (Tensor[(1, 9, 3), float32],) {
  @func_8635() /* ty=(Tensor[(1, 9, 3), float32],) */
}

def @func_6212() -> (Tensor[(6, 12, 12), float32], Tensor[(27, 1), uint8], Tensor[(1, 9, 3), float32]) {
  %377 = fn () -> (Tensor[(6, 12, 12), float32], Tensor[(27, 1), uint8], Tensor[(1, 9, 3), float32]) {
    %369 = @func_6135() /* ty=(Tensor[(6, 12, 12), float32], Tensor[(6, 12, 12), float32]) */;
    %370 = cast(meta[relay.Constant][20] /* ty=Tensor[(27, 1), uint8] */, dtype="uint8") /* ty=Tensor[(27, 1), uint8] */;
    %371 = reshape(%370, newshape=[1, 9, 3]) /* ty=Tensor[(1, 9, 3), uint8] */;
    %372 = @func_2472(%371) /* ty=(Tensor[(?, 9, 3), uint8], Tensor[(1, 9, 3), float32]) */;
    %373 = %372.1;
    %374 = cast(%373, dtype="float32") /* ty=Tensor[(1, 9, 3), float32] */;
    %375 = %369.1;
    %376 = sinh(%374) /* ty=Tensor[(1, 9, 3), float32] */;
    (%375, meta[relay.Constant][20] /* ty=Tensor[(27, 1), uint8] */, %376)
  };
  %377() /* ty=(Tensor[(6, 12, 12), float32], Tensor[(27, 1), uint8], Tensor[(1, 9, 3), float32]) */
}

def @func_7448() -> (Tensor[(1, 9, 3), float32],) {
  @func_7446() /* ty=(Tensor[(1, 9, 3), float32],) */
}

def @func_6774() -> Tensor[(1, 9, 3), float32] {
  @func_6772() /* ty=Tensor[(1, 9, 3), float32] */
}

def @func_10880(%var_10878: Tensor[(12, 16, 5), float32]) -> Tensor[(12, 16, 5), float32] {
  @func_10877(%var_10878) /* ty=Tensor[(12, 16, 5), float32] */
}

def @func_10508(%var_10506: float64, %var_10507: Tensor[(1920), float64]) -> (Tensor[(1, 9, 3), float32], Tensor[(336), float32], float64, Tensor[(1920), float64], Tensor[(1, 9, 3), float32]) {
  @func_10504(%var_10506, %var_10507) /* ty=(Tensor[(1, 9, 3), float32], Tensor[(336), float32], float64, Tensor[(1920), float64], Tensor[(1, 9, 3), float32]) */
}

def @func_3365(%var_3363: Tensor[(4, 7, 13), float64]) -> Tensor[(4, 7, 13), float64] {
  @func_3362(%var_3363) /* ty=Tensor[(4, 7, 13), float64] */
}

def @func_10436(%var_10434: Tensor[(4, 480), float64]) -> (Tensor[(6, 12, 12), float32], Tensor[(16, 10, 12), float64], float64, Tensor[(4, 480), float64]) {
  @func_10433(%var_10434) /* ty=(Tensor[(6, 12, 12), float32], Tensor[(16, 10, 12), float64], float64, Tensor[(4, 480), float64]) */
}

def @func_7765() -> Tensor[(6, 12, 12), float32] {
  %378 = @func_6844() /* ty=(Tensor[(6, 12, 12), float32], Tensor[(6, 12, 12), float32]) */;
  %378.1
}

def @func_8359() -> (Tensor[(6, 12, 12), float32],) {
  %379 = @func_6270() /* ty=Tensor[(6, 12, 12), float32] */;
  (%379,)
}

def @func_8246() -> (Tensor[(?, 5, 8), bool], Tensor[(?, 15, ?), bool], float64, Tensor[(1, 15), float64]) {
  %380 = @func_7832() /* ty=(Tensor[(6, 12, 12), float32], Tensor[(7, 6, 10), uint64], Tensor[(420), uint64], Tensor[(?, 5, 8), bool], Tensor[(1, 40), uint8]) */;
  %381 = cast(6.99639f64 /* ty=float64 */, dtype="float64") /* ty=float64 */;
  %382 = cast(meta[relay.Constant][21] /* ty=Tensor[(1, 15), float64] */, dtype="float64") /* ty=Tensor[(1, 15), float64] */;
  %383 = reshape(%381, newshape=[]) /* ty=float64 */;
  %384 = reshape(%382, newshape=[1, 15, 1]) /* ty=Tensor[(1, 15, 1), float64] */;
  %385 = @func_3804(%383, %384) /* ty=(Tensor[(?, 15, ?), bool],) */;
  %386 = %380.3;
  %387 = %385.0;
  (%386, %387, 6.99639f64 /* ty=float64 */, meta[relay.Constant][21] /* ty=Tensor[(1, 15), float64] */)
}

def @func_6739() -> Tensor[(1, 9, 3), float64] {
  %388 = @func_6211() /* ty=(Tensor[(6, 12, 12), float32], Tensor[(27, 1), uint8], Tensor[(1, 9, 3), float32]) */;
  %389 = %388.2;
  %390 = cast(%389, dtype="float64") /* ty=Tensor[(1, 9, 3), float64] */;
  tan(%390) /* ty=Tensor[(1, 9, 3), float64] */
}

def @func_8197(%var_8180: Tensor[(3, 15, 4), uint8]) -> (Tensor[(3, 15, 4), bool],) {
  %391 = cast(%var_8180, dtype="bool") /* ty=Tensor[(3, 15, 4), bool] */;
  %392 = shape_of(meta[relay.Constant][22] /* ty=Tensor[(3, 15, 4), uint8] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %393 = cast(meta[relay.Constant][22] /* ty=Tensor[(3, 15, 4), uint8] */, dtype="bool") /* ty=Tensor[(3, 15, 4), bool] */;
  %394 = dyn.reshape(%391, %392, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %395 = not_equal(%393, %394) /* ty=Tensor[(3, 15, 4), bool] */;
  (%395,)
}

def @func_11840() -> (int32, float64) {
  @func_11838() /* ty=(int32, float64) */
}

def @func_6601() -> (Tensor[(1, 9, 3), float32],) {
  %396 = @func_6419() /* ty=(Tensor[(1, 9, 3), float32],) */;
  %397 = %396.0;
  (%397,)
}

def @func_2475(%var_2473: Tensor[(1, 9, 3), uint8]) -> (Tensor[(?, 9, 3), uint8], Tensor[(1, 9, 3), float32]) {
  @func_2472(%var_2473) /* ty=(Tensor[(?, 9, 3), uint8], Tensor[(1, 9, 3), float32]) */
}

def @func_6799(%var_6795: Tensor[(15), float64]) -> (Tensor[(1, 9, 3), float32], Tensor[(4, 7, 13), float64], Tensor[(364), float64], Tensor[(?, 15, ?), bool], float64, Tensor[(15), float64]) {
  %398 = cast(meta[relay.Constant][23] /* ty=Tensor[(364), float64] */, dtype="float64") /* ty=Tensor[(364), float64] */;
  %399 = reshape(%398, newshape=[4, 7, 13]) /* ty=Tensor[(4, 7, 13), float64] */;
  %400 = cast(-6.46147f64 /* ty=float64 */, dtype="float64") /* ty=float64 */;
  %401 = cast(%var_6795, dtype="float64") /* ty=Tensor[(15), float64] */;
  %402 = reshape(%400, newshape=[]) /* ty=float64 */;
  %403 = reshape(%401, newshape=[1, 15, 1]) /* ty=Tensor[(1, 15, 1), float64] */;
  %404 = @func_3804(%402, %403) /* ty=(Tensor[(?, 15, ?), bool],) */;
  %405 = @func_6772() /* ty=Tensor[(1, 9, 3), float32] */;
  %406 = @func_3362(%399) /* ty=Tensor[(4, 7, 13), float64] */;
  %407 = %404.0;
  (%405, %406, meta[relay.Constant][23] /* ty=Tensor[(364), float64] */, %407, -6.46147f64 /* ty=float64 */, %var_6795)
}

def @func_12219(%var_12217: Tensor[(2, 9, 3), float32]) -> Tensor[(2, 9, 3), uint8] {
  @func_12216(%var_12217) /* ty=Tensor[(2, 9, 3), uint8] */
}

def @func_97(%var_96: int32) -> (Tensor[(15, 15, 10), int32], Tensor[(4, 12, 7), float32], Tensor[(336), float32]) {
  %414 = fn (%var_68: int32) -> (Tensor[(15, 15, 10), int32], Tensor[(4, 12, 7), float32], Tensor[(336), float32]) {
    %408 = cast(%var_68, dtype="int32") /* ty=int32 */;
    %409 = cast(meta[relay.Constant][24] /* ty=Tensor[(15, 15, 10), int32] */, dtype="int32") /* ty=Tensor[(15, 15, 10), int32] */;
    %410 = cast(meta[relay.Constant][25] /* ty=Tensor[(336), float32] */, dtype="float32") /* ty=Tensor[(336), float32] */;
    %411 = reshape(%410, newshape=[4, 12, 7]) /* ty=Tensor[(4, 12, 7), float32] */;
    %412 = left_shift(%408, %409) /* ty=Tensor[(15, 15, 10), int32] */;
    %413 = @func_40(%411) /* ty=Tensor[(4, 12, 7), float32] */;
    (%412, %413, meta[relay.Constant][25] /* ty=Tensor[(336), float32] */)
  };
  %414(%var_96) /* ty=(Tensor[(15, 15, 10), int32], Tensor[(4, 12, 7), float32], Tensor[(336), float32]) */
}

def @func_9986(%var_9918: Tensor[(3, 9), int32]) -> (Tensor[(5, 3, 15), float64], Tensor[(3, 9), int32], Tensor[(378), int32], Tensor[(6, 12, 12), float32], Tensor[(14, 3, 9), float32], Tensor[(14, 3, 9), float64]) {
  %415 = @func_8499() /* ty=(Tensor[(5, 3, 15), float64],) */;
  %416 = cast(%var_9918, dtype="int32") /* ty=Tensor[(3, 9), int32] */;
  %417 = cast(meta[relay.Constant][26] /* ty=Tensor[(378), int32] */, dtype="int32") /* ty=Tensor[(378), int32] */;
  %418 = reshape(%416, newshape=[1, 3, 9]) /* ty=Tensor[(1, 3, 9), int32] */;
  %419 = reshape(%417, newshape=[14, 3, 9]) /* ty=Tensor[(14, 3, 9), int32] */;
  %420 = @func_9580(%418, %419) /* ty=(Tensor[(14, 3, 9), bool],) */;
  %421 = %420.0;
  %422 = cast(%421, dtype="float32") /* ty=Tensor[(14, 3, 9), float32] */;
  %423 = sqrt(%422) /* ty=Tensor[(14, 3, 9), float32] */;
  %424 = cast(%423, dtype="float32") /* ty=Tensor[(14, 3, 9), float32] */;
  %425 = cast(%423, dtype="float32") /* ty=Tensor[(14, 3, 9), float32] */;
  %426 = log(%425) /* ty=Tensor[(14, 3, 9), float32] */;
  %427 = cast(%426, dtype="float64") /* ty=Tensor[(14, 3, 9), float64] */;
  %428 = %415.0;
  %429 = @func_6270() /* ty=Tensor[(6, 12, 12), float32] */;
  %430 = tan(%424) /* ty=Tensor[(14, 3, 9), float32] */;
  %431 = asinh(%427) /* ty=Tensor[(14, 3, 9), float64] */;
  (%428, %var_9918, meta[relay.Constant][26] /* ty=Tensor[(378), int32] */, %429, %430, %431)
}

def @func_9583(%var_9581: Tensor[(1, 3, 9), int32], %var_9582: Tensor[(14, 3, 9), int32]) -> (Tensor[(14, 3, 9), bool],) {
  %435 = fn (%var_9568: Tensor[(1, 3, 9), int32], %var_9569: Tensor[(14, 3, 9), int32]) -> (Tensor[(14, 3, 9), bool],) {
    %432 = cast(%var_9568, dtype="bool") /* ty=Tensor[(1, 3, 9), bool] */;
    %433 = cast(%var_9569, dtype="bool") /* ty=Tensor[(14, 3, 9), bool] */;
    %434 = greater_equal(%432, %433) /* ty=Tensor[(14, 3, 9), bool] */;
    (%434,)
  };
  %435(%var_9581, %var_9582) /* ty=(Tensor[(14, 3, 9), bool],) */
}

def @func_12157() -> (Tensor[(6, 12, 12), float32], Tensor[(6, 12, 12), float32]) {
  %436 = @func_8359() /* ty=(Tensor[(6, 12, 12), float32],) */;
  %437 = %436.0;
  %438 = @func_7394() /* ty=Tensor[(6, 12, 12), float32] */;
  (%437, %438)
}

def @func_6845() -> (Tensor[(6, 12, 12), float32], Tensor[(6, 12, 12), float32]) {
  %451 = fn () -> (Tensor[(6, 12, 12), float32], Tensor[(6, 12, 12), float32]) {
    %439 = @func_6270() /* ty=Tensor[(6, 12, 12), float32] */;
    %440 = cast(meta[relay.Constant][27] /* ty=Tensor[(6, 12, 12), float32] */, dtype="int16") /* ty=Tensor[(6, 12, 12), int16] */;
    %441 = shape_of(%439, dtype="int32") /* ty=Tensor[(3), int32] */;
    %442 = cast(%439, dtype="int16") /* ty=Tensor[(6, 12, 12), int16] */;
    %443 = dyn.reshape(%440, %441, newshape=[]) /* ty=Tensor[(?, ?, ?), int16] */;
    %444 = bitwise_or(%442, %443) /* ty=Tensor[(6, 12, 12), int16] */;
    %445 = cast(%444, dtype="float32") /* ty=Tensor[(6, 12, 12), float32] */;
    %446 = shape_of(meta[relay.Constant][27] /* ty=Tensor[(6, 12, 12), float32] */, dtype="int32") /* ty=Tensor[(3), int32] */;
    %447 = cast(meta[relay.Constant][27] /* ty=Tensor[(6, 12, 12), float32] */, dtype="float32") /* ty=Tensor[(6, 12, 12), float32] */;
    %448 = dyn.reshape(%445, %446, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
    %449 = @func_6704() /* ty=Tensor[(6, 12, 12), float32] */;
    %450 = minimum(%447, %448) /* ty=Tensor[(6, 12, 12), float32] */;
    (%449, %450)
  };
  %451() /* ty=(Tensor[(6, 12, 12), float32], Tensor[(6, 12, 12), float32]) */
}

def @func_2472(%var_2464: Tensor[(1, 9, 3), uint8]) -> (Tensor[(?, 9, 3), uint8], Tensor[(1, 9, 3), float32]) {
  %452 = cast(%var_2464, dtype="uint8") /* ty=Tensor[(1, 9, 3), uint8] */;
  %453 = shape_of(meta[relay.Constant][28] /* ty=Tensor[(1, 9, 3), uint8] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %454 = cast(meta[relay.Constant][28] /* ty=Tensor[(1, 9, 3), uint8] */, dtype="uint8") /* ty=Tensor[(1, 9, 3), uint8] */;
  %455 = dyn.reshape(%452, %453, newshape=[]) /* ty=Tensor[(?, ?, ?), uint8] */;
  %456 = cast(meta[relay.Constant][28] /* ty=Tensor[(1, 9, 3), uint8] */, dtype="float32") /* ty=Tensor[(1, 9, 3), float32] */;
  %457 = bitwise_or(%454, %455) /* ty=Tensor[(?, 9, 3), uint8] */;
  %458 = acos(%456) /* ty=Tensor[(1, 9, 3), float32] */;
  (%457, %458)
}

def @func_9484(%var_9482: Tensor[(1, 9, 3), float64]) -> Tensor[(?, 9, 3), bool] {
  @func_9481(%var_9482) /* ty=Tensor[(?, 9, 3), bool] */
}

def @func_9505() -> Tensor[(1, 9, 3), float32] {
  %459 = @func_8635() /* ty=(Tensor[(1, 9, 3), float32],) */;
  %459.0
}

def @func_7852() -> Tensor[(6, 12, 12), float32] {
  @func_7850() /* ty=Tensor[(6, 12, 12), float32] */
}

def @func_801(%var_773: Tensor[(1, 5, 8), uint8], %var_774: Tensor[(1, 5, 8), uint8]) -> (Tensor[(?, 5, 8), bool], Tensor[(1, 5, 10), float64], int32) {
  %460 = cast(%var_774, dtype="bool") /* ty=Tensor[(1, 5, 8), bool] */;
  %461 = shape_of(%var_773, dtype="int32") /* ty=Tensor[(3), int32] */;
  %462 = cast(%var_773, dtype="bool") /* ty=Tensor[(1, 5, 8), bool] */;
  %463 = dyn.reshape(%460, %461, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %464 = cast(-6 /* ty=int32 */, dtype="int32") /* ty=int32 */;
  %465 = reshape(%464, newshape=[]) /* ty=int32 */;
  %466 = @func_268(%465) /* ty=(Tensor[(1, 5, 10), float64], Tensor[(15, 15, 10), int32], int32) */;
  %467 = greater(%462, %463) /* ty=Tensor[(?, 5, 8), bool] */;
  %468 = %466.0;
  (%467, %468, -6 /* ty=int32 */)
}

def @func_9445(%var_9443: Tensor[(10, 15, 8), bool], %var_9444: Tensor[(10, 15, 8), float64]) -> (Tensor[(10, 15, 8), float64], Tensor[(1, 9, 3), float32], Tensor[(1, 5, 10), float64], Tensor[(40), uint8], Tensor[(4, 7, 13), float64], Tensor[(364), float64], Tensor[(10, 15, 8), int32]) {
  @func_9441(%var_9443, %var_9444) /* ty=(Tensor[(10, 15, 8), float64], Tensor[(1, 9, 3), float32], Tensor[(1, 5, 10), float64], Tensor[(40), uint8], Tensor[(4, 7, 13), float64], Tensor[(364), float64], Tensor[(10, 15, 8), int32]) */
}

def @func_10849() -> (Tensor[(1, 9, 3), float32],) {
  %469 = @func_7694() /* ty=(Tensor[(1, 9, 3), float32],) */;
  %470 = %469.0;
  (%470,)
}

def @func_12044() -> (Tensor[(1, 9, 3), float32],) {
  @func_12042() /* ty=(Tensor[(1, 9, 3), float32],) */
}

def @func_10985() -> Tensor[(6, 12, 12), float32] {
  @func_7765() /* ty=Tensor[(6, 12, 12), float32] */
}

def @func_3156(%var_3154: Tensor[(8, 12, 9), float64]) -> Tensor[(8, 12, 9), uint32] {
  @func_3153(%var_3154) /* ty=Tensor[(8, 12, 9), uint32] */
}

def @func_10877(%var_10869: Tensor[(12, 16, 5), float32]) -> Tensor[(12, 16, 5), float32] {
  %471 = cast(%var_10869, dtype="float32") /* ty=Tensor[(12, 16, 5), float32] */;
  acos(%471) /* ty=Tensor[(12, 16, 5), float32] */
}

def @func_8040(%var_8035: Tensor[(1512), float64], %var_8037: Tensor[(88, 26), float64]) -> (Tensor[(6, 12, 12), float32], Tensor[(6, 12, 12), float32], Tensor[(2288), float64], Tensor[(1512), float64], Tensor[(336), float32], Tensor[(88, 26), float64]) {
  %472 = cast(%var_8035, dtype="float64") /* ty=Tensor[(1512), float64] */;
  %473 = cast(meta[relay.Constant][29] /* ty=Tensor[(336), float32] */, dtype="float32") /* ty=Tensor[(336), float32] */;
  %474 = cast(%var_8037, dtype="float64") /* ty=Tensor[(88, 26), float64] */;
  %475 = reshape(%472, newshape=[12, 9, 14]) /* ty=Tensor[(12, 9, 14), float64] */;
  %476 = reshape(%473, newshape=[336]) /* ty=Tensor[(336), float32] */;
  %477 = reshape(%474, newshape=[2288]) /* ty=Tensor[(2288), float64] */;
  %478 = @func_4824(%475, %476, %477) /* ty=(Tensor[(12, 9, 14), float64], Tensor[(4, 12, 7), float32], Tensor[(336), float32], Tensor[(16, 13, 11), float64], Tensor[(2288), float64]) */;
  %479 = @func_7765() /* ty=Tensor[(6, 12, 12), float32] */;
  %480 = @func_7211() /* ty=Tensor[(6, 12, 12), float32] */;
  %481 = %478.4;
  (%479, %480, %481, %var_8035, meta[relay.Constant][29] /* ty=Tensor[(336), float32] */, %var_8037)
}

def @func_9047(%var_9045: Tensor[(12, 13, 10), float64]) -> (Tensor[(12, 13, 10), int8], Tensor[(6, 12, 12), float32], Tensor[(420), uint64], Tensor[(1, 15), float64]) {
  @func_9044(%var_9045) /* ty=(Tensor[(12, 13, 10), int8], Tensor[(6, 12, 12), float32], Tensor[(420), uint64], Tensor[(1, 15), float64]) */
}

def @func_9368() -> (Tensor[(6, 12, 12), float64],) {
  %485 = fn () -> (Tensor[(6, 12, 12), float64],) {
    %482 = @func_7765() /* ty=Tensor[(6, 12, 12), float32] */;
    %483 = cast(%482, dtype="float64") /* ty=Tensor[(6, 12, 12), float64] */;
    %484 = asinh(%483) /* ty=Tensor[(6, 12, 12), float64] */;
    (%484,)
  };
  %485() /* ty=(Tensor[(6, 12, 12), float64],) */
}

def @func_10810(%var_10809: float64) -> (Tensor[(6, 12, 12), float32], Tensor[(16, 10, 12), float64], float64, Tensor[(1920), float64], Tensor[(1, 9, 3), float64], Tensor[(6, 12, 12), float32]) {
  %497 = fn (%var_10780: float64) -> (Tensor[(6, 12, 12), float32], Tensor[(16, 10, 12), float64], float64, Tensor[(1920), float64], Tensor[(1, 9, 3), float64], Tensor[(6, 12, 12), float32]) {
    %486 = @func_6211() /* ty=(Tensor[(6, 12, 12), float32], Tensor[(27, 1), uint8], Tensor[(1, 9, 3), float32]) */;
    %487 = cast(%var_10780, dtype="float64") /* ty=float64 */;
    %488 = cast(meta[relay.Constant][30] /* ty=Tensor[(1920), float64] */, dtype="float64") /* ty=Tensor[(1920), float64] */;
    %489 = reshape(%487, newshape=[]) /* ty=float64 */;
    %490 = reshape(%488, newshape=[16, 10, 12]) /* ty=Tensor[(16, 10, 12), float64] */;
    %491 = @func_5053(%489, %490) /* ty=(Tensor[(336), float32], Tensor[(16, 10, 12), float64], Tensor[(16, 10, 12), float64], Tensor[(7, 6, 10), uint64], Tensor[(420), uint64]) */;
    %492 = @func_9853() /* ty=(Tensor[(6, 12, 12), float32],) */;
    %493 = %486.0;
    %494 = %491.1;
    %495 = @func_8173() /* ty=Tensor[(1, 9, 3), float64] */;
    %496 = %492.0;
    (%493, %494, %var_10780, meta[relay.Constant][30] /* ty=Tensor[(1920), float64] */, %495, %496)
  };
  %497(%var_10809) /* ty=(Tensor[(6, 12, 12), float32], Tensor[(16, 10, 12), float64], float64, Tensor[(1920), float64], Tensor[(1, 9, 3), float64], Tensor[(6, 12, 12), float32]) */
}

def @func_343(%var_323: Tensor[(16, 13, 11), float64]) -> (Tensor[(16, 13, 11), float64],) {
  %498 = cast(%var_323, dtype="float64") /* ty=Tensor[(16, 13, 11), float64] */;
  %499 = erf(%498) /* ty=Tensor[(16, 13, 11), float64] */;
  (%499,)
}

def @func_7887() -> Tensor[(1, 9, 3), float32] {
  @func_7885() /* ty=Tensor[(1, 9, 3), float32] */
}

def @func_10851() -> (Tensor[(1, 9, 3), float32],) {
  @func_10849() /* ty=(Tensor[(1, 9, 3), float32],) */
}

def @func_4927(%var_4925: Tensor[(9, 1, 13), float64], %var_4926: float64) -> (Tensor[(9, 1, 13), float64], Tensor[(?, 15, ?), bool], float64, Tensor[(15), float64]) {
  @func_4923(%var_4925, %var_4926) /* ty=(Tensor[(9, 1, 13), float64], Tensor[(?, 15, ?), bool], float64, Tensor[(15), float64]) */
}

def @func_10354() -> (Tensor[(12, 15, 11), float32], Tensor[(5, 3, 15), float64]) {
  @func_10352() /* ty=(Tensor[(12, 15, 11), float32], Tensor[(5, 3, 15), float64]) */
}

def @func_11652() -> Tensor[(6, 12, 12), float32] {
  %500 = @func_7298() /* ty=(Tensor[(6, 12, 12), float32],) */;
  %500.0
}

def @func_3094(%var_2998: Tensor[(12, 12, 2), float64], %var_3019: Tensor[(8, 130), uint8], %var_3055: Tensor[(1144, 2), float64], %var_3058: Tensor[(27), uint8]) -> (Tensor[(12, 12, 2), float64], Tensor[(336), float32], int32, Tensor[(7, 6, 10), uint64], Tensor[(420), uint64], Tensor[(10, 13, 8), uint8], Tensor[(8, 130), uint8], Tensor[(16, 13, 11), float64], Tensor[(1144, 2), float64], Tensor[(?, 9, 3), uint8], Tensor[(27), uint8], Tensor[(4, 12, 7), float32], Tensor[(10, 13, 8), uint8]) {
  %501 = cast(%var_2998, dtype="float64") /* ty=Tensor[(12, 12, 2), float64] */;
  %502 = cast(8 /* ty=int32 */, dtype="int32") /* ty=int32 */;
  %503 = reshape(%502, newshape=[]) /* ty=int32 */;
  %504 = @func_95(%503) /* ty=(Tensor[(15, 15, 10), int32], Tensor[(4, 12, 7), float32], Tensor[(336), float32]) */;
  %505 = cast(meta[relay.Constant][31] /* ty=Tensor[(420), uint64] */, dtype="uint64") /* ty=Tensor[(420), uint64] */;
  %506 = reshape(%505, newshape=[7, 6, 10]) /* ty=Tensor[(7, 6, 10), uint64] */;
  %507 = cast(%var_3019, dtype="uint8") /* ty=Tensor[(8, 130), uint8] */;
  %508 = reshape(%507, newshape=[10, 13, 8]) /* ty=Tensor[(10, 13, 8), uint8] */;
  %509 = @func_2927(%508) /* ty=(Tensor[(10, 13, 8), uint8],) */;
  %510 = cast(%var_3055, dtype="float64") /* ty=Tensor[(1144, 2), float64] */;
  %511 = reshape(%510, newshape=[16, 13, 11]) /* ty=Tensor[(16, 13, 11), float64] */;
  %512 = @func_343(%511) /* ty=(Tensor[(16, 13, 11), float64],) */;
  %513 = cast(%var_3058, dtype="uint8") /* ty=Tensor[(27), uint8] */;
  %514 = reshape(%513, newshape=[1, 9, 3]) /* ty=Tensor[(1, 9, 3), uint8] */;
  %515 = @func_2472(%514) /* ty=(Tensor[(?, 9, 3), uint8], Tensor[(1, 9, 3), float32]) */;
  %516 = %504.2;
  %517 = cast(%516, dtype="float32") /* ty=Tensor[(336), float32] */;
  %518 = reshape(%517, newshape=[4, 12, 7]) /* ty=Tensor[(4, 12, 7), float32] */;
  %519 = cast(%var_3019, dtype="uint8") /* ty=Tensor[(8, 130), uint8] */;
  %520 = reshape(%519, newshape=[10, 13, 8]) /* ty=Tensor[(10, 13, 8), uint8] */;
  %521 = @func_2927(%520) /* ty=(Tensor[(10, 13, 8), uint8],) */;
  %522 = erf(%501) /* ty=Tensor[(12, 12, 2), float64] */;
  %523 = @func_1823(%506) /* ty=Tensor[(7, 6, 10), uint64] */;
  %524 = %509.0;
  %525 = %512.0;
  %526 = %515.0;
  %527 = @func_40(%518) /* ty=Tensor[(4, 12, 7), float32] */;
  %528 = %521.0;
  (%522, %516, 8 /* ty=int32 */, %523, meta[relay.Constant][31] /* ty=Tensor[(420), uint64] */, %524, %var_3019, %525, %var_3055, %526, %var_3058, %527, %528)
}

def @func_8461(%var_8460: Tensor[(2, 16, 7), float32]) -> (Tensor[(2, 16, 7), float32],) {
  %531 = fn (%var_8455: Tensor[(2, 16, 7), float32]) -> (Tensor[(2, 16, 7), float32],) {
    %529 = cast(%var_8455, dtype="float32") /* ty=Tensor[(2, 16, 7), float32] */;
    %530 = log2(%529) /* ty=Tensor[(2, 16, 7), float32] */;
    (%530,)
  };
  %531(%var_8460) /* ty=(Tensor[(2, 16, 7), float32],) */
}

def @func_6677() -> (Tensor[(1, 9, 3), float32],) {
  %534 = fn () -> (Tensor[(1, 9, 3), float32],) {
    %532 = @func_6419() /* ty=(Tensor[(1, 9, 3), float32],) */;
    %533 = %532.0;
    (%533,)
  };
  %534() /* ty=(Tensor[(1, 9, 3), float32],) */
}

def @func_9481(%var_9470: Tensor[(1, 9, 3), float64]) -> Tensor[(?, 9, 3), bool] {
  %535 = @func_8809() /* ty=(Tensor[(1, 9, 3), float32], Tensor[(1, 9, 3), float64], Tensor[(1, 15), float64], Tensor[(6, 12, 12), float32]) */;
  %536 = %535.1;
  %537 = cast(%var_9470, dtype="bool") /* ty=Tensor[(1, 9, 3), bool] */;
  %538 = shape_of(%536, dtype="int32") /* ty=Tensor[(3), int32] */;
  %539 = cast(%536, dtype="bool") /* ty=Tensor[(1, 9, 3), bool] */;
  %540 = dyn.reshape(%537, %538, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  less(%539, %540) /* ty=Tensor[(?, 9, 3), bool] */
}

def @func_9646() -> (Tensor[(1, 9, 3), float32], Tensor[(40), uint8]) {
  @func_9644() /* ty=(Tensor[(1, 9, 3), float32], Tensor[(40), uint8]) */
}

def @func_9681() -> (Tensor[(1, 40), uint8], Tensor[(1, 9, 3), float32], Tensor[(1, 9, 3), float32]) {
  %546 = fn () -> (Tensor[(1, 40), uint8], Tensor[(1, 9, 3), float32], Tensor[(1, 9, 3), float32]) {
    %541 = @func_7832() /* ty=(Tensor[(6, 12, 12), float32], Tensor[(7, 6, 10), uint64], Tensor[(420), uint64], Tensor[(?, 5, 8), bool], Tensor[(1, 40), uint8]) */;
    %542 = @func_6676() /* ty=(Tensor[(1, 9, 3), float32],) */;
    %543 = %541.4;
    %544 = @func_9505() /* ty=Tensor[(1, 9, 3), float32] */;
    %545 = %542.0;
    (%543, %544, %545)
  };
  %546() /* ty=(Tensor[(1, 40), uint8], Tensor[(1, 9, 3), float32], Tensor[(1, 9, 3), float32]) */
}

def @func_529(%var_487: Tensor[(15, 12, 4), int16], %var_505: Tensor[(2288), float64]) -> (Tensor[(15, 12, 4), bool], Tensor[(16, 13, 11), float64], Tensor[(2288), float64]) {
  %547 = cast(meta[relay.Constant][32] /* ty=Tensor[(15, 12, 4), int16] */, dtype="bool") /* ty=Tensor[(15, 12, 4), bool] */;
  %548 = shape_of(%var_487, dtype="int32") /* ty=Tensor[(3), int32] */;
  %549 = cast(%var_487, dtype="bool") /* ty=Tensor[(15, 12, 4), bool] */;
  %550 = dyn.reshape(%547, %548, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %551 = cast(%var_505, dtype="float64") /* ty=Tensor[(2288), float64] */;
  %552 = reshape(%551, newshape=[16, 13, 11]) /* ty=Tensor[(16, 13, 11), float64] */;
  %553 = @func_343(%552) /* ty=(Tensor[(16, 13, 11), float64],) */;
  %554 = greater(%549, %550) /* ty=Tensor[(15, 12, 4), bool] */;
  %555 = %553.0;
  (%554, %555, %var_505)
}

def @func_8810() -> (Tensor[(1, 9, 3), float32], Tensor[(1, 9, 3), float64], Tensor[(1, 15), float64], Tensor[(6, 12, 12), float32]) {
  %562 = fn () -> (Tensor[(1, 9, 3), float32], Tensor[(1, 9, 3), float64], Tensor[(1, 15), float64], Tensor[(6, 12, 12), float32]) {
    %556 = @func_6676() /* ty=(Tensor[(1, 9, 3), float32],) */;
    %557 = @func_8246() /* ty=(Tensor[(?, 5, 8), bool], Tensor[(?, 15, ?), bool], float64, Tensor[(1, 15), float64]) */;
    %558 = %556.0;
    %559 = @func_8173() /* ty=Tensor[(1, 9, 3), float64] */;
    %560 = %557.3;
    %561 = @func_7211() /* ty=Tensor[(6, 12, 12), float32] */;
    (%558, %559, %560, %561)
  };
  %562() /* ty=(Tensor[(1, 9, 3), float32], Tensor[(1, 9, 3), float64], Tensor[(1, 15), float64], Tensor[(6, 12, 12), float32]) */
}

def @func_10862() -> (Tensor[(6, 12, 12), float32],) {
  %564 = fn () -> (Tensor[(6, 12, 12), float32],) {
    %563 = @func_7211() /* ty=Tensor[(6, 12, 12), float32] */;
    (%563,)
  };
  %564() /* ty=(Tensor[(6, 12, 12), float32],) */
}

def @func_12159() -> (Tensor[(6, 12, 12), float32], Tensor[(6, 12, 12), float32]) {
  @func_12157() /* ty=(Tensor[(6, 12, 12), float32], Tensor[(6, 12, 12), float32]) */
}

def @func_8857() -> (Tensor[(40), uint8], Tensor[(1, 9, 3), float32]) {
  %568 = fn () -> (Tensor[(40), uint8], Tensor[(1, 9, 3), float32]) {
    %565 = @func_8713() /* ty=(Tensor[(1, 9, 3), float32], int32, Tensor[(40), uint8], Tensor[(2, 1144), float64]) */;
    %566 = %565.2;
    %567 = @func_6772() /* ty=Tensor[(1, 9, 3), float32] */;
    (%566, %567)
  };
  %568() /* ty=(Tensor[(40), uint8], Tensor[(1, 9, 3), float32]) */
}

def @func_8248() -> (Tensor[(?, 5, 8), bool], Tensor[(?, 15, ?), bool], float64, Tensor[(1, 15), float64]) {
  @func_8246() /* ty=(Tensor[(?, 5, 8), bool], Tensor[(?, 15, ?), bool], float64, Tensor[(1, 15), float64]) */
}

def @func_6706() -> Tensor[(6, 12, 12), float32] {
  @func_6704() /* ty=Tensor[(6, 12, 12), float32] */
}

def @func_7021(%var_7010: Tensor[(27, 13), float32]) -> (Tensor[(27, ?), int64], Tensor[(27, 13), int32]) {
  %569 = @func_6211() /* ty=(Tensor[(6, 12, 12), float32], Tensor[(27, 1), uint8], Tensor[(1, 9, 3), float32]) */;
  %570 = %569.1;
  %571 = @func_6211() /* ty=(Tensor[(6, 12, 12), float32], Tensor[(27, 1), uint8], Tensor[(1, 9, 3), float32]) */;
  %572 = %571.1;
  %573 = cast(%572, dtype="int64") /* ty=Tensor[(27, 1), int64] */;
  %574 = shape_of(%570, dtype="int32") /* ty=Tensor[(2), int32] */;
  %575 = cast(%570, dtype="int64") /* ty=Tensor[(27, 1), int64] */;
  %576 = dyn.reshape(%573, %574, newshape=[]) /* ty=Tensor[(?, ?), int64] */;
  %577 = cast(%572, dtype="float32") /* ty=Tensor[(27, 1), float32] */;
  %578 = rsqrt(%577) /* ty=Tensor[(27, 1), float32] */;
  %579 = cast(%578, dtype="int32") /* ty=Tensor[(27, 1), int32] */;
  %580 = cast(%var_7010, dtype="int32") /* ty=Tensor[(27, 13), int32] */;
  %581 = minimum(%575, %576) /* ty=Tensor[(27, ?), int64] */;
  %582 = subtract(%579, %580) /* ty=Tensor[(27, 13), int32] */;
  (%581, %582)
}

def @func_346(%var_344: Tensor[(16, 13, 11), float64]) -> (Tensor[(16, 13, 11), float64],) {
  @func_343(%var_344) /* ty=(Tensor[(16, 13, 11), float64],) */
}

def @func_11498() -> Tensor[(4, 10, 1), float32] {
  %583 = cast(meta[relay.Constant][33] /* ty=Tensor[(4, 10, 1), float32] */, dtype="float32") /* ty=Tensor[(4, 10, 1), float32] */;
  atan(%583) /* ty=Tensor[(4, 10, 1), float32] */
}

def @func_5238(%var_5235: Tensor[(9, 4, 3), float32], %var_5236: int32, %var_5237: Tensor[(15), float64]) -> (Tensor[(9, 4, 3), float32], Tensor[(4, 12, 7), float32], int32, Tensor[(6, 11, 11), float32], Tensor[(726), int64], Tensor[(?, 15, ?), bool], Tensor[(15), float64]) {
  @func_5233(%var_5235, %var_5236, %var_5237) /* ty=(Tensor[(9, 4, 3), float32], Tensor[(4, 12, 7), float32], int32, Tensor[(6, 11, 11), float32], Tensor[(726), int64], Tensor[(?, 15, ?), bool], Tensor[(15), float64]) */
}

def @func_7834() -> (Tensor[(6, 12, 12), float32], Tensor[(7, 6, 10), uint64], Tensor[(420), uint64], Tensor[(?, 5, 8), bool], Tensor[(1, 40), uint8]) {
  @func_7832() /* ty=(Tensor[(6, 12, 12), float32], Tensor[(7, 6, 10), uint64], Tensor[(420), uint64], Tensor[(?, 5, 8), bool], Tensor[(1, 40), uint8]) */
}

def @func_12642() -> (Tensor[(1, 9, 3), float64], Tensor[(1, 9, 3), float32], Tensor[(2, 9, 3), uint8], Tensor[(1, 54), float32]) {
  %584 = @func_9270() /* ty=(Tensor[(6, 12, 12), float32], Tensor[(1, 9, 3), float32], float64) */;
  %585 = %584.2;
  %586 = @func_10250() /* ty=(Tensor[(6, 12, 12), float32], Tensor[(720), bool], Tensor[(12, 10, 6), float64], Tensor[(27, ?), uint16], Tensor[(1, 9, 3), float32]) */;
  %587 = %586.4;
  %588 = cast(%585, dtype="float64") /* ty=float64 */;
  %589 = cast(%587, dtype="float64") /* ty=Tensor[(1, 9, 3), float64] */;
  %590 = cast(%587, dtype="float32") /* ty=Tensor[(1, 9, 3), float32] */;
  %591 = cast(meta[relay.Constant][34] /* ty=Tensor[(1, 54), float32] */, dtype="float32") /* ty=Tensor[(1, 54), float32] */;
  %592 = reshape(%591, newshape=[2, 9, 3]) /* ty=Tensor[(2, 9, 3), float32] */;
  %593 = multiply(%588, %589) /* ty=Tensor[(1, 9, 3), float64] */;
  %594 = log2(%590) /* ty=Tensor[(1, 9, 3), float32] */;
  %595 = @func_12216(%592) /* ty=Tensor[(2, 9, 3), uint8] */;
  (%593, %594, %595, meta[relay.Constant][34] /* ty=Tensor[(1, 54), float32] */)
}

def @func_11624() -> (Tensor[(6, 12, 12), float32],) {
  %596 = @func_9853() /* ty=(Tensor[(6, 12, 12), float32],) */;
  %597 = %596.0;
  (%597,)
}

def @func_4923(%var_4912: Tensor[(9, 1, 13), float64], %var_4918: float64) -> (Tensor[(9, 1, 13), float64], Tensor[(?, 15, ?), bool], float64, Tensor[(15), float64]) {
  %598 = cast(%var_4912, dtype="float64") /* ty=Tensor[(9, 1, 13), float64] */;
  %599 = cast(%var_4918, dtype="float64") /* ty=float64 */;
  %600 = cast(meta[relay.Constant][35] /* ty=Tensor[(15), float64] */, dtype="float64") /* ty=Tensor[(15), float64] */;
  %601 = reshape(%599, newshape=[]) /* ty=float64 */;
  %602 = reshape(%600, newshape=[1, 15, 1]) /* ty=Tensor[(1, 15, 1), float64] */;
  %603 = @func_3804(%601, %602) /* ty=(Tensor[(?, 15, ?), bool],) */;
  %604 = atan(%598) /* ty=Tensor[(9, 1, 13), float64] */;
  %605 = %603.0;
  (%604, %605, %var_4918, meta[relay.Constant][35] /* ty=Tensor[(15), float64] */)
}

def @func_9441(%var_9396: Tensor[(10, 15, 8), bool], %var_9434: Tensor[(10, 15, 8), float64]) -> (Tensor[(10, 15, 8), float64], Tensor[(1, 9, 3), float32], Tensor[(1, 5, 10), float64], Tensor[(40), uint8], Tensor[(4, 7, 13), float64], Tensor[(364), float64], Tensor[(10, 15, 8), int32]) {
  %606 = @func_8246() /* ty=(Tensor[(?, 5, 8), bool], Tensor[(?, 15, ?), bool], float64, Tensor[(1, 15), float64]) */;
  %607 = %606.1;
  %608 = cast(%607, dtype="float64") /* ty=Tensor[(?, 15, ?), float64] */;
  %609 = cast(%var_9396, dtype="float64") /* ty=Tensor[(10, 15, 8), float64] */;
  %610 = @func_8809() /* ty=(Tensor[(1, 9, 3), float32], Tensor[(1, 9, 3), float64], Tensor[(1, 15), float64], Tensor[(6, 12, 12), float32]) */;
  %611 = cast(meta[relay.Constant][36] /* ty=Tensor[(40), uint8] */, dtype="uint8") /* ty=Tensor[(40), uint8] */;
  %612 = cast(meta[relay.Constant][36] /* ty=Tensor[(40), uint8] */, dtype="uint8") /* ty=Tensor[(40), uint8] */;
  %613 = reshape(%611, newshape=[1, 5, 8]) /* ty=Tensor[(1, 5, 8), uint8] */;
  %614 = reshape(%612, newshape=[1, 5, 8]) /* ty=Tensor[(1, 5, 8), uint8] */;
  %615 = @func_801(%613, %614) /* ty=(Tensor[(?, 5, 8), bool], Tensor[(1, 5, 10), float64], int32) */;
  %616 = cast(meta[relay.Constant][37] /* ty=Tensor[(364), float64] */, dtype="float64") /* ty=Tensor[(364), float64] */;
  %617 = reshape(%616, newshape=[4, 7, 13]) /* ty=Tensor[(4, 7, 13), float64] */;
  %618 = cast(%var_9396, dtype="float64") /* ty=Tensor[(10, 15, 8), float64] */;
  %619 = rsqrt(%618) /* ty=Tensor[(10, 15, 8), float64] */;
  %620 = cast(%var_9434, dtype="int32") /* ty=Tensor[(10, 15, 8), int32] */;
  %621 = shape_of(%619, dtype="int32") /* ty=Tensor[(3), int32] */;
  %622 = cast(%619, dtype="int32") /* ty=Tensor[(10, 15, 8), int32] */;
  %623 = dyn.reshape(%620, %621, newshape=[]) /* ty=Tensor[(?, ?, ?), int32] */;
  %624 = divide(%608, %609) /* ty=Tensor[(10, 15, 8), float64] */;
  %625 = %610.0;
  %626 = %615.1;
  %627 = @func_3362(%617) /* ty=Tensor[(4, 7, 13), float64] */;
  %628 = logical_xor(%622, %623) /* ty=Tensor[(10, 15, 8), int32] */;
  (%624, %625, %626, meta[relay.Constant][36] /* ty=Tensor[(40), uint8] */, %627, meta[relay.Constant][37] /* ty=Tensor[(364), float64] */, %628)
}

def @func_10504(%var_10486: float64, %var_10487: Tensor[(1920), float64]) -> (Tensor[(1, 9, 3), float32], Tensor[(336), float32], float64, Tensor[(1920), float64], Tensor[(1, 9, 3), float32]) {
  %629 = @func_6419() /* ty=(Tensor[(1, 9, 3), float32],) */;
  %630 = cast(%var_10486, dtype="float64") /* ty=float64 */;
  %631 = cast(%var_10487, dtype="float64") /* ty=Tensor[(1920), float64] */;
  %632 = reshape(%630, newshape=[]) /* ty=float64 */;
  %633 = reshape(%631, newshape=[16, 10, 12]) /* ty=Tensor[(16, 10, 12), float64] */;
  %634 = @func_5053(%632, %633) /* ty=(Tensor[(336), float32], Tensor[(16, 10, 12), float64], Tensor[(16, 10, 12), float64], Tensor[(7, 6, 10), uint64], Tensor[(420), uint64]) */;
  %635 = %629.0;
  %636 = %634.0;
  %637 = @func_8476() /* ty=Tensor[(1, 9, 3), float32] */;
  (%635, %636, %var_10486, %var_10487, %637)
}

def @func_11407() -> Tensor[(1, 15), float64] {
  @func_11405() /* ty=Tensor[(1, 15), float64] */
}

def @func_11521() -> Tensor[(6, 12, 12), float32] {
  %638 = @func_8818() /* ty=(Tensor[(6, 12, 12), float32],) */;
  %638.0
}

def @func_8200(%var_8198: Tensor[(3, 15, 4), uint8]) -> (Tensor[(3, 15, 4), bool],) {
  @func_8197(%var_8198) /* ty=(Tensor[(3, 15, 4), bool],) */
}

def @func_8547() -> Tensor[(1, 15), float64] {
  %640 = fn () -> Tensor[(1, 15), float64] {
    %639 = @func_8246() /* ty=(Tensor[(?, 5, 8), bool], Tensor[(?, 15, ?), bool], float64, Tensor[(1, 15), float64]) */;
    %639.3
  };
  %640() /* ty=Tensor[(1, 15), float64] */
}

def @func_8173() -> Tensor[(1, 9, 3), float64] {
  @func_6739() /* ty=Tensor[(1, 9, 3), float64] */
}

def @func_1449(%var_1446: int8, %var_1447: Tensor[(3, 1, 15), int8], %var_1448: Tensor[(720), int16]) -> (Tensor[(3, 1, 15), int8], Tensor[(2288), float64], Tensor[(16, 13, 11), float32], Tensor[(3, 1, 15), bool], Tensor[(16, 13, 11), float64], Tensor[(720), int16]) {
  @func_1444(%var_1446, %var_1447, %var_1448) /* ty=(Tensor[(3, 1, 15), int8], Tensor[(2288), float64], Tensor[(16, 13, 11), float32], Tensor[(3, 1, 15), bool], Tensor[(16, 13, 11), float64], Tensor[(720), int16]) */
}

def @func_9044(%var_9019: Tensor[(12, 13, 10), float64]) -> (Tensor[(12, 13, 10), int8], Tensor[(6, 12, 12), float32], Tensor[(420), uint64], Tensor[(1, 15), float64]) {
  %641 = @func_8246() /* ty=(Tensor[(?, 5, 8), bool], Tensor[(?, 15, ?), bool], float64, Tensor[(1, 15), float64]) */;
  %642 = %641.2;
  %643 = cast(%642, dtype="int8") /* ty=int8 */;
  %644 = cast(%var_9019, dtype="int8") /* ty=Tensor[(12, 13, 10), int8] */;
  %645 = cast(meta[relay.Constant][38] /* ty=Tensor[(420), uint64] */, dtype="uint64") /* ty=Tensor[(420), uint64] */;
  %646 = reshape(%645, newshape=[420]) /* ty=Tensor[(420), uint64] */;
  %647 = @func_7090(%646) /* ty=(Tensor[(6, 12, 12), float32], Tensor[(1, 9, 3), float32], Tensor[(7, 6, 10), uint64], Tensor[(420), uint64], Tensor[(6, 12, 12), float32], Tensor[(6, 12, 12), float32]) */;
  %648 = @func_8809() /* ty=(Tensor[(1, 9, 3), float32], Tensor[(1, 9, 3), float64], Tensor[(1, 15), float64], Tensor[(6, 12, 12), float32]) */;
  %649 = bitwise_xor(%643, %644) /* ty=Tensor[(12, 13, 10), int8] */;
  %650 = %647.0;
  %651 = %648.2;
  (%649, %650, meta[relay.Constant][38] /* ty=Tensor[(420), uint64] */, %651)
}

def @main() -> (Tensor[(2288, ?), bool],) {
  %652 = @func_12271() /* ty=(Tensor[(5, 3, 15), float32], Tensor[(16, 13, 11), float64], Tensor[(2288, 1), float64], Tensor[(1, 9, 3), float32]) */;
  %653 = %652.2;
  %654 = cast(%653, dtype="float32") /* ty=Tensor[(2288, 1), float32] */;
  %655 = sinh(%654) /* ty=Tensor[(2288, 1), float32] */;
  %656 = cast(%655, dtype="bool") /* ty=Tensor[(2288, 1), bool] */;
  %657 = shape_of(%653, dtype="int32") /* ty=Tensor[(2), int32] */;
  %658 = cast(%653, dtype="bool") /* ty=Tensor[(2288, 1), bool] */;
  %659 = dyn.reshape(%656, %657, newshape=[]) /* ty=Tensor[(?, ?), bool] */;
  %660 = greater(%658, %659) /* ty=Tensor[(2288, ?), bool] */;
  (%660,)
}

def @func_8944(%var_8942: Tensor[(13, 40), uint8]) -> (Tensor[(13, 40), uint8], Tensor[(1, 9, 3), float32], Tensor[(13, 40), int16]) {
  @func_8941(%var_8942) /* ty=(Tensor[(13, 40), uint8], Tensor[(1, 9, 3), float32], Tensor[(13, 40), int16]) */
}

def @func_8885(%var_8883: Tensor[(720), int16]) -> (Tensor[(1, 9, 3), float32], Tensor[(2288), float64], Tensor[(720), int16], Tensor[(2288), float64]) {
  @func_8882(%var_8883) /* ty=(Tensor[(1, 9, 3), float32], Tensor[(2288), float64], Tensor[(720), int16], Tensor[(2288), float64]) */
}

def @func_9319() -> (Tensor[(1, 9, 3), float64], Tensor[(?, 15, ?), bool], float64, Tensor[(15), float64], Tensor[(?, 15, ?), bool]) {
  @func_9317() /* ty=(Tensor[(1, 9, 3), float64], Tensor[(?, 15, ?), bool], float64, Tensor[(15), float64], Tensor[(?, 15, ?), bool]) */
}

def @func_9317() -> (Tensor[(1, 9, 3), float64], Tensor[(?, 15, ?), bool], float64, Tensor[(15), float64], Tensor[(?, 15, ?), bool]) {
  %661 = cast(-8.91065f64 /* ty=float64 */, dtype="float64") /* ty=float64 */;
  %662 = cast(meta[relay.Constant][39] /* ty=Tensor[(15), float64] */, dtype="float64") /* ty=Tensor[(15), float64] */;
  %663 = reshape(%661, newshape=[]) /* ty=float64 */;
  %664 = reshape(%662, newshape=[1, 15, 1]) /* ty=Tensor[(1, 15, 1), float64] */;
  %665 = @func_3804(%663, %664) /* ty=(Tensor[(?, 15, ?), bool],) */;
  %666 = cast(-8.91065f64 /* ty=float64 */, dtype="float64") /* ty=float64 */;
  %667 = cast(meta[relay.Constant][39] /* ty=Tensor[(15), float64] */, dtype="float64") /* ty=Tensor[(15), float64] */;
  %668 = reshape(%666, newshape=[]) /* ty=float64 */;
  %669 = reshape(%667, newshape=[1, 15, 1]) /* ty=Tensor[(1, 15, 1), float64] */;
  %670 = @func_3804(%668, %669) /* ty=(Tensor[(?, 15, ?), bool],) */;
  %671 = @func_8173() /* ty=Tensor[(1, 9, 3), float64] */;
  %672 = %665.0;
  %673 = %670.0;
  (%671, %672, -8.91065f64 /* ty=float64 */, meta[relay.Constant][39] /* ty=Tensor[(15), float64] */, %673)
}

def @func_7211() -> Tensor[(6, 12, 12), float32] {
  %674 = @func_6844() /* ty=(Tensor[(6, 12, 12), float32], Tensor[(6, 12, 12), float32]) */;
  %675 = %674.1;
  %676 = cast(%675, dtype="float32") /* ty=Tensor[(6, 12, 12), float32] */;
  %677 = sigmoid(%676) /* ty=Tensor[(6, 12, 12), float32] */;
  %678 = cast(%675, dtype="float32") /* ty=Tensor[(6, 12, 12), float32] */;
  %679 = shape_of(%677, dtype="int32") /* ty=Tensor[(3), int32] */;
  %680 = cast(%677, dtype="float32") /* ty=Tensor[(6, 12, 12), float32] */;
  %681 = dyn.reshape(%678, %679, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  floor_divide(%680, %681) /* ty=Tensor[(6, 12, 12), float32] */
}

def @func_5233(%var_5186: Tensor[(9, 4, 3), float32], %var_5192: int32, %var_5204: Tensor[(15), float64]) -> (Tensor[(9, 4, 3), float32], Tensor[(4, 12, 7), float32], int32, Tensor[(6, 11, 11), float32], Tensor[(726), int64], Tensor[(?, 15, ?), bool], Tensor[(15), float64]) {
  %682 = cast(%var_5186, dtype="float32") /* ty=Tensor[(9, 4, 3), float32] */;
  %683 = cast(%var_5192, dtype="int32") /* ty=int32 */;
  %684 = reshape(%683, newshape=[]) /* ty=int32 */;
  %685 = @func_95(%684) /* ty=(Tensor[(15, 15, 10), int32], Tensor[(4, 12, 7), float32], Tensor[(336), float32]) */;
  %686 = cast(meta[relay.Constant][40] /* ty=Tensor[(726), int64] */, dtype="int64") /* ty=Tensor[(726), int64] */;
  %687 = cast(%var_5192, dtype="int32") /* ty=int32 */;
  %688 = reshape(%686, newshape=[6, 11, 11]) /* ty=Tensor[(6, 11, 11), int64] */;
  %689 = reshape(%687, newshape=[]) /* ty=int32 */;
  %690 = @func_2588(%688, %689) /* ty=(Tensor[(1, 5, 10), float64], Tensor[(6, 11, 11), float32]) */;
  %691 = cast(%var_5192, dtype="float64") /* ty=float64 */;
  %692 = cast(%var_5204, dtype="float64") /* ty=Tensor[(15), float64] */;
  %693 = reshape(%691, newshape=[]) /* ty=float64 */;
  %694 = reshape(%692, newshape=[1, 15, 1]) /* ty=Tensor[(1, 15, 1), float64] */;
  %695 = @func_3804(%693, %694) /* ty=(Tensor[(?, 15, ?), bool],) */;
  %696 = atanh(%682) /* ty=Tensor[(9, 4, 3), float32] */;
  %697 = %685.1;
  %698 = %690.1;
  %699 = %695.0;
  (%696, %697, %var_5192, %698, meta[relay.Constant][40] /* ty=Tensor[(726), int64] */, %699, %var_5204)
}

def @func_3808(%var_3806: float64, %var_3807: Tensor[(1, 15, 1), float64]) -> (Tensor[(?, 15, ?), bool],) {
  @func_3804(%var_3806, %var_3807) /* ty=(Tensor[(?, 15, ?), bool],) */
}

def @func_7090(%var_7064: Tensor[(420), uint64]) -> (Tensor[(6, 12, 12), float32], Tensor[(1, 9, 3), float32], Tensor[(7, 6, 10), uint64], Tensor[(420), uint64], Tensor[(6, 12, 12), float32], Tensor[(6, 12, 12), float32]) {
  %700 = @func_6336() /* ty=(Tensor[(6, 12, 12), float32],) */;
  %701 = %700.0;
  %702 = cast(%701, dtype="float32") /* ty=Tensor[(6, 12, 12), float32] */;
  %703 = cast(%var_7064, dtype="uint64") /* ty=Tensor[(420), uint64] */;
  %704 = reshape(%703, newshape=[7, 6, 10]) /* ty=Tensor[(7, 6, 10), uint64] */;
  %705 = cast(%701, dtype="float32") /* ty=Tensor[(6, 12, 12), float32] */;
  %706 = @func_6844() /* ty=(Tensor[(6, 12, 12), float32], Tensor[(6, 12, 12), float32]) */;
  %707 = atanh(%702) /* ty=Tensor[(6, 12, 12), float32] */;
  %708 = @func_6772() /* ty=Tensor[(1, 9, 3), float32] */;
  %709 = @func_1823(%704) /* ty=Tensor[(7, 6, 10), uint64] */;
  %710 = tan(%705) /* ty=Tensor[(6, 12, 12), float32] */;
  %711 = %706.0;
  (%707, %708, %709, %var_7064, %710, %711)
}

def @func_6136() -> (Tensor[(6, 12, 12), float32], Tensor[(6, 12, 12), float32]) {
  %718 = fn () -> (Tensor[(6, 12, 12), float32], Tensor[(6, 12, 12), float32]) {
    %712 = cast(meta[relay.Constant][41] /* ty=Tensor[(6, 12, 12), float64] */, dtype="float64") /* ty=Tensor[(6, 12, 12), float64] */;
    %713 = asin(%712) /* ty=Tensor[(6, 12, 12), float64] */;
    %714 = cast(%713, dtype="float32") /* ty=Tensor[(6, 12, 12), float32] */;
    %715 = cast(meta[relay.Constant][41] /* ty=Tensor[(6, 12, 12), float64] */, dtype="float32") /* ty=Tensor[(6, 12, 12), float32] */;
    %716 = acosh(%714) /* ty=Tensor[(6, 12, 12), float32] */;
    %717 = exp(%715) /* ty=Tensor[(6, 12, 12), float32] */;
    (%716, %717)
  };
  %718() /* ty=(Tensor[(6, 12, 12), float32], Tensor[(6, 12, 12), float32]) */
}

def @func_10701(%var_10699: Tensor[(224), float32], %var_10700: Tensor[(1, 364), float64]) -> (Tensor[(6, 12, 12), float32], Tensor[(2, 16, 7), float32], Tensor[(224), float32], Tensor[(6, 12, 12), float32], Tensor[(117, 3), float32], Tensor[(1, 364), float64], Tensor[(1, 9, 3), float64], Tensor[(6, 12, 12), float32]) {
  %736 = fn (%var_10636: Tensor[(224), float32], %var_10667: Tensor[(1, 364), float64]) -> (Tensor[(6, 12, 12), float32], Tensor[(2, 16, 7), float32], Tensor[(224), float32], Tensor[(6, 12, 12), float32], Tensor[(117, 3), float32], Tensor[(1, 364), float64], Tensor[(1, 9, 3), float64], Tensor[(6, 12, 12), float32]) {
    %719 = @func_7298() /* ty=(Tensor[(6, 12, 12), float32],) */;
    %720 = cast(%var_10636, dtype="float32") /* ty=Tensor[(224), float32] */;
    %721 = reshape(%720, newshape=[2, 16, 7]) /* ty=Tensor[(2, 16, 7), float32] */;
    %722 = @func_8459(%721) /* ty=(Tensor[(2, 16, 7), float32],) */;
    %723 = cast(meta[relay.Constant][42] /* ty=Tensor[(117, 3), float32] */, dtype="float32") /* ty=Tensor[(117, 3), float32] */;
    %724 = cast(%var_10667, dtype="float64") /* ty=Tensor[(1, 364), float64] */;
    %725 = reshape(%723, newshape=[351]) /* ty=Tensor[(351), float32] */;
    %726 = reshape(%724, newshape=[364]) /* ty=Tensor[(364), float64] */;
    %727 = @func_9114(%725, %726) /* ty=(float64, Tensor[(351), float32], Tensor[(6, 12, 12), float32], Tensor[(364), float64], Tensor[(364), float64], Tensor[(27, ?), float64]) */;
    %728 = @func_9680() /* ty=(Tensor[(1, 40), uint8], Tensor[(1, 9, 3), float32], Tensor[(1, 9, 3), float32]) */;
    %729 = %728.1;
    %730 = cast(%729, dtype="float64") /* ty=Tensor[(1, 9, 3), float64] */;
    %731 = %719.0;
    %732 = %722.0;
    %733 = %727.2;
    %734 = asin(%730) /* ty=Tensor[(1, 9, 3), float64] */;
    %735 = @func_6270() /* ty=Tensor[(6, 12, 12), float32] */;
    (%731, %732, %var_10636, %733, meta[relay.Constant][42] /* ty=Tensor[(117, 3), float32] */, %var_10667, %734, %735)
  };
  %736(%var_10699, %var_10700) /* ty=(Tensor[(6, 12, 12), float32], Tensor[(2, 16, 7), float32], Tensor[(224), float32], Tensor[(6, 12, 12), float32], Tensor[(117, 3), float32], Tensor[(1, 364), float64], Tensor[(1, 9, 3), float64], Tensor[(6, 12, 12), float32]) */
}

def @func_6772() -> Tensor[(1, 9, 3), float32] {
  %737 = @func_6676() /* ty=(Tensor[(1, 9, 3), float32],) */;
  %737.0
}

def @func_270(%var_269: int32) -> (Tensor[(1, 5, 10), float64], Tensor[(15, 15, 10), int32], int32) {
  %746 = fn (%var_263: int32) -> (Tensor[(1, 5, 10), float64], Tensor[(15, 15, 10), int32], int32) {
    %738 = cast(meta[relay.Constant][43] /* ty=Tensor[(1, 5, 10), float32] */, dtype="float32") /* ty=Tensor[(1, 5, 10), float32] */;
    %739 = atanh(%738) /* ty=Tensor[(1, 5, 10), float32] */;
    %740 = cast(%739, dtype="float64") /* ty=Tensor[(1, 5, 10), float64] */;
    %741 = cast(%var_263, dtype="int32") /* ty=int32 */;
    %742 = reshape(%741, newshape=[]) /* ty=int32 */;
    %743 = @func_95(%742) /* ty=(Tensor[(15, 15, 10), int32], Tensor[(4, 12, 7), float32], Tensor[(336), float32]) */;
    %744 = atan(%740) /* ty=Tensor[(1, 5, 10), float64] */;
    %745 = %743.0;
    (%744, %745, %var_263)
  };
  %746(%var_269) /* ty=(Tensor[(1, 5, 10), float64], Tensor[(15, 15, 10), int32], int32) */
}

def @func_11654() -> Tensor[(6, 12, 12), float32] {
  @func_11652() /* ty=Tensor[(6, 12, 12), float32] */
}

def @func_8044(%var_8042: Tensor[(1512), float64], %var_8043: Tensor[(88, 26), float64]) -> (Tensor[(6, 12, 12), float32], Tensor[(6, 12, 12), float32], Tensor[(2288), float64], Tensor[(1512), float64], Tensor[(336), float32], Tensor[(88, 26), float64]) {
  @func_8040(%var_8042, %var_8043) /* ty=(Tensor[(6, 12, 12), float32], Tensor[(6, 12, 12), float32], Tensor[(2288), float64], Tensor[(1512), float64], Tensor[(336), float32], Tensor[(88, 26), float64]) */
}

def @func_7696() -> (Tensor[(1, 9, 3), float32],) {
  @func_7694() /* ty=(Tensor[(1, 9, 3), float32],) */
}

def @func_10987() -> Tensor[(6, 12, 12), float32] {
  @func_10985() /* ty=Tensor[(6, 12, 12), float32] */
}

def @func_8477() -> Tensor[(1, 9, 3), float32] {
  %747 = fn () -> Tensor[(1, 9, 3), float32] {
    @func_7885() /* ty=Tensor[(1, 9, 3), float32] */
  };
  %747() /* ty=Tensor[(1, 9, 3), float32] */
}

def @func_7172(%var_7154: Tensor[(15, 3, 4), float32]) -> (Tensor[(15, 3, 4), float32], Tensor[(6, 12, 12), float32], Tensor[(1, 420), uint64], Tensor[(4, 12, 7), float32], Tensor[(672), float64], int32) {
  %748 = cast(%var_7154, dtype="float32") /* ty=Tensor[(15, 3, 4), float32] */;
  %749 = cast(meta[relay.Constant][44] /* ty=Tensor[(1, 420), uint64] */, dtype="uint64") /* ty=Tensor[(1, 420), uint64] */;
  %750 = reshape(%749, newshape=[420]) /* ty=Tensor[(420), uint64] */;
  %751 = @func_7090(%750) /* ty=(Tensor[(6, 12, 12), float32], Tensor[(1, 9, 3), float32], Tensor[(7, 6, 10), uint64], Tensor[(420), uint64], Tensor[(6, 12, 12), float32], Tensor[(6, 12, 12), float32]) */;
  %752 = cast(meta[relay.Constant][45] /* ty=Tensor[(672), float64] */, dtype="float64") /* ty=Tensor[(672), float64] */;
  %753 = cast(5 /* ty=int32 */, dtype="int32") /* ty=int32 */;
  %754 = reshape(%752, newshape=[14, 16, 3]) /* ty=Tensor[(14, 16, 3), float64] */;
  %755 = reshape(%753, newshape=[]) /* ty=int32 */;
  %756 = @func_2170(%754, %755) /* ty=(Tensor[(14, 16, 3), float64], Tensor[(4, 12, 7), float32], int32) */;
  %757 = exp(%748) /* ty=Tensor[(15, 3, 4), float32] */;
  %758 = %751.4;
  %759 = %756.1;
  (%757, %758, meta[relay.Constant][44] /* ty=Tensor[(1, 420), uint64] */, %759, meta[relay.Constant][45] /* ty=Tensor[(672), float64] */, 5 /* ty=int32 */)
}

def @func_8882(%var_8866: Tensor[(720), int16]) -> (Tensor[(1, 9, 3), float32], Tensor[(2288), float64], Tensor[(720), int16], Tensor[(2288), float64]) {
  %760 = cast(%var_8866, dtype="int16") /* ty=Tensor[(720), int16] */;
  %761 = cast(meta[relay.Constant][46] /* ty=Tensor[(2288), float64] */, dtype="float64") /* ty=Tensor[(2288), float64] */;
  %762 = reshape(%760, newshape=[15, 12, 4]) /* ty=Tensor[(15, 12, 4), int16] */;
  %763 = reshape(%761, newshape=[2288]) /* ty=Tensor[(2288), float64] */;
  %764 = @func_529(%762, %763) /* ty=(Tensor[(15, 12, 4), bool], Tensor[(16, 13, 11), float64], Tensor[(2288), float64]) */;
  %765 = @func_7885() /* ty=Tensor[(1, 9, 3), float32] */;
  %766 = %764.2;
  (%765, %766, %var_8866, meta[relay.Constant][46] /* ty=Tensor[(2288), float64] */)
}

def @func_9554() -> (Tensor[(6, 12, 12), float64],) {
  %767 = @func_9367() /* ty=(Tensor[(6, 12, 12), float64],) */;
  %768 = %767.0;
  (%768,)
}

def @func_9237() -> Tensor[(1, 9, 3), float32] {
  %770 = fn () -> Tensor[(1, 9, 3), float32] {
    %769 = @func_6601() /* ty=(Tensor[(1, 9, 3), float32],) */;
    %769.0
  };
  %770() /* ty=Tensor[(1, 9, 3), float32] */
}

def @func_11028(%var_11026: float64) -> (Tensor[(1, 9, 3), float32], Tensor[(6, 12, 12), float32], float64) {
  @func_11025(%var_11026) /* ty=(Tensor[(1, 9, 3), float32], Tensor[(6, 12, 12), float32], float64) */
}

def @func_9989(%var_9987: Tensor[(3, 9), int32]) -> (Tensor[(5, 3, 15), float64], Tensor[(3, 9), int32], Tensor[(378), int32], Tensor[(6, 12, 12), float32], Tensor[(14, 3, 9), float32], Tensor[(14, 3, 9), float64]) {
  @func_9986(%var_9987) /* ty=(Tensor[(5, 3, 15), float64], Tensor[(3, 9), int32], Tensor[(378), int32], Tensor[(6, 12, 12), float32], Tensor[(14, 3, 9), float32], Tensor[(14, 3, 9), float64]) */
}

def @func_9271() -> (Tensor[(6, 12, 12), float32], Tensor[(1, 9, 3), float32], float64) {
  %776 = fn () -> (Tensor[(6, 12, 12), float32], Tensor[(1, 9, 3), float32], float64) {
    %771 = @func_7694() /* ty=(Tensor[(1, 9, 3), float32],) */;
    %772 = @func_8246() /* ty=(Tensor[(?, 5, 8), bool], Tensor[(?, 15, ?), bool], float64, Tensor[(1, 15), float64]) */;
    %773 = @func_7211() /* ty=Tensor[(6, 12, 12), float32] */;
    %774 = %771.0;
    %775 = %772.2;
    (%773, %774, %775)
  };
  %776() /* ty=(Tensor[(6, 12, 12), float32], Tensor[(1, 9, 3), float32], float64) */
}

def @func_11025(%var_11020: float64) -> (Tensor[(1, 9, 3), float32], Tensor[(6, 12, 12), float32], float64) {
  %777 = @func_9002() /* ty=(Tensor[(1, 9, 3), float32], Tensor[(5, 3, 15), float64]) */;
  %778 = cast(%var_11020, dtype="float64") /* ty=float64 */;
  %779 = reshape(%778, newshape=[]) /* ty=float64 */;
  %780 = @func_10808(%779) /* ty=(Tensor[(6, 12, 12), float32], Tensor[(16, 10, 12), float64], float64, Tensor[(1920), float64], Tensor[(1, 9, 3), float64], Tensor[(6, 12, 12), float32]) */;
  %781 = %777.0;
  %782 = %780.5;
  (%781, %782, %var_11020)
}

def @func_10398(%var_10397: Tensor[(12, 11, 1), float64]) -> (Tensor[(12, 11, 1), float64],) {
  %785 = fn (%var_10371: Tensor[(12, 11, 1), float64]) -> (Tensor[(12, 11, 1), float64],) {
    %783 = cast(%var_10371, dtype="float64") /* ty=Tensor[(12, 11, 1), float64] */;
    %784 = atan(%783) /* ty=Tensor[(12, 11, 1), float64] */;
    (%784,)
  };
  %785(%var_10397) /* ty=(Tensor[(12, 11, 1), float64],) */
}

def @func_7194(%var_7192: Tensor[(5, 2, 8), int8], %var_7193: Tensor[(5, 2, 8), int8]) -> (Tensor[(5, 2, 8), int8],) {
  @func_7190(%var_7192, %var_7193) /* ty=(Tensor[(5, 2, 8), int8],) */
}

def @func_10023() -> (Tensor[(5, 3, 15), float64],) {
  %788 = fn () -> (Tensor[(5, 3, 15), float64],) {
    %786 = @func_8499() /* ty=(Tensor[(5, 3, 15), float64],) */;
    %787 = %786.0;
    (%787,)
  };
  %788() /* ty=(Tensor[(5, 3, 15), float64],) */
}

def @func_6741() -> Tensor[(1, 9, 3), float64] {
  @func_6739() /* ty=Tensor[(1, 9, 3), float64] */
}

def @func_10319(%var_10318: Tensor[(16, 3, 6), float64]) -> Tensor[(16, 3, 6), float64] {
  %790 = fn (%var_10302: Tensor[(16, 3, 6), float64]) -> Tensor[(16, 3, 6), float64] {
    %789 = cast(%var_10302, dtype="float64") /* ty=Tensor[(16, 3, 6), float64] */;
    sinh(%789) /* ty=Tensor[(16, 3, 6), float64] */
  };
  %790(%var_10318) /* ty=Tensor[(16, 3, 6), float64] */
}

def @func_10047(%var_10038: Tensor[(27), int32], %var_10039: Tensor[(378), int32]) -> (Tensor[(6, 12, 12), float64], Tensor[(14, 3, 9), bool], Tensor[(27), int32], Tensor[(378), int32], Tensor[(6, 12, 12), float32]) {
  %791 = @func_9554() /* ty=(Tensor[(6, 12, 12), float64],) */;
  %792 = cast(%var_10038, dtype="int32") /* ty=Tensor[(27), int32] */;
  %793 = cast(%var_10039, dtype="int32") /* ty=Tensor[(378), int32] */;
  %794 = reshape(%792, newshape=[1, 3, 9]) /* ty=Tensor[(1, 3, 9), int32] */;
  %795 = reshape(%793, newshape=[14, 3, 9]) /* ty=Tensor[(14, 3, 9), int32] */;
  %796 = @func_9580(%794, %795) /* ty=(Tensor[(14, 3, 9), bool],) */;
  %797 = @func_6336() /* ty=(Tensor[(6, 12, 12), float32],) */;
  %798 = %791.0;
  %799 = %796.0;
  %800 = %797.0;
  (%798, %799, %var_10038, %var_10039, %800)
}

def @func_7850() -> Tensor[(6, 12, 12), float32] {
  @func_6704() /* ty=Tensor[(6, 12, 12), float32] */
}

def @func_12038() -> (Tensor[(6, 12, 12), float32], int32, Tensor[(2, 20), uint8]) {
  %808 = fn () -> (Tensor[(6, 12, 12), float32], int32, Tensor[(2, 20), uint8]) {
    %801 = cast(meta[relay.Constant][47] /* ty=Tensor[(2, 20), uint8] */, dtype="uint8") /* ty=Tensor[(2, 20), uint8] */;
    %802 = cast(meta[relay.Constant][47] /* ty=Tensor[(2, 20), uint8] */, dtype="uint8") /* ty=Tensor[(2, 20), uint8] */;
    %803 = reshape(%801, newshape=[1, 5, 8]) /* ty=Tensor[(1, 5, 8), uint8] */;
    %804 = reshape(%802, newshape=[1, 5, 8]) /* ty=Tensor[(1, 5, 8), uint8] */;
    %805 = @func_801(%803, %804) /* ty=(Tensor[(?, 5, 8), bool], Tensor[(1, 5, 10), float64], int32) */;
    %806 = @func_7211() /* ty=Tensor[(6, 12, 12), float32] */;
    %807 = %805.2;
    (%806, %807, meta[relay.Constant][47] /* ty=Tensor[(2, 20), uint8] */)
  };
  %808() /* ty=(Tensor[(6, 12, 12), float32], int32, Tensor[(2, 20), uint8]) */
}

def @func_9556() -> (Tensor[(6, 12, 12), float64],) {
  @func_9554() /* ty=(Tensor[(6, 12, 12), float64],) */
}

def @func_6704() -> Tensor[(6, 12, 12), float32] {
  %809 = @func_6135() /* ty=(Tensor[(6, 12, 12), float32], Tensor[(6, 12, 12), float32]) */;
  %809.0
}

def @func_7694() -> (Tensor[(1, 9, 3), float32],) {
  %810 = @func_6211() /* ty=(Tensor[(6, 12, 12), float32], Tensor[(27, 1), uint8], Tensor[(1, 9, 3), float32]) */;
  %811 = %810.2;
  (%811,)
}

def @func_6906(%var_6905: Tensor[(169), float32]) -> (Tensor[(1, 9, 3), float32], Tensor[(364), float64], Tensor[(15, 1), float64], Tensor[(6, 12, 12), float64], Tensor[(672, 1), float64], int32, Tensor[(169), float32]) {
  %826 = fn (%var_6898: Tensor[(169), float32]) -> (Tensor[(1, 9, 3), float32], Tensor[(364), float64], Tensor[(15, 1), float64], Tensor[(6, 12, 12), float64], Tensor[(672, 1), float64], int32, Tensor[(169), float32]) {
    %812 = @func_6601() /* ty=(Tensor[(1, 9, 3), float32],) */;
    %813 = cast(meta[relay.Constant][48] /* ty=Tensor[(15, 1), float64] */, dtype="float64") /* ty=Tensor[(15, 1), float64] */;
    %814 = reshape(%813, newshape=[15]) /* ty=Tensor[(15), float64] */;
    %815 = @func_6799(%814) /* ty=(Tensor[(1, 9, 3), float32], Tensor[(4, 7, 13), float64], Tensor[(364), float64], Tensor[(?, 15, ?), bool], float64, Tensor[(15), float64]) */;
    %816 = cast(meta[relay.Constant][49] /* ty=Tensor[(672, 1), float64] */, dtype="float64") /* ty=Tensor[(672, 1), float64] */;
    %817 = cast(3 /* ty=int32 */, dtype="int32") /* ty=int32 */;
    %818 = cast(%var_6898, dtype="float32") /* ty=Tensor[(169), float32] */;
    %819 = reshape(%816, newshape=[4, 168]) /* ty=Tensor[(4, 168), float64] */;
    %820 = reshape(%817, newshape=[]) /* ty=int32 */;
    %821 = reshape(%818, newshape=[169]) /* ty=Tensor[(169), float32] */;
    %822 = @func_6580(%819, %820, %821) /* ty=(Tensor[(6, 12, 12), float64], Tensor[(6, 12, 12), float64], int32, int32, Tensor[(4, 168), float32], Tensor[(13, 1, 13), float32], Tensor[(169), float32]) */;
    %823 = %812.0;
    %824 = %815.2;
    %825 = %822.1;
    (%823, %824, meta[relay.Constant][48] /* ty=Tensor[(15, 1), float64] */, %825, meta[relay.Constant][49] /* ty=Tensor[(672, 1), float64] */, 3 /* ty=int32 */, %var_6898)
  };
  %826(%var_6905) /* ty=(Tensor[(1, 9, 3), float32], Tensor[(364), float64], Tensor[(15, 1), float64], Tensor[(6, 12, 12), float64], Tensor[(672, 1), float64], int32, Tensor[(169), float32]) */
}

def @func_10580(%var_10579: Tensor[(378), int32]) -> (Tensor[(6, 12, 12), float32], Tensor[(1, 9, 3), float64], Tensor[(14, 3, 9), bool], Tensor[(378), float64], Tensor[(6, 12, 12), float32]) {
  %840 = fn (%var_10544: Tensor[(378), int32]) -> (Tensor[(6, 12, 12), float32], Tensor[(1, 9, 3), float64], Tensor[(14, 3, 9), bool], Tensor[(378), float64], Tensor[(6, 12, 12), float32]) {
    %827 = @func_10081() /* ty=(Tensor[(1, 9, 3), float64],) */;
    %828 = %827.0;
    %829 = cast(%828, dtype="int32") /* ty=Tensor[(1, 9, 3), int32] */;
    %830 = cast(%var_10544, dtype="int32") /* ty=Tensor[(378), int32] */;
    %831 = reshape(%829, newshape=[1, 3, 9]) /* ty=Tensor[(1, 3, 9), int32] */;
    %832 = reshape(%830, newshape=[14, 3, 9]) /* ty=Tensor[(14, 3, 9), int32] */;
    %833 = @func_9580(%831, %832) /* ty=(Tensor[(14, 3, 9), bool],) */;
    %834 = cast(%var_10544, dtype="float64") /* ty=Tensor[(378), float64] */;
    %835 = @func_9270() /* ty=(Tensor[(6, 12, 12), float32], Tensor[(1, 9, 3), float32], float64) */;
    %836 = @func_7850() /* ty=Tensor[(6, 12, 12), float32] */;
    %837 = %833.0;
    %838 = sqrt(%834) /* ty=Tensor[(378), float64] */;
    %839 = %835.0;
    (%836, %828, %837, %838, %839)
  };
  %840(%var_10579) /* ty=(Tensor[(6, 12, 12), float32], Tensor[(1, 9, 3), float64], Tensor[(14, 3, 9), bool], Tensor[(378), float64], Tensor[(6, 12, 12), float32]) */
}

def @func_6585(%var_6582: Tensor[(4, 168), float64], %var_6583: int32, %var_6584: Tensor[(169), float32]) -> (Tensor[(6, 12, 12), float64], Tensor[(6, 12, 12), float64], int32, int32, Tensor[(4, 168), float32], Tensor[(13, 1, 13), float32], Tensor[(169), float32]) {
  @func_6580(%var_6582, %var_6583, %var_6584) /* ty=(Tensor[(6, 12, 12), float64], Tensor[(6, 12, 12), float64], int32, int32, Tensor[(4, 168), float32], Tensor[(13, 1, 13), float32], Tensor[(169), float32]) */
}

def @func_6420() -> (Tensor[(1, 9, 3), float32],) {
  %843 = fn () -> (Tensor[(1, 9, 3), float32],) {
    %841 = @func_6211() /* ty=(Tensor[(6, 12, 12), float32], Tensor[(27, 1), uint8], Tensor[(1, 9, 3), float32]) */;
    %842 = %841.2;
    (%842,)
  };
  %843() /* ty=(Tensor[(1, 9, 3), float32],) */
}

def @func_11371(%var_11363: Tensor[(6, 15, 10), float64]) -> (Tensor[(6, 15, 10), float64], Tensor[(8, 12, 9), uint32], Tensor[(864), float64]) {
  %844 = cast(%var_11363, dtype="float64") /* ty=Tensor[(6, 15, 10), float64] */;
  %845 = cast(meta[relay.Constant][50] /* ty=Tensor[(864), float64] */, dtype="float64") /* ty=Tensor[(864), float64] */;
  %846 = reshape(%845, newshape=[8, 12, 9]) /* ty=Tensor[(8, 12, 9), float64] */;
  %847 = erf(%844) /* ty=Tensor[(6, 15, 10), float64] */;
  %848 = @func_3153(%846) /* ty=Tensor[(8, 12, 9), uint32] */;
  (%847, %848, meta[relay.Constant][50] /* ty=Tensor[(864), float64] */)
}

def @func_6603() -> (Tensor[(1, 9, 3), float32],) {
  @func_6601() /* ty=(Tensor[(1, 9, 3), float32],) */
}

def @func_7914(%var_7912: float64) -> (Tensor[(6, 12, 12), float32], Tensor[(6, 12, 12), float32], Tensor[(117, 1), float64], float64) {
  @func_7911(%var_7912) /* ty=(Tensor[(6, 12, 12), float32], Tensor[(6, 12, 12), float32], Tensor[(117, 1), float64], float64) */
}

def @func_12002() -> (Tensor[(6, 12, 12), float32], Tensor[(6, 12, 12), float32]) {
  %852 = fn () -> (Tensor[(6, 12, 12), float32], Tensor[(6, 12, 12), float32]) {
    %849 = @func_11182() /* ty=(Tensor[(6, 12, 12), float32], Tensor[(16, 13, 11), float64], Tensor[(720), int16], Tensor[(88, 26), float64]) */;
    %850 = %849.0;
    %851 = @func_11652() /* ty=Tensor[(6, 12, 12), float32] */;
    (%850, %851)
  };
  %852() /* ty=(Tensor[(6, 12, 12), float32], Tensor[(6, 12, 12), float32]) */
}

def @func_2929(%var_2928: Tensor[(10, 13, 8), uint8]) -> (Tensor[(10, 13, 8), uint8],) {
  %858 = fn (%var_2916: Tensor[(10, 13, 8), uint8]) -> (Tensor[(10, 13, 8), uint8],) {
    %853 = cast(%var_2916, dtype="uint8") /* ty=Tensor[(10, 13, 8), uint8] */;
    %854 = shape_of(meta[relay.Constant][51] /* ty=Tensor[(10, 13, 8), uint8] */, dtype="int32") /* ty=Tensor[(3), int32] */;
    %855 = cast(meta[relay.Constant][51] /* ty=Tensor[(10, 13, 8), uint8] */, dtype="uint8") /* ty=Tensor[(10, 13, 8), uint8] */;
    %856 = dyn.reshape(%853, %854, newshape=[]) /* ty=Tensor[(?, ?, ?), uint8] */;
    %857 = maximum(%855, %856) /* ty=Tensor[(10, 13, 8), uint8] */;
    (%857,)
  };
  %858(%var_2928) /* ty=(Tensor[(10, 13, 8), uint8],) */
}

def @func_9004() -> (Tensor[(1, 9, 3), float32], Tensor[(5, 3, 15), float64]) {
  @func_9002() /* ty=(Tensor[(1, 9, 3), float32], Tensor[(5, 3, 15), float64]) */
}

def @func_7605(%var_7600: Tensor[(672), float64], %var_7601: Tensor[(169), float32], %var_7602: Tensor[(2, 40), int8], %var_7603: Tensor[(45), int8], %var_7604: Tensor[(720), int16]) -> (Tensor[(6, 12, 12), float32], Tensor[(672), float64], int32, Tensor[(169), bool], Tensor[(5, 2, 8), int8], Tensor[(2, 40), int8], Tensor[(15), float64], Tensor[(15), float64], Tensor[(1, 9, 3), float32], Tensor[(1, 9, 3), float32], Tensor[(16, 13, 11), float64], Tensor[(45), int8], Tensor[(720), int16], Tensor[(169), float32], Tensor[(6, 12, 12), float32], Tensor[(420), uint64]) {
  %904 = fn (%var_7510: Tensor[(672), float64], %var_7512: Tensor[(169), float32], %var_7524: Tensor[(2, 40), int8], %var_7559: Tensor[(45), int8], %var_7560: Tensor[(720), int16]) -> (Tensor[(6, 12, 12), float32], Tensor[(672), float64], int32, Tensor[(169), bool], Tensor[(5, 2, 8), int8], Tensor[(2, 40), int8], Tensor[(15), float64], Tensor[(15), float64], Tensor[(1, 9, 3), float32], Tensor[(1, 9, 3), float32], Tensor[(16, 13, 11), float64], Tensor[(45), int8], Tensor[(720), int16], Tensor[(169), float32], Tensor[(6, 12, 12), float32], Tensor[(420), uint64]) {
    %859 = @func_7298() /* ty=(Tensor[(6, 12, 12), float32],) */;
    %860 = cast(%var_7510, dtype="float64") /* ty=Tensor[(672), float64] */;
    %861 = cast(6 /* ty=int32 */, dtype="int32") /* ty=int32 */;
    %862 = cast(%var_7512, dtype="float32") /* ty=Tensor[(169), float32] */;
    %863 = reshape(%860, newshape=[4, 168]) /* ty=Tensor[(4, 168), float64] */;
    %864 = reshape(%861, newshape=[]) /* ty=int32 */;
    %865 = reshape(%862, newshape=[169]) /* ty=Tensor[(169), float32] */;
    %866 = @func_6580(%863, %864, %865) /* ty=(Tensor[(6, 12, 12), float64], Tensor[(6, 12, 12), float64], int32, int32, Tensor[(4, 168), float32], Tensor[(13, 1, 13), float32], Tensor[(169), float32]) */;
    %867 = %866.6;
    %868 = cast(%867, dtype="bool") /* ty=Tensor[(169), bool] */;
    %869 = shape_of(%var_7512, dtype="int32") /* ty=Tensor[(1), int32] */;
    %870 = cast(%var_7512, dtype="bool") /* ty=Tensor[(169), bool] */;
    %871 = dyn.reshape(%868, %869, newshape=[]) /* ty=Tensor[(?), bool] */;
    %872 = cast(%var_7524, dtype="int8") /* ty=Tensor[(2, 40), int8] */;
    %873 = cast(%var_7524, dtype="int8") /* ty=Tensor[(2, 40), int8] */;
    %874 = reshape(%872, newshape=[5, 2, 8]) /* ty=Tensor[(5, 2, 8), int8] */;
    %875 = reshape(%873, newshape=[5, 2, 8]) /* ty=Tensor[(5, 2, 8), int8] */;
    %876 = @func_7190(%874, %875) /* ty=(Tensor[(5, 2, 8), int8],) */;
    %877 = cast(meta[relay.Constant][52] /* ty=Tensor[(15), float64] */, dtype="float64") /* ty=Tensor[(15), float64] */;
    %878 = reshape(%877, newshape=[15]) /* ty=Tensor[(15), float64] */;
    %879 = @func_6799(%878) /* ty=(Tensor[(1, 9, 3), float32], Tensor[(4, 7, 13), float64], Tensor[(364), float64], Tensor[(?, 15, ?), bool], float64, Tensor[(15), float64]) */;
    %880 = cast(6 /* ty=int32 */, dtype="int8") /* ty=int8 */;
    %881 = cast(%var_7559, dtype="int8") /* ty=Tensor[(45), int8] */;
    %882 = cast(%var_7560, dtype="int16") /* ty=Tensor[(720), int16] */;
    %883 = reshape(%880, newshape=[]) /* ty=int8 */;
    %884 = reshape(%881, newshape=[3, 1, 15]) /* ty=Tensor[(3, 1, 15), int8] */;
    %885 = reshape(%882, newshape=[720]) /* ty=Tensor[(720), int16] */;
    %886 = @func_1444(%883, %884, %885) /* ty=(Tensor[(3, 1, 15), int8], Tensor[(2288), float64], Tensor[(16, 13, 11), float32], Tensor[(3, 1, 15), bool], Tensor[(16, 13, 11), float64], Tensor[(720), int16]) */;
    %887 = cast(%867, dtype="float64") /* ty=Tensor[(169), float64] */;
    %888 = sqrt(%887) /* ty=Tensor[(169), float64] */;
    %889 = cast(%888, dtype="float32") /* ty=Tensor[(169), float32] */;
    %890 = asin(%889) /* ty=Tensor[(169), float32] */;
    %891 = cast(%890, dtype="float32") /* ty=Tensor[(169), float32] */;
    %892 = cast(meta[relay.Constant][53] /* ty=Tensor[(420), uint64] */, dtype="uint64") /* ty=Tensor[(420), uint64] */;
    %893 = reshape(%892, newshape=[420]) /* ty=Tensor[(420), uint64] */;
    %894 = @func_7090(%893) /* ty=(Tensor[(6, 12, 12), float32], Tensor[(1, 9, 3), float32], Tensor[(7, 6, 10), uint64], Tensor[(420), uint64], Tensor[(6, 12, 12), float32], Tensor[(6, 12, 12), float32]) */;
    %895 = %859.0;
    %896 = greater_equal(%870, %871) /* ty=Tensor[(169), bool] */;
    %897 = %876.0;
    %898 = %879.5;
    %899 = @func_6772() /* ty=Tensor[(1, 9, 3), float32] */;
    %900 = @func_6772() /* ty=Tensor[(1, 9, 3), float32] */;
    %901 = %886.4;
    %902 = sigmoid(%891) /* ty=Tensor[(169), float32] */;
    %903 = %894.4;
    (%895, %var_7510, 6 /* ty=int32 */, %896, %897, %var_7524, %898, meta[relay.Constant][52] /* ty=Tensor[(15), float64] */, %899, %900, %901, %var_7559, %var_7560, %902, %903, meta[relay.Constant][53] /* ty=Tensor[(420), uint64] */)
  };
  %904(%var_7600, %var_7601, %var_7602, %var_7603, %var_7604) /* ty=(Tensor[(6, 12, 12), float32], Tensor[(672), float64], int32, Tensor[(169), bool], Tensor[(5, 2, 8), int8], Tensor[(2, 40), int8], Tensor[(15), float64], Tensor[(15), float64], Tensor[(1, 9, 3), float32], Tensor[(1, 9, 3), float32], Tensor[(16, 13, 11), float64], Tensor[(45), int8], Tensor[(720), int16], Tensor[(169), float32], Tensor[(6, 12, 12), float32], Tensor[(420), uint64]) */
}

def @func_805(%var_803: Tensor[(1, 5, 8), uint8], %var_804: Tensor[(1, 5, 8), uint8]) -> (Tensor[(?, 5, 8), bool], Tensor[(1, 5, 10), float64], int32) {
  @func_801(%var_803, %var_804) /* ty=(Tensor[(?, 5, 8), bool], Tensor[(1, 5, 10), float64], int32) */
}

def @func_11523() -> Tensor[(6, 12, 12), float32] {
  @func_11521() /* ty=Tensor[(6, 12, 12), float32] */
}

def @func_11838() -> (int32, float64) {
  %905 = @func_8713() /* ty=(Tensor[(1, 9, 3), float32], int32, Tensor[(40), uint8], Tensor[(2, 1144), float64]) */;
  %906 = %905.1;
  %907 = cast(%906, dtype="float64") /* ty=float64 */;
  %908 = reshape(%907, newshape=[]) /* ty=float64 */;
  %909 = @func_7911(%908) /* ty=(Tensor[(6, 12, 12), float32], Tensor[(6, 12, 12), float32], Tensor[(117, 1), float64], float64) */;
  %910 = %909.3;
  (%906, %910)
}

def @func_9844(%var_9842: float64, %var_9843: Tensor[(1920), float64]) -> (Tensor[(6, 12, 12), float32], Tensor[(16, 10, 12), float64], float64, Tensor[(1920), float64]) {
  %919 = fn (%var_9832: float64, %var_9833: Tensor[(1920), float64]) -> (Tensor[(6, 12, 12), float32], Tensor[(16, 10, 12), float64], float64, Tensor[(1920), float64]) {
    %911 = @func_8359() /* ty=(Tensor[(6, 12, 12), float32],) */;
    %912 = cast(%var_9832, dtype="float64") /* ty=float64 */;
    %913 = cast(%var_9833, dtype="float64") /* ty=Tensor[(1920), float64] */;
    %914 = reshape(%912, newshape=[]) /* ty=float64 */;
    %915 = reshape(%913, newshape=[16, 10, 12]) /* ty=Tensor[(16, 10, 12), float64] */;
    %916 = @func_5053(%914, %915) /* ty=(Tensor[(336), float32], Tensor[(16, 10, 12), float64], Tensor[(16, 10, 12), float64], Tensor[(7, 6, 10), uint64], Tensor[(420), uint64]) */;
    %917 = %911.0;
    %918 = %916.1;
    (%917, %918, %var_9832, %var_9833)
  };
  %919(%var_9842, %var_9843) /* ty=(Tensor[(6, 12, 12), float32], Tensor[(16, 10, 12), float64], float64, Tensor[(1920), float64]) */
}

def @func_7175(%var_7173: Tensor[(15, 3, 4), float32]) -> (Tensor[(15, 3, 4), float32], Tensor[(6, 12, 12), float32], Tensor[(1, 420), uint64], Tensor[(4, 12, 7), float32], Tensor[(672), float64], int32) {
  @func_7172(%var_7173) /* ty=(Tensor[(15, 3, 4), float32], Tensor[(6, 12, 12), float32], Tensor[(1, 420), uint64], Tensor[(4, 12, 7), float32], Tensor[(672), float64], int32) */
}

def @func_4829(%var_4826: Tensor[(12, 9, 14), float64], %var_4827: Tensor[(336), float32], %var_4828: Tensor[(2288), float64]) -> (Tensor[(12, 9, 14), float64], Tensor[(4, 12, 7), float32], Tensor[(336), float32], Tensor[(16, 13, 11), float64], Tensor[(2288), float64]) {
  @func_4824(%var_4826, %var_4827, %var_4828) /* ty=(Tensor[(12, 9, 14), float64], Tensor[(4, 12, 7), float32], Tensor[(336), float32], Tensor[(16, 13, 11), float64], Tensor[(2288), float64]) */
}

def @func_3804(%var_3788: float64, %var_3789: Tensor[(1, 15, 1), float64]) -> (Tensor[(?, 15, ?), bool],) {
  %920 = cast(%var_3788, dtype="float64") /* ty=float64 */;
  %921 = cast(%var_3789, dtype="float64") /* ty=Tensor[(1, 15, 1), float64] */;
  %922 = divide(%920, %921) /* ty=Tensor[(1, 15, 1), float64] */;
  %923 = cast(%var_3789, dtype="bool") /* ty=Tensor[(1, 15, 1), bool] */;
  %924 = shape_of(%922, dtype="int32") /* ty=Tensor[(3), int32] */;
  %925 = cast(%922, dtype="bool") /* ty=Tensor[(1, 15, 1), bool] */;
  %926 = dyn.reshape(%923, %924, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %927 = equal(%925, %926) /* ty=Tensor[(?, 15, ?), bool] */;
  (%927,)
}

def @func_7190(%var_7185: Tensor[(5, 2, 8), int8], %var_7186: Tensor[(5, 2, 8), int8]) -> (Tensor[(5, 2, 8), int8],) {
  %928 = cast(%var_7186, dtype="int8") /* ty=Tensor[(5, 2, 8), int8] */;
  %929 = shape_of(%var_7185, dtype="int32") /* ty=Tensor[(3), int32] */;
  %930 = cast(%var_7185, dtype="int8") /* ty=Tensor[(5, 2, 8), int8] */;
  %931 = dyn.reshape(%928, %929, newshape=[]) /* ty=Tensor[(?, ?, ?), int8] */;
  %932 = maximum(%930, %931) /* ty=Tensor[(5, 2, 8), int8] */;
  (%932,)
}

def @func_11909() -> Tensor[(1, 9, 3), float32] {
  %933 = fn () -> Tensor[(1, 9, 3), float32] {
    @func_9505() /* ty=Tensor[(1, 9, 3), float32] */
  };
  %933() /* ty=Tensor[(1, 9, 3), float32] */
}

def @func_10051(%var_10049: Tensor[(27), int32], %var_10050: Tensor[(378), int32]) -> (Tensor[(6, 12, 12), float64], Tensor[(14, 3, 9), bool], Tensor[(27), int32], Tensor[(378), int32], Tensor[(6, 12, 12), float32]) {
  @func_10047(%var_10049, %var_10050) /* ty=(Tensor[(6, 12, 12), float64], Tensor[(14, 3, 9), bool], Tensor[(27), int32], Tensor[(378), int32], Tensor[(6, 12, 12), float32]) */
}

def @func_10083() -> (Tensor[(1, 9, 3), float64],) {
  @func_10081() /* ty=(Tensor[(1, 9, 3), float64],) */
}

def @func_8635() -> (Tensor[(1, 9, 3), float32],) {
  %934 = @func_6676() /* ty=(Tensor[(1, 9, 3), float32],) */;
  %935 = %934.0;
  (%935,)
}

def @func_11967() -> (Tensor[(1, 9, 3), float32], Tensor[(6, 12, 12), float32], Tensor[(6, 12, 12), float32], Tensor[(6, 12, 12), float64], Tensor[(6, 12, 12), float32]) {
  %946 = fn () -> (Tensor[(1, 9, 3), float32], Tensor[(6, 12, 12), float32], Tensor[(6, 12, 12), float32], Tensor[(6, 12, 12), float64], Tensor[(6, 12, 12), float32]) {
    %936 = @func_7446() /* ty=(Tensor[(1, 9, 3), float32],) */;
    %937 = @func_11624() /* ty=(Tensor[(6, 12, 12), float32],) */;
    %938 = @func_6336() /* ty=(Tensor[(6, 12, 12), float32],) */;
    %939 = @func_9554() /* ty=(Tensor[(6, 12, 12), float64],) */;
    %940 = @func_9853() /* ty=(Tensor[(6, 12, 12), float32],) */;
    %941 = %936.0;
    %942 = %937.0;
    %943 = %938.0;
    %944 = %939.0;
    %945 = %940.0;
    (%941, %942, %943, %944, %945)
  };
  %946() /* ty=(Tensor[(1, 9, 3), float32], Tensor[(6, 12, 12), float32], Tensor[(6, 12, 12), float32], Tensor[(6, 12, 12), float64], Tensor[(6, 12, 12), float32]) */
}

def @func_7832() -> (Tensor[(6, 12, 12), float32], Tensor[(7, 6, 10), uint64], Tensor[(420), uint64], Tensor[(?, 5, 8), bool], Tensor[(1, 40), uint8]) {
  %947 = @func_7298() /* ty=(Tensor[(6, 12, 12), float32],) */;
  %948 = cast(meta[relay.Constant][54] /* ty=Tensor[(420), uint64] */, dtype="uint64") /* ty=Tensor[(420), uint64] */;
  %949 = reshape(%948, newshape=[7, 6, 10]) /* ty=Tensor[(7, 6, 10), uint64] */;
  %950 = cast(meta[relay.Constant][55] /* ty=Tensor[(1, 40), uint8] */, dtype="uint8") /* ty=Tensor[(1, 40), uint8] */;
  %951 = cast(meta[relay.Constant][55] /* ty=Tensor[(1, 40), uint8] */, dtype="uint8") /* ty=Tensor[(1, 40), uint8] */;
  %952 = reshape(%950, newshape=[1, 5, 8]) /* ty=Tensor[(1, 5, 8), uint8] */;
  %953 = reshape(%951, newshape=[1, 5, 8]) /* ty=Tensor[(1, 5, 8), uint8] */;
  %954 = @func_801(%952, %953) /* ty=(Tensor[(?, 5, 8), bool], Tensor[(1, 5, 10), float64], int32) */;
  %955 = %947.0;
  %956 = @func_1823(%949) /* ty=Tensor[(7, 6, 10), uint64] */;
  %957 = %954.0;
  (%955, %956, meta[relay.Constant][54] /* ty=Tensor[(420), uint64] */, %957, meta[relay.Constant][55] /* ty=Tensor[(1, 40), uint8] */)
}

def @func_10352() -> (Tensor[(12, 15, 11), float32], Tensor[(5, 3, 15), float64]) {
  %958 = cast(meta[relay.Constant][56] /* ty=Tensor[(12, 15, 11), float32] */, dtype="float32") /* ty=Tensor[(12, 15, 11), float32] */;
  %959 = @func_8499() /* ty=(Tensor[(5, 3, 15), float64],) */;
  %960 = asinh(%958) /* ty=Tensor[(12, 15, 11), float32] */;
  %961 = %959.0;
  (%960, %961)
}

def @func_9854() -> (Tensor[(6, 12, 12), float32],) {
  %963 = fn () -> (Tensor[(6, 12, 12), float32],) {
    %962 = @func_7850() /* ty=Tensor[(6, 12, 12), float32] */;
    (%962,)
  };
  %963() /* ty=(Tensor[(6, 12, 12), float32],) */
}

def @func_7964(%var_7963: Tensor[(27), uint8]) -> (Tensor[(6, 12, 12), float32], Tensor[(1, 9, 3), float32], Tensor[(27), uint8]) {
  %970 = fn (%var_7960: Tensor[(27), uint8]) -> (Tensor[(6, 12, 12), float32], Tensor[(1, 9, 3), float32], Tensor[(27), uint8]) {
    %964 = @func_6135() /* ty=(Tensor[(6, 12, 12), float32], Tensor[(6, 12, 12), float32]) */;
    %965 = cast(%var_7960, dtype="uint8") /* ty=Tensor[(27), uint8] */;
    %966 = reshape(%965, newshape=[1, 9, 3]) /* ty=Tensor[(1, 9, 3), uint8] */;
    %967 = @func_2472(%966) /* ty=(Tensor[(?, 9, 3), uint8], Tensor[(1, 9, 3), float32]) */;
    %968 = %964.1;
    %969 = %967.1;
    (%968, %969, %var_7960)
  };
  %970(%var_7963) /* ty=(Tensor[(6, 12, 12), float32], Tensor[(1, 9, 3), float32], Tensor[(27), uint8]) */
}

def @func_7093(%var_7091: Tensor[(420), uint64]) -> (Tensor[(6, 12, 12), float32], Tensor[(1, 9, 3), float32], Tensor[(7, 6, 10), uint64], Tensor[(420), uint64], Tensor[(6, 12, 12), float32], Tensor[(6, 12, 12), float32]) {
  @func_7090(%var_7091) /* ty=(Tensor[(6, 12, 12), float32], Tensor[(1, 9, 3), float32], Tensor[(7, 6, 10), uint64], Tensor[(420), uint64], Tensor[(6, 12, 12), float32], Tensor[(6, 12, 12), float32]) */
}

def @func_11626() -> (Tensor[(6, 12, 12), float32],) {
  @func_11624() /* ty=(Tensor[(6, 12, 12), float32],) */
}

def @func_7446() -> (Tensor[(1, 9, 3), float32],) {
  %971 = @func_6419() /* ty=(Tensor[(1, 9, 3), float32],) */;
  %972 = %971.0;
  (%972,)
}

def @func_2591(%var_2589: Tensor[(6, 11, 11), int64], %var_2590: int32) -> (Tensor[(1, 5, 10), float64], Tensor[(6, 11, 11), float32]) {
  %985 = fn (%var_2571: Tensor[(6, 11, 11), int64], %var_2578: int32) -> (Tensor[(1, 5, 10), float64], Tensor[(6, 11, 11), float32]) {
    %973 = cast(%var_2578, dtype="int32") /* ty=int32 */;
    %974 = reshape(%973, newshape=[]) /* ty=int32 */;
    %975 = @func_268(%974) /* ty=(Tensor[(1, 5, 10), float64], Tensor[(15, 15, 10), int32], int32) */;
    %976 = cast(meta[relay.Constant][57] /* ty=Tensor[(6, 11, 11), int64] */, dtype="bool") /* ty=Tensor[(6, 11, 11), bool] */;
    %977 = shape_of(%var_2571, dtype="int32") /* ty=Tensor[(3), int32] */;
    %978 = cast(%var_2571, dtype="bool") /* ty=Tensor[(6, 11, 11), bool] */;
    %979 = dyn.reshape(%976, %977, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    %980 = greater(%978, %979) /* ty=Tensor[(6, 11, 11), bool] */;
    %981 = cast(%980, dtype="float32") /* ty=Tensor[(6, 11, 11), float32] */;
    %982 = cast(%var_2578, dtype="float32") /* ty=float32 */;
    %983 = %975.0;
    %984 = floor_divide(%981, %982) /* ty=Tensor[(6, 11, 11), float32] */;
    (%983, %984)
  };
  %985(%var_2589, %var_2590) /* ty=(Tensor[(1, 5, 10), float64], Tensor[(6, 11, 11), float32]) */
}

def @func_2170(%var_2146: Tensor[(14, 16, 3), float64], %var_2160: int32) -> (Tensor[(14, 16, 3), float64], Tensor[(4, 12, 7), float32], int32) {
  %986 = cast(%var_2146, dtype="float64") /* ty=Tensor[(14, 16, 3), float64] */;
  %987 = cast(%var_2160, dtype="int32") /* ty=int32 */;
  %988 = reshape(%987, newshape=[]) /* ty=int32 */;
  %989 = @func_95(%988) /* ty=(Tensor[(15, 15, 10), int32], Tensor[(4, 12, 7), float32], Tensor[(336), float32]) */;
  %990 = asinh(%986) /* ty=Tensor[(14, 16, 3), float64] */;
  %991 = %989.1;
  (%990, %991, %var_2160)
}

def @func_11804(%var_11802: int32) -> (Tensor[(6, 12, 12), float32], Tensor[(1, 5, 10), float64], Tensor[(11, 66), int64], int32, Tensor[(1, 9, 3), float32]) {
  @func_11801(%var_11802) /* ty=(Tensor[(6, 12, 12), float32], Tensor[(1, 5, 10), float64], Tensor[(11, 66), int64], int32, Tensor[(1, 9, 3), float32]) */
}

def @func_6337() -> (Tensor[(6, 12, 12), float32],) {
  %996 = fn () -> (Tensor[(6, 12, 12), float32],) {
    %992 = @func_6211() /* ty=(Tensor[(6, 12, 12), float32], Tensor[(27, 1), uint8], Tensor[(1, 9, 3), float32]) */;
    %993 = %992.0;
    %994 = cast(%993, dtype="float32") /* ty=Tensor[(6, 12, 12), float32] */;
    %995 = sin(%994) /* ty=Tensor[(6, 12, 12), float32] */;
    (%995,)
  };
  %996() /* ty=(Tensor[(6, 12, 12), float32],) */
}

/* For debugging purposes the metadata section has been omitted.
 * If you would like to see the full metadata section you can set the 
 * option to `True` when invoking `astext`. 
 */The type inference pass was unable to infer a type for this expression.
This usually occurs when an operator call is under constrained in some way, check other reported errors for hints of what may of happened.

===================================
note: run with `TVM_BACKTRACE=1` environment variable to display a backtrace.

==========mod==========
#[version = "0.0.5"]
def @func_7797() -> Tensor[(9, 10, 6), int16] {
  @func_5121() /* ty=Tensor[(9, 10, 6), int16] */
}

def @func_6056(%var_6050: Tensor[(308), float64]) -> (Tensor[(13, 2, 16), float64], Tensor[(11, 14, 2), float64], Tensor[(308), float64]) {
  %0 = @func_2512() /* ty=(Tensor[(13, 2, 16), float64],) */;
  %1 = cast(%var_6050, dtype="float64") /* ty=Tensor[(308), float64] */;
  %2 = reshape(%1, newshape=[11, 14, 2]) /* ty=Tensor[(11, 14, 2), float64] */;
  %3 = @func_4426(%2) /* ty=(Tensor[(11, 14, 2), float64],) */;
  %4 = %0.0;
  %5 = %3.0;
  (%4, %5, %var_6050)
}

def @func_4261() -> (Tensor[(9, 10, 6), float64], Tensor[(9, 10, 6), float64], Tensor[(3, 8, 10), float32]) {
  %6 = @func_3264() /* ty=(Tensor[(12, 13, 2), float64], Tensor[(9, 10, 6), float64], Tensor[(450), int8]) */;
  %7 = @func_1100() /* ty=(Tensor[(12, 13, 2), float64], Tensor[(9, 10, 6), float64]) */;
  %8 = @func_2791() /* ty=(Tensor[(16, 11, 2), bool], Tensor[(3, 8, 10), float32], Tensor[(8, 30), bool], Tensor[(16, 11, 2), float64]) */;
  %9 = %6.1;
  %10 = %7.1;
  %11 = %8.1;
  (%9, %10, %11)
}

def @func_5341() -> Tensor[(9, 10, 6), int16] {
  %12 = @func_3025() /* ty=(Tensor[(9, 10, 6), int16],) */;
  %12.0
}

def @func_3953() -> (Tensor[(13, 2, 16), bool],) {
  %13 = @func_370() /* ty=Tensor[(13, 2, 16), bool] */;
  (%13,)
}

def @func_5571() -> (Tensor[(9, 10, 6), int16], Tensor[(12, 13, 2), float64], Tensor[(240), bool], Tensor[(6, 5, 10), uint32], Tensor[(5, 60), uint32], Tensor[(450), int8]) {
  %14 = @func_4364() /* ty=(Tensor[(12, 13, 2), float64], Tensor[(13, 2, 16), float32], Tensor[(9, 10, 6), int16], Tensor[(13, 2, 16), float64]) */;
  %15 = cast(meta[relay.Constant][0] /* ty=Tensor[(240), bool] */, dtype="bool") /* ty=Tensor[(240), bool] */;
  %16 = %14.2;
  %17 = cast(%16, dtype="float64") /* ty=Tensor[(9, 10, 6), float64] */;
  %18 = reshape(%15, newshape=[240]) /* ty=Tensor[(240), bool] */;
  %19 = reshape(%17, newshape=[540]) /* ty=Tensor[(540), float64] */;
  %20 = @func_4785(%18, %19) /* ty=(Tensor[(12, 13, 2), float64], Tensor[(3, 8, 10), bool], Tensor[(240), bool], Tensor[(9, 10, 6), bool], Tensor[(540), float64], Tensor[(9, 10, 6), int16], Tensor[(9, 10, 6), float64]) */;
  %21 = cast(meta[relay.Constant][1] /* ty=Tensor[(5, 60), uint32] */, dtype="uint32") /* ty=Tensor[(5, 60), uint32] */;
  %22 = cast(meta[relay.Constant][1] /* ty=Tensor[(5, 60), uint32] */, dtype="uint32") /* ty=Tensor[(5, 60), uint32] */;
  %23 = cast(meta[relay.Constant][2] /* ty=Tensor[(450), int8] */, dtype="int8") /* ty=Tensor[(450), int8] */;
  %24 = reshape(%21, newshape=[6, 5, 10]) /* ty=Tensor[(6, 5, 10), uint32] */;
  %25 = reshape(%22, newshape=[6, 5, 10]) /* ty=Tensor[(6, 5, 10), uint32] */;
  %26 = reshape(%23, newshape=[450]) /* ty=Tensor[(450), int8] */;
  %27 = @func_1949(%24, %25, %26) /* ty=(Tensor[(6, 5, 10), uint32], Tensor[(6, 5, 10), bool], Tensor[(9, 10, 6), float64], Tensor[(540), float64], Tensor[(5, 7, 16), int32], Tensor[(560), int32], Tensor[(13, 2, 16), bool], Tensor[(450), int8], Tensor[(12, 13, 2), float64], Tensor[(312), float64]) */;
  %28 = %20.0;
  %29 = %27.0;
  (%16, %28, meta[relay.Constant][0] /* ty=Tensor[(240), bool] */, %29, meta[relay.Constant][1] /* ty=Tensor[(5, 60), uint32] */, meta[relay.Constant][2] /* ty=Tensor[(450), int8] */)
}

def @func_5121() -> Tensor[(9, 10, 6), int16] {
  %30 = @func_2137() /* ty=(Tensor[(9, 10, 6), int16],) */;
  %30.0
}

def @func_7163() -> Tensor[(13, 2, 16), bool] {
  @func_3670() /* ty=Tensor[(13, 2, 16), bool] */
}

def @func_3158(%var_3124: Tensor[(560), int32], %var_3135: Tensor[(13, 15), float32]) -> (Tensor[(13, 2, 16), bool], Tensor[(13, 2, 16), float64], Tensor[(13, 2, 16), bool], Tensor[(50, 9), int8], int8, Tensor[(60, 24), float64], Tensor[(5, 7, 16), int32], Tensor[(560), int32], Tensor[(13, 3, 5), float32], Tensor[(13, 15), float32]) {
  %31 = @func_1960() /* ty=(Tensor[(13, 2, 16), float64],) */;
  %32 = cast(meta[relay.Constant][3] /* ty=Tensor[(50, 9), int8] */, dtype="int8") /* ty=Tensor[(50, 9), int8] */;
  %33 = cast(meta[relay.Constant][3] /* ty=Tensor[(50, 9), int8] */, dtype="float64") /* ty=Tensor[(50, 9), float64] */;
  %34 = reshape(%32, newshape=[10, 45]) /* ty=Tensor[(10, 45), int8] */;
  %35 = reshape(%33, newshape=[10, 45]) /* ty=Tensor[(10, 45), float64] */;
  %36 = @func_474(%34, %35) /* ty=(Tensor[(9, 10, 6), float64], Tensor[(540), float64], Tensor[(9, 10, 6), float64], Tensor[(13, 2, 16), bool], Tensor[(10, 45), bool]) */;
  %37 = cast(meta[relay.Constant][4] /* ty=Tensor[(60, 24), float64] */, dtype="float64") /* ty=Tensor[(60, 24), float64] */;
  %38 = reshape(%37, newshape=[16, 10, 9]) /* ty=Tensor[(16, 10, 9), float64] */;
  %39 = @func_2253(%38) /* ty=(Tensor[(540), float64], Tensor[(16, 10, 9), float32], int8, Tensor[(450, 1), int8]) */;
  %40 = cast(%var_3124, dtype="int32") /* ty=Tensor[(560), int32] */;
  %41 = reshape(%40, newshape=[5, 7, 16]) /* ty=Tensor[(5, 7, 16), int32] */;
  %42 = @func_649(%41) /* ty=(Tensor[(5, 7, 16), int32],) */;
  %43 = cast(%var_3135, dtype="float32") /* ty=Tensor[(13, 15), float32] */;
  %44 = reshape(%43, newshape=[13, 3, 5]) /* ty=Tensor[(13, 3, 5), float32] */;
  %45 = @func_2958(%44) /* ty=(Tensor[(13, 3, 5), float32],) */;
  %46 = @func_370() /* ty=Tensor[(13, 2, 16), bool] */;
  %47 = %31.0;
  %48 = %36.3;
  %49 = %39.2;
  %50 = %42.0;
  %51 = %45.0;
  (%46, %47, %48, meta[relay.Constant][3] /* ty=Tensor[(50, 9), int8] */, %49, meta[relay.Constant][4] /* ty=Tensor[(60, 24), float64] */, %50, %var_3124, %51, %var_3135)
}

def @func_4608(%var_4542: Tensor[(240), bool]) -> (Tensor[(13, 2, 16), float64], Tensor[(240), bool], Tensor[(9, 10, 6), float64]) {
  %52 = cast(%var_4542, dtype="bool") /* ty=Tensor[(240), bool] */;
  %53 = reshape(%52, newshape=[3, 8, 10]) /* ty=Tensor[(3, 8, 10), bool] */;
  %54 = @func_1873(%53) /* ty=(Tensor[(13, 2, 16), float64], Tensor[(3, 8, 10), float32]) */;
  %55 = @func_2137() /* ty=(Tensor[(9, 10, 6), int16],) */;
  %56 = %55.0;
  %57 = cast(%56, dtype="float64") /* ty=Tensor[(9, 10, 6), float64] */;
  %58 = %54.0;
  %59 = asinh(%57) /* ty=Tensor[(9, 10, 6), float64] */;
  (%58, %var_4542, %59)
}

def @func_7223() -> (Tensor[(12, 13, 2), float64], Tensor[(13, 2, 16), bool]) {
  %60 = @func_5038() /* ty=(Tensor[(12, 13, 2), float64],) */;
  %61 = %60.0;
  %62 = cast(%61, dtype="float64") /* ty=Tensor[(12, 13, 2), float64] */;
  %63 = log10(%62) /* ty=Tensor[(12, 13, 2), float64] */;
  %64 = @func_2738() /* ty=Tensor[(13, 2, 16), bool] */;
  (%63, %64)
}

def @func_1873(%var_1860: Tensor[(3, 8, 10), bool]) -> (Tensor[(13, 2, 16), float64], Tensor[(3, 8, 10), float32]) {
  %65 = @func_1550() /* ty=(Tensor[(3, 8, 10), bool], Tensor[(13, 2, 16), float64]) */;
  %66 = @func_1261() /* ty=Tensor[(3, 8, 10), bool] */;
  %67 = cast(%var_1860, dtype="float32") /* ty=Tensor[(3, 8, 10), float32] */;
  %68 = shape_of(%66, dtype="int32") /* ty=Tensor[(3), int32] */;
  %69 = cast(%66, dtype="float32") /* ty=Tensor[(3, 8, 10), float32] */;
  %70 = dyn.reshape(%67, %68, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %71 = %65.1;
  %72 = power(%69, %70) /* ty=Tensor[(3, 8, 10), float32] */;
  (%71, %72)
}

def @func_4403() -> (Tensor[(13, 2, 16), float32], Tensor[(9, 10, 6), int16]) {
  %73 = @func_4364() /* ty=(Tensor[(12, 13, 2), float64], Tensor[(13, 2, 16), float32], Tensor[(9, 10, 6), int16], Tensor[(13, 2, 16), float64]) */;
  %74 = @func_2035() /* ty=(Tensor[(9, 10, 6), int16],) */;
  %75 = %73.1;
  %76 = %74.0;
  (%75, %76)
}

def @func_2791() -> (Tensor[(16, 11, 2), bool], Tensor[(3, 8, 10), float32], Tensor[(8, 30), bool], Tensor[(16, 11, 2), float64]) {
  %77 = cast(meta[relay.Constant][5] /* ty=Tensor[(16, 11, 2), float32] */, dtype="float32") /* ty=Tensor[(16, 11, 2), float32] */;
  %78 = sinh(%77) /* ty=Tensor[(16, 11, 2), float32] */;
  %79 = cast(meta[relay.Constant][5] /* ty=Tensor[(16, 11, 2), float32] */, dtype="bool") /* ty=Tensor[(16, 11, 2), bool] */;
  %80 = shape_of(%78, dtype="int32") /* ty=Tensor[(3), int32] */;
  %81 = cast(%78, dtype="bool") /* ty=Tensor[(16, 11, 2), bool] */;
  %82 = dyn.reshape(%79, %80, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %83 = cast(meta[relay.Constant][6] /* ty=Tensor[(8, 30), bool] */, dtype="bool") /* ty=Tensor[(8, 30), bool] */;
  %84 = reshape(%83, newshape=[3, 8, 10]) /* ty=Tensor[(3, 8, 10), bool] */;
  %85 = @func_1873(%84) /* ty=(Tensor[(13, 2, 16), float64], Tensor[(3, 8, 10), float32]) */;
  %86 = cast(meta[relay.Constant][5] /* ty=Tensor[(16, 11, 2), float32] */, dtype="float64") /* ty=Tensor[(16, 11, 2), float64] */;
  %87 = logical_or(%81, %82) /* ty=Tensor[(16, 11, 2), bool] */;
  %88 = %85.1;
  %89 = asin(%86) /* ty=Tensor[(16, 11, 2), float64] */;
  (%87, %88, meta[relay.Constant][6] /* ty=Tensor[(8, 30), bool] */, %89)
}

def @func_6762() -> (Tensor[(13, 2, 16), float64],) {
  %90 = @func_2349() /* ty=(Tensor[(13, 2, 16), float64], Tensor[(12, 13, 2), float64]) */;
  %91 = %90.0;
  (%91,)
}

def @func_3902() -> Tensor[(9, 10, 6), int16] {
  %92 = @func_3025() /* ty=(Tensor[(9, 10, 6), int16],) */;
  %92.0
}

def @func_898(%var_886: Tensor[(12, 13, 2), float64]) -> (Tensor[(12, 13, 2), float64],) {
  %93 = cast(%var_886, dtype="float64") /* ty=Tensor[(12, 13, 2), float64] */;
  %94 = shape_of(meta[relay.Constant][7] /* ty=Tensor[(12, 13, 2), float64] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %95 = cast(meta[relay.Constant][7] /* ty=Tensor[(12, 13, 2), float64] */, dtype="float64") /* ty=Tensor[(12, 13, 2), float64] */;
  %96 = dyn.reshape(%93, %94, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %97 = mod(%95, %96) /* ty=Tensor[(12, 13, 2), float64] */;
  (%97,)
}

def @func_1100() -> (Tensor[(12, 13, 2), float64], Tensor[(9, 10, 6), float64]) {
  %98 = @func_1078() /* ty=(Tensor[(13, 2, 16), bool], Tensor[(450), int8], Tensor[(540), float64], Tensor[(450), int8], Tensor[(12, 13, 2), float64], Tensor[(1, 312), float64]) */;
  %99 = @func_266() /* ty=(Tensor[(13, 2, 16), bool], Tensor[(9, 10, 6), float64], Tensor[(540), float64]) */;
  %100 = %98.4;
  %101 = %99.1;
  (%100, %101)
}

def @func_4634(%var_4626: float64, %var_4627: Tensor[(8, 2, 11), float64]) -> Tensor[(8, 2, 11), bool] {
  %102 = cast(%var_4626, dtype="bool") /* ty=bool */;
  %103 = cast(%var_4627, dtype="bool") /* ty=Tensor[(8, 2, 11), bool] */;
  greater(%102, %103) /* ty=Tensor[(8, 2, 11), bool] */
}

def @func_1078() -> (Tensor[(13, 2, 16), bool], Tensor[(450), int8], Tensor[(540), float64], Tensor[(450), int8], Tensor[(12, 13, 2), float64], Tensor[(1, 312), float64]) {
  %104 = cast(meta[relay.Constant][8] /* ty=Tensor[(540), float64] */, dtype="float64") /* ty=Tensor[(540), float64] */;
  %105 = cast(meta[relay.Constant][9] /* ty=Tensor[(450), int8] */, dtype="int8") /* ty=Tensor[(450), int8] */;
  %106 = reshape(%104, newshape=[9, 10, 6]) /* ty=Tensor[(9, 10, 6), float64] */;
  %107 = reshape(%105, newshape=[450]) /* ty=Tensor[(450), int8] */;
  %108 = @func_629(%106, %107) /* ty=(Tensor[(9, 10, 6), float32], Tensor[(9, 10, 6), int32], Tensor[(13, 2, 16), bool], Tensor[(450), int8], Tensor[(13, 2, 16), bool], int8) */;
  %109 = cast(meta[relay.Constant][10] /* ty=Tensor[(1, 312), float64] */, dtype="float64") /* ty=Tensor[(1, 312), float64] */;
  %110 = reshape(%109, newshape=[12, 13, 2]) /* ty=Tensor[(12, 13, 2), float64] */;
  %111 = @func_898(%110) /* ty=(Tensor[(12, 13, 2), float64],) */;
  %112 = @func_370() /* ty=Tensor[(13, 2, 16), bool] */;
  %113 = %108.3;
  %114 = %111.0;
  (%112, %113, meta[relay.Constant][8] /* ty=Tensor[(540), float64] */, meta[relay.Constant][9] /* ty=Tensor[(450), int8] */, %114, meta[relay.Constant][10] /* ty=Tensor[(1, 312), float64] */)
}

def @func_6187() -> (Tensor[(9, 10, 6), int16], Tensor[(13, 2, 16), float64]) {
  %115 = @func_3551() /* ty=(Tensor[(12, 13, 2), float64], Tensor[(416), uint16], Tensor[(3, 8, 10), bool], Tensor[(9, 10, 6), int16]) */;
  %116 = @func_5794() /* ty=(Tensor[(13, 2, 16), float64], Tensor[(12, 13, 2), float64], Tensor[(9, 10, 6), int16], Tensor[(9, 10, 6), float64], Tensor[(13, 2, 16), float64]) */;
  %117 = %115.3;
  %118 = %116.0;
  (%117, %118)
}

def @func_1636(%var_1621: Tensor[(5, 90), int8]) -> (Tensor[(9, 10, 6), float64], Tensor[(13, 2, 16), bool], Tensor[(5, 90), int8], Tensor[(9, 10, 6), int16]) {
  %119 = @func_266() /* ty=(Tensor[(13, 2, 16), bool], Tensor[(9, 10, 6), float64], Tensor[(540), float64]) */;
  %120 = cast(%var_1621, dtype="int8") /* ty=Tensor[(5, 90), int8] */;
  %121 = reshape(%120, newshape=[5, 15, 6]) /* ty=Tensor[(5, 15, 6), int8] */;
  %122 = @func_855(%121) /* ty=(Tensor[(13, 2, 16), bool], Tensor[(54, 10), float64], Tensor[(5, 15, 6), float64]) */;
  %123 = @func_709() /* ty=(Tensor[(9, 10, 6), int16],) */;
  %124 = %119.1;
  %125 = %122.0;
  %126 = %123.0;
  (%124, %125, %var_1621, %126)
}

def @func_5794() -> (Tensor[(13, 2, 16), float64], Tensor[(12, 13, 2), float64], Tensor[(9, 10, 6), int16], Tensor[(9, 10, 6), float64], Tensor[(13, 2, 16), float64]) {
  %127 = @func_1960() /* ty=(Tensor[(13, 2, 16), float64],) */;
  %128 = @func_1100() /* ty=(Tensor[(12, 13, 2), float64], Tensor[(9, 10, 6), float64]) */;
  %129 = %127.0;
  %130 = cast(%129, dtype="float64") /* ty=Tensor[(13, 2, 16), float64] */;
  %131 = cast(%129, dtype="float64") /* ty=Tensor[(13, 2, 16), float64] */;
  %132 = reshape(%130, newshape=[13, 2, 16]) /* ty=Tensor[(13, 2, 16), float64] */;
  %133 = reshape(%131, newshape=[13, 2, 16]) /* ty=Tensor[(13, 2, 16), float64] */;
  %134 = @func_984(%132, %133) /* ty=(Tensor[(13, 2, 16), float64], Tensor[(13, 2, 16), bool]) */;
  %135 = @func_4941() /* ty=Tensor[(12, 13, 2), float64] */;
  %136 = @func_5121() /* ty=Tensor[(9, 10, 6), int16] */;
  %137 = %128.1;
  %138 = %134.0;
  (%129, %135, %136, %137, %138)
}

def @func_7351(%var_7317: Tensor[(16, 6, 12), float64], %var_7336: Tensor[(4, 60), bool]) -> (Tensor[(16, 6, 12), float64], Tensor[(13, 2, 16), bool], Tensor[(450), int8], Tensor[(6, 10, 4), bool], Tensor[(4, 60), bool]) {
  %139 = cast(%var_7317, dtype="float64") /* ty=Tensor[(16, 6, 12), float64] */;
  %140 = cast(meta[relay.Constant][11] /* ty=Tensor[(450), int8] */, dtype="int8") /* ty=Tensor[(450), int8] */;
  %141 = reshape(%140, newshape=[5, 15, 6]) /* ty=Tensor[(5, 15, 6), int8] */;
  %142 = @func_855(%141) /* ty=(Tensor[(13, 2, 16), bool], Tensor[(54, 10), float64], Tensor[(5, 15, 6), float64]) */;
  %143 = cast(%var_7336, dtype="bool") /* ty=Tensor[(4, 60), bool] */;
  %144 = reshape(%143, newshape=[6, 10, 4]) /* ty=Tensor[(6, 10, 4), bool] */;
  %145 = log10(%139) /* ty=Tensor[(16, 6, 12), float64] */;
  %146 = %142.0;
  %147 = @func_6105(%144) /* ty=Tensor[(6, 10, 4), bool] */;
  (%145, %146, meta[relay.Constant][11] /* ty=Tensor[(450), int8] */, %147, %var_7336)
}

def @func_7584() -> Tensor[(13, 2, 16), float64] {
  %148 = @func_1588() /* ty=(Tensor[(13, 2, 16), float64],) */;
  %148.0
}

def @func_2958(%var_2930: Tensor[(13, 3, 5), float32]) -> (Tensor[(13, 3, 5), float32],) {
  %149 = cast(%var_2930, dtype="float32") /* ty=Tensor[(13, 3, 5), float32] */;
  %150 = log(%149) /* ty=Tensor[(13, 3, 5), float32] */;
  (%150,)
}

def @func_5866(%var_5850: Tensor[(13, 2, 16), float32]) -> (Tensor[(16, 7, 9), float64], Tensor[(1008), float64], Tensor[(13, 2, 16), int16], Tensor[(12, 13, 2), float64]) {
  %151 = cast(meta[relay.Constant][12] /* ty=Tensor[(1008), float64] */, dtype="float64") /* ty=Tensor[(1008), float64] */;
  %152 = reshape(%151, newshape=[1008]) /* ty=Tensor[(1008), float64] */;
  %153 = @func_2811(%152) /* ty=(Tensor[(9, 10, 6), int16], Tensor[(16, 7, 9), float64], Tensor[(1008), float64]) */;
  %154 = @func_4403() /* ty=(Tensor[(13, 2, 16), float32], Tensor[(9, 10, 6), int16]) */;
  %155 = %154.0;
  %156 = cast(%var_5850, dtype="int16") /* ty=Tensor[(13, 2, 16), int16] */;
  %157 = shape_of(%155, dtype="int32") /* ty=Tensor[(3), int32] */;
  %158 = cast(%155, dtype="int16") /* ty=Tensor[(13, 2, 16), int16] */;
  %159 = dyn.reshape(%156, %157, newshape=[]) /* ty=Tensor[(?, ?, ?), int16] */;
  %160 = @func_5332() /* ty=(Tensor[(10, 45), float64], Tensor[(12, 13, 2), float64], Tensor[(12, 13, 2), float64]) */;
  %161 = %153.1;
  %162 = bitwise_xor(%158, %159) /* ty=Tensor[(13, 2, 16), int16] */;
  %163 = %160.1;
  (%161, meta[relay.Constant][12] /* ty=Tensor[(1008), float64] */, %162, %163)
}

def @func_7050() -> (Tensor[(560), float64], Tensor[(4, 7, 13), float32], Tensor[(182, 2), float64]) {
  %164 = @func_6729() /* ty=(Tensor[(5, 15, 6), int8], Tensor[(560), int32], Tensor[(13, 2, 16), bool], Tensor[(560), float64]) */;
  %165 = cast(meta[relay.Constant][13] /* ty=Tensor[(182, 2), float64] */, dtype="float64") /* ty=Tensor[(182, 2), float64] */;
  %166 = reshape(%165, newshape=[4, 7, 13]) /* ty=Tensor[(4, 7, 13), float64] */;
  %167 = %164.3;
  %168 = @func_6954(%166) /* ty=Tensor[(4, 7, 13), float32] */;
  (%167, %168, meta[relay.Constant][13] /* ty=Tensor[(182, 2), float64] */)
}

def @func_158(%var_154: Tensor[(9, 10, 6), float64]) -> (Tensor[(9, 10, 6), float64], Tensor[(9, 10, 6), float64]) {
  %169 = cast(meta[relay.Constant][14] /* ty=Tensor[(9, 10, 6), float64] */, dtype="float64") /* ty=Tensor[(9, 10, 6), float64] */;
  %170 = log(%169) /* ty=Tensor[(9, 10, 6), float64] */;
  %171 = cast(%170, dtype="float32") /* ty=Tensor[(9, 10, 6), float32] */;
  %172 = shape_of(meta[relay.Constant][14] /* ty=Tensor[(9, 10, 6), float64] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %173 = cast(meta[relay.Constant][14] /* ty=Tensor[(9, 10, 6), float64] */, dtype="float32") /* ty=Tensor[(9, 10, 6), float32] */;
  %174 = dyn.reshape(%171, %172, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %175 = mod(%173, %174) /* ty=Tensor[(9, 10, 6), float32] */;
  %176 = cast(%175, dtype="float64") /* ty=Tensor[(9, 10, 6), float64] */;
  %177 = cast(%var_154, dtype="float64") /* ty=Tensor[(9, 10, 6), float64] */;
  %178 = shape_of(%170, dtype="int32") /* ty=Tensor[(3), int32] */;
  %179 = cast(%170, dtype="float64") /* ty=Tensor[(9, 10, 6), float64] */;
  %180 = dyn.reshape(%177, %178, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %181 = exp(%176) /* ty=Tensor[(9, 10, 6), float64] */;
  %182 = maximum(%179, %180) /* ty=Tensor[(9, 10, 6), float64] */;
  (%181, %182)
}

def @func_5038() -> (Tensor[(12, 13, 2), float64],) {
  %183 = @func_4460() /* ty=(Tensor[(9, 10, 6), int16], Tensor[(9, 10, 6), int16], Tensor[(12, 13, 2), float64], Tensor[(9, 10, 6), int16], Tensor[(540), float64], Tensor[(450), int8]) */;
  %184 = %183.2;
  (%184,)
}

def @func_4364() -> (Tensor[(12, 13, 2), float64], Tensor[(13, 2, 16), float32], Tensor[(9, 10, 6), int16], Tensor[(13, 2, 16), float64]) {
  %185 = @func_1726() /* ty=(Tensor[(12, 13, 2), float64],) */;
  %186 = @func_1960() /* ty=(Tensor[(13, 2, 16), float64],) */;
  %187 = %186.0;
  %188 = cast(%187, dtype="float64") /* ty=Tensor[(13, 2, 16), float64] */;
  %189 = cast(%187, dtype="float64") /* ty=Tensor[(13, 2, 16), float64] */;
  %190 = reshape(%188, newshape=[13, 2, 16]) /* ty=Tensor[(13, 2, 16), float64] */;
  %191 = reshape(%189, newshape=[13, 2, 16]) /* ty=Tensor[(13, 2, 16), float64] */;
  %192 = @func_984(%190, %191) /* ty=(Tensor[(13, 2, 16), float64], Tensor[(13, 2, 16), bool]) */;
  %193 = %192.0;
  %194 = cast(%193, dtype="float32") /* ty=Tensor[(13, 2, 16), float32] */;
  %195 = shape_of(%187, dtype="int32") /* ty=Tensor[(3), int32] */;
  %196 = cast(%187, dtype="float32") /* ty=Tensor[(13, 2, 16), float32] */;
  %197 = dyn.reshape(%194, %195, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %198 = @func_3025() /* ty=(Tensor[(9, 10, 6), int16],) */;
  %199 = @func_2512() /* ty=(Tensor[(13, 2, 16), float64],) */;
  %200 = %185.0;
  %201 = power(%196, %197) /* ty=Tensor[(13, 2, 16), float32] */;
  %202 = %198.0;
  %203 = %199.0;
  (%200, %201, %202, %203)
}

def @func_370() -> Tensor[(13, 2, 16), bool] {
  %204 = @func_266() /* ty=(Tensor[(13, 2, 16), bool], Tensor[(9, 10, 6), float64], Tensor[(540), float64]) */;
  %204.0
}

def @func_4685(%var_4682: Tensor[(12, 13, 2), float64]) -> (Tensor[(12, 13, 2), float64],) {
  %205 = cast(%var_4682, dtype="float64") /* ty=Tensor[(12, 13, 2), float64] */;
  %206 = sin(%205) /* ty=Tensor[(12, 13, 2), float64] */;
  (%206,)
}

def @func_2610() -> Tensor[(9, 10, 6), int16] {
  %207 = @func_2137() /* ty=(Tensor[(9, 10, 6), int16],) */;
  %207.0
}

def @func_6423() -> (Tensor[(16, 7, 9), float64], Tensor[(6, 5, 10), uint32], Tensor[(3, 8, 10), float64], Tensor[(3, 8, 10), bool]) {
  %208 = @func_4876() /* ty=(Tensor[(12, 13, 2), float64], Tensor[(12, 13, 2), float64], Tensor[(16, 7, 9), float64], Tensor[(1008), float64], Tensor[(9, 10, 6), float64]) */;
  %209 = @func_6315() /* ty=(Tensor[(6, 5, 10), uint32], Tensor[(13, 2, 16), bool]) */;
  %210 = @func_5150() /* ty=(Tensor[(3, 8, 10), bool],) */;
  %211 = %210.0;
  %212 = cast(%211, dtype="float64") /* ty=Tensor[(3, 8, 10), float64] */;
  %213 = @func_1550() /* ty=(Tensor[(3, 8, 10), bool], Tensor[(13, 2, 16), float64]) */;
  %214 = %208.2;
  %215 = %209.0;
  %216 = erf(%212) /* ty=Tensor[(3, 8, 10), float64] */;
  %217 = %213.0;
  (%214, %215, %216, %217)
}

def @func_4239() -> (Tensor[(13, 2, 16), float64],) {
  %218 = @func_575() /* ty=(Tensor[(10, 45), bool], Tensor[(10, 45), float64], Tensor[(5, 15, 6), int8], int8, Tensor[(540), float64], Tensor[(13, 2, 16), float64]) */;
  %219 = %218.5;
  (%219,)
}

def @func_2738() -> Tensor[(13, 2, 16), bool] {
  @func_370() /* ty=Tensor[(13, 2, 16), bool] */
}

def @func_5332() -> (Tensor[(10, 45), float64], Tensor[(12, 13, 2), float64], Tensor[(12, 13, 2), float64]) {
  %220 = @func_575() /* ty=(Tensor[(10, 45), bool], Tensor[(10, 45), float64], Tensor[(5, 15, 6), int8], int8, Tensor[(540), float64], Tensor[(13, 2, 16), float64]) */;
  %221 = @func_1726() /* ty=(Tensor[(12, 13, 2), float64],) */;
  %222 = @func_4941() /* ty=Tensor[(12, 13, 2), float64] */;
  %223 = cast(%222, dtype="float32") /* ty=Tensor[(12, 13, 2), float32] */;
  %224 = tan(%223) /* ty=Tensor[(12, 13, 2), float32] */;
  %225 = cast(%222, dtype="float64") /* ty=Tensor[(12, 13, 2), float64] */;
  %226 = shape_of(%224, dtype="int32") /* ty=Tensor[(3), int32] */;
  %227 = cast(%224, dtype="float64") /* ty=Tensor[(12, 13, 2), float64] */;
  %228 = dyn.reshape(%225, %226, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %229 = %220.1;
  %230 = %221.0;
  %231 = power(%227, %228) /* ty=Tensor[(12, 13, 2), float64] */;
  (%229, %230, %231)
}

def @func_1949(%var_1908: Tensor[(6, 5, 10), uint32], %var_1909: Tensor[(6, 5, 10), uint32], %var_1938: Tensor[(450), int8]) -> (Tensor[(6, 5, 10), uint32], Tensor[(6, 5, 10), bool], Tensor[(9, 10, 6), float64], Tensor[(540), float64], Tensor[(5, 7, 16), int32], Tensor[(560), int32], Tensor[(13, 2, 16), bool], Tensor[(450), int8], Tensor[(12, 13, 2), float64], Tensor[(312), float64]) {
  %232 = cast(%var_1909, dtype="uint32") /* ty=Tensor[(6, 5, 10), uint32] */;
  %233 = shape_of(%var_1908, dtype="int32") /* ty=Tensor[(3), int32] */;
  %234 = cast(%var_1908, dtype="uint32") /* ty=Tensor[(6, 5, 10), uint32] */;
  %235 = dyn.reshape(%232, %233, newshape=[]) /* ty=Tensor[(?, ?, ?), uint32] */;
  %236 = cast(meta[relay.Constant][15] /* ty=Tensor[(6, 5, 10), uint32] */, dtype="bool") /* ty=Tensor[(6, 5, 10), bool] */;
  %237 = shape_of(%var_1909, dtype="int32") /* ty=Tensor[(3), int32] */;
  %238 = cast(%var_1909, dtype="bool") /* ty=Tensor[(6, 5, 10), bool] */;
  %239 = dyn.reshape(%236, %237, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %240 = cast(meta[relay.Constant][16] /* ty=Tensor[(540), float64] */, dtype="float64") /* ty=Tensor[(540), float64] */;
  %241 = reshape(%240, newshape=[9, 10, 6]) /* ty=Tensor[(9, 10, 6), float64] */;
  %242 = @func_158(%241) /* ty=(Tensor[(9, 10, 6), float64], Tensor[(9, 10, 6), float64]) */;
  %243 = cast(meta[relay.Constant][17] /* ty=Tensor[(560), int32] */, dtype="int32") /* ty=Tensor[(560), int32] */;
  %244 = reshape(%243, newshape=[5, 7, 16]) /* ty=Tensor[(5, 7, 16), int32] */;
  %245 = @func_649(%244) /* ty=(Tensor[(5, 7, 16), int32],) */;
  %246 = cast(%var_1938, dtype="int8") /* ty=Tensor[(450), int8] */;
  %247 = reshape(%246, newshape=[5, 90]) /* ty=Tensor[(5, 90), int8] */;
  %248 = @func_1636(%247) /* ty=(Tensor[(9, 10, 6), float64], Tensor[(13, 2, 16), bool], Tensor[(5, 90), int8], Tensor[(9, 10, 6), int16]) */;
  %249 = cast(meta[relay.Constant][18] /* ty=Tensor[(312), float64] */, dtype="float64") /* ty=Tensor[(312), float64] */;
  %250 = reshape(%249, newshape=[12, 13, 2]) /* ty=Tensor[(12, 13, 2), float64] */;
  %251 = @func_898(%250) /* ty=(Tensor[(12, 13, 2), float64],) */;
  %252 = logical_xor(%234, %235) /* ty=Tensor[(6, 5, 10), uint32] */;
  %253 = equal(%238, %239) /* ty=Tensor[(6, 5, 10), bool] */;
  %254 = %242.1;
  %255 = %245.0;
  %256 = %248.1;
  %257 = %251.0;
  (%252, %253, %254, meta[relay.Constant][16] /* ty=Tensor[(540), float64] */, %255, meta[relay.Constant][17] /* ty=Tensor[(560), int32] */, %256, %var_1938, %257, meta[relay.Constant][18] /* ty=Tensor[(312), float64] */)
}

def @func_4876() -> (Tensor[(12, 13, 2), float64], Tensor[(12, 13, 2), float64], Tensor[(16, 7, 9), float64], Tensor[(1008), float64], Tensor[(9, 10, 6), float64]) {
  %258 = @func_1726() /* ty=(Tensor[(12, 13, 2), float64],) */;
  %259 = @func_3844() /* ty=(Tensor[(12, 13, 2), float64], Tensor[(9, 10, 6), float64], Tensor[(450), int8]) */;
  %260 = cast(meta[relay.Constant][19] /* ty=Tensor[(1008), float64] */, dtype="float64") /* ty=Tensor[(1008), float64] */;
  %261 = reshape(%260, newshape=[1008]) /* ty=Tensor[(1008), float64] */;
  %262 = @func_2811(%261) /* ty=(Tensor[(9, 10, 6), int16], Tensor[(16, 7, 9), float64], Tensor[(1008), float64]) */;
  %263 = @func_1100() /* ty=(Tensor[(12, 13, 2), float64], Tensor[(9, 10, 6), float64]) */;
  %264 = %258.0;
  %265 = %259.0;
  %266 = %262.1;
  %267 = %263.1;
  (%264, %265, %266, meta[relay.Constant][19] /* ty=Tensor[(1008), float64] */, %267)
}

def @func_4668() -> Tensor[(540), float64] {
  %268 = @func_4460() /* ty=(Tensor[(9, 10, 6), int16], Tensor[(9, 10, 6), int16], Tensor[(12, 13, 2), float64], Tensor[(9, 10, 6), int16], Tensor[(540), float64], Tensor[(450), int8]) */;
  %268.4
}

def @func_5751() -> (Tensor[(9, 10, 6), int16],) {
  %269 = @func_3551() /* ty=(Tensor[(12, 13, 2), float64], Tensor[(416), uint16], Tensor[(3, 8, 10), bool], Tensor[(9, 10, 6), int16]) */;
  %270 = %269.3;
  (%270,)
}

def @func_4816() -> (Tensor[(13, 2, 16), bool], Tensor[(13, 2, 16), float64], Tensor[(13, 2, 16), bool], Tensor[(450), int8]) {
  %271 = @func_1960() /* ty=(Tensor[(13, 2, 16), float64],) */;
  %272 = cast(meta[relay.Constant][20] /* ty=Tensor[(450), int8] */, dtype="int8") /* ty=Tensor[(450), int8] */;
  %273 = cast(meta[relay.Constant][20] /* ty=Tensor[(450), int8] */, dtype="float64") /* ty=Tensor[(450), float64] */;
  %274 = reshape(%272, newshape=[10, 45]) /* ty=Tensor[(10, 45), int8] */;
  %275 = reshape(%273, newshape=[10, 45]) /* ty=Tensor[(10, 45), float64] */;
  %276 = @func_474(%274, %275) /* ty=(Tensor[(9, 10, 6), float64], Tensor[(540), float64], Tensor[(9, 10, 6), float64], Tensor[(13, 2, 16), bool], Tensor[(10, 45), bool]) */;
  %277 = @func_370() /* ty=Tensor[(13, 2, 16), bool] */;
  %278 = %271.0;
  %279 = %276.3;
  (%277, %278, %279, meta[relay.Constant][20] /* ty=Tensor[(450), int8] */)
}

def @func_6899() -> Tensor[(13, 2, 16), bool] {
  @func_6086() /* ty=Tensor[(13, 2, 16), bool] */
}

def @func_1261() -> Tensor[(3, 8, 10), bool] {
  %280 = cast(meta[relay.Constant][22] /* ty=Tensor[(3, 8, 10), uint32] */, dtype="bool") /* ty=Tensor[(3, 8, 10), bool] */;
  %281 = shape_of(meta[relay.Constant][21] /* ty=Tensor[(3, 8, 10), uint32] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %282 = cast(meta[relay.Constant][21] /* ty=Tensor[(3, 8, 10), uint32] */, dtype="bool") /* ty=Tensor[(3, 8, 10), bool] */;
  %283 = dyn.reshape(%280, %281, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  greater_equal(%282, %283) /* ty=Tensor[(3, 8, 10), bool] */
}

def @func_7243(%var_7229: Tensor[(5, 15, 6), int8]) -> Tensor[(5, 15, 6), bool] {
  %284 = @func_4136() /* ty=(Tensor[(5, 15, 6), int8],) */;
  %285 = %284.0;
  %286 = cast(%var_7229, dtype="bool") /* ty=Tensor[(5, 15, 6), bool] */;
  %287 = shape_of(%285, dtype="int32") /* ty=Tensor[(3), int32] */;
  %288 = cast(%285, dtype="bool") /* ty=Tensor[(5, 15, 6), bool] */;
  %289 = dyn.reshape(%286, %287, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  less_equal(%288, %289) /* ty=Tensor[(5, 15, 6), bool] */
}

def @func_6851() -> (Tensor[(540), float64], Tensor[(9, 10, 6), int16], Tensor[(5, 15, 6), float32], Tensor[(12, 13, 2), float64], Tensor[(416), bool]) {
  %290 = @func_6542() /* ty=(Tensor[(540), float64],) */;
  %291 = @func_4221() /* ty=(Tensor[(13, 2, 16), bool], Tensor[(540), float64], Tensor[(540), float64], Tensor[(1, 312), float64], Tensor[(13, 2, 16), float64], Tensor[(5, 15, 6), float32], Tensor[(5, 7, 16), int32], Tensor[(560), int32]) */;
  %292 = cast(meta[relay.Constant][23] /* ty=Tensor[(416), float64] */, dtype="float64") /* ty=Tensor[(416), float64] */;
  %293 = reshape(%292, newshape=[13, 2, 16]) /* ty=Tensor[(13, 2, 16), float64] */;
  %294 = @func_2465(%293) /* ty=(Tensor[(13, 2, 16), bool], Tensor[(12, 13, 2), float64], Tensor[(12, 13, 2), float64], Tensor[(13, 2, 16), uint32], Tensor[(13, 2, 16), bool], Tensor[(12, 13, 2), float64]) */;
  %295 = @func_575() /* ty=(Tensor[(10, 45), bool], Tensor[(10, 45), float64], Tensor[(5, 15, 6), int8], int8, Tensor[(540), float64], Tensor[(13, 2, 16), float64]) */;
  %296 = %295.3;
  %297 = cast(meta[relay.Constant][23] /* ty=Tensor[(416), float64] */, dtype="bool") /* ty=Tensor[(416), bool] */;
  %298 = cast(%296, dtype="bool") /* ty=bool */;
  %299 = %290.0;
  %300 = @func_3902() /* ty=Tensor[(9, 10, 6), int16] */;
  %301 = %291.5;
  %302 = %294.2;
  %303 = greater(%297, %298) /* ty=Tensor[(416), bool] */;
  (%299, %300, %301, %302, %303)
}

def @func_6868(%var_6866: Tensor[(450), int8]) -> (Tensor[(9, 10, 6), int16], int8, Tensor[(450), int8]) {
  %304 = @func_3902() /* ty=Tensor[(9, 10, 6), int16] */;
  %305 = cast(%304, dtype="float64") /* ty=Tensor[(9, 10, 6), float64] */;
  %306 = cast(%var_6866, dtype="int8") /* ty=Tensor[(450), int8] */;
  %307 = reshape(%305, newshape=[9, 10, 6]) /* ty=Tensor[(9, 10, 6), float64] */;
  %308 = reshape(%306, newshape=[450]) /* ty=Tensor[(450), int8] */;
  %309 = @func_629(%307, %308) /* ty=(Tensor[(9, 10, 6), float32], Tensor[(9, 10, 6), int32], Tensor[(13, 2, 16), bool], Tensor[(450), int8], Tensor[(13, 2, 16), bool], int8) */;
  %310 = %309.5;
  (%304, %310, %var_6866)
}

def @func_6086() -> Tensor[(13, 2, 16), bool] {
  @func_370() /* ty=Tensor[(13, 2, 16), bool] */
}

def @func_4460() -> (Tensor[(9, 10, 6), int16], Tensor[(9, 10, 6), int16], Tensor[(12, 13, 2), float64], Tensor[(9, 10, 6), int16], Tensor[(540), float64], Tensor[(450), int8]) {
  %311 = @func_3025() /* ty=(Tensor[(9, 10, 6), int16],) */;
  %312 = @func_2137() /* ty=(Tensor[(9, 10, 6), int16],) */;
  %313 = @func_1607() /* ty=(Tensor[(12, 13, 2), float64],) */;
  %314 = @func_3025() /* ty=(Tensor[(9, 10, 6), int16],) */;
  %315 = cast(meta[relay.Constant][24] /* ty=Tensor[(450), int8] */, dtype="int8") /* ty=Tensor[(450), int8] */;
  %316 = cast(meta[relay.Constant][24] /* ty=Tensor[(450), int8] */, dtype="float64") /* ty=Tensor[(450), float64] */;
  %317 = reshape(%315, newshape=[10, 45]) /* ty=Tensor[(10, 45), int8] */;
  %318 = reshape(%316, newshape=[10, 45]) /* ty=Tensor[(10, 45), float64] */;
  %319 = @func_474(%317, %318) /* ty=(Tensor[(9, 10, 6), float64], Tensor[(540), float64], Tensor[(9, 10, 6), float64], Tensor[(13, 2, 16), bool], Tensor[(10, 45), bool]) */;
  %320 = %311.0;
  %321 = %312.0;
  %322 = %313.0;
  %323 = %314.0;
  %324 = %319.1;
  (%320, %321, %322, %323, %324, meta[relay.Constant][24] /* ty=Tensor[(450), int8] */)
}

def @func_5803() -> Tensor[(540), float64] {
  %325 = @func_4221() /* ty=(Tensor[(13, 2, 16), bool], Tensor[(540), float64], Tensor[(540), float64], Tensor[(1, 312), float64], Tensor[(13, 2, 16), float64], Tensor[(5, 15, 6), float32], Tensor[(5, 7, 16), int32], Tensor[(560), int32]) */;
  %325.2
}

def @func_6542() -> (Tensor[(540), float64],) {
  %326 = @func_5494() /* ty=(Tensor[(540), float64], Tensor[(3, 8, 10), float64]) */;
  %327 = %326.0;
  (%327,)
}

def @func_649(%var_645: Tensor[(5, 7, 16), int32]) -> (Tensor[(5, 7, 16), int32],) {
  %328 = cast(%var_645, dtype="int32") /* ty=Tensor[(5, 7, 16), int32] */;
  %329 = shape_of(meta[relay.Constant][25] /* ty=Tensor[(5, 7, 16), int32] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %330 = cast(meta[relay.Constant][25] /* ty=Tensor[(5, 7, 16), int32] */, dtype="int32") /* ty=Tensor[(5, 7, 16), int32] */;
  %331 = dyn.reshape(%328, %329, newshape=[]) /* ty=Tensor[(?, ?, ?), int32] */;
  %332 = add(%330, %331) /* ty=Tensor[(5, 7, 16), int32] */;
  (%332,)
}

def @func_2811(%var_2809: Tensor[(1008), float64]) -> (Tensor[(9, 10, 6), int16], Tensor[(16, 7, 9), float64], Tensor[(1008), float64]) {
  %333 = cast(%var_2809, dtype="float64") /* ty=Tensor[(1008), float64] */;
  %334 = reshape(%333, newshape=[16, 7, 9]) /* ty=Tensor[(16, 7, 9), float64] */;
  %335 = @func_2610() /* ty=Tensor[(9, 10, 6), int16] */;
  %336 = @func_2563(%334) /* ty=Tensor[(16, 7, 9), float64] */;
  (%335, %336, %var_2809)
}

def @func_2498(%var_2479: int8, %var_2480: Tensor[(7, 14, 1), int8]) -> (Tensor[(7, 14, 1), int8], Tensor[(9, 10, 6), float64]) {
  %337 = cast(%var_2479, dtype="int8") /* ty=int8 */;
  %338 = cast(%var_2480, dtype="int8") /* ty=Tensor[(7, 14, 1), int8] */;
  %339 = @func_266() /* ty=(Tensor[(13, 2, 16), bool], Tensor[(9, 10, 6), float64], Tensor[(540), float64]) */;
  %340 = logical_xor(%337, %338) /* ty=Tensor[(7, 14, 1), int8] */;
  %341 = %339.1;
  (%340, %341)
}

def @func_266() -> (Tensor[(13, 2, 16), bool], Tensor[(9, 10, 6), float64], Tensor[(540), float64]) {
  %342 = cast(meta[relay.Constant][26] /* ty=Tensor[(13, 2, 16), float64] */, dtype="float64") /* ty=Tensor[(13, 2, 16), float64] */;
  %343 = exp(%342) /* ty=Tensor[(13, 2, 16), float64] */;
  %344 = cast(meta[relay.Constant][26] /* ty=Tensor[(13, 2, 16), float64] */, dtype="bool") /* ty=Tensor[(13, 2, 16), bool] */;
  %345 = shape_of(%343, dtype="int32") /* ty=Tensor[(3), int32] */;
  %346 = cast(%343, dtype="bool") /* ty=Tensor[(13, 2, 16), bool] */;
  %347 = dyn.reshape(%344, %345, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %348 = cast(meta[relay.Constant][27] /* ty=Tensor[(540), float64] */, dtype="float64") /* ty=Tensor[(540), float64] */;
  %349 = reshape(%348, newshape=[9, 10, 6]) /* ty=Tensor[(9, 10, 6), float64] */;
  %350 = @func_158(%349) /* ty=(Tensor[(9, 10, 6), float64], Tensor[(9, 10, 6), float64]) */;
  %351 = logical_and(%346, %347) /* ty=Tensor[(13, 2, 16), bool] */;
  %352 = %350.0;
  (%351, %352, meta[relay.Constant][27] /* ty=Tensor[(540), float64] */)
}

def @func_7537(%var_7496: Tensor[(3, 8, 10), bool], %var_7518: int8, %var_7519: Tensor[(450), int8], %var_7520: Tensor[(540), float64], %var_7522: Tensor[(3, 8, 10), bool], %var_7528: Tensor[(3, 8, 10), bool]) -> (Tensor[(3, 8, 10), bool], Tensor[(9, 10, 6), float64], int8, Tensor[(450), int8], Tensor[(540), float64], Tensor[(3, 8, 10), bool], Tensor[(3, 8, 10), float32]) {
  %353 = @func_3551() /* ty=(Tensor[(12, 13, 2), float64], Tensor[(416), uint16], Tensor[(3, 8, 10), bool], Tensor[(9, 10, 6), int16]) */;
  %354 = %353.2;
  %355 = cast(%var_7496, dtype="uint8") /* ty=Tensor[(3, 8, 10), uint8] */;
  %356 = shape_of(%354, dtype="int32") /* ty=Tensor[(3), int32] */;
  %357 = cast(%354, dtype="uint8") /* ty=Tensor[(3, 8, 10), uint8] */;
  %358 = dyn.reshape(%355, %356, newshape=[]) /* ty=Tensor[(?, ?, ?), uint8] */;
  %359 = bitwise_or(%357, %358) /* ty=Tensor[(3, 8, 10), uint8] */;
  %360 = cast(%var_7496, dtype="bool") /* ty=Tensor[(3, 8, 10), bool] */;
  %361 = shape_of(%359, dtype="int32") /* ty=Tensor[(3), int32] */;
  %362 = cast(%359, dtype="bool") /* ty=Tensor[(3, 8, 10), bool] */;
  %363 = dyn.reshape(%360, %361, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %364 = cast(%var_7518, dtype="int8") /* ty=int8 */;
  %365 = cast(%var_7519, dtype="int8") /* ty=Tensor[(450), int8] */;
  %366 = cast(%var_7520, dtype="float64") /* ty=Tensor[(540), float64] */;
  %367 = reshape(%364, newshape=[]) /* ty=int8 */;
  %368 = reshape(%365, newshape=[5, 15, 6]) /* ty=Tensor[(5, 15, 6), int8] */;
  %369 = reshape(%366, newshape=[540]) /* ty=Tensor[(540), float64] */;
  %370 = @func_410(%367, %368, %369) /* ty=(Tensor[(5, 15, 6), int8], Tensor[(9, 10, 6), float64], Tensor[(540), float64], Tensor[(9, 10, 6), float64], Tensor[(13, 2, 16), bool], Tensor[(9, 10, 6), float64]) */;
  %371 = cast(%var_7522, dtype="bool") /* ty=Tensor[(3, 8, 10), bool] */;
  %372 = shape_of(%354, dtype="int32") /* ty=Tensor[(3), int32] */;
  %373 = cast(%354, dtype="bool") /* ty=Tensor[(3, 8, 10), bool] */;
  %374 = dyn.reshape(%371, %372, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %375 = cast(%var_7528, dtype="float32") /* ty=Tensor[(3, 8, 10), float32] */;
  %376 = shape_of(%var_7522, dtype="int32") /* ty=Tensor[(3), int32] */;
  %377 = cast(%var_7522, dtype="float32") /* ty=Tensor[(3, 8, 10), float32] */;
  %378 = dyn.reshape(%375, %376, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %379 = logical_or(%362, %363) /* ty=Tensor[(3, 8, 10), bool] */;
  %380 = %370.1;
  %381 = greater(%373, %374) /* ty=Tensor[(3, 8, 10), bool] */;
  %382 = floor_mod(%377, %378) /* ty=Tensor[(3, 8, 10), float32] */;
  (%379, %380, %var_7518, %var_7519, %var_7520, %381, %382)
}

def @func_2253(%var_2209: Tensor[(16, 10, 9), float64]) -> (Tensor[(540), float64], Tensor[(16, 10, 9), float32], int8, Tensor[(450, 1), int8]) {
  %383 = @func_1078() /* ty=(Tensor[(13, 2, 16), bool], Tensor[(450), int8], Tensor[(540), float64], Tensor[(450), int8], Tensor[(12, 13, 2), float64], Tensor[(1, 312), float64]) */;
  %384 = cast(%var_2209, dtype="float64") /* ty=Tensor[(16, 10, 9), float64] */;
  %385 = log(%384) /* ty=Tensor[(16, 10, 9), float64] */;
  %386 = cast(%385, dtype="float32") /* ty=Tensor[(16, 10, 9), float32] */;
  %387 = %383.2;
  %388 = cast(%387, dtype="float64") /* ty=Tensor[(540), float64] */;
  %389 = cast(meta[relay.Constant][28] /* ty=Tensor[(450, 1), int8] */, dtype="int8") /* ty=Tensor[(450, 1), int8] */;
  %390 = reshape(%388, newshape=[9, 10, 6]) /* ty=Tensor[(9, 10, 6), float64] */;
  %391 = reshape(%389, newshape=[450]) /* ty=Tensor[(450), int8] */;
  %392 = @func_629(%390, %391) /* ty=(Tensor[(9, 10, 6), float32], Tensor[(9, 10, 6), int32], Tensor[(13, 2, 16), bool], Tensor[(450), int8], Tensor[(13, 2, 16), bool], int8) */;
  %393 = atanh(%386) /* ty=Tensor[(16, 10, 9), float32] */;
  %394 = %392.5;
  (%387, %393, %394, meta[relay.Constant][28] /* ty=Tensor[(450, 1), int8] */)
}

def @func_575() -> (Tensor[(10, 45), bool], Tensor[(10, 45), float64], Tensor[(5, 15, 6), int8], int8, Tensor[(540), float64], Tensor[(13, 2, 16), float64]) {
  %395 = cast(meta[relay.Constant][29] /* ty=Tensor[(10, 45), int8] */, dtype="int8") /* ty=Tensor[(10, 45), int8] */;
  %396 = cast(meta[relay.Constant][29] /* ty=Tensor[(10, 45), int8] */, dtype="float64") /* ty=Tensor[(10, 45), float64] */;
  %397 = reshape(%395, newshape=[10, 45]) /* ty=Tensor[(10, 45), int8] */;
  %398 = reshape(%396, newshape=[10, 45]) /* ty=Tensor[(10, 45), float64] */;
  %399 = @func_474(%397, %398) /* ty=(Tensor[(9, 10, 6), float64], Tensor[(540), float64], Tensor[(9, 10, 6), float64], Tensor[(13, 2, 16), bool], Tensor[(10, 45), bool]) */;
  %400 = cast(meta[relay.Constant][29] /* ty=Tensor[(10, 45), int8] */, dtype="float64") /* ty=Tensor[(10, 45), float64] */;
  %401 = cast(meta[relay.Constant][30] /* ty=int8 */, dtype="int8") /* ty=int8 */;
  %402 = cast(meta[relay.Constant][29] /* ty=Tensor[(10, 45), int8] */, dtype="int8") /* ty=Tensor[(10, 45), int8] */;
  %403 = cast(meta[relay.Constant][31] /* ty=Tensor[(540), float64] */, dtype="float64") /* ty=Tensor[(540), float64] */;
  %404 = reshape(%401, newshape=[]) /* ty=int8 */;
  %405 = reshape(%402, newshape=[5, 15, 6]) /* ty=Tensor[(5, 15, 6), int8] */;
  %406 = reshape(%403, newshape=[540]) /* ty=Tensor[(540), float64] */;
  %407 = @func_410(%404, %405, %406) /* ty=(Tensor[(5, 15, 6), int8], Tensor[(9, 10, 6), float64], Tensor[(540), float64], Tensor[(9, 10, 6), float64], Tensor[(13, 2, 16), bool], Tensor[(9, 10, 6), float64]) */;
  %408 = @func_370() /* ty=Tensor[(13, 2, 16), bool] */;
  %409 = cast(%408, dtype="float64") /* ty=Tensor[(13, 2, 16), float64] */;
  %410 = %399.4;
  %411 = atan(%400) /* ty=Tensor[(10, 45), float64] */;
  %412 = %407.0;
  %413 = cos(%409) /* ty=Tensor[(13, 2, 16), float64] */;
  (%410, %411, %412, meta[relay.Constant][30] /* ty=int8 */, meta[relay.Constant][31] /* ty=Tensor[(540), float64] */, %413)
}

def @func_1960() -> (Tensor[(13, 2, 16), float64],) {
  %414 = @func_1588() /* ty=(Tensor[(13, 2, 16), float64],) */;
  %415 = %414.0;
  (%415,)
}

def @func_2644(%var_2626: Tensor[(540), float64], %var_2634: Tensor[(150, 3), int8]) -> (Tensor[(12, 13, 2), float64], Tensor[(3, 8, 10), bool], Tensor[(9, 10, 6), float64], Tensor[(540), float64], Tensor[(13, 2, 16), bool], Tensor[(150, 3), int8]) {
  %416 = @func_1100() /* ty=(Tensor[(12, 13, 2), float64], Tensor[(9, 10, 6), float64]) */;
  %417 = @func_1550() /* ty=(Tensor[(3, 8, 10), bool], Tensor[(13, 2, 16), float64]) */;
  %418 = cast(%var_2626, dtype="float64") /* ty=Tensor[(540), float64] */;
  %419 = reshape(%418, newshape=[9, 10, 6]) /* ty=Tensor[(9, 10, 6), float64] */;
  %420 = @func_158(%419) /* ty=(Tensor[(9, 10, 6), float64], Tensor[(9, 10, 6), float64]) */;
  %421 = cast(%var_2634, dtype="int8") /* ty=Tensor[(150, 3), int8] */;
  %422 = reshape(%421, newshape=[5, 90]) /* ty=Tensor[(5, 90), int8] */;
  %423 = @func_1636(%422) /* ty=(Tensor[(9, 10, 6), float64], Tensor[(13, 2, 16), bool], Tensor[(5, 90), int8], Tensor[(9, 10, 6), int16]) */;
  %424 = %416.0;
  %425 = %417.0;
  %426 = %420.1;
  %427 = %423.1;
  (%424, %425, %426, %var_2626, %427, %var_2634)
}

def @func_2986(%var_2979: Tensor[(560), int32]) -> (Tensor[(9, 10, 6), float64], Tensor[(5, 7, 16), int32], Tensor[(560), int32]) {
  %428 = @func_1100() /* ty=(Tensor[(12, 13, 2), float64], Tensor[(9, 10, 6), float64]) */;
  %429 = cast(%var_2979, dtype="int32") /* ty=Tensor[(560), int32] */;
  %430 = reshape(%429, newshape=[5, 7, 16]) /* ty=Tensor[(5, 7, 16), int32] */;
  %431 = @func_649(%430) /* ty=(Tensor[(5, 7, 16), int32],) */;
  %432 = %428.1;
  %433 = %431.0;
  (%432, %433, %var_2979)
}

def @func_474(%var_435: Tensor[(10, 45), int8], %var_462: Tensor[(10, 45), float64]) -> (Tensor[(9, 10, 6), float64], Tensor[(540), float64], Tensor[(9, 10, 6), float64], Tensor[(13, 2, 16), bool], Tensor[(10, 45), bool]) {
  %434 = @func_266() /* ty=(Tensor[(13, 2, 16), bool], Tensor[(9, 10, 6), float64], Tensor[(540), float64]) */;
  %435 = cast(meta[relay.Constant][32] /* ty=int8 */, dtype="int8") /* ty=int8 */;
  %436 = cast(%var_435, dtype="int8") /* ty=Tensor[(10, 45), int8] */;
  %437 = %434.1;
  %438 = cast(%437, dtype="float64") /* ty=Tensor[(9, 10, 6), float64] */;
  %439 = reshape(%435, newshape=[]) /* ty=int8 */;
  %440 = reshape(%436, newshape=[5, 15, 6]) /* ty=Tensor[(5, 15, 6), int8] */;
  %441 = reshape(%438, newshape=[540]) /* ty=Tensor[(540), float64] */;
  %442 = @func_410(%439, %440, %441) /* ty=(Tensor[(5, 15, 6), int8], Tensor[(9, 10, 6), float64], Tensor[(540), float64], Tensor[(9, 10, 6), float64], Tensor[(13, 2, 16), bool], Tensor[(9, 10, 6), float64]) */;
  %443 = cast(meta[relay.Constant][32] /* ty=int8 */, dtype="int8") /* ty=int8 */;
  %444 = cast(%var_435, dtype="int8") /* ty=Tensor[(10, 45), int8] */;
  %445 = cast(%437, dtype="float64") /* ty=Tensor[(9, 10, 6), float64] */;
  %446 = reshape(%443, newshape=[]) /* ty=int8 */;
  %447 = reshape(%444, newshape=[5, 15, 6]) /* ty=Tensor[(5, 15, 6), int8] */;
  %448 = reshape(%445, newshape=[540]) /* ty=Tensor[(540), float64] */;
  %449 = @func_410(%446, %447, %448) /* ty=(Tensor[(5, 15, 6), int8], Tensor[(9, 10, 6), float64], Tensor[(540), float64], Tensor[(9, 10, 6), float64], Tensor[(13, 2, 16), bool], Tensor[(9, 10, 6), float64]) */;
  %450 = cast(%var_435, dtype="uint64") /* ty=Tensor[(10, 45), uint64] */;
  %451 = cast(meta[relay.Constant][32] /* ty=int8 */, dtype="uint64") /* ty=uint64 */;
  %452 = logical_xor(%450, %451) /* ty=Tensor[(10, 45), uint64] */;
  %453 = cast(%452, dtype="float64") /* ty=Tensor[(10, 45), float64] */;
  %454 = sqrt(%453) /* ty=Tensor[(10, 45), float64] */;
  %455 = cast(%var_462, dtype="bool") /* ty=Tensor[(10, 45), bool] */;
  %456 = shape_of(%454, dtype="int32") /* ty=Tensor[(2), int32] */;
  %457 = cast(%454, dtype="bool") /* ty=Tensor[(10, 45), bool] */;
  %458 = dyn.reshape(%455, %456, newshape=[]) /* ty=Tensor[(?, ?), bool] */;
  %459 = %442.2;
  %460 = %449.5;
  %461 = @func_370() /* ty=Tensor[(13, 2, 16), bool] */;
  %462 = not_equal(%457, %458) /* ty=Tensor[(10, 45), bool] */;
  (%437, %459, %460, %461, %462)
}

def @func_2137() -> (Tensor[(9, 10, 6), int16],) {
  %463 = @func_709() /* ty=(Tensor[(9, 10, 6), int16],) */;
  %464 = %463.0;
  (%464,)
}

def @func_6219(%var_6190: Tensor[(8, 6, 6), bool], %var_6191: Tensor[(8, 6, 6), bool]) -> (Tensor[(8, 6, 6), bool], Tensor[(9, 10, 6), int16], Tensor[(9, 10, 6), bool]) {
  %465 = cast(%var_6191, dtype="bool") /* ty=Tensor[(8, 6, 6), bool] */;
  %466 = shape_of(%var_6190, dtype="int32") /* ty=Tensor[(3), int32] */;
  %467 = cast(%var_6190, dtype="bool") /* ty=Tensor[(8, 6, 6), bool] */;
  %468 = dyn.reshape(%465, %466, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %469 = @func_2137() /* ty=(Tensor[(9, 10, 6), int16],) */;
  %470 = %469.0;
  %471 = cast(%470, dtype="float64") /* ty=Tensor[(9, 10, 6), float64] */;
  %472 = reshape(%471, newshape=[9, 10, 6]) /* ty=Tensor[(9, 10, 6), float64] */;
  %473 = @func_1711(%472) /* ty=(Tensor[(9, 10, 6), bool], Tensor[(9, 10, 6), bool]) */;
  %474 = logical_or(%467, %468) /* ty=Tensor[(8, 6, 6), bool] */;
  %475 = %473.1;
  (%474, %470, %475)
}

def @func_6315() -> (Tensor[(6, 5, 10), uint32], Tensor[(13, 2, 16), bool]) {
  %476 = @func_5571() /* ty=(Tensor[(9, 10, 6), int16], Tensor[(12, 13, 2), float64], Tensor[(240), bool], Tensor[(6, 5, 10), uint32], Tensor[(5, 60), uint32], Tensor[(450), int8]) */;
  %477 = %476.3;
  %478 = @func_2738() /* ty=Tensor[(13, 2, 16), bool] */;
  (%477, %478)
}

def @func_4941() -> Tensor[(12, 13, 2), float64] {
  @func_3070() /* ty=Tensor[(12, 13, 2), float64] */
}

def @func_7288() -> (Tensor[(13, 2, 16), float64], Tensor[(13, 2, 16), int32]) {
  %479 = @func_4971() /* ty=(Tensor[(13, 2, 16), bool], Tensor[(9, 10, 6), int16]) */;
  %480 = %479.0;
  %481 = cast(meta[relay.Constant][33] /* ty=Tensor[(13, 2, 16), bool] */, dtype="float64") /* ty=Tensor[(13, 2, 16), float64] */;
  %482 = shape_of(%480, dtype="int32") /* ty=Tensor[(3), int32] */;
  %483 = cast(%480, dtype="float64") /* ty=Tensor[(13, 2, 16), float64] */;
  %484 = dyn.reshape(%481, %482, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %485 = cast(meta[relay.Constant][34] /* ty=Tensor[(13, 2, 16), bool] */, dtype="int32") /* ty=Tensor[(13, 2, 16), int32] */;
  %486 = shape_of(meta[relay.Constant][33] /* ty=Tensor[(13, 2, 16), bool] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %487 = cast(meta[relay.Constant][33] /* ty=Tensor[(13, 2, 16), bool] */, dtype="int32") /* ty=Tensor[(13, 2, 16), int32] */;
  %488 = dyn.reshape(%485, %486, newshape=[]) /* ty=Tensor[(?, ?, ?), int32] */;
  %489 = floor_mod(%483, %484) /* ty=Tensor[(13, 2, 16), float64] */;
  %490 = right_shift(%487, %488) /* ty=Tensor[(13, 2, 16), int32] */;
  (%489, %490)
}

def @func_5150() -> (Tensor[(3, 8, 10), bool],) {
  %491 = @func_1261() /* ty=Tensor[(3, 8, 10), bool] */;
  (%491,)
}

def @func_6797() -> (Tensor[(13, 2, 16), bool], Tensor[(9, 10, 6), float64]) {
  %492 = @func_5972() /* ty=(Tensor[(9, 10, 6), int16], Tensor[(5, 15, 6), int8], Tensor[(13, 2, 16), bool]) */;
  %493 = @func_5794() /* ty=(Tensor[(13, 2, 16), float64], Tensor[(12, 13, 2), float64], Tensor[(9, 10, 6), int16], Tensor[(9, 10, 6), float64], Tensor[(13, 2, 16), float64]) */;
  %494 = %493.2;
  %495 = cast(%494, dtype="float64") /* ty=Tensor[(9, 10, 6), float64] */;
  %496 = %492.2;
  %497 = sigmoid(%495) /* ty=Tensor[(9, 10, 6), float64] */;
  (%496, %497)
}

def @func_2349() -> (Tensor[(13, 2, 16), float64], Tensor[(12, 13, 2), float64]) {
  %498 = @func_1960() /* ty=(Tensor[(13, 2, 16), float64],) */;
  %499 = @func_1726() /* ty=(Tensor[(12, 13, 2), float64],) */;
  %500 = %498.0;
  %501 = %499.0;
  (%500, %501)
}

def @func_5088(%var_5073: Tensor[(1, 13, 16), int64], %var_5074: Tensor[(9, 13, 16), int64]) -> (Tensor[(9, 13, 16), int64], Tensor[(13, 2, 16), bool]) {
  %502 = cast(%var_5073, dtype="int64") /* ty=Tensor[(1, 13, 16), int64] */;
  %503 = cast(%var_5074, dtype="int64") /* ty=Tensor[(9, 13, 16), int64] */;
  %504 = subtract(%502, %503) /* ty=Tensor[(9, 13, 16), int64] */;
  %505 = @func_3670() /* ty=Tensor[(13, 2, 16), bool] */;
  (%504, %505)
}

def @func_7831() -> (Tensor[(9, 10, 6), int16],) {
  %506 = @func_5751() /* ty=(Tensor[(9, 10, 6), int16],) */;
  %507 = %506.0;
  (%507,)
}

def @func_6261() -> (Tensor[(3, 15, 10), float32],) {
  %508 = cast(meta[relay.Constant][35] /* ty=Tensor[(3, 15, 10), float32] */, dtype="float32") /* ty=Tensor[(3, 15, 10), float32] */;
  %509 = acosh(%508) /* ty=Tensor[(3, 15, 10), float32] */;
  (%509,)
}

def @func_6729() -> (Tensor[(5, 15, 6), int8], Tensor[(560), int32], Tensor[(13, 2, 16), bool], Tensor[(560), float64]) {
  %510 = @func_4136() /* ty=(Tensor[(5, 15, 6), int8],) */;
  %511 = cast(meta[relay.Constant][36] /* ty=Tensor[(560), int32] */, dtype="int32") /* ty=Tensor[(560), int32] */;
  %512 = reshape(%511, newshape=[560]) /* ty=Tensor[(560), int32] */;
  %513 = @func_2986(%512) /* ty=(Tensor[(9, 10, 6), float64], Tensor[(5, 7, 16), int32], Tensor[(560), int32]) */;
  %514 = %513.2;
  %515 = cast(%514, dtype="float64") /* ty=Tensor[(560), float64] */;
  %516 = %510.0;
  %517 = @func_3670() /* ty=Tensor[(13, 2, 16), bool] */;
  %518 = asinh(%515) /* ty=Tensor[(560), float64] */;
  (%516, meta[relay.Constant][36] /* ty=Tensor[(560), int32] */, %517, %518)
}

def @func_4015(%var_4011: Tensor[(450), int8]) -> (Tensor[(540), float64], Tensor[(13, 2, 16), float64], Tensor[(16, 7, 9), float64], Tensor[(1, 1008), float64], Tensor[(450), int8], Tensor[(450), int8]) {
  %519 = @func_266() /* ty=(Tensor[(13, 2, 16), bool], Tensor[(9, 10, 6), float64], Tensor[(540), float64]) */;
  %520 = @func_2349() /* ty=(Tensor[(13, 2, 16), float64], Tensor[(12, 13, 2), float64]) */;
  %521 = cast(meta[relay.Constant][37] /* ty=Tensor[(1, 1008), float64] */, dtype="float64") /* ty=Tensor[(1, 1008), float64] */;
  %522 = reshape(%521, newshape=[16, 7, 9]) /* ty=Tensor[(16, 7, 9), float64] */;
  %523 = %519.2;
  %524 = cast(%523, dtype="float64") /* ty=Tensor[(540), float64] */;
  %525 = cast(%var_4011, dtype="int8") /* ty=Tensor[(450), int8] */;
  %526 = reshape(%524, newshape=[9, 10, 6]) /* ty=Tensor[(9, 10, 6), float64] */;
  %527 = reshape(%525, newshape=[450]) /* ty=Tensor[(450), int8] */;
  %528 = @func_629(%526, %527) /* ty=(Tensor[(9, 10, 6), float32], Tensor[(9, 10, 6), int32], Tensor[(13, 2, 16), bool], Tensor[(450), int8], Tensor[(13, 2, 16), bool], int8) */;
  %529 = %520.0;
  %530 = @func_2563(%522) /* ty=Tensor[(16, 7, 9), float64] */;
  %531 = %528.3;
  (%523, %529, %530, meta[relay.Constant][37] /* ty=Tensor[(1, 1008), float64] */, %531, %var_4011)
}

def @func_6623(%var_6603: Tensor[(12, 6, 5), float64], %var_6613: Tensor[(12, 6, 5), float64]) -> (Tensor[(9, 10, 6), float64], Tensor[(12, 6, 5), bool]) {
  %532 = @func_4876() /* ty=(Tensor[(12, 13, 2), float64], Tensor[(12, 13, 2), float64], Tensor[(16, 7, 9), float64], Tensor[(1008), float64], Tensor[(9, 10, 6), float64]) */;
  %533 = cast(%var_6603, dtype="float64") /* ty=Tensor[(12, 6, 5), float64] */;
  %534 = acos(%533) /* ty=Tensor[(12, 6, 5), float64] */;
  %535 = cast(%var_6613, dtype="bool") /* ty=Tensor[(12, 6, 5), bool] */;
  %536 = shape_of(%534, dtype="int32") /* ty=Tensor[(3), int32] */;
  %537 = cast(%534, dtype="bool") /* ty=Tensor[(12, 6, 5), bool] */;
  %538 = dyn.reshape(%535, %536, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %539 = %532.4;
  %540 = less_equal(%537, %538) /* ty=Tensor[(12, 6, 5), bool] */;
  (%539, %540)
}

def @func_7030() -> (Tensor[(9, 10, 6), float64],) {
  %541 = @func_6380() /* ty=Tensor[(9, 10, 6), float64] */;
  (%541,)
}

def @func_6669(%var_6663: Tensor[(2, 11, 7), float64]) -> (Tensor[(2, 11, 7), float64],) {
  %542 = cast(meta[relay.Constant][38] /* ty=Tensor[(2, 11, 7), float64] */, dtype="float64") /* ty=Tensor[(2, 11, 7), float64] */;
  %543 = shape_of(%var_6663, dtype="int32") /* ty=Tensor[(3), int32] */;
  %544 = cast(%var_6663, dtype="float64") /* ty=Tensor[(2, 11, 7), float64] */;
  %545 = dyn.reshape(%542, %543, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %546 = multiply(%544, %545) /* ty=Tensor[(2, 11, 7), float64] */;
  (%546,)
}

def @func_6987() -> Tensor[(13, 2, 16), float64] {
  %547 = @func_1588() /* ty=(Tensor[(13, 2, 16), float64],) */;
  %547.0
}

def @func_6009(%var_5997: Tensor[(300), uint32], %var_5998: Tensor[(450), int8]) -> (Tensor[(9, 10, 6), int16], Tensor[(6, 5, 10), bool], Tensor[(300), uint32], Tensor[(450), int8]) {
  %548 = @func_5751() /* ty=(Tensor[(9, 10, 6), int16],) */;
  %549 = cast(%var_5997, dtype="uint32") /* ty=Tensor[(300), uint32] */;
  %550 = cast(%var_5997, dtype="uint32") /* ty=Tensor[(300), uint32] */;
  %551 = cast(%var_5998, dtype="int8") /* ty=Tensor[(450), int8] */;
  %552 = reshape(%549, newshape=[6, 5, 10]) /* ty=Tensor[(6, 5, 10), uint32] */;
  %553 = reshape(%550, newshape=[6, 5, 10]) /* ty=Tensor[(6, 5, 10), uint32] */;
  %554 = reshape(%551, newshape=[450]) /* ty=Tensor[(450), int8] */;
  %555 = @func_1949(%552, %553, %554) /* ty=(Tensor[(6, 5, 10), uint32], Tensor[(6, 5, 10), bool], Tensor[(9, 10, 6), float64], Tensor[(540), float64], Tensor[(5, 7, 16), int32], Tensor[(560), int32], Tensor[(13, 2, 16), bool], Tensor[(450), int8], Tensor[(12, 13, 2), float64], Tensor[(312), float64]) */;
  %556 = %548.0;
  %557 = %555.1;
  (%556, %557, %var_5997, %var_5998)
}

def @func_1607() -> (Tensor[(12, 13, 2), float64],) {
  %558 = @func_1100() /* ty=(Tensor[(12, 13, 2), float64], Tensor[(9, 10, 6), float64]) */;
  %559 = %558.0;
  (%559,)
}

def @func_4971() -> (Tensor[(13, 2, 16), bool], Tensor[(9, 10, 6), int16]) {
  %560 = @func_2137() /* ty=(Tensor[(9, 10, 6), int16],) */;
  %561 = @func_370() /* ty=Tensor[(13, 2, 16), bool] */;
  %562 = %560.0;
  (%561, %562)
}

def @func_5494() -> (Tensor[(540), float64], Tensor[(3, 8, 10), float64]) {
  %563 = @func_4221() /* ty=(Tensor[(13, 2, 16), bool], Tensor[(540), float64], Tensor[(540), float64], Tensor[(1, 312), float64], Tensor[(13, 2, 16), float64], Tensor[(5, 15, 6), float32], Tensor[(5, 7, 16), int32], Tensor[(560), int32]) */;
  %564 = @func_1550() /* ty=(Tensor[(3, 8, 10), bool], Tensor[(13, 2, 16), float64]) */;
  %565 = %564.0;
  %566 = cast(%565, dtype="float64") /* ty=Tensor[(3, 8, 10), float64] */;
  %567 = log(%566) /* ty=Tensor[(3, 8, 10), float64] */;
  %568 = cast(%567, dtype="float64") /* ty=Tensor[(3, 8, 10), float64] */;
  %569 = %563.2;
  %570 = asinh(%568) /* ty=Tensor[(3, 8, 10), float64] */;
  (%569, %570)
}

def @func_1588() -> (Tensor[(13, 2, 16), float64],) {
  %571 = @func_1550() /* ty=(Tensor[(3, 8, 10), bool], Tensor[(13, 2, 16), float64]) */;
  %572 = %571.1;
  (%572,)
}

def @func_3790(%var_3751: Tensor[(1, 7, 13), float64]) -> (Tensor[(1, 7, 13), float64], Tensor[(450), int8], Tensor[(13, 2, 16), float64]) {
  %573 = cast(%var_3751, dtype="float64") /* ty=Tensor[(1, 7, 13), float64] */;
  %574 = @func_3264() /* ty=(Tensor[(12, 13, 2), float64], Tensor[(9, 10, 6), float64], Tensor[(450), int8]) */;
  %575 = @func_1960() /* ty=(Tensor[(13, 2, 16), float64],) */;
  %576 = sqrt(%573) /* ty=Tensor[(1, 7, 13), float64] */;
  %577 = %574.2;
  %578 = %575.0;
  (%576, %577, %578)
}

def @func_3974(%var_3969: Tensor[(4, 10, 12), uint64], %var_3970: Tensor[(4, 10, 12), uint64]) -> Tensor[(4, 10, 12), uint64] {
  %579 = cast(%var_3970, dtype="uint64") /* ty=Tensor[(4, 10, 12), uint64] */;
  %580 = shape_of(%var_3969, dtype="int32") /* ty=Tensor[(3), int32] */;
  %581 = cast(%var_3969, dtype="uint64") /* ty=Tensor[(4, 10, 12), uint64] */;
  %582 = dyn.reshape(%579, %580, newshape=[]) /* ty=Tensor[(?, ?, ?), uint64] */;
  right_shift(%581, %582) /* ty=Tensor[(4, 10, 12), uint64] */
}

def @func_6105(%var_6098: Tensor[(6, 10, 4), bool]) -> Tensor[(6, 10, 4), bool] {
  %583 = cast(meta[relay.Constant][39] /* ty=Tensor[(6, 10, 4), bool] */, dtype="bool") /* ty=Tensor[(6, 10, 4), bool] */;
  %584 = shape_of(%var_6098, dtype="int32") /* ty=Tensor[(3), int32] */;
  %585 = cast(%var_6098, dtype="bool") /* ty=Tensor[(6, 10, 4), bool] */;
  %586 = dyn.reshape(%583, %584, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  logical_and(%585, %586) /* ty=Tensor[(6, 10, 4), bool] */
}

def @func_3551() -> (Tensor[(12, 13, 2), float64], Tensor[(416), uint16], Tensor[(3, 8, 10), bool], Tensor[(9, 10, 6), int16]) {
  %587 = @func_1726() /* ty=(Tensor[(12, 13, 2), float64],) */;
  %588 = cast(meta[relay.Constant][40] /* ty=Tensor[(416), float64] */, dtype="float64") /* ty=Tensor[(416), float64] */;
  %589 = cast(meta[relay.Constant][40] /* ty=Tensor[(416), float64] */, dtype="float64") /* ty=Tensor[(416), float64] */;
  %590 = reshape(%588, newshape=[13, 2, 16]) /* ty=Tensor[(13, 2, 16), float64] */;
  %591 = reshape(%589, newshape=[13, 2, 16]) /* ty=Tensor[(13, 2, 16), float64] */;
  %592 = @func_984(%590, %591) /* ty=(Tensor[(13, 2, 16), float64], Tensor[(13, 2, 16), bool]) */;
  %593 = %592.1;
  %594 = cast(%593, dtype="uint16") /* ty=Tensor[(13, 2, 16), uint16] */;
  %595 = shape_of(meta[relay.Constant][40] /* ty=Tensor[(416), float64] */, dtype="int32") /* ty=Tensor[(1), int32] */;
  %596 = cast(meta[relay.Constant][40] /* ty=Tensor[(416), float64] */, dtype="uint16") /* ty=Tensor[(416), uint16] */;
  %597 = dyn.reshape(%594, %595, newshape=[]) /* ty=Tensor[(?), uint16] */;
  %598 = %587.0;
  %599 = multiply(%596, %597) /* ty=Tensor[(416), uint16] */;
  %600 = @func_1261() /* ty=Tensor[(3, 8, 10), bool] */;
  %601 = @func_2610() /* ty=Tensor[(9, 10, 6), int16] */;
  (%598, %599, %600, %601)
}

def @func_709() -> (Tensor[(9, 10, 6), int16],) {
  %602 = @func_266() /* ty=(Tensor[(13, 2, 16), bool], Tensor[(9, 10, 6), float64], Tensor[(540), float64]) */;
  %603 = %602.1;
  %604 = cast(%603, dtype="float32") /* ty=Tensor[(9, 10, 6), float32] */;
  %605 = log10(%604) /* ty=Tensor[(9, 10, 6), float32] */;
  %606 = cast(%603, dtype="int16") /* ty=Tensor[(9, 10, 6), int16] */;
  %607 = shape_of(%605, dtype="int32") /* ty=Tensor[(3), int32] */;
  %608 = cast(%605, dtype="int16") /* ty=Tensor[(9, 10, 6), int16] */;
  %609 = dyn.reshape(%606, %607, newshape=[]) /* ty=Tensor[(?, ?, ?), int16] */;
  %610 = bitwise_and(%608, %609) /* ty=Tensor[(9, 10, 6), int16] */;
  (%610,)
}

def @func_1711(%var_1683: Tensor[(9, 10, 6), float64]) -> (Tensor[(9, 10, 6), bool], Tensor[(9, 10, 6), bool]) {
  %611 = @func_1100() /* ty=(Tensor[(12, 13, 2), float64], Tensor[(9, 10, 6), float64]) */;
  %612 = %611.1;
  %613 = cast(%var_1683, dtype="bool") /* ty=Tensor[(9, 10, 6), bool] */;
  %614 = shape_of(%612, dtype="int32") /* ty=Tensor[(3), int32] */;
  %615 = cast(%612, dtype="bool") /* ty=Tensor[(9, 10, 6), bool] */;
  %616 = dyn.reshape(%613, %614, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %617 = cast(meta[relay.Constant][41] /* ty=Tensor[(9, 10, 6), float64] */, dtype="bool") /* ty=Tensor[(9, 10, 6), bool] */;
  %618 = shape_of(%612, dtype="int32") /* ty=Tensor[(3), int32] */;
  %619 = cast(%612, dtype="bool") /* ty=Tensor[(9, 10, 6), bool] */;
  %620 = dyn.reshape(%617, %618, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %621 = equal(%619, %620) /* ty=Tensor[(9, 10, 6), bool] */;
  %622 = cast(%621, dtype="bool") /* ty=Tensor[(9, 10, 6), bool] */;
  %623 = shape_of(%var_1683, dtype="int32") /* ty=Tensor[(3), int32] */;
  %624 = cast(%var_1683, dtype="bool") /* ty=Tensor[(9, 10, 6), bool] */;
  %625 = dyn.reshape(%622, %623, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %626 = not_equal(%615, %616) /* ty=Tensor[(9, 10, 6), bool] */;
  %627 = less(%624, %625) /* ty=Tensor[(9, 10, 6), bool] */;
  (%626, %627)
}

def @func_5724(%var_5701: Tensor[(240), bool], %var_5702: Tensor[(540), float64]) -> (Tensor[(9, 10, 6), int16], Tensor[(240), bool], Tensor[(540), float64], Tensor[(5, 15, 6), float64], Tensor[(9, 10, 6), float64], Tensor[(9, 10, 6), int16]) {
  %628 = cast(%var_5701, dtype="bool") /* ty=Tensor[(240), bool] */;
  %629 = cast(%var_5702, dtype="float64") /* ty=Tensor[(540), float64] */;
  %630 = reshape(%628, newshape=[240]) /* ty=Tensor[(240), bool] */;
  %631 = reshape(%629, newshape=[540]) /* ty=Tensor[(540), float64] */;
  %632 = @func_4785(%630, %631) /* ty=(Tensor[(12, 13, 2), float64], Tensor[(3, 8, 10), bool], Tensor[(240), bool], Tensor[(9, 10, 6), bool], Tensor[(540), float64], Tensor[(9, 10, 6), int16], Tensor[(9, 10, 6), float64]) */;
  %633 = @func_2892() /* ty=(Tensor[(5, 15, 6), float32],) */;
  %634 = %633.0;
  %635 = cast(%634, dtype="float64") /* ty=Tensor[(5, 15, 6), float64] */;
  %636 = cast(%var_5701, dtype="bool") /* ty=Tensor[(240), bool] */;
  %637 = reshape(%636, newshape=[240]) /* ty=Tensor[(240), bool] */;
  %638 = @func_4722(%637) /* ty=(Tensor[(9, 10, 6), float64], Tensor[(13, 2, 16), float64], Tensor[(240), bool]) */;
  %639 = %632.5;
  %640 = sin(%635) /* ty=Tensor[(5, 15, 6), float64] */;
  %641 = %638.0;
  %642 = @func_5341() /* ty=Tensor[(9, 10, 6), int16] */;
  (%639, %var_5701, %var_5702, %640, %641, %642)
}

def @func_3264() -> (Tensor[(12, 13, 2), float64], Tensor[(9, 10, 6), float64], Tensor[(450), int8]) {
  %643 = @func_2349() /* ty=(Tensor[(13, 2, 16), float64], Tensor[(12, 13, 2), float64]) */;
  %644 = cast(meta[relay.Constant][42] /* ty=Tensor[(450), int8] */, dtype="int8") /* ty=Tensor[(450), int8] */;
  %645 = cast(meta[relay.Constant][42] /* ty=Tensor[(450), int8] */, dtype="float64") /* ty=Tensor[(450), float64] */;
  %646 = reshape(%644, newshape=[10, 45]) /* ty=Tensor[(10, 45), int8] */;
  %647 = reshape(%645, newshape=[10, 45]) /* ty=Tensor[(10, 45), float64] */;
  %648 = @func_474(%646, %647) /* ty=(Tensor[(9, 10, 6), float64], Tensor[(540), float64], Tensor[(9, 10, 6), float64], Tensor[(13, 2, 16), bool], Tensor[(10, 45), bool]) */;
  %649 = %643.1;
  %650 = %648.2;
  (%649, %650, meta[relay.Constant][42] /* ty=Tensor[(450), int8] */)
}

def @func_855(%var_835: Tensor[(5, 15, 6), int8]) -> (Tensor[(13, 2, 16), bool], Tensor[(54, 10), float64], Tensor[(5, 15, 6), float64]) {
  %651 = cast(meta[relay.Constant][43] /* ty=Tensor[(54, 10), float64] */, dtype="float64") /* ty=Tensor[(54, 10), float64] */;
  %652 = @func_575() /* ty=(Tensor[(10, 45), bool], Tensor[(10, 45), float64], Tensor[(5, 15, 6), int8], int8, Tensor[(540), float64], Tensor[(13, 2, 16), float64]) */;
  %653 = %652.2;
  %654 = cast(%653, dtype="int8") /* ty=Tensor[(5, 15, 6), int8] */;
  %655 = reshape(%651, newshape=[9, 10, 6]) /* ty=Tensor[(9, 10, 6), float64] */;
  %656 = reshape(%654, newshape=[450]) /* ty=Tensor[(450), int8] */;
  %657 = @func_629(%655, %656) /* ty=(Tensor[(9, 10, 6), float32], Tensor[(9, 10, 6), int32], Tensor[(13, 2, 16), bool], Tensor[(450), int8], Tensor[(13, 2, 16), bool], int8) */;
  %658 = cast(%var_835, dtype="uint64") /* ty=Tensor[(5, 15, 6), uint64] */;
  %659 = shape_of(%653, dtype="int32") /* ty=Tensor[(3), int32] */;
  %660 = cast(%653, dtype="uint64") /* ty=Tensor[(5, 15, 6), uint64] */;
  %661 = dyn.reshape(%658, %659, newshape=[]) /* ty=Tensor[(?, ?, ?), uint64] */;
  %662 = subtract(%660, %661) /* ty=Tensor[(5, 15, 6), uint64] */;
  %663 = cast(%662, dtype="float64") /* ty=Tensor[(5, 15, 6), float64] */;
  %664 = %657.4;
  %665 = sqrt(%663) /* ty=Tensor[(5, 15, 6), float64] */;
  (%664, meta[relay.Constant][43] /* ty=Tensor[(54, 10), float64] */, %665)
}

def @func_2512() -> (Tensor[(13, 2, 16), float64],) {
  %666 = @func_1960() /* ty=(Tensor[(13, 2, 16), float64],) */;
  %667 = %666.0;
  (%667,)
}

def @func_2892() -> (Tensor[(5, 15, 6), float32],) {
  %668 = @func_2689() /* ty=(Tensor[(5, 15, 6), int8],) */;
  %669 = %668.0;
  %670 = cast(%669, dtype="float32") /* ty=Tensor[(5, 15, 6), float32] */;
  %671 = atan(%670) /* ty=Tensor[(5, 15, 6), float32] */;
  (%671,)
}

def @main(%var_7918: Tensor[(6, 13, 9), uint64], %var_7919: Tensor[(6, 13, 9), uint64]) -> (Tensor[(6, 13, 9), uint64],) {
  %672 = cast(%var_7919, dtype="uint64") /* ty=Tensor[(6, 13, 9), uint64] */;
  %673 = shape_of(%var_7918, dtype="int32") /* ty=Tensor[(3), int32] */;
  %674 = cast(%var_7918, dtype="uint64") /* ty=Tensor[(6, 13, 9), uint64] */;
  %675 = dyn.reshape(%672, %673, newshape=[]) /* ty=Tensor[(?, ?, ?), uint64] */;
  %676 = add(%674, %675) /* ty=Tensor[(6, 13, 9), uint64] */;
  (%676,)
}

def @func_1993(%var_1991: Tensor[(450), int8]) -> (Tensor[(13, 2, 16), float64], Tensor[(54, 10), float64], Tensor[(450), int8]) {
  %677 = @func_1588() /* ty=(Tensor[(13, 2, 16), float64],) */;
  %678 = cast(%var_1991, dtype="int8") /* ty=Tensor[(450), int8] */;
  %679 = reshape(%678, newshape=[5, 15, 6]) /* ty=Tensor[(5, 15, 6), int8] */;
  %680 = @func_855(%679) /* ty=(Tensor[(13, 2, 16), bool], Tensor[(54, 10), float64], Tensor[(5, 15, 6), float64]) */;
  %681 = %677.0;
  %682 = %680.1;
  (%681, %682, %var_1991)
}

def @func_3025() -> (Tensor[(9, 10, 6), int16],) {
  %683 = @func_2035() /* ty=(Tensor[(9, 10, 6), int16],) */;
  %684 = %683.0;
  (%684,)
}

def @func_4087() -> (Tensor[(13, 2, 16), float64], Tensor[(9, 10, 6), int16]) {
  %685 = @func_1588() /* ty=(Tensor[(13, 2, 16), float64],) */;
  %686 = @func_2035() /* ty=(Tensor[(9, 10, 6), int16],) */;
  %687 = %685.0;
  %688 = %686.0;
  (%687, %688)
}

def @func_2465(%var_2374: Tensor[(13, 2, 16), float64]) -> (Tensor[(13, 2, 16), bool], Tensor[(12, 13, 2), float64], Tensor[(12, 13, 2), float64], Tensor[(13, 2, 16), uint32], Tensor[(13, 2, 16), bool], Tensor[(12, 13, 2), float64]) {
  %689 = @func_2349() /* ty=(Tensor[(13, 2, 16), float64], Tensor[(12, 13, 2), float64]) */;
  %690 = %689.0;
  %691 = cast(%var_2374, dtype="bool") /* ty=Tensor[(13, 2, 16), bool] */;
  %692 = shape_of(%690, dtype="int32") /* ty=Tensor[(3), int32] */;
  %693 = cast(%690, dtype="bool") /* ty=Tensor[(13, 2, 16), bool] */;
  %694 = dyn.reshape(%691, %692, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %695 = @func_1607() /* ty=(Tensor[(12, 13, 2), float64],) */;
  %696 = @func_1100() /* ty=(Tensor[(12, 13, 2), float64], Tensor[(9, 10, 6), float64]) */;
  %697 = cast(%690, dtype="float32") /* ty=Tensor[(13, 2, 16), float32] */;
  %698 = sqrt(%697) /* ty=Tensor[(13, 2, 16), float32] */;
  %699 = cast(%690, dtype="uint32") /* ty=Tensor[(13, 2, 16), uint32] */;
  %700 = shape_of(%698, dtype="int32") /* ty=Tensor[(3), int32] */;
  %701 = cast(%698, dtype="uint32") /* ty=Tensor[(13, 2, 16), uint32] */;
  %702 = dyn.reshape(%699, %700, newshape=[]) /* ty=Tensor[(?, ?, ?), uint32] */;
  %703 = @func_1726() /* ty=(Tensor[(12, 13, 2), float64],) */;
  %704 = less_equal(%693, %694) /* ty=Tensor[(13, 2, 16), bool] */;
  %705 = %695.0;
  %706 = %696.0;
  %707 = maximum(%701, %702) /* ty=Tensor[(13, 2, 16), uint32] */;
  %708 = @func_370() /* ty=Tensor[(13, 2, 16), bool] */;
  %709 = %703.0;
  (%704, %705, %706, %707, %708, %709)
}

def @func_4126() -> (Tensor[(13, 2, 16), bool],) {
  %710 = @func_3953() /* ty=(Tensor[(13, 2, 16), bool],) */;
  %711 = %710.0;
  (%711,)
}

def @func_3745(%var_3691: Tensor[(3, 8, 10), bool], %var_3710: Tensor[(3, 8, 10), bool]) -> (Tensor[(9, 10, 6), int16], Tensor[(13, 2, 16), float64], Tensor[(16, 8, 5), bool], Tensor[(640), float64], Tensor[(3, 8, 10), float32], Tensor[(3, 8, 10), bool]) {
  %712 = @func_709() /* ty=(Tensor[(9, 10, 6), int16],) */;
  %713 = @func_1550() /* ty=(Tensor[(3, 8, 10), bool], Tensor[(13, 2, 16), float64]) */;
  %714 = %713.0;
  %715 = cast(%var_3691, dtype="int32") /* ty=Tensor[(3, 8, 10), int32] */;
  %716 = shape_of(%714, dtype="int32") /* ty=Tensor[(3), int32] */;
  %717 = cast(%714, dtype="int32") /* ty=Tensor[(3, 8, 10), int32] */;
  %718 = dyn.reshape(%715, %716, newshape=[]) /* ty=Tensor[(?, ?, ?), int32] */;
  %719 = minimum(%717, %718) /* ty=Tensor[(3, 8, 10), int32] */;
  %720 = cast(%719, dtype="bool") /* ty=Tensor[(3, 8, 10), bool] */;
  %721 = reshape(%720, newshape=[3, 8, 10]) /* ty=Tensor[(3, 8, 10), bool] */;
  %722 = @func_1873(%721) /* ty=(Tensor[(13, 2, 16), float64], Tensor[(3, 8, 10), float32]) */;
  %723 = cast(meta[relay.Constant][44] /* ty=Tensor[(640), float64] */, dtype="float64") /* ty=Tensor[(640), float64] */;
  %724 = cast(meta[relay.Constant][44] /* ty=Tensor[(640), float64] */, dtype="float64") /* ty=Tensor[(640), float64] */;
  %725 = reshape(%723, newshape=[16, 8, 5]) /* ty=Tensor[(16, 8, 5), float64] */;
  %726 = reshape(%724, newshape=[16, 8, 5]) /* ty=Tensor[(16, 8, 5), float64] */;
  %727 = @func_2871(%725, %726) /* ty=(Tensor[(16, 8, 5), bool],) */;
  %728 = cast(%var_3710, dtype="float32") /* ty=Tensor[(3, 8, 10), float32] */;
  %729 = shape_of(%714, dtype="int32") /* ty=Tensor[(3), int32] */;
  %730 = cast(%714, dtype="float32") /* ty=Tensor[(3, 8, 10), float32] */;
  %731 = dyn.reshape(%728, %729, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %732 = cast(%var_3691, dtype="float64") /* ty=Tensor[(3, 8, 10), float64] */;
  %733 = asin(%732) /* ty=Tensor[(3, 8, 10), float64] */;
  %734 = cast(%719, dtype="bool") /* ty=Tensor[(3, 8, 10), bool] */;
  %735 = shape_of(%733, dtype="int32") /* ty=Tensor[(3), int32] */;
  %736 = cast(%733, dtype="bool") /* ty=Tensor[(3, 8, 10), bool] */;
  %737 = dyn.reshape(%734, %735, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %738 = %712.0;
  %739 = %722.0;
  %740 = %727.0;
  %741 = floor_divide(%730, %731) /* ty=Tensor[(3, 8, 10), float32] */;
  %742 = not_equal(%736, %737) /* ty=Tensor[(3, 8, 10), bool] */;
  (%738, %739, %740, meta[relay.Constant][44] /* ty=Tensor[(640), float64] */, %741, %742)
}

def @func_2118(%var_2106: Tensor[(540), float64]) -> (Tensor[(13, 2, 16), float64], Tensor[(3, 8, 10), bool], Tensor[(9, 10, 6), bool], Tensor[(540), float64]) {
  %743 = @func_1960() /* ty=(Tensor[(13, 2, 16), float64],) */;
  %744 = @func_1550() /* ty=(Tensor[(3, 8, 10), bool], Tensor[(13, 2, 16), float64]) */;
  %745 = cast(%var_2106, dtype="float64") /* ty=Tensor[(540), float64] */;
  %746 = reshape(%745, newshape=[9, 10, 6]) /* ty=Tensor[(9, 10, 6), float64] */;
  %747 = @func_1711(%746) /* ty=(Tensor[(9, 10, 6), bool], Tensor[(9, 10, 6), bool]) */;
  %748 = %743.0;
  %749 = %744.0;
  %750 = %747.0;
  (%748, %749, %750, %var_2106)
}

def @func_7434(%var_7420: Tensor[(208), int64], %var_7421: Tensor[(1872), int64]) -> (Tensor[(560), int32], Tensor[(13, 2, 16), bool], Tensor[(208), int64], Tensor[(1872), int64]) {
  %751 = cast(%var_7420, dtype="int64") /* ty=Tensor[(208), int64] */;
  %752 = cast(%var_7421, dtype="int64") /* ty=Tensor[(1872), int64] */;
  %753 = reshape(%751, newshape=[1, 13, 16]) /* ty=Tensor[(1, 13, 16), int64] */;
  %754 = reshape(%752, newshape=[9, 13, 16]) /* ty=Tensor[(9, 13, 16), int64] */;
  %755 = @func_5088(%753, %754) /* ty=(Tensor[(9, 13, 16), int64], Tensor[(13, 2, 16), bool]) */;
  %756 = @func_4934() /* ty=Tensor[(560), int32] */;
  %757 = %755.1;
  (%756, %757, %var_7420, %var_7421)
}

def @func_4426(%var_4417: Tensor[(11, 14, 2), float64]) -> (Tensor[(11, 14, 2), float64],) {
  %758 = cast(%var_4417, dtype="float64") /* ty=Tensor[(11, 14, 2), float64] */;
  %759 = log(%758) /* ty=Tensor[(11, 14, 2), float64] */;
  (%759,)
}

def @func_4136() -> (Tensor[(5, 15, 6), int8],) {
  %760 = @func_2689() /* ty=(Tensor[(5, 15, 6), int8],) */;
  %761 = %760.0;
  (%761,)
}

def @func_6954(%var_6931: Tensor[(4, 7, 13), float64]) -> Tensor[(4, 7, 13), float32] {
  %762 = cast(%var_6931, dtype="float64") /* ty=Tensor[(4, 7, 13), float64] */;
  %763 = shape_of(meta[relay.Constant][45] /* ty=Tensor[(4, 7, 13), float64] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %764 = cast(meta[relay.Constant][45] /* ty=Tensor[(4, 7, 13), float64] */, dtype="float64") /* ty=Tensor[(4, 7, 13), float64] */;
  %765 = dyn.reshape(%762, %763, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %766 = floor_mod(%764, %765) /* ty=Tensor[(4, 7, 13), float64] */;
  %767 = cast(%766, dtype="float32") /* ty=Tensor[(4, 7, 13), float32] */;
  rsqrt(%767) /* ty=Tensor[(4, 7, 13), float32] */
}

def @func_4649() -> (Tensor[(9, 10, 6), int16],) {
  %768 = @func_4403() /* ty=(Tensor[(13, 2, 16), float32], Tensor[(9, 10, 6), int16]) */;
  %769 = %768.1;
  (%769,)
}

def @func_4785(%var_4754: Tensor[(240), bool], %var_4757: Tensor[(540), float64]) -> (Tensor[(12, 13, 2), float64], Tensor[(3, 8, 10), bool], Tensor[(240), bool], Tensor[(9, 10, 6), bool], Tensor[(540), float64], Tensor[(9, 10, 6), int16], Tensor[(9, 10, 6), float64]) {
  %770 = @func_1607() /* ty=(Tensor[(12, 13, 2), float64],) */;
  %771 = cast(%var_4754, dtype="bool") /* ty=Tensor[(240), bool] */;
  %772 = cast(%var_4754, dtype="bool") /* ty=Tensor[(240), bool] */;
  %773 = reshape(%771, newshape=[3, 8, 10]) /* ty=Tensor[(3, 8, 10), bool] */;
  %774 = reshape(%772, newshape=[3, 8, 10]) /* ty=Tensor[(3, 8, 10), bool] */;
  %775 = @func_3745(%773, %774) /* ty=(Tensor[(9, 10, 6), int16], Tensor[(13, 2, 16), float64], Tensor[(16, 8, 5), bool], Tensor[(640), float64], Tensor[(3, 8, 10), float32], Tensor[(3, 8, 10), bool]) */;
  %776 = cast(%var_4757, dtype="float64") /* ty=Tensor[(540), float64] */;
  %777 = reshape(%776, newshape=[9, 10, 6]) /* ty=Tensor[(9, 10, 6), float64] */;
  %778 = @func_1711(%777) /* ty=(Tensor[(9, 10, 6), bool], Tensor[(9, 10, 6), bool]) */;
  %779 = @func_709() /* ty=(Tensor[(9, 10, 6), int16],) */;
  %780 = %775.5;
  %781 = cast(%780, dtype="bool") /* ty=Tensor[(3, 8, 10), bool] */;
  %782 = reshape(%781, newshape=[240]) /* ty=Tensor[(240), bool] */;
  %783 = @func_4608(%782) /* ty=(Tensor[(13, 2, 16), float64], Tensor[(240), bool], Tensor[(9, 10, 6), float64]) */;
  %784 = %770.0;
  %785 = %778.1;
  %786 = %779.0;
  %787 = %783.2;
  (%784, %780, %var_4754, %785, %var_4757, %786, %787)
}

def @func_3670() -> Tensor[(13, 2, 16), bool] {
  @func_370() /* ty=Tensor[(13, 2, 16), bool] */
}

def @func_7856() -> (Tensor[(10, 45), bool],) {
  %788 = @func_5391() /* ty=(Tensor[(10, 45), bool],) */;
  %789 = %788.0;
  (%789,)
}

def @func_1459(%var_1360: Tensor[(450), int8], %var_1402: Tensor[(416), float64], %var_1445: Tensor[(312), float64]) -> (Tensor[(9, 10, 6), float32], Tensor[(9, 10, 6), float64], Tensor[(9, 10, 6), float64], Tensor[(450), int8], Tensor[(9, 10, 6), int16], Tensor[(10, 45), bool], Tensor[(9, 10, 6), float64], Tensor[(9, 10, 6), int16], Tensor[(3, 8, 10), int8], Tensor[(13, 2, 16), bool], Tensor[(416), float64], Tensor[(54, 10), float64], Tensor[(9, 10, 6), float64], Tensor[(450), int8], Tensor[(12, 13, 2), float64], Tensor[(312), float64], Tensor[(10, 45), bool]) {
  %790 = @func_1100() /* ty=(Tensor[(12, 13, 2), float64], Tensor[(9, 10, 6), float64]) */;
  %791 = %790.1;
  %792 = cast(%791, dtype="float32") /* ty=Tensor[(9, 10, 6), float32] */;
  %793 = acosh(%792) /* ty=Tensor[(9, 10, 6), float32] */;
  %794 = cast(%793, dtype="float64") /* ty=Tensor[(9, 10, 6), float64] */;
  %795 = reshape(%794, newshape=[9, 10, 6]) /* ty=Tensor[(9, 10, 6), float64] */;
  %796 = @func_158(%795) /* ty=(Tensor[(9, 10, 6), float64], Tensor[(9, 10, 6), float64]) */;
  %797 = cast(%var_1360, dtype="int8") /* ty=Tensor[(450), int8] */;
  %798 = cast(%var_1360, dtype="float64") /* ty=Tensor[(450), float64] */;
  %799 = reshape(%797, newshape=[10, 45]) /* ty=Tensor[(10, 45), int8] */;
  %800 = reshape(%798, newshape=[10, 45]) /* ty=Tensor[(10, 45), float64] */;
  %801 = @func_474(%799, %800) /* ty=(Tensor[(9, 10, 6), float64], Tensor[(540), float64], Tensor[(9, 10, 6), float64], Tensor[(13, 2, 16), bool], Tensor[(10, 45), bool]) */;
  %802 = @func_709() /* ty=(Tensor[(9, 10, 6), int16],) */;
  %803 = @func_575() /* ty=(Tensor[(10, 45), bool], Tensor[(10, 45), float64], Tensor[(5, 15, 6), int8], int8, Tensor[(540), float64], Tensor[(13, 2, 16), float64]) */;
  %804 = @func_1100() /* ty=(Tensor[(12, 13, 2), float64], Tensor[(9, 10, 6), float64]) */;
  %805 = @func_709() /* ty=(Tensor[(9, 10, 6), int16],) */;
  %806 = @func_1261() /* ty=Tensor[(3, 8, 10), bool] */;
  %807 = @func_1261() /* ty=Tensor[(3, 8, 10), bool] */;
  %808 = cast(%807, dtype="int8") /* ty=Tensor[(3, 8, 10), int8] */;
  %809 = shape_of(%806, dtype="int32") /* ty=Tensor[(3), int32] */;
  %810 = cast(%806, dtype="int8") /* ty=Tensor[(3, 8, 10), int8] */;
  %811 = dyn.reshape(%808, %809, newshape=[]) /* ty=Tensor[(?, ?, ?), int8] */;
  %812 = cast(%var_1402, dtype="float64") /* ty=Tensor[(416), float64] */;
  %813 = cast(%var_1402, dtype="float64") /* ty=Tensor[(416), float64] */;
  %814 = reshape(%812, newshape=[13, 2, 16]) /* ty=Tensor[(13, 2, 16), float64] */;
  %815 = reshape(%813, newshape=[13, 2, 16]) /* ty=Tensor[(13, 2, 16), float64] */;
  %816 = @func_984(%814, %815) /* ty=(Tensor[(13, 2, 16), float64], Tensor[(13, 2, 16), bool]) */;
  %817 = cast(%var_1360, dtype="int8") /* ty=Tensor[(450), int8] */;
  %818 = reshape(%817, newshape=[5, 15, 6]) /* ty=Tensor[(5, 15, 6), int8] */;
  %819 = @func_855(%818) /* ty=(Tensor[(13, 2, 16), bool], Tensor[(54, 10), float64], Tensor[(5, 15, 6), float64]) */;
  %820 = @func_1100() /* ty=(Tensor[(12, 13, 2), float64], Tensor[(9, 10, 6), float64]) */;
  %821 = %802.0;
  %822 = cast(%821, dtype="float64") /* ty=Tensor[(9, 10, 6), float64] */;
  %823 = cast(%var_1360, dtype="int8") /* ty=Tensor[(450), int8] */;
  %824 = reshape(%822, newshape=[9, 10, 6]) /* ty=Tensor[(9, 10, 6), float64] */;
  %825 = reshape(%823, newshape=[450]) /* ty=Tensor[(450), int8] */;
  %826 = @func_629(%824, %825) /* ty=(Tensor[(9, 10, 6), float32], Tensor[(9, 10, 6), int32], Tensor[(13, 2, 16), bool], Tensor[(450), int8], Tensor[(13, 2, 16), bool], int8) */;
  %827 = cast(%var_1445, dtype="float64") /* ty=Tensor[(312), float64] */;
  %828 = reshape(%827, newshape=[12, 13, 2]) /* ty=Tensor[(12, 13, 2), float64] */;
  %829 = @func_898(%828) /* ty=(Tensor[(12, 13, 2), float64],) */;
  %830 = @func_575() /* ty=(Tensor[(10, 45), bool], Tensor[(10, 45), float64], Tensor[(5, 15, 6), int8], int8, Tensor[(540), float64], Tensor[(13, 2, 16), float64]) */;
  %831 = %796.0;
  %832 = %801.2;
  %833 = %803.0;
  %834 = %804.1;
  %835 = %805.0;
  %836 = bitwise_and(%810, %811) /* ty=Tensor[(3, 8, 10), int8] */;
  %837 = %816.1;
  %838 = %819.1;
  %839 = %820.1;
  %840 = %826.3;
  %841 = %829.0;
  %842 = %830.0;
  (%793, %831, %832, %var_1360, %821, %833, %834, %835, %836, %837, %var_1402, %838, %839, %840, %841, %var_1445, %842)
}

def @func_6535() -> Tensor[(2, 14, 7), float64] {
  %843 = cast(meta[relay.Constant][46] /* ty=Tensor[(2, 14, 7), float64] */, dtype="float64") /* ty=Tensor[(2, 14, 7), float64] */;
  asinh(%843) /* ty=Tensor[(2, 14, 7), float64] */
}

def @func_3844() -> (Tensor[(12, 13, 2), float64], Tensor[(9, 10, 6), float64], Tensor[(450), int8]) {
  %844 = @func_2349() /* ty=(Tensor[(13, 2, 16), float64], Tensor[(12, 13, 2), float64]) */;
  %845 = cast(meta[relay.Constant][47] /* ty=Tensor[(450), int8] */, dtype="int8") /* ty=Tensor[(450), int8] */;
  %846 = reshape(%845, newshape=[5, 90]) /* ty=Tensor[(5, 90), int8] */;
  %847 = @func_1636(%846) /* ty=(Tensor[(9, 10, 6), float64], Tensor[(13, 2, 16), bool], Tensor[(5, 90), int8], Tensor[(9, 10, 6), int16]) */;
  %848 = %844.1;
  %849 = %847.0;
  (%848, %849, meta[relay.Constant][47] /* ty=Tensor[(450), int8] */)
}

def @func_3039(%var_3027: Tensor[(8, 14, 1), uint32], %var_3028: Tensor[(8, 14, 15), uint32]) -> (Tensor[(8, 14, 15), uint32], Tensor[(8, 14, 1), float32]) {
  %850 = cast(%var_3027, dtype="uint32") /* ty=Tensor[(8, 14, 1), uint32] */;
  %851 = cast(%var_3028, dtype="uint32") /* ty=Tensor[(8, 14, 15), uint32] */;
  %852 = cast(%var_3027, dtype="float32") /* ty=Tensor[(8, 14, 1), float32] */;
  %853 = subtract(%850, %851) /* ty=Tensor[(8, 14, 15), uint32] */;
  %854 = sigmoid(%852) /* ty=Tensor[(8, 14, 1), float32] */;
  (%853, %854)
}

def @func_2689() -> (Tensor[(5, 15, 6), int8],) {
  %855 = @func_575() /* ty=(Tensor[(10, 45), bool], Tensor[(10, 45), float64], Tensor[(5, 15, 6), int8], int8, Tensor[(540), float64], Tensor[(13, 2, 16), float64]) */;
  %856 = %855.2;
  (%856,)
}

def @func_4722(%var_4717: Tensor[(240), bool]) -> (Tensor[(9, 10, 6), float64], Tensor[(13, 2, 16), float64], Tensor[(240), bool]) {
  %857 = cast(%var_4717, dtype="bool") /* ty=Tensor[(240), bool] */;
  %858 = reshape(%857, newshape=[3, 8, 10]) /* ty=Tensor[(3, 8, 10), bool] */;
  %859 = @func_1873(%858) /* ty=(Tensor[(13, 2, 16), float64], Tensor[(3, 8, 10), float32]) */;
  %860 = @func_3513() /* ty=Tensor[(9, 10, 6), float64] */;
  %861 = %859.0;
  (%860, %861, %var_4717)
}

def @func_3070() -> Tensor[(12, 13, 2), float64] {
  %862 = @func_1100() /* ty=(Tensor[(12, 13, 2), float64], Tensor[(9, 10, 6), float64]) */;
  %862.0
}

def @func_4221() -> (Tensor[(13, 2, 16), bool], Tensor[(540), float64], Tensor[(540), float64], Tensor[(1, 312), float64], Tensor[(13, 2, 16), float64], Tensor[(5, 15, 6), float32], Tensor[(5, 7, 16), int32], Tensor[(560), int32]) {
  %863 = @func_3953() /* ty=(Tensor[(13, 2, 16), bool],) */;
  %864 = cast(meta[relay.Constant][48] /* ty=Tensor[(540), float64] */, dtype="float64") /* ty=Tensor[(540), float64] */;
  %865 = reshape(%864, newshape=[540]) /* ty=Tensor[(540), float64] */;
  %866 = @func_2118(%865) /* ty=(Tensor[(13, 2, 16), float64], Tensor[(3, 8, 10), bool], Tensor[(9, 10, 6), bool], Tensor[(540), float64]) */;
  %867 = @func_1078() /* ty=(Tensor[(13, 2, 16), bool], Tensor[(450), int8], Tensor[(540), float64], Tensor[(450), int8], Tensor[(12, 13, 2), float64], Tensor[(1, 312), float64]) */;
  %868 = @func_4087() /* ty=(Tensor[(13, 2, 16), float64], Tensor[(9, 10, 6), int16]) */;
  %869 = @func_2892() /* ty=(Tensor[(5, 15, 6), float32],) */;
  %870 = cast(meta[relay.Constant][49] /* ty=Tensor[(560), int32] */, dtype="int32") /* ty=Tensor[(560), int32] */;
  %871 = reshape(%870, newshape=[5, 7, 16]) /* ty=Tensor[(5, 7, 16), int32] */;
  %872 = @func_649(%871) /* ty=(Tensor[(5, 7, 16), int32],) */;
  %873 = %863.0;
  %874 = %866.3;
  %875 = %867.5;
  %876 = %868.0;
  %877 = %869.0;
  %878 = %872.0;
  (%873, %874, meta[relay.Constant][48] /* ty=Tensor[(540), float64] */, %875, %876, %877, %878, meta[relay.Constant][49] /* ty=Tensor[(560), int32] */)
}

def @func_5672() -> (Tensor[(13, 2, 16), bool], Tensor[(3, 8, 10), float32]) {
  %879 = @func_5150() /* ty=(Tensor[(3, 8, 10), bool],) */;
  %880 = %879.0;
  %881 = cast(%880, dtype="float64") /* ty=Tensor[(3, 8, 10), float64] */;
  %882 = atan(%881) /* ty=Tensor[(3, 8, 10), float64] */;
  %883 = cast(%882, dtype="float32") /* ty=Tensor[(3, 8, 10), float32] */;
  %884 = @func_3670() /* ty=Tensor[(13, 2, 16), bool] */;
  %885 = exp(%883) /* ty=Tensor[(3, 8, 10), float32] */;
  (%884, %885)
}

def @func_2035() -> (Tensor[(9, 10, 6), int16],) {
  %886 = @func_709() /* ty=(Tensor[(9, 10, 6), int16],) */;
  %887 = %886.0;
  (%887,)
}

def @func_2871(%var_2851: Tensor[(16, 8, 5), float64], %var_2852: Tensor[(16, 8, 5), float64]) -> (Tensor[(16, 8, 5), bool],) {
  %888 = cast(%var_2852, dtype="bool") /* ty=Tensor[(16, 8, 5), bool] */;
  %889 = shape_of(%var_2851, dtype="int32") /* ty=Tensor[(3), int32] */;
  %890 = cast(%var_2851, dtype="bool") /* ty=Tensor[(16, 8, 5), bool] */;
  %891 = dyn.reshape(%888, %889, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %892 = less(%890, %891) /* ty=Tensor[(16, 8, 5), bool] */;
  (%892,)
}

def @func_629(%var_591: Tensor[(9, 10, 6), float64], %var_608: Tensor[(450), int8]) -> (Tensor[(9, 10, 6), float32], Tensor[(9, 10, 6), int32], Tensor[(13, 2, 16), bool], Tensor[(450), int8], Tensor[(13, 2, 16), bool], int8) {
  %893 = @func_266() /* ty=(Tensor[(13, 2, 16), bool], Tensor[(9, 10, 6), float64], Tensor[(540), float64]) */;
  %894 = %893.1;
  %895 = cast(%var_591, dtype="float32") /* ty=Tensor[(9, 10, 6), float32] */;
  %896 = shape_of(%894, dtype="int32") /* ty=Tensor[(3), int32] */;
  %897 = cast(%894, dtype="float32") /* ty=Tensor[(9, 10, 6), float32] */;
  %898 = dyn.reshape(%895, %896, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %899 = cast(%var_591, dtype="int32") /* ty=Tensor[(9, 10, 6), int32] */;
  %900 = shape_of(%894, dtype="int32") /* ty=Tensor[(3), int32] */;
  %901 = cast(%894, dtype="int32") /* ty=Tensor[(9, 10, 6), int32] */;
  %902 = dyn.reshape(%899, %900, newshape=[]) /* ty=Tensor[(?, ?, ?), int32] */;
  %903 = cast(%var_608, dtype="int8") /* ty=Tensor[(450), int8] */;
  %904 = cast(%var_608, dtype="float64") /* ty=Tensor[(450), float64] */;
  %905 = reshape(%903, newshape=[10, 45]) /* ty=Tensor[(10, 45), int8] */;
  %906 = reshape(%904, newshape=[10, 45]) /* ty=Tensor[(10, 45), float64] */;
  %907 = @func_474(%905, %906) /* ty=(Tensor[(9, 10, 6), float64], Tensor[(540), float64], Tensor[(9, 10, 6), float64], Tensor[(13, 2, 16), bool], Tensor[(10, 45), bool]) */;
  %908 = cast(meta[relay.Constant][50] /* ty=int8 */, dtype="int8") /* ty=int8 */;
  %909 = cast(%var_608, dtype="int8") /* ty=Tensor[(450), int8] */;
  %910 = cast(%894, dtype="float64") /* ty=Tensor[(9, 10, 6), float64] */;
  %911 = reshape(%908, newshape=[]) /* ty=int8 */;
  %912 = reshape(%909, newshape=[5, 15, 6]) /* ty=Tensor[(5, 15, 6), int8] */;
  %913 = reshape(%910, newshape=[540]) /* ty=Tensor[(540), float64] */;
  %914 = @func_410(%911, %912, %913) /* ty=(Tensor[(5, 15, 6), int8], Tensor[(9, 10, 6), float64], Tensor[(540), float64], Tensor[(9, 10, 6), float64], Tensor[(13, 2, 16), bool], Tensor[(9, 10, 6), float64]) */;
  %915 = floor_divide(%897, %898) /* ty=Tensor[(9, 10, 6), float32] */;
  %916 = left_shift(%901, %902) /* ty=Tensor[(9, 10, 6), int32] */;
  %917 = %907.3;
  %918 = %914.4;
  (%915, %916, %917, %var_608, %918, meta[relay.Constant][50] /* ty=int8 */)
}

def @func_7778(%var_7734: Tensor[(416), float64], %var_7757: Tensor[(560, 1), int32]) -> (Tensor[(16, 12, 4), float32], Tensor[(9, 10, 6), float64], Tensor[(540), float64], Tensor[(13, 2, 16), uint32], Tensor[(416), float64], Tensor[(5, 7, 16), int32], Tensor[(560, 1), int32], Tensor[(16, 12, 4), bool]) {
  %919 = cast(meta[relay.Constant][51] /* ty=Tensor[(16, 12, 4), float32] */, dtype="float32") /* ty=Tensor[(16, 12, 4), float32] */;
  %920 = cast(meta[relay.Constant][52] /* ty=Tensor[(540), float64] */, dtype="float64") /* ty=Tensor[(540), float64] */;
  %921 = reshape(%920, newshape=[9, 10, 6]) /* ty=Tensor[(9, 10, 6), float64] */;
  %922 = @func_158(%921) /* ty=(Tensor[(9, 10, 6), float64], Tensor[(9, 10, 6), float64]) */;
  %923 = cast(%var_7734, dtype="float64") /* ty=Tensor[(416), float64] */;
  %924 = reshape(%923, newshape=[13, 2, 16]) /* ty=Tensor[(13, 2, 16), float64] */;
  %925 = @func_2465(%924) /* ty=(Tensor[(13, 2, 16), bool], Tensor[(12, 13, 2), float64], Tensor[(12, 13, 2), float64], Tensor[(13, 2, 16), uint32], Tensor[(13, 2, 16), bool], Tensor[(12, 13, 2), float64]) */;
  %926 = cast(%var_7757, dtype="int32") /* ty=Tensor[(560, 1), int32] */;
  %927 = reshape(%926, newshape=[5, 7, 16]) /* ty=Tensor[(5, 7, 16), int32] */;
  %928 = @func_649(%927) /* ty=(Tensor[(5, 7, 16), int32],) */;
  %929 = cast(meta[relay.Constant][51] /* ty=Tensor[(16, 12, 4), float32] */, dtype="float32") /* ty=Tensor[(16, 12, 4), float32] */;
  %930 = log2(%929) /* ty=Tensor[(16, 12, 4), float32] */;
  %931 = cast(meta[relay.Constant][51] /* ty=Tensor[(16, 12, 4), float32] */, dtype="bool") /* ty=Tensor[(16, 12, 4), bool] */;
  %932 = shape_of(%930, dtype="int32") /* ty=Tensor[(3), int32] */;
  %933 = cast(%930, dtype="bool") /* ty=Tensor[(16, 12, 4), bool] */;
  %934 = dyn.reshape(%931, %932, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %935 = cosh(%919) /* ty=Tensor[(16, 12, 4), float32] */;
  %936 = %922.0;
  %937 = %925.3;
  %938 = %928.0;
  %939 = logical_or(%933, %934) /* ty=Tensor[(16, 12, 4), bool] */;
  (%935, %936, meta[relay.Constant][52] /* ty=Tensor[(540), float64] */, %937, %var_7734, %938, %var_7757, %939)
}

def @func_1726() -> (Tensor[(12, 13, 2), float64],) {
  %940 = @func_1078() /* ty=(Tensor[(13, 2, 16), bool], Tensor[(450), int8], Tensor[(540), float64], Tensor[(450), int8], Tensor[(12, 13, 2), float64], Tensor[(1, 312), float64]) */;
  %941 = %940.4;
  (%941,)
}

def @func_7148() -> (Tensor[(450), float32], Tensor[(450), float32]) {
  %942 = @func_1078() /* ty=(Tensor[(13, 2, 16), bool], Tensor[(450), int8], Tensor[(540), float64], Tensor[(450), int8], Tensor[(12, 13, 2), float64], Tensor[(1, 312), float64]) */;
  %943 = %942.1;
  %944 = cast(%943, dtype="float32") /* ty=Tensor[(450), float32] */;
  %945 = cast(%943, dtype="float32") /* ty=Tensor[(450), float32] */;
  %946 = erf(%944) /* ty=Tensor[(450), float32] */;
  %947 = atan(%945) /* ty=Tensor[(450), float32] */;
  (%946, %947)
}

def @func_410(%var_377: int8, %var_378: Tensor[(5, 15, 6), int8], %var_383: Tensor[(540), float64]) -> (Tensor[(5, 15, 6), int8], Tensor[(9, 10, 6), float64], Tensor[(540), float64], Tensor[(9, 10, 6), float64], Tensor[(13, 2, 16), bool], Tensor[(9, 10, 6), float64]) {
  %948 = cast(%var_377, dtype="int8") /* ty=int8 */;
  %949 = cast(%var_378, dtype="int8") /* ty=Tensor[(5, 15, 6), int8] */;
  %950 = cast(%var_383, dtype="float64") /* ty=Tensor[(540), float64] */;
  %951 = reshape(%950, newshape=[9, 10, 6]) /* ty=Tensor[(9, 10, 6), float64] */;
  %952 = @func_158(%951) /* ty=(Tensor[(9, 10, 6), float64], Tensor[(9, 10, 6), float64]) */;
  %953 = cast(%var_383, dtype="float64") /* ty=Tensor[(540), float64] */;
  %954 = reshape(%953, newshape=[9, 10, 6]) /* ty=Tensor[(9, 10, 6), float64] */;
  %955 = @func_158(%954) /* ty=(Tensor[(9, 10, 6), float64], Tensor[(9, 10, 6), float64]) */;
  %956 = @func_266() /* ty=(Tensor[(13, 2, 16), bool], Tensor[(9, 10, 6), float64], Tensor[(540), float64]) */;
  %957 = %952.1;
  %958 = cast(%957, dtype="float64") /* ty=Tensor[(9, 10, 6), float64] */;
  %959 = reshape(%958, newshape=[9, 10, 6]) /* ty=Tensor[(9, 10, 6), float64] */;
  %960 = @func_158(%959) /* ty=(Tensor[(9, 10, 6), float64], Tensor[(9, 10, 6), float64]) */;
  %961 = add(%948, %949) /* ty=Tensor[(5, 15, 6), int8] */;
  %962 = %955.1;
  %963 = %956.0;
  %964 = %960.1;
  (%961, %957, %var_383, %962, %963, %964)
}

def @func_6380() -> Tensor[(9, 10, 6), float64] {
  %965 = @func_3551() /* ty=(Tensor[(12, 13, 2), float64], Tensor[(416), uint16], Tensor[(3, 8, 10), bool], Tensor[(9, 10, 6), int16]) */;
  %966 = %965.3;
  %967 = cast(%966, dtype="float64") /* ty=Tensor[(9, 10, 6), float64] */;
  sinh(%967) /* ty=Tensor[(9, 10, 6), float64] */
}

def @func_984(%var_938: Tensor[(13, 2, 16), float64], %var_968: Tensor[(13, 2, 16), float64]) -> (Tensor[(13, 2, 16), float64], Tensor[(13, 2, 16), bool]) {
  %968 = @func_370() /* ty=Tensor[(13, 2, 16), bool] */;
  %969 = cast(%968, dtype="float64") /* ty=Tensor[(13, 2, 16), float64] */;
  %970 = rsqrt(%969) /* ty=Tensor[(13, 2, 16), float64] */;
  %971 = cast(%970, dtype="float64") /* ty=Tensor[(13, 2, 16), float64] */;
  %972 = cast(%var_938, dtype="float64") /* ty=Tensor[(13, 2, 16), float64] */;
  %973 = shape_of(%970, dtype="int32") /* ty=Tensor[(3), int32] */;
  %974 = cast(%970, dtype="float64") /* ty=Tensor[(13, 2, 16), float64] */;
  %975 = dyn.reshape(%972, %973, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %976 = mod(%974, %975) /* ty=Tensor[(13, 2, 16), float64] */;
  %977 = cast(%var_968, dtype="bool") /* ty=Tensor[(13, 2, 16), bool] */;
  %978 = shape_of(%976, dtype="int32") /* ty=Tensor[(3), int32] */;
  %979 = cast(%976, dtype="bool") /* ty=Tensor[(13, 2, 16), bool] */;
  %980 = dyn.reshape(%977, %978, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %981 = asinh(%971) /* ty=Tensor[(13, 2, 16), float64] */;
  %982 = not_equal(%979, %980) /* ty=Tensor[(13, 2, 16), bool] */;
  (%981, %982)
}

def @func_1550() -> (Tensor[(3, 8, 10), bool], Tensor[(13, 2, 16), float64]) {
  %983 = @func_1078() /* ty=(Tensor[(13, 2, 16), bool], Tensor[(450), int8], Tensor[(540), float64], Tensor[(450), int8], Tensor[(12, 13, 2), float64], Tensor[(1, 312), float64]) */;
  %984 = %983.0;
  %985 = cast(%984, dtype="float64") /* ty=Tensor[(13, 2, 16), float64] */;
  %986 = @func_1261() /* ty=Tensor[(3, 8, 10), bool] */;
  %987 = sin(%985) /* ty=Tensor[(13, 2, 16), float64] */;
  (%986, %987)
}

def @func_5972() -> (Tensor[(9, 10, 6), int16], Tensor[(5, 15, 6), int8], Tensor[(13, 2, 16), bool]) {
  %988 = @func_5751() /* ty=(Tensor[(9, 10, 6), int16],) */;
  %989 = @func_4136() /* ty=(Tensor[(5, 15, 6), int8],) */;
  %990 = %988.0;
  %991 = %989.0;
  %992 = @func_3670() /* ty=Tensor[(13, 2, 16), bool] */;
  (%990, %991, %992)
}

def @func_7617() -> (Tensor[(450), int8], Tensor[(13, 2, 16), float64]) {
  %993 = @func_1078() /* ty=(Tensor[(13, 2, 16), bool], Tensor[(450), int8], Tensor[(540), float64], Tensor[(450), int8], Tensor[(12, 13, 2), float64], Tensor[(1, 312), float64]) */;
  %994 = @func_6762() /* ty=(Tensor[(13, 2, 16), float64],) */;
  %995 = %993.1;
  %996 = %994.0;
  (%995, %996)
}

def @func_3513() -> Tensor[(9, 10, 6), float64] {
  %997 = @func_709() /* ty=(Tensor[(9, 10, 6), int16],) */;
  %998 = %997.0;
  %999 = cast(%998, dtype="float64") /* ty=Tensor[(9, 10, 6), float64] */;
  cos(%999) /* ty=Tensor[(9, 10, 6), float64] */
}

def @func_6514() -> (Tensor[(12, 13, 2), float64],) {
  %1000 = @func_5332() /* ty=(Tensor[(10, 45), float64], Tensor[(12, 13, 2), float64], Tensor[(12, 13, 2), float64]) */;
  %1001 = %1000.1;
  (%1001,)
}

def @func_7096() -> Tensor[(12, 13, 2), float64] {
  %1002 = @func_5038() /* ty=(Tensor[(12, 13, 2), float64],) */;
  %1002.0
}

def @func_2563(%var_2550: Tensor[(16, 7, 9), float64]) -> Tensor[(16, 7, 9), float64] {
  %1003 = cast(%var_2550, dtype="float64") /* ty=Tensor[(16, 7, 9), float64] */;
  asin(%1003) /* ty=Tensor[(16, 7, 9), float64] */
}

def @func_4916() -> Tensor[(9, 10, 6), int16] {
  %1004 = @func_4649() /* ty=(Tensor[(9, 10, 6), int16],) */;
  %1004.0
}

def @func_3300(%var_3296: int8, %var_3297: Tensor[(98), int8]) -> (Tensor[(12, 13, 2), float64], Tensor[(7, 14, 1), int8], int8, Tensor[(98), int8]) {
  %1005 = cast(%var_3296, dtype="int8") /* ty=int8 */;
  %1006 = cast(%var_3297, dtype="int8") /* ty=Tensor[(98), int8] */;
  %1007 = reshape(%1005, newshape=[]) /* ty=int8 */;
  %1008 = reshape(%1006, newshape=[7, 14, 1]) /* ty=Tensor[(7, 14, 1), int8] */;
  %1009 = @func_2498(%1007, %1008) /* ty=(Tensor[(7, 14, 1), int8], Tensor[(9, 10, 6), float64]) */;
  %1010 = @func_3070() /* ty=Tensor[(12, 13, 2), float64] */;
  %1011 = %1009.0;
  (%1010, %1011, %var_3296, %var_3297)
}

def @func_4934() -> Tensor[(560), int32] {
  %1012 = @func_4221() /* ty=(Tensor[(13, 2, 16), bool], Tensor[(540), float64], Tensor[(540), float64], Tensor[(1, 312), float64], Tensor[(13, 2, 16), float64], Tensor[(5, 15, 6), float32], Tensor[(5, 7, 16), int32], Tensor[(560), int32]) */;
  %1012.7
}

def @func_5391() -> (Tensor[(10, 45), bool],) {
  %1013 = @func_575() /* ty=(Tensor[(10, 45), bool], Tensor[(10, 45), float64], Tensor[(5, 15, 6), int8], int8, Tensor[(540), float64], Tensor[(13, 2, 16), float64]) */;
  %1014 = %1013.0;
  (%1014,)
}

def @func_7913() -> (Tensor[(13, 2, 16), float64], Tensor[(13, 2, 16), bool], Tensor[(13, 2, 16), float64]) {
  %1015 = @func_1550() /* ty=(Tensor[(3, 8, 10), bool], Tensor[(13, 2, 16), float64]) */;
  %1016 = %1015.1;
  %1017 = cast(%1016, dtype="float64") /* ty=Tensor[(13, 2, 16), float64] */;
  %1018 = cast(%1016, dtype="float64") /* ty=Tensor[(13, 2, 16), float64] */;
  %1019 = reshape(%1017, newshape=[13, 2, 16]) /* ty=Tensor[(13, 2, 16), float64] */;
  %1020 = reshape(%1018, newshape=[13, 2, 16]) /* ty=Tensor[(13, 2, 16), float64] */;
  %1021 = @func_984(%1019, %1020) /* ty=(Tensor[(13, 2, 16), float64], Tensor[(13, 2, 16), bool]) */;
  %1022 = @func_1550() /* ty=(Tensor[(3, 8, 10), bool], Tensor[(13, 2, 16), float64]) */;
  %1023 = %1021.1;
  %1024 = %1022.1;
  (%1016, %1023, %1024)
}

/* For debugging purposes the metadata section has been omitted.
 * If you would like to see the full metadata section you can set the 
 * option to `True` when invoking `astext`. 
 */
===================================
==========mutated_mod==========
#[version = "0.0.5"]
def @func_371() -> Tensor[(13, 2, 16), bool] {
  %1 = fn () -> Tensor[(13, 2, 16), bool] {
    %0 = @func_266() /* ty=(Tensor[(13, 2, 16), bool], Tensor[(9, 10, 6), float64], Tensor[(540), float64]) */;
    %0.0
  };
  %1() /* ty=Tensor[(13, 2, 16), bool] */
}

def @func_4877() -> (Tensor[(12, 13, 2), float64], Tensor[(12, 13, 2), float64], Tensor[(16, 7, 9), float64], Tensor[(1008), float64], Tensor[(9, 10, 6), float64]) {
  %12 = fn () -> (Tensor[(12, 13, 2), float64], Tensor[(12, 13, 2), float64], Tensor[(16, 7, 9), float64], Tensor[(1008), float64], Tensor[(9, 10, 6), float64]) {
    %2 = @func_1726() /* ty=(Tensor[(12, 13, 2), float64],) */;
    %3 = @func_3844() /* ty=(Tensor[(12, 13, 2), float64], Tensor[(9, 10, 6), float64], Tensor[(450), int8]) */;
    %4 = cast(meta[relay.Constant][0] /* ty=Tensor[(1008), float64] */, dtype="float64") /* ty=Tensor[(1008), float64] */;
    %5 = reshape(%4, newshape=[1008]) /* ty=Tensor[(1008), float64] */;
    %6 = @func_2811(%5) /* ty=(Tensor[(9, 10, 6), int16], Tensor[(16, 7, 9), float64], Tensor[(1008), float64]) */;
    %7 = @func_1100() /* ty=(Tensor[(12, 13, 2), float64], Tensor[(9, 10, 6), float64]) */;
    %8 = %2.0;
    %9 = %3.0;
    %10 = %6.1;
    %11 = %7.1;
    (%8, %9, %10, meta[relay.Constant][0] /* ty=Tensor[(1008), float64] */, %11)
  };
  %12() /* ty=(Tensor[(12, 13, 2), float64], Tensor[(12, 13, 2), float64], Tensor[(16, 7, 9), float64], Tensor[(1008), float64], Tensor[(9, 10, 6), float64]) */
}

def @func_6623(%var_6603: Tensor[(12, 6, 5), float64], %var_6613: Tensor[(12, 6, 5), float64]) -> (Tensor[(9, 10, 6), float64], Tensor[(12, 6, 5), bool]) {
  %13 = @func_4876() /* ty=(Tensor[(12, 13, 2), float64], Tensor[(12, 13, 2), float64], Tensor[(16, 7, 9), float64], Tensor[(1008), float64], Tensor[(9, 10, 6), float64]) */;
  %14 = cast(%var_6603, dtype="float64") /* ty=Tensor[(12, 6, 5), float64] */;
  %15 = acos(%14) /* ty=Tensor[(12, 6, 5), float64] */;
  %16 = cast(%var_6613, dtype="bool") /* ty=Tensor[(12, 6, 5), bool] */;
  %17 = shape_of(%15, dtype="int32") /* ty=Tensor[(3), int32] */;
  %18 = cast(%15, dtype="bool") /* ty=Tensor[(12, 6, 5), bool] */;
  %19 = dyn.reshape(%16, %17, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %20 = %13.4;
  %21 = less_equal(%18, %19) /* ty=Tensor[(12, 6, 5), bool] */;
  (%20, %21)
}

def @func_7224() -> (Tensor[(12, 13, 2), float64], Tensor[(13, 2, 16), bool]) {
  %27 = fn () -> (Tensor[(12, 13, 2), float64], Tensor[(13, 2, 16), bool]) {
    %22 = @func_5038() /* ty=(Tensor[(12, 13, 2), float64],) */;
    %23 = %22.0;
    %24 = cast(%23, dtype="float64") /* ty=Tensor[(12, 13, 2), float64] */;
    %25 = log10(%24) /* ty=Tensor[(12, 13, 2), float64] */;
    %26 = @func_2738() /* ty=Tensor[(13, 2, 16), bool] */;
    (%25, %26)
  };
  %27() /* ty=(Tensor[(12, 13, 2), float64], Tensor[(13, 2, 16), bool]) */
}

def @func_7355(%var_7353: Tensor[(16, 6, 12), float64], %var_7354: Tensor[(4, 60), bool]) -> (Tensor[(16, 6, 12), float64], Tensor[(13, 2, 16), bool], Tensor[(450), int8], Tensor[(6, 10, 4), bool], Tensor[(4, 60), bool]) {
  @func_7351(%var_7353, %var_7354) /* ty=(Tensor[(16, 6, 12), float64], Tensor[(13, 2, 16), bool], Tensor[(450), int8], Tensor[(6, 10, 4), bool], Tensor[(4, 60), bool]) */
}

def @func_7584() -> Tensor[(13, 2, 16), float64] {
  %28 = @func_1588() /* ty=(Tensor[(13, 2, 16), float64],) */;
  %28.0
}

def @func_4087() -> (Tensor[(13, 2, 16), float64], Tensor[(9, 10, 6), int16]) {
  %29 = @func_1588() /* ty=(Tensor[(13, 2, 16), float64],) */;
  %30 = @func_2035() /* ty=(Tensor[(9, 10, 6), int16],) */;
  %31 = %29.0;
  %32 = %30.0;
  (%31, %32)
}

def @func_7288() -> (Tensor[(13, 2, 16), float64], Tensor[(13, 2, 16), int32]) {
  %33 = @func_4971() /* ty=(Tensor[(13, 2, 16), bool], Tensor[(9, 10, 6), int16]) */;
  %34 = %33.0;
  %35 = cast(meta[relay.Constant][1] /* ty=Tensor[(13, 2, 16), bool] */, dtype="float64") /* ty=Tensor[(13, 2, 16), float64] */;
  %36 = shape_of(%34, dtype="int32") /* ty=Tensor[(3), int32] */;
  %37 = cast(%34, dtype="float64") /* ty=Tensor[(13, 2, 16), float64] */;
  %38 = dyn.reshape(%35, %36, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %39 = cast(meta[relay.Constant][2] /* ty=Tensor[(13, 2, 16), bool] */, dtype="int32") /* ty=Tensor[(13, 2, 16), int32] */;
  %40 = shape_of(meta[relay.Constant][1] /* ty=Tensor[(13, 2, 16), bool] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %41 = cast(meta[relay.Constant][1] /* ty=Tensor[(13, 2, 16), bool] */, dtype="int32") /* ty=Tensor[(13, 2, 16), int32] */;
  %42 = dyn.reshape(%39, %40, newshape=[]) /* ty=Tensor[(?, ?, ?), int32] */;
  %43 = floor_mod(%37, %38) /* ty=Tensor[(13, 2, 16), float64] */;
  %44 = right_shift(%41, %42) /* ty=Tensor[(13, 2, 16), int32] */;
  (%43, %44)
}

def @func_7797() -> Tensor[(9, 10, 6), int16] {
  @func_5121() /* ty=Tensor[(9, 10, 6), int16] */
}

def @func_2791() -> (Tensor[(16, 11, 2), bool], Tensor[(3, 8, 10), float32], Tensor[(8, 30), bool], Tensor[(16, 11, 2), float64]) {
  %45 = cast(meta[relay.Constant][3] /* ty=Tensor[(16, 11, 2), float32] */, dtype="float32") /* ty=Tensor[(16, 11, 2), float32] */;
  %46 = sinh(%45) /* ty=Tensor[(16, 11, 2), float32] */;
  %47 = cast(meta[relay.Constant][3] /* ty=Tensor[(16, 11, 2), float32] */, dtype="bool") /* ty=Tensor[(16, 11, 2), bool] */;
  %48 = shape_of(%46, dtype="int32") /* ty=Tensor[(3), int32] */;
  %49 = cast(%46, dtype="bool") /* ty=Tensor[(16, 11, 2), bool] */;
  %50 = dyn.reshape(%47, %48, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %51 = cast(meta[relay.Constant][4] /* ty=Tensor[(8, 30), bool] */, dtype="bool") /* ty=Tensor[(8, 30), bool] */;
  %52 = reshape(%51, newshape=[3, 8, 10]) /* ty=Tensor[(3, 8, 10), bool] */;
  %53 = @func_1873(%52) /* ty=(Tensor[(13, 2, 16), float64], Tensor[(3, 8, 10), float32]) */;
  %54 = cast(meta[relay.Constant][3] /* ty=Tensor[(16, 11, 2), float32] */, dtype="float64") /* ty=Tensor[(16, 11, 2), float64] */;
  %55 = logical_or(%49, %50) /* ty=Tensor[(16, 11, 2), bool] */;
  %56 = %53.1;
  %57 = asin(%54) /* ty=Tensor[(16, 11, 2), float64] */;
  (%55, %56, meta[relay.Constant][4] /* ty=Tensor[(8, 30), bool] */, %57)
}

def @func_5794() -> (Tensor[(13, 2, 16), float64], Tensor[(12, 13, 2), float64], Tensor[(9, 10, 6), int16], Tensor[(9, 10, 6), float64], Tensor[(13, 2, 16), float64]) {
  %58 = @func_1960() /* ty=(Tensor[(13, 2, 16), float64],) */;
  %59 = @func_1100() /* ty=(Tensor[(12, 13, 2), float64], Tensor[(9, 10, 6), float64]) */;
  %60 = %58.0;
  %61 = cast(%60, dtype="float64") /* ty=Tensor[(13, 2, 16), float64] */;
  %62 = cast(%60, dtype="float64") /* ty=Tensor[(13, 2, 16), float64] */;
  %63 = reshape(%61, newshape=[13, 2, 16]) /* ty=Tensor[(13, 2, 16), float64] */;
  %64 = reshape(%62, newshape=[13, 2, 16]) /* ty=Tensor[(13, 2, 16), float64] */;
  %65 = @func_984(%63, %64) /* ty=(Tensor[(13, 2, 16), float64], Tensor[(13, 2, 16), bool]) */;
  %66 = @func_4941() /* ty=Tensor[(12, 13, 2), float64] */;
  %67 = @func_5121() /* ty=Tensor[(9, 10, 6), int16] */;
  %68 = %59.1;
  %69 = %65.0;
  (%60, %66, %67, %68, %69)
}

def @func_3793(%var_3791: Tensor[(1, 7, 13), float64]) -> (Tensor[(1, 7, 13), float64], Tensor[(450), int8], Tensor[(13, 2, 16), float64]) {
  @func_3790(%var_3791) /* ty=(Tensor[(1, 7, 13), float64], Tensor[(450), int8], Tensor[(13, 2, 16), float64]) */
}

def @func_4126() -> (Tensor[(13, 2, 16), bool],) {
  %70 = @func_3953() /* ty=(Tensor[(13, 2, 16), bool],) */;
  %71 = %70.0;
  (%71,)
}

def @func_5088(%var_5073: Tensor[(1, 13, 16), int64], %var_5074: Tensor[(9, 13, 16), int64]) -> (Tensor[(9, 13, 16), int64], Tensor[(13, 2, 16), bool]) {
  %72 = cast(%var_5073, dtype="int64") /* ty=Tensor[(1, 13, 16), int64] */;
  %73 = cast(%var_5074, dtype="int64") /* ty=Tensor[(9, 13, 16), int64] */;
  %74 = subtract(%72, %73) /* ty=Tensor[(9, 13, 16), int64] */;
  %75 = @func_3670() /* ty=Tensor[(13, 2, 16), bool] */;
  (%74, %75)
}

def @func_2739() -> Tensor[(13, 2, 16), bool] {
  %76 = fn () -> Tensor[(13, 2, 16), bool] {
    @func_370() /* ty=Tensor[(13, 2, 16), bool] */
  };
  %76() /* ty=Tensor[(13, 2, 16), bool] */
}

def @func_6669(%var_6663: Tensor[(2, 11, 7), float64]) -> (Tensor[(2, 11, 7), float64],) {
  %77 = cast(meta[relay.Constant][5] /* ty=Tensor[(2, 11, 7), float64] */, dtype="float64") /* ty=Tensor[(2, 11, 7), float64] */;
  %78 = shape_of(%var_6663, dtype="int32") /* ty=Tensor[(3), int32] */;
  %79 = cast(%var_6663, dtype="float64") /* ty=Tensor[(2, 11, 7), float64] */;
  %80 = dyn.reshape(%77, %78, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %81 = multiply(%79, %80) /* ty=Tensor[(2, 11, 7), float64] */;
  (%81,)
}

def @func_651(%var_650: Tensor[(5, 7, 16), int32]) -> (Tensor[(5, 7, 16), int32],) {
  %87 = fn (%var_645: Tensor[(5, 7, 16), int32]) -> (Tensor[(5, 7, 16), int32],) {
    %82 = cast(%var_645, dtype="int32") /* ty=Tensor[(5, 7, 16), int32] */;
    %83 = shape_of(meta[relay.Constant][6] /* ty=Tensor[(5, 7, 16), int32] */, dtype="int32") /* ty=Tensor[(3), int32] */;
    %84 = cast(meta[relay.Constant][6] /* ty=Tensor[(5, 7, 16), int32] */, dtype="int32") /* ty=Tensor[(5, 7, 16), int32] */;
    %85 = dyn.reshape(%82, %83, newshape=[]) /* ty=Tensor[(?, ?, ?), int32] */;
    %86 = add(%84, %85) /* ty=Tensor[(5, 7, 16), int32] */;
    (%86,)
  };
  %87(%var_650) /* ty=(Tensor[(5, 7, 16), int32],) */
}

def @func_2467(%var_2466: Tensor[(13, 2, 16), float64]) -> (Tensor[(13, 2, 16), bool], Tensor[(12, 13, 2), float64], Tensor[(12, 13, 2), float64], Tensor[(13, 2, 16), uint32], Tensor[(13, 2, 16), bool], Tensor[(12, 13, 2), float64]) {
  %109 = fn (%var_2374: Tensor[(13, 2, 16), float64]) -> (Tensor[(13, 2, 16), bool], Tensor[(12, 13, 2), float64], Tensor[(12, 13, 2), float64], Tensor[(13, 2, 16), uint32], Tensor[(13, 2, 16), bool], Tensor[(12, 13, 2), float64]) {
    %88 = @func_2349() /* ty=(Tensor[(13, 2, 16), float64], Tensor[(12, 13, 2), float64]) */;
    %89 = %88.0;
    %90 = cast(%var_2374, dtype="bool") /* ty=Tensor[(13, 2, 16), bool] */;
    %91 = shape_of(%89, dtype="int32") /* ty=Tensor[(3), int32] */;
    %92 = cast(%89, dtype="bool") /* ty=Tensor[(13, 2, 16), bool] */;
    %93 = dyn.reshape(%90, %91, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    %94 = @func_1607() /* ty=(Tensor[(12, 13, 2), float64],) */;
    %95 = @func_1100() /* ty=(Tensor[(12, 13, 2), float64], Tensor[(9, 10, 6), float64]) */;
    %96 = cast(%89, dtype="float32") /* ty=Tensor[(13, 2, 16), float32] */;
    %97 = sqrt(%96) /* ty=Tensor[(13, 2, 16), float32] */;
    %98 = cast(%89, dtype="uint32") /* ty=Tensor[(13, 2, 16), uint32] */;
    %99 = shape_of(%97, dtype="int32") /* ty=Tensor[(3), int32] */;
    %100 = cast(%97, dtype="uint32") /* ty=Tensor[(13, 2, 16), uint32] */;
    %101 = dyn.reshape(%98, %99, newshape=[]) /* ty=Tensor[(?, ?, ?), uint32] */;
    %102 = @func_1726() /* ty=(Tensor[(12, 13, 2), float64],) */;
    %103 = less_equal(%92, %93) /* ty=Tensor[(13, 2, 16), bool] */;
    %104 = %94.0;
    %105 = %95.0;
    %106 = maximum(%100, %101) /* ty=Tensor[(13, 2, 16), uint32] */;
    %107 = @func_370() /* ty=Tensor[(13, 2, 16), bool] */;
    %108 = %102.0;
    (%103, %104, %105, %106, %107, %108)
  };
  %109(%var_2466) /* ty=(Tensor[(13, 2, 16), bool], Tensor[(12, 13, 2), float64], Tensor[(12, 13, 2), float64], Tensor[(13, 2, 16), uint32], Tensor[(13, 2, 16), bool], Tensor[(12, 13, 2), float64]) */
}

def @func_4941() -> Tensor[(12, 13, 2), float64] {
  @func_3070() /* ty=Tensor[(12, 13, 2), float64] */
}

def @func_6317() -> (Tensor[(6, 5, 10), uint32], Tensor[(13, 2, 16), bool]) {
  @func_6315() /* ty=(Tensor[(6, 5, 10), uint32], Tensor[(13, 2, 16), bool]) */
}

def @func_3513() -> Tensor[(9, 10, 6), float64] {
  %110 = @func_709() /* ty=(Tensor[(9, 10, 6), int16],) */;
  %111 = %110.0;
  %112 = cast(%111, dtype="float64") /* ty=Tensor[(9, 10, 6), float64] */;
  cos(%112) /* ty=Tensor[(9, 10, 6), float64] */
}

def @func_5393() -> (Tensor[(10, 45), bool],) {
  @func_5391() /* ty=(Tensor[(10, 45), bool],) */
}

def @func_5796() -> (Tensor[(13, 2, 16), float64], Tensor[(12, 13, 2), float64], Tensor[(9, 10, 6), int16], Tensor[(9, 10, 6), float64], Tensor[(13, 2, 16), float64]) {
  @func_5794() /* ty=(Tensor[(13, 2, 16), float64], Tensor[(12, 13, 2), float64], Tensor[(9, 10, 6), int16], Tensor[(9, 10, 6), float64], Tensor[(13, 2, 16), float64]) */
}

def @func_4239() -> (Tensor[(13, 2, 16), float64],) {
  %113 = @func_575() /* ty=(Tensor[(10, 45), bool], Tensor[(10, 45), float64], Tensor[(5, 15, 6), int8], int8, Tensor[(540), float64], Tensor[(13, 2, 16), float64]) */;
  %114 = %113.5;
  (%114,)
}

def @func_6957(%var_6955: Tensor[(4, 7, 13), float64]) -> Tensor[(4, 7, 13), float32] {
  @func_6954(%var_6955) /* ty=Tensor[(4, 7, 13), float32] */
}

def @func_7778(%var_7734: Tensor[(416), float64], %var_7757: Tensor[(560, 1), int32]) -> (Tensor[(16, 12, 4), float32], Tensor[(9, 10, 6), float64], Tensor[(540), float64], Tensor[(13, 2, 16), uint32], Tensor[(416), float64], Tensor[(5, 7, 16), int32], Tensor[(560, 1), int32], Tensor[(16, 12, 4), bool]) {
  %115 = cast(meta[relay.Constant][7] /* ty=Tensor[(16, 12, 4), float32] */, dtype="float32") /* ty=Tensor[(16, 12, 4), float32] */;
  %116 = cast(meta[relay.Constant][8] /* ty=Tensor[(540), float64] */, dtype="float64") /* ty=Tensor[(540), float64] */;
  %117 = reshape(%116, newshape=[9, 10, 6]) /* ty=Tensor[(9, 10, 6), float64] */;
  %118 = @func_158(%117) /* ty=(Tensor[(9, 10, 6), float64], Tensor[(9, 10, 6), float64]) */;
  %119 = cast(%var_7734, dtype="float64") /* ty=Tensor[(416), float64] */;
  %120 = reshape(%119, newshape=[13, 2, 16]) /* ty=Tensor[(13, 2, 16), float64] */;
  %121 = @func_2465(%120) /* ty=(Tensor[(13, 2, 16), bool], Tensor[(12, 13, 2), float64], Tensor[(12, 13, 2), float64], Tensor[(13, 2, 16), uint32], Tensor[(13, 2, 16), bool], Tensor[(12, 13, 2), float64]) */;
  %122 = cast(%var_7757, dtype="int32") /* ty=Tensor[(560, 1), int32] */;
  %123 = reshape(%122, newshape=[5, 7, 16]) /* ty=Tensor[(5, 7, 16), int32] */;
  %124 = @func_649(%123) /* ty=(Tensor[(5, 7, 16), int32],) */;
  %125 = cast(meta[relay.Constant][7] /* ty=Tensor[(16, 12, 4), float32] */, dtype="float32") /* ty=Tensor[(16, 12, 4), float32] */;
  %126 = log2(%125) /* ty=Tensor[(16, 12, 4), float32] */;
  %127 = cast(meta[relay.Constant][7] /* ty=Tensor[(16, 12, 4), float32] */, dtype="bool") /* ty=Tensor[(16, 12, 4), bool] */;
  %128 = shape_of(%126, dtype="int32") /* ty=Tensor[(3), int32] */;
  %129 = cast(%126, dtype="bool") /* ty=Tensor[(16, 12, 4), bool] */;
  %130 = dyn.reshape(%127, %128, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %131 = cosh(%115) /* ty=Tensor[(16, 12, 4), float32] */;
  %132 = %118.0;
  %133 = %121.3;
  %134 = %124.0;
  %135 = logical_or(%129, %130) /* ty=Tensor[(16, 12, 4), bool] */;
  (%131, %132, meta[relay.Constant][8] /* ty=Tensor[(540), float64] */, %133, %var_7734, %134, %var_7757, %135)
}

def @func_7052() -> (Tensor[(560), float64], Tensor[(4, 7, 13), float32], Tensor[(182, 2), float64]) {
  @func_7050() /* ty=(Tensor[(560), float64], Tensor[(4, 7, 13), float32], Tensor[(182, 2), float64]) */
}

def @func_2647(%var_2645: Tensor[(540), float64], %var_2646: Tensor[(150, 3), int8]) -> (Tensor[(12, 13, 2), float64], Tensor[(3, 8, 10), bool], Tensor[(9, 10, 6), float64], Tensor[(540), float64], Tensor[(13, 2, 16), bool], Tensor[(150, 3), int8]) {
  %148 = fn (%var_2626: Tensor[(540), float64], %var_2634: Tensor[(150, 3), int8]) -> (Tensor[(12, 13, 2), float64], Tensor[(3, 8, 10), bool], Tensor[(9, 10, 6), float64], Tensor[(540), float64], Tensor[(13, 2, 16), bool], Tensor[(150, 3), int8]) {
    %136 = @func_1100() /* ty=(Tensor[(12, 13, 2), float64], Tensor[(9, 10, 6), float64]) */;
    %137 = @func_1550() /* ty=(Tensor[(3, 8, 10), bool], Tensor[(13, 2, 16), float64]) */;
    %138 = cast(%var_2626, dtype="float64") /* ty=Tensor[(540), float64] */;
    %139 = reshape(%138, newshape=[9, 10, 6]) /* ty=Tensor[(9, 10, 6), float64] */;
    %140 = @func_158(%139) /* ty=(Tensor[(9, 10, 6), float64], Tensor[(9, 10, 6), float64]) */;
    %141 = cast(%var_2634, dtype="int8") /* ty=Tensor[(150, 3), int8] */;
    %142 = reshape(%141, newshape=[5, 90]) /* ty=Tensor[(5, 90), int8] */;
    %143 = @func_1636(%142) /* ty=(Tensor[(9, 10, 6), float64], Tensor[(13, 2, 16), bool], Tensor[(5, 90), int8], Tensor[(9, 10, 6), int16]) */;
    %144 = %136.0;
    %145 = %137.0;
    %146 = %140.1;
    %147 = %143.1;
    (%144, %145, %146, %var_2626, %147, %var_2634)
  };
  %148(%var_2645, %var_2646) /* ty=(Tensor[(12, 13, 2), float64], Tensor[(3, 8, 10), bool], Tensor[(9, 10, 6), float64], Tensor[(540), float64], Tensor[(13, 2, 16), bool], Tensor[(150, 3), int8]) */
}

def @func_4669() -> Tensor[(540), float64] {
  %150 = fn () -> Tensor[(540), float64] {
    %149 = @func_4460() /* ty=(Tensor[(9, 10, 6), int16], Tensor[(9, 10, 6), int16], Tensor[(12, 13, 2), float64], Tensor[(9, 10, 6), int16], Tensor[(540), float64], Tensor[(450), int8]) */;
    %149.4
  };
  %150() /* ty=Tensor[(540), float64] */
}

def @func_6763() -> (Tensor[(13, 2, 16), float64],) {
  %153 = fn () -> (Tensor[(13, 2, 16), float64],) {
    %151 = @func_2349() /* ty=(Tensor[(13, 2, 16), float64], Tensor[(12, 13, 2), float64]) */;
    %152 = %151.0;
    (%152,)
  };
  %153() /* ty=(Tensor[(13, 2, 16), float64],) */
}

def @func_7290() -> (Tensor[(13, 2, 16), float64], Tensor[(13, 2, 16), int32]) {
  @func_7288() /* ty=(Tensor[(13, 2, 16), float64], Tensor[(13, 2, 16), int32]) */
}

def @func_5038() -> (Tensor[(12, 13, 2), float64],) {
  %154 = @func_4460() /* ty=(Tensor[(9, 10, 6), int16], Tensor[(9, 10, 6), int16], Tensor[(12, 13, 2), float64], Tensor[(9, 10, 6), int16], Tensor[(540), float64], Tensor[(450), int8]) */;
  %155 = %154.2;
  (%155,)
}

def @func_6730() -> (Tensor[(5, 15, 6), int8], Tensor[(560), int32], Tensor[(13, 2, 16), bool], Tensor[(560), float64]) {
  %165 = fn () -> (Tensor[(5, 15, 6), int8], Tensor[(560), int32], Tensor[(13, 2, 16), bool], Tensor[(560), float64]) {
    %156 = @func_4136() /* ty=(Tensor[(5, 15, 6), int8],) */;
    %157 = cast(meta[relay.Constant][9] /* ty=Tensor[(560), int32] */, dtype="int32") /* ty=Tensor[(560), int32] */;
    %158 = reshape(%157, newshape=[560]) /* ty=Tensor[(560), int32] */;
    %159 = @func_2986(%158) /* ty=(Tensor[(9, 10, 6), float64], Tensor[(5, 7, 16), int32], Tensor[(560), int32]) */;
    %160 = %159.2;
    %161 = cast(%160, dtype="float64") /* ty=Tensor[(560), float64] */;
    %162 = %156.0;
    %163 = @func_3670() /* ty=Tensor[(13, 2, 16), bool] */;
    %164 = asinh(%161) /* ty=Tensor[(560), float64] */;
    (%162, meta[relay.Constant][9] /* ty=Tensor[(560), int32] */, %163, %164)
  };
  %165() /* ty=(Tensor[(5, 15, 6), int8], Tensor[(560), int32], Tensor[(13, 2, 16), bool], Tensor[(560), float64]) */
}

def @func_7782(%var_7780: Tensor[(416), float64], %var_7781: Tensor[(560, 1), int32]) -> (Tensor[(16, 12, 4), float32], Tensor[(9, 10, 6), float64], Tensor[(540), float64], Tensor[(13, 2, 16), uint32], Tensor[(416), float64], Tensor[(5, 7, 16), int32], Tensor[(560, 1), int32], Tensor[(16, 12, 4), bool]) {
  @func_7778(%var_7780, %var_7781) /* ty=(Tensor[(16, 12, 4), float32], Tensor[(9, 10, 6), float64], Tensor[(540), float64], Tensor[(13, 2, 16), uint32], Tensor[(416), float64], Tensor[(5, 7, 16), int32], Tensor[(560, 1), int32], Tensor[(16, 12, 4), bool]) */
}

def @func_4405() -> (Tensor[(13, 2, 16), float32], Tensor[(9, 10, 6), int16]) {
  @func_4403() /* ty=(Tensor[(13, 2, 16), float32], Tensor[(9, 10, 6), int16]) */
}

def @func_4943() -> Tensor[(12, 13, 2), float64] {
  @func_4941() /* ty=Tensor[(12, 13, 2), float64] */
}

def @func_5724(%var_5701: Tensor[(240), bool], %var_5702: Tensor[(540), float64]) -> (Tensor[(9, 10, 6), int16], Tensor[(240), bool], Tensor[(540), float64], Tensor[(5, 15, 6), float64], Tensor[(9, 10, 6), float64], Tensor[(9, 10, 6), int16]) {
  %166 = cast(%var_5701, dtype="bool") /* ty=Tensor[(240), bool] */;
  %167 = cast(%var_5702, dtype="float64") /* ty=Tensor[(540), float64] */;
  %168 = reshape(%166, newshape=[240]) /* ty=Tensor[(240), bool] */;
  %169 = reshape(%167, newshape=[540]) /* ty=Tensor[(540), float64] */;
  %170 = @func_4785(%168, %169) /* ty=(Tensor[(12, 13, 2), float64], Tensor[(3, 8, 10), bool], Tensor[(240), bool], Tensor[(9, 10, 6), bool], Tensor[(540), float64], Tensor[(9, 10, 6), int16], Tensor[(9, 10, 6), float64]) */;
  %171 = @func_2892() /* ty=(Tensor[(5, 15, 6), float32],) */;
  %172 = %171.0;
  %173 = cast(%172, dtype="float64") /* ty=Tensor[(5, 15, 6), float64] */;
  %174 = cast(%var_5701, dtype="bool") /* ty=Tensor[(240), bool] */;
  %175 = reshape(%174, newshape=[240]) /* ty=Tensor[(240), bool] */;
  %176 = @func_4722(%175) /* ty=(Tensor[(9, 10, 6), float64], Tensor[(13, 2, 16), float64], Tensor[(240), bool]) */;
  %177 = %170.5;
  %178 = sin(%173) /* ty=Tensor[(5, 15, 6), float64] */;
  %179 = %176.0;
  %180 = @func_5341() /* ty=Tensor[(9, 10, 6), int16] */;
  (%177, %var_5701, %var_5702, %178, %179, %180)
}

def @func_6187() -> (Tensor[(9, 10, 6), int16], Tensor[(13, 2, 16), float64]) {
  %181 = @func_3551() /* ty=(Tensor[(12, 13, 2), float64], Tensor[(416), uint16], Tensor[(3, 8, 10), bool], Tensor[(9, 10, 6), int16]) */;
  %182 = @func_5794() /* ty=(Tensor[(13, 2, 16), float64], Tensor[(12, 13, 2), float64], Tensor[(9, 10, 6), int16], Tensor[(9, 10, 6), float64], Tensor[(13, 2, 16), float64]) */;
  %183 = %181.3;
  %184 = %182.0;
  (%183, %184)
}

def @func_7149() -> (Tensor[(450), float32], Tensor[(450), float32]) {
  %191 = fn () -> (Tensor[(450), float32], Tensor[(450), float32]) {
    %185 = @func_1078() /* ty=(Tensor[(13, 2, 16), bool], Tensor[(450), int8], Tensor[(540), float64], Tensor[(450), int8], Tensor[(12, 13, 2), float64], Tensor[(1, 312), float64]) */;
    %186 = %185.1;
    %187 = cast(%186, dtype="float32") /* ty=Tensor[(450), float32] */;
    %188 = cast(%186, dtype="float32") /* ty=Tensor[(450), float32] */;
    %189 = erf(%187) /* ty=Tensor[(450), float32] */;
    %190 = atan(%188) /* ty=Tensor[(450), float32] */;
    (%189, %190)
  };
  %191() /* ty=(Tensor[(450), float32], Tensor[(450), float32]) */
}

def @func_2814(%var_2812: Tensor[(1008), float64]) -> (Tensor[(9, 10, 6), int16], Tensor[(16, 7, 9), float64], Tensor[(1008), float64]) {
  @func_2811(%var_2812) /* ty=(Tensor[(9, 10, 6), int16], Tensor[(16, 7, 9), float64], Tensor[(1008), float64]) */
}

def @func_4971() -> (Tensor[(13, 2, 16), bool], Tensor[(9, 10, 6), int16]) {
  %192 = @func_2137() /* ty=(Tensor[(9, 10, 6), int16],) */;
  %193 = @func_370() /* ty=Tensor[(13, 2, 16), bool] */;
  %194 = %192.0;
  (%193, %194)
}

def @func_2120(%var_2119: Tensor[(540), float64]) -> (Tensor[(13, 2, 16), float64], Tensor[(3, 8, 10), bool], Tensor[(9, 10, 6), bool], Tensor[(540), float64]) {
  %203 = fn (%var_2106: Tensor[(540), float64]) -> (Tensor[(13, 2, 16), float64], Tensor[(3, 8, 10), bool], Tensor[(9, 10, 6), bool], Tensor[(540), float64]) {
    %195 = @func_1960() /* ty=(Tensor[(13, 2, 16), float64],) */;
    %196 = @func_1550() /* ty=(Tensor[(3, 8, 10), bool], Tensor[(13, 2, 16), float64]) */;
    %197 = cast(%var_2106, dtype="float64") /* ty=Tensor[(540), float64] */;
    %198 = reshape(%197, newshape=[9, 10, 6]) /* ty=Tensor[(9, 10, 6), float64] */;
    %199 = @func_1711(%198) /* ty=(Tensor[(9, 10, 6), bool], Tensor[(9, 10, 6), bool]) */;
    %200 = %195.0;
    %201 = %196.0;
    %202 = %199.0;
    (%200, %201, %202, %var_2106)
  };
  %203(%var_2119) /* ty=(Tensor[(13, 2, 16), float64], Tensor[(3, 8, 10), bool], Tensor[(9, 10, 6), bool], Tensor[(540), float64]) */
}

def @func_7618() -> (Tensor[(450), int8], Tensor[(13, 2, 16), float64]) {
  %208 = fn () -> (Tensor[(450), int8], Tensor[(13, 2, 16), float64]) {
    %204 = @func_1078() /* ty=(Tensor[(13, 2, 16), bool], Tensor[(450), int8], Tensor[(540), float64], Tensor[(450), int8], Tensor[(12, 13, 2), float64], Tensor[(1, 312), float64]) */;
    %205 = @func_6762() /* ty=(Tensor[(13, 2, 16), float64],) */;
    %206 = %204.1;
    %207 = %205.0;
    (%206, %207)
  };
  %208() /* ty=(Tensor[(450), int8], Tensor[(13, 2, 16), float64]) */
}

def @func_6537() -> Tensor[(2, 14, 7), float64] {
  @func_6535() /* ty=Tensor[(2, 14, 7), float64] */
}

def @main(%var_7918: Tensor[(6, 13, 9), uint64], %var_7919: Tensor[(6, 13, 9), uint64]) -> (Tensor[(6, 13, 9), uint64],) {
  %209 = cast(%var_7919, dtype="uint64") /* ty=Tensor[(6, 13, 9), uint64] */;
  %210 = shape_of(%var_7918, dtype="int32") /* ty=Tensor[(3), int32] */;
  %211 = cast(%var_7918, dtype="uint64") /* ty=Tensor[(6, 13, 9), uint64] */;
  %212 = dyn.reshape(%209, %210, newshape=[]) /* ty=Tensor[(?, ?, ?), uint64] */;
  %213 = add(%211, %212) /* ty=Tensor[(6, 13, 9), uint64] */;
  (%213,)
}

def @func_5753() -> (Tensor[(9, 10, 6), int16],) {
  @func_5751() /* ty=(Tensor[(9, 10, 6), int16],) */
}

def @func_7833() -> (Tensor[(9, 10, 6), int16],) {
  @func_7831() /* ty=(Tensor[(9, 10, 6), int16],) */
}

def @func_3790(%var_3751: Tensor[(1, 7, 13), float64]) -> (Tensor[(1, 7, 13), float64], Tensor[(450), int8], Tensor[(13, 2, 16), float64]) {
  %214 = cast(%var_3751, dtype="float64") /* ty=Tensor[(1, 7, 13), float64] */;
  %215 = @func_3264() /* ty=(Tensor[(12, 13, 2), float64], Tensor[(9, 10, 6), float64], Tensor[(450), int8]) */;
  %216 = @func_1960() /* ty=(Tensor[(13, 2, 16), float64],) */;
  %217 = sqrt(%214) /* ty=Tensor[(1, 7, 13), float64] */;
  %218 = %215.2;
  %219 = %216.0;
  (%217, %218, %219)
}

def @func_5973() -> (Tensor[(9, 10, 6), int16], Tensor[(5, 15, 6), int8], Tensor[(13, 2, 16), bool]) {
  %225 = fn () -> (Tensor[(9, 10, 6), int16], Tensor[(5, 15, 6), int8], Tensor[(13, 2, 16), bool]) {
    %220 = @func_5751() /* ty=(Tensor[(9, 10, 6), int16],) */;
    %221 = @func_4136() /* ty=(Tensor[(5, 15, 6), int8],) */;
    %222 = %220.0;
    %223 = %221.0;
    %224 = @func_3670() /* ty=Tensor[(13, 2, 16), bool] */;
    (%222, %223, %224)
  };
  %225() /* ty=(Tensor[(9, 10, 6), int16], Tensor[(5, 15, 6), int8], Tensor[(13, 2, 16), bool]) */
}

def @func_1102() -> (Tensor[(12, 13, 2), float64], Tensor[(9, 10, 6), float64]) {
  @func_1100() /* ty=(Tensor[(12, 13, 2), float64], Tensor[(9, 10, 6), float64]) */
}

def @func_474(%var_435: Tensor[(10, 45), int8], %var_462: Tensor[(10, 45), float64]) -> (Tensor[(9, 10, 6), float64], Tensor[(540), float64], Tensor[(9, 10, 6), float64], Tensor[(13, 2, 16), bool], Tensor[(10, 45), bool]) {
  %226 = @func_266() /* ty=(Tensor[(13, 2, 16), bool], Tensor[(9, 10, 6), float64], Tensor[(540), float64]) */;
  %227 = cast(meta[relay.Constant][10] /* ty=int8 */, dtype="int8") /* ty=int8 */;
  %228 = cast(%var_435, dtype="int8") /* ty=Tensor[(10, 45), int8] */;
  %229 = %226.1;
  %230 = cast(%229, dtype="float64") /* ty=Tensor[(9, 10, 6), float64] */;
  %231 = reshape(%227, newshape=[]) /* ty=int8 */;
  %232 = reshape(%228, newshape=[5, 15, 6]) /* ty=Tensor[(5, 15, 6), int8] */;
  %233 = reshape(%230, newshape=[540]) /* ty=Tensor[(540), float64] */;
  %234 = @func_410(%231, %232, %233) /* ty=(Tensor[(5, 15, 6), int8], Tensor[(9, 10, 6), float64], Tensor[(540), float64], Tensor[(9, 10, 6), float64], Tensor[(13, 2, 16), bool], Tensor[(9, 10, 6), float64]) */;
  %235 = cast(meta[relay.Constant][10] /* ty=int8 */, dtype="int8") /* ty=int8 */;
  %236 = cast(%var_435, dtype="int8") /* ty=Tensor[(10, 45), int8] */;
  %237 = cast(%229, dtype="float64") /* ty=Tensor[(9, 10, 6), float64] */;
  %238 = reshape(%235, newshape=[]) /* ty=int8 */;
  %239 = reshape(%236, newshape=[5, 15, 6]) /* ty=Tensor[(5, 15, 6), int8] */;
  %240 = reshape(%237, newshape=[540]) /* ty=Tensor[(540), float64] */;
  %241 = @func_410(%238, %239, %240) /* ty=(Tensor[(5, 15, 6), int8], Tensor[(9, 10, 6), float64], Tensor[(540), float64], Tensor[(9, 10, 6), float64], Tensor[(13, 2, 16), bool], Tensor[(9, 10, 6), float64]) */;
  %242 = cast(%var_435, dtype="uint64") /* ty=Tensor[(10, 45), uint64] */;
  %243 = cast(meta[relay.Constant][10] /* ty=int8 */, dtype="uint64") /* ty=uint64 */;
  %244 = logical_xor(%242, %243) /* ty=Tensor[(10, 45), uint64] */;
  %245 = cast(%244, dtype="float64") /* ty=Tensor[(10, 45), float64] */;
  %246 = sqrt(%245) /* ty=Tensor[(10, 45), float64] */;
  %247 = cast(%var_462, dtype="bool") /* ty=Tensor[(10, 45), bool] */;
  %248 = shape_of(%246, dtype="int32") /* ty=Tensor[(2), int32] */;
  %249 = cast(%246, dtype="bool") /* ty=Tensor[(10, 45), bool] */;
  %250 = dyn.reshape(%247, %248, newshape=[]) /* ty=Tensor[(?, ?), bool] */;
  %251 = %234.2;
  %252 = %241.5;
  %253 = @func_370() /* ty=Tensor[(13, 2, 16), bool] */;
  %254 = not_equal(%249, %250) /* ty=Tensor[(10, 45), bool] */;
  (%229, %251, %252, %253, %254)
}

def @func_2513() -> (Tensor[(13, 2, 16), float64],) {
  %257 = fn () -> (Tensor[(13, 2, 16), float64],) {
    %255 = @func_1960() /* ty=(Tensor[(13, 2, 16), float64],) */;
    %256 = %255.0;
    (%256,)
  };
  %257() /* ty=(Tensor[(13, 2, 16), float64],) */
}

def @func_4611(%var_4609: Tensor[(240), bool]) -> (Tensor[(13, 2, 16), float64], Tensor[(240), bool], Tensor[(9, 10, 6), float64]) {
  @func_4608(%var_4609) /* ty=(Tensor[(13, 2, 16), float64], Tensor[(240), bool], Tensor[(9, 10, 6), float64]) */
}

def @func_5673() -> (Tensor[(13, 2, 16), bool], Tensor[(3, 8, 10), float32]) {
  %265 = fn () -> (Tensor[(13, 2, 16), bool], Tensor[(3, 8, 10), float32]) {
    %258 = @func_5150() /* ty=(Tensor[(3, 8, 10), bool],) */;
    %259 = %258.0;
    %260 = cast(%259, dtype="float64") /* ty=Tensor[(3, 8, 10), float64] */;
    %261 = atan(%260) /* ty=Tensor[(3, 8, 10), float64] */;
    %262 = cast(%261, dtype="float32") /* ty=Tensor[(3, 8, 10), float32] */;
    %263 = @func_3670() /* ty=Tensor[(13, 2, 16), bool] */;
    %264 = exp(%262) /* ty=Tensor[(3, 8, 10), float32] */;
    (%263, %264)
  };
  %265() /* ty=(Tensor[(13, 2, 16), bool], Tensor[(3, 8, 10), float32]) */
}

def @func_5121() -> Tensor[(9, 10, 6), int16] {
  %266 = @func_2137() /* ty=(Tensor[(9, 10, 6), int16],) */;
  %266.0
}

def @func_5391() -> (Tensor[(10, 45), bool],) {
  %267 = @func_575() /* ty=(Tensor[(10, 45), bool], Tensor[(10, 45), float64], Tensor[(5, 15, 6), int8], int8, Tensor[(540), float64], Tensor[(13, 2, 16), float64]) */;
  %268 = %267.0;
  (%268,)
}

def @func_7856() -> (Tensor[(10, 45), bool],) {
  %269 = @func_5391() /* ty=(Tensor[(10, 45), bool],) */;
  %270 = %269.0;
  (%270,)
}

def @func_6058(%var_6057: Tensor[(308), float64]) -> (Tensor[(13, 2, 16), float64], Tensor[(11, 14, 2), float64], Tensor[(308), float64]) {
  %277 = fn (%var_6050: Tensor[(308), float64]) -> (Tensor[(13, 2, 16), float64], Tensor[(11, 14, 2), float64], Tensor[(308), float64]) {
    %271 = @func_2512() /* ty=(Tensor[(13, 2, 16), float64],) */;
    %272 = cast(%var_6050, dtype="float64") /* ty=Tensor[(308), float64] */;
    %273 = reshape(%272, newshape=[11, 14, 2]) /* ty=Tensor[(11, 14, 2), float64] */;
    %274 = @func_4426(%273) /* ty=(Tensor[(11, 14, 2), float64],) */;
    %275 = %271.0;
    %276 = %274.0;
    (%275, %276, %var_6050)
  };
  %277(%var_6057) /* ty=(Tensor[(13, 2, 16), float64], Tensor[(11, 14, 2), float64], Tensor[(308), float64]) */
}

def @func_7032() -> (Tensor[(9, 10, 6), float64],) {
  @func_7030() /* ty=(Tensor[(9, 10, 6), float64],) */
}

def @func_4128() -> (Tensor[(13, 2, 16), bool],) {
  @func_4126() /* ty=(Tensor[(13, 2, 16), bool],) */
}

def @func_5092(%var_5090: Tensor[(1, 13, 16), int64], %var_5091: Tensor[(9, 13, 16), int64]) -> (Tensor[(9, 13, 16), int64], Tensor[(13, 2, 16), bool]) {
  @func_5088(%var_5090, %var_5091) /* ty=(Tensor[(9, 13, 16), int64], Tensor[(13, 2, 16), bool]) */
}

def @func_5341() -> Tensor[(9, 10, 6), int16] {
  %278 = @func_3025() /* ty=(Tensor[(9, 10, 6), int16],) */;
  %278.0
}

def @func_2350() -> (Tensor[(13, 2, 16), float64], Tensor[(12, 13, 2), float64]) {
  %283 = fn () -> (Tensor[(13, 2, 16), float64], Tensor[(12, 13, 2), float64]) {
    %279 = @func_1960() /* ty=(Tensor[(13, 2, 16), float64],) */;
    %280 = @func_1726() /* ty=(Tensor[(12, 13, 2), float64],) */;
    %281 = %279.0;
    %282 = %280.0;
    (%281, %282)
  };
  %283() /* ty=(Tensor[(13, 2, 16), float64], Tensor[(12, 13, 2), float64]) */
}

def @func_4935() -> Tensor[(560), int32] {
  %285 = fn () -> Tensor[(560), int32] {
    %284 = @func_4221() /* ty=(Tensor[(13, 2, 16), bool], Tensor[(540), float64], Tensor[(540), float64], Tensor[(1, 312), float64], Tensor[(13, 2, 16), float64], Tensor[(5, 15, 6), float32], Tensor[(5, 7, 16), int32], Tensor[(560), int32]) */;
    %284.7
  };
  %285() /* ty=Tensor[(560), int32] */
}

def @func_5123() -> Tensor[(9, 10, 6), int16] {
  @func_5121() /* ty=Tensor[(9, 10, 6), int16] */
}

def @func_6315() -> (Tensor[(6, 5, 10), uint32], Tensor[(13, 2, 16), bool]) {
  %286 = @func_5571() /* ty=(Tensor[(9, 10, 6), int16], Tensor[(12, 13, 2), float64], Tensor[(240), bool], Tensor[(6, 5, 10), uint32], Tensor[(5, 60), uint32], Tensor[(450), int8]) */;
  %287 = %286.3;
  %288 = @func_2738() /* ty=Tensor[(13, 2, 16), bool] */;
  (%287, %288)
}

def @func_4138() -> (Tensor[(5, 15, 6), int8],) {
  @func_4136() /* ty=(Tensor[(5, 15, 6), int8],) */
}

def @func_4918() -> Tensor[(9, 10, 6), int16] {
  @func_4916() /* ty=Tensor[(9, 10, 6), int16] */
}

def @func_1995(%var_1994: Tensor[(450), int8]) -> (Tensor[(13, 2, 16), float64], Tensor[(54, 10), float64], Tensor[(450), int8]) {
  %295 = fn (%var_1991: Tensor[(450), int8]) -> (Tensor[(13, 2, 16), float64], Tensor[(54, 10), float64], Tensor[(450), int8]) {
    %289 = @func_1588() /* ty=(Tensor[(13, 2, 16), float64],) */;
    %290 = cast(%var_1991, dtype="int8") /* ty=Tensor[(450), int8] */;
    %291 = reshape(%290, newshape=[5, 15, 6]) /* ty=Tensor[(5, 15, 6), int8] */;
    %292 = @func_855(%291) /* ty=(Tensor[(13, 2, 16), bool], Tensor[(54, 10), float64], Tensor[(5, 15, 6), float64]) */;
    %293 = %289.0;
    %294 = %292.1;
    (%293, %294, %var_1991)
  };
  %295(%var_1994) /* ty=(Tensor[(13, 2, 16), float64], Tensor[(54, 10), float64], Tensor[(450), int8]) */
}

def @func_3266() -> (Tensor[(12, 13, 2), float64], Tensor[(9, 10, 6), float64], Tensor[(450), int8]) {
  @func_3264() /* ty=(Tensor[(12, 13, 2), float64], Tensor[(9, 10, 6), float64], Tensor[(450), int8]) */
}

def @func_1949(%var_1908: Tensor[(6, 5, 10), uint32], %var_1909: Tensor[(6, 5, 10), uint32], %var_1938: Tensor[(450), int8]) -> (Tensor[(6, 5, 10), uint32], Tensor[(6, 5, 10), bool], Tensor[(9, 10, 6), float64], Tensor[(540), float64], Tensor[(5, 7, 16), int32], Tensor[(560), int32], Tensor[(13, 2, 16), bool], Tensor[(450), int8], Tensor[(12, 13, 2), float64], Tensor[(312), float64]) {
  %296 = cast(%var_1909, dtype="uint32") /* ty=Tensor[(6, 5, 10), uint32] */;
  %297 = shape_of(%var_1908, dtype="int32") /* ty=Tensor[(3), int32] */;
  %298 = cast(%var_1908, dtype="uint32") /* ty=Tensor[(6, 5, 10), uint32] */;
  %299 = dyn.reshape(%296, %297, newshape=[]) /* ty=Tensor[(?, ?, ?), uint32] */;
  %300 = cast(meta[relay.Constant][11] /* ty=Tensor[(6, 5, 10), uint32] */, dtype="bool") /* ty=Tensor[(6, 5, 10), bool] */;
  %301 = shape_of(%var_1909, dtype="int32") /* ty=Tensor[(3), int32] */;
  %302 = cast(%var_1909, dtype="bool") /* ty=Tensor[(6, 5, 10), bool] */;
  %303 = dyn.reshape(%300, %301, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %304 = cast(meta[relay.Constant][12] /* ty=Tensor[(540), float64] */, dtype="float64") /* ty=Tensor[(540), float64] */;
  %305 = reshape(%304, newshape=[9, 10, 6]) /* ty=Tensor[(9, 10, 6), float64] */;
  %306 = @func_158(%305) /* ty=(Tensor[(9, 10, 6), float64], Tensor[(9, 10, 6), float64]) */;
  %307 = cast(meta[relay.Constant][13] /* ty=Tensor[(560), int32] */, dtype="int32") /* ty=Tensor[(560), int32] */;
  %308 = reshape(%307, newshape=[5, 7, 16]) /* ty=Tensor[(5, 7, 16), int32] */;
  %309 = @func_649(%308) /* ty=(Tensor[(5, 7, 16), int32],) */;
  %310 = cast(%var_1938, dtype="int8") /* ty=Tensor[(450), int8] */;
  %311 = reshape(%310, newshape=[5, 90]) /* ty=Tensor[(5, 90), int8] */;
  %312 = @func_1636(%311) /* ty=(Tensor[(9, 10, 6), float64], Tensor[(13, 2, 16), bool], Tensor[(5, 90), int8], Tensor[(9, 10, 6), int16]) */;
  %313 = cast(meta[relay.Constant][14] /* ty=Tensor[(312), float64] */, dtype="float64") /* ty=Tensor[(312), float64] */;
  %314 = reshape(%313, newshape=[12, 13, 2]) /* ty=Tensor[(12, 13, 2), float64] */;
  %315 = @func_898(%314) /* ty=(Tensor[(12, 13, 2), float64],) */;
  %316 = logical_xor(%298, %299) /* ty=Tensor[(6, 5, 10), uint32] */;
  %317 = equal(%302, %303) /* ty=Tensor[(6, 5, 10), bool] */;
  %318 = %306.1;
  %319 = %309.0;
  %320 = %312.1;
  %321 = %315.0;
  (%316, %317, %318, meta[relay.Constant][12] /* ty=Tensor[(540), float64] */, %319, meta[relay.Constant][13] /* ty=Tensor[(560), int32] */, %320, %var_1938, %321, meta[relay.Constant][14] /* ty=Tensor[(312), float64] */)
}

def @func_4089() -> (Tensor[(13, 2, 16), float64], Tensor[(9, 10, 6), int16]) {
  @func_4087() /* ty=(Tensor[(13, 2, 16), float64], Tensor[(9, 10, 6), int16]) */
}

def @func_7858() -> (Tensor[(10, 45), bool],) {
  @func_7856() /* ty=(Tensor[(10, 45), bool],) */
}

def @func_2689() -> (Tensor[(5, 15, 6), int8],) {
  %322 = @func_575() /* ty=(Tensor[(10, 45), bool], Tensor[(10, 45), float64], Tensor[(5, 15, 6), int8], int8, Tensor[(540), float64], Tensor[(13, 2, 16), float64]) */;
  %323 = %322.2;
  (%323,)
}

def @func_6797() -> (Tensor[(13, 2, 16), bool], Tensor[(9, 10, 6), float64]) {
  %324 = @func_5972() /* ty=(Tensor[(9, 10, 6), int16], Tensor[(5, 15, 6), int8], Tensor[(13, 2, 16), bool]) */;
  %325 = @func_5794() /* ty=(Tensor[(13, 2, 16), float64], Tensor[(12, 13, 2), float64], Tensor[(9, 10, 6), int16], Tensor[(9, 10, 6), float64], Tensor[(13, 2, 16), float64]) */;
  %326 = %325.2;
  %327 = cast(%326, dtype="float64") /* ty=Tensor[(9, 10, 6), float64] */;
  %328 = %324.2;
  %329 = sigmoid(%327) /* ty=Tensor[(9, 10, 6), float64] */;
  (%328, %329)
}

def @func_987(%var_985: Tensor[(13, 2, 16), float64], %var_986: Tensor[(13, 2, 16), float64]) -> (Tensor[(13, 2, 16), float64], Tensor[(13, 2, 16), bool]) {
  %345 = fn (%var_938: Tensor[(13, 2, 16), float64], %var_968: Tensor[(13, 2, 16), float64]) -> (Tensor[(13, 2, 16), float64], Tensor[(13, 2, 16), bool]) {
    %330 = @func_370() /* ty=Tensor[(13, 2, 16), bool] */;
    %331 = cast(%330, dtype="float64") /* ty=Tensor[(13, 2, 16), float64] */;
    %332 = rsqrt(%331) /* ty=Tensor[(13, 2, 16), float64] */;
    %333 = cast(%332, dtype="float64") /* ty=Tensor[(13, 2, 16), float64] */;
    %334 = cast(%var_938, dtype="float64") /* ty=Tensor[(13, 2, 16), float64] */;
    %335 = shape_of(%332, dtype="int32") /* ty=Tensor[(3), int32] */;
    %336 = cast(%332, dtype="float64") /* ty=Tensor[(13, 2, 16), float64] */;
    %337 = dyn.reshape(%334, %335, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
    %338 = mod(%336, %337) /* ty=Tensor[(13, 2, 16), float64] */;
    %339 = cast(%var_968, dtype="bool") /* ty=Tensor[(13, 2, 16), bool] */;
    %340 = shape_of(%338, dtype="int32") /* ty=Tensor[(3), int32] */;
    %341 = cast(%338, dtype="bool") /* ty=Tensor[(13, 2, 16), bool] */;
    %342 = dyn.reshape(%339, %340, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    %343 = asinh(%333) /* ty=Tensor[(13, 2, 16), float64] */;
    %344 = not_equal(%341, %342) /* ty=Tensor[(13, 2, 16), bool] */;
    (%343, %344)
  };
  %345(%var_985, %var_986) /* ty=(Tensor[(13, 2, 16), float64], Tensor[(13, 2, 16), bool]) */
}

def @func_4366() -> (Tensor[(12, 13, 2), float64], Tensor[(13, 2, 16), float32], Tensor[(9, 10, 6), int16], Tensor[(13, 2, 16), float64]) {
  @func_4364() /* ty=(Tensor[(12, 13, 2), float64], Tensor[(13, 2, 16), float32], Tensor[(9, 10, 6), int16], Tensor[(13, 2, 16), float64]) */
}

def @func_7050() -> (Tensor[(560), float64], Tensor[(4, 7, 13), float32], Tensor[(182, 2), float64]) {
  %346 = @func_6729() /* ty=(Tensor[(5, 15, 6), int8], Tensor[(560), int32], Tensor[(13, 2, 16), bool], Tensor[(560), float64]) */;
  %347 = cast(meta[relay.Constant][15] /* ty=Tensor[(182, 2), float64] */, dtype="float64") /* ty=Tensor[(182, 2), float64] */;
  %348 = reshape(%347, newshape=[4, 7, 13]) /* ty=Tensor[(4, 7, 13), float64] */;
  %349 = %346.3;
  %350 = @func_6954(%348) /* ty=Tensor[(4, 7, 13), float32] */;
  (%349, %350, meta[relay.Constant][15] /* ty=Tensor[(182, 2), float64] */)
}

def @func_3071() -> Tensor[(12, 13, 2), float64] {
  %352 = fn () -> Tensor[(12, 13, 2), float64] {
    %351 = @func_1100() /* ty=(Tensor[(12, 13, 2), float64], Tensor[(9, 10, 6), float64]) */;
    %351.0
  };
  %352() /* ty=Tensor[(12, 13, 2), float64] */
}

def @func_1962() -> (Tensor[(13, 2, 16), float64],) {
  @func_1960() /* ty=(Tensor[(13, 2, 16), float64],) */
}

def @func_3042(%var_3040: Tensor[(8, 14, 1), uint32], %var_3041: Tensor[(8, 14, 15), uint32]) -> (Tensor[(8, 14, 15), uint32], Tensor[(8, 14, 1), float32]) {
  %358 = fn (%var_3027: Tensor[(8, 14, 1), uint32], %var_3028: Tensor[(8, 14, 15), uint32]) -> (Tensor[(8, 14, 15), uint32], Tensor[(8, 14, 1), float32]) {
    %353 = cast(%var_3027, dtype="uint32") /* ty=Tensor[(8, 14, 1), uint32] */;
    %354 = cast(%var_3028, dtype="uint32") /* ty=Tensor[(8, 14, 15), uint32] */;
    %355 = cast(%var_3027, dtype="float32") /* ty=Tensor[(8, 14, 1), float32] */;
    %356 = subtract(%353, %354) /* ty=Tensor[(8, 14, 15), uint32] */;
    %357 = sigmoid(%355) /* ty=Tensor[(8, 14, 1), float32] */;
    (%356, %357)
  };
  %358(%var_3040, %var_3041) /* ty=(Tensor[(8, 14, 15), uint32], Tensor[(8, 14, 1), float32]) */
}

def @func_7915() -> (Tensor[(13, 2, 16), float64], Tensor[(13, 2, 16), bool], Tensor[(13, 2, 16), float64]) {
  @func_7913() /* ty=(Tensor[(13, 2, 16), float64], Tensor[(13, 2, 16), bool], Tensor[(13, 2, 16), float64]) */
}

def @func_4688(%var_4686: Tensor[(12, 13, 2), float64]) -> (Tensor[(12, 13, 2), float64],) {
  @func_4685(%var_4686) /* ty=(Tensor[(12, 13, 2), float64],) */
}

def @func_4973() -> (Tensor[(13, 2, 16), bool], Tensor[(9, 10, 6), int16]) {
  @func_4971() /* ty=(Tensor[(13, 2, 16), bool], Tensor[(9, 10, 6), int16]) */
}

def @func_3845() -> (Tensor[(12, 13, 2), float64], Tensor[(9, 10, 6), float64], Tensor[(450), int8]) {
  %365 = fn () -> (Tensor[(12, 13, 2), float64], Tensor[(9, 10, 6), float64], Tensor[(450), int8]) {
    %359 = @func_2349() /* ty=(Tensor[(13, 2, 16), float64], Tensor[(12, 13, 2), float64]) */;
    %360 = cast(meta[relay.Constant][16] /* ty=Tensor[(450), int8] */, dtype="int8") /* ty=Tensor[(450), int8] */;
    %361 = reshape(%360, newshape=[5, 90]) /* ty=Tensor[(5, 90), int8] */;
    %362 = @func_1636(%361) /* ty=(Tensor[(9, 10, 6), float64], Tensor[(13, 2, 16), bool], Tensor[(5, 90), int8], Tensor[(9, 10, 6), int16]) */;
    %363 = %359.1;
    %364 = %362.0;
    (%363, %364, meta[relay.Constant][16] /* ty=Tensor[(450), int8] */)
  };
  %365() /* ty=(Tensor[(12, 13, 2), float64], Tensor[(9, 10, 6), float64], Tensor[(450), int8]) */
}

def @func_3161(%var_3159: Tensor[(560), int32], %var_3160: Tensor[(13, 15), float32]) -> (Tensor[(13, 2, 16), bool], Tensor[(13, 2, 16), float64], Tensor[(13, 2, 16), bool], Tensor[(50, 9), int8], int8, Tensor[(60, 24), float64], Tensor[(5, 7, 16), int32], Tensor[(560), int32], Tensor[(13, 3, 5), float32], Tensor[(13, 15), float32]) {
  %387 = fn (%var_3124: Tensor[(560), int32], %var_3135: Tensor[(13, 15), float32]) -> (Tensor[(13, 2, 16), bool], Tensor[(13, 2, 16), float64], Tensor[(13, 2, 16), bool], Tensor[(50, 9), int8], int8, Tensor[(60, 24), float64], Tensor[(5, 7, 16), int32], Tensor[(560), int32], Tensor[(13, 3, 5), float32], Tensor[(13, 15), float32]) {
    %366 = @func_1960() /* ty=(Tensor[(13, 2, 16), float64],) */;
    %367 = cast(meta[relay.Constant][17] /* ty=Tensor[(50, 9), int8] */, dtype="int8") /* ty=Tensor[(50, 9), int8] */;
    %368 = cast(meta[relay.Constant][17] /* ty=Tensor[(50, 9), int8] */, dtype="float64") /* ty=Tensor[(50, 9), float64] */;
    %369 = reshape(%367, newshape=[10, 45]) /* ty=Tensor[(10, 45), int8] */;
    %370 = reshape(%368, newshape=[10, 45]) /* ty=Tensor[(10, 45), float64] */;
    %371 = @func_474(%369, %370) /* ty=(Tensor[(9, 10, 6), float64], Tensor[(540), float64], Tensor[(9, 10, 6), float64], Tensor[(13, 2, 16), bool], Tensor[(10, 45), bool]) */;
    %372 = cast(meta[relay.Constant][18] /* ty=Tensor[(60, 24), float64] */, dtype="float64") /* ty=Tensor[(60, 24), float64] */;
    %373 = reshape(%372, newshape=[16, 10, 9]) /* ty=Tensor[(16, 10, 9), float64] */;
    %374 = @func_2253(%373) /* ty=(Tensor[(540), float64], Tensor[(16, 10, 9), float32], int8, Tensor[(450, 1), int8]) */;
    %375 = cast(%var_3124, dtype="int32") /* ty=Tensor[(560), int32] */;
    %376 = reshape(%375, newshape=[5, 7, 16]) /* ty=Tensor[(5, 7, 16), int32] */;
    %377 = @func_649(%376) /* ty=(Tensor[(5, 7, 16), int32],) */;
    %378 = cast(%var_3135, dtype="float32") /* ty=Tensor[(13, 15), float32] */;
    %379 = reshape(%378, newshape=[13, 3, 5]) /* ty=Tensor[(13, 3, 5), float32] */;
    %380 = @func_2958(%379) /* ty=(Tensor[(13, 3, 5), float32],) */;
    %381 = @func_370() /* ty=Tensor[(13, 2, 16), bool] */;
    %382 = %366.0;
    %383 = %371.3;
    %384 = %374.2;
    %385 = %377.0;
    %386 = %380.0;
    (%381, %382, %383, meta[relay.Constant][17] /* ty=Tensor[(50, 9), int8] */, %384, meta[relay.Constant][18] /* ty=Tensor[(60, 24), float64] */, %385, %var_3124, %386, %var_3135)
  };
  %387(%var_3159, %var_3160) /* ty=(Tensor[(13, 2, 16), bool], Tensor[(13, 2, 16), float64], Tensor[(13, 2, 16), bool], Tensor[(50, 9), int8], int8, Tensor[(60, 24), float64], Tensor[(5, 7, 16), int32], Tensor[(560), int32], Tensor[(13, 3, 5), float32], Tensor[(13, 15), float32]) */
}

def @func_901(%var_899: Tensor[(12, 13, 2), float64]) -> (Tensor[(12, 13, 2), float64],) {
  @func_898(%var_899) /* ty=(Tensor[(12, 13, 2), float64],) */
}

def @func_6189() -> (Tensor[(9, 10, 6), int16], Tensor[(13, 2, 16), float64]) {
  @func_6187() /* ty=(Tensor[(9, 10, 6), int16], Tensor[(13, 2, 16), float64]) */
}

def @func_414(%var_411: int8, %var_412: Tensor[(5, 15, 6), int8], %var_413: Tensor[(540), float64]) -> (Tensor[(5, 15, 6), int8], Tensor[(9, 10, 6), float64], Tensor[(540), float64], Tensor[(9, 10, 6), float64], Tensor[(13, 2, 16), bool], Tensor[(9, 10, 6), float64]) {
  %405 = fn (%var_377: int8, %var_378: Tensor[(5, 15, 6), int8], %var_383: Tensor[(540), float64]) -> (Tensor[(5, 15, 6), int8], Tensor[(9, 10, 6), float64], Tensor[(540), float64], Tensor[(9, 10, 6), float64], Tensor[(13, 2, 16), bool], Tensor[(9, 10, 6), float64]) {
    %388 = cast(%var_377, dtype="int8") /* ty=int8 */;
    %389 = cast(%var_378, dtype="int8") /* ty=Tensor[(5, 15, 6), int8] */;
    %390 = cast(%var_383, dtype="float64") /* ty=Tensor[(540), float64] */;
    %391 = reshape(%390, newshape=[9, 10, 6]) /* ty=Tensor[(9, 10, 6), float64] */;
    %392 = @func_158(%391) /* ty=(Tensor[(9, 10, 6), float64], Tensor[(9, 10, 6), float64]) */;
    %393 = cast(%var_383, dtype="float64") /* ty=Tensor[(540), float64] */;
    %394 = reshape(%393, newshape=[9, 10, 6]) /* ty=Tensor[(9, 10, 6), float64] */;
    %395 = @func_158(%394) /* ty=(Tensor[(9, 10, 6), float64], Tensor[(9, 10, 6), float64]) */;
    %396 = @func_266() /* ty=(Tensor[(13, 2, 16), bool], Tensor[(9, 10, 6), float64], Tensor[(540), float64]) */;
    %397 = %392.1;
    %398 = cast(%397, dtype="float64") /* ty=Tensor[(9, 10, 6), float64] */;
    %399 = reshape(%398, newshape=[9, 10, 6]) /* ty=Tensor[(9, 10, 6), float64] */;
    %400 = @func_158(%399) /* ty=(Tensor[(9, 10, 6), float64], Tensor[(9, 10, 6), float64]) */;
    %401 = add(%388, %389) /* ty=Tensor[(5, 15, 6), int8] */;
    %402 = %395.1;
    %403 = %396.0;
    %404 = %400.1;
    (%401, %397, %var_383, %402, %403, %404)
  };
  %405(%var_411, %var_412, %var_413) /* ty=(Tensor[(5, 15, 6), int8], Tensor[(9, 10, 6), float64], Tensor[(540), float64], Tensor[(9, 10, 6), float64], Tensor[(13, 2, 16), bool], Tensor[(9, 10, 6), float64]) */
}

def @func_576() -> (Tensor[(10, 45), bool], Tensor[(10, 45), float64], Tensor[(5, 15, 6), int8], int8, Tensor[(540), float64], Tensor[(13, 2, 16), float64]) {
  %425 = fn () -> (Tensor[(10, 45), bool], Tensor[(10, 45), float64], Tensor[(5, 15, 6), int8], int8, Tensor[(540), float64], Tensor[(13, 2, 16), float64]) {
    %406 = cast(meta[relay.Constant][19] /* ty=Tensor[(10, 45), int8] */, dtype="int8") /* ty=Tensor[(10, 45), int8] */;
    %407 = cast(meta[relay.Constant][19] /* ty=Tensor[(10, 45), int8] */, dtype="float64") /* ty=Tensor[(10, 45), float64] */;
    %408 = reshape(%406, newshape=[10, 45]) /* ty=Tensor[(10, 45), int8] */;
    %409 = reshape(%407, newshape=[10, 45]) /* ty=Tensor[(10, 45), float64] */;
    %410 = @func_474(%408, %409) /* ty=(Tensor[(9, 10, 6), float64], Tensor[(540), float64], Tensor[(9, 10, 6), float64], Tensor[(13, 2, 16), bool], Tensor[(10, 45), bool]) */;
    %411 = cast(meta[relay.Constant][19] /* ty=Tensor[(10, 45), int8] */, dtype="float64") /* ty=Tensor[(10, 45), float64] */;
    %412 = cast(meta[relay.Constant][20] /* ty=int8 */, dtype="int8") /* ty=int8 */;
    %413 = cast(meta[relay.Constant][19] /* ty=Tensor[(10, 45), int8] */, dtype="int8") /* ty=Tensor[(10, 45), int8] */;
    %414 = cast(meta[relay.Constant][21] /* ty=Tensor[(540), float64] */, dtype="float64") /* ty=Tensor[(540), float64] */;
    %415 = reshape(%412, newshape=[]) /* ty=int8 */;
    %416 = reshape(%413, newshape=[5, 15, 6]) /* ty=Tensor[(5, 15, 6), int8] */;
    %417 = reshape(%414, newshape=[540]) /* ty=Tensor[(540), float64] */;
    %418 = @func_410(%415, %416, %417) /* ty=(Tensor[(5, 15, 6), int8], Tensor[(9, 10, 6), float64], Tensor[(540), float64], Tensor[(9, 10, 6), float64], Tensor[(13, 2, 16), bool], Tensor[(9, 10, 6), float64]) */;
    %419 = @func_370() /* ty=Tensor[(13, 2, 16), bool] */;
    %420 = cast(%419, dtype="float64") /* ty=Tensor[(13, 2, 16), float64] */;
    %421 = %410.4;
    %422 = atan(%411) /* ty=Tensor[(10, 45), float64] */;
    %423 = %418.0;
    %424 = cos(%420) /* ty=Tensor[(13, 2, 16), float64] */;
    (%421, %422, %423, meta[relay.Constant][20] /* ty=int8 */, meta[relay.Constant][21] /* ty=Tensor[(540), float64] */, %424)
  };
  %425() /* ty=(Tensor[(10, 45), bool], Tensor[(10, 45), float64], Tensor[(5, 15, 6), int8], int8, Tensor[(540), float64], Tensor[(13, 2, 16), float64]) */
}

def @func_7097() -> Tensor[(12, 13, 2), float64] {
  %427 = fn () -> Tensor[(12, 13, 2), float64] {
    %426 = @func_5038() /* ty=(Tensor[(12, 13, 2), float64],) */;
    %426.0
  };
  %427() /* ty=Tensor[(12, 13, 2), float64] */
}

def @func_1711(%var_1683: Tensor[(9, 10, 6), float64]) -> (Tensor[(9, 10, 6), bool], Tensor[(9, 10, 6), bool]) {
  %428 = @func_1100() /* ty=(Tensor[(12, 13, 2), float64], Tensor[(9, 10, 6), float64]) */;
  %429 = %428.1;
  %430 = cast(%var_1683, dtype="bool") /* ty=Tensor[(9, 10, 6), bool] */;
  %431 = shape_of(%429, dtype="int32") /* ty=Tensor[(3), int32] */;
  %432 = cast(%429, dtype="bool") /* ty=Tensor[(9, 10, 6), bool] */;
  %433 = dyn.reshape(%430, %431, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %434 = cast(meta[relay.Constant][22] /* ty=Tensor[(9, 10, 6), float64] */, dtype="bool") /* ty=Tensor[(9, 10, 6), bool] */;
  %435 = shape_of(%429, dtype="int32") /* ty=Tensor[(3), int32] */;
  %436 = cast(%429, dtype="bool") /* ty=Tensor[(9, 10, 6), bool] */;
  %437 = dyn.reshape(%434, %435, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %438 = equal(%436, %437) /* ty=Tensor[(9, 10, 6), bool] */;
  %439 = cast(%438, dtype="bool") /* ty=Tensor[(9, 10, 6), bool] */;
  %440 = shape_of(%var_1683, dtype="int32") /* ty=Tensor[(3), int32] */;
  %441 = cast(%var_1683, dtype="bool") /* ty=Tensor[(9, 10, 6), bool] */;
  %442 = dyn.reshape(%439, %440, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %443 = not_equal(%432, %433) /* ty=Tensor[(9, 10, 6), bool] */;
  %444 = less(%441, %442) /* ty=Tensor[(9, 10, 6), bool] */;
  (%443, %444)
}

def @func_1960() -> (Tensor[(13, 2, 16), float64],) {
  %445 = @func_1588() /* ty=(Tensor[(13, 2, 16), float64],) */;
  %446 = %445.0;
  (%446,)
}

def @func_5803() -> Tensor[(540), float64] {
  %447 = @func_4221() /* ty=(Tensor[(13, 2, 16), bool], Tensor[(540), float64], Tensor[(540), float64], Tensor[(1, 312), float64], Tensor[(13, 2, 16), float64], Tensor[(5, 15, 6), float32], Tensor[(5, 7, 16), int32], Tensor[(560), int32]) */;
  %447.2
}

def @func_1464(%var_1461: Tensor[(450), int8], %var_1462: Tensor[(416), float64], %var_1463: Tensor[(312), float64]) -> (Tensor[(9, 10, 6), float32], Tensor[(9, 10, 6), float64], Tensor[(9, 10, 6), float64], Tensor[(450), int8], Tensor[(9, 10, 6), int16], Tensor[(10, 45), bool], Tensor[(9, 10, 6), float64], Tensor[(9, 10, 6), int16], Tensor[(3, 8, 10), int8], Tensor[(13, 2, 16), bool], Tensor[(416), float64], Tensor[(54, 10), float64], Tensor[(9, 10, 6), float64], Tensor[(450), int8], Tensor[(12, 13, 2), float64], Tensor[(312), float64], Tensor[(10, 45), bool]) {
  @func_1459(%var_1461, %var_1462, %var_1463) /* ty=(Tensor[(9, 10, 6), float32], Tensor[(9, 10, 6), float64], Tensor[(9, 10, 6), float64], Tensor[(450), int8], Tensor[(9, 10, 6), int16], Tensor[(10, 45), bool], Tensor[(9, 10, 6), float64], Tensor[(9, 10, 6), int16], Tensor[(3, 8, 10), int8], Tensor[(13, 2, 16), bool], Tensor[(416), float64], Tensor[(54, 10), float64], Tensor[(9, 10, 6), float64], Tensor[(450), int8], Tensor[(12, 13, 2), float64], Tensor[(312), float64], Tensor[(10, 45), bool]) */
}

def @func_2811(%var_2809: Tensor[(1008), float64]) -> (Tensor[(9, 10, 6), int16], Tensor[(16, 7, 9), float64], Tensor[(1008), float64]) {
  %448 = cast(%var_2809, dtype="float64") /* ty=Tensor[(1008), float64] */;
  %449 = reshape(%448, newshape=[16, 7, 9]) /* ty=Tensor[(16, 7, 9), float64] */;
  %450 = @func_2610() /* ty=Tensor[(9, 10, 6), int16] */;
  %451 = @func_2563(%449) /* ty=Tensor[(16, 7, 9), float64] */;
  (%450, %451, %var_2809)
}

def @func_1550() -> (Tensor[(3, 8, 10), bool], Tensor[(13, 2, 16), float64]) {
  %452 = @func_1078() /* ty=(Tensor[(13, 2, 16), bool], Tensor[(450), int8], Tensor[(540), float64], Tensor[(450), int8], Tensor[(12, 13, 2), float64], Tensor[(1, 312), float64]) */;
  %453 = %452.0;
  %454 = cast(%453, dtype="float64") /* ty=Tensor[(13, 2, 16), float64] */;
  %455 = @func_1261() /* ty=Tensor[(3, 8, 10), bool] */;
  %456 = sin(%454) /* ty=Tensor[(13, 2, 16), float64] */;
  (%455, %456)
}

def @func_4403() -> (Tensor[(13, 2, 16), float32], Tensor[(9, 10, 6), int16]) {
  %457 = @func_4364() /* ty=(Tensor[(12, 13, 2), float64], Tensor[(13, 2, 16), float32], Tensor[(9, 10, 6), int16], Tensor[(13, 2, 16), float64]) */;
  %458 = @func_2035() /* ty=(Tensor[(9, 10, 6), int16],) */;
  %459 = %457.1;
  %460 = %458.0;
  (%459, %460)
}

def @func_160(%var_159: Tensor[(9, 10, 6), float64]) -> (Tensor[(9, 10, 6), float64], Tensor[(9, 10, 6), float64]) {
  %475 = fn (%var_154: Tensor[(9, 10, 6), float64]) -> (Tensor[(9, 10, 6), float64], Tensor[(9, 10, 6), float64]) {
    %461 = cast(meta[relay.Constant][23] /* ty=Tensor[(9, 10, 6), float64] */, dtype="float64") /* ty=Tensor[(9, 10, 6), float64] */;
    %462 = log(%461) /* ty=Tensor[(9, 10, 6), float64] */;
    %463 = cast(%462, dtype="float32") /* ty=Tensor[(9, 10, 6), float32] */;
    %464 = shape_of(meta[relay.Constant][23] /* ty=Tensor[(9, 10, 6), float64] */, dtype="int32") /* ty=Tensor[(3), int32] */;
    %465 = cast(meta[relay.Constant][23] /* ty=Tensor[(9, 10, 6), float64] */, dtype="float32") /* ty=Tensor[(9, 10, 6), float32] */;
    %466 = dyn.reshape(%463, %464, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
    %467 = mod(%465, %466) /* ty=Tensor[(9, 10, 6), float32] */;
    %468 = cast(%467, dtype="float64") /* ty=Tensor[(9, 10, 6), float64] */;
    %469 = cast(%var_154, dtype="float64") /* ty=Tensor[(9, 10, 6), float64] */;
    %470 = shape_of(%462, dtype="int32") /* ty=Tensor[(3), int32] */;
    %471 = cast(%462, dtype="float64") /* ty=Tensor[(9, 10, 6), float64] */;
    %472 = dyn.reshape(%469, %470, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
    %473 = exp(%468) /* ty=Tensor[(9, 10, 6), float64] */;
    %474 = maximum(%471, %472) /* ty=Tensor[(9, 10, 6), float64] */;
    (%473, %474)
  };
  %475(%var_159) /* ty=(Tensor[(9, 10, 6), float64], Tensor[(9, 10, 6), float64]) */
}

def @func_3745(%var_3691: Tensor[(3, 8, 10), bool], %var_3710: Tensor[(3, 8, 10), bool]) -> (Tensor[(9, 10, 6), int16], Tensor[(13, 2, 16), float64], Tensor[(16, 8, 5), bool], Tensor[(640), float64], Tensor[(3, 8, 10), float32], Tensor[(3, 8, 10), bool]) {
  %476 = @func_709() /* ty=(Tensor[(9, 10, 6), int16],) */;
  %477 = @func_1550() /* ty=(Tensor[(3, 8, 10), bool], Tensor[(13, 2, 16), float64]) */;
  %478 = %477.0;
  %479 = cast(%var_3691, dtype="int32") /* ty=Tensor[(3, 8, 10), int32] */;
  %480 = shape_of(%478, dtype="int32") /* ty=Tensor[(3), int32] */;
  %481 = cast(%478, dtype="int32") /* ty=Tensor[(3, 8, 10), int32] */;
  %482 = dyn.reshape(%479, %480, newshape=[]) /* ty=Tensor[(?, ?, ?), int32] */;
  %483 = minimum(%481, %482) /* ty=Tensor[(3, 8, 10), int32] */;
  %484 = cast(%483, dtype="bool") /* ty=Tensor[(3, 8, 10), bool] */;
  %485 = reshape(%484, newshape=[3, 8, 10]) /* ty=Tensor[(3, 8, 10), bool] */;
  %486 = @func_1873(%485) /* ty=(Tensor[(13, 2, 16), float64], Tensor[(3, 8, 10), float32]) */;
  %487 = cast(meta[relay.Constant][24] /* ty=Tensor[(640), float64] */, dtype="float64") /* ty=Tensor[(640), float64] */;
  %488 = cast(meta[relay.Constant][24] /* ty=Tensor[(640), float64] */, dtype="float64") /* ty=Tensor[(640), float64] */;
  %489 = reshape(%487, newshape=[16, 8, 5]) /* ty=Tensor[(16, 8, 5), float64] */;
  %490 = reshape(%488, newshape=[16, 8, 5]) /* ty=Tensor[(16, 8, 5), float64] */;
  %491 = @func_2871(%489, %490) /* ty=(Tensor[(16, 8, 5), bool],) */;
  %492 = cast(%var_3710, dtype="float32") /* ty=Tensor[(3, 8, 10), float32] */;
  %493 = shape_of(%478, dtype="int32") /* ty=Tensor[(3), int32] */;
  %494 = cast(%478, dtype="float32") /* ty=Tensor[(3, 8, 10), float32] */;
  %495 = dyn.reshape(%492, %493, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %496 = cast(%var_3691, dtype="float64") /* ty=Tensor[(3, 8, 10), float64] */;
  %497 = asin(%496) /* ty=Tensor[(3, 8, 10), float64] */;
  %498 = cast(%483, dtype="bool") /* ty=Tensor[(3, 8, 10), bool] */;
  %499 = shape_of(%497, dtype="int32") /* ty=Tensor[(3), int32] */;
  %500 = cast(%497, dtype="bool") /* ty=Tensor[(3, 8, 10), bool] */;
  %501 = dyn.reshape(%498, %499, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %502 = %476.0;
  %503 = %486.0;
  %504 = %491.0;
  %505 = floor_divide(%494, %495) /* ty=Tensor[(3, 8, 10), float32] */;
  %506 = not_equal(%500, %501) /* ty=Tensor[(3, 8, 10), bool] */;
  (%502, %503, %504, meta[relay.Constant][24] /* ty=Tensor[(640), float64] */, %505, %506)
}

def @func_7544(%var_7538: Tensor[(3, 8, 10), bool], %var_7539: int8, %var_7540: Tensor[(450), int8], %var_7541: Tensor[(540), float64], %var_7542: Tensor[(3, 8, 10), bool], %var_7543: Tensor[(3, 8, 10), bool]) -> (Tensor[(3, 8, 10), bool], Tensor[(9, 10, 6), float64], int8, Tensor[(450), int8], Tensor[(540), float64], Tensor[(3, 8, 10), bool], Tensor[(3, 8, 10), float32]) {
  %537 = fn (%var_7496: Tensor[(3, 8, 10), bool], %var_7518: int8, %var_7519: Tensor[(450), int8], %var_7520: Tensor[(540), float64], %var_7522: Tensor[(3, 8, 10), bool], %var_7528: Tensor[(3, 8, 10), bool]) -> (Tensor[(3, 8, 10), bool], Tensor[(9, 10, 6), float64], int8, Tensor[(450), int8], Tensor[(540), float64], Tensor[(3, 8, 10), bool], Tensor[(3, 8, 10), float32]) {
    %507 = @func_3551() /* ty=(Tensor[(12, 13, 2), float64], Tensor[(416), uint16], Tensor[(3, 8, 10), bool], Tensor[(9, 10, 6), int16]) */;
    %508 = %507.2;
    %509 = cast(%var_7496, dtype="uint8") /* ty=Tensor[(3, 8, 10), uint8] */;
    %510 = shape_of(%508, dtype="int32") /* ty=Tensor[(3), int32] */;
    %511 = cast(%508, dtype="uint8") /* ty=Tensor[(3, 8, 10), uint8] */;
    %512 = dyn.reshape(%509, %510, newshape=[]) /* ty=Tensor[(?, ?, ?), uint8] */;
    %513 = bitwise_or(%511, %512) /* ty=Tensor[(3, 8, 10), uint8] */;
    %514 = cast(%var_7496, dtype="bool") /* ty=Tensor[(3, 8, 10), bool] */;
    %515 = shape_of(%513, dtype="int32") /* ty=Tensor[(3), int32] */;
    %516 = cast(%513, dtype="bool") /* ty=Tensor[(3, 8, 10), bool] */;
    %517 = dyn.reshape(%514, %515, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    %518 = cast(%var_7518, dtype="int8") /* ty=int8 */;
    %519 = cast(%var_7519, dtype="int8") /* ty=Tensor[(450), int8] */;
    %520 = cast(%var_7520, dtype="float64") /* ty=Tensor[(540), float64] */;
    %521 = reshape(%518, newshape=[]) /* ty=int8 */;
    %522 = reshape(%519, newshape=[5, 15, 6]) /* ty=Tensor[(5, 15, 6), int8] */;
    %523 = reshape(%520, newshape=[540]) /* ty=Tensor[(540), float64] */;
    %524 = @func_410(%521, %522, %523) /* ty=(Tensor[(5, 15, 6), int8], Tensor[(9, 10, 6), float64], Tensor[(540), float64], Tensor[(9, 10, 6), float64], Tensor[(13, 2, 16), bool], Tensor[(9, 10, 6), float64]) */;
    %525 = cast(%var_7522, dtype="bool") /* ty=Tensor[(3, 8, 10), bool] */;
    %526 = shape_of(%508, dtype="int32") /* ty=Tensor[(3), int32] */;
    %527 = cast(%508, dtype="bool") /* ty=Tensor[(3, 8, 10), bool] */;
    %528 = dyn.reshape(%525, %526, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    %529 = cast(%var_7528, dtype="float32") /* ty=Tensor[(3, 8, 10), float32] */;
    %530 = shape_of(%var_7522, dtype="int32") /* ty=Tensor[(3), int32] */;
    %531 = cast(%var_7522, dtype="float32") /* ty=Tensor[(3, 8, 10), float32] */;
    %532 = dyn.reshape(%529, %530, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
    %533 = logical_or(%516, %517) /* ty=Tensor[(3, 8, 10), bool] */;
    %534 = %524.1;
    %535 = greater(%527, %528) /* ty=Tensor[(3, 8, 10), bool] */;
    %536 = floor_mod(%531, %532) /* ty=Tensor[(3, 8, 10), float32] */;
    (%533, %534, %var_7518, %var_7519, %var_7520, %535, %536)
  };
  %537(%var_7538, %var_7539, %var_7540, %var_7541, %var_7542, %var_7543) /* ty=(Tensor[(3, 8, 10), bool], Tensor[(9, 10, 6), float64], int8, Tensor[(450), int8], Tensor[(540), float64], Tensor[(3, 8, 10), bool], Tensor[(3, 8, 10), float32]) */
}

def @func_1552() -> (Tensor[(3, 8, 10), bool], Tensor[(13, 2, 16), float64]) {
  @func_1550() /* ty=(Tensor[(3, 8, 10), bool], Tensor[(13, 2, 16), float64]) */
}

def @func_4428(%var_4427: Tensor[(11, 14, 2), float64]) -> (Tensor[(11, 14, 2), float64],) {
  %540 = fn (%var_4417: Tensor[(11, 14, 2), float64]) -> (Tensor[(11, 14, 2), float64],) {
    %538 = cast(%var_4417, dtype="float64") /* ty=Tensor[(11, 14, 2), float64] */;
    %539 = log(%538) /* ty=Tensor[(11, 14, 2), float64] */;
    (%539,)
  };
  %540(%var_4427) /* ty=(Tensor[(11, 14, 2), float64],) */
}

def @func_1714(%var_1712: Tensor[(9, 10, 6), float64]) -> (Tensor[(9, 10, 6), bool], Tensor[(9, 10, 6), bool]) {
  @func_1711(%var_1712) /* ty=(Tensor[(9, 10, 6), bool], Tensor[(9, 10, 6), bool]) */
}

def @func_4685(%var_4682: Tensor[(12, 13, 2), float64]) -> (Tensor[(12, 13, 2), float64],) {
  %541 = cast(%var_4682, dtype="float64") /* ty=Tensor[(12, 13, 2), float64] */;
  %542 = sin(%541) /* ty=Tensor[(12, 13, 2), float64] */;
  (%542,)
}

def @func_4017(%var_4016: Tensor[(450), int8]) -> (Tensor[(540), float64], Tensor[(13, 2, 16), float64], Tensor[(16, 7, 9), float64], Tensor[(1, 1008), float64], Tensor[(450), int8], Tensor[(450), int8]) {
  %556 = fn (%var_4011: Tensor[(450), int8]) -> (Tensor[(540), float64], Tensor[(13, 2, 16), float64], Tensor[(16, 7, 9), float64], Tensor[(1, 1008), float64], Tensor[(450), int8], Tensor[(450), int8]) {
    %543 = @func_266() /* ty=(Tensor[(13, 2, 16), bool], Tensor[(9, 10, 6), float64], Tensor[(540), float64]) */;
    %544 = @func_2349() /* ty=(Tensor[(13, 2, 16), float64], Tensor[(12, 13, 2), float64]) */;
    %545 = cast(meta[relay.Constant][25] /* ty=Tensor[(1, 1008), float64] */, dtype="float64") /* ty=Tensor[(1, 1008), float64] */;
    %546 = reshape(%545, newshape=[16, 7, 9]) /* ty=Tensor[(16, 7, 9), float64] */;
    %547 = %543.2;
    %548 = cast(%547, dtype="float64") /* ty=Tensor[(540), float64] */;
    %549 = cast(%var_4011, dtype="int8") /* ty=Tensor[(450), int8] */;
    %550 = reshape(%548, newshape=[9, 10, 6]) /* ty=Tensor[(9, 10, 6), float64] */;
    %551 = reshape(%549, newshape=[450]) /* ty=Tensor[(450), int8] */;
    %552 = @func_629(%550, %551) /* ty=(Tensor[(9, 10, 6), float32], Tensor[(9, 10, 6), int32], Tensor[(13, 2, 16), bool], Tensor[(450), int8], Tensor[(13, 2, 16), bool], int8) */;
    %553 = %544.0;
    %554 = @func_2563(%546) /* ty=Tensor[(16, 7, 9), float64] */;
    %555 = %552.3;
    (%547, %553, %554, meta[relay.Constant][25] /* ty=Tensor[(1, 1008), float64] */, %555, %var_4011)
  };
  %556(%var_4016) /* ty=(Tensor[(540), float64], Tensor[(13, 2, 16), float64], Tensor[(16, 7, 9), float64], Tensor[(1, 1008), float64], Tensor[(450), int8], Tensor[(450), int8]) */
}

def @func_2565(%var_2564: Tensor[(16, 7, 9), float64]) -> Tensor[(16, 7, 9), float64] {
  %558 = fn (%var_2550: Tensor[(16, 7, 9), float64]) -> Tensor[(16, 7, 9), float64] {
    %557 = cast(%var_2550, dtype="float64") /* ty=Tensor[(16, 7, 9), float64] */;
    asin(%557) /* ty=Tensor[(16, 7, 9), float64] */
  };
  %558(%var_2564) /* ty=Tensor[(16, 7, 9), float64] */
}

def @func_1636(%var_1621: Tensor[(5, 90), int8]) -> (Tensor[(9, 10, 6), float64], Tensor[(13, 2, 16), bool], Tensor[(5, 90), int8], Tensor[(9, 10, 6), int16]) {
  %559 = @func_266() /* ty=(Tensor[(13, 2, 16), bool], Tensor[(9, 10, 6), float64], Tensor[(540), float64]) */;
  %560 = cast(%var_1621, dtype="int8") /* ty=Tensor[(5, 90), int8] */;
  %561 = reshape(%560, newshape=[5, 15, 6]) /* ty=Tensor[(5, 15, 6), int8] */;
  %562 = @func_855(%561) /* ty=(Tensor[(13, 2, 16), bool], Tensor[(54, 10), float64], Tensor[(5, 15, 6), float64]) */;
  %563 = @func_709() /* ty=(Tensor[(9, 10, 6), int16],) */;
  %564 = %559.1;
  %565 = %562.0;
  %566 = %563.0;
  (%564, %565, %var_1621, %566)
}

def @func_855(%var_835: Tensor[(5, 15, 6), int8]) -> (Tensor[(13, 2, 16), bool], Tensor[(54, 10), float64], Tensor[(5, 15, 6), float64]) {
  %567 = cast(meta[relay.Constant][26] /* ty=Tensor[(54, 10), float64] */, dtype="float64") /* ty=Tensor[(54, 10), float64] */;
  %568 = @func_575() /* ty=(Tensor[(10, 45), bool], Tensor[(10, 45), float64], Tensor[(5, 15, 6), int8], int8, Tensor[(540), float64], Tensor[(13, 2, 16), float64]) */;
  %569 = %568.2;
  %570 = cast(%569, dtype="int8") /* ty=Tensor[(5, 15, 6), int8] */;
  %571 = reshape(%567, newshape=[9, 10, 6]) /* ty=Tensor[(9, 10, 6), float64] */;
  %572 = reshape(%570, newshape=[450]) /* ty=Tensor[(450), int8] */;
  %573 = @func_629(%571, %572) /* ty=(Tensor[(9, 10, 6), float32], Tensor[(9, 10, 6), int32], Tensor[(13, 2, 16), bool], Tensor[(450), int8], Tensor[(13, 2, 16), bool], int8) */;
  %574 = cast(%var_835, dtype="uint64") /* ty=Tensor[(5, 15, 6), uint64] */;
  %575 = shape_of(%569, dtype="int32") /* ty=Tensor[(3), int32] */;
  %576 = cast(%569, dtype="uint64") /* ty=Tensor[(5, 15, 6), uint64] */;
  %577 = dyn.reshape(%574, %575, newshape=[]) /* ty=Tensor[(?, ?, ?), uint64] */;
  %578 = subtract(%576, %577) /* ty=Tensor[(5, 15, 6), uint64] */;
  %579 = cast(%578, dtype="float64") /* ty=Tensor[(5, 15, 6), float64] */;
  %580 = %573.4;
  %581 = sqrt(%579) /* ty=Tensor[(5, 15, 6), float64] */;
  (%580, meta[relay.Constant][26] /* ty=Tensor[(54, 10), float64] */, %581)
}

def @func_4222() -> (Tensor[(13, 2, 16), bool], Tensor[(540), float64], Tensor[(540), float64], Tensor[(1, 312), float64], Tensor[(13, 2, 16), float64], Tensor[(5, 15, 6), float32], Tensor[(5, 7, 16), int32], Tensor[(560), int32]) {
  %598 = fn () -> (Tensor[(13, 2, 16), bool], Tensor[(540), float64], Tensor[(540), float64], Tensor[(1, 312), float64], Tensor[(13, 2, 16), float64], Tensor[(5, 15, 6), float32], Tensor[(5, 7, 16), int32], Tensor[(560), int32]) {
    %582 = @func_3953() /* ty=(Tensor[(13, 2, 16), bool],) */;
    %583 = cast(meta[relay.Constant][27] /* ty=Tensor[(540), float64] */, dtype="float64") /* ty=Tensor[(540), float64] */;
    %584 = reshape(%583, newshape=[540]) /* ty=Tensor[(540), float64] */;
    %585 = @func_2118(%584) /* ty=(Tensor[(13, 2, 16), float64], Tensor[(3, 8, 10), bool], Tensor[(9, 10, 6), bool], Tensor[(540), float64]) */;
    %586 = @func_1078() /* ty=(Tensor[(13, 2, 16), bool], Tensor[(450), int8], Tensor[(540), float64], Tensor[(450), int8], Tensor[(12, 13, 2), float64], Tensor[(1, 312), float64]) */;
    %587 = @func_4087() /* ty=(Tensor[(13, 2, 16), float64], Tensor[(9, 10, 6), int16]) */;
    %588 = @func_2892() /* ty=(Tensor[(5, 15, 6), float32],) */;
    %589 = cast(meta[relay.Constant][28] /* ty=Tensor[(560), int32] */, dtype="int32") /* ty=Tensor[(560), int32] */;
    %590 = reshape(%589, newshape=[5, 7, 16]) /* ty=Tensor[(5, 7, 16), int32] */;
    %591 = @func_649(%590) /* ty=(Tensor[(5, 7, 16), int32],) */;
    %592 = %582.0;
    %593 = %585.3;
    %594 = %586.5;
    %595 = %587.0;
    %596 = %588.0;
    %597 = %591.0;
    (%592, %593, meta[relay.Constant][27] /* ty=Tensor[(540), float64] */, %594, %595, %596, %597, meta[relay.Constant][28] /* ty=Tensor[(560), int32] */)
  };
  %598() /* ty=(Tensor[(13, 2, 16), bool], Tensor[(540), float64], Tensor[(540), float64], Tensor[(1, 312), float64], Tensor[(13, 2, 16), float64], Tensor[(5, 15, 6), float32], Tensor[(5, 7, 16), int32], Tensor[(560), int32]) */
}

def @func_4816() -> (Tensor[(13, 2, 16), bool], Tensor[(13, 2, 16), float64], Tensor[(13, 2, 16), bool], Tensor[(450), int8]) {
  %599 = @func_1960() /* ty=(Tensor[(13, 2, 16), float64],) */;
  %600 = cast(meta[relay.Constant][29] /* ty=Tensor[(450), int8] */, dtype="int8") /* ty=Tensor[(450), int8] */;
  %601 = cast(meta[relay.Constant][29] /* ty=Tensor[(450), int8] */, dtype="float64") /* ty=Tensor[(450), float64] */;
  %602 = reshape(%600, newshape=[10, 45]) /* ty=Tensor[(10, 45), int8] */;
  %603 = reshape(%601, newshape=[10, 45]) /* ty=Tensor[(10, 45), float64] */;
  %604 = @func_474(%602, %603) /* ty=(Tensor[(9, 10, 6), float64], Tensor[(540), float64], Tensor[(9, 10, 6), float64], Tensor[(13, 2, 16), bool], Tensor[(10, 45), bool]) */;
  %605 = @func_370() /* ty=Tensor[(13, 2, 16), bool] */;
  %606 = %599.0;
  %607 = %604.3;
  (%605, %606, %607, meta[relay.Constant][29] /* ty=Tensor[(450), int8] */)
}

def @func_1078() -> (Tensor[(13, 2, 16), bool], Tensor[(450), int8], Tensor[(540), float64], Tensor[(450), int8], Tensor[(12, 13, 2), float64], Tensor[(1, 312), float64]) {
  %608 = cast(meta[relay.Constant][30] /* ty=Tensor[(540), float64] */, dtype="float64") /* ty=Tensor[(540), float64] */;
  %609 = cast(meta[relay.Constant][31] /* ty=Tensor[(450), int8] */, dtype="int8") /* ty=Tensor[(450), int8] */;
  %610 = reshape(%608, newshape=[9, 10, 6]) /* ty=Tensor[(9, 10, 6), float64] */;
  %611 = reshape(%609, newshape=[450]) /* ty=Tensor[(450), int8] */;
  %612 = @func_629(%610, %611) /* ty=(Tensor[(9, 10, 6), float32], Tensor[(9, 10, 6), int32], Tensor[(13, 2, 16), bool], Tensor[(450), int8], Tensor[(13, 2, 16), bool], int8) */;
  %613 = cast(meta[relay.Constant][32] /* ty=Tensor[(1, 312), float64] */, dtype="float64") /* ty=Tensor[(1, 312), float64] */;
  %614 = reshape(%613, newshape=[12, 13, 2]) /* ty=Tensor[(12, 13, 2), float64] */;
  %615 = @func_898(%614) /* ty=(Tensor[(12, 13, 2), float64],) */;
  %616 = @func_370() /* ty=Tensor[(13, 2, 16), bool] */;
  %617 = %612.3;
  %618 = %615.0;
  (%616, %617, meta[relay.Constant][30] /* ty=Tensor[(540), float64] */, meta[relay.Constant][31] /* ty=Tensor[(450), int8] */, %618, meta[relay.Constant][32] /* ty=Tensor[(1, 312), float64] */)
}

def @func_6900() -> Tensor[(13, 2, 16), bool] {
  %619 = fn () -> Tensor[(13, 2, 16), bool] {
    @func_6086() /* ty=Tensor[(13, 2, 16), bool] */
  };
  %619() /* ty=Tensor[(13, 2, 16), bool] */
}

def @func_2961(%var_2959: Tensor[(13, 3, 5), float32]) -> (Tensor[(13, 3, 5), float32],) {
  @func_2958(%var_2959) /* ty=(Tensor[(13, 3, 5), float32],) */
}

def @func_4724(%var_4723: Tensor[(240), bool]) -> (Tensor[(9, 10, 6), float64], Tensor[(13, 2, 16), float64], Tensor[(240), bool]) {
  %625 = fn (%var_4717: Tensor[(240), bool]) -> (Tensor[(9, 10, 6), float64], Tensor[(13, 2, 16), float64], Tensor[(240), bool]) {
    %620 = cast(%var_4717, dtype="bool") /* ty=Tensor[(240), bool] */;
    %621 = reshape(%620, newshape=[3, 8, 10]) /* ty=Tensor[(3, 8, 10), bool] */;
    %622 = @func_1873(%621) /* ty=(Tensor[(13, 2, 16), float64], Tensor[(3, 8, 10), float32]) */;
    %623 = @func_3513() /* ty=Tensor[(9, 10, 6), float64] */;
    %624 = %622.0;
    (%623, %624, %var_4717)
  };
  %625(%var_4723) /* ty=(Tensor[(9, 10, 6), float64], Tensor[(13, 2, 16), float64], Tensor[(240), bool]) */
}

def @func_3264() -> (Tensor[(12, 13, 2), float64], Tensor[(9, 10, 6), float64], Tensor[(450), int8]) {
  %626 = @func_2349() /* ty=(Tensor[(13, 2, 16), float64], Tensor[(12, 13, 2), float64]) */;
  %627 = cast(meta[relay.Constant][33] /* ty=Tensor[(450), int8] */, dtype="int8") /* ty=Tensor[(450), int8] */;
  %628 = cast(meta[relay.Constant][33] /* ty=Tensor[(450), int8] */, dtype="float64") /* ty=Tensor[(450), float64] */;
  %629 = reshape(%627, newshape=[10, 45]) /* ty=Tensor[(10, 45), int8] */;
  %630 = reshape(%628, newshape=[10, 45]) /* ty=Tensor[(10, 45), float64] */;
  %631 = @func_474(%629, %630) /* ty=(Tensor[(9, 10, 6), float64], Tensor[(540), float64], Tensor[(9, 10, 6), float64], Tensor[(13, 2, 16), bool], Tensor[(10, 45), bool]) */;
  %632 = %626.1;
  %633 = %631.2;
  (%632, %633, meta[relay.Constant][33] /* ty=Tensor[(450), int8] */)
}

def @func_6954(%var_6931: Tensor[(4, 7, 13), float64]) -> Tensor[(4, 7, 13), float32] {
  %634 = cast(%var_6931, dtype="float64") /* ty=Tensor[(4, 7, 13), float64] */;
  %635 = shape_of(meta[relay.Constant][34] /* ty=Tensor[(4, 7, 13), float64] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %636 = cast(meta[relay.Constant][34] /* ty=Tensor[(4, 7, 13), float64] */, dtype="float64") /* ty=Tensor[(4, 7, 13), float64] */;
  %637 = dyn.reshape(%634, %635, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %638 = floor_mod(%636, %637) /* ty=Tensor[(4, 7, 13), float64] */;
  %639 = cast(%638, dtype="float32") /* ty=Tensor[(4, 7, 13), float32] */;
  rsqrt(%639) /* ty=Tensor[(4, 7, 13), float32] */
}

def @func_5332() -> (Tensor[(10, 45), float64], Tensor[(12, 13, 2), float64], Tensor[(12, 13, 2), float64]) {
  %640 = @func_575() /* ty=(Tensor[(10, 45), bool], Tensor[(10, 45), float64], Tensor[(5, 15, 6), int8], int8, Tensor[(540), float64], Tensor[(13, 2, 16), float64]) */;
  %641 = @func_1726() /* ty=(Tensor[(12, 13, 2), float64],) */;
  %642 = @func_4941() /* ty=Tensor[(12, 13, 2), float64] */;
  %643 = cast(%642, dtype="float32") /* ty=Tensor[(12, 13, 2), float32] */;
  %644 = tan(%643) /* ty=Tensor[(12, 13, 2), float32] */;
  %645 = cast(%642, dtype="float64") /* ty=Tensor[(12, 13, 2), float64] */;
  %646 = shape_of(%644, dtype="int32") /* ty=Tensor[(3), int32] */;
  %647 = cast(%644, dtype="float64") /* ty=Tensor[(12, 13, 2), float64] */;
  %648 = dyn.reshape(%645, %646, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %649 = %640.1;
  %650 = %641.0;
  %651 = power(%647, %648) /* ty=Tensor[(12, 13, 2), float64] */;
  (%649, %650, %651)
}

def @func_5495() -> (Tensor[(540), float64], Tensor[(3, 8, 10), float64]) {
  %660 = fn () -> (Tensor[(540), float64], Tensor[(3, 8, 10), float64]) {
    %652 = @func_4221() /* ty=(Tensor[(13, 2, 16), bool], Tensor[(540), float64], Tensor[(540), float64], Tensor[(1, 312), float64], Tensor[(13, 2, 16), float64], Tensor[(5, 15, 6), float32], Tensor[(5, 7, 16), int32], Tensor[(560), int32]) */;
    %653 = @func_1550() /* ty=(Tensor[(3, 8, 10), bool], Tensor[(13, 2, 16), float64]) */;
    %654 = %653.0;
    %655 = cast(%654, dtype="float64") /* ty=Tensor[(3, 8, 10), float64] */;
    %656 = log(%655) /* ty=Tensor[(3, 8, 10), float64] */;
    %657 = cast(%656, dtype="float64") /* ty=Tensor[(3, 8, 10), float64] */;
    %658 = %652.2;
    %659 = asinh(%657) /* ty=Tensor[(3, 8, 10), float64] */;
    (%658, %659)
  };
  %660() /* ty=(Tensor[(540), float64], Tensor[(3, 8, 10), float64]) */
}

def @func_1639(%var_1637: Tensor[(5, 90), int8]) -> (Tensor[(9, 10, 6), float64], Tensor[(13, 2, 16), bool], Tensor[(5, 90), int8], Tensor[(9, 10, 6), int16]) {
  @func_1636(%var_1637) /* ty=(Tensor[(9, 10, 6), float64], Tensor[(13, 2, 16), bool], Tensor[(5, 90), int8], Tensor[(9, 10, 6), int16]) */
}

def @func_6262() -> (Tensor[(3, 15, 10), float32],) {
  %663 = fn () -> (Tensor[(3, 15, 10), float32],) {
    %661 = cast(meta[relay.Constant][35] /* ty=Tensor[(3, 15, 10), float32] */, dtype="float32") /* ty=Tensor[(3, 15, 10), float32] */;
    %662 = acosh(%661) /* ty=Tensor[(3, 15, 10), float32] */;
    (%662,)
  };
  %663() /* ty=(Tensor[(3, 15, 10), float32],) */
}

def @func_3515() -> Tensor[(9, 10, 6), float64] {
  @func_3513() /* ty=Tensor[(9, 10, 6), float64] */
}

def @func_6009(%var_5997: Tensor[(300), uint32], %var_5998: Tensor[(450), int8]) -> (Tensor[(9, 10, 6), int16], Tensor[(6, 5, 10), bool], Tensor[(300), uint32], Tensor[(450), int8]) {
  %664 = @func_5751() /* ty=(Tensor[(9, 10, 6), int16],) */;
  %665 = cast(%var_5997, dtype="uint32") /* ty=Tensor[(300), uint32] */;
  %666 = cast(%var_5997, dtype="uint32") /* ty=Tensor[(300), uint32] */;
  %667 = cast(%var_5998, dtype="int8") /* ty=Tensor[(450), int8] */;
  %668 = reshape(%665, newshape=[6, 5, 10]) /* ty=Tensor[(6, 5, 10), uint32] */;
  %669 = reshape(%666, newshape=[6, 5, 10]) /* ty=Tensor[(6, 5, 10), uint32] */;
  %670 = reshape(%667, newshape=[450]) /* ty=Tensor[(450), int8] */;
  %671 = @func_1949(%668, %669, %670) /* ty=(Tensor[(6, 5, 10), uint32], Tensor[(6, 5, 10), bool], Tensor[(9, 10, 6), float64], Tensor[(540), float64], Tensor[(5, 7, 16), int32], Tensor[(560), int32], Tensor[(13, 2, 16), bool], Tensor[(450), int8], Tensor[(12, 13, 2), float64], Tensor[(312), float64]) */;
  %672 = %664.0;
  %673 = %671.1;
  (%672, %673, %var_5997, %var_5998)
}

def @func_6871(%var_6869: Tensor[(450), int8]) -> (Tensor[(9, 10, 6), int16], int8, Tensor[(450), int8]) {
  @func_6868(%var_6869) /* ty=(Tensor[(9, 10, 6), int16], int8, Tensor[(450), int8]) */
}

def @func_1080() -> (Tensor[(13, 2, 16), bool], Tensor[(450), int8], Tensor[(540), float64], Tensor[(450), int8], Tensor[(12, 13, 2), float64], Tensor[(1, 312), float64]) {
  @func_1078() /* ty=(Tensor[(13, 2, 16), bool], Tensor[(450), int8], Tensor[(540), float64], Tensor[(450), int8], Tensor[(12, 13, 2), float64], Tensor[(1, 312), float64]) */
}

def @func_6424() -> (Tensor[(16, 7, 9), float64], Tensor[(6, 5, 10), uint32], Tensor[(3, 8, 10), float64], Tensor[(3, 8, 10), bool]) {
  %684 = fn () -> (Tensor[(16, 7, 9), float64], Tensor[(6, 5, 10), uint32], Tensor[(3, 8, 10), float64], Tensor[(3, 8, 10), bool]) {
    %674 = @func_4876() /* ty=(Tensor[(12, 13, 2), float64], Tensor[(12, 13, 2), float64], Tensor[(16, 7, 9), float64], Tensor[(1008), float64], Tensor[(9, 10, 6), float64]) */;
    %675 = @func_6315() /* ty=(Tensor[(6, 5, 10), uint32], Tensor[(13, 2, 16), bool]) */;
    %676 = @func_5150() /* ty=(Tensor[(3, 8, 10), bool],) */;
    %677 = %676.0;
    %678 = cast(%677, dtype="float64") /* ty=Tensor[(3, 8, 10), float64] */;
    %679 = @func_1550() /* ty=(Tensor[(3, 8, 10), bool], Tensor[(13, 2, 16), float64]) */;
    %680 = %674.2;
    %681 = %675.0;
    %682 = erf(%678) /* ty=Tensor[(3, 8, 10), float64] */;
    %683 = %679.0;
    (%680, %681, %682, %683)
  };
  %684() /* ty=(Tensor[(16, 7, 9), float64], Tensor[(6, 5, 10), uint32], Tensor[(3, 8, 10), float64], Tensor[(3, 8, 10), bool]) */
}

def @func_2988(%var_2987: Tensor[(560), int32]) -> (Tensor[(9, 10, 6), float64], Tensor[(5, 7, 16), int32], Tensor[(560), int32]) {
  %691 = fn (%var_2979: Tensor[(560), int32]) -> (Tensor[(9, 10, 6), float64], Tensor[(5, 7, 16), int32], Tensor[(560), int32]) {
    %685 = @func_1100() /* ty=(Tensor[(12, 13, 2), float64], Tensor[(9, 10, 6), float64]) */;
    %686 = cast(%var_2979, dtype="int32") /* ty=Tensor[(560), int32] */;
    %687 = reshape(%686, newshape=[5, 7, 16]) /* ty=Tensor[(5, 7, 16), int32] */;
    %688 = @func_649(%687) /* ty=(Tensor[(5, 7, 16), int32],) */;
    %689 = %685.1;
    %690 = %688.0;
    (%689, %690, %var_2979)
  };
  %691(%var_2987) /* ty=(Tensor[(9, 10, 6), float64], Tensor[(5, 7, 16), int32], Tensor[(560), int32]) */
}

def @func_6852() -> (Tensor[(540), float64], Tensor[(9, 10, 6), int16], Tensor[(5, 15, 6), float32], Tensor[(12, 13, 2), float64], Tensor[(416), bool]) {
  %706 = fn () -> (Tensor[(540), float64], Tensor[(9, 10, 6), int16], Tensor[(5, 15, 6), float32], Tensor[(12, 13, 2), float64], Tensor[(416), bool]) {
    %692 = @func_6542() /* ty=(Tensor[(540), float64],) */;
    %693 = @func_4221() /* ty=(Tensor[(13, 2, 16), bool], Tensor[(540), float64], Tensor[(540), float64], Tensor[(1, 312), float64], Tensor[(13, 2, 16), float64], Tensor[(5, 15, 6), float32], Tensor[(5, 7, 16), int32], Tensor[(560), int32]) */;
    %694 = cast(meta[relay.Constant][36] /* ty=Tensor[(416), float64] */, dtype="float64") /* ty=Tensor[(416), float64] */;
    %695 = reshape(%694, newshape=[13, 2, 16]) /* ty=Tensor[(13, 2, 16), float64] */;
    %696 = @func_2465(%695) /* ty=(Tensor[(13, 2, 16), bool], Tensor[(12, 13, 2), float64], Tensor[(12, 13, 2), float64], Tensor[(13, 2, 16), uint32], Tensor[(13, 2, 16), bool], Tensor[(12, 13, 2), float64]) */;
    %697 = @func_575() /* ty=(Tensor[(10, 45), bool], Tensor[(10, 45), float64], Tensor[(5, 15, 6), int8], int8, Tensor[(540), float64], Tensor[(13, 2, 16), float64]) */;
    %698 = %697.3;
    %699 = cast(meta[relay.Constant][36] /* ty=Tensor[(416), float64] */, dtype="bool") /* ty=Tensor[(416), bool] */;
    %700 = cast(%698, dtype="bool") /* ty=bool */;
    %701 = %692.0;
    %702 = @func_3902() /* ty=Tensor[(9, 10, 6), int16] */;
    %703 = %693.5;
    %704 = %696.2;
    %705 = greater(%699, %700) /* ty=Tensor[(416), bool] */;
    (%701, %702, %703, %704, %705)
  };
  %706() /* ty=(Tensor[(540), float64], Tensor[(9, 10, 6), int16], Tensor[(5, 15, 6), float32], Tensor[(12, 13, 2), float64], Tensor[(416), bool]) */
}

def @func_7243(%var_7229: Tensor[(5, 15, 6), int8]) -> Tensor[(5, 15, 6), bool] {
  %707 = @func_4136() /* ty=(Tensor[(5, 15, 6), int8],) */;
  %708 = %707.0;
  %709 = cast(%var_7229, dtype="bool") /* ty=Tensor[(5, 15, 6), bool] */;
  %710 = shape_of(%708, dtype="int32") /* ty=Tensor[(3), int32] */;
  %711 = cast(%708, dtype="bool") /* ty=Tensor[(5, 15, 6), bool] */;
  %712 = dyn.reshape(%709, %710, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  less_equal(%711, %712) /* ty=Tensor[(5, 15, 6), bool] */
}

def @func_5572() -> (Tensor[(9, 10, 6), int16], Tensor[(12, 13, 2), float64], Tensor[(240), bool], Tensor[(6, 5, 10), uint32], Tensor[(5, 60), uint32], Tensor[(450), int8]) {
  %729 = fn () -> (Tensor[(9, 10, 6), int16], Tensor[(12, 13, 2), float64], Tensor[(240), bool], Tensor[(6, 5, 10), uint32], Tensor[(5, 60), uint32], Tensor[(450), int8]) {
    %713 = @func_4364() /* ty=(Tensor[(12, 13, 2), float64], Tensor[(13, 2, 16), float32], Tensor[(9, 10, 6), int16], Tensor[(13, 2, 16), float64]) */;
    %714 = cast(meta[relay.Constant][37] /* ty=Tensor[(240), bool] */, dtype="bool") /* ty=Tensor[(240), bool] */;
    %715 = %713.2;
    %716 = cast(%715, dtype="float64") /* ty=Tensor[(9, 10, 6), float64] */;
    %717 = reshape(%714, newshape=[240]) /* ty=Tensor[(240), bool] */;
    %718 = reshape(%716, newshape=[540]) /* ty=Tensor[(540), float64] */;
    %719 = @func_4785(%717, %718) /* ty=(Tensor[(12, 13, 2), float64], Tensor[(3, 8, 10), bool], Tensor[(240), bool], Tensor[(9, 10, 6), bool], Tensor[(540), float64], Tensor[(9, 10, 6), int16], Tensor[(9, 10, 6), float64]) */;
    %720 = cast(meta[relay.Constant][38] /* ty=Tensor[(5, 60), uint32] */, dtype="uint32") /* ty=Tensor[(5, 60), uint32] */;
    %721 = cast(meta[relay.Constant][38] /* ty=Tensor[(5, 60), uint32] */, dtype="uint32") /* ty=Tensor[(5, 60), uint32] */;
    %722 = cast(meta[relay.Constant][39] /* ty=Tensor[(450), int8] */, dtype="int8") /* ty=Tensor[(450), int8] */;
    %723 = reshape(%720, newshape=[6, 5, 10]) /* ty=Tensor[(6, 5, 10), uint32] */;
    %724 = reshape(%721, newshape=[6, 5, 10]) /* ty=Tensor[(6, 5, 10), uint32] */;
    %725 = reshape(%722, newshape=[450]) /* ty=Tensor[(450), int8] */;
    %726 = @func_1949(%723, %724, %725) /* ty=(Tensor[(6, 5, 10), uint32], Tensor[(6, 5, 10), bool], Tensor[(9, 10, 6), float64], Tensor[(540), float64], Tensor[(5, 7, 16), int32], Tensor[(560), int32], Tensor[(13, 2, 16), bool], Tensor[(450), int8], Tensor[(12, 13, 2), float64], Tensor[(312), float64]) */;
    %727 = %719.0;
    %728 = %726.0;
    (%715, %727, meta[relay.Constant][37] /* ty=Tensor[(240), bool] */, %728, meta[relay.Constant][38] /* ty=Tensor[(5, 60), uint32] */, meta[relay.Constant][39] /* ty=Tensor[(450), int8] */)
  };
  %729() /* ty=(Tensor[(9, 10, 6), int16], Tensor[(12, 13, 2), float64], Tensor[(240), bool], Tensor[(6, 5, 10), uint32], Tensor[(5, 60), uint32], Tensor[(450), int8]) */
}

def @func_7246(%var_7244: Tensor[(5, 15, 6), int8]) -> Tensor[(5, 15, 6), bool] {
  @func_7243(%var_7244) /* ty=Tensor[(5, 15, 6), bool] */
}

def @func_2874(%var_2872: Tensor[(16, 8, 5), float64], %var_2873: Tensor[(16, 8, 5), float64]) -> (Tensor[(16, 8, 5), bool],) {
  %735 = fn (%var_2851: Tensor[(16, 8, 5), float64], %var_2852: Tensor[(16, 8, 5), float64]) -> (Tensor[(16, 8, 5), bool],) {
    %730 = cast(%var_2852, dtype="bool") /* ty=Tensor[(16, 8, 5), bool] */;
    %731 = shape_of(%var_2851, dtype="int32") /* ty=Tensor[(3), int32] */;
    %732 = cast(%var_2851, dtype="bool") /* ty=Tensor[(16, 8, 5), bool] */;
    %733 = dyn.reshape(%730, %731, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    %734 = less(%732, %733) /* ty=Tensor[(16, 8, 5), bool] */;
    (%734,)
  };
  %735(%var_2872, %var_2873) /* ty=(Tensor[(16, 8, 5), bool],) */
}

def @func_7438(%var_7436: Tensor[(208), int64], %var_7437: Tensor[(1872), int64]) -> (Tensor[(560), int32], Tensor[(13, 2, 16), bool], Tensor[(208), int64], Tensor[(1872), int64]) {
  @func_7434(%var_7436, %var_7437) /* ty=(Tensor[(560), int32], Tensor[(13, 2, 16), bool], Tensor[(208), int64], Tensor[(1872), int64]) */
}

def @func_6799() -> (Tensor[(13, 2, 16), bool], Tensor[(9, 10, 6), float64]) {
  @func_6797() /* ty=(Tensor[(13, 2, 16), bool], Tensor[(9, 10, 6), float64]) */
}

def @func_6542() -> (Tensor[(540), float64],) {
  %736 = @func_5494() /* ty=(Tensor[(540), float64], Tensor[(3, 8, 10), float64]) */;
  %737 = %736.0;
  (%737,)
}

def @func_3026() -> (Tensor[(9, 10, 6), int16],) {
  %740 = fn () -> (Tensor[(9, 10, 6), int16],) {
    %738 = @func_2035() /* ty=(Tensor[(9, 10, 6), int16],) */;
    %739 = %738.0;
    (%739,)
  };
  %740() /* ty=(Tensor[(9, 10, 6), int16],) */
}

def @func_7351(%var_7317: Tensor[(16, 6, 12), float64], %var_7336: Tensor[(4, 60), bool]) -> (Tensor[(16, 6, 12), float64], Tensor[(13, 2, 16), bool], Tensor[(450), int8], Tensor[(6, 10, 4), bool], Tensor[(4, 60), bool]) {
  %741 = cast(%var_7317, dtype="float64") /* ty=Tensor[(16, 6, 12), float64] */;
  %742 = cast(meta[relay.Constant][40] /* ty=Tensor[(450), int8] */, dtype="int8") /* ty=Tensor[(450), int8] */;
  %743 = reshape(%742, newshape=[5, 15, 6]) /* ty=Tensor[(5, 15, 6), int8] */;
  %744 = @func_855(%743) /* ty=(Tensor[(13, 2, 16), bool], Tensor[(54, 10), float64], Tensor[(5, 15, 6), float64]) */;
  %745 = cast(%var_7336, dtype="bool") /* ty=Tensor[(4, 60), bool] */;
  %746 = reshape(%745, newshape=[6, 10, 4]) /* ty=Tensor[(6, 10, 4), bool] */;
  %747 = log10(%741) /* ty=Tensor[(16, 6, 12), float64] */;
  %748 = %744.0;
  %749 = @func_6105(%746) /* ty=Tensor[(6, 10, 4), bool] */;
  (%747, %748, meta[relay.Constant][40] /* ty=Tensor[(450), int8] */, %749, %var_7336)
}

def @func_4789(%var_4787: Tensor[(240), bool], %var_4788: Tensor[(540), float64]) -> (Tensor[(12, 13, 2), float64], Tensor[(3, 8, 10), bool], Tensor[(240), bool], Tensor[(9, 10, 6), bool], Tensor[(540), float64], Tensor[(9, 10, 6), int16], Tensor[(9, 10, 6), float64]) {
  @func_4785(%var_4787, %var_4788) /* ty=(Tensor[(12, 13, 2), float64], Tensor[(3, 8, 10), bool], Tensor[(240), bool], Tensor[(9, 10, 6), bool], Tensor[(540), float64], Tensor[(9, 10, 6), int16], Tensor[(9, 10, 6), float64]) */
}

def @func_267() -> (Tensor[(13, 2, 16), bool], Tensor[(9, 10, 6), float64], Tensor[(540), float64]) {
  %761 = fn () -> (Tensor[(13, 2, 16), bool], Tensor[(9, 10, 6), float64], Tensor[(540), float64]) {
    %750 = cast(meta[relay.Constant][41] /* ty=Tensor[(13, 2, 16), float64] */, dtype="float64") /* ty=Tensor[(13, 2, 16), float64] */;
    %751 = exp(%750) /* ty=Tensor[(13, 2, 16), float64] */;
    %752 = cast(meta[relay.Constant][41] /* ty=Tensor[(13, 2, 16), float64] */, dtype="bool") /* ty=Tensor[(13, 2, 16), bool] */;
    %753 = shape_of(%751, dtype="int32") /* ty=Tensor[(3), int32] */;
    %754 = cast(%751, dtype="bool") /* ty=Tensor[(13, 2, 16), bool] */;
    %755 = dyn.reshape(%752, %753, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    %756 = cast(meta[relay.Constant][42] /* ty=Tensor[(540), float64] */, dtype="float64") /* ty=Tensor[(540), float64] */;
    %757 = reshape(%756, newshape=[9, 10, 6]) /* ty=Tensor[(9, 10, 6), float64] */;
    %758 = @func_158(%757) /* ty=(Tensor[(9, 10, 6), float64], Tensor[(9, 10, 6), float64]) */;
    %759 = logical_and(%754, %755) /* ty=Tensor[(13, 2, 16), bool] */;
    %760 = %758.0;
    (%759, %760, meta[relay.Constant][42] /* ty=Tensor[(540), float64] */)
  };
  %761() /* ty=(Tensor[(13, 2, 16), bool], Tensor[(9, 10, 6), float64], Tensor[(540), float64]) */
}

def @func_3977(%var_3975: Tensor[(4, 10, 12), uint64], %var_3976: Tensor[(4, 10, 12), uint64]) -> Tensor[(4, 10, 12), uint64] {
  %766 = fn (%var_3969: Tensor[(4, 10, 12), uint64], %var_3970: Tensor[(4, 10, 12), uint64]) -> Tensor[(4, 10, 12), uint64] {
    %762 = cast(%var_3970, dtype="uint64") /* ty=Tensor[(4, 10, 12), uint64] */;
    %763 = shape_of(%var_3969, dtype="int32") /* ty=Tensor[(3), int32] */;
    %764 = cast(%var_3969, dtype="uint64") /* ty=Tensor[(4, 10, 12), uint64] */;
    %765 = dyn.reshape(%762, %763, newshape=[]) /* ty=Tensor[(?, ?, ?), uint64] */;
    right_shift(%764, %765) /* ty=Tensor[(4, 10, 12), uint64] */
  };
  %766(%var_3975, %var_3976) /* ty=Tensor[(4, 10, 12), uint64] */
}

def @func_6627(%var_6625: Tensor[(12, 6, 5), float64], %var_6626: Tensor[(12, 6, 5), float64]) -> (Tensor[(9, 10, 6), float64], Tensor[(12, 6, 5), bool]) {
  @func_6623(%var_6625, %var_6626) /* ty=(Tensor[(9, 10, 6), float64], Tensor[(12, 6, 5), bool]) */
}

def @func_2137() -> (Tensor[(9, 10, 6), int16],) {
  %767 = @func_709() /* ty=(Tensor[(9, 10, 6), int16],) */;
  %768 = %767.0;
  (%768,)
}

def @func_6223(%var_6221: Tensor[(8, 6, 6), bool], %var_6222: Tensor[(8, 6, 6), bool]) -> (Tensor[(8, 6, 6), bool], Tensor[(9, 10, 6), int16], Tensor[(9, 10, 6), bool]) {
  @func_6219(%var_6221, %var_6222) /* ty=(Tensor[(8, 6, 6), bool], Tensor[(9, 10, 6), int16], Tensor[(9, 10, 6), bool]) */
}

def @func_4651() -> (Tensor[(9, 10, 6), int16],) {
  @func_4649() /* ty=(Tensor[(9, 10, 6), int16],) */
}

def @func_898(%var_886: Tensor[(12, 13, 2), float64]) -> (Tensor[(12, 13, 2), float64],) {
  %769 = cast(%var_886, dtype="float64") /* ty=Tensor[(12, 13, 2), float64] */;
  %770 = shape_of(meta[relay.Constant][43] /* ty=Tensor[(12, 13, 2), float64] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %771 = cast(meta[relay.Constant][43] /* ty=Tensor[(12, 13, 2), float64] */, dtype="float64") /* ty=Tensor[(12, 13, 2), float64] */;
  %772 = dyn.reshape(%769, %770, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %773 = mod(%771, %772) /* ty=Tensor[(12, 13, 2), float64] */;
  (%773,)
}

def @func_1262() -> Tensor[(3, 8, 10), bool] {
  %778 = fn () -> Tensor[(3, 8, 10), bool] {
    %774 = cast(meta[relay.Constant][45] /* ty=Tensor[(3, 8, 10), uint32] */, dtype="bool") /* ty=Tensor[(3, 8, 10), bool] */;
    %775 = shape_of(meta[relay.Constant][44] /* ty=Tensor[(3, 8, 10), uint32] */, dtype="int32") /* ty=Tensor[(3), int32] */;
    %776 = cast(meta[relay.Constant][44] /* ty=Tensor[(3, 8, 10), uint32] */, dtype="bool") /* ty=Tensor[(3, 8, 10), bool] */;
    %777 = dyn.reshape(%774, %775, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    greater_equal(%776, %777) /* ty=Tensor[(3, 8, 10), bool] */
  };
  %778() /* ty=Tensor[(3, 8, 10), bool] */
}

def @func_6515() -> (Tensor[(12, 13, 2), float64],) {
  %781 = fn () -> (Tensor[(12, 13, 2), float64],) {
    %779 = @func_5332() /* ty=(Tensor[(10, 45), float64], Tensor[(12, 13, 2), float64], Tensor[(12, 13, 2), float64]) */;
    %780 = %779.1;
    (%780,)
  };
  %781() /* ty=(Tensor[(12, 13, 2), float64],) */
}

def @func_4608(%var_4542: Tensor[(240), bool]) -> (Tensor[(13, 2, 16), float64], Tensor[(240), bool], Tensor[(9, 10, 6), float64]) {
  %782 = cast(%var_4542, dtype="bool") /* ty=Tensor[(240), bool] */;
  %783 = reshape(%782, newshape=[3, 8, 10]) /* ty=Tensor[(3, 8, 10), bool] */;
  %784 = @func_1873(%783) /* ty=(Tensor[(13, 2, 16), float64], Tensor[(3, 8, 10), float32]) */;
  %785 = @func_2137() /* ty=(Tensor[(9, 10, 6), int16],) */;
  %786 = %785.0;
  %787 = cast(%786, dtype="float64") /* ty=Tensor[(9, 10, 6), float64] */;
  %788 = %784.0;
  %789 = asinh(%787) /* ty=Tensor[(9, 10, 6), float64] */;
  (%788, %var_4542, %789)
}

def @func_2501(%var_2499: int8, %var_2500: Tensor[(7, 14, 1), int8]) -> (Tensor[(7, 14, 1), int8], Tensor[(9, 10, 6), float64]) {
  %795 = fn (%var_2479: int8, %var_2480: Tensor[(7, 14, 1), int8]) -> (Tensor[(7, 14, 1), int8], Tensor[(9, 10, 6), float64]) {
    %790 = cast(%var_2479, dtype="int8") /* ty=int8 */;
    %791 = cast(%var_2480, dtype="int8") /* ty=Tensor[(7, 14, 1), int8] */;
    %792 = @func_266() /* ty=(Tensor[(13, 2, 16), bool], Tensor[(9, 10, 6), float64], Tensor[(540), float64]) */;
    %793 = logical_xor(%790, %791) /* ty=Tensor[(7, 14, 1), int8] */;
    %794 = %792.1;
    (%793, %794)
  };
  %795(%var_2499, %var_2500) /* ty=(Tensor[(7, 14, 1), int8], Tensor[(9, 10, 6), float64]) */
}

def @func_2691() -> (Tensor[(5, 15, 6), int8],) {
  @func_2689() /* ty=(Tensor[(5, 15, 6), int8],) */
}

def @func_2610() -> Tensor[(9, 10, 6), int16] {
  %796 = @func_2137() /* ty=(Tensor[(9, 10, 6), int16],) */;
  %796.0
}

def @func_710() -> (Tensor[(9, 10, 6), int16],) {
  %806 = fn () -> (Tensor[(9, 10, 6), int16],) {
    %797 = @func_266() /* ty=(Tensor[(13, 2, 16), bool], Tensor[(9, 10, 6), float64], Tensor[(540), float64]) */;
    %798 = %797.1;
    %799 = cast(%798, dtype="float32") /* ty=Tensor[(9, 10, 6), float32] */;
    %800 = log10(%799) /* ty=Tensor[(9, 10, 6), float32] */;
    %801 = cast(%798, dtype="int16") /* ty=Tensor[(9, 10, 6), int16] */;
    %802 = shape_of(%800, dtype="int32") /* ty=Tensor[(3), int32] */;
    %803 = cast(%800, dtype="int16") /* ty=Tensor[(9, 10, 6), int16] */;
    %804 = dyn.reshape(%801, %802, newshape=[]) /* ty=Tensor[(?, ?, ?), int16] */;
    %805 = bitwise_and(%803, %804) /* ty=Tensor[(9, 10, 6), int16] */;
    (%805,)
  };
  %806() /* ty=(Tensor[(9, 10, 6), int16],) */
}

def @func_5040() -> (Tensor[(12, 13, 2), float64],) {
  @func_5038() /* ty=(Tensor[(12, 13, 2), float64],) */
}

def @func_2256(%var_2254: Tensor[(16, 10, 9), float64]) -> (Tensor[(540), float64], Tensor[(16, 10, 9), float32], int8, Tensor[(450, 1), int8]) {
  @func_2253(%var_2254) /* ty=(Tensor[(540), float64], Tensor[(16, 10, 9), float32], int8, Tensor[(450, 1), int8]) */
}

def @func_2893() -> (Tensor[(5, 15, 6), float32],) {
  %811 = fn () -> (Tensor[(5, 15, 6), float32],) {
    %807 = @func_2689() /* ty=(Tensor[(5, 15, 6), int8],) */;
    %808 = %807.0;
    %809 = cast(%808, dtype="float32") /* ty=Tensor[(5, 15, 6), float32] */;
    %810 = atan(%809) /* ty=Tensor[(5, 15, 6), float32] */;
    (%810,)
  };
  %811() /* ty=(Tensor[(5, 15, 6), float32],) */
}

def @func_2793() -> (Tensor[(16, 11, 2), bool], Tensor[(3, 8, 10), float32], Tensor[(8, 30), bool], Tensor[(16, 11, 2), float64]) {
  @func_2791() /* ty=(Tensor[(16, 11, 2), bool], Tensor[(3, 8, 10), float32], Tensor[(8, 30), bool], Tensor[(16, 11, 2), float64]) */
}

def @func_7163() -> Tensor[(13, 2, 16), bool] {
  @func_3670() /* ty=Tensor[(13, 2, 16), bool] */
}

def @func_2612() -> Tensor[(9, 10, 6), int16] {
  @func_2610() /* ty=Tensor[(9, 10, 6), int16] */
}

def @func_1588() -> (Tensor[(13, 2, 16), float64],) {
  %812 = @func_1550() /* ty=(Tensor[(3, 8, 10), bool], Tensor[(13, 2, 16), float64]) */;
  %813 = %812.1;
  (%813,)
}

def @func_478(%var_476: Tensor[(10, 45), int8], %var_477: Tensor[(10, 45), float64]) -> (Tensor[(9, 10, 6), float64], Tensor[(540), float64], Tensor[(9, 10, 6), float64], Tensor[(13, 2, 16), bool], Tensor[(10, 45), bool]) {
  @func_474(%var_476, %var_477) /* ty=(Tensor[(9, 10, 6), float64], Tensor[(540), float64], Tensor[(9, 10, 6), float64], Tensor[(13, 2, 16), bool], Tensor[(10, 45), bool]) */
}

def @func_3749(%var_3747: Tensor[(3, 8, 10), bool], %var_3748: Tensor[(3, 8, 10), bool]) -> (Tensor[(9, 10, 6), int16], Tensor[(13, 2, 16), float64], Tensor[(16, 8, 5), bool], Tensor[(640), float64], Tensor[(3, 8, 10), float32], Tensor[(3, 8, 10), bool]) {
  @func_3745(%var_3747, %var_3748) /* ty=(Tensor[(9, 10, 6), int16], Tensor[(13, 2, 16), float64], Tensor[(16, 8, 5), bool], Tensor[(640), float64], Tensor[(3, 8, 10), float32], Tensor[(3, 8, 10), bool]) */
}

def @func_5728(%var_5726: Tensor[(240), bool], %var_5727: Tensor[(540), float64]) -> (Tensor[(9, 10, 6), int16], Tensor[(240), bool], Tensor[(540), float64], Tensor[(5, 15, 6), float64], Tensor[(9, 10, 6), float64], Tensor[(9, 10, 6), int16]) {
  @func_5724(%var_5726, %var_5727) /* ty=(Tensor[(9, 10, 6), int16], Tensor[(240), bool], Tensor[(540), float64], Tensor[(5, 15, 6), float64], Tensor[(9, 10, 6), float64], Tensor[(9, 10, 6), int16]) */
}

def @func_2037() -> (Tensor[(9, 10, 6), int16],) {
  @func_2035() /* ty=(Tensor[(9, 10, 6), int16],) */
}

def @func_4916() -> Tensor[(9, 10, 6), int16] {
  %814 = @func_4649() /* ty=(Tensor[(9, 10, 6), int16],) */;
  %814.0
}

def @func_7913() -> (Tensor[(13, 2, 16), float64], Tensor[(13, 2, 16), bool], Tensor[(13, 2, 16), float64]) {
  %815 = @func_1550() /* ty=(Tensor[(3, 8, 10), bool], Tensor[(13, 2, 16), float64]) */;
  %816 = %815.1;
  %817 = cast(%816, dtype="float64") /* ty=Tensor[(13, 2, 16), float64] */;
  %818 = cast(%816, dtype="float64") /* ty=Tensor[(13, 2, 16), float64] */;
  %819 = reshape(%817, newshape=[13, 2, 16]) /* ty=Tensor[(13, 2, 16), float64] */;
  %820 = reshape(%818, newshape=[13, 2, 16]) /* ty=Tensor[(13, 2, 16), float64] */;
  %821 = @func_984(%819, %820) /* ty=(Tensor[(13, 2, 16), float64], Tensor[(13, 2, 16), bool]) */;
  %822 = @func_1550() /* ty=(Tensor[(3, 8, 10), bool], Tensor[(13, 2, 16), float64]) */;
  %823 = %821.1;
  %824 = %822.1;
  (%816, %823, %824)
}

def @func_1590() -> (Tensor[(13, 2, 16), float64],) {
  @func_1588() /* ty=(Tensor[(13, 2, 16), float64],) */
}

def @func_1728() -> (Tensor[(12, 13, 2), float64],) {
  @func_1726() /* ty=(Tensor[(12, 13, 2), float64],) */
}

def @func_3552() -> (Tensor[(12, 13, 2), float64], Tensor[(416), uint16], Tensor[(3, 8, 10), bool], Tensor[(9, 10, 6), int16]) {
  %840 = fn () -> (Tensor[(12, 13, 2), float64], Tensor[(416), uint16], Tensor[(3, 8, 10), bool], Tensor[(9, 10, 6), int16]) {
    %825 = @func_1726() /* ty=(Tensor[(12, 13, 2), float64],) */;
    %826 = cast(meta[relay.Constant][46] /* ty=Tensor[(416), float64] */, dtype="float64") /* ty=Tensor[(416), float64] */;
    %827 = cast(meta[relay.Constant][46] /* ty=Tensor[(416), float64] */, dtype="float64") /* ty=Tensor[(416), float64] */;
    %828 = reshape(%826, newshape=[13, 2, 16]) /* ty=Tensor[(13, 2, 16), float64] */;
    %829 = reshape(%827, newshape=[13, 2, 16]) /* ty=Tensor[(13, 2, 16), float64] */;
    %830 = @func_984(%828, %829) /* ty=(Tensor[(13, 2, 16), float64], Tensor[(13, 2, 16), bool]) */;
    %831 = %830.1;
    %832 = cast(%831, dtype="uint16") /* ty=Tensor[(13, 2, 16), uint16] */;
    %833 = shape_of(meta[relay.Constant][46] /* ty=Tensor[(416), float64] */, dtype="int32") /* ty=Tensor[(1), int32] */;
    %834 = cast(meta[relay.Constant][46] /* ty=Tensor[(416), float64] */, dtype="uint16") /* ty=Tensor[(416), uint16] */;
    %835 = dyn.reshape(%832, %833, newshape=[]) /* ty=Tensor[(?), uint16] */;
    %836 = %825.0;
    %837 = multiply(%834, %835) /* ty=Tensor[(416), uint16] */;
    %838 = @func_1261() /* ty=Tensor[(3, 8, 10), bool] */;
    %839 = @func_2610() /* ty=Tensor[(9, 10, 6), int16] */;
    (%836, %837, %838, %839)
  };
  %840() /* ty=(Tensor[(12, 13, 2), float64], Tensor[(416), uint16], Tensor[(3, 8, 10), bool], Tensor[(9, 10, 6), int16]) */
}

def @func_7831() -> (Tensor[(9, 10, 6), int16],) {
  %841 = @func_5751() /* ty=(Tensor[(9, 10, 6), int16],) */;
  %842 = %841.0;
  (%842,)
}

def @func_7586() -> Tensor[(13, 2, 16), float64] {
  @func_7584() /* ty=Tensor[(13, 2, 16), float64] */
}

def @func_4637(%var_4635: float64, %var_4636: Tensor[(8, 2, 11), float64]) -> Tensor[(8, 2, 11), bool] {
  %845 = fn (%var_4626: float64, %var_4627: Tensor[(8, 2, 11), float64]) -> Tensor[(8, 2, 11), bool] {
    %843 = cast(%var_4626, dtype="bool") /* ty=bool */;
    %844 = cast(%var_4627, dtype="bool") /* ty=Tensor[(8, 2, 11), bool] */;
    greater(%843, %844) /* ty=Tensor[(8, 2, 11), bool] */
  };
  %845(%var_4635, %var_4636) /* ty=Tensor[(8, 2, 11), bool] */
}

def @func_6380() -> Tensor[(9, 10, 6), float64] {
  %846 = @func_3551() /* ty=(Tensor[(12, 13, 2), float64], Tensor[(416), uint16], Tensor[(3, 8, 10), bool], Tensor[(9, 10, 6), int16]) */;
  %847 = %846.3;
  %848 = cast(%847, dtype="float64") /* ty=Tensor[(9, 10, 6), float64] */;
  sinh(%848) /* ty=Tensor[(9, 10, 6), float64] */
}

def @func_1875(%var_1874: Tensor[(3, 8, 10), bool]) -> (Tensor[(13, 2, 16), float64], Tensor[(3, 8, 10), float32]) {
  %857 = fn (%var_1860: Tensor[(3, 8, 10), bool]) -> (Tensor[(13, 2, 16), float64], Tensor[(3, 8, 10), float32]) {
    %849 = @func_1550() /* ty=(Tensor[(3, 8, 10), bool], Tensor[(13, 2, 16), float64]) */;
    %850 = @func_1261() /* ty=Tensor[(3, 8, 10), bool] */;
    %851 = cast(%var_1860, dtype="float32") /* ty=Tensor[(3, 8, 10), float32] */;
    %852 = shape_of(%850, dtype="int32") /* ty=Tensor[(3), int32] */;
    %853 = cast(%850, dtype="float32") /* ty=Tensor[(3, 8, 10), float32] */;
    %854 = dyn.reshape(%851, %852, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
    %855 = %849.1;
    %856 = power(%853, %854) /* ty=Tensor[(3, 8, 10), float32] */;
    (%855, %856)
  };
  %857(%var_1874) /* ty=(Tensor[(13, 2, 16), float64], Tensor[(3, 8, 10), float32]) */
}

def @func_5751() -> (Tensor[(9, 10, 6), int16],) {
  %858 = @func_3551() /* ty=(Tensor[(12, 13, 2), float64], Tensor[(416), uint16], Tensor[(3, 8, 10), bool], Tensor[(9, 10, 6), int16]) */;
  %859 = %858.3;
  (%859,)
}

def @func_6107(%var_6106: Tensor[(6, 10, 4), bool]) -> Tensor[(6, 10, 4), bool] {
  %864 = fn (%var_6098: Tensor[(6, 10, 4), bool]) -> Tensor[(6, 10, 4), bool] {
    %860 = cast(meta[relay.Constant][47] /* ty=Tensor[(6, 10, 4), bool] */, dtype="bool") /* ty=Tensor[(6, 10, 4), bool] */;
    %861 = shape_of(%var_6098, dtype="int32") /* ty=Tensor[(3), int32] */;
    %862 = cast(%var_6098, dtype="bool") /* ty=Tensor[(6, 10, 4), bool] */;
    %863 = dyn.reshape(%860, %861, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    logical_and(%862, %863) /* ty=Tensor[(6, 10, 4), bool] */
  };
  %864(%var_6106) /* ty=Tensor[(6, 10, 4), bool] */
}

def @func_6988() -> Tensor[(13, 2, 16), float64] {
  %866 = fn () -> Tensor[(13, 2, 16), float64] {
    %865 = @func_1588() /* ty=(Tensor[(13, 2, 16), float64],) */;
    %865.0
  };
  %866() /* ty=Tensor[(13, 2, 16), float64] */
}

def @func_7434(%var_7420: Tensor[(208), int64], %var_7421: Tensor[(1872), int64]) -> (Tensor[(560), int32], Tensor[(13, 2, 16), bool], Tensor[(208), int64], Tensor[(1872), int64]) {
  %867 = cast(%var_7420, dtype="int64") /* ty=Tensor[(208), int64] */;
  %868 = cast(%var_7421, dtype="int64") /* ty=Tensor[(1872), int64] */;
  %869 = reshape(%867, newshape=[1, 13, 16]) /* ty=Tensor[(1, 13, 16), int64] */;
  %870 = reshape(%868, newshape=[9, 13, 16]) /* ty=Tensor[(9, 13, 16), int64] */;
  %871 = @func_5088(%869, %870) /* ty=(Tensor[(9, 13, 16), int64], Tensor[(13, 2, 16), bool]) */;
  %872 = @func_4934() /* ty=Tensor[(560), int32] */;
  %873 = %871.1;
  (%872, %873, %var_7420, %var_7421)
}

def @func_1726() -> (Tensor[(12, 13, 2), float64],) {
  %874 = @func_1078() /* ty=(Tensor[(13, 2, 16), bool], Tensor[(450), int8], Tensor[(540), float64], Tensor[(450), int8], Tensor[(12, 13, 2), float64], Tensor[(1, 312), float64]) */;
  %875 = %874.4;
  (%875,)
}

def @func_2035() -> (Tensor[(9, 10, 6), int16],) {
  %876 = @func_709() /* ty=(Tensor[(9, 10, 6), int16],) */;
  %877 = %876.0;
  (%877,)
}

def @func_2958(%var_2930: Tensor[(13, 3, 5), float32]) -> (Tensor[(13, 3, 5), float32],) {
  %878 = cast(%var_2930, dtype="float32") /* ty=Tensor[(13, 3, 5), float32] */;
  %879 = log(%878) /* ty=Tensor[(13, 3, 5), float32] */;
  (%879,)
}

def @func_4136() -> (Tensor[(5, 15, 6), int8],) {
  %880 = @func_2689() /* ty=(Tensor[(5, 15, 6), int8],) */;
  %881 = %880.0;
  (%881,)
}

def @func_5334() -> (Tensor[(10, 45), float64], Tensor[(12, 13, 2), float64], Tensor[(12, 13, 2), float64]) {
  @func_5332() /* ty=(Tensor[(10, 45), float64], Tensor[(12, 13, 2), float64], Tensor[(12, 13, 2), float64]) */
}

def @func_1954(%var_1951: Tensor[(6, 5, 10), uint32], %var_1952: Tensor[(6, 5, 10), uint32], %var_1953: Tensor[(450), int8]) -> (Tensor[(6, 5, 10), uint32], Tensor[(6, 5, 10), bool], Tensor[(9, 10, 6), float64], Tensor[(540), float64], Tensor[(5, 7, 16), int32], Tensor[(560), int32], Tensor[(13, 2, 16), bool], Tensor[(450), int8], Tensor[(12, 13, 2), float64], Tensor[(312), float64]) {
  @func_1949(%var_1951, %var_1952, %var_1953) /* ty=(Tensor[(6, 5, 10), uint32], Tensor[(6, 5, 10), bool], Tensor[(9, 10, 6), float64], Tensor[(540), float64], Tensor[(5, 7, 16), int32], Tensor[(560), int32], Tensor[(13, 2, 16), bool], Tensor[(450), int8], Tensor[(12, 13, 2), float64], Tensor[(312), float64]) */
}

def @func_4364() -> (Tensor[(12, 13, 2), float64], Tensor[(13, 2, 16), float32], Tensor[(9, 10, 6), int16], Tensor[(13, 2, 16), float64]) {
  %882 = @func_1726() /* ty=(Tensor[(12, 13, 2), float64],) */;
  %883 = @func_1960() /* ty=(Tensor[(13, 2, 16), float64],) */;
  %884 = %883.0;
  %885 = cast(%884, dtype="float64") /* ty=Tensor[(13, 2, 16), float64] */;
  %886 = cast(%884, dtype="float64") /* ty=Tensor[(13, 2, 16), float64] */;
  %887 = reshape(%885, newshape=[13, 2, 16]) /* ty=Tensor[(13, 2, 16), float64] */;
  %888 = reshape(%886, newshape=[13, 2, 16]) /* ty=Tensor[(13, 2, 16), float64] */;
  %889 = @func_984(%887, %888) /* ty=(Tensor[(13, 2, 16), float64], Tensor[(13, 2, 16), bool]) */;
  %890 = %889.0;
  %891 = cast(%890, dtype="float32") /* ty=Tensor[(13, 2, 16), float32] */;
  %892 = shape_of(%884, dtype="int32") /* ty=Tensor[(3), int32] */;
  %893 = cast(%884, dtype="float32") /* ty=Tensor[(13, 2, 16), float32] */;
  %894 = dyn.reshape(%891, %892, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %895 = @func_3025() /* ty=(Tensor[(9, 10, 6), int16],) */;
  %896 = @func_2512() /* ty=(Tensor[(13, 2, 16), float64],) */;
  %897 = %882.0;
  %898 = power(%893, %894) /* ty=Tensor[(13, 2, 16), float32] */;
  %899 = %895.0;
  %900 = %896.0;
  (%897, %898, %899, %900)
}

def @func_632(%var_630: Tensor[(9, 10, 6), float64], %var_631: Tensor[(450), int8]) -> (Tensor[(9, 10, 6), float32], Tensor[(9, 10, 6), int32], Tensor[(13, 2, 16), bool], Tensor[(450), int8], Tensor[(13, 2, 16), bool], int8) {
  %927 = fn (%var_591: Tensor[(9, 10, 6), float64], %var_608: Tensor[(450), int8]) -> (Tensor[(9, 10, 6), float32], Tensor[(9, 10, 6), int32], Tensor[(13, 2, 16), bool], Tensor[(450), int8], Tensor[(13, 2, 16), bool], int8) {
    %901 = @func_266() /* ty=(Tensor[(13, 2, 16), bool], Tensor[(9, 10, 6), float64], Tensor[(540), float64]) */;
    %902 = %901.1;
    %903 = cast(%var_591, dtype="float32") /* ty=Tensor[(9, 10, 6), float32] */;
    %904 = shape_of(%902, dtype="int32") /* ty=Tensor[(3), int32] */;
    %905 = cast(%902, dtype="float32") /* ty=Tensor[(9, 10, 6), float32] */;
    %906 = dyn.reshape(%903, %904, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
    %907 = cast(%var_591, dtype="int32") /* ty=Tensor[(9, 10, 6), int32] */;
    %908 = shape_of(%902, dtype="int32") /* ty=Tensor[(3), int32] */;
    %909 = cast(%902, dtype="int32") /* ty=Tensor[(9, 10, 6), int32] */;
    %910 = dyn.reshape(%907, %908, newshape=[]) /* ty=Tensor[(?, ?, ?), int32] */;
    %911 = cast(%var_608, dtype="int8") /* ty=Tensor[(450), int8] */;
    %912 = cast(%var_608, dtype="float64") /* ty=Tensor[(450), float64] */;
    %913 = reshape(%911, newshape=[10, 45]) /* ty=Tensor[(10, 45), int8] */;
    %914 = reshape(%912, newshape=[10, 45]) /* ty=Tensor[(10, 45), float64] */;
    %915 = @func_474(%913, %914) /* ty=(Tensor[(9, 10, 6), float64], Tensor[(540), float64], Tensor[(9, 10, 6), float64], Tensor[(13, 2, 16), bool], Tensor[(10, 45), bool]) */;
    %916 = cast(meta[relay.Constant][48] /* ty=int8 */, dtype="int8") /* ty=int8 */;
    %917 = cast(%var_608, dtype="int8") /* ty=Tensor[(450), int8] */;
    %918 = cast(%902, dtype="float64") /* ty=Tensor[(9, 10, 6), float64] */;
    %919 = reshape(%916, newshape=[]) /* ty=int8 */;
    %920 = reshape(%917, newshape=[5, 15, 6]) /* ty=Tensor[(5, 15, 6), int8] */;
    %921 = reshape(%918, newshape=[540]) /* ty=Tensor[(540), float64] */;
    %922 = @func_410(%919, %920, %921) /* ty=(Tensor[(5, 15, 6), int8], Tensor[(9, 10, 6), float64], Tensor[(540), float64], Tensor[(9, 10, 6), float64], Tensor[(13, 2, 16), bool], Tensor[(9, 10, 6), float64]) */;
    %923 = floor_divide(%905, %906) /* ty=Tensor[(9, 10, 6), float32] */;
    %924 = left_shift(%909, %910) /* ty=Tensor[(9, 10, 6), int32] */;
    %925 = %915.3;
    %926 = %922.4;
    (%923, %924, %925, %var_608, %926, meta[relay.Constant][48] /* ty=int8 */)
  };
  %927(%var_630, %var_631) /* ty=(Tensor[(9, 10, 6), float32], Tensor[(9, 10, 6), int32], Tensor[(13, 2, 16), bool], Tensor[(450), int8], Tensor[(13, 2, 16), bool], int8) */
}

def @func_4649() -> (Tensor[(9, 10, 6), int16],) {
  %928 = @func_4403() /* ty=(Tensor[(13, 2, 16), float32], Tensor[(9, 10, 6), int16]) */;
  %929 = %928.1;
  (%929,)
}

def @func_5343() -> Tensor[(9, 10, 6), int16] {
  @func_5341() /* ty=Tensor[(9, 10, 6), int16] */
}

def @func_5805() -> Tensor[(540), float64] {
  @func_5803() /* ty=Tensor[(540), float64] */
}

def @func_6219(%var_6190: Tensor[(8, 6, 6), bool], %var_6191: Tensor[(8, 6, 6), bool]) -> (Tensor[(8, 6, 6), bool], Tensor[(9, 10, 6), int16], Tensor[(9, 10, 6), bool]) {
  %930 = cast(%var_6191, dtype="bool") /* ty=Tensor[(8, 6, 6), bool] */;
  %931 = shape_of(%var_6190, dtype="int32") /* ty=Tensor[(3), int32] */;
  %932 = cast(%var_6190, dtype="bool") /* ty=Tensor[(8, 6, 6), bool] */;
  %933 = dyn.reshape(%930, %931, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %934 = @func_2137() /* ty=(Tensor[(9, 10, 6), int16],) */;
  %935 = %934.0;
  %936 = cast(%935, dtype="float64") /* ty=Tensor[(9, 10, 6), float64] */;
  %937 = reshape(%936, newshape=[9, 10, 6]) /* ty=Tensor[(9, 10, 6), float64] */;
  %938 = @func_1711(%937) /* ty=(Tensor[(9, 10, 6), bool], Tensor[(9, 10, 6), bool]) */;
  %939 = logical_or(%932, %933) /* ty=Tensor[(8, 6, 6), bool] */;
  %940 = %938.1;
  (%939, %935, %940)
}

def @func_6535() -> Tensor[(2, 14, 7), float64] {
  %941 = cast(meta[relay.Constant][49] /* ty=Tensor[(2, 14, 7), float64] */, dtype="float64") /* ty=Tensor[(2, 14, 7), float64] */;
  asinh(%941) /* ty=Tensor[(2, 14, 7), float64] */
}

def @func_3903() -> Tensor[(9, 10, 6), int16] {
  %943 = fn () -> Tensor[(9, 10, 6), int16] {
    %942 = @func_3025() /* ty=(Tensor[(9, 10, 6), int16],) */;
    %942.0
  };
  %943() /* ty=Tensor[(9, 10, 6), int16] */
}

def @func_6672(%var_6670: Tensor[(2, 11, 7), float64]) -> (Tensor[(2, 11, 7), float64],) {
  @func_6669(%var_6670) /* ty=(Tensor[(2, 11, 7), float64],) */
}

def @func_5868(%var_5867: Tensor[(13, 2, 16), float32]) -> (Tensor[(16, 7, 9), float64], Tensor[(1008), float64], Tensor[(13, 2, 16), int16], Tensor[(12, 13, 2), float64]) {
  %957 = fn (%var_5850: Tensor[(13, 2, 16), float32]) -> (Tensor[(16, 7, 9), float64], Tensor[(1008), float64], Tensor[(13, 2, 16), int16], Tensor[(12, 13, 2), float64]) {
    %944 = cast(meta[relay.Constant][50] /* ty=Tensor[(1008), float64] */, dtype="float64") /* ty=Tensor[(1008), float64] */;
    %945 = reshape(%944, newshape=[1008]) /* ty=Tensor[(1008), float64] */;
    %946 = @func_2811(%945) /* ty=(Tensor[(9, 10, 6), int16], Tensor[(16, 7, 9), float64], Tensor[(1008), float64]) */;
    %947 = @func_4403() /* ty=(Tensor[(13, 2, 16), float32], Tensor[(9, 10, 6), int16]) */;
    %948 = %947.0;
    %949 = cast(%var_5850, dtype="int16") /* ty=Tensor[(13, 2, 16), int16] */;
    %950 = shape_of(%948, dtype="int32") /* ty=Tensor[(3), int32] */;
    %951 = cast(%948, dtype="int16") /* ty=Tensor[(13, 2, 16), int16] */;
    %952 = dyn.reshape(%949, %950, newshape=[]) /* ty=Tensor[(?, ?, ?), int16] */;
    %953 = @func_5332() /* ty=(Tensor[(10, 45), float64], Tensor[(12, 13, 2), float64], Tensor[(12, 13, 2), float64]) */;
    %954 = %946.1;
    %955 = bitwise_xor(%951, %952) /* ty=Tensor[(13, 2, 16), int16] */;
    %956 = %953.1;
    (%954, meta[relay.Constant][50] /* ty=Tensor[(1008), float64] */, %955, %956)
  };
  %957(%var_5867) /* ty=(Tensor[(16, 7, 9), float64], Tensor[(1008), float64], Tensor[(13, 2, 16), int16], Tensor[(12, 13, 2), float64]) */
}

def @func_1100() -> (Tensor[(12, 13, 2), float64], Tensor[(9, 10, 6), float64]) {
  %958 = @func_1078() /* ty=(Tensor[(13, 2, 16), bool], Tensor[(450), int8], Tensor[(540), float64], Tensor[(450), int8], Tensor[(12, 13, 2), float64], Tensor[(1, 312), float64]) */;
  %959 = @func_266() /* ty=(Tensor[(13, 2, 16), bool], Tensor[(9, 10, 6), float64], Tensor[(540), float64]) */;
  %960 = %958.4;
  %961 = %959.1;
  (%960, %961)
}

def @func_858(%var_856: Tensor[(5, 15, 6), int8]) -> (Tensor[(13, 2, 16), bool], Tensor[(54, 10), float64], Tensor[(5, 15, 6), float64]) {
  @func_855(%var_856) /* ty=(Tensor[(13, 2, 16), bool], Tensor[(54, 10), float64], Tensor[(5, 15, 6), float64]) */
}

def @func_6013(%var_6011: Tensor[(300), uint32], %var_6012: Tensor[(450), int8]) -> (Tensor[(9, 10, 6), int16], Tensor[(6, 5, 10), bool], Tensor[(300), uint32], Tensor[(450), int8]) {
  @func_6009(%var_6011, %var_6012) /* ty=(Tensor[(9, 10, 6), int16], Tensor[(6, 5, 10), bool], Tensor[(300), uint32], Tensor[(450), int8]) */
}

def @func_3954() -> (Tensor[(13, 2, 16), bool],) {
  %963 = fn () -> (Tensor[(13, 2, 16), bool],) {
    %962 = @func_370() /* ty=Tensor[(13, 2, 16), bool] */;
    (%962,)
  };
  %963() /* ty=(Tensor[(13, 2, 16), bool],) */
}

def @func_6087() -> Tensor[(13, 2, 16), bool] {
  %964 = fn () -> Tensor[(13, 2, 16), bool] {
    @func_370() /* ty=Tensor[(13, 2, 16), bool] */
  };
  %964() /* ty=Tensor[(13, 2, 16), bool] */
}

def @func_6382() -> Tensor[(9, 10, 6), float64] {
  @func_6380() /* ty=Tensor[(9, 10, 6), float64] */
}

def @func_1608() -> (Tensor[(12, 13, 2), float64],) {
  %967 = fn () -> (Tensor[(12, 13, 2), float64],) {
    %965 = @func_1100() /* ty=(Tensor[(12, 13, 2), float64], Tensor[(9, 10, 6), float64]) */;
    %966 = %965.0;
    (%966,)
  };
  %967() /* ty=(Tensor[(12, 13, 2), float64],) */
}

def @func_6544() -> (Tensor[(540), float64],) {
  @func_6542() /* ty=(Tensor[(540), float64],) */
}

def @func_4818() -> (Tensor[(13, 2, 16), bool], Tensor[(13, 2, 16), float64], Tensor[(13, 2, 16), bool], Tensor[(450), int8]) {
  @func_4816() /* ty=(Tensor[(13, 2, 16), bool], Tensor[(13, 2, 16), float64], Tensor[(13, 2, 16), bool], Tensor[(450), int8]) */
}

def @func_4241() -> (Tensor[(13, 2, 16), float64],) {
  @func_4239() /* ty=(Tensor[(13, 2, 16), float64],) */
}

def @func_7799() -> Tensor[(9, 10, 6), int16] {
  @func_7797() /* ty=Tensor[(9, 10, 6), int16] */
}

def @func_3671() -> Tensor[(13, 2, 16), bool] {
  %968 = fn () -> Tensor[(13, 2, 16), bool] {
    @func_370() /* ty=Tensor[(13, 2, 16), bool] */
  };
  %968() /* ty=Tensor[(13, 2, 16), bool] */
}

def @func_3303(%var_3301: int8, %var_3302: Tensor[(98), int8]) -> (Tensor[(12, 13, 2), float64], Tensor[(7, 14, 1), int8], int8, Tensor[(98), int8]) {
  %976 = fn (%var_3296: int8, %var_3297: Tensor[(98), int8]) -> (Tensor[(12, 13, 2), float64], Tensor[(7, 14, 1), int8], int8, Tensor[(98), int8]) {
    %969 = cast(%var_3296, dtype="int8") /* ty=int8 */;
    %970 = cast(%var_3297, dtype="int8") /* ty=Tensor[(98), int8] */;
    %971 = reshape(%969, newshape=[]) /* ty=int8 */;
    %972 = reshape(%970, newshape=[7, 14, 1]) /* ty=Tensor[(7, 14, 1), int8] */;
    %973 = @func_2498(%971, %972) /* ty=(Tensor[(7, 14, 1), int8], Tensor[(9, 10, 6), float64]) */;
    %974 = @func_3070() /* ty=Tensor[(12, 13, 2), float64] */;
    %975 = %973.0;
    (%974, %975, %var_3296, %var_3297)
  };
  %976(%var_3301, %var_3302) /* ty=(Tensor[(12, 13, 2), float64], Tensor[(7, 14, 1), int8], int8, Tensor[(98), int8]) */
}

def @func_6868(%var_6866: Tensor[(450), int8]) -> (Tensor[(9, 10, 6), int16], int8, Tensor[(450), int8]) {
  %977 = @func_3902() /* ty=Tensor[(9, 10, 6), int16] */;
  %978 = cast(%977, dtype="float64") /* ty=Tensor[(9, 10, 6), float64] */;
  %979 = cast(%var_6866, dtype="int8") /* ty=Tensor[(450), int8] */;
  %980 = reshape(%978, newshape=[9, 10, 6]) /* ty=Tensor[(9, 10, 6), float64] */;
  %981 = reshape(%979, newshape=[450]) /* ty=Tensor[(450), int8] */;
  %982 = @func_629(%980, %981) /* ty=(Tensor[(9, 10, 6), float32], Tensor[(9, 10, 6), int32], Tensor[(13, 2, 16), bool], Tensor[(450), int8], Tensor[(13, 2, 16), bool], int8) */;
  %983 = %982.5;
  (%977, %983, %var_6866)
}

def @func_1459(%var_1360: Tensor[(450), int8], %var_1402: Tensor[(416), float64], %var_1445: Tensor[(312), float64]) -> (Tensor[(9, 10, 6), float32], Tensor[(9, 10, 6), float64], Tensor[(9, 10, 6), float64], Tensor[(450), int8], Tensor[(9, 10, 6), int16], Tensor[(10, 45), bool], Tensor[(9, 10, 6), float64], Tensor[(9, 10, 6), int16], Tensor[(3, 8, 10), int8], Tensor[(13, 2, 16), bool], Tensor[(416), float64], Tensor[(54, 10), float64], Tensor[(9, 10, 6), float64], Tensor[(450), int8], Tensor[(12, 13, 2), float64], Tensor[(312), float64], Tensor[(10, 45), bool]) {
  %984 = @func_1100() /* ty=(Tensor[(12, 13, 2), float64], Tensor[(9, 10, 6), float64]) */;
  %985 = %984.1;
  %986 = cast(%985, dtype="float32") /* ty=Tensor[(9, 10, 6), float32] */;
  %987 = acosh(%986) /* ty=Tensor[(9, 10, 6), float32] */;
  %988 = cast(%987, dtype="float64") /* ty=Tensor[(9, 10, 6), float64] */;
  %989 = reshape(%988, newshape=[9, 10, 6]) /* ty=Tensor[(9, 10, 6), float64] */;
  %990 = @func_158(%989) /* ty=(Tensor[(9, 10, 6), float64], Tensor[(9, 10, 6), float64]) */;
  %991 = cast(%var_1360, dtype="int8") /* ty=Tensor[(450), int8] */;
  %992 = cast(%var_1360, dtype="float64") /* ty=Tensor[(450), float64] */;
  %993 = reshape(%991, newshape=[10, 45]) /* ty=Tensor[(10, 45), int8] */;
  %994 = reshape(%992, newshape=[10, 45]) /* ty=Tensor[(10, 45), float64] */;
  %995 = @func_474(%993, %994) /* ty=(Tensor[(9, 10, 6), float64], Tensor[(540), float64], Tensor[(9, 10, 6), float64], Tensor[(13, 2, 16), bool], Tensor[(10, 45), bool]) */;
  %996 = @func_709() /* ty=(Tensor[(9, 10, 6), int16],) */;
  %997 = @func_575() /* ty=(Tensor[(10, 45), bool], Tensor[(10, 45), float64], Tensor[(5, 15, 6), int8], int8, Tensor[(540), float64], Tensor[(13, 2, 16), float64]) */;
  %998 = @func_1100() /* ty=(Tensor[(12, 13, 2), float64], Tensor[(9, 10, 6), float64]) */;
  %999 = @func_709() /* ty=(Tensor[(9, 10, 6), int16],) */;
  %1000 = @func_1261() /* ty=Tensor[(3, 8, 10), bool] */;
  %1001 = @func_1261() /* ty=Tensor[(3, 8, 10), bool] */;
  %1002 = cast(%1001, dtype="int8") /* ty=Tensor[(3, 8, 10), int8] */;
  %1003 = shape_of(%1000, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1004 = cast(%1000, dtype="int8") /* ty=Tensor[(3, 8, 10), int8] */;
  %1005 = dyn.reshape(%1002, %1003, newshape=[]) /* ty=Tensor[(?, ?, ?), int8] */;
  %1006 = cast(%var_1402, dtype="float64") /* ty=Tensor[(416), float64] */;
  %1007 = cast(%var_1402, dtype="float64") /* ty=Tensor[(416), float64] */;
  %1008 = reshape(%1006, newshape=[13, 2, 16]) /* ty=Tensor[(13, 2, 16), float64] */;
  %1009 = reshape(%1007, newshape=[13, 2, 16]) /* ty=Tensor[(13, 2, 16), float64] */;
  %1010 = @func_984(%1008, %1009) /* ty=(Tensor[(13, 2, 16), float64], Tensor[(13, 2, 16), bool]) */;
  %1011 = cast(%var_1360, dtype="int8") /* ty=Tensor[(450), int8] */;
  %1012 = reshape(%1011, newshape=[5, 15, 6]) /* ty=Tensor[(5, 15, 6), int8] */;
  %1013 = @func_855(%1012) /* ty=(Tensor[(13, 2, 16), bool], Tensor[(54, 10), float64], Tensor[(5, 15, 6), float64]) */;
  %1014 = @func_1100() /* ty=(Tensor[(12, 13, 2), float64], Tensor[(9, 10, 6), float64]) */;
  %1015 = %996.0;
  %1016 = cast(%1015, dtype="float64") /* ty=Tensor[(9, 10, 6), float64] */;
  %1017 = cast(%var_1360, dtype="int8") /* ty=Tensor[(450), int8] */;
  %1018 = reshape(%1016, newshape=[9, 10, 6]) /* ty=Tensor[(9, 10, 6), float64] */;
  %1019 = reshape(%1017, newshape=[450]) /* ty=Tensor[(450), int8] */;
  %1020 = @func_629(%1018, %1019) /* ty=(Tensor[(9, 10, 6), float32], Tensor[(9, 10, 6), int32], Tensor[(13, 2, 16), bool], Tensor[(450), int8], Tensor[(13, 2, 16), bool], int8) */;
  %1021 = cast(%var_1445, dtype="float64") /* ty=Tensor[(312), float64] */;
  %1022 = reshape(%1021, newshape=[12, 13, 2]) /* ty=Tensor[(12, 13, 2), float64] */;
  %1023 = @func_898(%1022) /* ty=(Tensor[(12, 13, 2), float64],) */;
  %1024 = @func_575() /* ty=(Tensor[(10, 45), bool], Tensor[(10, 45), float64], Tensor[(5, 15, 6), int8], int8, Tensor[(540), float64], Tensor[(13, 2, 16), float64]) */;
  %1025 = %990.0;
  %1026 = %995.2;
  %1027 = %997.0;
  %1028 = %998.1;
  %1029 = %999.0;
  %1030 = bitwise_and(%1004, %1005) /* ty=Tensor[(3, 8, 10), int8] */;
  %1031 = %1010.1;
  %1032 = %1013.1;
  %1033 = %1014.1;
  %1034 = %1020.3;
  %1035 = %1023.0;
  %1036 = %1024.0;
  (%987, %1025, %1026, %var_1360, %1015, %1027, %1028, %1029, %1030, %1031, %var_1402, %1032, %1033, %1034, %1035, %var_1445, %1036)
}

def @func_7030() -> (Tensor[(9, 10, 6), float64],) {
  %1037 = @func_6380() /* ty=Tensor[(9, 10, 6), float64] */;
  (%1037,)
}

def @func_4461() -> (Tensor[(9, 10, 6), int16], Tensor[(9, 10, 6), int16], Tensor[(12, 13, 2), float64], Tensor[(9, 10, 6), int16], Tensor[(540), float64], Tensor[(450), int8]) {
  %1052 = fn () -> (Tensor[(9, 10, 6), int16], Tensor[(9, 10, 6), int16], Tensor[(12, 13, 2), float64], Tensor[(9, 10, 6), int16], Tensor[(540), float64], Tensor[(450), int8]) {
    %1038 = @func_3025() /* ty=(Tensor[(9, 10, 6), int16],) */;
    %1039 = @func_2137() /* ty=(Tensor[(9, 10, 6), int16],) */;
    %1040 = @func_1607() /* ty=(Tensor[(12, 13, 2), float64],) */;
    %1041 = @func_3025() /* ty=(Tensor[(9, 10, 6), int16],) */;
    %1042 = cast(meta[relay.Constant][51] /* ty=Tensor[(450), int8] */, dtype="int8") /* ty=Tensor[(450), int8] */;
    %1043 = cast(meta[relay.Constant][51] /* ty=Tensor[(450), int8] */, dtype="float64") /* ty=Tensor[(450), float64] */;
    %1044 = reshape(%1042, newshape=[10, 45]) /* ty=Tensor[(10, 45), int8] */;
    %1045 = reshape(%1043, newshape=[10, 45]) /* ty=Tensor[(10, 45), float64] */;
    %1046 = @func_474(%1044, %1045) /* ty=(Tensor[(9, 10, 6), float64], Tensor[(540), float64], Tensor[(9, 10, 6), float64], Tensor[(13, 2, 16), bool], Tensor[(10, 45), bool]) */;
    %1047 = %1038.0;
    %1048 = %1039.0;
    %1049 = %1040.0;
    %1050 = %1041.0;
    %1051 = %1046.1;
    (%1047, %1048, %1049, %1050, %1051, meta[relay.Constant][51] /* ty=Tensor[(450), int8] */)
  };
  %1052() /* ty=(Tensor[(9, 10, 6), int16], Tensor[(9, 10, 6), int16], Tensor[(12, 13, 2), float64], Tensor[(9, 10, 6), int16], Tensor[(540), float64], Tensor[(450), int8]) */
}

def @func_2139() -> (Tensor[(9, 10, 6), int16],) {
  @func_2137() /* ty=(Tensor[(9, 10, 6), int16],) */
}

def @func_4262() -> (Tensor[(9, 10, 6), float64], Tensor[(9, 10, 6), float64], Tensor[(3, 8, 10), float32]) {
  %1059 = fn () -> (Tensor[(9, 10, 6), float64], Tensor[(9, 10, 6), float64], Tensor[(3, 8, 10), float32]) {
    %1053 = @func_3264() /* ty=(Tensor[(12, 13, 2), float64], Tensor[(9, 10, 6), float64], Tensor[(450), int8]) */;
    %1054 = @func_1100() /* ty=(Tensor[(12, 13, 2), float64], Tensor[(9, 10, 6), float64]) */;
    %1055 = @func_2791() /* ty=(Tensor[(16, 11, 2), bool], Tensor[(3, 8, 10), float32], Tensor[(8, 30), bool], Tensor[(16, 11, 2), float64]) */;
    %1056 = %1053.1;
    %1057 = %1054.1;
    %1058 = %1055.1;
    (%1056, %1057, %1058)
  };
  %1059() /* ty=(Tensor[(9, 10, 6), float64], Tensor[(9, 10, 6), float64], Tensor[(3, 8, 10), float32]) */
}

def @func_5152() -> (Tensor[(3, 8, 10), bool],) {
  @func_5150() /* ty=(Tensor[(3, 8, 10), bool],) */
}

def @func_5150() -> (Tensor[(3, 8, 10), bool],) {
  %1060 = @func_1261() /* ty=Tensor[(3, 8, 10), bool] */;
  (%1060,)
}

def @func_2253(%var_2209: Tensor[(16, 10, 9), float64]) -> (Tensor[(540), float64], Tensor[(16, 10, 9), float32], int8, Tensor[(450, 1), int8]) {
  %1061 = @func_1078() /* ty=(Tensor[(13, 2, 16), bool], Tensor[(450), int8], Tensor[(540), float64], Tensor[(450), int8], Tensor[(12, 13, 2), float64], Tensor[(1, 312), float64]) */;
  %1062 = cast(%var_2209, dtype="float64") /* ty=Tensor[(16, 10, 9), float64] */;
  %1063 = log(%1062) /* ty=Tensor[(16, 10, 9), float64] */;
  %1064 = cast(%1063, dtype="float32") /* ty=Tensor[(16, 10, 9), float32] */;
  %1065 = %1061.2;
  %1066 = cast(%1065, dtype="float64") /* ty=Tensor[(540), float64] */;
  %1067 = cast(meta[relay.Constant][52] /* ty=Tensor[(450, 1), int8] */, dtype="int8") /* ty=Tensor[(450, 1), int8] */;
  %1068 = reshape(%1066, newshape=[9, 10, 6]) /* ty=Tensor[(9, 10, 6), float64] */;
  %1069 = reshape(%1067, newshape=[450]) /* ty=Tensor[(450), int8] */;
  %1070 = @func_629(%1068, %1069) /* ty=(Tensor[(9, 10, 6), float32], Tensor[(9, 10, 6), int32], Tensor[(13, 2, 16), bool], Tensor[(450), int8], Tensor[(13, 2, 16), bool], int8) */;
  %1071 = atanh(%1064) /* ty=Tensor[(16, 10, 9), float32] */;
  %1072 = %1070.5;
  (%1065, %1071, %1072, meta[relay.Constant][52] /* ty=Tensor[(450, 1), int8] */)
}

def @func_4785(%var_4754: Tensor[(240), bool], %var_4757: Tensor[(540), float64]) -> (Tensor[(12, 13, 2), float64], Tensor[(3, 8, 10), bool], Tensor[(240), bool], Tensor[(9, 10, 6), bool], Tensor[(540), float64], Tensor[(9, 10, 6), int16], Tensor[(9, 10, 6), float64]) {
  %1073 = @func_1607() /* ty=(Tensor[(12, 13, 2), float64],) */;
  %1074 = cast(%var_4754, dtype="bool") /* ty=Tensor[(240), bool] */;
  %1075 = cast(%var_4754, dtype="bool") /* ty=Tensor[(240), bool] */;
  %1076 = reshape(%1074, newshape=[3, 8, 10]) /* ty=Tensor[(3, 8, 10), bool] */;
  %1077 = reshape(%1075, newshape=[3, 8, 10]) /* ty=Tensor[(3, 8, 10), bool] */;
  %1078 = @func_3745(%1076, %1077) /* ty=(Tensor[(9, 10, 6), int16], Tensor[(13, 2, 16), float64], Tensor[(16, 8, 5), bool], Tensor[(640), float64], Tensor[(3, 8, 10), float32], Tensor[(3, 8, 10), bool]) */;
  %1079 = cast(%var_4757, dtype="float64") /* ty=Tensor[(540), float64] */;
  %1080 = reshape(%1079, newshape=[9, 10, 6]) /* ty=Tensor[(9, 10, 6), float64] */;
  %1081 = @func_1711(%1080) /* ty=(Tensor[(9, 10, 6), bool], Tensor[(9, 10, 6), bool]) */;
  %1082 = @func_709() /* ty=(Tensor[(9, 10, 6), int16],) */;
  %1083 = %1078.5;
  %1084 = cast(%1083, dtype="bool") /* ty=Tensor[(3, 8, 10), bool] */;
  %1085 = reshape(%1084, newshape=[240]) /* ty=Tensor[(240), bool] */;
  %1086 = @func_4608(%1085) /* ty=(Tensor[(13, 2, 16), float64], Tensor[(240), bool], Tensor[(9, 10, 6), float64]) */;
  %1087 = %1073.0;
  %1088 = %1081.1;
  %1089 = %1082.0;
  %1090 = %1086.2;
  (%1087, %1083, %var_4754, %1088, %var_4757, %1089, %1090)
}

def @func_7165() -> Tensor[(13, 2, 16), bool] {
  @func_7163() /* ty=Tensor[(13, 2, 16), bool] */
}

/* For debugging purposes the metadata section has been omitted.
 * If you would like to see the full metadata section you can set the 
 * option to `True` when invoking `astext`. 
 *//home/yujunzhe/Hirgen_generated/tvm0.8_test/HirGen383/build/output.py:3018: DeprecationWarning: legacy graph executor behavior of producing json / lib / params will be removed in the next release. Please see documents of tvm.contrib.graph_executor.GraphModule for the  new recommended usage.
  graph, lib, params = relay.build(mod, target='llvm')
/home/yujunzhe/tvm/python/tvm/contrib/graph_runtime.py:25: UserWarning: This function has been moved to tvm.contrib.graph_executor and will be removed in the next TVM release
  warnings.warn(

===================================
Traceback (most recent call last):
  File "/home/yujunzhe/Hirgen_generated/tvm0.8_test/HirGen383/build/output.py", line 3023, in <module>
    graph, lib, params = relay.build(mod, target='cuda')
  File "/home/yujunzhe/tvm/python/tvm/relay/build_module.py", line 369, in build
    executor_config, runtime_mod, params = bld_mod.build(
  File "/home/yujunzhe/tvm/python/tvm/relay/build_module.py", line 177, in build
    self._build(mod, target, target_host, executor, mod_name)
  File "/home/yujunzhe/tvm/python/tvm/_ffi/_ctypes/packed_func.py", line 237, in __call__
    raise get_last_ffi_error()
tvm._ffi.base.TVMError: Traceback (most recent call last):
  7: TVMFuncCall
  6: std::_Function_handler<void (tvm::runtime::TVMArgs, tvm::runtime::TVMRetValue*), tvm::relay::backend::RelayBuildModule::GetFunction(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, tvm::runtime::ObjectPtr<tvm::runtime::Object> const&)::{lambda(tvm::runtime::TVMArgs, tvm::runtime::TVMRetValue*)#3}>::_M_invoke(std::_Any_data const&, tvm::runtime::TVMArgs&&, tvm::runtime::TVMRetValue*&&)
  5: tvm::relay::backend::RelayBuildModule::BuildRelay(tvm::IRModule, std::unordered_map<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, tvm::runtime::NDArray, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, tvm::runtime::NDArray> > > const&, tvm::runtime::String)
  4: tvm::build(tvm::runtime::Map<tvm::Target, tvm::IRModule, void, void> const&, tvm::Target const&)
  3: tvm::codegen::Build(tvm::IRModule, tvm::Target)
  2: tvm::runtime::TypedPackedFunc<tvm::runtime::Module (tvm::IRModule, tvm::Target)>::AssignTypedLambda<tvm::runtime::Module (*)(tvm::IRModule, tvm::Target)>(tvm::runtime::Module (*)(tvm::IRModule, tvm::Target), std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >)::{lambda(tvm::runtime::TVMArgs const&, tvm::runtime::TVMRetValue*)#1}::operator()(tvm::runtime::TVMArgs const&, tvm::runtime::TVMRetValue*) const
  1: tvm::codegen::BuildCUDA(tvm::IRModule, tvm::Target)
  0: std::_Function_handler<void (tvm::runtime::TVMArgs, tvm::runtime::TVMRetValue*), TVMFuncCreateFromCFunc::{lambda(tvm::runtime::TVMArgs, tvm::runtime::TVMRetValue*)#2}>::_M_invoke(std::_Any_data const&, tvm::runtime::TVMArgs&&, tvm::runtime::TVMRetValue*&&) [clone .cold]
  File "/home/yujunzhe/tvm/python/tvm/_ffi/_ctypes/packed_func.py", line 81, in cfun
    rv = local_pyfunc(*pyargs)
  File "/home/yujunzhe/tvm/python/tvm/autotvm/measure/measure_methods.py", line 789, in tvm_callback_cuda_compile
    ptx = nvcc.compile_cuda(code, target=target, arch=AutotvmGlobalScope.current.cuda_target_arch)
  File "/home/yujunzhe/tvm/python/tvm/contrib/nvcc.py", line 108, in compile_cuda
    raise RuntimeError(msg)
RuntimeError: 
#ifdef _WIN32
  using uint = unsigned int;
  using uchar = unsigned char;
  using ushort = unsigned short;
  using int64_t = long long;
  using uint64_t = unsigned long long;
#else
  #define uint unsigned int
  #define uchar unsigned char
  #define ushort unsigned short
  #define int64_t long long
  #define uint64_t unsigned long long
#endif
extern "C" __global__ void __launch_bounds__(702) tvmgen_default_fused_reshape_add_kernel0(uint64_t* __restrict__ T_add, uint64_t* __restrict__ placeholder, uint64_t* __restrict__ placeholder1) {
  T_add[(((int)threadIdx.x))] = (placeholder[(((int)threadIdx.x))] + placeholder1[(((int)threadIdx.x))]);
}


Compilation error:
In file included from /usr/local/cuda/bin/../targets/x86_64-linux/include/cuda_runtime.h:82,
                 from <command-line>:
/usr/local/cuda/bin/../targets/x86_64-linux/include/crt/host_config.h:143:2: error: #error -- unsupported GNU version! gcc versions later than 12 are not supported! The nvcc flag '-allow-unsupported-compiler' can be used to override this version check; however, using an unsupported host compiler may cause compilation failure or incorrect run time execution. Use at your own risk.
  143 | #error -- unsupported GNU version! gcc versions later than 12 are not supported! The nvcc flag '-allow-unsupported-compiler' can be used to override this version check; however, using an unsupported host compiler may cause compilation failure or incorrect run time execution. Use at your own risk.
      |  ^~~~~


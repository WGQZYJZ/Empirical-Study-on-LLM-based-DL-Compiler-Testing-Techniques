import tvm
from tvm import relay
from tvm.ir.transform import Sequential
from tvm.contrib import graph_runtime
import numpy as np
mod = tvm.IRModule()
mutated_mod = tvm.IRModule()
var_273 = relay.var("var_273", dtype = "float64", shape = (10, 12, 10))#candidate|273|(10, 12, 10)|var|float64
var_274 = relay.var("var_274", dtype = "float64", shape = (10, 12, 10))#candidate|274|(10, 12, 10)|var|float64
bop_275 = relay.power(var_273.astype('float64'), relay.reshape(var_274.astype('float64'), relay.shape_of(var_273))) # shape=(10, 12, 10)
bop_291 = relay.bitwise_or(var_273.astype('uint16'), relay.reshape(bop_275.astype('uint16'), relay.shape_of(var_273))) # shape=(10, 12, 10)
output = relay.Tuple([bop_291,])
output2 = relay.Tuple([bop_291,])
func_297 = relay.Function([var_273,var_274,], output)
mod['func_297'] = func_297
mod = relay.transform.InferType()(mod)
mutated_mod['func_297'] = func_297
mutated_mod = relay.transform.InferType()(mutated_mod)
func_297_call = mutated_mod.get_global_var('func_297')
var_299 = relay.var("var_299", dtype = "float64", shape = (10, 12, 10))#candidate|299|(10, 12, 10)|var|float64
var_300 = relay.var("var_300", dtype = "float64", shape = (10, 12, 10))#candidate|300|(10, 12, 10)|var|float64
call_298 = func_297_call(var_299,var_300,)
output = call_298
func_301 = relay.Function([var_299,var_300,], output)
mutated_mod['func_301'] = func_301
mutated_mod = relay.transform.InferType()(mutated_mod)
var_307 = relay.var("var_307", dtype = "float32", shape = (5, 1, 13))#candidate|307|(5, 1, 13)|var|float32
uop_308 = relay.tan(var_307.astype('float32')) # shape=(5, 1, 13)
func_297_call = mod.get_global_var('func_297')
func_301_call = mutated_mod.get_global_var('func_301')
var_313 = relay.var("var_313", dtype = "float64", shape = (1200,))#candidate|313|(1200,)|var|float64
call_312 = relay.TupleGetItem(func_297_call(relay.reshape(var_313.astype('float64'), [10, 12, 10]), relay.reshape(var_313.astype('float64'), [10, 12, 10]), ), 0)
call_314 = relay.TupleGetItem(func_301_call(relay.reshape(var_313.astype('float64'), [10, 12, 10]), relay.reshape(var_313.astype('float64'), [10, 12, 10]), ), 0)
func_297_call = mod.get_global_var('func_297')
func_301_call = mutated_mod.get_global_var('func_301')
call_321 = relay.TupleGetItem(func_297_call(relay.reshape(var_313.astype('float64'), [10, 12, 10]), relay.reshape(call_312.astype('float64'), [10, 12, 10]), ), 0)
call_322 = relay.TupleGetItem(func_301_call(relay.reshape(var_313.astype('float64'), [10, 12, 10]), relay.reshape(call_312.astype('float64'), [10, 12, 10]), ), 0)
uop_328 = relay.acosh(uop_308.astype('float32')) # shape=(5, 1, 13)
uop_340 = relay.sinh(uop_328.astype('float32')) # shape=(5, 1, 13)
output = relay.Tuple([call_312,var_313,call_321,uop_340,])
output2 = relay.Tuple([call_314,var_313,call_322,uop_340,])
func_344 = relay.Function([var_307,var_313,], output)
mod['func_344'] = func_344
mod = relay.transform.InferType()(mod)
mutated_mod['func_344'] = func_344
mutated_mod = relay.transform.InferType()(mutated_mod)
func_344_call = mutated_mod.get_global_var('func_344')
var_346 = relay.var("var_346", dtype = "float32", shape = (5, 1, 13))#candidate|346|(5, 1, 13)|var|float32
var_347 = relay.var("var_347", dtype = "float64", shape = (1200,))#candidate|347|(1200,)|var|float64
call_345 = func_344_call(var_346,var_347,)
output = call_345
func_348 = relay.Function([var_346,var_347,], output)
mutated_mod['func_348'] = func_348
mutated_mod = relay.transform.InferType()(mutated_mod)
var_461 = relay.var("var_461", dtype = "uint64", shape = ())#candidate|461|()|var|uint64
var_462 = relay.var("var_462", dtype = "uint64", shape = (1, 11, 5))#candidate|462|(1, 11, 5)|var|uint64
bop_463 = relay.logical_xor(var_461.astype('uint64'), var_462.astype('uint64')) # shape=(1, 11, 5)
output = relay.Tuple([bop_463,])
output2 = relay.Tuple([bop_463,])
func_477 = relay.Function([var_461,var_462,], output)
mod['func_477'] = func_477
mod = relay.transform.InferType()(mod)
var_478 = relay.var("var_478", dtype = "uint64", shape = ())#candidate|478|()|var|uint64
var_479 = relay.var("var_479", dtype = "uint64", shape = (1, 11, 5))#candidate|479|(1, 11, 5)|var|uint64
output = func_477(var_478,var_479,)
func_480 = relay.Function([var_478,var_479,], output)
mutated_mod['func_480'] = func_480
mutated_mod = relay.transform.InferType()(mutated_mod)
const_764 = relay.const([[[6.651366,0.150073,-6.817394,6.155306,-0.898001,-6.698732,9.677774,8.707765],[-2.977407,6.252908,-5.932992,1.468521,-4.531027,1.333204,9.379418,-7.908818],[6.378998,-9.648105,-7.407435,3.439314,-6.263447,-1.237016,-3.112679,-1.685148],[0.968880,-0.954625,9.022749,1.788651,-0.604448,-0.626097,8.329252,-0.286289],[-7.217091,6.882116,-0.855885,-1.535522,-9.595750,-0.792313,-3.084457,5.178334],[-5.419895,0.722435,-2.803882,-7.825417,4.284311,-8.178822,7.741218,7.301732],[3.716144,-6.833192,1.317738,-1.779568,0.893857,1.539479,9.662961,-7.849424],[-2.008336,4.841122,-6.144860,8.192524,-7.470702,7.939860,-6.407476,-9.507928],[4.250630,1.273656,6.928625,-3.447273,7.431220,-9.734842,6.638005,-0.387444],[-9.719439,-3.793459,3.070633,5.643717,8.061007,-0.646864,1.618460,0.146031],[5.000729,-3.343759,2.291235,-4.078195,-8.696343,9.458035,0.772997,0.655923],[-5.704130,-3.770476,-7.102988,2.740035,-5.016052,7.461522,-1.761120,-7.113272],[-0.613713,-2.993189,-8.763844,-9.577209,2.209053,-3.863252,1.554553,1.817230],[9.278324,-7.582244,4.147887,5.412450,9.305576,5.599428,6.159316,1.676810],[-5.573612,3.886036,-6.364338,8.543894,-1.451367,-8.959071,-7.237764,9.295036],[-9.951767,9.248979,4.880500,1.451959,7.071340,3.914226,9.022530,-8.525729]],[[-2.041697,-5.401683,6.877937,5.118142,6.734277,-6.272203,7.028117,8.545651],[6.117788,9.092002,0.311004,1.336421,3.274268,7.569665,9.302076,0.403443],[-2.126495,3.588206,4.549463,9.165974,-4.019164,-3.929407,1.487071,4.934485],[-3.122779,8.250492,-1.297936,0.887172,6.852227,-1.151040,-1.122054,8.272604],[5.579128,3.021473,9.651404,0.749339,-8.262497,4.945896,9.812359,-7.781022],[9.765364,8.251550,-5.106127,5.662538,4.634528,-3.106596,8.020975,-0.195011],[-1.154147,-2.015226,-5.077447,-0.042310,4.500912,-7.111642,-2.436367,0.811092],[7.305922,4.527404,0.188716,9.298745,-5.359948,-2.587070,7.949963,-5.877157],[-8.092758,1.076361,-8.593681,3.127439,3.606999,-0.762336,-9.416965,7.535596],[-5.664060,0.735433,-7.744663,8.101201,6.077473,-9.584068,-6.174024,-5.459155],[8.637988,-0.482018,1.296292,-7.551201,0.863124,4.314458,-0.811014,8.251021],[8.981622,-6.577723,-5.886124,5.293979,6.749703,-0.854994,-4.168228,7.902448],[3.485938,-4.461553,2.219524,1.967577,8.600208,6.288956,-9.668630,1.948377],[7.426964,6.062762,9.471296,4.501961,-0.422896,-0.167400,3.464623,4.297301],[0.984807,5.699271,-7.811527,-5.463830,8.596950,3.486057,-6.972690,-1.191111],[-9.948679,9.865651,-0.692801,-5.913642,2.014855,0.733471,-8.968644,9.174327]],[[-5.228429,5.014546,4.695009,0.836904,2.008380,-1.251550,4.579869,6.194278],[-7.179612,0.243653,-4.666854,-1.246546,-9.820564,-0.796884,-7.856618,0.968902],[-0.887642,7.317808,-1.173175,4.704931,1.689866,2.333726,-7.546981,-9.972000],[-6.051804,5.402798,9.436224,-5.393237,9.910182,9.529644,-0.583473,8.198992],[2.146622,-1.052296,3.389462,4.605644,-8.202829,9.177997,0.605003,8.280046],[1.454632,-5.819999,-1.289581,-0.395786,9.452011,3.744842,-8.237262,4.987047],[2.497100,7.232336,5.807775,2.592404,-8.797916,-8.130893,-6.944299,8.273592],[-4.230328,4.183550,-5.667480,-9.246526,6.053310,1.736755,-6.470734,5.956408],[-9.183159,-1.743305,5.740861,8.457495,-5.920208,5.895531,-6.951522,-2.885472],[2.919491,1.051252,-9.974414,2.380396,-8.017345,3.302559,8.057022,-5.415999],[-9.329268,2.432635,2.017818,8.254320,-7.709635,-7.264143,4.064676,7.768862],[-0.033885,-0.095382,8.902308,-4.558603,-5.092003,-0.239962,-5.900239,0.385991],[-0.648833,-4.397711,-0.518785,6.173056,9.359593,4.465489,4.702277,1.976756],[3.985831,-6.924087,8.140602,-3.804192,-8.968146,-3.273732,-2.605782,2.732199],[-6.005421,-7.355398,9.058683,-8.499392,3.204468,0.305559,-2.867563,4.001532],[-4.098331,-9.350752,-8.007199,1.791444,-9.493930,-7.805180,-8.841047,4.242463]],[[2.218756,8.272003,9.730819,4.358951,9.424147,2.328336,3.758809,4.675143],[-9.855541,-8.674337,1.029988,-8.361519,1.876463,-8.294642,-8.819242,-3.135659],[4.045228,9.126411,4.804036,4.815233,4.187840,5.838797,5.109904,1.885192],[-2.272661,2.609141,2.488819,8.039917,-0.581074,-8.345063,2.868499,-6.747342],[-9.971494,-0.128777,2.222802,-6.310672,-8.939375,4.040477,3.719451,-7.681502],[-0.857236,6.424086,7.587000,-1.357679,-7.309684,-0.308432,-3.629270,-7.435151],[-3.022485,-2.823639,-7.675534,5.410903,-0.799127,6.917744,2.302905,-7.814285],[7.719208,5.647289,-4.496497,-1.064587,5.349649,5.995512,7.335043,-4.708326],[-4.454640,4.938718,-5.946761,9.779263,-7.814048,-0.989672,-9.037635,6.760334],[-0.095093,-4.448038,4.493876,7.633766,-4.414979,-6.228781,-0.917528,2.876332],[4.210369,7.687157,4.248870,2.107395,3.904236,4.155522,-6.325693,3.125369],[-4.383634,9.750204,-3.989437,-4.902707,8.712241,0.277949,8.463288,-5.742470],[8.157554,-6.365667,8.769006,-9.061708,7.970735,-0.627655,5.497513,-7.164218],[-3.421293,6.630140,-8.404379,7.980999,-7.045436,9.736764,4.323162,-8.060162],[-1.479538,-3.041838,-3.188886,-0.202724,-7.330790,0.403290,9.064573,0.200527],[-2.863890,-4.573250,-8.766756,-0.871910,-5.303723,1.311906,-1.464378,5.023012]],[[-3.091733,-4.363056,-1.615396,0.227199,9.232615,-8.754067,-0.995713,-7.874367],[-5.750463,-0.644693,-3.551161,4.956345,-0.708471,7.659643,9.921004,8.484367],[-1.952194,-0.478035,8.137558,3.211459,1.968909,9.083405,-6.371835,-0.512892],[-9.899586,1.754657,0.117415,-7.741621,1.523259,-6.352036,-0.664043,9.240838],[6.881384,4.060085,3.441877,-3.421626,8.957823,-8.262376,2.997027,-3.067113],[7.664985,8.057363,1.105205,0.982845,6.564988,1.031979,2.001444,-6.948504],[-2.782754,8.724612,-1.438233,-2.756401,5.097730,2.472000,7.380652,0.058842],[-3.672126,-1.362624,-3.290508,-6.280098,4.437419,3.379640,-2.344535,-3.393085],[7.642634,-5.711804,2.976817,9.714257,-7.196783,7.988892,8.025081,-8.674557],[0.071660,7.245627,-7.716211,8.741002,3.883799,5.021279,-7.516192,-5.580740],[3.992580,-6.888919,-3.948317,-8.590789,-3.437591,-6.249635,-9.917676,7.765839],[9.032814,0.020111,5.330904,-1.850208,8.340400,-3.023163,8.138803,6.740910],[-9.563827,7.624430,-1.190172,2.647156,2.279450,-6.314294,-6.435281,-3.531015],[-5.093687,-6.780842,-1.551810,-5.337366,-1.409646,-5.363846,9.275875,-9.502055],[7.651897,-6.978392,4.795494,-8.064071,-8.386543,-8.516847,7.776193,-1.895698],[-4.007841,1.317239,8.246570,-4.644554,-0.919151,5.792208,9.492406,9.954571]],[[5.837133,-8.212289,1.696928,-0.623133,5.183975,6.222069,1.086137,-7.701993],[-5.016476,-8.168004,9.534659,9.429671,6.138802,1.719140,-4.573521,5.629993],[4.897597,3.503707,8.692183,-4.899823,-6.532464,3.919400,0.217766,-8.982462],[7.693654,-5.325255,4.363657,-9.232846,-2.400609,2.731357,3.388607,0.215753],[-5.332789,2.012657,-0.060773,-3.837199,9.209823,-0.244825,8.806482,-2.881288],[0.221286,4.025715,-3.798529,-9.371791,-6.463189,-9.365177,-2.321768,-2.212903],[-9.710686,-9.467557,5.022781,4.122348,-3.703875,1.052657,-6.066159,-1.930254],[-6.861818,9.427160,-9.818165,-3.372028,2.069349,-1.646507,-0.649332,9.354281],[-3.958384,9.940524,-0.982244,0.187921,-8.861248,6.939810,-4.050300,-1.868876],[4.093298,-4.529931,6.937567,-0.567772,1.326400,2.099220,1.605716,-9.938788],[-3.726458,0.794284,-7.295752,-5.384769,-8.132928,-2.002440,0.550903,2.723009],[-0.010860,-6.774094,-0.745203,-0.621185,5.700257,9.830731,-9.483190,4.002277],[2.520170,-8.089429,6.962473,-9.681435,-0.353116,-1.806161,-4.358771,-1.402986],[8.712516,-3.515511,-8.848346,0.591404,-0.995407,-4.393079,-9.669828,-6.500289],[8.893244,-2.252969,1.171763,-2.659585,0.024667,5.240382,-4.588632,-8.626310],[1.277334,-4.614530,5.920843,6.788155,-4.557942,1.970084,3.640494,7.784532]],[[-8.783019,7.070498,-9.110433,1.188625,9.698286,5.560783,-8.289401,3.457536],[3.989152,5.414800,-8.862363,-6.598080,3.404339,8.275399,2.302535,7.716356],[-8.557569,9.443711,-8.903196,-5.426135,-4.418425,8.889085,9.283228,-3.147497],[-0.883261,-4.430287,-7.700974,-1.873203,-7.235212,3.682373,-6.825451,5.635391],[6.305832,4.243940,3.573432,2.717479,-5.843143,-1.405459,-6.530563,-0.839639],[2.476783,7.162472,3.793595,8.669030,2.901383,-2.132078,7.011459,3.700173],[-8.015792,-3.546522,-0.479711,9.763584,-3.187808,2.029463,-6.082611,-3.200366],[-3.317224,-4.300366,9.237614,7.980813,-9.002772,-1.800165,3.894908,-3.654273],[-7.909477,6.525542,1.236662,5.153687,-9.103102,-9.796479,-0.154820,-6.439369],[-7.744478,7.409733,-4.550156,-6.516088,-5.542248,-3.787077,-2.983852,0.826972],[4.991113,-8.904989,-0.181754,0.808843,-7.091097,4.603832,-4.738227,1.988186],[-7.523374,-2.800925,2.130872,1.665670,5.946440,2.994883,9.230539,-3.646982],[1.832188,7.356157,7.975451,-9.569381,-3.636806,-8.929255,-4.434719,6.573382],[-3.176244,2.797208,-9.863228,2.985807,9.093328,-1.979815,-8.734066,2.306062],[0.180437,8.280169,0.141624,-9.126035,8.106091,-7.238624,-4.224690,0.572251],[0.981038,-1.894844,3.882846,3.892597,-5.757729,1.377815,9.231595,-4.720594]],[[8.300343,1.688955,3.404647,-8.552017,-7.170313,-1.441708,-6.645593,-1.259293],[8.426775,-7.773865,-7.013342,4.162304,5.996105,1.770981,3.476825,3.771593],[6.976425,-7.099138,-9.075726,-0.966995,9.336753,4.684777,-9.208754,-0.347508],[-8.353159,-0.568937,-4.446207,5.074230,9.076191,-8.800788,-9.406981,0.087700],[-3.495295,-4.877469,7.126257,-3.752510,-1.666750,-7.149306,7.852847,-1.620529],[3.376581,-2.939257,-4.148470,9.217624,4.024494,-4.025919,2.426454,7.622292],[4.692906,-6.390553,-8.534772,-3.816748,-6.396459,8.605075,9.923754,0.612751],[8.674372,-3.667268,8.844776,0.885536,-5.511487,-0.047543,1.524110,9.963679],[-2.603282,0.823994,-7.234480,6.467700,6.874419,-8.304011,-5.697231,0.133276],[-0.717150,7.760707,-3.173313,-6.477905,-8.749747,-4.003178,-8.874477,5.615168],[-5.582365,-2.058644,-0.995429,1.725946,-9.595243,-1.338866,-7.154585,-4.137538],[9.407263,-8.874229,-1.219646,-0.720315,-6.750760,6.591552,8.189646,4.919770],[4.933621,-1.633016,0.563839,3.554920,-2.181236,-7.709197,-3.315699,9.769863],[-3.755895,0.341931,-6.764636,6.154679,-3.569186,4.390164,6.389005,8.677592],[-5.814762,-3.186382,-2.329863,-1.228407,5.302460,5.661686,7.921798,-7.486742],[-8.188574,3.996606,6.588685,1.188201,5.952814,7.021952,3.463536,5.751847]],[[5.044382,4.130720,-6.115966,-9.817870,-7.839616,0.658976,-7.791299,1.200182],[9.603817,5.532727,-4.440800,-1.092119,2.903160,-4.699594,0.786768,1.626570],[-5.466920,-5.690928,-7.327941,-2.033883,-1.526572,-8.097067,0.597302,2.760836],[-5.920367,-1.772818,-3.784783,-6.299611,-4.805217,-7.652313,1.665164,-2.548419],[4.300447,-5.202836,2.695336,-9.907231,-5.426382,-2.482672,0.759074,-6.655977],[-9.670339,-7.326549,3.265545,7.795147,6.573288,6.554373,5.925673,-4.842828],[-1.702103,-8.535319,-0.326099,8.952391,6.038390,-7.000187,-8.125015,0.199451],[2.060949,1.413825,-6.303260,2.773415,-4.979928,-7.437523,-2.269940,-1.430261],[7.681591,2.303972,-7.757237,-9.445921,-1.512305,-2.077658,9.395304,-6.868794],[1.185632,-0.609869,-3.802830,0.453174,-0.088149,-4.989753,3.829001,-0.054884],[8.605932,-7.687060,-3.168726,7.814348,9.166292,2.793822,6.500496,-0.621286],[9.381861,9.530590,-3.131292,9.638583,-9.698052,8.289077,-7.871133,9.513883],[8.085287,4.463586,-9.083538,3.897101,-0.364385,7.269904,-6.735760,-4.697022],[-9.621149,8.943151,5.876034,7.793985,-4.524871,8.567567,-3.276139,-4.882163],[-8.887933,-6.653426,-2.135301,-4.648278,-2.218535,5.894734,1.795882,7.382826],[7.300295,-5.282222,4.789186,-4.494392,2.330492,-9.396151,-4.055590,1.150018]],[[3.807833,-5.556591,4.160832,-0.216682,-8.534122,-8.479189,-6.232449,3.485260],[-5.098158,-7.343520,8.221030,1.125587,-3.399811,7.176327,-9.257865,1.600136],[-0.612300,-0.698492,-1.350863,2.107251,-0.538197,9.927778,0.445206,-3.524540],[-4.096731,3.733105,4.248002,-1.118040,6.412655,4.681573,1.313731,8.681797],[-1.914205,0.321168,-5.644355,6.601181,7.931250,6.652538,4.381536,-8.628008],[-0.024196,8.341620,0.669079,2.496564,4.221206,-3.743010,5.652356,-8.076125],[7.769478,1.916426,3.480567,-6.336042,6.186409,1.698177,5.310539,-5.935253],[-4.316225,-5.838433,-5.151916,-9.813466,-7.334673,-2.955515,-0.131012,7.671665],[-5.338684,8.740707,1.533416,-4.091789,-1.644567,5.124974,-6.469334,4.775006],[4.893774,-7.737125,-2.221073,-6.507220,5.657863,-3.550893,8.222519,-0.013119],[-3.121042,1.537457,8.720502,-5.394209,-9.716055,-0.532345,-6.584285,6.852143],[4.897261,9.728148,-7.314258,-5.803292,-5.117416,7.477773,-7.405982,1.901754],[9.859153,-8.546216,5.083791,-3.551687,-4.159204,-3.356723,6.671920,-0.519219],[5.669576,-6.942651,3.623914,8.576718,2.232259,-2.601532,-9.128776,3.334867],[-4.495268,1.932778,-9.753226,3.091156,-4.279071,5.296783,6.285004,-2.224223],[0.815348,-1.261983,9.927060,-3.222612,-9.898699,-1.010810,8.418829,9.584792]],[[0.017137,8.191421,-5.361481,-4.174402,-6.563816,-3.704352,8.653520,-7.307472],[3.896703,-9.076304,-7.419249,-3.968374,9.494690,-2.699285,-1.300189,-3.368867],[-9.776368,8.032614,0.267654,9.804545,-6.201446,1.078169,-2.613804,-4.001858],[4.860257,-6.853859,-0.138059,-2.529462,6.700043,-8.964460,-4.842326,8.919104],[-7.035385,-3.436078,-0.667897,8.563727,6.826707,-0.909221,-2.350623,-3.516377],[6.447541,3.490215,3.064439,9.571514,-6.938575,-0.288015,7.895169,8.738365],[-8.148127,4.551513,6.888115,8.436204,5.992127,-6.976190,2.156593,1.418337],[9.628486,-9.271814,0.874645,9.483280,3.660596,-5.057291,3.456346,-0.905963],[4.469412,-0.829899,-4.448917,-1.770609,-2.142937,7.956350,1.188750,-3.728135],[5.090584,5.099136,3.634433,6.607351,-3.071146,4.910456,2.720992,9.257151],[6.065085,-8.564934,-6.813308,4.806330,6.772676,-4.200720,-5.305498,-8.324819],[9.108257,-7.068225,-9.178819,6.111568,2.001908,9.942292,-7.294440,-8.202274],[-6.992151,5.223505,7.952873,9.946883,9.658291,9.288623,7.978487,9.434930],[5.464447,4.778949,7.826267,-1.104531,7.486137,-1.514194,-8.375274,0.035735],[1.358032,0.464971,7.181012,9.433264,-7.640504,-0.964099,-6.613849,-9.011497],[1.137829,-6.658808,-2.933256,-2.644140,-6.204824,0.447369,7.959715,9.252804]],[[1.744239,4.925196,-6.977911,0.543787,8.150660,-6.251749,-2.781936,5.576905],[-7.432593,-3.044542,-6.013867,-3.366875,9.098143,8.682156,-5.439478,6.312468],[-4.254676,-3.038545,-3.794338,1.512925,-6.733487,7.645333,0.770555,-9.279928],[-7.122862,-7.750400,3.480203,0.602492,4.199501,5.736007,-2.987732,7.448084],[7.771209,3.215691,-3.237125,6.174372,-9.485898,5.311327,1.382670,7.264032],[-7.725085,-0.160629,-0.083758,8.405230,7.570967,8.230635,8.526335,-9.437712],[-2.102784,-9.405458,-4.790907,0.516176,2.890113,-8.436445,0.033987,-4.203743],[-0.756404,5.551455,3.008798,-2.681449,-3.375731,-7.216816,-0.470131,-1.764708],[-3.765956,9.786726,6.614546,2.759676,4.748368,3.769884,0.215767,0.615323],[4.510864,-6.601095,9.559100,1.778144,-8.934886,2.057402,-3.973060,6.201850],[6.661578,9.497897,-2.017341,8.476465,2.903054,-9.907742,-7.241433,-6.572032],[-1.179383,-9.555032,7.640578,3.039899,4.620392,-8.315906,8.507774,-5.248366],[7.043046,7.996397,-2.753664,4.758667,9.453926,-8.916568,6.171559,5.089139],[1.555592,5.063785,4.207856,-4.778508,-2.368333,-9.583899,0.622879,-5.501995],[2.919923,-5.284649,-3.861507,3.604771,3.168504,2.474340,-2.586816,-9.253801],[7.419285,-5.784276,7.048626,3.031663,7.728521,8.723859,3.226632,0.119314]],[[7.009377,-7.835629,-1.700533,8.456758,-8.760307,-5.098349,-7.205621,-5.491943],[5.858079,-8.390058,-9.538175,-2.230662,-0.149866,-5.122230,9.711931,-9.678707],[3.009319,-7.095874,-8.015922,6.548800,-9.771785,8.699119,-2.149814,-2.466502],[-6.714336,-1.319428,3.287395,-0.977776,-7.935875,3.097809,0.683899,-0.049912],[-3.010322,-8.336112,0.763323,9.368748,5.116575,-4.552786,2.702810,6.818391],[1.927231,-6.781696,-4.558217,-0.573002,4.552829,-4.212943,5.691383,3.372055],[9.404720,-0.723533,4.951570,1.560808,-2.577949,-3.745525,-4.063588,3.049953],[-4.837365,-4.629393,2.394132,0.299596,-7.240024,7.489650,3.643963,-6.240320],[-3.266371,7.003872,-9.495639,-9.382226,-3.337203,-2.268494,4.012508,-2.348738],[2.241291,-5.507875,-6.388751,2.172239,-1.930175,-7.633681,3.840545,-8.126473],[-2.982360,2.280822,-7.813081,9.797524,9.116755,-4.552091,-1.203564,-9.558055],[9.853160,-6.866653,-4.000503,0.981966,-4.328227,-4.345098,-4.088388,0.665651],[-2.104926,3.473609,-9.933046,5.156630,1.384752,-1.878304,6.431359,8.370035],[-5.454498,-9.998047,-4.898785,5.093244,4.063882,-9.596397,-1.865663,-0.809473],[6.316222,-6.776516,9.294653,4.357327,2.744963,-8.469565,-5.789887,5.992823],[8.607934,9.617454,4.867511,-3.724989,8.038860,-5.892376,-5.712848,-6.636372]],[[4.243066,7.142690,6.912034,3.778060,4.141402,9.337027,0.004240,-4.160314],[-9.338509,-7.556761,-3.937396,-0.862702,-4.680344,5.498656,-0.628023,-0.971548],[-4.091121,-5.453366,-9.190019,-1.516294,6.440030,6.041995,6.107773,1.973283],[4.773532,2.586276,-5.188413,7.633507,7.024984,3.297131,5.754101,0.686903],[1.238369,1.625686,0.228628,9.874516,4.328369,5.511356,-2.542119,-5.883716],[4.665506,4.947327,2.749588,-3.804902,-1.168535,-4.315776,6.040167,3.956633],[3.522838,-3.706442,6.765887,8.570420,-4.594660,5.408331,7.575809,-4.005369],[6.168929,-4.522056,1.589610,9.860268,-3.182602,9.462880,5.688764,8.401134],[3.410850,7.090727,0.218070,6.394202,-9.680396,6.896153,-0.385003,-5.198798],[2.114818,-1.951892,5.833381,-2.085872,-0.780887,5.406439,9.233441,-7.935338],[-2.351453,7.244492,9.384395,1.442601,6.836182,2.343223,-0.831987,2.642806],[6.665260,-2.067146,-8.219552,-0.975799,-2.307537,-4.983886,-7.970664,-3.401109],[5.579658,8.210621,-2.458567,-9.151332,4.227462,0.168004,2.615219,6.746713],[6.855559,4.373858,2.418762,-3.427619,1.838293,3.799601,7.555921,-6.856867],[9.337475,2.305196,-8.996859,9.602529,-0.920617,1.152906,0.001317,-2.710043],[5.222456,-3.420189,7.513121,-5.375816,-7.764717,2.161743,-0.414116,-2.848154]],[[8.799572,1.677172,9.140263,5.868258,-7.889815,5.601129,0.927742,-1.107218],[7.917839,4.694715,6.690577,5.529199,6.285212,9.951170,-1.357488,5.791095],[-4.594997,6.621513,1.502963,5.269276,5.678810,-8.939385,-1.576128,0.755046],[8.406453,-2.563260,8.795436,-1.082255,-4.602777,-7.639320,7.533771,-3.607438],[-8.709495,0.126371,-4.487156,2.627585,9.400686,9.847200,-9.524830,4.586380],[8.442205,-0.844237,8.372431,-4.371336,0.745173,-6.649843,-0.821127,-8.359314],[-7.097588,4.663677,-9.917804,7.521282,-5.272710,4.487349,4.296795,-8.113129],[-5.726028,2.877632,-3.413992,-9.497258,-5.558987,-5.927045,7.296530,-6.842834],[7.705449,9.041463,-1.385081,1.322759,8.859744,-1.799517,-6.854306,4.166267],[3.928508,-8.761110,-2.194540,8.361478,-5.542129,-1.312947,-1.703983,9.275096],[-1.406677,6.689644,1.823867,3.531674,8.078523,-2.839087,-7.698914,7.574274],[-6.216613,7.277321,-1.805206,-2.978148,3.610215,-0.420571,8.406170,8.561407],[-3.198328,-5.385605,8.271334,-4.157700,6.449991,-2.059969,7.983539,-4.533883],[-7.961833,-2.177639,-9.530703,2.035579,4.073133,-3.317668,1.885734,-9.626201],[-7.256458,-9.986365,-7.098036,9.895928,4.591573,-1.926376,2.833678,-2.309698],[-2.194065,-8.674915,9.898652,-8.784016,9.848720,0.737378,-5.901452,1.575900]]], dtype = "float64")#candidate|764|(15, 16, 8)|const|float64
uop_765 = relay.log(const_764.astype('float64')) # shape=(15, 16, 8)
func_344_call = mod.get_global_var('func_344')
func_348_call = mutated_mod.get_global_var('func_348')
var_775 = relay.var("var_775", dtype = "float32", shape = (13, 5))#candidate|775|(13, 5)|var|float32
var_776 = relay.var("var_776", dtype = "float64", shape = (1200,))#candidate|776|(1200,)|var|float64
call_774 = relay.TupleGetItem(func_344_call(relay.reshape(var_775.astype('float32'), [5, 1, 13]), relay.reshape(var_776.astype('float64'), [1200,]), ), 1)
call_777 = relay.TupleGetItem(func_348_call(relay.reshape(var_775.astype('float32'), [5, 1, 13]), relay.reshape(var_776.astype('float64'), [1200,]), ), 1)
output = relay.Tuple([uop_765,call_774,var_775,var_776,])
output2 = relay.Tuple([uop_765,call_777,var_775,var_776,])
func_780 = relay.Function([var_775,var_776,], output)
mod['func_780'] = func_780
mod = relay.transform.InferType()(mod)
var_781 = relay.var("var_781", dtype = "float32", shape = (13, 5))#candidate|781|(13, 5)|var|float32
var_782 = relay.var("var_782", dtype = "float64", shape = (1200,))#candidate|782|(1200,)|var|float64
output = func_780(var_781,var_782,)
func_783 = relay.Function([var_781,var_782,], output)
mutated_mod['func_783'] = func_783
mutated_mod = relay.transform.InferType()(mutated_mod)
const_1098 = relay.const(-5, dtype = "uint32")#candidate|1098|()|const|uint32
var_1099 = relay.var("var_1099", dtype = "uint32", shape = (1, 1, 4))#candidate|1099|(1, 1, 4)|var|uint32
bop_1100 = relay.maximum(const_1098.astype('uint32'), var_1099.astype('uint32')) # shape=(1, 1, 4)
output = relay.Tuple([bop_1100,])
output2 = relay.Tuple([bop_1100,])
func_1105 = relay.Function([var_1099,], output)
mod['func_1105'] = func_1105
mod = relay.transform.InferType()(mod)
mutated_mod['func_1105'] = func_1105
mutated_mod = relay.transform.InferType()(mutated_mod)
var_1106 = relay.var("var_1106", dtype = "uint32", shape = (1, 1, 4))#candidate|1106|(1, 1, 4)|var|uint32
func_1105_call = mutated_mod.get_global_var('func_1105')
call_1107 = func_1105_call(var_1106)
output = call_1107
func_1108 = relay.Function([var_1106], output)
mutated_mod['func_1108'] = func_1108
mutated_mod = relay.transform.InferType()(mutated_mod)
var_1304 = relay.var("var_1304", dtype = "uint64", shape = (10, 9, 10))#candidate|1304|(10, 9, 10)|var|uint64
var_1305 = relay.var("var_1305", dtype = "uint64", shape = (10, 9, 10))#candidate|1305|(10, 9, 10)|var|uint64
bop_1306 = relay.less_equal(var_1304.astype('bool'), relay.reshape(var_1305.astype('bool'), relay.shape_of(var_1304))) # shape=(10, 9, 10)
func_1105_call = mod.get_global_var('func_1105')
func_1108_call = mutated_mod.get_global_var('func_1108')
const_1322 = relay.const([[7,4],[1,-5]], dtype = "uint32")#candidate|1322|(2, 2)|const|uint32
call_1321 = relay.TupleGetItem(func_1105_call(relay.reshape(const_1322.astype('uint32'), [1, 1, 4])), 0)
call_1323 = relay.TupleGetItem(func_1108_call(relay.reshape(const_1322.astype('uint32'), [1, 1, 4])), 0)
output = relay.Tuple([bop_1306,call_1321,const_1322,])
output2 = relay.Tuple([bop_1306,call_1323,const_1322,])
func_1327 = relay.Function([var_1304,var_1305,], output)
mod['func_1327'] = func_1327
mod = relay.transform.InferType()(mod)
var_1328 = relay.var("var_1328", dtype = "uint64", shape = (10, 9, 10))#candidate|1328|(10, 9, 10)|var|uint64
var_1329 = relay.var("var_1329", dtype = "uint64", shape = (10, 9, 10))#candidate|1329|(10, 9, 10)|var|uint64
output = func_1327(var_1328,var_1329,)
func_1330 = relay.Function([var_1328,var_1329,], output)
mutated_mod['func_1330'] = func_1330
mutated_mod = relay.transform.InferType()(mutated_mod)
var_1340 = relay.var("var_1340", dtype = "float32", shape = (5, 6, 14))#candidate|1340|(5, 6, 14)|var|float32
uop_1341 = relay.acos(var_1340.astype('float32')) # shape=(5, 6, 14)
var_1345 = relay.var("var_1345", dtype = "float32", shape = (5, 6, 14))#candidate|1345|(5, 6, 14)|var|float32
bop_1346 = relay.greater(uop_1341.astype('bool'), relay.reshape(var_1345.astype('bool'), relay.shape_of(uop_1341))) # shape=(5, 6, 14)
uop_1361 = relay.log(var_1345.astype('float32')) # shape=(5, 6, 14)
func_780_call = mod.get_global_var('func_780')
func_783_call = mutated_mod.get_global_var('func_783')
const_1377 = relay.const([8.022079,-1.708652,-9.173393,0.435005,-3.664813,1.636671,-1.900275,5.490246,-7.033090,-3.116013,-5.893941,-5.243471,-8.366798,-2.528941,1.927430,-2.539021,-5.134075,2.592493,-7.081277,-9.724179,9.243653,5.060089,5.404784,7.322128,-1.064260,9.667384,-5.961544,-6.851318,-7.836853,-6.635994,-4.525603,-0.617338,-2.954155,0.392577,2.339311,7.684417,4.145369,-4.913963,6.623953,-9.524705,2.525050,-6.631897,9.773985,-3.190864,5.364831,-1.504943,4.428488,-9.652828,-8.757563,-1.941923,-6.094720,-9.349713,-6.674506,-4.560083,2.623258,-5.336007,-2.000217,-3.609156,7.313419,0.609075,-7.909885,-4.173773,1.272762,2.905562,5.507666], dtype = "float32")#candidate|1377|(65,)|const|float32
const_1378 = relay.const([7.933007,-6.558219,0.135184,0.604522,-1.902524,8.277255,7.049156,8.014316,2.341279,-4.607382,2.047125,7.459374,-4.983739,-6.215196,-5.844821,9.905294,4.927581,9.787268,2.516346,-4.044862,-0.957315,7.002282,-3.258084,8.210970,-7.148148,-3.301400,3.852165,-5.563444,-0.224346,3.342623,-1.829096,-8.471480,-3.106804,-7.266305,-6.518903,0.854751,-4.433904,1.635611,4.065816,3.249729,-5.590014,2.201957,1.249897,2.748782,-9.996857,-0.528060,-6.631229,-1.019464,-5.544943,-3.829972,-8.354068,6.491723,-2.278621,0.020703,7.816071,7.906600,-2.619112,7.856789,-1.897117,6.365336,8.304190,0.383764,0.625177,-3.277902,5.375720,-6.035228,-8.355668,-1.823008,-8.956784,-6.711672,-5.147145,-4.405317,-6.804490,-2.644790,-9.545612,1.895395,0.627737,1.484023,1.889185,-0.296388,2.316655,-6.932017,7.354515,-3.227784,-5.313634,6.354601,4.450170,-6.491535,-9.943225,-2.973005,-9.784069,-3.766250,2.171218,-7.616551,-2.669570,7.049984,-6.160111,8.825288,-9.687803,6.416974,3.989115,-8.538101,-8.247768,-7.193559,5.007235,-3.502307,2.271796,-5.076834,-0.788363,2.679866,8.211930,-5.803453,-1.182437,1.106891,-2.597144,5.043766,-4.003156,-5.643692,-2.467616,9.817304,4.632581,-4.410725,-5.603660,9.181485,1.666748,8.134280,5.029226,-8.216589,-7.833694,5.447801,9.711516,-4.809020,-5.927346,-7.869996,0.418322,-2.005620,7.216287,8.878086,1.055123,2.763269,8.337379,-3.983779,-1.642916,-8.864431,-9.919339,9.346884,9.307921,6.133928,-7.871235,-7.870209,4.107443,1.792042,2.602880,2.869935,2.267355,-4.973053,0.315961,-8.435043,4.421456,-3.337044,-5.259547,7.794914,8.342567,7.369800,3.638909,-0.648304,-3.857246,6.251202,-4.198855,9.819998,7.565012,4.312990,-5.088153,6.331577,-4.163428,5.375932,0.708560,-9.257356,-0.518735,1.027391,-0.868199,-3.384241,9.103488,-3.370853,-2.898942,8.609381,2.156992,0.903254,-4.583245,-5.358988,-0.362670,8.159443,-3.952851,4.208724,3.695246,-2.704398,-7.153906,4.796868,9.800016,0.668957,5.716500,4.382421,9.823949,-3.912469,6.062009,0.500394,-6.262579,-5.602665,-2.727888,8.306659,-6.621728,9.188487,9.562961,-2.267121,9.309473,-4.697067,-5.733289,7.535552,-6.630860,-4.201019,-3.287959,-7.187348,-2.865563,-5.642822,-9.337106,2.598917,9.925295,2.065955,8.818761,4.810499,4.162397,8.583711,-0.721308,-1.513241,-5.756272,-3.595381,-5.555648,7.362615,1.600549,4.666731,-1.164509,-8.621740,-8.484223,-3.332262,4.945491,-2.578311,9.487758,5.036792,-2.464182,0.199469,-5.927552,-0.168777,-6.023139,1.074087,7.394956,2.633571,0.572920,3.465660,8.025673,2.407781,-6.768420,8.288474,5.264425,8.099602,-8.110837,-8.895215,-1.422069,8.550153,1.307673,9.502924,-4.941774,-3.309045,-1.549448,7.780153,8.238368,2.842157,-3.563885,8.423742,2.883057,6.296171,3.407155,-6.942195,-1.167211,-5.916965,-0.494700,-0.416634,-1.020506,7.080611,5.895010,-1.354451,9.906427,-7.100882,7.827633,-8.012718,-7.922130,-9.886513,8.122977,4.260919,8.104159,4.936487,7.903422,-5.748816,-2.559453,4.579968,-9.173800,-5.096179,2.449384,4.426660,1.031033,8.487317,8.525175,1.333453,-1.348858,6.311596,2.473786,2.286777,-4.868293,-0.768056,3.750522,-2.181087,-5.518457,-7.213303,3.649832,-3.936057,3.515793,-0.219729,6.384784,9.623530,6.820837,6.485606,-4.104966,2.454900,-3.932437,8.596626,3.151163,6.667413,2.737220,9.288130,3.660441,1.637679,9.684809,-9.333486,4.415529,-7.284504,-2.409189,5.026163,2.688710,5.813044,7.146305,8.374940,7.575802,-2.206829,-2.040210,9.217757,6.384335,-3.040927,7.619411,5.997218,1.636061,6.188792,-0.409731,-8.009495,0.798814,9.435755,-1.600525,-8.395974,-3.446295,-7.335942,-6.397326,-3.563292,-9.868126,7.839009,6.365264,7.161084,-4.337554,-0.080316,3.514447,-9.648802,9.796977,6.674779,2.675548,8.405283,-9.034931,-3.769092,8.241224,-6.064715,-8.766655,7.470467,3.236183,-0.417702,2.471137,-2.146372,1.430967,-8.596970,-8.020119,-4.685364,8.225262,2.758459,-1.937628,-5.309992,3.118331,1.026492,-5.802277,4.961650,1.708129,-4.822458,2.794314,-4.146103,0.396240,7.341814,-6.165127,1.318902,0.288841,-8.409658,1.985548,3.583885,3.681306,-0.017473,-9.040892,2.284814,9.407960,-4.295219,-4.241233,9.104278,9.137344,-4.627526,-7.384911,5.690698,-4.011717,0.159210,5.645720,-9.217720,-0.563968,-9.744616,4.241922,-9.091172,2.080228,4.565407,6.266313,-6.422361,3.290427,1.220924,-1.128793,1.582551,-4.576065,-5.721532,1.546299,-7.250069,3.972504,-8.388964,1.723751,9.333884,-4.769806,-9.630380,8.635220,-0.591775,5.562554,7.894634,5.263545,5.835577,6.227456,5.582239,-8.124288,-9.422014,-5.303540,-7.802689,-6.202167,8.760406,-9.315307,-1.297759,-3.903416,-2.519265,-3.009258,5.145165,-6.371806,0.068827,9.945847,5.633173,8.311289,4.215706,-7.867163,0.932597,-0.399247,8.907726,-9.788588,-1.563699,5.121692,6.295916,-0.255023,1.339181,7.232974,4.953947,3.360580,-3.730344,-7.202986,-0.395104,-6.099621,2.080351,-0.583033,7.666680,7.286694,0.780746,8.970196,-9.839187,-8.991220,-1.296975,5.640527,-5.618701,-1.373124,0.080464,-5.079093,-8.310207,6.210305,1.311900,-5.911565,-2.311774,4.217190,-7.183626,-7.603131,-2.324644,-9.101627,-8.786947,-7.077517,-0.750626,-8.574508,-1.915935,-9.874079,5.380591,-9.890402,9.004073,9.078124,-9.494323,-4.954896,7.210733,-7.473393,9.656785,7.145265,-8.638251,-4.531354,-0.533483,-0.353424,1.517718,2.626319,-9.903148,-9.375711,5.257089,7.921207,-0.196475,-9.144565,9.982755,2.182129,-4.314988,-1.620303,2.600608,5.280758,3.111429,-6.562816,-4.312994,6.786759,8.232217,8.430402,-1.278366,7.841352,-2.076673,-6.401784,-5.297373,-1.312131,-0.746088,1.324670,7.021233,-5.513112,-4.963710,3.723260,-7.194902,8.276182,-0.970037,-2.466728,7.532006,7.554506,-8.408724,7.694508,-0.410814,1.211848,3.292348,-0.529058,2.620658,3.350099,6.798399,0.027997,-9.301689,7.198694,4.403239,4.240417,6.475986,-4.678280,-8.894600,-9.460234,6.934622,-7.107756,-5.814025,5.320920,8.387731,5.258150,4.781869,-3.050445,2.993421,0.144048,-8.539435,-6.612830,0.538493,1.417386,-5.730810,-8.790372,1.689375,-0.595573,5.499023,1.453354,1.717113,3.439394,0.507182,-9.018737,-6.416911,1.345921,-8.188784,-0.990041,-1.603433,3.627207,-4.149072,-6.109401,-4.656764,4.290847,-6.132058,-5.676791,-7.911291,2.988460,-5.434799,-9.385931,1.427865,8.115522,4.074089,9.925089,7.747686,5.466145,0.767296,1.829214,-2.627641,8.237265,4.295658,-9.741782,-5.577794,-4.392696,7.462326,3.437996,-2.538339,-7.890637,-5.203374,-1.561448,2.335963,8.488466,6.313263,-4.820772,-3.905835,8.946227,-7.826619,7.852327,3.484532,9.793973,-7.882828,6.934614,1.369202,9.788389,1.465847,5.840372,2.732982,6.234504,8.688976,-0.894160,-6.396566,6.477343,-6.642150,4.292866,-3.036813,-5.044934,3.805184,-0.247949,-8.223899,-8.313725,6.354672,-0.752088,9.085279,6.373976,1.639383,-4.802566,4.198978,-4.682385,-3.930448,6.803134,-8.738883,4.187537,2.898704,-0.459884,0.634209,-9.866792,-4.995590,6.863146,-6.055942,-3.444228,3.603960,6.814534,6.001560,-4.236999,0.217916,-5.446081,4.172832,2.874047,7.009453,-0.930726,8.827853,0.167706,0.972440,0.241952,-8.913696,-5.112571,-0.039179,-9.916093,5.743607,4.456947,0.979257,6.114892,2.472854,4.867991,-5.426330,-8.343923,-2.831839,-5.310084,-9.589549,-1.370197,8.230939,-3.828139,-8.477020,3.580081,4.535446,8.350660,8.777084,-5.571634,9.374884,1.863321,0.813696,3.353166,-7.146815,-5.155794,5.303541,5.294875,4.364870,-0.757726,-8.852021,7.007162,-1.174881,-5.450360,9.301453,1.622054,7.127401,7.091019,-5.403088,-4.942486,-2.941774,1.840456,0.533800,-8.453072,3.428301,9.753115,9.734904,6.650724,2.303701,2.023328,-7.126131,4.065345,9.260112,0.629280,-2.549978,-1.412545,-3.338443,-1.616569,-2.331403,-6.191600,-2.724578,-9.728545,-1.282395,5.722821,0.232278,2.560365,8.863550,2.173876,2.796199,-3.230056,9.054919,-9.587480,2.321157,4.277010,9.958235,7.227479,0.232547,1.925362,9.978418,5.681946,6.203159,9.955309,-5.378674,-9.835957,6.713778,7.730108,3.302777,-7.486568,-3.670826,5.922236,8.306371,4.773156,-3.308445,-9.437878,-2.929113,-5.657177,-4.640531,-2.281107,7.205364,-7.659752,-9.733284,3.214937,9.201182,-7.125821,4.418287,-7.413065,-9.899137,-0.427327,-7.273362,-1.586656,-0.432281,7.733698,-0.045455,7.153769,-2.303657,-1.181415,1.164102,-6.451006,2.944214,1.469761,-0.902563,0.636375,6.653429,4.639822,3.465365,-8.355800,9.032308,-1.359688,-6.995578,1.080678,-0.836852,8.221883,3.277545,-4.276481,-4.975485,3.297433,6.916089,9.172235,-4.330276,0.727246,-5.709057,-5.616383,6.515719,-6.765277,-5.977430,-2.588769,9.447249,5.765320,2.646745,-5.598718,8.508557,3.917286,-0.107009,6.560875,7.091051,-6.591087,2.339239,9.707229,-7.565109,-4.173829,4.967065,2.742378,-2.232528,7.069367,-8.946560,0.305822,-1.111948,9.046639,0.937965,2.439088,9.997805,-7.807200,-4.735419,7.736946,3.438581,-3.512757,-6.015013,-6.473275,-4.008136,-4.631084,1.086761,-2.503250,-0.779185,-3.337376,-3.517852,8.128884,-9.287785,-8.698364,1.418952,7.686060,9.636110,-3.009741,5.570361,-9.251706,-9.192273,-8.393678,-1.498573,5.134536,-7.768119,-3.796238,-8.000853,-4.312673,-0.239147,2.195359,-7.918287,-1.270680,-5.473336,0.954950,5.218112,4.816017,6.138465,1.917633,-7.729817,-3.700952,2.662587,-9.997209,-8.942653,-5.007543,4.214793,5.352966,-5.778895,-9.526830,-8.837846,-5.367888,1.945639,0.736524,8.680151,3.032236,-1.647305,6.507623,-6.623701,1.048412,-2.727165,9.965541,8.980299,-8.745892,8.403696,3.065187,-4.490938,2.977905,4.507373,-6.737634,-0.799457,2.252479,-0.590336,-5.110152,-1.913711,8.742637,5.437625,-1.300838,4.103727,-2.099968,2.290129,-5.450461,5.901174,-3.911915,9.674424,8.582039,-6.204535,-8.873616,6.204649,1.212136,-8.580824,0.994276,-9.134073,-4.313120,-5.926079,-4.587905,-5.885349,9.004190,-8.667664,9.895102,7.968553,6.112843,0.447005,-5.569442,-4.131485,-4.689912,-8.331597,-9.806153,1.223563,7.405156,5.233125,-2.348710,-9.684190,4.961942,0.300988,-4.232938,-9.675632,-9.168721,8.504381,-7.952549,-7.582574,-7.649603,-7.296017,1.366984,-7.636228,1.649755,-3.549169,5.392262,-7.540633,-7.880438,1.501146,-8.676668,-3.934890,0.559739,0.174373,-6.682166,-9.936310,-0.045623,8.214407,0.776078,-5.809065,-6.837093,-7.450691,-5.655597,-1.985052,-4.742309,7.781437,2.695507,3.599669,-2.482664,1.823193,-8.282630,5.318512,-8.686319,9.685320,-7.576128,2.979912,-6.356356,3.144872,-6.988491,7.716537,2.536303,1.782699,7.983624,-8.649964,2.640151,-3.528987,3.101018,-2.017265,-7.808141,9.527120,-7.359983,5.726677,-2.862872,8.867723,6.276200,6.236638,9.758181,1.139320,1.896758,-3.900875,1.290830,2.181794,0.520946,9.682820,0.095631,-5.864393,7.555367,-4.985482,-3.698105,-2.560586,6.028806,7.531265,-0.683702,2.395850,-1.913943,-2.090399,-0.657261,-6.713883,0.702001,2.016289,3.321897,-5.789381,-5.767759,-3.843112,-0.796054,-6.978288,7.006265,1.441932,-0.265903,6.583690,-8.103835,6.824689,9.771661,-7.494076,4.713248,7.645983,-3.028969,1.343711,6.851082,5.066347,-1.015861,4.312117,8.613725,0.369469,8.514391,-6.453297,-0.991092,-3.901843,-1.756141,-4.552085,-4.869776,-1.157339,-8.318538,7.269525,9.885103,9.788726,-5.459404,2.610431,0.190923,-4.043017,-8.257243,7.458064,-4.258590,-8.919694,-1.885759,-7.250499,9.235214,3.450831,-8.052961,8.776372,-8.032043,8.032869,4.310359,-4.742501,9.749532,5.504555,-8.243519,-5.895764,-3.054593,1.561689,7.789968,5.388585,-3.299588,-2.732323,-9.203025,-2.736258,1.374827,5.034920,6.125376,3.178744,-3.924591,-4.789547,8.660246,5.795733,3.733534,4.725646,-1.553078,6.809232,3.119451,8.801776,0.852081,-0.248129,5.042290,7.929183,-5.242218,7.943881,7.760252,2.323108,-6.785045,-6.299456,2.138514,0.692192,4.938469,-3.626018,-3.846477,-2.335584,5.395897,-3.834903,-6.884371,0.607020,6.746286,-9.109151], dtype = "float64")#candidate|1378|(1200,)|const|float64
call_1376 = relay.TupleGetItem(func_780_call(relay.reshape(const_1377.astype('float32'), [13, 5]), relay.reshape(const_1378.astype('float64'), [1200,]), ), 0)
call_1379 = relay.TupleGetItem(func_783_call(relay.reshape(const_1377.astype('float32'), [13, 5]), relay.reshape(const_1378.astype('float64'), [1200,]), ), 0)
func_297_call = mod.get_global_var('func_297')
func_301_call = mutated_mod.get_global_var('func_301')
call_1388 = relay.TupleGetItem(func_297_call(relay.reshape(const_1378.astype('float64'), [10, 12, 10]), relay.reshape(const_1378.astype('float64'), [10, 12, 10]), ), 0)
call_1389 = relay.TupleGetItem(func_301_call(relay.reshape(const_1378.astype('float64'), [10, 12, 10]), relay.reshape(const_1378.astype('float64'), [10, 12, 10]), ), 0)
func_477_call = mod.get_global_var('func_477')
func_480_call = mutated_mod.get_global_var('func_480')
var_1400 = relay.var("var_1400", dtype = "uint64", shape = ())#candidate|1400|()|var|uint64
const_1401 = relay.const([-1,5,-10,-10,7,-5,8,9,10,8,9,1,3,4,-10,1,3,-5,-8,7,-10,-4,-2,6,7,7,3,9,-5,9,9,9,5,5,1,-9,-4,1,-5,9,10,-1,-4,-1,5,-6,-2,-6,-1,10,-3,-2,3,-5,10], dtype = "uint64")#candidate|1401|(55,)|const|uint64
call_1399 = relay.TupleGetItem(func_477_call(relay.reshape(var_1400.astype('uint64'), []), relay.reshape(const_1401.astype('uint64'), [1, 11, 5]), ), 0)
call_1402 = relay.TupleGetItem(func_480_call(relay.reshape(var_1400.astype('uint64'), []), relay.reshape(const_1401.astype('uint64'), [1, 11, 5]), ), 0)
bop_1417 = relay.bitwise_xor(call_1376.astype('int8'), var_1400.astype('int8')) # shape=(15, 16, 8)
bop_1420 = relay.bitwise_xor(call_1379.astype('int8'), var_1400.astype('int8')) # shape=(15, 16, 8)
func_1327_call = mod.get_global_var('func_1327')
func_1330_call = mutated_mod.get_global_var('func_1330')
const_1425 = relay.const([-4,-4,7,8,1,-5,-6,3,-7,-8,-10,-7,2,9,10,8,4,-2,7,9,8,6,-3,5,-10,2,-8,7,8,9,-9,-3,-6,-3,5,-10,-8,-6,5,-10,6,7,2,-5,9,10,8,10,-8,-6,-5,-5,3,3,-5,-5,4,7,5,8,-6,1,-2,10,3,3,2,-10,-1,3,3,-9,9,5,-9,-7,1,-1,-10,-3,6,-1,-3,-5,2,-10,-5,4,-4,7,1,-10,-1,-5,3,4,-3,-10,-3,-3,-3,10,2,4,-2,-1,5,7,-4,7,-2,7,-7,4,-1,5,-9,-6,10,9,8,-6,1,9,8,3,10,-7,-6,-6,-9,-5,-7,-9,10,10,-10,-3,4,8,-9,-3,-10,5,-5,-7,4,-3,2,10,2,1,10,2,-3,5,-9,2,-1,5,10,10,-3,-6,5,-8,10,6,1,-4,-8,8,-7,7,9,-8,6,-2,-1,6,8,2,1,-8,7,9,-10,1,9,-7,-1,-7,3,8,2,9,-7,-8,10,-5,5,-10,-10,4,2,8,-8,-2,8,4,-5,-8,5,-5,1,2,3,-2,-7,-4,8,4,-9,-7,-8,5,-4,-10,-2,-6,4,-10,3,9,8,1,-5,2,-3,1,9,-7,-2,6,1,-4,1,1,5,6,-5,-1,-1,-4,-3,-6,-2,9,-9,5,-8,-6,-4,5,-8,5,7,4,1,2,5,-10,10,-1,6,-10,7,-5,2,-10,-10,-4,3,7,-9,9,7,-3,1,-10,9,3,-6,7,-8,-8,2,-7,3,-8,-3,6,-8,-8,2,8,-6,7,9,9,3,-8,-3,-9,-9,9,-5,9,-4,2,5,-7,-1,2,-10,-7,-2,7,2,-2,-4,10,-3,-5,-7,3,9,2,6,-9,-9,-1,-3,-6,6,-5,-6,4,-5,-8,-7,6,-1,-3,-4,-5,-1,4,5,-9,6,3,-9,3,5,-10,-2,-6,5,-10,-4,-4,1,8,-7,-9,3,5,9,7,9,6,-2,-4,4,9,-3,2,10,2,-1,10,-4,-3,5,9,-7,-7,7,-9,-9,10,1,6,4,-9,-10,6,-6,-9,10,8,4,10,9,4,-8,-10,6,8,-5,-6,8,10,-2,-6,8,-4,9,6,3,-6,4,-8,3,4,-5,-4,4,-6,5,-3,-5,-7,-10,2,3,-4,5,1,8,-5,-8,7,-5,8,-4,-2,7,3,2,-1,-3,-4,-7,-6,2,9,2,-10,8,6,-1,10,10,5,9,9,-3,10,-7,6,-8,9,-10,7,-9,1,-3,-7,-4,-7,10,-7,-8,-2,1,-6,2,9,4,-3,8,2,5,-6,-2,4,-8,5,-7,-1,-7,-7,2,-5,1,1,10,-5,-5,-3,-4,10,-7,-8,-4,-5,7,1,10,-8,-2,2,-6,-6,-8,9,8,-5,-6,1,1,-10,8,10,7,-10,-8,-2,7,-3,-1,-8,4,5,-4,8,4,6,3,-1,3,-1,2,-3,-5,6,1,-4,7,4,8,9,-2,-6,-2,-5,-6,5,-2,-1,-9,3,-2,6,6,1,2,6,8,8,8,-6,-2,4,-3,10,-3,1,-8,3,7,-10,7,-10,9,-6,3,-1,4,8,-2,9,-9,-9,9,3,-9,2,10,-10,4,-5,-7,-2,4,8,6,9,2,-2,-3,7,-7,-5,-5,-5,-10,-5,-7,-8,7,-8,7,-8,-7,-10,-7,-2,7,1,-2,-10,5,1,-2,-4,7,10,1,-5,-10,9,-1,2,-8,-2,9,7,7,7,-7,8,5,1,8,4,-8,-7,-4,1,-4,-4,-4,7,9,3,-7,1,9,-7,6,6,4,5,4,2,8,3,7,5,3,1,9,1,-3,-6,10,3,7,2,5,-1,9,4,3,-1,9,8,3,-5,-10,5,3,3,-7,1,-10,4,-6,7,-2,-6,10,9,5,-2,-3,4,7,5,-4,-6,1,-4,-10,6,9,3,8,-5,-5,8,5,5,-9,6,7,6,3,6,-10,7,6,1,1,-7,-4,-4,4,3,-10,-7,-2,-6,4,10,4,-3,5,-6,-9,-3,-7,4,-8,7,7,-6,6,3,4,3,-1,10,-2,4,-7,-6,6,8,-8,-2,8,5,-10,3,2,-3,2,-8,-8,-6,1,-1,-4,1,-5,-9,10,6,-2,3,-5,-8,-8,3,-1,4,3,-9,6,8,-2,6,-1,-2,-1,9,-1,-5,5,8,-9,10,-8,8,10,7,3,5,-8,-6,-4,-7,4,-6,1,5,-6,3,-5,-10,-9,8,-4,7,-10,1,10,8,7,2,-10,10,-3,2,4,-4,2,-6,-5,-8,-7,-8,4,-10,-10,1,-1,-7,-3,-4,-4,-1,-10,-3,-1,-9], dtype = "uint64")#candidate|1425|(900,)|const|uint64
call_1424 = relay.TupleGetItem(func_1327_call(relay.reshape(const_1425.astype('uint64'), [10, 9, 10]), relay.reshape(const_1425.astype('uint64'), [10, 9, 10]), ), 0)
call_1426 = relay.TupleGetItem(func_1330_call(relay.reshape(const_1425.astype('uint64'), [10, 9, 10]), relay.reshape(const_1425.astype('uint64'), [10, 9, 10]), ), 0)
bop_1442 = relay.right_shift(uop_1341.astype('uint32'), relay.reshape(uop_1361.astype('uint32'), relay.shape_of(uop_1341))) # shape=(5, 6, 14)
func_477_call = mod.get_global_var('func_477')
func_480_call = mutated_mod.get_global_var('func_480')
call_1455 = relay.TupleGetItem(func_477_call(relay.reshape(var_1400.astype('uint64'), []), relay.reshape(const_1401.astype('uint64'), [1, 11, 5]), ), 0)
call_1456 = relay.TupleGetItem(func_480_call(relay.reshape(var_1400.astype('uint64'), []), relay.reshape(const_1401.astype('uint64'), [1, 11, 5]), ), 0)
var_1460 = relay.var("var_1460", dtype = "float32", shape = (5, 6, 14))#candidate|1460|(5, 6, 14)|var|float32
bop_1461 = relay.less(uop_1361.astype('bool'), relay.reshape(var_1460.astype('bool'), relay.shape_of(uop_1361))) # shape=(5, 6, 14)
output = relay.Tuple([bop_1346,const_1377,const_1378,call_1388,call_1399,const_1401,bop_1417,call_1424,const_1425,bop_1442,call_1455,bop_1461,])
output2 = relay.Tuple([bop_1346,const_1377,const_1378,call_1389,call_1402,const_1401,bop_1420,call_1426,const_1425,bop_1442,call_1456,bop_1461,])
func_1467 = relay.Function([var_1340,var_1345,var_1400,var_1460,], output)
mod['func_1467'] = func_1467
mod = relay.transform.InferType()(mod)
mutated_mod['func_1467'] = func_1467
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1467_call = mutated_mod.get_global_var('func_1467')
var_1469 = relay.var("var_1469", dtype = "float32", shape = (5, 6, 14))#candidate|1469|(5, 6, 14)|var|float32
var_1470 = relay.var("var_1470", dtype = "float32", shape = (5, 6, 14))#candidate|1470|(5, 6, 14)|var|float32
var_1471 = relay.var("var_1471", dtype = "uint64", shape = ())#candidate|1471|()|var|uint64
var_1472 = relay.var("var_1472", dtype = "float32", shape = (5, 6, 14))#candidate|1472|(5, 6, 14)|var|float32
call_1468 = func_1467_call(var_1469,var_1470,var_1471,var_1472,)
output = call_1468
func_1473 = relay.Function([var_1469,var_1470,var_1471,var_1472,], output)
mutated_mod['func_1473'] = func_1473
mutated_mod = relay.transform.InferType()(mutated_mod)
var_1560 = relay.var("var_1560", dtype = "int32", shape = (15, 14, 12))#candidate|1560|(15, 14, 12)|var|int32
var_1561 = relay.var("var_1561", dtype = "int32", shape = (15, 14, 12))#candidate|1561|(15, 14, 12)|var|int32
bop_1562 = relay.maximum(var_1560.astype('int32'), relay.reshape(var_1561.astype('int32'), relay.shape_of(var_1560))) # shape=(15, 14, 12)
output = bop_1562
output2 = bop_1562
func_1569 = relay.Function([var_1560,var_1561,], output)
mod['func_1569'] = func_1569
mod = relay.transform.InferType()(mod)
var_1570 = relay.var("var_1570", dtype = "int32", shape = (15, 14, 12))#candidate|1570|(15, 14, 12)|var|int32
var_1571 = relay.var("var_1571", dtype = "int32", shape = (15, 14, 12))#candidate|1571|(15, 14, 12)|var|int32
output = func_1569(var_1570,var_1571,)
func_1572 = relay.Function([var_1570,var_1571,], output)
mutated_mod['func_1572'] = func_1572
mutated_mod = relay.transform.InferType()(mutated_mod)
var_1667 = relay.var("var_1667", dtype = "int16", shape = (4, 8, 13))#candidate|1667|(4, 8, 13)|var|int16
const_1668 = relay.const([[[4,-2,10,-7,1,2,9,7,-2,-2,3,7,-4],[4,10,5,-8,8,9,6,-3,1,-2,-6,3,-3],[5,-10,4,-4,7,-10,-8,-5,-2,-6,9,10,8],[-4,-3,-7,-6,7,10,6,-3,-4,-3,-8,10,-1],[-3,-10,7,4,-2,8,10,8,9,9,10,-10,2],[9,4,-3,-3,10,1,-9,6,1,-3,6,-4,-1],[-8,-7,-1,-4,-8,-1,-4,-10,6,-5,7,8,8],[-1,9,-7,4,-9,2,-1,-2,1,5,8,1,4]],[[3,7,6,-4,-9,-1,-6,-8,-4,9,3,-2,1],[10,7,-9,7,-10,1,7,-4,3,-7,-8,-9,-8],[5,1,-2,-8,-6,-7,-1,6,-2,4,-1,6,7],[8,-1,10,-8,3,-5,-9,6,-4,5,-2,2,3],[-2,-1,2,-7,-10,10,2,-6,-2,8,10,-6,-3],[-2,-4,-10,3,-5,3,-10,3,-10,3,9,-10,-5],[8,-5,-2,8,3,2,9,3,-3,6,-2,8,10],[-1,6,-3,7,-5,-7,5,-9,6,-6,2,1,-3]],[[2,-10,-3,-5,7,3,-5,5,1,2,6,-2,6],[-2,-1,1,8,-8,-4,-8,-10,-7,1,-7,-3,-4],[4,3,-9,-8,-10,4,10,-9,-2,5,9,-6,-5],[3,-1,-1,5,6,9,-4,3,-8,-7,-7,-5,-2],[-6,5,1,-3,6,-7,8,-3,-5,7,-5,1,4],[-1,-2,-5,1,-4,-7,5,1,-4,-3,-5,4,-6],[-8,10,-5,-3,6,-7,-8,-1,8,-10,-6,-7,1],[-9,5,-5,2,-7,8,8,-9,-3,6,4,10,4]],[[-6,6,4,-4,1,-5,5,-4,3,-9,6,9,-7],[-9,-7,-2,-5,-2,-6,-9,-8,-1,-6,7,8,-4],[-7,-8,10,-1,2,1,6,4,2,8,-8,2,-6],[7,-5,10,-8,8,8,2,-5,-5,8,2,5,-9],[-10,8,10,-2,8,8,-10,1,-6,-6,-8,3,-2],[-6,-4,1,4,10,9,-8,3,3,2,1,-9,-10],[-2,2,7,-3,1,-5,-5,10,6,-1,5,4,7],[7,4,4,-10,10,-4,-8,-6,1,-9,-7,10,6]]], dtype = "int16")#candidate|1668|(4, 8, 13)|const|int16
bop_1669 = relay.add(var_1667.astype('int16'), relay.reshape(const_1668.astype('int16'), relay.shape_of(var_1667))) # shape=(4, 8, 13)
output = relay.Tuple([bop_1669,])
output2 = relay.Tuple([bop_1669,])
func_1677 = relay.Function([var_1667,], output)
mod['func_1677'] = func_1677
mod = relay.transform.InferType()(mod)
mutated_mod['func_1677'] = func_1677
mutated_mod = relay.transform.InferType()(mutated_mod)
var_1678 = relay.var("var_1678", dtype = "int16", shape = (4, 8, 13))#candidate|1678|(4, 8, 13)|var|int16
func_1677_call = mutated_mod.get_global_var('func_1677')
call_1679 = func_1677_call(var_1678)
output = call_1679
func_1680 = relay.Function([var_1678], output)
mutated_mod['func_1680'] = func_1680
mutated_mod = relay.transform.InferType()(mutated_mod)
const_1682 = relay.const([[[1,-8,-1,-8,-8,-8],[4,-8,-4,-3,-10,3],[5,4,2,-8,6,-5],[6,7,-2,-10,-2,-9],[7,1,4,5,-9,-7],[-10,6,-2,10,-4,-2],[1,3,2,2,-3,-5],[8,-6,10,10,10,-4],[6,-8,3,5,2,1],[-9,3,7,-8,-9,-4],[10,7,-1,-10,-6,-5]],[[10,5,7,8,-1,9],[1,3,-4,7,2,-5],[4,7,-6,9,2,10],[1,7,-10,-10,-4,1],[1,-3,1,-3,3,-4],[-2,-7,-10,6,-8,5],[-7,-9,9,8,-9,2],[-1,6,7,-5,5,-3],[-2,8,2,-7,10,10],[7,1,3,5,-10,-7],[1,6,-5,-2,-10,6]],[[2,2,1,-1,-2,-6],[8,8,-2,-5,-7,10],[-3,-9,-3,-6,-10,8],[10,2,4,8,9,9],[1,8,-6,9,1,4],[-3,-10,9,-4,7,-5],[-4,-2,1,6,-7,9],[3,5,-6,-9,-9,3],[6,9,3,-4,-8,-10],[8,-10,-10,-8,-7,-8],[-10,-3,7,7,5,-5]]], dtype = "int64")#candidate|1682|(3, 11, 6)|const|int64
var_1683 = relay.var("var_1683", dtype = "int64", shape = (3, 11, 6))#candidate|1683|(3, 11, 6)|var|int64
bop_1684 = relay.greater(const_1682.astype('bool'), relay.reshape(var_1683.astype('bool'), relay.shape_of(const_1682))) # shape=(3, 11, 6)
func_1467_call = mod.get_global_var('func_1467')
func_1473_call = mutated_mod.get_global_var('func_1473')
var_1688 = relay.var("var_1688", dtype = "float32", shape = (5, 84))#candidate|1688|(5, 84)|var|float32
const_1689 = relay.const(-8, dtype = "uint64")#candidate|1689|()|const|uint64
call_1687 = relay.TupleGetItem(func_1467_call(relay.reshape(var_1688.astype('float32'), [5, 6, 14]), relay.reshape(var_1688.astype('float32'), [5, 6, 14]), relay.reshape(const_1689.astype('uint64'), []), relay.reshape(var_1688.astype('float32'), [5, 6, 14]), ), 10)
call_1690 = relay.TupleGetItem(func_1473_call(relay.reshape(var_1688.astype('float32'), [5, 6, 14]), relay.reshape(var_1688.astype('float32'), [5, 6, 14]), relay.reshape(const_1689.astype('uint64'), []), relay.reshape(var_1688.astype('float32'), [5, 6, 14]), ), 10)
func_1569_call = mod.get_global_var('func_1569')
func_1572_call = mutated_mod.get_global_var('func_1572')
const_1695 = relay.const([[-1,3,-2,-1,-4,-1,-6,-10,9,7,-10,-7,-4,4,6,-3,6,5,6,-4,6,9,6,-1,3,8,4,-8,2,8,-5,-3,9,-9,-5,-5,-10,-2,-4,-1,1,-2,7,-3,-3,6,-4,-9,8,-7,-2,-3,7,-1,10,-9,1,6,-1,-8,-2,2,-3,10,-8,-4,9,3,3,-8,5,-4,9,8,-8,4,-1,7,-7,7,4,-6,-1,1,-4,-6,8,-7,9,7,-4,-9,-9,-10,3,-10,1,10,-4,5,-1,6,3,8,-1,-1,-8,-1,-7,1,-10,-7,-6,4,-9,7,2,-1,9,10,4,4,-4,-7,5,10,-1,-8,-3,5,1,-4,-5,1,4,-3,-3,-10,-1,-7,-9,2,4,-4,-2,9,-3,8,7,2,-3,10,2,-2,-1,9,-5,-7,-9,-6,-2,-6,-5,2,6,-3,-1,-2,5,7,-4,-5,7,8,4,9,-8,-10,-9,-6,8,-3,-2,-5,-10,4,-1,5,-4,-6,-8,4,-1,-10,7,-7,-3,6,-5,4,-3,1,1,4,8,4,6,-3,-2,-9,-9,6,5,1,2,7,-6,-9,-4,-4,4,10,6,9,8,-7,-2,-1,4,9,7,-1,-6,-2,5,5,-4,9,2,-7,4,7,6,5,10,-4,-3,2,7,-2,-9,-2,-3,2,9,-6,-1,2,-1,-7,-2,9,-8,-5,-4,7,-3,8,-10,-1,-8,-3,-2,-8,2,3,10,9,3,-3,8,-2,-9,-7,1,-7,9,-1,4,1,7,-10,-7,5,3,-7,-9,2,-1,8,-10,-2,6,-7,3,6,3,-8,-5,10,-2,10,8,-1,2,-1,-4,-9,-6,-1,-6,10,-5,10,3,9,-5,-9,1,-1,9,3,-9,-6,-1,-6,7,6,6,3,4,-5,1,3,3,-4,10,-10,2,-5,-6,-1,9,-5,5,-4,-10,-1,4,2,2,2,3,-10,-9,-9,-8,-5,2,-1,8,8,-6,-8,5,-8,3,-10,1,1,-6,2,-3,-10,7,-3,-7,-2,2,-3,-7,5,-10,-6,6,10,10,-6,9,9,7,2,5,-9,3,5,5,-1,6,6,9,-5,-10,-3,7,6,3,10,-1,6,-2,-5,2,2,7,9,-5,-4,-5,3,-8,8,6,-1,8,4,-6,-7,-7,6,8,-10,2,-8,-9,-1,-10,8,8,5,-5,-5,10,-1,10,10,5,-1,-4,-5,7,-9,6,5,7,9,-10,6,6,-6,-7,2,-8,2,-1,-6,5,-5,3,7,9,5,-10,-9,10,-3,-4,10,8,-6,1,7,-7,8,-2,1,1,-1,7,-9,7,-4,7,-5,-8,-5,-2,4,7,-9,-7,2,-6,-10,5,10,1,3,9,-2,6,5,-2,-5,-1,7,5,-5,-2,-4,4,9,7,3,7,-3,5,-2,9,5,4,-7,1,9,-8,-2,-4,-10,-2,-9,10,-3,9,1,3,-9,10,-5,9,8,-7,-4,1,4,-8,-4,4,-3,-5,3,2,4,-8,-5,-2,-8,3,-10,7,10,6,4,-3,2,-3,5,-7,-7,9,3,5,2,1,-4,7,-4,8,-2,-4,9,1,3,5,2,6,-7,5,10,-1,-6,8,9,7,7,8,-9,1,5,-3,-10,-2,-9,4,5,-4,2,-9,8,-4,7,2,-1,7,-9,-4,-1,-3,3,2,3,-9,7,-9,3,-1,-7,6,6,-5,6,-1,6,-9,-3,9,6,2,5,8,5,10,-2,2,-2,2,-4,8,9,1,8,-10,9,10,3,3,9,2,4,1,8,-5,-6,-6,-10,-9,-8,-5,-8,10,4,1,-1,-5,8,-10,-9,1,-7,2,-6,6,-7,9,-7,-9,4,-4,-3,-9,-7,7,3,-3,7,-8,4,6,-6,-7,6,3,5,7,8,-1,5,1,10,-8,9,1,-1,-7,2,9,-1,9,2,8,-2,-5,8,4,-1,-8,-8,6,-6,6,8,-5,2,6,10,3,2,-6,5,-10,-2,-1,-7,-2,1,-8,-5,-7,-7,-10,7,-8,3,-1,5,7,10,-10,6,-10,9,-5,3,3,6,-8,9,2,-9,10,-4,3,-8,3,-6,8,-10,-2,-4,-2,2,-3,-5,3,-8,10,-2,8,-8,4,3,-1,-7,-6,10,3,-10,-3,1,-9,-8,3,-3,-2,3,5,7,8,1,-7,4,4,-4,8,-2,-6,-7,-2,3,1,9,-1,4,-2,-5,-7,-7,-2,-6,10,-9,-8,-7,-7,6,6,8,4,9,8,-7,3,-3,-6,-7,-9,-3,3,1,2,-1,-3,-6,-10,4,-8,-10,4,-6,-6,-9,9,6,-3,3,-2,-2,3,3,4,1,8,-3,-9,-5,3,-10,5,6,2,-3,-4,-1,-4,10,10,8,-5,10,-1,8,10,-8,-5,3,4,2,-1,-6,-7,-3,-10,-5,-3,8,2,9,4,-7,10,8,7,3,-5,3,5,-7,8,-9,-8,6,-3,-4,-2,7,2,-7,7,7,9,2,-7,-9,4,7,-3,4,9,4,-8,5,-8,8,-4,-7,-4,-7,9,-5,3,5,-4,3,-6,5,10,3,-4,-3,-4,1,1,-9,7,-5,6,8,8,3,10,9,8,8,-1,-10,3,-4,-3,-5,7,-1,-10,4,10,-4,-5,-10,3,5,-1,2,8,8,-1,10,-5,-2,9,2,3,-10,9,1,8,-9,-3,-4,-6,-10,7,6,2,6,-4,-1,-6,-5,-10,8,-4,-8,-7,8,7,2,-10,8,6,5,2,-5,8,-3,8,-6,-8,9,-7,1,-5,-9,-3,10,1,-7,3,3,-4,10,8,6,10,-3,4,-2,9,5,8,-1,-1,2,-2,5,-1,-10,1,-9,5,10,8,-10,3,8,1,8,8,7,-7,6,1,9,3,-5,-9,-8,6,3,3,9,-1,-9,-1,8,1,5,9,-4,-3,-1,-5,-9,-4,8,-4,-3,-8,-3,-9,4,-3,3,-5,4,-7,10,3,3,-2,9,10,10,-4,-6,3,4,10,-2,6,7,-3,5,6,7,1,-3,-6,10,7,-5,-7,-10,6,-4,-8,-6,-7,6,1,3,-7,-2,1,-7,7,9,-8,-10,9,-9,-6,7,-9,1,6,1,-10,8,-6,-10,-4,-8,-9,1,4,-4,-4,-6,-4,5,10,-3,1,-2,6,-2,2,-7,8,-9,-5,-3,-6,5,7,-9,-6,-7,-6,3,-10,4,-5,-3,8,-5,4,5,-8,-9,-8,2,-3,-10,8,10,-8,-2,-7,6,-4,10,9,-8,-6,2,5,10,2,6,-3,8,3,6,2,7,5,5,-5,-2,10,-6,9,3,-6,-9,-5,2,-4,2,-2,-3,-8,-2,-1,-5,10,6,-7,-9,7,-2,5,-2,2,-7,5,-5,8,6,-4,8,2,3,2,2,10,-2,10,3,8,-8,8,5,-1,-5,4,8,7,7,3,-9,-7,-5,-4,9,-8,6,2,-2,-4,7,10,8,-9,9,6,3,8,10,-8,-8,6,2,7,1,3,-3,-5,2,-6,6,-8,7,8,-10,4,3,-3,-8,-3,4,-8,8,-6,9,-1,5,-3,7,-8,8,-6,4,7,2,2,5,2,5,-4,-3,-7,-4,9,-2,8,-10,10,-6,7,-7,3,-9,5,-7,6,4,8,-4,9,3,3,-4,7,-9,7,3,8,-8,-4,2,7,-3,-3,-10,-2,-2,8,9,-5,10,-6,3,-5,-7,-6,-8,4,-7,-10,-9,-2,1,-4,-5,-1,-10,-10,-3,4,3,-10,6,-4,-8,10,9,8,-1,-2,-3,3,-2,-8,7,6,5,-9,-9,-2,7,6,-3,6,9,10,3,-7,6,9,-7,-3,2,-3,-5,1,6,-10,4,-3,-5,6,8,-2,-9,10,-7,-10,7,1,-8,-5,-10,5,4,8,5,-7,7,1,-2,2,4,-10,5,4,-6,2,-6,1,-9,9,-4,8,10,7,-10,1,3,6,5,-5,-9,-6,-6,-4,7,-8,4,4,5,5,-2,-9,10,-7,5,5,-9,-8,-9,9,-10,8,-4,9,4,5,2,3,9,-8,-1,8,-3,4,-3,-7,3,8,-8,9,2,-7,9,-8,-1,-5,-7,-10,-1,4,9,-6,9,-10,-2,-8,-2,-9,-7,1,3,-10,-9,3,-5,4,10,-6,6,5,-6,10,-8,-1,8,-4,-8,-3,5,8,5,-5,4,4,-9,5,2,5,8,6,10,9,6,-6,8,-2,6,9,-3,9,2,9,-1,3,-10,5,10,-7,-4,7,7,-8,-9,6,-10,3,-8,5,7,-7,6,9,6,2,9,3,-1,2,7,-1,2,8,-8,-7,10,4,-8,2,8,-5,5,6,8,-5,5,-2,2,5,3,-5,-10,9,-1,-3,8,8,3,-1,-2,-7,-4,4,-1,6,-4,6,-9,1,7,2,9,1,6,6,8,-6,4,-8,10,-8,-4,-10,1,-4,-5,-6,-8,10,-8,-1,10,1,-9,7,-3,-6,1,-10,7,-1,-4,-9,-5,-6,3,-9,7,7,1,5,-10,10,7,4,-6,6,-1,2,-4,-8,8,-2,-9,8,4,3,4,-5,-3,-5,-3,1,-6,1,3,-6,1,3,6,10,-5,-6,-6,10,-2,-8,-5,-3,4,-8,-5,6,-2,-6,2,-2,8,-6,1,-4,2,-7,3,-8,6,-3,-2,-7,-10,5,-8,9,-5,2,4,8,-10,-4,7,-1,10,3,5,-8,-2,8,-2,-10,3,-2,8,2,-6,-2,-10,5,-8,-6,8,-9,9,-2,4,9,-2,4,-2,9,-5,-1,3,-7,-2,-4,-6,-1,-2,-5,5,-6,6,8,-8,-4,-7,8,-8,-10,9,-1,7,-2,-6,-7,-3,-7,-3,-7,-3,4,5,-9,10,-7,1,5,-1,9,4,-8,1,5,2,4,2,-5,-3,-2,-2,-1,-9,5,3,-9,1,1,-3,-5,8,-10,9,-7,-8,5,-10,-4,-5,10,2,3,5,5,-2,-2,-10,-9,6,3,-5,-3,-7,3,-6,9,10,-3,-8,4,-9,-10,-7,-9,-5,8,-3,4,-9,-1,1,5,2,8,-8,-9,9,5,-8,-10,1,2,10,-3,6,6,-5,-1,-10,-8,3,5,-9,-9,-7,2,8,1,4,7,-9,7,5,-3,-9,3,-2,-4,-9,10,4,3,5,-10,-7,9,9,1,4,-8,7,-4,8,-10,1,-2,-1,6,8,-5,2,-2,-1,-4,-7,7,2,4,1,8,3,8,-6,10,-10,-10,2,-5,2,-8,-10,4,-8,3,-4,1,10,1,-6,1,-9,-10,10,4,3,-5,-8,-6,-9,6,-9,-1,8,6,-7,10,7,-9,-5,10,-4,2,6,-8,6,-8,-3,-7,-3,7,-1,5,8,6,-6,3,3,-2,5,4,4,-8,1,9,10,3,4,-9,4,8,-4,-8,8,6,9,-7,-1,1,-2,-7,8,-4,-8,7,-8,1,-7,9,-8,1,4,-10,4,-9,2,9,-4,4,-7,5,5,-7,5,-10,-10,10,-2,1,4,2,-3,-9,5,-2,-2,8,-1,2,3,-10,-6,9,3,-3,9,6,-8,3,-6,-8,10,-8,2,-8,5,-10,-8,-10,-10,-1,-8,-4,-2,4,10,8,9,-4,9,6,9,6,6,2,9,-4,10,5,-5,-10,2,-6,4,-2,1,7,-5,-9,1,6,5,-6,9,7,-4,-8,4,5,-3,3,6,-6,-4,-1,-6,-4,-6,6,-4,7,9,-2,1,-1,8,-8,5,-5,-1,-4,3,10,8,3,8,-2,7,-1,3,3,-7,6,-7,1,-9,-6,4,-2,-1,-8,6,7,-4,-4,-10,10,9,9,9,5,8,-2,5,-9,-8,-7,-7,-10,3,-7,10,-2,5,7,3,4,3,-6,-8,7,1,10,10,-6,3,-8,3,4,-1,-10,4,8,9,-8,-8,-3,-2,-5,-5,5,-6,-3,-5,5,-9,-2,10,-2,5,-6,-6,-10,-1,1,7,6,-3,2,-7,5,3,-2,-9,-4,4,-5,-6,-1,1,-3,-9,2,7,9,-3,3,-4,-1,-7,7,-4,4,-1,-6,-8,-1,-7,1,8,-1,6,7,7,3,4,7,-6,5,-7,-10,-2,-2,-5,-7,2,-4,-10,-8,-10,4,5,-9,4,8,8,4,10,-1,8,-10,3,-9,-4,3,10,-7,9,-5,3,-4,-3,1,6,-8,7,7,1,-5,6,10,-5,10,6,-9,-1,10,-5,7,10,-8,-5,-8,-2,1,1,4,10,-4,-1,5,-7,-8,-5,-4,10,3,8,2,-4,-7,-6,-5,-5,5,9,2,7,10,2,-1,7,-8,5,2,4,-8,-10,-7,9,5,-3,8,4,4,-2,-10,8,2,9,7,-3,2,-8,-10,-4,-7,-9,-9,-2,1,-7,-1,-9,2,-6,1,-4,5,-3,-10,-8,-4,-3,2,-7,7,3,10,-2,-10,-1,-10,-6,-8,-7,-8,7,-4,6,-6,-8,-6,3,-3,-10,3,-5,-6,-7,-10,5,1,-1,-2,10,9,-3,7,2,-10,2,-4,8,8,8,-10,-7,5,-6,6,-7,4,-1,-5,-2,7,-2,-2,3,-4,9,4,-4,3,-7,8,3,5,6,9,9,-3,-9,9,-7,2,8,-2,-6,4,4]], dtype = "int32")#candidate|1695|(1, 2520)|const|int32
call_1694 = func_1569_call(relay.reshape(const_1695.astype('int32'), [15, 14, 12]), relay.reshape(const_1695.astype('int32'), [15, 14, 12]), )
call_1696 = func_1569_call(relay.reshape(const_1695.astype('int32'), [15, 14, 12]), relay.reshape(const_1695.astype('int32'), [15, 14, 12]), )
output = relay.Tuple([bop_1684,call_1687,var_1688,const_1689,call_1694,const_1695,])
output2 = relay.Tuple([bop_1684,call_1690,var_1688,const_1689,call_1696,const_1695,])
func_1697 = relay.Function([var_1683,var_1688,], output)
mod['func_1697'] = func_1697
mod = relay.transform.InferType()(mod)
mutated_mod['func_1697'] = func_1697
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1697_call = mutated_mod.get_global_var('func_1697')
var_1699 = relay.var("var_1699", dtype = "int64", shape = (3, 11, 6))#candidate|1699|(3, 11, 6)|var|int64
var_1700 = relay.var("var_1700", dtype = "float32", shape = (5, 84))#candidate|1700|(5, 84)|var|float32
call_1698 = func_1697_call(var_1699,var_1700,)
output = call_1698
func_1701 = relay.Function([var_1699,var_1700,], output)
mutated_mod['func_1701'] = func_1701
mutated_mod = relay.transform.InferType()(mutated_mod)
var_2123 = relay.var("var_2123", dtype = "int32", shape = (1, 1, 16))#candidate|2123|(1, 1, 16)|var|int32
const_2124 = relay.const([[[-4,-4,-6,-2,-10,-10,6,-9,10,10,5,-8,9,1,-3,-5],[-7,3,-2,6,1,-1,3,-3,4,-8,-3,1,-10,-5,5,-9],[9,-10,6,-4,-1,3,9,-6,-9,1,1,-2,-6,3,9,6],[1,-10,1,3,1,3,-1,-2,-3,2,6,-6,-1,6,8,-7],[-7,7,4,-9,7,-6,2,1,-2,-3,5,3,-6,-7,2,-7],[-4,8,-4,3,-10,2,-9,-9,-3,1,10,7,4,4,9,-8],[6,1,4,3,-2,-6,-5,-2,-7,-8,7,-5,-9,-1,-10,1],[7,-6,-5,7,-2,-10,7,-7,7,3,1,8,-7,-10,8,-1],[-3,-7,5,-10,6,6,-4,-10,-10,-4,1,3,-1,-4,-6,5],[3,-10,6,7,-9,-7,-8,3,-10,-1,9,8,8,-10,-9,6],[8,10,7,6,-2,9,2,8,-9,2,4,9,-3,8,3,-4],[9,5,-3,2,-5,-7,-2,-8,5,-10,-1,-3,-5,8,5,9],[10,-2,4,-10,6,6,4,1,-6,-10,-10,-1,4,-7,3,-4],[9,-6,1,-3,-5,9,7,-1,-2,7,-6,9,10,-10,1,8],[2,-4,-9,-2,-10,-6,-2,7,9,-6,-6,4,2,-1,-10,2],[2,-6,6,7,-10,2,-9,-6,7,-3,8,9,3,-2,10,6]],[[-1,-4,4,-5,-6,8,8,-4,-7,-5,4,4,7,-2,-1,10],[-5,-1,8,5,4,9,-1,-4,10,5,7,-3,7,-1,6,-2],[-6,9,-8,-5,-10,-4,-9,-9,-10,-3,6,-1,-1,-1,2,7],[-6,-1,3,-9,-2,5,-1,-10,-1,-8,-9,9,-9,-9,2,10],[-4,-4,-1,-3,-4,-4,-7,6,7,4,-2,10,-3,-6,-6,-5],[-9,1,-10,3,-5,10,3,-1,-1,8,7,-9,-6,-7,3,-3],[9,-2,-8,-4,4,-6,-4,-7,1,-10,-3,9,6,-2,-8,-9],[8,-7,-8,1,8,1,2,7,-3,-2,-8,4,8,2,10,4],[-5,-8,1,9,7,-1,5,-4,7,-3,-8,-8,4,2,-1,5],[7,-1,1,10,-7,8,-7,10,-6,-8,3,-1,-7,-2,1,-4],[-9,9,-6,-9,-7,7,-7,7,-2,-10,-2,2,7,-8,1,7],[9,-9,2,-10,-3,5,3,-5,-9,-10,7,-10,7,-5,2,-8],[9,-7,-5,1,1,-10,-8,-1,-2,-9,4,5,9,-10,3,3],[-5,-2,7,-10,9,-5,5,-3,-7,-7,-2,-4,6,2,-4,-1],[5,-1,7,1,1,3,1,4,8,1,-8,3,-9,-1,-9,-3],[-6,-9,6,-10,-7,3,-1,-6,-8,1,1,10,-6,-4,3,-3]],[[2,1,3,4,-6,-8,4,6,-10,-10,8,3,-10,2,4,2],[7,-5,7,-8,6,8,9,-2,10,2,-1,-1,-1,2,-8,3],[-10,-4,6,9,-8,-2,2,8,5,7,4,-6,-3,-10,5,-6],[10,3,2,9,-1,-8,6,-3,7,-6,-2,-6,3,7,9,-4],[-3,-8,8,-6,-8,-2,-2,5,8,2,8,-6,6,-10,7,8],[2,5,-1,1,-7,6,-9,-3,-4,9,-5,-2,6,-7,-7,-3],[1,1,2,3,-6,-1,2,3,8,-8,7,-5,-4,-8,-7,2],[-2,10,-6,3,4,8,-9,1,-5,10,1,-4,8,-7,-4,5],[-5,-10,-9,-2,9,8,3,3,10,-1,-1,-9,-9,-3,7,-1],[-2,3,3,6,-7,8,-6,9,6,-1,5,5,-6,8,-6,-6],[-9,-2,6,2,2,5,-3,-6,-6,-6,-4,-6,-9,4,3,-6],[10,-3,-5,10,-7,7,-1,8,9,8,-3,6,9,7,-1,-4],[-10,9,-4,-3,4,-2,3,10,-2,-9,-3,6,6,-1,4,-10],[-4,10,-8,10,4,-6,-10,1,5,6,7,-9,5,2,7,6],[2,9,10,1,1,-3,4,-4,3,8,-4,-3,-6,10,8,7],[3,-8,-7,-7,6,1,3,10,7,-8,-4,-2,7,-6,-10,-2]],[[10,6,-1,-6,-2,-9,-2,4,9,-2,2,-5,-6,3,5,8],[7,3,-6,9,5,4,-8,-9,-10,-2,-5,-3,-10,-6,4,-2],[-8,1,3,-2,7,-10,-6,-4,9,9,4,6,10,1,-6,5],[8,-7,-5,1,-7,-8,9,-7,9,4,-10,7,2,4,-1,-1],[-6,-9,-9,2,3,-7,6,-5,-2,8,9,5,-3,9,-9,-2],[1,5,-4,-4,-1,-3,6,9,5,3,-3,5,-7,-2,7,1],[-5,-7,-5,10,-3,10,9,9,-9,9,-3,1,-9,8,7,5],[8,-3,-5,1,-5,9,-2,-9,-5,4,3,5,8,-7,3,-7],[5,5,4,-8,-7,-3,9,10,10,-9,-9,4,-10,-2,-4,5],[10,9,-6,-3,6,-1,-7,9,7,10,-4,3,5,8,-4,-9],[1,-8,-5,-9,6,7,1,1,-8,3,-3,-8,2,8,-7,10],[-4,-6,-7,1,-4,-7,8,4,8,8,6,2,1,5,6,7],[-4,-1,7,4,-2,-10,-10,-6,4,10,1,-1,1,-10,1,-8],[-10,6,1,-1,-3,-5,5,-1,-7,-2,-2,-1,-1,1,6,-9],[-8,-4,-6,-4,-5,-4,-2,1,6,10,-8,-5,1,3,7,6],[8,6,4,-5,-1,-1,-1,-4,8,9,2,7,9,-1,-3,-2]],[[6,2,-10,-8,5,-3,4,5,1,9,7,-7,7,5,-6,8],[-4,1,-9,-4,10,3,7,5,-4,-9,2,9,5,-7,10,-10],[-10,-10,-4,3,4,-8,-4,6,9,8,3,-1,3,9,5,-10],[4,6,-4,10,5,-8,-2,8,2,-5,5,-5,-3,-4,6,5],[-3,8,10,-7,7,-7,-10,4,-10,6,4,6,8,8,-3,5],[-6,7,-10,-2,-8,10,3,-9,-3,-10,8,6,5,1,-9,-8],[-7,10,7,-6,10,-4,-2,-5,2,1,1,-8,-1,8,3,-4],[9,10,7,-3,-4,9,-4,10,-2,-5,-10,1,10,-1,5,3],[-1,-2,-1,-5,-3,-10,1,-10,10,-7,-8,4,-10,-3,2,9],[-1,4,-5,6,5,3,-3,-10,10,-5,-8,8,-6,2,-1,3],[-1,3,-8,-4,-4,-1,-9,3,-2,8,9,-7,9,3,2,3],[1,-1,-6,1,1,-8,-7,-2,1,-7,9,5,5,9,2,-1],[7,-1,9,2,8,-2,1,1,7,-2,6,-4,3,-8,-5,-9],[3,5,6,3,7,8,-1,-10,9,-3,-9,-7,2,9,-6,-8],[-10,2,10,9,-1,5,-6,-10,-9,1,2,4,1,1,-4,8],[-4,10,-4,-1,-4,6,-3,4,-1,-4,10,7,1,-1,-9,-9]],[[-7,-6,5,-7,6,-8,2,-3,-6,-6,-4,10,-2,-10,-7,-1],[5,-9,-5,-1,2,9,1,6,10,-4,4,-10,4,-7,-9,7],[-8,-6,5,-3,9,10,6,7,-8,10,6,10,2,-1,8,4],[-6,-8,-10,-5,-4,10,1,-8,10,-10,-10,4,-10,2,3,-3],[-8,8,-1,-8,-10,-7,-6,9,-2,2,-1,-3,-1,6,-3,-1],[-9,1,-3,-7,5,-5,10,7,-3,4,-5,-5,-4,-8,-10,-9],[1,-1,9,9,-5,-5,8,-6,2,7,1,-2,2,3,3,3],[2,-10,5,4,-4,4,2,-5,4,-10,3,-9,3,9,3,-2],[9,3,1,-5,-8,-9,10,3,-5,8,-6,-4,-8,9,-8,-6],[10,10,-9,-8,-5,7,10,-9,6,6,-4,-3,5,6,2,10],[-3,5,7,-3,10,-8,-2,7,4,-10,-4,-3,-6,2,-2,1],[-3,1,10,10,2,10,7,-1,-1,-1,5,-3,4,-10,8,-4],[-8,8,-7,-5,8,-4,-3,8,-6,-10,-5,-4,10,7,-3,-6],[-4,-8,7,-9,-9,10,5,-9,-6,-4,3,2,-9,-9,8,5],[4,-10,-9,5,-1,1,4,-9,-8,-3,-10,-2,6,3,-1,-5],[-4,-5,5,10,-7,-3,10,3,-4,8,-3,-3,6,-2,-6,1]],[[3,4,5,3,-6,5,8,-5,4,6,-8,8,-5,-8,-7,-5],[-6,-8,5,-3,10,9,5,10,-9,-9,-5,8,7,-3,6,7],[-8,-3,10,4,-3,8,6,7,4,10,-3,1,4,-8,-3,4],[-4,4,2,-4,10,-3,1,10,8,-5,8,-4,-10,-5,-9,-4],[-6,7,-6,-3,2,-1,-7,-8,-10,-7,1,-3,6,-3,6,8],[-6,10,-3,-8,-10,-7,9,4,-10,-2,-6,1,-2,5,-4,2],[7,3,6,4,-10,4,10,-3,-1,-1,-7,-9,1,-10,8,-6],[-3,-4,10,-6,-10,-10,-10,-1,7,10,-6,-4,2,3,-6,-2],[10,10,3,-10,8,-5,4,-9,-8,6,5,-5,6,6,9,-2],[3,8,-10,1,10,-4,10,7,2,5,7,-6,-8,-4,-8,3],[-8,7,1,6,2,10,-5,1,2,7,-6,2,-3,8,-3,-5],[5,-1,-2,10,8,7,6,-3,5,-8,2,2,6,-9,4,4],[-9,-4,3,-4,-3,-6,-2,7,-8,-8,-7,-6,-2,-4,2,-4],[2,-10,3,7,7,-4,2,-6,-6,-1,-5,-6,5,-5,-9,-5],[-8,-7,1,6,-5,6,-2,8,-9,3,-7,2,10,-6,-6,-1],[6,-7,1,-4,4,4,4,-5,2,-8,-8,10,10,8,-6,2]],[[6,8,3,-4,4,4,-1,-5,-9,-9,-3,-7,-4,9,-2,4],[2,-5,-6,3,-6,-1,10,-7,9,7,6,5,7,-2,6,-6],[9,-3,-10,-8,5,-1,-5,5,-8,-6,-4,-4,4,1,1,-8],[1,-7,10,-7,-5,2,-9,-4,9,1,10,6,1,-5,5,5],[5,-6,7,9,-2,-2,8,-7,-7,-2,-2,-4,-6,-7,2,-6],[6,-1,-3,-3,-3,-3,-2,-2,7,-9,-2,3,-9,6,6,10],[2,-3,4,-10,-4,2,3,6,-5,2,7,3,10,9,3,-6],[-1,-2,6,1,-6,7,-6,1,7,9,1,-1,-5,-4,8,-5],[-10,3,10,-7,9,-6,-6,-6,-10,-8,9,9,8,2,5,4],[-6,-1,-10,-1,-10,-4,3,9,5,4,5,-7,1,10,9,-9],[-10,9,9,-1,-8,5,-4,-5,-2,-2,6,-1,-1,3,4,4],[2,-3,3,10,-8,-3,9,-3,10,-9,7,5,10,7,-10,7],[-4,5,-4,-1,9,-7,3,-3,-5,3,-2,-1,6,8,1,-2],[-6,4,-3,4,-10,-2,1,8,-8,10,-9,4,-1,5,-8,6],[-3,3,7,8,10,-10,5,-9,-1,5,-1,7,-1,-3,9,-2],[10,-6,5,-4,-6,-6,-4,-6,-5,7,9,-10,-8,9,10,10]],[[9,9,-2,6,7,8,8,-8,-2,3,-1,-4,-3,6,6,-7],[2,6,-9,9,-6,-9,1,-1,2,-4,4,2,1,-3,4,2],[4,-7,10,-10,4,-3,5,-8,8,10,2,-1,9,-9,-4,8],[-9,-2,2,-7,9,9,-6,3,-9,-7,-4,-3,2,8,3,3],[-1,-10,7,7,-9,-2,-3,8,7,-2,-4,7,-9,2,-1,5],[-2,-4,4,8,10,-6,-4,-7,-2,3,-6,-1,-7,6,-10,1],[5,4,9,-1,-2,3,3,-7,1,-10,2,9,-6,7,-3,9],[-4,-7,5,-3,9,2,-8,-9,-1,-3,2,-2,8,-4,10,10],[8,-6,-9,9,4,10,-10,-10,-7,6,6,8,9,-6,-7,2],[4,-10,8,-1,-3,-6,-9,6,1,7,-9,-3,7,9,4,3],[1,2,-7,2,3,2,4,2,-9,-3,4,-1,3,-6,3,-6],[-5,4,1,-9,-3,10,1,3,1,-10,-3,-5,-9,5,10,-6],[2,-4,-5,-1,6,-8,-3,8,-10,-8,-7,9,-4,10,8,1],[-8,-4,10,5,-7,6,5,-4,2,8,-5,-7,-3,-4,-7,-2],[-2,9,-2,-1,-7,-6,10,-7,-2,-2,-4,-5,-10,-8,6,1],[6,3,2,4,-10,2,-10,2,6,8,-5,-6,4,3,4,9]]], dtype = "int32")#candidate|2124|(9, 16, 16)|const|int32
bop_2125 = relay.multiply(var_2123.astype('int32'), const_2124.astype('int32')) # shape=(9, 16, 16)
output = relay.Tuple([bop_2125,])
output2 = relay.Tuple([bop_2125,])
func_2129 = relay.Function([var_2123,], output)
mod['func_2129'] = func_2129
mod = relay.transform.InferType()(mod)
var_2130 = relay.var("var_2130", dtype = "int32", shape = (1, 1, 16))#candidate|2130|(1, 1, 16)|var|int32
output = func_2129(var_2130)
func_2131 = relay.Function([var_2130], output)
mutated_mod['func_2131'] = func_2131
mutated_mod = relay.transform.InferType()(mutated_mod)
var_2726 = relay.var("var_2726", dtype = "float64", shape = (13, 8, 2))#candidate|2726|(13, 8, 2)|var|float64
var_2727 = relay.var("var_2727", dtype = "float64", shape = (13, 8, 2))#candidate|2727|(13, 8, 2)|var|float64
bop_2728 = relay.maximum(var_2726.astype('float64'), relay.reshape(var_2727.astype('float64'), relay.shape_of(var_2726))) # shape=(13, 8, 2)
func_1105_call = mod.get_global_var('func_1105')
func_1108_call = mutated_mod.get_global_var('func_1108')
const_2735 = relay.const([[8],[-5],[3],[-1]], dtype = "uint32")#candidate|2735|(4, 1)|const|uint32
call_2734 = relay.TupleGetItem(func_1105_call(relay.reshape(const_2735.astype('uint32'), [1, 1, 4])), 0)
call_2736 = relay.TupleGetItem(func_1108_call(relay.reshape(const_2735.astype('uint32'), [1, 1, 4])), 0)
uop_2751 = relay.atanh(call_2734.astype('float32')) # shape=(1, 1, 4)
uop_2753 = relay.atanh(call_2736.astype('float32')) # shape=(1, 1, 4)
func_1697_call = mod.get_global_var('func_1697')
func_1701_call = mutated_mod.get_global_var('func_1701')
const_2755 = relay.const([-1,1,-7,-10,9,2,7,-6,6,-6,10,3,-3,9,3,6,-4,8,7,10,5,1,1,-6,7,-3,9,1,6,-4,6,3,-8,1,-10,-3,-3,7,-2,-3,5,5,2,10,4,9,3,-1,-4,6,1,10,-2,10,-2,-4,-6,2,5,-8,-5,10,-8,7,-1,-9,-10,8,8,9,-8,-8,2,-6,2,-5,-10,3,5,-3,4,-3,-1,-8,9,-10,10,5,9,-8,-5,8,-7,-7,-2,1,2,-10,-4,-3,-8,2,-4,2,8,4,3,9,2,4,-6,-2,8,-3,-2,5,-3,10,4,1,-3,5,7,-8,2,5,-7,-8,8,-7,-10,-10,1,-2,-5,-9,8,-6,10,3,6,-9,4,-9,-9,-3,-1,5,5,1,10,8,-5,-10,8,4,1,8,1,8,-4,-10,-3,8,-10,-10,10,8,-4,-10,-4,-8,-8,-10,4,10,8,2,4,-1,-1,-7,-1,-6,-3,-7,1,-2,2,9,-2,5,-8,5,-8,-6,-9,10], dtype = "int64")#candidate|2755|(198,)|const|int64
var_2756 = relay.var("var_2756", dtype = "float32", shape = (420,))#candidate|2756|(420,)|var|float32
call_2754 = relay.TupleGetItem(func_1697_call(relay.reshape(const_2755.astype('int64'), [3, 11, 6]), relay.reshape(var_2756.astype('float32'), [5, 84]), ), 1)
call_2757 = relay.TupleGetItem(func_1701_call(relay.reshape(const_2755.astype('int64'), [3, 11, 6]), relay.reshape(var_2756.astype('float32'), [5, 84]), ), 1)
bop_2765 = relay.right_shift(const_2755.astype('int16'), const_2735.astype('int16')) # shape=(4, 198)
output = relay.Tuple([bop_2728,uop_2751,call_2754,var_2756,bop_2765,])
output2 = relay.Tuple([bop_2728,uop_2753,call_2757,var_2756,bop_2765,])
func_2806 = relay.Function([var_2726,var_2727,var_2756,], output)
mod['func_2806'] = func_2806
mod = relay.transform.InferType()(mod)
mutated_mod['func_2806'] = func_2806
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2806_call = mutated_mod.get_global_var('func_2806')
var_2808 = relay.var("var_2808", dtype = "float64", shape = (13, 8, 2))#candidate|2808|(13, 8, 2)|var|float64
var_2809 = relay.var("var_2809", dtype = "float64", shape = (13, 8, 2))#candidate|2809|(13, 8, 2)|var|float64
var_2810 = relay.var("var_2810", dtype = "float32", shape = (420,))#candidate|2810|(420,)|var|float32
call_2807 = func_2806_call(var_2808,var_2809,var_2810,)
output = call_2807
func_2811 = relay.Function([var_2808,var_2809,var_2810,], output)
mutated_mod['func_2811'] = func_2811
mutated_mod = relay.transform.InferType()(mutated_mod)
var_3353 = relay.var("var_3353", dtype = "uint16", shape = (12, 16, 16))#candidate|3353|(12, 16, 16)|var|uint16
var_3354 = relay.var("var_3354", dtype = "uint16", shape = (12, 16, 16))#candidate|3354|(12, 16, 16)|var|uint16
bop_3355 = relay.greater_equal(var_3353.astype('bool'), relay.reshape(var_3354.astype('bool'), relay.shape_of(var_3353))) # shape=(12, 16, 16)
output = relay.Tuple([bop_3355,])
output2 = relay.Tuple([bop_3355,])
func_3372 = relay.Function([var_3353,var_3354,], output)
mod['func_3372'] = func_3372
mod = relay.transform.InferType()(mod)
var_3373 = relay.var("var_3373", dtype = "uint16", shape = (12, 16, 16))#candidate|3373|(12, 16, 16)|var|uint16
var_3374 = relay.var("var_3374", dtype = "uint16", shape = (12, 16, 16))#candidate|3374|(12, 16, 16)|var|uint16
output = func_3372(var_3373,var_3374,)
func_3375 = relay.Function([var_3373,var_3374,], output)
mutated_mod['func_3375'] = func_3375
mutated_mod = relay.transform.InferType()(mutated_mod)
var_3380 = relay.var("var_3380", dtype = "float64", shape = (15, 2, 6))#candidate|3380|(15, 2, 6)|var|float64
uop_3381 = relay.cosh(var_3380.astype('float64')) # shape=(15, 2, 6)
func_2129_call = mod.get_global_var('func_2129')
func_2131_call = mutated_mod.get_global_var('func_2131')
const_3388 = relay.const([3,-7,4,7,9,3,-7,-5,-6,3,-8,-3,1,1,1,8], dtype = "int32")#candidate|3388|(16,)|const|int32
call_3387 = relay.TupleGetItem(func_2129_call(relay.reshape(const_3388.astype('int32'), [1, 1, 16])), 0)
call_3389 = relay.TupleGetItem(func_2131_call(relay.reshape(const_3388.astype('int32'), [1, 1, 16])), 0)
output = relay.Tuple([uop_3381,call_3387,const_3388,])
output2 = relay.Tuple([uop_3381,call_3389,const_3388,])
func_3391 = relay.Function([var_3380,], output)
mod['func_3391'] = func_3391
mod = relay.transform.InferType()(mod)
var_3392 = relay.var("var_3392", dtype = "float64", shape = (15, 2, 6))#candidate|3392|(15, 2, 6)|var|float64
output = func_3391(var_3392)
func_3393 = relay.Function([var_3392], output)
mutated_mod['func_3393'] = func_3393
mutated_mod = relay.transform.InferType()(mutated_mod)
var_3457 = relay.var("var_3457", dtype = "float64", shape = (13, 5, 5))#candidate|3457|(13, 5, 5)|var|float64
uop_3458 = relay.sinh(var_3457.astype('float64')) # shape=(13, 5, 5)
func_780_call = mod.get_global_var('func_780')
func_783_call = mutated_mod.get_global_var('func_783')
var_3464 = relay.var("var_3464", dtype = "float32", shape = (65,))#candidate|3464|(65,)|var|float32
const_3465 = relay.const([[6.813860,-0.249891,-9.182766,-1.550168,-6.708551,0.481231,4.663571,-4.779540,-9.432286,-9.179779,-4.206885,-6.015173,-0.760946,4.806321,9.945926,9.071350,-8.164366,6.145241,-9.988198,8.573509,-5.032783,4.144321,8.213282,8.546864,6.773808,8.792167,-5.008227,-9.316339,7.627793,-9.672002,-7.457047,7.177122,1.311884,7.856163,5.134993,1.419739,-1.378848,1.845281,-7.104318,6.911794,-7.195793,-8.164351,-7.688399,0.696334,-6.878399,-5.948742,2.512236,-9.477416,-8.848475,-9.116037,-0.442087,-4.527722,4.020074,-3.462405,-6.383506,4.484116,9.487176,1.921314,-1.355157,8.913376,-4.629532,4.527446,-4.308331,4.653139,-8.416361,-2.660122,2.192309,2.998647,-9.308874,-3.108074,1.952678,6.522336,8.301020,-2.656083,8.893899,8.929139,1.129630,5.324057,-2.804472,-1.453348,-1.944096,1.773804,9.840139,-8.117426,9.655622,-4.513215,-8.591439,4.238192,0.413063,5.447574,5.526808,-2.430470,-0.802892,-3.603894,-2.983356,7.027330,2.660280,-0.943014,6.868602,-7.708066,-1.406064,2.241539,-0.845451,-3.387373,-2.923974,-7.379084,-4.394786,-3.369498,-7.432315,6.649360,9.926256,-4.179110,-5.498156,-0.400219,4.549066,-5.384505,9.266628,4.309818,-4.824990,6.982267,5.093642,-9.621867,1.532407,-1.577544,-0.156411,-1.410965,-2.357580,-8.764525,-3.912450,-3.079379,-8.473949,7.037102,-5.516094,2.752437,-3.335155,9.750604,5.050200,-8.430253,-9.947338,-7.711265,-5.119325,6.335735,7.317075,0.871086,-7.860070,-3.049103,-1.445495,-4.621041,-6.670925,6.768540,4.904942,-1.705939,9.247087,4.918284,-6.987477,-6.958414,-5.815588,8.199161,6.735814,9.163756,7.491207,-6.089957,5.510058,-5.951724,7.478294,4.007133,3.854401,0.921704,-7.680825,-4.766332,-8.076612,3.425772,-7.802607,6.025116,-5.362473,5.091988,-7.796842,4.658653,7.591604,0.001054,-3.818618,8.010944,-4.060690,-3.278782,3.087006,3.938961,3.046691,-7.360902,-6.638410,7.942097,0.726737,-9.581556,7.989682,8.854281,0.302535,3.858298,3.041804,4.025261,6.597513,-6.353385,4.946831,-8.856558,9.862244,-2.717742,-2.954403,-5.314315,6.399252,0.919220,-8.041194,4.649791,9.003538,8.898906,0.044985,4.857390,-0.271594,3.642559,7.997327,-5.402696,-9.572380,-5.531686,8.005839,-4.528698,9.817605,2.591567,4.473266,-3.693039,6.675701,0.421169,-9.948220,8.065554,9.671030,-9.861657,-6.771271,1.990950,-6.626971,-1.858716,-4.598497,-0.795665,-8.183114,3.670594,-9.638443,4.261020,-1.843933,-5.985083,8.284865,7.415818,-8.761634,2.115873,1.350992,5.947739,9.113179,6.869286,4.255512,5.023881,6.851774,6.945093,-7.590053,5.297916,5.488877,-4.099686,3.686065,6.043219,5.457003,-7.172805,1.866931,-1.738952,4.961295,-0.194243,7.579505,2.782785,0.298309,-2.478347,5.580139,-1.891389,6.063681,0.342391,-0.237866,-7.758747,3.922741,-2.656026,5.926918,0.956129,-1.886993,3.959472,-6.657573,-7.191589,7.456242,8.284637,-0.135708,8.486053,-7.025538,-5.084735,-2.419455,9.924118,-5.968717,-6.208105,-3.023860,-4.343588,-0.132293,5.709380,-8.644061,-3.135600,-0.433025,-0.889165,5.468400,4.846856,-1.217635,-6.251487,-2.160298,3.452837,-0.080251,-5.921530,9.568083,1.333313,-3.312066,-9.535017,1.692442,-1.428461,7.952186,-5.772383,0.842781,-1.405313,-8.561508,-9.869335,-1.873384,3.708760,4.967245,-8.015832,-2.339710,-5.535624,-3.447414,-9.890860,9.917436,6.121689,8.717340,2.228997,2.324428,8.083063,9.555924,3.648045,7.433059,-1.937528,-1.123866,9.774720,-2.897415,-5.660923,3.145502,-9.241816,8.430409,2.704168,-2.452358,2.070979,-0.517738,0.909014,-3.444222,-4.079791,8.146466,2.616905,9.188644,-2.294754,-9.346587,-1.785191,1.415475,6.246163,-2.876055,-0.687451,6.409726,0.579845,-9.662006,2.349426,0.970093,-5.952819,-0.963601,-5.889351,-8.278748,-6.215587,2.484874,-0.201884,0.879016,-8.407449,-5.913852,-9.934167,-2.596849,-9.017615,-0.915500,-5.006717,0.171001,-8.389102,-5.152569,9.314242,-4.576359,2.853685,-6.221538,-5.884250,4.960397,5.365483,2.267364,-3.414107,6.817436,-9.647785,-0.019898,9.634914,2.132386,-5.915582,7.823255,8.488308,6.397284,2.785851,-7.569985,8.400049,-2.312659,-8.688823,9.293219,-7.987864,1.656130,-1.310053,9.839944,3.969970,-6.801257,-7.113548,9.625905,9.237918,-6.382839,-2.395390,-5.460210,3.550849,-7.708854,9.983528,-2.869509,2.254641,-3.492416,4.770251,8.660288,3.641811,-5.973483,2.471824,8.912508,-4.886405,-5.231418,-5.200477,4.917029,4.054469,4.747757,8.088449,-1.737482,6.341024,-2.550228,-2.865115,1.251931,4.418261,8.295543,0.775863,5.496198,7.880001,-9.122216,2.122109,6.221542,-4.785825,8.526000,-5.793691,-1.368048,-8.290081,-3.461922,-9.167713,-8.265517,-2.351044,0.504544,-9.945086,0.366804,-0.894734,-3.693268,9.720092,-1.803900,-9.521878,7.592916,-7.497322,2.161637,8.049896,1.549587,0.936035,5.063457,-9.281740,-3.659754,-7.219031,-6.336056,1.422074,-2.377240,-6.465316,-4.347113,-4.621794,3.258433,5.823198,7.092246,-0.546933,7.482857,7.574798,1.130106,2.685529,-2.930094,-2.004170,-1.977463,4.416859,-2.318447,2.410472,0.088490,4.489194,-4.712400,1.336555,5.795662,4.689132,7.270417,1.722155,-7.131343,-2.120162,-6.197756,9.307378,8.621755,4.963628,-1.519250,-4.236362,-5.909555,-2.332815,6.025258,1.071176,5.346584,7.032831,5.356782,-2.342091,8.993542,-1.200462,9.429721,-7.684270,3.836347,-8.752366,-9.745778,5.030585,-2.203780,-8.788439,1.769286,-6.649232,-5.355833,9.165309,1.999298,7.467621,9.702387,-3.655879,5.480510,6.130556,1.852667,-3.972589,-0.467288,-0.092313,9.988838,-1.191423,-9.154789,8.139289,-2.662649,-4.195912,-7.220806,-7.556601,-5.928194,-2.151599,8.572743,-7.281476,-6.541028,2.769179,-0.035444,4.679250,-0.311654,-2.841854,3.390531,1.724785,-3.337837,3.786678,5.287961,-9.045562,-9.095209,6.670751,-2.382336,-9.029034,-2.991714,-4.102882,-0.265924,-3.479294,6.670864,5.738220,-6.313403,8.608932,4.524787,-7.404109,-5.883317,-0.631758,1.549869,5.700371,1.769368,-6.136469,6.383553,-7.559738,1.466549,-2.342106,9.158980,0.008417,-2.749345,-9.202737,9.482296,-6.697388,-0.807167,-5.520045,-7.122654,5.261973,-5.840284,1.415825,-9.203848,5.618416,-9.746705,6.258718,0.320744,3.703656,0.503469,9.254400,-8.725695,-6.720998,-1.713454,0.527217,-3.707652,-6.992083,-1.018776,-1.011168,0.593362,-5.820855,0.485042,6.751600,-5.033094,-5.599112,8.859721,-9.073260,7.398305,-5.622916,-4.151799,-9.811865,-9.304696,6.079705,-2.311265,-3.606471,4.804139,5.297350,-7.202843,5.481990,-4.356136,-1.972831,-3.285945,7.048122,2.131332,3.731663,5.659763,1.803396,7.049195,9.490077,-9.030243,7.823959,-0.987971,4.167210,-9.941459,-6.960214,-1.390552,-0.024374,0.573853,0.171693,2.764621,-1.902054,-1.091010,-8.168822,-3.735937,-5.098429,4.159916,-5.888038,-3.598194,-7.633175,9.403781,8.371974,7.250471,-6.318344,-1.144567,-7.778296,-9.119161,-4.940610,-6.463953,-5.544390,-0.315741,5.810413,2.639612,-0.448202,2.583408,-3.488853,8.594373,7.183055,1.685563,6.355506,4.100311,2.751237,4.611958,-8.565559,-9.054950,-0.640604,0.364109,6.245158,-4.778732,3.872396,-7.976800,-2.730411,2.864341,4.894074,0.747719,-0.421492,-4.682995,-0.423028,-3.852217,9.355274,-5.422827,1.299186,8.017480,-3.408862,-9.597240,-9.867354,8.764544,-4.604595,-9.941391,4.224374,1.718280,-8.685932,6.903122,5.862098,6.903040,-3.382713,-5.124999,-7.000442,-2.707183,5.816418,-2.728306,-5.046198,-3.173733,-8.921592,-2.443185,-1.314353,-4.225362,0.699371,-3.204784,1.344468,7.679168,9.690282,7.126098,9.119802,-5.969524,3.043666,-4.314824,-8.952000,-5.175633,2.525163,-3.873318,-5.220955,-2.723718,-2.808805,-9.042084,0.948865,0.314762,-0.292072,-5.824009,4.130733,-3.396971,2.271482,-7.571590,-7.306030,-3.807801,3.276738,5.588162,0.348688,8.733199,-3.339710,3.580143,9.727572,-6.380663,-8.759572,5.116920,5.114899,-4.461774,5.971448,-0.459249,5.877259,0.588573,6.563120,3.588499,1.605608,-3.953624,-3.551218,7.241985,8.031899,8.434265,-9.162346,4.170501,4.165138,-5.451002,-3.863401,-8.941904,1.587655,-4.214843,-4.074049,-6.781229,-5.182105,-6.267010,-7.357667,-1.636206,9.654010,2.605940,-6.748406,-5.802032,-7.008811,-2.821647,1.584264,5.093202,8.501013,-3.962299,6.965285,9.132349,3.979855,-7.235064,2.897765,2.292743,3.611746,-5.126784,8.510699,2.993053,8.896875,-2.091100,-7.750324,1.441898,2.992794,8.300488,-5.878399,-5.580957,-6.660828,-5.840709,8.242260,3.723686,-5.439960,5.261780,-7.570673,-9.348641,-6.908201,-8.260527,-2.733825,-8.076742,1.629031,-6.861095,-6.799494,-4.403939,4.710060,-9.260680,-6.271912,5.429429,4.105155,4.861856,8.553464,4.344058,-5.966721,-7.659267,-5.054628,0.067977,9.887282,2.905716,-5.205863,-8.943889,-1.433469,8.790088,-9.278743,-7.148829,0.207877,6.805579,7.678723,-4.409595,2.398121,-7.534219,-8.959017,3.548378,9.107740,0.662397,-5.072621,4.849608,5.612357,-6.928526,-0.611015,4.131936,-2.434650,-3.627833,-9.914561,1.750237,-3.146362,6.790010,6.643094,-8.777392,7.116816,3.150267,0.177961,7.603320,7.484363,2.567155,-2.930955,3.892029,3.607752,-2.905850,-1.410916,9.047251,8.722197,8.424647,-8.985344,7.154113,-2.687794,8.189139,7.832571,-9.105440,-2.068713,-0.213624,-1.015348,2.399329,-8.033684,8.882822,-3.307454,8.013885,3.354814,-1.018202,-4.988057,-9.277199,-4.112214,-9.253084,-1.049322,-6.500987,-2.061433,4.098560,-8.704173,7.790417,-9.101495,-2.912436,7.835777,-0.194513,-3.840948,-4.463225,-4.133631,0.211198,5.472228,-0.503189,-2.085448,-8.025609,-7.284579,-9.451164,0.295039,9.580487,-3.683646,-6.893025,2.374005,2.116185,6.936607,-8.160830,-9.701968,0.883135,0.925727,1.688191,-7.913920,2.201604,1.041343,-0.426465,5.608604,-5.007630,3.588120,9.593546,3.555280,-6.356367,6.881673,-1.393893,5.488329,4.318492,8.291086,-9.577207,-7.532711,-2.760012,0.552012,-0.894411,-1.766220,4.677339,4.526669,-2.281031,0.214013,-6.589060,4.719183,-2.202200,-6.525350,-8.946006,-5.629040,3.984994,-5.996549,-5.476412,-3.184054,-4.755143,3.358336,-2.142850,-2.744000,4.923687,-6.725703,-4.683534,-2.480791,-8.602140,-4.402298,-5.470286,7.463480,-0.621004,-3.175663,-0.083178,8.870506,4.765812,-8.182878,-0.466348,8.013610,-7.399632,7.955115,8.720324,6.849697,-3.323736,-7.904145,-9.279940,-3.621696,5.056262,9.185998,-8.245514,-6.192027,9.515475,1.373224,-3.442488,9.937175,-0.662994,9.578297,-8.593494,8.050195,2.890042,8.078011,-7.376552,-4.348824,-1.672022,1.493071,-3.844302,3.740427,-9.958442,6.991984,8.400327,2.549960,6.588112,1.941774,7.674268,-6.984970,4.277878,-8.238163,-3.540825,3.174083,-5.936842,0.478205,9.630325,-7.938737,4.501198,-4.381201,-0.476983,2.749274,-2.754855,2.741621,4.724310,-3.482077,2.491452,-4.097581,0.823577,9.829791,-5.845562,9.527931,2.633135,8.407624,5.137838,2.958134,8.012657,-1.081503,2.380334,6.121847,6.471882,1.969970,-8.764743,-6.889881,-9.851950,8.423412,-2.022304,-6.094018,-0.776654,7.627604,3.832312,6.141251,6.020432,-4.188660,4.944546,7.595346,-3.245347,-1.368062,1.630240,-3.978793,-6.449084,-9.650950,-4.307028,-7.047787,9.470495,7.240408,-4.495865,8.751677,-9.474383,-6.533909,-9.559928,-6.368291,3.831841,3.621423,-4.367830,-7.505778,-2.967659,5.484989,1.140082,2.362435,4.573489,5.538069,-3.567294,8.886763,-3.357113,-6.496668,-0.074648,7.981151,4.159122,-1.916008,6.648632,-0.159939,6.296983,-5.092820,5.659109,1.632882,-4.181641,-4.270225,-6.871062,9.620432,-6.365578,7.208818,2.701389,-1.319265,3.212652,-7.979948,5.150998,-4.153855,-1.002943,1.571163,7.871140,8.910216,7.859359,-3.620373,6.078038,-6.431638,5.837474,-0.665829,2.521363,-7.099660,2.906623,2.578415,3.654072,-1.670929,-4.386896,-7.674175,-8.103133,-4.779295,7.356317,6.540889,-1.777922,-6.693626,4.693127,-8.577929,9.220605,-0.894839,2.135913,0.440808,5.420705,4.491891,7.668922,4.367769,1.538564,1.040394,-4.789447,4.237904,9.527948,9.855444,5.837213,6.185267,-3.754700,5.481281,7.141976,-2.972668]], dtype = "float64")#candidate|3465|(1, 1200)|const|float64
call_3463 = relay.TupleGetItem(func_780_call(relay.reshape(var_3464.astype('float32'), [13, 5]), relay.reshape(const_3465.astype('float64'), [1200,]), ), 2)
call_3466 = relay.TupleGetItem(func_783_call(relay.reshape(var_3464.astype('float32'), [13, 5]), relay.reshape(const_3465.astype('float64'), [1200,]), ), 2)
output = relay.Tuple([uop_3458,call_3463,var_3464,const_3465,])
output2 = relay.Tuple([uop_3458,call_3466,var_3464,const_3465,])
func_3490 = relay.Function([var_3457,var_3464,], output)
mod['func_3490'] = func_3490
mod = relay.transform.InferType()(mod)
mutated_mod['func_3490'] = func_3490
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3490_call = mutated_mod.get_global_var('func_3490')
var_3492 = relay.var("var_3492", dtype = "float64", shape = (13, 5, 5))#candidate|3492|(13, 5, 5)|var|float64
var_3493 = relay.var("var_3493", dtype = "float32", shape = (65,))#candidate|3493|(65,)|var|float32
call_3491 = func_3490_call(var_3492,var_3493,)
output = call_3491
func_3494 = relay.Function([var_3492,var_3493,], output)
mutated_mod['func_3494'] = func_3494
mutated_mod = relay.transform.InferType()(mutated_mod)
var_3655 = relay.var("var_3655", dtype = "bool", shape = (3, 16, 3))#candidate|3655|(3, 16, 3)|var|bool
var_3656 = relay.var("var_3656", dtype = "bool", shape = (3, 16, 3))#candidate|3656|(3, 16, 3)|var|bool
bop_3657 = relay.logical_or(var_3655.astype('bool'), relay.reshape(var_3656.astype('bool'), relay.shape_of(var_3655))) # shape=(3, 16, 3)
output = bop_3657
output2 = bop_3657
func_3661 = relay.Function([var_3655,var_3656,], output)
mod['func_3661'] = func_3661
mod = relay.transform.InferType()(mod)
var_3662 = relay.var("var_3662", dtype = "bool", shape = (3, 16, 3))#candidate|3662|(3, 16, 3)|var|bool
var_3663 = relay.var("var_3663", dtype = "bool", shape = (3, 16, 3))#candidate|3663|(3, 16, 3)|var|bool
output = func_3661(var_3662,var_3663,)
func_3664 = relay.Function([var_3662,var_3663,], output)
mutated_mod['func_3664'] = func_3664
mutated_mod = relay.transform.InferType()(mutated_mod)
var_4252 = relay.var("var_4252", dtype = "float32", shape = ())#candidate|4252|()|var|float32
var_4253 = relay.var("var_4253", dtype = "float32", shape = (1, 12))#candidate|4253|(1, 12)|var|float32
bop_4254 = relay.floor_mod(var_4252.astype('float32'), var_4253.astype('float32')) # shape=(1, 12)
func_1327_call = mod.get_global_var('func_1327')
func_1330_call = mutated_mod.get_global_var('func_1330')
var_4284 = relay.var("var_4284", dtype = "uint64", shape = (900, 1))#candidate|4284|(900, 1)|var|uint64
call_4283 = relay.TupleGetItem(func_1327_call(relay.reshape(var_4284.astype('uint64'), [10, 9, 10]), relay.reshape(var_4284.astype('uint64'), [10, 9, 10]), ), 1)
call_4285 = relay.TupleGetItem(func_1330_call(relay.reshape(var_4284.astype('uint64'), [10, 9, 10]), relay.reshape(var_4284.astype('uint64'), [10, 9, 10]), ), 1)
output = relay.Tuple([bop_4254,call_4283,var_4284,])
output2 = relay.Tuple([bop_4254,call_4285,var_4284,])
func_4307 = relay.Function([var_4252,var_4253,var_4284,], output)
mod['func_4307'] = func_4307
mod = relay.transform.InferType()(mod)
var_4308 = relay.var("var_4308", dtype = "float32", shape = ())#candidate|4308|()|var|float32
var_4309 = relay.var("var_4309", dtype = "float32", shape = (1, 12))#candidate|4309|(1, 12)|var|float32
var_4310 = relay.var("var_4310", dtype = "uint64", shape = (900, 1))#candidate|4310|(900, 1)|var|uint64
output = func_4307(var_4308,var_4309,var_4310,)
func_4311 = relay.Function([var_4308,var_4309,var_4310,], output)
mutated_mod['func_4311'] = func_4311
mutated_mod = relay.transform.InferType()(mutated_mod)
const_4495 = relay.const([[[-8.381861,-9.438994,5.946884],[-1.300677,9.511129,-5.967104],[0.460845,-3.282083,-5.584352],[-5.443430,-2.235946,-5.977037],[-0.410640,4.388883,-7.598048],[3.206206,4.813651,-6.997852],[1.455745,-7.223788,6.565507],[-1.288706,4.983866,2.353778],[3.941267,-9.959171,8.910439],[-5.882503,-5.051913,7.352714],[7.999307,-1.089827,-5.579201],[9.353885,1.879287,5.199634],[-6.081992,9.743226,-1.562385],[7.056842,1.864454,6.794184],[4.985347,-6.931749,6.393337]],[[-4.752723,-1.139492,-1.690428],[0.647108,-7.896774,2.355242],[8.170719,6.385353,7.891443],[-6.237308,-4.879748,1.061875],[-4.006423,7.412203,-6.745066],[-2.950265,4.857884,0.930692],[-4.546732,-7.563368,-0.805053],[-7.985923,9.519905,-2.691263],[0.036334,-9.155843,-9.876080],[-3.342886,-0.286865,-8.452402],[-0.066515,3.107397,9.054083],[6.922586,-1.776876,6.368143],[5.032801,-0.202233,5.120994],[-2.556796,0.528104,-6.626878],[-2.644144,-4.573507,2.206158]],[[9.491980,-2.775140,8.139537],[-8.719008,1.071229,-2.173580],[4.981577,-6.518394,5.885350],[-8.532181,-7.313167,-1.873527],[-4.294981,1.312518,5.319421],[6.799174,0.883542,0.053716],[5.676622,3.728234,-1.662623],[1.715022,-0.322945,-6.349612],[-8.583691,7.817474,-7.810954],[1.504188,-5.616321,-1.139594],[6.754210,-0.744976,7.355744],[-1.148153,6.409660,0.372549],[7.681864,7.427745,-6.506737],[7.530707,0.181823,4.696074],[-8.666053,-5.451005,-5.577108]],[[-5.359766,-2.818492,-0.309623],[2.780349,-1.890553,-5.817512],[-5.629155,6.612234,3.806237],[5.822647,-6.026213,4.604793],[9.317381,-5.710194,-7.236283],[-7.740380,2.921350,-8.623243],[-9.829128,-8.742723,-3.539013],[-7.659608,-0.499582,0.003699],[4.580027,6.191941,0.676352],[8.331461,-1.127667,-4.527264],[-2.669760,-9.249099,8.756997],[6.112797,-6.821328,-5.603775],[0.453668,1.934366,-0.327808],[3.967825,-7.620524,9.469842],[-5.964475,-3.326738,8.433689]],[[0.421510,8.211687,8.108462],[-3.881700,-6.728680,-1.389574],[-5.005952,3.153651,7.622489],[-7.937704,8.558040,7.137454],[-7.518590,1.335976,1.178406],[3.955046,6.813794,-5.399709],[1.042118,4.476472,5.744802],[-1.553658,7.402105,6.395480],[-6.496263,-2.610370,-0.860704],[-1.465984,1.131196,7.563722],[-7.664352,5.069170,0.529436],[-8.012985,1.439614,-2.462205],[2.677172,-3.797704,-0.790611],[-8.656164,5.971230,-8.290044],[-6.004724,-7.779371,0.434746]],[[-5.946706,-7.854069,7.581532],[0.555732,-9.091725,4.921731],[3.909709,8.141769,-0.746442],[-8.519986,-4.159027,9.698857],[5.926307,-7.667732,2.822785],[-1.909574,2.911065,3.664135],[-8.793988,5.572955,3.874821],[-1.257972,4.884553,-6.389784],[6.152121,-5.442434,-1.100275],[3.227766,-1.460199,8.743340],[5.051018,5.089740,-3.678272],[9.852633,-1.411898,2.691120],[3.265964,-7.152256,-4.458667],[-7.825330,8.835916,0.328895],[-9.807352,-0.165154,-6.056651]],[[-6.147186,7.832140,8.315509],[5.553660,-4.090173,4.325716],[7.697979,5.322119,0.666148],[5.034290,-9.676101,2.511504],[-0.920719,-2.320086,-2.842293],[8.808723,-7.127032,-2.899794],[-4.013300,-9.359481,9.920867],[1.069227,-6.067329,0.978340],[-8.378767,-9.251682,4.684218],[-1.646578,5.146265,-2.576101],[-0.539781,2.218507,-7.656026],[-0.829337,3.089695,-7.267999],[-8.943752,0.544971,-5.995545],[-2.957958,4.631587,7.420332],[-9.411288,5.622911,-8.317978]],[[0.103328,4.516643,4.224219],[0.820940,-1.416554,-0.746813],[0.831586,-4.507886,-4.180435],[2.055733,6.569226,6.787556],[-1.490916,9.775933,7.557950],[0.028300,-6.280258,6.513830],[6.945426,8.820477,7.329174],[-2.035943,-9.059960,-4.786411],[5.732172,8.382434,-3.751810],[-5.620519,3.108469,-0.920126],[6.607228,7.654948,-0.180622],[-9.858397,0.567038,-7.240931],[0.969218,-6.243963,2.490317],[-4.128159,-0.688092,-8.916023],[-8.721567,3.359449,-7.068775]],[[3.250409,-3.126440,9.408772],[8.980801,-6.889184,2.334582],[-6.806083,1.817202,-6.485829],[5.269865,1.448613,-0.775798],[-5.126151,-4.639081,-8.014709],[-1.318031,4.881345,0.241157],[5.370380,-9.931184,7.965066],[-5.506520,-4.549072,-6.261918],[0.112401,-3.804733,-7.916580],[-0.669978,9.204175,-7.918416],[7.556876,8.051027,1.693219],[6.586788,-1.611198,-1.817991],[7.192769,9.284836,-3.736502],[-1.628997,3.510745,9.706228],[1.224036,-2.961071,-2.520033]],[[1.285581,3.840085,-1.136819],[4.798174,-9.888902,3.047455],[5.456982,2.783301,8.979915],[3.024411,9.362969,-4.831189],[-3.400362,-8.203466,-0.442958],[3.403664,-7.369071,1.081662],[-7.867125,-9.847099,-3.026298],[4.439646,-9.167818,-5.785616],[1.175970,4.616306,-3.614800],[1.310969,-8.330287,6.000774],[-9.630184,-4.352606,-7.121411],[-4.045395,-7.132688,9.382790],[-1.865057,-3.374830,7.659914],[-3.663406,-2.580713,-6.861440],[6.307179,6.296025,4.215002]],[[3.433827,-2.455431,2.549093],[1.536187,7.229174,-5.654018],[-3.304139,1.221681,-4.049079],[0.281814,1.486032,-1.479541],[-4.061686,7.729457,0.060781],[-4.451399,6.487447,-2.824403],[2.805831,-2.182502,4.287460],[1.621426,5.045836,3.317997],[-9.642272,8.676419,-5.588366],[9.612765,6.208943,5.496857],[9.004220,7.495606,-6.673050],[7.253245,5.626744,-2.702569],[9.393126,-2.701559,-3.921432],[-4.384848,-0.128399,5.794687],[0.187516,0.983612,6.165750]],[[-2.371438,7.019908,3.262552],[5.354464,9.755192,-7.917239],[-9.849704,-5.490221,3.497812],[-3.836225,5.086400,5.420565],[0.812273,5.707692,9.829274],[8.485084,4.588372,-1.498921],[-4.331422,-3.672467,-6.168188],[4.487909,-3.370045,-9.283263],[6.135639,0.553527,8.473747],[0.718320,3.193962,-0.165210],[5.256400,-7.362612,-0.630370],[-2.063981,4.981360,-7.904572],[2.835076,-3.399638,4.427641],[2.253624,2.622700,0.166146],[3.710315,1.494719,0.529148]],[[-1.595284,-5.552171,-4.822576],[2.150947,6.051279,4.157707],[-8.102417,-2.316940,-9.173372],[8.644612,-4.615779,-0.238609],[-4.045201,-6.345141,-0.851928],[3.130864,-9.180103,-2.681841],[-9.068939,5.352378,-1.958785],[1.643431,-9.794298,8.486673],[-5.634009,-7.522554,9.187851],[-3.539554,1.619122,7.933807],[6.847612,-2.788905,-2.600636],[-7.650475,-4.455921,9.274947],[-2.262284,1.233025,-3.058866],[6.613965,-5.089590,7.144484],[-9.194538,9.381292,-2.304769]],[[0.673510,1.676456,9.133838],[-9.024618,-6.760211,-1.572264],[0.906236,-2.594271,2.288087],[1.072938,6.294817,-9.502604],[9.331893,7.177534,-7.009798],[-8.477638,7.095969,0.107759],[2.216442,-0.079968,-3.873654],[5.726136,5.994223,6.609533],[-7.820495,5.084995,-5.397387],[-4.736277,-5.869419,-5.575354],[0.428255,-0.770281,-8.077736],[-0.835988,-6.261002,0.530280],[9.590046,-7.109176,-0.683474],[0.876305,7.430558,0.229850],[-2.934808,5.199432,0.430510]],[[-8.034728,-4.154364,6.086982],[-7.823069,0.072205,-5.091938],[-4.457254,6.399424,-3.456096],[-4.054316,0.858942,-7.956317],[6.455133,-8.343657,8.868041],[-2.303350,2.900195,-2.179093],[7.219369,-9.178178,3.532184],[7.547238,-0.452171,6.264348],[-6.834965,-2.636106,8.054142],[-4.900834,8.547206,3.492141],[-3.006243,-1.265618,4.563190],[-9.304666,-1.788396,7.679008],[6.578300,5.126005,7.428860],[-1.568006,-8.623173,9.741733],[2.810932,-2.623674,7.731268]],[[5.289132,4.736045,8.243755],[9.199022,6.934997,-1.689994],[6.840597,3.735666,8.488481],[2.083426,-0.895326,-8.372647],[7.188231,-1.389384,-3.254901],[-2.438108,0.283946,-6.427945],[-7.975624,0.184227,3.912838],[-6.480803,8.025918,0.509737],[-3.634667,5.391783,-7.948581],[2.522527,6.174179,9.200392],[8.010506,-5.883395,6.233521],[0.766910,-7.017130,7.878559],[-2.397753,-2.979374,1.030517],[-8.097230,8.421334,-0.236317],[8.689246,5.012010,9.993180]]], dtype = "float32")#candidate|4495|(16, 15, 3)|const|float32
var_4496 = relay.var("var_4496", dtype = "float32", shape = (16, 15, 3))#candidate|4496|(16, 15, 3)|var|float32
bop_4497 = relay.divide(const_4495.astype('float32'), relay.reshape(var_4496.astype('float32'), relay.shape_of(const_4495))) # shape=(16, 15, 3)
output = bop_4497
output2 = bop_4497
func_4507 = relay.Function([var_4496,], output)
mod['func_4507'] = func_4507
mod = relay.transform.InferType()(mod)
var_4508 = relay.var("var_4508", dtype = "float32", shape = (16, 15, 3))#candidate|4508|(16, 15, 3)|var|float32
output = func_4507(var_4508)
func_4509 = relay.Function([var_4508], output)
mutated_mod['func_4509'] = func_4509
mutated_mod = relay.transform.InferType()(mutated_mod)
var_4612 = relay.var("var_4612", dtype = "uint16", shape = (8, 4, 6))#candidate|4612|(8, 4, 6)|var|uint16
var_4613 = relay.var("var_4613", dtype = "uint16", shape = (8, 4, 6))#candidate|4613|(8, 4, 6)|var|uint16
bop_4614 = relay.bitwise_xor(var_4612.astype('uint16'), relay.reshape(var_4613.astype('uint16'), relay.shape_of(var_4612))) # shape=(8, 4, 6)
func_1327_call = mod.get_global_var('func_1327')
func_1330_call = mutated_mod.get_global_var('func_1330')
var_4641 = relay.var("var_4641", dtype = "uint64", shape = (900,))#candidate|4641|(900,)|var|uint64
call_4640 = relay.TupleGetItem(func_1327_call(relay.reshape(var_4641.astype('uint64'), [10, 9, 10]), relay.reshape(var_4641.astype('uint64'), [10, 9, 10]), ), 2)
call_4642 = relay.TupleGetItem(func_1330_call(relay.reshape(var_4641.astype('uint64'), [10, 9, 10]), relay.reshape(var_4641.astype('uint64'), [10, 9, 10]), ), 2)
func_297_call = mod.get_global_var('func_297')
func_301_call = mutated_mod.get_global_var('func_301')
const_4644 = relay.const([-7.993663,-7.311298,-7.574067,4.774337,-1.278253,9.496540,3.399246,-4.599790,2.294479,6.026585,-3.407561,5.824119,5.169992,2.597841,-7.537308,3.372709,-0.582297,-2.278647,-0.254504,2.822734,6.481740,-1.398400,4.370526,-7.680410,-4.244869,0.732075,-5.032311,-6.299310,-6.239081,2.653734,4.977288,6.265008,-7.498094,0.229919,7.083571,7.352694,4.514878,4.436938,-5.965234,-6.974833,4.858171,8.992034,-2.515608,-6.137755,-2.604043,0.377326,-9.229929,7.042733,-0.912397,-7.961015,7.248177,8.967757,3.851614,0.342584,-7.588253,-4.216923,-8.554377,-6.759451,-6.510622,0.545342,-5.440058,-9.578422,0.789957,2.241218,-3.842388,6.826331,3.490314,1.157558,3.957274,-5.692384,-7.473305,-5.045222,1.758928,8.765153,3.055276,-9.937673,2.096125,-5.023947,-9.898181,-9.775776,6.276436,8.777006,-2.822979,6.503238,3.227420,-1.504784,9.968999,-7.119257,3.884787,-9.441536,-6.870287,-8.371258,9.429762,-1.923765,-3.970634,9.758429,-0.330309,-5.752066,9.109339,7.218409,2.453125,-2.403251,-1.949908,8.148423,-5.740459,-1.292536,-1.177615,-8.673532,7.374851,-6.948809,3.125387,-9.155853,-1.119214,5.937614,-2.863800,-6.185120,-8.411024,-7.549722,-5.795440,-2.391626,1.338924,1.189968,9.696276,-3.535303,0.282795,-8.023145,-5.772396,-9.595797,5.133554,-9.106155,-1.516686,3.175503,5.082131,0.122050,-6.608353,-3.242093,-4.466750,0.982575,3.461867,4.327782,-1.080722,8.558003,-9.303595,7.114873,6.081008,0.128364,0.201783,-1.382805,7.498920,-0.735766,3.650143,4.526251,-1.016487,4.510502,-0.652026,-0.901247,-5.482298,7.547814,-5.334360,-9.715990,-1.309595,4.707473,2.348320,-7.424708,-4.306412,-3.981742,5.910282,4.673975,-1.551721,8.446735,5.235535,-6.157929,-1.735490,-9.543102,-2.018369,-0.975908,6.332895,-3.948237,-9.089524,8.078138,5.922665,-0.223796,0.579289,4.637923,2.989770,9.177574,-2.444371,-7.262908,3.298989,1.893338,-7.058368,8.682650,-4.275280,-8.658982,-8.530909,3.977061,7.924688,2.437328,6.145781,-4.131932,5.385333,-8.341034,1.056002,-0.794611,1.424231,9.810499,-6.576796,1.530688,-1.318089,7.440992,9.791260,5.252816,-8.527854,-4.816869,4.688513,-3.758983,-9.478492,-4.756510,-3.351916,-1.522636,2.083020,0.684565,-4.520955,-6.371544,-6.441921,-3.638875,-6.013103,-2.037101,-0.940899,-6.873132,8.457810,-4.451340,2.041644,-3.254576,-6.419993,-2.178527,-1.304081,6.922779,-3.252920,6.286016,2.233485,3.407981,5.090872,-0.681608,-6.147724,5.465134,-5.971631,8.780059,2.174769,5.872736,-7.211051,9.188928,9.163222,-6.799913,-9.050865,-1.267895,5.175405,0.496616,2.979442,-3.392846,-1.115557,3.289128,8.909722,2.004217,-2.052147,-1.798034,-4.378108,2.561914,-4.386765,8.441665,-1.062131,-2.984816,6.698994,-6.408282,-9.786419,-5.510974,4.019776,3.452002,-3.912565,9.371438,3.723167,-4.420472,5.167606,5.464810,5.282742,-1.168237,-6.209134,9.635762,-9.236998,-2.719577,-1.146374,5.815893,-2.303661,-6.419037,1.587342,-4.772711,-0.649851,-1.998557,-8.379426,7.199359,4.702466,4.748162,9.978157,1.028414,1.655018,-3.268554,1.559257,7.599636,-5.030797,-5.038249,0.823003,-4.489577,7.405112,3.900809,-5.731103,1.294283,-2.175874,2.646670,5.471055,6.894579,-6.169115,-8.865082,3.191450,6.714999,-8.213411,-2.284437,-5.290616,0.219240,9.156359,-3.767437,6.564206,1.481779,-1.975759,0.535171,-5.318871,-1.861915,-4.875659,-7.641558,-3.279658,3.135467,2.288587,-4.741136,-4.293676,-1.542969,-1.719766,9.900172,-2.163530,4.697465,0.497539,1.088510,7.062227,-9.570709,-9.339287,-6.573808,8.361016,5.337467,5.097338,-9.831930,0.346058,4.280741,7.183247,-8.927521,-4.687780,0.897448,-2.701416,3.309862,-1.685859,-0.258662,-3.784340,-7.939337,-9.226769,-9.381225,9.923840,-0.194675,1.445373,4.398312,-5.282789,2.476079,3.952319,6.247888,0.039846,-1.163538,-5.717462,-8.287188,8.940569,-4.186204,4.793042,6.319728,-9.350661,5.056013,2.340115,-2.638200,-2.986042,-6.186800,-9.055450,-6.141608,-0.334510,-7.608625,0.667240,2.857485,3.631944,-5.739339,5.422765,0.688959,7.086997,9.847506,3.116879,9.552490,0.296398,-6.060707,9.452505,9.637460,8.826349,-2.780703,7.111866,8.657828,-2.682651,6.247199,9.832061,9.335599,1.816828,1.250715,-9.202872,6.473891,5.230815,-7.208537,-9.701749,-6.088278,3.935039,-5.740052,4.426826,1.387133,4.332657,9.639908,6.451253,-5.421683,8.230246,-1.201743,-9.825603,-0.277121,3.021209,-2.014285,-1.965309,8.709890,7.745976,-4.426318,7.574527,-2.939431,-7.863701,4.353455,-1.599297,3.533591,7.141940,-2.708039,1.029758,6.311624,0.702533,-5.079620,3.395348,3.590591,4.744080,7.499645,5.865488,4.690902,9.953947,0.624529,-2.380608,4.906034,-1.231985,6.150778,-9.481869,-6.841022,-4.812995,-8.482886,-0.267275,3.204169,0.053115,-7.182670,-3.080970,6.585403,-7.504357,-0.372283,0.069453,8.711776,2.714090,0.827617,9.133114,4.871703,-0.428665,7.684996,5.278677,-6.875379,8.648904,0.901208,-9.859592,1.402695,3.922858,-1.564704,-3.640782,0.387046,-2.638149,3.703318,-0.502238,-9.497484,-8.677059,-5.560910,-9.154282,3.234362,2.672230,1.480477,5.184466,2.183892,-4.878759,3.952633,2.623406,-0.533340,1.890387,1.898177,-3.858235,-2.852503,-6.115595,-1.456682,5.904289,-1.576142,-4.497772,-7.846226,7.162277,1.671678,0.966624,-1.447033,5.442189,8.716460,-9.637974,-5.710202,-4.820142,-4.552506,1.527106,3.732530,-9.264600,-3.381383,5.585472,-3.095739,-4.441094,8.066586,-5.224438,-1.324573,-5.237178,-1.208381,-0.057550,-3.490329,1.900619,6.423884,4.024535,0.629651,7.918260,8.722088,-8.988498,2.800545,3.731739,3.877568,-7.069934,1.508428,4.653489,1.028060,-4.977836,-5.157314,-6.066073,4.433092,-9.298674,7.244377,-1.088329,-4.157565,-6.174140,0.605067,-0.980902,7.706650,-6.378913,-9.568494,-0.534531,2.583650,8.104004,-0.575835,-7.462430,3.418403,-4.243770,-8.057878,7.972796,-4.588554,-0.824849,6.823138,-3.666081,4.938078,4.309490,-0.239333,6.957732,4.771336,8.158698,3.232706,1.165857,-2.994393,2.840245,-4.142727,8.709256,2.303955,-5.744537,9.850442,9.790616,5.077280,-5.133605,1.881063,7.458868,-7.053809,-4.933929,-5.459418,-1.154309,-0.252304,5.284768,2.653595,6.579826,-4.260366,0.684657,-8.996722,-4.107092,-8.589423,5.725643,7.575171,-8.196575,5.257100,7.285595,-7.788410,-5.153877,9.104251,2.514998,-9.028720,4.416303,-9.908796,-7.001521,-2.287092,-1.699172,5.454722,-2.167226,-3.099856,-4.708609,0.289631,-7.511074,-3.333716,-7.054720,-7.793129,-2.905425,-9.042671,-5.989979,-7.934772,7.225267,2.360439,0.728624,2.217225,9.307597,-8.835261,7.377653,0.990097,7.427645,-9.483921,-7.246760,6.291007,-3.488514,-1.522679,-4.767654,5.650114,4.132572,2.738077,-3.261133,-2.741651,7.858815,0.079588,6.605026,-2.212648,-8.350007,-7.389235,8.420869,6.628461,-7.023862,-9.661395,7.396661,-6.063140,6.032799,7.276283,5.655570,5.294574,3.594180,5.513048,-0.399424,8.522689,1.195414,6.979383,-0.316825,-4.907314,-7.404445,9.065778,-3.838703,9.914550,-3.085109,6.577811,-5.314049,-6.651327,-9.183679,-7.946929,1.263051,8.423421,-7.631700,8.971697,-7.358311,7.217540,2.096665,-6.464384,-0.614407,3.168757,-4.205343,-2.268997,2.909700,-5.765851,5.325498,-8.791955,3.652591,9.728814,-0.097846,-6.660660,-5.988273,-6.794622,-7.082784,9.239765,-4.597545,1.984442,-8.835085,3.143482,-7.463325,5.483785,6.365205,-8.216699,6.414995,-0.217282,7.955516,-9.835554,-3.928530,6.460165,5.407530,6.418162,7.244734,6.479701,6.244417,8.339135,-3.396469,1.842981,0.192578,-9.001636,3.842857,-9.290409,0.324856,-8.003462,5.136466,4.242104,-3.167352,-1.382452,9.157020,1.306909,2.915430,2.814822,0.792080,3.045806,-6.904552,-6.908196,-7.307406,-3.058370,2.334446,0.548031,-7.049130,-5.022237,2.077813,-3.915954,-5.276298,2.746517,3.960096,8.433219,8.939375,3.136747,1.171230,1.692791,-2.790839,8.816287,-8.312692,5.909970,0.008102,-9.844123,-8.542266,-1.703062,-0.173607,-7.857084,-3.381871,0.353183,-0.025508,1.782631,-6.645651,9.894842,7.572236,-1.708795,6.753651,-2.462063,6.605073,-8.106084,-2.882204,-9.160887,-0.399025,-5.486172,0.902583,1.959895,-1.130946,7.729930,9.298393,0.366313,6.902699,8.948232,5.306305,-2.385227,-5.746710,4.658349,4.732251,5.881302,-1.109673,-1.950174,1.786134,-3.560406,-7.064281,-1.545209,-2.153141,-0.334913,-9.846731,3.640913,-5.426361,-3.637537,-8.246551,3.647039,-4.052798,1.405405,-0.306207,-0.851801,8.850123,6.972275,-2.050282,-5.448753,8.755478,-5.827493,-7.454895,-3.918248,9.230318,5.563450,-1.223566,0.391532,8.182847,7.414931,-5.827214,-3.575674,-8.608320,-4.185525,9.103729,-1.701253,7.062629,-8.336042,-3.329223,-2.134247,-6.479979,4.800046,-9.687482,1.281033,3.374814,7.613996,-3.562847,-7.335643,0.831030,3.515823,4.921690,-0.827785,-1.951546,-9.500359,2.573340,3.842801,-2.125475,-1.402666,4.840982,-7.269647,-0.021382,0.238882,9.634524,-6.804541,-9.033106,-6.603878,3.013391,-3.918870,2.442273,-1.513723,-7.129167,-7.085128,-2.224056,2.129371,-1.758001,-7.912341,-1.353557,6.781855,6.247297,-0.184273,2.022722,0.758043,8.137667,9.124876,-6.244182,7.382803,1.809234,9.722032,-1.021930,4.985601,3.005859,-6.147067,5.427101,4.055332,7.151244,-1.598481,-3.362554,8.856127,-5.342510,5.986186,-6.985337,5.245285,-2.633399,2.537519,1.034003,-4.411232,-7.003153,-3.646147,-1.727652,1.591960,-5.922303,4.181618,9.619928,-0.529188,0.038061,7.091790,8.848579,1.167850,9.893080,-6.430387,2.739499,0.364247,1.385178,-8.069397,-8.660938,5.191729,8.700030,4.081581,4.802644,-3.062857,1.125993,-4.266558,-8.923593,2.787040,-7.361598,0.205375,-9.427692,-2.427141,-6.346653,9.888465,-1.935433,2.535228,3.946779,-1.284605,0.901560,9.444791,-3.455527,6.007259,1.803948,7.704232,-6.078865,-9.934498,2.019247,5.489092,9.785680,-7.469932,0.868791,3.507439,7.724748,-1.477427,0.030787,2.373620,1.879838,-0.973253,0.028974,8.336592,-4.327606,-9.985142,-1.233630,-2.951445,1.924240,0.546703,-9.663499,3.558328,-6.344029,-3.895032,-3.195002,-1.757820,-2.958632,-4.592108,-2.400149,-3.073291,9.092360,-5.284405,-7.536003,2.545137,-7.268718,-0.297331,-0.884705,-7.970119,6.192076,-4.561538,-0.730522,-3.819696,4.022735,6.075867,-8.184098,2.348196,-0.623003,8.064299,-0.698280,-4.794687,1.650255,1.893350,2.629929,-0.827608,0.616102,-7.188305,9.617922,-2.924732,3.030390,-6.759417,3.544995,-9.542003,-1.694769,-5.067936,-9.135231,6.304892,-4.610347,5.578203,-1.551912,-9.563597,-8.941210,1.402834,2.596782,6.682981,7.503627,-1.549975,0.861685,3.629107,-8.716072,-9.396979,-6.456757,-0.395380,-7.572414,-7.364870,-2.169668,-9.700654,5.199971,-4.182956,-9.411004,-8.585095,-8.623713,-2.966440,1.541429,3.196996,-7.252562,-7.353129,0.811993,7.182970,8.769958,-3.630178,-8.831238,-1.325070,-7.028674,2.468964,-7.935784,7.926926,-9.246401,-1.603979,8.775200,-5.628717,7.171466,-7.505176,2.993185,7.473556,-6.870691,-7.498084,-5.001342,-0.764805,-2.614120,5.907854,9.244314,2.283895,1.118571,4.906499,1.169890,-9.168395,6.124169,1.238737,-4.440636,7.154667,-9.945214,2.094220,-5.557909,3.222961,3.779647,-5.331644,3.709807,1.328513,7.857927,8.725038,-4.044455,-2.535992,9.442435,-3.148315,-3.476306,-8.750741,-4.191679,6.594043,1.480723,1.573476,-2.278600,-4.861402,4.258876,-1.677390,-8.581935,1.438532,3.818675,-8.953609,0.796057,-0.665260,-5.596850,-8.818329,-5.123874,-8.919549,-9.026600,7.576976,8.261214,3.441641,9.429260,4.109540,2.238105,-1.549226,-6.597581,3.330056,0.775043,1.297487,-5.490644,-7.057388,-5.508600,7.018387,-0.233791,4.547776,-2.195455,-8.395412,-1.256454,0.040119,-4.430279,-4.690068,5.438307,-7.329670,9.608930,-6.307540,3.557047,-8.747583,1.992845,5.920417,-2.531643,3.087886,0.894392,-5.684528,-7.260214,5.235986,3.490010,2.899124,-3.931344,-3.346481,-2.741177,8.331921,1.920426,1.263914,1.368704,9.553970,3.864609,-8.357224,-6.681286,-0.234747,3.572532,-0.607404,9.603228,5.647031], dtype = "float64")#candidate|4644|(1200,)|const|float64
call_4643 = relay.TupleGetItem(func_297_call(relay.reshape(const_4644.astype('float64'), [10, 12, 10]), relay.reshape(const_4644.astype('float64'), [10, 12, 10]), ), 0)
call_4645 = relay.TupleGetItem(func_301_call(relay.reshape(const_4644.astype('float64'), [10, 12, 10]), relay.reshape(const_4644.astype('float64'), [10, 12, 10]), ), 0)
func_2129_call = mod.get_global_var('func_2129')
func_2131_call = mutated_mod.get_global_var('func_2131')
const_4675 = relay.const([[2,-8,-2,-4,-9,-9,5,-9],[-10,-9,-3,9,10,-5,-9,-10]], dtype = "int32")#candidate|4675|(2, 8)|const|int32
call_4674 = relay.TupleGetItem(func_2129_call(relay.reshape(const_4675.astype('int32'), [1, 1, 16])), 0)
call_4676 = relay.TupleGetItem(func_2131_call(relay.reshape(const_4675.astype('int32'), [1, 1, 16])), 0)
func_3391_call = mod.get_global_var('func_3391')
func_3393_call = mutated_mod.get_global_var('func_3393')
const_4681 = relay.const([6.985772,-7.144135,-2.799183,-1.283134,4.380388,5.605046,-2.076749,8.413783,-2.702454,-7.484225,5.605512,-1.262342,2.193300,-0.091641,3.861490,-7.293028,-1.974039,-7.963379,5.229245,-6.045778,-8.034000,-1.771076,-9.046152,-1.049496,7.763320,7.434314,-4.276891,-6.699993,2.852947,-6.467559,-4.791071,2.106637,-7.230278,7.548459,5.714820,-4.029382,6.461133,-3.217276,-4.487710,6.165454,-6.672733,-3.204761,-8.751799,-8.061182,8.752687,-9.661538,0.246239,6.271433,6.963038,5.929112,-0.547673,-5.776983,3.586721,3.053090,-8.738616,1.309485,5.686166,4.036438,-6.767628,-5.596508,8.709762,1.031013,-7.015679,-8.298582,-6.583632,-9.236036,5.494317,-2.316367,-4.787905,-5.173029,-4.083528,2.446773,2.334805,6.014676,-5.033005,0.144251,8.544094,-4.355667,7.131947,2.771180,8.694957,-8.601642,9.880639,5.515611,5.717031,-7.551572,1.155909,2.509095,-6.620327,-9.177431,-3.281071,-9.955223,-2.234140,-1.701328,1.451515,9.175212,0.932334,4.623713,2.511296,-6.235371,-2.127050,-9.879547,-4.596739,-7.968075,8.875729,8.564761,0.190849,6.630623,1.785401,9.479716,7.403573,7.746291,0.525623,3.597581,7.886887,0.497210,-3.952745,0.260642,9.972105,-8.480020,-0.410560,7.464597,0.615022,8.783746,-4.979502,-9.069798,-5.208305,-3.122301,-6.891192,-1.710256,-3.257694,-3.211688,1.433950,5.636991,6.724872,5.539824,-9.108996,8.623189,8.685340,-0.548836,-3.032092,-6.464414,-8.321386,-5.092296,-8.069588,-6.914098,-4.918481,-4.875334,-6.633182,-0.625625,7.394518,9.031640,-8.463855,7.371273,1.649632,1.530950,-4.425584,-3.207350,8.124698,-9.164108,2.534852,-0.729098,5.442017,-8.882668,-5.422222,9.364622,-2.547137,7.253492,-9.563386,4.416303,-5.951040,6.875316,-4.166331,3.300581,-3.377219,9.313719,-9.311442,8.504085,-9.990599,4.943767], dtype = "float64")#candidate|4681|(180,)|const|float64
call_4680 = relay.TupleGetItem(func_3391_call(relay.reshape(const_4681.astype('float64'), [15, 2, 6])), 2)
call_4682 = relay.TupleGetItem(func_3393_call(relay.reshape(const_4681.astype('float64'), [15, 2, 6])), 2)
output = relay.Tuple([bop_4614,call_4640,var_4641,call_4643,const_4644,call_4674,const_4675,call_4680,const_4681,])
output2 = relay.Tuple([bop_4614,call_4642,var_4641,call_4645,const_4644,call_4676,const_4675,call_4682,const_4681,])
func_4690 = relay.Function([var_4612,var_4613,var_4641,], output)
mod['func_4690'] = func_4690
mod = relay.transform.InferType()(mod)
var_4691 = relay.var("var_4691", dtype = "uint16", shape = (8, 4, 6))#candidate|4691|(8, 4, 6)|var|uint16
var_4692 = relay.var("var_4692", dtype = "uint16", shape = (8, 4, 6))#candidate|4692|(8, 4, 6)|var|uint16
var_4693 = relay.var("var_4693", dtype = "uint64", shape = (900,))#candidate|4693|(900,)|var|uint64
output = func_4690(var_4691,var_4692,var_4693,)
func_4694 = relay.Function([var_4691,var_4692,var_4693,], output)
mutated_mod['func_4694'] = func_4694
mutated_mod = relay.transform.InferType()(mutated_mod)
const_5034 = relay.const([[[6.324111,4.690989,-5.832119,-8.823154,8.144872,3.299849,-9.937928,-4.238102,8.534916],[-6.841593,3.760792,-8.832280,-6.781573,1.933157,8.084558,5.225049,9.749465,-6.691518],[1.511583,3.229267,3.530712,1.017723,2.186932,-5.200644,7.780418,3.206101,5.594252],[9.417345,-4.531325,-2.129159,1.134363,8.846745,-5.884574,-0.026436,-7.839350,-3.690543],[-8.978213,3.017267,7.971284,-6.451098,-1.123735,7.328482,-3.408178,1.260627,5.868812],[-6.697328,9.427634,-8.294820,-1.740514,-1.078379,-3.917089,-2.711578,-3.141998,-1.602421],[-9.966986,8.236408,7.204057,-2.135263,4.821981,-2.532950,4.811038,8.533572,-7.948530],[-7.575774,-2.574234,3.362326,-3.511988,-8.976212,9.491041,-6.378165,2.339753,-6.916645],[5.672839,-6.202464,1.845836,2.602359,-3.404565,8.206213,-0.263516,2.108650,-6.003069],[6.273194,-5.882613,-5.173627,9.496433,0.119598,-9.979946,4.858230,6.275472,-2.013389],[-1.738142,4.011209,-0.789838,-9.030877,9.164393,7.054783,-9.414533,-2.405603,-9.454718],[2.491562,2.199170,2.308820,-1.192380,9.774939,-3.118678,-1.528737,-5.654380,4.610091],[7.117666,7.033620,3.836122,-0.734912,-8.258345,6.777875,3.661927,-3.950206,3.060979],[-0.360069,-1.703605,7.199585,0.641596,6.605698,-7.606085,-1.012605,-4.381559,-9.273016]],[[9.817585,-3.388973,2.213281,-3.138627,-5.639913,8.690070,-4.172369,3.135464,-5.004888],[-6.430539,8.647558,9.130638,-0.944760,0.108429,8.567170,1.919350,-6.631350,-3.203903],[7.303679,2.069469,9.475597,2.722816,-8.619160,-6.148979,-6.996263,0.987272,0.296420],[1.902110,-7.416263,-5.605533,-6.686364,-0.379953,8.621947,-9.703191,-6.379321,-8.582091],[-5.707854,0.513795,3.816323,9.321690,-8.757805,2.862921,9.039557,-0.323004,5.880119],[-9.999044,-5.292516,-8.749857,4.250323,-0.116674,-5.501924,-5.863446,-4.949276,-2.015973],[5.474785,8.616473,-1.385782,4.462714,6.851866,4.872322,3.575021,-7.187721,9.179716],[1.329344,1.707190,-0.565769,1.422563,0.527586,-7.676638,5.818126,5.927792,-5.121293],[8.713356,-8.690353,9.197854,9.263298,4.821350,-0.950353,-5.133761,7.313429,6.386221],[-9.202419,-2.892207,-0.411841,1.856150,0.948631,2.003526,-1.560230,7.998144,0.301682],[-6.300526,2.613153,1.735755,-9.089586,-5.406715,9.416171,0.262838,-8.384781,8.011975],[3.435839,-9.588536,-2.907999,-8.295038,-4.242960,3.788412,-3.779128,-1.968729,8.935014],[5.030889,0.260064,2.736231,1.763313,-3.591419,2.234666,-1.380657,-8.063824,6.503010],[-7.201718,0.951215,2.914180,5.831508,5.046074,-5.020042,4.792644,-2.520899,1.084699]],[[3.574654,0.041316,-5.681513,-3.500447,9.025604,6.331530,1.006280,-5.631923,-8.886531],[8.649790,8.835001,1.559953,7.843854,3.212402,8.928155,1.300312,0.251862,8.974612],[0.165201,-0.034716,-3.807272,0.712097,-9.405850,0.109194,-0.088652,-4.418090,0.915172],[6.248683,-0.861130,-3.785376,4.828169,-3.244735,-2.486935,-6.235257,7.516770,-0.658974],[-2.039611,5.692641,0.049718,0.825241,0.200230,1.298003,0.580884,1.255981,2.003670],[7.739151,-5.010633,2.149424,3.518310,-7.134416,8.157749,2.626034,7.219651,-0.653721],[4.401573,-1.543891,3.481082,2.591548,-6.331639,-4.246569,-2.096652,-7.153739,5.608734],[-2.877946,1.415131,-9.264432,1.264059,-7.566929,-5.396942,-3.486127,-5.624330,0.081515],[-2.754012,-5.622613,7.273110,7.464967,-8.219124,-7.335296,2.050422,3.851208,-7.020480],[7.243793,6.170333,-2.347590,-2.875072,1.131083,0.864901,-2.602324,9.502326,-2.650207],[9.413809,-4.123656,3.189430,-7.654809,4.271405,1.027377,4.850264,-3.450690,-9.408288],[-2.051048,9.073719,9.701773,-1.236016,-8.142507,-8.624069,0.512137,-6.001046,4.130690],[-1.300756,8.351492,9.562820,6.566484,5.101708,4.443897,-2.181991,4.311950,2.883618],[-1.909534,-3.254857,5.832698,3.664816,9.980509,7.308756,5.907139,-4.635045,0.991398]],[[5.708591,-1.450256,-9.898869,-2.298250,3.290367,-5.813043,-1.892835,2.238420,-5.436138],[8.798678,8.564982,5.363818,-4.066903,-3.034186,2.212421,-9.808405,7.638031,-0.641580],[8.740953,-5.970603,-1.517022,1.388121,-0.989308,7.479021,-7.535658,-9.340519,4.544563],[-7.973978,5.397026,-9.760452,-3.249415,3.438987,3.271096,-3.018551,9.971574,-6.791899],[6.671425,-5.035455,-4.177581,-0.788145,9.347081,-4.361553,5.662169,-8.637930,1.116537],[5.348136,7.982096,3.010225,-6.424959,4.416977,0.499375,7.511574,-6.675949,-9.913583],[-8.027464,6.701160,8.707261,-7.295220,-3.081619,9.049236,-3.754419,1.291497,-1.458736],[-5.770248,-9.558368,-1.093070,4.213718,9.632303,7.329478,-6.498068,-4.859584,4.011573],[6.401269,-0.578500,-1.698967,-6.430972,6.860052,2.697812,-5.931848,-4.526038,6.599333],[-9.879883,0.256975,-5.117904,8.318855,-9.534359,-8.133282,-4.632010,9.009903,1.727905],[-7.100496,-0.065410,-4.626279,8.416168,-3.227044,0.257575,-2.059358,-9.818494,0.420846],[2.900685,-9.675464,8.916405,9.390319,-2.399250,-1.050129,4.135200,0.002613,-6.542186],[7.455177,0.617449,-6.437626,0.926595,-7.231564,-0.202310,3.008460,3.748386,6.774201],[-2.090458,-3.563960,4.314264,4.562788,7.451066,0.213090,-0.375781,-7.495560,-1.850890]]], dtype = "float64")#candidate|5034|(4, 14, 9)|const|float64
uop_5035 = relay.sqrt(const_5034.astype('float64')) # shape=(4, 14, 9)
uop_5039 = relay.sinh(uop_5035.astype('float32')) # shape=(4, 14, 9)
func_297_call = mod.get_global_var('func_297')
func_301_call = mutated_mod.get_global_var('func_301')
var_5042 = relay.var("var_5042", dtype = "float64", shape = (12, 100))#candidate|5042|(12, 100)|var|float64
call_5041 = relay.TupleGetItem(func_297_call(relay.reshape(var_5042.astype('float64'), [10, 12, 10]), relay.reshape(var_5042.astype('float64'), [10, 12, 10]), ), 0)
call_5043 = relay.TupleGetItem(func_301_call(relay.reshape(var_5042.astype('float64'), [10, 12, 10]), relay.reshape(var_5042.astype('float64'), [10, 12, 10]), ), 0)
output = relay.Tuple([uop_5039,call_5041,var_5042,])
output2 = relay.Tuple([uop_5039,call_5043,var_5042,])
func_5050 = relay.Function([var_5042,], output)
mod['func_5050'] = func_5050
mod = relay.transform.InferType()(mod)
mutated_mod['func_5050'] = func_5050
mutated_mod = relay.transform.InferType()(mutated_mod)
var_5051 = relay.var("var_5051", dtype = "float64", shape = (12, 100))#candidate|5051|(12, 100)|var|float64
func_5050_call = mutated_mod.get_global_var('func_5050')
call_5052 = func_5050_call(var_5051)
output = call_5052
func_5053 = relay.Function([var_5051], output)
mutated_mod['func_5053'] = func_5053
mutated_mod = relay.transform.InferType()(mutated_mod)
var_5348 = relay.var("var_5348", dtype = "float32", shape = (15, 16, 10))#candidate|5348|(15, 16, 10)|var|float32
uop_5349 = relay.atanh(var_5348.astype('float32')) # shape=(15, 16, 10)
func_4507_call = mod.get_global_var('func_4507')
func_4509_call = mutated_mod.get_global_var('func_4509')
const_5355 = relay.const([2.755995,-1.628908,4.993596,-7.963168,8.640908,-0.110027,-6.883614,-9.003752,8.406006,5.049194,-9.149003,4.676818,-0.715840,0.102692,-8.613196,8.817691,-4.777939,1.145563,-0.901729,-3.308062,-4.606600,-8.235544,-1.422731,-2.036661,-5.296158,-6.131787,-7.493622,-8.435171,-4.735280,3.228283,4.251228,-9.253508,-8.326434,2.207308,5.629137,-0.979867,-7.566993,-2.914750,-1.328459,-9.547565,-0.979768,0.784754,5.790330,5.720332,9.220138,-3.282800,-6.018075,8.626337,1.701007,7.141682,-9.545998,-9.203822,-8.360232,-3.254754,3.677397,2.847055,8.593131,2.263222,-2.025849,-6.068184,1.338129,-4.706208,8.145847,-0.713582,-0.321612,8.381012,8.396578,5.643522,-7.460918,-5.822696,6.019646,-5.924550,-7.419437,2.044018,-8.018298,7.137937,-2.746413,0.849604,0.847173,-2.844660,2.298970,-5.086269,-9.864135,-6.399278,0.288127,-9.013253,-5.543079,-4.799005,-1.950843,-4.069832,4.827204,-4.352913,8.048372,-9.501556,1.525862,5.360979,-1.708338,-3.376352,6.128000,-0.315346,1.858910,1.973452,5.162499,8.708788,7.574472,-4.794805,8.010289,7.658072,2.347348,2.243203,-4.614277,2.690571,-5.904327,6.098210,9.959439,4.933641,0.992935,-9.363988,-0.716228,-0.408519,7.038433,-8.571802,-6.678228,-1.365731,2.456844,-5.216283,-6.946718,6.628650,9.172773,-6.689544,-7.932199,-9.595711,8.111892,-7.150696,-1.147985,5.273177,7.300031,-8.484152,6.474564,5.580866,-7.600439,2.369666,-2.727190,3.668931,7.660120,-6.917337,5.325066,0.226385,7.304063,-0.304195,4.803111,-4.239363,-0.672266,-4.426090,1.278401,-5.045640,4.139179,-5.847260,-6.214533,-5.377491,4.019237,8.542280,5.450442,3.128724,-6.978002,-1.585709,-5.359345,6.402031,5.877415,-9.706449,7.986678,-7.527747,-3.735602,-2.991206,-1.051109,3.218042,6.074791,4.612902,7.315915,-5.452740,-5.969215,7.286515,1.676695,1.017772,-6.460578,3.370622,5.617739,1.160740,-6.693818,-7.935359,-5.810553,-0.810806,3.873299,-5.236158,5.292157,-2.087052,7.529877,-8.191967,-2.139533,3.490775,7.437541,2.432038,-3.794744,4.672773,-9.336843,0.525738,8.212574,5.717512,8.463367,8.835666,-5.502831,4.564016,-2.218151,-1.666494,7.888370,2.061609,-9.318786,3.985449,4.076097,1.370955,4.931918,-4.136181,-4.366114,7.951342,4.337890,-0.919766,-6.826200,0.486159,6.912073,-7.457794,2.196934,-4.262041,-8.672881,-5.609783,-7.052756,6.083031,7.891271,-6.644656,8.122381,4.656304,-9.254638,-6.841397,7.089468,5.968795,8.333584,-5.909685,-3.318535,-1.151200,-0.034372,-0.446827,-4.789192,-1.278314,-4.121904,-9.726476,-0.929200,-5.411141,7.396190,-5.631790,7.128663,-4.605117,9.795638,3.199378,6.879136,-7.087925,0.165185,-3.745612,-4.532635,4.780140,5.774003,0.114729,9.040940,-8.637375,-2.718742,-5.849739,6.722442,0.881353,5.668513,-0.062041,-2.440702,-5.750597,0.602807,-7.449431,-0.018519,-9.391015,5.065582,7.982381,-7.215952,0.032066,-7.249043,-6.633447,-5.281162,-3.682261,-9.003315,-7.672997,8.457326,-5.404172,0.740371,0.033447,-6.789698,2.052346,8.501731,3.841774,7.706025,-4.049839,-9.716752,7.420543,-3.183182,-3.693222,-2.690071,-5.911365,2.599230,-2.412440,5.898433,-0.730024,-9.961548,2.045662,3.946266,2.980442,7.496598,-2.279159,-9.181120,8.244162,-7.488260,1.274493,-5.012257,-9.840900,5.357886,8.337912,-4.720085,-6.883497,1.641050,-1.302852,-8.439949,0.091000,-1.144991,5.882169,2.069106,4.646787,-6.678837,-6.720290,-8.425863,3.051937,-1.390030,-8.636595,-1.102618,3.156750,-0.868181,-0.760160,6.024117,4.074703,-7.669472,-3.953909,2.839423,7.311000,-3.321473,-0.097366,-7.918905,-3.144659,-5.172776,-4.977189,-9.189627,7.683853,5.802408,8.632541,9.392973,-4.649239,-6.994774,-0.084486,6.962762,2.291041,8.641841,-6.066983,9.520632,-7.960011,-3.032508,5.067579,-2.174145,4.259547,-9.304040,-2.896206,7.084083,8.561844,6.808612,5.893342,8.506385,4.823430,8.149796,9.092198,-3.472511,-5.094733,-0.674079,7.667720,-2.904741,-6.271465,-8.803671,4.377787,-9.625336,2.822850,-2.057523,-0.680497,8.511184,-6.547846,3.433061,-2.942197,-5.894444,-4.053029,-2.188475,9.497289,9.733311,1.987682,1.535818,8.494543,-2.160678,4.557164,-0.409150,-4.094911,1.679513,-1.082653,-7.378751,9.995369,1.673854,1.695557,3.653597,8.281012,5.854161,-8.265484,0.428370,-0.599159,-4.367993,-3.895251,5.526393,6.534161,7.242196,4.288045,-3.107579,-4.928562,9.118577,0.231157,4.702267,4.628634,1.737592,0.944944,5.924547,-9.531944,5.793716,-7.101639,-1.828794,-1.383878,0.008520,1.336767,-2.531339,-2.824165,-0.967837,-4.709413,-6.128027,-2.148710,-3.177032,-5.316705,7.676068,1.943398,9.328033,6.138790,5.273717,3.328679,5.132584,-6.838883,7.970235,7.222317,-3.351245,0.230696,1.167570,6.562997,7.983396,-6.338440,-2.566310,0.494807,5.149852,4.526648,-7.701353,-5.150157,-8.134744,2.246171,8.990290,3.426100,4.273032,-5.104179,-7.946548,-6.423389,1.042175,-9.627419,-9.340071,7.366329,-3.332167,3.073467,1.286012,-8.483107,-6.535289,2.863187,6.085160,-3.963148,3.060684,8.618353,-3.095410,4.757473,-9.832692,1.931834,-9.390002,9.867589,-9.866666,2.737172,-1.315602,6.806005,-5.089228,-1.670691,5.739793,-9.433877,7.278464,-9.610099,7.464338,1.713868,5.729607,-8.586725,4.548097,-1.522298,-0.033735,3.604735,3.097952,-3.059291,-7.939705,6.735734,2.731973,-5.206763,-9.173246,-4.980374,8.281826,1.873487,-1.211843,-8.340289,9.451723,3.399002,-6.615857,-4.591489,1.002659,8.967297,4.045864,7.095818,-6.159979,6.511294,-4.800051,-2.253432,7.441213,-4.445639,-2.919489,6.018337,6.826248,1.442923,-1.809671,-8.197426,-5.703972,3.077827,-4.827153,-2.330140,-2.661076,9.017438,3.225856,-4.430137,-9.500452,3.536617,0.062709,-2.191329,0.949142,8.724452,-4.183197,-5.891622,0.383084,-5.917408,-7.760819,4.555900,4.515327,-5.283132,-3.883624,4.412230,6.292926,9.861432,-7.371657,-9.620438,-5.446425,4.899309,1.461518,5.870732,4.111472,-5.492360,1.287791,-6.478953,3.261464,5.398626,-8.899443,-6.903958,2.361754,-7.827443,1.269350,-5.077385,-2.854283,-9.015969,6.658715,0.594890,-3.759373,-5.099994,8.970789,-9.867390,5.704320,-4.417804,-0.286642,-8.263347,0.379431,8.818680,9.059775,-5.695371,7.044138,5.061906,-3.114125,2.347330,-0.856978,-5.740694,4.865692,-3.549542,7.564448,-1.333461,7.364245,5.906445,5.488363,-5.827795,-1.649838,1.630112,9.759913,-6.880214,2.658882,-1.031781,-0.679960,0.755693,8.581175,-5.278276,-8.943569,8.870761,7.516168,-5.025970,9.278092,5.958031,2.303283,-2.576966,7.747126,6.515129,-2.288455,2.510196,-9.664171,-9.856374,-9.220643,-0.153006,5.687715,5.822165,4.138513,-4.867886,-0.424283,-2.858374,-0.806923,-4.812299,-7.797408,-6.046130,-0.937766,5.711785,-1.878331,-9.681265,-3.872188,5.521744,-3.696351,0.580542,4.237719,1.148577,2.783628,5.212794,-0.592115,-2.001561,2.234402,1.373932,-9.199890,3.449059,3.044413,4.090527,-4.915063,9.992716,1.877834,-7.190463,-7.275717,-9.710983,-6.009094,8.028824,-8.922681,9.798392,-5.175081,4.445524,4.947829,3.393570,-0.531282,-4.491792,-9.179045,-3.855037,-8.454407,-5.268446,-2.883379,2.206170,-4.564413,5.121263,-5.412545,2.610636,8.722314,8.137258,4.919862,6.109495,4.909018,-0.769169], dtype = "float32")#candidate|5355|(720,)|const|float32
call_5354 = func_4507_call(relay.reshape(const_5355.astype('float32'), [16, 15, 3]))
call_5356 = func_4507_call(relay.reshape(const_5355.astype('float32'), [16, 15, 3]))
uop_5357 = relay.sin(uop_5349.astype('float32')) # shape=(15, 16, 10)
uop_5378 = relay.exp(uop_5357.astype('float64')) # shape=(15, 16, 10)
bop_5392 = relay.power(uop_5357.astype('float32'), relay.reshape(uop_5349.astype('float32'), relay.shape_of(uop_5357))) # shape=(15, 16, 10)
func_4307_call = mod.get_global_var('func_4307')
func_4311_call = mutated_mod.get_global_var('func_4311')
var_5402 = relay.var("var_5402", dtype = "float32", shape = ())#candidate|5402|()|var|float32
const_5403 = relay.const([[9.137379,3.873905],[-9.496520,5.237912],[-1.483297,3.197723],[0.726071,-7.002369],[-7.122576,7.354863],[-6.284226,6.346800]], dtype = "float32")#candidate|5403|(6, 2)|const|float32
var_5404 = relay.var("var_5404", dtype = "uint64", shape = (90, 10))#candidate|5404|(90, 10)|var|uint64
call_5401 = relay.TupleGetItem(func_4307_call(relay.reshape(var_5402.astype('float32'), []), relay.reshape(const_5403.astype('float32'), [1, 12]), relay.reshape(var_5404.astype('uint64'), [900, 1]), ), 1)
call_5405 = relay.TupleGetItem(func_4311_call(relay.reshape(var_5402.astype('float32'), []), relay.reshape(const_5403.astype('float32'), [1, 12]), relay.reshape(var_5404.astype('uint64'), [900, 1]), ), 1)
output = relay.Tuple([call_5354,const_5355,uop_5378,bop_5392,call_5401,var_5402,const_5403,var_5404,])
output2 = relay.Tuple([call_5356,const_5355,uop_5378,bop_5392,call_5405,var_5402,const_5403,var_5404,])
func_5410 = relay.Function([var_5348,var_5402,var_5404,], output)
mod['func_5410'] = func_5410
mod = relay.transform.InferType()(mod)
var_5411 = relay.var("var_5411", dtype = "float32", shape = (15, 16, 10))#candidate|5411|(15, 16, 10)|var|float32
var_5412 = relay.var("var_5412", dtype = "float32", shape = ())#candidate|5412|()|var|float32
var_5413 = relay.var("var_5413", dtype = "uint64", shape = (90, 10))#candidate|5413|(90, 10)|var|uint64
output = func_5410(var_5411,var_5412,var_5413,)
func_5414 = relay.Function([var_5411,var_5412,var_5413,], output)
mutated_mod['func_5414'] = func_5414
mutated_mod = relay.transform.InferType()(mutated_mod)
const_6237 = relay.const([[[-3,1,7]],[[-6,4,-6]],[[-1,-6,-9]],[[-3,1,9]],[[-7,-10,-7]],[[2,-1,7]],[[-4,7,-6]],[[-1,-8,-1]],[[7,3,3]],[[-7,-5,1]],[[10,-3,4]],[[-1,2,8]],[[-10,3,7]],[[8,-10,-4]]], dtype = "uint64")#candidate|6237|(14, 1, 3)|const|uint64
var_6238 = relay.var("var_6238", dtype = "uint64", shape = (14, 3, 3))#candidate|6238|(14, 3, 3)|var|uint64
bop_6239 = relay.greater_equal(const_6237.astype('bool'), var_6238.astype('bool')) # shape=(14, 3, 3)
bop_6248 = relay.greater(bop_6239.astype('bool'), relay.reshape(var_6238.astype('bool'), relay.shape_of(bop_6239))) # shape=(14, 3, 3)
func_5410_call = mod.get_global_var('func_5410')
func_5414_call = mutated_mod.get_global_var('func_5414')
const_6258 = relay.const([-0.489527,-8.413662,-3.863340,-9.751153,-6.313351,2.480167,-1.505589,-9.071884,6.482361,4.745288,-1.155693,-2.902503,-6.600561,8.780371,2.749855,8.863872,-9.169660,-9.288807,-7.748148,-2.793672,8.449156,-8.872117,-4.380018,5.488517,-4.903178,-1.996552,-6.011560,1.779183,-1.645364,-7.957337,7.458252,8.040163,-3.059220,-3.703630,-3.843470,5.216329,-4.931791,1.559731,-1.284794,-3.356400,-3.399206,7.780138,2.240626,6.406556,5.820005,7.245389,2.478585,3.956526,-7.333218,-4.783751,-8.918091,-7.196485,-8.429890,6.578077,-0.351329,1.192260,2.605451,3.794072,4.059601,-1.800865,2.746074,7.911222,-5.262838,-4.901666,7.677626,7.135535,-2.565696,-0.829105,4.611419,-9.040846,-9.718458,-1.273270,-3.754548,-9.694287,-5.392280,7.927489,3.191960,3.799775,3.524992,-3.317854,-9.742512,-5.898707,-7.534270,4.637690,0.271306,9.378956,5.152305,0.547093,-1.431500,4.646950,-0.471634,-7.682391,-7.754401,8.281341,6.511955,-8.603178,0.680308,-8.457588,7.336616,1.913041,0.792150,-2.538540,4.241674,6.901722,-0.253341,-9.572012,5.652389,-1.563953,-1.447463,0.931772,8.403742,-3.263187,-3.927972,-7.040860,-9.538021,-3.351600,2.264840,2.867084,-7.069227,-9.058231,1.794908,0.248152,0.423833,-0.646978,9.867315,2.178947,5.833326,3.621733,-5.384161,-1.268788,-1.382456,1.308529,6.811094,-6.239565,8.244295,-9.518082,7.116183,9.682714,2.036449,4.355361,7.288754,-2.872453,-5.982896,-8.745859,6.536466,8.390380,-0.309817,0.255260,2.049070,9.201601,-5.608369,-1.311229,-4.106655,-8.936934,4.856333,-1.715689,-2.716213,-5.639800,4.120489,-4.308307,8.981164,-9.520995,-7.125449,2.960907,9.368437,-4.164434,9.877812,0.414042,-7.989385,1.764346,8.049549,-2.020781,-4.006259,-4.646785,7.325472,4.078035,4.337051,-6.568188,6.940188,0.654146,0.591849,3.753977,-2.887846,-0.094946,-5.222350,2.199995,3.552408,-6.383837,-7.206103,7.188592,2.750040,-8.757498,-8.534936,-0.728951,-2.288831,-5.835175,7.515594,-8.793021,7.258042,-2.233369,3.543386,4.403320,7.791554,-6.974842,5.154954,6.700086,-0.156176,3.104815,4.053220,6.472990,7.551234,7.655888,3.313111,0.392219,-3.153596,-2.818726,5.086095,-0.041570,3.094907,-0.686001,7.909499,7.562776,9.999622,-3.590118,-3.302199,-6.672341,-6.214317,-0.658576,-4.016389,-3.151324,3.916916,-2.351218,-5.590730,0.462270,4.233413,-5.118168,-4.362604,8.995011,-8.272697,-3.709425,7.269069,0.923374,-9.115259,1.666579,3.609931,2.928479,-7.248909,0.172242,-7.510749,8.383228,-3.873337,-7.978304,6.117650,-0.855297,-8.528727,9.674658,7.252624,8.596010,-7.763772,-7.514308,-8.177037,5.576326,8.639528,3.258190,2.805838,-6.299464,0.918727,-8.684093,-7.398363,-5.044976,8.032578,-9.946616,-1.597612,-7.274634,-1.973927,-7.212289,-7.859627,6.657145,-4.122940,-6.430107,5.790566,3.862154,9.313793,-7.268298,-8.795794,-7.866200,-1.872576,1.939650,-1.899664,5.430496,-5.574096,6.317597,4.523696,2.817393,-1.917089,-2.818807,-1.844316,-6.161118,8.516752,0.227123,9.792618,-0.297047,-3.944462,4.756556,1.105694,6.250480,-2.748746,6.532631,8.482171,-3.089067,-9.223144,-6.701203,-6.462784,-2.158334,7.859683,-8.684345,-5.437564,-6.556419,-1.982038,9.956042,-9.065014,7.448242,-7.404344,2.912722,7.121085,6.302997,-9.321445,-8.127803,-8.112552,-6.285023,-6.535796,-7.951533,9.498305,5.881121,-4.021220,-8.997695,4.015576,-6.163120,-9.033932,-8.671057,2.839967,4.901629,4.703334,-2.997836,-1.481086,9.070752,1.146082,9.501788,-7.789418,-2.918032,-0.944289,3.419217,8.054227,0.223945,4.011042,1.422215,8.893819,-9.099825,6.686403,-7.019537,-3.920518,-8.254426,2.313680,-2.940846,0.711878,7.242065,3.785546,8.695867,-9.143746,-0.388462,-9.118642,-1.998341,-3.403519,-9.155222,6.374818,-8.530312,-4.791254,-7.571480,-5.528564,2.304304,9.079950,1.623053,-7.150862,0.584788,8.874473,-8.751279,-0.889056,0.381469,-0.137263,-0.802745,-2.501938,3.127938,8.302304,8.420722,-5.009417,4.731851,5.101737,9.045067,-1.514967,-2.632385,-2.592900,5.777772,6.852915,-5.038688,6.344403,0.927622,7.725934,-7.384678,-6.218070,-8.060864,7.468459,9.758318,8.699212,-4.531126,7.831513,3.860389,3.866857,-7.528120,-7.768745,-8.823963,0.670550,9.371922,-7.392092,-5.286116,9.849579,-3.741222,-7.788298,0.678229,-3.072054,9.580743,-2.108346,9.224849,-3.937219,-4.417868,-3.489386,-8.608539,5.340846,-8.196881,2.714610,-4.152270,-0.197801,7.241893,-9.425120,-5.172722,-1.407300,4.734459,-6.068067,2.138808,-6.847263,5.448328,-4.459813,1.685946,-9.272364,-5.827152,-8.431824,-6.368126,2.505992,8.187420,3.105348,-2.412254,-8.592844,-4.610522,-8.985311,5.036247,-7.265567,-9.206329,-0.127959,-5.142604,0.366135,-0.020898,1.193596,-7.779325,6.021355,1.487791,8.387088,-5.109684,6.975750,1.465535,-0.234574,-3.009101,7.724733,-5.631631,-2.793815,-6.392306,4.170586,9.562707,-0.638922,4.675989,-2.984092,-7.546758,-3.323877,6.663636,6.716555,6.385370,4.952985,-6.779411,-9.663541,-5.136003,6.390143,8.723424,6.524454,-8.212088,-6.940295,6.513059,-4.906376,3.342803,3.856207,-1.468858,4.660845,-6.591291,3.123606,0.210329,1.461139,5.794465,0.681175,8.488939,1.491450,-5.980336,5.574384,-0.745280,8.619666,-2.502147,-1.782892,7.370097,6.650276,-0.748498,1.302522,-8.742567,5.081527,5.931927,-7.450093,-8.692711,-9.746849,-3.188970,-7.384923,1.844871,-8.792640,-4.342599,-3.976222,-6.995756,-7.131752,9.092046,-4.902026,-1.023043,3.394733,-5.270712,8.189583,8.318183,9.934574,1.404450,6.683267,3.755382,2.699620,-6.600728,-1.929474,8.271768,-8.287078,-7.471122,-3.588763,-9.576752,-0.488504,-0.813138,7.610889,-0.504694,8.258926,6.744880,-9.108632,-4.348485,-9.400559,-9.144695,5.100032,2.548959,-7.477918,-5.649857,7.134410,-5.824770,-9.220419,4.431689,-3.399728,-1.733932,0.033102,-2.664304,4.957817,9.316657,-3.883598,-5.698915,8.770304,0.331383,1.091564,6.664797,-2.611690,-4.327793,-7.734323,1.583189,2.386786,-0.184669,6.566398,4.772056,9.783404,-4.658966,-2.677894,7.435048,4.423124,2.440047,-1.051940,8.596209,-5.815281,7.166414,9.966989,6.853335,9.790172,0.180762,7.840717,9.752177,-4.512465,-2.071614,-6.678552,-1.480667,-8.790569,-8.230266,-1.628799,6.832672,7.055812,8.973142,9.675686,-3.749755,-4.569982,5.844593,-4.934819,-7.975032,7.942839,9.604147,-5.539316,5.375284,0.473508,-0.547843,9.034878,-6.273478,-1.435657,5.576999,-5.293730,-4.554920,7.644185,-8.390090,-2.935529,-3.270621,6.226817,5.549626,-1.872075,-0.396698,-1.180610,9.313771,2.364364,3.304422,-6.064001,6.356333,-0.981964,5.234705,-4.648431,5.107436,1.418694,-3.250243,4.330549,-2.387059,-3.313027,4.883898,2.739123,-0.474945,-4.862117,1.386651,-3.405324,1.447562,-0.901983,-8.279217,2.244768,-6.784254,-3.351872,5.446268,-7.149886,1.574328,3.520577,-2.370500,9.978728,1.537687,-6.535782,-3.994395,0.064772,8.134885,2.538512,-8.773651,2.383652,8.236494,1.644875,6.167259,-4.581582,-0.915529,5.222163,7.079765,9.441942,-2.185285,6.446107,-1.524939,-3.106353,-3.501285,-3.053106,-7.186623,7.559463,7.105907,0.955748,3.589029,9.367483,6.491960,-8.824179,3.931730,6.775666,7.632901,5.830491,3.658256,4.287186,4.732430,7.487623,2.516741,0.328492,4.180349,7.236405,-4.870665,3.141060,4.141850,-3.575117,9.651965,-1.575304,-9.349112,1.827230,6.610424,-1.795434,-3.583233,5.518406,-8.090994,-9.754751,8.359666,-8.544051,-5.679078,5.687402,8.642553,-7.012707,9.767393,6.450388,-6.008692,2.533100,2.202855,-2.229065,5.290856,0.353534,-7.317330,-0.321210,4.650374,-5.648524,-2.905729,2.312714,1.368934,-9.324346,-1.356458,2.901733,-4.091969,7.144701,-3.463104,0.742376,0.670722,3.047945,-8.724292,2.228206,1.779757,5.563687,1.680554,4.212634,9.391157,9.336798,-8.013457,-0.740767,4.449389,-1.220637,-3.539577,-9.423530,0.158486,0.104741,4.938603,0.167491,-8.128052,-2.164694,-4.016314,9.694348,2.828571,7.907812,9.667796,0.569147,5.232627,-1.197351,8.553729,8.922958,-1.560168,0.890407,0.907180,-0.580696,3.191555,5.022685,0.117721,4.191088,9.290355,-7.958397,4.154827,-9.962889,5.110205,-4.721578,6.665203,0.336872,-7.953543,5.450568,-2.163144,-4.159036,-8.939293,4.217203,-9.361019,-8.703425,7.447961,-3.354026,-2.379322,-2.657578,3.525723,9.717314,-6.099488,-8.043828,1.274762,4.462648,-9.740062,5.192602,4.483972,-7.271992,-6.130891,-7.695589,9.550372,-9.486518,1.674539,8.763731,1.789271,7.930965,-2.956518,-4.139626,3.950067,2.095067,6.179171,-2.986968,6.986749,-1.621889,7.714078,3.064646,3.331900,7.377665,-6.833398,0.194945,4.858681,-9.324544,1.383463,2.276094,-9.976062,-8.738093,2.075410,-8.919845,5.554804,-1.927427,5.720897,1.388307,6.103375,9.212787,6.327942,4.843074,4.769051,-9.068014,3.642663,7.124271,-8.362684,6.536507,-4.863674,-8.130361,1.199078,1.471783,7.713513,2.419478,2.256892,-9.366812,-1.165561,9.901964,7.734585,-6.448533,2.341466,-8.917303,7.834401,0.453687,-4.994224,0.900530,3.000868,-8.566708,4.582031,4.519471,0.026418,8.066172,-5.353085,2.316782,6.871694,-9.063977,-1.921168,-7.377931,-5.454108,8.795945,-5.761233,-4.987638,3.401040,-3.876683,7.308804,4.243248,5.766719,-3.985822,7.897544,-8.576937,4.858085,2.706383,4.403950,8.780717,-1.622986,-1.867898,5.657473,-7.802026,-5.775914,4.152917,-7.350953,-7.830177,4.329645,5.483779,-8.939364,8.926875,-9.751084,0.394347,6.119050,-7.502601,-4.838081,-5.246344,8.988128,-2.382751,9.476310,6.942694,8.155163,5.903837,-5.957390,7.861743,-7.769689,-8.070574,-0.462893,0.428753,-2.521962,6.341669,-9.170441,-2.340858,-7.081556,8.630006,-5.575797,1.687721,-6.792869,7.258314,-0.174644,-6.772259,2.508785,6.168536,-2.355544,5.820289,-8.880999,4.179878,-6.054597,5.324886,1.636405,-7.488661,1.707852,5.389361,4.002571,7.426270,9.764300,-5.736093,-7.957176,-6.161900,-4.617612,-8.847033,-5.295306,-2.854282,9.227027,3.827543,-4.542842,1.141862,-6.432604,-1.140829,7.748704,4.268134,1.369273,0.896654,4.597258,-2.115336,-6.186344,4.468884,1.022711,0.084565,9.449825,7.674138,8.921433,1.142751,3.131211,3.864642,2.807392,0.801127,-6.642768,7.288134,4.226255,-0.705552,-5.584584,-3.696797,8.380177,-9.662167,3.860471,-2.149132,-6.411138,-1.332892,3.410498,-7.556973,-8.662953,5.419283,6.798726,-3.009888,1.551585,-8.493817,-6.237085,6.078667,-8.651188,-8.721255,2.956970,-3.398395,8.457766,8.038660,-5.445356,4.240636,7.127819,-5.656353,1.388615,1.587948,8.331607,-0.458311,4.877162,9.417876,-2.471008,6.101858,-0.200392,0.955508,-8.308847,7.855105,9.319408,6.940689,2.962257,5.805231,-3.777433,1.328367,-9.805424,-3.316506,9.967523,6.161108,8.296790,2.199508,4.502909,4.183472,5.211091,-7.903522,-0.156000,-1.725333,7.743806,-0.859175,-5.275883,9.039489,-9.932637,-5.405247,5.208222,7.838002,-2.584953,1.556404,5.897721,0.942903,9.982583,1.504190,5.829747,0.131844,4.151686,9.257041,-1.786174,-7.050679,-0.605356,-5.670993,1.958903,-0.832544,6.700837,7.152014,9.294022,4.352096,-2.018889,-1.232343,-4.587671,2.206770,4.921462,-5.164081,0.085545,-0.738317,5.625358,-7.678686,-1.926273,8.499314,-0.461237,2.776846,6.483102,-4.544924,0.838348,-4.662069,-0.527539,-1.216913,-3.419449,1.800574,4.073809,3.627649,2.145930,3.015078,-5.131414,3.357164,3.124731,-8.000608,3.474951,9.860719,9.416944,7.796514,5.579415,-4.356980,-1.945766,2.046434,0.964967,-9.255836,-2.100588,9.888518,-6.463072,2.386504,7.240916,3.649238,-6.986262,8.560214,-5.019636,-7.470598,-5.999132,8.832051,-9.249189,7.389442,7.113919,-6.359031,0.841300,-2.749747,-8.873261,-5.307450,-0.839856,7.670144,-2.490152,-0.064787,8.045952,-7.270416,9.110808,-3.679871,-5.193688,-5.137297,8.616177,-8.837190,-7.739030,6.137205,-8.343821,-5.091379,3.640429,-4.096258,-0.102987,-3.321679,8.480830,-3.210618,-6.455034,-5.628082,-4.611367,-8.939449,-1.904642,-2.418613,8.778780,4.664655,2.444996,-0.325885,7.570660,-3.263869,-9.230375,4.406527,7.419267,-5.406543,-0.579707,6.094073,9.966930,4.086632,-9.040999,-4.719881,5.548830,8.861855,4.958422,4.114275,-2.571716,9.516129,-3.378026,-9.176767,-5.165765,2.369917,-2.270743,5.837668,-7.884244,2.244998,-4.655715,-7.983545,7.526505,4.480813,-1.238379,-9.682645,-6.775764,6.889110,-3.801376,0.745174,-1.381769,-0.910261,9.160201,0.744610,-7.911716,-7.835608,-3.967625,-9.119477,-1.896352,6.065892,-5.535619,-5.892097,8.009292,9.136994,0.368433,-3.068529,3.499470,-5.740367,-3.669338,-2.505913,-6.736788,4.964494,0.656864,3.354202,1.359782,-0.553524,-9.514780,8.057559,-6.508069,4.874297,3.489799,-3.485403,-7.745896,5.731652,-1.141430,3.860283,-1.083572,3.680076,-4.298204,1.376595,1.143186,2.330477,-3.382156,8.084678,8.727268,7.369450,-4.867510,5.084365,-7.748751,5.265334,-7.901391,-1.656877,-9.629600,5.848531,-9.738157,-3.820791,-6.767176,4.762776,-3.925560,-9.806233,1.352937,-2.214287,6.556816,4.088249,-2.605150,-8.406812,4.694624,7.639086,-7.947275,8.889082,-5.004699,4.365308,4.424916,8.089529,1.986236,-8.671985,1.870992,0.134178,-1.163193,0.730642,6.670630,-2.683482,-1.122665,-0.776752,-5.862007,2.568801,-1.342909,5.249729,4.448468,0.770240,-0.336048,5.722369,3.319020,-4.983670,9.484852,-6.054641,2.733380,-2.143328,9.690871,8.366487,-5.610464,-0.958260,2.038018,-7.018050,-7.848266,5.378792,1.776272,9.429542,4.628210,5.435768,5.012318,-6.913786,-9.604218,-2.942601,4.027657,4.754973,-9.058932,-3.150749,7.686736,-1.707532,8.376656,8.681644,-9.649990,7.015309,-9.208956,1.217402,-7.784081,2.284891,-4.647276,-8.066079,3.181368,6.500993,0.151363,7.252559,-2.519733,2.982094,9.219563,5.046489,5.681029,-8.177999,5.852068,6.078566,3.539419,-0.884059,-6.494789,4.166933,-0.434344,9.908173,8.110947,-6.872156,-2.544682,0.966768,-1.606051,1.250737,4.945669,-5.010590,6.479692,-4.274205,-4.016011,-9.623870,-4.648907,-3.546439,-1.799827,-1.765901,-8.999437,-8.340523,-5.158775,-6.445724,-4.819180,-1.768375,0.131830,-2.431827,-0.658686,7.706902,1.272534,5.207071,-4.631883,-0.811571,7.906081,-0.692570,7.460467,-1.111446,-3.519823,2.183109,3.887792,-6.621089,-0.384234,9.424900,5.542092,2.900183,5.416671,-6.951942,-7.739232,-7.669879,-1.589339,1.844346,8.812874,2.008078,-5.894958,-9.837686,2.960312,2.369617,4.976537,-8.633945,8.028319,9.509559,8.361282,-6.077518,-1.256299,3.207127,4.988362,4.142734,3.637123,-8.938392,5.533373,3.527387,7.160943,-4.222757,2.764293,-5.881334,-6.298487,8.600581,6.482528,8.200518,5.202036,-5.998112,2.316784,0.032028,9.242523,-6.922890,3.866073,4.889229,-6.578648,1.032144,-5.787998,7.673666,-2.738001,-5.191862,-1.542429,5.384662,7.704327,2.789685,1.951059,2.124352,-9.812090,2.577406,3.825134,0.276809,-9.061844,8.573018,-9.446747,0.393351,-4.462390,-6.503304,8.531675,-6.055582,-0.319849,9.885786,-9.243519,-6.249101,7.382021,-7.843857,-7.804571,-1.525711,3.348796,3.424267,-3.388870,-0.420947,2.839877,-3.260165,-1.176463,0.877700,-5.281882,7.720611,5.707370,9.647744,2.540959,0.239338,5.881358,9.456222,8.756195,-1.596995,0.029211,-9.797447,-9.632826,-2.730092,6.111732,3.241815,-7.685103,0.798536,-9.807442,-8.851883,-0.616243,7.384145,-1.925150,-1.336248,7.851100,6.099383,4.338179,9.144145,-8.121041,5.192070,6.373787,3.481334,5.488976,5.749247,-7.533098,7.158589,3.761195,-1.881517,1.593718,-1.169417,-7.720272,-0.991564,1.437128,2.300362,6.325541,-9.073329,5.841662,-0.639382,-7.489118,-6.047140,-5.257144,8.166156,-0.181582,1.644198,2.098536,-3.339131,0.052379,0.338001,7.476465,8.625583,4.710548,0.800803,6.080807,3.199267,-8.590589,-0.587285,-9.887636,-0.798525,-5.365799,-6.971127,9.001134,7.244254,2.340905,-0.214197,1.313664,9.072147,6.269431,7.790420,9.016161,-6.866930,-0.322282,-4.247375,-3.150124,9.668579,-4.094673,-1.759742,-3.285955,-0.571709,1.545294,-7.031751,-9.843246,5.649298,0.544195,6.527244,-0.345694,-3.905077,-9.589739,7.451876,4.763268,5.262071,-2.513198,-2.561829,3.823752,5.670883,2.948690,7.519954,4.077741,8.117232,4.327285,6.253197,-2.861327,-0.596889,-8.620003,2.332870,-9.808073,7.173443,1.706112,-2.310936,5.212595,1.875451,9.827424,-5.655116,3.179496,3.088836,-8.772142,-8.077316,-4.346372,-7.732831,-0.425893,2.437703,-5.501723,-1.076730,-1.105483,1.590493,-1.964064,-2.345748,5.947052,-7.134471,-3.466426,-6.901881,6.605298,3.693877,0.414964,-1.228765,2.783715,6.877711,4.144764,7.161683,-5.554957,6.634902,1.267226,-7.769992,-1.649608,-0.963630,5.560522,-7.091245,9.965960,-9.586422,3.285942,1.176732,-9.747327,-4.994188,-9.469978,7.425730,-2.008572,8.111157,-0.698036,7.705350,-4.240353,2.116061,-7.242063,-6.429820,9.779953,-6.136573,-6.197670,-2.596917,-7.251779,-7.622635,-6.744626,8.378178,-5.575897,1.129384,6.463144,4.578324,-1.909925,0.606659,-3.798486,-1.913066,-5.393273,-5.921580,-7.445853,-5.923635,-1.325898,1.381161,-1.819424,5.953780,9.065751,-7.497747,0.983307,8.450871,-0.784720,-1.302138,-6.857186,8.232579,-4.443548,8.464419,-8.593745,5.828295,-7.469830,3.679514,-6.175712,4.578719,9.788220,-7.617333,-4.665930,-0.927514,-5.568727,8.151345,-1.061838,8.089024,8.455103,4.364925,-8.985065,-9.103765,-2.111745,-8.170148,-0.645463,-9.894159,3.804135,2.326855,-5.239001,-1.195216,-7.233177,-4.898970,-0.988725,3.731549,-8.683311,9.460532,-0.496792,-2.720315,-1.777433,5.746045,-4.347275,-3.114797,-3.748363,0.097621,-0.066406,9.002883,-0.399741,0.760512,1.867116,-6.361529,3.544533,1.654900,2.762150,-9.708485,-5.922137,-0.248222,-8.945247,-0.278936,-7.768806,6.446110,6.293804,-9.162506,-3.121779,4.571979,-9.592376,-6.747281,9.678104,2.409512,8.597181,-8.978264,7.479852,-6.689436,-0.848349,-7.952543,0.945784,6.916600,-6.403872,-5.020516,9.211976,8.539610,0.265249,4.350740,6.681851,6.708570,2.964794,-6.155423,-8.879972,-1.334030,0.342762,-3.171933,-7.250522,9.372611,3.710338,-9.204380,3.421651,-8.903896,9.119253,-4.249170,9.886912,0.615516,7.065147,5.883646,-7.895754,-1.020734,3.414058,-0.551317,-1.359695,-0.462318,1.093220,-1.008244,-4.935237,6.002620,9.287148,-5.301283,9.522985,4.600332,7.430262,8.143545,-5.705645,1.128141,-3.737149,9.108270,-2.418580,-1.656557,-5.532026,-9.058575,4.579693,-2.047711,9.876771,4.204965,-8.277270,-6.386455,-7.866211,-9.988828,3.533223,-6.929418,4.873016,0.615596,7.320564,-2.995606,-3.760173,0.647535,-1.755402,-6.893239,-4.274344,6.138883,-3.278374,7.713650,5.876920,0.002256,4.212134,-6.864488,-7.180788,-7.427477,2.515722,4.229724,-6.642055,7.588171,4.988310,-2.880443,-1.240524,-5.915376,8.907879,4.203600,3.526269,-9.680440,-8.329450,-0.090154,-5.714342,-4.912648,8.229375,8.799829,-4.905590,-1.481768,4.263004,-6.309549,-5.831637,-1.725523,-9.412385,-6.212940,5.544939,-0.184596,4.076916,-1.716567,-0.001223,6.946630,-2.119215,4.851657,-1.917406,-2.051893,-3.431783,7.414305,-9.176659,7.505196,1.649292,-7.255542,-8.997609,-7.976252,7.057338,4.519798,3.090854,2.325799,5.289043,2.936071,4.038121,3.340244,-2.013185,-7.221943,0.321586,8.794520,-2.412566,6.543263,-2.372629,-4.997478,-6.115615,7.653153,6.041019,5.860014,6.273283,-4.956850,6.058423,0.207926,-1.527457,-7.706043,0.091660,-0.377881,7.976359,-2.003404,0.922873,-5.851184,-9.798103,4.330131,-8.519719,-0.400733,6.548424,-7.355679,8.732633,-5.151397,-6.928070,0.900490,-3.227810,3.719922,2.915524,-8.521238,-2.079519,-5.052224,-7.413637,-9.422857,-9.031219,4.634120,7.225120,-7.858946,8.598504,-1.552458,6.584834,5.257564,6.828208,-2.879174,-3.651454,4.019951,0.414823,5.051219,-0.399409,-4.188615,-4.216995,-5.853618,-2.503508,-0.911054,-6.616026,0.968760,-6.202407,1.626662,5.362638,-9.501770,-1.756447,-8.362110,3.633149,-1.633966,-3.557442,8.937094,-3.899827,-1.781745,-2.704992,-7.729804,-6.386887,6.112925,-5.098156,-7.785306,-4.983591,6.945851,6.095371,-0.256942,7.789230,-7.957040,6.275830,-0.461258,0.065066,-7.204390,-4.937733,-4.164785,-2.286331,7.310504,0.691999,-8.394577,8.454611,-2.929646,-7.906080,5.104281,2.538354,0.075295,7.790801,-2.374323,-1.897866,6.546064,7.586727,5.667216,8.335068,-5.242758,8.625692,-4.881638,-3.792889,4.067362,7.527581,-5.882662,-0.815261,3.550766,-3.831397,-6.138392,7.003479,3.850678,-0.769802,-9.452198,8.710009,-6.407646,-6.648405,7.837408,6.752260,9.109968,-9.994315,-8.772036,1.253482,-2.045236,4.358190,-1.038087,-6.536070,-9.862136,7.096992,-4.904909,6.284778,3.522211,7.897814,8.927171,4.706904,9.227106,-1.551994,-2.173632,-4.711550,5.812979,0.577365,-3.916263,5.181846,-1.988882,2.710284,-0.896923,4.652773,-4.561194,-1.174648,-8.865436,-8.471820,7.756051,4.324385,-2.151782,0.231871,2.848706,-7.364203,-7.442047,-9.517043,-8.435188,-0.114232,3.797502,-7.358120,-1.672975,6.344544,-1.098655,3.562556,-4.291524,5.257828,-7.824126,7.542080,5.357400,8.308556,8.931131,3.037905,7.082743,-2.239650,0.902013,2.069890,-4.066972,-0.699112,-1.539812,-2.045423,-1.717973,-3.392621,-7.567924,6.356661,9.525492,-1.043944,-4.575250,-2.950779,4.569972,-7.195116,4.793055,-0.086883,-4.923808,-4.834601,-6.067940,-1.129375,-4.122812,0.708612,-3.133369,-2.709672,9.832846,-7.518158,-7.224070,-2.627819,-8.269660,4.267958,-1.996416,2.644429,-1.587414,2.027983,-8.900283,-3.912686,-6.823797,-4.878644,-7.941122,-3.621910,4.861435,6.203886,6.670490,9.210449,4.500039,1.932630,-3.663003,-8.724842,-8.842830,-5.897396,4.758076,6.296107,-1.788963,-1.947267,8.444439,5.390863,-9.462439,-4.980001,-3.386775,2.834872,-5.882758,0.908424,8.988671,-9.296942,5.542703,-9.466617,4.306888,7.855784,9.464922,-1.432052,-7.233507,8.905278,-3.874655,7.665299,7.194134,-6.005256,3.123406,4.095266,-0.079578,1.161754,-4.327708,-5.584617,7.941009,8.310852,-2.116183,7.732337,8.632249,4.784587,9.139589,-3.336386,7.949549,-8.580062,-5.475998,5.620075,9.006198,3.766327,-0.823124,7.859998,3.139914,0.254707,-6.907686,-9.119192,8.231254,-3.390946,-5.036666,-5.831162,4.626591,3.334634,-5.341850,-2.844450,5.368909,8.751768,-2.367140,0.254105,7.909923,3.423827,-9.470700,-9.573563,1.639975,-3.636064,3.259739,6.075872,6.294934,9.028541,2.260111,-6.423815,1.691584,-6.669727,-4.676631,6.039395,-5.296061,-5.593385,-1.792209,2.163934,1.341838,-2.490429,-3.554980,0.117558,-7.231099,8.512854,6.780118,-5.619243,0.458482,-9.128836,-8.997362,6.488088,-5.213104,7.142799,-7.343912,-6.634072,-6.361717,1.005997,-8.878788,9.782217,5.747158,-7.437479,-4.141381,0.402585,7.948487,1.069272,9.746505,0.075705,-2.269717,-4.073441,7.659461,-8.770615,7.951439,-1.095335,8.266328,-0.066112,-6.711366,2.947594,2.832995,-9.155912,-4.188872,2.293503,-1.664811,1.717140,5.050747,-0.314645,-5.790452,6.994582,-3.072654,8.458053,1.908399,-7.103363,-5.545647,-1.100499,-7.530414,-3.752739,-2.659045,-7.212126,-3.081615,-9.988071,5.183153,-2.986428,9.442520,-6.721913,0.366264,0.786392,8.503190,-2.513678,5.456452,-4.803005,5.793354,-9.695681,-9.159094,9.846616,-4.012843,-3.281815,-9.006885,8.417888,-9.768267,5.995190,4.242072,-3.819392,-8.187464,-3.314539,9.841848,0.438486,-2.313404,9.152058,-5.690778,9.038744,-8.738864,-3.952661,0.391623,-9.128350,0.180271,0.070214,8.485201,-3.980581,6.169171,6.326500,6.324968,6.123037,5.774142,-4.558733,3.045615,-4.618959,6.660134,-3.731228,4.435048,3.919459,-3.385904,8.080160,-6.444472,1.230694,8.443835,3.774512,0.741069,-5.216292,2.667859,-3.063906,-2.605801,-9.724500,-5.451015,-6.622334,8.008657,-7.918613,4.181913,6.948634,0.681479,8.319746,-9.985934,9.118136,0.533651,-6.055796,-8.819510,-5.778687,3.832187,7.332861,6.563374,6.679442,1.538998,8.288885,-6.859250,-1.503708,3.370854,-7.769751,-7.472409,-2.807357,3.385429,-4.803071,7.649319,-9.541271,1.752112,-3.935226,-8.505185,-6.978988,-9.843618,-0.749265,-2.832370,-2.032415,-1.154169,0.788545], dtype = "float32")#candidate|6258|(2400,)|const|float32
const_6259 = relay.const(-7.693513, dtype = "float32")#candidate|6259|()|const|float32
var_6260 = relay.var("var_6260", dtype = "uint64", shape = (900,))#candidate|6260|(900,)|var|uint64
call_6257 = relay.TupleGetItem(func_5410_call(relay.reshape(const_6258.astype('float32'), [15, 16, 10]), relay.reshape(const_6259.astype('float32'), []), relay.reshape(var_6260.astype('uint64'), [90, 10]), ), 7)
call_6261 = relay.TupleGetItem(func_5414_call(relay.reshape(const_6258.astype('float32'), [15, 16, 10]), relay.reshape(const_6259.astype('float32'), []), relay.reshape(var_6260.astype('uint64'), [90, 10]), ), 7)
output = relay.Tuple([bop_6248,call_6257,const_6258,const_6259,var_6260,])
output2 = relay.Tuple([bop_6248,call_6261,const_6258,const_6259,var_6260,])
func_6274 = relay.Function([var_6238,var_6260,], output)
mod['func_6274'] = func_6274
mod = relay.transform.InferType()(mod)
var_6275 = relay.var("var_6275", dtype = "uint64", shape = (14, 3, 3))#candidate|6275|(14, 3, 3)|var|uint64
var_6276 = relay.var("var_6276", dtype = "uint64", shape = (900,))#candidate|6276|(900,)|var|uint64
output = func_6274(var_6275,var_6276,)
func_6277 = relay.Function([var_6275,var_6276,], output)
mutated_mod['func_6277'] = func_6277
mutated_mod = relay.transform.InferType()(mutated_mod)
var_6348 = relay.var("var_6348", dtype = "float64", shape = (1, 8, 14))#candidate|6348|(1, 8, 14)|var|float64
uop_6349 = relay.asin(var_6348.astype('float64')) # shape=(1, 8, 14)
output = uop_6349
output2 = uop_6349
func_6369 = relay.Function([var_6348,], output)
mod['func_6369'] = func_6369
mod = relay.transform.InferType()(mod)
var_6370 = relay.var("var_6370", dtype = "float64", shape = (1, 8, 14))#candidate|6370|(1, 8, 14)|var|float64
output = func_6369(var_6370)
func_6371 = relay.Function([var_6370], output)
mutated_mod['func_6371'] = func_6371
mutated_mod = relay.transform.InferType()(mutated_mod)
const_6479 = relay.const([[[-2,9,6,7,8,-2,6],[-2,1,2,3,-3,2,3],[-10,7,-9,-2,-10,-7,-8],[3,-4,2,5,3,-6,7],[4,1,-4,-7,-5,-8,-2],[5,5,-6,1,6,2,5],[8,7,6,7,6,-3,-5],[-6,-7,8,9,2,-10,5],[10,9,4,1,3,9,1],[10,4,-6,-9,4,-8,5],[9,-9,3,-8,-5,-6,6],[-8,1,7,-6,-8,-5,2],[-1,1,-10,-8,2,10,6],[6,5,-10,-3,-2,8,-5],[-2,-8,7,-2,2,10,7],[-1,-7,-4,-2,7,-3,-6]],[[8,-8,2,3,5,-6,5],[-3,5,-5,3,-3,8,-2],[-10,4,2,8,7,-1,9],[3,3,-10,2,-1,7,-9],[5,-7,-10,2,-4,3,-6],[-4,-4,-2,-5,-9,8,-1],[5,3,1,-4,-3,-10,1],[-6,10,3,-9,4,7,-10],[-1,-1,10,8,-4,-10,-1],[1,6,8,-1,1,-5,-5],[-6,7,-5,6,2,5,-6],[-10,7,-10,1,6,-10,2],[-10,8,-2,-3,-3,2,-3],[-9,4,-8,3,2,6,7],[-7,-1,-6,4,4,-6,-8],[-2,7,-2,5,2,7,-3]],[[5,9,9,-10,-9,-4,2],[1,8,1,-7,8,2,-1],[5,-2,-5,2,-10,-10,5],[-3,-6,8,-10,-1,3,-10],[-9,-4,6,-7,-6,7,-1],[9,3,-4,-8,4,3,-6],[7,3,-8,4,-2,5,10],[-8,-10,-7,-8,-5,7,-2],[-7,7,4,-1,7,-6,-6],[9,-4,-7,3,-9,-8,5],[4,-4,-8,6,-2,-4,-4],[-10,-3,8,-7,6,-8,-10],[1,-2,3,-7,-8,4,-4],[1,-1,10,-3,5,-3,9],[-6,-10,4,-2,-9,-7,4],[8,-2,-7,1,8,8,-1]],[[4,4,1,-7,-7,10,-7],[-2,-10,8,9,-6,-3,-4],[8,1,7,2,-3,-3,-5],[6,-3,3,-1,5,8,-2],[-6,3,-4,-5,-4,-1,3],[7,6,-2,-4,-2,9,6],[-1,-10,5,-10,-8,1,4],[-8,5,-7,-9,-2,5,7],[-5,1,9,2,5,-4,1],[-4,7,-1,7,5,-6,-6],[-3,7,6,-4,9,1,-10],[-6,2,3,4,-4,-2,7],[-8,-1,8,8,5,-8,-8],[10,-6,8,-8,7,-6,5],[2,8,-6,2,8,-5,2],[9,2,7,-6,6,-9,-8]]], dtype = "uint64")#candidate|6479|(4, 16, 7)|const|uint64
var_6480 = relay.var("var_6480", dtype = "uint64", shape = (4, 16, 7))#candidate|6480|(4, 16, 7)|var|uint64
bop_6481 = relay.less(const_6479.astype('bool'), relay.reshape(var_6480.astype('bool'), relay.shape_of(const_6479))) # shape=(4, 16, 7)
output = bop_6481
output2 = bop_6481
func_6484 = relay.Function([var_6480,], output)
mod['func_6484'] = func_6484
mod = relay.transform.InferType()(mod)
var_6485 = relay.var("var_6485", dtype = "uint64", shape = (4, 16, 7))#candidate|6485|(4, 16, 7)|var|uint64
output = func_6484(var_6485)
func_6486 = relay.Function([var_6485], output)
mutated_mod['func_6486'] = func_6486
mutated_mod = relay.transform.InferType()(mutated_mod)
const_7184 = relay.const([[[-2.238185,5.131104,7.395041,8.872086,-1.850643,3.354462],[5.424599,6.046884,8.695508,4.138488,-7.525152,-9.327214],[3.544576,-3.265232,-5.877187,-0.630280,-2.031720,-7.441677],[-0.380134,-6.747491,7.439819,3.383692,-7.124874,-9.113135],[3.621803,2.050170,-9.220240,9.086746,-9.399957,5.987448]]], dtype = "float32")#candidate|7184|(1, 5, 6)|const|float32
uop_7185 = relay.sinh(const_7184.astype('float32')) # shape=(1, 5, 6)
func_1569_call = mod.get_global_var('func_1569')
func_1572_call = mutated_mod.get_global_var('func_1572')
var_7192 = relay.var("var_7192", dtype = "int32", shape = (2520, 1))#candidate|7192|(2520, 1)|var|int32
call_7191 = func_1569_call(relay.reshape(var_7192.astype('int32'), [15, 14, 12]), relay.reshape(var_7192.astype('int32'), [15, 14, 12]), )
call_7193 = func_1569_call(relay.reshape(var_7192.astype('int32'), [15, 14, 12]), relay.reshape(var_7192.astype('int32'), [15, 14, 12]), )
func_780_call = mod.get_global_var('func_780')
func_783_call = mutated_mod.get_global_var('func_783')
const_7202 = relay.const([-0.341704,0.674638,-6.988118,-3.127023,-0.697410,-8.624615,9.775305,0.402132,-1.654275,7.872617,-4.186115,3.091268,7.282950,-8.479408,7.612697,-2.917230,2.898635,8.886402,3.205219,-6.246717,-9.056107,2.753937,4.866632,-6.285771,2.508433,1.122306,3.766770,-7.744729,-0.506174,9.125203,3.788506,5.651170,-8.772599,-0.371352,-3.379335,6.673025,-7.417557,-1.560220,7.699244,4.925530,6.318880,-0.653258,4.918535,3.089771,2.134822,3.610049,-2.434437,0.656592,0.040997,-6.105022,7.105964,4.979621,-9.789164,1.273031,-5.092427,-3.320149,9.768871,-0.888461,-2.056924,8.697789,6.588624,-4.622366,7.453472,-2.415538,7.283198], dtype = "float32")#candidate|7202|(65,)|const|float32
const_7203 = relay.const([[-5.917028,-7.576578,-1.739176,-3.077306,-7.650432,9.113332,-9.651830,-0.613414,1.327790,4.702180,6.188446,-5.326637,-6.295636,7.570672,-2.489064,4.763710,7.552535,4.976456,5.862136,-4.901881,9.000663,-2.199338,-9.628359,6.949063,3.976932,-9.190140,-4.141057,1.978519,-4.318605,6.478433,0.718838,-5.380130,-2.099106,-5.509972,1.329044,9.908049,-8.940562,3.418753,4.834313,8.965134,2.355904,1.593337,-1.396578,6.528866,5.070981,7.270739,5.217817,2.027686,6.932327,1.842874,-4.399866,9.924970,-5.460225,9.736116,4.394537,-1.279785,4.079690,-7.201962,0.286206,-7.431814,-6.717770,5.810321,9.148074,-8.062822,-1.103252,-7.172960,-3.969508,-4.550272,-7.634088,-0.845038,-8.745875,-0.165725,-5.972336,1.835823,-9.733030,-9.771966,0.091286,7.863734,2.657681,4.492080,2.653013,-3.522682,-8.798341,2.700167,0.685953,-1.896227,-8.836322,2.965518,-8.250022,-0.541105,-2.398523,3.231681,-3.336368,6.344664,-3.285257,-7.766767,-1.394926,-5.905072,9.229694,5.533314],[5.900545,-6.364094,-9.784504,8.992976,-2.996753,-0.665760,-0.109522,-2.557762,-4.686300,-8.201795,-8.508385,-0.202220,-3.972180,8.602844,-4.791860,-5.515740,9.521129,-1.213223,-9.413748,-2.069144,3.328693,4.445208,-0.228303,7.110589,5.232133,-1.204033,-7.571855,-0.329710,8.997859,-2.093381,-4.270929,6.277820,3.807197,-7.242983,8.067701,-3.714396,0.096819,4.071841,3.840098,-7.178267,-0.315092,-8.167836,0.669727,4.838968,8.107734,6.492854,-2.351247,8.571965,-5.717015,0.907992,-4.506423,-4.344255,-1.920684,2.775166,-6.829398,-9.928412,-6.504398,0.214964,-8.205408,-8.018237,-1.516574,9.608981,7.715036,-6.563754,-3.913372,4.751979,9.226133,-5.238586,9.703471,4.356870,2.549065,3.563509,4.120189,-1.966397,0.273935,3.210585,-5.485363,9.792179,5.419284,0.637070,3.737705,-8.993574,-4.225741,-8.312349,-6.370503,-2.757340,-8.336055,-8.443184,-6.054904,5.205964,2.599471,-1.000245,2.633124,1.573392,3.606480,5.270945,-8.770854,-7.127148,-5.775787,-0.059735],[-5.344920,4.442359,-2.484653,-1.461105,-4.786123,9.155719,-2.815882,1.552242,6.191575,-3.671230,1.817489,2.008537,2.659429,-5.877100,6.325375,8.719078,5.481006,-5.811237,-4.008475,8.605315,-6.289799,-9.527708,-4.386234,-7.319995,7.130531,-4.623366,-8.172931,-7.379674,4.481286,-6.725771,9.195559,5.416513,-0.290030,8.888586,-3.158236,7.073264,2.246200,-5.161237,9.207550,5.468493,1.496887,0.326463,8.328935,-5.400765,-9.372947,8.284456,-8.851906,9.630074,-7.046887,1.577189,6.881209,6.781273,-9.762024,-1.793427,0.996375,-8.669119,7.259832,-3.774205,3.828849,-9.309650,6.441478,-2.601350,-4.109672,-5.902825,-1.735407,3.785964,-7.247270,-5.689921,-3.352188,-6.297503,-2.842224,1.043545,-8.989453,-6.436294,-2.905724,-6.374565,9.552329,9.288449,-2.809986,-4.868864,1.460105,-1.960475,7.429638,-8.020739,8.409674,4.903246,-5.539010,9.254547,-4.543164,-1.168755,-0.568598,2.217095,3.463241,6.483553,-9.825274,-2.595628,-0.738594,-1.801608,4.143874,7.589084],[4.184177,-4.594713,2.149516,5.264848,-6.181541,-8.238052,-1.757326,-3.661013,-0.832604,1.239984,5.937743,-9.893504,-8.534996,2.643662,-5.801968,-7.172833,4.171416,7.755263,-0.702266,5.419518,-9.097715,-5.400020,1.828724,7.437329,-0.125396,-8.109536,-8.376036,2.207946,2.494298,6.125668,-0.871752,-3.405111,-5.588128,-0.704576,-8.489149,1.313868,-0.207685,7.934689,-5.971672,4.035473,4.003755,3.071883,1.725127,-6.523199,8.778077,-8.048695,5.971676,-4.553328,-6.898776,-8.862204,-4.946506,5.824612,3.548731,-4.551945,1.909449,0.415497,7.844191,2.821762,7.512551,-3.922711,5.829249,-8.038856,5.917078,-6.878900,-1.395532,-6.309943,3.240641,0.747704,-7.790032,-1.171470,2.108865,-0.690599,-3.038141,8.682424,1.740214,6.913360,-6.904993,8.217393,-2.409048,7.935686,-3.053010,1.121339,-9.395733,2.763481,-7.991106,-1.186582,3.852678,-0.991283,-6.651986,2.940984,2.520205,-2.818220,2.010506,1.444181,-2.099850,-9.179060,-1.725046,-0.940687,-7.230825,6.226989],[1.427580,-5.800588,-4.876420,5.439814,4.952240,-0.363350,9.641778,-9.387025,-3.734879,-1.509603,1.385373,-5.296589,-0.188110,-0.612286,-2.881768,6.245142,4.651922,-4.014657,-2.111116,7.891599,-8.569754,7.994356,-0.177851,-6.092944,2.910978,2.019461,6.911137,0.924482,-9.956461,-8.903511,7.115786,6.609365,-4.701408,2.776907,2.278491,-2.374955,-8.652230,0.023677,6.762828,-5.823412,-6.274585,6.331807,7.439869,0.602415,-2.995864,-3.230625,1.397672,6.130097,6.121506,-8.167178,7.400722,-1.875681,-0.042097,-7.602151,-6.185429,5.858197,4.974339,-0.370747,4.344151,-7.236602,-8.702307,1.064159,-7.970097,4.400086,4.194783,-8.347041,-6.681371,1.709263,-4.490518,-7.251323,-6.497430,4.198603,2.059994,-7.519697,3.971653,-3.613998,7.144550,0.523149,-9.843013,9.840335,6.094551,-9.103298,-1.334942,-0.340970,-0.527456,5.530220,-6.742240,-6.850488,3.888599,-4.762652,5.775863,-6.197063,8.579936,8.645326,-9.097290,8.978868,-5.786302,6.136261,4.858799,-1.333697],[-2.117518,-2.640674,-1.035175,-0.268750,2.830647,6.540901,-1.976674,7.366086,4.315698,0.957388,7.404493,5.353237,4.937424,7.064713,6.908907,-5.386801,7.998554,-2.350587,8.784805,1.109388,-0.367168,4.371205,-1.959000,-1.724125,0.200919,3.613590,-9.426732,2.535269,3.300561,3.555454,-5.872715,5.911613,-6.113498,4.153576,-6.812575,2.270355,8.390031,5.503696,4.920267,-9.108254,-2.405425,-8.943528,-4.445887,-4.031976,-1.591737,-5.914696,8.489180,-4.337487,-7.949374,4.309566,8.199836,3.557938,4.982594,-8.593393,-3.139907,-5.403769,2.241895,8.842326,-7.752367,8.637292,6.884504,8.114293,6.716126,6.874652,4.864654,6.609742,2.476886,-2.411255,8.831473,9.338208,4.606137,-8.751220,-3.640844,-5.946595,0.647411,7.717181,-8.608667,9.539672,4.665147,9.019269,5.729170,8.725789,8.677886,-4.461976,-5.818892,-9.459285,8.015150,-2.705022,-4.525773,-3.436536,2.915622,1.472387,-7.142671,6.296616,3.858503,-5.860533,6.270638,4.665338,4.468826,-7.546747],[7.159333,0.476115,6.218696,5.658570,7.459759,-0.847479,9.925606,-7.500759,-3.434119,6.263202,-9.369687,6.888299,2.871095,-8.641104,-6.706882,0.108866,9.676359,-3.396363,-7.697790,-1.120232,0.821736,-7.117913,-5.022549,-8.413329,6.061711,-7.692025,7.500689,7.065899,-0.145756,-6.198361,-9.595175,4.880491,-8.448805,4.971390,6.527042,-6.345289,-6.575558,0.974701,3.668068,2.900775,-9.868829,-8.322465,0.947737,-9.564710,2.468905,-0.634543,-2.124386,9.854821,3.941379,-7.730265,4.063101,6.277625,8.640958,-2.446358,-1.603513,1.662644,-1.959347,4.232708,-6.201421,2.790337,-9.147668,2.838520,8.217766,6.833218,8.740981,8.506764,6.765444,-0.360453,-1.501482,3.295799,7.889539,0.916338,7.553773,4.406448,-0.628142,1.927064,3.873355,-7.980658,-8.484756,3.764913,1.271403,-5.292778,-8.620687,1.025868,3.619921,2.306470,-0.489435,-5.683999,0.864406,8.774304,3.946006,-6.456516,9.085019,9.094285,1.060540,-0.392166,-9.832765,0.503506,1.152609,8.735914],[7.458318,2.687385,7.507384,1.718223,-3.586960,-8.107017,-0.482969,-3.797260,2.064937,5.493507,-8.465760,2.971788,-5.700748,3.601493,-4.824854,-8.966569,-4.303211,7.208701,-7.213543,-1.408968,8.947203,-4.608490,-1.304099,5.060682,-7.057784,-5.563837,-6.715272,6.465729,-8.578277,9.274524,8.861874,-5.974699,2.156160,7.364803,8.932691,-9.364183,3.208023,-1.038199,9.611483,5.994841,-0.969665,4.996553,-3.939964,1.055125,8.426587,6.884832,-6.213000,-4.171606,1.321236,1.393345,-1.464880,4.653626,-1.889403,7.947379,7.218776,-6.784638,-5.209164,8.292314,-8.901135,7.554126,4.040504,6.510719,-6.621619,5.981411,5.181479,-1.228158,3.889235,0.488841,6.185531,7.280250,-7.478114,-3.698665,4.415756,1.992957,-5.508539,-5.630002,9.967820,-1.466314,3.604350,1.505614,-6.145307,-8.269819,3.777776,-0.345547,-8.184460,9.971527,6.787582,4.936866,6.321833,-2.845035,8.160720,0.476006,-2.171948,8.381906,-0.483561,7.961487,-3.118857,-2.816201,8.236248,6.735772],[-2.474106,-1.824861,-6.972836,9.248858,-6.886546,-6.844998,-8.509308,-1.755293,7.632371,-3.722350,-3.846002,-5.458731,-7.971134,-0.498177,5.358019,8.557280,2.295733,0.983274,-8.019809,2.357264,9.219948,-1.405151,-9.831030,-9.072077,-2.053504,2.290148,-3.351175,-1.754402,-5.700987,6.811573,-6.814336,0.697088,-6.738636,0.728754,2.861653,-1.118598,-0.142053,-8.416157,2.966644,-5.981026,-5.700361,0.422033,-6.679297,4.345109,-9.974256,-6.370189,5.850741,-0.133679,8.741401,-5.775338,1.630641,3.547551,-6.713419,-5.321227,-3.119569,6.936792,-6.624889,-2.408781,-9.883113,7.470500,-2.892444,2.474732,1.446660,2.924711,-4.094704,-0.023377,-8.652436,1.883896,5.342107,7.681773,6.479874,-8.772755,5.820369,-9.604484,-3.550182,-1.197368,7.325670,7.856264,-9.502666,6.951051,-4.077332,-2.307150,8.800186,9.299987,6.690027,2.939548,-8.630720,-3.611237,-9.070807,0.901262,-4.520633,5.923916,-4.779938,-1.950619,6.852426,7.168648,0.979690,7.802130,2.509225,-7.113183],[6.981485,2.823394,9.791005,0.893331,-6.985004,8.075884,-5.503534,9.935891,3.359527,6.139072,4.442864,-5.377917,-4.271040,-7.886680,9.698952,-5.861795,-1.222286,-3.748702,2.776571,2.852557,-9.795339,-4.337787,0.847339,2.797581,-8.257025,5.385366,6.929720,-8.323217,7.495525,-5.517574,1.010639,7.300821,-7.040587,-7.214705,8.523869,-2.505974,-1.787321,0.969497,-8.901890,-7.868712,5.828565,-0.494735,4.919427,0.462499,7.379385,0.880696,-3.726598,-1.176771,-9.879602,6.812468,-6.623279,-4.993022,-3.890764,-6.995443,-2.843462,3.720537,3.634050,3.340546,0.679746,3.182590,-0.585833,3.633456,-8.588981,3.837010,-6.338539,-9.020645,-0.944298,0.913762,-2.890382,1.418079,-4.162242,7.595793,7.808644,7.195160,2.252702,8.593893,5.870780,-0.091979,0.154116,5.212027,-6.891508,-6.242165,-6.917364,-8.161916,-6.974226,1.814515,-5.594668,-7.969488,4.010690,-7.714323,-8.492734,-8.951545,4.947709,7.546163,6.424724,-5.154873,0.991171,-5.926842,5.406019,-2.567277],[9.934756,-2.239373,-8.996407,7.503348,-5.301911,-1.978074,6.382750,2.713967,-5.345311,2.503810,5.559122,0.715999,3.285599,-6.031874,-9.009900,-5.416384,-2.990678,-0.746826,6.005689,3.107653,2.939263,-6.348331,-8.310615,5.479762,3.085334,-0.235027,6.296266,7.651832,-3.103627,8.851595,-5.068627,-7.287597,-6.229851,-7.339276,-3.703499,-9.205394,6.447574,-0.697459,-3.584803,-8.841193,6.565289,-7.207262,5.399941,4.605913,1.574608,-0.658380,-2.514524,-7.959235,7.708887,-2.480984,-0.051960,-4.793620,3.140321,-1.897356,-4.763254,5.948855,9.621928,-2.015902,2.807073,-8.361113,-3.815640,4.594194,7.277176,-3.334482,-8.172224,-5.019326,1.659228,-7.624158,-1.699369,-6.767628,-0.412582,-9.964066,6.752468,-5.015039,-8.730072,4.145171,2.723706,6.778092,-7.125789,-8.004312,-2.145756,-4.881681,3.173493,-0.106152,4.852858,-0.244213,9.243176,3.269718,-5.412939,5.440614,6.309650,8.675842,9.906321,7.009233,-3.931605,-7.374139,1.473798,-9.645198,-9.739022,-4.646068],[5.491493,6.246708,7.178458,5.855373,-5.071418,-5.840752,4.721994,-9.900899,-2.329724,9.126019,2.859276,1.909485,-9.265113,9.973534,-6.632844,-7.500133,7.858972,-9.111654,-2.836066,-7.258844,8.302682,-9.216037,-6.107287,7.889707,5.882716,-9.147270,1.709409,7.629639,5.275240,-8.991563,-6.593649,-9.302114,-9.388898,-7.615536,-0.412292,7.730908,2.117855,3.573953,-4.846993,-0.105466,1.360614,6.019650,-0.371518,-1.716816,4.143631,1.368410,2.022304,8.041637,5.994026,-6.202459,-9.867928,6.561947,-2.031257,-6.048545,6.127798,-1.336911,7.954658,4.908854,-8.570884,8.500328,-8.605199,9.869201,-1.646368,8.745222,-4.350559,-7.314250,7.898480,-1.459299,-2.903615,4.120550,1.461719,-5.724854,5.678612,-0.394579,2.764927,6.264457,-3.857217,1.656485,-6.122250,-7.275878,-1.364436,2.511829,-6.816241,4.968403,-1.625620,8.606564,-5.351484,-6.050279,0.805716,4.493982,9.246855,5.848832,2.673937,-7.808785,6.946331,-3.110636,0.541419,-1.242643,1.365225,-0.943320]], dtype = "float64")#candidate|7203|(12, 100)|const|float64
call_7201 = relay.TupleGetItem(func_780_call(relay.reshape(const_7202.astype('float32'), [13, 5]), relay.reshape(const_7203.astype('float64'), [1200,]), ), 3)
call_7204 = relay.TupleGetItem(func_783_call(relay.reshape(const_7202.astype('float32'), [13, 5]), relay.reshape(const_7203.astype('float64'), [1200,]), ), 3)
output = relay.Tuple([uop_7185,call_7191,var_7192,call_7201,const_7202,const_7203,])
output2 = relay.Tuple([uop_7185,call_7193,var_7192,call_7204,const_7202,const_7203,])
func_7206 = relay.Function([var_7192,], output)
mod['func_7206'] = func_7206
mod = relay.transform.InferType()(mod)
var_7207 = relay.var("var_7207", dtype = "int32", shape = (2520, 1))#candidate|7207|(2520, 1)|var|int32
output = func_7206(var_7207)
func_7208 = relay.Function([var_7207], output)
mutated_mod['func_7208'] = func_7208
mutated_mod = relay.transform.InferType()(mutated_mod)
const_8047 = relay.const([[[-2.332954,6.360004,-2.985887],[-9.877595,6.923876,2.993571],[3.054698,6.520956,-7.610735],[9.895500,8.819055,-6.865764],[4.599587,-5.664447,5.842328],[-5.579327,-1.836936,6.895743],[4.298581,-3.388482,1.001165],[4.807763,6.277726,0.088874]],[[0.973482,5.809860,-1.146809],[-7.799810,-5.441871,9.054370],[9.209995,2.945082,1.934759],[-6.425440,-7.197421,-3.932708],[-4.090822,3.156818,-0.084005],[4.546041,1.410774,-0.941055],[-6.565421,1.681362,-5.930134],[-4.489989,4.443345,2.552753]],[[-5.626794,3.055131,-4.725386],[-3.532090,1.191799,-0.122559],[-8.937387,6.967356,-7.995372],[-8.465267,2.840374,-4.926761],[-8.926313,4.256843,-8.161657],[-1.588133,-8.757871,-6.186320],[4.363500,3.665880,-5.954172],[1.321751,5.625542,-2.794894]],[[-5.212437,-4.843055,-1.512227],[0.066683,1.854367,-5.023626],[1.033612,4.117537,-8.019459],[-9.719707,-1.908624,-5.424728],[8.569213,-3.515501,1.767672],[5.751650,8.876209,1.190289],[-9.612480,-5.379573,3.489925],[5.982064,8.986671,-5.956060]],[[-2.244546,-0.465040,-6.839644],[4.279875,-9.669977,-7.856222],[-1.296269,2.029818,9.473765],[-1.194945,-4.888063,0.616644],[0.275132,-1.993571,2.711648],[3.581901,-9.479900,7.542321],[-1.260598,-0.326711,-8.837235],[-1.859029,-7.604110,-5.784177]],[[-9.093209,1.209529,2.977401],[-0.128014,-5.414802,1.155884],[2.411098,0.583931,-2.222695],[-4.100253,-4.635855,7.032778],[0.743559,3.469353,-8.161203],[3.759295,-4.827736,6.227319],[-3.245787,2.275725,-6.429766],[-9.017632,6.842826,2.174196]],[[-8.817943,-5.255120,4.451458],[1.824757,-6.726751,-5.931570],[-5.267824,3.903142,0.127736],[-6.673205,8.425285,-0.267708],[4.142218,6.910441,-6.038840],[-3.991465,6.624910,8.439351],[8.560857,5.479002,-4.676689],[-6.458102,-1.528819,6.313592]],[[-4.805181,2.880304,9.881452],[3.051455,-6.752643,9.771758],[-1.285235,-8.604722,5.832921],[-1.165168,-7.873838,-6.523150],[4.809796,-1.444821,-9.579732],[0.380298,6.169296,-3.739260],[-1.628763,7.400026,1.672848],[-1.553499,9.536412,7.406285]],[[-2.223451,1.663326,0.442343],[8.652566,-6.774126,-2.376783],[-2.634306,6.006369,-4.118142],[-8.216619,0.849550,-4.100859],[9.048738,-1.573588,0.353037],[4.974392,5.027066,-4.000655],[-3.454676,-2.988616,9.881146],[5.385903,-2.848756,-5.806992]],[[7.722517,-4.923879,-1.212377],[7.345140,6.972669,-6.232571],[4.673084,-4.487594,-6.931492],[7.539534,5.120247,8.556061],[5.556434,-9.792830,8.695655],[-7.462351,5.973621,-8.181181],[9.879466,4.644003,8.052329],[7.679668,5.808571,-9.900707]]], dtype = "float64")#candidate|8047|(10, 8, 3)|const|float64
uop_8048 = relay.cos(const_8047.astype('float64')) # shape=(10, 8, 3)
output = relay.Tuple([uop_8048,])
output2 = relay.Tuple([uop_8048,])
func_8051 = relay.Function([], output)
mod['func_8051'] = func_8051
mod = relay.transform.InferType()(mod)
mutated_mod['func_8051'] = func_8051
mutated_mod = relay.transform.InferType()(mutated_mod)
func_8051_call = mutated_mod.get_global_var('func_8051')
call_8052 = func_8051_call()
output = call_8052
func_8053 = relay.Function([], output)
mutated_mod['func_8053'] = func_8053
mutated_mod = relay.transform.InferType()(mutated_mod)
func_8051_call = mod.get_global_var('func_8051')
func_8053_call = mutated_mod.get_global_var('func_8053')
call_8094 = relay.TupleGetItem(func_8051_call(), 0)
call_8095 = relay.TupleGetItem(func_8053_call(), 0)
func_1327_call = mod.get_global_var('func_1327')
func_1330_call = mutated_mod.get_global_var('func_1330')
var_8104 = relay.var("var_8104", dtype = "uint64", shape = (900,))#candidate|8104|(900,)|var|uint64
call_8103 = relay.TupleGetItem(func_1327_call(relay.reshape(var_8104.astype('uint64'), [10, 9, 10]), relay.reshape(var_8104.astype('uint64'), [10, 9, 10]), ), 1)
call_8105 = relay.TupleGetItem(func_1330_call(relay.reshape(var_8104.astype('uint64'), [10, 9, 10]), relay.reshape(var_8104.astype('uint64'), [10, 9, 10]), ), 1)
var_8113 = relay.var("var_8113", dtype = "float64", shape = (10, 8, 3))#candidate|8113|(10, 8, 3)|var|float64
bop_8114 = relay.floor_divide(call_8094.astype('float64'), relay.reshape(var_8113.astype('float64'), relay.shape_of(call_8094))) # shape=(10, 8, 3)
bop_8117 = relay.floor_divide(call_8095.astype('float64'), relay.reshape(var_8113.astype('float64'), relay.shape_of(call_8095))) # shape=(10, 8, 3)
output = relay.Tuple([call_8103,var_8104,bop_8114,])
output2 = relay.Tuple([call_8105,var_8104,bop_8117,])
func_8131 = relay.Function([var_8104,var_8113,], output)
mod['func_8131'] = func_8131
mod = relay.transform.InferType()(mod)
mutated_mod['func_8131'] = func_8131
mutated_mod = relay.transform.InferType()(mutated_mod)
func_8131_call = mutated_mod.get_global_var('func_8131')
var_8133 = relay.var("var_8133", dtype = "uint64", shape = (900,))#candidate|8133|(900,)|var|uint64
var_8134 = relay.var("var_8134", dtype = "float64", shape = (10, 8, 3))#candidate|8134|(10, 8, 3)|var|float64
call_8132 = func_8131_call(var_8133,var_8134,)
output = call_8132
func_8135 = relay.Function([var_8133,var_8134,], output)
mutated_mod['func_8135'] = func_8135
mutated_mod = relay.transform.InferType()(mutated_mod)
func_8051_call = mod.get_global_var('func_8051')
func_8053_call = mutated_mod.get_global_var('func_8053')
call_8199 = relay.TupleGetItem(func_8051_call(), 0)
call_8200 = relay.TupleGetItem(func_8053_call(), 0)
output = call_8199
output2 = call_8200
func_8206 = relay.Function([], output)
mod['func_8206'] = func_8206
mod = relay.transform.InferType()(mod)
output = func_8206()
func_8207 = relay.Function([], output)
mutated_mod['func_8207'] = func_8207
mutated_mod = relay.transform.InferType()(mutated_mod)
func_8051_call = mod.get_global_var('func_8051')
func_8053_call = mutated_mod.get_global_var('func_8053')
call_8217 = relay.TupleGetItem(func_8051_call(), 0)
call_8218 = relay.TupleGetItem(func_8053_call(), 0)
output = relay.Tuple([call_8217,])
output2 = relay.Tuple([call_8218,])
func_8224 = relay.Function([], output)
mod['func_8224'] = func_8224
mod = relay.transform.InferType()(mod)
output = func_8224()
func_8225 = relay.Function([], output)
mutated_mod['func_8225'] = func_8225
mutated_mod = relay.transform.InferType()(mutated_mod)
func_8224_call = mod.get_global_var('func_8224')
func_8225_call = mutated_mod.get_global_var('func_8225')
call_8249 = relay.TupleGetItem(func_8224_call(), 0)
call_8250 = relay.TupleGetItem(func_8225_call(), 0)
func_6369_call = mod.get_global_var('func_6369')
func_6371_call = mutated_mod.get_global_var('func_6371')
var_8270 = relay.var("var_8270", dtype = "float64", shape = (112,))#candidate|8270|(112,)|var|float64
call_8269 = func_6369_call(relay.reshape(var_8270.astype('float64'), [1, 8, 14]))
call_8271 = func_6369_call(relay.reshape(var_8270.astype('float64'), [1, 8, 14]))
output = relay.Tuple([call_8249,call_8269,var_8270,])
output2 = relay.Tuple([call_8250,call_8271,var_8270,])
func_8275 = relay.Function([var_8270,], output)
mod['func_8275'] = func_8275
mod = relay.transform.InferType()(mod)
mutated_mod['func_8275'] = func_8275
mutated_mod = relay.transform.InferType()(mutated_mod)
var_8276 = relay.var("var_8276", dtype = "float64", shape = (112,))#candidate|8276|(112,)|var|float64
func_8275_call = mutated_mod.get_global_var('func_8275')
call_8277 = func_8275_call(var_8276)
output = call_8277
func_8278 = relay.Function([var_8276], output)
mutated_mod['func_8278'] = func_8278
mutated_mod = relay.transform.InferType()(mutated_mod)
func_8206_call = mod.get_global_var('func_8206')
func_8207_call = mutated_mod.get_global_var('func_8207')
call_8280 = func_8206_call()
call_8281 = func_8206_call()
output = call_8280
output2 = call_8281
func_8282 = relay.Function([], output)
mod['func_8282'] = func_8282
mod = relay.transform.InferType()(mod)
output = func_8282()
func_8283 = relay.Function([], output)
mutated_mod['func_8283'] = func_8283
mutated_mod = relay.transform.InferType()(mutated_mod)
const_8304 = relay.const([[[-6.406548],[5.759422],[-4.100443],[6.285083],[-0.453475],[8.943514],[-2.837121],[-3.493662],[9.700932],[5.672056],[4.560955]],[[-7.585774],[8.481289],[8.533217],[4.642734],[0.939065],[-3.828785],[4.883234],[-9.534982],[-1.284578],[-7.858914],[-2.466916]],[[8.743322],[9.877139],[6.085742],[-6.770854],[-3.155736],[-6.992629],[-7.597774],[-9.232861],[-7.974499],[-8.381564],[6.192867]]], dtype = "float32")#candidate|8304|(3, 11, 1)|const|float32
var_8305 = relay.var("var_8305", dtype = "float32", shape = (3, 11, 5))#candidate|8305|(3, 11, 5)|var|float32
bop_8306 = relay.divide(const_8304.astype('float32'), var_8305.astype('float32')) # shape=(3, 11, 5)
func_8224_call = mod.get_global_var('func_8224')
func_8225_call = mutated_mod.get_global_var('func_8225')
call_8313 = relay.TupleGetItem(func_8224_call(), 0)
call_8314 = relay.TupleGetItem(func_8225_call(), 0)
func_8051_call = mod.get_global_var('func_8051')
func_8053_call = mutated_mod.get_global_var('func_8053')
call_8323 = relay.TupleGetItem(func_8051_call(), 0)
call_8324 = relay.TupleGetItem(func_8053_call(), 0)
uop_8355 = relay.erf(call_8323.astype('float64')) # shape=(10, 8, 3)
uop_8357 = relay.erf(call_8324.astype('float64')) # shape=(10, 8, 3)
uop_8362 = relay.sqrt(uop_8355.astype('float64')) # shape=(10, 8, 3)
uop_8364 = relay.sqrt(uop_8357.astype('float64')) # shape=(10, 8, 3)
output = relay.Tuple([bop_8306,call_8313,uop_8362,])
output2 = relay.Tuple([bop_8306,call_8314,uop_8364,])
func_8365 = relay.Function([var_8305,], output)
mod['func_8365'] = func_8365
mod = relay.transform.InferType()(mod)
var_8366 = relay.var("var_8366", dtype = "float32", shape = (3, 11, 5))#candidate|8366|(3, 11, 5)|var|float32
output = func_8365(var_8366)
func_8367 = relay.Function([var_8366], output)
mutated_mod['func_8367'] = func_8367
mutated_mod = relay.transform.InferType()(mutated_mod)
var_8394 = relay.var("var_8394", dtype = "float64", shape = (10, 12, 6))#candidate|8394|(10, 12, 6)|var|float64
uop_8395 = relay.atan(var_8394.astype('float64')) # shape=(10, 12, 6)
func_344_call = mod.get_global_var('func_344')
func_348_call = mutated_mod.get_global_var('func_348')
const_8404 = relay.const([1.614018,8.950110,3.313879,-1.706549,-5.084435,-3.205118,2.946169,7.225722,-4.726445,-8.428045,5.545516,-5.398301,-5.686190,-7.314838,4.008807,-8.912290,-7.842531,-9.107329,4.035440,1.821134,-9.179211,-1.988051,3.912572,8.368783,-4.701361,4.942592,-1.295955,5.844425,7.550957,-4.623057,1.957236,-8.338756,5.453450,9.571772,0.183306,-0.944529,5.118621,-8.064596,-6.554380,-9.311671,5.842726,-8.483564,6.484054,2.913673,1.131142,5.941007,-5.124594,-6.644582,-1.755987,1.354828,3.632080,0.455170,-2.493233,2.467225,-4.124675,9.763614,6.046834,2.191753,6.115008,-8.362796,-7.189019,-3.985012,5.498007,-7.372892,-1.295647], dtype = "float32")#candidate|8404|(65,)|const|float32
const_8405 = relay.const([-0.966109,-3.464469,-2.885512,9.023899,2.607585,-1.611810,-9.015127,9.661099,-5.952049,-2.750937,-6.413440,-6.438271,-2.707053,-7.184882,-7.176867,-9.422966,-0.335535,-8.165549,8.006432,-6.133974,-2.553802,1.350904,5.185186,9.323169,0.707492,-2.430437,2.101669,-0.345740,6.667972,-8.639650,4.379836,9.321338,5.237229,-2.883430,4.341934,3.193676,2.842801,-8.077642,9.810399,4.738165,-9.629969,4.632326,-0.780412,3.564426,-9.137155,5.182099,-3.278097,2.966533,-2.061565,0.379563,2.500873,4.479749,6.000824,1.804307,-5.858480,0.346534,-0.398657,-8.206801,1.925387,-6.194061,8.812672,2.144992,-6.303273,-6.205854,-4.027786,9.358840,-8.263666,2.882632,-7.733126,8.764771,2.886965,5.490248,4.885492,-1.397520,7.371004,-2.811942,-5.445140,5.826255,0.216746,6.871619,2.488600,5.902402,6.166280,4.409521,5.285257,-7.945158,-6.971371,-4.937146,-8.030947,-5.063324,5.585210,-4.023474,-5.510722,3.453915,3.583756,7.785098,3.943566,1.005995,1.724329,-4.001778,0.288812,5.719002,9.676548,2.325668,-0.905965,6.013395,-3.003353,6.904724,4.375045,-6.960434,3.025695,6.069798,-7.677253,-6.914062,-4.818572,-5.268601,8.364316,6.398748,1.732465,-1.129659,-5.129185,-1.052665,-0.117950,7.533140,-1.532892,-2.001512,0.824757,-2.726847,-9.137488,-1.041123,8.297983,-9.879748,-9.240733,6.702281,-3.207239,-1.129838,-1.802648,-6.171338,-9.943641,-8.205433,9.672978,3.211389,6.769770,4.506993,-7.686775,-6.835098,-5.579150,-4.679935,-8.417310,2.370742,-0.884854,9.690392,-0.895410,4.479755,6.315365,9.089172,-3.841649,6.330383,-6.131051,-5.362011,-0.095694,-4.295467,1.450978,-8.803099,5.475874,4.120576,6.340016,-7.637736,-8.369184,-0.126307,8.744593,-4.779611,-9.045997,4.397358,-1.672705,7.141066,-5.574729,-8.491309,8.562887,8.507626,-2.722249,-0.205100,2.156603,9.000278,-9.791773,1.677945,0.593271,7.191491,-9.515029,-4.630288,-4.848201,5.451104,6.420865,5.899060,-9.438699,7.940697,6.069127,-5.418112,-7.372097,-6.862772,-2.190414,5.180297,2.307200,2.941103,9.831763,6.515727,-0.483284,2.390719,-4.827652,-1.597533,4.000770,5.297708,4.195905,-4.649717,8.711106,-2.493329,-7.699760,9.295692,-3.407125,9.930054,-9.210872,-2.301445,-4.047214,-3.720308,-0.103383,4.471056,2.350894,-6.746144,6.133375,-2.984320,7.441339,-8.745486,-3.786214,6.621602,-5.859805,6.799105,4.705360,4.289434,9.269095,-9.040240,-3.311565,9.956308,-9.473673,-4.720809,-8.946190,-7.821695,6.911814,-5.852963,-6.437411,1.233648,-8.098286,1.328953,-1.499598,0.493071,8.354028,5.971584,-5.734044,9.389241,-1.103759,-8.256181,-0.141623,-2.841914,3.781844,-2.093141,-3.357175,-8.587543,-9.280644,5.792770,0.857211,-9.379657,-4.635500,-7.039597,-1.032448,-3.598859,-3.113228,-0.495973,7.776177,-5.060824,2.854335,3.042186,-5.954604,-1.391935,7.830479,2.558316,5.727589,8.987792,3.882527,-7.556941,6.999329,-2.849253,0.254989,6.641262,9.049835,7.484965,-8.606338,1.235215,-9.349217,7.935765,7.738144,-8.650285,-0.468279,-9.444585,-7.954482,4.905814,7.120511,7.881286,-0.721318,-5.712495,-1.846942,-8.798232,-8.805517,-0.254492,-3.447485,-7.101694,-2.410708,-0.563377,5.361053,1.795610,1.962390,9.209628,-6.690421,2.623707,4.283949,4.051695,7.815525,-6.708810,6.423768,-1.792768,-2.334421,2.325738,-2.472657,6.817784,-3.366749,7.253995,-2.840483,6.474704,5.902096,9.527363,-7.055707,-2.627036,5.817736,0.909112,6.922444,-8.812164,-3.512257,7.004332,6.209993,-7.150568,8.296805,7.860883,9.060204,-4.898495,2.562345,3.546235,-2.371243,3.885941,5.573349,-2.303918,-3.059437,-6.102877,-1.163316,7.234709,2.877727,-0.211216,5.497544,-7.136210,-4.125290,0.068944,-8.330567,0.021921,9.572503,-8.811568,9.336711,4.857090,6.007596,-3.058367,9.060218,6.610962,-2.329967,5.677531,5.109411,-3.685717,6.122237,3.000108,-6.710077,-6.519540,7.785757,-8.385975,-4.703084,7.018574,-0.149404,8.307496,0.283093,-8.527172,-4.298212,-4.871743,4.292611,1.175635,-9.720538,-9.234225,5.034104,-5.080863,-1.467694,6.155095,4.498925,-0.976259,1.152954,6.887621,8.904413,-1.206338,-0.687035,2.522929,3.924746,-6.614878,-6.762611,-4.545953,6.128913,-0.542579,-0.865505,-0.910472,-9.599276,8.679274,6.422361,9.663783,-6.133013,-6.658633,-6.463207,-9.132594,5.374802,2.163535,8.643302,3.581215,2.688163,-5.803383,-5.754868,6.688313,-4.442684,-3.253717,7.821845,-3.735206,7.914924,-3.800833,-1.914760,8.202797,2.361356,0.367426,-9.764982,-6.170014,2.782452,0.594249,2.906675,-5.903165,2.131956,4.323910,-0.524027,-5.320379,5.969114,4.914916,7.606511,5.476127,-1.079518,-4.865123,1.350567,-7.631551,8.107791,-3.390922,-9.442125,-5.204929,2.208578,-5.798638,7.144599,4.052588,-3.704965,0.055967,6.281210,-7.108476,6.137062,8.896724,8.191941,9.625612,0.491899,-0.455886,3.174791,-6.462750,-9.047014,-4.615601,6.008645,-5.170544,3.966316,-7.710228,-1.908654,-2.021121,3.812553,7.935602,5.947696,4.682423,-4.942556,-8.889545,7.807195,0.450174,0.591295,0.398500,5.941316,-4.905428,2.055336,-9.109521,-7.836369,-2.646247,-8.963573,-0.871577,-3.830782,-6.205120,7.348216,-4.037192,3.492114,6.196699,-8.213653,-8.877247,-5.071417,-9.232765,7.472721,-1.279771,7.571374,6.351250,-8.607011,1.535832,1.544744,5.640049,-4.775573,6.473974,1.008087,-1.721335,-8.158277,-1.501851,-1.742469,-1.417721,4.387040,4.633909,2.012204,-5.584698,-4.637677,7.442994,7.510245,7.623590,-1.180999,-7.142067,5.786012,8.155973,7.544571,-7.748070,-4.076277,3.117440,4.232545,-9.240419,2.253067,-9.649150,-4.924011,0.710095,9.306716,5.190755,-0.627555,2.002743,3.553035,0.714410,-6.820698,-0.911630,-6.731453,-0.060745,-4.114205,3.679562,2.830063,6.385699,4.898740,-0.946419,0.431703,-5.400350,4.001172,7.883977,7.996609,7.996061,4.752475,-8.053457,7.555385,3.608752,-5.956227,3.003513,9.272174,1.145875,8.534719,4.570886,-1.947766,-3.868983,1.177892,-1.527473,-2.502980,6.036800,4.144454,-3.457727,-5.670813,-9.581304,-0.112506,4.716119,-7.901138,-4.173868,-1.202886,0.834600,5.477705,-7.570571,1.221887,2.309052,-9.303962,8.476990,7.886255,-1.822785,-2.173250,-1.372340,-0.290189,-3.750456,-6.587634,-9.457423,-6.326626,0.903830,-1.051671,-5.509262,-6.262363,8.735324,-6.278862,-9.352135,-0.428565,-2.158616,8.327945,4.867179,-7.923890,2.298196,-3.696341,3.201627,5.461926,8.771603,-5.584865,4.912741,7.491766,3.952377,-2.698093,3.842832,-8.448928,5.843574,-8.419909,6.120079,-3.541924,-3.250556,-9.213891,3.327955,-3.562363,5.083850,-6.856235,-7.632737,-3.211934,-8.119183,9.928296,4.880187,7.034245,-8.355031,-8.348551,-5.229965,-6.024343,3.131559,-6.427077,-5.986806,4.836919,8.942680,-0.055715,-4.992535,3.309563,3.015423,-9.402168,-3.522202,1.024979,-7.142018,-5.393328,-6.637572,1.491066,7.225361,-9.775613,-0.490974,-7.541089,-7.470341,4.072457,0.130396,8.009659,-7.764044,9.413218,5.085162,0.176154,-9.928626,-0.830108,-7.794963,3.594994,6.978624,4.681612,8.655294,0.385919,-5.799508,-7.316960,2.782707,1.908821,-9.597284,-2.947517,0.971497,6.351399,9.991333,4.085314,2.926667,8.619512,-3.125292,-1.606739,-3.053769,7.117392,3.199054,-9.638227,2.218332,-1.066182,0.593109,7.211328,-8.576226,-5.586974,-2.104566,7.126598,-6.597452,-8.944654,2.380975,3.402770,-4.971436,-3.267390,-6.634234,-1.417995,-5.847127,4.103597,9.335599,3.166221,8.933915,1.539321,4.741850,1.058500,-6.177051,-5.592866,7.321798,0.626805,6.389209,8.816435,8.466914,3.313626,-4.182399,3.280913,-9.231722,4.943622,-0.156045,9.773935,1.526776,-2.717802,9.095700,7.299353,-4.813764,-7.089143,-2.827919,8.842432,-1.046981,-8.831803,-8.924314,-4.621469,-7.341052,-2.396590,6.182154,-0.471096,5.301145,-6.278053,5.643330,3.769888,-3.964655,3.810619,9.484151,-0.965677,-0.175834,-9.430084,-9.471693,8.839516,-9.234606,-0.446355,6.505872,-6.446546,4.012504,5.024768,-4.055756,-3.988771,8.719128,5.041175,-3.396446,-8.672755,-4.514343,6.460624,8.537358,3.875928,3.025360,6.477814,-1.628953,3.796761,-4.184256,8.852481,5.373566,-1.396271,8.085208,1.029580,0.301249,-5.542266,-9.740460,2.828551,-5.550431,1.510191,-5.905378,4.020616,-4.950851,-4.850657,0.061949,9.006515,2.353943,5.643617,2.745369,-4.127007,-5.932185,5.653166,6.106410,9.686471,9.777693,3.021421,5.606706,3.262571,6.930129,2.671334,2.340583,3.026793,-8.416783,2.977680,3.859720,-7.850624,7.678366,-6.540213,-7.912392,-1.540433,-0.815658,1.923194,-2.030659,8.838913,-8.946951,4.605702,2.197945,-7.635407,3.583927,4.623514,-0.087339,0.693445,7.667684,-6.493565,0.647227,-9.478931,-8.274740,1.370757,-4.750571,-2.159006,3.980069,-6.578732,-7.776360,-5.453393,-7.221821,-5.229295,-6.513803,-4.904890,8.678353,1.819323,-0.993200,-2.444394,-2.566610,6.090959,-7.304464,9.729309,6.765489,-8.697249,8.054432,-9.924272,-0.504434,-2.678736,-0.756926,4.180177,2.637994,-5.165438,-9.644017,-3.152284,-6.556508,0.323381,0.448358,8.115488,-7.176409,-7.833773,-3.398173,4.664559,9.762854,6.916619,1.744967,9.381970,-7.786472,-5.193307,-8.978045,5.805298,-9.318676,0.429863,8.921174,0.206559,-3.984621,1.629063,-5.307532,9.506707,-6.263670,3.205382,0.383204,-7.336184,-1.020040,-0.206579,3.545352,6.193753,-9.646617,1.929562,5.489054,2.773961,-6.456618,4.580972,-8.161059,-0.429015,8.988059,-1.216854,-5.734386,-4.314661,2.083839,8.679229,-5.676053,-5.090666,6.842429,0.042596,-3.477021,-5.311656,5.662899,2.812421,9.494018,5.156656,0.249128,3.954908,-6.297203,-4.158504,4.945050,2.211909,3.118485,-0.961868,6.348280,9.038390,2.407547,9.757288,3.552065,-9.410173,-2.579225,-4.516546,6.147870,-5.897946,4.167836,8.825541,-1.001737,4.517983,-4.983932,2.872509,7.209128,-5.261458,-4.378256,4.599789,-5.878483,-2.639749,1.546097,9.336928,6.986820,2.686916,-8.931899,3.592539,1.723411,-4.397610,-5.878653,7.722014,9.595211,-2.208144,7.783864,9.090035,0.084725,0.042638,-8.794147,5.357591,-8.826779,8.294658,2.356536,6.582420,5.364349,4.030129,3.875836,4.513606,-6.843376,4.758286,4.716722,0.291158,-4.827885,-2.118326,9.555929,-8.482502,-0.864344,0.044705,-8.723697,-1.812288,-7.254681,-1.829262,-4.684328,-1.687836,0.727696,7.324349,9.192588,-4.462863,1.768567,-7.451320,-8.847359,-5.605257,-4.732404,7.880763,-3.575986,-8.106943,3.546232,7.489302,-6.948048,-3.555904,8.509046,8.277055,-2.286250,-4.250374,-5.463061,2.185045,-8.762940,0.085181,2.625621,6.173528,-0.845337,-6.959756,-8.860360,6.507592,-6.375686,9.047214,4.939567,-5.465573,-1.922117,0.652218,9.582679,8.419173,-8.269259,1.724454,0.370223,-7.140395,-1.933026,8.678379,-6.056959,-5.755067,-4.161215,-0.051855,-7.522450,-5.230217,9.969539,5.668917,-6.170022,-5.893378,3.602218,-5.610713,1.290166,-6.083197,5.751742,-2.997150,-0.769813,-1.144191,-0.551655,1.317723,9.822025,2.464727,9.168502,-5.523207,-3.445898,7.335026,-6.354623,-4.307730,-0.142466,3.935095,4.343423,7.763519,-1.240127,-4.319440,-4.905570,6.394896,1.750822,-8.799567,6.481411,-3.774301,-1.400611,8.272329,2.577252,-7.611472,-2.194464,-5.178478,6.487405,-4.385995,4.869248,4.245187,-7.997047,-4.840185,2.148140,-5.622630,6.546671,-8.258166,-6.481054,-2.565356,-2.509692,1.686374,-7.100580,-9.420318,1.239165,-6.889862,8.164278,-3.120994,-0.573279,-1.879199,-9.008211,1.517345,1.050876,8.854804,0.642099,-7.483195,-6.405202,6.343674,2.848489,-6.152674,-3.294966,4.353234,-1.236099,9.366437,-1.180896,1.892987,-6.354757,-5.617400,-4.908883,-8.706014,4.960747,4.872255,-3.764028,5.891787,-1.625462,6.410484,-4.498493,5.452093,-1.362729,3.881359,-5.249436,0.325936,6.063800,-4.493517,1.708868,-5.881288,3.118801,-8.278179,-8.835012,4.111771,-1.947604,1.847900,-7.025177,5.696593,1.244128,3.278466,5.547952,-4.448756,5.536713,4.993710,6.427423,0.638253,7.855362,7.589821,0.526535,4.593863,8.984434,-9.563501,4.360708,-3.098469,5.866982,-7.483780,4.502482,0.622533,9.449872], dtype = "float64")#candidate|8405|(1200,)|const|float64
call_8403 = relay.TupleGetItem(func_344_call(relay.reshape(const_8404.astype('float32'), [5, 1, 13]), relay.reshape(const_8405.astype('float64'), [1200,]), ), 2)
call_8406 = relay.TupleGetItem(func_348_call(relay.reshape(const_8404.astype('float32'), [5, 1, 13]), relay.reshape(const_8405.astype('float64'), [1200,]), ), 2)
func_8275_call = mod.get_global_var('func_8275')
func_8278_call = mutated_mod.get_global_var('func_8278')
const_8408 = relay.const([-1.123827,-7.673141,7.358133,3.455219,-7.356230,0.454354,-7.699246,0.040265,8.497345,-0.961308,3.226362,6.649812,-3.649363,4.391525,8.590703,2.971528,8.575590,9.307924,-5.487323,4.243178,9.417063,-5.102882,-9.409601,9.251031,9.813542,5.697599,5.979286,-8.849168,-8.655630,3.366356,7.801609,6.095723,-3.464640,2.553339,-1.515465,-9.605139,-6.850197,4.273656,-5.387921,-4.908910,-9.021491,-2.568179,-6.793642,4.089272,-4.350490,2.889335,8.833332,3.221969,3.912868,1.872537,8.189550,8.817247,-6.566779,5.685341,5.232700,-1.960235,8.287388,-1.431605,-4.749693,-4.741985,-2.190220,-6.461390,-8.243251,-5.893755,-3.719910,6.578264,6.976603,4.272993,7.919674,-0.964385,-3.586440,-1.330213,7.148540,-2.160321,5.905368,-2.433189,-4.020024,4.827514,-3.782983,-0.392331,8.740296,1.858379,0.090853,1.935184,2.224956,6.643233,-6.420919,7.490168,-6.821261,2.947125,-5.451607,-5.358987,-4.717945,8.031775,5.023756,-1.769344,-3.877556,9.993497,-8.640038,-2.397235,-3.928585,-7.263137,-6.680471,-6.839388,7.870649,-2.520007,8.061979,-5.404677,-9.669400,0.965788,6.578240,5.589835], dtype = "float64")#candidate|8408|(112,)|const|float64
call_8407 = relay.TupleGetItem(func_8275_call(relay.reshape(const_8408.astype('float64'), [112,])), 2)
call_8409 = relay.TupleGetItem(func_8278_call(relay.reshape(const_8408.astype('float64'), [112,])), 2)
func_1677_call = mod.get_global_var('func_1677')
func_1680_call = mutated_mod.get_global_var('func_1680')
const_8412 = relay.const([[-6,6,-9,5,-9,-6,4,9,6,-3,-3,2,-7,1,-4,7,-1,-10,-6,-4,1,-10,-9,-6,-8,-6,3,2,-6,6,-9,10,5,-10,2,-8,5,9,-4,1,-3,-4,2,-8,10,-8,4,8,-5,-10,2,1,3,-1,4,10,8,-6,3,-1,-6,1,7,9,6,1,7,-7,-4,9,2,-5,-7,-1,3,-1,-10,-10,2,9,1,7,-3,-8,3,-5,7,3,1,4,5,4,10,2,-5,9,4,2,8,-4,-7,6,-9,10,5,5,-1,-9,4,10,-4,-5,-5,-6,7,6,9,10,2,-9,3,-1,4,5,1,9,-6,-6,1,6,3,2,5,-3,3,8,-5,-10,8,9,3,-9,-10,2,8,-9,-1,5,6,-4,10,-5,-10,-6,-10,-2,-2,-4,5,-4,-3,5,8,9,-10,1,5,-6,10,-3,-8,-7,-5,3,-6,-4,1,-4,-1,-3,8,-2,-1,-5,-2,-3,-5,-9,3,10,-8,-10,-4,-8,-9,-6,4,-9,-6,-7,-7,7,3,2,-7,-5,7,-1,-2,-5,-9,-10,-9,-9,-5,3,9,2,5,7,-6,-4,10,5,-6,2,5,8,9,1,4,-6,6,-2,-3,3,-3,-4,6,-2,-4,-6,6,-5,1,-1,-9,-5,-4,-6,-10,-6,-7,6,4,6,4,-6,-5,-5,6,1,-2,2,7,-3,-8,10,1,-1,-5,2,-8,-10,-9,9,-3,-5,-9,1,7,-5,-4,2,-10,-8,-1,-4,9,2,-9,7,3,6,-9,10,-10,-10,-9,-10,9,-5,10,-9,-3,9,4,-3,6,-1,-6,-10,7,3,-4,8,-10,-4,-4,9,6,1,-4,8,-6,4,1,10,-3,5,-5,3,-8,6,-1,-9,-3,-6,-7,-8,5,-4,-5,6,7,-7,6,6,6,4,-8,-4,-5,9,-7,2,-6,-10,-1,1,8,8,8,8,7,9,6,6,6,-3,10,-4,-4,-1,1,-10,-10,4,6,1,-3,9,-6,1,2,-4,9,-1,4,-7,4,7,8,3,3,-7,8,6,-3,-7,-2,7,1,-6,2,2,-3,-3,10,4,1,2,9,5,-6,7]], dtype = "int16")#candidate|8412|(1, 416)|const|int16
call_8411 = relay.TupleGetItem(func_1677_call(relay.reshape(const_8412.astype('int16'), [4, 8, 13])), 0)
call_8413 = relay.TupleGetItem(func_1680_call(relay.reshape(const_8412.astype('int16'), [4, 8, 13])), 0)
func_1569_call = mod.get_global_var('func_1569')
func_1572_call = mutated_mod.get_global_var('func_1572')
const_8440 = relay.const([6,6,3,6,-5,-9,-2,8,-6,9,-10,7,-8,2,1,-7,-9,2,-4,-1,9,-7,9,-2,10,-7,2,10,-8,3,8,-6,-6,2,-7,9,2,-8,3,6,-5,-4,10,7,6,5,2,2,2,-8,-8,-6,4,3,-5,-1,-3,-7,8,-1,6,8,-9,-5,-6,-1,-1,7,10,1,1,8,-6,7,1,-8,-3,-4,-1,-5,-4,-3,1,10,-2,-1,-4,6,-5,4,8,2,2,-6,-7,-10,-7,-7,5,-4,-10,-7,-3,4,6,4,2,7,-2,-7,-6,-1,1,3,-5,2,-9,2,2,10,4,3,-9,-1,5,-1,6,6,-10,-5,6,-2,6,9,-10,7,-4,-1,1,6,-2,9,-9,-7,-3,-5,2,4,-3,-8,-3,-8,-7,1,-3,-6,-4,-4,9,1,8,9,-5,-7,-7,1,2,-6,-10,-9,-4,9,9,2,-9,-9,10,4,-2,-4,-6,8,6,-8,-3,-1,-3,6,6,-1,-4,1,-10,-1,-5,-1,2,2,-5,6,9,-4,8,6,9,-8,-2,9,5,4,5,-3,-7,6,-7,-8,10,9,-4,-3,-6,8,-1,8,4,-5,9,7,5,6,6,6,-5,-7,4,4,10,-6,6,4,-7,-9,7,2,9,-3,3,-4,-6,9,-8,10,2,8,3,8,-1,8,-4,1,10,2,-5,4,-5,3,-6,3,10,-8,3,3,-6,5,1,5,10,-7,-2,-8,5,-4,4,-1,-9,9,6,10,-3,1,-1,-9,2,7,8,4,-7,-4,-8,-7,-5,-10,8,-4,5,7,2,10,-2,9,-2,-3,3,-2,-4,7,7,4,-9,8,-2,1,-1,-9,8,2,2,3,-5,-6,5,-2,-3,10,3,-6,-3,10,-10,8,6,1,7,3,8,3,-3,6,1,7,-3,10,2,9,-8,1,9,2,-6,8,-6,-7,-7,-6,10,2,-6,9,-4,-1,7,6,6,10,7,-5,-2,-4,7,7,3,9,4,9,-8,10,-6,1,-8,-3,-2,8,3,1,3,-5,9,-8,-4,1,-9,9,-9,9,-3,2,3,9,3,-5,-8,-3,-6,10,-9,-4,-3,-4,-3,-8,5,4,-2,-5,-1,-1,1,-7,-6,5,-9,-4,1,-3,-2,3,-2,7,-7,9,3,8,6,8,-4,7,-1,-4,-10,-9,9,-2,-6,-5,1,3,-5,-5,8,-5,8,6,5,-4,-10,-9,-4,1,10,-4,-1,-7,10,7,5,2,4,-5,-1,-5,-1,-9,-3,-4,8,6,-7,-6,-4,6,-7,-5,10,1,6,-2,8,1,-4,6,2,-1,-4,-7,4,-8,-4,3,2,7,9,6,-5,-1,-1,-2,9,-4,-2,1,-4,6,-3,-4,-2,6,2,-9,8,-5,8,-4,1,-10,-8,-1,-10,-10,4,10,7,-7,8,6,-7,9,-10,-2,10,6,-5,-10,-3,-9,-4,-3,7,-10,10,-2,-6,-4,-5,-7,-10,-3,-1,-9,-3,1,9,8,6,10,-3,4,-5,-6,-5,-5,10,-10,-5,3,-9,-5,10,6,-3,-3,1,6,6,-8,6,7,-5,5,8,-8,-4,-7,8,2,2,-8,3,-2,-7,-9,6,-9,3,-9,-5,9,-1,6,2,1,-3,8,4,-2,-8,5,7,5,7,-10,-2,-2,5,-2,-5,-10,3,-4,-6,1,-9,10,-8,7,-10,8,6,-4,-9,10,9,-2,-8,3,-5,9,-1,-2,-3,-4,6,4,-5,4,5,8,4,10,8,-5,8,-7,-3,7,5,-9,-7,-2,-1,6,2,2,8,7,5,-7,6,-3,-10,-4,-4,-6,8,-5,8,-7,-7,-6,10,9,3,-10,9,-7,4,5,-6,10,1,-3,7,9,6,9,7,3,5,1,7,-4,-9,10,10,-9,7,1,-1,-8,-6,-5,6,-4,-9,6,3,8,8,7,-2,-2,8,1,-4,6,-7,-2,9,5,-9,6,10,3,-6,8,9,-4,-3,-8,-5,6,7,4,-4,-6,9,-6,-9,-9,-1,10,-8,9,-9,-10,-1,-6,-4,4,1,-10,1,-3,5,5,2,-6,-10,-4,1,-5,10,-9,-6,-2,-3,9,-8,-4,4,-1,-5,-9,-3,3,-6,-6,-2,1,-8,-4,5,4,-8,10,-10,-10,-9,9,9,6,2,4,-7,-1,7,-7,-3,-10,1,-2,-3,5,1,-4,6,8,3,2,-6,-6,-2,-9,-6,-5,9,10,-2,-3,-7,-3,-8,10,4,1,7,-5,4,4,-5,9,-8,5,3,3,5,-4,-9,-4,8,-5,7,-4,5,1,8,-3,10,-6,-8,-3,-5,7,3,6,-1,6,2,8,-1,7,-2,6,10,3,1,10,6,7,-1,1,-6,9,-9,5,-10,9,-5,-2,-9,3,-4,3,2,-9,4,6,-7,10,-4,7,-7,3,-3,7,1,-9,2,-5,3,9,4,-1,-2,6,-4,-1,-9,-7,1,-4,3,-9,7,-1,-8,2,-8,10,2,8,-10,10,-3,-4,10,-9,3,-8,-2,3,-3,-9,-5,-3,-8,4,-9,-9,-9,9,1,2,5,-4,-3,6,-9,-7,5,-1,10,-3,8,-5,5,8,-1,-9,2,-3,8,9,4,4,-7,-4,-2,7,-7,9,-6,9,9,4,-1,6,-6,-9,-2,-10,9,7,-1,1,9,-1,9,4,7,-9,5,-8,-2,-1,-1,5,-9,1,-7,9,4,-10,-1,3,2,-4,7,10,-10,-6,-6,-3,3,2,-8,-5,2,-7,10,8,-2,-9,-8,-10,1,-9,9,9,-6,2,-3,-6,2,7,3,-4,-2,4,3,8,10,-9,1,-10,3,1,-7,-1,2,1,-5,-8,9,7,-6,5,4,4,4,-2,-6,-2,-2,1,3,9,8,-7,9,-8,8,-10,7,-8,8,7,5,-6,-4,-2,9,-5,9,4,5,-3,-5,-5,-5,-3,-5,6,2,6,8,-3,9,6,9,8,-1,-6,3,9,6,-2,4,10,9,2,-6,-4,2,-5,-9,-6,5,9,3,6,1,10,-6,-5,-8,4,-3,-9,10,7,-8,-2,-3,8,10,-9,2,8,10,4,-10,2,-9,-8,4,8,8,-6,2,9,8,1,-7,-1,-2,-7,-3,6,9,-1,-1,8,1,-10,-7,-3,9,6,-4,-5,2,-1,-2,-9,2,7,-10,-3,-6,-6,-4,-8,4,10,-3,-6,-10,1,7,4,-1,5,5,-6,2,6,10,2,-9,2,9,6,9,3,7,-7,10,4,1,8,10,3,9,-4,8,-2,-5,6,6,-2,-7,-3,-1,4,-7,-7,-8,6,6,8,5,-10,-8,6,8,-9,5,3,1,9,-10,4,7,-5,-2,-6,3,-7,4,5,9,8,7,1,-1,-3,-7,10,9,-6,8,-7,-7,4,-8,-5,2,-5,7,5,6,-10,9,8,5,10,-5,-6,1,-6,-8,10,-6,-9,2,-2,3,3,2,-1,-5,-10,-6,-5,-6,-10,3,2,-6,10,-6,6,4,1,-1,1,-3,-8,-9,10,5,-8,9,-6,3,-2,-10,-8,8,-8,-4,-4,-4,-10,7,-8,9,9,-10,-4,10,-1,4,5,-3,-10,-6,5,-9,2,-4,-6,-6,2,9,8,10,2,-3,6,1,-2,-2,-6,-4,5,-9,-1,-6,-3,-7,-6,2,-2,2,8,6,10,-9,-9,3,10,-4,8,-6,-7,-2,1,-9,-9,-5,-6,-9,8,-3,2,10,-9,-7,-6,-6,5,4,-1,2,-7,9,7,2,-9,-4,-2,-4,-1,-7,-1,10,10,3,10,-1,10,10,1,5,-6,10,-5,8,5,-5,-8,-4,10,10,-3,-6,-5,2,-8,-4,8,-4,-10,1,10,6,10,6,7,9,-9,5,-1,9,-4,8,9,-8,-6,8,4,6,4,-5,10,-3,1,6,-2,3,-8,-1,5,-9,8,-9,-9,-8,8,6,-9,10,4,2,-1,-6,-6,-7,6,-3,3,-9,-8,-5,-2,8,-9,-3,-4,-1,-10,5,3,8,-10,-6,-5,-5,-3,1,3,-9,10,7,7,-1,6,6,8,1,-6,-8,1,6,-6,-9,8,1,-10,-2,-6,-7,-6,4,-6,1,9,5,-5,-3,-9,1,-10,3,-1,-10,-5,1,-7,-7,-9,9,2,-7,-6,-7,3,-2,10,-7,-10,2,-2,-9,10,-4,-8,7,6,4,-6,-8,-1,-6,-6,6,7,-1,2,8,10,9,6,8,1,5,-5,8,1,-10,6,3,3,2,8,7,5,-7,-3,-2,-7,4,10,-9,-6,10,-5,5,10,3,-1,-7,-6,5,7,6,4,5,1,-5,-3,1,9,-5,-5,-7,9,-3,6,4,5,9,-9,-5,8,-7,6,-10,4,-4,-4,-5,2,-7,8,-6,-3,-4,7,1,9,10,-6,10,6,10,4,-4,-5,-7,-4,6,7,-10,-1,-2,10,6,2,7,10,1,-3,10,-6,1,-1,-7,-10,5,-7,2,8,-5,-5,-2,8,-1,-8,10,-10,-4,-1,1,8,-3,-2,-2,4,-5,-10,6,-2,-10,7,-4,3,10,-9,-5,9,-1,2,3,1,-7,-7,-8,9,7,9,3,-1,4,-5,8,7,-5,5,7,8,-8,4,-1,-5,8,-4,-4,5,-7,-8,-6,-6,-4,-1,-10,2,3,5,10,6,6,9,7,9,-6,-10,-2,5,9,6,6,-9,-5,-7,-6,4,-5,3,7,-5,-1,-7,-1,-8,8,-2,-3,5,5,4,7,3,-1,1,10,-4,10,3,-4,4,6,-8,6,8,7,5,2,-5,6,-4,1,5,-7,-5,-9,3,-2,6,-6,1,8,9,-4,4,10,6,4,-5,8,-4,-6,4,-9,9,-5,-1,6,3,-4,-10,7,-6,-7,-3,-10,4,3,-7,8,-10,-6,-4,-10,-2,7,7,-8,-4,5,-2,6,2,-5,2,4,-4,2,1,-8,4,-5,-7,5,9,-3,-6,8,8,8,-5,-3,-3,9,-7,-8,-10,4,-7,-3,3,-9,4,-9,-1,4,9,4,-2,-7,10,2,10,9,8,-6,-7,10,-4,-6,7,-10,-7,10,9,-10,5,-1,9,4,4,-8,7,-4,10,8,10,-6,4,6,-5,4,-8,7,-7,-7,-1,3,5,-10,9,-2,6,4,6,-7,8,-5,8,-4,-2,-5,-5,10,-8,-7,-8,6,1,-8,-1,9,8,-6,5,1,-10,-10,-7,-9,3,-3,-6,-9,-8,3,-1,9,-6,6,-4,9,-5,10,-1,8,4,-9,8,-7,-2,-6,-3,-4,9,-10,-7,8,10,-4,9,-7,3,5,-3,-10,5,9,2,-8,-3,5,-7,-2,2,-8,-9,-6,-2,-4,5,9,9,-9,3,-3,6,-6,10,10,5,-5,-4,7,-3,-10,-2,-10,10,1,9,-10,1,-7,-6,-6,-4,7,3,-5,-2,5,-7,6,-6,-1,-2,-9,-8,5,1,7,2,5,-6,2,-7,-4,3,2,-9,-4,3,-6,-8,-7,2,-6,5,-2,4,-1,-10,-5,-4,-2,-1,6,2,7,2,-10,-5,1,-10,3,6,6,8,8,-10,5,-9,-5,2,2,3,8,-2,10,-1,-7,6,2,-5,-3,3,6,10,4,3,-6,9,6,3,3,-8,3,-4,-5,-5,3,10,-1,-3,2,2,2,-2,-3,6,-10,-8,8,8,-2,4,3,7,4,-1,-5,6,6,-8,6,-9,-8,-9,-1,-10,2,-8,-5,10,-6,10,6,9,-6,5,10,-8,10,-5,-6,2,6,-2,-9,-2,3,-4,-8,5,1,5,1,-10,-3,-10,9,-5,-5,9,9,-7,-5,-5,6,-8,7,8,9,1,-4,-10,-6,-1,-4,-3,2,-7,-10,10,10,3,-1,9,7,-1,2,6,-8,7,7,-5,1,-6,2,-7,3,-4,-8,-6,5,-10,1,-5,2,1,5,8,7,6,-1,-4,2,-3,-2,-7,-8,-4,-2,-2,-4,-6,8,-4,10,-4,1,-7,7,5,-1,-6,1,2,10,10,4,4,1,-6,-6,-4,-8,3,-3,3,-1,4,1,-7,-9,-7,-2,6,-9,-6,3,-5,1,6,-4,-9,-10,-9,1,3,3,-5,-3,10,-3,8,-6,-7,-10,-2,-4,1,6,-6,-8,-6,-9,7,2,-3,-2,1,5,-5,-4,9,-10,3,-2,4,6,-10,3,-6,-3,-1,1,4,-1,10,8,3,-10,7,-5,-10,4,-7,-7,1,-5,6,-4,3,1,-3,3,-10,-4,2,9,4,4,-10,8,1,-6,1,-1,-9,8,-5,10,3,-4,7,7,-9,-3,-1,4,4,3,2,-2,8,3,-10,-9,-8,7,8,-5,6,8,10,-1,2,10,8,4,-3,-7,9,7,9,-1,10,4,5,-3,-3,-7,-6,10,-10,-10,-1,-7,3,8,-8,10,6,-1,-7,-3,-9,-5,1,1,-10,-6,7,3,-5,-3,1,-10,7,-7,-6,-5,3,1,7,-7,10,10,-7,9,-6,-7,-6,-4,-8,7,1,10,4,-10,-3,8,2,-1,2,3,2,3,-6,-1,7,-10,-2,2,4,-6,9,-10,-3,10,-1,-3,4,1,4,8,-1,-10,1,-8,-4,-1,8,5,-2,-7,9,-8,-8,5,-2,-5,-3,6,9,-8,6], dtype = "int32")#candidate|8440|(2520,)|const|int32
call_8439 = func_1569_call(relay.reshape(const_8440.astype('int32'), [15, 14, 12]), relay.reshape(const_8440.astype('int32'), [15, 14, 12]), )
call_8441 = func_1569_call(relay.reshape(const_8440.astype('int32'), [15, 14, 12]), relay.reshape(const_8440.astype('int32'), [15, 14, 12]), )
output = relay.Tuple([uop_8395,call_8403,const_8404,const_8405,call_8407,const_8408,call_8411,const_8412,call_8439,const_8440,])
output2 = relay.Tuple([uop_8395,call_8406,const_8404,const_8405,call_8409,const_8408,call_8413,const_8412,call_8441,const_8440,])
func_8446 = relay.Function([var_8394,], output)
mod['func_8446'] = func_8446
mod = relay.transform.InferType()(mod)
var_8447 = relay.var("var_8447", dtype = "float64", shape = (10, 12, 6))#candidate|8447|(10, 12, 6)|var|float64
output = func_8446(var_8447)
func_8448 = relay.Function([var_8447], output)
mutated_mod['func_8448'] = func_8448
mutated_mod = relay.transform.InferType()(mutated_mod)
func_8224_call = mod.get_global_var('func_8224')
func_8225_call = mutated_mod.get_global_var('func_8225')
call_8521 = relay.TupleGetItem(func_8224_call(), 0)
call_8522 = relay.TupleGetItem(func_8225_call(), 0)
output = call_8521
output2 = call_8522
func_8524 = relay.Function([], output)
mod['func_8524'] = func_8524
mod = relay.transform.InferType()(mod)
mutated_mod['func_8524'] = func_8524
mutated_mod = relay.transform.InferType()(mutated_mod)
func_8524_call = mutated_mod.get_global_var('func_8524')
call_8525 = func_8524_call()
output = call_8525
func_8526 = relay.Function([], output)
mutated_mod['func_8526'] = func_8526
mutated_mod = relay.transform.InferType()(mutated_mod)
func_8524_call = mod.get_global_var('func_8524')
func_8526_call = mutated_mod.get_global_var('func_8526')
call_8558 = func_8524_call()
call_8559 = func_8524_call()
func_1327_call = mod.get_global_var('func_1327')
func_1330_call = mutated_mod.get_global_var('func_1330')
var_8573 = relay.var("var_8573", dtype = "uint64", shape = (1, 900))#candidate|8573|(1, 900)|var|uint64
call_8572 = relay.TupleGetItem(func_1327_call(relay.reshape(var_8573.astype('uint64'), [10, 9, 10]), relay.reshape(var_8573.astype('uint64'), [10, 9, 10]), ), 2)
call_8574 = relay.TupleGetItem(func_1330_call(relay.reshape(var_8573.astype('uint64'), [10, 9, 10]), relay.reshape(var_8573.astype('uint64'), [10, 9, 10]), ), 2)
func_7206_call = mod.get_global_var('func_7206')
func_7208_call = mutated_mod.get_global_var('func_7208')
const_8587 = relay.const([9,6,4,3,-8,9,-4,10,5,-6,-6,4,-3,10,-4,-2,10,7,10,3,2,-5,-4,-4,2,-3,9,10,4,7,-1,-1,7,-5,5,-6,-10,3,-6,5,7,6,-5,-7,6,-7,2,-8,-3,7,-2,6,4,8,-8,-9,10,10,-2,4,-2,-5,-6,-5,-7,-10,-5,-3,-6,10,3,-9,-5,-8,-6,4,-3,4,5,2,-4,-3,9,-10,8,-8,-9,3,6,10,-8,-1,7,-2,-7,-4,-9,1,-4,2,1,2,9,-4,1,-10,-2,9,8,-10,8,-7,-5,-4,7,3,-9,8,2,-4,9,1,-7,-1,-4,10,-6,-10,5,-2,-3,2,9,2,5,-4,2,-6,-6,1,-7,-3,-10,-6,6,-9,10,-10,1,-10,-8,1,-10,6,-3,7,2,2,2,8,5,-6,9,6,8,8,-2,5,-7,7,9,-9,3,-2,-1,-2,8,-3,-6,8,-7,-9,7,-1,4,-4,6,-4,9,4,6,8,4,2,-2,-3,9,10,-5,-10,-2,1,-2,-5,-1,-2,-6,3,-2,1,5,5,-5,10,7,-8,6,5,2,-8,-2,2,-9,-8,-7,-6,-5,6,7,10,6,3,7,10,9,-4,8,-8,8,9,9,8,8,1,-10,9,9,9,-1,5,5,-2,-5,2,-8,-9,-8,-8,4,4,-4,-1,-7,1,7,8,7,-7,-10,-6,-1,5,5,-6,7,-3,4,-4,-4,9,-10,5,8,-10,2,7,4,-1,-7,5,8,3,-2,7,1,-7,-4,10,4,-8,-7,-8,-9,9,-7,-8,-4,10,-9,4,-2,10,-3,8,10,6,3,8,4,-7,-2,9,-7,4,6,3,8,4,4,1,-7,1,10,1,-7,-6,-3,-6,3,-6,7,7,-5,-7,2,-4,4,1,7,7,-2,4,5,8,2,-7,3,4,-4,6,-10,8,-8,-5,5,-10,4,-4,5,-9,6,-6,9,-7,-3,-10,5,-5,1,7,-4,2,-2,9,8,4,3,1,10,-4,2,5,3,2,2,9,8,-5,8,6,3,8,-10,5,-10,4,-4,1,1,-1,-3,-2,-2,9,-3,3,-5,-2,-3,-6,8,3,2,-9,-7,9,-3,-1,8,-4,-5,6,10,-6,7,-4,-5,-8,2,2,-10,-9,10,7,-10,-8,7,-8,6,-10,9,9,-2,10,4,5,-1,-6,-8,8,5,-4,3,-1,-7,3,6,9,7,-6,-1,5,-7,2,8,-3,9,-7,-1,-3,-1,4,8,-7,-3,6,-4,-6,3,-6,10,-4,-1,3,-9,-2,-5,-8,-2,-10,8,6,6,-2,-10,2,2,-10,6,4,-2,-8,5,-1,-2,1,-6,1,1,-3,-6,2,10,8,5,-5,-2,-3,-10,-3,5,4,3,3,3,-4,10,4,5,-10,-7,7,-8,6,7,2,-5,1,-6,-1,-10,-7,-10,4,2,-6,-7,-8,-5,2,-4,-2,-5,-7,7,1,1,-10,6,6,8,-8,-7,9,-1,-2,9,5,6,4,-8,-5,-2,1,10,7,1,10,-4,-10,2,-1,7,-5,-8,10,-4,8,-9,4,-8,5,6,9,-6,6,-2,-9,5,-4,2,10,7,2,6,-5,-8,-6,-6,6,-6,2,-1,1,-2,8,8,-10,3,3,9,-8,8,1,10,8,2,-8,-8,7,-3,-1,-1,8,-2,-7,-6,-8,-8,-8,8,6,5,-1,10,-2,4,-6,6,-3,2,9,-3,-4,-6,1,2,4,-9,10,-4,4,10,3,3,-4,5,5,-10,1,5,2,7,-5,-10,8,1,-1,4,-7,-1,-2,-4,-4,-9,-4,7,2,-1,-2,5,-8,6,7,5,-6,5,-5,-6,5,6,-10,5,-8,-2,-9,4,3,-7,1,4,-10,-5,8,-4,9,-10,4,4,2,-4,-2,8,-8,8,9,-7,3,-4,5,3,9,-4,1,-4,-3,5,7,-1,-10,-4,-2,-8,3,5,-1,6,2,-10,10,-7,2,-10,-5,2,1,4,7,6,3,1,-10,1,-7,-6,-5,-9,4,6,10,5,-3,5,-1,1,-4,10,-9,7,-4,-2,7,7,-3,-1,10,6,-6,-5,-4,3,-1,2,-5,-6,4,-9,-1,2,-9,9,-2,-5,8,7,8,-9,-4,9,-2,10,4,8,-6,-9,5,6,-5,-8,-1,-6,-7,-8,-8,2,-1,-7,-2,10,5,-4,-1,10,1,10,2,-9,-1,-10,3,8,-4,10,-1,-5,2,-9,-2,-9,-8,5,3,9,-2,-2,2,-10,8,-2,10,5,9,-3,4,3,8,-4,-3,-6,5,-1,-1,-3,1,-8,-5,1,9,-4,-5,-7,-7,6,5,7,4,-6,1,4,7,2,-6,-5,-8,-8,-5,8,7,4,-7,-3,-10,-6,10,-4,-3,-10,-1,4,3,-4,6,-2,5,-4,-6,-3,-7,9,2,-6,-10,-6,1,-2,-1,-5,-8,1,-3,-8,-3,7,-4,7,8,1,-2,-8,-8,-9,7,-7,1,10,2,-4,1,-4,8,10,-7,-3,-9,-1,-1,7,4,-5,-9,-10,-7,5,8,2,3,1,5,8,-6,3,1,9,2,-4,-1,4,-1,-7,-8,-2,-2,-10,8,5,9,3,-7,-9,8,-4,8,-8,-6,-5,-3,5,1,-4,-5,4,6,6,-2,4,6,9,-5,2,-10,-6,-7,8,-6,8,-1,5,-2,1,-4,1,5,6,5,-9,-7,9,8,4,10,-5,-4,10,-3,-9,-8,-9,-10,-10,4,-1,-6,7,-8,8,-2,-10,-7,-4,1,-7,4,9,10,-9,1,-7,10,1,-2,-7,5,-3,-8,-3,10,10,-6,8,-10,-2,8,-8,-1,8,1,10,-3,-8,-7,1,-1,-1,-10,2,-7,1,-4,-6,9,10,7,5,2,2,4,-9,6,9,9,6,-8,1,-7,8,-1,7,10,-10,5,4,-7,2,2,-1,-7,-7,5,8,7,9,6,-5,-8,-9,-7,4,-7,-1,-10,-10,-1,-1,-6,-10,4,-10,7,-9,8,-10,2,-3,2,5,-8,8,-3,8,9,6,-9,-6,-10,3,-2,7,9,-10,-5,3,-4,-1,-2,-10,-6,4,1,-2,-4,10,-10,-9,-6,9,8,3,5,-8,-4,7,3,7,-3,4,6,3,-1,-4,-3,-10,-7,10,-8,8,-7,2,-6,5,-10,7,4,-1,-2,6,9,6,-9,-7,-7,9,-10,5,1,-7,10,6,-4,3,-3,-3,4,-10,6,-10,-4,6,-1,4,-2,5,-5,-7,10,-6,6,-7,9,-5,-7,-9,-5,7,-7,-2,-1,8,-7,-8,-5,-10,-6,-3,-6,-1,3,-4,-4,-6,3,9,-4,2,3,8,4,9,5,-4,-2,4,4,6,8,-10,-2,4,7,-7,6,8,-3,10,1,-9,-9,-10,10,5,-10,10,6,-7,-2,3,2,-7,-10,-5,1,6,8,4,-2,7,-6,3,2,4,8,1,-1,-5,7,4,5,-9,3,-10,-4,4,-3,-3,9,-9,7,7,10,8,3,7,-1,-10,2,7,6,-8,-10,-3,8,-8,-4,4,-8,-3,-6,10,7,-10,-1,-6,2,-5,5,-3,-2,2,9,-1,-8,-9,-7,2,10,-4,10,-7,4,-7,4,3,-3,3,1,-1,10,-5,-1,-10,10,-2,-4,5,5,-6,-1,6,-6,-8,-4,-5,-8,-1,5,10,7,-6,-2,-8,2,-7,-5,-9,-9,5,5,-10,-8,4,4,1,-7,-2,-9,-8,-6,-3,6,-1,10,-10,6,10,3,-1,7,10,-10,-2,5,-9,-5,-2,-6,-7,9,-1,-9,10,6,-9,-5,6,-1,4,10,-7,-6,5,-1,6,2,-6,-2,-1,10,-1,8,8,-10,3,6,7,8,3,6,1,9,-9,4,9,-1,-6,-2,8,7,-1,3,4,-2,3,8,-8,-9,-8,-8,-6,-9,-7,9,2,7,8,3,-1,10,-5,-8,-5,-9,-2,2,-3,2,-4,5,6,9,-4,-7,7,9,-6,-4,-5,-4,7,5,-6,2,-10,6,-1,-2,-9,-1,6,10,-8,3,-5,-10,-2,4,6,10,5,1,-2,2,-10,8,5,-10,-2,6,-9,-10,5,-8,10,-6,3,4,8,5,-10,-8,2,-8,10,-10,4,9,-5,-2,-3,1,-6,1,2,-6,8,-5,-1,-5,-9,-1,6,-2,-6,-6,-5,-5,2,8,2,6,7,2,-6,-10,-1,-8,2,-6,6,-7,8,3,8,6,5,-9,3,10,-8,2,3,6,2,4,-3,1,1,-3,-7,-8,-9,5,-10,-1,7,-10,5,-8,8,-7,10,-2,5,-1,-4,-7,10,7,8,10,3,-6,4,5,5,-4,-1,-8,-4,9,10,3,7,-9,7,-10,7,-9,1,4,-8,-1,-7,-7,7,-8,-1,6,10,5,-3,10,-3,3,-4,2,-5,3,1,2,-8,-7,-3,1,6,-3,-10,-1,9,-9,-10,7,3,9,1,-3,4,-10,-3,-2,-4,10,-5,1,4,9,10,-1,-7,8,-4,7,-1,6,-5,-4,3,-6,-6,4,-6,6,-10,-10,7,-3,1,10,-6,-9,-5,1,-7,-4,-4,5,-3,6,7,-8,-6,-5,2,2,-2,-8,-3,2,-8,5,9,9,-10,-5,3,-1,-6,-9,-2,6,-3,10,7,-8,-2,-6,2,1,2,-8,1,5,4,8,6,-1,-10,5,-6,-2,-5,-7,4,8,8,-3,3,-6,4,6,-8,1,9,7,10,-4,-8,3,-3,-9,6,9,10,10,-9,-5,3,-7,5,-2,3,-1,8,-4,4,-1,-5,-4,6,-8,10,10,-3,-10,10,3,-7,-8,-8,-6,-6,-7,-7,-8,4,-6,1,-2,4,3,3,1,2,-4,2,5,9,10,4,9,-6,-4,4,3,9,5,-4,1,4,6,-7,5,-4,4,-5,-6,9,-9,-10,-2,-10,1,1,-2,9,-4,-1,-4,6,-3,-2,-3,2,5,-6,-9,4,-2,3,-2,2,-1,-5,-7,5,-1,8,-10,-7,2,-2,2,10,10,10,6,-8,-4,-3,3,1,-5,-1,9,9,-3,-4,-4,-1,-10,8,2,4,-8,-6,-3,6,-6,-2,-5,8,-2,3,7,-2,-4,2,6,-3,-10,-5,6,2,10,-8,-7,-5,7,6,-3,-10,9,-4,-7,-7,-5,-2,8,4,-10,-7,9,9,-1,1,-3,2,4,-7,4,-7,-8,2,3,-8,-10,-3,8,-6,-4,2,1,-9,1,-5,-10,3,-1,8,5,-8,-10,4,2,-6,1,6,-3,9,1,-8,-8,2,10,-5,5,-7,-6,-2,5,5,-5,7,5,1,-2,8,-2,9,-10,4,-8,10,-4,-2,-8,4,-7,-1,-9,-8,-1,-8,9,-6,2,4,-3,-3,7,-5,-2,8,1,2,2,-10,-8,-8,8,8,4,-9,8,-3,1,10,10,-3,-9,-3,-6,-4,3,-1,-5,-10,-3,-5,5,6,9,-9,5,-10,-8,-3,-5,-7,8,9,9,2,10,-2,7,-1,3,-5,-2,3,7,-2,-3,-3,1,6,-3,1,-8,-8,-1,1,-9,-2,-9,-10,-1,1,5,6,-7,-7,1,-4,3,3,-3,7,1,4,4,-8,-8,8,-2,1,-7,10,8,-10,-7,6,7,1,-5,-8,1,-4,5,-4,8,-8,6,6,1,-9,-9,10,10,-6,8,-4,1,8,3,5,-9,-8,-3,1,10,-4,-6,-7,-8,9,-6,-3,-2,5,2,9,-4,-8,-3,1,-10,-4,-9,-1,3,-3,5,-8,-8,4,-2,3,2,-3,10,-8,-10,5,3,-8,-7,5,-8,1,-5,-8,-10,5,2,-6,-3,-3,5,2,-5,4,1,6,-2,5,-5,-6,-2,8,-8,-6,-9,4,8,-1,8,7,-5,-9,3,4,-7,-3,-1,4,-5,2,1,7,-6,6,-6,-5,7,7,10,-8,-4,-5,-3,-4,-9,-2,4,4,2,4,-3,8,-3,-2,10,9,10,-7,-4,1,7,6,7,-1,-9,6,4,-4,2,-1,5,-4,-5,-7,-2,-4,6,-2,1,-1,-8,2,4,10,-1,8,-2,-10,3,-8,8,6,2,-6,-1,5,5,-3,5,-6,-4,-2,-7,3,-10,7,-1,-9,-2,7,-3,5,2,-8,9,1,8,-8,-8,7,2,-5,8,9,10,-3,10,2,6,-7,3,8,3,-8,-9,-8,-10,5,8,8,-9,2,9,-9,3,-9,6,-10,5,2,3,-4,-5,-1,-2,3,-9,1,7,4,8,6,3,4,4,-2,6,-1,7,-3,10,2,-9,9,5,-7,1,10,9,-1,-10,9,-9,4,-2,-6,-3,2,-1,1,8,-2,9,-10,6,1,-4,-9,-1,-2,-1,5,-7,9,10,6,6,-5,-10,5,-8,-9,7,9,2,-2,10,-9,6,4,8,4,-8,10,7,1,2,-10,-9,-8,10,3,7,6,-2,9,-10,5,-5,-5,2,8,7,6,8,-6,6,-10,-3,-6,9,-8,-2,7,2,8,8,-10,5,-1,-2,5,6,10,-4,-8,-4,1,1,-3,-10,7,-8,-2,-4,8,-8,1,6,5,10,4,8,-1,-3,-2,-5,8,-5,-6,3,-7,5,-7,1,-5,-3,-4,2,2,10,-6,-2], dtype = "int32")#candidate|8587|(2520,)|const|int32
call_8586 = relay.TupleGetItem(func_7206_call(relay.reshape(const_8587.astype('int32'), [2520, 1])), 4)
call_8588 = relay.TupleGetItem(func_7208_call(relay.reshape(const_8587.astype('int32'), [2520, 1])), 4)
func_297_call = mod.get_global_var('func_297')
func_301_call = mutated_mod.get_global_var('func_301')
var_8592 = relay.var("var_8592", dtype = "float64", shape = (1200,))#candidate|8592|(1200,)|var|float64
call_8591 = relay.TupleGetItem(func_297_call(relay.reshape(var_8592.astype('float64'), [10, 12, 10]), relay.reshape(var_8592.astype('float64'), [10, 12, 10]), ), 0)
call_8593 = relay.TupleGetItem(func_301_call(relay.reshape(var_8592.astype('float64'), [10, 12, 10]), relay.reshape(var_8592.astype('float64'), [10, 12, 10]), ), 0)
output = relay.Tuple([call_8558,call_8572,var_8573,call_8586,const_8587,call_8591,var_8592,])
output2 = relay.Tuple([call_8559,call_8574,var_8573,call_8588,const_8587,call_8593,var_8592,])
func_8595 = relay.Function([var_8573,var_8592,], output)
mod['func_8595'] = func_8595
mod = relay.transform.InferType()(mod)
var_8596 = relay.var("var_8596", dtype = "uint64", shape = (1, 900))#candidate|8596|(1, 900)|var|uint64
var_8597 = relay.var("var_8597", dtype = "float64", shape = (1200,))#candidate|8597|(1200,)|var|float64
output = func_8595(var_8596,var_8597,)
func_8598 = relay.Function([var_8596,var_8597,], output)
mutated_mod['func_8598'] = func_8598
mutated_mod = relay.transform.InferType()(mutated_mod)
func_8224_call = mod.get_global_var('func_8224')
func_8225_call = mutated_mod.get_global_var('func_8225')
call_8634 = relay.TupleGetItem(func_8224_call(), 0)
call_8635 = relay.TupleGetItem(func_8225_call(), 0)
var_8656 = relay.var("var_8656", dtype = "float64", shape = (10, 8, 3))#candidate|8656|(10, 8, 3)|var|float64
bop_8657 = relay.bitwise_and(call_8634.astype('uint16'), relay.reshape(var_8656.astype('uint16'), relay.shape_of(call_8634))) # shape=(10, 8, 3)
bop_8660 = relay.bitwise_and(call_8635.astype('uint16'), relay.reshape(var_8656.astype('uint16'), relay.shape_of(call_8635))) # shape=(10, 8, 3)
output = bop_8657
output2 = bop_8660
func_8668 = relay.Function([var_8656,], output)
mod['func_8668'] = func_8668
mod = relay.transform.InferType()(mod)
mutated_mod['func_8668'] = func_8668
mutated_mod = relay.transform.InferType()(mutated_mod)
var_8669 = relay.var("var_8669", dtype = "float64", shape = (10, 8, 3))#candidate|8669|(10, 8, 3)|var|float64
func_8668_call = mutated_mod.get_global_var('func_8668')
call_8670 = func_8668_call(var_8669)
output = call_8670
func_8671 = relay.Function([var_8669], output)
mutated_mod['func_8671'] = func_8671
mutated_mod = relay.transform.InferType()(mutated_mod)
var_8676 = relay.var("var_8676", dtype = "float32", shape = (8, 5, 8))#candidate|8676|(8, 5, 8)|var|float32
uop_8677 = relay.erf(var_8676.astype('float32')) # shape=(8, 5, 8)
uop_8680 = relay.cos(var_8676.astype('float32')) # shape=(8, 5, 8)
uop_8691 = relay.cosh(uop_8677.astype('float32')) # shape=(8, 5, 8)
output = relay.Tuple([uop_8680,uop_8691,])
output2 = relay.Tuple([uop_8680,uop_8691,])
func_8698 = relay.Function([var_8676,], output)
mod['func_8698'] = func_8698
mod = relay.transform.InferType()(mod)
mutated_mod['func_8698'] = func_8698
mutated_mod = relay.transform.InferType()(mutated_mod)
var_8699 = relay.var("var_8699", dtype = "float32", shape = (8, 5, 8))#candidate|8699|(8, 5, 8)|var|float32
func_8698_call = mutated_mod.get_global_var('func_8698')
call_8700 = func_8698_call(var_8699)
output = call_8700
func_8701 = relay.Function([var_8699], output)
mutated_mod['func_8701'] = func_8701
mutated_mod = relay.transform.InferType()(mutated_mod)
func_8282_call = mod.get_global_var('func_8282')
func_8283_call = mutated_mod.get_global_var('func_8283')
call_8713 = func_8282_call()
call_8714 = func_8282_call()
output = relay.Tuple([call_8713,])
output2 = relay.Tuple([call_8714,])
func_8717 = relay.Function([], output)
mod['func_8717'] = func_8717
mod = relay.transform.InferType()(mod)
output = func_8717()
func_8718 = relay.Function([], output)
mutated_mod['func_8718'] = func_8718
mutated_mod = relay.transform.InferType()(mutated_mod)
func_8206_call = mod.get_global_var('func_8206')
func_8207_call = mutated_mod.get_global_var('func_8207')
call_8722 = func_8206_call()
call_8723 = func_8206_call()
uop_8727 = relay.rsqrt(call_8722.astype('float64')) # shape=(10, 8, 3)
uop_8729 = relay.rsqrt(call_8723.astype('float64')) # shape=(10, 8, 3)
output = uop_8727
output2 = uop_8729
func_8730 = relay.Function([], output)
mod['func_8730'] = func_8730
mod = relay.transform.InferType()(mod)
output = func_8730()
func_8731 = relay.Function([], output)
mutated_mod['func_8731'] = func_8731
mutated_mod = relay.transform.InferType()(mutated_mod)
func_8282_call = mod.get_global_var('func_8282')
func_8283_call = mutated_mod.get_global_var('func_8283')
call_8762 = func_8282_call()
call_8763 = func_8282_call()
output = relay.Tuple([call_8762,])
output2 = relay.Tuple([call_8763,])
func_8773 = relay.Function([], output)
mod['func_8773'] = func_8773
mod = relay.transform.InferType()(mod)
mutated_mod['func_8773'] = func_8773
mutated_mod = relay.transform.InferType()(mutated_mod)
func_8773_call = mutated_mod.get_global_var('func_8773')
call_8774 = func_8773_call()
output = call_8774
func_8775 = relay.Function([], output)
mutated_mod['func_8775'] = func_8775
mutated_mod = relay.transform.InferType()(mutated_mod)
func_8051_call = mod.get_global_var('func_8051')
func_8053_call = mutated_mod.get_global_var('func_8053')
call_8831 = relay.TupleGetItem(func_8051_call(), 0)
call_8832 = relay.TupleGetItem(func_8053_call(), 0)
output = call_8831
output2 = call_8832
func_8843 = relay.Function([], output)
mod['func_8843'] = func_8843
mod = relay.transform.InferType()(mod)
output = func_8843()
func_8844 = relay.Function([], output)
mutated_mod['func_8844'] = func_8844
mutated_mod = relay.transform.InferType()(mutated_mod)
func_8730_call = mod.get_global_var('func_8730')
func_8731_call = mutated_mod.get_global_var('func_8731')
call_8980 = func_8730_call()
call_8981 = func_8730_call()
output = call_8980
output2 = call_8981
func_8982 = relay.Function([], output)
mod['func_8982'] = func_8982
mod = relay.transform.InferType()(mod)
output = func_8982()
func_8983 = relay.Function([], output)
mutated_mod['func_8983'] = func_8983
mutated_mod = relay.transform.InferType()(mutated_mod)
func_8282_call = mod.get_global_var('func_8282')
func_8283_call = mutated_mod.get_global_var('func_8283')
call_8987 = func_8282_call()
call_8988 = func_8282_call()
output = relay.Tuple([call_8987,])
output2 = relay.Tuple([call_8988,])
func_9008 = relay.Function([], output)
mod['func_9008'] = func_9008
mod = relay.transform.InferType()(mod)
mutated_mod['func_9008'] = func_9008
mutated_mod = relay.transform.InferType()(mutated_mod)
func_9008_call = mutated_mod.get_global_var('func_9008')
call_9009 = func_9008_call()
output = call_9009
func_9010 = relay.Function([], output)
mutated_mod['func_9010'] = func_9010
mutated_mod = relay.transform.InferType()(mutated_mod)
func_8206_call = mod.get_global_var('func_8206')
func_8207_call = mutated_mod.get_global_var('func_8207')
call_9167 = func_8206_call()
call_9168 = func_8206_call()
output = relay.Tuple([call_9167,])
output2 = relay.Tuple([call_9168,])
func_9177 = relay.Function([], output)
mod['func_9177'] = func_9177
mod = relay.transform.InferType()(mod)
mutated_mod['func_9177'] = func_9177
mutated_mod = relay.transform.InferType()(mutated_mod)
func_9177_call = mutated_mod.get_global_var('func_9177')
call_9178 = func_9177_call()
output = call_9178
func_9179 = relay.Function([], output)
mutated_mod['func_9179'] = func_9179
mutated_mod = relay.transform.InferType()(mutated_mod)
func_9008_call = mod.get_global_var('func_9008')
func_9010_call = mutated_mod.get_global_var('func_9010')
call_9267 = relay.TupleGetItem(func_9008_call(), 0)
call_9268 = relay.TupleGetItem(func_9010_call(), 0)
uop_9295 = relay.acos(call_9267.astype('float32')) # shape=(10, 8, 3)
uop_9297 = relay.acos(call_9268.astype('float32')) # shape=(10, 8, 3)
func_8224_call = mod.get_global_var('func_8224')
func_8225_call = mutated_mod.get_global_var('func_8225')
call_9320 = relay.TupleGetItem(func_8224_call(), 0)
call_9321 = relay.TupleGetItem(func_8225_call(), 0)
func_8051_call = mod.get_global_var('func_8051')
func_8053_call = mutated_mod.get_global_var('func_8053')
call_9327 = relay.TupleGetItem(func_8051_call(), 0)
call_9328 = relay.TupleGetItem(func_8053_call(), 0)
uop_9353 = relay.sin(uop_9295.astype('float64')) # shape=(10, 8, 3)
uop_9355 = relay.sin(uop_9297.astype('float64')) # shape=(10, 8, 3)
output = relay.Tuple([call_9320,call_9327,uop_9353,])
output2 = relay.Tuple([call_9321,call_9328,uop_9355,])
func_9358 = relay.Function([], output)
mod['func_9358'] = func_9358
mod = relay.transform.InferType()(mod)
mutated_mod['func_9358'] = func_9358
mutated_mod = relay.transform.InferType()(mutated_mod)
func_9358_call = mutated_mod.get_global_var('func_9358')
call_9359 = func_9358_call()
output = call_9359
func_9360 = relay.Function([], output)
mutated_mod['func_9360'] = func_9360
mutated_mod = relay.transform.InferType()(mutated_mod)
func_9008_call = mod.get_global_var('func_9008')
func_9010_call = mutated_mod.get_global_var('func_9010')
call_9393 = relay.TupleGetItem(func_9008_call(), 0)
call_9394 = relay.TupleGetItem(func_9010_call(), 0)
func_8843_call = mod.get_global_var('func_8843')
func_8844_call = mutated_mod.get_global_var('func_8844')
call_9400 = func_8843_call()
call_9401 = func_8843_call()
bop_9404 = relay.equal(call_9393.astype('bool'), relay.reshape(call_9400.astype('bool'), relay.shape_of(call_9393))) # shape=(10, 8, 3)
bop_9407 = relay.equal(call_9394.astype('bool'), relay.reshape(call_9401.astype('bool'), relay.shape_of(call_9394))) # shape=(10, 8, 3)
func_6369_call = mod.get_global_var('func_6369')
func_6371_call = mutated_mod.get_global_var('func_6371')
const_9420 = relay.const([[-9.514541,7.048819,4.361740,3.177712],[0.739305,6.290933,9.625911,-6.067820],[-6.123575,9.336392,4.401351,-9.083791],[8.857886,-2.897922,9.332977,7.262425],[-9.133636,-3.776700,-5.556253,7.093451],[-2.066083,-5.800722,1.527186,-9.353730],[2.017083,4.599506,-7.243032,1.338183],[-1.999105,0.912685,-7.408435,8.024931],[5.919899,-6.288449,8.263574,-4.970686],[-1.346603,4.585093,0.677484,-5.351867],[1.187888,-8.068034,1.879149,7.236959],[2.063005,9.347726,2.833240,-5.309028],[-5.120890,-1.457934,-2.707516,6.499531],[-6.832659,1.517673,-6.827298,-6.266373],[9.578209,9.074039,-5.408858,-1.940809],[8.560330,-6.931670,-2.390142,-9.074148],[1.124843,-0.174333,3.336283,4.028676],[-4.359408,6.247134,-2.149748,-5.490562],[-2.840352,-5.704242,-7.617668,-5.055148],[-0.350684,1.985500,6.746494,-5.154052],[-0.262986,7.732084,-2.106656,3.235756],[7.947673,-5.123431,-5.070211,8.278558],[-4.153492,-1.668583,6.160253,3.680099],[0.682690,-8.154543,-1.316395,9.823372],[-1.367128,-5.049067,1.456658,5.952825],[-4.606907,-4.227091,4.970477,-9.933704],[4.848942,-2.527824,4.073570,7.162376],[-9.670903,-4.033097,-8.121316,-9.176127]], dtype = "float64")#candidate|9420|(28, 4)|const|float64
call_9419 = func_6369_call(relay.reshape(const_9420.astype('float64'), [1, 8, 14]))
call_9421 = func_6369_call(relay.reshape(const_9420.astype('float64'), [1, 8, 14]))
output = relay.Tuple([bop_9404,call_9419,const_9420,])
output2 = relay.Tuple([bop_9407,call_9421,const_9420,])
func_9424 = relay.Function([], output)
mod['func_9424'] = func_9424
mod = relay.transform.InferType()(mod)
output = func_9424()
func_9425 = relay.Function([], output)
mutated_mod['func_9425'] = func_9425
mutated_mod = relay.transform.InferType()(mutated_mod)
func_8843_call = mod.get_global_var('func_8843')
func_8844_call = mutated_mod.get_global_var('func_8844')
call_9444 = func_8843_call()
call_9445 = func_8843_call()
var_9450 = relay.var("var_9450", dtype = "float64", shape = (10, 8, 3))#candidate|9450|(10, 8, 3)|var|float64
bop_9451 = relay.power(call_9444.astype('float64'), relay.reshape(var_9450.astype('float64'), relay.shape_of(call_9444))) # shape=(10, 8, 3)
bop_9454 = relay.power(call_9445.astype('float64'), relay.reshape(var_9450.astype('float64'), relay.shape_of(call_9445))) # shape=(10, 8, 3)
output = bop_9451
output2 = bop_9454
func_9461 = relay.Function([var_9450,], output)
mod['func_9461'] = func_9461
mod = relay.transform.InferType()(mod)
var_9462 = relay.var("var_9462", dtype = "float64", shape = (10, 8, 3))#candidate|9462|(10, 8, 3)|var|float64
output = func_9461(var_9462)
func_9463 = relay.Function([var_9462], output)
mutated_mod['func_9463'] = func_9463
mutated_mod = relay.transform.InferType()(mutated_mod)
var_9491 = relay.var("var_9491", dtype = "float32", shape = (9, 8, 7))#candidate|9491|(9, 8, 7)|var|float32
uop_9492 = relay.asinh(var_9491.astype('float32')) # shape=(9, 8, 7)
func_8224_call = mod.get_global_var('func_8224')
func_8225_call = mutated_mod.get_global_var('func_8225')
call_9542 = relay.TupleGetItem(func_8224_call(), 0)
call_9543 = relay.TupleGetItem(func_8225_call(), 0)
func_8773_call = mod.get_global_var('func_8773')
func_8775_call = mutated_mod.get_global_var('func_8775')
call_9552 = relay.TupleGetItem(func_8773_call(), 0)
call_9553 = relay.TupleGetItem(func_8775_call(), 0)
output = relay.Tuple([uop_9492,call_9542,call_9552,])
output2 = relay.Tuple([uop_9492,call_9543,call_9553,])
func_9556 = relay.Function([var_9491,], output)
mod['func_9556'] = func_9556
mod = relay.transform.InferType()(mod)
var_9557 = relay.var("var_9557", dtype = "float32", shape = (9, 8, 7))#candidate|9557|(9, 8, 7)|var|float32
output = func_9556(var_9557)
func_9558 = relay.Function([var_9557], output)
mutated_mod['func_9558'] = func_9558
mutated_mod = relay.transform.InferType()(mutated_mod)
func_8524_call = mod.get_global_var('func_8524')
func_8526_call = mutated_mod.get_global_var('func_8526')
call_9597 = func_8524_call()
call_9598 = func_8524_call()
output = call_9597
output2 = call_9598
func_9616 = relay.Function([], output)
mod['func_9616'] = func_9616
mod = relay.transform.InferType()(mod)
mutated_mod['func_9616'] = func_9616
mutated_mod = relay.transform.InferType()(mutated_mod)
func_9616_call = mutated_mod.get_global_var('func_9616')
call_9617 = func_9616_call()
output = call_9617
func_9618 = relay.Function([], output)
mutated_mod['func_9618'] = func_9618
mutated_mod = relay.transform.InferType()(mutated_mod)
func_9177_call = mod.get_global_var('func_9177')
func_9179_call = mutated_mod.get_global_var('func_9179')
call_9640 = relay.TupleGetItem(func_9177_call(), 0)
call_9641 = relay.TupleGetItem(func_9179_call(), 0)
output = call_9640
output2 = call_9641
func_9648 = relay.Function([], output)
mod['func_9648'] = func_9648
mod = relay.transform.InferType()(mod)
mutated_mod['func_9648'] = func_9648
mutated_mod = relay.transform.InferType()(mutated_mod)
func_9648_call = mutated_mod.get_global_var('func_9648')
call_9649 = func_9648_call()
output = call_9649
func_9650 = relay.Function([], output)
mutated_mod['func_9650'] = func_9650
mutated_mod = relay.transform.InferType()(mutated_mod)
func_8224_call = mod.get_global_var('func_8224')
func_8225_call = mutated_mod.get_global_var('func_8225')
call_9706 = relay.TupleGetItem(func_8224_call(), 0)
call_9707 = relay.TupleGetItem(func_8225_call(), 0)
output = relay.Tuple([call_9706,])
output2 = relay.Tuple([call_9707,])
func_9710 = relay.Function([], output)
mod['func_9710'] = func_9710
mod = relay.transform.InferType()(mod)
output = func_9710()
func_9711 = relay.Function([], output)
mutated_mod['func_9711'] = func_9711
mutated_mod = relay.transform.InferType()(mutated_mod)
func_8224_call = mod.get_global_var('func_8224')
func_8225_call = mutated_mod.get_global_var('func_8225')
call_9748 = relay.TupleGetItem(func_8224_call(), 0)
call_9749 = relay.TupleGetItem(func_8225_call(), 0)
func_8730_call = mod.get_global_var('func_8730')
func_8731_call = mutated_mod.get_global_var('func_8731')
call_9754 = func_8730_call()
call_9755 = func_8730_call()
output = relay.Tuple([call_9748,call_9754,])
output2 = relay.Tuple([call_9749,call_9755,])
func_9757 = relay.Function([], output)
mod['func_9757'] = func_9757
mod = relay.transform.InferType()(mod)
mutated_mod['func_9757'] = func_9757
mutated_mod = relay.transform.InferType()(mutated_mod)
func_9757_call = mutated_mod.get_global_var('func_9757')
call_9758 = func_9757_call()
output = call_9758
func_9759 = relay.Function([], output)
mutated_mod['func_9759'] = func_9759
mutated_mod = relay.transform.InferType()(mutated_mod)
func_9757_call = mod.get_global_var('func_9757')
func_9759_call = mutated_mod.get_global_var('func_9759')
call_9774 = relay.TupleGetItem(func_9757_call(), 1)
call_9775 = relay.TupleGetItem(func_9759_call(), 1)
output = relay.Tuple([call_9774,])
output2 = relay.Tuple([call_9775,])
func_9785 = relay.Function([], output)
mod['func_9785'] = func_9785
mod = relay.transform.InferType()(mod)
output = func_9785()
func_9786 = relay.Function([], output)
mutated_mod['func_9786'] = func_9786
mutated_mod = relay.transform.InferType()(mutated_mod)
func_9757_call = mod.get_global_var('func_9757')
func_9759_call = mutated_mod.get_global_var('func_9759')
call_9822 = relay.TupleGetItem(func_9757_call(), 0)
call_9823 = relay.TupleGetItem(func_9759_call(), 0)
func_9177_call = mod.get_global_var('func_9177')
func_9179_call = mutated_mod.get_global_var('func_9179')
call_9842 = relay.TupleGetItem(func_9177_call(), 0)
call_9843 = relay.TupleGetItem(func_9179_call(), 0)
func_8051_call = mod.get_global_var('func_8051')
func_8053_call = mutated_mod.get_global_var('func_8053')
call_9854 = relay.TupleGetItem(func_8051_call(), 0)
call_9855 = relay.TupleGetItem(func_8053_call(), 0)
bop_9856 = relay.minimum(call_9854.astype('uint32'), relay.reshape(call_9822.astype('uint32'), relay.shape_of(call_9854))) # shape=(10, 8, 3)
bop_9859 = relay.minimum(call_9855.astype('uint32'), relay.reshape(call_9823.astype('uint32'), relay.shape_of(call_9855))) # shape=(10, 8, 3)
func_1697_call = mod.get_global_var('func_1697')
func_1701_call = mutated_mod.get_global_var('func_1701')
const_9862 = relay.const([5,6,10,-4,1,3,3,-2,1,-1,2,-2,-10,1,3,-9,7,4,3,6,-4,-10,7,7,5,-10,10,9,2,10,-1,6,6,3,9,-3,-8,-1,-6,-3,-8,9,7,-10,9,6,10,-6,-3,-6,-8,-7,-2,1,7,-9,9,7,-8,-6,-6,5,-6,4,9,4,-9,-6,-7,8,-3,3,7,-9,-6,9,5,9,4,3,-3,5,-5,-2,-1,10,-9,7,10,8,9,9,-3,7,2,-5,6,9,-2,-6,3,-7,7,-6,-8,-5,6,-2,2,10,-9,3,4,7,-4,1,8,-8,3,-4,-2,9,2,-9,-1,2,-4,5,6,-8,-4,-6,8,-7,-1,2,-1,5,2,-10,3,-5,7,-6,2,3,-2,10,6,9,-10,3,3,5,-2,-10,-8,-1,-3,-8,-1,-2,-2,1,2,5,2,-1,6,10,-2,-2,-3,7,-9,4,-8,3,1,-7,-7,-2,10,3,1,3,-4,-6,-7,-5,-10,8,-5,7,6,-8,-6,-1], dtype = "int64")#candidate|9862|(198,)|const|int64
var_9863 = relay.var("var_9863", dtype = "float32", shape = (420,))#candidate|9863|(420,)|var|float32
call_9861 = relay.TupleGetItem(func_1697_call(relay.reshape(const_9862.astype('int64'), [3, 11, 6]), relay.reshape(var_9863.astype('float32'), [5, 84]), ), 1)
call_9864 = relay.TupleGetItem(func_1701_call(relay.reshape(const_9862.astype('int64'), [3, 11, 6]), relay.reshape(var_9863.astype('float32'), [5, 84]), ), 1)
output = relay.Tuple([call_9842,bop_9856,call_9861,const_9862,var_9863,])
output2 = relay.Tuple([call_9843,bop_9859,call_9864,const_9862,var_9863,])
func_9866 = relay.Function([var_9863,], output)
mod['func_9866'] = func_9866
mod = relay.transform.InferType()(mod)
mutated_mod['func_9866'] = func_9866
mutated_mod = relay.transform.InferType()(mutated_mod)
var_9867 = relay.var("var_9867", dtype = "float32", shape = (420,))#candidate|9867|(420,)|var|float32
func_9866_call = mutated_mod.get_global_var('func_9866')
call_9868 = func_9866_call(var_9867)
output = call_9868
func_9869 = relay.Function([var_9867], output)
mutated_mod['func_9869'] = func_9869
mutated_mod = relay.transform.InferType()(mutated_mod)
var_9945 = relay.var("var_9945", dtype = "float64", shape = (11, 3, 3))#candidate|9945|(11, 3, 3)|var|float64
var_9946 = relay.var("var_9946", dtype = "float64", shape = (11, 3, 3))#candidate|9946|(11, 3, 3)|var|float64
bop_9947 = relay.power(var_9945.astype('float64'), relay.reshape(var_9946.astype('float64'), relay.shape_of(var_9945))) # shape=(11, 3, 3)
func_5410_call = mod.get_global_var('func_5410')
func_5414_call = mutated_mod.get_global_var('func_5414')
const_9951 = relay.const([-3.692646,-9.601405,-3.299149,6.935473,6.399536,-5.521104,4.974330,-8.493905,9.606291,-3.155411,5.527709,2.337034,4.925893,-4.563909,8.590207,3.781262,1.474660,4.259852,1.002198,-5.508714,2.216449,6.951329,-5.487818,1.085987,-2.449885,-5.872987,-9.394168,-5.064229,1.960470,-9.235066,7.280080,-1.878447,2.526528,9.771091,-7.469548,8.374761,-2.262797,-0.563091,2.875826,-9.761284,-4.976528,6.560226,-5.474216,-7.902976,-1.134406,8.826927,-6.876037,7.159798,3.581127,-9.327532,-0.179431,1.875709,4.740782,-9.109370,2.462752,-2.047323,4.760058,-2.544255,-0.322165,3.733905,3.002384,-8.442588,-0.454563,-9.627308,-5.795771,8.615498,-0.564685,8.483206,6.520486,-4.126926,-0.684046,-4.307305,2.188423,-1.982378,2.335212,-5.549118,-4.209492,8.560990,-0.711294,-9.216644,-1.946970,-3.644723,-6.226015,-9.770460,4.121421,3.485449,-1.129040,0.696618,-7.924428,4.875919,-7.779018,7.222946,-6.212423,2.722086,-7.379718,-5.001453,-2.015608,5.906531,-8.332466,-0.084773,7.357016,-9.835951,0.453935,5.334628,4.362320,2.273487,-7.058784,-4.804573,3.938139,-8.938427,9.523405,8.520340,2.517259,-6.259910,-9.388686,1.375091,-7.050663,3.067611,9.142173,-3.447432,5.435468,-5.962325,-6.317423,8.373746,5.477248,8.565069,-6.411128,-7.142368,5.386579,2.079415,9.624812,2.051090,-2.301418,3.644439,5.329738,-1.501583,8.621845,4.611195,2.888268,-9.580467,-4.744594,9.334689,-6.637242,-3.110537,7.837396,5.898037,-9.690633,-6.947955,-0.607263,-2.245825,0.057265,-4.712321,-2.083436,-0.169694,-4.875212,-9.400672,-8.826676,4.088618,0.667287,1.432124,-1.037640,8.464150,2.203060,9.377932,9.879235,-3.221183,5.691730,5.880570,-9.915484,6.733389,-1.588329,6.298521,-9.168292,4.454489,-2.224724,-0.365999,-6.166248,0.239854,8.156806,7.836386,-3.015813,-9.145374,-7.919401,0.844499,2.197829,-2.576388,-1.631472,1.429729,-0.085860,-4.264995,9.638645,1.912159,-1.653353,5.206853,-0.452043,-2.089184,-8.097002,-0.787450,6.053986,2.388267,-5.510304,-3.444308,1.995471,2.864588,1.977383,-8.605535,-3.272066,-7.669854,-2.690515,2.822680,-9.582148,-3.784920,-7.515791,9.497001,-6.096263,-3.113833,-7.881087,-1.623986,-6.551778,-1.225898,1.327442,-1.425609,-0.485599,6.336330,2.368244,3.756710,-6.705025,-8.375257,-7.680510,-2.778550,3.127494,-5.676483,-5.747736,4.351471,-9.704085,-4.001060,5.514176,-6.772461,0.210343,-6.183738,-2.554345,-6.674081,0.827096,7.158323,-5.060747,0.838676,-8.655982,-7.440548,-7.228945,-7.067667,6.375760,-3.298613,5.751473,-0.799531,-3.117062,2.820465,4.202896,-1.901714,0.622210,-3.967031,0.694326,8.353775,1.028274,-1.529754,5.409738,1.111380,8.289542,6.966832,-9.400711,5.504987,3.534462,3.113879,-3.503942,5.779590,5.567277,-6.811987,0.332937,-5.452129,7.205323,-1.425825,4.172139,1.367301,-4.344464,-0.519251,-9.972862,8.743247,-0.196876,-0.880913,-7.840222,-3.839595,-3.044131,2.582932,-9.475434,-7.799853,-3.894794,5.225916,-7.255112,8.672880,3.746227,1.673249,8.785955,2.433921,7.552260,1.808966,-0.936514,2.168910,-5.615989,-6.524292,9.805337,-2.884635,-5.397430,5.375814,-1.205302,8.808387,-7.217807,4.301726,7.494998,-0.998041,1.316092,7.085087,4.043974,-6.506489,2.161841,9.505403,6.578130,-9.198009,9.884662,6.457842,-5.079669,0.843160,8.972688,9.732855,-1.198431,-5.218919,7.166317,0.192491,-7.941520,-4.487558,-4.781807,-9.063923,9.366746,8.480089,9.286329,-9.978632,8.974345,-3.285625,-5.196857,-9.818905,2.885075,-8.226258,-8.666428,-8.853433,9.612505,-1.057154,-4.308997,-1.302544,4.811948,-1.597004,-0.475207,8.420639,-2.037318,-4.816347,4.753011,7.195443,2.704024,1.864195,4.520531,5.936811,-5.760025,4.600482,-1.695650,-3.888290,6.305454,-5.577618,8.779291,-9.977158,-6.643990,-2.994608,0.304722,-1.210306,-1.653784,-6.728754,6.756073,-2.209219,4.474446,-6.341978,5.474573,1.992306,0.393507,-4.760274,9.133064,6.001875,-1.275801,1.310552,3.934920,-8.820202,0.243131,-5.265405,-0.285259,-3.008978,-3.015043,-1.215907,3.404588,-2.486395,2.421999,1.029753,9.120381,-8.782392,8.348442,7.937572,-5.503044,-4.099316,-2.938284,-1.344587,0.460337,-6.856464,-5.306951,-8.439256,8.831571,-4.114873,9.540444,2.952059,-6.740179,-8.624635,-1.170154,0.812952,-6.316925,-3.236983,-7.097119,3.915912,-3.578499,1.046464,-4.071905,-7.865335,-8.001235,8.147528,3.111397,3.873357,-7.457241,9.385704,7.311047,2.350478,-9.178113,3.643654,0.518505,-9.618615,-5.863551,-3.551041,1.644222,-9.854292,2.133002,-0.159223,0.238968,3.298340,8.521067,-7.974016,6.005663,-5.656093,3.333030,-7.198906,3.429214,-7.977098,-9.513602,-3.553642,-2.417282,1.737713,-8.794663,-9.642218,0.412694,-0.062756,-8.665323,-3.068540,-9.234230,4.060141,-6.029399,-4.862191,-9.274869,5.556994,7.699380,0.239311,1.103497,-6.956396,-1.214191,0.557552,-5.912527,-6.110920,-7.181877,-1.186920,-4.309171,-3.816567,7.724672,-4.139494,-5.866362,-5.728653,4.440346,2.069893,-7.986243,6.407245,-0.769675,4.609481,-2.569340,3.106318,-0.819816,4.671926,7.764483,2.139766,0.601108,-6.695407,0.584352,5.325335,-1.170377,2.136107,-6.382297,9.448189,7.342252,7.256846,2.272034,-3.425195,-9.812905,-6.851888,-5.494295,-6.668453,1.371797,3.189946,9.558920,4.854586,7.738028,8.426341,5.268183,-5.620188,3.774305,-5.821550,-4.234913,-4.731511,4.490341,-7.413780,-6.156931,2.787074,4.638947,-4.261989,1.285828,1.249223,3.676682,8.495076,5.495371,8.885049,0.308186,3.010885,9.940648,1.861396,-9.308974,-0.286842,-3.242319,-8.785717,-8.143810,3.943408,6.691324,-3.224773,7.135499,8.359778,8.344725,4.196390,4.324392,-3.785803,-2.443373,7.768295,9.284030,9.162833,8.050990,3.650062,-7.112436,0.699354,7.145960,-4.878441,9.970137,-9.328634,2.372361,-1.715558,-6.120395,3.580847,-2.124414,-7.272950,-2.700449,9.629784,7.514739,7.304337,2.664161,3.485359,-0.128392,0.917707,-2.034147,-1.522591,3.669996,-7.169237,2.744859,-5.496857,-3.468485,3.292503,-0.812719,-8.702776,1.106825,-7.221324,-0.420390,-3.467280,4.931905,8.074425,0.369963,2.801622,-5.227444,-4.013266,7.036415,1.436251,4.640277,-6.311559,8.362082,-2.554974,-1.668791,-3.994021,-1.238354,1.867124,-5.051064,0.979328,-6.203804,9.674761,-4.200917,-4.023966,-8.976972,8.720856,-7.223563,-8.058874,-4.389573,1.803622,0.031444,-0.339259,-6.616217,3.926447,-0.950259,-0.072537,-1.658677,9.091490,5.580440,-6.662101,1.494401,-5.388956,-3.165357,6.203373,1.192684,2.686703,-2.074755,-4.759235,-0.755068,-2.335673,8.266863,2.154289,-5.185841,-9.225013,5.704498,3.863582,1.893944,-5.088907,-5.109740,-8.149524,-1.271229,-2.714655,7.831108,8.406958,6.931742,-7.415116,-6.933438,-8.318268,-8.307967,4.979796,0.539031,-6.515472,-7.923768,-2.466384,3.409372,-2.199132,9.964259,-2.229086,7.945110,-3.411497,1.964110,9.600657,-9.121450,-4.215183,1.525389,-9.062669,8.871828,0.233417,-7.406172,-2.056707,-7.210363,4.807789,-2.254857,7.823801,-6.460859,-5.148746,-4.338438,5.552847,3.107713,-5.571061,2.934181,9.778191,5.771686,-6.820588,1.396632,9.534129,7.819865,3.977536,1.948546,-8.851660,-8.556496,5.614054,-9.693238,0.251880,9.136910,-7.852364,6.442636,3.243790,-4.312343,-9.084088,-5.757547,-8.524845,-2.113557,0.437014,-1.686850,1.119444,-1.580684,5.679888,-8.837743,-5.841705,-7.230258,-2.352945,0.519585,6.809950,-8.378634,1.867431,4.833997,-5.115105,5.578915,3.557310,2.586173,-0.553337,-9.838243,0.097701,-2.461890,-4.282815,-1.597562,-3.625006,-6.265249,-0.371050,3.389487,4.122804,0.468990,0.463070,-1.254060,-6.742942,4.892700,2.870536,-2.062722,-3.596648,7.785435,-5.180369,-7.504170,3.734418,-0.624981,9.403146,8.470145,-1.072069,-5.402014,5.183814,0.220910,3.923846,-1.808115,-6.357951,9.034870,7.547508,9.291515,-8.467583,1.163523,-4.408829,8.675529,6.029972,-2.073587,2.535394,7.793548,8.470234,-2.997678,-0.959626,-0.993166,-6.062866,8.370073,-0.691939,1.511364,-2.642705,-7.414768,-1.835946,-8.659461,-6.159682,1.981494,-6.727726,-7.635116,4.804633,-6.947148,0.400664,-6.490050,-5.638259,1.994269,-7.330631,0.054514,6.795585,2.903892,-0.784768,-6.955923,6.718857,-9.294918,-4.618895,7.691493,-8.620143,1.772833,-1.657482,8.039783,-3.114123,4.727917,4.325156,8.073907,-8.645578,-4.004492,8.461276,4.446575,-6.161697,-6.031947,-8.720933,8.435357,4.904369,-9.131614,-5.753493,-5.065512,0.322294,-6.456080,-6.113796,2.769173,-7.794528,1.247769,-9.547715,-6.302773,8.473570,-5.924031,8.925451,-9.163384,-7.219151,-0.176103,-6.537516,1.787007,7.243138,-4.635963,-3.256533,-4.225750,5.093393,-6.791817,3.521091,-2.276574,8.487035,-9.492960,-5.138059,8.172433,-1.459671,-8.311960,-5.736400,-1.948033,1.496121,9.837725,-9.735321,-0.650781,-7.371223,-0.946923,-3.108224,-8.809722,0.264819,-4.634954,5.147510,-9.340530,6.615267,-1.497893,7.654496,5.280864,8.300745,-1.561835,9.953289,7.252156,5.094946,0.095246,-4.426953,5.683491,-7.920095,-0.262425,6.433344,6.147240,1.562877,-8.683619,-4.173465,5.899143,-5.087604,-0.853922,-8.565251,7.119266,0.369413,6.467983,-5.325907,8.509718,-9.394326,-4.872498,-1.063148,0.005428,1.900555,-7.870199,4.158006,9.766089,2.337707,5.704216,2.279808,5.404638,9.822377,7.700783,1.052385,1.917259,-5.483775,7.166827,8.836041,-3.569531,-8.794363,4.533762,-6.401321,-1.718155,-8.805973,0.840105,-2.507924,-7.280697,-2.053667,-5.637411,-8.536233,6.283890,6.066223,3.788455,4.398688,-4.471851,0.626409,-7.266984,-2.023403,5.990656,-1.083962,2.937680,-0.480075,4.487630,2.317047,-5.014332,4.260473,-7.382729,9.728834,6.946641,5.590234,-1.893152,7.503817,-9.572067,3.895822,-7.954046,-2.295852,4.881639,6.073053,2.210043,-8.141797,-5.943761,-6.877152,-8.114649,3.030224,-4.260319,9.667690,0.645790,7.788677,7.047244,2.482116,9.930680,9.898433,-3.018392,6.398810,3.485662,-1.532740,4.047656,-5.451734,-8.197397,7.451676,-5.010841,8.574165,-5.961160,6.749501,-3.591126,3.214232,-0.415573,-0.726810,-2.813820,5.331101,9.704191,9.754681,-1.923388,-7.706510,6.641343,4.879203,6.897356,4.229753,-3.798992,4.080172,-8.111127,-3.817795,9.798902,3.860705,-2.894470,8.846395,-3.042890,-0.187483,-3.540555,2.832037,-9.238578,6.805438,-6.251445,5.643897,3.929969,5.451678,-6.942714,-1.294767,-6.696360,3.038956,-3.736648,-9.371017,2.854026,7.417827,4.785092,-3.556168,-2.451030,8.143492,-1.844007,9.808345,8.544684,0.025155,-8.636892,9.518975,-7.851335,0.451519,9.476641,5.829461,-9.937812,-9.438807,-7.924061,7.599191,-6.887988,1.254993,-7.665134,-6.449969,8.517096,5.711264,-3.646690,-1.376423,8.128847,8.442342,1.053549,7.641252,-9.394464,0.099889,-4.113029,4.197974,-1.685127,-8.682788,5.443395,-7.773191,-1.034012,-0.214134,7.809719,9.340802,-9.462012,2.392132,-2.102402,3.034792,9.787518,5.815879,3.714905,-9.620644,2.556242,-0.435263,-6.419237,0.649102,-9.665313,8.751597,-1.639187,-3.214119,7.317546,-4.018407,0.491533,-3.537965,-8.706556,-7.837946,-1.434149,5.138639,6.403150,-2.811063,8.400788,9.799775,6.774387,6.653883,8.470330,-8.525517,6.830886,-4.102774,-9.123833,4.916773,-1.235146,9.837780,1.592897,-1.426712,-3.142059,-7.500758,-5.543381,-2.719945,-0.452546,0.773283,8.521231,-6.351983,-9.151114,1.266253,-7.648768,-8.028135,0.241575,1.459007,-9.772924,2.084821,3.568591,-9.495123,7.233153,8.808863,-3.218534,-1.132085,6.677296,8.307856,4.460434,-7.702927,4.837190,4.710428,-8.656513,6.399682,-8.031180,-2.261092,-4.063896,-0.545948,6.968850,4.365358,-7.137227,0.554619,4.119409,-3.166638,-9.434899,-8.803231,1.622148,-8.945123,-4.674596,-4.296671,-4.573213,-3.138093,-2.799437,4.878279,5.823985,1.930926,-8.359385,8.061995,0.302300,-2.888514,-5.392381,-6.939269,-2.424611,-4.636693,-2.211189,-8.347803,8.445656,-5.107009,2.663537,7.671062,-8.010885,-2.016960,9.021088,-6.785643,8.565274,-4.604552,8.315476,9.453545,1.070864,0.401519,7.365862,1.420633,-3.505308,-3.082271,8.489542,-4.439058,-9.838433,-7.811042,-5.943403,6.928577,4.345090,-3.860151,-6.383312,1.159848,9.754286,5.945430,-2.960095,4.829166,-2.213185,-6.024345,7.949906,-1.792651,5.043840,4.258691,9.639552,-9.118288,8.665113,-0.818279,-6.271986,9.086696,-9.790359,-0.621028,7.657565,1.186409,9.632749,0.964705,8.152372,2.884234,-5.497593,-6.640748,1.325190,7.909818,4.190586,-1.562303,9.871146,5.798481,-7.440889,-1.224794,5.274623,-8.710983,7.960578,5.135581,5.399916,2.225463,-9.994265,8.049469,-4.184500,-1.862003,-9.144708,-3.053269,-7.640235,4.156076,0.324154,0.272892,-5.905516,-9.555338,0.263340,-1.978605,-2.414376,7.440714,9.011318,-6.253394,9.942402,-8.430339,7.976264,5.808846,-1.138476,-4.054455,-5.270598,2.165696,6.356825,-7.604438,2.714360,5.967122,-3.424008,-3.782991,-7.736930,-2.178211,9.161648,2.253694,3.916687,8.566703,-6.335715,4.476534,7.335646,6.511985,-5.232150,8.239154,-2.018102,3.552627,0.214601,-4.374481,-6.410364,3.070341,2.727139,-6.880893,5.104736,1.225182,-7.903907,-6.841086,6.203484,-5.774341,8.249582,1.902378,5.944968,5.630559,4.802232,-2.619847,-2.563713,2.143267,-5.393740,-3.850652,4.562623,5.893361,-4.405706,3.118010,0.662210,-8.152494,-9.988679,-6.135856,-7.189311,-0.618492,-8.498863,-4.150972,9.759892,-4.640581,0.389030,1.373930,-2.524624,-1.819359,7.371445,-5.581473,-8.022107,2.465002,1.929073,-8.178407,6.666835,7.044325,4.504284,-8.501165,5.046443,-5.750932,4.056236,-1.568861,8.888397,6.267617,-1.719267,5.160569,-4.117765,9.056777,3.754037,9.828659,1.843747,-1.704342,-0.948562,5.797503,4.623572,4.757839,4.226531,4.543959,-8.686228,2.451679,-3.346266,0.876737,-0.092097,-9.889975,-2.375825,-6.908774,-1.725085,-9.042512,-3.650668,6.709647,-1.637585,-4.907500,-9.788710,-0.550118,-5.975985,0.180229,-8.398300,1.336763,-0.094396,-3.127377,-5.869948,-1.490897,4.558843,6.524229,-4.170057,-4.732515,3.229900,-0.844909,-8.312559,0.928430,0.802870,4.548977,9.495660,-8.384262,3.385480,2.581560,4.565853,-9.878054,-7.200889,-3.674618,-9.609663,4.240680,-6.932615,9.617219,-3.239635,5.732115,-5.375221,-3.209502,-0.464324,8.687090,6.279399,8.314463,-1.422021,-3.963161,0.562040,3.054648,6.427524,-8.210569,-9.331431,-4.057421,-0.889545,-6.409449,-1.814892,-4.291374,6.430819,-0.345629,-8.822643,-2.649041,-7.510108,-6.158272,2.933920,9.771440,-0.356969,-8.488234,-0.781451,-6.195637,9.787456,9.924891,0.676958,-5.253006,1.670229,7.194345,-0.574203,-8.811810,-4.450178,-8.965905,-8.082796,-8.691243,5.214389,9.715533,3.683437,-3.467125,3.851043,5.081667,-6.473498,8.117495,-1.989909,6.911398,-6.716960,0.791269,-1.639288,4.947131,-5.432575,-3.585411,-3.041538,9.597674,9.253945,-8.747668,0.134038,8.706813,5.955197,9.277777,0.804440,-9.801854,-1.975225,0.924943,-9.569608,6.313985,-8.896008,-2.055047,4.526497,2.995015,-2.052421,4.731232,1.899301,3.828550,-9.345832,-2.751034,3.640888,3.816436,1.766461,8.565654,6.159994,-1.448637,-9.789382,2.009840,-5.910872,-6.825114,-5.425479,-6.747180,-2.971158,6.208417,-6.022167,-7.607545,-1.128418,7.989430,-8.328694,7.380676,0.294813,-5.467510,2.405293,3.617331,-6.804909,-1.280988,-7.400871,-4.832413,-9.367751,3.066182,4.451909,-9.603953,4.330749,1.694318,-6.368601,-0.979314,-1.766436,7.441383,-9.916668,5.700642,-0.333383,1.264844,-0.676909,5.403078,1.539237,4.725035,6.533057,7.164805,9.024050,-5.220043,4.780579,4.930753,7.832085,1.467724,-5.187581,-7.748372,-6.938793,6.991455,7.199103,1.289722,0.598996,-9.490115,7.004036,6.081497,-2.138252,-2.701706,-7.271497,-0.098537,9.942162,5.087151,-8.424152,-8.663520,-9.578765,-9.284280,7.466197,-2.774321,-8.756298,9.548688,-6.322828,2.031462,-6.873648,1.696381,6.744002,5.022418,5.236923,-8.172969,-6.911309,0.545192,-3.166553,1.607244,6.685429,-9.561742,-6.518934,3.396503,7.530129,2.451257,0.334075,-7.681042,-8.747989,2.927728,7.161246,-9.613310,-6.019300,-9.007211,5.607514,-3.920723,7.972702,-7.381104,-9.520181,8.352183,-2.719228,-1.433802,5.647541,3.353399,-7.023431,6.790921,-4.802624,6.070533,2.690387,-2.742896,0.059272,-8.793701,8.590795,-2.299915,-4.866175,0.175690,3.103518,-5.468187,2.306901,-9.273918,-4.280980,0.080041,7.171131,-6.231215,-2.097758,0.609951,4.545646,-6.013453,1.430876,8.056620,-7.523274,-9.697669,-3.943103,-0.217546,-6.808041,2.459822,9.533724,-4.106112,6.835717,0.165909,9.043265,-6.337511,-2.840571,3.065848,9.988898,-6.754654,-1.167186,2.605162,0.401621,-5.798765,9.530641,4.966842,-6.932936,0.232611,-5.663292,1.950491,-4.236723,-3.760937,-8.273952,-5.083562,-0.943055,-8.972246,4.788105,7.925430,4.798404,2.459557,9.817717,1.393650,-1.683730,-9.439751,-4.225164,-9.566759,9.878670,8.582860,-9.696115,2.880008,-5.644297,1.454907,-4.260770,5.927918,-2.840793,-2.897503,7.170468,4.245321,-2.770304,-9.834762,0.864138,2.805021,2.977212,5.988281,-3.897344,9.386072,-0.190435,4.898862,8.407192,-1.921187,2.690575,-0.108865,5.939817,-8.748335,7.883949,-8.767818,7.939287,0.273129,-0.419922,-5.274627,9.390568,-2.083043,3.280268,-8.555597,-2.759105,-0.557132,3.236655,-6.986562,5.964164,7.353720,9.590150,5.441221,0.356415,7.886933,7.796914,5.854916,6.685562,-4.456138,7.287098,-4.013478,-3.568797,3.355719,7.673068,-8.305448,-5.154860,9.301267,3.212582,-9.415905,3.412062,-2.612820,5.983445,2.086636,1.041338,2.594438,6.679139,-6.465199,3.481365,7.462715,0.887970,2.374403,5.469466,7.214731,1.957779,-0.679677,-2.619992,-2.101861,-4.740949,-1.268139,0.522235,-4.708238,6.587149,-8.278874,-8.653763,5.546251,6.666705,1.888774,2.425212,1.417474,-9.777816,5.318000,5.147233,-2.776947,-2.833019,9.321458,5.962707,-7.793221,1.618466,4.046905,-8.296650,2.423953,5.502784,6.432452,-7.855061,0.400886,-5.350237,3.293225,-2.511439,2.661310,-4.505748,8.972119,-5.815928,1.693420,-5.626054,7.816249,2.166486,0.870866,1.713741,-9.074928,1.637122,-5.144449,-7.969658,9.199336,6.852699,7.407076,-3.147309,9.792689,-2.380009,-1.102908,9.324629,-5.933858,-8.332855,9.932634,-6.795230,5.421745,-9.047738,4.894117,3.699281,6.536994,3.875570,3.125233,2.525306,-1.646716,2.801334,0.677222,-1.264096,3.231323,4.562767,-2.764580,-0.068926,3.867039,2.625614,-4.131485,-8.523081,4.294301,-7.889764,1.429212,-3.038183,-7.427995,-1.311747,-4.746658,7.435829,0.295665,0.476575,-7.317578,-1.498215,-9.911251,-4.053840,-9.985925,-2.886470,-2.183294,-3.342070,0.456962,8.214440,-2.387160,5.791802,-9.094422,1.668411,6.877645,3.735932,-1.439214,3.363881,7.403199,0.115341,-4.942845,5.688324,2.761775,-1.033872,-9.759498,-4.835178,8.416159,-0.463125,-4.431872,-1.568923,-5.363864,5.834989,4.123147,1.678638,-8.331717,-4.242487,-1.894403,4.624954,-5.503895,-1.585821,4.511014,9.284508,-1.286510,-4.061986,5.357178,-3.740732,-1.687669,1.287663,1.208526,-2.524216,3.654372,-1.062414,-2.030398,6.005894,-3.524593,-0.971746,-9.577537,-2.132136,5.070878,8.231980,8.883282,-7.853891,7.659374,8.622275,-8.390448,-4.992149,6.623301,8.709389,-8.631003,-6.445826,6.730552,-8.046862,-0.666891,-8.119935,8.464396,6.355286,-5.580316,-1.467423,6.910011,-8.718130,1.009150,3.411482,6.832688,3.969337,-7.782522,-1.813102,-7.266091,9.771148,-1.632880,-8.664550,-1.771167,-9.921599,7.722281,-3.925858,3.187382,-3.224455,-1.191587,0.076645,-9.316418,9.675154,-1.776043,-8.715436,7.993548,5.328460,-7.616769,9.643602,8.757158,1.154087,0.238964,7.060912,-4.659140,9.734196,-3.849089,-9.625346,1.618995,4.462353,-7.005060,-3.517208,4.017094,5.647544,4.659406,-0.451161,-7.412085,0.088382,-4.414805,-9.282012,-8.223312,2.697635,-2.619998,-7.880555,0.633294,3.581541,1.640166,5.424190,-3.449576,-8.981716,-3.120065,-2.498012,-9.239654,-8.203369,0.157787,1.810310,-9.495457,-7.479263,5.946147,6.601936,-0.669735,-3.761416,-0.019558,-0.342740,-7.847068,0.362197,-4.280448,6.670944,8.138239,2.370328,1.340629,0.127777,8.764397,-2.794437,-3.950528,1.187502,4.924977,-9.265333,-0.221560,-3.870752,-5.013680,0.013256,0.353235,1.873198,-1.626991,4.244285,-0.130252,1.784649,-5.743865,-4.734835,8.505408,0.606486,5.553946,4.053826,6.246121,-7.806358,5.455840,-7.586384,-8.471115,9.258773,-7.126132,-2.977535,1.111885,-8.922994,-8.674591,-8.159290,-5.426370,-9.504131,-4.851470,8.369460,0.702122,0.414845,3.508892,7.566466,4.653797,-9.278794,-8.998124,-2.202569,6.719257,3.079344,9.816238,6.311597,-2.926070,4.509441,3.186272,-6.562920,-6.192480,1.174865,6.146476,-8.549482,-4.352217,-0.436926,0.455508,-8.929150,7.424479,-8.981202,-6.815777,-0.282074,2.289031,0.145327,3.010498,0.232791,0.048760,0.088836,-5.851404,9.713167,4.830845,2.221261,5.225527,8.907084,3.806006,8.278108,9.495048,-3.691112,-3.905719,-2.101621,5.238042,3.011652,-9.484391,8.023633,-4.636494,8.414548,-6.754831,3.307959,2.237945,-6.454590,-3.308401,-1.672978,-7.106141,1.750340,-3.174038,-7.525583,0.276721,-8.824144,-1.588714,-4.559652,-1.947461,-3.204709,-9.327393,-0.358082,-5.856553,8.741396,1.428089,2.543299,-4.696255,-7.678792,-6.343730,0.677380,-7.486387,1.577062,0.177509,-7.994709,-7.328370,0.406587,-8.539182,-7.324613,-4.413785,3.841157,6.871555,2.886586,3.524761,-5.661627,-7.992534,-4.050011,8.391650,-5.675755,2.516577,-6.187407,9.201267,1.808260,-5.840010,0.290678,2.990398,-0.804073,2.679125,-3.322173,5.941316,-4.955836,-5.623915,-6.218986,-0.175254,3.128937,3.154326,5.510346,1.105734,-2.887527,-8.636918,-2.541048,4.561676,-0.951123,6.756574,0.967064,0.223235,-0.928364,-6.182041,3.882554,0.880810,0.602483,1.674450,-7.230035,9.998336,-7.090405,-7.124588,5.693814,1.555034,-0.107293,-0.905591,3.405029,8.351662,-0.314332,-6.970287,-5.505524,-7.119605,6.560622,2.623731,-7.630241,-0.661842,-6.938733,0.129274,-2.002076,-3.058734,4.281958,9.134615,-0.897658,7.473589,-3.129950,2.111842,5.394231,-5.313999,5.334448,-8.330007,-1.558628,-6.797373,6.125308,-1.227505,-4.592401,-8.476883,-5.629471,-9.054818,-7.974365,2.962624,5.546208,-7.225343,-9.359664,3.415489,-3.899187,6.677992,2.755232,8.874080,7.018476,-3.531043,-5.810293,-8.257537,-2.133762,-3.235607,-8.741168,-0.891410,-5.047632,-2.744488,4.868456,-9.158254,-2.148106,1.746565,1.902624,-1.661801,-4.304702,-4.620381,-6.634932,1.616109,5.130510,7.141962,9.234738,3.988457,-0.141009,-1.911270,-2.955692,3.044413,-9.657689,-4.566232,-3.492741,6.797682,4.148349,0.319051,-7.430198,9.053484,-1.184670,7.546910,-9.624516,3.709717,-9.992875,-5.410569,-6.351434,0.771791,-2.884562,-4.459038,9.647730,-0.719656,0.137949,-5.872497,-9.817862,4.303496,-8.310441,7.508402,-8.401396,-5.412146,-8.361880,5.016402,-5.476211,-5.071616,-7.110983,0.380364,-7.059400,-3.101317,-3.126036,7.549138,-1.738951,7.080425,1.447328,0.438557,-3.222502,-3.405117,8.370400,4.400761,6.858663,-1.687347,5.293603,7.092471,5.682452,4.940374,-3.579684,0.523734,-9.264994,9.152790,7.723819,6.334202,-9.846939,-5.072011,9.188381,-6.123098,1.777002,-2.182777,-0.115257,-0.073954,6.461215,7.481303,-1.539180,4.246419,-3.260369,-0.961940,9.580245,0.266324,-1.461981,4.286792,8.320206,-7.723622,0.372387,6.365247,-5.344972,5.775646,-4.744099,3.683008,5.089794,2.876312,8.892680,0.782678,2.443085,4.347608,1.965024,4.365686,-2.822909,2.470987,-7.785121,8.531108,2.796303,-0.356218,-5.236394,-2.099025,-2.744051,7.774641,-6.261621,1.778547,2.773269,8.480934,6.148536,4.552322,-4.615524,0.962846,-1.833452,1.973896,-5.438058,8.806872,0.392423,-0.159613,8.636973,0.409344,8.541523,0.544356,0.286979,0.038867,0.702923,-2.929038,9.340992,-8.238602,6.677732,2.266608,5.027128,-9.027660,0.736527,3.762215,-7.686350,-7.738100,0.420007,-5.254678,-6.921966,5.551400,-0.057754,7.752444,-7.714154,5.266610,4.958214,9.595815,0.057764,9.013871,-2.329657,7.108319,3.754810,-8.967720,4.315968,-2.063699,-7.778597,1.179307], dtype = "float32")#candidate|9951|(2400,)|const|float32
const_9952 = relay.const(2.552457, dtype = "float32")#candidate|9952|()|const|float32
var_9953 = relay.var("var_9953", dtype = "uint64", shape = (900,))#candidate|9953|(900,)|var|uint64
call_9950 = relay.TupleGetItem(func_5410_call(relay.reshape(const_9951.astype('float32'), [15, 16, 10]), relay.reshape(const_9952.astype('float32'), []), relay.reshape(var_9953.astype('uint64'), [90, 10]), ), 4)
call_9954 = relay.TupleGetItem(func_5414_call(relay.reshape(const_9951.astype('float32'), [15, 16, 10]), relay.reshape(const_9952.astype('float32'), []), relay.reshape(var_9953.astype('uint64'), [90, 10]), ), 4)
func_3372_call = mod.get_global_var('func_3372')
func_3375_call = mutated_mod.get_global_var('func_3375')
const_9957 = relay.const([[-1,-9,2,10,-7,-7,-1,5,6,-3,10,2,-2,6,10,-4,-4,-2,7,6,-4,10,-7,1,1,-6,7,-6,4,9,-2,4,7,10,10,8,1,1,5,9,-5,-8,4,3,6,3,6,3,5,-5,-1,3,3,10,-6,-3,-6,5,-4,10,-10,-7,-10,8,-4,-2,-8,-7,-9,-8,-5,-7,-3,-3,-1,-9,3,5,-8,1,-8,9,10,-4,4,-5,4,-2,-4,-5,5,6,-2,1,4,4,-7,-5,-10,5,2,2,1,2,-6,-2,1,-1,9,-4,6,-4,-2,7,9,-3,1,8,9,9,6,-8,-9,9,1,-10,3,9,2,-5,-9,3,-4,-1,-10,-8,-2,-3,-5,9,-8,-4,-5,-4,8,-10,-10,6,6,8,-8,10,3,10,-8,6,10,-6,-3,-3,-2,10,6,7,-3,-7,3,2,-3,-6,5,-4,1,1,-2,5,-7,-7,10,6,1,6,-1,10,5,4,7,7,9,10,-2,5,-9,-2,-6,-4,-2,-1,-3,6,6,-7,9,2,10,7,-6,-1,5,-6,4,8,-2,-10,1,-10,7,1,-1,-3,-5,-5,3,8,1,-8,5,2,6,-10,-9,5,10,-1,-9,4,-5,6,4,7,-9,-10,-3,-2,4,8,-4,9,-7,7,-3,1,-7,-7,1,6,-10,-4,9,-4,8,6,4,-8,-6,-8,-7,6,-4,-4,-8,4,-7,1,-4,10,-8,6,4,3,-10,-8,10,10,8,10,6,-3,2,-2,-10,10,1,-10,-9,-4,5,-5,-5,-8,3,-8,-2,4,5,-2,-8,-5,-6,1,-1,4,6,-9,-6,-3,-5,-8,2,-10,-7,3,5,-2,4,-6,-10,-9,2,9,-6,-9,-3,-9,8,-1,-4,-8,-4,-9,6,3,10,4,1,1,6,-2,4,4,-1,-7,-3,3,7,-6,-9,-1,-1,10,8,3,1,5,-7,9,7,-4,-1,6,10,1,10,-10,-8,-5,4,-4,-3,2,7,-9,-5,3,-1,6,-2,1,-10,3,3,-8,-5,-2,9,-10,3,-3,4,8,6,7,10,9,10,10,9,-10,8,5,-6,-8,-8,-9,6,10,-1,1,6,1,-4,-1,7,-9,3,-6,1,-8,-6,1,-6,5,9,-9,8,3,1,4,5,-6,-9,7,-8,-9,4,6,3,9,9,-7,10,-8,-5,-10,8,-3,10,-7,5,-5,-5,10,4,10,-7,-2,-8,-9,-5,-7,9,-9,10,-1,9,-5,-9,-2,4,8,-8,10,1,3,2,-8,-10,2,-3,6,-7,6,-5,8,-2,-1,-7,8,-4,-1,-1,-7,-5,2,2,-10,6,-4,6,-10,-8,-9,-6,2,-10,-6,3,-3,-4,6,2,4,4,10,-2,10,-3,-7,-8,7,-2,-8,-10,-3,5,-8,-9,-4,2,5,-4,4,-2,6,-7,-7,-8,4,-7,2,-10,8,5,-10,-7,9,-8,9,-3,3,10,1,-4,-5,5,2,8,-3,-1,9,10,9,2,-9,5,-7,1,-10,-4,-7,-4,2,-8,-6,10,6,5,7,5,4,-9,2,8,6,-1,-1,-1,-7,-10,9,-10,1,2,5,-5,9,10,3,-5,10,-3,9,7,-4,-10,-8,-9,6,-6,-1,7,-4,-1,-5,-9,4,-9,5,-10,-5,-3,-1,-4,4,-5,3,-6,1,6,-6,2,-7,5,-8,-5,7,8,8,4,-1,10,-3,3,-4,1,-5,1,7,-6,-5,6,8,-10,5,10,-3,10,-7,-1,3,2,-8,-10,3,7,-8,9,-8,-4,-1,9,-7,1,3,4,5,-1,-10,-5,10,10,7,-6,6,-8,-4,-2,-7,4,2,-3,5,9,9,-10,-8,-7,-8,1,-2,-3,-5,7,8,1,1,-9,10,-2,4,9,2,10,-10,-6,-10,-9,5,-7,9,-5,4,7,-1,-4,-2,-8,1,-4,9,-3,10,5,10,-8,-10,1,6,7,-10,-4,-5,7,-2,-7,1,-1,-2,8,-8,2,1,1,5,7,-10,8,-5],[1,5,10,8,9,-8,3,-5,-2,-10,6,-3,-1,-5,-10,3,10,1,-4,-1,-10,-9,-3,-8,3,-9,5,3,9,-6,-6,2,7,-6,-4,-3,8,-7,-8,-7,7,3,10,-8,2,7,3,6,3,-10,-10,3,-6,-8,-7,7,-1,-6,6,1,9,6,9,3,-5,-1,5,5,-4,6,-8,-7,-5,3,8,7,-1,-3,-8,-2,-9,-10,-7,-8,7,-2,8,7,2,-5,1,-2,-9,-5,-1,-10,10,-7,-6,-7,10,10,-9,-1,7,5,-10,-2,-4,-5,-4,7,4,10,-10,3,-8,-8,-9,10,-7,-4,4,7,3,-2,5,-2,5,9,10,-7,-6,-7,-6,-3,-4,3,4,-5,-9,5,-8,7,10,-1,9,-1,3,-3,7,-3,4,-10,-3,7,-3,10,-3,7,2,-6,-5,9,6,-6,-8,7,-4,-10,3,-1,-4,-10,-7,-10,4,-3,4,-5,-3,-5,-10,1,-9,-3,10,9,-6,-9,-5,-5,5,-5,9,1,-3,-1,9,10,-6,-10,-6,2,-9,6,-2,-2,8,-5,-1,9,3,8,-5,-9,1,7,10,9,10,3,6,-8,7,1,2,-2,1,6,-10,7,6,-9,3,6,-5,7,4,-8,-1,-9,-1,7,-10,-8,-7,2,-8,10,8,7,2,-7,-1,9,5,6,-8,-8,5,-1,-10,8,3,-9,1,-8,-4,-3,-9,-9,-2,-10,8,-1,1,-7,-4,-9,10,-1,8,8,-4,8,-3,8,4,6,-6,-4,6,8,-6,-10,-6,7,-8,-7,6,-6,2,6,3,-7,8,6,5,-5,-2,5,-6,4,-9,-6,4,-6,7,-2,4,7,-1,6,-6,4,8,8,6,-5,2,-2,5,-5,-9,-3,6,-7,-3,-2,-5,-9,-8,4,10,8,3,10,-7,-2,-2,1,5,5,-2,8,-3,-10,-3,-6,-8,-5,-6,10,-10,10,-5,7,3,-9,9,2,-4,7,-1,-2,-7,9,-2,7,-1,-3,1,8,2,-9,-5,-4,-5,6,-4,-2,-7,-6,-2,-2,-1,-1,5,-6,-9,9,-8,-2,-4,9,-9,8,-6,7,-7,-10,4,-1,-5,7,2,7,-10,2,-9,1,4,6,-4,-7,-1,-9,10,-5,7,-8,-9,8,6,-3,-3,-3,-2,8,-1,6,1,9,5,8,-8,-10,3,-6,2,-2,-4,3,-3,3,-7,5,4,1,10,1,8,-6,-1,-10,4,9,8,-5,4,-4,-6,-9,5,-10,-9,-4,4,10,4,10,1,-7,1,9,-9,4,-3,8,3,4,10,-1,-10,2,8,-6,-9,-9,5,6,2,-1,-3,5,-6,-7,1,-1,-6,6,2,6,-7,4,4,7,-9,3,5,5,-8,-8,-10,-9,1,-4,-9,6,5,7,-7,-5,3,8,5,9,-8,2,7,8,-7,1,-3,4,-7,5,-5,2,-8,6,-4,7,-4,-1,8,-9,2,-5,-8,-2,7,-1,-8,10,3,-9,3,-10,3,-9,5,-8,-9,3,-1,4,-2,2,-10,-6,-10,-4,1,1,-7,6,8,10,-8,-5,-8,9,-6,10,7,10,2,-2,8,-6,-4,9,-6,-9,2,3,7,-9,-5,10,4,-9,6,7,5,-10,-6,10,10,6,7,1,1,6,7,-6,-8,7,-4,-7,-10,7,6,7,9,7,3,10,7,10,4,7,10,-5,2,5,-8,7,-2,-1,10,-6,5,-6,4,8,-1,1,1,-6,-7,-5,3,-1,8,5,10,-10,-1,-1,4,4,-4,-5,-2,-8,-3,-6,-4,-3,-8,2,-4,-7,1,-2,7,8,-3,-8,7,-4,8,-9,6,5,-2,4,-9,3,-10,5,-10,-1,-8,-8,5,-5,1,-5,8,10,9,8,-6,-2,-5,-4,-9,-10,3,4,-9,3,5,-6,2,-2,2,2,10,-4,10,10,4,8,7,7,1,5,-10,8,8,2,10,8,8,5,-2,7,4,-3,-5,6,-10,1,-3,-1,-9,-1,-9,-10,-2,6,9,-2],[-9,3,-7,2,-9,9,-4,-3,7,3,-4,4,-8,-2,6,-10,-10,8,10,-7,5,-3,10,3,1,-3,8,10,10,3,-5,8,3,-3,8,-6,-9,3,6,-5,1,-1,-5,-5,3,10,10,-3,8,10,7,-10,-6,4,-8,-10,-8,7,1,10,-3,-2,-2,10,1,7,-5,-4,9,-2,8,-7,-2,-10,8,9,-2,-6,5,4,5,6,8,10,8,6,5,-2,10,2,-2,1,3,6,-3,-6,2,8,-1,-9,4,7,-1,-6,1,-8,10,-6,-7,3,-5,-8,-10,-6,7,-4,-3,10,-1,4,6,-6,-3,1,7,10,2,8,6,-5,-1,4,1,7,-10,-4,5,5,2,-8,10,8,7,4,-2,-6,9,9,2,1,-9,10,-5,-9,-1,-4,6,10,2,7,-4,-8,-3,-4,1,8,-10,-3,3,2,1,-4,-1,-10,-8,-6,-10,-7,9,9,-5,-1,7,-2,6,-4,-1,3,3,-3,-10,3,-3,-6,-2,-4,4,-3,-9,-1,8,-3,-4,-1,10,7,-2,4,3,-8,5,-1,9,-7,-9,-5,-4,6,-5,-6,-10,8,3,9,-10,-8,-1,3,3,8,10,8,10,-3,-2,3,-2,-6,-3,-1,-2,-9,10,-2,-3,6,2,9,-2,10,-3,-6,1,10,-6,6,-3,-10,-6,7,-3,-3,9,-10,4,4,10,-2,3,7,-6,7,10,4,2,-7,6,-1,-10,7,10,3,3,-2,-7,6,-2,3,-10,9,-10,-8,-4,3,-1,-2,-4,-8,-8,5,-9,-1,4,2,2,-8,8,1,7,10,6,7,-4,-9,5,-2,-5,-5,8,2,1,-2,-8,-2,9,-2,-3,7,6,-2,9,5,-6,4,-2,-1,8,3,-8,-2,-9,2,-3,-9,-4,-10,-4,9,-9,-1,-9,3,10,5,3,5,-4,-5,-5,-8,7,3,6,1,-7,6,7,-5,-7,4,-10,5,-7,10,5,2,7,1,-9,7,-5,2,-4,10,7,-3,-7,10,-7,6,8,3,-3,-9,7,8,10,-7,-5,6,-2,-9,-7,3,-1,7,-8,7,7,6,1,-7,2,-3,-10,10,-10,-1,10,-3,4,10,-10,-3,-10,-2,-1,-2,-4,1,-6,8,-2,2,-4,2,-5,-7,-9,4,9,2,5,-4,-3,-3,-8,6,1,-3,-3,2,-7,-4,1,-8,6,-2,-8,-1,3,-9,-6,-4,-2,-1,-4,-4,-2,-9,-10,5,1,-8,6,-9,5,4,2,10,5,-9,-4,9,-3,1,7,9,3,-4,-7,10,10,5,1,6,-7,-4,9,-7,2,-6,-3,-7,-10,-9,-4,1,2,8,1,9,2,-9,7,-3,-3,7,4,4,5,-1,2,-6,9,-10,-9,-10,-4,-2,-6,-9,-4,7,-10,-1,6,-7,5,-5,-7,-7,-5,7,-8,8,4,3,4,5,2,-1,10,-9,1,-1,10,-7,7,-4,-3,-8,-2,6,-10,-1,8,3,2,-5,5,-3,6,-9,4,-7,-8,5,-6,5,1,-10,-10,7,4,-6,9,-3,-1,-7,8,3,9,-3,8,-2,-5,-8,-7,8,-8,-10,8,-2,-10,6,-3,3,9,-10,5,6,6,9,-2,5,-3,-6,10,2,7,7,10,-3,-7,6,4,-6,-9,-4,-1,-8,3,9,-2,-5,-10,-8,-6,9,-3,-7,-10,-9,-7,-9,-1,-5,3,-10,-5,-3,-1,5,-1,1,1,2,1,10,4,6,-8,-2,7,5,8,6,6,-7,10,-10,-5,2,-4,4,4,3,-5,3,6,-3,-4,6,-2,7,-10,-5,-9,-1,-1,-1,8,-7,7,-2,-7,-7,-6,1,5,-2,-4,10,-3,-8,-7,-1,1,6,9,-10,5,-7,10,10,5,2,8,5,-2,-6,-2,-4,7,10,9,2,9,6,-7,-7,-10,-4,-9,-10,3,-10,6,-7,-3,9,-9,10,2,7,4,-4,3,5,-8,-4,4,6,-9,3,2,-8,6,-8,3,8,1,4,-9,-7,5,-7],[-9,-8,-6,4,4,-8,7,-7,-1,-10,8,-6,4,-5,9,7,-7,-6,-4,10,2,6,-3,-4,1,-7,-9,-7,8,-1,6,-5,-10,5,-3,2,2,-7,-3,9,4,-5,1,-5,6,8,-1,-4,-3,-5,-3,-4,-6,-9,-1,-5,4,-7,1,-4,7,8,4,-10,-2,-5,-3,1,-9,10,-9,-6,-6,6,6,-4,-1,-4,-4,-1,-1,-3,-5,-6,3,8,-3,-4,9,6,-1,10,-3,-6,1,5,-6,-6,1,7,8,-7,-10,-9,1,4,-6,-4,1,7,-9,-3,1,6,-9,-9,10,9,-6,-9,-4,9,-9,10,-4,3,-9,6,4,-5,7,-4,-7,9,1,-10,-2,6,1,3,-3,9,-3,-6,-9,3,-3,4,-10,-3,2,-6,10,8,-8,-9,9,4,2,-2,1,8,-2,3,-7,1,-10,4,10,3,4,8,-7,7,6,-10,-5,-8,1,1,10,7,-10,9,-2,-8,4,2,-10,-1,-10,-3,7,4,-5,-6,-8,2,-2,5,-3,4,9,-9,7,-7,-10,6,4,-7,-6,3,-4,9,7,-1,9,10,-3,8,10,1,-6,9,-6,8,-7,-5,7,6,9,6,5,5,6,2,-9,-6,-9,-4,9,-8,-4,-7,8,-6,-3,5,8,-9,-5,10,1,8,9,4,7,-6,4,1,7,1,10,9,7,-2,-7,6,-8,-8,10,9,-6,6,6,-4,-7,-4,-2,-4,-1,1,1,-9,-4,8,-1,-1,1,8,7,2,-8,8,1,9,10,-1,-9,-2,9,7,8,-6,-5,6,-8,-5,-5,8,-9,-10,-9,2,1,-3,7,-10,-9,-3,3,-8,8,-1,8,-10,6,-6,1,5,3,4,-9,4,-3,4,-6,10,4,10,-1,-9,-2,-4,-2,-7,-10,-2,5,8,-2,-5,3,-4,-5,10,-7,-2,3,-2,-8,7,-1,-6,-6,-6,5,7,-7,6,7,7,-5,5,-9,-1,7,3,-9,-4,-1,3,2,-5,-3,10,-7,6,-7,7,9,3,8,-3,4,1,-8,1,-4,-8,7,9,-6,-3,-7,1,2,1,9,-6,1,-8,10,2,8,-1,9,-9,6,-10,-4,-8,-4,-6,-2,5,10,6,-3,-5,8,5,7,-2,6,5,-4,8,-1,2,7,-9,-1,8,-1,4,-9,7,-3,-7,3,-8,-5,7,-1,9,6,-6,1,10,4,-1,3,9,7,4,7,10,-10,-6,-8,2,3,3,-1,5,-9,8,-4,-7,-2,2,-6,-3,-9,-9,4,-3,9,-10,-8,-6,1,8,-1,-6,-7,6,3,10,-8,1,10,10,9,-8,5,4,7,9,9,5,-6,-1,-8,-10,-2,8,-2,-3,-8,-8,4,9,5,3,3,-2,-9,-7,6,5,6,-1,-4,9,-7,5,10,5,1,-9,-6,-5,-4,3,-8,9,4,4,6,7,2,-5,7,-8,-9,-5,6,1,-2,3,5,-6,3,4,-5,5,7,10,1,2,-4,7,7,-1,4,-1,-5,-7,-8,10,-4,-3,-4,-2,-2,4,-1,6,-1,-9,1,4,-8,6,2,1,2,4,8,2,-10,8,9,1,10,-5,-9,-9,-9,-3,5,-6,8,5,-6,10,5,-1,-1,-6,-2,4,-1,-8,-9,3,5,-1,9,-2,2,3,7,4,8,-9,-3,2,5,6,9,8,-9,8,4,3,2,-5,-1,7,1,10,8,-9,1,8,5,5,-6,1,3,-6,-3,-3,10,-6,5,-6,-7,7,10,-8,-1,10,6,-7,-9,-3,4,7,-4,-6,8,-2,-6,-4,4,3,5,-5,9,9,5,-10,-7,-2,9,-2,7,-5,4,-9,-1,6,-10,-6,-2,-6,-6,5,-3,-6,4,-1,-3,6,-6,-4,9,-1,-2,7,4,1,10,-5,3,-5,-9,-8,5,-10,8,7,5,-8,7,-10,-1,-10,7,1,-9,6,5,2,9,10,-5,9,-5,6,-4,-2,7,3,-9,5,1,6,7,-5,-8,-8,-1,3]], dtype = "uint16")#candidate|9957|(4, 768)|const|uint16
call_9956 = relay.TupleGetItem(func_3372_call(relay.reshape(const_9957.astype('uint16'), [12, 16, 16]), relay.reshape(const_9957.astype('uint16'), [12, 16, 16]), ), 0)
call_9958 = relay.TupleGetItem(func_3375_call(relay.reshape(const_9957.astype('uint16'), [12, 16, 16]), relay.reshape(const_9957.astype('uint16'), [12, 16, 16]), ), 0)
output = relay.Tuple([bop_9947,call_9950,const_9951,const_9952,var_9953,call_9956,const_9957,])
output2 = relay.Tuple([bop_9947,call_9954,const_9951,const_9952,var_9953,call_9958,const_9957,])
func_9966 = relay.Function([var_9945,var_9946,var_9953,], output)
mod['func_9966'] = func_9966
mod = relay.transform.InferType()(mod)
var_9967 = relay.var("var_9967", dtype = "float64", shape = (11, 3, 3))#candidate|9967|(11, 3, 3)|var|float64
var_9968 = relay.var("var_9968", dtype = "float64", shape = (11, 3, 3))#candidate|9968|(11, 3, 3)|var|float64
var_9969 = relay.var("var_9969", dtype = "uint64", shape = (900,))#candidate|9969|(900,)|var|uint64
output = func_9966(var_9967,var_9968,var_9969,)
func_9970 = relay.Function([var_9967,var_9968,var_9969,], output)
mutated_mod['func_9970'] = func_9970
mutated_mod = relay.transform.InferType()(mutated_mod)
func_9757_call = mod.get_global_var('func_9757')
func_9759_call = mutated_mod.get_global_var('func_9759')
call_9977 = relay.TupleGetItem(func_9757_call(), 1)
call_9978 = relay.TupleGetItem(func_9759_call(), 1)
func_8131_call = mod.get_global_var('func_8131')
func_8135_call = mutated_mod.get_global_var('func_8135')
var_9985 = relay.var("var_9985", dtype = "uint64", shape = (900,))#candidate|9985|(900,)|var|uint64
call_9984 = relay.TupleGetItem(func_8131_call(relay.reshape(var_9985.astype('uint64'), [900,]), relay.reshape(call_9977.astype('float64'), [10, 8, 3]), ), 0)
call_9986 = relay.TupleGetItem(func_8135_call(relay.reshape(var_9985.astype('uint64'), [900,]), relay.reshape(call_9977.astype('float64'), [10, 8, 3]), ), 0)
const_9988 = relay.const([[[9,-10,-9,2],[-8,-10,-6,1],[8,2,-9,1]],[[3,3,2,-2],[1,4,6,8],[6,10,-6,-10]]], dtype = "uint32")#candidate|9988|(2, 3, 4)|const|uint32
bop_9989 = relay.less_equal(call_9984.astype('bool'), const_9988.astype('bool')) # shape=(2, 3, 4)
bop_9992 = relay.less_equal(call_9986.astype('bool'), const_9988.astype('bool')) # shape=(2, 3, 4)
func_9177_call = mod.get_global_var('func_9177')
func_9179_call = mutated_mod.get_global_var('func_9179')
call_10011 = relay.TupleGetItem(func_9177_call(), 0)
call_10012 = relay.TupleGetItem(func_9179_call(), 0)
uop_10016 = relay.cos(var_9985.astype('float64')) # shape=(900,)
output = relay.Tuple([call_9977,bop_9989,call_10011,uop_10016,])
output2 = relay.Tuple([call_9978,bop_9992,call_10012,uop_10016,])
func_10036 = relay.Function([var_9985,], output)
mod['func_10036'] = func_10036
mod = relay.transform.InferType()(mod)
mutated_mod['func_10036'] = func_10036
mutated_mod = relay.transform.InferType()(mutated_mod)
var_10037 = relay.var("var_10037", dtype = "uint64", shape = (900,))#candidate|10037|(900,)|var|uint64
func_10036_call = mutated_mod.get_global_var('func_10036')
call_10038 = func_10036_call(var_10037)
output = call_10038
func_10039 = relay.Function([var_10037], output)
mutated_mod['func_10039'] = func_10039
mutated_mod = relay.transform.InferType()(mutated_mod)
func_8224_call = mod.get_global_var('func_8224')
func_8225_call = mutated_mod.get_global_var('func_8225')
call_10046 = relay.TupleGetItem(func_8224_call(), 0)
call_10047 = relay.TupleGetItem(func_8225_call(), 0)
output = relay.Tuple([call_10046,])
output2 = relay.Tuple([call_10047,])
func_10102 = relay.Function([], output)
mod['func_10102'] = func_10102
mod = relay.transform.InferType()(mod)
mutated_mod['func_10102'] = func_10102
mutated_mod = relay.transform.InferType()(mutated_mod)
func_10102_call = mutated_mod.get_global_var('func_10102')
call_10103 = func_10102_call()
output = call_10103
func_10104 = relay.Function([], output)
mutated_mod['func_10104'] = func_10104
mutated_mod = relay.transform.InferType()(mutated_mod)
var_10110 = relay.var("var_10110", dtype = "float32", shape = ())#candidate|10110|()|var|float32
var_10111 = relay.var("var_10111", dtype = "float32", shape = (10, 1, 8))#candidate|10111|(10, 1, 8)|var|float32
bop_10112 = relay.greater_equal(var_10110.astype('bool'), var_10111.astype('bool')) # shape=(10, 1, 8)
func_4307_call = mod.get_global_var('func_4307')
func_4311_call = mutated_mod.get_global_var('func_4311')
var_10117 = relay.var("var_10117", dtype = "float32", shape = (12,))#candidate|10117|(12,)|var|float32
const_10118 = relay.const([[-4,6,7,6,6,-1,-2,8,-9,-7],[9,1,3,-6,10,8,-2,-5,-8,3],[5,-4,-2,-2,3,7,1,3,4,4],[-3,9,9,-6,-6,-1,-4,8,5,6],[1,-10,-3,-6,-2,10,-5,1,-4,-10],[-6,1,-6,-8,1,1,-9,-6,-3,1],[5,3,2,-3,-10,5,4,8,7,2],[-1,-1,3,-5,4,-4,-7,6,-10,6],[-1,-6,10,-4,-1,4,7,-4,-7,-7],[-5,7,-7,-3,-3,4,3,9,-5,8],[-1,-8,2,-1,1,9,10,-9,-10,-3],[-5,-6,-9,2,10,-2,4,9,1,4],[-7,-9,-8,3,3,8,-3,6,9,-7],[-8,10,-8,10,7,1,-7,-1,1,3],[-10,-3,7,-6,-7,-7,-2,9,-6,-7],[-2,-6,-3,6,-3,-7,1,-5,-9,-7],[1,-1,1,-3,8,-9,-2,-9,-4,-8],[-1,-9,7,3,2,-2,1,6,-3,8],[-10,-2,-2,5,4,-2,-8,-1,2,1],[-1,-8,8,6,-4,-5,-9,-5,7,-6],[3,10,-8,8,-3,5,2,6,-9,3],[7,8,-4,7,-4,4,3,-1,-3,3],[8,9,3,-1,-8,-8,4,-10,-8,10],[2,-1,6,-5,3,-4,-8,-2,-8,5],[-9,2,-8,2,3,-10,-3,-9,-5,9],[-2,8,8,3,4,4,3,-7,-10,9],[-8,-8,9,4,-2,1,-8,6,-8,-1],[-8,-4,-1,-4,-9,-6,-9,1,-10,4],[-10,5,-2,3,1,10,9,2,6,-4],[-6,-5,-3,-7,-1,-6,-5,-10,-4,-7],[-7,6,-5,-9,-6,-8,-1,1,9,-8],[8,3,5,-10,-6,-5,8,-10,-2,5],[-2,-2,6,-1,-1,7,-3,3,-2,8],[-2,3,-4,4,-4,8,2,2,-3,-4],[10,-6,-2,10,3,-3,10,-6,9,-2],[7,-8,10,-8,3,-1,-3,-5,-7,-10],[4,7,7,8,-3,8,10,10,8,-5],[2,-3,3,10,4,10,3,-1,1,6],[-10,6,2,2,-8,10,-2,-4,8,3],[-6,-9,-10,-9,10,5,-2,9,-10,6],[7,5,7,-2,-5,-9,10,10,-8,1],[8,7,-8,6,9,-4,-7,6,8,9],[5,-6,5,4,-7,-1,-10,7,-5,4],[6,-10,6,-7,6,-10,3,7,-2,-1],[-6,5,9,2,6,9,5,-5,5,-7],[-5,3,5,-5,-3,-7,9,2,4,3],[9,2,-1,-5,6,-9,-1,10,-4,-2],[-3,3,10,9,9,-4,4,-4,-2,1],[-3,10,3,-9,-6,2,-9,-1,-10,3],[-2,10,2,1,3,1,-2,-1,4,2],[2,-1,-2,-1,3,-4,10,1,7,3],[5,7,8,4,7,-2,-3,9,-5,8],[4,-3,7,6,9,6,-5,3,3,5],[-5,-9,10,-4,10,-3,5,7,-1,5],[-4,3,-8,-3,6,-10,-5,-1,-1,-3],[8,-3,3,4,5,-5,-4,8,-7,-2],[-9,5,-5,2,-1,5,1,4,-2,-10],[-2,5,3,8,6,-2,6,2,4,-7],[9,6,-2,5,-1,-10,-10,-8,10,-3],[-8,3,4,5,-9,3,-4,9,-1,9],[-1,-4,-8,4,-10,4,5,4,-3,5],[1,8,-9,1,-3,-2,1,-5,-8,-7],[-7,-6,10,-2,-9,3,-7,5,-9,-5],[-9,5,1,-9,9,9,10,-10,7,3],[9,6,-8,1,7,8,-1,6,-4,-2],[4,3,-7,4,5,10,1,1,6,7],[-5,9,-1,-1,1,-10,-5,9,-5,7],[-8,7,6,-1,7,-8,-4,-10,4,-9],[-5,2,-1,-5,3,10,3,-3,3,-1],[-3,-5,-8,1,6,-8,1,4,-8,10],[-3,3,6,-2,1,1,2,2,-1,-1],[4,-10,9,9,-3,9,9,-9,-7,8],[-6,-3,-3,10,9,-2,3,10,-6,-9],[9,-4,-9,7,-5,5,2,-4,4,-10],[9,8,4,6,-8,-8,3,7,-6,-8],[-9,-6,3,-9,-6,-10,3,-7,-7,-6],[7,3,-9,-10,7,7,10,-1,1,-10],[1,2,-1,10,3,4,-3,10,9,6],[-9,-4,-4,4,4,-4,7,8,6,-5],[-3,1,-5,-7,-2,-10,4,9,-8,-3],[8,-7,5,2,-3,-2,-5,-2,3,-5],[-2,5,-9,-4,-9,1,-6,2,-4,-3],[-9,-3,6,-5,7,-4,-6,-7,-3,-4],[-9,10,3,-5,4,4,-2,10,-4,-9],[-8,10,-1,-1,-7,9,-9,-1,10,-9],[-5,2,10,5,8,5,-8,9,5,6],[-4,7,-5,-6,-4,9,-10,7,2,5],[10,7,-8,-7,-4,-4,9,2,10,9],[4,5,9,-5,-8,3,2,-5,-6,-3],[7,-9,-1,-2,-8,6,1,8,-7,-2]], dtype = "uint64")#candidate|10118|(90, 10)|const|uint64
call_10116 = relay.TupleGetItem(func_4307_call(relay.reshape(var_10110.astype('float32'), []), relay.reshape(var_10117.astype('float32'), [1, 12]), relay.reshape(const_10118.astype('uint64'), [900, 1]), ), 1)
call_10119 = relay.TupleGetItem(func_4311_call(relay.reshape(var_10110.astype('float32'), []), relay.reshape(var_10117.astype('float32'), [1, 12]), relay.reshape(const_10118.astype('uint64'), [900, 1]), ), 1)
bop_10150 = relay.maximum(var_10111.astype('uint64'), var_10110.astype('uint64')) # shape=(10, 1, 8)
uop_10157 = relay.sqrt(var_10111.astype('float32')) # shape=(10, 1, 8)
func_5050_call = mod.get_global_var('func_5050')
func_5053_call = mutated_mod.get_global_var('func_5053')
var_10161 = relay.var("var_10161", dtype = "float64", shape = (300, 4))#candidate|10161|(300, 4)|var|float64
call_10160 = relay.TupleGetItem(func_5050_call(relay.reshape(var_10161.astype('float64'), [12, 100])), 0)
call_10162 = relay.TupleGetItem(func_5053_call(relay.reshape(var_10161.astype('float64'), [12, 100])), 0)
func_9556_call = mod.get_global_var('func_9556')
func_9558_call = mutated_mod.get_global_var('func_9558')
call_10168 = relay.TupleGetItem(func_9556_call(relay.reshape(call_10160.astype('float32'), [9, 8, 7])), 1)
call_10169 = relay.TupleGetItem(func_9558_call(relay.reshape(call_10160.astype('float32'), [9, 8, 7])), 1)
func_8206_call = mod.get_global_var('func_8206')
func_8207_call = mutated_mod.get_global_var('func_8207')
call_10177 = func_8206_call()
call_10178 = func_8206_call()
bop_10179 = relay.not_equal(call_10160.astype('bool'), var_10110.astype('bool')) # shape=(4, 14, 9)
bop_10182 = relay.not_equal(call_10162.astype('bool'), var_10110.astype('bool')) # shape=(4, 14, 9)
bop_10199 = relay.not_equal(uop_10157.astype('bool'), relay.reshape(var_10111.astype('bool'), relay.shape_of(uop_10157))) # shape=(10, 1, 8)
func_3661_call = mod.get_global_var('func_3661')
func_3664_call = mutated_mod.get_global_var('func_3664')
const_10221 = relay.const([[False],[False],[True],[False],[False],[True],[False],[True],[True],[False],[True],[False],[False],[True],[True],[True],[False],[False],[False],[True],[False],[False],[True],[True],[False],[False],[True],[False],[True],[True],[False],[True],[True],[True],[True],[False],[False],[False],[True],[False],[False],[True],[False],[False],[False],[True],[False],[False],[True],[False],[True],[False],[False],[False],[True],[False],[False],[False],[False],[True],[True],[False],[True],[True],[False],[False],[True],[False],[False],[False],[False],[True],[True],[False],[True],[True],[True],[True],[True],[True],[False],[False],[True],[False],[False],[False],[True],[True],[False],[True],[False],[False],[False],[True],[True],[False],[False],[False],[False],[False],[False],[True],[True],[False],[True],[True],[True],[True],[False],[True],[False],[False],[True],[True],[True],[False],[True],[False],[True],[True],[True],[True],[True],[True],[True],[False],[True],[True],[False],[False],[True],[True],[True],[True],[True],[False],[False],[False],[True],[False],[True],[True],[True],[True]], dtype = "bool")#candidate|10221|(144, 1)|const|bool
call_10220 = func_3661_call(relay.reshape(const_10221.astype('bool'), [3, 16, 3]), relay.reshape(const_10221.astype('bool'), [3, 16, 3]), )
call_10222 = func_3661_call(relay.reshape(const_10221.astype('bool'), [3, 16, 3]), relay.reshape(const_10221.astype('bool'), [3, 16, 3]), )
uop_10228 = relay.sinh(uop_10157.astype('float32')) # shape=(10, 1, 8)
func_1467_call = mod.get_global_var('func_1467')
func_1473_call = mutated_mod.get_global_var('func_1473')
var_10272 = relay.var("var_10272", dtype = "float32", shape = (420,))#candidate|10272|(420,)|var|float32
call_10271 = relay.TupleGetItem(func_1467_call(relay.reshape(var_10272.astype('float32'), [5, 6, 14]), relay.reshape(var_10272.astype('float32'), [5, 6, 14]), relay.reshape(var_10110.astype('uint64'), []), relay.reshape(var_10272.astype('float32'), [5, 6, 14]), ), 8)
call_10273 = relay.TupleGetItem(func_1473_call(relay.reshape(var_10272.astype('float32'), [5, 6, 14]), relay.reshape(var_10272.astype('float32'), [5, 6, 14]), relay.reshape(var_10110.astype('uint64'), []), relay.reshape(var_10272.astype('float32'), [5, 6, 14]), ), 8)
output = relay.Tuple([bop_10112,call_10116,var_10117,const_10118,bop_10150,var_10161,call_10168,call_10177,bop_10179,bop_10199,call_10220,const_10221,uop_10228,call_10271,var_10272,])
output2 = relay.Tuple([bop_10112,call_10119,var_10117,const_10118,bop_10150,var_10161,call_10169,call_10178,bop_10182,bop_10199,call_10222,const_10221,uop_10228,call_10273,var_10272,])
func_10276 = relay.Function([var_10110,var_10111,var_10117,var_10161,var_10272,], output)
mod['func_10276'] = func_10276
mod = relay.transform.InferType()(mod)
mutated_mod['func_10276'] = func_10276
mutated_mod = relay.transform.InferType()(mutated_mod)
func_10276_call = mutated_mod.get_global_var('func_10276')
var_10278 = relay.var("var_10278", dtype = "float32", shape = ())#candidate|10278|()|var|float32
var_10279 = relay.var("var_10279", dtype = "float32", shape = (10, 1, 8))#candidate|10279|(10, 1, 8)|var|float32
var_10280 = relay.var("var_10280", dtype = "float32", shape = (12,))#candidate|10280|(12,)|var|float32
var_10281 = relay.var("var_10281", dtype = "float64", shape = (300, 4))#candidate|10281|(300, 4)|var|float64
var_10282 = relay.var("var_10282", dtype = "float32", shape = (420,))#candidate|10282|(420,)|var|float32
call_10277 = func_10276_call(var_10278,var_10279,var_10280,var_10281,var_10282,)
output = call_10277
func_10283 = relay.Function([var_10278,var_10279,var_10280,var_10281,var_10282,], output)
mutated_mod['func_10283'] = func_10283
mutated_mod = relay.transform.InferType()(mutated_mod)
func_8206_call = mod.get_global_var('func_8206')
func_8207_call = mutated_mod.get_global_var('func_8207')
call_10288 = func_8206_call()
call_10289 = func_8206_call()
uop_10292 = relay.log2(call_10288.astype('float32')) # shape=(10, 8, 3)
uop_10294 = relay.log2(call_10289.astype('float32')) # shape=(10, 8, 3)
func_9424_call = mod.get_global_var('func_9424')
func_9425_call = mutated_mod.get_global_var('func_9425')
call_10306 = relay.TupleGetItem(func_9424_call(), 1)
call_10307 = relay.TupleGetItem(func_9425_call(), 1)
func_8524_call = mod.get_global_var('func_8524')
func_8526_call = mutated_mod.get_global_var('func_8526')
call_10315 = func_8524_call()
call_10316 = func_8524_call()
output = relay.Tuple([uop_10292,call_10306,call_10315,])
output2 = relay.Tuple([uop_10294,call_10307,call_10316,])
func_10320 = relay.Function([], output)
mod['func_10320'] = func_10320
mod = relay.transform.InferType()(mod)
mutated_mod['func_10320'] = func_10320
mutated_mod = relay.transform.InferType()(mutated_mod)
func_10320_call = mutated_mod.get_global_var('func_10320')
call_10321 = func_10320_call()
output = call_10321
func_10322 = relay.Function([], output)
mutated_mod['func_10322'] = func_10322
mutated_mod = relay.transform.InferType()(mutated_mod)
func_8843_call = mod.get_global_var('func_8843')
func_8844_call = mutated_mod.get_global_var('func_8844')
call_10361 = func_8843_call()
call_10362 = func_8843_call()
uop_10368 = relay.log(call_10361.astype('float64')) # shape=(10, 8, 3)
uop_10370 = relay.log(call_10362.astype('float64')) # shape=(10, 8, 3)
output = relay.Tuple([uop_10368,])
output2 = relay.Tuple([uop_10370,])
func_10385 = relay.Function([], output)
mod['func_10385'] = func_10385
mod = relay.transform.InferType()(mod)
output = func_10385()
func_10386 = relay.Function([], output)
mutated_mod['func_10386'] = func_10386
mutated_mod = relay.transform.InferType()(mutated_mod)
func_9785_call = mod.get_global_var('func_9785')
func_9786_call = mutated_mod.get_global_var('func_9786')
call_10398 = relay.TupleGetItem(func_9785_call(), 0)
call_10399 = relay.TupleGetItem(func_9786_call(), 0)
output = call_10398
output2 = call_10399
func_10400 = relay.Function([], output)
mod['func_10400'] = func_10400
mod = relay.transform.InferType()(mod)
output = func_10400()
func_10401 = relay.Function([], output)
mutated_mod['func_10401'] = func_10401
mutated_mod = relay.transform.InferType()(mutated_mod)
func_10385_call = mod.get_global_var('func_10385')
func_10386_call = mutated_mod.get_global_var('func_10386')
call_10454 = relay.TupleGetItem(func_10385_call(), 0)
call_10455 = relay.TupleGetItem(func_10386_call(), 0)
func_9757_call = mod.get_global_var('func_9757')
func_9759_call = mutated_mod.get_global_var('func_9759')
call_10457 = relay.TupleGetItem(func_9757_call(), 1)
call_10458 = relay.TupleGetItem(func_9759_call(), 1)
bop_10472 = relay.logical_and(call_10457.astype('bool'), relay.reshape(call_10454.astype('bool'), relay.shape_of(call_10457))) # shape=(10, 8, 3)
bop_10475 = relay.logical_and(call_10458.astype('bool'), relay.reshape(call_10455.astype('bool'), relay.shape_of(call_10458))) # shape=(10, 8, 3)
const_10477 = relay.const([[[9.363539,5.494770,6.512112],[-0.280398,4.017827,-9.616275],[-3.441749,-2.628213,-9.390396],[6.923702,-3.805656,2.157375],[6.569452,-8.611736,-9.016797],[-6.653170,8.091248,-2.540131],[7.288580,4.668256,7.171691],[-3.664046,7.789548,-9.398558]],[[0.961848,-2.895991,-6.191117],[0.065238,6.605611,-2.189230],[4.517777,0.614809,-5.673945],[-6.838102,-3.232663,5.857839],[5.476310,6.847330,-8.360186],[1.892268,6.785926,-2.204105],[7.911385,3.255776,8.442448],[-0.425534,-0.878544,4.484160]],[[1.321700,1.808269,2.656717],[1.425280,-7.043129,0.442802],[-0.727033,-9.975785,-1.676090],[-3.679096,-1.127654,-8.179695],[1.525481,0.470389,-3.109741],[4.267698,-2.308912,7.817647],[3.876316,-0.350593,0.664213],[-0.305264,-9.012022,1.347608]],[[0.402313,-4.442425,4.362297],[5.717983,6.612961,8.331552],[0.839908,-1.723099,4.516314],[-7.163738,-0.613538,-7.188529],[-3.166299,-9.458187,-6.001826],[-7.768328,8.346876,9.013544],[9.263945,6.213457,8.778017],[8.808057,7.168940,-9.710277]],[[8.244135,8.232467,-7.675975],[-9.802264,5.455619,3.367675],[-6.793722,4.303034,5.162754],[7.256727,-6.640522,5.788403],[5.851398,-5.001909,-6.500947],[3.402473,5.160714,-7.079784],[-5.647678,0.544071,1.028988],[3.239970,-2.550000,9.259624]],[[-8.720800,-5.352158,2.563320],[-0.633548,-6.391110,-1.855846],[-0.989229,3.995702,-1.224280],[8.481380,-6.041676,-6.525352],[9.748372,4.433866,4.942492],[1.979705,8.681531,-9.372729],[-3.178938,6.726108,8.826090],[0.597817,8.084705,-4.863463]],[[-7.824118,2.393648,-8.396702],[-2.440237,2.635785,7.380637],[-8.004896,-7.277103,-6.156317],[7.278440,-7.447989,-0.626700],[-1.660591,2.187879,-3.915597],[0.992837,9.275778,2.943462],[6.229200,9.012132,1.584961],[6.975127,-8.900105,-5.990061]],[[-0.904924,9.550525,-7.870897],[-4.365405,7.775910,7.416201],[4.459054,2.785013,1.277294],[-8.934216,-1.375432,5.510141],[-5.065324,-2.181154,5.208264],[-0.924550,-0.495675,-3.348064],[5.608282,6.935585,-1.093265],[-2.892357,9.251307,-2.509467]],[[-9.984332,0.963136,-0.546175],[-3.237206,5.797899,5.254790],[6.724280,-2.058088,1.025438],[0.058513,-8.721544,-7.606937],[6.243204,-4.611554,-8.435305],[1.639841,-6.557422,8.168814],[6.400361,2.607264,-8.398211],[9.424104,-0.727735,5.692469]],[[-5.716039,-4.574129,2.181373],[7.044039,3.818039,-1.964809],[-0.872549,-0.568287,-9.426966],[-5.402410,-7.219581,6.535152],[-3.334301,-0.122071,-6.515395],[4.078036,-3.892406,7.981445],[-3.121782,-7.257800,4.126828],[3.824176,-3.960194,-0.686498]]], dtype = "float64")#candidate|10477|(10, 8, 3)|const|float64
bop_10478 = relay.not_equal(call_10454.astype('bool'), relay.reshape(const_10477.astype('bool'), relay.shape_of(call_10454))) # shape=(10, 8, 3)
bop_10481 = relay.not_equal(call_10455.astype('bool'), relay.reshape(const_10477.astype('bool'), relay.shape_of(call_10455))) # shape=(10, 8, 3)
output = relay.Tuple([bop_10472,bop_10478,])
output2 = relay.Tuple([bop_10475,bop_10481,])
func_10494 = relay.Function([], output)
mod['func_10494'] = func_10494
mod = relay.transform.InferType()(mod)
output = func_10494()
func_10495 = relay.Function([], output)
mutated_mod['func_10495'] = func_10495
mutated_mod = relay.transform.InferType()(mutated_mod)
func_10102_call = mod.get_global_var('func_10102')
func_10104_call = mutated_mod.get_global_var('func_10104')
call_10502 = relay.TupleGetItem(func_10102_call(), 0)
call_10503 = relay.TupleGetItem(func_10104_call(), 0)
output = call_10502
output2 = call_10503
func_10532 = relay.Function([], output)
mod['func_10532'] = func_10532
mod = relay.transform.InferType()(mod)
output = func_10532()
func_10533 = relay.Function([], output)
mutated_mod['func_10533'] = func_10533
mutated_mod = relay.transform.InferType()(mutated_mod)
var_10542 = relay.var("var_10542", dtype = "float64", shape = (15, 16, 3))#candidate|10542|(15, 16, 3)|var|float64
const_10543 = relay.const([[[0.151957,4.255441,8.212454],[1.670550,2.979075,-3.488521],[-7.699258,6.149398,5.550716],[8.478148,-8.403937,-4.208231],[-4.417672,-6.606904,-1.837008],[-9.116290,3.999939,-3.975370],[2.298277,-2.796534,6.472356],[-6.134149,-1.932667,8.556873],[-3.554659,-3.742604,-3.744322],[-5.595830,-2.884234,5.459024],[-5.970320,-3.260346,-1.174265],[0.093416,4.851186,-4.712387],[-9.570063,-8.045280,-5.767856],[-1.121617,-9.981347,-6.768745],[7.537138,4.601454,9.772530],[4.192937,1.700157,9.860781]],[[-1.408500,2.160097,8.427073],[-6.737705,0.243493,-5.736093],[6.942903,-9.754647,2.204070],[-4.821981,0.958180,1.007524],[-6.309741,9.746257,-4.675976],[1.258532,7.820338,-6.770715],[8.695409,-9.219422,8.370872],[-5.769127,9.737401,6.098888],[4.726870,-6.022974,0.300283],[3.954304,-3.639720,4.297722],[-7.015888,8.110458,-6.211373],[-6.216443,-2.551576,-7.634448],[9.906240,-8.076669,5.732476],[-4.642070,0.974862,-1.097133],[-6.638280,6.592158,-5.875243],[3.762699,6.001616,-8.429161]],[[4.295027,2.252301,9.250797],[4.160144,6.960187,3.150447],[9.069855,2.886460,-7.266779],[-4.627795,-9.158409,4.892823],[-9.829044,4.729324,0.289096],[3.696631,-2.971498,9.916156],[-3.193652,-5.493763,-5.026257],[8.715530,3.192757,7.801000],[-4.394894,-4.844958,7.261352],[0.329147,2.415615,2.800882],[-1.390340,4.528756,-1.330743],[-3.228374,9.289164,-5.098082],[-0.979714,-8.441830,-3.546927],[-9.290153,6.785932,7.140963],[-5.645725,-4.341842,5.068181],[5.475852,7.230877,-3.193973]],[[8.620454,-8.996396,-7.022771],[-9.398306,-4.758245,-0.948013],[-8.656729,7.891119,-5.361844],[-6.338893,0.286600,-3.061932],[1.772623,-5.602331,-9.152362],[-5.855790,3.063682,-4.446757],[3.841030,8.907354,8.386634],[-6.433095,-0.905672,7.037405],[9.820930,0.727347,8.736400],[7.623921,5.388590,1.863181],[8.615191,8.522495,-6.094192],[-0.987301,6.913163,-9.190123],[5.423418,-5.569256,-6.743765],[-2.168039,-6.360174,2.740268],[2.484858,-5.201968,-1.026968],[-1.439972,7.580687,4.932170]],[[-2.717247,6.579030,2.435061],[-6.865617,-6.384874,-6.855004],[7.936872,-7.378350,-9.007163],[2.499705,6.482726,8.054297],[4.500658,5.114978,5.298127],[-8.261074,-1.482938,0.243216],[4.694702,-5.676273,2.932374],[7.412484,-3.843748,-9.303553],[7.118497,-5.612802,1.902228],[-8.577372,-0.001787,0.535167],[-8.424812,7.657769,6.628961],[-3.939574,-7.081079,-7.434409],[5.002971,-2.017924,-6.160874],[2.460235,-3.005387,-6.746358],[7.118850,-5.778906,-2.639385],[0.253717,-1.522128,2.486295]],[[-2.285965,-9.504624,-8.349919],[-9.324110,-0.015849,4.220643],[8.356907,-4.245238,9.342288],[4.320586,-3.516557,-2.606132],[6.624484,6.673850,-7.226692],[6.397003,5.635569,8.731604],[-2.667160,9.915570,0.635363],[3.289990,4.648363,-6.929056],[-3.733226,5.346300,-3.605383],[7.022333,-4.381838,5.097724],[6.861560,7.967819,-0.705034],[0.841113,-3.754414,-7.968873],[3.728637,-2.847092,0.556251],[6.694401,-3.751979,-6.049876],[-7.084821,-4.040099,6.090413],[5.308565,-0.030239,3.062826]],[[-8.839259,5.320163,9.406757],[-8.911385,-7.027413,-9.605853],[7.714624,3.613753,-0.303071],[-5.196778,-2.568849,4.497984],[-5.125064,-9.696310,0.332322],[-6.319259,-1.125403,-3.068189],[7.075337,5.841161,7.076983],[7.460827,0.484829,-9.389129],[7.282628,8.544010,9.634502],[1.743885,3.770554,-5.119621],[4.751371,-9.086902,0.695442],[5.865808,8.642635,-2.941066],[-4.920724,-0.838692,-6.395867],[-1.187614,8.400454,1.679606],[-3.866171,8.609653,8.617196],[6.330285,-4.265393,-1.472555]],[[-5.124395,-4.342211,-8.510557],[5.735275,-5.054698,8.244978],[-7.997225,-7.103411,7.917090],[3.493996,-4.614372,7.970667],[-5.533918,-1.398588,5.343614],[-4.810276,9.427507,4.368162],[9.932602,-7.303331,-9.252899],[9.188996,4.304041,5.365074],[3.909436,4.037909,4.648140],[0.010197,9.495805,-9.075313],[8.136698,-6.025579,5.935805],[-1.920187,-3.546248,-6.143309],[-7.410190,-0.105297,-4.695654],[-3.240374,-0.313094,0.425870],[0.376985,2.666649,0.791545],[7.414070,6.437722,4.784032]],[[6.943058,3.501102,-8.941137],[6.273525,0.349319,9.204970],[4.435893,-6.553702,9.673086],[4.462066,-6.964283,8.608367],[-6.078469,-4.027893,-7.238438],[-2.578397,-3.790150,-5.975203],[0.044181,0.496421,7.993516],[-0.168800,8.177624,-0.378392],[2.222111,1.618489,-8.998080],[6.715401,2.746339,-4.446990],[0.405941,5.341710,5.740280],[-1.898748,0.784498,5.132648],[-8.848669,4.232805,-9.559579],[-3.983165,5.424254,-4.754794],[-8.396542,-2.771971,5.772605],[-4.838491,4.357790,-5.041501]],[[5.898143,-4.171159,3.835093],[7.003166,4.677219,0.052445],[-0.733795,7.989782,0.719340],[6.648178,5.373917,3.608563],[8.659798,4.208720,7.749893],[7.574093,1.873141,-6.297815],[6.879294,-0.027322,-7.152576],[1.379208,-4.340217,4.371397],[-6.890222,0.253041,-4.937866],[-2.667605,-1.723697,7.178284],[-3.124192,-3.107204,-5.789654],[-6.346544,-0.586981,-7.093887],[-5.512465,9.704996,1.254520],[-5.799810,-4.105544,3.849665],[-0.503657,-3.772301,-9.397919],[-2.736965,-3.953721,-8.538580]],[[2.259699,-6.155200,6.206888],[6.189871,-7.449711,-1.188404],[9.428071,9.789506,8.477802],[-4.513106,5.322421,-3.738583],[-0.800064,-7.766381,-9.774949],[6.338978,8.692639,8.422702],[5.071091,-7.661234,-7.961396],[3.812093,0.109022,5.759705],[0.034411,-1.926284,-9.898411],[-9.783219,2.272561,5.470308],[5.897163,-1.486275,-0.114597],[-9.407804,-8.383587,-6.618554],[8.130069,-5.288636,-5.479294],[5.286310,6.688227,-0.516001],[0.097926,3.487195,5.526632],[-3.788815,8.262130,5.164710]],[[-4.528046,4.766927,-4.691296],[4.286683,5.999865,-9.504268],[5.889717,-9.882705,3.147638],[-5.703138,5.781196,-0.103006],[-6.526789,-6.251033,8.986160],[-8.670056,7.696708,-9.782088],[6.081387,7.469324,3.167268],[-2.970694,-2.134067,4.545477],[-9.674555,-1.874431,4.940828],[-3.260240,4.948365,-0.986985],[2.672206,-5.376175,-1.571306],[-4.283162,1.007296,4.485276],[-7.466038,8.945698,-8.318001],[-8.346676,3.193451,-4.748210],[8.500115,-3.930978,5.508887],[4.609048,6.703117,5.711651]],[[-7.784483,3.874151,-5.493189],[-6.311505,2.119500,5.274551],[1.179039,-2.472515,-1.298056],[6.413037,3.758442,-3.230729],[-3.435641,3.480931,6.524632],[-2.901120,0.254767,9.375708],[-3.576375,-4.442707,-8.276330],[5.114870,9.167167,-7.478230],[-6.767048,-5.614308,7.501524],[7.313120,-1.736117,-3.701025],[1.853876,-0.532134,-4.718382],[-9.961512,3.024074,-1.848724],[-0.567470,2.150140,2.077663],[2.318737,-5.691583,-5.140417],[-4.216755,8.265456,-6.386632],[7.784673,-0.531042,-8.813736]],[[9.921145,4.693675,1.711170],[-8.141672,1.665401,-1.662263],[9.290707,2.414557,5.401907],[-5.662256,6.240187,-7.251753],[2.165336,3.441705,4.054252],[-0.313109,6.065679,-2.219634],[-9.498548,-6.427853,-0.613660],[-4.574059,0.408377,6.523892],[1.953758,-0.798144,-0.793118],[5.262290,-6.510416,8.495311],[-2.988742,8.522572,-7.437559],[7.260289,-8.924068,-8.802253],[-4.171469,5.228267,-8.361260],[-8.575083,-5.888412,-2.957909],[9.348267,-2.497329,3.803945],[-7.216207,5.137109,7.408097]],[[0.335872,-5.790644,-7.179257],[-4.461167,-8.198514,-5.266138],[2.102042,-2.249726,-1.583924],[-9.273945,-9.579800,0.897802],[-9.200110,-5.423471,4.934346],[9.805446,-4.793735,1.355697],[2.854728,0.344120,5.390734],[-2.690202,-1.385926,-5.463162],[-8.644814,-2.887265,6.934560],[-7.656250,0.591852,6.817685],[-1.388485,6.940974,0.946856],[8.090732,2.467671,-3.584388],[6.789598,2.520351,9.334802],[-4.427448,-4.151047,7.362871],[-4.677753,8.346949,-9.538648],[1.769499,-2.798350,6.517794]]], dtype = "float64")#candidate|10543|(15, 16, 3)|const|float64
bop_10544 = relay.subtract(var_10542.astype('float64'), relay.reshape(const_10543.astype('float64'), relay.shape_of(var_10542))) # shape=(15, 16, 3)
bop_10549 = relay.floor_mod(bop_10544.astype('float32'), relay.reshape(var_10542.astype('float32'), relay.shape_of(bop_10544))) # shape=(15, 16, 3)
func_8365_call = mod.get_global_var('func_8365')
func_8367_call = mutated_mod.get_global_var('func_8367')
const_10554 = relay.const([6.889673,8.935340,3.741542,-4.797355,5.277066,4.653678,-0.306244,-6.160848,-2.214656,-1.940963,-1.243806,8.743529,-6.526812,5.880571,9.908378,-4.859718,0.233804,-9.562257,-0.676781,-5.867933,3.330672,-4.790731,-5.360004,-4.678190,7.701719,-7.494247,9.001384,3.877045,6.828650,6.516716,-3.725831,0.207824,9.968106,-5.640399,-6.653135,3.462584,3.986174,-1.367392,-8.537453,-6.507954,9.458481,4.188516,1.659887,-0.027921,-8.966161,4.552009,6.936330,-4.373260,-2.468080,-1.642426,0.103749,-3.731110,4.903834,-7.039762,3.730204,2.290901,-2.004085,1.350452,-8.819385,-1.817203,3.250640,5.278043,4.529009,1.424212,-3.269214,-3.722319,9.325339,-0.050274,6.502811,-9.521748,-1.133702,6.355485,6.496652,-2.795953,1.620726,-2.461086,-3.039184,2.336538,7.791696,5.238153,0.258786,7.574758,8.614892,5.841591,7.730981,4.927731,-0.725361,-0.294138,-1.830978,9.325392,7.062944,-0.929027,1.871553,6.014017,7.237687,-2.227471,3.580644,5.492682,-6.240961,9.221253,3.181990,8.913204,-6.147326,4.015358,-2.575642,-4.766473,-5.589548,1.017522,-0.457694,-2.692358,2.971009,-4.782232,-6.124506,9.436250,1.955859,-3.890107,-7.464884,-2.139897,7.781788,3.730886,-2.969207,-5.587987,-3.069117,-0.720514,-5.046896,-1.159292,1.625897,-5.149625,7.325179,-0.713301,5.980995,5.060727,-2.549452,-7.105505,1.428180,1.194416,1.844152,-7.506682,4.902133,-4.939906,7.126702,-8.241035,-9.609224,-5.538785,-6.957999,-5.688918,-4.190587,3.959537,3.308641,-0.391933,7.779527,-6.177397,7.648049,1.860060,5.207782,9.406660,-9.385586,4.120190,-4.778591,-8.523328,4.652348,-1.403792,-9.018664,-3.203981,2.601952], dtype = "float32")#candidate|10554|(165,)|const|float32
call_10553 = relay.TupleGetItem(func_8365_call(relay.reshape(const_10554.astype('float32'), [3, 11, 5])), 0)
call_10555 = relay.TupleGetItem(func_8367_call(relay.reshape(const_10554.astype('float32'), [3, 11, 5])), 0)
uop_10572 = relay.cos(var_10542.astype('float32')) # shape=(15, 16, 3)
output = relay.Tuple([bop_10549,call_10553,const_10554,uop_10572,])
output2 = relay.Tuple([bop_10549,call_10555,const_10554,uop_10572,])
func_10585 = relay.Function([var_10542,], output)
mod['func_10585'] = func_10585
mod = relay.transform.InferType()(mod)
var_10586 = relay.var("var_10586", dtype = "float64", shape = (15, 16, 3))#candidate|10586|(15, 16, 3)|var|float64
output = func_10585(var_10586)
func_10587 = relay.Function([var_10586], output)
mutated_mod['func_10587'] = func_10587
mutated_mod = relay.transform.InferType()(mutated_mod)
var_10627 = relay.var("var_10627", dtype = "float32", shape = (5, 13, 5))#candidate|10627|(5, 13, 5)|var|float32
uop_10628 = relay.exp(var_10627.astype('float32')) # shape=(5, 13, 5)
output = relay.Tuple([uop_10628,])
output2 = relay.Tuple([uop_10628,])
func_10642 = relay.Function([var_10627,], output)
mod['func_10642'] = func_10642
mod = relay.transform.InferType()(mod)
var_10643 = relay.var("var_10643", dtype = "float32", shape = (5, 13, 5))#candidate|10643|(5, 13, 5)|var|float32
output = func_10642(var_10643)
func_10644 = relay.Function([var_10643], output)
mutated_mod['func_10644'] = func_10644
mutated_mod = relay.transform.InferType()(mutated_mod)
func_10494_call = mod.get_global_var('func_10494')
func_10495_call = mutated_mod.get_global_var('func_10495')
call_10646 = relay.TupleGetItem(func_10494_call(), 1)
call_10647 = relay.TupleGetItem(func_10495_call(), 1)
func_8282_call = mod.get_global_var('func_8282')
func_8283_call = mutated_mod.get_global_var('func_8283')
call_10651 = func_8282_call()
call_10652 = func_8282_call()
bop_10666 = relay.less(call_10646.astype('bool'), relay.reshape(call_10651.astype('bool'), relay.shape_of(call_10646))) # shape=(10, 8, 3)
bop_10669 = relay.less(call_10647.astype('bool'), relay.reshape(call_10652.astype('bool'), relay.shape_of(call_10647))) # shape=(10, 8, 3)
func_1467_call = mod.get_global_var('func_1467')
func_1473_call = mutated_mod.get_global_var('func_1473')
const_10676 = relay.const([-1.459224,6.689216,-3.432263,-0.304236,-9.239512,-6.438483,2.303203,5.943505,9.014528,4.113514,-1.088352,9.524550,8.110176,-3.211177,9.266572,-1.103247,1.200318,-6.000914,1.922834,0.887001,-1.882179,-9.575718,-4.903645,8.951943,6.461030,-8.285841,5.047013,-9.846149,-9.788622,-6.909518,-0.281549,3.669936,-1.098996,1.023084,-0.333132,-3.259130,-4.159285,8.731975,-0.033902,-8.407211,0.501313,3.720787,-7.786933,0.953589,7.166271,5.398311,-9.720333,5.318789,-8.493809,-6.671868,5.267132,-3.777065,-1.656095,-0.637035,-9.908620,-0.323500,-6.324334,-1.343932,8.723064,8.930608,5.823191,-0.784835,9.452812,1.358550,-1.839311,4.072341,-2.503705,0.458594,5.594279,5.457226,8.545453,8.611138,5.178248,-6.667266,7.536067,7.911344,-8.345369,4.842526,0.287239,-2.473679,-1.701952,3.547636,5.674039,6.509819,7.701463,-4.166708,6.992531,-2.176124,6.010889,8.697204,-7.727274,-9.381377,2.177981,-0.020061,-7.659244,-1.507501,-4.890997,3.247541,7.801498,-5.223462,7.861343,4.185748,-3.356104,3.680435,-4.523666,7.301210,-3.528520,-5.605412,4.795477,-2.768159,1.037744,-9.532454,7.768060,2.351417,9.067147,6.248444,-4.791881,4.184421,-1.997696,-3.073152,9.061132,3.601745,3.076091,2.561051,-4.525896,-8.384375,6.622690,-5.575193,-6.497496,5.456743,5.256037,-8.396163,7.523952,2.533591,1.386168,-4.456873,1.216508,-7.464459,3.995269,0.118350,0.433894,1.637558,-5.744678,6.841793,7.111724,-7.603054,6.978904,-8.373211,-6.087703,-1.147140,-1.494610,5.407959,-0.396768,-1.007550,2.614355,-7.350399,-0.663194,5.361004,9.241247,3.417333,1.517383,6.223228,6.715005,5.489639,9.955194,5.542338,4.411579,8.063503,-3.698781,9.157220,2.624067,-9.750426,-4.644535,4.930650,8.167185,-4.466785,-3.368246,4.187323,-0.002460,-4.222526,8.045157,5.067363,-0.839584,-8.504748,-5.392383,-2.869834,1.718357,7.762362,0.439877,5.519396,-8.829940,8.758744,-1.390582,-1.251302,-8.794035,-1.863059,-6.402327,-1.619510,0.216447,1.623413,-8.138912,5.313431,-5.208158,5.248723,0.754814,-9.546609,8.721645,5.448300,2.702417,-9.898558,-4.133633,5.621295,-7.343654,5.184994,-8.737569,9.105024,-1.520208,9.298161,-1.146052,-5.556934,0.841007,6.805598,5.419611,-6.191775,-6.053071,-4.889547,-7.456930,4.641666,5.752871,-6.377595,4.800185,-8.658115,-7.622576,-8.708973,6.808894,7.409393,-0.069526,5.577876,5.488799,-6.558961,-8.839801,-3.753703,-5.882772,6.730950,-1.597913,2.104404,8.398946,9.672123,2.459725,-0.748343,0.128704,-5.593061,-7.320292,6.647521,8.725652,8.175485,-2.147788,-9.430383,4.529003,-9.734335,4.162310,4.219932,7.681262,1.805304,2.523154,6.236587,0.310141,-9.962542,9.306086,5.661954,2.992258,-3.754593,-5.368859,-6.988412,-9.449978,5.719261,-4.647250,0.546863,7.726402,5.230410,-0.478190,1.403096,-6.372322,-7.538597,8.950781,-7.688979,-3.436527,-3.529652,-3.047695,9.852656,5.807948,-0.491605,7.168758,-4.563346,-8.612412,9.854326,-0.127824,-6.319402,-0.364015,3.127233,-2.351553,-9.414428,-6.042120,5.315535,6.540880,-3.492311,9.328611,5.844665,-4.783471,-5.658808,4.072250,8.436454,-0.286833,-3.709257,-3.784400,9.193837,1.548840,-7.763778,-5.226054,-6.955661,-3.565211,9.493941,-5.522668,-3.681330,-8.978664,3.103395,3.088542,7.090934,5.506724,-0.458465,6.520237,-5.031675,-0.171827,1.962796,8.056215,-7.313900,-2.273527,8.603701,-3.325458,4.886846,-5.230002,-9.109737,6.082728,-4.135064,7.268048,9.377111,-7.949136,-9.329067,-3.000685,5.278859,0.548645,0.500484,2.402415,-4.690480,-1.399239,-2.438439,5.940468,-0.585689,3.137375,5.738092,-6.502604,5.962939,-2.163550,0.584244,4.043855,-9.726045,-8.384322,-5.516049,5.806500,-8.675607,-2.555961,-6.178984,2.306430,1.766038,9.991742,-5.541508,0.732617,-7.923226,8.987119,-0.963429,9.745560,0.349553,-9.224988,9.860607,5.997978,2.714791,0.667965,2.979759,8.223323,3.476092,8.817865,-4.161228,1.805345,-5.770387,-1.708259,-9.310501,-3.668353,6.942054,7.276693,-0.501092,-0.173347,5.500719,9.774061,9.938452,7.083116,-0.730471,-2.383502,1.771389,0.465162,-8.804169,-2.965027,1.888936,-2.159896,5.899285,-6.164225,-7.804566,3.713872,-0.428822,-2.489185,5.215800], dtype = "float32")#candidate|10676|(420,)|const|float32
var_10677 = relay.var("var_10677", dtype = "uint64", shape = ())#candidate|10677|()|var|uint64
call_10675 = relay.TupleGetItem(func_1467_call(relay.reshape(const_10676.astype('float32'), [5, 6, 14]), relay.reshape(const_10676.astype('float32'), [5, 6, 14]), relay.reshape(var_10677.astype('uint64'), []), relay.reshape(const_10676.astype('float32'), [5, 6, 14]), ), 3)
call_10678 = relay.TupleGetItem(func_1473_call(relay.reshape(const_10676.astype('float32'), [5, 6, 14]), relay.reshape(const_10676.astype('float32'), [5, 6, 14]), relay.reshape(var_10677.astype('uint64'), []), relay.reshape(const_10676.astype('float32'), [5, 6, 14]), ), 3)
output = relay.Tuple([bop_10666,call_10675,const_10676,var_10677,])
output2 = relay.Tuple([bop_10669,call_10678,const_10676,var_10677,])
func_10710 = relay.Function([var_10677,], output)
mod['func_10710'] = func_10710
mod = relay.transform.InferType()(mod)
mutated_mod['func_10710'] = func_10710
mutated_mod = relay.transform.InferType()(mutated_mod)
var_10711 = relay.var("var_10711", dtype = "uint64", shape = ())#candidate|10711|()|var|uint64
func_10710_call = mutated_mod.get_global_var('func_10710')
call_10712 = func_10710_call(var_10711)
output = call_10712
func_10713 = relay.Function([var_10711], output)
mutated_mod['func_10713'] = func_10713
mutated_mod = relay.transform.InferType()(mutated_mod)
func_10532_call = mod.get_global_var('func_10532')
func_10533_call = mutated_mod.get_global_var('func_10533')
call_10730 = func_10532_call()
call_10731 = func_10532_call()
output = relay.Tuple([call_10730,])
output2 = relay.Tuple([call_10731,])
func_10740 = relay.Function([], output)
mod['func_10740'] = func_10740
mod = relay.transform.InferType()(mod)
output = func_10740()
func_10741 = relay.Function([], output)
mutated_mod['func_10741'] = func_10741
mutated_mod = relay.transform.InferType()(mutated_mod)
func_8524_call = mod.get_global_var('func_8524')
func_8526_call = mutated_mod.get_global_var('func_8526')
call_10812 = func_8524_call()
call_10813 = func_8524_call()
func_10494_call = mod.get_global_var('func_10494')
func_10495_call = mutated_mod.get_global_var('func_10495')
call_10817 = relay.TupleGetItem(func_10494_call(), 0)
call_10818 = relay.TupleGetItem(func_10495_call(), 0)
output = relay.Tuple([call_10812,call_10817,])
output2 = relay.Tuple([call_10813,call_10818,])
func_10821 = relay.Function([], output)
mod['func_10821'] = func_10821
mod = relay.transform.InferType()(mod)
mutated_mod['func_10821'] = func_10821
mutated_mod = relay.transform.InferType()(mutated_mod)
func_10821_call = mutated_mod.get_global_var('func_10821')
call_10822 = func_10821_call()
output = call_10822
func_10823 = relay.Function([], output)
mutated_mod['func_10823'] = func_10823
mutated_mod = relay.transform.InferType()(mutated_mod)
func_8282_call = mod.get_global_var('func_8282')
func_8283_call = mutated_mod.get_global_var('func_8283')
call_10824 = func_8282_call()
call_10825 = func_8282_call()
func_10385_call = mod.get_global_var('func_10385')
func_10386_call = mutated_mod.get_global_var('func_10386')
call_10835 = relay.TupleGetItem(func_10385_call(), 0)
call_10836 = relay.TupleGetItem(func_10386_call(), 0)
uop_10838 = relay.log10(call_10835.astype('float64')) # shape=(10, 8, 3)
uop_10840 = relay.log10(call_10836.astype('float64')) # shape=(10, 8, 3)
output = relay.Tuple([call_10824,uop_10838,])
output2 = relay.Tuple([call_10825,uop_10840,])
func_10843 = relay.Function([], output)
mod['func_10843'] = func_10843
mod = relay.transform.InferType()(mod)
output = func_10843()
func_10844 = relay.Function([], output)
mutated_mod['func_10844'] = func_10844
mutated_mod = relay.transform.InferType()(mutated_mod)
func_8224_call = mod.get_global_var('func_8224')
func_8225_call = mutated_mod.get_global_var('func_8225')
call_10868 = relay.TupleGetItem(func_8224_call(), 0)
call_10869 = relay.TupleGetItem(func_8225_call(), 0)
func_10385_call = mod.get_global_var('func_10385')
func_10386_call = mutated_mod.get_global_var('func_10386')
call_10883 = relay.TupleGetItem(func_10385_call(), 0)
call_10884 = relay.TupleGetItem(func_10386_call(), 0)
output = relay.Tuple([call_10868,call_10883,])
output2 = relay.Tuple([call_10869,call_10884,])
func_10886 = relay.Function([], output)
mod['func_10886'] = func_10886
mod = relay.transform.InferType()(mod)
output = func_10886()
func_10887 = relay.Function([], output)
mutated_mod['func_10887'] = func_10887
mutated_mod = relay.transform.InferType()(mutated_mod)
func_10532_call = mod.get_global_var('func_10532')
func_10533_call = mutated_mod.get_global_var('func_10533')
call_10963 = func_10532_call()
call_10964 = func_10532_call()
func_9648_call = mod.get_global_var('func_9648')
func_9650_call = mutated_mod.get_global_var('func_9650')
call_10965 = func_9648_call()
call_10966 = func_9648_call()
func_9648_call = mod.get_global_var('func_9648')
func_9650_call = mutated_mod.get_global_var('func_9650')
call_10977 = func_9648_call()
call_10978 = func_9648_call()
output = relay.Tuple([call_10963,call_10965,call_10977,])
output2 = relay.Tuple([call_10964,call_10966,call_10978,])
func_10990 = relay.Function([], output)
mod['func_10990'] = func_10990
mod = relay.transform.InferType()(mod)
mutated_mod['func_10990'] = func_10990
mutated_mod = relay.transform.InferType()(mutated_mod)
func_10990_call = mutated_mod.get_global_var('func_10990')
call_10991 = func_10990_call()
output = call_10991
func_10992 = relay.Function([], output)
mutated_mod['func_10992'] = func_10992
mutated_mod = relay.transform.InferType()(mutated_mod)
func_8843_call = mod.get_global_var('func_8843')
func_8844_call = mutated_mod.get_global_var('func_8844')
call_11002 = func_8843_call()
call_11003 = func_8843_call()
output = relay.Tuple([call_11002,])
output2 = relay.Tuple([call_11003,])
func_11016 = relay.Function([], output)
mod['func_11016'] = func_11016
mod = relay.transform.InferType()(mod)
output = func_11016()
func_11017 = relay.Function([], output)
mutated_mod['func_11017'] = func_11017
mutated_mod = relay.transform.InferType()(mutated_mod)
func_8524_call = mod.get_global_var('func_8524')
func_8526_call = mutated_mod.get_global_var('func_8526')
call_11059 = func_8524_call()
call_11060 = func_8524_call()
output = call_11059
output2 = call_11060
func_11077 = relay.Function([], output)
mod['func_11077'] = func_11077
mod = relay.transform.InferType()(mod)
output = func_11077()
func_11078 = relay.Function([], output)
mutated_mod['func_11078'] = func_11078
mutated_mod = relay.transform.InferType()(mutated_mod)
func_10740_call = mod.get_global_var('func_10740')
func_10741_call = mutated_mod.get_global_var('func_10741')
call_11106 = relay.TupleGetItem(func_10740_call(), 0)
call_11107 = relay.TupleGetItem(func_10741_call(), 0)
func_9710_call = mod.get_global_var('func_9710')
func_9711_call = mutated_mod.get_global_var('func_9711')
call_11120 = relay.TupleGetItem(func_9710_call(), 0)
call_11121 = relay.TupleGetItem(func_9711_call(), 0)
output = relay.Tuple([call_11106,call_11120,])
output2 = relay.Tuple([call_11107,call_11121,])
func_11125 = relay.Function([], output)
mod['func_11125'] = func_11125
mod = relay.transform.InferType()(mod)
mutated_mod['func_11125'] = func_11125
mutated_mod = relay.transform.InferType()(mutated_mod)
func_11125_call = mutated_mod.get_global_var('func_11125')
call_11126 = func_11125_call()
output = call_11126
func_11127 = relay.Function([], output)
mutated_mod['func_11127'] = func_11127
mutated_mod = relay.transform.InferType()(mutated_mod)
func_8843_call = mod.get_global_var('func_8843')
func_8844_call = mutated_mod.get_global_var('func_8844')
call_11191 = func_8843_call()
call_11192 = func_8843_call()
func_11016_call = mod.get_global_var('func_11016')
func_11017_call = mutated_mod.get_global_var('func_11017')
call_11198 = relay.TupleGetItem(func_11016_call(), 0)
call_11199 = relay.TupleGetItem(func_11017_call(), 0)
func_9616_call = mod.get_global_var('func_9616')
func_9618_call = mutated_mod.get_global_var('func_9618')
call_11205 = func_9616_call()
call_11206 = func_9616_call()
func_8843_call = mod.get_global_var('func_8843')
func_8844_call = mutated_mod.get_global_var('func_8844')
call_11207 = func_8843_call()
call_11208 = func_8843_call()
output = relay.Tuple([call_11191,call_11198,call_11205,call_11207,])
output2 = relay.Tuple([call_11192,call_11199,call_11206,call_11208,])
func_11213 = relay.Function([], output)
mod['func_11213'] = func_11213
mod = relay.transform.InferType()(mod)
mutated_mod['func_11213'] = func_11213
mutated_mod = relay.transform.InferType()(mutated_mod)
func_11213_call = mutated_mod.get_global_var('func_11213')
call_11214 = func_11213_call()
output = call_11214
func_11215 = relay.Function([], output)
mutated_mod['func_11215'] = func_11215
mutated_mod = relay.transform.InferType()(mutated_mod)
func_9424_call = mod.get_global_var('func_9424')
func_9425_call = mutated_mod.get_global_var('func_9425')
call_11244 = relay.TupleGetItem(func_9424_call(), 1)
call_11245 = relay.TupleGetItem(func_9425_call(), 1)
output = call_11244
output2 = call_11245
func_11260 = relay.Function([], output)
mod['func_11260'] = func_11260
mod = relay.transform.InferType()(mod)
mutated_mod['func_11260'] = func_11260
mutated_mod = relay.transform.InferType()(mutated_mod)
func_11260_call = mutated_mod.get_global_var('func_11260')
call_11261 = func_11260_call()
output = call_11261
func_11262 = relay.Function([], output)
mutated_mod['func_11262'] = func_11262
mutated_mod = relay.transform.InferType()(mutated_mod)
func_9616_call = mod.get_global_var('func_9616')
func_9618_call = mutated_mod.get_global_var('func_9618')
call_11266 = func_9616_call()
call_11267 = func_9616_call()
func_11260_call = mod.get_global_var('func_11260')
func_11262_call = mutated_mod.get_global_var('func_11262')
call_11300 = func_11260_call()
call_11301 = func_11260_call()
func_10320_call = mod.get_global_var('func_10320')
func_10322_call = mutated_mod.get_global_var('func_10322')
call_11310 = relay.TupleGetItem(func_10320_call(), 2)
call_11311 = relay.TupleGetItem(func_10322_call(), 2)
func_10320_call = mod.get_global_var('func_10320')
func_10322_call = mutated_mod.get_global_var('func_10322')
call_11312 = relay.TupleGetItem(func_10320_call(), 2)
call_11313 = relay.TupleGetItem(func_10322_call(), 2)
output = relay.Tuple([call_11266,call_11300,call_11310,call_11312,])
output2 = relay.Tuple([call_11267,call_11301,call_11311,call_11313,])
func_11321 = relay.Function([], output)
mod['func_11321'] = func_11321
mod = relay.transform.InferType()(mod)
output = func_11321()
func_11322 = relay.Function([], output)
mutated_mod['func_11322'] = func_11322
mutated_mod = relay.transform.InferType()(mutated_mod)
func_8282_call = mod.get_global_var('func_8282')
func_8283_call = mutated_mod.get_global_var('func_8283')
call_11392 = func_8282_call()
call_11393 = func_8282_call()
func_1569_call = mod.get_global_var('func_1569')
func_1572_call = mutated_mod.get_global_var('func_1572')
var_11395 = relay.var("var_11395", dtype = "int32", shape = (2520,))#candidate|11395|(2520,)|var|int32
call_11394 = func_1569_call(relay.reshape(var_11395.astype('int32'), [15, 14, 12]), relay.reshape(var_11395.astype('int32'), [15, 14, 12]), )
call_11396 = func_1569_call(relay.reshape(var_11395.astype('int32'), [15, 14, 12]), relay.reshape(var_11395.astype('int32'), [15, 14, 12]), )
output = relay.Tuple([call_11392,call_11394,var_11395,])
output2 = relay.Tuple([call_11393,call_11396,var_11395,])
func_11407 = relay.Function([var_11395,], output)
mod['func_11407'] = func_11407
mod = relay.transform.InferType()(mod)
mutated_mod['func_11407'] = func_11407
mutated_mod = relay.transform.InferType()(mutated_mod)
var_11408 = relay.var("var_11408", dtype = "int32", shape = (2520,))#candidate|11408|(2520,)|var|int32
func_11407_call = mutated_mod.get_global_var('func_11407')
call_11409 = func_11407_call(var_11408)
output = call_11409
func_11410 = relay.Function([var_11408], output)
mutated_mod['func_11410'] = func_11410
mutated_mod = relay.transform.InferType()(mutated_mod)
func_11016_call = mod.get_global_var('func_11016')
func_11017_call = mutated_mod.get_global_var('func_11017')
call_11519 = relay.TupleGetItem(func_11016_call(), 0)
call_11520 = relay.TupleGetItem(func_11017_call(), 0)
output = call_11519
output2 = call_11520
func_11547 = relay.Function([], output)
mod['func_11547'] = func_11547
mod = relay.transform.InferType()(mod)
output = func_11547()
func_11548 = relay.Function([], output)
mutated_mod['func_11548'] = func_11548
mutated_mod = relay.transform.InferType()(mutated_mod)
func_8982_call = mod.get_global_var('func_8982')
func_8983_call = mutated_mod.get_global_var('func_8983')
call_11695 = func_8982_call()
call_11696 = func_8982_call()
output = relay.Tuple([call_11695,])
output2 = relay.Tuple([call_11696,])
func_11705 = relay.Function([], output)
mod['func_11705'] = func_11705
mod = relay.transform.InferType()(mod)
output = func_11705()
func_11706 = relay.Function([], output)
mutated_mod['func_11706'] = func_11706
mutated_mod = relay.transform.InferType()(mutated_mod)
func_9785_call = mod.get_global_var('func_9785')
func_9786_call = mutated_mod.get_global_var('func_9786')
call_11717 = relay.TupleGetItem(func_9785_call(), 0)
call_11718 = relay.TupleGetItem(func_9786_call(), 0)
func_3490_call = mod.get_global_var('func_3490')
func_3494_call = mutated_mod.get_global_var('func_3494')
const_11732 = relay.const([-1.615490,-8.495329,-2.121407,6.345517,7.762509,-7.636548,-2.958466,0.710279,8.124885,7.009357,2.262383,-4.936205,6.267479,-8.187004,-7.586750,-9.953263,2.426616,-4.013138,6.133286,3.386119,1.330081,-7.819696,2.725553,-8.085804,-9.178238,-9.367187,4.219021,-5.808185,-9.776496,3.718665,-9.220102,7.079624,-1.419924,1.028685,2.357115,-9.902643,8.798322,6.315805,-4.675409,3.024654,7.044375,4.815446,-4.343767,1.604783,-8.604234,9.474623,3.400986,-6.069120,4.341129,5.734425,7.595133,8.992364,-4.704715,8.884257,-5.024873,1.106187,-8.156222,8.038208,-3.556464,0.219227,9.329170,4.213006,-9.836120,5.913589,7.705363,-6.445118,-4.147306,2.293304,-7.728665,-6.248276,-5.421520,-4.343086,-7.137066,2.467608,0.128142,6.321979,-7.012723,4.914276,4.901546,-6.756671,4.145000,4.630359,-6.388825,-6.271971,9.665341,-5.884355,-7.602002,-4.594250,-7.466350,6.721643,2.393695,-9.235477,5.391037,-1.653770,-0.643492,5.291415,4.716389,-7.760385,-2.488239,6.064304,3.191131,1.170239,-4.409442,-7.839175,4.337908,-8.003878,-9.043521,-7.875543,-3.285969,-1.732012,6.576890,-5.453842,-9.802024,1.494058,3.151186,-3.173753,-2.981135,-4.647001,-1.912341,6.909041,-2.109431,-7.386149,-3.581960,-8.249473,1.046080,-6.481441,2.210339,5.044249,6.485652,-9.035228,2.360397,1.471745,-8.034299,7.205815,-8.412422,-0.456641,-3.387795,8.201519,-5.735857,-0.273851,7.250478,-2.349319,9.912708,-7.646291,-0.504903,-7.258372,-0.304239,0.233708,1.724204,8.111976,8.925636,7.571448,-7.880854,7.328991,-6.984866,-8.711630,-8.817240,-6.462465,-2.218644,-6.739993,5.899711,3.818860,-4.346835,-2.751239,2.305570,3.725208,-7.827236,-0.819218,6.108178,4.665172,7.905843,1.278770,-0.113119,-8.670164,4.179175,-6.810303,8.331995,-8.315461,-3.029054,7.232897,-0.227897,6.992749,2.258430,3.729619,1.229007,7.059921,-2.198550,-0.481866,-4.232825,5.946911,5.915191,4.287638,3.468607,-2.109041,-3.460589,1.013394,-2.284079,6.729390,7.071355,-0.235205,9.158030,8.178444,9.255632,8.708178,-3.560026,9.054066,-9.586569,-7.785266,-9.376828,9.310276,7.326311,1.699972,3.782115,9.584484,2.536430,9.191642,8.869051,-1.883290,-6.282641,1.374942,-9.203759,-4.882471,9.095890,8.150074,2.081934,-7.008223,0.017900,-1.272350,6.273426,1.983163,-1.717831,8.520590,-6.992403,-3.016973,6.423115,4.325800,-0.256302,-4.681622,6.957661,0.342000,6.167938,3.502485,0.352693,5.733484,4.723218,6.404810,-4.417686,-4.369466,-4.226876,2.692646,-6.060894,3.693908,7.965332,-0.067843,5.984041,3.226025,6.295913,-2.287244,2.955303,1.617853,-2.970077,-1.089734,-9.201098,9.720838,2.386639,-9.611563,-8.389395,-2.142551,-1.963512,-1.324460,-6.301134,-3.604890,-9.154206,-4.717709,-3.235169,-4.310023,-4.555592,2.590166,2.556041,4.913575,-3.998924,-8.522050,6.470126,-9.740837,7.574679,-4.266248,-6.930742,-0.859948,5.164708,-5.115473,-2.342900,-9.345961,6.396206,4.645961,0.632817,8.506593,5.483165,-2.893642,-0.084467,-4.702486,4.780635,9.669574,2.868562,-5.220880,-8.085343,-1.686749,8.052565,8.998350,0.130548,-5.500098,2.969645,-3.395619,3.507741,-4.595172,8.262526,-2.542528,8.905422,-1.941025,9.544335,9.270264,-2.441973,-1.475891,-0.626130,-5.250155,3.951974], dtype = "float64")#candidate|11732|(325,)|const|float64
var_11733 = relay.var("var_11733", dtype = "float32", shape = (65,))#candidate|11733|(65,)|var|float32
call_11731 = relay.TupleGetItem(func_3490_call(relay.reshape(const_11732.astype('float64'), [13, 5, 5]), relay.reshape(var_11733.astype('float32'), [65,]), ), 1)
call_11734 = relay.TupleGetItem(func_3494_call(relay.reshape(const_11732.astype('float64'), [13, 5, 5]), relay.reshape(var_11733.astype('float32'), [65,]), ), 1)
func_1467_call = mod.get_global_var('func_1467')
func_1473_call = mutated_mod.get_global_var('func_1473')
const_11744 = relay.const([[-7.098402],[-1.620872],[-9.229928],[7.805048],[-2.888455],[5.405884],[1.130700],[-0.203296],[6.404179],[-4.534140],[1.710623],[-3.238644],[7.995080],[-2.574256],[6.394134],[8.296574],[9.474130],[0.860256],[-4.745141],[1.366473],[-7.689252],[-8.454330],[2.662833],[0.311505],[3.961094],[8.366735],[-9.945862],[6.140666],[3.627352],[2.856516],[-3.017844],[-3.276690],[-3.171689],[2.855390],[-2.078233],[5.754545],[3.365369],[1.008635],[-5.492531],[-0.577949],[-7.824876],[-6.801455],[6.141702],[-1.639893],[-1.890889],[4.199572],[-8.062267],[-8.975707],[6.848103],[0.666381],[-5.802904],[9.884911],[-6.022517],[9.676129],[8.960326],[8.719746],[6.151109],[-0.720880],[3.498550],[-6.380503],[-4.145273],[-2.864151],[1.654246],[-1.574543],[-3.899101],[1.656165],[-9.659806],[-3.177445],[7.111759],[-7.702551],[6.058455],[-8.413183],[0.350260],[8.734386],[7.780834],[-2.793637],[-2.292920],[9.711922],[4.630546],[-4.136688],[8.007736],[3.967546],[-4.149624],[4.123159],[1.929470],[0.734790],[5.929788],[5.377777],[-7.182935],[1.130117],[-4.199278],[-3.289114],[-1.412855],[4.739244],[4.519147],[5.720230],[7.078697],[-3.720243],[-5.261587],[1.673975],[1.556293],[9.472164],[-0.985174],[-7.496447],[8.214894],[-5.448682],[6.033185],[-6.563142],[-2.250944],[-3.973888],[-4.501480],[1.146678],[-4.992537],[9.051076],[6.435162],[-9.993388],[3.972559],[7.088571],[-5.320601],[5.514456],[6.883124],[-4.779075],[-8.437983],[-0.876308],[-0.397974],[-7.214322],[-8.215066],[-3.453898],[2.833531],[2.852893],[-5.025363],[-7.555070],[3.414082],[6.064538],[4.074952],[-0.252558],[-5.459249],[9.022524],[6.296026],[-4.253572],[-7.807251],[-8.566767],[-8.414768],[6.278211],[7.592868],[-6.879227],[-4.480588],[9.713605],[-7.289517],[-9.263654],[3.594887],[-9.211450],[7.392542],[-5.091784],[0.520035],[-8.566659],[3.624121],[-0.251906],[0.432809],[-1.603993],[-4.389025],[-7.757874],[4.324615],[7.488615],[-6.687095],[9.641378],[-9.110314],[3.269242],[5.177369],[-2.271937],[-9.030308],[0.331822],[-5.685749],[8.914468],[1.603055],[-6.085306],[-3.373078],[9.274807],[-9.229657],[6.110177],[-4.747128],[5.636034],[-2.082809],[-4.464544],[-0.676368],[-2.149010],[0.627240],[1.928161],[4.063234],[2.162394],[-5.354859],[9.849478],[-0.896696],[-5.956251],[2.607985],[1.660943],[-2.600397],[-4.514643],[2.825079],[-8.769073],[8.726518],[4.753467],[-8.646222],[-0.155564],[9.586142],[9.701555],[1.375551],[3.963181],[2.828091],[6.707161],[6.095608],[-9.174342],[5.642184],[4.176879],[2.379735],[-8.850482],[-6.732865],[6.606391],[-2.352405],[9.044252],[5.842310],[2.225860],[5.860203],[-4.874794],[-0.248147],[6.029431],[-1.674763],[7.004125],[-0.931639],[-9.215807],[0.594837],[-5.119721],[-3.643527],[-8.450563],[-9.161694],[9.613944],[-2.063604],[-5.563135],[9.590616],[-0.518162],[-7.871215],[3.457736],[1.013439],[-0.790161],[5.545675],[7.586199],[-2.227163],[9.244927],[1.488876],[6.788085],[3.279789],[3.209871],[-1.091263],[2.430397],[-3.396217],[3.029404],[4.299198],[9.265644],[-6.437220],[-1.445017],[8.566794],[-4.284873],[5.855050],[-3.122173],[5.661334],[-1.440762],[-4.576936],[3.154990],[-9.844513],[-4.028309],[-9.966545],[3.492192],[6.941713],[2.758718],[1.819134],[6.071862],[8.261487],[-9.114525],[4.737475],[-3.234308],[-7.480992],[1.827791],[-3.485759],[6.059505],[5.156982],[-1.764259],[-6.179486],[7.646323],[-9.818913],[6.065861],[-8.260777],[-7.416213],[-1.942673],[7.281721],[-6.691438],[-9.800774],[-0.204730],[0.646866],[-4.547017],[7.702666],[0.222166],[-4.114654],[-0.784174],[9.257894],[-8.772153],[-4.987483],[4.053394],[-9.774234],[6.550923],[-3.415121],[1.273675],[-2.267841],[-5.421318],[4.328034],[3.802367],[0.582154],[-1.022955],[-0.206298],[8.670977],[8.457774],[-2.744651],[5.996112],[7.158004],[9.429894],[1.438777],[-2.047019],[-2.336047],[-9.212766],[-4.811585],[-5.960813],[3.650743],[-7.194229],[1.833125],[-1.071021],[-4.511063],[-0.616766],[5.756688],[6.840937],[4.891452],[2.253654],[-6.203268],[-6.542587],[-7.470930],[2.570845],[-1.975101],[-0.128604],[9.973170],[9.191202],[5.721738],[-6.223228],[1.044582],[-4.282043],[-4.712502],[8.690267],[-0.350529],[-3.202000],[-0.255791],[-7.377063],[3.559313],[-7.732448],[0.080758],[9.715216],[0.922679],[7.760332],[-5.522479],[4.325717],[-7.397756],[-3.795670],[2.631642],[-1.711885],[-3.417163],[-3.443691],[5.533684],[-2.297211],[-3.139162],[-2.682294],[1.101613],[5.609878],[-4.442241],[-5.867409],[-3.647699],[2.421663],[4.707868],[6.966503],[8.525133],[9.829592],[-7.827330],[0.591784],[-5.491414],[-4.917721],[-9.042107],[-6.473606],[5.673791],[-9.272137],[-8.506432],[-9.193197],[-7.728912],[6.828171],[-3.817061],[-7.858945],[-3.921679],[3.422379],[6.870457],[6.008740],[-6.753538],[4.440749],[-9.984960],[7.800792],[2.998119],[-4.833835],[-6.954584],[-7.568545],[-6.969216],[-1.630940],[-7.958438],[-7.764020],[-6.489166],[7.991121],[-8.431292],[8.435490]], dtype = "float32")#candidate|11744|(420, 1)|const|float32
const_11745 = relay.const(-4, dtype = "uint64")#candidate|11745|()|const|uint64
call_11743 = relay.TupleGetItem(func_1467_call(relay.reshape(const_11744.astype('float32'), [5, 6, 14]), relay.reshape(const_11744.astype('float32'), [5, 6, 14]), relay.reshape(const_11745.astype('uint64'), []), relay.reshape(const_11744.astype('float32'), [5, 6, 14]), ), 11)
call_11746 = relay.TupleGetItem(func_1473_call(relay.reshape(const_11744.astype('float32'), [5, 6, 14]), relay.reshape(const_11744.astype('float32'), [5, 6, 14]), relay.reshape(const_11745.astype('uint64'), []), relay.reshape(const_11744.astype('float32'), [5, 6, 14]), ), 11)
func_8275_call = mod.get_global_var('func_8275')
func_8278_call = mutated_mod.get_global_var('func_8278')
const_11748 = relay.const([-0.225793,6.623810,4.630629,-2.929263,4.475725,8.642371,-6.345763,-4.653203,1.450780,-8.972496,4.056085,-8.162595,0.904233,-3.702576,8.045804,-5.769799,-8.240175,2.698494,-2.993428,6.450386,2.099735,-9.984865,-6.529660,5.403524,8.459336,-5.934098,7.157487,-8.264744,8.067604,-6.392920,-4.387318,-9.429060,-1.822872,0.525358,-6.650599,-6.269701,7.826274,9.911216,7.288712,9.765691,6.808072,-4.318205,-2.233892,1.639217,3.714208,-8.404954,0.422957,-5.586780,-5.714417,-4.703659,7.476868,4.052267,6.110346,-7.857428,5.696805,-5.464921,9.494607,8.602948,2.156160,2.655515,-3.467689,0.940540,5.869546,5.088921,9.731069,-5.340739,-1.029115,3.106314,-3.262064,5.604606,3.136369,-1.591130,-7.031033,-4.737159,9.803552,-5.407215,1.700682,5.195485,-7.096445,7.864587,-4.331960,-7.593442,9.420859,3.514209,2.439287,4.941650,-9.532217,5.980318,6.204547,-3.526586,3.738148,5.025232,-5.594704,0.390087,0.638039,-2.853782,-7.326269,2.092853,-9.405937,-1.219711,5.543147,-3.904163,8.380903,-4.552488,6.311238,4.584607,8.004512,-6.940347,3.058903,-7.400439,-9.066392,0.925154], dtype = "float64")#candidate|11748|(112,)|const|float64
call_11747 = relay.TupleGetItem(func_8275_call(relay.reshape(const_11748.astype('float64'), [112,])), 0)
call_11749 = relay.TupleGetItem(func_8278_call(relay.reshape(const_11748.astype('float64'), [112,])), 0)
func_9358_call = mod.get_global_var('func_9358')
func_9360_call = mutated_mod.get_global_var('func_9360')
call_11751 = relay.TupleGetItem(func_9358_call(), 0)
call_11752 = relay.TupleGetItem(func_9360_call(), 0)
output = relay.Tuple([call_11717,call_11731,const_11732,var_11733,call_11743,const_11744,const_11745,call_11747,const_11748,call_11751,])
output2 = relay.Tuple([call_11718,call_11734,const_11732,var_11733,call_11746,const_11744,const_11745,call_11749,const_11748,call_11752,])
func_11761 = relay.Function([var_11733,], output)
mod['func_11761'] = func_11761
mod = relay.transform.InferType()(mod)
mutated_mod['func_11761'] = func_11761
mutated_mod = relay.transform.InferType()(mutated_mod)
var_11762 = relay.var("var_11762", dtype = "float32", shape = (65,))#candidate|11762|(65,)|var|float32
func_11761_call = mutated_mod.get_global_var('func_11761')
call_11763 = func_11761_call(var_11762)
output = call_11763
func_11764 = relay.Function([var_11762], output)
mutated_mod['func_11764'] = func_11764
mutated_mod = relay.transform.InferType()(mutated_mod)
func_8051_call = mod.get_global_var('func_8051')
func_8053_call = mutated_mod.get_global_var('func_8053')
call_11819 = relay.TupleGetItem(func_8051_call(), 0)
call_11820 = relay.TupleGetItem(func_8053_call(), 0)
func_10036_call = mod.get_global_var('func_10036')
func_10039_call = mutated_mod.get_global_var('func_10039')
var_11838 = relay.var("var_11838", dtype = "uint64", shape = (90, 10))#candidate|11838|(90, 10)|var|uint64
call_11837 = relay.TupleGetItem(func_10036_call(relay.reshape(var_11838.astype('uint64'), [900,])), 3)
call_11839 = relay.TupleGetItem(func_10039_call(relay.reshape(var_11838.astype('uint64'), [900,])), 3)
func_8282_call = mod.get_global_var('func_8282')
func_8283_call = mutated_mod.get_global_var('func_8283')
call_11841 = func_8282_call()
call_11842 = func_8282_call()
func_11761_call = mod.get_global_var('func_11761')
func_11764_call = mutated_mod.get_global_var('func_11764')
var_11848 = relay.var("var_11848", dtype = "float32", shape = (65,))#candidate|11848|(65,)|var|float32
call_11847 = relay.TupleGetItem(func_11761_call(relay.reshape(var_11848.astype('float32'), [65,])), 3)
call_11849 = relay.TupleGetItem(func_11764_call(relay.reshape(var_11848.astype('float32'), [65,])), 3)
func_10740_call = mod.get_global_var('func_10740')
func_10741_call = mutated_mod.get_global_var('func_10741')
call_11851 = relay.TupleGetItem(func_10740_call(), 0)
call_11852 = relay.TupleGetItem(func_10741_call(), 0)
func_9177_call = mod.get_global_var('func_9177')
func_9179_call = mutated_mod.get_global_var('func_9179')
call_11859 = relay.TupleGetItem(func_9177_call(), 0)
call_11860 = relay.TupleGetItem(func_9179_call(), 0)
output = relay.Tuple([call_11819,call_11837,var_11838,call_11841,call_11847,var_11848,call_11851,call_11859,])
output2 = relay.Tuple([call_11820,call_11839,var_11838,call_11842,call_11849,var_11848,call_11852,call_11860,])
func_11862 = relay.Function([var_11838,var_11848,], output)
mod['func_11862'] = func_11862
mod = relay.transform.InferType()(mod)
var_11863 = relay.var("var_11863", dtype = "uint64", shape = (90, 10))#candidate|11863|(90, 10)|var|uint64
var_11864 = relay.var("var_11864", dtype = "float32", shape = (65,))#candidate|11864|(65,)|var|float32
output = func_11862(var_11863,var_11864,)
func_11865 = relay.Function([var_11863,var_11864,], output)
mutated_mod['func_11865'] = func_11865
mutated_mod = relay.transform.InferType()(mutated_mod)
const_11877 = relay.const([[[-8.527209,6.895009],[-0.623094,-1.304809],[5.502385,5.727401],[-6.080822,-8.876527],[-0.615829,-9.744821],[8.640663,-4.851193]],[[7.562311,8.867066],[-2.410457,5.996959],[3.377522,4.549296],[2.167322,-2.264688],[-1.615411,3.898515],[-3.415142,-8.326703]],[[1.598892,0.211953],[-7.195507,-9.456233],[-0.462919,1.437500],[1.564921,7.550614],[0.010592,-2.714629],[-8.554284,-3.766335]],[[-5.649724,6.336413],[8.463052,0.308949],[1.491424,8.002588],[-3.163723,8.492956],[2.828381,9.896031],[1.562666,-1.880770]],[[-0.467863,-5.164717],[0.063758,7.641312],[-0.837935,1.440875],[6.734882,-0.481959],[2.284174,-1.498650],[2.701484,-7.077134]],[[-0.728289,9.780871],[0.830766,3.874641],[-3.412604,-1.908538],[-2.656286,-3.474916],[8.311303,-5.271298],[-6.330550,9.249272]],[[0.177472,-1.819726],[4.247185,1.559008],[-2.090179,9.919076],[-0.312852,1.903038],[-6.854049,8.262688],[-4.244899,9.678054]],[[6.544052,-6.451424],[-7.032010,2.393764],[0.344180,0.726414],[-3.689082,-0.900905],[4.439498,-7.787921],[-7.264675,9.880953]],[[-9.346952,5.285405],[-5.612375,-1.858754],[9.779604,1.838574],[-2.549478,8.652321],[-8.654745,-0.076459],[2.768282,-2.002648]],[[-6.739658,6.262866],[-0.385087,-1.128936],[0.679718,0.058728],[-9.429080,3.183070],[-1.126996,-8.095916],[8.202675,-3.833665]]], dtype = "float64")#candidate|11877|(10, 6, 2)|const|float64
uop_11878 = relay.cos(const_11877.astype('float64')) # shape=(10, 6, 2)
bop_11889 = relay.equal(const_11877.astype('bool'), relay.reshape(uop_11878.astype('bool'), relay.shape_of(const_11877))) # shape=(10, 6, 2)
output = bop_11889
output2 = bop_11889
func_11895 = relay.Function([], output)
mod['func_11895'] = func_11895
mod = relay.transform.InferType()(mod)
output = func_11895()
func_11896 = relay.Function([], output)
mutated_mod['func_11896'] = func_11896
mutated_mod = relay.transform.InferType()(mutated_mod)
func_10532_call = mod.get_global_var('func_10532')
func_10533_call = mutated_mod.get_global_var('func_10533')
call_11907 = func_10532_call()
call_11908 = func_10532_call()
func_3372_call = mod.get_global_var('func_3372')
func_3375_call = mutated_mod.get_global_var('func_3375')
const_11910 = relay.const([4,1,10,-2,1,4,5,-7,-2,-1,-3,-2,2,-5,2,-1,8,10,7,7,-4,-2,-8,8,-9,6,-4,1,8,-2,-5,-7,-2,-5,8,9,-2,-3,-7,10,-9,-7,7,-9,-3,-5,2,3,8,-7,9,10,-4,-10,3,-6,-8,-7,3,10,-5,-6,9,-4,-7,-5,4,8,8,10,9,4,-1,10,5,1,9,8,7,4,3,-2,5,-7,-9,-2,3,4,7,7,6,-3,-5,2,4,-8,5,4,-2,-3,-7,7,-3,1,5,-3,6,-7,-8,5,-4,1,-2,1,5,3,1,2,-9,5,1,-6,-5,-1,1,-6,-6,-8,1,2,-5,10,5,1,4,-9,-3,3,-9,10,-10,-8,-3,-5,-6,-2,4,-9,3,4,-8,-2,1,1,-2,1,-9,-8,-5,-9,-4,4,-5,6,4,7,6,-3,9,-6,-4,4,-7,-8,-9,-5,-9,10,3,4,-7,-7,2,-9,-3,3,5,-3,-10,-7,7,2,3,10,8,-3,-6,-10,-2,9,-6,-7,10,3,10,-10,4,-4,4,4,9,10,10,4,-1,-9,5,-7,-3,-6,-2,3,8,4,-1,-7,8,4,9,9,-10,4,4,10,-4,2,3,-2,3,5,6,2,1,-3,-5,8,-1,-3,-6,2,-1,3,-2,-7,3,-8,-5,-3,8,7,-8,-1,7,-6,8,2,6,5,2,-2,-3,-4,-1,-5,4,-4,-6,3,-10,-8,-9,-10,-8,3,-5,7,-5,6,-7,-7,-2,-3,-8,2,5,6,2,9,9,2,-6,1,9,9,8,-8,7,-9,-10,-2,-10,-1,4,-4,3,-8,4,-2,9,-10,-7,9,10,8,-8,-4,-9,-3,-6,-8,3,-10,7,10,3,-3,8,8,-10,7,9,6,-10,-10,6,-5,-4,-5,-7,7,5,-4,-1,-3,9,7,-3,5,-4,10,-7,-8,-2,-3,8,-2,-9,-7,9,1,10,-7,5,-8,10,-8,7,-7,-8,9,-8,10,9,10,-7,-7,1,4,7,2,4,-2,5,-1,10,9,-2,7,-8,7,-8,-4,8,2,10,3,-3,4,-6,2,-4,6,-2,5,-10,5,9,-4,9,-4,-9,2,4,3,-2,8,6,2,-6,9,-3,3,-6,-1,-2,-4,6,6,-6,1,-4,4,10,-9,2,4,4,9,4,-5,-9,-1,6,4,-6,10,2,9,7,-10,-6,8,4,10,-7,6,5,-10,7,-3,-7,-3,6,-2,-10,5,9,-7,-9,10,-3,4,6,-9,6,-5,4,1,-2,4,-5,9,10,-8,-5,7,-7,-6,-2,5,8,10,-2,3,-4,-5,3,5,-1,2,-1,6,9,10,-8,1,9,-7,2,4,-6,-5,4,-2,-2,1,-3,-1,8,6,-8,-1,8,-7,-9,-6,-9,-1,2,-8,-8,-10,-7,-5,-4,-2,-10,9,-2,-8,-5,-3,5,7,-7,-2,5,8,-4,-10,8,9,4,5,4,6,-6,-6,-3,6,10,-7,-1,1,-9,-4,-3,-2,2,-3,-9,-8,8,-5,8,2,-3,-7,3,-2,8,-7,2,8,-9,2,1,-4,-5,1,4,3,2,2,5,8,-3,-4,6,-8,-2,4,2,4,9,-1,7,-8,2,-4,7,10,-7,-2,-6,-8,3,-4,10,-10,-1,1,5,-9,-1,-5,3,8,-2,2,3,6,4,10,-8,-4,-3,9,4,4,8,-6,5,-2,-4,-4,-4,2,-2,3,-5,1,2,6,5,-3,-1,6,1,-4,-2,-2,3,-6,8,-7,6,1,-5,4,-10,4,4,-7,8,9,-2,-6,-7,-1,2,8,-3,6,5,-9,4,6,5,-2,9,-5,-4,-7,3,-4,4,-3,-10,-7,8,1,1,-2,3,1,7,2,-7,2,4,7,9,-7,10,5,-1,-1,-4,-1,7,8,10,-3,10,8,-3,-4,-6,9,-4,-5,-1,-7,7,3,-2,8,-4,8,8,7,-3,-2,-3,-5,7,4,-6,4,-1,-7,-1,-4,6,6,9,3,-8,1,8,-8,7,5,-5,7,10,-8,9,-4,7,8,7,8,-8,7,-6,-3,9,8,-10,7,-1,9,-10,-6,4,2,9,7,10,5,10,-1,-9,10,-4,-7,3,-8,8,-9,9,-6,-1,8,-8,7,5,5,-7,-1,-4,-7,-4,-2,-8,-7,-10,7,-7,-3,10,-10,-6,-8,2,3,10,4,4,8,-7,-10,1,8,-4,10,-9,-10,-7,-9,10,6,-3,-3,6,-8,8,10,5,7,9,5,10,-6,-6,8,6,-3,4,-7,-9,5,-2,9,3,1,5,-1,-1,-4,9,-2,-5,7,3,4,-8,3,2,-9,10,-8,-8,-10,3,8,7,8,-5,3,-6,1,-6,5,-8,4,6,3,-8,-3,-10,-4,8,-10,6,2,2,7,2,5,-6,-8,-10,4,-7,-2,7,3,-7,-10,-6,-6,-8,6,5,-7,-2,-5,9,2,-8,2,-10,1,-8,8,-3,-4,-9,8,2,7,4,6,-3,9,5,-7,8,2,-6,2,7,10,-8,10,-6,4,10,3,-2,-5,6,2,9,-10,4,-4,-1,7,-3,-7,-5,-10,3,-8,-8,2,4,-7,-7,8,2,2,-8,-1,7,1,1,7,-9,-8,10,10,-3,-7,-8,2,8,-3,5,7,-2,-6,-2,-8,9,-7,-6,-3,7,-9,-6,5,9,8,2,7,-6,8,5,-10,-1,-3,7,4,-9,-9,6,-9,-9,-8,-4,6,8,-1,-9,-7,-9,5,-10,10,-6,4,-10,-8,10,2,2,6,-2,-3,8,-1,-2,-1,-7,-2,9,-6,7,-9,-9,2,1,-1,5,-3,-6,9,3,10,2,-5,-8,-9,-5,3,-9,5,-3,4,2,10,-4,-4,1,-6,-6,2,-2,-10,-9,-10,7,10,-4,9,-2,2,10,-2,1,-1,-9,-4,6,-7,-4,5,6,3,-10,6,3,-9,-5,3,-10,-7,-9,-9,3,-10,-7,-2,10,3,-10,-5,6,-8,-6,-10,-7,-5,-8,-1,-2,-1,6,2,-1,-10,-3,-5,-1,-3,-6,-3,-2,9,-5,-4,-1,-8,10,-7,-4,-3,-3,9,3,-1,4,10,-4,-9,-9,-6,8,1,3,-1,6,5,2,3,3,-4,10,7,5,1,-9,-6,10,-6,-7,9,9,-3,5,8,-2,8,-6,-5,9,7,-4,4,2,4,-7,5,6,-10,-5,-10,-9,-6,3,8,-9,1,-7,5,7,1,4,-1,-3,1,9,3,-10,-5,-2,7,9,3,5,7,9,5,3,4,-8,4,-8,7,9,3,6,-5,7,3,7,-3,8,-2,5,9,-10,-1,1,6,-10,3,8,1,5,-7,-3,-3,-8,2,-10,9,5,8,-9,-7,-3,5,8,9,1,10,-8,-5,-5,-2,-9,4,-2,-9,7,10,-6,-5,4,-10,2,8,-10,-8,1,1,-10,3,7,3,-8,8,-7,-8,7,-5,-5,-10,-6,-9,8,-7,5,10,-4,8,5,5,8,-4,-9,-5,2,1,-4,4,-2,-10,-3,-1,-5,-8,-6,4,-6,3,7,-4,-3,-4,-5,1,-9,4,-3,-6,5,-1,-9,-7,3,-2,7,-9,9,9,2,-3,1,1,-2,4,-3,8,-2,-6,-2,7,-4,-10,-10,9,9,2,-9,3,2,-1,-6,6,2,5,2,-5,-10,1,6,-1,4,-4,-6,6,-8,-4,4,2,-4,3,-9,-10,7,-9,1,-9,-3,10,2,9,1,-2,-3,-4,-1,3,-7,-1,4,9,-1,-2,1,-6,-6,-3,-8,5,-1,-10,-7,-4,-6,1,6,7,6,2,1,-2,-2,-7,10,-4,2,3,9,-4,-4,-6,4,-10,5,10,9,-5,5,-3,-4,7,-3,5,-10,8,3,6,7,8,5,8,-9,7,4,10,9,6,-8,5,-10,-3,4,10,3,-3,-7,-4,-3,10,-3,5,-8,3,2,5,10,4,-5,-7,-4,7,-1,-8,4,-2,-6,6,-8,1,8,9,-2,-5,-9,5,5,5,-7,-10,8,-7,-9,-10,3,-4,-7,-10,-7,-8,-7,8,-9,8,5,-6,-10,-1,5,5,-5,8,3,3,-4,4,5,5,-8,-9,-3,-8,-7,3,10,-9,-6,-7,6,-6,-10,-4,-6,-1,2,-7,-9,7,2,8,-7,-7,6,1,-3,-4,1,1,7,-2,-4,-3,2,8,9,7,5,-10,-7,4,-9,-4,6,-6,7,-1,6,5,3,5,-1,9,-6,6,-7,-5,1,-7,-5,2,-10,5,7,6,-3,-2,-3,8,-8,-5,9,3,1,8,2,8,-3,10,2,7,-8,8,10,1,2,-4,7,-10,-7,4,8,-3,-6,-10,10,-2,8,10,-5,5,8,-10,-7,5,1,-5,-5,2,5,8,1,4,9,7,-4,3,2,-8,6,-6,7,7,-4,-1,-3,2,10,-5,-9,-3,7,-4,-1,-9,-8,-3,-8,4,1,9,-6,-10,-9,7,9,9,-8,-6,-7,-6,-2,9,1,-4,-1,-8,5,5,-5,10,-2,2,1,-9,-5,-3,-5,-10,6,-9,-6,5,-5,5,-5,-5,-3,-7,7,3,4,-2,8,5,6,2,1,5,-2,-7,3,-3,1,1,7,-1,-9,10,-6,3,1,6,-7,-9,1,-3,9,1,8,-7,5,6,2,-1,-2,-2,2,-6,-9,5,4,4,-5,-3,-8,-8,10,-7,1,-3,-2,8,3,2,-3,-3,6,8,4,-4,2,5,5,6,-2,1,-4,-10,4,-10,-9,-2,2,-6,-3,-3,2,9,-10,7,4,7,-8,-4,9,9,-8,-2,-3,1,9,-3,9,-2,6,4,5,5,-8,-6,-2,-4,-6,-3,5,6,-5,6,-10,-7,-6,-6,10,-6,2,-5,9,-9,6,-5,-5,4,2,5,10,10,-1,-9,-2,1,-1,10,-8,4,-10,-4,1,-2,9,5,-9,5,3,-3,1,9,-2,1,-8,1,-5,3,-2,9,4,1,10,3,10,-10,-2,4,-8,2,-1,5,10,1,3,-5,3,8,2,9,-9,-4,8,5,-4,-3,1,-8,-4,-5,9,3,6,7,5,9,-7,-7,10,10,-8,-8,10,2,-4,-2,6,5,7,9,8,-7,10,9,-5,-3,-3,-4,6,-7,-4,3,4,-4,-8,4,1,-2,-5,-1,1,3,-7,-6,-4,5,-4,8,4,1,-4,-1,-8,6,-5,4,-2,-1,4,4,-10,6,5,2,-7,-3,-7,8,7,-9,-10,10,1,-3,-9,-5,-3,-5,-6,-8,-1,7,-5,-5,8,3,-8,4,-4,-4,-1,4,-1,-4,5,1,-5,5,-3,2,-4,-3,-10,4,1,7,-9,10,9,7,8,-3,6,4,-8,-1,1,-7,-1,5,10,-6,4,-9,1,-10,-3,3,8,-7,2,-1,3,4,-10,4,10,9,7,8,1,7,8,3,7,-6,-9,-4,6,4,6,8,-1,1,-4,-6,-6,10,4,3,3,-2,6,-5,-3,-2,1,6,-8,10,7,-6,-10,8,10,-7,1,-7,7,-1,3,1,3,3,-6,3,10,6,-6,6,-6,-8,2,3,-5,10,-8,-1,-10,-2,9,10,5,-9,-2,4,8,6,7,-9,-6,2,2,4,-8,-8,4,-6,6,9,-10,8,6,8,-5,-6,10,2,-9,-5,5,-6,1,-7,9,5,-10,7,-6,7,-6,2,-1,9,3,9,-7,-8,-8,3,2,7,8,-7,-1,-6,9,4,-2,-10,-6,4,3,-10,-8,8,-1,-1,-1,7,-3,2,3,-10,8,2,8,-5,-10,3,10,-6,-8,-3,-5,2,3,8,9,-1,-7,-1,10,5,5,-6,9,7,10,8,-10,3,-6,9,10,-4,-4,-3,3,2,8,-2,-3,6,-8,-9,7,-4,-3,-10,-5,-10,-9,1,1,-7,-3,-5,9,2,-6,-8,2,-7,6,-10,2,-8,-2,-3,4,3,-1,6,2,7,-8,4,-8,-7,-8,3,-6,1,2,5,3,5,-10,4,-8,3,-6,6,-6,8,1,-4,-2,8,-8,-2,-3,-5,-6,7,9,-10,5,-9,-10,-6,8,-7,-4,6,8,-5,3,-5,8,-4,10,-2,-9,-7,-9,9,3,-8,3,-1,2,-1,5,-7,-8,1,-5,4,-5,-5,3,2,2,-3,3,-5,1,1,1,-10,-9,6,4,-9,2,3,-10,1,4,8,-9,4,8,-7,-5,10,8,9,-8,2,2,5,-2,-3,-10,6,3,-1,-7,-2,5,-8,9,-4,-4,9,2,6,-10,-10,2,-2,-6,-8,3,-5,1,9,1,-9,8,10,1,3,9,-2,7,-5,-8,6,-2,-8,-6,-5,10,1,3,9,-1,5,-4,-10,10,-4,8,-10,10,-3,6,-1,-3,8,8,-10,-10,7,-2,6,2,-2,7,1,1,2,-2,-8,9,-3,-3,-4,-7,-8,-9,3,-2,4,-9,9,-8,9,-7,-7,3,1,-2,-1,-7,-10,-3,2,1,7,10,10,-8,-8,-6,-1,-4,4,-9,-6,4,-5,-10,10,-2,1,-4,9,-2,7,3,-6,10,2,-5,-6,-6,-3,9,-10,-2,-4,-4,10,-2,-3,-7,-4,8,-8,6,-9,-6,-1,-6,7,-3,-6,-4,2,-5,2,3,9,-4,4,1,-2,-4,4,-3,-9,2,3,2,-3,-4,9,3,-1,-6,-4,-6,6,1,-3,-10,1,10,7,3,10,-7,5,8,-6,8,-1,-8,8,4,-4,-6,6,10,7,-5,1,6,1,-1,-8,7,-7,4,-4,9,-5,-4,-8,-4,8,-1,-1,-6,-3,-9,7,-8,-3,-10,-3,7,-3,-6,-5,-7,10,-3,-5,5,-5,-8,-2,-9,-9,6,-9,9,-5,-2,-7,-3,-6,-8,-7,-10,-9,7,5,8,6,-7,8,6,10,2,-8,4,5,-5,-7,7,3,7,1,-3,1,1,-3,1,-4,1,-1,-5,9,1,7,1,-1,10,-4,-8,-1,4,-5,-9,9,-2,-5,9,9,9,5,7,-6,9,-10,-7,-5,8,4,-10,7,5,8,-5,1,4,4,3,10,2,-8,-2,-7,-2,8,-6,-3,7,5,2,-8,2,-8,1,-9,-8,1,-10,2,1,-4,-7,10,-2,-7,-10,1,-6,9,6,10,4,8,2,-6,2,-2,8,-4,-6,7,6,10,-8,1,6,10,5,-4,7,-1,-9,-7,-2,9,2,4,5,-1,-2,7,-8,-9,-4,-1,10,-2,-3,-8,-2,5,-5,3,4,5,8,5,10,8,-5,-6,1,6,7,-10,-10,-2,-3,-7,8,-2,-3,-4,-1,6,3,2,10,-7,9,5,-2,4,-1,-2,-2,-7,1,9,-6,-7,9,-5,7,-5,9,6,6,-7,-3,-5,-5,-4,-6,10,10,-10,-9,7,7,4,3,-9,2,-5,7,1,-4,10,-8,1,10,-6,-8,-4,-8,-3,8,9,2,-4,5,2,-8,7,-5,-3,-2,1,-5,-5,5,1,3,-5,5,-3,5,-8,-8,-1,5,-7,5,5,4,3,1,5,6,-7,1,1,-5,-1,4,-5,7,6,-1,4,-2,-7,10,4,-3,-7,1,2,-7,-1,6,1,-10,-9,-7,-6,-7,1,6,5,8,-6,10,-7,3,-9,5,-4,7,6,6,5,7,-3,3,4,8,4,-8,-4,-10,9,2,-10,7,-3,8,-6,-5,-7,7,-2,9,-2,7,-7,-10,2,-10,-1,8,9,1,10,6,-4,7,5,-4,-5,6,9,8,8,-4,6,2,-10,3,-8,-7,10,-10,10,-6,6,8,-8,7,-6,-4,4,8,-8,4,-7,-8,-5,-4,2,-1,-1,-4,-5,6,3,-4,5,-3,-2,-9,-9,8,5,8,-3,8,8,-5,-2,-4,1,3,9,-9,4,10,4,7,1,9,-4,7,8,7,-1,8,-9,9,9,-9,-7,8,8,-3,1,-10,-10,9,9,9,-6,-3,7,5,2,-1,-4,2,-6,-10,6,2,-10,-3,8,10,-8,1,5,-3,3,-5,5,-10,2,-8,3,-6,2,2,1,5,3,7,5,6,-4,-4,10,-1,-5,3,-10,1,-8,3,-2], dtype = "uint16")#candidate|11910|(3072,)|const|uint16
call_11909 = relay.TupleGetItem(func_3372_call(relay.reshape(const_11910.astype('uint16'), [12, 16, 16]), relay.reshape(const_11910.astype('uint16'), [12, 16, 16]), ), 0)
call_11911 = relay.TupleGetItem(func_3375_call(relay.reshape(const_11910.astype('uint16'), [12, 16, 16]), relay.reshape(const_11910.astype('uint16'), [12, 16, 16]), ), 0)
func_10710_call = mod.get_global_var('func_10710')
func_10713_call = mutated_mod.get_global_var('func_10713')
const_11916 = relay.const(2, dtype = "uint64")#candidate|11916|()|const|uint64
call_11915 = relay.TupleGetItem(func_10710_call(relay.reshape(const_11916.astype('uint64'), [])), 3)
call_11917 = relay.TupleGetItem(func_10713_call(relay.reshape(const_11916.astype('uint64'), [])), 3)
output = relay.Tuple([call_11907,call_11909,const_11910,call_11915,const_11916,])
output2 = relay.Tuple([call_11908,call_11911,const_11910,call_11917,const_11916,])
func_11918 = relay.Function([], output)
mod['func_11918'] = func_11918
mod = relay.transform.InferType()(mod)
output = func_11918()
func_11919 = relay.Function([], output)
mutated_mod['func_11919'] = func_11919
mutated_mod = relay.transform.InferType()(mutated_mod)
func_8524_call = mod.get_global_var('func_8524')
func_8526_call = mutated_mod.get_global_var('func_8526')
call_11937 = func_8524_call()
call_11938 = func_8524_call()
func_7206_call = mod.get_global_var('func_7206')
func_7208_call = mutated_mod.get_global_var('func_7208')
const_11940 = relay.const([-4,1,-2,4,5,-5,1,-3,3,5,-2,-1,6,-5,-10,4,-9,8,6,-3,1,3,7,-8,-8,10,-5,10,-6,-8,-5,-2,9,-6,-3,5,-6,-5,-4,3,3,-3,-4,-2,10,-1,-2,9,-5,6,5,-4,-2,4,-10,-10,-2,-5,-8,9,7,-4,10,-10,-10,5,-2,6,7,-9,-9,-4,-10,9,6,-7,-5,1,4,-2,-10,10,7,-3,8,-1,-1,-9,-4,10,-4,10,-7,7,-2,8,8,-5,5,-9,-2,-1,-7,-3,-1,-10,1,4,-1,-1,-2,7,6,4,10,6,6,-4,-10,-4,9,5,4,-7,-2,9,7,1,8,9,-1,-1,-2,9,-1,2,7,-9,7,-7,6,3,4,1,1,1,2,-6,6,-8,-10,-6,-8,-7,2,-5,10,4,-2,-7,2,3,-1,-2,-6,-3,-1,-3,-5,-5,6,5,-8,1,1,-10,-7,9,-6,4,-1,10,7,2,-6,1,7,-10,-5,2,9,9,7,-4,10,4,-7,3,8,8,-2,-5,-4,-1,-6,-3,7,10,3,-8,2,-2,8,4,1,-1,-10,-2,-1,-1,8,-3,9,2,7,-5,-1,7,4,-7,-3,8,5,8,-4,5,5,8,1,-4,-9,-7,-5,2,-8,-6,9,6,5,2,-5,1,4,1,-9,-4,-5,-9,-9,-2,1,-2,4,-6,4,-6,4,-6,-9,4,6,-6,-10,3,-9,-8,5,-3,-8,7,5,-10,3,9,-6,9,2,-3,2,4,1,2,-4,4,-3,5,-4,-9,2,8,3,-8,-5,-9,-6,-10,7,-4,8,4,-1,-9,5,-4,6,-2,3,3,-2,-7,-7,7,3,-6,3,4,10,-1,-3,-1,10,7,-7,1,5,10,-9,8,10,4,-6,7,2,-3,4,-4,-1,-8,-3,8,1,2,4,-1,-3,-8,-3,-9,5,-8,9,-3,-2,7,-2,-3,-2,2,-4,8,7,-10,-3,5,-2,6,2,-2,-2,10,-3,-6,10,8,-10,1,4,-10,-2,-4,-8,6,2,4,6,-8,9,-3,-4,2,9,5,-7,-2,-10,3,-7,-7,6,2,7,10,-8,6,-6,-7,-2,-10,-7,-7,-1,4,9,6,5,7,10,10,10,1,4,3,-10,6,7,4,-6,-5,-2,-2,1,-10,5,-10,-6,3,8,-8,10,4,1,-7,-8,4,5,8,-3,8,10,5,10,-8,5,-7,-1,-4,10,-9,-6,-10,-9,9,-9,-2,-7,-9,-6,-5,4,-7,2,-9,-5,-1,-3,3,1,6,9,3,6,4,8,4,-1,10,4,-8,-10,-9,-9,-7,-4,-2,-2,10,-6,1,-4,-7,7,10,9,-10,4,3,4,8,4,3,-5,-7,5,-7,4,4,3,3,-10,10,4,1,-5,8,-9,7,-3,-6,-2,-7,-9,10,-7,-6,7,2,1,-3,-4,-8,-1,-8,-9,3,9,10,3,4,2,-6,5,-4,3,5,-8,10,-7,-4,-5,8,8,-6,7,-10,7,9,8,-2,-9,-10,-9,-6,1,5,-8,-1,-2,-9,4,-7,7,-7,-7,8,4,-5,-8,-1,1,-6,8,7,-4,-6,-6,-3,9,10,7,-6,-5,5,-9,6,-2,-1,10,10,-4,4,1,3,-5,8,2,-4,2,-2,-6,5,1,-8,-3,6,-7,7,10,-8,4,9,-1,-5,-2,7,5,8,5,-8,-6,-6,-7,-1,-5,-3,8,-5,5,-3,6,7,-10,-9,4,-7,-2,-5,8,-5,6,1,10,-2,-5,3,5,-5,6,-3,-1,-3,3,-3,4,3,-8,4,10,4,-1,7,9,-2,-5,-5,5,-1,-6,9,-6,7,-5,-3,-9,10,-4,-7,-8,7,-5,-2,-2,9,9,7,-8,-9,-7,8,1,-5,7,-7,-2,8,9,-6,-3,1,2,-7,-2,3,-1,5,-3,7,2,-4,-10,-10,2,-10,-4,7,8,-6,2,-10,-2,-5,3,4,-7,10,1,-6,9,-6,-6,-6,-8,-5,-4,3,9,-3,-3,-10,5,8,1,9,-10,4,9,-2,-4,5,-3,-4,-10,5,-3,-4,6,-6,-3,-8,9,1,-3,3,2,-3,-8,-7,5,-2,8,9,-5,2,10,-3,3,-5,8,2,-7,5,4,-6,4,9,3,6,3,-7,10,-1,7,7,-5,-5,6,8,2,10,1,9,-7,3,3,-2,2,-5,-1,-6,1,-7,-3,-6,-10,-2,4,-4,-6,-1,-6,3,-8,1,-1,4,-8,7,-7,-8,-1,-9,-4,8,-9,-3,3,7,4,-3,-4,-5,9,6,8,4,-8,6,5,2,-2,2,-10,-9,6,-9,8,-5,-9,2,6,-9,-6,-6,7,-6,4,-4,-7,-1,4,5,6,-8,4,-4,-3,-7,-8,-1,-1,-3,7,9,4,-8,10,10,-5,4,-6,2,-1,-2,9,5,-2,-7,8,2,-8,10,-6,-5,-9,-2,7,-8,-2,9,-6,3,3,-9,-8,4,-5,-3,9,4,8,4,-10,6,-5,-3,-9,2,-8,6,-6,-3,9,2,5,5,-9,-9,-3,1,7,-10,-4,-2,-7,-10,1,4,9,-5,9,8,-8,9,9,9,5,6,-4,-2,7,4,5,-5,1,9,-1,-7,3,8,7,-9,9,-2,4,-5,-7,-8,-6,-7,6,-6,4,-3,1,-10,-1,1,-6,4,-10,-2,6,9,4,9,-3,-6,8,3,-1,8,-4,3,-3,-2,3,-9,-6,3,4,2,8,-4,7,8,2,3,6,-8,10,1,5,-4,-6,-3,-10,-8,4,5,-9,1,-8,7,-10,-2,-6,4,10,-4,-9,-9,-5,7,8,1,6,7,8,-7,-1,-7,-1,2,-2,-2,-5,-10,-7,-10,-1,-2,-4,-1,5,9,7,6,-10,3,-5,3,-5,2,1,7,-2,-9,8,-9,7,2,7,-6,-4,-8,-2,-1,-5,-9,5,-8,-4,3,8,6,1,1,-6,4,-6,1,3,-6,-4,-5,-10,-6,-2,8,-3,5,-2,2,7,-8,-8,2,-10,2,-1,3,-1,-8,9,3,10,-6,8,10,5,8,-6,7,-9,10,-5,3,-3,1,5,-2,5,7,7,7,-7,3,5,1,-8,-4,-5,3,6,-10,9,7,-1,5,4,-7,-9,4,2,-8,6,7,8,9,-3,6,10,-8,-8,6,7,2,-6,9,-2,10,8,-9,-7,-10,-5,4,10,4,-5,1,-4,9,1,-7,5,-1,5,9,8,2,-6,9,-8,-5,5,-6,-10,10,3,6,-5,2,7,-1,1,-10,-10,2,-4,-1,-4,8,2,-7,5,4,2,-1,-9,6,6,6,5,-3,4,7,-1,-4,-5,9,-6,-2,-10,7,-7,-1,7,8,3,2,-5,7,-6,-10,-2,4,1,6,1,3,6,-1,-9,-6,2,2,-9,-5,10,7,-4,1,7,9,3,-5,5,-4,7,-9,-10,-6,1,-3,9,-2,10,-8,-3,4,8,4,7,8,-10,3,-9,8,-2,-1,-2,4,8,-1,-1,-6,-4,10,10,5,4,-9,-7,-3,1,-2,6,-7,1,7,2,-9,-6,10,-9,-4,-3,6,-4,-10,2,8,-9,-4,2,10,-7,-2,10,-6,7,3,-7,-1,-9,-5,-3,1,-9,-2,-8,-7,-5,-7,1,5,-7,7,7,-4,6,-7,6,3,-5,-8,-1,-8,-4,-3,-10,10,-7,1,4,10,9,-1,7,10,-10,5,-3,-8,-9,9,-9,7,5,-10,7,9,9,-9,-5,-8,-7,-8,5,-7,-7,4,-5,-4,10,1,5,-3,1,1,-3,3,-4,-10,9,5,-2,-3,-1,1,-10,9,6,10,-4,-5,1,-6,-1,4,-2,7,8,-4,7,-10,-10,10,9,-3,-10,1,-8,-6,1,-10,-9,-10,-5,5,10,8,-4,-7,-10,-9,1,-2,5,10,8,-1,-7,5,5,-5,-5,6,3,4,6,-6,3,7,-5,-4,-1,1,3,-9,6,-5,10,2,-7,-9,-2,-1,2,-1,-7,2,-9,5,9,-10,1,-5,9,4,-4,6,-5,-10,-4,-6,5,10,-10,-6,10,-1,-3,10,4,7,-7,5,-9,1,-8,-8,-4,7,-5,3,2,6,10,7,-10,-3,7,-8,-5,-4,5,-7,10,3,8,-1,-9,8,-5,-5,-1,-3,-8,-7,-2,-7,-2,-6,-8,-10,-4,-1,-9,4,3,-10,-8,5,4,9,2,2,10,-10,8,9,4,7,-8,-9,8,5,10,2,-1,-9,8,-1,-1,1,5,-1,9,-2,9,-7,-1,-3,-4,9,7,-2,-9,-3,6,-10,-3,9,1,10,7,6,-2,10,-5,5,7,7,2,8,6,-10,1,3,-3,3,-10,9,-10,-10,-8,-9,2,-2,-7,-2,-10,-2,-2,-6,-7,6,-8,1,-3,-4,-6,7,8,10,-4,6,3,-9,-4,1,-2,1,1,9,-3,-7,4,4,-5,-7,5,5,3,4,-8,9,1,1,3,5,3,-4,-6,-10,3,2,-1,7,-4,1,5,4,-1,-7,7,2,-2,8,5,10,7,7,2,2,-6,-6,5,6,-6,-10,-2,4,9,1,2,-1,5,7,-3,-1,-3,9,-8,-2,7,-9,6,-5,5,-8,-9,-6,-10,-2,-3,3,2,4,8,-6,9,6,-7,2,-6,9,-3,10,9,8,4,9,-5,6,8,10,5,7,-4,-4,-1,-8,9,8,7,-1,7,-7,-5,-6,4,2,-2,3,-6,-8,1,1,-1,9,5,3,2,-4,2,9,6,7,-8,3,7,-3,7,-8,5,10,-9,-3,2,7,-9,-2,-10,4,9,-4,-1,5,-2,-8,-10,8,1,10,1,7,-6,7,-8,-3,-8,-3,5,7,-1,-4,-3,-10,-6,-8,-10,4,-6,3,2,2,5,9,3,9,10,5,-8,10,5,-8,4,2,-5,-5,3,6,-3,9,-10,-10,-4,6,9,-5,-5,-9,6,-1,8,-7,3,10,6,-2,10,7,-6,-7,10,-7,-4,7,10,1,4,-1,-9,1,-2,2,-4,7,1,-2,5,-9,8,1,2,7,7,-10,-9,-4,3,-7,2,-6,-10,-7,8,6,-9,-5,8,-6,-10,-3,-9,-3,10,1,4,8,-4,10,8,9,2,10,-5,-5,5,5,-5,-10,6,9,-9,-3,10,6,-9,9,6,-1,8,-6,-6,-10,-9,5,2,-7,-9,-3,-4,-10,1,-6,9,-9,-7,-1,-6,-3,-1,-2,2,-1,10,1,2,-10,-1,1,-8,-8,-5,-6,-1,-10,7,5,-1,-10,2,-8,-5,9,-7,-5,-1,9,-1,1,-6,-4,2,2,-6,8,-8,-4,7,6,-4,-10,-3,4,-4,5,5,2,-9,-5,-9,-4,-9,9,-10,3,-5,10,2,1,9,5,-7,3,1,2,-1,8,-3,-10,-1,10,6,3,5,3,2,-10,-2,5,-3,5,3,5,-8,2,8,5,-1,-9,2,2,9,-5,7,4,6,3,1,-5,5,-10,9,-6,-4,9,-8,-2,-3,7,6,9,1,3,-1,4,-8,-10,10,9,4,9,-9,10,7,-9,9,7,9,3,-8,8,1,-5,8,2,2,-4,2,10,-9,6,-8,-9,3,-8,1,9,8,1,-7,-5,-6,-7,-3,10,7,-2,-9,1,5,4,-7,-7,8,8,1,-2,2,-5,-6,7,-3,8,1,3,-9,1,-2,1,-6,-3,4,-4,-5,-1,6,-6,-8,10,-4,-5,-9,-10,-5,-9,2,8,7,4,2,5,-5,6,7,-5,8,5,6,-8,-10,10,9,10,9,-10,-1,-9,-7,-2,-1,-7,-6,-6,-10,3,-3,4,2,-10,7,-2,-6,-5,-5,9,-3,-7,-1,-1,-9,-10,9,4,5,-2,5,-1,4,8,-2,-7,5,3,-9,6,-3,2,-10,5,2,10,-3,10,4,9,7,10,-2,-8,9,2,-8,-4,-3,-6,6,4,-6,7,4,-7,-3,-5,-9,-9,4,-2,6,-3,-5,-5,2,2,-6,9,6,3,2,-6,10,3,7,-6,-1,1,7,-9,-7,-8,-10,3,2,7,5,-7,1,8,-3,-10,-3,-2,-8,9,4,6,-4,-1,-8,-10,-6,-7,7,4,2,-6,-4,5,-3,-7,4,10,4,-4,-2,7,-3,4,2,2,1,-8,10,6,10,8,-7,-1,2,5,-4,-1,-9,-9,-2,-6,10,-7,-9,-2,8,-2,10,8,-3,-7,7,3,4,10,2,-10,-10,-3,-2,10,8,-3,-9,10,5,-8,7,2,-5,9,6,10,-6,7,-9,-6,-10,5,1,9,5,2,-1,3,-5,-3,-2,9,5,8,4,1,4,-3,-1,2,-2,-8,-9,8,5,-4,-4,7,-10,5,8,10,-10,-6,7,-9,-4,-5,7,-6,-7,-1,5,2,4,3,-3,-3,-8,-6,-9,-8,-1,8,6,-2,4,4,3,7,3,-9,-3,-9,-3,5,-1,9,-6,10,8,-5,-7,-2,-6,8,-6,-6,-3,-9,-4,-2,-7,-7,-7,5,8,10,10,8,10,5,-4,7,8,6,10,6,-9,2,-9,3,-6,5,-4,2,-8,2,-6,1,-4,-7,-7,4,4,-3,-3,-2,-7,5,-9,-7,-1,-1,7,4,-1,8,4,5,7,2,-2,9], dtype = "int32")#candidate|11940|(2520,)|const|int32
call_11939 = relay.TupleGetItem(func_7206_call(relay.reshape(const_11940.astype('int32'), [2520, 1])), 5)
call_11941 = relay.TupleGetItem(func_7208_call(relay.reshape(const_11940.astype('int32'), [2520, 1])), 5)
uop_11948 = relay.exp(const_11940.astype('float64')) # shape=(2520,)
func_8717_call = mod.get_global_var('func_8717')
func_8718_call = mutated_mod.get_global_var('func_8718')
call_11951 = relay.TupleGetItem(func_8717_call(), 0)
call_11952 = relay.TupleGetItem(func_8718_call(), 0)
func_9556_call = mod.get_global_var('func_9556')
func_9558_call = mutated_mod.get_global_var('func_9558')
const_11956 = relay.const([-2.889193,-6.201439,-8.998945,9.963776,0.922525,5.944910,4.193637,-3.126215,8.817151,-5.771330,3.025064,-0.382993,7.662419,7.732916,-0.187869,-6.973799,-4.227313,-1.925066,-2.366490,-0.853918,1.941018,5.765268,7.756584,8.424704,5.262653,2.851382,-8.749147,6.104655,-2.520778,-2.123177,0.987271,-2.460136,7.601571,-5.911874,-0.627001,-9.904659,5.967360,-2.705548,3.844243,0.030923,1.411586,-9.828881,3.482377,-2.287854,-4.623313,-3.180488,2.952016,7.009587,2.609330,9.181213,7.579881,5.828624,1.697850,8.219773,6.753069,3.364807,8.222184,-0.094461,2.328226,-2.821086,1.372256,-9.555947,7.783389,4.018886,5.027482,-4.413714,-8.850341,9.616516,-5.480307,6.399395,-6.543140,-8.868078,-5.499520,-2.737589,6.198228,1.425247,7.631546,-8.270916,8.135834,9.308434,-1.390400,0.802327,9.312455,-6.215001,3.384399,6.467768,-3.103518,8.432787,-4.631320,1.094988,4.638428,-8.542477,-2.316211,3.019411,-0.246604,-7.856684,6.357521,-8.438018,8.458033,-2.088010,-5.130308,-7.111355,8.022590,1.312845,7.909253,-2.407377,8.753240,3.776919,3.449610,1.845778,6.962786,-2.281301,-9.232995,0.432705,6.674697,-8.751819,0.322279,-9.453724,6.435719,-5.465727,-4.705446,0.424652,6.545260,3.227067,7.152719,-7.469408,0.896798,7.533647,9.783425,4.296457,-7.502334,-8.082050,-0.722410,6.652058,-7.097816,-5.689813,-4.253817,-5.916554,-8.573570,-9.557631,5.283829,-9.002484,5.115402,-2.989317,-7.315976,0.353157,3.314982,-4.368767,-2.596981,2.308262,7.615411,-2.284351,4.251211,1.470639,-9.715366,-8.406649,-8.689764,-3.551825,-1.441528,9.302347,-4.548599,-5.935771,-8.032684,2.309985,-9.032714,-5.151578,-7.726141,4.851426,1.662324,0.626137,-1.256779,8.297601,-9.720220,-0.146961,-9.743853,3.824844,-7.134761,3.754923,-3.199387,6.938601,1.960629,-5.279555,-8.467088,-3.050737,-4.782827,-7.276823,9.621163,-8.824644,4.566844,-2.633278,-3.532050,1.584677,8.083850,5.491042,9.537813,-7.134496,-7.311081,9.280350,-4.892871,0.449029,5.482686,5.791246,6.255860,1.643960,-7.512583,4.625682,1.737308,2.384855,5.329450,0.817723,-9.923048,7.888838,-0.739878,1.283419,-4.569756,-7.745218,-6.889191,-2.579361,4.713072,5.584089,-8.881990,-4.355614,6.743583,-9.225658,-5.881932,4.696344,-4.801578,-2.639315,7.414891,6.638358,-1.095923,-9.017108,-6.459656,-9.228763,-7.319796,2.867430,-4.961766,-1.958838,-1.073434,-8.129869,-9.863128,7.035225,7.731333,-5.280769,2.585862,-1.544813,2.996010,7.700433,-2.907480,5.578108,5.706760,1.475559,-7.360257,1.939123,-5.751304,5.737196,3.869449,4.641803,-2.897923,-3.296505,-2.710101,2.472219,1.697045,3.965507,3.927047,-4.673133,3.927099,-3.307876,2.394568,-4.583768,-1.106107,3.893431,-9.473404,-8.615438,-3.516160,2.203669,2.961168,-2.029052,4.748448,-3.075252,-0.541835,1.595482,-6.417497,7.638329,6.993108,-7.142596,8.526684,1.671025,-8.321707,4.744788,-3.698788,9.188101,1.628441,-5.945336,1.100796,4.315466,1.683508,-9.202357,1.906134,-2.703732,2.199139,-9.025625,-9.299653,4.267887,4.368820,4.999163,8.826338,5.459344,-0.497294,2.499470,4.363896,1.115802,2.620802,-2.443011,4.772846,8.057669,3.214536,0.665086,6.945002,0.161332,1.905274,9.658409,5.674450,-6.916478,-2.304439,-2.321170,-4.341404,0.907287,3.071426,-0.440986,-1.343032,7.278132,5.304916,4.262134,6.288376,2.698448,8.837144,0.616983,-1.696404,-5.404289,8.651722,-3.307412,-4.208351,4.118256,6.277559,-4.907604,0.392988,-3.312094,-0.769695,-3.446368,-7.665219,9.647876,-5.690634,-3.705096,-8.938156,4.144785,6.626770,4.287939,3.746489,5.213673,7.625023,-7.928311,-7.784033,6.355836,-1.957302,-5.577901,-0.575902,-0.414072,4.758004,2.288742,1.653594,3.466706,-7.670076,-5.063244,-2.178569,-0.133216,2.609048,-8.576720,0.979178,3.423611,7.742069,-0.553286,1.090577,-5.297215,-6.858882,-0.599340,9.188754,-1.269978,-2.149139,4.220876,7.174962,-4.132405,9.516551,-0.040418,6.621004,-2.038510,6.988492,-2.177850,-4.284790,7.064595,-6.105368,-4.154970,-8.052276,5.504098,-8.925129,2.114331,-0.090698,-9.811501,-3.330903,9.089662,-1.314033,4.595470,-2.905468,-2.053000,-3.222377,8.717083,8.527287,-8.584357,7.455266,6.580662,8.291156,1.812683,-2.668692,3.223631,-6.184893,-7.201437,-3.696851,-1.063627,9.675664,8.954281,7.142420,-0.632771,8.389757,-1.150678,-0.627257,-3.512039,-6.063302,-5.140039,4.306952,6.057112,-9.247284,3.794965,5.083354,6.663292,-5.748723,9.333594,-4.836772,4.674231,-2.284215,-9.051313,0.762066,-1.719746,-2.035989,-5.046819,-6.864023,2.516275,-5.864721,-0.521514,-2.815856,-0.872788,-5.038123,-9.451278,-8.246391,-5.496243,8.647526,1.557671,8.997795,-6.022054,-4.455169,-0.116038,3.426859,9.571638,-7.284118,0.988809,-3.351736,6.979869,1.214645,7.844737,0.943424,0.408232,-6.653077,6.747619,-7.817744,7.121276,1.862511,-9.892762,9.452845,-1.100713,1.373070,-0.063164,6.369877,-3.114453,-7.891156,-7.123008,-3.317527,-5.410901,3.222228,-4.175754,-3.453741,-5.628896,0.540506,-6.823285,8.446892,-3.115246], dtype = "float32")#candidate|11956|(504,)|const|float32
call_11955 = relay.TupleGetItem(func_9556_call(relay.reshape(const_11956.astype('float32'), [9, 8, 7])), 2)
call_11957 = relay.TupleGetItem(func_9558_call(relay.reshape(const_11956.astype('float32'), [9, 8, 7])), 2)
func_1569_call = mod.get_global_var('func_1569')
func_1572_call = mutated_mod.get_global_var('func_1572')
call_11958 = func_1569_call(relay.reshape(const_11940.astype('int32'), [15, 14, 12]), relay.reshape(const_11940.astype('int32'), [15, 14, 12]), )
call_11959 = func_1569_call(relay.reshape(const_11940.astype('int32'), [15, 14, 12]), relay.reshape(const_11940.astype('int32'), [15, 14, 12]), )
bop_11968 = relay.not_equal(call_11958.astype('bool'), relay.reshape(uop_11948.astype('bool'), relay.shape_of(call_11958))) # shape=(15, 14, 12)
bop_11971 = relay.not_equal(call_11959.astype('bool'), relay.reshape(uop_11948.astype('bool'), relay.shape_of(call_11959))) # shape=(15, 14, 12)
uop_11974 = relay.acos(bop_11968.astype('float32')) # shape=(15, 14, 12)
uop_11976 = relay.acos(bop_11971.astype('float32')) # shape=(15, 14, 12)
var_11982 = relay.var("var_11982", dtype = "float64", shape = (2520,))#candidate|11982|(2520,)|var|float64
bop_11983 = relay.multiply(uop_11948.astype('float32'), relay.reshape(var_11982.astype('float32'), relay.shape_of(uop_11948))) # shape=(2520,)
output = relay.Tuple([call_11937,call_11939,call_11951,call_11955,const_11956,uop_11974,bop_11983,])
output2 = relay.Tuple([call_11938,call_11941,call_11952,call_11957,const_11956,uop_11976,bop_11983,])
func_11987 = relay.Function([var_11982,], output)
mod['func_11987'] = func_11987
mod = relay.transform.InferType()(mod)
var_11988 = relay.var("var_11988", dtype = "float64", shape = (2520,))#candidate|11988|(2520,)|var|float64
output = func_11987(var_11988)
func_11989 = relay.Function([var_11988], output)
mutated_mod['func_11989'] = func_11989
mutated_mod = relay.transform.InferType()(mutated_mod)
func_9785_call = mod.get_global_var('func_9785')
func_9786_call = mutated_mod.get_global_var('func_9786')
call_12038 = relay.TupleGetItem(func_9785_call(), 0)
call_12039 = relay.TupleGetItem(func_9786_call(), 0)
uop_12045 = relay.cosh(call_12038.astype('float32')) # shape=(10, 8, 3)
uop_12047 = relay.cosh(call_12039.astype('float32')) # shape=(10, 8, 3)
output = relay.Tuple([uop_12045,])
output2 = relay.Tuple([uop_12047,])
func_12049 = relay.Function([], output)
mod['func_12049'] = func_12049
mod = relay.transform.InferType()(mod)
output = func_12049()
func_12050 = relay.Function([], output)
mutated_mod['func_12050'] = func_12050
mutated_mod = relay.transform.InferType()(mutated_mod)
func_8224_call = mod.get_global_var('func_8224')
func_8225_call = mutated_mod.get_global_var('func_8225')
call_12195 = relay.TupleGetItem(func_8224_call(), 0)
call_12196 = relay.TupleGetItem(func_8225_call(), 0)
func_11705_call = mod.get_global_var('func_11705')
func_11706_call = mutated_mod.get_global_var('func_11706')
call_12199 = relay.TupleGetItem(func_11705_call(), 0)
call_12200 = relay.TupleGetItem(func_11706_call(), 0)
func_9785_call = mod.get_global_var('func_9785')
func_9786_call = mutated_mod.get_global_var('func_9786')
call_12202 = relay.TupleGetItem(func_9785_call(), 0)
call_12203 = relay.TupleGetItem(func_9786_call(), 0)
output = relay.Tuple([call_12195,call_12199,call_12202,])
output2 = relay.Tuple([call_12196,call_12200,call_12203,])
func_12207 = relay.Function([], output)
mod['func_12207'] = func_12207
mod = relay.transform.InferType()(mod)
mutated_mod['func_12207'] = func_12207
mutated_mod = relay.transform.InferType()(mutated_mod)
func_12207_call = mutated_mod.get_global_var('func_12207')
call_12208 = func_12207_call()
output = call_12208
func_12209 = relay.Function([], output)
mutated_mod['func_12209'] = func_12209
mutated_mod = relay.transform.InferType()(mutated_mod)
func_8843_call = mod.get_global_var('func_8843')
func_8844_call = mutated_mod.get_global_var('func_8844')
call_12219 = func_8843_call()
call_12220 = func_8843_call()
func_11547_call = mod.get_global_var('func_11547')
func_11548_call = mutated_mod.get_global_var('func_11548')
call_12223 = func_11547_call()
call_12224 = func_11547_call()
func_9785_call = mod.get_global_var('func_9785')
func_9786_call = mutated_mod.get_global_var('func_9786')
call_12232 = relay.TupleGetItem(func_9785_call(), 0)
call_12233 = relay.TupleGetItem(func_9786_call(), 0)
func_10710_call = mod.get_global_var('func_10710')
func_10713_call = mutated_mod.get_global_var('func_10713')
var_12244 = relay.var("var_12244", dtype = "uint64", shape = ())#candidate|12244|()|var|uint64
call_12243 = relay.TupleGetItem(func_10710_call(relay.reshape(var_12244.astype('uint64'), [])), 3)
call_12245 = relay.TupleGetItem(func_10713_call(relay.reshape(var_12244.astype('uint64'), [])), 3)
output = relay.Tuple([call_12219,call_12223,call_12232,call_12243,var_12244,])
output2 = relay.Tuple([call_12220,call_12224,call_12233,call_12245,var_12244,])
func_12250 = relay.Function([var_12244,], output)
mod['func_12250'] = func_12250
mod = relay.transform.InferType()(mod)
mutated_mod['func_12250'] = func_12250
mutated_mod = relay.transform.InferType()(mutated_mod)
var_12251 = relay.var("var_12251", dtype = "uint64", shape = ())#candidate|12251|()|var|uint64
func_12250_call = mutated_mod.get_global_var('func_12250')
call_12252 = func_12250_call(var_12251)
output = call_12252
func_12253 = relay.Function([var_12251], output)
mutated_mod['func_12253'] = func_12253
mutated_mod = relay.transform.InferType()(mutated_mod)
func_9358_call = mod.get_global_var('func_9358')
func_9360_call = mutated_mod.get_global_var('func_9360')
call_12326 = relay.TupleGetItem(func_9358_call(), 0)
call_12327 = relay.TupleGetItem(func_9360_call(), 0)
output = call_12326
output2 = call_12327
func_12328 = relay.Function([], output)
mod['func_12328'] = func_12328
mod = relay.transform.InferType()(mod)
mutated_mod['func_12328'] = func_12328
mutated_mod = relay.transform.InferType()(mutated_mod)
func_12328_call = mutated_mod.get_global_var('func_12328')
call_12329 = func_12328_call()
output = call_12329
func_12330 = relay.Function([], output)
mutated_mod['func_12330'] = func_12330
mutated_mod = relay.transform.InferType()(mutated_mod)
const_12495 = relay.const(-1.973740, dtype = "float32")#candidate|12495|()|const|float32
var_12496 = relay.var("var_12496", dtype = "float32", shape = (14, 10, 13))#candidate|12496|(14, 10, 13)|var|float32
bop_12497 = relay.power(const_12495.astype('float32'), var_12496.astype('float32')) # shape=(14, 10, 13)
bop_12500 = relay.right_shift(bop_12497.astype('uint32'), relay.reshape(var_12496.astype('uint32'), relay.shape_of(bop_12497))) # shape=(14, 10, 13)
output = bop_12500
output2 = bop_12500
func_12504 = relay.Function([var_12496,], output)
mod['func_12504'] = func_12504
mod = relay.transform.InferType()(mod)
mutated_mod['func_12504'] = func_12504
mutated_mod = relay.transform.InferType()(mutated_mod)
var_12505 = relay.var("var_12505", dtype = "float32", shape = (14, 10, 13))#candidate|12505|(14, 10, 13)|var|float32
func_12504_call = mutated_mod.get_global_var('func_12504')
call_12506 = func_12504_call(var_12505)
output = call_12506
func_12507 = relay.Function([var_12505], output)
mutated_mod['func_12507'] = func_12507
mutated_mod = relay.transform.InferType()(mutated_mod)
func_10494_call = mod.get_global_var('func_10494')
func_10495_call = mutated_mod.get_global_var('func_10495')
call_12539 = relay.TupleGetItem(func_10494_call(), 0)
call_12540 = relay.TupleGetItem(func_10495_call(), 0)
func_3372_call = mod.get_global_var('func_3372')
func_3375_call = mutated_mod.get_global_var('func_3375')
var_12542 = relay.var("var_12542", dtype = "uint16", shape = (48, 64))#candidate|12542|(48, 64)|var|uint16
call_12541 = relay.TupleGetItem(func_3372_call(relay.reshape(var_12542.astype('uint16'), [12, 16, 16]), relay.reshape(var_12542.astype('uint16'), [12, 16, 16]), ), 0)
call_12543 = relay.TupleGetItem(func_3375_call(relay.reshape(var_12542.astype('uint16'), [12, 16, 16]), relay.reshape(var_12542.astype('uint16'), [12, 16, 16]), ), 0)
func_780_call = mod.get_global_var('func_780')
func_783_call = mutated_mod.get_global_var('func_783')
var_12549 = relay.var("var_12549", dtype = "float32", shape = (65,))#candidate|12549|(65,)|var|float32
var_12550 = relay.var("var_12550", dtype = "float64", shape = (1200, 1))#candidate|12550|(1200, 1)|var|float64
call_12548 = relay.TupleGetItem(func_780_call(relay.reshape(var_12549.astype('float32'), [13, 5]), relay.reshape(var_12550.astype('float64'), [1200,]), ), 1)
call_12551 = relay.TupleGetItem(func_783_call(relay.reshape(var_12549.astype('float32'), [13, 5]), relay.reshape(var_12550.astype('float64'), [1200,]), ), 1)
uop_12575 = relay.asin(var_12542.astype('float64')) # shape=(48, 64)
uop_12583 = relay.tan(var_12550.astype('float64')) # shape=(1200, 1)
output = relay.Tuple([call_12539,call_12541,call_12548,var_12549,uop_12575,uop_12583,])
output2 = relay.Tuple([call_12540,call_12543,call_12551,var_12549,uop_12575,uop_12583,])
func_12586 = relay.Function([var_12542,var_12549,var_12550,], output)
mod['func_12586'] = func_12586
mod = relay.transform.InferType()(mod)
var_12587 = relay.var("var_12587", dtype = "uint16", shape = (48, 64))#candidate|12587|(48, 64)|var|uint16
var_12588 = relay.var("var_12588", dtype = "float32", shape = (65,))#candidate|12588|(65,)|var|float32
var_12589 = relay.var("var_12589", dtype = "float64", shape = (1200, 1))#candidate|12589|(1200, 1)|var|float64
output = func_12586(var_12587,var_12588,var_12589,)
func_12590 = relay.Function([var_12587,var_12588,var_12589,], output)
mutated_mod['func_12590'] = func_12590
mutated_mod = relay.transform.InferType()(mutated_mod)
func_10843_call = mod.get_global_var('func_10843')
func_10844_call = mutated_mod.get_global_var('func_10844')
call_12681 = relay.TupleGetItem(func_10843_call(), 0)
call_12682 = relay.TupleGetItem(func_10844_call(), 0)
func_8275_call = mod.get_global_var('func_8275')
func_8278_call = mutated_mod.get_global_var('func_8278')
var_12684 = relay.var("var_12684", dtype = "float64", shape = (112,))#candidate|12684|(112,)|var|float64
call_12683 = relay.TupleGetItem(func_8275_call(relay.reshape(var_12684.astype('float64'), [112,])), 1)
call_12685 = relay.TupleGetItem(func_8278_call(relay.reshape(var_12684.astype('float64'), [112,])), 1)
output = relay.Tuple([call_12681,call_12683,var_12684,])
output2 = relay.Tuple([call_12682,call_12685,var_12684,])
func_12691 = relay.Function([var_12684,], output)
mod['func_12691'] = func_12691
mod = relay.transform.InferType()(mod)
var_12692 = relay.var("var_12692", dtype = "float64", shape = (112,))#candidate|12692|(112,)|var|float64
output = func_12691(var_12692)
func_12693 = relay.Function([var_12692], output)
mutated_mod['func_12693'] = func_12693
mutated_mod = relay.transform.InferType()(mutated_mod)
func_10740_call = mod.get_global_var('func_10740')
func_10741_call = mutated_mod.get_global_var('func_10741')
call_12735 = relay.TupleGetItem(func_10740_call(), 0)
call_12736 = relay.TupleGetItem(func_10741_call(), 0)
func_10036_call = mod.get_global_var('func_10036')
func_10039_call = mutated_mod.get_global_var('func_10039')
var_12780 = relay.var("var_12780", dtype = "uint64", shape = (900,))#candidate|12780|(900,)|var|uint64
call_12779 = relay.TupleGetItem(func_10036_call(relay.reshape(var_12780.astype('uint64'), [900,])), 3)
call_12781 = relay.TupleGetItem(func_10039_call(relay.reshape(var_12780.astype('uint64'), [900,])), 3)
const_12804 = relay.const([[[-4.552530,0.954047,-3.418116],[0.835912,-9.148091,-6.163959],[-0.015939,0.725401,-3.791639],[-1.281989,9.867656,-1.172348],[-9.842058,2.885962,-5.865357],[8.405698,-6.424698,3.749289],[9.418631,-3.424544,-2.368501],[4.008225,2.906963,-7.501054]],[[3.074781,-7.675301,-8.492360],[5.843643,-9.686426,-1.369044],[2.123061,1.864150,-8.097921],[2.839551,2.603016,5.333943],[-2.889758,-3.195312,-7.469916],[2.548742,3.640683,-0.797241],[7.702069,-5.996893,1.937683],[-4.991026,3.978860,-4.259138]],[[-8.518967,9.177712,4.386183],[-8.958301,5.637510,4.521411],[6.081087,4.137734,-1.984121],[-1.193891,-8.327876,-2.090640],[4.944419,-9.475465,-7.927217],[-5.193693,-4.259340,2.373068],[1.984245,5.571006,-7.282663],[-4.721675,-1.304227,0.115783]],[[7.090534,-6.023023,-0.555104],[2.085673,1.407398,-7.804625],[-7.239981,-6.879580,-2.364756],[-2.527952,1.300330,-3.243186],[0.575292,-1.254756,3.340771],[-4.410180,1.608892,-0.828542],[5.839868,-9.085812,0.569153],[9.078845,1.554008,6.411018]],[[5.399883,1.496859,4.506975],[-2.877132,-8.926407,-5.854063],[-5.310652,7.781298,5.665263],[-3.994464,3.989323,2.629951],[9.730833,1.787120,1.534611],[2.393924,-4.039752,8.246111],[-2.150443,-4.034206,-2.072089],[-9.406648,-4.860180,5.571513]],[[9.596994,-7.025895,-9.128981],[-5.259202,-7.204048,-2.912953],[-0.147945,-7.804975,5.006021],[-8.929746,-9.020175,-2.078134],[-6.735453,1.031885,-2.989178],[-8.020812,-1.293891,4.450806],[5.043275,7.628721,0.288726],[3.038721,7.955517,-8.366473]],[[4.970545,-4.527160,-3.117029],[0.450209,-9.197952,9.370995],[6.746957,-5.326328,-8.678238],[-3.220299,0.560345,-4.687072],[6.435524,-3.373879,3.540996],[9.531927,-7.933652,-6.103365],[4.774347,0.150276,9.784577],[-0.145713,-7.075026,-8.005502]],[[-6.464859,-1.679003,-9.569089],[-0.394332,-5.787063,-3.006916],[-8.048166,0.241667,-2.642450],[7.048001,9.928745,1.845805],[6.545924,7.939014,-3.541195],[-6.963112,-3.001240,7.974528],[6.849142,-2.416559,-8.485954],[-5.895629,0.503297,3.034081]],[[2.682882,5.732877,1.366616],[8.860108,-1.085721,7.352861],[3.435289,-8.575022,-7.030264],[-2.341967,5.380038,-3.786686],[-1.791698,-0.729900,-8.960316],[2.800620,-5.904595,-0.500359],[0.753647,-5.522270,-2.716936],[-9.295366,-2.524786,1.104563]],[[-7.434848,-0.348877,-4.871208],[-5.112721,9.033015,-8.921561],[-3.815904,-9.186628,-5.853851],[2.562219,-5.004609,-3.132903],[3.522379,-7.647106,3.847351],[-3.544224,-9.031262,5.198666],[4.459942,9.023379,0.776442],[-0.921206,3.001671,-7.938233]]], dtype = "float64")#candidate|12804|(10, 8, 3)|const|float64
bop_12805 = relay.divide(call_12735.astype('float32'), relay.reshape(const_12804.astype('float32'), relay.shape_of(call_12735))) # shape=(10, 8, 3)
bop_12808 = relay.divide(call_12736.astype('float32'), relay.reshape(const_12804.astype('float32'), relay.shape_of(call_12736))) # shape=(10, 8, 3)
bop_12824 = relay.bitwise_and(var_12780.astype('int64'), relay.reshape(call_12779.astype('int64'), relay.shape_of(var_12780))) # shape=(900,)
bop_12827 = relay.bitwise_and(var_12780.astype('int64'), relay.reshape(call_12781.astype('int64'), relay.shape_of(var_12780))) # shape=(900,)
output = relay.Tuple([bop_12805,bop_12824,])
output2 = relay.Tuple([bop_12808,bop_12827,])
func_12828 = relay.Function([var_12780,], output)
mod['func_12828'] = func_12828
mod = relay.transform.InferType()(mod)
var_12829 = relay.var("var_12829", dtype = "uint64", shape = (900,))#candidate|12829|(900,)|var|uint64
output = func_12828(var_12829)
func_12830 = relay.Function([var_12829], output)
mutated_mod['func_12830'] = func_12830
mutated_mod = relay.transform.InferType()(mutated_mod)
func_11321_call = mod.get_global_var('func_11321')
func_11322_call = mutated_mod.get_global_var('func_11322')
call_12916 = relay.TupleGetItem(func_11321_call(), 0)
call_12917 = relay.TupleGetItem(func_11322_call(), 0)
const_12935 = relay.const([[[9.716876,0.298717,5.485120],[5.560354,6.669349,6.033812],[7.547142,3.868379,8.250282],[-8.970009,7.213604,-3.613675],[-2.046771,9.202802,7.705171],[-4.157277,-1.521695,-6.064333],[1.434451,8.282078,7.541663],[5.907408,-7.496327,2.248309]],[[-8.850254,9.632504,-9.495575],[-9.506392,8.475360,-1.103077],[-1.705110,-1.999069,1.673196],[2.072416,-8.319058,2.738272],[0.654414,4.677240,7.952282],[0.918713,-8.175585,0.903942],[-9.623538,6.143690,1.079551],[-7.959666,6.291738,-7.023472]],[[7.637656,4.693261,3.364299],[6.471032,4.193213,-3.567953],[9.423483,-6.655989,-9.688294],[-2.460014,6.279298,0.430765],[-1.838225,-4.634192,-1.349467],[-9.900877,-4.300166,8.886121],[-8.668485,-7.483391,7.220224],[4.717646,-6.597064,-6.357188]],[[3.681157,4.320262,5.193888],[-1.703167,-4.985349,9.028106],[0.683634,1.044111,5.207106],[0.862642,2.608210,7.444834],[-7.809951,-3.303429,-0.657416],[-0.526597,2.193360,-6.669128],[-9.242634,-2.577604,8.013525],[2.957612,3.259079,8.603008]],[[7.911510,1.721184,-0.786197],[-2.876669,8.595077,-8.453775],[7.262019,9.234335,-9.076761],[7.088892,-7.999852,-7.662571],[2.278203,5.306676,-3.740027],[5.972464,6.148870,-3.753071],[5.858570,1.282671,9.412585],[-6.614615,-7.233469,-6.067195]],[[7.998776,9.617231,9.313650],[-8.265667,7.655994,-3.447190],[-7.747983,5.762290,-2.533546],[7.461683,-8.574274,-0.463203],[-2.656694,5.346459,-3.072387],[-6.532835,1.933585,-6.532205],[6.473703,-2.714623,-7.730372],[-7.890035,-9.626253,-8.016997]],[[1.277802,1.183247,-6.347907],[-3.070031,-4.129128,5.295542],[0.173469,5.146177,8.111024],[5.174978,-8.111203,4.714504],[-7.919595,1.696379,-2.560021],[9.739959,5.603434,6.446062],[-0.783684,2.602450,8.705318],[-1.049529,-7.056735,-8.494977]],[[4.896906,-3.527604,2.614019],[-4.599536,3.509776,-5.510154],[5.570971,4.291060,-5.952925],[8.414459,-1.378298,-3.988280],[4.910778,-8.369534,-5.651533],[-7.661724,0.759450,2.022410],[-7.015572,-0.730591,9.313945],[9.809288,1.791825,8.247070]],[[-2.149793,-2.112307,7.928299],[-6.414596,9.145327,-5.469921],[5.676552,5.019389,3.239280],[5.777799,-5.624907,9.042735],[1.871266,2.892416,-5.274409],[-0.920508,6.928543,1.351858],[1.649483,3.457359,0.668463],[-4.944436,-4.306369,3.389239]],[[-0.133004,-4.915932,-0.944018],[-8.247917,-3.174626,-4.250636],[2.184151,0.049417,-1.785722],[5.063613,3.331970,-4.956769],[2.174617,2.791653,0.849878],[3.685964,-4.612068,-3.644001],[-1.110147,-3.939901,-6.600764],[3.167372,7.084299,-2.432307]]], dtype = "float64")#candidate|12935|(10, 8, 3)|const|float64
bop_12936 = relay.add(call_12916.astype('uint64'), relay.reshape(const_12935.astype('uint64'), relay.shape_of(call_12916))) # shape=(10, 8, 3)
bop_12939 = relay.add(call_12917.astype('uint64'), relay.reshape(const_12935.astype('uint64'), relay.shape_of(call_12917))) # shape=(10, 8, 3)
func_11016_call = mod.get_global_var('func_11016')
func_11017_call = mutated_mod.get_global_var('func_11017')
call_12949 = relay.TupleGetItem(func_11016_call(), 0)
call_12950 = relay.TupleGetItem(func_11017_call(), 0)
output = relay.Tuple([bop_12936,call_12949,])
output2 = relay.Tuple([bop_12939,call_12950,])
func_12953 = relay.Function([], output)
mod['func_12953'] = func_12953
mod = relay.transform.InferType()(mod)
mutated_mod['func_12953'] = func_12953
mutated_mod = relay.transform.InferType()(mutated_mod)
func_12953_call = mutated_mod.get_global_var('func_12953')
call_12954 = func_12953_call()
output = call_12954
func_12955 = relay.Function([], output)
mutated_mod['func_12955'] = func_12955
mutated_mod = relay.transform.InferType()(mutated_mod)
var_12978 = relay.var("var_12978", dtype = "uint64", shape = (1, 12, 4))#candidate|12978|(1, 12, 4)|var|uint64
var_12979 = relay.var("var_12979", dtype = "uint64", shape = (15, 12, 4))#candidate|12979|(15, 12, 4)|var|uint64
bop_12980 = relay.multiply(var_12978.astype('uint64'), var_12979.astype('uint64')) # shape=(15, 12, 4)
output = relay.Tuple([bop_12980,])
output2 = relay.Tuple([bop_12980,])
func_12989 = relay.Function([var_12978,var_12979,], output)
mod['func_12989'] = func_12989
mod = relay.transform.InferType()(mod)
mutated_mod['func_12989'] = func_12989
mutated_mod = relay.transform.InferType()(mutated_mod)
func_12989_call = mutated_mod.get_global_var('func_12989')
var_12991 = relay.var("var_12991", dtype = "uint64", shape = (1, 12, 4))#candidate|12991|(1, 12, 4)|var|uint64
var_12992 = relay.var("var_12992", dtype = "uint64", shape = (15, 12, 4))#candidate|12992|(15, 12, 4)|var|uint64
call_12990 = func_12989_call(var_12991,var_12992,)
output = call_12990
func_12993 = relay.Function([var_12991,var_12992,], output)
mutated_mod['func_12993'] = func_12993
mutated_mod = relay.transform.InferType()(mutated_mod)
func_10532_call = mod.get_global_var('func_10532')
func_10533_call = mutated_mod.get_global_var('func_10533')
call_12995 = func_10532_call()
call_12996 = func_10532_call()
func_11077_call = mod.get_global_var('func_11077')
func_11078_call = mutated_mod.get_global_var('func_11078')
call_13035 = func_11077_call()
call_13036 = func_11077_call()
func_8668_call = mod.get_global_var('func_8668')
func_8671_call = mutated_mod.get_global_var('func_8671')
call_13038 = func_8668_call(relay.reshape(call_12995.astype('float64'), [10, 8, 3]))
call_13039 = func_8668_call(relay.reshape(call_12995.astype('float64'), [10, 8, 3]))
output = relay.Tuple([call_12995,call_13035,call_13038,])
output2 = relay.Tuple([call_12996,call_13036,call_13039,])
func_13065 = relay.Function([], output)
mod['func_13065'] = func_13065
mod = relay.transform.InferType()(mod)
output = func_13065()
func_13066 = relay.Function([], output)
mutated_mod['func_13066'] = func_13066
mutated_mod = relay.transform.InferType()(mutated_mod)
func_8224_call = mod.get_global_var('func_8224')
func_8225_call = mutated_mod.get_global_var('func_8225')
call_13070 = relay.TupleGetItem(func_8224_call(), 0)
call_13071 = relay.TupleGetItem(func_8225_call(), 0)
func_11918_call = mod.get_global_var('func_11918')
func_11919_call = mutated_mod.get_global_var('func_11919')
call_13080 = relay.TupleGetItem(func_11918_call(), 0)
call_13081 = relay.TupleGetItem(func_11919_call(), 0)
bop_13090 = relay.bitwise_or(call_13080.astype('int32'), relay.reshape(call_13070.astype('int32'), relay.shape_of(call_13080))) # shape=(10, 8, 3)
bop_13093 = relay.bitwise_or(call_13081.astype('int32'), relay.reshape(call_13071.astype('int32'), relay.shape_of(call_13081))) # shape=(10, 8, 3)
output = bop_13090
output2 = bop_13093
func_13103 = relay.Function([], output)
mod['func_13103'] = func_13103
mod = relay.transform.InferType()(mod)
mutated_mod['func_13103'] = func_13103
mutated_mod = relay.transform.InferType()(mutated_mod)
func_13103_call = mutated_mod.get_global_var('func_13103')
call_13104 = func_13103_call()
output = call_13104
func_13105 = relay.Function([], output)
mutated_mod['func_13105'] = func_13105
mutated_mod = relay.transform.InferType()(mutated_mod)
func_13103_call = mod.get_global_var('func_13103')
func_13105_call = mutated_mod.get_global_var('func_13105')
call_13113 = func_13103_call()
call_13114 = func_13103_call()
output = relay.Tuple([call_13113,])
output2 = relay.Tuple([call_13114,])
func_13120 = relay.Function([], output)
mod['func_13120'] = func_13120
mod = relay.transform.InferType()(mod)
mutated_mod['func_13120'] = func_13120
mutated_mod = relay.transform.InferType()(mutated_mod)
func_13120_call = mutated_mod.get_global_var('func_13120')
call_13121 = func_13120_call()
output = call_13121
func_13122 = relay.Function([], output)
mutated_mod['func_13122'] = func_13122
mutated_mod = relay.transform.InferType()(mutated_mod)
func_8982_call = mod.get_global_var('func_8982')
func_8983_call = mutated_mod.get_global_var('func_8983')
call_13148 = func_8982_call()
call_13149 = func_8982_call()
func_1697_call = mod.get_global_var('func_1697')
func_1701_call = mutated_mod.get_global_var('func_1701')
var_13155 = relay.var("var_13155", dtype = "int64", shape = (198,))#candidate|13155|(198,)|var|int64
var_13156 = relay.var("var_13156", dtype = "float32", shape = (420,))#candidate|13156|(420,)|var|float32
call_13154 = relay.TupleGetItem(func_1697_call(relay.reshape(var_13155.astype('int64'), [3, 11, 6]), relay.reshape(var_13156.astype('float32'), [5, 84]), ), 1)
call_13157 = relay.TupleGetItem(func_1701_call(relay.reshape(var_13155.astype('int64'), [3, 11, 6]), relay.reshape(var_13156.astype('float32'), [5, 84]), ), 1)
uop_13159 = relay.acosh(var_13155.astype('float64')) # shape=(198,)
output = relay.Tuple([call_13148,call_13154,var_13156,uop_13159,])
output2 = relay.Tuple([call_13149,call_13157,var_13156,uop_13159,])
func_13169 = relay.Function([var_13155,var_13156,], output)
mod['func_13169'] = func_13169
mod = relay.transform.InferType()(mod)
var_13170 = relay.var("var_13170", dtype = "int64", shape = (198,))#candidate|13170|(198,)|var|int64
var_13171 = relay.var("var_13171", dtype = "float32", shape = (420,))#candidate|13171|(420,)|var|float32
output = func_13169(var_13170,var_13171,)
func_13172 = relay.Function([var_13170,var_13171,], output)
mutated_mod['func_13172'] = func_13172
mutated_mod = relay.transform.InferType()(mutated_mod)
func_8773_call = mod.get_global_var('func_8773')
func_8775_call = mutated_mod.get_global_var('func_8775')
call_13222 = relay.TupleGetItem(func_8773_call(), 0)
call_13223 = relay.TupleGetItem(func_8775_call(), 0)
uop_13293 = relay.acosh(call_13222.astype('float64')) # shape=(10, 8, 3)
uop_13295 = relay.acosh(call_13223.astype('float64')) # shape=(10, 8, 3)
func_10036_call = mod.get_global_var('func_10036')
func_10039_call = mutated_mod.get_global_var('func_10039')
const_13310 = relay.const([[7,6],[2,-9],[7,6],[6,-5],[5,-3],[6,8],[-9,8],[10,-5],[-9,-9],[6,-9],[3,-9],[3,4],[-7,-6],[-2,-6],[9,-5],[4,-6],[-8,6],[-4,-9],[2,4],[1,5],[4,-2],[-8,-7],[4,5],[-1,-1],[-5,-5],[3,6],[1,1],[9,-9],[-1,-1],[-9,7],[-2,1],[1,-4],[-10,5],[-2,-9],[4,-4],[-9,-10],[-6,-9],[-1,10],[9,9],[-5,8],[10,1],[6,-7],[-1,5],[-6,10],[6,-8],[-8,-2],[-10,-6],[-2,2],[-10,5],[4,-8],[3,-7],[-8,2],[6,3],[-6,10],[-6,1],[-5,-1],[4,2],[-10,-5],[6,3],[-6,-10],[-2,-8],[-7,-4],[-7,10],[-6,6],[7,-9],[2,1],[3,4],[8,4],[6,-10],[-2,-6],[9,-2],[5,6],[8,2],[-9,-8],[8,2],[7,-7],[1,7],[-4,-6],[-7,10],[8,7],[-1,-8],[1,-3],[-9,6],[-4,-8],[-2,8],[-8,-3],[-3,-8],[-10,9],[-5,2],[-2,-6],[9,-4],[4,-7],[6,6],[-2,-10],[1,7],[4,-3],[-2,6],[9,2],[3,2],[-9,6],[6,1],[1,4],[1,5],[9,6],[-4,-5],[4,4],[7,-5],[-7,-4],[-2,-3],[-8,9],[8,7],[-4,9],[5,3],[-3,-9],[5,7],[-4,4],[-7,3],[4,5],[7,-1],[4,1],[4,-1],[2,-9],[3,-8],[-6,6],[-1,-9],[10,7],[5,-8],[-8,10],[-4,-2],[2,-5],[5,3],[10,-5],[8,-6],[-7,6],[2,2],[-3,-3],[5,5],[-7,4],[8,5],[9,-8],[5,3],[-6,-3],[3,8],[10,-4],[9,2],[-2,9],[-6,-7],[-6,1],[-7,-3],[-5,3],[4,3],[5,8],[-9,-1],[1,-2],[-6,-1],[1,4],[-6,3],[5,-9],[-9,2],[-2,-9],[3,5],[-2,10],[-5,2],[4,-6],[-5,4],[-6,9],[-7,-9],[-3,1],[10,1],[-2,-4],[3,3],[-2,-8],[7,-6],[-4,10],[6,-10],[10,5],[9,6],[7,6],[-5,-7],[-7,3],[6,-1],[-6,2],[10,1],[5,-2],[1,4],[7,10],[-1,9],[4,6],[-3,2],[5,1],[6,-5],[-9,-5],[-6,-10],[1,7],[9,-1],[-9,-4],[-1,-4],[-2,2],[-9,1],[6,8],[-5,7],[10,-7],[9,3],[3,10],[6,8],[1,8],[-7,-7],[4,-6],[-6,4],[-6,-5],[7,1],[-5,-1],[7,9],[-1,9],[7,-2],[-3,-10],[9,7],[5,10],[-9,-9],[4,-7],[1,-10],[-4,-10],[-4,4],[1,10],[-9,7],[8,3],[8,6],[-4,-4],[1,-9],[2,-8],[4,-8],[7,6],[3,-10],[-1,-10],[7,-1],[-9,7],[-1,-6],[8,1],[-5,6],[5,8],[5,10],[-2,-3],[10,-9],[-2,-10],[-5,-6],[-8,6],[6,-7],[-3,-2],[4,-2],[-6,-5],[-2,-5],[5,9],[-10,4],[2,3],[-1,2],[7,2],[-5,10],[-3,6],[-1,2],[-6,7],[-6,4],[-8,-7],[-9,-3],[-2,-2],[9,-6],[6,10],[5,-5],[-2,7],[-3,7],[1,-2],[-2,9],[-8,-9],[-4,3],[-1,9],[-4,-6],[-1,4],[7,-7],[5,9],[2,1],[10,1],[9,3],[-5,-5],[-1,7],[6,-5],[-3,1],[2,5],[-9,-6],[-8,-2],[10,-4],[-2,-6],[-2,6],[-4,-2],[3,-7],[1,-9],[-10,-9],[1,-5],[1,-8],[10,7],[-8,-9],[3,-1],[5,1],[10,8],[4,-6],[1,6],[1,-6],[-9,-3],[7,1],[-5,6],[8,8],[9,6],[3,8],[5,7],[-1,7],[5,9],[5,-2],[2,-2],[9,-8],[4,-2],[8,-1],[8,-9],[1,9],[9,10],[9,4],[-1,-10],[6,9],[-4,7],[2,6],[-7,9],[2,-6],[7,5],[-7,7],[-7,10],[-7,-5],[1,4],[1,-5],[3,-6],[1,8],[-7,6],[-3,-6],[10,-6],[-7,7],[-3,3],[-10,-4],[-2,10],[6,3],[-10,-1],[-4,3],[-5,10],[-10,-1],[-9,-10],[-3,-4],[9,-8],[1,-8],[2,5],[-6,-9],[-9,-2],[9,5],[8,-9],[-10,-3],[6,-1],[3,-1],[9,-1],[6,6],[1,6],[1,-8],[-7,-9],[-1,-5],[6,-5],[7,5],[3,3],[-8,-7],[-8,8],[4,-8],[4,-7],[2,3],[10,-6],[-5,-5],[9,-8],[-8,7],[-7,3],[3,-2],[1,-4],[-3,-8],[5,10],[-8,-6],[4,5],[8,7],[-7,7],[-4,-8],[2,5],[-9,8],[10,1],[6,7],[3,1],[-6,-7],[1,-4],[4,-9],[4,-4],[10,4],[-2,7],[6,8],[-6,1],[7,6],[3,-2],[-1,-5],[-6,7],[-1,-5],[-10,10],[8,5],[5,7],[-3,2],[10,5],[9,-8],[7,1],[6,10],[10,-2],[-8,-2],[3,6],[10,-4],[-6,-4],[6,-9],[7,4],[6,1],[-4,4],[-10,-6],[4,10],[2,6],[2,-2],[-4,-3],[9,-4],[3,-2],[-10,10],[3,-4],[-8,2],[-8,-7],[-10,9],[9,5],[-1,-4],[-6,-1],[5,8],[-5,-4],[5,-2],[-6,-3],[9,-2],[-4,-6],[-10,7],[-9,4],[-10,-1],[-5,8],[4,-2]], dtype = "uint64")#candidate|13310|(450, 2)|const|uint64
call_13309 = relay.TupleGetItem(func_10036_call(relay.reshape(const_13310.astype('uint64'), [900,])), 2)
call_13311 = relay.TupleGetItem(func_10039_call(relay.reshape(const_13310.astype('uint64'), [900,])), 2)
func_6484_call = mod.get_global_var('func_6484')
func_6486_call = mutated_mod.get_global_var('func_6486')
const_13326 = relay.const([-2,7,-1,3,-5,2,-3,-7,-2,-5,8,1,-10,-9,5,-6,-10,2,9,1,-2,-4,-1,-10,-1,-5,8,5,1,10,3,4,-9,3,2,4,8,-1,-8,-1,7,10,-4,-1,8,-2,7,2,-2,6,2,10,-7,-10,-1,5,-7,-3,-1,-7,-6,-10,8,-1,-1,-6,8,-5,-6,-9,4,-5,1,5,2,3,-2,3,6,-10,-2,10,-2,-4,-9,-3,8,-5,8,3,1,-8,-8,5,-6,1,-3,9,-5,2,-7,-7,7,-6,-2,-4,4,10,-4,5,9,-9,8,-8,2,-9,6,-4,9,-5,10,6,3,7,8,-9,-10,1,-8,-3,10,-7,-7,9,-4,7,-6,-9,8,8,10,4,8,9,6,-6,3,3,8,-6,-6,6,5,-1,-3,-8,8,6,1,2,9,-4,-1,4,8,-2,10,-8,-5,-7,-10,5,9,2,7,9,-3,-10,-1,6,2,-6,5,-9,-3,-3,3,10,7,4,-7,-2,8,-5,-4,-10,8,-1,2,-7,6,7,-6,-3,-1,9,-2,8,-10,-10,-5,-1,8,10,-1,2,-5,-1,8,-3,3,-8,-10,-6,1,-7,6,-3,-1,2,-8,-3,7,-1,8,-5,6,7,-10,-10,-8,-9,-6,-9,-5,-3,7,-3,2,9,-2,2,-8,5,1,-6,4,-3,10,-9,3,6,-10,6,7,-1,-2,6,-1,5,-8,-8,8,3,3,3,-4,6,9,3,7,-2,6,-8,-1,-8,4,9,7,-2,-4,6,1,1,6,-6,9,-4,8,-1,-5,-7,-4,2,8,4,6,-9,6,9,-3,6,4,6,-4,-10,7,7,-4,5,-3,-4,-10,8,-3,7,1,-8,5,-5,-3,9,2,3,7,8,8,-8,4,-6,2,-1,-9,6,-4,-5,7,9,10,-5,-2,6,2,-10,-2,3,10,-5,-2,-4,-1,5,3,-7,-8,1,-3,9,2,4,-4,6,-1,-2,3,1,-5,1,-2,2,-1,9,-9,-1,-6,5,-2,-5,-3,7,-2,-9,7,-4,8,-9,6,-3,4,6,-1,-1,1,7,2,-9,2,-3,7,10,-3,4,-6,-6,1,2,4,-4,-1,10,-4,-10,-8,7,-10,3,-5,7,-4,-4,7,-6,3,-8,2,10,9,-4,2,-6,-8,10,-6,7,-1,6,8,1], dtype = "uint64")#candidate|13326|(448,)|const|uint64
call_13325 = func_6484_call(relay.reshape(const_13326.astype('uint64'), [4, 16, 7]))
call_13327 = func_6484_call(relay.reshape(const_13326.astype('uint64'), [4, 16, 7]))
output = relay.Tuple([uop_13293,call_13309,const_13310,call_13325,const_13326,])
output2 = relay.Tuple([uop_13295,call_13311,const_13310,call_13327,const_13326,])
func_13328 = relay.Function([], output)
mod['func_13328'] = func_13328
mod = relay.transform.InferType()(mod)
output = func_13328()
func_13329 = relay.Function([], output)
mutated_mod['func_13329'] = func_13329
mutated_mod = relay.transform.InferType()(mutated_mod)
var_13395 = relay.var("var_13395", dtype = "float32", shape = (12, 14, 5))#candidate|13395|(12, 14, 5)|var|float32
uop_13396 = relay.asin(var_13395.astype('float32')) # shape=(12, 14, 5)
bop_13408 = relay.equal(var_13395.astype('bool'), relay.reshape(uop_13396.astype('bool'), relay.shape_of(var_13395))) # shape=(12, 14, 5)
output = bop_13408
output2 = bop_13408
func_13417 = relay.Function([var_13395,], output)
mod['func_13417'] = func_13417
mod = relay.transform.InferType()(mod)
mutated_mod['func_13417'] = func_13417
mutated_mod = relay.transform.InferType()(mutated_mod)
var_13418 = relay.var("var_13418", dtype = "float32", shape = (12, 14, 5))#candidate|13418|(12, 14, 5)|var|float32
func_13417_call = mutated_mod.get_global_var('func_13417')
call_13419 = func_13417_call(var_13418)
output = call_13419
func_13420 = relay.Function([var_13418], output)
mutated_mod['func_13420'] = func_13420
mutated_mod = relay.transform.InferType()(mutated_mod)
func_9648_call = mod.get_global_var('func_9648')
func_9650_call = mutated_mod.get_global_var('func_9650')
call_13433 = func_9648_call()
call_13434 = func_9648_call()
output = call_13433
output2 = call_13434
func_13436 = relay.Function([], output)
mod['func_13436'] = func_13436
mod = relay.transform.InferType()(mod)
output = func_13436()
func_13437 = relay.Function([], output)
mutated_mod['func_13437'] = func_13437
mutated_mod = relay.transform.InferType()(mutated_mod)
func_8051_call = mod.get_global_var('func_8051')
func_8053_call = mutated_mod.get_global_var('func_8053')
call_13445 = relay.TupleGetItem(func_8051_call(), 0)
call_13446 = relay.TupleGetItem(func_8053_call(), 0)
output = relay.Tuple([call_13445,])
output2 = relay.Tuple([call_13446,])
func_13460 = relay.Function([], output)
mod['func_13460'] = func_13460
mod = relay.transform.InferType()(mod)
mutated_mod['func_13460'] = func_13460
mutated_mod = relay.transform.InferType()(mutated_mod)
func_13460_call = mutated_mod.get_global_var('func_13460')
call_13461 = func_13460_call()
output = call_13461
func_13462 = relay.Function([], output)
mutated_mod['func_13462'] = func_13462
mutated_mod = relay.transform.InferType()(mutated_mod)
func_12953_call = mod.get_global_var('func_12953')
func_12955_call = mutated_mod.get_global_var('func_12955')
call_13533 = relay.TupleGetItem(func_12953_call(), 1)
call_13534 = relay.TupleGetItem(func_12955_call(), 1)
output = call_13533
output2 = call_13534
func_13543 = relay.Function([], output)
mod['func_13543'] = func_13543
mod = relay.transform.InferType()(mod)
mutated_mod['func_13543'] = func_13543
mutated_mod = relay.transform.InferType()(mutated_mod)
func_13543_call = mutated_mod.get_global_var('func_13543')
call_13544 = func_13543_call()
output = call_13544
func_13545 = relay.Function([], output)
mutated_mod['func_13545'] = func_13545
mutated_mod = relay.transform.InferType()(mutated_mod)
func_8282_call = mod.get_global_var('func_8282')
func_8283_call = mutated_mod.get_global_var('func_8283')
call_13608 = func_8282_call()
call_13609 = func_8282_call()
func_12953_call = mod.get_global_var('func_12953')
func_12955_call = mutated_mod.get_global_var('func_12955')
call_13649 = relay.TupleGetItem(func_12953_call(), 0)
call_13650 = relay.TupleGetItem(func_12955_call(), 0)
output = relay.Tuple([call_13608,call_13649,])
output2 = relay.Tuple([call_13609,call_13650,])
func_13652 = relay.Function([], output)
mod['func_13652'] = func_13652
mod = relay.transform.InferType()(mod)
output = func_13652()
func_13653 = relay.Function([], output)
mutated_mod['func_13653'] = func_13653
mutated_mod = relay.transform.InferType()(mutated_mod)
func_13543_call = mod.get_global_var('func_13543')
func_13545_call = mutated_mod.get_global_var('func_13545')
call_13735 = func_13543_call()
call_13736 = func_13543_call()
output = relay.Tuple([call_13735,])
output2 = relay.Tuple([call_13736,])
func_13740 = relay.Function([], output)
mod['func_13740'] = func_13740
mod = relay.transform.InferType()(mod)
output = func_13740()
func_13741 = relay.Function([], output)
mutated_mod['func_13741'] = func_13741
mutated_mod = relay.transform.InferType()(mutated_mod)
func_8524_call = mod.get_global_var('func_8524')
func_8526_call = mutated_mod.get_global_var('func_8526')
call_13779 = func_8524_call()
call_13780 = func_8524_call()
func_12328_call = mod.get_global_var('func_12328')
func_12330_call = mutated_mod.get_global_var('func_12330')
call_13797 = func_12328_call()
call_13798 = func_12328_call()
output = relay.Tuple([call_13779,call_13797,])
output2 = relay.Tuple([call_13780,call_13798,])
func_13805 = relay.Function([], output)
mod['func_13805'] = func_13805
mod = relay.transform.InferType()(mod)
output = func_13805()
func_13806 = relay.Function([], output)
mutated_mod['func_13806'] = func_13806
mutated_mod = relay.transform.InferType()(mutated_mod)
var_13839 = relay.var("var_13839", dtype = "float32", shape = (12, 15, 9))#candidate|13839|(12, 15, 9)|var|float32
var_13840 = relay.var("var_13840", dtype = "float32", shape = (12, 15, 9))#candidate|13840|(12, 15, 9)|var|float32
bop_13841 = relay.divide(var_13839.astype('float32'), relay.reshape(var_13840.astype('float32'), relay.shape_of(var_13839))) # shape=(12, 15, 9)
func_9008_call = mod.get_global_var('func_9008')
func_9010_call = mutated_mod.get_global_var('func_9010')
call_13849 = relay.TupleGetItem(func_9008_call(), 0)
call_13850 = relay.TupleGetItem(func_9010_call(), 0)
output = relay.Tuple([bop_13841,call_13849,])
output2 = relay.Tuple([bop_13841,call_13850,])
func_13851 = relay.Function([var_13839,var_13840,], output)
mod['func_13851'] = func_13851
mod = relay.transform.InferType()(mod)
mutated_mod['func_13851'] = func_13851
mutated_mod = relay.transform.InferType()(mutated_mod)
func_13851_call = mutated_mod.get_global_var('func_13851')
var_13853 = relay.var("var_13853", dtype = "float32", shape = (12, 15, 9))#candidate|13853|(12, 15, 9)|var|float32
var_13854 = relay.var("var_13854", dtype = "float32", shape = (12, 15, 9))#candidate|13854|(12, 15, 9)|var|float32
call_13852 = func_13851_call(var_13853,var_13854,)
output = call_13852
func_13855 = relay.Function([var_13853,var_13854,], output)
mutated_mod['func_13855'] = func_13855
mutated_mod = relay.transform.InferType()(mutated_mod)
var_13863 = relay.var("var_13863", dtype = "float64", shape = (13, 15, 8))#candidate|13863|(13, 15, 8)|var|float64
uop_13864 = relay.asinh(var_13863.astype('float64')) # shape=(13, 15, 8)
output = relay.Tuple([uop_13864,])
output2 = relay.Tuple([uop_13864,])
func_13870 = relay.Function([var_13863,], output)
mod['func_13870'] = func_13870
mod = relay.transform.InferType()(mod)
var_13871 = relay.var("var_13871", dtype = "float64", shape = (13, 15, 8))#candidate|13871|(13, 15, 8)|var|float64
output = func_13870(var_13871)
func_13872 = relay.Function([var_13871], output)
mutated_mod['func_13872'] = func_13872
mutated_mod = relay.transform.InferType()(mutated_mod)
var_13876 = relay.var("var_13876", dtype = "int8", shape = (4, 2, 8))#candidate|13876|(4, 2, 8)|var|int8
var_13877 = relay.var("var_13877", dtype = "int8", shape = (4, 2, 8))#candidate|13877|(4, 2, 8)|var|int8
bop_13878 = relay.greater(var_13876.astype('bool'), relay.reshape(var_13877.astype('bool'), relay.shape_of(var_13876))) # shape=(4, 2, 8)
func_10740_call = mod.get_global_var('func_10740')
func_10741_call = mutated_mod.get_global_var('func_10741')
call_13884 = relay.TupleGetItem(func_10740_call(), 0)
call_13885 = relay.TupleGetItem(func_10741_call(), 0)
output = relay.Tuple([bop_13878,call_13884,])
output2 = relay.Tuple([bop_13878,call_13885,])
func_13892 = relay.Function([var_13876,var_13877,], output)
mod['func_13892'] = func_13892
mod = relay.transform.InferType()(mod)
var_13893 = relay.var("var_13893", dtype = "int8", shape = (4, 2, 8))#candidate|13893|(4, 2, 8)|var|int8
var_13894 = relay.var("var_13894", dtype = "int8", shape = (4, 2, 8))#candidate|13894|(4, 2, 8)|var|int8
output = func_13892(var_13893,var_13894,)
func_13895 = relay.Function([var_13893,var_13894,], output)
mutated_mod['func_13895'] = func_13895
mutated_mod = relay.transform.InferType()(mutated_mod)
var_13912 = relay.var("var_13912", dtype = "int32", shape = (13, 9, 6))#candidate|13912|(13, 9, 6)|var|int32
var_13913 = relay.var("var_13913", dtype = "int32", shape = (13, 9, 6))#candidate|13913|(13, 9, 6)|var|int32
bop_13914 = relay.multiply(var_13912.astype('int32'), relay.reshape(var_13913.astype('int32'), relay.shape_of(var_13912))) # shape=(13, 9, 6)
output = bop_13914
output2 = bop_13914
F = relay.Function([var_13912,var_13913,], output)
mod['main'] = F
mod = relay.transform.InferType()(mod)
print('==========mod==========')
print(mod.astext(show_meta_data=False))
print('===================================')
F = relay.Function([var_13912,var_13913,], output2)
mutated_mod['main'] = F
mutated_mod = relay.transform.InferType()(mutated_mod)
print('==========mutated_mod==========')
print(mutated_mod.astext(show_meta_data=False))
print('===================================')
graph, lib, params = relay.build(mod, target='llvm')
module1 = graph_runtime.create(graph, lib, tvm.device('llvm',0))
intrp2 = relay.build_module.create_executor('graph', mod, tvm.device('llvm',0),'llvm')
intrp3 = relay.build_module.create_executor('debug', mod, tvm.device('llvm',0),'llvm')
intrp4 = relay.build_module.create_executor('vm', mod, tvm.device('llvm',0),'llvm')
graph, lib, params = relay.build(mod, target='cuda')
module5 = graph_runtime.create(graph, lib, tvm.device('cuda',0))
intrp6 = relay.build_module.create_executor('graph', mod, tvm.device('cuda',0),'cuda')
intrp7 = relay.build_module.create_executor('debug', mod, tvm.device('cuda',0),'cuda')
intrp8 = relay.build_module.create_executor('vm', mod, tvm.device('cuda',0),'cuda')
seq = Sequential([
	relay.transform.AlterOpLayout(),
	relay.transform.AnnotateSpans(),
	relay.transform.BatchingOps(),
	relay.transform.CanonicalizeCast(),
	relay.transform.CanonicalizeOps(),
	relay.transform.DeadCodeElimination(),
	relay.transform.DynamicToStatic(),
	relay.transform.FastMath(),
	relay.transform.FirstOrderGradient(),
	relay.transform.EliminateCommonSubexpr(),
	relay.transform.MergeCompilerRegions(),
	relay.transform.Inline(),
	relay.transform.LambdaLift(),
	relay.transform.LazyGradientInit(),
	relay.transform.PartialEvaluate(),
	relay.transform.Legalize(),
	relay.transform.FoldConstant(),
	relay.transform.ToANormalForm(),
	relay.transform.ToGraphNormalForm(),
	relay.transform.SimplifyInference(),
	relay.transform.ToBasicBlockNormalForm(),
	relay.transform.FuseOps(3),
	relay.transform.DefuseOps(),
	relay.transform.SimplifyExpr(),
	relay.transform.InferType(),
])
mod = seq(mod)
print(mod.astext(show_meta_data=False))
graph, lib, params = relay.build(mod, target='llvm')
module9 = graph_runtime.create(graph, lib, tvm.device('llvm',0))
intrp10 = relay.build_module.create_executor('graph', mod, tvm.device('llvm',0),'llvm')
intrp11 = relay.build_module.create_executor('debug', mod, tvm.device('llvm',0),'llvm')
intrp12 = relay.build_module.create_executor('vm', mod, tvm.device('llvm',0),'llvm')
graph, lib, params = relay.build(mod, target='cuda')
module13 = graph_runtime.create(graph, lib, tvm.device('cuda',0))
intrp14 = relay.build_module.create_executor('graph', mod, tvm.device('cuda',0),'cuda')
intrp15 = relay.build_module.create_executor('debug', mod, tvm.device('cuda',0),'cuda')
intrp16 = relay.build_module.create_executor('vm', mod, tvm.device('cuda',0),'cuda')
graph, lib, params = relay.build(mutated_mod, target='llvm')
module17 = graph_runtime.create(graph, lib, tvm.device('llvm',0))
intrp18 = relay.build_module.create_executor('graph', mutated_mod, tvm.device('llvm',0),'llvm')
intrp19 = relay.build_module.create_executor('debug', mutated_mod, tvm.device('llvm',0),'llvm')
intrp20 = relay.build_module.create_executor('vm', mutated_mod, tvm.device('llvm',0),'llvm')
graph, lib, params = relay.build(mutated_mod, target='cuda')
module21 = graph_runtime.create(graph, lib, tvm.device('cuda',0))
intrp22 = relay.build_module.create_executor('graph', mutated_mod, tvm.device('cuda',0),'cuda')
intrp23 = relay.build_module.create_executor('debug', mutated_mod, tvm.device('cuda',0),'cuda')
intrp24 = relay.build_module.create_executor('vm', mutated_mod, tvm.device('cuda',0),'cuda')

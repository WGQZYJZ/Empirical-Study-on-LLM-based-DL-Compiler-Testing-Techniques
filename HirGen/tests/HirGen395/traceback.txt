==========mod==========
#[version = "0.0.5"]
def @func_4013(%var_3952: Tensor[(10, 15, 3), float64]) -> (Tensor[(10, 15, 3), int8], Tensor[(10, 4, 2), float64], Tensor[(360), float32]) {
  %0 = cast(%var_3952, dtype="float64") /* ty=Tensor[(10, 15, 3), float64] */;
  %1 = rsqrt(%0) /* ty=Tensor[(10, 15, 3), float64] */;
  %2 = cast(%1, dtype="float32") /* ty=Tensor[(10, 15, 3), float32] */;
  %3 = shape_of(%var_3952, dtype="int32") /* ty=Tensor[(3), int32] */;
  %4 = cast(%var_3952, dtype="float32") /* ty=Tensor[(10, 15, 3), float32] */;
  %5 = dyn.reshape(%2, %3, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %6 = floor_divide(%4, %5) /* ty=Tensor[(10, 15, 3), float32] */;
  %7 = cast(%1, dtype="int8") /* ty=Tensor[(10, 15, 3), int8] */;
  %8 = shape_of(%6, dtype="int32") /* ty=Tensor[(3), int32] */;
  %9 = cast(%6, dtype="int8") /* ty=Tensor[(10, 15, 3), int8] */;
  %10 = dyn.reshape(%7, %8, newshape=[]) /* ty=Tensor[(?, ?, ?), int8] */;
  %11 = cast(meta[relay.Constant][0] /* ty=Tensor[(360), float32] */, dtype="float32") /* ty=Tensor[(360), float32] */;
  %12 = cast(meta[relay.Constant][0] /* ty=Tensor[(360), float32] */, dtype="float32") /* ty=Tensor[(360), float32] */;
  %13 = reshape(%11, newshape=[10, 4, 9]) /* ty=Tensor[(10, 4, 9), float32] */;
  %14 = reshape(%12, newshape=[10, 4, 9]) /* ty=Tensor[(10, 4, 9), float32] */;
  %15 = @func_689(%13, %14) /* ty=(Tensor[(10, 4, 9), int64], Tensor[(10, 4, 2), float64], Tensor[(80), bool]) */;
  %16 = add(%9, %10) /* ty=Tensor[(10, 15, 3), int8] */;
  %17 = %15.1;
  (%16, %17, meta[relay.Constant][0] /* ty=Tensor[(360), float32] */)
}

def @func_8163(%var_8128: Tensor[(16, 7, 5), float32], %var_8140: Tensor[(54), int32], %var_8148: Tensor[(2816), float64]) -> (Tensor[(450), uint64], Tensor[(54), int32], Tensor[(390), int8], Tensor[(160), bool], Tensor[(13, 2, 5), float64], Tensor[(130), float64], Tensor[(2816), float64], Tensor[(16, 7, 5), uint8], Tensor[(16, 7, 5), float32]) {
  %18 = cast(%var_8140, dtype="int32") /* ty=Tensor[(54), int32] */;
  %19 = cast(meta[relay.Constant][1] /* ty=Tensor[(390), int8] */, dtype="int8") /* ty=Tensor[(390), int8] */;
  %20 = cast(meta[relay.Constant][2] /* ty=Tensor[(160), bool] */, dtype="bool") /* ty=Tensor[(160), bool] */;
  %21 = reshape(%18, newshape=[3, 2, 9]) /* ty=Tensor[(3, 2, 9), int32] */;
  %22 = reshape(%19, newshape=[390]) /* ty=Tensor[(390), int8] */;
  %23 = reshape(%20, newshape=[160]) /* ty=Tensor[(160), bool] */;
  %24 = @func_4267(%21, %22, %23) /* ty=(Tensor[(3, 2, 9), int32], Tensor[(450), uint64], Tensor[(2, 15, 13), int8], int8, Tensor[(390), int8], Tensor[(2, 5, 16), bool], Tensor[(160), bool]) */;
  %25 = cast(meta[relay.Constant][3] /* ty=Tensor[(130), float64] */, dtype="float64") /* ty=Tensor[(130), float64] */;
  %26 = cast(%var_8148, dtype="float64") /* ty=Tensor[(2816), float64] */;
  %27 = cast(meta[relay.Constant][1] /* ty=Tensor[(390), int8] */, dtype="float64") /* ty=Tensor[(390), float64] */;
  %28 = %24.1;
  %29 = cast(%28, dtype="float64") /* ty=Tensor[(450), float64] */;
  %30 = reshape(%25, newshape=[13, 2, 5]) /* ty=Tensor[(13, 2, 5), float64] */;
  %31 = reshape(%26, newshape=[2816]) /* ty=Tensor[(2816), float64] */;
  %32 = reshape(%27, newshape=[390]) /* ty=Tensor[(390), float64] */;
  %33 = reshape(%29, newshape=[1, 450]) /* ty=Tensor[(1, 450), float64] */;
  %34 = @func_5388(%30, %31, %32, %33) /* ty=(Tensor[(13, 2, 5), bool], Tensor[(11, 16, 16), float64], Tensor[(2816), float64], Tensor[(13, 2, 5), float64], Tensor[(13, 3, 10), float64], Tensor[(390), float64], Tensor[(9, 14, 12), uint16], Tensor[(2925), float64], Tensor[(168), uint16], Tensor[(1, 450), float64]) */;
  %35 = cast(%var_8128, dtype="float32") /* ty=Tensor[(16, 7, 5), float32] */;
  %36 = sqrt(%35) /* ty=Tensor[(16, 7, 5), float32] */;
  %37 = cast(%var_8128, dtype="uint8") /* ty=Tensor[(16, 7, 5), uint8] */;
  %38 = shape_of(%36, dtype="int32") /* ty=Tensor[(3), int32] */;
  %39 = cast(%36, dtype="uint8") /* ty=Tensor[(16, 7, 5), uint8] */;
  %40 = dyn.reshape(%37, %38, newshape=[]) /* ty=Tensor[(?, ?, ?), uint8] */;
  %41 = cast(%36, dtype="float32") /* ty=Tensor[(16, 7, 5), float32] */;
  %42 = %34.3;
  %43 = bitwise_and(%39, %40) /* ty=Tensor[(16, 7, 5), uint8] */;
  %44 = sigmoid(%41) /* ty=Tensor[(16, 7, 5), float32] */;
  (%28, %var_8140, meta[relay.Constant][1] /* ty=Tensor[(390), int8] */, meta[relay.Constant][2] /* ty=Tensor[(160), bool] */, %42, meta[relay.Constant][3] /* ty=Tensor[(130), float64] */, %var_8148, %43, %44)
}

def @func_9828() -> (Tensor[(6, 3), float64],) {
  %45 = @func_9711() /* ty=Tensor[(6, 3), float64] */;
  (%45,)
}

def @func_9882(%var_9864: bool, %var_9875: Tensor[(160), bool]) -> (Tensor[(6, 3), float64], Tensor[(2, 40), float64], Tensor[(396), float64], Tensor[(80), bool], bool, Tensor[(11, 8, 5), float32], Tensor[(1800, 1), float32], Tensor[(160), bool]) {
  %46 = @func_8931() /* ty=(Tensor[(6, 3), float64],) */;
  %47 = cast(meta[relay.Constant][4] /* ty=Tensor[(396), float64] */, dtype="float64") /* ty=Tensor[(396), float64] */;
  %48 = reshape(%47, newshape=[11, 12, 3]) /* ty=Tensor[(11, 12, 3), float64] */;
  %49 = @func_9116(%48) /* ty=(Tensor[(11, 12, 3), float32], Tensor[(2, 4, 10), float64], Tensor[(2, 40), float64]) */;
  %50 = cast(%var_9864, dtype="bool") /* ty=bool */;
  %51 = reshape(%50, newshape=[]) /* ty=bool */;
  %52 = @func_1044(%51) /* ty=(Tensor[(8, 15, 6), bool], Tensor[(10, 4, 2), float64], Tensor[(80), bool]) */;
  %53 = cast(meta[relay.Constant][5] /* ty=Tensor[(1800, 1), float32] */, dtype="float32") /* ty=Tensor[(1800, 1), float32] */;
  %54 = cast(%var_9875, dtype="bool") /* ty=Tensor[(160), bool] */;
  %55 = reshape(%53, newshape=[15, 10, 12]) /* ty=Tensor[(15, 10, 12), float32] */;
  %56 = reshape(%54, newshape=[2, 80]) /* ty=Tensor[(2, 80), bool] */;
  %57 = @func_5847(%55, %56) /* ty=(Tensor[(15, 10, 12), int16], Tensor[(2, 5, 16), bool], Tensor[(2, 80), bool], Tensor[(11, 8, 5), float32], Tensor[(55), float32]) */;
  %58 = %46.0;
  %59 = %49.2;
  %60 = %52.2;
  %61 = %57.3;
  (%58, %59, meta[relay.Constant][4] /* ty=Tensor[(396), float64] */, %60, %var_9864, %61, meta[relay.Constant][5] /* ty=Tensor[(1800, 1), float32] */, %var_9875)
}

def @func_10061() -> (Tensor[(6, 3), float64], Tensor[(6, 3), float64]) {
  %62 = @func_8931() /* ty=(Tensor[(6, 3), float64],) */;
  %63 = @func_9752() /* ty=Tensor[(6, 3), float64] */;
  %64 = %62.0;
  (%63, %64)
}

def @func_312(%var_282: Tensor[(10, 4, 2), bool]) -> (Tensor[(10, 4, 2), bool], Tensor[(10, 4, 2), float64]) {
  %65 = cast(%var_282, dtype="bool") /* ty=Tensor[(10, 4, 2), bool] */;
  %66 = shape_of(meta[relay.Constant][6] /* ty=Tensor[(10, 4, 2), bool] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %67 = cast(meta[relay.Constant][6] /* ty=Tensor[(10, 4, 2), bool] */, dtype="bool") /* ty=Tensor[(10, 4, 2), bool] */;
  %68 = dyn.reshape(%65, %66, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %69 = cast(meta[relay.Constant][6] /* ty=Tensor[(10, 4, 2), bool] */, dtype="float64") /* ty=Tensor[(10, 4, 2), float64] */;
  %70 = logical_or(%67, %68) /* ty=Tensor[(10, 4, 2), bool] */;
  %71 = tan(%69) /* ty=Tensor[(10, 4, 2), float64] */;
  (%70, %71)
}

def @func_2581(%var_2562: Tensor[(8, 8, 14), float64]) -> (Tensor[(8, 8, 14), float64], Tensor[(11, 16, 16), float64], Tensor[(1, 2816), float64]) {
  %72 = cast(meta[relay.Constant][7] /* ty=Tensor[(8, 8, 14), float64] */, dtype="float64") /* ty=Tensor[(8, 8, 14), float64] */;
  %73 = shape_of(%var_2562, dtype="int32") /* ty=Tensor[(3), int32] */;
  %74 = cast(%var_2562, dtype="float64") /* ty=Tensor[(8, 8, 14), float64] */;
  %75 = dyn.reshape(%72, %73, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %76 = cast(meta[relay.Constant][8] /* ty=Tensor[(1, 2816), float64] */, dtype="float64") /* ty=Tensor[(1, 2816), float64] */;
  %77 = reshape(%76, newshape=[11, 16, 16]) /* ty=Tensor[(11, 16, 16), float64] */;
  %78 = @func_1725(%77) /* ty=(Tensor[(11, 16, 16), float64],) */;
  %79 = maximum(%74, %75) /* ty=Tensor[(8, 8, 14), float64] */;
  %80 = %78.0;
  (%79, %80, meta[relay.Constant][8] /* ty=Tensor[(1, 2816), float64] */)
}

def @func_7969(%var_7917: Tensor[(7, 10, 16), float64], %var_7936: Tensor[(1344), float32]) -> (Tensor[(11, 16, 16), float64], Tensor[(1800), bool], Tensor[(20, 4), bool], Tensor[(2816), float64], Tensor[(16, 14, 6), float32], Tensor[(1344), float32], Tensor[(7, 10, 16), bool]) {
  %81 = cast(meta[relay.Constant][9] /* ty=Tensor[(1800), bool] */, dtype="bool") /* ty=Tensor[(1800), bool] */;
  %82 = cast(meta[relay.Constant][10] /* ty=Tensor[(20, 4), bool] */, dtype="bool") /* ty=Tensor[(20, 4), bool] */;
  %83 = cast(meta[relay.Constant][11] /* ty=Tensor[(2816), float64] */, dtype="float64") /* ty=Tensor[(2816), float64] */;
  %84 = reshape(%81, newshape=[18, 100]) /* ty=Tensor[(18, 100), bool] */;
  %85 = reshape(%82, newshape=[80]) /* ty=Tensor[(80), bool] */;
  %86 = reshape(%83, newshape=[2816]) /* ty=Tensor[(2816), float64] */;
  %87 = @func_3217(%84, %85, %86) /* ty=(Tensor[(15, 8, 15), uint32], Tensor[(18, 100), bool], Tensor[(80), bool], Tensor[(11, 16, 16), float64], Tensor[(2816), float64], Tensor[(7, 14, 12), float64], Tensor[(7, 14, 12), float64]) */;
  %88 = cast(%var_7936, dtype="float32") /* ty=Tensor[(1344), float32] */;
  %89 = reshape(%88, newshape=[16, 14, 6]) /* ty=Tensor[(16, 14, 6), float32] */;
  %90 = cast(%var_7917, dtype="float64") /* ty=Tensor[(7, 10, 16), float64] */;
  %91 = asinh(%90) /* ty=Tensor[(7, 10, 16), float64] */;
  %92 = cast(%var_7917, dtype="bool") /* ty=Tensor[(7, 10, 16), bool] */;
  %93 = shape_of(%91, dtype="int32") /* ty=Tensor[(3), int32] */;
  %94 = cast(%91, dtype="bool") /* ty=Tensor[(7, 10, 16), bool] */;
  %95 = dyn.reshape(%92, %93, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %96 = %87.3;
  %97 = @func_6357(%89) /* ty=Tensor[(16, 14, 6), float32] */;
  %98 = less(%94, %95) /* ty=Tensor[(7, 10, 16), bool] */;
  (%96, meta[relay.Constant][9] /* ty=Tensor[(1800), bool] */, meta[relay.Constant][10] /* ty=Tensor[(20, 4), bool] */, meta[relay.Constant][11] /* ty=Tensor[(2816), float64] */, %97, %var_7936, %98)
}

def @func_7171(%var_7132: Tensor[(13, 4, 7), int32], %var_7133: Tensor[(13, 4, 7), int32], %var_7152: Tensor[(168), int16]) -> (Tensor[(13, 4, 7), bool], Tensor[(10, 4, 2), float64], Tensor[(168), int16], Tensor[(8, 8, 14), float64], Tensor[(14, 64), float64]) {
  %99 = cast(%var_7133, dtype="bool") /* ty=Tensor[(13, 4, 7), bool] */;
  %100 = shape_of(%var_7132, dtype="int32") /* ty=Tensor[(3), int32] */;
  %101 = cast(%var_7132, dtype="bool") /* ty=Tensor[(13, 4, 7), bool] */;
  %102 = dyn.reshape(%99, %100, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %103 = cast(%var_7152, dtype="int16") /* ty=Tensor[(168), int16] */;
  %104 = cast(%var_7152, dtype="int16") /* ty=Tensor[(168), int16] */;
  %105 = reshape(%103, newshape=[12, 2, 7]) /* ty=Tensor[(12, 2, 7), int16] */;
  %106 = reshape(%104, newshape=[12, 2, 7]) /* ty=Tensor[(12, 2, 7), int16] */;
  %107 = @func_1704(%105, %106) /* ty=(Tensor[(12, 2, 7), bool], Tensor[(10, 4, 2), float64], Tensor[(2, 40), bool]) */;
  %108 = cast(meta[relay.Constant][12] /* ty=Tensor[(14, 64), float64] */, dtype="float64") /* ty=Tensor[(14, 64), float64] */;
  %109 = reshape(%108, newshape=[8, 8, 14]) /* ty=Tensor[(8, 8, 14), float64] */;
  %110 = @func_2581(%109) /* ty=(Tensor[(8, 8, 14), float64], Tensor[(11, 16, 16), float64], Tensor[(1, 2816), float64]) */;
  %111 = greater(%101, %102) /* ty=Tensor[(13, 4, 7), bool] */;
  %112 = %107.1;
  %113 = %110.0;
  (%111, %112, %var_7152, %113, meta[relay.Constant][12] /* ty=Tensor[(14, 64), float64] */)
}

def @func_956(%var_903: bool, %var_904: Tensor[(15, 8, 15), bool], %var_919: Tensor[(15, 8, 15), bool], %var_925: Tensor[(1, 80), bool], %var_940: Tensor[(15, 8, 15), float64]) -> (Tensor[(15, 8, 15), uint32], Tensor[(10, 4, 2), float64], Tensor[(1, 80), bool], Tensor[(15, 8, 15), uint64]) {
  %114 = cast(%var_903, dtype="bool") /* ty=bool */;
  %115 = cast(%var_904, dtype="bool") /* ty=Tensor[(15, 8, 15), bool] */;
  %116 = logical_and(%114, %115) /* ty=Tensor[(15, 8, 15), bool] */;
  %117 = cast(%var_919, dtype="uint32") /* ty=Tensor[(15, 8, 15), uint32] */;
  %118 = shape_of(%116, dtype="int32") /* ty=Tensor[(3), int32] */;
  %119 = cast(%116, dtype="uint32") /* ty=Tensor[(15, 8, 15), uint32] */;
  %120 = dyn.reshape(%117, %118, newshape=[]) /* ty=Tensor[(?, ?, ?), uint32] */;
  %121 = cast(%var_925, dtype="bool") /* ty=Tensor[(1, 80), bool] */;
  %122 = reshape(%121, newshape=[10, 4, 2]) /* ty=Tensor[(10, 4, 2), bool] */;
  %123 = @func_312(%122) /* ty=(Tensor[(10, 4, 2), bool], Tensor[(10, 4, 2), float64]) */;
  %124 = cast(%116, dtype="float64") /* ty=Tensor[(15, 8, 15), float64] */;
  %125 = sqrt(%124) /* ty=Tensor[(15, 8, 15), float64] */;
  %126 = cast(%var_940, dtype="uint64") /* ty=Tensor[(15, 8, 15), uint64] */;
  %127 = shape_of(%125, dtype="int32") /* ty=Tensor[(3), int32] */;
  %128 = cast(%125, dtype="uint64") /* ty=Tensor[(15, 8, 15), uint64] */;
  %129 = dyn.reshape(%126, %127, newshape=[]) /* ty=Tensor[(?, ?, ?), uint64] */;
  %130 = bitwise_xor(%119, %120) /* ty=Tensor[(15, 8, 15), uint32] */;
  %131 = %123.1;
  %132 = left_shift(%128, %129) /* ty=Tensor[(15, 8, 15), uint64] */;
  (%130, %131, %var_925, %132)
}

def @func_8628(%var_8620: Tensor[(2, 16, 13), uint16]) -> (Tensor[(2, 16, 13), float64],) {
  %133 = cast(meta[relay.Constant][13] /* ty=Tensor[(1, 16, 13), uint16] */, dtype="bool") /* ty=Tensor[(1, 16, 13), bool] */;
  %134 = cast(%var_8620, dtype="bool") /* ty=Tensor[(2, 16, 13), bool] */;
  %135 = less_equal(%133, %134) /* ty=Tensor[(2, 16, 13), bool] */;
  %136 = cast(%135, dtype="float64") /* ty=Tensor[(2, 16, 13), float64] */;
  %137 = sqrt(%136) /* ty=Tensor[(2, 16, 13), float64] */;
  (%137,)
}

def @func_4996(%var_4945: Tensor[(13, 15, 15), float64], %var_4952: Tensor[(84, 2), uint16], %var_4980: Tensor[(450), float64]) -> (Tensor[(9, 14, 12), uint16], Tensor[(84, 2), uint16], Tensor[(126, 12), uint16], Tensor[(13, 15, 15), float64], Tensor[(10, 15, 3), int8], Tensor[(450), float64], Tensor[(13, 15, 15), float32], Tensor[(13, 15, 15), float64]) {
  %138 = cast(%var_4952, dtype="uint16") /* ty=Tensor[(84, 2), uint16] */;
  %139 = cast(meta[relay.Constant][14] /* ty=Tensor[(126, 12), uint16] */, dtype="uint16") /* ty=Tensor[(126, 12), uint16] */;
  %140 = reshape(%138, newshape=[1, 14, 12]) /* ty=Tensor[(1, 14, 12), uint16] */;
  %141 = reshape(%139, newshape=[9, 14, 12]) /* ty=Tensor[(9, 14, 12), uint16] */;
  %142 = cast(%var_4945, dtype="float64") /* ty=Tensor[(13, 15, 15), float64] */;
  %143 = asinh(%142) /* ty=Tensor[(13, 15, 15), float64] */;
  %144 = cast(%143, dtype="float64") /* ty=Tensor[(13, 15, 15), float64] */;
  %145 = atan(%144) /* ty=Tensor[(13, 15, 15), float64] */;
  %146 = cast(%145, dtype="float64") /* ty=Tensor[(13, 15, 15), float64] */;
  %147 = shape_of(%143, dtype="int32") /* ty=Tensor[(3), int32] */;
  %148 = cast(%143, dtype="float64") /* ty=Tensor[(13, 15, 15), float64] */;
  %149 = dyn.reshape(%146, %147, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %150 = cast(%var_4980, dtype="float64") /* ty=Tensor[(450), float64] */;
  %151 = reshape(%150, newshape=[10, 15, 3]) /* ty=Tensor[(10, 15, 3), float64] */;
  %152 = @func_4013(%151) /* ty=(Tensor[(10, 15, 3), int8], Tensor[(10, 4, 2), float64], Tensor[(360), float32]) */;
  %153 = cast(%145, dtype="float32") /* ty=Tensor[(13, 15, 15), float32] */;
  %154 = cast(%145, dtype="float64") /* ty=Tensor[(13, 15, 15), float64] */;
  %155 = @func_2482(%140, %141) /* ty=Tensor[(9, 14, 12), uint16] */;
  %156 = floor_mod(%148, %149) /* ty=Tensor[(13, 15, 15), float64] */;
  %157 = %152.0;
  %158 = rsqrt(%153) /* ty=Tensor[(13, 15, 15), float32] */;
  %159 = cosh(%154) /* ty=Tensor[(13, 15, 15), float64] */;
  (%155, %var_4952, meta[relay.Constant][14] /* ty=Tensor[(126, 12), uint16] */, %156, %157, %var_4980, %158, %159)
}

def @func_4871(%var_4864: Tensor[(14, 6, 9), float64]) -> (Tensor[(14, 6, 9), float64],) {
  %160 = cast(%var_4864, dtype="float64") /* ty=Tensor[(14, 6, 9), float64] */;
  %161 = log2(%160) /* ty=Tensor[(14, 6, 9), float64] */;
  (%161,)
}

def @func_9326() -> (Tensor[(6, 3), float64],) {
  %162 = @func_8931() /* ty=(Tensor[(6, 3), float64],) */;
  %163 = %162.0;
  (%163,)
}

def @func_9581(%var_9559: Tensor[(7, 15, 12), int16], %var_9560: Tensor[(7, 15, 12), int16], %var_9577: Tensor[(7, 15, 12), int16]) -> (Tensor[(7, 15, 12), bool], Tensor[(7, 15, 12), bool]) {
  %164 = cast(%var_9560, dtype="int16") /* ty=Tensor[(7, 15, 12), int16] */;
  %165 = shape_of(%var_9559, dtype="int32") /* ty=Tensor[(3), int32] */;
  %166 = cast(%var_9559, dtype="int16") /* ty=Tensor[(7, 15, 12), int16] */;
  %167 = dyn.reshape(%164, %165, newshape=[]) /* ty=Tensor[(?, ?, ?), int16] */;
  %168 = minimum(%166, %167) /* ty=Tensor[(7, 15, 12), int16] */;
  %169 = cast(%168, dtype="bool") /* ty=Tensor[(7, 15, 12), bool] */;
  %170 = shape_of(%var_9559, dtype="int32") /* ty=Tensor[(3), int32] */;
  %171 = cast(%var_9559, dtype="bool") /* ty=Tensor[(7, 15, 12), bool] */;
  %172 = dyn.reshape(%169, %170, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %173 = cast(%var_9577, dtype="bool") /* ty=Tensor[(7, 15, 12), bool] */;
  %174 = shape_of(%var_9560, dtype="int32") /* ty=Tensor[(3), int32] */;
  %175 = cast(%var_9560, dtype="bool") /* ty=Tensor[(7, 15, 12), bool] */;
  %176 = dyn.reshape(%173, %174, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %177 = greater_equal(%171, %172) /* ty=Tensor[(7, 15, 12), bool] */;
  %178 = logical_or(%175, %176) /* ty=Tensor[(7, 15, 12), bool] */;
  (%177, %178)
}

def @func_9230(%var_9219: Tensor[(10), float64], %var_9220: Tensor[(143), int64]) -> (Tensor[(6, 3), float64], Tensor[(9, 14, 12), uint16], Tensor[(2925), float64], Tensor[(168), uint16], Tensor[(2, 15, 13), int8], Tensor[(390), int8], Tensor[(1, 450), float32], Tensor[(143), int64], Tensor[(10), float64], Tensor[(143), int64]) {
  %179 = @func_8931() /* ty=(Tensor[(6, 3), float64],) */;
  %180 = cast(meta[relay.Constant][15] /* ty=Tensor[(2925), float64] */, dtype="float64") /* ty=Tensor[(2925), float64] */;
  %181 = cast(meta[relay.Constant][16] /* ty=Tensor[(168), uint16] */, dtype="uint16") /* ty=Tensor[(168), uint16] */;
  %182 = cast(meta[relay.Constant][17] /* ty=Tensor[(1, 450), float64] */, dtype="float64") /* ty=Tensor[(1, 450), float64] */;
  %183 = reshape(%180, newshape=[13, 15, 15]) /* ty=Tensor[(13, 15, 15), float64] */;
  %184 = reshape(%181, newshape=[84, 2]) /* ty=Tensor[(84, 2), uint16] */;
  %185 = reshape(%182, newshape=[450]) /* ty=Tensor[(450), float64] */;
  %186 = @func_4996(%183, %184, %185) /* ty=(Tensor[(9, 14, 12), uint16], Tensor[(84, 2), uint16], Tensor[(126, 12), uint16], Tensor[(13, 15, 15), float64], Tensor[(10, 15, 3), int8], Tensor[(450), float64], Tensor[(13, 15, 15), float32], Tensor[(13, 15, 15), float64]) */;
  %187 = cast(meta[relay.Constant][18] /* ty=int8 */, dtype="int8") /* ty=int8 */;
  %188 = cast(meta[relay.Constant][19] /* ty=Tensor[(390), int8] */, dtype="int8") /* ty=Tensor[(390), int8] */;
  %189 = reshape(%187, newshape=[]) /* ty=int8 */;
  %190 = reshape(%188, newshape=[2, 15, 13]) /* ty=Tensor[(2, 15, 13), int8] */;
  %191 = cast(meta[relay.Constant][17] /* ty=Tensor[(1, 450), float64] */, dtype="float32") /* ty=Tensor[(1, 450), float32] */;
  %192 = cast(meta[relay.Constant][18] /* ty=int8 */, dtype="float32") /* ty=float32 */;
  %193 = cast(%var_9219, dtype="float64") /* ty=Tensor[(10), float64] */;
  %194 = cast(meta[relay.Constant][18] /* ty=int8 */, dtype="int64") /* ty=int64 */;
  %195 = cast(%var_9220, dtype="int64") /* ty=Tensor[(143), int64] */;
  %196 = reshape(%193, newshape=[5, 1, 2]) /* ty=Tensor[(5, 1, 2), float64] */;
  %197 = reshape(%194, newshape=[]) /* ty=int64 */;
  %198 = reshape(%195, newshape=[143]) /* ty=Tensor[(143), int64] */;
  %199 = @func_5287(%196, %197, %198) /* ty=(Tensor[(5, 4, 2), float64], Tensor[(1, 13, 11), int64], int64, Tensor[(143), int64]) */;
  %200 = %179.0;
  %201 = %186.0;
  %202 = @func_3757(%189, %190) /* ty=Tensor[(2, 15, 13), int8] */;
  %203 = floor_mod(%191, %192) /* ty=Tensor[(1, 450), float32] */;
  %204 = %199.3;
  (%200, %201, meta[relay.Constant][15] /* ty=Tensor[(2925), float64] */, meta[relay.Constant][16] /* ty=Tensor[(168), uint16] */, %202, meta[relay.Constant][19] /* ty=Tensor[(390), int8] */, %203, %204, %var_9219, %var_9220)
}

def @main(%var_10228: uint32, %var_10229: Tensor[(2, 10, 11), uint32]) -> (Tensor[(2, 10, 11), uint32],) {
  %205 = cast(%var_10228, dtype="uint32") /* ty=uint32 */;
  %206 = cast(%var_10229, dtype="uint32") /* ty=Tensor[(2, 10, 11), uint32] */;
  %207 = right_shift(%205, %206) /* ty=Tensor[(2, 10, 11), uint32] */;
  (%207,)
}

def @func_5847(%var_5824: Tensor[(15, 10, 12), float32], %var_5841: Tensor[(2, 80), bool]) -> (Tensor[(15, 10, 12), int16], Tensor[(2, 5, 16), bool], Tensor[(2, 80), bool], Tensor[(11, 8, 5), float32], Tensor[(55), float32]) {
  %208 = cast(%var_5824, dtype="float32") /* ty=Tensor[(15, 10, 12), float32] */;
  %209 = exp(%208) /* ty=Tensor[(15, 10, 12), float32] */;
  %210 = cast(%209, dtype="float32") /* ty=Tensor[(15, 10, 12), float32] */;
  %211 = acos(%210) /* ty=Tensor[(15, 10, 12), float32] */;
  %212 = cast(%211, dtype="int16") /* ty=Tensor[(15, 10, 12), int16] */;
  %213 = shape_of(%209, dtype="int32") /* ty=Tensor[(3), int32] */;
  %214 = cast(%209, dtype="int16") /* ty=Tensor[(15, 10, 12), int16] */;
  %215 = dyn.reshape(%212, %213, newshape=[]) /* ty=Tensor[(?, ?, ?), int16] */;
  %216 = cast(%var_5841, dtype="bool") /* ty=Tensor[(2, 80), bool] */;
  %217 = reshape(%216, newshape=[2, 5, 16]) /* ty=Tensor[(2, 5, 16), bool] */;
  %218 = @func_1005(%217) /* ty=(Tensor[(2, 5, 16), bool],) */;
  %219 = cast(meta[relay.Constant][20] /* ty=Tensor[(55), float32] */, dtype="float32") /* ty=Tensor[(55), float32] */;
  %220 = reshape(%219, newshape=[11, 1, 5]) /* ty=Tensor[(11, 1, 5), float32] */;
  %221 = @func_5310(%220) /* ty=(Tensor[(11, 8, 5), float32],) */;
  %222 = left_shift(%214, %215) /* ty=Tensor[(15, 10, 12), int16] */;
  %223 = %218.0;
  %224 = %221.0;
  (%222, %223, %var_5841, %224, meta[relay.Constant][20] /* ty=Tensor[(55), float32] */)
}

def @func_1704(%var_1681: Tensor[(12, 2, 7), int16], %var_1682: Tensor[(12, 2, 7), int16]) -> (Tensor[(12, 2, 7), bool], Tensor[(10, 4, 2), float64], Tensor[(2, 40), bool]) {
  %225 = cast(%var_1682, dtype="bool") /* ty=Tensor[(12, 2, 7), bool] */;
  %226 = shape_of(%var_1681, dtype="int32") /* ty=Tensor[(3), int32] */;
  %227 = cast(%var_1681, dtype="bool") /* ty=Tensor[(12, 2, 7), bool] */;
  %228 = dyn.reshape(%225, %226, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %229 = cast(meta[relay.Constant][21] /* ty=Tensor[(2, 40), bool] */, dtype="bool") /* ty=Tensor[(2, 40), bool] */;
  %230 = reshape(%229, newshape=[10, 4, 2]) /* ty=Tensor[(10, 4, 2), bool] */;
  %231 = @func_312(%230) /* ty=(Tensor[(10, 4, 2), bool], Tensor[(10, 4, 2), float64]) */;
  %232 = less_equal(%227, %228) /* ty=Tensor[(12, 2, 7), bool] */;
  %233 = %231.1;
  (%232, %233, meta[relay.Constant][21] /* ty=Tensor[(2, 40), bool] */)
}

def @func_3217(%var_3145: Tensor[(18, 100), bool], %var_3146: Tensor[(80), bool], %var_3168: Tensor[(2816), float64]) -> (Tensor[(15, 8, 15), uint32], Tensor[(18, 100), bool], Tensor[(80), bool], Tensor[(11, 16, 16), float64], Tensor[(2816), float64], Tensor[(7, 14, 12), float64], Tensor[(7, 14, 12), float64]) {
  %234 = cast(False /* ty=bool */, dtype="bool") /* ty=bool */;
  %235 = cast(%var_3145, dtype="bool") /* ty=Tensor[(18, 100), bool] */;
  %236 = cast(%var_3145, dtype="bool") /* ty=Tensor[(18, 100), bool] */;
  %237 = cast(%var_3146, dtype="bool") /* ty=Tensor[(80), bool] */;
  %238 = cast(%var_3145, dtype="float64") /* ty=Tensor[(18, 100), float64] */;
  %239 = reshape(%234, newshape=[]) /* ty=bool */;
  %240 = reshape(%235, newshape=[15, 8, 15]) /* ty=Tensor[(15, 8, 15), bool] */;
  %241 = reshape(%236, newshape=[15, 8, 15]) /* ty=Tensor[(15, 8, 15), bool] */;
  %242 = reshape(%237, newshape=[1, 80]) /* ty=Tensor[(1, 80), bool] */;
  %243 = reshape(%238, newshape=[15, 8, 15]) /* ty=Tensor[(15, 8, 15), float64] */;
  %244 = @func_956(%239, %240, %241, %242, %243) /* ty=(Tensor[(15, 8, 15), uint32], Tensor[(10, 4, 2), float64], Tensor[(1, 80), bool], Tensor[(15, 8, 15), uint64]) */;
  %245 = cast(%var_3168, dtype="float64") /* ty=Tensor[(2816), float64] */;
  %246 = reshape(%245, newshape=[11, 16, 16]) /* ty=Tensor[(11, 16, 16), float64] */;
  %247 = @func_1725(%246) /* ty=(Tensor[(11, 16, 16), float64],) */;
  %248 = cast(meta[relay.Constant][22] /* ty=Tensor[(7, 14, 12), float32] */, dtype="float32") /* ty=Tensor[(7, 14, 12), float32] */;
  %249 = sin(%248) /* ty=Tensor[(7, 14, 12), float32] */;
  %250 = cast(%249, dtype="bool") /* ty=Tensor[(7, 14, 12), bool] */;
  %251 = cast(False /* ty=bool */, dtype="bool") /* ty=bool */;
  %252 = less_equal(%250, %251) /* ty=Tensor[(7, 14, 12), bool] */;
  %253 = cast(%252, dtype="float64") /* ty=Tensor[(7, 14, 12), float64] */;
  %254 = erf(%253) /* ty=Tensor[(7, 14, 12), float64] */;
  %255 = cast(%254, dtype="float64") /* ty=Tensor[(7, 14, 12), float64] */;
  %256 = atan(%255) /* ty=Tensor[(7, 14, 12), float64] */;
  %257 = cast(%256, dtype="float64") /* ty=Tensor[(7, 14, 12), float64] */;
  %258 = cast(%252, dtype="float64") /* ty=Tensor[(7, 14, 12), float64] */;
  %259 = %244.0;
  %260 = %247.0;
  %261 = sigmoid(%257) /* ty=Tensor[(7, 14, 12), float64] */;
  %262 = rsqrt(%258) /* ty=Tensor[(7, 14, 12), float64] */;
  (%259, %var_3145, %var_3146, %260, %var_3168, %261, %262)
}

def @func_689(%var_656: Tensor[(10, 4, 9), float32], %var_657: Tensor[(10, 4, 9), float32]) -> (Tensor[(10, 4, 9), int64], Tensor[(10, 4, 2), float64], Tensor[(80), bool]) {
  %263 = cast(%var_657, dtype="float32") /* ty=Tensor[(10, 4, 9), float32] */;
  %264 = shape_of(%var_656, dtype="int32") /* ty=Tensor[(3), int32] */;
  %265 = cast(%var_656, dtype="float32") /* ty=Tensor[(10, 4, 9), float32] */;
  %266 = dyn.reshape(%263, %264, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %267 = divide(%265, %266) /* ty=Tensor[(10, 4, 9), float32] */;
  %268 = cast(%267, dtype="int64") /* ty=Tensor[(10, 4, 9), int64] */;
  %269 = shape_of(%var_657, dtype="int32") /* ty=Tensor[(3), int32] */;
  %270 = cast(%var_657, dtype="int64") /* ty=Tensor[(10, 4, 9), int64] */;
  %271 = dyn.reshape(%268, %269, newshape=[]) /* ty=Tensor[(?, ?, ?), int64] */;
  %272 = cast(meta[relay.Constant][23] /* ty=Tensor[(80), bool] */, dtype="bool") /* ty=Tensor[(80), bool] */;
  %273 = reshape(%272, newshape=[10, 4, 2]) /* ty=Tensor[(10, 4, 2), bool] */;
  %274 = @func_312(%273) /* ty=(Tensor[(10, 4, 2), bool], Tensor[(10, 4, 2), float64]) */;
  %275 = add(%270, %271) /* ty=Tensor[(10, 4, 9), int64] */;
  %276 = %274.1;
  (%275, %276, meta[relay.Constant][23] /* ty=Tensor[(80), bool] */)
}

def @func_5189(%var_5152: Tensor[(10, 1, 12), uint16], %var_5153: Tensor[(10, 5, 12), uint16], %var_5161: int64, %var_5162: Tensor[(143), int64], %var_5171: Tensor[(1800), bool], %var_5178: Tensor[(2816), float64]) -> (Tensor[(10, 5, 12), float32], Tensor[(?, 13, 11), uint16], int64, Tensor[(143), int64], Tensor[(10, 1, 12), float64], Tensor[(15, 8, 15), uint32], Tensor[(1800), bool], Tensor[(80), bool], Tensor[(11, 16, 16), float64], Tensor[(2816), float64], Tensor[(360, 1), float32], Tensor[(390), float64]) {
  %277 = cast(%var_5152, dtype="bool") /* ty=Tensor[(10, 1, 12), bool] */;
  %278 = cast(%var_5153, dtype="bool") /* ty=Tensor[(10, 5, 12), bool] */;
  %279 = not_equal(%277, %278) /* ty=Tensor[(10, 5, 12), bool] */;
  %280 = cast(%var_5152, dtype="float32") /* ty=Tensor[(10, 1, 12), float32] */;
  %281 = cast(%279, dtype="float32") /* ty=Tensor[(10, 5, 12), float32] */;
  %282 = cast(%var_5161, dtype="int64") /* ty=int64 */;
  %283 = cast(%var_5162, dtype="int64") /* ty=Tensor[(143), int64] */;
  %284 = cast(%var_5162, dtype="int64") /* ty=Tensor[(143), int64] */;
  %285 = reshape(%282, newshape=[]) /* ty=int64 */;
  %286 = reshape(%283, newshape=[1, 13, 11]) /* ty=Tensor[(1, 13, 11), int64] */;
  %287 = reshape(%284, newshape=[1, 13, 11]) /* ty=Tensor[(1, 13, 11), int64] */;
  %288 = @func_5084(%285, %286, %287) /* ty=(Tensor[(1, 13, 11), int64], Tensor[(?, 13, 11), uint16], Tensor[(1, 13, 11), float64], Tensor[(10, 4, 2), float64], Tensor[(1800), bool], Tensor[(80), bool], Tensor[(1, 13, 11), int32]) */;
  %289 = cast(%var_5152, dtype="float64") /* ty=Tensor[(10, 1, 12), float64] */;
  %290 = cast(%var_5161, dtype="bool") /* ty=bool */;
  %291 = cast(%var_5171, dtype="bool") /* ty=Tensor[(1800), bool] */;
  %292 = cast(%var_5171, dtype="bool") /* ty=Tensor[(1800), bool] */;
  %293 = cast(meta[relay.Constant][24] /* ty=Tensor[(80), bool] */, dtype="bool") /* ty=Tensor[(80), bool] */;
  %294 = cast(%var_5171, dtype="float64") /* ty=Tensor[(1800), float64] */;
  %295 = reshape(%290, newshape=[]) /* ty=bool */;
  %296 = reshape(%291, newshape=[15, 8, 15]) /* ty=Tensor[(15, 8, 15), bool] */;
  %297 = reshape(%292, newshape=[15, 8, 15]) /* ty=Tensor[(15, 8, 15), bool] */;
  %298 = reshape(%293, newshape=[1, 80]) /* ty=Tensor[(1, 80), bool] */;
  %299 = reshape(%294, newshape=[15, 8, 15]) /* ty=Tensor[(15, 8, 15), float64] */;
  %300 = @func_956(%295, %296, %297, %298, %299) /* ty=(Tensor[(15, 8, 15), uint32], Tensor[(10, 4, 2), float64], Tensor[(1, 80), bool], Tensor[(15, 8, 15), uint64]) */;
  %301 = cast(%var_5178, dtype="float64") /* ty=Tensor[(2816), float64] */;
  %302 = reshape(%301, newshape=[11, 16, 16]) /* ty=Tensor[(11, 16, 16), float64] */;
  %303 = @func_1725(%302) /* ty=(Tensor[(11, 16, 16), float64],) */;
  %304 = cast(meta[relay.Constant][25] /* ty=Tensor[(390), float64] */, dtype="float64") /* ty=Tensor[(390), float64] */;
  %305 = cast(meta[relay.Constant][25] /* ty=Tensor[(390), float64] */, dtype="float64") /* ty=Tensor[(390), float64] */;
  %306 = reshape(%304, newshape=[13, 3, 10]) /* ty=Tensor[(13, 3, 10), float64] */;
  %307 = reshape(%305, newshape=[13, 3, 10]) /* ty=Tensor[(13, 3, 10), float64] */;
  %308 = @func_3575(%306, %307) /* ty=(Tensor[(13, 3, 10), float64], Tensor[(10, 4, 9), int64], Tensor[(360, 1), float32]) */;
  %309 = mod(%280, %281) /* ty=Tensor[(10, 5, 12), float32] */;
  %310 = %288.1;
  %311 = acosh(%289) /* ty=Tensor[(10, 1, 12), float64] */;
  %312 = %300.0;
  %313 = %303.0;
  %314 = %308.2;
  (%309, %310, %var_5161, %var_5162, %311, %312, %var_5171, meta[relay.Constant][24] /* ty=Tensor[(80), bool] */, %313, %var_5178, %314, meta[relay.Constant][25] /* ty=Tensor[(390), float64] */)
}

def @func_10147(%var_10139: Tensor[(12, 13, 11), bool]) -> (Tensor[(12, 13, 11), bool], Tensor[(7, 15, 12), bool], Tensor[(1260), int16]) {
  %315 = cast(%var_10139, dtype="bool") /* ty=Tensor[(12, 13, 11), bool] */;
  %316 = shape_of(meta[relay.Constant][26] /* ty=Tensor[(12, 13, 11), bool] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %317 = cast(meta[relay.Constant][26] /* ty=Tensor[(12, 13, 11), bool] */, dtype="bool") /* ty=Tensor[(12, 13, 11), bool] */;
  %318 = dyn.reshape(%315, %316, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %319 = cast(meta[relay.Constant][27] /* ty=Tensor[(1260), int16] */, dtype="int16") /* ty=Tensor[(1260), int16] */;
  %320 = cast(meta[relay.Constant][27] /* ty=Tensor[(1260), int16] */, dtype="int16") /* ty=Tensor[(1260), int16] */;
  %321 = cast(meta[relay.Constant][27] /* ty=Tensor[(1260), int16] */, dtype="int16") /* ty=Tensor[(1260), int16] */;
  %322 = reshape(%319, newshape=[7, 15, 12]) /* ty=Tensor[(7, 15, 12), int16] */;
  %323 = reshape(%320, newshape=[7, 15, 12]) /* ty=Tensor[(7, 15, 12), int16] */;
  %324 = reshape(%321, newshape=[7, 15, 12]) /* ty=Tensor[(7, 15, 12), int16] */;
  %325 = @func_9581(%322, %323, %324) /* ty=(Tensor[(7, 15, 12), bool], Tensor[(7, 15, 12), bool]) */;
  %326 = logical_or(%317, %318) /* ty=Tensor[(12, 13, 11), bool] */;
  %327 = %325.0;
  (%326, %327, meta[relay.Constant][27] /* ty=Tensor[(1260), int16] */)
}

def @func_5743(%var_5683: Tensor[(5, 9, 9), float64], %var_5689: Tensor[(2925), float64], %var_5691: Tensor[(450), float64]) -> (Tensor[(5, 9, 9), float64], Tensor[(450), float64], Tensor[(2925), float64], Tensor[(84, 2), uint16], Tensor[(450), float64]) {
  %328 = cast(%var_5683, dtype="float64") /* ty=Tensor[(5, 9, 9), float64] */;
  %329 = cast(%var_5689, dtype="float64") /* ty=Tensor[(2925), float64] */;
  %330 = cast(meta[relay.Constant][28] /* ty=Tensor[(84, 2), uint16] */, dtype="uint16") /* ty=Tensor[(84, 2), uint16] */;
  %331 = cast(%var_5691, dtype="float64") /* ty=Tensor[(450), float64] */;
  %332 = reshape(%329, newshape=[13, 15, 15]) /* ty=Tensor[(13, 15, 15), float64] */;
  %333 = reshape(%330, newshape=[84, 2]) /* ty=Tensor[(84, 2), uint16] */;
  %334 = reshape(%331, newshape=[450]) /* ty=Tensor[(450), float64] */;
  %335 = @func_4996(%332, %333, %334) /* ty=(Tensor[(9, 14, 12), uint16], Tensor[(84, 2), uint16], Tensor[(126, 12), uint16], Tensor[(13, 15, 15), float64], Tensor[(10, 15, 3), int8], Tensor[(450), float64], Tensor[(13, 15, 15), float32], Tensor[(13, 15, 15), float64]) */;
  %336 = rsqrt(%328) /* ty=Tensor[(5, 9, 9), float64] */;
  %337 = %335.5;
  (%336, %337, %var_5689, meta[relay.Constant][28] /* ty=Tensor[(84, 2), uint16] */, %var_5691)
}

def @func_7549(%var_7539: Tensor[(16, 2, 12), float64], %var_7540: Tensor[(16, 2, 12), float64]) -> (Tensor[(16, 2, 12), float64], Tensor[(16, 2, 12), float32]) {
  %338 = cast(%var_7540, dtype="float64") /* ty=Tensor[(16, 2, 12), float64] */;
  %339 = shape_of(%var_7539, dtype="int32") /* ty=Tensor[(3), int32] */;
  %340 = cast(%var_7539, dtype="float64") /* ty=Tensor[(16, 2, 12), float64] */;
  %341 = dyn.reshape(%338, %339, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %342 = cast(%var_7540, dtype="float32") /* ty=Tensor[(16, 2, 12), float32] */;
  %343 = floor_divide(%340, %341) /* ty=Tensor[(16, 2, 12), float64] */;
  %344 = asinh(%342) /* ty=Tensor[(16, 2, 12), float32] */;
  (%343, %344)
}

def @func_7365(%var_7347: Tensor[(11, 4, 6), float64]) -> (Tensor[(11, 4, 6), float64],) {
  %345 = cast(%var_7347, dtype="float64") /* ty=Tensor[(11, 4, 6), float64] */;
  %346 = atanh(%345) /* ty=Tensor[(11, 4, 6), float64] */;
  (%346,)
}

def @func_5310(%var_5300: Tensor[(11, 1, 5), float32]) -> (Tensor[(11, 8, 5), float32],) {
  %347 = cast(%var_5300, dtype="float32") /* ty=Tensor[(11, 1, 5), float32] */;
  %348 = cast(meta[relay.Constant][29] /* ty=Tensor[(11, 8, 5), float32] */, dtype="float32") /* ty=Tensor[(11, 8, 5), float32] */;
  %349 = power(%347, %348) /* ty=Tensor[(11, 8, 5), float32] */;
  (%349,)
}

def @func_6357(%var_6348: Tensor[(16, 14, 6), float32]) -> Tensor[(16, 14, 6), float32] {
  %350 = cast(%var_6348, dtype="float32") /* ty=Tensor[(16, 14, 6), float32] */;
  acosh(%350) /* ty=Tensor[(16, 14, 6), float32] */
}

def @func_7105(%var_7100: Tensor[(2, 4, 10), float64]) -> Tensor[(2, 4, 10), float64] {
  %351 = cast(%var_7100, dtype="float64") /* ty=Tensor[(2, 4, 10), float64] */;
  atanh(%351) /* ty=Tensor[(2, 4, 10), float64] */
}

def @func_7341(%var_7334: Tensor[(5, 8, 16), float64], %var_7338: Tensor[(192), int8]) -> (Tensor[(5, 8, 16), float64], Tensor[(3, 4, 16), int8], Tensor[(192), int8]) {
  %352 = cast(%var_7334, dtype="float64") /* ty=Tensor[(5, 8, 16), float64] */;
  %353 = cast(%var_7338, dtype="int8") /* ty=Tensor[(192), int8] */;
  %354 = cast(%var_7338, dtype="int8") /* ty=Tensor[(192), int8] */;
  %355 = reshape(%353, newshape=[3, 4, 16]) /* ty=Tensor[(3, 4, 16), int8] */;
  %356 = reshape(%354, newshape=[3, 4, 16]) /* ty=Tensor[(3, 4, 16), int8] */;
  %357 = asin(%352) /* ty=Tensor[(5, 8, 16), float64] */;
  %358 = @func_6647(%355, %356) /* ty=Tensor[(3, 4, 16), int8] */;
  (%357, %358, %var_7338)
}

def @func_7246(%var_7239: Tensor[(13, 6, 6), uint32], %var_7240: Tensor[(13, 6, 6), uint32]) -> (Tensor[(13, 6, 6), bool],) {
  %359 = cast(%var_7240, dtype="bool") /* ty=Tensor[(13, 6, 6), bool] */;
  %360 = shape_of(%var_7239, dtype="int32") /* ty=Tensor[(3), int32] */;
  %361 = cast(%var_7239, dtype="bool") /* ty=Tensor[(13, 6, 6), bool] */;
  %362 = dyn.reshape(%359, %360, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %363 = equal(%361, %362) /* ty=Tensor[(13, 6, 6), bool] */;
  (%363,)
}

def @func_8713(%var_8688: Tensor[(15, 9, 12), bool], %var_8711: Tensor[(2816), float64]) -> (Tensor[(15, 9, 12), bool], Tensor[(15, 9, 12), float64], Tensor[(11, 16, 16), float64], Tensor[(2816), float64]) {
  %364 = cast(meta[relay.Constant][30] /* ty=Tensor[(15, 9, 12), bool] */, dtype="bool") /* ty=Tensor[(15, 9, 12), bool] */;
  %365 = shape_of(%var_8688, dtype="int32") /* ty=Tensor[(3), int32] */;
  %366 = cast(%var_8688, dtype="bool") /* ty=Tensor[(15, 9, 12), bool] */;
  %367 = dyn.reshape(%364, %365, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %368 = logical_and(%366, %367) /* ty=Tensor[(15, 9, 12), bool] */;
  %369 = cast(%var_8688, dtype="bool") /* ty=Tensor[(15, 9, 12), bool] */;
  %370 = shape_of(%368, dtype="int32") /* ty=Tensor[(3), int32] */;
  %371 = cast(%368, dtype="bool") /* ty=Tensor[(15, 9, 12), bool] */;
  %372 = dyn.reshape(%369, %370, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %373 = cast(meta[relay.Constant][30] /* ty=Tensor[(15, 9, 12), bool] */, dtype="float64") /* ty=Tensor[(15, 9, 12), float64] */;
  %374 = cast(%var_8711, dtype="float64") /* ty=Tensor[(2816), float64] */;
  %375 = reshape(%374, newshape=[11, 16, 16]) /* ty=Tensor[(11, 16, 16), float64] */;
  %376 = @func_1725(%375) /* ty=(Tensor[(11, 16, 16), float64],) */;
  %377 = equal(%371, %372) /* ty=Tensor[(15, 9, 12), bool] */;
  %378 = atanh(%373) /* ty=Tensor[(15, 9, 12), float64] */;
  %379 = %376.0;
  (%377, %378, %379, %var_8711)
}

def @func_9171(%var_9155: Tensor[(160), bool]) -> (Tensor[(6, 3), float64], Tensor[(160), bool], Tensor[(2, 5, 16), float32]) {
  %380 = @func_8931() /* ty=(Tensor[(6, 3), float64],) */;
  %381 = cast(%var_9155, dtype="bool") /* ty=Tensor[(160), bool] */;
  %382 = reshape(%381, newshape=[2, 5, 16]) /* ty=Tensor[(2, 5, 16), bool] */;
  %383 = @func_1005(%382) /* ty=(Tensor[(2, 5, 16), bool],) */;
  %384 = %383.0;
  %385 = cast(meta[relay.Constant][31] /* ty=Tensor[(2, 5, 16), bool] */, dtype="int64") /* ty=Tensor[(2, 5, 16), int64] */;
  %386 = shape_of(%384, dtype="int32") /* ty=Tensor[(3), int32] */;
  %387 = cast(%384, dtype="int64") /* ty=Tensor[(2, 5, 16), int64] */;
  %388 = dyn.reshape(%385, %386, newshape=[]) /* ty=Tensor[(?, ?, ?), int64] */;
  %389 = logical_xor(%387, %388) /* ty=Tensor[(2, 5, 16), int64] */;
  %390 = cast(%389, dtype="float32") /* ty=Tensor[(2, 5, 16), float32] */;
  %391 = %380.0;
  %392 = cosh(%390) /* ty=Tensor[(2, 5, 16), float32] */;
  (%391, %var_9155, %392)
}

def @func_4854(%var_4816: float64, %var_4817: Tensor[(4, 7, 5), float64], %var_4826: Tensor[(160), bool], %var_4844: Tensor[(1800), bool], %var_4845: Tensor[(80), bool], %var_4846: Tensor[(2816), float64]) -> (Tensor[(4, 7, 5), float64], Tensor[(2, 5, 16), bool], Tensor[(160), bool], Tensor[(7, 14, 12), float64], Tensor[(1800), bool], Tensor[(80), bool], Tensor[(2816), float64], Tensor[(10, 4, 2), float64], Tensor[(450), float64]) {
  %393 = cast(%var_4816, dtype="float64") /* ty=float64 */;
  %394 = cast(%var_4817, dtype="float64") /* ty=Tensor[(4, 7, 5), float64] */;
  %395 = cast(%var_4826, dtype="bool") /* ty=Tensor[(160), bool] */;
  %396 = reshape(%395, newshape=[2, 5, 16]) /* ty=Tensor[(2, 5, 16), bool] */;
  %397 = @func_1005(%396) /* ty=(Tensor[(2, 5, 16), bool],) */;
  %398 = cast(%var_4844, dtype="bool") /* ty=Tensor[(1800), bool] */;
  %399 = cast(%var_4845, dtype="bool") /* ty=Tensor[(80), bool] */;
  %400 = cast(%var_4846, dtype="float64") /* ty=Tensor[(2816), float64] */;
  %401 = reshape(%398, newshape=[18, 100]) /* ty=Tensor[(18, 100), bool] */;
  %402 = reshape(%399, newshape=[80]) /* ty=Tensor[(80), bool] */;
  %403 = reshape(%400, newshape=[2816]) /* ty=Tensor[(2816), float64] */;
  %404 = @func_3217(%401, %402, %403) /* ty=(Tensor[(15, 8, 15), uint32], Tensor[(18, 100), bool], Tensor[(80), bool], Tensor[(11, 16, 16), float64], Tensor[(2816), float64], Tensor[(7, 14, 12), float64], Tensor[(7, 14, 12), float64]) */;
  %405 = cast(meta[relay.Constant][32] /* ty=Tensor[(450), float64] */, dtype="float64") /* ty=Tensor[(450), float64] */;
  %406 = reshape(%405, newshape=[10, 15, 3]) /* ty=Tensor[(10, 15, 3), float64] */;
  %407 = @func_4013(%406) /* ty=(Tensor[(10, 15, 3), int8], Tensor[(10, 4, 2), float64], Tensor[(360), float32]) */;
  %408 = floor_mod(%393, %394) /* ty=Tensor[(4, 7, 5), float64] */;
  %409 = %397.0;
  %410 = %404.5;
  %411 = %407.1;
  (%408, %409, %var_4826, %410, %var_4844, %var_4845, %var_4846, %411, meta[relay.Constant][32] /* ty=Tensor[(450), float64] */)
}

def @func_2482(%var_2476: Tensor[(1, 14, 12), uint16], %var_2477: Tensor[(9, 14, 12), uint16]) -> Tensor[(9, 14, 12), uint16] {
  %412 = cast(%var_2476, dtype="uint16") /* ty=Tensor[(1, 14, 12), uint16] */;
  %413 = cast(%var_2477, dtype="uint16") /* ty=Tensor[(9, 14, 12), uint16] */;
  bitwise_or(%412, %413) /* ty=Tensor[(9, 14, 12), uint16] */
}

def @func_3757(%var_3749: int8, %var_3750: Tensor[(2, 15, 13), int8]) -> Tensor[(2, 15, 13), int8] {
  %414 = cast(%var_3749, dtype="int8") /* ty=int8 */;
  %415 = cast(%var_3750, dtype="int8") /* ty=Tensor[(2, 15, 13), int8] */;
  left_shift(%414, %415) /* ty=Tensor[(2, 15, 13), int8] */
}

def @func_5084(%var_5048: int64, %var_5049: Tensor[(1, 13, 11), int64], %var_5056: Tensor[(1, 13, 11), int64]) -> (Tensor[(1, 13, 11), int64], Tensor[(?, 13, 11), uint16], Tensor[(1, 13, 11), float64], Tensor[(10, 4, 2), float64], Tensor[(1800), bool], Tensor[(80), bool], Tensor[(1, 13, 11), int32]) {
  %416 = cast(%var_5048, dtype="int64") /* ty=int64 */;
  %417 = cast(%var_5049, dtype="int64") /* ty=Tensor[(1, 13, 11), int64] */;
  %418 = cast(%var_5056, dtype="uint16") /* ty=Tensor[(1, 13, 11), uint16] */;
  %419 = shape_of(%var_5049, dtype="int32") /* ty=Tensor[(3), int32] */;
  %420 = cast(%var_5049, dtype="uint16") /* ty=Tensor[(1, 13, 11), uint16] */;
  %421 = dyn.reshape(%418, %419, newshape=[]) /* ty=Tensor[(?, ?, ?), uint16] */;
  %422 = cast(%var_5056, dtype="float64") /* ty=Tensor[(1, 13, 11), float64] */;
  %423 = cast(%var_5048, dtype="bool") /* ty=bool */;
  %424 = cast(meta[relay.Constant][33] /* ty=Tensor[(1800), bool] */, dtype="bool") /* ty=Tensor[(1800), bool] */;
  %425 = cast(meta[relay.Constant][33] /* ty=Tensor[(1800), bool] */, dtype="bool") /* ty=Tensor[(1800), bool] */;
  %426 = cast(meta[relay.Constant][34] /* ty=Tensor[(80), bool] */, dtype="bool") /* ty=Tensor[(80), bool] */;
  %427 = cast(meta[relay.Constant][33] /* ty=Tensor[(1800), bool] */, dtype="float64") /* ty=Tensor[(1800), float64] */;
  %428 = reshape(%423, newshape=[]) /* ty=bool */;
  %429 = reshape(%424, newshape=[15, 8, 15]) /* ty=Tensor[(15, 8, 15), bool] */;
  %430 = reshape(%425, newshape=[15, 8, 15]) /* ty=Tensor[(15, 8, 15), bool] */;
  %431 = reshape(%426, newshape=[1, 80]) /* ty=Tensor[(1, 80), bool] */;
  %432 = reshape(%427, newshape=[15, 8, 15]) /* ty=Tensor[(15, 8, 15), float64] */;
  %433 = @func_956(%428, %429, %430, %431, %432) /* ty=(Tensor[(15, 8, 15), uint32], Tensor[(10, 4, 2), float64], Tensor[(1, 80), bool], Tensor[(15, 8, 15), uint64]) */;
  %434 = cast(%var_5056, dtype="int32") /* ty=Tensor[(1, 13, 11), int32] */;
  %435 = cast(%var_5048, dtype="int32") /* ty=int32 */;
  %436 = bitwise_or(%416, %417) /* ty=Tensor[(1, 13, 11), int64] */;
  %437 = maximum(%420, %421) /* ty=Tensor[(?, 13, 11), uint16] */;
  %438 = rsqrt(%422) /* ty=Tensor[(1, 13, 11), float64] */;
  %439 = %433.1;
  %440 = subtract(%434, %435) /* ty=Tensor[(1, 13, 11), int32] */;
  (%436, %437, %438, %439, meta[relay.Constant][33] /* ty=Tensor[(1800), bool] */, meta[relay.Constant][34] /* ty=Tensor[(80), bool] */, %440)
}

def @func_9711() -> Tensor[(6, 3), float64] {
  %441 = @func_9326() /* ty=(Tensor[(6, 3), float64],) */;
  %441.0
}

def @func_3575(%var_3563: Tensor[(13, 3, 10), float64], %var_3564: Tensor[(13, 3, 10), float64]) -> (Tensor[(13, 3, 10), float64], Tensor[(10, 4, 9), int64], Tensor[(360, 1), float32]) {
  %442 = cast(%var_3564, dtype="float64") /* ty=Tensor[(13, 3, 10), float64] */;
  %443 = shape_of(%var_3563, dtype="int32") /* ty=Tensor[(3), int32] */;
  %444 = cast(%var_3563, dtype="float64") /* ty=Tensor[(13, 3, 10), float64] */;
  %445 = dyn.reshape(%442, %443, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %446 = cast(meta[relay.Constant][35] /* ty=Tensor[(360, 1), float32] */, dtype="float32") /* ty=Tensor[(360, 1), float32] */;
  %447 = cast(meta[relay.Constant][35] /* ty=Tensor[(360, 1), float32] */, dtype="float32") /* ty=Tensor[(360, 1), float32] */;
  %448 = reshape(%446, newshape=[10, 4, 9]) /* ty=Tensor[(10, 4, 9), float32] */;
  %449 = reshape(%447, newshape=[10, 4, 9]) /* ty=Tensor[(10, 4, 9), float32] */;
  %450 = @func_689(%448, %449) /* ty=(Tensor[(10, 4, 9), int64], Tensor[(10, 4, 2), float64], Tensor[(80), bool]) */;
  %451 = mod(%444, %445) /* ty=Tensor[(13, 3, 10), float64] */;
  %452 = %450.0;
  (%451, %452, meta[relay.Constant][35] /* ty=Tensor[(360, 1), float32] */)
}

def @func_6647(%var_6642: Tensor[(3, 4, 16), int8], %var_6643: Tensor[(3, 4, 16), int8]) -> Tensor[(3, 4, 16), int8] {
  %453 = cast(%var_6643, dtype="int8") /* ty=Tensor[(3, 4, 16), int8] */;
  %454 = shape_of(%var_6642, dtype="int32") /* ty=Tensor[(3), int32] */;
  %455 = cast(%var_6642, dtype="int8") /* ty=Tensor[(3, 4, 16), int8] */;
  %456 = dyn.reshape(%453, %454, newshape=[]) /* ty=Tensor[(?, ?, ?), int8] */;
  bitwise_xor(%455, %456) /* ty=Tensor[(3, 4, 16), int8] */
}

def @func_4267(%var_4201: Tensor[(3, 2, 9), int32], %var_4246: Tensor[(390), int8], %var_4253: Tensor[(160), bool]) -> (Tensor[(3, 2, 9), int32], Tensor[(450), uint64], Tensor[(2, 15, 13), int8], int8, Tensor[(390), int8], Tensor[(2, 5, 16), bool], Tensor[(160), bool]) {
  %457 = cast(meta[relay.Constant][36] /* ty=Tensor[(3, 2, 9), int32] */, dtype="int32") /* ty=Tensor[(3, 2, 9), int32] */;
  %458 = shape_of(%var_4201, dtype="int32") /* ty=Tensor[(3), int32] */;
  %459 = cast(%var_4201, dtype="int32") /* ty=Tensor[(3, 2, 9), int32] */;
  %460 = dyn.reshape(%457, %458, newshape=[]) /* ty=Tensor[(?, ?, ?), int32] */;
  %461 = cast(meta[relay.Constant][37] /* ty=Tensor[(450), float64] */, dtype="float64") /* ty=Tensor[(450), float64] */;
  %462 = reshape(%461, newshape=[10, 15, 3]) /* ty=Tensor[(10, 15, 3), float64] */;
  %463 = @func_4013(%462) /* ty=(Tensor[(10, 15, 3), int8], Tensor[(10, 4, 2), float64], Tensor[(360), float32]) */;
  %464 = %463.0;
  %465 = cast(%464, dtype="uint64") /* ty=Tensor[(10, 15, 3), uint64] */;
  %466 = shape_of(meta[relay.Constant][37] /* ty=Tensor[(450), float64] */, dtype="int32") /* ty=Tensor[(1), int32] */;
  %467 = cast(meta[relay.Constant][37] /* ty=Tensor[(450), float64] */, dtype="uint64") /* ty=Tensor[(450), uint64] */;
  %468 = dyn.reshape(%465, %466, newshape=[]) /* ty=Tensor[(?), uint64] */;
  %469 = cast(meta[relay.Constant][38] /* ty=int8 */, dtype="int8") /* ty=int8 */;
  %470 = cast(%var_4246, dtype="int8") /* ty=Tensor[(390), int8] */;
  %471 = reshape(%469, newshape=[]) /* ty=int8 */;
  %472 = reshape(%470, newshape=[2, 15, 13]) /* ty=Tensor[(2, 15, 13), int8] */;
  %473 = cast(%var_4253, dtype="bool") /* ty=Tensor[(160), bool] */;
  %474 = reshape(%473, newshape=[2, 5, 16]) /* ty=Tensor[(2, 5, 16), bool] */;
  %475 = @func_1005(%474) /* ty=(Tensor[(2, 5, 16), bool],) */;
  %476 = multiply(%459, %460) /* ty=Tensor[(3, 2, 9), int32] */;
  %477 = add(%467, %468) /* ty=Tensor[(450), uint64] */;
  %478 = @func_3757(%471, %472) /* ty=Tensor[(2, 15, 13), int8] */;
  %479 = %475.0;
  (%476, %477, %478, meta[relay.Constant][38] /* ty=int8 */, %var_4246, %479, %var_4253)
}

def @func_10105() -> (Tensor[(6, 3), float64], Tensor[(6, 3), float64]) {
  %480 = @func_9752() /* ty=Tensor[(6, 3), float64] */;
  %481 = @func_9711() /* ty=Tensor[(6, 3), float64] */;
  (%480, %481)
}

def @func_9116(%var_9079: Tensor[(11, 12, 3), float64]) -> (Tensor[(11, 12, 3), float32], Tensor[(2, 4, 10), float64], Tensor[(2, 40), float64]) {
  %482 = cast(%var_9079, dtype="float64") /* ty=Tensor[(11, 12, 3), float64] */;
  %483 = sin(%482) /* ty=Tensor[(11, 12, 3), float64] */;
  %484 = cast(%483, dtype="float32") /* ty=Tensor[(11, 12, 3), float32] */;
  %485 = cast(meta[relay.Constant][39] /* ty=Tensor[(2, 40), float64] */, dtype="float64") /* ty=Tensor[(2, 40), float64] */;
  %486 = reshape(%485, newshape=[2, 4, 10]) /* ty=Tensor[(2, 4, 10), float64] */;
  %487 = acosh(%484) /* ty=Tensor[(11, 12, 3), float32] */;
  %488 = @func_7105(%486) /* ty=Tensor[(2, 4, 10), float64] */;
  (%487, %488, meta[relay.Constant][39] /* ty=Tensor[(2, 40), float64] */)
}

def @func_6230(%var_6218: Tensor[(15, 2, 5), float32]) -> (Tensor[(15, 2, 5), float32], Tensor[(15, 2, 5), float64], Tensor[(15, 2, 5), float64]) {
  %489 = cast(%var_6218, dtype="float32") /* ty=Tensor[(15, 2, 5), float32] */;
  %490 = cast(%var_6218, dtype="float64") /* ty=Tensor[(15, 2, 5), float64] */;
  %491 = cast(%var_6218, dtype="float64") /* ty=Tensor[(15, 2, 5), float64] */;
  %492 = asinh(%489) /* ty=Tensor[(15, 2, 5), float32] */;
  %493 = asin(%490) /* ty=Tensor[(15, 2, 5), float64] */;
  %494 = tan(%491) /* ty=Tensor[(15, 2, 5), float64] */;
  (%492, %493, %494)
}

def @func_1725(%var_1716: Tensor[(11, 16, 16), float64]) -> (Tensor[(11, 16, 16), float64],) {
  %495 = cast(2.45904f64 /* ty=float64 */, dtype="float64") /* ty=float64 */;
  %496 = cast(%var_1716, dtype="float64") /* ty=Tensor[(11, 16, 16), float64] */;
  %497 = floor_mod(%495, %496) /* ty=Tensor[(11, 16, 16), float64] */;
  (%497,)
}

def @func_9973(%var_9931: Tensor[(384), float64], %var_9934: Tensor[(168), uint16], %var_9935: Tensor[(1512), uint16], %var_9966: Tensor[(120), uint16], %var_9971: Tensor[(2816), float64]) -> (Tensor[(6, 3), float64], Tensor[(16, 2, 12), float32], Tensor[(384), float64], Tensor[(168), uint16], Tensor[(9, 14, 12), float64], Tensor[(9, 14, 12), float64], Tensor[(143), int64], Tensor[(120), uint16], Tensor[(600), uint16], int64, Tensor[(143), int64], Tensor[(1800), bool], Tensor[(2816), float64]) {
  %498 = cast(%var_9931, dtype="float64") /* ty=Tensor[(384), float64] */;
  %499 = cast(%var_9931, dtype="float64") /* ty=Tensor[(384), float64] */;
  %500 = reshape(%498, newshape=[16, 2, 12]) /* ty=Tensor[(16, 2, 12), float64] */;
  %501 = reshape(%499, newshape=[16, 2, 12]) /* ty=Tensor[(16, 2, 12), float64] */;
  %502 = @func_7549(%500, %501) /* ty=(Tensor[(16, 2, 12), float64], Tensor[(16, 2, 12), float32]) */;
  %503 = cast(%var_9934, dtype="uint16") /* ty=Tensor[(168), uint16] */;
  %504 = cast(%var_9935, dtype="uint16") /* ty=Tensor[(1512), uint16] */;
  %505 = reshape(%503, newshape=[1, 14, 12]) /* ty=Tensor[(1, 14, 12), uint16] */;
  %506 = reshape(%504, newshape=[9, 14, 12]) /* ty=Tensor[(9, 14, 12), uint16] */;
  %507 = @func_2482(%505, %506) /* ty=Tensor[(9, 14, 12), uint16] */;
  %508 = cast(%507, dtype="float64") /* ty=Tensor[(9, 14, 12), float64] */;
  %509 = tan(%508) /* ty=Tensor[(9, 14, 12), float64] */;
  %510 = cast(%509, dtype="float64") /* ty=Tensor[(9, 14, 12), float64] */;
  %511 = cast(%507, dtype="bool") /* ty=Tensor[(9, 14, 12), bool] */;
  %512 = shape_of(%var_9935, dtype="int32") /* ty=Tensor[(1), int32] */;
  %513 = cast(%var_9935, dtype="bool") /* ty=Tensor[(1512), bool] */;
  %514 = dyn.reshape(%511, %512, newshape=[]) /* ty=Tensor[(?), bool] */;
  %515 = logical_and(%513, %514) /* ty=Tensor[(1512), bool] */;
  %516 = cast(%515, dtype="float64") /* ty=Tensor[(1512), float64] */;
  %517 = shape_of(%509, dtype="int32") /* ty=Tensor[(3), int32] */;
  %518 = cast(%509, dtype="float64") /* ty=Tensor[(9, 14, 12), float64] */;
  %519 = dyn.reshape(%516, %517, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %520 = cast(%var_9966, dtype="uint16") /* ty=Tensor[(120), uint16] */;
  %521 = cast(meta[relay.Constant][40] /* ty=Tensor[(600), uint16] */, dtype="uint16") /* ty=Tensor[(600), uint16] */;
  %522 = cast(3 /* ty=int64 */, dtype="int64") /* ty=int64 */;
  %523 = cast(meta[relay.Constant][41] /* ty=Tensor[(143), int64] */, dtype="int64") /* ty=Tensor[(143), int64] */;
  %524 = cast(meta[relay.Constant][42] /* ty=Tensor[(1800), bool] */, dtype="bool") /* ty=Tensor[(1800), bool] */;
  %525 = cast(%var_9971, dtype="float64") /* ty=Tensor[(2816), float64] */;
  %526 = reshape(%520, newshape=[10, 1, 12]) /* ty=Tensor[(10, 1, 12), uint16] */;
  %527 = reshape(%521, newshape=[10, 5, 12]) /* ty=Tensor[(10, 5, 12), uint16] */;
  %528 = reshape(%522, newshape=[]) /* ty=int64 */;
  %529 = reshape(%523, newshape=[143]) /* ty=Tensor[(143), int64] */;
  %530 = reshape(%524, newshape=[1800]) /* ty=Tensor[(1800), bool] */;
  %531 = reshape(%525, newshape=[2816]) /* ty=Tensor[(2816), float64] */;
  %532 = @func_5189(%526, %527, %528, %529, %530, %531) /* ty=(Tensor[(10, 5, 12), float32], Tensor[(?, 13, 11), uint16], int64, Tensor[(143), int64], Tensor[(10, 1, 12), float64], Tensor[(15, 8, 15), uint32], Tensor[(1800), bool], Tensor[(80), bool], Tensor[(11, 16, 16), float64], Tensor[(2816), float64], Tensor[(360, 1), float32], Tensor[(390), float64]) */;
  %533 = @func_9711() /* ty=Tensor[(6, 3), float64] */;
  %534 = %502.1;
  %535 = asinh(%510) /* ty=Tensor[(9, 14, 12), float64] */;
  %536 = power(%518, %519) /* ty=Tensor[(9, 14, 12), float64] */;
  %537 = %532.3;
  (%533, %534, %var_9931, %var_9934, %535, %536, %537, %var_9966, meta[relay.Constant][40] /* ty=Tensor[(600), uint16] */, 3 /* ty=int64 */, meta[relay.Constant][41] /* ty=Tensor[(143), int64] */, meta[relay.Constant][42] /* ty=Tensor[(1800), bool] */, %var_9971)
}

def @func_9073(%var_8978: Tensor[(8, 11, 14), int8], %var_8979: Tensor[(8, 11, 14), int8]) -> (Tensor[(10, 4, 2), float64], Tensor[(8, 11, 14), float32], Tensor[(405), float64], Tensor[(2925), float64], Tensor[(450), float32], bool, Tensor[(18, 100), bool], Tensor[(6, 3), float64], Tensor[(15, 8, 15), float64]) {
  %538 = cast(meta[relay.Constant][43] /* ty=Tensor[(450), float64] */, dtype="float64") /* ty=Tensor[(450), float64] */;
  %539 = reshape(%538, newshape=[10, 15, 3]) /* ty=Tensor[(10, 15, 3), float64] */;
  %540 = @func_4013(%539) /* ty=(Tensor[(10, 15, 3), int8], Tensor[(10, 4, 2), float64], Tensor[(360), float32]) */;
  %541 = cast(%var_8979, dtype="int8") /* ty=Tensor[(8, 11, 14), int8] */;
  %542 = shape_of(%var_8978, dtype="int32") /* ty=Tensor[(3), int32] */;
  %543 = cast(%var_8978, dtype="int8") /* ty=Tensor[(8, 11, 14), int8] */;
  %544 = dyn.reshape(%541, %542, newshape=[]) /* ty=Tensor[(?, ?, ?), int8] */;
  %545 = bitwise_and(%543, %544) /* ty=Tensor[(8, 11, 14), int8] */;
  %546 = cast(%545, dtype="float32") /* ty=Tensor[(8, 11, 14), float32] */;
  %547 = cast(meta[relay.Constant][44] /* ty=Tensor[(405), float64] */, dtype="float64") /* ty=Tensor[(405), float64] */;
  %548 = cast(meta[relay.Constant][45] /* ty=Tensor[(2925), float64] */, dtype="float64") /* ty=Tensor[(2925), float64] */;
  %549 = cast(meta[relay.Constant][43] /* ty=Tensor[(450), float64] */, dtype="float64") /* ty=Tensor[(450), float64] */;
  %550 = reshape(%547, newshape=[5, 9, 9]) /* ty=Tensor[(5, 9, 9), float64] */;
  %551 = reshape(%548, newshape=[2925]) /* ty=Tensor[(2925), float64] */;
  %552 = reshape(%549, newshape=[450]) /* ty=Tensor[(450), float64] */;
  %553 = @func_5743(%550, %551, %552) /* ty=(Tensor[(5, 9, 9), float64], Tensor[(450), float64], Tensor[(2925), float64], Tensor[(84, 2), uint16], Tensor[(450), float64]) */;
  %554 = %553.1;
  %555 = cast(%554, dtype="float32") /* ty=Tensor[(450), float32] */;
  %556 = shape_of(meta[relay.Constant][43] /* ty=Tensor[(450), float64] */, dtype="int32") /* ty=Tensor[(1), int32] */;
  %557 = cast(meta[relay.Constant][43] /* ty=Tensor[(450), float64] */, dtype="float32") /* ty=Tensor[(450), float32] */;
  %558 = dyn.reshape(%555, %556, newshape=[]) /* ty=Tensor[(?), float32] */;
  %559 = @func_8931() /* ty=(Tensor[(6, 3), float64],) */;
  %560 = cast(False /* ty=bool */, dtype="bool") /* ty=bool */;
  %561 = cast(meta[relay.Constant][46] /* ty=Tensor[(18, 100), bool] */, dtype="bool") /* ty=Tensor[(18, 100), bool] */;
  %562 = cast(meta[relay.Constant][46] /* ty=Tensor[(18, 100), bool] */, dtype="bool") /* ty=Tensor[(18, 100), bool] */;
  %563 = %540.1;
  %564 = cast(%563, dtype="bool") /* ty=Tensor[(10, 4, 2), bool] */;
  %565 = cast(meta[relay.Constant][46] /* ty=Tensor[(18, 100), bool] */, dtype="float64") /* ty=Tensor[(18, 100), float64] */;
  %566 = reshape(%560, newshape=[]) /* ty=bool */;
  %567 = reshape(%561, newshape=[15, 8, 15]) /* ty=Tensor[(15, 8, 15), bool] */;
  %568 = reshape(%562, newshape=[15, 8, 15]) /* ty=Tensor[(15, 8, 15), bool] */;
  %569 = reshape(%564, newshape=[1, 80]) /* ty=Tensor[(1, 80), bool] */;
  %570 = reshape(%565, newshape=[15, 8, 15]) /* ty=Tensor[(15, 8, 15), float64] */;
  %571 = @func_956(%566, %567, %568, %569, %570) /* ty=(Tensor[(15, 8, 15), uint32], Tensor[(10, 4, 2), float64], Tensor[(1, 80), bool], Tensor[(15, 8, 15), uint64]) */;
  %572 = %571.0;
  %573 = cast(%572, dtype="float64") /* ty=Tensor[(15, 8, 15), float64] */;
  %574 = cos(%546) /* ty=Tensor[(8, 11, 14), float32] */;
  %575 = divide(%557, %558) /* ty=Tensor[(450), float32] */;
  %576 = %559.0;
  %577 = sigmoid(%573) /* ty=Tensor[(15, 8, 15), float64] */;
  (%563, %574, meta[relay.Constant][44] /* ty=Tensor[(405), float64] */, meta[relay.Constant][45] /* ty=Tensor[(2925), float64] */, %575, False /* ty=bool */, meta[relay.Constant][46] /* ty=Tensor[(18, 100), bool] */, %576, %577)
}

def @func_1005(%var_983: Tensor[(2, 5, 16), bool]) -> (Tensor[(2, 5, 16), bool],) {
  %578 = cast(False /* ty=bool */, dtype="bool") /* ty=bool */;
  %579 = cast(%var_983, dtype="bool") /* ty=Tensor[(2, 5, 16), bool] */;
  %580 = logical_and(%578, %579) /* ty=Tensor[(2, 5, 16), bool] */;
  (%580,)
}

def @func_1044(%var_1010: bool) -> (Tensor[(8, 15, 6), bool], Tensor[(10, 4, 2), float64], Tensor[(80), bool]) {
  %581 = cast(%var_1010, dtype="bool") /* ty=bool */;
  %582 = cast(meta[relay.Constant][47] /* ty=Tensor[(8, 15, 6), bool] */, dtype="bool") /* ty=Tensor[(8, 15, 6), bool] */;
  %583 = cast(meta[relay.Constant][48] /* ty=Tensor[(80), bool] */, dtype="bool") /* ty=Tensor[(80), bool] */;
  %584 = reshape(%583, newshape=[10, 4, 2]) /* ty=Tensor[(10, 4, 2), bool] */;
  %585 = @func_312(%584) /* ty=(Tensor[(10, 4, 2), bool], Tensor[(10, 4, 2), float64]) */;
  %586 = logical_and(%581, %582) /* ty=Tensor[(8, 15, 6), bool] */;
  %587 = %585.1;
  (%586, %587, meta[relay.Constant][48] /* ty=Tensor[(80), bool] */)
}

def @func_5388(%var_5329: Tensor[(13, 2, 5), float64], %var_5351: Tensor[(2816), float64], %var_5375: Tensor[(390), float64], %var_5383: Tensor[(1, 450), float64]) -> (Tensor[(13, 2, 5), bool], Tensor[(11, 16, 16), float64], Tensor[(2816), float64], Tensor[(13, 2, 5), float64], Tensor[(13, 3, 10), float64], Tensor[(390), float64], Tensor[(9, 14, 12), uint16], Tensor[(2925), float64], Tensor[(168), uint16], Tensor[(1, 450), float64]) {
  %588 = cast(%var_5329, dtype="float64") /* ty=Tensor[(13, 2, 5), float64] */;
  %589 = tan(%588) /* ty=Tensor[(13, 2, 5), float64] */;
  %590 = cast(%var_5329, dtype="bool") /* ty=Tensor[(13, 2, 5), bool] */;
  %591 = shape_of(%589, dtype="int32") /* ty=Tensor[(3), int32] */;
  %592 = cast(%589, dtype="bool") /* ty=Tensor[(13, 2, 5), bool] */;
  %593 = dyn.reshape(%590, %591, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %594 = cast(%var_5351, dtype="float64") /* ty=Tensor[(2816), float64] */;
  %595 = reshape(%594, newshape=[11, 16, 16]) /* ty=Tensor[(11, 16, 16), float64] */;
  %596 = @func_1725(%595) /* ty=(Tensor[(11, 16, 16), float64],) */;
  %597 = cast(%589, dtype="float32") /* ty=Tensor[(13, 2, 5), float32] */;
  %598 = atanh(%597) /* ty=Tensor[(13, 2, 5), float32] */;
  %599 = cast(%598, dtype="float64") /* ty=Tensor[(13, 2, 5), float64] */;
  %600 = cast(%var_5375, dtype="float64") /* ty=Tensor[(390), float64] */;
  %601 = cast(%var_5375, dtype="float64") /* ty=Tensor[(390), float64] */;
  %602 = reshape(%600, newshape=[13, 3, 10]) /* ty=Tensor[(13, 3, 10), float64] */;
  %603 = reshape(%601, newshape=[13, 3, 10]) /* ty=Tensor[(13, 3, 10), float64] */;
  %604 = @func_3575(%602, %603) /* ty=(Tensor[(13, 3, 10), float64], Tensor[(10, 4, 9), int64], Tensor[(360, 1), float32]) */;
  %605 = cast(meta[relay.Constant][49] /* ty=Tensor[(2925), float64] */, dtype="float64") /* ty=Tensor[(2925), float64] */;
  %606 = cast(meta[relay.Constant][50] /* ty=Tensor[(168), uint16] */, dtype="uint16") /* ty=Tensor[(168), uint16] */;
  %607 = cast(%var_5383, dtype="float64") /* ty=Tensor[(1, 450), float64] */;
  %608 = reshape(%605, newshape=[13, 15, 15]) /* ty=Tensor[(13, 15, 15), float64] */;
  %609 = reshape(%606, newshape=[84, 2]) /* ty=Tensor[(84, 2), uint16] */;
  %610 = reshape(%607, newshape=[450]) /* ty=Tensor[(450), float64] */;
  %611 = @func_4996(%608, %609, %610) /* ty=(Tensor[(9, 14, 12), uint16], Tensor[(84, 2), uint16], Tensor[(126, 12), uint16], Tensor[(13, 15, 15), float64], Tensor[(10, 15, 3), int8], Tensor[(450), float64], Tensor[(13, 15, 15), float32], Tensor[(13, 15, 15), float64]) */;
  %612 = greater(%592, %593) /* ty=Tensor[(13, 2, 5), bool] */;
  %613 = %596.0;
  %614 = asinh(%599) /* ty=Tensor[(13, 2, 5), float64] */;
  %615 = %604.0;
  %616 = %611.0;
  (%612, %613, %var_5351, %614, %615, %var_5375, %616, meta[relay.Constant][49] /* ty=Tensor[(2925), float64] */, meta[relay.Constant][50] /* ty=Tensor[(168), uint16] */, %var_5383)
}

def @func_9485(%var_9390: Tensor[(10, 2, 10), float32]) -> (Tensor[(6, 3), float64], Tensor[(11, 8, 5), float32], Tensor[(55), float32], Tensor[(6, 3), float64], Tensor[(54), int32], Tensor[(8, 70), float32], Tensor[(54), int32], Tensor[(64, 44), float64], Tensor[(11, 16, 16), float64], Tensor[(10, 2, 10), float64]) {
  %617 = @func_8931() /* ty=(Tensor[(6, 3), float64],) */;
  %618 = cast(meta[relay.Constant][51] /* ty=Tensor[(55), float32] */, dtype="float32") /* ty=Tensor[(55), float32] */;
  %619 = reshape(%618, newshape=[11, 1, 5]) /* ty=Tensor[(11, 1, 5), float32] */;
  %620 = @func_5310(%619) /* ty=(Tensor[(11, 8, 5), float32],) */;
  %621 = @func_8931() /* ty=(Tensor[(6, 3), float64],) */;
  %622 = cast(meta[relay.Constant][52] /* ty=Tensor[(8, 70), float32] */, dtype="float32") /* ty=Tensor[(8, 70), float32] */;
  %623 = cast(meta[relay.Constant][53] /* ty=Tensor[(54), int32] */, dtype="int32") /* ty=Tensor[(54), int32] */;
  %624 = cast(meta[relay.Constant][54] /* ty=Tensor[(64, 44), float64] */, dtype="float64") /* ty=Tensor[(64, 44), float64] */;
  %625 = reshape(%622, newshape=[16, 7, 5]) /* ty=Tensor[(16, 7, 5), float32] */;
  %626 = reshape(%623, newshape=[54]) /* ty=Tensor[(54), int32] */;
  %627 = reshape(%624, newshape=[2816]) /* ty=Tensor[(2816), float64] */;
  %628 = @func_8163(%625, %626, %627) /* ty=(Tensor[(450), uint64], Tensor[(54), int32], Tensor[(390), int8], Tensor[(160), bool], Tensor[(13, 2, 5), float64], Tensor[(130), float64], Tensor[(2816), float64], Tensor[(16, 7, 5), uint8], Tensor[(16, 7, 5), float32]) */;
  %629 = cast(meta[relay.Constant][54] /* ty=Tensor[(64, 44), float64] */, dtype="float64") /* ty=Tensor[(64, 44), float64] */;
  %630 = reshape(%629, newshape=[11, 16, 16]) /* ty=Tensor[(11, 16, 16), float64] */;
  %631 = @func_1725(%630) /* ty=(Tensor[(11, 16, 16), float64],) */;
  %632 = cast(%var_9390, dtype="float32") /* ty=Tensor[(10, 2, 10), float32] */;
  %633 = asinh(%632) /* ty=Tensor[(10, 2, 10), float32] */;
  %634 = cast(%633, dtype="float64") /* ty=Tensor[(10, 2, 10), float64] */;
  %635 = %617.0;
  %636 = %620.0;
  %637 = %621.0;
  %638 = %628.1;
  %639 = %631.0;
  %640 = sinh(%634) /* ty=Tensor[(10, 2, 10), float64] */;
  (%635, %636, meta[relay.Constant][51] /* ty=Tensor[(55), float32] */, %637, %638, meta[relay.Constant][52] /* ty=Tensor[(8, 70), float32] */, meta[relay.Constant][53] /* ty=Tensor[(54), int32] */, meta[relay.Constant][54] /* ty=Tensor[(64, 44), float64] */, %639, %640)
}

def @func_8027(%var_7996: Tensor[(11, 8, 5), float64], %var_8021: Tensor[(168), int16]) -> (Tensor[(11, 8, 5), float64], Tensor[(2, 40), bool], float64, Tensor[(168), int16]) {
  %641 = cast(%var_7996, dtype="float64") /* ty=Tensor[(11, 8, 5), float64] */;
  %642 = cast(-0.960277f64 /* ty=float64 */, dtype="float64") /* ty=float64 */;
  %643 = cast(%var_8021, dtype="int16") /* ty=Tensor[(168), int16] */;
  %644 = reshape(%642, newshape=[]) /* ty=float64 */;
  %645 = reshape(%643, newshape=[168]) /* ty=Tensor[(168), int16] */;
  %646 = @func_3880(%644, %645) /* ty=(Tensor[(7, 11), float64], Tensor[(2, 40), bool], Tensor[(168), int16]) */;
  %647 = log2(%641) /* ty=Tensor[(11, 8, 5), float64] */;
  %648 = %646.1;
  (%647, %648, -0.960277f64 /* ty=float64 */, %var_8021)
}

def @func_6571(%var_6557: Tensor[(16, 3, 6), float64]) -> (Tensor[(16, 3, 6), float64],) {
  %649 = cast(%var_6557, dtype="float64") /* ty=Tensor[(16, 3, 6), float64] */;
  %650 = asinh(%649) /* ty=Tensor[(16, 3, 6), float64] */;
  (%650,)
}

def @func_7047(%var_7043: Tensor[(13, 5, 8), float32]) -> (Tensor[(13, 5, 8), float32],) {
  %651 = cast(%var_7043, dtype="float32") /* ty=Tensor[(13, 5, 8), float32] */;
  %652 = sqrt(%651) /* ty=Tensor[(13, 5, 8), float32] */;
  (%652,)
}

def @func_9752() -> Tensor[(6, 3), float64] {
  @func_9711() /* ty=Tensor[(6, 3), float64] */
}

def @func_5287(%var_5274: Tensor[(5, 1, 2), float64], %var_5282: int64, %var_5283: Tensor[(143), int64]) -> (Tensor[(5, 4, 2), float64], Tensor[(1, 13, 11), int64], int64, Tensor[(143), int64]) {
  %653 = cast(%var_5274, dtype="float64") /* ty=Tensor[(5, 1, 2), float64] */;
  %654 = cast(meta[relay.Constant][55] /* ty=Tensor[(5, 4, 2), float64] */, dtype="float64") /* ty=Tensor[(5, 4, 2), float64] */;
  %655 = cast(%var_5282, dtype="int64") /* ty=int64 */;
  %656 = cast(%var_5283, dtype="int64") /* ty=Tensor[(143), int64] */;
  %657 = cast(%var_5283, dtype="int64") /* ty=Tensor[(143), int64] */;
  %658 = reshape(%655, newshape=[]) /* ty=int64 */;
  %659 = reshape(%656, newshape=[1, 13, 11]) /* ty=Tensor[(1, 13, 11), int64] */;
  %660 = reshape(%657, newshape=[1, 13, 11]) /* ty=Tensor[(1, 13, 11), int64] */;
  %661 = @func_5084(%658, %659, %660) /* ty=(Tensor[(1, 13, 11), int64], Tensor[(?, 13, 11), uint16], Tensor[(1, 13, 11), float64], Tensor[(10, 4, 2), float64], Tensor[(1800), bool], Tensor[(80), bool], Tensor[(1, 13, 11), int32]) */;
  %662 = floor_mod(%653, %654) /* ty=Tensor[(5, 4, 2), float64] */;
  %663 = %661.0;
  (%662, %663, %var_5282, %var_5283)
}

def @func_9519(%var_9503: float64, %var_9510: Tensor[(143), int64], %var_9512: Tensor[(2816), float64]) -> (Tensor[(6, 3), float64], Tensor[(7, 11), float64], float64, Tensor[(3, 56), int16], Tensor[(2816), float64], Tensor[(120), uint16], Tensor[(600), uint16], Tensor[(143), int64], Tensor[(1800), bool], Tensor[(2816), float64]) {
  %664 = @func_9326() /* ty=(Tensor[(6, 3), float64],) */;
  %665 = cast(%var_9503, dtype="float64") /* ty=float64 */;
  %666 = cast(meta[relay.Constant][56] /* ty=Tensor[(3, 56), int16] */, dtype="int16") /* ty=Tensor[(3, 56), int16] */;
  %667 = reshape(%665, newshape=[]) /* ty=float64 */;
  %668 = reshape(%666, newshape=[168]) /* ty=Tensor[(168), int16] */;
  %669 = @func_3880(%667, %668) /* ty=(Tensor[(7, 11), float64], Tensor[(2, 40), bool], Tensor[(168), int16]) */;
  %670 = cast(meta[relay.Constant][57] /* ty=Tensor[(120), uint16] */, dtype="uint16") /* ty=Tensor[(120), uint16] */;
  %671 = cast(meta[relay.Constant][58] /* ty=Tensor[(600), uint16] */, dtype="uint16") /* ty=Tensor[(600), uint16] */;
  %672 = cast(%var_9503, dtype="int64") /* ty=int64 */;
  %673 = cast(%var_9510, dtype="int64") /* ty=Tensor[(143), int64] */;
  %674 = cast(meta[relay.Constant][59] /* ty=Tensor[(1800), bool] */, dtype="bool") /* ty=Tensor[(1800), bool] */;
  %675 = cast(%var_9512, dtype="float64") /* ty=Tensor[(2816), float64] */;
  %676 = reshape(%670, newshape=[10, 1, 12]) /* ty=Tensor[(10, 1, 12), uint16] */;
  %677 = reshape(%671, newshape=[10, 5, 12]) /* ty=Tensor[(10, 5, 12), uint16] */;
  %678 = reshape(%672, newshape=[]) /* ty=int64 */;
  %679 = reshape(%673, newshape=[143]) /* ty=Tensor[(143), int64] */;
  %680 = reshape(%674, newshape=[1800]) /* ty=Tensor[(1800), bool] */;
  %681 = reshape(%675, newshape=[2816]) /* ty=Tensor[(2816), float64] */;
  %682 = @func_5189(%676, %677, %678, %679, %680, %681) /* ty=(Tensor[(10, 5, 12), float32], Tensor[(?, 13, 11), uint16], int64, Tensor[(143), int64], Tensor[(10, 1, 12), float64], Tensor[(15, 8, 15), uint32], Tensor[(1800), bool], Tensor[(80), bool], Tensor[(11, 16, 16), float64], Tensor[(2816), float64], Tensor[(360, 1), float32], Tensor[(390), float64]) */;
  %683 = %664.0;
  %684 = %669.0;
  %685 = %682.9;
  (%683, %684, %var_9503, meta[relay.Constant][56] /* ty=Tensor[(3, 56), int16] */, %685, meta[relay.Constant][57] /* ty=Tensor[(120), uint16] */, meta[relay.Constant][58] /* ty=Tensor[(600), uint16] */, %var_9510, meta[relay.Constant][59] /* ty=Tensor[(1800), bool] */, %var_9512)
}

def @func_8931() -> (Tensor[(6, 3), float64],) {
  %686 = cast(meta[relay.Constant][60] /* ty=Tensor[(6, 3), float64] */, dtype="float64") /* ty=Tensor[(6, 3), float64] */;
  %687 = log(%686) /* ty=Tensor[(6, 3), float64] */;
  (%687,)
}

def @func_3880(%var_3861: float64, %var_3869: Tensor[(168), int16]) -> (Tensor[(7, 11), float64], Tensor[(2, 40), bool], Tensor[(168), int16]) {
  %688 = cast(%var_3861, dtype="float64") /* ty=float64 */;
  %689 = cast(meta[relay.Constant][61] /* ty=Tensor[(7, 11), float64] */, dtype="float64") /* ty=Tensor[(7, 11), float64] */;
  %690 = cast(%var_3869, dtype="int16") /* ty=Tensor[(168), int16] */;
  %691 = cast(%var_3869, dtype="int16") /* ty=Tensor[(168), int16] */;
  %692 = reshape(%690, newshape=[12, 2, 7]) /* ty=Tensor[(12, 2, 7), int16] */;
  %693 = reshape(%691, newshape=[12, 2, 7]) /* ty=Tensor[(12, 2, 7), int16] */;
  %694 = @func_1704(%692, %693) /* ty=(Tensor[(12, 2, 7), bool], Tensor[(10, 4, 2), float64], Tensor[(2, 40), bool]) */;
  %695 = mod(%688, %689) /* ty=Tensor[(7, 11), float64] */;
  %696 = %694.2;
  (%695, %696, %var_3869)
}

def @func_2009(%var_1984: Tensor[(10, 13, 2), float32], %var_1991: Tensor[(168), int16]) -> (Tensor[(10, 4, 2), float64], Tensor[(168), int16], Tensor[(10, 13, 2), int8]) {
  %697 = cast(%var_1991, dtype="int16") /* ty=Tensor[(168), int16] */;
  %698 = cast(%var_1991, dtype="int16") /* ty=Tensor[(168), int16] */;
  %699 = reshape(%697, newshape=[12, 2, 7]) /* ty=Tensor[(12, 2, 7), int16] */;
  %700 = reshape(%698, newshape=[12, 2, 7]) /* ty=Tensor[(12, 2, 7), int16] */;
  %701 = @func_1704(%699, %700) /* ty=(Tensor[(12, 2, 7), bool], Tensor[(10, 4, 2), float64], Tensor[(2, 40), bool]) */;
  %702 = cast(%var_1984, dtype="float32") /* ty=Tensor[(10, 13, 2), float32] */;
  %703 = erf(%702) /* ty=Tensor[(10, 13, 2), float32] */;
  %704 = cast(%var_1984, dtype="int8") /* ty=Tensor[(10, 13, 2), int8] */;
  %705 = shape_of(%703, dtype="int32") /* ty=Tensor[(3), int32] */;
  %706 = cast(%703, dtype="int8") /* ty=Tensor[(10, 13, 2), int8] */;
  %707 = dyn.reshape(%704, %705, newshape=[]) /* ty=Tensor[(?, ?, ?), int8] */;
  %708 = %701.1;
  %709 = bitwise_xor(%706, %707) /* ty=Tensor[(10, 13, 2), int8] */;
  (%708, %var_1991, %709)
}

/* For debugging purposes the metadata section has been omitted.
 * If you would like to see the full metadata section you can set the 
 * option to `True` when invoking `astext`. 
 */
===================================
==========mutated_mod==========
#[version = "0.0.5"]
def @func_1046(%var_1045: bool) -> (Tensor[(8, 15, 6), bool], Tensor[(10, 4, 2), float64], Tensor[(80), bool]) {
  %7 = fn (%var_1010: bool) -> (Tensor[(8, 15, 6), bool], Tensor[(10, 4, 2), float64], Tensor[(80), bool]) {
    %0 = cast(%var_1010, dtype="bool") /* ty=bool */;
    %1 = cast(meta[relay.Constant][0] /* ty=Tensor[(8, 15, 6), bool] */, dtype="bool") /* ty=Tensor[(8, 15, 6), bool] */;
    %2 = cast(meta[relay.Constant][1] /* ty=Tensor[(80), bool] */, dtype="bool") /* ty=Tensor[(80), bool] */;
    %3 = reshape(%2, newshape=[10, 4, 2]) /* ty=Tensor[(10, 4, 2), bool] */;
    %4 = @func_312(%3) /* ty=(Tensor[(10, 4, 2), bool], Tensor[(10, 4, 2), float64]) */;
    %5 = logical_and(%0, %1) /* ty=Tensor[(8, 15, 6), bool] */;
    %6 = %4.1;
    (%5, %6, meta[relay.Constant][1] /* ty=Tensor[(80), bool] */)
  };
  %7(%var_1045) /* ty=(Tensor[(8, 15, 6), bool], Tensor[(10, 4, 2), float64], Tensor[(80), bool]) */
}

def @func_9828() -> (Tensor[(6, 3), float64],) {
  %8 = @func_9711() /* ty=Tensor[(6, 3), float64] */;
  (%8,)
}

def @func_7969(%var_7917: Tensor[(7, 10, 16), float64], %var_7936: Tensor[(1344), float32]) -> (Tensor[(11, 16, 16), float64], Tensor[(1800), bool], Tensor[(20, 4), bool], Tensor[(2816), float64], Tensor[(16, 14, 6), float32], Tensor[(1344), float32], Tensor[(7, 10, 16), bool]) {
  %9 = cast(meta[relay.Constant][2] /* ty=Tensor[(1800), bool] */, dtype="bool") /* ty=Tensor[(1800), bool] */;
  %10 = cast(meta[relay.Constant][3] /* ty=Tensor[(20, 4), bool] */, dtype="bool") /* ty=Tensor[(20, 4), bool] */;
  %11 = cast(meta[relay.Constant][4] /* ty=Tensor[(2816), float64] */, dtype="float64") /* ty=Tensor[(2816), float64] */;
  %12 = reshape(%9, newshape=[18, 100]) /* ty=Tensor[(18, 100), bool] */;
  %13 = reshape(%10, newshape=[80]) /* ty=Tensor[(80), bool] */;
  %14 = reshape(%11, newshape=[2816]) /* ty=Tensor[(2816), float64] */;
  %15 = @func_3217(%12, %13, %14) /* ty=(Tensor[(15, 8, 15), uint32], Tensor[(18, 100), bool], Tensor[(80), bool], Tensor[(11, 16, 16), float64], Tensor[(2816), float64], Tensor[(7, 14, 12), float64], Tensor[(7, 14, 12), float64]) */;
  %16 = cast(%var_7936, dtype="float32") /* ty=Tensor[(1344), float32] */;
  %17 = reshape(%16, newshape=[16, 14, 6]) /* ty=Tensor[(16, 14, 6), float32] */;
  %18 = cast(%var_7917, dtype="float64") /* ty=Tensor[(7, 10, 16), float64] */;
  %19 = asinh(%18) /* ty=Tensor[(7, 10, 16), float64] */;
  %20 = cast(%var_7917, dtype="bool") /* ty=Tensor[(7, 10, 16), bool] */;
  %21 = shape_of(%19, dtype="int32") /* ty=Tensor[(3), int32] */;
  %22 = cast(%19, dtype="bool") /* ty=Tensor[(7, 10, 16), bool] */;
  %23 = dyn.reshape(%20, %21, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %24 = %15.3;
  %25 = @func_6357(%17) /* ty=Tensor[(16, 14, 6), float32] */;
  %26 = less(%22, %23) /* ty=Tensor[(7, 10, 16), bool] */;
  (%24, meta[relay.Constant][2] /* ty=Tensor[(1800), bool] */, meta[relay.Constant][3] /* ty=Tensor[(20, 4), bool] */, meta[relay.Constant][4] /* ty=Tensor[(2816), float64] */, %25, %var_7936, %26)
}

def @func_9485(%var_9390: Tensor[(10, 2, 10), float32]) -> (Tensor[(6, 3), float64], Tensor[(11, 8, 5), float32], Tensor[(55), float32], Tensor[(6, 3), float64], Tensor[(54), int32], Tensor[(8, 70), float32], Tensor[(54), int32], Tensor[(64, 44), float64], Tensor[(11, 16, 16), float64], Tensor[(10, 2, 10), float64]) {
  %27 = @func_8931() /* ty=(Tensor[(6, 3), float64],) */;
  %28 = cast(meta[relay.Constant][5] /* ty=Tensor[(55), float32] */, dtype="float32") /* ty=Tensor[(55), float32] */;
  %29 = reshape(%28, newshape=[11, 1, 5]) /* ty=Tensor[(11, 1, 5), float32] */;
  %30 = @func_5310(%29) /* ty=(Tensor[(11, 8, 5), float32],) */;
  %31 = @func_8931() /* ty=(Tensor[(6, 3), float64],) */;
  %32 = cast(meta[relay.Constant][6] /* ty=Tensor[(8, 70), float32] */, dtype="float32") /* ty=Tensor[(8, 70), float32] */;
  %33 = cast(meta[relay.Constant][7] /* ty=Tensor[(54), int32] */, dtype="int32") /* ty=Tensor[(54), int32] */;
  %34 = cast(meta[relay.Constant][8] /* ty=Tensor[(64, 44), float64] */, dtype="float64") /* ty=Tensor[(64, 44), float64] */;
  %35 = reshape(%32, newshape=[16, 7, 5]) /* ty=Tensor[(16, 7, 5), float32] */;
  %36 = reshape(%33, newshape=[54]) /* ty=Tensor[(54), int32] */;
  %37 = reshape(%34, newshape=[2816]) /* ty=Tensor[(2816), float64] */;
  %38 = @func_8163(%35, %36, %37) /* ty=(Tensor[(450), uint64], Tensor[(54), int32], Tensor[(390), int8], Tensor[(160), bool], Tensor[(13, 2, 5), float64], Tensor[(130), float64], Tensor[(2816), float64], Tensor[(16, 7, 5), uint8], Tensor[(16, 7, 5), float32]) */;
  %39 = cast(meta[relay.Constant][8] /* ty=Tensor[(64, 44), float64] */, dtype="float64") /* ty=Tensor[(64, 44), float64] */;
  %40 = reshape(%39, newshape=[11, 16, 16]) /* ty=Tensor[(11, 16, 16), float64] */;
  %41 = @func_1725(%40) /* ty=(Tensor[(11, 16, 16), float64],) */;
  %42 = cast(%var_9390, dtype="float32") /* ty=Tensor[(10, 2, 10), float32] */;
  %43 = asinh(%42) /* ty=Tensor[(10, 2, 10), float32] */;
  %44 = cast(%43, dtype="float64") /* ty=Tensor[(10, 2, 10), float64] */;
  %45 = %27.0;
  %46 = %30.0;
  %47 = %31.0;
  %48 = %38.1;
  %49 = %41.0;
  %50 = sinh(%44) /* ty=Tensor[(10, 2, 10), float64] */;
  (%45, %46, meta[relay.Constant][5] /* ty=Tensor[(55), float32] */, %47, %48, meta[relay.Constant][6] /* ty=Tensor[(8, 70), float32] */, meta[relay.Constant][7] /* ty=Tensor[(54), int32] */, meta[relay.Constant][8] /* ty=Tensor[(64, 44), float64] */, %49, %50)
}

def @func_5847(%var_5824: Tensor[(15, 10, 12), float32], %var_5841: Tensor[(2, 80), bool]) -> (Tensor[(15, 10, 12), int16], Tensor[(2, 5, 16), bool], Tensor[(2, 80), bool], Tensor[(11, 8, 5), float32], Tensor[(55), float32]) {
  %51 = cast(%var_5824, dtype="float32") /* ty=Tensor[(15, 10, 12), float32] */;
  %52 = exp(%51) /* ty=Tensor[(15, 10, 12), float32] */;
  %53 = cast(%52, dtype="float32") /* ty=Tensor[(15, 10, 12), float32] */;
  %54 = acos(%53) /* ty=Tensor[(15, 10, 12), float32] */;
  %55 = cast(%54, dtype="int16") /* ty=Tensor[(15, 10, 12), int16] */;
  %56 = shape_of(%52, dtype="int32") /* ty=Tensor[(3), int32] */;
  %57 = cast(%52, dtype="int16") /* ty=Tensor[(15, 10, 12), int16] */;
  %58 = dyn.reshape(%55, %56, newshape=[]) /* ty=Tensor[(?, ?, ?), int16] */;
  %59 = cast(%var_5841, dtype="bool") /* ty=Tensor[(2, 80), bool] */;
  %60 = reshape(%59, newshape=[2, 5, 16]) /* ty=Tensor[(2, 5, 16), bool] */;
  %61 = @func_1005(%60) /* ty=(Tensor[(2, 5, 16), bool],) */;
  %62 = cast(meta[relay.Constant][9] /* ty=Tensor[(55), float32] */, dtype="float32") /* ty=Tensor[(55), float32] */;
  %63 = reshape(%62, newshape=[11, 1, 5]) /* ty=Tensor[(11, 1, 5), float32] */;
  %64 = @func_5310(%63) /* ty=(Tensor[(11, 8, 5), float32],) */;
  %65 = left_shift(%57, %58) /* ty=Tensor[(15, 10, 12), int16] */;
  %66 = %61.0;
  %67 = %64.0;
  (%65, %66, %var_5841, %67, meta[relay.Constant][9] /* ty=Tensor[(55), float32] */)
}

def @func_1704(%var_1681: Tensor[(12, 2, 7), int16], %var_1682: Tensor[(12, 2, 7), int16]) -> (Tensor[(12, 2, 7), bool], Tensor[(10, 4, 2), float64], Tensor[(2, 40), bool]) {
  %68 = cast(%var_1682, dtype="bool") /* ty=Tensor[(12, 2, 7), bool] */;
  %69 = shape_of(%var_1681, dtype="int32") /* ty=Tensor[(3), int32] */;
  %70 = cast(%var_1681, dtype="bool") /* ty=Tensor[(12, 2, 7), bool] */;
  %71 = dyn.reshape(%68, %69, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %72 = cast(meta[relay.Constant][10] /* ty=Tensor[(2, 40), bool] */, dtype="bool") /* ty=Tensor[(2, 40), bool] */;
  %73 = reshape(%72, newshape=[10, 4, 2]) /* ty=Tensor[(10, 4, 2), bool] */;
  %74 = @func_312(%73) /* ty=(Tensor[(10, 4, 2), bool], Tensor[(10, 4, 2), float64]) */;
  %75 = less_equal(%70, %71) /* ty=Tensor[(12, 2, 7), bool] */;
  %76 = %74.1;
  (%75, %76, meta[relay.Constant][10] /* ty=Tensor[(2, 40), bool] */)
}

def @func_7047(%var_7043: Tensor[(13, 5, 8), float32]) -> (Tensor[(13, 5, 8), float32],) {
  %77 = cast(%var_7043, dtype="float32") /* ty=Tensor[(13, 5, 8), float32] */;
  %78 = sqrt(%77) /* ty=Tensor[(13, 5, 8), float32] */;
  (%78,)
}

def @func_9233(%var_9231: Tensor[(10), float64], %var_9232: Tensor[(143), int64]) -> (Tensor[(6, 3), float64], Tensor[(9, 14, 12), uint16], Tensor[(2925), float64], Tensor[(168), uint16], Tensor[(2, 15, 13), int8], Tensor[(390), int8], Tensor[(1, 450), float32], Tensor[(143), int64], Tensor[(10), float64], Tensor[(143), int64]) {
  %105 = fn (%var_9219: Tensor[(10), float64], %var_9220: Tensor[(143), int64]) -> (Tensor[(6, 3), float64], Tensor[(9, 14, 12), uint16], Tensor[(2925), float64], Tensor[(168), uint16], Tensor[(2, 15, 13), int8], Tensor[(390), int8], Tensor[(1, 450), float32], Tensor[(143), int64], Tensor[(10), float64], Tensor[(143), int64]) {
    %79 = @func_8931() /* ty=(Tensor[(6, 3), float64],) */;
    %80 = cast(meta[relay.Constant][11] /* ty=Tensor[(2925), float64] */, dtype="float64") /* ty=Tensor[(2925), float64] */;
    %81 = cast(meta[relay.Constant][12] /* ty=Tensor[(168), uint16] */, dtype="uint16") /* ty=Tensor[(168), uint16] */;
    %82 = cast(meta[relay.Constant][13] /* ty=Tensor[(1, 450), float64] */, dtype="float64") /* ty=Tensor[(1, 450), float64] */;
    %83 = reshape(%80, newshape=[13, 15, 15]) /* ty=Tensor[(13, 15, 15), float64] */;
    %84 = reshape(%81, newshape=[84, 2]) /* ty=Tensor[(84, 2), uint16] */;
    %85 = reshape(%82, newshape=[450]) /* ty=Tensor[(450), float64] */;
    %86 = @func_4996(%83, %84, %85) /* ty=(Tensor[(9, 14, 12), uint16], Tensor[(84, 2), uint16], Tensor[(126, 12), uint16], Tensor[(13, 15, 15), float64], Tensor[(10, 15, 3), int8], Tensor[(450), float64], Tensor[(13, 15, 15), float32], Tensor[(13, 15, 15), float64]) */;
    %87 = cast(meta[relay.Constant][14] /* ty=int8 */, dtype="int8") /* ty=int8 */;
    %88 = cast(meta[relay.Constant][15] /* ty=Tensor[(390), int8] */, dtype="int8") /* ty=Tensor[(390), int8] */;
    %89 = reshape(%87, newshape=[]) /* ty=int8 */;
    %90 = reshape(%88, newshape=[2, 15, 13]) /* ty=Tensor[(2, 15, 13), int8] */;
    %91 = cast(meta[relay.Constant][13] /* ty=Tensor[(1, 450), float64] */, dtype="float32") /* ty=Tensor[(1, 450), float32] */;
    %92 = cast(meta[relay.Constant][14] /* ty=int8 */, dtype="float32") /* ty=float32 */;
    %93 = cast(%var_9219, dtype="float64") /* ty=Tensor[(10), float64] */;
    %94 = cast(meta[relay.Constant][14] /* ty=int8 */, dtype="int64") /* ty=int64 */;
    %95 = cast(%var_9220, dtype="int64") /* ty=Tensor[(143), int64] */;
    %96 = reshape(%93, newshape=[5, 1, 2]) /* ty=Tensor[(5, 1, 2), float64] */;
    %97 = reshape(%94, newshape=[]) /* ty=int64 */;
    %98 = reshape(%95, newshape=[143]) /* ty=Tensor[(143), int64] */;
    %99 = @func_5287(%96, %97, %98) /* ty=(Tensor[(5, 4, 2), float64], Tensor[(1, 13, 11), int64], int64, Tensor[(143), int64]) */;
    %100 = %79.0;
    %101 = %86.0;
    %102 = @func_3757(%89, %90) /* ty=Tensor[(2, 15, 13), int8] */;
    %103 = floor_mod(%91, %92) /* ty=Tensor[(1, 450), float32] */;
    %104 = %99.3;
    (%100, %101, meta[relay.Constant][11] /* ty=Tensor[(2925), float64] */, meta[relay.Constant][12] /* ty=Tensor[(168), uint16] */, %102, meta[relay.Constant][15] /* ty=Tensor[(390), int8] */, %103, %104, %var_9219, %var_9220)
  };
  %105(%var_9231, %var_9232) /* ty=(Tensor[(6, 3), float64], Tensor[(9, 14, 12), uint16], Tensor[(2925), float64], Tensor[(168), uint16], Tensor[(2, 15, 13), int8], Tensor[(390), int8], Tensor[(1, 450), float32], Tensor[(143), int64], Tensor[(10), float64], Tensor[(143), int64]) */
}

def @func_6574(%var_6572: Tensor[(16, 3, 6), float64]) -> (Tensor[(16, 3, 6), float64],) {
  @func_6571(%var_6572) /* ty=(Tensor[(16, 3, 6), float64],) */
}

def @func_1708(%var_1706: Tensor[(12, 2, 7), int16], %var_1707: Tensor[(12, 2, 7), int16]) -> (Tensor[(12, 2, 7), bool], Tensor[(10, 4, 2), float64], Tensor[(2, 40), bool]) {
  @func_1704(%var_1706, %var_1707) /* ty=(Tensor[(12, 2, 7), bool], Tensor[(10, 4, 2), float64], Tensor[(2, 40), bool]) */
}

def @func_9585(%var_9582: Tensor[(7, 15, 12), int16], %var_9583: Tensor[(7, 15, 12), int16], %var_9584: Tensor[(7, 15, 12), int16]) -> (Tensor[(7, 15, 12), bool], Tensor[(7, 15, 12), bool]) {
  %121 = fn (%var_9559: Tensor[(7, 15, 12), int16], %var_9560: Tensor[(7, 15, 12), int16], %var_9577: Tensor[(7, 15, 12), int16]) -> (Tensor[(7, 15, 12), bool], Tensor[(7, 15, 12), bool]) {
    %106 = cast(%var_9560, dtype="int16") /* ty=Tensor[(7, 15, 12), int16] */;
    %107 = shape_of(%var_9559, dtype="int32") /* ty=Tensor[(3), int32] */;
    %108 = cast(%var_9559, dtype="int16") /* ty=Tensor[(7, 15, 12), int16] */;
    %109 = dyn.reshape(%106, %107, newshape=[]) /* ty=Tensor[(?, ?, ?), int16] */;
    %110 = minimum(%108, %109) /* ty=Tensor[(7, 15, 12), int16] */;
    %111 = cast(%110, dtype="bool") /* ty=Tensor[(7, 15, 12), bool] */;
    %112 = shape_of(%var_9559, dtype="int32") /* ty=Tensor[(3), int32] */;
    %113 = cast(%var_9559, dtype="bool") /* ty=Tensor[(7, 15, 12), bool] */;
    %114 = dyn.reshape(%111, %112, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    %115 = cast(%var_9577, dtype="bool") /* ty=Tensor[(7, 15, 12), bool] */;
    %116 = shape_of(%var_9560, dtype="int32") /* ty=Tensor[(3), int32] */;
    %117 = cast(%var_9560, dtype="bool") /* ty=Tensor[(7, 15, 12), bool] */;
    %118 = dyn.reshape(%115, %116, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    %119 = greater_equal(%113, %114) /* ty=Tensor[(7, 15, 12), bool] */;
    %120 = logical_or(%117, %118) /* ty=Tensor[(7, 15, 12), bool] */;
    (%119, %120)
  };
  %121(%var_9582, %var_9583, %var_9584) /* ty=(Tensor[(7, 15, 12), bool], Tensor[(7, 15, 12), bool]) */
}

def @func_315(%var_313: Tensor[(10, 4, 2), bool]) -> (Tensor[(10, 4, 2), bool], Tensor[(10, 4, 2), float64]) {
  @func_312(%var_313) /* ty=(Tensor[(10, 4, 2), bool], Tensor[(10, 4, 2), float64]) */
}

def @func_1005(%var_983: Tensor[(2, 5, 16), bool]) -> (Tensor[(2, 5, 16), bool],) {
  %122 = cast(False /* ty=bool */, dtype="bool") /* ty=bool */;
  %123 = cast(%var_983, dtype="bool") /* ty=Tensor[(2, 5, 16), bool] */;
  %124 = logical_and(%122, %123) /* ty=Tensor[(2, 5, 16), bool] */;
  (%124,)
}

def @func_7107(%var_7106: Tensor[(2, 4, 10), float64]) -> Tensor[(2, 4, 10), float64] {
  %126 = fn (%var_7100: Tensor[(2, 4, 10), float64]) -> Tensor[(2, 4, 10), float64] {
    %125 = cast(%var_7100, dtype="float64") /* ty=Tensor[(2, 4, 10), float64] */;
    atanh(%125) /* ty=Tensor[(2, 4, 10), float64] */
  };
  %126(%var_7106) /* ty=Tensor[(2, 4, 10), float64] */
}

def @func_5393(%var_5389: Tensor[(13, 2, 5), float64], %var_5390: Tensor[(2816), float64], %var_5391: Tensor[(390), float64], %var_5392: Tensor[(1, 450), float64]) -> (Tensor[(13, 2, 5), bool], Tensor[(11, 16, 16), float64], Tensor[(2816), float64], Tensor[(13, 2, 5), float64], Tensor[(13, 3, 10), float64], Tensor[(390), float64], Tensor[(9, 14, 12), uint16], Tensor[(2925), float64], Tensor[(168), uint16], Tensor[(1, 450), float64]) {
  %156 = fn (%var_5329: Tensor[(13, 2, 5), float64], %var_5351: Tensor[(2816), float64], %var_5375: Tensor[(390), float64], %var_5383: Tensor[(1, 450), float64]) -> (Tensor[(13, 2, 5), bool], Tensor[(11, 16, 16), float64], Tensor[(2816), float64], Tensor[(13, 2, 5), float64], Tensor[(13, 3, 10), float64], Tensor[(390), float64], Tensor[(9, 14, 12), uint16], Tensor[(2925), float64], Tensor[(168), uint16], Tensor[(1, 450), float64]) {
    %127 = cast(%var_5329, dtype="float64") /* ty=Tensor[(13, 2, 5), float64] */;
    %128 = tan(%127) /* ty=Tensor[(13, 2, 5), float64] */;
    %129 = cast(%var_5329, dtype="bool") /* ty=Tensor[(13, 2, 5), bool] */;
    %130 = shape_of(%128, dtype="int32") /* ty=Tensor[(3), int32] */;
    %131 = cast(%128, dtype="bool") /* ty=Tensor[(13, 2, 5), bool] */;
    %132 = dyn.reshape(%129, %130, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    %133 = cast(%var_5351, dtype="float64") /* ty=Tensor[(2816), float64] */;
    %134 = reshape(%133, newshape=[11, 16, 16]) /* ty=Tensor[(11, 16, 16), float64] */;
    %135 = @func_1725(%134) /* ty=(Tensor[(11, 16, 16), float64],) */;
    %136 = cast(%128, dtype="float32") /* ty=Tensor[(13, 2, 5), float32] */;
    %137 = atanh(%136) /* ty=Tensor[(13, 2, 5), float32] */;
    %138 = cast(%137, dtype="float64") /* ty=Tensor[(13, 2, 5), float64] */;
    %139 = cast(%var_5375, dtype="float64") /* ty=Tensor[(390), float64] */;
    %140 = cast(%var_5375, dtype="float64") /* ty=Tensor[(390), float64] */;
    %141 = reshape(%139, newshape=[13, 3, 10]) /* ty=Tensor[(13, 3, 10), float64] */;
    %142 = reshape(%140, newshape=[13, 3, 10]) /* ty=Tensor[(13, 3, 10), float64] */;
    %143 = @func_3575(%141, %142) /* ty=(Tensor[(13, 3, 10), float64], Tensor[(10, 4, 9), int64], Tensor[(360, 1), float32]) */;
    %144 = cast(meta[relay.Constant][16] /* ty=Tensor[(2925), float64] */, dtype="float64") /* ty=Tensor[(2925), float64] */;
    %145 = cast(meta[relay.Constant][17] /* ty=Tensor[(168), uint16] */, dtype="uint16") /* ty=Tensor[(168), uint16] */;
    %146 = cast(%var_5383, dtype="float64") /* ty=Tensor[(1, 450), float64] */;
    %147 = reshape(%144, newshape=[13, 15, 15]) /* ty=Tensor[(13, 15, 15), float64] */;
    %148 = reshape(%145, newshape=[84, 2]) /* ty=Tensor[(84, 2), uint16] */;
    %149 = reshape(%146, newshape=[450]) /* ty=Tensor[(450), float64] */;
    %150 = @func_4996(%147, %148, %149) /* ty=(Tensor[(9, 14, 12), uint16], Tensor[(84, 2), uint16], Tensor[(126, 12), uint16], Tensor[(13, 15, 15), float64], Tensor[(10, 15, 3), int8], Tensor[(450), float64], Tensor[(13, 15, 15), float32], Tensor[(13, 15, 15), float64]) */;
    %151 = greater(%131, %132) /* ty=Tensor[(13, 2, 5), bool] */;
    %152 = %135.0;
    %153 = asinh(%138) /* ty=Tensor[(13, 2, 5), float64] */;
    %154 = %143.0;
    %155 = %150.0;
    (%151, %152, %var_5351, %153, %154, %var_5375, %155, meta[relay.Constant][16] /* ty=Tensor[(2925), float64] */, meta[relay.Constant][17] /* ty=Tensor[(168), uint16] */, %var_5383)
  };
  %156(%var_5389, %var_5390, %var_5391, %var_5392) /* ty=(Tensor[(13, 2, 5), bool], Tensor[(11, 16, 16), float64], Tensor[(2816), float64], Tensor[(13, 2, 5), float64], Tensor[(13, 3, 10), float64], Tensor[(390), float64], Tensor[(9, 14, 12), uint16], Tensor[(2925), float64], Tensor[(168), uint16], Tensor[(1, 450), float64]) */
}

def @func_9328() -> (Tensor[(6, 3), float64],) {
  @func_9326() /* ty=(Tensor[(6, 3), float64],) */
}

def @func_6650(%var_6648: Tensor[(3, 4, 16), int8], %var_6649: Tensor[(3, 4, 16), int8]) -> Tensor[(3, 4, 16), int8] {
  %161 = fn (%var_6642: Tensor[(3, 4, 16), int8], %var_6643: Tensor[(3, 4, 16), int8]) -> Tensor[(3, 4, 16), int8] {
    %157 = cast(%var_6643, dtype="int8") /* ty=Tensor[(3, 4, 16), int8] */;
    %158 = shape_of(%var_6642, dtype="int32") /* ty=Tensor[(3), int32] */;
    %159 = cast(%var_6642, dtype="int8") /* ty=Tensor[(3, 4, 16), int8] */;
    %160 = dyn.reshape(%157, %158, newshape=[]) /* ty=Tensor[(?, ?, ?), int8] */;
    bitwise_xor(%159, %160) /* ty=Tensor[(3, 4, 16), int8] */
  };
  %161(%var_6648, %var_6649) /* ty=Tensor[(3, 4, 16), int8] */
}

def @func_5313(%var_5311: Tensor[(11, 1, 5), float32]) -> (Tensor[(11, 8, 5), float32],) {
  @func_5310(%var_5311) /* ty=(Tensor[(11, 8, 5), float32],) */
}

def @func_8030(%var_8028: Tensor[(11, 8, 5), float64], %var_8029: Tensor[(168), int16]) -> (Tensor[(11, 8, 5), float64], Tensor[(2, 40), bool], float64, Tensor[(168), int16]) {
  %170 = fn (%var_7996: Tensor[(11, 8, 5), float64], %var_8021: Tensor[(168), int16]) -> (Tensor[(11, 8, 5), float64], Tensor[(2, 40), bool], float64, Tensor[(168), int16]) {
    %162 = cast(%var_7996, dtype="float64") /* ty=Tensor[(11, 8, 5), float64] */;
    %163 = cast(-0.960277f64 /* ty=float64 */, dtype="float64") /* ty=float64 */;
    %164 = cast(%var_8021, dtype="int16") /* ty=Tensor[(168), int16] */;
    %165 = reshape(%163, newshape=[]) /* ty=float64 */;
    %166 = reshape(%164, newshape=[168]) /* ty=Tensor[(168), int16] */;
    %167 = @func_3880(%165, %166) /* ty=(Tensor[(7, 11), float64], Tensor[(2, 40), bool], Tensor[(168), int16]) */;
    %168 = log2(%162) /* ty=Tensor[(11, 8, 5), float64] */;
    %169 = %167.1;
    (%168, %169, -0.960277f64 /* ty=float64 */, %var_8021)
  };
  %170(%var_8028, %var_8029) /* ty=(Tensor[(11, 8, 5), float64], Tensor[(2, 40), bool], float64, Tensor[(168), int16]) */
}

def @func_9173(%var_9172: Tensor[(160), bool]) -> (Tensor[(6, 3), float64], Tensor[(160), bool], Tensor[(2, 5, 16), float32]) {
  %184 = fn (%var_9155: Tensor[(160), bool]) -> (Tensor[(6, 3), float64], Tensor[(160), bool], Tensor[(2, 5, 16), float32]) {
    %171 = @func_8931() /* ty=(Tensor[(6, 3), float64],) */;
    %172 = cast(%var_9155, dtype="bool") /* ty=Tensor[(160), bool] */;
    %173 = reshape(%172, newshape=[2, 5, 16]) /* ty=Tensor[(2, 5, 16), bool] */;
    %174 = @func_1005(%173) /* ty=(Tensor[(2, 5, 16), bool],) */;
    %175 = %174.0;
    %176 = cast(meta[relay.Constant][18] /* ty=Tensor[(2, 5, 16), bool] */, dtype="int64") /* ty=Tensor[(2, 5, 16), int64] */;
    %177 = shape_of(%175, dtype="int32") /* ty=Tensor[(3), int32] */;
    %178 = cast(%175, dtype="int64") /* ty=Tensor[(2, 5, 16), int64] */;
    %179 = dyn.reshape(%176, %177, newshape=[]) /* ty=Tensor[(?, ?, ?), int64] */;
    %180 = logical_xor(%178, %179) /* ty=Tensor[(2, 5, 16), int64] */;
    %181 = cast(%180, dtype="float32") /* ty=Tensor[(2, 5, 16), float32] */;
    %182 = %171.0;
    %183 = cosh(%181) /* ty=Tensor[(2, 5, 16), float32] */;
    (%182, %var_9155, %183)
  };
  %184(%var_9172) /* ty=(Tensor[(6, 3), float64], Tensor[(160), bool], Tensor[(2, 5, 16), float32]) */
}

def @func_8931() -> (Tensor[(6, 3), float64],) {
  %185 = cast(meta[relay.Constant][19] /* ty=Tensor[(6, 3), float64] */, dtype="float64") /* ty=Tensor[(6, 3), float64] */;
  %186 = log(%185) /* ty=Tensor[(6, 3), float64] */;
  (%186,)
}

def @func_6571(%var_6557: Tensor[(16, 3, 6), float64]) -> (Tensor[(16, 3, 6), float64],) {
  %187 = cast(%var_6557, dtype="float64") /* ty=Tensor[(16, 3, 6), float64] */;
  %188 = asinh(%187) /* ty=Tensor[(16, 3, 6), float64] */;
  (%188,)
}

def @func_8168(%var_8165: Tensor[(16, 7, 5), float32], %var_8166: Tensor[(54), int32], %var_8167: Tensor[(2816), float64]) -> (Tensor[(450), uint64], Tensor[(54), int32], Tensor[(390), int8], Tensor[(160), bool], Tensor[(13, 2, 5), float64], Tensor[(130), float64], Tensor[(2816), float64], Tensor[(16, 7, 5), uint8], Tensor[(16, 7, 5), float32]) {
  @func_8163(%var_8165, %var_8166, %var_8167) /* ty=(Tensor[(450), uint64], Tensor[(54), int32], Tensor[(390), int8], Tensor[(160), bool], Tensor[(13, 2, 5), float64], Tensor[(130), float64], Tensor[(2816), float64], Tensor[(16, 7, 5), uint8], Tensor[(16, 7, 5), float32]) */
}

def @func_9073(%var_8978: Tensor[(8, 11, 14), int8], %var_8979: Tensor[(8, 11, 14), int8]) -> (Tensor[(10, 4, 2), float64], Tensor[(8, 11, 14), float32], Tensor[(405), float64], Tensor[(2925), float64], Tensor[(450), float32], bool, Tensor[(18, 100), bool], Tensor[(6, 3), float64], Tensor[(15, 8, 15), float64]) {
  %189 = cast(meta[relay.Constant][20] /* ty=Tensor[(450), float64] */, dtype="float64") /* ty=Tensor[(450), float64] */;
  %190 = reshape(%189, newshape=[10, 15, 3]) /* ty=Tensor[(10, 15, 3), float64] */;
  %191 = @func_4013(%190) /* ty=(Tensor[(10, 15, 3), int8], Tensor[(10, 4, 2), float64], Tensor[(360), float32]) */;
  %192 = cast(%var_8979, dtype="int8") /* ty=Tensor[(8, 11, 14), int8] */;
  %193 = shape_of(%var_8978, dtype="int32") /* ty=Tensor[(3), int32] */;
  %194 = cast(%var_8978, dtype="int8") /* ty=Tensor[(8, 11, 14), int8] */;
  %195 = dyn.reshape(%192, %193, newshape=[]) /* ty=Tensor[(?, ?, ?), int8] */;
  %196 = bitwise_and(%194, %195) /* ty=Tensor[(8, 11, 14), int8] */;
  %197 = cast(%196, dtype="float32") /* ty=Tensor[(8, 11, 14), float32] */;
  %198 = cast(meta[relay.Constant][21] /* ty=Tensor[(405), float64] */, dtype="float64") /* ty=Tensor[(405), float64] */;
  %199 = cast(meta[relay.Constant][22] /* ty=Tensor[(2925), float64] */, dtype="float64") /* ty=Tensor[(2925), float64] */;
  %200 = cast(meta[relay.Constant][20] /* ty=Tensor[(450), float64] */, dtype="float64") /* ty=Tensor[(450), float64] */;
  %201 = reshape(%198, newshape=[5, 9, 9]) /* ty=Tensor[(5, 9, 9), float64] */;
  %202 = reshape(%199, newshape=[2925]) /* ty=Tensor[(2925), float64] */;
  %203 = reshape(%200, newshape=[450]) /* ty=Tensor[(450), float64] */;
  %204 = @func_5743(%201, %202, %203) /* ty=(Tensor[(5, 9, 9), float64], Tensor[(450), float64], Tensor[(2925), float64], Tensor[(84, 2), uint16], Tensor[(450), float64]) */;
  %205 = %204.1;
  %206 = cast(%205, dtype="float32") /* ty=Tensor[(450), float32] */;
  %207 = shape_of(meta[relay.Constant][20] /* ty=Tensor[(450), float64] */, dtype="int32") /* ty=Tensor[(1), int32] */;
  %208 = cast(meta[relay.Constant][20] /* ty=Tensor[(450), float64] */, dtype="float32") /* ty=Tensor[(450), float32] */;
  %209 = dyn.reshape(%206, %207, newshape=[]) /* ty=Tensor[(?), float32] */;
  %210 = @func_8931() /* ty=(Tensor[(6, 3), float64],) */;
  %211 = cast(False /* ty=bool */, dtype="bool") /* ty=bool */;
  %212 = cast(meta[relay.Constant][23] /* ty=Tensor[(18, 100), bool] */, dtype="bool") /* ty=Tensor[(18, 100), bool] */;
  %213 = cast(meta[relay.Constant][23] /* ty=Tensor[(18, 100), bool] */, dtype="bool") /* ty=Tensor[(18, 100), bool] */;
  %214 = %191.1;
  %215 = cast(%214, dtype="bool") /* ty=Tensor[(10, 4, 2), bool] */;
  %216 = cast(meta[relay.Constant][23] /* ty=Tensor[(18, 100), bool] */, dtype="float64") /* ty=Tensor[(18, 100), float64] */;
  %217 = reshape(%211, newshape=[]) /* ty=bool */;
  %218 = reshape(%212, newshape=[15, 8, 15]) /* ty=Tensor[(15, 8, 15), bool] */;
  %219 = reshape(%213, newshape=[15, 8, 15]) /* ty=Tensor[(15, 8, 15), bool] */;
  %220 = reshape(%215, newshape=[1, 80]) /* ty=Tensor[(1, 80), bool] */;
  %221 = reshape(%216, newshape=[15, 8, 15]) /* ty=Tensor[(15, 8, 15), float64] */;
  %222 = @func_956(%217, %218, %219, %220, %221) /* ty=(Tensor[(15, 8, 15), uint32], Tensor[(10, 4, 2), float64], Tensor[(1, 80), bool], Tensor[(15, 8, 15), uint64]) */;
  %223 = %222.0;
  %224 = cast(%223, dtype="float64") /* ty=Tensor[(15, 8, 15), float64] */;
  %225 = cos(%197) /* ty=Tensor[(8, 11, 14), float32] */;
  %226 = divide(%208, %209) /* ty=Tensor[(450), float32] */;
  %227 = %210.0;
  %228 = sigmoid(%224) /* ty=Tensor[(15, 8, 15), float64] */;
  (%214, %225, meta[relay.Constant][21] /* ty=Tensor[(405), float64] */, meta[relay.Constant][22] /* ty=Tensor[(2925), float64] */, %226, False /* ty=bool */, meta[relay.Constant][23] /* ty=Tensor[(18, 100), bool] */, %227, %228)
}

def @func_962(%var_957: bool, %var_958: Tensor[(15, 8, 15), bool], %var_959: Tensor[(15, 8, 15), bool], %var_960: Tensor[(1, 80), bool], %var_961: Tensor[(15, 8, 15), float64]) -> (Tensor[(15, 8, 15), uint32], Tensor[(10, 4, 2), float64], Tensor[(1, 80), bool], Tensor[(15, 8, 15), uint64]) {
  %248 = fn (%var_903: bool, %var_904: Tensor[(15, 8, 15), bool], %var_919: Tensor[(15, 8, 15), bool], %var_925: Tensor[(1, 80), bool], %var_940: Tensor[(15, 8, 15), float64]) -> (Tensor[(15, 8, 15), uint32], Tensor[(10, 4, 2), float64], Tensor[(1, 80), bool], Tensor[(15, 8, 15), uint64]) {
    %229 = cast(%var_903, dtype="bool") /* ty=bool */;
    %230 = cast(%var_904, dtype="bool") /* ty=Tensor[(15, 8, 15), bool] */;
    %231 = logical_and(%229, %230) /* ty=Tensor[(15, 8, 15), bool] */;
    %232 = cast(%var_919, dtype="uint32") /* ty=Tensor[(15, 8, 15), uint32] */;
    %233 = shape_of(%231, dtype="int32") /* ty=Tensor[(3), int32] */;
    %234 = cast(%231, dtype="uint32") /* ty=Tensor[(15, 8, 15), uint32] */;
    %235 = dyn.reshape(%232, %233, newshape=[]) /* ty=Tensor[(?, ?, ?), uint32] */;
    %236 = cast(%var_925, dtype="bool") /* ty=Tensor[(1, 80), bool] */;
    %237 = reshape(%236, newshape=[10, 4, 2]) /* ty=Tensor[(10, 4, 2), bool] */;
    %238 = @func_312(%237) /* ty=(Tensor[(10, 4, 2), bool], Tensor[(10, 4, 2), float64]) */;
    %239 = cast(%231, dtype="float64") /* ty=Tensor[(15, 8, 15), float64] */;
    %240 = sqrt(%239) /* ty=Tensor[(15, 8, 15), float64] */;
    %241 = cast(%var_940, dtype="uint64") /* ty=Tensor[(15, 8, 15), uint64] */;
    %242 = shape_of(%240, dtype="int32") /* ty=Tensor[(3), int32] */;
    %243 = cast(%240, dtype="uint64") /* ty=Tensor[(15, 8, 15), uint64] */;
    %244 = dyn.reshape(%241, %242, newshape=[]) /* ty=Tensor[(?, ?, ?), uint64] */;
    %245 = bitwise_xor(%234, %235) /* ty=Tensor[(15, 8, 15), uint32] */;
    %246 = %238.1;
    %247 = left_shift(%243, %244) /* ty=Tensor[(15, 8, 15), uint64] */;
    (%245, %246, %var_925, %247)
  };
  %248(%var_957, %var_958, %var_959, %var_960, %var_961) /* ty=(Tensor[(15, 8, 15), uint32], Tensor[(10, 4, 2), float64], Tensor[(1, 80), bool], Tensor[(15, 8, 15), uint64]) */
}

def @func_2009(%var_1984: Tensor[(10, 13, 2), float32], %var_1991: Tensor[(168), int16]) -> (Tensor[(10, 4, 2), float64], Tensor[(168), int16], Tensor[(10, 13, 2), int8]) {
  %249 = cast(%var_1991, dtype="int16") /* ty=Tensor[(168), int16] */;
  %250 = cast(%var_1991, dtype="int16") /* ty=Tensor[(168), int16] */;
  %251 = reshape(%249, newshape=[12, 2, 7]) /* ty=Tensor[(12, 2, 7), int16] */;
  %252 = reshape(%250, newshape=[12, 2, 7]) /* ty=Tensor[(12, 2, 7), int16] */;
  %253 = @func_1704(%251, %252) /* ty=(Tensor[(12, 2, 7), bool], Tensor[(10, 4, 2), float64], Tensor[(2, 40), bool]) */;
  %254 = cast(%var_1984, dtype="float32") /* ty=Tensor[(10, 13, 2), float32] */;
  %255 = erf(%254) /* ty=Tensor[(10, 13, 2), float32] */;
  %256 = cast(%var_1984, dtype="int8") /* ty=Tensor[(10, 13, 2), int8] */;
  %257 = shape_of(%255, dtype="int32") /* ty=Tensor[(3), int32] */;
  %258 = cast(%255, dtype="int8") /* ty=Tensor[(10, 13, 2), int8] */;
  %259 = dyn.reshape(%256, %257, newshape=[]) /* ty=Tensor[(?, ?, ?), int8] */;
  %260 = %253.1;
  %261 = bitwise_xor(%258, %259) /* ty=Tensor[(10, 13, 2), int8] */;
  (%260, %var_1991, %261)
}

def @func_6360(%var_6358: Tensor[(16, 14, 6), float32]) -> Tensor[(16, 14, 6), float32] {
  @func_6357(%var_6358) /* ty=Tensor[(16, 14, 6), float32] */
}

def @func_10063() -> (Tensor[(6, 3), float64], Tensor[(6, 3), float64]) {
  @func_10061() /* ty=(Tensor[(6, 3), float64], Tensor[(6, 3), float64]) */
}

def @func_2013(%var_2011: Tensor[(10, 13, 2), float32], %var_2012: Tensor[(168), int16]) -> (Tensor[(10, 4, 2), float64], Tensor[(168), int16], Tensor[(10, 13, 2), int8]) {
  @func_2009(%var_2011, %var_2012) /* ty=(Tensor[(10, 4, 2), float64], Tensor[(168), int16], Tensor[(10, 13, 2), int8]) */
}

def @func_9830() -> (Tensor[(6, 3), float64],) {
  @func_9828() /* ty=(Tensor[(6, 3), float64],) */
}

def @func_10061() -> (Tensor[(6, 3), float64], Tensor[(6, 3), float64]) {
  %262 = @func_8931() /* ty=(Tensor[(6, 3), float64],) */;
  %263 = @func_9752() /* ty=Tensor[(6, 3), float64] */;
  %264 = %262.0;
  (%263, %264)
}

def @func_692(%var_690: Tensor[(10, 4, 9), float32], %var_691: Tensor[(10, 4, 9), float32]) -> (Tensor[(10, 4, 9), int64], Tensor[(10, 4, 2), float64], Tensor[(80), bool]) {
  %279 = fn (%var_656: Tensor[(10, 4, 9), float32], %var_657: Tensor[(10, 4, 9), float32]) -> (Tensor[(10, 4, 9), int64], Tensor[(10, 4, 2), float64], Tensor[(80), bool]) {
    %265 = cast(%var_657, dtype="float32") /* ty=Tensor[(10, 4, 9), float32] */;
    %266 = shape_of(%var_656, dtype="int32") /* ty=Tensor[(3), int32] */;
    %267 = cast(%var_656, dtype="float32") /* ty=Tensor[(10, 4, 9), float32] */;
    %268 = dyn.reshape(%265, %266, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
    %269 = divide(%267, %268) /* ty=Tensor[(10, 4, 9), float32] */;
    %270 = cast(%269, dtype="int64") /* ty=Tensor[(10, 4, 9), int64] */;
    %271 = shape_of(%var_657, dtype="int32") /* ty=Tensor[(3), int32] */;
    %272 = cast(%var_657, dtype="int64") /* ty=Tensor[(10, 4, 9), int64] */;
    %273 = dyn.reshape(%270, %271, newshape=[]) /* ty=Tensor[(?, ?, ?), int64] */;
    %274 = cast(meta[relay.Constant][24] /* ty=Tensor[(80), bool] */, dtype="bool") /* ty=Tensor[(80), bool] */;
    %275 = reshape(%274, newshape=[10, 4, 2]) /* ty=Tensor[(10, 4, 2), bool] */;
    %276 = @func_312(%275) /* ty=(Tensor[(10, 4, 2), bool], Tensor[(10, 4, 2), float64]) */;
    %277 = add(%272, %273) /* ty=Tensor[(10, 4, 9), int64] */;
    %278 = %276.1;
    (%277, %278, meta[relay.Constant][24] /* ty=Tensor[(80), bool] */)
  };
  %279(%var_690, %var_691) /* ty=(Tensor[(10, 4, 9), int64], Tensor[(10, 4, 2), float64], Tensor[(80), bool]) */
}

def @func_5196(%var_5190: Tensor[(10, 1, 12), uint16], %var_5191: Tensor[(10, 5, 12), uint16], %var_5192: int64, %var_5193: Tensor[(143), int64], %var_5194: Tensor[(1800), bool], %var_5195: Tensor[(2816), float64]) -> (Tensor[(10, 5, 12), float32], Tensor[(?, 13, 11), uint16], int64, Tensor[(143), int64], Tensor[(10, 1, 12), float64], Tensor[(15, 8, 15), uint32], Tensor[(1800), bool], Tensor[(80), bool], Tensor[(11, 16, 16), float64], Tensor[(2816), float64], Tensor[(360, 1), float32], Tensor[(390), float64]) {
  %318 = fn (%var_5152: Tensor[(10, 1, 12), uint16], %var_5153: Tensor[(10, 5, 12), uint16], %var_5161: int64, %var_5162: Tensor[(143), int64], %var_5171: Tensor[(1800), bool], %var_5178: Tensor[(2816), float64]) -> (Tensor[(10, 5, 12), float32], Tensor[(?, 13, 11), uint16], int64, Tensor[(143), int64], Tensor[(10, 1, 12), float64], Tensor[(15, 8, 15), uint32], Tensor[(1800), bool], Tensor[(80), bool], Tensor[(11, 16, 16), float64], Tensor[(2816), float64], Tensor[(360, 1), float32], Tensor[(390), float64]) {
    %280 = cast(%var_5152, dtype="bool") /* ty=Tensor[(10, 1, 12), bool] */;
    %281 = cast(%var_5153, dtype="bool") /* ty=Tensor[(10, 5, 12), bool] */;
    %282 = not_equal(%280, %281) /* ty=Tensor[(10, 5, 12), bool] */;
    %283 = cast(%var_5152, dtype="float32") /* ty=Tensor[(10, 1, 12), float32] */;
    %284 = cast(%282, dtype="float32") /* ty=Tensor[(10, 5, 12), float32] */;
    %285 = cast(%var_5161, dtype="int64") /* ty=int64 */;
    %286 = cast(%var_5162, dtype="int64") /* ty=Tensor[(143), int64] */;
    %287 = cast(%var_5162, dtype="int64") /* ty=Tensor[(143), int64] */;
    %288 = reshape(%285, newshape=[]) /* ty=int64 */;
    %289 = reshape(%286, newshape=[1, 13, 11]) /* ty=Tensor[(1, 13, 11), int64] */;
    %290 = reshape(%287, newshape=[1, 13, 11]) /* ty=Tensor[(1, 13, 11), int64] */;
    %291 = @func_5084(%288, %289, %290) /* ty=(Tensor[(1, 13, 11), int64], Tensor[(?, 13, 11), uint16], Tensor[(1, 13, 11), float64], Tensor[(10, 4, 2), float64], Tensor[(1800), bool], Tensor[(80), bool], Tensor[(1, 13, 11), int32]) */;
    %292 = cast(%var_5152, dtype="float64") /* ty=Tensor[(10, 1, 12), float64] */;
    %293 = cast(%var_5161, dtype="bool") /* ty=bool */;
    %294 = cast(%var_5171, dtype="bool") /* ty=Tensor[(1800), bool] */;
    %295 = cast(%var_5171, dtype="bool") /* ty=Tensor[(1800), bool] */;
    %296 = cast(meta[relay.Constant][25] /* ty=Tensor[(80), bool] */, dtype="bool") /* ty=Tensor[(80), bool] */;
    %297 = cast(%var_5171, dtype="float64") /* ty=Tensor[(1800), float64] */;
    %298 = reshape(%293, newshape=[]) /* ty=bool */;
    %299 = reshape(%294, newshape=[15, 8, 15]) /* ty=Tensor[(15, 8, 15), bool] */;
    %300 = reshape(%295, newshape=[15, 8, 15]) /* ty=Tensor[(15, 8, 15), bool] */;
    %301 = reshape(%296, newshape=[1, 80]) /* ty=Tensor[(1, 80), bool] */;
    %302 = reshape(%297, newshape=[15, 8, 15]) /* ty=Tensor[(15, 8, 15), float64] */;
    %303 = @func_956(%298, %299, %300, %301, %302) /* ty=(Tensor[(15, 8, 15), uint32], Tensor[(10, 4, 2), float64], Tensor[(1, 80), bool], Tensor[(15, 8, 15), uint64]) */;
    %304 = cast(%var_5178, dtype="float64") /* ty=Tensor[(2816), float64] */;
    %305 = reshape(%304, newshape=[11, 16, 16]) /* ty=Tensor[(11, 16, 16), float64] */;
    %306 = @func_1725(%305) /* ty=(Tensor[(11, 16, 16), float64],) */;
    %307 = cast(meta[relay.Constant][26] /* ty=Tensor[(390), float64] */, dtype="float64") /* ty=Tensor[(390), float64] */;
    %308 = cast(meta[relay.Constant][26] /* ty=Tensor[(390), float64] */, dtype="float64") /* ty=Tensor[(390), float64] */;
    %309 = reshape(%307, newshape=[13, 3, 10]) /* ty=Tensor[(13, 3, 10), float64] */;
    %310 = reshape(%308, newshape=[13, 3, 10]) /* ty=Tensor[(13, 3, 10), float64] */;
    %311 = @func_3575(%309, %310) /* ty=(Tensor[(13, 3, 10), float64], Tensor[(10, 4, 9), int64], Tensor[(360, 1), float32]) */;
    %312 = mod(%283, %284) /* ty=Tensor[(10, 5, 12), float32] */;
    %313 = %291.1;
    %314 = acosh(%292) /* ty=Tensor[(10, 1, 12), float64] */;
    %315 = %303.0;
    %316 = %306.0;
    %317 = %311.2;
    (%312, %313, %var_5161, %var_5162, %314, %315, %var_5171, meta[relay.Constant][25] /* ty=Tensor[(80), bool] */, %316, %var_5178, %317, meta[relay.Constant][26] /* ty=Tensor[(390), float64] */)
  };
  %318(%var_5190, %var_5191, %var_5192, %var_5193, %var_5194, %var_5195) /* ty=(Tensor[(10, 5, 12), float32], Tensor[(?, 13, 11), uint16], int64, Tensor[(143), int64], Tensor[(10, 1, 12), float64], Tensor[(15, 8, 15), uint32], Tensor[(1800), bool], Tensor[(80), bool], Tensor[(11, 16, 16), float64], Tensor[(2816), float64], Tensor[(360, 1), float32], Tensor[(390), float64]) */
}

def @func_5743(%var_5683: Tensor[(5, 9, 9), float64], %var_5689: Tensor[(2925), float64], %var_5691: Tensor[(450), float64]) -> (Tensor[(5, 9, 9), float64], Tensor[(450), float64], Tensor[(2925), float64], Tensor[(84, 2), uint16], Tensor[(450), float64]) {
  %319 = cast(%var_5683, dtype="float64") /* ty=Tensor[(5, 9, 9), float64] */;
  %320 = cast(%var_5689, dtype="float64") /* ty=Tensor[(2925), float64] */;
  %321 = cast(meta[relay.Constant][27] /* ty=Tensor[(84, 2), uint16] */, dtype="uint16") /* ty=Tensor[(84, 2), uint16] */;
  %322 = cast(%var_5691, dtype="float64") /* ty=Tensor[(450), float64] */;
  %323 = reshape(%320, newshape=[13, 15, 15]) /* ty=Tensor[(13, 15, 15), float64] */;
  %324 = reshape(%321, newshape=[84, 2]) /* ty=Tensor[(84, 2), uint16] */;
  %325 = reshape(%322, newshape=[450]) /* ty=Tensor[(450), float64] */;
  %326 = @func_4996(%323, %324, %325) /* ty=(Tensor[(9, 14, 12), uint16], Tensor[(84, 2), uint16], Tensor[(126, 12), uint16], Tensor[(13, 15, 15), float64], Tensor[(10, 15, 3), int8], Tensor[(450), float64], Tensor[(13, 15, 15), float32], Tensor[(13, 15, 15), float64]) */;
  %327 = rsqrt(%319) /* ty=Tensor[(5, 9, 9), float64] */;
  %328 = %326.5;
  (%327, %328, %var_5689, meta[relay.Constant][27] /* ty=Tensor[(84, 2), uint16] */, %var_5691)
}

def @func_5084(%var_5048: int64, %var_5049: Tensor[(1, 13, 11), int64], %var_5056: Tensor[(1, 13, 11), int64]) -> (Tensor[(1, 13, 11), int64], Tensor[(?, 13, 11), uint16], Tensor[(1, 13, 11), float64], Tensor[(10, 4, 2), float64], Tensor[(1800), bool], Tensor[(80), bool], Tensor[(1, 13, 11), int32]) {
  %329 = cast(%var_5048, dtype="int64") /* ty=int64 */;
  %330 = cast(%var_5049, dtype="int64") /* ty=Tensor[(1, 13, 11), int64] */;
  %331 = cast(%var_5056, dtype="uint16") /* ty=Tensor[(1, 13, 11), uint16] */;
  %332 = shape_of(%var_5049, dtype="int32") /* ty=Tensor[(3), int32] */;
  %333 = cast(%var_5049, dtype="uint16") /* ty=Tensor[(1, 13, 11), uint16] */;
  %334 = dyn.reshape(%331, %332, newshape=[]) /* ty=Tensor[(?, ?, ?), uint16] */;
  %335 = cast(%var_5056, dtype="float64") /* ty=Tensor[(1, 13, 11), float64] */;
  %336 = cast(%var_5048, dtype="bool") /* ty=bool */;
  %337 = cast(meta[relay.Constant][28] /* ty=Tensor[(1800), bool] */, dtype="bool") /* ty=Tensor[(1800), bool] */;
  %338 = cast(meta[relay.Constant][28] /* ty=Tensor[(1800), bool] */, dtype="bool") /* ty=Tensor[(1800), bool] */;
  %339 = cast(meta[relay.Constant][29] /* ty=Tensor[(80), bool] */, dtype="bool") /* ty=Tensor[(80), bool] */;
  %340 = cast(meta[relay.Constant][28] /* ty=Tensor[(1800), bool] */, dtype="float64") /* ty=Tensor[(1800), float64] */;
  %341 = reshape(%336, newshape=[]) /* ty=bool */;
  %342 = reshape(%337, newshape=[15, 8, 15]) /* ty=Tensor[(15, 8, 15), bool] */;
  %343 = reshape(%338, newshape=[15, 8, 15]) /* ty=Tensor[(15, 8, 15), bool] */;
  %344 = reshape(%339, newshape=[1, 80]) /* ty=Tensor[(1, 80), bool] */;
  %345 = reshape(%340, newshape=[15, 8, 15]) /* ty=Tensor[(15, 8, 15), float64] */;
  %346 = @func_956(%341, %342, %343, %344, %345) /* ty=(Tensor[(15, 8, 15), uint32], Tensor[(10, 4, 2), float64], Tensor[(1, 80), bool], Tensor[(15, 8, 15), uint64]) */;
  %347 = cast(%var_5056, dtype="int32") /* ty=Tensor[(1, 13, 11), int32] */;
  %348 = cast(%var_5048, dtype="int32") /* ty=int32 */;
  %349 = bitwise_or(%329, %330) /* ty=Tensor[(1, 13, 11), int64] */;
  %350 = maximum(%333, %334) /* ty=Tensor[(?, 13, 11), uint16] */;
  %351 = rsqrt(%335) /* ty=Tensor[(1, 13, 11), float64] */;
  %352 = %346.1;
  %353 = subtract(%347, %348) /* ty=Tensor[(1, 13, 11), int32] */;
  (%349, %350, %351, %352, meta[relay.Constant][28] /* ty=Tensor[(1800), bool] */, meta[relay.Constant][29] /* ty=Tensor[(80), bool] */, %353)
}

def @func_7250(%var_7248: Tensor[(13, 6, 6), uint32], %var_7249: Tensor[(13, 6, 6), uint32]) -> (Tensor[(13, 6, 6), bool],) {
  @func_7246(%var_7248, %var_7249) /* ty=(Tensor[(13, 6, 6), bool],) */
}

def @func_10106() -> (Tensor[(6, 3), float64], Tensor[(6, 3), float64]) {
  %356 = fn () -> (Tensor[(6, 3), float64], Tensor[(6, 3), float64]) {
    %354 = @func_9752() /* ty=Tensor[(6, 3), float64] */;
    %355 = @func_9711() /* ty=Tensor[(6, 3), float64] */;
    (%354, %355)
  };
  %356() /* ty=(Tensor[(6, 3), float64], Tensor[(6, 3), float64]) */
}

def @func_7246(%var_7239: Tensor[(13, 6, 6), uint32], %var_7240: Tensor[(13, 6, 6), uint32]) -> (Tensor[(13, 6, 6), bool],) {
  %357 = cast(%var_7240, dtype="bool") /* ty=Tensor[(13, 6, 6), bool] */;
  %358 = shape_of(%var_7239, dtype="int32") /* ty=Tensor[(3), int32] */;
  %359 = cast(%var_7239, dtype="bool") /* ty=Tensor[(13, 6, 6), bool] */;
  %360 = dyn.reshape(%357, %358, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %361 = equal(%359, %360) /* ty=Tensor[(13, 6, 6), bool] */;
  (%361,)
}

def @func_5851(%var_5849: Tensor[(15, 10, 12), float32], %var_5850: Tensor[(2, 80), bool]) -> (Tensor[(15, 10, 12), int16], Tensor[(2, 5, 16), bool], Tensor[(2, 80), bool], Tensor[(11, 8, 5), float32], Tensor[(55), float32]) {
  @func_5847(%var_5849, %var_5850) /* ty=(Tensor[(15, 10, 12), int16], Tensor[(2, 5, 16), bool], Tensor[(2, 80), bool], Tensor[(11, 8, 5), float32], Tensor[(55), float32]) */
}

def @func_8716(%var_8714: Tensor[(15, 9, 12), bool], %var_8715: Tensor[(2816), float64]) -> (Tensor[(15, 9, 12), bool], Tensor[(15, 9, 12), float64], Tensor[(11, 16, 16), float64], Tensor[(2816), float64]) {
  %378 = fn (%var_8688: Tensor[(15, 9, 12), bool], %var_8711: Tensor[(2816), float64]) -> (Tensor[(15, 9, 12), bool], Tensor[(15, 9, 12), float64], Tensor[(11, 16, 16), float64], Tensor[(2816), float64]) {
    %362 = cast(meta[relay.Constant][30] /* ty=Tensor[(15, 9, 12), bool] */, dtype="bool") /* ty=Tensor[(15, 9, 12), bool] */;
    %363 = shape_of(%var_8688, dtype="int32") /* ty=Tensor[(3), int32] */;
    %364 = cast(%var_8688, dtype="bool") /* ty=Tensor[(15, 9, 12), bool] */;
    %365 = dyn.reshape(%362, %363, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    %366 = logical_and(%364, %365) /* ty=Tensor[(15, 9, 12), bool] */;
    %367 = cast(%var_8688, dtype="bool") /* ty=Tensor[(15, 9, 12), bool] */;
    %368 = shape_of(%366, dtype="int32") /* ty=Tensor[(3), int32] */;
    %369 = cast(%366, dtype="bool") /* ty=Tensor[(15, 9, 12), bool] */;
    %370 = dyn.reshape(%367, %368, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    %371 = cast(meta[relay.Constant][30] /* ty=Tensor[(15, 9, 12), bool] */, dtype="float64") /* ty=Tensor[(15, 9, 12), float64] */;
    %372 = cast(%var_8711, dtype="float64") /* ty=Tensor[(2816), float64] */;
    %373 = reshape(%372, newshape=[11, 16, 16]) /* ty=Tensor[(11, 16, 16), float64] */;
    %374 = @func_1725(%373) /* ty=(Tensor[(11, 16, 16), float64],) */;
    %375 = equal(%369, %370) /* ty=Tensor[(15, 9, 12), bool] */;
    %376 = atanh(%371) /* ty=Tensor[(15, 9, 12), float64] */;
    %377 = %374.0;
    (%375, %376, %377, %var_8711)
  };
  %378(%var_8714, %var_8715) /* ty=(Tensor[(15, 9, 12), bool], Tensor[(15, 9, 12), float64], Tensor[(11, 16, 16), float64], Tensor[(2816), float64]) */
}

def @func_3761(%var_3759: int8, %var_3760: Tensor[(2, 15, 13), int8]) -> Tensor[(2, 15, 13), int8] {
  @func_3757(%var_3759, %var_3760) /* ty=Tensor[(2, 15, 13), int8] */
}

def @func_8630(%var_8629: Tensor[(2, 16, 13), uint16]) -> (Tensor[(2, 16, 13), float64],) {
  %384 = fn (%var_8620: Tensor[(2, 16, 13), uint16]) -> (Tensor[(2, 16, 13), float64],) {
    %379 = cast(meta[relay.Constant][31] /* ty=Tensor[(1, 16, 13), uint16] */, dtype="bool") /* ty=Tensor[(1, 16, 13), bool] */;
    %380 = cast(%var_8620, dtype="bool") /* ty=Tensor[(2, 16, 13), bool] */;
    %381 = less_equal(%379, %380) /* ty=Tensor[(2, 16, 13), bool] */;
    %382 = cast(%381, dtype="float64") /* ty=Tensor[(2, 16, 13), float64] */;
    %383 = sqrt(%382) /* ty=Tensor[(2, 16, 13), float64] */;
    (%383,)
  };
  %384(%var_8629) /* ty=(Tensor[(2, 16, 13), float64],) */
}

def @func_9979(%var_9974: Tensor[(384), float64], %var_9975: Tensor[(168), uint16], %var_9976: Tensor[(1512), uint16], %var_9977: Tensor[(120), uint16], %var_9978: Tensor[(2816), float64]) -> (Tensor[(6, 3), float64], Tensor[(16, 2, 12), float32], Tensor[(384), float64], Tensor[(168), uint16], Tensor[(9, 14, 12), float64], Tensor[(9, 14, 12), float64], Tensor[(143), int64], Tensor[(120), uint16], Tensor[(600), uint16], int64, Tensor[(143), int64], Tensor[(1800), bool], Tensor[(2816), float64]) {
  %425 = fn (%var_9931: Tensor[(384), float64], %var_9934: Tensor[(168), uint16], %var_9935: Tensor[(1512), uint16], %var_9966: Tensor[(120), uint16], %var_9971: Tensor[(2816), float64]) -> (Tensor[(6, 3), float64], Tensor[(16, 2, 12), float32], Tensor[(384), float64], Tensor[(168), uint16], Tensor[(9, 14, 12), float64], Tensor[(9, 14, 12), float64], Tensor[(143), int64], Tensor[(120), uint16], Tensor[(600), uint16], int64, Tensor[(143), int64], Tensor[(1800), bool], Tensor[(2816), float64]) {
    %385 = cast(%var_9931, dtype="float64") /* ty=Tensor[(384), float64] */;
    %386 = cast(%var_9931, dtype="float64") /* ty=Tensor[(384), float64] */;
    %387 = reshape(%385, newshape=[16, 2, 12]) /* ty=Tensor[(16, 2, 12), float64] */;
    %388 = reshape(%386, newshape=[16, 2, 12]) /* ty=Tensor[(16, 2, 12), float64] */;
    %389 = @func_7549(%387, %388) /* ty=(Tensor[(16, 2, 12), float64], Tensor[(16, 2, 12), float32]) */;
    %390 = cast(%var_9934, dtype="uint16") /* ty=Tensor[(168), uint16] */;
    %391 = cast(%var_9935, dtype="uint16") /* ty=Tensor[(1512), uint16] */;
    %392 = reshape(%390, newshape=[1, 14, 12]) /* ty=Tensor[(1, 14, 12), uint16] */;
    %393 = reshape(%391, newshape=[9, 14, 12]) /* ty=Tensor[(9, 14, 12), uint16] */;
    %394 = @func_2482(%392, %393) /* ty=Tensor[(9, 14, 12), uint16] */;
    %395 = cast(%394, dtype="float64") /* ty=Tensor[(9, 14, 12), float64] */;
    %396 = tan(%395) /* ty=Tensor[(9, 14, 12), float64] */;
    %397 = cast(%396, dtype="float64") /* ty=Tensor[(9, 14, 12), float64] */;
    %398 = cast(%394, dtype="bool") /* ty=Tensor[(9, 14, 12), bool] */;
    %399 = shape_of(%var_9935, dtype="int32") /* ty=Tensor[(1), int32] */;
    %400 = cast(%var_9935, dtype="bool") /* ty=Tensor[(1512), bool] */;
    %401 = dyn.reshape(%398, %399, newshape=[]) /* ty=Tensor[(?), bool] */;
    %402 = logical_and(%400, %401) /* ty=Tensor[(1512), bool] */;
    %403 = cast(%402, dtype="float64") /* ty=Tensor[(1512), float64] */;
    %404 = shape_of(%396, dtype="int32") /* ty=Tensor[(3), int32] */;
    %405 = cast(%396, dtype="float64") /* ty=Tensor[(9, 14, 12), float64] */;
    %406 = dyn.reshape(%403, %404, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
    %407 = cast(%var_9966, dtype="uint16") /* ty=Tensor[(120), uint16] */;
    %408 = cast(meta[relay.Constant][32] /* ty=Tensor[(600), uint16] */, dtype="uint16") /* ty=Tensor[(600), uint16] */;
    %409 = cast(3 /* ty=int64 */, dtype="int64") /* ty=int64 */;
    %410 = cast(meta[relay.Constant][33] /* ty=Tensor[(143), int64] */, dtype="int64") /* ty=Tensor[(143), int64] */;
    %411 = cast(meta[relay.Constant][34] /* ty=Tensor[(1800), bool] */, dtype="bool") /* ty=Tensor[(1800), bool] */;
    %412 = cast(%var_9971, dtype="float64") /* ty=Tensor[(2816), float64] */;
    %413 = reshape(%407, newshape=[10, 1, 12]) /* ty=Tensor[(10, 1, 12), uint16] */;
    %414 = reshape(%408, newshape=[10, 5, 12]) /* ty=Tensor[(10, 5, 12), uint16] */;
    %415 = reshape(%409, newshape=[]) /* ty=int64 */;
    %416 = reshape(%410, newshape=[143]) /* ty=Tensor[(143), int64] */;
    %417 = reshape(%411, newshape=[1800]) /* ty=Tensor[(1800), bool] */;
    %418 = reshape(%412, newshape=[2816]) /* ty=Tensor[(2816), float64] */;
    %419 = @func_5189(%413, %414, %415, %416, %417, %418) /* ty=(Tensor[(10, 5, 12), float32], Tensor[(?, 13, 11), uint16], int64, Tensor[(143), int64], Tensor[(10, 1, 12), float64], Tensor[(15, 8, 15), uint32], Tensor[(1800), bool], Tensor[(80), bool], Tensor[(11, 16, 16), float64], Tensor[(2816), float64], Tensor[(360, 1), float32], Tensor[(390), float64]) */;
    %420 = @func_9711() /* ty=Tensor[(6, 3), float64] */;
    %421 = %389.1;
    %422 = asinh(%397) /* ty=Tensor[(9, 14, 12), float64] */;
    %423 = power(%405, %406) /* ty=Tensor[(9, 14, 12), float64] */;
    %424 = %419.3;
    (%420, %421, %var_9931, %var_9934, %422, %423, %424, %var_9966, meta[relay.Constant][32] /* ty=Tensor[(600), uint16] */, 3 /* ty=int64 */, meta[relay.Constant][33] /* ty=Tensor[(143), int64] */, meta[relay.Constant][34] /* ty=Tensor[(1800), bool] */, %var_9971)
  };
  %425(%var_9974, %var_9975, %var_9976, %var_9977, %var_9978) /* ty=(Tensor[(6, 3), float64], Tensor[(16, 2, 12), float32], Tensor[(384), float64], Tensor[(168), uint16], Tensor[(9, 14, 12), float64], Tensor[(9, 14, 12), float64], Tensor[(143), int64], Tensor[(120), uint16], Tensor[(600), uint16], int64, Tensor[(143), int64], Tensor[(1800), bool], Tensor[(2816), float64]) */
}

def @func_4873(%var_4872: Tensor[(14, 6, 9), float64]) -> (Tensor[(14, 6, 9), float64],) {
  %428 = fn (%var_4864: Tensor[(14, 6, 9), float64]) -> (Tensor[(14, 6, 9), float64],) {
    %426 = cast(%var_4864, dtype="float64") /* ty=Tensor[(14, 6, 9), float64] */;
    %427 = log2(%426) /* ty=Tensor[(14, 6, 9), float64] */;
    (%427,)
  };
  %428(%var_4872) /* ty=(Tensor[(14, 6, 9), float64],) */
}

def @func_9488(%var_9486: Tensor[(10, 2, 10), float32]) -> (Tensor[(6, 3), float64], Tensor[(11, 8, 5), float32], Tensor[(55), float32], Tensor[(6, 3), float64], Tensor[(54), int32], Tensor[(8, 70), float32], Tensor[(54), int32], Tensor[(64, 44), float64], Tensor[(11, 16, 16), float64], Tensor[(10, 2, 10), float64]) {
  @func_9485(%var_9486) /* ty=(Tensor[(6, 3), float64], Tensor[(11, 8, 5), float32], Tensor[(55), float32], Tensor[(6, 3), float64], Tensor[(54), int32], Tensor[(8, 70), float32], Tensor[(54), int32], Tensor[(64, 44), float64], Tensor[(11, 16, 16), float64], Tensor[(10, 2, 10), float64]) */
}

def @func_4013(%var_3952: Tensor[(10, 15, 3), float64]) -> (Tensor[(10, 15, 3), int8], Tensor[(10, 4, 2), float64], Tensor[(360), float32]) {
  %429 = cast(%var_3952, dtype="float64") /* ty=Tensor[(10, 15, 3), float64] */;
  %430 = rsqrt(%429) /* ty=Tensor[(10, 15, 3), float64] */;
  %431 = cast(%430, dtype="float32") /* ty=Tensor[(10, 15, 3), float32] */;
  %432 = shape_of(%var_3952, dtype="int32") /* ty=Tensor[(3), int32] */;
  %433 = cast(%var_3952, dtype="float32") /* ty=Tensor[(10, 15, 3), float32] */;
  %434 = dyn.reshape(%431, %432, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %435 = floor_divide(%433, %434) /* ty=Tensor[(10, 15, 3), float32] */;
  %436 = cast(%430, dtype="int8") /* ty=Tensor[(10, 15, 3), int8] */;
  %437 = shape_of(%435, dtype="int32") /* ty=Tensor[(3), int32] */;
  %438 = cast(%435, dtype="int8") /* ty=Tensor[(10, 15, 3), int8] */;
  %439 = dyn.reshape(%436, %437, newshape=[]) /* ty=Tensor[(?, ?, ?), int8] */;
  %440 = cast(meta[relay.Constant][35] /* ty=Tensor[(360), float32] */, dtype="float32") /* ty=Tensor[(360), float32] */;
  %441 = cast(meta[relay.Constant][35] /* ty=Tensor[(360), float32] */, dtype="float32") /* ty=Tensor[(360), float32] */;
  %442 = reshape(%440, newshape=[10, 4, 9]) /* ty=Tensor[(10, 4, 9), float32] */;
  %443 = reshape(%441, newshape=[10, 4, 9]) /* ty=Tensor[(10, 4, 9), float32] */;
  %444 = @func_689(%442, %443) /* ty=(Tensor[(10, 4, 9), int64], Tensor[(10, 4, 2), float64], Tensor[(80), bool]) */;
  %445 = add(%438, %439) /* ty=Tensor[(10, 15, 3), int8] */;
  %446 = %444.1;
  (%445, %446, meta[relay.Constant][35] /* ty=Tensor[(360), float32] */)
}

def @func_3221(%var_3218: Tensor[(18, 100), bool], %var_3219: Tensor[(80), bool], %var_3220: Tensor[(2816), float64]) -> (Tensor[(15, 8, 15), uint32], Tensor[(18, 100), bool], Tensor[(80), bool], Tensor[(11, 16, 16), float64], Tensor[(2816), float64], Tensor[(7, 14, 12), float64], Tensor[(7, 14, 12), float64]) {
  %476 = fn (%var_3145: Tensor[(18, 100), bool], %var_3146: Tensor[(80), bool], %var_3168: Tensor[(2816), float64]) -> (Tensor[(15, 8, 15), uint32], Tensor[(18, 100), bool], Tensor[(80), bool], Tensor[(11, 16, 16), float64], Tensor[(2816), float64], Tensor[(7, 14, 12), float64], Tensor[(7, 14, 12), float64]) {
    %447 = cast(False /* ty=bool */, dtype="bool") /* ty=bool */;
    %448 = cast(%var_3145, dtype="bool") /* ty=Tensor[(18, 100), bool] */;
    %449 = cast(%var_3145, dtype="bool") /* ty=Tensor[(18, 100), bool] */;
    %450 = cast(%var_3146, dtype="bool") /* ty=Tensor[(80), bool] */;
    %451 = cast(%var_3145, dtype="float64") /* ty=Tensor[(18, 100), float64] */;
    %452 = reshape(%447, newshape=[]) /* ty=bool */;
    %453 = reshape(%448, newshape=[15, 8, 15]) /* ty=Tensor[(15, 8, 15), bool] */;
    %454 = reshape(%449, newshape=[15, 8, 15]) /* ty=Tensor[(15, 8, 15), bool] */;
    %455 = reshape(%450, newshape=[1, 80]) /* ty=Tensor[(1, 80), bool] */;
    %456 = reshape(%451, newshape=[15, 8, 15]) /* ty=Tensor[(15, 8, 15), float64] */;
    %457 = @func_956(%452, %453, %454, %455, %456) /* ty=(Tensor[(15, 8, 15), uint32], Tensor[(10, 4, 2), float64], Tensor[(1, 80), bool], Tensor[(15, 8, 15), uint64]) */;
    %458 = cast(%var_3168, dtype="float64") /* ty=Tensor[(2816), float64] */;
    %459 = reshape(%458, newshape=[11, 16, 16]) /* ty=Tensor[(11, 16, 16), float64] */;
    %460 = @func_1725(%459) /* ty=(Tensor[(11, 16, 16), float64],) */;
    %461 = cast(meta[relay.Constant][36] /* ty=Tensor[(7, 14, 12), float32] */, dtype="float32") /* ty=Tensor[(7, 14, 12), float32] */;
    %462 = sin(%461) /* ty=Tensor[(7, 14, 12), float32] */;
    %463 = cast(%462, dtype="bool") /* ty=Tensor[(7, 14, 12), bool] */;
    %464 = cast(False /* ty=bool */, dtype="bool") /* ty=bool */;
    %465 = less_equal(%463, %464) /* ty=Tensor[(7, 14, 12), bool] */;
    %466 = cast(%465, dtype="float64") /* ty=Tensor[(7, 14, 12), float64] */;
    %467 = erf(%466) /* ty=Tensor[(7, 14, 12), float64] */;
    %468 = cast(%467, dtype="float64") /* ty=Tensor[(7, 14, 12), float64] */;
    %469 = atan(%468) /* ty=Tensor[(7, 14, 12), float64] */;
    %470 = cast(%469, dtype="float64") /* ty=Tensor[(7, 14, 12), float64] */;
    %471 = cast(%465, dtype="float64") /* ty=Tensor[(7, 14, 12), float64] */;
    %472 = %457.0;
    %473 = %460.0;
    %474 = sigmoid(%470) /* ty=Tensor[(7, 14, 12), float64] */;
    %475 = rsqrt(%471) /* ty=Tensor[(7, 14, 12), float64] */;
    (%472, %var_3145, %var_3146, %473, %var_3168, %474, %475)
  };
  %476(%var_3218, %var_3219, %var_3220) /* ty=(Tensor[(15, 8, 15), uint32], Tensor[(18, 100), bool], Tensor[(80), bool], Tensor[(11, 16, 16), float64], Tensor[(2816), float64], Tensor[(7, 14, 12), float64], Tensor[(7, 14, 12), float64]) */
}

def @func_8163(%var_8128: Tensor[(16, 7, 5), float32], %var_8140: Tensor[(54), int32], %var_8148: Tensor[(2816), float64]) -> (Tensor[(450), uint64], Tensor[(54), int32], Tensor[(390), int8], Tensor[(160), bool], Tensor[(13, 2, 5), float64], Tensor[(130), float64], Tensor[(2816), float64], Tensor[(16, 7, 5), uint8], Tensor[(16, 7, 5), float32]) {
  %477 = cast(%var_8140, dtype="int32") /* ty=Tensor[(54), int32] */;
  %478 = cast(meta[relay.Constant][37] /* ty=Tensor[(390), int8] */, dtype="int8") /* ty=Tensor[(390), int8] */;
  %479 = cast(meta[relay.Constant][38] /* ty=Tensor[(160), bool] */, dtype="bool") /* ty=Tensor[(160), bool] */;
  %480 = reshape(%477, newshape=[3, 2, 9]) /* ty=Tensor[(3, 2, 9), int32] */;
  %481 = reshape(%478, newshape=[390]) /* ty=Tensor[(390), int8] */;
  %482 = reshape(%479, newshape=[160]) /* ty=Tensor[(160), bool] */;
  %483 = @func_4267(%480, %481, %482) /* ty=(Tensor[(3, 2, 9), int32], Tensor[(450), uint64], Tensor[(2, 15, 13), int8], int8, Tensor[(390), int8], Tensor[(2, 5, 16), bool], Tensor[(160), bool]) */;
  %484 = cast(meta[relay.Constant][39] /* ty=Tensor[(130), float64] */, dtype="float64") /* ty=Tensor[(130), float64] */;
  %485 = cast(%var_8148, dtype="float64") /* ty=Tensor[(2816), float64] */;
  %486 = cast(meta[relay.Constant][37] /* ty=Tensor[(390), int8] */, dtype="float64") /* ty=Tensor[(390), float64] */;
  %487 = %483.1;
  %488 = cast(%487, dtype="float64") /* ty=Tensor[(450), float64] */;
  %489 = reshape(%484, newshape=[13, 2, 5]) /* ty=Tensor[(13, 2, 5), float64] */;
  %490 = reshape(%485, newshape=[2816]) /* ty=Tensor[(2816), float64] */;
  %491 = reshape(%486, newshape=[390]) /* ty=Tensor[(390), float64] */;
  %492 = reshape(%488, newshape=[1, 450]) /* ty=Tensor[(1, 450), float64] */;
  %493 = @func_5388(%489, %490, %491, %492) /* ty=(Tensor[(13, 2, 5), bool], Tensor[(11, 16, 16), float64], Tensor[(2816), float64], Tensor[(13, 2, 5), float64], Tensor[(13, 3, 10), float64], Tensor[(390), float64], Tensor[(9, 14, 12), uint16], Tensor[(2925), float64], Tensor[(168), uint16], Tensor[(1, 450), float64]) */;
  %494 = cast(%var_8128, dtype="float32") /* ty=Tensor[(16, 7, 5), float32] */;
  %495 = sqrt(%494) /* ty=Tensor[(16, 7, 5), float32] */;
  %496 = cast(%var_8128, dtype="uint8") /* ty=Tensor[(16, 7, 5), uint8] */;
  %497 = shape_of(%495, dtype="int32") /* ty=Tensor[(3), int32] */;
  %498 = cast(%495, dtype="uint8") /* ty=Tensor[(16, 7, 5), uint8] */;
  %499 = dyn.reshape(%496, %497, newshape=[]) /* ty=Tensor[(?, ?, ?), uint8] */;
  %500 = cast(%495, dtype="float32") /* ty=Tensor[(16, 7, 5), float32] */;
  %501 = %493.3;
  %502 = bitwise_and(%498, %499) /* ty=Tensor[(16, 7, 5), uint8] */;
  %503 = sigmoid(%500) /* ty=Tensor[(16, 7, 5), float32] */;
  (%487, %var_8140, meta[relay.Constant][37] /* ty=Tensor[(390), int8] */, meta[relay.Constant][38] /* ty=Tensor[(160), bool] */, %501, meta[relay.Constant][39] /* ty=Tensor[(130), float64] */, %var_8148, %502, %503)
}

def @func_6357(%var_6348: Tensor[(16, 14, 6), float32]) -> Tensor[(16, 14, 6), float32] {
  %504 = cast(%var_6348, dtype="float32") /* ty=Tensor[(16, 14, 6), float32] */;
  acosh(%504) /* ty=Tensor[(16, 14, 6), float32] */
}

def @func_7553(%var_7551: Tensor[(16, 2, 12), float64], %var_7552: Tensor[(16, 2, 12), float64]) -> (Tensor[(16, 2, 12), float64], Tensor[(16, 2, 12), float32]) {
  @func_7549(%var_7551, %var_7552) /* ty=(Tensor[(16, 2, 12), float64], Tensor[(16, 2, 12), float32]) */
}

def @func_5000(%var_4997: Tensor[(13, 15, 15), float64], %var_4998: Tensor[(84, 2), uint16], %var_4999: Tensor[(450), float64]) -> (Tensor[(9, 14, 12), uint16], Tensor[(84, 2), uint16], Tensor[(126, 12), uint16], Tensor[(13, 15, 15), float64], Tensor[(10, 15, 3), int8], Tensor[(450), float64], Tensor[(13, 15, 15), float32], Tensor[(13, 15, 15), float64]) {
  %527 = fn (%var_4945: Tensor[(13, 15, 15), float64], %var_4952: Tensor[(84, 2), uint16], %var_4980: Tensor[(450), float64]) -> (Tensor[(9, 14, 12), uint16], Tensor[(84, 2), uint16], Tensor[(126, 12), uint16], Tensor[(13, 15, 15), float64], Tensor[(10, 15, 3), int8], Tensor[(450), float64], Tensor[(13, 15, 15), float32], Tensor[(13, 15, 15), float64]) {
    %505 = cast(%var_4952, dtype="uint16") /* ty=Tensor[(84, 2), uint16] */;
    %506 = cast(meta[relay.Constant][40] /* ty=Tensor[(126, 12), uint16] */, dtype="uint16") /* ty=Tensor[(126, 12), uint16] */;
    %507 = reshape(%505, newshape=[1, 14, 12]) /* ty=Tensor[(1, 14, 12), uint16] */;
    %508 = reshape(%506, newshape=[9, 14, 12]) /* ty=Tensor[(9, 14, 12), uint16] */;
    %509 = cast(%var_4945, dtype="float64") /* ty=Tensor[(13, 15, 15), float64] */;
    %510 = asinh(%509) /* ty=Tensor[(13, 15, 15), float64] */;
    %511 = cast(%510, dtype="float64") /* ty=Tensor[(13, 15, 15), float64] */;
    %512 = atan(%511) /* ty=Tensor[(13, 15, 15), float64] */;
    %513 = cast(%512, dtype="float64") /* ty=Tensor[(13, 15, 15), float64] */;
    %514 = shape_of(%510, dtype="int32") /* ty=Tensor[(3), int32] */;
    %515 = cast(%510, dtype="float64") /* ty=Tensor[(13, 15, 15), float64] */;
    %516 = dyn.reshape(%513, %514, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
    %517 = cast(%var_4980, dtype="float64") /* ty=Tensor[(450), float64] */;
    %518 = reshape(%517, newshape=[10, 15, 3]) /* ty=Tensor[(10, 15, 3), float64] */;
    %519 = @func_4013(%518) /* ty=(Tensor[(10, 15, 3), int8], Tensor[(10, 4, 2), float64], Tensor[(360), float32]) */;
    %520 = cast(%512, dtype="float32") /* ty=Tensor[(13, 15, 15), float32] */;
    %521 = cast(%512, dtype="float64") /* ty=Tensor[(13, 15, 15), float64] */;
    %522 = @func_2482(%507, %508) /* ty=Tensor[(9, 14, 12), uint16] */;
    %523 = floor_mod(%515, %516) /* ty=Tensor[(13, 15, 15), float64] */;
    %524 = %519.0;
    %525 = rsqrt(%520) /* ty=Tensor[(13, 15, 15), float32] */;
    %526 = cosh(%521) /* ty=Tensor[(13, 15, 15), float64] */;
    (%522, %var_4952, meta[relay.Constant][40] /* ty=Tensor[(126, 12), uint16] */, %523, %524, %var_4980, %525, %526)
  };
  %527(%var_4997, %var_4998, %var_4999) /* ty=(Tensor[(9, 14, 12), uint16], Tensor[(84, 2), uint16], Tensor[(126, 12), uint16], Tensor[(13, 15, 15), float64], Tensor[(10, 15, 3), int8], Tensor[(450), float64], Tensor[(13, 15, 15), float32], Tensor[(13, 15, 15), float64]) */
}

def @func_7973(%var_7971: Tensor[(7, 10, 16), float64], %var_7972: Tensor[(1344), float32]) -> (Tensor[(11, 16, 16), float64], Tensor[(1800), bool], Tensor[(20, 4), bool], Tensor[(2816), float64], Tensor[(16, 14, 6), float32], Tensor[(1344), float32], Tensor[(7, 10, 16), bool]) {
  @func_7969(%var_7971, %var_7972) /* ty=(Tensor[(11, 16, 16), float64], Tensor[(1800), bool], Tensor[(20, 4), bool], Tensor[(2816), float64], Tensor[(16, 14, 6), float32], Tensor[(1344), float32], Tensor[(7, 10, 16), bool]) */
}

def @func_1728(%var_1726: Tensor[(11, 16, 16), float64]) -> (Tensor[(11, 16, 16), float64],) {
  @func_1725(%var_1726) /* ty=(Tensor[(11, 16, 16), float64],) */
}

def @func_2581(%var_2562: Tensor[(8, 8, 14), float64]) -> (Tensor[(8, 8, 14), float64], Tensor[(11, 16, 16), float64], Tensor[(1, 2816), float64]) {
  %528 = cast(meta[relay.Constant][41] /* ty=Tensor[(8, 8, 14), float64] */, dtype="float64") /* ty=Tensor[(8, 8, 14), float64] */;
  %529 = shape_of(%var_2562, dtype="int32") /* ty=Tensor[(3), int32] */;
  %530 = cast(%var_2562, dtype="float64") /* ty=Tensor[(8, 8, 14), float64] */;
  %531 = dyn.reshape(%528, %529, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %532 = cast(meta[relay.Constant][42] /* ty=Tensor[(1, 2816), float64] */, dtype="float64") /* ty=Tensor[(1, 2816), float64] */;
  %533 = reshape(%532, newshape=[11, 16, 16]) /* ty=Tensor[(11, 16, 16), float64] */;
  %534 = @func_1725(%533) /* ty=(Tensor[(11, 16, 16), float64],) */;
  %535 = maximum(%530, %531) /* ty=Tensor[(8, 8, 14), float64] */;
  %536 = %534.0;
  (%535, %536, meta[relay.Constant][42] /* ty=Tensor[(1, 2816), float64] */)
}

def @func_5748(%var_5745: Tensor[(5, 9, 9), float64], %var_5746: Tensor[(2925), float64], %var_5747: Tensor[(450), float64]) -> (Tensor[(5, 9, 9), float64], Tensor[(450), float64], Tensor[(2925), float64], Tensor[(84, 2), uint16], Tensor[(450), float64]) {
  @func_5743(%var_5745, %var_5746, %var_5747) /* ty=(Tensor[(5, 9, 9), float64], Tensor[(450), float64], Tensor[(2925), float64], Tensor[(84, 2), uint16], Tensor[(450), float64]) */
}

def @func_9753() -> Tensor[(6, 3), float64] {
  %537 = fn () -> Tensor[(6, 3), float64] {
    @func_9711() /* ty=Tensor[(6, 3), float64] */
  };
  %537() /* ty=Tensor[(6, 3), float64] */
}

def @main(%var_10228: uint32, %var_10229: Tensor[(2, 10, 11), uint32]) -> (Tensor[(2, 10, 11), uint32],) {
  %538 = cast(%var_10228, dtype="uint32") /* ty=uint32 */;
  %539 = cast(%var_10229, dtype="uint32") /* ty=Tensor[(2, 10, 11), uint32] */;
  %540 = right_shift(%538, %539) /* ty=Tensor[(2, 10, 11), uint32] */;
  (%540,)
}

def @func_5089(%var_5086: int64, %var_5087: Tensor[(1, 13, 11), int64], %var_5088: Tensor[(1, 13, 11), int64]) -> (Tensor[(1, 13, 11), int64], Tensor[(?, 13, 11), uint16], Tensor[(1, 13, 11), float64], Tensor[(10, 4, 2), float64], Tensor[(1800), bool], Tensor[(80), bool], Tensor[(1, 13, 11), int32]) {
  @func_5084(%var_5086, %var_5087, %var_5088) /* ty=(Tensor[(1, 13, 11), int64], Tensor[(?, 13, 11), uint16], Tensor[(1, 13, 11), float64], Tensor[(10, 4, 2), float64], Tensor[(1800), bool], Tensor[(80), bool], Tensor[(1, 13, 11), int32]) */
}

def @func_1008(%var_1006: Tensor[(2, 5, 16), bool]) -> (Tensor[(2, 5, 16), bool],) {
  @func_1005(%var_1006) /* ty=(Tensor[(2, 5, 16), bool],) */
}

def @func_4854(%var_4816: float64, %var_4817: Tensor[(4, 7, 5), float64], %var_4826: Tensor[(160), bool], %var_4844: Tensor[(1800), bool], %var_4845: Tensor[(80), bool], %var_4846: Tensor[(2816), float64]) -> (Tensor[(4, 7, 5), float64], Tensor[(2, 5, 16), bool], Tensor[(160), bool], Tensor[(7, 14, 12), float64], Tensor[(1800), bool], Tensor[(80), bool], Tensor[(2816), float64], Tensor[(10, 4, 2), float64], Tensor[(450), float64]) {
  %541 = cast(%var_4816, dtype="float64") /* ty=float64 */;
  %542 = cast(%var_4817, dtype="float64") /* ty=Tensor[(4, 7, 5), float64] */;
  %543 = cast(%var_4826, dtype="bool") /* ty=Tensor[(160), bool] */;
  %544 = reshape(%543, newshape=[2, 5, 16]) /* ty=Tensor[(2, 5, 16), bool] */;
  %545 = @func_1005(%544) /* ty=(Tensor[(2, 5, 16), bool],) */;
  %546 = cast(%var_4844, dtype="bool") /* ty=Tensor[(1800), bool] */;
  %547 = cast(%var_4845, dtype="bool") /* ty=Tensor[(80), bool] */;
  %548 = cast(%var_4846, dtype="float64") /* ty=Tensor[(2816), float64] */;
  %549 = reshape(%546, newshape=[18, 100]) /* ty=Tensor[(18, 100), bool] */;
  %550 = reshape(%547, newshape=[80]) /* ty=Tensor[(80), bool] */;
  %551 = reshape(%548, newshape=[2816]) /* ty=Tensor[(2816), float64] */;
  %552 = @func_3217(%549, %550, %551) /* ty=(Tensor[(15, 8, 15), uint32], Tensor[(18, 100), bool], Tensor[(80), bool], Tensor[(11, 16, 16), float64], Tensor[(2816), float64], Tensor[(7, 14, 12), float64], Tensor[(7, 14, 12), float64]) */;
  %553 = cast(meta[relay.Constant][43] /* ty=Tensor[(450), float64] */, dtype="float64") /* ty=Tensor[(450), float64] */;
  %554 = reshape(%553, newshape=[10, 15, 3]) /* ty=Tensor[(10, 15, 3), float64] */;
  %555 = @func_4013(%554) /* ty=(Tensor[(10, 15, 3), int8], Tensor[(10, 4, 2), float64], Tensor[(360), float32]) */;
  %556 = floor_mod(%541, %542) /* ty=Tensor[(4, 7, 5), float64] */;
  %557 = %545.0;
  %558 = %552.5;
  %559 = %555.1;
  (%556, %557, %var_4826, %558, %var_4844, %var_4845, %var_4846, %559, meta[relay.Constant][43] /* ty=Tensor[(450), float64] */)
}

def @func_9118(%var_9117: Tensor[(11, 12, 3), float64]) -> (Tensor[(11, 12, 3), float32], Tensor[(2, 4, 10), float64], Tensor[(2, 40), float64]) {
  %567 = fn (%var_9079: Tensor[(11, 12, 3), float64]) -> (Tensor[(11, 12, 3), float32], Tensor[(2, 4, 10), float64], Tensor[(2, 40), float64]) {
    %560 = cast(%var_9079, dtype="float64") /* ty=Tensor[(11, 12, 3), float64] */;
    %561 = sin(%560) /* ty=Tensor[(11, 12, 3), float64] */;
    %562 = cast(%561, dtype="float32") /* ty=Tensor[(11, 12, 3), float32] */;
    %563 = cast(meta[relay.Constant][44] /* ty=Tensor[(2, 40), float64] */, dtype="float64") /* ty=Tensor[(2, 40), float64] */;
    %564 = reshape(%563, newshape=[2, 4, 10]) /* ty=Tensor[(2, 4, 10), float64] */;
    %565 = acosh(%562) /* ty=Tensor[(11, 12, 3), float32] */;
    %566 = @func_7105(%564) /* ty=Tensor[(2, 4, 10), float64] */;
    (%565, %566, meta[relay.Constant][44] /* ty=Tensor[(2, 40), float64] */)
  };
  %567(%var_9117) /* ty=(Tensor[(11, 12, 3), float32], Tensor[(2, 4, 10), float64], Tensor[(2, 40), float64]) */
}

def @func_10150(%var_10148: Tensor[(12, 13, 11), bool]) -> (Tensor[(12, 13, 11), bool], Tensor[(7, 15, 12), bool], Tensor[(1260), int16]) {
  @func_10147(%var_10148) /* ty=(Tensor[(12, 13, 11), bool], Tensor[(7, 15, 12), bool], Tensor[(1260), int16]) */
}

def @func_10147(%var_10139: Tensor[(12, 13, 11), bool]) -> (Tensor[(12, 13, 11), bool], Tensor[(7, 15, 12), bool], Tensor[(1260), int16]) {
  %568 = cast(%var_10139, dtype="bool") /* ty=Tensor[(12, 13, 11), bool] */;
  %569 = shape_of(meta[relay.Constant][45] /* ty=Tensor[(12, 13, 11), bool] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %570 = cast(meta[relay.Constant][45] /* ty=Tensor[(12, 13, 11), bool] */, dtype="bool") /* ty=Tensor[(12, 13, 11), bool] */;
  %571 = dyn.reshape(%568, %569, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %572 = cast(meta[relay.Constant][46] /* ty=Tensor[(1260), int16] */, dtype="int16") /* ty=Tensor[(1260), int16] */;
  %573 = cast(meta[relay.Constant][46] /* ty=Tensor[(1260), int16] */, dtype="int16") /* ty=Tensor[(1260), int16] */;
  %574 = cast(meta[relay.Constant][46] /* ty=Tensor[(1260), int16] */, dtype="int16") /* ty=Tensor[(1260), int16] */;
  %575 = reshape(%572, newshape=[7, 15, 12]) /* ty=Tensor[(7, 15, 12), int16] */;
  %576 = reshape(%573, newshape=[7, 15, 12]) /* ty=Tensor[(7, 15, 12), int16] */;
  %577 = reshape(%574, newshape=[7, 15, 12]) /* ty=Tensor[(7, 15, 12), int16] */;
  %578 = @func_9581(%575, %576, %577) /* ty=(Tensor[(7, 15, 12), bool], Tensor[(7, 15, 12), bool]) */;
  %579 = logical_or(%570, %571) /* ty=Tensor[(12, 13, 11), bool] */;
  %580 = %578.0;
  (%579, %580, meta[relay.Constant][46] /* ty=Tensor[(1260), int16] */)
}

def @func_9326() -> (Tensor[(6, 3), float64],) {
  %581 = @func_8931() /* ty=(Tensor[(6, 3), float64],) */;
  %582 = %581.0;
  (%582,)
}

def @func_2485(%var_2483: Tensor[(1, 14, 12), uint16], %var_2484: Tensor[(9, 14, 12), uint16]) -> Tensor[(9, 14, 12), uint16] {
  %585 = fn (%var_2476: Tensor[(1, 14, 12), uint16], %var_2477: Tensor[(9, 14, 12), uint16]) -> Tensor[(9, 14, 12), uint16] {
    %583 = cast(%var_2476, dtype="uint16") /* ty=Tensor[(1, 14, 12), uint16] */;
    %584 = cast(%var_2477, dtype="uint16") /* ty=Tensor[(9, 14, 12), uint16] */;
    bitwise_or(%583, %584) /* ty=Tensor[(9, 14, 12), uint16] */
  };
  %585(%var_2483, %var_2484) /* ty=Tensor[(9, 14, 12), uint16] */
}

def @func_7345(%var_7343: Tensor[(5, 8, 16), float64], %var_7344: Tensor[(192), int8]) -> (Tensor[(5, 8, 16), float64], Tensor[(3, 4, 16), int8], Tensor[(192), int8]) {
  @func_7341(%var_7343, %var_7344) /* ty=(Tensor[(5, 8, 16), float64], Tensor[(3, 4, 16), int8], Tensor[(192), int8]) */
}

def @func_9524(%var_9521: float64, %var_9522: Tensor[(143), int64], %var_9523: Tensor[(2816), float64]) -> (Tensor[(6, 3), float64], Tensor[(7, 11), float64], float64, Tensor[(3, 56), int16], Tensor[(2816), float64], Tensor[(120), uint16], Tensor[(600), uint16], Tensor[(143), int64], Tensor[(1800), bool], Tensor[(2816), float64]) {
  @func_9519(%var_9521, %var_9522, %var_9523) /* ty=(Tensor[(6, 3), float64], Tensor[(7, 11), float64], float64, Tensor[(3, 56), int16], Tensor[(2816), float64], Tensor[(120), uint16], Tensor[(600), uint16], Tensor[(143), int64], Tensor[(1800), bool], Tensor[(2816), float64]) */
}

def @func_9882(%var_9864: bool, %var_9875: Tensor[(160), bool]) -> (Tensor[(6, 3), float64], Tensor[(2, 40), float64], Tensor[(396), float64], Tensor[(80), bool], bool, Tensor[(11, 8, 5), float32], Tensor[(1800, 1), float32], Tensor[(160), bool]) {
  %586 = @func_8931() /* ty=(Tensor[(6, 3), float64],) */;
  %587 = cast(meta[relay.Constant][47] /* ty=Tensor[(396), float64] */, dtype="float64") /* ty=Tensor[(396), float64] */;
  %588 = reshape(%587, newshape=[11, 12, 3]) /* ty=Tensor[(11, 12, 3), float64] */;
  %589 = @func_9116(%588) /* ty=(Tensor[(11, 12, 3), float32], Tensor[(2, 4, 10), float64], Tensor[(2, 40), float64]) */;
  %590 = cast(%var_9864, dtype="bool") /* ty=bool */;
  %591 = reshape(%590, newshape=[]) /* ty=bool */;
  %592 = @func_1044(%591) /* ty=(Tensor[(8, 15, 6), bool], Tensor[(10, 4, 2), float64], Tensor[(80), bool]) */;
  %593 = cast(meta[relay.Constant][48] /* ty=Tensor[(1800, 1), float32] */, dtype="float32") /* ty=Tensor[(1800, 1), float32] */;
  %594 = cast(%var_9875, dtype="bool") /* ty=Tensor[(160), bool] */;
  %595 = reshape(%593, newshape=[15, 10, 12]) /* ty=Tensor[(15, 10, 12), float32] */;
  %596 = reshape(%594, newshape=[2, 80]) /* ty=Tensor[(2, 80), bool] */;
  %597 = @func_5847(%595, %596) /* ty=(Tensor[(15, 10, 12), int16], Tensor[(2, 5, 16), bool], Tensor[(2, 80), bool], Tensor[(11, 8, 5), float32], Tensor[(55), float32]) */;
  %598 = %586.0;
  %599 = %589.2;
  %600 = %592.2;
  %601 = %597.3;
  (%598, %599, meta[relay.Constant][47] /* ty=Tensor[(396), float64] */, %600, %var_9864, %601, meta[relay.Constant][48] /* ty=Tensor[(1800, 1), float32] */, %var_9875)
}

def @func_7341(%var_7334: Tensor[(5, 8, 16), float64], %var_7338: Tensor[(192), int8]) -> (Tensor[(5, 8, 16), float64], Tensor[(3, 4, 16), int8], Tensor[(192), int8]) {
  %602 = cast(%var_7334, dtype="float64") /* ty=Tensor[(5, 8, 16), float64] */;
  %603 = cast(%var_7338, dtype="int8") /* ty=Tensor[(192), int8] */;
  %604 = cast(%var_7338, dtype="int8") /* ty=Tensor[(192), int8] */;
  %605 = reshape(%603, newshape=[3, 4, 16]) /* ty=Tensor[(3, 4, 16), int8] */;
  %606 = reshape(%604, newshape=[3, 4, 16]) /* ty=Tensor[(3, 4, 16), int8] */;
  %607 = asin(%602) /* ty=Tensor[(5, 8, 16), float64] */;
  %608 = @func_6647(%605, %606) /* ty=Tensor[(3, 4, 16), int8] */;
  (%607, %608, %var_7338)
}

def @func_7549(%var_7539: Tensor[(16, 2, 12), float64], %var_7540: Tensor[(16, 2, 12), float64]) -> (Tensor[(16, 2, 12), float64], Tensor[(16, 2, 12), float32]) {
  %609 = cast(%var_7540, dtype="float64") /* ty=Tensor[(16, 2, 12), float64] */;
  %610 = shape_of(%var_7539, dtype="int32") /* ty=Tensor[(3), int32] */;
  %611 = cast(%var_7539, dtype="float64") /* ty=Tensor[(16, 2, 12), float64] */;
  %612 = dyn.reshape(%609, %610, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %613 = cast(%var_7540, dtype="float32") /* ty=Tensor[(16, 2, 12), float32] */;
  %614 = floor_divide(%611, %612) /* ty=Tensor[(16, 2, 12), float64] */;
  %615 = asinh(%613) /* ty=Tensor[(16, 2, 12), float32] */;
  (%614, %615)
}

def @func_8933() -> (Tensor[(6, 3), float64],) {
  @func_8931() /* ty=(Tensor[(6, 3), float64],) */
}

def @func_9712() -> Tensor[(6, 3), float64] {
  %617 = fn () -> Tensor[(6, 3), float64] {
    %616 = @func_9326() /* ty=(Tensor[(6, 3), float64],) */;
    %616.0
  };
  %617() /* ty=Tensor[(6, 3), float64] */
}

def @func_5291(%var_5288: Tensor[(5, 1, 2), float64], %var_5289: int64, %var_5290: Tensor[(143), int64]) -> (Tensor[(5, 4, 2), float64], Tensor[(1, 13, 11), int64], int64, Tensor[(143), int64]) {
  %629 = fn (%var_5274: Tensor[(5, 1, 2), float64], %var_5282: int64, %var_5283: Tensor[(143), int64]) -> (Tensor[(5, 4, 2), float64], Tensor[(1, 13, 11), int64], int64, Tensor[(143), int64]) {
    %618 = cast(%var_5274, dtype="float64") /* ty=Tensor[(5, 1, 2), float64] */;
    %619 = cast(meta[relay.Constant][49] /* ty=Tensor[(5, 4, 2), float64] */, dtype="float64") /* ty=Tensor[(5, 4, 2), float64] */;
    %620 = cast(%var_5282, dtype="int64") /* ty=int64 */;
    %621 = cast(%var_5283, dtype="int64") /* ty=Tensor[(143), int64] */;
    %622 = cast(%var_5283, dtype="int64") /* ty=Tensor[(143), int64] */;
    %623 = reshape(%620, newshape=[]) /* ty=int64 */;
    %624 = reshape(%621, newshape=[1, 13, 11]) /* ty=Tensor[(1, 13, 11), int64] */;
    %625 = reshape(%622, newshape=[1, 13, 11]) /* ty=Tensor[(1, 13, 11), int64] */;
    %626 = @func_5084(%623, %624, %625) /* ty=(Tensor[(1, 13, 11), int64], Tensor[(?, 13, 11), uint16], Tensor[(1, 13, 11), float64], Tensor[(10, 4, 2), float64], Tensor[(1800), bool], Tensor[(80), bool], Tensor[(1, 13, 11), int32]) */;
    %627 = floor_mod(%618, %619) /* ty=Tensor[(5, 4, 2), float64] */;
    %628 = %626.0;
    (%627, %628, %var_5282, %var_5283)
  };
  %629(%var_5288, %var_5289, %var_5290) /* ty=(Tensor[(5, 4, 2), float64], Tensor[(1, 13, 11), int64], int64, Tensor[(143), int64]) */
}

def @func_3883(%var_3881: float64, %var_3882: Tensor[(168), int16]) -> (Tensor[(7, 11), float64], Tensor[(2, 40), bool], Tensor[(168), int16]) {
  %639 = fn (%var_3861: float64, %var_3869: Tensor[(168), int16]) -> (Tensor[(7, 11), float64], Tensor[(2, 40), bool], Tensor[(168), int16]) {
    %630 = cast(%var_3861, dtype="float64") /* ty=float64 */;
    %631 = cast(meta[relay.Constant][50] /* ty=Tensor[(7, 11), float64] */, dtype="float64") /* ty=Tensor[(7, 11), float64] */;
    %632 = cast(%var_3869, dtype="int16") /* ty=Tensor[(168), int16] */;
    %633 = cast(%var_3869, dtype="int16") /* ty=Tensor[(168), int16] */;
    %634 = reshape(%632, newshape=[12, 2, 7]) /* ty=Tensor[(12, 2, 7), int16] */;
    %635 = reshape(%633, newshape=[12, 2, 7]) /* ty=Tensor[(12, 2, 7), int16] */;
    %636 = @func_1704(%634, %635) /* ty=(Tensor[(12, 2, 7), bool], Tensor[(10, 4, 2), float64], Tensor[(2, 40), bool]) */;
    %637 = mod(%630, %631) /* ty=Tensor[(7, 11), float64] */;
    %638 = %636.2;
    (%637, %638, %var_3869)
  };
  %639(%var_3881, %var_3882) /* ty=(Tensor[(7, 11), float64], Tensor[(2, 40), bool], Tensor[(168), int16]) */
}

def @func_4862(%var_4856: float64, %var_4857: Tensor[(4, 7, 5), float64], %var_4858: Tensor[(160), bool], %var_4859: Tensor[(1800), bool], %var_4860: Tensor[(80), bool], %var_4861: Tensor[(2816), float64]) -> (Tensor[(4, 7, 5), float64], Tensor[(2, 5, 16), bool], Tensor[(160), bool], Tensor[(7, 14, 12), float64], Tensor[(1800), bool], Tensor[(80), bool], Tensor[(2816), float64], Tensor[(10, 4, 2), float64], Tensor[(450), float64]) {
  @func_4854(%var_4856, %var_4857, %var_4858, %var_4859, %var_4860, %var_4861) /* ty=(Tensor[(4, 7, 5), float64], Tensor[(2, 5, 16), bool], Tensor[(160), bool], Tensor[(7, 14, 12), float64], Tensor[(1800), bool], Tensor[(80), bool], Tensor[(2816), float64], Tensor[(10, 4, 2), float64], Tensor[(450), float64]) */
}

def @func_312(%var_282: Tensor[(10, 4, 2), bool]) -> (Tensor[(10, 4, 2), bool], Tensor[(10, 4, 2), float64]) {
  %640 = cast(%var_282, dtype="bool") /* ty=Tensor[(10, 4, 2), bool] */;
  %641 = shape_of(meta[relay.Constant][51] /* ty=Tensor[(10, 4, 2), bool] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %642 = cast(meta[relay.Constant][51] /* ty=Tensor[(10, 4, 2), bool] */, dtype="bool") /* ty=Tensor[(10, 4, 2), bool] */;
  %643 = dyn.reshape(%640, %641, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %644 = cast(meta[relay.Constant][51] /* ty=Tensor[(10, 4, 2), bool] */, dtype="float64") /* ty=Tensor[(10, 4, 2), float64] */;
  %645 = logical_or(%642, %643) /* ty=Tensor[(10, 4, 2), bool] */;
  %646 = tan(%644) /* ty=Tensor[(10, 4, 2), float64] */;
  (%645, %646)
}

def @func_9519(%var_9503: float64, %var_9510: Tensor[(143), int64], %var_9512: Tensor[(2816), float64]) -> (Tensor[(6, 3), float64], Tensor[(7, 11), float64], float64, Tensor[(3, 56), int16], Tensor[(2816), float64], Tensor[(120), uint16], Tensor[(600), uint16], Tensor[(143), int64], Tensor[(1800), bool], Tensor[(2816), float64]) {
  %647 = @func_9326() /* ty=(Tensor[(6, 3), float64],) */;
  %648 = cast(%var_9503, dtype="float64") /* ty=float64 */;
  %649 = cast(meta[relay.Constant][52] /* ty=Tensor[(3, 56), int16] */, dtype="int16") /* ty=Tensor[(3, 56), int16] */;
  %650 = reshape(%648, newshape=[]) /* ty=float64 */;
  %651 = reshape(%649, newshape=[168]) /* ty=Tensor[(168), int16] */;
  %652 = @func_3880(%650, %651) /* ty=(Tensor[(7, 11), float64], Tensor[(2, 40), bool], Tensor[(168), int16]) */;
  %653 = cast(meta[relay.Constant][53] /* ty=Tensor[(120), uint16] */, dtype="uint16") /* ty=Tensor[(120), uint16] */;
  %654 = cast(meta[relay.Constant][54] /* ty=Tensor[(600), uint16] */, dtype="uint16") /* ty=Tensor[(600), uint16] */;
  %655 = cast(%var_9503, dtype="int64") /* ty=int64 */;
  %656 = cast(%var_9510, dtype="int64") /* ty=Tensor[(143), int64] */;
  %657 = cast(meta[relay.Constant][55] /* ty=Tensor[(1800), bool] */, dtype="bool") /* ty=Tensor[(1800), bool] */;
  %658 = cast(%var_9512, dtype="float64") /* ty=Tensor[(2816), float64] */;
  %659 = reshape(%653, newshape=[10, 1, 12]) /* ty=Tensor[(10, 1, 12), uint16] */;
  %660 = reshape(%654, newshape=[10, 5, 12]) /* ty=Tensor[(10, 5, 12), uint16] */;
  %661 = reshape(%655, newshape=[]) /* ty=int64 */;
  %662 = reshape(%656, newshape=[143]) /* ty=Tensor[(143), int64] */;
  %663 = reshape(%657, newshape=[1800]) /* ty=Tensor[(1800), bool] */;
  %664 = reshape(%658, newshape=[2816]) /* ty=Tensor[(2816), float64] */;
  %665 = @func_5189(%659, %660, %661, %662, %663, %664) /* ty=(Tensor[(10, 5, 12), float32], Tensor[(?, 13, 11), uint16], int64, Tensor[(143), int64], Tensor[(10, 1, 12), float64], Tensor[(15, 8, 15), uint32], Tensor[(1800), bool], Tensor[(80), bool], Tensor[(11, 16, 16), float64], Tensor[(2816), float64], Tensor[(360, 1), float32], Tensor[(390), float64]) */;
  %666 = %647.0;
  %667 = %652.0;
  %668 = %665.9;
  (%666, %667, %var_9503, meta[relay.Constant][52] /* ty=Tensor[(3, 56), int16] */, %668, meta[relay.Constant][53] /* ty=Tensor[(120), uint16] */, meta[relay.Constant][54] /* ty=Tensor[(600), uint16] */, %var_9510, meta[relay.Constant][55] /* ty=Tensor[(1800), bool] */, %var_9512)
}

def @func_7175(%var_7172: Tensor[(13, 4, 7), int32], %var_7173: Tensor[(13, 4, 7), int32], %var_7174: Tensor[(168), int16]) -> (Tensor[(13, 4, 7), bool], Tensor[(10, 4, 2), float64], Tensor[(168), int16], Tensor[(8, 8, 14), float64], Tensor[(14, 64), float64]) {
  %684 = fn (%var_7132: Tensor[(13, 4, 7), int32], %var_7133: Tensor[(13, 4, 7), int32], %var_7152: Tensor[(168), int16]) -> (Tensor[(13, 4, 7), bool], Tensor[(10, 4, 2), float64], Tensor[(168), int16], Tensor[(8, 8, 14), float64], Tensor[(14, 64), float64]) {
    %669 = cast(%var_7133, dtype="bool") /* ty=Tensor[(13, 4, 7), bool] */;
    %670 = shape_of(%var_7132, dtype="int32") /* ty=Tensor[(3), int32] */;
    %671 = cast(%var_7132, dtype="bool") /* ty=Tensor[(13, 4, 7), bool] */;
    %672 = dyn.reshape(%669, %670, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    %673 = cast(%var_7152, dtype="int16") /* ty=Tensor[(168), int16] */;
    %674 = cast(%var_7152, dtype="int16") /* ty=Tensor[(168), int16] */;
    %675 = reshape(%673, newshape=[12, 2, 7]) /* ty=Tensor[(12, 2, 7), int16] */;
    %676 = reshape(%674, newshape=[12, 2, 7]) /* ty=Tensor[(12, 2, 7), int16] */;
    %677 = @func_1704(%675, %676) /* ty=(Tensor[(12, 2, 7), bool], Tensor[(10, 4, 2), float64], Tensor[(2, 40), bool]) */;
    %678 = cast(meta[relay.Constant][56] /* ty=Tensor[(14, 64), float64] */, dtype="float64") /* ty=Tensor[(14, 64), float64] */;
    %679 = reshape(%678, newshape=[8, 8, 14]) /* ty=Tensor[(8, 8, 14), float64] */;
    %680 = @func_2581(%679) /* ty=(Tensor[(8, 8, 14), float64], Tensor[(11, 16, 16), float64], Tensor[(1, 2816), float64]) */;
    %681 = greater(%671, %672) /* ty=Tensor[(13, 4, 7), bool] */;
    %682 = %677.1;
    %683 = %680.0;
    (%681, %682, %var_7152, %683, meta[relay.Constant][56] /* ty=Tensor[(14, 64), float64] */)
  };
  %684(%var_7172, %var_7173, %var_7174) /* ty=(Tensor[(13, 4, 7), bool], Tensor[(10, 4, 2), float64], Tensor[(168), int16], Tensor[(8, 8, 14), float64], Tensor[(14, 64), float64]) */
}

def @func_1725(%var_1716: Tensor[(11, 16, 16), float64]) -> (Tensor[(11, 16, 16), float64],) {
  %685 = cast(2.45904f64 /* ty=float64 */, dtype="float64") /* ty=float64 */;
  %686 = cast(%var_1716, dtype="float64") /* ty=Tensor[(11, 16, 16), float64] */;
  %687 = floor_mod(%685, %686) /* ty=Tensor[(11, 16, 16), float64] */;
  (%687,)
}

def @func_7367(%var_7366: Tensor[(11, 4, 6), float64]) -> (Tensor[(11, 4, 6), float64],) {
  %690 = fn (%var_7347: Tensor[(11, 4, 6), float64]) -> (Tensor[(11, 4, 6), float64],) {
    %688 = cast(%var_7347, dtype="float64") /* ty=Tensor[(11, 4, 6), float64] */;
    %689 = atanh(%688) /* ty=Tensor[(11, 4, 6), float64] */;
    (%689,)
  };
  %690(%var_7366) /* ty=(Tensor[(11, 4, 6), float64],) */
}

def @func_2584(%var_2582: Tensor[(8, 8, 14), float64]) -> (Tensor[(8, 8, 14), float64], Tensor[(11, 16, 16), float64], Tensor[(1, 2816), float64]) {
  @func_2581(%var_2582) /* ty=(Tensor[(8, 8, 14), float64], Tensor[(11, 16, 16), float64], Tensor[(1, 2816), float64]) */
}

def @func_9886(%var_9884: bool, %var_9885: Tensor[(160), bool]) -> (Tensor[(6, 3), float64], Tensor[(2, 40), float64], Tensor[(396), float64], Tensor[(80), bool], bool, Tensor[(11, 8, 5), float32], Tensor[(1800, 1), float32], Tensor[(160), bool]) {
  @func_9882(%var_9884, %var_9885) /* ty=(Tensor[(6, 3), float64], Tensor[(2, 40), float64], Tensor[(396), float64], Tensor[(80), bool], bool, Tensor[(11, 8, 5), float32], Tensor[(1800, 1), float32], Tensor[(160), bool]) */
}

def @func_7050(%var_7048: Tensor[(13, 5, 8), float32]) -> (Tensor[(13, 5, 8), float32],) {
  @func_7047(%var_7048) /* ty=(Tensor[(13, 5, 8), float32],) */
}

def @func_4016(%var_4014: Tensor[(10, 15, 3), float64]) -> (Tensor[(10, 15, 3), int8], Tensor[(10, 4, 2), float64], Tensor[(360), float32]) {
  @func_4013(%var_4014) /* ty=(Tensor[(10, 15, 3), int8], Tensor[(10, 4, 2), float64], Tensor[(360), float32]) */
}

def @func_5310(%var_5300: Tensor[(11, 1, 5), float32]) -> (Tensor[(11, 8, 5), float32],) {
  %691 = cast(%var_5300, dtype="float32") /* ty=Tensor[(11, 1, 5), float32] */;
  %692 = cast(meta[relay.Constant][57] /* ty=Tensor[(11, 8, 5), float32] */, dtype="float32") /* ty=Tensor[(11, 8, 5), float32] */;
  %693 = power(%691, %692) /* ty=Tensor[(11, 8, 5), float32] */;
  (%693,)
}

def @func_9077(%var_9075: Tensor[(8, 11, 14), int8], %var_9076: Tensor[(8, 11, 14), int8]) -> (Tensor[(10, 4, 2), float64], Tensor[(8, 11, 14), float32], Tensor[(405), float64], Tensor[(2925), float64], Tensor[(450), float32], bool, Tensor[(18, 100), bool], Tensor[(6, 3), float64], Tensor[(15, 8, 15), float64]) {
  @func_9073(%var_9075, %var_9076) /* ty=(Tensor[(10, 4, 2), float64], Tensor[(8, 11, 14), float32], Tensor[(405), float64], Tensor[(2925), float64], Tensor[(450), float32], bool, Tensor[(18, 100), bool], Tensor[(6, 3), float64], Tensor[(15, 8, 15), float64]) */
}

def @func_3757(%var_3749: int8, %var_3750: Tensor[(2, 15, 13), int8]) -> Tensor[(2, 15, 13), int8] {
  %694 = cast(%var_3749, dtype="int8") /* ty=int8 */;
  %695 = cast(%var_3750, dtype="int8") /* ty=Tensor[(2, 15, 13), int8] */;
  left_shift(%694, %695) /* ty=Tensor[(2, 15, 13), int8] */
}

def @func_3578(%var_3576: Tensor[(13, 3, 10), float64], %var_3577: Tensor[(13, 3, 10), float64]) -> (Tensor[(13, 3, 10), float64], Tensor[(10, 4, 9), int64], Tensor[(360, 1), float32]) {
  %707 = fn (%var_3563: Tensor[(13, 3, 10), float64], %var_3564: Tensor[(13, 3, 10), float64]) -> (Tensor[(13, 3, 10), float64], Tensor[(10, 4, 9), int64], Tensor[(360, 1), float32]) {
    %696 = cast(%var_3564, dtype="float64") /* ty=Tensor[(13, 3, 10), float64] */;
    %697 = shape_of(%var_3563, dtype="int32") /* ty=Tensor[(3), int32] */;
    %698 = cast(%var_3563, dtype="float64") /* ty=Tensor[(13, 3, 10), float64] */;
    %699 = dyn.reshape(%696, %697, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
    %700 = cast(meta[relay.Constant][58] /* ty=Tensor[(360, 1), float32] */, dtype="float32") /* ty=Tensor[(360, 1), float32] */;
    %701 = cast(meta[relay.Constant][58] /* ty=Tensor[(360, 1), float32] */, dtype="float32") /* ty=Tensor[(360, 1), float32] */;
    %702 = reshape(%700, newshape=[10, 4, 9]) /* ty=Tensor[(10, 4, 9), float32] */;
    %703 = reshape(%701, newshape=[10, 4, 9]) /* ty=Tensor[(10, 4, 9), float32] */;
    %704 = @func_689(%702, %703) /* ty=(Tensor[(10, 4, 9), int64], Tensor[(10, 4, 2), float64], Tensor[(80), bool]) */;
    %705 = mod(%698, %699) /* ty=Tensor[(13, 3, 10), float64] */;
    %706 = %704.0;
    (%705, %706, meta[relay.Constant][58] /* ty=Tensor[(360, 1), float32] */)
  };
  %707(%var_3576, %var_3577) /* ty=(Tensor[(13, 3, 10), float64], Tensor[(10, 4, 9), int64], Tensor[(360, 1), float32]) */
}

def @func_4271(%var_4268: Tensor[(3, 2, 9), int32], %var_4269: Tensor[(390), int8], %var_4270: Tensor[(160), bool]) -> (Tensor[(3, 2, 9), int32], Tensor[(450), uint64], Tensor[(2, 15, 13), int8], int8, Tensor[(390), int8], Tensor[(2, 5, 16), bool], Tensor[(160), bool]) {
  %731 = fn (%var_4201: Tensor[(3, 2, 9), int32], %var_4246: Tensor[(390), int8], %var_4253: Tensor[(160), bool]) -> (Tensor[(3, 2, 9), int32], Tensor[(450), uint64], Tensor[(2, 15, 13), int8], int8, Tensor[(390), int8], Tensor[(2, 5, 16), bool], Tensor[(160), bool]) {
    %708 = cast(meta[relay.Constant][59] /* ty=Tensor[(3, 2, 9), int32] */, dtype="int32") /* ty=Tensor[(3, 2, 9), int32] */;
    %709 = shape_of(%var_4201, dtype="int32") /* ty=Tensor[(3), int32] */;
    %710 = cast(%var_4201, dtype="int32") /* ty=Tensor[(3, 2, 9), int32] */;
    %711 = dyn.reshape(%708, %709, newshape=[]) /* ty=Tensor[(?, ?, ?), int32] */;
    %712 = cast(meta[relay.Constant][60] /* ty=Tensor[(450), float64] */, dtype="float64") /* ty=Tensor[(450), float64] */;
    %713 = reshape(%712, newshape=[10, 15, 3]) /* ty=Tensor[(10, 15, 3), float64] */;
    %714 = @func_4013(%713) /* ty=(Tensor[(10, 15, 3), int8], Tensor[(10, 4, 2), float64], Tensor[(360), float32]) */;
    %715 = %714.0;
    %716 = cast(%715, dtype="uint64") /* ty=Tensor[(10, 15, 3), uint64] */;
    %717 = shape_of(meta[relay.Constant][60] /* ty=Tensor[(450), float64] */, dtype="int32") /* ty=Tensor[(1), int32] */;
    %718 = cast(meta[relay.Constant][60] /* ty=Tensor[(450), float64] */, dtype="uint64") /* ty=Tensor[(450), uint64] */;
    %719 = dyn.reshape(%716, %717, newshape=[]) /* ty=Tensor[(?), uint64] */;
    %720 = cast(meta[relay.Constant][61] /* ty=int8 */, dtype="int8") /* ty=int8 */;
    %721 = cast(%var_4246, dtype="int8") /* ty=Tensor[(390), int8] */;
    %722 = reshape(%720, newshape=[]) /* ty=int8 */;
    %723 = reshape(%721, newshape=[2, 15, 13]) /* ty=Tensor[(2, 15, 13), int8] */;
    %724 = cast(%var_4253, dtype="bool") /* ty=Tensor[(160), bool] */;
    %725 = reshape(%724, newshape=[2, 5, 16]) /* ty=Tensor[(2, 5, 16), bool] */;
    %726 = @func_1005(%725) /* ty=(Tensor[(2, 5, 16), bool],) */;
    %727 = multiply(%710, %711) /* ty=Tensor[(3, 2, 9), int32] */;
    %728 = add(%718, %719) /* ty=Tensor[(450), uint64] */;
    %729 = @func_3757(%722, %723) /* ty=Tensor[(2, 15, 13), int8] */;
    %730 = %726.0;
    (%727, %728, %729, meta[relay.Constant][61] /* ty=int8 */, %var_4246, %730, %var_4253)
  };
  %731(%var_4268, %var_4269, %var_4270) /* ty=(Tensor[(3, 2, 9), int32], Tensor[(450), uint64], Tensor[(2, 15, 13), int8], int8, Tensor[(390), int8], Tensor[(2, 5, 16), bool], Tensor[(160), bool]) */
}

def @func_6232(%var_6231: Tensor[(15, 2, 5), float32]) -> (Tensor[(15, 2, 5), float32], Tensor[(15, 2, 5), float64], Tensor[(15, 2, 5), float64]) {
  %738 = fn (%var_6218: Tensor[(15, 2, 5), float32]) -> (Tensor[(15, 2, 5), float32], Tensor[(15, 2, 5), float64], Tensor[(15, 2, 5), float64]) {
    %732 = cast(%var_6218, dtype="float32") /* ty=Tensor[(15, 2, 5), float32] */;
    %733 = cast(%var_6218, dtype="float64") /* ty=Tensor[(15, 2, 5), float64] */;
    %734 = cast(%var_6218, dtype="float64") /* ty=Tensor[(15, 2, 5), float64] */;
    %735 = asinh(%732) /* ty=Tensor[(15, 2, 5), float32] */;
    %736 = asin(%733) /* ty=Tensor[(15, 2, 5), float64] */;
    %737 = tan(%734) /* ty=Tensor[(15, 2, 5), float64] */;
    (%735, %736, %737)
  };
  %738(%var_6231) /* ty=(Tensor[(15, 2, 5), float32], Tensor[(15, 2, 5), float64], Tensor[(15, 2, 5), float64]) */
}

/* For debugging purposes the metadata section has been omitted.
 * If you would like to see the full metadata section you can set the 
 * option to `True` when invoking `astext`. 
 *//home/yujunzhe/Hirgen_generated/tvm0.8_test/HirGen395/build/output.py:1378: DeprecationWarning: legacy graph executor behavior of producing json / lib / params will be removed in the next release. Please see documents of tvm.contrib.graph_executor.GraphModule for the  new recommended usage.
  graph, lib, params = relay.build(mod, target='llvm')
/home/yujunzhe/tvm/python/tvm/contrib/graph_runtime.py:25: UserWarning: This function has been moved to tvm.contrib.graph_executor and will be removed in the next TVM release
  warnings.warn(

===================================
Traceback (most recent call last):
  File "/home/yujunzhe/Hirgen_generated/tvm0.8_test/HirGen395/build/output.py", line 1383, in <module>
    graph, lib, params = relay.build(mod, target='cuda')
  File "/home/yujunzhe/tvm/python/tvm/relay/build_module.py", line 369, in build
    executor_config, runtime_mod, params = bld_mod.build(
  File "/home/yujunzhe/tvm/python/tvm/relay/build_module.py", line 177, in build
    self._build(mod, target, target_host, executor, mod_name)
  File "/home/yujunzhe/tvm/python/tvm/_ffi/_ctypes/packed_func.py", line 237, in __call__
    raise get_last_ffi_error()
tvm._ffi.base.TVMError: Traceback (most recent call last):
  7: TVMFuncCall
  6: std::_Function_handler<void (tvm::runtime::TVMArgs, tvm::runtime::TVMRetValue*), tvm::relay::backend::RelayBuildModule::GetFunction(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, tvm::runtime::ObjectPtr<tvm::runtime::Object> const&)::{lambda(tvm::runtime::TVMArgs, tvm::runtime::TVMRetValue*)#3}>::_M_invoke(std::_Any_data const&, tvm::runtime::TVMArgs&&, tvm::runtime::TVMRetValue*&&)
  5: tvm::relay::backend::RelayBuildModule::BuildRelay(tvm::IRModule, std::unordered_map<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, tvm::runtime::NDArray, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, tvm::runtime::NDArray> > > const&, tvm::runtime::String)
  4: tvm::build(tvm::runtime::Map<tvm::Target, tvm::IRModule, void, void> const&, tvm::Target const&)
  3: tvm::codegen::Build(tvm::IRModule, tvm::Target)
  2: tvm::runtime::TypedPackedFunc<tvm::runtime::Module (tvm::IRModule, tvm::Target)>::AssignTypedLambda<tvm::runtime::Module (*)(tvm::IRModule, tvm::Target)>(tvm::runtime::Module (*)(tvm::IRModule, tvm::Target), std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >)::{lambda(tvm::runtime::TVMArgs const&, tvm::runtime::TVMRetValue*)#1}::operator()(tvm::runtime::TVMArgs const&, tvm::runtime::TVMRetValue*) const
  1: tvm::codegen::BuildCUDA(tvm::IRModule, tvm::Target)
  0: std::_Function_handler<void (tvm::runtime::TVMArgs, tvm::runtime::TVMRetValue*), TVMFuncCreateFromCFunc::{lambda(tvm::runtime::TVMArgs, tvm::runtime::TVMRetValue*)#2}>::_M_invoke(std::_Any_data const&, tvm::runtime::TVMArgs&&, tvm::runtime::TVMRetValue*&&) [clone .cold]
  File "/home/yujunzhe/tvm/python/tvm/_ffi/_ctypes/packed_func.py", line 81, in cfun
    rv = local_pyfunc(*pyargs)
  File "/home/yujunzhe/tvm/python/tvm/autotvm/measure/measure_methods.py", line 789, in tvm_callback_cuda_compile
    ptx = nvcc.compile_cuda(code, target=target, arch=AutotvmGlobalScope.current.cuda_target_arch)
  File "/home/yujunzhe/tvm/python/tvm/contrib/nvcc.py", line 108, in compile_cuda
    raise RuntimeError(msg)
RuntimeError: 
#ifdef _WIN32
  using uint = unsigned int;
  using uchar = unsigned char;
  using ushort = unsigned short;
  using int64_t = long long;
  using uint64_t = unsigned long long;
#else
  #define uint unsigned int
  #define uchar unsigned char
  #define ushort unsigned short
  #define int64_t long long
  #define uint64_t unsigned long long
#endif
extern "C" __global__ void __launch_bounds__(220) tvmgen_default_fused_right_shift_kernel0(uint* __restrict__ T_right_shift, uint* __restrict__ placeholder, uint* __restrict__ placeholder1) {
  T_right_shift[(((int)threadIdx.x))] = (placeholder[(0)] >> placeholder1[(((int)threadIdx.x))]);
}


Compilation error:
In file included from /usr/local/cuda/bin/../targets/x86_64-linux/include/cuda_runtime.h:82,
                 from <command-line>:
/usr/local/cuda/bin/../targets/x86_64-linux/include/crt/host_config.h:143:2: error: #error -- unsupported GNU version! gcc versions later than 12 are not supported! The nvcc flag '-allow-unsupported-compiler' can be used to override this version check; however, using an unsupported host compiler may cause compilation failure or incorrect run time execution. Use at your own risk.
  143 | #error -- unsupported GNU version! gcc versions later than 12 are not supported! The nvcc flag '-allow-unsupported-compiler' can be used to override this version check; however, using an unsupported host compiler may cause compilation failure or incorrect run time execution. Use at your own risk.
      |  ^~~~~


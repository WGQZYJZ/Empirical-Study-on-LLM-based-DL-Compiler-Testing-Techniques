import tvm
from tvm import relay
from tvm.ir.transform import Sequential
from tvm.contrib import graph_runtime
import numpy as np
mod = tvm.IRModule()
mutated_mod = tvm.IRModule()
const_281 = relay.const([[[False,False],[False,True],[True,False],[False,False]],[[True,True],[False,False],[False,True],[True,False]],[[False,False],[True,False],[True,True],[False,False]],[[False,True],[True,True],[False,False],[True,True]],[[False,False],[False,True],[False,False],[False,True]],[[True,False],[True,True],[False,False],[True,False]],[[False,False],[False,True],[False,False],[True,False]],[[True,False],[True,False],[False,False],[True,False]],[[False,True],[False,False],[True,False],[True,False]],[[False,False],[True,False],[True,True],[True,True]]], dtype = "bool")#candidate|281|(10, 4, 2)|const|bool
var_282 = relay.var("var_282", dtype = "bool", shape = (10, 4, 2))#candidate|282|(10, 4, 2)|var|bool
bop_283 = relay.logical_or(const_281.astype('bool'), relay.reshape(var_282.astype('bool'), relay.shape_of(const_281))) # shape=(10, 4, 2)
uop_309 = relay.tan(const_281.astype('float64')) # shape=(10, 4, 2)
output = relay.Tuple([bop_283,uop_309,])
output2 = relay.Tuple([bop_283,uop_309,])
func_312 = relay.Function([var_282,], output)
mod['func_312'] = func_312
mod = relay.transform.InferType()(mod)
mutated_mod['func_312'] = func_312
mutated_mod = relay.transform.InferType()(mutated_mod)
var_313 = relay.var("var_313", dtype = "bool", shape = (10, 4, 2))#candidate|313|(10, 4, 2)|var|bool
func_312_call = mutated_mod.get_global_var('func_312')
call_314 = func_312_call(var_313)
output = call_314
func_315 = relay.Function([var_313], output)
mutated_mod['func_315'] = func_315
mutated_mod = relay.transform.InferType()(mutated_mod)
var_656 = relay.var("var_656", dtype = "float32", shape = (10, 4, 9))#candidate|656|(10, 4, 9)|var|float32
var_657 = relay.var("var_657", dtype = "float32", shape = (10, 4, 9))#candidate|657|(10, 4, 9)|var|float32
bop_658 = relay.divide(var_656.astype('float32'), relay.reshape(var_657.astype('float32'), relay.shape_of(var_656))) # shape=(10, 4, 9)
bop_665 = relay.add(var_657.astype('int64'), relay.reshape(bop_658.astype('int64'), relay.shape_of(var_657))) # shape=(10, 4, 9)
func_312_call = mod.get_global_var('func_312')
func_315_call = mutated_mod.get_global_var('func_315')
const_683 = relay.const([False,False,False,True,False,True,False,True,True,False,True,False,True,True,False,False,False,True,False,True,True,False,False,False,True,True,True,False,False,True,False,True,False,False,False,False,True,False,True,False,False,False,True,False,False,True,False,False,True,False,False,False,False,False,True,False,True,False,False,False,False,False,True,False,False,True,False,True,True,True,True,False,True,False,False,True,False,False,False,True], dtype = "bool")#candidate|683|(80,)|const|bool
call_682 = relay.TupleGetItem(func_312_call(relay.reshape(const_683.astype('bool'), [10, 4, 2])), 1)
call_684 = relay.TupleGetItem(func_315_call(relay.reshape(const_683.astype('bool'), [10, 4, 2])), 1)
output = relay.Tuple([bop_665,call_682,const_683,])
output2 = relay.Tuple([bop_665,call_684,const_683,])
func_689 = relay.Function([var_656,var_657,], output)
mod['func_689'] = func_689
mod = relay.transform.InferType()(mod)
var_690 = relay.var("var_690", dtype = "float32", shape = (10, 4, 9))#candidate|690|(10, 4, 9)|var|float32
var_691 = relay.var("var_691", dtype = "float32", shape = (10, 4, 9))#candidate|691|(10, 4, 9)|var|float32
output = func_689(var_690,var_691,)
func_692 = relay.Function([var_690,var_691,], output)
mutated_mod['func_692'] = func_692
mutated_mod = relay.transform.InferType()(mutated_mod)
var_903 = relay.var("var_903", dtype = "bool", shape = ())#candidate|903|()|var|bool
var_904 = relay.var("var_904", dtype = "bool", shape = (15, 8, 15))#candidate|904|(15, 8, 15)|var|bool
bop_905 = relay.logical_and(var_903.astype('bool'), var_904.astype('bool')) # shape=(15, 8, 15)
var_919 = relay.var("var_919", dtype = "bool", shape = (15, 8, 15))#candidate|919|(15, 8, 15)|var|bool
bop_920 = relay.bitwise_xor(bop_905.astype('uint32'), relay.reshape(var_919.astype('uint32'), relay.shape_of(bop_905))) # shape=(15, 8, 15)
func_312_call = mod.get_global_var('func_312')
func_315_call = mutated_mod.get_global_var('func_315')
var_925 = relay.var("var_925", dtype = "bool", shape = (1, 80))#candidate|925|(1, 80)|var|bool
call_924 = relay.TupleGetItem(func_312_call(relay.reshape(var_925.astype('bool'), [10, 4, 2])), 1)
call_926 = relay.TupleGetItem(func_315_call(relay.reshape(var_925.astype('bool'), [10, 4, 2])), 1)
uop_927 = relay.sqrt(bop_905.astype('float64')) # shape=(15, 8, 15)
var_940 = relay.var("var_940", dtype = "float64", shape = (15, 8, 15))#candidate|940|(15, 8, 15)|var|float64
bop_941 = relay.left_shift(uop_927.astype('uint64'), relay.reshape(var_940.astype('uint64'), relay.shape_of(uop_927))) # shape=(15, 8, 15)
output = relay.Tuple([bop_920,call_924,var_925,bop_941,])
output2 = relay.Tuple([bop_920,call_926,var_925,bop_941,])
func_956 = relay.Function([var_903,var_904,var_919,var_925,var_940,], output)
mod['func_956'] = func_956
mod = relay.transform.InferType()(mod)
var_957 = relay.var("var_957", dtype = "bool", shape = ())#candidate|957|()|var|bool
var_958 = relay.var("var_958", dtype = "bool", shape = (15, 8, 15))#candidate|958|(15, 8, 15)|var|bool
var_959 = relay.var("var_959", dtype = "bool", shape = (15, 8, 15))#candidate|959|(15, 8, 15)|var|bool
var_960 = relay.var("var_960", dtype = "bool", shape = (1, 80))#candidate|960|(1, 80)|var|bool
var_961 = relay.var("var_961", dtype = "float64", shape = (15, 8, 15))#candidate|961|(15, 8, 15)|var|float64
output = func_956(var_957,var_958,var_959,var_960,var_961,)
func_962 = relay.Function([var_957,var_958,var_959,var_960,var_961,], output)
mutated_mod['func_962'] = func_962
mutated_mod = relay.transform.InferType()(mutated_mod)
const_982 = relay.const(False, dtype = "bool")#candidate|982|()|const|bool
var_983 = relay.var("var_983", dtype = "bool", shape = (2, 5, 16))#candidate|983|(2, 5, 16)|var|bool
bop_984 = relay.logical_and(const_982.astype('bool'), var_983.astype('bool')) # shape=(2, 5, 16)
output = relay.Tuple([bop_984,])
output2 = relay.Tuple([bop_984,])
func_1005 = relay.Function([var_983,], output)
mod['func_1005'] = func_1005
mod = relay.transform.InferType()(mod)
mutated_mod['func_1005'] = func_1005
mutated_mod = relay.transform.InferType()(mutated_mod)
var_1006 = relay.var("var_1006", dtype = "bool", shape = (2, 5, 16))#candidate|1006|(2, 5, 16)|var|bool
func_1005_call = mutated_mod.get_global_var('func_1005')
call_1007 = func_1005_call(var_1006)
output = call_1007
func_1008 = relay.Function([var_1006], output)
mutated_mod['func_1008'] = func_1008
mutated_mod = relay.transform.InferType()(mutated_mod)
var_1010 = relay.var("var_1010", dtype = "bool", shape = ())#candidate|1010|()|var|bool
const_1011 = relay.const([[[False,False,False,False,False,False],[True,True,False,True,True,True],[True,False,True,False,True,False],[True,True,True,True,True,False],[True,False,True,False,True,False],[True,True,True,True,True,True],[True,False,False,True,True,True],[True,True,True,False,True,True],[False,False,False,True,True,False],[True,True,False,False,True,True],[True,False,True,False,True,False],[True,False,True,True,False,False],[False,True,True,False,True,False],[True,True,True,True,True,False],[True,False,True,False,True,True]],[[True,False,True,False,False,True],[True,True,True,False,False,True],[False,False,False,False,False,True],[False,True,True,True,True,False],[False,False,False,True,False,True],[False,False,True,False,False,True],[True,True,False,False,True,False],[False,False,True,False,False,True],[False,False,True,True,False,False],[True,False,False,True,True,True],[True,False,True,False,False,True],[False,True,True,False,True,False],[True,True,False,False,False,False],[True,False,True,False,True,True],[False,False,True,True,True,False]],[[False,False,False,True,True,False],[False,True,True,True,True,True],[False,False,False,False,False,False],[True,False,False,False,False,True],[True,True,True,False,False,True],[False,False,True,True,True,False],[True,True,True,True,True,True],[False,True,True,False,True,False],[True,False,False,True,False,False],[True,True,True,False,True,True],[True,False,True,True,True,False],[True,False,False,True,True,True],[False,True,False,True,False,True],[True,True,False,True,False,False],[False,True,False,True,False,True]],[[True,True,True,False,False,False],[True,False,True,True,True,False],[False,True,False,False,False,False],[True,False,True,True,True,True],[False,True,True,False,True,True],[True,False,False,True,False,True],[True,True,True,False,False,False],[True,False,True,True,False,True],[True,False,True,False,True,True],[True,True,False,False,True,True],[True,True,True,False,False,False],[True,True,True,False,False,False],[False,True,False,True,False,True],[False,True,True,False,True,False],[True,False,False,True,True,True]],[[True,False,False,False,False,False],[False,True,False,False,True,False],[False,True,True,False,False,True],[True,True,False,False,True,True],[True,False,True,True,True,False],[False,False,True,True,True,True],[True,True,True,True,True,False],[True,True,False,False,False,False],[True,True,True,True,False,False],[False,True,False,False,False,False],[False,False,False,True,True,True],[True,True,True,False,False,False],[False,False,False,False,False,False],[True,False,True,False,True,True],[True,False,False,True,False,False]],[[True,False,True,False,False,False],[True,True,True,False,True,False],[True,True,False,True,False,False],[True,True,False,False,True,False],[False,False,False,False,False,False],[True,True,False,False,True,False],[False,True,True,False,True,False],[False,False,False,False,True,False],[False,False,True,True,True,False],[True,True,True,True,True,True],[True,False,False,True,False,False],[False,True,True,True,True,False],[False,True,True,False,True,False],[False,True,True,True,False,False],[True,True,True,False,False,False]],[[True,True,True,False,True,True],[False,True,False,True,False,True],[True,False,False,False,False,True],[True,False,True,False,True,True],[False,True,True,True,True,True],[True,True,True,False,True,False],[False,True,True,False,False,True],[False,True,False,False,False,False],[False,True,True,True,True,False],[False,True,True,True,False,True],[True,True,False,False,False,True],[False,False,False,True,False,False],[False,False,True,False,True,True],[True,True,False,False,False,True],[False,False,False,False,False,False]],[[True,True,False,True,True,False],[False,True,False,False,False,False],[False,False,True,True,True,False],[True,False,True,True,False,True],[True,False,True,True,False,True],[False,True,False,False,False,True],[False,False,False,False,False,False],[False,False,True,True,False,False],[True,True,False,False,False,False],[True,True,False,True,True,True],[False,True,False,True,True,True],[False,True,True,True,True,False],[True,True,False,False,True,False],[False,False,True,False,True,False],[False,False,True,True,True,False]]], dtype = "bool")#candidate|1011|(8, 15, 6)|const|bool
bop_1012 = relay.logical_and(var_1010.astype('bool'), const_1011.astype('bool')) # shape=(8, 15, 6)
func_312_call = mod.get_global_var('func_312')
func_315_call = mutated_mod.get_global_var('func_315')
const_1031 = relay.const([True,True,True,True,False,False,False,False,False,False,True,True,True,False,False,False,False,False,True,False,False,True,True,False,False,False,True,True,True,True,True,True,True,False,False,True,True,False,True,True,False,False,False,False,True,False,False,True,True,True,True,True,False,False,False,True,False,True,False,False,True,True,True,False,True,True,True,False,True,True,False,False,True,False,False,False,True,False,False,False], dtype = "bool")#candidate|1031|(80,)|const|bool
call_1030 = relay.TupleGetItem(func_312_call(relay.reshape(const_1031.astype('bool'), [10, 4, 2])), 1)
call_1032 = relay.TupleGetItem(func_315_call(relay.reshape(const_1031.astype('bool'), [10, 4, 2])), 1)
output = relay.Tuple([bop_1012,call_1030,const_1031,])
output2 = relay.Tuple([bop_1012,call_1032,const_1031,])
func_1044 = relay.Function([var_1010,], output)
mod['func_1044'] = func_1044
mod = relay.transform.InferType()(mod)
var_1045 = relay.var("var_1045", dtype = "bool", shape = ())#candidate|1045|()|var|bool
output = func_1044(var_1045)
func_1046 = relay.Function([var_1045], output)
mutated_mod['func_1046'] = func_1046
mutated_mod = relay.transform.InferType()(mutated_mod)
var_1681 = relay.var("var_1681", dtype = "int16", shape = (12, 2, 7))#candidate|1681|(12, 2, 7)|var|int16
var_1682 = relay.var("var_1682", dtype = "int16", shape = (12, 2, 7))#candidate|1682|(12, 2, 7)|var|int16
bop_1683 = relay.less_equal(var_1681.astype('bool'), relay.reshape(var_1682.astype('bool'), relay.shape_of(var_1681))) # shape=(12, 2, 7)
func_312_call = mod.get_global_var('func_312')
func_315_call = mutated_mod.get_global_var('func_315')
const_1699 = relay.const([[False,True,True,False,False,True,True,False,False,True,False,True,False,False,True,False,True,False,True,True,False,True,True,True,False,False,True,True,False,True,True,False,False,False,False,False,True,False,True,False],[True,True,True,False,True,True,False,False,True,False,False,True,True,True,False,True,True,False,True,False,True,False,False,True,False,True,False,True,True,True,True,False,False,True,False,False,False,True,False,True]], dtype = "bool")#candidate|1699|(2, 40)|const|bool
call_1698 = relay.TupleGetItem(func_312_call(relay.reshape(const_1699.astype('bool'), [10, 4, 2])), 1)
call_1700 = relay.TupleGetItem(func_315_call(relay.reshape(const_1699.astype('bool'), [10, 4, 2])), 1)
output = relay.Tuple([bop_1683,call_1698,const_1699,])
output2 = relay.Tuple([bop_1683,call_1700,const_1699,])
func_1704 = relay.Function([var_1681,var_1682,], output)
mod['func_1704'] = func_1704
mod = relay.transform.InferType()(mod)
mutated_mod['func_1704'] = func_1704
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1704_call = mutated_mod.get_global_var('func_1704')
var_1706 = relay.var("var_1706", dtype = "int16", shape = (12, 2, 7))#candidate|1706|(12, 2, 7)|var|int16
var_1707 = relay.var("var_1707", dtype = "int16", shape = (12, 2, 7))#candidate|1707|(12, 2, 7)|var|int16
call_1705 = func_1704_call(var_1706,var_1707,)
output = call_1705
func_1708 = relay.Function([var_1706,var_1707,], output)
mutated_mod['func_1708'] = func_1708
mutated_mod = relay.transform.InferType()(mutated_mod)
const_1715 = relay.const(2.459041, dtype = "float64")#candidate|1715|()|const|float64
var_1716 = relay.var("var_1716", dtype = "float64", shape = (11, 16, 16))#candidate|1716|(11, 16, 16)|var|float64
bop_1717 = relay.floor_mod(const_1715.astype('float64'), var_1716.astype('float64')) # shape=(11, 16, 16)
output = relay.Tuple([bop_1717,])
output2 = relay.Tuple([bop_1717,])
func_1725 = relay.Function([var_1716,], output)
mod['func_1725'] = func_1725
mod = relay.transform.InferType()(mod)
mutated_mod['func_1725'] = func_1725
mutated_mod = relay.transform.InferType()(mutated_mod)
var_1726 = relay.var("var_1726", dtype = "float64", shape = (11, 16, 16))#candidate|1726|(11, 16, 16)|var|float64
func_1725_call = mutated_mod.get_global_var('func_1725')
call_1727 = func_1725_call(var_1726)
output = call_1727
func_1728 = relay.Function([var_1726], output)
mutated_mod['func_1728'] = func_1728
mutated_mod = relay.transform.InferType()(mutated_mod)
var_1984 = relay.var("var_1984", dtype = "float32", shape = (10, 13, 2))#candidate|1984|(10, 13, 2)|var|float32
uop_1985 = relay.erf(var_1984.astype('float32')) # shape=(10, 13, 2)
func_1704_call = mod.get_global_var('func_1704')
func_1708_call = mutated_mod.get_global_var('func_1708')
var_1991 = relay.var("var_1991", dtype = "int16", shape = (168,))#candidate|1991|(168,)|var|int16
call_1990 = relay.TupleGetItem(func_1704_call(relay.reshape(var_1991.astype('int16'), [12, 2, 7]), relay.reshape(var_1991.astype('int16'), [12, 2, 7]), ), 1)
call_1992 = relay.TupleGetItem(func_1708_call(relay.reshape(var_1991.astype('int16'), [12, 2, 7]), relay.reshape(var_1991.astype('int16'), [12, 2, 7]), ), 1)
bop_2005 = relay.bitwise_xor(uop_1985.astype('int8'), relay.reshape(var_1984.astype('int8'), relay.shape_of(uop_1985))) # shape=(10, 13, 2)
output = relay.Tuple([call_1990,var_1991,bop_2005,])
output2 = relay.Tuple([call_1992,var_1991,bop_2005,])
func_2009 = relay.Function([var_1984,var_1991,], output)
mod['func_2009'] = func_2009
mod = relay.transform.InferType()(mod)
mutated_mod['func_2009'] = func_2009
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2009_call = mutated_mod.get_global_var('func_2009')
var_2011 = relay.var("var_2011", dtype = "float32", shape = (10, 13, 2))#candidate|2011|(10, 13, 2)|var|float32
var_2012 = relay.var("var_2012", dtype = "int16", shape = (168,))#candidate|2012|(168,)|var|int16
call_2010 = func_2009_call(var_2011,var_2012,)
output = call_2010
func_2013 = relay.Function([var_2011,var_2012,], output)
mutated_mod['func_2013'] = func_2013
mutated_mod = relay.transform.InferType()(mutated_mod)
var_2476 = relay.var("var_2476", dtype = "uint16", shape = (1, 14, 12))#candidate|2476|(1, 14, 12)|var|uint16
var_2477 = relay.var("var_2477", dtype = "uint16", shape = (9, 14, 12))#candidate|2477|(9, 14, 12)|var|uint16
bop_2478 = relay.bitwise_or(var_2476.astype('uint16'), var_2477.astype('uint16')) # shape=(9, 14, 12)
output = bop_2478
output2 = bop_2478
func_2482 = relay.Function([var_2476,var_2477,], output)
mod['func_2482'] = func_2482
mod = relay.transform.InferType()(mod)
var_2483 = relay.var("var_2483", dtype = "uint16", shape = (1, 14, 12))#candidate|2483|(1, 14, 12)|var|uint16
var_2484 = relay.var("var_2484", dtype = "uint16", shape = (9, 14, 12))#candidate|2484|(9, 14, 12)|var|uint16
output = func_2482(var_2483,var_2484,)
func_2485 = relay.Function([var_2483,var_2484,], output)
mutated_mod['func_2485'] = func_2485
mutated_mod = relay.transform.InferType()(mutated_mod)
var_2562 = relay.var("var_2562", dtype = "float64", shape = (8, 8, 14))#candidate|2562|(8, 8, 14)|var|float64
const_2563 = relay.const([[[1.027869,6.275569,4.753335,-7.092567,-1.210038,-6.166866,-5.939719,-8.428782,-7.087406,-5.778965,-8.905061,9.793527,6.682792,6.657760],[1.389471,-5.672137,-1.938093,1.827705,8.089717,4.384981,9.939611,-5.173293,-3.074958,0.445983,-9.083610,9.959795,-5.119606,7.538818],[1.307914,9.368122,-0.813825,0.761020,3.712041,-5.358482,-4.347101,-7.229563,6.653000,-6.154176,0.998452,-5.365571,9.603660,8.410105],[5.437121,7.208668,6.250565,3.026213,-1.643424,-7.836369,-4.407909,5.589163,-8.868884,-6.849259,-5.908282,-6.852932,-0.703358,3.822203],[-1.017491,6.724631,5.128924,-7.764092,0.375450,-8.244310,1.416609,9.053121,-5.422925,-9.246084,3.010960,-5.486987,5.271011,2.383057],[-3.243885,1.970556,7.659546,-3.863042,-6.382157,3.506674,-3.069244,9.904994,-5.000042,0.679271,8.845066,-3.411966,-0.874079,-5.752646],[5.594286,1.244472,-3.651183,-6.787275,1.323723,3.288891,-8.448855,4.389701,-7.299755,-0.589730,-2.061906,1.515092,3.189177,-1.149015],[3.781884,-0.371726,-6.749411,-9.425283,-6.695550,5.916855,7.651743,1.971058,1.549581,-2.565478,-6.426379,3.202828,3.459485,-8.690210]],[[-8.577515,-6.416450,-1.357460,-2.340440,0.936604,5.741544,8.604174,4.934171,0.253949,-3.821153,-3.509142,9.648471,5.225267,2.260367],[0.454334,-2.069836,-1.911149,6.255980,5.420294,6.834541,-8.145159,-4.258082,5.383165,-2.797234,6.191910,-3.640568,-2.614482,-1.071969],[-0.063503,-5.196048,6.853329,2.261108,4.127207,-3.538539,-2.961936,6.606059,8.614199,-5.578825,-2.966488,9.639502,-6.371063,7.147948],[9.605067,-7.965063,4.699982,-1.208857,4.628228,-6.935715,-1.191619,0.579602,-6.723237,-9.273052,3.623287,2.032208,4.656513,0.776802],[-5.633741,-1.097442,-5.046223,9.089265,8.964789,-6.543513,0.540103,-9.913049,-2.141036,-5.143914,-9.148374,-4.090360,4.310782,0.385771],[-8.817555,-0.206244,3.231975,3.509972,-2.811705,4.914611,-6.150851,-9.822130,-2.264994,9.310573,6.690368,-9.009968,-5.515307,8.971782],[-3.877191,8.518216,7.855357,7.882311,-7.775593,-9.309463,6.850418,1.460813,2.895018,0.104603,-8.379857,-0.107182,-9.807885,4.641182],[3.130232,-8.007238,-9.824348,2.895013,-7.124866,-1.812919,0.825245,4.819507,1.014402,-3.100569,-6.061407,-7.695472,-0.372102,-4.252099]],[[0.436993,-1.770949,-5.405407,-7.146956,-1.980127,-0.745488,-4.667121,8.969099,7.523062,-3.752394,2.332854,-9.790467,-0.539840,-3.875494],[8.377492,3.117471,9.978003,-1.811642,4.907383,-7.597618,-6.391804,-2.503884,6.708631,-0.892194,-8.969421,6.172473,9.716050,6.565809],[1.983111,-8.372864,1.085519,0.212381,6.701994,-6.096601,6.824928,-6.065897,-5.476083,-8.592054,2.897218,-4.525063,-6.927649,6.241813],[4.288625,5.900621,6.954199,-4.749882,-5.391656,0.140652,3.584947,-2.246823,-7.947025,-6.399828,0.311235,-9.066502,3.460969,-2.411213],[5.139747,8.939090,-6.134911,2.653823,-4.513535,-1.905302,8.458136,7.012313,-7.873344,4.375795,-0.017506,4.266653,0.203041,-8.812525],[-1.622684,-3.681872,5.792834,6.069961,-8.800373,8.362404,-7.350305,3.654414,3.859363,-4.343357,-8.535066,-9.237597,6.941442,-7.352093],[3.564680,3.759446,4.601984,6.161680,5.980550,1.983071,1.653744,-9.464653,-1.518716,-8.059232,-8.984138,7.825661,-2.107353,-3.937385],[5.755221,-3.583045,4.649071,1.867449,8.442445,5.499804,5.140526,0.542527,4.034784,-4.836227,7.217661,0.156127,7.000727,2.158614]],[[-4.319192,5.790206,-3.778297,6.415377,3.648152,2.184096,5.180601,6.114565,4.872278,-1.372513,-1.262259,-1.403899,4.344658,-9.609254],[2.820230,-5.944765,3.927407,7.911511,-5.600261,6.437485,5.793243,-2.294832,-5.505550,0.872481,-8.997329,-8.906784,-6.916482,1.371257],[0.804822,-6.417368,2.150934,-1.337023,-0.017760,-8.233758,-5.736848,-7.928950,-0.343547,6.462364,-6.568117,-4.466387,-7.354629,-0.383941],[-7.272173,-1.774526,6.831875,-5.102790,8.701500,0.602833,-3.753457,-9.727884,6.877306,2.511876,-7.799546,-7.399960,7.186003,5.264755],[-9.256480,8.363551,0.857611,-1.899350,-8.537085,8.740741,6.380218,-8.913688,6.331374,2.002923,6.114759,-2.370999,1.507623,4.539102],[-4.392988,-4.026347,-2.736332,0.763040,1.521772,-5.941654,-3.945032,6.193950,-0.401061,6.754508,4.552244,-6.647563,6.271009,-6.268487],[-3.698506,-5.077326,-6.073849,3.701397,-2.707198,6.913687,-9.820771,7.321911,7.018738,-5.634869,-2.723137,2.348963,-3.002509,0.038579],[6.478914,-1.878360,4.672308,-2.674349,9.023867,-9.058548,-4.918893,2.348663,2.732188,3.396425,-6.398930,-7.195235,9.173979,-4.749743]],[[8.734183,-3.148351,5.569345,-5.827337,5.850241,-9.982951,-3.432853,-2.857193,-7.464573,9.601790,-8.442551,8.387591,6.533771,-0.774949],[2.187734,-0.145461,-5.992244,6.550468,-1.975618,-4.509976,-7.768896,-3.267658,0.622398,3.296879,7.497099,0.941711,4.234152,-5.074857],[-5.227864,-2.490478,6.290295,-1.432838,6.111818,3.889550,-2.337885,8.254024,-5.714269,2.123356,-2.875221,-3.184979,-5.055873,2.388404],[-4.409377,-7.845896,-5.542185,-0.632462,3.051333,3.217679,3.783386,-3.113909,-6.600944,-0.761985,-2.957848,-7.398671,0.501723,-5.400834],[-2.811996,8.178417,4.993942,0.250301,-5.034344,8.522293,5.539562,-6.674550,5.521920,-2.070930,-6.412810,-2.365998,-7.812958,1.196349],[4.854509,8.507382,-4.789919,-6.638050,-4.167494,1.708403,-0.702532,0.522254,-9.544640,-6.517602,-7.577469,8.596220,7.253053,7.990667],[9.299989,8.628422,-0.252765,-0.179449,-0.546900,-8.445145,4.629096,2.959966,-2.433723,7.281397,3.628737,-5.010571,-9.266158,-0.894090],[-4.698839,6.450481,7.186888,-3.918423,-2.751648,-8.239574,-4.648159,0.537875,-3.142653,6.307330,3.688934,7.839974,-7.537032,9.341628]],[[-1.414924,-0.738268,3.860668,-3.597899,0.378662,4.378468,4.401228,-9.622973,-1.294611,2.540886,-4.113269,-1.232811,7.554916,-2.170578],[6.250563,-2.833346,-0.903731,-8.526719,8.154353,-1.191341,-8.815907,-3.015090,6.238064,7.039185,-7.332142,-3.256006,6.313205,6.700784],[3.017329,-7.823193,8.793239,-7.545375,5.300540,4.242535,7.950420,3.304643,7.204155,1.902111,-2.857324,3.197527,-4.778377,-4.478878],[-1.470631,-1.354300,5.181065,-4.343545,-9.703795,-5.996441,-9.860296,-0.911926,4.343372,2.651095,6.311606,9.773937,8.178391,-5.014478],[5.132706,6.037108,-7.586399,1.993889,-8.310242,-6.230142,-8.526665,-0.330732,9.549306,-7.855850,0.655803,6.000870,-0.784175,-8.824553],[5.753563,1.210397,5.214973,-9.059670,6.579617,-8.974339,-1.115252,-5.682816,2.479357,3.433880,2.217720,-9.586496,2.140876,6.482821],[-0.772441,9.612894,-2.421248,-1.154379,3.944157,-0.638076,-7.563166,-4.202060,0.442981,0.498889,1.959756,5.944497,-2.067309,5.347451],[-9.801495,-6.267611,0.978996,-9.749526,-4.811920,6.151370,-8.180863,-4.589090,-3.001699,7.278695,7.499843,3.317008,1.233442,0.556639]],[[-3.092416,0.854069,6.167375,0.570398,6.085651,6.362154,9.361442,3.065348,-8.988177,-8.605842,-8.595677,-6.811203,2.794317,-5.771614],[0.601319,-4.603881,2.186021,-8.266700,7.393112,8.478415,6.209913,7.152453,8.774391,-3.780924,-5.260436,4.667665,-0.742368,6.374430],[6.905177,-6.573904,2.182164,-2.433484,-4.514273,-8.547626,-8.151672,-3.387442,-6.890708,-9.856869,-5.767528,8.231156,-4.456123,4.696462],[-4.712043,-7.899379,2.737886,-1.348461,2.036435,6.621576,7.583582,-3.768720,8.504480,-0.986953,-5.611098,9.831479,9.314478,8.488956],[1.302540,5.043785,1.776755,4.682515,-5.669005,-8.863689,-1.613831,-9.461363,7.967446,-9.937501,9.308929,-7.613708,4.528203,6.180274],[-3.916284,-3.326580,3.602050,2.117887,0.708780,7.883707,3.156458,-2.976249,6.620949,7.345987,7.517729,8.810163,-1.847415,-2.306789],[-8.664557,5.615201,-5.688347,-1.573429,8.068286,6.145956,0.482352,-8.076289,-4.174670,-4.597848,4.487833,-7.368111,4.862171,-8.034934],[7.168675,-4.243825,-0.329660,-1.215293,8.222805,-0.197974,-3.347892,-3.110767,1.334244,-5.283129,5.446082,9.690378,0.818502,2.214879]],[[-7.394228,-5.555176,-7.943657,6.353416,-1.340876,2.658143,-3.924192,-5.341023,1.207652,-9.597193,-5.759147,-3.206306,-4.070885,-3.387115],[5.335488,-9.130260,5.021240,1.724207,0.873674,-6.772909,-2.772859,-9.322365,-6.429295,-9.345995,0.129048,-6.672992,3.332682,8.415437],[-8.902242,3.890777,8.252260,8.344078,6.529491,-1.102587,7.125738,-8.537914,-7.774887,9.644535,-8.119539,2.622777,-9.389593,9.536035],[-0.715798,3.990366,-9.747566,5.855573,7.539980,4.761732,5.073510,9.116754,-0.348631,1.846477,-1.814500,1.124924,-2.031750,-0.095577],[-1.825725,-8.734036,-7.991414,-0.393065,8.359259,-8.735765,-9.168962,8.797885,4.980233,1.053345,-2.103611,4.228390,7.247782,2.798668],[9.241974,-6.733525,2.305902,-5.115516,7.485062,6.710955,-2.534321,8.797683,6.651106,5.251881,7.385143,-4.551394,0.876475,2.552429],[4.756830,-2.638779,-5.490346,-8.655857,6.456335,-1.550928,0.436386,8.632529,8.916457,7.692844,6.378665,-4.145041,4.389829,1.748610],[-0.270503,6.510430,9.981172,-5.051995,-2.958822,-1.879296,0.416576,-7.780480,-0.890920,5.241441,-1.611626,-9.128101,8.239431,5.457721]]], dtype = "float64")#candidate|2563|(8, 8, 14)|const|float64
bop_2564 = relay.maximum(var_2562.astype('float64'), relay.reshape(const_2563.astype('float64'), relay.shape_of(var_2562))) # shape=(8, 8, 14)
func_1725_call = mod.get_global_var('func_1725')
func_1728_call = mutated_mod.get_global_var('func_1728')
const_2571 = relay.const([[9.924088,1.016344,3.625360,-5.459097,-5.281068,9.152260,-5.196638,6.769445,3.259445,-7.478029,9.531814,8.442439,-2.070602,-7.186236,-5.269178,5.244307,-6.161345,-6.785823,-2.867382,-1.157947,-1.992263,8.801917,0.705476,-1.357417,1.858947,4.904307,1.360373,-5.451707,-6.021405,-1.181909,-6.914917,-3.446456,-4.187971,-0.840503,7.493237,7.801867,8.152876,-2.239839,1.245727,9.800986,4.969852,6.787041,-1.394749,-4.362664,-4.208701,2.019573,5.694440,7.371069,-3.737456,-2.389282,7.506959,0.632376,-4.522199,0.383150,3.991838,-0.943685,6.550019,6.538181,4.731024,-8.468939,-3.608642,-4.091716,6.299955,5.801054,8.131782,-0.161978,4.778620,1.764267,4.697469,6.256691,-4.487213,-1.783356,3.639660,6.922744,9.916283,4.792286,0.570440,4.829337,0.192316,4.915668,-5.792028,7.507866,6.963880,2.397497,0.894913,7.949651,-0.773079,-6.016592,0.620601,-9.855161,8.272536,-7.607128,8.655051,-3.888845,-5.677853,-5.783319,8.913511,-6.187258,-4.469389,0.537277,-0.484264,1.764945,-7.982664,3.543289,7.709038,7.096062,0.728435,-2.506561,6.489554,1.130866,-1.721091,4.123327,-1.965946,-7.057550,2.952729,-4.449199,2.242066,2.789811,3.263481,2.335505,-8.481799,-6.412399,1.899041,4.202968,5.368469,-9.211692,-7.611527,6.450714,-2.184266,4.758837,5.433423,8.067172,-8.727987,2.087132,0.997258,-1.437033,0.401037,9.707236,7.487717,3.667129,-1.493036,-8.861417,8.085093,6.551831,-0.113723,-8.256106,-1.604220,-7.348931,-8.317771,3.652894,-4.508427,0.567756,-9.744549,-3.525302,6.106762,-3.577509,-7.174506,-9.752938,-7.157894,1.014973,4.759714,-1.595189,8.216164,-4.340169,-4.359356,-9.136479,9.897297,-7.153957,-1.038799,-8.942482,1.579658,0.870335,0.571644,5.872903,6.767632,-2.109134,-4.490868,1.626014,8.818480,7.470370,2.753457,0.156545,-5.920556,-6.853405,-5.966510,-6.741882,0.623571,7.670675,-4.748778,-4.022720,3.149453,-4.053261,8.205825,-4.569971,4.251121,2.266245,6.340283,7.926207,-3.965616,-0.232562,-5.737991,-3.131767,5.886452,8.224335,6.339578,0.787726,-3.683676,-1.171461,2.491707,2.108585,9.970579,0.579349,0.387105,-5.090966,-0.346527,-0.410754,7.974681,-0.486208,8.637686,-8.100868,3.233402,2.085542,3.476412,-7.735846,-2.525894,6.237702,-0.425726,-7.418756,-2.275487,0.823933,-1.142315,5.633729,7.496223,-1.170978,1.586119,7.992458,-2.454058,9.919831,-0.504041,2.002500,9.787194,-3.366015,4.110896,8.874481,4.943415,3.412668,-2.700831,-1.944750,-2.334855,-9.610363,5.491614,1.986189,7.606263,-9.394364,-8.840626,-1.306807,-7.666659,7.764188,-4.038572,1.097524,1.992737,7.919377,-1.960394,1.952728,-1.479437,-5.525959,2.852632,0.477770,-3.256288,6.981069,6.832876,-9.482757,-5.278431,-3.471881,-1.692594,4.037993,-1.988560,-7.812127,-4.395273,1.773927,3.531129,-8.778230,3.939026,3.434464,7.950713,-7.035615,8.842090,9.228803,-1.433025,-2.000986,5.012497,9.630848,-0.916174,-1.306985,0.682476,7.607013,-7.093422,-9.824074,0.497947,0.254280,-5.591120,-7.882574,1.528221,0.098479,9.441219,-0.773666,4.957428,-8.824312,1.016946,-1.305948,-8.158849,-4.290533,-9.297776,7.205109,-2.207981,-6.875099,-6.720530,-4.415807,-3.504572,-4.454380,0.077261,1.384460,-3.535959,-2.910360,-4.331823,-0.271315,-0.687632,6.812924,0.366926,7.828239,-9.514585,-7.894135,-5.156375,-9.919432,8.859124,-7.088390,0.478546,2.292045,9.648001,-7.395420,1.850224,-4.235099,3.127075,-9.609301,-2.675381,-6.624669,4.889551,-0.497330,-6.379582,0.614776,0.583724,-8.645569,9.184546,-7.761337,-3.974785,-4.931548,2.498304,1.277928,5.001026,-9.394539,3.572962,-3.363657,1.582048,-3.909916,6.640101,5.777089,2.936085,4.458205,-1.643320,9.406325,-4.150110,-2.230772,7.541838,-2.248597,9.694502,-7.294197,-8.546550,4.570345,4.809704,8.329984,7.370123,2.118432,-4.939979,2.288282,-8.305031,6.921882,0.142697,2.972178,-3.185867,4.844887,-3.057625,-2.238355,-3.811593,-7.723128,-9.287476,-8.937337,1.473824,-6.979949,-1.104585,-2.841037,4.600382,-8.472367,7.745466,9.809170,0.070266,8.184867,-3.457535,-6.623674,8.710004,5.800780,-1.035577,-3.189945,7.119300,-3.770477,-8.729324,0.177654,-9.771240,-7.094594,8.985043,1.525359,-2.123147,-6.883084,5.032796,5.083241,8.374468,-3.374942,-1.985469,0.108499,2.454174,-9.323087,-0.454862,6.574609,6.969755,-2.312861,3.493214,0.754174,-6.336927,0.440001,1.746413,2.356700,0.525161,-6.780720,-9.650306,6.420479,1.817252,4.524992,4.113292,3.560850,2.846706,1.167259,0.330545,-1.830192,-1.533330,6.098810,0.802512,0.666715,-4.452628,-1.930642,5.797476,7.803786,0.494194,8.557600,7.340397,3.721358,-3.884222,-2.225005,-6.388438,-9.595971,-2.792368,-1.698334,-7.829676,-3.976708,7.405667,5.484675,-6.215660,-5.592946,9.053607,3.917345,-3.199936,5.854738,4.289398,-1.303590,5.779030,4.593468,0.340723,6.067255,6.579017,-9.630152,-0.987400,1.683967,-3.999613,3.415288,2.325564,5.122811,1.206242,9.237665,-4.739731,-4.603559,-3.339265,1.401523,6.626895,0.957742,-1.534448,-9.962114,8.618027,2.840229,9.167914,4.869784,7.740337,-0.202260,-5.649291,-6.556572,0.060558,-6.403685,-0.938737,9.020221,-2.632888,-9.894725,7.066271,0.481086,-6.521662,-2.475222,3.892452,1.975060,-0.256001,-9.919657,6.224588,9.292328,7.305506,-8.269782,6.089403,-0.706968,-7.646972,-9.976408,3.752468,-5.564528,3.908662,7.989603,-2.954683,7.641653,-7.351246,9.624878,-6.305018,-1.292548,-5.428247,3.389850,5.139021,3.138341,-9.438738,7.711670,-9.804858,-2.762035,-9.679886,-8.365000,-0.819625,-5.250537,1.296043,-7.450180,-4.686527,-7.894992,4.515748,1.811729,8.107979,-2.794332,-6.135451,4.550805,3.406570,-8.636129,9.069943,-9.461149,8.753602,-6.659241,9.526805,-1.508664,1.464407,-0.007086,3.936241,1.888457,4.537914,-3.837381,6.851873,-4.885555,8.978243,9.867075,9.026315,-9.012178,-6.688969,-6.086991,8.356949,5.069070,8.670299,4.293112,8.487964,9.267040,-5.763980,5.908982,2.902298,-1.202736,-0.019644,3.136727,-8.733718,-4.036198,-6.931769,-5.887888,-4.532442,-4.111044,3.250820,-7.626194,8.890714,7.205198,4.162481,9.035205,-6.608175,-7.636215,2.199056,6.052783,5.473470,-6.963262,-5.316232,-3.572375,2.656433,-6.821158,-1.015706,5.677003,-9.001335,-0.718851,0.164208,-0.867644,0.829683,4.821387,-2.163978,-3.356615,-4.725519,0.260007,1.180783,8.392635,-8.691403,-2.222579,-8.468169,-1.747237,-7.086959,9.249055,3.712576,-2.384809,-9.497211,6.192513,-7.412230,-0.132222,9.847135,2.214785,3.687275,5.760387,-5.793347,8.793306,6.906682,8.173644,-2.177920,-9.425769,-2.417023,-2.169896,-5.219241,1.526621,-2.031946,1.245957,1.673303,-8.398954,-8.429507,-4.632121,4.973035,4.793761,-5.090869,5.733867,3.814522,-4.145239,-3.238385,-5.537639,-6.161337,8.118016,-1.001057,-4.068126,9.671300,-5.336153,-6.786691,-0.526231,-2.550454,1.963422,-1.958808,1.523670,-5.718442,1.346141,2.476330,8.761025,6.149357,-5.002506,4.642943,9.562103,8.649163,-6.793772,-2.876755,-0.881569,5.083288,7.593957,-1.664724,7.878336,-7.670439,9.889641,5.220260,-5.551993,8.996870,-7.733379,7.831940,5.230426,3.657661,4.222201,-0.596404,6.474377,2.575818,6.483680,5.583789,-4.081135,6.589062,7.786948,-0.080302,1.502320,-1.935994,-8.579056,1.561767,1.552610,-6.095049,-3.498374,-3.616293,-7.189818,7.972874,3.520324,-1.387861,-0.147276,6.620746,-3.333127,0.987524,0.940124,1.983926,-6.503349,1.537684,-1.404278,-3.610537,-7.722634,-1.709575,-1.656009,-9.788133,-8.265882,9.260114,-8.488452,4.501757,-9.758780,-5.618399,-9.415156,7.082799,-4.175927,-7.181568,-3.058697,1.081415,3.721513,0.818372,4.652678,4.428845,5.723659,6.850854,9.885402,-7.876936,6.761128,2.791655,7.858248,-4.674872,2.844592,-5.696590,1.158199,-5.972678,7.950499,-3.245246,8.593554,-7.533029,-1.944378,-9.564427,-1.434388,2.960500,5.031582,-6.993675,-1.658625,-5.339992,9.799609,3.819088,7.870494,-0.212191,-8.192100,1.886384,-6.501142,-0.997909,8.613048,6.971819,7.835507,-8.000688,1.153136,2.360810,0.839394,-4.111394,-0.955764,-6.719291,5.721445,-2.686792,5.135464,-1.387167,-5.148481,9.550224,0.502942,8.745028,9.886013,-7.338221,-5.946340,-2.302853,4.850199,6.410176,7.576540,1.625781,-1.567186,-8.116180,-9.845193,5.102477,8.816170,-5.661197,6.219074,3.675683,0.643577,-6.901038,-5.908100,-2.219051,1.940326,9.863960,7.990498,3.858526,2.600327,9.225713,-6.807786,-8.203170,8.992319,1.439563,-0.245948,-1.831708,-0.251939,-4.958035,1.685339,-0.491625,-9.788854,2.566677,3.641678,5.238235,-9.367812,-3.442528,5.140540,-0.406171,3.659728,-6.044952,7.764673,-6.758000,1.299153,-8.394426,9.985980,3.314922,-3.149304,7.953645,6.588014,-9.440843,3.428977,8.774499,7.022758,-7.555686,6.529983,6.452664,0.158295,-3.323371,-6.314839,4.168546,2.795985,1.495245,-6.648964,3.795241,8.046631,8.389625,-9.161855,2.028160,5.176732,2.046261,-5.504988,7.092472,-1.951392,-2.943902,-9.898294,-8.788131,-0.285699,7.426829,-7.301040,3.432900,9.140342,-4.782459,1.773587,9.957658,0.794314,0.763964,5.812197,7.462905,-2.136466,-5.849629,-3.361657,-0.287486,-5.402585,3.269142,8.518157,-2.336255,2.360962,-0.845234,1.295355,8.793071,-7.740739,-9.572337,7.101973,1.476585,-4.944473,-7.036470,-8.214302,1.289826,8.665829,1.027878,6.464111,5.800938,9.557855,7.479741,6.057633,4.162374,7.530291,-8.707759,-1.909332,-8.629804,0.432438,0.580381,-7.234722,0.818112,2.273835,-0.331292,-0.309722,8.509682,6.089957,-4.669229,-1.756876,4.574798,-6.894477,-9.147239,6.507452,3.700531,-6.769328,9.353176,9.820573,-6.667574,6.780785,-6.918320,-6.311441,3.564312,-1.034364,-0.228462,-2.796312,3.695799,4.291237,4.875294,-5.232262,-4.379216,3.607668,7.901870,-3.182804,0.395957,-8.637690,4.088492,7.704438,0.938359,2.528312,-5.648109,1.387494,-2.317721,-0.525704,9.277854,-2.537245,2.393168,6.560283,-6.350703,-5.398829,-3.100027,7.285420,1.077001,-3.959596,4.453883,-8.071318,6.209834,6.415939,5.931753,9.194326,-4.723879,-5.562501,6.756755,3.593309,6.733991,9.845113,-7.804328,6.210107,-4.558104,-4.706399,8.055284,8.126972,-4.713047,-3.817869,-6.626980,6.854564,3.113693,-3.795022,5.205352,0.248549,6.218298,-0.843733,0.956938,2.380114,-2.686595,1.522981,4.711792,-5.238963,4.416832,3.873203,9.153945,2.609950,-7.439651,7.766164,8.627064,-4.005039,-7.883890,-8.354594,-2.691403,5.097754,-8.094433,7.191917,8.910219,8.251611,-1.811514,0.237704,7.930563,8.629212,-3.332305,-3.463240,6.674299,5.547794,1.638565,5.230477,4.532008,-5.858431,-3.317148,1.445345,-0.170050,-9.891644,2.596409,-0.173173,-6.135685,-1.154385,-2.910913,-4.981354,1.845484,9.822452,-4.807987,9.800163,8.212725,9.473559,0.901430,-6.758576,8.098359,-2.142795,-7.779135,-4.213138,-9.000359,0.785148,5.624055,-2.670673,9.481969,5.044628,4.229005,-5.250634,4.945858,-2.367284,-7.091878,-4.070968,2.587645,0.732563,3.387877,7.593024,-2.315813,-1.674059,-9.687405,2.450168,1.986766,6.902966,2.672321,7.237641,3.024996,5.694283,-1.422746,-9.179072,-8.065431,5.158174,2.654421,-0.469306,-2.224707,3.123122,9.699147,-4.749364,9.151651,8.142676,5.363301,4.059132,-8.199378,2.001472,-7.912912,0.483904,6.041389,-8.123527,1.195707,-3.811463,-5.201439,-9.233092,-5.866461,-1.543200,8.040282,-8.150066,-6.361113,6.314873,-7.292217,-3.283122,-6.354629,-3.959139,-1.979808,-7.136552,3.617438,1.077028,-3.948649,2.606381,7.979628,5.366062,-9.267222,2.487571,2.454284,1.641008,6.099014,1.593265,2.528295,5.318735,-7.640660,5.549136,8.306686,8.081709,1.219774,-5.624523,-7.442803,2.047901,-0.504730,-6.687343,6.774844,4.216158,6.218516,8.779338,-9.006801,-2.096541,-6.993682,-3.445081,7.044416,-9.031989,0.702868,3.083769,-3.645785,-0.039315,6.232441,-3.317738,-4.338178,-3.771031,-5.863393,4.176632,-3.520436,-0.002962,3.575993,-6.513088,-8.127665,2.195214,-3.195633,-0.651643,0.532634,6.623408,3.489581,-5.429510,1.090453,6.768238,-3.648194,8.237045,-4.107240,8.926570,-5.058741,-4.043973,-1.527087,-5.276718,-8.089832,5.155961,1.367204,9.043051,5.384637,5.102842,-0.336654,-4.320445,4.112660,8.296877,0.853540,5.981202,4.675522,9.998727,-4.893102,-1.326318,-9.425160,-4.734544,-1.228329,-9.915014,1.177119,-7.383551,-4.879181,-9.896603,-8.257083,4.217518,2.184730,-9.387232,3.201358,-8.921989,7.146346,-2.761250,9.186659,-7.604328,-3.419701,4.452520,-1.282276,5.717072,-4.665399,-7.302277,-0.606286,3.214558,-9.005534,-8.861453,4.406244,3.185958,6.601005,-0.264074,4.291763,-4.521225,2.519019,9.201250,2.010935,-1.770011,6.596812,8.422024,-1.812606,2.109457,-6.343127,-7.107821,-8.323623,-1.125474,-5.672681,-6.737055,6.430378,6.401235,-2.902147,-4.871193,-5.686502,-1.833880,8.836766,0.034447,-7.124893,1.455357,-2.283914,-6.975890,6.652459,-9.036027,4.620052,2.049250,7.033288,5.889800,-6.064467,8.484251,-6.405159,-1.243455,4.195910,2.192892,-9.907081,-1.521202,6.988720,5.363438,-8.632703,-9.146776,5.555363,-4.787994,-8.723319,-3.875062,-4.273399,0.298557,8.448744,-8.038643,2.491072,-7.544035,-2.240554,-9.885874,4.707041,2.702135,3.801858,0.998462,7.280190,5.724786,8.076453,-4.716267,-9.044775,-9.993969,1.588759,-5.574030,5.805185,-9.655645,-8.663243,7.837168,1.398996,5.876585,-1.824399,9.950606,-6.906066,0.898969,-0.384040,9.110326,-7.188357,1.612329,6.603448,-4.207028,-7.465753,-7.494780,-6.783180,0.550143,-5.064082,-4.983112,6.669016,6.855011,9.195585,-0.168579,-5.470132,-8.885725,7.521855,9.907788,5.963819,4.646381,-0.122942,-1.109395,7.709926,-4.915660,-9.866747,-8.392613,-6.560864,-6.185723,3.772037,-9.762987,-1.837174,-7.967739,-9.909235,-7.883546,1.234876,1.460862,-6.234956,-6.806845,7.777739,5.699906,-5.429266,-2.147417,1.606618,-0.280964,9.300595,4.481681,0.669551,2.868268,5.357413,7.612267,-0.079209,-3.130722,7.808894,-1.627656,-7.652780,-3.114599,-6.128310,6.098226,3.347953,-9.788837,-9.227589,6.859331,7.114931,2.564209,-3.031163,2.440157,-3.958686,1.710995,7.853940,-8.724810,-3.395602,-8.016018,7.987393,-6.234851,3.925110,2.418604,-7.820013,4.991255,-8.430655,-2.126740,5.142464,7.856412,-7.212849,7.797632,-5.776497,8.727945,9.562348,6.696690,7.445004,7.176951,-0.034967,1.212810,2.495979,-6.984557,4.947367,7.725238,2.418718,-2.073082,9.365229,8.679835,-0.654532,-0.003237,-2.105468,-3.122347,-3.009702,-8.204356,7.454496,0.855281,-0.575213,-6.658111,7.630761,-5.882987,-4.487414,-6.998338,9.491866,2.068156,-4.587148,5.981198,-7.328697,-8.228140,2.551467,0.751890,-0.412882,-6.457449,1.428099,9.693557,-7.301521,8.053895,-8.512272,-3.250237,8.360193,6.467890,-3.917305,-3.825342,2.084501,7.252757,5.280570,4.597945,9.378221,-6.932967,-6.276030,0.849851,4.935968,4.574887,-2.333533,7.795881,1.025172,9.115421,6.993342,-0.001087,2.990600,-5.838003,1.041692,-0.819595,0.788321,5.811312,-0.330540,-8.029118,2.439613,-1.490740,8.647260,6.531167,-6.668461,-7.555504,-5.838258,-3.456928,-1.979238,-1.428856,-7.423529,3.350923,9.601759,9.626842,3.919674,2.148131,1.769284,8.861784,-3.211922,-2.901290,4.361622,-1.158847,5.383234,9.825948,7.761834,6.431718,7.015757,4.038594,4.066055,-8.551947,-0.348151,9.839852,1.076181,3.978541,4.838401,1.801498,-5.760564,-2.232325,-1.618728,-0.451991,4.399471,-0.971113,-5.713769,5.201345,-7.466107,-8.683289,-9.433351,9.852836,-6.259023,6.564364,-7.955858,3.157820,-8.469556,-6.833618,8.423803,3.934433,2.902604,7.554501,3.246441,9.377750,5.665034,4.907324,-0.970969,3.958079,0.240686,-3.778847,1.307576,-1.929260,-2.468272,0.852855,5.192767,-2.819459,-9.425348,-9.534626,8.379751,5.250547,-2.153837,-9.941882,7.323708,0.907411,-2.388928,-4.573697,3.227084,7.543727,-1.519499,-7.634636,1.238379,-1.614004,-9.785857,-1.333247,-8.408781,-6.582086,-6.213055,5.154799,2.346888,-9.145292,5.207084,1.536939,1.605656,-8.420417,7.433510,-9.579083,1.952814,-0.175179,5.733273,7.237626,9.966419,-2.336627,-7.501104,6.806297,1.650204,1.356590,0.407876,3.577484,-2.432096,-9.787092,-6.011386,-0.634540,7.583332,-1.784054,2.660543,-7.347673,3.779688,-1.759841,8.852254,2.008506,0.600329,9.935141,-6.599067,-0.673192,-0.971467,-9.156179,3.950969,-6.186898,-9.468371,6.420289,7.442411,-0.482062,9.616549,-0.792169,-7.953086,3.213592,2.224199,-1.007142,5.873480,-3.503258,2.766006,1.306128,6.104890,9.227813,-7.137237,-1.966960,9.089679,-4.010075,8.808731,1.602095,1.253415,-6.441929,2.594417,-6.510836,9.048323,-5.561029,2.461897,8.859148,0.541035,-4.891871,9.398824,5.087450,4.080278,5.262324,0.214496,1.580225,8.338483,8.768068,-7.412076,-3.298525,-8.936685,2.096987,-5.811425,-6.367206,8.173395,9.920778,8.938149,9.399691,-8.752205,-5.880869,7.544078,-7.041929,7.421252,5.590574,3.984733,5.036582,-7.640016,-9.113604,0.701882,4.935787,6.895637,0.295556,7.149847,-4.665359,-9.596502,5.936571,-7.502037,-1.600814,6.528294,4.703438,7.188699,-2.811091,4.005068,-6.009539,-9.704411,-6.029718,-6.559875,-7.320649,-3.148892,-7.115097,7.486198,3.642644,4.510107,6.830946,0.725462,-3.319769,4.907155,5.409897,9.725267,2.556747,8.621831,7.353168,-3.437698,9.944754,-5.750704,4.910277,-9.490146,0.891381,-8.955592,-0.111868,-0.372286,9.024902,-8.987936,-9.031661,-1.739976,9.928769,2.960407,-2.819160,-3.024863,9.691055,6.803464,6.800925,1.482987,2.219468,3.963722,7.015266,-7.822837,-5.378926,4.151700,-2.970965,-5.285024,4.528400,1.445790,3.832691,-5.490018,-2.150336,6.334220,0.693935,0.956269,0.495778,-4.760559,-5.735475,2.021930,8.309048,2.152819,-2.101616,7.289935,-7.544621,8.340957,5.267358,-3.608522,2.800034,1.667091,-9.964461,-1.681685,8.463986,-7.688746,2.392687,-5.640286,8.211002,4.562088,-5.494236,9.065952,7.137849,-0.593309,-9.458073,-7.449214,3.613445,-6.839862,-6.698750,2.383464,-7.913522,7.958562,3.879492,-3.211808,-8.099389,-5.423370,9.124715,0.784821,8.970845,1.831650,-2.928674,3.505727,6.219250,8.854058,-2.086089,1.964306,-8.544860,3.023878,1.533732,-0.109864,8.585568,-7.163206,5.410784,7.896382,5.681415,-4.134333,-5.385659,3.351297,-2.445890,-0.078721,4.017011,5.099630,-3.810809,4.902237,-7.739104,9.387444,2.601757,-4.389298,9.062942,4.139015,-8.404354,-0.949357,2.581299,-9.812165,-8.768639,3.285511,2.618086,-9.288975,6.078339,9.141738,6.438948,1.988636,-3.437055,3.440490,1.174327,-4.834176,7.507652,-1.361955,8.415909,-5.853777,2.841073,7.328288,-9.577877,6.251318,-6.517696,3.813580,4.539699,-4.872136,9.222269,-5.030530,-4.068823,-2.368261,2.350729,-1.313109,-8.106158,4.067461,-1.987182,-4.820212,-4.903819,-6.142878,-5.760999,-8.629954,-7.915799,5.904134,2.988788,-4.596187,-2.963600,2.985746,-1.894391,-0.857985,-9.751897,-2.644018,4.266798,2.622919,-1.835107,-5.777352,4.316717,9.823926,7.905600,1.560790,-1.147478,-1.235279,0.372612,-3.892987,9.757567,-6.206580,-4.476100,4.502622,1.677957,4.449586,-9.224163,-4.343074,6.209136,-6.911921,-7.133087,6.666795,2.469343,5.363865,2.201537,-4.420893,3.305588,-9.478313,-0.246923,9.545333,-2.738945,2.749349,-6.553679,-4.700374,5.734963,-1.282733,2.688329,-0.770916,6.086354,5.914573,-9.277474,1.321588,-6.763109,6.005221,2.805292,-9.751406,-9.689117,4.172629,9.856077,-6.692852,-2.984359,-6.247502,-7.189007,-9.830200,-1.578224,-3.113601,-1.438356,-0.391013,4.589501,2.877879,-7.231554,-4.937041,6.882367,7.023303,1.188452,-6.984928,-4.177169,7.660103,4.121087,-7.016434,1.529668,-9.760232,2.341778,-0.790328,0.675165,8.163237,2.837589,-4.358555,2.358274,6.065151,3.894545,-0.464622,-5.538891,-3.316454,-0.030602,-6.281483,9.926763,1.532769,0.430595,5.170131,9.267957,6.439864,-2.796266,4.730533,3.288009,-4.602479,-5.166027,1.281743,5.746942,1.147982,-9.237815,9.056905,-7.896243,-7.785163,6.728392,-9.986989,5.096074,6.929682,9.643706,8.716091,-2.878494,2.944723,1.191123,0.809250,-3.030490,-6.578692,-6.897668,-9.823651,-3.453914,9.471110,-9.190072,-4.992638,0.848711,4.511192,-4.167097,8.408402,1.168983,-2.626706,9.460190,3.145254,-7.097211,4.572695,8.070368,6.110744,-2.433347,5.635805,9.484679,-7.796092,-7.178848,4.468028,5.065500,0.247446,-4.977160,9.864790,4.421809,6.289749,-0.801681,9.505477,9.282793,2.522515,1.501864,-8.867175,-1.693784,2.303893,9.682245,3.836330,9.805268,2.764635,-7.566197,-9.619026,7.531280,6.243798,-1.400292,5.906526,-2.270206,6.084612,-1.345196,-6.467439,1.989455,9.690523,-5.107756,7.555904,3.435613,2.842540,8.738378,6.085744,-4.895546,-3.535855,3.386065,-9.802414,-0.106411,4.291490,9.329823,9.523592,1.047949,5.784954,6.345693,-0.860211,8.506310,0.541742,1.855242,3.364306,6.858437,-6.805280,-5.096840,-1.738276,-6.413854,1.565846,3.791737,-3.181563,4.320995,2.640365,-0.317270,3.037208,1.890495,-1.192285,1.580310,-1.040410,4.033760,-5.209619,3.431725,-0.106328,-2.046217,-7.728617,-0.741520,3.566893,-9.759537,3.173002,-9.482559,8.074085,1.685376,-7.517450,0.330759,9.920113,3.760348,-7.633801,0.386826,-4.037508,-0.316251,6.124554,-9.747663,-0.335340,6.884203,7.372918,-3.601177,-3.204113,2.546001,3.391097,6.653940,8.115656,-0.387609,-8.374772,9.823534,0.185485,5.856458,-3.219304,9.134203,-3.077390,-4.889598,-4.702943,-6.490438,-6.177044,6.216755,7.369267,6.780430,9.500214,-4.163665,1.620145,6.122881,-1.599601,2.073152,-8.654065,8.457650,-3.647382,-2.867610,4.222598,1.534907,-8.321903,6.879863,6.324309,5.037386,-5.337591,-5.278940,1.906148,-1.155197,-7.399641,-9.413398,8.254434,-5.125993,-0.975335,-3.647741,1.526852,9.063850,5.503165,2.762181,8.891866,3.598228,0.615563,7.726557,2.807279,-5.244023,-6.436816,-7.516623,-0.758090,0.772167,-9.133242,-3.946655,1.636431,5.836136,-9.870301,5.546705,1.435692,7.654272,2.760755,1.470597,0.651803,-5.417501,9.224210,0.653990,6.090307,-0.029613,-7.500146,-1.099414,-3.159338,-8.378112,-7.830003,8.058903,3.572350,-6.877148,9.576978,5.254036,4.929776,-4.035561,4.795565,4.965785,-0.938842,-4.260367,-8.462609,-3.766160,-4.826956,-3.698871,7.489844,8.588825,-3.839180,1.268021,3.582164,-1.974151,-8.148802,7.292064,-6.767513,7.768912,-2.363761,-2.508034,-0.427293,-9.455874,8.964001,3.960745,-9.491469,8.682135,3.811378,-7.461169,-5.097840,8.324550,-6.411465,-5.011028,7.088969,6.164718,1.974899,3.322137,5.056355,-7.791442,-9.509150,1.319298,-3.059951,2.558513,4.140367,7.333970,7.938190,-8.734425,2.173860,-7.879235,-3.655660,0.997885,7.321721,9.774289,-6.151614,-6.239572,-2.106593,3.317862,-3.280007,-8.498787,-6.738963,0.359552,-1.061472,2.770470,-3.444793,8.123643,-9.436727,-1.956323,4.473944,-3.202299,-9.952871,-3.613246,-3.862737,3.101835,-5.917797,-2.706351,5.571206,-2.536241,0.942679,-1.907032,-3.309040,9.279385,-7.272761,-1.644568,1.031835,4.218030,7.588758,-4.863450,1.769437,0.125145,1.981545,-1.191175,2.815443,8.988820,1.044178,8.098713,5.366577,-9.323671,-3.165803,0.086000,9.991036,0.670608,-7.836311,-7.162222,-3.551053,9.582446,9.614843,-8.501911,2.035018,3.281068,8.299888,-7.060270,0.526352,-3.371895,2.343819,-8.115357,-4.672304,-9.686052,7.597970,-3.096185,-8.163872,-1.117909,-8.918711,-4.703647,-6.708937,-5.826467,-0.654559,-2.166924,6.650813,-3.834144,-8.389534,5.204888,-3.475486,2.058385,-0.033774,1.418089,9.241025,-1.824035,4.242429,6.488514,-1.004666,1.273993,-3.258058,9.594576,3.743819,6.264143,-2.662492,-8.346313,-2.819831,-1.168224,-4.569771,9.278315,2.376282,3.142459,-8.270063,-9.771175,-6.258531,-7.400045,6.019627,-0.774781,1.355693,-7.233659,-8.338047,-8.110311,-8.835478,4.125342,5.407181,1.699150,-4.453268,4.723886,6.755192,0.109089,2.849908,5.723683,0.518310,2.821876,7.510923,-1.853647,7.109133,-0.972315,-2.314918,-8.077476,-8.087256,-2.175614,-0.183345,5.047635,-5.208772,8.425641,-0.243355,-2.734121,-1.400120,-2.696315,-0.500896,5.007682,-0.378804,9.746995,2.180106,-0.094969,7.397049,-1.796552,-2.344871,-7.167093,-6.818747,-5.872680,-5.682001,4.040493,3.435959,-6.173202,-2.590882,1.150066,0.242070,0.150616,-3.751029,-1.324313,8.903080,2.668948,-4.449575,-1.612783,8.928795,-1.315737,6.436861,-5.723301,6.712570,-1.496358,-6.347134,-0.682637,8.189006,-1.029328,2.898159,8.503901,5.758335,-2.391692,-4.507741,-8.085476,-9.565006,1.121923,-1.018026,-0.221205,-3.221120,-7.374312,-8.459483,-2.214822,-7.838798,9.948024,1.255990,-4.438874,3.910094,6.831069,8.095123,0.560686,-0.895375,-3.672070,-3.780707,-7.446740,5.452333,2.322855,-8.613536,4.500453,-6.325249,-4.261366,-3.759576,-5.001180,-8.458406,9.742371,1.919445,7.893157,-0.030247,0.792574,-9.619388,5.284055,-9.485171,5.837343,6.314518,9.471740,9.830241,4.479424,8.673227,7.487538,0.746295,0.760416,0.966625,-4.697984,-5.287181,-5.444124,-8.878940,4.221554,-5.232879,3.893565,6.472908,0.437567,-5.620909,-3.130584,-8.387813,2.742141,8.956744,-6.099873,2.944186,-6.311112,-3.323424,-1.645832,-4.777818,5.795787,-7.908196,-4.544202,-4.621408,-3.992206,7.889578,-1.274571,-3.286999,8.125778,-3.194227,-8.277941,0.970250,-9.017901,3.876164,-8.343109,-1.970360,-9.563282,-9.889711,-6.516048,-7.554722,3.847037,-9.050992,7.426354,-8.936027,-1.733004,6.987515,-1.765314,0.864066,-3.838867,-3.475537,-6.244012,2.577346,6.668851,-2.081580,-9.985183,2.458213,-9.620940,7.827132,-7.460586,-7.247720,-7.509615,-6.961757,-1.290913,6.045589,-3.374344,0.464744,-6.784493,-1.512335,-4.061180,-7.759917,0.013213,0.654919,5.184875,-9.947862,-2.141640,-1.040936,-6.123351,9.173323,-7.073660,5.568898,-2.926523,2.208856,7.066674,5.457176,-7.511500,-8.521199,6.553046,6.836563,-3.974872,-0.005362,8.128126,-5.743990,7.256537,-3.072729,-7.629824,5.015189,2.348889,-0.024031,-8.391156,-6.742476,3.880233,-3.455673,-5.900457,3.552296,7.798352,7.066672,-1.275691,-0.056995,-3.217407,5.398179,5.990327,2.211765,2.474410,2.536596,4.149133,0.869334,4.547483,6.821205,5.749379,-0.636169,2.218672,2.876557,2.554374,7.724516,3.195591,0.071060,9.573457,8.164774,-1.807460,-1.639970,-1.434306,-7.410272,-1.814563,-1.188779,-2.866580,-4.325561,-5.216886,8.253594,-6.367817,2.253053,7.507683,-3.554575,-6.301948,2.180807,-2.146004,-6.448879,4.176707,-8.481862,7.665009,-6.554303,-0.417837,2.317101,-0.426545,-9.384751,4.937800,-4.137873,-0.247974,-8.827616,-5.200552,1.592026,3.287655,-7.574706,-5.564649,-0.430319,6.878651,5.421207,-8.520462,-3.338121,3.955628,1.690276,8.445354,7.513293,-1.980363,-5.414522,-5.794893,9.988168,8.648817,-5.177614,3.950641,8.144582,0.915166,-7.098652,8.247703,8.580642,1.867308,-2.000360,-8.508892,2.072868,2.028165,-9.203605,0.043221,1.573781,5.234193,3.406643,4.149611,7.905118,2.634764,-6.738594,-6.877866,-7.868517,-3.354632,-8.414440,-0.804844,5.152421,3.066008,0.081068,5.872316,-4.528087,3.533453,0.646015,-2.111890,6.715942,-9.040006,8.148247,4.358024,6.295387,-7.385642,3.538592,2.371466,-3.114690,-4.328036,8.820549,-1.204611,-7.199170,7.750104,-1.158545,-2.680525,-4.105621,9.441536,9.991534,8.122390,-6.229484,3.316723,-9.852155,-7.075856,5.667373,4.745093,2.113113,-2.642557,4.480716,1.505949,-0.886440,5.860218,9.602434,-7.101026,-5.080037,0.802096,1.665402,-8.081807,1.505275,-6.232326,1.102934,8.436695,7.466991,-8.801811,-8.512494,1.235189,1.069935,2.897224,0.017490,4.568802,0.491477,4.744945,8.161085,-6.709212,-7.098160,-0.762442,-9.819765,-2.624996,6.635347,-3.566191,9.103860,-3.987186,7.708316,1.806577,9.173223,-0.283139,0.586731,3.909906,9.486566,3.517630,-5.643950,9.335508,5.358443,3.037619,-0.453040,-8.834845,2.860022,-4.233761,-3.407653,6.796290,-9.217198,-3.478036,2.255791,3.326829,-2.026172,7.741095,-4.479585,9.699495,-9.845098,-7.684790,5.827866,-2.529859,-3.792058,2.875369,-1.476924,-4.804939,-0.787393,-9.959066,3.838358,-4.458180,-1.019435,-9.827344,-9.708925,6.965592,-4.433837,7.229683,-5.292623,-1.667123,-1.037974,-7.949915,4.495513,4.141832,6.213275,2.332283,5.436658,-7.901407]], dtype = "float64")#candidate|2571|(1, 2816)|const|float64
call_2570 = relay.TupleGetItem(func_1725_call(relay.reshape(const_2571.astype('float64'), [11, 16, 16])), 0)
call_2572 = relay.TupleGetItem(func_1728_call(relay.reshape(const_2571.astype('float64'), [11, 16, 16])), 0)
output = relay.Tuple([bop_2564,call_2570,const_2571,])
output2 = relay.Tuple([bop_2564,call_2572,const_2571,])
func_2581 = relay.Function([var_2562,], output)
mod['func_2581'] = func_2581
mod = relay.transform.InferType()(mod)
mutated_mod['func_2581'] = func_2581
mutated_mod = relay.transform.InferType()(mutated_mod)
var_2582 = relay.var("var_2582", dtype = "float64", shape = (8, 8, 14))#candidate|2582|(8, 8, 14)|var|float64
func_2581_call = mutated_mod.get_global_var('func_2581')
call_2583 = func_2581_call(var_2582)
output = call_2583
func_2584 = relay.Function([var_2582], output)
mutated_mod['func_2584'] = func_2584
mutated_mod = relay.transform.InferType()(mutated_mod)
const_3119 = relay.const([[[-1.653368,9.582368,-7.864621,2.609572,-8.233469,7.290756,-6.226700,1.115600,6.400407,-5.687528,-7.914663,8.629196],[-2.982174,3.285236,2.800038,1.878481,9.788413,-4.247155,9.808452,-3.197740,1.203278,5.631239,6.342501,-0.646176],[-8.842947,-2.246026,9.839140,-4.640724,4.741958,-9.669625,0.689890,7.023713,-8.612628,-9.291549,7.852791,-6.446674],[-8.717714,-2.286987,-8.003893,5.680874,-2.907830,5.767452,5.401784,9.048812,6.970196,7.997060,3.903213,-2.498940],[4.243038,4.778416,0.581866,9.211666,7.982690,2.480510,-5.775536,6.933330,-5.076186,9.683547,-9.076461,0.238287],[-1.412273,-5.518610,6.774697,-2.820273,4.039975,9.304623,0.415692,6.895355,-9.374283,-8.943348,0.649247,2.702829],[-5.034652,1.252069,-6.464220,3.962040,0.176587,-1.891151,-7.927026,4.245538,2.995979,-8.950496,1.790669,3.050819],[8.429990,3.907247,1.442634,-2.730466,6.319522,1.227235,-5.324261,-2.979774,-5.455340,-5.525367,0.984520,5.831398],[-9.141479,1.071770,8.939328,-8.269619,-8.226942,0.764903,-0.216207,-0.557502,9.416376,0.159482,-1.025963,1.784039],[8.240723,6.629117,-8.806482,1.901318,-8.608347,-0.933481,6.090917,-4.399858,-0.036716,-8.091096,-1.290963,-2.929251],[-6.509015,9.677249,-4.904293,6.153552,6.936203,-5.521773,4.088376,-5.044805,4.410341,1.205984,4.834712,-2.065148],[8.094787,5.169531,8.244699,7.034088,3.219274,-0.126611,-8.948335,8.074625,-7.850198,4.595154,4.220729,-3.738087],[-8.629623,-2.373468,6.436866,-3.512643,6.123341,-5.296604,0.761353,-3.659023,0.635027,-8.671574,-2.155362,2.597335],[-2.851333,9.710552,-8.380497,-5.748501,5.621620,9.114875,6.984080,-5.952859,4.034558,-3.982241,-4.495752,1.817738]],[[0.839921,3.147049,-1.405076,0.297878,8.041540,-7.558157,-5.560273,8.109319,0.207744,-0.517356,-6.002766,9.653892],[-2.330068,-1.163246,-4.430519,-6.975996,-8.646069,-9.629139,-6.267418,9.349734,-5.000116,7.520579,-8.164005,-9.462354],[0.761825,-3.733102,9.976775,4.309297,3.446922,8.332687,-2.953431,-4.062134,3.856485,2.839950,-3.147478,-6.028394],[-1.999977,4.900607,-1.678665,5.707390,-3.870071,4.170591,2.035946,3.089433,-9.005651,0.600960,-7.467599,5.590884],[-4.133209,6.725129,6.762062,6.881183,-9.716423,-2.125652,-7.424464,-8.003470,-3.899918,0.316885,3.763814,-8.675882],[7.656695,-3.669959,1.612834,9.748899,-4.367098,-4.514528,-6.066382,0.160458,-3.367525,4.113057,0.706819,-4.960472],[8.799302,-8.460065,-6.255830,1.552280,-0.615811,-3.436090,8.009809,3.877772,-9.385442,-8.720551,0.003185,4.306405],[6.228798,-9.767281,7.331086,-6.712023,-2.352202,6.878913,-0.409232,-7.762506,-9.600723,-9.774265,3.477133,0.395919],[-7.491364,-9.166307,2.464802,2.501965,6.480396,-2.590307,-4.082891,1.512093,0.841669,-3.085705,2.629459,-2.229221],[8.094542,-7.919892,-8.389185,-4.515813,9.539767,-5.101859,7.999004,1.745885,8.925639,3.575085,8.826464,4.463093],[0.885721,-7.071294,-5.272607,-3.250499,1.772142,-8.437999,-2.302255,-9.218594,-7.896141,-1.378921,1.020847,-7.099003],[8.621391,-9.625833,-6.295622,8.199572,9.528355,9.648892,-1.436811,2.640265,-2.207248,3.118380,1.834552,-0.533008],[-5.468283,6.642001,-4.293844,8.962030,0.766242,-5.986175,5.412779,9.560691,3.689691,-8.435539,-1.069508,-8.848697],[-4.447819,1.640448,3.751668,3.422701,-4.950368,7.738244,-2.693524,8.985875,2.793062,3.788319,2.588214,4.814289]],[[3.376787,4.785193,-7.470901,-3.726764,3.832100,-7.697210,8.605288,8.968893,-6.828776,7.975516,7.499531,-1.028669],[-2.608196,9.171225,-4.150554,6.839017,-9.050332,8.974570,-8.295534,6.021150,2.595571,-1.335922,2.771257,-2.952482],[5.112853,-5.737749,-9.223873,3.046934,6.600462,8.716282,8.360032,6.186734,6.069726,-5.376233,3.939677,5.796354],[8.098969,8.116209,7.115069,-4.312637,8.758466,6.836604,4.421568,1.844665,8.984548,-3.995607,5.186378,5.115484],[-1.683377,-7.105914,0.445727,-2.784693,1.948206,-1.460980,-1.492747,9.357674,5.216231,0.858024,8.198811,7.402875],[7.420900,-9.356149,-7.910702,4.076833,7.100114,-7.954697,-2.172117,-3.270957,-0.593413,-3.549156,9.217049,6.631375],[7.160524,-7.814920,2.196895,2.154183,6.573759,0.549365,5.195393,9.777815,-7.904853,-3.187337,-1.219189,-5.535468],[7.138835,3.088037,3.750775,8.873797,-1.330883,5.896330,-4.851909,-4.693269,-8.175144,4.808445,1.262802,5.106491],[-0.834204,-9.257758,-4.990395,7.698505,4.861793,-5.904698,9.988968,9.471865,2.040848,2.905753,-0.916762,-9.373137],[6.327054,-9.296021,-7.843295,-5.505748,2.574778,4.322901,-0.236224,9.977918,-4.681984,-2.860055,-1.785754,8.665493],[-2.205790,9.209688,-2.017993,-5.503816,2.849438,-8.950644,-0.995506,-5.575016,3.894460,7.513588,-6.809941,-4.514850],[-9.873264,9.811343,-6.272512,3.927198,3.689067,0.294689,-8.809136,-4.755179,5.565582,2.998860,6.192185,7.191648],[3.679322,-5.689355,-9.674303,-8.103814,9.895753,7.864452,-2.989000,2.607837,7.210814,-1.071560,-0.869274,6.307614],[1.432413,2.270889,-1.632821,-4.990853,0.107793,8.777888,6.604720,-9.782628,5.132351,-3.294455,-0.653317,-1.507441]],[[4.487452,5.400587,7.796211,3.783051,5.910599,7.002008,9.582664,-8.425906,0.077028,-8.075238,3.624773,4.361645],[-1.920969,6.769776,7.010395,-7.481547,-0.710825,-5.111553,-7.771814,-8.166660,-4.298949,1.286674,6.367586,-7.882845],[-9.946417,8.146989,-0.437908,-7.835716,3.590011,0.633206,9.716780,3.173824,-7.376221,0.826642,1.850849,-3.785425],[-2.883363,8.517814,0.041246,-6.326044,4.075010,-1.395722,-5.518564,-8.156030,-8.359575,8.549732,-2.308975,4.154794],[-8.355899,4.130176,-5.820447,-6.952669,-2.470858,4.551683,6.380929,4.858725,1.798226,-3.134420,-2.922554,8.743548],[7.887112,7.567642,5.837674,-3.054623,4.156747,8.902574,1.889747,-1.016230,-5.424362,-1.747300,4.179723,-4.159668],[1.747714,9.604558,6.084775,-3.125351,6.033998,-7.974759,-4.794801,-4.057945,5.273067,9.335878,7.253092,-8.504395],[7.580367,-4.291852,-5.798911,-3.307698,4.600576,2.686718,-7.388233,7.706823,1.508264,5.443558,-4.732130,-8.188968],[5.912530,1.493704,1.923814,-0.947933,-8.206927,-9.814887,8.133774,-9.047030,-8.589193,-7.657614,6.055186,-4.518535],[4.443046,-0.828288,3.840681,0.916267,-0.550350,-0.332700,-8.655957,6.804281,1.274811,9.170486,-5.929174,6.836252],[-3.823700,8.726002,-4.424637,-1.910892,6.570622,6.506229,1.747233,-3.347249,0.111523,-5.345265,5.980016,-7.209573],[0.832107,-1.495843,0.201463,-2.563724,5.771188,0.347255,9.934580,6.619718,-0.097184,8.808355,-3.046992,-2.912102],[-1.783222,0.256910,-2.368986,-7.770949,-7.699636,2.181353,8.172721,2.610785,5.339693,-3.436251,-3.261750,-8.433689],[-2.237583,2.746786,1.229252,6.035874,-3.709945,0.050064,-4.628603,-4.826296,-8.167809,0.813034,4.824215,-5.013815]],[[8.711663,5.355090,3.868527,1.193656,1.642097,-7.881680,-4.382444,6.912513,-9.143133,8.902906,-3.818298,2.619110],[9.776759,-0.935161,1.955357,9.612107,5.518906,2.653174,-6.995651,4.513542,4.042077,-5.637849,7.036475,-0.268284],[6.704555,-3.598767,0.277226,-7.255256,-7.654160,4.763315,-0.459446,2.696400,0.791679,-0.089985,4.348228,1.833895],[6.493170,-9.343958,3.116175,-8.241818,-2.454793,5.447812,3.285546,-4.772338,-0.698875,2.473632,-1.699168,6.439637],[6.627486,-2.654350,8.402893,8.028680,4.690292,9.505078,-7.878908,3.256835,-7.425103,-6.897624,2.340963,-6.125845],[-9.663942,-6.866340,-5.158240,-7.446300,1.076451,-0.846071,6.250384,4.687160,1.451836,1.040232,-5.874972,-2.669905],[6.420594,-6.195966,9.191116,9.040825,5.682919,-0.856007,0.528571,8.059172,4.061851,1.987436,-6.918054,-2.487013],[4.169056,7.535777,-1.386657,-7.212158,6.838704,-5.424064,4.380546,-0.473841,1.509431,-8.795102,-2.824509,4.633586],[7.750832,-0.721231,3.753717,6.824317,-1.173008,8.058159,-7.745817,4.869787,-4.911363,-9.837798,6.782811,-2.723998],[-6.711275,3.038171,2.192597,-5.206777,4.031907,-8.643375,1.810307,7.063731,-1.830431,3.787323,-8.382878,-2.445045],[-5.720604,0.383094,-1.462695,5.183223,-2.828673,4.997830,8.759096,4.113598,-1.816670,-5.604742,5.064325,6.343830],[-0.591722,0.823197,3.470684,8.815899,-5.122459,2.972527,7.361046,3.391665,0.224113,6.947447,3.359588,9.615838],[-6.548253,8.018131,6.122897,0.787605,2.290860,3.825622,8.072542,3.935795,7.491951,-7.416071,9.246951,-0.171688],[-1.560074,1.178662,-1.663800,2.862322,-9.565521,1.622068,0.473185,7.089192,9.941684,-2.618677,-5.833128,-0.354130]],[[-4.666871,-4.362159,3.268537,6.836325,-9.305388,8.908522,8.266398,4.439774,6.903852,-0.892636,4.056459,-4.327451],[-6.828608,9.758109,-0.192935,-0.559139,-1.379787,-6.035613,6.258607,7.268540,-2.092316,0.076702,6.350510,-2.694394],[9.172660,-9.330324,-2.101041,9.351388,5.079548,8.861999,-2.278350,-2.287735,-0.749856,-1.372240,-7.274470,3.158833],[-9.400631,1.100634,2.004719,2.491019,-7.176670,-8.113911,-9.793490,6.307090,-4.286750,7.265005,-2.167557,-8.069944],[-1.326320,-4.844745,-0.010384,7.949478,-9.115460,2.716344,-2.390278,-2.194598,-0.101303,-7.531725,-3.681850,-9.330877],[-8.846836,-1.996084,4.994643,-5.261949,8.741502,6.107172,-3.904827,7.267075,0.505235,7.043016,8.443170,-2.359873],[-3.977782,-8.491591,-6.425268,0.232037,-0.298345,3.159019,-1.061710,0.138231,-9.723532,-8.789105,9.287815,-4.193943],[-7.839944,2.401079,6.779318,8.970578,-1.966993,4.293163,-4.760011,7.851529,-2.829821,-3.400767,-6.667164,-7.408125],[-0.651754,-2.608471,-2.126495,-8.666679,-7.420612,-2.078015,4.397120,2.525368,2.177033,-1.029553,6.814993,-9.236643],[-6.374794,2.192838,-7.492600,-5.899094,-1.392323,5.510441,0.804215,3.878157,2.365478,9.281391,8.144979,-2.029762],[8.284841,-5.858809,-6.668448,-6.647761,9.265744,-3.597199,-9.133190,7.312161,6.523497,0.494027,-3.365859,-5.160566],[6.800841,7.122772,-1.515873,2.961451,-3.692987,-1.348058,6.143322,-0.542525,-0.352202,-4.717633,0.557645,4.990992],[-2.257530,8.731081,9.535321,-9.698669,0.914240,8.928744,3.133307,-8.772980,-0.957312,3.613733,2.862223,7.570413],[-9.723204,-0.285839,0.876697,-9.465500,0.244348,-6.787479,0.801253,8.621908,-3.273985,-4.067970,1.635091,-5.334278]],[[3.230114,2.681791,8.936119,7.558325,3.800414,0.742111,5.558041,-2.650773,5.710848,-6.169833,-2.729840,2.707402],[-1.600581,-2.886619,-4.204406,-1.788956,-7.497409,3.792299,-3.478023,6.553646,-6.667790,-0.347594,-7.483791,-8.188636],[8.688706,-0.483255,-1.557242,5.467406,4.838086,9.826606,-5.728988,-9.039941,4.551828,-8.079106,-5.324952,9.101158],[-8.908568,-5.645325,0.243657,-5.036691,7.533575,-0.112431,-2.128749,1.763900,9.711750,-8.188167,-8.952348,4.093307],[-3.655319,9.645057,5.614599,9.893643,-1.358612,6.533584,1.258724,-6.864165,-7.139093,-6.918221,-0.710892,4.114472],[-9.112244,6.026130,-4.442405,7.668570,-9.086792,5.229813,3.209964,7.584729,-8.414145,3.892003,-1.918212,0.494663],[-8.996705,-9.498873,7.619726,7.754157,8.779326,-1.739282,0.322139,-0.029555,-3.635990,2.279844,-9.349750,9.410155],[4.219752,-2.319601,-2.665753,7.316628,-9.480927,-0.561911,1.868342,3.795674,-5.768638,-3.877742,9.655156,-2.181830],[-8.271606,-4.508410,-4.843848,6.754190,-9.028808,-7.283907,7.306698,-0.211989,3.487188,4.101730,-0.748372,0.376621],[-8.481929,-6.431743,-4.523705,9.061944,-2.991286,5.921995,6.210938,8.240480,2.445290,3.356137,6.039397,-6.306529],[-9.485266,1.089608,-9.661103,8.057514,-1.307011,3.957994,-9.458683,9.058031,-7.451721,-6.650670,1.193164,2.207598],[8.643511,-7.698612,-1.125363,3.150029,-9.713852,5.752149,7.859797,-9.032898,-3.350826,-8.380494,-0.430876,-1.010895],[-9.028754,7.416636,-8.038307,-6.127103,3.322816,-6.938749,5.225821,-2.017952,-0.424915,1.034747,-6.888481,9.864235],[0.267535,-9.858503,1.027492,-5.215634,7.012165,5.019288,-0.430177,7.421269,-0.100287,-3.452064,7.358620,-5.764513]]], dtype = "float32")#candidate|3119|(7, 14, 12)|const|float32
uop_3120 = relay.sin(const_3119.astype('float32')) # shape=(7, 14, 12)
func_956_call = mod.get_global_var('func_956')
func_962_call = mutated_mod.get_global_var('func_962')
const_3144 = relay.const(False, dtype = "bool")#candidate|3144|()|const|bool
var_3145 = relay.var("var_3145", dtype = "bool", shape = (18, 100))#candidate|3145|(18, 100)|var|bool
var_3146 = relay.var("var_3146", dtype = "bool", shape = (80,))#candidate|3146|(80,)|var|bool
call_3143 = relay.TupleGetItem(func_956_call(relay.reshape(const_3144.astype('bool'), []), relay.reshape(var_3145.astype('bool'), [15, 8, 15]), relay.reshape(var_3145.astype('bool'), [15, 8, 15]), relay.reshape(var_3146.astype('bool'), [1, 80]), relay.reshape(var_3145.astype('float64'), [15, 8, 15]), ), 0)
call_3147 = relay.TupleGetItem(func_962_call(relay.reshape(const_3144.astype('bool'), []), relay.reshape(var_3145.astype('bool'), [15, 8, 15]), relay.reshape(var_3145.astype('bool'), [15, 8, 15]), relay.reshape(var_3146.astype('bool'), [1, 80]), relay.reshape(var_3145.astype('float64'), [15, 8, 15]), ), 0)
bop_3148 = relay.less_equal(uop_3120.astype('bool'), const_3144.astype('bool')) # shape=(7, 14, 12)
func_1725_call = mod.get_global_var('func_1725')
func_1728_call = mutated_mod.get_global_var('func_1728')
var_3168 = relay.var("var_3168", dtype = "float64", shape = (2816,))#candidate|3168|(2816,)|var|float64
call_3167 = relay.TupleGetItem(func_1725_call(relay.reshape(var_3168.astype('float64'), [11, 16, 16])), 0)
call_3169 = relay.TupleGetItem(func_1728_call(relay.reshape(var_3168.astype('float64'), [11, 16, 16])), 0)
uop_3176 = relay.erf(bop_3148.astype('float64')) # shape=(7, 14, 12)
uop_3193 = relay.atan(uop_3176.astype('float64')) # shape=(7, 14, 12)
uop_3199 = relay.sigmoid(uop_3193.astype('float64')) # shape=(7, 14, 12)
uop_3212 = relay.rsqrt(bop_3148.astype('float64')) # shape=(7, 14, 12)
output = relay.Tuple([call_3143,var_3145,var_3146,call_3167,var_3168,uop_3199,uop_3212,])
output2 = relay.Tuple([call_3147,var_3145,var_3146,call_3169,var_3168,uop_3199,uop_3212,])
func_3217 = relay.Function([var_3145,var_3146,var_3168,], output)
mod['func_3217'] = func_3217
mod = relay.transform.InferType()(mod)
var_3218 = relay.var("var_3218", dtype = "bool", shape = (18, 100))#candidate|3218|(18, 100)|var|bool
var_3219 = relay.var("var_3219", dtype = "bool", shape = (80,))#candidate|3219|(80,)|var|bool
var_3220 = relay.var("var_3220", dtype = "float64", shape = (2816,))#candidate|3220|(2816,)|var|float64
output = func_3217(var_3218,var_3219,var_3220,)
func_3221 = relay.Function([var_3218,var_3219,var_3220,], output)
mutated_mod['func_3221'] = func_3221
mutated_mod = relay.transform.InferType()(mutated_mod)
var_3563 = relay.var("var_3563", dtype = "float64", shape = (13, 3, 10))#candidate|3563|(13, 3, 10)|var|float64
var_3564 = relay.var("var_3564", dtype = "float64", shape = (13, 3, 10))#candidate|3564|(13, 3, 10)|var|float64
bop_3565 = relay.mod(var_3563.astype('float64'), relay.reshape(var_3564.astype('float64'), relay.shape_of(var_3563))) # shape=(13, 3, 10)
func_689_call = mod.get_global_var('func_689')
func_692_call = mutated_mod.get_global_var('func_692')
const_3573 = relay.const([[4.926226],[-0.547404],[4.377205],[-9.716133],[8.649646],[-1.220774],[-9.617427],[1.913598],[0.134808],[3.758224],[-8.169024],[-4.091369],[0.121310],[6.928328],[7.168321],[6.828751],[-0.792399],[-2.290084],[-9.139989],[-4.043864],[0.823381],[-7.132559],[-8.607126],[-6.161878],[2.289071],[-4.616113],[0.215131],[-1.838812],[-5.324198],[-0.415889],[-6.778608],[2.232666],[7.232210],[-6.334244],[-9.805667],[7.694790],[0.746961],[-7.606741],[-2.699824],[-6.941955],[-0.691204],[7.866761],[6.823011],[-4.740381],[1.453773],[-4.344445],[-7.592310],[-7.234731],[3.158794],[5.604100],[-2.118675],[0.476511],[-8.259561],[2.888302],[-8.033792],[-1.759371],[-7.551535],[-6.497053],[1.090325],[9.428370],[1.778937],[-1.253527],[8.958246],[-7.137202],[9.194015],[6.067443],[-9.975673],[-1.733671],[-5.767144],[2.172271],[5.380110],[2.205779],[7.160538],[1.458673],[-9.256230],[-9.401209],[-4.569974],[3.956164],[8.893377],[-1.510816],[2.501815],[-7.340189],[8.690774],[-7.151352],[-2.089826],[-6.070527],[-5.742205],[9.494839],[-5.196075],[-6.394249],[-5.736526],[-8.518100],[-4.710965],[-9.422041],[5.487644],[-4.540370],[-9.680556],[0.580712],[8.462772],[6.406048],[0.458671],[5.848599],[9.532960],[-4.972601],[-9.167420],[-2.256818],[3.510782],[6.712014],[-6.058313],[9.184682],[7.429496],[-2.593907],[9.599672],[2.363670],[-8.023319],[-3.122673],[-7.325499],[1.182158],[5.741538],[7.236204],[-9.448561],[-5.354872],[9.626493],[6.065512],[4.859272],[6.867683],[6.601013],[7.526445],[2.899403],[8.812157],[9.924182],[-7.360806],[-2.962281],[-0.250678],[6.138435],[3.447104],[5.811021],[6.521091],[5.715742],[5.268391],[4.914992],[4.625660],[-6.925902],[2.532257],[5.463540],[0.274902],[4.104839],[1.395040],[8.623734],[4.488097],[8.215108],[8.858779],[-1.914588],[4.628010],[4.717397],[-3.802409],[-6.972985],[3.306470],[-1.186291],[-6.984643],[-3.220967],[8.379920],[3.648930],[0.615809],[-2.947692],[1.799886],[4.791659],[-9.842779],[2.102768],[6.333371],[-9.824058],[-3.723751],[-9.759047],[-8.955824],[-1.726680],[-7.146821],[-6.410977],[-7.193652],[-4.178122],[1.634177],[-7.253225],[4.565109],[3.656080],[9.443834],[6.162896],[2.913615],[9.495418],[-2.832429],[-7.424309],[-4.162413],[-5.213297],[8.361403],[-3.575139],[-1.296640],[1.555520],[4.381035],[0.459596],[4.188255],[4.795939],[1.823516],[4.812156],[-8.805125],[-2.795141],[-6.010224],[4.763805],[-9.849561],[-6.108868],[0.373197],[4.714637],[1.153053],[8.865960],[3.877500],[6.589418],[0.514671],[3.963064],[-2.732754],[6.174097],[1.019688],[0.918224],[-0.854512],[2.851347],[-4.270355],[-6.084035],[-0.203354],[-4.502282],[-7.425733],[5.095065],[-1.739796],[-0.301587],[8.054000],[-3.097180],[5.963810],[-3.906800],[-5.465843],[-4.871780],[5.324214],[2.249839],[9.029445],[2.642250],[6.049325],[-1.638134],[3.755517],[1.683898],[-6.859265],[3.934915],[-9.749841],[1.037150],[8.358792],[-4.198994],[-5.011874],[0.549325],[-1.686043],[9.754842],[-8.867434],[-6.489685],[-9.046798],[-3.772114],[-8.144021],[8.734234],[9.580219],[-0.722816],[8.261450],[7.812406],[4.812670],[-3.455771],[5.756079],[6.812785],[-8.594117],[2.428748],[3.476031],[-9.632437],[-7.622100],[6.565929],[2.562623],[-2.832456],[9.275677],[-8.946627],[-1.962475],[-0.539025],[3.774990],[1.806890],[-1.776759],[4.677145],[-3.333377],[6.230717],[-0.745705],[7.209681],[-7.354799],[2.320241],[-3.016496],[6.481619],[-7.003937],[-9.846578],[7.558889],[-2.938271],[5.901877],[1.460674],[1.988515],[-1.451497],[-0.475338],[1.131810],[5.375652],[9.256782],[-7.928592],[8.883983],[-2.615736],[-3.124691],[-5.947783],[-5.198107],[2.122491],[8.206294],[-0.606438],[-1.106526],[4.548698],[2.062071],[6.761036],[-2.879235],[-4.425002],[-3.622701],[-3.191924],[8.124124],[-1.588035],[6.075988],[-2.730249],[9.507956],[-5.687854],[-0.257856],[9.441245],[-8.473174],[9.226377],[-9.227672],[4.267793],[3.792350],[0.255662],[-7.539779],[-3.786414],[-9.963194],[4.382565],[7.551528],[9.274397],[-3.850908],[4.363415],[4.933180],[3.397119],[9.356533],[1.164124],[0.875164],[-9.662068],[-1.274540],[8.514289],[9.985369],[-5.688162],[-6.298603],[4.087150],[7.808297],[-0.565800],[4.627765],[-2.822390],[0.246995],[-0.956924]], dtype = "float32")#candidate|3573|(360, 1)|const|float32
call_3572 = relay.TupleGetItem(func_689_call(relay.reshape(const_3573.astype('float32'), [10, 4, 9]), relay.reshape(const_3573.astype('float32'), [10, 4, 9]), ), 0)
call_3574 = relay.TupleGetItem(func_692_call(relay.reshape(const_3573.astype('float32'), [10, 4, 9]), relay.reshape(const_3573.astype('float32'), [10, 4, 9]), ), 0)
output = relay.Tuple([bop_3565,call_3572,const_3573,])
output2 = relay.Tuple([bop_3565,call_3574,const_3573,])
func_3575 = relay.Function([var_3563,var_3564,], output)
mod['func_3575'] = func_3575
mod = relay.transform.InferType()(mod)
var_3576 = relay.var("var_3576", dtype = "float64", shape = (13, 3, 10))#candidate|3576|(13, 3, 10)|var|float64
var_3577 = relay.var("var_3577", dtype = "float64", shape = (13, 3, 10))#candidate|3577|(13, 3, 10)|var|float64
output = func_3575(var_3576,var_3577,)
func_3578 = relay.Function([var_3576,var_3577,], output)
mutated_mod['func_3578'] = func_3578
mutated_mod = relay.transform.InferType()(mutated_mod)
var_3749 = relay.var("var_3749", dtype = "int8", shape = ())#candidate|3749|()|var|int8
var_3750 = relay.var("var_3750", dtype = "int8", shape = (2, 15, 13))#candidate|3750|(2, 15, 13)|var|int8
bop_3751 = relay.left_shift(var_3749.astype('int8'), var_3750.astype('int8')) # shape=(2, 15, 13)
output = bop_3751
output2 = bop_3751
func_3757 = relay.Function([var_3749,var_3750,], output)
mod['func_3757'] = func_3757
mod = relay.transform.InferType()(mod)
mutated_mod['func_3757'] = func_3757
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3757_call = mutated_mod.get_global_var('func_3757')
var_3759 = relay.var("var_3759", dtype = "int8", shape = ())#candidate|3759|()|var|int8
var_3760 = relay.var("var_3760", dtype = "int8", shape = (2, 15, 13))#candidate|3760|(2, 15, 13)|var|int8
call_3758 = func_3757_call(var_3759,var_3760,)
output = call_3758
func_3761 = relay.Function([var_3759,var_3760,], output)
mutated_mod['func_3761'] = func_3761
mutated_mod = relay.transform.InferType()(mutated_mod)
var_3861 = relay.var("var_3861", dtype = "float64", shape = ())#candidate|3861|()|var|float64
const_3862 = relay.const([[0.620166,-7.780191,3.547143,-8.554688,-8.070612,-6.245455,-3.374174,-6.673650,5.355638,-1.689625,-9.116970],[3.428332,8.360090,-2.017348,0.222691,-7.132860,-8.260086,-2.089986,-9.398242,-6.802760,2.195691,-8.767415],[-3.438184,6.731557,-8.537361,-9.072549,-4.399767,-4.597424,1.461228,1.535298,4.271971,4.827253,-9.777780],[9.053603,-3.749211,3.046960,-8.761328,-4.296513,-4.571975,6.429540,6.410963,-7.688388,5.749724,-0.790156],[6.092513,3.388349,9.724210,7.638809,-4.318660,-1.982134,-1.681117,0.795981,7.203355,2.156477,1.217691],[-3.289614,-1.346789,8.751567,-6.703939,-3.597761,6.944887,-2.324160,0.511189,-8.077179,-2.041760,-8.585073],[-0.811886,5.243059,2.886466,-2.251200,3.323379,-3.652738,0.021277,-8.985516,7.850716,4.566960,-1.307450]], dtype = "float64")#candidate|3862|(7, 11)|const|float64
bop_3863 = relay.mod(var_3861.astype('float64'), const_3862.astype('float64')) # shape=(7, 11)
func_1704_call = mod.get_global_var('func_1704')
func_1708_call = mutated_mod.get_global_var('func_1708')
var_3869 = relay.var("var_3869", dtype = "int16", shape = (168,))#candidate|3869|(168,)|var|int16
call_3868 = relay.TupleGetItem(func_1704_call(relay.reshape(var_3869.astype('int16'), [12, 2, 7]), relay.reshape(var_3869.astype('int16'), [12, 2, 7]), ), 2)
call_3870 = relay.TupleGetItem(func_1708_call(relay.reshape(var_3869.astype('int16'), [12, 2, 7]), relay.reshape(var_3869.astype('int16'), [12, 2, 7]), ), 2)
output = relay.Tuple([bop_3863,call_3868,var_3869,])
output2 = relay.Tuple([bop_3863,call_3870,var_3869,])
func_3880 = relay.Function([var_3861,var_3869,], output)
mod['func_3880'] = func_3880
mod = relay.transform.InferType()(mod)
var_3881 = relay.var("var_3881", dtype = "float64", shape = ())#candidate|3881|()|var|float64
var_3882 = relay.var("var_3882", dtype = "int16", shape = (168,))#candidate|3882|(168,)|var|int16
output = func_3880(var_3881,var_3882,)
func_3883 = relay.Function([var_3881,var_3882,], output)
mutated_mod['func_3883'] = func_3883
mutated_mod = relay.transform.InferType()(mutated_mod)
var_3952 = relay.var("var_3952", dtype = "float64", shape = (10, 15, 3))#candidate|3952|(10, 15, 3)|var|float64
uop_3953 = relay.rsqrt(var_3952.astype('float64')) # shape=(10, 15, 3)
bop_3963 = relay.floor_divide(var_3952.astype('float32'), relay.reshape(uop_3953.astype('float32'), relay.shape_of(var_3952))) # shape=(10, 15, 3)
bop_3966 = relay.add(bop_3963.astype('int8'), relay.reshape(uop_3953.astype('int8'), relay.shape_of(bop_3963))) # shape=(10, 15, 3)
func_689_call = mod.get_global_var('func_689')
func_692_call = mutated_mod.get_global_var('func_692')
const_3987 = relay.const([-5.423630,9.793510,9.040585,3.040176,7.538972,7.211799,0.292454,4.948793,6.122191,-9.061162,-7.962201,-1.413635,7.608524,8.555288,2.578409,-3.053711,6.082966,4.197008,-4.263774,-9.635789,2.057585,-9.456236,6.437651,8.151980,-8.818830,-5.997565,-7.491968,-8.331694,1.139152,-9.087003,-8.130744,-2.373015,9.500145,-1.050213,4.607521,8.995582,7.190053,9.014818,0.971878,5.102015,-0.244953,-9.063653,-0.401286,5.333954,-0.406101,-1.521185,-1.618271,4.829384,-6.262367,4.873508,-5.445111,-1.909714,1.463458,-5.929327,-1.937686,-7.576469,-3.302397,3.913236,5.082584,-7.513107,1.971063,-5.217020,8.723844,1.393740,-2.824875,7.388155,8.151424,-5.944529,3.772130,4.462417,-9.174585,5.441641,-4.893753,8.157447,3.214351,-7.057556,1.511869,-8.093126,-7.247011,-7.865200,5.293446,7.198357,-6.612815,7.453246,-1.077913,3.453822,-0.313428,1.840941,-2.438277,5.460289,-6.175234,-4.845682,-7.125622,7.464668,-4.399759,5.951468,6.098986,-2.737042,-0.794688,-9.524254,-5.502243,0.966459,-0.011403,3.279415,-0.310384,-3.872251,-5.910315,-9.240922,1.518583,5.019598,8.249644,1.946290,4.649219,-5.030752,7.929585,6.828670,2.632828,4.533261,6.108364,-3.770859,5.098487,1.130950,0.827686,-0.749614,5.147213,-8.359578,2.784169,2.081298,2.241507,-1.025475,-5.735403,-6.769616,4.766457,5.884730,-3.612049,-2.441159,-5.794689,-1.131275,3.714185,8.285317,-4.543087,0.521226,5.127094,2.939576,2.542788,-2.328649,3.670006,3.103751,-7.150955,3.968314,-4.813098,-6.064826,5.936047,-6.698394,7.544848,2.678935,2.805814,2.497174,-7.351578,9.269338,7.059280,0.773019,-2.390126,2.288366,-4.245715,4.313046,-1.554354,5.453112,-2.838976,-6.238616,8.281356,-7.798902,-2.125182,-4.729111,-5.960229,-3.328294,2.147672,-6.390731,-8.237541,-5.324948,-8.698155,9.625876,7.527957,3.096802,-9.197095,9.295628,5.316996,-4.378156,-9.759862,-3.247457,-0.560248,-3.732084,9.328245,5.757540,-2.796138,-0.224437,-0.043082,3.255899,-1.932508,5.339536,-4.300115,8.768329,-0.121916,4.075363,-5.914374,5.162741,4.117503,-5.958842,-5.237503,-0.606410,3.358874,-2.911776,0.291446,7.619373,-1.095391,-1.121039,8.991319,-7.656801,-4.206051,-8.753240,-6.315600,1.658451,3.286353,-7.314374,-7.885418,-8.143730,8.611097,1.019655,-0.476257,-6.583859,6.667663,7.008115,-2.169111,5.374606,-0.425243,0.924461,1.441222,-9.513538,-4.875106,1.338207,5.027028,-5.601055,-5.582521,9.640377,-9.352380,6.133213,9.441714,0.874836,-7.831031,-7.595031,-6.558599,4.632101,-1.147506,0.914056,-6.823603,3.254849,-2.006008,-5.666949,9.295460,-4.708133,-0.869193,-8.479173,-7.469025,5.483443,-3.342957,9.612544,-2.612094,-1.448718,-6.534069,3.019724,-7.104864,8.016322,9.583851,0.568931,8.068976,-4.983854,0.827111,3.158517,-4.048702,3.550750,-5.061970,-3.783628,4.636555,-2.906415,-4.974031,8.454448,-6.555298,4.943394,-1.536441,9.605969,-8.985154,2.392943,-5.666184,-1.856796,-2.856216,1.691882,-8.859368,8.978159,-6.620390,-1.145183,5.047423,-3.955573,-2.180766,7.884287,-3.517739,-6.987360,9.825435,6.981088,1.235033,-9.151665,0.333302,-7.202679,5.834682,8.482513,9.157340,-2.810473,3.534444,7.809257,5.210042,1.773588,0.312430,-0.140457,7.637404,-6.938658,4.576467,-5.274801,-4.897217,1.111592,-3.619103,2.515339,-2.407073,6.580828,-9.386528,9.744698,0.482925,-3.121352,-0.337551,9.725061,-5.755092,-3.212385,5.507051,-1.944674,-8.166854,4.386824,-8.115650,-3.754818,1.884148,3.985724,-8.013815,0.524639,3.326713,-9.584736,-5.032241,0.555743,9.578224,2.560008,1.341097,-9.213006,6.676098,-7.566351], dtype = "float32")#candidate|3987|(360,)|const|float32
call_3986 = relay.TupleGetItem(func_689_call(relay.reshape(const_3987.astype('float32'), [10, 4, 9]), relay.reshape(const_3987.astype('float32'), [10, 4, 9]), ), 1)
call_3988 = relay.TupleGetItem(func_692_call(relay.reshape(const_3987.astype('float32'), [10, 4, 9]), relay.reshape(const_3987.astype('float32'), [10, 4, 9]), ), 1)
output = relay.Tuple([bop_3966,call_3986,const_3987,])
output2 = relay.Tuple([bop_3966,call_3988,const_3987,])
func_4013 = relay.Function([var_3952,], output)
mod['func_4013'] = func_4013
mod = relay.transform.InferType()(mod)
mutated_mod['func_4013'] = func_4013
mutated_mod = relay.transform.InferType()(mutated_mod)
var_4014 = relay.var("var_4014", dtype = "float64", shape = (10, 15, 3))#candidate|4014|(10, 15, 3)|var|float64
func_4013_call = mutated_mod.get_global_var('func_4013')
call_4015 = func_4013_call(var_4014)
output = call_4015
func_4016 = relay.Function([var_4014], output)
mutated_mod['func_4016'] = func_4016
mutated_mod = relay.transform.InferType()(mutated_mod)
var_4201 = relay.var("var_4201", dtype = "int32", shape = (3, 2, 9))#candidate|4201|(3, 2, 9)|var|int32
const_4202 = relay.const([[[2,1,3,1,2,-8,8,-1,9],[9,-7,-6,7,10,9,-3,-9,-8]],[[-6,4,8,-4,-6,-9,10,-8,1],[8,5,-5,-7,-3,5,-9,-2,-10]],[[7,-9,9,-9,5,4,1,-4,-9],[-1,1,3,7,6,6,-2,-8,-7]]], dtype = "int32")#candidate|4202|(3, 2, 9)|const|int32
bop_4203 = relay.multiply(var_4201.astype('int32'), relay.reshape(const_4202.astype('int32'), relay.shape_of(var_4201))) # shape=(3, 2, 9)
func_4013_call = mod.get_global_var('func_4013')
func_4016_call = mutated_mod.get_global_var('func_4016')
const_4224 = relay.const([9.587289,0.865044,1.836595,-5.349010,1.052457,2.772485,-5.236837,-9.728554,-5.933382,-3.166521,0.776298,8.547624,8.910647,-8.097163,-0.498995,-0.171539,-1.651935,-2.885673,-8.900072,7.330521,9.786642,6.014501,8.953742,7.173729,-2.363763,-3.138184,2.686431,-7.062389,-1.601646,7.064768,-5.613153,-4.936650,-7.437620,0.753104,3.921958,-6.716499,7.064302,-2.386541,-3.779714,-8.043440,1.533965,-1.957244,-2.627185,0.578701,6.292621,-6.563228,-7.581964,-2.135965,2.519805,-0.085099,-2.806296,5.734782,-1.125864,-1.945533,4.623063,-5.587652,5.528528,-7.967055,7.715474,-4.332383,-0.469529,-5.631401,8.152808,2.615794,-4.025652,6.980337,5.652829,-0.544084,-9.442120,-0.621847,5.301306,3.239472,7.256231,2.541118,1.035133,4.718548,-6.358236,3.654970,-9.440765,-7.981277,-0.164426,-5.111593,-5.894349,8.417958,6.878339,3.852120,-4.370534,-8.428281,-7.522627,-6.477865,8.248400,9.476421,-2.722149,-0.263436,-9.807843,7.700663,-7.128615,-8.291819,2.014706,-2.456342,3.040558,2.249605,-0.015343,0.301913,7.499113,-3.359056,6.746015,-2.292499,-0.540748,-7.524318,6.851805,4.356469,7.515736,4.202221,-9.272499,-2.852871,8.410605,1.645162,8.538908,-9.573292,6.153801,6.634242,-8.213426,-2.014594,-8.580444,4.099843,-6.028465,-3.805639,-7.642226,-6.996690,8.601218,-8.448535,8.704566,-9.533451,-8.368439,3.039797,2.113976,-4.912256,2.600464,3.818479,-1.567426,5.526023,5.054176,-7.546509,8.953089,-4.903057,6.916826,7.254812,2.183502,9.270511,-1.022513,4.656867,-3.073703,-8.987756,-9.247623,0.499122,-3.357221,4.251432,-4.833577,-3.430208,3.503622,-8.526005,1.690277,3.253598,6.174191,9.163679,8.083013,-3.803246,-8.892156,9.671571,-6.002307,3.806233,-4.823096,-9.774994,0.402114,-3.081715,-1.790597,5.389414,3.253835,-1.449221,-9.111432,-6.713443,-1.732897,9.908841,6.671797,0.972278,1.416518,0.620033,6.853650,1.150618,-2.505819,6.916710,-2.528401,-8.831015,8.792426,6.867656,-5.123842,-8.326080,-1.750863,-5.405798,-3.500323,5.909533,-8.323178,8.365758,-4.390901,-9.089357,6.850047,6.676747,7.862159,1.845349,-2.169191,-1.891082,-1.498970,1.186492,-0.793486,4.468795,4.834467,-2.041885,0.004917,-2.988563,-4.599784,-3.485566,-8.333218,-6.583031,5.304428,5.023292,-1.687950,7.495142,-7.437133,4.126419,-5.797230,1.823401,3.565935,6.446876,-6.590884,-8.833833,4.893663,-6.313291,9.338643,7.863071,-7.707500,-0.448782,-4.512015,0.397990,6.724564,2.143563,0.584071,2.948237,-0.955446,4.996482,-9.519799,-9.158475,-5.144556,-9.854380,5.892610,0.287342,-7.805839,-2.107460,1.511857,0.879533,-2.944302,-2.054636,5.062033,-2.662195,-3.128531,-0.494189,0.952672,-0.247347,4.696286,8.480267,-5.216530,-5.226553,2.438726,6.098763,1.690892,1.218832,5.267121,7.206317,1.602482,7.248188,-4.681063,5.126712,-5.550202,4.085206,-5.281610,-8.417979,4.650665,8.268909,8.993932,8.952104,0.764695,-2.550140,-9.187283,3.358199,0.618914,-8.369954,6.273954,4.756884,2.294221,0.005585,-2.099487,4.900179,6.786282,-9.100317,3.681737,8.400166,-9.472717,-2.247162,5.733117,-6.401885,-0.740177,-3.363948,-2.174102,8.246756,4.562149,0.974205,-0.253467,5.095453,3.752776,-8.718676,-3.914963,8.112872,1.009838,7.833114,-0.387254,7.517106,-1.379630,-8.115053,8.752824,5.007440,-7.377022,-9.213373,0.235723,-8.209035,3.204116,6.798742,-5.432147,-4.380982,-0.451417,8.000409,-6.814612,6.095559,-3.198559,2.120531,1.210014,-8.879700,-5.203877,-8.923056,1.475054,-4.605493,3.147164,-1.438579,0.472002,8.179462,-2.678589,-1.050507,2.260419,-9.280147,0.637701,-7.888670,-7.688045,-8.705724,1.961262,-7.867983,-1.118643,-1.274280,-9.495425,5.260774,9.390330,-3.214003,2.610257,-9.548363,-5.862208,8.128238,6.750212,4.934706,-5.344099,-5.962319,-2.176363,-4.422425,5.484475,1.292897,1.061350,3.701746,2.975578,3.787444,-5.642789,-9.107089,-3.743881,-1.629904,2.386452,4.828190,-3.037313,0.762491,-3.862188,2.970010,-0.985796,3.950550,6.732809,4.152995,-5.192353,-3.198207,-4.968689,-5.119737,-1.485370,-7.336439,-7.806566,1.620333,6.922742,5.765701,0.315796,-6.656934,8.724108,6.828763,-7.579963,-4.022164,5.134672,-5.111561,8.100821,-0.011646,2.113978,0.971262,-6.078083,-9.057057,4.404255,2.449871,-3.811429,4.309172,-6.538462,5.877075,7.984225,4.589007,-9.887161,-4.024500,-8.160623,4.637624,-2.925613,8.955856,6.135753,-1.802705,-1.196712,4.786067,0.076979,-8.584109,-6.302723,5.316813,9.417101,-1.601260,-8.929989,5.387188], dtype = "float64")#candidate|4224|(450,)|const|float64
call_4223 = relay.TupleGetItem(func_4013_call(relay.reshape(const_4224.astype('float64'), [10, 15, 3])), 0)
call_4225 = relay.TupleGetItem(func_4016_call(relay.reshape(const_4224.astype('float64'), [10, 15, 3])), 0)
bop_4227 = relay.add(const_4224.astype('uint64'), relay.reshape(call_4223.astype('uint64'), relay.shape_of(const_4224))) # shape=(450,)
bop_4230 = relay.add(const_4224.astype('uint64'), relay.reshape(call_4225.astype('uint64'), relay.shape_of(const_4224))) # shape=(450,)
func_3757_call = mod.get_global_var('func_3757')
func_3761_call = mutated_mod.get_global_var('func_3761')
const_4245 = relay.const(-3, dtype = "int8")#candidate|4245|()|const|int8
var_4246 = relay.var("var_4246", dtype = "int8", shape = (390,))#candidate|4246|(390,)|var|int8
call_4244 = func_3757_call(relay.reshape(const_4245.astype('int8'), []), relay.reshape(var_4246.astype('int8'), [2, 15, 13]), )
call_4247 = func_3757_call(relay.reshape(const_4245.astype('int8'), []), relay.reshape(var_4246.astype('int8'), [2, 15, 13]), )
func_1005_call = mod.get_global_var('func_1005')
func_1008_call = mutated_mod.get_global_var('func_1008')
var_4253 = relay.var("var_4253", dtype = "bool", shape = (160,))#candidate|4253|(160,)|var|bool
call_4252 = relay.TupleGetItem(func_1005_call(relay.reshape(var_4253.astype('bool'), [2, 5, 16])), 0)
call_4254 = relay.TupleGetItem(func_1008_call(relay.reshape(var_4253.astype('bool'), [2, 5, 16])), 0)
output = relay.Tuple([bop_4203,bop_4227,call_4244,const_4245,var_4246,call_4252,var_4253,])
output2 = relay.Tuple([bop_4203,bop_4230,call_4247,const_4245,var_4246,call_4254,var_4253,])
func_4267 = relay.Function([var_4201,var_4246,var_4253,], output)
mod['func_4267'] = func_4267
mod = relay.transform.InferType()(mod)
var_4268 = relay.var("var_4268", dtype = "int32", shape = (3, 2, 9))#candidate|4268|(3, 2, 9)|var|int32
var_4269 = relay.var("var_4269", dtype = "int8", shape = (390,))#candidate|4269|(390,)|var|int8
var_4270 = relay.var("var_4270", dtype = "bool", shape = (160,))#candidate|4270|(160,)|var|bool
output = func_4267(var_4268,var_4269,var_4270,)
func_4271 = relay.Function([var_4268,var_4269,var_4270,], output)
mutated_mod['func_4271'] = func_4271
mutated_mod = relay.transform.InferType()(mutated_mod)
var_4816 = relay.var("var_4816", dtype = "float64", shape = ())#candidate|4816|()|var|float64
var_4817 = relay.var("var_4817", dtype = "float64", shape = (4, 7, 5))#candidate|4817|(4, 7, 5)|var|float64
bop_4818 = relay.floor_mod(var_4816.astype('float64'), var_4817.astype('float64')) # shape=(4, 7, 5)
func_1005_call = mod.get_global_var('func_1005')
func_1008_call = mutated_mod.get_global_var('func_1008')
var_4826 = relay.var("var_4826", dtype = "bool", shape = (160,))#candidate|4826|(160,)|var|bool
call_4825 = relay.TupleGetItem(func_1005_call(relay.reshape(var_4826.astype('bool'), [2, 5, 16])), 0)
call_4827 = relay.TupleGetItem(func_1008_call(relay.reshape(var_4826.astype('bool'), [2, 5, 16])), 0)
func_3217_call = mod.get_global_var('func_3217')
func_3221_call = mutated_mod.get_global_var('func_3221')
var_4844 = relay.var("var_4844", dtype = "bool", shape = (1800,))#candidate|4844|(1800,)|var|bool
var_4845 = relay.var("var_4845", dtype = "bool", shape = (80,))#candidate|4845|(80,)|var|bool
var_4846 = relay.var("var_4846", dtype = "float64", shape = (2816,))#candidate|4846|(2816,)|var|float64
call_4843 = relay.TupleGetItem(func_3217_call(relay.reshape(var_4844.astype('bool'), [18, 100]), relay.reshape(var_4845.astype('bool'), [80,]), relay.reshape(var_4846.astype('float64'), [2816,]), ), 5)
call_4847 = relay.TupleGetItem(func_3221_call(relay.reshape(var_4844.astype('bool'), [18, 100]), relay.reshape(var_4845.astype('bool'), [80,]), relay.reshape(var_4846.astype('float64'), [2816,]), ), 5)
func_4013_call = mod.get_global_var('func_4013')
func_4016_call = mutated_mod.get_global_var('func_4016')
const_4849 = relay.const([-9.842425,-4.363661,2.392268,8.358056,-2.449808,-4.766317,-5.560668,-7.568349,2.781834,2.309759,1.299473,7.053971,7.502275,-2.626066,3.348162,1.089724,-6.124183,9.627386,-8.929170,3.758836,-8.862458,-2.841103,-2.830154,6.181230,7.858827,-0.414712,-0.879404,9.364704,8.749886,-8.311278,3.324426,-8.353950,3.200382,1.469174,-7.524594,-1.060709,0.987992,3.285693,7.966372,9.713582,7.406239,3.544236,5.177365,-7.921094,-9.451909,4.916189,-6.099740,-2.806396,6.604525,4.777073,-6.406995,-0.785620,-5.790030,4.220920,-1.559665,1.795422,-6.289945,-5.362001,7.214721,-3.112147,2.173429,-4.820452,4.280428,-9.120011,-6.177967,-8.035012,8.250984,-7.162148,-7.806642,-6.775732,-4.437327,1.881509,-3.821297,-3.614495,-3.244619,-3.067308,-7.859670,0.736835,3.044063,-5.544229,-5.362058,-1.600477,2.493750,6.978561,-9.204517,0.783900,2.744610,5.334438,-2.726000,-4.452232,3.047061,-4.892136,8.800563,2.820102,0.777041,-1.771411,4.028582,-0.572777,-8.821974,-1.850669,0.038875,7.846533,-5.547052,-3.940994,2.636925,6.181905,3.777691,-4.327548,-4.203350,0.743981,-7.599154,2.203661,-9.531785,-2.417751,4.030210,3.753101,-7.341835,-8.746154,-0.967593,7.073524,1.420962,-9.020105,1.615401,9.420425,-2.608317,6.279923,-4.904561,-3.903807,-1.265016,5.382231,-2.217157,-4.273082,-6.762576,5.646489,-0.323984,-1.508479,-4.847957,-1.221061,9.596017,9.091525,3.665394,-3.922975,5.568892,-6.768749,-0.020165,7.517300,7.778455,4.677685,-2.090095,-3.795812,-9.321294,-2.912774,2.858633,-4.140256,-7.709829,-0.043421,-3.389901,-9.138699,-9.360954,-0.047431,-8.924602,7.199008,2.622461,6.411425,3.334849,-6.665590,-6.216862,-9.831017,-1.333380,5.622624,-7.018611,-5.594674,-9.543454,-3.885485,1.504159,3.983737,3.569774,6.710290,-3.983653,-6.532752,-5.777382,0.073458,-6.550471,-4.544224,-6.873834,9.741026,-0.100331,1.939720,-8.701817,9.829643,-7.082775,-7.320606,5.546399,0.026873,-8.059513,7.546216,-1.390025,-3.210591,5.407504,2.011875,-7.942719,-1.054452,-2.615811,2.156618,-7.903594,4.028874,-8.050395,-2.974535,6.499896,9.069563,4.878053,7.637455,8.201753,-3.619269,-4.787798,-3.536282,7.617422,3.166953,-7.108331,-0.576489,6.712106,-4.793827,0.161459,7.873452,-7.446444,3.198119,-2.049054,6.487121,-4.958989,-7.844791,-8.156447,5.192911,6.117761,3.045679,7.725462,-5.183240,4.101667,-4.936359,5.674767,-1.919010,-2.615231,-6.273528,-6.557505,-1.630293,1.238197,8.866907,3.427473,0.797040,-5.783630,0.512580,2.865856,-2.494454,-6.294142,2.658433,8.498370,8.172840,3.945210,-1.755654,2.080345,-9.293168,5.820860,-3.147227,-6.121458,2.069411,7.279458,4.887699,5.655849,9.755108,-4.007976,3.191039,-5.184835,-2.260077,-5.153018,5.650327,1.667370,2.855911,-9.450534,-4.371610,4.417395,8.709722,-5.050442,8.121246,-0.062343,3.056022,-8.027244,-9.949963,4.372564,-5.360974,9.407083,7.451207,-9.522612,8.738344,4.736349,8.188802,-8.245511,8.751474,9.457891,-1.009356,2.280475,9.636020,-7.018044,8.786886,-1.012089,-1.012439,6.945136,-0.571017,-4.142725,-4.420488,9.082861,-1.483736,-6.339134,-6.165689,8.030481,-5.306413,-0.143932,-8.969458,7.000096,-8.202406,3.682263,-1.437980,0.425585,-2.590166,-5.655875,3.763466,7.202307,5.536437,8.829531,8.546087,-4.758096,3.572118,9.221082,-0.698168,6.662655,-3.020462,9.240184,-9.978175,-4.025420,-7.564557,1.721606,-5.342789,6.145168,3.472166,-2.834638,3.300687,-5.817887,3.480273,-1.018571,-3.493655,1.583318,8.774315,1.131460,4.825199,-7.267343,9.106221,7.041852,-2.757722,7.596986,5.667955,1.244749,4.431719,7.085201,8.202646,-4.454195,-0.801047,6.259220,-2.667965,1.557640,-7.653501,1.865328,0.893200,8.626739,6.179540,7.789412,-3.268017,-5.572246,-7.453223,0.045993,5.948283,-0.163808,5.686466,0.787943,-1.379435,4.879254,3.944403,-3.140500,0.385152,-1.272383,2.766518,1.201557,-8.441104,2.911262,6.239944,9.311289,-1.858022,-9.605660,0.626009,6.057830,-3.995128,-5.702876,4.254968,9.605837,-4.400711,9.986015,9.752654,-2.860402,-7.930342,7.929735,-5.800155,7.773825,-7.856800,-8.667505,3.652942,1.116656,-1.221091,5.703219,9.431417,-8.507942,5.673529,3.784383,-0.150732,-7.749313,9.267961,-2.512385,-9.528101,-7.874396,-6.666346,-6.345298,-3.823715,1.013141,8.123579,-9.389426,9.585619,9.513561,-8.674229,-1.763942,-4.741643,-0.583951,-9.559235,5.688095,-9.428133,9.370290,-8.869277,-5.014308,5.876980,8.724392,7.311718,7.020257,-7.259535,1.367269,3.445290], dtype = "float64")#candidate|4849|(450,)|const|float64
call_4848 = relay.TupleGetItem(func_4013_call(relay.reshape(const_4849.astype('float64'), [10, 15, 3])), 1)
call_4850 = relay.TupleGetItem(func_4016_call(relay.reshape(const_4849.astype('float64'), [10, 15, 3])), 1)
output = relay.Tuple([bop_4818,call_4825,var_4826,call_4843,var_4844,var_4845,var_4846,call_4848,const_4849,])
output2 = relay.Tuple([bop_4818,call_4827,var_4826,call_4847,var_4844,var_4845,var_4846,call_4850,const_4849,])
func_4854 = relay.Function([var_4816,var_4817,var_4826,var_4844,var_4845,var_4846,], output)
mod['func_4854'] = func_4854
mod = relay.transform.InferType()(mod)
mutated_mod['func_4854'] = func_4854
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4854_call = mutated_mod.get_global_var('func_4854')
var_4856 = relay.var("var_4856", dtype = "float64", shape = ())#candidate|4856|()|var|float64
var_4857 = relay.var("var_4857", dtype = "float64", shape = (4, 7, 5))#candidate|4857|(4, 7, 5)|var|float64
var_4858 = relay.var("var_4858", dtype = "bool", shape = (160,))#candidate|4858|(160,)|var|bool
var_4859 = relay.var("var_4859", dtype = "bool", shape = (1800,))#candidate|4859|(1800,)|var|bool
var_4860 = relay.var("var_4860", dtype = "bool", shape = (80,))#candidate|4860|(80,)|var|bool
var_4861 = relay.var("var_4861", dtype = "float64", shape = (2816,))#candidate|4861|(2816,)|var|float64
call_4855 = func_4854_call(var_4856,var_4857,var_4858,var_4859,var_4860,var_4861,)
output = call_4855
func_4862 = relay.Function([var_4856,var_4857,var_4858,var_4859,var_4860,var_4861,], output)
mutated_mod['func_4862'] = func_4862
mutated_mod = relay.transform.InferType()(mutated_mod)
var_4864 = relay.var("var_4864", dtype = "float64", shape = (14, 6, 9))#candidate|4864|(14, 6, 9)|var|float64
uop_4865 = relay.log2(var_4864.astype('float64')) # shape=(14, 6, 9)
output = relay.Tuple([uop_4865,])
output2 = relay.Tuple([uop_4865,])
func_4871 = relay.Function([var_4864,], output)
mod['func_4871'] = func_4871
mod = relay.transform.InferType()(mod)
var_4872 = relay.var("var_4872", dtype = "float64", shape = (14, 6, 9))#candidate|4872|(14, 6, 9)|var|float64
output = func_4871(var_4872)
func_4873 = relay.Function([var_4872], output)
mutated_mod['func_4873'] = func_4873
mutated_mod = relay.transform.InferType()(mutated_mod)
var_4945 = relay.var("var_4945", dtype = "float64", shape = (13, 15, 15))#candidate|4945|(13, 15, 15)|var|float64
uop_4946 = relay.asinh(var_4945.astype('float64')) # shape=(13, 15, 15)
func_2482_call = mod.get_global_var('func_2482')
func_2485_call = mutated_mod.get_global_var('func_2485')
var_4952 = relay.var("var_4952", dtype = "uint16", shape = (84, 2))#candidate|4952|(84, 2)|var|uint16
const_4953 = relay.const([[-3,-6,-7,1,2,-6,-6,-5,8,-4,1,3],[-5,4,-8,1,-3,10,2,5,5,2,-8,10],[7,3,5,3,1,-9,10,-10,-9,-3,10,-6],[-9,-10,5,5,5,9,-5,9,8,5,-6,-2],[-3,-7,-5,2,1,-3,2,-8,7,5,10,8],[-10,9,-7,-2,-8,-5,-3,-8,-7,-3,-10,-5],[10,1,-4,9,1,3,-1,-8,5,1,-10,-4],[-2,7,-8,1,2,10,-10,-3,7,6,-10,-6],[-8,5,-7,-5,4,1,4,-1,-1,-6,10,-1],[-3,4,3,-10,-8,-1,4,6,-9,1,6,-2],[3,-9,5,-9,-6,6,4,10,-3,-10,6,6],[-10,1,-8,-4,-10,3,2,-8,6,6,9,5],[7,-10,1,10,-2,-9,3,3,-8,-9,-10,-7],[-10,-8,10,-3,-1,4,1,-5,-7,7,-10,3],[7,-8,-10,3,1,9,7,10,8,-1,-10,-6],[-1,-6,3,10,-3,7,7,-3,5,10,7,1],[-6,6,9,2,7,2,9,-10,-4,6,-8,10],[3,5,-3,-5,1,4,3,9,-4,-10,6,-5],[-8,2,10,-9,-3,10,3,3,-7,3,5,-2],[4,1,-3,-10,9,-8,3,1,4,-2,-9,10],[-1,9,-4,4,6,-9,6,-9,3,-4,-5,-4],[10,-5,-8,8,5,-7,10,-8,-1,-3,-8,1],[-2,-8,4,5,8,5,-2,-9,-8,-5,-10,-3],[9,9,10,9,-9,-8,-10,6,-10,4,-2,10],[-9,-10,-7,-1,1,-6,-2,-5,-1,-1,-6,9],[-8,10,5,-1,5,5,-6,-2,6,10,-10,-8],[-9,-2,-8,3,-3,7,4,-2,1,5,-4,4],[3,-10,8,4,9,-4,-6,-2,-3,6,-6,8],[-6,5,-2,-1,-3,-7,-1,10,-10,4,3,-4],[-4,4,1,-7,9,-8,-1,5,2,-4,-7,-10],[1,3,-1,-10,9,4,10,-6,5,7,5,-1],[5,9,-2,-7,4,-6,-8,9,-4,7,8,10],[-9,1,-10,10,-8,7,7,-4,3,5,8,-9],[1,-4,-3,-4,5,8,-8,3,7,-7,-4,-7],[-10,-10,-10,-1,-7,10,3,-4,-9,-6,-3,4],[-8,6,3,3,-8,4,-4,-9,-1,-2,-2,3],[-9,8,-7,-1,5,-1,3,-4,6,10,-6,-10],[-7,1,9,1,-2,-9,3,-8,-1,9,-2,8],[-2,10,9,-4,4,-6,-1,2,-7,-4,3,9],[10,10,10,2,8,1,-3,4,2,2,-8,-7],[-5,5,3,-4,1,-7,-3,6,-2,-9,-2,4],[-4,7,1,8,5,6,7,-2,-7,3,1,-3],[6,10,4,2,-2,-9,3,3,-1,7,-10,-8],[2,-6,1,-6,1,5,-1,3,-7,8,-8,-7],[9,-8,-5,-7,10,-9,-3,7,10,1,-10,5],[-5,-5,-6,-3,-8,-6,-7,-3,-6,-7,-7,5],[8,-9,10,-6,-10,1,5,3,-5,10,3,9],[4,-2,-2,-10,-5,-1,-6,-10,-7,-4,-5,8],[7,-3,1,-2,2,8,3,6,-9,-10,1,-1],[3,3,-2,9,10,2,6,8,9,1,6,-7],[4,9,-1,6,-6,3,1,-7,-6,4,-4,9],[10,3,-7,2,10,-7,-4,5,3,9,-2,6],[-7,1,5,-5,1,-3,-10,2,-8,3,3,3],[-7,-9,-1,8,-5,9,8,5,6,8,2,-8],[-8,-4,10,-4,-4,-8,7,-2,3,-2,-9,-8],[4,-1,-5,-9,-1,-3,-4,9,-1,-10,-3,1],[-8,-6,-2,2,-2,4,-3,10,6,6,-2,8],[4,-2,-2,2,7,-7,-2,-5,-9,4,2,7],[-9,9,-1,-5,-3,-1,-9,5,1,-3,10,-7],[-8,2,-5,7,-3,5,3,7,6,-3,1,9],[1,-4,3,-9,-4,-9,9,5,2,3,4,1],[10,-3,3,4,7,2,-3,8,-1,8,-5,-1],[-7,-4,8,8,-1,-10,6,-8,-4,-2,-3,-4],[-9,4,7,1,-2,2,-10,8,5,6,2,6],[-6,2,-1,2,9,2,-3,-10,7,7,-4,1],[-4,3,-10,-3,9,6,2,-8,5,-8,2,-7],[10,8,-10,-5,5,10,9,4,1,-6,7,5],[-5,-4,1,-7,5,4,4,10,9,5,-5,8],[6,-10,-9,6,-10,-2,-2,-1,-4,-10,6,6],[-10,-7,-9,-3,-8,-9,-10,2,5,-2,-3,-2],[9,3,-4,5,1,2,-7,-6,-8,4,8,-1],[-10,-10,7,7,-5,-3,3,-6,-10,-6,-1,-3],[-5,-10,-3,-8,3,5,1,6,-6,7,-9,-6],[1,-7,4,5,9,6,6,6,-3,1,-4,-2],[-8,-2,5,-7,9,9,5,7,-9,7,-7,9],[5,8,9,-10,2,-5,9,1,7,3,4,-8],[-3,10,-8,-3,-9,2,10,6,-5,7,2,-4],[-10,2,9,8,-5,-3,7,5,5,-5,-1,-9],[3,-2,5,-5,7,8,-7,7,5,4,5,2],[-7,7,10,-6,-3,8,-8,-3,-2,10,-7,9],[6,4,3,3,2,9,7,7,-8,8,-9,9],[-1,-9,6,8,3,5,-9,5,-8,7,2,7],[-8,5,5,-9,5,-5,-7,-4,9,4,8,3],[-6,5,-2,-7,7,-8,-6,-1,4,-1,-10,-9],[4,7,5,-10,-10,-10,-7,-5,-8,9,9,-4],[-5,-3,-10,4,-10,-10,2,-7,-6,7,3,-8],[-6,-5,-6,-7,6,7,-6,1,-5,10,-10,-2],[-5,10,2,9,4,2,-4,4,-2,-5,-4,-4],[-7,6,3,-6,8,6,-1,-9,-2,-6,1,8],[10,2,2,-1,-10,8,5,-4,7,5,7,-4],[5,7,1,9,-9,-5,9,-7,5,4,9,-4],[-10,-4,-1,7,-2,3,-8,-5,5,5,8,-3],[-9,-2,7,-7,-5,3,1,1,4,7,8,8],[-3,-7,9,3,-9,8,-3,4,-6,-3,8,-2],[-9,4,-10,9,9,6,8,-8,6,-4,1,-6],[-4,5,2,4,-4,-7,5,10,3,-2,5,7],[-5,2,-6,2,5,4,5,-9,8,-5,-3,7],[-1,7,10,-1,3,-1,-2,-1,-2,-6,-2,-8],[-10,-5,10,-9,2,8,7,7,5,-1,4,-5],[8,5,-8,-2,8,1,1,6,3,-5,7,2],[-3,8,8,6,-7,-6,4,3,-5,-9,-4,10],[-10,10,9,9,9,-1,-3,3,-6,4,6,3],[2,10,6,5,-6,-5,-9,9,2,-4,-5,-2],[5,4,-3,-5,-8,3,4,3,-3,5,3,-1],[-3,7,-2,-10,6,8,-2,8,-7,-5,-7,9],[7,3,7,2,-8,10,1,-7,-6,8,-8,-8],[-7,6,-3,5,10,-7,-1,8,1,1,8,9],[-5,-1,-5,-9,-2,-8,9,-5,3,-7,3,6],[-3,-4,-5,6,1,-4,-6,9,-8,-3,10,8],[-9,8,2,6,10,-8,-2,-6,4,9,3,-8],[-5,-9,-10,-8,4,1,-9,1,8,6,-6,4],[4,-1,-1,7,-1,-3,-5,-8,-9,5,7,-1],[7,-6,2,4,3,-1,4,2,-6,4,10,-2],[-4,-8,5,5,-7,-7,-1,2,-6,-8,-3,-6],[9,-4,-4,7,5,9,5,2,-7,8,9,1],[5,6,2,-8,-3,-8,-9,5,10,-6,1,4],[6,-7,-4,-10,8,4,9,-10,6,-9,5,-1],[-7,-8,4,8,6,4,-2,6,2,1,-3,6],[-1,4,-9,8,1,-6,-10,4,-8,5,-5,-1],[2,-2,4,-4,-3,10,-5,-9,6,3,10,3],[8,-9,10,3,3,-7,-1,4,1,-5,-2,-5],[10,8,7,-7,1,9,-5,1,6,-4,9,3],[2,6,-4,6,-9,3,6,-1,5,6,10,9],[7,5,1,-6,9,9,-3,7,-9,-5,2,2],[6,9,-7,-6,-2,-10,10,-8,-8,-2,3,-2],[-4,7,-5,-5,-7,10,3,-8,-6,1,-4,5]], dtype = "uint16")#candidate|4953|(126, 12)|const|uint16
call_4951 = func_2482_call(relay.reshape(var_4952.astype('uint16'), [1, 14, 12]), relay.reshape(const_4953.astype('uint16'), [9, 14, 12]), )
call_4954 = func_2482_call(relay.reshape(var_4952.astype('uint16'), [1, 14, 12]), relay.reshape(const_4953.astype('uint16'), [9, 14, 12]), )
uop_4959 = relay.atan(uop_4946.astype('float64')) # shape=(13, 15, 15)
bop_4973 = relay.floor_mod(uop_4946.astype('float64'), relay.reshape(uop_4959.astype('float64'), relay.shape_of(uop_4946))) # shape=(13, 15, 15)
func_4013_call = mod.get_global_var('func_4013')
func_4016_call = mutated_mod.get_global_var('func_4016')
var_4980 = relay.var("var_4980", dtype = "float64", shape = (450,))#candidate|4980|(450,)|var|float64
call_4979 = relay.TupleGetItem(func_4013_call(relay.reshape(var_4980.astype('float64'), [10, 15, 3])), 0)
call_4981 = relay.TupleGetItem(func_4016_call(relay.reshape(var_4980.astype('float64'), [10, 15, 3])), 0)
uop_4982 = relay.rsqrt(uop_4959.astype('float32')) # shape=(13, 15, 15)
uop_4985 = relay.cosh(uop_4959.astype('float64')) # shape=(13, 15, 15)
output = relay.Tuple([call_4951,var_4952,const_4953,bop_4973,call_4979,var_4980,uop_4982,uop_4985,])
output2 = relay.Tuple([call_4954,var_4952,const_4953,bop_4973,call_4981,var_4980,uop_4982,uop_4985,])
func_4996 = relay.Function([var_4945,var_4952,var_4980,], output)
mod['func_4996'] = func_4996
mod = relay.transform.InferType()(mod)
var_4997 = relay.var("var_4997", dtype = "float64", shape = (13, 15, 15))#candidate|4997|(13, 15, 15)|var|float64
var_4998 = relay.var("var_4998", dtype = "uint16", shape = (84, 2))#candidate|4998|(84, 2)|var|uint16
var_4999 = relay.var("var_4999", dtype = "float64", shape = (450,))#candidate|4999|(450,)|var|float64
output = func_4996(var_4997,var_4998,var_4999,)
func_5000 = relay.Function([var_4997,var_4998,var_4999,], output)
mutated_mod['func_5000'] = func_5000
mutated_mod = relay.transform.InferType()(mutated_mod)
var_5048 = relay.var("var_5048", dtype = "int64", shape = ())#candidate|5048|()|var|int64
var_5049 = relay.var("var_5049", dtype = "int64", shape = (1, 13, 11))#candidate|5049|(1, 13, 11)|var|int64
bop_5050 = relay.bitwise_or(var_5048.astype('int64'), var_5049.astype('int64')) # shape=(1, 13, 11)
var_5056 = relay.var("var_5056", dtype = "int64", shape = (1, 13, 11))#candidate|5056|(1, 13, 11)|var|int64
bop_5057 = relay.maximum(var_5049.astype('uint16'), relay.reshape(var_5056.astype('uint16'), relay.shape_of(var_5049))) # shape=(1, 13, 11)
uop_5060 = relay.rsqrt(var_5056.astype('float64')) # shape=(1, 13, 11)
func_956_call = mod.get_global_var('func_956')
func_962_call = mutated_mod.get_global_var('func_962')
const_5071 = relay.const([False,True,False,False,True,True,True,True,True,False,True,True,False,True,True,True,False,True,False,True,True,False,False,True,True,False,True,False,True,False,False,True,True,True,True,False,False,False,False,True,False,True,False,True,False,False,False,False,True,False,False,True,False,False,False,False,False,True,False,True,True,True,True,True,False,False,True,False,True,True,True,True,True,True,False,True,True,True,False,True,True,False,False,False,False,False,False,False,True,False,False,True,True,True,False,True,True,True,True,False,True,False,False,False,False,False,True,True,True,True,False,True,True,False,True,True,False,True,False,False,True,False,True,True,True,True,False,False,False,False,True,True,False,True,True,False,True,True,False,True,False,False,False,False,True,True,True,True,False,True,True,True,True,False,False,False,True,True,True,False,True,False,True,True,True,True,False,False,False,False,True,False,False,True,False,True,False,False,True,False,True,False,False,True,True,False,True,False,True,False,False,False,False,False,False,True,True,False,False,True,False,True,True,False,True,False,False,True,False,True,False,True,True,False,False,False,False,False,True,False,False,True,False,True,True,False,False,False,False,False,True,False,False,True,True,True,True,True,False,True,False,False,False,True,False,True,False,True,True,True,True,True,False,True,False,False,False,True,False,False,True,False,True,True,True,False,False,False,True,True,True,True,True,True,False,False,False,False,True,True,True,False,True,False,True,True,False,True,False,False,False,False,False,True,True,True,True,False,True,False,True,False,True,False,False,True,False,False,False,True,False,True,True,True,True,True,False,True,False,True,False,False,True,False,True,False,False,False,False,True,False,True,False,True,False,False,True,False,False,True,False,False,False,True,True,False,False,False,True,True,True,True,True,False,False,True,False,False,True,True,True,False,False,True,True,False,True,False,True,False,True,True,False,False,False,False,False,True,False,True,False,True,True,True,True,True,False,True,True,False,False,False,False,True,False,True,True,True,False,False,True,True,True,False,True,False,False,True,True,False,True,True,True,False,False,False,True,True,True,False,True,False,False,True,True,False,False,False,False,False,True,True,False,False,True,True,False,True,True,True,True,False,False,False,False,True,False,True,False,False,True,True,False,True,False,True,False,False,True,False,True,False,True,True,True,True,False,True,False,True,True,False,True,True,False,True,False,True,False,False,True,True,True,True,True,True,False,True,False,True,True,True,False,False,False,True,True,False,False,False,False,True,False,True,True,False,True,True,True,True,False,False,True,True,True,False,True,True,True,True,True,False,False,True,False,False,False,False,False,False,False,False,False,False,False,True,False,True,False,False,False,False,False,True,False,False,True,True,True,False,False,False,False,False,True,True,False,True,True,False,False,True,True,False,True,True,True,True,False,True,True,False,False,False,False,False,False,True,True,True,False,True,False,False,True,True,True,True,True,False,True,True,True,False,True,False,True,False,False,True,True,True,False,True,True,False,True,True,True,False,True,True,True,True,False,False,False,True,True,True,False,True,False,True,True,True,False,True,True,False,False,True,True,False,False,True,False,False,False,False,False,True,True,False,False,True,False,True,True,False,False,True,True,True,False,False,False,False,True,False,False,False,True,False,False,True,True,True,True,True,True,False,True,False,False,True,False,False,False,True,False,True,False,True,False,False,False,False,True,True,False,True,True,True,True,False,True,False,True,False,False,False,False,True,False,False,False,False,True,True,True,True,False,True,True,False,False,True,False,True,False,True,False,False,False,False,False,True,False,True,False,False,True,False,True,True,True,False,False,False,True,True,True,True,True,False,True,True,True,True,False,False,False,False,False,True,False,False,False,True,True,False,True,False,True,True,True,False,True,True,False,False,True,True,True,False,False,False,True,True,True,True,True,False,True,True,True,False,True,True,True,False,False,False,False,True,True,False,True,False,True,True,False,False,False,True,False,False,True,True,False,True,False,True,True,False,True,False,False,False,True,True,True,True,True,True,False,True,True,True,True,True,False,False,True,True,True,False,True,True,True,True,False,False,True,True,False,False,True,False,False,False,True,True,False,False,True,False,True,False,False,True,True,False,True,True,True,False,True,True,True,False,False,True,False,True,False,False,True,True,False,False,False,True,True,False,False,False,False,True,True,False,False,False,True,True,True,False,False,False,True,True,True,False,True,True,True,True,False,True,True,False,True,True,False,False,True,False,True,True,True,False,False,False,False,True,True,False,True,True,False,True,True,True,True,False,True,False,True,True,True,False,True,False,True,True,True,False,True,False,False,True,False,False,True,False,True,False,False,False,False,True,True,True,False,False,True,True,True,False,False,False,True,False,True,False,True,False,True,True,False,True,False,False,True,True,False,False,True,True,False,True,False,False,False,False,False,True,False,True,False,False,False,True,False,True,True,False,True,False,True,True,True,True,True,False,False,True,False,True,False,True,True,False,True,True,True,True,True,True,True,True,True,True,False,False,False,True,False,True,False,True,False,True,False,True,False,False,False,False,True,True,True,False,True,False,False,False,False,True,True,True,False,True,False,False,True,False,True,True,True,True,False,True,True,False,False,True,False,False,True,True,True,True,False,True,True,False,True,True,True,True,False,True,False,False,True,True,False,False,False,True,False,False,False,True,False,False,False,False,True,True,True,False,False,True,True,False,True,True,True,False,False,False,True,False,False,False,True,True,True,True,False,True,True,True,False,True,True,False,True,False,True,False,True,False,False,False,False,True,True,True,False,True,True,True,True,False,False,False,True,True,True,True,False,False,False,False,True,False,False,False,False,True,True,True,True,True,False,True,False,True,True,False,True,False,False,False,False,False,True,True,True,False,True,True,True,True,True,False,True,True,True,False,False,False,True,False,True,True,True,True,True,False,False,False,True,False,False,True,False,True,True,True,False,False,False,True,True,True,True,True,False,False,True,False,False,False,False,True,False,False,True,True,False,True,True,True,True,True,True,True,True,False,False,True,False,False,False,True,True,True,False,True,False,True,True,False,False,False,False,False,False,True,True,False,False,False,False,True,True,True,False,False,True,False,True,True,False,True,False,True,True,True,False,True,False,True,True,False,True,True,False,True,False,True,False,False,True,False,True,True,True,True,True,False,True,True,True,True,False,True,False,True,False,False,False,True,False,False,True,True,True,False,True,False,True,True,False,True,True,False,False,False,True,True,False,True,False,True,False,True,False,True,False,True,True,True,False,True,True,True,True,False,True,False,False,True,True,True,False,False,True,False,False,False,True,False,True,False,True,False,True,True,True,True,False,False,False,False,False,True,False,True,False,True,True,False,False,False,True,False,False,False,False,False,True,False,False,False,False,True,False,True,False,True,False,True,False,True,True,False,False,True,True,False,True,False,True,True,False,False,False,False,True,False,False,False,False,False,False,False,True,True,True,True,False,False,False,False,True,False,False,True,True,True,False,False,True,True,False,True,True,False,True,False,False,True,False,True,True,True,True,False,False,True,False,False,True,False,True,False,False,True,True,False,True,True,False,False,False,False,False,False,False,True,False,True,True,True,False,False,False,True,True,False,False,True,False,True,True,True,True,False,True,True,False,False,False,False,False,True,True,False,True,True,False,True,False,True,False,False,True,False,False,False,False,False,True,True,False,True,False,True,True,True,False,True,True,True,True,False,False,False,False,True,False,False,False,False,True,True,True,True,True,True,True,False,True,True,True,True,False,True,True,True,True,True,False,False,False,True,False,False,False,True,True,False,True,False,False,True,True,True,False,False,False,True,False,False,False,True,True,False,True,False,True,False,False,True,False,False,True,True,True,True,False,False,True,True,False,True,False,True,True,False,False,True,False,False,True,False,False,True,True,True,True,False,True,True,False,True,False,True,False,True,False,False,True,True,False,False,False,False,True,True,True,True,True,True,False,False,True,False,True,False,True,True,True,False,False,True,True,False,False,False,True,False,False,True,True,False,True,True,True,False,True,False,False,False,True,False,False,False,False,False,True,True,True,False,True,True,True,False,False,True,False,True,True,True,False,False,True,True,True,False,False,False,False,False,False,True,False,True,False,False,True,True,True,False,True,False,True,False,False,True,True,True,True,False,False,True,False,True,True,True,False,True,False,False,True,False,False,True,True,False,True,False,True,False,False,False,False,False,False,False,True,True,True,False,True,True,False,True,True,True,False,True,False,False,True,True,True,True,False,False,True,True,True,False,True,True,False,True,True,False,True,True,True,True], dtype = "bool")#candidate|5071|(1800,)|const|bool
const_5072 = relay.const([True,True,True,False,False,False,False,False,False,True,True,True,True,False,True,False,True,True,True,False,False,False,False,False,False,True,False,True,False,False,True,False,False,True,False,False,True,True,False,True,False,False,True,False,False,False,False,True,True,False,True,True,False,True,False,False,False,False,True,True,False,True,True,False,False,True,False,True,False,True,True,True,True,False,True,True,False,True,False,True], dtype = "bool")#candidate|5072|(80,)|const|bool
call_5070 = relay.TupleGetItem(func_956_call(relay.reshape(var_5048.astype('bool'), []), relay.reshape(const_5071.astype('bool'), [15, 8, 15]), relay.reshape(const_5071.astype('bool'), [15, 8, 15]), relay.reshape(const_5072.astype('bool'), [1, 80]), relay.reshape(const_5071.astype('float64'), [15, 8, 15]), ), 1)
call_5073 = relay.TupleGetItem(func_962_call(relay.reshape(var_5048.astype('bool'), []), relay.reshape(const_5071.astype('bool'), [15, 8, 15]), relay.reshape(const_5071.astype('bool'), [15, 8, 15]), relay.reshape(const_5072.astype('bool'), [1, 80]), relay.reshape(const_5071.astype('float64'), [15, 8, 15]), ), 1)
bop_5079 = relay.subtract(var_5056.astype('int32'), var_5048.astype('int32')) # shape=(1, 13, 11)
output = relay.Tuple([bop_5050,bop_5057,uop_5060,call_5070,const_5071,const_5072,bop_5079,])
output2 = relay.Tuple([bop_5050,bop_5057,uop_5060,call_5073,const_5071,const_5072,bop_5079,])
func_5084 = relay.Function([var_5048,var_5049,var_5056,], output)
mod['func_5084'] = func_5084
mod = relay.transform.InferType()(mod)
mutated_mod['func_5084'] = func_5084
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5084_call = mutated_mod.get_global_var('func_5084')
var_5086 = relay.var("var_5086", dtype = "int64", shape = ())#candidate|5086|()|var|int64
var_5087 = relay.var("var_5087", dtype = "int64", shape = (1, 13, 11))#candidate|5087|(1, 13, 11)|var|int64
var_5088 = relay.var("var_5088", dtype = "int64", shape = (1, 13, 11))#candidate|5088|(1, 13, 11)|var|int64
call_5085 = func_5084_call(var_5086,var_5087,var_5088,)
output = call_5085
func_5089 = relay.Function([var_5086,var_5087,var_5088,], output)
mutated_mod['func_5089'] = func_5089
mutated_mod = relay.transform.InferType()(mutated_mod)
var_5152 = relay.var("var_5152", dtype = "uint16", shape = (10, 1, 12))#candidate|5152|(10, 1, 12)|var|uint16
var_5153 = relay.var("var_5153", dtype = "uint16", shape = (10, 5, 12))#candidate|5153|(10, 5, 12)|var|uint16
bop_5154 = relay.not_equal(var_5152.astype('bool'), var_5153.astype('bool')) # shape=(10, 5, 12)
bop_5157 = relay.mod(var_5152.astype('float32'), bop_5154.astype('float32')) # shape=(10, 5, 12)
func_5084_call = mod.get_global_var('func_5084')
func_5089_call = mutated_mod.get_global_var('func_5089')
var_5161 = relay.var("var_5161", dtype = "int64", shape = ())#candidate|5161|()|var|int64
var_5162 = relay.var("var_5162", dtype = "int64", shape = (143,))#candidate|5162|(143,)|var|int64
call_5160 = relay.TupleGetItem(func_5084_call(relay.reshape(var_5161.astype('int64'), []), relay.reshape(var_5162.astype('int64'), [1, 13, 11]), relay.reshape(var_5162.astype('int64'), [1, 13, 11]), ), 1)
call_5163 = relay.TupleGetItem(func_5089_call(relay.reshape(var_5161.astype('int64'), []), relay.reshape(var_5162.astype('int64'), [1, 13, 11]), relay.reshape(var_5162.astype('int64'), [1, 13, 11]), ), 1)
uop_5164 = relay.acosh(var_5152.astype('float64')) # shape=(10, 1, 12)
func_956_call = mod.get_global_var('func_956')
func_962_call = mutated_mod.get_global_var('func_962')
var_5171 = relay.var("var_5171", dtype = "bool", shape = (1800,))#candidate|5171|(1800,)|var|bool
const_5172 = relay.const([True,True,True,True,False,False,False,True,True,False,False,False,False,False,True,False,True,True,True,True,False,True,True,True,True,True,False,False,False,False,False,False,True,True,True,False,True,True,True,True,False,False,True,False,False,False,False,True,True,False,True,False,True,False,True,False,True,True,False,False,True,False,False,True,False,True,True,True,False,False,False,False,False,True,False,True,True,True,False,True], dtype = "bool")#candidate|5172|(80,)|const|bool
call_5170 = relay.TupleGetItem(func_956_call(relay.reshape(var_5161.astype('bool'), []), relay.reshape(var_5171.astype('bool'), [15, 8, 15]), relay.reshape(var_5171.astype('bool'), [15, 8, 15]), relay.reshape(const_5172.astype('bool'), [1, 80]), relay.reshape(var_5171.astype('float64'), [15, 8, 15]), ), 0)
call_5173 = relay.TupleGetItem(func_962_call(relay.reshape(var_5161.astype('bool'), []), relay.reshape(var_5171.astype('bool'), [15, 8, 15]), relay.reshape(var_5171.astype('bool'), [15, 8, 15]), relay.reshape(const_5172.astype('bool'), [1, 80]), relay.reshape(var_5171.astype('float64'), [15, 8, 15]), ), 0)
func_1725_call = mod.get_global_var('func_1725')
func_1728_call = mutated_mod.get_global_var('func_1728')
var_5178 = relay.var("var_5178", dtype = "float64", shape = (2816,))#candidate|5178|(2816,)|var|float64
call_5177 = relay.TupleGetItem(func_1725_call(relay.reshape(var_5178.astype('float64'), [11, 16, 16])), 0)
call_5179 = relay.TupleGetItem(func_1728_call(relay.reshape(var_5178.astype('float64'), [11, 16, 16])), 0)
func_3575_call = mod.get_global_var('func_3575')
func_3578_call = mutated_mod.get_global_var('func_3578')
const_5181 = relay.const([5.853464,-1.752958,-8.987129,-1.855382,5.104721,9.881219,6.982798,-7.236598,2.316871,0.255096,-3.289728,0.108042,9.981948,0.584333,7.096524,-7.374133,-2.186174,8.520921,-3.898801,8.579875,-6.003118,-3.370523,-5.464834,-5.368713,7.795096,2.152537,-8.732455,9.684281,-9.834479,-6.261244,7.711446,0.938775,-3.461780,-6.226790,-2.113923,-7.448608,-0.264690,-9.027491,-6.290029,-9.181315,7.125288,9.167478,-9.185173,8.877047,-9.892148,-0.175894,-8.501004,4.528485,-0.246329,2.772855,7.427456,4.801114,6.392301,-0.966238,-0.944303,3.763713,-3.046951,-8.971792,3.898904,-1.143268,2.906248,7.682833,-4.225970,-2.867878,-8.720440,1.894552,-0.286451,5.850481,-2.343684,6.205851,-2.011696,-1.653462,3.894170,8.989953,-1.757314,-2.537012,-3.462990,-5.700096,-5.998809,-4.476458,-1.540444,4.953888,-8.882359,-9.022101,-4.013528,-5.415139,4.707524,-9.956614,0.796498,8.416813,8.480744,2.017587,-0.779771,-1.959821,9.976289,0.043811,-0.837244,-9.710590,-6.433230,6.252481,-8.913714,9.231344,3.041162,-0.875307,-6.794004,-6.671538,-6.223709,7.331779,1.980148,7.300508,-9.858869,1.801133,8.428356,-1.396246,-2.438811,7.231958,4.448153,-4.733444,-3.916157,4.612348,0.570965,-2.692091,4.789383,-0.926008,7.874911,0.874094,-5.439623,-3.528998,-2.223447,2.796111,-4.014468,0.807039,-5.769277,-2.910464,8.396769,4.485257,-3.755126,-9.092696,8.768285,-5.355763,-9.205931,4.480454,-9.654517,0.938510,-6.970768,-4.524678,1.927621,-3.778629,3.878602,-7.577008,-0.774863,1.788451,2.438056,-7.579492,-6.004154,8.685145,8.872848,-9.757610,-5.562122,-5.053616,-2.516741,9.731812,2.740041,7.044657,8.224847,6.307011,1.779416,-1.184112,-9.489203,-0.681107,7.974426,7.243144,-8.862438,3.914370,2.955144,1.137672,-9.142582,6.343092,-1.250486,-5.102415,-6.673905,1.365411,7.388290,-0.519860,-7.618593,-8.173934,-1.256834,-1.781425,2.045520,4.019581,-3.976317,0.367950,-3.438649,-9.468635,5.421319,-4.659647,-8.356119,-0.228970,9.057164,4.047899,6.119975,7.357909,5.233651,-6.300445,3.503855,-7.790933,-0.896803,-9.663506,-5.753458,9.968432,-6.446224,-8.021048,3.243250,-9.407128,2.462845,-8.754399,6.514969,7.090335,-3.004647,-9.937464,6.784083,4.810856,-9.153069,-5.314215,-4.709592,-7.933647,9.126123,1.407424,8.064171,4.186449,5.747745,8.922184,-2.866076,9.384244,-4.741347,-0.991636,-4.706054,4.809893,-5.488761,-5.546746,1.575252,1.806291,8.319725,0.233395,-6.769202,7.880944,9.187547,-1.493228,5.610852,-4.211223,3.154648,-6.439121,-9.877284,-6.639365,4.972332,0.950411,-9.043201,-9.906766,6.519432,-1.085513,-6.721196,7.595437,9.010286,4.657865,9.271100,-0.915334,9.113234,0.187427,6.933998,-4.492146,-7.490913,2.832071,-0.228761,-1.255836,-8.106225,2.927973,-0.899573,-5.244194,-1.963645,1.185631,6.701942,0.417215,-3.791680,-2.017100,-0.546264,-3.925350,-4.362661,4.885229,8.507824,-6.023929,4.733783,6.024834,-6.540874,1.580512,5.751929,-2.486039,-3.841804,3.099790,-2.552017,-8.085360,-2.786335,6.350728,1.798319,7.738152,-2.477597,-2.559985,7.056027,-4.009461,1.589097,2.833878,-7.662394,5.331896,1.500817,2.441817,-8.279725,-0.302683,-5.870995,1.822726,0.103220,2.542985,-9.737854,7.229818,3.667859,3.291732,5.768239,3.918031,-5.623046,-4.764853,-4.471439,-4.180717,-7.551711,4.066088,-9.009879,-9.319363,-9.331901,-7.350517,2.819519,-4.994246,1.305665,2.917809,-4.494571,-0.322724,8.624400,-5.546036,-5.515284,-8.863111,-9.927056,6.385838,-0.931780,-1.892314,2.738945,5.294150,-1.167380,3.195528,1.831961,-4.383657,-5.356174,-3.267655,9.713801,3.881874,2.222512,-5.556735,4.635985,5.998955,2.800069,-3.692736,-9.211393,1.878607,-0.413610,-5.751949,4.907405,4.559660,0.423966,8.636174,8.235108,-5.520177,-1.081749,-6.705694,-9.497365,2.309890,4.377905,7.308424,5.845325,-1.605641,6.192906,5.130323,2.886953,-1.757071,6.869536,7.387678], dtype = "float64")#candidate|5181|(390,)|const|float64
call_5180 = relay.TupleGetItem(func_3575_call(relay.reshape(const_5181.astype('float64'), [13, 3, 10]), relay.reshape(const_5181.astype('float64'), [13, 3, 10]), ), 2)
call_5182 = relay.TupleGetItem(func_3578_call(relay.reshape(const_5181.astype('float64'), [13, 3, 10]), relay.reshape(const_5181.astype('float64'), [13, 3, 10]), ), 2)
output = relay.Tuple([bop_5157,call_5160,var_5161,var_5162,uop_5164,call_5170,var_5171,const_5172,call_5177,var_5178,call_5180,const_5181,])
output2 = relay.Tuple([bop_5157,call_5163,var_5161,var_5162,uop_5164,call_5173,var_5171,const_5172,call_5179,var_5178,call_5182,const_5181,])
func_5189 = relay.Function([var_5152,var_5153,var_5161,var_5162,var_5171,var_5178,], output)
mod['func_5189'] = func_5189
mod = relay.transform.InferType()(mod)
var_5190 = relay.var("var_5190", dtype = "uint16", shape = (10, 1, 12))#candidate|5190|(10, 1, 12)|var|uint16
var_5191 = relay.var("var_5191", dtype = "uint16", shape = (10, 5, 12))#candidate|5191|(10, 5, 12)|var|uint16
var_5192 = relay.var("var_5192", dtype = "int64", shape = ())#candidate|5192|()|var|int64
var_5193 = relay.var("var_5193", dtype = "int64", shape = (143,))#candidate|5193|(143,)|var|int64
var_5194 = relay.var("var_5194", dtype = "bool", shape = (1800,))#candidate|5194|(1800,)|var|bool
var_5195 = relay.var("var_5195", dtype = "float64", shape = (2816,))#candidate|5195|(2816,)|var|float64
output = func_5189(var_5190,var_5191,var_5192,var_5193,var_5194,var_5195,)
func_5196 = relay.Function([var_5190,var_5191,var_5192,var_5193,var_5194,var_5195,], output)
mutated_mod['func_5196'] = func_5196
mutated_mod = relay.transform.InferType()(mutated_mod)
var_5274 = relay.var("var_5274", dtype = "float64", shape = (5, 1, 2))#candidate|5274|(5, 1, 2)|var|float64
const_5275 = relay.const([[[-4.347247,4.292663],[9.897848,5.655405],[-1.173271,-9.428943],[-9.525623,-5.453530]],[[-9.106849,2.209062],[-1.525721,-7.258262],[-0.859767,4.334331],[-0.958932,6.010365]],[[-3.062353,1.095044],[-9.442475,-5.389814],[-0.886141,8.754250],[7.273375,-1.333267]],[[-9.370768,5.381720],[-2.452232,8.293786],[-1.932501,-7.480282],[7.816712,-6.782313]],[[-2.674994,-8.017193],[-9.546773,7.335655],[5.226766,-7.879279],[-5.343037,-9.039771]]], dtype = "float64")#candidate|5275|(5, 4, 2)|const|float64
bop_5276 = relay.floor_mod(var_5274.astype('float64'), const_5275.astype('float64')) # shape=(5, 4, 2)
func_5084_call = mod.get_global_var('func_5084')
func_5089_call = mutated_mod.get_global_var('func_5089')
var_5282 = relay.var("var_5282", dtype = "int64", shape = ())#candidate|5282|()|var|int64
var_5283 = relay.var("var_5283", dtype = "int64", shape = (143,))#candidate|5283|(143,)|var|int64
call_5281 = relay.TupleGetItem(func_5084_call(relay.reshape(var_5282.astype('int64'), []), relay.reshape(var_5283.astype('int64'), [1, 13, 11]), relay.reshape(var_5283.astype('int64'), [1, 13, 11]), ), 0)
call_5284 = relay.TupleGetItem(func_5089_call(relay.reshape(var_5282.astype('int64'), []), relay.reshape(var_5283.astype('int64'), [1, 13, 11]), relay.reshape(var_5283.astype('int64'), [1, 13, 11]), ), 0)
output = relay.Tuple([bop_5276,call_5281,var_5282,var_5283,])
output2 = relay.Tuple([bop_5276,call_5284,var_5282,var_5283,])
func_5287 = relay.Function([var_5274,var_5282,var_5283,], output)
mod['func_5287'] = func_5287
mod = relay.transform.InferType()(mod)
var_5288 = relay.var("var_5288", dtype = "float64", shape = (5, 1, 2))#candidate|5288|(5, 1, 2)|var|float64
var_5289 = relay.var("var_5289", dtype = "int64", shape = ())#candidate|5289|()|var|int64
var_5290 = relay.var("var_5290", dtype = "int64", shape = (143,))#candidate|5290|(143,)|var|int64
output = func_5287(var_5288,var_5289,var_5290,)
func_5291 = relay.Function([var_5288,var_5289,var_5290,], output)
mutated_mod['func_5291'] = func_5291
mutated_mod = relay.transform.InferType()(mutated_mod)
var_5300 = relay.var("var_5300", dtype = "float32", shape = (11, 1, 5))#candidate|5300|(11, 1, 5)|var|float32
const_5301 = relay.const([[[-5.051343,-2.415330,-2.221499,6.365141,-5.641628],[0.656987,-0.547987,-8.882345,-6.385916,2.417338],[-1.763821,9.194923,-9.014905,0.659595,9.288601],[-8.510469,-6.091519,0.925984,-6.258612,-4.908739],[-9.162538,-1.882802,7.301596,8.304114,6.142011],[6.399809,-3.957966,-6.287672,-1.452560,9.265726],[-2.085463,-1.871306,9.572050,-0.560645,-4.564306],[-7.125920,-9.537105,-7.051910,6.137214,5.098168]],[[-3.683660,6.636368,9.392136,1.327145,0.046087],[9.787684,-1.694527,-5.328007,7.915080,4.688381],[-9.495982,9.619442,-0.143932,-0.703643,1.255744],[7.302409,-6.348242,-2.112382,-3.363705,1.430485],[2.065185,5.643919,-5.966952,1.159199,-6.738294],[-9.540771,-6.832940,-6.339015,7.098585,-8.477868],[-0.430293,-0.719014,-4.470124,7.592456,-6.749997],[-8.257397,1.574728,-9.150007,-3.366412,-6.953688]],[[-6.112948,8.449821,-5.850625,-9.791634,-4.931317],[-7.120986,-6.945819,7.589921,-2.332451,2.434535],[9.986783,-9.025958,2.963524,0.366284,-4.481935],[5.060524,-5.986746,7.997491,-9.708014,-8.439988],[-5.630849,3.372773,4.691172,-6.355970,6.033016],[-6.256993,4.244525,-5.500259,7.016305,-0.872618],[2.927871,5.659427,-8.622706,-9.994701,-7.478205],[7.822590,7.954565,7.742587,2.564851,-1.483494]],[[5.007220,-9.369916,1.556311,8.124214,-3.400097],[-7.955342,2.218282,5.068686,-7.494833,-2.718699],[-1.563716,-8.034493,4.890281,-1.893158,2.221661],[4.493875,0.529194,4.956899,-1.343815,-1.842999],[3.250278,-1.786534,-2.417131,-5.030070,2.638247],[1.452363,9.596358,-4.002957,9.950527,9.602574],[8.798132,4.479882,-7.572170,-8.053812,0.591190],[5.060955,2.415143,-1.336413,9.938052,7.979817]],[[7.229320,-4.588222,-2.624769,1.361544,9.232538],[-7.543201,-8.528878,-7.177989,-4.339267,9.286748],[9.854977,-8.915403,1.395745,-0.341045,-6.187339],[3.145465,-3.152250,-2.826012,-3.389052,-0.653943],[-8.026485,4.800914,-4.915236,-0.432327,-1.456110],[-7.226483,-5.782534,-2.576988,3.570748,1.641255],[-3.896149,-8.231719,-8.635750,4.178963,-6.872417],[2.194416,-0.899248,4.160710,-7.332608,-7.259328]],[[-0.252051,-8.129558,7.663309,-2.933468,6.164222],[-9.880224,-4.208012,-6.733768,6.690718,-1.751465],[4.074079,8.801522,-2.456280,-3.896783,-3.094855],[1.666279,8.173267,4.426467,-5.298619,-7.160217],[6.435470,-2.101235,7.712080,8.926619,-6.612095],[-7.826435,4.663971,-0.585844,4.587314,-7.590708],[9.945455,-3.599132,5.845284,7.581159,9.315444],[8.434208,8.381465,-4.874330,-0.419434,9.027610]],[[6.140141,-2.113323,5.585921,-7.910737,6.380819],[-1.413401,-4.941533,7.636651,5.907872,-8.642047],[-2.299212,9.764759,2.677644,-1.100715,6.733491],[-1.765194,-8.003082,3.569260,4.492335,-2.853650],[-4.340800,9.245629,7.265637,-9.698096,-0.905102],[0.944217,-4.459498,-1.906256,-9.336532,8.839103],[-9.323274,6.507704,-7.767636,7.433523,-7.526137],[-5.648457,-4.080320,-5.324610,8.563164,-0.002757]],[[6.814164,-0.819424,1.039062,0.145026,-8.923608],[5.711273,-9.021290,2.993249,-9.484579,3.141378],[-8.900583,4.478202,1.876214,-7.581859,0.249141],[-6.444248,-7.823136,-1.409245,2.953141,7.602757],[8.610919,6.757293,5.075350,-8.897879,4.073329],[7.894552,-4.885835,-2.924184,-7.449413,-3.342062],[-2.714294,-7.061964,9.870165,-9.714521,-0.729852],[-9.909745,-4.583412,7.490861,-0.362160,9.864447]],[[6.281832,4.928034,-4.505325,-8.787939,-3.976888],[-5.854734,3.420778,2.437009,0.028015,-4.158372],[-3.506991,0.524698,-1.017641,-6.337268,1.635359],[-5.780302,-5.326582,-7.932591,2.164484,3.948592],[8.944263,-8.732888,-3.391732,4.728922,6.266547],[8.770689,4.595662,9.183859,-1.941914,-0.878699],[5.444208,-2.368834,3.031209,-5.998831,7.280644],[-3.350218,9.665635,-8.400147,2.587156,-2.948105]],[[0.802471,-8.532400,-8.122029,-3.937926,3.410006],[-7.714507,0.231262,9.680607,9.718425,3.179589],[1.938621,5.625992,5.885179,4.497445,-7.562833],[7.860252,2.443858,-8.569649,9.268278,-5.508906],[3.829555,-2.200874,-5.713564,1.201351,3.913820],[-2.515648,0.076050,-5.859661,1.326612,3.752465],[4.176713,8.716069,-1.192997,-5.231614,-1.582530],[-4.365794,-4.946648,-8.904151,-0.885660,-8.138318]],[[0.864519,3.837733,7.200441,1.936167,4.544880],[-7.520864,7.760598,5.415729,5.741290,-8.962400],[2.542618,5.932787,3.625347,-9.107301,-0.119612],[0.495067,0.258586,-1.533753,-3.453810,-8.834219],[-3.216060,-4.294187,-1.569795,0.969147,-5.710456],[-4.110256,-3.724176,1.788616,3.104418,-1.433556],[-1.831494,9.103040,-4.779519,-0.412318,3.820463],[-7.503786,3.258033,-1.664327,-3.943671,5.640137]]], dtype = "float32")#candidate|5301|(11, 8, 5)|const|float32
bop_5302 = relay.power(var_5300.astype('float32'), const_5301.astype('float32')) # shape=(11, 8, 5)
output = relay.Tuple([bop_5302,])
output2 = relay.Tuple([bop_5302,])
func_5310 = relay.Function([var_5300,], output)
mod['func_5310'] = func_5310
mod = relay.transform.InferType()(mod)
mutated_mod['func_5310'] = func_5310
mutated_mod = relay.transform.InferType()(mutated_mod)
var_5311 = relay.var("var_5311", dtype = "float32", shape = (11, 1, 5))#candidate|5311|(11, 1, 5)|var|float32
func_5310_call = mutated_mod.get_global_var('func_5310')
call_5312 = func_5310_call(var_5311)
output = call_5312
func_5313 = relay.Function([var_5311], output)
mutated_mod['func_5313'] = func_5313
mutated_mod = relay.transform.InferType()(mutated_mod)
var_5329 = relay.var("var_5329", dtype = "float64", shape = (13, 2, 5))#candidate|5329|(13, 2, 5)|var|float64
uop_5330 = relay.tan(var_5329.astype('float64')) # shape=(13, 2, 5)
bop_5346 = relay.greater(uop_5330.astype('bool'), relay.reshape(var_5329.astype('bool'), relay.shape_of(uop_5330))) # shape=(13, 2, 5)
func_1725_call = mod.get_global_var('func_1725')
func_1728_call = mutated_mod.get_global_var('func_1728')
var_5351 = relay.var("var_5351", dtype = "float64", shape = (2816,))#candidate|5351|(2816,)|var|float64
call_5350 = relay.TupleGetItem(func_1725_call(relay.reshape(var_5351.astype('float64'), [11, 16, 16])), 0)
call_5352 = relay.TupleGetItem(func_1728_call(relay.reshape(var_5351.astype('float64'), [11, 16, 16])), 0)
uop_5355 = relay.atanh(uop_5330.astype('float32')) # shape=(13, 2, 5)
uop_5372 = relay.asinh(uop_5355.astype('float64')) # shape=(13, 2, 5)
func_3575_call = mod.get_global_var('func_3575')
func_3578_call = mutated_mod.get_global_var('func_3578')
var_5375 = relay.var("var_5375", dtype = "float64", shape = (390,))#candidate|5375|(390,)|var|float64
call_5374 = relay.TupleGetItem(func_3575_call(relay.reshape(var_5375.astype('float64'), [13, 3, 10]), relay.reshape(var_5375.astype('float64'), [13, 3, 10]), ), 0)
call_5376 = relay.TupleGetItem(func_3578_call(relay.reshape(var_5375.astype('float64'), [13, 3, 10]), relay.reshape(var_5375.astype('float64'), [13, 3, 10]), ), 0)
func_4996_call = mod.get_global_var('func_4996')
func_5000_call = mutated_mod.get_global_var('func_5000')
const_5381 = relay.const([4.525905,-4.460078,2.882108,0.837387,-9.909523,3.239192,1.840767,5.795930,-6.103783,-6.742279,2.651409,-8.238549,-4.149281,-7.305976,-8.447549,3.777778,5.475948,-4.384197,4.305219,7.162537,3.734827,-2.940222,7.794693,-3.968552,9.220294,-8.541597,-4.897588,0.323806,-4.551528,-4.946195,-4.722043,-1.889873,1.186817,-9.956675,-7.136477,6.029668,-5.204228,-6.486942,3.704563,1.586381,-0.821485,6.286798,1.800424,8.525827,-4.722461,-0.051103,2.346232,-4.852168,4.623872,3.210368,-3.682242,0.363654,6.760674,-2.082225,5.011957,6.905766,8.441770,-9.426344,-1.459498,-0.980999,5.783543,7.417985,7.251320,0.049927,-2.363800,9.785586,4.118424,-2.917763,-9.566162,8.132074,-3.869671,9.922484,-2.644306,-1.108336,-4.094583,2.310468,8.344187,-3.761525,4.847859,5.100140,9.906411,-6.560419,-9.692838,5.634917,-8.016556,-2.287650,2.611365,-2.905565,1.735663,-8.636956,-8.291625,5.096727,-9.584894,-1.924706,5.352449,-7.706538,-9.307230,-9.374209,6.373222,-6.156023,-2.812391,-6.684754,-8.187622,9.118233,-2.703802,5.656283,-9.747285,-2.624663,3.951070,-2.798308,1.683262,3.905678,2.895703,-4.192599,7.901937,-4.767785,4.712044,3.944068,-8.865543,3.100693,4.598772,8.495257,9.644555,-0.751843,-0.610818,6.417914,7.088659,-2.632941,-7.913792,0.509089,4.056261,-0.707866,4.222642,-2.376855,-5.338600,-4.244822,2.345744,7.599287,9.166859,9.015541,-7.844467,6.998305,1.675562,9.098612,-4.164329,8.536626,-8.527059,-1.227901,6.700139,3.601097,-6.156749,6.442610,8.851707,-2.500573,3.431263,1.371023,6.132362,3.702228,-5.231271,-3.738134,-3.451985,-9.391007,2.282551,-7.003897,9.560765,6.944889,1.923589,8.020477,4.319162,5.755120,9.624072,9.413629,-3.119860,6.624818,6.242095,4.434080,8.908985,-2.461066,7.989024,-7.133912,2.987906,-7.973790,-4.680249,2.427658,-7.946334,-1.486034,7.670106,-7.521697,6.625428,-9.789126,4.022625,-7.149501,3.276444,-0.417552,0.672647,-3.777617,-2.731402,5.869720,-5.583026,-3.000728,1.566334,1.711221,-7.381408,-9.013648,0.361671,-5.908681,4.790482,-7.202132,-9.215024,5.288093,2.593000,-0.831338,-2.886463,-6.002321,-3.672785,9.063715,-4.861051,4.364363,-4.823088,-8.600204,-8.658176,5.932499,6.892262,1.369795,-7.183760,1.115879,-3.087946,2.635281,7.899013,6.836154,-0.175061,2.642383,7.378749,-6.181924,2.911930,-4.672308,3.159591,8.565611,7.353206,-6.360441,4.741723,5.909783,4.803059,-4.636512,-9.820514,8.817678,8.919645,2.156356,6.497715,-6.394693,-4.550327,-1.345884,-0.674649,-5.163129,-5.023166,2.708702,-0.538660,1.162250,4.454999,-5.550949,-3.261613,1.874126,8.567168,-1.851766,-8.790319,7.466926,5.366361,-1.428693,4.293426,7.936178,-9.638349,0.523888,4.948624,-7.504746,-7.271447,9.673923,-3.368477,-9.554175,6.312734,-5.131951,-4.756963,1.832649,-5.936582,8.527420,-7.441360,7.179778,-7.706313,-8.993452,-6.299995,-9.573925,9.141823,1.442761,-5.381944,7.610949,-6.916715,6.019896,6.492410,9.269264,4.458965,2.968045,2.195885,-7.465003,8.109692,-6.453816,8.603266,8.271174,-5.796408,5.227525,-2.481629,-0.794918,-4.168655,5.186530,-3.790914,3.274862,-2.187859,-5.199548,-5.539971,4.884840,8.344686,1.937996,-6.822134,6.802617,0.286443,-4.996981,-3.411786,-5.333621,-8.249687,-3.366234,-6.538315,-1.895315,7.790283,6.631420,6.143077,4.407402,-2.753716,-9.104591,1.436099,1.464292,-9.683547,3.509570,-8.732468,9.046020,4.655356,-2.296708,-5.587099,-0.084807,2.565345,9.731379,-4.223607,4.942976,0.019932,-4.455485,3.991212,4.213027,3.648316,-3.328079,-9.351615,-9.531358,-9.971118,-4.228692,-9.195153,-2.756687,-6.292412,-3.744376,-1.160784,3.891545,8.657565,1.381765,5.970405,-1.709030,1.172488,-8.610247,3.327605,1.768427,2.355672,-4.863512,8.953989,9.541051,-2.650108,-4.476713,2.318345,-5.616039,7.518943,-8.991024,-1.701703,6.530020,0.472758,6.346250,5.503401,-4.609494,-5.479166,-9.710152,6.171581,4.200693,2.263051,4.789561,8.724527,-0.234210,3.495731,7.523457,1.125801,3.515955,9.588936,3.139975,6.630185,5.118500,-5.395762,6.329407,-8.450556,2.498875,5.582993,-7.745058,-0.849290,3.533507,2.612999,8.666334,-2.391219,-7.712086,-2.913805,-3.419338,5.791350,1.423969,5.367998,-6.522782,-0.650292,2.164925,-4.448779,-0.588894,-0.405503,-1.304950,8.261983,6.629439,-8.393278,3.246300,9.902734,-4.127026,1.042325,2.747643,8.212477,-8.920840,7.984862,3.635067,-5.624913,3.806960,6.631008,-6.867619,6.817395,-0.934904,9.945313,-5.723794,1.439121,-2.424722,6.501301,9.931879,6.127857,-4.248423,-7.917589,-8.718781,9.987650,4.312359,8.033371,9.302619,5.869971,-7.844351,6.770421,-4.825580,5.104763,-4.736616,-1.056570,0.556457,3.438409,-3.511518,2.227205,-1.704679,-9.235496,-1.412307,-7.607822,7.378347,3.999644,-5.063543,-7.017654,-0.552827,4.884310,-0.717955,-7.107032,4.482643,9.339663,4.613051,-7.199066,-7.520040,-4.253987,-8.820037,-1.451159,-0.320791,4.685359,2.837103,3.044960,-5.065561,-1.029716,-5.158932,-1.298030,-6.802999,-4.531991,4.998471,-2.831513,8.581768,-7.280357,8.298790,0.407169,-0.351848,-7.137199,5.812117,6.774557,8.929206,-4.961518,6.107093,8.673993,0.907310,3.321458,7.939394,-4.205274,-4.270385,-1.224985,4.253775,-5.028380,8.804142,3.125674,-9.284117,-6.322844,-5.524168,-6.576304,9.190063,-9.065853,3.532169,9.496129,7.750915,6.855165,-5.735215,7.734342,-9.084866,-4.975217,-2.784977,-8.846941,-4.332893,-5.800959,3.709526,-7.049170,5.030874,1.272038,0.830185,0.227686,-8.235817,-9.850101,-4.898688,6.815216,3.025159,-8.175291,6.495536,8.447165,1.941104,5.218366,-0.283158,-0.735783,-2.107369,-4.011766,-8.350475,-0.064668,-3.037680,-4.729312,-4.567017,3.288143,2.574640,1.575906,-6.097305,-7.909951,9.103464,6.383704,-8.150406,0.816618,0.203120,-4.238002,5.500261,1.776101,1.787502,-2.699249,8.784714,-7.338743,-0.779646,8.487624,-9.579509,-7.978116,9.576529,0.693608,5.371126,-0.096733,-5.327382,4.132181,7.756344,9.352041,-7.866214,-6.186549,-1.848009,-4.007642,6.454487,4.051464,9.770389,0.528183,3.657920,-5.357773,6.653850,-9.691087,7.783785,5.196115,-8.761301,-7.481307,-2.486639,-9.998199,4.992581,4.965385,-6.639143,-0.150163,9.185383,4.696938,-2.207999,2.565474,-0.719672,6.454083,4.757053,7.448351,8.813299,-9.258808,-6.791710,-4.347746,7.780726,-3.313543,6.369633,-5.444630,-9.548025,2.500030,9.943879,-7.339826,-5.349799,-2.430722,-1.145772,2.235243,8.420942,-8.383543,-0.776101,7.897773,-8.054608,-9.826804,-6.054782,-2.743401,-0.251982,8.727213,5.173073,0.028156,8.757388,4.610956,0.984431,3.934874,5.872738,7.364113,5.096408,4.651647,-6.845600,1.031119,-8.727266,-1.870172,2.473860,0.154033,3.335105,0.189124,-4.633455,7.858906,8.285044,-1.884411,-7.873221,7.324319,-3.031404,8.958058,-5.678361,9.219967,3.477872,1.261812,3.085764,1.625852,2.484999,1.744092,6.769425,-2.813530,6.032435,9.004119,-2.796850,0.223897,-9.510567,6.799564,4.936178,8.504419,-6.545330,-1.099374,1.902609,2.124810,-1.266498,-5.799963,5.535993,-7.049272,3.358295,-2.845851,-8.815623,-5.192257,-8.273499,6.697669,-9.697098,-3.055394,2.953886,-4.213368,-8.622984,-9.707173,-2.354923,1.545213,9.094693,6.588609,2.024460,-2.120820,2.755930,-1.030282,-1.296409,-3.751020,3.579008,-9.045976,7.220112,0.967243,-0.541076,-1.147959,5.900981,-6.832252,5.919632,3.260167,3.180345,3.261335,9.681396,-9.264933,2.737756,-3.143300,-2.013294,-8.984566,-0.696114,2.973363,7.105324,7.447340,7.232329,5.213769,1.193603,-9.918080,-9.530805,-1.723939,4.652771,4.925278,4.113013,2.861532,-5.110019,8.055072,-1.291372,6.181280,-7.890027,-2.403692,-8.113141,-3.466686,-6.392786,-2.569082,-3.625724,-2.168698,-6.680073,9.946060,-6.520857,7.201883,-9.311413,4.156552,5.681796,-8.439999,7.082523,-5.665876,-0.288479,-2.610170,9.028260,3.482004,2.536256,0.704669,1.153458,2.299469,-8.165626,3.795859,6.228572,6.304921,6.328533,-3.916352,-1.291577,3.538379,2.871263,3.019315,-4.527958,1.167318,1.620042,3.934939,9.443796,-8.084908,3.311042,-6.612570,-8.249265,-2.758730,4.106225,-7.208175,9.177138,-7.305376,3.838004,0.906894,-2.447900,5.589131,6.079697,-3.838966,2.621185,-0.047947,-1.446199,6.863014,-2.979206,4.903197,-6.751931,8.958507,5.144611,2.911826,-0.520848,-2.724719,3.654018,-3.610094,4.156081,0.298217,0.843821,4.929852,-9.426884,-4.832860,-6.579416,-6.170179,3.983275,-7.807284,3.323053,-4.281350,-3.622820,-9.645771,-1.817327,7.649425,8.680039,7.861707,-5.097552,3.191496,5.914146,-0.919743,3.246207,5.846621,-7.047865,5.155795,2.950815,9.007191,-4.796829,4.532497,-1.299054,-3.563961,1.618504,-4.788227,2.192703,-0.086056,9.283703,-3.150259,5.892031,-9.915871,-0.998564,7.545549,6.303315,4.781444,-0.337961,-1.245822,0.894991,-8.705202,-0.467472,2.769485,-7.514558,8.108688,-8.426090,-1.683125,0.901123,9.312680,-9.186172,1.543659,-9.706758,-2.634117,8.959436,0.793593,4.240806,0.592278,5.081071,6.801920,-6.388956,2.113335,2.751854,-7.393205,-9.248826,-5.196921,-2.761018,-2.133355,-8.354618,1.522286,-5.571033,0.003352,-4.536482,3.029629,6.610542,-8.548942,9.939184,-2.913190,9.540007,1.974010,-5.246535,3.608871,1.863184,2.753607,-9.408533,7.505556,-3.879084,-8.441429,4.455261,-3.353874,0.061645,-9.403188,-1.338849,8.629151,8.838509,-4.557026,-4.909408,-5.558237,0.105405,5.134702,-8.061344,-1.725119,4.852599,-7.919777,6.468704,0.655273,0.159187,4.860742,-7.536959,8.842864,-9.262560,-3.689896,8.500797,-3.505331,-8.806151,-5.097285,6.404831,1.052339,-4.554957,3.096685,-1.775829,-7.416407,1.644449,-1.111716,-5.147076,5.678656,7.963991,4.922252,9.798286,8.181134,9.861758,-8.393199,7.697326,-2.611759,4.364258,1.593799,-8.586320,7.704672,6.169264,-5.295931,-8.267774,-9.253844,0.913610,-2.963118,-5.438751,-0.072560,-8.424814,-1.282593,1.288339,2.972731,-6.546359,-3.850374,-6.793112,-7.634017,1.926912,9.227424,3.426208,1.151075,1.343562,7.207590,-5.986774,0.656659,-2.046202,-8.056396,-0.489527,4.276978,-2.203799,-8.960923,6.268084,-1.830478,4.171382,-6.941036,-7.872149,1.447885,-4.234320,5.433910,-5.323840,6.004743,-7.632187,-5.797349,7.023097,8.489761,-1.153600,-3.218125,2.458855,-5.602681,-6.691570,1.007137,5.342341,-3.961836,1.049343,-7.196218,-0.858971,-1.327015,8.706857,-7.792552,-4.097162,-7.067547,1.774070,9.055840,3.165221,1.365981,-7.496465,-5.320773,5.148772,6.699636,-4.057548,-9.811646,0.448404,9.750690,-2.260866,7.980303,-2.152758,7.427841,-9.512983,-8.083442,-4.238442,1.699841,-2.767169,-0.200549,-9.131570,-3.663227,1.371880,-2.847549,0.459250,1.761051,5.725837,1.174459,-6.195701,0.892958,8.660351,3.429509,8.990754,-3.343736,-9.063049,8.239953,1.266816,-0.748782,-9.368142,0.332008,-5.436625,7.058058,-3.239915,5.484455,3.807060,8.173242,-7.234459,9.826449,-2.639316,5.063940,-3.222625,4.183672,-9.405900,7.033735,-2.622531,2.761186,6.683739,-6.675232,8.546110,1.633500,-9.598044,9.862131,9.045661,-4.300037,-8.050488,-5.807839,-3.165228,-3.292698,7.299901,-7.969770,7.799532,2.625694,-3.991536,-0.296668,5.588577,7.194560,-3.030606,8.612282,6.742704,8.966320,6.050379,-1.230916,-9.048537,0.726635,-3.607281,6.218998,9.354931,1.279862,0.718193,7.254371,7.858705,-8.846207,3.803319,8.770541,-3.381068,-6.749192,-7.264816,7.289875,-0.802824,8.701537,-8.730019,-8.467751,9.680495,-0.950460,5.298499,2.228450,-2.755898,-3.372687,1.971329,-0.455795,8.454265,-2.309648,5.795642,-4.682120,-7.941913,2.209414,-4.544292,-9.178075,0.867722,-5.405265,-7.897724,3.561214,-1.928761,-2.126693,2.757716,4.235180,5.173296,-9.780626,7.916081,-0.348669,-5.707482,7.148638,5.475086,-3.774424,-6.301682,1.455026,1.296759,5.691429,5.477020,1.551046,-1.678960,9.064776,-8.431691,-4.724820,-6.533398,4.257668,-4.918088,4.119291,-0.886557,-0.261864,9.346416,3.823997,-4.729233,-7.527080,-9.478097,-5.865525,-6.857968,5.528651,-6.698778,-9.847252,-2.901729,4.720590,-7.680408,1.887701,1.215976,9.138192,3.617775,1.429965,8.341571,2.639958,0.566018,-8.921616,1.762682,8.728419,-3.914600,-7.348654,1.470118,5.782018,1.876991,0.388314,3.998352,2.006319,9.230340,-8.739896,-2.371147,5.610281,-9.680259,6.982431,1.993264,6.861722,-9.958595,-2.777741,3.282748,-0.234373,-5.415070,6.877132,-6.878055,4.726945,0.892011,7.850243,5.100177,-9.475901,-9.346094,-0.979695,-5.339644,7.524024,8.902003,-2.309079,-8.655035,6.567903,-0.754787,-7.848593,6.968120,4.844884,4.658037,-8.945636,4.736001,-1.702382,-2.180086,8.289088,-8.311195,-6.458966,-3.799046,5.479390,9.960226,-4.138231,1.463404,-0.257349,-0.722987,-8.280788,-2.028634,-4.699761,0.234194,-6.235247,9.242529,-2.282550,-1.054740,-5.111312,5.633321,5.670076,-3.595786,9.800086,-2.980997,7.208564,4.779074,8.556644,-9.158592,9.537783,-2.451303,-7.785173,5.627133,-5.097714,4.041675,-8.430522,-5.804325,8.630497,7.606777,-9.345359,-1.977959,-4.104397,0.284980,-4.555496,-2.465371,7.537818,7.022369,-3.801797,-7.453793,-2.568625,8.044272,7.611234,1.760435,6.825506,4.730342,-8.348142,3.037417,0.473184,-8.808086,-6.272062,3.596830,-3.062311,0.651362,6.885434,2.807860,6.026985,-7.874894,-2.164497,3.133779,8.091733,4.902475,8.595896,-2.218803,-4.100331,-1.644887,6.053956,-7.129439,-2.414763,7.579325,-9.558678,9.602824,1.906527,-2.609475,2.620199,3.559703,-0.956539,1.869866,9.363679,-0.581499,-4.953089,9.196133,-0.276952,2.256761,3.919532,-6.908595,6.062911,-3.626944,0.310139,-4.276037,-8.792905,3.645049,4.365873,-0.431776,6.400909,-5.672292,8.638474,5.308414,7.709546,-6.165553,7.648533,-6.107247,9.093487,-5.382830,0.574316,4.815158,-1.267428,-5.022813,0.921959,0.136504,2.876954,0.076240,3.796047,-8.013940,1.997599,4.714396,1.917014,-4.355527,-6.657734,-8.054910,6.390616,-6.406585,-3.964374,1.760149,0.887192,-0.658460,-0.613162,-5.296962,4.019404,2.153213,2.559860,8.345579,-2.654556,4.082746,-0.664557,0.480474,-4.264975,-0.289639,-8.306705,-9.691363,-4.386378,3.928624,-1.204777,-7.387588,-1.801513,4.994339,-1.358644,9.740812,-9.245475,-2.306039,-1.391846,-6.832129,2.742806,7.548759,2.568979,1.956564,0.954902,-7.611392,-4.154957,9.572326,-0.653749,1.319096,0.155296,-2.343568,1.030044,8.449131,-4.015679,-7.710055,-1.459053,6.411886,-8.427831,7.740797,6.104243,3.484684,-6.555081,0.523675,7.115698,2.654667,5.841326,-8.171705,-8.130099,-8.029603,-8.602264,-5.386266,-9.316311,-1.737503,7.553130,-1.844241,4.670010,-6.251353,-7.871871,4.083374,-0.195564,0.674468,-1.172377,7.194074,4.125914,2.180655,-5.665505,-8.791478,8.996985,1.919030,-9.796081,-7.946713,-2.474040,3.943620,-9.292666,-7.719546,0.859123,-8.682757,-3.719352,3.416778,0.299132,8.857811,-1.242347,-3.282338,-0.899274,-9.685547,-4.475164,-4.406015,-4.454197,2.060525,-0.688754,6.917474,6.372854,3.428885,8.654765,6.449014,2.184017,1.334049,-2.249390,-5.401868,5.417906,7.304600,9.320207,-3.494966,5.336576,-4.671813,-2.465963,-2.510651,9.627404,6.267620,-2.183617,1.675178,1.499903,2.336318,-4.351516,-7.331368,8.965422,1.887205,5.927124,-8.333264,-5.525728,2.943381,-7.454716,-9.098438,0.322295,6.762220,8.381892,-3.138284,8.647470,-6.257158,0.862813,8.739868,1.772430,6.396399,6.591715,4.968578,-5.321838,-1.474286,-2.114991,-8.578043,-6.293663,4.459502,-4.871645,-0.757903,-5.940331,0.059167,7.509461,-8.557450,-4.875115,3.126284,9.395662,8.626182,9.275500,-8.575849,-9.144126,-7.362301,-2.789985,-0.054256,8.278445,-4.590701,-7.682106,2.977607,4.684882,-7.132141,3.337965,4.471537,-1.540208,-8.354430,-8.683111,-5.065523,0.378223,2.488368,-7.672830,-4.826449,-7.869767,5.436727,-3.294045,-9.632237,-4.023933,7.358444,-4.675546,-4.762249,8.440940,6.087973,-5.238953,3.396998,-3.782457,8.584511,-3.826010,-4.738934,7.655774,9.097177,-6.089355,9.219148,-4.279597,-5.317485,3.607950,-7.001081,5.597338,-6.231299,9.113782,6.080597,-4.217376,-2.000940,-1.794541,6.833700,3.397957,4.441126,-9.973446,-8.762153,-2.906495,4.619566,-8.025266,-3.678005,3.282546,5.021870,-7.363383,-5.207659,4.454921,-9.925727,0.308141,0.311453,-6.204380,-2.668763,8.487429,-6.803517,7.047329,7.599057,2.798981,1.066390,-3.301766,6.835318,7.610264,4.198230,-3.162791,-6.357563,5.606388,-0.871967,2.663640,-0.813263,-6.835530,-1.911633,3.745962,4.170068,3.798337,2.879295,0.995637,5.282856,2.595639,3.211404,-0.279045,1.678583,-7.029534,9.577980,4.051866,-0.117496,-8.804127,6.093531,0.994497,-5.135008,-5.324263,-4.181600,-9.039128,-7.968524,2.025877,-4.590083,-3.124315,6.628323,4.346926,-6.157591,4.049111,-1.212350,6.644803,9.017333,-2.186739,4.081079,4.881741,-8.020890,4.191852,7.595506,0.471801,-3.626630,-3.653944,-7.798562,4.288195,-8.361940,6.037693,-4.697142,-9.619263,1.644015,-9.865858,6.769682,5.994265,4.026953,5.738231,6.563137,-3.244121,-2.260922,8.949617,2.621158,9.706325,1.274125,-7.777097,2.251194,0.692695,-1.035075,7.712025,-2.454340,8.376710,-4.737347,-5.998421,0.430030,3.432035,2.125768,-6.069841,1.569954,-8.968872,8.301293,7.399305,-0.364385,3.423112,-3.334912,-7.552021,8.754226,-1.043649,-0.103457,5.330474,-7.653543,8.235906,-6.224710,-2.256582,4.965972,-8.106552,4.226771,7.387965,1.963414,-0.534726,-8.528067,-7.454587,4.820096,1.979304,1.024412,8.813805,3.280952,-8.118452,6.782133,-1.014668,8.862965,5.330628,-1.345442,-2.399282,7.385560,2.699620,-5.925542,-3.909420,-2.890065,0.267700,-0.798608,7.047515,-8.529687,1.003051,-9.323236,-7.287611,1.835949,9.907865,7.523230,6.180457,-6.158003,-9.501987,-6.895133,-1.484445,-1.177991,-1.198011,2.245640,-7.130057,2.295389,4.757771,6.042891,-4.974611,3.414159,-1.100172,7.705818,3.724225,-9.550532,-0.789265,-4.852949,-7.743383,4.176214,-9.180558,-2.257256,-5.029038,-6.890372,-9.853155,7.691401,-0.244835,-7.548438,3.896102,-7.186534,8.921013,-7.418268,2.398558,4.667677,6.640124,0.776793,4.937733,9.576267,5.112334,9.990451,8.021381,-3.982833,5.325571,1.990603,6.493650,0.645476,-3.363515,-2.468902,7.440638,2.915146,-1.497349,-2.615850,6.023439,1.258874,6.662430,-0.263419,-0.817121,6.453379,4.037456,-6.266688,-5.560254,3.442711,-1.666065,0.854665,0.466409,-5.176984,0.965221,0.983395,-2.322051,5.127352,2.768965,9.653962,6.933656,3.152300,7.424937,8.432805,-8.566763,-8.519421,-9.745047,-9.757771,8.543145,-3.560105,6.696510,8.715871,-6.454308,9.130958,-3.967070,9.453810,3.229616,-6.005819,3.526267,3.615633,-7.450708,-5.838748,3.187293,4.200920,5.049713,0.635670,1.010909,6.818013,4.499929,-3.025842,8.310445,6.225136,-0.061429,9.492832,6.239933,3.554639,-4.281975,8.639090,-1.386005,-2.058421,-3.049123,-2.504035,-5.205827,9.170609,1.097139,5.594882,-0.593116,8.875973,-4.327722,-3.932371,4.894951,-8.751911,8.627565,0.753548,-3.556355,1.901414,1.330635,-8.859931,2.787049,-6.675558,4.937143,7.319345,-4.264701,0.074109,5.682442,9.921577,8.167685,0.681563,2.820621,6.524848,-5.205100,-1.430242,-2.304116,-5.106071,-9.859623,-3.273650,-8.221777,4.129643,7.380984,-9.194619,-1.113414,2.529752,7.550351,-5.098207,-5.696110,-5.195093,7.817812,-9.761596,1.691220,7.760221,8.888271,-3.074846,-6.174944,7.657315,-4.274724,-6.158316,7.171701,-5.009430,-3.446709,1.114884,-3.503825,-5.116845,-1.546008,-5.833216,6.479253,3.480425,7.549244,-0.081682,-2.336242,8.889177,2.638541,2.718148,-9.377274,7.118422,9.513951,7.171517,-9.232123,7.496318,-8.051406,0.980262,8.170305,2.126393,-8.803168,-9.392500,5.595005,7.126253,-9.763946,3.339982,-2.036878,4.609709,2.083981,-5.341065,-0.577803,-5.551350,4.251381,-0.169841,-8.423425,3.239199,-9.692288,4.272094,-8.271334,-9.405776,-6.443116,3.639121,8.773545,-5.845633,8.806271,-3.118504,-2.005226,-2.497448,-5.621798,-4.461269,-9.488416,7.980406,-9.340667,-3.991094,1.301335,9.026287,-2.926833,6.475261,2.454173,-1.584483,-0.247810,2.499432,5.493147,-5.225835,-6.885647,7.329989,-9.624264,3.847161,3.338424,0.885585,4.053865,-7.864520,8.388617,0.210066,5.712387,3.847769,-1.501269,-4.733139,8.833106,-5.812283,-5.615037,-0.646039,-9.023101,2.200319,-8.752685,0.831880,7.794318,2.797206,6.221215,2.799983,9.843835,-3.778898,4.570924,7.671929,6.026222,1.764986,5.876953,-1.039256,5.386695,-0.959738,2.707490,7.439927,0.532872,3.990024,3.257150,-9.803043,-8.895000,7.457359,0.703947,-1.580677,-6.774916,-4.773028,1.755689,8.727365,-1.678356,-4.814096,4.809538,-5.141635,4.196519,2.027435,4.858070,1.506817,-5.422171,8.560855,7.776831,-9.113283,2.108986,-0.832790,-5.453693,-2.044748,8.704762,-2.340187,-9.236970,4.197301,-0.733620,5.691615,-1.175247,7.019219,7.254317,8.565962,-9.621259,-1.931210,-0.051805,5.082073,-1.722825,-0.424108,-1.463758,1.806666,8.973823,-2.688080,9.708261,4.556028,-1.771044,2.707358,-4.377115,3.255679,-3.364509,-2.620531,-8.436522,8.246225,8.330474,-4.206258,-8.473115,7.754986,-9.642185,-3.264211,3.997273,-5.231156,-7.840741,6.984570,-8.663773,-0.945100,-6.012496,7.694029,-9.852783,6.556770,-0.320387,6.096525,1.010932,6.164483,4.486989,-5.483606,2.707734,-5.556685,-9.406515,-2.156588,-8.861087,3.179599,-6.459320,6.104437,-9.817573,-5.058179,-4.926973,3.182113,-4.685205,-2.200734,-1.939437,-5.905276,6.533108,-5.056333,-5.974124,-5.067964,0.774798,8.248507,-3.550248,-2.813081,-6.776074,-4.379940,-0.910721,-3.428819,-6.608470,-6.641088,3.014966,-5.889256,-6.655847,-6.821556,-5.740023,9.893347,5.937539,2.635972,-6.331796,-2.158798,-9.303803,2.409100,-9.987477,-2.702014,-8.763190,-3.630941,6.497456,-1.592079,7.905654,8.758822,0.393731,5.975364,9.133805,7.108113,-3.747671,-0.987986,-0.953228,2.588124,-5.558818,4.856850,7.079173,-0.108624,-6.535821,-6.105663,-9.208433,9.407056,-1.432422,-2.116097,4.378253,0.921648,1.487883,8.196692,-6.199319,-7.025623,-8.321562,5.064400,2.849470,-6.329612,4.780059,2.258589,-9.691224,0.166558,0.516452,7.021729,6.348140,-2.580391,-7.239540,-2.939285,5.679319,7.204592,-4.922758,2.903205,2.683437,-5.904791,-6.600949,-7.169655,-0.049331,1.380702,2.954711,8.618432,-7.813716,6.792635,8.970309,3.550851,-8.396064,-0.051214,0.898755,8.268698,5.765894,5.700509,7.348178,2.292850,-9.863123,-5.297598,3.964044,-1.426306,1.363535,-3.273737,-5.978211,7.488997,0.093948,0.509733,6.394938,7.770765,-7.365353,-5.220928,-1.452442,-8.544128,1.576716,-6.586888,-5.470657,-4.216879,-9.233717,-7.211048,-5.360871,6.955306,8.701186,-8.568763,8.650855,5.724876,6.434930,-2.575392,8.754150,-0.767198,8.407541,2.562066,0.629827,8.295077,1.247882,-1.901250,-2.952148,2.361041,5.358382,-1.378126,3.311127,-9.390753,-1.875777,-8.416261,9.115882,-5.063842,2.960190,-8.460136,9.132557,-6.481322,0.037285,-8.603512,-9.723505,8.555606,2.005617,1.601194,-5.189815,6.865964,-0.797810,-7.804062,-7.978184,-4.842074,4.831016,4.781482,-6.967716,5.148047,-2.516169,9.502619,5.985936,-6.145088,3.478233,7.302913,-9.781292,-3.825203,-7.499183,-2.445269,6.738785,-2.471692,-7.921992,7.915199,8.272744,-4.566537,-8.150691,-4.673004,3.880379,-4.039798,-9.095495,-8.904673,8.942236,1.499997,0.753924,-4.720575,-8.427112,7.076376,-5.103909,-3.625986,5.445350,-0.317969,-6.874685,1.229408,6.839673,-2.261534,4.692824,-5.730402,7.430381,-9.684734,-2.232002,5.482872,0.991290,1.619506,7.502921,3.484794,-3.364174,-5.122884,6.101481,-6.174234,-6.873435,-9.448389,7.057410,-7.656387,6.974428,-3.473641,8.315588,-7.320474,-6.464391,1.760303,3.648371,5.662159,-8.514631,7.641267,4.548782,-7.025724,-6.024759,-1.966035,-9.323226,2.465683,2.649909,4.320341,9.565841,-3.190224,5.170000,-6.557536,-8.095274,-5.464634,3.096444,-8.113705,-0.893482,-5.092909,-6.870924,-4.380977,2.150869,-9.232293,1.257810,-4.483011,9.414844,3.898941,-3.947132,-3.687483,3.312457,4.351579,-4.772074,0.107296,-3.801986,0.631580,-9.675070,8.246529,0.804507,5.282652,4.382057,-9.494353,-5.644235,7.164323,6.753111,9.656048,0.815319,2.439153,5.753713,-1.227219,3.929988,-9.884097,0.242324,4.780966,3.984994,-6.829935,-8.282803,4.477631,-7.349601,5.131817,-2.683296,-9.693007,2.995703,9.951360,-3.380372,8.437048,-1.419652,-7.505611,8.635644,-1.164089,-3.748622,-9.828251,0.870717,7.895436,-3.619935,8.073833,9.986351,-0.400057,-2.021166,0.171598,1.932300,-9.024594,-2.506418,-2.738486,-4.653623,-0.141052,4.825758,-1.566682,1.839538,-8.634667,-1.789310,-7.693855,0.943681,8.628058,9.659616,-3.584021,5.898239,-9.390626,1.196831,6.012977,5.387574,-3.756380,-7.131907,-8.583363,-7.640021,-6.357721,-5.462778,6.528633,5.611901,9.306124,2.198395,-5.628730,-4.159013,5.647894,6.122294,-1.135698,-5.597610,6.639682,3.279041,-0.394289,-2.413131,-9.682966,-9.675164,-8.561062,-7.096771,-8.722864,1.094328,-1.392721,9.987805,-9.069033,5.393091,0.805984,0.703684,-6.209199,-9.980554,1.716363,8.186322,-4.167714,3.106947,-0.423654,-9.534329,6.804791,7.224417,-8.039768,5.541100,4.706186,1.708631,9.444571,6.200130,5.685679,-0.653849,-1.749248,-7.983016,7.833107,9.199949,-3.657888,-9.519204,1.748189,3.537334,-2.745649,-5.294959,7.468702,0.502821,8.939584,6.094820,-5.613281,4.858771,2.680903,7.747069,5.228041,-6.151413,5.580613,8.196103,-0.291053,-6.700768,-2.430126,-9.489826,-2.990349,-2.089147,-0.736423,-1.868587,7.354503,6.768787,9.136744,-7.562428,2.259387,-7.628113,0.791146,-9.245558,5.085184,9.923354,9.542160,0.411671,9.748079,5.122415,2.048728,-0.103082,7.122534,-8.081455,8.535049,8.224044,1.521690,6.271744,-4.585337,3.586252,-6.822737,1.271127,-0.887539,1.572639,-1.235086,-5.680383,-7.749053,-9.166261,-6.339415,-6.340888,8.094656,6.111422,-8.223804,-4.567378,-5.730706,-6.409946,-8.763756,-8.906983,-4.269645,-9.641706,3.648913,2.796731,3.038484,9.511256,-3.771200,6.388512,-2.869734,-6.626576,5.962482,1.610457,-9.054435,-4.100128,8.737663,-6.978863,-5.404657,-5.656401,2.031823,6.227838,0.242831,-9.775894,4.361249,-0.035663,-6.727587,-3.711106,0.130274,0.042015,6.910755,-7.286883,6.285919,-3.791928,0.850572,9.097718,-1.185442,6.118771,2.965061,5.685922,-9.480429,-8.628821,0.071616,-7.024688,-6.621333,-6.746664,-3.167807,-9.113531,1.009938,9.631787,1.892166,2.667592,-8.557493,-1.937833,7.709186,-5.505570,4.697880,-0.885471,3.003191,2.265868,5.819122,3.430872,-2.436064,8.328602,-5.071085,-7.160248,1.686249,-2.348179,-9.275443,0.711903,-1.496121,2.026636,4.515513,-5.455771,6.563853,-2.409914,-5.088561,-9.337679,-9.858107,-7.978285,-7.965343,-2.558271,0.111058,8.941005,7.672660,5.982869,-3.001503,9.949594,-0.743378,-1.380516,3.715777,-8.954382,-5.583565,-9.632686,-2.092766,-8.383504,2.605741,-3.123522,4.824756,6.956641,1.805064,-1.887690,9.676338,9.534032,-4.186296,2.731038,-3.095252,1.872729,-0.990906,1.744357,-1.247885,-0.995952,7.589774,-8.179219,-5.462432,3.580874,-9.519408,-2.390279,-4.497635,-7.303283,7.062158,-2.265909,4.326825,3.685033,-6.704126,2.755040,-3.446546,-0.406222,-4.196303,-7.254057,-3.990893,-9.240980,5.646709,9.273403,-3.933908,-6.506464,2.337406,-6.257204,-1.805755,5.867938,-4.674249,-0.265672,-3.636734,-0.246718,6.187100,9.431011,3.036049,3.299480,-3.760238,-0.301562,-2.968016,1.857535,6.060847,-1.669562,3.307938,-2.176100,-4.420622,-0.384680,-5.668486,-9.627814,0.753884,4.555250,0.901108,2.558701,1.821758,7.684005,0.169616,-4.144598,-1.460551,-9.103297,-7.563174,2.926625,0.823761,1.709552,8.325647,-9.794403,4.202979,1.618967,-2.793158,5.081802,-6.672605,4.490331,4.352179,-3.444379,-0.689143,1.687528,-4.977573,-8.862559,-6.998600,0.321163,9.265245,-1.039918,7.382033,2.650642,-1.734512,-4.625663,4.426606,-5.148450,0.830975,-3.554013,-8.184784,-2.640709,4.767546,-1.602515,-8.338573,6.882683,2.277783,-0.407811,3.328693,-4.490013,-9.792135,-3.945441,-4.994097,-9.562362,8.537003,-6.229249,-2.325392,-8.537421,5.711756,3.532964,-3.792624,4.324364,-5.951044,3.100778,4.178821,-5.932277,-5.951113,-6.360648,0.678375,-8.514653,3.108260,-5.673026,8.889769,1.911623,-0.221514,-2.198905,1.250073,-8.624349,2.165458,2.133041,-5.967225,0.578164,-7.018117,6.639116,-7.869066,6.431114,-7.733968,-0.947264,-9.501829,-3.016965,-9.438150,-1.807873,-1.868284,-7.693546,-0.721199,6.429069,4.111488,9.585277,-8.697088,4.849714,-8.507885,-4.970251,1.736289,-0.356197,7.838694,-4.765971,1.552475,2.025520,4.524957,0.084577,-2.948049,-9.375162,6.629042,6.607188,8.838525,7.084939,1.087673,-7.030327,-8.945589,7.366459,-7.252823,9.030616,-9.259451,4.577824,-3.910731,9.945590,8.100129,-0.854657,7.783803,-2.086175,9.335659,-9.520697,-9.192108,1.803409,4.930916,-2.641931,-1.621342,9.669511,-1.008563,-8.083542,1.570630,3.980819,-8.031207,-2.405056,-3.576404,-8.969349,-3.313901,-3.996648,1.877811,1.291747,-6.464968,-2.883838,3.509654,8.994219,0.180467,9.176600,3.001913,6.905688,-9.504005,4.120460,4.518031,-3.181359,-7.978478,-9.055670,-3.896013,-1.922879,9.126678,3.911198,-1.382529,-7.487246,3.569092,4.902804,2.746683,-2.748861,-0.776623,-7.194236,8.106441,5.548382], dtype = "float64")#candidate|5381|(2925,)|const|float64
const_5382 = relay.const([3,1,5,-5,1,4,-4,-6,-3,6,-8,-5,-9,7,2,-2,-1,-6,4,-9,-9,-5,-7,-3,10,10,-8,10,-7,-1,-2,5,-5,-10,-2,-4,-1,-6,-1,-9,-10,-8,5,6,-2,-10,-10,-10,5,6,6,-10,10,-3,7,-2,2,-7,-6,8,2,4,4,6,1,-9,-1,-6,-7,2,3,-4,3,-2,4,7,-8,7,7,1,5,-7,-1,9,-1,3,-4,9,-8,-6,-10,10,6,-10,-1,2,-3,6,3,-1,6,-10,-2,-8,9,3,-9,-9,-2,-9,-10,-1,-2,-6,-2,-9,2,7,-10,4,-10,-1,2,3,7,-7,3,-9,-6,-7,-3,-5,8,8,-8,9,1,-5,10,-9,10,-5,5,-7,10,-9,2,7,-7,-10,-9,-3,9,-7,7,-7,3,9,7,-1,10,9,4,-4,10,6,-4,-2], dtype = "uint16")#candidate|5382|(168,)|const|uint16
var_5383 = relay.var("var_5383", dtype = "float64", shape = (1, 450))#candidate|5383|(1, 450)|var|float64
call_5380 = relay.TupleGetItem(func_4996_call(relay.reshape(const_5381.astype('float64'), [13, 15, 15]), relay.reshape(const_5382.astype('uint16'), [84, 2]), relay.reshape(var_5383.astype('float64'), [450,]), ), 0)
call_5384 = relay.TupleGetItem(func_5000_call(relay.reshape(const_5381.astype('float64'), [13, 15, 15]), relay.reshape(const_5382.astype('uint16'), [84, 2]), relay.reshape(var_5383.astype('float64'), [450,]), ), 0)
output = relay.Tuple([bop_5346,call_5350,var_5351,uop_5372,call_5374,var_5375,call_5380,const_5381,const_5382,var_5383,])
output2 = relay.Tuple([bop_5346,call_5352,var_5351,uop_5372,call_5376,var_5375,call_5384,const_5381,const_5382,var_5383,])
func_5388 = relay.Function([var_5329,var_5351,var_5375,var_5383,], output)
mod['func_5388'] = func_5388
mod = relay.transform.InferType()(mod)
var_5389 = relay.var("var_5389", dtype = "float64", shape = (13, 2, 5))#candidate|5389|(13, 2, 5)|var|float64
var_5390 = relay.var("var_5390", dtype = "float64", shape = (2816,))#candidate|5390|(2816,)|var|float64
var_5391 = relay.var("var_5391", dtype = "float64", shape = (390,))#candidate|5391|(390,)|var|float64
var_5392 = relay.var("var_5392", dtype = "float64", shape = (1, 450))#candidate|5392|(1, 450)|var|float64
output = func_5388(var_5389,var_5390,var_5391,var_5392,)
func_5393 = relay.Function([var_5389,var_5390,var_5391,var_5392,], output)
mutated_mod['func_5393'] = func_5393
mutated_mod = relay.transform.InferType()(mutated_mod)
var_5683 = relay.var("var_5683", dtype = "float64", shape = (5, 9, 9))#candidate|5683|(5, 9, 9)|var|float64
uop_5684 = relay.rsqrt(var_5683.astype('float64')) # shape=(5, 9, 9)
func_4996_call = mod.get_global_var('func_4996')
func_5000_call = mutated_mod.get_global_var('func_5000')
var_5689 = relay.var("var_5689", dtype = "float64", shape = (2925,))#candidate|5689|(2925,)|var|float64
const_5690 = relay.const([[-1,-6],[4,-8],[-3,-4],[10,4],[3,-3],[-6,-7],[-10,3],[6,5],[2,-4],[5,-5],[-3,-5],[10,-8],[-1,-1],[1,1],[-3,-3],[-8,8],[2,-8],[-8,-7],[-3,-3],[4,-5],[4,1],[4,-9],[6,7],[2,6],[1,-3],[9,9],[-2,3],[6,2],[-4,7],[5,-6],[-8,7],[-10,4],[-6,-10],[6,-7],[6,6],[-9,-1],[-1,2],[6,7],[1,-4],[6,2],[-6,1],[6,4],[-9,3],[9,5],[-4,-6],[-5,4],[8,8],[-7,-9],[5,-7],[-7,2],[-1,6],[-8,-2],[7,3],[-2,9],[5,5],[8,-5],[2,-5],[-4,7],[-3,-7],[-3,5],[8,4],[-7,1],[10,3],[10,2],[-3,2],[-7,3],[3,1],[3,-8],[4,-3],[6,-4],[-2,4],[-7,5],[-7,-7],[8,-2],[-2,-7],[-9,-7],[8,5],[-6,10],[-5,9],[3,4],[-2,4],[-3,-1],[9,1],[6,10]], dtype = "uint16")#candidate|5690|(84, 2)|const|uint16
var_5691 = relay.var("var_5691", dtype = "float64", shape = (450,))#candidate|5691|(450,)|var|float64
call_5688 = relay.TupleGetItem(func_4996_call(relay.reshape(var_5689.astype('float64'), [13, 15, 15]), relay.reshape(const_5690.astype('uint16'), [84, 2]), relay.reshape(var_5691.astype('float64'), [450,]), ), 5)
call_5692 = relay.TupleGetItem(func_5000_call(relay.reshape(var_5689.astype('float64'), [13, 15, 15]), relay.reshape(const_5690.astype('uint16'), [84, 2]), relay.reshape(var_5691.astype('float64'), [450,]), ), 5)
output = relay.Tuple([uop_5684,call_5688,var_5689,const_5690,var_5691,])
output2 = relay.Tuple([uop_5684,call_5692,var_5689,const_5690,var_5691,])
func_5743 = relay.Function([var_5683,var_5689,var_5691,], output)
mod['func_5743'] = func_5743
mod = relay.transform.InferType()(mod)
mutated_mod['func_5743'] = func_5743
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5743_call = mutated_mod.get_global_var('func_5743')
var_5745 = relay.var("var_5745", dtype = "float64", shape = (5, 9, 9))#candidate|5745|(5, 9, 9)|var|float64
var_5746 = relay.var("var_5746", dtype = "float64", shape = (2925,))#candidate|5746|(2925,)|var|float64
var_5747 = relay.var("var_5747", dtype = "float64", shape = (450,))#candidate|5747|(450,)|var|float64
call_5744 = func_5743_call(var_5745,var_5746,var_5747,)
output = call_5744
func_5748 = relay.Function([var_5745,var_5746,var_5747,], output)
mutated_mod['func_5748'] = func_5748
mutated_mod = relay.transform.InferType()(mutated_mod)
var_5824 = relay.var("var_5824", dtype = "float32", shape = (15, 10, 12))#candidate|5824|(15, 10, 12)|var|float32
uop_5825 = relay.exp(var_5824.astype('float32')) # shape=(15, 10, 12)
uop_5834 = relay.acos(uop_5825.astype('float32')) # shape=(15, 10, 12)
bop_5836 = relay.left_shift(uop_5825.astype('int16'), relay.reshape(uop_5834.astype('int16'), relay.shape_of(uop_5825))) # shape=(15, 10, 12)
func_1005_call = mod.get_global_var('func_1005')
func_1008_call = mutated_mod.get_global_var('func_1008')
var_5841 = relay.var("var_5841", dtype = "bool", shape = (2, 80))#candidate|5841|(2, 80)|var|bool
call_5840 = relay.TupleGetItem(func_1005_call(relay.reshape(var_5841.astype('bool'), [2, 5, 16])), 0)
call_5842 = relay.TupleGetItem(func_1008_call(relay.reshape(var_5841.astype('bool'), [2, 5, 16])), 0)
func_5310_call = mod.get_global_var('func_5310')
func_5313_call = mutated_mod.get_global_var('func_5313')
const_5844 = relay.const([-7.575861,4.532740,-2.750700,-2.720638,-3.965048,3.057023,-2.626345,-4.403780,-3.417818,-7.518611,3.651130,4.352875,0.207438,-0.370201,-2.178366,-5.732193,3.991331,4.639311,-1.583714,3.010474,-5.594013,1.439951,0.057319,5.427854,-0.050442,-0.927904,2.267982,1.037424,-5.362608,2.899684,8.082608,-8.150979,4.295318,-9.348946,6.380145,7.337182,3.917978,-1.004471,-7.451382,-4.844149,-6.732402,-4.641504,4.984718,-0.422584,6.935585,-8.969771,3.739907,-6.890332,-7.725583,4.615259,-0.554265,8.945244,4.641601,5.366377,-2.090436], dtype = "float32")#candidate|5844|(55,)|const|float32
call_5843 = relay.TupleGetItem(func_5310_call(relay.reshape(const_5844.astype('float32'), [11, 1, 5])), 0)
call_5845 = relay.TupleGetItem(func_5313_call(relay.reshape(const_5844.astype('float32'), [11, 1, 5])), 0)
output = relay.Tuple([bop_5836,call_5840,var_5841,call_5843,const_5844,])
output2 = relay.Tuple([bop_5836,call_5842,var_5841,call_5845,const_5844,])
func_5847 = relay.Function([var_5824,var_5841,], output)
mod['func_5847'] = func_5847
mod = relay.transform.InferType()(mod)
mutated_mod['func_5847'] = func_5847
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5847_call = mutated_mod.get_global_var('func_5847')
var_5849 = relay.var("var_5849", dtype = "float32", shape = (15, 10, 12))#candidate|5849|(15, 10, 12)|var|float32
var_5850 = relay.var("var_5850", dtype = "bool", shape = (2, 80))#candidate|5850|(2, 80)|var|bool
call_5848 = func_5847_call(var_5849,var_5850,)
output = call_5848
func_5851 = relay.Function([var_5849,var_5850,], output)
mutated_mod['func_5851'] = func_5851
mutated_mod = relay.transform.InferType()(mutated_mod)
var_6218 = relay.var("var_6218", dtype = "float32", shape = (15, 2, 5))#candidate|6218|(15, 2, 5)|var|float32
uop_6219 = relay.asinh(var_6218.astype('float32')) # shape=(15, 2, 5)
uop_6223 = relay.asin(var_6218.astype('float64')) # shape=(15, 2, 5)
uop_6226 = relay.tan(var_6218.astype('float64')) # shape=(15, 2, 5)
output = relay.Tuple([uop_6219,uop_6223,uop_6226,])
output2 = relay.Tuple([uop_6219,uop_6223,uop_6226,])
func_6230 = relay.Function([var_6218,], output)
mod['func_6230'] = func_6230
mod = relay.transform.InferType()(mod)
var_6231 = relay.var("var_6231", dtype = "float32", shape = (15, 2, 5))#candidate|6231|(15, 2, 5)|var|float32
output = func_6230(var_6231)
func_6232 = relay.Function([var_6231], output)
mutated_mod['func_6232'] = func_6232
mutated_mod = relay.transform.InferType()(mutated_mod)
var_6348 = relay.var("var_6348", dtype = "float32", shape = (16, 14, 6))#candidate|6348|(16, 14, 6)|var|float32
uop_6349 = relay.acosh(var_6348.astype('float32')) # shape=(16, 14, 6)
output = uop_6349
output2 = uop_6349
func_6357 = relay.Function([var_6348,], output)
mod['func_6357'] = func_6357
mod = relay.transform.InferType()(mod)
mutated_mod['func_6357'] = func_6357
mutated_mod = relay.transform.InferType()(mutated_mod)
var_6358 = relay.var("var_6358", dtype = "float32", shape = (16, 14, 6))#candidate|6358|(16, 14, 6)|var|float32
func_6357_call = mutated_mod.get_global_var('func_6357')
call_6359 = func_6357_call(var_6358)
output = call_6359
func_6360 = relay.Function([var_6358], output)
mutated_mod['func_6360'] = func_6360
mutated_mod = relay.transform.InferType()(mutated_mod)
var_6557 = relay.var("var_6557", dtype = "float64", shape = (16, 3, 6))#candidate|6557|(16, 3, 6)|var|float64
uop_6558 = relay.asinh(var_6557.astype('float64')) # shape=(16, 3, 6)
output = relay.Tuple([uop_6558,])
output2 = relay.Tuple([uop_6558,])
func_6571 = relay.Function([var_6557,], output)
mod['func_6571'] = func_6571
mod = relay.transform.InferType()(mod)
mutated_mod['func_6571'] = func_6571
mutated_mod = relay.transform.InferType()(mutated_mod)
var_6572 = relay.var("var_6572", dtype = "float64", shape = (16, 3, 6))#candidate|6572|(16, 3, 6)|var|float64
func_6571_call = mutated_mod.get_global_var('func_6571')
call_6573 = func_6571_call(var_6572)
output = call_6573
func_6574 = relay.Function([var_6572], output)
mutated_mod['func_6574'] = func_6574
mutated_mod = relay.transform.InferType()(mutated_mod)
var_6642 = relay.var("var_6642", dtype = "int8", shape = (3, 4, 16))#candidate|6642|(3, 4, 16)|var|int8
var_6643 = relay.var("var_6643", dtype = "int8", shape = (3, 4, 16))#candidate|6643|(3, 4, 16)|var|int8
bop_6644 = relay.bitwise_xor(var_6642.astype('int8'), relay.reshape(var_6643.astype('int8'), relay.shape_of(var_6642))) # shape=(3, 4, 16)
output = bop_6644
output2 = bop_6644
func_6647 = relay.Function([var_6642,var_6643,], output)
mod['func_6647'] = func_6647
mod = relay.transform.InferType()(mod)
var_6648 = relay.var("var_6648", dtype = "int8", shape = (3, 4, 16))#candidate|6648|(3, 4, 16)|var|int8
var_6649 = relay.var("var_6649", dtype = "int8", shape = (3, 4, 16))#candidate|6649|(3, 4, 16)|var|int8
output = func_6647(var_6648,var_6649,)
func_6650 = relay.Function([var_6648,var_6649,], output)
mutated_mod['func_6650'] = func_6650
mutated_mod = relay.transform.InferType()(mutated_mod)
var_7043 = relay.var("var_7043", dtype = "float32", shape = (13, 5, 8))#candidate|7043|(13, 5, 8)|var|float32
uop_7044 = relay.sqrt(var_7043.astype('float32')) # shape=(13, 5, 8)
output = relay.Tuple([uop_7044,])
output2 = relay.Tuple([uop_7044,])
func_7047 = relay.Function([var_7043,], output)
mod['func_7047'] = func_7047
mod = relay.transform.InferType()(mod)
mutated_mod['func_7047'] = func_7047
mutated_mod = relay.transform.InferType()(mutated_mod)
var_7048 = relay.var("var_7048", dtype = "float32", shape = (13, 5, 8))#candidate|7048|(13, 5, 8)|var|float32
func_7047_call = mutated_mod.get_global_var('func_7047')
call_7049 = func_7047_call(var_7048)
output = call_7049
func_7050 = relay.Function([var_7048], output)
mutated_mod['func_7050'] = func_7050
mutated_mod = relay.transform.InferType()(mutated_mod)
var_7100 = relay.var("var_7100", dtype = "float64", shape = (2, 4, 10))#candidate|7100|(2, 4, 10)|var|float64
uop_7101 = relay.atanh(var_7100.astype('float64')) # shape=(2, 4, 10)
output = uop_7101
output2 = uop_7101
func_7105 = relay.Function([var_7100,], output)
mod['func_7105'] = func_7105
mod = relay.transform.InferType()(mod)
var_7106 = relay.var("var_7106", dtype = "float64", shape = (2, 4, 10))#candidate|7106|(2, 4, 10)|var|float64
output = func_7105(var_7106)
func_7107 = relay.Function([var_7106], output)
mutated_mod['func_7107'] = func_7107
mutated_mod = relay.transform.InferType()(mutated_mod)
var_7132 = relay.var("var_7132", dtype = "int32", shape = (13, 4, 7))#candidate|7132|(13, 4, 7)|var|int32
var_7133 = relay.var("var_7133", dtype = "int32", shape = (13, 4, 7))#candidate|7133|(13, 4, 7)|var|int32
bop_7134 = relay.greater(var_7132.astype('bool'), relay.reshape(var_7133.astype('bool'), relay.shape_of(var_7132))) # shape=(13, 4, 7)
func_1704_call = mod.get_global_var('func_1704')
func_1708_call = mutated_mod.get_global_var('func_1708')
var_7152 = relay.var("var_7152", dtype = "int16", shape = (168,))#candidate|7152|(168,)|var|int16
call_7151 = relay.TupleGetItem(func_1704_call(relay.reshape(var_7152.astype('int16'), [12, 2, 7]), relay.reshape(var_7152.astype('int16'), [12, 2, 7]), ), 1)
call_7153 = relay.TupleGetItem(func_1708_call(relay.reshape(var_7152.astype('int16'), [12, 2, 7]), relay.reshape(var_7152.astype('int16'), [12, 2, 7]), ), 1)
func_2581_call = mod.get_global_var('func_2581')
func_2584_call = mutated_mod.get_global_var('func_2584')
const_7161 = relay.const([[-2.234492,5.391672,4.613428,2.489215,7.510905,7.717158,6.906339,-3.687473,9.898206,8.504305,5.576026,7.220097,-1.623192,-4.394263,6.299238,-2.677933,-1.253084,-0.824903,6.113204,-7.085116,6.461564,3.595248,4.785213,5.691968,5.919763,7.912301,-1.633984,-3.939467,5.022853,-6.164919,8.010468,-1.419755,-5.822332,-9.144965,0.809573,-2.920320,-4.144011,4.639478,8.942248,-6.365694,1.563729,6.964220,-4.871587,5.279350,-5.270902,-8.562798,-2.921808,0.569247,-5.549893,7.617231,-3.416778,-2.537399,8.786095,7.168445,-4.817572,7.595629,6.392712,-1.815021,-6.632916,9.305359,0.335876,7.473257,-8.804214,-0.315506],[-4.694097,-7.117074,8.527322,8.705628,7.316888,4.169346,3.774888,7.389813,7.152803,-7.523876,4.515419,5.081043,-2.561199,9.417311,7.920362,9.983507,9.892345,5.022057,-1.691395,8.429192,8.054643,-8.563868,-8.865974,6.050101,9.496761,5.930614,3.141583,9.234568,0.947950,-9.838618,-3.942515,-0.298061,-5.755035,-6.368064,0.109795,-7.893327,-7.912771,8.647055,-3.919352,-6.285928,-5.972717,5.625378,-9.748748,3.492473,9.864432,4.297067,6.219246,5.258913,0.050250,0.495460,5.300561,8.110770,-5.481166,-4.860040,7.809112,-2.398416,2.811003,3.343512,-1.854066,6.164857,-8.632317,1.428308,0.487288,6.003427],[-0.239715,2.783599,-6.679227,6.009806,2.103862,-6.289406,-3.958485,-8.659715,-6.816628,-0.940403,0.414370,-0.902256,-7.643544,8.961699,-4.277039,-9.637689,2.364701,-9.620473,-7.361219,-9.733192,-2.247360,-4.859977,5.864514,-4.932190,-3.007941,-1.663167,-8.531868,5.952825,-1.171666,-4.745796,-1.208951,3.908783,-3.711145,6.497749,7.696192,-4.612224,-3.522817,3.443955,-7.478017,9.158148,-4.594837,-4.949371,-6.643162,8.120216,-4.674334,0.529893,-6.427428,6.626789,9.514945,9.498934,-0.680221,-7.218775,-8.578650,9.704418,8.821648,8.298111,-5.223105,-2.602588,4.399650,-4.906231,-7.012288,-9.530357,-3.731499,4.586296],[3.749745,9.352947,1.169575,-7.211418,8.070448,-9.494375,3.627811,-3.154986,8.001714,-7.058311,-8.246910,-1.414726,9.348005,5.943933,-2.668425,6.780622,5.611264,-5.234019,-0.367150,-9.997553,-4.543396,-0.050317,-5.741942,0.865114,3.858177,-9.950627,-2.562049,-1.515189,-8.299116,-8.251526,3.737755,-5.329405,-6.302264,1.952093,1.199571,-4.759438,-5.500145,1.349776,3.548917,-7.860099,9.543069,-6.374856,2.926928,5.461785,-4.760959,5.821305,9.768246,-2.503949,-8.143565,-8.927774,2.435406,9.946656,7.338646,-2.952767,6.159261,1.299106,6.738718,9.460305,3.811561,-7.291177,-1.170540,9.266135,3.489627,4.865610],[9.576956,-4.875664,-6.104561,-7.272258,-2.485285,-4.225797,7.256143,-1.620970,4.180170,7.938484,-8.285738,-1.966536,9.799571,-5.050482,2.967518,-2.185838,4.231656,7.293796,-2.210807,3.447123,-2.127373,2.728239,-0.911319,-1.004964,0.838611,-6.305126,-6.283710,-0.037988,-5.252705,-5.491183,-0.667358,-6.839651,9.160646,7.706649,0.968768,3.714572,-8.981476,3.738999,-2.150362,-1.385175,3.622816,-7.378445,7.750984,-1.218227,1.269280,7.006604,6.850948,-4.689395,6.481047,8.045795,-8.560618,-8.423703,0.743691,2.352118,4.705680,2.519607,-0.937365,-7.516035,-7.923028,9.137607,-7.721986,0.691273,-1.606738,-1.085249],[9.287798,-1.472028,-0.685258,-2.770507,-5.062165,-3.166692,4.628240,0.988103,2.141110,8.587296,-1.992045,7.967277,7.988592,-5.558241,-3.060246,3.530426,-9.893899,-4.610021,-3.028908,-9.983340,-7.096618,-3.339744,-0.887953,-9.685809,-1.464737,9.371350,-0.580993,7.611525,8.358397,-8.596866,-8.512531,8.983168,5.329959,-9.950940,-8.896210,6.789623,9.314603,-8.638149,3.078536,5.763053,-9.737618,-9.719617,5.008161,-6.350153,6.724886,1.947139,-8.587291,1.353655,-5.422207,4.226466,-7.529782,5.562585,0.539708,-5.001748,-4.383425,-6.314648,-2.187993,-0.698276,-7.782186,9.046195,3.618930,4.952003,8.230847,1.709208],[-4.551656,3.781075,1.785161,-9.923272,-3.410912,8.192310,-6.713968,-7.834907,-2.577960,8.409528,3.432808,4.001514,7.496750,7.622172,5.497854,-6.392482,8.183236,-4.498436,-3.737841,6.743814,7.990030,-7.238099,-0.998813,6.570812,1.876769,5.181066,1.796328,5.899066,-9.233317,8.273989,7.313590,3.452511,2.164095,-3.949448,8.005479,6.765828,-9.002848,-3.678115,-7.850473,-4.291527,-1.751228,-0.257936,-8.797121,-7.404237,-8.628898,-5.725032,1.323070,3.350814,8.381974,1.888823,2.224095,-1.211012,-9.173951,3.046271,-7.479860,-3.043065,4.721726,-4.742430,-1.207211,-1.966047,-6.973642,-5.460359,5.453231,8.898204],[7.371490,6.936552,9.160487,7.598814,-7.179145,-5.323320,-2.976821,-1.232251,4.666342,5.561850,3.496916,3.084018,-6.169596,-0.431563,1.487094,-3.292228,-0.045200,2.090885,8.309478,8.137419,5.873860,-8.253476,-6.746192,-2.824940,1.455986,5.647896,8.932299,3.779647,-5.210570,3.151867,3.998323,7.161726,1.476551,7.434174,1.863106,8.569636,-5.697984,-7.441349,-5.465049,-2.235370,-0.580439,-6.012886,-2.195813,9.565411,7.411869,-1.466514,-2.999306,-6.766913,1.360109,0.897939,-1.636293,6.708881,-5.577319,6.116258,-3.112827,6.348847,1.070161,7.664640,0.473395,4.544636,3.828588,8.681536,5.956877,-2.644675],[4.693834,5.520553,-7.903555,-2.768717,-7.551149,2.233502,0.771978,4.830969,-4.997012,4.524011,5.091691,8.832189,-8.198089,-7.080439,-5.765000,-4.248148,-2.835763,-4.091045,5.873286,-1.746102,-9.798252,-8.284540,-8.987470,3.563485,-0.276311,-0.531114,4.380131,5.325480,-5.649462,5.019306,-6.540331,-1.161559,5.750068,6.772577,3.081471,-7.682447,6.241268,0.301422,-2.190792,-9.510279,1.071584,-0.207152,-3.016013,4.781392,5.264990,-7.029985,-8.413562,4.848135,1.963021,-8.810539,-4.421904,-8.652958,-7.336065,2.301739,-8.868331,1.167169,-1.219367,-1.979613,2.881638,1.014715,-1.363329,-7.711252,-2.218992,-3.974724],[-7.027641,-8.104673,0.608039,-9.709577,-9.332804,-9.423890,-0.262106,8.918483,3.460615,3.680206,2.874681,-8.370621,-3.999130,-6.705268,-7.504745,-5.824608,-4.539864,2.222701,-7.040211,2.816288,4.073833,1.941763,4.371451,-1.900123,7.933942,-5.098771,-6.097758,-5.354976,7.644147,2.580759,-5.443834,1.195923,-2.257488,-6.700269,-3.779806,5.585309,-1.889494,4.306378,4.760439,-6.854661,-2.435344,8.984618,8.117448,2.035591,6.053898,-2.463492,0.975023,-8.715096,-9.269161,-9.695038,-4.797230,-8.468874,-2.611339,-3.255050,7.264303,-5.229072,5.038009,-5.549032,-7.248311,-9.139032,-5.977618,3.786103,-8.186529,0.124648],[-6.869978,1.659210,-8.736748,0.076409,-7.506438,-1.601815,8.159413,0.365057,5.220499,7.658480,2.102036,1.174846,9.823614,2.396711,-6.302522,-4.733970,-4.690427,8.655467,-1.951795,-7.261075,-7.778544,-8.357679,5.995217,8.285795,-0.526851,-6.696034,-8.012621,0.047864,-7.009155,9.612247,-6.327918,-7.870441,9.212069,3.515921,-8.623896,-4.868672,-6.057713,-6.365570,-4.338186,-5.731932,3.878360,6.519805,-2.652985,1.616542,6.754399,9.735936,-2.815108,2.786844,0.340450,8.156198,-9.144391,1.944453,9.665919,-4.520100,5.796783,-0.924720,-8.159398,-0.535088,-1.125289,9.503583,-4.778379,7.937982,-8.294757,-1.702296],[8.184865,-9.653145,-7.103706,9.138842,2.756796,1.974561,-8.064241,8.539708,2.870439,-4.153158,4.481841,-5.237082,-8.943702,6.428400,-2.448872,1.585630,9.836851,3.126246,0.332894,4.622134,-6.615204,5.377140,-0.460373,7.962217,-1.266927,-6.207665,-0.098080,0.814455,-1.041583,9.926742,-7.346644,2.083088,-5.322904,6.361627,5.525769,5.386996,-3.131921,-9.833357,0.075058,-1.113660,7.988088,-9.701414,2.823211,6.992468,-7.325191,-7.403025,8.398829,-2.268766,-6.758180,4.034534,1.477361,-4.668619,9.532487,-4.169864,-9.945933,-6.507608,1.499989,5.606406,-2.323790,3.991895,-6.397874,8.108293,0.892884,4.137335],[-3.929406,2.421221,6.308181,7.002293,-9.514368,-3.469619,-5.460923,8.777242,3.398224,1.073266,6.711628,-4.805582,-3.127881,9.281223,9.655950,-3.748228,0.077565,0.536154,3.202263,0.520305,9.802073,-3.783544,-4.974477,5.556982,2.334795,7.476767,7.545082,-1.984136,7.644338,7.008889,-4.235864,-5.311639,9.836265,1.870714,-6.909772,5.562313,-0.006722,-5.454389,6.614074,-0.759113,-7.449934,7.751325,7.783287,6.992638,4.343841,5.268998,-4.602642,2.281291,-8.510800,-2.307704,2.409045,-1.588570,-2.878726,-9.842294,-3.226836,-7.130737,-6.977721,0.835681,7.046880,-3.111879,6.442262,-8.176742,-3.280798,-0.118947],[-6.068153,0.288886,-0.295706,1.507317,-4.790398,-8.695319,-8.185076,3.964915,-7.673996,-5.787183,-1.089037,-8.899657,7.589327,7.099811,-5.963260,-2.615463,8.884873,-0.024324,1.636336,-8.552354,3.629954,-9.482164,7.014185,-5.173210,-5.923183,9.118375,5.310736,8.406134,-5.242928,-3.535594,-7.774746,-3.400246,3.933101,2.843803,-8.040174,-7.722470,-0.461054,-1.184134,1.636997,3.863976,4.623408,-2.225581,-3.311383,5.521889,-7.673126,7.203449,-8.615068,-1.190091,-5.702287,-3.648859,0.276550,-6.292613,-0.229428,6.115296,5.832218,4.460677,2.111615,8.542906,3.873405,3.836863,6.489042,-0.708704,-7.315853,0.158672]], dtype = "float64")#candidate|7161|(14, 64)|const|float64
call_7160 = relay.TupleGetItem(func_2581_call(relay.reshape(const_7161.astype('float64'), [8, 8, 14])), 0)
call_7162 = relay.TupleGetItem(func_2584_call(relay.reshape(const_7161.astype('float64'), [8, 8, 14])), 0)
output = relay.Tuple([bop_7134,call_7151,var_7152,call_7160,const_7161,])
output2 = relay.Tuple([bop_7134,call_7153,var_7152,call_7162,const_7161,])
func_7171 = relay.Function([var_7132,var_7133,var_7152,], output)
mod['func_7171'] = func_7171
mod = relay.transform.InferType()(mod)
var_7172 = relay.var("var_7172", dtype = "int32", shape = (13, 4, 7))#candidate|7172|(13, 4, 7)|var|int32
var_7173 = relay.var("var_7173", dtype = "int32", shape = (13, 4, 7))#candidate|7173|(13, 4, 7)|var|int32
var_7174 = relay.var("var_7174", dtype = "int16", shape = (168,))#candidate|7174|(168,)|var|int16
output = func_7171(var_7172,var_7173,var_7174,)
func_7175 = relay.Function([var_7172,var_7173,var_7174,], output)
mutated_mod['func_7175'] = func_7175
mutated_mod = relay.transform.InferType()(mutated_mod)
var_7239 = relay.var("var_7239", dtype = "uint32", shape = (13, 6, 6))#candidate|7239|(13, 6, 6)|var|uint32
var_7240 = relay.var("var_7240", dtype = "uint32", shape = (13, 6, 6))#candidate|7240|(13, 6, 6)|var|uint32
bop_7241 = relay.equal(var_7239.astype('bool'), relay.reshape(var_7240.astype('bool'), relay.shape_of(var_7239))) # shape=(13, 6, 6)
output = relay.Tuple([bop_7241,])
output2 = relay.Tuple([bop_7241,])
func_7246 = relay.Function([var_7239,var_7240,], output)
mod['func_7246'] = func_7246
mod = relay.transform.InferType()(mod)
mutated_mod['func_7246'] = func_7246
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7246_call = mutated_mod.get_global_var('func_7246')
var_7248 = relay.var("var_7248", dtype = "uint32", shape = (13, 6, 6))#candidate|7248|(13, 6, 6)|var|uint32
var_7249 = relay.var("var_7249", dtype = "uint32", shape = (13, 6, 6))#candidate|7249|(13, 6, 6)|var|uint32
call_7247 = func_7246_call(var_7248,var_7249,)
output = call_7247
func_7250 = relay.Function([var_7248,var_7249,], output)
mutated_mod['func_7250'] = func_7250
mutated_mod = relay.transform.InferType()(mutated_mod)
var_7334 = relay.var("var_7334", dtype = "float64", shape = (5, 8, 16))#candidate|7334|(5, 8, 16)|var|float64
uop_7335 = relay.asin(var_7334.astype('float64')) # shape=(5, 8, 16)
func_6647_call = mod.get_global_var('func_6647')
func_6650_call = mutated_mod.get_global_var('func_6650')
var_7338 = relay.var("var_7338", dtype = "int8", shape = (192,))#candidate|7338|(192,)|var|int8
call_7337 = func_6647_call(relay.reshape(var_7338.astype('int8'), [3, 4, 16]), relay.reshape(var_7338.astype('int8'), [3, 4, 16]), )
call_7339 = func_6647_call(relay.reshape(var_7338.astype('int8'), [3, 4, 16]), relay.reshape(var_7338.astype('int8'), [3, 4, 16]), )
output = relay.Tuple([uop_7335,call_7337,var_7338,])
output2 = relay.Tuple([uop_7335,call_7339,var_7338,])
func_7341 = relay.Function([var_7334,var_7338,], output)
mod['func_7341'] = func_7341
mod = relay.transform.InferType()(mod)
mutated_mod['func_7341'] = func_7341
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7341_call = mutated_mod.get_global_var('func_7341')
var_7343 = relay.var("var_7343", dtype = "float64", shape = (5, 8, 16))#candidate|7343|(5, 8, 16)|var|float64
var_7344 = relay.var("var_7344", dtype = "int8", shape = (192,))#candidate|7344|(192,)|var|int8
call_7342 = func_7341_call(var_7343,var_7344,)
output = call_7342
func_7345 = relay.Function([var_7343,var_7344,], output)
mutated_mod['func_7345'] = func_7345
mutated_mod = relay.transform.InferType()(mutated_mod)
var_7347 = relay.var("var_7347", dtype = "float64", shape = (11, 4, 6))#candidate|7347|(11, 4, 6)|var|float64
uop_7348 = relay.atanh(var_7347.astype('float64')) # shape=(11, 4, 6)
output = relay.Tuple([uop_7348,])
output2 = relay.Tuple([uop_7348,])
func_7365 = relay.Function([var_7347,], output)
mod['func_7365'] = func_7365
mod = relay.transform.InferType()(mod)
var_7366 = relay.var("var_7366", dtype = "float64", shape = (11, 4, 6))#candidate|7366|(11, 4, 6)|var|float64
output = func_7365(var_7366)
func_7367 = relay.Function([var_7366], output)
mutated_mod['func_7367'] = func_7367
mutated_mod = relay.transform.InferType()(mutated_mod)
var_7539 = relay.var("var_7539", dtype = "float64", shape = (16, 2, 12))#candidate|7539|(16, 2, 12)|var|float64
var_7540 = relay.var("var_7540", dtype = "float64", shape = (16, 2, 12))#candidate|7540|(16, 2, 12)|var|float64
bop_7541 = relay.floor_divide(var_7539.astype('float64'), relay.reshape(var_7540.astype('float64'), relay.shape_of(var_7539))) # shape=(16, 2, 12)
uop_7544 = relay.asinh(var_7540.astype('float32')) # shape=(16, 2, 12)
output = relay.Tuple([bop_7541,uop_7544,])
output2 = relay.Tuple([bop_7541,uop_7544,])
func_7549 = relay.Function([var_7539,var_7540,], output)
mod['func_7549'] = func_7549
mod = relay.transform.InferType()(mod)
mutated_mod['func_7549'] = func_7549
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7549_call = mutated_mod.get_global_var('func_7549')
var_7551 = relay.var("var_7551", dtype = "float64", shape = (16, 2, 12))#candidate|7551|(16, 2, 12)|var|float64
var_7552 = relay.var("var_7552", dtype = "float64", shape = (16, 2, 12))#candidate|7552|(16, 2, 12)|var|float64
call_7550 = func_7549_call(var_7551,var_7552,)
output = call_7550
func_7553 = relay.Function([var_7551,var_7552,], output)
mutated_mod['func_7553'] = func_7553
mutated_mod = relay.transform.InferType()(mutated_mod)
var_7917 = relay.var("var_7917", dtype = "float64", shape = (7, 10, 16))#candidate|7917|(7, 10, 16)|var|float64
uop_7918 = relay.asinh(var_7917.astype('float64')) # shape=(7, 10, 16)
func_3217_call = mod.get_global_var('func_3217')
func_3221_call = mutated_mod.get_global_var('func_3221')
const_7925 = relay.const([True,True,False,False,True,True,False,False,True,True,False,False,False,False,True,False,True,True,True,True,True,True,True,True,True,True,False,False,True,False,True,True,True,True,True,False,False,True,False,True,False,False,True,False,True,True,True,False,False,False,True,False,True,False,True,False,True,True,False,True,True,True,False,False,False,True,False,False,False,False,True,True,True,True,True,False,False,False,False,False,False,False,False,False,False,True,False,False,False,True,True,True,False,True,True,True,False,True,True,False,False,True,True,True,False,True,True,False,True,True,False,False,True,True,False,False,False,False,False,True,True,True,False,False,False,False,True,False,True,False,False,True,True,False,False,True,True,True,True,False,True,False,False,False,True,False,False,True,True,False,False,False,True,True,False,True,True,True,True,False,False,False,False,True,False,False,True,True,False,False,True,True,False,False,True,True,False,False,True,True,False,True,False,False,False,False,True,True,False,True,False,False,True,False,True,True,False,False,False,False,True,True,True,True,True,True,True,False,True,False,True,True,True,True,True,False,False,True,True,False,False,True,False,True,True,True,False,False,False,False,False,True,True,False,False,True,True,True,True,False,True,False,True,True,False,True,True,False,False,False,False,False,False,False,True,True,True,True,True,True,True,False,False,False,False,True,True,True,False,False,True,False,True,False,True,True,True,False,True,True,False,True,True,False,True,False,False,False,True,True,False,False,True,False,True,True,True,False,False,False,True,True,False,False,False,True,True,True,True,False,True,True,True,False,False,False,True,False,False,False,True,False,True,True,True,False,False,False,False,True,False,True,False,False,True,False,True,False,False,False,False,True,False,True,True,False,True,False,False,False,True,True,False,False,False,True,False,True,False,False,False,False,False,False,True,True,True,False,False,True,True,False,False,True,False,True,True,True,False,True,True,True,False,False,True,True,True,True,False,True,True,False,False,True,False,True,True,True,True,True,False,False,True,False,True,True,False,False,True,False,True,False,True,False,False,False,True,False,True,True,True,False,True,True,False,True,False,True,True,False,False,True,False,True,False,False,True,False,False,False,False,False,False,True,False,True,True,True,True,False,False,False,False,True,False,False,False,False,True,True,False,True,True,True,True,True,True,False,True,True,False,True,True,False,False,True,True,True,False,False,True,False,True,True,True,True,False,False,True,True,True,False,True,False,True,False,True,False,False,False,True,False,True,True,False,True,False,False,False,True,False,True,True,True,True,True,False,True,True,False,False,False,False,True,True,True,True,False,True,True,True,False,True,False,True,False,False,False,False,False,True,False,False,False,False,True,True,False,False,False,False,False,True,False,False,False,True,True,False,False,True,True,True,False,False,False,False,False,False,False,False,True,True,False,False,True,True,True,True,True,False,False,False,True,False,False,True,False,True,True,False,False,True,True,True,True,False,True,True,False,False,True,False,True,False,False,False,True,True,True,True,True,True,True,False,False,True,True,False,False,True,False,True,False,False,False,True,False,True,False,False,True,True,False,False,True,False,False,True,False,False,False,True,True,True,False,True,False,True,True,False,False,False,True,False,False,True,True,False,True,True,False,False,True,True,True,False,True,True,True,True,True,True,True,True,False,True,False,False,False,False,True,True,False,False,True,False,False,True,False,True,False,False,True,True,True,False,False,True,False,True,False,True,True,True,False,True,False,True,False,True,True,True,False,True,True,True,True,True,False,True,False,True,True,False,False,True,False,False,False,False,False,False,False,True,False,False,False,False,True,False,True,False,True,True,True,True,True,False,False,True,True,True,False,True,True,True,False,True,True,False,False,True,False,False,False,False,False,True,True,False,True,False,False,True,False,False,False,True,False,False,False,False,True,True,True,False,False,True,False,True,True,False,True,True,False,True,False,False,False,True,False,False,True,True,True,True,True,True,False,True,True,True,True,True,False,False,True,False,True,True,True,False,True,False,False,True,False,False,False,False,True,False,False,False,True,True,False,False,False,False,False,False,True,True,True,True,False,False,True,True,False,True,False,True,True,False,True,True,False,True,False,True,True,False,True,True,False,True,True,False,False,True,False,True,True,True,True,True,False,False,False,False,True,False,True,True,False,False,False,False,True,False,True,True,True,True,False,True,False,True,True,False,True,False,False,False,True,True,True,True,True,True,True,True,False,True,False,False,True,False,True,True,True,False,False,False,True,False,True,False,True,False,False,False,False,False,False,False,True,True,True,True,True,True,False,True,False,False,True,True,False,False,False,True,True,False,True,False,False,False,False,False,True,True,False,True,True,True,True,True,False,True,False,True,False,False,False,False,False,False,True,False,False,False,False,True,False,True,False,True,False,False,True,True,True,True,False,True,False,False,False,True,True,False,False,True,False,True,True,False,True,False,False,True,False,False,True,True,False,True,False,False,True,True,True,True,False,True,False,True,True,False,False,False,False,False,True,False,True,False,False,False,True,False,False,True,True,True,False,True,False,False,True,True,True,False,False,False,True,False,True,True,False,True,True,False,True,True,False,True,True,False,True,False,True,True,False,False,False,False,True,False,True,False,False,False,False,False,False,True,True,True,False,True,False,False,False,False,True,False,True,False,True,False,True,False,False,True,False,False,True,True,True,False,True,True,True,True,True,True,False,False,True,True,False,True,True,False,True,False,False,False,False,True,True,True,True,True,False,True,True,False,False,False,False,True,True,True,False,True,True,True,True,False,False,True,True,True,True,True,True,False,True,True,True,False,True,True,True,True,False,True,True,True,True,False,False,True,True,True,False,False,False,True,False,False,True,False,True,False,True,False,False,False,True,False,True,False,True,False,False,True,True,True,False,True,True,True,False,True,False,False,True,False,True,False,False,False,False,True,True,True,True,True,True,False,True,False,True,False,True,True,False,False,False,False,True,False,True,True,True,True,True,False,True,True,False,True,True,False,False,False,True,True,False,True,False,True,True,True,False,False,False,False,True,False,False,False,False,False,False,True,True,True,False,True,False,False,False,False,True,True,False,False,False,False,True,False,False,True,True,False,True,True,False,False,False,False,True,False,False,True,False,False,False,False,True,True,False,True,True,True,False,True,False,True,False,True,True,False,False,True,False,False,False,False,False,False,False,True,True,True,False,True,True,True,True,False,False,True,True,True,True,False,False,True,True,False,False,False,False,True,True,False,True,False,False,True,False,True,True,True,False,True,False,True,False,True,True,False,True,False,True,False,False,False,True,True,False,True,False,True,False,True,True,True,True,False,True,False,True,False,True,True,True,False,False,False,True,True,False,False,True,False,False,False,False,True,True,False,True,True,True,True,True,True,True,False,True,False,False,False,False,False,True,True,False,True,True,True,False,False,False,True,False,False,True,False,False,True,False,True,False,False,False,True,True,True,False,False,True,False,False,True,False,True,True,False,False,False,False,False,False,False,True,False,False,True,False,False,False,True,True,False,True,False,False,False,True,False,False,True,False,False,False,True,True,True,True,True,False,True,True,False,True,False,True,False,True,True,False,True,False,False,False,True,False,False,True,True,False,True,False,False,True,True,True,False,False,True,True,False,False,False,True,False,True,False,False,False,True,False,False,False,False,False,True,False,False,True,False,False,False,False,False,False,True,False,False,False,True,False,False,True,False,True,True,True,True,True,False,True,False,False,True,False,False,False,True,False,True,True,False,False,True,False,False,True,False,False,True,True,False,True,True,True,True,False,False,False,False,False,True,False,False,False,False,False,True,True,False,False,False,False,False,False,True,False,True,True,True,False,True,True,True,False,False,False,False,True,True,False,True,False,False,False,True,True,False,False,False,True,False,True,True,True,True,False,True,False,False,False,False,True,False,True,True,False,False,True,True,True,False,True,True,False,True,False,True,True,False,False,False,True,True,False,False,False,False,True,False,False,False,False,True,False,True,False,False,True,False,False,False,False,True,False,False,False,False,False,True,True,False,False,False,True,False,False,True,False,True,True,True,True,True,False,True,False,True,False,False,True,False,False,True,True,False,True,True,True,True,False,False,True,False,False,False,False,False,True,True,True,False,False,True,True,False,False,False,True,False,False,False,False,False,True,True,True,True,False,False,False,True,False,False,True,False,False,False,False,False,True,True,False,True,False,False,True,True,False,True,True,False,True,False,False,True,True,True,False,False,True,False,True,True,False,False,True,True,False,True,True,True,True,True,False,True,True,False], dtype = "bool")#candidate|7925|(1800,)|const|bool
const_7926 = relay.const([[False,True,False,False],[False,True,True,True],[True,True,True,False],[False,False,False,True],[False,True,True,True],[False,True,False,False],[True,False,True,True],[False,True,False,False],[False,True,False,False],[False,False,False,False],[True,True,False,False],[True,False,True,True],[False,False,True,False],[True,True,False,True],[True,False,False,False],[True,True,False,True],[False,True,False,False],[True,False,False,False],[True,False,False,False],[True,True,False,True]], dtype = "bool")#candidate|7926|(20, 4)|const|bool
const_7927 = relay.const([-4.584863,-3.422104,9.599496,5.237365,9.551462,5.436101,4.611442,-9.945952,1.488333,-9.473137,0.699722,3.481697,7.782838,8.048296,-2.923179,7.494393,9.836075,0.302686,2.091563,-4.439914,-7.051336,-0.998743,-2.437813,-4.658157,2.613069,4.510207,-0.979069,0.735935,-6.626636,-3.037400,-1.784283,-1.603025,3.093297,-3.967545,-5.001530,-8.442232,-1.108188,-1.784409,4.144179,-5.078508,1.208435,8.347914,1.393814,3.824223,1.200963,-6.010160,-7.531106,5.733713,5.557839,-5.789869,-5.334446,-0.351114,-4.104742,-5.325267,0.017521,-7.987486,-7.236880,-7.396707,-6.195817,-6.375998,5.628241,9.931422,5.539417,-1.418594,-5.516267,-9.338464,9.314563,-0.304907,3.643129,7.657329,2.450552,8.895837,3.343679,8.593563,6.730915,3.736679,8.771260,-0.133582,3.766740,6.803233,-2.673913,5.931198,-7.030254,5.684178,-9.937107,-2.880783,-3.975659,9.474000,-8.383898,8.090843,-5.999842,-5.891316,9.374043,-5.569016,1.076623,-5.861332,4.255639,2.616447,9.399429,7.044556,7.601403,-0.766882,1.144519,0.070960,-1.711155,-0.689915,9.996796,-8.654558,8.411384,-0.527740,-4.949307,-1.840935,-1.057210,6.738072,-2.384292,2.020902,5.294146,6.776706,7.760352,-5.384725,3.770050,8.998725,8.037964,7.863764,-0.791086,-9.335137,5.233248,6.506232,-5.135370,5.300475,4.252877,7.822915,-1.520590,-0.145608,7.356984,-2.874939,1.197044,-4.049890,1.310705,6.646380,4.424206,1.775767,8.045905,-7.157776,0.631472,-4.051066,-3.716458,7.846907,9.199688,-4.385974,-1.435175,9.050072,-0.251760,5.450793,-6.012797,-1.963052,-1.352260,-3.791576,-3.821271,2.998107,-0.947831,-0.741113,9.856721,-2.380568,5.327548,-1.824932,3.792596,3.643046,3.051534,6.595928,-4.869261,6.744913,1.289463,-9.116178,-7.145444,-6.705309,3.880841,6.567021,-2.737265,8.109041,-7.900523,-0.262852,-9.761823,-4.889809,-0.717141,5.586103,0.656341,3.127761,-5.300559,-4.166313,6.401961,8.403288,6.550300,-6.365978,-8.170686,-6.310673,9.162698,-9.464083,-9.440106,7.848170,1.053003,2.803225,2.789451,9.030982,-6.321744,-0.080200,-8.757390,1.989597,-4.229801,-8.790749,6.758941,9.540113,4.730630,-8.674925,-8.062316,-4.557610,-1.735102,-3.666206,-0.664603,3.893199,6.858092,-8.594533,-9.087377,-0.844237,4.533980,5.349011,6.958620,3.576508,6.437133,-2.811016,2.526008,4.049657,3.027549,7.014712,6.894678,-9.835754,-8.563848,7.717700,-7.501626,2.972527,-8.590828,6.108705,-2.001846,-6.797128,-3.219463,6.118941,7.956904,-0.390016,4.330424,-1.931580,-1.064198,8.698573,9.192961,5.001482,-8.182620,-7.608836,-3.791343,-5.109661,-9.218012,-9.635570,-7.408432,8.097116,-8.196553,-9.529044,2.082473,-2.943553,8.292435,8.056759,-5.659794,7.373042,1.115223,1.800879,9.080054,-7.977326,-5.853230,-0.906078,0.987734,-9.172568,2.087628,0.570058,1.941523,0.373377,3.731264,-7.334634,8.753725,5.519227,0.117344,-4.139784,-9.747232,-8.545523,5.946260,6.739654,-5.235216,-3.034590,-2.102369,7.307956,-5.416925,8.767817,6.149536,3.027218,2.342609,3.050526,-9.634860,4.448050,5.916222,0.230293,-7.270876,4.184973,0.383624,2.616950,5.219907,1.618323,0.046501,2.208999,-0.316471,5.194174,9.995338,-2.302002,7.368236,5.469189,-2.560628,2.857390,6.339103,4.704083,7.624738,1.294039,3.979100,-7.300677,8.693578,1.643120,-1.600232,8.627956,-0.451557,8.548322,3.722422,-3.565693,-8.069964,-9.784312,-7.342997,-6.875536,-4.588013,-6.377213,-4.257007,-0.186654,-7.887836,-8.496663,0.762962,7.890062,0.621216,6.138632,5.942530,-1.557705,2.864620,2.450273,0.533119,0.347524,0.625377,7.028990,-2.534869,7.351549,-1.915546,-8.321382,0.149527,0.805777,-3.525033,3.509359,-1.243265,1.378359,5.526534,7.686196,-8.762269,-0.856034,-0.462041,-5.077605,-1.671306,5.428105,9.079086,-3.997111,5.287175,9.937999,-0.273128,2.700843,6.974458,-7.991727,-9.105640,1.616684,7.024700,-6.927040,6.964129,-6.984390,4.506891,-4.729538,2.656966,1.472770,-8.143050,6.686933,-0.352330,9.496019,5.534930,-9.480534,6.432214,9.653589,3.756854,-4.454149,-9.208839,-3.698241,6.483430,-8.508619,8.351636,9.103417,-6.674695,-9.590662,-1.087861,-3.111993,-2.745769,7.018666,-3.407495,-2.355667,-6.612173,0.271390,2.946643,-1.766851,-3.252703,-0.590109,8.596985,-8.312788,-0.383758,-9.531207,-3.302792,-8.255964,2.286716,1.312506,-6.916396,2.391365,-2.030432,4.176251,4.973840,-0.386663,-9.722735,2.866358,6.750894,-8.384246,0.253323,-6.453414,9.237202,-6.495932,-2.880139,7.582720,0.970852,6.983391,3.425757,7.761733,5.554043,-1.699500,-2.861025,9.565794,7.333138,8.247716,-8.488622,2.094686,5.888207,-7.778743,5.684044,-9.985690,-8.221381,-2.695614,7.512604,-8.194278,-0.563842,-7.912233,7.889357,-2.136561,5.027072,0.989321,2.985514,-5.987554,-4.821542,-3.758408,-5.624685,-1.470932,-3.486505,-6.965268,-0.530170,-6.462968,6.258122,-3.312481,-3.665120,-8.057034,-0.052450,0.415758,-4.423350,-1.986789,-5.305561,-7.080995,-8.388351,-7.369474,5.449559,-0.196985,6.394038,-1.776016,0.102550,1.303266,8.182915,-0.381647,1.655975,0.424849,1.384215,-0.962942,-8.995934,-0.261241,0.948101,-8.426852,9.809359,8.718167,0.271126,9.266678,-3.981173,6.716030,-1.826658,6.872567,7.310048,7.972620,1.820815,4.174463,-8.278790,-1.712798,-5.453499,0.364921,4.432086,-0.565765,-7.553673,1.782324,8.259503,6.440699,-2.348925,6.571207,6.704731,-1.672424,6.105039,8.518416,8.232068,7.563856,-5.675680,7.572586,9.259105,-0.098879,-6.518327,-9.987336,-1.376953,6.110053,0.393501,5.417203,-0.729855,5.415675,4.792757,6.175827,-2.662277,-3.961660,9.321897,-5.893860,3.927233,8.164266,-9.163359,0.383394,1.758586,-8.419044,-9.457780,2.704491,1.738705,-9.616155,4.033650,-0.086830,-1.498514,-0.683475,-1.676977,9.060658,-9.950354,9.060201,-0.163332,8.066807,-3.836311,-9.349542,6.729612,5.857987,-7.956340,9.037561,1.489360,6.401606,-0.798258,-1.858962,-0.148206,8.944796,-8.993959,-7.915237,5.117759,-1.105287,7.922279,-8.813312,-8.393258,2.987992,2.012551,4.386701,-3.200074,2.334059,-2.575727,-0.739658,6.139418,3.909279,-7.214927,-1.219239,-7.858335,0.639187,-3.055387,-7.080624,9.485432,2.560570,2.233738,-0.453641,-4.962101,-2.915094,7.916159,0.549603,-3.425150,-4.761878,-0.564332,2.980366,7.320904,-3.382746,-6.250374,-1.190098,2.433375,4.170822,-6.630573,-1.199722,8.884104,-8.805875,0.083570,9.111903,-5.134571,3.891951,-9.910596,9.841309,1.289265,3.110794,2.333309,-0.561982,-3.989234,2.463040,4.839204,6.603070,-0.798121,2.191367,5.805878,-7.178961,-0.283104,2.931896,-9.034263,-4.074453,-4.739845,3.611878,9.222940,-7.409860,2.817037,3.439253,-0.851304,0.608883,-2.506912,-4.447290,4.186947,1.297612,-9.303901,9.700837,-8.474452,9.266847,9.707379,-9.949610,-1.692666,-1.292502,-7.399231,-4.469743,-2.298229,6.257790,-2.591929,6.611329,-3.214268,9.923824,3.312204,9.261684,-3.713499,-1.890270,-3.115332,-7.403898,-1.154199,-6.806336,-0.599232,7.269108,6.629699,0.910598,-5.379298,2.802672,-0.662646,-9.996681,8.451326,9.634641,-4.468160,-0.146042,-0.167200,9.388977,0.433024,4.453291,-0.048195,5.225584,7.077135,4.905931,3.393285,6.576273,1.816395,9.921109,6.003891,-3.696260,-2.290471,-0.993037,7.250896,7.315455,-5.119332,4.891171,1.711485,-5.775702,3.391697,1.946875,-3.990771,-3.261050,-1.906526,4.172503,-3.016355,6.657546,-0.937706,6.666159,0.705804,-7.025812,1.281416,-9.799796,-9.166635,-5.471020,-0.850050,-5.287797,-3.034821,-7.924418,-3.501858,-9.976961,3.244804,-5.283057,-8.846178,6.737723,-7.388347,9.233342,8.420426,1.218258,-9.913117,-5.068804,2.734736,7.553996,2.769871,-9.529666,6.536223,0.404377,-4.892501,-8.714811,0.282824,-5.302914,-0.530821,-8.748232,5.216655,5.166906,3.620096,-1.885883,7.424831,-2.424460,7.865435,-4.992336,3.150220,0.987719,6.017469,-7.995445,0.520126,3.076710,-9.268395,-5.735831,1.182358,3.977147,5.785234,1.104888,-5.726685,1.846608,-9.356237,-5.000746,7.551071,5.233577,-1.161716,-8.284728,-3.920543,5.262266,2.163736,-7.506955,5.128722,7.666034,9.312096,8.670591,-5.165926,8.266152,0.075528,-0.281388,0.948595,8.762397,-2.348982,1.662012,8.187037,4.613430,-6.684272,5.254641,-0.709776,-5.594257,5.658550,3.566451,2.115623,-0.259816,-4.124483,5.477167,-9.016441,2.672173,-3.545418,4.650723,5.046903,-9.573926,-0.848544,-3.898007,-6.061730,-8.479481,-6.302590,2.897399,-8.862778,-2.991866,6.856863,-3.558515,4.921101,-1.398595,6.928769,4.507181,-0.335465,-3.167956,-1.613544,5.296566,-4.048647,-3.686093,2.315357,-5.623071,-6.823264,3.404588,-3.777277,8.015997,1.104723,-4.780352,-8.623230,-5.343982,3.386269,2.109105,9.651437,1.329752,8.804225,-5.324533,6.887248,-5.499790,-8.571159,5.887935,-7.315343,-3.718039,-7.688507,-7.402165,-5.715534,-2.700516,2.474244,2.352898,-3.212281,-8.301664,9.209180,5.330052,0.131204,-2.935023,2.096418,1.958786,-1.606259,1.215955,-2.841342,9.630612,-8.470068,-9.235496,-7.427155,-3.896884,-2.419477,-0.625897,-6.863874,5.751044,3.033354,5.946862,3.149906,-3.502667,-6.860957,9.100343,3.608887,3.867348,-7.654512,-7.332592,-7.070410,7.312209,3.041492,-1.860130,0.564174,-9.644558,5.665867,6.316253,-2.643047,-6.494726,-8.526199,8.561279,1.575109,8.004767,-2.584746,-1.763780,6.113121,-7.882492,9.678952,-0.625622,-7.220196,2.742709,-4.531434,-5.736765,9.441628,2.306696,-2.372201,6.246031,3.775790,6.709385,-7.205854,-4.720737,-7.555584,4.105394,0.009480,-9.969319,-1.123452,5.945060,2.736003,4.965007,6.059472,-8.798346,4.998891,6.700909,-5.848097,-8.443669,-5.497832,-7.482819,2.573548,-3.622614,9.398595,-3.141783,-2.559980,-7.777645,-9.688475,-7.359832,-1.203586,2.758089,0.519841,2.898235,-4.559328,-7.412563,-2.182049,1.189698,-3.712237,3.856241,-7.561726,9.031751,5.218249,-7.251226,8.816399,5.625157,9.730706,5.159910,6.732587,8.305358,7.407919,-9.354348,-2.252266,4.789691,9.092992,3.541190,2.879392,2.064052,-3.658730,-6.155282,-2.675349,-1.147683,-7.858757,-8.369724,-9.557021,1.434929,-3.539342,5.497593,8.296726,8.775833,4.062489,6.038119,-8.767639,-8.816254,-2.832135,-1.558867,-8.911772,3.783763,5.946691,0.850425,1.298709,4.149074,-0.129534,-0.590173,1.765874,4.133690,-9.304575,6.621457,9.970434,-4.587403,-1.675552,-1.851687,5.472228,-8.169707,-5.812866,-4.469472,-1.281324,3.352418,-9.625870,5.819257,3.696678,7.830945,6.200886,-9.631818,-8.058112,-9.289287,-1.483386,3.043912,-6.801018,-8.132237,5.136637,-3.673541,-0.431415,1.397340,-8.761975,-8.639815,2.078836,7.331766,7.560685,6.262324,-8.167504,-9.770405,-8.951595,-9.768902,9.610247,2.902017,5.943360,5.571149,0.757470,5.040089,8.874998,-5.154925,0.696800,6.821730,2.832204,-2.873977,-2.812578,-1.934524,-4.433403,-4.358254,8.705481,6.511408,1.767815,-6.036257,4.173646,-4.402933,-8.109162,7.812804,0.714762,-2.723388,5.119855,-3.063330,3.823539,-9.547956,-3.360802,-5.255214,4.312265,-1.783863,-5.373561,6.570287,-6.886933,-5.054843,-3.127291,-1.907824,-2.051175,3.341056,4.613676,5.642016,-2.577118,0.759378,-5.776535,2.331401,8.004568,0.532630,-4.845483,7.768451,-2.414734,6.350449,1.343376,-8.749539,-2.940641,6.881627,-9.578053,8.973531,-9.201819,7.042394,-8.570804,-2.599116,-5.189653,1.403021,9.717222,-8.058028,-4.211280,-0.484310,6.344236,7.231899,-5.373355,-6.499217,8.462321,-4.304717,-4.395892,5.656221,-3.439245,-6.975539,7.227413,4.290812,-5.284751,-2.664448,-8.642050,-1.416815,-3.033305,9.882138,-9.713058,1.747801,0.906123,7.205683,2.204074,-8.919097,4.159533,-9.565310,-3.527057,0.725647,7.408133,6.371627,-9.194357,-7.782051,8.305962,-4.245763,2.632052,-7.115057,4.122501,-3.564905,-3.231833,-2.953932,9.776564,-0.583326,-5.869912,-6.161319,0.182337,5.806287,5.622749,-4.451486,-1.965688,-9.413562,-3.921115,-1.773149,-2.879863,-1.943884,-3.617557,-1.668479,-1.983595,2.591132,-2.204544,-8.456954,-0.907540,-5.792474,3.494842,-1.488423,7.572208,9.166540,9.953218,8.514467,-0.690481,-3.146787,-9.249791,-3.688708,4.961038,6.848474,8.342267,-8.938937,-9.794288,9.152445,4.267671,0.669930,-8.709069,4.457554,-2.718265,-6.191508,-9.746797,1.931777,8.279557,6.641810,-9.411491,5.780103,5.310579,9.267945,-6.052820,5.782941,-8.078605,-8.004968,-8.462599,8.865205,-0.455035,2.570809,-6.636475,3.333181,0.045529,1.335459,5.143451,1.198751,-8.294101,-4.459348,-7.551352,-9.807903,-2.595907,7.745478,-0.888406,-9.202291,-5.117909,-8.806296,-7.707735,4.007583,-6.637766,2.898401,1.946411,-0.725525,6.890336,-9.994120,9.290302,9.547092,6.775220,-6.033838,7.019059,-0.126920,-5.716457,-4.880490,-9.483925,-1.042918,-0.174464,-4.742172,0.847301,4.976205,-7.571714,-9.097248,1.509430,3.194802,-9.534162,-7.489472,-9.856897,-8.858259,0.816939,-5.986522,-6.641624,2.370513,-6.970857,-4.034251,-9.390034,0.187891,3.205976,-1.921519,3.904734,1.402474,4.292893,0.115764,-1.436304,1.591400,-9.000369,8.558696,-5.406953,-8.134463,-3.013491,-5.625216,-1.495387,7.808193,1.384250,-5.945772,-5.929437,5.204166,-2.849825,4.140682,-9.086163,-7.583961,-7.644021,8.330899,-8.163894,-0.729342,-3.715235,-7.720032,-6.754980,-5.069534,1.404861,-6.976414,-4.551617,-5.590416,-0.944516,0.418427,-5.410048,3.820800,2.202979,1.261879,-2.401706,-3.371311,6.237823,-4.263240,5.291545,3.748992,6.650218,-1.044786,5.192745,-1.246658,-1.077499,-9.308531,-9.339987,-9.005864,-1.143361,1.582921,4.128443,5.874717,-0.213306,-5.631385,-6.869564,0.748261,3.285900,3.117393,-3.121364,-8.712253,7.612609,2.536986,-0.806866,1.895964,6.250487,-8.922953,0.162437,8.128002,5.911867,6.311472,-8.155387,5.905732,-7.933197,-8.649862,5.069372,0.801928,-6.010535,-9.987947,-9.334229,8.359370,-0.557828,-1.763939,-8.212148,-4.033525,4.606776,5.749066,-8.160091,9.821412,-6.447666,9.839931,-8.780523,-4.857299,5.153740,-2.242396,7.470947,6.680470,3.842223,1.861024,-2.263610,3.527558,0.510677,8.841572,9.341498,-5.766609,-7.990336,8.369919,-4.046334,4.647037,-9.838849,-8.096664,-1.399031,-6.583816,9.007433,1.892403,2.346315,-8.040115,5.554270,-7.939996,-9.422292,-4.248642,-5.972381,-5.101887,-5.971630,-5.522013,4.273182,-6.730938,-6.275416,9.888546,-8.123630,2.105573,8.169395,-2.757313,6.084778,6.842608,0.439643,4.570795,-3.112243,-0.845172,4.628216,9.823891,7.770543,-0.213417,-6.108425,-3.045846,-9.212958,-6.947713,0.095749,9.485801,1.320487,-7.592495,-8.541318,-5.284914,9.922050,3.562068,2.719138,6.706397,-1.128412,9.781681,0.032023,7.144348,8.913747,2.951973,-3.912011,-2.675451,-1.292093,-7.754305,-0.874487,1.010056,-8.261824,-1.169113,6.136163,-2.518121,-3.811977,3.230370,7.156057,9.052278,-4.656847,4.270224,7.516851,0.210284,9.114076,8.007060,-6.167993,0.760580,7.691499,2.559936,-1.522211,1.587255,4.324959,-1.671345,1.419310,8.904038,3.348382,4.873345,-2.511280,-0.614065,-6.571301,9.398986,-4.198627,1.319695,4.574505,-2.969326,2.531599,-5.134809,-8.058844,1.044246,-5.632572,-3.392919,-7.222742,8.613015,-5.578257,-1.437638,6.221966,9.024177,-4.883591,7.982631,9.162611,4.490602,9.403806,5.606040,8.705397,-5.785778,-4.350056,4.575089,-9.310087,6.740203,-5.988483,1.648679,-4.205997,4.973841,-0.901908,-2.867804,-0.548284,-2.464119,2.557608,-3.255998,-5.256832,-3.276051,9.181820,9.682093,-1.197765,-8.716651,-4.909044,-3.794403,-6.350067,-6.574391,5.205251,4.813748,-9.942204,5.939829,6.920040,-3.731722,-6.820486,-9.559705,-2.900151,6.561243,1.304154,1.611685,-1.729298,-0.207822,3.402301,1.662424,4.625603,4.126613,-5.370610,7.850217,-1.643830,0.154221,-5.455510,-5.789341,-0.792024,-5.652366,9.512751,7.241356,7.143087,-9.696090,-8.188700,6.365338,-0.563108,-8.025358,-8.323551,1.888517,1.292347,0.333239,-0.007681,2.779169,-8.173796,-2.289074,1.222713,4.724109,3.079152,-3.974233,8.894081,8.423690,-0.610421,-5.824837,3.885411,2.623130,-5.180182,5.429767,-2.486448,4.829452,-3.633899,-0.793561,-1.876175,-8.529133,8.140574,3.085045,0.497885,6.012159,-0.033765,-8.312961,1.335888,5.811099,-6.457706,-4.017488,1.516524,5.967717,-0.866871,1.315285,0.124323,-2.451391,-8.712125,3.418614,3.401327,9.776434,-1.321169,7.984924,7.486066,-0.240962,0.370024,-9.741979,-0.137732,-5.542592,3.612372,4.361795,-9.648414,-9.170242,-4.168164,-3.785451,-3.605609,6.839404,6.650099,-9.988169,8.720943,-1.065127,1.482108,9.448235,3.884281,-2.886793,-0.286331,3.067053,-2.230057,2.425344,-7.236065,-0.207454,-3.143361,8.806348,-5.995698,-4.684813,-6.010917,4.259385,-9.406708,-8.009585,-1.886054,-5.215847,-7.535727,7.335528,5.649005,5.235166,-6.847810,-1.766053,-4.700299,-8.071610,6.347606,-9.839290,-7.164891,-4.871218,4.714089,-8.085812,9.964375,-7.358587,-3.223964,-2.816371,-3.437305,5.384535,3.861052,0.834011,-3.333240,9.060634,7.021412,4.969035,3.275866,-3.336595,-3.442723,-0.079249,1.760451,-7.963334,3.075007,-6.363375,-8.700520,-6.681953,3.014641,4.202122,-6.264899,-0.189441,8.040409,1.433476,9.208525,5.940312,-3.656022,6.391259,-7.274165,4.131151,8.744557,3.340196,-8.616477,0.156151,-4.472981,8.917702,2.806498,-0.919247,1.798209,0.408393,3.051097,8.099745,0.964389,9.657343,-2.122036,9.088653,-3.315505,0.214827,-1.239489,4.590513,-2.038518,8.006642,-6.998618,-3.657612,9.038920,-7.973940,-6.807168,-4.979849,-6.535093,2.966404,0.412701,-0.009364,0.062417,-9.978177,9.231022,-6.548935,-3.160096,6.373865,9.328989,-4.820990,-5.446255,6.554774,-8.843383,-4.246749,-2.936528,8.357892,-7.819739,5.804545,-5.808735,8.540592,2.234599,6.523484,-3.059178,-8.081038,-8.801532,-2.823589,2.605821,0.056381,-7.868276,2.221202,6.843251,-9.815663,-4.704515,2.890077,6.363433,-5.959416,5.284598,-0.274047,4.602255,5.572077,0.588563,-2.369653,-7.646646,2.754405,6.763925,8.479824,2.272844,-8.281474,5.809171,-1.455485,-0.618800,-5.478874,-8.489670,2.570699,6.731372,6.899500,3.169553,-5.798233,6.593171,-3.384065,-4.631895,1.594407,4.566441,4.984308,-2.609151,3.626576,8.591822,-4.581730,-0.299963,8.864395,-5.423999,-7.445021,-6.508363,4.743941,-1.422017,-0.532812,2.547775,5.649759,4.859919,-8.807333,-0.876840,-7.732828,4.946460,-2.930567,4.073508,9.996068,-7.328749,8.694717,-0.857327,2.745885,-7.041846,4.210522,5.313703,-6.016318,-1.036541,-0.047230,-9.837003,-2.375193,8.169915,1.048175,-4.218248,2.161280,-6.412293,0.841197,1.353694,-3.233145,-6.900509,-2.917700,-0.387283,-4.980827,6.651674,1.536137,9.115221,9.962532,-0.885719,8.537420,8.118561,-7.223349,6.490884,1.519796,-4.113641,-1.176221,2.893657,-3.114498,7.128911,-5.640231,-8.230738,-9.823230,0.895731,-8.954518,-7.348310,-2.750759,-0.542156,-5.931058,-2.342689,9.039528,1.158285,3.673419,-0.663084,-8.790831,-3.106498,-0.569021,-5.344821,6.361528,-8.963528,-0.970407,0.912991,-2.094497,2.078558,-3.479578,-1.519967,-1.152314,4.627123,8.078070,1.802848,-0.507619,-7.405665,-3.577335,2.439528,8.373192,-1.160637,3.249148,-5.944113,7.165976,-2.634915,-6.807474,9.332690,-0.098597,-5.473606,-9.209926,3.442402,-2.323679,9.369581,-0.814280,-7.740845,-0.983613,1.450474,-1.767539,-2.356244,5.860152,4.651239,5.609762,-7.024261,-8.695641,8.247379,2.040734,8.299353,4.128479,-6.905985,6.184703,2.833720,0.451396,8.233653,-8.315594,-8.776345,-1.546811,8.370391,-3.389252,6.899504,8.043139,-9.375342,9.296773,-8.683876,-9.196345,2.273888,1.785840,-4.569042,6.708851,-5.422785,8.188336,-7.105998,0.987249,2.017771,0.573880,-0.525537,-7.632853,4.216104,-9.887625,-9.309559,4.279138,-5.466037,-5.176977,2.722251,2.138930,2.638795,-9.389458,-2.608172,-6.980920,-3.266274,5.915815,-2.799296,7.632100,1.085416,7.383857,-7.904657,9.411279,2.248629,7.053166,-8.454463,-3.028124,8.672895,3.092277,-3.628311,-0.012452,1.023918,4.051880,9.197354,-0.769367,-5.916884,-3.410136,-3.968037,-9.465376,5.042032,-0.844545,-3.199643,7.486735,-3.399536,8.407784,-1.291190,7.904366,1.545665,7.356624,0.068949,-7.279632,6.455265,-4.933766,-6.465759,8.900575,2.410229,9.408416,6.314159,6.462156,0.982397,-8.600199,-6.857222,-8.887227,5.220716,-0.302414,5.563451,-7.871334,2.201739,-3.310731,8.265317,7.899536,5.894821,-6.005058,-6.844336,-8.952812,1.266374,5.963368,-2.257454,1.885167,-3.420306,-4.909078,-6.217485,-3.444276,-1.114170,-2.169257,5.831541,-4.768506,-2.972003,5.014369,-7.490578,5.381692,-3.899966,-8.645973,-5.694585,-2.675090,0.011278,-5.437611,-8.184836,-4.614756,6.734812,-2.132519,-2.504589,5.631999,-0.894965,9.806448,4.998010,-7.602767,-4.448720,-8.493967,-9.586489,6.485820,-6.995547,-3.548074,-9.491984,3.729057,6.622789,-2.114647,-6.603068,-1.245986,-1.626572,2.935974,-6.111261,-5.816830,-5.427124,4.189021,9.396269,4.576487,-6.391326,-9.724750,-7.353027,-2.321378,-4.322511,8.052916,0.897027,6.150878,-1.766112,1.231531,-0.937337,9.468644,-6.154717,2.916292,5.997699,6.634755,-2.412598,-2.475357,3.425768,-3.390860,-7.597922,-8.643576,-8.996561,0.555332,4.980105,1.608218,-0.997960,-8.497077,-1.736831,4.867703,-7.033263,4.046059,-2.144088,9.544151,1.093199,2.806261,-8.627523,1.626785,1.173178,6.239535,0.068746,-7.819849,0.568686,-3.173475,5.857201,5.701557,9.533896,-2.606587,-2.823972,5.819093,-6.244767,6.070475,8.169186,1.619438,-8.949398,3.372854,2.224940,1.815350,-8.575487,-5.580838,1.896672,-9.344804,5.055436,8.317104,-6.366367,8.854297,8.089149,9.476239,5.884088,-2.616801,7.479357,7.777517,0.516375,0.135490,-2.352030,6.577524,1.135317,-8.823676,6.953049,3.908085,1.701561,-8.533604,8.471633,9.828404,-5.637728,-2.979216,7.274547,-3.725728,4.365788,-2.468610,-9.135100,1.066226,7.027504,-5.819146,3.016974,3.820337,-9.386676,-9.950461,9.486783,-1.912248,4.177639,-0.309402,-9.433550,7.853983,-1.657271,4.025641,-7.358651,0.364075,5.264709,-2.525836,8.458389,0.208825,8.797287,1.952841,2.799894,-5.530355,2.021344,4.065906,9.339942,3.216194,-9.609466,-8.133736,6.545411,9.867075,6.257934,-0.340209,8.878858,-5.049310,5.938020,6.920322,3.018790,9.003788,-7.065566,-3.261660,4.872422,-5.779886,6.103901,-9.463817,-3.517662,3.707591,0.926076,-8.443820,3.587221,8.279666,-1.554481,4.972394,-0.637621,-9.733910,9.700958,4.069673,-5.430206,-4.544793,-9.196118,0.419529,-9.510756,3.145339,-7.738586,-5.191700,-4.647644,-3.933742,5.465369,5.248602,-8.168024,-3.476716,-9.719188,-0.364240,5.052553,-8.121758,-5.273569,-9.252586,-1.417070,-1.428711,6.746063,-3.144296,4.890447,5.232847,-4.002302,-7.911901,-6.925486,-4.999434,-8.836783,-4.594986,-0.525520,-8.427087,-4.824207,9.286831,-0.066693,9.673058,0.117335,1.548157,-6.259770,2.329667,1.684040,9.616091,-9.877100,7.178097,-7.627479,5.102802,-9.526961,7.619546,-4.929616,-8.978760,2.152322,7.854384,1.417701,4.520917,6.235700,6.299646,-1.632687,-5.074170,-1.239579,-0.448122,9.329818,2.921886,1.699134,-0.216454,-7.494130,-1.923766,-5.811341,-4.272106,-5.272844,8.938329,-7.344680,4.754281,8.921721,4.170107,1.145192,1.928010,4.409379,-1.698716,3.426588,4.243055,2.497220,6.448632,0.467114,-8.042153,7.416539,3.675418,-3.768234,4.703628,-4.470385,9.242436,-7.537132,1.162713,-2.265880,-4.166189,-9.522567,9.507241,0.193314,-5.680166,-1.720213,-7.709638,-7.231382,3.523281,-3.653758,2.641642,1.316601,-2.615493,7.408179,-6.184038,-3.534747,1.157025,-9.425975,-5.062100,-1.949921,-5.865545,7.119092,-2.569352,-0.410834,-0.809455,-6.780276,8.660313,6.598222,2.642052,6.876580,-5.868430,-3.297461,0.019679,-7.558349,-0.885848,-0.135629,8.499006,-3.833528,1.699440,6.637785,5.885281,0.213678,6.454987,5.252105,3.064944,-5.577947,-3.574511,-2.619493,8.364904,2.010057,9.414680,-7.808969,-4.014478,-5.695837,9.411052,5.734848,-3.053171,-7.164835,7.013010,-5.120572,-9.974154,-6.942093,-2.713313,-4.434546,1.984046,6.200116,1.750862,0.076771,-1.299047,-3.791152,2.372275,1.402005,-8.055516,-2.456571,7.802608,5.034109,8.292140,-8.523460,-8.965592,-0.880108,-3.777269,-1.387768,4.024721,3.585622,0.768313,-5.212546,-0.783862,-0.699052,7.109958,-1.663437,-6.087971,-9.226263,-4.077745,0.305837,-8.165612,-9.400313,3.748203,-4.037034,2.877556,0.556755,7.587453,1.577162,7.469455,2.737939,-5.296661,9.314820,2.316697,9.574536,-2.852456,-0.910168,-1.857917,7.834134,6.975180,-2.012268,-8.333795,8.766997,0.962292,5.174850,7.380470,5.214552,-5.029847,-4.606216,8.368615,5.864377,-0.880873,-7.904355,7.180260,-2.255022,8.355214,5.625846,-1.171360,-0.090396,1.156021,-9.394430,-9.646258,6.665981,-6.697908,-3.406553,5.383896,4.839957,1.627879,-6.550106,-3.032071,1.181483,1.762025,8.904252,4.652459,-6.820811,9.028959,9.896150,-6.577603,-4.938994,-8.573214,-0.108520,6.999619,7.019984,6.987423,1.450529,7.279583,-0.862803,2.302852,-8.414515,3.907640,6.831531,-9.337031,-2.908040,9.471107,2.315234,9.952618,3.748723,-3.888132,0.576537,-4.840966,5.673138,0.631307,9.804620,6.056743,7.011227,-0.795550,6.837920,-9.616806,8.992665,-3.307875,9.111848,1.469938,-8.822259,-2.370955,9.911788,-5.443548,-3.248088,-4.236848,-0.515772,3.137865,-5.705307,7.859892,-2.492871,5.354630,2.308926,1.783894,4.073096,-8.837028,-3.011965,8.043956,9.820235,-3.977767,6.932366,1.853824,-6.505069,-6.411654,-5.925807,-8.256984,2.990621,1.557696,4.495220,5.316604,4.394840,2.304620,-0.209263,8.794142,-8.282945,9.578411,9.457533,-9.738245,-4.855949,-8.638919,-5.466683,8.779574,7.484203,-2.805474,3.907257,8.934129,3.476451,-5.330087,-4.892639,-5.777493,5.318172,-9.395346,-4.288804,-0.610404,5.111564,-4.723215,1.483027,0.028116,-4.105125,-0.660406,-4.629677,-6.590556,-3.048639,0.920128,-1.561674,5.603732,-2.246397,-8.155377,-3.763323,0.935311,-7.969564,8.303889,3.957425,-4.594324,9.001825,-6.386150,-8.171449,7.026061,7.791318,1.992868,-3.341530,-8.359843,7.409838,-4.447333,4.125297,2.539477,6.918999,-8.593793,-3.093759,-5.383074,6.792511,6.441768,0.475628,-3.901542,7.937189,-2.197947,-4.712696,-0.447683,-6.995129,-4.474217,-8.126179,3.657616,-0.268907,8.953895,-2.772048,-0.235516,-8.831513,8.811363,0.416086,-9.497196,-6.993827,-1.647444,0.516899,-7.640138,2.705102,-4.841604,-1.888054,7.868804,5.017466,5.453603,-4.693534,5.542444,4.401109,-5.419226,-8.594554,-2.083128,-2.334088,9.654713,8.198769,4.506734,-3.543641,0.453598,1.376234,-1.916200,6.628226,-4.188895,5.030307,-9.136571,-4.072186,9.323612,4.626768,5.314334,6.638531,-7.223458,-7.159888,1.143736,9.279031,-0.137630,-7.334501,8.795359,-3.223365,9.362228,8.580036,2.228058,7.225188,-4.413294,-6.184741,-8.488168,-0.977067,-4.375613,-5.266776,-6.930668,-4.646439,-4.799407,2.559695,-1.551560,4.697276,3.089551,8.975670,-0.809334,-5.187147,-2.342574,5.716805,-0.906409,1.928191,-7.631583,-9.709346,7.507454,7.218753,7.532839,3.313237,5.452639,-5.293751,4.743622,4.865063,-2.748672,-9.472623,-3.360236,0.678267,6.088218,4.794541,-0.628604,-3.702696,1.113730,5.812485,-2.782244,-4.356379,5.300987,7.383662,5.209292,-8.713333,-1.760944,-4.833884,-8.880473,6.122763,-3.883799,-1.716642,-5.006474,-9.641382,-0.368222,8.146076,-5.684276,-5.056098,-2.517519,-3.203922,-7.924681,9.572696,5.599673,5.713913,6.011497,0.869545,-7.742775,-6.994625,3.377493,-2.800814,-5.428232,-9.174486,9.503892,-5.344622,-3.621754,6.111810,8.959602,9.866428,-7.093535,3.031444,8.126746,3.015234,-4.990592,8.909559,-6.006349,5.906695,9.819745,8.423995,9.461606,-2.922718,-6.782703,-0.663359,-4.108171,-6.036149,6.579675,-3.997881,0.511394,-2.251011,2.020367,4.057709,4.558112,-7.952778,-5.126811,0.575816,0.542982,-3.191109,-2.217103,1.297546,-2.624115,7.333260,3.296916,5.084730,-2.951917,-5.523118,6.585093,5.486356,5.248395,2.106457,-3.927567,2.792274,-8.992579,3.918417,-1.828243,3.518004,5.318730,-0.545563,-9.080706,0.196151,5.281263,-3.296793,9.820672,9.338703,7.504971,-1.452895,-1.560866,6.219505,6.255827,5.250798,1.144563,8.253491,5.976838,-8.364129,6.718882,-4.161759,0.274434,7.507538,1.931246,2.771792,2.047346,-4.959176,6.570727,-5.565767,-5.148392], dtype = "float64")#candidate|7927|(2816,)|const|float64
call_7924 = relay.TupleGetItem(func_3217_call(relay.reshape(const_7925.astype('bool'), [18, 100]), relay.reshape(const_7926.astype('bool'), [80,]), relay.reshape(const_7927.astype('float64'), [2816,]), ), 3)
call_7928 = relay.TupleGetItem(func_3221_call(relay.reshape(const_7925.astype('bool'), [18, 100]), relay.reshape(const_7926.astype('bool'), [80,]), relay.reshape(const_7927.astype('float64'), [2816,]), ), 3)
func_6357_call = mod.get_global_var('func_6357')
func_6360_call = mutated_mod.get_global_var('func_6360')
var_7936 = relay.var("var_7936", dtype = "float32", shape = (1344,))#candidate|7936|(1344,)|var|float32
call_7935 = func_6357_call(relay.reshape(var_7936.astype('float32'), [16, 14, 6]))
call_7937 = func_6357_call(relay.reshape(var_7936.astype('float32'), [16, 14, 6]))
bop_7946 = relay.less(uop_7918.astype('bool'), relay.reshape(var_7917.astype('bool'), relay.shape_of(uop_7918))) # shape=(7, 10, 16)
output = relay.Tuple([call_7924,const_7925,const_7926,const_7927,call_7935,var_7936,bop_7946,])
output2 = relay.Tuple([call_7928,const_7925,const_7926,const_7927,call_7937,var_7936,bop_7946,])
func_7969 = relay.Function([var_7917,var_7936,], output)
mod['func_7969'] = func_7969
mod = relay.transform.InferType()(mod)
mutated_mod['func_7969'] = func_7969
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7969_call = mutated_mod.get_global_var('func_7969')
var_7971 = relay.var("var_7971", dtype = "float64", shape = (7, 10, 16))#candidate|7971|(7, 10, 16)|var|float64
var_7972 = relay.var("var_7972", dtype = "float32", shape = (1344,))#candidate|7972|(1344,)|var|float32
call_7970 = func_7969_call(var_7971,var_7972,)
output = call_7970
func_7973 = relay.Function([var_7971,var_7972,], output)
mutated_mod['func_7973'] = func_7973
mutated_mod = relay.transform.InferType()(mutated_mod)
var_7996 = relay.var("var_7996", dtype = "float64", shape = (11, 8, 5))#candidate|7996|(11, 8, 5)|var|float64
uop_7997 = relay.log2(var_7996.astype('float64')) # shape=(11, 8, 5)
func_3880_call = mod.get_global_var('func_3880')
func_3883_call = mutated_mod.get_global_var('func_3883')
const_8020 = relay.const(-0.960277, dtype = "float64")#candidate|8020|()|const|float64
var_8021 = relay.var("var_8021", dtype = "int16", shape = (168,))#candidate|8021|(168,)|var|int16
call_8019 = relay.TupleGetItem(func_3880_call(relay.reshape(const_8020.astype('float64'), []), relay.reshape(var_8021.astype('int16'), [168,]), ), 1)
call_8022 = relay.TupleGetItem(func_3883_call(relay.reshape(const_8020.astype('float64'), []), relay.reshape(var_8021.astype('int16'), [168,]), ), 1)
output = relay.Tuple([uop_7997,call_8019,const_8020,var_8021,])
output2 = relay.Tuple([uop_7997,call_8022,const_8020,var_8021,])
func_8027 = relay.Function([var_7996,var_8021,], output)
mod['func_8027'] = func_8027
mod = relay.transform.InferType()(mod)
var_8028 = relay.var("var_8028", dtype = "float64", shape = (11, 8, 5))#candidate|8028|(11, 8, 5)|var|float64
var_8029 = relay.var("var_8029", dtype = "int16", shape = (168,))#candidate|8029|(168,)|var|int16
output = func_8027(var_8028,var_8029,)
func_8030 = relay.Function([var_8028,var_8029,], output)
mutated_mod['func_8030'] = func_8030
mutated_mod = relay.transform.InferType()(mutated_mod)
var_8128 = relay.var("var_8128", dtype = "float32", shape = (16, 7, 5))#candidate|8128|(16, 7, 5)|var|float32
uop_8129 = relay.sqrt(var_8128.astype('float32')) # shape=(16, 7, 5)
func_4267_call = mod.get_global_var('func_4267')
func_4271_call = mutated_mod.get_global_var('func_4271')
var_8140 = relay.var("var_8140", dtype = "int32", shape = (54,))#candidate|8140|(54,)|var|int32
const_8141 = relay.const([2,-10,10,7,-7,6,8,-10,-3,-10,7,-7,-7,-7,10,8,-3,-6,8,-2,2,2,-1,9,-5,-10,-8,-7,3,1,5,7,10,4,9,-5,-1,3,1,-5,-10,7,2,-2,-8,-10,2,5,-3,10,-3,6,-3,-8,-8,1,8,5,-3,-6,-8,8,-6,-2,9,4,8,-8,7,-7,8,3,9,-9,5,-5,-2,2,5,-8,9,-6,9,10,-9,1,7,7,-3,8,10,10,-8,9,-8,8,8,-4,8,-3,3,6,9,7,10,10,1,-1,2,-2,8,8,2,4,-8,-8,-2,-2,-10,3,-4,-9,2,-4,1,-5,-6,8,6,9,-9,-6,3,-2,-7,-2,-7,-8,10,-3,7,-3,-2,-10,-1,4,-8,-10,10,-4,8,-10,9,-4,-7,2,-7,-7,-6,-7,6,8,2,4,2,9,-8,-7,-6,-5,-9,8,-4,5,2,10,3,-3,-7,-7,7,-1,6,9,8,-4,5,-3,7,-2,9,-8,-9,7,7,5,3,-6,-3,-10,3,7,6,-8,7,-1,-9,9,9,3,4,-10,3,6,5,8,10,5,-5,-8,-2,-1,7,8,-7,-1,-9,8,7,10,1,-9,3,-6,8,5,2,-10,7,4,10,-7,-6,-1,-10,-6,-10,4,8,2,-6,5,-4,-9,-4,-4,-10,-3,9,-1,6,-10,2,-10,3,-8,10,9,10,-2,2,-1,1,1,10,9,-1,4,4,-8,5,-8,-1,8,4,8,-10,-10,-2,10,-3,8,7,-9,-6,-10,3,8,4,5,-10,5,1,10,6,-3,-7,3,5,-7,-9,3,-4,5,-9,-7,3,-8,7,8,-5,2,-6,-8,-7,1,1,-7,7,4,-4,4,10,4,9,1,-4,8,8,-10,-2,-2,-7,9,-2,-9,-1,-4,6,-10,-9,-10,4,5,-3,-6,8,-9,8,8,-2,-4,1,-6,5,1,-9,-9,9,4,10,1,9,-2,10,4,-8,-5,-6,5,8,-5,9,9,-9,3,2,-7,4,7], dtype = "int8")#candidate|8141|(390,)|const|int8
const_8142 = relay.const([False,False,True,False,True,False,True,False,False,True,False,True,False,False,True,True,False,False,False,True,False,False,True,False,True,False,False,False,False,True,False,True,True,True,True,False,True,True,False,False,False,True,True,False,True,False,True,False,False,False,True,False,False,False,True,True,True,True,True,True,False,True,False,True,False,False,False,False,True,False,False,True,True,True,True,True,True,True,True,False,True,False,False,True,False,True,False,True,True,False,True,True,True,True,True,False,True,True,False,False,True,False,True,True,True,True,False,False,False,True,False,True,True,True,False,True,False,False,True,True,False,False,True,False,True,False,False,True,True,False,True,False,False,True,True,True,False,True,True,False,False,False,True,True,True,True,True,True,True,False,True,False,False,False,False,True,False,False,False,True], dtype = "bool")#candidate|8142|(160,)|const|bool
call_8139 = relay.TupleGetItem(func_4267_call(relay.reshape(var_8140.astype('int32'), [3, 2, 9]), relay.reshape(const_8141.astype('int8'), [390,]), relay.reshape(const_8142.astype('bool'), [160,]), ), 1)
call_8143 = relay.TupleGetItem(func_4271_call(relay.reshape(var_8140.astype('int32'), [3, 2, 9]), relay.reshape(const_8141.astype('int8'), [390,]), relay.reshape(const_8142.astype('bool'), [160,]), ), 1)
func_5388_call = mod.get_global_var('func_5388')
func_5393_call = mutated_mod.get_global_var('func_5393')
const_8147 = relay.const([2.971985,-6.033980,-0.268133,-6.336066,-0.192607,5.242848,-4.509016,6.420735,4.521168,-2.591276,2.616781,5.134665,-2.173498,2.109510,7.072735,-3.240091,-4.586477,4.950391,-0.527299,1.951882,6.066632,2.838790,-4.085527,-1.739767,-5.545707,7.363637,5.892492,3.250659,-6.893623,0.650935,4.388514,-4.871840,5.584603,-5.628408,-0.352884,-5.886917,6.574665,2.932185,-9.162250,6.418531,3.529161,-1.232751,-9.024271,-4.210542,-9.209334,-1.829495,4.705188,3.887969,2.607392,7.450726,0.648622,5.174152,0.989666,7.840009,9.411544,1.943628,1.834089,5.666964,1.444988,-4.478943,6.164438,-3.616867,2.880094,2.854208,9.102876,-1.130755,-4.222224,0.770610,3.281592,5.471287,-3.313626,3.265653,-6.906727,5.744889,-6.440489,0.429078,-0.116416,-5.353716,4.736332,-6.659427,-6.639434,-4.098278,0.297182,2.412308,-2.485108,8.800592,4.572036,-2.765747,9.983800,3.226773,7.915631,8.322472,-3.673423,3.520822,-1.625407,6.206490,4.037894,7.695616,2.119476,4.603770,-4.729597,-0.366822,9.949320,1.472165,-9.275127,-3.080717,-3.683743,-3.481607,9.897178,-6.465987,9.139726,0.377484,3.544009,1.455072,5.815270,-7.514059,6.539089,4.133413,2.280680,1.254090,1.021982,9.879792,-6.725407,7.702974,-8.376667,7.622324,3.500889,-4.221962,7.064767,9.034992], dtype = "float64")#candidate|8147|(130,)|const|float64
var_8148 = relay.var("var_8148", dtype = "float64", shape = (2816,))#candidate|8148|(2816,)|var|float64
call_8146 = relay.TupleGetItem(func_5388_call(relay.reshape(const_8147.astype('float64'), [13, 2, 5]), relay.reshape(var_8148.astype('float64'), [2816,]), relay.reshape(const_8141.astype('float64'), [390,]), relay.reshape(call_8139.astype('float64'), [1, 450]), ), 3)
call_8149 = relay.TupleGetItem(func_5393_call(relay.reshape(const_8147.astype('float64'), [13, 2, 5]), relay.reshape(var_8148.astype('float64'), [2816,]), relay.reshape(const_8141.astype('float64'), [390,]), relay.reshape(call_8139.astype('float64'), [1, 450]), ), 3)
bop_8155 = relay.bitwise_and(uop_8129.astype('uint8'), relay.reshape(var_8128.astype('uint8'), relay.shape_of(uop_8129))) # shape=(16, 7, 5)
uop_8161 = relay.sigmoid(uop_8129.astype('float32')) # shape=(16, 7, 5)
output = relay.Tuple([call_8139,var_8140,const_8141,const_8142,call_8146,const_8147,var_8148,bop_8155,uop_8161,])
output2 = relay.Tuple([call_8143,var_8140,const_8141,const_8142,call_8149,const_8147,var_8148,bop_8155,uop_8161,])
func_8163 = relay.Function([var_8128,var_8140,var_8148,], output)
mod['func_8163'] = func_8163
mod = relay.transform.InferType()(mod)
mutated_mod['func_8163'] = func_8163
mutated_mod = relay.transform.InferType()(mutated_mod)
func_8163_call = mutated_mod.get_global_var('func_8163')
var_8165 = relay.var("var_8165", dtype = "float32", shape = (16, 7, 5))#candidate|8165|(16, 7, 5)|var|float32
var_8166 = relay.var("var_8166", dtype = "int32", shape = (54,))#candidate|8166|(54,)|var|int32
var_8167 = relay.var("var_8167", dtype = "float64", shape = (2816,))#candidate|8167|(2816,)|var|float64
call_8164 = func_8163_call(var_8165,var_8166,var_8167,)
output = call_8164
func_8168 = relay.Function([var_8165,var_8166,var_8167,], output)
mutated_mod['func_8168'] = func_8168
mutated_mod = relay.transform.InferType()(mutated_mod)
const_8619 = relay.const([[[2,-6,5,9,7,8,-5,1,10,-6,-7,-1,-10],[-3,2,10,9,-10,-7,-10,-9,10,-1,1,10,-4],[-8,1,6,4,5,-3,-10,-9,-4,-1,-9,-6,3],[-4,7,-9,4,2,3,-9,7,-3,7,-6,-2,3],[-8,-4,6,-4,-5,-7,-5,1,4,8,-2,-10,4],[-3,1,-10,4,-9,-3,5,-8,-8,-1,2,-7,-7],[-1,1,3,4,9,-2,-9,5,-6,9,-3,6,4],[-9,8,3,5,5,-7,3,-4,-2,7,-4,-8,-8],[9,-6,2,7,3,1,5,5,6,9,2,2,9],[-4,-10,1,-6,4,4,10,-1,-7,-7,-8,10,-5],[-9,4,5,-8,-10,-4,-5,4,8,-7,5,3,6],[-6,-9,3,-8,-7,-4,-7,3,3,-8,7,3,4],[10,9,-1,4,-8,1,3,8,-4,-6,-6,4,5],[1,7,-5,7,5,-1,-1,8,-4,9,-2,6,-9],[-4,8,4,9,-7,8,-8,-1,4,7,-3,2,-2],[-6,-10,-3,-9,8,-10,-5,-9,10,-6,6,4,-9]]], dtype = "uint16")#candidate|8619|(1, 16, 13)|const|uint16
var_8620 = relay.var("var_8620", dtype = "uint16", shape = (2, 16, 13))#candidate|8620|(2, 16, 13)|var|uint16
bop_8621 = relay.less_equal(const_8619.astype('bool'), var_8620.astype('bool')) # shape=(2, 16, 13)
uop_8624 = relay.sqrt(bop_8621.astype('float64')) # shape=(2, 16, 13)
output = relay.Tuple([uop_8624,])
output2 = relay.Tuple([uop_8624,])
func_8628 = relay.Function([var_8620,], output)
mod['func_8628'] = func_8628
mod = relay.transform.InferType()(mod)
var_8629 = relay.var("var_8629", dtype = "uint16", shape = (2, 16, 13))#candidate|8629|(2, 16, 13)|var|uint16
output = func_8628(var_8629)
func_8630 = relay.Function([var_8629], output)
mutated_mod['func_8630'] = func_8630
mutated_mod = relay.transform.InferType()(mutated_mod)
var_8688 = relay.var("var_8688", dtype = "bool", shape = (15, 9, 12))#candidate|8688|(15, 9, 12)|var|bool
const_8689 = relay.const([[[True,True,False,True,True,True,False,True,True,True,True,True],[True,False,True,True,False,True,True,False,False,False,False,True],[True,True,True,True,False,False,False,False,True,False,True,False],[False,True,True,True,True,False,False,False,False,True,True,False],[False,False,True,True,True,True,False,False,False,True,False,True],[True,False,True,False,False,False,False,False,True,True,True,False],[False,True,False,False,True,False,True,True,False,False,False,True],[True,False,False,True,True,False,False,False,False,True,False,False],[True,False,True,True,False,False,True,False,False,False,False,True]],[[False,True,False,False,True,True,False,False,True,False,False,True],[False,False,True,False,False,False,False,True,False,True,False,False],[False,False,False,False,False,True,True,False,False,True,False,False],[False,False,False,False,False,False,True,False,True,False,False,True],[False,True,False,True,False,True,True,False,True,False,False,True],[True,True,True,True,True,True,True,True,False,False,True,False],[False,False,True,True,True,True,False,True,False,True,False,True],[False,False,True,True,False,False,False,True,True,True,False,False],[False,False,False,False,False,True,True,False,False,False,False,True]],[[True,False,False,False,True,True,True,True,True,False,False,True],[False,False,False,False,True,False,False,False,False,False,False,False],[False,True,True,False,True,True,True,True,True,True,True,True],[False,False,False,True,False,True,False,True,True,False,True,True],[True,True,True,True,False,True,False,False,True,True,False,False],[False,True,True,True,False,False,False,True,False,True,False,True],[False,True,False,True,True,True,False,False,False,True,False,False],[True,False,False,False,True,False,False,True,True,False,False,False],[False,True,True,True,False,True,False,False,False,False,True,False]],[[True,False,False,True,True,False,False,False,False,False,False,True],[True,True,False,False,True,True,False,True,False,True,False,False],[True,False,False,True,False,True,True,True,True,False,True,True],[False,True,True,True,True,False,False,False,True,True,True,False],[False,True,True,False,True,False,False,False,False,False,True,True],[True,True,False,True,True,True,False,True,False,True,False,False],[True,True,False,False,False,True,False,False,True,False,False,False],[False,False,False,False,False,True,True,True,False,False,False,True],[True,False,True,False,False,True,False,True,False,False,False,False]],[[False,False,False,True,False,False,True,False,False,True,True,False],[False,False,False,True,False,False,False,False,True,True,False,True],[True,False,False,True,False,False,False,False,True,False,True,True],[True,False,False,True,True,True,False,False,True,False,True,False],[False,True,False,True,True,False,False,False,False,True,True,False],[True,True,True,False,False,False,False,True,True,False,False,False],[True,False,False,False,False,True,False,True,True,False,False,False],[False,True,False,False,False,True,True,True,True,False,False,True],[False,False,False,True,False,False,False,True,True,False,True,True]],[[False,False,False,True,False,True,True,True,False,True,True,False],[False,False,True,True,False,True,False,True,True,False,False,True],[True,False,False,False,True,False,True,True,False,False,False,False],[True,True,True,True,False,True,True,False,True,False,False,False],[False,False,True,True,True,True,True,False,False,True,False,True],[True,True,False,True,True,False,False,False,True,True,True,True],[False,False,True,False,True,True,False,True,False,True,False,True],[False,True,True,False,True,True,True,False,False,True,False,False],[True,False,False,False,True,False,True,False,False,True,False,True]],[[False,False,False,False,True,True,True,True,False,False,False,True],[True,True,False,False,True,False,False,False,False,False,True,True],[False,False,True,True,True,True,False,False,True,True,False,False],[False,False,False,False,False,False,False,False,True,False,False,False],[False,False,True,False,False,False,True,True,False,True,False,False],[False,False,False,False,True,False,False,True,False,False,False,True],[False,False,True,False,False,True,False,False,True,True,False,True],[True,True,False,False,False,False,False,True,True,False,True,False],[False,True,False,True,False,False,False,False,False,True,False,False]],[[False,True,False,True,False,False,False,False,True,True,False,False],[True,False,True,False,False,False,True,False,True,True,True,True],[True,True,False,True,False,False,True,False,True,True,True,False],[True,False,False,False,True,False,False,False,False,True,True,False],[True,False,False,True,True,False,False,False,True,False,True,False],[True,False,False,False,True,False,False,False,False,False,False,True],[False,True,True,False,False,False,False,False,False,True,True,True],[True,True,True,False,False,False,False,True,False,True,True,True],[True,False,True,True,False,False,False,True,True,True,True,True]],[[False,False,True,False,True,False,False,False,False,True,False,False],[False,True,True,False,False,False,False,True,False,True,False,True],[True,False,False,False,True,True,False,True,True,True,False,False],[False,False,False,False,True,True,False,True,False,True,False,False],[True,False,True,False,True,True,True,True,True,True,True,False],[False,True,False,False,True,False,False,True,False,True,True,True],[False,True,True,False,False,True,False,True,True,True,True,False],[False,False,True,True,True,True,True,False,False,True,False,True],[True,False,False,True,True,True,True,True,False,False,True,False]],[[True,True,False,False,False,True,False,False,False,False,True,True],[True,True,True,True,False,True,True,False,False,True,True,True],[True,False,True,True,False,False,False,True,False,False,True,False],[True,False,True,True,False,False,True,True,True,False,False,False],[False,True,False,False,True,True,True,False,False,False,True,False],[True,True,False,True,True,True,True,True,True,False,False,True],[True,True,False,False,False,True,False,False,False,False,False,True],[False,True,True,False,False,True,False,True,False,False,False,False],[False,True,True,True,False,True,True,True,True,True,True,True]],[[False,False,True,True,False,True,False,False,False,False,False,False],[True,True,True,True,True,True,True,True,True,False,True,True],[False,False,False,True,True,True,False,False,True,True,True,False],[False,True,False,False,True,True,True,False,False,False,False,True],[False,True,True,True,False,False,False,False,False,False,True,True],[True,True,True,True,False,False,True,False,False,True,False,True],[False,True,False,False,False,False,False,False,True,True,True,True],[True,True,True,True,True,False,False,False,True,False,True,True],[False,False,True,False,False,False,False,False,True,False,True,True]],[[False,True,True,True,False,False,True,True,True,False,False,False],[True,False,True,False,False,False,False,True,True,True,True,True],[True,True,True,True,True,False,False,True,True,False,True,True],[False,False,False,False,False,False,False,True,True,True,False,True],[False,False,False,True,True,False,False,True,True,True,False,True],[False,False,False,True,False,True,True,True,True,True,True,False],[False,True,True,True,True,True,False,True,True,True,False,True],[True,False,False,False,True,False,True,True,False,False,True,True],[True,False,False,True,True,True,True,True,False,False,False,True]],[[False,True,False,True,False,False,False,True,False,False,True,False],[False,True,True,True,True,False,False,False,False,False,True,False],[True,False,True,True,True,False,True,True,True,True,False,True],[False,True,False,False,True,True,False,False,False,False,True,True],[False,True,False,True,True,True,True,False,False,False,True,True],[False,False,False,True,False,False,False,False,True,False,False,True],[False,True,True,False,True,False,False,True,True,False,False,False],[True,True,False,True,False,True,False,False,False,False,False,False],[True,False,False,False,True,False,True,True,True,False,True,False]],[[False,True,False,True,True,False,True,True,False,True,False,False],[True,True,False,True,True,False,True,False,True,True,True,False],[True,False,True,True,True,False,True,True,False,True,True,True],[False,False,False,False,False,True,False,True,False,False,False,True],[True,True,False,False,False,True,False,True,True,True,False,False],[True,False,False,True,True,True,True,True,True,True,True,True],[False,True,False,False,False,False,False,True,True,False,True,True],[True,True,True,False,False,True,True,True,True,True,True,True],[False,False,False,True,True,False,True,False,True,True,False,True]],[[False,False,False,True,False,True,True,True,False,False,False,False],[True,True,False,True,False,True,False,False,True,False,True,False],[False,False,False,False,False,True,True,False,True,False,True,False],[True,False,True,False,False,True,False,False,False,False,True,False],[True,True,False,False,True,False,True,False,False,True,False,False],[False,True,False,False,True,False,False,True,False,True,True,True],[True,True,True,True,False,False,False,True,True,False,False,False],[False,True,False,True,False,False,True,True,False,False,True,True],[False,True,False,False,False,True,True,True,True,False,True,True]]], dtype = "bool")#candidate|8689|(15, 9, 12)|const|bool
bop_8690 = relay.logical_and(var_8688.astype('bool'), relay.reshape(const_8689.astype('bool'), relay.shape_of(var_8688))) # shape=(15, 9, 12)
bop_8693 = relay.equal(bop_8690.astype('bool'), relay.reshape(var_8688.astype('bool'), relay.shape_of(bop_8690))) # shape=(15, 9, 12)
uop_8706 = relay.atanh(const_8689.astype('float64')) # shape=(15, 9, 12)
func_1725_call = mod.get_global_var('func_1725')
func_1728_call = mutated_mod.get_global_var('func_1728')
var_8711 = relay.var("var_8711", dtype = "float64", shape = (2816,))#candidate|8711|(2816,)|var|float64
call_8710 = relay.TupleGetItem(func_1725_call(relay.reshape(var_8711.astype('float64'), [11, 16, 16])), 0)
call_8712 = relay.TupleGetItem(func_1728_call(relay.reshape(var_8711.astype('float64'), [11, 16, 16])), 0)
output = relay.Tuple([bop_8693,uop_8706,call_8710,var_8711,])
output2 = relay.Tuple([bop_8693,uop_8706,call_8712,var_8711,])
func_8713 = relay.Function([var_8688,var_8711,], output)
mod['func_8713'] = func_8713
mod = relay.transform.InferType()(mod)
var_8714 = relay.var("var_8714", dtype = "bool", shape = (15, 9, 12))#candidate|8714|(15, 9, 12)|var|bool
var_8715 = relay.var("var_8715", dtype = "float64", shape = (2816,))#candidate|8715|(2816,)|var|float64
output = func_8713(var_8714,var_8715,)
func_8716 = relay.Function([var_8714,var_8715,], output)
mutated_mod['func_8716'] = func_8716
mutated_mod = relay.transform.InferType()(mutated_mod)
const_8914 = relay.const([[-4.680875,7.929369,-9.656377],[2.232600,-7.127539,-0.753586],[1.765933,-1.528385,-0.693892],[0.751984,-2.807247,-7.772349],[-7.186793,6.866397,7.322695],[2.867654,0.989549,-4.480553]], dtype = "float64")#candidate|8914|(6, 3)|const|float64
uop_8915 = relay.log(const_8914.astype('float64')) # shape=(6, 3)
output = relay.Tuple([uop_8915,])
output2 = relay.Tuple([uop_8915,])
func_8931 = relay.Function([], output)
mod['func_8931'] = func_8931
mod = relay.transform.InferType()(mod)
mutated_mod['func_8931'] = func_8931
mutated_mod = relay.transform.InferType()(mutated_mod)
func_8931_call = mutated_mod.get_global_var('func_8931')
call_8932 = func_8931_call()
output = call_8932
func_8933 = relay.Function([], output)
mutated_mod['func_8933'] = func_8933
mutated_mod = relay.transform.InferType()(mutated_mod)
var_8978 = relay.var("var_8978", dtype = "int8", shape = (8, 11, 14))#candidate|8978|(8, 11, 14)|var|int8
var_8979 = relay.var("var_8979", dtype = "int8", shape = (8, 11, 14))#candidate|8979|(8, 11, 14)|var|int8
bop_8980 = relay.bitwise_and(var_8978.astype('int8'), relay.reshape(var_8979.astype('int8'), relay.shape_of(var_8978))) # shape=(8, 11, 14)
func_4013_call = mod.get_global_var('func_4013')
func_4016_call = mutated_mod.get_global_var('func_4016')
const_8995 = relay.const([-0.724293,9.959703,-2.727911,-7.244682,9.495621,-4.065798,-7.139512,7.227193,3.877016,2.401999,8.562841,5.219907,-3.570542,-9.731751,-7.509765,5.756478,-6.289041,-8.581897,0.589197,7.306698,2.694398,-5.986749,3.351419,-4.834483,5.120363,0.388462,4.494067,7.634352,-7.290757,-7.221654,7.642942,-7.516644,-3.523396,-6.124867,7.825218,-5.708773,-3.233263,-8.997376,-1.945595,-8.942318,9.830185,-6.921723,-3.178081,-5.004880,9.739788,8.769001,-4.954108,6.393759,3.940275,3.698792,4.342353,3.450699,-6.730816,7.188717,7.513091,-9.828900,-9.611798,0.718258,4.861895,0.417363,-0.228867,9.073374,-3.661590,1.651415,5.358626,7.775101,-3.683720,-5.063183,-0.301396,4.900708,0.404433,-1.998543,4.045486,-4.850748,9.554065,8.041309,2.375428,6.987851,0.741372,5.515983,0.453332,4.855375,0.843200,-6.306151,-8.387232,6.563514,-6.317605,1.098390,-3.414875,-2.319998,6.162686,0.050314,-2.784919,6.706112,-5.859132,-6.096925,4.533193,3.361128,3.509881,-3.768523,-4.346875,2.246086,-0.369952,-6.829506,6.509297,-6.435720,-1.662239,3.137564,-7.777769,5.831021,2.575876,-4.659971,0.935994,7.169149,-5.617376,-8.660529,-0.872274,7.906950,-6.963642,2.334460,-5.231421,2.243737,9.413075,8.274242,7.507294,-7.890222,5.440665,4.543546,4.290841,2.949854,-0.472155,-7.759460,-0.432863,6.902110,4.021125,-7.121120,2.925053,-8.967858,-7.184733,-3.117784,-3.586750,-7.211733,-0.547983,0.088521,-8.679363,9.697175,-2.242326,3.036260,8.391667,-7.369616,1.102063,-9.982325,-4.127507,-1.164574,-7.679373,-0.441238,3.106004,-6.056731,-2.589749,4.450960,1.582784,9.461596,-1.936823,-6.810395,-4.949278,-3.883264,0.054985,-8.642184,-2.385594,-6.288732,6.893446,2.259040,6.641363,-7.741608,3.589401,-6.843910,-8.771958,0.911201,3.764100,-5.920186,-8.565434,8.447568,3.252996,4.444832,-7.408629,9.093131,-6.589583,3.237886,-1.349760,4.789302,8.818900,-9.849342,5.607070,5.412106,4.714760,-5.056304,-7.318368,5.416567,4.961622,1.195999,-8.237840,-0.121335,-3.168405,-6.159789,9.316819,-9.402153,-5.466177,5.607373,-6.579691,-8.829655,-6.365957,5.282654,-2.637247,1.704432,0.066612,-8.129325,0.630748,-0.685167,-3.735776,-6.967706,-2.093173,-6.328498,-7.777714,3.626096,-8.449665,-7.839826,-3.509322,-1.223309,9.983702,2.794073,-2.004231,-4.306952,-3.806339,4.856434,-1.457306,-0.256788,1.056923,5.915114,-4.689664,-2.337466,-3.316266,-8.214705,4.887959,2.326521,-1.897640,5.840990,-8.876906,-5.506546,0.262921,8.491345,5.161254,-0.109815,1.917750,-7.354364,-7.744121,-3.317657,-4.662614,-5.537230,6.495921,-5.283967,-7.831325,5.446517,7.283424,0.746056,6.572704,-0.392430,-7.891829,0.324179,-1.826735,-9.841343,5.897924,5.065901,8.149173,5.082585,-6.049429,-8.609156,8.319847,6.371142,4.941426,5.755082,-2.222818,9.772247,5.587025,-7.087937,0.407676,-8.947673,9.127103,-9.231508,3.837861,-7.560778,6.425965,-2.724681,-1.288346,7.124165,-0.374517,-7.450563,7.546313,-7.533646,6.597923,-8.156046,8.276762,0.409542,6.634357,7.782912,9.216895,-9.842606,-4.408459,1.512075,-5.575181,-5.277115,-1.791952,6.239444,-6.973493,-6.347650,-2.380213,-1.241360,7.538652,9.897453,9.801385,-1.716817,-0.314774,2.151656,5.855171,5.691376,-3.834335,7.047260,-2.842070,-6.335426,-5.246369,-7.602942,4.122650,-3.018023,-4.684207,8.976216,-8.181226,-2.301517,-9.683493,8.204713,5.237741,-8.630432,-4.080757,-9.649845,-8.298544,0.439233,0.979650,-4.069234,3.081703,6.116225,-3.105224,7.112082,-1.886601,7.229079,-6.437941,9.899351,6.030385,4.075926,8.489582,-1.980803,-4.227403,-8.008711,-5.522648,-3.046774,7.043224,5.045944,6.804825,-5.215785,3.535931,-6.034959,-1.099073,5.250821,7.141469,5.674054,-1.870645,8.034906,3.087738,-2.777385,-1.842137,4.683228,-9.226451,6.058654,-1.707224,-3.305554,7.696013,8.329395,-7.680125,8.284169,6.445959,-4.786910,-4.993459,-4.715491,3.940548,4.212464,9.149268,7.667015,-4.914352,7.529972,-6.859563,-2.701323,4.780520,5.665412,-3.687754,0.553413,7.775246,2.123533,8.184488,6.126386,-2.164412,-4.595333,-2.062535,0.040310,-8.653082,0.585527,-3.192952,-4.799483,8.829345,4.144803,-7.556558,4.557336,-7.470938,-3.756573,-9.017290,-9.382688,-9.784458,-2.895980,-6.176257,0.307663,7.665526,0.936430,-7.585446,5.363401,0.359866,5.501921,2.266442,5.908058,6.234388,-9.985997,-8.845790,-0.737380,0.479640,5.274312,2.403427,0.554004,7.949133,-6.028098,-1.652745,7.679069,0.874651,-1.639272,0.299219,-9.652222], dtype = "float64")#candidate|8995|(450,)|const|float64
call_8994 = relay.TupleGetItem(func_4013_call(relay.reshape(const_8995.astype('float64'), [10, 15, 3])), 1)
call_8996 = relay.TupleGetItem(func_4016_call(relay.reshape(const_8995.astype('float64'), [10, 15, 3])), 1)
uop_9001 = relay.cos(bop_8980.astype('float32')) # shape=(8, 11, 14)
func_5743_call = mod.get_global_var('func_5743')
func_5748_call = mutated_mod.get_global_var('func_5748')
const_9014 = relay.const([-1.419778,-2.423611,5.696193,3.765432,2.766950,2.229343,8.968855,-8.966304,-8.043741,-8.752744,3.675855,5.151258,8.224530,1.153857,-5.315822,7.204790,1.423053,-3.748424,6.524734,-4.367994,-1.167241,-2.816926,0.061519,-5.902187,7.660643,0.003388,0.332748,-9.769683,-9.776379,4.721136,7.195933,3.753466,1.625946,6.372302,5.518937,1.483035,4.536290,-6.688157,8.975258,9.652032,0.039986,6.821370,8.490726,-7.342083,4.663951,-2.220982,-7.599843,6.958001,-9.996096,-2.266103,-4.281383,8.643178,4.860772,0.775597,-0.330493,0.984750,2.298003,-4.700996,2.301719,-5.792119,4.263704,2.438520,-1.295242,7.900446,9.741193,-3.380009,5.169667,8.672857,0.191199,8.380557,4.539289,-8.729969,2.428849,-4.050960,5.703886,5.319735,1.413304,-1.511073,-6.053042,-9.116804,2.118205,3.225508,-2.530578,-6.108642,7.151056,9.956745,-5.089958,4.426102,9.836228,-8.581484,-9.825975,3.927280,-7.288862,4.696755,0.738319,-2.137976,7.005751,4.960960,7.642327,7.449437,-8.292560,6.311234,-1.641738,-2.980350,-3.607440,-2.462808,8.938502,3.024827,7.728259,-6.718266,-8.193886,-7.706439,-3.920869,-5.100969,4.769131,5.264606,-1.691676,-4.364194,4.422869,-3.688891,-0.288476,8.735082,-9.932885,8.711364,4.335354,-9.122569,5.630880,2.355946,2.091583,5.455622,-5.940744,-1.750174,2.985753,0.596206,8.465288,4.221040,5.653574,9.644059,5.872045,9.265562,-1.733967,-3.976725,-4.120035,-1.488114,9.784507,-1.262508,-0.395001,2.478528,-3.965088,-5.548649,-1.253753,4.943196,-9.446382,-4.387851,1.630272,2.012507,9.199078,5.958248,8.811287,9.154805,6.507047,-8.966000,-5.178405,-3.280499,7.527476,1.176274,-9.489477,1.061621,7.425788,-9.314742,4.239636,0.938842,3.484641,0.649885,-8.279291,-0.692987,-2.074576,7.461376,-9.644056,4.161128,-6.320291,0.742202,8.299784,-6.093007,-3.676484,-5.688870,-0.713982,6.400148,-1.760364,-4.157991,2.068998,4.504275,-0.620401,5.353896,-2.435086,-2.236801,5.460616,0.436462,-8.272661,7.931565,-2.202141,-4.789698,0.857295,-1.297400,-3.564075,-8.304309,4.906728,-4.069513,-9.051942,-2.216715,-9.748088,-7.680327,4.182445,0.250479,4.398938,-0.662291,-2.574115,-9.878745,-8.773038,5.763621,0.675431,8.565774,6.770685,-4.131467,9.584110,-0.713683,1.189603,2.156744,-8.956325,-9.299635,7.500872,3.779630,-1.726171,-7.480878,8.706559,9.457113,8.100459,4.836100,-7.408591,0.612067,1.600308,-7.332945,-1.269483,3.800498,-3.761486,-8.107072,-8.675920,9.553659,9.932759,-5.637165,3.831006,3.974451,-3.929842,-0.919364,0.427273,-4.823297,0.059736,8.587746,-8.277363,1.076611,6.298851,-3.379180,0.525918,-0.819277,5.633536,6.491413,-6.347757,-4.465901,-3.580036,-5.350093,-8.764496,-5.656965,0.490730,5.478219,-1.158679,-7.224334,-4.433009,4.543443,-6.937617,-2.781927,-8.898163,-3.997293,-5.677951,5.971155,6.396395,-5.194597,-0.434430,-4.690665,7.614124,1.347434,-3.306066,0.293524,3.859055,-3.825777,-1.284598,4.922851,1.227459,5.414513,-4.257361,-8.260293,-1.363134,2.624597,0.871551,-3.552480,3.096086,-0.712761,8.297313,-1.094147,-5.462573,-5.580803,4.391020,-5.473424,-1.059001,0.513615,-1.598253,-3.605293,-8.891399,-4.579762,6.820453,-2.262550,-2.277762,-5.151302,-0.311292,-8.797270,-7.315368,9.635249,5.432826,-3.849952,-3.946762,-1.329400,8.503107,7.511438,2.619993,0.583453,3.385015,6.120938,-8.822707,6.030172,3.187182,5.234206,7.089124,2.686505,-4.630111,-3.328429,1.157636,-2.854284,1.158230,7.270903,5.835379,-6.452864,-8.637882,-6.452708,6.737411,-6.804486,-0.586748,-6.679447,-5.195920,-6.336625,5.098451,1.412973,6.890759,4.758792,-1.765108,5.417692,9.178819,-5.762943,-4.717398,-0.281465,-3.277033,-8.824581,6.699066,-2.237596,-2.356012,-9.716462,9.614660,4.475564,8.343698,-4.058328,4.140308,7.928927,4.361064,-2.259707,7.004981,1.064266,7.192426,-8.587294,4.780774,4.528837,3.502142,8.792273,0.808985,4.790599,-2.816804,-9.560243,-9.697653,-0.334148,8.598643,6.001439,-7.271478,6.539838,-7.595620,-2.347764,-1.146125,8.262518,5.526411], dtype = "float64")#candidate|9014|(405,)|const|float64
const_9015 = relay.const([-6.734542,-9.456775,4.826998,-1.345337,-2.514164,0.463100,-7.709578,-2.458661,5.717118,6.882617,-0.288468,4.586587,4.296290,3.589387,-6.640489,-3.714157,-2.690509,4.253577,6.305178,3.654692,-6.552857,3.761695,-3.567917,-7.228589,-6.197631,7.548056,9.171894,-1.895135,-0.032930,6.772623,6.426439,9.144750,-6.651861,5.801162,-2.278490,5.384661,2.683595,-9.270371,7.069150,-8.350815,-2.166992,-6.152276,-7.936644,0.819566,-9.549599,8.784426,-3.641443,5.612932,-8.967386,-9.415683,-3.941689,0.319962,-0.761661,2.828983,-2.209991,7.266005,-3.903872,-9.296640,-5.154079,4.919408,5.140413,-2.279728,5.345622,-7.499084,0.424840,-4.171672,2.331988,9.854354,3.387768,7.492747,-9.735743,9.302860,-1.261126,-5.258555,4.712113,-0.308356,-9.276892,-2.375268,-0.407923,2.738250,9.138321,6.557535,8.701517,-8.424566,-3.879011,-4.898729,-4.725762,9.194875,-0.387790,2.224121,8.428831,-6.580744,4.838297,6.982494,2.135674,9.688089,-0.334206,3.385060,5.006091,7.301954,5.713468,1.386343,3.016031,1.942294,-5.764495,9.858149,-0.351550,0.060384,-8.753820,6.096608,-5.023305,-1.872423,-4.636622,-3.033017,8.679457,8.008761,-0.713932,-4.926938,9.031217,8.026233,-1.763170,4.302279,-2.389710,-7.870855,6.511005,-1.423033,-5.533607,-2.492568,3.459910,4.527993,-2.572227,3.463287,0.694793,-4.939753,2.264271,-5.325837,-2.302544,-9.572522,-5.767191,2.391074,0.687598,2.005634,-5.466369,-0.590035,3.114999,-1.765832,-8.626248,-9.085846,7.717416,-0.535847,-5.589930,6.267425,-6.975103,6.908458,-7.373264,-3.048333,-0.306673,-3.321925,2.747081,-1.993529,-8.407250,3.702898,2.530269,-2.610829,-5.725514,2.975141,9.865784,-8.091699,8.882520,-2.345231,-7.686178,1.927119,7.940428,-5.917871,-3.062204,2.520040,9.088914,9.479514,-6.946357,-6.167348,-5.282576,6.059982,-0.431365,4.415549,6.988908,7.600226,-1.255321,-4.220708,-2.840149,-3.894297,-2.732795,6.805477,-5.915764,-1.619482,-1.648656,-7.308453,-2.051852,-0.262581,8.932020,-5.098778,-8.687996,-8.966109,-3.673464,-4.553461,3.882150,8.500128,-8.469011,-5.019752,0.910592,3.714251,9.381733,-8.886377,4.719856,-2.886763,-9.529494,7.564421,-4.860688,1.723367,-1.923591,-9.190393,5.345884,5.895134,-5.806478,-0.814954,-1.977485,-1.388690,3.480363,-9.991033,7.304061,5.890043,2.365345,-8.042307,2.636013,7.777456,4.240763,1.548606,1.310082,-4.062733,-1.556709,-9.152093,-3.245037,-3.134660,2.878450,-4.587912,7.612704,4.282332,-1.913207,2.293616,4.492703,-6.420408,-4.530062,3.284481,-2.392904,4.927521,6.407245,-4.635550,-6.400290,7.762577,8.821656,0.012483,-2.476093,7.567775,-4.463698,-7.361683,7.845280,8.924900,-8.590969,-2.056181,-1.894321,-3.866871,3.409737,-7.311902,9.323740,9.289697,5.667988,-2.445781,0.923406,2.374418,-1.567347,-2.021193,-3.889823,5.332726,-0.730124,3.647533,6.784113,-0.494510,-6.872015,5.781968,8.476530,-7.723697,8.324973,-0.857683,0.430945,-3.095661,3.154994,0.609117,-2.685296,-1.020910,-0.674622,-7.100312,5.602752,-1.850387,1.279703,-7.609304,0.537571,8.701652,0.246319,1.167718,1.298894,-0.946456,-0.965456,-1.354500,-5.678993,-1.679941,3.955770,-1.755135,8.506113,-4.102959,-4.790980,0.893886,-8.320326,-3.157680,-1.981894,-1.921748,-3.036580,-0.414025,-0.447045,7.245230,-4.394477,-4.639263,-0.517993,-2.265437,2.181356,-9.895661,7.482653,9.930231,0.655549,6.378036,-4.033626,2.409154,-5.097161,5.538324,9.071307,0.920364,-5.254485,2.725179,8.285223,0.577035,-9.660151,-4.310413,1.611849,9.619454,-6.099090,0.113278,-6.380779,4.137517,-0.589357,-2.798122,1.433340,7.305725,2.059357,3.006200,9.222389,0.421142,-1.627025,2.261967,-0.182896,-4.091833,-0.901860,3.789016,4.989924,1.613405,4.408560,7.213012,-0.807697,2.923687,3.374642,-3.645350,8.130461,-5.512188,2.517825,4.195698,2.307520,-4.277444,7.038489,-0.491242,-8.400789,1.206073,6.721565,2.357599,4.232305,4.510111,5.572033,4.952984,-7.196901,-3.609409,-5.524228,2.905586,-0.552513,9.820207,8.127155,-8.738275,1.553317,3.778083,-3.602748,-9.648528,6.858570,-9.388502,9.760621,1.612084,4.245422,-2.788775,-3.691934,2.630126,7.266519,-7.111504,3.226960,3.672819,-2.910258,2.324491,3.402886,9.023933,-0.677768,9.620802,9.846320,1.808870,-3.227267,-9.824209,2.573900,9.688062,-0.071443,9.849421,-1.280766,5.627447,4.870444,7.029283,-2.338694,-0.643251,-5.904541,0.606359,-2.839713,8.777060,-3.147989,7.497234,8.362902,-8.049230,9.438021,6.770908,-5.680413,-5.978320,-4.099409,-2.087621,-5.292165,1.497450,-7.800927,4.502950,4.888432,-5.835090,-3.234247,5.900413,-3.937165,-5.551730,3.339833,-6.014744,-2.810058,7.685454,-0.903625,6.272856,-9.480146,-4.030962,7.548873,-5.950118,-8.461694,-4.712767,-2.324093,-9.273115,-4.365680,-7.725784,0.146014,4.411998,-6.970215,-3.037458,5.921738,9.438284,-6.506394,-2.760523,5.836134,-6.965445,7.871347,8.221334,-4.579177,5.872642,-5.330861,-1.018514,-7.370357,6.178080,-7.931331,9.854754,6.698522,-4.827079,-8.140639,-3.573560,4.228331,9.970559,9.459084,-9.850722,5.217724,-5.291702,-0.462798,8.728521,2.707289,4.496522,-4.732226,5.184116,3.729072,2.039983,-2.871246,-6.696393,-8.342991,6.544745,-6.246771,0.041389,1.269899,3.301010,-5.886469,-6.495928,0.439531,3.294143,-6.622943,8.029799,-6.183123,-5.245148,-0.615823,-4.145289,-2.885889,6.681360,-3.858074,-6.013993,-6.350200,8.751066,-8.451844,-4.231377,7.443800,1.217671,-0.058826,4.925168,1.224185,-6.508726,-4.774178,-5.668639,-8.873946,6.491067,-4.748643,-8.017350,6.717092,4.448793,8.625062,5.627203,-0.618759,-8.090998,-3.958788,0.091824,8.002315,5.065586,9.661991,8.364868,0.184066,-1.374413,-6.329690,1.855136,-0.819254,-6.604373,-8.667233,-6.701941,-1.811849,-5.955243,-8.193661,3.273664,3.911528,-0.069523,-8.488895,-3.232261,-1.145734,-9.583440,6.858326,0.928649,-4.167514,8.472028,2.137471,4.363832,-5.954530,-1.663838,-7.602412,1.875544,6.511401,-7.338434,3.675529,4.438855,4.813887,-1.669987,7.972849,-8.127104,3.370708,7.570513,4.614093,2.812861,-9.653954,-6.788524,6.768013,-3.496960,3.138597,-5.193070,5.422040,1.326933,8.903545,2.391538,5.244648,3.065575,2.883810,0.589914,1.513949,-1.725254,2.950911,-5.559182,-2.206099,2.698524,8.078738,-2.887035,2.289546,7.698352,-7.913694,-4.493052,-9.864093,-1.734892,-8.907123,-2.503188,-6.586083,0.789683,-3.176813,-9.526217,-1.660275,-8.049866,-5.244707,-3.864412,-7.528277,-5.876313,-8.011114,-8.424055,-0.713141,-7.242491,4.129749,1.496148,6.820717,2.221941,-2.291989,2.823980,3.082170,1.732583,-8.016235,2.029753,3.711970,7.681020,-2.962186,7.325853,8.550494,9.634155,-3.875971,-5.416025,2.592326,5.161392,-9.224892,-1.702911,0.488999,0.106314,5.023130,-7.662398,-0.839098,-3.991685,-3.722277,-9.810470,2.029797,-6.684671,-8.375779,-0.982496,-8.433909,1.157847,-7.116534,-1.021410,6.702656,3.704110,-3.875938,-9.496374,-9.000868,-5.959516,-4.428048,-7.545522,-5.893120,0.742609,2.372332,5.759810,-0.279095,-8.765735,-0.305261,-7.967661,-5.644085,5.131297,2.159030,-1.429414,-7.403365,-0.851697,9.400794,1.626458,3.264840,-3.108008,-3.993095,-8.267576,-3.648746,2.533573,6.325524,2.221228,4.901007,2.135520,-1.249125,-6.652497,-4.342713,8.852645,5.890578,3.827624,9.096078,-6.164983,7.966085,-4.599043,8.275763,1.903560,4.169268,4.965287,9.153397,-5.904452,-6.771819,-1.031625,8.518897,-0.649920,-1.015266,-7.908089,5.436182,4.389808,8.358521,-6.215496,4.861405,-1.505765,-9.380293,-8.662587,-8.517481,5.318581,7.736740,5.835199,9.609186,-7.918203,9.432092,-5.119373,9.793705,-3.888289,3.022865,5.933250,-1.380077,-3.159681,1.968496,-3.746044,4.368693,-3.597080,1.859842,9.339326,8.683801,9.470732,-3.833530,8.831218,4.809898,6.863189,4.509934,-2.299130,-9.116015,-7.306571,7.305297,3.218712,9.178648,9.907267,1.449025,6.927197,-1.066825,8.783365,-2.156760,-2.300147,-9.070788,2.246302,1.702941,8.798702,-1.337924,0.059910,-1.050672,-0.933129,0.675928,6.686061,-5.079741,6.286923,0.177459,-2.558038,-1.574908,8.159272,-5.394454,-0.353220,-7.814959,0.870089,6.650250,-3.518875,1.651191,2.774391,7.936892,4.313507,-4.015717,-3.799909,8.660907,0.682315,-2.086159,2.341772,7.540588,-2.889032,0.118351,-1.778775,-7.729737,3.086996,1.162299,-4.446497,4.321868,6.264583,7.587442,3.551663,-7.626283,-3.617028,7.882830,5.758117,3.678420,2.894882,5.867495,9.003282,-2.241912,0.424835,-4.052779,-7.888496,5.276628,6.409752,-2.012603,1.801483,0.253735,3.182477,6.971273,-0.221365,-5.264100,-7.949420,6.077433,8.736481,-1.051136,-9.020839,2.762328,-5.624892,-8.991989,9.472562,-2.842235,8.351482,-5.748820,-9.750403,6.585429,-3.739722,-1.379548,5.234239,-7.630356,-9.170679,9.619304,8.687848,7.298406,0.697605,1.536037,-8.871344,3.745112,-4.912279,-9.581641,-6.569974,4.550059,5.614286,7.354291,6.557898,-6.230593,-3.852020,-1.672379,-6.923242,1.307884,8.178250,-6.048842,-6.610565,5.394551,6.145753,2.709217,9.629430,-3.025460,4.941029,7.049467,2.284314,-1.373644,3.438512,-8.843107,-4.369971,5.763594,-2.762997,-6.591775,-3.392989,0.840618,3.594517,9.199178,5.326730,-1.452743,8.460444,-8.468316,0.024114,-8.664816,6.616196,-6.394272,-2.141752,-5.669130,0.148610,7.005162,-4.162439,1.623980,2.816924,9.628343,-9.955137,9.709204,4.800172,-8.079281,-6.060010,-0.719657,8.446439,-1.696849,-2.152682,4.406309,7.204538,1.634366,3.556330,4.052799,8.138731,-4.555801,-2.008726,7.212587,0.017840,-2.590764,-5.834366,4.887824,5.701343,4.194629,-0.423680,1.453686,8.832585,-8.766566,8.062440,-7.375654,-4.360272,-3.033448,-1.991522,-3.114791,-5.763056,-1.451421,8.663400,-6.156979,4.448328,8.280501,-8.501675,1.170135,7.088917,3.750032,4.046492,-6.050266,-1.353928,9.148181,-8.154519,-5.818894,-9.856577,-4.847737,-1.083137,1.113837,-6.606332,-7.857059,1.196384,8.262934,2.955892,-2.732709,-0.502253,-4.426170,6.790532,1.223944,0.834253,-5.852428,-3.406981,-7.880907,-8.322214,-3.080357,-7.712166,5.257424,-7.219956,-5.737502,2.273207,6.394213,8.913937,-7.994176,3.831590,3.031253,2.774777,-0.246723,-5.986558,2.635701,-4.456391,4.579034,-9.556020,0.287320,1.594383,-9.897888,-0.873732,-2.989598,9.961544,-2.463211,1.773487,6.424620,-7.147784,-7.998078,-0.136846,8.901084,-9.615178,7.688133,7.278018,3.623204,2.820235,-4.140271,8.667414,9.226523,2.559168,4.421520,1.554340,-3.907788,8.821618,-9.824491,-1.611375,-2.309508,6.970835,6.914675,-0.097383,3.380464,-3.010436,4.874984,2.632354,-3.067146,7.535070,1.699724,-8.078275,-3.528230,-7.037075,-7.751201,-0.023106,2.442357,-1.847788,-6.231542,-5.202532,-2.610824,8.074157,-3.103232,9.402840,-2.423752,4.332900,1.213201,4.578848,5.675027,2.248246,-0.232132,-4.699282,5.146542,-8.344253,-9.547091,2.840898,1.105927,-2.935280,6.816832,-0.118434,-4.789921,2.258248,8.258259,4.929209,5.975782,-2.972709,-5.769760,6.270600,-9.669624,-6.222575,-8.353030,5.647542,-3.858994,-0.995374,0.453340,3.012191,-8.451469,-7.187341,8.334963,-1.629212,-4.854077,-2.061149,1.238162,-8.517044,7.796427,-5.799583,-1.974412,5.269454,-0.653066,4.466327,-2.777592,1.893122,6.263131,4.499825,-1.811343,6.983036,-9.019337,7.391352,-8.087151,7.922077,-4.633982,3.519948,-0.657179,-5.518046,-3.489183,-6.858651,-1.736966,8.740256,8.689839,9.473790,-7.452173,-2.966047,-9.811270,9.741896,1.161792,4.545569,-5.478185,7.848623,5.251897,6.791585,4.248238,6.542150,-2.773705,8.718848,3.154553,1.744415,-6.100175,-8.437507,8.362847,1.270582,9.543470,2.673066,3.952159,-7.573760,-3.403625,8.813708,9.287618,3.094576,2.173115,-6.461676,2.710622,9.138667,1.935916,3.818365,3.584197,-4.796985,8.476934,-2.448228,-2.815583,9.599333,7.645208,-3.730479,0.597465,-3.981865,-8.171995,5.051629,-2.563670,9.305190,3.717910,-0.749305,8.540723,2.137646,-9.755127,-1.934677,-1.503163,4.554597,-2.089569,-5.378305,-7.584165,-5.904711,6.421956,-3.964476,-3.362906,-5.894135,-8.583973,-6.841972,2.341518,-1.228608,-5.028806,-5.299333,9.318440,-8.478881,4.290802,0.251839,7.597796,-2.234344,-7.379341,-4.082552,5.179685,-6.116700,6.071424,2.128797,-3.756454,3.170986,-0.509580,7.485272,2.866720,2.554209,-6.561715,-2.263953,1.611626,0.231795,-1.132444,-1.085660,-8.376028,6.348568,-9.891725,-8.501331,5.558450,0.486377,5.879580,0.423144,-9.813887,9.171694,3.763798,-4.283117,-5.245757,-3.747532,2.116217,-6.035751,2.980707,2.731044,4.981224,-1.859398,4.994281,-1.743571,-7.359517,-3.536690,3.541368,-8.260296,1.200728,5.606646,-5.405980,-3.400516,-2.211105,0.790283,3.947122,9.269088,-6.113588,4.613419,3.063554,-9.109444,2.789090,-7.019334,-4.780965,7.841914,4.672944,0.104517,5.379099,2.622212,2.022545,1.771092,-0.621617,4.999442,5.576239,-4.776849,-1.320350,-7.983434,9.668813,-8.213361,9.427937,-9.266391,-9.642136,-3.634518,3.851438,-5.326102,-5.568583,5.765097,-8.979150,4.669803,1.687366,6.483872,-2.946735,1.934792,-7.454372,8.131828,-0.206796,3.922043,-4.618907,-0.931088,1.868941,-2.733632,-1.158533,-7.348262,-4.971360,-1.435427,-2.358507,1.235263,-0.631545,-1.701899,7.355716,-6.719724,7.864398,-7.458338,-6.072278,-6.706436,0.983295,2.224627,-2.506755,5.886673,-7.930831,8.888510,8.429112,5.389815,2.940956,-3.669562,-6.897189,-0.432759,-0.422194,5.583095,2.716157,1.104996,-3.334624,7.952215,-0.477267,5.608658,-1.931323,3.140237,2.550320,8.676749,8.804164,8.717928,1.138674,4.002122,6.254139,-3.864106,-5.629303,6.303453,-1.672389,-4.394333,5.665028,7.337679,-7.166376,5.024948,-5.393704,-3.586477,6.808696,2.739214,-5.657397,-7.763308,7.675244,-4.083097,-3.078821,-0.091542,-4.698494,-5.117879,-5.354741,-6.174700,-2.924768,-6.849970,-8.441096,-7.671352,6.158999,-9.158722,2.328423,4.572871,8.270542,-7.710488,1.601312,7.513438,4.715632,-5.310368,5.864215,-1.329775,-2.391150,-9.761948,-7.101482,-9.284670,-5.773815,2.357751,-5.465157,-7.070727,-5.656027,2.353350,3.794501,-4.101178,-9.461688,-8.611226,6.880192,-5.652264,-9.402656,-2.045993,2.737043,-3.380884,-3.788732,1.052413,-7.738717,-0.668220,6.814826,-3.658497,-1.243323,4.320642,7.989545,7.070424,0.489118,9.592482,-0.282832,-3.486407,-1.745595,-3.032955,-0.195484,5.859629,1.739124,6.584905,-4.913223,-2.596284,-8.259846,7.826321,2.313962,-5.630828,-7.988638,-6.291141,-3.321901,2.312529,4.704943,5.949488,1.921050,-8.389496,-1.239007,6.976184,-8.720394,-8.178597,-8.776972,-0.297884,-4.269838,-1.722077,-2.706622,1.184967,5.952769,-3.090404,-5.262576,-9.382666,-0.433177,4.984639,-8.311333,9.330177,-0.417578,-4.041278,-8.864469,-6.756684,2.701028,3.400723,-4.406106,-3.893355,0.440933,-7.623760,-2.163394,-0.220710,-5.691169,-2.220365,-5.700711,5.426829,9.980876,1.028392,-5.207932,-3.894247,-2.317180,-0.372025,-0.290052,-0.765349,8.088955,-3.719866,9.731316,-1.744397,-8.756277,5.354494,7.262173,2.231674,-8.086525,-5.185857,-8.696997,-8.845629,-3.129258,2.718834,-8.752814,5.853633,9.123127,1.135760,-9.051343,-9.383262,-1.241167,6.523734,-5.838728,-4.410299,-6.455840,9.308743,0.574523,2.452815,-5.151934,7.456328,6.767524,-5.978837,-7.137294,7.744460,-5.084968,2.893429,3.765070,-0.079298,2.305431,-5.206404,7.863820,-3.846420,-0.344502,-3.541264,9.173738,6.847037,-3.240441,1.272708,9.291243,5.803730,-6.074557,0.740913,-5.262226,2.256389,-7.907666,5.652484,9.829520,5.586602,8.584556,8.343495,0.381040,0.624840,-9.690015,-1.751772,-7.111474,7.931108,-9.233699,-6.590381,-3.638213,-1.276255,-8.524170,-0.038098,7.641415,4.854213,-6.474016,0.340448,5.894468,0.085478,4.991751,8.808913,-7.983920,-4.541995,2.021214,2.602095,-0.779194,2.951041,0.499361,1.203942,8.843617,9.265990,7.413098,7.499152,-5.897185,-0.308871,-5.883435,3.632125,7.612023,4.337293,-5.139914,-2.592530,-3.178917,1.343500,-0.396735,-2.030198,7.380381,4.684794,4.084294,6.845311,6.895451,4.882156,-3.223590,-3.097573,1.659374,-6.332165,-1.965909,-2.883994,-0.331364,-3.957147,-2.326829,-7.392864,9.235384,-7.532780,-6.455641,-5.492021,-5.434329,6.606820,-1.068382,-1.715712,2.249254,8.101642,0.333042,-8.831840,-9.064666,-8.610369,-5.666343,-3.136759,-7.685683,-4.502433,8.656802,0.512372,-5.404473,-2.582183,-6.249796,-3.049462,9.232867,-9.335848,-1.993313,3.551573,0.398413,2.582904,-2.734811,2.585649,6.991742,-5.638359,-1.618294,-9.816545,-3.780790,6.192578,5.832920,1.829194,-2.831495,2.462722,-3.231432,7.973682,0.747637,2.809906,-4.655668,-8.343655,-3.937497,-5.960648,-8.364795,-9.835665,3.769534,-2.509884,2.193235,-2.272155,3.597894,-7.786365,-9.219701,6.369346,7.251093,7.558598,-2.647139,2.954224,-6.517093,1.293278,-2.987827,-6.785150,-8.371703,-7.617197,-5.630973,6.429966,-1.715549,6.001567,1.425649,-9.292361,-8.783433,-7.975282,-0.445711,5.613849,-6.211782,3.993069,-5.016534,-5.085236,-1.168200,4.674111,5.293166,-7.434409,-9.265184,-1.700911,3.381696,-3.663922,1.814916,-6.860650,-2.543634,-9.660926,-5.024729,3.524317,4.047124,1.178969,-6.377666,-7.125720,1.383327,-2.537461,0.014260,6.829222,5.959715,-9.260408,6.518041,-7.361825,-2.110138,-0.021942,2.295726,-4.991501,8.935860,-8.210238,-4.587853,-7.900650,-6.520627,6.145321,4.308990,-6.161496,9.323943,2.669756,2.641719,-3.470095,9.658545,-3.444393,4.274813,1.822554,5.724588,-8.019429,1.813016,4.177950,3.674836,0.099248,-6.787238,-5.033459,-8.730799,-3.261413,8.538813,0.364026,9.893745,5.562930,-3.699901,0.472374,2.482542,4.548086,-6.779820,-3.934033,-1.219323,7.337392,4.045113,-2.716523,9.089148,4.879481,8.566983,4.567369,-4.100242,8.388318,-1.655412,-6.960456,9.895058,-4.818934,6.747913,7.341929,-2.731555,-3.405336,-9.489865,9.306455,6.058333,9.146802,1.403182,4.116731,1.483265,5.062504,4.112046,3.283677,9.975838,4.766729,-2.121144,-1.665167,9.947179,-2.375260,4.004788,1.537767,-1.683426,-3.733719,-6.684829,-7.902679,-3.816759,6.140574,5.702519,-1.674802,-3.691291,8.328730,4.614797,1.775274,-0.589160,-3.417759,9.628320,-6.710976,-6.595894,6.392392,-3.157698,1.917676,2.049590,7.584970,1.176446,-9.478679,0.807285,7.033402,7.530462,9.236810,-1.101700,-0.824558,8.861309,-2.685861,3.187096,-9.038213,8.501306,-7.557091,-1.243002,7.789981,-5.466408,5.524198,-0.182522,-5.554662,8.414775,4.147161,1.347702,8.917740,7.755341,5.419855,-1.715174,-6.126345,9.235445,-9.176312,-2.113208,7.720616,7.682420,-8.982888,8.039389,-8.513799,-0.816961,6.934489,0.506998,3.395367,-0.777428,1.783815,-3.517368,-3.133803,-7.600500,-1.392218,-0.218996,0.333860,-3.141066,4.432481,-9.054734,2.458078,-5.378069,5.836875,6.554695,-0.327400,4.227142,-5.140943,7.625054,2.142831,-2.885310,0.443993,0.777143,-1.773580,-6.231048,-3.773697,2.279798,-3.103009,-0.348844,6.398750,-6.777228,2.781959,9.821155,3.126892,-1.832049,6.012693,-1.531530,3.488671,6.929820,-7.536827,-4.726257,4.120883,-3.137660,8.620857,6.369200,-8.698832,-9.566882,1.875672,-3.897115,-1.807463,4.073395,3.564268,-3.423315,9.807844,-6.352738,-4.373808,-5.115442,2.329297,5.252137,5.058510,9.179109,-7.698523,1.012540,-9.135874,-2.260638,-6.616718,-9.955417,-2.601897,6.107811,-2.782623,4.609201,-6.261526,-3.717281,-9.241953,-5.109464,-0.770003,2.180419,8.203565,-1.354444,-5.328605,-0.032419,-6.394119,-1.724538,-2.755367,1.283838,-1.226693,5.131518,-4.157680,-3.519885,8.362377,9.340016,-5.981639,-5.045029,7.518508,4.291408,7.797037,1.717361,-2.887297,-0.086998,4.129793,-2.754383,-5.404011,-1.997957,1.080928,0.212824,8.547196,7.843321,-7.782588,8.667794,-8.359717,3.613980,-2.718245,-4.738003,8.373177,7.213855,-4.349703,-2.447557,8.238076,5.642083,8.766218,8.242645,6.441227,-3.477712,-0.088124,-6.722720,8.728535,6.277325,-5.886345,-8.550425,-3.537661,-6.601063,2.804450,-5.242639,2.656615,-2.945728,-8.567976,0.742803,-1.440517,0.700006,8.490184,3.468760,-6.603806,-2.935458,-3.408262,-2.272637,6.221934,7.663460,9.065479,3.203200,-7.081130,7.010516,-7.622186,-2.082626,-9.115356,7.620714,9.220590,-7.725757,1.483772,-9.164676,-2.898365,3.776853,9.324938,-8.270419,-5.356165,9.203749,5.265852,9.720394,6.285342,-4.636030,-8.978422,1.080846,4.266625,0.398521,3.002193,-9.407458,-1.435516,3.920885,9.960362,-3.189026,6.512033,-1.723125,-6.699218,-6.431387,3.263923,2.253453,4.213294,-4.258342,7.802930,3.582887,9.524979,-9.806589,9.949465,-9.651501,0.119199,-6.724689,-0.786741,-5.021258,5.761023,5.044577,3.308644,-7.917298,2.390122,6.347465,-0.497957,4.345681,7.177686,7.203754,3.709069,3.034145,-9.959773,-1.015626,-8.347000,7.841784,7.366197,-1.862595,6.453029,6.554129,5.933969,9.131305,-3.114005,-5.092102,-7.848313,-2.542959,0.627487,9.425459,-3.251148,-8.644081,-5.298967,-2.280049,-9.741689,-2.769120,2.401735,4.878616,2.078956,-9.827060,5.422200,4.090632,-6.236919,-4.500840,3.680416,8.743164,4.893374,-7.922517,1.261364,8.028647,6.775179,6.724804,-2.322631,-1.072353,-6.819919,5.960886,9.814105,9.600118,-8.168228,3.472687,8.841618,6.278206,-4.992485,-1.223992,-4.567643,-1.144032,-8.059131,-0.321487,-4.640050,-6.299560,3.723957,-5.639469,-5.916364,-4.175552,7.561263,-5.569602,-9.734213,9.389783,7.797888,-0.184156,-2.159048,2.896571,6.998868,5.015469,-4.735444,-9.767410,8.473214,-5.733216,-7.532745,-9.551350,-1.571512,9.291370,8.220133,-2.370555,-2.482348,-0.545603,8.186789,8.900283,-6.074510,-4.032790,-1.126382,-7.754962,5.011753,0.371768,-9.597460,-5.287273,-3.774473,6.965441,-9.054819,-6.753221,0.535896,3.275987,1.476982,3.390218,2.323746,-9.000598,-7.726168,7.730541,-6.838150,0.454068,6.175491,9.915954,1.586961,8.942908,-7.014693,8.582772,-1.055292,-8.641286,2.063743,6.993363,4.953257,3.751729,1.018188,-6.204045,3.916938,-6.958902,0.473958,4.147731,-9.825274,-5.674894,-4.306399,-3.391256,8.556239,-4.795964,-7.915550,4.245195,-9.648962,7.266206,-6.862019,0.431094,-1.491032,-1.587241,4.011082,-7.407871,-2.351911,3.557808,-5.470056,1.648944,-3.994598,8.685098,-0.632921,2.701609,7.471638,-7.445501,-7.448131,4.648100,0.063859,-0.899939,8.184214,-1.612184,0.788033,4.524883,-9.524938,4.839191,-1.891934,1.048690,-5.584097,5.331522,-1.236054,5.465419,9.435981,9.055269,-5.025227,-0.920592,-8.109124,4.295939,-8.824980,-9.189611,7.212401,9.040609,-1.826223,-9.182091,2.280095,-8.238562,3.992553,-6.196054,-4.695662,8.134087,9.789867,3.572372,6.977545,-4.192976,4.794609,-6.580616,-6.618054,-4.084126,-0.073839,5.700562,4.998891,5.686321,2.281239,1.741741,1.134971,-3.735655,-4.281027,4.637895,-6.658834,1.821966,-5.422706,1.257906,-2.418279,8.519879,-4.477086,-6.772144,-9.845160,6.631096,-8.987970,1.587285,2.151107,-7.166110,3.592284,1.968266,1.674131,6.161483,-8.121462,9.645766,3.316985,-6.883695,9.976587,3.842133,-9.138059,-6.587323,8.233930,8.447630,4.864903,2.794102,2.421257,4.599341,6.822493,-7.882561,9.697350,-1.399893,-4.822265,-1.504082,-1.127086,7.763951,-1.082071,1.425174,8.732467,3.414984,-7.977036,-7.539473,0.497510,8.279769,-0.533311,8.570986,3.666136,-1.723231,-0.033810,2.140707,-0.169501,5.944851,-7.057129,4.804709,9.798590,5.554789,2.227787,3.028305,0.767709,7.710573,-1.005086,6.036381,4.899616,5.600317,-6.977318,-5.283512,3.006422,-6.335438,-9.085781,-3.059113,-9.563481,3.635705,2.587299,-7.483059,3.544193,-6.655673,-7.655557,4.793761,-9.883242,5.722531,-5.114519,3.827376,-4.470655,6.274835,4.646080,-9.677377,7.202456,5.503839,0.647317,9.100123,-3.075605,-0.805832,2.862733,-2.212729,7.839889,0.077963,4.764281,6.780184,-7.227028,-6.064875,-8.771039,8.495754,-4.286055,-4.699798,-5.567854,7.816699,-9.967482,-7.857856,0.591171,2.683922,-6.276772,-0.317333,4.410735,4.728910,9.078808,-1.564998,0.899877,3.299219,-1.347357,4.175344,-9.228575,5.727241,-5.535969,-1.541478,-7.584396,-1.428679,-1.855041,-7.867088,3.552851,0.824317,3.148873,-9.335700,3.408001,5.197592,-2.126885,4.154128,8.492914,6.672675,-8.743147,5.409647,6.747268,7.172602,3.187592,7.365254,-9.284698,4.440498,-3.305150,-7.385204,4.906177,-5.152830,-4.084087,-5.840413,-4.735535,0.897471,-6.087852,-1.326132,7.303855,2.312617,5.098927,9.636144,-2.678445,-3.032964,-0.256049,-0.817351,-8.556261,4.011557,-0.300442,-6.239431,8.037974,6.417876,-4.898857,0.135342,-1.339338,-8.243717,-0.782654,5.921907,-3.141698,3.215604,-1.024619,7.883246,-7.629546,3.654798,-9.556342,-7.431032,9.594322,9.778814,2.094747,8.812720,-8.714814,1.851588,5.538062,6.574218,-0.458867,4.487783,-7.273722,9.137880,9.080951,-9.183700,-0.449604,-5.859929,-2.669673,-5.264060,-8.257932,5.000433,7.007255,7.434659,6.962678,5.908274,-3.837214,-6.512567,6.138930,4.092946,-2.984412,-8.195334,-4.176230,8.661629,5.347596,-4.364796,5.105727,-9.305095,3.864917,-5.433497,-9.833408,-0.071010,-5.493381,2.534279,0.386051,-6.519821,-0.672797,-4.436002,5.588119,-8.397776,3.933244,1.966941,-7.597107,-6.991555,3.331079,4.956558,-0.029232,-3.764932,-6.419236,-9.102547,2.478621,-0.379327,8.506468,-7.733374,-9.018328,8.096533,-0.868901,-6.226515,-8.674499,-5.410290,1.123862,2.418121,9.626845,-5.930804,-3.270347,8.929895,-3.462220,0.546311,4.677393,-9.679452,-5.038663,0.291773,-2.121091,-0.368673,-4.849737,1.820879,-7.450594,5.817033,-0.535980,7.534628,-1.389960,-9.224047,-2.994291,5.259079,-8.375386,2.229888,8.314699,9.490936,8.069696,5.535858,-9.123168,2.256452,7.722828,-3.923868,7.353614,-6.588358,8.395089,-9.317199,1.747405,5.047870,8.968571,-2.630296,7.934716,7.684506,9.826708,0.531608,7.252682,-9.009409,2.904751,-6.495093,7.441350,6.216412,-0.958544,-9.188162,6.352612,1.429312,4.712122,8.322888,9.335831,1.587257,7.498494,-0.599825,7.698144,-4.580792,3.642593,4.637272,9.281059,7.001805,-2.130900,1.039400,3.928600,8.560980,5.077499,-6.069686,2.848275,0.622062,-2.919530,9.748481,3.885158,-0.715079,-8.291786,3.214734,-4.301961,6.103734,-0.550042,-2.455140,3.544981,-4.596713,5.079269,1.746129,-5.319891,2.603178,-2.216867,1.826704,-3.282118,3.326064,3.417856,2.049912,9.832550,6.283572,8.876538,-5.809940,5.419748,7.645643,9.291860,1.447275,-5.707596,-1.196975,3.180728,-4.764833,0.197536,-9.561918,-3.601184,2.611019,2.932198,0.866275,-0.593124,0.926702,4.368458,-2.029458,-5.442119,-2.304721,2.741955,1.268404,-9.478831,-1.306057,2.355008,6.970460,-2.551679,-9.525896,1.605129,9.614869,0.635137,6.125411,5.901619,4.850675,2.699506,-6.711404,-1.214817,4.071828,2.794859,-9.791880,-9.114065,-9.553476,-9.460939,-4.733797,6.512501,-7.880409,5.237721,8.624249,4.620316,-7.798845,-7.510273,7.213290,-0.855782,-4.195944,1.995069,3.390309,-0.862038,-5.131056,-4.849383,-1.920114,-8.542013,-4.817124,-8.647302,0.932673,-7.923675,-5.266407,-1.936127,7.648418,-0.296634,7.084948,-3.123199,4.109882,-1.738643,-8.365211,0.323914,-6.037031,9.959387,6.601471,-7.070990,7.135001,-9.987845,-0.592265,-1.477010,6.315554,5.887590,-1.741228,5.999016,-1.660117,1.409182,-0.691941,5.328312,6.895074,4.918892,-5.605097,4.999166,-9.191603,0.364027,-5.958221,-4.639936,-4.297349,-7.826766,-0.713385,-9.257692,-8.862565,5.427035,-8.898647,2.681598,2.759903,-6.630551,3.742699,4.126390,0.080918,-9.073380,-7.046418,-0.560638,-8.332377,4.539323,-1.399610,3.080754,-5.369416,-9.674512,3.405982,-4.037873,-3.525904,-0.495453,-7.284808,-6.970634,-7.235110,3.464659,8.363153,2.785618,8.386048,-9.887921,-6.814629,-7.988097,-3.513133,-1.797791,-9.011028,-5.387766,0.575540,-2.961799,1.160674,-4.108918,2.361760,-9.826238,8.492511,-2.968491,2.538166,-8.447187,-5.501724,-9.646000,6.607080,-0.427530,3.288201,8.529721,2.050949,-5.902110,-4.887968,-2.383057,-8.740676,-6.291262,-1.569085,-4.496326,-0.697724,-3.626382,1.378713,8.395097,3.573957,7.255256,9.399674,9.947584,-1.592697,7.787598,-5.881123,5.277009,-4.450124,-8.061417,-1.847041,-4.968876,-4.049406,-5.232417,3.625903,-1.506678,9.986576,1.857035,-2.950193,-5.331692,-8.591413,2.257847,9.915581,-5.675922,2.835810,2.344321,7.686473,-8.705734,-1.126727,-1.315677,-1.626000,-6.471264,-6.608325,-9.105505,-3.191082,2.562894,-9.303351,-9.659264,5.747336,-0.904899,4.721226,4.967187,3.392648,-1.556067,-5.502717,-7.474559,-0.926793,-2.252615,-0.305705,9.990266,6.800670,-6.469327,-0.072616,-3.989103,1.251571,-0.467747,-6.764872,8.170665,4.763584,5.950333,-5.174845,-4.794957,-5.454784,5.853279,-9.303957,5.230647,-7.769883,8.181428,-3.963883,-1.148216,-3.314680,4.039757,-7.853482,6.819151,-6.218872,4.758904,-0.571281,2.747328,8.000372,5.204173,-8.806878,0.253092,-8.701485,2.001744,-6.786209,-2.033055,-4.715004,6.991919,0.698388,-2.490090,1.914702,-9.198430,7.713118,-4.227814,4.525853,-1.671921,7.230561,-6.172052,0.765566,-6.902578,7.678191,-6.438279,-2.581732,3.590841,-6.922746,-2.395713,2.607931,8.080035,-3.064975,7.847685,-6.922978,7.988809,-9.780360,0.425462,4.219586,3.974744,6.273056,-4.499452,-7.025403,2.640574,7.960873,-9.976692,-5.115069,-0.991149,-6.312042,-1.367815,8.325251,-3.859327,6.911180,3.132502,2.942188,-4.986930,8.025817], dtype = "float64")#candidate|9015|(2925,)|const|float64
call_9013 = relay.TupleGetItem(func_5743_call(relay.reshape(const_9014.astype('float64'), [5, 9, 9]), relay.reshape(const_9015.astype('float64'), [2925,]), relay.reshape(const_8995.astype('float64'), [450,]), ), 1)
call_9016 = relay.TupleGetItem(func_5748_call(relay.reshape(const_9014.astype('float64'), [5, 9, 9]), relay.reshape(const_9015.astype('float64'), [2925,]), relay.reshape(const_8995.astype('float64'), [450,]), ), 1)
bop_9038 = relay.divide(const_8995.astype('float32'), relay.reshape(call_9013.astype('float32'), relay.shape_of(const_8995))) # shape=(450,)
bop_9041 = relay.divide(const_8995.astype('float32'), relay.reshape(call_9016.astype('float32'), relay.shape_of(const_8995))) # shape=(450,)
func_956_call = mod.get_global_var('func_956')
func_962_call = mutated_mod.get_global_var('func_962')
const_9044 = relay.const(False, dtype = "bool")#candidate|9044|()|const|bool
const_9045 = relay.const([[True,True,False,True,True,True,True,True,False,False,True,False,True,False,False,True,True,False,False,False,False,True,True,True,False,True,True,False,True,True,True,False,False,False,False,True,True,True,False,True,True,False,False,True,False,False,False,False,False,False,False,False,True,True,True,True,False,True,True,True,False,False,False,False,False,False,True,True,True,False,True,False,False,True,True,False,True,True,False,True,True,True,False,False,False,True,True,True,False,False,False,False,True,False,False,True,False,False,True,True],[False,False,False,False,True,True,False,False,True,True,True,False,False,True,True,False,True,False,True,True,True,False,False,False,False,False,True,True,False,False,False,False,False,False,False,True,False,True,True,True,False,True,True,False,False,False,False,True,True,False,True,False,False,True,False,False,True,True,True,False,False,False,False,False,False,True,False,False,False,True,True,False,False,True,False,True,True,False,False,False,False,True,False,False,False,False,True,False,False,False,False,False,False,False,False,True,True,False,True,True],[False,True,True,False,False,True,True,True,False,False,False,False,True,False,True,False,True,False,False,True,False,False,True,True,False,True,False,False,False,True,True,False,False,True,False,False,False,False,False,False,False,False,True,True,False,False,True,True,False,True,False,False,True,True,True,False,True,True,False,True,True,True,True,True,False,True,False,True,True,False,True,True,False,False,True,False,False,False,False,False,False,False,True,True,False,False,True,True,False,True,False,True,True,True,False,True,False,False,False,False],[False,False,True,False,False,False,True,True,True,True,True,True,True,False,False,True,True,False,False,True,True,False,False,False,True,False,False,False,True,False,False,True,False,True,False,True,False,True,False,True,False,True,False,True,False,False,True,True,False,True,False,False,False,False,False,True,False,False,True,True,True,True,True,True,True,True,False,True,False,False,False,False,False,False,True,False,False,False,True,True,False,True,True,False,True,True,True,True,False,True,True,True,False,False,False,True,True,True,False,True],[True,False,True,True,False,False,True,True,True,False,False,True,True,True,True,False,False,False,False,False,True,True,True,False,True,False,True,False,True,False,True,False,False,False,False,True,False,True,False,True,False,False,False,True,True,True,False,True,False,False,False,True,True,True,True,False,True,True,False,False,True,True,True,True,True,True,False,True,False,False,True,False,False,True,False,True,True,False,True,True,False,True,False,True,False,False,True,False,True,True,False,False,False,True,True,True,False,False,False,True],[False,True,True,True,True,True,False,False,True,True,True,True,False,True,False,True,True,True,True,False,False,True,False,False,True,False,True,True,False,False,False,False,True,False,True,False,True,False,False,True,True,True,False,False,True,True,True,False,False,False,True,True,True,True,True,False,True,True,False,True,True,False,False,False,False,True,True,False,True,True,True,True,True,True,True,False,False,False,False,True,False,True,False,True,True,True,False,False,False,False,False,True,False,False,False,True,True,True,True,True],[False,False,False,True,True,True,True,False,True,False,True,True,True,True,False,False,False,False,True,True,False,True,False,True,True,False,False,False,True,True,True,False,True,True,True,False,False,True,False,True,True,True,False,False,False,True,True,True,True,False,False,False,True,False,True,False,True,True,False,False,False,False,False,True,True,False,True,False,True,False,True,False,True,False,False,False,True,True,True,False,True,True,False,False,True,True,False,False,False,True,True,False,True,True,True,False,True,True,False,False],[True,False,False,False,False,True,False,True,False,True,True,False,False,False,False,False,True,True,False,False,False,True,False,True,True,False,True,False,True,False,True,False,False,True,False,False,False,True,True,True,False,False,True,True,False,True,True,False,False,True,False,False,True,False,True,False,False,True,False,True,True,True,True,True,True,False,True,True,True,False,False,True,False,True,False,True,True,True,True,True,True,True,False,False,True,True,False,False,False,False,True,True,False,True,False,True,True,True,False,False],[True,True,True,False,False,False,True,True,True,False,True,False,True,True,False,False,False,False,False,True,True,False,False,True,True,True,False,False,False,False,False,False,True,True,False,False,True,True,True,True,True,False,True,False,True,False,False,False,False,True,True,True,True,True,False,False,False,False,False,True,True,False,True,False,True,True,False,True,False,False,False,True,False,True,True,False,True,True,False,False,False,True,True,True,False,False,True,True,False,True,False,True,True,True,False,True,False,False,False,False],[False,False,True,True,True,False,True,True,True,True,True,False,False,False,True,False,False,True,True,True,False,True,False,False,False,False,True,False,True,True,False,True,True,True,False,False,True,True,True,True,False,False,True,False,True,False,True,True,True,False,False,False,False,True,False,False,True,True,True,False,False,True,False,True,True,False,True,False,False,True,True,False,True,False,True,False,True,False,False,False,False,False,False,False,True,False,True,True,True,False,True,True,True,True,False,False,False,False,True,False],[True,False,False,False,True,True,True,False,True,True,False,False,True,True,False,True,True,True,False,True,True,True,False,True,True,True,True,True,True,False,True,False,True,True,False,False,True,True,False,False,False,False,False,False,True,True,True,True,False,True,False,False,False,False,True,True,True,False,False,False,True,True,False,False,True,True,False,False,False,False,False,True,False,True,True,False,False,False,True,False,True,True,False,True,True,True,True,True,False,True,True,True,True,False,True,False,True,True,False,True],[True,False,False,True,True,True,True,True,True,False,False,False,True,False,False,True,False,True,False,False,False,True,True,True,True,False,True,False,True,True,False,False,False,False,True,True,False,True,True,True,True,True,False,True,True,False,False,True,True,False,True,True,True,False,True,True,False,False,True,True,False,True,True,False,False,True,True,False,False,False,True,True,True,True,False,True,True,False,False,False,False,False,False,False,False,True,True,True,True,False,False,True,False,False,True,False,True,True,False,True],[True,True,False,True,True,True,False,False,True,False,True,False,False,True,False,True,False,True,False,True,True,False,True,True,False,False,True,True,True,True,False,True,True,True,False,False,False,False,False,True,False,True,True,True,False,True,False,False,False,False,False,False,False,True,True,True,True,True,False,True,False,True,False,True,False,False,True,False,False,False,True,False,True,True,True,False,False,True,False,True,True,False,True,False,True,False,True,True,True,True,False,False,False,False,True,False,False,True,False,False],[True,False,False,False,True,False,False,True,True,True,False,True,True,True,True,True,False,False,False,True,True,False,True,False,False,True,False,False,False,True,False,True,True,False,True,False,False,False,True,False,True,False,True,False,True,False,True,True,False,True,True,True,True,False,True,True,True,False,True,True,True,True,False,False,False,False,False,False,False,True,False,True,True,True,True,True,True,True,False,True,False,True,True,False,False,False,True,True,False,True,True,True,False,True,True,False,True,True,True,True],[True,True,False,False,True,False,True,False,True,False,False,True,True,True,True,True,True,True,True,False,False,False,True,False,True,True,True,True,False,False,False,True,True,True,False,False,True,True,True,False,True,True,True,True,False,True,False,True,False,True,True,False,True,True,False,True,False,True,False,False,True,False,False,True,True,False,True,False,True,False,False,True,True,False,False,True,True,False,True,True,False,False,True,True,True,True,False,True,True,False,False,False,True,False,True,False,False,True,True,True],[True,True,False,True,True,False,False,False,True,True,True,True,False,False,False,True,False,True,True,True,True,True,True,False,True,True,True,True,False,False,False,True,True,True,False,True,True,True,True,False,False,True,True,False,True,False,False,True,True,True,False,False,False,False,True,True,True,False,False,True,False,False,False,True,True,True,False,True,False,False,True,False,True,True,True,False,True,True,False,False,False,False,False,False,False,True,True,True,True,True,False,True,True,True,True,True,False,True,False,False],[True,True,False,False,False,True,True,True,False,True,True,False,True,False,False,False,True,True,True,True,False,False,False,False,True,True,True,True,True,True,True,False,False,True,True,True,True,False,False,True,True,False,False,False,False,False,False,True,False,False,False,False,False,True,False,True,False,True,False,True,False,True,False,True,False,True,False,True,True,False,True,False,False,True,False,False,True,True,False,True,True,False,False,True,True,False,False,False,False,False,True,False,True,True,True,True,False,True,True,True],[False,False,True,False,True,False,True,False,True,True,False,False,True,False,True,True,False,True,True,False,True,False,True,False,False,False,True,False,False,False,False,False,False,True,False,True,True,True,False,False,False,False,False,False,False,True,True,False,False,False,True,True,False,False,True,False,False,True,True,False,True,True,False,False,False,True,True,False,False,True,False,True,True,True,True,True,False,False,False,True,False,True,False,False,True,False,True,True,True,False,False,False,True,False,False,True,True,False,True,False]], dtype = "bool")#candidate|9045|(18, 100)|const|bool
call_9043 = relay.TupleGetItem(func_956_call(relay.reshape(const_9044.astype('bool'), []), relay.reshape(const_9045.astype('bool'), [15, 8, 15]), relay.reshape(const_9045.astype('bool'), [15, 8, 15]), relay.reshape(call_8994.astype('bool'), [1, 80]), relay.reshape(const_9045.astype('float64'), [15, 8, 15]), ), 0)
call_9046 = relay.TupleGetItem(func_962_call(relay.reshape(const_9044.astype('bool'), []), relay.reshape(const_9045.astype('bool'), [15, 8, 15]), relay.reshape(const_9045.astype('bool'), [15, 8, 15]), relay.reshape(call_8994.astype('bool'), [1, 80]), relay.reshape(const_9045.astype('float64'), [15, 8, 15]), ), 0)
func_8931_call = mod.get_global_var('func_8931')
func_8933_call = mutated_mod.get_global_var('func_8933')
call_9051 = relay.TupleGetItem(func_8931_call(), 0)
call_9052 = relay.TupleGetItem(func_8933_call(), 0)
uop_9061 = relay.sigmoid(call_9043.astype('float64')) # shape=(15, 8, 15)
uop_9063 = relay.sigmoid(call_9046.astype('float64')) # shape=(15, 8, 15)
output = relay.Tuple([call_8994,uop_9001,const_9014,const_9015,bop_9038,const_9044,const_9045,call_9051,uop_9061,])
output2 = relay.Tuple([call_8996,uop_9001,const_9014,const_9015,bop_9041,const_9044,const_9045,call_9052,uop_9063,])
func_9073 = relay.Function([var_8978,var_8979,], output)
mod['func_9073'] = func_9073
mod = relay.transform.InferType()(mod)
mutated_mod['func_9073'] = func_9073
mutated_mod = relay.transform.InferType()(mutated_mod)
func_9073_call = mutated_mod.get_global_var('func_9073')
var_9075 = relay.var("var_9075", dtype = "int8", shape = (8, 11, 14))#candidate|9075|(8, 11, 14)|var|int8
var_9076 = relay.var("var_9076", dtype = "int8", shape = (8, 11, 14))#candidate|9076|(8, 11, 14)|var|int8
call_9074 = func_9073_call(var_9075,var_9076,)
output = call_9074
func_9077 = relay.Function([var_9075,var_9076,], output)
mutated_mod['func_9077'] = func_9077
mutated_mod = relay.transform.InferType()(mutated_mod)
var_9079 = relay.var("var_9079", dtype = "float64", shape = (11, 12, 3))#candidate|9079|(11, 12, 3)|var|float64
uop_9080 = relay.sin(var_9079.astype('float64')) # shape=(11, 12, 3)
uop_9094 = relay.acosh(uop_9080.astype('float32')) # shape=(11, 12, 3)
func_7105_call = mod.get_global_var('func_7105')
func_7107_call = mutated_mod.get_global_var('func_7107')
const_9098 = relay.const([[1.253106,7.941687,-0.025266,4.536677,3.164520,9.931943,-1.653340,-6.740656,6.413943,-8.626776,5.076072,-4.236818,-4.445875,8.540975,0.606179,-1.447362,-0.432292,9.007199,7.025541,7.526333,-2.210442,3.823112,-8.206269,-1.852653,1.124679,4.247820,2.805143,-1.189321,8.770609,-9.926329,4.889356,5.576736,-6.854045,8.840248,2.622801,8.566173,6.869185,-6.355578,-4.173470,8.722861],[8.983000,-1.900757,-0.889834,-7.200058,2.704942,4.076854,3.980575,-1.438638,5.429912,-8.429577,1.125898,3.175998,-3.210612,-1.596838,-9.514180,-0.945662,-5.057278,0.456861,-1.843149,-2.113702,-6.462944,-2.157898,-9.365596,-0.067492,-0.282058,-5.061804,-7.554310,2.565916,5.504581,0.825009,9.344050,6.114279,-3.929291,3.723482,-9.574083,-2.025647,5.044136,3.973947,-0.202890,3.783146]], dtype = "float64")#candidate|9098|(2, 40)|const|float64
call_9097 = func_7105_call(relay.reshape(const_9098.astype('float64'), [2, 4, 10]))
call_9099 = func_7105_call(relay.reshape(const_9098.astype('float64'), [2, 4, 10]))
output = relay.Tuple([uop_9094,call_9097,const_9098,])
output2 = relay.Tuple([uop_9094,call_9099,const_9098,])
func_9116 = relay.Function([var_9079,], output)
mod['func_9116'] = func_9116
mod = relay.transform.InferType()(mod)
var_9117 = relay.var("var_9117", dtype = "float64", shape = (11, 12, 3))#candidate|9117|(11, 12, 3)|var|float64
output = func_9116(var_9117)
func_9118 = relay.Function([var_9117], output)
mutated_mod['func_9118'] = func_9118
mutated_mod = relay.transform.InferType()(mutated_mod)
func_8931_call = mod.get_global_var('func_8931')
func_8933_call = mutated_mod.get_global_var('func_8933')
call_9150 = relay.TupleGetItem(func_8931_call(), 0)
call_9151 = relay.TupleGetItem(func_8933_call(), 0)
func_1005_call = mod.get_global_var('func_1005')
func_1008_call = mutated_mod.get_global_var('func_1008')
var_9155 = relay.var("var_9155", dtype = "bool", shape = (160,))#candidate|9155|(160,)|var|bool
call_9154 = relay.TupleGetItem(func_1005_call(relay.reshape(var_9155.astype('bool'), [2, 5, 16])), 0)
call_9156 = relay.TupleGetItem(func_1008_call(relay.reshape(var_9155.astype('bool'), [2, 5, 16])), 0)
const_9158 = relay.const([[[True,True,False,False,True,True,False,False,False,False,True,False,False,False,True,True],[True,True,True,False,False,True,False,True,False,False,False,True,False,True,True,True],[False,False,True,False,True,True,False,True,False,True,True,False,False,True,True,True],[False,False,False,False,True,False,False,True,False,False,False,False,True,True,True,False],[True,True,False,True,False,False,False,False,False,False,False,False,True,True,True,True]],[[True,True,True,False,False,True,True,False,True,True,True,True,True,False,True,False],[True,True,True,False,True,False,False,True,False,True,True,True,False,True,False,False],[False,True,False,False,True,False,True,False,True,False,True,False,False,False,True,False],[True,False,False,True,False,False,False,False,True,False,True,False,True,True,False,True],[True,False,False,False,False,True,False,False,True,False,False,True,False,True,True,False]]], dtype = "bool")#candidate|9158|(2, 5, 16)|const|bool
bop_9159 = relay.logical_xor(call_9154.astype('int64'), relay.reshape(const_9158.astype('int64'), relay.shape_of(call_9154))) # shape=(2, 5, 16)
bop_9162 = relay.logical_xor(call_9156.astype('int64'), relay.reshape(const_9158.astype('int64'), relay.shape_of(call_9156))) # shape=(2, 5, 16)
uop_9165 = relay.cosh(bop_9159.astype('float32')) # shape=(2, 5, 16)
uop_9167 = relay.cosh(bop_9162.astype('float32')) # shape=(2, 5, 16)
output = relay.Tuple([call_9150,var_9155,uop_9165,])
output2 = relay.Tuple([call_9151,var_9155,uop_9167,])
func_9171 = relay.Function([var_9155,], output)
mod['func_9171'] = func_9171
mod = relay.transform.InferType()(mod)
var_9172 = relay.var("var_9172", dtype = "bool", shape = (160,))#candidate|9172|(160,)|var|bool
output = func_9171(var_9172)
func_9173 = relay.Function([var_9172], output)
mutated_mod['func_9173'] = func_9173
mutated_mod = relay.transform.InferType()(mutated_mod)
func_8931_call = mod.get_global_var('func_8931')
func_8933_call = mutated_mod.get_global_var('func_8933')
call_9191 = relay.TupleGetItem(func_8931_call(), 0)
call_9192 = relay.TupleGetItem(func_8933_call(), 0)
func_4996_call = mod.get_global_var('func_4996')
func_5000_call = mutated_mod.get_global_var('func_5000')
const_9194 = relay.const([-7.665501,-0.150230,-6.762360,6.735871,-7.838833,8.866444,3.152764,2.276649,8.902978,-8.426530,-6.072498,-6.817383,0.388210,8.910900,8.146964,-0.819710,-9.414737,9.286976,-9.192605,6.367282,9.310928,-8.190089,0.194710,-0.515971,-1.054791,-7.374172,-6.011625,-2.503331,-0.403671,-0.486380,-0.916580,2.066694,-5.459442,7.036160,-4.783380,9.929944,-1.096944,-7.026837,6.055128,-3.519216,8.502345,-9.285807,-3.282852,3.010535,-6.915757,-0.519704,-7.951254,8.733494,-5.228375,-1.234838,-2.494492,-9.262258,9.494305,-8.617873,-7.514128,-5.840994,3.745104,6.129294,-6.254348,-3.240841,1.384730,0.431855,4.114784,-8.098109,-2.547130,-6.173469,-4.127547,9.368630,3.305174,-7.170426,-8.931224,-4.729999,-4.787647,4.996075,-0.407160,8.401653,5.874049,-3.447440,-2.853516,-3.686554,7.317297,6.715793,-8.221336,3.193059,-0.066149,1.800152,-6.179020,9.805854,3.622200,2.385642,-3.980877,9.805480,-4.513290,-8.597758,-9.191722,4.016948,0.180980,1.472312,4.057393,-3.604847,0.379983,-8.447199,9.558852,-8.583968,5.495664,-7.022115,-7.869320,9.128013,5.518932,0.581433,-8.106402,2.985542,5.668820,0.558060,8.462982,1.500503,2.233639,2.496256,2.268087,-4.137791,1.355328,-9.012223,-6.566242,-4.033777,-2.167182,-3.190605,-8.502579,-9.402293,-2.275551,-7.577279,0.237004,-8.315771,-2.397627,4.178307,4.862302,-6.678194,6.681163,2.723119,-7.835738,7.662155,8.560830,3.141085,-1.808396,-8.499755,-9.269412,-9.797370,-1.372065,-1.113028,-8.819774,-8.728712,8.622064,8.751933,8.245423,1.355532,-9.047493,-1.099737,-4.440391,-1.840152,-0.076594,1.926593,4.092588,-6.924265,1.986287,-3.593520,9.811779,3.700365,0.443629,7.555920,0.279486,-1.181963,9.304749,-4.197592,3.056454,-4.449079,8.870446,-5.350153,-7.983959,-9.599339,9.923168,7.879084,5.519197,-1.401948,9.285389,0.784032,-5.354484,8.623955,1.997705,5.013491,-2.214667,-9.789413,2.728395,-8.100228,3.210056,2.494669,-7.488754,7.363028,-4.084501,-1.854457,9.834875,-2.078246,-1.187442,-7.035543,1.774433,-5.648664,1.469857,9.428674,8.958593,-2.514927,-2.842959,9.111040,0.354859,-4.454607,-6.405129,4.046848,1.562085,4.280270,5.837104,9.209694,7.551903,-4.977722,-0.337203,-2.543394,-6.994685,-3.463437,-6.992621,7.086458,9.691563,7.650378,-6.396961,0.478062,5.320103,3.021174,-7.352599,1.951439,-7.041559,3.857266,-2.235558,-6.532201,-2.910323,4.623637,4.617548,-3.469318,3.146548,-3.789189,2.598894,9.918204,5.146327,5.345141,5.520111,3.414753,2.140008,-2.386088,-6.529476,-7.904724,7.560494,-6.271498,-8.068240,1.915811,-1.910974,0.034783,-3.694890,-2.913190,-7.437081,9.337454,9.185496,8.136838,0.648611,-2.618672,3.897225,4.266186,-9.596757,1.014172,-7.906609,-6.004166,-3.050701,-0.835221,-5.952328,-6.347473,8.616974,-9.356527,4.089490,1.093004,4.592358,-8.508503,-4.655762,-1.302820,7.568369,7.568114,-8.457377,8.473103,5.950454,2.216258,-4.910711,-2.846833,-0.351914,-7.494507,8.811709,-7.604792,4.220937,0.704743,-6.975605,8.671825,8.677019,-2.043586,-6.129534,-3.204943,9.613777,-6.405504,-4.376284,4.374638,7.802178,-2.884860,6.492357,-3.926017,9.157455,-5.556605,2.325675,-7.701403,-0.407129,-5.828392,-4.093061,5.543573,1.346727,6.993428,-7.115932,-5.529085,9.468615,-2.580933,3.717448,5.715509,-2.108403,8.532332,2.779078,-1.425995,-9.261581,2.643855,-4.113707,-3.269606,-8.976029,8.417769,4.102113,-7.108682,-6.708236,1.591433,6.434977,-8.177115,3.217599,1.817418,7.349783,-4.880606,0.452540,-0.691221,-3.276594,2.767057,3.464992,-0.649858,-1.015038,0.851306,1.288357,-5.704491,6.311596,2.131615,-6.207537,-6.141691,-6.757349,4.009801,-2.136082,3.243616,1.446719,9.966059,2.109872,0.040420,-3.558992,-5.721281,6.425388,8.882163,-1.015565,7.964260,1.195045,-9.529630,1.346793,8.037996,-1.186756,-8.753360,2.444280,-0.220944,4.232259,-7.954943,-4.669414,-9.069595,-1.451071,-7.825559,-7.935826,6.655922,3.271834,9.564473,-1.681725,-6.372974,-3.359092,-0.226076,-1.358903,-5.840868,-4.023489,-3.412074,-3.512870,-6.603531,-4.722816,1.601898,2.764377,-6.963401,-8.365008,5.609408,2.308537,3.548850,-8.514684,2.345519,-8.771083,7.719627,7.994739,8.549139,-9.196907,-0.714376,4.976840,5.272999,-0.843238,5.350345,5.705415,2.368405,3.720725,-4.661621,-0.501046,-4.459450,-8.641899,2.703200,3.396566,0.988585,5.502456,-1.113641,8.077737,1.314373,-9.887445,-3.123481,6.202680,-4.282774,2.859019,-8.974946,-0.285674,-0.848467,-6.296359,-2.592033,9.062212,2.495487,6.646026,5.301191,0.075903,0.963545,7.699256,-9.485965,5.351572,2.102947,1.966014,6.141028,8.098875,-3.667503,0.150866,6.312704,-2.500920,7.656253,8.474227,-3.395847,0.538988,-2.139891,-3.937517,5.922517,3.825092,-1.805803,4.382285,-9.432279,8.622241,-4.725656,-5.309739,0.340485,4.985769,-4.495207,5.576742,5.311539,-9.385257,-7.518597,-5.559936,4.918558,-2.214701,8.171176,5.492410,-8.251826,-7.318542,7.970724,4.010073,-6.305298,-7.508572,7.952075,2.794892,-6.421433,-7.197595,-8.055739,1.259344,-4.851801,2.175631,6.164397,4.024075,-4.162304,-7.636835,-3.414026,-0.070396,-9.737768,-6.039752,6.355650,7.455646,7.733567,-1.747617,-5.260694,6.413849,3.462449,-1.906699,8.504595,5.528037,-9.118027,-3.266995,1.476293,5.280981,4.051332,2.789216,5.349007,-5.905855,-1.187104,3.484270,-0.519683,9.487580,5.212338,-5.652921,6.580914,-6.475157,-5.669566,7.135807,-9.891618,3.556588,-1.799617,-9.948788,8.450362,-2.475994,5.539297,2.071159,6.866328,0.375870,-0.714475,2.568687,2.384413,2.343933,-9.237627,6.695006,2.439370,-4.051975,3.568745,-8.942920,-2.154026,-9.802472,-0.629767,0.397847,-6.345800,-8.408832,1.834840,9.798520,-0.293118,-1.932351,0.520391,0.245140,-5.668749,-0.984703,-2.486041,3.593355,5.084862,-1.900967,8.640510,2.967768,-0.657171,-9.214712,-9.552800,1.398340,8.333000,9.804739,3.290274,2.974129,5.036153,-8.485687,-3.016835,-2.523659,7.267126,1.169256,-6.838194,2.195987,8.012455,-8.927605,6.420695,-0.662309,6.039004,4.993997,-0.172732,3.805507,-4.682927,6.622297,5.340788,-0.315467,-1.018061,0.790803,0.763011,4.613402,-8.590733,-0.729686,3.795472,-4.600815,-9.720488,-5.679878,7.112876,-7.266807,8.990307,-7.847455,1.109576,7.769900,0.928253,0.360973,0.300190,8.918465,-0.223076,4.962410,-0.886249,1.125269,8.339151,1.225341,1.000810,-2.935814,6.630710,6.357178,-2.157565,-8.769192,8.634183,-3.599736,-8.836282,-6.954794,8.697672,1.193027,-7.038813,-3.968491,-8.449796,-4.724303,-4.625101,-7.631514,6.753203,-9.446463,-1.637861,8.216267,-2.309470,1.119075,2.790604,-2.653746,4.533403,-7.384154,-6.503054,-4.613295,-1.491190,-4.540978,0.811323,-7.008068,-3.807253,-4.956029,4.669656,-5.555072,7.610230,8.800642,4.222527,7.282348,4.487125,-8.503209,3.241463,-6.462479,4.368673,-7.563460,6.797116,-7.364138,3.422554,-2.846607,-7.938344,6.824521,-0.322153,5.025082,-2.449032,1.834953,-3.175016,6.482399,-0.090327,-0.158730,-2.627789,-2.628821,9.635875,9.801478,-1.781904,-9.649648,-3.491993,-8.797694,-6.101292,-6.320767,2.385824,-5.434596,-3.124264,2.143756,1.483871,-2.109375,-8.734920,7.956107,3.951663,-9.076039,-3.571387,0.609601,-9.016694,-4.491761,0.248396,6.314510,-5.392314,-1.200969,7.554017,9.236471,1.804547,-5.628727,-5.854729,-5.851764,-4.993190,9.502563,8.627236,7.290945,3.344443,-1.597190,3.431838,3.409047,5.322294,-5.346175,3.106602,3.232603,6.264152,-4.184877,0.358892,-0.240323,0.248481,-5.578104,-6.690572,6.993230,8.452580,-5.746482,2.062275,-5.984250,4.127019,-1.508095,-2.754322,-9.743739,2.832954,-5.004637,5.409377,4.144459,-9.296203,9.518988,3.307995,-8.797810,-9.089087,9.743016,-7.384253,-6.948092,-7.679078,-7.636517,-6.577901,9.144180,8.378534,-5.977421,-2.518203,-3.187680,0.450186,4.818183,-1.026916,-3.613770,-4.950130,-1.151932,5.534206,-4.803394,3.043378,0.316267,3.713503,-6.519744,-9.025445,3.030769,-0.159829,7.478038,6.185492,-2.048999,1.345281,-2.633935,5.088638,-3.502528,5.402373,-4.932800,-1.660747,-5.400754,-6.318761,-6.645470,6.944346,8.333210,2.215479,-2.667453,1.298387,-8.730588,9.924390,-0.518054,-0.291197,5.406711,-5.867201,-9.831827,4.122157,-7.144994,2.084283,-9.439692,0.250892,-1.507917,6.562271,0.213610,-1.276993,3.648195,5.182538,-3.620207,-6.020959,5.402800,6.598825,9.711321,6.939492,6.247505,2.486987,8.384151,1.502731,1.736246,-0.317188,-4.766123,2.116449,-1.966904,2.690592,-3.356241,8.534852,-1.029919,3.405776,8.780157,-5.612407,-6.586864,9.772130,-2.688759,4.364185,5.680286,-8.123505,-7.164388,8.313890,-0.907358,3.018878,-8.559116,1.989626,-4.068304,5.525384,1.360195,-7.907031,4.855330,9.457197,-6.552625,1.224354,6.004298,9.993703,2.720605,-0.053161,-5.398119,-3.353027,-7.482808,4.793969,3.162832,1.596692,-4.768869,-5.456385,8.579183,4.515526,-5.125237,4.380745,0.772234,-6.273152,8.877911,-7.987903,-9.371988,-5.980292,-1.635863,0.206834,-4.646335,-2.177357,-6.116238,-6.119994,2.647995,-5.873132,5.941323,9.554926,-0.070956,3.555347,-2.159288,0.233169,3.979479,-2.782621,-6.823166,8.093564,-9.200279,3.890679,-0.719069,-1.653704,-0.463992,0.413711,-8.503443,-0.542151,-9.422472,-4.557852,0.034660,-4.389842,1.969073,6.538770,-7.676849,8.734957,-0.028712,-1.637873,-7.370079,-3.043557,5.341259,-5.825984,-8.732022,-6.884985,9.747964,-6.263118,4.244172,0.295567,4.954429,-4.935223,6.296346,-9.587845,-1.592348,-6.046148,4.555182,4.976832,-2.235669,-5.540156,-0.357478,-4.367975,0.845766,4.456960,9.371393,1.588343,5.808586,-6.903972,4.827861,-8.756663,6.282286,0.418748,-8.622805,6.026411,-1.772851,3.583831,3.653885,-8.620540,-2.992571,2.114817,-3.204993,-5.550723,-6.639152,-2.259643,5.209295,3.948846,1.742141,7.652652,-6.483007,3.027592,-9.673046,1.219403,-1.615793,-7.377536,3.633891,-8.534854,3.353591,3.479995,7.379196,6.650391,5.184290,-1.059893,8.953864,-8.800702,-7.771379,9.742123,-8.408657,-4.025930,-3.007970,-2.944672,-8.818626,-1.681436,4.464642,6.881668,5.966467,-9.388525,-7.486312,-1.750625,-1.707610,6.792680,-4.309232,-0.284223,1.434298,7.927155,7.453262,-5.361768,-4.109416,1.322306,-7.132989,-3.342370,-9.251206,-8.968801,0.135543,-7.415960,1.042912,7.030080,-6.910193,7.204291,-6.260999,-9.258354,-0.666647,-0.816858,8.739039,-1.730126,-4.199095,2.437959,3.408293,1.751957,-3.494071,8.646932,2.075263,0.398706,-6.763828,-7.840844,2.876400,-5.865902,5.651389,-0.976468,5.276478,-1.684088,-5.314768,-4.434119,-3.906434,-7.252553,0.301869,-5.461680,-9.682551,6.492610,-9.322378,-8.494817,-0.034577,7.936304,8.517232,-5.270013,7.007312,-3.893479,-9.199772,4.543967,5.827972,-2.916998,3.426407,8.756233,-0.968568,-6.769329,-1.763649,6.195323,-7.515516,-1.156991,-0.209221,-9.280046,-0.796884,0.901172,4.032149,3.576558,0.268067,3.045038,-0.230060,-0.114567,0.557066,-1.868340,6.097978,-9.204729,-7.676592,3.415848,4.483715,-3.506858,8.834789,5.053440,4.308848,4.488409,-7.469582,2.538416,7.860961,1.632653,0.022687,6.204372,9.702864,-6.075505,-8.397599,9.926168,2.614984,7.179468,2.504819,0.084996,7.325831,0.935524,4.320760,2.022817,7.576978,-3.939252,-5.751951,1.837314,6.964187,5.351779,-2.096126,-2.811626,3.831707,-1.008396,-3.435842,2.610046,-5.676511,9.005826,2.608920,-6.758220,7.542979,6.158943,-7.013576,-5.442444,-4.072782,-4.386989,-1.120501,-6.012149,-9.422479,-4.861536,-4.852623,4.952665,6.868111,8.683512,5.495224,3.871246,-6.221457,-3.941134,9.396774,-6.474687,-5.545804,-3.162574,9.176294,-7.571045,6.847734,-4.429377,-4.007930,-3.853911,-4.800352,0.793902,-2.118738,5.773041,6.745203,6.696972,-3.430793,6.540436,-6.151423,8.985937,-8.194787,-7.851976,-5.931273,-2.406968,-5.746393,-2.551602,-0.822351,-1.661497,-6.247096,9.389346,7.756938,9.401579,-5.600255,-0.801257,-7.308929,7.932197,-6.652068,2.295079,-0.862553,9.036695,-1.910209,-4.560333,0.779373,4.384786,-3.016280,-1.652369,-7.675194,8.445470,-6.171915,1.910108,2.687775,0.559344,-1.230995,-8.798595,-3.111985,9.546270,-0.719393,7.954856,-6.877046,8.855123,3.285464,-6.015038,5.416664,7.383287,-4.956688,1.531488,8.173991,0.632365,2.616145,-8.118558,2.501394,-9.547599,9.790310,-7.093625,8.589137,-2.532305,2.484996,-8.775443,-9.775211,-4.303266,-3.357920,-0.839763,-8.036365,-0.935069,-2.031859,-4.308458,-9.754800,2.333183,-7.617777,-4.562761,7.013980,3.952605,8.678421,-7.107391,1.726701,-4.783579,-8.208822,5.368108,-2.724153,-9.242849,-3.457842,5.776351,8.966989,8.341965,-3.261069,1.829199,-0.875871,-8.044587,-9.371809,-1.432956,6.500846,-6.268964,4.836886,-4.677980,5.169507,-5.942275,3.614249,-6.394908,-0.122232,7.693799,3.211956,2.216595,0.451975,-2.916604,-8.269288,8.671014,0.790902,2.517439,2.242371,1.831246,-4.912838,-8.303504,5.634916,-7.901264,-0.616247,-2.054100,5.599712,-7.936850,1.116435,-7.005652,6.572989,1.794879,5.424133,5.730060,-2.339388,5.675735,5.102349,4.374549,1.462625,-7.157246,9.122365,0.950247,-2.463020,7.576962,-8.802575,6.152029,0.753948,6.240112,5.868738,9.987209,8.180418,-1.632637,-6.624024,2.939738,-0.353195,-3.565494,-3.299814,-6.477869,5.019539,-0.047516,5.554826,8.603085,-0.046507,-7.606562,0.045903,2.606142,-1.286694,6.295491,8.000586,-0.190861,0.644358,8.520346,4.382369,-9.158173,0.151807,-7.490156,6.565102,1.084173,-0.845703,5.177950,5.150577,-3.198899,6.824702,1.319312,-1.589263,-6.695123,-0.886565,3.139985,1.453975,-7.075683,-7.905015,7.538332,-5.154998,1.852674,-1.813926,-2.155045,-7.266592,-6.319261,1.481249,-8.382195,0.838330,6.486511,3.158069,9.788947,-0.684002,5.717140,5.658049,-5.695833,-1.954441,-3.714404,7.627388,-3.630689,-8.951195,3.810309,-8.489201,1.878843,-4.340627,0.346856,-1.961946,-4.160087,-6.534066,4.852498,-3.655771,7.222051,-3.957312,-6.019897,8.720627,3.535195,4.811335,4.972952,-4.467345,3.568077,8.945542,-9.813397,-0.781650,-0.256694,3.242949,-3.663068,-2.226442,-5.900526,1.693241,-3.281525,8.047547,-8.698792,-3.120967,6.434827,3.532273,1.265624,3.584384,-5.171058,-4.565943,6.699975,-1.980565,9.370829,4.829043,2.400870,-6.888141,5.230982,7.308930,-4.078785,7.238863,3.814288,5.481336,9.956756,-3.411148,-2.266950,6.548033,-1.621253,6.824447,-7.496946,4.917001,3.794402,9.112544,-3.117667,6.133915,-1.538423,-9.242464,0.440235,-6.255901,-0.391062,-1.426288,0.735670,-7.290479,2.722063,9.391834,3.806941,-2.476005,9.315929,2.210076,-4.795137,-8.578255,-2.572832,-3.161733,-0.862612,-1.939660,-8.113030,3.334267,-7.821264,3.110659,2.557204,6.310804,-2.737771,-0.953281,8.614975,3.993188,-1.606742,-9.507200,-8.535937,-8.840224,2.801808,8.197213,6.753828,3.453653,6.593052,2.288012,-7.235967,3.159442,-8.855648,-6.036629,0.181124,-7.313114,5.537551,-1.253374,0.508742,6.717706,-1.609387,-3.152175,1.242317,1.430135,5.475665,-0.987818,-4.103486,-0.546579,8.325927,-5.655142,-5.527376,-4.042875,-8.831265,4.074259,4.168056,-9.198639,6.996985,4.107602,5.372491,0.273206,4.101790,-2.763787,2.684575,0.992146,6.112029,-0.226957,-6.051224,0.506452,7.560364,-2.456376,6.521508,-8.024302,-8.848037,-6.901225,8.451161,-2.715475,9.253232,-7.648933,0.285317,4.876632,1.736039,-4.419782,-9.418696,-6.429965,-8.579014,-2.692281,-7.424728,-7.354364,-1.168640,-9.762406,5.345051,-7.370017,7.575377,5.027038,-6.034877,7.741759,-3.305854,0.882961,8.444264,6.051166,8.542140,-8.027739,-6.632155,-9.625954,5.648082,-1.680771,9.692531,1.037194,2.497710,3.441638,8.553372,-5.352676,-7.248180,-2.952424,8.304015,3.466860,9.206633,-0.987545,-0.220376,-3.496617,6.926337,-1.915233,5.165519,9.781586,2.708889,3.967153,5.203798,-8.268653,5.381408,-8.726703,-7.850690,2.514832,7.245010,-1.493793,-9.547432,1.507406,8.767288,-3.155515,8.414118,-1.725712,-6.315060,5.971371,3.164465,1.468769,-2.169142,8.649644,7.161685,-3.984512,1.875082,2.525829,3.361384,0.028382,-2.651402,6.942368,-9.956536,-1.273477,0.190696,-4.376265,-0.513261,-6.360221,1.884727,2.849794,-9.469990,5.674836,-9.784055,-0.325120,8.166606,9.072411,0.278932,8.074293,-7.292194,4.060306,1.001308,-8.085740,3.147226,-7.008956,-7.807761,-5.672907,6.051628,-3.559207,-0.826619,6.538756,6.563708,9.169730,-7.080199,-0.489989,2.961744,-3.552301,6.155037,-2.500488,1.780565,-8.123131,-1.058392,8.108165,-0.533554,-6.392575,-0.436790,4.129361,-1.660272,-0.130433,6.066590,7.686404,-0.731215,-6.362362,-8.185871,6.667258,2.356742,0.341685,-5.858417,-4.391602,1.646003,9.165670,-8.670655,2.802969,8.622790,6.981047,-7.184978,7.402891,2.668317,-5.841447,-4.114998,9.818356,7.838821,-2.786111,7.637004,8.187532,3.508906,-8.290482,4.745033,-4.752724,-6.750483,3.294390,-7.207428,7.097245,-6.993085,0.959948,8.276623,1.916067,1.139472,-0.606003,-7.697165,2.236990,-9.445118,3.300109,1.516506,0.397590,-2.555958,-0.259561,3.049636,-4.210775,-2.518272,3.108678,-7.488368,-7.908081,-8.669799,7.869391,-4.308583,-6.393885,-2.936037,-3.948944,1.317812,6.704479,9.595325,-1.883320,-1.323703,-7.139671,-2.441790,-9.835893,-5.004045,-5.047898,-7.397453,5.124261,4.016982,9.773247,-6.234335,5.333208,4.256588,2.853106,8.680760,-4.105472,-9.423907,-0.959994,-9.412296,6.393687,0.831626,7.032446,8.779049,9.959610,-0.552776,6.992424,-3.507832,-4.485390,9.018787,-5.582978,3.062181,-6.510015,-5.855512,-5.972421,-4.235938,8.177856,6.279159,1.239155,-5.547346,7.249381,7.496783,6.711428,-8.014973,-2.991700,8.662380,-9.688977,3.414096,-7.783030,7.141710,-5.414370,-7.509124,2.422680,-4.593784,4.520617,2.446712,8.281617,1.352659,8.216419,-4.388466,6.061007,-0.740703,-3.380217,2.962168,2.174282,4.113559,-9.870104,-6.818797,8.604521,-5.482103,0.887831,-1.673787,-1.756833,9.533951,2.301627,4.253087,8.547897,-7.345969,1.678770,-7.325601,-0.973446,-0.689827,5.926861,-3.535878,3.997690,3.531611,1.606188,2.317516,5.053861,9.712799,-8.441524,-4.809302,-3.514947,8.697371,-6.849741,7.307594,8.183738,2.387533,-4.137835,-2.572100,-3.167780,-3.782599,2.016996,6.815370,-4.883112,1.511398,-6.180059,-5.875592,-1.546648,-8.102573,5.084145,6.617992,-8.417651,5.496079,-2.889990,-0.414562,-5.482038,-1.764118,4.600508,-5.722150,-8.586454,-3.367512,5.084166,-2.172334,3.520643,-0.025414,-7.104201,4.211687,-6.508858,6.414947,-4.188394,1.421577,-8.339392,-9.049339,-2.759506,8.199263,-5.095804,5.904201,-2.407091,5.064489,-9.796164,-9.488082,3.624530,9.391623,-2.925296,2.646833,0.666181,9.883959,-7.504262,0.689299,2.538137,-8.065352,-5.182760,7.796380,5.859665,-6.439153,3.014651,-3.052549,4.071414,-2.107651,-3.157776,-0.129118,8.300902,6.234100,-8.084411,-5.399066,8.381336,8.256019,-7.897566,-5.447430,-7.243505,5.555407,3.919455,-5.397624,-0.477054,-5.926330,-1.353561,-2.891764,5.087666,-6.578978,-9.094155,0.830254,3.307372,8.418827,3.467423,4.655507,7.714655,6.258115,-4.231509,0.336468,6.827314,9.535207,-4.551231,6.264567,1.779436,5.860412,-4.782851,1.877397,-8.613016,8.598839,-5.808448,7.826846,6.268031,-2.963226,-3.674023,-0.617305,1.366663,-7.770629,2.318923,5.202287,8.760368,-7.135337,3.306029,3.338204,7.786181,-6.380116,6.324038,8.067496,-6.120493,-9.958977,5.169714,-8.608550,-7.657450,-8.870397,-4.820997,-6.346349,2.721722,8.724721,-0.553357,-5.641777,3.111763,1.980258,-8.766457,-4.055822,-3.963554,7.351094,2.388046,-4.064753,-1.081103,-2.139372,2.332462,-2.187438,4.165779,8.046344,-2.986656,4.192904,-8.597010,-7.919870,7.694650,-7.795486,5.006526,4.475570,5.825925,-7.044805,2.695671,7.123084,7.650689,7.017711,4.760938,-4.648297,-3.577195,-8.557345,-2.081488,5.474000,3.103244,9.700661,7.998774,0.533320,7.608417,7.241532,-2.530627,4.666908,-7.780496,4.431664,0.538908,-1.954484,4.278500,8.600845,1.362130,-0.011242,-5.274127,-8.253172,-4.881842,-8.130822,0.548551,-9.949326,-5.850493,-0.653497,-5.564180,6.694317,2.520964,4.828251,-6.039828,2.368287,1.860811,-4.775914,7.412079,-3.360817,-9.386139,3.923481,-7.189384,-1.936872,1.747679,9.530447,-0.955259,-6.907851,-1.607780,-2.959760,-5.170995,7.428409,5.792359,3.753327,-2.298474,8.459924,-3.566387,-8.046873,-8.245229,-0.038686,1.157038,-7.984514,-6.771254,-8.227348,-4.658599,6.212948,-2.508633,4.016448,-5.847344,-3.280521,-3.755469,9.589789,0.782714,9.589011,-7.714494,8.581503,5.541125,0.370907,-0.998346,0.611590,1.719977,2.260612,0.051084,9.081560,5.072856,-5.371038,8.655386,9.151453,3.465466,8.222991,-5.677590,-3.754161,-9.769076,4.413790,6.843238,5.491183,4.169610,-2.044682,8.263351,-4.789328,8.807835,-4.003189,-7.751894,2.608002,-2.544992,-4.508902,-9.392385,4.694904,-9.519998,3.748786,0.939440,-7.700339,-1.885034,5.505524,5.377165,-2.001599,-1.761927,8.003640,-9.837977,-3.813039,9.103628,5.378298,8.954136,-3.367958,4.357881,3.345113,0.016862,8.269764,-4.256228,0.583106,-9.432415,9.383843,3.993717,-6.158727,6.340828,-7.777943,7.508933,-8.195536,-1.038711,-0.454453,5.644081,-1.342375,-5.212312,-6.326586,-3.645249,-0.894470,7.430030,1.211201,-4.128758,7.423931,4.704018,5.850396,5.953816,8.676693,-5.632667,-9.302969,-0.972007,-9.447584,-4.986233,5.138378,2.359930,-1.483181,1.224060,6.821824,4.992458,-6.926764,-6.969124,8.432535,0.487074,-3.831595,-4.376166,7.065267,8.271748,6.657525,-0.581509,7.902304,-2.468634,4.351818,1.073471,-2.614315,0.453481,5.279311,-7.936143,8.119155,-9.742430,9.386975,-2.315529,2.086435,8.276043,-8.580280,9.212362,6.181878,9.900759,-7.168441,8.094513,5.643228,1.962733,-5.181284,6.012932,8.355238,4.706792,-4.433454,-1.258287,-7.943603,9.611116,2.335642,-5.446238,-2.385478,1.739773,-8.259007,5.713022,4.679450,8.796361,-7.587890,-4.233139,-8.023144,9.775001,5.517701,-1.371181,4.466367,-3.018819,-2.500627,2.383007,-0.767674,1.987711,9.916217,-9.220925,2.238737,-2.585650,-1.806483,-0.480200,9.432899,-5.556530,4.423641,-0.189625,-5.503963,5.359502,1.116515,6.196195,-6.085076,-9.851710,-2.925469,-9.110997,-8.761511,2.091452,1.617280,5.014815,4.030383,-9.863415,-0.656620,4.101691,8.013861,-3.135538,1.965297,2.799395,-5.983975,1.251879,-2.702537,0.156134,9.940995,-4.258379,-8.637082,3.271070,5.254600,-6.845252,-9.075983,-7.292257,-2.467065,-0.775303,-8.233285,2.173890,6.785899,5.123555,7.056118,8.868386,-9.397193,6.929693,3.442949,-3.454078,-8.506176,1.554079,6.231082,9.170322,-1.074164,6.467144,5.957271,6.619314,-3.373103,-8.483691,5.258885,-6.893676,6.866503,-7.272184,-5.372631,0.054753,6.536169,5.542038,-2.277250,6.010410,-4.903625,-7.832242,3.523270,-3.140553,-2.735546,5.906234,-2.043193,3.356471,-9.805161,9.025336,1.622475,7.811989,6.625467,6.639565,2.645960,-3.466422,2.172515,6.693425,-5.429001,-9.912133,7.670405,4.478123,7.580756,3.444182,-8.587267,-3.686253,-7.315199,0.628833,-4.750526,9.297025,1.908109,4.213839,-1.012754,2.875391,7.715875,-9.677990,-6.713458,-7.964162,-7.967204,2.346600,-2.186399,-3.680594,2.709556,-7.387909,-1.151725,-9.202901,7.246237,0.849976,-2.307140,8.272821,-4.018040,-5.492755,3.838626,1.312590,0.419495,-8.698454,-1.647913,-5.778271,-2.680612,-7.686508,-7.869791,-5.405572,-4.211480,-5.169422,0.450471,-3.537256,7.148471,-6.422615,-1.509438,-4.058207,-0.749233,1.513404,-4.979825,-5.070221,4.748876,4.693795,1.283373,4.517483,9.849448,8.428441,5.173755,4.279307,-0.205451,7.764869,1.538530,-7.059845,6.890296,-3.274826,7.798878,-7.750173,0.128590,0.272304,-7.680539,2.790041,-6.169056,-2.670348,-1.087889,-5.880428,2.398004,5.254582,8.363025,-9.744765,-4.377341,-4.085138,2.508103,-2.694244,8.325114,-7.809921,-2.041262,3.630463,-7.916226,2.157487,8.320252,6.301766,6.683092,8.421761,7.415807,9.526162,8.104149,1.591328,7.442563,8.082259,1.339224,-9.202351,6.932028,-5.067876,9.021597,4.226050,4.005804,0.877278,0.093766,-4.095224,-8.712299,-6.236995,2.194220,-2.248749,2.714073,2.891674,5.281499,8.216316,-1.592622,-5.797842,9.889468,-7.712834,3.786488,9.753787,8.088890,5.095735,-2.908922,2.820694,8.241842,-6.395226,9.390719,-6.698785,5.438190,-7.725679,0.473092,8.364799,-5.172713,-2.033859,1.547372,-0.807848,3.696488,-5.880204,-4.773474,6.446121,8.771097,-9.877674,-4.588781,-7.961788,-8.601897,2.117809,3.419599,-6.155717,-1.598406,3.008793,7.114958,-7.625855,1.129082,-2.415460,-5.516968,-6.347351,1.086649,7.777701,0.213129,1.846853,-7.573987,8.899273,8.022751,3.043930,-0.035780,9.288427,-4.729455,-2.234433,-2.297902,3.074325,8.820486,-5.393654,0.307202,-3.799044,2.049461,-9.346558,-7.879421,-5.176902,-0.286070,8.845860,-7.182747,-0.729020,4.691470,2.020911,6.845475,-2.541071,-0.363034,7.441089,-3.030421,-4.033852,4.542501,2.087363,-4.257764,4.421428,2.572517,-3.368668,1.886483,7.899735,6.155231,-8.923734,2.468046,3.555949,0.032018,6.682337,-7.516745,-5.948772,7.358062,6.251042,5.989195,-6.395518,-4.994356,-8.509462,9.674868,-6.246547,-3.867227,0.561479,6.605880,6.854794,2.436384,5.978181,-7.875881,8.272690,9.020418,-1.924047,8.523936,-4.085594,2.008635,5.009735,-5.200315,3.238306,-4.755522,-3.063283,-8.413479,-0.105816,1.375991,6.385696,4.767711,9.046440,-2.476650,8.933635,-6.587766,7.360045,9.588136,-7.591041,-8.484928,-6.129160,-4.094855,-7.696843,7.191095,-3.634331,-6.854221,-9.644807,-6.781963,5.612657,7.372621,-9.753519,-2.618300,7.599180,-1.722658,7.339713,-8.136128,0.608698,-6.432716,2.784231,-5.342249,-2.346991,7.444959,8.085242,-0.067970,-1.234858,2.850155,6.265543,-1.830987,8.045725,-4.115127,9.302413,0.329332,3.774861,5.946833,5.860562,-3.891562,-3.471978,-4.925478,0.757967,-1.949290,7.781889,-7.791307,1.249620,2.586320,6.253244,6.478938,-0.987537,7.994519,1.723428,-2.734493,0.099449,-8.744706,0.960641,4.676247,-3.369556,-3.519630,3.592200,-5.779555,-8.347506,-7.861706,-2.497262,-9.720559,-0.988733,-5.337104,-6.138352,-8.367958,-2.676528,-1.338887,7.079908,-2.459398,8.420109,5.083064,-9.384505,-3.338300,-6.270531,-3.622956,-5.261689,4.153158,8.580081,-5.180031,1.964477,1.383616,-5.654549,8.262790,2.779552,9.958372,-8.980608,7.122247,-7.190523,9.332436,-8.985899,5.856927,1.905027,8.995126,1.213589,-2.611540,-1.285218,-0.203131,5.035845,2.767469,7.421447,-7.975583,3.288648,-9.466461,3.895154,-8.325100,-2.211814,-5.282158,8.377451,-4.540683,-9.443962,9.164201,-0.252200,6.204087,1.102773,-3.276011,3.130920,-2.156936,-9.827522,-0.029135,0.197586,-5.815251,9.038380,4.540410,-8.395134,8.335614,-2.324648,-6.399150,-8.369296,0.111613,-6.319519,-5.372777,-4.952657,-6.422825,-2.377934,-2.351635,-4.908991,8.871964,7.745245,-3.756561,-8.982395,-8.428796,-4.691599,1.850448,-1.317079,-9.145779,-9.581470,-4.497136,7.022286,3.329392,-3.334957,2.912610,-4.389767,-1.207693,9.832480,-1.005845,-1.400069,4.713426,1.720521,3.099018,6.391239,-3.974933,-4.073296,-9.614242,1.161510,8.796547,0.110210,-0.761832,0.306313,6.668752,2.543081,-7.140160,8.970646,-9.493110,-7.583016,-8.415985,9.019304,8.128510,-5.565396,-6.911504,-0.826340,8.498556,-3.095941,5.580006,-4.919729,8.340726,-7.058620,7.645151,4.780326,-8.122648,3.425497,5.181705,4.821691,-9.604829,-3.193152,-6.106985,7.172444,-1.258471,0.486672,3.628044,-6.143262,-4.269163,6.179885,-0.213668,5.972018,-9.564538,-2.412541,-8.944388,4.215453,0.593609,4.894067,-0.881223,2.090369,-4.340057,-2.999960,-4.912631,-0.902831,-2.495619,-7.630675,-2.578193,2.597676,-8.039175,-8.128126,-1.360837,9.380903,6.315059,0.345584,0.610676,-8.444055,6.550165,-4.100463,-0.484890,-4.626758,-3.507350,7.582532,0.807585,5.664165,-8.235564,-1.432334,9.378360,-5.296232,-7.208835,-2.491710,-3.511730,3.191135,-2.466646,0.264218,7.398489,1.127619,-5.410600,-0.232161,4.502768,1.968253,-7.835647,-1.816079,-5.588008,-5.801207,-0.651018,-3.770067,-5.610062,2.767044,5.452678,2.370111,-0.441030,-5.922749,3.473892,-4.132862,3.806510,8.658720,7.127403,9.842533,-2.313947,-6.485374,1.281732,-5.040442,4.815174,-7.179051,-1.087753,7.903162,-8.559499,-6.168502,-2.571715,-8.793356,-5.856374,4.849114,-1.235356,5.499114,7.837379,9.959567,1.412521,-8.760974,7.804329,3.143237,-3.762481,1.223703,6.231459,-3.896009,-1.155236,2.992176,-1.035542,7.194372,0.455471,-7.648147,-1.220080,1.933421,8.921495,-5.418068,-3.809876,-2.379696,-3.563723,5.147859,3.406327,-1.880597,1.909913,4.015103,-8.533813,-8.270908,8.470319,-1.827119,-3.208737,1.068553,6.980272,0.485102,-3.723051,-5.046981,2.261899,-8.872650,-3.435853,-4.265804,-7.972166,8.487950,-7.116424,-6.079401,-4.820374,-2.337862,0.816290,-6.142049,7.600915,-0.862079,-8.723856,2.744310,6.244402,-1.364545,-0.292877,3.823746,-1.181225,1.227876,-5.678252,1.861851,3.033489,2.100781,1.962451,0.071989,2.995052,-7.212534,4.386215,9.095741,6.083812,-9.107166,1.558196,-3.841157,-9.449737,-8.048071,-9.589698,-1.615011,0.589547,-2.191352,4.285773,-1.026156,9.857877,-5.975066,-1.260065,7.632302,-6.950731,5.642725,3.743324,4.743370,8.587406,-1.723203,8.250108,0.316353,8.729728,-9.701118,-1.939327,1.255782], dtype = "float64")#candidate|9194|(2925,)|const|float64
const_9195 = relay.const([-8,-7,-3,-7,-3,-7,-9,-3,-6,4,-7,10,-1,-6,5,-1,6,-3,4,6,-8,-2,-5,5,-2,-9,-8,-6,-2,-1,8,9,9,-4,1,2,3,6,1,-1,10,3,-7,-8,-1,-7,2,-2,-1,4,6,-1,2,-9,1,-7,10,-1,-8,7,10,8,-3,3,-7,-5,-6,2,-8,-2,-2,9,10,-8,-3,-8,10,-6,-6,-6,7,4,2,1,10,6,-2,-2,9,1,-5,-4,4,-10,9,3,-9,-1,-4,10,8,6,3,2,-5,3,-3,7,-6,-10,-2,3,10,4,-8,10,10,-8,1,6,-5,10,-5,7,-3,-6,-2,10,-5,-5,-9,-1,-10,-6,10,-1,-1,3,5,5,1,-4,-2,-2,-9,2,-6,8,1,-7,4,-6,-8,-10,2,-2,9,-3,-8,-8,6,4,-2,-5,4,3,-1,-6], dtype = "uint16")#candidate|9195|(168,)|const|uint16
const_9196 = relay.const([[5.645989,-7.116445,-9.635660,-4.726257,-0.377133,6.595187,0.209987,3.148676,-8.247745,-5.689011,-9.738666,-7.120086,5.833733,-8.360164,7.345774,3.186782,7.388473,-8.694764,-1.840785,-8.563162,-3.530423,-9.579093,4.719097,-8.355736,2.173051,-1.124511,-6.408180,-3.349366,8.922265,8.513137,9.735317,0.420429,-9.217251,-7.236383,-2.501845,8.505394,-4.601436,-6.500491,5.108919,-9.940711,-4.389608,0.237799,3.722270,-2.777386,-6.512629,0.668634,4.622884,7.661415,3.082815,-2.223749,-1.280835,-9.202896,7.983455,-0.159815,1.480937,4.953548,-8.133371,-4.302145,1.033638,-0.355306,-0.062803,8.469788,-5.680785,7.471261,-9.651859,9.555604,1.262772,-0.860245,0.740207,-8.202286,4.051202,-3.468497,-4.966897,5.978504,9.437301,1.002663,9.643781,9.575514,7.492454,9.159369,-8.411689,8.395337,-3.082156,1.093730,-1.803661,7.295945,2.201583,1.431246,-0.367071,0.957255,-8.550358,-5.882770,7.509901,7.753597,-6.004606,3.281437,-7.898794,1.302244,-8.378120,-3.210645,-0.032098,-6.620527,7.877973,1.914362,-5.400482,1.157459,8.944203,-6.025589,-0.448644,-0.798844,6.457507,0.771651,-9.745302,-0.112611,8.818170,6.180355,-2.774472,-3.940741,-2.368941,-7.461909,-2.714425,7.059127,9.482119,6.283883,-7.559416,-6.259724,8.836973,6.402309,-6.333069,-7.206197,-3.837321,5.370425,7.794279,-7.345731,0.580058,-2.238564,-7.378343,-9.343485,9.131805,4.757658,4.510700,5.293132,-2.855793,-8.187498,8.425736,-6.788822,-7.704550,-1.621991,1.357016,4.173517,6.260085,0.191190,-7.256327,1.864696,7.345015,8.802024,1.610919,2.858173,4.867301,-6.654950,-0.811521,-1.575943,3.402577,-7.835529,2.105592,0.664689,6.063957,-9.228691,-7.858097,8.290780,1.734041,-4.390287,-2.994416,-6.166370,0.523203,-9.322105,4.375206,5.024000,6.096686,-7.768589,3.722231,-1.852043,-2.369067,-5.726768,-7.198630,-6.353926,-5.360855,-7.085417,-1.834507,-7.946517,-7.195061,4.609969,2.142728,-3.562583,-6.916267,4.141743,-6.598855,-7.777144,1.584988,-0.694999,-7.192288,3.110540,6.915662,7.082555,-2.055601,-2.805487,-1.921696,-4.106741,-2.188147,3.109525,9.861614,-3.661852,-9.397307,-7.163095,-8.471004,2.714556,5.759963,4.920592,9.927564,-2.176681,1.709871,-2.803182,-2.599568,1.351809,7.037654,6.825170,-6.847488,-4.058560,-5.861546,-7.827503,4.519010,-7.330195,-4.366631,-1.238342,-8.020112,1.421379,9.466100,-4.965449,-3.005594,-2.848429,-6.342246,9.918406,1.976529,2.625237,-1.917989,-4.646715,9.423391,7.617123,0.069869,2.017119,-9.392705,2.625831,-0.318491,-0.683009,5.642941,-7.531317,-9.142216,-2.118331,-9.700786,-9.594115,7.814798,-3.153715,1.629166,-1.690057,7.811635,-7.368012,-5.255242,5.478838,6.785042,-6.374102,-2.507166,-3.624560,-0.590608,0.777392,-2.978194,1.048776,-2.709445,1.913616,0.671212,-8.044768,2.278075,5.869797,-7.513578,0.484677,-3.677887,0.764126,-3.866924,0.733531,-7.890970,9.094066,-3.445499,9.793627,9.664056,-9.382073,-7.739942,3.414329,-2.803387,-0.980775,-9.914296,-4.019916,5.794440,8.515003,-0.968443,-2.562945,0.942702,4.366960,-2.115736,0.673510,4.230571,2.649831,-6.681355,-4.147987,5.985772,-3.624366,-5.990505,-6.480678,-2.094326,9.356839,-1.486998,0.430864,-5.033508,-1.295556,6.091285,-6.841791,8.632015,3.743961,-7.547830,-3.028376,-6.733482,9.746670,-7.851118,-8.262554,-0.731630,9.487598,0.281971,-6.505061,4.593676,-6.814681,-8.058631,-4.446528,-5.779816,-3.483285,2.293969,-5.966907,8.641100,-1.141855,2.828175,-3.282993,-8.607711,2.409559,-9.641947,7.579213,-4.736029,3.039473,-4.726799,-2.786008,5.351790,-0.518112,-9.042146,-5.528570,-9.241455,0.808928,8.183543,6.321095,0.875620,6.185708,7.298065,5.512930,-6.873529,-4.934048,-4.673153,-9.765750,9.077554,-7.161847,7.832153,1.295709,4.458636,-5.503636,-7.683581,6.744701,-3.812771,-3.239872,9.997786,4.778049,-9.646092,0.561114,-3.740906,-9.061492,-2.710503,0.287492,1.154204,0.706664,7.217568,8.158989,-3.732222,1.550758,4.298555,-3.456669,-6.701208,-3.517063,2.242516,2.703465,7.387224,-3.533662,9.042909,-5.847756,-8.481906,6.703226,8.953407,-1.575874,6.755636,-0.479914,8.437029,-4.549682,-2.342044,-1.662444,-2.397471,1.459534,8.981740,6.900396,-6.406289,5.082573,7.423508,-6.114501,9.887854,-3.346169,9.735015,7.714237,3.081412,-9.929076,-2.077219,-0.537900,-9.508823,9.757203,1.188600,-3.538262,-5.970388,-5.960457,8.968168,-1.348749,4.306271,3.826190,4.460516,8.975154,-1.328741,-0.349517,-3.200033,6.230788,-1.530252,-5.671354]], dtype = "float64")#candidate|9196|(1, 450)|const|float64
call_9193 = relay.TupleGetItem(func_4996_call(relay.reshape(const_9194.astype('float64'), [13, 15, 15]), relay.reshape(const_9195.astype('uint16'), [84, 2]), relay.reshape(const_9196.astype('float64'), [450,]), ), 0)
call_9197 = relay.TupleGetItem(func_5000_call(relay.reshape(const_9194.astype('float64'), [13, 15, 15]), relay.reshape(const_9195.astype('uint16'), [84, 2]), relay.reshape(const_9196.astype('float64'), [450,]), ), 0)
func_3757_call = mod.get_global_var('func_3757')
func_3761_call = mutated_mod.get_global_var('func_3761')
const_9210 = relay.const(-5, dtype = "int8")#candidate|9210|()|const|int8
const_9211 = relay.const([5,9,6,1,10,3,10,5,9,2,3,-9,-2,-9,1,8,7,-1,3,-8,-5,2,-3,5,-4,-9,-6,6,-9,6,-10,-5,-2,-1,-2,9,-2,-5,9,6,6,2,8,-9,-4,6,-1,-2,-9,7,2,9,6,10,1,-1,-5,-8,-9,-7,-3,-7,-4,-7,-2,4,-10,-1,-4,-6,-8,1,-7,4,7,-1,6,3,6,5,-4,-5,2,5,-6,-3,7,8,5,10,-5,2,-8,3,5,-6,-9,-7,7,-8,-2,-9,-7,3,-9,5,3,-7,-2,-6,10,-8,-3,1,9,-6,10,-2,-4,-10,7,9,3,-2,6,-2,10,-5,-6,-6,6,8,1,7,-4,-8,-2,-10,5,-10,1,-9,-3,-7,-1,-6,7,6,-3,-3,10,7,-10,-9,-8,-8,-10,-2,-1,3,-10,-10,-2,-6,9,-1,1,-1,2,8,8,1,-2,10,-9,-5,2,9,4,-9,3,2,-6,4,4,2,-5,1,-5,1,5,-7,5,-3,9,2,1,-5,10,7,-9,-7,1,4,-10,-3,2,4,-6,-6,8,-7,5,-6,-3,-10,-3,9,-6,3,9,-3,-4,8,-5,-4,-6,3,-7,6,-3,2,-3,1,5,5,10,7,-6,-3,-3,5,-2,-9,-7,-6,-1,-8,1,-2,-3,-2,-7,-6,-6,-6,-8,6,-9,-6,2,-9,-2,7,-6,10,8,-4,-1,-9,-1,-3,6,-8,4,3,10,1,7,-3,-7,-4,-5,1,9,10,-7,-9,-2,-9,-5,-4,-4,-6,3,6,2,-6,-8,-2,8,-7,5,-9,-4,-5,3,-3,6,-8,9,-10,3,10,4,-6,-2,-1,-8,-5,-1,1,-2,2,4,-9,-3,-5,-5,-6,7,-5,-5,-7,7,5,-4,3,-3,-6,-5,1,1,2,3,9,2,-10,-8,-9,-10,-2,-3,10,10,-2,-8,10,-10,-9,2,2,10,10,10,-3,-6,-3,-2,4,7,-8,10,6,2,-5,-3,-8,-1,-1,8,9,10,2,7,7,-5,-10,-5,-6], dtype = "int8")#candidate|9211|(390,)|const|int8
call_9209 = func_3757_call(relay.reshape(const_9210.astype('int8'), []), relay.reshape(const_9211.astype('int8'), [2, 15, 13]), )
call_9212 = func_3757_call(relay.reshape(const_9210.astype('int8'), []), relay.reshape(const_9211.astype('int8'), [2, 15, 13]), )
bop_9214 = relay.floor_mod(const_9196.astype('float32'), const_9210.astype('float32')) # shape=(1, 450)
func_5287_call = mod.get_global_var('func_5287')
func_5291_call = mutated_mod.get_global_var('func_5291')
var_9219 = relay.var("var_9219", dtype = "float64", shape = (10,))#candidate|9219|(10,)|var|float64
var_9220 = relay.var("var_9220", dtype = "int64", shape = (143,))#candidate|9220|(143,)|var|int64
call_9218 = relay.TupleGetItem(func_5287_call(relay.reshape(var_9219.astype('float64'), [5, 1, 2]), relay.reshape(const_9210.astype('int64'), []), relay.reshape(var_9220.astype('int64'), [143,]), ), 3)
call_9221 = relay.TupleGetItem(func_5291_call(relay.reshape(var_9219.astype('float64'), [5, 1, 2]), relay.reshape(const_9210.astype('int64'), []), relay.reshape(var_9220.astype('int64'), [143,]), ), 3)
output = relay.Tuple([call_9191,call_9193,const_9194,const_9195,call_9209,const_9211,bop_9214,call_9218,var_9219,var_9220,])
output2 = relay.Tuple([call_9192,call_9197,const_9194,const_9195,call_9212,const_9211,bop_9214,call_9221,var_9219,var_9220,])
func_9230 = relay.Function([var_9219,var_9220,], output)
mod['func_9230'] = func_9230
mod = relay.transform.InferType()(mod)
var_9231 = relay.var("var_9231", dtype = "float64", shape = (10,))#candidate|9231|(10,)|var|float64
var_9232 = relay.var("var_9232", dtype = "int64", shape = (143,))#candidate|9232|(143,)|var|int64
output = func_9230(var_9231,var_9232,)
func_9233 = relay.Function([var_9231,var_9232,], output)
mutated_mod['func_9233'] = func_9233
mutated_mod = relay.transform.InferType()(mutated_mod)
func_8931_call = mod.get_global_var('func_8931')
func_8933_call = mutated_mod.get_global_var('func_8933')
call_9272 = relay.TupleGetItem(func_8931_call(), 0)
call_9273 = relay.TupleGetItem(func_8933_call(), 0)
output = relay.Tuple([call_9272,])
output2 = relay.Tuple([call_9273,])
func_9326 = relay.Function([], output)
mod['func_9326'] = func_9326
mod = relay.transform.InferType()(mod)
mutated_mod['func_9326'] = func_9326
mutated_mod = relay.transform.InferType()(mutated_mod)
func_9326_call = mutated_mod.get_global_var('func_9326')
call_9327 = func_9326_call()
output = call_9327
func_9328 = relay.Function([], output)
mutated_mod['func_9328'] = func_9328
mutated_mod = relay.transform.InferType()(mutated_mod)
var_9390 = relay.var("var_9390", dtype = "float32", shape = (10, 2, 10))#candidate|9390|(10, 2, 10)|var|float32
uop_9391 = relay.asinh(var_9390.astype('float32')) # shape=(10, 2, 10)
func_8931_call = mod.get_global_var('func_8931')
func_8933_call = mutated_mod.get_global_var('func_8933')
call_9413 = relay.TupleGetItem(func_8931_call(), 0)
call_9414 = relay.TupleGetItem(func_8933_call(), 0)
func_5310_call = mod.get_global_var('func_5310')
func_5313_call = mutated_mod.get_global_var('func_5313')
const_9431 = relay.const([6.889991,9.610861,-2.612116,5.727394,-6.439774,3.627415,-8.874844,8.707771,-2.863341,-0.350636,-0.973919,2.885645,4.484732,-3.403477,-2.781054,1.817759,6.681672,8.490466,-9.592452,0.004568,-0.705147,5.469379,-0.235576,-7.804187,-3.982720,3.775132,0.741273,-9.671726,-3.316008,-5.956950,5.757260,2.008245,-0.324523,6.315793,8.826451,6.650085,1.052303,6.295078,8.780537,-8.858131,-4.246083,4.239790,-1.451036,4.361346,-4.926057,-5.992939,9.880736,9.121506,-5.809478,-3.546004,6.030741,-3.279442,-6.254099,-0.116461,7.714112], dtype = "float32")#candidate|9431|(55,)|const|float32
call_9430 = relay.TupleGetItem(func_5310_call(relay.reshape(const_9431.astype('float32'), [11, 1, 5])), 0)
call_9432 = relay.TupleGetItem(func_5313_call(relay.reshape(const_9431.astype('float32'), [11, 1, 5])), 0)
func_8931_call = mod.get_global_var('func_8931')
func_8933_call = mutated_mod.get_global_var('func_8933')
call_9471 = relay.TupleGetItem(func_8931_call(), 0)
call_9472 = relay.TupleGetItem(func_8933_call(), 0)
func_8163_call = mod.get_global_var('func_8163')
func_8168_call = mutated_mod.get_global_var('func_8168')
const_9476 = relay.const([[-6.229761,-6.590747,6.247526,3.286679,2.923683,9.643939,8.582707,8.408917,2.875952,4.557203,5.523050,-8.819783,-7.212695,-4.522802,9.909317,2.692341,7.144876,-8.801947,7.281337,6.195563,9.088434,-1.622590,1.587679,7.001783,-8.725547,-0.954464,-0.122973,-0.718578,-3.665822,1.238792,2.563864,8.215692,-3.189765,2.882534,0.120246,2.924766,-5.470134,-5.204683,1.846209,-9.123311,-5.399766,2.475495,8.708602,7.229616,-6.390709,-2.693145,4.468981,-1.214090,5.123317,9.487659,-5.209898,2.212410,-8.039329,-4.977172,7.365767,-8.306036,6.082416,-5.797584,6.516473,-7.769540,-5.874426,0.629292,-5.034334,-3.983087,9.676212,6.305373,-5.347783,-4.261132,-2.072934,-5.750378],[-8.814450,1.112520,-6.901726,-2.160443,1.066933,0.624388,7.408562,-9.499685,-9.166251,3.747567,-2.320490,1.781811,-9.143018,-1.384054,-6.935029,-1.733415,4.061525,9.783836,-1.149983,4.536794,-1.220256,9.366563,2.775641,-1.773857,-2.692867,9.780337,-7.028641,0.944195,9.390806,3.375381,-7.696467,-4.414827,1.175870,9.214854,4.981405,9.555859,5.600934,-3.776932,-4.454419,-1.024029,-9.954086,-4.489504,-8.146669,9.107819,2.396875,-2.165184,5.456306,1.800394,-5.691565,-7.009634,6.398406,6.899917,-7.549042,5.531411,-8.642136,-0.722397,1.362806,2.860053,-1.752084,8.226473,1.719114,-8.353592,-3.613331,2.965881,-1.359452,5.350473,-2.724769,2.730044,-7.134372,0.985003],[-3.629323,1.155897,-9.873047,-7.773503,-2.487643,-6.755329,3.297495,-0.756208,-4.621050,-3.344943,5.233283,-3.913189,-3.059538,-2.091243,-3.037602,-8.756368,9.704988,0.857009,-3.340207,9.878496,8.080343,5.318897,-7.219861,2.221038,2.293488,7.808330,2.385095,-2.101552,8.481632,-5.025849,9.376422,9.329806,-2.216003,-9.054405,-0.834770,6.927616,-5.148236,-2.787556,-8.903007,5.555395,8.562896,-6.169560,1.744712,-5.220192,-5.005913,-5.172900,7.928932,-2.677161,-9.119790,4.951701,-5.641989,8.225200,5.148281,7.639610,7.627373,0.219175,-8.657018,2.189134,4.040844,-8.934089,-2.684274,2.757099,-9.616492,0.125936,-4.663011,8.870830,-9.918855,8.432676,-2.607365,6.044808],[-7.384490,-9.918603,8.786097,-3.843609,-5.486909,-3.311883,7.943082,-1.551567,0.303780,5.592116,-9.090388,9.733499,1.172530,-5.572541,7.030858,1.897171,8.416197,-1.308904,7.254799,0.112530,-1.532691,-0.906154,1.790606,8.182762,-6.043519,-7.199090,-9.910051,6.088303,8.860376,3.312945,-4.872228,-9.118802,2.379305,-4.074758,6.929440,-7.096855,1.398437,5.519406,6.003124,1.438791,6.643237,6.171889,7.045651,3.816861,-3.292883,-3.834457,4.305926,-5.953156,9.628908,9.504565,-5.013701,-3.291401,-9.148088,-2.864245,4.656952,-7.930435,-4.738678,-7.714815,-5.877419,-4.298081,-5.274136,5.254735,1.682614,-7.809992,-9.546654,8.481338,3.612014,-9.869007,3.368141,-2.714269],[5.875181,-4.500159,-6.846189,7.761587,-9.815494,9.319707,-1.932929,6.674425,0.183644,3.611608,4.199237,-8.895187,-9.863236,0.457659,-0.041358,-0.162738,-6.282050,1.335019,5.479278,7.270601,-5.898585,2.029846,-5.626991,-1.177402,-5.037025,3.617385,-0.869328,0.721387,5.022931,-3.270718,-0.610667,6.013557,8.740670,6.530146,8.588528,8.677149,2.479377,6.608688,7.386460,6.544769,7.972803,6.777711,9.669943,-0.329806,3.585251,-0.665448,-5.977151,-2.790680,-8.139590,-2.793108,2.396578,5.512078,-5.107914,-4.774379,-8.287046,-6.612903,-5.172672,2.686223,-0.465574,-3.949600,-6.536655,8.399293,-6.751134,5.087393,8.991563,4.037131,1.208790,9.021455,8.478396,2.859828],[-0.377785,1.704505,7.110523,-5.209954,-4.797803,-9.863337,6.261229,3.574773,5.935264,-3.765994,4.494060,0.028239,-8.265490,-5.015601,-2.856444,2.564523,8.987815,-8.337972,8.413298,-5.898907,3.092336,-4.831077,-5.749134,4.336074,-0.683634,-7.336759,8.465488,-6.025402,5.099906,3.526838,-0.852424,-2.759576,3.982915,8.395525,1.673849,-0.285125,-6.682174,2.382281,0.440372,-1.077665,-9.731431,7.253846,8.312017,4.580421,-5.549901,-3.061689,9.993741,6.556857,7.415734,0.671811,-4.511287,-4.086018,-6.565797,-8.020537,-1.324557,-8.868184,5.812019,-7.220478,3.998114,6.221054,-9.849808,3.331576,-3.657094,-3.612208,4.069016,-6.356147,8.582992,-2.304001,-5.803120,5.275092],[9.532440,2.901004,8.158948,4.487908,6.087116,8.400822,6.744142,2.841622,6.168350,4.504688,5.191705,-0.569476,-6.389509,8.441758,1.068700,9.803971,-9.326178,-1.613163,-2.694643,-3.553671,-1.368894,2.419482,-0.488344,-7.162081,-5.900115,-9.913474,0.814507,9.238740,2.688421,1.827896,9.685304,-8.767234,8.441697,-9.547426,-6.525512,-1.334232,-1.359593,-3.960841,-2.655182,-6.878988,9.984770,4.875682,9.690860,-8.819771,2.760303,-6.245473,0.224709,-5.288197,9.900122,-1.670004,7.341736,-2.447572,8.271818,4.315121,3.388769,-1.688202,-6.262511,-8.213742,-3.240845,6.213117,-1.940897,1.969778,-7.206472,-9.780204,-8.689492,0.869632,8.952394,2.515191,0.529351,2.309322],[-0.311324,8.128961,4.403286,-8.593404,-2.639126,0.018023,9.111068,-7.940742,-3.353802,9.534647,-9.373176,-4.680306,2.705496,-4.008983,-3.101308,7.010446,8.695730,-3.746295,-0.726413,7.859622,-9.721968,3.722006,5.792965,7.526493,5.158955,-4.927336,1.713748,6.718093,-5.442681,9.872125,9.775314,6.068877,7.874806,0.371054,-4.188727,7.198903,2.801535,7.753444,-3.422458,-2.263010,9.237116,2.701449,-2.319250,9.417778,-1.084904,8.947249,-2.538126,0.663686,-9.574950,9.198982,2.247351,1.741825,-7.651150,1.182177,7.830244,-2.131632,-3.652636,-4.171909,-6.346667,1.555580,-3.015342,1.086538,7.094420,1.979174,7.500029,-8.207902,7.615037,-0.912745,-7.941547,-6.716726]], dtype = "float32")#candidate|9476|(8, 70)|const|float32
const_9477 = relay.const([-9,-7,-7,-4,-1,-1,4,3,-10,-5,4,8,-7,-10,-1,8,10,-9,-6,-1,4,1,6,10,-3,-6,7,2,8,6,-9,-9,2,7,1,-3,2,2,8,-1,1,9,1,9,-5,3,9,-4,-2,-9,1,-9,-7,-10], dtype = "int32")#candidate|9477|(54,)|const|int32
const_9478 = relay.const([[5.071203,-8.731111,-9.854769,5.461005,6.430052,-6.583527,1.165367,0.468319,-4.481169,-1.198672,5.564078,7.734000,4.278023,3.848065,-1.077775,-7.071072,-9.000455,-1.084862,-7.982751,1.755895,-0.313768,-0.892084,9.262018,3.086225,6.658685,4.160234,-4.799571,-3.785298,3.561681,2.491570,9.736003,5.125032,4.911348,-7.360900,8.294786,8.455686,0.827084,8.423748,7.269652,-8.665602,-8.607945,3.978358,-1.339213,-6.498262],[9.410137,-3.524702,-6.800411,5.746174,4.177513,6.623143,9.232619,-3.960187,4.294567,-6.515969,-6.502560,6.945884,-6.507305,4.831901,-7.991196,-7.630818,8.421924,-4.543294,-1.890856,1.412285,0.057643,-0.456091,6.982846,3.538946,-1.519467,7.745895,3.337089,6.477398,6.484883,-2.685543,6.643660,-4.511704,5.357203,-3.136700,-6.693453,9.639122,-8.398054,-1.608228,-2.240147,-5.411145,0.938049,1.415728,-3.172753,-1.765102],[8.191229,-4.093756,5.862736,-0.546150,7.515237,-6.174043,-2.079315,-9.235739,8.282396,2.770009,-2.240663,-4.515864,2.200184,-3.283832,7.722433,-3.005937,-9.466221,4.491547,4.922477,-9.115930,-1.296443,-8.709291,1.550817,8.329403,8.304177,-5.376675,9.916435,-7.022361,2.529368,-8.054988,5.666859,0.673337,0.300132,-8.538304,-5.460513,-1.419703,8.871989,-2.617230,9.522662,-8.225350,-7.483194,-1.060303,0.835178,-8.469721],[-6.018723,8.275945,0.972716,6.393183,0.994576,1.513896,-8.604590,-2.803731,-2.350061,-7.056408,8.431916,7.811313,-5.413984,7.246287,-1.848176,-8.023388,-0.298602,-9.574880,-9.042895,4.427524,4.385599,-4.490904,-5.491291,-3.071472,2.003343,-6.052412,7.744427,-7.602068,3.556121,2.774517,0.190129,-6.346465,-3.417640,-3.314370,-3.442656,-5.550163,-8.189186,-9.773375,-9.422157,-6.165707,3.019630,-3.005137,-6.595049,-4.601789],[-7.359648,2.461253,1.748867,3.157330,-1.133538,5.271818,0.636062,9.220430,-9.852465,-2.869478,-5.902176,-3.464512,5.463174,-7.700728,4.789246,-9.508842,-0.099946,2.066110,8.225675,0.274882,-8.861495,2.720933,6.620668,-3.246341,-5.910832,-2.376720,1.364769,-9.063121,6.070732,-3.290592,-9.653904,-2.792733,-1.908610,-9.302493,-5.178574,0.163170,-5.750042,9.032914,8.808644,9.363380,-8.312767,-5.082128,-9.113809,3.926971],[4.091729,-1.824733,-1.635299,0.380598,5.886433,-2.965880,1.241866,-5.701810,-3.793245,7.586060,6.385797,5.670035,-7.521846,0.347249,7.371664,-7.572377,-8.079353,-0.707670,5.640910,1.881482,6.904487,9.113547,-3.699332,9.245184,8.427434,-6.432266,6.834746,-1.145504,-4.156794,8.672463,-0.319643,-5.947940,-6.966680,5.278833,-9.136855,-1.540156,3.749926,5.846561,-7.850803,-9.191630,0.347004,-3.076326,3.654976,6.590273],[5.932667,4.290730,-2.575477,-2.783205,-4.012093,5.248230,2.948746,-8.823097,9.331477,-8.954359,-0.868551,3.251390,1.644246,7.188169,-0.858968,-6.777170,5.704466,-7.347624,-2.206756,-8.122055,-2.191133,2.728719,-5.882812,-1.903174,8.459849,1.408667,-4.420017,-8.154410,-6.119618,-1.572007,-5.591944,-6.204856,-1.049650,9.780092,-4.390569,6.668136,1.778545,-6.975804,-4.627412,4.732554,6.075451,-3.128730,3.564008,0.038906],[-7.835259,6.316225,3.210475,-6.795661,-5.321811,-4.910977,1.970791,1.257366,-4.930446,-7.554345,2.901997,0.712758,-9.224314,-0.447543,-8.776793,-3.616999,8.098413,5.932461,7.984027,-0.969709,3.890833,-7.763026,-1.492583,-6.218230,2.467283,8.125401,-3.583632,1.416238,-4.833767,8.297142,-0.585162,1.792716,4.641287,-7.979064,-0.399994,-7.419650,5.861412,6.899016,-9.723830,-8.796262,-1.538840,-9.574902,-2.665317,-3.082930],[8.551684,6.814499,2.193838,5.866387,4.071429,7.764435,-9.476384,-1.337155,6.543513,3.080044,7.423486,3.505421,-9.419081,-2.923207,-0.480824,8.181908,-1.499506,0.561127,-0.738358,-0.851602,-3.478712,7.625731,2.234298,-0.443355,5.733260,6.445089,6.058654,1.126565,-6.922392,8.356851,-1.915627,8.658548,1.888136,-6.854414,9.538530,-6.352203,-7.405878,1.000300,9.956319,-5.631203,9.714583,6.116626,7.990939,-5.258501],[-8.842018,-7.014637,9.969279,-6.456001,-5.785261,-9.485526,0.487996,9.820208,-0.170205,-3.841684,-6.346037,3.431816,-0.981076,-1.430312,9.438428,9.782115,-5.567016,-1.740910,6.923421,8.146298,4.295559,-4.120131,-2.277331,-0.631070,-1.679011,-2.038571,-5.159869,-7.367160,-4.389868,-8.348675,-7.019346,4.538156,0.626942,-8.581048,-3.561752,-9.095424,5.293617,3.188388,-7.785688,-5.157791,-9.905903,2.681499,-2.000196,6.451189],[-8.136744,-1.590861,9.097616,-3.900579,5.755244,-4.438835,-5.606061,7.269894,4.063454,1.293383,5.649325,-7.372089,-6.373537,-8.974597,2.632307,8.760521,0.388894,-8.690086,7.908178,5.638077,0.044057,8.791147,-2.258498,2.925610,8.845100,8.304535,1.956434,-6.615987,8.123324,-9.240299,-3.191769,-0.665150,-0.567539,-8.341506,6.973629,-5.052566,8.632297,-8.048307,6.433222,3.819311,-6.974679,2.107561,-3.360485,2.386878],[-5.499966,5.777640,5.652628,-8.060289,-4.057226,-6.906474,-6.153060,5.245828,-4.353791,0.297419,8.638269,-0.931356,7.342660,8.249577,4.168595,2.893005,3.555128,-7.951032,-8.528815,-3.736291,3.398172,0.974202,7.285151,-9.844766,-5.406966,0.128607,-1.353497,-9.658728,7.522405,-2.351133,-5.206237,-7.801609,-4.318511,5.501899,5.185906,8.241646,-2.461987,-2.889192,6.906318,7.349731,-6.794210,-6.504752,-1.373952,-6.865721],[-2.474663,-6.564055,-5.009168,-8.630165,2.946459,-5.887424,9.432453,8.460511,-4.691196,-2.931056,-2.023401,3.071795,-6.982786,-3.530821,-9.878944,5.800345,2.467871,-3.144749,-1.870717,-0.880787,-0.121863,4.504268,-6.957504,2.037020,-1.395356,3.723278,2.233356,-9.238758,-2.246472,-6.967222,4.086977,1.242774,2.231717,9.647190,1.511503,0.010662,-5.116597,1.092129,4.027896,1.575371,-0.039770,6.499697,6.040815,-3.858858],[-0.604798,5.651868,-1.741397,-8.180497,-1.993019,2.055094,3.181814,1.538288,6.426229,-4.412954,6.978284,6.813900,-4.396285,9.850769,-7.060836,2.640923,-4.422101,-1.745979,-7.452514,-7.293163,-4.434352,-8.728235,-7.449939,6.704857,-9.801192,-7.759451,6.314294,-4.938853,-7.104670,-5.729690,7.797398,9.747501,-3.854726,-0.141462,-0.856742,1.838939,-1.211273,-8.865353,4.397707,2.681911,-1.688391,3.842930,3.474859,8.535115],[0.179063,-2.861097,-2.124673,-5.963271,9.944957,7.116853,3.266801,9.610798,-4.637814,-1.772208,6.712737,7.945091,6.172121,-1.812442,-9.342429,4.096767,1.474242,-3.207730,4.417651,-4.085266,5.833272,1.306132,-3.932350,7.478206,-4.954356,-6.840657,5.455764,6.548046,-8.113377,4.300287,-1.494176,-8.470445,-3.656855,2.095836,9.980924,-4.666861,1.703062,5.105786,-8.283481,-2.683653,-3.729048,6.063678,-0.486742,-6.810660],[-6.066187,-2.438833,-4.049680,-9.132751,7.853162,4.108796,8.120279,-7.255793,9.491034,-9.007012,-5.995838,-1.545209,7.057884,-2.336476,5.957802,-0.956981,-0.043118,-6.844136,2.614286,1.399438,-9.356660,4.452622,-8.675414,-4.501791,4.476870,-9.602516,4.998563,-3.921792,-0.095430,-2.492777,2.214195,1.575109,0.115479,8.778758,-3.274223,-4.619783,6.753083,-1.944030,8.219492,0.900696,4.406346,-0.867445,-6.734626,7.347084],[9.296544,-9.970366,-3.326822,-4.654426,8.322332,-9.050422,-1.978986,-5.328474,-1.349002,1.340874,3.223709,-7.015447,-1.124338,2.179724,8.729268,8.897178,8.964275,2.051213,9.053759,5.022638,7.634847,-2.468684,-5.275221,0.573057,6.506310,-5.848361,2.302622,0.159081,2.655304,6.691740,2.906878,2.207846,-1.192533,-3.207345,-2.864095,3.813359,1.273454,8.366035,-9.388805,-7.433515,-1.108464,0.923509,4.557474,0.896649],[0.102185,7.020071,-3.720340,3.052705,-6.000837,-8.754609,-1.851678,-3.125597,-7.358095,3.724784,4.843078,-6.014878,7.496025,0.712274,3.314581,3.074439,3.734319,3.575099,-1.702112,1.408675,9.578105,3.975077,4.043904,6.734839,-1.195914,-9.595373,9.078911,4.622142,-7.779643,3.087764,9.841900,4.654284,-3.037163,-3.958084,4.417375,4.448392,-8.152503,-4.735804,-3.030543,1.215811,0.308095,-3.215957,-9.180122,6.104726],[5.921257,-5.107602,1.790811,1.254062,2.414308,-7.954869,7.621777,3.469876,1.007104,1.875155,1.876953,-9.460045,2.901060,5.250813,-8.774401,-0.607399,-9.430700,-3.041542,-0.869678,8.771017,-1.573136,4.121611,7.727081,2.659580,-2.554025,-1.363503,9.725369,-9.078832,-4.103708,-5.712949,-6.941489,-7.525022,-4.122005,5.050776,-3.991391,-3.555583,-0.854650,9.962171,-8.023656,-7.678460,8.442543,-3.198100,5.241021,2.455807],[0.179050,-2.585574,9.310638,-4.952152,-4.934687,-2.920909,-7.397163,9.070077,-8.796088,-8.042897,7.934799,-7.411411,0.987348,0.801556,1.641178,-3.059292,-1.026842,3.890997,5.785684,0.291728,3.741354,3.292426,-6.671236,-5.354036,2.527986,1.462301,-2.446976,4.438065,4.772291,-2.218517,-2.233594,3.252217,-3.438284,-9.347463,-5.351108,9.468040,5.588382,4.017258,9.504631,2.216961,-0.162639,4.995982,-7.921611,-0.619510],[8.146393,-7.117587,-3.068471,-2.937939,-5.285332,-8.597193,1.455726,-8.146489,-9.445184,-5.563303,-7.619887,-8.886039,1.035526,7.624044,0.622121,4.373959,-5.474456,-4.662633,9.198685,2.909288,4.957937,-3.534298,4.567665,8.493446,-2.244845,1.001128,5.995616,6.888013,7.621626,-2.726912,-9.504947,8.244312,-6.901105,0.184034,0.907287,3.623079,4.605345,7.238654,7.611503,-5.078668,-2.949233,-0.772113,-4.495232,-4.335751],[-5.345159,-6.100056,-3.485676,1.381620,3.709070,-5.301522,-4.596050,1.546364,7.997787,-0.692013,4.278286,-0.635067,1.728143,-0.219964,-8.537400,8.666584,8.544414,-2.006993,-3.895995,-5.473776,-8.005540,-1.070625,0.048759,-8.831012,-1.643541,5.041262,-8.210645,7.331456,-0.330565,5.922692,2.155510,4.259580,-9.078957,-1.957615,5.465887,-0.181468,-1.599127,-1.291175,-1.884928,-0.970616,-1.610813,-0.472757,-9.703500,-9.747436],[3.707244,4.260783,-8.422648,-0.684274,-6.456571,6.011446,6.137924,-0.329019,-6.590790,1.034320,5.608506,0.318123,2.685043,-6.116037,-7.665325,-7.292285,-2.343275,-2.128521,-1.452754,8.183442,3.276692,6.315426,-7.320411,-7.981770,-5.578987,7.525018,-8.346936,9.333039,0.501857,7.293968,-1.201665,9.270238,7.974353,-1.357296,-4.179900,0.356888,-3.107242,3.050501,-8.740138,-8.343151,5.981523,-6.896471,-2.315917,-9.159105],[-7.518275,6.180850,1.591307,0.043111,-5.035683,0.751529,-5.153041,7.106806,8.689259,6.740237,-9.102938,-8.620754,-8.093007,2.664217,0.799902,-0.981424,8.570773,-7.648228,-2.821155,-4.080554,0.514323,-8.584715,-0.321828,2.081525,-3.828586,5.180063,-4.536202,-8.861343,-1.657670,8.947362,5.487338,2.022428,-0.873026,-7.805911,-0.691510,9.159460,-3.390974,7.922003,5.177927,-2.558486,1.153643,9.108522,5.204792,-9.236984],[1.736255,5.892689,4.332475,-8.512320,2.041115,6.620097,6.740992,6.577593,-3.029608,-6.341924,9.913082,9.837060,-5.833304,-2.073400,-2.172302,3.509807,2.461185,7.247121,-2.249239,-9.636856,-5.719573,4.828781,-1.976749,0.302431,2.588881,5.483728,-7.173090,5.438366,8.636921,-9.150850,1.232660,9.342613,2.478765,3.191503,-7.544038,1.346218,0.040337,-5.346451,5.596392,-7.175775,6.485917,-8.377049,-8.668203,-9.185090],[6.263857,-9.592298,0.454510,1.557306,-4.965646,-6.069767,-8.841652,9.184285,-0.708082,-9.709680,9.022392,-8.029866,-8.422802,-0.043644,-4.458307,-6.244108,4.250685,-9.710506,-2.679112,3.285788,5.367514,-7.709558,2.730652,2.117705,6.995805,-4.939377,3.178832,-8.752703,1.193836,-5.491366,1.506727,1.375447,1.799571,6.928127,-6.208821,-2.765772,-5.913952,7.182308,-6.994695,2.401461,-7.461656,-6.282307,-8.351016,5.125783],[6.608416,-0.073874,-2.154914,-7.974180,4.089425,-3.028758,-5.913065,2.125903,1.444704,5.415381,-9.241704,6.441071,-2.053851,-9.474285,-4.053201,-1.750626,0.437554,8.761756,-9.060212,-9.821220,4.848609,0.613916,0.637725,4.936666,-7.953902,9.544045,8.701307,6.444829,-8.530508,7.780401,-7.150345,1.820524,-2.033817,9.148789,-1.354085,-9.646558,-2.463602,8.862371,6.146592,-5.414897,8.224667,-2.930755,0.992855,-9.788608],[0.586857,-8.575278,8.064283,4.183484,-2.823275,8.846074,-4.166328,9.867384,2.007425,3.836021,5.705371,-9.632666,1.994584,7.265106,6.952489,-5.869138,3.274716,-7.291011,-9.522520,-0.401193,-7.914930,5.012848,-2.504631,-9.241859,-7.819889,-5.416512,4.962146,-6.467220,0.202774,7.975746,-3.853256,0.680899,7.504823,-2.798223,6.712726,-6.939850,-2.709872,7.698381,-8.011310,8.313803,7.641821,-7.227861,-4.892493,8.759449],[7.739613,-7.954278,-3.800592,2.696125,6.147471,-2.772402,0.493230,6.646737,-6.249359,-3.300586,-8.628077,6.822221,3.530487,-8.656917,0.719884,5.599970,3.311506,-6.704128,6.468482,9.152496,7.034975,3.702606,-1.252427,2.552921,7.086823,-6.547733,0.838422,1.016968,5.725583,-9.730693,5.861096,7.568387,-8.862916,8.536535,-6.987269,-5.093598,-3.220713,-1.473768,-4.500298,7.076497,5.040867,2.882422,-8.140411,9.832661],[2.293746,-0.888630,2.792666,7.085264,0.930912,0.482138,6.156355,1.007171,0.295934,-7.343507,6.190599,-3.647075,0.212983,3.934582,-5.059368,-6.029130,8.331496,1.466999,-0.510016,-0.273753,0.429888,5.285617,4.063226,-9.467072,-4.201611,1.666394,-7.279277,-0.494630,3.156239,7.587912,-9.139474,4.649802,-4.278045,-3.402074,7.334613,-6.063833,-8.996231,8.427098,1.875022,0.411026,4.175453,7.747514,-4.781613,3.927681],[-2.547491,5.621351,-7.766268,-1.664941,4.861426,-1.675053,9.155590,2.182315,-1.191958,4.721818,-5.343168,-2.990417,3.396792,-8.708114,3.849811,-9.438647,-1.791977,8.269442,-4.496441,-1.600418,-3.003007,1.215834,0.850024,-9.247873,1.339825,8.942622,-2.206994,8.270886,-0.307659,5.462057,-2.957626,3.776061,1.825712,0.462403,-4.012321,-8.242656,-7.358218,-6.904390,-5.903706,-0.718353,-3.405390,-9.435914,3.411759,2.800966],[5.809242,2.852669,-9.801224,-1.731942,4.031307,3.902301,6.445210,2.822306,2.523247,-5.968289,-5.667942,-8.729886,-0.763976,2.915498,-4.633929,5.823731,9.123771,4.442697,0.572374,3.339345,-8.716342,-2.703501,-6.189785,9.474453,9.183606,-9.465918,-7.869942,6.139490,4.198640,-8.505973,4.962470,1.042621,8.054141,-9.194977,-2.994258,3.140713,-3.830460,2.070567,9.983032,1.333293,-7.917466,-7.585125,-2.547643,0.659912],[-3.940785,3.219780,-0.178076,-3.045483,-2.815895,-7.600225,6.221421,1.064645,-7.690355,-6.208079,9.861731,-1.354727,0.513651,8.604830,-9.183093,8.455344,-8.110016,-6.503840,8.313424,-9.622280,9.192055,6.647018,0.097205,5.971463,2.047180,9.680078,5.124593,-9.350284,2.511271,-9.258820,-8.745078,-0.078562,-2.840694,8.026854,-1.081263,4.438920,5.941235,-9.707808,2.184910,-0.267249,9.860503,-8.120120,1.604863,-3.234677],[-6.633346,3.805138,-0.603912,9.809527,-7.248505,8.487025,6.410605,1.681582,4.562599,0.601593,7.741559,0.167694,2.266126,3.675388,-3.695939,7.500372,-4.430032,5.961047,1.861625,1.301706,-4.982796,-7.229660,-9.231115,-3.589154,4.988306,-5.202423,5.324616,3.517178,3.573077,1.182705,-1.405715,-8.642548,9.117219,-7.883728,7.281201,3.489408,-7.705635,9.515516,5.625093,-7.124637,1.553558,2.853683,-5.253765,6.461927],[0.157569,8.254270,-3.613043,-2.458297,9.193928,-3.599908,-4.130128,-1.922582,9.166835,3.966858,1.659848,9.853784,9.699394,1.810486,3.824109,1.201845,-5.720266,4.001979,9.368645,-0.384694,-6.930997,0.174563,-3.957510,6.858588,8.189000,-2.110476,-1.268835,1.207316,-8.820753,6.873158,7.283778,-2.139693,3.888464,-0.516834,8.817321,0.199784,2.750541,0.002463,3.825314,2.399445,2.733775,1.867952,5.111420,3.104169],[-4.000188,-0.680175,-1.771445,8.630787,-6.824924,-9.324673,-7.172893,9.198304,-4.626397,-5.196816,2.970003,-3.825514,8.295003,-2.156482,-4.449995,6.023725,-6.689925,-8.186410,-7.412261,-9.953106,-4.718163,5.493294,-1.809111,-0.366786,5.950826,-3.366570,5.840186,1.843621,7.369004,0.174689,-5.790921,-1.684614,-8.825093,4.345186,-3.029381,9.481528,-8.007207,9.071177,9.080687,0.457640,-8.064569,9.665104,-3.368317,2.906007],[-2.164098,4.875862,3.695688,6.972624,-1.326910,-8.849709,-7.556499,1.404185,-1.289329,-4.915723,0.590097,-8.202718,5.471726,7.879663,3.079503,4.657824,6.076948,-8.050384,-1.873174,2.200904,-1.625398,8.678178,7.833674,3.786766,-4.130923,-3.392011,3.074427,3.930872,-5.037490,-1.377115,7.847085,-5.432254,-7.181058,1.018705,-6.090206,2.694583,3.669173,-5.011735,-3.275143,-9.218331,7.916375,-8.331507,-1.943579,7.835624],[-9.850770,-2.425543,-1.382393,-1.154498,1.355606,3.755588,-2.277531,-0.109403,-5.550459,9.745721,-1.704727,5.412485,-9.797953,-1.839192,7.580924,0.739329,9.576362,-2.012122,-7.865808,-9.333548,-2.162347,-8.362783,-4.135235,-0.188299,1.511216,3.243484,-9.901339,7.898146,-1.205198,7.447986,8.389775,5.727554,-4.561585,-0.582841,6.318709,-1.604763,2.697563,-8.399075,0.604058,-8.089923,-2.785620,-2.466377,-3.875839,5.628828],[4.590532,-7.412311,-7.175033,7.514164,7.564357,8.601578,-3.899339,0.950448,-5.105380,6.659958,-0.311269,-5.474074,-6.788096,5.848552,-6.873950,3.782810,1.016377,8.666540,-2.320546,-5.292940,-5.087806,-2.585037,6.040041,-2.436554,0.268733,3.364764,4.868487,4.136651,-9.275680,-5.320390,4.856903,-0.416823,-1.231095,-5.161125,-0.448893,-2.086035,2.413831,9.366430,-8.124697,-5.537031,-0.243032,-1.675157,-0.267459,4.485943],[-5.583767,1.990830,4.885266,6.482941,8.764150,-8.857101,-1.032012,3.552255,8.562258,5.268283,-0.989883,-2.879231,1.304372,2.924875,-4.540637,8.780656,-8.962805,-0.408390,-1.702383,1.510584,-2.325398,-3.200398,2.566034,-7.220236,-8.546802,-0.575255,0.117113,9.819733,9.060631,-6.182299,9.314957,5.038564,2.265954,-0.374772,5.811477,4.822375,8.819452,-1.199883,9.347222,-2.324805,-0.127698,2.598437,4.411733,5.510118],[0.078643,-7.430713,5.044659,-7.015831,6.858655,-3.551405,3.502148,-2.403174,5.308807,1.046717,0.965660,3.577165,-6.037857,-5.054884,6.106820,2.208045,7.433457,-4.726834,8.840997,5.397935,5.584692,4.676006,-6.186181,9.958657,-8.622066,-0.565228,-0.915148,-4.248351,-9.691825,-1.720940,-4.207736,-6.872353,9.738162,-2.970187,-6.451541,-1.975312,0.741415,-6.239583,2.561634,-7.566601,-1.332653,-0.154401,-3.585670,6.833450],[2.595750,-5.256988,9.771584,7.933614,1.845448,2.334112,-0.172123,7.940523,2.113899,3.869822,-1.481315,7.937563,-0.943918,6.282168,-7.903906,-2.399483,6.753803,0.438863,0.005009,4.194540,-5.206041,-8.507979,-5.359958,-4.339212,3.246047,7.121232,1.855577,-3.410920,-5.681853,-7.758866,3.084645,-9.350611,-4.476831,4.006857,-7.545513,-4.532759,-8.312833,6.924520,3.286721,-2.658317,2.625823,-3.703246,-9.297486,9.990334],[-3.521672,9.162121,-4.896008,-5.518524,1.227225,-8.851295,2.509631,-9.215817,-2.544560,-6.282665,-1.584172,-8.700540,-8.074610,-4.331345,-0.623926,6.220402,-7.187810,-2.359290,-5.381706,0.045904,-4.654213,-2.753561,-7.905007,1.516527,-6.058866,-6.106268,1.373531,0.686951,8.750980,-0.677168,1.000019,1.801968,5.134846,-0.356108,-6.175999,8.032500,9.293031,-7.393521,8.014743,-5.500146,-3.866688,-9.936630,-6.419814,0.093136],[3.260893,9.884770,-4.766369,-2.831596,-5.930549,8.650001,-8.772107,8.260084,-5.846232,-2.392464,-7.655339,-2.851641,2.959684,-1.383821,-4.487330,-5.436063,4.625404,-4.936110,-5.293328,0.723307,7.552980,2.053514,-9.995238,9.668654,1.609458,-2.048973,1.555129,-8.842823,8.897370,-0.005381,-6.258755,9.377278,-8.080624,5.962850,9.493723,0.691181,-4.975444,-7.185672,4.524654,2.496979,5.182581,-5.919507,-3.565435,-2.031215],[9.686182,0.487234,0.233776,-3.983332,-5.071351,-2.528194,-1.450956,-4.943828,-3.189534,6.495696,1.418923,-9.605506,-5.919718,4.762562,8.420023,-8.960490,-3.365965,7.995534,7.629857,1.272166,1.762279,4.132481,7.168057,-4.586281,-3.211429,4.147751,0.516921,2.245181,8.500273,-8.434388,-9.544006,6.146671,2.118803,-9.113123,-9.952240,-4.262347,2.644459,-2.809989,-3.613874,-9.109391,-3.537829,-8.935022,-7.693099,-1.686117],[-5.808184,-7.881434,3.035588,3.731414,-6.795150,6.687927,2.725181,0.829123,5.405109,5.094527,-1.294256,6.032879,4.111213,-9.872231,2.960785,9.833345,-3.491418,-5.544490,-9.855746,-9.393338,1.029790,5.935773,2.318294,5.972170,-5.462696,-1.058182,-2.009813,-0.664654,9.421647,0.057957,1.167104,-0.474394,4.472214,3.882161,-3.416256,-2.659252,-7.624563,-4.856521,-3.300374,-8.521263,-0.966892,-3.344665,-0.041263,0.074466],[5.887900,-4.675965,6.660056,-3.959940,6.318030,-3.721064,5.789135,9.141350,1.680716,-2.588896,2.999729,-2.249084,5.446139,7.093132,5.497748,-3.924493,0.040714,0.929744,7.937001,9.041832,-4.018225,9.126560,6.102410,1.352176,-9.445462,-2.687777,-6.129897,-7.110166,1.458780,-9.717722,-3.747450,-4.422199,3.041993,-3.148982,2.338777,-8.599987,-8.748486,-0.237488,-5.583254,-4.649059,3.760617,3.879876,7.333009,3.045282],[9.562798,-5.605591,-8.009864,7.610730,-1.438372,4.195717,-6.162584,1.645599,9.175759,-1.289189,4.235063,-8.413681,8.928053,5.037444,7.357046,-1.975733,-2.769568,-9.209688,1.745303,-7.845995,-7.717012,3.669438,2.617505,4.216271,-0.570791,6.677413,-6.419922,-7.708613,1.309607,-1.764365,1.718184,4.595964,4.514903,-5.084519,4.472830,6.816330,-3.980525,-3.813536,9.461658,-1.081184,8.164439,-9.626489,-9.368269,-4.240653],[-0.503792,-7.886555,7.230450,4.200561,-9.670990,9.876791,-5.632383,3.781390,9.352890,4.008816,0.813949,4.404688,8.560476,-9.225629,-0.934610,2.126877,6.702256,-7.235993,8.308009,-0.110183,-2.267224,9.676927,-5.682608,1.285580,7.964106,-2.440621,9.701360,5.484961,0.188477,-7.385924,-7.419050,-6.297397,8.592681,-0.327089,-3.712687,-7.251385,-9.125458,-9.940322,-0.704562,7.003753,-5.408920,-0.988928,8.191809,-8.168835],[3.208919,-0.507053,-3.896391,-4.389220,-1.200238,-2.229875,9.736917,1.511475,-1.911656,-5.534525,3.483877,-2.617466,1.285847,4.986273,5.054181,-6.521132,-6.305575,-5.672976,6.237510,8.965839,-4.278351,3.667006,-6.904244,3.064993,-4.042162,-3.121281,6.321575,3.486580,4.762213,7.661442,-5.421376,-7.401211,2.878028,9.692542,7.708558,-6.138526,-0.610981,5.163363,-3.039976,8.675269,-8.653961,-0.974329,0.131958,-1.000215],[5.305108,7.322304,4.877453,-4.623696,-6.096174,-7.009440,-8.501268,1.457183,-7.574027,-4.439262,-8.165277,9.791266,2.650376,-0.164149,1.007120,4.391764,4.310307,-7.228023,-2.682231,5.007304,-4.142341,-5.546617,-7.607625,6.475583,-6.184110,9.002875,7.714395,1.981508,-6.962042,3.681007,3.991628,-6.682223,0.132179,8.411422,-5.415550,0.174553,-4.716586,0.179716,7.198541,7.751718,-9.900412,-8.850467,2.994195,-4.760246],[-8.360264,8.307073,0.542798,-0.905579,-2.578344,-1.488523,-2.338555,3.508997,-1.028289,1.495354,1.996532,3.310786,2.793350,-7.888860,-3.877181,-6.669712,-8.180113,-1.099064,-3.298951,5.295584,-5.362026,0.900828,9.322994,-3.132171,3.981297,0.601193,-6.478793,5.360151,4.518768,0.429514,-5.782931,-2.686478,7.183310,-5.416015,1.266809,0.611855,-2.967767,-2.422467,7.803080,1.885007,-8.109232,-3.663681,6.879709,-3.992383],[5.244219,-0.838283,2.807600,-6.454925,6.363396,-0.157595,-6.628942,5.920335,-0.425384,-8.373517,-3.509888,3.825662,3.819811,3.388475,5.708690,5.893841,1.927778,-0.666288,-6.653906,-4.823388,-0.169359,-8.855117,-4.209901,6.493325,7.720871,-5.322097,9.080050,-7.597596,1.663871,9.086438,5.311716,9.941867,8.298203,1.887907,9.467030,8.407824,4.678717,-8.079150,1.170993,-8.806917,-3.782629,-1.655520,-7.587881,-7.080742],[9.468906,-7.181523,-0.133351,1.865192,-7.797027,9.970558,-7.091340,7.702566,-2.887525,1.017106,9.556565,-2.132327,5.304675,9.194405,0.181395,7.784840,6.366492,8.425113,-9.459625,0.470655,2.583165,-6.388299,-3.390998,4.228410,3.788821,-4.005968,8.285065,-8.790214,-4.740770,-8.169393,2.766899,-1.301664,-2.415785,-8.448213,-4.674805,0.094600,-3.063762,-1.019632,6.233904,4.349079,-2.121391,4.221457,-3.275329,-9.131998],[3.613188,-6.752134,3.080421,2.505113,-1.354836,-9.634266,-7.433968,5.123016,5.289008,5.617880,4.357796,1.020189,-0.836009,0.289795,6.155400,8.800551,5.461281,3.088846,-7.263380,-1.900247,7.068164,-5.025141,-7.677514,-1.580724,4.665472,-7.990860,7.305203,-0.512569,-7.090831,-9.602305,-5.962888,-5.475986,-7.926410,-7.108887,-9.954485,7.673867,0.555117,1.213993,2.291577,2.678467,1.908429,-5.171021,4.857721,5.203357],[-4.141130,0.472862,7.788788,-1.758350,-9.139451,1.876516,7.578576,-4.572745,-1.847748,-9.970036,4.840970,-2.052583,9.800097,5.877174,6.443031,-4.151056,1.551822,-5.751241,0.502503,-8.037976,8.805466,2.266727,-1.322281,5.140931,6.212462,9.782458,5.011897,-3.505424,-6.307762,-4.763190,-0.602612,7.646114,-6.724611,-5.571181,6.718235,2.673190,-4.206646,1.021501,-6.474657,2.704985,8.247709,2.737337,-3.587336,2.147205],[8.274295,5.085130,4.870682,9.769617,-7.928796,0.846513,-2.150147,3.429598,6.004639,-1.144690,9.746724,-0.845836,-9.829192,-6.075665,1.458767,3.401266,6.935100,-9.435761,9.268531,-0.895877,9.590154,8.033748,3.397646,6.182675,-9.323355,-5.041540,3.115950,-1.424551,-3.847158,7.499247,-6.254164,2.375298,0.303661,-0.772991,6.411298,-9.028684,4.212024,0.988666,-4.039747,6.012577,-8.176733,5.290432,-8.456287,2.702111],[-5.205541,-4.612113,5.876327,-7.251526,2.501580,2.243237,3.648162,-2.863838,-5.453909,7.362485,-9.950297,6.499526,4.696181,-3.617209,-9.258761,-3.854837,-5.268124,4.356087,-6.381622,-8.918123,2.915188,1.532640,-7.618187,1.160754,8.506281,3.051567,0.125065,-2.976372,1.194265,0.455661,-5.504282,-6.098607,-1.071369,-5.358841,0.068382,9.347518,-1.787023,-5.744830,-7.844726,3.410265,-8.571431,2.955501,3.711836,-3.471583],[-5.591256,-7.315222,-3.362489,-9.814231,7.623183,3.884166,3.762476,1.171886,0.283512,-3.299214,3.940028,9.936079,0.296306,6.666854,-5.039018,0.191580,1.061625,8.078836,8.173386,2.336016,-9.148488,0.113950,0.226181,-3.579057,-2.685463,-6.516528,-8.222669,-4.585381,-5.630641,1.461958,3.219790,2.730094,-5.298048,-8.808763,-6.900415,-2.378044,2.840457,7.669253,-9.276303,7.845600,-3.185592,-0.867524,-4.379604,-2.152129],[7.452239,5.997494,6.892676,6.203971,-7.895049,2.456214,6.456598,7.257708,4.169873,2.680006,-6.002001,1.636249,-6.479311,-0.739871,-8.817271,2.469432,-2.677826,-4.404787,-3.085773,1.656058,-1.882952,6.983111,1.855920,-5.454769,6.270081,-9.862119,-2.194514,3.901615,-7.827660,3.502390,-5.139249,-9.290565,-7.838562,-3.200064,-3.861877,8.701922,-2.942395,2.168862,9.340292,5.623306,3.290304,1.318813,6.733231,1.548930],[-6.985562,-9.539532,6.334526,0.935238,8.072830,-0.321021,7.693393,-5.684899,8.568688,1.196375,7.094512,5.306749,3.010574,1.780830,7.517472,-8.324422,8.272644,5.032266,3.144737,-8.895725,-6.513858,-0.722907,-7.215409,-9.324171,-8.690733,3.834336,-5.256644,9.821945,4.590664,-1.313968,6.675558,-7.638984,3.631162,5.937612,-1.301221,8.876693,2.623687,-3.391438,1.868591,5.273877,1.685836,2.011210,1.422157,1.715510],[0.997739,-4.162223,-2.190543,-9.268989,-1.020166,-5.653942,6.059699,1.157656,4.048585,7.935901,-8.156440,8.347796,3.234827,5.306125,3.621879,0.749382,-6.384814,4.879124,-6.272035,-3.794194,3.044569,9.318496,9.044175,1.669181,-9.750240,3.582524,6.783091,-3.477413,1.920245,-3.447718,-0.255197,-5.875676,9.105814,2.015889,7.405776,-4.301943,-5.453597,8.518656,-8.203788,7.808349,3.925950,-3.263964,9.641011,1.908362],[-6.723633,9.856706,9.051659,-4.932499,4.278765,-4.305650,9.123931,0.386687,-8.193081,5.563392,-5.674083,-3.920881,8.082297,-8.331399,8.936897,-7.797306,7.071722,4.702846,4.965551,2.410741,3.441369,3.544113,-8.449847,4.153878,1.503020,-7.307216,3.180279,-5.633609,7.595375,4.243914,-2.401831,-8.518176,0.392611,5.232645,1.203037,9.051106,-8.578322,-6.103098,1.545507,-6.229050,-2.269607,-8.051674,3.432361,3.066654],[-9.638632,2.955347,-7.997857,-0.150084,8.036951,-4.359383,2.812383,-8.657569,-2.425874,-3.202420,-0.876773,-1.466205,0.964060,-0.269088,2.928792,0.374234,-5.440586,1.846730,1.403524,-5.016427,5.754733,2.423399,-4.750332,-7.278314,-9.800555,-7.699080,6.671934,-1.935008,-8.097628,2.047278,-3.579925,9.861363,-7.681630,4.190163,-5.760267,-3.113399,-5.856907,-2.874202,4.097147,8.819118,-2.928188,-8.229061,-7.713316,-4.602485]], dtype = "float64")#candidate|9478|(64, 44)|const|float64
call_9475 = relay.TupleGetItem(func_8163_call(relay.reshape(const_9476.astype('float32'), [16, 7, 5]), relay.reshape(const_9477.astype('int32'), [54,]), relay.reshape(const_9478.astype('float64'), [2816,]), ), 1)
call_9479 = relay.TupleGetItem(func_8168_call(relay.reshape(const_9476.astype('float32'), [16, 7, 5]), relay.reshape(const_9477.astype('int32'), [54,]), relay.reshape(const_9478.astype('float64'), [2816,]), ), 1)
func_1725_call = mod.get_global_var('func_1725')
func_1728_call = mutated_mod.get_global_var('func_1728')
call_9480 = relay.TupleGetItem(func_1725_call(relay.reshape(const_9478.astype('float64'), [11, 16, 16])), 0)
call_9481 = relay.TupleGetItem(func_1728_call(relay.reshape(const_9478.astype('float64'), [11, 16, 16])), 0)
uop_9482 = relay.sinh(uop_9391.astype('float64')) # shape=(10, 2, 10)
output = relay.Tuple([call_9413,call_9430,const_9431,call_9471,call_9475,const_9476,const_9477,const_9478,call_9480,uop_9482,])
output2 = relay.Tuple([call_9414,call_9432,const_9431,call_9472,call_9479,const_9476,const_9477,const_9478,call_9481,uop_9482,])
func_9485 = relay.Function([var_9390,], output)
mod['func_9485'] = func_9485
mod = relay.transform.InferType()(mod)
mutated_mod['func_9485'] = func_9485
mutated_mod = relay.transform.InferType()(mutated_mod)
var_9486 = relay.var("var_9486", dtype = "float32", shape = (10, 2, 10))#candidate|9486|(10, 2, 10)|var|float32
func_9485_call = mutated_mod.get_global_var('func_9485')
call_9487 = func_9485_call(var_9486)
output = call_9487
func_9488 = relay.Function([var_9486], output)
mutated_mod['func_9488'] = func_9488
mutated_mod = relay.transform.InferType()(mutated_mod)
func_9326_call = mod.get_global_var('func_9326')
func_9328_call = mutated_mod.get_global_var('func_9328')
call_9500 = relay.TupleGetItem(func_9326_call(), 0)
call_9501 = relay.TupleGetItem(func_9328_call(), 0)
func_3880_call = mod.get_global_var('func_3880')
func_3883_call = mutated_mod.get_global_var('func_3883')
var_9503 = relay.var("var_9503", dtype = "float64", shape = ())#candidate|9503|()|var|float64
const_9504 = relay.const([[-3,8,-8,2,-6,-1,6,-10,-10,-9,6,-6,-7,-6,4,-6,10,6,-3,-9,5,-5,-1,1,5,2,3,2,2,3,-1,-4,-6,-8,-9,7,7,5,4,7,6,-3,-9,1,2,-7,4,3,-2,-7,5,6,-6,10,-7,-3],[8,5,10,9,9,-4,-7,-3,5,-3,3,-4,2,-1,1,-3,-10,4,-4,2,9,6,-3,9,8,10,-1,4,-8,-4,1,-6,8,2,5,5,10,-1,2,-2,-2,-6,7,-8,-5,4,2,6,1,1,-2,9,-2,6,2,6],[10,-1,-2,-2,3,-2,5,2,5,-4,-2,8,7,7,10,5,7,-7,-5,3,-4,-1,-2,8,8,2,-5,5,-4,1,-8,-4,-2,-2,-9,-5,2,3,-2,-3,3,2,8,1,-2,6,9,-4,8,-10,-5,-9,2,2,2,-4]], dtype = "int16")#candidate|9504|(3, 56)|const|int16
call_9502 = relay.TupleGetItem(func_3880_call(relay.reshape(var_9503.astype('float64'), []), relay.reshape(const_9504.astype('int16'), [168,]), ), 0)
call_9505 = relay.TupleGetItem(func_3883_call(relay.reshape(var_9503.astype('float64'), []), relay.reshape(const_9504.astype('int16'), [168,]), ), 0)
func_5189_call = mod.get_global_var('func_5189')
func_5196_call = mutated_mod.get_global_var('func_5196')
const_9508 = relay.const([6,2,2,8,3,-7,4,3,3,-10,1,-2,-4,-4,-3,-10,-5,-6,-10,-7,8,-5,6,-10,6,-7,-8,10,5,5,-4,-6,-7,-8,-9,-1,2,9,-4,8,9,-8,6,10,-1,1,2,-4,2,-6,-8,-7,-7,-8,-5,2,4,10,-8,-3,-7,-4,-10,8,2,-2,-4,-3,-5,-1,-9,-4,-1,-3,5,7,10,3,-2,3,-4,6,-4,-9,2,-1,3,4,-8,-2,-2,-6,-10,2,9,-8,10,3,5,-5,1,7,-9,-7,-7,1,10,4,6,4,3,10,-5,7,4,6,8,-1,-4,6], dtype = "uint16")#candidate|9508|(120,)|const|uint16
const_9509 = relay.const([-5,-6,-1,-6,10,8,-3,3,-5,-4,4,4,-10,4,-4,-5,-6,-9,-5,-3,-4,-5,5,9,-4,-1,-6,4,7,-4,-4,1,1,-6,-5,-3,1,-8,-7,8,-3,-10,8,-6,3,-6,-10,7,-5,10,-2,-10,1,1,6,-9,-10,7,4,-3,-5,6,-3,9,-5,-9,1,4,-7,10,-6,-2,10,6,-5,5,-7,-7,3,8,4,9,-7,5,-7,7,6,2,9,1,7,3,-6,-4,-6,-1,2,-6,-10,-10,8,2,7,1,2,-1,10,2,-6,-7,1,-5,-7,-9,-3,-5,10,-6,-9,-4,-1,-1,1,-6,-2,-1,2,-5,8,7,-4,-4,-8,-3,1,10,-4,-2,-6,4,-3,8,-3,-6,6,-4,-6,7,1,2,7,4,5,-6,6,9,-7,7,-10,10,-6,8,-3,7,7,5,-3,7,7,-1,5,2,-6,1,2,2,4,-2,-7,10,-8,9,-6,-1,2,-5,1,1,8,1,-1,-2,5,1,-10,-7,8,10,-4,6,-5,7,2,-1,-7,-2,7,5,-5,3,7,-6,10,8,8,-2,-7,-9,6,-9,2,3,-5,-1,-5,10,6,9,-1,-10,3,4,-10,8,2,-8,1,4,-10,-8,1,8,-1,5,-6,-5,-8,8,3,-5,3,7,-7,-10,8,-3,-6,-6,10,3,6,-4,8,-4,7,-3,-3,8,5,-6,-8,10,1,-2,-7,6,4,8,3,-2,1,5,-10,-5,-1,-6,1,-2,3,-3,1,-4,3,-9,-5,-9,8,2,6,-3,-8,5,-6,-2,-3,9,-6,10,-8,6,-10,2,10,6,-1,3,7,-9,-7,9,-7,5,-3,5,-2,5,-7,-9,-10,10,-3,1,3,10,2,-9,10,-2,-8,4,-7,3,-5,10,-7,-9,5,8,-1,-7,10,3,1,4,-4,1,-7,-7,7,10,-8,-4,-8,-1,3,-3,6,-4,1,8,4,7,2,-4,1,-2,-2,4,-1,8,-4,6,6,9,-7,3,4,5,-7,-6,-4,9,-7,5,-9,1,-5,-3,8,-8,-9,-8,-4,3,-5,-10,-9,4,-2,-5,3,4,6,7,-9,1,-10,3,4,-3,-6,8,2,3,-1,6,-8,-2,-8,-8,-7,-7,10,9,5,-2,7,-6,2,-4,2,8,10,2,-10,7,1,-2,-3,4,-5,10,-6,2,8,2,-7,7,2,-7,4,-10,7,6,5,9,4,-3,-6,10,-4,-3,3,-10,3,-7,-1,-10,1,10,5,7,7,-2,8,8,-4,-2,-4,2,-10,-2,6,-1,9,-2,-1,4,2,2,7,1,-2,8,5,-1,9,-8,-7,-1,-2,-1,-5,-10,2,-6,-3,-2,-7,-1,10,-7,-7,-3,6,3,8,-3,-10,7,-7,2,-9,-5,7,-1,7,-6,-3,-9,5,-8,-7,-4,-4,-8,6,-10,-6,-3,2,10,2,-4,-6,-5,-6,-4,6,7,-10,2,6,-5,9,-3,-2,10,8,-10,-6,5,-1,-4,-6,-6,7,6,-2,-6,-9,-3,2,6,7,6,2,-7,8,-8,2,3,-4,5,-8,-8,-9,-7,-4,3], dtype = "uint16")#candidate|9509|(600,)|const|uint16
var_9510 = relay.var("var_9510", dtype = "int64", shape = (143,))#candidate|9510|(143,)|var|int64
const_9511 = relay.const([False,True,True,False,False,False,False,True,False,False,False,True,False,False,False,True,True,True,True,False,True,True,False,False,True,False,True,False,False,True,False,False,True,True,True,True,True,True,False,True,True,False,False,True,False,True,False,True,False,True,False,False,False,False,False,True,False,False,False,False,True,False,False,False,True,True,False,False,False,False,True,True,True,True,False,True,False,False,True,True,False,True,True,False,True,True,False,True,True,False,True,True,False,True,True,True,True,True,True,True,False,False,True,True,True,True,False,False,False,True,True,False,False,False,False,True,True,False,False,True,False,True,False,False,True,True,True,False,True,False,True,True,False,False,False,False,False,False,False,False,False,True,False,False,True,False,False,False,True,False,True,True,False,True,False,True,True,True,True,False,False,False,True,False,True,True,False,True,True,False,True,True,True,True,False,False,True,False,True,False,False,False,False,False,False,False,True,True,True,False,True,True,True,False,False,False,True,False,True,False,True,False,False,False,True,False,True,False,False,False,True,False,False,True,True,False,True,False,True,False,True,False,False,False,False,False,False,True,False,True,False,True,True,False,False,False,False,True,False,False,True,True,False,True,False,True,False,True,False,True,False,True,False,False,True,False,False,True,False,False,False,False,False,True,False,False,True,False,True,True,False,False,True,False,True,True,False,True,True,False,True,True,True,True,True,False,True,True,True,True,True,True,True,True,False,True,True,True,True,False,False,True,False,True,False,False,True,False,True,False,False,False,True,True,True,False,True,True,True,False,False,False,True,False,False,True,True,True,False,True,False,False,False,False,False,False,False,True,False,False,True,False,False,False,True,False,False,False,True,True,False,True,True,True,True,True,False,True,True,False,False,True,True,False,True,True,True,False,False,True,False,True,False,False,True,True,False,True,False,True,False,False,True,True,False,False,True,False,True,False,True,True,True,False,False,False,True,True,False,True,False,False,False,False,True,True,False,True,False,False,True,False,False,False,True,False,False,False,True,False,False,False,True,True,False,True,False,True,False,False,False,True,True,False,True,False,True,True,True,True,True,False,True,False,False,False,False,True,True,True,True,True,True,False,True,True,False,True,False,False,True,False,True,False,False,True,False,True,False,False,False,False,False,True,False,True,False,False,False,True,False,True,False,True,True,True,True,True,False,True,False,False,False,True,False,False,False,True,False,True,True,False,True,True,False,True,False,False,True,False,True,True,True,True,True,True,True,False,False,True,True,False,True,True,False,False,False,False,True,False,True,False,False,False,True,False,True,False,False,True,False,True,False,False,True,True,True,False,True,True,True,True,False,True,False,False,True,False,False,False,False,False,False,True,False,True,True,False,True,False,True,False,True,True,False,False,True,True,False,False,False,False,True,False,True,False,False,False,False,True,False,True,True,False,False,True,True,True,True,True,True,False,True,True,False,True,True,True,False,False,True,False,False,True,True,True,True,True,True,True,False,True,False,True,True,False,True,False,False,False,True,True,True,False,False,True,True,False,False,True,False,True,False,False,False,True,True,True,False,False,True,True,True,True,False,False,False,True,False,False,False,False,True,True,False,False,False,False,False,False,True,False,True,True,False,False,False,True,True,True,True,False,False,False,False,False,False,False,False,False,False,False,False,True,True,True,True,True,True,True,True,False,True,False,False,True,False,False,False,False,True,True,False,True,True,False,False,True,False,False,False,False,False,False,False,True,True,True,False,False,True,True,True,False,True,True,False,False,True,False,False,True,False,False,False,True,True,False,True,True,False,True,False,False,True,False,True,True,True,True,True,False,False,False,True,False,True,True,False,True,True,False,False,True,False,False,True,True,True,False,True,True,True,True,False,False,True,True,True,False,True,True,True,True,True,False,True,True,True,True,False,False,True,False,False,False,False,True,True,True,True,False,True,False,True,True,False,False,False,False,True,True,True,False,True,False,False,False,True,True,False,True,True,True,True,True,True,False,False,True,True,True,True,False,True,True,True,False,True,False,False,False,True,True,False,False,True,False,True,True,True,True,False,True,False,False,False,False,False,True,True,True,False,False,False,False,True,True,False,True,True,False,True,True,True,False,True,False,False,False,True,False,True,False,True,False,False,True,False,False,False,True,True,True,True,True,True,True,True,True,False,False,True,True,True,False,True,True,False,False,True,False,False,True,False,True,True,False,False,True,False,True,False,True,False,True,True,True,False,False,False,False,False,True,False,False,True,True,True,True,True,False,True,True,True,True,False,False,True,True,True,True,False,True,True,False,True,False,True,True,False,True,False,False,False,False,False,True,True,True,False,True,False,False,False,True,True,True,False,True,False,True,False,False,True,True,False,False,True,True,True,True,False,True,False,False,True,False,True,True,False,True,False,False,True,False,True,True,True,True,False,True,True,False,True,False,False,True,False,True,False,True,True,False,True,True,False,False,True,True,True,True,True,True,True,False,False,True,True,True,False,True,True,True,False,False,True,False,False,True,True,False,True,False,True,False,True,True,False,True,True,False,False,False,True,False,False,True,True,False,True,True,True,False,True,True,False,False,True,False,False,True,True,True,True,False,True,True,True,True,False,False,True,False,False,True,False,True,False,True,True,True,True,False,True,False,False,False,False,True,False,False,False,True,True,False,True,False,True,True,False,True,True,True,True,False,False,False,True,True,True,False,False,False,False,False,False,False,False,True,False,False,True,False,False,True,False,True,True,True,False,True,False,False,True,False,False,True,False,True,False,True,True,True,False,True,True,False,False,True,True,False,True,True,False,True,False,True,True,True,False,True,True,True,True,False,True,True,True,True,False,False,False,True,True,False,True,False,True,True,True,False,True,False,True,True,False,True,False,True,True,True,False,False,False,False,False,True,True,True,False,False,True,False,True,False,True,False,False,False,True,True,False,False,False,False,False,False,True,False,True,False,True,True,False,True,True,False,False,True,False,False,True,True,True,False,False,False,True,False,False,False,False,False,True,False,False,True,False,False,True,True,False,True,False,True,False,False,True,True,True,True,True,False,True,False,False,True,False,True,True,False,False,True,True,True,True,True,False,True,True,True,False,False,False,True,True,True,True,False,False,False,False,True,False,True,False,False,False,False,False,True,True,False,True,False,True,False,True,True,False,True,False,False,True,True,True,False,False,False,False,False,False,False,True,False,True,True,True,True,False,True,True,True,True,False,True,False,False,False,True,False,True,True,True,False,False,False,False,False,True,True,False,True,True,False,False,True,True,True,False,True,False,True,False,True,True,True,True,False,False,False,False,True,True,True,False,False,False,False,False,True,True,True,False,True,True,False,False,False,True,False,False,True,False,False,False,True,False,True,True,False,True,False,True,True,True,True,True,True,False,True,False,True,False,True,False,True,True,False,False,True,True,False,False,True,False,True,False,False,False,False,False,False,False,False,True,True,True,False,True,True,True,True,True,False,False,True,True,False,False,True,True,True,True,True,False,False,False,False,False,True,False,True,True,False,True,False,False,False,False,True,False,True,False,True,True,True,False,True,True,False,False,False,True,False,True,True,False,False,False,False,True,False,True,False,True,False,False,True,True,False,False,True,True,False,False,True,True,False,False,False,True,False,False,False,False,False,False,False,False,False,True,True,False,False,True,True,True,True,False,False,True,False,True,False,True,True,True,False,True,True,True,False,False,True,True,False,True,True,True,True,True,False,False,True,False,True,True,True,False,True,True,True,False,False,False,True,True,True,True,True,True,False,True,True,False,False,True,True,True,False,True,False,False,True,False,True,True,True,False,True,False,False,True,False,False,True,True,False,False,True,True,True,True,False,False,True,True,False,True,False,False,False,True,True,True,True,False,False,False,False,False,False,False,True,True,True,False,False,True,False,True,False,False,True,False,False,False,True,False,True,False,True,True,True,False,True,False,False,True,False,False,True,False,True,False,True,False,False,False,True,True,True,True,True,False,True,True,True,True,False,False,True,True,False,False,True,True,False,True,False,False,True,False,False,False,False,False,False,True,False,True,False,True,False,True,False,False,False,True,True,False,True,False,True,True,False,False,False,False,True,True,False,True,True,False,True,True,False,False,False,False,True,False,False,False,True,False,False,False,True,True,False,False,True,False,False,True,False,False,True,False,True,True,True,False,True,False,False,False,False,False,False,False,True,False,False,False,False,False,False,True,True,True,False,False,True,False,True], dtype = "bool")#candidate|9511|(1800,)|const|bool
var_9512 = relay.var("var_9512", dtype = "float64", shape = (2816,))#candidate|9512|(2816,)|var|float64
call_9507 = relay.TupleGetItem(func_5189_call(relay.reshape(const_9508.astype('uint16'), [10, 1, 12]), relay.reshape(const_9509.astype('uint16'), [10, 5, 12]), relay.reshape(var_9503.astype('int64'), []), relay.reshape(var_9510.astype('int64'), [143,]), relay.reshape(const_9511.astype('bool'), [1800,]), relay.reshape(var_9512.astype('float64'), [2816,]), ), 9)
call_9513 = relay.TupleGetItem(func_5196_call(relay.reshape(const_9508.astype('uint16'), [10, 1, 12]), relay.reshape(const_9509.astype('uint16'), [10, 5, 12]), relay.reshape(var_9503.astype('int64'), []), relay.reshape(var_9510.astype('int64'), [143,]), relay.reshape(const_9511.astype('bool'), [1800,]), relay.reshape(var_9512.astype('float64'), [2816,]), ), 9)
output = relay.Tuple([call_9500,call_9502,var_9503,const_9504,call_9507,const_9508,const_9509,var_9510,const_9511,var_9512,])
output2 = relay.Tuple([call_9501,call_9505,var_9503,const_9504,call_9513,const_9508,const_9509,var_9510,const_9511,var_9512,])
func_9519 = relay.Function([var_9503,var_9510,var_9512,], output)
mod['func_9519'] = func_9519
mod = relay.transform.InferType()(mod)
mutated_mod['func_9519'] = func_9519
mutated_mod = relay.transform.InferType()(mutated_mod)
func_9519_call = mutated_mod.get_global_var('func_9519')
var_9521 = relay.var("var_9521", dtype = "float64", shape = ())#candidate|9521|()|var|float64
var_9522 = relay.var("var_9522", dtype = "int64", shape = (143,))#candidate|9522|(143,)|var|int64
var_9523 = relay.var("var_9523", dtype = "float64", shape = (2816,))#candidate|9523|(2816,)|var|float64
call_9520 = func_9519_call(var_9521,var_9522,var_9523,)
output = call_9520
func_9524 = relay.Function([var_9521,var_9522,var_9523,], output)
mutated_mod['func_9524'] = func_9524
mutated_mod = relay.transform.InferType()(mutated_mod)
var_9559 = relay.var("var_9559", dtype = "int16", shape = (7, 15, 12))#candidate|9559|(7, 15, 12)|var|int16
var_9560 = relay.var("var_9560", dtype = "int16", shape = (7, 15, 12))#candidate|9560|(7, 15, 12)|var|int16
bop_9561 = relay.minimum(var_9559.astype('int16'), relay.reshape(var_9560.astype('int16'), relay.shape_of(var_9559))) # shape=(7, 15, 12)
bop_9565 = relay.greater_equal(var_9559.astype('bool'), relay.reshape(bop_9561.astype('bool'), relay.shape_of(var_9559))) # shape=(7, 15, 12)
var_9577 = relay.var("var_9577", dtype = "int16", shape = (7, 15, 12))#candidate|9577|(7, 15, 12)|var|int16
bop_9578 = relay.logical_or(var_9560.astype('bool'), relay.reshape(var_9577.astype('bool'), relay.shape_of(var_9560))) # shape=(7, 15, 12)
output = relay.Tuple([bop_9565,bop_9578,])
output2 = relay.Tuple([bop_9565,bop_9578,])
func_9581 = relay.Function([var_9559,var_9560,var_9577,], output)
mod['func_9581'] = func_9581
mod = relay.transform.InferType()(mod)
var_9582 = relay.var("var_9582", dtype = "int16", shape = (7, 15, 12))#candidate|9582|(7, 15, 12)|var|int16
var_9583 = relay.var("var_9583", dtype = "int16", shape = (7, 15, 12))#candidate|9583|(7, 15, 12)|var|int16
var_9584 = relay.var("var_9584", dtype = "int16", shape = (7, 15, 12))#candidate|9584|(7, 15, 12)|var|int16
output = func_9581(var_9582,var_9583,var_9584,)
func_9585 = relay.Function([var_9582,var_9583,var_9584,], output)
mutated_mod['func_9585'] = func_9585
mutated_mod = relay.transform.InferType()(mutated_mod)
func_9326_call = mod.get_global_var('func_9326')
func_9328_call = mutated_mod.get_global_var('func_9328')
call_9708 = relay.TupleGetItem(func_9326_call(), 0)
call_9709 = relay.TupleGetItem(func_9328_call(), 0)
output = call_9708
output2 = call_9709
func_9711 = relay.Function([], output)
mod['func_9711'] = func_9711
mod = relay.transform.InferType()(mod)
output = func_9711()
func_9712 = relay.Function([], output)
mutated_mod['func_9712'] = func_9712
mutated_mod = relay.transform.InferType()(mutated_mod)
func_9711_call = mod.get_global_var('func_9711')
func_9712_call = mutated_mod.get_global_var('func_9712')
call_9749 = func_9711_call()
call_9750 = func_9711_call()
output = call_9749
output2 = call_9750
func_9752 = relay.Function([], output)
mod['func_9752'] = func_9752
mod = relay.transform.InferType()(mod)
output = func_9752()
func_9753 = relay.Function([], output)
mutated_mod['func_9753'] = func_9753
mutated_mod = relay.transform.InferType()(mutated_mod)
func_9711_call = mod.get_global_var('func_9711')
func_9712_call = mutated_mod.get_global_var('func_9712')
call_9817 = func_9711_call()
call_9818 = func_9711_call()
output = relay.Tuple([call_9817,])
output2 = relay.Tuple([call_9818,])
func_9828 = relay.Function([], output)
mod['func_9828'] = func_9828
mod = relay.transform.InferType()(mod)
mutated_mod['func_9828'] = func_9828
mutated_mod = relay.transform.InferType()(mutated_mod)
func_9828_call = mutated_mod.get_global_var('func_9828')
call_9829 = func_9828_call()
output = call_9829
func_9830 = relay.Function([], output)
mutated_mod['func_9830'] = func_9830
mutated_mod = relay.transform.InferType()(mutated_mod)
func_8931_call = mod.get_global_var('func_8931')
func_8933_call = mutated_mod.get_global_var('func_8933')
call_9831 = relay.TupleGetItem(func_8931_call(), 0)
call_9832 = relay.TupleGetItem(func_8933_call(), 0)
func_9116_call = mod.get_global_var('func_9116')
func_9118_call = mutated_mod.get_global_var('func_9118')
const_9844 = relay.const([-9.991245,7.507542,6.392588,-0.315299,-2.545128,-0.076737,-2.792579,-7.389647,-7.746152,4.036147,4.353292,2.262154,-5.802266,9.622567,-4.002378,-3.997401,-4.150900,-1.395548,-8.662294,4.136772,-8.744963,-6.527465,-3.023812,-4.860995,-2.058397,0.499579,5.864018,-6.187221,3.588909,1.521019,4.722406,-9.038613,-2.856698,7.572059,-7.357606,2.089320,8.222727,9.905870,-9.419291,-7.940705,7.465289,-2.886278,-3.863041,2.515621,0.364835,1.768444,-9.444828,-0.471006,-7.344686,6.054747,-8.937366,2.979411,-7.365095,0.513849,6.974468,5.681895,0.047355,2.574948,-5.290201,-0.909099,-4.760261,-0.986772,5.776488,5.216006,8.576932,-8.739833,3.679033,0.448063,-2.686556,-1.024243,-2.236415,7.986550,-0.028464,5.779730,6.954984,-0.962823,7.916901,-3.416090,1.841975,2.527129,-9.811229,-8.291269,2.122093,2.243895,-2.545310,3.266153,8.465286,-5.631329,-9.750895,-4.632683,3.234881,8.494468,-3.937564,-5.666019,9.218165,-8.005027,6.447922,6.069512,-4.957186,4.718645,-3.475435,6.760332,5.362500,7.093839,7.868216,7.607631,-3.167225,6.668610,-7.069624,-9.644175,7.564685,7.337778,2.979553,-8.036258,6.652366,-9.003190,-7.906643,8.233308,-2.238788,9.608484,-5.407322,-1.425007,9.482693,8.275211,3.973402,3.265246,-6.977066,-9.510011,2.130320,0.006398,-5.778085,7.612080,9.519379,-4.611729,0.157746,1.413346,-4.074930,7.225087,-3.480845,6.426221,-7.032133,-1.052968,5.707911,4.448945,5.326512,3.877234,-5.028179,9.032913,7.784306,9.074400,6.718132,-3.045830,8.256168,-2.050443,7.196492,4.766840,-2.038841,-3.815588,-8.370013,9.265620,5.226957,6.225459,8.955419,4.197536,-0.417567,6.235866,-2.189270,4.255768,6.288913,8.959439,1.368846,4.210369,-9.284662,3.958519,5.840853,3.670565,6.959643,-4.677217,8.734438,7.932433,3.094273,1.685648,7.683932,3.294400,-6.825390,9.906114,3.819852,-9.711276,-9.576680,3.956283,-4.704558,-7.936647,2.215819,-9.753589,1.922791,6.563700,-1.217285,-6.974104,8.446982,0.645010,-8.563067,-5.900327,7.892752,0.297193,-5.707905,7.832360,4.678478,8.292958,-5.102420,0.558826,3.215685,-1.501659,-3.902949,2.289928,-7.882909,7.068642,4.504070,4.379609,-2.291860,6.874679,5.230267,4.892707,-4.376001,6.477592,-8.109897,-7.167666,0.748064,-7.832005,4.300006,-3.822645,-3.602627,-5.303280,4.673226,-3.678057,7.062738,-9.283394,-9.714474,2.919735,-2.418015,2.748085,-8.779437,8.165737,8.723413,8.847323,7.695670,-9.621426,2.058013,-5.426906,-3.687051,1.471193,-1.896466,-4.950755,3.609214,8.196913,5.912614,7.477868,7.440869,1.658964,-5.407887,0.392134,-5.786138,0.111417,9.237361,-8.937241,-4.523737,3.225099,-7.307043,1.249489,6.844978,5.087863,7.394420,-3.907251,9.912374,8.677942,-6.889125,-5.099603,6.412456,4.753620,7.089282,-9.216040,5.414382,-6.127716,-5.592317,6.138351,-0.893725,-7.311604,3.880660,-9.058636,-7.635883,-7.432753,0.226735,-7.201678,-1.340929,6.087438,3.184982,0.951620,2.145022,-5.709369,5.322185,4.252379,9.463442,-4.813688,4.396353,2.827191,-9.904089,-2.918507,-9.794075,-9.010022,-2.111882,-8.124972,-1.875903,-3.130178,3.171182,8.217222,1.942914,2.137517,-7.116250,5.199456,-5.994581,6.876571,7.733511,-7.950835,-9.043676,-8.998910,-0.960852,1.322838,9.660883,-2.368685,-3.178943,7.047519,5.353743,-5.741242,-4.522103,9.428883,0.782524,-9.115890,-3.174576,-8.277188,8.227319,-2.692616,-0.609036,-1.734238,5.398727,-6.718792,-4.737121,1.050052,-1.608445,1.129490,-9.969119,-1.866150,-9.446067,-6.235663,9.346203,3.366853,3.838053,9.780822,0.492253,9.591543,-5.772976,3.984360,-4.056510,-4.968755,-7.360158,7.023680,-9.864050,-1.090735,-3.731811,-3.473076,-9.229466,4.175311,5.564049,8.934711,-7.717951,9.964120,-7.746850,-6.142376,-5.699458,-7.657695,-4.645296,3.526593,8.663582,9.478355,-8.850890,8.098493,-3.511710,-3.971978,2.500473,-4.802063,1.655644,2.056848,-4.376224,-1.511493,-0.417790,-6.923193,-4.552688,-5.903852], dtype = "float64")#candidate|9844|(396,)|const|float64
call_9843 = relay.TupleGetItem(func_9116_call(relay.reshape(const_9844.astype('float64'), [11, 12, 3])), 2)
call_9845 = relay.TupleGetItem(func_9118_call(relay.reshape(const_9844.astype('float64'), [11, 12, 3])), 2)
func_1044_call = mod.get_global_var('func_1044')
func_1046_call = mutated_mod.get_global_var('func_1046')
var_9864 = relay.var("var_9864", dtype = "bool", shape = ())#candidate|9864|()|var|bool
call_9863 = relay.TupleGetItem(func_1044_call(relay.reshape(var_9864.astype('bool'), [])), 2)
call_9865 = relay.TupleGetItem(func_1046_call(relay.reshape(var_9864.astype('bool'), [])), 2)
func_5847_call = mod.get_global_var('func_5847')
func_5851_call = mutated_mod.get_global_var('func_5851')
const_9874 = relay.const([[-6.034178],[-6.828954],[-5.079848],[-5.490695],[-1.610253],[6.793704],[-4.757635],[-3.825262],[-4.590514],[3.075738],[2.276043],[1.005271],[-2.080277],[3.090232],[9.943573],[8.035737],[0.183353],[-6.113211],[-8.670481],[-3.682863],[-5.494963],[-2.562081],[5.890774],[3.722269],[-9.817016],[2.567181],[-3.269742],[6.539577],[9.234955],[9.604312],[-4.011255],[-1.313988],[-3.568702],[6.120400],[0.082734],[0.675936],[6.534265],[-8.127891],[-0.363131],[6.360646],[-6.987494],[-9.245037],[5.472699],[8.691673],[2.136630],[0.723756],[1.824340],[6.585936],[-2.913160],[-4.441187],[-1.313313],[1.620873],[-3.778035],[2.287558],[4.441477],[6.539420],[1.632222],[-9.547214],[4.972032],[-5.826316],[-9.935827],[6.569463],[5.710885],[4.922733],[0.353230],[-0.822721],[7.595361],[-2.756148],[3.765301],[-8.393323],[-0.353729],[8.676792],[-3.492418],[-6.386906],[1.660750],[-6.494825],[2.341068],[-6.849394],[-2.878454],[-1.586583],[1.682890],[-0.269169],[3.613583],[-3.398746],[-8.944595],[3.042105],[-3.044949],[-3.696012],[2.960604],[8.344909],[8.847408],[-4.328611],[5.460422],[-0.789092],[0.511180],[9.620999],[9.197594],[9.454287],[-8.683992],[1.447664],[0.908887],[5.676073],[5.163136],[-2.623200],[1.706123],[-4.924273],[9.367738],[0.953102],[5.025926],[-2.991004],[-8.597853],[2.432975],[3.621926],[-3.672452],[8.755039],[-5.885508],[9.761166],[-0.352447],[-0.741273],[3.946706],[-9.562005],[-4.905944],[-2.642126],[-2.084637],[5.867387],[-6.588556],[7.605890],[9.235295],[4.273275],[-9.590098],[-4.732014],[2.183866],[4.128994],[-4.721308],[-5.704573],[5.406856],[9.529413],[-6.206717],[8.875061],[3.809175],[5.270041],[-5.423214],[-0.390236],[-9.070987],[-4.175383],[-7.839018],[2.350765],[-4.879278],[9.392264],[-7.673518],[-6.843528],[4.316893],[-1.359649],[8.361928],[-6.441960],[-8.091545],[6.443459],[-0.131090],[2.654906],[5.660961],[-8.532208],[-6.543551],[6.677473],[-7.128838],[5.624734],[-7.623568],[-6.102642],[-7.706871],[3.747889],[-8.552242],[-1.029372],[5.949294],[9.586765],[6.741965],[-9.537711],[-2.950404],[-7.953215],[2.749903],[6.109646],[8.079138],[-5.676375],[-6.924902],[8.435760],[6.842071],[6.841511],[-7.429682],[1.558618],[5.920158],[-6.409329],[2.973629],[3.392924],[4.184439],[-5.385072],[7.818703],[-3.849068],[-7.574189],[-2.283756],[6.820249],[8.822703],[-3.878683],[-9.698969],[5.954837],[-3.503230],[-1.174492],[7.773751],[-6.122964],[-2.730665],[7.780261],[-7.316869],[-6.152734],[8.351862],[5.769524],[-4.597677],[3.046746],[-9.494552],[-6.684591],[-6.492427],[-2.247776],[-6.932126],[9.093922],[-9.985694],[-1.448042],[4.373099],[1.861407],[-5.529101],[-0.325978],[-4.166600],[7.970339],[-0.057454],[6.938719],[-7.521622],[4.027789],[0.433368],[6.832781],[4.930050],[1.230396],[-8.034285],[-0.326565],[4.524210],[3.934624],[2.359792],[6.749815],[-4.549750],[-9.204684],[4.789255],[7.139725],[3.530258],[6.390592],[-7.151545],[-7.529629],[3.523598],[9.643575],[5.866239],[-1.123778],[2.618735],[-8.273528],[6.860731],[-2.836302],[-9.371134],[5.545739],[-0.649116],[2.870185],[5.610225],[-7.908646],[-7.408075],[0.292160],[9.392336],[2.686928],[-8.518257],[3.026219],[-6.288892],[3.192023],[-7.551744],[8.366523],[-0.619925],[-3.896171],[6.798367],[0.963594],[-9.021805],[-9.301180],[-0.932562],[9.382965],[-5.147010],[6.028160],[-3.889310],[-2.459987],[-6.537678],[-7.576755],[1.335227],[-8.802128],[-6.845606],[6.089816],[-9.268827],[1.905709],[-0.255664],[2.442946],[7.899094],[-4.231252],[-2.138904],[1.111450],[1.998888],[0.340742],[0.951572],[-6.639991],[5.206819],[-5.102847],[4.075211],[0.702328],[-0.944432],[3.685485],[-2.319698],[-4.752053],[7.044364],[3.559345],[-3.100295],[-0.566843],[-0.976476],[8.227275],[7.690186],[-1.705236],[-5.990711],[1.605380],[-1.492189],[-5.119319],[7.815645],[-0.104323],[-6.423008],[3.985557],[6.880589],[7.938006],[4.806274],[4.396945],[4.749804],[6.514140],[-0.839785],[8.908529],[1.140507],[4.432124],[8.240837],[-2.503171],[5.288462],[-1.296958],[0.257679],[7.493470],[-0.469278],[-0.120851],[-6.943392],[3.221726],[2.631201],[-3.982201],[8.272409],[-8.540460],[-4.519251],[-9.458907],[5.570137],[-6.238327],[0.837979],[9.547068],[4.481199],[-8.591660],[1.185788],[5.644557],[-0.308293],[-0.404173],[-9.912382],[-4.479761],[-6.711881],[-7.556831],[-1.685634],[9.326857],[8.338887],[-2.006777],[-4.782088],[-8.263429],[-2.271169],[-3.424591],[7.382568],[0.118231],[-0.723465],[1.401733],[-4.643142],[-0.648298],[6.561961],[-8.019331],[-7.724252],[6.872732],[8.842048],[-0.723342],[9.487085],[1.242959],[6.525656],[-1.487598],[-4.461296],[9.103968],[0.397725],[3.719639],[-2.115906],[-5.023057],[-8.648086],[1.840774],[-1.578513],[-5.324408],[-8.364740],[-3.719676],[6.856373],[0.068199],[7.437776],[-4.796608],[9.859232],[-2.892040],[-6.399507],[-4.123004],[-4.426598],[-4.540516],[6.192608],[0.593285],[5.944541],[-9.107228],[-1.982231],[3.051072],[-1.242758],[8.901307],[-1.341317],[2.295848],[6.128473],[-4.202493],[8.744712],[-6.682556],[-9.938693],[-5.606060],[-2.086981],[0.768367],[-6.280556],[6.952260],[-1.964183],[-2.816483],[3.205425],[-2.636164],[6.364330],[0.488436],[-2.537750],[6.596783],[-5.196947],[4.202459],[-4.842571],[7.865197],[1.652228],[-1.280449],[-6.740568],[-7.323835],[9.168932],[6.433250],[-8.480014],[-4.738027],[-4.886522],[-6.296247],[-6.342707],[-4.733613],[6.605273],[7.175893],[-8.227262],[-8.064493],[8.609745],[4.884367],[-9.100675],[2.768924],[-7.464248],[-5.165491],[-9.514443],[9.622571],[-2.265680],[3.270400],[1.051950],[-7.295980],[2.813955],[-7.786696],[-8.626612],[9.724530],[-3.595566],[3.682827],[3.814164],[-7.978423],[6.181966],[-7.357885],[7.301881],[-8.537891],[-5.610365],[-8.179801],[-5.145404],[-6.996941],[-0.794849],[1.335206],[-1.204313],[9.627318],[0.459545],[6.041939],[9.855838],[-4.989493],[8.023293],[-7.158740],[-5.323421],[-2.151968],[4.529051],[-1.804782],[0.691647],[8.748122],[-1.572814],[-4.107758],[-0.180710],[2.381823],[-1.409089],[-5.593906],[-0.111824],[3.065995],[7.383309],[-5.669882],[-9.028421],[-1.713832],[-0.104383],[1.834560],[-0.016076],[4.526409],[1.220293],[7.788059],[8.496166],[8.096235],[2.248313],[1.664531],[6.859977],[2.069503],[3.740972],[-4.768885],[6.393893],[6.845485],[-0.567064],[1.036461],[3.266602],[9.701590],[3.215477],[-0.718443],[2.783208],[-9.427032],[4.549127],[-1.936171],[-7.522533],[-1.864791],[0.049934],[-6.198106],[0.628143],[-6.724732],[-5.965872],[-5.548948],[0.188348],[7.253397],[-5.190833],[8.116814],[5.926387],[7.137929],[-6.607107],[9.543622],[1.655119],[-8.475933],[4.954474],[2.144312],[-4.654813],[-2.130991],[-3.654814],[-6.272426],[-1.067525],[-7.085831],[-1.575643],[-9.782483],[0.348697],[-1.662361],[9.210067],[1.369959],[4.846575],[1.578741],[-6.438431],[-0.963627],[7.249130],[3.372905],[8.028039],[4.487253],[8.797815],[8.675770],[0.300407],[-6.721019],[9.976339],[-4.357838],[-0.678760],[8.130531],[6.101385],[-7.324168],[-0.724658],[-6.280227],[4.389337],[0.561844],[-2.642428],[-6.177044],[-9.938076],[7.049123],[4.393945],[-1.489753],[-7.696773],[9.668041],[-2.059659],[0.016668],[-1.835490],[5.932831],[-2.394905],[-4.672942],[-0.386817],[-6.785237],[-4.441756],[-2.538302],[-4.896716],[-5.130856],[5.845048],[-3.019752],[-5.333031],[8.462883],[1.639959],[-4.342707],[-4.734941],[-0.311609],[-4.009513],[8.759205],[-6.465349],[7.840474],[-4.864958],[4.835535],[0.016717],[5.274067],[-9.146440],[-9.728667],[7.165881],[-8.021105],[-5.414403],[-3.386113],[-1.167550],[2.805708],[4.732453],[9.347626],[4.496008],[-5.743999],[5.773944],[-3.709453],[-5.327423],[6.979650],[-8.909435],[6.192772],[0.656980],[-2.742163],[-6.923720],[7.528723],[8.390747],[5.357006],[9.191946],[-0.624356],[2.538475],[-9.553698],[-6.963238],[6.456236],[-7.856789],[4.923039],[1.360013],[7.055958],[-3.921158],[-1.968782],[-7.120184],[-8.620216],[5.127195],[4.129226],[-1.394108],[1.889029],[-8.172877],[-8.445920],[-2.792671],[2.826696],[3.734553],[3.311880],[5.694974],[7.703564],[-4.197565],[9.430756],[3.050745],[-0.217370],[4.641430],[4.178153],[6.586992],[-7.713939],[8.188662],[-3.811839],[-5.555270],[-9.286173],[4.384350],[-9.603834],[-0.699184],[-8.157775],[-0.128525],[-7.676480],[6.798043],[-7.888895],[-8.935588],[8.218534],[-3.246281],[2.384491],[-3.802052],[2.606424],[-6.079073],[-5.889488],[-8.950484],[-9.096372],[7.167288],[0.517478],[-9.792366],[4.731002],[1.102992],[0.577159],[-1.225507],[1.162364],[-2.328487],[-5.061400],[5.820353],[8.627737],[7.434717],[8.277284],[3.737386],[6.773705],[-9.659737],[-9.442554],[-1.882537],[1.392539],[4.226532],[6.786054],[1.671197],[-5.590642],[4.919004],[-3.592130],[-8.127074],[-4.034411],[-2.380791],[6.635722],[-7.314648],[-7.879787],[-6.271529],[5.024278],[-6.093948],[-7.611098],[7.075000],[5.897269],[-4.055512],[-0.873987],[-1.404080],[-8.788976],[0.518230],[3.037930],[-0.235896],[6.405609],[4.465308],[-9.181871],[-0.697342],[-4.888666],[-1.724199],[-4.007357],[-9.866490],[-0.147969],[4.115778],[-1.206000],[4.981906],[-1.344241],[-9.715496],[-9.235640],[4.686827],[8.978416],[6.851526],[-1.522800],[2.769975],[2.415216],[9.887610],[-0.817031],[6.337285],[-1.421493],[6.555100],[6.312463],[-3.757331],[9.297071],[7.721756],[2.948249],[7.996107],[7.475759],[-7.467623],[-1.921790],[-4.503366],[3.467861],[7.200842],[4.092076],[-2.258936],[2.239527],[-4.841663],[7.851319],[5.500354],[7.953359],[-8.630896],[9.416467],[7.612601],[5.622303],[-0.987651],[-3.075001],[4.805713],[-1.405561],[2.138760],[4.992194],[1.058174],[8.761849],[8.955921],[-5.788094],[-9.660188],[3.723914],[1.046978],[-8.313545],[9.270239],[-5.310272],[-7.036496],[-5.651098],[6.973353],[-8.031189],[-1.514582],[-3.809778],[8.418035],[-7.550908],[-7.497271],[2.713868],[-4.391549],[-7.823817],[7.303008],[7.128646],[-6.139429],[-1.566967],[-9.469990],[-1.937064],[2.687458],[-4.905955],[-7.870502],[7.224296],[-4.348174],[6.629658],[1.238990],[1.890330],[1.980872],[2.278524],[2.764615],[-9.701633],[-3.367540],[-1.860600],[8.852125],[-3.896227],[1.903848],[6.243618],[-0.732339],[5.297650],[-0.613065],[9.741504],[1.578641],[0.764822],[-4.157055],[8.748296],[3.911578],[0.772520],[-8.361187],[-9.997368],[-1.510631],[-3.616683],[5.439961],[-7.079788],[9.895701],[0.661377],[-9.183112],[1.027581],[6.287216],[-3.149152],[8.163536],[9.769045],[1.684177],[-1.780131],[-7.431942],[-7.175603],[-0.534807],[2.083330],[-8.595750],[1.124278],[3.848079],[3.717155],[5.479717],[-1.102128],[8.647766],[3.151528],[-2.397271],[-2.951209],[8.965474],[-1.476041],[9.348743],[2.100428],[3.543318],[-2.252770],[-6.512389],[5.902729],[-2.325292],[8.179081],[8.449899],[-3.126184],[-0.543877],[9.750624],[5.848641],[2.996753],[7.406314],[-4.337018],[-7.852078],[-8.479932],[-8.912706],[1.537435],[-0.063602],[0.317069],[7.650868],[-4.373968],[-9.096720],[1.243282],[-9.819018],[3.176597],[-8.084170],[6.954498],[-4.799198],[8.556419],[2.611037],[9.651767],[-2.728415],[-3.631527],[2.028782],[5.088567],[-1.602943],[-0.999987],[-5.704906],[2.980619],[-5.862331],[-8.895955],[4.448937],[-7.997816],[-3.786362],[-0.244656],[5.052266],[6.846328],[-7.505972],[-5.010792],[4.539647],[-8.151630],[-0.361096],[-3.944296],[1.644047],[0.180289],[6.998476],[-4.014405],[2.174637],[-7.134853],[-9.377036],[4.485224],[-2.428083],[3.354754],[-0.654874],[1.879046],[9.463894],[6.033019],[-9.680121],[6.977469],[-9.475203],[8.904776],[-1.996114],[-7.008418],[2.729966],[0.966186],[-6.052103],[9.418282],[-0.410242],[2.623041],[0.565635],[-1.142939],[1.742557],[-4.693344],[-7.497515],[8.127450],[-4.203811],[-8.934211],[-3.899057],[1.795272],[2.190246],[-3.035076],[9.578309],[9.831103],[-1.414647],[6.026752],[3.699978],[5.590928],[2.982567],[-6.571154],[7.417979],[-8.576468],[-2.749662],[-4.344896],[-2.183218],[-9.162833],[2.640039],[9.634296],[4.096359],[-0.498616],[4.841280],[7.021770],[1.631345],[8.172379],[-6.385935],[-6.026123],[9.733477],[8.313484],[0.755185],[6.831834],[0.221637],[-0.417405],[-8.910321],[-8.653174],[-5.180515],[5.173568],[-7.650195],[-6.769436],[7.041755],[-7.520429],[8.706462],[7.262408],[-1.947878],[-3.054096],[6.806731],[2.975940],[-7.502159],[7.491934],[2.049054],[-7.457509],[-5.493496],[0.717027],[-0.187427],[-1.903249],[-2.405666],[7.918740],[-8.728304],[-1.263210],[4.875268],[-8.082910],[-4.444279],[-4.132971],[1.716451],[0.105102],[8.115645],[-7.258231],[-2.963494],[-8.852228],[8.257422],[-2.307970],[0.714093],[7.293721],[9.557305],[-5.169532],[9.104271],[1.280692],[-7.250335],[-5.741253],[5.618531],[-9.281238],[0.855243],[-2.140265],[2.136544],[-5.056564],[6.113717],[-1.263977],[-6.118339],[-6.376901],[7.274357],[-5.243734],[-3.460717],[9.985510],[9.116662],[-5.760192],[8.321835],[5.351256],[-8.721367],[-9.654320],[-3.536216],[-7.105727],[-6.391268],[9.881927],[4.695092],[-1.099777],[-9.694837],[4.165812],[-3.641801],[-9.315758],[-2.012121],[-7.348668],[6.463032],[-2.740602],[7.744963],[5.404720],[6.447885],[8.208393],[-6.440655],[-3.742433],[2.945587],[2.278815],[4.603160],[-9.659518],[4.130488],[-6.398596],[9.661507],[7.096035],[-1.300159],[-8.784939],[4.713981],[-7.086133],[-0.657953],[-5.412385],[-7.746730],[-4.694588],[9.669323],[2.524728],[-7.434715],[-9.345483],[-2.958954],[6.488827],[2.324557],[8.292590],[-9.254093],[0.122470],[7.197826],[-7.982970],[7.686637],[6.118703],[1.568135],[7.823971],[8.249300],[9.823851],[-0.982081],[3.284925],[-4.090962],[7.890746],[6.381234],[-7.738635],[-0.523274],[3.119296],[7.816914],[5.178362],[-5.327669],[-9.281817],[-6.348536],[-6.251857],[-9.132026],[7.638632],[8.346194],[-8.456973],[1.831016],[5.013661],[-1.928840],[-8.008840],[3.127944],[-5.313360],[1.978385],[-3.073994],[-3.762484],[7.297929],[-2.488248],[-8.367996],[-2.108895],[-1.610688],[-5.546966],[8.191107],[-6.600728],[8.750536],[-0.464994],[4.959003],[4.339087],[-7.170803],[-5.091053],[8.140658],[6.226783],[4.050246],[-8.795373],[8.356001],[-0.766380],[2.059628],[-4.534612],[-9.826429],[4.583823],[1.839439],[-9.426819],[-8.406879],[-9.685047],[-7.672113],[2.691410],[-4.328740],[4.769812],[-9.651942],[6.864826],[-4.824473],[8.803841],[2.716536],[-0.682596],[-8.987375],[5.364012],[-8.913480],[6.353928],[1.090291],[1.962834],[-8.493619],[3.037366],[-9.377308],[-8.301011],[5.632147],[-9.963737],[5.450545],[4.446811],[9.747143],[3.217491],[0.202110],[8.259568],[-7.491199],[-7.420347],[-7.943173],[1.405098],[-6.999770],[2.246145],[3.427137],[-2.496563],[-3.302273],[-9.473517],[-1.022902],[-4.167082],[-5.656913],[-3.653695],[-8.066079],[4.035422],[-0.683741],[-5.296236],[9.794482],[1.942338],[6.345759],[-5.901938],[-0.859688],[8.034197],[3.160811],[1.385549],[4.087158],[5.897223],[3.264857],[8.477697],[7.683412],[-7.138869],[6.864670],[3.013287],[-8.772966],[-1.146755],[3.964413],[2.059655],[7.310497],[-6.312278],[-5.849878],[3.950291],[3.231899],[6.525970],[-5.450916],[-4.852929],[6.014392],[2.720962],[-7.300078],[-0.933848],[8.821894],[-4.278191],[7.181078],[-9.257933],[-9.862258],[-3.864388],[-6.079628],[-3.264452],[-5.052741],[-9.881908],[-1.931514],[5.542444],[4.647280],[-7.800744],[5.029809],[0.539607],[-9.400762],[6.740413],[2.860452],[-1.767293],[7.099951],[-2.148281],[-8.750316],[7.583124],[5.416243],[6.842862],[8.927597],[4.360454],[4.087890],[-1.454026],[-9.525692],[3.092367],[5.799541],[4.011549],[5.303657],[-6.672279],[-6.556357],[-4.408706],[9.793485],[9.861683],[-9.667123],[-9.618035],[7.496235],[-2.199122],[-9.517476],[7.880978],[-2.604353],[3.638403],[-2.087298],[-5.630750],[-9.855763],[-8.068988],[-3.643473],[-0.150511],[-1.619709],[-8.141675],[-3.653270],[-5.390684],[-5.825946],[1.670235],[4.137392],[-2.294004],[8.764464],[3.016863],[-7.339718],[2.646478],[-3.940961],[6.061198],[8.000916],[-7.666652],[1.918262],[-1.214334],[-4.336854],[-8.510770],[9.694033],[5.071313],[-3.922207],[3.594795],[6.889203],[8.052672],[-9.881176],[-2.323884],[-6.474290],[0.437666],[5.181910],[-4.126666],[-3.939446],[3.774177],[1.621032],[-6.556547],[9.586327],[-6.513236],[0.621477],[1.825589],[-2.465918],[-7.344470],[-9.883328],[-4.718659],[-7.450745],[-0.019914],[2.479341],[-2.737220],[6.107101],[-3.517662],[1.443519],[9.773720],[-3.399405],[5.096447],[1.996023],[-4.915895],[1.763501],[7.355227],[-8.643070],[3.874664],[8.532586],[-2.816340],[-6.766364],[0.527672],[-2.612495],[-3.614352],[-9.945954],[-1.556104],[5.582933],[-1.952273],[0.572976],[6.464872],[8.885102],[-4.145091],[-3.513120],[-7.480466],[6.536344],[-1.167769],[0.622637],[6.895403],[-5.970230],[-7.995258],[7.122344],[4.637881],[-2.246769],[-5.208116],[7.495490],[-9.902446],[-8.740741],[-2.134789],[-5.073866],[-3.821369],[4.701906],[4.136580],[-4.438171],[7.465067],[8.879543],[5.823284],[-4.704241],[8.037894],[-1.972329],[-4.301643],[4.098805],[-9.005330],[2.499625],[-5.153509],[2.015300],[4.395247],[-8.301470],[-5.633217],[0.605691],[7.304278],[6.056348],[-2.123947],[7.946060],[-6.314213],[0.062587],[7.100083],[7.686024],[-3.283110],[-0.633535],[5.203804],[0.872835],[1.143833],[5.650465],[4.649823],[4.716703],[6.135787],[5.184345],[-7.237822],[-7.749112],[6.136670],[-7.945579],[-2.351439],[-3.837826],[-5.842159],[-8.805052],[3.764964],[0.166055],[1.295295],[-3.916551],[4.045528],[7.320624],[-7.401839],[-4.073925],[1.658886],[0.726132],[-8.491610],[-8.486133],[5.271433],[3.076176],[3.033293],[9.388412],[-5.862240],[4.615809],[-7.201822],[-8.097420],[7.258702],[-6.350563],[-1.369183],[6.552749],[3.141302],[-8.312555],[-3.047950],[5.058004],[-4.806064],[0.885579],[-6.106901],[-8.386608],[7.240128],[-3.935586],[9.639891],[-8.494991],[-4.915962],[-4.720300],[2.052893],[-2.108030],[-1.235764],[5.579646],[6.709049],[-2.958743],[3.219009],[-2.202438],[5.109650],[-2.041960],[-0.473353],[-3.413902],[2.070247],[8.554558],[0.125158],[0.814408],[5.709644],[-0.058628],[-7.218946],[-2.269171],[-1.153520],[8.730928],[-1.068421],[8.345283],[-4.492542],[6.871078],[-4.481331],[-8.885682],[-5.623565],[3.644006],[7.727247],[-9.474516],[-8.190845],[-1.268606],[-0.504838],[1.721786],[-0.296004],[3.321259],[-2.219574],[-7.304617],[-9.963944],[9.744212],[3.257660],[1.942519],[7.802813],[9.828328],[4.348489],[8.525377],[-4.489080],[-0.668709],[-7.383347],[7.251190],[4.104566],[-6.092728],[6.405737],[-6.117173],[-4.889618],[-5.721622],[-8.342640],[8.417072],[-7.215013],[-5.392785],[-2.408824],[-7.678984],[-6.154867],[-6.032628],[-5.271628],[7.092380],[-5.179535],[2.857991],[-1.236501],[2.915171],[6.305645],[-5.728313],[7.067091],[-2.856021],[-4.415739],[4.274746],[-8.721540],[-0.614473],[1.652382],[-6.750751],[-3.776353],[3.546944],[2.677492],[3.175016],[-0.370305],[-6.514859],[-8.973271],[2.063149],[-6.859371],[-2.963509],[8.855130],[8.020402],[8.635544],[-2.099412],[-8.984569],[-5.257582],[-6.688927],[1.092199],[-0.552368],[0.004565],[-0.344128],[-7.441918],[-7.339518],[-2.635523],[0.377627],[2.852814],[4.134029],[3.444790],[-8.726004],[4.716259],[-5.032930],[-6.690028],[6.893036],[-2.090772],[-7.053314],[-6.351895],[9.702379],[7.447809],[5.141121],[-7.263578],[-3.549706],[8.902204],[-4.214760],[-7.351687],[-5.949366],[-1.726986],[3.913945],[3.179258],[-4.627511],[-0.316045],[7.607498],[2.212219],[-3.875956],[-8.927595],[6.150764],[-5.008698],[-2.987686],[1.507321],[-0.583136],[-3.066238],[2.577256],[7.103523],[0.005805],[2.473037],[-5.703038],[-3.269526],[-7.684564],[-2.810934],[-3.334841],[-8.590267],[1.683291],[-5.059126],[-2.982023],[6.326308],[2.440880],[6.449763],[-4.220812],[-7.235321],[4.690155],[3.048360],[0.566064],[1.457334],[-7.772353],[-1.428709],[-3.628286],[-0.665474],[-8.092544],[-5.181540],[-8.259403],[9.457901],[6.735010],[-9.488602],[-8.037530],[7.904339],[-4.734465],[4.556020],[-0.784389],[2.219276],[9.880174],[5.697086],[3.456455],[6.917265],[-7.770754],[-3.087085],[5.386911],[4.408056],[0.111830],[-6.058514],[-4.769820],[3.365992],[3.594564],[-8.333910],[-1.086802],[-6.102660],[-2.608445],[4.039490],[4.260445],[9.977585],[-2.410420],[-6.562506],[7.608672],[-8.773491],[7.454938],[-1.964096],[-7.289160],[-8.941596],[3.863784],[8.905565],[-5.362485],[3.635603],[-6.294623],[-8.446136],[8.164651],[4.421550],[-4.159157],[-8.979371],[7.590476],[-7.531994],[8.223516],[-0.026237],[-8.245109],[6.434118],[-2.836745],[1.299167],[-8.703929],[4.245848],[-4.056222],[-7.783237],[4.888401],[7.092076],[5.255507],[2.943714],[9.779547],[9.232551],[7.924328],[-6.019828],[-2.306373],[4.506662],[1.394991],[-3.105209],[4.166528],[-8.598498],[7.696079],[1.371275],[-7.858277],[-0.466482],[-3.437665],[5.504700],[5.947320],[1.066937],[-9.289929],[6.079063],[5.702785],[0.271664],[6.480991],[2.388407],[8.838892],[-8.482996],[-1.254531],[4.642289],[5.789802],[8.700979],[-7.498779],[1.094193],[3.466171],[-5.950537],[-2.023916],[0.823703],[-6.681603],[-8.003269],[-9.809858],[-8.931205],[6.864366],[-6.780273],[-7.278455],[9.779103],[-0.757919],[-0.193821],[6.239668],[-3.369794],[-2.249301],[-1.848003],[-9.992831],[-9.141653],[8.873340],[4.015031],[-6.621604],[6.555867],[-4.934329],[-5.210118]], dtype = "float32")#candidate|9874|(1800, 1)|const|float32
var_9875 = relay.var("var_9875", dtype = "bool", shape = (160,))#candidate|9875|(160,)|var|bool
call_9873 = relay.TupleGetItem(func_5847_call(relay.reshape(const_9874.astype('float32'), [15, 10, 12]), relay.reshape(var_9875.astype('bool'), [2, 80]), ), 3)
call_9876 = relay.TupleGetItem(func_5851_call(relay.reshape(const_9874.astype('float32'), [15, 10, 12]), relay.reshape(var_9875.astype('bool'), [2, 80]), ), 3)
output = relay.Tuple([call_9831,call_9843,const_9844,call_9863,var_9864,call_9873,const_9874,var_9875,])
output2 = relay.Tuple([call_9832,call_9845,const_9844,call_9865,var_9864,call_9876,const_9874,var_9875,])
func_9882 = relay.Function([var_9864,var_9875,], output)
mod['func_9882'] = func_9882
mod = relay.transform.InferType()(mod)
mutated_mod['func_9882'] = func_9882
mutated_mod = relay.transform.InferType()(mutated_mod)
func_9882_call = mutated_mod.get_global_var('func_9882')
var_9884 = relay.var("var_9884", dtype = "bool", shape = ())#candidate|9884|()|var|bool
var_9885 = relay.var("var_9885", dtype = "bool", shape = (160,))#candidate|9885|(160,)|var|bool
call_9883 = func_9882_call(var_9884,var_9885,)
output = call_9883
func_9886 = relay.Function([var_9884,var_9885,], output)
mutated_mod['func_9886'] = func_9886
mutated_mod = relay.transform.InferType()(mutated_mod)
func_9711_call = mod.get_global_var('func_9711')
func_9712_call = mutated_mod.get_global_var('func_9712')
call_9888 = func_9711_call()
call_9889 = func_9711_call()
func_7549_call = mod.get_global_var('func_7549')
func_7553_call = mutated_mod.get_global_var('func_7553')
var_9931 = relay.var("var_9931", dtype = "float64", shape = (384,))#candidate|9931|(384,)|var|float64
call_9930 = relay.TupleGetItem(func_7549_call(relay.reshape(var_9931.astype('float64'), [16, 2, 12]), relay.reshape(var_9931.astype('float64'), [16, 2, 12]), ), 1)
call_9932 = relay.TupleGetItem(func_7553_call(relay.reshape(var_9931.astype('float64'), [16, 2, 12]), relay.reshape(var_9931.astype('float64'), [16, 2, 12]), ), 1)
func_2482_call = mod.get_global_var('func_2482')
func_2485_call = mutated_mod.get_global_var('func_2485')
var_9934 = relay.var("var_9934", dtype = "uint16", shape = (168,))#candidate|9934|(168,)|var|uint16
var_9935 = relay.var("var_9935", dtype = "uint16", shape = (1512,))#candidate|9935|(1512,)|var|uint16
call_9933 = func_2482_call(relay.reshape(var_9934.astype('uint16'), [1, 14, 12]), relay.reshape(var_9935.astype('uint16'), [9, 14, 12]), )
call_9936 = func_2482_call(relay.reshape(var_9934.astype('uint16'), [1, 14, 12]), relay.reshape(var_9935.astype('uint16'), [9, 14, 12]), )
bop_9940 = relay.logical_and(var_9935.astype('bool'), relay.reshape(call_9933.astype('bool'), relay.shape_of(var_9935))) # shape=(1512,)
bop_9943 = relay.logical_and(var_9935.astype('bool'), relay.reshape(call_9936.astype('bool'), relay.shape_of(var_9935))) # shape=(1512,)
uop_9948 = relay.tan(call_9933.astype('float64')) # shape=(9, 14, 12)
uop_9950 = relay.tan(call_9936.astype('float64')) # shape=(9, 14, 12)
uop_9954 = relay.asinh(uop_9948.astype('float64')) # shape=(9, 14, 12)
uop_9956 = relay.asinh(uop_9950.astype('float64')) # shape=(9, 14, 12)
bop_9960 = relay.power(uop_9948.astype('float64'), relay.reshape(bop_9940.astype('float64'), relay.shape_of(uop_9948))) # shape=(9, 14, 12)
bop_9963 = relay.power(uop_9950.astype('float64'), relay.reshape(bop_9943.astype('float64'), relay.shape_of(uop_9950))) # shape=(9, 14, 12)
func_5189_call = mod.get_global_var('func_5189')
func_5196_call = mutated_mod.get_global_var('func_5196')
var_9966 = relay.var("var_9966", dtype = "uint16", shape = (120,))#candidate|9966|(120,)|var|uint16
const_9967 = relay.const([-8,-2,-5,2,-8,2,6,1,-9,5,8,8,-2,10,-3,-10,9,-7,-8,-2,1,-2,10,-7,2,9,-9,-6,8,-4,-3,9,10,-8,6,7,-4,6,-4,-2,-4,6,8,8,-10,-4,-9,-6,-10,7,2,3,3,-9,2,-1,2,2,1,-5,-2,-5,5,-10,-6,3,1,6,-7,8,8,-8,9,2,1,3,8,6,9,-8,-3,3,-7,7,-5,5,-4,-4,6,7,3,3,-7,-3,-5,3,2,-3,6,4,2,-5,-4,-3,6,8,-9,-1,9,3,6,1,4,10,-1,1,6,4,-6,-2,7,2,-10,2,-8,3,-3,-4,8,6,8,5,-5,6,7,6,8,8,2,7,-5,3,-5,-4,9,-4,-7,-1,-9,-6,4,10,1,-2,-10,-2,-1,4,10,-9,-7,-7,4,-7,-6,-1,6,-4,1,-9,-5,5,-3,-2,-6,3,-5,-8,-8,-4,-9,-7,-8,1,5,8,8,-7,-2,-6,-1,-2,9,9,-4,-4,-10,9,9,7,7,-7,-9,-5,-5,-1,-10,-7,4,8,9,-2,-2,8,10,-9,-1,1,-1,4,9,-4,-10,-8,7,2,-8,8,5,3,-1,2,7,3,2,-7,3,-10,4,-7,3,-10,6,-3,4,-6,-6,-7,4,4,9,6,3,-7,3,-10,5,-9,6,2,8,4,-6,9,-5,5,4,-8,-7,-4,8,7,3,-4,8,8,-4,9,7,2,-1,-6,8,4,8,6,-3,1,8,5,-1,-9,-9,-7,-6,-10,7,4,9,-3,-7,5,1,-5,9,-3,7,7,10,-2,-6,5,-8,1,8,-6,-2,-4,5,1,3,6,8,6,1,6,10,-1,10,-8,7,-3,5,1,1,3,6,4,7,1,9,3,9,-10,7,7,-3,4,-10,-7,-7,-6,2,-6,-1,-6,6,-2,5,-6,-1,8,-5,-2,-7,7,9,-8,3,-9,3,-5,-5,6,10,-6,-6,4,7,6,5,2,5,7,6,-2,-3,9,-5,-10,8,-5,10,-4,5,5,-3,6,-6,6,8,2,9,1,-8,-9,9,-1,-3,-10,-4,10,1,-7,-8,-1,-3,10,-4,-5,4,-9,8,-3,-2,1,7,5,-9,9,7,6,2,-3,-8,9,4,6,5,-5,2,4,9,-9,4,-6,7,1,7,-6,-2,-7,-10,-8,-4,-1,-1,6,-6,10,5,1,9,3,-5,3,3,-4,4,-7,7,5,-3,-9,7,1,7,-6,-3,4,-8,-7,-6,-4,-5,7,1,1,4,-4,-1,-5,-6,-7,-1,-9,6,4,7,2,-10,-5,2,4,-5,-7,3,7,6,-8,-2,8,5,10,1,-5,1,-10,5,9,2,8,-9,-5,-10,-1,-2,-2,2,-8,-6,-2,2,-1,5,8,-5,1,3,6,8,6,6,-6,2,1,-6,4,-4,4,-5,7,9,2,5,-3,-7,5,-9,-4,-5,-8,8,7,-8,-1,3,1,-7,2,-4,5,8,-5,-10,-7,-3,-4,-8,3,1,-9,4,-6,6,1,5,-1,5,-9,4,8,2,10,-4,-7,9,-9,7,-1], dtype = "uint16")#candidate|9967|(600,)|const|uint16
const_9968 = relay.const(3, dtype = "int64")#candidate|9968|()|const|int64
const_9969 = relay.const([-1,-3,10,-3,8,-9,1,-3,-8,-2,7,1,-6,-5,-6,7,5,6,-1,-10,3,7,1,-8,-9,6,-6,9,1,1,10,5,-1,-1,-1,9,-2,7,8,-4,10,4,-6,8,-1,-5,10,-6,-2,-1,-10,7,9,-7,1,-6,3,7,-5,9,7,-4,-3,-7,-9,-5,1,5,8,-8,5,-10,-6,-10,-3,4,10,-6,-2,7,1,2,-6,3,9,2,7,-4,10,-3,-2,2,7,-6,-1,2,-5,-4,-3,6,8,8,10,10,8,3,-10,-2,5,8,9,7,-6,8,8,1,-1,-3,1,-3,7,-8,2,-8,8,-4,5,2,4,1,3,2,-9,5,10,-10,3,-8,8,4,1,2,3], dtype = "int64")#candidate|9969|(143,)|const|int64
const_9970 = relay.const([False,False,False,False,True,True,False,True,True,False,True,False,False,False,False,False,False,True,False,True,True,True,True,True,True,False,True,False,False,False,False,False,False,False,False,True,False,True,False,True,True,True,True,False,True,True,False,False,False,False,True,True,True,True,False,True,True,False,True,False,False,True,False,False,True,True,False,True,False,False,False,True,False,False,True,True,True,False,True,False,False,True,True,False,False,False,True,True,False,False,True,False,True,False,False,False,True,False,False,True,True,False,False,True,False,False,False,False,False,False,False,False,True,True,False,True,True,True,False,True,True,False,True,False,False,False,True,True,False,True,False,True,True,False,False,False,False,True,False,False,True,False,True,False,True,True,True,True,True,True,False,False,True,False,True,True,False,False,False,False,True,False,False,False,True,False,False,True,True,False,False,False,False,True,False,False,False,True,True,True,True,True,False,False,True,True,False,True,True,False,False,False,True,False,False,False,False,True,True,False,True,True,False,False,False,True,False,True,False,True,False,True,False,False,False,False,True,False,True,False,False,True,False,True,True,True,True,False,False,True,False,True,False,False,True,True,True,True,False,False,False,False,True,True,True,True,True,False,True,False,True,False,False,True,True,True,False,True,True,False,False,True,False,False,False,True,True,True,True,True,True,True,False,True,False,True,False,True,True,False,False,False,False,False,False,True,True,False,False,True,True,False,False,True,True,False,False,False,False,True,False,True,True,False,False,True,True,True,True,False,True,True,True,True,True,True,False,False,True,True,True,False,True,False,True,False,False,False,True,False,True,True,False,False,True,False,False,False,True,True,False,False,False,True,True,True,False,False,True,False,True,True,False,False,True,False,True,True,False,False,False,True,True,False,False,False,False,False,False,False,True,False,False,True,False,False,False,False,False,True,False,True,False,True,True,True,True,False,True,True,False,True,False,True,True,False,True,True,False,True,True,True,False,False,False,False,False,False,False,False,False,True,True,False,False,False,False,True,True,True,False,True,False,False,True,True,True,False,False,True,False,False,True,False,False,True,False,False,False,False,False,False,True,True,False,True,True,False,False,False,True,False,False,True,True,True,False,False,True,True,True,True,True,False,True,True,False,True,True,False,False,True,False,True,False,False,True,True,True,True,False,False,False,False,False,True,True,False,True,False,True,False,False,False,True,True,True,True,True,False,True,True,True,True,False,True,True,True,True,False,True,True,True,True,True,True,False,False,True,True,False,True,True,False,True,False,False,True,True,True,True,False,False,True,True,False,False,True,False,True,True,True,False,False,False,True,True,False,True,True,True,False,False,False,False,True,True,False,False,False,True,False,True,True,True,False,False,True,True,False,True,True,True,True,True,True,True,True,True,False,False,False,False,False,False,True,True,True,True,False,False,True,False,True,False,True,True,False,False,True,False,True,False,True,True,True,False,False,False,True,False,False,True,True,False,False,False,False,True,True,False,True,False,False,False,True,True,False,True,True,True,False,True,True,True,False,False,False,False,True,True,False,True,True,True,False,True,True,False,False,True,False,False,True,False,False,False,True,False,False,False,True,False,True,False,True,True,True,True,True,False,True,False,True,False,True,True,True,True,True,True,False,True,True,True,True,False,False,False,False,False,True,False,False,False,False,True,False,True,True,True,True,False,True,True,False,True,False,True,False,False,False,False,True,False,True,True,False,True,True,False,True,False,False,True,True,True,True,True,False,False,False,False,False,False,True,False,True,True,True,True,True,True,True,True,True,False,False,True,False,True,False,True,False,False,True,True,True,False,False,False,False,False,False,False,False,True,False,True,False,True,False,False,False,True,True,False,False,True,True,False,False,True,True,False,False,False,True,True,False,True,True,False,False,True,False,False,False,False,False,True,True,False,True,False,False,False,False,False,True,True,False,True,True,True,False,True,False,True,False,False,True,False,True,True,True,True,True,False,False,True,True,True,False,False,True,False,False,True,False,True,True,False,False,False,True,False,True,True,False,True,False,True,True,True,False,True,False,True,True,False,True,False,False,True,False,True,True,False,True,True,True,False,True,True,False,False,False,True,False,False,False,False,True,False,True,True,True,True,False,False,False,True,False,False,False,False,True,True,False,False,False,True,False,True,False,False,False,False,True,False,False,False,False,True,False,True,False,True,False,True,True,False,False,True,False,True,True,False,False,True,False,True,False,True,False,False,True,False,True,True,False,True,True,False,True,True,True,True,False,False,False,True,False,True,False,True,False,True,True,False,False,True,True,False,False,False,False,False,False,True,True,True,True,False,True,False,True,True,True,True,True,False,False,True,True,False,False,True,True,True,True,True,True,True,True,True,True,True,True,True,True,False,False,False,False,False,False,True,True,True,False,False,True,False,True,False,False,False,True,True,True,True,False,False,False,True,False,True,True,True,False,False,False,True,False,False,True,False,False,False,True,False,False,True,True,True,True,True,True,True,True,True,False,True,True,False,True,True,True,False,True,True,False,True,False,False,True,True,False,True,True,True,False,True,False,True,True,False,False,False,True,True,True,True,True,True,True,False,False,False,False,True,True,False,False,False,False,False,True,False,True,True,True,True,False,False,False,True,False,True,False,True,False,True,False,True,False,True,True,True,True,True,False,False,True,True,False,True,True,False,True,False,True,True,False,True,True,False,True,True,True,True,False,False,False,False,True,True,True,True,False,False,False,False,False,False,True,True,True,False,True,True,True,False,False,True,True,True,True,False,False,True,True,False,True,False,False,False,True,True,True,True,True,False,True,True,False,True,False,True,True,True,False,False,True,False,True,True,True,True,True,True,False,True,True,True,True,True,True,False,False,True,True,True,True,False,True,True,True,True,False,True,True,True,True,False,True,True,True,True,False,True,False,False,False,False,True,True,True,False,True,False,True,False,True,False,False,False,True,False,False,False,True,True,True,False,True,False,True,True,True,True,False,False,True,False,False,False,True,True,True,False,True,False,False,True,True,False,True,False,False,True,False,True,False,True,False,False,False,True,True,True,True,True,True,False,True,True,True,False,True,False,False,False,False,False,True,True,False,True,False,True,False,False,False,True,False,False,True,False,False,False,True,True,True,True,True,False,False,False,False,True,False,False,False,True,False,True,False,False,False,False,True,True,True,False,False,True,False,True,True,False,True,False,True,False,True,True,False,False,True,False,True,False,False,True,True,False,True,True,False,True,False,False,False,True,False,False,False,False,True,True,True,False,True,False,False,True,True,False,True,True,False,False,True,False,False,False,False,True,True,True,False,True,True,True,False,True,True,False,True,True,True,False,True,True,True,False,False,False,False,True,True,True,True,False,True,True,False,False,False,False,True,True,True,False,False,False,True,True,False,False,False,False,True,False,True,False,False,True,False,False,False,False,True,True,False,True,True,True,True,True,True,False,False,False,False,False,False,True,False,True,True,False,True,False,False,False,False,False,True,True,True,True,True,False,False,True,True,True,False,False,True,True,False,True,False,False,False,False,True,False,True,True,False,False,True,True,False,False,True,True,True,False,False,False,True,True,True,False,False,False,True,True,True,True,True,True,False,True,False,True,True,True,False,True,False,False,False,False,False,False,False,True,False,False,True,True,True,False,False,False,False,True,True,False,False,False,True,False,True,True,False,False,True,False,False,True,False,False,True,False,False,True,True,True,False,False,False,True,True,False,True,True,True,True,True,False,True,True,False,True,False,False,True,True,True,True,False,True,False,False,False,False,True,True,True,True,False,False,True,True,False,False,False,False,True,False,False,True,True,False,False,True,True,True,True,False,True,True,True,True,True,True,True,True,True,True,False,True,True,True,False,True,False,False,True,True,False,True,False,True,False,False,True,True,False,False,True,True,True,False,False,True,False,True,False,True,False,False,False,True,False,False,True,False,False,False,True,True,False,False,False,False,False,True,True,False,True,False,True,True,False,True,False,False,True,False,True,True,False,True,True,False,True,False,False,False,False,False,True,False,False,True,False,False,True,True,True,False,True,False,True,False,False,True,False,True,True,False,False,False,True,True,False,True,True,True,True,False,True,False,False,True,True,True,True,False,False,False,True,False,True,False,False,True,False,False,False,True,False,False,True,False,False,False,True,True,True,False,True,False,False,False,True,True,True,False,False,True,True,True,True,False,True,True,True,True,False,True,True,False,True,False,False,True,False,True,True], dtype = "bool")#candidate|9970|(1800,)|const|bool
var_9971 = relay.var("var_9971", dtype = "float64", shape = (2816,))#candidate|9971|(2816,)|var|float64
call_9965 = relay.TupleGetItem(func_5189_call(relay.reshape(var_9966.astype('uint16'), [10, 1, 12]), relay.reshape(const_9967.astype('uint16'), [10, 5, 12]), relay.reshape(const_9968.astype('int64'), []), relay.reshape(const_9969.astype('int64'), [143,]), relay.reshape(const_9970.astype('bool'), [1800,]), relay.reshape(var_9971.astype('float64'), [2816,]), ), 3)
call_9972 = relay.TupleGetItem(func_5196_call(relay.reshape(var_9966.astype('uint16'), [10, 1, 12]), relay.reshape(const_9967.astype('uint16'), [10, 5, 12]), relay.reshape(const_9968.astype('int64'), []), relay.reshape(const_9969.astype('int64'), [143,]), relay.reshape(const_9970.astype('bool'), [1800,]), relay.reshape(var_9971.astype('float64'), [2816,]), ), 3)
output = relay.Tuple([call_9888,call_9930,var_9931,var_9934,uop_9954,bop_9960,call_9965,var_9966,const_9967,const_9968,const_9969,const_9970,var_9971,])
output2 = relay.Tuple([call_9889,call_9932,var_9931,var_9934,uop_9956,bop_9963,call_9972,var_9966,const_9967,const_9968,const_9969,const_9970,var_9971,])
func_9973 = relay.Function([var_9931,var_9934,var_9935,var_9966,var_9971,], output)
mod['func_9973'] = func_9973
mod = relay.transform.InferType()(mod)
var_9974 = relay.var("var_9974", dtype = "float64", shape = (384,))#candidate|9974|(384,)|var|float64
var_9975 = relay.var("var_9975", dtype = "uint16", shape = (168,))#candidate|9975|(168,)|var|uint16
var_9976 = relay.var("var_9976", dtype = "uint16", shape = (1512,))#candidate|9976|(1512,)|var|uint16
var_9977 = relay.var("var_9977", dtype = "uint16", shape = (120,))#candidate|9977|(120,)|var|uint16
var_9978 = relay.var("var_9978", dtype = "float64", shape = (2816,))#candidate|9978|(2816,)|var|float64
output = func_9973(var_9974,var_9975,var_9976,var_9977,var_9978,)
func_9979 = relay.Function([var_9974,var_9975,var_9976,var_9977,var_9978,], output)
mutated_mod['func_9979'] = func_9979
mutated_mod = relay.transform.InferType()(mutated_mod)
func_9752_call = mod.get_global_var('func_9752')
func_9753_call = mutated_mod.get_global_var('func_9753')
call_10040 = func_9752_call()
call_10041 = func_9752_call()
func_8931_call = mod.get_global_var('func_8931')
func_8933_call = mutated_mod.get_global_var('func_8933')
call_10056 = relay.TupleGetItem(func_8931_call(), 0)
call_10057 = relay.TupleGetItem(func_8933_call(), 0)
output = relay.Tuple([call_10040,call_10056,])
output2 = relay.Tuple([call_10041,call_10057,])
func_10061 = relay.Function([], output)
mod['func_10061'] = func_10061
mod = relay.transform.InferType()(mod)
mutated_mod['func_10061'] = func_10061
mutated_mod = relay.transform.InferType()(mutated_mod)
func_10061_call = mutated_mod.get_global_var('func_10061')
call_10062 = func_10061_call()
output = call_10062
func_10063 = relay.Function([], output)
mutated_mod['func_10063'] = func_10063
mutated_mod = relay.transform.InferType()(mutated_mod)
func_9752_call = mod.get_global_var('func_9752')
func_9753_call = mutated_mod.get_global_var('func_9753')
call_10066 = func_9752_call()
call_10067 = func_9752_call()
func_9711_call = mod.get_global_var('func_9711')
func_9712_call = mutated_mod.get_global_var('func_9712')
call_10090 = func_9711_call()
call_10091 = func_9711_call()
output = relay.Tuple([call_10066,call_10090,])
output2 = relay.Tuple([call_10067,call_10091,])
func_10105 = relay.Function([], output)
mod['func_10105'] = func_10105
mod = relay.transform.InferType()(mod)
output = func_10105()
func_10106 = relay.Function([], output)
mutated_mod['func_10106'] = func_10106
mutated_mod = relay.transform.InferType()(mutated_mod)
const_10138 = relay.const([[[True,False,False,True,False,False,True,True,True,True,False],[True,True,True,True,False,True,True,True,True,False,True],[False,True,True,True,False,False,True,False,False,False,False],[True,True,False,True,True,False,False,False,False,True,True],[True,False,False,False,True,True,True,False,False,True,True],[True,True,True,True,False,False,False,True,False,True,False],[True,False,True,True,False,False,True,True,True,False,True],[True,False,True,False,True,True,False,True,False,True,False],[True,True,False,True,True,True,False,False,False,True,False],[True,False,False,True,True,True,True,True,False,False,True],[True,True,False,False,True,True,False,True,True,False,False],[False,True,True,True,True,True,True,False,True,True,False],[True,False,True,False,True,False,False,False,True,False,True]],[[False,False,False,True,True,True,True,True,True,True,False],[False,False,False,True,False,False,False,True,True,True,True],[False,True,True,True,False,True,False,False,False,False,False],[False,False,True,False,True,False,True,False,True,False,False],[True,True,False,True,False,True,False,True,True,True,True],[False,False,True,True,False,True,True,True,True,True,True],[True,True,False,True,True,False,False,True,False,True,False],[True,True,False,False,True,False,True,False,True,True,False],[False,False,True,True,True,False,False,True,True,True,False],[True,True,True,True,True,False,True,True,True,False,False],[True,True,True,True,False,False,False,False,False,False,False],[True,True,False,True,False,True,False,True,True,True,False],[True,False,False,True,False,True,False,False,True,False,True]],[[False,True,False,False,False,False,True,False,False,False,False],[False,False,False,True,False,True,True,False,False,False,False],[False,True,False,True,False,True,False,False,False,False,True],[False,True,True,False,False,False,True,False,False,True,False],[False,True,True,True,False,True,True,False,True,True,True],[False,False,True,True,False,True,True,True,True,False,False],[False,False,False,False,True,False,False,True,True,False,False],[False,False,False,True,True,False,False,True,True,False,True],[True,True,False,False,True,True,True,True,True,False,True],[True,False,True,True,True,False,False,True,False,False,True],[False,True,True,False,False,False,True,False,True,False,False],[True,True,True,False,False,False,True,False,True,False,True],[False,False,False,False,False,True,False,True,True,False,False]],[[False,False,False,False,False,True,True,False,True,True,True],[False,True,False,False,True,False,True,True,True,False,True],[True,False,False,True,True,True,False,True,True,False,False],[False,False,False,True,True,False,False,False,False,False,False],[False,False,True,False,True,False,False,True,False,True,False],[False,False,True,True,False,False,False,False,False,False,False],[False,True,False,True,True,False,True,True,False,True,True],[True,True,True,False,True,False,False,True,False,False,True],[True,True,False,False,True,False,False,False,True,True,True],[True,False,True,True,True,False,False,False,False,True,True],[True,True,True,True,True,False,False,True,True,True,False],[True,True,False,False,False,False,True,True,True,False,True],[False,True,False,True,True,False,True,True,True,False,False]],[[False,True,False,False,True,True,False,True,False,True,False],[False,True,False,False,False,True,True,False,False,False,False],[False,True,True,False,False,False,False,False,True,False,True],[True,True,True,False,True,False,False,False,False,False,False],[True,False,False,False,False,True,True,False,True,True,True],[False,False,True,True,False,True,False,False,False,True,True],[True,True,False,True,False,True,False,False,True,True,True],[True,True,True,False,False,True,True,False,False,False,False],[True,True,False,False,True,False,False,False,False,False,True],[False,True,True,True,True,False,False,False,True,False,False],[False,False,False,True,False,False,True,False,False,False,True],[False,False,False,True,False,False,True,False,True,True,False],[True,True,True,True,True,False,False,True,False,False,False]],[[False,True,False,True,False,False,True,False,True,False,False],[True,True,False,True,False,True,False,True,True,True,False],[False,False,False,False,False,True,False,False,True,True,True],[True,False,True,True,True,True,False,True,True,True,False],[False,False,False,True,True,False,False,False,False,False,True],[False,True,True,False,True,False,True,False,True,True,False],[True,False,False,False,True,True,False,False,False,False,True],[False,True,False,False,True,False,True,True,True,True,False],[True,True,False,True,True,False,False,False,True,True,False],[True,False,True,False,False,False,False,False,True,True,True],[True,True,False,True,False,True,True,False,False,False,True],[False,True,False,False,True,False,True,True,True,False,True],[False,True,True,False,True,True,True,False,False,False,False]],[[False,False,False,True,True,False,True,True,False,True,False],[False,False,True,True,True,False,False,False,True,False,True],[False,True,False,True,False,True,True,True,True,True,True],[True,True,False,False,False,True,False,False,True,False,False],[False,True,True,True,True,True,False,False,False,True,True],[True,False,True,False,False,False,True,True,True,False,False],[True,False,True,False,False,True,True,True,True,False,False],[False,True,False,False,True,False,False,False,True,True,True],[False,True,True,True,False,False,False,True,True,False,True],[False,False,False,True,False,True,False,False,True,False,True],[True,False,False,True,True,True,False,False,False,True,False],[True,False,False,True,False,True,False,False,True,False,True],[True,True,True,False,True,True,True,False,False,True,False]],[[False,False,True,True,True,False,True,False,False,False,False],[False,False,False,False,False,True,True,True,False,False,False],[True,False,False,False,True,False,False,False,False,False,True],[False,False,False,False,True,False,False,False,False,False,False],[False,False,False,True,True,True,True,True,False,False,True],[False,False,True,False,False,True,False,True,False,False,True],[False,False,False,False,False,False,False,True,False,True,True],[True,False,True,False,False,False,False,False,False,False,True],[True,False,True,False,True,False,True,True,True,True,False],[False,False,False,False,False,True,True,True,True,False,False],[False,False,False,False,True,False,False,True,True,True,False],[True,False,True,True,True,False,True,False,False,True,False],[True,True,True,False,False,False,True,False,False,True,True]],[[False,False,False,True,False,True,False,False,True,True,False],[False,True,True,True,False,True,True,True,False,False,False],[True,True,True,True,False,True,False,False,False,False,False],[False,True,False,False,False,False,True,True,False,False,False],[True,True,False,True,False,True,True,True,False,False,False],[True,True,False,False,True,False,True,False,False,True,True],[True,True,True,True,True,True,False,True,True,True,False],[False,False,False,True,True,True,True,True,True,False,True],[False,True,False,False,False,False,True,True,False,False,True],[True,True,False,False,True,True,False,True,True,False,True],[True,True,True,True,True,False,False,True,True,False,False],[False,True,False,False,False,False,False,False,True,False,True],[True,False,True,False,False,False,True,False,True,False,False]],[[False,True,True,True,False,False,False,False,True,False,True],[True,True,True,True,True,True,False,True,True,True,False],[False,True,False,False,False,True,True,True,True,False,False],[False,True,False,False,True,True,True,False,False,True,True],[False,False,False,True,True,False,False,False,False,False,False],[False,False,False,True,False,True,False,False,False,False,True],[False,True,False,True,False,False,False,True,True,False,False],[False,True,True,False,False,True,False,False,True,False,True],[False,False,True,True,False,True,True,True,False,False,False],[False,True,False,True,True,False,False,True,False,False,True],[True,False,True,False,False,True,False,True,False,False,True],[True,True,True,False,True,False,False,True,False,True,False],[True,False,False,True,False,True,True,True,False,False,True]],[[True,False,False,True,False,True,True,False,False,True,False],[True,True,True,False,False,False,False,True,False,True,True],[False,False,True,False,True,False,False,True,False,False,False],[False,True,False,True,False,True,True,True,True,False,True],[False,False,True,False,True,False,False,False,True,True,True],[False,True,False,True,True,False,True,True,False,True,False],[False,False,True,True,True,False,False,True,True,False,False],[False,False,True,False,True,True,True,False,False,False,True],[True,True,False,True,False,False,True,True,False,True,True],[True,True,False,False,True,True,True,False,True,False,False],[False,False,True,False,False,True,False,False,False,True,True],[True,False,True,True,True,False,True,True,True,True,False],[True,True,True,False,False,True,False,False,False,False,True]],[[True,False,True,True,True,True,True,False,False,False,True],[True,True,False,True,True,True,False,False,True,True,True],[True,True,True,False,True,False,False,False,True,False,False],[False,True,True,True,False,False,True,True,True,False,False],[True,True,True,True,True,True,False,False,False,True,True],[False,False,True,False,False,True,True,False,True,True,True],[True,False,False,True,True,True,False,True,True,True,False],[True,False,True,False,True,True,True,False,False,True,False],[True,True,True,False,False,True,False,True,True,True,True],[True,False,False,False,False,True,True,True,True,False,False],[False,True,True,True,False,True,True,True,False,True,False],[True,True,False,False,True,True,True,False,False,False,False],[False,False,False,True,False,False,False,False,False,False,True]]], dtype = "bool")#candidate|10138|(12, 13, 11)|const|bool
var_10139 = relay.var("var_10139", dtype = "bool", shape = (12, 13, 11))#candidate|10139|(12, 13, 11)|var|bool
bop_10140 = relay.logical_or(const_10138.astype('bool'), relay.reshape(var_10139.astype('bool'), relay.shape_of(const_10138))) # shape=(12, 13, 11)
func_9581_call = mod.get_global_var('func_9581')
func_9585_call = mutated_mod.get_global_var('func_9585')
const_10144 = relay.const([10,-2,5,-3,-6,2,-6,9,9,9,4,3,-10,-9,7,-3,-2,-3,-6,-4,9,-8,-5,2,-9,-2,-6,8,-6,-3,9,-9,-10,-5,-3,9,-7,8,-5,5,-3,8,-4,3,1,2,-3,8,5,2,-6,-1,9,6,4,-8,8,4,10,1,-5,-3,6,-4,7,-1,6,-8,5,-8,5,4,10,7,-9,-5,-3,-5,-10,-2,-4,1,-6,6,5,8,8,5,-4,-1,-5,9,3,-9,-2,1,1,-7,-3,8,-7,-9,-2,4,-9,1,1,1,4,8,-8,-2,-5,8,4,-7,4,-7,-10,-4,-5,-2,3,-4,-3,2,3,4,5,-5,10,9,6,10,-6,-5,-7,9,2,8,-6,-9,-4,-7,7,-9,4,10,-3,-7,7,2,-9,-6,6,6,-4,-3,2,-9,-1,-5,-6,4,7,8,5,8,3,-7,-9,1,2,4,-1,10,-3,7,-1,-9,-6,2,9,5,5,-8,-7,-8,2,-10,6,5,6,-9,6,-7,6,-4,-1,-4,-3,1,-3,8,10,8,-9,-7,6,-5,-5,7,-4,-6,-9,1,5,3,-8,3,10,-6,-4,-5,-9,5,5,-5,2,-3,-2,-5,6,-4,9,-4,9,-8,-3,3,5,7,-1,-10,2,6,-8,2,8,-8,-5,4,4,-5,6,10,10,-3,10,6,7,-7,-2,10,-4,9,-3,-1,6,4,8,3,-1,-8,10,-2,-5,-3,-7,1,3,9,2,3,-10,9,-2,5,-9,-4,-7,5,7,-3,2,6,-3,-1,6,2,-2,-1,1,8,9,8,-10,1,2,-2,9,8,-2,6,5,-4,-9,1,-3,10,1,-9,3,-8,6,-7,-7,-7,-8,-7,-1,1,-7,9,-1,1,9,3,-2,4,3,2,-8,1,2,-10,10,-4,-4,-7,2,-7,8,2,2,-7,-9,9,8,5,9,-4,7,-5,10,3,2,4,1,9,4,-2,-4,2,10,-3,-3,7,-6,-10,-6,8,-7,7,8,3,1,5,-8,-7,-4,-7,-7,10,7,-8,5,3,10,-9,-6,-10,-8,2,2,4,8,-7,-6,-8,5,7,4,1,10,2,-2,2,-7,-8,4,5,3,-6,-8,-1,-2,4,-2,10,5,-7,6,7,-6,2,-6,1,-10,-6,3,1,10,1,-10,-4,-7,-2,-4,6,-5,-1,5,8,-9,4,-6,7,-10,-9,-1,7,-8,9,-9,2,-3,-5,-5,6,1,-7,-2,-4,3,5,8,10,-1,8,5,-4,-2,-9,-3,-10,2,1,2,-8,-1,-10,3,5,-10,3,-2,6,-5,-1,-1,-1,10,8,-9,10,-9,9,2,-7,-4,10,7,-1,2,-1,5,-5,-5,-1,-1,-2,-1,4,4,6,2,-5,-3,-1,8,-7,7,-8,-6,7,-9,-8,2,4,3,-4,-5,6,-7,2,-1,8,2,10,-6,5,-8,6,7,3,-7,7,-10,-9,-9,2,-9,-10,6,-6,7,-8,6,-2,-3,5,6,3,4,-2,-2,-5,-5,-1,-4,-3,-2,-5,-6,-1,6,10,-9,-9,-6,8,-5,10,-9,-9,2,6,-5,-2,2,10,1,-1,3,-5,-10,7,-7,3,8,1,-8,-3,9,-1,-9,8,-1,2,8,-10,-10,4,-4,3,3,-1,10,3,1,10,-7,2,9,9,-1,8,6,1,10,-1,10,3,7,-1,10,-8,2,-2,-6,-10,1,-10,-9,6,-7,-2,10,8,1,-8,1,-5,-6,5,1,-8,-3,-9,9,2,6,-2,-9,-6,10,-1,-9,-7,7,-8,-7,-1,5,3,-7,2,8,10,6,10,-9,10,-9,-5,-9,3,9,6,-3,-10,1,6,7,1,-5,1,1,-3,6,-7,1,1,-5,4,4,-2,5,8,-5,7,-9,-5,-8,3,6,-1,1,5,-8,7,2,-1,-7,-10,8,-4,6,7,8,9,9,9,3,9,-2,5,4,-10,5,-5,7,-9,-1,-6,4,10,-7,-7,-4,4,-1,-7,-5,7,-9,4,-4,-9,-7,3,-2,9,4,10,10,-4,-2,-5,-10,-8,5,-6,-5,5,10,7,10,1,-10,2,4,-1,6,3,8,-6,-7,3,7,-6,-3,1,9,-9,-5,-8,-6,-5,-5,-10,-4,-6,-9,3,-7,5,1,3,-9,8,-3,3,5,2,10,5,-8,-5,1,5,6,-8,-7,5,-3,-2,-9,-6,4,-8,-1,8,-7,-8,-8,8,2,-1,7,7,-8,8,3,-6,3,-3,9,4,2,-4,-3,-6,-6,-6,-10,-7,-1,10,1,4,9,8,7,-2,2,-3,8,-1,-4,-1,1,5,-5,7,10,-9,9,7,-9,-6,6,-9,-9,-9,9,-7,8,-4,8,8,-5,9,6,9,-4,10,6,-2,-2,-6,-3,-3,9,-3,-1,5,9,9,9,-3,-4,-2,-2,5,-7,5,6,-2,-7,1,7,-3,1,2,-1,10,-5,6,-9,1,2,8,6,-2,-5,1,1,8,8,-10,4,4,4,-9,1,-9,-8,10,6,-6,-6,-5,-5,-9,-3,-3,10,-6,-7,9,5,-10,6,-8,5,5,3,10,-3,2,-9,10,-10,8,-3,7,5,-2,1,-3,-4,-10,8,-6,1,4,-10,-1,-3,10,-6,-4,6,1,-6,2,3,-10,1,4,1,-4,-4,-3,-4,5,-2,10,-6,3,-5,5,-6,1,-8,-1,-4,-4,-2,7,2,5,-2,-9,-5,-2,7,8,-2,-5,5,1,-3,-8,-2,10,-7,-7,1,7,8,6,-9,-3,3,-1,-5,8,7,-4,8,-4,-10,-6,-7,-7,-4,-4,-7,-4,-6,1,-7,-1,2,5,9,7,-10,-10,-5,4,10,-4,7,-9,3,6,6,6,3,8,-3,-3,7,2,2,3,5,1,5,7,-10,10,10,-4,7,7,8,-5,-5,6,4,-1,7,3,4,10,10,-9,-5,-5,6,4,-4,-8,-7,-8,6,-10,-5,-6,2,10,7,-4,4,-7,-3,-2,-2,-8,9,-10,9,-9,-4,3,3,1,5,-2,-7,7,2,9,-4,-2,4,7,3,-8,-2,-4,4,-5,-3,8,-6,1,6,1,-6,-10,-7,6,4,-9,-4,-1,10,-9,-1,-4,2,4,-3,8,7,2,7,-4,-1,-7,-5,5,-4,-8,-3,-3,-8,-5,-1,-2,2,-2,1,10,-6,7,5,7,-8,8,9,-6,-10,10,5,10,6,-4,6,7,1,3,7,9,9,7,-9,-7,-6,-10,8,8,-10,1,6,-9,-3,7,4,-5,1,3,7,-9,-6,5,9,-8,-6,6,-6,-1,9,10], dtype = "int16")#candidate|10144|(1260,)|const|int16
call_10143 = relay.TupleGetItem(func_9581_call(relay.reshape(const_10144.astype('int16'), [7, 15, 12]), relay.reshape(const_10144.astype('int16'), [7, 15, 12]), relay.reshape(const_10144.astype('int16'), [7, 15, 12]), ), 0)
call_10145 = relay.TupleGetItem(func_9585_call(relay.reshape(const_10144.astype('int16'), [7, 15, 12]), relay.reshape(const_10144.astype('int16'), [7, 15, 12]), relay.reshape(const_10144.astype('int16'), [7, 15, 12]), ), 0)
output = relay.Tuple([bop_10140,call_10143,const_10144,])
output2 = relay.Tuple([bop_10140,call_10145,const_10144,])
func_10147 = relay.Function([var_10139,], output)
mod['func_10147'] = func_10147
mod = relay.transform.InferType()(mod)
mutated_mod['func_10147'] = func_10147
mutated_mod = relay.transform.InferType()(mutated_mod)
var_10148 = relay.var("var_10148", dtype = "bool", shape = (12, 13, 11))#candidate|10148|(12, 13, 11)|var|bool
func_10147_call = mutated_mod.get_global_var('func_10147')
call_10149 = func_10147_call(var_10148)
output = call_10149
func_10150 = relay.Function([var_10148], output)
mutated_mod['func_10150'] = func_10150
mutated_mod = relay.transform.InferType()(mutated_mod)
var_10228 = relay.var("var_10228", dtype = "uint32", shape = ())#candidate|10228|()|var|uint32
var_10229 = relay.var("var_10229", dtype = "uint32", shape = (2, 10, 11))#candidate|10229|(2, 10, 11)|var|uint32
bop_10230 = relay.right_shift(var_10228.astype('uint32'), var_10229.astype('uint32')) # shape=(2, 10, 11)
output = relay.Tuple([bop_10230,])
output2 = relay.Tuple([bop_10230,])
F = relay.Function([var_10228,var_10229,], output)
mod['main'] = F
mod = relay.transform.InferType()(mod)
print('==========mod==========')
print(mod.astext(show_meta_data=False))
print('===================================')
F = relay.Function([var_10228,var_10229,], output2)
mutated_mod['main'] = F
mutated_mod = relay.transform.InferType()(mutated_mod)
print('==========mutated_mod==========')
print(mutated_mod.astext(show_meta_data=False))
print('===================================')
graph, lib, params = relay.build(mod, target='llvm')
module1 = graph_runtime.create(graph, lib, tvm.device('llvm',0))
intrp2 = relay.build_module.create_executor('graph', mod, tvm.device('llvm',0),'llvm')
intrp3 = relay.build_module.create_executor('debug', mod, tvm.device('llvm',0),'llvm')
intrp4 = relay.build_module.create_executor('vm', mod, tvm.device('llvm',0),'llvm')
graph, lib, params = relay.build(mod, target='cuda')
module5 = graph_runtime.create(graph, lib, tvm.device('cuda',0))
intrp6 = relay.build_module.create_executor('graph', mod, tvm.device('cuda',0),'cuda')
intrp7 = relay.build_module.create_executor('debug', mod, tvm.device('cuda',0),'cuda')
intrp8 = relay.build_module.create_executor('vm', mod, tvm.device('cuda',0),'cuda')
seq = Sequential([
	relay.transform.AlterOpLayout(),
	relay.transform.AnnotateSpans(),
	relay.transform.BatchingOps(),
	relay.transform.CanonicalizeCast(),
	relay.transform.CanonicalizeOps(),
	relay.transform.DeadCodeElimination(),
	relay.transform.DynamicToStatic(),
	relay.transform.FastMath(),
	relay.transform.FirstOrderGradient(),
	relay.transform.EliminateCommonSubexpr(),
	relay.transform.MergeCompilerRegions(),
	relay.transform.Inline(),
	relay.transform.LambdaLift(),
	relay.transform.LazyGradientInit(),
	relay.transform.PartialEvaluate(),
	relay.transform.Legalize(),
	relay.transform.FoldConstant(),
	relay.transform.ToANormalForm(),
	relay.transform.ToGraphNormalForm(),
	relay.transform.SimplifyInference(),
	relay.transform.ToBasicBlockNormalForm(),
	relay.transform.FuseOps(3),
])
mod = seq(mod)
print(mod.astext(show_meta_data=False))
graph, lib, params = relay.build(mod, target='llvm')
module9 = graph_runtime.create(graph, lib, tvm.device('llvm',0))
intrp10 = relay.build_module.create_executor('graph', mod, tvm.device('llvm',0),'llvm')
intrp11 = relay.build_module.create_executor('debug', mod, tvm.device('llvm',0),'llvm')
intrp12 = relay.build_module.create_executor('vm', mod, tvm.device('llvm',0),'llvm')
graph, lib, params = relay.build(mod, target='cuda')
module13 = graph_runtime.create(graph, lib, tvm.device('cuda',0))
intrp14 = relay.build_module.create_executor('graph', mod, tvm.device('cuda',0),'cuda')
intrp15 = relay.build_module.create_executor('debug', mod, tvm.device('cuda',0),'cuda')
intrp16 = relay.build_module.create_executor('vm', mod, tvm.device('cuda',0),'cuda')
graph, lib, params = relay.build(mutated_mod, target='llvm')
module17 = graph_runtime.create(graph, lib, tvm.device('llvm',0))
intrp18 = relay.build_module.create_executor('graph', mutated_mod, tvm.device('llvm',0),'llvm')
intrp19 = relay.build_module.create_executor('debug', mutated_mod, tvm.device('llvm',0),'llvm')
intrp20 = relay.build_module.create_executor('vm', mutated_mod, tvm.device('llvm',0),'llvm')
graph, lib, params = relay.build(mutated_mod, target='cuda')
module21 = graph_runtime.create(graph, lib, tvm.device('cuda',0))
intrp22 = relay.build_module.create_executor('graph', mutated_mod, tvm.device('cuda',0),'cuda')
intrp23 = relay.build_module.create_executor('debug', mutated_mod, tvm.device('cuda',0),'cuda')
intrp24 = relay.build_module.create_executor('vm', mutated_mod, tvm.device('cuda',0),'cuda')

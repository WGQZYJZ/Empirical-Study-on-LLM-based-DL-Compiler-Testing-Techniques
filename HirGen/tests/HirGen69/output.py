import tvm
from tvm import relay
from tvm.ir.transform import Sequential
from tvm.contrib import graph_runtime
import numpy as np
mod = tvm.IRModule()
mutated_mod = tvm.IRModule()
const_3 = relay.const([[[1.889905,0.172317,1.242929,8.948648,-6.703866,-7.317775,6.969634,-8.668361,3.308849,9.354543,1.559292,4.457766],[2.576293,3.838648,-8.758316,-3.787448,-2.979411,6.908988,-2.672196,8.458791,2.566127,-2.452529,5.700521,-5.658170],[6.096089,9.128900,-0.126236,1.262629,0.914936,2.931018,2.486385,-0.100907,-0.277972,4.287900,-8.253674,8.060095],[-5.364309,8.709832,-7.186921,-2.905964,2.374353,-1.416233,2.200706,-1.928634,-9.120455,-4.244302,8.428281,8.932308],[6.723620,-1.030796,-1.147137,0.461495,-8.607808,-4.128361,8.084429,-6.262977,-3.385845,-5.798248,-0.287698,-4.390023],[-5.924348,-3.421672,4.721234,6.753680,5.840943,7.937328,2.489546,-7.332857,7.346298,-0.994374,-7.725291,2.668048],[3.940671,-5.377409,-9.900166,-3.715616,3.899836,4.063396,5.418458,1.959520,-6.869588,-8.615587,-6.127224,9.114037],[7.348102,-7.098847,6.500293,-8.835758,2.660564,-0.384596,7.352787,-4.663344,-9.629083,-5.016673,1.856921,-7.542576],[-7.973523,3.386115,8.032425,-5.516949,8.907552,-2.108988,-7.934950,2.229850,2.461789,-9.904974,8.181563,-8.142822],[-2.857911,7.848885,-7.798233,1.374150,-9.317508,7.623089,-4.564050,-9.159598,-4.317888,-1.477299,2.444531,-9.101381],[2.430115,1.555597,-0.139794,-4.503385,-4.049679,-7.642284,9.509643,2.474251,-6.638491,-2.815732,-5.442247,-1.516718],[7.762233,-5.236481,7.079408,-0.429210,2.187031,6.684989,9.445111,-3.072521,7.313675,-2.336507,-7.577965,-7.348410],[3.453715,5.539685,2.821856,-2.214150,-6.384428,1.885404,-5.322592,5.015640,3.418898,7.716544,-7.682881,3.851505],[-9.804357,9.275915,5.169750,1.112293,-2.737914,1.528238,9.916137,-9.353702,-6.006432,0.759594,4.709241,-8.957503],[5.094275,7.912167,8.851776,7.151964,6.432751,-1.811296,-5.886121,5.560179,2.326198,-9.685232,-0.708401,-0.939872]],[[-5.024498,8.395171,-5.919614,-9.821448,0.150631,-4.378656,-3.854892,-0.360009,-4.536569,1.089620,8.502865,7.393555],[8.888546,6.984978,-2.413730,-5.874392,2.936720,2.612002,6.120968,5.642812,0.493106,4.412726,7.563282,5.218596],[-3.555653,-4.181604,0.762470,-4.093897,2.015247,4.028390,-3.206247,-4.714093,0.926087,8.054243,9.295696,-5.382262],[-1.237619,0.632126,7.005809,5.855061,9.762047,0.659209,1.401375,8.527848,1.656180,1.763004,-7.732524,0.865266],[6.995143,-1.120668,9.211653,1.397767,-4.614302,6.970258,-8.369828,4.394407,-1.958221,-3.395565,1.046012,-2.974750],[-4.648611,-9.014949,3.304501,6.649818,-0.829078,-8.709372,-7.318788,-7.952199,-2.519292,-3.355814,-5.787570,-2.067992],[7.849390,7.294045,-0.141888,0.834133,3.152057,1.651427,-6.923069,3.774668,-2.065074,-0.046835,9.710680,9.608080],[2.296924,-7.459869,5.240792,-5.674326,-5.609475,3.185080,-8.226771,9.639440,-4.441160,-4.659067,6.589219,-0.912869],[0.262353,-3.318459,3.571194,-4.833786,-1.124513,-8.230744,1.243706,-3.902417,-2.999351,-5.054913,-4.246472,-9.047072],[-9.693691,5.812891,-2.657353,4.436747,0.114712,6.959257,0.069675,2.816071,-6.040640,-2.869808,-5.717956,8.000482],[-3.581159,7.371377,-1.508848,-8.995075,6.781289,-3.893215,2.467611,7.961375,-5.379214,3.141853,0.629143,9.209643],[-2.458809,4.516583,-8.903211,-1.285056,7.045708,2.660479,6.845325,-8.767226,-3.184086,3.921929,5.389205,-3.923130],[6.688469,8.931648,-7.392060,-7.294307,-6.926251,1.086114,0.633869,-2.643090,-6.508543,-5.417366,1.158908,-4.711747],[2.782510,5.907032,-0.652765,-0.937142,3.876379,-3.084998,-8.088540,-3.366276,4.963216,2.274429,0.402929,5.734678],[-8.801865,-2.209846,-2.311596,0.890539,-1.344419,-7.975853,-5.347898,-1.644519,8.075602,6.702858,8.152125,-4.456822]],[[0.370815,1.145714,0.471280,-2.048010,-2.744739,8.327191,0.597758,1.114187,5.368721,6.969779,-1.715734,0.820130],[-1.733450,-7.852787,5.641735,-8.650588,-4.094169,1.240006,-2.362379,3.314999,-7.612146,-4.859377,0.940590,8.955660],[4.287368,-3.107851,-6.167988,7.885547,-9.574833,7.515543,1.303856,7.997800,6.697150,0.706071,-0.544923,0.929981],[-7.642048,1.567922,2.072486,-2.984378,4.000715,-7.938923,2.561806,-2.527275,1.561242,3.014077,-6.257006,1.401840],[7.389431,8.159143,5.413799,7.587697,-6.464843,-0.948939,5.107714,1.231050,5.615576,8.709169,2.981681,5.010485],[8.638647,9.333074,0.857333,6.083379,-9.639862,-4.046971,4.879479,5.634620,-6.324459,2.940130,-2.691309,-0.283057],[8.838815,-8.192525,-0.891745,2.745581,-9.819437,6.371368,5.562969,8.726975,6.971426,-1.142458,0.887529,8.155886],[4.362420,9.804296,1.606566,1.795518,6.100502,2.485620,2.783659,2.332666,-4.190655,4.253974,-7.362797,7.190053],[0.367270,-7.513184,3.233902,-3.440466,4.381773,-0.562253,-9.288061,1.345539,-9.553504,6.058703,8.089738,6.556808],[3.706680,-2.462407,3.810077,3.212213,7.672873,2.826684,6.514356,0.629590,-0.998551,8.850928,4.392759,-4.122349],[-7.406894,-9.202371,5.307105,9.790663,-8.357654,-8.664223,0.222275,-9.694133,1.354700,9.596049,-9.471003,1.796355],[-0.422699,2.843234,2.058192,1.253411,7.288799,-5.933344,-6.168444,3.731302,9.825023,-2.399655,2.555581,5.900556],[7.986866,-2.649802,3.573611,-0.974392,-8.056035,3.895187,6.922748,1.380961,-0.914277,8.462948,2.243018,-6.939302],[-8.406601,9.077023,0.216224,1.432780,6.493596,-2.023144,9.954884,8.604706,-2.148511,-7.024497,4.049227,-5.252207],[9.241251,-7.166460,-9.917543,2.439079,-3.915591,1.555504,1.466862,-2.327430,-2.420654,4.115880,8.209936,8.065366]],[[2.568917,1.422642,-5.783935,0.550844,-6.982131,-7.993065,-8.253835,0.490922,4.302395,-4.926030,1.012988,3.852163],[-3.264403,-2.653976,1.893193,4.136627,2.901257,-8.145390,3.799664,9.987840,3.255629,-7.772825,8.776210,-9.313078],[-8.921191,7.660603,7.317529,3.672675,6.344487,6.882664,-1.563795,5.732239,-8.715355,6.695904,8.018367,1.924807],[-4.377307,-1.213756,7.790326,-6.730166,-6.965786,-3.134244,6.901842,9.502672,1.589175,2.320713,9.400454,9.469884],[-3.551188,3.020350,2.648065,7.320014,0.226249,8.567254,-9.045419,-9.716411,8.482868,3.529929,7.814296,4.158983],[3.919820,-9.009671,8.905592,-7.194491,-8.758733,-8.433666,-9.388924,2.739463,8.803939,2.464251,9.059147,-8.733255],[-1.966725,6.132896,-7.139491,-2.776530,6.393694,6.413797,-1.458760,8.197876,5.127538,-6.235340,2.327197,5.892312],[-2.620889,-0.682515,1.735853,-4.208069,-0.850315,9.120474,-5.614525,5.970823,-4.992268,-0.411543,-5.415529,0.256048],[6.411830,-5.603278,2.391558,-9.228373,-6.017227,0.542081,4.048810,2.584982,1.545250,0.982239,-1.884567,-3.969893],[5.990451,1.113380,-8.888012,2.205550,-3.365641,-1.453873,-9.878719,2.970748,6.901295,-8.385901,-6.089087,6.820309],[-6.595703,9.569190,5.571010,8.116663,-3.222305,-5.153029,9.463006,3.665471,7.390516,9.142211,-0.887501,-3.842289],[-6.901595,-2.630572,-9.941973,-0.476426,-7.332915,6.898357,0.989341,-3.776492,8.912707,-7.499211,6.461371,-2.041811],[8.303069,-6.333672,-1.716254,-3.190944,2.016600,3.824673,-0.556915,-3.985925,3.281778,-8.729043,-7.516703,6.161655],[3.703912,-3.670422,2.333295,-4.237663,-3.152043,-7.091344,3.034828,0.885009,9.801979,7.102150,7.189064,3.727461],[4.837429,0.368965,-8.874243,-7.200157,1.356414,-9.817451,4.009887,4.340967,4.544082,4.864588,-9.171051,9.845683]],[[0.973165,3.236191,-3.555328,-8.421468,-0.110106,3.004842,-2.359754,3.417566,-6.394543,-4.160703,-2.530393,-0.344973],[2.638727,-4.184355,-5.002805,8.983123,-7.585049,-8.751732,1.320784,1.597138,7.915532,3.463838,-2.583105,9.319192],[-0.630492,-5.685356,9.459824,4.432685,-8.699700,1.617803,9.103431,6.274716,2.991652,3.705634,-2.524357,8.146749],[4.959964,6.879644,0.414567,8.333100,-2.223714,-4.016594,-4.761489,-8.471640,7.631836,5.444367,-4.106677,6.833750],[9.024779,1.877149,2.679738,7.788350,7.064253,-1.593798,9.528447,-6.075899,4.871012,0.643238,-9.867621,6.338493],[4.440719,7.006487,9.508534,-2.508752,9.377382,-8.680666,-0.217916,4.116732,-0.495242,-7.546020,8.326986,5.035791],[7.246493,-1.505361,-6.053034,4.887752,9.480501,3.773221,6.784918,7.454907,2.970150,9.299602,5.019161,6.072643],[-2.932363,0.347604,4.631850,5.536174,8.734100,-3.428906,4.252902,-3.025402,-8.074970,1.549391,2.427952,-7.163928],[-4.432896,-7.311158,9.533424,5.893149,4.371651,7.620268,9.983193,6.449734,0.815457,-3.052910,3.130165,3.464505],[-3.179731,-3.516741,1.203126,6.422189,-4.912147,0.155159,4.329778,-3.122637,6.681194,0.135458,-4.722895,9.975219],[3.897030,-1.636901,-9.545478,-7.518994,-3.908100,-3.849066,-9.462291,4.778600,9.331653,-3.622155,0.627949,2.113356],[-5.346992,1.203216,4.731660,-2.529491,-2.817573,-7.619725,-8.747935,0.605737,4.198393,-6.001803,4.610539,-3.734131],[-8.634692,-2.592542,7.980260,-4.104683,-9.666553,-8.212741,6.159271,-2.321991,7.223817,-9.762471,-3.935226,-4.426585],[-5.508024,0.509013,-9.520646,-9.706843,-3.038979,-3.446118,6.767431,9.078267,-8.854704,9.523744,1.556389,7.335525],[-2.217979,-6.873176,-9.292055,-9.927343,-9.943453,-1.914446,-5.748253,9.930914,7.001181,-1.501069,4.525865,0.932540]],[[-4.852548,4.625239,-4.616105,-7.108894,-1.008516,3.921630,-7.707661,9.253522,9.434001,7.193732,4.235037,-5.234941],[6.621316,1.805050,6.209205,-3.319876,0.794974,0.482223,1.620203,9.181373,-1.753751,-9.711391,-0.602141,1.114577],[3.251030,2.607396,-4.912860,-7.759124,4.151909,-6.566323,-8.655455,-8.053373,-5.024355,7.222903,8.853685,9.237673],[-0.887114,-8.967565,-4.971425,-5.523736,5.123959,-4.633902,-8.991786,2.144982,-0.396176,-4.297941,-1.561996,-5.448065],[-7.824098,-2.939587,-1.680917,3.115111,9.311201,-7.067085,-9.507474,-6.139958,-9.814666,0.375749,6.216716,-3.784414],[-2.745481,-2.474443,4.208522,5.272826,-2.381765,-9.164191,9.567456,1.171898,0.249991,-4.349569,7.749858,6.278786],[4.947011,-9.312165,4.276549,-5.020560,0.793299,5.398805,-7.270426,-9.708184,-5.849189,3.123964,-0.903986,7.149195],[-6.078840,8.241292,-0.941917,-6.727689,2.258197,-6.607541,4.657393,-8.448935,4.722636,-5.178264,-6.954710,-1.229797],[9.519326,6.445198,1.829191,3.444889,-2.329892,4.946271,-1.090099,0.254343,-4.294030,-9.980706,-8.043667,-3.973673],[-8.777922,5.538073,1.295925,-0.365432,-6.985064,-7.062898,-1.874315,0.430469,8.299668,3.757985,-8.142695,1.374142],[-6.907076,5.338111,5.604702,-4.901141,-5.613465,-4.683936,5.853257,-4.838522,-0.689176,9.115589,-0.208064,-0.455891],[6.124137,7.344230,-9.185310,-8.011680,6.088013,8.820025,1.468747,-7.900637,-9.780454,2.533916,5.783742,5.283403],[6.274027,-6.668648,1.682469,1.280706,-3.964664,9.432253,3.745973,0.847825,4.667540,2.492751,-9.497119,-4.880790],[9.566714,5.162131,1.401187,-2.740260,9.596257,-6.535581,8.898480,-0.939877,7.862447,-1.545020,6.858965,6.583648],[4.994715,-4.312304,-3.702859,-9.818518,-2.835033,3.107783,-3.939664,-9.020152,-9.311591,-2.246455,-6.244191,-3.339424]],[[-8.667514,2.916295,-1.080630,-8.227130,2.448155,-0.435847,8.266615,9.993834,-9.979649,5.291678,2.814718,-1.809226],[6.196896,7.932514,0.298603,2.629398,2.070332,-0.765624,7.346450,6.134227,0.171405,-2.591690,-0.535754,-3.521285],[-4.299576,2.194531,-4.657166,-8.451727,-4.283790,5.530402,7.070160,-0.981502,6.953379,-1.860723,1.523623,-5.748940],[3.434442,-2.425988,-9.535299,-2.081525,-6.673031,-4.217640,-1.141226,-6.915434,7.277799,-0.506292,-6.675994,6.000641],[3.065700,-8.765725,5.016665,3.279872,-8.951906,-0.414027,8.918076,3.775247,-0.802046,-7.720360,-6.415826,2.030567],[-0.621459,-4.111014,-4.101205,7.742384,-3.143977,3.445520,-7.294483,-1.553451,-5.263534,6.428647,-1.550270,3.513388],[5.260911,7.355535,1.403523,0.526595,-7.027768,-7.889115,4.631022,3.571951,-0.004155,7.271515,1.523369,6.610543],[-5.935767,6.373769,5.183584,5.013331,-4.762121,2.547431,3.206580,-0.696598,-6.328957,9.900241,-0.972593,2.794824],[7.671041,5.628015,4.522297,-4.140286,6.656320,-3.135660,-0.975198,4.958415,-3.447514,-6.857322,0.050577,0.392601],[-4.390162,1.608549,8.119548,7.357254,0.964014,-7.048016,7.355881,-8.722664,-1.079830,2.630779,-2.124097,-2.511929],[3.305692,1.100740,2.681584,1.235279,2.154523,-0.142163,1.403693,6.526180,-3.755525,1.614967,-8.418923,-5.505738],[-6.377515,8.674718,7.509321,2.922273,7.783775,5.761904,-0.536312,-3.176447,-5.192002,-6.384202,-8.845464,-7.380340],[6.274370,-3.650183,-9.640428,5.821095,-1.434405,6.990704,-8.860248,5.660820,9.815541,-5.935484,7.299104,1.699309],[6.828667,6.140078,9.526460,-6.528112,-1.549651,-4.989653,3.187517,5.350605,7.529494,2.052840,-1.041057,0.001215],[-7.850263,3.340358,-8.820279,8.212682,-7.761479,0.129394,-6.551616,2.904157,-8.791858,9.908685,5.641770,0.864840]],[[-1.145850,-2.044716,2.738164,-2.175458,8.145593,7.542462,5.103638,9.530875,-8.762679,3.483137,-1.708466,7.574490],[6.305171,-8.025915,7.191420,0.308916,4.679706,-5.472294,6.666029,-8.074287,-0.031340,-1.545568,-1.454908,-6.206728],[-3.031446,0.188052,-6.256971,2.468421,-0.312998,-7.812801,2.442937,6.652827,7.958808,-6.534418,-0.427129,8.088267],[-9.104658,-0.021317,8.431020,7.647757,8.415270,-3.295124,1.699754,3.659539,0.927981,-1.642775,8.783954,0.656880],[8.862782,4.989989,-0.294311,0.136260,-5.445827,7.860604,-6.038689,3.786180,-9.613319,8.655805,3.076272,1.758445],[-2.967976,6.012367,5.637627,-9.360087,-2.325214,-1.279925,-7.817055,-8.969189,-3.879506,-9.658347,-9.527376,-8.049245],[6.189343,8.414878,-6.357778,8.681768,-7.777395,-2.808792,-0.393260,-0.965422,-3.400066,0.021657,-0.597543,4.950129],[-6.687506,8.494316,6.719661,2.987528,8.072635,1.271914,8.747846,-9.002221,4.929731,6.419054,0.338200,8.099027],[-9.108917,-1.628352,-6.557567,2.117280,9.255788,0.261900,-3.065972,2.983173,1.631535,1.067894,-7.949723,-5.399928],[-6.084216,2.098929,-3.768601,0.718959,6.519614,4.218382,8.119093,-8.376252,-8.151755,6.014302,-8.687659,-0.481189],[5.347335,-3.197202,-3.866207,-5.490472,-6.221621,-8.985297,-8.322076,-1.193862,-8.110945,0.586819,-9.971942,-7.123570],[4.949525,-2.639819,3.876597,-3.328537,-9.616045,-5.377002,5.254916,-7.535196,-0.473582,-8.115175,-9.037608,-0.121542],[7.392458,2.045794,-7.067453,-2.725605,4.333474,5.523721,8.412884,-6.011165,9.184465,-4.084099,1.780624,-2.447027],[-1.588668,-9.800706,3.691951,0.707745,-2.793486,3.760407,-8.450914,-5.827573,-6.220758,-0.076889,6.963152,7.464417],[2.175661,-4.374090,-7.588802,-4.932232,3.732967,-2.971521,-5.479028,0.634906,-8.097736,9.763004,-8.141105,-1.535494]]], dtype = "float64")#candidate|3|(8, 15, 12)|const|float64
uop_4 = relay.rsqrt(const_3.astype('float64')) # shape=(8, 15, 12)
output = uop_4
output2 = uop_4
func_11 = relay.Function([], output)
mod['func_11'] = func_11
mod = relay.transform.InferType()(mod)
output = func_11()
func_12 = relay.Function([], output)
mutated_mod['func_12'] = func_12
mutated_mod = relay.transform.InferType()(mutated_mod)
func_11_call = mod.get_global_var('func_11')
func_12_call = mutated_mod.get_global_var('func_12')
call_13 = func_11_call()
call_14 = func_11_call()
output = call_13
output2 = call_14
func_17 = relay.Function([], output)
mod['func_17'] = func_17
mod = relay.transform.InferType()(mod)
mutated_mod['func_17'] = func_17
mutated_mod = relay.transform.InferType()(mutated_mod)
func_17_call = mutated_mod.get_global_var('func_17')
call_18 = func_17_call()
output = call_18
func_19 = relay.Function([], output)
mutated_mod['func_19'] = func_19
mutated_mod = relay.transform.InferType()(mutated_mod)
func_17_call = mod.get_global_var('func_17')
func_19_call = mutated_mod.get_global_var('func_19')
call_47 = func_17_call()
call_48 = func_17_call()
func_11_call = mod.get_global_var('func_11')
func_12_call = mutated_mod.get_global_var('func_12')
call_63 = func_11_call()
call_64 = func_11_call()
func_11_call = mod.get_global_var('func_11')
func_12_call = mutated_mod.get_global_var('func_12')
call_67 = func_11_call()
call_68 = func_11_call()
output = relay.Tuple([call_47,call_63,call_67,])
output2 = relay.Tuple([call_48,call_64,call_68,])
func_73 = relay.Function([], output)
mod['func_73'] = func_73
mod = relay.transform.InferType()(mod)
mutated_mod['func_73'] = func_73
mutated_mod = relay.transform.InferType()(mutated_mod)
func_73_call = mutated_mod.get_global_var('func_73')
call_74 = func_73_call()
output = call_74
func_75 = relay.Function([], output)
mutated_mod['func_75'] = func_75
mutated_mod = relay.transform.InferType()(mutated_mod)
func_73_call = mod.get_global_var('func_73')
func_75_call = mutated_mod.get_global_var('func_75')
call_79 = relay.TupleGetItem(func_73_call(), 2)
call_80 = relay.TupleGetItem(func_75_call(), 2)
func_73_call = mod.get_global_var('func_73')
func_75_call = mutated_mod.get_global_var('func_75')
call_88 = relay.TupleGetItem(func_73_call(), 0)
call_89 = relay.TupleGetItem(func_75_call(), 0)
uop_95 = relay.log(call_88.astype('float32')) # shape=(8, 15, 12)
uop_97 = relay.log(call_89.astype('float32')) # shape=(8, 15, 12)
output = relay.Tuple([call_79,uop_95,])
output2 = relay.Tuple([call_80,uop_97,])
func_109 = relay.Function([], output)
mod['func_109'] = func_109
mod = relay.transform.InferType()(mod)
mutated_mod['func_109'] = func_109
mutated_mod = relay.transform.InferType()(mutated_mod)
func_109_call = mutated_mod.get_global_var('func_109')
call_110 = func_109_call()
output = call_110
func_111 = relay.Function([], output)
mutated_mod['func_111'] = func_111
mutated_mod = relay.transform.InferType()(mutated_mod)
func_17_call = mod.get_global_var('func_17')
func_19_call = mutated_mod.get_global_var('func_19')
call_131 = func_17_call()
call_132 = func_17_call()
func_109_call = mod.get_global_var('func_109')
func_111_call = mutated_mod.get_global_var('func_111')
call_138 = relay.TupleGetItem(func_109_call(), 0)
call_139 = relay.TupleGetItem(func_111_call(), 0)
output = relay.Tuple([call_131,call_138,])
output2 = relay.Tuple([call_132,call_139,])
func_141 = relay.Function([], output)
mod['func_141'] = func_141
mod = relay.transform.InferType()(mod)
mutated_mod['func_141'] = func_141
mutated_mod = relay.transform.InferType()(mutated_mod)
func_141_call = mutated_mod.get_global_var('func_141')
call_142 = func_141_call()
output = call_142
func_143 = relay.Function([], output)
mutated_mod['func_143'] = func_143
mutated_mod = relay.transform.InferType()(mutated_mod)
func_11_call = mod.get_global_var('func_11')
func_12_call = mutated_mod.get_global_var('func_12')
call_244 = func_11_call()
call_245 = func_11_call()
output = call_244
output2 = call_245
func_248 = relay.Function([], output)
mod['func_248'] = func_248
mod = relay.transform.InferType()(mod)
output = func_248()
func_249 = relay.Function([], output)
mutated_mod['func_249'] = func_249
mutated_mod = relay.transform.InferType()(mutated_mod)
func_17_call = mod.get_global_var('func_17')
func_19_call = mutated_mod.get_global_var('func_19')
call_307 = func_17_call()
call_308 = func_17_call()
func_17_call = mod.get_global_var('func_17')
func_19_call = mutated_mod.get_global_var('func_19')
call_309 = func_17_call()
call_310 = func_17_call()
output = relay.Tuple([call_307,call_309,])
output2 = relay.Tuple([call_308,call_310,])
func_311 = relay.Function([], output)
mod['func_311'] = func_311
mod = relay.transform.InferType()(mod)
mutated_mod['func_311'] = func_311
mutated_mod = relay.transform.InferType()(mutated_mod)
func_311_call = mutated_mod.get_global_var('func_311')
call_312 = func_311_call()
output = call_312
func_313 = relay.Function([], output)
mutated_mod['func_313'] = func_313
mutated_mod = relay.transform.InferType()(mutated_mod)
func_248_call = mod.get_global_var('func_248')
func_249_call = mutated_mod.get_global_var('func_249')
call_424 = func_248_call()
call_425 = func_248_call()
const_428 = relay.const([[[4.642890,6.894227,1.104765,-5.571891,8.488881,4.274062,7.240657,-5.722101,-4.941568,-3.285317,-1.647955,-0.277754],[1.644099,-5.092489,-2.715521,2.677067,4.696358,7.427937,3.457287,-2.427367,1.900132,-6.983479,-2.785499,-9.573684],[9.978219,0.934412,-5.063272,6.131921,0.185900,8.744548,-4.533953,-0.450283,-0.204031,-0.174190,9.790850,-2.447949],[-3.981515,0.549484,-8.648956,-0.644174,-3.255873,7.611883,1.655521,8.511433,6.832896,-0.020245,5.253528,1.040380],[-9.783738,3.102560,-7.739126,0.512072,-6.357133,9.680533,-1.588970,1.654309,1.650482,6.087723,4.808606,-2.567045],[0.075621,-2.940213,7.669205,-9.610735,-4.034772,3.799718,-6.582369,4.847022,0.851862,0.500313,-6.226643,1.862981],[9.780897,-8.214328,2.069956,4.963586,-9.992598,5.933121,0.743973,2.766987,7.665830,-9.641067,4.153119,-8.267394],[4.007222,-0.561237,-0.544074,9.291390,-2.503532,4.248896,-6.594568,5.653297,-3.428269,-1.381618,-2.340127,8.576456],[-0.984590,9.417023,-6.524317,2.553589,2.608479,0.543337,4.502426,-1.140893,6.174610,2.084310,-6.495628,-0.363195],[6.573872,0.671962,-3.211883,8.905375,-0.091116,8.175283,-8.982382,-7.916517,-5.436350,-0.831512,9.251364,-7.844391],[-3.878066,-7.000182,-1.956530,0.908525,-6.959145,6.731947,-8.324021,1.661977,-2.925940,8.744531,9.804138,-4.220913],[9.585740,1.695730,8.868887,0.062095,6.063335,1.587089,-0.966838,4.603769,4.443040,-6.371688,8.079406,-3.794453],[-1.012299,4.507198,-9.418222,6.337322,-5.579628,-8.938405,-4.585093,7.986014,4.379033,2.651468,8.236638,-2.661185],[-6.909396,-3.605296,4.952931,9.859282,-0.831056,1.649232,-9.789467,4.783273,-9.623532,0.427781,7.732221,-6.069417],[2.289089,7.394400,7.026604,1.130381,-7.332827,0.866503,-5.176482,8.975507,8.565455,2.800777,8.351384,-2.419927]],[[-4.940864,4.537680,-3.255149,6.695956,0.514611,2.632244,-1.419567,-9.113544,-3.549557,-9.833758,-8.606125,-6.313011],[0.270342,-3.844738,-3.534970,-7.289495,-3.053934,-8.662199,3.944993,-6.834025,-6.521917,9.585187,-6.655558,3.520218],[-3.434428,8.882760,9.237767,-8.853269,-6.272861,-9.427272,-7.580039,6.279124,-6.702541,4.227047,0.158541,-1.072064],[5.111877,3.058589,-3.953724,6.080168,-2.486176,1.902824,-5.015762,-0.280554,-8.783348,3.152101,0.661074,7.959371],[-5.436636,-0.098917,-1.692819,-9.357525,-2.090801,4.813761,-5.494831,7.222818,-0.471086,5.871045,7.004001,7.187073],[-4.113877,-7.170822,3.966485,2.820411,-4.653178,-6.331998,-0.385246,5.845761,-6.132831,0.787423,6.845572,4.731195],[-0.565315,-8.422112,6.230123,4.670890,-4.312105,5.402695,-3.959414,4.812407,-7.300419,1.327380,-5.774130,-9.597485],[-5.657045,-0.806186,-4.151607,6.848652,-3.296026,-3.565143,1.064694,3.064046,0.430893,2.158216,5.758983,1.314995],[-0.228624,-8.686076,1.431687,4.152963,7.503670,4.765427,-4.682968,-9.140144,-8.185171,-9.125437,-2.648026,1.006894],[-1.335095,3.097863,4.613683,-5.326361,-9.618014,2.834124,2.173482,9.815209,-3.489368,-7.685374,9.121003,9.507494],[-1.730926,9.650842,5.618465,-1.905760,2.558341,5.892475,-9.349646,6.735631,-1.251836,-8.660654,5.520102,-8.879688],[-4.967240,-1.294826,5.105381,9.302672,9.457120,7.392537,3.523863,9.286474,8.622594,-6.611115,-9.809143,-7.567807],[-6.765266,-8.993881,-4.752381,2.565894,8.373102,-2.125828,1.593021,-2.069603,-7.030627,9.451790,-4.269469,6.872272],[0.201003,3.785814,7.262351,-4.558750,3.755536,9.859439,-3.904818,-6.286823,0.971745,-1.500215,3.154062,1.404339],[-5.171783,4.971717,5.980069,1.013770,-0.226185,-0.255174,-5.723945,3.676991,4.955776,-5.408399,0.853860,-8.291326]],[[1.649729,6.432702,4.208030,6.247613,7.436618,-5.369633,2.874213,4.851120,8.291785,3.691528,5.743000,3.088367],[3.956130,-6.906199,-9.087541,4.684774,7.923716,-8.050055,-8.316939,9.311130,3.584839,-4.577556,1.187454,-8.631274],[-4.145848,-2.882665,1.582118,-1.732234,5.933817,9.499902,8.365209,-8.791934,-0.879969,-4.476871,-1.029664,-4.214136],[8.072290,-7.460469,0.208580,7.184188,-7.575412,3.087572,1.015724,-3.603368,-2.894602,1.312777,4.353454,-7.012810],[-2.021628,-6.884434,-4.140544,-3.543409,8.895298,-2.294027,-0.055731,-5.184937,-6.407949,-3.185801,-8.842000,-7.441443],[-8.599162,-8.187857,0.829849,8.458116,0.918424,-2.819894,1.196677,-4.995620,2.367355,6.886977,-0.299888,-1.191364],[5.384420,9.591594,-2.233048,-1.213508,7.150690,-7.667541,5.581034,-3.948980,9.543602,4.447443,-7.917938,5.633755],[-0.765664,3.555449,6.954212,9.104598,-5.324873,-2.408370,2.349774,3.672065,6.099781,9.905938,-2.940768,-1.702188],[8.495229,-9.464689,3.236857,3.192867,-9.663172,-7.106055,5.606928,-8.691889,-4.548326,-1.011802,9.017967,-1.477784],[6.377359,0.573434,-9.206845,3.568005,6.354155,0.327844,9.798704,9.951496,1.226208,2.879086,5.403776,-7.324322],[-7.635647,6.960134,-1.257572,4.526532,-0.757067,8.997383,-2.643805,-8.373150,-1.568254,-8.929450,-8.910934,1.790460],[0.607433,-6.658471,-2.018617,5.578637,5.978551,-0.792581,-9.987802,8.220197,5.843269,0.008326,6.426312,4.006003],[2.024219,-4.820891,5.716688,2.715484,-6.822693,-5.769144,-1.544535,-6.468270,-8.050505,-2.962965,-0.176248,7.631588],[-9.125976,1.107681,-8.123731,-0.169002,-8.829197,-1.846692,-8.282449,-5.817963,9.332416,-1.797984,-1.542890,-5.000608],[8.127851,-0.616278,-5.621339,2.829140,-6.328242,5.704042,-3.211206,4.333241,-6.105655,-7.160074,5.127092,3.577706]],[[6.440767,7.500554,-7.092589,8.062585,-1.287176,8.965478,8.773462,9.095549,7.900497,1.962914,-7.742939,-5.340521],[-1.949892,-4.350567,-3.245958,-2.787035,5.327431,6.535706,6.087590,2.595042,-6.549539,9.066606,-5.982846,-1.621304],[3.815994,3.894189,-4.093095,-3.151739,-0.632660,-6.872014,-3.626517,9.138275,-5.206972,-4.130835,5.124528,8.838689],[-1.934796,0.012846,-8.767726,8.660190,3.801917,0.067707,-9.485463,-7.084749,-3.807861,7.812980,-3.162323,-3.087165],[-0.843648,-9.930627,3.577802,8.920842,-1.141588,-1.823962,-9.340304,-7.240914,-4.928858,3.192759,3.497327,2.702710],[1.416202,9.570682,8.352002,-8.448084,-0.747509,7.813858,6.898205,8.207790,-6.347891,-2.298861,1.623465,-6.615559],[-6.651603,1.043794,-3.291928,-9.693841,9.283520,6.962745,8.310099,-6.067836,-5.849484,1.829071,1.800404,-0.449056],[-3.888639,-2.381683,7.048949,4.257950,0.720891,-4.213683,-3.070017,9.496583,-1.926509,-0.190314,-2.054207,3.146096],[2.648838,-3.305945,4.693423,-0.735879,9.959388,-0.434921,0.169297,7.144930,-9.839910,-0.559335,-8.471993,-2.552262],[-2.797682,-6.064994,-5.293024,-5.006667,7.239220,-7.458543,8.498371,-7.088012,9.774935,1.701102,9.615637,8.555546],[-0.001938,-9.642965,3.256624,9.484222,7.257987,3.036172,7.760265,2.282078,-4.236644,-2.476790,-5.412313,2.985699],[7.498251,4.193141,2.671255,-6.117684,-0.109204,-6.738094,9.737636,-9.605799,1.157138,-6.223873,1.244319,8.005852],[0.043483,5.876468,6.252753,-3.472462,0.914677,9.529686,-7.232296,7.864785,-3.496220,7.305977,9.840535,-2.482484],[3.074326,-3.413920,6.539804,-9.796056,8.321258,-8.002120,-6.074038,5.456319,-8.654974,-2.793560,-5.564750,-4.491641],[0.924448,-9.522413,3.858667,-8.848968,-5.733759,9.554478,-6.189995,-0.512357,8.657876,-4.024358,2.502455,9.510006]],[[-4.608708,5.069388,3.113606,6.393131,2.013667,-1.330212,1.208069,6.354473,9.032951,9.865639,-6.309921,5.578119],[-9.590146,-2.074216,9.155198,-2.603111,3.592966,-5.300534,7.995823,-7.736852,6.367961,8.179279,6.878517,-2.142269],[6.963467,-2.515326,-3.507775,3.624748,-8.011812,-9.626225,5.246208,2.991382,-1.389474,-6.902687,-5.472069,-4.612478],[8.482846,-3.627146,-2.992720,7.871233,-5.838506,-6.425806,9.880964,9.764555,6.653484,1.366474,-3.613217,6.046683],[-1.807790,-5.284910,-0.001870,-0.073139,-6.095108,-3.705135,-0.028033,-1.846082,-6.304118,0.920187,-6.408535,8.505708],[-2.496023,1.101541,3.164083,-4.169676,-2.700458,-7.378489,4.221244,-1.233333,1.997935,0.242701,-5.917468,-9.930418],[-4.019023,-3.985288,8.163971,-6.999505,-3.567928,-5.971584,-2.299731,3.804808,-5.297311,-6.795375,-5.921327,5.524666],[9.791113,3.285615,0.170773,-0.530680,4.703715,-7.121214,-4.164145,6.037885,-9.473034,8.231234,-8.511505,4.246984],[-6.934408,-9.571352,-2.737724,6.271094,-1.667737,2.355069,-1.140734,2.897938,-6.211282,-7.387129,-8.086984,3.783110],[-5.978161,-1.314804,4.080627,0.496802,0.855377,9.552163,9.311864,5.927291,3.920259,6.831620,6.544454,-7.662635],[7.917851,-1.294511,-3.243710,-7.087156,-6.714820,1.125897,0.237525,-6.806663,-3.043118,-7.225648,-8.616549,-9.836545],[1.663273,0.852137,-8.781871,-8.766081,1.876837,-6.536670,6.353255,-1.006435,2.433515,3.117796,-0.059766,3.402132],[3.770140,-0.859263,3.715285,-4.501975,6.952651,8.565479,9.708873,3.058255,7.389664,-3.695282,-6.272773,-3.431631],[-9.484201,-0.096194,6.021538,6.377373,-6.998855,-4.111583,-8.538034,-6.261762,4.905213,-9.671706,4.946252,3.460146],[8.925101,2.845824,-8.212671,7.514540,-3.158324,9.487164,8.904950,-4.432454,-4.328832,3.938879,6.201930,-5.308720]],[[-4.946984,8.309593,-7.153805,-2.890506,-0.527950,-6.561695,4.495782,6.087323,0.510086,-5.594548,-2.389119,-4.504426],[8.898896,5.306795,3.585646,8.813315,-6.912301,-7.476448,6.397788,-6.199288,-6.181442,-0.944123,-1.334150,8.452810],[-7.085532,-6.897735,0.279514,-0.111648,6.955025,8.679284,6.638793,-6.637554,-6.457823,7.137073,2.739681,8.397906],[-4.934113,5.231097,-9.685955,-2.643650,-7.518598,9.947376,-7.168866,7.818918,0.759520,-3.207436,3.572453,3.166702],[7.179721,-4.101648,-5.661489,1.092451,6.050211,-1.950694,9.055108,9.124933,7.931600,3.095727,-8.612863,3.869007],[-6.523699,-9.998963,-4.300601,9.006677,-4.835813,-1.700503,9.098064,6.049580,2.630524,-4.534589,3.319943,-0.223437],[-4.348158,-1.261667,-5.457228,8.003266,2.262670,1.967030,8.013524,-2.086826,-0.575316,-8.482888,-0.335015,-1.449522],[6.282394,-6.670049,-7.055959,-1.435567,7.366689,8.931325,-1.610084,-2.946124,9.210478,-3.223003,-7.197077,-3.647720],[9.717970,-6.533105,1.479548,7.128739,-6.636847,1.381511,7.510997,3.905076,-5.393813,-0.144393,1.640368,-6.168661],[-5.952143,2.142318,3.450057,7.158703,8.817256,-8.758423,0.803403,0.639950,-3.666079,-1.968040,-0.535802,-0.556981],[9.994817,-4.862330,5.358582,5.083507,9.133461,-2.093428,-7.067789,2.135151,1.431873,-0.017797,-7.309704,-5.426302],[-1.099595,-4.955315,5.256317,3.394912,6.199449,9.911476,0.351241,0.167816,-8.044654,3.065056,2.847790,-4.776739],[5.040680,3.844683,-5.100255,-3.681714,6.984990,-8.094840,9.466344,3.809183,4.339921,9.147626,0.885751,3.206702],[-3.992948,-0.985718,4.142941,-0.689740,-0.881423,-7.362720,-6.592250,8.974874,7.491122,-7.343274,-9.076298,-7.489059],[-4.895730,-3.237888,-0.102528,9.061285,-9.490180,-1.739050,-7.808605,-4.866953,1.639761,-3.212597,0.893325,5.236735]],[[0.667962,7.357145,0.381712,3.176612,5.657294,0.003740,5.383306,-6.098663,-5.765277,5.442394,-4.220232,5.337142],[5.012745,2.972722,-5.919804,6.676960,-2.885419,0.399106,-6.092730,2.059571,-9.577045,0.867329,-7.559362,9.603593],[8.672667,8.622703,9.035389,5.675564,-9.453330,0.015732,3.800278,-8.678475,-1.531830,5.866760,-4.410225,-7.092511],[4.887623,-2.186556,-8.372092,-2.885689,6.410899,6.862670,8.177573,5.974241,3.384411,-0.939853,2.606686,-8.877808],[-5.102612,1.729324,-7.801334,4.609265,5.515913,2.822981,0.517299,4.108063,-2.793828,3.909308,1.032234,1.788686],[-3.956705,4.742125,7.778078,4.713456,8.132757,-2.549286,-2.790606,1.597786,-5.393933,2.481162,8.471334,-9.801875],[3.971314,0.587769,-2.332280,6.453549,-1.521493,-3.881429,-4.228505,5.041689,-7.911704,-0.616609,1.388705,3.208038],[-1.251504,8.959688,5.901230,6.242777,-1.516014,-7.300702,-3.247051,0.308568,-2.812257,-6.266287,4.410375,1.602664],[7.262690,-0.844241,3.978537,-7.644743,3.563977,2.588420,0.092798,3.133548,1.327702,-7.601005,-0.253021,-6.451171],[-1.331902,8.686729,-5.573472,2.594299,-3.992525,-5.527611,2.275220,-3.483300,8.574935,-1.006485,-5.255276,-4.541387],[6.397849,3.723527,-4.619388,-5.015987,-7.820734,-2.003570,-0.301350,1.112033,0.705859,8.802678,-5.109286,4.904020],[2.253167,3.634965,-7.664852,-5.533151,-1.404232,5.833497,2.844283,0.260395,3.306660,7.212172,-0.323139,2.913822],[-8.626775,-9.683802,-4.149026,-2.637285,6.843262,3.913338,4.705376,8.444905,-6.215232,-0.763458,4.489074,0.001483],[5.147185,-9.585727,1.606183,-3.441116,-8.515846,8.564589,-8.547798,3.964324,5.473821,5.098333,-9.944763,-4.680200],[4.866690,-8.314428,6.860969,-5.419976,-9.846618,-5.782456,-5.423147,-7.224459,4.331964,2.172455,6.464833,-8.561855]],[[6.408521,-4.971896,-0.685184,-1.982445,5.329627,-7.235858,0.769840,-4.886948,-9.416039,2.396787,4.216969,0.838735],[5.419956,-6.804412,3.918094,8.767062,3.659819,-0.733074,0.030671,0.700356,-1.218175,8.408470,-4.605979,2.133656],[-6.916738,9.416903,-7.495324,-7.319980,7.901279,7.856432,8.876887,-9.029173,-2.083000,9.079629,2.290065,-8.866159],[-0.135125,1.125778,0.427456,5.348360,-9.178321,5.350640,-6.659555,-2.522022,9.155378,-9.892213,7.473750,3.816147],[-3.249967,1.567697,5.888570,2.444613,6.444734,8.708915,7.926166,-2.291866,4.790441,5.020552,1.947460,-9.497034],[3.687073,-1.260194,1.130297,-0.501120,-3.383478,2.356182,5.878753,5.166266,-4.178369,-9.512977,-5.262077,6.463755],[-3.945256,9.200261,-6.987428,-5.826155,-2.548738,-9.214434,-7.242398,7.925839,-2.897882,4.811818,5.882731,-2.892472],[0.337921,-5.565199,0.085172,6.138657,-8.073212,-5.459858,-3.491456,-8.862031,0.723698,-7.234381,2.375226,-3.220432],[2.465921,8.204898,-3.584991,-8.686609,-5.700225,6.912675,-4.254827,-3.403006,7.715589,2.151853,0.353732,3.333688],[6.523707,7.709308,5.760558,-4.868242,6.905530,-3.120647,-8.849221,4.054052,5.978204,-1.165327,9.102607,-9.021350],[3.727604,5.231850,0.491553,7.540377,-1.489776,6.302847,-6.327339,-7.778732,3.287975,-6.773526,4.202478,3.415146],[-0.353285,-4.596281,-0.657424,0.883926,1.763816,-0.883231,5.601584,2.642872,-3.163510,8.570187,-8.829365,-0.494329],[-4.769306,4.902218,-7.186407,-5.236484,8.210006,6.705289,8.894206,8.212968,2.665721,0.681892,-9.049507,-5.029959],[4.143568,1.199659,-5.424636,-7.222308,-4.104271,-0.884105,-7.531512,-3.732498,-2.403722,8.298709,-6.437062,-5.879790],[-7.785346,-8.620830,-7.038370,-5.655289,-9.077066,8.386632,1.547098,-1.127678,-5.256457,2.678787,2.687089,-9.949698]]], dtype = "float64")#candidate|428|(8, 15, 12)|const|float64
bop_429 = relay.greater(call_424.astype('bool'), relay.reshape(const_428.astype('bool'), relay.shape_of(call_424))) # shape=(8, 15, 12)
bop_432 = relay.greater(call_425.astype('bool'), relay.reshape(const_428.astype('bool'), relay.shape_of(call_425))) # shape=(8, 15, 12)
output = bop_429
output2 = bop_432
func_435 = relay.Function([], output)
mod['func_435'] = func_435
mod = relay.transform.InferType()(mod)
output = func_435()
func_436 = relay.Function([], output)
mutated_mod['func_436'] = func_436
mutated_mod = relay.transform.InferType()(mutated_mod)
func_435_call = mod.get_global_var('func_435')
func_436_call = mutated_mod.get_global_var('func_436')
call_449 = func_435_call()
call_450 = func_435_call()
func_141_call = mod.get_global_var('func_141')
func_143_call = mutated_mod.get_global_var('func_143')
call_454 = relay.TupleGetItem(func_141_call(), 0)
call_455 = relay.TupleGetItem(func_143_call(), 0)
func_73_call = mod.get_global_var('func_73')
func_75_call = mutated_mod.get_global_var('func_75')
call_462 = relay.TupleGetItem(func_73_call(), 2)
call_463 = relay.TupleGetItem(func_75_call(), 2)
uop_480 = relay.atanh(call_449.astype('float64')) # shape=(8, 15, 12)
uop_482 = relay.atanh(call_450.astype('float64')) # shape=(8, 15, 12)
uop_485 = relay.sinh(uop_480.astype('float32')) # shape=(8, 15, 12)
uop_487 = relay.sinh(uop_482.astype('float32')) # shape=(8, 15, 12)
output = relay.Tuple([call_454,call_462,uop_485,])
output2 = relay.Tuple([call_455,call_463,uop_487,])
func_494 = relay.Function([], output)
mod['func_494'] = func_494
mod = relay.transform.InferType()(mod)
output = func_494()
func_495 = relay.Function([], output)
mutated_mod['func_495'] = func_495
mutated_mod = relay.transform.InferType()(mutated_mod)
func_17_call = mod.get_global_var('func_17')
func_19_call = mutated_mod.get_global_var('func_19')
call_504 = func_17_call()
call_505 = func_17_call()
var_517 = relay.var("var_517", dtype = "float64", shape = (8, 15, 12))#candidate|517|(8, 15, 12)|var|float64
bop_518 = relay.subtract(call_504.astype('uint8'), relay.reshape(var_517.astype('uint8'), relay.shape_of(call_504))) # shape=(8, 15, 12)
bop_521 = relay.subtract(call_505.astype('uint8'), relay.reshape(var_517.astype('uint8'), relay.shape_of(call_505))) # shape=(8, 15, 12)
uop_527 = relay.erf(call_504.astype('float32')) # shape=(8, 15, 12)
uop_529 = relay.erf(call_505.astype('float32')) # shape=(8, 15, 12)
output = relay.Tuple([bop_518,uop_527,])
output2 = relay.Tuple([bop_521,uop_529,])
func_532 = relay.Function([var_517,], output)
mod['func_532'] = func_532
mod = relay.transform.InferType()(mod)
var_533 = relay.var("var_533", dtype = "float64", shape = (8, 15, 12))#candidate|533|(8, 15, 12)|var|float64
output = func_532(var_533)
func_534 = relay.Function([var_533], output)
mutated_mod['func_534'] = func_534
mutated_mod = relay.transform.InferType()(mutated_mod)
func_17_call = mod.get_global_var('func_17')
func_19_call = mutated_mod.get_global_var('func_19')
call_581 = func_17_call()
call_582 = func_17_call()
func_435_call = mod.get_global_var('func_435')
func_436_call = mutated_mod.get_global_var('func_436')
call_585 = func_435_call()
call_586 = func_435_call()
output = relay.Tuple([call_581,call_585,])
output2 = relay.Tuple([call_582,call_586,])
func_588 = relay.Function([], output)
mod['func_588'] = func_588
mod = relay.transform.InferType()(mod)
output = func_588()
func_589 = relay.Function([], output)
mutated_mod['func_589'] = func_589
mutated_mod = relay.transform.InferType()(mutated_mod)
func_109_call = mod.get_global_var('func_109')
func_111_call = mutated_mod.get_global_var('func_111')
call_634 = relay.TupleGetItem(func_109_call(), 0)
call_635 = relay.TupleGetItem(func_111_call(), 0)
output = call_634
output2 = call_635
func_643 = relay.Function([], output)
mod['func_643'] = func_643
mod = relay.transform.InferType()(mod)
mutated_mod['func_643'] = func_643
mutated_mod = relay.transform.InferType()(mutated_mod)
func_643_call = mutated_mod.get_global_var('func_643')
call_644 = func_643_call()
output = call_644
func_645 = relay.Function([], output)
mutated_mod['func_645'] = func_645
mutated_mod = relay.transform.InferType()(mutated_mod)
func_109_call = mod.get_global_var('func_109')
func_111_call = mutated_mod.get_global_var('func_111')
call_646 = relay.TupleGetItem(func_109_call(), 0)
call_647 = relay.TupleGetItem(func_111_call(), 0)
func_17_call = mod.get_global_var('func_17')
func_19_call = mutated_mod.get_global_var('func_19')
call_662 = func_17_call()
call_663 = func_17_call()
output = relay.Tuple([call_646,call_662,])
output2 = relay.Tuple([call_647,call_663,])
func_668 = relay.Function([], output)
mod['func_668'] = func_668
mod = relay.transform.InferType()(mod)
output = func_668()
func_669 = relay.Function([], output)
mutated_mod['func_669'] = func_669
mutated_mod = relay.transform.InferType()(mutated_mod)
func_17_call = mod.get_global_var('func_17')
func_19_call = mutated_mod.get_global_var('func_19')
call_672 = func_17_call()
call_673 = func_17_call()
func_311_call = mod.get_global_var('func_311')
func_313_call = mutated_mod.get_global_var('func_313')
call_680 = relay.TupleGetItem(func_311_call(), 0)
call_681 = relay.TupleGetItem(func_313_call(), 0)
output = relay.Tuple([call_672,call_680,])
output2 = relay.Tuple([call_673,call_681,])
func_683 = relay.Function([], output)
mod['func_683'] = func_683
mod = relay.transform.InferType()(mod)
mutated_mod['func_683'] = func_683
mutated_mod = relay.transform.InferType()(mutated_mod)
func_683_call = mutated_mod.get_global_var('func_683')
call_684 = func_683_call()
output = call_684
func_685 = relay.Function([], output)
mutated_mod['func_685'] = func_685
mutated_mod = relay.transform.InferType()(mutated_mod)
func_683_call = mod.get_global_var('func_683')
func_685_call = mutated_mod.get_global_var('func_685')
call_758 = relay.TupleGetItem(func_683_call(), 1)
call_759 = relay.TupleGetItem(func_685_call(), 1)
func_668_call = mod.get_global_var('func_668')
func_669_call = mutated_mod.get_global_var('func_669')
call_766 = relay.TupleGetItem(func_668_call(), 0)
call_767 = relay.TupleGetItem(func_669_call(), 0)
output = relay.Tuple([call_758,call_766,])
output2 = relay.Tuple([call_759,call_767,])
func_784 = relay.Function([], output)
mod['func_784'] = func_784
mod = relay.transform.InferType()(mod)
output = func_784()
func_785 = relay.Function([], output)
mutated_mod['func_785'] = func_785
mutated_mod = relay.transform.InferType()(mutated_mod)
func_311_call = mod.get_global_var('func_311')
func_313_call = mutated_mod.get_global_var('func_313')
call_807 = relay.TupleGetItem(func_311_call(), 1)
call_808 = relay.TupleGetItem(func_313_call(), 1)
output = call_807
output2 = call_808
func_814 = relay.Function([], output)
mod['func_814'] = func_814
mod = relay.transform.InferType()(mod)
mutated_mod['func_814'] = func_814
mutated_mod = relay.transform.InferType()(mutated_mod)
func_814_call = mutated_mod.get_global_var('func_814')
call_815 = func_814_call()
output = call_815
func_816 = relay.Function([], output)
mutated_mod['func_816'] = func_816
mutated_mod = relay.transform.InferType()(mutated_mod)
func_311_call = mod.get_global_var('func_311')
func_313_call = mutated_mod.get_global_var('func_313')
call_832 = relay.TupleGetItem(func_311_call(), 0)
call_833 = relay.TupleGetItem(func_313_call(), 0)
func_683_call = mod.get_global_var('func_683')
func_685_call = mutated_mod.get_global_var('func_685')
call_839 = relay.TupleGetItem(func_683_call(), 0)
call_840 = relay.TupleGetItem(func_685_call(), 0)
output = relay.Tuple([call_832,call_839,])
output2 = relay.Tuple([call_833,call_840,])
func_842 = relay.Function([], output)
mod['func_842'] = func_842
mod = relay.transform.InferType()(mod)
output = func_842()
func_843 = relay.Function([], output)
mutated_mod['func_843'] = func_843
mutated_mod = relay.transform.InferType()(mutated_mod)
func_668_call = mod.get_global_var('func_668')
func_669_call = mutated_mod.get_global_var('func_669')
call_850 = relay.TupleGetItem(func_668_call(), 1)
call_851 = relay.TupleGetItem(func_669_call(), 1)
uop_857 = relay.exp(call_850.astype('float64')) # shape=(8, 15, 12)
uop_859 = relay.exp(call_851.astype('float64')) # shape=(8, 15, 12)
func_494_call = mod.get_global_var('func_494')
func_495_call = mutated_mod.get_global_var('func_495')
call_867 = relay.TupleGetItem(func_494_call(), 2)
call_868 = relay.TupleGetItem(func_495_call(), 2)
func_11_call = mod.get_global_var('func_11')
func_12_call = mutated_mod.get_global_var('func_12')
call_873 = func_11_call()
call_874 = func_11_call()
uop_876 = relay.asinh(uop_857.astype('float64')) # shape=(8, 15, 12)
uop_878 = relay.asinh(uop_859.astype('float64')) # shape=(8, 15, 12)
func_588_call = mod.get_global_var('func_588')
func_589_call = mutated_mod.get_global_var('func_589')
call_886 = relay.TupleGetItem(func_588_call(), 0)
call_887 = relay.TupleGetItem(func_589_call(), 0)
bop_892 = relay.bitwise_xor(uop_876.astype('uint8'), relay.reshape(uop_857.astype('uint8'), relay.shape_of(uop_876))) # shape=(8, 15, 12)
bop_895 = relay.bitwise_xor(uop_878.astype('uint8'), relay.reshape(uop_859.astype('uint8'), relay.shape_of(uop_878))) # shape=(8, 15, 12)
bop_900 = relay.floor_divide(call_873.astype('float32'), relay.reshape(bop_892.astype('float32'), relay.shape_of(call_873))) # shape=(8, 15, 12)
bop_903 = relay.floor_divide(call_874.astype('float32'), relay.reshape(bop_895.astype('float32'), relay.shape_of(call_874))) # shape=(8, 15, 12)
func_248_call = mod.get_global_var('func_248')
func_249_call = mutated_mod.get_global_var('func_249')
call_917 = func_248_call()
call_918 = func_248_call()
output = relay.Tuple([call_867,call_886,bop_900,call_917,])
output2 = relay.Tuple([call_868,call_887,bop_903,call_918,])
func_941 = relay.Function([], output)
mod['func_941'] = func_941
mod = relay.transform.InferType()(mod)
mutated_mod['func_941'] = func_941
mutated_mod = relay.transform.InferType()(mutated_mod)
func_941_call = mutated_mod.get_global_var('func_941')
call_942 = func_941_call()
output = call_942
func_943 = relay.Function([], output)
mutated_mod['func_943'] = func_943
mutated_mod = relay.transform.InferType()(mutated_mod)
func_141_call = mod.get_global_var('func_141')
func_143_call = mutated_mod.get_global_var('func_143')
call_953 = relay.TupleGetItem(func_141_call(), 0)
call_954 = relay.TupleGetItem(func_143_call(), 0)
const_965 = relay.const([[[-8.975538,8.598096,-8.075305,-1.207183,6.427224,-5.028526,-2.917191,8.456093,0.175717,0.936171,-3.381868,5.814648],[-3.171779,9.512584,9.409259,6.745422,0.633968,1.761874,2.182984,0.500900,-6.987345,-7.666462,-7.368358,2.201177],[-4.252176,-2.140694,4.883890,6.073444,-7.738177,9.115625,3.625370,5.431911,3.568757,3.265624,-9.941434,-7.796421],[-2.695924,8.926215,-9.667236,-2.680785,-7.799743,7.626927,2.545550,5.843792,8.192643,7.089206,4.825497,-0.836248],[9.763577,-2.450840,-8.557721,3.577429,4.749913,4.836339,9.665636,-4.263685,-5.305933,9.745752,-3.387906,1.465933],[-2.115363,9.471049,0.257268,-4.714621,3.081632,5.738259,6.084584,-0.905188,6.822023,3.121650,-4.047299,-8.891245],[0.042424,-9.916246,2.206799,-9.396159,-1.173612,2.901399,7.909476,1.094191,-7.063023,-2.752761,8.928543,-0.587848],[-1.285512,5.187467,-1.144724,9.535936,4.267516,4.587723,-4.088835,-5.256298,7.663098,-5.497797,-5.785114,0.621250],[-7.375478,-3.074556,5.266316,5.280462,-7.954438,-2.362509,-0.320393,0.517571,9.158156,-8.582163,-1.443904,-8.213438],[7.247912,-8.797779,-4.353748,-6.008327,0.136871,-9.387046,-2.614941,-9.525814,-6.618658,0.980609,-3.933778,7.271133],[0.254424,4.175752,-2.961918,-8.730333,5.064908,1.064121,-7.665771,-1.237991,0.507661,-3.892099,-7.452415,-1.529320],[6.960617,-2.190523,-0.406972,4.066012,2.825954,5.580136,0.250109,2.473285,-3.138313,-7.782782,1.067617,-3.382258],[-7.639670,-2.211884,8.133536,6.405467,-7.712929,5.120600,2.207715,-2.959745,4.487744,4.360252,7.051548,8.373131],[6.354504,2.813657,1.390365,7.928169,-2.298135,-3.147302,8.333937,2.224410,5.744406,-2.589918,9.112408,-2.363620],[9.142489,0.435813,-5.780774,-1.650335,8.444947,-4.927675,-1.160489,-3.524567,3.106041,-1.264666,-6.261488,-8.766930]],[[-5.494790,6.832264,-6.728987,7.697532,4.492762,-4.266477,1.586075,5.096005,-1.428291,4.997497,-0.848214,-4.856423],[9.178404,-5.402870,-6.114595,5.140687,3.986711,-9.316625,-5.779041,2.128440,7.704663,-2.615714,2.407178,6.421860],[8.789021,-6.597909,-4.794553,-7.007594,2.363460,5.031649,2.704031,7.276202,0.843693,-0.071450,1.061444,0.144507],[-4.966245,9.854713,-3.758197,8.044085,-1.182905,4.817332,-3.325009,-6.723298,-2.288914,9.021034,-0.219303,-3.470853],[8.999856,-3.746381,3.710123,1.195389,8.761397,4.033572,4.187448,2.121214,-6.102461,-6.855032,-2.880397,-3.982515],[-3.539043,1.948711,-0.439854,1.474866,-7.205668,-9.438446,3.562416,7.249620,7.405920,-8.734950,-4.219552,-7.412978],[-7.626267,9.803389,7.434803,4.296015,-3.240595,-9.143724,0.119762,-3.240323,6.751660,4.653709,-2.826971,7.147274],[2.304822,-9.627378,-8.090621,-0.177726,0.010245,4.821877,9.274322,-0.207750,0.556476,4.630024,-6.069984,6.716067],[-8.100047,8.033883,1.096951,-8.211013,-3.286969,-4.258805,8.120180,-7.871045,2.766411,1.379861,-4.231436,-6.677816],[8.588094,-6.092347,8.354627,0.660692,-2.294070,-9.664168,-7.646794,-1.285580,7.487403,1.479712,3.445663,9.673325],[6.307045,-1.827471,-6.666107,-5.071185,-8.778063,-5.979911,-3.788877,0.666734,-4.863149,-3.704987,8.392049,0.135832],[-6.325722,7.773694,-0.660021,-5.378530,-2.661973,-4.526220,3.518309,-2.182580,3.280586,8.175866,-1.906167,5.420877],[-3.234266,3.475781,-9.576231,-0.255615,8.718637,1.097976,-3.991935,-6.079680,-9.055924,2.503850,0.376699,9.048391],[-1.162393,-6.478016,1.992020,5.120981,0.630455,7.791734,-7.917160,-0.850631,-5.903483,3.331456,8.635157,8.134432],[-4.564252,3.651115,-1.299489,1.687620,3.356585,7.246213,7.652599,-5.171754,-8.059410,-2.056946,9.047651,-4.941678]],[[-6.155543,-5.998561,8.273589,3.345360,9.533233,6.106627,4.452202,-9.761957,-7.675003,-8.734552,1.331270,4.389943],[-5.292616,-1.393117,-4.671194,3.423193,-1.832042,4.565243,9.919088,-7.634220,5.267769,-8.438243,-6.843322,-7.968655],[5.278971,-8.398775,6.350527,-4.726681,1.089861,-8.623890,1.341663,2.916904,7.179860,-5.706033,8.716466,6.326511],[-1.000710,-0.508910,9.638561,-3.756761,5.595208,9.657414,-0.698640,-6.825281,-1.699429,9.761361,0.818161,7.660099],[0.628653,1.171250,-9.116012,-4.032230,0.021654,4.983870,7.454279,9.365445,-1.395115,5.914470,-0.243434,5.665423],[-0.228604,-9.172958,8.083591,5.979398,7.679238,5.051197,6.774071,9.271860,-9.296854,6.721725,-6.917657,-5.425196],[9.300231,4.989642,-8.862897,-0.417617,2.161586,-5.556854,1.616822,-6.800130,-3.144011,-9.344860,3.206789,-5.128748],[4.600488,7.996171,-9.351962,-9.278494,6.349984,9.421045,-4.632902,2.561831,6.942333,-7.692418,3.491088,2.021766],[2.227491,6.923325,4.430264,-5.103181,-0.746355,-4.521160,-7.600043,-4.370429,-4.129249,3.235982,-0.608713,4.069348],[-8.400620,-1.262382,-8.030922,1.223275,6.642004,-8.575667,1.420966,7.541093,-1.374320,-5.635846,6.090963,-8.017442],[7.130093,-1.586211,-2.949278,6.197396,-7.775978,-8.336006,5.892496,-6.824378,7.764895,-5.970139,3.480197,-4.484248],[0.076293,-9.010741,6.045200,2.688010,-3.282874,-5.251273,3.690722,1.905678,4.908703,-7.470450,-7.737937,-9.697526],[6.025369,-8.594063,-3.830446,-9.024396,4.983650,-9.741421,4.011857,3.551376,-8.861732,9.007655,8.371266,3.055296],[-0.924880,-7.947231,-3.442877,-6.905731,8.288772,-1.756068,8.778628,6.167652,-2.500228,-4.716944,7.995552,4.257692],[4.410765,8.163901,-1.307835,-7.771756,-1.627467,4.185104,9.323550,-4.152652,-2.828265,-2.996777,7.404431,-9.400381]],[[-5.413927,-0.809918,3.514977,9.856775,-5.263291,3.387630,8.583606,8.728921,-7.355850,-2.695905,3.644985,-6.625218],[8.173863,2.390713,8.389020,-7.131768,-6.819014,2.780849,6.550155,2.049365,-7.968845,-4.805945,-0.385534,2.874812],[-1.944910,-5.020598,9.235426,8.789196,4.506231,3.951787,-0.800814,-4.737098,-6.271298,-4.154905,-7.006829,8.606426],[3.256091,-3.543105,-5.827648,-0.435624,9.406318,-0.359994,-4.324842,-5.438455,-3.931253,-4.776733,1.173623,-3.380398],[-1.165751,4.323898,-7.576103,2.080674,-5.858410,2.027475,-4.088197,4.982942,-4.027502,-2.852059,6.410316,-9.394078],[-0.879563,2.990497,-7.571192,-2.265304,-1.458529,4.027847,-6.154865,-6.206774,6.827623,1.274989,-0.539662,1.333284],[-3.170034,1.469135,-9.729673,-4.061005,-5.656333,9.524610,9.871415,7.936848,9.459737,-8.640793,-8.775756,9.122883],[-4.011746,4.398269,3.417288,0.805394,-3.927800,-9.340884,-8.015857,7.263251,-9.151504,1.192848,-1.681806,6.448523],[-9.144274,-5.282868,3.886110,-3.265666,-2.842243,-3.039688,-4.585464,-6.327552,-0.576022,-9.585927,6.299923,4.436906],[-1.981854,8.965587,1.015032,-8.655032,-7.823765,-1.748283,-3.672423,1.856392,-8.167543,8.055537,4.039283,8.550006],[-6.258486,-8.092069,-6.790894,5.302356,4.690636,3.764121,4.452170,-8.357088,-9.044911,2.771709,8.175543,-5.503037],[-6.357279,-5.285308,9.501286,2.071352,9.433976,9.005621,8.267729,-2.476274,9.666340,-3.831283,-9.018749,-3.245686],[7.935345,2.216564,-1.690664,8.674187,2.318902,-4.323599,7.462354,-5.603273,2.770962,-7.068554,-5.360495,4.084699],[7.634763,1.203355,-0.362895,-7.421469,5.466459,-6.556258,5.763160,0.503096,-2.606278,7.804449,9.795319,-9.167083],[0.691363,-2.735955,-5.013487,0.896159,8.337323,6.902806,-3.244343,7.084673,4.989766,7.752098,7.609987,-4.084684]],[[-4.850139,-5.983820,7.172213,0.277201,3.203300,5.511430,5.273400,2.360306,0.396873,1.851150,4.484168,8.874578],[-1.904372,2.624980,0.876057,9.083420,-7.115485,-6.573465,3.421312,-2.607053,9.537205,-9.553789,1.851515,8.616948],[-8.308279,-9.537190,6.851660,-3.674939,5.799490,-5.846567,0.925641,-2.211413,5.288028,-7.653803,-0.421469,2.145918],[-3.866415,4.348430,-3.458502,-1.959156,8.413646,-2.391563,-9.024591,-8.727621,-4.266409,8.466059,1.933579,1.939603],[-6.463631,1.979955,9.467799,-4.217569,-9.624237,6.524196,-3.304915,0.933160,-9.691111,-4.678926,-5.564183,-5.807113],[3.309466,9.155982,-6.494784,9.013464,-8.432434,6.349972,-1.240279,2.621481,3.975346,3.090362,-4.520847,7.291937],[-7.166553,1.104006,2.776237,3.860445,0.625209,5.322522,-0.491846,-6.541352,3.195316,-1.534562,5.897620,-0.639782],[-3.252050,-8.864733,-9.395761,3.165821,-6.310393,2.203733,3.773508,-2.252446,8.101215,-4.899948,9.159006,-5.107055],[-9.387668,-2.323861,-7.143978,0.042965,-2.697813,5.270805,4.463850,7.048618,-6.483162,7.869748,7.089726,-3.526481],[4.026882,-6.000024,-2.111978,6.450724,8.278248,-2.299546,-0.093458,-0.029102,-0.845074,4.269138,9.395870,2.768038],[-1.341915,9.174440,-8.912612,-5.741254,-5.613599,-8.334987,-9.018488,9.684320,4.980982,2.510939,2.042752,-8.289411],[-2.585075,-2.797578,-2.913719,2.508035,-9.732098,8.194686,-5.319220,2.831769,-1.167356,2.283211,2.897211,4.347217],[1.613610,5.053368,-2.111519,-5.763701,0.618999,-2.830082,-3.787608,-3.014313,-9.640846,5.659689,-6.680781,3.940743],[3.317066,2.526743,-4.112925,8.003487,7.799613,-0.206343,4.141132,-3.758921,9.993316,-3.515728,-2.884523,7.512465],[-7.371241,-7.163243,7.215224,-4.328124,-8.028488,7.820342,-5.706932,-7.639290,3.242834,3.775757,4.271516,-8.181213]],[[9.699197,-8.284425,6.342474,-9.572295,3.942017,-4.592244,1.532072,4.024028,-5.437307,-0.115448,2.624512,0.033456],[5.803313,9.976344,-4.620951,-6.188341,7.658771,-9.570437,-9.807060,-0.734274,9.452682,-9.019323,4.148254,-8.702756],[-2.166396,-0.173426,-3.849818,8.075746,3.119544,-9.182078,-1.521817,8.955155,-1.847457,-1.257591,-9.078131,-4.135612],[-0.740642,-3.141085,-7.080393,2.371288,6.440872,-1.341090,4.561629,-3.526795,3.394728,5.775056,0.233409,1.311552],[-5.978255,-3.322546,-5.007630,-7.729846,4.851774,1.214105,1.184278,-6.347501,-5.891536,-0.986278,-4.469469,-0.994168],[-6.064324,1.654539,-7.378678,9.560774,6.601292,-0.938877,-8.713616,-6.164220,0.337749,6.888728,-2.541748,-4.736829],[-0.318543,7.024175,8.174729,-6.798545,3.360335,7.948230,-0.683980,-2.202430,-9.069262,-6.754846,1.777008,-3.096865],[-6.462864,4.437274,6.241883,1.589888,6.941179,9.601374,1.294050,-0.057935,5.951118,-3.788234,-3.825685,6.837542],[3.192887,2.458404,-2.538717,-5.495712,4.085014,-2.646312,4.219580,-7.973314,-8.996534,6.613865,-1.909977,-4.875946],[8.520675,0.083890,4.120219,-0.415708,-3.405024,0.389591,6.563568,0.279435,6.122759,0.375293,-6.277686,8.359573],[5.108237,-1.101426,-1.868680,-3.636710,6.125397,5.023214,-7.653006,-4.850102,0.020699,-5.478806,9.610585,7.935712],[8.743626,9.762509,9.632762,-8.644226,1.456537,-4.564799,0.699524,3.058571,-7.742389,5.602010,-6.092746,-3.438191],[9.450721,-8.346732,-4.214763,2.782926,-7.344355,9.159779,-9.240622,9.307226,-6.030787,6.100536,-0.015886,7.726344],[-7.800291,4.491742,-5.660107,-4.798655,-2.376268,-5.423733,3.759042,-0.454276,-9.534064,8.700963,7.986568,-6.941476],[-7.578476,5.923309,-6.418752,2.535779,5.403280,9.843247,-3.523458,4.463446,-0.226014,-0.748593,-6.246264,4.021611]],[[-5.300493,2.893364,4.263733,-6.645119,3.744861,-4.885597,-3.651659,-0.294261,0.126798,2.344493,-1.489258,-1.085862],[-6.075771,-8.664966,-1.404517,6.721254,-2.298475,-7.415963,-3.384805,2.014621,5.138905,1.190645,1.556972,0.782807],[0.090251,7.284928,-7.594423,-4.588954,-6.053286,1.809338,-4.614742,5.331435,4.244635,9.118915,-0.048857,0.047012],[-2.935015,9.750657,8.851085,-7.099551,8.496360,-5.680683,-2.390769,-4.317744,6.570667,7.182216,-4.383933,-6.027863],[-5.624433,1.433886,-4.681539,-3.450256,8.998949,-7.646940,7.844128,8.022582,-4.221173,-3.754483,-7.834045,6.189530],[-6.499811,-3.576490,-2.180363,-8.303141,-3.943466,1.535588,-1.337972,1.139990,-1.335156,-9.358486,7.477388,-8.006896],[5.466092,-8.654886,-0.379387,5.153706,-2.183106,2.253008,-8.218299,4.075499,-4.249775,3.547301,9.952851,-1.138328],[8.570882,3.751611,8.332738,-6.771783,-7.650045,-8.127715,2.099110,7.067937,7.513049,-7.181887,-4.267528,-8.713927],[-6.090195,1.925673,2.188909,4.898644,1.388459,4.123996,4.123108,6.508359,-4.427374,-0.380902,-0.496040,8.743672],[-9.228666,9.197663,7.340002,0.045245,-1.997595,0.594222,5.050522,-1.048389,4.667434,7.980859,1.996340,-8.749736],[-3.946005,7.160813,-8.229093,4.555244,-7.505649,2.306657,-8.898616,-1.622451,-4.360030,-0.712296,-3.000309,-6.221475],[-0.907124,-8.792370,-1.191112,9.700959,1.517423,1.887531,8.758837,0.794999,-2.364435,-1.087307,9.783653,1.764523],[-0.275982,7.962175,-6.011524,1.732224,3.680389,-9.911091,-1.900123,8.048215,0.809964,-0.925732,6.613395,-5.240954],[-4.860265,-0.606018,3.145654,4.363655,-5.641287,8.562120,-1.110783,7.666396,-2.861330,-3.383304,-9.316121,8.648415],[-3.641234,-8.123400,8.420123,9.681690,8.751789,8.536829,3.325006,1.183035,-8.765485,-5.989813,1.748192,-1.311484]],[[-4.235527,-4.857610,-5.216247,-1.638504,4.895852,-8.489933,0.508565,8.680984,-6.853195,-1.415633,2.546182,2.301370],[-1.300417,4.554778,9.734188,8.426633,-7.301535,-1.624024,1.980958,7.338160,-8.171548,9.646337,-0.284607,-1.523369],[-3.875581,-5.239864,-8.654809,8.928807,-2.772037,-1.033944,-5.110009,9.237038,-0.891072,-2.372742,-4.404010,-8.077599],[0.830233,-5.586069,-8.456233,-3.965348,7.048460,6.220415,-6.180980,-5.719449,0.737084,0.525255,5.789643,-1.371927],[-9.633483,2.618472,-0.269326,7.982409,-4.473076,1.650371,9.217337,7.766927,3.498708,-0.536476,5.175228,-0.558217],[-3.996367,-8.124534,-4.156132,3.978698,5.433796,5.425854,-2.389516,-7.444268,-6.728360,-8.576907,5.377235,3.758882],[-1.453255,8.917456,-6.945899,-4.761920,9.675494,-4.616104,8.740106,-4.555422,6.268955,-4.053775,3.561685,-6.722457],[5.482779,8.290986,-7.661828,1.488955,-0.372816,-3.516163,-3.837212,3.692035,0.661261,6.557310,7.960752,-0.490688],[8.057419,0.316403,3.703720,-6.254392,-5.782409,7.308224,-7.812618,0.823565,4.459729,-6.518649,-8.964670,1.294485],[4.598750,-3.583526,0.598489,8.974429,0.441625,1.933684,-1.808021,9.146743,4.248760,1.216721,2.739259,-2.055511],[-7.980592,-3.772534,5.374012,6.045866,-4.230680,6.875025,-5.623042,-9.904626,9.854288,-5.847322,-2.857721,-9.872480],[-0.596806,3.263697,-2.128050,4.912971,-8.875295,6.929833,0.601466,7.569093,-9.092159,3.033753,0.060104,5.573776],[9.380737,7.175641,3.015446,7.734890,1.495020,-4.862694,2.226681,7.671735,1.197467,9.110809,4.126239,6.246055],[0.779921,-6.332772,-4.648501,-5.779226,7.856410,1.112307,5.234039,-8.167977,-7.187505,5.373586,-1.074235,6.744344],[8.774922,8.340151,2.270099,8.950231,2.676918,-1.135132,4.550205,-5.587190,-3.047355,9.614139,-5.672792,-7.948425]]], dtype = "float64")#candidate|965|(8, 15, 12)|const|float64
bop_966 = relay.logical_and(call_953.astype('bool'), relay.reshape(const_965.astype('bool'), relay.shape_of(call_953))) # shape=(8, 15, 12)
bop_969 = relay.logical_and(call_954.astype('bool'), relay.reshape(const_965.astype('bool'), relay.shape_of(call_954))) # shape=(8, 15, 12)
output = relay.Tuple([bop_966,])
output2 = relay.Tuple([bop_969,])
func_978 = relay.Function([], output)
mod['func_978'] = func_978
mod = relay.transform.InferType()(mod)
output = func_978()
func_979 = relay.Function([], output)
mutated_mod['func_979'] = func_979
mutated_mod = relay.transform.InferType()(mutated_mod)
func_814_call = mod.get_global_var('func_814')
func_816_call = mutated_mod.get_global_var('func_816')
call_1064 = func_814_call()
call_1065 = func_814_call()
var_1066 = relay.var("var_1066", dtype = "float64", shape = (8, 15, 12))#candidate|1066|(8, 15, 12)|var|float64
bop_1067 = relay.power(call_1064.astype('float32'), relay.reshape(var_1066.astype('float32'), relay.shape_of(call_1064))) # shape=(8, 15, 12)
bop_1070 = relay.power(call_1065.astype('float32'), relay.reshape(var_1066.astype('float32'), relay.shape_of(call_1065))) # shape=(8, 15, 12)
output = bop_1067
output2 = bop_1070
func_1075 = relay.Function([var_1066,], output)
mod['func_1075'] = func_1075
mod = relay.transform.InferType()(mod)
mutated_mod['func_1075'] = func_1075
mutated_mod = relay.transform.InferType()(mutated_mod)
var_1076 = relay.var("var_1076", dtype = "float64", shape = (8, 15, 12))#candidate|1076|(8, 15, 12)|var|float64
func_1075_call = mutated_mod.get_global_var('func_1075')
call_1077 = func_1075_call(var_1076)
output = call_1077
func_1078 = relay.Function([var_1076], output)
mutated_mod['func_1078'] = func_1078
mutated_mod = relay.transform.InferType()(mutated_mod)
func_588_call = mod.get_global_var('func_588')
func_589_call = mutated_mod.get_global_var('func_589')
call_1086 = relay.TupleGetItem(func_588_call(), 0)
call_1087 = relay.TupleGetItem(func_589_call(), 0)
func_941_call = mod.get_global_var('func_941')
func_943_call = mutated_mod.get_global_var('func_943')
call_1090 = relay.TupleGetItem(func_941_call(), 0)
call_1091 = relay.TupleGetItem(func_943_call(), 0)
var_1124 = relay.var("var_1124", dtype = "float32", shape = (8, 15, 12))#candidate|1124|(8, 15, 12)|var|float32
bop_1125 = relay.bitwise_or(call_1090.astype('uint64'), relay.reshape(var_1124.astype('uint64'), relay.shape_of(call_1090))) # shape=(8, 15, 12)
bop_1128 = relay.bitwise_or(call_1091.astype('uint64'), relay.reshape(var_1124.astype('uint64'), relay.shape_of(call_1091))) # shape=(8, 15, 12)
func_978_call = mod.get_global_var('func_978')
func_979_call = mutated_mod.get_global_var('func_979')
call_1134 = relay.TupleGetItem(func_978_call(), 0)
call_1135 = relay.TupleGetItem(func_979_call(), 0)
func_109_call = mod.get_global_var('func_109')
func_111_call = mutated_mod.get_global_var('func_111')
call_1138 = relay.TupleGetItem(func_109_call(), 0)
call_1139 = relay.TupleGetItem(func_111_call(), 0)
output = relay.Tuple([call_1086,bop_1125,call_1134,call_1138,])
output2 = relay.Tuple([call_1087,bop_1128,call_1135,call_1139,])
func_1143 = relay.Function([var_1124,], output)
mod['func_1143'] = func_1143
mod = relay.transform.InferType()(mod)
mutated_mod['func_1143'] = func_1143
mutated_mod = relay.transform.InferType()(mutated_mod)
var_1144 = relay.var("var_1144", dtype = "float32", shape = (8, 15, 12))#candidate|1144|(8, 15, 12)|var|float32
func_1143_call = mutated_mod.get_global_var('func_1143')
call_1145 = func_1143_call(var_1144)
output = call_1145
func_1146 = relay.Function([var_1144], output)
mutated_mod['func_1146'] = func_1146
mutated_mod = relay.transform.InferType()(mutated_mod)
func_248_call = mod.get_global_var('func_248')
func_249_call = mutated_mod.get_global_var('func_249')
call_1229 = func_248_call()
call_1230 = func_248_call()
output = call_1229
output2 = call_1230
func_1234 = relay.Function([], output)
mod['func_1234'] = func_1234
mod = relay.transform.InferType()(mod)
mutated_mod['func_1234'] = func_1234
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1234_call = mutated_mod.get_global_var('func_1234')
call_1235 = func_1234_call()
output = call_1235
func_1236 = relay.Function([], output)
mutated_mod['func_1236'] = func_1236
mutated_mod = relay.transform.InferType()(mutated_mod)
func_814_call = mod.get_global_var('func_814')
func_816_call = mutated_mod.get_global_var('func_816')
call_1267 = func_814_call()
call_1268 = func_814_call()
var_1281 = relay.var("var_1281", dtype = "float64", shape = (8, 15, 12))#candidate|1281|(8, 15, 12)|var|float64
bop_1282 = relay.greater_equal(call_1267.astype('bool'), relay.reshape(var_1281.astype('bool'), relay.shape_of(call_1267))) # shape=(8, 15, 12)
bop_1285 = relay.greater_equal(call_1268.astype('bool'), relay.reshape(var_1281.astype('bool'), relay.shape_of(call_1268))) # shape=(8, 15, 12)
func_494_call = mod.get_global_var('func_494')
func_495_call = mutated_mod.get_global_var('func_495')
call_1289 = relay.TupleGetItem(func_494_call(), 0)
call_1290 = relay.TupleGetItem(func_495_call(), 0)
uop_1299 = relay.tan(bop_1282.astype('float64')) # shape=(8, 15, 12)
uop_1301 = relay.tan(bop_1285.astype('float64')) # shape=(8, 15, 12)
uop_1302 = relay.acos(uop_1299.astype('float64')) # shape=(8, 15, 12)
uop_1304 = relay.acos(uop_1301.astype('float64')) # shape=(8, 15, 12)
output = relay.Tuple([call_1289,uop_1302,])
output2 = relay.Tuple([call_1290,uop_1304,])
func_1324 = relay.Function([var_1281,], output)
mod['func_1324'] = func_1324
mod = relay.transform.InferType()(mod)
var_1325 = relay.var("var_1325", dtype = "float64", shape = (8, 15, 12))#candidate|1325|(8, 15, 12)|var|float64
output = func_1324(var_1325)
func_1326 = relay.Function([var_1325], output)
mutated_mod['func_1326'] = func_1326
mutated_mod = relay.transform.InferType()(mutated_mod)
const_1401 = relay.const(9.711711, dtype = "float64")#candidate|1401|()|const|float64
var_1402 = relay.var("var_1402", dtype = "float64", shape = (2, 13, 16))#candidate|1402|(2, 13, 16)|var|float64
bop_1403 = relay.less_equal(const_1401.astype('bool'), var_1402.astype('bool')) # shape=(2, 13, 16)
func_141_call = mod.get_global_var('func_141')
func_143_call = mutated_mod.get_global_var('func_143')
call_1406 = relay.TupleGetItem(func_141_call(), 0)
call_1407 = relay.TupleGetItem(func_143_call(), 0)
func_668_call = mod.get_global_var('func_668')
func_669_call = mutated_mod.get_global_var('func_669')
call_1411 = relay.TupleGetItem(func_668_call(), 0)
call_1412 = relay.TupleGetItem(func_669_call(), 0)
bop_1416 = relay.multiply(var_1402.astype('float32'), relay.reshape(bop_1403.astype('float32'), relay.shape_of(var_1402))) # shape=(2, 13, 16)
bop_1424 = relay.bitwise_or(bop_1403.astype('int16'), const_1401.astype('int16')) # shape=(2, 13, 16)
output = relay.Tuple([call_1406,call_1411,bop_1416,bop_1424,])
output2 = relay.Tuple([call_1407,call_1412,bop_1416,bop_1424,])
func_1445 = relay.Function([var_1402,], output)
mod['func_1445'] = func_1445
mod = relay.transform.InferType()(mod)
var_1446 = relay.var("var_1446", dtype = "float64", shape = (2, 13, 16))#candidate|1446|(2, 13, 16)|var|float64
output = func_1445(var_1446)
func_1447 = relay.Function([var_1446], output)
mutated_mod['func_1447'] = func_1447
mutated_mod = relay.transform.InferType()(mutated_mod)
const_1452 = relay.const([[[10,2,3]],[[-4,5,8]],[[9,8,-10]],[[-7,-2,6]],[[6,-6,-4]],[[8,8,3]],[[-1,8,9]],[[9,-9,-1]],[[-2,8,1]],[[-5,-7,-7]],[[-10,6,4]],[[-3,-6,-10]],[[5,3,6]],[[3,-2,-2]],[[-6,-1,10]]], dtype = "uint16")#candidate|1452|(15, 1, 3)|const|uint16
var_1453 = relay.var("var_1453", dtype = "uint16", shape = (15, 6, 3))#candidate|1453|(15, 6, 3)|var|uint16
bop_1454 = relay.bitwise_xor(const_1452.astype('uint16'), var_1453.astype('uint16')) # shape=(15, 6, 3)
uop_1465 = relay.atan(var_1453.astype('float64')) # shape=(15, 6, 3)
func_842_call = mod.get_global_var('func_842')
func_843_call = mutated_mod.get_global_var('func_843')
call_1468 = relay.TupleGetItem(func_842_call(), 1)
call_1469 = relay.TupleGetItem(func_843_call(), 1)
output = relay.Tuple([bop_1454,uop_1465,call_1468,])
output2 = relay.Tuple([bop_1454,uop_1465,call_1469,])
func_1477 = relay.Function([var_1453,], output)
mod['func_1477'] = func_1477
mod = relay.transform.InferType()(mod)
var_1478 = relay.var("var_1478", dtype = "uint16", shape = (15, 6, 3))#candidate|1478|(15, 6, 3)|var|uint16
output = func_1477(var_1478)
func_1479 = relay.Function([var_1478], output)
mutated_mod['func_1479'] = func_1479
mutated_mod = relay.transform.InferType()(mutated_mod)
func_643_call = mod.get_global_var('func_643')
func_645_call = mutated_mod.get_global_var('func_645')
call_1522 = func_643_call()
call_1523 = func_643_call()
output = call_1522
output2 = call_1523
func_1526 = relay.Function([], output)
mod['func_1526'] = func_1526
mod = relay.transform.InferType()(mod)
mutated_mod['func_1526'] = func_1526
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1526_call = mutated_mod.get_global_var('func_1526')
call_1527 = func_1526_call()
output = call_1527
func_1528 = relay.Function([], output)
mutated_mod['func_1528'] = func_1528
mutated_mod = relay.transform.InferType()(mutated_mod)
func_842_call = mod.get_global_var('func_842')
func_843_call = mutated_mod.get_global_var('func_843')
call_1537 = relay.TupleGetItem(func_842_call(), 0)
call_1538 = relay.TupleGetItem(func_843_call(), 0)
var_1570 = relay.var("var_1570", dtype = "float64", shape = (8, 15, 12))#candidate|1570|(8, 15, 12)|var|float64
bop_1571 = relay.bitwise_and(call_1537.astype('int64'), relay.reshape(var_1570.astype('int64'), relay.shape_of(call_1537))) # shape=(8, 15, 12)
bop_1574 = relay.bitwise_and(call_1538.astype('int64'), relay.reshape(var_1570.astype('int64'), relay.shape_of(call_1538))) # shape=(8, 15, 12)
output = relay.Tuple([bop_1571,])
output2 = relay.Tuple([bop_1574,])
func_1585 = relay.Function([var_1570,], output)
mod['func_1585'] = func_1585
mod = relay.transform.InferType()(mod)
mutated_mod['func_1585'] = func_1585
mutated_mod = relay.transform.InferType()(mutated_mod)
var_1586 = relay.var("var_1586", dtype = "float64", shape = (8, 15, 12))#candidate|1586|(8, 15, 12)|var|float64
func_1585_call = mutated_mod.get_global_var('func_1585')
call_1587 = func_1585_call(var_1586)
output = call_1587
func_1588 = relay.Function([var_1586], output)
mutated_mod['func_1588'] = func_1588
mutated_mod = relay.transform.InferType()(mutated_mod)
func_494_call = mod.get_global_var('func_494')
func_495_call = mutated_mod.get_global_var('func_495')
call_1663 = relay.TupleGetItem(func_494_call(), 0)
call_1664 = relay.TupleGetItem(func_495_call(), 0)
func_668_call = mod.get_global_var('func_668')
func_669_call = mutated_mod.get_global_var('func_669')
call_1677 = relay.TupleGetItem(func_668_call(), 1)
call_1678 = relay.TupleGetItem(func_669_call(), 1)
output = relay.Tuple([call_1663,call_1677,])
output2 = relay.Tuple([call_1664,call_1678,])
func_1684 = relay.Function([], output)
mod['func_1684'] = func_1684
mod = relay.transform.InferType()(mod)
output = func_1684()
func_1685 = relay.Function([], output)
mutated_mod['func_1685'] = func_1685
mutated_mod = relay.transform.InferType()(mutated_mod)
func_683_call = mod.get_global_var('func_683')
func_685_call = mutated_mod.get_global_var('func_685')
call_1707 = relay.TupleGetItem(func_683_call(), 0)
call_1708 = relay.TupleGetItem(func_685_call(), 0)
func_842_call = mod.get_global_var('func_842')
func_843_call = mutated_mod.get_global_var('func_843')
call_1719 = relay.TupleGetItem(func_842_call(), 0)
call_1720 = relay.TupleGetItem(func_843_call(), 0)
uop_1725 = relay.sin(call_1707.astype('float64')) # shape=(8, 15, 12)
uop_1727 = relay.sin(call_1708.astype('float64')) # shape=(8, 15, 12)
output = relay.Tuple([call_1719,uop_1725,])
output2 = relay.Tuple([call_1720,uop_1727,])
func_1730 = relay.Function([], output)
mod['func_1730'] = func_1730
mod = relay.transform.InferType()(mod)
output = func_1730()
func_1731 = relay.Function([], output)
mutated_mod['func_1731'] = func_1731
mutated_mod = relay.transform.InferType()(mutated_mod)
var_1753 = relay.var("var_1753", dtype = "float32", shape = (3, 12))#candidate|1753|(3, 12)|var|float32
uop_1754 = relay.sinh(var_1753.astype('float32')) # shape=(3, 12)
output = relay.Tuple([uop_1754,])
output2 = relay.Tuple([uop_1754,])
func_1756 = relay.Function([var_1753,], output)
mod['func_1756'] = func_1756
mod = relay.transform.InferType()(mod)
var_1757 = relay.var("var_1757", dtype = "float32", shape = (3, 12))#candidate|1757|(3, 12)|var|float32
output = func_1756(var_1757)
func_1758 = relay.Function([var_1757], output)
mutated_mod['func_1758'] = func_1758
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1234_call = mod.get_global_var('func_1234')
func_1236_call = mutated_mod.get_global_var('func_1236')
call_1771 = func_1234_call()
call_1772 = func_1234_call()
func_1324_call = mod.get_global_var('func_1324')
func_1326_call = mutated_mod.get_global_var('func_1326')
call_1775 = relay.TupleGetItem(func_1324_call(relay.reshape(call_1771.astype('float64'), [8, 15, 12])), 1)
call_1776 = relay.TupleGetItem(func_1326_call(relay.reshape(call_1771.astype('float64'), [8, 15, 12])), 1)
output = relay.Tuple([call_1771,call_1775,])
output2 = relay.Tuple([call_1772,call_1776,])
func_1782 = relay.Function([], output)
mod['func_1782'] = func_1782
mod = relay.transform.InferType()(mod)
mutated_mod['func_1782'] = func_1782
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1782_call = mutated_mod.get_global_var('func_1782')
call_1783 = func_1782_call()
output = call_1783
func_1784 = relay.Function([], output)
mutated_mod['func_1784'] = func_1784
mutated_mod = relay.transform.InferType()(mutated_mod)
func_842_call = mod.get_global_var('func_842')
func_843_call = mutated_mod.get_global_var('func_843')
call_1818 = relay.TupleGetItem(func_842_call(), 0)
call_1819 = relay.TupleGetItem(func_843_call(), 0)
uop_1825 = relay.sigmoid(call_1818.astype('float32')) # shape=(8, 15, 12)
uop_1827 = relay.sigmoid(call_1819.astype('float32')) # shape=(8, 15, 12)
output = relay.Tuple([uop_1825,])
output2 = relay.Tuple([uop_1827,])
func_1829 = relay.Function([], output)
mod['func_1829'] = func_1829
mod = relay.transform.InferType()(mod)
mutated_mod['func_1829'] = func_1829
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1829_call = mutated_mod.get_global_var('func_1829')
call_1830 = func_1829_call()
output = call_1830
func_1831 = relay.Function([], output)
mutated_mod['func_1831'] = func_1831
mutated_mod = relay.transform.InferType()(mutated_mod)
var_1852 = relay.var("var_1852", dtype = "int16", shape = (2, 12, 9))#candidate|1852|(2, 12, 9)|var|int16
var_1853 = relay.var("var_1853", dtype = "int16", shape = (2, 12, 9))#candidate|1853|(2, 12, 9)|var|int16
bop_1854 = relay.multiply(var_1852.astype('int16'), relay.reshape(var_1853.astype('int16'), relay.shape_of(var_1852))) # shape=(2, 12, 9)
uop_1874 = relay.tan(var_1852.astype('float32')) # shape=(2, 12, 9)
uop_1877 = relay.acosh(uop_1874.astype('float64')) # shape=(2, 12, 9)
output = relay.Tuple([bop_1854,uop_1877,])
output2 = relay.Tuple([bop_1854,uop_1877,])
func_1896 = relay.Function([var_1852,var_1853,], output)
mod['func_1896'] = func_1896
mod = relay.transform.InferType()(mod)
var_1897 = relay.var("var_1897", dtype = "int16", shape = (2, 12, 9))#candidate|1897|(2, 12, 9)|var|int16
var_1898 = relay.var("var_1898", dtype = "int16", shape = (2, 12, 9))#candidate|1898|(2, 12, 9)|var|int16
output = func_1896(var_1897,var_1898,)
func_1899 = relay.Function([var_1897,var_1898,], output)
mutated_mod['func_1899'] = func_1899
mutated_mod = relay.transform.InferType()(mutated_mod)
func_668_call = mod.get_global_var('func_668')
func_669_call = mutated_mod.get_global_var('func_669')
call_1918 = relay.TupleGetItem(func_668_call(), 0)
call_1919 = relay.TupleGetItem(func_669_call(), 0)
output = relay.Tuple([call_1918,])
output2 = relay.Tuple([call_1919,])
func_1966 = relay.Function([], output)
mod['func_1966'] = func_1966
mod = relay.transform.InferType()(mod)
mutated_mod['func_1966'] = func_1966
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1966_call = mutated_mod.get_global_var('func_1966')
call_1967 = func_1966_call()
output = call_1967
func_1968 = relay.Function([], output)
mutated_mod['func_1968'] = func_1968
mutated_mod = relay.transform.InferType()(mutated_mod)
func_941_call = mod.get_global_var('func_941')
func_943_call = mutated_mod.get_global_var('func_943')
call_1984 = relay.TupleGetItem(func_941_call(), 2)
call_1985 = relay.TupleGetItem(func_943_call(), 2)
func_1966_call = mod.get_global_var('func_1966')
func_1968_call = mutated_mod.get_global_var('func_1968')
call_2018 = relay.TupleGetItem(func_1966_call(), 0)
call_2019 = relay.TupleGetItem(func_1968_call(), 0)
func_1445_call = mod.get_global_var('func_1445')
func_1447_call = mutated_mod.get_global_var('func_1447')
const_2026 = relay.const([8.950115,8.706382,3.252824,3.308218,3.707966,-7.284925,-2.946918,-7.792359,-2.572955,3.935564,-7.643583,-4.234906,-0.958307,-4.823247,3.411190,5.061707,-5.378055,-5.246436,-8.377959,-5.996436,1.624709,4.567638,9.149569,1.527034,-1.807526,-7.335462,0.484571,0.434301,-8.589722,7.891304,-0.807177,5.843573,7.742815,-4.551544,8.800549,5.404272,4.119209,-6.461133,1.346982,2.132100,2.212277,-8.366597,-8.230998,-5.073157,3.237793,8.876238,-9.067837,-1.301246,-4.512010,-9.277839,4.952996,-3.349678,-4.564867,5.894484,4.549802,-9.175465,-3.037773,9.290279,-9.405984,-7.633949,6.300014,2.140869,-4.804751,-9.810814,1.745609,-2.814595,-4.336190,2.987377,5.000397,-7.688959,4.843659,0.781503,3.760105,3.869000,6.415592,3.749326,6.523554,-1.806262,-9.386550,-0.418002,7.797835,-3.686282,8.805200,9.648514,-9.977583,4.882806,-5.828187,-1.381783,9.060080,1.813227,9.112175,-6.571597,-6.454210,-0.851084,1.955812,-2.829614,2.535588,-1.049678,-6.404975,2.240592,-8.015988,0.941944,-2.059910,-5.009599,9.281135,-2.979983,2.944499,0.656211,2.669026,-0.216085,-5.123237,-6.829726,-6.426796,-1.933487,-1.583780,0.886577,1.550602,2.059437,-4.589939,3.709138,3.112317,-5.772906,-6.281700,-6.275259,8.025315,-7.896155,3.065405,1.538830,-0.662250,6.315115,-3.457137,7.599332,5.393365,3.225484,-3.303184,9.858164,-9.047326,-2.727027,5.529710,-8.194725,-0.256060,-0.676414,8.579236,6.806528,1.789770,-0.796126,6.557289,2.625936,-1.906076,6.667969,-4.228338,2.407188,-9.194066,9.075136,-4.030463,1.121608,4.598886,7.602092,3.901770,-0.552602,8.133174,-9.330678,-9.079886,7.970110,-0.831610,0.177315,7.523181,0.375987,6.491836,6.079864,7.793501,-3.641316,-2.322128,2.086534,-4.828819,-2.883777,6.276666,-8.174330,9.768721,-5.998198,-0.171275,-6.316009,-8.149679,-2.460791,-6.414600,-7.994888,-9.352397,-3.344224,-9.163877,-5.075502,6.855225,-6.011813,-1.489812,-2.558613,-7.080801,9.085590,4.466884,-9.273018,-1.159369,6.807015,-6.002765,-0.201777,-4.492033,8.019738,-1.800306,7.600560,-0.796066,-8.775862,-6.487205,-0.359975,-6.019989,-9.721030,4.730533,0.482688,1.106172,5.512402,-9.929693,-0.259582,-5.360004,0.331294,0.791887,1.306049,-7.511522,-0.553881,-4.382416,1.050749,7.851671,-5.278516,-6.700718,-6.482293,-8.249392,6.767638,8.523322,5.315555,1.830267,-4.494621,5.389557,4.823531,-3.322845,0.428483,-4.607127,1.756477,-1.422416,3.653743,8.040091,-9.988325,6.391141,7.601183,2.898397,-3.493132,3.714880,4.037097,-3.882095,7.680721,4.228295,-9.066449,9.891040,8.450536,2.971157,9.255881,-0.587732,1.717154,9.535160,-6.004341,4.942467,-6.562498,0.375292,-1.050269,-1.960112,-6.016992,-8.565721,2.043172,-8.649351,7.400757,6.638091,3.384960,-6.411684,9.825648,5.909546,-9.508701,9.190326,5.823002,-3.202837,-6.979925,7.446598,-9.613698,9.370784,-6.400540,-8.470878,-4.141944,-9.454352,0.361969,-2.179031,-4.546764,-6.880434,-7.612669,1.583420,2.382748,8.759354,-8.100319,-8.788648,-5.889722,3.047156,-1.339315,-6.717112,6.884456,-2.671829,2.915599,-0.739535,-2.201081,-1.548405,-6.448542,-1.121703,-2.043977,2.098514,7.513202,5.998508,-3.775468,-1.728324,5.036602,6.363453,8.116894,6.222750,-4.304260,-8.767868,9.971382,5.845743,1.931580,2.909541,-6.511319,-2.579839,-1.015208,5.534107,-2.929531,1.853989,3.241860,6.093355,-6.518304,3.959695,-9.076409,1.491748,8.676807,7.220793,1.984132,-6.588122,4.164301,7.684107,-1.450214,-5.724913,-3.285182,-1.454495,-2.209219,-8.087052,4.827794,5.704452,6.827534,8.729132,-4.561752,2.238547,6.664450,6.118868,8.014619,-0.588059,9.524310,-1.853740,6.749750,5.367539,-6.416688,-2.593428,-2.912798,0.546551,3.488011,-6.643152,2.051532,8.286138,5.704876,-9.017917,8.190538,-7.978102,0.496799,-7.423278,-9.110292,5.811355,8.639464,-8.441187,9.999045,5.607449,-6.775364,-0.153627,-2.251226,-4.583274,-3.934488,-4.517522,7.891618,4.028560,5.034924,6.744974,0.745854,0.407920,3.959658,-9.955327,8.528681,8.213046,7.600615,-8.653934,6.329871,0.245634,1.736779,7.653421,5.903776,0.729979,-1.052205,-7.368906,4.218784,-4.158152,4.056867], dtype = "float64")#candidate|2026|(416,)|const|float64
call_2025 = relay.TupleGetItem(func_1445_call(relay.reshape(const_2026.astype('float64'), [2, 13, 16])), 0)
call_2027 = relay.TupleGetItem(func_1447_call(relay.reshape(const_2026.astype('float64'), [2, 13, 16])), 0)
uop_2028 = relay.atan(call_1984.astype('float32')) # shape=(8, 15, 12)
uop_2030 = relay.atan(call_1985.astype('float32')) # shape=(8, 15, 12)
output = relay.Tuple([call_2018,call_2025,const_2026,uop_2028,])
output2 = relay.Tuple([call_2019,call_2027,const_2026,uop_2030,])
func_2040 = relay.Function([], output)
mod['func_2040'] = func_2040
mod = relay.transform.InferType()(mod)
output = func_2040()
func_2041 = relay.Function([], output)
mutated_mod['func_2041'] = func_2041
mutated_mod = relay.transform.InferType()(mutated_mod)
var_2149 = relay.var("var_2149", dtype = "uint8", shape = (5, 5, 1))#candidate|2149|(5, 5, 1)|var|uint8
var_2150 = relay.var("var_2150", dtype = "uint8", shape = (5, 5, 11))#candidate|2150|(5, 5, 11)|var|uint8
bop_2151 = relay.minimum(var_2149.astype('uint8'), var_2150.astype('uint8')) # shape=(5, 5, 11)
uop_2156 = relay.log2(var_2149.astype('float32')) # shape=(5, 5, 1)
bop_2162 = relay.subtract(bop_2151.astype('uint8'), uop_2156.astype('uint8')) # shape=(5, 5, 11)
output = relay.Tuple([bop_2162,])
output2 = relay.Tuple([bop_2162,])
func_2177 = relay.Function([var_2149,var_2150,], output)
mod['func_2177'] = func_2177
mod = relay.transform.InferType()(mod)
mutated_mod['func_2177'] = func_2177
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2177_call = mutated_mod.get_global_var('func_2177')
var_2179 = relay.var("var_2179", dtype = "uint8", shape = (5, 5, 1))#candidate|2179|(5, 5, 1)|var|uint8
var_2180 = relay.var("var_2180", dtype = "uint8", shape = (5, 5, 11))#candidate|2180|(5, 5, 11)|var|uint8
call_2178 = func_2177_call(var_2179,var_2180,)
output = call_2178
func_2181 = relay.Function([var_2179,var_2180,], output)
mutated_mod['func_2181'] = func_2181
mutated_mod = relay.transform.InferType()(mutated_mod)
func_435_call = mod.get_global_var('func_435')
func_436_call = mutated_mod.get_global_var('func_436')
call_2197 = func_435_call()
call_2198 = func_435_call()
func_1896_call = mod.get_global_var('func_1896')
func_1899_call = mutated_mod.get_global_var('func_1899')
const_2201 = relay.const([9,4,-10,-7,6,-5,-4,-4,3,2,-3,8,1,7,1,-5,-8,6,-9,-1,8,3,-9,3,-7,5,-1,8,-5,1,8,8,-4,6,-9,2,4,-9,2,-3,7,1,-1,2,-3,-1,9,-7,-8,-8,-9,-6,6,8,-9,9,10,-6,10,-6,10,-5,1,-4,6,-7,4,10,1,10,-8,6,10,9,-1,-4,-2,-2,1,-1,-9,2,4,-5,-9,-6,7,-4,-5,8,8,7,-9,5,6,-6,6,10,1,8,-4,6,-6,10,-5,-5,10,-5,2,10,-5,3,-6,3,10,-7,6,6,6,-1,-4,-4,-10,-5,8,-10,-4,4,8,7,-1,-4,8,6,6,4,4,8,8,6,-1,-9,-9,-6,2,-7,-10,9,1,-1,-3,-10,-5,-2,-2,-7,5,5,-8,-3,6,5,-10,-3,2,-9,1,3,-8,8,-3,10,-2,-2,-7,3,4,9,-4,5,6,-2,-3,-4,-10,-10,9,3,-4,2,-1,-5,4,-8,-6,-6,-9,1,3,-5,-8,-8,-5,-8,7,10,-6,-4,1,-3,-7,9,-5,-1,4,3], dtype = "int16")#candidate|2201|(216,)|const|int16
call_2200 = relay.TupleGetItem(func_1896_call(relay.reshape(const_2201.astype('int16'), [2, 12, 9]), relay.reshape(const_2201.astype('int16'), [2, 12, 9]), ), 0)
call_2202 = relay.TupleGetItem(func_1899_call(relay.reshape(const_2201.astype('int16'), [2, 12, 9]), relay.reshape(const_2201.astype('int16'), [2, 12, 9]), ), 0)
output = relay.Tuple([call_2197,call_2200,const_2201,])
output2 = relay.Tuple([call_2198,call_2202,const_2201,])
func_2203 = relay.Function([], output)
mod['func_2203'] = func_2203
mod = relay.transform.InferType()(mod)
output = func_2203()
func_2204 = relay.Function([], output)
mutated_mod['func_2204'] = func_2204
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1966_call = mod.get_global_var('func_1966')
func_1968_call = mutated_mod.get_global_var('func_1968')
call_2215 = relay.TupleGetItem(func_1966_call(), 0)
call_2216 = relay.TupleGetItem(func_1968_call(), 0)
output = relay.Tuple([call_2215,])
output2 = relay.Tuple([call_2216,])
func_2221 = relay.Function([], output)
mod['func_2221'] = func_2221
mod = relay.transform.InferType()(mod)
output = func_2221()
func_2222 = relay.Function([], output)
mutated_mod['func_2222'] = func_2222
mutated_mod = relay.transform.InferType()(mutated_mod)
func_588_call = mod.get_global_var('func_588')
func_589_call = mutated_mod.get_global_var('func_589')
call_2230 = relay.TupleGetItem(func_588_call(), 1)
call_2231 = relay.TupleGetItem(func_589_call(), 1)
output = call_2230
output2 = call_2231
func_2238 = relay.Function([], output)
mod['func_2238'] = func_2238
mod = relay.transform.InferType()(mod)
output = func_2238()
func_2239 = relay.Function([], output)
mutated_mod['func_2239'] = func_2239
mutated_mod = relay.transform.InferType()(mutated_mod)
var_2240 = relay.var("var_2240", dtype = "uint64", shape = (10, 12, 9))#candidate|2240|(10, 12, 9)|var|uint64
const_2241 = relay.const([[[6,-2,-6,-4,-9,10,-4,-2,9],[1,8,-9,-1,-7,9,-10,9,-9],[-6,6,1,-9,-2,1,-10,-7,2],[-3,-3,1,-6,-6,-3,-10,7,-4],[9,3,-8,-5,1,-9,8,-4,-4],[4,8,-5,-6,-1,10,-1,-1,-4],[-3,9,9,-4,8,9,-7,-2,-2],[5,1,-10,1,3,8,-3,4,-2],[10,1,8,-1,-2,7,9,3,9],[-4,5,-4,-3,-5,-9,-4,-4,6],[-7,-6,-10,-5,6,3,-1,4,4],[-10,-7,6,3,6,4,-9,10,2]],[[-8,-1,4,10,2,-1,3,3,-8],[5,-8,-9,4,-7,-5,6,-5,10],[2,-7,3,9,3,6,-3,-1,4],[7,-9,-4,-1,-10,7,10,-9,4],[-6,7,-6,-1,6,10,-3,1,9],[-6,4,-1,-5,10,9,-3,-8,-6],[-5,-3,-8,-4,10,-1,-9,-3,3],[5,6,-10,-1,10,7,-4,-3,-7],[2,2,-7,2,1,10,-1,2,10],[2,8,3,-10,-10,-3,-3,-6,-6],[-9,-10,6,-2,5,-6,-7,8,-2],[3,-7,-6,7,5,6,8,-2,4]],[[8,-6,-2,-10,1,-6,-9,7,-1],[-8,4,-4,7,-6,2,-10,7,-5],[-10,-10,3,6,-7,9,7,8,1],[4,8,8,1,2,3,9,-2,-4],[8,-8,4,5,-3,7,-7,-1,-2],[-6,-8,-2,-6,4,-1,5,-10,-6],[-8,-10,-4,-6,-9,-7,-7,-7,-9],[-6,2,-5,10,-2,-2,-7,-9,-3],[5,5,8,8,-3,10,3,-9,8],[8,3,-8,-10,7,-3,2,2,5],[-9,7,5,-4,-5,-5,-8,-1,-3],[-5,-4,-2,-5,-7,4,-10,5,5]],[[-5,10,3,-3,8,-1,2,6,10],[-5,2,5,5,9,3,2,4,-9],[7,7,7,8,5,7,2,2,7],[-2,-5,4,4,5,8,-4,-8,-4],[-6,-6,6,6,-5,-2,8,-5,-4],[10,-7,-5,-10,1,7,-7,-8,5],[4,10,2,4,-7,-4,9,8,-10],[10,1,2,-7,-2,-1,8,10,7],[-1,5,-1,8,4,6,10,-8,9],[8,8,-10,-9,-4,-8,1,3,7],[5,-4,3,5,-7,-6,-2,4,-6],[-10,-5,-2,-9,-2,10,-6,7,6]],[[-3,-5,5,-9,-6,10,9,7,-6],[7,-3,-10,10,-10,8,-7,8,-1],[3,-1,-3,3,10,-8,-8,-4,5],[3,-9,-2,-6,6,-1,6,-9,7],[7,5,-7,-4,9,-5,1,10,9],[-7,-9,1,-3,7,6,-3,-3,8],[3,-6,-1,5,-9,6,-6,-4,-7],[8,6,2,-9,-4,-3,-4,-6,9],[3,3,-8,9,1,1,-2,8,2],[9,4,6,6,6,-2,1,-8,7],[-1,-1,2,10,1,-2,-7,8,2],[1,-6,10,-1,-5,-5,-8,-1,-1]],[[-3,6,1,10,-7,-1,2,9,-8],[-8,-9,-1,-5,3,10,-8,-4,-8],[2,-3,4,-10,-6,6,7,5,7],[2,-5,-10,6,-7,-2,-5,10,-5],[-2,3,-5,1,5,10,2,-5,-5],[-9,5,-3,-10,3,-6,6,-5,-5],[-10,-4,10,8,-6,-8,-10,-3,-2],[1,-5,-4,3,9,1,-10,-10,-7],[-10,4,-7,-8,9,1,-8,-5,-9],[3,9,3,8,10,-8,10,-1,6],[7,5,5,-9,-2,-5,-3,4,2],[1,-1,-10,9,8,4,-6,-8,-7]],[[8,-6,-10,3,1,7,-7,7,-3],[-8,7,-10,2,4,-8,-2,6,-9],[9,4,-1,5,-1,-5,-9,7,-1],[-9,-3,-2,3,-9,4,-9,-2,-4],[6,-1,4,-3,3,9,5,6,10],[-8,3,-5,-7,-9,7,-2,-5,-2],[-2,-1,3,6,9,-7,-1,-3,-4],[3,-3,10,6,-5,-6,-9,1,1],[10,-3,1,-10,-5,-1,1,2,-4],[6,-4,-2,-7,7,3,-2,-5,-3],[-5,3,6,-10,-7,3,-5,-3,1],[7,8,-5,-10,-3,-2,-5,9,-6]],[[1,-2,-10,-2,-5,2,-2,-3,1],[-1,-3,-9,-3,1,-4,5,-4,-6],[5,9,-10,-5,8,-3,5,1,10],[-4,-6,-5,3,6,8,-4,-7,-2],[-4,1,6,-10,-10,9,-2,-5,10],[-9,-9,-2,4,-1,-9,-9,-3,-4],[6,9,8,8,-1,-10,-2,-3,1],[-9,3,9,-6,-4,1,-7,3,-5],[-2,-1,-5,-3,10,-7,3,-8,-7],[-8,-5,1,2,5,1,-6,-4,-7],[8,5,8,-8,1,7,5,10,-10],[8,-6,-9,4,2,-4,8,-1,-9]],[[6,-1,-7,4,8,2,4,1,-6],[8,6,7,-9,2,-7,-10,-2,1],[-3,-9,-8,8,4,3,-8,9,1],[3,-10,-1,-8,1,3,-7,-6,5],[1,7,3,-3,-1,4,-8,-3,2],[9,-6,-7,-4,-5,-3,6,6,-7],[-1,7,-5,-5,7,-3,-3,-6,5],[-10,-8,-9,7,-2,7,9,2,-2],[-8,1,-5,2,-9,7,-4,2,1],[-2,9,1,-5,-5,-8,-7,-4,-10],[3,6,-4,7,-1,-9,-4,-3,7],[10,4,-3,4,7,-6,-6,-2,-4]],[[-9,-2,2,5,4,-9,-1,3,6],[-8,-3,6,-1,-10,-9,9,7,-8],[-5,-5,10,8,-4,-7,-6,-1,-9],[10,-1,4,5,8,5,1,9,-6],[3,-2,-4,9,3,9,-7,1,9],[8,7,8,-9,1,-8,-9,-1,-9],[-8,-7,8,-3,4,5,-1,1,-6],[-1,9,-5,9,9,-4,6,-9,-5],[8,-4,-5,-10,-1,-6,2,-3,9],[10,-3,9,9,1,10,-5,-5,-3],[-9,9,-5,-6,-2,10,1,1,-8],[3,-8,5,10,8,-10,-8,-5,-8]]], dtype = "uint64")#candidate|2241|(10, 12, 9)|const|uint64
bop_2242 = relay.greater_equal(var_2240.astype('bool'), relay.reshape(const_2241.astype('bool'), relay.shape_of(var_2240))) # shape=(10, 12, 9)
output = bop_2242
output2 = bop_2242
func_2245 = relay.Function([var_2240,], output)
mod['func_2245'] = func_2245
mod = relay.transform.InferType()(mod)
mutated_mod['func_2245'] = func_2245
mutated_mod = relay.transform.InferType()(mutated_mod)
var_2246 = relay.var("var_2246", dtype = "uint64", shape = (10, 12, 9))#candidate|2246|(10, 12, 9)|var|uint64
func_2245_call = mutated_mod.get_global_var('func_2245')
call_2247 = func_2245_call(var_2246)
output = call_2247
func_2248 = relay.Function([var_2246], output)
mutated_mod['func_2248'] = func_2248
mutated_mod = relay.transform.InferType()(mutated_mod)
var_2258 = relay.var("var_2258", dtype = "int8", shape = (1, 16, 15))#candidate|2258|(1, 16, 15)|var|int8
var_2259 = relay.var("var_2259", dtype = "int8", shape = (6, 16, 15))#candidate|2259|(6, 16, 15)|var|int8
bop_2260 = relay.greater_equal(var_2258.astype('bool'), var_2259.astype('bool')) # shape=(6, 16, 15)
output = bop_2260
output2 = bop_2260
func_2278 = relay.Function([var_2258,var_2259,], output)
mod['func_2278'] = func_2278
mod = relay.transform.InferType()(mod)
mutated_mod['func_2278'] = func_2278
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2278_call = mutated_mod.get_global_var('func_2278')
var_2280 = relay.var("var_2280", dtype = "int8", shape = (1, 16, 15))#candidate|2280|(1, 16, 15)|var|int8
var_2281 = relay.var("var_2281", dtype = "int8", shape = (6, 16, 15))#candidate|2281|(6, 16, 15)|var|int8
call_2279 = func_2278_call(var_2280,var_2281,)
output = call_2279
func_2282 = relay.Function([var_2280,var_2281,], output)
mutated_mod['func_2282'] = func_2282
mutated_mod = relay.transform.InferType()(mutated_mod)
const_2298 = relay.const(5.174098, dtype = "float64")#candidate|2298|()|const|float64
const_2299 = relay.const([[[9.114961,4.102568,-0.018585,8.064117,0.438783,-9.435534,-6.673245,-2.258175,9.039498,-2.344551],[-0.949827,-8.560080,-7.103477,-5.878013,-8.281198,2.461693,-2.268976,-9.280108,-5.628210,8.055192],[4.487005,1.019057,-7.000691,-2.758212,0.194551,-3.936117,2.299257,-8.628656,-7.717278,4.774429],[-3.437398,-9.339597,0.616162,-1.301588,-2.925976,1.488218,1.044395,-0.602533,-5.145179,3.980681],[8.058291,-9.981998,3.824702,-2.829863,5.909585,-3.956885,-8.455083,-1.922410,6.385611,2.199571]],[[3.275906,-6.424673,1.134482,-4.817455,6.294701,-1.749389,2.473025,4.636158,4.081772,-0.892934],[0.835302,-6.518474,4.424589,7.675448,1.265411,-6.104279,-6.555666,-1.038821,9.532712,9.464574],[-8.026715,0.516553,-4.835022,-2.253121,-6.770575,-6.717717,4.566900,4.719242,-6.759622,-7.648876],[-2.515666,-7.978481,7.072510,-5.906846,3.045386,7.302117,9.885384,8.793113,3.005302,9.582200],[-1.907148,-7.369690,6.393792,-8.176421,-2.598938,4.760058,7.512149,5.220460,-1.040374,-6.801047]],[[-0.836660,-2.230628,-8.449397,1.328126,2.640105,-9.921900,3.463658,-9.595600,-7.771671,-0.627407],[0.079277,6.538244,0.807174,7.517176,5.698232,8.619153,2.594758,5.861406,9.166317,3.738894],[-4.109155,-6.247578,-9.817224,-9.779540,7.057644,-4.269645,-9.356112,0.276946,-1.566689,-6.289165],[-2.699340,8.174293,7.285325,-5.815663,-8.285996,8.607473,1.340727,-8.283674,-1.657916,-6.311719],[7.458612,-5.793227,0.790610,1.416935,-5.642607,1.653582,2.205274,-3.063891,7.527441,9.978840]],[[0.122322,-6.957337,-6.482035,-4.471196,5.602062,-5.290433,4.282578,6.347690,-3.510654,9.185768],[-6.113736,-3.620767,7.991259,-5.896518,4.530249,-0.681007,-5.358538,8.731431,5.744288,-7.602504],[-9.194421,9.881829,4.846153,-7.215438,2.009788,5.687804,-1.417600,8.196694,-8.061680,8.653763],[7.254318,-2.557719,-2.972424,-7.509369,-9.504219,4.911212,2.065008,-2.317902,9.839826,6.017771],[-1.188844,-4.728387,-0.771283,2.118246,7.856480,-3.209081,-7.891672,-5.495451,-1.827611,6.516642]],[[5.908932,0.133193,7.798006,-9.018907,7.042688,-2.061323,-7.760478,-3.103429,-6.411608,8.724221],[-8.189576,3.663504,7.641347,-8.242740,-0.547282,-0.853141,-6.996993,9.904420,1.842527,-1.617432],[7.821530,4.425737,7.341794,-3.068562,2.311651,1.948719,8.411565,-1.020994,-3.882041,-4.816893],[-0.344625,1.016259,-7.640522,3.646326,-8.771505,-0.489889,-4.045167,7.429619,-3.198695,3.543206],[8.675892,1.137324,0.070552,5.586685,-4.284733,7.822569,-9.629042,2.323115,5.697499,7.969281]],[[-5.657668,2.314891,9.642843,-1.902822,-4.848024,1.352584,-9.636643,-5.398987,-0.779960,-8.523946],[3.020904,-6.190181,-8.654158,-3.179095,-9.634668,2.215423,-4.703485,5.671607,5.126905,2.431418],[9.880226,3.918597,8.848276,-7.846551,-3.193813,2.905779,-0.119883,1.228708,1.078088,-1.614669],[5.977216,5.576740,-5.599104,0.956224,-0.038212,5.189953,7.155154,-6.240838,-1.511075,4.462304],[9.104858,-6.393815,-4.824335,-0.048672,9.234057,0.587378,-4.291543,-9.512713,8.585278,-8.225239]],[[-6.101381,0.229620,-1.751557,2.998434,-0.192995,8.359514,6.973718,5.018086,-2.052092,5.187061],[-3.987948,-2.785998,8.910313,3.928776,3.804501,8.981374,7.964889,9.925277,-4.082016,-8.333886],[9.128217,-2.118048,0.348752,-9.605539,9.883800,-0.705419,-7.329859,-8.974483,5.945728,-0.896413],[1.528751,4.592442,6.526927,-8.539449,5.671499,-5.944436,8.846192,9.831406,6.540817,-8.862333],[9.894835,-8.479802,0.804739,-3.693659,3.794132,1.680849,-1.932490,4.922047,-5.967115,9.903534]],[[3.792328,-0.694238,-0.425891,3.525985,-7.968836,-1.389530,-1.648029,4.953743,3.285247,6.178394],[5.368874,1.262522,0.562199,8.897819,-0.437208,9.003204,-1.584782,-3.620452,3.919909,-7.624277],[5.854302,9.555693,-6.259059,-3.824337,-6.301920,-3.186220,-2.193301,3.601214,-6.804072,0.267712],[2.884456,-5.138239,0.416190,-9.234048,2.720598,-3.494818,9.395459,-2.597587,-7.347645,1.855532],[-7.140077,-2.036278,4.418122,-3.074552,-4.175209,2.288134,-3.689797,-8.347211,-6.951964,-0.616544]],[[2.629604,9.638268,7.936926,-0.427499,-1.603858,-8.811185,4.731641,3.217145,9.837347,7.019963],[-7.068998,2.853689,-1.690257,-8.400437,0.918184,-0.898280,3.571349,4.389990,-5.724697,-6.380454],[-1.786894,3.063057,-4.285543,-5.493580,6.347332,6.905021,-6.187688,-6.734212,-1.012848,-9.746370],[-3.840785,3.987689,-2.195055,-8.804198,-9.176440,6.643567,6.878160,6.245985,1.825994,2.459385],[7.609394,-0.192837,-3.608257,-0.410443,0.882673,-3.010903,-3.879540,1.039622,-5.622358,7.507861]],[[9.099253,4.050903,1.563086,-8.473291,9.102603,8.179018,-8.522980,-9.451940,2.042921,-2.382948],[8.278921,-5.893110,-0.526759,-2.930980,0.167133,8.768676,-2.881402,1.986879,7.827587,9.266480],[-1.505428,4.478370,-2.430476,6.245608,0.644149,0.390138,-0.018141,-5.886815,8.460111,7.686036],[-8.232688,0.635335,-2.486688,-4.426668,-9.582279,-8.851274,8.728509,-1.985953,3.646388,4.231401],[7.215685,-7.300804,-5.279691,-8.314288,4.858452,-0.323821,-7.423987,8.225727,-6.653024,7.792823]],[[3.692058,0.905185,8.384064,-5.496859,9.934195,8.161778,-4.633688,-3.962769,-3.281129,4.060693],[6.264691,0.420615,7.085601,-9.178963,3.442334,3.202288,4.274418,9.170194,-9.528990,7.887210],[5.749904,-2.607545,-9.384351,-5.398003,6.467834,0.692224,3.655010,-9.835843,7.906622,-8.846612],[-5.509107,8.613968,7.782261,0.435538,-8.207648,7.316331,0.862321,-2.713141,8.451228,7.569558],[-2.181692,2.192699,3.724056,-5.532420,-8.530004,2.248948,-5.413603,-3.560921,4.364878,8.955670]]], dtype = "float64")#candidate|2299|(11, 5, 10)|const|float64
bop_2300 = relay.divide(const_2298.astype('float64'), const_2299.astype('float64')) # shape=(11, 5, 10)
func_1756_call = mod.get_global_var('func_1756')
func_1758_call = mutated_mod.get_global_var('func_1758')
var_2312 = relay.var("var_2312", dtype = "float32", shape = (36,))#candidate|2312|(36,)|var|float32
call_2311 = relay.TupleGetItem(func_1756_call(relay.reshape(var_2312.astype('float32'), [3, 12])), 0)
call_2313 = relay.TupleGetItem(func_1758_call(relay.reshape(var_2312.astype('float32'), [3, 12])), 0)
output = relay.Tuple([bop_2300,call_2311,var_2312,])
output2 = relay.Tuple([bop_2300,call_2313,var_2312,])
func_2330 = relay.Function([var_2312,], output)
mod['func_2330'] = func_2330
mod = relay.transform.InferType()(mod)
var_2331 = relay.var("var_2331", dtype = "float32", shape = (36,))#candidate|2331|(36,)|var|float32
output = func_2330(var_2331)
func_2332 = relay.Function([var_2331], output)
mutated_mod['func_2332'] = func_2332
mutated_mod = relay.transform.InferType()(mutated_mod)
func_109_call = mod.get_global_var('func_109')
func_111_call = mutated_mod.get_global_var('func_111')
call_2342 = relay.TupleGetItem(func_109_call(), 0)
call_2343 = relay.TupleGetItem(func_111_call(), 0)
output = relay.Tuple([call_2342,])
output2 = relay.Tuple([call_2343,])
func_2348 = relay.Function([], output)
mod['func_2348'] = func_2348
mod = relay.transform.InferType()(mod)
output = func_2348()
func_2349 = relay.Function([], output)
mutated_mod['func_2349'] = func_2349
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1234_call = mod.get_global_var('func_1234')
func_1236_call = mutated_mod.get_global_var('func_1236')
call_2362 = func_1234_call()
call_2363 = func_1234_call()
output = call_2362
output2 = call_2363
func_2401 = relay.Function([], output)
mod['func_2401'] = func_2401
mod = relay.transform.InferType()(mod)
output = func_2401()
func_2402 = relay.Function([], output)
mutated_mod['func_2402'] = func_2402
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2238_call = mod.get_global_var('func_2238')
func_2239_call = mutated_mod.get_global_var('func_2239')
call_2468 = func_2238_call()
call_2469 = func_2238_call()
const_2475 = relay.const([[[True,False,False,True,True,False,False,False,True,True,True,True],[True,False,False,False,False,False,True,False,True,True,False,True],[True,True,True,False,True,False,False,False,False,False,True,True],[False,True,True,False,True,False,True,False,False,True,True,True],[True,False,True,True,True,True,False,False,False,True,True,True],[False,True,True,False,False,True,False,False,False,True,False,True],[False,False,False,False,True,True,True,True,True,False,False,False],[True,False,False,True,True,True,False,True,True,False,False,True],[True,False,True,True,True,False,True,True,False,True,False,True],[False,True,False,True,False,False,True,True,False,True,True,False],[True,True,True,False,True,True,True,False,True,False,False,True],[False,True,False,False,False,False,False,False,False,False,True,False],[True,False,True,True,True,False,True,False,False,True,False,True],[False,True,False,False,False,False,True,False,True,True,True,True],[False,True,True,False,True,False,False,False,False,True,False,True]],[[False,True,False,False,False,False,True,True,False,True,True,False],[True,False,False,False,True,True,True,True,False,False,True,False],[False,True,False,False,True,False,False,True,False,False,True,False],[False,False,True,False,False,False,False,True,False,True,False,False],[False,True,True,True,False,True,True,False,False,True,True,True],[False,True,False,False,True,True,False,True,False,False,False,False],[False,False,True,True,True,True,True,False,True,False,True,True],[True,False,True,False,True,False,True,True,True,False,True,False],[True,False,False,True,False,False,True,False,False,True,True,False],[False,False,False,True,True,True,False,False,True,False,False,False],[False,False,False,False,False,True,False,True,True,False,True,True],[False,False,False,True,True,True,True,False,False,True,True,True],[False,False,True,True,False,False,True,False,False,True,False,False],[True,True,True,False,True,False,False,False,True,False,True,False],[True,False,False,True,True,False,False,True,False,False,False,False]],[[False,True,False,False,True,True,False,False,False,True,False,True],[False,False,True,True,False,False,True,False,False,False,True,True],[False,False,False,False,False,False,False,False,False,False,False,True],[True,False,True,True,True,True,True,True,False,False,False,False],[True,False,False,True,False,False,True,False,False,True,False,False],[False,False,False,False,False,False,True,False,False,False,True,True],[True,False,True,True,True,True,False,False,True,False,True,True],[False,False,True,False,False,True,False,False,True,False,False,False],[False,True,False,False,True,True,False,False,False,True,False,True],[False,False,True,False,False,False,True,True,True,True,True,True],[False,False,True,False,False,True,False,True,False,False,True,True],[True,True,True,True,False,True,False,True,True,True,True,False],[False,False,True,True,True,False,False,False,False,True,False,True],[False,False,False,False,False,True,True,True,True,False,True,True],[False,True,False,True,True,True,True,True,False,False,False,True]],[[True,False,True,True,True,True,False,True,True,False,True,True],[False,False,True,True,False,False,False,False,True,True,False,False],[False,True,True,False,False,True,False,True,True,True,False,False],[True,True,True,False,True,False,False,True,False,True,False,True],[True,True,True,False,False,True,True,False,True,False,True,True],[False,True,False,True,False,False,False,True,True,True,False,True],[False,False,False,False,True,True,True,False,False,True,False,False],[False,True,False,True,False,True,False,False,False,False,True,True],[True,True,False,False,True,False,True,True,False,False,True,True],[True,True,True,True,False,False,True,False,True,True,False,True],[True,False,True,True,True,True,False,False,False,True,False,True],[True,False,False,False,False,False,True,True,True,True,False,True],[True,True,True,False,False,True,False,True,False,True,True,True],[False,True,True,True,False,True,False,False,True,True,False,True],[True,True,False,False,False,False,True,True,True,False,False,False]],[[False,False,True,False,True,False,True,False,False,False,True,False],[True,True,False,True,False,False,False,True,False,True,True,False],[True,False,False,True,True,False,True,True,False,False,True,True],[True,False,True,True,False,False,True,True,False,False,False,False],[False,True,False,False,False,True,True,True,False,True,False,True],[True,True,False,True,False,True,False,True,True,False,False,True],[False,True,False,False,True,True,True,False,False,True,False,False],[False,True,True,False,False,False,True,True,True,True,False,True],[False,True,False,True,True,False,False,True,False,True,False,True],[False,True,True,False,False,False,False,False,True,True,True,False],[True,False,True,True,False,False,False,False,True,True,False,False],[True,False,True,True,True,True,True,True,False,False,True,False],[False,True,True,False,True,False,False,False,False,True,True,False],[True,False,True,False,True,True,False,False,True,False,False,True],[True,True,False,False,True,False,False,False,True,True,False,False]],[[True,False,True,False,True,False,False,True,False,True,True,True],[False,False,False,False,False,False,True,True,True,True,True,False],[True,False,False,True,True,False,True,True,False,False,True,False],[True,True,True,True,True,False,True,True,False,True,True,False],[True,False,False,False,False,True,False,True,True,True,False,True],[True,False,False,False,False,True,False,True,False,True,True,True],[True,False,True,False,True,False,False,False,True,False,False,True],[False,False,False,True,True,True,False,True,True,False,True,True],[True,True,True,False,False,False,True,True,False,False,True,True],[True,False,True,False,False,True,True,False,True,True,False,True],[False,False,False,True,True,True,True,False,False,False,False,False],[False,False,True,False,False,True,True,True,True,False,True,True],[True,False,False,False,False,False,True,False,False,True,False,True],[False,True,False,False,True,False,False,True,False,False,True,True],[True,False,False,False,False,False,True,True,False,True,True,False]],[[True,True,True,False,False,True,True,True,False,True,True,True],[False,False,False,False,False,True,True,True,True,False,True,True],[False,False,False,False,False,True,True,True,False,False,True,True],[True,True,False,True,False,True,False,False,True,False,True,True],[True,False,False,False,False,True,True,False,False,True,True,False],[False,False,True,True,False,True,False,True,False,False,False,False],[True,False,True,True,False,False,False,True,False,True,True,True],[False,False,True,False,True,False,False,True,False,False,False,False],[True,False,True,True,False,True,True,False,True,False,True,True],[False,True,False,True,False,True,False,True,True,True,True,False],[False,False,False,False,False,False,True,True,True,False,False,True],[False,True,True,True,False,False,True,False,False,True,True,False],[True,True,True,False,True,True,True,True,True,True,True,True],[True,False,False,False,True,False,False,True,True,True,False,True],[False,True,False,False,True,True,False,False,True,False,False,False]],[[True,True,True,False,False,False,True,False,True,True,False,False],[True,False,True,False,False,True,False,False,True,False,False,False],[True,False,False,False,False,False,False,True,False,True,True,False],[False,False,False,True,True,True,True,False,True,False,True,True],[True,True,True,False,True,True,False,False,False,False,True,False],[True,True,False,True,True,True,True,True,False,False,False,True],[True,True,False,False,True,True,False,False,False,True,True,True],[True,True,True,True,False,False,True,True,False,True,False,True],[True,True,False,True,True,False,False,False,True,False,True,False],[True,True,False,True,False,True,False,True,True,False,False,True],[False,False,False,False,True,False,True,False,True,True,True,True],[True,False,True,False,False,False,False,False,True,True,True,False],[False,False,True,True,False,False,False,False,False,False,True,True],[False,False,False,False,False,True,True,True,True,False,False,False],[True,False,False,False,True,True,False,False,True,False,True,True]]], dtype = "bool")#candidate|2475|(8, 15, 12)|const|bool
bop_2476 = relay.logical_xor(call_2468.astype('int32'), relay.reshape(const_2475.astype('int32'), relay.shape_of(call_2468))) # shape=(8, 15, 12)
bop_2479 = relay.logical_xor(call_2469.astype('int32'), relay.reshape(const_2475.astype('int32'), relay.shape_of(call_2469))) # shape=(8, 15, 12)
func_1234_call = mod.get_global_var('func_1234')
func_1236_call = mutated_mod.get_global_var('func_1236')
call_2504 = func_1234_call()
call_2505 = func_1234_call()
output = relay.Tuple([bop_2476,call_2504,])
output2 = relay.Tuple([bop_2479,call_2505,])
func_2510 = relay.Function([], output)
mod['func_2510'] = func_2510
mod = relay.transform.InferType()(mod)
mutated_mod['func_2510'] = func_2510
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2510_call = mutated_mod.get_global_var('func_2510')
call_2511 = func_2510_call()
output = call_2511
func_2512 = relay.Function([], output)
mutated_mod['func_2512'] = func_2512
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1782_call = mod.get_global_var('func_1782')
func_1784_call = mutated_mod.get_global_var('func_1784')
call_2516 = relay.TupleGetItem(func_1782_call(), 1)
call_2517 = relay.TupleGetItem(func_1784_call(), 1)
func_248_call = mod.get_global_var('func_248')
func_249_call = mutated_mod.get_global_var('func_249')
call_2520 = func_248_call()
call_2521 = func_248_call()
output = relay.Tuple([call_2516,call_2520,])
output2 = relay.Tuple([call_2517,call_2521,])
func_2527 = relay.Function([], output)
mod['func_2527'] = func_2527
mod = relay.transform.InferType()(mod)
mutated_mod['func_2527'] = func_2527
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2527_call = mutated_mod.get_global_var('func_2527')
call_2528 = func_2527_call()
output = call_2528
func_2529 = relay.Function([], output)
mutated_mod['func_2529'] = func_2529
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1966_call = mod.get_global_var('func_1966')
func_1968_call = mutated_mod.get_global_var('func_1968')
call_2551 = relay.TupleGetItem(func_1966_call(), 0)
call_2552 = relay.TupleGetItem(func_1968_call(), 0)
output = call_2551
output2 = call_2552
func_2560 = relay.Function([], output)
mod['func_2560'] = func_2560
mod = relay.transform.InferType()(mod)
mutated_mod['func_2560'] = func_2560
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2560_call = mutated_mod.get_global_var('func_2560')
call_2561 = func_2560_call()
output = call_2561
func_2562 = relay.Function([], output)
mutated_mod['func_2562'] = func_2562
mutated_mod = relay.transform.InferType()(mutated_mod)
func_668_call = mod.get_global_var('func_668')
func_669_call = mutated_mod.get_global_var('func_669')
call_2599 = relay.TupleGetItem(func_668_call(), 1)
call_2600 = relay.TupleGetItem(func_669_call(), 1)
func_1585_call = mod.get_global_var('func_1585')
func_1588_call = mutated_mod.get_global_var('func_1588')
call_2623 = relay.TupleGetItem(func_1585_call(relay.reshape(call_2599.astype('float64'), [8, 15, 12])), 0)
call_2624 = relay.TupleGetItem(func_1588_call(relay.reshape(call_2599.astype('float64'), [8, 15, 12])), 0)
func_1684_call = mod.get_global_var('func_1684')
func_1685_call = mutated_mod.get_global_var('func_1685')
call_2635 = relay.TupleGetItem(func_1684_call(), 1)
call_2636 = relay.TupleGetItem(func_1685_call(), 1)
output = relay.Tuple([call_2599,call_2623,call_2635,])
output2 = relay.Tuple([call_2600,call_2624,call_2636,])
func_2642 = relay.Function([], output)
mod['func_2642'] = func_2642
mod = relay.transform.InferType()(mod)
mutated_mod['func_2642'] = func_2642
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2642_call = mutated_mod.get_global_var('func_2642')
call_2643 = func_2642_call()
output = call_2643
func_2644 = relay.Function([], output)
mutated_mod['func_2644'] = func_2644
mutated_mod = relay.transform.InferType()(mutated_mod)
func_978_call = mod.get_global_var('func_978')
func_979_call = mutated_mod.get_global_var('func_979')
call_2665 = relay.TupleGetItem(func_978_call(), 0)
call_2666 = relay.TupleGetItem(func_979_call(), 0)
func_1782_call = mod.get_global_var('func_1782')
func_1784_call = mutated_mod.get_global_var('func_1784')
call_2667 = relay.TupleGetItem(func_1782_call(), 0)
call_2668 = relay.TupleGetItem(func_1784_call(), 0)
output = relay.Tuple([call_2665,call_2667,])
output2 = relay.Tuple([call_2666,call_2668,])
func_2680 = relay.Function([], output)
mod['func_2680'] = func_2680
mod = relay.transform.InferType()(mod)
mutated_mod['func_2680'] = func_2680
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2680_call = mutated_mod.get_global_var('func_2680')
call_2681 = func_2680_call()
output = call_2681
func_2682 = relay.Function([], output)
mutated_mod['func_2682'] = func_2682
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1730_call = mod.get_global_var('func_1730')
func_1731_call = mutated_mod.get_global_var('func_1731')
call_2704 = relay.TupleGetItem(func_1730_call(), 0)
call_2705 = relay.TupleGetItem(func_1731_call(), 0)
output = relay.Tuple([call_2704,])
output2 = relay.Tuple([call_2705,])
func_2715 = relay.Function([], output)
mod['func_2715'] = func_2715
mod = relay.transform.InferType()(mod)
mutated_mod['func_2715'] = func_2715
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2715_call = mutated_mod.get_global_var('func_2715')
call_2716 = func_2715_call()
output = call_2716
func_2717 = relay.Function([], output)
mutated_mod['func_2717'] = func_2717
mutated_mod = relay.transform.InferType()(mutated_mod)
func_588_call = mod.get_global_var('func_588')
func_589_call = mutated_mod.get_global_var('func_589')
call_2735 = relay.TupleGetItem(func_588_call(), 0)
call_2736 = relay.TupleGetItem(func_589_call(), 0)
output = relay.Tuple([call_2735,])
output2 = relay.Tuple([call_2736,])
func_2745 = relay.Function([], output)
mod['func_2745'] = func_2745
mod = relay.transform.InferType()(mod)
mutated_mod['func_2745'] = func_2745
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2745_call = mutated_mod.get_global_var('func_2745')
call_2746 = func_2745_call()
output = call_2746
func_2747 = relay.Function([], output)
mutated_mod['func_2747'] = func_2747
mutated_mod = relay.transform.InferType()(mutated_mod)
func_643_call = mod.get_global_var('func_643')
func_645_call = mutated_mod.get_global_var('func_645')
call_2781 = func_643_call()
call_2782 = func_643_call()
func_2348_call = mod.get_global_var('func_2348')
func_2349_call = mutated_mod.get_global_var('func_2349')
call_2783 = relay.TupleGetItem(func_2348_call(), 0)
call_2784 = relay.TupleGetItem(func_2349_call(), 0)
func_2715_call = mod.get_global_var('func_2715')
func_2717_call = mutated_mod.get_global_var('func_2717')
call_2791 = relay.TupleGetItem(func_2715_call(), 0)
call_2792 = relay.TupleGetItem(func_2717_call(), 0)
output = relay.Tuple([call_2781,call_2783,call_2791,])
output2 = relay.Tuple([call_2782,call_2784,call_2792,])
func_2815 = relay.Function([], output)
mod['func_2815'] = func_2815
mod = relay.transform.InferType()(mod)
output = func_2815()
func_2816 = relay.Function([], output)
mutated_mod['func_2816'] = func_2816
mutated_mod = relay.transform.InferType()(mutated_mod)
var_2836 = relay.var("var_2836", dtype = "float32", shape = (6, 6, 15))#candidate|2836|(6, 6, 15)|var|float32
var_2837 = relay.var("var_2837", dtype = "float32", shape = (6, 6, 15))#candidate|2837|(6, 6, 15)|var|float32
bop_2838 = relay.mod(var_2836.astype('float32'), relay.reshape(var_2837.astype('float32'), relay.shape_of(var_2836))) # shape=(6, 6, 15)
output = bop_2838
output2 = bop_2838
func_2841 = relay.Function([var_2836,var_2837,], output)
mod['func_2841'] = func_2841
mod = relay.transform.InferType()(mod)
var_2842 = relay.var("var_2842", dtype = "float32", shape = (6, 6, 15))#candidate|2842|(6, 6, 15)|var|float32
var_2843 = relay.var("var_2843", dtype = "float32", shape = (6, 6, 15))#candidate|2843|(6, 6, 15)|var|float32
output = func_2841(var_2842,var_2843,)
func_2844 = relay.Function([var_2842,var_2843,], output)
mutated_mod['func_2844'] = func_2844
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2642_call = mod.get_global_var('func_2642')
func_2644_call = mutated_mod.get_global_var('func_2644')
call_2851 = relay.TupleGetItem(func_2642_call(), 2)
call_2852 = relay.TupleGetItem(func_2644_call(), 2)
func_941_call = mod.get_global_var('func_941')
func_943_call = mutated_mod.get_global_var('func_943')
call_2857 = relay.TupleGetItem(func_941_call(), 2)
call_2858 = relay.TupleGetItem(func_943_call(), 2)
func_941_call = mod.get_global_var('func_941')
func_943_call = mutated_mod.get_global_var('func_943')
call_2881 = relay.TupleGetItem(func_941_call(), 1)
call_2882 = relay.TupleGetItem(func_943_call(), 1)
output = relay.Tuple([call_2851,call_2857,call_2881,])
output2 = relay.Tuple([call_2852,call_2858,call_2882,])
func_2901 = relay.Function([], output)
mod['func_2901'] = func_2901
mod = relay.transform.InferType()(mod)
output = func_2901()
func_2902 = relay.Function([], output)
mutated_mod['func_2902'] = func_2902
mutated_mod = relay.transform.InferType()(mutated_mod)
func_109_call = mod.get_global_var('func_109')
func_111_call = mutated_mod.get_global_var('func_111')
call_2905 = relay.TupleGetItem(func_109_call(), 1)
call_2906 = relay.TupleGetItem(func_111_call(), 1)
func_2510_call = mod.get_global_var('func_2510')
func_2512_call = mutated_mod.get_global_var('func_2512')
call_2918 = relay.TupleGetItem(func_2510_call(), 1)
call_2919 = relay.TupleGetItem(func_2512_call(), 1)
func_141_call = mod.get_global_var('func_141')
func_143_call = mutated_mod.get_global_var('func_143')
call_2920 = relay.TupleGetItem(func_141_call(), 1)
call_2921 = relay.TupleGetItem(func_143_call(), 1)
func_141_call = mod.get_global_var('func_141')
func_143_call = mutated_mod.get_global_var('func_143')
call_2922 = relay.TupleGetItem(func_141_call(), 1)
call_2923 = relay.TupleGetItem(func_143_call(), 1)
output = relay.Tuple([call_2905,call_2918,call_2920,call_2922,])
output2 = relay.Tuple([call_2906,call_2919,call_2921,call_2923,])
func_2924 = relay.Function([], output)
mod['func_2924'] = func_2924
mod = relay.transform.InferType()(mod)
output = func_2924()
func_2925 = relay.Function([], output)
mutated_mod['func_2925'] = func_2925
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2680_call = mod.get_global_var('func_2680')
func_2682_call = mutated_mod.get_global_var('func_2682')
call_2929 = relay.TupleGetItem(func_2680_call(), 0)
call_2930 = relay.TupleGetItem(func_2682_call(), 0)
func_2040_call = mod.get_global_var('func_2040')
func_2041_call = mutated_mod.get_global_var('func_2041')
call_2951 = relay.TupleGetItem(func_2040_call(), 0)
call_2952 = relay.TupleGetItem(func_2041_call(), 0)
output = relay.Tuple([call_2929,call_2951,])
output2 = relay.Tuple([call_2930,call_2952,])
func_2953 = relay.Function([], output)
mod['func_2953'] = func_2953
mod = relay.transform.InferType()(mod)
mutated_mod['func_2953'] = func_2953
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2953_call = mutated_mod.get_global_var('func_2953')
call_2954 = func_2953_call()
output = call_2954
func_2955 = relay.Function([], output)
mutated_mod['func_2955'] = func_2955
mutated_mod = relay.transform.InferType()(mutated_mod)
func_814_call = mod.get_global_var('func_814')
func_816_call = mutated_mod.get_global_var('func_816')
call_2964 = func_814_call()
call_2965 = func_814_call()
output = relay.Tuple([call_2964,])
output2 = relay.Tuple([call_2965,])
func_2972 = relay.Function([], output)
mod['func_2972'] = func_2972
mod = relay.transform.InferType()(mod)
mutated_mod['func_2972'] = func_2972
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2972_call = mutated_mod.get_global_var('func_2972')
call_2973 = func_2972_call()
output = call_2973
func_2974 = relay.Function([], output)
mutated_mod['func_2974'] = func_2974
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1829_call = mod.get_global_var('func_1829')
func_1831_call = mutated_mod.get_global_var('func_1831')
call_3002 = relay.TupleGetItem(func_1829_call(), 0)
call_3003 = relay.TupleGetItem(func_1831_call(), 0)
var_3014 = relay.var("var_3014", dtype = "float32", shape = (8, 15, 12))#candidate|3014|(8, 15, 12)|var|float32
bop_3015 = relay.logical_or(call_3002.astype('bool'), relay.reshape(var_3014.astype('bool'), relay.shape_of(call_3002))) # shape=(8, 15, 12)
bop_3018 = relay.logical_or(call_3003.astype('bool'), relay.reshape(var_3014.astype('bool'), relay.shape_of(call_3003))) # shape=(8, 15, 12)
output = bop_3015
output2 = bop_3018
func_3031 = relay.Function([var_3014,], output)
mod['func_3031'] = func_3031
mod = relay.transform.InferType()(mod)
var_3032 = relay.var("var_3032", dtype = "float32", shape = (8, 15, 12))#candidate|3032|(8, 15, 12)|var|float32
output = func_3031(var_3032)
func_3033 = relay.Function([var_3032], output)
mutated_mod['func_3033'] = func_3033
mutated_mod = relay.transform.InferType()(mutated_mod)
var_3051 = relay.var("var_3051", dtype = "uint16", shape = (10, 3, 8))#candidate|3051|(10, 3, 8)|var|uint16
var_3052 = relay.var("var_3052", dtype = "uint16", shape = (10, 3, 8))#candidate|3052|(10, 3, 8)|var|uint16
bop_3053 = relay.minimum(var_3051.astype('uint16'), relay.reshape(var_3052.astype('uint16'), relay.shape_of(var_3051))) # shape=(10, 3, 8)
output = relay.Tuple([bop_3053,])
output2 = relay.Tuple([bop_3053,])
func_3059 = relay.Function([var_3051,var_3052,], output)
mod['func_3059'] = func_3059
mod = relay.transform.InferType()(mod)
var_3060 = relay.var("var_3060", dtype = "uint16", shape = (10, 3, 8))#candidate|3060|(10, 3, 8)|var|uint16
var_3061 = relay.var("var_3061", dtype = "uint16", shape = (10, 3, 8))#candidate|3061|(10, 3, 8)|var|uint16
output = func_3059(var_3060,var_3061,)
func_3062 = relay.Function([var_3060,var_3061,], output)
mutated_mod['func_3062'] = func_3062
mutated_mod = relay.transform.InferType()(mutated_mod)
var_3084 = relay.var("var_3084", dtype = "float32", shape = (12, 14, 13))#candidate|3084|(12, 14, 13)|var|float32
uop_3085 = relay.acos(var_3084.astype('float32')) # shape=(12, 14, 13)
output = relay.Tuple([uop_3085,])
output2 = relay.Tuple([uop_3085,])
func_3103 = relay.Function([var_3084,], output)
mod['func_3103'] = func_3103
mod = relay.transform.InferType()(mod)
var_3104 = relay.var("var_3104", dtype = "float32", shape = (12, 14, 13))#candidate|3104|(12, 14, 13)|var|float32
output = func_3103(var_3104)
func_3105 = relay.Function([var_3104], output)
mutated_mod['func_3105'] = func_3105
mutated_mod = relay.transform.InferType()(mutated_mod)
func_109_call = mod.get_global_var('func_109')
func_111_call = mutated_mod.get_global_var('func_111')
call_3120 = relay.TupleGetItem(func_109_call(), 0)
call_3121 = relay.TupleGetItem(func_111_call(), 0)
func_2924_call = mod.get_global_var('func_2924')
func_2925_call = mutated_mod.get_global_var('func_2925')
call_3133 = relay.TupleGetItem(func_2924_call(), 1)
call_3134 = relay.TupleGetItem(func_2925_call(), 1)
func_1585_call = mod.get_global_var('func_1585')
func_1588_call = mutated_mod.get_global_var('func_1588')
call_3140 = relay.TupleGetItem(func_1585_call(relay.reshape(call_3120.astype('float64'), [8, 15, 12])), 0)
call_3141 = relay.TupleGetItem(func_1588_call(relay.reshape(call_3120.astype('float64'), [8, 15, 12])), 0)
func_494_call = mod.get_global_var('func_494')
func_495_call = mutated_mod.get_global_var('func_495')
call_3145 = relay.TupleGetItem(func_494_call(), 2)
call_3146 = relay.TupleGetItem(func_495_call(), 2)
output = relay.Tuple([call_3120,call_3133,call_3140,call_3145,])
output2 = relay.Tuple([call_3121,call_3134,call_3141,call_3146,])
func_3157 = relay.Function([], output)
mod['func_3157'] = func_3157
mod = relay.transform.InferType()(mod)
output = func_3157()
func_3158 = relay.Function([], output)
mutated_mod['func_3158'] = func_3158
mutated_mod = relay.transform.InferType()(mutated_mod)
var_3165 = relay.var("var_3165", dtype = "int32", shape = (8, 12, 13))#candidate|3165|(8, 12, 13)|var|int32
const_3166 = relay.const([[[2,2,-1,-6,3,-9,-10,-9,-10,-10,-8,10,6],[2,-8,5,-8,8,7,-6,-2,7,3,-10,4,-7],[2,-8,9,-4,4,-7,-10,2,8,8,-10,-4,2],[-5,-6,3,-2,-8,-10,-10,-4,9,-9,-1,-8,1],[-7,2,-10,10,-1,-4,3,-8,4,7,2,-4,-6],[9,8,-1,-4,-6,2,-10,6,-8,4,2,-3,-8],[7,-5,10,7,6,3,-5,-6,-5,-9,-10,2,4],[-4,4,-1,7,-4,-2,5,2,-1,8,-1,-6,8],[9,2,5,-10,9,2,7,-2,-8,8,6,-9,9],[-9,-2,10,8,-7,-7,4,6,1,1,-4,-10,-2],[-4,-1,1,-9,-9,-6,-3,2,8,6,-3,9,10],[-4,6,7,5,4,-9,8,-3,7,-5,-6,6,-9]],[[8,-2,1,-9,1,10,3,1,8,10,-6,-7,-5],[-8,-4,-7,-4,1,4,-4,-5,1,10,-7,-3,-10],[-3,4,2,6,-6,8,-9,-9,8,-8,-8,8,10],[6,4,4,5,-3,7,-2,-2,7,1,6,9,-2],[-10,-7,-10,6,1,1,-8,-4,8,2,-10,3,4],[1,-3,2,-7,-6,4,-1,1,-2,10,8,5,8],[-8,7,10,5,2,9,-6,8,-6,-4,3,-8,5],[-1,-5,-6,-9,4,2,5,9,-3,8,5,-10,-2],[9,8,-7,6,9,6,-6,9,2,-10,-7,-7,6],[-10,-3,1,-4,5,9,5,3,6,-4,5,-1,8],[-2,3,-7,6,7,1,8,5,9,-5,-3,-2,-8],[-4,6,6,-9,5,4,-7,9,-10,-5,-4,7,5]],[[-10,7,-5,-6,-7,8,3,-3,7,6,5,2,-3],[2,-4,9,5,-4,1,3,4,5,7,4,5,9],[-8,-9,5,-2,-2,5,-1,10,-2,-1,6,-6,1],[6,-2,5,4,-2,7,10,-8,-9,-5,-2,-3,5],[-8,-2,-1,-4,-1,-2,5,6,1,-3,10,-10,10],[3,-7,-3,-9,6,3,-2,1,3,-1,9,-4,3],[-4,-10,4,-10,-2,-6,9,-1,-1,1,1,7,-1],[-4,-1,-9,-9,-1,-4,6,7,-9,3,3,4,-8],[-5,7,-3,3,7,9,2,-8,5,4,-5,10,-2],[-4,4,1,10,9,8,-7,7,8,-10,-8,10,6],[-3,-3,-9,1,-10,-7,2,-4,-10,-5,9,-6,10],[3,-4,-5,-7,-3,-5,2,-7,-8,4,9,-2,-9]],[[-8,9,9,-9,-3,1,1,8,8,-3,-8,-6,-2],[-6,-1,-5,-2,-8,10,-3,10,-5,-9,8,3,-2],[2,-3,5,9,6,5,-2,-6,-8,5,6,10,-1],[3,-10,6,5,6,-1,-3,9,-5,-1,-3,-4,9],[-6,-5,7,-2,-5,9,-8,-9,10,-7,10,-1,-3],[-9,1,-6,7,6,1,3,4,3,8,2,4,8],[1,6,-4,-2,-5,3,-2,-7,7,-7,1,5,-4],[7,8,3,-7,-5,7,7,8,5,-9,10,-10,6],[-1,-3,10,2,-7,9,-7,4,-4,6,-9,9,-3],[3,-10,-7,2,3,-9,-3,-1,10,-9,-1,-3,2],[-10,-1,1,-8,-5,-1,6,2,-10,-4,7,10,8],[6,10,5,-10,5,-2,-4,2,5,-9,5,-10,-10]],[[-5,-3,-2,6,1,-6,-8,4,-5,-7,6,-5,9],[-4,-3,7,7,-2,-3,4,8,4,-8,5,1,-10],[-6,-1,7,3,2,-7,-4,-9,-7,-10,3,-2,4],[-6,-1,-9,-1,9,8,7,6,10,-5,6,3,7],[-7,7,-8,6,9,-4,8,10,7,-7,-5,2,7],[10,-3,-4,-7,4,5,-3,-7,-7,-2,2,-8,4],[-7,1,-6,4,9,-2,10,-2,-5,-9,3,9,5],[-7,-2,6,1,5,-10,9,-6,6,4,-3,4,-3],[-10,-6,-6,9,6,-9,-3,-8,-3,2,5,-9,9],[-10,-4,2,5,-10,-3,-1,4,-7,6,2,2,3],[6,-8,2,8,1,9,-9,9,9,10,9,4,5],[-7,10,2,-9,-10,8,-6,-9,-7,7,-8,-5,10]],[[8,-9,10,9,5,-7,-4,7,3,3,10,10,-7],[4,9,-5,-9,-1,2,8,-3,-2,-2,-9,2,-8],[-3,2,9,1,1,8,-10,-7,-10,10,2,8,-10],[-10,10,-7,-8,-2,-4,-4,1,-2,-2,-3,-8,4],[4,-5,-9,-9,4,-2,4,9,9,2,7,10,7],[-10,6,-4,-5,7,5,-3,-1,-3,-8,-2,6,-6],[-9,2,10,10,7,-10,-4,-6,-4,-10,-3,9,-5],[-8,-6,6,1,-1,2,-8,-5,1,5,10,6,2],[3,9,-4,-9,-3,6,-2,4,-8,3,1,5,-1],[3,3,5,1,-3,2,5,-6,-9,10,6,-8,-3],[5,2,1,3,5,1,5,8,8,3,4,6,-9],[-2,-1,3,3,2,-5,9,5,3,-5,-7,6,-7]],[[-6,-6,3,-10,-3,10,2,-1,9,4,-9,3,-10],[5,2,6,-4,1,-10,-2,7,10,-6,-6,-8,-6],[-7,-1,9,3,-9,-9,9,10,4,4,-6,1,-3],[4,7,-2,-10,3,10,-3,3,10,4,3,2,7],[10,-7,-5,8,-2,8,1,3,5,10,8,4,-10],[7,-2,1,2,-7,-10,1,-5,-5,-8,10,4,5],[-10,3,-6,3,5,-2,-3,-8,-5,-6,-5,7,-1],[1,6,7,-5,-5,1,8,3,4,8,8,10,4],[-7,1,9,-3,-5,1,1,10,-4,-9,-6,-5,-7],[-10,9,2,-8,-5,-4,1,9,9,8,3,6,10],[-4,-8,8,-8,3,-4,-3,-9,-9,6,2,9,5],[-3,1,4,-10,8,2,6,8,-8,1,7,8,8]],[[-1,2,-7,8,10,-7,4,-6,-3,-4,4,-1,-1],[-5,-4,-1,-9,10,7,6,-7,6,10,10,6,-2],[9,-5,2,1,4,8,4,9,-5,9,-10,5,-8],[-3,10,5,9,-10,-4,6,3,-1,-3,6,-7,-9],[-9,7,9,2,-7,9,-8,8,7,10,-1,7,-1],[-1,-8,-5,5,6,4,-3,4,-7,-8,6,1,7],[9,6,-7,-10,9,3,9,-8,-7,6,-3,-6,1],[10,2,-4,1,2,-8,4,8,-1,-9,4,4,-9],[-4,-9,9,-7,-7,1,-2,8,5,-7,-3,10,9],[-2,-5,-9,-6,-3,10,-7,2,6,2,4,-10,-10],[9,-7,-5,1,-9,-8,1,-3,3,7,-1,1,-9],[-1,-6,-3,3,3,-8,6,7,4,7,-8,-9,-10]]], dtype = "int32")#candidate|3166|(8, 12, 13)|const|int32
bop_3167 = relay.left_shift(var_3165.astype('int32'), relay.reshape(const_3166.astype('int32'), relay.shape_of(var_3165))) # shape=(8, 12, 13)
output = relay.Tuple([bop_3167,])
output2 = relay.Tuple([bop_3167,])
func_3179 = relay.Function([var_3165,], output)
mod['func_3179'] = func_3179
mod = relay.transform.InferType()(mod)
var_3180 = relay.var("var_3180", dtype = "int32", shape = (8, 12, 13))#candidate|3180|(8, 12, 13)|var|int32
output = func_3179(var_3180)
func_3181 = relay.Function([var_3180], output)
mutated_mod['func_3181'] = func_3181
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1782_call = mod.get_global_var('func_1782')
func_1784_call = mutated_mod.get_global_var('func_1784')
call_3188 = relay.TupleGetItem(func_1782_call(), 1)
call_3189 = relay.TupleGetItem(func_1784_call(), 1)
func_2953_call = mod.get_global_var('func_2953')
func_2955_call = mutated_mod.get_global_var('func_2955')
call_3224 = relay.TupleGetItem(func_2953_call(), 1)
call_3225 = relay.TupleGetItem(func_2955_call(), 1)
uop_3266 = relay.sqrt(call_3224.astype('float32')) # shape=(8, 15, 12)
uop_3268 = relay.sqrt(call_3225.astype('float32')) # shape=(8, 15, 12)
func_311_call = mod.get_global_var('func_311')
func_313_call = mutated_mod.get_global_var('func_313')
call_3271 = relay.TupleGetItem(func_311_call(), 1)
call_3272 = relay.TupleGetItem(func_313_call(), 1)
func_2510_call = mod.get_global_var('func_2510')
func_2512_call = mutated_mod.get_global_var('func_2512')
call_3274 = relay.TupleGetItem(func_2510_call(), 1)
call_3275 = relay.TupleGetItem(func_2512_call(), 1)
func_2642_call = mod.get_global_var('func_2642')
func_2644_call = mutated_mod.get_global_var('func_2644')
call_3277 = relay.TupleGetItem(func_2642_call(), 2)
call_3278 = relay.TupleGetItem(func_2644_call(), 2)
output = relay.Tuple([call_3188,uop_3266,call_3271,call_3274,call_3277,])
output2 = relay.Tuple([call_3189,uop_3268,call_3272,call_3275,call_3278,])
func_3281 = relay.Function([], output)
mod['func_3281'] = func_3281
mod = relay.transform.InferType()(mod)
mutated_mod['func_3281'] = func_3281
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3281_call = mutated_mod.get_global_var('func_3281')
call_3282 = func_3281_call()
output = call_3282
func_3283 = relay.Function([], output)
mutated_mod['func_3283'] = func_3283
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2815_call = mod.get_global_var('func_2815')
func_2816_call = mutated_mod.get_global_var('func_2816')
call_3300 = relay.TupleGetItem(func_2815_call(), 0)
call_3301 = relay.TupleGetItem(func_2816_call(), 0)
output = call_3300
output2 = call_3301
func_3308 = relay.Function([], output)
mod['func_3308'] = func_3308
mod = relay.transform.InferType()(mod)
output = func_3308()
func_3309 = relay.Function([], output)
mutated_mod['func_3309'] = func_3309
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1526_call = mod.get_global_var('func_1526')
func_1528_call = mutated_mod.get_global_var('func_1528')
call_3319 = func_1526_call()
call_3320 = func_1526_call()
output = relay.Tuple([call_3319,])
output2 = relay.Tuple([call_3320,])
func_3338 = relay.Function([], output)
mod['func_3338'] = func_3338
mod = relay.transform.InferType()(mod)
output = func_3338()
func_3339 = relay.Function([], output)
mutated_mod['func_3339'] = func_3339
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2401_call = mod.get_global_var('func_2401')
func_2402_call = mutated_mod.get_global_var('func_2402')
call_3353 = func_2401_call()
call_3354 = func_2401_call()
func_2560_call = mod.get_global_var('func_2560')
func_2562_call = mutated_mod.get_global_var('func_2562')
call_3361 = func_2560_call()
call_3362 = func_2560_call()
output = relay.Tuple([call_3353,call_3361,])
output2 = relay.Tuple([call_3354,call_3362,])
func_3363 = relay.Function([], output)
mod['func_3363'] = func_3363
mod = relay.transform.InferType()(mod)
mutated_mod['func_3363'] = func_3363
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3363_call = mutated_mod.get_global_var('func_3363')
call_3364 = func_3363_call()
output = call_3364
func_3365 = relay.Function([], output)
mutated_mod['func_3365'] = func_3365
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2401_call = mod.get_global_var('func_2401')
func_2402_call = mutated_mod.get_global_var('func_2402')
call_3387 = func_2401_call()
call_3388 = func_2401_call()
var_3389 = relay.var("var_3389", dtype = "float64", shape = (8, 15, 12))#candidate|3389|(8, 15, 12)|var|float64
bop_3390 = relay.multiply(call_3387.astype('uint16'), relay.reshape(var_3389.astype('uint16'), relay.shape_of(call_3387))) # shape=(8, 15, 12)
bop_3393 = relay.multiply(call_3388.astype('uint16'), relay.reshape(var_3389.astype('uint16'), relay.shape_of(call_3388))) # shape=(8, 15, 12)
func_1829_call = mod.get_global_var('func_1829')
func_1831_call = mutated_mod.get_global_var('func_1831')
call_3395 = relay.TupleGetItem(func_1829_call(), 0)
call_3396 = relay.TupleGetItem(func_1831_call(), 0)
func_3031_call = mod.get_global_var('func_3031')
func_3033_call = mutated_mod.get_global_var('func_3033')
call_3401 = func_3031_call(relay.reshape(var_3389.astype('float32'), [8, 15, 12]))
call_3402 = func_3031_call(relay.reshape(var_3389.astype('float32'), [8, 15, 12]))
func_2972_call = mod.get_global_var('func_2972')
func_2974_call = mutated_mod.get_global_var('func_2974')
call_3404 = relay.TupleGetItem(func_2972_call(), 0)
call_3405 = relay.TupleGetItem(func_2974_call(), 0)
output = relay.Tuple([bop_3390,call_3395,call_3401,call_3404,])
output2 = relay.Tuple([bop_3393,call_3396,call_3402,call_3405,])
func_3406 = relay.Function([var_3389,], output)
mod['func_3406'] = func_3406
mod = relay.transform.InferType()(mod)
var_3407 = relay.var("var_3407", dtype = "float64", shape = (8, 15, 12))#candidate|3407|(8, 15, 12)|var|float64
output = func_3406(var_3407)
func_3408 = relay.Function([var_3407], output)
mutated_mod['func_3408'] = func_3408
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2953_call = mod.get_global_var('func_2953')
func_2955_call = mutated_mod.get_global_var('func_2955')
call_3416 = relay.TupleGetItem(func_2953_call(), 1)
call_3417 = relay.TupleGetItem(func_2955_call(), 1)
output = call_3416
output2 = call_3417
func_3418 = relay.Function([], output)
mod['func_3418'] = func_3418
mod = relay.transform.InferType()(mod)
output = func_3418()
func_3419 = relay.Function([], output)
mutated_mod['func_3419'] = func_3419
mutated_mod = relay.transform.InferType()(mutated_mod)
func_784_call = mod.get_global_var('func_784')
func_785_call = mutated_mod.get_global_var('func_785')
call_3468 = relay.TupleGetItem(func_784_call(), 1)
call_3469 = relay.TupleGetItem(func_785_call(), 1)
output = relay.Tuple([call_3468,])
output2 = relay.Tuple([call_3469,])
func_3485 = relay.Function([], output)
mod['func_3485'] = func_3485
mod = relay.transform.InferType()(mod)
mutated_mod['func_3485'] = func_3485
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3485_call = mutated_mod.get_global_var('func_3485')
call_3486 = func_3485_call()
output = call_3486
func_3487 = relay.Function([], output)
mutated_mod['func_3487'] = func_3487
mutated_mod = relay.transform.InferType()(mutated_mod)
const_3497 = relay.constdtype = "float64")#candidate|3497|(15, 7, 16)|const|float64
uop_3498 = relay.asinh(const_3497.astype('float64')) # shape=(15, 7, 16)
uop_3502 = relay.acosh(uop_3498.astype('float32')) # shape=(15, 7, 16)
func_3157_call = mod.get_global_var('func_3157')
func_3158_call = mutated_mod.get_global_var('func_3158')
call_3510 = relay.TupleGetItem(func_3157_call(), 1)
call_3511 = relay.TupleGetItem(func_3158_call(), 1)
func_17_call = mod.get_global_var('func_17')
func_19_call = mutated_mod.get_global_var('func_19')
call_3516 = func_17_call()
call_3517 = func_17_call()
output = relay.Tuple([uop_3502,call_3510,call_3516,])
output2 = relay.Tuple([uop_3502,call_3511,call_3517,])
func_3518 = relay.Function([], output)
mod['func_3518'] = func_3518
mod = relay.transform.InferType()(mod)
output = func_3518()
func_3519 = relay.Function([], output)
mutated_mod['func_3519'] = func_3519
mutated_mod = relay.transform.InferType()(mutated_mod)
var_3534 = relay.var("var_3534", dtype = "uint32", shape = ())#candidate|3534|()|var|uint32
var_3535 = relay.var("var_3535", dtype = "uint32", shape = (10, 5, 1))#candidate|3535|(10, 5, 1)|var|uint32
bop_3536 = relay.bitwise_xor(var_3534.astype('uint32'), var_3535.astype('uint32')) # shape=(10, 5, 1)
uop_3542 = relay.acos(bop_3536.astype('float32')) # shape=(10, 5, 1)
bop_3559 = relay.equal(uop_3542.astype('bool'), relay.reshape(var_3535.astype('bool'), relay.shape_of(uop_3542))) # shape=(10, 5, 1)
func_532_call = mod.get_global_var('func_532')
func_534_call = mutated_mod.get_global_var('func_534')
const_3563 = relay.const([-6.513066,-1.134755,7.327569,7.467755,-3.047049,9.543340,1.033179,-5.586940,8.339078,3.304105,7.579182,-4.205202,-6.249096,6.943232,3.558248,-4.565552,-9.789862,6.480118,6.616155,6.296019,-0.624489,-9.879486,6.785568,-7.970704,-0.615744,-4.454485,-8.149620,9.534373,-2.321379,2.422566,2.233024,4.037719,-1.703277,1.798992,0.006909,3.112687,3.758541,5.532838,1.974455,5.805098,1.391089,8.329514,-8.883017,3.364281,-8.099412,4.455515,-8.742513,1.884706,0.088160,-6.520359,9.175444,-3.139939,-3.721582,0.351563,7.248366,2.574274,5.337155,1.140278,-6.318882,-8.444614,9.021967,-3.834327,9.524139,-7.894351,2.484026,2.617173,-0.557231,6.861334,-8.136273,-6.438834,-9.772278,-9.374317,6.387981,9.795059,-6.371234,-6.148409,1.140356,2.685727,-2.356716,2.523692,4.700454,-6.223902,-3.149640,-2.938234,8.039580,8.008199,-2.751988,1.104992,6.374802,2.109209,-4.618267,4.936183,5.850832,-0.016431,-1.062075,2.927472,7.948072,3.986152,2.644325,-7.993514,2.044577,-6.673889,4.291534,9.472811,6.493589,8.959311,-4.352228,1.821458,5.028210,5.373652,-5.828257,8.745689,-2.655171,4.559424,-2.750298,-7.846672,2.741797,-5.748623,-9.325025,7.503203,-8.770968,-5.661343,6.034268,-6.492117,1.240043,-4.742090,-0.930926,7.634907,0.336403,2.024027,-9.198650,5.880263,-7.526900,5.203284,7.865867,-5.626474,0.370369,-4.492336,6.648345,1.476225,-5.507601,-2.616505,-7.883678,7.148837,-5.501307,7.420223,4.201944,2.162584,-6.744971,-0.628651,3.137973,-9.349863,8.495334,-6.265461,5.174746,-0.267214,6.029583,0.825889,-3.451455,5.037312,6.306726,-2.148866,7.199125,-9.652966,-6.099304,3.166780,-5.400094,-2.913156,-3.345791,-6.870527,-8.250334,1.982317,3.489824,9.469817,-0.037313,-1.311495,-7.842299,-9.837298,-3.642352,7.992517,5.496306,7.697813,-8.681688,-8.548438,-6.834329,1.783935,4.139444,-3.178059,2.829646,-8.042325,0.310645,9.483369,4.182046,0.336730,-7.491059,-8.937527,-1.045096,0.306541,0.375482,1.222118,-7.338834,2.882057,-8.545560,-6.008833,5.526053,8.763506,-9.263682,-1.571117,-2.013794,1.539451,1.625316,-7.812650,9.593302,-3.975913,8.144817,-7.432811,-4.473384,3.396636,-0.730570,-2.866970,1.885165,-7.811782,-8.377402,6.491432,-3.938990,-7.484579,7.118936,5.434474,-4.012037,2.266054,-0.673078,-9.796617,1.241155,7.556942,6.247545,-1.270911,8.424062,-0.938173,2.304671,-0.173000,0.195068,6.310314,8.468580,6.207414,9.238337,-7.126008,8.060639,-3.242917,-8.195127,-4.751552,-3.607490,-4.652868,1.635313,2.855110,3.867491,-6.899201,-5.568556,3.763259,0.672588,-0.142911,2.774524,-9.837113,0.500922,-9.219087,-4.292600,2.567919,1.616101,-0.557446,0.356127,3.911311,8.688849,2.821195,-4.979762,5.008577,1.251875,-9.881729,-6.021083,7.865721,7.853040,-8.632192,-7.822379,-0.208071,1.413644,-2.862508,8.902388,5.344083,-1.857987,-7.850300,4.612405,-3.742938,7.234089,-1.476815,7.043212,4.014682,4.301199,-0.993927,-9.116367,8.664157,0.864191,-7.514757,4.070393,2.737299,-4.413992,-7.183780,0.524933,-4.383306,8.264569,9.642754,4.155100,-1.620826,-7.063215,-6.508433,3.037370,-6.863231,-4.756528,3.082932,1.813475,7.866166,9.934487,5.044317,-1.959265,5.504964,-2.408782,-7.825501,-9.809900,-1.564368,5.412534,2.941960,-7.024736,9.942818,-6.068173,7.031194,5.755319,1.950495,-1.849049,7.020609,-3.014792,7.827029,7.104947,-7.595741,-6.017415,-4.379361,-0.610651,-2.249868,-6.486297,8.425894,5.999641,-1.782707,2.057773,6.284818,-0.518903,-0.522366,1.151900,-0.481209,1.125862,-4.518498,0.103917,9.237484,-6.775433,1.527812,6.848590,1.054492,6.847664,8.874732,5.847428,-6.128431,0.138896,6.108783,-2.528370,-1.725485,-5.521461,6.442160,1.456412,7.785073,2.846523,-5.088605,8.383214,0.053507,8.246909,8.735505,6.984352,0.392862,-5.280396,3.373709,-5.177973,-0.487820,9.062173,-2.053856,-1.134872,-0.599831,-7.837752,-5.616310,0.496567,-3.003373,-4.738468,6.138940,-8.257947,4.402148,2.851850,5.600205,-3.781442,9.825167,-5.537070,-7.963751,0.516072,-7.297834,-7.433463,-7.581274,-6.661449,-8.650849,-6.578163,-2.545664,-7.876625,-2.353895,-0.548368,4.108572,5.658680,-5.977683,3.373147,2.183800,-9.521439,-3.572397,-3.750875,-8.112510,-7.346862,-2.248196,-1.385326,3.711543,-7.317920,9.431407,6.497256,9.753777,2.394752,-5.414950,-9.845184,4.923620,2.109603,7.615489,-9.480514,-7.558207,3.611202,-8.759753,0.160743,-5.815601,4.992835,3.510442,2.243517,1.279839,-5.361187,0.546752,8.441565,1.968085,-4.396914,2.761979,-3.180230,1.663378,-6.603721,-5.296223,4.106772,9.618687,-1.068098,-9.026468,5.754122,-4.278515,0.405769,-1.840804,-1.679489,-0.458779,5.956653,-2.222864,9.339145,4.790839,6.175966,-1.067473,-4.448083,4.428098,-5.668267,-2.128125,1.018076,4.397902,-0.788564,-5.505845,-9.576779,-9.483154,-0.824460,3.351015,-4.477945,3.579549,-7.402949,8.250708,2.386869,4.130720,-8.857499,5.058022,-9.985199,-2.064674,-7.958907,-9.202496,1.901849,-4.837923,5.248508,-8.199482,-9.503704,7.592036,4.438478,-0.551222,5.736663,-8.768035,3.319548,2.599956,-5.147099,8.300760,-8.127795,7.774571,-9.351431,5.522274,-7.441451,5.518103,7.332895,3.439270,0.147884,3.689395,-8.784355,-1.097773,8.496718,9.317001,-3.341784,9.755013,-2.183472,-6.024705,-5.320970,-8.334255,6.669023,-2.536198,-2.327763,7.680531,7.541356,-8.484546,-6.246833,2.257682,3.903400,-2.156428,7.304584,-3.386174,-7.064018,-5.340043,9.510779,0.705767,9.180793,4.209330,-4.261064,6.977120,-9.736962,0.585962,9.977488,-7.825494,3.536217,-5.255878,-5.525687,3.011366,5.348625,-8.378290,-8.011554,-2.441164,8.754907,-1.741680,-4.105962,5.576085,2.602657,-3.079862,1.196947,4.381257,0.651677,-4.152950,8.478075,-7.923103,6.392953,9.771793,8.745949,0.977272,8.318344,-7.578420,-2.899947,-6.119734,-5.582772,-1.122127,-1.741818,-5.700465,8.200193,2.205317,-5.251377,1.804994,-9.288164,-9.537867,-6.697700,-9.007953,0.034845,-9.353245,-8.925702,6.734425,8.596991,7.842287,-0.311577,5.138483,-7.812718,-1.779778,-8.126402,-5.224701,-2.308435,-9.006172,2.573389,-7.158782,2.456926,-0.924008,-7.389852,-6.067967,5.030826,1.512617,-2.548828,0.067863,4.868458,8.724608,3.658241,2.924098,-8.716745,2.411706,-4.207584,-1.950906,-5.626517,-0.596519,1.192221,-7.754674,-9.214514,-9.992753,-8.141779,5.296936,6.832762,1.940172,-4.820279,-1.031280,4.854267,-6.178101,6.074347,7.294722,6.721226,-9.929243,2.637230,8.970887,-1.877588,-8.967445,4.107669,9.339138,-3.205968,-8.603129,4.389989,-9.627065,-7.698979,-5.890989,0.911459,9.678462,2.067403,0.747586,-3.164551,-3.140219,-5.415348,4.522732,-3.800469,-1.906833,7.302717,-3.259870,4.091059,2.362387,5.482160,-6.326925,-9.122182,-3.616906,1.318901,-5.675857,-2.639438,4.538085,3.387941,6.274792,3.592006,-9.024881,-3.828497,6.891640,1.477929,8.304370,-9.755630,-0.560446,7.024042,0.237963,-3.454170,-5.755463,-9.457705,-9.719148,-1.262794,-6.698428,7.497067,-0.886107,8.140989,-7.522616,5.794617,6.474202,7.836902,-2.328756,-5.294032,7.006568,6.221904,-1.898983,8.161474,5.835945,-4.500719,2.427994,-2.836435,6.703610,6.118374,0.183794,1.826806,3.136171,-7.391682,3.971623,0.336126,3.811301,-0.957787,-3.828283,-7.147468,6.532678,7.897021,7.734954,-1.961743,1.712857,-4.831389,-0.086246,-8.226333,-6.219901,3.355785,0.643452,-5.874271,8.911427,-6.540588,4.166230,3.074117,4.527858,6.008252,8.456214,2.360747,-2.776815,2.536160,3.477930,-8.150864,-2.732162,9.662971,-5.192920,-2.667655,-3.634788,7.335226,-5.603362,-1.552533,-5.460358,-1.304104,-0.097167,-4.150019,6.609536,7.320417,2.886051,-6.732680,-4.655893,-0.095400,5.129121,-9.786382,6.256165,1.624726,0.926067,-6.674729,-9.117056,1.134616,-0.018786,6.110857,9.681784,4.013186,-3.011873,-5.515761,1.673924,4.490846,4.218832,6.797852,7.442975,-7.063678,-1.991889,-6.396058,5.347638,4.428326,-8.462732,9.278661,-8.818202,-8.401246,-1.930788,9.964607,4.033194,6.644152,-1.540142,-9.143598,9.928879,-6.468832,9.500233,-1.519408,-2.078503,-9.015609,-9.405680,-3.430658,-0.420574,0.471008,5.634009,1.194150,0.198901,-4.145941,2.858443,-6.505040,4.929429,-8.046690,2.432585,-7.838566,1.587234,-7.266283,-7.412356,-9.817309,-8.148870,-6.502113,-2.064585,-4.880224,-2.831510,6.535162,4.398138,-9.102010,8.716422,3.740669,-8.823125,-4.845706,2.647547,9.046552,-2.514536,-6.600288,-5.648232,-3.712772,-4.019632,-6.752204,8.640062,-9.041915,3.593507,-4.716817,-9.631525,-1.129408,1.317827,-7.389550,8.299695,-9.441750,1.918057,-7.905111,5.407612,-8.779491,-7.479815,-8.267029,-9.337098,-4.798636,-8.086011,-1.015604,6.790077,2.412507,-0.874284,4.913543,0.312463,9.379423,-8.439727,-6.092365,-3.917727,-9.894628,-7.674643,7.847142,4.829729,-9.738375,-5.055685,-8.509250,7.290238,-6.758705,5.535879,-8.567190,6.959889,2.544953,6.760021,-0.066016,-6.153145,-5.954787,6.708286,-8.451673,-8.702935,-4.545496,4.609132,-3.144496,-6.279102,-2.560828,-8.919686,8.957548,-3.272264,1.477398,-0.110976,-0.844311,-8.565002,5.263383,-9.906682,5.687941,2.581041,1.266866,-2.676126,4.632316,-6.871919,4.326963,-9.058291,-8.073096,0.414806,6.984825,0.214376,2.083741,-2.377006,-1.116866,-2.427081,2.744620,2.962204,-9.513560,-8.121069,4.394564,-4.709260,8.042503,2.482420,9.876788,-3.343273,-9.578350,-3.610252,9.457031,5.382872,4.615040,1.251786,9.547659,5.416448,0.869980,6.668807,-3.108580,5.590870,9.317339,-1.614566,6.506695,8.491103,-1.837535,4.140153,-3.109635,6.554104,-1.874191,0.637381,-6.850510,-6.911605,-8.776648,-3.083981,3.841455,3.613911,-3.640279,4.780882,-2.979083,9.860267,4.523198,-5.961017,8.783256,1.046896,9.549880,8.775400,-5.015709,8.787705,-4.179668,4.196573,7.192715,-4.067315,-2.242486,7.784852,-0.117737,-6.216145,-7.951735,1.935883,-6.867256,0.402006,0.441387,5.864076,-6.304794,7.702165,-1.708910,-5.372205,7.885629,1.666804,5.335500,-2.175502,-2.950757,0.416994,0.249233,-8.086844,3.652844,1.517806,5.860955,-4.280831,9.929858,-8.906649,0.991966,9.977965,8.969842,-2.615994,-6.555206,-6.101849,5.889841,8.080854,-9.073057,0.251519,4.379037,6.303632,9.206213,6.163314,7.552816,5.034043,-8.296503,4.175621,3.328915,-0.788892,-3.470860,-1.897073,-8.225623,-9.462706,-2.152925,5.367677,4.277679,-5.026079,-8.203000,4.939829,9.996126,-8.587773,-8.473412,1.184552,-8.830386,4.424131,-2.215653,-7.323924,5.443680,5.732945,-7.157406,5.158032,7.932281,3.109961,8.700399,3.546817,9.414813,6.346837,2.074641,0.936979,-3.474708,-4.039307,8.836947,-1.537746,-5.324918,-1.355423,-4.732843,-2.506493,4.580770,8.513615,-6.995458,0.132795,1.632718,0.135922,0.967376,-4.826623,4.285389,-8.204612,6.743781,5.897806,-5.472312,0.637918,-6.578007,3.999110,9.741858,-7.572552,0.199029,5.239988,-8.240594,-5.285938,3.198427,-2.593800,4.668022,3.259369,3.278569,-0.224711,-9.172024,-2.219742,4.726354,-3.026172,-4.603680,9.789916,-4.139877,-9.273515,5.527526,-2.569285,5.775548,-3.736341,4.251567,-8.017307,-0.607552,4.695003,-7.033879,4.525623,6.128768,-4.677457,5.644584,4.874772,-1.306514,-1.520958,-7.998230,-3.030485,5.308462,3.410932,5.532446,2.371197,-0.418522,-7.303992,-1.253859,4.128929,-6.369272,-2.645677,2.487652,2.506698,3.077880,1.835690,7.862410,-1.914320,-7.467756,6.653241,9.329691,-8.728233,7.637019,-1.274372,-0.045983,3.666738,1.134643,-5.829452,-7.168652,-0.600953,-2.035457,4.507102,2.866610,-2.525009,2.596072,0.234854,8.267407,5.807548,7.797966,-8.881910,2.887046,-0.098062,4.218098,6.206953,-8.519825,-9.742459,4.565998,-2.518403,5.005152,3.276704,0.325745,3.654494,-5.087202,9.635378,-1.195842,9.577127,-2.057772,-2.975842,8.708990,0.236048,5.019092,-3.378831,5.079304,5.054239,8.511334,-7.233733,-0.306451,9.812577,-1.092050,-3.877782,9.463310,-5.614769,5.405427,5.926425,-8.200640,-2.794085,-2.916100,-0.448473,-2.320888,-6.957544,-4.824036,-5.890604,-2.961873,8.478289,-7.615558,5.810796,-6.262967,2.102652,-9.437486,-2.189180,4.362762,-0.339713,0.214228,-7.895965,2.928226,8.159532,4.307002,-4.148182,-8.907276,-9.923789,5.066571,-6.138479,2.771790,8.488049,-9.258594,-3.401534,-1.151871,-0.984934,5.280395,6.304499,5.472654,4.192816,-9.219524,4.418334,2.817379,-8.864113,8.326452,-6.309829,-6.441543,4.725291,2.693139,5.766915,-1.636305,0.585799,-3.526844,-1.817101,-1.797133,-1.937353,2.957678,7.968011,5.487592,6.252256,-1.115727,4.870416,9.109581,1.899334,-1.920550,2.564840,-4.127846,-2.025188,9.388368,5.718919,-9.207490,3.597901,5.737092,1.862329,-1.679472,7.947307,-3.003294,8.236402,0.953042,2.830458,4.666335,6.194141,9.461463,-8.003712,-5.400358,-8.516584,8.266853,7.203731,-7.952158,4.166426,5.163273,8.387929,6.815394,-9.428075,-3.390519,-1.471437,-0.565684,4.921814,-7.168245,-6.106442,0.183303,1.925873,-2.402078,4.782694,8.282152,7.586674,-0.647429,3.437143,-7.875678,-2.519218,4.311300,-9.776693,-9.514777,1.605614,-4.084393,-4.366250,2.368038,-9.244486,-5.218439,-9.759265,9.676899,-2.092235,3.112767,3.958570,2.974512,-6.238823,5.196315,-4.824605,-3.577734,-0.837029,-7.786739,1.512350,-2.029449,0.157881,0.792129,0.833124,-7.728547,-8.430111,5.325428,4.486783,-0.779041,0.273783,-5.557683,3.275201,0.250113,8.743938,-8.496089,2.114411,2.275650,8.864563,3.940242,5.751367,7.237777,7.199041,3.222540,0.684834,-6.176262,5.277322,0.199049,2.703583,-1.478833,-5.605915,4.473827,-9.688345,-5.132775,-1.066867,-2.638897,7.454015,0.608368,-6.561638,4.733527,-5.747506,-0.470197,5.430471,4.073277,-1.338868,1.974123,-7.710793,7.083275,7.094962,0.811797,7.979550,7.509950,0.363639,5.448729,-4.058338,8.962220,-7.687622,-7.926068,7.599242,-6.670821,-7.690243,-6.590224,9.895171,7.156659,-3.588007,-9.181881,-1.603865,-5.588664,-2.351591,8.295002,7.068143,-0.204877,-2.514938,4.854160,-2.871509,6.571838,9.912386,3.346740,9.178117,-9.680583,2.097640,2.410977,-0.318857,7.295731,0.491120,2.486986,-0.675926,-1.354127,9.031497,-7.932084,-7.290827,-1.420213,-1.877813,-0.861519,-0.009323,1.177308,2.637580,0.836654,-3.122790,-0.144027,4.635851,-2.109012,8.838872,-6.992621,-5.011406,-3.871273,-8.831385,7.514254,8.815789,5.771432,-7.945079,7.348395,9.620030,6.882859,-3.327441,-7.223258,-5.393584,7.874174,0.977271], dtype = "float64")#candidate|3563|(1440,)|const|float64
call_3562 = relay.TupleGetItem(func_532_call(relay.reshape(const_3563.astype('float64'), [8, 15, 12])), 0)
call_3564 = relay.TupleGetItem(func_534_call(relay.reshape(const_3563.astype('float64'), [8, 15, 12])), 0)
output = relay.Tuple([bop_3559,call_3562,const_3563,])
output2 = relay.Tuple([bop_3559,call_3564,const_3563,])
func_3568 = relay.Function([var_3534,var_3535,], output)
mod['func_3568'] = func_3568
mod = relay.transform.InferType()(mod)
var_3569 = relay.var("var_3569", dtype = "uint32", shape = ())#candidate|3569|()|var|uint32
var_3570 = relay.var("var_3570", dtype = "uint32", shape = (10, 5, 1))#candidate|3570|(10, 5, 1)|var|uint32
output = func_3568(var_3569,var_3570,)
func_3571 = relay.Function([var_3569,var_3570,], output)
mutated_mod['func_3571'] = func_3571
mutated_mod = relay.transform.InferType()(mutated_mod)
var_3594 = relay.var("var_3594", dtype = "float32", shape = (9, 2, 9))#candidate|3594|(9, 2, 9)|var|float32
uop_3595 = relay.cosh(var_3594.astype('float32')) # shape=(9, 2, 9)
output = relay.Tuple([uop_3595,])
output2 = relay.Tuple([uop_3595,])
func_3603 = relay.Function([var_3594,], output)
mod['func_3603'] = func_3603
mod = relay.transform.InferType()(mod)
var_3604 = relay.var("var_3604", dtype = "float32", shape = (9, 2, 9))#candidate|3604|(9, 2, 9)|var|float32
output = func_3603(var_3604)
func_3605 = relay.Function([var_3604], output)
mutated_mod['func_3605'] = func_3605
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1526_call = mod.get_global_var('func_1526')
func_1528_call = mutated_mod.get_global_var('func_1528')
call_3639 = func_1526_call()
call_3640 = func_1526_call()
func_2527_call = mod.get_global_var('func_2527')
func_2529_call = mutated_mod.get_global_var('func_2529')
call_3642 = relay.TupleGetItem(func_2527_call(), 1)
call_3643 = relay.TupleGetItem(func_2529_call(), 1)
func_2642_call = mod.get_global_var('func_2642')
func_2644_call = mutated_mod.get_global_var('func_2644')
call_3646 = relay.TupleGetItem(func_2642_call(), 0)
call_3647 = relay.TupleGetItem(func_2644_call(), 0)
func_3485_call = mod.get_global_var('func_3485')
func_3487_call = mutated_mod.get_global_var('func_3487')
call_3655 = relay.TupleGetItem(func_3485_call(), 0)
call_3656 = relay.TupleGetItem(func_3487_call(), 0)
output = relay.Tuple([call_3639,call_3642,call_3646,call_3655,])
output2 = relay.Tuple([call_3640,call_3643,call_3647,call_3656,])
func_3657 = relay.Function([], output)
mod['func_3657'] = func_3657
mod = relay.transform.InferType()(mod)
mutated_mod['func_3657'] = func_3657
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3657_call = mutated_mod.get_global_var('func_3657')
call_3658 = func_3657_call()
output = call_3658
func_3659 = relay.Function([], output)
mutated_mod['func_3659'] = func_3659
mutated_mod = relay.transform.InferType()(mutated_mod)
const_3665 = relay.const([[[9,10,7,9,9,8,-6,-1,-4]],[[-10,-6,2,10,-6,5,-2,7,10]],[[-9,5,-4,9,1,9,-5,-2,9]],[[-4,-3,-10,6,-5,-6,-7,5,-5]],[[5,1,4,-5,8,1,1,-8,8]],[[5,10,8,-4,-10,-9,7,9,-1]],[[-7,1,4,-3,-7,-1,9,-8,-5]],[[-2,1,7,-7,5,-2,8,-3,-5]],[[10,1,-10,-2,-8,7,-9,2,3]],[[2,-6,5,-3,7,3,-4,1,10]],[[-10,10,7,1,6,-7,-7,-10,-8]],[[-10,9,1,-9,-5,-2,2,9,10]],[[-9,1,-8,-8,-9,-5,5,-2,-3]],[[6,-7,4,6,-1,-10,-1,4,6]],[[-2,5,3,10,5,2,-4,2,7]]], dtype = "uint16")#candidate|3665|(15, 1, 9)|const|uint16
var_3666 = relay.var("var_3666", dtype = "uint16", shape = (15, 9, 9))#candidate|3666|(15, 9, 9)|var|uint16
bop_3667 = relay.less(const_3665.astype('bool'), var_3666.astype('bool')) # shape=(15, 9, 9)
uop_3690 = relay.log10(var_3666.astype('float32')) # shape=(15, 9, 9)
output = relay.Tuple([bop_3667,uop_3690,])
output2 = relay.Tuple([bop_3667,uop_3690,])
func_3692 = relay.Function([var_3666,], output)
mod['func_3692'] = func_3692
mod = relay.transform.InferType()(mod)
mutated_mod['func_3692'] = func_3692
mutated_mod = relay.transform.InferType()(mutated_mod)
var_3693 = relay.var("var_3693", dtype = "uint16", shape = (15, 9, 9))#candidate|3693|(15, 9, 9)|var|uint16
func_3692_call = mutated_mod.get_global_var('func_3692')
call_3694 = func_3692_call(var_3693)
output = call_3694
func_3695 = relay.Function([var_3693], output)
mutated_mod['func_3695'] = func_3695
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2715_call = mod.get_global_var('func_2715')
func_2717_call = mutated_mod.get_global_var('func_2717')
call_3710 = relay.TupleGetItem(func_2715_call(), 0)
call_3711 = relay.TupleGetItem(func_2717_call(), 0)
func_141_call = mod.get_global_var('func_141')
func_143_call = mutated_mod.get_global_var('func_143')
call_3718 = relay.TupleGetItem(func_141_call(), 1)
call_3719 = relay.TupleGetItem(func_143_call(), 1)
func_2177_call = mod.get_global_var('func_2177')
func_2181_call = mutated_mod.get_global_var('func_2181')
var_3768 = relay.var("var_3768", dtype = "uint8", shape = (25, 1))#candidate|3768|(25, 1)|var|uint8
var_3769 = relay.var("var_3769", dtype = "uint8", shape = (275,))#candidate|3769|(275,)|var|uint8
call_3767 = relay.TupleGetItem(func_2177_call(relay.reshape(var_3768.astype('uint8'), [5, 5, 1]), relay.reshape(var_3769.astype('uint8'), [5, 5, 11]), ), 0)
call_3770 = relay.TupleGetItem(func_2181_call(relay.reshape(var_3768.astype('uint8'), [5, 5, 1]), relay.reshape(var_3769.astype('uint8'), [5, 5, 11]), ), 0)
bop_3786 = relay.mod(var_3769.astype('float32'), var_3768.astype('float32')) # shape=(25, 275)
bop_3795 = relay.logical_xor(bop_3786.astype('int16'), var_3768.astype('int16')) # shape=(25, 275)
uop_3807 = relay.atan(var_3768.astype('float32')) # shape=(25, 1)
uop_3809 = relay.asin(uop_3807.astype('float32')) # shape=(25, 1)
var_3812 = relay.var("var_3812", dtype = "float32", shape = (25, 10))#candidate|3812|(25, 10)|var|float32
bop_3813 = relay.greater(uop_3809.astype('bool'), var_3812.astype('bool')) # shape=(25, 10)
var_3816 = relay.var("var_3816", dtype = "bool", shape = (25, 10))#candidate|3816|(25, 10)|var|bool
bop_3817 = relay.less_equal(bop_3813.astype('bool'), relay.reshape(var_3816.astype('bool'), relay.shape_of(bop_3813))) # shape=(25, 10)
bop_3820 = relay.mod(bop_3813.astype('float32'), uop_3807.astype('float32')) # shape=(25, 10)
bop_3828 = relay.bitwise_or(uop_3807.astype('uint64'), bop_3817.astype('uint64')) # shape=(25, 10)
output = relay.Tuple([call_3710,call_3718,call_3767,bop_3795,bop_3820,bop_3828,])
output2 = relay.Tuple([call_3711,call_3719,call_3770,bop_3795,bop_3820,bop_3828,])
func_3844 = relay.Function([var_3768,var_3769,var_3812,var_3816,], output)
mod['func_3844'] = func_3844
mod = relay.transform.InferType()(mod)
mutated_mod['func_3844'] = func_3844
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3844_call = mutated_mod.get_global_var('func_3844')
var_3846 = relay.var("var_3846", dtype = "uint8", shape = (25, 1))#candidate|3846|(25, 1)|var|uint8
var_3847 = relay.var("var_3847", dtype = "uint8", shape = (275,))#candidate|3847|(275,)|var|uint8
var_3848 = relay.var("var_3848", dtype = "float32", shape = (25, 10))#candidate|3848|(25, 10)|var|float32
var_3849 = relay.var("var_3849", dtype = "bool", shape = (25, 10))#candidate|3849|(25, 10)|var|bool
call_3845 = func_3844_call(var_3846,var_3847,var_3848,var_3849,)
output = call_3845
func_3850 = relay.Function([var_3846,var_3847,var_3848,var_3849,], output)
mutated_mod['func_3850'] = func_3850
mutated_mod = relay.transform.InferType()(mutated_mod)
const_3863 = relay.const(-9, dtype = "int16")#candidate|3863|()|const|int16
var_3864 = relay.var("var_3864", dtype = "int16", shape = (5, 14, 1))#candidate|3864|(5, 14, 1)|var|int16
bop_3865 = relay.logical_xor(const_3863.astype('int16'), var_3864.astype('int16')) # shape=(5, 14, 1)
func_2745_call = mod.get_global_var('func_2745')
func_2747_call = mutated_mod.get_global_var('func_2747')
call_3868 = relay.TupleGetItem(func_2745_call(), 0)
call_3869 = relay.TupleGetItem(func_2747_call(), 0)
output = relay.Tuple([bop_3865,call_3868,])
output2 = relay.Tuple([bop_3865,call_3869,])
func_3873 = relay.Function([var_3864,], output)
mod['func_3873'] = func_3873
mod = relay.transform.InferType()(mod)
mutated_mod['func_3873'] = func_3873
mutated_mod = relay.transform.InferType()(mutated_mod)
var_3874 = relay.var("var_3874", dtype = "int16", shape = (5, 14, 1))#candidate|3874|(5, 14, 1)|var|int16
func_3873_call = mutated_mod.get_global_var('func_3873')
call_3875 = func_3873_call(var_3874)
output = call_3875
func_3876 = relay.Function([var_3874], output)
mutated_mod['func_3876'] = func_3876
mutated_mod = relay.transform.InferType()(mutated_mod)
var_3920 = relay.var("var_3920", dtype = "float32", shape = (2, 16, 1))#candidate|3920|(2, 16, 1)|var|float32
uop_3921 = relay.sqrt(var_3920.astype('float32')) # shape=(2, 16, 1)
bop_3928 = relay.add(uop_3921.astype('float32'), relay.reshape(var_3920.astype('float32'), relay.shape_of(uop_3921))) # shape=(2, 16, 1)
uop_3934 = relay.rsqrt(bop_3928.astype('float32')) # shape=(2, 16, 1)
uop_3938 = relay.erf(uop_3934.astype('float64')) # shape=(2, 16, 1)
uop_3944 = relay.cosh(uop_3938.astype('float64')) # shape=(2, 16, 1)
func_1234_call = mod.get_global_var('func_1234')
func_1236_call = mutated_mod.get_global_var('func_1236')
call_3949 = func_1234_call()
call_3950 = func_1234_call()
output = relay.Tuple([uop_3944,call_3949,])
output2 = relay.Tuple([uop_3944,call_3950,])
func_3953 = relay.Function([var_3920,], output)
mod['func_3953'] = func_3953
mod = relay.transform.InferType()(mod)
mutated_mod['func_3953'] = func_3953
mutated_mod = relay.transform.InferType()(mutated_mod)
var_3954 = relay.var("var_3954", dtype = "float32", shape = (2, 16, 1))#candidate|3954|(2, 16, 1)|var|float32
func_3953_call = mutated_mod.get_global_var('func_3953')
call_3955 = func_3953_call(var_3954)
output = call_3955
func_3956 = relay.Function([var_3954], output)
mutated_mod['func_3956'] = func_3956
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3518_call = mod.get_global_var('func_3518')
func_3519_call = mutated_mod.get_global_var('func_3519')
call_3972 = relay.TupleGetItem(func_3518_call(), 2)
call_3973 = relay.TupleGetItem(func_3519_call(), 2)
output = relay.Tuple([call_3972,])
output2 = relay.Tuple([call_3973,])
func_3978 = relay.Function([], output)
mod['func_3978'] = func_3978
mod = relay.transform.InferType()(mod)
output = func_3978()
func_3979 = relay.Function([], output)
mutated_mod['func_3979'] = func_3979
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2221_call = mod.get_global_var('func_2221')
func_2222_call = mutated_mod.get_global_var('func_2222')
call_4012 = relay.TupleGetItem(func_2221_call(), 0)
call_4013 = relay.TupleGetItem(func_2222_call(), 0)
func_2203_call = mod.get_global_var('func_2203')
func_2204_call = mutated_mod.get_global_var('func_2204')
call_4018 = relay.TupleGetItem(func_2203_call(), 2)
call_4019 = relay.TupleGetItem(func_2204_call(), 2)
func_2330_call = mod.get_global_var('func_2330')
func_2332_call = mutated_mod.get_global_var('func_2332')
var_4025 = relay.var("var_4025", dtype = "float32", shape = (36,))#candidate|4025|(36,)|var|float32
call_4024 = relay.TupleGetItem(func_2330_call(relay.reshape(var_4025.astype('float32'), [36,])), 0)
call_4026 = relay.TupleGetItem(func_2332_call(relay.reshape(var_4025.astype('float32'), [36,])), 0)
func_3157_call = mod.get_global_var('func_3157')
func_3158_call = mutated_mod.get_global_var('func_3158')
call_4027 = relay.TupleGetItem(func_3157_call(), 2)
call_4028 = relay.TupleGetItem(func_3158_call(), 2)
func_1324_call = mod.get_global_var('func_1324')
func_1326_call = mutated_mod.get_global_var('func_1326')
call_4037 = relay.TupleGetItem(func_1324_call(relay.reshape(call_4012.astype('float64'), [8, 15, 12])), 1)
call_4038 = relay.TupleGetItem(func_1326_call(relay.reshape(call_4012.astype('float64'), [8, 15, 12])), 1)
output = relay.Tuple([call_4012,call_4018,call_4024,var_4025,call_4027,call_4037,])
output2 = relay.Tuple([call_4013,call_4019,call_4026,var_4025,call_4028,call_4038,])
func_4043 = relay.Function([var_4025,], output)
mod['func_4043'] = func_4043
mod = relay.transform.InferType()(mod)
var_4044 = relay.var("var_4044", dtype = "float32", shape = (36,))#candidate|4044|(36,)|var|float32
output = func_4043(var_4044)
func_4045 = relay.Function([var_4044], output)
mutated_mod['func_4045'] = func_4045
mutated_mod = relay.transform.InferType()(mutated_mod)
var_4084 = relay.var("var_4084", dtype = "float32", shape = (9, 4, 13))#candidate|4084|(9, 4, 13)|var|float32
uop_4085 = relay.sin(var_4084.astype('float32')) # shape=(9, 4, 13)
uop_4087 = relay.sigmoid(var_4084.astype('float32')) # shape=(9, 4, 13)
func_1756_call = mod.get_global_var('func_1756')
func_1758_call = mutated_mod.get_global_var('func_1758')
const_4091 = relay.const([3.946947,-4.825366,-6.341724,-0.991151,1.636973,-3.904863,-5.697532,4.900617,9.611677,0.006388,5.791465,-5.413915,-0.324573,-3.448234,-5.575896,5.816492,-1.256009,3.924680,-8.011649,3.082266,4.242477,0.862650,8.674117,-0.687577,8.655072,8.986874,0.506067,3.538281,-8.132174,9.407185,8.049792,-9.172047,8.245784,-1.628959,-2.578305,8.515627], dtype = "float32")#candidate|4091|(36,)|const|float32
call_4090 = relay.TupleGetItem(func_1756_call(relay.reshape(const_4091.astype('float32'), [3, 12])), 0)
call_4092 = relay.TupleGetItem(func_1758_call(relay.reshape(const_4091.astype('float32'), [3, 12])), 0)
output = relay.Tuple([uop_4085,uop_4087,call_4090,const_4091,])
output2 = relay.Tuple([uop_4085,uop_4087,call_4092,const_4091,])
func_4095 = relay.Function([var_4084,], output)
mod['func_4095'] = func_4095
mod = relay.transform.InferType()(mod)
var_4096 = relay.var("var_4096", dtype = "float32", shape = (9, 4, 13))#candidate|4096|(9, 4, 13)|var|float32
output = func_4095(var_4096)
func_4097 = relay.Function([var_4096], output)
mutated_mod['func_4097'] = func_4097
mutated_mod = relay.transform.InferType()(mutated_mod)
func_109_call = mod.get_global_var('func_109')
func_111_call = mutated_mod.get_global_var('func_111')
call_4129 = relay.TupleGetItem(func_109_call(), 0)
call_4130 = relay.TupleGetItem(func_111_call(), 0)
const_4183 = relay.const([[[0.191128,3.125312,-4.247605,-1.204835,3.539136,-1.589076,0.451758,-7.441281,-4.634930,-6.473586,2.368152,7.779728],[-2.024391,8.909349,-8.008707,-8.792414,5.414338,-1.939194,9.813163,4.140329,-6.561519,-9.375988,8.975326,-8.327523],[2.231378,-4.424241,8.004087,0.043304,-8.867397,6.007604,3.508020,1.679140,5.517080,3.187697,-8.756800,-8.093118],[-7.369660,-3.393049,9.395464,-5.774713,-8.698224,2.829043,-6.355506,3.016641,-6.916470,7.353990,-3.816559,-0.104900],[-5.802314,-5.620336,-5.354541,7.410848,-8.479878,5.508383,5.129118,-5.458125,-6.244979,4.861928,-3.448151,3.046343],[-0.389670,5.997884,9.268667,-3.310379,4.188767,-7.926085,9.129489,-6.556181,-1.653355,-2.686925,6.570955,8.893876],[-1.747199,-0.548753,8.164055,3.098781,5.084272,-6.334474,-6.036943,-6.701857,-0.832118,-2.386555,1.149114,8.232954],[-5.820073,9.041205,-1.372304,6.553143,7.761969,-8.503165,9.013224,-7.501100,-1.083823,-6.941438,-8.388176,-7.299942],[3.390245,-9.872708,7.174083,-4.234270,9.576177,-7.626902,-2.558200,5.284681,1.876944,-6.542296,9.630006,9.373752],[-0.507066,5.697351,5.390410,8.082413,-0.372268,8.244070,8.856481,1.587509,0.823740,-1.283931,4.395987,8.365055],[3.193243,6.279890,4.609747,-1.983814,-4.993022,-5.174577,0.043602,6.481122,0.798374,-5.498668,-0.289099,-8.491075],[3.315008,-1.272455,-8.307832,2.913093,0.658718,-7.228409,-7.652521,-5.422722,-5.185366,-7.604824,-8.757054,5.444627],[-8.465885,-7.387424,9.788399,-8.176610,-1.521082,0.764220,-8.859425,-4.608140,-7.130117,-0.079613,-9.320469,9.873474],[8.361433,-8.266393,8.929516,-8.988953,2.677067,5.732918,4.429261,4.681501,-0.509365,-3.890477,-2.534821,-8.927514],[0.716328,9.461827,-0.743981,9.329850,-5.522763,4.723343,9.881449,6.149369,4.798414,-6.840290,-5.779319,-8.770374]],[[-5.463798,6.801633,7.245479,2.594951,9.462517,-5.184803,-4.493331,4.282692,-4.411505,-5.807205,-3.297569,-3.677104],[-8.912880,-8.441072,8.398392,7.563448,4.735840,-8.920556,7.627620,-2.428113,-5.281279,-1.642139,-9.911160,7.658329],[-6.989611,-2.890682,6.109863,-6.157147,0.276944,-7.827834,9.488528,7.469485,-0.576341,-8.687740,4.137657,-4.676816],[5.736525,-3.973061,7.141317,-2.123192,-2.911046,-2.083607,-7.967057,3.178902,-1.747585,-6.746044,-9.009687,-7.320797],[6.925970,-2.380256,6.072962,-5.574224,3.873087,-7.712972,-2.914562,-4.355946,-6.851540,-6.741087,-0.279767,-6.648743],[7.434407,-1.846066,-9.726568,-3.552056,9.994245,1.749793,-8.739730,-7.054162,-6.025435,-0.740237,1.001272,0.281806],[9.632701,-8.404131,-9.732938,-7.304394,9.453224,3.699520,-4.780146,6.167919,-3.831417,-8.102702,-6.951073,-0.944602],[-3.222473,1.504346,0.870828,0.904163,-9.188046,-4.343672,-4.616477,-9.463711,-0.533607,-2.835346,-6.484641,-7.795812],[-9.322645,3.044026,7.364684,8.056829,-2.012478,-2.994770,-5.636061,-9.699027,6.082762,3.828110,-2.162327,-5.785005],[2.240323,9.087770,-6.837907,-1.708390,-5.259330,-1.525103,1.682503,7.126392,-7.212870,6.480952,0.629971,-7.325543],[2.985698,2.372406,5.793412,-3.380591,-3.209590,-3.622583,7.399725,8.190014,-8.980050,-3.708146,6.884817,2.288209],[4.473995,-3.026386,7.031018,9.540722,-2.195102,-4.945239,-2.877840,-3.001429,-1.186181,-8.042786,6.907310,7.952645],[6.045394,0.814609,-2.196398,-0.145238,-4.076953,-3.501791,4.574937,-0.968671,-3.834306,-5.825902,2.287386,2.137771],[8.176682,0.546834,1.186558,7.964662,-4.123708,-2.626238,5.556449,-0.764061,8.109108,8.794693,0.588140,3.422288],[-2.313690,-7.201646,-8.938546,5.406111,3.936911,7.816655,-5.543757,4.670361,2.296489,4.588934,9.789083,-2.124282]],[[-4.459455,5.044216,1.789354,-6.591573,-9.169100,1.892531,-7.796726,4.754767,-8.077440,0.692793,6.609472,8.568796],[-7.050322,0.424347,0.892903,-2.697695,-9.769511,6.668923,-4.807248,6.644509,-0.129029,-9.104333,-4.665582,5.948218],[-6.106838,4.799099,5.374472,-4.636823,4.439727,7.782617,-5.691792,-0.224314,-7.306528,-4.488256,8.499578,3.432562],[9.084372,6.432550,6.088799,-8.359987,8.206533,8.215483,-4.306036,-3.638533,-4.847341,-4.437474,8.043651,8.596785],[-8.163593,3.578194,2.377171,-0.473715,-1.388944,-6.031739,-0.220469,2.944459,-0.045302,-1.456843,-4.367481,-9.071809],[0.482042,0.164968,-9.653873,-7.476704,3.042553,-9.427685,-2.155341,4.656600,-0.639731,3.354547,-7.016393,-1.359152],[0.585445,4.900671,5.090718,-0.589485,2.049214,-3.957219,-5.342860,-0.601099,-4.525954,5.858029,6.971310,4.823839],[-8.927830,-8.880622,2.889367,-7.478651,-0.959560,-1.273240,0.908964,-5.072498,1.758141,-3.664495,7.342449,3.852375],[-1.722666,-7.899519,1.518515,4.507670,-1.489651,-9.333345,5.996845,8.862234,-5.747221,1.833025,-2.311125,-7.936147],[-1.653307,-9.812513,-4.605729,3.306422,-4.217175,-8.478956,5.464143,5.742452,-5.727373,3.518000,-2.905412,6.680222],[9.639384,5.214962,-5.513149,2.382460,-4.237983,-7.162112,9.952548,2.153454,9.914465,0.602367,-3.075558,1.729610],[-6.675430,-7.686012,8.984112,2.419967,-0.661447,-3.601950,3.844068,-9.579070,7.495403,-1.675407,-5.663330,-5.755540],[3.928241,0.507233,0.209440,-1.158048,6.111974,-3.491908,-8.576884,7.243007,-6.739395,3.336318,7.755729,-5.524546],[-2.647714,3.762186,-6.166579,1.773304,5.289658,5.150083,5.569713,-2.792905,-4.097108,4.068551,9.292048,-6.979704],[-9.152096,1.758044,0.227889,3.985238,-2.973100,-2.786957,-3.501061,-0.719416,-2.329741,-9.427859,-4.757073,6.193502]],[[-7.957135,2.895073,2.587430,7.440910,-0.999362,-0.741792,-2.086389,8.197595,-0.175579,-0.864861,5.020587,3.276700],[-0.903238,2.005317,-9.191800,-6.132077,3.010711,-0.774890,0.545450,6.450224,-6.079748,0.095611,0.581609,0.396229],[-5.170383,-7.262251,1.130672,-7.993298,-9.705314,-1.567969,-2.879567,6.135116,-4.475003,-6.701918,9.246267,3.470683],[8.449607,4.629983,-6.699008,8.670502,-4.206444,-6.598648,9.079021,6.101944,1.539027,-8.863978,-3.236238,3.036726],[-6.314711,-5.962108,5.358600,8.320852,-3.629555,0.034098,-5.667626,-5.281183,4.871482,-0.866140,2.340858,-4.856325],[7.800577,-1.017232,-4.103101,-3.160787,9.432152,-8.908342,6.210842,-9.354533,-6.562917,-7.647357,-2.086770,4.227241],[1.087255,-7.572229,-7.866105,6.500295,9.486486,5.838438,-6.117776,-6.827542,0.190631,-5.376819,6.038762,-0.475514],[9.842611,-3.695047,3.938496,4.749995,9.319348,4.897943,-4.958493,8.714707,-5.766234,4.264821,-4.500140,8.886293],[-7.734027,-9.172527,-8.916314,-3.129329,9.336024,3.052543,-1.615196,-9.989372,-0.898692,2.123841,-3.828137,-9.512247],[-6.567008,8.333825,-7.554598,-5.673106,6.114093,-9.999488,7.304859,2.879859,9.814472,-2.411329,3.539863,8.880311],[-8.868727,-2.620096,2.072621,-4.816321,-3.309375,-6.103527,-3.365770,6.353597,-6.078227,3.531744,-7.294359,-2.386393],[4.852220,-8.421447,9.352875,-2.215248,-4.076361,7.989607,3.481013,4.849623,9.083888,-6.883227,-9.511028,3.846059],[3.106570,7.037279,4.515474,1.347141,-5.064401,9.204721,4.483993,3.728678,-1.222416,6.719872,-7.553970,6.592563],[6.992054,8.142977,-0.176133,-7.901480,0.598660,9.767289,5.108109,2.691372,-3.987313,-2.130909,-6.762097,-9.751601],[-1.860405,3.248063,-9.880835,-3.114643,-6.577321,-0.773285,5.499209,3.912906,-6.384940,8.348812,9.254527,9.183595]],[[-0.168466,-5.820638,9.490286,4.893820,-0.700549,5.489779,-9.996892,-9.426872,6.767670,1.617079,6.605730,-0.308953],[4.232569,-3.280356,-7.052889,0.048741,1.576306,-3.659273,-8.018482,-5.334369,-5.113511,7.966207,9.364736,7.641208],[-5.681784,8.852712,4.131566,9.988257,-3.804969,-3.824208,7.508756,5.012365,4.925251,-4.661474,9.076154,-6.113185],[-7.850175,-0.001514,-7.498015,-2.281388,-2.692541,-1.021715,9.798980,1.795532,6.655262,2.339474,7.403670,8.960415],[-1.414846,-8.816221,-6.142676,7.614412,-8.213217,4.517945,0.904631,-9.675025,6.481890,-0.755076,-8.102268,-3.372567],[6.453203,0.906141,-1.532423,8.458841,-3.511101,2.903676,-3.929733,9.616353,-4.616098,1.550742,-9.927187,-8.097235],[5.435374,6.946313,-3.355397,6.525696,2.553237,-2.630392,-6.449424,-5.158785,3.116678,8.719187,-8.073159,-6.384247],[2.830646,-7.251686,4.399314,-0.752722,0.308456,3.678096,8.251091,8.122618,3.437790,2.802884,1.203344,-4.349325],[9.920949,9.370159,-3.072078,-7.346766,4.450896,8.315159,6.134458,9.537144,6.467188,-6.604905,-3.888219,9.435916],[0.963113,9.285615,-6.343770,1.875472,1.340427,2.357836,0.714437,-4.945319,1.049155,5.664797,3.148076,8.145107],[7.449938,4.983473,-3.842124,9.347603,4.789453,-2.770542,-8.461315,4.564189,-9.607292,8.027352,8.815967,9.085907],[-3.034204,3.529106,6.683635,-5.045694,2.916784,-8.917101,2.663069,1.022128,-0.111722,-3.401104,-6.624479,5.161602],[4.440094,-3.880261,-1.695793,3.121800,-2.037674,-4.607159,1.724698,9.176912,-6.478220,-6.209747,5.482802,3.800806],[-4.164532,7.155167,8.791383,7.129958,5.469335,4.966031,7.831101,-4.745210,-4.413674,-7.355035,-4.127145,-9.945389],[0.752387,-8.429246,-9.970068,3.176450,0.970337,1.151882,2.073180,2.131953,-6.972352,-7.044109,5.553906,-3.665252]],[[3.321416,-2.463387,-6.671405,-5.067731,2.676936,-8.626189,-8.811147,-0.560536,-0.385650,5.813837,7.889096,2.769530],[3.088056,0.554292,-0.277957,-7.571131,-8.162742,7.794492,0.353802,9.358333,-0.309892,2.472745,9.477468,4.583687],[3.771764,0.733486,5.751259,4.229056,-0.634369,-3.346942,-2.989308,-6.880062,7.925555,0.336983,4.270021,4.480493],[-1.908505,0.335146,3.118118,-0.838668,5.718220,2.561383,-0.061724,9.642131,0.564529,6.890127,6.907234,2.797603],[-5.012570,1.875891,5.156134,5.932192,6.564484,3.405717,9.466800,-1.646772,2.700030,-8.400531,-3.090172,-9.953686],[6.560817,0.455856,3.921324,5.941966,4.665923,9.212517,7.706718,-4.187095,7.823601,2.490138,3.334107,9.245808],[8.337465,-8.856499,-1.148013,-3.784847,2.124098,-6.758530,-4.601351,-6.873602,-9.624211,-7.750157,-8.882567,9.972249],[-9.975777,0.279959,-5.653487,-4.394256,-9.507023,0.709808,5.685426,-9.388295,0.790082,2.076932,-2.595846,3.081394],[2.753672,-6.718003,-8.642773,-9.098218,3.250029,6.504840,-8.655657,1.397370,-0.454772,2.364981,-8.805307,-6.783221],[-1.589766,0.138094,4.942808,-4.590003,-8.852333,5.579306,-8.967010,4.653881,0.381891,0.862611,-3.166788,-7.146639],[7.944513,-1.620722,7.036456,8.083895,-4.914612,-2.543428,5.492336,5.152998,7.896030,-8.273936,-0.312261,3.263821],[-5.229907,8.456209,-5.436699,-5.375695,-4.866457,1.983950,1.998288,2.995195,-9.345682,-9.052653,-6.744081,9.526857],[-6.264194,6.110348,-4.043150,-9.983899,9.089195,8.601270,0.559404,4.482848,7.451461,3.558881,8.660397,-4.019610],[-0.744464,5.140112,-6.335162,-2.968312,6.413017,3.456301,6.945396,-6.449490,-9.972770,-5.113116,1.801438,2.903358],[-4.063155,-9.732777,3.877089,2.778112,0.281201,4.544471,-0.850532,-6.705960,4.281203,6.612252,6.492779,-0.934693]],[[2.064672,6.423504,-0.079833,8.894668,2.949804,1.371872,7.923910,-1.151963,5.314028,-4.046835,9.657369,1.780519],[1.845809,4.216673,1.223933,-9.291371,-3.002753,6.114500,-1.063307,-8.820574,-5.464475,-8.221903,-2.673793,-5.290114],[-5.914638,5.639809,4.565350,0.177388,6.773031,9.647366,-1.171671,-1.330425,3.676366,4.815711,-3.791755,0.356901],[3.287241,-2.229098,-8.047532,-1.856831,-8.733645,9.649332,-3.185142,-6.591858,8.826338,-6.659101,0.400357,5.433006],[4.454017,-6.761292,-6.212652,-4.589603,7.276657,4.681597,-0.143163,2.558303,-2.751958,-9.566241,7.020174,-0.426052],[5.897418,-5.515875,6.310705,9.047013,-4.683420,2.807686,-0.535457,0.058728,-5.582306,7.786747,-1.429558,4.767394],[6.729301,6.004506,-7.818327,-1.226887,3.763762,-9.864619,-3.433140,8.227936,9.429549,2.731941,-0.820654,-5.753691],[1.973335,6.330317,-5.305141,-3.345676,9.819175,-7.291253,-2.900030,9.627737,6.689410,-9.353948,1.897718,-1.811190],[-4.735294,-2.432420,-1.925400,-0.676860,4.581713,2.600215,-7.097689,8.933136,-4.528624,-4.269184,-7.087073,-2.952571],[4.845135,5.739694,-2.285710,-7.527696,4.362782,3.998091,5.340440,-8.497519,-6.648898,-0.816832,9.180432,-1.597172],[1.947272,-3.569485,-2.264678,8.086602,-4.173725,-0.983143,-3.512298,5.119850,-7.285490,-2.223374,-7.533563,-3.082141],[-0.104577,-2.269418,-0.761802,9.806532,4.196175,-8.456516,-4.574765,4.167090,-4.963936,3.947099,-0.291627,4.206066],[-6.783086,-2.058748,-4.165059,1.332821,8.720220,-7.578709,-1.367999,7.082940,-9.068308,3.207682,3.725643,1.449867],[-3.678365,2.250923,8.996669,3.423476,-2.359027,9.570232,-3.461643,9.967943,-6.632428,-9.794306,-2.766463,-4.053356],[5.844858,7.312001,-6.676626,-1.119497,-4.949348,-6.545725,-8.249495,9.128755,0.726268,4.189906,0.568704,-8.485719]],[[8.217702,-2.527946,-5.902585,-9.752220,-1.409830,5.288306,-8.471356,9.061770,7.081733,-5.851140,-5.985280,-2.150445],[-7.758502,2.062167,-0.451512,1.459786,-2.946341,0.545243,-7.154441,-3.198592,-6.731899,-9.436810,-6.257362,8.962471],[2.684459,7.466735,7.682656,3.170625,-6.415306,9.399719,-7.627613,-4.566892,-2.727623,-2.157524,8.173186,9.469688],[-0.683804,-5.181359,5.429695,-9.635201,3.430439,-1.149907,8.067356,3.331651,5.356701,-8.549184,2.317493,-1.272888],[1.164594,9.339987,-2.367366,-8.087667,-3.189243,7.032813,-8.898664,-4.856760,0.524129,-3.958159,-3.634758,-6.117542],[-9.669199,-7.325311,6.177236,9.269079,3.254372,4.492157,4.680267,-1.880152,-5.290679,5.623685,4.509652,1.457289],[4.170454,9.446695,1.313459,6.782136,-4.318028,8.486305,-7.989028,-9.916439,8.847901,6.505625,5.954550,-3.179253],[0.872497,-4.644818,2.176307,-3.787831,1.273636,8.039564,6.773988,-3.293252,-4.460873,-8.628374,-3.358473,-6.009045],[-1.682385,-0.160633,5.801049,-7.970688,4.509121,5.170493,-6.508159,7.771601,3.116797,-4.798319,5.169576,-1.260570],[-0.422356,-2.915590,-2.339595,8.984982,2.589343,-9.512628,-5.853452,1.136214,-0.557322,6.301834,-6.313974,-2.214218],[2.054099,8.154180,-5.309924,-0.234553,-9.030106,6.628095,8.544448,0.538277,3.247284,9.253033,-5.057140,1.610438],[7.459438,6.273536,5.623670,9.182528,-2.633511,0.933315,-9.131067,-1.412200,-6.730836,0.184368,-2.708786,-9.790813],[4.583534,5.091907,8.451941,-6.753426,1.192226,-5.524229,4.134640,8.949239,-4.760746,-1.956914,-8.911037,3.874729],[6.850964,-2.141700,-8.379781,0.624797,-8.051045,6.607406,4.486635,-3.876542,-6.789676,0.049851,-5.348214,1.909379],[1.385312,-2.609894,-3.916753,-6.863194,-0.739101,4.566843,-1.321162,-0.926890,-7.256479,-6.283163,8.432730,-5.266825]]], dtype = "float64")#candidate|4183|(8, 15, 12)|const|float64
bop_4184 = relay.minimum(call_4129.astype('int32'), relay.reshape(const_4183.astype('int32'), relay.shape_of(call_4129))) # shape=(8, 15, 12)
bop_4187 = relay.minimum(call_4130.astype('int32'), relay.reshape(const_4183.astype('int32'), relay.shape_of(call_4130))) # shape=(8, 15, 12)
func_1896_call = mod.get_global_var('func_1896')
func_1899_call = mutated_mod.get_global_var('func_1899')
const_4192 = relay.const([[-10,9,10,-9,-10,9],[3,-1,9,-4,2,3],[-7,-3,-10,4,2,4],[-9,-2,3,4,-3,6],[-7,-10,8,-6,2,5],[2,3,-7,7,9,-4],[3,10,-6,-9,-9,-9],[4,3,-7,-7,-10,-5],[7,-2,3,1,-5,-5],[9,4,-5,-4,10,-5],[8,6,-4,4,4,2],[-3,7,-3,-8,8,-10],[-7,-4,-4,4,2,-1],[-4,2,2,-9,-6,-2],[9,-3,4,-10,10,7],[-4,7,4,4,4,6],[-9,-2,3,4,-5,-9],[-2,9,-4,7,9,5],[3,-1,-5,-4,4,-9],[-1,-9,2,7,-8,6],[-5,1,7,7,-3,-7],[-9,-7,9,10,-1,-8],[8,8,2,-9,7,10],[3,-3,10,-9,5,2],[1,5,4,6,-1,-9],[10,-9,-7,10,10,8],[-7,9,-2,7,-4,9],[8,-1,2,1,7,9],[-2,-3,4,2,-10,-5],[-1,-10,-7,-4,-4,5],[2,-8,-7,-4,7,1],[1,-5,2,7,-4,-10],[-6,7,7,8,7,2],[-4,-5,4,-2,-9,7],[-7,-7,-3,-2,-1,-1],[-9,10,6,2,-8,10]], dtype = "int16")#candidate|4192|(36, 6)|const|int16
call_4191 = relay.TupleGetItem(func_1896_call(relay.reshape(const_4192.astype('int16'), [2, 12, 9]), relay.reshape(const_4192.astype('int16'), [2, 12, 9]), ), 0)
call_4193 = relay.TupleGetItem(func_1899_call(relay.reshape(const_4192.astype('int16'), [2, 12, 9]), relay.reshape(const_4192.astype('int16'), [2, 12, 9]), ), 0)
output = relay.Tuple([bop_4184,call_4191,const_4192,])
output2 = relay.Tuple([bop_4187,call_4193,const_4192,])
func_4204 = relay.Function([], output)
mod['func_4204'] = func_4204
mod = relay.transform.InferType()(mod)
output = func_4204()
func_4205 = relay.Function([], output)
mutated_mod['func_4205'] = func_4205
mutated_mod = relay.transform.InferType()(mutated_mod)
func_668_call = mod.get_global_var('func_668')
func_669_call = mutated_mod.get_global_var('func_669')
call_4206 = relay.TupleGetItem(func_668_call(), 1)
call_4207 = relay.TupleGetItem(func_669_call(), 1)
output = call_4206
output2 = call_4207
func_4208 = relay.Function([], output)
mod['func_4208'] = func_4208
mod = relay.transform.InferType()(mod)
output = func_4208()
func_4209 = relay.Function([], output)
mutated_mod['func_4209'] = func_4209
mutated_mod = relay.transform.InferType()(mutated_mod)
func_588_call = mod.get_global_var('func_588')
func_589_call = mutated_mod.get_global_var('func_589')
call_4254 = relay.TupleGetItem(func_588_call(), 1)
call_4255 = relay.TupleGetItem(func_589_call(), 1)
output = call_4254
output2 = call_4255
func_4261 = relay.Function([], output)
mod['func_4261'] = func_4261
mod = relay.transform.InferType()(mod)
mutated_mod['func_4261'] = func_4261
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4261_call = mutated_mod.get_global_var('func_4261')
call_4262 = func_4261_call()
output = call_4262
func_4263 = relay.Function([], output)
mutated_mod['func_4263'] = func_4263
mutated_mod = relay.transform.InferType()(mutated_mod)
func_683_call = mod.get_global_var('func_683')
func_685_call = mutated_mod.get_global_var('func_685')
call_4269 = relay.TupleGetItem(func_683_call(), 1)
call_4270 = relay.TupleGetItem(func_685_call(), 1)
func_2278_call = mod.get_global_var('func_2278')
func_2282_call = mutated_mod.get_global_var('func_2282')
const_4280 = relay.const([-2,3,7,-6,-8,9,-2,9,-3,5,9,4,2,-6,-8,5,9,1,3,2,4,-1,2,8,-2,-9,-7,-4,6,10,-6,-4,-4,2,-4,-7,8,7,-9,-7,10,-2,1,-7,-8,3,-3,1,-3,3,9,-8,-1,9,1,-10,4,-7,-10,1,3,-3,10,4,-7,1,-8,-3,5,8,7,-9,2,5,-2,1,8,-2,6,-4,-4,8,-5,10,2,7,5,-10,2,10,-2,9,-5,-2,6,3,-10,-1,-2,4,8,3,5,-4,-3,-1,5,6,-1,-10,-2,-9,4,7,3,-1,-3,8,-2,-7,7,7,-9,2,3,9,5,-10,-1,6,-10,-9,-3,-1,9,7,7,10,9,6,-3,9,-4,-8,6,1,3,9,6,9,9,3,-2,-1,-6,4,1,-7,2,2,-1,4,-2,10,-2,-5,-6,6,-3,8,-4,-7,6,10,1,-6,6,6,2,5,-4,-6,1,8,-8,3,9,-7,-6,-4,10,1,1,-3,3,8,10,-10,5,7,2,-5,10,9,8,4,3,-3,3,7,6,5,-9,-1,3,-10,-5,-8,-7,-2,-2,5,4,-10,-6,4,4,1,6,-2,7,-4,8,-9,10,-2,-8,8,4,8], dtype = "int8")#candidate|4280|(240,)|const|int8
call_4279 = func_2278_call(relay.reshape(const_4280.astype('int8'), [1, 16, 15]), relay.reshape(call_4269.astype('int8'), [6, 16, 15]), )
call_4281 = func_2278_call(relay.reshape(const_4280.astype('int8'), [1, 16, 15]), relay.reshape(call_4269.astype('int8'), [6, 16, 15]), )
output = relay.Tuple([call_4269,call_4279,const_4280,])
output2 = relay.Tuple([call_4270,call_4281,const_4280,])
func_4282 = relay.Function([], output)
mod['func_4282'] = func_4282
mod = relay.transform.InferType()(mod)
mutated_mod['func_4282'] = func_4282
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4282_call = mutated_mod.get_global_var('func_4282')
call_4283 = func_4282_call()
output = call_4283
func_4284 = relay.Function([], output)
mutated_mod['func_4284'] = func_4284
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2510_call = mod.get_global_var('func_2510')
func_2512_call = mutated_mod.get_global_var('func_2512')
call_4298 = relay.TupleGetItem(func_2510_call(), 1)
call_4299 = relay.TupleGetItem(func_2512_call(), 1)
output = call_4298
output2 = call_4299
func_4328 = relay.Function([], output)
mod['func_4328'] = func_4328
mod = relay.transform.InferType()(mod)
mutated_mod['func_4328'] = func_4328
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4328_call = mutated_mod.get_global_var('func_4328')
call_4329 = func_4328_call()
output = call_4329
func_4330 = relay.Function([], output)
mutated_mod['func_4330'] = func_4330
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3308_call = mod.get_global_var('func_3308')
func_3309_call = mutated_mod.get_global_var('func_3309')
call_4343 = func_3308_call()
call_4344 = func_3308_call()
func_3179_call = mod.get_global_var('func_3179')
func_3181_call = mutated_mod.get_global_var('func_3181')
const_4369 = relay.const([2,10,-3,-1,-6,10,8,-6,8,6,-3,5,-6,4,-2,-10,-9,10,-3,-8,2,9,-7,10,4,-3,6,-5,-4,-6,4,-3,-10,-2,2,2,-9,-5,-3,-4,-4,3,5,-2,7,-5,6,3,-1,-9,-6,-8,-1,3,-9,-2,-4,-2,-5,7,-4,4,-10,-8,-3,-5,-9,5,-5,5,-7,-8,-3,1,-7,-1,-3,-3,-1,4,-1,4,2,-1,8,-5,-4,-8,-3,5,7,3,3,3,-10,-10,5,-2,-3,-6,-10,8,3,-10,-4,8,-5,1,8,1,-2,8,7,6,2,5,-2,5,10,2,2,-5,-1,-4,2,-7,-10,-4,5,-9,2,9,6,7,-1,1,-7,10,-5,-4,-2,5,-6,-9,7,-9,1,-2,4,-6,-6,-8,-3,10,-5,-9,7,-8,-1,5,-6,-8,2,7,-9,1,-8,-8,-7,1,7,8,-3,1,7,3,-10,-2,3,10,-10,7,8,-1,6,-7,-1,10,-3,-10,-5,-4,6,-9,5,10,10,5,5,-3,7,5,-4,4,4,-8,8,5,-7,-4,-6,8,-2,-4,-9,7,8,6,6,9,-5,-10,6,7,-2,6,5,-3,-8,-5,7,-5,-5,5,4,-3,1,-9,9,-2,9,10,-3,3,2,-10,-2,-2,-9,-8,2,-1,-5,4,8,-6,6,-1,8,2,-3,-9,-9,-2,9,-1,-3,8,5,-5,-7,-10,-6,-2,6,-6,-6,6,5,4,-9,-7,-7,2,6,-5,-8,-6,7,-1,-1,3,-2,-5,-6,3,5,-8,6,4,-5,4,5,8,-9,-6,5,-2,-8,-4,-5,10,6,2,-7,-5,-7,-6,1,6,-2,-2,4,4,10,-8,4,5,-7,-3,3,-7,-6,-7,-6,7,-7,-6,5,-5,-9,-10,-5,2,-9,-6,-2,-7,3,-7,6,10,-5,4,-8,2,6,-10,-6,10,-9,10,-9,-4,-10,3,3,9,2,7,-4,7,1,-8,-2,-4,7,4,10,8,9,4,-5,-1,6,-6,6,-2,-1,-6,1,3,2,3,7,2,5,9,8,-6,5,7,-7,10,1,2,6,1,-5,1,-6,-10,-8,-10,7,3,1,-3,10,8,-9,-3,-6,-2,9,-4,4,-7,-1,9,4,-1,-1,-5,8,-10,6,2,8,-4,7,1,2,-6,-6,2,-6,-6,7,-7,7,-4,3,-4,1,-7,5,-2,7,-3,-2,2,10,-4,-1,4,8,-10,5,1,3,-4,7,7,-3,-4,7,-4,4,-4,7,-3,-5,8,-9,3,7,10,3,-8,8,-3,8,2,5,8,-1,9,-8,-5,5,8,-7,-6,8,1,5,-2,1,-6,-7,8,-9,-5,5,-5,10,-2,4,1,1,-7,-4,-1,1,1,4,-8,-8,4,-5,-4,2,3,-6,-5,4,3,-1,7,2,1,-9,2,2,-3,-3,-1,2,1,8,-5,8,-4,-2,2,-9,3,2,7,9,10,-6,-9,4,-6,-5,-5,-9,-3,-10,-7,10,6,5,-5,-5,10,-5,-10,8,9,9,6,5,-10,-6,3,-9,7,4,10,-6,-1,-9,10,-6,-1,-7,4,-8,-6,-3,10,9,8,9,3,8,6,4,7,7,5,-6,-5,-3,-9,-9,8,4,1,4,9,-7,-3,1,1,7,1,6,8,-6,-6,5,2,2,5,5,-1,-10,-3,4,10,-9,7,-6,5,-3,6,-6,1,10,-5,-9,9,-9,-10,-4,4,-3,9,5,1,4,8,-6,8,-5,2,7,3,4,9,-6,-1,4,-6,3,-9,-5,-9,-3,8,9,-2,-1,-4,-8,3,6,3,-4,-8,-6,-8,-3,-3,-5,6,1,10,-3,-7,9,-7,3,-4,-8,-8,1,-7,-2,-3,-3,10,-7,8,-7,2,-2,-1,-8,-4,9,-3,5,-5,2,5,-4,-1,-5,2,-3,-10,-3,2,5,-10,-5,5,2,-10,-9,-2,-9,-6,4,-8,2,2,8,9,-7,10,-9,-3,-6,-7,-7,9,-2,10,-1,-2,8,-8,-7,2,5,7,6,7,4,-8,-3,-9,-10,-2,9,5,8,-6,2,9,7,-3,10,6,4,-7,8,1,-4,10,6,3,-1,-7,6,-2,5,-7,-5,-9,6,5,1,-4,10,-2,-1,8,-5,-7,-4,5,4,2,-6,8,8,-8,1,6,5,-6,3,10,-1,-9,6,4,-6,7,9,4,1,6,3,3,-2,-6,-5,2,-5,-2,-5,-9,3,2,3,9,9,6,-1,-2,10,-7,6,2,2,-2,-2,-7,7,7,7,-4,5,-10,8,9,-2,2,8,1,10,7,4,-7,5,-9,-1,-1,-2,5,5,-8,2,6,4,8,-1,-5,8,6,-5,-8,-9,-5,1,10,3,2,-6,5,-6,-3,9,1,-10,-3,-1,1,1,10,-7,-6,6,6,-6,1,6,-8,4,2,-8,8,7,9,7,-8,10,5,-3,8,-3,-1,7,-4,1,-6,1,8,3,-6,9,-7,7,6,4,-9,-5,6,10,-4,5,9,3,-4,9,9,3,8,9,-1,-8,-9,-9,-6,6,9,9,7,-7,8,-2,-3,-2,-6,5,-3,-8,-5,-1,9,2,-9,7,-2,-9,-10,7,8,6,-2,3,-3,10,-1,10,8,-7,-4,-3,9,-7,6,4,-5,2,-1,-3,-8,-4,-3,1,8,-8,-2,-9,6,-10,1,-8,4,4,-5,-10,1,5,8,-7,4,7,8,-7,-1,9,-10,-8,7,10,10,-8,-1,7,9,-6,-1,8,-8,-6,-1,2,-1,8,4,-1,-7,7,2,-7,-10,-3,-7,-2,8,-5,2,2,8,3,-9,8,7,-4,-1,-1,6,-4,7,-10,-6,3,4,3,-7,-6,5,10,9,-1,7,-3,-6,-7,-5,-7,2,10,5,-8,2,-1,-5,-8,-7,5,3,-8,-5,1,10,2,7,-7,-7,-7,10,7,10,-10,-6,-10,4,-7,3,-10,7,-6,-8,-9,10,6,-5,-5,-2,-2,3,7,-2,-6,-4,7,-2,6,-5,-5,-10,-5,5,9,-7,6,-5,-5,9,1,10,5,-10,-2,-7,-2,-7,3,6,-9,-3,5,8,-4,-3,-10,-2,7,-9,8,5,2,-6,-5,-7,9,9,-9,-4,-4,9,-2,-3,4,9,6,2,7,3,2,6,9,3,-2,2,-6,10,-3,-8,-4,8,2,-8,-8,2,-10,-1,-6,8,1,-4,10,-4,8,9,-10,2,7,-2,-10,6,5,-10,2,-10,7,-10,7,-9,8,7,-4,-8,8,9,6,-9], dtype = "int32")#candidate|4369|(1248,)|const|int32
call_4368 = relay.TupleGetItem(func_3179_call(relay.reshape(const_4369.astype('int32'), [8, 12, 13])), 0)
call_4370 = relay.TupleGetItem(func_3181_call(relay.reshape(const_4369.astype('int32'), [8, 12, 13])), 0)
uop_4385 = relay.sigmoid(const_4369.astype('float64')) # shape=(1248,)
output = relay.Tuple([call_4343,call_4368,uop_4385,])
output2 = relay.Tuple([call_4344,call_4370,uop_4385,])
func_4399 = relay.Function([], output)
mod['func_4399'] = func_4399
mod = relay.transform.InferType()(mod)
output = func_4399()
func_4400 = relay.Function([], output)
mutated_mod['func_4400'] = func_4400
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1684_call = mod.get_global_var('func_1684')
func_1685_call = mutated_mod.get_global_var('func_1685')
call_4404 = relay.TupleGetItem(func_1684_call(), 1)
call_4405 = relay.TupleGetItem(func_1685_call(), 1)
output = relay.Tuple([call_4404,])
output2 = relay.Tuple([call_4405,])
func_4418 = relay.Function([], output)
mod['func_4418'] = func_4418
mod = relay.transform.InferType()(mod)
mutated_mod['func_4418'] = func_4418
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4418_call = mutated_mod.get_global_var('func_4418')
call_4419 = func_4418_call()
output = call_4419
func_4420 = relay.Function([], output)
mutated_mod['func_4420'] = func_4420
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2221_call = mod.get_global_var('func_2221')
func_2222_call = mutated_mod.get_global_var('func_2222')
call_4431 = relay.TupleGetItem(func_2221_call(), 0)
call_4432 = relay.TupleGetItem(func_2222_call(), 0)
output = call_4431
output2 = call_4432
func_4492 = relay.Function([], output)
mod['func_4492'] = func_4492
mod = relay.transform.InferType()(mod)
output = func_4492()
func_4493 = relay.Function([], output)
mutated_mod['func_4493'] = func_4493
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1730_call = mod.get_global_var('func_1730')
func_1731_call = mutated_mod.get_global_var('func_1731')
call_4497 = relay.TupleGetItem(func_1730_call(), 0)
call_4498 = relay.TupleGetItem(func_1731_call(), 0)
output = call_4497
output2 = call_4498
func_4512 = relay.Function([], output)
mod['func_4512'] = func_4512
mod = relay.transform.InferType()(mod)
output = func_4512()
func_4513 = relay.Function([], output)
mutated_mod['func_4513'] = func_4513
mutated_mod = relay.transform.InferType()(mutated_mod)
func_588_call = mod.get_global_var('func_588')
func_589_call = mutated_mod.get_global_var('func_589')
call_4541 = relay.TupleGetItem(func_588_call(), 1)
call_4542 = relay.TupleGetItem(func_589_call(), 1)
output = call_4541
output2 = call_4542
func_4549 = relay.Function([], output)
mod['func_4549'] = func_4549
mod = relay.transform.InferType()(mod)
output = func_4549()
func_4550 = relay.Function([], output)
mutated_mod['func_4550'] = func_4550
mutated_mod = relay.transform.InferType()(mutated_mod)
var_4592 = relay.var("var_4592", dtype = "uint8", shape = (4, 14, 5))#candidate|4592|(4, 14, 5)|var|uint8
var_4593 = relay.var("var_4593", dtype = "uint8", shape = (4, 14, 5))#candidate|4593|(4, 14, 5)|var|uint8
bop_4594 = relay.subtract(var_4592.astype('uint8'), relay.reshape(var_4593.astype('uint8'), relay.shape_of(var_4592))) # shape=(4, 14, 5)
const_4597 = relay.const([[[1,-8,-4,-4,-7],[9,-4,-7,1,-5],[-10,6,6,-2,6],[-4,3,-4,4,3],[1,-3,-10,1,10],[6,4,-5,-1,-7],[2,-6,3,5,7],[9,10,4,-6,5],[1,-7,-5,-5,-9],[5,-4,-10,10,4],[-1,-7,5,-3,8],[-7,9,-4,-6,3],[1,-9,-9,-2,2],[8,7,6,-9,-4]],[[-9,6,5,-4,-8],[6,-5,6,2,6],[-4,-1,2,-6,8],[-7,-9,5,-2,-2],[-6,-4,3,-6,8],[3,6,4,1,6],[7,8,-6,-1,2],[3,-4,-10,6,4],[-7,7,-10,1,2],[3,-3,-7,-6,9],[2,7,-8,-2,2],[-10,2,-2,10,-6],[-3,2,-1,-4,7],[-6,-7,4,-9,-2]],[[4,-2,1,9,-9],[2,5,9,2,5],[-9,8,-4,-5,-1],[-6,1,1,3,-1],[-6,-6,6,-9,9],[8,4,7,-10,-1],[-9,6,-6,-4,-7],[-3,10,4,-5,6],[6,3,4,6,-2],[5,-5,-3,-5,9],[-4,5,-2,-1,1],[-2,-3,-6,6,-1],[10,-2,-6,-7,-4],[5,1,-1,8,-1]],[[-9,-7,-9,-9,5],[-1,-3,-10,-10,10],[-3,9,4,6,-1],[-4,-1,3,3,5],[10,-3,-1,-4,9],[-4,-10,6,-4,-7],[-3,-3,1,4,-8],[2,-7,4,5,8],[3,-6,-4,8,-9],[2,7,6,-3,-2],[1,10,-8,-7,-4],[8,-6,2,-1,9],[5,-9,7,10,6],[-1,-7,-5,7,9]]], dtype = "uint8")#candidate|4597|(4, 14, 5)|const|uint8
bop_4598 = relay.greater_equal(var_4593.astype('bool'), relay.reshape(const_4597.astype('bool'), relay.shape_of(var_4593))) # shape=(4, 14, 5)
bop_4617 = relay.bitwise_xor(var_4592.astype('int64'), relay.reshape(bop_4598.astype('int64'), relay.shape_of(var_4592))) # shape=(4, 14, 5)
const_4623 = relay.const([[[9,-9,-5,-4,3],[5,-6,-1,10,7],[1,-1,4,4,-6],[2,-2,-2,7,5],[-3,-10,-3,-4,-4],[1,1,-10,7,-4],[2,10,8,2,9],[7,-10,-1,-10,5],[3,1,-7,8,-5],[-9,-8,-5,-3,4],[-4,2,-10,6,7],[3,-7,-6,5,8],[-8,-9,8,-5,-10],[-2,1,-10,-8,-10]],[[8,-5,-8,-7,6],[-3,4,1,7,-2],[-8,-3,8,-2,10],[1,3,-10,8,-4],[-7,-9,10,-3,-9],[-5,-9,5,-4,4],[-7,1,-1,-1,-2],[-3,3,-10,-3,1],[9,-8,4,6,10],[-3,4,-9,7,-4],[-6,-8,1,1,2],[-6,5,7,-5,9],[-4,-4,-8,-3,-2],[4,4,-6,-1,-8]],[[6,3,-8,-3,5],[8,-6,-6,-5,7],[-8,7,6,-8,8],[-1,-10,6,-5,10],[-2,-7,-3,1,6],[5,-3,-5,-6,6],[-10,8,1,7,6],[-6,-8,-7,10,10],[9,7,10,1,-6],[9,5,-6,-5,2],[2,10,-3,-2,-6],[-6,-8,5,8,3],[4,-9,-1,-3,8],[8,5,10,4,10]],[[4,2,-10,9,4],[1,-4,-7,3,-1],[-7,-3,-6,10,-4],[-9,6,-10,10,-4],[1,-2,-6,-10,-9],[2,-10,8,-5,-6],[-9,-9,6,-1,1],[1,-1,-9,-2,-5],[-1,-8,-9,9,-7],[5,1,10,5,4],[-7,8,-9,-4,-5],[5,6,-1,2,-9],[6,-4,1,-4,5],[10,4,1,-6,-4]]], dtype = "uint8")#candidate|4623|(4, 14, 5)|const|uint8
bop_4624 = relay.floor_mod(const_4597.astype('float64'), relay.reshape(const_4623.astype('float64'), relay.shape_of(const_4597))) # shape=(4, 14, 5)
output = relay.Tuple([bop_4594,bop_4617,bop_4624,])
output2 = relay.Tuple([bop_4594,bop_4617,bop_4624,])
func_4631 = relay.Function([var_4592,var_4593,], output)
mod['func_4631'] = func_4631
mod = relay.transform.InferType()(mod)
var_4632 = relay.var("var_4632", dtype = "uint8", shape = (4, 14, 5))#candidate|4632|(4, 14, 5)|var|uint8
var_4633 = relay.var("var_4633", dtype = "uint8", shape = (4, 14, 5))#candidate|4633|(4, 14, 5)|var|uint8
output = func_4631(var_4632,var_4633,)
func_4634 = relay.Function([var_4632,var_4633,], output)
mutated_mod['func_4634'] = func_4634
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1234_call = mod.get_global_var('func_1234')
func_1236_call = mutated_mod.get_global_var('func_1236')
call_4670 = func_1234_call()
call_4671 = func_1234_call()
func_842_call = mod.get_global_var('func_842')
func_843_call = mutated_mod.get_global_var('func_843')
call_4680 = relay.TupleGetItem(func_842_call(), 0)
call_4681 = relay.TupleGetItem(func_843_call(), 0)
func_3031_call = mod.get_global_var('func_3031')
func_3033_call = mutated_mod.get_global_var('func_3033')
call_4696 = func_3031_call(relay.reshape(call_4670.astype('float32'), [8, 15, 12]))
call_4697 = func_3031_call(relay.reshape(call_4670.astype('float32'), [8, 15, 12]))
func_2560_call = mod.get_global_var('func_2560')
func_2562_call = mutated_mod.get_global_var('func_2562')
call_4707 = func_2560_call()
call_4708 = func_2560_call()
output = relay.Tuple([call_4670,call_4680,call_4696,call_4707,])
output2 = relay.Tuple([call_4671,call_4681,call_4697,call_4708,])
func_4732 = relay.Function([], output)
mod['func_4732'] = func_4732
mod = relay.transform.InferType()(mod)
mutated_mod['func_4732'] = func_4732
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4732_call = mutated_mod.get_global_var('func_4732')
call_4733 = func_4732_call()
output = call_4733
func_4734 = relay.Function([], output)
mutated_mod['func_4734'] = func_4734
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4492_call = mod.get_global_var('func_4492')
func_4493_call = mutated_mod.get_global_var('func_4493')
call_4748 = func_4492_call()
call_4749 = func_4492_call()
func_588_call = mod.get_global_var('func_588')
func_589_call = mutated_mod.get_global_var('func_589')
call_4758 = relay.TupleGetItem(func_588_call(), 0)
call_4759 = relay.TupleGetItem(func_589_call(), 0)
output = relay.Tuple([call_4748,call_4758,])
output2 = relay.Tuple([call_4749,call_4759,])
func_4760 = relay.Function([], output)
mod['func_4760'] = func_4760
mod = relay.transform.InferType()(mod)
mutated_mod['func_4760'] = func_4760
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4760_call = mutated_mod.get_global_var('func_4760')
call_4761 = func_4760_call()
output = call_4761
func_4762 = relay.Function([], output)
mutated_mod['func_4762'] = func_4762
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3157_call = mod.get_global_var('func_3157')
func_3158_call = mutated_mod.get_global_var('func_3158')
call_4780 = relay.TupleGetItem(func_3157_call(), 0)
call_4781 = relay.TupleGetItem(func_3158_call(), 0)
func_311_call = mod.get_global_var('func_311')
func_313_call = mutated_mod.get_global_var('func_313')
call_4803 = relay.TupleGetItem(func_311_call(), 0)
call_4804 = relay.TupleGetItem(func_313_call(), 0)
output = relay.Tuple([call_4780,call_4803,])
output2 = relay.Tuple([call_4781,call_4804,])
func_4810 = relay.Function([], output)
mod['func_4810'] = func_4810
mod = relay.transform.InferType()(mod)
mutated_mod['func_4810'] = func_4810
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4810_call = mutated_mod.get_global_var('func_4810')
call_4811 = func_4810_call()
output = call_4811
func_4812 = relay.Function([], output)
mutated_mod['func_4812'] = func_4812
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2642_call = mod.get_global_var('func_2642')
func_2644_call = mutated_mod.get_global_var('func_2644')
call_4821 = relay.TupleGetItem(func_2642_call(), 2)
call_4822 = relay.TupleGetItem(func_2644_call(), 2)
output = relay.Tuple([call_4821,])
output2 = relay.Tuple([call_4822,])
func_4825 = relay.Function([], output)
mod['func_4825'] = func_4825
mod = relay.transform.InferType()(mod)
output = func_4825()
func_4826 = relay.Function([], output)
mutated_mod['func_4826'] = func_4826
mutated_mod = relay.transform.InferType()(mutated_mod)
var_4842 = relay.var("var_4842", dtype = "float32", shape = (1, 16, 12))#candidate|4842|(1, 16, 12)|var|float32
uop_4843 = relay.asinh(var_4842.astype('float32')) # shape=(1, 16, 12)
output = relay.Tuple([uop_4843,])
output2 = relay.Tuple([uop_4843,])
func_4850 = relay.Function([var_4842,], output)
mod['func_4850'] = func_4850
mod = relay.transform.InferType()(mod)
var_4851 = relay.var("var_4851", dtype = "float32", shape = (1, 16, 12))#candidate|4851|(1, 16, 12)|var|float32
output = func_4850(var_4851)
func_4852 = relay.Function([var_4851], output)
mutated_mod['func_4852'] = func_4852
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2642_call = mod.get_global_var('func_2642')
func_2644_call = mutated_mod.get_global_var('func_2644')
call_4867 = relay.TupleGetItem(func_2642_call(), 2)
call_4868 = relay.TupleGetItem(func_2644_call(), 2)
func_3978_call = mod.get_global_var('func_3978')
func_3979_call = mutated_mod.get_global_var('func_3979')
call_4881 = relay.TupleGetItem(func_3978_call(), 0)
call_4882 = relay.TupleGetItem(func_3979_call(), 0)
output = relay.Tuple([call_4867,call_4881,])
output2 = relay.Tuple([call_4868,call_4882,])
func_4883 = relay.Function([], output)
mod['func_4883'] = func_4883
mod = relay.transform.InferType()(mod)
mutated_mod['func_4883'] = func_4883
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4883_call = mutated_mod.get_global_var('func_4883')
call_4884 = func_4883_call()
output = call_4884
func_4885 = relay.Function([], output)
mutated_mod['func_4885'] = func_4885
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1782_call = mod.get_global_var('func_1782')
func_1784_call = mutated_mod.get_global_var('func_1784')
call_4979 = relay.TupleGetItem(func_1782_call(), 1)
call_4980 = relay.TupleGetItem(func_1784_call(), 1)
output = relay.Tuple([call_4979,])
output2 = relay.Tuple([call_4980,])
func_4984 = relay.Function([], output)
mod['func_4984'] = func_4984
mod = relay.transform.InferType()(mod)
mutated_mod['func_4984'] = func_4984
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4984_call = mutated_mod.get_global_var('func_4984')
call_4985 = func_4984_call()
output = call_4985
func_4986 = relay.Function([], output)
mutated_mod['func_4986'] = func_4986
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3308_call = mod.get_global_var('func_3308')
func_3309_call = mutated_mod.get_global_var('func_3309')
call_5057 = func_3308_call()
call_5058 = func_3308_call()
output = call_5057
output2 = call_5058
func_5076 = relay.Function([], output)
mod['func_5076'] = func_5076
mod = relay.transform.InferType()(mod)
mutated_mod['func_5076'] = func_5076
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5076_call = mutated_mod.get_global_var('func_5076')
call_5077 = func_5076_call()
output = call_5077
func_5078 = relay.Function([], output)
mutated_mod['func_5078'] = func_5078
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3308_call = mod.get_global_var('func_3308')
func_3309_call = mutated_mod.get_global_var('func_3309')
call_5079 = func_3308_call()
call_5080 = func_3308_call()
output = call_5079
output2 = call_5080
func_5082 = relay.Function([], output)
mod['func_5082'] = func_5082
mod = relay.transform.InferType()(mod)
output = func_5082()
func_5083 = relay.Function([], output)
mutated_mod['func_5083'] = func_5083
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5082_call = mod.get_global_var('func_5082')
func_5083_call = mutated_mod.get_global_var('func_5083')
call_5087 = func_5082_call()
call_5088 = func_5082_call()
func_4883_call = mod.get_global_var('func_4883')
func_4885_call = mutated_mod.get_global_var('func_4885')
call_5094 = relay.TupleGetItem(func_4883_call(), 0)
call_5095 = relay.TupleGetItem(func_4885_call(), 0)
func_3103_call = mod.get_global_var('func_3103')
func_3105_call = mutated_mod.get_global_var('func_3105')
const_5112 = relay.const([2.076310,3.812716,-6.641946,-0.385094,5.905715,-3.761232,9.804475,-6.243830,6.538205,-4.872728,-6.847496,8.042577,9.929911,0.195824,4.582552,7.405840,1.961054,-2.485892,8.957997,-1.137407,-2.390165,2.841369,-9.742365,-2.591628,4.237805,1.521269,-9.443359,-0.754207,-7.238391,-2.903384,0.236509,-4.812091,-4.409295,-9.612641,8.858453,1.471616,8.547608,8.181290,-1.386674,-5.851627,2.602290,7.093155,-2.017975,3.869391,-1.131762,-6.534731,-2.601564,-4.547402,3.499582,-4.326916,-7.275713,-5.909826,0.343557,8.990824,-9.051032,2.621775,4.017319,0.114029,9.045376,-9.235767,7.851008,7.593291,3.155288,-4.224779,-4.658159,-5.443158,-3.712559,-7.989282,-2.643364,2.922770,6.687160,-0.433533,-2.898301,8.866180,6.741857,9.329712,-4.506679,-5.439103,-5.915222,4.307897,5.709285,2.243818,-7.786599,0.395828,-2.387457,8.759304,-8.936698,-6.354872,-6.406840,-6.337560,-0.604852,-3.680937,-4.603920,-0.768943,4.565984,5.220735,3.448797,0.078122,-6.506654,7.091502,4.902770,2.278608,-4.431095,-2.329524,7.270108,-9.146718,-7.763994,-2.777178,3.336952,-6.527081,-5.097751,-2.260680,-1.262785,-6.472517,-5.703152,3.760071,-7.191747,8.661348,8.867565,9.267193,-1.057351,-1.515587,-6.777573,1.471291,7.349018,6.148471,7.942928,-6.989018,2.752806,0.562469,-3.681737,8.057837,7.659800,3.443758,0.230252,7.080056,8.650971,-0.449888,-9.604850,7.178214,5.544820,-8.763045,-9.978432,8.649859,8.488347,-6.100161,5.198499,-5.587565,-9.770083,6.715669,1.022572,-1.849258,-6.264195,-2.305484,-2.520530,0.825676,-5.604068,2.055904,-9.323152,-7.153188,9.623355,6.611784,6.549804,9.523101,6.348892,1.013381,6.699658,4.168102,-1.386115,-1.113486,-8.574846,9.229687,8.604620,0.959257,7.353696,7.950251,-6.817165,8.784074,2.450353,-1.225583,-1.199593,3.782220,4.866851,5.763057,-4.297439,-5.763027,6.220275,-6.589526,-0.968489,-4.605795,2.308607,-2.077342,-3.827346,8.886026,-9.994839,5.371985,7.360154,-9.699426,4.695597,7.818516,-6.417481,-8.401390,1.313280,-9.575698,9.993849,4.732406,4.773883,-2.646793,1.997502,8.714720,3.718281,-7.981203,8.564854,5.161125,0.875154,-5.501124,5.253476,3.406728,5.362824,-6.984320,9.425395,-7.588095,-1.121431,-3.209644,-4.237181,7.055898,-5.989059,4.520038,6.509110,6.766042,5.965808,-3.008126,-3.347279,3.696236,9.806574,-4.842440,7.938775,7.140445,-4.625329,8.965007,5.173753,-5.936283,9.874683,9.006728,9.351542,6.223810,1.956639,1.536296,0.531657,2.674741,-9.237697,7.649869,-7.676795,0.591308,0.297521,-6.597914,-8.635527,-1.891366,-1.788848,-4.839935,-0.213626,-4.317448,2.958159,-5.596101,-9.382627,3.113638,0.564725,-2.809090,-0.289064,-2.943049,-4.591611,-7.633158,-1.689794,-8.739809,7.969796,-2.685621,-7.807585,2.036958,-9.615231,4.779196,6.908761,5.354207,7.863790,3.352182,-5.748161,0.788066,-4.724458,7.039976,9.539887,8.857436,-0.349933,-7.402334,-5.109696,-5.883298,7.704897,5.283967,-1.415115,-3.075198,-5.052390,5.920323,1.391860,8.681525,2.085235,-8.163356,2.001462,9.762752,2.195579,-5.791285,3.022474,-8.392574,-8.390666,0.722091,7.672532,6.170337,2.227686,-8.227453,7.675867,-6.523069,-3.048908,3.965064,-8.156946,7.419673,4.454150,8.758515,-2.744102,7.658057,9.586788,8.475017,-6.287486,-4.811160,-9.820339,1.651626,7.613216,-3.105533,-5.537420,2.736829,-4.326363,5.202709,-8.418180,-6.555992,-5.290209,-5.964166,-7.492653,-5.511881,-2.614830,3.451379,2.217959,-3.642118,-2.420707,-8.508242,1.278356,-5.047633,-3.105323,3.641122,-1.149398,6.865212,8.951208,9.507458,-2.698533,1.743244,-6.215325,3.018566,4.146730,-7.042913,-0.979959,-7.888261,-0.118286,1.291669,-9.307418,-7.975909,-8.044098,-9.264090,5.103459,7.822011,9.643905,-1.672068,1.942122,-1.972000,2.532082,4.492101,6.120199,4.903089,-1.329216,3.142651,8.814082,5.436797,0.013437,-9.562261,3.440878,-7.964079,-4.061398,3.134128,-2.169247,-9.861226,-3.321323,0.150969,5.786110,-3.168819,9.701758,9.300755,9.544620,-2.058169,-8.902055,1.369356,7.376294,-6.215059,-3.385374,7.831432,2.523798,-9.727418,4.669077,-7.881120,7.177846,-3.235836,-1.702779,4.013949,5.749796,-4.418560,-4.456900,2.917409,-2.419232,2.499509,7.718503,4.092088,-1.252442,1.291810,-2.483400,4.577862,-2.261638,-8.745350,2.943795,-3.671306,-8.346767,-7.264250,-1.317462,-6.621437,8.126248,0.080652,-1.797422,-9.615344,-0.834623,3.022004,8.331891,-0.123817,-3.234240,-9.696889,1.296217,-3.154114,4.951081,-6.127726,9.868113,-1.859668,7.578910,1.963742,4.311614,-6.803598,0.154392,-4.811530,-4.203863,-8.156413,6.874693,-2.766904,5.656542,-5.760796,9.411697,-7.610275,2.017685,-3.921898,-3.424858,1.743914,8.811838,-2.655161,4.123449,3.860337,4.073976,-6.569798,-0.832749,6.650996,-3.643216,-7.512547,3.431933,-6.978479,-1.141261,1.406706,-6.701335,-1.446358,-9.575182,7.628177,5.172286,-4.793620,-1.018105,1.317684,1.983382,2.622711,3.277422,-1.868624,-8.513180,8.312306,9.337141,-6.612692,2.517924,6.672018,9.906718,5.176473,0.736360,3.844570,1.347042,-2.036587,-9.566672,-6.233108,1.356551,-4.939319,1.054161,-8.004863,-2.115916,-4.993691,8.896280,1.993071,-4.902920,7.601666,-3.225611,-2.473500,-9.083965,4.305520,-5.753392,-1.426860,-8.449778,9.118392,-2.470288,-8.645943,-7.517528,2.091605,-9.650647,-7.458429,1.879708,-3.264596,6.268627,8.298989,3.693303,-2.793852,-6.923731,7.187259,9.761349,-3.923652,7.859470,-8.802944,-9.513918,9.301497,-9.841212,8.471848,-7.739716,-7.690944,-5.868413,0.731035,-8.053686,1.717751,-2.315589,7.511650,-7.826691,5.750934,-9.270335,9.839465,6.952062,6.549416,3.429354,-7.576512,-1.805775,5.080052,-3.482202,-5.856395,-7.231364,-5.892274,-8.476407,-6.553617,0.418816,-0.861096,7.466586,-4.812023,4.257398,-8.455932,4.462343,-4.903442,4.002455,-6.307145,-2.820178,-3.846906,4.562667,2.079253,-1.576568,-6.503313,3.765437,1.008354,-0.044531,-7.691277,3.649668,-0.469711,8.185705,-1.773594,-7.785423,-5.545103,5.971383,1.561836,6.784958,6.326795,-9.188822,-3.621891,-4.692272,-2.026432,8.659982,-1.927082,-3.721871,4.913752,7.668145,-6.049994,3.337456,-4.741989,-4.509061,8.570968,-5.426988,2.563934,-1.827303,8.393900,-0.030350,4.111323,-7.854707,-6.759749,3.319898,-5.818678,-0.260795,-6.607824,3.705689,-7.531981,1.223279,-0.514821,-9.861331,-6.365917,4.565861,-4.902308,-0.713325,4.626017,7.824107,8.097304,-1.248629,-1.268305,-6.416397,-9.119777,1.734293,0.979352,-8.999661,9.807721,-9.626830,5.943285,4.187718,2.230864,6.392841,-3.957917,-6.090140,1.183014,7.056000,2.888021,6.693055,3.755158,2.252104,5.288282,-3.296102,-4.535374,-0.484552,-1.237345,1.984611,4.180557,4.695717,-9.549817,9.739470,-0.018570,2.955466,1.387680,4.139106,9.260954,7.897183,-8.386455,9.432437,-9.369315,-4.312972,4.106349,-5.408471,-8.777506,-3.477496,-8.596427,5.950271,-5.354933,-7.664365,4.525296,1.813972,-8.273775,5.243997,-6.550317,-5.578801,-2.398485,-9.800573,-6.792910,0.329243,-1.009924,0.131653,2.258677,6.585261,3.026539,6.479769,0.927315,-1.881965,-2.019276,-3.590446,-5.010316,2.429289,4.095000,3.725659,3.545028,-1.397856,-6.955405,-5.674720,-5.341878,-8.747777,9.141438,-1.197144,-9.569307,7.270952,-7.728842,3.908365,-2.195855,-7.556607,-4.440700,4.337135,-0.022244,2.543765,-3.644438,-1.711893,7.127892,-4.162783,9.614667,3.576466,7.743507,-4.060228,-7.970678,2.704327,-1.860945,-5.211600,4.502221,-2.823147,-4.728180,-5.603508,8.145308,1.581051,0.953222,-9.939060,3.670557,-9.187439,-8.983269,-5.021094,2.679018,9.874041,4.856612,-9.400480,8.083159,-4.086595,1.906025,-2.811460,-5.456057,5.225787,-7.244738,-0.274556,-9.686747,-7.841539,9.257064,3.051641,-0.688350,-7.144926,9.451953,-4.340692,-0.690621,-1.190796,-0.319676,-2.354182,-7.815029,-2.328180,5.889365,-1.320258,-6.965975,-4.226605,-3.226891,-5.207257,-2.797679,-1.895895,1.170699,9.627109,-9.616766,1.776835,-3.778565,1.232102,-1.362154,9.044249,-0.535965,3.613874,1.344980,-5.720003,7.716543,-2.756568,2.438807,6.441632,-0.665383,-8.772116,-7.009390,6.834190,-9.478167,-4.372445,-0.582692,-0.484641,8.872751,0.906250,-4.941216,-0.045736,-0.819827,8.505499,-1.638386,3.732015,2.938267,3.944573,9.928736,1.187465,8.009273,-0.877937,0.476444,-0.909625,-8.659676,9.427223,6.784359,3.997559,8.054953,7.994031,5.510571,-1.391749,7.322957,5.441381,-8.078248,-0.322278,-9.797399,0.349266,7.036106,-8.031456,-8.737678,-2.809384,-7.447199,1.864682,8.386035,3.592957,1.642601,8.067312,9.268470,-8.424978,1.593065,2.635311,0.048829,-3.651073,-8.833089,8.348810,-3.248404,-0.861247,9.110186,-2.527234,-3.698926,4.752310,3.934111,-7.856021,1.198561,-8.252353,4.146245,-3.720348,1.417665,-0.178532,-5.653908,-0.211590,6.438861,5.782793,-3.861927,3.573107,9.755927,5.884076,-4.739791,6.742290,-1.810132,-3.472258,5.739206,-5.679245,0.623884,-9.114667,-9.708552,1.336199,1.658346,-4.783770,-4.172776,-8.806473,1.132575,4.182873,-7.893154,6.526535,-0.994228,-5.096055,3.972016,-2.031039,3.519327,-9.340689,5.123348,-3.122537,-9.887092,2.678736,-9.669527,-1.009542,4.912203,6.258083,-9.009750,-9.386320,9.647172,-0.793804,6.561900,9.504174,7.294051,8.825808,9.390545,7.301472,-9.666320,4.921879,-5.910293,-2.376394,2.154705,1.505276,9.690594,-1.331558,4.093305,5.837229,-0.902270,2.753375,-2.453988,-5.076284,-5.211033,2.415036,-6.331864,-2.676596,-5.047977,-3.335584,-9.806003,2.001515,2.536307,-7.170860,-5.771880,-8.013498,0.994368,-1.474691,-0.274077,1.706475,-8.555076,6.705252,0.647698,6.106969,8.912546,0.565512,-3.671807,6.340045,6.854299,-7.496679,1.380138,-3.263853,-7.103953,-3.572952,3.453461,-7.403040,-2.342903,8.722254,2.217961,8.838477,-4.278403,-4.270070,9.742193,1.732454,-1.245582,-4.747207,-1.637531,-6.306466,2.693740,1.185425,-3.718009,-1.587352,5.851348,3.177784,-9.840051,4.962161,4.816236,8.956409,5.122886,1.590534,-4.952645,8.604889,-9.583362,-4.667630,-4.584680,0.403024,5.204685,9.693558,8.889326,3.892863,3.337935,-6.559580,-8.346211,5.995686,-9.489902,6.203800,-8.600360,1.416466,-8.556991,-8.513135,9.322751,-7.981432,4.461251,-5.964694,-8.655204,4.115232,-4.710563,-1.672097,0.610381,7.536340,6.758747,5.031093,8.265936,-7.518203,-3.431895,9.430686,-4.551662,-1.538035,2.648134,-9.491124,-9.727642,-8.268328,-9.282615,5.086160,-8.063392,6.278376,-7.165715,-7.738789,-1.865444,6.121172,3.122909,-5.640853,-8.224719,-3.669317,7.227907,0.617979,-2.847385,8.492338,8.408478,-2.628214,8.043047,7.094076,-6.783076,3.035435,-8.625512,5.261953,4.803968,-6.340454,-8.310386,-3.372188,9.997977,0.843415,5.973664,-5.554707,-8.125001,-8.190886,4.904498,6.421984,0.550520,-2.132313,2.654121,-7.907154,0.896436,2.847528,6.172059,-0.482078,8.456218,-2.929178,-5.299549,7.083454,0.082694,-2.946727,4.782907,1.056327,-1.181044,5.274113,7.367359,0.596013,-3.118557,2.995866,-8.893017,-5.775259,7.922443,-1.046899,-7.201326,-4.409574,0.188115,-0.744895,-3.824261,-9.651697,5.209399,8.171997,2.821343,6.757362,7.338934,5.068433,-6.944041,2.544846,-8.014385,7.717285,-7.662484,-4.753566,-7.448760,-6.273492,-7.133716,-2.149052,-6.320487,6.989863,-6.410973,4.354441,5.435797,5.414258,9.902599,2.741865,-9.947577,-1.056659,9.082609,-7.376628,2.154774,-7.279794,8.233882,4.793161,-9.307059,8.786340,2.195284,-6.585741,8.217934,6.015429,1.249880,-4.998048,8.485561,-8.982878,-8.703235,6.321019,2.171017,9.097292,-3.726805,3.513192,7.345412,3.096232,3.170830,3.011231,4.234189,0.188673,-5.070580,-6.236272,-1.296574,-8.273133,0.126653,-4.873961,7.256055,-4.696892,-4.201174,1.522229,-5.555970,6.402023,-6.939321,9.374527,4.921832,-5.892863,-4.497630,3.261848,2.824230,6.927874,2.649450,-1.876725,-9.936547,-3.151394,-8.715329,-8.743530,-4.694888,-2.567141,2.894679,-7.042913,9.327782,-2.726568,6.221279,-7.935042,6.862124,-1.091281,-8.958713,0.097401,1.609672,0.861104,7.895009,-2.968113,8.469203,9.297242,-2.507045,2.222176,-6.576451,-1.107440,-4.368360,9.559525,-1.767038,-9.364629,-4.652680,6.262830,-5.513784,3.579707,6.864030,6.211023,-4.262799,6.700246,4.526081,-4.168490,-4.881864,2.311025,-0.161692,-6.992771,-9.105722,2.427064,-7.799223,-4.024688,3.209708,0.726753,-4.636873,-9.614323,9.806589,9.061957,-3.725701,-0.156155,-9.377836,4.282143,-5.652322,-1.146245,4.807599,6.249241,-6.166351,-6.747909,5.236948,-1.233427,-3.340784,9.900451,-7.621402,-9.756151,-2.466510,4.708384,0.471655,3.399935,-5.155853,-8.971714,0.750034,-3.741536,-4.497543,-7.073293,-4.565206,7.747165,3.364204,-8.322450,7.154340,-6.736621,5.222100,0.437667,3.464918,2.210028,-2.001303,3.789057,3.115613,3.998782,-3.636516,-8.054939,9.065417,4.402732,-1.298267,-3.417082,2.685141,5.712197,4.344510,9.891887,-8.859999,-7.732810,-5.211279,-7.394623,4.579830,6.251225,6.751219,-3.958390,0.719717,0.398639,9.889175,-9.438439,7.995328,-4.402188,-2.187521,3.020347,-3.744984,7.819922,4.292759,-8.472395,5.147375,-0.963061,7.475942,1.009678,-2.075890,-0.953101,3.186538,-4.944785,0.839591,1.795500,-3.848589,-9.213709,-7.330321,-8.725276,7.461247,9.355234,-8.351694,-3.661550,-0.822443,0.797290,-7.648539,7.763297,-3.228557,-7.168111,-3.532755,4.384460,-0.936907,4.534854,6.965550,-0.515993,-4.904033,0.372580,6.940328,3.280528,-3.027853,0.111287,-7.326514,-3.134997,-9.711546,-4.193336,-6.697923,-7.542897,8.801543,1.634524,1.391952,-7.454719,5.590670,-0.795361,8.510476,9.860558,-1.385775,-7.127047,7.756680,9.405460,-6.333911,-5.208930,4.511663,3.493128,-0.758378,6.860074,6.002128,6.189775,-9.251489,2.497738,8.265529,1.787871,7.023894,7.155658,-0.971872,6.298748,-9.088539,8.469547,-6.917991,8.334653,9.023573,-1.134380,-4.565972,-9.452019,6.351975,-5.310511,-4.809399,7.875634,5.770635,-4.251898,4.409344,-1.059279,1.056543,-7.876566,9.712320,-0.162421,-5.899397,4.984831,-4.584956,4.067019,7.352909,9.632831,8.638049,-5.869482,0.079885,-8.679124,-9.500430,-7.965015,-4.766269,0.270490,-4.161461,2.358737,-8.863267,9.728508,-0.450641,-8.507026,-5.488964,9.859593,-5.313178,4.169770,-3.980625,2.292297,-2.744356,-6.924396,-3.161645,-8.993672,6.198203,4.122448,-2.425638,-2.711780,-1.715085,4.880020,-9.777569,-2.070439,-4.104243,-6.568026,-9.708068,4.546669,-6.897590,3.288215,4.300288,1.623535,3.676183,-3.776830,-9.119451,-8.351634,8.998115,1.457566,-0.231442,8.901112,6.874437,0.903074,4.380841,6.777243,-9.027924,-5.057780,-6.294209,-0.247739,-7.245244,-3.509464,-0.295905,6.216218,-4.352700,9.476838,7.508151,5.709015,3.577037,-0.666792,6.722219,-8.716311,-0.431358,9.375625,-5.019020,7.963755,-3.894212,6.112889,-3.315071,-2.869875,-6.323678,-3.781200,-0.071535,-2.353583,-3.765226,-7.065400,-0.697762,-7.579554,2.396349,-1.864106,9.460343,8.901394,1.638956,-5.479909,1.914373,-3.138281,5.619431,8.367791,-2.472038,8.423794,-4.241486,-9.510684,-6.424936,-2.606408,-7.007125,5.116367,-7.028286,6.698104,-2.860466,7.041531,-0.395979,9.017875,-7.070432,-6.232496,-2.691812,-6.077026,0.823539,-2.775878,0.485067,-0.863014,3.780597,7.454958,-0.366388,8.992595,7.411491,-6.452757,-3.528051,0.960224,3.887574,2.635928,8.063543,-7.364613,-0.557179,-7.376610,7.595869,4.113598,-8.337602,-4.491340,4.794598,9.229663,1.480377,-3.169108,9.982825,-4.286792,7.495954,1.135077,0.066744,-2.873865,-9.281771,3.928080,7.465287,-6.626272,-2.954941,-2.008553,-9.010885,-4.516266,1.020436,4.993126,-0.896214,1.416329,9.021181,-2.072896,0.076379,-4.593796,2.955322,4.742013,-8.081703,-7.031231,8.835683,-2.897644,9.669844,0.654711,3.636074,4.258585,-6.977997,-6.648229,0.783669,9.660667,8.357071,-2.182352,8.936614,2.516462,9.287376,-4.026261,-1.061396,-3.896899,2.897346,-9.337569,-3.730729,-4.165080,3.297457,-8.633731,4.314786,6.512640,1.497049,9.384976,8.133020,-9.468132,3.300719,6.876052,6.627320,2.322088,7.868132,-9.167400,7.835669,8.748109,1.602212,-3.688686,8.933150,5.481635,8.751131,9.472870,9.106369,-6.226678,5.892430,-6.828959,8.861826,4.663047,6.491445,7.737204,4.183827,9.583484,-6.844925,8.499956,4.719664,2.461909,-7.354554,-9.325263,-3.918800,-4.182732,-1.756655,9.163693,-8.627184,5.273500,-9.061507,-4.437263,3.925810,-2.852033,5.824443,0.931270,-5.831780,-1.429001,1.994211,-5.033459,4.507023,9.043720,4.973152,7.405792,-3.468625,7.659777,6.790825,-8.696937,-6.680541,6.085703,-2.767091,-5.188691,5.886462,4.889317,8.931870,-5.175073,-1.206325,5.673516,-7.367968,5.689304,6.384695,4.049331,2.479153,2.910294,-4.624531,1.014339,6.528554,1.757820,-4.861149,9.861453,-4.430214,-0.087639,-6.348851,-6.931672,2.857416,0.875009,6.045484,2.315210,-1.596725,-8.670633,9.932598,0.731368,8.377822,9.335997,-2.900658,-4.014024,1.317105,6.923146,-2.679527,-9.248753,-8.319335,-4.371405,0.776924,-9.522873,-4.171020,-1.665508,-5.711881,-7.544472,3.390062,-3.501305,-3.387750,-2.253581,6.682798,9.168208,-9.145212,6.811882,6.664015,-5.345377,-2.378605,-6.536059,7.627182,-8.794009,7.211993,8.639686,3.217632,-8.392463,-3.164816,1.582051,-4.301584,6.519452,-7.153424,3.053906,-5.578732,-0.941695,-0.197965,4.538863,-2.149132,-3.852015,-5.816182,-1.938560,9.650409,-2.791742,9.631432,3.762222,-4.501776,-7.035672,-8.982932,9.080146,4.092006,1.494201,-2.037223,3.546471,-6.805444,-0.128366,-0.362160,-8.599376,9.532094,2.098176,-3.327077,8.673558,-6.809777,-8.444592,2.214466,1.597684,8.584901,2.063666,-5.122952,-0.552304,-7.544310,8.701918,6.395506,-8.924049,-6.255402,-4.252259,-2.521417,-4.784737,6.754400,2.126540,-5.178936,-4.026080,7.404963,3.181475,-4.587059,1.863878,3.726955,8.684479,-5.507831,4.799217,-4.538232,-4.829080,1.382592,2.320767,5.979021,-9.185443,3.628956,1.660549,-1.886282,-9.509918,3.363629,9.683833,5.536774,1.568625,-5.444177,-3.655174,-8.129613,5.378169,7.712629,7.701181,-3.460026,-6.792153,-0.412227,-5.363674,9.614613,1.741025,-3.278607,1.726725,-5.220195,-3.706706,9.257758,4.703904,2.401895,-9.476275,8.476902,0.082284,8.732853,7.566658,4.425512,-0.031812,0.511573,4.961055,-0.099587,3.388147,-4.692850,9.801284,-5.529663,9.802915,2.445235,5.965638,2.745457,-0.190896,-9.132382,-0.177067,-8.085860,-0.846851,8.852738,2.742688,-0.545411,-6.503489,-8.702379,7.931405,-4.031388,-3.386024,-7.451625,-0.633783,-8.446785,-5.848906,-8.648812,3.337469,5.138393,-8.813768,4.016128,-6.359141,-4.176386,-0.784967,-5.481134,-7.561193,4.535504,-3.199930,-1.792470,0.080985,-6.362953,9.499530,1.227216,5.067449,1.487345,1.177522,7.805864,-3.968995,-9.530988,8.481689,-3.993551,1.397986,-8.160446,7.664139,-2.826243,-5.407306,-9.739389,9.894564,-5.762827,-1.782294,0.049078,-9.255971,9.563217,-6.842856,-6.458810,-6.964099,5.807570,-3.807176,-3.109478,-8.249053,-6.958813,3.819291,3.417951,-2.681090,6.959258,7.590160,-6.103059,7.397810,-1.362337,2.927099,5.398302,-3.945795,1.666577,5.099673,-1.738275,-2.034200,-7.970864,-9.797984,7.255726,6.381987,0.326168,7.977463,-8.446488,-1.788105,-0.741048,5.102119,8.561353,2.068774,-6.455969,-5.393507,-1.134514,-7.841251,-4.276820,-6.111168,6.164300,-2.143566,-3.418740,7.456640,2.493109,-1.160549,4.535923,3.828224,4.136996,-3.891532,2.157399,-5.201684,7.708043,-1.271982,5.274959,0.613611,-2.281669,-3.734081,8.945919,-8.603779,9.747334,8.309311,-0.640561,1.790348,1.529592,-2.064327,5.403596,-9.703690,4.120959,-7.467090,-1.300860,0.022481,-9.788728,8.965177,4.988853,-5.577242,-9.836795,-8.982122,-2.483920,-4.595536,3.760734,4.727777,-3.533361,3.184251,-3.824380,-8.569854,-1.082211,-3.227611,3.575155,-3.142829,1.611932,5.761404,-1.388659,-1.326076,-8.678902,-4.633328,4.585065,-5.186752,-6.489275,5.524697,9.628655,4.220595,-7.096342,-4.239260,4.149839,-8.082236,4.857656,9.448520,8.240939,2.347540,-8.115915,6.343588,8.753265,3.621666,-8.873954,-5.582757,8.615721,9.897940,2.382676,6.544627,-0.593608,4.217097,-6.358947,-3.758059,7.512578,8.920483,0.770506,8.935025,-6.933438,-1.299818,-7.738779,-8.589535,-7.026196,5.873494,-6.915661,0.427920,-1.700821,-0.925225,0.102179,2.754219,-2.805623,-1.644391,0.494304,-3.805110,9.581158,-6.324134,-0.632368,1.394531,-3.268667,-8.949111,9.073283,-6.795476,3.738258,-6.681647,0.721590,5.175001,-0.511118,4.993764,2.871778,1.090728,1.057139,-3.199056,8.395735,-4.510041,-4.055459,-4.118440,-7.655031,-7.632924,5.837099,-0.482880,-3.625338,8.984007,-7.298920,-9.399975,-5.821711,-8.711338,-3.795467,8.916289,-4.110553,4.004970,3.148179,-2.298206,-3.649476,8.293608,-2.871730,-6.148114,8.691716,1.781496,9.731130,3.081623,-9.053237,5.985574,3.969776,-1.147069,-8.930670,-6.560619,9.101375,-1.112259,7.546780,5.085049,0.352139,-3.016891,1.387440,-8.633120,-3.326354,9.129204,5.856906,3.105707,4.908689,-4.074486,7.421048,8.030263,-8.079063,7.155770,7.505836,0.868949,-3.788661,4.094320,0.305273,-6.678234,-1.436860,-2.138418,-1.001774,-7.343008,4.106031,-2.017248,3.388502,2.253872,6.858959,-8.097967,-3.513169,7.907048,0.230704,-3.446018,6.145925,-8.868405,-1.664667,6.533350,-7.854650,7.158106,8.527441,8.765686,2.964582,-0.700260,9.450064,-1.002167,-7.302581,-4.437554,-6.032633,-2.746495,-1.304644,9.835729,-5.549366,6.057546,-1.256491,-1.756822,-3.692473,5.726553,7.207722,-5.427930,-1.490285,-4.380109,8.737057,-9.361190,1.269908,8.862070,-3.350700,1.029483,3.220559,1.143178,3.907104,0.155639,9.046171,0.132362,-3.849736,5.746047,-0.911443,7.637190,2.882613,-8.158100,9.738786,-4.861549,-1.664118,-4.617068,-5.420346,-9.639762,3.754455,-7.879748,-2.912916,5.579971,2.887091,6.558888,-2.410293,6.732761,-6.890807,4.365137,2.034067], dtype = "float32")#candidate|5112|(2184,)|const|float32
call_5111 = relay.TupleGetItem(func_3103_call(relay.reshape(const_5112.astype('float32'), [12, 14, 13])), 0)
call_5113 = relay.TupleGetItem(func_3105_call(relay.reshape(const_5112.astype('float32'), [12, 14, 13])), 0)
func_2401_call = mod.get_global_var('func_2401')
func_2402_call = mutated_mod.get_global_var('func_2402')
call_5126 = func_2401_call()
call_5127 = func_2401_call()
output = relay.Tuple([call_5087,call_5094,call_5111,const_5112,call_5126,])
output2 = relay.Tuple([call_5088,call_5095,call_5113,const_5112,call_5127,])
func_5131 = relay.Function([], output)
mod['func_5131'] = func_5131
mod = relay.transform.InferType()(mod)
mutated_mod['func_5131'] = func_5131
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5131_call = mutated_mod.get_global_var('func_5131')
call_5132 = func_5131_call()
output = call_5132
func_5133 = relay.Function([], output)
mutated_mod['func_5133'] = func_5133
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3657_call = mod.get_global_var('func_3657')
func_3659_call = mutated_mod.get_global_var('func_3659')
call_5136 = relay.TupleGetItem(func_3657_call(), 3)
call_5137 = relay.TupleGetItem(func_3659_call(), 3)
output = relay.Tuple([call_5136,])
output2 = relay.Tuple([call_5137,])
func_5145 = relay.Function([], output)
mod['func_5145'] = func_5145
mod = relay.transform.InferType()(mod)
mutated_mod['func_5145'] = func_5145
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5145_call = mutated_mod.get_global_var('func_5145')
call_5146 = func_5145_call()
output = call_5146
func_5147 = relay.Function([], output)
mutated_mod['func_5147'] = func_5147
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1234_call = mod.get_global_var('func_1234')
func_1236_call = mutated_mod.get_global_var('func_1236')
call_5150 = func_1234_call()
call_5151 = func_1234_call()
output = relay.Tuple([call_5150,])
output2 = relay.Tuple([call_5151,])
func_5164 = relay.Function([], output)
mod['func_5164'] = func_5164
mod = relay.transform.InferType()(mod)
output = func_5164()
func_5165 = relay.Function([], output)
mutated_mod['func_5165'] = func_5165
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2238_call = mod.get_global_var('func_2238')
func_2239_call = mutated_mod.get_global_var('func_2239')
call_5173 = func_2238_call()
call_5174 = func_2238_call()
func_17_call = mod.get_global_var('func_17')
func_19_call = mutated_mod.get_global_var('func_19')
call_5177 = func_17_call()
call_5178 = func_17_call()
output = relay.Tuple([call_5173,call_5177,])
output2 = relay.Tuple([call_5174,call_5178,])
func_5192 = relay.Function([], output)
mod['func_5192'] = func_5192
mod = relay.transform.InferType()(mod)
mutated_mod['func_5192'] = func_5192
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5192_call = mutated_mod.get_global_var('func_5192')
call_5193 = func_5192_call()
output = call_5193
func_5194 = relay.Function([], output)
mutated_mod['func_5194'] = func_5194
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4328_call = mod.get_global_var('func_4328')
func_4330_call = mutated_mod.get_global_var('func_4330')
call_5252 = func_4328_call()
call_5253 = func_4328_call()
func_2245_call = mod.get_global_var('func_2245')
func_2248_call = mutated_mod.get_global_var('func_2248')
const_5255 = relay.const([-6,-8,-4,2,-9,3,-7,1,-1,-2,8,8,-3,-8,-5,-8,5,1,4,-7,8,-3,4,8,9,-6,4,-1,-6,-5,-7,-1,-10,4,-6,8,-5,-6,-7,2,8,4,-4,8,-3,-3,5,-5,-4,10,-1,3,9,5,-8,5,7,-8,4,2,-1,2,-7,-3,-7,3,1,-6,-7,-8,1,9,-3,-10,-4,-6,7,1,4,-7,6,1,-5,-10,9,7,1,8,4,-3,-10,3,9,-1,9,4,-7,-3,-1,7,10,1,-2,7,9,-6,1,6,5,-2,7,-10,-10,-7,7,-4,7,-10,4,-5,-7,2,2,7,7,-4,5,9,8,-8,-9,3,8,7,1,7,-4,-8,-8,8,4,2,-7,-7,-8,-1,9,-4,-7,1,4,-8,8,9,-10,-5,-10,-6,-9,-5,9,-3,1,-7,8,-6,7,-3,9,5,10,6,9,6,-6,-5,8,-5,-5,5,2,8,-5,-6,-4,4,3,3,-3,-9,1,-5,-2,-5,-3,-10,4,-4,-10,1,-3,7,4,-7,-8,-5,-2,5,-9,9,-3,-6,-9,-5,-3,5,1,2,-2,2,7,9,8,-3,6,-10,3,7,-8,-2,-7,7,-9,-5,9,-10,-7,-8,-3,-5,-3,2,-2,-7,-9,1,6,-8,-4,3,-10,-2,2,-3,10,-5,-2,-8,-6,-7,6,3,-4,6,-3,3,-1,-2,6,-7,-3,9,1,-4,-6,4,-6,3,-9,10,-7,-7,10,1,-5,2,3,7,-1,-5,-9,9,7,7,-3,1,-10,8,8,-5,8,-4,9,8,-2,6,-1,1,9,7,-5,-1,9,-6,-7,-1,-10,-9,-8,-8,-10,-4,-3,1,2,-3,-8,-3,-4,-3,2,7,1,-1,-2,9,-7,-1,7,2,1,6,2,6,10,8,-3,4,-2,5,7,-4,-7,5,-8,-3,6,10,-1,-5,-6,-1,-7,-5,1,1,-1,2,-1,-4,-6,1,8,-10,-8,8,-6,-2,-7,2,-6,5,9,7,-6,10,-10,2,2,9,-4,3,7,5,-4,-1,3,8,-5,3,-6,3,-5,7,6,-9,-2,-2,-10,4,-5,2,5,9,5,-1,-6,10,-9,1,3,-6,2,8,7,6,1,8,-10,-5,-1,-9,-3,10,-5,9,-1,-7,-5,5,-8,-1,-10,4,8,-6,-10,-5,5,-6,4,-10,-10,-10,-1,8,7,-10,-10,9,-6,6,2,-10,7,-7,1,8,4,8,-2,-7,-6,7,1,-6,1,-2,5,9,-8,-5,-4,10,-10,5,7,-2,-9,10,3,7,-10,-10,-1,-9,7,-7,6,1,8,-9,-10,-7,-7,8,-5,-7,-4,-1,6,-3,5,-6,-7,-8,-2,9,7,-10,-3,8,1,-2,-4,1,5,5,-4,-3,-5,-8,-10,-1,-1,5,7,-1,-1,-5,-7,5,10,4,-8,-7,-9,-3,1,8,-3,7,6,-10,2,10,-2,5,-6,8,-7,-8,-9,5,-5,4,-6,7,1,-9,-5,-4,5,-10,10,4,2,-4,-4,-3,-2,4,9,1,3,5,-8,-4,10,-5,-2,8,2,-7,10,5,10,-3,-3,9,2,-3,-4,-7,-2,5,-1,10,-4,10,-8,10,-4,-6,-7,4,-10,-4,-5,1,1,-3,-8,6,1,-9,-2,-8,-4,-5,3,2,8,10,-5,1,4,8,1,5,3,5,-3,-4,-9,-7,10,-6,3,2,-6,4,8,-1,10,-3,1,10,2,10,5,-4,5,1,-7,-6,7,2,-5,-6,-10,-10,6,-5,-4,-10,2,-3,-5,7,-9,-4,6,-2,10,6,7,-2,-5,-3,-2,7,-8,-5,5,6,8,10,7,-4,2,-8,-7,-3,-7,-1,-9,5,9,2,-5,-9,10,6,3,-6,-2,-3,-5,1,-5,1,1,1,7,3,2,4,5,-9,1,-5,-10,-2,-7,6,-3,5,-2,-3,10,10,2,-5,-3,-5,-2,7,-9,6,2,-7,9,-1,8,10,4,1,-6,-10,1,-5,-6,-4,3,-2,-1,2,-8,-1,-10,4,2,7,2,-1,5,-5,-10,9,-10,-10,7,-3,8,-3,4,10,5,-8,-7,1,6,-6,-6,4,3,8,-8,8,4,4,-1,6,2,-2,-4,2,10,10,2,-1,-8,8,10,1,7,2,2,3,-5,-4,9,-10,-5,-4,-6,1,-6,9,-4,9,-8,1,-10,-3,-1,-5,4,-1,8,3,2,8,-2,3,-9,-9,-3,6,-5,10,5,-8,1,-5,7,-2,1,-7,7,1,2,3,-8,-9,-6,-1,-4,-10,-10,-5,3,8,-7,9,6,-2,-9,4,-1,-2,-3,8,4,4,2,-3,-7,1,9,-2,9,5,-6,-7,3,-4,4,6,1,-2,-1,2,-9,6,2,-4,9,-2,8,1,-1,-8,10,-3,-5,-6,3,6,10,9,-7,4,2,-2,5,2,10,-3,5,1,-2,-8,-4,6,-4,5,-1,9,5,4,5,-10,-5,7,-8,3,5,4,6,3,-8,-1,-7,2,2,-6,1,3,-6,7,-1,3,-2,7,-10,7,-9,6,-9,-2,4,9,3,-1,-4,-4,-9,-1,5,-10,-10,-4,5,7,-10,-6,-6,-8,-9,-9,-9,8,-9,10,8,-10,5,7,5,6,4,10,9,10,-8,8,1,7,6,-3,-7,3,8,4,8,1,-3,4,10,9,3,7,-5,4,-4,-6,-2,5,-10,5,10,-10,8,7,7,8,-7,-6,1,-4,6,6,-10,10,-9,-10,5,-5,3,3,-10,-4,7,-9,-9,-5,-4,7,-1,8,3,10,7,1,7,-1,-6,-6,-6,-5,-8,2,-1,-10,5,2,-5,8], dtype = "uint64")#candidate|5255|(1080,)|const|uint64
call_5254 = func_2245_call(relay.reshape(const_5255.astype('uint64'), [10, 12, 9]))
call_5256 = func_2245_call(relay.reshape(const_5255.astype('uint64'), [10, 12, 9]))
output = relay.Tuple([call_5252,call_5254,const_5255,])
output2 = relay.Tuple([call_5253,call_5256,const_5255,])
func_5276 = relay.Function([], output)
mod['func_5276'] = func_5276
mod = relay.transform.InferType()(mod)
mutated_mod['func_5276'] = func_5276
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5276_call = mutated_mod.get_global_var('func_5276')
call_5277 = func_5276_call()
output = call_5277
func_5278 = relay.Function([], output)
mutated_mod['func_5278'] = func_5278
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2560_call = mod.get_global_var('func_2560')
func_2562_call = mutated_mod.get_global_var('func_2562')
call_5287 = func_2560_call()
call_5288 = func_2560_call()
output = relay.Tuple([call_5287,])
output2 = relay.Tuple([call_5288,])
func_5303 = relay.Function([], output)
mod['func_5303'] = func_5303
mod = relay.transform.InferType()(mod)
mutated_mod['func_5303'] = func_5303
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5303_call = mutated_mod.get_global_var('func_5303')
call_5304 = func_5303_call()
output = call_5304
func_5305 = relay.Function([], output)
mutated_mod['func_5305'] = func_5305
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2348_call = mod.get_global_var('func_2348')
func_2349_call = mutated_mod.get_global_var('func_2349')
call_5309 = relay.TupleGetItem(func_2348_call(), 0)
call_5310 = relay.TupleGetItem(func_2349_call(), 0)
func_2040_call = mod.get_global_var('func_2040')
func_2041_call = mutated_mod.get_global_var('func_2041')
call_5324 = relay.TupleGetItem(func_2040_call(), 0)
call_5325 = relay.TupleGetItem(func_2041_call(), 0)
func_4850_call = mod.get_global_var('func_4850')
func_4852_call = mutated_mod.get_global_var('func_4852')
var_5341 = relay.var("var_5341", dtype = "float32", shape = (48, 4))#candidate|5341|(48, 4)|var|float32
call_5340 = relay.TupleGetItem(func_4850_call(relay.reshape(var_5341.astype('float32'), [1, 16, 12])), 0)
call_5342 = relay.TupleGetItem(func_4852_call(relay.reshape(var_5341.astype('float32'), [1, 16, 12])), 0)
uop_5345 = relay.atan(call_5340.astype('float32')) # shape=(1, 16, 12)
uop_5347 = relay.atan(call_5342.astype('float32')) # shape=(1, 16, 12)
output = relay.Tuple([call_5309,call_5324,var_5341,uop_5345,])
output2 = relay.Tuple([call_5310,call_5325,var_5341,uop_5347,])
func_5348 = relay.Function([var_5341,], output)
mod['func_5348'] = func_5348
mod = relay.transform.InferType()(mod)
var_5349 = relay.var("var_5349", dtype = "float32", shape = (48, 4))#candidate|5349|(48, 4)|var|float32
output = func_5348(var_5349)
func_5350 = relay.Function([var_5349], output)
mutated_mod['func_5350'] = func_5350
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5082_call = mod.get_global_var('func_5082')
func_5083_call = mutated_mod.get_global_var('func_5083')
call_5352 = func_5082_call()
call_5353 = func_5082_call()
output = call_5352
output2 = call_5353
func_5357 = relay.Function([], output)
mod['func_5357'] = func_5357
mod = relay.transform.InferType()(mod)
output = func_5357()
func_5358 = relay.Function([], output)
mutated_mod['func_5358'] = func_5358
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2715_call = mod.get_global_var('func_2715')
func_2717_call = mutated_mod.get_global_var('func_2717')
call_5424 = relay.TupleGetItem(func_2715_call(), 0)
call_5425 = relay.TupleGetItem(func_2717_call(), 0)
output = call_5424
output2 = call_5425
func_5433 = relay.Function([], output)
mod['func_5433'] = func_5433
mod = relay.transform.InferType()(mod)
mutated_mod['func_5433'] = func_5433
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5433_call = mutated_mod.get_global_var('func_5433')
call_5434 = func_5433_call()
output = call_5434
func_5435 = relay.Function([], output)
mutated_mod['func_5435'] = func_5435
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4399_call = mod.get_global_var('func_4399')
func_4400_call = mutated_mod.get_global_var('func_4400')
call_5441 = relay.TupleGetItem(func_4399_call(), 1)
call_5442 = relay.TupleGetItem(func_4400_call(), 1)
func_842_call = mod.get_global_var('func_842')
func_843_call = mutated_mod.get_global_var('func_843')
call_5446 = relay.TupleGetItem(func_842_call(), 0)
call_5447 = relay.TupleGetItem(func_843_call(), 0)
func_5348_call = mod.get_global_var('func_5348')
func_5350_call = mutated_mod.get_global_var('func_5350')
const_5450 = relay.const([8.751031,-2.878936,9.399229,-4.782728,5.796097,-0.976282,0.565764,1.439732,-3.447660,-7.279307,-5.546613,-8.505919,-4.618295,-0.352657,-4.428339,-4.369870,7.537734,-9.919846,-0.198389,-3.241818,0.524108,-4.187817,4.843077,-6.733053,3.601798,0.854061,-9.101650,-6.407424,-3.405547,-8.547294,-0.635686,-2.553293,1.881790,8.567886,7.522451,-4.364935,-7.538195,8.914843,-8.967477,4.839570,-3.387325,9.961308,-6.159310,0.764355,3.472310,5.049621,0.351616,9.591821,-7.169951,-1.218416,-7.774566,8.936151,4.719716,7.727555,-9.904765,0.932149,1.277684,1.539719,-1.963025,-4.410052,-1.171939,-7.637992,-0.195408,-2.577735,-8.772852,-6.732657,7.545869,8.399800,4.398747,-2.403190,-6.756043,-8.794072,5.943620,1.307637,5.620355,6.322632,-3.517861,0.748303,0.265815,0.222752,-5.176140,8.651395,3.728310,-2.978113,6.947838,-6.217235,4.985837,7.428805,-4.959559,-0.929195,1.304181,8.982765,3.153729,-6.813565,3.072303,-3.002614,6.934643,3.256760,7.204828,4.432679,1.400717,-5.585931,6.928301,5.512162,-5.655316,0.818569,6.859499,2.608657,0.349825,1.688507,-9.247762,-4.406912,3.030998,-2.079093,0.152050,6.067754,-5.481397,9.737036,-2.643654,7.495594,1.595391,-1.950196,-1.669435,2.463905,4.325334,-9.661692,5.885143,3.910773,-2.748693,4.736567,-2.581534,-5.750595,-6.266637,-8.646178,-4.665530,4.951694,-9.977801,-0.861222,-9.564179,-9.964457,5.021642,8.950228,8.578330,7.672788,-4.860832,5.105497,-7.671802,1.568108,-8.113683,5.804327,-1.425680,-8.873413,-9.151139,5.839648,-8.490972,-4.753251,-5.123494,-1.924984,-7.540796,1.626589,-0.254269,6.325959,2.649753,7.935609,-9.439429,-1.233525,-0.526278,2.980793,-7.746880,2.063540,-7.426801,-1.030891,7.318464,-3.276710,-0.269252,-9.019551,9.320044,6.375302,9.655199,-4.188349,1.275249,-5.292010,3.979139,-8.232784,-0.575537,-7.271966,7.258247,8.698845,-3.267552,8.841651,7.077040,0.228566], dtype = "float32")#candidate|5450|(192,)|const|float32
call_5449 = relay.TupleGetItem(func_5348_call(relay.reshape(const_5450.astype('float32'), [48, 4])), 0)
call_5451 = relay.TupleGetItem(func_5350_call(relay.reshape(const_5450.astype('float32'), [48, 4])), 0)
func_1829_call = mod.get_global_var('func_1829')
func_1831_call = mutated_mod.get_global_var('func_1831')
call_5457 = relay.TupleGetItem(func_1829_call(), 0)
call_5458 = relay.TupleGetItem(func_1831_call(), 0)
var_5460 = relay.var("var_5460", dtype = "int32", shape = (8, 12, 13))#candidate|5460|(8, 12, 13)|var|int32
bop_5461 = relay.logical_xor(call_5441.astype('int8'), relay.reshape(var_5460.astype('int8'), relay.shape_of(call_5441))) # shape=(8, 12, 13)
bop_5464 = relay.logical_xor(call_5442.astype('int8'), relay.reshape(var_5460.astype('int8'), relay.shape_of(call_5442))) # shape=(8, 12, 13)
func_683_call = mod.get_global_var('func_683')
func_685_call = mutated_mod.get_global_var('func_685')
call_5471 = relay.TupleGetItem(func_683_call(), 0)
call_5472 = relay.TupleGetItem(func_685_call(), 0)
func_3031_call = mod.get_global_var('func_3031')
func_3033_call = mutated_mod.get_global_var('func_3033')
call_5473 = func_3031_call(relay.reshape(call_5471.astype('float32'), [8, 15, 12]))
call_5474 = func_3031_call(relay.reshape(call_5471.astype('float32'), [8, 15, 12]))
output = relay.Tuple([call_5446,call_5449,const_5450,call_5457,bop_5461,call_5471,call_5473,])
output2 = relay.Tuple([call_5447,call_5451,const_5450,call_5458,bop_5464,call_5472,call_5474,])
func_5481 = relay.Function([var_5460,], output)
mod['func_5481'] = func_5481
mod = relay.transform.InferType()(mod)
mutated_mod['func_5481'] = func_5481
mutated_mod = relay.transform.InferType()(mutated_mod)
var_5482 = relay.var("var_5482", dtype = "int32", shape = (8, 12, 13))#candidate|5482|(8, 12, 13)|var|int32
func_5481_call = mutated_mod.get_global_var('func_5481')
call_5483 = func_5481_call(var_5482)
output = call_5483
func_5484 = relay.Function([var_5482], output)
mutated_mod['func_5484'] = func_5484
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2972_call = mod.get_global_var('func_2972')
func_2974_call = mutated_mod.get_global_var('func_2974')
call_5505 = relay.TupleGetItem(func_2972_call(), 0)
call_5506 = relay.TupleGetItem(func_2974_call(), 0)
output = call_5505
output2 = call_5506
func_5524 = relay.Function([], output)
mod['func_5524'] = func_5524
mod = relay.transform.InferType()(mod)
mutated_mod['func_5524'] = func_5524
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5524_call = mutated_mod.get_global_var('func_5524')
call_5525 = func_5524_call()
output = call_5525
func_5526 = relay.Function([], output)
mutated_mod['func_5526'] = func_5526
mutated_mod = relay.transform.InferType()(mutated_mod)
const_5568 = relay.const([[[True,False,False,False,True,True,True,False,False,True,True,True,False],[True,True,False,False,False,False,True,False,True,True,False,False,False],[True,False,False,True,False,True,False,False,True,True,True,False,True],[True,True,True,True,True,False,False,True,False,False,True,False,True],[False,True,True,False,False,False,False,False,False,False,False,False,True],[True,True,False,False,True,False,True,False,True,True,False,True,False],[True,False,False,True,True,False,False,False,True,False,False,True,True],[False,False,True,False,True,False,False,True,False,True,True,False,True],[False,True,True,False,True,False,False,True,True,True,False,False,True],[True,False,True,False,True,False,False,False,False,True,True,False,True],[True,True,False,True,False,True,False,False,True,False,False,True,True],[False,False,True,False,True,False,False,False,True,False,False,True,False],[True,True,True,True,False,True,True,False,False,True,True,True,True],[False,True,False,True,False,False,True,False,False,False,False,False,True],[True,False,True,True,True,False,False,False,False,False,True,True,False]],[[False,False,False,True,False,False,False,False,False,False,False,True,False],[False,False,True,False,True,False,True,False,True,False,True,True,False],[True,True,False,False,False,False,False,False,True,False,False,True,False],[False,True,False,False,False,False,False,True,True,True,True,False,True],[True,False,False,False,False,True,False,False,True,False,False,False,False],[True,False,False,False,True,True,False,True,True,False,False,True,True],[True,False,False,True,True,True,True,False,False,True,True,False,False],[True,False,False,True,False,False,True,False,False,False,True,False,False],[False,False,False,True,True,True,True,False,False,True,True,True,True],[True,False,False,True,False,True,True,True,False,True,True,False,False],[True,False,True,False,False,False,False,False,True,False,True,True,False],[True,False,True,False,True,True,True,True,False,True,True,False,False],[True,True,True,True,True,True,False,True,True,False,True,True,True],[False,True,False,True,True,False,True,True,False,False,False,True,False],[False,True,True,False,True,False,False,True,False,True,False,False,False]],[[True,False,True,False,True,False,False,False,True,True,False,True,False],[False,True,False,False,True,True,True,False,True,False,True,True,True],[True,True,True,True,True,False,True,True,True,True,True,True,True],[False,False,True,True,True,True,True,True,True,False,False,False,True],[False,True,False,True,False,True,False,False,False,False,False,True,True],[True,False,False,False,True,False,True,False,False,False,False,True,True],[True,True,False,False,False,False,True,False,True,True,True,False,True],[True,False,False,True,True,True,True,True,False,True,True,True,True],[True,True,True,False,False,True,False,False,True,False,False,False,True],[False,True,False,False,True,False,False,True,True,True,False,False,False],[False,True,True,True,True,True,False,False,True,True,True,True,True],[False,False,False,False,True,False,False,True,False,True,True,False,False],[False,True,False,True,True,True,False,False,False,True,True,True,False],[True,False,True,False,True,False,False,True,False,True,True,False,True],[True,True,False,True,True,True,False,False,False,True,True,False,False]],[[True,False,True,False,False,False,False,True,True,False,True,True,True],[False,True,True,False,False,False,False,False,False,True,True,False,True],[True,False,False,False,False,False,False,True,False,False,False,True,True],[True,True,True,False,False,True,True,True,True,True,False,True,False],[False,True,True,False,False,True,False,True,True,False,True,True,False],[True,True,False,False,False,True,True,True,True,False,False,True,True],[False,False,True,True,False,True,False,False,False,True,True,False,False],[False,True,True,True,True,False,False,True,True,False,False,False,False],[True,False,False,False,False,False,True,True,False,True,True,False,True],[True,True,False,True,True,False,False,False,True,True,True,True,False],[False,False,False,False,False,False,True,False,False,True,True,True,False],[True,True,True,True,False,False,True,True,False,False,True,False,True],[True,False,False,False,False,False,False,True,False,False,True,True,True],[True,False,False,True,True,True,False,False,False,False,True,True,True],[True,False,True,True,True,False,True,True,False,False,True,True,True]],[[True,True,False,True,False,True,True,False,False,False,True,False,True],[False,True,False,True,False,True,True,True,False,False,True,False,True],[False,False,False,True,True,False,False,True,True,True,False,False,True],[True,True,True,True,False,True,False,False,False,True,True,False,False],[True,False,False,True,False,False,True,False,True,False,False,True,True],[True,False,False,False,False,True,True,True,False,True,False,True,True],[False,False,False,False,False,True,True,False,True,True,False,False,True],[True,True,False,True,False,True,True,False,True,True,True,False,False],[False,True,False,True,False,True,True,False,True,True,False,False,False],[True,True,False,True,True,False,False,True,True,True,False,False,True],[False,False,True,False,False,True,False,True,False,False,False,True,True],[True,False,True,False,False,False,True,True,True,False,True,False,True],[False,True,False,False,False,False,False,True,False,True,False,False,False],[False,True,False,True,False,True,False,True,True,False,True,True,True],[False,True,False,False,True,False,True,True,True,False,True,True,True]],[[True,False,False,False,False,False,True,False,False,True,False,False,False],[True,False,True,False,False,True,False,False,False,True,True,True,False],[False,True,True,True,True,False,False,True,False,False,True,True,True],[True,False,True,True,False,False,False,True,True,False,True,True,False],[True,False,True,False,False,True,False,True,True,True,True,True,False],[False,True,True,True,False,True,False,True,False,False,False,False,False],[True,False,True,False,True,False,False,False,False,False,False,False,True],[True,True,False,False,True,False,True,True,False,False,False,False,True],[False,False,True,True,False,False,True,True,False,False,True,False,True],[False,False,True,False,True,False,False,False,False,True,False,True,False],[False,True,False,False,True,True,True,False,False,True,True,True,True],[True,False,False,False,True,False,False,False,True,False,False,True,False],[False,False,False,True,True,True,True,True,True,False,False,False,False],[False,False,True,False,True,True,False,True,True,True,False,True,True],[True,True,True,False,True,True,False,False,False,True,True,True,True]],[[False,True,True,True,False,False,True,True,False,False,False,False,True],[True,True,True,True,False,False,False,True,False,False,False,True,False],[False,False,True,False,True,True,True,True,False,True,True,True,True],[True,True,True,True,True,True,False,False,False,False,True,False,True],[True,False,True,False,False,True,True,True,True,False,True,True,True],[True,False,False,True,True,True,False,True,False,True,False,False,False],[False,False,True,False,True,False,True,False,True,True,False,False,True],[True,False,False,False,False,True,True,False,False,False,False,True,True],[False,False,True,True,False,True,True,True,False,True,False,True,True],[True,False,True,True,True,True,True,True,True,True,True,False,False],[True,True,False,False,False,False,True,False,True,True,True,True,True],[True,False,True,False,True,False,True,True,True,False,False,False,False],[True,False,True,False,False,False,True,False,True,True,False,False,True],[False,True,True,True,False,False,True,True,True,False,True,False,True],[False,False,True,True,False,True,True,True,True,True,False,False,True]],[[True,True,True,True,True,True,False,False,False,True,False,True,False],[True,False,False,True,True,False,False,True,True,False,False,False,False],[True,True,False,True,False,True,False,False,False,True,True,False,True],[False,True,False,True,False,True,True,False,True,True,False,True,False],[False,True,False,False,True,True,False,True,False,False,False,False,False],[False,False,False,True,True,False,False,True,True,False,True,True,False],[False,False,True,True,False,True,False,False,True,False,True,True,True],[True,False,False,True,False,False,True,False,True,True,False,False,False],[False,False,True,True,True,True,True,False,False,True,True,True,True],[False,True,False,False,False,True,False,False,False,False,True,False,True],[False,True,True,False,True,True,True,True,False,False,False,True,False],[True,False,True,False,True,True,True,True,True,True,False,True,False],[True,False,True,True,True,True,False,False,False,True,False,True,False],[False,True,True,False,True,False,False,False,False,False,True,True,True],[True,False,False,False,False,True,False,True,False,True,True,False,False]],[[True,True,False,False,False,False,True,True,False,False,True,True,False],[True,True,True,False,False,False,False,False,True,True,True,True,False],[True,True,True,True,True,False,True,True,False,True,True,True,False],[False,True,True,True,True,False,False,True,False,False,True,False,True],[False,True,False,False,False,False,True,True,True,False,False,False,True],[False,True,False,False,True,False,True,False,True,True,False,True,False],[False,False,True,True,True,False,False,True,False,False,True,True,False],[True,True,False,True,False,False,True,False,False,False,True,False,True],[False,True,True,False,True,False,False,False,True,True,False,True,False],[False,False,False,True,False,True,False,False,False,False,False,True,True],[True,False,False,True,True,False,False,False,False,True,False,False,True],[True,True,False,True,False,False,True,False,False,True,True,False,True],[True,True,True,True,False,False,True,False,True,False,False,True,False],[True,False,True,True,False,False,True,False,True,True,False,False,True],[False,True,False,True,False,True,False,False,False,False,False,True,False]],[[False,True,False,True,False,True,False,True,True,False,True,False,False],[True,True,False,True,False,True,True,False,False,True,True,False,True],[False,False,False,True,False,False,True,False,True,True,False,True,False],[True,True,True,True,True,False,False,False,False,False,True,True,False],[True,False,True,True,False,True,True,False,True,True,False,False,True],[True,True,True,True,True,False,False,False,True,False,True,True,False],[True,True,True,False,True,False,False,True,True,False,False,False,False],[True,True,False,True,False,False,False,False,True,True,False,True,False],[False,True,True,True,True,False,True,False,False,False,False,False,True],[True,True,False,True,True,True,False,False,True,True,False,True,True],[True,True,True,False,True,True,False,False,True,True,False,False,False],[False,False,False,False,False,False,True,False,True,True,True,False,True],[False,True,True,False,False,False,True,True,False,False,True,False,False],[False,False,False,False,False,False,False,False,False,False,False,False,False],[False,True,False,False,False,False,True,True,False,True,True,True,False]],[[True,True,True,False,True,True,False,True,True,False,True,False,False],[False,False,True,False,True,True,True,True,True,True,True,False,False],[False,True,True,True,True,False,True,True,False,False,False,False,False],[False,False,True,False,True,True,False,False,True,True,True,False,False],[False,True,False,False,True,False,True,False,True,False,True,False,True],[True,True,False,False,True,False,False,False,False,True,False,False,True],[True,False,False,False,False,False,True,False,False,True,False,True,True],[False,False,False,False,True,False,True,True,False,False,True,False,True],[True,False,True,False,True,False,False,False,False,False,False,False,True],[True,True,True,False,False,True,False,True,False,False,True,True,True],[True,False,True,True,True,False,True,False,False,True,False,False,True],[True,True,True,True,False,False,False,True,True,False,True,True,True],[True,True,False,False,True,True,False,False,True,True,False,False,True],[True,True,False,True,False,True,False,False,False,False,False,False,False],[True,False,True,True,False,False,False,False,False,True,False,True,True]]], dtype = "bool")#candidate|5568|(11, 15, 13)|const|bool
var_5569 = relay.var("var_5569", dtype = "bool", shape = (11, 15, 13))#candidate|5569|(11, 15, 13)|var|bool
bop_5570 = relay.logical_or(const_5568.astype('bool'), relay.reshape(var_5569.astype('bool'), relay.shape_of(const_5568))) # shape=(11, 15, 13)
bop_5580 = relay.right_shift(const_5568.astype('int64'), relay.reshape(var_5569.astype('int64'), relay.shape_of(const_5568))) # shape=(11, 15, 13)
output = relay.Tuple([bop_5570,bop_5580,])
output2 = relay.Tuple([bop_5570,bop_5580,])
func_5583 = relay.Function([var_5569,], output)
mod['func_5583'] = func_5583
mod = relay.transform.InferType()(mod)
mutated_mod['func_5583'] = func_5583
mutated_mod = relay.transform.InferType()(mutated_mod)
var_5584 = relay.var("var_5584", dtype = "bool", shape = (11, 15, 13))#candidate|5584|(11, 15, 13)|var|bool
func_5583_call = mutated_mod.get_global_var('func_5583')
call_5585 = func_5583_call(var_5584)
output = call_5585
func_5586 = relay.Function([var_5584], output)
mutated_mod['func_5586'] = func_5586
mutated_mod = relay.transform.InferType()(mutated_mod)
func_668_call = mod.get_global_var('func_668')
func_669_call = mutated_mod.get_global_var('func_669')
call_5588 = relay.TupleGetItem(func_668_call(), 1)
call_5589 = relay.TupleGetItem(func_669_call(), 1)
output = relay.Tuple([call_5588,])
output2 = relay.Tuple([call_5589,])
func_5601 = relay.Function([], output)
mod['func_5601'] = func_5601
mod = relay.transform.InferType()(mod)
output = func_5601()
func_5602 = relay.Function([], output)
mutated_mod['func_5602'] = func_5602
mutated_mod = relay.transform.InferType()(mutated_mod)
var_5609 = relay.var("var_5609", dtype = "float64", shape = (12, 5, 15))#candidate|5609|(12, 5, 15)|var|float64
const_5610 = relay.const([[[-7.250148,1.339888,4.474286,-5.686237,5.987480,2.131215,-3.989092,0.265470,-6.795343,-8.461341,-1.302734,-2.727950,-9.091283,3.936454,-9.173945],[8.950269,-1.115190,9.399915,-9.810541,-6.613831,-4.479196,7.168626,1.521639,-4.444399,3.533944,-9.827554,-0.092257,-1.441894,-7.662280,-8.760964],[-0.080720,-0.077182,0.552168,-2.878167,6.245753,1.672246,4.687570,-1.995009,2.523420,-3.049532,7.669098,8.548888,-8.218415,-3.088001,7.163830],[3.104034,-1.091314,-0.286091,0.574793,-4.664295,-2.842658,-6.564807,-1.884384,-9.721486,8.689836,2.655845,8.135164,-0.965782,-2.086984,6.895581],[-8.519245,8.683144,-5.864952,-6.200231,-4.480141,-2.572508,-5.095744,-9.123409,7.550272,-5.489849,-1.127219,-3.810547,-5.595857,2.444608,7.764198]],[[-7.454017,0.757730,3.930212,-5.224235,6.200839,-6.169029,8.763440,-1.420734,7.367022,-3.534469,-2.278905,5.131782,-7.498179,-8.999453,-2.636360],[-0.640429,4.343948,-0.423686,6.615472,-4.719806,-1.584462,-7.941711,6.014769,2.880318,7.074205,-1.519788,-5.422763,-7.698613,-3.752268,-3.315788],[-5.749821,0.750946,-6.208130,-8.934496,-3.888970,-2.239980,0.154237,-3.818157,3.949628,-4.159532,0.726743,9.164704,-0.220856,9.925349,-9.760143],[-7.822293,-8.056676,-8.989194,6.844083,7.772425,1.584626,-2.376039,-4.239576,1.889994,8.667680,-0.457279,-1.022856,-3.181882,9.153387,5.773382],[-1.152967,0.083940,-8.752824,5.590189,-1.263122,4.063975,4.265759,0.864311,9.003891,4.501431,-5.453968,3.729393,7.736745,3.149958,4.829900]],[[-1.958641,-0.925291,8.123432,8.680669,6.905847,5.355410,4.898899,-9.195753,-3.277969,6.937740,-2.593937,-0.442298,2.710224,-4.281867,-8.541143],[1.173722,9.438596,-6.465001,-4.840803,1.542692,-6.543118,9.229914,4.152160,-6.934873,5.110417,-4.540220,0.249217,1.159741,-5.972212,4.150225],[-1.735161,-9.702007,2.674107,-9.915653,-3.702044,3.628129,-3.469855,4.935191,-2.330487,8.479976,8.448053,-2.786387,-4.521049,2.483700,5.895809],[-4.498676,-4.646369,4.658640,0.701353,3.475425,5.670024,-4.120165,3.542499,-1.445521,0.381786,6.436200,2.862722,2.495345,-5.209661,-7.760984],[-5.059559,1.994669,0.004329,-5.635500,-1.862158,7.647764,-8.250678,0.797400,1.915628,1.677969,4.243965,3.010085,-9.443029,5.313550,-0.370120]],[[-1.386916,-1.687991,3.704300,-1.755163,-1.126553,9.772495,8.729640,-5.115867,-4.869493,-7.827132,-8.591644,-7.125413,-3.907515,1.666832,5.013343],[6.078243,-4.922732,9.570044,-0.112222,5.041954,-2.661540,-8.618293,-7.730679,-8.484372,-5.333983,-4.367519,3.521304,-0.154948,-9.083084,2.644346],[2.963852,0.276308,-9.825940,0.226168,8.356480,4.779805,-9.096162,3.689843,-6.598464,8.922630,-3.930953,-9.762962,-4.200743,3.966693,-8.614600],[0.135508,0.067340,4.659931,6.863281,-9.489239,1.859442,1.742313,3.786617,-8.928002,-9.199996,-1.125128,2.098900,-0.372027,-8.454396,-8.804656],[-5.363857,-4.397322,0.775916,7.965513,3.220545,2.963655,-5.465364,-8.647619,3.437005,9.304979,-6.057181,-4.992345,-6.371929,1.375653,-8.398238]],[[7.760244,2.711513,-7.884074,2.716345,-8.081092,-8.707104,5.570465,-4.321548,-1.823392,-1.849526,9.505623,-0.623136,7.975534,8.800873,0.026198],[-1.843701,-2.199324,-9.667043,-6.859191,9.788349,-1.295143,-8.101865,-6.583843,1.140097,-8.209926,-0.409158,-9.563814,8.569419,-5.986701,2.479688],[-5.657911,-5.648140,9.689584,-4.565156,7.604694,-6.989309,5.090119,1.454481,7.409786,-9.450132,5.566833,-4.523227,1.211281,4.170478,-2.410769],[4.849834,-0.302027,2.769197,3.216326,-7.462765,3.077779,-2.172808,0.436541,-0.925973,3.423133,9.142430,-3.501574,-3.541804,8.953433,3.441088],[-9.271622,7.290249,-8.010553,6.613892,-6.198842,-9.913675,-5.307427,-8.241093,4.028984,6.569468,5.620594,4.197360,-5.631719,-0.056712,8.670077]],[[7.507112,-8.147378,-9.305955,5.711146,-3.860945,4.930718,-1.291313,-6.999128,-4.087118,0.418424,-5.302594,-6.835946,-9.635778,8.084098,-7.801147],[-8.468423,8.320864,-7.055564,-5.262919,1.964568,2.759280,2.888050,-7.926780,-9.283869,1.187832,-3.831762,6.190031,3.647713,7.603919,-7.720228],[8.892657,3.685675,5.983514,7.894091,-7.426026,4.299716,4.481655,6.499239,-2.932346,-4.057103,3.583047,5.830193,6.567741,6.277082,7.331860],[9.662241,-5.695831,1.966003,-2.040272,9.925864,5.565676,6.336351,-3.708182,9.946878,-7.177650,-6.859693,-2.431389,-3.516977,6.529471,0.361324],[6.894494,9.010792,6.145497,-9.052173,1.318347,-9.897461,-3.906697,-1.107088,-6.299230,7.031983,0.254554,2.109560,9.274864,-0.674974,0.860755]],[[4.929275,-4.183840,-3.408450,-3.077558,7.995769,3.193021,-6.924167,9.205604,-1.098167,-2.471450,8.329859,9.984920,-9.178653,-2.057539,5.598298],[-1.102429,0.895006,-6.911205,-5.082654,-4.012851,-8.191799,-2.552597,1.890988,4.891148,1.000279,4.429477,-5.442726,3.611488,0.466649,2.597183],[6.199052,9.527211,-2.367892,7.468327,-5.714486,-8.190613,5.219582,-2.720144,3.027002,-1.589054,8.039626,1.624330,-4.933128,-0.995814,-7.653743],[4.244535,0.436611,-7.750048,-3.200588,3.860158,8.650755,9.530470,-7.920306,9.900255,-0.251782,-6.912160,3.687249,2.876374,6.088530,5.377167],[1.542523,6.529644,-5.450412,-4.955910,6.392575,1.170593,0.974898,7.608869,-6.595080,3.392690,-1.676980,7.892280,6.582984,-8.207673,-3.739458]],[[8.124431,-3.686764,4.128000,-0.747630,9.351924,0.079633,3.473689,8.161809,-0.037808,5.739046,-2.090934,9.232366,-6.503629,-7.289031,0.126406],[-2.292224,-7.740934,-2.921018,2.255425,7.720948,-4.535989,-7.122156,-9.529490,6.459363,0.172565,-8.840960,-4.430489,2.321900,7.328028,3.463506],[1.248084,3.717731,-0.453944,2.922913,-0.963885,-9.053098,5.202770,-0.916562,0.478173,-2.433402,1.405207,-8.150233,-8.686984,-2.274201,-1.731842],[0.787496,6.321268,8.350265,-0.900661,-4.014089,-4.460215,0.731857,2.787702,3.651331,0.915599,8.576541,-2.140260,6.617833,-1.988989,-4.502603],[2.818575,-7.601680,-1.427082,4.824266,-5.485719,-1.539534,-6.406412,-8.013397,6.940427,-6.076760,5.193560,7.363572,-6.127213,-2.298091,-5.860227]],[[2.999814,-3.191136,7.069656,5.649178,3.549212,-2.804342,-6.337427,-9.819523,-9.095668,-3.664404,-9.341385,-7.154610,-0.328847,-4.858831,1.954389],[4.913709,8.042566,-4.456601,4.122360,5.456473,9.136009,-9.339638,-2.495607,-4.630560,-1.467590,-0.936355,-1.160893,3.607739,7.860629,-6.748809],[-6.199037,5.722408,9.263748,-7.586796,1.588244,-7.752845,2.335174,9.801983,9.195764,-2.678423,-8.865261,-7.793606,-2.017507,3.274647,-5.430324],[-7.381647,-5.317738,-9.808982,-8.977895,-0.354886,-1.144893,-4.879172,4.322795,9.163752,-3.920585,-1.761704,-1.693609,5.710705,-1.297467,-8.676969],[-6.406835,-4.138259,-4.002829,1.683022,4.420919,0.265443,-4.311897,-9.572725,0.519623,-5.953828,6.311707,-7.686809,4.869181,-0.058795,8.996602]],[[-4.025554,-1.813933,-0.221188,6.500207,8.109343,6.811269,-2.697934,-8.426419,4.006578,6.252231,4.031041,-4.117302,-2.470601,-1.545546,-7.931855],[-3.311141,8.246503,6.350031,7.990033,9.968779,1.021793,9.597164,-2.012916,-2.434681,9.782435,4.497532,5.803029,7.684748,-1.506926,-6.867112],[4.300300,6.880677,6.981451,-9.282290,-3.498731,0.212842,-8.217228,2.342335,2.434595,-7.645596,4.220979,3.951352,3.803989,3.887937,-9.677320],[-6.584288,-8.606683,6.297842,-7.588419,-2.791747,3.591923,5.783943,1.573600,8.296318,-4.101343,8.931350,0.841169,-6.832312,3.841621,-9.908069],[-1.224237,1.274308,3.472358,-3.543361,-7.107172,-7.707718,6.613898,4.075702,-3.089789,5.730232,-8.673942,3.481552,0.739824,7.211173,3.047894]],[[4.857095,-0.307209,-7.332525,5.348817,-0.825289,2.123235,6.087692,-1.400964,7.882446,9.536966,3.449117,-2.022119,-4.406222,6.669505,-7.388341],[0.744803,-9.821639,3.510636,2.434142,1.051779,-7.969779,-6.974553,1.169034,7.462627,-7.011809,5.139292,-0.479421,-4.769493,-3.955005,-2.926560],[-2.658470,-0.957305,-1.321518,6.971787,-0.227217,6.843091,7.846376,-5.615118,-3.385271,-8.888528,2.456482,-7.361237,2.902367,-5.713907,-5.743035],[-3.778784,-9.683563,9.609487,-2.716814,0.281450,-5.257285,-9.925112,-1.413628,-4.743644,-4.344992,6.939489,4.076604,3.535491,-9.171041,-4.712423],[9.218853,8.678370,1.706624,-8.526129,4.858639,-8.479609,-0.939372,-8.488070,3.276321,1.817189,6.647637,4.625079,-4.858223,1.697477,-9.979289]],[[-4.477905,-9.095670,-6.090888,-3.202402,-3.002054,-0.489568,1.575917,7.453172,1.487600,1.114396,-8.694880,-2.961145,9.737125,-8.895832,3.175770],[-3.985288,-0.882915,-2.965549,-6.208481,0.823053,-6.721142,2.377245,-3.935553,9.359951,9.349909,-6.915968,3.255936,-4.158418,-4.849129,9.629397],[1.041100,9.217145,8.996484,-9.865495,-0.927589,-5.527388,7.306376,4.141077,-2.027510,-1.828814,6.420343,6.020487,2.724045,0.643392,-6.289628],[8.484392,-7.163537,-9.640544,-0.923817,1.317861,-0.779997,-4.043966,5.029735,-9.207949,-0.529970,8.239627,3.039276,8.366554,-7.564035,-6.175466],[7.566874,4.770810,-0.003342,7.157490,-8.454720,-2.582507,-0.378959,0.932091,-0.043689,0.212192,-7.774774,-8.721099,5.941840,-4.717072,-4.882644]]], dtype = "float64")#candidate|5610|(12, 5, 15)|const|float64
bop_5611 = relay.floor_mod(var_5609.astype('float64'), relay.reshape(const_5610.astype('float64'), relay.shape_of(var_5609))) # shape=(12, 5, 15)
var_5625 = relay.var("var_5625", dtype = "float64", shape = (12, 5, 15))#candidate|5625|(12, 5, 15)|var|float64
bop_5626 = relay.left_shift(const_5610.astype('uint32'), relay.reshape(var_5625.astype('uint32'), relay.shape_of(const_5610))) # shape=(12, 5, 15)
output = relay.Tuple([bop_5611,bop_5626,])
output2 = relay.Tuple([bop_5611,bop_5626,])
func_5629 = relay.Function([var_5609,var_5625,], output)
mod['func_5629'] = func_5629
mod = relay.transform.InferType()(mod)
mutated_mod['func_5629'] = func_5629
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5629_call = mutated_mod.get_global_var('func_5629')
var_5631 = relay.var("var_5631", dtype = "float64", shape = (12, 5, 15))#candidate|5631|(12, 5, 15)|var|float64
var_5632 = relay.var("var_5632", dtype = "float64", shape = (12, 5, 15))#candidate|5632|(12, 5, 15)|var|float64
call_5630 = func_5629_call(var_5631,var_5632,)
output = call_5630
func_5633 = relay.Function([var_5631,var_5632,], output)
mutated_mod['func_5633'] = func_5633
mutated_mod = relay.transform.InferType()(mutated_mod)
var_5651 = relay.var("var_5651", dtype = "uint16", shape = ())#candidate|5651|()|var|uint16
var_5652 = relay.var("var_5652", dtype = "uint16", shape = (9, 13, 5))#candidate|5652|(9, 13, 5)|var|uint16
bop_5653 = relay.bitwise_and(var_5651.astype('uint16'), var_5652.astype('uint16')) # shape=(9, 13, 5)
bop_5659 = relay.left_shift(var_5651.astype('int64'), var_5652.astype('int64')) # shape=(9, 13, 5)
output = relay.Tuple([bop_5653,bop_5659,])
output2 = relay.Tuple([bop_5653,bop_5659,])
func_5667 = relay.Function([var_5651,var_5652,], output)
mod['func_5667'] = func_5667
mod = relay.transform.InferType()(mod)
var_5668 = relay.var("var_5668", dtype = "uint16", shape = ())#candidate|5668|()|var|uint16
var_5669 = relay.var("var_5669", dtype = "uint16", shape = (9, 13, 5))#candidate|5669|(9, 13, 5)|var|uint16
output = func_5667(var_5668,var_5669,)
func_5670 = relay.Function([var_5668,var_5669,], output)
mutated_mod['func_5670'] = func_5670
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4204_call = mod.get_global_var('func_4204')
func_4205_call = mutated_mod.get_global_var('func_4205')
call_5682 = relay.TupleGetItem(func_4204_call(), 1)
call_5683 = relay.TupleGetItem(func_4205_call(), 1)
uop_5684 = relay.cosh(call_5682.astype('float64')) # shape=(2, 12, 9)
uop_5686 = relay.cosh(call_5683.astype('float64')) # shape=(2, 12, 9)
func_1585_call = mod.get_global_var('func_1585')
func_1588_call = mutated_mod.get_global_var('func_1588')
var_5703 = relay.var("var_5703", dtype = "float64", shape = (1440,))#candidate|5703|(1440,)|var|float64
call_5702 = relay.TupleGetItem(func_1585_call(relay.reshape(var_5703.astype('float64'), [8, 15, 12])), 0)
call_5704 = relay.TupleGetItem(func_1588_call(relay.reshape(var_5703.astype('float64'), [8, 15, 12])), 0)
uop_5711 = relay.atanh(call_5682.astype('float64')) # shape=(2, 12, 9)
uop_5713 = relay.atanh(call_5683.astype('float64')) # shape=(2, 12, 9)
func_5348_call = mod.get_global_var('func_5348')
func_5350_call = mutated_mod.get_global_var('func_5350')
var_5717 = relay.var("var_5717", dtype = "float32", shape = (8, 24))#candidate|5717|(8, 24)|var|float32
call_5716 = relay.TupleGetItem(func_5348_call(relay.reshape(var_5717.astype('float32'), [48, 4])), 1)
call_5718 = relay.TupleGetItem(func_5350_call(relay.reshape(var_5717.astype('float32'), [48, 4])), 1)
func_4512_call = mod.get_global_var('func_4512')
func_4513_call = mutated_mod.get_global_var('func_4513')
call_5725 = func_4512_call()
call_5726 = func_4512_call()
output = relay.Tuple([uop_5684,call_5702,var_5703,uop_5711,call_5716,var_5717,call_5725,])
output2 = relay.Tuple([uop_5686,call_5704,var_5703,uop_5713,call_5718,var_5717,call_5726,])
func_5738 = relay.Function([var_5703,var_5717,], output)
mod['func_5738'] = func_5738
mod = relay.transform.InferType()(mod)
mutated_mod['func_5738'] = func_5738
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5738_call = mutated_mod.get_global_var('func_5738')
var_5740 = relay.var("var_5740", dtype = "float64", shape = (1440,))#candidate|5740|(1440,)|var|float64
var_5741 = relay.var("var_5741", dtype = "float32", shape = (8, 24))#candidate|5741|(8, 24)|var|float32
call_5739 = func_5738_call(var_5740,var_5741,)
output = call_5739
func_5742 = relay.Function([var_5740,var_5741,], output)
mutated_mod['func_5742'] = func_5742
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4549_call = mod.get_global_var('func_4549')
func_4550_call = mutated_mod.get_global_var('func_4550')
call_5779 = func_4549_call()
call_5780 = func_4549_call()
output = call_5779
output2 = call_5780
func_5781 = relay.Function([], output)
mod['func_5781'] = func_5781
mod = relay.transform.InferType()(mod)
mutated_mod['func_5781'] = func_5781
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5781_call = mutated_mod.get_global_var('func_5781')
call_5782 = func_5781_call()
output = call_5782
func_5783 = relay.Function([], output)
mutated_mod['func_5783'] = func_5783
mutated_mod = relay.transform.InferType()(mutated_mod)
const_5856 = relay.const([[[-9,-1,6,-7,5,7,9,-7,-5,-9,-1],[-5,5,7,7,-10,-6,7,-6,7,6,-1],[3,-3,10,9,4,2,-9,-7,-10,1,8],[9,2,-5,3,-3,-1,7,8,-5,-9,2],[-7,-2,-6,6,-1,-7,-3,1,-6,2,-3]]], dtype = "int8")#candidate|5856|(1, 5, 11)|const|int8
var_5857 = relay.var("var_5857", dtype = "int8", shape = (11, 5, 11))#candidate|5857|(11, 5, 11)|var|int8
bop_5858 = relay.minimum(const_5856.astype('int8'), var_5857.astype('int8')) # shape=(11, 5, 11)
output = bop_5858
output2 = bop_5858
func_5873 = relay.Function([var_5857,], output)
mod['func_5873'] = func_5873
mod = relay.transform.InferType()(mod)
mutated_mod['func_5873'] = func_5873
mutated_mod = relay.transform.InferType()(mutated_mod)
var_5874 = relay.var("var_5874", dtype = "int8", shape = (11, 5, 11))#candidate|5874|(11, 5, 11)|var|int8
func_5873_call = mutated_mod.get_global_var('func_5873')
call_5875 = func_5873_call(var_5874)
output = call_5875
func_5876 = relay.Function([var_5874], output)
mutated_mod['func_5876'] = func_5876
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2510_call = mod.get_global_var('func_2510')
func_2512_call = mutated_mod.get_global_var('func_2512')
call_5885 = relay.TupleGetItem(func_2510_call(), 1)
call_5886 = relay.TupleGetItem(func_2512_call(), 1)
output = relay.Tuple([call_5885,])
output2 = relay.Tuple([call_5886,])
func_5909 = relay.Function([], output)
mod['func_5909'] = func_5909
mod = relay.transform.InferType()(mod)
mutated_mod['func_5909'] = func_5909
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5909_call = mutated_mod.get_global_var('func_5909')
call_5910 = func_5909_call()
output = call_5910
func_5911 = relay.Function([], output)
mutated_mod['func_5911'] = func_5911
mutated_mod = relay.transform.InferType()(mutated_mod)
func_842_call = mod.get_global_var('func_842')
func_843_call = mutated_mod.get_global_var('func_843')
call_5959 = relay.TupleGetItem(func_842_call(), 1)
call_5960 = relay.TupleGetItem(func_843_call(), 1)
func_5873_call = mod.get_global_var('func_5873')
func_5876_call = mutated_mod.get_global_var('func_5876')
const_5965 = relay.const([-6,-8,10,-9,-8,8,-1,10,-9,-1,3,-7,-1,1,9,-3,10,5,-5,-9,-7,9,-2,-7,5,5,9,-5,4,-10,9,-10,-5,1,3,5,6,5,-6,-10,-10,7,5,-2,5,6,5,6,-2,10,-8,-5,-10,4,-5,-4,-9,4,2,-7,-10,-4,-8,3,-9,5,-9,-4,1,2,4,10,-9,-9,2,2,8,7,8,8,-4,-9,-3,1,-2,-9,2,-4,-6,4,9,-10,-3,5,-8,3,7,-6,-4,4,1,-6,5,-4,3,10,5,10,-8,1,9,-1,-7,-7,-3,9,-8,-7,-3,5,8,-7,-7,10,4,-3,-7,-9,1,-5,9,-8,-1,10,-5,-9,2,5,6,5,9,3,2,2,10,-8,3,5,-3,7,2,1,5,1,3,1,6,8,6,1,-9,-4,-7,8,4,9,3,-7,-8,-2,-6,3,-5,-10,-2,8,2,-6,8,10,-9,-7,-1,-3,-5,-9,5,5,-2,-4,5,-6,1,7,-3,-1,-8,-5,3,7,2,-10,-8,1,-1,-4,5,3,-3,-7,-9,-9,9,3,1,-1,-8,1,8,-5,7,5,-3,-9,-1,1,9,7,5,1,2,10,-4,5,5,1,1,-5,6,-9,2,-7,1,6,-5,-1,-8,-6,-3,4,-1,1,1,-6,-10,4,-6,-1,-8,-2,-6,10,5,-8,-7,8,7,9,5,-5,-2,-5,3,-7,4,3,-4,6,9,2,4,3,1,-1,1,1,8,-4,-3,3,-4,-9,-9,10,7,-3,3,-4,2,-1,3,6,10,-2,5,-10,2,-7,-2,-1,10,2,2,8,-3,-6,-10,8,4,-1,-7,-10,-10,-2,-6,3,-6,1,-3,3,7,2,2,5,4,-9,-9,-2,5,-1,-6,1,9,2,-9,8,4,3,-2,4,-8,-6,9,6,-3,-7,3,-3,-9,4,9,6,-2,9,-7,1,-3,2,7,8,-9,9,2,-6,-8,-1,-4,2,5,-1,2,10,9,9,-2,-5,1,-2,-7,-6,-9,-2,3,1,5,10,2,-5,2,6,-1,4,5,5,-4,-9,-7,8,-6,7,10,9,5,-2,9,10,1,2,-10,9,9,9,-8,-5,5,-6,-9,-7,-10,-3,9,1,-7,-5,1,1,2,5,6,-6,3,-5,6,7,3,7,1,-1,10,-5,1,-2,-3,-5,-8,-9,-3,-3,6,-7,8,-2,-1,-9,-8,3,-10,2,-3,-4,6,-3,-8,7,6,5,-9,5,10,2,-10,-7,9,6,4,4,3,-10,4,7,3,-4,-10,2,-4,-8,-9,-7,-2,-10,-4,6,-2,10,-4,-5,-2,-9,7,2,6,-8,-3,-3,1,-1,10,4,-4,7,5,8,1,10,1,-1,-10,-9,-5,7,-6,3,-6,7,3,-1,-5,6,6,-4,-7,-3,-6,-1,-7,-7,9,-10,-6,8,-2,-8,7,3,-7,2,3,-1,8,-10,-2,-9,-8,5,-5,-5,-1,-3,4,-4,6,7,3,-8,1,5,6,4,2,-10,-4,1,-6,6,2,-3,7,-8,7,1,-6,1,2,-8,5,-1,-10,4,9,-8,-9,-1,-10,-7,7], dtype = "int8")#candidate|5965|(605,)|const|int8
call_5964 = func_5873_call(relay.reshape(const_5965.astype('int8'), [11, 5, 11]))
call_5966 = func_5873_call(relay.reshape(const_5965.astype('int8'), [11, 5, 11]))
bop_5968 = relay.not_equal(const_5965.astype('bool'), relay.reshape(call_5964.astype('bool'), relay.shape_of(const_5965))) # shape=(605,)
bop_5971 = relay.not_equal(const_5965.astype('bool'), relay.reshape(call_5966.astype('bool'), relay.shape_of(const_5965))) # shape=(605,)
bop_5976 = relay.logical_xor(bop_5968.astype('uint8'), relay.reshape(const_5965.astype('uint8'), relay.shape_of(bop_5968))) # shape=(605,)
bop_5979 = relay.logical_xor(bop_5971.astype('uint8'), relay.reshape(const_5965.astype('uint8'), relay.shape_of(bop_5971))) # shape=(605,)
func_141_call = mod.get_global_var('func_141')
func_143_call = mutated_mod.get_global_var('func_143')
call_5984 = relay.TupleGetItem(func_141_call(), 1)
call_5985 = relay.TupleGetItem(func_143_call(), 1)
output = relay.Tuple([call_5959,bop_5976,call_5984,])
output2 = relay.Tuple([call_5960,bop_5979,call_5985,])
func_5986 = relay.Function([], output)
mod['func_5986'] = func_5986
mod = relay.transform.InferType()(mod)
mutated_mod['func_5986'] = func_5986
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5986_call = mutated_mod.get_global_var('func_5986')
call_5987 = func_5986_call()
output = call_5987
func_5988 = relay.Function([], output)
mutated_mod['func_5988'] = func_5988
mutated_mod = relay.transform.InferType()(mutated_mod)
var_6019 = relay.var("var_6019", dtype = "float64", shape = (12, 11, 15))#candidate|6019|(12, 11, 15)|var|float64
uop_6020 = relay.sin(var_6019.astype('float64')) # shape=(12, 11, 15)
uop_6023 = relay.sigmoid(uop_6020.astype('float32')) # shape=(12, 11, 15)
bop_6025 = relay.greater(uop_6023.astype('bool'), relay.reshape(uop_6020.astype('bool'), relay.shape_of(uop_6023))) # shape=(12, 11, 15)
func_2245_call = mod.get_global_var('func_2245')
func_2248_call = mutated_mod.get_global_var('func_2248')
const_6029 = relay.const([2,5,-8,-6,-6,-10,9,-10,1,-5,-5,5,-6,10,-2,7,-8,2,7,-4,8,1,-2,-10,-3,9,-10,5,-7,-7,-1,-5,-9,6,6,10,4,1,2,-8,6,5,6,-1,-5,4,-5,5,-5,-3,-1,-4,4,-4,7,-3,1,-9,10,-2,10,-8,-6,-2,-4,-3,-8,3,-2,-8,8,2,-9,-10,2,-3,9,-9,4,9,4,6,-9,-6,7,10,5,-9,-4,5,-1,8,10,9,9,-6,10,-7,-3,1,-6,7,4,8,-5,6,3,-7,3,1,-4,5,10,-4,-6,5,6,3,-8,-10,8,-8,-1,-4,-3,-6,-1,-2,6,6,-8,4,-2,6,2,4,3,8,9,2,-8,-10,1,10,5,-9,-6,7,-2,2,8,-1,-8,-8,-3,-10,9,10,9,7,-5,-4,-1,-10,3,-6,-8,3,8,-2,2,-3,-9,10,2,-1,-8,-9,6,-2,3,-2,-7,-6,8,7,9,10,-1,-7,10,2,-3,-6,4,9,-6,-6,-8,7,2,8,1,1,-8,9,-8,-5,3,1,-9,-5,-3,-7,5,9,-7,-9,6,-4,-10,-4,3,-9,-3,6,-1,9,3,-5,2,-6,-4,9,4,-4,-4,3,10,-6,2,-6,-4,-7,3,-5,-9,-3,-5,10,-8,6,-5,-1,-2,-1,-10,7,2,-1,7,9,9,8,-8,5,-5,8,-1,6,-6,8,-5,-10,-3,3,6,-8,6,9,4,-10,5,8,6,9,-2,6,4,-6,6,6,1,-9,10,3,-1,1,-10,4,-5,-6,2,6,-9,-4,10,-8,-6,8,-4,7,3,-5,-9,8,4,2,-9,1,-3,-2,-6,3,-7,5,-3,1,2,-10,-5,-6,-6,4,-9,1,1,-4,-6,-9,2,-8,-6,-3,-5,1,5,8,6,-5,8,-8,3,-7,10,4,10,7,1,6,4,5,-5,-9,6,7,-1,-6,-6,5,-9,-8,-3,6,-4,1,10,-9,10,5,3,-1,-6,1,1,5,-5,8,-7,-3,9,-1,9,-5,8,-6,-3,-7,5,8,-2,-6,8,-4,-10,-8,-10,-1,10,9,-7,1,3,6,6,3,-1,-6,3,-5,-8,6,-1,6,-1,9,1,8,10,1,2,-5,-3,1,4,10,9,9,-3,3,-1,3,-4,3,5,-1,7,9,8,7,9,5,5,10,-10,-3,-7,10,-5,7,-8,8,-6,-7,-10,8,2,-7,-7,5,2,-6,-4,2,1,1,10,7,10,-10,-6,10,-10,-7,4,4,-9,6,-7,3,10,9,7,3,10,6,2,6,-2,10,-6,-3,3,10,-10,1,-9,9,6,1,-7,-4,4,-10,-6,6,3,6,-9,-9,1,8,-8,-6,-10,2,8,6,-9,-2,-7,4,-6,-9,9,5,-5,10,1,-10,4,8,-10,-6,3,2,4,1,8,-8,-7,7,-7,5,-4,9,-9,-2,1,7,-5,3,7,-1,5,4,-2,4,-9,-5,6,-2,1,5,1,-8,-1,6,-7,2,6,-6,8,-6,-2,1,7,4,-7,-1,-9,5,-10,-9,-9,10,9,-4,7,4,-4,-7,8,8,10,-4,-8,8,-3,4,-10,-9,-4,5,-6,-1,2,9,1,7,-7,-10,-1,3,-7,-8,-3,5,-4,9,7,-10,1,-3,9,4,9,10,-4,6,10,-8,2,2,-4,-6,2,4,-7,6,4,-1,3,5,-4,9,-8,1,-2,8,6,9,-1,-3,-9,-4,8,6,-7,-1,3,-9,10,-2,4,10,-3,-8,-3,3,-10,3,-2,-1,1,4,-1,6,4,6,8,-6,7,7,4,10,-9,-2,-5,2,5,1,-10,9,-4,1,-1,5,2,-5,-4,-2,1,3,-9,1,4,9,-8,-9,-3,8,-7,9,-7,-6,1,-3,4,-8,5,-4,-9,5,3,-2,2,10,5,7,-6,-2,-2,9,4,-6,7,8,-7,5,-6,-8,-9,8,-2,3,-1,-6,1,-7,-3,4,7,5,-6,5,7,2,6,9,6,-5,-8,-10,-6,-4,1,8,9,-1,-4,-6,-10,9,8,-3,2,1,-8,-7,-7,-3,8,-6,7,-1,-2,5,5,9,4,10,-9,-3,4,-1,-10,1,8,-4,-7,-7,2,-2,-6,4,2,-5,9,-5,-8,5,-3,-8,8,-5,7,-3,-3,-7,5,-8,-7,7,1,-8,10,-8,4,5,6,-6,-1,-1,3,5,1,-6,-8,-6,-6,-7,10,1,-9,-7,-6,9,1,6,-10,-3,-4,-1,5,-1,-4,9,-4,-9,9,-10,-6,-6,1,-10,-3,-3,-5,9,-4,2,9,-3,6,-5,-7,-1,6,-9,-9,9,5,9,8,1,-8,-1,4,1,-5,4,3,-4,-5,7,3,4,-8,9,10,-10,-3,-9,-5,9,-7,10,2,-1,7,9,-4,10,-7,-9,-1,7,-10,-4,-7,2,8,3,6,-5,4,4,10,-1,5,1,-9,-1,-5,3,-8,5,9,-7,6,9,-7,-7,9,1,-9,1,3,6,-8,1,4,-3,-7,-9,2,2,-2,-8,8,6,-4,-5,8,-8,-10,4,8,-8,-8,8,6,-1,3,-1,9,-10,4,-3,-9,-1,-1,-5,-2,5,-2,10,-5,8,10,-8,-7,-5,6,-5,8,-3,1,-9,-3,-3,-7,6,-5,1,4,-6,10,3,-9,8,-6,-8,1,2,-2,-2,9,5,2,1,5,-8,9,10,2,5,1,9,-1,-9,-7,3,8,-1,-4,-8,-10,-6,10,6,2,-3,5,6,-2,-10,-5,-4,3,-5,10,7,-2,10,7,-7,9,3,-10,3,-3,1,-8,-2,2,7,1,-3], dtype = "uint64")#candidate|6029|(1080,)|const|uint64
call_6028 = func_2245_call(relay.reshape(const_6029.astype('uint64'), [10, 12, 9]))
call_6030 = func_2245_call(relay.reshape(const_6029.astype('uint64'), [10, 12, 9]))
uop_6031 = relay.atan(uop_6020.astype('float32')) # shape=(12, 11, 15)
func_5192_call = mod.get_global_var('func_5192')
func_5194_call = mutated_mod.get_global_var('func_5194')
call_6033 = relay.TupleGetItem(func_5192_call(), 0)
call_6034 = relay.TupleGetItem(func_5194_call(), 0)
uop_6036 = relay.sinh(bop_6025.astype('float32')) # shape=(12, 11, 15)
func_4512_call = mod.get_global_var('func_4512')
func_4513_call = mutated_mod.get_global_var('func_4513')
call_6045 = func_4512_call()
call_6046 = func_4512_call()
func_1234_call = mod.get_global_var('func_1234')
func_1236_call = mutated_mod.get_global_var('func_1236')
call_6055 = func_1234_call()
call_6056 = func_1234_call()
func_532_call = mod.get_global_var('func_532')
func_534_call = mutated_mod.get_global_var('func_534')
call_6061 = relay.TupleGetItem(func_532_call(relay.reshape(call_6055.astype('float64'), [8, 15, 12])), 0)
call_6062 = relay.TupleGetItem(func_534_call(relay.reshape(call_6055.astype('float64'), [8, 15, 12])), 0)
var_6067 = relay.var("var_6067", dtype = "float32", shape = (12, 11, 15))#candidate|6067|(12, 11, 15)|var|float32
bop_6068 = relay.logical_and(uop_6036.astype('bool'), relay.reshape(var_6067.astype('bool'), relay.shape_of(uop_6036))) # shape=(12, 11, 15)
output = relay.Tuple([call_6028,const_6029,uop_6031,call_6033,call_6045,call_6055,call_6061,bop_6068,])
output2 = relay.Tuple([call_6030,const_6029,uop_6031,call_6034,call_6046,call_6056,call_6062,bop_6068,])
func_6073 = relay.Function([var_6019,var_6067,], output)
mod['func_6073'] = func_6073
mod = relay.transform.InferType()(mod)
var_6074 = relay.var("var_6074", dtype = "float64", shape = (12, 11, 15))#candidate|6074|(12, 11, 15)|var|float64
var_6075 = relay.var("var_6075", dtype = "float32", shape = (12, 11, 15))#candidate|6075|(12, 11, 15)|var|float32
output = func_6073(var_6074,var_6075,)
func_6076 = relay.Function([var_6074,var_6075,], output)
mutated_mod['func_6076'] = func_6076
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5357_call = mod.get_global_var('func_5357')
func_5358_call = mutated_mod.get_global_var('func_5358')
call_6078 = func_5357_call()
call_6079 = func_5357_call()
output = relay.Tuple([call_6078,])
output2 = relay.Tuple([call_6079,])
func_6080 = relay.Function([], output)
mod['func_6080'] = func_6080
mod = relay.transform.InferType()(mod)
output = func_6080()
func_6081 = relay.Function([], output)
mutated_mod['func_6081'] = func_6081
mutated_mod = relay.transform.InferType()(mutated_mod)
var_6126 = relay.var("var_6126", dtype = "float64", shape = (9, 1, 1))#candidate|6126|(9, 1, 1)|var|float64
uop_6127 = relay.sigmoid(var_6126.astype('float64')) # shape=(9, 1, 1)
output = uop_6127
output2 = uop_6127
func_6134 = relay.Function([var_6126,], output)
mod['func_6134'] = func_6134
mod = relay.transform.InferType()(mod)
mutated_mod['func_6134'] = func_6134
mutated_mod = relay.transform.InferType()(mutated_mod)
var_6135 = relay.var("var_6135", dtype = "float64", shape = (9, 1, 1))#candidate|6135|(9, 1, 1)|var|float64
func_6134_call = mutated_mod.get_global_var('func_6134')
call_6136 = func_6134_call(var_6135)
output = call_6136
func_6137 = relay.Function([var_6135], output)
mutated_mod['func_6137'] = func_6137
mutated_mod = relay.transform.InferType()(mutated_mod)
var_6142 = relay.var("var_6142", dtype = "float64", shape = (1, 1, 15))#candidate|6142|(1, 1, 15)|var|float64
uop_6143 = relay.rsqrt(var_6142.astype('float64')) # shape=(1, 1, 15)
func_1966_call = mod.get_global_var('func_1966')
func_1968_call = mutated_mod.get_global_var('func_1968')
call_6146 = relay.TupleGetItem(func_1966_call(), 0)
call_6147 = relay.TupleGetItem(func_1968_call(), 0)
output = relay.Tuple([uop_6143,call_6146,])
output2 = relay.Tuple([uop_6143,call_6147,])
func_6153 = relay.Function([var_6142,], output)
mod['func_6153'] = func_6153
mod = relay.transform.InferType()(mod)
mutated_mod['func_6153'] = func_6153
mutated_mod = relay.transform.InferType()(mutated_mod)
var_6154 = relay.var("var_6154", dtype = "float64", shape = (1, 1, 15))#candidate|6154|(1, 1, 15)|var|float64
func_6153_call = mutated_mod.get_global_var('func_6153')
call_6155 = func_6153_call(var_6154)
output = call_6155
func_6156 = relay.Function([var_6154], output)
mutated_mod['func_6156'] = func_6156
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2203_call = mod.get_global_var('func_2203')
func_2204_call = mutated_mod.get_global_var('func_2204')
call_6172 = relay.TupleGetItem(func_2203_call(), 1)
call_6173 = relay.TupleGetItem(func_2204_call(), 1)
output = relay.Tuple([call_6172,])
output2 = relay.Tuple([call_6173,])
func_6178 = relay.Function([], output)
mod['func_6178'] = func_6178
mod = relay.transform.InferType()(mod)
output = func_6178()
func_6179 = relay.Function([], output)
mutated_mod['func_6179'] = func_6179
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4208_call = mod.get_global_var('func_4208')
func_4209_call = mutated_mod.get_global_var('func_4209')
call_6213 = func_4208_call()
call_6214 = func_4208_call()
output = relay.Tuple([call_6213,])
output2 = relay.Tuple([call_6214,])
func_6227 = relay.Function([], output)
mod['func_6227'] = func_6227
mod = relay.transform.InferType()(mod)
output = func_6227()
func_6228 = relay.Function([], output)
mutated_mod['func_6228'] = func_6228
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5601_call = mod.get_global_var('func_5601')
func_5602_call = mutated_mod.get_global_var('func_5602')
call_6288 = relay.TupleGetItem(func_5601_call(), 0)
call_6289 = relay.TupleGetItem(func_5602_call(), 0)
func_2527_call = mod.get_global_var('func_2527')
func_2529_call = mutated_mod.get_global_var('func_2529')
call_6290 = relay.TupleGetItem(func_2527_call(), 1)
call_6291 = relay.TupleGetItem(func_2529_call(), 1)
func_6134_call = mod.get_global_var('func_6134')
func_6137_call = mutated_mod.get_global_var('func_6137')
var_6302 = relay.var("var_6302", dtype = "float64", shape = (9,))#candidate|6302|(9,)|var|float64
call_6301 = func_6134_call(relay.reshape(var_6302.astype('float64'), [9, 1, 1]))
call_6303 = func_6134_call(relay.reshape(var_6302.astype('float64'), [9, 1, 1]))
output = relay.Tuple([call_6288,call_6290,call_6301,var_6302,])
output2 = relay.Tuple([call_6289,call_6291,call_6303,var_6302,])
func_6310 = relay.Function([var_6302,], output)
mod['func_6310'] = func_6310
mod = relay.transform.InferType()(mod)
mutated_mod['func_6310'] = func_6310
mutated_mod = relay.transform.InferType()(mutated_mod)
var_6311 = relay.var("var_6311", dtype = "float64", shape = (9,))#candidate|6311|(9,)|var|float64
func_6310_call = mutated_mod.get_global_var('func_6310')
call_6312 = func_6310_call(var_6311)
output = call_6312
func_6313 = relay.Function([var_6311], output)
mutated_mod['func_6313'] = func_6313
mutated_mod = relay.transform.InferType()(mutated_mod)
var_6335 = relay.var("var_6335", dtype = "float32", shape = (1, 4, 12))#candidate|6335|(1, 4, 12)|var|float32
uop_6336 = relay.log10(var_6335.astype('float32')) # shape=(1, 4, 12)
func_2348_call = mod.get_global_var('func_2348')
func_2349_call = mutated_mod.get_global_var('func_2349')
call_6339 = relay.TupleGetItem(func_2348_call(), 0)
call_6340 = relay.TupleGetItem(func_2349_call(), 0)
bop_6341 = relay.equal(var_6335.astype('bool'), relay.reshape(uop_6336.astype('bool'), relay.shape_of(var_6335))) # shape=(1, 4, 12)
var_6374 = relay.var("var_6374", dtype = "float32", shape = (3, 4, 12))#candidate|6374|(3, 4, 12)|var|float32
bop_6375 = relay.left_shift(uop_6336.astype('uint64'), var_6374.astype('uint64')) # shape=(3, 4, 12)
output = relay.Tuple([call_6339,bop_6341,bop_6375,])
output2 = relay.Tuple([call_6340,bop_6341,bop_6375,])
func_6383 = relay.Function([var_6335,var_6374,], output)
mod['func_6383'] = func_6383
mod = relay.transform.InferType()(mod)
mutated_mod['func_6383'] = func_6383
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6383_call = mutated_mod.get_global_var('func_6383')
var_6385 = relay.var("var_6385", dtype = "float32", shape = (1, 4, 12))#candidate|6385|(1, 4, 12)|var|float32
var_6386 = relay.var("var_6386", dtype = "float32", shape = (3, 4, 12))#candidate|6386|(3, 4, 12)|var|float32
call_6384 = func_6383_call(var_6385,var_6386,)
output = call_6384
func_6387 = relay.Function([var_6385,var_6386,], output)
mutated_mod['func_6387'] = func_6387
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2953_call = mod.get_global_var('func_2953')
func_2955_call = mutated_mod.get_global_var('func_2955')
call_6398 = relay.TupleGetItem(func_2953_call(), 1)
call_6399 = relay.TupleGetItem(func_2955_call(), 1)
func_3059_call = mod.get_global_var('func_3059')
func_3062_call = mutated_mod.get_global_var('func_3062')
const_6408 = relay.const([[-2],[-2],[2],[7],[-2],[6],[-7],[-10],[-6],[-7],[-4],[-1],[-1],[5],[-1],[-5],[-5],[-5],[6],[2],[10],[-5],[-10],[7],[7],[-5],[10],[2],[-10],[-5],[1],[3],[6],[5],[-1],[-9],[-5],[-8],[-9],[-3],[1],[-7],[-5],[-2],[-5],[8],[-6],[2],[-9],[3],[-3],[1],[-5],[3],[3],[10],[3],[5],[-6],[2],[4],[5],[-9],[2],[-3],[-7],[7],[4],[-6],[6],[4],[-3],[3],[6],[-5],[-1],[10],[-10],[5],[8],[1],[6],[-3],[10],[1],[7],[3],[-4],[-8],[-6],[-3],[-3],[-4],[-4],[9],[7],[-7],[-5],[-5],[-10],[-2],[2],[8],[2],[8],[-8],[-6],[4],[6],[-1],[9],[-4],[-2],[7],[-6],[2],[5],[-3],[-1],[9],[-6],[2],[10],[4],[-5],[-2],[2],[1],[4],[1],[-6],[-10],[-8],[3],[10],[3],[-1],[-10],[1],[6],[8],[10],[-3],[-5],[-8],[7],[-1],[4],[1],[-1],[9],[9],[-8],[-10],[10],[7],[-3],[9],[6],[3],[2],[10],[8],[-5],[1],[-10],[-1],[-10],[-7],[-10],[-6],[6],[-1],[-5],[10],[-5],[-7],[-8],[-6],[4],[10],[-8],[2],[-1],[-8],[-5],[-7],[-2],[-7],[-9],[5],[1],[-6],[-7],[-1],[-2],[6],[1],[-9],[8],[-3],[-2],[5],[1],[2],[-8],[2],[9],[8],[4],[8],[10],[7],[-3],[-6],[-6],[5],[1],[1],[-1],[-10],[10],[-10],[-3],[8],[6],[3],[-1],[7],[-9],[-4],[-2],[-10],[-8],[-5],[-5],[-7],[8],[-5],[-6]], dtype = "uint16")#candidate|6408|(240, 1)|const|uint16
call_6407 = relay.TupleGetItem(func_3059_call(relay.reshape(const_6408.astype('uint16'), [10, 3, 8]), relay.reshape(const_6408.astype('uint16'), [10, 3, 8]), ), 0)
call_6409 = relay.TupleGetItem(func_3062_call(relay.reshape(const_6408.astype('uint16'), [10, 3, 8]), relay.reshape(const_6408.astype('uint16'), [10, 3, 8]), ), 0)
func_1526_call = mod.get_global_var('func_1526')
func_1528_call = mutated_mod.get_global_var('func_1528')
call_6410 = func_1526_call()
call_6411 = func_1526_call()
uop_6426 = relay.atanh(call_6407.astype('float64')) # shape=(10, 3, 8)
uop_6428 = relay.atanh(call_6409.astype('float64')) # shape=(10, 3, 8)
output = relay.Tuple([call_6398,const_6408,call_6410,uop_6426,])
output2 = relay.Tuple([call_6399,const_6408,call_6411,uop_6428,])
F = relay.Function([], output)
mod['main'] = F
mod = relay.transform.InferType()(mod)
print('==========mod==========')
print(mod.astext(show_meta_data=False))
print('===================================')
F = relay.Function([], output2)
mutated_mod['main'] = F
mutated_mod = relay.transform.InferType()(mutated_mod)
print('==========mutated_mod==========')
print(mutated_mod.astext(show_meta_data=False))
print('===================================')
graph, lib, params = relay.build(mod, target='llvm')
module1 = graph_runtime.create(graph, lib, tvm.device('llvm',0))
intrp2 = relay.build_module.create_executor('graph', mod, tvm.device('llvm',0),'llvm')
intrp3 = relay.build_module.create_executor('debug', mod, tvm.device('llvm',0),'llvm')
intrp4 = relay.build_module.create_executor('vm', mod, tvm.device('llvm',0),'llvm')
graph, lib, params = relay.build(mod, target='cuda')
module5 = graph_runtime.create(graph, lib, tvm.device('cuda',0))
intrp6 = relay.build_module.create_executor('graph', mod, tvm.device('cuda',0),'cuda')
intrp7 = relay.build_module.create_executor('debug', mod, tvm.device('cuda',0),'cuda')
intrp8 = relay.build_module.create_executor('vm', mod, tvm.device('cuda',0),'cuda')
seq = Sequential([
	relay.transform.AlterOpLayout(),
	relay.transform.AnnotateSpans(),
	relay.transform.BatchingOps(),
	relay.transform.CanonicalizeCast(),
	relay.transform.CanonicalizeOps(),
	relay.transform.DeadCodeElimination(),
	relay.transform.DynamicToStatic(),
	relay.transform.FastMath(),
	relay.transform.FirstOrderGradient(),
	relay.transform.EliminateCommonSubexpr(),
	relay.transform.MergeCompilerRegions(),
	relay.transform.Inline(),
	relay.transform.LambdaLift(),
	relay.transform.LazyGradientInit(),
	relay.transform.PartialEvaluate(),
	relay.transform.Legalize(),
])
mod = seq(mod)
print(mod.astext(show_meta_data=False))
graph, lib, params = relay.build(mod, target='llvm')
module9 = graph_runtime.create(graph, lib, tvm.device('llvm',0))
intrp10 = relay.build_module.create_executor('graph', mod, tvm.device('llvm',0),'llvm')
intrp11 = relay.build_module.create_executor('debug', mod, tvm.device('llvm',0),'llvm')
intrp12 = relay.build_module.create_executor('vm', mod, tvm.device('llvm',0),'llvm')
graph, lib, params = relay.build(mod, target='cuda')
module13 = graph_runtime.create(graph, lib, tvm.device('cuda',0))
intrp14 = relay.build_module.create_executor('graph', mod, tvm.device('cuda',0),'cuda')
intrp15 = relay.build_module.create_executor('debug', mod, tvm.device('cuda',0),'cuda')
intrp16 = relay.build_module.create_executor('vm', mod, tvm.device('cuda',0),'cuda')
graph, lib, params = relay.build(mutated_mod, target='llvm')
module17 = graph_runtime.create(graph, lib, tvm.device('llvm',0))
intrp18 = relay.build_module.create_executor('graph', mutated_mod, tvm.device('llvm',0),'llvm')
intrp19 = relay.build_module.create_executor('debug', mutated_mod, tvm.device('llvm',0),'llvm')
intrp20 = relay.build_module.create_executor('vm', mutated_mod, tvm.device('llvm',0),'llvm')
graph, lib, params = relay.build(mutated_mod, target='cuda')
module21 = graph_runtime.create(graph, lib, tvm.device('cuda',0))
intrp22 = relay.build_module.create_executor('graph', mutated_mod, tvm.device('cuda',0),'cuda')
intrp23 = relay.build_module.create_executor('debug', mutated_mod, tvm.device('cuda',0),'cuda')
intrp24 = relay.build_module.create_executor('vm', mutated_mod, tvm.device('cuda',0),'cuda')

==========mod==========
#[version = "0.0.5"]
def @func_1087(%var_1075: Tensor[(12, 16, 8), uint8], %var_1076: Tensor[(12, 16, 8), uint8]) -> (Tensor[(12, 16, 8), bool], Tensor[(2, 2, 5), uint64], Tensor[(20), uint64]) {
  %0 = cast(%var_1076, dtype="bool") /* ty=Tensor[(12, 16, 8), bool] */;
  %1 = shape_of(%var_1075, dtype="int32") /* ty=Tensor[(3), int32] */;
  %2 = cast(%var_1075, dtype="bool") /* ty=Tensor[(12, 16, 8), bool] */;
  %3 = dyn.reshape(%0, %1, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %4 = cast(meta[relay.Constant][0] /* ty=Tensor[(20), uint64] */, dtype="uint64") /* ty=Tensor[(20), uint64] */;
  %5 = cast(meta[relay.Constant][0] /* ty=Tensor[(20), uint64] */, dtype="uint64") /* ty=Tensor[(20), uint64] */;
  %6 = reshape(%4, newshape=[2, 2, 5]) /* ty=Tensor[(2, 2, 5), uint64] */;
  %7 = reshape(%5, newshape=[2, 2, 5]) /* ty=Tensor[(2, 2, 5), uint64] */;
  %8 = @func_571(%6, %7) /* ty=(Tensor[(2, 2, 5), uint64], Tensor[(14, 8, 13), int32], Tensor[(1456), int32]) */;
  %9 = equal(%2, %3) /* ty=Tensor[(12, 16, 8), bool] */;
  %10 = %8.0;
  (%9, %10, meta[relay.Constant][0] /* ty=Tensor[(20), uint64] */)
}

def @func_6966(%var_6933: Tensor[(24, 10), float64]) -> (Tensor[(5, 4, 14), bool], Tensor[(30), float64], Tensor[(24, 10), float64], Tensor[(1536), uint8], Tensor[(30), float64], Tensor[(?, 810), int64], Tensor[(15, 8, 12), float64], Tensor[(?, 810), float64]) {
  %11 = @func_6022() /* ty=(Tensor[(5, 4, 14), bool],) */;
  %12 = cast(%var_6933, dtype="float64") /* ty=Tensor[(24, 10), float64] */;
  %13 = cast(meta[relay.Constant][1] /* ty=Tensor[(1536), uint8] */, dtype="uint8") /* ty=Tensor[(1536), uint8] */;
  %14 = cast(meta[relay.Constant][2] /* ty=Tensor[(30), float64] */, dtype="float64") /* ty=Tensor[(30), float64] */;
  %15 = reshape(%12, newshape=[5, 6, 8]) /* ty=Tensor[(5, 6, 8), float64] */;
  %16 = reshape(%13, newshape=[1536]) /* ty=Tensor[(1536), uint8] */;
  %17 = reshape(%14, newshape=[30]) /* ty=Tensor[(30), float64] */;
  %18 = @func_2209(%15, %16, %17) /* ty=(Tensor[(10, 13, 3), float64], Tensor[(450), float32], Tensor[(1536), uint8], Tensor[(1, 182), int8], Tensor[(30), float64], Tensor[(5, 6, 8), float32]) */;
  %19 = @func_4194() /* ty=(Tensor[(15, 8, 12), float64], Tensor[(6, 15, 9), float64], Tensor[(1, 810), float32]) */;
  %20 = %19.2;
  %21 = cast(%20, dtype="float32") /* ty=Tensor[(1, 810), float32] */;
  %22 = sigmoid(%21) /* ty=Tensor[(1, 810), float32] */;
  %23 = cast(%22, dtype="float64") /* ty=Tensor[(1, 810), float64] */;
  %24 = log2(%23) /* ty=Tensor[(1, 810), float64] */;
  %25 = cast(%24, dtype="int64") /* ty=Tensor[(1, 810), int64] */;
  %26 = shape_of(%22, dtype="int32") /* ty=Tensor[(2), int32] */;
  %27 = cast(%22, dtype="int64") /* ty=Tensor[(1, 810), int64] */;
  %28 = dyn.reshape(%25, %26, newshape=[]) /* ty=Tensor[(?, ?), int64] */;
  %29 = cast(%20, dtype="float64") /* ty=Tensor[(1, 810), float64] */;
  %30 = shape_of(%24, dtype="int32") /* ty=Tensor[(2), int32] */;
  %31 = cast(%24, dtype="float64") /* ty=Tensor[(1, 810), float64] */;
  %32 = dyn.reshape(%29, %30, newshape=[]) /* ty=Tensor[(?, ?), float64] */;
  %33 = %11.0;
  %34 = %18.4;
  %35 = right_shift(%27, %28) /* ty=Tensor[(?, 810), int64] */;
  %36 = @func_5977() /* ty=Tensor[(15, 8, 12), float64] */;
  %37 = mod(%31, %32) /* ty=Tensor[(?, 810), float64] */;
  (%33, %34, %var_6933, meta[relay.Constant][1] /* ty=Tensor[(1536), uint8] */, meta[relay.Constant][2] /* ty=Tensor[(30), float64] */, %35, %36, %37)
}

def @func_5296(%var_5277: Tensor[(1440), float64], %var_5289: Tensor[(200), int8]) -> (Tensor[(6, 6, 8), float32], Tensor[(15, 8, 12), int32], Tensor[(1440), float64], Tensor[(14, 8, 13), int32], Tensor[(1456), int32], Tensor[(5, 5, 8), int8], Tensor[(200), int8]) {
  %38 = cast(%var_5277, dtype="float64") /* ty=Tensor[(1440), float64] */;
  %39 = cast(%var_5277, dtype="float64") /* ty=Tensor[(1440), float64] */;
  %40 = reshape(%38, newshape=[15, 8, 12]) /* ty=Tensor[(15, 8, 12), float64] */;
  %41 = reshape(%39, newshape=[15, 8, 12]) /* ty=Tensor[(15, 8, 12), float64] */;
  %42 = @func_3956(%40, %41) /* ty=(Tensor[(15, 8, 12), uint16], Tensor[(15, 8, 12), int32]) */;
  %43 = cast(meta[relay.Constant][3] /* ty=Tensor[(1456), int32] */, dtype="int32") /* ty=Tensor[(1456), int32] */;
  %44 = cast(meta[relay.Constant][3] /* ty=Tensor[(1456), int32] */, dtype="int32") /* ty=Tensor[(1456), int32] */;
  %45 = reshape(%43, newshape=[14, 8, 13]) /* ty=Tensor[(14, 8, 13), int32] */;
  %46 = reshape(%44, newshape=[14, 8, 13]) /* ty=Tensor[(14, 8, 13), int32] */;
  %47 = @func_411(%45, %46) /* ty=(Tensor[(14, 8, 13), int32],) */;
  %48 = cast(%var_5289, dtype="int8") /* ty=Tensor[(200), int8] */;
  %49 = reshape(%48, newshape=[5, 5, 8]) /* ty=Tensor[(5, 5, 8), int8] */;
  %50 = @func_4007() /* ty=Tensor[(6, 6, 8), float32] */;
  %51 = %42.1;
  %52 = %47.0;
  %53 = @func_2985(%49) /* ty=Tensor[(5, 5, 8), int8] */;
  (%50, %51, %var_5277, %52, meta[relay.Constant][3] /* ty=Tensor[(1456), int32] */, %53, %var_5289)
}

def @func_8873(%var_8830: Tensor[(3, 14, 5), int16]) -> (Tensor[(5, 4, 14), float64], Tensor[(15, 8, 12), float64], Tensor[(3, 14, 5), bool]) {
  %54 = cast(%var_8830, dtype="bool") /* ty=Tensor[(3, 14, 5), bool] */;
  %55 = shape_of(meta[relay.Constant][4] /* ty=Tensor[(3, 14, 5), int16] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %56 = cast(meta[relay.Constant][4] /* ty=Tensor[(3, 14, 5), int16] */, dtype="bool") /* ty=Tensor[(3, 14, 5), bool] */;
  %57 = dyn.reshape(%54, %55, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %58 = greater_equal(%56, %57) /* ty=Tensor[(3, 14, 5), bool] */;
  %59 = cast(%var_8830, dtype="float64") /* ty=Tensor[(3, 14, 5), float64] */;
  %60 = atanh(%59) /* ty=Tensor[(3, 14, 5), float64] */;
  %61 = cast(%60, dtype="bool") /* ty=Tensor[(3, 14, 5), bool] */;
  %62 = shape_of(%58, dtype="int32") /* ty=Tensor[(3), int32] */;
  %63 = cast(%58, dtype="bool") /* ty=Tensor[(3, 14, 5), bool] */;
  %64 = dyn.reshape(%61, %62, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %65 = @func_8292() /* ty=Tensor[(5, 4, 14), float64] */;
  %66 = @func_8613() /* ty=Tensor[(15, 8, 12), float64] */;
  %67 = less_equal(%63, %64) /* ty=Tensor[(3, 14, 5), bool] */;
  (%65, %66, %67)
}

def @func_6670() -> Tensor[(6, 6, 8), float32] {
  %68 = @func_4125() /* ty=(Tensor[(6, 6, 8), bool], Tensor[(6, 6, 8), float32], Tensor[(6, 6, 8), float32]) */;
  %68.1
}

def @func_6470() -> (Tensor[(15, 8, 12), bool],) {
  %69 = @func_5907() /* ty=Tensor[(15, 8, 12), float64] */;
  %70 = cast(meta[relay.Constant][5] /* ty=Tensor[(15, 8, 12), float64] */, dtype="bool") /* ty=Tensor[(15, 8, 12), bool] */;
  %71 = shape_of(%69, dtype="int32") /* ty=Tensor[(3), int32] */;
  %72 = cast(%69, dtype="bool") /* ty=Tensor[(15, 8, 12), bool] */;
  %73 = dyn.reshape(%70, %71, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %74 = less_equal(%72, %73) /* ty=Tensor[(15, 8, 12), bool] */;
  (%74,)
}

def @func_4891() -> (Tensor[(15, 8, 12), float64],) {
  %75 = @func_4194() /* ty=(Tensor[(15, 8, 12), float64], Tensor[(6, 15, 9), float64], Tensor[(1, 810), float32]) */;
  %76 = %75.0;
  (%76,)
}

def @func_8273() -> (Tensor[(1536), uint8],) {
  %77 = @func_5263() /* ty=(Tensor[(6, 6, 8), int64], Tensor[(420), uint8], Tensor[(420), uint8], Tensor[(1536), uint8], Tensor[(15, 8, 12), float64]) */;
  %78 = %77.3;
  (%78,)
}

def @func_8416() -> (Tensor[(15, 8, 12), float64],) {
  %79 = @func_4029() /* ty=(Tensor[(15, 8, 12), float64],) */;
  %80 = %79.0;
  (%80,)
}

def @func_8166() -> Tensor[(2156), float32] {
  %81 = @func_8102() /* ty=(Tensor[(15, 8, 12), float64], Tensor[(2156), float32], Tensor[(200), int8], Tensor[(2156), float32], Tensor[(1536), uint8], Tensor[(6, 6, 8), int64], Tensor[(96, 2), float32]) */;
  %81.1
}

def @func_9425() -> Tensor[(2156), float32] {
  %82 = @func_8102() /* ty=(Tensor[(15, 8, 12), float64], Tensor[(2156), float32], Tensor[(200), int8], Tensor[(2156), float32], Tensor[(1536), uint8], Tensor[(6, 6, 8), int64], Tensor[(96, 2), float32]) */;
  %82.1
}

def @main(%var_9540: Tensor[(6, 10, 4), float32]) -> Tensor[(6, 10, 4), bool] {
  %83 = cast(%var_9540, dtype="float32") /* ty=Tensor[(6, 10, 4), float32] */;
  %84 = log10(%83) /* ty=Tensor[(6, 10, 4), float32] */;
  %85 = cast(%var_9540, dtype="float32") /* ty=Tensor[(6, 10, 4), float32] */;
  %86 = shape_of(%84, dtype="int32") /* ty=Tensor[(3), int32] */;
  %87 = cast(%84, dtype="float32") /* ty=Tensor[(6, 10, 4), float32] */;
  %88 = dyn.reshape(%85, %86, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %89 = floor_mod(%87, %88) /* ty=Tensor[(6, 10, 4), float32] */;
  %90 = cast(%89, dtype="bool") /* ty=Tensor[(6, 10, 4), bool] */;
  %91 = shape_of(%84, dtype="int32") /* ty=Tensor[(3), int32] */;
  %92 = cast(%84, dtype="bool") /* ty=Tensor[(6, 10, 4), bool] */;
  %93 = dyn.reshape(%90, %91, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  less(%92, %93) /* ty=Tensor[(6, 10, 4), bool] */
}

def @func_2586(%var_2566: Tensor[(14, 11, 14), float32], %var_2567: Tensor[(14, 11, 14), float32]) -> (Tensor[(14, 11, 14), float32], Tensor[(14, 11, 14), float64]) {
  %94 = cast(%var_2567, dtype="float32") /* ty=Tensor[(14, 11, 14), float32] */;
  %95 = shape_of(%var_2566, dtype="int32") /* ty=Tensor[(3), int32] */;
  %96 = cast(%var_2566, dtype="float32") /* ty=Tensor[(14, 11, 14), float32] */;
  %97 = dyn.reshape(%94, %95, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %98 = cast(%var_2567, dtype="float64") /* ty=Tensor[(14, 11, 14), float64] */;
  %99 = cosh(%98) /* ty=Tensor[(14, 11, 14), float64] */;
  %100 = cast(%99, dtype="float64") /* ty=Tensor[(14, 11, 14), float64] */;
  %101 = subtract(%96, %97) /* ty=Tensor[(14, 11, 14), float32] */;
  %102 = log2(%100) /* ty=Tensor[(14, 11, 14), float64] */;
  (%101, %102)
}

def @func_4125() -> (Tensor[(6, 6, 8), bool], Tensor[(6, 6, 8), float32], Tensor[(6, 6, 8), float32]) {
  %103 = @func_4007() /* ty=Tensor[(6, 6, 8), float32] */;
  %104 = cast(meta[relay.Constant][6] /* ty=Tensor[(6, 6, 8), float32] */, dtype="bool") /* ty=Tensor[(6, 6, 8), bool] */;
  %105 = shape_of(%103, dtype="int32") /* ty=Tensor[(3), int32] */;
  %106 = cast(%103, dtype="bool") /* ty=Tensor[(6, 6, 8), bool] */;
  %107 = dyn.reshape(%104, %105, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %108 = cast(%103, dtype="float32") /* ty=Tensor[(6, 6, 8), float32] */;
  %109 = log2(%108) /* ty=Tensor[(6, 6, 8), float32] */;
  %110 = cast(%109, dtype="float32") /* ty=Tensor[(6, 6, 8), float32] */;
  %111 = not_equal(%106, %107) /* ty=Tensor[(6, 6, 8), bool] */;
  %112 = @func_4007() /* ty=Tensor[(6, 6, 8), float32] */;
  %113 = asinh(%110) /* ty=Tensor[(6, 6, 8), float32] */;
  (%111, %112, %113)
}

def @func_2310(%var_2284: Tensor[(390), float64], %var_2292: Tensor[(1536), uint8], %var_2298: Tensor[(240), float64], %var_2303: Tensor[(182), int8]) -> (Tensor[(3, 12, 16), float64], Tensor[(10, 13, 3), float64], Tensor[(1, 30), float64], Tensor[(390), float64], Tensor[(2, 2, 5), uint64], Tensor[(1536), uint8], Tensor[(450), float32], Tensor[(240), float64], Tensor[(2, 13, 7), bool], Tensor[(182), int8], Tensor[(12, 16, 8), bool]) {
  %114 = cast(meta[relay.Constant][7] /* ty=Tensor[(3, 12, 16), float64] */, dtype="float64") /* ty=Tensor[(3, 12, 16), float64] */;
  %115 = cast(meta[relay.Constant][8] /* ty=Tensor[(1, 30), float64] */, dtype="float64") /* ty=Tensor[(1, 30), float64] */;
  %116 = cast(%var_2284, dtype="float64") /* ty=Tensor[(390), float64] */;
  %117 = reshape(%115, newshape=[10, 1, 3]) /* ty=Tensor[(10, 1, 3), float64] */;
  %118 = reshape(%116, newshape=[10, 13, 3]) /* ty=Tensor[(10, 13, 3), float64] */;
  %119 = @func_397(%117, %118) /* ty=(Tensor[(10, 13, 3), float64],) */;
  %120 = cast(%var_2292, dtype="uint8") /* ty=Tensor[(1536), uint8] */;
  %121 = cast(%var_2292, dtype="uint8") /* ty=Tensor[(1536), uint8] */;
  %122 = reshape(%120, newshape=[12, 16, 8]) /* ty=Tensor[(12, 16, 8), uint8] */;
  %123 = reshape(%121, newshape=[12, 16, 8]) /* ty=Tensor[(12, 16, 8), uint8] */;
  %124 = @func_1087(%122, %123) /* ty=(Tensor[(12, 16, 8), bool], Tensor[(2, 2, 5), uint64], Tensor[(20), uint64]) */;
  %125 = cast(%var_2298, dtype="float64") /* ty=Tensor[(240), float64] */;
  %126 = cast(%var_2292, dtype="uint8") /* ty=Tensor[(1536), uint8] */;
  %127 = cast(meta[relay.Constant][8] /* ty=Tensor[(1, 30), float64] */, dtype="float64") /* ty=Tensor[(1, 30), float64] */;
  %128 = reshape(%125, newshape=[5, 6, 8]) /* ty=Tensor[(5, 6, 8), float64] */;
  %129 = reshape(%126, newshape=[1536]) /* ty=Tensor[(1536), uint8] */;
  %130 = reshape(%127, newshape=[30]) /* ty=Tensor[(30), float64] */;
  %131 = @func_2209(%128, %129, %130) /* ty=(Tensor[(10, 13, 3), float64], Tensor[(450), float32], Tensor[(1536), uint8], Tensor[(1, 182), int8], Tensor[(30), float64], Tensor[(5, 6, 8), float32]) */;
  %132 = cast(%var_2303, dtype="int8") /* ty=Tensor[(182), int8] */;
  %133 = reshape(%132, newshape=[2, 13, 7]) /* ty=Tensor[(2, 13, 7), int8] */;
  %134 = @func_1527(%133) /* ty=(Tensor[(2, 13, 7), bool], Tensor[(2, 13, 7), int16], Tensor[(2, 2, 5), uint64], Tensor[(20), uint64], Tensor[(14, 8, 13), int32]) */;
  %135 = cast(%var_2292, dtype="uint8") /* ty=Tensor[(1536), uint8] */;
  %136 = cast(%var_2292, dtype="uint8") /* ty=Tensor[(1536), uint8] */;
  %137 = reshape(%135, newshape=[12, 16, 8]) /* ty=Tensor[(12, 16, 8), uint8] */;
  %138 = reshape(%136, newshape=[12, 16, 8]) /* ty=Tensor[(12, 16, 8), uint8] */;
  %139 = @func_1087(%137, %138) /* ty=(Tensor[(12, 16, 8), bool], Tensor[(2, 2, 5), uint64], Tensor[(20), uint64]) */;
  %140 = cosh(%114) /* ty=Tensor[(3, 12, 16), float64] */;
  %141 = %119.0;
  %142 = %124.1;
  %143 = %131.1;
  %144 = %134.0;
  %145 = %139.0;
  (%140, %141, meta[relay.Constant][8] /* ty=Tensor[(1, 30), float64] */, %var_2284, %142, %var_2292, %143, %var_2298, %144, %var_2303, %145)
}

def @func_7423() -> (Tensor[(6, 6, 8), float32],) {
  %146 = @func_4125() /* ty=(Tensor[(6, 6, 8), bool], Tensor[(6, 6, 8), float32], Tensor[(6, 6, 8), float32]) */;
  %147 = %146.2;
  (%147,)
}

def @func_9390(%var_9346: Tensor[(5, 2, 14), int32], %var_9383: Tensor[(1536), uint8]) -> (Tensor[(5, 2, 14), int32], Tensor[(420), float32], Tensor[(1536), uint8]) {
  %148 = cast(meta[relay.Constant][9] /* ty=Tensor[(5, 2, 14), int32] */, dtype="int32") /* ty=Tensor[(5, 2, 14), int32] */;
  %149 = shape_of(%var_9346, dtype="int32") /* ty=Tensor[(3), int32] */;
  %150 = cast(%var_9346, dtype="int32") /* ty=Tensor[(5, 2, 14), int32] */;
  %151 = dyn.reshape(%148, %149, newshape=[]) /* ty=Tensor[(?, ?, ?), int32] */;
  %152 = @func_7047() /* ty=(Tensor[(420), float32],) */;
  %153 = @func_8273() /* ty=(Tensor[(1536), uint8],) */;
  %154 = %153.0;
  %155 = cast(%var_9383, dtype="uint8") /* ty=Tensor[(1536), uint8] */;
  %156 = shape_of(%154, dtype="int32") /* ty=Tensor[(1), int32] */;
  %157 = cast(%154, dtype="uint8") /* ty=Tensor[(1536), uint8] */;
  %158 = dyn.reshape(%155, %156, newshape=[]) /* ty=Tensor[(?), uint8] */;
  %159 = bitwise_or(%150, %151) /* ty=Tensor[(5, 2, 14), int32] */;
  %160 = %152.0;
  %161 = bitwise_xor(%157, %158) /* ty=Tensor[(1536), uint8] */;
  (%159, %160, %161)
}

def @func_411(%var_406: Tensor[(14, 8, 13), int32], %var_407: Tensor[(14, 8, 13), int32]) -> (Tensor[(14, 8, 13), int32],) {
  %162 = cast(%var_407, dtype="int32") /* ty=Tensor[(14, 8, 13), int32] */;
  %163 = shape_of(%var_406, dtype="int32") /* ty=Tensor[(3), int32] */;
  %164 = cast(%var_406, dtype="int32") /* ty=Tensor[(14, 8, 13), int32] */;
  %165 = dyn.reshape(%162, %163, newshape=[]) /* ty=Tensor[(?, ?, ?), int32] */;
  %166 = bitwise_and(%164, %165) /* ty=Tensor[(14, 8, 13), int32] */;
  (%166,)
}

def @func_3956(%var_3918: Tensor[(15, 8, 12), float64], %var_3941: Tensor[(15, 8, 12), float64]) -> (Tensor[(15, 8, 12), uint16], Tensor[(15, 8, 12), int32]) {
  %167 = @func_3825() /* ty=Tensor[(15, 8, 12), float64] */;
  %168 = cast(%var_3918, dtype="uint16") /* ty=Tensor[(15, 8, 12), uint16] */;
  %169 = shape_of(%167, dtype="int32") /* ty=Tensor[(3), int32] */;
  %170 = cast(%167, dtype="uint16") /* ty=Tensor[(15, 8, 12), uint16] */;
  %171 = dyn.reshape(%168, %169, newshape=[]) /* ty=Tensor[(?, ?, ?), uint16] */;
  %172 = cast(%var_3941, dtype="int32") /* ty=Tensor[(15, 8, 12), int32] */;
  %173 = shape_of(%var_3918, dtype="int32") /* ty=Tensor[(3), int32] */;
  %174 = cast(%var_3918, dtype="int32") /* ty=Tensor[(15, 8, 12), int32] */;
  %175 = dyn.reshape(%172, %173, newshape=[]) /* ty=Tensor[(?, ?, ?), int32] */;
  %176 = logical_xor(%170, %171) /* ty=Tensor[(15, 8, 12), uint16] */;
  %177 = add(%174, %175) /* ty=Tensor[(15, 8, 12), int32] */;
  (%176, %177)
}

def @func_5545(%var_5538: Tensor[(1, 20), uint64]) -> (Tensor[(15, 8, 12), float64], Tensor[(15, 8, 12), float64], Tensor[(?, 20), bool]) {
  %178 = @func_4891() /* ty=(Tensor[(15, 8, 12), float64],) */;
  %179 = cast(%var_5538, dtype="uint64") /* ty=Tensor[(1, 20), uint64] */;
  %180 = cast(%var_5538, dtype="uint64") /* ty=Tensor[(1, 20), uint64] */;
  %181 = reshape(%179, newshape=[2, 2, 5]) /* ty=Tensor[(2, 2, 5), uint64] */;
  %182 = reshape(%180, newshape=[2, 2, 5]) /* ty=Tensor[(2, 2, 5), uint64] */;
  %183 = @func_571(%181, %182) /* ty=(Tensor[(2, 2, 5), uint64], Tensor[(14, 8, 13), int32], Tensor[(1456), int32]) */;
  %184 = %183.0;
  %185 = cast(%184, dtype="bool") /* ty=Tensor[(2, 2, 5), bool] */;
  %186 = shape_of(%var_5538, dtype="int32") /* ty=Tensor[(2), int32] */;
  %187 = cast(%var_5538, dtype="bool") /* ty=Tensor[(1, 20), bool] */;
  %188 = dyn.reshape(%185, %186, newshape=[]) /* ty=Tensor[(?, ?), bool] */;
  %189 = %178.0;
  %190 = @func_5132() /* ty=Tensor[(15, 8, 12), float64] */;
  %191 = not_equal(%187, %188) /* ty=Tensor[(?, 20), bool] */;
  (%189, %190, %191)
}

def @func_397(%var_379: Tensor[(10, 1, 3), float64], %var_380: Tensor[(10, 13, 3), float64]) -> (Tensor[(10, 13, 3), float64],) {
  %192 = cast(%var_379, dtype="float64") /* ty=Tensor[(10, 1, 3), float64] */;
  %193 = cast(%var_380, dtype="float64") /* ty=Tensor[(10, 13, 3), float64] */;
  %194 = minimum(%192, %193) /* ty=Tensor[(10, 13, 3), float64] */;
  (%194,)
}

def @func_5263() -> (Tensor[(6, 6, 8), int64], Tensor[(420), uint8], Tensor[(420), uint8], Tensor[(1536), uint8], Tensor[(15, 8, 12), float64]) {
  %195 = @func_4125() /* ty=(Tensor[(6, 6, 8), bool], Tensor[(6, 6, 8), float32], Tensor[(6, 6, 8), float32]) */;
  %196 = %195.1;
  %197 = cast(meta[relay.Constant][10] /* ty=Tensor[(6, 6, 8), float32] */, dtype="int64") /* ty=Tensor[(6, 6, 8), int64] */;
  %198 = shape_of(%196, dtype="int32") /* ty=Tensor[(3), int32] */;
  %199 = cast(%196, dtype="int64") /* ty=Tensor[(6, 6, 8), int64] */;
  %200 = dyn.reshape(%197, %198, newshape=[]) /* ty=Tensor[(?, ?, ?), int64] */;
  %201 = cast(meta[relay.Constant][11] /* ty=Tensor[(420), uint8] */, dtype="uint8") /* ty=Tensor[(420), uint8] */;
  %202 = cast(meta[relay.Constant][12] /* ty=Tensor[(1536), uint8] */, dtype="uint8") /* ty=Tensor[(1536), uint8] */;
  %203 = reshape(%201, newshape=[420]) /* ty=Tensor[(420), uint8] */;
  %204 = reshape(%202, newshape=[1536]) /* ty=Tensor[(1536), uint8] */;
  %205 = @func_3879(%203, %204) /* ty=(Tensor[(15, 8, 12), float64], Tensor[(2, 2, 5), uint64], Tensor[(420), uint8], Tensor[(1536), uint8]) */;
  %206 = @func_4029() /* ty=(Tensor[(15, 8, 12), float64],) */;
  %207 = logical_xor(%199, %200) /* ty=Tensor[(6, 6, 8), int64] */;
  %208 = %205.2;
  %209 = %206.0;
  (%207, %208, meta[relay.Constant][11] /* ty=Tensor[(420), uint8] */, meta[relay.Constant][12] /* ty=Tensor[(1536), uint8] */, %209)
}

def @func_3690(%var_3633: Tensor[(200), int8], %var_3642: Tensor[(2156), float32], %var_3668: Tensor[(1536), uint8], %var_3671: Tensor[(2, 728), int32]) -> (Tensor[(5, 5, 8), int8], Tensor[(200), int8], Tensor[(14, 11, 14), float32], Tensor[(2156), float32], Tensor[(20), uint64], Tensor[(1536), uint8], Tensor[(14, 8, 13), int32], Tensor[(2, 728), int32], Tensor[(2, 1, 6), float32]) {
  %210 = cast(%var_3633, dtype="int8") /* ty=Tensor[(200), int8] */;
  %211 = reshape(%210, newshape=[5, 5, 8]) /* ty=Tensor[(5, 5, 8), int8] */;
  %212 = cast(%var_3642, dtype="float32") /* ty=Tensor[(2156), float32] */;
  %213 = cast(%var_3642, dtype="float32") /* ty=Tensor[(2156), float32] */;
  %214 = reshape(%212, newshape=[14, 11, 14]) /* ty=Tensor[(14, 11, 14), float32] */;
  %215 = reshape(%213, newshape=[14, 11, 14]) /* ty=Tensor[(14, 11, 14), float32] */;
  %216 = @func_2586(%214, %215) /* ty=(Tensor[(14, 11, 14), float32], Tensor[(14, 11, 14), float64]) */;
  %217 = cast(%var_3668, dtype="uint8") /* ty=Tensor[(1536), uint8] */;
  %218 = cast(%var_3668, dtype="uint8") /* ty=Tensor[(1536), uint8] */;
  %219 = reshape(%217, newshape=[12, 16, 8]) /* ty=Tensor[(12, 16, 8), uint8] */;
  %220 = reshape(%218, newshape=[12, 16, 8]) /* ty=Tensor[(12, 16, 8), uint8] */;
  %221 = @func_1087(%219, %220) /* ty=(Tensor[(12, 16, 8), bool], Tensor[(2, 2, 5), uint64], Tensor[(20), uint64]) */;
  %222 = cast(%var_3671, dtype="int32") /* ty=Tensor[(2, 728), int32] */;
  %223 = cast(%var_3671, dtype="int32") /* ty=Tensor[(2, 728), int32] */;
  %224 = reshape(%222, newshape=[14, 8, 13]) /* ty=Tensor[(14, 8, 13), int32] */;
  %225 = reshape(%223, newshape=[14, 8, 13]) /* ty=Tensor[(14, 8, 13), int32] */;
  %226 = @func_411(%224, %225) /* ty=(Tensor[(14, 8, 13), int32],) */;
  %227 = cast(meta[relay.Constant][13] /* ty=Tensor[(2, 1, 6), float64] */, dtype="float64") /* ty=Tensor[(2, 1, 6), float64] */;
  %228 = asin(%227) /* ty=Tensor[(2, 1, 6), float64] */;
  %229 = cast(%228, dtype="float32") /* ty=Tensor[(2, 1, 6), float32] */;
  %230 = @func_2985(%211) /* ty=Tensor[(5, 5, 8), int8] */;
  %231 = %216.0;
  %232 = %221.2;
  %233 = %226.0;
  %234 = sinh(%229) /* ty=Tensor[(2, 1, 6), float32] */;
  (%230, %var_3633, %231, %var_3642, %232, %var_3668, %233, %var_3671, %234)
}

def @func_6333() -> (Tensor[(6, 15, 9), int16],) {
  %235 = @func_5871() /* ty=(Tensor[(6, 15, 9), int16], Tensor[(15, 8, 12), float64]) */;
  %236 = %235.0;
  (%236,)
}

def @func_2610(%var_2603: Tensor[(8, 10, 8), float32]) -> (Tensor[(8, 10, 8), float32],) {
  %237 = cast(meta[relay.Constant][14] /* ty=Tensor[(8, 10, 8), float32] */, dtype="float32") /* ty=Tensor[(8, 10, 8), float32] */;
  %238 = shape_of(%var_2603, dtype="int32") /* ty=Tensor[(3), int32] */;
  %239 = cast(%var_2603, dtype="float32") /* ty=Tensor[(8, 10, 8), float32] */;
  %240 = dyn.reshape(%237, %238, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %241 = divide(%239, %240) /* ty=Tensor[(8, 10, 8), float32] */;
  (%241,)
}

def @func_6786(%var_6781: Tensor[(65, 6), float64], %var_6782: Tensor[(384, 4), uint8]) -> (Tensor[(15, 8, 12), bool], Tensor[(5, 4, 14), bool], Tensor[(450), float32], Tensor[(65, 6), float64], Tensor[(384, 4), uint8], Tensor[(240), float64], Tensor[(182), int8]) {
  %242 = @func_6316() /* ty=(Tensor[(15, 8, 12), bool],) */;
  %243 = cast(%var_6781, dtype="float64") /* ty=Tensor[(65, 6), float64] */;
  %244 = cast(%var_6782, dtype="uint8") /* ty=Tensor[(384, 4), uint8] */;
  %245 = cast(meta[relay.Constant][15] /* ty=Tensor[(240), float64] */, dtype="float64") /* ty=Tensor[(240), float64] */;
  %246 = cast(meta[relay.Constant][16] /* ty=Tensor[(182), int8] */, dtype="int8") /* ty=Tensor[(182), int8] */;
  %247 = reshape(%243, newshape=[390]) /* ty=Tensor[(390), float64] */;
  %248 = reshape(%244, newshape=[1536]) /* ty=Tensor[(1536), uint8] */;
  %249 = reshape(%245, newshape=[240]) /* ty=Tensor[(240), float64] */;
  %250 = reshape(%246, newshape=[182]) /* ty=Tensor[(182), int8] */;
  %251 = @func_2310(%247, %248, %249, %250) /* ty=(Tensor[(3, 12, 16), float64], Tensor[(10, 13, 3), float64], Tensor[(1, 30), float64], Tensor[(390), float64], Tensor[(2, 2, 5), uint64], Tensor[(1536), uint8], Tensor[(450), float32], Tensor[(240), float64], Tensor[(2, 13, 7), bool], Tensor[(182), int8], Tensor[(12, 16, 8), bool]) */;
  %252 = %242.0;
  %253 = @func_5880() /* ty=Tensor[(5, 4, 14), bool] */;
  %254 = %251.6;
  (%252, %253, %254, %var_6781, %var_6782, meta[relay.Constant][15] /* ty=Tensor[(240), float64] */, meta[relay.Constant][16] /* ty=Tensor[(182), int8] */)
}

def @func_8354() -> (Tensor[(3, 11, 10), float32],) {
  %255 = cast(meta[relay.Constant][17] /* ty=Tensor[(3, 11, 10), float32] */, dtype="float32") /* ty=Tensor[(3, 11, 10), float32] */;
  %256 = sqrt(%255) /* ty=Tensor[(3, 11, 10), float32] */;
  (%256,)
}

def @func_6268(%var_6264: Tensor[(2, 96), int16]) -> (Tensor[(6, 6, 8), int64], Tensor[(12, 2, 8), int16], Tensor[(2, 96), int16]) {
  %257 = @func_5263() /* ty=(Tensor[(6, 6, 8), int64], Tensor[(420), uint8], Tensor[(420), uint8], Tensor[(1536), uint8], Tensor[(15, 8, 12), float64]) */;
  %258 = cast(%var_6264, dtype="int16") /* ty=Tensor[(2, 96), int16] */;
  %259 = reshape(%258, newshape=[12, 2, 8]) /* ty=Tensor[(12, 2, 8), int16] */;
  %260 = %257.0;
  %261 = @func_3614(%259) /* ty=Tensor[(12, 2, 8), int16] */;
  (%260, %261, %var_6264)
}

def @func_7778() -> Tensor[(6, 15, 9), int16] {
  %262 = @func_6333() /* ty=(Tensor[(6, 15, 9), int16],) */;
  %262.0
}

def @func_8102() -> (Tensor[(15, 8, 12), float64], Tensor[(2156), float32], Tensor[(200), int8], Tensor[(2156), float32], Tensor[(1536), uint8], Tensor[(6, 6, 8), int64], Tensor[(96, 2), float32]) {
  %263 = cast(meta[relay.Constant][18] /* ty=Tensor[(200), int8] */, dtype="int8") /* ty=Tensor[(200), int8] */;
  %264 = cast(meta[relay.Constant][19] /* ty=Tensor[(2156), float32] */, dtype="float32") /* ty=Tensor[(2156), float32] */;
  %265 = cast(meta[relay.Constant][20] /* ty=Tensor[(1536), uint8] */, dtype="uint8") /* ty=Tensor[(1536), uint8] */;
  %266 = reshape(%263, newshape=[200]) /* ty=Tensor[(200), int8] */;
  %267 = reshape(%264, newshape=[2156]) /* ty=Tensor[(2156), float32] */;
  %268 = reshape(%265, newshape=[1536]) /* ty=Tensor[(1536), uint8] */;
  %269 = @func_4749(%266, %267, %268) /* ty=(Tensor[(15, 8, 12), float64], Tensor[(14, 8, 13), int32], Tensor[(200), int8], Tensor[(2156), float32], Tensor[(1536), uint8], Tensor[(1456), int32]) */;
  %270 = cast(meta[relay.Constant][21] /* ty=Tensor[(96, 2), int16] */, dtype="int16") /* ty=Tensor[(96, 2), int16] */;
  %271 = reshape(%270, newshape=[2, 96]) /* ty=Tensor[(2, 96), int16] */;
  %272 = @func_6268(%271) /* ty=(Tensor[(6, 6, 8), int64], Tensor[(12, 2, 8), int16], Tensor[(2, 96), int16]) */;
  %273 = cast(meta[relay.Constant][21] /* ty=Tensor[(96, 2), int16] */, dtype="float32") /* ty=Tensor[(96, 2), float32] */;
  %274 = @func_7955() /* ty=Tensor[(15, 8, 12), float64] */;
  %275 = %269.3;
  %276 = %272.0;
  %277 = log(%273) /* ty=Tensor[(96, 2), float32] */;
  (%274, %275, meta[relay.Constant][18] /* ty=Tensor[(200), int8] */, meta[relay.Constant][19] /* ty=Tensor[(2156), float32] */, meta[relay.Constant][20] /* ty=Tensor[(1536), uint8] */, %276, %277)
}

def @func_5414() -> (Tensor[(6, 6, 8), float32], Tensor[(12, 2, 8), int16], Tensor[(192), int16], Tensor[(6, 6, 8), bool], Tensor[(112, 2), float32]) {
  %278 = @func_4125() /* ty=(Tensor[(6, 6, 8), bool], Tensor[(6, 6, 8), float32], Tensor[(6, 6, 8), float32]) */;
  %279 = cast(meta[relay.Constant][22] /* ty=Tensor[(192), int16] */, dtype="int16") /* ty=Tensor[(192), int16] */;
  %280 = reshape(%279, newshape=[12, 2, 8]) /* ty=Tensor[(12, 2, 8), int16] */;
  %281 = cast(meta[relay.Constant][23] /* ty=Tensor[(112, 2), float32] */, dtype="float32") /* ty=Tensor[(112, 2), float32] */;
  %282 = reshape(%281, newshape=[1, 16, 14]) /* ty=Tensor[(1, 16, 14), float32] */;
  %283 = @func_5318(%282) /* ty=(Tensor[(1, 16, 14), float32], Tensor[(15, 8, 12), float64], Tensor[(6, 6, 8), bool]) */;
  %284 = %278.1;
  %285 = @func_3614(%280) /* ty=Tensor[(12, 2, 8), int16] */;
  %286 = %283.2;
  (%284, %285, meta[relay.Constant][22] /* ty=Tensor[(192), int16] */, %286, meta[relay.Constant][23] /* ty=Tensor[(112, 2), float32] */)
}

def @func_7363() -> (Tensor[(15, 8, 12), float64], Tensor[(6, 15, 9), float64], Tensor[(6, 15, 9), float64]) {
  %287 = @func_4194() /* ty=(Tensor[(15, 8, 12), float64], Tensor[(6, 15, 9), float64], Tensor[(1, 810), float32]) */;
  %288 = %287.1;
  %289 = cast(%288, dtype="float32") /* ty=Tensor[(6, 15, 9), float32] */;
  %290 = reshape(%289, newshape=[810]) /* ty=Tensor[(810), float32] */;
  %291 = @func_6114(%290) /* ty=(Tensor[(420), uint8], Tensor[(6, 15, 9), float64], Tensor[(810), float32], Tensor[(10, 3, 2), uint32], Tensor[(60), uint32]) */;
  %292 = @func_5107() /* ty=Tensor[(15, 8, 12), float64] */;
  %293 = %291.1;
  (%292, %288, %293)
}

def @func_2804(%var_2788: Tensor[(5, 2, 13), float64]) -> Tensor[(5, 2, 13), float64] {
  %294 = cast(%var_2788, dtype="float64") /* ty=Tensor[(5, 2, 13), float64] */;
  atanh(%294) /* ty=Tensor[(5, 2, 13), float64] */
}

def @func_8333() -> Tensor[(15, 8, 12), float64] {
  @func_7955() /* ty=Tensor[(15, 8, 12), float64] */
}

def @func_5977() -> Tensor[(15, 8, 12), float64] {
  %295 = @func_5495() /* ty=(Tensor[(15, 8, 12), float64],) */;
  %295.0
}

def @func_8987() -> (Tensor[(15, 8, 12), float64], Tensor[(15, 8, 12), bool], Tensor[(15, 8, 12), float64], Tensor[(6, 6, 8), float32], Tensor[(12, 2, 8), int16], Tensor[(192), int16], Tensor[(15, 8, 12), bool]) {
  %296 = @func_7363() /* ty=(Tensor[(15, 8, 12), float64], Tensor[(6, 15, 9), float64], Tensor[(6, 15, 9), float64]) */;
  %297 = %296.0;
  %298 = cast(%297, dtype="float64") /* ty=Tensor[(15, 8, 12), float64] */;
  %299 = cast(meta[relay.Constant][24] /* ty=Tensor[(192), int16] */, dtype="int16") /* ty=Tensor[(192), int16] */;
  %300 = reshape(%299, newshape=[12, 2, 8]) /* ty=Tensor[(12, 2, 8), int16] */;
  %301 = log10(%298) /* ty=Tensor[(15, 8, 12), float64] */;
  %302 = @func_8551() /* ty=Tensor[(15, 8, 12), bool] */;
  %303 = @func_5340() /* ty=Tensor[(15, 8, 12), float64] */;
  %304 = @func_4007() /* ty=Tensor[(6, 6, 8), float32] */;
  %305 = @func_3614(%300) /* ty=Tensor[(12, 2, 8), int16] */;
  %306 = @func_8551() /* ty=Tensor[(15, 8, 12), bool] */;
  (%301, %302, %303, %304, %305, meta[relay.Constant][24] /* ty=Tensor[(192), int16] */, %306)
}

def @func_5871() -> (Tensor[(6, 15, 9), int16], Tensor[(15, 8, 12), float64]) {
  %307 = @func_4891() /* ty=(Tensor[(15, 8, 12), float64],) */;
  %308 = @func_4315() /* ty=Tensor[(6, 15, 9), int16] */;
  %309 = %307.0;
  (%308, %309)
}

def @func_2745(%var_2735: Tensor[(6, 15, 9), float32]) -> (Tensor[(6, 15, 9), float32], Tensor[(6, 15, 9), float64], Tensor[(6, 15, 9), float32]) {
  %310 = cast(meta[relay.Constant][25] /* ty=Tensor[(6, 15, 9), float32] */, dtype="float32") /* ty=Tensor[(6, 15, 9), float32] */;
  %311 = cast(meta[relay.Constant][25] /* ty=Tensor[(6, 15, 9), float32] */, dtype="float64") /* ty=Tensor[(6, 15, 9), float64] */;
  %312 = cast(%var_2735, dtype="float32") /* ty=Tensor[(6, 15, 9), float32] */;
  %313 = shape_of(meta[relay.Constant][25] /* ty=Tensor[(6, 15, 9), float32] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %314 = cast(meta[relay.Constant][25] /* ty=Tensor[(6, 15, 9), float32] */, dtype="float32") /* ty=Tensor[(6, 15, 9), float32] */;
  %315 = dyn.reshape(%312, %313, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %316 = exp(%310) /* ty=Tensor[(6, 15, 9), float32] */;
  %317 = sinh(%311) /* ty=Tensor[(6, 15, 9), float64] */;
  %318 = mod(%314, %315) /* ty=Tensor[(6, 15, 9), float32] */;
  (%316, %317, %318)
}

def @func_4007() -> Tensor[(6, 6, 8), float32] {
  %319 = cast(meta[relay.Constant][26] /* ty=Tensor[(6, 6, 8), float32] */, dtype="float32") /* ty=Tensor[(6, 6, 8), float32] */;
  atanh(%319) /* ty=Tensor[(6, 6, 8), float32] */
}

def @func_6316() -> (Tensor[(15, 8, 12), bool],) {
  %320 = @func_5570() /* ty=(Tensor[(15, 8, 12), float64], Tensor[(15, 8, 12), float64]) */;
  %321 = %320.0;
  %322 = @func_5340() /* ty=Tensor[(15, 8, 12), float64] */;
  %323 = cast(%322, dtype="bool") /* ty=Tensor[(15, 8, 12), bool] */;
  %324 = shape_of(%321, dtype="int32") /* ty=Tensor[(3), int32] */;
  %325 = cast(%321, dtype="bool") /* ty=Tensor[(15, 8, 12), bool] */;
  %326 = dyn.reshape(%323, %324, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %327 = equal(%325, %326) /* ty=Tensor[(15, 8, 12), bool] */;
  (%327,)
}

def @func_9464() -> Tensor[(15, 8, 12), float64] {
  %328 = @func_5570() /* ty=(Tensor[(15, 8, 12), float64], Tensor[(15, 8, 12), float64]) */;
  %328.1
}

def @func_8551() -> Tensor[(15, 8, 12), bool] {
  %329 = @func_6470() /* ty=(Tensor[(15, 8, 12), bool],) */;
  %329.0
}

def @func_5318(%var_5307: Tensor[(1, 16, 14), float32]) -> (Tensor[(1, 16, 14), float32], Tensor[(15, 8, 12), float64], Tensor[(6, 6, 8), bool]) {
  %330 = cast(%var_5307, dtype="float32") /* ty=Tensor[(1, 16, 14), float32] */;
  %331 = @func_4125() /* ty=(Tensor[(6, 6, 8), bool], Tensor[(6, 6, 8), float32], Tensor[(6, 6, 8), float32]) */;
  %332 = atan(%330) /* ty=Tensor[(1, 16, 14), float32] */;
  %333 = @func_3825() /* ty=Tensor[(15, 8, 12), float64] */;
  %334 = %331.0;
  (%332, %333, %334)
}

def @func_6618(%var_6559: Tensor[(420), uint8], %var_6563: Tensor[(6, 6, 8), float32]) -> (Tensor[(20), uint64], Tensor[(1536), uint8], Tensor[(64, 24), uint8], Tensor[(420), uint8], Tensor[(6, 6, 8), bool], Tensor[(1536), uint8]) {
  %335 = cast(meta[relay.Constant][27] /* ty=Tensor[(1536), uint8] */, dtype="uint8") /* ty=Tensor[(1536), uint8] */;
  %336 = cast(meta[relay.Constant][27] /* ty=Tensor[(1536), uint8] */, dtype="uint8") /* ty=Tensor[(1536), uint8] */;
  %337 = reshape(%335, newshape=[12, 16, 8]) /* ty=Tensor[(12, 16, 8), uint8] */;
  %338 = reshape(%336, newshape=[12, 16, 8]) /* ty=Tensor[(12, 16, 8), uint8] */;
  %339 = @func_1087(%337, %338) /* ty=(Tensor[(12, 16, 8), bool], Tensor[(2, 2, 5), uint64], Tensor[(20), uint64]) */;
  %340 = cast(%var_6559, dtype="uint8") /* ty=Tensor[(420), uint8] */;
  %341 = cast(meta[relay.Constant][27] /* ty=Tensor[(1536), uint8] */, dtype="uint8") /* ty=Tensor[(1536), uint8] */;
  %342 = reshape(%340, newshape=[2, 15, 14]) /* ty=Tensor[(2, 15, 14), uint8] */;
  %343 = reshape(%341, newshape=[64, 24]) /* ty=Tensor[(64, 24), uint8] */;
  %344 = @func_3748(%342, %343) /* ty=(Tensor[(2, 15, 14), uint8], Tensor[(2, 15, 14), int32], Tensor[(2, 2, 5), uint64], Tensor[(64, 24), uint8], Tensor[(10, 13, 3), float64], Tensor[(30), float64], Tensor[(65, 6), float64]) */;
  %345 = @func_4125() /* ty=(Tensor[(6, 6, 8), bool], Tensor[(6, 6, 8), float32], Tensor[(6, 6, 8), float32]) */;
  %346 = %345.2;
  %347 = cast(%var_6563, dtype="bool") /* ty=Tensor[(6, 6, 8), bool] */;
  %348 = shape_of(%346, dtype="int32") /* ty=Tensor[(3), int32] */;
  %349 = cast(%346, dtype="bool") /* ty=Tensor[(6, 6, 8), bool] */;
  %350 = dyn.reshape(%347, %348, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %351 = cast(%var_6559, dtype="uint8") /* ty=Tensor[(420), uint8] */;
  %352 = cast(meta[relay.Constant][27] /* ty=Tensor[(1536), uint8] */, dtype="uint8") /* ty=Tensor[(1536), uint8] */;
  %353 = reshape(%351, newshape=[420]) /* ty=Tensor[(420), uint8] */;
  %354 = reshape(%352, newshape=[1536]) /* ty=Tensor[(1536), uint8] */;
  %355 = @func_4657(%353, %354) /* ty=(Tensor[(6, 6, 8), float32], Tensor[(420), uint8], Tensor[(420), uint8], Tensor[(1536), uint8]) */;
  %356 = %339.2;
  %357 = %344.3;
  %358 = equal(%349, %350) /* ty=Tensor[(6, 6, 8), bool] */;
  %359 = %355.3;
  (%356, meta[relay.Constant][27] /* ty=Tensor[(1536), uint8] */, %357, %var_6559, %358, %359)
}

def @func_8211() -> (Tensor[(6, 6, 8), float32], Tensor[(6, 15, 9), int16]) {
  %360 = @func_6333() /* ty=(Tensor[(6, 15, 9), int16],) */;
  %361 = @func_4007() /* ty=Tensor[(6, 6, 8), float32] */;
  %362 = %360.0;
  (%361, %362)
}

def @func_8503() -> (Tensor[(15, 8, 12), float64], Tensor[(6, 6, 8), float32]) {
  %363 = @func_8211() /* ty=(Tensor[(6, 6, 8), float32], Tensor[(6, 15, 9), int16]) */;
  %364 = @func_5340() /* ty=Tensor[(15, 8, 12), float64] */;
  %365 = %363.0;
  (%364, %365)
}

def @func_3748(%var_3712: Tensor[(2, 15, 14), uint8], %var_3739: Tensor[(64, 24), uint8]) -> (Tensor[(2, 15, 14), uint8], Tensor[(2, 15, 14), int32], Tensor[(2, 2, 5), uint64], Tensor[(64, 24), uint8], Tensor[(10, 13, 3), float64], Tensor[(30), float64], Tensor[(65, 6), float64]) {
  %366 = cast(%var_3712, dtype="uint8") /* ty=Tensor[(2, 15, 14), uint8] */;
  %367 = shape_of(meta[relay.Constant][28] /* ty=Tensor[(2, 15, 14), uint8] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %368 = cast(meta[relay.Constant][28] /* ty=Tensor[(2, 15, 14), uint8] */, dtype="uint8") /* ty=Tensor[(2, 15, 14), uint8] */;
  %369 = dyn.reshape(%366, %367, newshape=[]) /* ty=Tensor[(?, ?, ?), uint8] */;
  %370 = cast(%var_3712, dtype="float32") /* ty=Tensor[(2, 15, 14), float32] */;
  %371 = acosh(%370) /* ty=Tensor[(2, 15, 14), float32] */;
  %372 = cast(meta[relay.Constant][29] /* ty=Tensor[(2, 15, 14), float32] */, dtype="int32") /* ty=Tensor[(2, 15, 14), int32] */;
  %373 = shape_of(%371, dtype="int32") /* ty=Tensor[(3), int32] */;
  %374 = cast(%371, dtype="int32") /* ty=Tensor[(2, 15, 14), int32] */;
  %375 = dyn.reshape(%372, %373, newshape=[]) /* ty=Tensor[(?, ?, ?), int32] */;
  %376 = cast(%var_3739, dtype="uint8") /* ty=Tensor[(64, 24), uint8] */;
  %377 = cast(%var_3739, dtype="uint8") /* ty=Tensor[(64, 24), uint8] */;
  %378 = reshape(%376, newshape=[12, 16, 8]) /* ty=Tensor[(12, 16, 8), uint8] */;
  %379 = reshape(%377, newshape=[12, 16, 8]) /* ty=Tensor[(12, 16, 8), uint8] */;
  %380 = @func_1087(%378, %379) /* ty=(Tensor[(12, 16, 8), bool], Tensor[(2, 2, 5), uint64], Tensor[(20), uint64]) */;
  %381 = cast(meta[relay.Constant][30] /* ty=Tensor[(30), float64] */, dtype="float64") /* ty=Tensor[(30), float64] */;
  %382 = cast(meta[relay.Constant][31] /* ty=Tensor[(65, 6), float64] */, dtype="float64") /* ty=Tensor[(65, 6), float64] */;
  %383 = reshape(%381, newshape=[10, 1, 3]) /* ty=Tensor[(10, 1, 3), float64] */;
  %384 = reshape(%382, newshape=[10, 13, 3]) /* ty=Tensor[(10, 13, 3), float64] */;
  %385 = @func_397(%383, %384) /* ty=(Tensor[(10, 13, 3), float64],) */;
  %386 = bitwise_xor(%368, %369) /* ty=Tensor[(2, 15, 14), uint8] */;
  %387 = logical_xor(%374, %375) /* ty=Tensor[(2, 15, 14), int32] */;
  %388 = %380.1;
  %389 = %385.0;
  (%386, %387, %388, %var_3739, %389, meta[relay.Constant][30] /* ty=Tensor[(30), float64] */, meta[relay.Constant][31] /* ty=Tensor[(65, 6), float64] */)
}

def @func_2985(%var_2974: Tensor[(5, 5, 8), int8]) -> Tensor[(5, 5, 8), int8] {
  %390 = cast(meta[relay.Constant][32] /* ty=int8 */, dtype="int8") /* ty=int8 */;
  %391 = cast(%var_2974, dtype="int8") /* ty=Tensor[(5, 5, 8), int8] */;
  left_shift(%390, %391) /* ty=Tensor[(5, 5, 8), int8] */
}

def @func_2209(%var_2192: Tensor[(5, 6, 8), float64], %var_2201: Tensor[(1536), uint8], %var_2203: Tensor[(30), float64]) -> (Tensor[(10, 13, 3), float64], Tensor[(450), float32], Tensor[(1536), uint8], Tensor[(1, 182), int8], Tensor[(30), float64], Tensor[(5, 6, 8), float32]) {
  %392 = cast(meta[relay.Constant][33] /* ty=Tensor[(450), float32] */, dtype="float32") /* ty=Tensor[(450), float32] */;
  %393 = cast(meta[relay.Constant][33] /* ty=Tensor[(450), float32] */, dtype="float32") /* ty=Tensor[(450), float32] */;
  %394 = cast(%var_2201, dtype="uint8") /* ty=Tensor[(1536), uint8] */;
  %395 = cast(meta[relay.Constant][34] /* ty=Tensor[(1, 182), int8] */, dtype="int8") /* ty=Tensor[(1, 182), int8] */;
  %396 = cast(%var_2203, dtype="float64") /* ty=Tensor[(30), float64] */;
  %397 = reshape(%392, newshape=[5, 10, 9]) /* ty=Tensor[(5, 10, 9), float32] */;
  %398 = reshape(%393, newshape=[5, 10, 9]) /* ty=Tensor[(5, 10, 9), float32] */;
  %399 = reshape(%394, newshape=[1536]) /* ty=Tensor[(1536), uint8] */;
  %400 = reshape(%395, newshape=[182]) /* ty=Tensor[(182), int8] */;
  %401 = reshape(%396, newshape=[30]) /* ty=Tensor[(30), float64] */;
  %402 = @func_1836(%397, %398, %399, %400, %401) /* ty=(Tensor[(12, 16, 8), bool], Tensor[(1536), uint8], Tensor[(20), uint64], Tensor[(182), int8], Tensor[(2, 2, 5), uint64], Tensor[(10, 13, 3), float64], Tensor[(30), float64], Tensor[(390), float64], Tensor[(5, 10, 9), bool], Tensor[(5, 10, 9), bool]) */;
  %403 = cast(%var_2192, dtype="float64") /* ty=Tensor[(5, 6, 8), float64] */;
  %404 = exp(%403) /* ty=Tensor[(5, 6, 8), float64] */;
  %405 = cast(%404, dtype="float32") /* ty=Tensor[(5, 6, 8), float32] */;
  %406 = %402.5;
  %407 = log(%405) /* ty=Tensor[(5, 6, 8), float32] */;
  (%406, meta[relay.Constant][33] /* ty=Tensor[(450), float32] */, %var_2201, meta[relay.Constant][34] /* ty=Tensor[(1, 182), int8] */, %var_2203, %407)
}

def @func_6114(%var_6081: Tensor[(810), float32]) -> (Tensor[(420), uint8], Tensor[(6, 15, 9), float64], Tensor[(810), float32], Tensor[(10, 3, 2), uint32], Tensor[(60), uint32]) {
  %408 = @func_5263() /* ty=(Tensor[(6, 6, 8), int64], Tensor[(420), uint8], Tensor[(420), uint8], Tensor[(1536), uint8], Tensor[(15, 8, 12), float64]) */;
  %409 = %408.2;
  %410 = cast(%409, dtype="uint8") /* ty=Tensor[(420), uint8] */;
  %411 = cast(%var_6081, dtype="float32") /* ty=Tensor[(810), float32] */;
  %412 = reshape(%410, newshape=[420]) /* ty=Tensor[(420), uint8] */;
  %413 = reshape(%411, newshape=[810]) /* ty=Tensor[(810), float32] */;
  %414 = @func_4973(%412, %413) /* ty=(Tensor[(15, 8, 12), float64], Tensor[(420), uint8], Tensor[(420), uint8], Tensor[(1536), uint8], Tensor[(6, 15, 9), float64], Tensor[(810), float32]) */;
  %415 = cast(meta[relay.Constant][35] /* ty=Tensor[(60), uint32] */, dtype="uint32") /* ty=Tensor[(60), uint32] */;
  %416 = cast(meta[relay.Constant][35] /* ty=Tensor[(60), uint32] */, dtype="uint32") /* ty=Tensor[(60), uint32] */;
  %417 = reshape(%415, newshape=[10, 3, 2]) /* ty=Tensor[(10, 3, 2), uint32] */;
  %418 = reshape(%416, newshape=[10, 3, 2]) /* ty=Tensor[(10, 3, 2), uint32] */;
  %419 = @func_5049(%417, %418) /* ty=(Tensor[(10, 3, 2), uint32], Tensor[(12, 2, 8), int16], Tensor[(192), int16]) */;
  %420 = %414.4;
  %421 = %419.0;
  (%409, %420, %var_6081, %421, meta[relay.Constant][35] /* ty=Tensor[(60), uint32] */)
}

def @func_4657(%var_4649: Tensor[(420), uint8], %var_4650: Tensor[(1536), uint8]) -> (Tensor[(6, 6, 8), float32], Tensor[(420), uint8], Tensor[(420), uint8], Tensor[(1536), uint8]) {
  %422 = cast(%var_4649, dtype="uint8") /* ty=Tensor[(420), uint8] */;
  %423 = cast(%var_4650, dtype="uint8") /* ty=Tensor[(1536), uint8] */;
  %424 = reshape(%422, newshape=[420]) /* ty=Tensor[(420), uint8] */;
  %425 = reshape(%423, newshape=[1536]) /* ty=Tensor[(1536), uint8] */;
  %426 = @func_3879(%424, %425) /* ty=(Tensor[(15, 8, 12), float64], Tensor[(2, 2, 5), uint64], Tensor[(420), uint8], Tensor[(1536), uint8]) */;
  %427 = @func_4007() /* ty=Tensor[(6, 6, 8), float32] */;
  %428 = %426.2;
  (%427, %428, %var_4649, %var_4650)
}

def @func_5495() -> (Tensor[(15, 8, 12), float64],) {
  %429 = @func_3825() /* ty=Tensor[(15, 8, 12), float64] */;
  (%429,)
}

def @func_4420(%var_4410: Tensor[(16, 14, 1), float32]) -> (Tensor[(16, 14, 1), float32],) {
  %430 = cast(%var_4410, dtype="float32") /* ty=Tensor[(16, 14, 1), float32] */;
  %431 = cos(%430) /* ty=Tensor[(16, 14, 1), float32] */;
  (%431,)
}

def @func_9194(%var_9158: Tensor[(5, 4, 14), bool], %var_9169: Tensor[(5, 4, 14), bool], %var_9180: Tensor[(20), uint64]) -> (Tensor[(200), int8], Tensor[(6, 15, 9), int16], Tensor[(15, 8, 12), float64], Tensor[(20), uint64], Tensor[(5, 4, 14), float32]) {
  %432 = @func_8102() /* ty=(Tensor[(15, 8, 12), float64], Tensor[(2156), float32], Tensor[(200), int8], Tensor[(2156), float32], Tensor[(1536), uint8], Tensor[(6, 6, 8), int64], Tensor[(96, 2), float32]) */;
  %433 = @func_7979() /* ty=(Tensor[(6, 15, 9), int16], Tensor[(5, 4, 14), bool]) */;
  %434 = cast(%var_9180, dtype="uint64") /* ty=Tensor[(20), uint64] */;
  %435 = reshape(%434, newshape=[1, 20]) /* ty=Tensor[(1, 20), uint64] */;
  %436 = @func_5545(%435) /* ty=(Tensor[(15, 8, 12), float64], Tensor[(15, 8, 12), float64], Tensor[(?, 20), bool]) */;
  %437 = @func_7992() /* ty=Tensor[(5, 4, 14), bool] */;
  %438 = cast(%var_9158, dtype="int8") /* ty=Tensor[(5, 4, 14), int8] */;
  %439 = shape_of(%437, dtype="int32") /* ty=Tensor[(3), int32] */;
  %440 = cast(%437, dtype="int8") /* ty=Tensor[(5, 4, 14), int8] */;
  %441 = dyn.reshape(%438, %439, newshape=[]) /* ty=Tensor[(?, ?, ?), int8] */;
  %442 = left_shift(%440, %441) /* ty=Tensor[(5, 4, 14), int8] */;
  %443 = cast(%var_9169, dtype="bool") /* ty=Tensor[(5, 4, 14), bool] */;
  %444 = shape_of(%437, dtype="int32") /* ty=Tensor[(3), int32] */;
  %445 = cast(%437, dtype="bool") /* ty=Tensor[(5, 4, 14), bool] */;
  %446 = dyn.reshape(%443, %444, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %447 = greater_equal(%445, %446) /* ty=Tensor[(5, 4, 14), bool] */;
  %448 = cast(%447, dtype="float32") /* ty=Tensor[(5, 4, 14), float32] */;
  %449 = shape_of(%442, dtype="int32") /* ty=Tensor[(3), int32] */;
  %450 = cast(%442, dtype="float32") /* ty=Tensor[(5, 4, 14), float32] */;
  %451 = dyn.reshape(%448, %449, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %452 = %432.2;
  %453 = %433.0;
  %454 = %436.0;
  %455 = minimum(%450, %451) /* ty=Tensor[(5, 4, 14), float32] */;
  (%452, %453, %454, %var_9180, %455)
}

def @func_5132() -> Tensor[(15, 8, 12), float64] {
  %456 = @func_4029() /* ty=(Tensor[(15, 8, 12), float64],) */;
  %456.0
}

def @func_7298(%var_7284: Tensor[(2, 728), int32]) -> (Tensor[(15, 8, 12), float64], Tensor[(10, 13, 3), float64], Tensor[(30), float64], Tensor[(390), float64], Tensor[(5, 5, 8), int8], Tensor[(200), int8], Tensor[(154, 14), float32], Tensor[(1536), uint8], Tensor[(2, 728), int32], Tensor[(15, 8, 12), bool]) {
  %457 = cast(meta[relay.Constant][36] /* ty=Tensor[(30), float64] */, dtype="float64") /* ty=Tensor[(30), float64] */;
  %458 = cast(meta[relay.Constant][37] /* ty=Tensor[(390), float64] */, dtype="float64") /* ty=Tensor[(390), float64] */;
  %459 = reshape(%457, newshape=[10, 1, 3]) /* ty=Tensor[(10, 1, 3), float64] */;
  %460 = reshape(%458, newshape=[10, 13, 3]) /* ty=Tensor[(10, 13, 3), float64] */;
  %461 = @func_397(%459, %460) /* ty=(Tensor[(10, 13, 3), float64],) */;
  %462 = cast(meta[relay.Constant][38] /* ty=Tensor[(200), int8] */, dtype="int8") /* ty=Tensor[(200), int8] */;
  %463 = cast(meta[relay.Constant][39] /* ty=Tensor[(154, 14), float32] */, dtype="float32") /* ty=Tensor[(154, 14), float32] */;
  %464 = cast(meta[relay.Constant][40] /* ty=Tensor[(1536), uint8] */, dtype="uint8") /* ty=Tensor[(1536), uint8] */;
  %465 = cast(%var_7284, dtype="int32") /* ty=Tensor[(2, 728), int32] */;
  %466 = reshape(%462, newshape=[200]) /* ty=Tensor[(200), int8] */;
  %467 = reshape(%463, newshape=[2156]) /* ty=Tensor[(2156), float32] */;
  %468 = reshape(%464, newshape=[1536]) /* ty=Tensor[(1536), uint8] */;
  %469 = reshape(%465, newshape=[2, 728]) /* ty=Tensor[(2, 728), int32] */;
  %470 = @func_3690(%466, %467, %468, %469) /* ty=(Tensor[(5, 5, 8), int8], Tensor[(200), int8], Tensor[(14, 11, 14), float32], Tensor[(2156), float32], Tensor[(20), uint64], Tensor[(1536), uint8], Tensor[(14, 8, 13), int32], Tensor[(2, 728), int32], Tensor[(2, 1, 6), float32]) */;
  %471 = @func_6316() /* ty=(Tensor[(15, 8, 12), bool],) */;
  %472 = @func_5107() /* ty=Tensor[(15, 8, 12), float64] */;
  %473 = %461.0;
  %474 = %470.0;
  %475 = %471.0;
  (%472, %473, meta[relay.Constant][36] /* ty=Tensor[(30), float64] */, meta[relay.Constant][37] /* ty=Tensor[(390), float64] */, %474, meta[relay.Constant][38] /* ty=Tensor[(200), int8] */, meta[relay.Constant][39] /* ty=Tensor[(154, 14), float32] */, meta[relay.Constant][40] /* ty=Tensor[(1536), uint8] */, %var_7284, %475)
}

def @func_4973(%var_4949: Tensor[(420), uint8], %var_4967: Tensor[(810), float32]) -> (Tensor[(15, 8, 12), float64], Tensor[(420), uint8], Tensor[(420), uint8], Tensor[(1536), uint8], Tensor[(6, 15, 9), float64], Tensor[(810), float32]) {
  %476 = @func_4809() /* ty=(Tensor[(15, 8, 12), float64], Tensor[(15, 8, 12), float64]) */;
  %477 = cast(%var_4949, dtype="uint8") /* ty=Tensor[(420), uint8] */;
  %478 = cast(meta[relay.Constant][41] /* ty=Tensor[(1536), uint8] */, dtype="uint8") /* ty=Tensor[(1536), uint8] */;
  %479 = reshape(%477, newshape=[420]) /* ty=Tensor[(420), uint8] */;
  %480 = reshape(%478, newshape=[1536]) /* ty=Tensor[(1536), uint8] */;
  %481 = @func_4657(%479, %480) /* ty=(Tensor[(6, 6, 8), float32], Tensor[(420), uint8], Tensor[(420), uint8], Tensor[(1536), uint8]) */;
  %482 = cast(%var_4967, dtype="float32") /* ty=Tensor[(810), float32] */;
  %483 = reshape(%482, newshape=[6, 15, 9]) /* ty=Tensor[(6, 15, 9), float32] */;
  %484 = @func_2745(%483) /* ty=(Tensor[(6, 15, 9), float32], Tensor[(6, 15, 9), float64], Tensor[(6, 15, 9), float32]) */;
  %485 = %476.0;
  %486 = %481.1;
  %487 = %484.1;
  (%485, %486, %var_4949, meta[relay.Constant][41] /* ty=Tensor[(1536), uint8] */, %487, %var_4967)
}

def @func_4029() -> (Tensor[(15, 8, 12), float64],) {
  %488 = @func_3825() /* ty=Tensor[(15, 8, 12), float64] */;
  (%488,)
}

def @func_5907() -> Tensor[(15, 8, 12), float64] {
  %489 = @func_5481() /* ty=(Tensor[(15, 8, 12), float64], Tensor[(15, 8, 12), float64]) */;
  %489.0
}

def @func_4393(%var_4317: Tensor[(1, 13, 1), float32], %var_4352: Tensor[(1536), uint8]) -> (Tensor[(1536), uint8], Tensor[(420), uint8], Tensor[(1536), uint8], Tensor[(?, 13, ?), bool], Tensor[(20), uint64], Tensor[(182, 1), int8], Tensor[(15, 8, 12), float64], Tensor[(?, 13, ?), int32]) {
  %490 = cast(meta[relay.Constant][42] /* ty=Tensor[(420), uint8] */, dtype="uint8") /* ty=Tensor[(420), uint8] */;
  %491 = cast(%var_4352, dtype="uint8") /* ty=Tensor[(1536), uint8] */;
  %492 = reshape(%490, newshape=[420]) /* ty=Tensor[(420), uint8] */;
  %493 = reshape(%491, newshape=[1536]) /* ty=Tensor[(1536), uint8] */;
  %494 = @func_3879(%492, %493) /* ty=(Tensor[(15, 8, 12), float64], Tensor[(2, 2, 5), uint64], Tensor[(420), uint8], Tensor[(1536), uint8]) */;
  %495 = cast(%var_4317, dtype="float32") /* ty=Tensor[(1, 13, 1), float32] */;
  %496 = exp(%495) /* ty=Tensor[(1, 13, 1), float32] */;
  %497 = cast(%var_4317, dtype="float32") /* ty=Tensor[(1, 13, 1), float32] */;
  %498 = log10(%497) /* ty=Tensor[(1, 13, 1), float32] */;
  %499 = cast(%498, dtype="bool") /* ty=Tensor[(1, 13, 1), bool] */;
  %500 = shape_of(%496, dtype="int32") /* ty=Tensor[(3), int32] */;
  %501 = cast(%496, dtype="bool") /* ty=Tensor[(1, 13, 1), bool] */;
  %502 = dyn.reshape(%499, %500, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %503 = cast(meta[relay.Constant][43] /* ty=Tensor[(182, 1), int8] */, dtype="int8") /* ty=Tensor[(182, 1), int8] */;
  %504 = reshape(%503, newshape=[2, 13, 7]) /* ty=Tensor[(2, 13, 7), int8] */;
  %505 = @func_1527(%504) /* ty=(Tensor[(2, 13, 7), bool], Tensor[(2, 13, 7), int16], Tensor[(2, 2, 5), uint64], Tensor[(20), uint64], Tensor[(14, 8, 13), int32]) */;
  %506 = cast(%498, dtype="float32") /* ty=Tensor[(1, 13, 1), float32] */;
  %507 = cos(%506) /* ty=Tensor[(1, 13, 1), float32] */;
  %508 = cast(%var_4317, dtype="int32") /* ty=Tensor[(1, 13, 1), int32] */;
  %509 = shape_of(%507, dtype="int32") /* ty=Tensor[(3), int32] */;
  %510 = cast(%507, dtype="int32") /* ty=Tensor[(1, 13, 1), int32] */;
  %511 = dyn.reshape(%508, %509, newshape=[]) /* ty=Tensor[(?, ?, ?), int32] */;
  %512 = %494.3;
  %513 = greater_equal(%501, %502) /* ty=Tensor[(?, 13, ?), bool] */;
  %514 = %505.3;
  %515 = @func_3825() /* ty=Tensor[(15, 8, 12), float64] */;
  %516 = left_shift(%510, %511) /* ty=Tensor[(?, 13, ?), int32] */;
  (%512, meta[relay.Constant][42] /* ty=Tensor[(420), uint8] */, %var_4352, %513, %514, meta[relay.Constant][43] /* ty=Tensor[(182, 1), int8] */, %515, %516)
}

def @func_5107() -> Tensor[(15, 8, 12), float64] {
  %517 = @func_4891() /* ty=(Tensor[(15, 8, 12), float64],) */;
  %517.0
}

def @func_8406() -> Tensor[(6, 15, 9), int16] {
  @func_4315() /* ty=Tensor[(6, 15, 9), int16] */
}

def @func_9311() -> (Tensor[(15, 8, 12), float64],) {
  %518 = @func_8416() /* ty=(Tensor[(15, 8, 12), float64],) */;
  %519 = %518.0;
  (%519,)
}

def @func_571(%var_560: Tensor[(2, 2, 5), uint64], %var_561: Tensor[(2, 2, 5), uint64]) -> (Tensor[(2, 2, 5), uint64], Tensor[(14, 8, 13), int32], Tensor[(1456), int32]) {
  %520 = cast(%var_561, dtype="uint64") /* ty=Tensor[(2, 2, 5), uint64] */;
  %521 = shape_of(%var_560, dtype="int32") /* ty=Tensor[(3), int32] */;
  %522 = cast(%var_560, dtype="uint64") /* ty=Tensor[(2, 2, 5), uint64] */;
  %523 = dyn.reshape(%520, %521, newshape=[]) /* ty=Tensor[(?, ?, ?), uint64] */;
  %524 = cast(meta[relay.Constant][44] /* ty=Tensor[(1456), int32] */, dtype="int32") /* ty=Tensor[(1456), int32] */;
  %525 = cast(meta[relay.Constant][44] /* ty=Tensor[(1456), int32] */, dtype="int32") /* ty=Tensor[(1456), int32] */;
  %526 = reshape(%524, newshape=[14, 8, 13]) /* ty=Tensor[(14, 8, 13), int32] */;
  %527 = reshape(%525, newshape=[14, 8, 13]) /* ty=Tensor[(14, 8, 13), int32] */;
  %528 = @func_411(%526, %527) /* ty=(Tensor[(14, 8, 13), int32],) */;
  %529 = left_shift(%522, %523) /* ty=Tensor[(2, 2, 5), uint64] */;
  %530 = %528.0;
  (%529, %530, meta[relay.Constant][44] /* ty=Tensor[(1456), int32] */)
}

def @func_8474() -> (Tensor[(5, 4, 14), float64], Tensor[(5, 5, 8), int8], Tensor[(10, 20), int8], Tensor[(15, 8, 12), float64], Tensor[(15, 8, 12), float64], Tensor[(192), int16]) {
  %531 = @func_6022() /* ty=(Tensor[(5, 4, 14), bool],) */;
  %532 = %531.0;
  %533 = cast(%532, dtype="float64") /* ty=Tensor[(5, 4, 14), float64] */;
  %534 = cast(meta[relay.Constant][45] /* ty=Tensor[(10, 20), int8] */, dtype="int8") /* ty=Tensor[(10, 20), int8] */;
  %535 = reshape(%534, newshape=[5, 5, 8]) /* ty=Tensor[(5, 5, 8), int8] */;
  %536 = @func_5570() /* ty=(Tensor[(15, 8, 12), float64], Tensor[(15, 8, 12), float64]) */;
  %537 = @func_5570() /* ty=(Tensor[(15, 8, 12), float64], Tensor[(15, 8, 12), float64]) */;
  %538 = @func_5414() /* ty=(Tensor[(6, 6, 8), float32], Tensor[(12, 2, 8), int16], Tensor[(192), int16], Tensor[(6, 6, 8), bool], Tensor[(112, 2), float32]) */;
  %539 = sigmoid(%533) /* ty=Tensor[(5, 4, 14), float64] */;
  %540 = @func_2985(%535) /* ty=Tensor[(5, 5, 8), int8] */;
  %541 = %536.1;
  %542 = %537.1;
  %543 = %538.2;
  (%539, %540, meta[relay.Constant][45] /* ty=Tensor[(10, 20), int8] */, %541, %542, %543)
}

def @func_6872() -> Tensor[(6, 6, 8), bool] {
  %544 = @func_5414() /* ty=(Tensor[(6, 6, 8), float32], Tensor[(12, 2, 8), int16], Tensor[(192), int16], Tensor[(6, 6, 8), bool], Tensor[(112, 2), float32]) */;
  %544.3
}

def @func_7047() -> (Tensor[(420), float32],) {
  %545 = @func_5263() /* ty=(Tensor[(6, 6, 8), int64], Tensor[(420), uint8], Tensor[(420), uint8], Tensor[(1536), uint8], Tensor[(15, 8, 12), float64]) */;
  %546 = %545.1;
  %547 = cast(%546, dtype="float32") /* ty=Tensor[(420), float32] */;
  %548 = sinh(%547) /* ty=Tensor[(420), float32] */;
  (%548,)
}

def @func_6647() -> (Tensor[(15, 8, 12), float64],) {
  %549 = @func_5495() /* ty=(Tensor[(15, 8, 12), float64],) */;
  %550 = %549.0;
  (%550,)
}

def @func_7135() -> (Tensor[(15, 8, 12), float64],) {
  %551 = @func_4809() /* ty=(Tensor[(15, 8, 12), float64], Tensor[(15, 8, 12), float64]) */;
  %552 = %551.0;
  (%552,)
}

def @func_5181(%var_5164: Tensor[(6, 6, 8), bool]) -> (Tensor[(6, 6, 8), float64], Tensor[(6, 6, 8), float32]) {
  %553 = @func_4125() /* ty=(Tensor[(6, 6, 8), bool], Tensor[(6, 6, 8), float32], Tensor[(6, 6, 8), float32]) */;
  %554 = %553.0;
  %555 = cast(%var_5164, dtype="float64") /* ty=Tensor[(6, 6, 8), float64] */;
  %556 = shape_of(%554, dtype="int32") /* ty=Tensor[(3), int32] */;
  %557 = cast(%554, dtype="float64") /* ty=Tensor[(6, 6, 8), float64] */;
  %558 = dyn.reshape(%555, %556, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %559 = cast(%var_5164, dtype="float32") /* ty=Tensor[(6, 6, 8), float32] */;
  %560 = floor_mod(%557, %558) /* ty=Tensor[(6, 6, 8), float64] */;
  %561 = rsqrt(%559) /* ty=Tensor[(6, 6, 8), float32] */;
  (%560, %561)
}

def @func_3879(%var_3876: Tensor[(420), uint8], %var_3877: Tensor[(1536), uint8]) -> (Tensor[(15, 8, 12), float64], Tensor[(2, 2, 5), uint64], Tensor[(420), uint8], Tensor[(1536), uint8]) {
  %562 = cast(%var_3876, dtype="uint8") /* ty=Tensor[(420), uint8] */;
  %563 = cast(%var_3877, dtype="uint8") /* ty=Tensor[(1536), uint8] */;
  %564 = reshape(%562, newshape=[2, 15, 14]) /* ty=Tensor[(2, 15, 14), uint8] */;
  %565 = reshape(%563, newshape=[64, 24]) /* ty=Tensor[(64, 24), uint8] */;
  %566 = @func_3748(%564, %565) /* ty=(Tensor[(2, 15, 14), uint8], Tensor[(2, 15, 14), int32], Tensor[(2, 2, 5), uint64], Tensor[(64, 24), uint8], Tensor[(10, 13, 3), float64], Tensor[(30), float64], Tensor[(65, 6), float64]) */;
  %567 = @func_3825() /* ty=Tensor[(15, 8, 12), float64] */;
  %568 = %566.2;
  (%567, %568, %var_3876, %var_3877)
}

def @func_3614(%var_3593: Tensor[(12, 2, 8), int16]) -> Tensor[(12, 2, 8), int16] {
  %569 = cast(meta[relay.Constant][46] /* ty=Tensor[(12, 2, 8), int16] */, dtype="int16") /* ty=Tensor[(12, 2, 8), int16] */;
  %570 = shape_of(%var_3593, dtype="int32") /* ty=Tensor[(3), int32] */;
  %571 = cast(%var_3593, dtype="int16") /* ty=Tensor[(12, 2, 8), int16] */;
  %572 = dyn.reshape(%569, %570, newshape=[]) /* ty=Tensor[(?, ?, ?), int16] */;
  bitwise_xor(%571, %572) /* ty=Tensor[(12, 2, 8), int16] */
}

def @func_4749(%var_4738: Tensor[(200), int8], %var_4739: Tensor[(2156), float32], %var_4740: Tensor[(1536), uint8]) -> (Tensor[(15, 8, 12), float64], Tensor[(14, 8, 13), int32], Tensor[(200), int8], Tensor[(2156), float32], Tensor[(1536), uint8], Tensor[(1456), int32]) {
  %573 = @func_4029() /* ty=(Tensor[(15, 8, 12), float64],) */;
  %574 = cast(%var_4738, dtype="int8") /* ty=Tensor[(200), int8] */;
  %575 = cast(%var_4739, dtype="float32") /* ty=Tensor[(2156), float32] */;
  %576 = cast(%var_4740, dtype="uint8") /* ty=Tensor[(1536), uint8] */;
  %577 = cast(meta[relay.Constant][47] /* ty=Tensor[(1456), int32] */, dtype="int32") /* ty=Tensor[(1456), int32] */;
  %578 = reshape(%574, newshape=[200]) /* ty=Tensor[(200), int8] */;
  %579 = reshape(%575, newshape=[2156]) /* ty=Tensor[(2156), float32] */;
  %580 = reshape(%576, newshape=[1536]) /* ty=Tensor[(1536), uint8] */;
  %581 = reshape(%577, newshape=[2, 728]) /* ty=Tensor[(2, 728), int32] */;
  %582 = @func_3690(%578, %579, %580, %581) /* ty=(Tensor[(5, 5, 8), int8], Tensor[(200), int8], Tensor[(14, 11, 14), float32], Tensor[(2156), float32], Tensor[(20), uint64], Tensor[(1536), uint8], Tensor[(14, 8, 13), int32], Tensor[(2, 728), int32], Tensor[(2, 1, 6), float32]) */;
  %583 = %573.0;
  %584 = %582.6;
  (%583, %584, %var_4738, %var_4739, %var_4740, meta[relay.Constant][47] /* ty=Tensor[(1456), int32] */)
}

def @func_7491(%var_7485: Tensor[(2, 8, 1), float64]) -> Tensor[(2, 8, 1), float64] {
  %585 = cast(%var_7485, dtype="float64") /* ty=Tensor[(2, 8, 1), float64] */;
  acosh(%585) /* ty=Tensor[(2, 8, 1), float64] */
}

def @func_8649(%var_8615: Tensor[(8, 1, 1), uint8], %var_8616: Tensor[(8, 10, 16), uint8], %var_8632: Tensor[(8, 10, 16), uint8]) -> (Tensor[(14, 8, 13), int32], Tensor[(20), uint64], Tensor[(8, 10, 16), uint8], Tensor[(15, 8, 12), int32], Tensor[(1440), float64]) {
  %586 = cast(meta[relay.Constant][48] /* ty=Tensor[(20), uint64] */, dtype="uint64") /* ty=Tensor[(20), uint64] */;
  %587 = cast(meta[relay.Constant][48] /* ty=Tensor[(20), uint64] */, dtype="uint64") /* ty=Tensor[(20), uint64] */;
  %588 = reshape(%586, newshape=[2, 2, 5]) /* ty=Tensor[(2, 2, 5), uint64] */;
  %589 = reshape(%587, newshape=[2, 2, 5]) /* ty=Tensor[(2, 2, 5), uint64] */;
  %590 = @func_571(%588, %589) /* ty=(Tensor[(2, 2, 5), uint64], Tensor[(14, 8, 13), int32], Tensor[(1456), int32]) */;
  %591 = cast(%var_8615, dtype="uint8") /* ty=Tensor[(8, 1, 1), uint8] */;
  %592 = cast(%var_8616, dtype="uint8") /* ty=Tensor[(8, 10, 16), uint8] */;
  %593 = bitwise_and(%591, %592) /* ty=Tensor[(8, 10, 16), uint8] */;
  %594 = cast(%var_8632, dtype="uint8") /* ty=Tensor[(8, 10, 16), uint8] */;
  %595 = shape_of(%593, dtype="int32") /* ty=Tensor[(3), int32] */;
  %596 = cast(%593, dtype="uint8") /* ty=Tensor[(8, 10, 16), uint8] */;
  %597 = dyn.reshape(%594, %595, newshape=[]) /* ty=Tensor[(?, ?, ?), uint8] */;
  %598 = cast(meta[relay.Constant][49] /* ty=Tensor[(1440), float64] */, dtype="float64") /* ty=Tensor[(1440), float64] */;
  %599 = cast(meta[relay.Constant][49] /* ty=Tensor[(1440), float64] */, dtype="float64") /* ty=Tensor[(1440), float64] */;
  %600 = reshape(%598, newshape=[15, 8, 12]) /* ty=Tensor[(15, 8, 12), float64] */;
  %601 = reshape(%599, newshape=[15, 8, 12]) /* ty=Tensor[(15, 8, 12), float64] */;
  %602 = @func_3956(%600, %601) /* ty=(Tensor[(15, 8, 12), uint16], Tensor[(15, 8, 12), int32]) */;
  %603 = %590.1;
  %604 = bitwise_or(%596, %597) /* ty=Tensor[(8, 10, 16), uint8] */;
  %605 = %602.1;
  (%603, meta[relay.Constant][48] /* ty=Tensor[(20), uint64] */, %604, %605, meta[relay.Constant][49] /* ty=Tensor[(1440), float64] */)
}

def @func_4194() -> (Tensor[(15, 8, 12), float64], Tensor[(6, 15, 9), float64], Tensor[(1, 810), float32]) {
  %606 = cast(meta[relay.Constant][50] /* ty=Tensor[(1, 810), float32] */, dtype="float32") /* ty=Tensor[(1, 810), float32] */;
  %607 = reshape(%606, newshape=[6, 15, 9]) /* ty=Tensor[(6, 15, 9), float32] */;
  %608 = @func_2745(%607) /* ty=(Tensor[(6, 15, 9), float32], Tensor[(6, 15, 9), float64], Tensor[(6, 15, 9), float32]) */;
  %609 = @func_3825() /* ty=Tensor[(15, 8, 12), float64] */;
  %610 = %608.1;
  (%609, %610, meta[relay.Constant][50] /* ty=Tensor[(1, 810), float32] */)
}

def @func_8909() -> (Tensor[(9, 2, 9), float64],) {
  %611 = cast(meta[relay.Constant][51] /* ty=Tensor[(9, 2, 9), float64] */, dtype="float64") /* ty=Tensor[(9, 2, 9), float64] */;
  %612 = sigmoid(%611) /* ty=Tensor[(9, 2, 9), float64] */;
  (%612,)
}

def @func_8780() -> Tensor[(6, 6, 8), bool] {
  @func_6872() /* ty=Tensor[(6, 6, 8), bool] */
}

def @func_7229() -> (Tensor[(?, 810), int64], Tensor[(240), float64], Tensor[(15, 8, 12), float64]) {
  %613 = cast(meta[relay.Constant][52] /* ty=Tensor[(240), float64] */, dtype="float64") /* ty=Tensor[(240), float64] */;
  %614 = reshape(%613, newshape=[24, 10]) /* ty=Tensor[(24, 10), float64] */;
  %615 = @func_6966(%614) /* ty=(Tensor[(5, 4, 14), bool], Tensor[(30), float64], Tensor[(24, 10), float64], Tensor[(1536), uint8], Tensor[(30), float64], Tensor[(?, 810), int64], Tensor[(15, 8, 12), float64], Tensor[(?, 810), float64]) */;
  %616 = @func_3825() /* ty=Tensor[(15, 8, 12), float64] */;
  %617 = cast(%616, dtype="float64") /* ty=Tensor[(15, 8, 12), float64] */;
  %618 = %615.5;
  %619 = atanh(%617) /* ty=Tensor[(15, 8, 12), float64] */;
  (%618, meta[relay.Constant][52] /* ty=Tensor[(240), float64] */, %619)
}

def @func_7654() -> Tensor[(15, 8, 12), float64] {
  %620 = @func_4809() /* ty=(Tensor[(15, 8, 12), float64], Tensor[(15, 8, 12), float64]) */;
  %620.0
}

def @func_6022() -> (Tensor[(5, 4, 14), bool],) {
  %621 = @func_5880() /* ty=Tensor[(5, 4, 14), bool] */;
  (%621,)
}

def @func_7212() -> (Tensor[(6, 15, 9), int16], Tensor[(6, 15, 9), int16]) {
  %622 = @func_6333() /* ty=(Tensor[(6, 15, 9), int16],) */;
  %623 = @func_4315() /* ty=Tensor[(6, 15, 9), int16] */;
  %624 = %622.0;
  (%623, %624)
}

def @func_7768(%var_7760: Tensor[(182), int8]) -> (Tensor[(14, 8, 8), uint8], Tensor[(15, 8, 12), float64], Tensor[(20), uint64], Tensor[(450), float32], Tensor[(1536, 1), uint8], Tensor[(182), int8], Tensor[(30), float64]) {
  %625 = cast(meta[relay.Constant][54] /* ty=Tensor[(14, 8, 8), uint8] */, dtype="uint8") /* ty=Tensor[(14, 8, 8), uint8] */;
  %626 = shape_of(meta[relay.Constant][53] /* ty=Tensor[(14, 8, 8), uint8] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %627 = cast(meta[relay.Constant][53] /* ty=Tensor[(14, 8, 8), uint8] */, dtype="uint8") /* ty=Tensor[(14, 8, 8), uint8] */;
  %628 = dyn.reshape(%625, %626, newshape=[]) /* ty=Tensor[(?, ?, ?), uint8] */;
  %629 = @func_4891() /* ty=(Tensor[(15, 8, 12), float64],) */;
  %630 = cast(meta[relay.Constant][55] /* ty=Tensor[(450), float32] */, dtype="float32") /* ty=Tensor[(450), float32] */;
  %631 = cast(meta[relay.Constant][55] /* ty=Tensor[(450), float32] */, dtype="float32") /* ty=Tensor[(450), float32] */;
  %632 = cast(meta[relay.Constant][56] /* ty=Tensor[(1536, 1), uint8] */, dtype="uint8") /* ty=Tensor[(1536, 1), uint8] */;
  %633 = cast(%var_7760, dtype="int8") /* ty=Tensor[(182), int8] */;
  %634 = cast(meta[relay.Constant][57] /* ty=Tensor[(30), float64] */, dtype="float64") /* ty=Tensor[(30), float64] */;
  %635 = reshape(%630, newshape=[5, 10, 9]) /* ty=Tensor[(5, 10, 9), float32] */;
  %636 = reshape(%631, newshape=[5, 10, 9]) /* ty=Tensor[(5, 10, 9), float32] */;
  %637 = reshape(%632, newshape=[1536]) /* ty=Tensor[(1536), uint8] */;
  %638 = reshape(%633, newshape=[182]) /* ty=Tensor[(182), int8] */;
  %639 = reshape(%634, newshape=[30]) /* ty=Tensor[(30), float64] */;
  %640 = @func_1836(%635, %636, %637, %638, %639) /* ty=(Tensor[(12, 16, 8), bool], Tensor[(1536), uint8], Tensor[(20), uint64], Tensor[(182), int8], Tensor[(2, 2, 5), uint64], Tensor[(10, 13, 3), float64], Tensor[(30), float64], Tensor[(390), float64], Tensor[(5, 10, 9), bool], Tensor[(5, 10, 9), bool]) */;
  %641 = logical_xor(%627, %628) /* ty=Tensor[(14, 8, 8), uint8] */;
  %642 = %629.0;
  %643 = %640.2;
  (%641, %642, %643, meta[relay.Constant][55] /* ty=Tensor[(450), float32] */, meta[relay.Constant][56] /* ty=Tensor[(1536, 1), uint8] */, %var_7760, meta[relay.Constant][57] /* ty=Tensor[(30), float64] */)
}

def @func_5464() -> Tensor[(15, 8, 12), float64] {
  %644 = @func_5263() /* ty=(Tensor[(6, 6, 8), int64], Tensor[(420), uint8], Tensor[(420), uint8], Tensor[(1536), uint8], Tensor[(15, 8, 12), float64]) */;
  %644.4
}

def @func_5481() -> (Tensor[(15, 8, 12), float64], Tensor[(15, 8, 12), float64]) {
  %645 = @func_4891() /* ty=(Tensor[(15, 8, 12), float64],) */;
  %646 = @func_4891() /* ty=(Tensor[(15, 8, 12), float64],) */;
  %647 = %645.0;
  %648 = %646.0;
  (%647, %648)
}

def @func_7992() -> Tensor[(5, 4, 14), bool] {
  @func_5880() /* ty=Tensor[(5, 4, 14), bool] */
}

def @func_1527(%var_1487: Tensor[(2, 13, 7), int8]) -> (Tensor[(2, 13, 7), bool], Tensor[(2, 13, 7), int16], Tensor[(2, 2, 5), uint64], Tensor[(20), uint64], Tensor[(14, 8, 13), int32]) {
  %649 = cast(meta[relay.Constant][58] /* ty=Tensor[(2, 13, 7), int8] */, dtype="bool") /* ty=Tensor[(2, 13, 7), bool] */;
  %650 = shape_of(%var_1487, dtype="int32") /* ty=Tensor[(3), int32] */;
  %651 = cast(%var_1487, dtype="bool") /* ty=Tensor[(2, 13, 7), bool] */;
  %652 = dyn.reshape(%649, %650, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %653 = cast(meta[relay.Constant][58] /* ty=Tensor[(2, 13, 7), int8] */, dtype="int16") /* ty=Tensor[(2, 13, 7), int16] */;
  %654 = shape_of(%var_1487, dtype="int32") /* ty=Tensor[(3), int32] */;
  %655 = cast(%var_1487, dtype="int16") /* ty=Tensor[(2, 13, 7), int16] */;
  %656 = dyn.reshape(%653, %654, newshape=[]) /* ty=Tensor[(?, ?, ?), int16] */;
  %657 = cast(meta[relay.Constant][59] /* ty=Tensor[(20), uint64] */, dtype="uint64") /* ty=Tensor[(20), uint64] */;
  %658 = cast(meta[relay.Constant][59] /* ty=Tensor[(20), uint64] */, dtype="uint64") /* ty=Tensor[(20), uint64] */;
  %659 = reshape(%657, newshape=[2, 2, 5]) /* ty=Tensor[(2, 2, 5), uint64] */;
  %660 = reshape(%658, newshape=[2, 2, 5]) /* ty=Tensor[(2, 2, 5), uint64] */;
  %661 = @func_571(%659, %660) /* ty=(Tensor[(2, 2, 5), uint64], Tensor[(14, 8, 13), int32], Tensor[(1456), int32]) */;
  %662 = %661.0;
  %663 = cast(%662, dtype="uint64") /* ty=Tensor[(2, 2, 5), uint64] */;
  %664 = cast(meta[relay.Constant][59] /* ty=Tensor[(20), uint64] */, dtype="uint64") /* ty=Tensor[(20), uint64] */;
  %665 = reshape(%663, newshape=[2, 2, 5]) /* ty=Tensor[(2, 2, 5), uint64] */;
  %666 = reshape(%664, newshape=[2, 2, 5]) /* ty=Tensor[(2, 2, 5), uint64] */;
  %667 = @func_571(%665, %666) /* ty=(Tensor[(2, 2, 5), uint64], Tensor[(14, 8, 13), int32], Tensor[(1456), int32]) */;
  %668 = greater(%651, %652) /* ty=Tensor[(2, 13, 7), bool] */;
  %669 = bitwise_and(%655, %656) /* ty=Tensor[(2, 13, 7), int16] */;
  %670 = %667.1;
  (%668, %669, %662, meta[relay.Constant][59] /* ty=Tensor[(20), uint64] */, %670)
}

def @func_2385(%var_2344: Tensor[(3, 13, 15), bool], %var_2359: Tensor[(450), float32], %var_2360: Tensor[(2, 768), uint8], %var_2361: Tensor[(182), int8]) -> (Tensor[(390), float64], Tensor[(450), float32], Tensor[(2, 768), uint8], Tensor[(182), int8], Tensor[(30), float64], Tensor[(3, 13, 15), int16], Tensor[(3, 13, 15), uint32]) {
  %671 = cast(%var_2359, dtype="float32") /* ty=Tensor[(450), float32] */;
  %672 = cast(%var_2359, dtype="float32") /* ty=Tensor[(450), float32] */;
  %673 = cast(%var_2360, dtype="uint8") /* ty=Tensor[(2, 768), uint8] */;
  %674 = cast(%var_2361, dtype="int8") /* ty=Tensor[(182), int8] */;
  %675 = cast(meta[relay.Constant][60] /* ty=Tensor[(30), float64] */, dtype="float64") /* ty=Tensor[(30), float64] */;
  %676 = reshape(%671, newshape=[5, 10, 9]) /* ty=Tensor[(5, 10, 9), float32] */;
  %677 = reshape(%672, newshape=[5, 10, 9]) /* ty=Tensor[(5, 10, 9), float32] */;
  %678 = reshape(%673, newshape=[1536]) /* ty=Tensor[(1536), uint8] */;
  %679 = reshape(%674, newshape=[182]) /* ty=Tensor[(182), int8] */;
  %680 = reshape(%675, newshape=[30]) /* ty=Tensor[(30), float64] */;
  %681 = @func_1836(%676, %677, %678, %679, %680) /* ty=(Tensor[(12, 16, 8), bool], Tensor[(1536), uint8], Tensor[(20), uint64], Tensor[(182), int8], Tensor[(2, 2, 5), uint64], Tensor[(10, 13, 3), float64], Tensor[(30), float64], Tensor[(390), float64], Tensor[(5, 10, 9), bool], Tensor[(5, 10, 9), bool]) */;
  %682 = cast(meta[relay.Constant][61] /* ty=Tensor[(3, 13, 15), bool] */, dtype="bool") /* ty=Tensor[(3, 13, 15), bool] */;
  %683 = shape_of(%var_2344, dtype="int32") /* ty=Tensor[(3), int32] */;
  %684 = cast(%var_2344, dtype="bool") /* ty=Tensor[(3, 13, 15), bool] */;
  %685 = dyn.reshape(%682, %683, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %686 = logical_and(%684, %685) /* ty=Tensor[(3, 13, 15), bool] */;
  %687 = cast(%var_2344, dtype="float64") /* ty=Tensor[(3, 13, 15), float64] */;
  %688 = shape_of(%686, dtype="int32") /* ty=Tensor[(3), int32] */;
  %689 = cast(%686, dtype="float64") /* ty=Tensor[(3, 13, 15), float64] */;
  %690 = dyn.reshape(%687, %688, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %691 = mod(%689, %690) /* ty=Tensor[(3, 13, 15), float64] */;
  %692 = cast(%691, dtype="int16") /* ty=Tensor[(3, 13, 15), int16] */;
  %693 = shape_of(%686, dtype="int32") /* ty=Tensor[(3), int32] */;
  %694 = cast(%686, dtype="int16") /* ty=Tensor[(3, 13, 15), int16] */;
  %695 = dyn.reshape(%692, %693, newshape=[]) /* ty=Tensor[(?, ?, ?), int16] */;
  %696 = cast(%var_2344, dtype="uint32") /* ty=Tensor[(3, 13, 15), uint32] */;
  %697 = shape_of(%691, dtype="int32") /* ty=Tensor[(3), int32] */;
  %698 = cast(%691, dtype="uint32") /* ty=Tensor[(3, 13, 15), uint32] */;
  %699 = dyn.reshape(%696, %697, newshape=[]) /* ty=Tensor[(?, ?, ?), uint32] */;
  %700 = %681.7;
  %701 = bitwise_xor(%694, %695) /* ty=Tensor[(3, 13, 15), int16] */;
  %702 = minimum(%698, %699) /* ty=Tensor[(3, 13, 15), uint32] */;
  (%700, %var_2359, %var_2360, %var_2361, meta[relay.Constant][60] /* ty=Tensor[(30), float64] */, %701, %702)
}

def @func_5658(%var_5621: Tensor[(450), float32], %var_5623: Tensor[(13, 14), int8]) -> (Tensor[(15, 8, 12), float64], Tensor[(30), float64], Tensor[(450), float32], Tensor[(1536), uint8], Tensor[(13, 14), int8], Tensor[(30), float64], Tensor[(6, 6, 8), bool]) {
  %703 = @func_4194() /* ty=(Tensor[(15, 8, 12), float64], Tensor[(6, 15, 9), float64], Tensor[(1, 810), float32]) */;
  %704 = cast(%var_5621, dtype="float32") /* ty=Tensor[(450), float32] */;
  %705 = cast(%var_5621, dtype="float32") /* ty=Tensor[(450), float32] */;
  %706 = cast(meta[relay.Constant][62] /* ty=Tensor[(1536), uint8] */, dtype="uint8") /* ty=Tensor[(1536), uint8] */;
  %707 = cast(%var_5623, dtype="int8") /* ty=Tensor[(13, 14), int8] */;
  %708 = cast(meta[relay.Constant][63] /* ty=Tensor[(30), float64] */, dtype="float64") /* ty=Tensor[(30), float64] */;
  %709 = reshape(%704, newshape=[5, 10, 9]) /* ty=Tensor[(5, 10, 9), float32] */;
  %710 = reshape(%705, newshape=[5, 10, 9]) /* ty=Tensor[(5, 10, 9), float32] */;
  %711 = reshape(%706, newshape=[1536]) /* ty=Tensor[(1536), uint8] */;
  %712 = reshape(%707, newshape=[182]) /* ty=Tensor[(182), int8] */;
  %713 = reshape(%708, newshape=[30]) /* ty=Tensor[(30), float64] */;
  %714 = @func_1836(%709, %710, %711, %712, %713) /* ty=(Tensor[(12, 16, 8), bool], Tensor[(1536), uint8], Tensor[(20), uint64], Tensor[(182), int8], Tensor[(2, 2, 5), uint64], Tensor[(10, 13, 3), float64], Tensor[(30), float64], Tensor[(390), float64], Tensor[(5, 10, 9), bool], Tensor[(5, 10, 9), bool]) */;
  %715 = @func_4125() /* ty=(Tensor[(6, 6, 8), bool], Tensor[(6, 6, 8), float32], Tensor[(6, 6, 8), float32]) */;
  %716 = %703.0;
  %717 = %714.6;
  %718 = %715.0;
  (%716, %717, %var_5621, meta[relay.Constant][62] /* ty=Tensor[(1536), uint8] */, %var_5623, meta[relay.Constant][63] /* ty=Tensor[(30), float64] */, %718)
}

def @func_6433() -> Tensor[(6, 7, 16), float64] {
  %719 = cast(meta[relay.Constant][64] /* ty=Tensor[(6, 7, 16), float64] */, dtype="float64") /* ty=Tensor[(6, 7, 16), float64] */;
  sigmoid(%719) /* ty=Tensor[(6, 7, 16), float64] */
}

def @func_4809() -> (Tensor[(15, 8, 12), float64], Tensor[(15, 8, 12), float64]) {
  %720 = @func_3825() /* ty=Tensor[(15, 8, 12), float64] */;
  %721 = @func_3825() /* ty=Tensor[(15, 8, 12), float64] */;
  (%720, %721)
}

def @func_4315() -> Tensor[(6, 15, 9), int16] {
  %722 = @func_4194() /* ty=(Tensor[(15, 8, 12), float64], Tensor[(6, 15, 9), float64], Tensor[(1, 810), float32]) */;
  %723 = %722.1;
  %724 = cast(meta[relay.Constant][65] /* ty=Tensor[(6, 15, 9), float64] */, dtype="int16") /* ty=Tensor[(6, 15, 9), int16] */;
  %725 = shape_of(%723, dtype="int32") /* ty=Tensor[(3), int32] */;
  %726 = cast(%723, dtype="int16") /* ty=Tensor[(6, 15, 9), int16] */;
  %727 = dyn.reshape(%724, %725, newshape=[]) /* ty=Tensor[(?, ?, ?), int16] */;
  left_shift(%726, %727) /* ty=Tensor[(6, 15, 9), int16] */
}

def @func_6715() -> (Tensor[(15, 8, 12), float64], Tensor[(6, 15, 9), int16]) {
  %728 = @func_4891() /* ty=(Tensor[(15, 8, 12), float64],) */;
  %729 = %728.0;
  %730 = @func_4315() /* ty=Tensor[(6, 15, 9), int16] */;
  (%729, %730)
}

def @func_8292() -> Tensor[(5, 4, 14), float64] {
  %731 = @func_7992() /* ty=Tensor[(5, 4, 14), bool] */;
  %732 = cast(%731, dtype="float64") /* ty=Tensor[(5, 4, 14), float64] */;
  sinh(%732) /* ty=Tensor[(5, 4, 14), float64] */
}

def @func_5570() -> (Tensor[(15, 8, 12), float64], Tensor[(15, 8, 12), float64]) {
  %733 = @func_4029() /* ty=(Tensor[(15, 8, 12), float64],) */;
  %734 = @func_5495() /* ty=(Tensor[(15, 8, 12), float64],) */;
  %735 = %733.0;
  %736 = %734.0;
  (%735, %736)
}

def @func_6228(%var_6162: Tensor[(1536), uint8], %var_6163: Tensor[(182), int8], %var_6191: Tensor[(1, 2156), float32], %var_6192: Tensor[(1456), int32]) -> (Tensor[(5, 4, 14), bool], Tensor[(1, 810), float32], Tensor[(5, 10, 9), bool], Tensor[(450), float32], Tensor[(1536), uint8], Tensor[(182), int8], Tensor[(30), float64], Tensor[(2, 1, 6), float32], Tensor[(200), int8], Tensor[(1, 2156), float32], Tensor[(1456), int32], Tensor[(15, 8, 12), float64], Tensor[(200), float32]) {
  %737 = @func_4194() /* ty=(Tensor[(15, 8, 12), float64], Tensor[(6, 15, 9), float64], Tensor[(1, 810), float32]) */;
  %738 = cast(meta[relay.Constant][66] /* ty=Tensor[(450), float32] */, dtype="float32") /* ty=Tensor[(450), float32] */;
  %739 = cast(meta[relay.Constant][66] /* ty=Tensor[(450), float32] */, dtype="float32") /* ty=Tensor[(450), float32] */;
  %740 = cast(%var_6162, dtype="uint8") /* ty=Tensor[(1536), uint8] */;
  %741 = cast(%var_6163, dtype="int8") /* ty=Tensor[(182), int8] */;
  %742 = cast(meta[relay.Constant][67] /* ty=Tensor[(30), float64] */, dtype="float64") /* ty=Tensor[(30), float64] */;
  %743 = reshape(%738, newshape=[5, 10, 9]) /* ty=Tensor[(5, 10, 9), float32] */;
  %744 = reshape(%739, newshape=[5, 10, 9]) /* ty=Tensor[(5, 10, 9), float32] */;
  %745 = reshape(%740, newshape=[1536]) /* ty=Tensor[(1536), uint8] */;
  %746 = reshape(%741, newshape=[182]) /* ty=Tensor[(182), int8] */;
  %747 = reshape(%742, newshape=[30]) /* ty=Tensor[(30), float64] */;
  %748 = @func_1836(%743, %744, %745, %746, %747) /* ty=(Tensor[(12, 16, 8), bool], Tensor[(1536), uint8], Tensor[(20), uint64], Tensor[(182), int8], Tensor[(2, 2, 5), uint64], Tensor[(10, 13, 3), float64], Tensor[(30), float64], Tensor[(390), float64], Tensor[(5, 10, 9), bool], Tensor[(5, 10, 9), bool]) */;
  %749 = cast(meta[relay.Constant][68] /* ty=Tensor[(200), int8] */, dtype="int8") /* ty=Tensor[(200), int8] */;
  %750 = cast(%var_6191, dtype="float32") /* ty=Tensor[(1, 2156), float32] */;
  %751 = cast(%var_6162, dtype="uint8") /* ty=Tensor[(1536), uint8] */;
  %752 = cast(%var_6192, dtype="int32") /* ty=Tensor[(1456), int32] */;
  %753 = reshape(%749, newshape=[200]) /* ty=Tensor[(200), int8] */;
  %754 = reshape(%750, newshape=[2156]) /* ty=Tensor[(2156), float32] */;
  %755 = reshape(%751, newshape=[1536]) /* ty=Tensor[(1536), uint8] */;
  %756 = reshape(%752, newshape=[2, 728]) /* ty=Tensor[(2, 728), int32] */;
  %757 = @func_3690(%753, %754, %755, %756) /* ty=(Tensor[(5, 5, 8), int8], Tensor[(200), int8], Tensor[(14, 11, 14), float32], Tensor[(2156), float32], Tensor[(20), uint64], Tensor[(1536), uint8], Tensor[(14, 8, 13), int32], Tensor[(2, 728), int32], Tensor[(2, 1, 6), float32]) */;
  %758 = @func_5107() /* ty=Tensor[(15, 8, 12), float64] */;
  %759 = cast(%758, dtype="float64") /* ty=Tensor[(15, 8, 12), float64] */;
  %760 = cast(meta[relay.Constant][68] /* ty=Tensor[(200), int8] */, dtype="int8") /* ty=Tensor[(200), int8] */;
  %761 = reshape(%759, newshape=[1440]) /* ty=Tensor[(1440), float64] */;
  %762 = reshape(%760, newshape=[200]) /* ty=Tensor[(200), int8] */;
  %763 = @func_5296(%761, %762) /* ty=(Tensor[(6, 6, 8), float32], Tensor[(15, 8, 12), int32], Tensor[(1440), float64], Tensor[(14, 8, 13), int32], Tensor[(1456), int32], Tensor[(5, 5, 8), int8], Tensor[(200), int8]) */;
  %764 = %763.6;
  %765 = cast(%764, dtype="float32") /* ty=Tensor[(200), float32] */;
  %766 = @func_5880() /* ty=Tensor[(5, 4, 14), bool] */;
  %767 = %737.2;
  %768 = %748.9;
  %769 = %757.8;
  %770 = log10(%765) /* ty=Tensor[(200), float32] */;
  (%766, %767, %768, meta[relay.Constant][66] /* ty=Tensor[(450), float32] */, %var_6162, %var_6163, meta[relay.Constant][67] /* ty=Tensor[(30), float64] */, %769, meta[relay.Constant][68] /* ty=Tensor[(200), int8] */, %var_6191, %var_6192, %758, %770)
}

def @func_5880() -> Tensor[(5, 4, 14), bool] {
  %771 = cast(meta[relay.Constant][70] /* ty=Tensor[(5, 4, 14), int8] */, dtype="bool") /* ty=Tensor[(5, 4, 14), bool] */;
  %772 = shape_of(meta[relay.Constant][69] /* ty=Tensor[(5, 4, 14), int8] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %773 = cast(meta[relay.Constant][69] /* ty=Tensor[(5, 4, 14), int8] */, dtype="bool") /* ty=Tensor[(5, 4, 14), bool] */;
  %774 = dyn.reshape(%771, %772, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  equal(%773, %774) /* ty=Tensor[(5, 4, 14), bool] */
}

def @func_5049(%var_5024: Tensor[(10, 3, 2), uint32], %var_5025: Tensor[(10, 3, 2), uint32]) -> (Tensor[(10, 3, 2), uint32], Tensor[(12, 2, 8), int16], Tensor[(192), int16]) {
  %775 = cast(%var_5025, dtype="uint32") /* ty=Tensor[(10, 3, 2), uint32] */;
  %776 = shape_of(%var_5024, dtype="int32") /* ty=Tensor[(3), int32] */;
  %777 = cast(%var_5024, dtype="uint32") /* ty=Tensor[(10, 3, 2), uint32] */;
  %778 = dyn.reshape(%775, %776, newshape=[]) /* ty=Tensor[(?, ?, ?), uint32] */;
  %779 = cast(meta[relay.Constant][71] /* ty=Tensor[(192), int16] */, dtype="int16") /* ty=Tensor[(192), int16] */;
  %780 = reshape(%779, newshape=[12, 2, 8]) /* ty=Tensor[(12, 2, 8), int16] */;
  %781 = multiply(%777, %778) /* ty=Tensor[(10, 3, 2), uint32] */;
  %782 = @func_3614(%780) /* ty=Tensor[(12, 2, 8), int16] */;
  (%781, %782, meta[relay.Constant][71] /* ty=Tensor[(192), int16] */)
}

def @func_5340() -> Tensor[(15, 8, 12), float64] {
  %783 = @func_4891() /* ty=(Tensor[(15, 8, 12), float64],) */;
  %783.0
}

def @func_6808(%var_6803: Tensor[(3, 2, 1), float32]) -> (Tensor[(3, 2, 1), float32],) {
  %784 = cast(%var_6803, dtype="float32") /* ty=Tensor[(3, 2, 1), float32] */;
  %785 = erf(%784) /* ty=Tensor[(3, 2, 1), float32] */;
  (%785,)
}

def @func_7471(%var_7435: Tensor[(6, 7, 12), float64]) -> (Tensor[(6, 7, 12), float64],) {
  %786 = cast(%var_7435, dtype="float64") /* ty=Tensor[(6, 7, 12), float64] */;
  %787 = asinh(%786) /* ty=Tensor[(6, 7, 12), float64] */;
  (%787,)
}

def @func_8694() -> Tensor[(15, 8, 12), float64] {
  %788 = @func_5871() /* ty=(Tensor[(6, 15, 9), int16], Tensor[(15, 8, 12), float64]) */;
  %788.1
}

def @func_7171(%var_7153: Tensor[(182), int8], %var_7159: Tensor[(1536), uint8]) -> (Tensor[(15, 8, 12), float64], Tensor[(6, 6, 8), bool], Tensor[(450), float32], Tensor[(182), int8], Tensor[(1, 810), float32], Tensor[(336), float64], Tensor[(192), int16], Tensor[(1536), uint8]) {
  %789 = @func_5871() /* ty=(Tensor[(6, 15, 9), int16], Tensor[(15, 8, 12), float64]) */;
  %790 = cast(meta[relay.Constant][72] /* ty=Tensor[(450), float32] */, dtype="float32") /* ty=Tensor[(450), float32] */;
  %791 = cast(%var_7153, dtype="int8") /* ty=Tensor[(182), int8] */;
  %792 = reshape(%790, newshape=[450]) /* ty=Tensor[(450), float32] */;
  %793 = reshape(%791, newshape=[13, 14]) /* ty=Tensor[(13, 14), int8] */;
  %794 = @func_5658(%792, %793) /* ty=(Tensor[(15, 8, 12), float64], Tensor[(30), float64], Tensor[(450), float32], Tensor[(1536), uint8], Tensor[(13, 14), int8], Tensor[(30), float64], Tensor[(6, 6, 8), bool]) */;
  %795 = cast(meta[relay.Constant][73] /* ty=Tensor[(336), float64] */, dtype="float64") /* ty=Tensor[(336), float64] */;
  %796 = cast(meta[relay.Constant][73] /* ty=Tensor[(336), float64] */, dtype="float64") /* ty=Tensor[(336), float64] */;
  %797 = cast(meta[relay.Constant][74] /* ty=Tensor[(192), int16] */, dtype="int16") /* ty=Tensor[(192), int16] */;
  %798 = cast(%var_7159, dtype="uint8") /* ty=Tensor[(1536), uint8] */;
  %799 = cast(%var_7153, dtype="int8") /* ty=Tensor[(182), int8] */;
  %800 = reshape(%795, newshape=[7, 4, 12]) /* ty=Tensor[(7, 4, 12), float64] */;
  %801 = reshape(%796, newshape=[7, 4, 12]) /* ty=Tensor[(7, 4, 12), float64] */;
  %802 = reshape(%797, newshape=[192]) /* ty=Tensor[(192), int16] */;
  %803 = reshape(%798, newshape=[1, 1536]) /* ty=Tensor[(1, 1536), uint8] */;
  %804 = reshape(%799, newshape=[182]) /* ty=Tensor[(182), int8] */;
  %805 = @func_4571(%800, %801, %802, %803, %804) /* ty=(Tensor[(7, 4, 12), float32], Tensor[(12, 2, 8), int16], Tensor[(192), int16], Tensor[(1, 810), float32], Tensor[(7, 4, 12), uint8], Tensor[(2, 2, 5), uint64], Tensor[(390), float64], Tensor[(1, 1536), uint8], Tensor[(240), float64], Tensor[(182), int8]) */;
  %806 = %789.1;
  %807 = %794.6;
  %808 = %805.3;
  (%806, %807, meta[relay.Constant][72] /* ty=Tensor[(450), float32] */, %var_7153, %808, meta[relay.Constant][73] /* ty=Tensor[(336), float64] */, meta[relay.Constant][74] /* ty=Tensor[(192), int16] */, %var_7159)
}

def @func_6390(%var_6379: Tensor[(1536), uint8], %var_6380: Tensor[(1456), int32]) -> (Tensor[(6, 15, 9), int16], Tensor[(2, 728), int32], Tensor[(200), int8], Tensor[(2156), float32], Tensor[(1536), uint8], Tensor[(1456), int32]) {
  %809 = @func_6333() /* ty=(Tensor[(6, 15, 9), int16],) */;
  %810 = cast(meta[relay.Constant][75] /* ty=Tensor[(200), int8] */, dtype="int8") /* ty=Tensor[(200), int8] */;
  %811 = cast(meta[relay.Constant][76] /* ty=Tensor[(2156), float32] */, dtype="float32") /* ty=Tensor[(2156), float32] */;
  %812 = cast(%var_6379, dtype="uint8") /* ty=Tensor[(1536), uint8] */;
  %813 = cast(%var_6380, dtype="int32") /* ty=Tensor[(1456), int32] */;
  %814 = reshape(%810, newshape=[200]) /* ty=Tensor[(200), int8] */;
  %815 = reshape(%811, newshape=[2156]) /* ty=Tensor[(2156), float32] */;
  %816 = reshape(%812, newshape=[1536]) /* ty=Tensor[(1536), uint8] */;
  %817 = reshape(%813, newshape=[2, 728]) /* ty=Tensor[(2, 728), int32] */;
  %818 = @func_3690(%814, %815, %816, %817) /* ty=(Tensor[(5, 5, 8), int8], Tensor[(200), int8], Tensor[(14, 11, 14), float32], Tensor[(2156), float32], Tensor[(20), uint64], Tensor[(1536), uint8], Tensor[(14, 8, 13), int32], Tensor[(2, 728), int32], Tensor[(2, 1, 6), float32]) */;
  %819 = %809.0;
  %820 = %818.7;
  (%819, %820, meta[relay.Constant][75] /* ty=Tensor[(200), int8] */, meta[relay.Constant][76] /* ty=Tensor[(2156), float32] */, %var_6379, %var_6380)
}

def @func_4571(%var_4517: Tensor[(7, 4, 12), float64], %var_4529: Tensor[(7, 4, 12), float64], %var_4536: Tensor[(192), int16], %var_4567: Tensor[(1, 1536), uint8], %var_4569: Tensor[(182), int8]) -> (Tensor[(7, 4, 12), float32], Tensor[(12, 2, 8), int16], Tensor[(192), int16], Tensor[(1, 810), float32], Tensor[(7, 4, 12), uint8], Tensor[(2, 2, 5), uint64], Tensor[(390), float64], Tensor[(1, 1536), uint8], Tensor[(240), float64], Tensor[(182), int8]) {
  %821 = cast(%var_4517, dtype="float64") /* ty=Tensor[(7, 4, 12), float64] */;
  %822 = log(%821) /* ty=Tensor[(7, 4, 12), float64] */;
  %823 = cast(%var_4529, dtype="float32") /* ty=Tensor[(7, 4, 12), float32] */;
  %824 = shape_of(%822, dtype="int32") /* ty=Tensor[(3), int32] */;
  %825 = cast(%822, dtype="float32") /* ty=Tensor[(7, 4, 12), float32] */;
  %826 = dyn.reshape(%823, %824, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %827 = cast(%var_4536, dtype="int16") /* ty=Tensor[(192), int16] */;
  %828 = reshape(%827, newshape=[12, 2, 8]) /* ty=Tensor[(12, 2, 8), int16] */;
  %829 = @func_4194() /* ty=(Tensor[(15, 8, 12), float64], Tensor[(6, 15, 9), float64], Tensor[(1, 810), float32]) */;
  %830 = cast(%822, dtype="float64") /* ty=Tensor[(7, 4, 12), float64] */;
  %831 = atanh(%830) /* ty=Tensor[(7, 4, 12), float64] */;
  %832 = cast(%var_4529, dtype="uint8") /* ty=Tensor[(7, 4, 12), uint8] */;
  %833 = shape_of(%831, dtype="int32") /* ty=Tensor[(3), int32] */;
  %834 = cast(%831, dtype="uint8") /* ty=Tensor[(7, 4, 12), uint8] */;
  %835 = dyn.reshape(%832, %833, newshape=[]) /* ty=Tensor[(?, ?, ?), uint8] */;
  %836 = cast(meta[relay.Constant][77] /* ty=Tensor[(390), float64] */, dtype="float64") /* ty=Tensor[(390), float64] */;
  %837 = cast(%var_4567, dtype="uint8") /* ty=Tensor[(1, 1536), uint8] */;
  %838 = cast(meta[relay.Constant][78] /* ty=Tensor[(240), float64] */, dtype="float64") /* ty=Tensor[(240), float64] */;
  %839 = cast(%var_4569, dtype="int8") /* ty=Tensor[(182), int8] */;
  %840 = reshape(%836, newshape=[390]) /* ty=Tensor[(390), float64] */;
  %841 = reshape(%837, newshape=[1536]) /* ty=Tensor[(1536), uint8] */;
  %842 = reshape(%838, newshape=[240]) /* ty=Tensor[(240), float64] */;
  %843 = reshape(%839, newshape=[182]) /* ty=Tensor[(182), int8] */;
  %844 = @func_2310(%840, %841, %842, %843) /* ty=(Tensor[(3, 12, 16), float64], Tensor[(10, 13, 3), float64], Tensor[(1, 30), float64], Tensor[(390), float64], Tensor[(2, 2, 5), uint64], Tensor[(1536), uint8], Tensor[(450), float32], Tensor[(240), float64], Tensor[(2, 13, 7), bool], Tensor[(182), int8], Tensor[(12, 16, 8), bool]) */;
  %845 = divide(%825, %826) /* ty=Tensor[(7, 4, 12), float32] */;
  %846 = @func_3614(%828) /* ty=Tensor[(12, 2, 8), int16] */;
  %847 = %829.2;
  %848 = left_shift(%834, %835) /* ty=Tensor[(7, 4, 12), uint8] */;
  %849 = %844.4;
  (%845, %846, %var_4536, %847, %848, %849, meta[relay.Constant][77] /* ty=Tensor[(390), float64] */, %var_4567, meta[relay.Constant][78] /* ty=Tensor[(240), float64] */, %var_4569)
}

def @func_3825() -> Tensor[(15, 8, 12), float64] {
  %850 = cast(meta[relay.Constant][79] /* ty=Tensor[(15, 8, 12), float64] */, dtype="float64") /* ty=Tensor[(15, 8, 12), float64] */;
  sin(%850) /* ty=Tensor[(15, 8, 12), float64] */
}

def @func_1836(%var_1740: Tensor[(5, 10, 9), float32], %var_1751: Tensor[(5, 10, 9), float32], %var_1761: Tensor[(1536), uint8], %var_1764: Tensor[(182), int8], %var_1788: Tensor[(30), float64]) -> (Tensor[(12, 16, 8), bool], Tensor[(1536), uint8], Tensor[(20), uint64], Tensor[(182), int8], Tensor[(2, 2, 5), uint64], Tensor[(10, 13, 3), float64], Tensor[(30), float64], Tensor[(390), float64], Tensor[(5, 10, 9), bool], Tensor[(5, 10, 9), bool]) {
  %851 = cast(%var_1761, dtype="uint8") /* ty=Tensor[(1536), uint8] */;
  %852 = cast(%var_1761, dtype="uint8") /* ty=Tensor[(1536), uint8] */;
  %853 = reshape(%851, newshape=[12, 16, 8]) /* ty=Tensor[(12, 16, 8), uint8] */;
  %854 = reshape(%852, newshape=[12, 16, 8]) /* ty=Tensor[(12, 16, 8), uint8] */;
  %855 = @func_1087(%853, %854) /* ty=(Tensor[(12, 16, 8), bool], Tensor[(2, 2, 5), uint64], Tensor[(20), uint64]) */;
  %856 = cast(%var_1764, dtype="int8") /* ty=Tensor[(182), int8] */;
  %857 = reshape(%856, newshape=[2, 13, 7]) /* ty=Tensor[(2, 13, 7), int8] */;
  %858 = @func_1527(%857) /* ty=(Tensor[(2, 13, 7), bool], Tensor[(2, 13, 7), int16], Tensor[(2, 2, 5), uint64], Tensor[(20), uint64], Tensor[(14, 8, 13), int32]) */;
  %859 = %855.0;
  %860 = cast(%859, dtype="uint8") /* ty=Tensor[(12, 16, 8), uint8] */;
  %861 = cast(%var_1761, dtype="uint8") /* ty=Tensor[(1536), uint8] */;
  %862 = reshape(%860, newshape=[12, 16, 8]) /* ty=Tensor[(12, 16, 8), uint8] */;
  %863 = reshape(%861, newshape=[12, 16, 8]) /* ty=Tensor[(12, 16, 8), uint8] */;
  %864 = @func_1087(%862, %863) /* ty=(Tensor[(12, 16, 8), bool], Tensor[(2, 2, 5), uint64], Tensor[(20), uint64]) */;
  %865 = cast(%var_1788, dtype="float64") /* ty=Tensor[(30), float64] */;
  %866 = cast(meta[relay.Constant][80] /* ty=Tensor[(390), float64] */, dtype="float64") /* ty=Tensor[(390), float64] */;
  %867 = reshape(%865, newshape=[10, 1, 3]) /* ty=Tensor[(10, 1, 3), float64] */;
  %868 = reshape(%866, newshape=[10, 13, 3]) /* ty=Tensor[(10, 13, 3), float64] */;
  %869 = @func_397(%867, %868) /* ty=(Tensor[(10, 13, 3), float64],) */;
  %870 = cast(%var_1740, dtype="float32") /* ty=Tensor[(5, 10, 9), float32] */;
  %871 = rsqrt(%870) /* ty=Tensor[(5, 10, 9), float32] */;
  %872 = cast(%var_1751, dtype="float64") /* ty=Tensor[(5, 10, 9), float64] */;
  %873 = shape_of(%871, dtype="int32") /* ty=Tensor[(3), int32] */;
  %874 = cast(%871, dtype="float64") /* ty=Tensor[(5, 10, 9), float64] */;
  %875 = dyn.reshape(%872, %873, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %876 = maximum(%874, %875) /* ty=Tensor[(5, 10, 9), float64] */;
  %877 = cast(%876, dtype="uint8") /* ty=Tensor[(5, 10, 9), uint8] */;
  %878 = shape_of(%871, dtype="int32") /* ty=Tensor[(3), int32] */;
  %879 = cast(%871, dtype="uint8") /* ty=Tensor[(5, 10, 9), uint8] */;
  %880 = dyn.reshape(%877, %878, newshape=[]) /* ty=Tensor[(?, ?, ?), uint8] */;
  %881 = bitwise_or(%879, %880) /* ty=Tensor[(5, 10, 9), uint8] */;
  %882 = cast(meta[relay.Constant][81] /* ty=Tensor[(5, 10, 9), uint8] */, dtype="bool") /* ty=Tensor[(5, 10, 9), bool] */;
  %883 = shape_of(%881, dtype="int32") /* ty=Tensor[(3), int32] */;
  %884 = cast(%881, dtype="bool") /* ty=Tensor[(5, 10, 9), bool] */;
  %885 = dyn.reshape(%882, %883, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %886 = cast(%876, dtype="float32") /* ty=Tensor[(5, 10, 9), float32] */;
  %887 = atanh(%886) /* ty=Tensor[(5, 10, 9), float32] */;
  %888 = cast(%887, dtype="float64") /* ty=Tensor[(5, 10, 9), float64] */;
  %889 = cosh(%888) /* ty=Tensor[(5, 10, 9), float64] */;
  %890 = cast(%881, dtype="bool") /* ty=Tensor[(5, 10, 9), bool] */;
  %891 = shape_of(%889, dtype="int32") /* ty=Tensor[(3), int32] */;
  %892 = cast(%889, dtype="bool") /* ty=Tensor[(5, 10, 9), bool] */;
  %893 = dyn.reshape(%890, %891, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %894 = %858.3;
  %895 = %864.1;
  %896 = %869.0;
  %897 = less_equal(%884, %885) /* ty=Tensor[(5, 10, 9), bool] */;
  %898 = logical_or(%892, %893) /* ty=Tensor[(5, 10, 9), bool] */;
  (%859, %var_1761, %894, %var_1764, %895, %896, %var_1788, meta[relay.Constant][80] /* ty=Tensor[(390), float64] */, %897, %898)
}

def @func_6535(%var_6497: Tensor[(20), uint64], %var_6509: Tensor[(1440), float64], %var_6523: Tensor[(16, 20), float64]) -> (Tensor[(5, 4, 14), bool], Tensor[(20), uint64], Tensor[(15, 8, 12), uint16], Tensor[(1440), float64], Tensor[(16, 20), bool], Tensor[(15, 8, 12), float64]) {
  %899 = @func_6022() /* ty=(Tensor[(5, 4, 14), bool],) */;
  %900 = cast(%var_6509, dtype="float64") /* ty=Tensor[(1440), float64] */;
  %901 = cast(%var_6509, dtype="float64") /* ty=Tensor[(1440), float64] */;
  %902 = reshape(%900, newshape=[15, 8, 12]) /* ty=Tensor[(15, 8, 12), float64] */;
  %903 = reshape(%901, newshape=[15, 8, 12]) /* ty=Tensor[(15, 8, 12), float64] */;
  %904 = @func_3956(%902, %903) /* ty=(Tensor[(15, 8, 12), uint16], Tensor[(15, 8, 12), int32]) */;
  %905 = cast(%var_6497, dtype="uint64") /* ty=Tensor[(20), uint64] */;
  %906 = reshape(%905, newshape=[1, 20]) /* ty=Tensor[(1, 20), uint64] */;
  %907 = @func_5545(%906) /* ty=(Tensor[(15, 8, 12), float64], Tensor[(15, 8, 12), float64], Tensor[(?, 20), bool]) */;
  %908 = %907.2;
  %909 = cast(%908, dtype="float64") /* ty=Tensor[(?, 20), float64] */;
  %910 = atan(%909) /* ty=Tensor[(?, 20), float64] */;
  %911 = cast(%910, dtype="bool") /* ty=Tensor[(?, 20), bool] */;
  %912 = cast(%var_6523, dtype="bool") /* ty=Tensor[(16, 20), bool] */;
  %913 = %899.0;
  %914 = %904.0;
  %915 = less(%911, %912) /* ty=Tensor[(16, 20), bool] */;
  %916 = @func_5907() /* ty=Tensor[(15, 8, 12), float64] */;
  (%913, %var_6497, %914, %var_6509, %915, %916)
}

def @func_7955() -> Tensor[(15, 8, 12), float64] {
  @func_5132() /* ty=Tensor[(15, 8, 12), float64] */
}

def @func_7979() -> (Tensor[(6, 15, 9), int16], Tensor[(5, 4, 14), bool]) {
  %917 = @func_6022() /* ty=(Tensor[(5, 4, 14), bool],) */;
  %918 = @func_4315() /* ty=Tensor[(6, 15, 9), int16] */;
  %919 = %917.0;
  (%918, %919)
}

def @func_8613() -> Tensor[(15, 8, 12), float64] {
  %920 = @func_5481() /* ty=(Tensor[(15, 8, 12), float64], Tensor[(15, 8, 12), float64]) */;
  %920.1
}

def @func_7592(%var_7540: Tensor[(10, 3, 15), float64], %var_7551: Tensor[(10, 3, 15), float64], %var_7556: Tensor[(640), float32], %var_7564: Tensor[(192), int16], %var_7588: Tensor[(60), uint32]) -> (Tensor[(10, 3, 15), float64], Tensor[(10, 3, 15), float32], Tensor[(10, 3, 15), bool], Tensor[(8, 10, 8), float32], Tensor[(640), float32], Tensor[(12, 2, 8), int16], Tensor[(192), int16], Tensor[(6, 6, 8), float32], Tensor[(15, 8, 12), float64], Tensor[(12, 2, 8), int16], Tensor[(60), uint32]) {
  %921 = cast(%var_7540, dtype="float64") /* ty=Tensor[(10, 3, 15), float64] */;
  %922 = cast(%var_7540, dtype="float32") /* ty=Tensor[(10, 3, 15), float32] */;
  %923 = acos(%922) /* ty=Tensor[(10, 3, 15), float32] */;
  %924 = cast(%923, dtype="float32") /* ty=Tensor[(10, 3, 15), float32] */;
  %925 = shape_of(%var_7540, dtype="int32") /* ty=Tensor[(3), int32] */;
  %926 = cast(%var_7540, dtype="float32") /* ty=Tensor[(10, 3, 15), float32] */;
  %927 = dyn.reshape(%924, %925, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %928 = cast(%var_7551, dtype="bool") /* ty=Tensor[(10, 3, 15), bool] */;
  %929 = shape_of(%var_7540, dtype="int32") /* ty=Tensor[(3), int32] */;
  %930 = cast(%var_7540, dtype="bool") /* ty=Tensor[(10, 3, 15), bool] */;
  %931 = dyn.reshape(%928, %929, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %932 = cast(%var_7556, dtype="float32") /* ty=Tensor[(640), float32] */;
  %933 = reshape(%932, newshape=[8, 10, 8]) /* ty=Tensor[(8, 10, 8), float32] */;
  %934 = @func_2610(%933) /* ty=(Tensor[(8, 10, 8), float32],) */;
  %935 = cast(%var_7564, dtype="int16") /* ty=Tensor[(192), int16] */;
  %936 = reshape(%935, newshape=[2, 96]) /* ty=Tensor[(2, 96), int16] */;
  %937 = @func_6268(%936) /* ty=(Tensor[(6, 6, 8), int64], Tensor[(12, 2, 8), int16], Tensor[(2, 96), int16]) */;
  %938 = @func_6647() /* ty=(Tensor[(15, 8, 12), float64],) */;
  %939 = cast(%var_7588, dtype="uint32") /* ty=Tensor[(60), uint32] */;
  %940 = cast(%var_7588, dtype="uint32") /* ty=Tensor[(60), uint32] */;
  %941 = reshape(%939, newshape=[10, 3, 2]) /* ty=Tensor[(10, 3, 2), uint32] */;
  %942 = reshape(%940, newshape=[10, 3, 2]) /* ty=Tensor[(10, 3, 2), uint32] */;
  %943 = @func_5049(%941, %942) /* ty=(Tensor[(10, 3, 2), uint32], Tensor[(12, 2, 8), int16], Tensor[(192), int16]) */;
  %944 = rsqrt(%921) /* ty=Tensor[(10, 3, 15), float64] */;
  %945 = subtract(%926, %927) /* ty=Tensor[(10, 3, 15), float32] */;
  %946 = less(%930, %931) /* ty=Tensor[(10, 3, 15), bool] */;
  %947 = %934.0;
  %948 = %937.1;
  %949 = @func_4007() /* ty=Tensor[(6, 6, 8), float32] */;
  %950 = %938.0;
  %951 = %943.1;
  (%944, %945, %946, %947, %var_7556, %948, %var_7564, %949, %950, %951, %var_7588)
}

/* For debugging purposes the metadata section has been omitted.
 * If you would like to see the full metadata section you can set the 
 * option to `True` when invoking `astext`. 
 */
===================================
==========mutated_mod==========
#[version = "0.0.5"]
def @func_3956(%var_3918: Tensor[(15, 8, 12), float64], %var_3941: Tensor[(15, 8, 12), float64]) -> (Tensor[(15, 8, 12), uint16], Tensor[(15, 8, 12), int32]) {
  %0 = @func_3825() /* ty=Tensor[(15, 8, 12), float64] */;
  %1 = cast(%var_3918, dtype="uint16") /* ty=Tensor[(15, 8, 12), uint16] */;
  %2 = shape_of(%0, dtype="int32") /* ty=Tensor[(3), int32] */;
  %3 = cast(%0, dtype="uint16") /* ty=Tensor[(15, 8, 12), uint16] */;
  %4 = dyn.reshape(%1, %2, newshape=[]) /* ty=Tensor[(?, ?, ?), uint16] */;
  %5 = cast(%var_3941, dtype="int32") /* ty=Tensor[(15, 8, 12), int32] */;
  %6 = shape_of(%var_3918, dtype="int32") /* ty=Tensor[(3), int32] */;
  %7 = cast(%var_3918, dtype="int32") /* ty=Tensor[(15, 8, 12), int32] */;
  %8 = dyn.reshape(%5, %6, newshape=[]) /* ty=Tensor[(?, ?, ?), int32] */;
  %9 = logical_xor(%3, %4) /* ty=Tensor[(15, 8, 12), uint16] */;
  %10 = add(%7, %8) /* ty=Tensor[(15, 8, 12), int32] */;
  (%9, %10)
}

def @func_5053(%var_5051: Tensor[(10, 3, 2), uint32], %var_5052: Tensor[(10, 3, 2), uint32]) -> (Tensor[(10, 3, 2), uint32], Tensor[(12, 2, 8), int16], Tensor[(192), int16]) {
  @func_5049(%var_5051, %var_5052) /* ty=(Tensor[(10, 3, 2), uint32], Tensor[(12, 2, 8), int16], Tensor[(192), int16]) */
}

def @func_8416() -> (Tensor[(15, 8, 12), float64],) {
  %11 = @func_4029() /* ty=(Tensor[(15, 8, 12), float64],) */;
  %12 = %11.0;
  (%12,)
}

def @func_5049(%var_5024: Tensor[(10, 3, 2), uint32], %var_5025: Tensor[(10, 3, 2), uint32]) -> (Tensor[(10, 3, 2), uint32], Tensor[(12, 2, 8), int16], Tensor[(192), int16]) {
  %13 = cast(%var_5025, dtype="uint32") /* ty=Tensor[(10, 3, 2), uint32] */;
  %14 = shape_of(%var_5024, dtype="int32") /* ty=Tensor[(3), int32] */;
  %15 = cast(%var_5024, dtype="uint32") /* ty=Tensor[(10, 3, 2), uint32] */;
  %16 = dyn.reshape(%13, %14, newshape=[]) /* ty=Tensor[(?, ?, ?), uint32] */;
  %17 = cast(meta[relay.Constant][0] /* ty=Tensor[(192), int16] */, dtype="int16") /* ty=Tensor[(192), int16] */;
  %18 = reshape(%17, newshape=[12, 2, 8]) /* ty=Tensor[(12, 2, 8), int16] */;
  %19 = multiply(%15, %16) /* ty=Tensor[(10, 3, 2), uint32] */;
  %20 = @func_3614(%18) /* ty=Tensor[(12, 2, 8), int16] */;
  (%19, %20, meta[relay.Constant][0] /* ty=Tensor[(192), int16] */)
}

def @func_397(%var_379: Tensor[(10, 1, 3), float64], %var_380: Tensor[(10, 13, 3), float64]) -> (Tensor[(10, 13, 3), float64],) {
  %21 = cast(%var_379, dtype="float64") /* ty=Tensor[(10, 1, 3), float64] */;
  %22 = cast(%var_380, dtype="float64") /* ty=Tensor[(10, 13, 3), float64] */;
  %23 = minimum(%21, %22) /* ty=Tensor[(10, 13, 3), float64] */;
  (%23,)
}

def @func_3960(%var_3958: Tensor[(15, 8, 12), float64], %var_3959: Tensor[(15, 8, 12), float64]) -> (Tensor[(15, 8, 12), uint16], Tensor[(15, 8, 12), int32]) {
  @func_3956(%var_3958, %var_3959) /* ty=(Tensor[(15, 8, 12), uint16], Tensor[(15, 8, 12), int32]) */
}

def @func_1087(%var_1075: Tensor[(12, 16, 8), uint8], %var_1076: Tensor[(12, 16, 8), uint8]) -> (Tensor[(12, 16, 8), bool], Tensor[(2, 2, 5), uint64], Tensor[(20), uint64]) {
  %24 = cast(%var_1076, dtype="bool") /* ty=Tensor[(12, 16, 8), bool] */;
  %25 = shape_of(%var_1075, dtype="int32") /* ty=Tensor[(3), int32] */;
  %26 = cast(%var_1075, dtype="bool") /* ty=Tensor[(12, 16, 8), bool] */;
  %27 = dyn.reshape(%24, %25, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %28 = cast(meta[relay.Constant][1] /* ty=Tensor[(20), uint64] */, dtype="uint64") /* ty=Tensor[(20), uint64] */;
  %29 = cast(meta[relay.Constant][1] /* ty=Tensor[(20), uint64] */, dtype="uint64") /* ty=Tensor[(20), uint64] */;
  %30 = reshape(%28, newshape=[2, 2, 5]) /* ty=Tensor[(2, 2, 5), uint64] */;
  %31 = reshape(%29, newshape=[2, 2, 5]) /* ty=Tensor[(2, 2, 5), uint64] */;
  %32 = @func_571(%30, %31) /* ty=(Tensor[(2, 2, 5), uint64], Tensor[(14, 8, 13), int32], Tensor[(1456), int32]) */;
  %33 = equal(%26, %27) /* ty=Tensor[(12, 16, 8), bool] */;
  %34 = %32.0;
  (%33, %34, meta[relay.Constant][1] /* ty=Tensor[(20), uint64] */)
}

def @func_5296(%var_5277: Tensor[(1440), float64], %var_5289: Tensor[(200), int8]) -> (Tensor[(6, 6, 8), float32], Tensor[(15, 8, 12), int32], Tensor[(1440), float64], Tensor[(14, 8, 13), int32], Tensor[(1456), int32], Tensor[(5, 5, 8), int8], Tensor[(200), int8]) {
  %35 = cast(%var_5277, dtype="float64") /* ty=Tensor[(1440), float64] */;
  %36 = cast(%var_5277, dtype="float64") /* ty=Tensor[(1440), float64] */;
  %37 = reshape(%35, newshape=[15, 8, 12]) /* ty=Tensor[(15, 8, 12), float64] */;
  %38 = reshape(%36, newshape=[15, 8, 12]) /* ty=Tensor[(15, 8, 12), float64] */;
  %39 = @func_3956(%37, %38) /* ty=(Tensor[(15, 8, 12), uint16], Tensor[(15, 8, 12), int32]) */;
  %40 = cast(meta[relay.Constant][2] /* ty=Tensor[(1456), int32] */, dtype="int32") /* ty=Tensor[(1456), int32] */;
  %41 = cast(meta[relay.Constant][2] /* ty=Tensor[(1456), int32] */, dtype="int32") /* ty=Tensor[(1456), int32] */;
  %42 = reshape(%40, newshape=[14, 8, 13]) /* ty=Tensor[(14, 8, 13), int32] */;
  %43 = reshape(%41, newshape=[14, 8, 13]) /* ty=Tensor[(14, 8, 13), int32] */;
  %44 = @func_411(%42, %43) /* ty=(Tensor[(14, 8, 13), int32],) */;
  %45 = cast(%var_5289, dtype="int8") /* ty=Tensor[(200), int8] */;
  %46 = reshape(%45, newshape=[5, 5, 8]) /* ty=Tensor[(5, 5, 8), int8] */;
  %47 = @func_4007() /* ty=Tensor[(6, 6, 8), float32] */;
  %48 = %39.1;
  %49 = %44.0;
  %50 = @func_2985(%46) /* ty=Tensor[(5, 5, 8), int8] */;
  (%47, %48, %var_5277, %49, meta[relay.Constant][2] /* ty=Tensor[(1456), int32] */, %50, %var_5289)
}

def @func_6335() -> (Tensor[(6, 15, 9), int16],) {
  @func_6333() /* ty=(Tensor[(6, 15, 9), int16],) */
}

def @func_8474() -> (Tensor[(5, 4, 14), float64], Tensor[(5, 5, 8), int8], Tensor[(10, 20), int8], Tensor[(15, 8, 12), float64], Tensor[(15, 8, 12), float64], Tensor[(192), int16]) {
  %51 = @func_6022() /* ty=(Tensor[(5, 4, 14), bool],) */;
  %52 = %51.0;
  %53 = cast(%52, dtype="float64") /* ty=Tensor[(5, 4, 14), float64] */;
  %54 = cast(meta[relay.Constant][3] /* ty=Tensor[(10, 20), int8] */, dtype="int8") /* ty=Tensor[(10, 20), int8] */;
  %55 = reshape(%54, newshape=[5, 5, 8]) /* ty=Tensor[(5, 5, 8), int8] */;
  %56 = @func_5570() /* ty=(Tensor[(15, 8, 12), float64], Tensor[(15, 8, 12), float64]) */;
  %57 = @func_5570() /* ty=(Tensor[(15, 8, 12), float64], Tensor[(15, 8, 12), float64]) */;
  %58 = @func_5414() /* ty=(Tensor[(6, 6, 8), float32], Tensor[(12, 2, 8), int16], Tensor[(192), int16], Tensor[(6, 6, 8), bool], Tensor[(112, 2), float32]) */;
  %59 = sigmoid(%53) /* ty=Tensor[(5, 4, 14), float64] */;
  %60 = @func_2985(%55) /* ty=Tensor[(5, 5, 8), int8] */;
  %61 = %56.1;
  %62 = %57.1;
  %63 = %58.2;
  (%59, %60, meta[relay.Constant][3] /* ty=Tensor[(10, 20), int8] */, %61, %62, %63)
}

def @func_7770(%var_7769: Tensor[(182), int8]) -> (Tensor[(14, 8, 8), uint8], Tensor[(15, 8, 12), float64], Tensor[(20), uint64], Tensor[(450), float32], Tensor[(1536, 1), uint8], Tensor[(182), int8], Tensor[(30), float64]) {
  %83 = fn (%var_7760: Tensor[(182), int8]) -> (Tensor[(14, 8, 8), uint8], Tensor[(15, 8, 12), float64], Tensor[(20), uint64], Tensor[(450), float32], Tensor[(1536, 1), uint8], Tensor[(182), int8], Tensor[(30), float64]) {
    %64 = cast(meta[relay.Constant][5] /* ty=Tensor[(14, 8, 8), uint8] */, dtype="uint8") /* ty=Tensor[(14, 8, 8), uint8] */;
    %65 = shape_of(meta[relay.Constant][4] /* ty=Tensor[(14, 8, 8), uint8] */, dtype="int32") /* ty=Tensor[(3), int32] */;
    %66 = cast(meta[relay.Constant][4] /* ty=Tensor[(14, 8, 8), uint8] */, dtype="uint8") /* ty=Tensor[(14, 8, 8), uint8] */;
    %67 = dyn.reshape(%64, %65, newshape=[]) /* ty=Tensor[(?, ?, ?), uint8] */;
    %68 = @func_4891() /* ty=(Tensor[(15, 8, 12), float64],) */;
    %69 = cast(meta[relay.Constant][6] /* ty=Tensor[(450), float32] */, dtype="float32") /* ty=Tensor[(450), float32] */;
    %70 = cast(meta[relay.Constant][6] /* ty=Tensor[(450), float32] */, dtype="float32") /* ty=Tensor[(450), float32] */;
    %71 = cast(meta[relay.Constant][7] /* ty=Tensor[(1536, 1), uint8] */, dtype="uint8") /* ty=Tensor[(1536, 1), uint8] */;
    %72 = cast(%var_7760, dtype="int8") /* ty=Tensor[(182), int8] */;
    %73 = cast(meta[relay.Constant][8] /* ty=Tensor[(30), float64] */, dtype="float64") /* ty=Tensor[(30), float64] */;
    %74 = reshape(%69, newshape=[5, 10, 9]) /* ty=Tensor[(5, 10, 9), float32] */;
    %75 = reshape(%70, newshape=[5, 10, 9]) /* ty=Tensor[(5, 10, 9), float32] */;
    %76 = reshape(%71, newshape=[1536]) /* ty=Tensor[(1536), uint8] */;
    %77 = reshape(%72, newshape=[182]) /* ty=Tensor[(182), int8] */;
    %78 = reshape(%73, newshape=[30]) /* ty=Tensor[(30), float64] */;
    %79 = @func_1836(%74, %75, %76, %77, %78) /* ty=(Tensor[(12, 16, 8), bool], Tensor[(1536), uint8], Tensor[(20), uint64], Tensor[(182), int8], Tensor[(2, 2, 5), uint64], Tensor[(10, 13, 3), float64], Tensor[(30), float64], Tensor[(390), float64], Tensor[(5, 10, 9), bool], Tensor[(5, 10, 9), bool]) */;
    %80 = logical_xor(%66, %67) /* ty=Tensor[(14, 8, 8), uint8] */;
    %81 = %68.0;
    %82 = %79.2;
    (%80, %81, %82, meta[relay.Constant][6] /* ty=Tensor[(450), float32] */, meta[relay.Constant][7] /* ty=Tensor[(1536, 1), uint8] */, %var_7760, meta[relay.Constant][8] /* ty=Tensor[(30), float64] */)
  };
  %83(%var_7769) /* ty=(Tensor[(14, 8, 8), uint8], Tensor[(15, 8, 12), float64], Tensor[(20), uint64], Tensor[(450), float32], Tensor[(1536, 1), uint8], Tensor[(182), int8], Tensor[(30), float64]) */
}

def @func_8780() -> Tensor[(6, 6, 8), bool] {
  @func_6872() /* ty=Tensor[(6, 6, 8), bool] */
}

def @func_8875(%var_8874: Tensor[(3, 14, 5), int16]) -> (Tensor[(5, 4, 14), float64], Tensor[(15, 8, 12), float64], Tensor[(3, 14, 5), bool]) {
  %98 = fn (%var_8830: Tensor[(3, 14, 5), int16]) -> (Tensor[(5, 4, 14), float64], Tensor[(15, 8, 12), float64], Tensor[(3, 14, 5), bool]) {
    %84 = cast(%var_8830, dtype="bool") /* ty=Tensor[(3, 14, 5), bool] */;
    %85 = shape_of(meta[relay.Constant][9] /* ty=Tensor[(3, 14, 5), int16] */, dtype="int32") /* ty=Tensor[(3), int32] */;
    %86 = cast(meta[relay.Constant][9] /* ty=Tensor[(3, 14, 5), int16] */, dtype="bool") /* ty=Tensor[(3, 14, 5), bool] */;
    %87 = dyn.reshape(%84, %85, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    %88 = greater_equal(%86, %87) /* ty=Tensor[(3, 14, 5), bool] */;
    %89 = cast(%var_8830, dtype="float64") /* ty=Tensor[(3, 14, 5), float64] */;
    %90 = atanh(%89) /* ty=Tensor[(3, 14, 5), float64] */;
    %91 = cast(%90, dtype="bool") /* ty=Tensor[(3, 14, 5), bool] */;
    %92 = shape_of(%88, dtype="int32") /* ty=Tensor[(3), int32] */;
    %93 = cast(%88, dtype="bool") /* ty=Tensor[(3, 14, 5), bool] */;
    %94 = dyn.reshape(%91, %92, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    %95 = @func_8292() /* ty=Tensor[(5, 4, 14), float64] */;
    %96 = @func_8613() /* ty=Tensor[(15, 8, 12), float64] */;
    %97 = less_equal(%93, %94) /* ty=Tensor[(3, 14, 5), bool] */;
    (%95, %96, %97)
  };
  %98(%var_8874) /* ty=(Tensor[(5, 4, 14), float64], Tensor[(15, 8, 12), float64], Tensor[(3, 14, 5), bool]) */
}

def @func_6022() -> (Tensor[(5, 4, 14), bool],) {
  %99 = @func_5880() /* ty=Tensor[(5, 4, 14), bool] */;
  (%99,)
}

def @func_5342() -> Tensor[(15, 8, 12), float64] {
  @func_5340() /* ty=Tensor[(15, 8, 12), float64] */
}

def @func_1842(%var_1837: Tensor[(5, 10, 9), float32], %var_1838: Tensor[(5, 10, 9), float32], %var_1839: Tensor[(1536), uint8], %var_1840: Tensor[(182), int8], %var_1841: Tensor[(30), float64]) -> (Tensor[(12, 16, 8), bool], Tensor[(1536), uint8], Tensor[(20), uint64], Tensor[(182), int8], Tensor[(2, 2, 5), uint64], Tensor[(10, 13, 3), float64], Tensor[(30), float64], Tensor[(390), float64], Tensor[(5, 10, 9), bool], Tensor[(5, 10, 9), bool]) {
  %148 = fn (%var_1740: Tensor[(5, 10, 9), float32], %var_1751: Tensor[(5, 10, 9), float32], %var_1761: Tensor[(1536), uint8], %var_1764: Tensor[(182), int8], %var_1788: Tensor[(30), float64]) -> (Tensor[(12, 16, 8), bool], Tensor[(1536), uint8], Tensor[(20), uint64], Tensor[(182), int8], Tensor[(2, 2, 5), uint64], Tensor[(10, 13, 3), float64], Tensor[(30), float64], Tensor[(390), float64], Tensor[(5, 10, 9), bool], Tensor[(5, 10, 9), bool]) {
    %100 = cast(%var_1761, dtype="uint8") /* ty=Tensor[(1536), uint8] */;
    %101 = cast(%var_1761, dtype="uint8") /* ty=Tensor[(1536), uint8] */;
    %102 = reshape(%100, newshape=[12, 16, 8]) /* ty=Tensor[(12, 16, 8), uint8] */;
    %103 = reshape(%101, newshape=[12, 16, 8]) /* ty=Tensor[(12, 16, 8), uint8] */;
    %104 = @func_1087(%102, %103) /* ty=(Tensor[(12, 16, 8), bool], Tensor[(2, 2, 5), uint64], Tensor[(20), uint64]) */;
    %105 = cast(%var_1764, dtype="int8") /* ty=Tensor[(182), int8] */;
    %106 = reshape(%105, newshape=[2, 13, 7]) /* ty=Tensor[(2, 13, 7), int8] */;
    %107 = @func_1527(%106) /* ty=(Tensor[(2, 13, 7), bool], Tensor[(2, 13, 7), int16], Tensor[(2, 2, 5), uint64], Tensor[(20), uint64], Tensor[(14, 8, 13), int32]) */;
    %108 = %104.0;
    %109 = cast(%108, dtype="uint8") /* ty=Tensor[(12, 16, 8), uint8] */;
    %110 = cast(%var_1761, dtype="uint8") /* ty=Tensor[(1536), uint8] */;
    %111 = reshape(%109, newshape=[12, 16, 8]) /* ty=Tensor[(12, 16, 8), uint8] */;
    %112 = reshape(%110, newshape=[12, 16, 8]) /* ty=Tensor[(12, 16, 8), uint8] */;
    %113 = @func_1087(%111, %112) /* ty=(Tensor[(12, 16, 8), bool], Tensor[(2, 2, 5), uint64], Tensor[(20), uint64]) */;
    %114 = cast(%var_1788, dtype="float64") /* ty=Tensor[(30), float64] */;
    %115 = cast(meta[relay.Constant][10] /* ty=Tensor[(390), float64] */, dtype="float64") /* ty=Tensor[(390), float64] */;
    %116 = reshape(%114, newshape=[10, 1, 3]) /* ty=Tensor[(10, 1, 3), float64] */;
    %117 = reshape(%115, newshape=[10, 13, 3]) /* ty=Tensor[(10, 13, 3), float64] */;
    %118 = @func_397(%116, %117) /* ty=(Tensor[(10, 13, 3), float64],) */;
    %119 = cast(%var_1740, dtype="float32") /* ty=Tensor[(5, 10, 9), float32] */;
    %120 = rsqrt(%119) /* ty=Tensor[(5, 10, 9), float32] */;
    %121 = cast(%var_1751, dtype="float64") /* ty=Tensor[(5, 10, 9), float64] */;
    %122 = shape_of(%120, dtype="int32") /* ty=Tensor[(3), int32] */;
    %123 = cast(%120, dtype="float64") /* ty=Tensor[(5, 10, 9), float64] */;
    %124 = dyn.reshape(%121, %122, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
    %125 = maximum(%123, %124) /* ty=Tensor[(5, 10, 9), float64] */;
    %126 = cast(%125, dtype="uint8") /* ty=Tensor[(5, 10, 9), uint8] */;
    %127 = shape_of(%120, dtype="int32") /* ty=Tensor[(3), int32] */;
    %128 = cast(%120, dtype="uint8") /* ty=Tensor[(5, 10, 9), uint8] */;
    %129 = dyn.reshape(%126, %127, newshape=[]) /* ty=Tensor[(?, ?, ?), uint8] */;
    %130 = bitwise_or(%128, %129) /* ty=Tensor[(5, 10, 9), uint8] */;
    %131 = cast(meta[relay.Constant][11] /* ty=Tensor[(5, 10, 9), uint8] */, dtype="bool") /* ty=Tensor[(5, 10, 9), bool] */;
    %132 = shape_of(%130, dtype="int32") /* ty=Tensor[(3), int32] */;
    %133 = cast(%130, dtype="bool") /* ty=Tensor[(5, 10, 9), bool] */;
    %134 = dyn.reshape(%131, %132, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    %135 = cast(%125, dtype="float32") /* ty=Tensor[(5, 10, 9), float32] */;
    %136 = atanh(%135) /* ty=Tensor[(5, 10, 9), float32] */;
    %137 = cast(%136, dtype="float64") /* ty=Tensor[(5, 10, 9), float64] */;
    %138 = cosh(%137) /* ty=Tensor[(5, 10, 9), float64] */;
    %139 = cast(%130, dtype="bool") /* ty=Tensor[(5, 10, 9), bool] */;
    %140 = shape_of(%138, dtype="int32") /* ty=Tensor[(3), int32] */;
    %141 = cast(%138, dtype="bool") /* ty=Tensor[(5, 10, 9), bool] */;
    %142 = dyn.reshape(%139, %140, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    %143 = %107.3;
    %144 = %113.1;
    %145 = %118.0;
    %146 = less_equal(%133, %134) /* ty=Tensor[(5, 10, 9), bool] */;
    %147 = logical_or(%141, %142) /* ty=Tensor[(5, 10, 9), bool] */;
    (%108, %var_1761, %143, %var_1764, %144, %145, %var_1788, meta[relay.Constant][10] /* ty=Tensor[(390), float64] */, %146, %147)
  };
  %148(%var_1837, %var_1838, %var_1839, %var_1840, %var_1841) /* ty=(Tensor[(12, 16, 8), bool], Tensor[(1536), uint8], Tensor[(20), uint64], Tensor[(182), int8], Tensor[(2, 2, 5), uint64], Tensor[(10, 13, 3), float64], Tensor[(30), float64], Tensor[(390), float64], Tensor[(5, 10, 9), bool], Tensor[(5, 10, 9), bool]) */
}

def @func_5482() -> (Tensor[(15, 8, 12), float64], Tensor[(15, 8, 12), float64]) {
  %153 = fn () -> (Tensor[(15, 8, 12), float64], Tensor[(15, 8, 12), float64]) {
    %149 = @func_4891() /* ty=(Tensor[(15, 8, 12), float64],) */;
    %150 = @func_4891() /* ty=(Tensor[(15, 8, 12), float64],) */;
    %151 = %149.0;
    %152 = %150.0;
    (%151, %152)
  };
  %153() /* ty=(Tensor[(15, 8, 12), float64], Tensor[(15, 8, 12), float64]) */
}

def @func_7049() -> (Tensor[(420), float32],) {
  @func_7047() /* ty=(Tensor[(420), float32],) */
}

def @func_1529(%var_1528: Tensor[(2, 13, 7), int8]) -> (Tensor[(2, 13, 7), bool], Tensor[(2, 13, 7), int16], Tensor[(2, 2, 5), uint64], Tensor[(20), uint64], Tensor[(14, 8, 13), int32]) {
  %176 = fn (%var_1487: Tensor[(2, 13, 7), int8]) -> (Tensor[(2, 13, 7), bool], Tensor[(2, 13, 7), int16], Tensor[(2, 2, 5), uint64], Tensor[(20), uint64], Tensor[(14, 8, 13), int32]) {
    %154 = cast(meta[relay.Constant][12] /* ty=Tensor[(2, 13, 7), int8] */, dtype="bool") /* ty=Tensor[(2, 13, 7), bool] */;
    %155 = shape_of(%var_1487, dtype="int32") /* ty=Tensor[(3), int32] */;
    %156 = cast(%var_1487, dtype="bool") /* ty=Tensor[(2, 13, 7), bool] */;
    %157 = dyn.reshape(%154, %155, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    %158 = cast(meta[relay.Constant][12] /* ty=Tensor[(2, 13, 7), int8] */, dtype="int16") /* ty=Tensor[(2, 13, 7), int16] */;
    %159 = shape_of(%var_1487, dtype="int32") /* ty=Tensor[(3), int32] */;
    %160 = cast(%var_1487, dtype="int16") /* ty=Tensor[(2, 13, 7), int16] */;
    %161 = dyn.reshape(%158, %159, newshape=[]) /* ty=Tensor[(?, ?, ?), int16] */;
    %162 = cast(meta[relay.Constant][13] /* ty=Tensor[(20), uint64] */, dtype="uint64") /* ty=Tensor[(20), uint64] */;
    %163 = cast(meta[relay.Constant][13] /* ty=Tensor[(20), uint64] */, dtype="uint64") /* ty=Tensor[(20), uint64] */;
    %164 = reshape(%162, newshape=[2, 2, 5]) /* ty=Tensor[(2, 2, 5), uint64] */;
    %165 = reshape(%163, newshape=[2, 2, 5]) /* ty=Tensor[(2, 2, 5), uint64] */;
    %166 = @func_571(%164, %165) /* ty=(Tensor[(2, 2, 5), uint64], Tensor[(14, 8, 13), int32], Tensor[(1456), int32]) */;
    %167 = %166.0;
    %168 = cast(%167, dtype="uint64") /* ty=Tensor[(2, 2, 5), uint64] */;
    %169 = cast(meta[relay.Constant][13] /* ty=Tensor[(20), uint64] */, dtype="uint64") /* ty=Tensor[(20), uint64] */;
    %170 = reshape(%168, newshape=[2, 2, 5]) /* ty=Tensor[(2, 2, 5), uint64] */;
    %171 = reshape(%169, newshape=[2, 2, 5]) /* ty=Tensor[(2, 2, 5), uint64] */;
    %172 = @func_571(%170, %171) /* ty=(Tensor[(2, 2, 5), uint64], Tensor[(14, 8, 13), int32], Tensor[(1456), int32]) */;
    %173 = greater(%156, %157) /* ty=Tensor[(2, 13, 7), bool] */;
    %174 = bitwise_and(%160, %161) /* ty=Tensor[(2, 13, 7), int16] */;
    %175 = %172.1;
    (%173, %174, %167, meta[relay.Constant][13] /* ty=Tensor[(20), uint64] */, %175)
  };
  %176(%var_1528) /* ty=(Tensor[(2, 13, 7), bool], Tensor[(2, 13, 7), int16], Tensor[(2, 2, 5), uint64], Tensor[(20), uint64], Tensor[(14, 8, 13), int32]) */
}

def @func_9198(%var_9195: Tensor[(5, 4, 14), bool], %var_9196: Tensor[(5, 4, 14), bool], %var_9197: Tensor[(20), uint64]) -> (Tensor[(200), int8], Tensor[(6, 15, 9), int16], Tensor[(15, 8, 12), float64], Tensor[(20), uint64], Tensor[(5, 4, 14), float32]) {
  %201 = fn (%var_9158: Tensor[(5, 4, 14), bool], %var_9169: Tensor[(5, 4, 14), bool], %var_9180: Tensor[(20), uint64]) -> (Tensor[(200), int8], Tensor[(6, 15, 9), int16], Tensor[(15, 8, 12), float64], Tensor[(20), uint64], Tensor[(5, 4, 14), float32]) {
    %177 = @func_8102() /* ty=(Tensor[(15, 8, 12), float64], Tensor[(2156), float32], Tensor[(200), int8], Tensor[(2156), float32], Tensor[(1536), uint8], Tensor[(6, 6, 8), int64], Tensor[(96, 2), float32]) */;
    %178 = @func_7979() /* ty=(Tensor[(6, 15, 9), int16], Tensor[(5, 4, 14), bool]) */;
    %179 = cast(%var_9180, dtype="uint64") /* ty=Tensor[(20), uint64] */;
    %180 = reshape(%179, newshape=[1, 20]) /* ty=Tensor[(1, 20), uint64] */;
    %181 = @func_5545(%180) /* ty=(Tensor[(15, 8, 12), float64], Tensor[(15, 8, 12), float64], Tensor[(?, 20), bool]) */;
    %182 = @func_7992() /* ty=Tensor[(5, 4, 14), bool] */;
    %183 = cast(%var_9158, dtype="int8") /* ty=Tensor[(5, 4, 14), int8] */;
    %184 = shape_of(%182, dtype="int32") /* ty=Tensor[(3), int32] */;
    %185 = cast(%182, dtype="int8") /* ty=Tensor[(5, 4, 14), int8] */;
    %186 = dyn.reshape(%183, %184, newshape=[]) /* ty=Tensor[(?, ?, ?), int8] */;
    %187 = left_shift(%185, %186) /* ty=Tensor[(5, 4, 14), int8] */;
    %188 = cast(%var_9169, dtype="bool") /* ty=Tensor[(5, 4, 14), bool] */;
    %189 = shape_of(%182, dtype="int32") /* ty=Tensor[(3), int32] */;
    %190 = cast(%182, dtype="bool") /* ty=Tensor[(5, 4, 14), bool] */;
    %191 = dyn.reshape(%188, %189, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    %192 = greater_equal(%190, %191) /* ty=Tensor[(5, 4, 14), bool] */;
    %193 = cast(%192, dtype="float32") /* ty=Tensor[(5, 4, 14), float32] */;
    %194 = shape_of(%187, dtype="int32") /* ty=Tensor[(3), int32] */;
    %195 = cast(%187, dtype="float32") /* ty=Tensor[(5, 4, 14), float32] */;
    %196 = dyn.reshape(%193, %194, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
    %197 = %177.2;
    %198 = %178.0;
    %199 = %181.0;
    %200 = minimum(%195, %196) /* ty=Tensor[(5, 4, 14), float32] */;
    (%197, %198, %199, %var_9180, %200)
  };
  %201(%var_9195, %var_9196, %var_9197) /* ty=(Tensor[(200), int8], Tensor[(6, 15, 9), int16], Tensor[(15, 8, 12), float64], Tensor[(20), uint64], Tensor[(5, 4, 14), float32]) */
}

def @func_5977() -> Tensor[(15, 8, 12), float64] {
  %202 = @func_5495() /* ty=(Tensor[(15, 8, 12), float64],) */;
  %202.0
}

def @func_6670() -> Tensor[(6, 6, 8), float32] {
  %203 = @func_4125() /* ty=(Tensor[(6, 6, 8), bool], Tensor[(6, 6, 8), float32], Tensor[(6, 6, 8), float32]) */;
  %203.1
}

def @func_4423(%var_4421: Tensor[(16, 14, 1), float32]) -> (Tensor[(16, 14, 1), float32],) {
  @func_4420(%var_4421) /* ty=(Tensor[(16, 14, 1), float32],) */
}

def @func_2988(%var_2986: Tensor[(5, 5, 8), int8]) -> Tensor[(5, 5, 8), int8] {
  @func_2985(%var_2986) /* ty=Tensor[(5, 5, 8), int8] */
}

def @func_9312() -> (Tensor[(15, 8, 12), float64],) {
  %206 = fn () -> (Tensor[(15, 8, 12), float64],) {
    %204 = @func_8416() /* ty=(Tensor[(15, 8, 12), float64],) */;
    %205 = %204.0;
    (%205,)
  };
  %206() /* ty=(Tensor[(15, 8, 12), float64],) */
}

def @func_4420(%var_4410: Tensor[(16, 14, 1), float32]) -> (Tensor[(16, 14, 1), float32],) {
  %207 = cast(%var_4410, dtype="float32") /* ty=Tensor[(16, 14, 1), float32] */;
  %208 = cos(%207) /* ty=Tensor[(16, 14, 1), float32] */;
  (%208,)
}

def @func_4976(%var_4974: Tensor[(420), uint8], %var_4975: Tensor[(810), float32]) -> (Tensor[(15, 8, 12), float64], Tensor[(420), uint8], Tensor[(420), uint8], Tensor[(1536), uint8], Tensor[(6, 15, 9), float64], Tensor[(810), float32]) {
  %221 = fn (%var_4949: Tensor[(420), uint8], %var_4967: Tensor[(810), float32]) -> (Tensor[(15, 8, 12), float64], Tensor[(420), uint8], Tensor[(420), uint8], Tensor[(1536), uint8], Tensor[(6, 15, 9), float64], Tensor[(810), float32]) {
    %209 = @func_4809() /* ty=(Tensor[(15, 8, 12), float64], Tensor[(15, 8, 12), float64]) */;
    %210 = cast(%var_4949, dtype="uint8") /* ty=Tensor[(420), uint8] */;
    %211 = cast(meta[relay.Constant][14] /* ty=Tensor[(1536), uint8] */, dtype="uint8") /* ty=Tensor[(1536), uint8] */;
    %212 = reshape(%210, newshape=[420]) /* ty=Tensor[(420), uint8] */;
    %213 = reshape(%211, newshape=[1536]) /* ty=Tensor[(1536), uint8] */;
    %214 = @func_4657(%212, %213) /* ty=(Tensor[(6, 6, 8), float32], Tensor[(420), uint8], Tensor[(420), uint8], Tensor[(1536), uint8]) */;
    %215 = cast(%var_4967, dtype="float32") /* ty=Tensor[(810), float32] */;
    %216 = reshape(%215, newshape=[6, 15, 9]) /* ty=Tensor[(6, 15, 9), float32] */;
    %217 = @func_2745(%216) /* ty=(Tensor[(6, 15, 9), float32], Tensor[(6, 15, 9), float64], Tensor[(6, 15, 9), float32]) */;
    %218 = %209.0;
    %219 = %214.1;
    %220 = %217.1;
    (%218, %219, %var_4949, meta[relay.Constant][14] /* ty=Tensor[(1536), uint8] */, %220, %var_4967)
  };
  %221(%var_4974, %var_4975) /* ty=(Tensor[(15, 8, 12), float64], Tensor[(420), uint8], Tensor[(420), uint8], Tensor[(1536), uint8], Tensor[(6, 15, 9), float64], Tensor[(810), float32]) */
}

def @func_571(%var_560: Tensor[(2, 2, 5), uint64], %var_561: Tensor[(2, 2, 5), uint64]) -> (Tensor[(2, 2, 5), uint64], Tensor[(14, 8, 13), int32], Tensor[(1456), int32]) {
  %222 = cast(%var_561, dtype="uint64") /* ty=Tensor[(2, 2, 5), uint64] */;
  %223 = shape_of(%var_560, dtype="int32") /* ty=Tensor[(3), int32] */;
  %224 = cast(%var_560, dtype="uint64") /* ty=Tensor[(2, 2, 5), uint64] */;
  %225 = dyn.reshape(%222, %223, newshape=[]) /* ty=Tensor[(?, ?, ?), uint64] */;
  %226 = cast(meta[relay.Constant][15] /* ty=Tensor[(1456), int32] */, dtype="int32") /* ty=Tensor[(1456), int32] */;
  %227 = cast(meta[relay.Constant][15] /* ty=Tensor[(1456), int32] */, dtype="int32") /* ty=Tensor[(1456), int32] */;
  %228 = reshape(%226, newshape=[14, 8, 13]) /* ty=Tensor[(14, 8, 13), int32] */;
  %229 = reshape(%227, newshape=[14, 8, 13]) /* ty=Tensor[(14, 8, 13), int32] */;
  %230 = @func_411(%228, %229) /* ty=(Tensor[(14, 8, 13), int32],) */;
  %231 = left_shift(%224, %225) /* ty=Tensor[(2, 2, 5), uint64] */;
  %232 = %230.0;
  (%231, %232, meta[relay.Constant][15] /* ty=Tensor[(1456), int32] */)
}

def @func_4893() -> (Tensor[(15, 8, 12), float64],) {
  @func_4891() /* ty=(Tensor[(15, 8, 12), float64],) */
}

def @func_4754(%var_4751: Tensor[(200), int8], %var_4752: Tensor[(2156), float32], %var_4753: Tensor[(1536), uint8]) -> (Tensor[(15, 8, 12), float64], Tensor[(14, 8, 13), int32], Tensor[(200), int8], Tensor[(2156), float32], Tensor[(1536), uint8], Tensor[(1456), int32]) {
  @func_4749(%var_4751, %var_4752, %var_4753) /* ty=(Tensor[(15, 8, 12), float64], Tensor[(14, 8, 13), int32], Tensor[(200), int8], Tensor[(2156), float32], Tensor[(1536), uint8], Tensor[(1456), int32]) */
}

def @func_6024() -> (Tensor[(5, 4, 14), bool],) {
  @func_6022() /* ty=(Tensor[(5, 4, 14), bool],) */
}

def @func_4578(%var_4573: Tensor[(7, 4, 12), float64], %var_4574: Tensor[(7, 4, 12), float64], %var_4575: Tensor[(192), int16], %var_4576: Tensor[(1, 1536), uint8], %var_4577: Tensor[(182), int8]) -> (Tensor[(7, 4, 12), float32], Tensor[(12, 2, 8), int16], Tensor[(192), int16], Tensor[(1, 810), float32], Tensor[(7, 4, 12), uint8], Tensor[(2, 2, 5), uint64], Tensor[(390), float64], Tensor[(1, 1536), uint8], Tensor[(240), float64], Tensor[(182), int8]) {
  @func_4571(%var_4573, %var_4574, %var_4575, %var_4576, %var_4577) /* ty=(Tensor[(7, 4, 12), float32], Tensor[(12, 2, 8), int16], Tensor[(192), int16], Tensor[(1, 810), float32], Tensor[(7, 4, 12), uint8], Tensor[(2, 2, 5), uint64], Tensor[(390), float64], Tensor[(1, 1536), uint8], Tensor[(240), float64], Tensor[(182), int8]) */
}

def @func_7212() -> (Tensor[(6, 15, 9), int16], Tensor[(6, 15, 9), int16]) {
  %233 = @func_6333() /* ty=(Tensor[(6, 15, 9), int16],) */;
  %234 = @func_4315() /* ty=Tensor[(6, 15, 9), int16] */;
  %235 = %233.0;
  (%234, %235)
}

def @func_2745(%var_2735: Tensor[(6, 15, 9), float32]) -> (Tensor[(6, 15, 9), float32], Tensor[(6, 15, 9), float64], Tensor[(6, 15, 9), float32]) {
  %236 = cast(meta[relay.Constant][16] /* ty=Tensor[(6, 15, 9), float32] */, dtype="float32") /* ty=Tensor[(6, 15, 9), float32] */;
  %237 = cast(meta[relay.Constant][16] /* ty=Tensor[(6, 15, 9), float32] */, dtype="float64") /* ty=Tensor[(6, 15, 9), float64] */;
  %238 = cast(%var_2735, dtype="float32") /* ty=Tensor[(6, 15, 9), float32] */;
  %239 = shape_of(meta[relay.Constant][16] /* ty=Tensor[(6, 15, 9), float32] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %240 = cast(meta[relay.Constant][16] /* ty=Tensor[(6, 15, 9), float32] */, dtype="float32") /* ty=Tensor[(6, 15, 9), float32] */;
  %241 = dyn.reshape(%238, %239, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %242 = exp(%236) /* ty=Tensor[(6, 15, 9), float32] */;
  %243 = sinh(%237) /* ty=Tensor[(6, 15, 9), float64] */;
  %244 = mod(%240, %241) /* ty=Tensor[(6, 15, 9), float32] */;
  (%242, %243, %244)
}

def @func_6808(%var_6803: Tensor[(3, 2, 1), float32]) -> (Tensor[(3, 2, 1), float32],) {
  %245 = cast(%var_6803, dtype="float32") /* ty=Tensor[(3, 2, 1), float32] */;
  %246 = erf(%245) /* ty=Tensor[(3, 2, 1), float32] */;
  (%246,)
}

def @func_5907() -> Tensor[(15, 8, 12), float64] {
  %247 = @func_5481() /* ty=(Tensor[(15, 8, 12), float64], Tensor[(15, 8, 12), float64]) */;
  %247.0
}

def @func_5909() -> Tensor[(15, 8, 12), float64] {
  @func_5907() /* ty=Tensor[(15, 8, 12), float64] */
}

def @func_2748(%var_2746: Tensor[(6, 15, 9), float32]) -> (Tensor[(6, 15, 9), float32], Tensor[(6, 15, 9), float64], Tensor[(6, 15, 9), float32]) {
  @func_2745(%var_2746) /* ty=(Tensor[(6, 15, 9), float32], Tensor[(6, 15, 9), float64], Tensor[(6, 15, 9), float32]) */
}

def @func_8910() -> (Tensor[(9, 2, 9), float64],) {
  %250 = fn () -> (Tensor[(9, 2, 9), float64],) {
    %248 = cast(meta[relay.Constant][17] /* ty=Tensor[(9, 2, 9), float64] */, dtype="float64") /* ty=Tensor[(9, 2, 9), float64] */;
    %249 = sigmoid(%248) /* ty=Tensor[(9, 2, 9), float64] */;
    (%249,)
  };
  %250() /* ty=(Tensor[(9, 2, 9), float64],) */
}

def @func_8653(%var_8650: Tensor[(8, 1, 1), uint8], %var_8651: Tensor[(8, 10, 16), uint8], %var_8652: Tensor[(8, 10, 16), uint8]) -> (Tensor[(14, 8, 13), int32], Tensor[(20), uint64], Tensor[(8, 10, 16), uint8], Tensor[(15, 8, 12), int32], Tensor[(1440), float64]) {
  %271 = fn (%var_8615: Tensor[(8, 1, 1), uint8], %var_8616: Tensor[(8, 10, 16), uint8], %var_8632: Tensor[(8, 10, 16), uint8]) -> (Tensor[(14, 8, 13), int32], Tensor[(20), uint64], Tensor[(8, 10, 16), uint8], Tensor[(15, 8, 12), int32], Tensor[(1440), float64]) {
    %251 = cast(meta[relay.Constant][18] /* ty=Tensor[(20), uint64] */, dtype="uint64") /* ty=Tensor[(20), uint64] */;
    %252 = cast(meta[relay.Constant][18] /* ty=Tensor[(20), uint64] */, dtype="uint64") /* ty=Tensor[(20), uint64] */;
    %253 = reshape(%251, newshape=[2, 2, 5]) /* ty=Tensor[(2, 2, 5), uint64] */;
    %254 = reshape(%252, newshape=[2, 2, 5]) /* ty=Tensor[(2, 2, 5), uint64] */;
    %255 = @func_571(%253, %254) /* ty=(Tensor[(2, 2, 5), uint64], Tensor[(14, 8, 13), int32], Tensor[(1456), int32]) */;
    %256 = cast(%var_8615, dtype="uint8") /* ty=Tensor[(8, 1, 1), uint8] */;
    %257 = cast(%var_8616, dtype="uint8") /* ty=Tensor[(8, 10, 16), uint8] */;
    %258 = bitwise_and(%256, %257) /* ty=Tensor[(8, 10, 16), uint8] */;
    %259 = cast(%var_8632, dtype="uint8") /* ty=Tensor[(8, 10, 16), uint8] */;
    %260 = shape_of(%258, dtype="int32") /* ty=Tensor[(3), int32] */;
    %261 = cast(%258, dtype="uint8") /* ty=Tensor[(8, 10, 16), uint8] */;
    %262 = dyn.reshape(%259, %260, newshape=[]) /* ty=Tensor[(?, ?, ?), uint8] */;
    %263 = cast(meta[relay.Constant][19] /* ty=Tensor[(1440), float64] */, dtype="float64") /* ty=Tensor[(1440), float64] */;
    %264 = cast(meta[relay.Constant][19] /* ty=Tensor[(1440), float64] */, dtype="float64") /* ty=Tensor[(1440), float64] */;
    %265 = reshape(%263, newshape=[15, 8, 12]) /* ty=Tensor[(15, 8, 12), float64] */;
    %266 = reshape(%264, newshape=[15, 8, 12]) /* ty=Tensor[(15, 8, 12), float64] */;
    %267 = @func_3956(%265, %266) /* ty=(Tensor[(15, 8, 12), uint16], Tensor[(15, 8, 12), int32]) */;
    %268 = %255.1;
    %269 = bitwise_or(%261, %262) /* ty=Tensor[(8, 10, 16), uint8] */;
    %270 = %267.1;
    (%268, meta[relay.Constant][18] /* ty=Tensor[(20), uint64] */, %269, %270, meta[relay.Constant][19] /* ty=Tensor[(1440), float64] */)
  };
  %271(%var_8650, %var_8651, %var_8652) /* ty=(Tensor[(14, 8, 13), int32], Tensor[(20), uint64], Tensor[(8, 10, 16), uint8], Tensor[(15, 8, 12), int32], Tensor[(1440), float64]) */
}

def @func_5661(%var_5659: Tensor[(450), float32], %var_5660: Tensor[(13, 14), int8]) -> (Tensor[(15, 8, 12), float64], Tensor[(30), float64], Tensor[(450), float32], Tensor[(1536), uint8], Tensor[(13, 14), int8], Tensor[(30), float64], Tensor[(6, 6, 8), bool]) {
  %288 = fn (%var_5621: Tensor[(450), float32], %var_5623: Tensor[(13, 14), int8]) -> (Tensor[(15, 8, 12), float64], Tensor[(30), float64], Tensor[(450), float32], Tensor[(1536), uint8], Tensor[(13, 14), int8], Tensor[(30), float64], Tensor[(6, 6, 8), bool]) {
    %272 = @func_4194() /* ty=(Tensor[(15, 8, 12), float64], Tensor[(6, 15, 9), float64], Tensor[(1, 810), float32]) */;
    %273 = cast(%var_5621, dtype="float32") /* ty=Tensor[(450), float32] */;
    %274 = cast(%var_5621, dtype="float32") /* ty=Tensor[(450), float32] */;
    %275 = cast(meta[relay.Constant][20] /* ty=Tensor[(1536), uint8] */, dtype="uint8") /* ty=Tensor[(1536), uint8] */;
    %276 = cast(%var_5623, dtype="int8") /* ty=Tensor[(13, 14), int8] */;
    %277 = cast(meta[relay.Constant][21] /* ty=Tensor[(30), float64] */, dtype="float64") /* ty=Tensor[(30), float64] */;
    %278 = reshape(%273, newshape=[5, 10, 9]) /* ty=Tensor[(5, 10, 9), float32] */;
    %279 = reshape(%274, newshape=[5, 10, 9]) /* ty=Tensor[(5, 10, 9), float32] */;
    %280 = reshape(%275, newshape=[1536]) /* ty=Tensor[(1536), uint8] */;
    %281 = reshape(%276, newshape=[182]) /* ty=Tensor[(182), int8] */;
    %282 = reshape(%277, newshape=[30]) /* ty=Tensor[(30), float64] */;
    %283 = @func_1836(%278, %279, %280, %281, %282) /* ty=(Tensor[(12, 16, 8), bool], Tensor[(1536), uint8], Tensor[(20), uint64], Tensor[(182), int8], Tensor[(2, 2, 5), uint64], Tensor[(10, 13, 3), float64], Tensor[(30), float64], Tensor[(390), float64], Tensor[(5, 10, 9), bool], Tensor[(5, 10, 9), bool]) */;
    %284 = @func_4125() /* ty=(Tensor[(6, 6, 8), bool], Tensor[(6, 6, 8), float32], Tensor[(6, 6, 8), float32]) */;
    %285 = %272.0;
    %286 = %283.6;
    %287 = %284.0;
    (%285, %286, %var_5621, meta[relay.Constant][20] /* ty=Tensor[(1536), uint8] */, %var_5623, meta[relay.Constant][21] /* ty=Tensor[(30), float64] */, %287)
  };
  %288(%var_5659, %var_5660) /* ty=(Tensor[(15, 8, 12), float64], Tensor[(30), float64], Tensor[(450), float32], Tensor[(1536), uint8], Tensor[(13, 14), int8], Tensor[(30), float64], Tensor[(6, 6, 8), bool]) */
}

def @func_2390(%var_2386: Tensor[(3, 13, 15), bool], %var_2387: Tensor[(450), float32], %var_2388: Tensor[(2, 768), uint8], %var_2389: Tensor[(182), int8]) -> (Tensor[(390), float64], Tensor[(450), float32], Tensor[(2, 768), uint8], Tensor[(182), int8], Tensor[(30), float64], Tensor[(3, 13, 15), int16], Tensor[(3, 13, 15), uint32]) {
  %321 = fn (%var_2344: Tensor[(3, 13, 15), bool], %var_2359: Tensor[(450), float32], %var_2360: Tensor[(2, 768), uint8], %var_2361: Tensor[(182), int8]) -> (Tensor[(390), float64], Tensor[(450), float32], Tensor[(2, 768), uint8], Tensor[(182), int8], Tensor[(30), float64], Tensor[(3, 13, 15), int16], Tensor[(3, 13, 15), uint32]) {
    %289 = cast(%var_2359, dtype="float32") /* ty=Tensor[(450), float32] */;
    %290 = cast(%var_2359, dtype="float32") /* ty=Tensor[(450), float32] */;
    %291 = cast(%var_2360, dtype="uint8") /* ty=Tensor[(2, 768), uint8] */;
    %292 = cast(%var_2361, dtype="int8") /* ty=Tensor[(182), int8] */;
    %293 = cast(meta[relay.Constant][22] /* ty=Tensor[(30), float64] */, dtype="float64") /* ty=Tensor[(30), float64] */;
    %294 = reshape(%289, newshape=[5, 10, 9]) /* ty=Tensor[(5, 10, 9), float32] */;
    %295 = reshape(%290, newshape=[5, 10, 9]) /* ty=Tensor[(5, 10, 9), float32] */;
    %296 = reshape(%291, newshape=[1536]) /* ty=Tensor[(1536), uint8] */;
    %297 = reshape(%292, newshape=[182]) /* ty=Tensor[(182), int8] */;
    %298 = reshape(%293, newshape=[30]) /* ty=Tensor[(30), float64] */;
    %299 = @func_1836(%294, %295, %296, %297, %298) /* ty=(Tensor[(12, 16, 8), bool], Tensor[(1536), uint8], Tensor[(20), uint64], Tensor[(182), int8], Tensor[(2, 2, 5), uint64], Tensor[(10, 13, 3), float64], Tensor[(30), float64], Tensor[(390), float64], Tensor[(5, 10, 9), bool], Tensor[(5, 10, 9), bool]) */;
    %300 = cast(meta[relay.Constant][23] /* ty=Tensor[(3, 13, 15), bool] */, dtype="bool") /* ty=Tensor[(3, 13, 15), bool] */;
    %301 = shape_of(%var_2344, dtype="int32") /* ty=Tensor[(3), int32] */;
    %302 = cast(%var_2344, dtype="bool") /* ty=Tensor[(3, 13, 15), bool] */;
    %303 = dyn.reshape(%300, %301, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    %304 = logical_and(%302, %303) /* ty=Tensor[(3, 13, 15), bool] */;
    %305 = cast(%var_2344, dtype="float64") /* ty=Tensor[(3, 13, 15), float64] */;
    %306 = shape_of(%304, dtype="int32") /* ty=Tensor[(3), int32] */;
    %307 = cast(%304, dtype="float64") /* ty=Tensor[(3, 13, 15), float64] */;
    %308 = dyn.reshape(%305, %306, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
    %309 = mod(%307, %308) /* ty=Tensor[(3, 13, 15), float64] */;
    %310 = cast(%309, dtype="int16") /* ty=Tensor[(3, 13, 15), int16] */;
    %311 = shape_of(%304, dtype="int32") /* ty=Tensor[(3), int32] */;
    %312 = cast(%304, dtype="int16") /* ty=Tensor[(3, 13, 15), int16] */;
    %313 = dyn.reshape(%310, %311, newshape=[]) /* ty=Tensor[(?, ?, ?), int16] */;
    %314 = cast(%var_2344, dtype="uint32") /* ty=Tensor[(3, 13, 15), uint32] */;
    %315 = shape_of(%309, dtype="int32") /* ty=Tensor[(3), int32] */;
    %316 = cast(%309, dtype="uint32") /* ty=Tensor[(3, 13, 15), uint32] */;
    %317 = dyn.reshape(%314, %315, newshape=[]) /* ty=Tensor[(?, ?, ?), uint32] */;
    %318 = %299.7;
    %319 = bitwise_xor(%312, %313) /* ty=Tensor[(3, 13, 15), int16] */;
    %320 = minimum(%316, %317) /* ty=Tensor[(3, 13, 15), uint32] */;
    (%318, %var_2359, %var_2360, %var_2361, meta[relay.Constant][22] /* ty=Tensor[(30), float64] */, %319, %320)
  };
  %321(%var_2386, %var_2387, %var_2388, %var_2389) /* ty=(Tensor[(390), float64], Tensor[(450), float32], Tensor[(2, 768), uint8], Tensor[(182), int8], Tensor[(30), float64], Tensor[(3, 13, 15), int16], Tensor[(3, 13, 15), uint32]) */
}

def @func_7175(%var_7173: Tensor[(182), int8], %var_7174: Tensor[(1536), uint8]) -> (Tensor[(15, 8, 12), float64], Tensor[(6, 6, 8), bool], Tensor[(450), float32], Tensor[(182), int8], Tensor[(1, 810), float32], Tensor[(336), float64], Tensor[(192), int16], Tensor[(1536), uint8]) {
  @func_7171(%var_7173, %var_7174) /* ty=(Tensor[(15, 8, 12), float64], Tensor[(6, 6, 8), bool], Tensor[(450), float32], Tensor[(182), int8], Tensor[(1, 810), float32], Tensor[(336), float64], Tensor[(192), int16], Tensor[(1536), uint8]) */
}

def @func_5340() -> Tensor[(15, 8, 12), float64] {
  %322 = @func_4891() /* ty=(Tensor[(15, 8, 12), float64],) */;
  %322.0
}

def @func_7956() -> Tensor[(15, 8, 12), float64] {
  %323 = fn () -> Tensor[(15, 8, 12), float64] {
    @func_5132() /* ty=Tensor[(15, 8, 12), float64] */
  };
  %323() /* ty=Tensor[(15, 8, 12), float64] */
}

def @func_5571() -> (Tensor[(15, 8, 12), float64], Tensor[(15, 8, 12), float64]) {
  %328 = fn () -> (Tensor[(15, 8, 12), float64], Tensor[(15, 8, 12), float64]) {
    %324 = @func_4029() /* ty=(Tensor[(15, 8, 12), float64],) */;
    %325 = @func_5495() /* ty=(Tensor[(15, 8, 12), float64],) */;
    %326 = %324.0;
    %327 = %325.0;
    (%326, %327)
  };
  %328() /* ty=(Tensor[(15, 8, 12), float64], Tensor[(15, 8, 12), float64]) */
}

def @func_2590(%var_2588: Tensor[(14, 11, 14), float32], %var_2589: Tensor[(14, 11, 14), float32]) -> (Tensor[(14, 11, 14), float32], Tensor[(14, 11, 14), float64]) {
  @func_2586(%var_2588, %var_2589) /* ty=(Tensor[(14, 11, 14), float32], Tensor[(14, 11, 14), float64]) */
}

def @func_4661(%var_4659: Tensor[(420), uint8], %var_4660: Tensor[(1536), uint8]) -> (Tensor[(6, 6, 8), float32], Tensor[(420), uint8], Tensor[(420), uint8], Tensor[(1536), uint8]) {
  @func_4657(%var_4659, %var_4660) /* ty=(Tensor[(6, 6, 8), float32], Tensor[(420), uint8], Tensor[(420), uint8], Tensor[(1536), uint8]) */
}

def @func_7980() -> (Tensor[(6, 15, 9), int16], Tensor[(5, 4, 14), bool]) {
  %332 = fn () -> (Tensor[(6, 15, 9), int16], Tensor[(5, 4, 14), bool]) {
    %329 = @func_6022() /* ty=(Tensor[(5, 4, 14), bool],) */;
    %330 = @func_4315() /* ty=Tensor[(6, 15, 9), int16] */;
    %331 = %329.0;
    (%330, %331)
  };
  %332() /* ty=(Tensor[(6, 15, 9), int16], Tensor[(5, 4, 14), bool]) */
}

def @func_7365() -> (Tensor[(15, 8, 12), float64], Tensor[(6, 15, 9), float64], Tensor[(6, 15, 9), float64]) {
  @func_7363() /* ty=(Tensor[(15, 8, 12), float64], Tensor[(6, 15, 9), float64], Tensor[(6, 15, 9), float64]) */
}

def @func_4009() -> Tensor[(6, 6, 8), float32] {
  @func_4007() /* ty=Tensor[(6, 6, 8), float32] */
}

def @func_6621(%var_6619: Tensor[(420), uint8], %var_6620: Tensor[(6, 6, 8), float32]) -> (Tensor[(20), uint64], Tensor[(1536), uint8], Tensor[(64, 24), uint8], Tensor[(420), uint8], Tensor[(6, 6, 8), bool], Tensor[(1536), uint8]) {
  %358 = fn (%var_6559: Tensor[(420), uint8], %var_6563: Tensor[(6, 6, 8), float32]) -> (Tensor[(20), uint64], Tensor[(1536), uint8], Tensor[(64, 24), uint8], Tensor[(420), uint8], Tensor[(6, 6, 8), bool], Tensor[(1536), uint8]) {
    %333 = cast(meta[relay.Constant][24] /* ty=Tensor[(1536), uint8] */, dtype="uint8") /* ty=Tensor[(1536), uint8] */;
    %334 = cast(meta[relay.Constant][24] /* ty=Tensor[(1536), uint8] */, dtype="uint8") /* ty=Tensor[(1536), uint8] */;
    %335 = reshape(%333, newshape=[12, 16, 8]) /* ty=Tensor[(12, 16, 8), uint8] */;
    %336 = reshape(%334, newshape=[12, 16, 8]) /* ty=Tensor[(12, 16, 8), uint8] */;
    %337 = @func_1087(%335, %336) /* ty=(Tensor[(12, 16, 8), bool], Tensor[(2, 2, 5), uint64], Tensor[(20), uint64]) */;
    %338 = cast(%var_6559, dtype="uint8") /* ty=Tensor[(420), uint8] */;
    %339 = cast(meta[relay.Constant][24] /* ty=Tensor[(1536), uint8] */, dtype="uint8") /* ty=Tensor[(1536), uint8] */;
    %340 = reshape(%338, newshape=[2, 15, 14]) /* ty=Tensor[(2, 15, 14), uint8] */;
    %341 = reshape(%339, newshape=[64, 24]) /* ty=Tensor[(64, 24), uint8] */;
    %342 = @func_3748(%340, %341) /* ty=(Tensor[(2, 15, 14), uint8], Tensor[(2, 15, 14), int32], Tensor[(2, 2, 5), uint64], Tensor[(64, 24), uint8], Tensor[(10, 13, 3), float64], Tensor[(30), float64], Tensor[(65, 6), float64]) */;
    %343 = @func_4125() /* ty=(Tensor[(6, 6, 8), bool], Tensor[(6, 6, 8), float32], Tensor[(6, 6, 8), float32]) */;
    %344 = %343.2;
    %345 = cast(%var_6563, dtype="bool") /* ty=Tensor[(6, 6, 8), bool] */;
    %346 = shape_of(%344, dtype="int32") /* ty=Tensor[(3), int32] */;
    %347 = cast(%344, dtype="bool") /* ty=Tensor[(6, 6, 8), bool] */;
    %348 = dyn.reshape(%345, %346, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    %349 = cast(%var_6559, dtype="uint8") /* ty=Tensor[(420), uint8] */;
    %350 = cast(meta[relay.Constant][24] /* ty=Tensor[(1536), uint8] */, dtype="uint8") /* ty=Tensor[(1536), uint8] */;
    %351 = reshape(%349, newshape=[420]) /* ty=Tensor[(420), uint8] */;
    %352 = reshape(%350, newshape=[1536]) /* ty=Tensor[(1536), uint8] */;
    %353 = @func_4657(%351, %352) /* ty=(Tensor[(6, 6, 8), float32], Tensor[(420), uint8], Tensor[(420), uint8], Tensor[(1536), uint8]) */;
    %354 = %337.2;
    %355 = %342.3;
    %356 = equal(%347, %348) /* ty=Tensor[(6, 6, 8), bool] */;
    %357 = %353.3;
    (%354, meta[relay.Constant][24] /* ty=Tensor[(1536), uint8] */, %355, %var_6559, %356, %357)
  };
  %358(%var_6619, %var_6620) /* ty=(Tensor[(20), uint64], Tensor[(1536), uint8], Tensor[(64, 24), uint8], Tensor[(420), uint8], Tensor[(6, 6, 8), bool], Tensor[(1536), uint8]) */
}

def @func_3751(%var_3749: Tensor[(2, 15, 14), uint8], %var_3750: Tensor[(64, 24), uint8]) -> (Tensor[(2, 15, 14), uint8], Tensor[(2, 15, 14), int32], Tensor[(2, 2, 5), uint64], Tensor[(64, 24), uint8], Tensor[(10, 13, 3), float64], Tensor[(30), float64], Tensor[(65, 6), float64]) {
  %383 = fn (%var_3712: Tensor[(2, 15, 14), uint8], %var_3739: Tensor[(64, 24), uint8]) -> (Tensor[(2, 15, 14), uint8], Tensor[(2, 15, 14), int32], Tensor[(2, 2, 5), uint64], Tensor[(64, 24), uint8], Tensor[(10, 13, 3), float64], Tensor[(30), float64], Tensor[(65, 6), float64]) {
    %359 = cast(%var_3712, dtype="uint8") /* ty=Tensor[(2, 15, 14), uint8] */;
    %360 = shape_of(meta[relay.Constant][25] /* ty=Tensor[(2, 15, 14), uint8] */, dtype="int32") /* ty=Tensor[(3), int32] */;
    %361 = cast(meta[relay.Constant][25] /* ty=Tensor[(2, 15, 14), uint8] */, dtype="uint8") /* ty=Tensor[(2, 15, 14), uint8] */;
    %362 = dyn.reshape(%359, %360, newshape=[]) /* ty=Tensor[(?, ?, ?), uint8] */;
    %363 = cast(%var_3712, dtype="float32") /* ty=Tensor[(2, 15, 14), float32] */;
    %364 = acosh(%363) /* ty=Tensor[(2, 15, 14), float32] */;
    %365 = cast(meta[relay.Constant][26] /* ty=Tensor[(2, 15, 14), float32] */, dtype="int32") /* ty=Tensor[(2, 15, 14), int32] */;
    %366 = shape_of(%364, dtype="int32") /* ty=Tensor[(3), int32] */;
    %367 = cast(%364, dtype="int32") /* ty=Tensor[(2, 15, 14), int32] */;
    %368 = dyn.reshape(%365, %366, newshape=[]) /* ty=Tensor[(?, ?, ?), int32] */;
    %369 = cast(%var_3739, dtype="uint8") /* ty=Tensor[(64, 24), uint8] */;
    %370 = cast(%var_3739, dtype="uint8") /* ty=Tensor[(64, 24), uint8] */;
    %371 = reshape(%369, newshape=[12, 16, 8]) /* ty=Tensor[(12, 16, 8), uint8] */;
    %372 = reshape(%370, newshape=[12, 16, 8]) /* ty=Tensor[(12, 16, 8), uint8] */;
    %373 = @func_1087(%371, %372) /* ty=(Tensor[(12, 16, 8), bool], Tensor[(2, 2, 5), uint64], Tensor[(20), uint64]) */;
    %374 = cast(meta[relay.Constant][27] /* ty=Tensor[(30), float64] */, dtype="float64") /* ty=Tensor[(30), float64] */;
    %375 = cast(meta[relay.Constant][28] /* ty=Tensor[(65, 6), float64] */, dtype="float64") /* ty=Tensor[(65, 6), float64] */;
    %376 = reshape(%374, newshape=[10, 1, 3]) /* ty=Tensor[(10, 1, 3), float64] */;
    %377 = reshape(%375, newshape=[10, 13, 3]) /* ty=Tensor[(10, 13, 3), float64] */;
    %378 = @func_397(%376, %377) /* ty=(Tensor[(10, 13, 3), float64],) */;
    %379 = bitwise_xor(%361, %362) /* ty=Tensor[(2, 15, 14), uint8] */;
    %380 = logical_xor(%367, %368) /* ty=Tensor[(2, 15, 14), int32] */;
    %381 = %373.1;
    %382 = %378.0;
    (%379, %380, %381, %var_3739, %382, meta[relay.Constant][27] /* ty=Tensor[(30), float64] */, meta[relay.Constant][28] /* ty=Tensor[(65, 6), float64] */)
  };
  %383(%var_3749, %var_3750) /* ty=(Tensor[(2, 15, 14), uint8], Tensor[(2, 15, 14), int32], Tensor[(2, 2, 5), uint64], Tensor[(64, 24), uint8], Tensor[(10, 13, 3), float64], Tensor[(30), float64], Tensor[(65, 6), float64]) */
}

def @func_7231() -> (Tensor[(?, 810), int64], Tensor[(240), float64], Tensor[(15, 8, 12), float64]) {
  @func_7229() /* ty=(Tensor[(?, 810), int64], Tensor[(240), float64], Tensor[(15, 8, 12), float64]) */
}

def @func_575(%var_573: Tensor[(2, 2, 5), uint64], %var_574: Tensor[(2, 2, 5), uint64]) -> (Tensor[(2, 2, 5), uint64], Tensor[(14, 8, 13), int32], Tensor[(1456), int32]) {
  @func_571(%var_573, %var_574) /* ty=(Tensor[(2, 2, 5), uint64], Tensor[(14, 8, 13), int32], Tensor[(1456), int32]) */
}

def @func_401(%var_399: Tensor[(10, 1, 3), float64], %var_400: Tensor[(10, 13, 3), float64]) -> (Tensor[(10, 13, 3), float64],) {
  @func_397(%var_399, %var_400) /* ty=(Tensor[(10, 13, 3), float64],) */
}

def @func_5133() -> Tensor[(15, 8, 12), float64] {
  %385 = fn () -> Tensor[(15, 8, 12), float64] {
    %384 = @func_4029() /* ty=(Tensor[(15, 8, 12), float64],) */;
    %384.0
  };
  %385() /* ty=Tensor[(15, 8, 12), float64] */
}

def @func_5495() -> (Tensor[(15, 8, 12), float64],) {
  %386 = @func_3825() /* ty=Tensor[(15, 8, 12), float64] */;
  (%386,)
}

def @func_9465() -> Tensor[(15, 8, 12), float64] {
  %388 = fn () -> Tensor[(15, 8, 12), float64] {
    %387 = @func_5570() /* ty=(Tensor[(15, 8, 12), float64], Tensor[(15, 8, 12), float64]) */;
    %387.1
  };
  %388() /* ty=Tensor[(15, 8, 12), float64] */
}

def @func_5264() -> (Tensor[(6, 6, 8), int64], Tensor[(420), uint8], Tensor[(420), uint8], Tensor[(1536), uint8], Tensor[(15, 8, 12), float64]) {
  %404 = fn () -> (Tensor[(6, 6, 8), int64], Tensor[(420), uint8], Tensor[(420), uint8], Tensor[(1536), uint8], Tensor[(15, 8, 12), float64]) {
    %389 = @func_4125() /* ty=(Tensor[(6, 6, 8), bool], Tensor[(6, 6, 8), float32], Tensor[(6, 6, 8), float32]) */;
    %390 = %389.1;
    %391 = cast(meta[relay.Constant][29] /* ty=Tensor[(6, 6, 8), float32] */, dtype="int64") /* ty=Tensor[(6, 6, 8), int64] */;
    %392 = shape_of(%390, dtype="int32") /* ty=Tensor[(3), int32] */;
    %393 = cast(%390, dtype="int64") /* ty=Tensor[(6, 6, 8), int64] */;
    %394 = dyn.reshape(%391, %392, newshape=[]) /* ty=Tensor[(?, ?, ?), int64] */;
    %395 = cast(meta[relay.Constant][30] /* ty=Tensor[(420), uint8] */, dtype="uint8") /* ty=Tensor[(420), uint8] */;
    %396 = cast(meta[relay.Constant][31] /* ty=Tensor[(1536), uint8] */, dtype="uint8") /* ty=Tensor[(1536), uint8] */;
    %397 = reshape(%395, newshape=[420]) /* ty=Tensor[(420), uint8] */;
    %398 = reshape(%396, newshape=[1536]) /* ty=Tensor[(1536), uint8] */;
    %399 = @func_3879(%397, %398) /* ty=(Tensor[(15, 8, 12), float64], Tensor[(2, 2, 5), uint64], Tensor[(420), uint8], Tensor[(1536), uint8]) */;
    %400 = @func_4029() /* ty=(Tensor[(15, 8, 12), float64],) */;
    %401 = logical_xor(%393, %394) /* ty=Tensor[(6, 6, 8), int64] */;
    %402 = %399.2;
    %403 = %400.0;
    (%401, %402, meta[relay.Constant][30] /* ty=Tensor[(420), uint8] */, meta[relay.Constant][31] /* ty=Tensor[(1536), uint8] */, %403)
  };
  %404() /* ty=(Tensor[(6, 6, 8), int64], Tensor[(420), uint8], Tensor[(420), uint8], Tensor[(1536), uint8], Tensor[(15, 8, 12), float64]) */
}

def @func_7214() -> (Tensor[(6, 15, 9), int16], Tensor[(6, 15, 9), int16]) {
  @func_7212() /* ty=(Tensor[(6, 15, 9), int16], Tensor[(6, 15, 9), int16]) */
}

def @func_414(%var_412: Tensor[(14, 8, 13), int32], %var_413: Tensor[(14, 8, 13), int32]) -> (Tensor[(14, 8, 13), int32],) {
  %410 = fn (%var_406: Tensor[(14, 8, 13), int32], %var_407: Tensor[(14, 8, 13), int32]) -> (Tensor[(14, 8, 13), int32],) {
    %405 = cast(%var_407, dtype="int32") /* ty=Tensor[(14, 8, 13), int32] */;
    %406 = shape_of(%var_406, dtype="int32") /* ty=Tensor[(3), int32] */;
    %407 = cast(%var_406, dtype="int32") /* ty=Tensor[(14, 8, 13), int32] */;
    %408 = dyn.reshape(%405, %406, newshape=[]) /* ty=Tensor[(?, ?, ?), int32] */;
    %409 = bitwise_and(%407, %408) /* ty=Tensor[(14, 8, 13), int32] */;
    (%409,)
  };
  %410(%var_412, %var_413) /* ty=(Tensor[(14, 8, 13), int32],) */
}

def @func_8356() -> (Tensor[(3, 11, 10), float32],) {
  @func_8354() /* ty=(Tensor[(3, 11, 10), float32],) */
}

def @func_5497() -> (Tensor[(15, 8, 12), float64],) {
  @func_5495() /* ty=(Tensor[(15, 8, 12), float64],) */
}

def @func_4811() -> (Tensor[(15, 8, 12), float64], Tensor[(15, 8, 12), float64]) {
  @func_4809() /* ty=(Tensor[(15, 8, 12), float64], Tensor[(15, 8, 12), float64]) */
}

def @func_7592(%var_7540: Tensor[(10, 3, 15), float64], %var_7551: Tensor[(10, 3, 15), float64], %var_7556: Tensor[(640), float32], %var_7564: Tensor[(192), int16], %var_7588: Tensor[(60), uint32]) -> (Tensor[(10, 3, 15), float64], Tensor[(10, 3, 15), float32], Tensor[(10, 3, 15), bool], Tensor[(8, 10, 8), float32], Tensor[(640), float32], Tensor[(12, 2, 8), int16], Tensor[(192), int16], Tensor[(6, 6, 8), float32], Tensor[(15, 8, 12), float64], Tensor[(12, 2, 8), int16], Tensor[(60), uint32]) {
  %411 = cast(%var_7540, dtype="float64") /* ty=Tensor[(10, 3, 15), float64] */;
  %412 = cast(%var_7540, dtype="float32") /* ty=Tensor[(10, 3, 15), float32] */;
  %413 = acos(%412) /* ty=Tensor[(10, 3, 15), float32] */;
  %414 = cast(%413, dtype="float32") /* ty=Tensor[(10, 3, 15), float32] */;
  %415 = shape_of(%var_7540, dtype="int32") /* ty=Tensor[(3), int32] */;
  %416 = cast(%var_7540, dtype="float32") /* ty=Tensor[(10, 3, 15), float32] */;
  %417 = dyn.reshape(%414, %415, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %418 = cast(%var_7551, dtype="bool") /* ty=Tensor[(10, 3, 15), bool] */;
  %419 = shape_of(%var_7540, dtype="int32") /* ty=Tensor[(3), int32] */;
  %420 = cast(%var_7540, dtype="bool") /* ty=Tensor[(10, 3, 15), bool] */;
  %421 = dyn.reshape(%418, %419, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %422 = cast(%var_7556, dtype="float32") /* ty=Tensor[(640), float32] */;
  %423 = reshape(%422, newshape=[8, 10, 8]) /* ty=Tensor[(8, 10, 8), float32] */;
  %424 = @func_2610(%423) /* ty=(Tensor[(8, 10, 8), float32],) */;
  %425 = cast(%var_7564, dtype="int16") /* ty=Tensor[(192), int16] */;
  %426 = reshape(%425, newshape=[2, 96]) /* ty=Tensor[(2, 96), int16] */;
  %427 = @func_6268(%426) /* ty=(Tensor[(6, 6, 8), int64], Tensor[(12, 2, 8), int16], Tensor[(2, 96), int16]) */;
  %428 = @func_6647() /* ty=(Tensor[(15, 8, 12), float64],) */;
  %429 = cast(%var_7588, dtype="uint32") /* ty=Tensor[(60), uint32] */;
  %430 = cast(%var_7588, dtype="uint32") /* ty=Tensor[(60), uint32] */;
  %431 = reshape(%429, newshape=[10, 3, 2]) /* ty=Tensor[(10, 3, 2), uint32] */;
  %432 = reshape(%430, newshape=[10, 3, 2]) /* ty=Tensor[(10, 3, 2), uint32] */;
  %433 = @func_5049(%431, %432) /* ty=(Tensor[(10, 3, 2), uint32], Tensor[(12, 2, 8), int16], Tensor[(192), int16]) */;
  %434 = rsqrt(%411) /* ty=Tensor[(10, 3, 15), float64] */;
  %435 = subtract(%416, %417) /* ty=Tensor[(10, 3, 15), float32] */;
  %436 = less(%420, %421) /* ty=Tensor[(10, 3, 15), bool] */;
  %437 = %424.0;
  %438 = %427.1;
  %439 = @func_4007() /* ty=Tensor[(6, 6, 8), float32] */;
  %440 = %428.0;
  %441 = %433.1;
  (%434, %435, %436, %437, %var_7556, %438, %var_7564, %439, %440, %441, %var_7588)
}

def @func_8273() -> (Tensor[(1536), uint8],) {
  %442 = @func_5263() /* ty=(Tensor[(6, 6, 8), int64], Tensor[(420), uint8], Tensor[(420), uint8], Tensor[(1536), uint8], Tensor[(15, 8, 12), float64]) */;
  %443 = %442.3;
  (%443,)
}

def @func_2610(%var_2603: Tensor[(8, 10, 8), float32]) -> (Tensor[(8, 10, 8), float32],) {
  %444 = cast(meta[relay.Constant][32] /* ty=Tensor[(8, 10, 8), float32] */, dtype="float32") /* ty=Tensor[(8, 10, 8), float32] */;
  %445 = shape_of(%var_2603, dtype="int32") /* ty=Tensor[(3), int32] */;
  %446 = cast(%var_2603, dtype="float32") /* ty=Tensor[(8, 10, 8), float32] */;
  %447 = dyn.reshape(%444, %445, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %448 = divide(%446, %447) /* ty=Tensor[(8, 10, 8), float32] */;
  (%448,)
}

def @func_5979() -> Tensor[(15, 8, 12), float64] {
  @func_5977() /* ty=Tensor[(15, 8, 12), float64] */
}

def @func_8334() -> Tensor[(15, 8, 12), float64] {
  %449 = fn () -> Tensor[(15, 8, 12), float64] {
    @func_7955() /* ty=Tensor[(15, 8, 12), float64] */
  };
  %449() /* ty=Tensor[(15, 8, 12), float64] */
}

def @func_8504() -> (Tensor[(15, 8, 12), float64], Tensor[(6, 6, 8), float32]) {
  %453 = fn () -> (Tensor[(15, 8, 12), float64], Tensor[(6, 6, 8), float32]) {
    %450 = @func_8211() /* ty=(Tensor[(6, 6, 8), float32], Tensor[(6, 15, 9), int16]) */;
    %451 = @func_5340() /* ty=Tensor[(15, 8, 12), float64] */;
    %452 = %450.0;
    (%451, %452)
  };
  %453() /* ty=(Tensor[(15, 8, 12), float64], Tensor[(6, 6, 8), float32]) */
}

def @main(%var_9540: Tensor[(6, 10, 4), float32]) -> Tensor[(6, 10, 4), bool] {
  %454 = cast(%var_9540, dtype="float32") /* ty=Tensor[(6, 10, 4), float32] */;
  %455 = log10(%454) /* ty=Tensor[(6, 10, 4), float32] */;
  %456 = cast(%var_9540, dtype="float32") /* ty=Tensor[(6, 10, 4), float32] */;
  %457 = shape_of(%455, dtype="int32") /* ty=Tensor[(3), int32] */;
  %458 = cast(%455, dtype="float32") /* ty=Tensor[(6, 10, 4), float32] */;
  %459 = dyn.reshape(%456, %457, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %460 = floor_mod(%458, %459) /* ty=Tensor[(6, 10, 4), float32] */;
  %461 = cast(%460, dtype="bool") /* ty=Tensor[(6, 10, 4), bool] */;
  %462 = shape_of(%455, dtype="int32") /* ty=Tensor[(3), int32] */;
  %463 = cast(%455, dtype="bool") /* ty=Tensor[(6, 10, 4), bool] */;
  %464 = dyn.reshape(%461, %462, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  less(%463, %464) /* ty=Tensor[(6, 10, 4), bool] */
}

def @func_6872() -> Tensor[(6, 6, 8), bool] {
  %465 = @func_5414() /* ty=(Tensor[(6, 6, 8), float32], Tensor[(12, 2, 8), int16], Tensor[(192), int16], Tensor[(6, 6, 8), bool], Tensor[(112, 2), float32]) */;
  %465.3
}

def @func_5318(%var_5307: Tensor[(1, 16, 14), float32]) -> (Tensor[(1, 16, 14), float32], Tensor[(15, 8, 12), float64], Tensor[(6, 6, 8), bool]) {
  %466 = cast(%var_5307, dtype="float32") /* ty=Tensor[(1, 16, 14), float32] */;
  %467 = @func_4125() /* ty=(Tensor[(6, 6, 8), bool], Tensor[(6, 6, 8), float32], Tensor[(6, 6, 8), float32]) */;
  %468 = atan(%466) /* ty=Tensor[(1, 16, 14), float32] */;
  %469 = @func_3825() /* ty=Tensor[(15, 8, 12), float64] */;
  %470 = %467.0;
  (%468, %469, %470)
}

def @func_1091(%var_1089: Tensor[(12, 16, 8), uint8], %var_1090: Tensor[(12, 16, 8), uint8]) -> (Tensor[(12, 16, 8), bool], Tensor[(2, 2, 5), uint64], Tensor[(20), uint64]) {
  @func_1087(%var_1089, %var_1090) /* ty=(Tensor[(12, 16, 8), bool], Tensor[(2, 2, 5), uint64], Tensor[(20), uint64]) */
}

def @func_2613(%var_2611: Tensor[(8, 10, 8), float32]) -> (Tensor[(8, 10, 8), float32],) {
  @func_2610(%var_2611) /* ty=(Tensor[(8, 10, 8), float32],) */
}

def @func_6234(%var_6230: Tensor[(1536), uint8], %var_6231: Tensor[(182), int8], %var_6232: Tensor[(1, 2156), float32], %var_6233: Tensor[(1456), int32]) -> (Tensor[(5, 4, 14), bool], Tensor[(1, 810), float32], Tensor[(5, 10, 9), bool], Tensor[(450), float32], Tensor[(1536), uint8], Tensor[(182), int8], Tensor[(30), float64], Tensor[(2, 1, 6), float32], Tensor[(200), int8], Tensor[(1, 2156), float32], Tensor[(1456), int32], Tensor[(15, 8, 12), float64], Tensor[(200), float32]) {
  @func_6228(%var_6230, %var_6231, %var_6232, %var_6233) /* ty=(Tensor[(5, 4, 14), bool], Tensor[(1, 810), float32], Tensor[(5, 10, 9), bool], Tensor[(450), float32], Tensor[(1536), uint8], Tensor[(182), int8], Tensor[(30), float64], Tensor[(2, 1, 6), float32], Tensor[(200), int8], Tensor[(1, 2156), float32], Tensor[(1456), int32], Tensor[(15, 8, 12), float64], Tensor[(200), float32]) */
}

def @func_4194() -> (Tensor[(15, 8, 12), float64], Tensor[(6, 15, 9), float64], Tensor[(1, 810), float32]) {
  %471 = cast(meta[relay.Constant][33] /* ty=Tensor[(1, 810), float32] */, dtype="float32") /* ty=Tensor[(1, 810), float32] */;
  %472 = reshape(%471, newshape=[6, 15, 9]) /* ty=Tensor[(6, 15, 9), float32] */;
  %473 = @func_2745(%472) /* ty=(Tensor[(6, 15, 9), float32], Tensor[(6, 15, 9), float64], Tensor[(6, 15, 9), float32]) */;
  %474 = @func_3825() /* ty=Tensor[(15, 8, 12), float64] */;
  %475 = %473.1;
  (%474, %475, meta[relay.Constant][33] /* ty=Tensor[(1, 810), float32] */)
}

def @func_6648() -> (Tensor[(15, 8, 12), float64],) {
  %478 = fn () -> (Tensor[(15, 8, 12), float64],) {
    %476 = @func_5495() /* ty=(Tensor[(15, 8, 12), float64],) */;
    %477 = %476.0;
    (%477,)
  };
  %478() /* ty=(Tensor[(15, 8, 12), float64],) */
}

def @func_6394(%var_6392: Tensor[(1536), uint8], %var_6393: Tensor[(1456), int32]) -> (Tensor[(6, 15, 9), int16], Tensor[(2, 728), int32], Tensor[(200), int8], Tensor[(2156), float32], Tensor[(1536), uint8], Tensor[(1456), int32]) {
  @func_6390(%var_6392, %var_6393) /* ty=(Tensor[(6, 15, 9), int16], Tensor[(2, 728), int32], Tensor[(200), int8], Tensor[(2156), float32], Tensor[(1536), uint8], Tensor[(1456), int32]) */
}

def @func_4571(%var_4517: Tensor[(7, 4, 12), float64], %var_4529: Tensor[(7, 4, 12), float64], %var_4536: Tensor[(192), int16], %var_4567: Tensor[(1, 1536), uint8], %var_4569: Tensor[(182), int8]) -> (Tensor[(7, 4, 12), float32], Tensor[(12, 2, 8), int16], Tensor[(192), int16], Tensor[(1, 810), float32], Tensor[(7, 4, 12), uint8], Tensor[(2, 2, 5), uint64], Tensor[(390), float64], Tensor[(1, 1536), uint8], Tensor[(240), float64], Tensor[(182), int8]) {
  %479 = cast(%var_4517, dtype="float64") /* ty=Tensor[(7, 4, 12), float64] */;
  %480 = log(%479) /* ty=Tensor[(7, 4, 12), float64] */;
  %481 = cast(%var_4529, dtype="float32") /* ty=Tensor[(7, 4, 12), float32] */;
  %482 = shape_of(%480, dtype="int32") /* ty=Tensor[(3), int32] */;
  %483 = cast(%480, dtype="float32") /* ty=Tensor[(7, 4, 12), float32] */;
  %484 = dyn.reshape(%481, %482, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %485 = cast(%var_4536, dtype="int16") /* ty=Tensor[(192), int16] */;
  %486 = reshape(%485, newshape=[12, 2, 8]) /* ty=Tensor[(12, 2, 8), int16] */;
  %487 = @func_4194() /* ty=(Tensor[(15, 8, 12), float64], Tensor[(6, 15, 9), float64], Tensor[(1, 810), float32]) */;
  %488 = cast(%480, dtype="float64") /* ty=Tensor[(7, 4, 12), float64] */;
  %489 = atanh(%488) /* ty=Tensor[(7, 4, 12), float64] */;
  %490 = cast(%var_4529, dtype="uint8") /* ty=Tensor[(7, 4, 12), uint8] */;
  %491 = shape_of(%489, dtype="int32") /* ty=Tensor[(3), int32] */;
  %492 = cast(%489, dtype="uint8") /* ty=Tensor[(7, 4, 12), uint8] */;
  %493 = dyn.reshape(%490, %491, newshape=[]) /* ty=Tensor[(?, ?, ?), uint8] */;
  %494 = cast(meta[relay.Constant][34] /* ty=Tensor[(390), float64] */, dtype="float64") /* ty=Tensor[(390), float64] */;
  %495 = cast(%var_4567, dtype="uint8") /* ty=Tensor[(1, 1536), uint8] */;
  %496 = cast(meta[relay.Constant][35] /* ty=Tensor[(240), float64] */, dtype="float64") /* ty=Tensor[(240), float64] */;
  %497 = cast(%var_4569, dtype="int8") /* ty=Tensor[(182), int8] */;
  %498 = reshape(%494, newshape=[390]) /* ty=Tensor[(390), float64] */;
  %499 = reshape(%495, newshape=[1536]) /* ty=Tensor[(1536), uint8] */;
  %500 = reshape(%496, newshape=[240]) /* ty=Tensor[(240), float64] */;
  %501 = reshape(%497, newshape=[182]) /* ty=Tensor[(182), int8] */;
  %502 = @func_2310(%498, %499, %500, %501) /* ty=(Tensor[(3, 12, 16), float64], Tensor[(10, 13, 3), float64], Tensor[(1, 30), float64], Tensor[(390), float64], Tensor[(2, 2, 5), uint64], Tensor[(1536), uint8], Tensor[(450), float32], Tensor[(240), float64], Tensor[(2, 13, 7), bool], Tensor[(182), int8], Tensor[(12, 16, 8), bool]) */;
  %503 = divide(%483, %484) /* ty=Tensor[(7, 4, 12), float32] */;
  %504 = @func_3614(%486) /* ty=Tensor[(12, 2, 8), int16] */;
  %505 = %487.2;
  %506 = left_shift(%492, %493) /* ty=Tensor[(7, 4, 12), uint8] */;
  %507 = %502.4;
  (%503, %504, %var_4536, %505, %506, %507, meta[relay.Constant][34] /* ty=Tensor[(390), float64] */, %var_4567, meta[relay.Constant][35] /* ty=Tensor[(240), float64] */, %var_4569)
}

def @func_8418() -> (Tensor[(15, 8, 12), float64],) {
  @func_8416() /* ty=(Tensor[(15, 8, 12), float64],) */
}

def @func_7229() -> (Tensor[(?, 810), int64], Tensor[(240), float64], Tensor[(15, 8, 12), float64]) {
  %508 = cast(meta[relay.Constant][36] /* ty=Tensor[(240), float64] */, dtype="float64") /* ty=Tensor[(240), float64] */;
  %509 = reshape(%508, newshape=[24, 10]) /* ty=Tensor[(24, 10), float64] */;
  %510 = @func_6966(%509) /* ty=(Tensor[(5, 4, 14), bool], Tensor[(30), float64], Tensor[(24, 10), float64], Tensor[(1536), uint8], Tensor[(30), float64], Tensor[(?, 810), int64], Tensor[(15, 8, 12), float64], Tensor[(?, 810), float64]) */;
  %511 = @func_3825() /* ty=Tensor[(15, 8, 12), float64] */;
  %512 = cast(%511, dtype="float64") /* ty=Tensor[(15, 8, 12), float64] */;
  %513 = %510.5;
  %514 = atanh(%512) /* ty=Tensor[(15, 8, 12), float64] */;
  (%513, meta[relay.Constant][36] /* ty=Tensor[(240), float64] */, %514)
}

def @func_3826() -> Tensor[(15, 8, 12), float64] {
  %516 = fn () -> Tensor[(15, 8, 12), float64] {
    %515 = cast(meta[relay.Constant][37] /* ty=Tensor[(15, 8, 12), float64] */, dtype="float64") /* ty=Tensor[(15, 8, 12), float64] */;
    sin(%515) /* ty=Tensor[(15, 8, 12), float64] */
  };
  %516() /* ty=Tensor[(15, 8, 12), float64] */
}

def @func_4007() -> Tensor[(6, 6, 8), float32] {
  %517 = cast(meta[relay.Constant][38] /* ty=Tensor[(6, 6, 8), float32] */, dtype="float32") /* ty=Tensor[(6, 6, 8), float32] */;
  atanh(%517) /* ty=Tensor[(6, 6, 8), float32] */
}

def @func_5415() -> (Tensor[(6, 6, 8), float32], Tensor[(12, 2, 8), int16], Tensor[(192), int16], Tensor[(6, 6, 8), bool], Tensor[(112, 2), float32]) {
  %527 = fn () -> (Tensor[(6, 6, 8), float32], Tensor[(12, 2, 8), int16], Tensor[(192), int16], Tensor[(6, 6, 8), bool], Tensor[(112, 2), float32]) {
    %518 = @func_4125() /* ty=(Tensor[(6, 6, 8), bool], Tensor[(6, 6, 8), float32], Tensor[(6, 6, 8), float32]) */;
    %519 = cast(meta[relay.Constant][39] /* ty=Tensor[(192), int16] */, dtype="int16") /* ty=Tensor[(192), int16] */;
    %520 = reshape(%519, newshape=[12, 2, 8]) /* ty=Tensor[(12, 2, 8), int16] */;
    %521 = cast(meta[relay.Constant][40] /* ty=Tensor[(112, 2), float32] */, dtype="float32") /* ty=Tensor[(112, 2), float32] */;
    %522 = reshape(%521, newshape=[1, 16, 14]) /* ty=Tensor[(1, 16, 14), float32] */;
    %523 = @func_5318(%522) /* ty=(Tensor[(1, 16, 14), float32], Tensor[(15, 8, 12), float64], Tensor[(6, 6, 8), bool]) */;
    %524 = %518.1;
    %525 = @func_3614(%520) /* ty=Tensor[(12, 2, 8), int16] */;
    %526 = %523.2;
    (%524, %525, meta[relay.Constant][39] /* ty=Tensor[(192), int16] */, %526, meta[relay.Constant][40] /* ty=Tensor[(112, 2), float32] */)
  };
  %527() /* ty=(Tensor[(6, 6, 8), float32], Tensor[(12, 2, 8), int16], Tensor[(192), int16], Tensor[(6, 6, 8), bool], Tensor[(112, 2), float32]) */
}

def @func_4749(%var_4738: Tensor[(200), int8], %var_4739: Tensor[(2156), float32], %var_4740: Tensor[(1536), uint8]) -> (Tensor[(15, 8, 12), float64], Tensor[(14, 8, 13), int32], Tensor[(200), int8], Tensor[(2156), float32], Tensor[(1536), uint8], Tensor[(1456), int32]) {
  %528 = @func_4029() /* ty=(Tensor[(15, 8, 12), float64],) */;
  %529 = cast(%var_4738, dtype="int8") /* ty=Tensor[(200), int8] */;
  %530 = cast(%var_4739, dtype="float32") /* ty=Tensor[(2156), float32] */;
  %531 = cast(%var_4740, dtype="uint8") /* ty=Tensor[(1536), uint8] */;
  %532 = cast(meta[relay.Constant][41] /* ty=Tensor[(1456), int32] */, dtype="int32") /* ty=Tensor[(1456), int32] */;
  %533 = reshape(%529, newshape=[200]) /* ty=Tensor[(200), int8] */;
  %534 = reshape(%530, newshape=[2156]) /* ty=Tensor[(2156), float32] */;
  %535 = reshape(%531, newshape=[1536]) /* ty=Tensor[(1536), uint8] */;
  %536 = reshape(%532, newshape=[2, 728]) /* ty=Tensor[(2, 728), int32] */;
  %537 = @func_3690(%533, %534, %535, %536) /* ty=(Tensor[(5, 5, 8), int8], Tensor[(200), int8], Tensor[(14, 11, 14), float32], Tensor[(2156), float32], Tensor[(20), uint64], Tensor[(1536), uint8], Tensor[(14, 8, 13), int32], Tensor[(2, 728), int32], Tensor[(2, 1, 6), float32]) */;
  %538 = %528.0;
  %539 = %537.6;
  (%538, %539, %var_4738, %var_4739, %var_4740, meta[relay.Constant][41] /* ty=Tensor[(1456), int32] */)
}

def @func_3882(%var_3880: Tensor[(420), uint8], %var_3881: Tensor[(1536), uint8]) -> (Tensor[(15, 8, 12), float64], Tensor[(2, 2, 5), uint64], Tensor[(420), uint8], Tensor[(1536), uint8]) {
  %547 = fn (%var_3876: Tensor[(420), uint8], %var_3877: Tensor[(1536), uint8]) -> (Tensor[(15, 8, 12), float64], Tensor[(2, 2, 5), uint64], Tensor[(420), uint8], Tensor[(1536), uint8]) {
    %540 = cast(%var_3876, dtype="uint8") /* ty=Tensor[(420), uint8] */;
    %541 = cast(%var_3877, dtype="uint8") /* ty=Tensor[(1536), uint8] */;
    %542 = reshape(%540, newshape=[2, 15, 14]) /* ty=Tensor[(2, 15, 14), uint8] */;
    %543 = reshape(%541, newshape=[64, 24]) /* ty=Tensor[(64, 24), uint8] */;
    %544 = @func_3748(%542, %543) /* ty=(Tensor[(2, 15, 14), uint8], Tensor[(2, 15, 14), int32], Tensor[(2, 2, 5), uint64], Tensor[(64, 24), uint8], Tensor[(10, 13, 3), float64], Tensor[(30), float64], Tensor[(65, 6), float64]) */;
    %545 = @func_3825() /* ty=Tensor[(15, 8, 12), float64] */;
    %546 = %544.2;
    (%545, %546, %var_3876, %var_3877)
  };
  %547(%var_3880, %var_3881) /* ty=(Tensor[(15, 8, 12), float64], Tensor[(2, 2, 5), uint64], Tensor[(420), uint8], Tensor[(1536), uint8]) */
}

def @func_2315(%var_2311: Tensor[(390), float64], %var_2312: Tensor[(1536), uint8], %var_2313: Tensor[(240), float64], %var_2314: Tensor[(182), int8]) -> (Tensor[(3, 12, 16), float64], Tensor[(10, 13, 3), float64], Tensor[(1, 30), float64], Tensor[(390), float64], Tensor[(2, 2, 5), uint64], Tensor[(1536), uint8], Tensor[(450), float32], Tensor[(240), float64], Tensor[(2, 13, 7), bool], Tensor[(182), int8], Tensor[(12, 16, 8), bool]) {
  %580 = fn (%var_2284: Tensor[(390), float64], %var_2292: Tensor[(1536), uint8], %var_2298: Tensor[(240), float64], %var_2303: Tensor[(182), int8]) -> (Tensor[(3, 12, 16), float64], Tensor[(10, 13, 3), float64], Tensor[(1, 30), float64], Tensor[(390), float64], Tensor[(2, 2, 5), uint64], Tensor[(1536), uint8], Tensor[(450), float32], Tensor[(240), float64], Tensor[(2, 13, 7), bool], Tensor[(182), int8], Tensor[(12, 16, 8), bool]) {
    %548 = cast(meta[relay.Constant][42] /* ty=Tensor[(3, 12, 16), float64] */, dtype="float64") /* ty=Tensor[(3, 12, 16), float64] */;
    %549 = cast(meta[relay.Constant][43] /* ty=Tensor[(1, 30), float64] */, dtype="float64") /* ty=Tensor[(1, 30), float64] */;
    %550 = cast(%var_2284, dtype="float64") /* ty=Tensor[(390), float64] */;
    %551 = reshape(%549, newshape=[10, 1, 3]) /* ty=Tensor[(10, 1, 3), float64] */;
    %552 = reshape(%550, newshape=[10, 13, 3]) /* ty=Tensor[(10, 13, 3), float64] */;
    %553 = @func_397(%551, %552) /* ty=(Tensor[(10, 13, 3), float64],) */;
    %554 = cast(%var_2292, dtype="uint8") /* ty=Tensor[(1536), uint8] */;
    %555 = cast(%var_2292, dtype="uint8") /* ty=Tensor[(1536), uint8] */;
    %556 = reshape(%554, newshape=[12, 16, 8]) /* ty=Tensor[(12, 16, 8), uint8] */;
    %557 = reshape(%555, newshape=[12, 16, 8]) /* ty=Tensor[(12, 16, 8), uint8] */;
    %558 = @func_1087(%556, %557) /* ty=(Tensor[(12, 16, 8), bool], Tensor[(2, 2, 5), uint64], Tensor[(20), uint64]) */;
    %559 = cast(%var_2298, dtype="float64") /* ty=Tensor[(240), float64] */;
    %560 = cast(%var_2292, dtype="uint8") /* ty=Tensor[(1536), uint8] */;
    %561 = cast(meta[relay.Constant][43] /* ty=Tensor[(1, 30), float64] */, dtype="float64") /* ty=Tensor[(1, 30), float64] */;
    %562 = reshape(%559, newshape=[5, 6, 8]) /* ty=Tensor[(5, 6, 8), float64] */;
    %563 = reshape(%560, newshape=[1536]) /* ty=Tensor[(1536), uint8] */;
    %564 = reshape(%561, newshape=[30]) /* ty=Tensor[(30), float64] */;
    %565 = @func_2209(%562, %563, %564) /* ty=(Tensor[(10, 13, 3), float64], Tensor[(450), float32], Tensor[(1536), uint8], Tensor[(1, 182), int8], Tensor[(30), float64], Tensor[(5, 6, 8), float32]) */;
    %566 = cast(%var_2303, dtype="int8") /* ty=Tensor[(182), int8] */;
    %567 = reshape(%566, newshape=[2, 13, 7]) /* ty=Tensor[(2, 13, 7), int8] */;
    %568 = @func_1527(%567) /* ty=(Tensor[(2, 13, 7), bool], Tensor[(2, 13, 7), int16], Tensor[(2, 2, 5), uint64], Tensor[(20), uint64], Tensor[(14, 8, 13), int32]) */;
    %569 = cast(%var_2292, dtype="uint8") /* ty=Tensor[(1536), uint8] */;
    %570 = cast(%var_2292, dtype="uint8") /* ty=Tensor[(1536), uint8] */;
    %571 = reshape(%569, newshape=[12, 16, 8]) /* ty=Tensor[(12, 16, 8), uint8] */;
    %572 = reshape(%570, newshape=[12, 16, 8]) /* ty=Tensor[(12, 16, 8), uint8] */;
    %573 = @func_1087(%571, %572) /* ty=(Tensor[(12, 16, 8), bool], Tensor[(2, 2, 5), uint64], Tensor[(20), uint64]) */;
    %574 = cosh(%548) /* ty=Tensor[(3, 12, 16), float64] */;
    %575 = %553.0;
    %576 = %558.1;
    %577 = %565.1;
    %578 = %568.0;
    %579 = %573.0;
    (%574, %575, meta[relay.Constant][43] /* ty=Tensor[(1, 30), float64] */, %var_2284, %576, %var_2292, %577, %var_2298, %578, %var_2303, %579)
  };
  %580(%var_2311, %var_2312, %var_2313, %var_2314) /* ty=(Tensor[(3, 12, 16), float64], Tensor[(10, 13, 3), float64], Tensor[(1, 30), float64], Tensor[(390), float64], Tensor[(2, 2, 5), uint64], Tensor[(1536), uint8], Tensor[(450), float32], Tensor[(240), float64], Tensor[(2, 13, 7), bool], Tensor[(182), int8], Tensor[(12, 16, 8), bool]) */
}

def @func_4125() -> (Tensor[(6, 6, 8), bool], Tensor[(6, 6, 8), float32], Tensor[(6, 6, 8), float32]) {
  %581 = @func_4007() /* ty=Tensor[(6, 6, 8), float32] */;
  %582 = cast(meta[relay.Constant][44] /* ty=Tensor[(6, 6, 8), float32] */, dtype="bool") /* ty=Tensor[(6, 6, 8), bool] */;
  %583 = shape_of(%581, dtype="int32") /* ty=Tensor[(3), int32] */;
  %584 = cast(%581, dtype="bool") /* ty=Tensor[(6, 6, 8), bool] */;
  %585 = dyn.reshape(%582, %583, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %586 = cast(%581, dtype="float32") /* ty=Tensor[(6, 6, 8), float32] */;
  %587 = log2(%586) /* ty=Tensor[(6, 6, 8), float32] */;
  %588 = cast(%587, dtype="float32") /* ty=Tensor[(6, 6, 8), float32] */;
  %589 = not_equal(%584, %585) /* ty=Tensor[(6, 6, 8), bool] */;
  %590 = @func_4007() /* ty=Tensor[(6, 6, 8), float32] */;
  %591 = asinh(%588) /* ty=Tensor[(6, 6, 8), float32] */;
  (%589, %590, %591)
}

def @func_7599(%var_7594: Tensor[(10, 3, 15), float64], %var_7595: Tensor[(10, 3, 15), float64], %var_7596: Tensor[(640), float32], %var_7597: Tensor[(192), int16], %var_7598: Tensor[(60), uint32]) -> (Tensor[(10, 3, 15), float64], Tensor[(10, 3, 15), float32], Tensor[(10, 3, 15), bool], Tensor[(8, 10, 8), float32], Tensor[(640), float32], Tensor[(12, 2, 8), int16], Tensor[(192), int16], Tensor[(6, 6, 8), float32], Tensor[(15, 8, 12), float64], Tensor[(12, 2, 8), int16], Tensor[(60), uint32]) {
  @func_7592(%var_7594, %var_7595, %var_7596, %var_7597, %var_7598) /* ty=(Tensor[(10, 3, 15), float64], Tensor[(10, 3, 15), float32], Tensor[(10, 3, 15), bool], Tensor[(8, 10, 8), float32], Tensor[(640), float32], Tensor[(12, 2, 8), int16], Tensor[(192), int16], Tensor[(6, 6, 8), float32], Tensor[(15, 8, 12), float64], Tensor[(12, 2, 8), int16], Tensor[(60), uint32]) */
}

def @func_2985(%var_2974: Tensor[(5, 5, 8), int8]) -> Tensor[(5, 5, 8), int8] {
  %592 = cast(meta[relay.Constant][45] /* ty=int8 */, dtype="int8") /* ty=int8 */;
  %593 = cast(%var_2974, dtype="int8") /* ty=Tensor[(5, 5, 8), int8] */;
  left_shift(%592, %593) /* ty=Tensor[(5, 5, 8), int8] */
}

def @func_2214(%var_2211: Tensor[(5, 6, 8), float64], %var_2212: Tensor[(1536), uint8], %var_2213: Tensor[(30), float64]) -> (Tensor[(10, 13, 3), float64], Tensor[(450), float32], Tensor[(1536), uint8], Tensor[(1, 182), int8], Tensor[(30), float64], Tensor[(5, 6, 8), float32]) {
  @func_2209(%var_2211, %var_2212, %var_2213) /* ty=(Tensor[(10, 13, 3), float64], Tensor[(450), float32], Tensor[(1536), uint8], Tensor[(1, 182), int8], Tensor[(30), float64], Tensor[(5, 6, 8), float32]) */
}

def @func_4031() -> (Tensor[(15, 8, 12), float64],) {
  @func_4029() /* ty=(Tensor[(15, 8, 12), float64],) */
}

def @func_7779() -> Tensor[(6, 15, 9), int16] {
  %595 = fn () -> Tensor[(6, 15, 9), int16] {
    %594 = @func_6333() /* ty=(Tensor[(6, 15, 9), int16],) */;
    %594.0
  };
  %595() /* ty=Tensor[(6, 15, 9), int16] */
}

def @func_7301(%var_7299: Tensor[(2, 728), int32]) -> (Tensor[(15, 8, 12), float64], Tensor[(10, 13, 3), float64], Tensor[(30), float64], Tensor[(390), float64], Tensor[(5, 5, 8), int8], Tensor[(200), int8], Tensor[(154, 14), float32], Tensor[(1536), uint8], Tensor[(2, 728), int32], Tensor[(15, 8, 12), bool]) {
  @func_7298(%var_7299) /* ty=(Tensor[(15, 8, 12), float64], Tensor[(10, 13, 3), float64], Tensor[(30), float64], Tensor[(390), float64], Tensor[(5, 5, 8), int8], Tensor[(200), int8], Tensor[(154, 14), float32], Tensor[(1536), uint8], Tensor[(2, 728), int32], Tensor[(15, 8, 12), bool]) */
}

def @func_6968(%var_6967: Tensor[(24, 10), float64]) -> (Tensor[(5, 4, 14), bool], Tensor[(30), float64], Tensor[(24, 10), float64], Tensor[(1536), uint8], Tensor[(30), float64], Tensor[(?, 810), int64], Tensor[(15, 8, 12), float64], Tensor[(?, 810), float64]) {
  %623 = fn (%var_6933: Tensor[(24, 10), float64]) -> (Tensor[(5, 4, 14), bool], Tensor[(30), float64], Tensor[(24, 10), float64], Tensor[(1536), uint8], Tensor[(30), float64], Tensor[(?, 810), int64], Tensor[(15, 8, 12), float64], Tensor[(?, 810), float64]) {
    %596 = @func_6022() /* ty=(Tensor[(5, 4, 14), bool],) */;
    %597 = cast(%var_6933, dtype="float64") /* ty=Tensor[(24, 10), float64] */;
    %598 = cast(meta[relay.Constant][46] /* ty=Tensor[(1536), uint8] */, dtype="uint8") /* ty=Tensor[(1536), uint8] */;
    %599 = cast(meta[relay.Constant][47] /* ty=Tensor[(30), float64] */, dtype="float64") /* ty=Tensor[(30), float64] */;
    %600 = reshape(%597, newshape=[5, 6, 8]) /* ty=Tensor[(5, 6, 8), float64] */;
    %601 = reshape(%598, newshape=[1536]) /* ty=Tensor[(1536), uint8] */;
    %602 = reshape(%599, newshape=[30]) /* ty=Tensor[(30), float64] */;
    %603 = @func_2209(%600, %601, %602) /* ty=(Tensor[(10, 13, 3), float64], Tensor[(450), float32], Tensor[(1536), uint8], Tensor[(1, 182), int8], Tensor[(30), float64], Tensor[(5, 6, 8), float32]) */;
    %604 = @func_4194() /* ty=(Tensor[(15, 8, 12), float64], Tensor[(6, 15, 9), float64], Tensor[(1, 810), float32]) */;
    %605 = %604.2;
    %606 = cast(%605, dtype="float32") /* ty=Tensor[(1, 810), float32] */;
    %607 = sigmoid(%606) /* ty=Tensor[(1, 810), float32] */;
    %608 = cast(%607, dtype="float64") /* ty=Tensor[(1, 810), float64] */;
    %609 = log2(%608) /* ty=Tensor[(1, 810), float64] */;
    %610 = cast(%609, dtype="int64") /* ty=Tensor[(1, 810), int64] */;
    %611 = shape_of(%607, dtype="int32") /* ty=Tensor[(2), int32] */;
    %612 = cast(%607, dtype="int64") /* ty=Tensor[(1, 810), int64] */;
    %613 = dyn.reshape(%610, %611, newshape=[]) /* ty=Tensor[(?, ?), int64] */;
    %614 = cast(%605, dtype="float64") /* ty=Tensor[(1, 810), float64] */;
    %615 = shape_of(%609, dtype="int32") /* ty=Tensor[(2), int32] */;
    %616 = cast(%609, dtype="float64") /* ty=Tensor[(1, 810), float64] */;
    %617 = dyn.reshape(%614, %615, newshape=[]) /* ty=Tensor[(?, ?), float64] */;
    %618 = %596.0;
    %619 = %603.4;
    %620 = right_shift(%612, %613) /* ty=Tensor[(?, 810), int64] */;
    %621 = @func_5977() /* ty=Tensor[(15, 8, 12), float64] */;
    %622 = mod(%616, %617) /* ty=Tensor[(?, 810), float64] */;
    (%618, %619, %var_6933, meta[relay.Constant][46] /* ty=Tensor[(1536), uint8] */, meta[relay.Constant][47] /* ty=Tensor[(30), float64] */, %620, %621, %622)
  };
  %623(%var_6967) /* ty=(Tensor[(5, 4, 14), bool], Tensor[(30), float64], Tensor[(24, 10), float64], Tensor[(1536), uint8], Tensor[(30), float64], Tensor[(?, 810), int64], Tensor[(15, 8, 12), float64], Tensor[(?, 810), float64]) */
}

def @func_6470() -> (Tensor[(15, 8, 12), bool],) {
  %624 = @func_5907() /* ty=Tensor[(15, 8, 12), float64] */;
  %625 = cast(meta[relay.Constant][48] /* ty=Tensor[(15, 8, 12), float64] */, dtype="bool") /* ty=Tensor[(15, 8, 12), bool] */;
  %626 = shape_of(%624, dtype="int32") /* ty=Tensor[(3), int32] */;
  %627 = cast(%624, dtype="bool") /* ty=Tensor[(15, 8, 12), bool] */;
  %628 = dyn.reshape(%625, %626, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %629 = less_equal(%627, %628) /* ty=Tensor[(15, 8, 12), bool] */;
  (%629,)
}

def @func_7363() -> (Tensor[(15, 8, 12), float64], Tensor[(6, 15, 9), float64], Tensor[(6, 15, 9), float64]) {
  %630 = @func_4194() /* ty=(Tensor[(15, 8, 12), float64], Tensor[(6, 15, 9), float64], Tensor[(1, 810), float32]) */;
  %631 = %630.1;
  %632 = cast(%631, dtype="float32") /* ty=Tensor[(6, 15, 9), float32] */;
  %633 = reshape(%632, newshape=[810]) /* ty=Tensor[(810), float32] */;
  %634 = @func_6114(%633) /* ty=(Tensor[(420), uint8], Tensor[(6, 15, 9), float64], Tensor[(810), float32], Tensor[(10, 3, 2), uint32], Tensor[(60), uint32]) */;
  %635 = @func_5107() /* ty=Tensor[(15, 8, 12), float64] */;
  %636 = %634.1;
  (%635, %631, %636)
}

def @func_8104() -> (Tensor[(15, 8, 12), float64], Tensor[(2156), float32], Tensor[(200), int8], Tensor[(2156), float32], Tensor[(1536), uint8], Tensor[(6, 6, 8), int64], Tensor[(96, 2), float32]) {
  @func_8102() /* ty=(Tensor[(15, 8, 12), float64], Tensor[(2156), float32], Tensor[(200), int8], Tensor[(2156), float32], Tensor[(1536), uint8], Tensor[(6, 6, 8), int64], Tensor[(96, 2), float32]) */
}

def @func_7047() -> (Tensor[(420), float32],) {
  %637 = @func_5263() /* ty=(Tensor[(6, 6, 8), int64], Tensor[(420), uint8], Tensor[(420), uint8], Tensor[(1536), uint8], Tensor[(15, 8, 12), float64]) */;
  %638 = %637.1;
  %639 = cast(%638, dtype="float32") /* ty=Tensor[(420), float32] */;
  %640 = sinh(%639) /* ty=Tensor[(420), float32] */;
  (%640,)
}

def @func_5872() -> (Tensor[(6, 15, 9), int16], Tensor[(15, 8, 12), float64]) {
  %644 = fn () -> (Tensor[(6, 15, 9), int16], Tensor[(15, 8, 12), float64]) {
    %641 = @func_4891() /* ty=(Tensor[(15, 8, 12), float64],) */;
    %642 = @func_4315() /* ty=Tensor[(6, 15, 9), int16] */;
    %643 = %641.0;
    (%642, %643)
  };
  %644() /* ty=(Tensor[(6, 15, 9), int16], Tensor[(15, 8, 12), float64]) */
}

def @func_8212() -> (Tensor[(6, 6, 8), float32], Tensor[(6, 15, 9), int16]) {
  %648 = fn () -> (Tensor[(6, 6, 8), float32], Tensor[(6, 15, 9), int16]) {
    %645 = @func_6333() /* ty=(Tensor[(6, 15, 9), int16],) */;
    %646 = @func_4007() /* ty=Tensor[(6, 6, 8), float32] */;
    %647 = %645.0;
    (%646, %647)
  };
  %648() /* ty=(Tensor[(6, 6, 8), float32], Tensor[(6, 15, 9), int16]) */
}

def @func_4127() -> (Tensor[(6, 6, 8), bool], Tensor[(6, 6, 8), float32], Tensor[(6, 6, 8), float32]) {
  @func_4125() /* ty=(Tensor[(6, 6, 8), bool], Tensor[(6, 6, 8), float32], Tensor[(6, 6, 8), float32]) */
}

def @func_8552() -> Tensor[(15, 8, 12), bool] {
  %650 = fn () -> Tensor[(15, 8, 12), bool] {
    %649 = @func_6470() /* ty=(Tensor[(15, 8, 12), bool],) */;
    %649.0
  };
  %650() /* ty=Tensor[(15, 8, 12), bool] */
}

def @func_8102() -> (Tensor[(15, 8, 12), float64], Tensor[(2156), float32], Tensor[(200), int8], Tensor[(2156), float32], Tensor[(1536), uint8], Tensor[(6, 6, 8), int64], Tensor[(96, 2), float32]) {
  %651 = cast(meta[relay.Constant][49] /* ty=Tensor[(200), int8] */, dtype="int8") /* ty=Tensor[(200), int8] */;
  %652 = cast(meta[relay.Constant][50] /* ty=Tensor[(2156), float32] */, dtype="float32") /* ty=Tensor[(2156), float32] */;
  %653 = cast(meta[relay.Constant][51] /* ty=Tensor[(1536), uint8] */, dtype="uint8") /* ty=Tensor[(1536), uint8] */;
  %654 = reshape(%651, newshape=[200]) /* ty=Tensor[(200), int8] */;
  %655 = reshape(%652, newshape=[2156]) /* ty=Tensor[(2156), float32] */;
  %656 = reshape(%653, newshape=[1536]) /* ty=Tensor[(1536), uint8] */;
  %657 = @func_4749(%654, %655, %656) /* ty=(Tensor[(15, 8, 12), float64], Tensor[(14, 8, 13), int32], Tensor[(200), int8], Tensor[(2156), float32], Tensor[(1536), uint8], Tensor[(1456), int32]) */;
  %658 = cast(meta[relay.Constant][52] /* ty=Tensor[(96, 2), int16] */, dtype="int16") /* ty=Tensor[(96, 2), int16] */;
  %659 = reshape(%658, newshape=[2, 96]) /* ty=Tensor[(2, 96), int16] */;
  %660 = @func_6268(%659) /* ty=(Tensor[(6, 6, 8), int64], Tensor[(12, 2, 8), int16], Tensor[(2, 96), int16]) */;
  %661 = cast(meta[relay.Constant][52] /* ty=Tensor[(96, 2), int16] */, dtype="float32") /* ty=Tensor[(96, 2), float32] */;
  %662 = @func_7955() /* ty=Tensor[(15, 8, 12), float64] */;
  %663 = %657.3;
  %664 = %660.0;
  %665 = log(%661) /* ty=Tensor[(96, 2), float32] */;
  (%662, %663, meta[relay.Constant][49] /* ty=Tensor[(200), int8] */, meta[relay.Constant][50] /* ty=Tensor[(2156), float32] */, meta[relay.Constant][51] /* ty=Tensor[(1536), uint8] */, %664, %665)
}

def @func_6874() -> Tensor[(6, 6, 8), bool] {
  @func_6872() /* ty=Tensor[(6, 6, 8), bool] */
}

def @func_5184(%var_5182: Tensor[(6, 6, 8), bool]) -> (Tensor[(6, 6, 8), float64], Tensor[(6, 6, 8), float32]) {
  @func_5181(%var_5182) /* ty=(Tensor[(6, 6, 8), float64], Tensor[(6, 6, 8), float32]) */
}

def @func_8406() -> Tensor[(6, 15, 9), int16] {
  @func_4315() /* ty=Tensor[(6, 15, 9), int16] */
}

def @func_7491(%var_7485: Tensor[(2, 8, 1), float64]) -> Tensor[(2, 8, 1), float64] {
  %666 = cast(%var_7485, dtype="float64") /* ty=Tensor[(2, 8, 1), float64] */;
  acosh(%666) /* ty=Tensor[(2, 8, 1), float64] */
}

def @func_8695() -> Tensor[(15, 8, 12), float64] {
  %668 = fn () -> Tensor[(15, 8, 12), float64] {
    %667 = @func_5871() /* ty=(Tensor[(6, 15, 9), int16], Tensor[(15, 8, 12), float64]) */;
    %667.1
  };
  %668() /* ty=Tensor[(15, 8, 12), float64] */
}

def @func_3616(%var_3615: Tensor[(12, 2, 8), int16]) -> Tensor[(12, 2, 8), int16] {
  %673 = fn (%var_3593: Tensor[(12, 2, 8), int16]) -> Tensor[(12, 2, 8), int16] {
    %669 = cast(meta[relay.Constant][53] /* ty=Tensor[(12, 2, 8), int16] */, dtype="int16") /* ty=Tensor[(12, 2, 8), int16] */;
    %670 = shape_of(%var_3593, dtype="int32") /* ty=Tensor[(3), int32] */;
    %671 = cast(%var_3593, dtype="int16") /* ty=Tensor[(12, 2, 8), int16] */;
    %672 = dyn.reshape(%669, %670, newshape=[]) /* ty=Tensor[(?, ?, ?), int16] */;
    bitwise_xor(%671, %672) /* ty=Tensor[(12, 2, 8), int16] */
  };
  %673(%var_3615) /* ty=Tensor[(12, 2, 8), int16] */
}

def @func_2586(%var_2566: Tensor[(14, 11, 14), float32], %var_2567: Tensor[(14, 11, 14), float32]) -> (Tensor[(14, 11, 14), float32], Tensor[(14, 11, 14), float64]) {
  %674 = cast(%var_2567, dtype="float32") /* ty=Tensor[(14, 11, 14), float32] */;
  %675 = shape_of(%var_2566, dtype="int32") /* ty=Tensor[(3), int32] */;
  %676 = cast(%var_2566, dtype="float32") /* ty=Tensor[(14, 11, 14), float32] */;
  %677 = dyn.reshape(%674, %675, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %678 = cast(%var_2567, dtype="float64") /* ty=Tensor[(14, 11, 14), float64] */;
  %679 = cosh(%678) /* ty=Tensor[(14, 11, 14), float64] */;
  %680 = cast(%679, dtype="float64") /* ty=Tensor[(14, 11, 14), float64] */;
  %681 = subtract(%676, %677) /* ty=Tensor[(14, 11, 14), float32] */;
  %682 = log2(%680) /* ty=Tensor[(14, 11, 14), float64] */;
  (%681, %682)
}

def @func_7494(%var_7492: Tensor[(2, 8, 1), float64]) -> Tensor[(2, 8, 1), float64] {
  @func_7491(%var_7492) /* ty=Tensor[(2, 8, 1), float64] */
}

def @func_6228(%var_6162: Tensor[(1536), uint8], %var_6163: Tensor[(182), int8], %var_6191: Tensor[(1, 2156), float32], %var_6192: Tensor[(1456), int32]) -> (Tensor[(5, 4, 14), bool], Tensor[(1, 810), float32], Tensor[(5, 10, 9), bool], Tensor[(450), float32], Tensor[(1536), uint8], Tensor[(182), int8], Tensor[(30), float64], Tensor[(2, 1, 6), float32], Tensor[(200), int8], Tensor[(1, 2156), float32], Tensor[(1456), int32], Tensor[(15, 8, 12), float64], Tensor[(200), float32]) {
  %683 = @func_4194() /* ty=(Tensor[(15, 8, 12), float64], Tensor[(6, 15, 9), float64], Tensor[(1, 810), float32]) */;
  %684 = cast(meta[relay.Constant][54] /* ty=Tensor[(450), float32] */, dtype="float32") /* ty=Tensor[(450), float32] */;
  %685 = cast(meta[relay.Constant][54] /* ty=Tensor[(450), float32] */, dtype="float32") /* ty=Tensor[(450), float32] */;
  %686 = cast(%var_6162, dtype="uint8") /* ty=Tensor[(1536), uint8] */;
  %687 = cast(%var_6163, dtype="int8") /* ty=Tensor[(182), int8] */;
  %688 = cast(meta[relay.Constant][55] /* ty=Tensor[(30), float64] */, dtype="float64") /* ty=Tensor[(30), float64] */;
  %689 = reshape(%684, newshape=[5, 10, 9]) /* ty=Tensor[(5, 10, 9), float32] */;
  %690 = reshape(%685, newshape=[5, 10, 9]) /* ty=Tensor[(5, 10, 9), float32] */;
  %691 = reshape(%686, newshape=[1536]) /* ty=Tensor[(1536), uint8] */;
  %692 = reshape(%687, newshape=[182]) /* ty=Tensor[(182), int8] */;
  %693 = reshape(%688, newshape=[30]) /* ty=Tensor[(30), float64] */;
  %694 = @func_1836(%689, %690, %691, %692, %693) /* ty=(Tensor[(12, 16, 8), bool], Tensor[(1536), uint8], Tensor[(20), uint64], Tensor[(182), int8], Tensor[(2, 2, 5), uint64], Tensor[(10, 13, 3), float64], Tensor[(30), float64], Tensor[(390), float64], Tensor[(5, 10, 9), bool], Tensor[(5, 10, 9), bool]) */;
  %695 = cast(meta[relay.Constant][56] /* ty=Tensor[(200), int8] */, dtype="int8") /* ty=Tensor[(200), int8] */;
  %696 = cast(%var_6191, dtype="float32") /* ty=Tensor[(1, 2156), float32] */;
  %697 = cast(%var_6162, dtype="uint8") /* ty=Tensor[(1536), uint8] */;
  %698 = cast(%var_6192, dtype="int32") /* ty=Tensor[(1456), int32] */;
  %699 = reshape(%695, newshape=[200]) /* ty=Tensor[(200), int8] */;
  %700 = reshape(%696, newshape=[2156]) /* ty=Tensor[(2156), float32] */;
  %701 = reshape(%697, newshape=[1536]) /* ty=Tensor[(1536), uint8] */;
  %702 = reshape(%698, newshape=[2, 728]) /* ty=Tensor[(2, 728), int32] */;
  %703 = @func_3690(%699, %700, %701, %702) /* ty=(Tensor[(5, 5, 8), int8], Tensor[(200), int8], Tensor[(14, 11, 14), float32], Tensor[(2156), float32], Tensor[(20), uint64], Tensor[(1536), uint8], Tensor[(14, 8, 13), int32], Tensor[(2, 728), int32], Tensor[(2, 1, 6), float32]) */;
  %704 = @func_5107() /* ty=Tensor[(15, 8, 12), float64] */;
  %705 = cast(%704, dtype="float64") /* ty=Tensor[(15, 8, 12), float64] */;
  %706 = cast(meta[relay.Constant][56] /* ty=Tensor[(200), int8] */, dtype="int8") /* ty=Tensor[(200), int8] */;
  %707 = reshape(%705, newshape=[1440]) /* ty=Tensor[(1440), float64] */;
  %708 = reshape(%706, newshape=[200]) /* ty=Tensor[(200), int8] */;
  %709 = @func_5296(%707, %708) /* ty=(Tensor[(6, 6, 8), float32], Tensor[(15, 8, 12), int32], Tensor[(1440), float64], Tensor[(14, 8, 13), int32], Tensor[(1456), int32], Tensor[(5, 5, 8), int8], Tensor[(200), int8]) */;
  %710 = %709.6;
  %711 = cast(%710, dtype="float32") /* ty=Tensor[(200), float32] */;
  %712 = @func_5880() /* ty=Tensor[(5, 4, 14), bool] */;
  %713 = %683.2;
  %714 = %694.9;
  %715 = %703.8;
  %716 = log10(%711) /* ty=Tensor[(200), float32] */;
  (%712, %713, %714, meta[relay.Constant][54] /* ty=Tensor[(450), float32] */, %var_6162, %var_6163, meta[relay.Constant][55] /* ty=Tensor[(30), float64] */, %715, meta[relay.Constant][56] /* ty=Tensor[(200), int8] */, %var_6191, %var_6192, %704, %716)
}

def @func_8989() -> (Tensor[(15, 8, 12), float64], Tensor[(15, 8, 12), bool], Tensor[(15, 8, 12), float64], Tensor[(6, 6, 8), float32], Tensor[(12, 2, 8), int16], Tensor[(192), int16], Tensor[(15, 8, 12), bool]) {
  @func_8987() /* ty=(Tensor[(15, 8, 12), float64], Tensor[(15, 8, 12), bool], Tensor[(15, 8, 12), float64], Tensor[(6, 6, 8), float32], Tensor[(12, 2, 8), int16], Tensor[(192), int16], Tensor[(15, 8, 12), bool]) */
}

def @func_7424() -> (Tensor[(6, 6, 8), float32],) {
  %719 = fn () -> (Tensor[(6, 6, 8), float32],) {
    %717 = @func_4125() /* ty=(Tensor[(6, 6, 8), bool], Tensor[(6, 6, 8), float32], Tensor[(6, 6, 8), float32]) */;
    %718 = %717.2;
    (%718,)
  };
  %719() /* ty=(Tensor[(6, 6, 8), float32],) */
}

def @func_5881() -> Tensor[(5, 4, 14), bool] {
  %724 = fn () -> Tensor[(5, 4, 14), bool] {
    %720 = cast(meta[relay.Constant][58] /* ty=Tensor[(5, 4, 14), int8] */, dtype="bool") /* ty=Tensor[(5, 4, 14), bool] */;
    %721 = shape_of(meta[relay.Constant][57] /* ty=Tensor[(5, 4, 14), int8] */, dtype="int32") /* ty=Tensor[(3), int32] */;
    %722 = cast(meta[relay.Constant][57] /* ty=Tensor[(5, 4, 14), int8] */, dtype="bool") /* ty=Tensor[(5, 4, 14), bool] */;
    %723 = dyn.reshape(%720, %721, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    equal(%722, %723) /* ty=Tensor[(5, 4, 14), bool] */
  };
  %724() /* ty=Tensor[(5, 4, 14), bool] */
}

def @func_4891() -> (Tensor[(15, 8, 12), float64],) {
  %725 = @func_4194() /* ty=(Tensor[(15, 8, 12), float64], Tensor[(6, 15, 9), float64], Tensor[(1, 810), float32]) */;
  %726 = %725.0;
  (%726,)
}

def @func_6268(%var_6264: Tensor[(2, 96), int16]) -> (Tensor[(6, 6, 8), int64], Tensor[(12, 2, 8), int16], Tensor[(2, 96), int16]) {
  %727 = @func_5263() /* ty=(Tensor[(6, 6, 8), int64], Tensor[(420), uint8], Tensor[(420), uint8], Tensor[(1536), uint8], Tensor[(15, 8, 12), float64]) */;
  %728 = cast(%var_6264, dtype="int16") /* ty=Tensor[(2, 96), int16] */;
  %729 = reshape(%728, newshape=[12, 2, 8]) /* ty=Tensor[(12, 2, 8), int16] */;
  %730 = %727.0;
  %731 = @func_3614(%729) /* ty=Tensor[(12, 2, 8), int16] */;
  (%730, %731, %var_6264)
}

def @func_6789(%var_6787: Tensor[(65, 6), float64], %var_6788: Tensor[(384, 4), uint8]) -> (Tensor[(15, 8, 12), bool], Tensor[(5, 4, 14), bool], Tensor[(450), float32], Tensor[(65, 6), float64], Tensor[(384, 4), uint8], Tensor[(240), float64], Tensor[(182), int8]) {
  %745 = fn (%var_6781: Tensor[(65, 6), float64], %var_6782: Tensor[(384, 4), uint8]) -> (Tensor[(15, 8, 12), bool], Tensor[(5, 4, 14), bool], Tensor[(450), float32], Tensor[(65, 6), float64], Tensor[(384, 4), uint8], Tensor[(240), float64], Tensor[(182), int8]) {
    %732 = @func_6316() /* ty=(Tensor[(15, 8, 12), bool],) */;
    %733 = cast(%var_6781, dtype="float64") /* ty=Tensor[(65, 6), float64] */;
    %734 = cast(%var_6782, dtype="uint8") /* ty=Tensor[(384, 4), uint8] */;
    %735 = cast(meta[relay.Constant][59] /* ty=Tensor[(240), float64] */, dtype="float64") /* ty=Tensor[(240), float64] */;
    %736 = cast(meta[relay.Constant][60] /* ty=Tensor[(182), int8] */, dtype="int8") /* ty=Tensor[(182), int8] */;
    %737 = reshape(%733, newshape=[390]) /* ty=Tensor[(390), float64] */;
    %738 = reshape(%734, newshape=[1536]) /* ty=Tensor[(1536), uint8] */;
    %739 = reshape(%735, newshape=[240]) /* ty=Tensor[(240), float64] */;
    %740 = reshape(%736, newshape=[182]) /* ty=Tensor[(182), int8] */;
    %741 = @func_2310(%737, %738, %739, %740) /* ty=(Tensor[(3, 12, 16), float64], Tensor[(10, 13, 3), float64], Tensor[(1, 30), float64], Tensor[(390), float64], Tensor[(2, 2, 5), uint64], Tensor[(1536), uint8], Tensor[(450), float32], Tensor[(240), float64], Tensor[(2, 13, 7), bool], Tensor[(182), int8], Tensor[(12, 16, 8), bool]) */;
    %742 = %732.0;
    %743 = @func_5880() /* ty=Tensor[(5, 4, 14), bool] */;
    %744 = %741.6;
    (%742, %743, %744, %var_6781, %var_6782, meta[relay.Constant][59] /* ty=Tensor[(240), float64] */, meta[relay.Constant][60] /* ty=Tensor[(182), int8] */)
  };
  %745(%var_6787, %var_6788) /* ty=(Tensor[(15, 8, 12), bool], Tensor[(5, 4, 14), bool], Tensor[(450), float32], Tensor[(65, 6), float64], Tensor[(384, 4), uint8], Tensor[(240), float64], Tensor[(182), int8]) */
}

def @func_6333() -> (Tensor[(6, 15, 9), int16],) {
  %746 = @func_5871() /* ty=(Tensor[(6, 15, 9), int16], Tensor[(15, 8, 12), float64]) */;
  %747 = %746.0;
  (%747,)
}

def @func_6390(%var_6379: Tensor[(1536), uint8], %var_6380: Tensor[(1456), int32]) -> (Tensor[(6, 15, 9), int16], Tensor[(2, 728), int32], Tensor[(200), int8], Tensor[(2156), float32], Tensor[(1536), uint8], Tensor[(1456), int32]) {
  %748 = @func_6333() /* ty=(Tensor[(6, 15, 9), int16],) */;
  %749 = cast(meta[relay.Constant][61] /* ty=Tensor[(200), int8] */, dtype="int8") /* ty=Tensor[(200), int8] */;
  %750 = cast(meta[relay.Constant][62] /* ty=Tensor[(2156), float32] */, dtype="float32") /* ty=Tensor[(2156), float32] */;
  %751 = cast(%var_6379, dtype="uint8") /* ty=Tensor[(1536), uint8] */;
  %752 = cast(%var_6380, dtype="int32") /* ty=Tensor[(1456), int32] */;
  %753 = reshape(%749, newshape=[200]) /* ty=Tensor[(200), int8] */;
  %754 = reshape(%750, newshape=[2156]) /* ty=Tensor[(2156), float32] */;
  %755 = reshape(%751, newshape=[1536]) /* ty=Tensor[(1536), uint8] */;
  %756 = reshape(%752, newshape=[2, 728]) /* ty=Tensor[(2, 728), int32] */;
  %757 = @func_3690(%753, %754, %755, %756) /* ty=(Tensor[(5, 5, 8), int8], Tensor[(200), int8], Tensor[(14, 11, 14), float32], Tensor[(2156), float32], Tensor[(20), uint64], Tensor[(1536), uint8], Tensor[(14, 8, 13), int32], Tensor[(2, 728), int32], Tensor[(2, 1, 6), float32]) */;
  %758 = %748.0;
  %759 = %757.7;
  (%758, %759, meta[relay.Constant][61] /* ty=Tensor[(200), int8] */, meta[relay.Constant][62] /* ty=Tensor[(2156), float32] */, %var_6379, %var_6380)
}

def @func_7171(%var_7153: Tensor[(182), int8], %var_7159: Tensor[(1536), uint8]) -> (Tensor[(15, 8, 12), float64], Tensor[(6, 6, 8), bool], Tensor[(450), float32], Tensor[(182), int8], Tensor[(1, 810), float32], Tensor[(336), float64], Tensor[(192), int16], Tensor[(1536), uint8]) {
  %760 = @func_5871() /* ty=(Tensor[(6, 15, 9), int16], Tensor[(15, 8, 12), float64]) */;
  %761 = cast(meta[relay.Constant][63] /* ty=Tensor[(450), float32] */, dtype="float32") /* ty=Tensor[(450), float32] */;
  %762 = cast(%var_7153, dtype="int8") /* ty=Tensor[(182), int8] */;
  %763 = reshape(%761, newshape=[450]) /* ty=Tensor[(450), float32] */;
  %764 = reshape(%762, newshape=[13, 14]) /* ty=Tensor[(13, 14), int8] */;
  %765 = @func_5658(%763, %764) /* ty=(Tensor[(15, 8, 12), float64], Tensor[(30), float64], Tensor[(450), float32], Tensor[(1536), uint8], Tensor[(13, 14), int8], Tensor[(30), float64], Tensor[(6, 6, 8), bool]) */;
  %766 = cast(meta[relay.Constant][64] /* ty=Tensor[(336), float64] */, dtype="float64") /* ty=Tensor[(336), float64] */;
  %767 = cast(meta[relay.Constant][64] /* ty=Tensor[(336), float64] */, dtype="float64") /* ty=Tensor[(336), float64] */;
  %768 = cast(meta[relay.Constant][65] /* ty=Tensor[(192), int16] */, dtype="int16") /* ty=Tensor[(192), int16] */;
  %769 = cast(%var_7159, dtype="uint8") /* ty=Tensor[(1536), uint8] */;
  %770 = cast(%var_7153, dtype="int8") /* ty=Tensor[(182), int8] */;
  %771 = reshape(%766, newshape=[7, 4, 12]) /* ty=Tensor[(7, 4, 12), float64] */;
  %772 = reshape(%767, newshape=[7, 4, 12]) /* ty=Tensor[(7, 4, 12), float64] */;
  %773 = reshape(%768, newshape=[192]) /* ty=Tensor[(192), int16] */;
  %774 = reshape(%769, newshape=[1, 1536]) /* ty=Tensor[(1, 1536), uint8] */;
  %775 = reshape(%770, newshape=[182]) /* ty=Tensor[(182), int8] */;
  %776 = @func_4571(%771, %772, %773, %774, %775) /* ty=(Tensor[(7, 4, 12), float32], Tensor[(12, 2, 8), int16], Tensor[(192), int16], Tensor[(1, 810), float32], Tensor[(7, 4, 12), uint8], Tensor[(2, 2, 5), uint64], Tensor[(390), float64], Tensor[(1, 1536), uint8], Tensor[(240), float64], Tensor[(182), int8]) */;
  %777 = %760.1;
  %778 = %765.6;
  %779 = %776.3;
  (%777, %778, meta[relay.Constant][63] /* ty=Tensor[(450), float32] */, %var_7153, %779, meta[relay.Constant][64] /* ty=Tensor[(336), float64] */, meta[relay.Constant][65] /* ty=Tensor[(192), int16] */, %var_7159)
}

def @func_4657(%var_4649: Tensor[(420), uint8], %var_4650: Tensor[(1536), uint8]) -> (Tensor[(6, 6, 8), float32], Tensor[(420), uint8], Tensor[(420), uint8], Tensor[(1536), uint8]) {
  %780 = cast(%var_4649, dtype="uint8") /* ty=Tensor[(420), uint8] */;
  %781 = cast(%var_4650, dtype="uint8") /* ty=Tensor[(1536), uint8] */;
  %782 = reshape(%780, newshape=[420]) /* ty=Tensor[(420), uint8] */;
  %783 = reshape(%781, newshape=[1536]) /* ty=Tensor[(1536), uint8] */;
  %784 = @func_3879(%782, %783) /* ty=(Tensor[(15, 8, 12), float64], Tensor[(2, 2, 5), uint64], Tensor[(420), uint8], Tensor[(1536), uint8]) */;
  %785 = @func_4007() /* ty=Tensor[(6, 6, 8), float32] */;
  %786 = %784.2;
  (%785, %786, %var_4649, %var_4650)
}

def @func_4196() -> (Tensor[(15, 8, 12), float64], Tensor[(6, 15, 9), float64], Tensor[(1, 810), float32]) {
  @func_4194() /* ty=(Tensor[(15, 8, 12), float64], Tensor[(6, 15, 9), float64], Tensor[(1, 810), float32]) */
}

def @func_9426() -> Tensor[(2156), float32] {
  %788 = fn () -> Tensor[(2156), float32] {
    %787 = @func_8102() /* ty=(Tensor[(15, 8, 12), float64], Tensor[(2156), float32], Tensor[(200), int8], Tensor[(2156), float32], Tensor[(1536), uint8], Tensor[(6, 6, 8), int64], Tensor[(96, 2), float32]) */;
    %787.1
  };
  %788() /* ty=Tensor[(2156), float32] */
}

def @func_4396(%var_4394: Tensor[(1, 13, 1), float32], %var_4395: Tensor[(1536), uint8]) -> (Tensor[(1536), uint8], Tensor[(420), uint8], Tensor[(1536), uint8], Tensor[(?, 13, ?), bool], Tensor[(20), uint64], Tensor[(182, 1), int8], Tensor[(15, 8, 12), float64], Tensor[(?, 13, ?), int32]) {
  %816 = fn (%var_4317: Tensor[(1, 13, 1), float32], %var_4352: Tensor[(1536), uint8]) -> (Tensor[(1536), uint8], Tensor[(420), uint8], Tensor[(1536), uint8], Tensor[(?, 13, ?), bool], Tensor[(20), uint64], Tensor[(182, 1), int8], Tensor[(15, 8, 12), float64], Tensor[(?, 13, ?), int32]) {
    %789 = cast(meta[relay.Constant][66] /* ty=Tensor[(420), uint8] */, dtype="uint8") /* ty=Tensor[(420), uint8] */;
    %790 = cast(%var_4352, dtype="uint8") /* ty=Tensor[(1536), uint8] */;
    %791 = reshape(%789, newshape=[420]) /* ty=Tensor[(420), uint8] */;
    %792 = reshape(%790, newshape=[1536]) /* ty=Tensor[(1536), uint8] */;
    %793 = @func_3879(%791, %792) /* ty=(Tensor[(15, 8, 12), float64], Tensor[(2, 2, 5), uint64], Tensor[(420), uint8], Tensor[(1536), uint8]) */;
    %794 = cast(%var_4317, dtype="float32") /* ty=Tensor[(1, 13, 1), float32] */;
    %795 = exp(%794) /* ty=Tensor[(1, 13, 1), float32] */;
    %796 = cast(%var_4317, dtype="float32") /* ty=Tensor[(1, 13, 1), float32] */;
    %797 = log10(%796) /* ty=Tensor[(1, 13, 1), float32] */;
    %798 = cast(%797, dtype="bool") /* ty=Tensor[(1, 13, 1), bool] */;
    %799 = shape_of(%795, dtype="int32") /* ty=Tensor[(3), int32] */;
    %800 = cast(%795, dtype="bool") /* ty=Tensor[(1, 13, 1), bool] */;
    %801 = dyn.reshape(%798, %799, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    %802 = cast(meta[relay.Constant][67] /* ty=Tensor[(182, 1), int8] */, dtype="int8") /* ty=Tensor[(182, 1), int8] */;
    %803 = reshape(%802, newshape=[2, 13, 7]) /* ty=Tensor[(2, 13, 7), int8] */;
    %804 = @func_1527(%803) /* ty=(Tensor[(2, 13, 7), bool], Tensor[(2, 13, 7), int16], Tensor[(2, 2, 5), uint64], Tensor[(20), uint64], Tensor[(14, 8, 13), int32]) */;
    %805 = cast(%797, dtype="float32") /* ty=Tensor[(1, 13, 1), float32] */;
    %806 = cos(%805) /* ty=Tensor[(1, 13, 1), float32] */;
    %807 = cast(%var_4317, dtype="int32") /* ty=Tensor[(1, 13, 1), int32] */;
    %808 = shape_of(%806, dtype="int32") /* ty=Tensor[(3), int32] */;
    %809 = cast(%806, dtype="int32") /* ty=Tensor[(1, 13, 1), int32] */;
    %810 = dyn.reshape(%807, %808, newshape=[]) /* ty=Tensor[(?, ?, ?), int32] */;
    %811 = %793.3;
    %812 = greater_equal(%800, %801) /* ty=Tensor[(?, 13, ?), bool] */;
    %813 = %804.3;
    %814 = @func_3825() /* ty=Tensor[(15, 8, 12), float64] */;
    %815 = left_shift(%809, %810) /* ty=Tensor[(?, 13, ?), int32] */;
    (%811, meta[relay.Constant][66] /* ty=Tensor[(420), uint8] */, %var_4352, %812, %813, meta[relay.Constant][67] /* ty=Tensor[(182, 1), int8] */, %814, %815)
  };
  %816(%var_4394, %var_4395) /* ty=(Tensor[(1536), uint8], Tensor[(420), uint8], Tensor[(1536), uint8], Tensor[(?, 13, ?), bool], Tensor[(20), uint64], Tensor[(182, 1), int8], Tensor[(15, 8, 12), float64], Tensor[(?, 13, ?), int32]) */
}

def @func_7136() -> (Tensor[(15, 8, 12), float64],) {
  %819 = fn () -> (Tensor[(15, 8, 12), float64],) {
    %817 = @func_4809() /* ty=(Tensor[(15, 8, 12), float64], Tensor[(15, 8, 12), float64]) */;
    %818 = %817.0;
    (%818,)
  };
  %819() /* ty=(Tensor[(15, 8, 12), float64],) */
}

def @func_6539(%var_6536: Tensor[(20), uint64], %var_6537: Tensor[(1440), float64], %var_6538: Tensor[(16, 20), float64]) -> (Tensor[(5, 4, 14), bool], Tensor[(20), uint64], Tensor[(15, 8, 12), uint16], Tensor[(1440), float64], Tensor[(16, 20), bool], Tensor[(15, 8, 12), float64]) {
  %838 = fn (%var_6497: Tensor[(20), uint64], %var_6509: Tensor[(1440), float64], %var_6523: Tensor[(16, 20), float64]) -> (Tensor[(5, 4, 14), bool], Tensor[(20), uint64], Tensor[(15, 8, 12), uint16], Tensor[(1440), float64], Tensor[(16, 20), bool], Tensor[(15, 8, 12), float64]) {
    %820 = @func_6022() /* ty=(Tensor[(5, 4, 14), bool],) */;
    %821 = cast(%var_6509, dtype="float64") /* ty=Tensor[(1440), float64] */;
    %822 = cast(%var_6509, dtype="float64") /* ty=Tensor[(1440), float64] */;
    %823 = reshape(%821, newshape=[15, 8, 12]) /* ty=Tensor[(15, 8, 12), float64] */;
    %824 = reshape(%822, newshape=[15, 8, 12]) /* ty=Tensor[(15, 8, 12), float64] */;
    %825 = @func_3956(%823, %824) /* ty=(Tensor[(15, 8, 12), uint16], Tensor[(15, 8, 12), int32]) */;
    %826 = cast(%var_6497, dtype="uint64") /* ty=Tensor[(20), uint64] */;
    %827 = reshape(%826, newshape=[1, 20]) /* ty=Tensor[(1, 20), uint64] */;
    %828 = @func_5545(%827) /* ty=(Tensor[(15, 8, 12), float64], Tensor[(15, 8, 12), float64], Tensor[(?, 20), bool]) */;
    %829 = %828.2;
    %830 = cast(%829, dtype="float64") /* ty=Tensor[(?, 20), float64] */;
    %831 = atan(%830) /* ty=Tensor[(?, 20), float64] */;
    %832 = cast(%831, dtype="bool") /* ty=Tensor[(?, 20), bool] */;
    %833 = cast(%var_6523, dtype="bool") /* ty=Tensor[(16, 20), bool] */;
    %834 = %820.0;
    %835 = %825.0;
    %836 = less(%832, %833) /* ty=Tensor[(16, 20), bool] */;
    %837 = @func_5907() /* ty=Tensor[(15, 8, 12), float64] */;
    (%834, %var_6497, %835, %var_6509, %836, %837)
  };
  %838(%var_6536, %var_6537, %var_6538) /* ty=(Tensor[(5, 4, 14), bool], Tensor[(20), uint64], Tensor[(15, 8, 12), uint16], Tensor[(1440), float64], Tensor[(16, 20), bool], Tensor[(15, 8, 12), float64]) */
}

def @func_4809() -> (Tensor[(15, 8, 12), float64], Tensor[(15, 8, 12), float64]) {
  %839 = @func_3825() /* ty=Tensor[(15, 8, 12), float64] */;
  %840 = @func_3825() /* ty=Tensor[(15, 8, 12), float64] */;
  (%839, %840)
}

def @func_8354() -> (Tensor[(3, 11, 10), float32],) {
  %841 = cast(meta[relay.Constant][68] /* ty=Tensor[(3, 11, 10), float32] */, dtype="float32") /* ty=Tensor[(3, 11, 10), float32] */;
  %842 = sqrt(%841) /* ty=Tensor[(3, 11, 10), float32] */;
  (%842,)
}

def @func_5321(%var_5319: Tensor[(1, 16, 14), float32]) -> (Tensor[(1, 16, 14), float32], Tensor[(15, 8, 12), float64], Tensor[(6, 6, 8), bool]) {
  @func_5318(%var_5319) /* ty=(Tensor[(1, 16, 14), float32], Tensor[(15, 8, 12), float64], Tensor[(6, 6, 8), bool]) */
}

def @func_5181(%var_5164: Tensor[(6, 6, 8), bool]) -> (Tensor[(6, 6, 8), float64], Tensor[(6, 6, 8), float32]) {
  %843 = @func_4125() /* ty=(Tensor[(6, 6, 8), bool], Tensor[(6, 6, 8), float32], Tensor[(6, 6, 8), float32]) */;
  %844 = %843.0;
  %845 = cast(%var_5164, dtype="float64") /* ty=Tensor[(6, 6, 8), float64] */;
  %846 = shape_of(%844, dtype="int32") /* ty=Tensor[(3), int32] */;
  %847 = cast(%844, dtype="float64") /* ty=Tensor[(6, 6, 8), float64] */;
  %848 = dyn.reshape(%845, %846, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %849 = cast(%var_5164, dtype="float32") /* ty=Tensor[(6, 6, 8), float32] */;
  %850 = floor_mod(%847, %848) /* ty=Tensor[(6, 6, 8), float64] */;
  %851 = rsqrt(%849) /* ty=Tensor[(6, 6, 8), float32] */;
  (%850, %851)
}

def @func_8782() -> Tensor[(6, 6, 8), bool] {
  @func_8780() /* ty=Tensor[(6, 6, 8), bool] */
}

def @func_7473(%var_7472: Tensor[(6, 7, 12), float64]) -> (Tensor[(6, 7, 12), float64],) {
  %854 = fn (%var_7435: Tensor[(6, 7, 12), float64]) -> (Tensor[(6, 7, 12), float64],) {
    %852 = cast(%var_7435, dtype="float64") /* ty=Tensor[(6, 7, 12), float64] */;
    %853 = asinh(%852) /* ty=Tensor[(6, 7, 12), float64] */;
    (%853,)
  };
  %854(%var_7472) /* ty=(Tensor[(6, 7, 12), float64],) */
}

def @func_5547(%var_5546: Tensor[(1, 20), uint64]) -> (Tensor[(15, 8, 12), float64], Tensor[(15, 8, 12), float64], Tensor[(?, 20), bool]) {
  %869 = fn (%var_5538: Tensor[(1, 20), uint64]) -> (Tensor[(15, 8, 12), float64], Tensor[(15, 8, 12), float64], Tensor[(?, 20), bool]) {
    %855 = @func_4891() /* ty=(Tensor[(15, 8, 12), float64],) */;
    %856 = cast(%var_5538, dtype="uint64") /* ty=Tensor[(1, 20), uint64] */;
    %857 = cast(%var_5538, dtype="uint64") /* ty=Tensor[(1, 20), uint64] */;
    %858 = reshape(%856, newshape=[2, 2, 5]) /* ty=Tensor[(2, 2, 5), uint64] */;
    %859 = reshape(%857, newshape=[2, 2, 5]) /* ty=Tensor[(2, 2, 5), uint64] */;
    %860 = @func_571(%858, %859) /* ty=(Tensor[(2, 2, 5), uint64], Tensor[(14, 8, 13), int32], Tensor[(1456), int32]) */;
    %861 = %860.0;
    %862 = cast(%861, dtype="bool") /* ty=Tensor[(2, 2, 5), bool] */;
    %863 = shape_of(%var_5538, dtype="int32") /* ty=Tensor[(2), int32] */;
    %864 = cast(%var_5538, dtype="bool") /* ty=Tensor[(1, 20), bool] */;
    %865 = dyn.reshape(%862, %863, newshape=[]) /* ty=Tensor[(?, ?), bool] */;
    %866 = %855.0;
    %867 = @func_5132() /* ty=Tensor[(15, 8, 12), float64] */;
    %868 = not_equal(%864, %865) /* ty=Tensor[(?, 20), bool] */;
    (%866, %867, %868)
  };
  %869(%var_5546) /* ty=(Tensor[(15, 8, 12), float64], Tensor[(15, 8, 12), float64], Tensor[(?, 20), bool]) */
}

def @func_4029() -> (Tensor[(15, 8, 12), float64],) {
  %870 = @func_3825() /* ty=Tensor[(15, 8, 12), float64] */;
  (%870,)
}

def @func_7655() -> Tensor[(15, 8, 12), float64] {
  %872 = fn () -> Tensor[(15, 8, 12), float64] {
    %871 = @func_4809() /* ty=(Tensor[(15, 8, 12), float64], Tensor[(15, 8, 12), float64]) */;
    %871.0
  };
  %872() /* ty=Tensor[(15, 8, 12), float64] */
}

def @func_8614() -> Tensor[(15, 8, 12), float64] {
  %874 = fn () -> Tensor[(15, 8, 12), float64] {
    %873 = @func_5481() /* ty=(Tensor[(15, 8, 12), float64], Tensor[(15, 8, 12), float64]) */;
    %873.1
  };
  %874() /* ty=Tensor[(15, 8, 12), float64] */
}

def @func_2804(%var_2788: Tensor[(5, 2, 13), float64]) -> Tensor[(5, 2, 13), float64] {
  %875 = cast(%var_2788, dtype="float64") /* ty=Tensor[(5, 2, 13), float64] */;
  atanh(%875) /* ty=Tensor[(5, 2, 13), float64] */
}

def @func_2209(%var_2192: Tensor[(5, 6, 8), float64], %var_2201: Tensor[(1536), uint8], %var_2203: Tensor[(30), float64]) -> (Tensor[(10, 13, 3), float64], Tensor[(450), float32], Tensor[(1536), uint8], Tensor[(1, 182), int8], Tensor[(30), float64], Tensor[(5, 6, 8), float32]) {
  %876 = cast(meta[relay.Constant][69] /* ty=Tensor[(450), float32] */, dtype="float32") /* ty=Tensor[(450), float32] */;
  %877 = cast(meta[relay.Constant][69] /* ty=Tensor[(450), float32] */, dtype="float32") /* ty=Tensor[(450), float32] */;
  %878 = cast(%var_2201, dtype="uint8") /* ty=Tensor[(1536), uint8] */;
  %879 = cast(meta[relay.Constant][70] /* ty=Tensor[(1, 182), int8] */, dtype="int8") /* ty=Tensor[(1, 182), int8] */;
  %880 = cast(%var_2203, dtype="float64") /* ty=Tensor[(30), float64] */;
  %881 = reshape(%876, newshape=[5, 10, 9]) /* ty=Tensor[(5, 10, 9), float32] */;
  %882 = reshape(%877, newshape=[5, 10, 9]) /* ty=Tensor[(5, 10, 9), float32] */;
  %883 = reshape(%878, newshape=[1536]) /* ty=Tensor[(1536), uint8] */;
  %884 = reshape(%879, newshape=[182]) /* ty=Tensor[(182), int8] */;
  %885 = reshape(%880, newshape=[30]) /* ty=Tensor[(30), float64] */;
  %886 = @func_1836(%881, %882, %883, %884, %885) /* ty=(Tensor[(12, 16, 8), bool], Tensor[(1536), uint8], Tensor[(20), uint64], Tensor[(182), int8], Tensor[(2, 2, 5), uint64], Tensor[(10, 13, 3), float64], Tensor[(30), float64], Tensor[(390), float64], Tensor[(5, 10, 9), bool], Tensor[(5, 10, 9), bool]) */;
  %887 = cast(%var_2192, dtype="float64") /* ty=Tensor[(5, 6, 8), float64] */;
  %888 = exp(%887) /* ty=Tensor[(5, 6, 8), float64] */;
  %889 = cast(%888, dtype="float32") /* ty=Tensor[(5, 6, 8), float32] */;
  %890 = %886.5;
  %891 = log(%889) /* ty=Tensor[(5, 6, 8), float32] */;
  (%890, meta[relay.Constant][69] /* ty=Tensor[(450), float32] */, %var_2201, meta[relay.Constant][70] /* ty=Tensor[(1, 182), int8] */, %var_2203, %891)
}

def @func_5300(%var_5298: Tensor[(1440), float64], %var_5299: Tensor[(200), int8]) -> (Tensor[(6, 6, 8), float32], Tensor[(15, 8, 12), int32], Tensor[(1440), float64], Tensor[(14, 8, 13), int32], Tensor[(1456), int32], Tensor[(5, 5, 8), int8], Tensor[(200), int8]) {
  @func_5296(%var_5298, %var_5299) /* ty=(Tensor[(6, 6, 8), float32], Tensor[(15, 8, 12), int32], Tensor[(1440), float64], Tensor[(14, 8, 13), int32], Tensor[(1456), int32], Tensor[(5, 5, 8), int8], Tensor[(200), int8]) */
}

def @func_5108() -> Tensor[(15, 8, 12), float64] {
  %893 = fn () -> Tensor[(15, 8, 12), float64] {
    %892 = @func_4891() /* ty=(Tensor[(15, 8, 12), float64],) */;
    %892.0
  };
  %893() /* ty=Tensor[(15, 8, 12), float64] */
}

def @func_8476() -> (Tensor[(5, 4, 14), float64], Tensor[(5, 5, 8), int8], Tensor[(10, 20), int8], Tensor[(15, 8, 12), float64], Tensor[(15, 8, 12), float64], Tensor[(192), int16]) {
  @func_8474() /* ty=(Tensor[(5, 4, 14), float64], Tensor[(5, 5, 8), int8], Tensor[(10, 20), int8], Tensor[(15, 8, 12), float64], Tensor[(15, 8, 12), float64], Tensor[(192), int16]) */
}

def @func_8167() -> Tensor[(2156), float32] {
  %895 = fn () -> Tensor[(2156), float32] {
    %894 = @func_8102() /* ty=(Tensor[(15, 8, 12), float64], Tensor[(2156), float32], Tensor[(200), int8], Tensor[(2156), float32], Tensor[(1536), uint8], Tensor[(6, 6, 8), int64], Tensor[(96, 2), float32]) */;
    %894.1
  };
  %895() /* ty=Tensor[(2156), float32] */
}

def @func_6317() -> (Tensor[(15, 8, 12), bool],) {
  %904 = fn () -> (Tensor[(15, 8, 12), bool],) {
    %896 = @func_5570() /* ty=(Tensor[(15, 8, 12), float64], Tensor[(15, 8, 12), float64]) */;
    %897 = %896.0;
    %898 = @func_5340() /* ty=Tensor[(15, 8, 12), float64] */;
    %899 = cast(%898, dtype="bool") /* ty=Tensor[(15, 8, 12), bool] */;
    %900 = shape_of(%897, dtype="int32") /* ty=Tensor[(3), int32] */;
    %901 = cast(%897, dtype="bool") /* ty=Tensor[(15, 8, 12), bool] */;
    %902 = dyn.reshape(%899, %900, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    %903 = equal(%901, %902) /* ty=Tensor[(15, 8, 12), bool] */;
    (%903,)
  };
  %904() /* ty=(Tensor[(15, 8, 12), bool],) */
}

def @func_6114(%var_6081: Tensor[(810), float32]) -> (Tensor[(420), uint8], Tensor[(6, 15, 9), float64], Tensor[(810), float32], Tensor[(10, 3, 2), uint32], Tensor[(60), uint32]) {
  %905 = @func_5263() /* ty=(Tensor[(6, 6, 8), int64], Tensor[(420), uint8], Tensor[(420), uint8], Tensor[(1536), uint8], Tensor[(15, 8, 12), float64]) */;
  %906 = %905.2;
  %907 = cast(%906, dtype="uint8") /* ty=Tensor[(420), uint8] */;
  %908 = cast(%var_6081, dtype="float32") /* ty=Tensor[(810), float32] */;
  %909 = reshape(%907, newshape=[420]) /* ty=Tensor[(420), uint8] */;
  %910 = reshape(%908, newshape=[810]) /* ty=Tensor[(810), float32] */;
  %911 = @func_4973(%909, %910) /* ty=(Tensor[(15, 8, 12), float64], Tensor[(420), uint8], Tensor[(420), uint8], Tensor[(1536), uint8], Tensor[(6, 15, 9), float64], Tensor[(810), float32]) */;
  %912 = cast(meta[relay.Constant][71] /* ty=Tensor[(60), uint32] */, dtype="uint32") /* ty=Tensor[(60), uint32] */;
  %913 = cast(meta[relay.Constant][71] /* ty=Tensor[(60), uint32] */, dtype="uint32") /* ty=Tensor[(60), uint32] */;
  %914 = reshape(%912, newshape=[10, 3, 2]) /* ty=Tensor[(10, 3, 2), uint32] */;
  %915 = reshape(%913, newshape=[10, 3, 2]) /* ty=Tensor[(10, 3, 2), uint32] */;
  %916 = @func_5049(%914, %915) /* ty=(Tensor[(10, 3, 2), uint32], Tensor[(12, 2, 8), int16], Tensor[(192), int16]) */;
  %917 = %911.4;
  %918 = %916.0;
  (%906, %917, %var_6081, %918, meta[relay.Constant][71] /* ty=Tensor[(60), uint32] */)
}

def @func_6434() -> Tensor[(6, 7, 16), float64] {
  %920 = fn () -> Tensor[(6, 7, 16), float64] {
    %919 = cast(meta[relay.Constant][72] /* ty=Tensor[(6, 7, 16), float64] */, dtype="float64") /* ty=Tensor[(6, 7, 16), float64] */;
    sigmoid(%919) /* ty=Tensor[(6, 7, 16), float64] */
  };
  %920() /* ty=Tensor[(6, 7, 16), float64] */
}

def @func_8275() -> (Tensor[(1536), uint8],) {
  @func_8273() /* ty=(Tensor[(1536), uint8],) */
}

def @func_3695(%var_3691: Tensor[(200), int8], %var_3692: Tensor[(2156), float32], %var_3693: Tensor[(1536), uint8], %var_3694: Tensor[(2, 728), int32]) -> (Tensor[(5, 5, 8), int8], Tensor[(200), int8], Tensor[(14, 11, 14), float32], Tensor[(2156), float32], Tensor[(20), uint64], Tensor[(1536), uint8], Tensor[(14, 8, 13), int32], Tensor[(2, 728), int32], Tensor[(2, 1, 6), float32]) {
  %946 = fn (%var_3633: Tensor[(200), int8], %var_3642: Tensor[(2156), float32], %var_3668: Tensor[(1536), uint8], %var_3671: Tensor[(2, 728), int32]) -> (Tensor[(5, 5, 8), int8], Tensor[(200), int8], Tensor[(14, 11, 14), float32], Tensor[(2156), float32], Tensor[(20), uint64], Tensor[(1536), uint8], Tensor[(14, 8, 13), int32], Tensor[(2, 728), int32], Tensor[(2, 1, 6), float32]) {
    %921 = cast(%var_3633, dtype="int8") /* ty=Tensor[(200), int8] */;
    %922 = reshape(%921, newshape=[5, 5, 8]) /* ty=Tensor[(5, 5, 8), int8] */;
    %923 = cast(%var_3642, dtype="float32") /* ty=Tensor[(2156), float32] */;
    %924 = cast(%var_3642, dtype="float32") /* ty=Tensor[(2156), float32] */;
    %925 = reshape(%923, newshape=[14, 11, 14]) /* ty=Tensor[(14, 11, 14), float32] */;
    %926 = reshape(%924, newshape=[14, 11, 14]) /* ty=Tensor[(14, 11, 14), float32] */;
    %927 = @func_2586(%925, %926) /* ty=(Tensor[(14, 11, 14), float32], Tensor[(14, 11, 14), float64]) */;
    %928 = cast(%var_3668, dtype="uint8") /* ty=Tensor[(1536), uint8] */;
    %929 = cast(%var_3668, dtype="uint8") /* ty=Tensor[(1536), uint8] */;
    %930 = reshape(%928, newshape=[12, 16, 8]) /* ty=Tensor[(12, 16, 8), uint8] */;
    %931 = reshape(%929, newshape=[12, 16, 8]) /* ty=Tensor[(12, 16, 8), uint8] */;
    %932 = @func_1087(%930, %931) /* ty=(Tensor[(12, 16, 8), bool], Tensor[(2, 2, 5), uint64], Tensor[(20), uint64]) */;
    %933 = cast(%var_3671, dtype="int32") /* ty=Tensor[(2, 728), int32] */;
    %934 = cast(%var_3671, dtype="int32") /* ty=Tensor[(2, 728), int32] */;
    %935 = reshape(%933, newshape=[14, 8, 13]) /* ty=Tensor[(14, 8, 13), int32] */;
    %936 = reshape(%934, newshape=[14, 8, 13]) /* ty=Tensor[(14, 8, 13), int32] */;
    %937 = @func_411(%935, %936) /* ty=(Tensor[(14, 8, 13), int32],) */;
    %938 = cast(meta[relay.Constant][73] /* ty=Tensor[(2, 1, 6), float64] */, dtype="float64") /* ty=Tensor[(2, 1, 6), float64] */;
    %939 = asin(%938) /* ty=Tensor[(2, 1, 6), float64] */;
    %940 = cast(%939, dtype="float32") /* ty=Tensor[(2, 1, 6), float32] */;
    %941 = @func_2985(%922) /* ty=Tensor[(5, 5, 8), int8] */;
    %942 = %927.0;
    %943 = %932.2;
    %944 = %937.0;
    %945 = sinh(%940) /* ty=Tensor[(2, 1, 6), float32] */;
    (%941, %var_3633, %942, %var_3642, %943, %var_3668, %944, %var_3671, %945)
  };
  %946(%var_3691, %var_3692, %var_3693, %var_3694) /* ty=(Tensor[(5, 5, 8), int8], Tensor[(200), int8], Tensor[(14, 11, 14), float32], Tensor[(2156), float32], Tensor[(20), uint64], Tensor[(1536), uint8], Tensor[(14, 8, 13), int32], Tensor[(2, 728), int32], Tensor[(2, 1, 6), float32]) */
}

def @func_9393(%var_9391: Tensor[(5, 2, 14), int32], %var_9392: Tensor[(1536), uint8]) -> (Tensor[(5, 2, 14), int32], Tensor[(420), float32], Tensor[(1536), uint8]) {
  %961 = fn (%var_9346: Tensor[(5, 2, 14), int32], %var_9383: Tensor[(1536), uint8]) -> (Tensor[(5, 2, 14), int32], Tensor[(420), float32], Tensor[(1536), uint8]) {
    %947 = cast(meta[relay.Constant][74] /* ty=Tensor[(5, 2, 14), int32] */, dtype="int32") /* ty=Tensor[(5, 2, 14), int32] */;
    %948 = shape_of(%var_9346, dtype="int32") /* ty=Tensor[(3), int32] */;
    %949 = cast(%var_9346, dtype="int32") /* ty=Tensor[(5, 2, 14), int32] */;
    %950 = dyn.reshape(%947, %948, newshape=[]) /* ty=Tensor[(?, ?, ?), int32] */;
    %951 = @func_7047() /* ty=(Tensor[(420), float32],) */;
    %952 = @func_8273() /* ty=(Tensor[(1536), uint8],) */;
    %953 = %952.0;
    %954 = cast(%var_9383, dtype="uint8") /* ty=Tensor[(1536), uint8] */;
    %955 = shape_of(%953, dtype="int32") /* ty=Tensor[(1), int32] */;
    %956 = cast(%953, dtype="uint8") /* ty=Tensor[(1536), uint8] */;
    %957 = dyn.reshape(%954, %955, newshape=[]) /* ty=Tensor[(?), uint8] */;
    %958 = bitwise_or(%949, %950) /* ty=Tensor[(5, 2, 14), int32] */;
    %959 = %951.0;
    %960 = bitwise_xor(%956, %957) /* ty=Tensor[(1536), uint8] */;
    (%958, %959, %960)
  };
  %961(%var_9391, %var_9392) /* ty=(Tensor[(5, 2, 14), int32], Tensor[(420), float32], Tensor[(1536), uint8]) */
}

def @func_2807(%var_2805: Tensor[(5, 2, 13), float64]) -> Tensor[(5, 2, 13), float64] {
  @func_2804(%var_2805) /* ty=Tensor[(5, 2, 13), float64] */
}

def @func_5465() -> Tensor[(15, 8, 12), float64] {
  %963 = fn () -> Tensor[(15, 8, 12), float64] {
    %962 = @func_5263() /* ty=(Tensor[(6, 6, 8), int64], Tensor[(420), uint8], Tensor[(420), uint8], Tensor[(1536), uint8], Tensor[(15, 8, 12), float64]) */;
    %962.4
  };
  %963() /* ty=Tensor[(15, 8, 12), float64] */
}

def @func_6472() -> (Tensor[(15, 8, 12), bool],) {
  @func_6470() /* ty=(Tensor[(15, 8, 12), bool],) */
}

def @func_8408() -> Tensor[(6, 15, 9), int16] {
  @func_8406() /* ty=Tensor[(6, 15, 9), int16] */
}

def @func_8987() -> (Tensor[(15, 8, 12), float64], Tensor[(15, 8, 12), bool], Tensor[(15, 8, 12), float64], Tensor[(6, 6, 8), float32], Tensor[(12, 2, 8), int16], Tensor[(192), int16], Tensor[(15, 8, 12), bool]) {
  %964 = @func_7363() /* ty=(Tensor[(15, 8, 12), float64], Tensor[(6, 15, 9), float64], Tensor[(6, 15, 9), float64]) */;
  %965 = %964.0;
  %966 = cast(%965, dtype="float64") /* ty=Tensor[(15, 8, 12), float64] */;
  %967 = cast(meta[relay.Constant][75] /* ty=Tensor[(192), int16] */, dtype="int16") /* ty=Tensor[(192), int16] */;
  %968 = reshape(%967, newshape=[12, 2, 8]) /* ty=Tensor[(12, 2, 8), int16] */;
  %969 = log10(%966) /* ty=Tensor[(15, 8, 12), float64] */;
  %970 = @func_8551() /* ty=Tensor[(15, 8, 12), bool] */;
  %971 = @func_5340() /* ty=Tensor[(15, 8, 12), float64] */;
  %972 = @func_4007() /* ty=Tensor[(6, 6, 8), float32] */;
  %973 = @func_3614(%968) /* ty=Tensor[(12, 2, 8), int16] */;
  %974 = @func_8551() /* ty=Tensor[(15, 8, 12), bool] */;
  (%969, %970, %971, %972, %973, meta[relay.Constant][75] /* ty=Tensor[(192), int16] */, %974)
}

def @func_4316() -> Tensor[(6, 15, 9), int16] {
  %981 = fn () -> Tensor[(6, 15, 9), int16] {
    %975 = @func_4194() /* ty=(Tensor[(15, 8, 12), float64], Tensor[(6, 15, 9), float64], Tensor[(1, 810), float32]) */;
    %976 = %975.1;
    %977 = cast(meta[relay.Constant][76] /* ty=Tensor[(6, 15, 9), float64] */, dtype="int16") /* ty=Tensor[(6, 15, 9), int16] */;
    %978 = shape_of(%976, dtype="int32") /* ty=Tensor[(3), int32] */;
    %979 = cast(%976, dtype="int16") /* ty=Tensor[(6, 15, 9), int16] */;
    %980 = dyn.reshape(%977, %978, newshape=[]) /* ty=Tensor[(?, ?, ?), int16] */;
    left_shift(%979, %980) /* ty=Tensor[(6, 15, 9), int16] */
  };
  %981() /* ty=Tensor[(6, 15, 9), int16] */
}

def @func_6271(%var_6269: Tensor[(2, 96), int16]) -> (Tensor[(6, 6, 8), int64], Tensor[(12, 2, 8), int16], Tensor[(2, 96), int16]) {
  @func_6268(%var_6269) /* ty=(Tensor[(6, 6, 8), int64], Tensor[(12, 2, 8), int16], Tensor[(2, 96), int16]) */
}

def @func_6117(%var_6115: Tensor[(810), float32]) -> (Tensor[(420), uint8], Tensor[(6, 15, 9), float64], Tensor[(810), float32], Tensor[(10, 3, 2), uint32], Tensor[(60), uint32]) {
  @func_6114(%var_6115) /* ty=(Tensor[(420), uint8], Tensor[(6, 15, 9), float64], Tensor[(810), float32], Tensor[(10, 3, 2), uint32], Tensor[(60), uint32]) */
}

def @func_6672() -> Tensor[(6, 6, 8), float32] {
  @func_6670() /* ty=Tensor[(6, 6, 8), float32] */
}

def @func_6716() -> (Tensor[(15, 8, 12), float64], Tensor[(6, 15, 9), int16]) {
  %985 = fn () -> (Tensor[(15, 8, 12), float64], Tensor[(6, 15, 9), int16]) {
    %982 = @func_4891() /* ty=(Tensor[(15, 8, 12), float64],) */;
    %983 = %982.0;
    %984 = @func_4315() /* ty=Tensor[(6, 15, 9), int16] */;
    (%983, %984)
  };
  %985() /* ty=(Tensor[(15, 8, 12), float64], Tensor[(6, 15, 9), int16]) */
}

def @func_7993() -> Tensor[(5, 4, 14), bool] {
  %986 = fn () -> Tensor[(5, 4, 14), bool] {
    @func_5880() /* ty=Tensor[(5, 4, 14), bool] */
  };
  %986() /* ty=Tensor[(5, 4, 14), bool] */
}

def @func_8293() -> Tensor[(5, 4, 14), float64] {
  %989 = fn () -> Tensor[(5, 4, 14), float64] {
    %987 = @func_7992() /* ty=Tensor[(5, 4, 14), bool] */;
    %988 = cast(%987, dtype="float64") /* ty=Tensor[(5, 4, 14), float64] */;
    sinh(%988) /* ty=Tensor[(5, 4, 14), float64] */
  };
  %989() /* ty=Tensor[(5, 4, 14), float64] */
}

def @func_7298(%var_7284: Tensor[(2, 728), int32]) -> (Tensor[(15, 8, 12), float64], Tensor[(10, 13, 3), float64], Tensor[(30), float64], Tensor[(390), float64], Tensor[(5, 5, 8), int8], Tensor[(200), int8], Tensor[(154, 14), float32], Tensor[(1536), uint8], Tensor[(2, 728), int32], Tensor[(15, 8, 12), bool]) {
  %990 = cast(meta[relay.Constant][77] /* ty=Tensor[(30), float64] */, dtype="float64") /* ty=Tensor[(30), float64] */;
  %991 = cast(meta[relay.Constant][78] /* ty=Tensor[(390), float64] */, dtype="float64") /* ty=Tensor[(390), float64] */;
  %992 = reshape(%990, newshape=[10, 1, 3]) /* ty=Tensor[(10, 1, 3), float64] */;
  %993 = reshape(%991, newshape=[10, 13, 3]) /* ty=Tensor[(10, 13, 3), float64] */;
  %994 = @func_397(%992, %993) /* ty=(Tensor[(10, 13, 3), float64],) */;
  %995 = cast(meta[relay.Constant][79] /* ty=Tensor[(200), int8] */, dtype="int8") /* ty=Tensor[(200), int8] */;
  %996 = cast(meta[relay.Constant][80] /* ty=Tensor[(154, 14), float32] */, dtype="float32") /* ty=Tensor[(154, 14), float32] */;
  %997 = cast(meta[relay.Constant][81] /* ty=Tensor[(1536), uint8] */, dtype="uint8") /* ty=Tensor[(1536), uint8] */;
  %998 = cast(%var_7284, dtype="int32") /* ty=Tensor[(2, 728), int32] */;
  %999 = reshape(%995, newshape=[200]) /* ty=Tensor[(200), int8] */;
  %1000 = reshape(%996, newshape=[2156]) /* ty=Tensor[(2156), float32] */;
  %1001 = reshape(%997, newshape=[1536]) /* ty=Tensor[(1536), uint8] */;
  %1002 = reshape(%998, newshape=[2, 728]) /* ty=Tensor[(2, 728), int32] */;
  %1003 = @func_3690(%999, %1000, %1001, %1002) /* ty=(Tensor[(5, 5, 8), int8], Tensor[(200), int8], Tensor[(14, 11, 14), float32], Tensor[(2156), float32], Tensor[(20), uint64], Tensor[(1536), uint8], Tensor[(14, 8, 13), int32], Tensor[(2, 728), int32], Tensor[(2, 1, 6), float32]) */;
  %1004 = @func_6316() /* ty=(Tensor[(15, 8, 12), bool],) */;
  %1005 = @func_5107() /* ty=Tensor[(15, 8, 12), float64] */;
  %1006 = %994.0;
  %1007 = %1003.0;
  %1008 = %1004.0;
  (%1005, %1006, meta[relay.Constant][77] /* ty=Tensor[(30), float64] */, meta[relay.Constant][78] /* ty=Tensor[(390), float64] */, %1007, meta[relay.Constant][79] /* ty=Tensor[(200), int8] */, meta[relay.Constant][80] /* ty=Tensor[(154, 14), float32] */, meta[relay.Constant][81] /* ty=Tensor[(1536), uint8] */, %var_7284, %1008)
}

def @func_6811(%var_6809: Tensor[(3, 2, 1), float32]) -> (Tensor[(3, 2, 1), float32],) {
  @func_6808(%var_6809) /* ty=(Tensor[(3, 2, 1), float32],) */
}

/* For debugging purposes the metadata section has been omitted.
 * If you would like to see the full metadata section you can set the 
 * option to `True` when invoking `astext`. 
 *//home/yujunzhe/Hirgen_generated/tvm0.8_test/HirGen491/build/output.py:2405: DeprecationWarning: legacy graph executor behavior of producing json / lib / params will be removed in the next release. Please see documents of tvm.contrib.graph_executor.GraphModule for the  new recommended usage.
  graph, lib, params = relay.build(mod, target='llvm')
/home/yujunzhe/tvm/python/tvm/contrib/graph_runtime.py:25: UserWarning: This function has been moved to tvm.contrib.graph_executor and will be removed in the next TVM release
  warnings.warn(

===================================
Traceback (most recent call last):
  File "/home/yujunzhe/Hirgen_generated/tvm0.8_test/HirGen491/build/output.py", line 2410, in <module>
    graph, lib, params = relay.build(mod, target='cuda')
  File "/home/yujunzhe/tvm/python/tvm/relay/build_module.py", line 369, in build
    executor_config, runtime_mod, params = bld_mod.build(
  File "/home/yujunzhe/tvm/python/tvm/relay/build_module.py", line 177, in build
    self._build(mod, target, target_host, executor, mod_name)
  File "/home/yujunzhe/tvm/python/tvm/_ffi/_ctypes/packed_func.py", line 237, in __call__
    raise get_last_ffi_error()
tvm._ffi.base.TVMError: Traceback (most recent call last):
  7: TVMFuncCall
  6: std::_Function_handler<void (tvm::runtime::TVMArgs, tvm::runtime::TVMRetValue*), tvm::relay::backend::RelayBuildModule::GetFunction(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, tvm::runtime::ObjectPtr<tvm::runtime::Object> const&)::{lambda(tvm::runtime::TVMArgs, tvm::runtime::TVMRetValue*)#3}>::_M_invoke(std::_Any_data const&, tvm::runtime::TVMArgs&&, tvm::runtime::TVMRetValue*&&)
  5: tvm::relay::backend::RelayBuildModule::BuildRelay(tvm::IRModule, std::unordered_map<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, tvm::runtime::NDArray, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, tvm::runtime::NDArray> > > const&, tvm::runtime::String)
  4: tvm::build(tvm::runtime::Map<tvm::Target, tvm::IRModule, void, void> const&, tvm::Target const&)
  3: tvm::codegen::Build(tvm::IRModule, tvm::Target)
  2: tvm::runtime::TypedPackedFunc<tvm::runtime::Module (tvm::IRModule, tvm::Target)>::AssignTypedLambda<tvm::runtime::Module (*)(tvm::IRModule, tvm::Target)>(tvm::runtime::Module (*)(tvm::IRModule, tvm::Target), std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >)::{lambda(tvm::runtime::TVMArgs const&, tvm::runtime::TVMRetValue*)#1}::operator()(tvm::runtime::TVMArgs const&, tvm::runtime::TVMRetValue*) const
  1: tvm::codegen::BuildCUDA(tvm::IRModule, tvm::Target)
  0: std::_Function_handler<void (tvm::runtime::TVMArgs, tvm::runtime::TVMRetValue*), TVMFuncCreateFromCFunc::{lambda(tvm::runtime::TVMArgs, tvm::runtime::TVMRetValue*)#2}>::_M_invoke(std::_Any_data const&, tvm::runtime::TVMArgs&&, tvm::runtime::TVMRetValue*&&) [clone .cold]
  File "/home/yujunzhe/tvm/python/tvm/_ffi/_ctypes/packed_func.py", line 81, in cfun
    rv = local_pyfunc(*pyargs)
  File "/home/yujunzhe/tvm/python/tvm/autotvm/measure/measure_methods.py", line 789, in tvm_callback_cuda_compile
    ptx = nvcc.compile_cuda(code, target=target, arch=AutotvmGlobalScope.current.cuda_target_arch)
  File "/home/yujunzhe/tvm/python/tvm/contrib/nvcc.py", line 108, in compile_cuda
    raise RuntimeError(msg)
RuntimeError: 
#ifdef _WIN32
  using uint = unsigned int;
  using uchar = unsigned char;
  using ushort = unsigned short;
  using int64_t = long long;
  using uint64_t = unsigned long long;
#else
  #define uint unsigned int
  #define uchar unsigned char
  #define ushort unsigned short
  #define int64_t long long
  #define uint64_t unsigned long long
#endif
extern "C" __global__ void __launch_bounds__(240) tvmgen_default_fused_log10_cast_reshape_floor_mod_cast_reshape_less_kernel0(signed char* __restrict__ T_less, float* __restrict__ placeholder) {
  T_less[(((int)threadIdx.x))] = ((signed char)(((bool)__log10f(placeholder[(((int)threadIdx.x))])) < ((bool)(__log10f(placeholder[(((int)threadIdx.x))]) - (floorf((__log10f(placeholder[(((int)threadIdx.x))]) / placeholder[(((int)threadIdx.x))])) * placeholder[(((int)threadIdx.x))])))));
}


Compilation error:
In file included from /usr/local/cuda/bin/../targets/x86_64-linux/include/cuda_runtime.h:82,
                 from <command-line>:
/usr/local/cuda/bin/../targets/x86_64-linux/include/crt/host_config.h:143:2: error: #error -- unsupported GNU version! gcc versions later than 12 are not supported! The nvcc flag '-allow-unsupported-compiler' can be used to override this version check; however, using an unsupported host compiler may cause compilation failure or incorrect run time execution. Use at your own risk.
  143 | #error -- unsupported GNU version! gcc versions later than 12 are not supported! The nvcc flag '-allow-unsupported-compiler' can be used to override this version check; however, using an unsupported host compiler may cause compilation failure or incorrect run time execution. Use at your own risk.
      |  ^~~~~


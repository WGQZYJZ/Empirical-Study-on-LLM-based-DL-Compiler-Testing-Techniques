import tvm
from tvm import relay
from tvm.ir.transform import Sequential
from tvm.contrib import graph_runtime
import numpy as np
mod = tvm.IRModule()
mutated_mod = tvm.IRModule()
var_379 = relay.var("var_379", dtype = "float64", shape = (10, 1, 3))#candidate|379|(10, 1, 3)|var|float64
var_380 = relay.var("var_380", dtype = "float64", shape = (10, 13, 3))#candidate|380|(10, 13, 3)|var|float64
bop_381 = relay.minimum(var_379.astype('float64'), var_380.astype('float64')) # shape=(10, 13, 3)
output = relay.Tuple([bop_381,])
output2 = relay.Tuple([bop_381,])
func_397 = relay.Function([var_379,var_380,], output)
mod['func_397'] = func_397
mod = relay.transform.InferType()(mod)
mutated_mod['func_397'] = func_397
mutated_mod = relay.transform.InferType()(mutated_mod)
func_397_call = mutated_mod.get_global_var('func_397')
var_399 = relay.var("var_399", dtype = "float64", shape = (10, 1, 3))#candidate|399|(10, 1, 3)|var|float64
var_400 = relay.var("var_400", dtype = "float64", shape = (10, 13, 3))#candidate|400|(10, 13, 3)|var|float64
call_398 = func_397_call(var_399,var_400,)
output = call_398
func_401 = relay.Function([var_399,var_400,], output)
mutated_mod['func_401'] = func_401
mutated_mod = relay.transform.InferType()(mutated_mod)
var_406 = relay.var("var_406", dtype = "int32", shape = (14, 8, 13))#candidate|406|(14, 8, 13)|var|int32
var_407 = relay.var("var_407", dtype = "int32", shape = (14, 8, 13))#candidate|407|(14, 8, 13)|var|int32
bop_408 = relay.bitwise_and(var_406.astype('int32'), relay.reshape(var_407.astype('int32'), relay.shape_of(var_406))) # shape=(14, 8, 13)
output = relay.Tuple([bop_408,])
output2 = relay.Tuple([bop_408,])
func_411 = relay.Function([var_406,var_407,], output)
mod['func_411'] = func_411
mod = relay.transform.InferType()(mod)
var_412 = relay.var("var_412", dtype = "int32", shape = (14, 8, 13))#candidate|412|(14, 8, 13)|var|int32
var_413 = relay.var("var_413", dtype = "int32", shape = (14, 8, 13))#candidate|413|(14, 8, 13)|var|int32
output = func_411(var_412,var_413,)
func_414 = relay.Function([var_412,var_413,], output)
mutated_mod['func_414'] = func_414
mutated_mod = relay.transform.InferType()(mutated_mod)
var_560 = relay.var("var_560", dtype = "uint64", shape = (2, 2, 5))#candidate|560|(2, 2, 5)|var|uint64
var_561 = relay.var("var_561", dtype = "uint64", shape = (2, 2, 5))#candidate|561|(2, 2, 5)|var|uint64
bop_562 = relay.left_shift(var_560.astype('uint64'), relay.reshape(var_561.astype('uint64'), relay.shape_of(var_560))) # shape=(2, 2, 5)
func_411_call = mod.get_global_var('func_411')
func_414_call = mutated_mod.get_global_var('func_414')
const_569 = relay.const([-1,5,5,6,-8,9,3,10,-9,-6,-5,6,3,-7,2,-2,-4,-4,-6,-7,9,-10,7,-2,3,1,-2,-1,-2,1,-2,-9,-2,5,5,-4,-5,-1,-8,-1,10,-1,10,-7,-2,-8,-3,-9,4,-5,-6,-5,5,3,8,-4,-5,3,9,-10,8,5,7,-8,-8,1,-2,-4,2,-2,-3,-9,1,4,1,1,1,3,-10,2,2,3,-10,4,-8,2,-1,10,2,2,-9,3,8,2,6,5,5,-5,7,-7,-4,-4,10,8,1,5,4,-2,5,8,7,-9,-3,9,4,5,-5,-4,5,6,6,6,9,-2,-1,6,-6,-2,9,-9,9,2,2,-8,-2,5,-6,-7,8,-9,-10,10,-2,-4,-6,-6,8,-9,-6,9,3,-5,2,6,-9,-2,-2,4,-5,-4,3,5,10,2,-3,3,5,-5,-9,-9,-9,-7,3,4,-2,-8,10,8,5,7,3,4,-7,-4,-1,5,4,-1,-5,-5,-3,6,4,5,-6,-7,-2,4,1,8,-1,-2,-6,3,9,-10,1,-8,-10,4,5,4,4,9,-7,9,-9,-2,7,-8,-3,9,-4,7,-9,-1,-6,-4,-4,8,-9,7,2,-4,-7,3,1,-4,-6,1,3,2,9,-2,8,-2,10,4,1,1,10,-7,-4,8,-3,-9,-4,-8,6,6,3,-10,9,5,4,7,-7,-7,-7,-5,7,-9,-5,-4,8,-5,-7,-1,1,-4,9,-8,-10,-9,1,9,8,-7,-4,3,8,-10,5,1,7,-8,1,-5,1,9,-8,8,-8,-10,-5,-4,-3,1,-8,-3,-8,-5,6,-9,4,9,-8,-9,-3,9,-3,4,-9,-3,5,-4,-6,-3,9,-9,2,8,-8,-6,-7,10,8,-6,-9,4,5,-1,10,-3,-8,3,-2,-9,9,3,10,6,9,5,-10,-4,-8,6,-8,7,1,5,-3,6,-10,8,2,6,-7,-9,-9,-6,9,6,-10,3,-5,9,-3,-1,-3,2,6,-7,8,-2,9,7,9,-5,-6,-4,-1,10,7,-8,2,-4,-8,1,-6,-7,2,-3,7,2,10,-6,-7,4,10,2,10,2,8,-7,8,-1,6,-1,-4,6,-7,5,-1,-7,1,-6,-9,10,-2,2,-1,-2,7,-9,6,-6,-10,-8,2,-3,-7,5,-5,-3,-3,9,-10,-8,4,-9,-5,-3,8,3,7,2,-2,7,-1,6,-7,-6,8,3,3,2,9,-2,-7,6,10,-7,2,-2,6,6,5,-10,10,-4,-5,3,-2,-10,10,2,-3,-4,4,-9,8,-6,9,-5,-9,-4,-5,-10,-9,-7,-6,9,-9,4,3,-6,1,3,7,-9,-8,3,-9,2,5,7,8,3,-10,-1,-2,-3,6,-3,5,1,6,-9,-9,2,-2,-7,6,-8,-9,-1,-3,-4,-2,3,-10,1,10,-10,4,-5,1,-5,-4,-5,-9,5,-1,-4,-5,-10,-3,2,4,-4,-4,-3,1,-3,-10,-7,5,4,1,8,-4,3,-1,3,-7,-4,-6,-7,4,3,10,-6,3,10,-5,-2,-9,8,-1,7,-8,10,-7,-10,-9,-6,4,-4,9,9,-2,-5,-7,3,4,6,9,3,-5,7,-7,-4,3,5,10,8,-6,-5,5,-1,-7,8,-4,-4,-5,2,-3,4,4,10,5,8,-10,-6,-2,-2,5,7,-3,8,-1,2,7,-2,5,-5,-9,-4,7,-3,-9,9,7,5,6,-7,-4,-1,-7,3,2,-6,2,-1,2,-1,-1,6,4,-7,5,-7,7,9,8,7,2,2,-3,-5,9,7,6,-7,5,3,9,8,-6,9,-10,6,10,-8,-1,8,-10,-1,8,-7,3,2,9,-10,-8,-1,-7,-10,6,-2,10,-8,-6,-7,6,-9,3,1,-3,9,9,-10,8,5,-10,1,-6,-2,-8,7,2,-3,9,-9,4,-4,7,-1,-5,-8,-3,7,-2,2,-8,3,6,7,9,-6,3,8,-5,6,5,-7,7,-8,2,8,-8,10,-7,9,-2,-1,-6,-4,9,-3,7,5,-3,-2,2,5,-1,5,-3,-7,9,9,-8,8,-4,-6,-10,-5,-3,-10,-9,6,-1,9,5,-8,-6,2,9,-3,-9,-5,9,4,9,8,10,-7,7,6,3,-8,10,-3,8,-3,5,7,-10,-8,4,6,-2,-6,10,-2,-5,-2,-10,5,10,-8,8,1,-8,-8,6,8,-8,6,-6,2,9,-6,8,-1,-1,-7,6,-6,8,-9,-7,-2,-1,6,-7,1,-4,-8,-8,3,10,8,-10,10,-6,2,-6,-2,-5,6,-7,-1,-4,1,8,3,6,3,4,3,2,7,10,-7,-6,-8,-2,1,-5,-9,-10,2,2,1,-9,-7,-10,1,4,6,2,2,-10,-9,-7,10,1,-3,-9,10,-7,-1,3,-6,7,-8,5,-3,3,1,-2,-9,-5,5,-7,2,-4,-2,4,-6,1,1,2,-10,-8,8,4,-1,10,-2,3,-2,8,3,-5,2,1,-1,-7,-9,-3,-5,4,3,3,10,1,2,7,1,4,-7,7,9,10,1,7,-8,1,5,-9,10,1,1,-5,2,-8,-4,9,-10,-3,2,-6,-1,4,-1,-4,-6,10,5,-2,7,-5,6,6,3,-9,-9,7,-2,-7,7,3,-6,-3,-10,-7,-8,10,6,-9,3,-8,-3,-2,8,-9,3,-10,-8,-10,-1,-7,-9,2,1,6,1,8,-1,-10,-2,-5,2,-3,-2,9,8,-2,-3,4,-6,-9,6,-3,-8,7,-2,4,-10,4,-10,3,3,4,-10,9,9,-4,-3,-2,-10,10,1,-7,3,-3,8,-10,3,-4,-2,-8,-1,8,1,-7,-10,4,3,4,-5,-8,3,4,1,9,-3,6,1,-1,5,5,7,9,-1,7,-8,-8,2,-8,-10,-6,-4,-8,-8,9,-7,1,4,-5,2,2,6,2,-4,10,-5,-8,1,-4,-4,-4,-7,-4,-4,-7,-10,4,-1,-3,7,8,10,-1,-3,-1,9,-8,10,-7,-1,-9,-3,7,1,8,3,-2,-5,5,-9,3,-4,2,4,-6,-4,-6,-10,-3,-10,1,-1,6,5,2,-10,1,7,-7,5,-4,10,7,2,1,3,5,4,-7,-5,-4,-3,10,-10,-1,-10,-5,-6,10,-2,-9,-4,8,8,-8,4,7,-7,-9,3,2,-8,6,9,1,-9,-8,-7,-1,-2,7,1,3,-2,-6,6,-10,7,8,2,-9,2,-3,4,3,5,1,-5,-5,-9,-1,9,9,7,-1,-7,-9,-6,9,8,-5,3,8,-10,-4,-2,-6,-8,6,-2,-6,5,-9,10,2,-1,9,-3,-1,-8,6,2,2,4,-5,2,7,-9,-10,-6,4,-9,3,-2,9,-9,-1,-4,1,10,6,9,9,2,4,-2,-7,-5,-5,5,8,-8,9,3,-1,7,-3,3,-4,-1,-4,9,6,-4,-1,-6,4,-10,-7,2,6,-5,6,2,4,-8,-8,10,1,6,2,2,7,1,-7,-10,-2,3,-5,-8,8,-9,-3,2,-2,5,-2,4,-1,3,-7,2,-10,-9,-9,7,-3,6,3,9,8,-3,-2,-10,-1,-4,8,10,-10,6,-6,-9,-7,-6,-4,-8,-10,3,-8,-9,-7,-7,-9,-4,6,10,-1,4,7,10,4,4,-1,-7,3,7,-1,7,-1,-10,-3,10,1,-3,3,-10,1,2,4,-2,7,8,-4,-7,8,-4,8,-6,-10,-7,-2,10,2,9,1,-2,-1,-6,7,-1,-9,-7,-3,-7,-4,5,-1,3,-7,1,2,-8,-6,-7,6,-8,-5,1,10,10,-2,1,-10,-1,5,-6,-5,-1,9,-4], dtype = "int32")#candidate|569|(1456,)|const|int32
call_568 = relay.TupleGetItem(func_411_call(relay.reshape(const_569.astype('int32'), [14, 8, 13]), relay.reshape(const_569.astype('int32'), [14, 8, 13]), ), 0)
call_570 = relay.TupleGetItem(func_414_call(relay.reshape(const_569.astype('int32'), [14, 8, 13]), relay.reshape(const_569.astype('int32'), [14, 8, 13]), ), 0)
output = relay.Tuple([bop_562,call_568,const_569,])
output2 = relay.Tuple([bop_562,call_570,const_569,])
func_571 = relay.Function([var_560,var_561,], output)
mod['func_571'] = func_571
mod = relay.transform.InferType()(mod)
mutated_mod['func_571'] = func_571
mutated_mod = relay.transform.InferType()(mutated_mod)
func_571_call = mutated_mod.get_global_var('func_571')
var_573 = relay.var("var_573", dtype = "uint64", shape = (2, 2, 5))#candidate|573|(2, 2, 5)|var|uint64
var_574 = relay.var("var_574", dtype = "uint64", shape = (2, 2, 5))#candidate|574|(2, 2, 5)|var|uint64
call_572 = func_571_call(var_573,var_574,)
output = call_572
func_575 = relay.Function([var_573,var_574,], output)
mutated_mod['func_575'] = func_575
mutated_mod = relay.transform.InferType()(mutated_mod)
var_1075 = relay.var("var_1075", dtype = "uint8", shape = (12, 16, 8))#candidate|1075|(12, 16, 8)|var|uint8
var_1076 = relay.var("var_1076", dtype = "uint8", shape = (12, 16, 8))#candidate|1076|(12, 16, 8)|var|uint8
bop_1077 = relay.equal(var_1075.astype('bool'), relay.reshape(var_1076.astype('bool'), relay.shape_of(var_1075))) # shape=(12, 16, 8)
func_571_call = mod.get_global_var('func_571')
func_575_call = mutated_mod.get_global_var('func_575')
const_1084 = relay.const([-2,10,-6,10,-9,5,8,-10,7,-7,-6,8,-6,5,2,-2,-9,-6,-1,4], dtype = "uint64")#candidate|1084|(20,)|const|uint64
call_1083 = relay.TupleGetItem(func_571_call(relay.reshape(const_1084.astype('uint64'), [2, 2, 5]), relay.reshape(const_1084.astype('uint64'), [2, 2, 5]), ), 0)
call_1085 = relay.TupleGetItem(func_575_call(relay.reshape(const_1084.astype('uint64'), [2, 2, 5]), relay.reshape(const_1084.astype('uint64'), [2, 2, 5]), ), 0)
output = relay.Tuple([bop_1077,call_1083,const_1084,])
output2 = relay.Tuple([bop_1077,call_1085,const_1084,])
func_1087 = relay.Function([var_1075,var_1076,], output)
mod['func_1087'] = func_1087
mod = relay.transform.InferType()(mod)
mutated_mod['func_1087'] = func_1087
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1087_call = mutated_mod.get_global_var('func_1087')
var_1089 = relay.var("var_1089", dtype = "uint8", shape = (12, 16, 8))#candidate|1089|(12, 16, 8)|var|uint8
var_1090 = relay.var("var_1090", dtype = "uint8", shape = (12, 16, 8))#candidate|1090|(12, 16, 8)|var|uint8
call_1088 = func_1087_call(var_1089,var_1090,)
output = call_1088
func_1091 = relay.Function([var_1089,var_1090,], output)
mutated_mod['func_1091'] = func_1091
mutated_mod = relay.transform.InferType()(mutated_mod)
var_1487 = relay.var("var_1487", dtype = "int8", shape = (2, 13, 7))#candidate|1487|(2, 13, 7)|var|int8
const_1488 = relay.const([[[-1,-4,3,-8,-6,8,-8],[-3,-1,-6,4,-10,4,-10],[5,10,8,-8,-2,10,5],[5,-7,6,9,5,-8,4],[6,-10,-2,6,-6,1,-5],[7,-8,-1,1,3,1,-7],[2,2,-5,-8,3,-7,10],[-9,2,5,10,-5,5,-3],[7,-9,9,-6,4,-3,9],[7,1,-6,-4,3,7,5],[9,2,5,-6,1,-3,7],[3,8,-7,6,2,-4,-1],[4,-5,-1,-10,6,-3,9]],[[3,1,-3,-4,10,4,9],[8,9,6,-6,8,-3,3],[3,-1,-7,10,3,-10,5],[4,4,-4,7,-8,6,10],[-2,7,-2,-2,3,9,-8],[-9,-5,-7,-7,5,-10,7],[-8,-7,-10,6,5,3,1],[-5,10,-4,-9,7,3,-1],[2,-2,5,-3,-6,-8,-8],[-2,-2,-10,1,9,-8,-7],[8,-5,-6,-3,8,7,-4],[6,6,2,5,2,7,-7],[10,5,9,-10,-9,-5,8]]], dtype = "int8")#candidate|1488|(2, 13, 7)|const|int8
bop_1489 = relay.greater(var_1487.astype('bool'), relay.reshape(const_1488.astype('bool'), relay.shape_of(var_1487))) # shape=(2, 13, 7)
bop_1498 = relay.bitwise_and(var_1487.astype('int16'), relay.reshape(const_1488.astype('int16'), relay.shape_of(var_1487))) # shape=(2, 13, 7)
func_571_call = mod.get_global_var('func_571')
func_575_call = mutated_mod.get_global_var('func_575')
const_1503 = relay.const([8,2,-4,-3,3,-7,-4,4,-2,-8,-4,1,5,10,-2,-10,5,-4,-2,-7], dtype = "uint64")#candidate|1503|(20,)|const|uint64
call_1502 = relay.TupleGetItem(func_571_call(relay.reshape(const_1503.astype('uint64'), [2, 2, 5]), relay.reshape(const_1503.astype('uint64'), [2, 2, 5]), ), 0)
call_1504 = relay.TupleGetItem(func_575_call(relay.reshape(const_1503.astype('uint64'), [2, 2, 5]), relay.reshape(const_1503.astype('uint64'), [2, 2, 5]), ), 0)
func_571_call = mod.get_global_var('func_571')
func_575_call = mutated_mod.get_global_var('func_575')
call_1524 = relay.TupleGetItem(func_571_call(relay.reshape(call_1502.astype('uint64'), [2, 2, 5]), relay.reshape(const_1503.astype('uint64'), [2, 2, 5]), ), 1)
call_1525 = relay.TupleGetItem(func_575_call(relay.reshape(call_1502.astype('uint64'), [2, 2, 5]), relay.reshape(const_1503.astype('uint64'), [2, 2, 5]), ), 1)
output = relay.Tuple([bop_1489,bop_1498,call_1502,const_1503,call_1524,])
output2 = relay.Tuple([bop_1489,bop_1498,call_1504,const_1503,call_1525,])
func_1527 = relay.Function([var_1487,], output)
mod['func_1527'] = func_1527
mod = relay.transform.InferType()(mod)
var_1528 = relay.var("var_1528", dtype = "int8", shape = (2, 13, 7))#candidate|1528|(2, 13, 7)|var|int8
output = func_1527(var_1528)
func_1529 = relay.Function([var_1528], output)
mutated_mod['func_1529'] = func_1529
mutated_mod = relay.transform.InferType()(mutated_mod)
var_1740 = relay.var("var_1740", dtype = "float32", shape = (5, 10, 9))#candidate|1740|(5, 10, 9)|var|float32
uop_1741 = relay.rsqrt(var_1740.astype('float32')) # shape=(5, 10, 9)
var_1751 = relay.var("var_1751", dtype = "float32", shape = (5, 10, 9))#candidate|1751|(5, 10, 9)|var|float32
bop_1752 = relay.maximum(uop_1741.astype('float64'), relay.reshape(var_1751.astype('float64'), relay.shape_of(uop_1741))) # shape=(5, 10, 9)
func_1087_call = mod.get_global_var('func_1087')
func_1091_call = mutated_mod.get_global_var('func_1091')
var_1761 = relay.var("var_1761", dtype = "uint8", shape = (1536,))#candidate|1761|(1536,)|var|uint8
call_1760 = relay.TupleGetItem(func_1087_call(relay.reshape(var_1761.astype('uint8'), [12, 16, 8]), relay.reshape(var_1761.astype('uint8'), [12, 16, 8]), ), 0)
call_1762 = relay.TupleGetItem(func_1091_call(relay.reshape(var_1761.astype('uint8'), [12, 16, 8]), relay.reshape(var_1761.astype('uint8'), [12, 16, 8]), ), 0)
func_1527_call = mod.get_global_var('func_1527')
func_1529_call = mutated_mod.get_global_var('func_1529')
var_1764 = relay.var("var_1764", dtype = "int8", shape = (182,))#candidate|1764|(182,)|var|int8
call_1763 = relay.TupleGetItem(func_1527_call(relay.reshape(var_1764.astype('int8'), [2, 13, 7])), 3)
call_1765 = relay.TupleGetItem(func_1529_call(relay.reshape(var_1764.astype('int8'), [2, 13, 7])), 3)
func_1087_call = mod.get_global_var('func_1087')
func_1091_call = mutated_mod.get_global_var('func_1091')
call_1774 = relay.TupleGetItem(func_1087_call(relay.reshape(call_1760.astype('uint8'), [12, 16, 8]), relay.reshape(var_1761.astype('uint8'), [12, 16, 8]), ), 1)
call_1775 = relay.TupleGetItem(func_1091_call(relay.reshape(call_1760.astype('uint8'), [12, 16, 8]), relay.reshape(var_1761.astype('uint8'), [12, 16, 8]), ), 1)
bop_1778 = relay.bitwise_or(uop_1741.astype('uint8'), relay.reshape(bop_1752.astype('uint8'), relay.shape_of(uop_1741))) # shape=(5, 10, 9)
func_397_call = mod.get_global_var('func_397')
func_401_call = mutated_mod.get_global_var('func_401')
var_1788 = relay.var("var_1788", dtype = "float64", shape = (30,))#candidate|1788|(30,)|var|float64
const_1789 = relay.const([-3.163024,5.018204,6.139933,3.753012,-2.171011,-6.483998,1.614115,-4.339949,2.852893,7.234791,3.563528,-1.063798,-3.156111,3.431728,0.316503,5.259969,5.388277,2.621453,7.089837,-2.064809,3.454881,3.871794,-9.032524,0.562739,5.399030,7.344643,9.267484,-7.322987,-5.353570,-6.594307,-3.115592,2.066883,-6.803202,-6.988297,-3.553357,-4.528272,3.853841,-3.128712,1.203027,-8.064400,-2.436664,6.543079,0.041918,-5.157243,7.287975,1.665861,-4.597112,0.510282,9.598647,-6.445983,-0.417336,-2.564113,-0.563730,0.588180,-1.396729,-5.463747,-0.850830,-5.590923,6.764044,6.532050,0.063706,-7.950045,9.238336,6.163804,0.754983,-0.330597,-4.508158,-0.552205,-8.224667,-8.706727,5.248976,3.731038,-7.624728,6.369248,-8.498332,-8.420952,9.062549,0.938846,8.972524,-5.112610,-9.739768,-0.145833,0.773111,3.242682,2.828793,-2.165187,-3.387698,-5.539887,0.735606,-8.543922,-5.344555,-8.836401,1.218294,-6.892654,-8.814529,-4.229405,-0.787079,8.292178,8.148665,4.086856,-8.523236,2.746355,7.275832,3.342593,7.187181,6.061822,-0.414765,4.733836,8.501680,-1.375029,-2.204357,2.213086,-7.488784,-6.075511,6.438864,-5.457102,8.412813,5.327239,1.006241,-7.250594,-3.086480,-0.823636,5.104518,2.502512,1.583649,-8.989012,-8.872711,-8.560611,-5.590004,-1.421076,-4.470431,1.956351,-4.614337,8.721096,8.162226,-6.973014,0.014614,-5.657180,-3.313126,4.670617,-6.745375,-7.918860,9.715547,6.191381,8.847875,-0.139177,-6.007434,-0.455578,-8.484843,-8.952702,7.415615,9.489558,3.494641,5.934395,9.049995,6.516641,-1.557716,-0.126517,8.892672,7.485366,3.619095,-3.814259,9.016231,-4.460879,-2.485570,7.483664,9.129888,-8.169525,-0.525084,1.857479,3.872996,4.723266,-0.080964,0.689521,5.627152,-5.906826,-3.826351,-8.790895,6.363087,4.015360,8.394281,8.010968,-2.395123,7.898495,8.565087,-1.087475,-9.422478,-5.996003,-7.386275,-7.678216,-9.920986,-2.845727,1.923041,-9.499135,-0.732661,2.413696,-5.068024,-0.519388,-2.276623,-3.690714,-8.287162,-8.286174,-8.718071,0.943489,4.235893,4.523763,4.503689,-6.700071,-9.749148,5.768542,0.847450,3.718228,-7.669930,-2.622721,5.297261,-9.643974,3.147577,-4.487158,-9.494405,-9.451351,5.719944,4.259747,-5.451928,-5.854746,4.241939,8.278619,-8.243831,-5.296376,-8.499775,3.578066,1.415633,-1.596941,6.431242,4.585599,-7.586425,4.694987,6.131335,-2.801924,-6.121605,-4.086946,4.723344,-7.974141,-8.229751,-3.111751,1.179421,2.436001,9.341675,-0.832754,-5.091710,-4.898733,2.905603,8.152907,7.170903,-9.019118,-6.416827,1.897928,-6.342608,5.346222,-3.252049,-4.192869,5.259031,9.801519,2.835584,9.281908,6.758167,-8.532986,2.112819,5.860346,-6.687795,2.303876,-3.264893,-2.608388,-0.844095,-9.537630,0.315222,7.586342,-2.480269,2.640102,-0.696396,7.173689,3.266608,-3.625994,3.549282,8.771175,-9.565550,-0.992180,9.428521,4.546578,-8.439214,-8.732834,-5.530200,6.824523,-8.761862,-8.040750,4.417731,-6.836254,-4.787759,-8.659828,-4.744407,2.777835,-2.390567,-4.930233,-6.845566,3.551262,8.927065,-5.099499,4.894202,-0.383699,-2.824560,-9.529999,-9.485156,-3.798883,-6.548302,7.479040,-3.342122,0.547393,-8.271940,-6.034265,8.125664,-4.408540,-9.806524,1.296684,-3.772024,6.164036,-9.037503,-9.305314,5.211260,8.860736,9.029541,-1.524555,9.692262,-2.510613,0.432933,-2.833033,5.426891,8.712671,7.220008,3.521614,-9.831225,3.532442,0.101541,-6.492407,-6.194995,-6.441615,-2.745458,-9.013521,-9.346012,5.959238,0.173120,-8.497974,-2.092318,-9.045884,-9.783395,2.515318,5.828683,-6.347302,6.416553,4.804216,-5.825863,5.552907,-9.350174,2.727605,5.834379,7.383166,-3.563094,7.510978,5.521224,2.156328,3.356394,3.951266,1.619368,2.685124,-0.170875,-1.240241,-9.298703,2.234616,4.866001,6.536335,7.179838,-8.274579,1.167698,7.682655,4.542037,-4.061637,0.988958,7.406795,1.931052,3.886737,1.220549,6.489108], dtype = "float64")#candidate|1789|(390,)|const|float64
call_1787 = relay.TupleGetItem(func_397_call(relay.reshape(var_1788.astype('float64'), [10, 1, 3]), relay.reshape(const_1789.astype('float64'), [10, 13, 3]), ), 0)
call_1790 = relay.TupleGetItem(func_401_call(relay.reshape(var_1788.astype('float64'), [10, 1, 3]), relay.reshape(const_1789.astype('float64'), [10, 13, 3]), ), 0)
uop_1794 = relay.atanh(bop_1752.astype('float32')) # shape=(5, 10, 9)
uop_1796 = relay.cosh(uop_1794.astype('float64')) # shape=(5, 10, 9)
const_1805 = relay.const([[[-9,-6,-8,-1,8,5,-8,3,6],[-5,1,-2,-4,9,5,-3,1,-9],[2,4,-3,8,-3,3,-10,-6,-4],[9,3,2,-8,-2,4,-7,-3,-6],[1,-8,-4,2,9,-9,8,-3,-8],[9,-9,6,-2,10,4,-4,10,7],[-2,2,-1,-8,-8,10,-7,-3,-9],[2,2,1,-7,-10,6,3,-8,-1],[5,-8,10,1,8,-4,3,-2,-7],[10,5,-1,9,9,8,-8,9,7]],[[5,-7,-6,-4,8,-5,-7,6,-6],[5,2,5,-3,-4,9,2,-3,-9],[-9,-7,8,-1,-6,-9,6,10,-5],[8,7,10,7,-2,-10,-9,-5,-5],[8,-10,-5,-9,-10,-8,3,4,-2],[-8,8,-9,-4,-7,-5,-3,-10,-9],[1,-5,6,-7,9,-1,-6,10,-10],[2,7,2,-2,5,8,-7,2,10],[-5,-9,8,5,-8,10,4,-1,-1],[-3,9,-7,1,-8,5,-3,4,-5]],[[9,-8,5,-4,-10,-9,7,6,-9],[-5,-6,-5,10,3,9,10,-8,-6],[8,1,2,-1,-2,-7,9,-9,-4],[7,-4,1,8,1,10,8,-7,8],[-9,-2,-5,1,-10,2,-7,-9,-9],[2,2,3,3,1,-10,-3,9,1],[-2,-9,-3,6,10,-10,-8,8,8],[-3,5,-4,5,6,-1,-10,-1,5],[2,3,9,-4,-8,8,-6,-8,4],[-5,-9,5,-10,-3,5,-5,1,2]],[[-3,-8,9,-6,6,-3,8,-1,1],[-5,2,1,5,-8,-6,-8,-7,2],[2,-10,-4,9,2,-10,-8,1,-2],[9,10,6,8,-5,-10,-10,6,1],[2,3,9,-7,8,-7,4,-10,3],[-8,-1,5,-1,6,-4,9,-4,-2],[-6,10,-10,-4,10,7,-3,-6,2],[-8,8,-2,10,10,4,8,4,-3],[2,-9,3,-10,4,1,-9,3,-2],[10,8,7,-6,1,-1,-4,-4,-7]],[[-2,-3,3,6,-4,9,-4,9,3],[-4,-9,8,-1,-4,7,2,-10,-8],[1,-5,3,-3,7,6,6,-6,5],[6,6,1,-3,5,-7,8,-8,-3],[1,7,5,-5,-3,7,-6,-6,-5],[10,-9,3,9,-4,-6,-8,-4,-2],[-8,2,-1,1,-4,-4,5,8,8],[-10,5,-3,-4,8,8,6,1,7],[-9,-1,-7,-3,-8,6,2,-2,3],[-10,10,2,-9,2,-8,-2,-9,-9]]], dtype = "uint8")#candidate|1805|(5, 10, 9)|const|uint8
bop_1806 = relay.less_equal(bop_1778.astype('bool'), relay.reshape(const_1805.astype('bool'), relay.shape_of(bop_1778))) # shape=(5, 10, 9)
bop_1824 = relay.logical_or(uop_1796.astype('bool'), relay.reshape(bop_1778.astype('bool'), relay.shape_of(uop_1796))) # shape=(5, 10, 9)
output = relay.Tuple([call_1760,var_1761,call_1763,var_1764,call_1774,call_1787,var_1788,const_1789,bop_1806,bop_1824,])
output2 = relay.Tuple([call_1762,var_1761,call_1765,var_1764,call_1775,call_1790,var_1788,const_1789,bop_1806,bop_1824,])
func_1836 = relay.Function([var_1740,var_1751,var_1761,var_1764,var_1788,], output)
mod['func_1836'] = func_1836
mod = relay.transform.InferType()(mod)
var_1837 = relay.var("var_1837", dtype = "float32", shape = (5, 10, 9))#candidate|1837|(5, 10, 9)|var|float32
var_1838 = relay.var("var_1838", dtype = "float32", shape = (5, 10, 9))#candidate|1838|(5, 10, 9)|var|float32
var_1839 = relay.var("var_1839", dtype = "uint8", shape = (1536,))#candidate|1839|(1536,)|var|uint8
var_1840 = relay.var("var_1840", dtype = "int8", shape = (182,))#candidate|1840|(182,)|var|int8
var_1841 = relay.var("var_1841", dtype = "float64", shape = (30,))#candidate|1841|(30,)|var|float64
output = func_1836(var_1837,var_1838,var_1839,var_1840,var_1841,)
func_1842 = relay.Function([var_1837,var_1838,var_1839,var_1840,var_1841,], output)
mutated_mod['func_1842'] = func_1842
mutated_mod = relay.transform.InferType()(mutated_mod)
var_2192 = relay.var("var_2192", dtype = "float64", shape = (5, 6, 8))#candidate|2192|(5, 6, 8)|var|float64
uop_2193 = relay.exp(var_2192.astype('float64')) # shape=(5, 6, 8)
func_1836_call = mod.get_global_var('func_1836')
func_1842_call = mutated_mod.get_global_var('func_1842')
const_2200 = relay.const([-2.019419,-8.697877,-7.931518,-2.927287,8.943343,-2.838953,5.491648,2.843219,6.496985,-0.180817,4.220584,0.830109,-1.752421,9.053081,0.979799,-6.316168,-1.735714,3.956159,-9.821818,-9.636477,-6.698279,-8.887263,6.155508,-5.302801,0.581879,6.362323,1.279614,9.623070,7.822043,-5.742886,7.085615,-2.105057,6.139728,-3.338125,2.128355,3.795854,0.009706,3.463239,-6.579851,-3.017482,1.121137,-8.028898,-7.171693,-0.772093,-6.896946,-1.834171,-9.784667,0.959385,-7.751181,8.947718,-4.040116,3.597710,-4.439631,-5.547637,-6.931626,5.890590,5.230624,2.253366,9.299660,7.300401,-7.967655,4.383662,-6.868074,-4.188933,6.898965,-5.300546,9.770042,1.911535,5.415605,-4.804617,-0.732130,5.453862,7.032882,4.182516,-6.433846,-3.933133,4.039223,0.121193,-3.985082,-1.175291,-7.820304,9.684808,9.168115,3.826736,5.008469,-9.999083,0.834854,4.556380,-6.753994,8.491303,2.072950,2.359704,-5.580526,-2.954471,0.785937,-7.742726,0.417949,4.414591,-2.896359,6.837525,-3.151720,-4.388473,6.161879,-0.755797,-7.224769,1.414335,0.405400,-0.410203,2.198340,-5.347317,-1.389455,-1.889388,-6.290624,-9.098691,8.767039,-6.733596,0.671590,1.031073,-5.148703,9.551655,-6.402765,-9.597513,1.592733,9.644389,4.621499,8.054550,-4.857864,-7.210872,6.241013,5.767072,-7.301064,-9.939834,-6.175247,6.021158,8.539350,-2.224390,2.226753,0.199791,6.534292,8.208531,-1.804555,-0.488140,7.956912,-5.717254,1.912115,3.538840,0.084942,-6.541454,4.598594,8.984310,-3.310223,-2.479221,-2.016097,-4.963827,-4.349774,6.594863,9.571564,7.722431,-7.144964,0.011933,-7.147705,1.210946,9.051807,8.644708,9.243084,1.680695,-3.282158,7.134326,-5.036186,3.863373,-8.405653,0.699788,-4.913017,-6.197121,-9.747961,9.606716,-7.243975,3.448014,-6.967516,-9.383052,9.186463,7.126936,-8.381139,-8.946582,-2.512831,5.998150,-0.102189,-7.299863,-4.559044,6.926405,3.422540,0.163888,-6.595886,7.413820,0.355095,-3.668600,6.451957,9.901477,4.535178,-3.436131,4.160116,-9.533265,5.811339,-3.412605,6.178066,-4.319766,-2.726398,-0.074766,-3.637097,6.044877,8.157881,-0.849862,8.358064,-0.105854,-5.984281,1.164828,9.015024,0.009911,-5.977702,-5.797097,-8.024493,-1.789783,-1.968021,9.318860,-1.097853,-7.185580,-5.856628,0.817862,-4.469698,-9.829215,-0.037763,-8.390691,9.215353,-6.850875,-4.922849,2.420966,-3.487577,3.334968,-0.530623,4.521160,-9.486241,4.455656,3.022197,-2.756631,-2.797809,-9.658352,-3.272109,-4.463416,-3.274572,-9.893178,5.268245,2.298432,1.408611,-5.287038,1.280085,9.716608,-4.734435,2.473907,1.025987,9.511733,-4.611208,-8.231460,2.096509,9.411142,-3.556265,-6.513118,3.130950,7.225856,-8.929913,3.010565,4.454778,7.039406,5.971715,8.454547,4.682819,-0.837514,-3.337722,-8.149304,-2.667839,-1.888737,2.414249,-0.043991,-4.263575,-5.554204,-5.573111,7.808514,-6.026166,9.756254,7.618728,-9.820749,3.271634,-3.852798,9.378445,6.951695,-0.853467,-3.551404,-0.447971,7.426106,-7.601031,-7.345858,1.719813,6.653560,-3.519752,9.305772,2.104914,-4.057917,-6.221413,5.715825,-2.739400,4.317148,-0.342675,-9.185569,5.788595,4.431592,6.444981,-5.106492,1.225426,-5.379174,-2.385238,7.326043,8.777892,-1.567204,1.414289,-9.881055,1.502416,-0.481670,8.408810,-9.937596,-5.615398,5.251841,6.420866,-9.856414,5.938881,1.474672,-6.445047,5.982265,-2.561979,-7.933697,1.483225,8.445416,-5.252901,-1.556494,4.169406,-6.781943,9.704290,3.227085,7.707969,1.005958,4.222067,-1.241939,-6.658411,3.267036,-7.441317,-8.263474,-7.600030,-0.814444,1.494324,6.379447,7.106181,1.476612,9.636043,-7.823497,-6.240749,7.603620,-8.409391,-3.672840,3.545484,9.380099,7.715123,-4.103881,-3.902604,-6.813360,2.139241,-5.740525,-3.264618,4.283948,-7.620965,-1.194800,-1.372550,-4.734042,-2.164426,5.422711,2.774262,1.154214,-5.727160,-9.781161,-6.801804,-0.783477,-7.779935,-9.124669,-8.747708,-5.409162,6.779252,-5.795661,-4.264859,-8.062218,9.999426,5.195205,7.332904,8.379868,-5.746863,-9.699572,-7.659592,-3.199167,9.755937,7.318451,8.311608,-7.867133,4.826964,-6.645957,-7.507287,-2.452844,-1.355918,-5.799965,-2.134363,1.580917,8.146142,0.634601,-5.960704,8.134906,-8.275646,-0.520975,-5.798630,3.956264,2.250230,-9.187197,-9.659051,9.749453,-1.072344,-9.788221,2.896388,3.576878,3.453873,-2.984452,-0.175140,5.724000,6.916403,-2.027214,0.271579,3.611688,5.026674,-7.591987,-9.247621,-1.882706,6.680007,4.400390,-7.945826,4.880837,4.395636,-4.175162], dtype = "float32")#candidate|2200|(450,)|const|float32
var_2201 = relay.var("var_2201", dtype = "uint8", shape = (1536,))#candidate|2201|(1536,)|var|uint8
const_2202 = relay.const([[-10,7,1,-7,-10,-10,-8,-8,1,10,3,6,-8,-3,-2,8,-5,-9,6,-5,-1,-3,8,-1,-3,-3,-9,-10,-5,2,6,-1,-9,-5,8,-9,-7,-9,-4,-3,3,3,8,9,-8,1,4,-3,4,-6,-10,-3,-7,-3,3,6,-6,6,-2,-5,9,-4,-10,6,7,-10,6,5,6,-4,3,-4,1,-3,6,-5,6,10,6,-3,5,-9,7,-4,-1,-9,-8,-5,3,-2,-8,6,6,-1,1,5,-7,6,-10,6,-9,-8,-8,-6,3,-3,-6,-6,-4,-5,2,10,-6,-3,9,10,4,4,2,-4,1,9,-6,-10,-1,7,6,-3,6,-9,-5,2,6,3,8,-7,5,-8,1,5,-4,-5,10,3,4,-10,2,10,7,-9,1,8,2,-8,6,4,6,10,-5,-3,-8,10,4,-9,-3,8,4,9,3,-8,-3,-9,-2,-4,-6,6,1,-4,-5,-5,-3,2]], dtype = "int8")#candidate|2202|(1, 182)|const|int8
var_2203 = relay.var("var_2203", dtype = "float64", shape = (30,))#candidate|2203|(30,)|var|float64
call_2199 = relay.TupleGetItem(func_1836_call(relay.reshape(const_2200.astype('float32'), [5, 10, 9]), relay.reshape(const_2200.astype('float32'), [5, 10, 9]), relay.reshape(var_2201.astype('uint8'), [1536,]), relay.reshape(const_2202.astype('int8'), [182,]), relay.reshape(var_2203.astype('float64'), [30,]), ), 5)
call_2204 = relay.TupleGetItem(func_1842_call(relay.reshape(const_2200.astype('float32'), [5, 10, 9]), relay.reshape(const_2200.astype('float32'), [5, 10, 9]), relay.reshape(var_2201.astype('uint8'), [1536,]), relay.reshape(const_2202.astype('int8'), [182,]), relay.reshape(var_2203.astype('float64'), [30,]), ), 5)
uop_2207 = relay.log(uop_2193.astype('float32')) # shape=(5, 6, 8)
output = relay.Tuple([call_2199,const_2200,var_2201,const_2202,var_2203,uop_2207,])
output2 = relay.Tuple([call_2204,const_2200,var_2201,const_2202,var_2203,uop_2207,])
func_2209 = relay.Function([var_2192,var_2201,var_2203,], output)
mod['func_2209'] = func_2209
mod = relay.transform.InferType()(mod)
mutated_mod['func_2209'] = func_2209
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2209_call = mutated_mod.get_global_var('func_2209')
var_2211 = relay.var("var_2211", dtype = "float64", shape = (5, 6, 8))#candidate|2211|(5, 6, 8)|var|float64
var_2212 = relay.var("var_2212", dtype = "uint8", shape = (1536,))#candidate|2212|(1536,)|var|uint8
var_2213 = relay.var("var_2213", dtype = "float64", shape = (30,))#candidate|2213|(30,)|var|float64
call_2210 = func_2209_call(var_2211,var_2212,var_2213,)
output = call_2210
func_2214 = relay.Function([var_2211,var_2212,var_2213,], output)
mutated_mod['func_2214'] = func_2214
mutated_mod = relay.transform.InferType()(mutated_mod)
const_2273 = relay.const([[[-6.126436,-1.074485,6.006753,3.870586,4.643640,-6.297521,-4.597890,1.111346,-1.869329,-4.559800,3.391553,4.752542,-4.892318,-8.642376,8.641356,-9.363829],[-5.268490,-5.547479,5.557900,-0.141547,-5.487588,-4.971924,-4.833467,-4.680384,5.823209,-4.577543,1.756238,6.067288,-8.393702,2.034366,3.091511,8.130168],[-5.540464,9.067640,5.989327,-7.114824,-9.251033,4.653045,0.179506,5.495139,-4.318295,9.659828,-3.774794,-2.871303,7.466865,-1.717000,5.953616,-8.706708],[5.146916,-7.663363,-0.056722,-3.455522,8.613338,6.043460,6.881598,2.229430,3.078366,-3.736759,0.965053,-1.988024,-4.736512,2.883164,-6.304571,9.732843],[9.993903,3.565560,7.653008,6.536357,7.329307,9.125139,9.876166,-4.765197,6.569340,-2.221974,9.616758,2.764904,8.801558,-6.241240,6.287991,2.547867],[9.503009,-6.622399,-2.353953,6.317057,-0.517313,4.283953,-1.776385,-0.139857,-2.990099,-3.099263,0.322877,6.129936,6.501811,7.052398,3.272101,1.407382],[4.744992,3.578451,2.198643,8.233262,7.449524,-5.629649,-2.022879,-1.067479,0.517743,9.204852,-0.426850,-5.108156,-6.585965,-4.891090,-7.396712,-0.034309],[5.837893,-0.665371,-5.205022,3.606791,-8.820855,7.831652,-4.466052,7.144186,9.867041,6.447464,6.580562,2.507234,7.249914,3.161121,4.214290,0.346854],[-9.970005,-4.921365,1.020533,-1.486159,9.409484,-9.000474,3.886374,1.979548,-9.919195,7.894506,-8.269499,9.825685,-9.046944,-5.323052,-3.992850,9.496187],[7.424546,-7.990136,7.403095,-7.732483,-5.904954,-9.336135,-9.673469,-7.225293,-6.805173,-7.961829,-9.007205,-2.714417,-7.775824,0.323663,-8.694414,5.942188],[-1.973984,-7.698006,8.048625,-0.283912,-4.610791,3.822264,-4.583865,4.510588,3.004353,-5.971116,-2.167115,5.571430,6.414212,6.478997,2.554837,3.085812],[-2.413356,7.150504,-4.973807,-1.000682,-7.720740,8.610593,8.484628,-9.113502,-7.687616,3.983097,8.998167,6.214057,6.169910,3.949729,-1.131039,-5.593772]],[[-5.169154,-9.495136,0.534290,7.446192,-1.892918,-9.443536,-0.215708,4.778217,1.287593,1.399158,5.596144,7.527364,5.692552,4.247267,0.690613,9.192322],[5.755825,-2.645199,-9.664815,-0.244884,-5.156359,-9.110114,6.312810,8.047851,-6.053762,-4.932720,-2.658896,-9.779597,-3.872607,2.542624,1.659015,3.966855],[-5.251896,7.567483,-6.306773,3.217481,8.536460,2.477584,3.549846,9.882840,0.252997,5.286590,-2.206231,6.141441,8.280332,-8.035705,0.440868,0.544306],[-4.825300,-4.860394,9.737547,8.634594,-4.620510,8.291346,-0.963012,3.323011,-7.936085,8.412655,9.667507,1.010621,0.290111,6.681692,-4.438170,-7.272944],[-8.563698,9.674233,-6.335072,-4.339242,0.501029,8.556728,-8.663583,9.292533,7.330531,2.295315,1.661332,-1.767609,5.162954,-9.656861,-9.080277,-8.873319],[4.692497,-7.535060,-8.679160,-1.910569,4.421342,9.242620,4.912592,-4.599296,4.698120,7.436525,0.512785,1.681673,9.429954,-7.003380,-6.373496,-3.989097],[-5.323405,-8.802931,1.425614,-3.891999,-9.971289,6.859669,-6.780821,-5.781195,1.937763,-8.193981,8.723331,6.698681,7.340906,3.756125,-0.751056,-4.784071],[-9.899922,-9.003964,4.050240,-6.415059,-0.548301,7.010164,-9.529363,2.043314,9.594647,-1.896482,5.010252,-4.159853,6.001224,8.775693,8.645750,-5.478870],[-1.526778,-9.776358,3.828582,3.334642,-0.325346,-8.043732,-4.652788,-6.490910,7.157498,5.853035,8.069473,-7.499250,1.522384,-3.267559,9.073902,-5.719994],[2.881331,4.718240,-2.369639,8.116228,-2.870039,7.903275,5.942437,-9.859794,-7.912338,1.598785,9.110207,-2.717697,4.931740,-9.525326,3.103086,-9.631655],[4.408932,0.162824,-3.781893,-6.991291,-8.691070,-8.252080,6.370649,-9.649080,-5.826219,9.527112,9.083314,-5.874061,9.302832,0.240225,6.905654,1.283873],[-1.784374,-1.101706,7.359101,6.876945,-4.949956,1.515266,-2.778166,3.255969,-5.853171,1.601400,-1.970632,-4.180627,-6.838417,-9.533898,-4.052913,-8.979244]],[[-4.846896,9.292766,0.141642,5.901154,-0.472620,4.492737,1.787206,9.174032,-8.557090,8.118523,-5.064716,-6.023576,-9.146294,7.184009,-2.375087,6.779947],[-5.530413,8.097996,5.782907,-9.326047,4.691785,-3.359445,-3.684545,-0.883355,-7.083066,-7.937714,-7.400013,4.188483,3.068501,5.063655,-1.355605,4.291327],[4.708166,-3.050865,3.613234,6.612513,5.650389,1.908721,3.674892,-5.027377,-8.804748,6.236317,1.094243,5.550081,3.465504,-1.448356,5.656505,-8.162340],[-7.638461,0.215573,0.359039,3.739351,-3.464002,6.415966,-8.267334,-6.047196,-3.832412,9.139020,-1.228497,-7.318432,0.988802,-2.010249,-0.436791,-9.387956],[0.696967,3.302942,-0.350404,8.405375,4.280202,-8.709654,-5.656995,-7.466423,-7.154123,-8.765345,-5.197064,-9.278183,-8.889730,-3.692008,-5.318574,6.183314],[-3.678819,-5.067932,2.950696,-0.142459,-1.144748,9.740002,2.531544,6.202102,3.896560,-5.734491,8.601663,-8.765859,4.562843,-7.204309,7.846309,-2.278518],[-9.365762,-5.211841,-0.869940,9.039341,0.660548,-3.960905,-9.115247,4.829745,7.914157,-6.838392,-3.968580,-5.501276,7.967118,3.733154,7.981678,6.880312],[5.920245,6.534329,-2.607782,-1.010776,3.083747,-8.921046,9.118352,-0.338197,0.995413,8.350218,3.527954,-2.641938,-8.345856,0.330276,3.612865,-1.000866],[-7.239250,-2.917853,-4.213935,-0.036980,5.495288,6.336632,-6.616770,-9.756736,-8.916547,-1.545739,5.279640,5.460619,-7.739064,0.388435,9.151998,-8.688464],[-2.463513,-7.687089,-1.080879,-2.092481,1.848442,-9.509190,8.230357,4.422427,-5.857325,5.949058,-9.073102,1.540054,1.154323,-5.354522,-0.868680,-7.506001],[-7.398699,1.486848,-5.510407,-1.958260,-7.202673,2.353898,7.485418,8.688775,-1.774060,-7.152556,4.038325,-7.428468,-4.225739,9.959722,9.383275,9.557326],[-9.886932,-7.998513,4.760997,-8.305863,8.802932,6.979816,6.139956,-1.942825,-5.505015,-0.535680,6.346327,-7.296318,-9.187299,-3.507988,-3.281751,9.577788]]], dtype = "float64")#candidate|2273|(3, 12, 16)|const|float64
uop_2274 = relay.cosh(const_2273.astype('float64')) # shape=(3, 12, 16)
func_397_call = mod.get_global_var('func_397')
func_401_call = mutated_mod.get_global_var('func_401')
const_2283 = relay.const([[1.781049,-4.062556,-5.317920,-2.857194,-0.746686,-6.152392,-7.246149,-5.340365,3.512576,-6.421168,5.301988,-4.070969,-1.485074,7.000471,9.594363,-4.320818,-9.368584,-2.534068,-2.354892,6.476242,7.664595,2.274955,-0.018855,-1.136737,-5.222452,8.451444,-5.918035,-3.419815,-6.302100,8.543788]], dtype = "float64")#candidate|2283|(1, 30)|const|float64
var_2284 = relay.var("var_2284", dtype = "float64", shape = (390,))#candidate|2284|(390,)|var|float64
call_2282 = relay.TupleGetItem(func_397_call(relay.reshape(const_2283.astype('float64'), [10, 1, 3]), relay.reshape(var_2284.astype('float64'), [10, 13, 3]), ), 0)
call_2285 = relay.TupleGetItem(func_401_call(relay.reshape(const_2283.astype('float64'), [10, 1, 3]), relay.reshape(var_2284.astype('float64'), [10, 13, 3]), ), 0)
func_1087_call = mod.get_global_var('func_1087')
func_1091_call = mutated_mod.get_global_var('func_1091')
var_2292 = relay.var("var_2292", dtype = "uint8", shape = (1536,))#candidate|2292|(1536,)|var|uint8
call_2291 = relay.TupleGetItem(func_1087_call(relay.reshape(var_2292.astype('uint8'), [12, 16, 8]), relay.reshape(var_2292.astype('uint8'), [12, 16, 8]), ), 1)
call_2293 = relay.TupleGetItem(func_1091_call(relay.reshape(var_2292.astype('uint8'), [12, 16, 8]), relay.reshape(var_2292.astype('uint8'), [12, 16, 8]), ), 1)
func_2209_call = mod.get_global_var('func_2209')
func_2214_call = mutated_mod.get_global_var('func_2214')
var_2298 = relay.var("var_2298", dtype = "float64", shape = (240,))#candidate|2298|(240,)|var|float64
call_2297 = relay.TupleGetItem(func_2209_call(relay.reshape(var_2298.astype('float64'), [5, 6, 8]), relay.reshape(var_2292.astype('uint8'), [1536,]), relay.reshape(const_2283.astype('float64'), [30,]), ), 1)
call_2299 = relay.TupleGetItem(func_2214_call(relay.reshape(var_2298.astype('float64'), [5, 6, 8]), relay.reshape(var_2292.astype('uint8'), [1536,]), relay.reshape(const_2283.astype('float64'), [30,]), ), 1)
func_1527_call = mod.get_global_var('func_1527')
func_1529_call = mutated_mod.get_global_var('func_1529')
var_2303 = relay.var("var_2303", dtype = "int8", shape = (182,))#candidate|2303|(182,)|var|int8
call_2302 = relay.TupleGetItem(func_1527_call(relay.reshape(var_2303.astype('int8'), [2, 13, 7])), 0)
call_2304 = relay.TupleGetItem(func_1529_call(relay.reshape(var_2303.astype('int8'), [2, 13, 7])), 0)
func_1087_call = mod.get_global_var('func_1087')
func_1091_call = mutated_mod.get_global_var('func_1091')
call_2305 = relay.TupleGetItem(func_1087_call(relay.reshape(var_2292.astype('uint8'), [12, 16, 8]), relay.reshape(var_2292.astype('uint8'), [12, 16, 8]), ), 0)
call_2306 = relay.TupleGetItem(func_1091_call(relay.reshape(var_2292.astype('uint8'), [12, 16, 8]), relay.reshape(var_2292.astype('uint8'), [12, 16, 8]), ), 0)
output = relay.Tuple([uop_2274,call_2282,const_2283,var_2284,call_2291,var_2292,call_2297,var_2298,call_2302,var_2303,call_2305,])
output2 = relay.Tuple([uop_2274,call_2285,const_2283,var_2284,call_2293,var_2292,call_2299,var_2298,call_2304,var_2303,call_2306,])
func_2310 = relay.Function([var_2284,var_2292,var_2298,var_2303,], output)
mod['func_2310'] = func_2310
mod = relay.transform.InferType()(mod)
var_2311 = relay.var("var_2311", dtype = "float64", shape = (390,))#candidate|2311|(390,)|var|float64
var_2312 = relay.var("var_2312", dtype = "uint8", shape = (1536,))#candidate|2312|(1536,)|var|uint8
var_2313 = relay.var("var_2313", dtype = "float64", shape = (240,))#candidate|2313|(240,)|var|float64
var_2314 = relay.var("var_2314", dtype = "int8", shape = (182,))#candidate|2314|(182,)|var|int8
output = func_2310(var_2311,var_2312,var_2313,var_2314,)
func_2315 = relay.Function([var_2311,var_2312,var_2313,var_2314,], output)
mutated_mod['func_2315'] = func_2315
mutated_mod = relay.transform.InferType()(mutated_mod)
var_2344 = relay.var("var_2344", dtype = "bool", shape = (3, 13, 15))#candidate|2344|(3, 13, 15)|var|bool
const_2345 = relay.const([[[True,True,True,True,True,True,True,False,False,True,False,True,False,False,True],[True,False,False,True,False,False,True,False,True,False,False,True,True,False,True],[True,True,False,False,False,True,False,True,True,False,False,True,True,False,True],[True,True,False,True,True,False,True,False,False,True,True,False,False,False,False],[True,True,True,True,True,True,False,True,True,True,False,True,False,True,False],[False,False,True,False,True,False,False,True,True,False,False,False,True,False,False],[True,False,True,True,True,False,False,False,False,True,True,False,True,False,True],[True,False,False,False,False,True,True,False,False,False,False,False,False,True,True],[False,True,True,True,False,False,True,False,False,True,False,False,True,True,False],[True,False,False,True,False,False,False,True,False,True,True,False,True,True,False],[False,True,True,True,False,True,False,False,True,False,True,True,False,True,False],[False,False,False,False,True,True,False,True,False,False,False,False,True,False,True],[True,False,True,False,False,True,True,False,True,False,False,True,False,True,False]],[[False,True,False,True,False,True,False,False,False,False,True,True,False,False,True],[False,True,True,True,True,True,False,False,True,False,False,False,True,False,True],[True,True,False,True,False,False,False,False,True,False,False,False,True,True,False],[False,True,True,False,False,False,True,False,False,True,False,False,True,True,True],[False,False,False,False,True,False,True,True,False,False,False,False,False,True,True],[False,False,False,True,False,False,True,True,True,True,False,True,True,True,True],[False,True,True,False,False,True,False,True,False,False,True,False,True,True,False],[False,True,False,True,False,False,True,True,True,False,False,False,False,True,True],[True,False,True,False,False,True,True,True,False,False,True,True,False,False,False],[False,True,True,False,False,True,False,True,False,False,False,False,False,False,True],[True,True,True,False,True,False,True,True,True,True,True,False,False,True,True],[False,False,False,True,False,False,False,True,True,False,True,True,False,True,True],[False,False,False,True,True,False,True,False,True,False,False,False,True,False,True]],[[False,True,True,False,False,False,False,True,True,True,True,False,True,False,True],[False,False,True,True,True,False,True,True,True,False,True,True,False,False,True],[True,False,False,True,False,True,True,False,False,False,False,True,False,True,True],[True,True,True,False,False,True,True,True,False,False,True,True,True,True,False],[False,True,False,True,False,True,False,True,True,False,True,True,True,True,False],[True,False,False,False,False,False,True,True,False,True,True,True,True,False,True],[True,True,False,True,False,False,False,False,True,False,False,False,True,True,True],[False,False,True,False,True,True,False,False,True,False,False,False,False,True,True],[True,False,False,True,True,False,True,False,False,False,False,False,False,True,True],[True,True,False,False,True,True,True,False,True,False,False,True,True,False,False],[False,True,False,False,False,False,False,True,False,False,True,False,False,True,True],[True,False,True,True,False,False,False,False,False,False,False,True,True,True,True],[False,True,True,False,True,True,False,True,True,False,True,False,False,True,False]]], dtype = "bool")#candidate|2345|(3, 13, 15)|const|bool
bop_2346 = relay.logical_and(var_2344.astype('bool'), relay.reshape(const_2345.astype('bool'), relay.shape_of(var_2344))) # shape=(3, 13, 15)
bop_2355 = relay.mod(bop_2346.astype('float64'), relay.reshape(var_2344.astype('float64'), relay.shape_of(bop_2346))) # shape=(3, 13, 15)
func_1836_call = mod.get_global_var('func_1836')
func_1842_call = mutated_mod.get_global_var('func_1842')
var_2359 = relay.var("var_2359", dtype = "float32", shape = (450,))#candidate|2359|(450,)|var|float32
var_2360 = relay.var("var_2360", dtype = "uint8", shape = (2, 768))#candidate|2360|(2, 768)|var|uint8
var_2361 = relay.var("var_2361", dtype = "int8", shape = (182,))#candidate|2361|(182,)|var|int8
const_2362 = relay.const([5.854746,-2.653309,0.542782,-1.774672,3.318031,8.953798,8.990243,6.011418,-0.595392,-6.196962,-3.894676,-5.948444,-1.852498,5.836869,-1.699233,5.958223,-9.792727,1.233444,0.755794,6.971601,-7.461107,3.543196,9.158627,-4.090298,-0.535933,-4.350446,9.367290,6.485847,-9.731282,6.971688], dtype = "float64")#candidate|2362|(30,)|const|float64
call_2358 = relay.TupleGetItem(func_1836_call(relay.reshape(var_2359.astype('float32'), [5, 10, 9]), relay.reshape(var_2359.astype('float32'), [5, 10, 9]), relay.reshape(var_2360.astype('uint8'), [1536,]), relay.reshape(var_2361.astype('int8'), [182,]), relay.reshape(const_2362.astype('float64'), [30,]), ), 7)
call_2363 = relay.TupleGetItem(func_1842_call(relay.reshape(var_2359.astype('float32'), [5, 10, 9]), relay.reshape(var_2359.astype('float32'), [5, 10, 9]), relay.reshape(var_2360.astype('uint8'), [1536,]), relay.reshape(var_2361.astype('int8'), [182,]), relay.reshape(const_2362.astype('float64'), [30,]), ), 7)
bop_2379 = relay.bitwise_xor(bop_2346.astype('int16'), relay.reshape(bop_2355.astype('int16'), relay.shape_of(bop_2346))) # shape=(3, 13, 15)
bop_2382 = relay.minimum(bop_2355.astype('uint32'), relay.reshape(var_2344.astype('uint32'), relay.shape_of(bop_2355))) # shape=(3, 13, 15)
output = relay.Tuple([call_2358,var_2359,var_2360,var_2361,const_2362,bop_2379,bop_2382,])
output2 = relay.Tuple([call_2363,var_2359,var_2360,var_2361,const_2362,bop_2379,bop_2382,])
func_2385 = relay.Function([var_2344,var_2359,var_2360,var_2361,], output)
mod['func_2385'] = func_2385
mod = relay.transform.InferType()(mod)
var_2386 = relay.var("var_2386", dtype = "bool", shape = (3, 13, 15))#candidate|2386|(3, 13, 15)|var|bool
var_2387 = relay.var("var_2387", dtype = "float32", shape = (450,))#candidate|2387|(450,)|var|float32
var_2388 = relay.var("var_2388", dtype = "uint8", shape = (2, 768))#candidate|2388|(2, 768)|var|uint8
var_2389 = relay.var("var_2389", dtype = "int8", shape = (182,))#candidate|2389|(182,)|var|int8
output = func_2385(var_2386,var_2387,var_2388,var_2389,)
func_2390 = relay.Function([var_2386,var_2387,var_2388,var_2389,], output)
mutated_mod['func_2390'] = func_2390
mutated_mod = relay.transform.InferType()(mutated_mod)
var_2566 = relay.var("var_2566", dtype = "float32", shape = (14, 11, 14))#candidate|2566|(14, 11, 14)|var|float32
var_2567 = relay.var("var_2567", dtype = "float32", shape = (14, 11, 14))#candidate|2567|(14, 11, 14)|var|float32
bop_2568 = relay.subtract(var_2566.astype('float32'), relay.reshape(var_2567.astype('float32'), relay.shape_of(var_2566))) # shape=(14, 11, 14)
uop_2572 = relay.cosh(var_2567.astype('float64')) # shape=(14, 11, 14)
uop_2574 = relay.log2(uop_2572.astype('float64')) # shape=(14, 11, 14)
output = relay.Tuple([bop_2568,uop_2574,])
output2 = relay.Tuple([bop_2568,uop_2574,])
func_2586 = relay.Function([var_2566,var_2567,], output)
mod['func_2586'] = func_2586
mod = relay.transform.InferType()(mod)
mutated_mod['func_2586'] = func_2586
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2586_call = mutated_mod.get_global_var('func_2586')
var_2588 = relay.var("var_2588", dtype = "float32", shape = (14, 11, 14))#candidate|2588|(14, 11, 14)|var|float32
var_2589 = relay.var("var_2589", dtype = "float32", shape = (14, 11, 14))#candidate|2589|(14, 11, 14)|var|float32
call_2587 = func_2586_call(var_2588,var_2589,)
output = call_2587
func_2590 = relay.Function([var_2588,var_2589,], output)
mutated_mod['func_2590'] = func_2590
mutated_mod = relay.transform.InferType()(mutated_mod)
var_2603 = relay.var("var_2603", dtype = "float32", shape = (8, 10, 8))#candidate|2603|(8, 10, 8)|var|float32
const_2604 = relay.const([[[-3.804873,-7.183680,-7.672368,7.950066,-7.779709,6.981304,-0.474264,7.510100],[-8.161975,7.079311,6.926942,0.918570,-5.427097,-5.979903,1.253331,-1.283207],[-1.322726,7.004310,-1.596015,-3.731640,-7.830073,-6.810633,-1.121017,2.419065],[2.418473,9.879382,-7.179178,-6.655527,-8.463692,-2.485449,-7.864398,7.080544],[-1.117982,5.026086,3.233697,6.445486,-8.170705,-3.596756,6.919541,1.449713],[-4.898824,4.643920,1.046949,-3.549171,-9.188973,-7.322716,3.052028,-2.053206],[-7.705844,5.559143,6.401066,1.260363,-2.498933,-9.283004,6.802046,-4.101861],[-6.145363,7.170710,-6.740950,0.340832,-4.150479,3.841535,9.960426,4.971980],[-2.930915,0.829337,-2.706288,7.080308,-1.870745,-0.418168,3.968648,-3.911838],[1.618814,3.227146,2.717437,-6.648001,-0.926101,6.509185,5.031384,9.255170]],[[1.079841,-3.616294,-7.538519,-3.851777,2.211273,-3.869037,-3.464123,6.067815],[-6.901407,0.496627,6.881189,-6.965223,6.643005,-7.511759,-1.721195,-7.798434],[-4.284007,0.379655,-9.337187,-7.473411,6.538293,-2.771719,4.342198,1.512426],[8.208984,5.704936,-4.700748,-8.602921,9.263568,0.329180,2.081338,-8.865300],[-2.614562,-7.207784,0.116256,-8.559312,0.191082,-7.625112,-5.024091,9.961635],[-9.898886,7.003079,-5.967347,5.794635,-8.127149,2.003913,-0.758461,7.265382],[-9.570665,-9.372073,-4.155743,-7.346393,1.038478,-3.958586,-3.434802,6.701117],[-9.222394,2.524136,5.590836,7.131433,9.253385,1.125933,-9.244663,-3.083943],[-3.573010,-7.383968,-7.580877,-6.433258,-3.233829,8.574762,-4.824576,0.394297],[7.034900,0.379647,3.187457,-9.103984,-9.476251,3.331196,5.000167,0.385762]],[[-8.329419,-7.407709,-4.670394,-6.475583,-2.063991,2.533143,0.812991,2.800879],[0.406118,8.336154,4.521236,-8.950023,3.043578,-8.355278,9.995344,-8.943711],[-9.662103,-9.136381,2.997055,8.455757,5.459523,3.528846,7.142070,5.645341],[0.969296,-3.569988,0.419585,-1.014427,-2.825782,6.232314,-3.355711,6.207257],[-4.994724,3.198491,-1.410231,3.916764,3.655323,-4.362337,-6.733199,-2.707592],[-5.387714,-0.091183,4.771186,-2.019965,-1.223112,9.040810,8.164970,7.805241],[8.734097,-8.769312,0.880970,2.214478,-7.911821,6.117267,6.342687,-4.906921],[-2.825266,3.806859,-0.232949,4.742860,6.709628,5.721704,2.309123,4.823029],[-5.139138,8.667497,0.750051,-2.892621,-4.720843,-4.490314,3.666448,-2.071793],[-5.376168,8.706440,7.675717,8.976110,-1.126572,-9.860633,9.281818,-2.629883]],[[7.020351,7.095689,-1.309845,-0.032250,4.532561,-9.165153,5.024449,2.220692],[5.949621,-5.198747,8.572700,0.676906,7.407613,-7.815747,0.966724,-3.276301],[-7.862366,-8.546806,6.978637,9.752176,0.346244,-5.622054,-1.598435,-3.243540],[-9.641533,3.299744,-2.715538,1.202606,-1.443562,-2.734635,-7.204348,-9.810884],[-6.880516,7.896529,5.010772,0.475416,0.912786,1.901631,3.596134,4.069222],[2.744063,1.848571,1.324943,7.725533,-1.937602,-2.222592,-0.091805,8.168759],[0.048443,-8.452869,-6.981606,1.109826,6.819561,0.683621,8.936293,1.210587],[0.984455,-6.610837,7.879173,-2.546166,-6.504686,9.718394,0.800384,5.597788],[3.813467,2.983896,9.618616,1.846245,-5.985495,7.225039,4.718846,-2.874880],[-2.877426,-1.974906,-1.629513,6.200062,1.051285,6.446087,-4.266431,8.316684]],[[-9.857104,3.305091,0.249898,3.958716,6.303002,2.761096,6.517254,-3.610402],[8.227528,7.590755,4.203794,-2.024372,5.744061,-6.218036,-4.177118,-2.483059],[-7.142945,0.705023,-6.659725,9.894624,5.049548,5.232538,-5.885082,-4.993121],[-2.529451,0.755611,8.661899,-5.557562,9.070400,-7.558813,-8.543951,6.826629],[-5.318925,-1.521219,1.006693,-0.423698,9.006022,5.508125,2.403274,7.955031],[5.720004,-5.433954,-2.421883,-6.031447,0.289954,0.426301,9.313074,-7.257993],[0.997090,-7.285895,6.235509,-4.790434,-8.263784,-0.392358,0.430575,2.718937],[4.767884,4.479350,-9.200129,9.429475,-9.864407,2.119571,5.441153,3.842597],[4.160390,0.257538,2.211335,0.333959,8.113424,0.059804,9.296990,-2.586498],[-0.348225,-4.091117,7.516141,-9.496780,-1.490826,8.197584,-3.444072,7.875447]],[[-5.855195,-3.412806,-2.463530,-7.368786,4.842977,-8.420286,-7.026552,0.830889],[6.218279,-2.172952,-3.512546,-2.102163,-5.378277,-1.492119,2.354692,-7.156229],[2.652874,5.964104,-3.704191,3.124785,4.133161,-8.523744,-4.584992,4.965200],[2.368515,-6.552239,-4.851740,1.710697,-0.756952,4.650982,7.756130,-6.958124],[-0.241595,-7.118925,6.097387,6.294240,8.829514,-2.994439,0.432825,0.608432],[8.952084,-6.566745,7.005895,0.849473,-4.167572,5.718971,-5.755731,-1.312987],[1.577367,-3.949531,-1.726075,5.142581,1.399493,-3.732764,1.171297,-7.899138],[6.559236,2.929109,-9.538682,9.154300,9.328677,-4.616128,-0.171633,9.079731],[0.725401,-7.376268,6.472157,3.300185,1.883776,3.402713,-7.414468,-9.113711],[5.317395,-8.135591,-4.412554,-9.795535,-9.189717,4.758121,8.477326,-0.838772]],[[-0.965794,-2.432949,-1.678273,2.836868,0.469569,8.934600,-2.242231,-6.601905],[0.831564,2.813805,-3.080501,6.845650,-6.987638,4.402349,1.974137,-5.839357],[-3.758897,0.659586,-1.817828,-4.889114,-1.406251,9.283034,1.782142,-6.495228],[-9.298708,-8.388618,3.951428,1.065698,6.006002,5.937680,-6.972260,-8.877388],[-0.181133,-7.557182,-6.153694,6.763385,-8.699648,0.489745,-0.401669,-3.440367],[1.391346,2.246699,-7.259464,-4.094754,4.217519,4.346948,4.195232,-7.764496],[5.240350,0.078403,9.928967,-8.264838,9.311135,-5.872954,7.558109,5.876908],[6.105248,1.746011,1.887369,7.561207,1.826800,0.811852,1.013278,6.150935],[-9.195307,-8.710063,6.676086,3.405245,1.639666,-1.574876,-3.807098,6.871404],[-6.932346,4.410254,1.405035,-5.385466,0.448522,0.284433,6.825841,-6.606939]],[[2.465323,9.860466,2.001859,-9.254866,-6.940913,-7.904528,-0.499013,2.891695],[-8.911831,-6.114660,2.052285,2.866239,-5.866274,5.804653,6.638258,9.563522],[4.881679,4.832475,9.168190,1.045227,-2.854879,-5.395382,8.844242,0.298639],[0.050862,1.100148,-6.103474,8.843039,-4.530159,-7.580570,-0.136526,-5.136727],[-8.975381,0.241649,4.768639,-6.496538,-5.533923,-5.644792,-7.579639,8.239026],[-4.749133,-8.246763,2.632376,5.825320,2.053169,1.411952,-8.651441,6.372807],[8.415540,-6.715295,8.826353,-8.647007,-1.818949,3.523528,-0.009431,-8.174409],[-0.978559,0.322116,-6.291226,5.351982,-5.778841,-5.682485,-3.034156,-6.263446],[-0.694084,7.789201,1.768697,6.142294,-2.970533,-3.514482,2.447646,8.380347],[1.478898,-3.690722,-8.931852,1.878325,-3.386640,2.606173,1.453076,9.456536]]], dtype = "float32")#candidate|2604|(8, 10, 8)|const|float32
bop_2605 = relay.divide(var_2603.astype('float32'), relay.reshape(const_2604.astype('float32'), relay.shape_of(var_2603))) # shape=(8, 10, 8)
output = relay.Tuple([bop_2605,])
output2 = relay.Tuple([bop_2605,])
func_2610 = relay.Function([var_2603,], output)
mod['func_2610'] = func_2610
mod = relay.transform.InferType()(mod)
mutated_mod['func_2610'] = func_2610
mutated_mod = relay.transform.InferType()(mutated_mod)
var_2611 = relay.var("var_2611", dtype = "float32", shape = (8, 10, 8))#candidate|2611|(8, 10, 8)|var|float32
func_2610_call = mutated_mod.get_global_var('func_2610')
call_2612 = func_2610_call(var_2611)
output = call_2612
func_2613 = relay.Function([var_2611], output)
mutated_mod['func_2613'] = func_2613
mutated_mod = relay.transform.InferType()(mutated_mod)
const_2721 = relay.const([[[-1.053621,0.619343,-3.330086,1.055803,3.165320,6.047507,2.733973,0.812130,-0.448139],[-6.438527,3.516314,-5.512803,-7.019286,9.635835,3.076054,7.567419,0.473154,5.346057],[-5.497548,6.470357,-2.564184,-3.767008,2.534630,2.329919,-8.009855,-2.901469,-6.896979],[1.291541,4.728114,-1.456452,7.076860,-6.655952,-6.329533,5.222294,0.648529,9.757256],[5.144009,6.494002,2.949449,-4.330084,-0.738787,0.807264,-2.320806,2.061338,1.761913],[-3.701462,3.008757,1.266610,-1.180053,-9.805522,2.248370,-7.721619,7.530807,-2.193375],[-1.562218,2.648097,6.013606,4.876518,2.109571,2.797580,-6.356218,-9.349473,6.180157],[-5.029220,-9.717208,9.143501,-8.913739,-8.244498,0.870155,-5.326175,-9.975052,-3.993460],[-3.395517,1.519378,-4.310437,-1.622327,-6.896805,-2.275003,-5.022516,2.721974,5.661622],[6.625082,-5.887058,-8.894341,-7.609220,2.609506,-8.918875,-0.557608,1.061383,-1.724882],[6.628401,0.576470,0.715908,5.039877,-5.175423,-5.524673,8.891795,3.477469,-3.661953],[5.681210,-6.598767,8.245003,-2.339509,4.111724,3.707110,0.335099,-6.195339,-6.080131],[-7.016246,9.738853,-1.675402,-8.752469,6.832360,-1.685652,0.188638,-8.581418,-8.937801],[-3.915160,-8.743331,9.710277,-3.015352,-5.313945,9.459762,-1.856083,-9.106155,-2.819163],[-2.840223,-8.837023,-4.511028,9.655942,-1.487006,4.293854,3.413598,2.959829,9.630731]],[[5.612322,4.903292,-7.112766,-5.818022,-2.357367,-9.365932,0.673417,3.934325,9.470867],[-4.784199,-6.963178,-5.756561,-2.897099,5.529256,2.065816,-0.227169,-3.765084,-0.945019],[-3.904501,-7.748854,3.065248,5.856826,3.809090,-1.571453,-3.063798,9.028342,9.575527],[-6.791985,4.846427,2.745447,-8.783068,5.394492,0.959850,2.735393,-1.257518,-9.369420],[-1.995138,-2.957551,8.595207,-0.350627,-6.200630,-3.738423,-8.338232,3.945089,-5.305144],[-6.494849,-8.896050,-3.168656,-9.407306,8.504380,9.998899,-1.216970,3.643561,8.618787],[-4.442298,-3.031366,7.951642,-2.275720,4.926742,8.450353,7.609476,-7.684416,0.712742],[4.066624,-8.617648,-4.828161,6.042465,1.025073,1.190861,5.149189,5.174410,-4.615541],[-9.082585,-1.354407,-9.220660,5.121686,0.857702,5.847677,-0.960967,-6.092315,5.961211],[-3.744810,-7.685480,5.176220,-5.023512,0.609939,-2.705809,-9.771181,-3.441453,-1.800198],[-7.813826,-6.901076,8.225193,-9.887085,8.108667,-6.780524,5.847448,3.248807,1.779925],[-2.467583,4.700327,0.445704,4.942374,-8.823441,-1.505176,4.342966,-5.930526,-0.497985],[1.240218,-4.524930,-7.548407,-5.926381,9.615180,9.300276,-1.855006,1.275543,3.099472],[-7.415903,-3.033370,-1.474857,6.424106,-8.107324,-5.188999,-5.954318,6.506268,-2.515548],[1.442310,-7.779239,-0.858045,1.185023,1.841415,-4.419721,0.631627,1.331959,2.302730]],[[-3.392558,1.313163,-5.369946,-1.124127,-6.714546,1.500820,6.986929,2.699240,-5.525378],[2.717225,-8.557805,-5.285557,4.688244,8.859448,3.734157,-0.967245,-5.303067,-9.276049],[9.576859,6.912321,3.459909,-7.123313,0.495318,-8.056802,4.341163,-1.267572,-5.449880],[-2.037653,-0.367312,-2.881816,-3.543901,-6.099963,2.343666,-9.034010,1.144389,-3.682307],[-3.156177,5.206416,-1.948904,3.449064,6.120798,0.328308,-9.392050,4.206642,-4.268855],[4.439675,-1.381029,8.421690,-6.869560,1.817857,6.321464,-8.148830,-2.602190,3.475462],[4.921744,3.094986,-2.870511,-7.007557,-9.740556,-7.577494,-3.560013,-6.449404,1.654906],[-5.149077,4.037061,8.112973,0.517469,-1.537843,9.463306,-0.658728,8.042654,8.657902],[-7.626783,-0.751356,9.794709,4.837024,-6.737701,-1.140407,2.290220,-8.197298,-8.539611],[7.935637,4.134698,-1.895242,-0.218686,-2.183145,-6.547939,8.020723,5.816568,7.930974],[-4.843732,-5.615145,-1.306211,-9.403693,6.690951,-7.315866,-6.091208,5.407781,-7.731357],[-4.886420,-5.628478,-2.994777,-2.764204,-6.020886,8.018104,-7.778284,-7.499968,9.947921],[-6.744907,4.569633,-5.011225,9.173373,4.959824,-1.693850,-9.929229,-4.003338,3.801469],[8.466335,6.600039,-6.987544,-1.737159,-4.609941,9.817512,8.711053,-5.432240,-3.183743],[4.719335,8.102660,-6.952279,-9.571318,5.529490,-2.395099,7.185186,-3.325697,9.763336]],[[6.244966,-4.953779,-2.969016,4.219840,5.525930,-4.046170,-5.999434,9.142389,1.038078],[-9.303994,2.906647,-8.390403,-7.222940,1.306504,-5.573182,8.233325,-3.360108,-5.668394],[-5.651204,5.277207,4.575593,6.758205,3.709236,8.759840,-1.629727,-7.584495,0.207785],[6.274151,-7.919958,5.574534,4.144264,-3.107444,-4.102113,6.285866,1.594100,-4.120279],[-3.697488,-3.198012,-8.301377,-5.620615,2.801176,-9.648053,-0.194116,7.146674,3.086958],[6.117273,4.928604,-3.251124,-3.454776,-5.045384,-7.278951,-4.984105,-1.377986,-7.086812],[2.975259,-3.721300,3.156684,2.473148,-9.435652,-5.351929,9.265682,7.240668,-3.614425],[-5.472135,0.082545,-6.280546,2.992703,-3.154353,0.362629,1.996582,-3.671045,-6.620861],[-7.197019,4.616826,-3.657499,-7.669785,9.485790,-8.299919,-0.817459,4.274614,-0.222855],[8.740841,-8.393258,9.894592,9.567797,-0.627183,-5.185141,4.897266,7.680534,-2.204540],[8.266254,3.748781,-3.152165,-9.305320,5.577740,-9.633161,0.834342,9.417735,2.264654],[9.311115,0.235143,-5.199467,-7.700528,4.292328,-3.385264,1.011796,-6.235685,9.408089],[9.751468,4.154274,9.160846,-2.650765,-2.275906,-1.845730,-0.819441,-3.743954,-6.169271],[-7.255542,-8.965752,-9.620511,1.088572,-2.404600,-9.227071,-7.325895,0.145127,-9.424963],[2.092635,0.516738,6.394756,2.366547,-0.528631,7.998553,9.177224,1.403243,5.502454]],[[-9.225192,-7.857293,6.808254,-7.858768,-5.825894,2.834940,-0.360979,6.529331,-2.976474],[-6.767607,-5.901760,3.055332,1.245945,9.134778,4.369778,-6.088952,8.114119,-7.431419],[8.112228,-1.787078,5.487664,2.573323,-3.955893,4.080787,1.314778,8.185114,-4.759551],[1.428739,9.057213,8.158914,-4.740223,-7.217624,-6.588004,-8.155946,-7.278876,6.024935],[-0.599941,5.051456,8.554700,-2.501983,-0.873356,-1.066892,-1.044377,-1.658814,0.218877],[-0.374833,3.304158,6.584595,-5.595891,-1.683312,7.770989,-1.397150,-1.881435,-6.964860],[-6.772582,-5.242794,-4.487329,-2.181531,-9.098271,-0.059869,-5.484241,6.913429,-5.641395],[5.689081,-6.061454,6.412814,6.121745,-2.176087,1.703179,9.716656,2.570035,6.149058],[-8.165704,-2.997640,-0.449321,-8.381598,-2.833204,5.941519,1.547889,0.336397,-3.287444],[1.898713,-7.489920,5.473341,-7.522211,9.646172,-0.094031,-1.590111,-1.931439,2.395784],[8.081071,9.245938,-6.911372,-3.874552,1.865115,6.727623,-8.255516,9.622331,-4.244786],[2.314379,5.407111,-4.195310,0.086131,9.989906,-2.320111,-7.256358,-9.501965,2.607511],[-0.163073,-5.621003,5.010934,2.758698,-8.284498,-5.937568,2.555424,-5.125227,-3.752179],[-8.701647,8.819443,-9.922202,7.600065,1.361271,-2.453919,-3.930117,1.364147,5.535655],[-0.209295,-5.767343,4.419548,-5.025932,-1.306671,-3.876435,3.067128,-3.340177,-4.389786]],[[-2.824429,-0.810106,5.309571,-4.333860,1.498851,8.094978,-7.044109,-8.645422,-3.911784],[9.001603,-9.394777,5.142670,9.273835,-2.725453,8.835341,-9.452742,-6.513563,-7.154870],[8.746887,6.205686,-9.290045,8.809593,-3.088261,8.234140,-3.804477,8.037318,0.134355],[8.820923,-0.595626,-8.536720,-6.402594,5.444471,8.911529,-8.362781,4.892845,-4.535286],[-8.936652,-9.400087,1.633870,-4.674171,9.970269,-9.867982,-8.408532,4.846669,2.071174],[6.011937,-7.743711,-9.844117,-3.630256,-8.834301,-5.702926,8.491631,1.128994,-3.582814],[7.578184,-6.864183,-1.596705,4.497147,-5.744281,0.253904,7.261037,0.274371,-7.048663],[4.543690,-6.608999,-5.535068,-2.464097,-0.302464,6.498442,-6.082090,7.597781,7.357215],[-8.797413,-7.675691,3.014770,-6.239469,-1.598811,-0.438194,-6.716277,3.216602,-9.310945],[0.972153,3.575829,-1.377902,-3.122680,-2.768354,4.586578,-7.394053,-5.837553,-6.351048],[-8.619270,-0.704683,-2.116849,4.123646,4.901949,2.335684,-0.713096,-2.407712,-1.045941],[0.235131,-6.596392,-5.215243,1.267464,6.950566,-9.039560,-2.488512,-5.100956,4.056217],[8.134748,3.274695,-8.772416,-7.777763,-4.800485,-9.419207,6.017340,1.806329,8.148093],[7.173337,-2.107192,9.466171,-1.211798,-7.225268,-8.655257,7.074025,-8.120659,-8.439450],[-1.177261,-8.627494,-5.061932,9.799650,-4.233521,8.769258,3.957646,-2.713990,4.125804]]], dtype = "float32")#candidate|2721|(6, 15, 9)|const|float32
uop_2722 = relay.exp(const_2721.astype('float32')) # shape=(6, 15, 9)
uop_2733 = relay.sinh(const_2721.astype('float64')) # shape=(6, 15, 9)
var_2735 = relay.var("var_2735", dtype = "float32", shape = (6, 15, 9))#candidate|2735|(6, 15, 9)|var|float32
bop_2736 = relay.mod(const_2721.astype('float32'), relay.reshape(var_2735.astype('float32'), relay.shape_of(const_2721))) # shape=(6, 15, 9)
output = relay.Tuple([uop_2722,uop_2733,bop_2736,])
output2 = relay.Tuple([uop_2722,uop_2733,bop_2736,])
func_2745 = relay.Function([var_2735,], output)
mod['func_2745'] = func_2745
mod = relay.transform.InferType()(mod)
mutated_mod['func_2745'] = func_2745
mutated_mod = relay.transform.InferType()(mutated_mod)
var_2746 = relay.var("var_2746", dtype = "float32", shape = (6, 15, 9))#candidate|2746|(6, 15, 9)|var|float32
func_2745_call = mutated_mod.get_global_var('func_2745')
call_2747 = func_2745_call(var_2746)
output = call_2747
func_2748 = relay.Function([var_2746], output)
mutated_mod['func_2748'] = func_2748
mutated_mod = relay.transform.InferType()(mutated_mod)
var_2788 = relay.var("var_2788", dtype = "float64", shape = (5, 2, 13))#candidate|2788|(5, 2, 13)|var|float64
uop_2789 = relay.atanh(var_2788.astype('float64')) # shape=(5, 2, 13)
output = uop_2789
output2 = uop_2789
func_2804 = relay.Function([var_2788,], output)
mod['func_2804'] = func_2804
mod = relay.transform.InferType()(mod)
mutated_mod['func_2804'] = func_2804
mutated_mod = relay.transform.InferType()(mutated_mod)
var_2805 = relay.var("var_2805", dtype = "float64", shape = (5, 2, 13))#candidate|2805|(5, 2, 13)|var|float64
func_2804_call = mutated_mod.get_global_var('func_2804')
call_2806 = func_2804_call(var_2805)
output = call_2806
func_2807 = relay.Function([var_2805], output)
mutated_mod['func_2807'] = func_2807
mutated_mod = relay.transform.InferType()(mutated_mod)
const_2973 = relay.const(9, dtype = "int8")#candidate|2973|()|const|int8
var_2974 = relay.var("var_2974", dtype = "int8", shape = (5, 5, 8))#candidate|2974|(5, 5, 8)|var|int8
bop_2975 = relay.left_shift(const_2973.astype('int8'), var_2974.astype('int8')) # shape=(5, 5, 8)
output = bop_2975
output2 = bop_2975
func_2985 = relay.Function([var_2974,], output)
mod['func_2985'] = func_2985
mod = relay.transform.InferType()(mod)
mutated_mod['func_2985'] = func_2985
mutated_mod = relay.transform.InferType()(mutated_mod)
var_2986 = relay.var("var_2986", dtype = "int8", shape = (5, 5, 8))#candidate|2986|(5, 5, 8)|var|int8
func_2985_call = mutated_mod.get_global_var('func_2985')
call_2987 = func_2985_call(var_2986)
output = call_2987
func_2988 = relay.Function([var_2986], output)
mutated_mod['func_2988'] = func_2988
mutated_mod = relay.transform.InferType()(mutated_mod)
var_3593 = relay.var("var_3593", dtype = "int16", shape = (12, 2, 8))#candidate|3593|(12, 2, 8)|var|int16
const_3594 = relay.const([[[-10,10,-8,3,3,5,-7,10],[1,-7,-1,-4,6,-5,-2,8]],[[5,-1,2,-2,-9,1,-3,-2],[-3,1,-1,-4,-6,9,-9,-10]],[[-4,9,9,9,10,4,4,-10],[-4,-10,8,1,-7,4,7,10]],[[8,-7,1,-5,-7,4,6,8],[-5,-4,-4,-10,5,-5,-9,6]],[[-6,-4,-9,8,7,-7,8,-4],[4,7,-3,1,1,2,2,-1]],[[1,3,-4,3,-5,-6,-6,5],[8,-9,8,-1,-5,1,3,6]],[[-7,1,2,-5,-8,9,3,5],[-5,-4,-6,2,-10,-1,-6,8]],[[-7,-7,6,-5,6,8,7,1],[-10,5,-2,9,3,-6,6,4]],[[-2,2,6,-2,-1,-10,-4,10],[-5,-1,-1,10,10,-3,-9,-8]],[[10,1,-7,-6,3,-7,-8,2],[10,-10,-4,5,6,10,6,8]],[[-10,-10,2,-7,4,4,9,-5],[1,-1,6,1,-5,9,1,-7]],[[-6,9,-3,-3,-8,-8,4,9],[-9,-2,-8,8,6,-5,5,-7]]], dtype = "int16")#candidate|3594|(12, 2, 8)|const|int16
bop_3595 = relay.bitwise_xor(var_3593.astype('int16'), relay.reshape(const_3594.astype('int16'), relay.shape_of(var_3593))) # shape=(12, 2, 8)
output = bop_3595
output2 = bop_3595
func_3614 = relay.Function([var_3593,], output)
mod['func_3614'] = func_3614
mod = relay.transform.InferType()(mod)
var_3615 = relay.var("var_3615", dtype = "int16", shape = (12, 2, 8))#candidate|3615|(12, 2, 8)|var|int16
output = func_3614(var_3615)
func_3616 = relay.Function([var_3615], output)
mutated_mod['func_3616'] = func_3616
mutated_mod = relay.transform.InferType()(mutated_mod)
const_3629 = relay.const([[[3.682323,-8.797332,-0.454419,-8.310063,2.413201,-5.033787]],[[9.241743,-1.362166,-2.825694,-9.408041,9.398918,-0.605810]]], dtype = "float64")#candidate|3629|(2, 1, 6)|const|float64
uop_3630 = relay.asin(const_3629.astype('float64')) # shape=(2, 1, 6)
func_2985_call = mod.get_global_var('func_2985')
func_2988_call = mutated_mod.get_global_var('func_2988')
var_3633 = relay.var("var_3633", dtype = "int8", shape = (200,))#candidate|3633|(200,)|var|int8
call_3632 = func_2985_call(relay.reshape(var_3633.astype('int8'), [5, 5, 8]))
call_3634 = func_2985_call(relay.reshape(var_3633.astype('int8'), [5, 5, 8]))
func_2586_call = mod.get_global_var('func_2586')
func_2590_call = mutated_mod.get_global_var('func_2590')
var_3642 = relay.var("var_3642", dtype = "float32", shape = (2156,))#candidate|3642|(2156,)|var|float32
call_3641 = relay.TupleGetItem(func_2586_call(relay.reshape(var_3642.astype('float32'), [14, 11, 14]), relay.reshape(var_3642.astype('float32'), [14, 11, 14]), ), 0)
call_3643 = relay.TupleGetItem(func_2590_call(relay.reshape(var_3642.astype('float32'), [14, 11, 14]), relay.reshape(var_3642.astype('float32'), [14, 11, 14]), ), 0)
func_1087_call = mod.get_global_var('func_1087')
func_1091_call = mutated_mod.get_global_var('func_1091')
var_3668 = relay.var("var_3668", dtype = "uint8", shape = (1536,))#candidate|3668|(1536,)|var|uint8
call_3667 = relay.TupleGetItem(func_1087_call(relay.reshape(var_3668.astype('uint8'), [12, 16, 8]), relay.reshape(var_3668.astype('uint8'), [12, 16, 8]), ), 2)
call_3669 = relay.TupleGetItem(func_1091_call(relay.reshape(var_3668.astype('uint8'), [12, 16, 8]), relay.reshape(var_3668.astype('uint8'), [12, 16, 8]), ), 2)
func_411_call = mod.get_global_var('func_411')
func_414_call = mutated_mod.get_global_var('func_414')
var_3671 = relay.var("var_3671", dtype = "int32", shape = (2, 728))#candidate|3671|(2, 728)|var|int32
call_3670 = relay.TupleGetItem(func_411_call(relay.reshape(var_3671.astype('int32'), [14, 8, 13]), relay.reshape(var_3671.astype('int32'), [14, 8, 13]), ), 0)
call_3672 = relay.TupleGetItem(func_414_call(relay.reshape(var_3671.astype('int32'), [14, 8, 13]), relay.reshape(var_3671.astype('int32'), [14, 8, 13]), ), 0)
uop_3682 = relay.sinh(uop_3630.astype('float32')) # shape=(2, 1, 6)
output = relay.Tuple([call_3632,var_3633,call_3641,var_3642,call_3667,var_3668,call_3670,var_3671,uop_3682,])
output2 = relay.Tuple([call_3634,var_3633,call_3643,var_3642,call_3669,var_3668,call_3672,var_3671,uop_3682,])
func_3690 = relay.Function([var_3633,var_3642,var_3668,var_3671,], output)
mod['func_3690'] = func_3690
mod = relay.transform.InferType()(mod)
var_3691 = relay.var("var_3691", dtype = "int8", shape = (200,))#candidate|3691|(200,)|var|int8
var_3692 = relay.var("var_3692", dtype = "float32", shape = (2156,))#candidate|3692|(2156,)|var|float32
var_3693 = relay.var("var_3693", dtype = "uint8", shape = (1536,))#candidate|3693|(1536,)|var|uint8
var_3694 = relay.var("var_3694", dtype = "int32", shape = (2, 728))#candidate|3694|(2, 728)|var|int32
output = func_3690(var_3691,var_3692,var_3693,var_3694,)
func_3695 = relay.Function([var_3691,var_3692,var_3693,var_3694,], output)
mutated_mod['func_3695'] = func_3695
mutated_mod = relay.transform.InferType()(mutated_mod)
const_3711 = relay.const([[[4,-8,-1,10,-6,-3,-4,-8,4,1,-5,10,4,10],[5,-5,-1,10,9,2,-2,4,6,2,9,9,-4,9],[2,7,-5,-6,7,-10,10,2,7,-6,10,-2,3,7],[2,-9,-7,-4,9,1,-8,2,3,7,-2,2,3,2],[-5,7,-5,4,1,4,-9,-7,4,-2,1,-6,4,-4],[-1,-5,5,6,8,-10,1,10,9,-5,-5,1,-6,-3],[-8,-9,3,-7,-8,8,6,-5,-4,-5,2,-9,6,-7],[10,7,6,6,2,8,6,-5,6,7,5,-4,-3,6],[-4,4,-2,9,-8,9,-8,-9,-5,-7,2,-10,8,-6],[8,2,6,5,8,-7,-10,-4,3,3,6,8,5,-9],[-3,-6,6,4,-4,1,4,-6,-2,3,4,3,7,1],[1,-5,-4,7,8,3,10,-4,2,9,2,1,-9,9],[-6,-7,10,-3,-4,-4,10,4,3,-6,-2,9,8,-2],[-4,2,1,9,1,6,2,8,9,-4,2,7,5,-7],[-8,2,10,-6,-3,-10,8,-10,8,-2,9,-9,-6,-4]],[[4,5,-10,8,3,1,-8,2,7,-8,-1,-1,-6,3],[9,-4,1,-7,-10,-3,8,1,-4,-3,7,7,-2,10],[9,2,3,2,-9,6,-3,-2,-10,-6,6,-7,-1,-10],[-3,2,4,-1,-2,-2,2,-2,-7,-4,9,-3,-9,9],[5,2,-2,9,8,4,2,5,-5,9,-3,-1,2,7],[-6,-3,6,10,-2,3,-10,-4,-4,-6,-5,-1,7,1],[7,5,4,6,-5,-7,5,9,-10,6,1,3,9,6],[-7,7,5,-7,2,-9,8,-4,-10,8,7,6,-8,-5],[2,-2,8,-2,3,-2,-3,-2,10,5,10,-2,9,-4],[-6,3,2,-6,7,3,-9,3,-9,4,10,3,-3,6],[2,9,2,-7,-7,5,3,2,-5,2,9,-7,-5,10],[5,10,-7,-7,-10,3,7,1,-6,-2,7,6,1,-6],[2,-6,1,4,4,-9,6,-2,-8,3,-6,-4,8,-3],[-3,-5,5,2,9,6,-9,-10,6,6,-6,7,-3,-7],[3,1,-8,-3,-8,-1,-4,2,3,-6,5,5,2,-5]]], dtype = "uint8")#candidate|3711|(2, 15, 14)|const|uint8
var_3712 = relay.var("var_3712", dtype = "uint8", shape = (2, 15, 14))#candidate|3712|(2, 15, 14)|var|uint8
bop_3713 = relay.bitwise_xor(const_3711.astype('uint8'), relay.reshape(var_3712.astype('uint8'), relay.shape_of(const_3711))) # shape=(2, 15, 14)
uop_3723 = relay.acosh(var_3712.astype('float32')) # shape=(2, 15, 14)
const_3733 = relay.const([[[5.428312,-3.176710,1.299952,-2.041234,7.123754,7.171236,-1.270553,-5.441021,8.218240,6.952551,2.185137,-8.712600,8.246129,6.511818],[-6.246123,-2.255680,0.860713,-0.149856,5.482562,0.485336,-2.026696,-2.843822,-2.653216,8.358351,-1.308347,5.809791,1.956477,-3.138842],[-0.694869,8.090254,-5.239883,-8.239154,-2.129357,-9.826573,1.577004,9.986810,-4.545042,-0.046984,-3.096779,-2.173603,6.447060,-6.838283],[-7.417448,8.373725,-3.637859,8.227367,7.167746,6.494794,-1.522442,5.000295,7.491364,2.808861,-3.744137,-1.324949,-0.023734,5.840786],[4.581343,-4.883646,-7.661532,-3.045561,-3.091956,-5.332154,8.665332,-9.513244,7.579611,0.507919,-5.525675,2.245021,-1.175654,1.954373],[-5.614672,-6.145843,-7.046206,1.438026,8.890959,-4.178904,5.033510,2.020772,-3.008397,-7.446448,6.109804,-3.522492,4.296245,-3.177421],[-6.451922,-3.268663,-2.092483,-8.879940,4.533560,-1.282678,8.364371,8.494337,4.251739,7.727499,-2.521533,4.199253,8.440285,2.441959],[6.050890,-3.628929,7.575848,4.589675,-5.138645,-8.687942,1.646177,-7.683550,4.297807,-4.333500,-1.557004,-9.987797,5.934874,-4.605918],[-3.027519,3.016935,1.781371,1.103323,-4.423169,-9.533792,-6.292330,7.188192,6.840843,-0.840644,1.538624,8.526153,-4.716148,-9.878078],[-1.740550,-5.314888,-4.504189,-4.120485,2.315051,-4.218419,-3.533846,-5.624131,8.321735,3.930925,8.425616,-2.140661,-4.685546,-5.297740],[6.138938,-0.165343,6.185132,-3.255842,0.961987,0.839827,-5.466361,-5.508895,8.612643,5.597132,-0.153963,4.273554,-3.606374,-2.057698],[-7.936418,3.606771,5.441738,0.417369,-6.006703,-7.922240,-4.590860,0.599881,3.042890,-8.265135,-0.835957,-0.301780,-6.117887,0.191007],[8.817220,7.800590,-7.369341,4.437914,-3.465591,3.288898,8.185674,-8.924907,7.241091,-0.794150,-0.243179,0.526394,1.051746,8.732526],[-7.495064,-3.936666,2.642554,1.891275,7.254786,0.842116,2.016991,-4.306888,6.172014,-1.203771,-6.766450,9.563991,1.531739,-6.694437],[-4.286670,-7.886946,-4.960931,-7.574078,-9.153283,9.893347,7.826877,-6.259057,0.228529,5.595620,4.347904,-6.933617,-4.282216,-2.386884]],[[-1.817514,-2.452583,3.772683,5.110512,-0.979814,6.273432,0.217801,-6.991480,7.165626,7.586495,0.558126,7.025882,5.037195,6.627924],[-4.204943,3.919447,-0.062729,8.809326,7.326758,7.614330,0.628069,-0.754785,2.310424,9.229889,6.230183,-9.097902,8.280201,-7.859551],[4.082408,-7.062204,9.400420,-5.302199,-4.820342,3.697014,6.509295,2.306939,8.551431,7.947256,-7.955386,-2.509080,-7.531524,-5.972025],[-9.791224,-5.816725,-2.685023,4.784027,-1.059158,9.517678,-0.956601,-1.565406,6.333283,-8.877915,-8.960301,-0.498404,-8.343944,-1.417577],[6.853312,-7.374137,5.627574,8.112443,8.148893,-9.555743,-1.932640,-4.279081,-1.400445,-1.627734,-4.705113,1.784381,9.756698,9.006677],[-9.303612,-5.735258,2.164784,5.531163,2.376311,-0.049406,-4.013535,-8.269849,1.877192,4.540169,-6.714928,2.153827,-4.584517,7.618360],[-4.303574,9.492219,-0.680910,-3.334673,-5.835944,5.732435,-0.871300,-2.272009,-2.737070,-5.485044,-2.634761,4.269318,7.962699,6.816419],[9.677205,3.875243,-9.183574,-1.783356,-3.390579,-8.575380,0.627558,-6.223278,2.117214,-3.529584,-1.315412,1.536360,-4.996856,7.590114],[-6.590282,6.339383,1.120572,9.381660,9.270844,-7.866806,5.998490,-2.313765,-9.661818,-5.951298,3.286496,0.420364,7.885421,-6.419613],[-2.200733,-2.882496,6.644932,-1.891514,-8.395257,-3.656643,-1.071383,-6.736473,8.809108,-6.497638,7.107725,5.192593,1.182571,-8.684956],[-1.813731,-6.955389,-7.144563,3.728687,-8.623575,-2.537333,4.218861,-2.009940,-5.716861,9.137083,9.241949,3.720418,8.619246,1.917556],[-0.826944,6.232386,8.478942,7.222311,-9.102333,5.490149,-5.030087,-6.483947,-1.973268,3.368213,0.992462,-1.036499,-9.891047,9.967475],[-1.900566,-3.205054,5.470410,1.963731,9.965265,-3.515318,8.074527,-6.168509,-9.110367,-5.941244,9.125408,3.493967,-2.575373,9.492628],[5.530250,-1.174023,-9.315254,-6.026623,7.411629,-1.896016,-5.338897,-8.453770,-2.684341,-3.871766,8.950125,2.766450,-0.774242,7.276835],[-8.055047,-5.743302,-9.831916,4.407703,2.639965,-3.998179,-1.722586,-4.102152,4.891464,-9.019574,9.190160,-4.953572,1.239248,-5.986969]]], dtype = "float32")#candidate|3733|(2, 15, 14)|const|float32
bop_3734 = relay.logical_xor(uop_3723.astype('int32'), relay.reshape(const_3733.astype('int32'), relay.shape_of(uop_3723))) # shape=(2, 15, 14)
func_1087_call = mod.get_global_var('func_1087')
func_1091_call = mutated_mod.get_global_var('func_1091')
var_3739 = relay.var("var_3739", dtype = "uint8", shape = (64, 24))#candidate|3739|(64, 24)|var|uint8
call_3738 = relay.TupleGetItem(func_1087_call(relay.reshape(var_3739.astype('uint8'), [12, 16, 8]), relay.reshape(var_3739.astype('uint8'), [12, 16, 8]), ), 1)
call_3740 = relay.TupleGetItem(func_1091_call(relay.reshape(var_3739.astype('uint8'), [12, 16, 8]), relay.reshape(var_3739.astype('uint8'), [12, 16, 8]), ), 1)
func_397_call = mod.get_global_var('func_397')
func_401_call = mutated_mod.get_global_var('func_401')
const_3745 = relay.const([-0.769059,-6.058481,-8.260340,-1.053152,-1.753409,9.593448,-7.458806,-9.444247,2.212299,-1.277685,3.274785,-2.596982,-1.628335,2.696138,9.188105,3.141920,-0.621449,9.751695,-2.694662,7.786607,-5.876722,-5.760300,-0.670979,-6.257908,3.873589,-3.976820,1.628927,-5.803550,-9.700677,7.715444], dtype = "float64")#candidate|3745|(30,)|const|float64
const_3746 = relay.const([[-0.257432,1.689269,-2.149291,-6.142945,-2.944559,5.474529],[-6.624928,4.389490,5.238313,4.340054,7.375145,3.315612],[-3.819085,6.763386,-9.817319,-7.929144,-9.546753,-7.144034],[-8.462666,-2.187093,5.476985,3.143729,-4.433782,-0.963763],[7.992108,8.180909,-7.526364,6.389356,8.264561,2.737897],[2.757789,-8.874268,7.459255,-7.948706,-8.662694,-0.711915],[-9.656381,4.701595,7.801693,-6.532801,-7.249213,3.887820],[-0.358326,4.456704,9.872305,2.723394,-0.798932,-7.102602],[5.733231,3.272674,9.155034,4.454196,-3.702197,9.581514],[5.120475,-9.122882,0.673753,-0.186100,8.479396,-4.259561],[-8.014517,8.470983,6.753416,-6.821907,-7.668823,-0.913364],[1.317699,9.911281,8.840585,9.768170,-4.925293,-8.592889],[2.663050,0.716405,-7.774103,3.941125,7.220329,3.429813],[0.181958,9.504547,-8.721576,9.662314,-0.131786,4.389879],[3.333375,-5.440651,-1.435205,-2.771955,3.986819,-8.672850],[0.869937,-8.517277,-5.754427,8.977051,0.674260,9.007704],[1.840344,6.013642,8.796994,5.601138,-5.558000,-9.830584],[-0.549458,-4.844877,-8.088345,7.423930,6.753779,7.311279],[8.159194,0.558805,7.706198,-7.936560,3.166397,-0.551818],[-8.693985,-4.142744,5.836554,-5.703908,1.844566,7.211446],[6.628812,6.975173,-7.755901,5.473473,1.640313,-5.355101],[7.142405,5.536192,4.460906,-6.249138,1.752538,-6.308280],[8.311085,-9.267618,1.138985,3.239800,-7.190591,0.968687],[2.719940,8.490484,5.559924,4.212412,-1.962621,-0.834166],[0.983916,-1.539142,5.186658,4.036068,0.417457,5.739792],[-5.013671,3.344020,8.498934,7.603450,7.524979,7.777105],[3.222988,-4.286790,-7.766112,1.817685,6.172642,-1.122880],[-6.825489,0.331828,-0.121179,-3.097958,6.330901,2.747510],[2.874094,3.296587,2.360742,1.973664,-3.228340,8.413899],[-7.986450,-8.899208,-4.666299,-7.598376,-4.231568,-5.928855],[-3.162201,2.645854,-0.878840,-7.265170,-8.264050,7.872159],[7.812352,-4.871754,-8.517183,-4.924941,-5.197880,-2.466843],[4.707058,3.043477,-3.422457,-3.797876,-0.675990,8.742359],[9.236880,-4.708225,1.719357,3.872713,6.612657,-4.819484],[3.564625,-0.385473,8.722962,-5.768933,-1.493177,0.060147],[9.501734,5.697991,3.004882,2.980778,7.737396,-5.370415],[7.054210,0.418398,3.152628,-2.547442,-9.192944,-9.702058],[3.143797,-3.388915,-7.118776,-0.846295,-3.989918,-4.181175],[-5.019187,-4.928969,6.547199,1.382922,-7.542612,5.785044],[-5.773753,4.414237,5.071665,4.785602,-7.391898,-0.673570],[0.181372,2.636950,-9.282761,8.180318,9.013167,-0.740793],[7.113940,2.981202,-4.630982,9.962939,-3.006906,3.063850],[3.931791,-8.078724,0.824949,-4.557224,4.481034,-7.750392],[2.641072,2.986675,6.889042,-2.769218,1.878140,-7.590448],[-2.605396,-2.187593,-9.842456,-1.040100,-0.340749,-8.524029],[9.596221,-7.938541,-1.049102,8.079470,3.461696,-3.081912],[-1.803496,8.333058,-5.628453,-4.821777,4.525516,7.476101],[-8.746426,5.302904,-9.137540,-4.575214,3.671427,-7.382760],[2.497035,1.987565,-7.041569,6.024340,-2.747324,-0.036647],[5.935406,-5.199092,-3.355181,-3.084620,0.581820,6.973908],[5.402797,-0.683799,2.550847,-4.393946,-0.008733,0.883217],[0.193090,1.815582,6.934846,-6.727266,-5.793550,2.947093],[-9.935971,-2.485977,-4.592437,3.395825,5.109646,-8.209222],[0.787672,-2.030035,-1.742791,-4.744512,-4.649350,-5.216165],[-0.123448,-7.716959,2.043599,5.464451,-7.108969,6.730910],[6.102947,-6.584451,-7.199595,4.659182,-5.884607,8.797586],[0.267249,-6.794721,-6.261646,6.042412,-2.858572,4.068014],[-5.142270,4.031510,-6.848170,1.965324,-6.111619,2.088103],[-7.240397,-0.527071,-2.352266,9.939240,3.067766,4.483500],[-2.961349,-2.340730,3.915709,-9.809032,-6.970645,-9.203372],[7.865571,8.833048,2.887378,-8.681230,7.970122,-4.827743],[4.117780,-5.286433,-0.924702,-7.709679,-7.532599,1.552889],[-3.464668,4.710890,4.543555,-3.319608,6.560684,-2.394846],[-3.357517,-5.935521,8.786266,2.874352,3.085992,-6.887217],[2.694021,-2.088225,7.512612,6.465252,-4.959812,3.088029]], dtype = "float64")#candidate|3746|(65, 6)|const|float64
call_3744 = relay.TupleGetItem(func_397_call(relay.reshape(const_3745.astype('float64'), [10, 1, 3]), relay.reshape(const_3746.astype('float64'), [10, 13, 3]), ), 0)
call_3747 = relay.TupleGetItem(func_401_call(relay.reshape(const_3745.astype('float64'), [10, 1, 3]), relay.reshape(const_3746.astype('float64'), [10, 13, 3]), ), 0)
output = relay.Tuple([bop_3713,bop_3734,call_3738,var_3739,call_3744,const_3745,const_3746,])
output2 = relay.Tuple([bop_3713,bop_3734,call_3740,var_3739,call_3747,const_3745,const_3746,])
func_3748 = relay.Function([var_3712,var_3739,], output)
mod['func_3748'] = func_3748
mod = relay.transform.InferType()(mod)
var_3749 = relay.var("var_3749", dtype = "uint8", shape = (2, 15, 14))#candidate|3749|(2, 15, 14)|var|uint8
var_3750 = relay.var("var_3750", dtype = "uint8", shape = (64, 24))#candidate|3750|(64, 24)|var|uint8
output = func_3748(var_3749,var_3750,)
func_3751 = relay.Function([var_3749,var_3750,], output)
mutated_mod['func_3751'] = func_3751
mutated_mod = relay.transform.InferType()(mutated_mod)
const_3819 = relay.const([[[7.289067,3.285206,1.696191,-6.684791,-6.507477,-5.674603,-7.628456,6.912478,3.349013,3.759587,7.694856,5.180062],[-2.781226,-8.675493,-6.919106,-3.996368,-3.907040,-0.154465,-2.456259,6.925263,-8.405467,-6.349607,7.630639,0.529500],[6.001236,3.658715,-5.976121,5.433709,6.928581,2.779229,6.742826,7.009824,8.710922,5.709279,8.147484,-4.015392],[-2.984928,-6.558375,1.153801,-6.312224,-0.382315,1.810823,-8.164757,0.744618,0.289712,8.476435,-3.012177,-9.938395],[-0.848733,5.937880,-8.929902,1.257887,0.773969,5.182699,1.623255,2.413786,3.087649,-9.293294,3.203795,0.427770],[-7.837048,0.959032,-4.601337,-7.318357,2.553561,-1.016370,-1.795412,-2.409747,8.332745,-4.939531,5.281510,-1.029511],[-4.609134,-8.374938,-5.946999,-4.957873,-0.161483,-2.915226,-8.102304,3.652893,-6.802233,5.216495,-9.728179,-0.419123],[2.438539,-7.442845,-6.131852,-2.027583,-3.017141,-0.810265,-7.664048,5.547770,-3.583569,0.341311,1.234110,-2.619319]],[[-7.486761,-8.861772,9.206697,-9.505344,2.714931,7.155036,2.788256,-2.472962,-6.876976,2.536820,-3.343606,9.769275],[-7.098387,2.278718,-2.897744,8.919458,0.226416,9.332717,3.256763,-7.206906,-5.602069,-7.578231,4.024550,4.646982],[-3.422537,-3.972963,-5.005950,8.673306,0.920027,-2.026483,8.812242,-0.766178,4.394816,0.442406,-9.629875,4.851091],[-2.655860,-9.451489,-3.115866,2.329396,-4.887663,3.453768,-7.395470,3.057378,7.961991,2.391082,-6.911270,-6.879509],[3.891940,-7.580209,2.391050,-2.205544,4.372773,2.351732,3.741206,-0.266002,-4.720914,-5.257401,3.714987,-4.024404],[4.314702,1.259411,-0.012020,6.361361,9.326763,5.488179,1.245043,-8.413937,-3.706047,-6.772156,3.066994,-6.508289],[8.438563,-0.816686,-8.042233,4.268931,-3.118748,6.877547,-1.874903,-6.196645,-9.190241,-8.426749,1.897724,6.563419],[-3.184205,0.544796,-2.671831,-5.940741,-0.755933,-2.722829,2.641040,-9.461128,-7.663102,-3.321918,-6.336276,5.931280]],[[-8.394490,-1.131184,-7.865966,-6.177697,-0.532261,-6.924971,4.113423,-9.489825,6.589802,-3.963559,-9.677347,-5.766653],[8.958868,-1.301677,0.544921,-4.407299,7.491406,-0.858462,-0.226650,9.425927,-3.997077,-4.791334,-3.871991,-4.826548],[2.743347,-8.561913,1.740395,2.047378,-5.553165,4.054167,9.661882,6.390218,-1.552936,-2.896536,-8.298205,6.015217],[-9.141539,-8.161689,-3.929208,-2.124207,-1.784667,-6.378691,-4.744091,-1.663545,4.477737,-8.636835,9.625297,8.447183],[9.718229,5.591971,7.210998,8.693377,-6.360591,-3.763957,-3.499470,-0.676810,-4.611486,-3.207047,-8.913344,8.482081],[-3.594199,-4.494687,7.504998,-7.522872,-1.239067,0.280391,-1.352743,3.541648,-4.129860,-7.878231,-6.448587,6.231472],[0.640815,8.776917,-0.596755,3.475705,2.343822,7.200950,0.827115,1.905536,2.411562,-0.799733,3.854339,-7.361424],[8.531682,-4.124306,5.024068,-5.645901,-5.117752,6.438203,-5.226833,4.778584,-6.683971,4.336879,-8.006680,1.363469]],[[7.907290,-8.532915,1.488781,-7.289664,5.266972,6.025307,3.297716,1.721890,7.446620,-8.624599,4.372650,0.878162],[-6.970899,8.803214,-3.761273,-2.967757,-4.688988,-4.478087,5.023625,1.499756,-1.882082,-2.183489,-5.153034,1.664632],[-4.347522,-8.860141,9.608950,9.589119,-6.028730,1.287122,-0.990819,-7.454750,-0.124037,-7.122426,4.118644,-0.996546],[-6.300538,8.424781,-8.832449,3.479252,4.314892,-1.559523,6.326818,-1.689344,-6.423753,-6.252837,-9.827581,-8.355459],[-4.688729,-8.816957,-5.349110,4.001984,1.426180,9.235666,4.341758,-7.181392,-8.550661,5.583161,4.043179,0.622293],[8.086559,-1.081112,-4.758597,-1.410733,9.271737,1.158528,7.786842,7.225281,0.544571,-3.931897,3.018317,1.433407],[4.005017,1.454633,4.913751,9.021244,5.248055,-4.185065,-3.171836,-2.773112,1.220262,2.866819,-4.047933,-0.166589],[4.892033,-5.318202,2.849426,0.453743,-8.085049,3.056608,3.032282,0.344669,-1.207163,9.823221,-3.729102,5.273517]],[[1.578254,3.754736,0.472623,1.268901,-3.826573,0.099643,-2.952380,9.596528,6.758153,-6.655031,5.985881,5.438516],[9.047925,-8.735084,-2.709462,6.104314,-1.793095,0.974637,-8.014612,-3.421094,-0.118857,8.557025,-6.240892,-2.504147],[5.434250,4.544921,-2.846023,7.516168,0.048251,9.004857,0.993344,9.881101,3.371482,5.968974,9.629711,5.094353],[9.869429,-3.680704,6.327266,5.218690,6.862178,1.354159,-7.104664,7.656719,-8.474598,8.700904,-7.563781,1.383302],[-1.856413,3.402431,-7.566245,7.044899,2.320887,-2.927690,-4.501957,-6.912975,-0.690298,2.177632,-1.671028,-2.589255],[-3.624395,-8.577685,-7.234108,-0.093214,-1.552441,-2.064477,-9.210493,-1.974700,-1.467688,-1.797411,-2.899415,-5.429630],[-6.370524,4.131750,3.166448,2.546421,-1.250401,-7.831787,7.379220,3.104613,-3.804150,4.012055,2.037745,3.329239],[-8.866536,1.232656,-2.875906,1.177649,5.788094,2.120157,-2.403601,-8.692662,-9.612448,0.444182,-1.859964,4.612079]],[[-1.922427,2.802682,-1.155467,5.783747,6.523857,9.349317,5.504749,-7.145620,-0.551121,4.985321,6.404612,9.852991],[-7.160156,5.370200,7.452457,8.230596,0.019478,1.738409,9.121914,-4.548285,9.826932,-5.146849,-7.037989,-5.843298],[-8.271862,5.146915,3.432609,8.906415,1.619555,-6.619479,4.897344,9.034206,5.648629,-9.154043,7.076947,9.514142],[6.520897,3.386614,-9.015683,-7.346050,2.865060,-7.843290,-5.910062,-3.882631,9.931863,-0.317853,5.266191,1.797542],[-5.680126,7.479580,2.381690,6.735135,8.254664,-3.744301,-3.270061,-2.420245,7.562227,-7.772184,6.597140,9.703679],[-7.226147,5.672746,6.619288,-0.575596,1.455345,-0.867364,-7.697578,4.909522,-5.384586,5.644228,-8.094725,1.460328],[1.120515,4.131807,-6.510920,8.289496,-5.943187,-1.662709,8.772433,6.304077,6.783323,6.353740,5.842242,7.227838],[3.946698,-5.412722,-4.928466,1.581533,-9.173634,-1.596598,8.049593,9.059626,1.767540,-8.614568,-2.453943,4.182592]],[[3.275069,7.539374,3.258797,-0.562137,6.836823,-3.559511,-7.903186,4.163918,-6.829544,-7.401896,9.706400,0.724074],[2.216054,-3.201050,4.451498,7.116312,-6.691713,-2.977811,2.225901,-6.722909,2.697212,1.419426,-0.987742,-8.810470],[-0.761838,1.549241,-0.986677,-9.643285,-5.741144,0.883445,-2.257876,-1.385818,5.067262,-7.883930,7.673094,-4.908787],[4.930275,4.000839,-0.979202,-5.737688,-1.794559,1.557991,-5.669888,-9.514003,-3.819008,0.368095,6.273807,3.724277],[-8.064963,6.568593,7.101941,-9.831555,0.970805,-7.818688,-9.396490,4.204679,-7.062067,3.468691,-2.759226,4.023948],[-8.837486,-6.144185,-0.957788,-1.961044,0.107844,6.766230,8.510051,-5.389895,9.299223,3.705477,0.408144,-0.893522],[9.633659,7.097242,0.021171,-4.831942,8.626720,2.620196,-9.534712,-1.577621,-8.582189,-6.827536,6.583111,-0.861906],[-1.158557,-2.174759,-9.404778,9.757812,5.151412,-6.260196,-6.011206,-1.532894,5.291261,2.265466,6.762708,2.570511]],[[5.054714,-3.317037,-7.503417,3.467264,-3.518180,2.563545,-0.018243,-3.731529,4.669624,7.049980,3.076304,7.067096],[4.381005,-5.469086,-2.019016,-0.064837,-4.082903,-1.303830,-0.510255,8.285085,-1.282922,3.684205,9.673657,-7.798072],[-3.427535,-7.864297,0.611352,-0.329915,8.954299,9.223395,8.028316,3.591796,-3.467892,-7.219074,-3.628674,9.058259],[-2.821358,4.303327,-7.378232,-4.609117,6.174211,-0.954288,-6.638162,-6.854850,-6.173245,2.714689,2.644215,4.452735],[3.302388,-7.102075,9.877595,-6.133691,0.002771,6.389562,7.101284,-6.249127,8.406543,9.134308,-8.133405,1.446409],[3.729396,-4.710556,4.596394,4.637708,1.546036,-3.139993,0.546740,2.047882,7.296792,4.117848,-3.511114,2.095924],[-0.657596,-3.834698,-7.615992,3.045834,-5.361902,6.908268,7.398995,-1.121231,-2.015108,5.688574,0.121369,-3.405860],[-6.612104,4.705879,-6.343072,-0.048646,6.701292,4.285158,-4.294003,-1.274379,-1.378380,-0.520975,-8.612584,-6.660977]],[[-6.749919,-7.725989,-6.433009,-0.908463,-7.464217,-0.074681,-8.598973,-2.885548,2.634072,-8.770506,-5.224806,-7.163784],[-8.181140,0.132192,-3.984088,1.938938,7.177922,-7.070318,6.854375,-2.749786,7.031095,-8.977488,9.800168,2.637817],[-1.646028,-8.279380,-8.085665,2.070891,-4.287678,0.155572,-7.559791,2.837504,1.502370,-5.441800,-1.032149,-6.317164],[8.207295,2.007880,7.641709,0.252715,-5.850611,7.091507,-6.219858,3.253233,4.943439,2.604820,-2.423091,9.702144],[0.294383,-6.263631,4.388822,6.956407,8.036940,4.581794,2.232801,-7.747279,1.588544,6.554500,-2.503333,-2.640902],[0.448050,2.770338,-0.279713,9.305178,-2.128557,1.915064,5.160617,-6.358152,4.320509,9.563718,-4.291437,9.777252],[2.702290,-4.268023,3.861668,6.066891,-0.784350,-0.155884,-2.868943,-9.532958,9.490783,-8.530029,-9.026757,5.801770],[-5.331580,8.790715,-2.728603,-8.353818,6.752942,4.383104,5.595098,3.286495,-5.070301,-7.802579,-8.355642,0.062092]],[[-6.313445,-0.512675,5.971884,2.073515,-5.511847,-0.784300,4.155038,3.896265,4.762423,0.399590,5.154253,1.411418],[9.905974,-1.495526,-8.585960,5.175151,1.073239,-1.795819,-5.768868,8.197320,-9.429525,0.418355,-9.596681,-1.809631],[-7.128642,2.533483,-3.271050,0.428456,-8.352235,2.734282,7.070234,-0.564990,-7.499439,3.517504,-0.976675,-8.961523],[0.332024,-0.782357,-3.250171,8.802152,-9.386618,-6.632827,2.692208,-3.412495,-9.296724,5.794962,5.274556,-3.065147],[-7.623652,-0.905158,-4.895652,8.869727,-3.596323,-5.544075,-6.596808,0.973550,-5.760549,8.822420,0.065889,4.201150],[-0.014047,-2.264884,-1.754783,0.882303,-2.927551,6.282149,-8.677651,-8.320457,-2.918227,7.060711,8.411087,-0.832419],[0.351244,4.656254,2.778432,-3.453971,6.691394,7.387667,1.970027,-9.456327,-5.556932,6.409061,-4.648945,-2.520756],[-4.905610,5.471790,-3.937170,6.779995,-9.968707,1.329146,7.020316,8.533665,-5.247566,9.869104,6.171416,1.962221]],[[4.029518,5.288429,4.015205,9.715364,0.125722,2.957889,-7.043899,5.575451,2.843515,-0.894076,-3.114165,-3.606798],[6.547459,5.026939,3.032244,-3.621048,3.178251,3.170632,6.439230,-8.795304,4.149882,9.518842,-8.321563,-1.701197],[8.417641,-8.512036,-3.111007,-1.208017,-1.023168,1.960110,-3.487983,5.346913,2.168025,-5.326146,2.413823,6.561770],[-2.624526,-6.402757,-6.577272,9.741610,6.852118,2.389412,-2.247363,4.840728,9.273940,-1.979505,5.664616,5.855909],[-4.019742,9.920312,-6.144097,8.508196,1.856594,8.134820,-3.450024,7.193061,2.563365,-9.409458,-9.360871,-3.311871],[-1.249641,-2.437701,-3.002216,-7.382067,7.603652,-5.157149,-3.251594,6.373030,0.137548,6.735959,0.531757,-9.128307],[-6.186942,-1.424573,-1.016806,-9.115793,5.342394,-2.816774,7.549111,3.696720,4.907842,-4.000576,2.619011,0.001858],[2.078583,-4.462379,-6.674060,7.437020,6.599806,9.873874,-3.224153,-0.362649,-3.389560,-6.704649,5.412478,6.924013]],[[9.409130,1.506799,2.364385,-4.222456,2.869338,6.054294,8.605583,-4.607003,-6.832837,-8.204106,-1.133742,-4.826912],[-8.738855,-2.303298,-8.103327,-6.806958,0.668803,-7.158630,-8.061567,4.399156,-0.227917,1.231484,8.711507,-0.307472],[-7.241435,6.528147,-7.145395,7.661487,-6.271157,-3.248783,6.012961,-2.507837,-4.824860,4.057021,8.883002,8.306452],[5.095310,5.399991,-5.530753,-2.370125,8.767191,2.068736,-5.916970,-3.879077,-6.124224,4.103323,7.381515,4.309771],[8.757626,-0.006169,5.337535,-8.461754,4.224251,-3.087510,7.313507,-7.192665,-1.160760,-8.326765,-3.945633,3.157517],[-8.747729,2.698433,-0.012861,2.413476,5.725118,1.444385,7.052518,-0.938513,6.355220,7.046584,1.852158,9.958917],[0.828348,-4.287336,-5.751766,2.144613,3.086393,-1.737847,2.864685,7.185033,-0.093249,5.187004,-6.051225,-9.065381],[-5.427643,-4.013598,9.138135,9.965093,-8.883087,-8.064796,1.463822,0.213665,-6.550744,2.186072,2.820431,5.732393]],[[7.611494,-4.098786,-2.668003,6.477477,-0.803519,-3.566874,-1.575565,-2.911461,-6.903868,8.526544,-9.125024,-8.818505],[2.607313,-0.078664,-9.116994,-3.651713,8.122501,2.155521,3.485314,-5.852821,-0.010252,4.339308,1.090400,6.388798],[-9.276857,4.179114,2.370983,-1.509964,6.620310,-2.504055,-6.686875,3.263505,8.576335,0.734379,-4.666585,-8.756137],[-9.095024,0.654198,4.092818,8.546923,0.714700,4.115073,-1.979784,6.615177,-8.589652,1.643607,-9.477180,-2.598278],[6.214542,-1.421201,-5.694763,1.621805,-2.662002,-2.278884,3.455231,-6.987630,-4.329318,-5.255249,2.655916,9.126036],[9.901160,-4.535366,0.749395,8.196346,-8.970352,-2.685276,-7.771427,3.858737,-1.559047,-0.672293,-3.798800,8.553393],[-2.180952,2.971229,2.844127,-0.834320,-7.294106,4.080903,7.529259,-3.793227,-9.954066,-0.139138,-3.599667,-1.965886],[0.189844,2.740760,0.842441,4.205098,-9.214741,4.479079,2.348948,-5.112470,-6.377365,6.222115,-0.529412,8.716131]],[[6.799273,5.723360,9.599296,-4.112393,-1.970370,-6.085553,-8.985570,-6.159406,6.840750,6.380475,4.155716,-2.502092],[8.534736,8.040485,5.055955,-1.695859,3.524903,7.963537,5.316163,5.472919,0.462363,0.375141,5.978763,-4.840388],[3.956072,6.983108,3.186791,-0.402385,-0.926363,-5.919106,-0.102814,-2.131564,-0.917307,8.802603,3.350854,8.208868],[-0.714101,2.766662,-4.454457,-2.999666,0.100882,-5.340437,0.286466,4.325215,3.798197,-5.059658,-9.795033,5.623052],[-5.140937,9.738124,7.677879,-1.173099,5.389001,-7.183727,8.988157,-9.377692,-4.251986,3.585017,2.338104,7.784738],[-5.070892,2.277049,-0.014583,0.568194,0.333553,3.381286,7.842399,-5.659438,6.233478,2.469027,-6.012746,5.491238],[-9.711089,-0.688379,6.715894,-4.582447,5.515446,-9.931048,-3.895953,-8.689936,-2.286220,0.086887,5.282369,0.105807],[-0.698661,8.790916,-5.164147,4.929362,4.080609,-6.236059,-1.637440,-4.948583,-7.882141,9.899018,-9.435572,-9.041182]],[[1.087351,4.048046,-2.600094,9.310261,5.182114,3.141922,9.208529,-7.090789,-4.642987,5.912656,-9.518370,2.310592],[2.222146,0.022950,-0.488223,-1.331513,6.439501,6.737145,-0.684406,-7.409132,5.358793,5.379812,8.231666,-4.035676],[9.511145,-0.648500,2.264742,-5.039034,-2.169021,2.282820,-3.438730,3.818346,3.705023,7.725554,9.892565,4.860950],[9.285670,-4.294031,-8.262625,-0.345313,-4.879359,3.118993,-9.262850,-5.650270,-4.771053,-6.751078,-5.098860,-0.802314],[-3.633735,9.252241,-4.464602,-8.798998,-2.028151,-4.946926,9.498463,-5.333235,3.664857,-7.101170,1.121503,-7.954431],[-8.836386,-1.135577,-4.958900,-3.695462,-8.633183,0.538610,-3.587977,-7.056526,-1.186809,9.333845,-7.256959,8.792322],[-9.402415,5.459944,8.089491,8.879933,-9.473821,-1.315065,-6.244521,5.663908,-1.720185,5.189955,8.264150,9.455870],[-7.246636,1.829450,-2.560560,-0.540615,-5.427026,0.175760,-2.300435,9.694176,-7.057514,0.337464,-8.867072,-1.130972]]], dtype = "float64")#candidate|3819|(15, 8, 12)|const|float64
uop_3820 = relay.sin(const_3819.astype('float64')) # shape=(15, 8, 12)
output = uop_3820
output2 = uop_3820
func_3825 = relay.Function([], output)
mod['func_3825'] = func_3825
mod = relay.transform.InferType()(mod)
output = func_3825()
func_3826 = relay.Function([], output)
mutated_mod['func_3826'] = func_3826
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3825_call = mod.get_global_var('func_3825')
func_3826_call = mutated_mod.get_global_var('func_3826')
call_3873 = func_3825_call()
call_3874 = func_3825_call()
func_3748_call = mod.get_global_var('func_3748')
func_3751_call = mutated_mod.get_global_var('func_3751')
var_3876 = relay.var("var_3876", dtype = "uint8", shape = (420,))#candidate|3876|(420,)|var|uint8
var_3877 = relay.var("var_3877", dtype = "uint8", shape = (1536,))#candidate|3877|(1536,)|var|uint8
call_3875 = relay.TupleGetItem(func_3748_call(relay.reshape(var_3876.astype('uint8'), [2, 15, 14]), relay.reshape(var_3877.astype('uint8'), [64, 24]), ), 2)
call_3878 = relay.TupleGetItem(func_3751_call(relay.reshape(var_3876.astype('uint8'), [2, 15, 14]), relay.reshape(var_3877.astype('uint8'), [64, 24]), ), 2)
output = relay.Tuple([call_3873,call_3875,var_3876,var_3877,])
output2 = relay.Tuple([call_3874,call_3878,var_3876,var_3877,])
func_3879 = relay.Function([var_3876,var_3877,], output)
mod['func_3879'] = func_3879
mod = relay.transform.InferType()(mod)
var_3880 = relay.var("var_3880", dtype = "uint8", shape = (420,))#candidate|3880|(420,)|var|uint8
var_3881 = relay.var("var_3881", dtype = "uint8", shape = (1536,))#candidate|3881|(1536,)|var|uint8
output = func_3879(var_3880,var_3881,)
func_3882 = relay.Function([var_3880,var_3881,], output)
mutated_mod['func_3882'] = func_3882
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3825_call = mod.get_global_var('func_3825')
func_3826_call = mutated_mod.get_global_var('func_3826')
call_3906 = func_3825_call()
call_3907 = func_3825_call()
var_3918 = relay.var("var_3918", dtype = "float64", shape = (15, 8, 12))#candidate|3918|(15, 8, 12)|var|float64
bop_3919 = relay.logical_xor(call_3906.astype('uint16'), relay.reshape(var_3918.astype('uint16'), relay.shape_of(call_3906))) # shape=(15, 8, 12)
bop_3922 = relay.logical_xor(call_3907.astype('uint16'), relay.reshape(var_3918.astype('uint16'), relay.shape_of(call_3907))) # shape=(15, 8, 12)
var_3941 = relay.var("var_3941", dtype = "float64", shape = (15, 8, 12))#candidate|3941|(15, 8, 12)|var|float64
bop_3942 = relay.add(var_3918.astype('int32'), relay.reshape(var_3941.astype('int32'), relay.shape_of(var_3918))) # shape=(15, 8, 12)
output = relay.Tuple([bop_3919,bop_3942,])
output2 = relay.Tuple([bop_3922,bop_3942,])
func_3956 = relay.Function([var_3918,var_3941,], output)
mod['func_3956'] = func_3956
mod = relay.transform.InferType()(mod)
mutated_mod['func_3956'] = func_3956
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3956_call = mutated_mod.get_global_var('func_3956')
var_3958 = relay.var("var_3958", dtype = "float64", shape = (15, 8, 12))#candidate|3958|(15, 8, 12)|var|float64
var_3959 = relay.var("var_3959", dtype = "float64", shape = (15, 8, 12))#candidate|3959|(15, 8, 12)|var|float64
call_3957 = func_3956_call(var_3958,var_3959,)
output = call_3957
func_3960 = relay.Function([var_3958,var_3959,], output)
mutated_mod['func_3960'] = func_3960
mutated_mod = relay.transform.InferType()(mutated_mod)
const_3995 = relay.const([[[-3.953595,4.361081,-4.416124,5.003801,-6.740333,-8.803634,-5.593268,-4.662667],[7.998597,6.193616,-9.421395,4.894173,9.903491,3.267713,-3.731891,6.520033],[-9.016352,7.037768,8.499840,9.238269,5.705479,-6.088877,-6.038984,-0.149380],[-2.510496,-4.202574,6.178881,1.518489,6.862431,-4.636245,-6.676332,-3.117345],[-9.185929,7.115012,7.009337,4.262535,-0.238520,-6.009100,-3.035203,8.685281],[-9.934442,-8.556392,0.337594,-7.782024,-9.283017,-3.347067,-2.606831,-2.779385]],[[-4.801140,1.575048,-9.947492,3.506538,-0.368653,4.038211,-9.494770,6.686605],[-3.394909,-8.696831,7.886886,-3.613183,8.038191,-7.832986,-1.423583,-6.055237],[7.764566,-9.618550,0.515064,-6.248806,1.396932,-0.669379,-2.316717,7.183526],[2.982771,-0.721009,-2.786214,5.041465,-2.005910,-9.520029,-7.448532,9.300983],[-5.351866,2.978081,0.223131,7.045679,2.509732,-8.482577,1.734754,7.550073],[8.291984,5.075546,-9.342020,0.707409,7.250222,6.785927,1.575350,3.176868]],[[-1.767326,8.740418,-2.391235,8.339590,-1.725621,-3.399402,1.892747,3.978024],[9.046414,-2.174996,9.471919,-5.295984,8.854164,-4.668041,6.098903,-7.416878],[-5.935402,3.393913,-7.863850,-6.465988,0.513424,-6.107161,-1.031570,1.391507],[5.877900,-1.539503,-6.813319,5.163572,-7.135799,-6.711219,6.293170,-0.479270],[-1.752325,-1.202037,-0.200548,0.107154,9.323723,-1.449395,3.108553,-8.946762],[2.876794,9.257167,4.214895,-6.625730,-6.573004,2.170645,3.512692,3.945602]],[[-2.549400,2.591537,1.439159,-5.997984,-4.880263,-0.716969,-0.774998,-3.550553],[3.312410,7.011459,-1.667043,3.317424,-6.953365,-8.226247,-8.150345,3.459057],[-1.346547,1.096284,-0.009932,-4.031460,-5.096080,-9.619289,5.246579,-7.385273],[0.115627,-5.955825,1.214942,-6.862726,-0.565119,-0.217581,0.123263,9.773899],[-3.821801,4.861145,-6.987966,6.835709,-7.955585,-1.914230,4.171896,9.089970],[-1.835643,-0.400240,5.623408,-1.643442,-0.547035,-3.972058,-9.724408,5.832497]],[[-2.315308,1.794337,-2.274643,6.617327,6.853123,6.274789,-9.943488,3.257435],[-0.812992,4.210191,-6.082194,6.912149,-4.279160,-4.530625,-2.133202,8.432034],[-3.505953,8.190699,4.341412,-1.278890,-3.975270,5.581272,-1.758502,-3.021022],[6.653456,-7.815454,0.756611,-4.305831,9.950438,-8.318273,-9.579557,-1.843043],[1.326299,4.124532,-4.750983,5.758184,6.102742,8.714777,8.636361,-3.919676],[9.501994,-1.491309,5.802961,-7.616900,-6.025210,-9.177197,-1.390072,1.258787]],[[-3.952019,1.194646,-7.929945,-4.580988,8.443919,5.906687,8.840080,1.435181],[-3.893959,1.672257,-2.234153,-2.599685,-5.819856,7.763996,3.884713,-6.221237],[-1.424862,-0.922356,-9.873833,-9.673401,7.652293,-3.163179,-5.348320,2.397564],[-2.874144,-8.780021,2.165221,4.352389,3.985386,-4.375535,5.295634,-1.370357],[-0.278625,7.793228,4.324177,4.621130,6.179165,5.916511,7.788649,7.499819],[0.037143,2.361774,-7.954636,7.741292,4.015988,0.619402,-3.685619,-9.284635]]], dtype = "float32")#candidate|3995|(6, 6, 8)|const|float32
uop_3996 = relay.atanh(const_3995.astype('float32')) # shape=(6, 6, 8)
output = uop_3996
output2 = uop_3996
func_4007 = relay.Function([], output)
mod['func_4007'] = func_4007
mod = relay.transform.InferType()(mod)
mutated_mod['func_4007'] = func_4007
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4007_call = mutated_mod.get_global_var('func_4007')
call_4008 = func_4007_call()
output = call_4008
func_4009 = relay.Function([], output)
mutated_mod['func_4009'] = func_4009
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3825_call = mod.get_global_var('func_3825')
func_3826_call = mutated_mod.get_global_var('func_3826')
call_4024 = func_3825_call()
call_4025 = func_3825_call()
output = relay.Tuple([call_4024,])
output2 = relay.Tuple([call_4025,])
func_4029 = relay.Function([], output)
mod['func_4029'] = func_4029
mod = relay.transform.InferType()(mod)
mutated_mod['func_4029'] = func_4029
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4029_call = mutated_mod.get_global_var('func_4029')
call_4030 = func_4029_call()
output = call_4030
func_4031 = relay.Function([], output)
mutated_mod['func_4031'] = func_4031
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4007_call = mod.get_global_var('func_4007')
func_4009_call = mutated_mod.get_global_var('func_4009')
call_4078 = func_4007_call()
call_4079 = func_4007_call()
const_4103 = relay.const([[[-4.268814,4.054775,8.416579,-4.057387,2.480139,-9.285265,-8.403400,-0.090211],[9.792029,2.004720,-0.665870,-2.483134,1.849596,2.406247,6.575672,-7.229672],[0.858647,-6.630586,7.294059,-9.732550,-9.254575,-2.125468,0.403363,8.620935],[-9.395564,-5.623741,-5.642739,-4.329645,-9.569962,-2.999258,-9.992510,3.821422],[-9.027400,-7.389335,-3.759295,-3.986567,-5.699735,5.291169,-7.712448,-6.426674],[-2.002557,9.039801,7.613750,-1.431950,9.794920,8.520154,-0.038886,1.979802]],[[-8.333215,-3.030370,8.527459,-0.751715,-4.035609,8.537805,-5.983263,2.113247],[-5.709111,4.988986,-5.500842,0.233118,-8.513893,4.918027,0.079210,-0.431922],[5.801190,9.117800,6.880818,-8.325782,8.886028,-6.273563,2.728555,-5.625664],[2.394348,-1.902126,-5.868302,3.912579,-7.801996,3.248996,-8.318455,-2.171145],[-8.750921,-0.714959,6.462930,3.970519,-1.391696,-1.039187,-3.456614,5.844131],[-9.093462,5.439302,1.104229,5.603551,-7.209804,9.080400,-7.809582,-3.550991]],[[4.733214,9.222958,4.130958,-9.943040,-6.014759,4.808356,5.172150,-4.455546],[-2.596948,-9.775938,7.330464,-7.359430,-9.256069,-2.069097,0.145113,-5.334829],[6.082432,4.417062,-6.205511,-8.783740,-5.150248,4.368689,-3.174471,1.170870],[-7.310872,-2.736520,9.980097,0.869083,-2.558803,5.273944,-1.294918,3.162978],[1.188103,-2.801739,-7.683404,-7.402508,-7.115097,-7.652852,-1.933971,-5.686420],[-2.801814,-6.429782,4.152933,0.034640,6.113703,7.384568,-8.138022,7.744259]],[[3.589172,-1.753152,-3.484461,-4.298503,-5.435444,1.876239,-3.731444,9.725916],[-1.557838,-2.662781,1.203724,1.337177,-6.307240,-7.582446,0.776552,-0.855078],[1.663642,-2.373902,-1.294360,5.592285,-7.909045,8.217750,-2.162986,1.246029],[-7.000971,-5.015453,5.706687,-6.919041,-4.059980,0.701395,-8.244357,-7.876942],[-1.010850,5.261740,8.712363,9.529931,4.948391,-3.804945,-1.791445,-8.863952],[8.328421,-1.443522,-7.313254,6.444372,-5.279830,3.472721,-5.558838,-9.786158]],[[-3.531225,5.827267,-0.661128,2.188017,4.560459,9.641645,4.553055,-8.858064],[-1.842251,-7.501097,6.351208,3.952718,-8.696488,-6.168004,-0.257012,3.700348],[-5.500499,-5.892664,9.255579,-7.529546,1.737210,-0.081038,5.558332,-3.763591],[-2.569112,0.608543,-4.114945,3.368307,9.056928,2.924438,-2.089072,-7.878498],[-8.141000,-4.981684,3.299599,-5.694655,-0.135218,6.042797,-2.400669,-8.041865],[-3.723673,-3.533393,-0.565882,9.123157,-3.779484,-8.730538,6.450600,9.489257]],[[2.214615,-1.973008,0.562231,-9.326026,6.882152,3.223024,6.329521,-4.610969],[8.002355,-2.443063,-5.461863,5.459022,-7.587817,-7.786352,1.374822,6.958052],[3.107918,9.736978,8.516506,-8.187807,4.577885,-2.102620,4.387122,9.041168],[6.307684,6.041655,6.562267,-0.333025,-3.676754,-0.689640,0.868386,-9.497814],[5.052333,5.276560,3.191534,2.218083,3.673424,1.062998,0.942190,-7.256735],[-9.070806,-9.863853,-3.966511,-7.327461,3.375365,-1.717586,-6.596162,2.815746]]], dtype = "float32")#candidate|4103|(6, 6, 8)|const|float32
bop_4104 = relay.not_equal(call_4078.astype('bool'), relay.reshape(const_4103.astype('bool'), relay.shape_of(call_4078))) # shape=(6, 6, 8)
bop_4107 = relay.not_equal(call_4079.astype('bool'), relay.reshape(const_4103.astype('bool'), relay.shape_of(call_4079))) # shape=(6, 6, 8)
func_4007_call = mod.get_global_var('func_4007')
func_4009_call = mutated_mod.get_global_var('func_4009')
call_4111 = func_4007_call()
call_4112 = func_4007_call()
uop_4116 = relay.log2(call_4078.astype('float32')) # shape=(6, 6, 8)
uop_4118 = relay.log2(call_4079.astype('float32')) # shape=(6, 6, 8)
uop_4122 = relay.asinh(uop_4116.astype('float32')) # shape=(6, 6, 8)
uop_4124 = relay.asinh(uop_4118.astype('float32')) # shape=(6, 6, 8)
output = relay.Tuple([bop_4104,call_4111,uop_4122,])
output2 = relay.Tuple([bop_4107,call_4112,uop_4124,])
func_4125 = relay.Function([], output)
mod['func_4125'] = func_4125
mod = relay.transform.InferType()(mod)
mutated_mod['func_4125'] = func_4125
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4125_call = mutated_mod.get_global_var('func_4125')
call_4126 = func_4125_call()
output = call_4126
func_4127 = relay.Function([], output)
mutated_mod['func_4127'] = func_4127
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3825_call = mod.get_global_var('func_3825')
func_3826_call = mutated_mod.get_global_var('func_3826')
call_4134 = func_3825_call()
call_4135 = func_3825_call()
func_2745_call = mod.get_global_var('func_2745')
func_2748_call = mutated_mod.get_global_var('func_2748')
const_4139 = relay.const([[2.795021,-7.099007,5.696731,0.914323,-5.255064,-9.469067,-4.618568,-0.333440,8.037995,-4.055997,-3.437437,9.151275,4.044580,-9.564464,-4.810435,-1.799206,7.159003,-1.907224,-4.045760,-6.978558,0.111283,5.375219,-9.237277,-0.462744,-1.568597,-0.912083,-7.101023,-7.073430,-5.942238,5.835205,3.061576,1.104988,-4.087017,3.704711,9.466004,2.373225,5.671145,6.606854,5.940235,6.890572,-8.221621,-5.200087,7.025240,-5.392796,-8.317630,-5.727484,9.476162,-7.529166,-6.110765,-3.959585,8.991020,-2.007090,3.211165,8.156976,2.897018,-5.048136,-8.614456,6.691934,2.623353,-6.118080,7.509831,1.141292,-4.146444,9.261351,-7.735218,-7.151626,4.367722,-1.613747,-8.932328,8.290609,-3.150868,-4.684227,8.374452,-2.340039,5.905562,-4.333428,-4.480004,-9.552605,9.350869,3.573491,5.646720,-9.259551,-7.708978,6.799454,-0.377304,-6.271325,-6.214054,8.485468,-0.450870,-8.633267,-6.215498,2.545062,5.328933,4.240873,6.686277,-9.925157,4.072456,9.738604,6.949270,-8.662516,-0.778210,-0.312772,4.822661,-3.861831,9.189340,-6.422855,0.199705,-5.747408,2.029765,1.470101,-3.080252,2.426426,-2.730349,3.631826,-9.175621,8.073969,8.136137,8.515437,-4.920682,-4.607337,9.600495,8.815708,-8.771725,5.752596,-5.537394,-4.899487,-4.144346,-9.869761,0.849344,-1.356586,9.798258,-4.490242,2.171003,-9.910446,4.559074,7.799645,5.416123,8.265019,7.106832,5.254537,9.451478,-4.565927,1.946289,2.483679,4.979904,-8.467674,6.288365,2.548833,7.496886,-6.246846,-8.523499,4.891912,3.604326,-7.572075,0.927329,-8.314194,0.297176,-1.207337,2.895469,7.737666,8.468615,4.452218,-6.019926,3.509803,-4.860700,-4.198147,1.658680,-9.351945,-0.757942,3.388155,-5.699928,2.774720,4.798168,2.281023,8.729269,9.009069,-7.998679,2.412461,0.038904,-7.405713,5.916107,-3.691085,-1.357319,6.571896,8.841817,-5.481201,-8.719986,-7.856406,9.544482,-3.950390,-5.503653,4.408037,-1.712964,-5.565945,9.435178,-0.807201,5.427251,-3.746366,9.939003,0.803865,-5.115572,5.112769,2.197620,-0.312720,0.741951,3.078411,-1.332858,-5.735412,0.897001,-5.761733,-0.589377,0.070334,-5.417051,3.403781,4.860028,-9.605741,9.285577,-0.239664,0.968705,3.208360,7.281509,7.085967,-7.567139,2.981825,-8.815218,-0.469829,-8.286960,-5.429542,4.950563,-9.619252,-5.689679,4.263119,-2.374104,-4.802059,-9.129415,-1.315435,-1.623248,-2.151738,-3.368616,0.617275,4.728675,0.368943,0.100252,-9.563838,2.115937,-8.952171,-6.673275,7.300916,8.616042,-0.445675,-8.992223,-9.788130,-9.963738,1.283974,-2.494173,3.064018,-7.843369,4.168758,5.673027,0.532226,-6.132495,-1.948075,4.668668,-8.830653,-8.372743,-0.289528,1.940293,4.232535,2.390048,-9.513846,0.893874,-4.845510,-9.780516,-5.634192,5.524381,6.814047,8.995394,-4.574521,4.427079,5.379910,-6.419276,-5.337598,-5.884463,2.009849,-4.956054,3.847198,-5.851580,-4.131908,1.400204,-0.495665,-9.580884,6.527829,0.511685,-8.111281,-9.512430,-7.182678,7.914657,-5.319582,4.587796,-2.067161,-1.664584,4.767641,2.862424,0.810217,-1.971492,1.230228,9.283237,-9.694955,2.275892,-2.638279,1.827298,-4.237284,8.829878,-8.854025,-4.698051,4.551330,2.756688,3.084868,-5.121022,1.234262,-2.884425,6.988325,3.138631,5.805689,-3.032214,-5.879385,-1.141598,-8.710006,-7.813564,-5.796372,5.773370,6.878075,5.206991,3.992227,1.848900,-9.432016,-7.917144,-5.536423,-7.092060,-6.166485,9.022605,-5.266555,2.270888,0.357121,6.172650,-9.053016,7.240061,6.079249,2.931710,-0.965205,-7.298630,-1.211978,-6.079056,-5.572018,-5.006675,0.612605,-5.048355,-5.427626,9.502146,3.903389,3.529447,0.836154,6.818836,3.199007,-6.226037,4.282255,7.104951,8.291511,-9.498386,-9.368178,-4.581848,-5.253751,4.304349,-8.136353,7.333529,1.123422,5.607484,6.909474,-2.195625,6.079356,6.158812,4.746813,2.383470,-6.651303,-7.892352,-5.459473,7.296678,7.534591,9.173093,8.202306,9.294258,-9.698408,5.062323,3.727391,-4.665215,-1.762332,-2.042703,-4.600138,-5.315258,1.235531,7.356029,7.696934,7.288810,7.935895,-3.349074,9.673202,-3.176283,4.639176,7.956644,9.611593,0.441336,9.071437,8.586352,2.260639,4.054402,-2.042055,1.034044,9.873503,5.569160,3.370419,6.305945,5.714028,-4.359489,5.305615,-3.731364,-1.907596,1.264973,3.000340,9.328521,-7.229313,9.501219,-4.883532,5.418263,4.399307,-7.930336,-8.176255,7.761934,5.043725,-5.508999,-6.507061,5.665493,1.613513,-9.394615,2.303198,6.246913,-7.124166,4.910987,7.292923,-2.479755,4.631833,-5.228527,-9.464505,8.798091,5.493583,1.447231,-6.505968,-2.350150,8.478664,-9.597661,5.618309,-4.557330,2.456869,-1.343456,-8.232481,6.146000,4.424203,-5.401867,-9.517084,-9.060873,9.376508,0.819876,-8.395640,6.393155,-0.419122,6.798383,-7.257032,-7.011753,9.540824,-1.562827,9.855233,1.688290,4.008134,6.169799,9.963477,-3.600580,3.623967,6.476054,2.130297,2.551590,-7.615004,4.486324,-1.367582,-1.588908,-3.838224,-4.236565,0.245391,8.885442,7.867393,-0.300411,-6.830718,0.310512,-0.905976,6.935354,-3.908315,7.886493,0.273498,7.660089,-4.238291,7.442800,-5.345597,4.846959,1.982863,6.767957,7.357827,-3.414051,-2.997449,2.231460,-9.554801,-2.479495,8.225706,3.069235,3.822289,-7.062634,6.734365,-7.013252,8.973141,6.990085,-9.123554,4.099078,-6.192033,3.412725,-2.099642,0.395426,-3.964976,3.786413,0.480520,-5.741681,4.520176,5.948046,5.231494,-3.589857,1.674164,4.776599,-8.747730,3.915700,-3.264922,0.128934,9.239916,7.937411,1.973556,4.883127,-1.089924,6.655491,-5.297353,-0.701353,-0.004227,0.837699,-0.057558,-7.563415,9.813460,5.006973,-5.217845,-9.990539,4.612128,7.226021,-9.427401,8.349707,6.552347,-4.024313,0.037228,8.372388,-8.400139,1.474758,6.596821,2.065546,2.764347,2.265176,-9.817989,7.951117,9.028377,-3.790178,6.911357,-0.273593,-9.871356,9.933292,7.219042,0.991510,6.333806,-6.297277,-0.875183,3.199396,-7.502277,-9.649395,1.552244,-1.665975,-5.620691,-8.823851,2.619222,-6.761300,-3.021576,2.504691,-9.161386,1.376259,-6.092259,3.021379,1.742109,-6.540351,5.649388,-1.917544,1.255481,6.767138,3.865277,2.223162,0.583922,-3.605274,7.259904,9.735546,8.991114,9.160193,1.454859,-9.283763,-7.421609,-8.023955,0.906675,-5.911390,-7.672912,3.996544,8.703221,-8.467796,-5.418788,-6.188253,-8.988587,-6.144882,-3.343468,8.322324,-5.323365,6.980447,4.180356,-2.043532,-5.476690,8.686378,-9.816293,3.398280,9.391483,-5.872547,-5.784289,-7.595909,7.327593,-1.578656,-3.354965,5.952143,-3.766024,5.056606,-5.432105,-5.851501,-3.898589,5.819209,-5.155941,8.184959,-3.915173,-2.295816,-0.882018,-8.855307,6.228821,-3.659507,-7.848232,-4.250555,-2.380121,-2.219279,1.721810,5.656881,-2.832873,-2.676122,0.472589,5.183006,-4.094101,6.400155,-6.592830,-4.669606,-0.870181,5.220200,-0.169535,7.465612,-0.579418,3.630200,4.086625,0.554646,-1.845744,-3.383401,6.437438,7.710200,9.306866,0.439885,-3.261119,1.815940,-0.420196,-5.598309,-9.503409,1.161276,5.130492,-7.986873,1.583710,5.976172,-1.398584,-7.418992,8.411735,9.363063,-1.828980,-3.106196,-3.688668,6.641911,-8.534762,1.663768,-1.645178,5.528471,4.633967,-5.966853,-3.672956,-6.667287,4.984004,-3.219065,8.227856,-9.474897,-1.361275,-8.148974,-1.963887,6.693581,5.014101,-4.528283,0.923776,-2.718659,1.116797,-5.603684,-0.665456,-2.716580,2.265597,-9.104529,-4.777820,-2.536934,9.142841,1.585459,-7.916079,-4.905030,9.152883,8.171843,7.093427,-3.488986,-7.328011,-2.742013,4.784028,5.076307,5.317900,4.103178,-2.286846,8.766407,9.970025,6.093082,1.791453,5.543334,-1.929119,-5.891735,-6.249472,4.236556,7.913804,6.617886,-1.304924,8.107849,-3.014071,-1.517620,-7.787683,-0.593046,-2.534028,5.022193,-1.651724,7.200012,-9.539025,-3.472351,-2.304337,9.431506,5.646294,-3.610874,2.107503,0.259834,0.050624,-3.904738,4.701386,9.841828,2.260480,-8.456648,2.900095,-6.785038,6.348213,6.243807,-9.768398,0.991353,0.695208,-2.098380,3.631105,1.786987,7.545238,-2.816086,-6.582252,-0.170980,-7.887993,1.817229,-6.482589,1.425120,-0.152036,5.660461,-3.660770]], dtype = "float32")#candidate|4139|(1, 810)|const|float32
call_4138 = relay.TupleGetItem(func_2745_call(relay.reshape(const_4139.astype('float32'), [6, 15, 9])), 1)
call_4140 = relay.TupleGetItem(func_2748_call(relay.reshape(const_4139.astype('float32'), [6, 15, 9])), 1)
output = relay.Tuple([call_4134,call_4138,const_4139,])
output2 = relay.Tuple([call_4135,call_4140,const_4139,])
func_4194 = relay.Function([], output)
mod['func_4194'] = func_4194
mod = relay.transform.InferType()(mod)
mutated_mod['func_4194'] = func_4194
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4194_call = mutated_mod.get_global_var('func_4194')
call_4195 = func_4194_call()
output = call_4195
func_4196 = relay.Function([], output)
mutated_mod['func_4196'] = func_4196
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4194_call = mod.get_global_var('func_4194')
func_4196_call = mutated_mod.get_global_var('func_4196')
call_4292 = relay.TupleGetItem(func_4194_call(), 1)
call_4293 = relay.TupleGetItem(func_4196_call(), 1)
const_4304 = relay.const([[[1.334962,-1.830805,3.085590,7.409143,-2.863337,-4.305422,-5.636011,3.840414,-2.277371],[-4.050930,7.693506,5.834298,-4.991987,-0.307404,-7.112467,-5.101620,4.816732,-4.029538],[-8.667639,4.002077,-5.046774,-5.784703,5.224212,0.355488,-2.561889,0.937956,1.841079],[4.388535,6.189838,7.214021,9.653374,7.998376,-6.180807,8.766032,7.647723,4.995090],[6.500639,5.168580,9.410602,-5.373567,-7.139056,-6.095737,-4.391651,7.635677,0.312156],[5.464541,2.083764,-7.041767,-7.715591,-6.867208,-6.336929,-5.433729,2.156481,-7.915835],[-9.465253,8.629639,-9.655221,1.605565,1.036785,1.275409,4.132170,1.048112,5.027551],[3.159653,6.899572,-5.046298,1.030478,2.400505,-6.472807,-1.563489,-3.198672,7.626179],[2.251695,-3.624183,1.772074,9.123075,-2.384365,0.774588,-1.423823,-1.257504,-0.576500],[6.334703,5.397966,3.095493,-5.759581,-6.732464,9.999350,-1.361376,-9.221502,7.310019],[-3.704538,4.367396,2.132981,-0.548044,2.802193,4.708166,0.030613,4.185312,-4.866854],[-6.039337,-1.379165,6.206993,-0.088046,-9.030762,-9.378607,7.178408,6.162545,-6.536352],[9.008925,-4.355098,7.625305,5.061705,2.041400,9.030908,3.451379,-8.775664,-1.873770],[0.638705,0.723402,-4.072167,4.522568,-0.777030,-8.203679,8.885048,-8.667186,-0.704965],[7.722137,-6.543575,-7.069065,-6.584049,-0.292580,-5.546060,3.081931,4.561861,3.868936]],[[-1.609799,3.800790,9.419223,7.955319,-3.610352,5.406311,8.877963,-0.522044,1.787479],[2.223776,-3.126243,-6.549510,5.460090,-6.145165,0.622775,-4.755292,-6.403823,-8.397173],[9.620726,-8.039198,6.428710,-6.794011,-0.695114,8.879282,0.327694,-2.303329,-6.407486],[-7.105925,-3.531800,-9.620372,7.832618,8.814741,5.607681,9.166048,-5.812316,-6.200144],[9.336552,-8.616540,9.620700,3.672236,8.083073,-1.602401,0.920287,8.518058,2.594725],[8.934138,-3.256222,-5.789757,-1.877919,-6.364393,7.909427,9.882882,3.830932,-1.960930],[6.227501,2.096722,9.857173,-6.952828,8.782174,-3.615131,6.671071,5.315853,8.121586],[5.258704,7.199726,-3.765445,-5.632111,-4.230589,8.422502,-1.862083,-2.322066,4.564584],[5.376062,-0.992730,7.653242,8.309904,-2.818994,-7.985851,-1.706347,-5.588088,8.187586],[-3.266730,-6.047172,4.244918,-7.430627,-8.595160,-2.556790,-9.218053,1.779092,-4.284202],[-8.525801,6.573336,-5.530310,-5.205467,-1.169872,-1.535538,8.404677,7.846225,1.147661],[0.371857,0.616344,9.677671,-6.159112,2.322711,-5.714277,-8.991609,-4.872288,-2.529611],[-7.097261,1.439085,9.120440,-0.099803,8.508390,-1.207519,8.597628,-4.939940,1.875649],[-7.558668,3.409697,7.674273,9.875949,-0.409352,7.645484,-4.159487,8.605735,-6.767502],[3.892802,1.212402,6.418618,-3.431758,-5.932019,9.214629,-2.237911,8.888473,3.807847]],[[9.409859,-6.270597,-9.445271,-6.321686,3.178812,0.564479,-9.874640,1.538480,1.937740],[1.020108,1.096223,-8.456039,2.495234,-3.636293,-6.040580,7.449500,-6.265721,-4.911938],[-3.587099,4.878328,-0.587640,9.448505,8.424136,0.849442,5.868465,-2.798600,-7.967769],[7.065769,5.226405,-4.857064,-7.924181,-8.504184,6.532397,6.062888,0.694659,-7.170978],[5.008268,4.826644,-8.240207,4.769198,5.159194,-8.064732,-9.488933,-9.086652,3.507690],[-4.661009,-5.172563,-7.980818,7.430608,2.296004,-1.205889,-5.016608,-6.405956,-6.070640],[-4.475183,-6.332150,-1.160587,7.744530,4.166156,-1.493636,-4.957472,-4.820882,8.245090],[9.160777,-1.666051,-6.781389,-2.343906,1.416037,-3.620700,3.902100,6.814576,-3.895377],[-2.577998,6.258695,8.777545,-6.123222,-4.483075,2.917173,7.612832,-6.303736,2.131523],[-7.327526,2.391739,-4.148909,3.832290,5.830122,-7.424692,-3.673059,4.971394,-9.046602],[-7.659952,6.193297,5.063066,-5.798398,2.888424,-3.865643,5.550575,-7.948095,-4.271546],[-6.536352,-7.599735,2.001771,-9.373405,1.583728,2.397114,-2.891390,-6.929379,-3.899335],[-2.240326,-8.511906,7.845584,7.639516,7.499874,4.415713,-0.196461,0.024595,7.527975],[5.938785,2.996669,-6.728848,-2.792624,-0.233151,-4.398639,-3.924132,0.499262,-8.608281],[-5.168746,-2.944436,4.755425,6.323537,7.070095,-6.919607,9.363295,-0.668169,-3.811417]],[[2.969339,-2.595816,6.506254,-4.698241,3.729443,-6.944647,-5.401740,6.408312,-5.313237],[8.576223,9.722554,-4.357968,0.911963,3.978201,-9.779728,-0.807579,5.970490,1.341563],[7.385943,-0.534432,-0.505097,-3.525026,2.357345,8.269382,-2.720958,-9.449687,8.456986],[9.404122,-3.348737,3.588091,-9.888127,4.699853,-3.448898,-0.503350,-3.470360,-1.297453],[4.582874,-9.602354,2.119763,-8.449119,-5.949982,9.812609,-1.827367,-9.911586,5.577973],[8.554752,-8.905518,6.334715,-7.299208,-1.153096,2.090797,5.851839,-8.491545,5.724337],[3.422469,0.909140,-0.810661,5.888733,-5.438138,-3.445319,3.013298,3.297269,-1.940630],[-0.716287,4.675732,4.821605,-1.437718,0.927459,-9.057291,-7.813642,5.937827,7.061240],[-2.673878,-5.769514,0.603051,-3.657926,-5.629655,-1.171758,6.557695,5.662961,0.168860],[7.264612,1.480804,-7.157994,7.235688,6.506777,1.426525,6.440132,-9.307993,-3.441429],[-8.489483,-4.848258,-0.538610,3.993444,-8.268956,-0.744949,6.225668,3.853108,2.005609],[1.206247,-1.747290,0.063853,2.629338,7.693802,-7.806427,4.014318,-3.286172,3.262841],[-6.984638,-7.199638,-3.544858,1.624347,-4.961785,-1.827246,-5.818550,2.818459,6.259123],[-8.006261,1.474737,-9.864335,3.943088,-8.177265,2.949414,8.302817,-3.211600,-1.522799],[-4.860069,-3.897576,-1.320482,-8.707919,-0.457725,9.653359,-1.548482,1.978011,0.122670]],[[4.779724,5.579108,0.947708,-1.785201,8.692066,-5.969212,9.368164,7.599907,-8.275955],[-7.875335,-2.279646,-5.016750,-2.722527,-7.805775,-6.823420,0.564811,-1.681151,0.791615],[-9.095786,-2.095460,-7.273269,5.801936,-3.826781,3.099282,3.753260,3.537823,9.864673],[0.699473,9.553892,5.786879,-5.795574,2.910068,6.782258,-8.640538,-4.451298,8.296429],[3.330794,-4.073189,8.060037,-3.215700,-9.448015,2.762016,6.169164,7.571616,-3.156076],[-5.329960,-4.682122,0.089070,-5.176717,6.027650,0.105913,3.001391,3.868156,-1.279525],[-4.369164,2.927024,-4.717372,-3.889609,-9.809691,-1.448740,-6.314765,3.031526,6.390808],[-8.339140,-8.546471,-6.742781,9.126087,-6.761637,-0.958025,7.330636,-2.067212,2.484319],[6.745405,-9.453485,2.115967,-0.719886,-4.589958,-1.007079,9.287840,3.573471,-1.994051],[6.732729,-4.179591,4.969840,-0.024229,9.265853,3.993301,6.457495,-0.375527,-1.801458],[8.873873,8.494844,-2.064690,3.535441,-0.113813,9.279622,-8.158536,-5.081850,8.768228],[2.128159,0.269435,-3.511867,4.190626,6.716630,7.531821,-9.334668,9.029282,-0.716335],[0.638690,4.892727,4.765593,5.723732,1.999307,-9.615368,9.098979,-2.252657,-8.187046],[6.840741,-2.793487,0.185686,6.651484,-2.597171,5.056452,-3.869241,-1.686454,-4.682851],[0.438668,-6.800002,-1.577309,6.241951,-2.549207,-6.564960,-5.880961,9.804142,-7.797969]],[[-2.376406,-4.920534,-3.617132,-3.327195,-9.528625,-6.107056,-3.104113,-6.988796,-1.360497],[4.469300,-3.626437,0.853003,-9.714189,5.239945,7.720293,-1.389162,8.228068,-4.268483],[-6.806587,-0.667951,-7.904093,1.293803,-3.142194,4.123295,-6.682746,-7.147054,-8.556713],[3.818958,1.207028,-5.683940,8.355759,5.911493,2.191255,-5.599143,-4.948153,2.810625],[-3.990405,4.730293,-3.716882,4.774697,6.183823,-5.844818,-6.275880,-2.068212,-6.201550],[-9.119652,8.713503,-9.159320,2.492119,-5.394890,6.780986,-5.313165,-4.078822,7.106563],[-4.763876,-0.126065,-7.031426,-8.914509,-7.313744,4.200697,0.715680,-1.171639,1.336105],[-9.828913,-9.966692,-3.615444,-7.192596,1.131238,-1.686070,3.144053,3.571947,-5.493010],[-4.721765,-0.353753,9.362758,4.994423,4.201508,7.491341,-4.299533,-0.726334,-4.523962],[6.035728,2.834332,2.782088,9.036152,7.329902,-2.112107,-0.036450,-9.243364,-6.993095],[-0.233100,-1.092842,5.451750,-4.572734,2.665890,-6.922852,1.999041,-2.599220,-3.773681],[-5.659005,7.366760,3.158742,7.815798,-1.472492,-7.251118,7.114377,0.862133,0.251444],[5.761633,-0.249983,-4.204511,-9.264950,-6.660133,-6.492306,1.726043,-1.679769,-8.031218],[-9.796332,-3.584137,4.151648,1.818234,6.520373,9.105370,-5.832024,9.484918,6.270429],[8.571632,7.195256,6.685530,3.607674,2.947612,2.042584,9.445485,0.316334,-8.316649]]], dtype = "float64")#candidate|4304|(6, 15, 9)|const|float64
bop_4305 = relay.left_shift(call_4292.astype('int16'), relay.reshape(const_4304.astype('int16'), relay.shape_of(call_4292))) # shape=(6, 15, 9)
bop_4308 = relay.left_shift(call_4293.astype('int16'), relay.reshape(const_4304.astype('int16'), relay.shape_of(call_4293))) # shape=(6, 15, 9)
output = bop_4305
output2 = bop_4308
func_4315 = relay.Function([], output)
mod['func_4315'] = func_4315
mod = relay.transform.InferType()(mod)
output = func_4315()
func_4316 = relay.Function([], output)
mutated_mod['func_4316'] = func_4316
mutated_mod = relay.transform.InferType()(mutated_mod)
var_4317 = relay.var("var_4317", dtype = "float32", shape = (1, 13, 1))#candidate|4317|(1, 13, 1)|var|float32
uop_4318 = relay.log10(var_4317.astype('float32')) # shape=(1, 13, 1)
uop_4339 = relay.exp(var_4317.astype('float32')) # shape=(1, 13, 1)
uop_4344 = relay.cos(uop_4318.astype('float32')) # shape=(1, 13, 1)
func_3879_call = mod.get_global_var('func_3879')
func_3882_call = mutated_mod.get_global_var('func_3882')
const_4351 = relay.const([6,-5,1,-3,-7,-3,2,9,4,-9,-10,-2,-7,-9,-1,6,-8,-10,-7,3,7,8,-9,-5,5,-8,4,-7,7,1,-10,7,-10,-9,1,-2,8,-10,-1,4,1,-10,-9,8,-6,-4,-8,6,-10,-4,9,-1,-5,7,-10,-1,-10,5,-1,5,-2,4,2,5,-5,4,2,-2,-8,5,8,8,1,9,-6,9,-5,-5,3,8,-8,3,-10,1,3,-6,3,1,7,6,-4,9,-10,-6,-6,-2,-9,-6,-1,8,2,7,10,-1,-7,10,2,1,-6,4,3,6,-4,-2,-9,10,-4,9,4,1,-7,-5,2,10,2,10,3,-7,10,3,-8,1,10,8,-9,7,1,4,7,1,-1,3,1,-2,-9,-10,-6,1,-2,1,-7,7,10,3,-9,-7,7,6,-9,-9,-1,-5,10,4,4,-3,-6,1,6,-5,8,5,1,-3,10,-9,1,-10,10,4,3,-5,2,7,9,2,4,-3,1,-5,10,-1,-8,5,-9,1,6,3,1,-5,3,-8,-7,2,-10,8,-3,-2,-4,-10,-4,6,-9,10,-8,10,4,-8,10,-8,9,10,-5,-4,9,-1,-4,-7,-6,3,-5,7,3,-10,-7,5,4,-7,-8,-7,4,-4,-7,-3,9,6,1,1,9,8,2,2,-9,-7,2,5,-4,-8,9,3,-7,10,-10,-1,6,5,-3,4,-9,-8,-6,9,-2,-2,-8,9,-4,3,-1,3,6,-5,-8,-10,1,8,-2,7,5,7,4,9,4,-2,-10,2,6,6,8,8,5,7,6,3,5,5,7,-7,-9,8,5,-5,9,2,-7,-7,10,-2,-7,-8,-9,2,-8,-7,-8,-6,4,4,3,1,10,-6,1,5,-5,10,5,-9,1,-1,10,-3,-9,10,-5,-5,10,-5,9,8,-2,-9,-8,-1,-4,-1,-10,-9,-3,2,-1,-3,8,9,-8,5,-5,7,3,-4,8,1,10,-8,10,-1,9,-9,1,-6,5,9,4,-3,3,5,-5,-1,10,-5,9,9,-9,-5,-8,-9,2,5,5,-4,9,4,-10,6,6,10,9,-5,10,1,1,-3,10,-9,-9,-5,-6,10,-6,6], dtype = "uint8")#candidate|4351|(420,)|const|uint8
var_4352 = relay.var("var_4352", dtype = "uint8", shape = (1536,))#candidate|4352|(1536,)|var|uint8
call_4350 = relay.TupleGetItem(func_3879_call(relay.reshape(const_4351.astype('uint8'), [420,]), relay.reshape(var_4352.astype('uint8'), [1536,]), ), 3)
call_4353 = relay.TupleGetItem(func_3882_call(relay.reshape(const_4351.astype('uint8'), [420,]), relay.reshape(var_4352.astype('uint8'), [1536,]), ), 3)
bop_4354 = relay.greater_equal(uop_4339.astype('bool'), relay.reshape(uop_4318.astype('bool'), relay.shape_of(uop_4339))) # shape=(1, 13, 1)
func_1527_call = mod.get_global_var('func_1527')
func_1529_call = mutated_mod.get_global_var('func_1529')
const_4362 = relay.const([[4],[2],[1],[4],[-9],[-3],[7],[1],[-9],[9],[3],[9],[-6],[7],[6],[10],[5],[3],[-6],[-5],[4],[-9],[-1],[1],[9],[8],[-1],[-5],[-1],[-4],[2],[-8],[-4],[6],[8],[6],[-1],[-2],[-5],[-4],[4],[-8],[8],[-2],[8],[7],[-10],[10],[6],[7],[-7],[-7],[-7],[-3],[-4],[1],[-7],[-3],[-4],[6],[-2],[3],[-10],[9],[7],[9],[8],[4],[-4],[10],[-4],[-6],[-9],[9],[-3],[-7],[-10],[9],[1],[5],[2],[6],[7],[-7],[-9],[-1],[-9],[-5],[5],[4],[-1],[-4],[-1],[-10],[-1],[-2],[6],[-6],[10],[-7],[2],[1],[4],[-10],[9],[8],[-4],[10],[5],[8],[4],[2],[-10],[6],[2],[6],[-9],[3],[-2],[-2],[-8],[-3],[-3],[8],[3],[-8],[9],[-9],[-8],[8],[6],[2],[-2],[1],[-10],[9],[5],[2],[6],[-10],[9],[-8],[-7],[9],[9],[3],[-3],[3],[4],[3],[8],[3],[5],[3],[-7],[-2],[10],[5],[6],[3],[1],[-3],[3],[-4],[-3],[-10],[-9],[6],[8],[7],[4],[-4],[-9],[4],[-2],[3],[2],[-10],[3],[1],[-10],[-6]], dtype = "int8")#candidate|4362|(182, 1)|const|int8
call_4361 = relay.TupleGetItem(func_1527_call(relay.reshape(const_4362.astype('int8'), [2, 13, 7])), 3)
call_4363 = relay.TupleGetItem(func_1529_call(relay.reshape(const_4362.astype('int8'), [2, 13, 7])), 3)
func_3825_call = mod.get_global_var('func_3825')
func_3826_call = mutated_mod.get_global_var('func_3826')
call_4374 = func_3825_call()
call_4375 = func_3825_call()
bop_4376 = relay.left_shift(uop_4344.astype('int32'), relay.reshape(var_4317.astype('int32'), relay.shape_of(uop_4344))) # shape=(1, 13, 1)
output = relay.Tuple([call_4350,const_4351,var_4352,bop_4354,call_4361,const_4362,call_4374,bop_4376,])
output2 = relay.Tuple([call_4353,const_4351,var_4352,bop_4354,call_4363,const_4362,call_4375,bop_4376,])
func_4393 = relay.Function([var_4317,var_4352,], output)
mod['func_4393'] = func_4393
mod = relay.transform.InferType()(mod)
var_4394 = relay.var("var_4394", dtype = "float32", shape = (1, 13, 1))#candidate|4394|(1, 13, 1)|var|float32
var_4395 = relay.var("var_4395", dtype = "uint8", shape = (1536,))#candidate|4395|(1536,)|var|uint8
output = func_4393(var_4394,var_4395,)
func_4396 = relay.Function([var_4394,var_4395,], output)
mutated_mod['func_4396'] = func_4396
mutated_mod = relay.transform.InferType()(mutated_mod)
var_4410 = relay.var("var_4410", dtype = "float32", shape = (16, 14, 1))#candidate|4410|(16, 14, 1)|var|float32
uop_4411 = relay.cos(var_4410.astype('float32')) # shape=(16, 14, 1)
output = relay.Tuple([uop_4411,])
output2 = relay.Tuple([uop_4411,])
func_4420 = relay.Function([var_4410,], output)
mod['func_4420'] = func_4420
mod = relay.transform.InferType()(mod)
mutated_mod['func_4420'] = func_4420
mutated_mod = relay.transform.InferType()(mutated_mod)
var_4421 = relay.var("var_4421", dtype = "float32", shape = (16, 14, 1))#candidate|4421|(16, 14, 1)|var|float32
func_4420_call = mutated_mod.get_global_var('func_4420')
call_4422 = func_4420_call(var_4421)
output = call_4422
func_4423 = relay.Function([var_4421], output)
mutated_mod['func_4423'] = func_4423
mutated_mod = relay.transform.InferType()(mutated_mod)
var_4517 = relay.var("var_4517", dtype = "float64", shape = (7, 4, 12))#candidate|4517|(7, 4, 12)|var|float64
uop_4518 = relay.log(var_4517.astype('float64')) # shape=(7, 4, 12)
uop_4526 = relay.atanh(uop_4518.astype('float64')) # shape=(7, 4, 12)
var_4529 = relay.var("var_4529", dtype = "float64", shape = (7, 4, 12))#candidate|4529|(7, 4, 12)|var|float64
bop_4530 = relay.divide(uop_4518.astype('float32'), relay.reshape(var_4529.astype('float32'), relay.shape_of(uop_4518))) # shape=(7, 4, 12)
func_3614_call = mod.get_global_var('func_3614')
func_3616_call = mutated_mod.get_global_var('func_3616')
var_4536 = relay.var("var_4536", dtype = "int16", shape = (192,))#candidate|4536|(192,)|var|int16
call_4535 = func_3614_call(relay.reshape(var_4536.astype('int16'), [12, 2, 8]))
call_4537 = func_3614_call(relay.reshape(var_4536.astype('int16'), [12, 2, 8]))
func_4194_call = mod.get_global_var('func_4194')
func_4196_call = mutated_mod.get_global_var('func_4196')
call_4553 = relay.TupleGetItem(func_4194_call(), 2)
call_4554 = relay.TupleGetItem(func_4196_call(), 2)
bop_4560 = relay.left_shift(uop_4526.astype('uint8'), relay.reshape(var_4529.astype('uint8'), relay.shape_of(uop_4526))) # shape=(7, 4, 12)
func_2310_call = mod.get_global_var('func_2310')
func_2315_call = mutated_mod.get_global_var('func_2315')
const_4566 = relay.const([8.074885,6.521906,4.365644,9.237280,3.378467,9.186262,-6.683969,1.021577,0.433251,3.033122,5.327256,-8.928111,2.623592,-1.552503,-0.720982,-2.726025,0.405907,1.336335,-3.099609,-9.582022,-0.945846,-4.788894,0.909640,-1.850369,2.181426,8.547257,-1.019314,4.550708,8.345078,0.694148,7.040028,-5.421521,8.095068,5.172930,-6.771829,0.411950,1.115188,2.286688,8.065420,9.596490,-8.101048,1.141569,5.058193,-0.172036,1.430942,-6.006593,8.885099,3.571891,-0.311070,8.926653,-1.858715,4.196287,-0.363212,8.769655,9.445442,-3.544098,0.195167,-1.287852,-4.037713,9.534405,-7.704077,3.858218,-5.429901,5.949259,8.305310,-7.689150,2.834020,-0.001208,-8.731660,-6.933017,-6.328796,8.882348,-3.101302,-8.104345,-9.703740,-4.670735,-2.521059,7.380831,9.534327,1.566000,4.879418,-5.900468,-0.510376,-8.130957,-6.147806,-2.748946,2.272504,-2.337159,4.535482,7.027447,7.962379,5.450023,9.748001,-0.101733,3.569248,0.027522,9.746254,3.786849,-1.819173,3.636783,-2.000079,-8.054851,9.913098,-6.983728,7.697796,7.799146,3.230032,-2.069495,7.922916,8.731660,6.686216,1.793766,5.185371,-2.930553,-0.058365,-2.254893,5.666621,-7.938552,-3.867349,8.549767,-1.334060,-7.259311,0.711763,-7.802837,9.532573,7.160315,3.934273,-7.147002,-0.323741,-9.693649,-4.344330,1.975123,0.760393,-4.180724,-3.912812,-9.363473,-4.050049,3.064097,1.954288,-5.392122,4.533843,6.295208,-5.022317,0.823265,-7.682296,7.635870,3.006237,-1.505826,0.962423,-1.545489,6.128813,-0.655560,0.038981,7.581018,-9.786438,7.871038,-4.464646,-4.242619,-2.187420,3.890429,1.985545,5.275421,1.602874,-8.028762,8.410601,6.573668,9.739525,-9.153229,0.248332,4.255251,-7.261513,2.653115,-6.178463,9.093197,-6.113886,1.643240,-0.387132,-6.323385,2.672475,-6.450241,3.799688,2.928813,4.224572,4.845579,3.815751,-5.849234,8.010667,-8.024197,9.237157,8.746941,-3.860566,-0.701551,7.020470,7.832408,7.892251,4.334519,9.995351,0.324224,2.394546,1.280450,8.397525,-4.598896,8.525746,-1.843904,-3.210489,-0.258915,5.250462,8.680347,2.487939,2.197811,-0.021942,4.355398,9.449992,2.013078,1.524591,3.934359,-8.876241,-1.120051,9.375918,1.724257,-6.929369,-2.860568,-9.901295,-4.591985,-3.136408,-2.108080,5.716803,-0.048736,-2.218552,8.868088,-0.051753,-6.152528,-5.384930,7.711533,-0.183570,5.757978,-3.960933,-2.069303,-5.145458,8.171401,-1.396347,6.961036,8.878001,-0.148256,4.437168,-6.034356,-9.730989,6.201713,8.844957,-8.802414,2.711394,-6.166205,-6.368345,-4.921007,7.438346,0.075910,2.191442,9.450820,4.494044,-8.748359,9.607631,-8.889074,8.160373,-5.332242,-1.662253,-4.552311,5.576274,-2.832507,2.096256,-6.683791,-4.877584,-9.589945,-3.104860,-4.130814,3.964897,8.701667,9.198971,3.399124,8.571132,9.781856,-3.667126,9.056651,-9.688860,3.164069,-4.949302,0.347761,-0.679991,-6.211501,1.216791,-1.683547,6.592988,-4.625263,2.424765,6.052788,2.505704,7.407069,2.780619,7.255381,-7.760928,2.173313,-1.003925,1.700657,5.974518,-9.942139,-0.594585,2.019929,-2.258541,0.163877,3.075288,-6.175483,1.618347,7.259868,-2.848536,5.307495,5.648818,0.102984,4.543890,-2.366275,-1.082377,1.401039,3.271402,-2.921620,-8.888891,-5.762198,-1.908663,1.104183,-2.326432,-0.232021,8.296196,8.157198,8.653407,2.837900,2.080738,5.575858,-9.109439,-6.932026,4.305994,1.070022,-6.432347,-1.842758,-6.991129,2.009596,-2.028785,3.244716,1.885213,-0.704085,6.350780,2.343929,-1.191742,-0.215811,3.973055,-8.701756,2.229054,8.876335,7.916292,-6.913951,5.526752,-7.724628,-8.838808,1.743621,-0.978103,-3.233071,3.523665,-7.163449,-6.904772,-1.755015,-0.272252,-2.880598,-3.706011,9.703690,6.123413,7.907761,5.058045,-1.404045,2.727358,1.961740,-1.991231,7.624384,0.260166,5.862946,-2.228676,-3.963290,-0.957969,-7.564233,-4.291840,4.610667,-1.083983,-8.154857,-8.367101,9.702372], dtype = "float64")#candidate|4566|(390,)|const|float64
var_4567 = relay.var("var_4567", dtype = "uint8", shape = (1, 1536))#candidate|4567|(1, 1536)|var|uint8
const_4568 = relay.const([4.573102,-9.943529,-4.894795,-9.427159,-2.892438,9.644095,0.661870,-8.329683,7.230306,-3.847137,9.714146,-0.711091,7.917184,9.969737,-4.732974,0.238656,8.413456,4.606020,3.290725,-1.749850,-3.018844,3.335351,4.257334,4.993535,-4.363316,5.721291,7.387556,2.717826,-3.825051,6.501019,-5.843867,-1.749723,-2.858681,8.315082,-9.604585,4.623642,4.752650,-2.548437,4.300076,-9.246252,5.859396,3.912484,4.579360,-6.505398,4.454987,-9.256529,-1.104759,0.230748,8.685204,-4.247158,7.101746,-6.448286,-0.373026,5.197290,8.822231,-9.559575,-3.769741,1.451888,-5.950386,2.409276,5.437714,0.562317,4.303024,-5.344785,-8.214291,-2.681841,0.526476,-7.438142,3.545408,7.184615,0.688040,3.454178,7.436192,2.941074,-1.547753,9.679736,2.106688,-8.490784,-4.787015,8.477816,0.521992,-1.602524,-0.961058,9.741498,-6.755420,-7.692319,-7.861533,5.797018,-1.755257,5.322579,-5.369252,-8.803440,-6.696937,-6.799437,-0.570071,2.833691,5.451724,-7.034129,-1.257439,0.561258,-3.047035,9.063859,8.054360,-9.785818,0.646559,9.684838,-2.831729,0.684697,-4.308142,9.252032,2.684241,-7.920800,-1.244633,5.577976,-9.561817,-3.987997,-6.006538,3.285469,-3.403118,-0.461543,-2.130273,7.132604,9.138099,3.301575,-2.589832,-3.926344,8.720294,-9.234664,2.385720,-8.755505,-8.470793,-8.233430,-7.563218,4.823857,4.147969,8.144085,5.184645,6.855799,8.433137,-9.454613,7.037243,-6.893431,3.729192,1.734140,-9.900793,5.088940,-2.427918,4.392873,6.421183,1.802350,-8.523337,-7.136975,-0.877294,4.674346,-7.176500,7.569397,-7.237381,-1.544428,7.952586,9.404410,-1.692063,-5.001310,-0.411802,9.794867,-4.833619,2.215117,6.214125,-7.302880,7.824419,-4.206001,4.389992,8.422944,7.909667,-0.607222,3.573362,-7.641065,-7.757668,-3.791074,-0.325151,-8.849297,4.035549,-1.168224,-5.863697,-3.989788,-6.710631,3.965030,-5.603890,1.549864,6.282208,-2.215923,3.539727,-7.258173,-2.834839,2.570154,-2.006603,9.614774,1.863984,5.282997,6.271437,2.642875,-5.780783,0.519167,2.928020,-7.456490,-7.822648,-0.215941,2.113903,5.831168,1.153810,-6.156057,4.187058,2.643184,6.802082,-2.226083,-3.756878,-2.303439,-6.598785,-5.123776,4.804202,-9.584401,7.403271,4.231516,1.543081,-6.892378,4.855994,6.280342,8.608416,0.215943,3.295973,9.700235,1.566849,-7.356829,9.887686,-5.709217,1.746055,3.027074,4.356384,1.462336,6.802980,1.779937], dtype = "float64")#candidate|4568|(240,)|const|float64
var_4569 = relay.var("var_4569", dtype = "int8", shape = (182,))#candidate|4569|(182,)|var|int8
call_4565 = relay.TupleGetItem(func_2310_call(relay.reshape(const_4566.astype('float64'), [390,]), relay.reshape(var_4567.astype('uint8'), [1536,]), relay.reshape(const_4568.astype('float64'), [240,]), relay.reshape(var_4569.astype('int8'), [182,]), ), 4)
call_4570 = relay.TupleGetItem(func_2315_call(relay.reshape(const_4566.astype('float64'), [390,]), relay.reshape(var_4567.astype('uint8'), [1536,]), relay.reshape(const_4568.astype('float64'), [240,]), relay.reshape(var_4569.astype('int8'), [182,]), ), 4)
output = relay.Tuple([bop_4530,call_4535,var_4536,call_4553,bop_4560,call_4565,const_4566,var_4567,const_4568,var_4569,])
output2 = relay.Tuple([bop_4530,call_4537,var_4536,call_4554,bop_4560,call_4570,const_4566,var_4567,const_4568,var_4569,])
func_4571 = relay.Function([var_4517,var_4529,var_4536,var_4567,var_4569,], output)
mod['func_4571'] = func_4571
mod = relay.transform.InferType()(mod)
mutated_mod['func_4571'] = func_4571
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4571_call = mutated_mod.get_global_var('func_4571')
var_4573 = relay.var("var_4573", dtype = "float64", shape = (7, 4, 12))#candidate|4573|(7, 4, 12)|var|float64
var_4574 = relay.var("var_4574", dtype = "float64", shape = (7, 4, 12))#candidate|4574|(7, 4, 12)|var|float64
var_4575 = relay.var("var_4575", dtype = "int16", shape = (192,))#candidate|4575|(192,)|var|int16
var_4576 = relay.var("var_4576", dtype = "uint8", shape = (1, 1536))#candidate|4576|(1, 1536)|var|uint8
var_4577 = relay.var("var_4577", dtype = "int8", shape = (182,))#candidate|4577|(182,)|var|int8
call_4572 = func_4571_call(var_4573,var_4574,var_4575,var_4576,var_4577,)
output = call_4572
func_4578 = relay.Function([var_4573,var_4574,var_4575,var_4576,var_4577,], output)
mutated_mod['func_4578'] = func_4578
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4007_call = mod.get_global_var('func_4007')
func_4009_call = mutated_mod.get_global_var('func_4009')
call_4610 = func_4007_call()
call_4611 = func_4007_call()
func_3879_call = mod.get_global_var('func_3879')
func_3882_call = mutated_mod.get_global_var('func_3882')
var_4649 = relay.var("var_4649", dtype = "uint8", shape = (420,))#candidate|4649|(420,)|var|uint8
var_4650 = relay.var("var_4650", dtype = "uint8", shape = (1536,))#candidate|4650|(1536,)|var|uint8
call_4648 = relay.TupleGetItem(func_3879_call(relay.reshape(var_4649.astype('uint8'), [420,]), relay.reshape(var_4650.astype('uint8'), [1536,]), ), 2)
call_4651 = relay.TupleGetItem(func_3882_call(relay.reshape(var_4649.astype('uint8'), [420,]), relay.reshape(var_4650.astype('uint8'), [1536,]), ), 2)
output = relay.Tuple([call_4610,call_4648,var_4649,var_4650,])
output2 = relay.Tuple([call_4611,call_4651,var_4649,var_4650,])
func_4657 = relay.Function([var_4649,var_4650,], output)
mod['func_4657'] = func_4657
mod = relay.transform.InferType()(mod)
mutated_mod['func_4657'] = func_4657
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4657_call = mutated_mod.get_global_var('func_4657')
var_4659 = relay.var("var_4659", dtype = "uint8", shape = (420,))#candidate|4659|(420,)|var|uint8
var_4660 = relay.var("var_4660", dtype = "uint8", shape = (1536,))#candidate|4660|(1536,)|var|uint8
call_4658 = func_4657_call(var_4659,var_4660,)
output = call_4658
func_4661 = relay.Function([var_4659,var_4660,], output)
mutated_mod['func_4661'] = func_4661
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4029_call = mod.get_global_var('func_4029')
func_4031_call = mutated_mod.get_global_var('func_4031')
call_4726 = relay.TupleGetItem(func_4029_call(), 0)
call_4727 = relay.TupleGetItem(func_4031_call(), 0)
func_3690_call = mod.get_global_var('func_3690')
func_3695_call = mutated_mod.get_global_var('func_3695')
var_4738 = relay.var("var_4738", dtype = "int8", shape = (200,))#candidate|4738|(200,)|var|int8
var_4739 = relay.var("var_4739", dtype = "float32", shape = (2156,))#candidate|4739|(2156,)|var|float32
var_4740 = relay.var("var_4740", dtype = "uint8", shape = (1536,))#candidate|4740|(1536,)|var|uint8
const_4741 = relay.const([-10,10,5,8,2,6,-6,2,6,3,-4,5,-2,9,-4,-7,-1,6,10,5,4,9,-2,-5,-7,-10,-1,-2,-3,6,-5,2,1,-5,-1,-2,-2,2,2,-2,-8,-9,-9,-4,1,-10,5,4,9,7,-8,5,-10,3,8,10,-10,-5,-9,1,-8,-8,-2,-9,2,3,4,9,6,-7,-9,-10,-7,8,-5,8,8,8,-8,3,2,-9,5,-2,10,-7,8,8,4,1,-2,3,-7,-4,-8,5,2,-8,-2,9,-2,10,4,5,-1,7,7,7,-1,-9,7,-10,-9,-9,-3,-2,-5,-4,10,6,8,-7,5,1,7,6,-5,5,7,5,-2,-4,9,5,9,-1,5,6,-3,6,8,-4,-10,-8,-2,-6,2,-1,-10,-2,-6,-8,2,2,2,5,-2,4,9,9,-7,-6,-5,-9,3,-5,-4,-1,8,4,-3,-9,-10,-7,5,10,2,-2,-5,3,-4,-9,1,7,-5,-9,-7,-5,1,6,9,9,-6,-10,4,10,-2,-6,-9,2,1,-4,10,-5,-1,-7,9,-4,7,-7,-9,-8,-4,-6,5,-8,-9,-5,10,-10,-3,5,-2,-10,-5,1,1,-7,-2,-9,8,3,10,8,10,-2,2,-6,8,-5,-2,-9,6,10,-6,6,8,5,7,-9,9,9,-1,-8,-2,4,-1,-7,-8,6,-9,1,-2,-7,-10,-6,-8,-10,4,9,-5,10,-5,-3,-5,10,3,-3,-8,4,7,-6,-6,5,8,-6,7,7,4,-9,-2,4,10,8,8,-7,3,1,2,1,-1,1,4,2,-9,-8,-9,4,-2,9,-8,8,-10,3,6,-9,5,-5,-7,9,-7,9,-3,-5,-7,6,1,-9,2,2,-7,5,1,3,8,-6,-2,2,7,-10,-4,-4,-8,-5,-4,-8,-7,5,2,8,1,-6,-10,-8,-6,5,-5,-4,-9,-3,7,6,-4,-2,8,-8,-5,-3,5,-1,-2,-10,3,-9,-4,-7,-2,4,1,-4,-7,1,-9,6,10,4,4,-6,-9,-1,-7,-5,-1,-7,-7,3,-5,4,1,-7,-7,-2,4,-10,-4,7,1,-10,-3,5,10,-1,-4,-7,7,7,-5,-9,-8,-4,-1,-4,5,3,5,-7,5,7,5,6,8,-9,2,-1,-6,5,-8,-10,-6,-10,-8,-3,-4,-4,-6,4,4,8,1,8,-6,5,-3,4,7,-10,10,-9,4,5,4,6,1,5,5,1,8,5,10,-3,-3,3,-6,8,-8,2,2,-9,1,-7,9,8,-4,1,2,5,4,-1,-10,2,1,9,3,-8,-4,-3,-3,-10,-5,2,-2,-5,5,-9,-4,-5,7,10,-4,6,-3,10,-1,-2,-1,4,-3,4,-4,5,5,6,-5,-4,5,6,-9,6,9,6,4,7,-8,9,1,-1,5,-10,4,-9,4,-10,6,-4,-4,6,2,-7,-2,4,2,2,5,-8,-6,9,-4,2,5,-4,-6,-8,4,1,-4,1,-2,-3,-7,-5,10,10,5,4,5,10,10,10,-3,-2,-5,3,8,-4,7,-5,-5,8,6,-9,-2,2,7,8,4,5,10,7,-3,10,-8,4,-1,-3,-8,8,3,4,4,8,-9,-7,2,-9,-5,-3,-6,-8,1,4,6,-9,-1,-7,-4,-5,9,-4,-8,-5,1,-5,7,4,5,-9,-9,7,3,7,10,-10,5,-1,-4,5,-4,-2,4,-1,1,9,8,10,-4,9,-10,-5,3,-8,-2,-10,-3,-9,8,9,10,1,-8,1,9,-7,9,4,8,8,-6,6,3,-8,5,-10,7,-5,2,6,8,-10,3,-10,7,1,-8,-3,-2,2,8,4,-5,10,-7,-1,-8,-5,-7,4,-4,-5,3,5,-9,-3,-1,4,-8,-5,1,-1,9,1,-10,7,-1,-8,10,-8,-10,-6,1,-7,6,-3,10,-5,-1,-4,-3,-7,-3,7,-6,-10,9,7,8,7,10,1,6,-10,2,10,-4,10,-9,3,-1,4,-1,-7,9,-4,-8,8,1,-10,1,-10,6,4,-4,-5,-10,-4,1,1,-7,-6,10,-8,-3,3,10,-1,-1,2,-2,10,-5,6,-8,-6,1,-2,8,-1,-10,-7,6,-9,-2,4,-7,9,-1,-9,-1,-5,-9,-5,-9,-1,1,-1,5,5,10,-3,-4,-2,7,-5,6,-5,9,5,-6,-8,2,5,-1,5,10,2,-2,2,-4,2,-6,-9,6,-4,-10,-9,-6,-2,-5,-10,-6,-10,5,-10,8,2,-8,1,-5,-4,1,-9,-8,-2,9,9,-4,-4,2,7,5,-5,10,-4,-5,4,-4,1,-6,-6,-4,-8,5,-7,-5,6,-6,2,-9,3,-5,-7,1,-2,2,-10,4,-7,10,-5,-8,5,-5,2,-3,7,-1,8,4,-9,-1,-5,6,3,3,1,2,7,-2,1,-3,5,5,-8,-5,-9,5,-1,-3,-7,4,-10,-5,-4,-6,-4,3,3,-3,1,5,2,4,-10,-8,3,-6,-8,2,10,7,4,-3,10,-7,2,2,3,7,-3,2,-7,-1,-9,-9,8,3,7,-1,2,9,2,-7,-7,10,-1,6,-9,7,7,-9,1,8,-7,-7,9,-4,9,-7,8,-8,10,-9,10,-6,-1,5,6,1,4,-6,-4,-3,-2,3,10,10,-5,6,6,-6,9,-10,5,-2,-9,-2,-7,-10,-9,-10,4,6,1,-7,-6,-6,4,-1,9,-8,2,-3,-8,9,-6,6,-8,-9,4,6,9,-8,9,-2,5,-7,1,-5,3,-8,-2,10,7,-7,-5,5,-6,-7,-2,-1,8,-5,8,-9,5,-1,-4,-5,10,3,6,9,9,-6,4,10,-7,-10,5,7,9,-7,9,-5,5,-4,6,-4,1,7,-9,-7,4,-1,-9,10,-6,-2,-8,-4,4,5,-3,-4,3,10,-10,10,2,-4,-10,10,1,3,-10,-4,4,4,-10,-2,10,5,-6,-6,6,3,4,6,-7,5,-5,-2,8,-8,2,1,3,4,1,-2,-9,7,-8,9,1,3,-2,-6,-10,-3,8,6,2,-3,-7,-1,9,10,-2,-5,2,8,-2,8,-1,-4,-5,-10,-10,9,7,-6,10,4,-4,5,-6,9,1,1,8,-3,-8,9,6,-7,-8,7,-8,1,9,-7,-3,4,6,6,-1,-7,1,-6,4,10,-6,-3,8,-4,2,-4,10,8,3,9,4,2,-4,2,4,1,1,-4,-9,-7,-2,3,9,5,7,8,10,7,-10,1,3,4,9,2,-6,7,10,-7,3,-2,8,10,-10,1,7,4,7,1,-5,1,4,9,-8,-4,2,1,-6,7,7,-5,-1,4,8,3,-10,5,2,7,-4,-3,5,-6,5,6,-1,-6,-10,10,6,1,8,10,-4,2,-6,-6,-8,-1,-8,-5,-7,-1,1,-7,5,-3,-8,10,7,-1,6,-5,4,7,4,10,5,2,-1,5,9,-8,10,-8,-10,4,-8,10,7,-3,1,4,-3,4,-5,1,-6,10,6,6,9,-4,7,1,5,-4,-7,2,5,5,4,4,6,-9,6,-2,3,3,2,-5,10,-3,10,-7,3,4,10,1,-6,10,-4,-6,-10,9,5,-1,5,-9,1,-9,10,6,-1,-7,7,-6,2,10,-3,4,-4,10,-8,4,5,-6,7,6,-8,5,-4,6,7,8,6,-5,-8,2,3,7,-1,4,4,-6,-5,-8,5,5,-10,9,8,8,6,3,-6,-7,1,5,-3,8,3,9,9,-10,-10,7,-3,-3,3,-10,4,7,1,3,-2,-6,-4,-5,-2,2,-3,7,3,7,-5,6,4,-5,5,3,-8,4,-5,-6,3], dtype = "int32")#candidate|4741|(1456,)|const|int32
call_4737 = relay.TupleGetItem(func_3690_call(relay.reshape(var_4738.astype('int8'), [200,]), relay.reshape(var_4739.astype('float32'), [2156,]), relay.reshape(var_4740.astype('uint8'), [1536,]), relay.reshape(const_4741.astype('int32'), [2, 728]), ), 6)
call_4742 = relay.TupleGetItem(func_3695_call(relay.reshape(var_4738.astype('int8'), [200,]), relay.reshape(var_4739.astype('float32'), [2156,]), relay.reshape(var_4740.astype('uint8'), [1536,]), relay.reshape(const_4741.astype('int32'), [2, 728]), ), 6)
output = relay.Tuple([call_4726,call_4737,var_4738,var_4739,var_4740,const_4741,])
output2 = relay.Tuple([call_4727,call_4742,var_4738,var_4739,var_4740,const_4741,])
func_4749 = relay.Function([var_4738,var_4739,var_4740,], output)
mod['func_4749'] = func_4749
mod = relay.transform.InferType()(mod)
mutated_mod['func_4749'] = func_4749
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4749_call = mutated_mod.get_global_var('func_4749')
var_4751 = relay.var("var_4751", dtype = "int8", shape = (200,))#candidate|4751|(200,)|var|int8
var_4752 = relay.var("var_4752", dtype = "float32", shape = (2156,))#candidate|4752|(2156,)|var|float32
var_4753 = relay.var("var_4753", dtype = "uint8", shape = (1536,))#candidate|4753|(1536,)|var|uint8
call_4750 = func_4749_call(var_4751,var_4752,var_4753,)
output = call_4750
func_4754 = relay.Function([var_4751,var_4752,var_4753,], output)
mutated_mod['func_4754'] = func_4754
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3825_call = mod.get_global_var('func_3825')
func_3826_call = mutated_mod.get_global_var('func_3826')
call_4784 = func_3825_call()
call_4785 = func_3825_call()
func_3825_call = mod.get_global_var('func_3825')
func_3826_call = mutated_mod.get_global_var('func_3826')
call_4807 = func_3825_call()
call_4808 = func_3825_call()
output = relay.Tuple([call_4784,call_4807,])
output2 = relay.Tuple([call_4785,call_4808,])
func_4809 = relay.Function([], output)
mod['func_4809'] = func_4809
mod = relay.transform.InferType()(mod)
mutated_mod['func_4809'] = func_4809
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4809_call = mutated_mod.get_global_var('func_4809')
call_4810 = func_4809_call()
output = call_4810
func_4811 = relay.Function([], output)
mutated_mod['func_4811'] = func_4811
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4194_call = mod.get_global_var('func_4194')
func_4196_call = mutated_mod.get_global_var('func_4196')
call_4889 = relay.TupleGetItem(func_4194_call(), 0)
call_4890 = relay.TupleGetItem(func_4196_call(), 0)
output = relay.Tuple([call_4889,])
output2 = relay.Tuple([call_4890,])
func_4891 = relay.Function([], output)
mod['func_4891'] = func_4891
mod = relay.transform.InferType()(mod)
mutated_mod['func_4891'] = func_4891
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4891_call = mutated_mod.get_global_var('func_4891')
call_4892 = func_4891_call()
output = call_4892
func_4893 = relay.Function([], output)
mutated_mod['func_4893'] = func_4893
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4809_call = mod.get_global_var('func_4809')
func_4811_call = mutated_mod.get_global_var('func_4811')
call_4946 = relay.TupleGetItem(func_4809_call(), 0)
call_4947 = relay.TupleGetItem(func_4811_call(), 0)
func_4657_call = mod.get_global_var('func_4657')
func_4661_call = mutated_mod.get_global_var('func_4661')
var_4949 = relay.var("var_4949", dtype = "uint8", shape = (420,))#candidate|4949|(420,)|var|uint8
const_4950 = relay.const([5,-4,4,-2,2,-4,7,7,-6,-3,-4,-4,-3,-1,4,-5,9,-4,5,-6,9,3,-2,5,9,-10,5,3,4,7,3,9,-3,-4,8,-5,-2,1,9,3,-6,-2,-8,10,-10,-1,9,4,10,10,10,5,6,-5,3,-2,10,1,10,1,8,-4,2,1,-7,-2,-8,6,-2,-6,6,4,-3,-5,6,-2,8,1,5,-1,-3,-7,9,-5,-4,-4,1,8,4,-7,-9,-5,7,4,10,-4,10,5,7,-10,1,3,3,7,7,10,-7,1,-10,7,4,-2,3,6,7,2,10,-1,-1,2,4,-1,6,-4,1,-6,-3,1,-8,-9,-3,-5,8,-7,8,-6,3,3,1,6,1,9,2,1,7,7,10,-2,-9,9,2,10,-5,5,-2,-10,-4,-8,-10,-6,-10,-6,6,1,9,-3,-7,6,-7,8,3,4,-8,6,3,3,-7,-4,-9,8,-6,10,-5,-3,-1,-4,10,4,2,4,-1,7,-7,9,-7,-7,10,-6,6,-7,-2,-1,-9,-10,4,4,-2,3,3,7,-1,-5,-4,5,-2,-8,1,7,-6,-1,-3,-6,-10,-4,1,5,10,2,-10,-5,-7,-7,2,-10,-10,-9,-10,8,3,2,-5,-5,-6,-8,-4,-9,6,3,9,-8,-6,4,1,-5,3,-8,4,-5,2,9,6,1,3,2,9,2,7,1,-5,-4,-4,9,8,8,-9,8,-4,-9,-2,10,-1,7,8,9,6,4,-8,8,8,5,-5,-3,1,6,3,3,8,-3,9,10,7,-5,-8,10,1,3,10,4,10,-5,8,6,-9,4,4,3,-9,-6,-3,5,4,9,6,5,5,-6,1,1,-4,10,-9,9,3,-7,2,8,9,-9,-3,8,6,3,9,-7,-8,-3,10,-7,7,-9,5,4,7,9,-8,7,3,1,-3,7,5,-2,-1,-10,-2,-7,6,-1,5,-10,6,-8,7,-3,8,-4,1,10,5,-10,8,-4,-1,7,4,10,7,9,5,-4,3,6,4,-5,5,-7,-5,7,-5,-1,-2,-7,8,10,-9,6,4,7,7,6,1,5,4,1,6,8,-4,-6,-4,-6,3,-8,-6,-5,-9,9,6,-6,-5,2,9,-9,7,-5,-2,-6,5,-1,9,7,9,-7,-7,-7,-10,-4,-1,3,-8,8,9,2,8,-6,1,6,-9,-7,6,1,-5,8,-7,3,-1,-5,7,-6,-3,3,-8,-4,-1,-3,6,-4,8,6,-5,3,2,-6,-5,5,5,-2,6,-9,-10,4,6,-9,-2,-4,-4,2,-4,4,-1,9,-6,8,-8,8,9,6,-10,2,9,-10,2,10,8,-7,-2,4,9,9,1,7,-9,-5,-7,-2,2,1,2,2,-5,9,-7,-7,-7,6,-6,-7,-8,-4,1,3,-6,1,-6,-9,4,-10,5,7,-6,9,8,6,2,10,4,9,8,9,3,-8,-8,-9,-8,4,-1,-5,-2,-4,-1,-8,-8,6,-6,-1,-6,7,-9,-6,3,2,-6,-3,-10,-1,-1,-5,-5,-4,-9,-10,-6,-9,-3,4,9,-10,-3,-1,9,-3,10,-7,10,-6,10,5,2,1,-1,1,-10,-2,3,-5,7,1,5,-4,3,5,-5,7,4,-5,4,-2,-5,7,-10,-8,-10,4,-1,2,8,5,-8,3,4,-7,-1,3,7,-4,2,-2,5,8,4,-9,-7,-6,-1,-9,6,-5,8,5,-10,2,2,-6,10,4,6,-8,2,-2,-4,9,-10,7,4,3,2,10,9,-3,-2,7,-2,4,9,-6,8,3,10,6,-3,-10,6,8,-5,-8,-10,6,-8,-8,6,-9,1,-10,1,7,-7,-6,-6,-10,-7,-8,3,-3,-4,-7,-6,5,-8,10,-3,3,3,-4,-6,-8,5,2,-3,9,7,-10,-2,-10,-9,2,-7,-3,4,7,-4,-5,-4,6,-3,5,-1,-2,-9,5,-3,10,-2,10,10,8,-6,-2,-9,8,-1,1,-7,5,5,3,-7,-10,10,4,7,4,4,-4,4,6,-4,-9,2,-8,-4,-5,-8,9,-4,7,-7,-7,-9,-8,2,2,3,-8,5,-1,6,1,2,-9,-7,10,-7,8,9,-1,-2,-8,4,1,1,-10,10,1,3,8,8,5,4,-3,9,-5,-9,-7,8,-4,-10,6,-8,-9,8,-3,5,2,-3,-4,1,3,-2,-4,-8,1,-5,-5,-5,5,4,-8,8,-10,-6,-3,-6,10,-7,-8,5,1,6,4,-4,5,-9,-9,-6,7,-5,-1,-7,9,-5,6,-8,-1,-5,-8,-6,-7,7,-1,4,4,-8,-10,-6,-8,-8,5,1,10,3,-7,10,-1,9,-9,1,4,-8,4,-3,-7,7,7,-7,6,-5,-6,-6,-4,-2,9,4,-1,-10,-6,-7,6,-4,4,9,9,4,1,-6,-6,-7,10,-10,6,7,-3,-5,-10,1,10,5,-6,-7,-8,3,1,-1,-3,-3,-1,3,7,-4,-8,-3,4,10,-9,-8,-9,-3,1,1,-4,-5,7,10,7,-10,-8,-3,-3,4,-9,-8,-3,9,4,-2,-6,-5,6,-6,-1,7,-3,4,1,-7,2,9,8,-3,-1,3,1,-2,-3,-9,-7,6,7,6,-9,10,-10,-9,10,3,7,1,-5,-7,1,5,-4,-8,10,-1,-6,-10,-4,9,3,5,1,1,9,4,-6,8,9,-3,7,-8,6,3,1,6,-5,7,7,10,6,5,-5,3,6,-5,-9,8,-4,-7,-3,10,-4,-2,3,-8,-9,10,-6,10,-9,9,-9,-5,-9,8,7,-10,3,5,-7,4,8,10,8,-7,4,-5,4,7,-6,5,-1,6,8,-1,-4,9,-2,7,-8,7,2,-8,-3,10,-10,-3,-10,6,-10,-3,3,-8,4,4,-10,5,-2,8,7,-5,3,-7,-6,-10,-1,3,-8,8,-8,3,3,2,10,1,8,-4,1,-1,-6,5,8,3,1,-8,-4,-9,-9,-2,-10,8,-6,-6,-8,6,-2,3,-9,5,-8,10,-4,-8,-7,3,3,5,8,8,10,9,-5,3,-9,-7,-1,-8,6,-9,-6,10,8,1,-9,-1,5,3,4,-7,4,1,-10,2,5,-9,-8,2,-6,-1,2,-6,-3,8,-4,-4,6,6,4,-2,-1,-2,1,2,-7,-4,6,7,-8,-1,-7,-3,-10,-10,6,5,-2,6,-3,3,-3,8,-7,-9,9,9,4,-10,2,-1,2,6,5,9,10,7,-1,3,1,6,3,-5,-9,1,2,10,10,-10,-9,4,-1,5,7,1,-1,5,2,8,4,3,-3,-2,2,-7,-10,-4,-1,4,-6,-3,2,10,-9,-7,10,-1,-6,4,-4,1,-2,-5,-4,9,6,7,-4,-3,-7,-6,-2,-8,9,-8,-4,6,-4,9,2,7,3,-7,3,10,2,-5,-2,-5,-8,3,-2,10,-2,3,8,-1,4,-8,7,6,-5,-6,-7,-9,3,-7,-2,10,-5,-7,3,-5,-7,-3,-4,-6,2,-7,10,-2,-9,10,5,7,-3,6,-4,4,-6,8,7,-9,5,-6,4,-9,-6,-6,9,4,10,9,-10,7,-1,6,-10,-5,-10,3,-8,9,-1,6,2,3,9,-8,-6,-5,-2,5,5,-1,2,3,6,3,-8,-9,-10,-2,6,-9,5,-1,4,-2,-7,-6,-7,-6,-10,2,9,-10,-6,9,-4,-4,2,-7,1,-7,-4,-5,1,-6,2,3,-1,-2,7,9,-2,2,8,10,1,-6,-10,8,4,-6,-3,-10,2,-3,5,-2,-7,-1,-4,-4,8,-1,-5,-2,2,5,-7,-2,-7,9,9,9,6,2,-2,-6,-10,-1,-6,2,-10,-5,-2,-5,-6,-10,-8,2,10,-7,-2,-3,9,-7,-6,5,8,3,9,-8,4,9,-9,-9,6,-9,8,1,5,-6,-9,-5,1,6,5,4,-3,5,-5,-1,10,-9,4,-10,10,-8,-5,5,-2,-7,-6,-8,5,1,8,2,3,-6,3,-4,2,-3,6,4,-10,4,-1,5,6,5,-7,9,10,5,-3], dtype = "uint8")#candidate|4950|(1536,)|const|uint8
call_4948 = relay.TupleGetItem(func_4657_call(relay.reshape(var_4949.astype('uint8'), [420,]), relay.reshape(const_4950.astype('uint8'), [1536,]), ), 1)
call_4951 = relay.TupleGetItem(func_4661_call(relay.reshape(var_4949.astype('uint8'), [420,]), relay.reshape(const_4950.astype('uint8'), [1536,]), ), 1)
func_2745_call = mod.get_global_var('func_2745')
func_2748_call = mutated_mod.get_global_var('func_2748')
var_4967 = relay.var("var_4967", dtype = "float32", shape = (810,))#candidate|4967|(810,)|var|float32
call_4966 = relay.TupleGetItem(func_2745_call(relay.reshape(var_4967.astype('float32'), [6, 15, 9])), 1)
call_4968 = relay.TupleGetItem(func_2748_call(relay.reshape(var_4967.astype('float32'), [6, 15, 9])), 1)
output = relay.Tuple([call_4946,call_4948,var_4949,const_4950,call_4966,var_4967,])
output2 = relay.Tuple([call_4947,call_4951,var_4949,const_4950,call_4968,var_4967,])
func_4973 = relay.Function([var_4949,var_4967,], output)
mod['func_4973'] = func_4973
mod = relay.transform.InferType()(mod)
var_4974 = relay.var("var_4974", dtype = "uint8", shape = (420,))#candidate|4974|(420,)|var|uint8
var_4975 = relay.var("var_4975", dtype = "float32", shape = (810,))#candidate|4975|(810,)|var|float32
output = func_4973(var_4974,var_4975,)
func_4976 = relay.Function([var_4974,var_4975,], output)
mutated_mod['func_4976'] = func_4976
mutated_mod = relay.transform.InferType()(mutated_mod)
var_5024 = relay.var("var_5024", dtype = "uint32", shape = (10, 3, 2))#candidate|5024|(10, 3, 2)|var|uint32
var_5025 = relay.var("var_5025", dtype = "uint32", shape = (10, 3, 2))#candidate|5025|(10, 3, 2)|var|uint32
bop_5026 = relay.multiply(var_5024.astype('uint32'), relay.reshape(var_5025.astype('uint32'), relay.shape_of(var_5024))) # shape=(10, 3, 2)
func_3614_call = mod.get_global_var('func_3614')
func_3616_call = mutated_mod.get_global_var('func_3616')
const_5044 = relay.const([6,-5,-9,-9,3,4,-3,8,-2,7,-4,2,10,5,-9,9,10,-2,-10,-7,5,10,-2,7,3,4,8,-3,9,-10,-8,-6,2,1,-9,7,-8,1,5,-5,-4,8,-7,10,-10,-6,9,9,10,-5,8,10,-9,7,-2,2,1,8,2,-4,10,1,2,3,1,10,10,-5,-4,10,-7,2,4,-6,9,9,3,-1,1,8,1,-9,-9,-1,9,9,-6,3,-10,-6,-2,10,-6,-10,-4,9,6,8,6,-8,-3,-10,7,-8,-6,-6,3,6,7,-6,-6,-6,-7,-10,6,-8,7,7,-5,1,-3,-2,2,-6,3,10,9,4,2,6,3,8,-4,-2,-4,-8,1,-3,-7,-4,1,2,1,7,-9,3,7,-10,10,9,6,-1,9,-9,-3,9,-6,7,6,-1,6,-4,7,5,-9,-1,2,-3,-8,-7,5,8,-6,9,6,4,-3,-7,6,10,-4,2,5,-7,6,-3,-10,2,-5,-6,10,2], dtype = "int16")#candidate|5044|(192,)|const|int16
call_5043 = func_3614_call(relay.reshape(const_5044.astype('int16'), [12, 2, 8]))
call_5045 = func_3614_call(relay.reshape(const_5044.astype('int16'), [12, 2, 8]))
output = relay.Tuple([bop_5026,call_5043,const_5044,])
output2 = relay.Tuple([bop_5026,call_5045,const_5044,])
func_5049 = relay.Function([var_5024,var_5025,], output)
mod['func_5049'] = func_5049
mod = relay.transform.InferType()(mod)
mutated_mod['func_5049'] = func_5049
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5049_call = mutated_mod.get_global_var('func_5049')
var_5051 = relay.var("var_5051", dtype = "uint32", shape = (10, 3, 2))#candidate|5051|(10, 3, 2)|var|uint32
var_5052 = relay.var("var_5052", dtype = "uint32", shape = (10, 3, 2))#candidate|5052|(10, 3, 2)|var|uint32
call_5050 = func_5049_call(var_5051,var_5052,)
output = call_5050
func_5053 = relay.Function([var_5051,var_5052,], output)
mutated_mod['func_5053'] = func_5053
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4891_call = mod.get_global_var('func_4891')
func_4893_call = mutated_mod.get_global_var('func_4893')
call_5104 = relay.TupleGetItem(func_4891_call(), 0)
call_5105 = relay.TupleGetItem(func_4893_call(), 0)
output = call_5104
output2 = call_5105
func_5107 = relay.Function([], output)
mod['func_5107'] = func_5107
mod = relay.transform.InferType()(mod)
output = func_5107()
func_5108 = relay.Function([], output)
mutated_mod['func_5108'] = func_5108
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4029_call = mod.get_global_var('func_4029')
func_4031_call = mutated_mod.get_global_var('func_4031')
call_5124 = relay.TupleGetItem(func_4029_call(), 0)
call_5125 = relay.TupleGetItem(func_4031_call(), 0)
output = call_5124
output2 = call_5125
func_5132 = relay.Function([], output)
mod['func_5132'] = func_5132
mod = relay.transform.InferType()(mod)
output = func_5132()
func_5133 = relay.Function([], output)
mutated_mod['func_5133'] = func_5133
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4125_call = mod.get_global_var('func_4125')
func_4127_call = mutated_mod.get_global_var('func_4127')
call_5139 = relay.TupleGetItem(func_4125_call(), 0)
call_5140 = relay.TupleGetItem(func_4127_call(), 0)
var_5164 = relay.var("var_5164", dtype = "bool", shape = (6, 6, 8))#candidate|5164|(6, 6, 8)|var|bool
bop_5165 = relay.floor_mod(call_5139.astype('float64'), relay.reshape(var_5164.astype('float64'), relay.shape_of(call_5139))) # shape=(6, 6, 8)
bop_5168 = relay.floor_mod(call_5140.astype('float64'), relay.reshape(var_5164.astype('float64'), relay.shape_of(call_5140))) # shape=(6, 6, 8)
uop_5174 = relay.rsqrt(var_5164.astype('float32')) # shape=(6, 6, 8)
output = relay.Tuple([bop_5165,uop_5174,])
output2 = relay.Tuple([bop_5168,uop_5174,])
func_5181 = relay.Function([var_5164,], output)
mod['func_5181'] = func_5181
mod = relay.transform.InferType()(mod)
mutated_mod['func_5181'] = func_5181
mutated_mod = relay.transform.InferType()(mutated_mod)
var_5182 = relay.var("var_5182", dtype = "bool", shape = (6, 6, 8))#candidate|5182|(6, 6, 8)|var|bool
func_5181_call = mutated_mod.get_global_var('func_5181')
call_5183 = func_5181_call(var_5182)
output = call_5183
func_5184 = relay.Function([var_5182], output)
mutated_mod['func_5184'] = func_5184
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4125_call = mod.get_global_var('func_4125')
func_4127_call = mutated_mod.get_global_var('func_4127')
call_5191 = relay.TupleGetItem(func_4125_call(), 1)
call_5192 = relay.TupleGetItem(func_4127_call(), 1)
const_5202 = relay.const([[[-9.119946,1.073756,4.517147,-1.323203,-2.112537,-8.123045,4.476948,4.747127],[5.038016,0.094830,-6.230791,0.137337,-0.255278,3.774737,6.991846,5.874224],[7.939121,-7.459068,4.901966,0.987226,2.723527,-6.824563,-9.183430,9.143824],[-4.368760,-0.118707,7.271385,-0.585270,-9.826061,-1.943658,-6.914759,-0.025340],[6.788778,-1.035039,2.659227,-5.096529,-0.608911,1.869850,-3.532883,-9.316306],[-7.389795,1.926757,-1.634191,7.849289,1.463147,6.499323,-9.097823,-3.419704]],[[-9.613015,-8.099556,-6.002273,-7.523731,9.451130,3.740998,-2.160195,-6.249069],[-3.084816,-9.608576,5.350845,-9.529299,-9.175439,-9.591138,9.203821,-8.473268],[-9.265886,4.520920,6.540197,4.409065,-2.777545,5.867116,-2.445877,5.241208],[2.590632,0.724611,4.444592,-8.342491,7.331500,-3.968504,2.635300,-5.296766],[-8.620861,-3.467460,4.374297,-4.994693,-8.411714,-7.120488,-5.788373,2.320674],[-2.673967,-7.676980,-9.544161,1.922096,-9.199696,-6.135237,-3.845553,9.238329]],[[5.733638,-7.919789,8.460722,-9.068877,-6.963315,-9.874451,-1.085299,7.872547],[-3.283674,-2.808002,-3.653825,2.055336,-1.569509,-0.539157,-5.453214,2.056273],[9.488308,6.679217,-8.143806,-0.116206,-5.033743,6.559908,-8.647873,9.354444],[6.990321,-9.771728,9.914508,-5.111586,5.773316,-3.493953,-3.384854,8.142304],[-4.964427,-2.119019,-0.998750,3.924218,8.047025,6.344703,9.102494,-0.945304],[6.580383,-4.891928,-9.910421,-0.615223,7.539921,-5.005743,-3.206103,7.533571]],[[-2.075669,2.316169,-5.541161,6.546743,-9.237215,-9.835532,-6.086601,-9.459744],[4.855218,-1.203825,5.234263,7.801680,-6.752602,-5.728032,-7.104807,4.026730],[6.283383,7.808779,8.454297,3.333676,-3.400838,-7.440292,-9.342721,-7.086257],[4.233079,-3.496205,9.792550,-3.362156,3.856974,-2.477254,-0.857126,-3.714645],[-9.129867,-7.420909,-5.688024,5.941532,8.352210,7.550535,-8.518296,7.563114],[7.907535,-6.952965,3.915807,-8.735931,5.380199,-6.526067,-6.828173,9.270480]],[[9.330493,-2.510057,0.062693,-4.403445,8.267801,1.017200,6.218461,-1.723523],[-1.908006,1.419483,8.925987,-5.638589,-6.966672,-1.842051,0.795971,0.346910],[6.105287,-7.128832,-6.917249,7.926666,1.094312,3.433717,3.879401,2.890605],[7.682747,-0.768411,-3.715512,2.331733,4.731962,2.306655,-0.083349,6.679870],[-0.208991,-2.095845,-5.179891,5.281586,-0.118284,-2.763138,-2.448180,0.919582],[-3.813289,-0.376394,-7.617284,8.965732,9.920307,-7.610848,-7.722967,-1.224087]],[[-1.071029,2.662178,-9.461798,-0.549914,6.769019,1.551866,-2.591122,7.188411],[-8.724653,4.631839,-9.737034,-8.021782,4.462537,9.864005,3.865795,-8.614717],[-3.216224,-9.644886,-7.658864,-5.518719,-6.459542,6.354724,-1.465812,7.125008],[-4.765973,-2.483294,-2.612954,5.149578,5.051994,3.150565,-2.374669,-0.417096],[3.920426,1.907740,2.596370,6.172464,4.309964,-4.342226,-8.082054,-0.861304],[-8.141582,2.025784,-2.092426,-1.870754,9.243530,-5.854140,-2.574771,-5.293068]]], dtype = "float32")#candidate|5202|(6, 6, 8)|const|float32
bop_5203 = relay.logical_xor(call_5191.astype('int64'), relay.reshape(const_5202.astype('int64'), relay.shape_of(call_5191))) # shape=(6, 6, 8)
bop_5206 = relay.logical_xor(call_5192.astype('int64'), relay.reshape(const_5202.astype('int64'), relay.shape_of(call_5192))) # shape=(6, 6, 8)
func_3879_call = mod.get_global_var('func_3879')
func_3882_call = mutated_mod.get_global_var('func_3882')
const_5218 = relay.const([-3,10,-1,-1,-5,5,-7,5,10,8,-8,-5,3,-3,8,-4,-10,-8,5,1,-10,-3,7,-5,-8,1,5,5,2,4,7,10,-6,-10,8,10,-2,-7,3,-3,6,-4,-2,6,10,3,-9,7,-1,-6,-10,1,1,10,9,-4,-9,-5,-1,6,-2,-9,4,-8,-2,-6,-3,4,-4,-8,10,-9,2,2,4,3,7,-6,-7,-7,-9,3,9,-5,-4,7,7,-2,9,-2,-2,-8,-8,-1,9,6,-1,9,6,7,1,5,2,-8,-1,-6,7,3,10,-2,2,-8,-9,-4,-5,7,5,-3,-9,-7,-1,-3,-7,-6,10,8,8,-4,-3,3,1,3,2,-2,6,1,-4,-8,1,-10,3,-3,-3,9,-7,-5,2,4,-3,5,10,9,-2,-7,-10,-6,-6,-4,-7,-7,5,3,-2,-1,5,-6,-4,9,1,-1,-6,6,7,10,-4,10,-1,-7,4,-9,6,4,-2,9,10,6,8,-7,-1,1,-6,-5,8,3,1,-10,7,10,8,3,-9,5,1,2,-9,-9,6,5,7,-3,-9,-7,7,-8,-7,5,1,3,2,-8,-8,7,1,7,1,4,5,6,9,8,-6,1,-3,-1,-10,5,4,-2,-5,2,-1,3,10,-7,-5,6,-10,-7,1,-5,7,-9,-1,5,-1,1,3,-5,5,-3,-1,-10,-6,-3,6,-10,-7,3,1,5,7,2,-9,-5,3,3,-7,-4,-1,-9,-4,-10,-7,8,-5,8,8,-3,8,-9,6,-6,4,-3,6,2,1,10,8,-6,2,6,5,-5,7,-4,6,5,10,7,-2,-6,2,2,6,7,-1,8,-10,9,-6,10,2,2,-5,-10,7,-9,1,-2,-7,-7,-10,4,-5,-9,5,3,-7,3,-5,7,8,4,7,-8,-3,-5,-7,4,2,-5,7,8,6,-5,2,-4,2,-10,1,3,3,8,-7,-6,-10,-7,10,10,-5,-6,1,-9,-7,1,-9,4,2,-5,-8,7,-1,-4,8,-8,3,1,-5,6,-1,2,1,3,-1,2,9,-7,2,3,7,2,-5,-5,-5,-2,10,-6,1,-6,-8,-2,-8,9,-2,1,-4,-1,-7,-9], dtype = "uint8")#candidate|5218|(420,)|const|uint8
const_5219 = relay.const([-9,-7,-4,4,1,-8,1,1,7,6,3,10,1,2,2,-3,-2,3,9,6,9,2,-4,-2,6,-9,-8,-7,-10,10,2,-10,4,-10,9,4,4,10,2,-8,-1,-9,10,9,7,-10,3,-3,1,1,-1,-2,4,2,-7,4,9,-9,1,7,-7,7,6,8,-3,-9,-5,-1,4,-3,-6,-9,2,4,-5,-1,7,-4,-6,-10,1,-7,-10,-5,4,5,7,-4,1,-2,8,-1,-1,-6,9,-10,-5,7,7,-2,-10,-10,-3,3,4,-10,-9,7,-10,-9,-1,9,5,-5,-6,3,6,-2,-2,2,-2,-10,5,-3,4,-4,-2,-3,7,-9,-5,-10,8,9,-8,-7,5,-3,7,-5,-9,-8,-2,-10,-8,-3,-3,-3,6,2,5,6,9,2,5,-8,8,5,-6,-8,-6,-5,-5,-10,2,-7,-1,9,-10,5,8,-2,-9,6,-4,8,-5,-6,3,1,8,-6,-9,-1,6,8,9,-2,-7,-4,3,10,6,8,4,9,-7,2,-8,7,-9,9,5,6,10,-2,3,10,-9,-1,8,-6,-4,3,1,7,-4,-8,8,10,6,-10,7,-10,-10,9,2,-5,4,-2,7,-5,-8,2,10,3,-8,-7,-4,-1,-8,2,-8,10,-4,-8,-2,4,7,5,9,-5,2,2,-9,-10,-5,-8,-1,6,-9,-6,7,-2,-5,-6,-6,1,-3,3,8,-8,8,-8,6,-4,-10,7,-10,4,5,-2,-10,-8,8,6,7,-10,2,3,4,3,10,1,-1,7,-6,-9,-4,3,10,-9,-3,-3,-9,-3,8,6,7,7,-4,-6,-3,-1,3,10,-1,-2,6,-9,6,7,-7,-9,2,-6,10,9,6,2,-3,-5,-9,-9,4,1,10,-3,3,-5,10,1,1,5,1,-9,2,-1,2,-8,-9,-8,9,8,-5,-6,4,7,9,-7,3,-5,1,-6,7,9,4,-7,-9,4,-9,1,8,-9,1,-5,1,9,-7,4,8,-2,-1,5,5,3,8,7,1,-2,1,7,9,-5,1,-4,3,1,-6,-5,4,5,4,-1,-8,-7,10,3,2,-8,7,1,-8,5,7,-3,10,6,-9,-8,9,6,-1,-9,-4,7,-8,1,-9,10,-8,10,2,-3,4,-8,9,2,-2,5,7,7,-10,-1,-9,-6,5,-7,5,-10,1,2,1,-2,-5,8,10,-7,-6,-9,1,-1,3,-5,-10,-7,-10,-3,-5,3,3,-1,-9,-3,-9,9,8,-6,10,1,-6,-2,-9,9,-1,3,-6,-9,3,9,2,9,7,-3,9,-8,-2,5,-7,-7,-9,-4,-5,9,3,-7,5,5,5,1,-1,1,9,-9,10,-5,-6,-5,10,-6,-1,9,1,8,-3,-10,-7,-10,-8,-3,4,-7,-6,1,6,8,10,-3,-1,-9,-9,-9,-1,-3,9,-5,-5,-3,-7,-5,-10,2,2,5,8,10,-2,-6,-9,9,-6,-10,9,1,6,10,-3,-7,10,8,5,-7,-8,-7,-3,-4,-3,1,-6,9,-8,-9,1,-6,8,-1,4,2,-1,9,-5,3,9,-1,8,-8,-7,9,-3,-3,9,-5,-9,6,-6,-4,-10,-1,2,-4,10,-7,7,8,-1,10,-2,4,2,3,-7,-10,-5,3,-3,-10,-9,1,-4,-5,-10,6,1,-7,-2,-10,-7,-5,1,2,7,8,-8,3,8,7,-4,-1,-5,-8,9,5,10,10,7,7,3,-9,4,5,9,-9,-6,-6,1,7,5,5,9,-9,7,-10,9,3,9,-5,-1,9,-7,8,2,7,7,-3,9,-3,-5,-9,2,10,-10,-8,-1,8,-4,7,4,-3,10,-7,5,-7,5,-9,-8,8,5,-2,-5,-6,9,-6,9,-3,-7,-8,-4,-5,1,-8,2,-10,4,-3,2,-9,-3,3,-8,1,-9,-8,-3,4,6,2,9,-6,4,1,1,7,9,-7,6,-10,4,10,10,1,5,5,7,-7,3,7,2,-7,3,7,2,8,5,5,-1,1,-10,-2,-10,-8,-8,6,-10,-10,8,4,-5,8,-10,5,-7,-9,-5,-6,1,5,-10,9,5,-2,-7,3,-9,-9,-3,-10,3,7,-10,10,-6,1,7,5,1,6,-2,-9,-9,-9,5,3,7,-3,-5,-10,-9,9,1,9,-1,-10,-4,-5,-7,7,2,-7,2,-7,4,-9,8,-10,-2,-3,-4,6,-9,-2,3,-10,9,-5,-9,7,-2,8,-4,1,9,-7,-4,-10,-5,-1,2,-5,-9,2,-5,-3,5,8,-2,-5,10,4,6,9,8,10,-3,3,-7,2,-3,-2,-10,8,-7,5,-5,-3,4,-2,4,-4,-9,9,-1,-10,7,3,-2,1,3,9,4,-1,-6,3,-9,4,-4,-5,-5,-7,9,-2,-2,2,-7,-5,5,-9,1,8,1,-9,7,7,-1,4,8,-10,-9,6,-5,6,9,8,9,1,8,-4,3,6,-8,3,8,-6,8,-10,-5,3,-4,-7,7,-3,-7,1,-8,6,-9,2,4,2,-2,-7,9,-4,-10,-5,8,-3,5,-6,1,1,-1,-7,2,1,2,-2,9,-5,6,8,-10,-10,-7,7,8,-9,-2,-8,-6,8,-6,-10,-8,-5,-4,10,-6,-8,7,-2,-3,8,7,-10,4,8,10,-6,-2,-3,-6,2,-3,4,6,-9,-6,6,4,4,-4,9,-2,-2,-7,-5,-8,-4,9,-3,3,6,10,1,-8,1,9,7,8,-10,-6,10,1,-7,2,-5,-3,-2,-5,-4,-10,-6,-8,2,4,-2,6,4,-8,8,-10,-4,-8,-5,-1,-7,-5,-2,7,10,-8,2,6,3,-9,-3,6,2,-4,-8,-6,-8,9,8,7,-7,-2,-9,7,4,3,-4,5,-4,3,-3,-6,-3,-2,10,9,-4,-10,-3,7,2,-5,10,4,-8,-7,-7,-4,9,-1,5,8,-5,4,-7,5,10,8,9,-5,1,10,6,-10,7,-4,5,2,4,8,-7,-1,-3,1,2,-1,-8,3,-4,-1,-6,5,-10,-1,-5,6,-2,-2,-7,-6,-7,-4,-7,-2,-9,2,-7,7,6,-10,7,-2,4,-3,-5,9,-6,-10,9,-6,5,4,-6,9,-10,-2,6,7,8,-10,9,-8,2,1,-1,2,6,-8,-8,4,-6,7,2,2,6,-6,1,3,3,-7,-1,-10,4,1,5,-9,4,4,10,8,8,-2,-8,-4,-8,-7,9,-8,-5,4,6,10,-9,-10,10,4,1,-1,-10,-4,-6,-7,-6,2,4,9,9,-4,6,5,1,6,-7,3,-1,-6,-7,6,10,5,3,-5,-5,-9,4,-7,-5,-9,1,2,8,-3,-2,8,-6,-5,-9,9,3,5,2,-2,-8,-1,-2,2,-2,-7,-1,-6,8,-6,-6,-10,-5,-4,-8,5,-7,4,-3,1,9,-2,3,-1,-1,-7,-4,-6,4,7,8,8,2,7,8,1,-6,-2,-10,1,10,8,6,2,-4,4,10,-7,5,6,-4,3,-9,-10,-5,-8,-8,8,10,6,8,-6,-5,1,-9,-3,5,4,2,10,-2,4,-7,-5,-2,-3,-2,-9,3,7,8,-6,8,6,1,-9,6,-4,8,2,-10,-10,-3,1,2,10,8,4,6,-7,-10,2,2,1,-5,9,7,2,-10,-7,-9,-2,-3,-4,-8,7,-1,-4,-5,2,7,7,-1,-3,10,-3,7,7,-4,8,-5,-10,4,-9,8,-8,3,10,-4,4,2,-4,-5,-10,5,-10,5,-7,5,-7,-7,9,-10,-3,1,8,-5,4,-5,-10,2,-1,2,-5,5,-10,-7,-2,8,-1,1,4,-2,-9,-3,-7,8,4,-5,-5,-9,3,-3,-2,8,-2,3,-8,-6,-1,-3,8,6,9,8,-2,-8,4,-9,6,2,-8,-6,9,1,-5,-10,-6,-4,8,9,-1,-6,-10,-3,-2,-4,9,5,4,-10,10,1,-4,9,6,-3,-6,-4,-4,5,-4,-6,-1,-3,-7,-7,10,-1,2,8,1,-7,-2,5,1,-4,1,8,-1,10,-3,-2,-4,7,6,-5,1,-4], dtype = "uint8")#candidate|5219|(1536,)|const|uint8
call_5217 = relay.TupleGetItem(func_3879_call(relay.reshape(const_5218.astype('uint8'), [420,]), relay.reshape(const_5219.astype('uint8'), [1536,]), ), 2)
call_5220 = relay.TupleGetItem(func_3882_call(relay.reshape(const_5218.astype('uint8'), [420,]), relay.reshape(const_5219.astype('uint8'), [1536,]), ), 2)
func_4029_call = mod.get_global_var('func_4029')
func_4031_call = mutated_mod.get_global_var('func_4031')
call_5221 = relay.TupleGetItem(func_4029_call(), 0)
call_5222 = relay.TupleGetItem(func_4031_call(), 0)
output = relay.Tuple([bop_5203,call_5217,const_5218,const_5219,call_5221,])
output2 = relay.Tuple([bop_5206,call_5220,const_5218,const_5219,call_5222,])
func_5263 = relay.Function([], output)
mod['func_5263'] = func_5263
mod = relay.transform.InferType()(mod)
output = func_5263()
func_5264 = relay.Function([], output)
mutated_mod['func_5264'] = func_5264
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4007_call = mod.get_global_var('func_4007')
func_4009_call = mutated_mod.get_global_var('func_4009')
call_5271 = func_4007_call()
call_5272 = func_4007_call()
func_3956_call = mod.get_global_var('func_3956')
func_3960_call = mutated_mod.get_global_var('func_3960')
var_5277 = relay.var("var_5277", dtype = "float64", shape = (1440,))#candidate|5277|(1440,)|var|float64
call_5276 = relay.TupleGetItem(func_3956_call(relay.reshape(var_5277.astype('float64'), [15, 8, 12]), relay.reshape(var_5277.astype('float64'), [15, 8, 12]), ), 1)
call_5278 = relay.TupleGetItem(func_3960_call(relay.reshape(var_5277.astype('float64'), [15, 8, 12]), relay.reshape(var_5277.astype('float64'), [15, 8, 12]), ), 1)
func_411_call = mod.get_global_var('func_411')
func_414_call = mutated_mod.get_global_var('func_414')
const_5280 = relay.const([4,-2,6,-7,8,-10,-1,-1,-5,10,-10,2,-6,-9,-10,-2,8,3,5,-5,-8,-8,-5,10,6,3,-2,-1,10,5,-8,-4,-2,-4,-7,-10,1,7,-6,7,9,-9,3,-1,2,4,-4,8,-5,3,-9,-10,10,8,6,-10,-3,6,-9,-10,-5,-10,-5,5,3,4,10,4,-3,7,-6,-4,6,-7,-1,7,-3,6,-7,10,8,2,7,-9,-8,2,3,-5,8,-5,2,6,1,5,-3,-10,8,9,7,8,2,1,5,-6,9,1,-3,7,7,4,7,-10,-5,10,5,-9,-5,-4,-6,3,-2,-7,9,1,-7,7,8,-9,-4,-4,7,6,2,2,10,3,10,-1,3,-9,6,4,-1,6,2,-6,3,-10,-4,3,10,10,-8,-10,-2,3,5,3,-2,3,8,2,-3,-8,-5,-3,-9,-6,3,-7,-7,4,-10,9,-5,-4,4,-8,-8,-6,-7,7,-3,10,1,2,10,9,2,-9,-2,3,1,-7,-6,-2,-3,7,-4,-3,-6,2,-8,5,-10,-8,-9,2,-10,9,-1,1,9,-9,6,-5,-4,10,9,3,-10,-6,2,9,7,10,-6,-2,-8,8,-3,-10,-2,-3,6,4,7,-6,-10,-10,2,6,2,5,-1,6,5,-4,-6,2,3,9,8,8,10,-6,10,10,-2,-4,7,-8,5,1,-7,3,-9,-9,-6,4,6,8,-1,-10,7,-5,-3,9,5,9,-5,3,5,-10,10,10,-3,4,9,9,9,10,-9,1,-1,7,7,9,-1,-4,4,-6,4,-4,-5,1,-9,7,-2,-1,3,8,-5,1,-7,-6,10,-9,-4,-7,4,-5,9,-10,-4,-3,-8,-4,-7,10,1,4,-7,-6,-3,-10,-1,1,-8,-2,-3,-7,7,3,-8,7,-8,1,-3,6,9,7,10,-1,-1,1,1,5,1,9,1,-9,6,-4,-6,-7,6,-5,3,7,1,8,-7,-10,-10,-10,-7,-2,8,4,-8,-8,-6,-3,9,5,-9,3,-5,-6,4,-8,6,5,-7,7,1,-2,-8,-10,-4,-8,5,10,-6,4,4,-10,3,-4,6,8,9,-8,4,4,10,-2,5,4,-10,-9,2,5,-7,-8,2,-10,-5,-8,4,-6,3,-1,1,10,-8,4,-10,-7,-7,10,10,-10,8,-3,-9,-9,8,3,-7,-9,-1,7,1,8,9,-7,8,6,-3,-8,-8,7,9,5,10,-3,8,-4,-3,9,10,3,-3,-2,7,-1,9,3,5,-5,4,9,7,-3,6,4,-7,-2,5,-7,5,9,5,3,-2,6,-6,9,8,8,3,-8,1,1,5,10,5,6,-3,-1,-7,2,1,9,-5,-3,-8,-9,4,-5,-7,1,-6,3,7,-6,-10,-6,-4,-2,9,-7,10,-6,-5,5,7,7,6,7,-3,-6,3,-4,6,-6,-5,3,-1,2,-1,-10,-5,-6,-7,4,5,-1,-1,-5,-4,3,-6,-5,-7,-2,5,7,-1,1,-5,5,5,8,2,-5,6,6,-6,8,-9,10,-6,-4,-1,4,9,3,7,2,-5,-8,4,-5,-6,-2,5,10,2,-8,-8,8,-4,-5,-4,-10,1,2,-3,-4,9,-7,9,-8,1,3,-10,1,3,5,-1,6,5,9,-6,1,10,-2,5,-1,9,8,-4,3,6,-5,-5,1,1,-9,3,-2,8,-4,-5,-9,-7,-4,-9,10,-7,2,-6,-3,1,3,2,6,9,-4,3,9,-4,4,-1,7,-7,-1,10,-9,-6,4,8,-9,-2,-3,8,-6,6,4,-4,5,-9,-4,10,1,-8,5,9,-4,9,-5,-1,9,-2,-5,5,-8,6,-7,-7,-4,5,10,-5,2,-4,-3,9,4,-7,6,9,-10,7,-3,6,-9,7,7,-4,6,-8,-4,-2,-6,7,3,-9,-3,2,9,3,1,7,-10,8,10,-4,1,-5,5,3,10,-2,-6,-8,2,-5,1,-2,-5,-8,4,-3,8,-4,-2,4,8,-4,10,-9,5,-9,8,-7,2,7,-7,-5,-10,1,-7,-3,-1,-7,-1,7,-4,4,10,2,7,1,2,3,6,-4,-9,6,-6,-4,3,4,-10,9,10,-3,3,-2,-10,8,9,7,-1,-1,-9,-3,-8,10,-7,-7,10,-5,4,1,4,-9,3,4,-10,10,-10,2,2,-4,-10,-6,-3,-7,-2,-2,-10,-1,9,-1,-10,8,4,6,3,6,4,-6,-5,-5,-3,-3,-10,-10,-10,7,9,-8,5,-2,-5,-4,10,-6,-4,2,-8,2,7,-6,-10,7,-8,6,-10,-4,7,-3,-7,-10,2,8,-6,9,-2,-10,-5,4,1,-9,-10,-5,-8,-2,9,-5,5,-2,-2,4,-3,-6,3,-4,-4,7,-5,-1,-3,7,8,-5,-5,-5,6,-3,-8,-1,-1,-9,-9,10,-1,6,-7,-7,7,9,-7,-9,6,3,-2,-6,1,-9,2,-4,-2,8,-3,6,5,2,-2,6,-4,3,-3,-9,4,5,-9,10,9,-3,-3,4,6,1,-10,7,7,-10,-1,-5,8,3,-8,9,3,10,2,-3,2,8,2,-6,7,9,6,5,3,1,2,-9,-5,8,-4,6,6,8,1,-7,1,-6,-8,-10,8,-4,-5,-5,3,8,4,-3,-7,-8,-4,-7,-9,-1,6,1,5,6,8,10,3,-9,1,-9,3,-9,2,-2,-10,9,-6,-2,6,3,-7,5,3,9,6,-4,-5,5,-10,-8,2,8,10,1,8,-1,-8,-7,10,5,-5,-4,4,8,8,6,-5,-8,-4,2,2,9,2,3,1,8,8,6,3,6,2,-9,-8,-4,7,-6,-1,-1,10,-5,-1,-9,-6,3,-9,-1,2,-7,-9,3,-9,7,4,3,3,5,2,4,-8,-9,7,7,-2,-10,-7,8,-3,-6,-4,-9,6,2,-7,-9,-5,-2,-8,4,3,-2,-8,-6,7,6,-10,10,-8,-7,-1,9,-5,-10,8,-5,-7,-3,7,-6,1,6,8,9,-10,-2,-1,9,-2,8,-5,2,10,-9,-5,1,-10,5,-5,-7,-1,8,-9,-7,-9,2,-10,8,-10,-8,5,-8,8,-4,-10,-10,9,2,-6,-1,-5,-9,-7,-4,-5,1,2,6,7,-3,-10,-9,-2,10,-3,4,-6,-3,-1,2,-9,-7,-6,-3,4,3,10,4,-4,-9,-7,-5,8,-6,4,7,2,-8,-9,-3,-8,9,-8,-9,9,-1,3,-9,-3,9,4,-5,-10,-7,4,3,6,-10,-7,1,9,2,8,-10,-6,-2,-5,-7,10,7,3,7,-4,-6,-6,-8,-8,6,2,9,-6,-6,-8,9,6,3,8,1,-7,-4,5,-9,-2,1,10,10,10,9,1,-7,4,8,-10,-3,-7,1,6,-5,2,2,5,-9,10,-5,6,9,10,1,8,6,-10,5,6,6,-3,9,10,5,6,2,9,-1,1,-10,5,-4,4,2,-7,-7,5,-10,-6,9,-2,5,4,-2,-9,6,10,-10,7,-6,10,-7,-3,-2,-10,2,-1,5,4,-4,2,8,10,-8,-10,3,10,-7,-9,-2,9,2,1,-7,5,-8,1,-10,-4,8,-5,-5,5,7,-8,-2,5,7,1,10,5,-4,-2,7,-5,1,8,-4,-6,6,4,-3,1,-2,5,-2,-8,9,3,7,1,-7,-3,-1,-3,-5,6,-5,-1,1,9,-8,-2,-10,-3,2,-6,-2,-9,10,-1,-3,4,-3,-5,2,-10,2,9,8,10,5,-8,-4,1,2,-8,8,1,10,-10,1,-5,3,-6,6,-10,3,-8,-4,1,-3,-1,5,-4,9,7,5,4,8,8,7,6], dtype = "int32")#candidate|5280|(1456,)|const|int32
call_5279 = relay.TupleGetItem(func_411_call(relay.reshape(const_5280.astype('int32'), [14, 8, 13]), relay.reshape(const_5280.astype('int32'), [14, 8, 13]), ), 0)
call_5281 = relay.TupleGetItem(func_414_call(relay.reshape(const_5280.astype('int32'), [14, 8, 13]), relay.reshape(const_5280.astype('int32'), [14, 8, 13]), ), 0)
func_2985_call = mod.get_global_var('func_2985')
func_2988_call = mutated_mod.get_global_var('func_2988')
var_5289 = relay.var("var_5289", dtype = "int8", shape = (200,))#candidate|5289|(200,)|var|int8
call_5288 = func_2985_call(relay.reshape(var_5289.astype('int8'), [5, 5, 8]))
call_5290 = func_2985_call(relay.reshape(var_5289.astype('int8'), [5, 5, 8]))
output = relay.Tuple([call_5271,call_5276,var_5277,call_5279,const_5280,call_5288,var_5289,])
output2 = relay.Tuple([call_5272,call_5278,var_5277,call_5281,const_5280,call_5290,var_5289,])
func_5296 = relay.Function([var_5277,var_5289,], output)
mod['func_5296'] = func_5296
mod = relay.transform.InferType()(mod)
mutated_mod['func_5296'] = func_5296
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5296_call = mutated_mod.get_global_var('func_5296')
var_5298 = relay.var("var_5298", dtype = "float64", shape = (1440,))#candidate|5298|(1440,)|var|float64
var_5299 = relay.var("var_5299", dtype = "int8", shape = (200,))#candidate|5299|(200,)|var|int8
call_5297 = func_5296_call(var_5298,var_5299,)
output = call_5297
func_5300 = relay.Function([var_5298,var_5299,], output)
mutated_mod['func_5300'] = func_5300
mutated_mod = relay.transform.InferType()(mutated_mod)
var_5307 = relay.var("var_5307", dtype = "float32", shape = (1, 16, 14))#candidate|5307|(1, 16, 14)|var|float32
uop_5308 = relay.atan(var_5307.astype('float32')) # shape=(1, 16, 14)
func_3825_call = mod.get_global_var('func_3825')
func_3826_call = mutated_mod.get_global_var('func_3826')
call_5313 = func_3825_call()
call_5314 = func_3825_call()
func_4125_call = mod.get_global_var('func_4125')
func_4127_call = mutated_mod.get_global_var('func_4127')
call_5316 = relay.TupleGetItem(func_4125_call(), 0)
call_5317 = relay.TupleGetItem(func_4127_call(), 0)
output = relay.Tuple([uop_5308,call_5313,call_5316,])
output2 = relay.Tuple([uop_5308,call_5314,call_5317,])
func_5318 = relay.Function([var_5307,], output)
mod['func_5318'] = func_5318
mod = relay.transform.InferType()(mod)
mutated_mod['func_5318'] = func_5318
mutated_mod = relay.transform.InferType()(mutated_mod)
var_5319 = relay.var("var_5319", dtype = "float32", shape = (1, 16, 14))#candidate|5319|(1, 16, 14)|var|float32
func_5318_call = mutated_mod.get_global_var('func_5318')
call_5320 = func_5318_call(var_5319)
output = call_5320
func_5321 = relay.Function([var_5319], output)
mutated_mod['func_5321'] = func_5321
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4891_call = mod.get_global_var('func_4891')
func_4893_call = mutated_mod.get_global_var('func_4893')
call_5326 = relay.TupleGetItem(func_4891_call(), 0)
call_5327 = relay.TupleGetItem(func_4893_call(), 0)
output = call_5326
output2 = call_5327
func_5340 = relay.Function([], output)
mod['func_5340'] = func_5340
mod = relay.transform.InferType()(mod)
mutated_mod['func_5340'] = func_5340
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5340_call = mutated_mod.get_global_var('func_5340')
call_5341 = func_5340_call()
output = call_5341
func_5342 = relay.Function([], output)
mutated_mod['func_5342'] = func_5342
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4125_call = mod.get_global_var('func_4125')
func_4127_call = mutated_mod.get_global_var('func_4127')
call_5381 = relay.TupleGetItem(func_4125_call(), 1)
call_5382 = relay.TupleGetItem(func_4127_call(), 1)
func_3614_call = mod.get_global_var('func_3614')
func_3616_call = mutated_mod.get_global_var('func_3616')
const_5396 = relay.const([-10,2,6,8,4,-9,8,-10,6,1,3,8,-3,5,7,8,4,9,-7,-7,2,-2,10,7,3,1,-6,-1,6,-7,-9,10,-4,1,-5,4,6,8,-7,2,-6,7,2,9,3,-2,-4,4,-1,-1,7,6,3,-9,-10,10,6,8,-7,-7,-6,3,-1,-7,-3,-1,-6,-4,-10,9,8,7,-9,3,3,-8,-8,8,7,-2,-6,3,-9,-10,1,-10,-9,2,-4,-5,2,-6,4,10,1,-4,-6,-8,-1,3,-10,-1,-9,-8,-8,10,6,-2,1,-2,5,-9,10,-3,10,6,-8,10,2,10,2,-9,5,-1,-3,-1,8,7,-9,-2,8,-10,7,-4,9,6,-6,-10,-8,9,5,-10,-2,-4,1,2,3,6,4,-8,5,-2,1,-4,-4,-10,5,-1,-9,9,-10,7,-5,-5,4,9,9,2,7,7,-1,10,7,4,-6,-5,-4,-4,-7,7,4,3,-9,-1,3,8,7,1,-9,9,7,-6], dtype = "int16")#candidate|5396|(192,)|const|int16
call_5395 = func_3614_call(relay.reshape(const_5396.astype('int16'), [12, 2, 8]))
call_5397 = func_3614_call(relay.reshape(const_5396.astype('int16'), [12, 2, 8]))
func_5318_call = mod.get_global_var('func_5318')
func_5321_call = mutated_mod.get_global_var('func_5321')
const_5408 = relay.const([[6.727231,-1.388690],[-3.352611,2.326526],[-5.368528,6.029050],[-7.778883,-4.725219],[-4.858639,5.350295],[-3.897036,-1.808607],[-6.521780,-9.817141],[1.182163,0.033548],[0.124733,-2.683459],[1.561699,-8.411663],[1.691721,4.696816],[-8.584201,9.787866],[0.854922,9.248963],[0.289178,4.681140],[5.546784,-9.562991],[-7.329388,3.153292],[4.727513,1.260349],[-4.130066,-8.572613],[-6.454436,0.815190],[2.350996,3.353583],[-9.256146,0.940563],[-1.745448,0.446515],[-7.916204,-7.456070],[-7.386116,9.190443],[5.337170,-6.942493],[-6.414801,3.719228],[-5.523537,2.196397],[7.164727,0.295160],[1.962790,1.362251],[3.995971,2.346639],[-5.446454,-1.062035],[-7.444429,6.406164],[9.456638,1.957166],[-9.178043,-0.302932],[4.017956,3.694768],[-0.754340,-6.695238],[2.218095,1.407044],[6.975753,-3.785809],[-1.454827,-8.567905],[-6.732194,-5.814912],[2.825501,-3.762908],[-1.543971,-2.568289],[-3.186451,3.096184],[-0.874992,4.824604],[3.564050,8.448580],[6.303096,6.177139],[-5.063516,-9.974837],[2.377865,-8.380957],[-3.375793,-4.456414],[5.584846,1.415291],[-9.412744,-3.801274],[-7.029565,-2.127199],[-2.009198,-7.190021],[-7.751272,5.693273],[5.999447,0.618467],[-5.202134,3.062376],[-5.379388,-1.613626],[5.011045,-5.738771],[-9.229892,-3.709454],[-8.139925,-1.898105],[-2.706998,-0.955387],[-7.752555,-5.280281],[-0.633687,-7.620272],[8.164955,7.798802],[-3.896923,-1.073439],[8.528572,4.653912],[2.649625,5.516156],[9.878904,3.606000],[-3.419810,-0.176280],[0.768973,0.493649],[-9.320723,2.682467],[6.548614,-9.421975],[-0.573436,5.157413],[4.297693,4.670732],[6.535729,-2.028865],[-4.102786,-5.763916],[3.197248,-4.086304],[4.566304,-3.123250],[0.900379,-5.640570],[5.227794,-5.046726],[0.014631,3.856364],[5.810845,3.594286],[3.579207,9.539924],[3.401785,6.732498],[-8.844260,-6.040994],[5.684401,0.583267],[-1.089096,6.450227],[-2.144574,4.763895],[-2.973131,-5.090714],[7.016646,-5.285058],[7.758529,-9.884680],[2.661544,-4.080606],[6.721585,-4.804212],[5.437493,-1.585629],[3.760285,9.368727],[4.442550,5.223544],[-4.952624,6.372182],[7.195114,-2.142164],[5.402486,-9.042740],[-9.522489,-3.995744],[4.474664,-4.090001],[6.307094,-2.537800],[4.816961,-2.662497],[-6.654487,-4.838242],[-0.986703,-9.838281],[1.610239,-1.110728],[6.077515,1.811962],[5.928260,-5.787750],[-0.669739,-5.675663],[5.094388,-2.386416],[-3.160164,1.818112],[-5.578056,2.187228]], dtype = "float32")#candidate|5408|(112, 2)|const|float32
call_5407 = relay.TupleGetItem(func_5318_call(relay.reshape(const_5408.astype('float32'), [1, 16, 14])), 2)
call_5409 = relay.TupleGetItem(func_5321_call(relay.reshape(const_5408.astype('float32'), [1, 16, 14])), 2)
output = relay.Tuple([call_5381,call_5395,const_5396,call_5407,const_5408,])
output2 = relay.Tuple([call_5382,call_5397,const_5396,call_5409,const_5408,])
func_5414 = relay.Function([], output)
mod['func_5414'] = func_5414
mod = relay.transform.InferType()(mod)
output = func_5414()
func_5415 = relay.Function([], output)
mutated_mod['func_5415'] = func_5415
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5263_call = mod.get_global_var('func_5263')
func_5264_call = mutated_mod.get_global_var('func_5264')
call_5416 = relay.TupleGetItem(func_5263_call(), 4)
call_5417 = relay.TupleGetItem(func_5264_call(), 4)
output = call_5416
output2 = call_5417
func_5464 = relay.Function([], output)
mod['func_5464'] = func_5464
mod = relay.transform.InferType()(mod)
output = func_5464()
func_5465 = relay.Function([], output)
mutated_mod['func_5465'] = func_5465
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4891_call = mod.get_global_var('func_4891')
func_4893_call = mutated_mod.get_global_var('func_4893')
call_5466 = relay.TupleGetItem(func_4891_call(), 0)
call_5467 = relay.TupleGetItem(func_4893_call(), 0)
func_4891_call = mod.get_global_var('func_4891')
func_4893_call = mutated_mod.get_global_var('func_4893')
call_5479 = relay.TupleGetItem(func_4891_call(), 0)
call_5480 = relay.TupleGetItem(func_4893_call(), 0)
output = relay.Tuple([call_5466,call_5479,])
output2 = relay.Tuple([call_5467,call_5480,])
func_5481 = relay.Function([], output)
mod['func_5481'] = func_5481
mod = relay.transform.InferType()(mod)
output = func_5481()
func_5482 = relay.Function([], output)
mutated_mod['func_5482'] = func_5482
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3825_call = mod.get_global_var('func_3825')
func_3826_call = mutated_mod.get_global_var('func_3826')
call_5492 = func_3825_call()
call_5493 = func_3825_call()
output = relay.Tuple([call_5492,])
output2 = relay.Tuple([call_5493,])
func_5495 = relay.Function([], output)
mod['func_5495'] = func_5495
mod = relay.transform.InferType()(mod)
mutated_mod['func_5495'] = func_5495
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5495_call = mutated_mod.get_global_var('func_5495')
call_5496 = func_5495_call()
output = call_5496
func_5497 = relay.Function([], output)
mutated_mod['func_5497'] = func_5497
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4891_call = mod.get_global_var('func_4891')
func_4893_call = mutated_mod.get_global_var('func_4893')
call_5520 = relay.TupleGetItem(func_4891_call(), 0)
call_5521 = relay.TupleGetItem(func_4893_call(), 0)
func_5132_call = mod.get_global_var('func_5132')
func_5133_call = mutated_mod.get_global_var('func_5133')
call_5532 = func_5132_call()
call_5533 = func_5132_call()
func_571_call = mod.get_global_var('func_571')
func_575_call = mutated_mod.get_global_var('func_575')
var_5538 = relay.var("var_5538", dtype = "uint64", shape = (1, 20))#candidate|5538|(1, 20)|var|uint64
call_5537 = relay.TupleGetItem(func_571_call(relay.reshape(var_5538.astype('uint64'), [2, 2, 5]), relay.reshape(var_5538.astype('uint64'), [2, 2, 5]), ), 0)
call_5539 = relay.TupleGetItem(func_575_call(relay.reshape(var_5538.astype('uint64'), [2, 2, 5]), relay.reshape(var_5538.astype('uint64'), [2, 2, 5]), ), 0)
bop_5540 = relay.not_equal(var_5538.astype('bool'), relay.reshape(call_5537.astype('bool'), relay.shape_of(var_5538))) # shape=(1, 20)
bop_5543 = relay.not_equal(var_5538.astype('bool'), relay.reshape(call_5539.astype('bool'), relay.shape_of(var_5538))) # shape=(1, 20)
output = relay.Tuple([call_5520,call_5532,bop_5540,])
output2 = relay.Tuple([call_5521,call_5533,bop_5543,])
func_5545 = relay.Function([var_5538,], output)
mod['func_5545'] = func_5545
mod = relay.transform.InferType()(mod)
var_5546 = relay.var("var_5546", dtype = "uint64", shape = (1, 20))#candidate|5546|(1, 20)|var|uint64
output = func_5545(var_5546)
func_5547 = relay.Function([var_5546], output)
mutated_mod['func_5547'] = func_5547
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4029_call = mod.get_global_var('func_4029')
func_4031_call = mutated_mod.get_global_var('func_4031')
call_5561 = relay.TupleGetItem(func_4029_call(), 0)
call_5562 = relay.TupleGetItem(func_4031_call(), 0)
func_5495_call = mod.get_global_var('func_5495')
func_5497_call = mutated_mod.get_global_var('func_5497')
call_5563 = relay.TupleGetItem(func_5495_call(), 0)
call_5564 = relay.TupleGetItem(func_5497_call(), 0)
output = relay.Tuple([call_5561,call_5563,])
output2 = relay.Tuple([call_5562,call_5564,])
func_5570 = relay.Function([], output)
mod['func_5570'] = func_5570
mod = relay.transform.InferType()(mod)
output = func_5570()
func_5571 = relay.Function([], output)
mutated_mod['func_5571'] = func_5571
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4194_call = mod.get_global_var('func_4194')
func_4196_call = mutated_mod.get_global_var('func_4196')
call_5611 = relay.TupleGetItem(func_4194_call(), 0)
call_5612 = relay.TupleGetItem(func_4196_call(), 0)
func_1836_call = mod.get_global_var('func_1836')
func_1842_call = mutated_mod.get_global_var('func_1842')
var_5621 = relay.var("var_5621", dtype = "float32", shape = (450,))#candidate|5621|(450,)|var|float32
const_5622 = relay.const([10,3,1,-9,2,9,-4,2,-1,-2,-9,8,-4,-4,5,-1,3,1,9,-10,-8,8,3,5,4,5,-4,7,-8,-5,2,-8,-3,-1,-10,1,2,-9,-9,1,4,1,8,9,2,-9,-3,-3,7,-9,7,-7,1,-5,2,8,-9,5,-10,3,10,8,8,-10,-5,2,-10,2,6,-4,1,-4,2,10,-8,3,7,-1,-3,2,1,2,4,3,-9,-8,-8,3,-4,9,9,9,-3,3,-3,-6,8,4,-1,-1,1,-3,2,8,-2,-9,10,7,8,9,-4,6,2,5,6,-4,-5,-7,-6,4,-3,-8,-9,-4,4,10,8,-3,5,-4,4,-9,6,8,10,-9,-3,4,2,2,-3,6,-10,2,7,-8,5,-1,-3,2,-1,4,9,-5,-8,-7,-9,10,3,5,-9,2,10,4,2,-7,-8,6,-1,-8,-10,-7,9,-10,-3,-2,-10,4,-8,3,4,-5,-1,10,2,10,-3,2,-8,4,-9,-2,1,-1,4,-10,-6,-3,-6,10,10,-1,-8,-7,-7,-8,5,7,7,4,-4,2,-9,-8,9,-2,-7,-4,-8,-1,-1,-3,-10,4,-2,1,-5,7,-9,1,-2,-6,8,4,-2,2,6,2,8,3,6,-8,-8,-7,10,4,-10,3,-2,-3,3,-8,3,-5,5,10,4,2,-3,-9,-4,-6,-3,2,7,-10,1,9,7,4,4,3,4,-9,2,-1,-9,3,-6,-7,-10,-3,-4,-4,8,5,4,9,-3,6,-4,-4,-3,-7,1,2,-1,-2,-9,6,-8,9,-8,1,-9,-7,-3,-8,-7,7,-8,-9,6,-2,10,2,8,10,-2,-7,10,-3,-4,-1,-7,1,9,-4,3,-8,5,-1,-3,-9,3,-7,-10,8,-3,-7,9,-6,9,-1,-8,-5,3,6,-8,3,2,6,10,10,-5,4,6,-2,1,-5,-6,-2,6,-5,6,6,7,2,8,-1,-10,8,-8,-8,6,8,6,3,7,-6,5,2,6,9,7,-6,8,10,-6,5,-6,6,-10,-5,6,-3,-5,-4,9,4,5,3,-4,1,5,-4,6,4,8,4,-3,4,2,-9,-1,-8,-3,-4,-8,-8,9,-6,1,-3,-1,2,6,2,-6,-10,1,5,-3,-4,-4,-5,-4,9,3,4,-1,-8,4,4,8,-7,1,5,-3,-6,1,3,2,-1,-6,-9,-3,1,-4,7,8,-2,-6,-5,-8,-9,2,-4,-5,-9,2,-5,4,4,2,3,5,-1,4,1,6,-1,-3,-3,2,7,-2,2,-10,-8,-8,-2,-6,-4,-8,-2,-7,3,10,10,9,-7,-2,1,-5,-4,-9,4,9,6,4,-2,-5,-5,-2,-6,-2,4,-3,-6,3,9,-6,7,-4,-1,-5,1,9,-2,1,-1,-2,-5,-1,1,-10,-6,-7,2,-8,-2,-7,2,1,6,-1,-2,-4,-7,-9,9,-3,8,9,-3,-4,-9,-8,-6,4,-8,8,1,-9,9,9,9,-4,-3,-6,2,-3,-10,4,9,-7,5,9,9,4,-7,-7,-6,3,6,10,-9,10,4,-9,-4,-2,-4,-6,-10,-3,5,5,-1,-3,-10,-6,5,-2,4,10,8,6,4,4,-2,2,7,9,8,8,6,-8,-1,-10,2,2,1,-1,-10,8,2,-9,9,-8,3,-6,-9,2,7,-7,-1,8,-7,-8,5,-8,7,-7,-9,-5,10,-3,-8,-3,8,-3,-6,-2,1,9,7,-3,9,3,5,-2,1,-6,-2,-1,8,9,6,-7,3,-1,5,7,3,2,1,-3,-1,9,-9,-4,-6,-10,-6,9,3,2,-3,-2,10,-4,-7,-1,-7,2,3,-2,-10,-3,-9,6,2,2,6,4,9,8,5,4,2,-10,3,3,-6,10,9,-9,-5,-8,8,-8,10,-3,-5,-8,3,1,-10,9,-1,3,-6,-2,-5,3,-2,10,-7,8,-10,-9,4,10,6,-2,-10,-8,-7,-9,-9,-8,3,3,-1,-4,-7,3,-4,-7,-2,-7,4,-1,6,-5,-2,5,1,7,-1,2,-5,9,-7,2,-3,-4,-6,10,-4,-6,8,-4,-1,10,4,-8,-8,-10,3,-4,3,-5,-2,-9,-8,3,-6,4,9,-9,-7,-4,4,-9,8,-3,-3,7,1,-2,-1,-4,3,6,5,7,-2,6,6,1,9,6,2,7,-1,4,-5,1,-8,2,-2,-5,9,-8,-7,3,-5,-9,-2,2,-7,-7,5,-10,7,-4,2,-1,1,8,-2,-5,9,6,10,7,4,-10,2,-2,6,5,-7,9,-10,5,9,1,-6,1,4,-5,-2,9,-7,-2,-7,8,-7,-2,-5,9,9,-4,-8,10,3,-2,10,-8,2,-9,6,3,-8,10,-3,9,-10,8,-10,-10,4,9,-3,3,6,4,-3,7,5,-5,8,-2,-7,-6,9,-9,8,-8,-4,8,-5,3,-3,-9,8,5,-8,-4,-7,1,6,10,-7,-7,-9,10,-9,-4,-3,-9,7,-5,-2,9,7,5,9,7,4,-8,9,1,-10,10,-7,2,-2,-8,-6,-6,-8,-8,8,4,1,7,1,8,2,-5,-7,-3,-6,5,-10,8,-4,7,-4,-4,-5,5,-8,9,2,-8,-3,-8,-4,2,4,3,8,9,-3,7,5,-5,-6,2,-8,-5,-3,-1,-7,-2,5,-10,7,5,4,1,-1,-4,-3,-4,-9,2,-3,-9,-6,-1,6,3,3,-5,-9,8,-3,8,-1,6,1,-9,3,-5,9,-1,9,10,4,-9,-2,-3,-1,10,3,-1,-8,-9,10,-1,9,-6,9,-10,-3,-6,-10,-9,-1,-3,9,-9,6,-7,3,5,-1,2,-9,5,-5,-7,9,6,-7,6,-4,-10,-4,-5,6,-9,-3,10,-5,-5,3,5,-8,-6,9,8,7,-2,-6,6,-8,-2,7,-4,5,5,1,-2,9,1,-7,3,-8,5,-3,7,-9,2,-1,10,-8,-3,-3,8,-2,1,-8,5,9,-10,-2,-2,8,-9,-4,2,-2,-1,-2,8,-7,-7,-3,-1,-4,-5,-9,-9,4,-5,-5,-10,-4,5,-7,-1,-3,-9,3,-1,2,3,-6,10,10,-8,-4,5,7,-5,-4,9,7,6,-10,4,4,5,2,9,1,-1,4,-5,6,7,8,-9,-6,2,-1,-5,-8,4,6,-5,9,-5,10,5,-10,7,-8,3,-1,-7,-5,-7,5,-4,5,1,3,-10,-6,2,7,5,8,-9,-5,1,-3,5,-2,-10,-8,4,6,6,-6,9,-10,9,10,-6,8,-7,8,10,8,-8,4,-8,3,-4,4,4,-6,3,5,-3,1,-6,9,-10,10,5,-1,4,-9,-4,-10,1,3,1,5,3,-3,4,6,1,3,10,9,7,4,2,-4,-9,-7,7,8,8,10,3,6,-4,2,-3,9,10,5,-7,-7,6,-9,-7,-4,8,7,-9,-7,-3,6,9,-10,-9,3,4,2,-5,4,8,7,1,9,-10,-5,-7,-3,-8,-7,7,-3,-9,2,6,6,-3,1,-10,6,-9,4,-1,2,9,-8,-9,-7,4,4,3,-5,6,10,8,-5,6,5,-6,9,-8,2,-8,8,8,3,6,10,5,8,-8,2,-2,-1,4,4,9,-9,-4,-6,-1,-4,8,-8,5,-6,-9,-5,5,-1,-8,-3,10,-1,-3,7,-9,-2,4,-9,6,-10,-6,-7,-4,2,-3,8,-8,-8,-9,4,5,-4,8,7,-9,-10,-5,5,-5,-1,3,2,2,2,-4,-9,4,7,7,7,-3,8,-4,-5,-10,-9,-8,4,-2,1,-5,-4,-6,-3,5,8,7,-5,-8,1,-9,-1,-3,8,1,3,2,9,10,-10,1,2,3,-8,8,-1,2,-5,-6,2,10,7,5,-1,-7,-10,8,-8,-9,-6,-8,3,8,6,-1,-3,-6,-5,6,7,-7,-4,9,10,10,5,2,9,8,-5,-4,9,9,-2,-10,-8,6,-1,-2,2,-6,10,-9,-9,-4,5,3,9,-10,6,-2,6,-6,4,10,10,5,6,-10,-10,-7,4,8,1,6,7,-2,9], dtype = "uint8")#candidate|5622|(1536,)|const|uint8
var_5623 = relay.var("var_5623", dtype = "int8", shape = (13, 14))#candidate|5623|(13, 14)|var|int8
const_5624 = relay.const([6.488986,3.671891,0.588452,9.525231,-0.906622,7.410943,-0.493467,-9.249547,-2.504902,6.307008,-7.435245,8.500894,3.623431,9.572968,-1.357915,8.307206,8.594029,0.123054,-4.396295,7.192258,7.680831,6.216893,-0.810683,7.455494,2.932843,1.428047,-0.815244,9.743638,-1.328812,-5.339416], dtype = "float64")#candidate|5624|(30,)|const|float64
call_5620 = relay.TupleGetItem(func_1836_call(relay.reshape(var_5621.astype('float32'), [5, 10, 9]), relay.reshape(var_5621.astype('float32'), [5, 10, 9]), relay.reshape(const_5622.astype('uint8'), [1536,]), relay.reshape(var_5623.astype('int8'), [182,]), relay.reshape(const_5624.astype('float64'), [30,]), ), 6)
call_5625 = relay.TupleGetItem(func_1842_call(relay.reshape(var_5621.astype('float32'), [5, 10, 9]), relay.reshape(var_5621.astype('float32'), [5, 10, 9]), relay.reshape(const_5622.astype('uint8'), [1536,]), relay.reshape(var_5623.astype('int8'), [182,]), relay.reshape(const_5624.astype('float64'), [30,]), ), 6)
func_4125_call = mod.get_global_var('func_4125')
func_4127_call = mutated_mod.get_global_var('func_4127')
call_5628 = relay.TupleGetItem(func_4125_call(), 0)
call_5629 = relay.TupleGetItem(func_4127_call(), 0)
output = relay.Tuple([call_5611,call_5620,var_5621,const_5622,var_5623,const_5624,call_5628,])
output2 = relay.Tuple([call_5612,call_5625,var_5621,const_5622,var_5623,const_5624,call_5629,])
func_5658 = relay.Function([var_5621,var_5623,], output)
mod['func_5658'] = func_5658
mod = relay.transform.InferType()(mod)
var_5659 = relay.var("var_5659", dtype = "float32", shape = (450,))#candidate|5659|(450,)|var|float32
var_5660 = relay.var("var_5660", dtype = "int8", shape = (13, 14))#candidate|5660|(13, 14)|var|int8
output = func_5658(var_5659,var_5660,)
func_5661 = relay.Function([var_5659,var_5660,], output)
mutated_mod['func_5661'] = func_5661
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4315_call = mod.get_global_var('func_4315')
func_4316_call = mutated_mod.get_global_var('func_4316')
call_5852 = func_4315_call()
call_5853 = func_4315_call()
func_4891_call = mod.get_global_var('func_4891')
func_4893_call = mutated_mod.get_global_var('func_4893')
call_5864 = relay.TupleGetItem(func_4891_call(), 0)
call_5865 = relay.TupleGetItem(func_4893_call(), 0)
output = relay.Tuple([call_5852,call_5864,])
output2 = relay.Tuple([call_5853,call_5865,])
func_5871 = relay.Function([], output)
mod['func_5871'] = func_5871
mod = relay.transform.InferType()(mod)
output = func_5871()
func_5872 = relay.Function([], output)
mutated_mod['func_5872'] = func_5872
mutated_mod = relay.transform.InferType()(mutated_mod)
const_5873 = relay.const([[[5,-8,7,6,3,6,2,7,4,-6,3,-3,-7,-7],[9,-10,-9,3,-4,-6,6,9,6,9,1,7,3,-6],[4,7,-9,10,-5,-1,-1,-8,-9,-8,-4,-4,-2,7],[-3,-8,-10,-2,1,-6,4,-5,-4,-3,-1,-7,8,8]],[[-4,-7,-9,4,1,-8,-8,9,2,9,7,1,5,-3],[-1,6,5,4,10,5,6,4,-8,7,4,-7,10,-1],[8,-1,-2,-6,-10,-4,10,2,5,-9,-6,2,-4,5],[7,-2,-9,-5,8,9,-2,8,4,-8,-3,-9,-5,1]],[[2,-7,1,3,2,10,-9,-10,3,5,-8,-4,9,-2],[-6,6,-10,-6,-2,-10,9,4,10,-1,4,8,-8,-4],[8,1,-10,2,10,10,7,6,-1,-5,4,4,1,-9],[6,6,-9,8,6,9,9,9,3,-3,-4,7,-4,8]],[[-7,-4,10,7,-1,-7,6,-4,-7,-1,6,5,2,-2],[5,10,6,-4,-8,-6,-7,-7,-10,10,-3,8,-6,-3],[-4,-5,-4,-8,-2,7,-5,-8,-5,-9,-5,-2,3,10],[-2,-8,-6,5,9,-10,-8,-9,-1,7,-2,-3,-5,-7]],[[-5,-8,8,3,-10,-3,2,9,2,4,7,-1,8,-7],[-9,1,-1,-8,8,2,10,8,1,-3,-7,8,6,4],[3,7,8,-5,1,-6,7,-9,-3,8,-4,9,-7,5],[6,9,3,-3,-6,-7,-4,-7,1,5,-3,-8,-7,8]]], dtype = "int8")#candidate|5873|(5, 4, 14)|const|int8
const_5874 = relay.const([[[5,1,8,-7,-5,-1,-2,-7,-7,6,-2,7,5,-3],[-4,-5,6,2,-7,9,5,7,1,2,1,-3,-6,1],[6,6,-2,-1,-6,-2,-4,-7,5,6,9,5,7,5],[10,7,-1,8,-4,4,3,-5,1,6,5,1,10,-6]],[[-5,2,-8,-3,-2,4,1,-7,6,-1,-3,10,-9,-4],[6,-7,10,6,10,8,-10,9,-2,6,-10,4,6,-3],[-6,5,6,5,-3,5,2,-5,-8,6,3,-10,10,6],[10,10,-8,-8,-1,2,5,7,-3,-2,9,2,9,-6]],[[-6,5,-4,9,-4,-6,-1,-8,10,-6,2,-5,-3,4],[9,-2,-2,8,-4,8,6,-2,6,7,-7,-10,-10,-1],[-2,-6,-7,-5,-5,-7,-9,-6,2,-6,-8,-4,-6,6],[-9,-1,-4,-3,7,-1,10,1,4,-6,5,-5,-5,-10]],[[3,-8,-4,7,-10,-10,6,-9,-1,6,10,-2,-6,-10],[5,-3,-5,-5,2,9,-10,-8,2,3,-2,9,-2,8],[9,8,-7,6,-4,1,3,-9,-8,-1,6,4,-2,-1],[5,2,-9,-9,1,-8,-6,-10,-8,-2,-6,7,-7,-2]],[[-3,3,4,1,6,-10,5,2,5,-8,3,-1,1,4],[6,-6,1,-8,-7,-8,9,1,-4,-3,9,3,-1,2],[2,-1,2,-9,1,7,6,-2,-3,-9,8,-7,-3,-10],[7,-10,7,-7,-1,9,-4,9,-2,-5,3,-2,-5,-9]]], dtype = "int8")#candidate|5874|(5, 4, 14)|const|int8
bop_5875 = relay.equal(const_5873.astype('bool'), relay.reshape(const_5874.astype('bool'), relay.shape_of(const_5873))) # shape=(5, 4, 14)
output = bop_5875
output2 = bop_5875
func_5880 = relay.Function([], output)
mod['func_5880'] = func_5880
mod = relay.transform.InferType()(mod)
output = func_5880()
func_5881 = relay.Function([], output)
mutated_mod['func_5881'] = func_5881
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5481_call = mod.get_global_var('func_5481')
func_5482_call = mutated_mod.get_global_var('func_5482')
call_5896 = relay.TupleGetItem(func_5481_call(), 0)
call_5897 = relay.TupleGetItem(func_5482_call(), 0)
output = call_5896
output2 = call_5897
func_5907 = relay.Function([], output)
mod['func_5907'] = func_5907
mod = relay.transform.InferType()(mod)
mutated_mod['func_5907'] = func_5907
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5907_call = mutated_mod.get_global_var('func_5907')
call_5908 = func_5907_call()
output = call_5908
func_5909 = relay.Function([], output)
mutated_mod['func_5909'] = func_5909
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5495_call = mod.get_global_var('func_5495')
func_5497_call = mutated_mod.get_global_var('func_5497')
call_5972 = relay.TupleGetItem(func_5495_call(), 0)
call_5973 = relay.TupleGetItem(func_5497_call(), 0)
output = call_5972
output2 = call_5973
func_5977 = relay.Function([], output)
mod['func_5977'] = func_5977
mod = relay.transform.InferType()(mod)
mutated_mod['func_5977'] = func_5977
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5977_call = mutated_mod.get_global_var('func_5977')
call_5978 = func_5977_call()
output = call_5978
func_5979 = relay.Function([], output)
mutated_mod['func_5979'] = func_5979
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5880_call = mod.get_global_var('func_5880')
func_5881_call = mutated_mod.get_global_var('func_5881')
call_6017 = func_5880_call()
call_6018 = func_5880_call()
output = relay.Tuple([call_6017,])
output2 = relay.Tuple([call_6018,])
func_6022 = relay.Function([], output)
mod['func_6022'] = func_6022
mod = relay.transform.InferType()(mod)
mutated_mod['func_6022'] = func_6022
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6022_call = mutated_mod.get_global_var('func_6022')
call_6023 = func_6022_call()
output = call_6023
func_6024 = relay.Function([], output)
mutated_mod['func_6024'] = func_6024
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5263_call = mod.get_global_var('func_5263')
func_5264_call = mutated_mod.get_global_var('func_5264')
call_6060 = relay.TupleGetItem(func_5263_call(), 2)
call_6061 = relay.TupleGetItem(func_5264_call(), 2)
func_4973_call = mod.get_global_var('func_4973')
func_4976_call = mutated_mod.get_global_var('func_4976')
var_6081 = relay.var("var_6081", dtype = "float32", shape = (810,))#candidate|6081|(810,)|var|float32
call_6080 = relay.TupleGetItem(func_4973_call(relay.reshape(call_6060.astype('uint8'), [420,]), relay.reshape(var_6081.astype('float32'), [810,]), ), 4)
call_6082 = relay.TupleGetItem(func_4976_call(relay.reshape(call_6060.astype('uint8'), [420,]), relay.reshape(var_6081.astype('float32'), [810,]), ), 4)
func_5049_call = mod.get_global_var('func_5049')
func_5053_call = mutated_mod.get_global_var('func_5053')
const_6107 = relay.const([4,10,-2,3,4,-7,4,-1,-3,5,-3,8,3,2,-6,-10,2,-4,5,-6,9,-3,-3,3,9,-3,-6,-4,4,-2,5,-1,-4,-3,4,-7,-1,5,7,9,-5,-10,-3,9,2,-8,-5,-6,-7,7,-6,-4,7,2,7,-9,4,-3,-4,4], dtype = "uint32")#candidate|6107|(60,)|const|uint32
call_6106 = relay.TupleGetItem(func_5049_call(relay.reshape(const_6107.astype('uint32'), [10, 3, 2]), relay.reshape(const_6107.astype('uint32'), [10, 3, 2]), ), 0)
call_6108 = relay.TupleGetItem(func_5053_call(relay.reshape(const_6107.astype('uint32'), [10, 3, 2]), relay.reshape(const_6107.astype('uint32'), [10, 3, 2]), ), 0)
output = relay.Tuple([call_6060,call_6080,var_6081,call_6106,const_6107,])
output2 = relay.Tuple([call_6061,call_6082,var_6081,call_6108,const_6107,])
func_6114 = relay.Function([var_6081,], output)
mod['func_6114'] = func_6114
mod = relay.transform.InferType()(mod)
mutated_mod['func_6114'] = func_6114
mutated_mod = relay.transform.InferType()(mutated_mod)
var_6115 = relay.var("var_6115", dtype = "float32", shape = (810,))#candidate|6115|(810,)|var|float32
func_6114_call = mutated_mod.get_global_var('func_6114')
call_6116 = func_6114_call(var_6115)
output = call_6116
func_6117 = relay.Function([var_6115], output)
mutated_mod['func_6117'] = func_6117
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5880_call = mod.get_global_var('func_5880')
func_5881_call = mutated_mod.get_global_var('func_5881')
call_6139 = func_5880_call()
call_6140 = func_5880_call()
func_4194_call = mod.get_global_var('func_4194')
func_4196_call = mutated_mod.get_global_var('func_4196')
call_6148 = relay.TupleGetItem(func_4194_call(), 2)
call_6149 = relay.TupleGetItem(func_4196_call(), 2)
func_1836_call = mod.get_global_var('func_1836')
func_1842_call = mutated_mod.get_global_var('func_1842')
const_6161 = relay.const([-2.292804,7.692641,-8.051034,-8.537630,-9.628466,9.988212,3.959639,-1.745113,-6.661376,9.404732,-6.187005,-3.057520,-2.029236,-5.847431,-4.374173,-4.572516,4.357251,8.057507,8.400199,-4.909184,2.750262,-0.753961,-5.550974,6.942791,-6.479882,-0.426037,-3.462724,4.784447,-9.375204,-4.772485,5.013178,4.236258,-4.351025,-7.247851,7.748809,1.092364,6.920879,5.924737,-3.046695,-4.072080,-5.257534,-1.963675,5.312302,8.378454,3.818093,-5.667414,-5.743861,1.991445,4.337786,3.176931,-3.280938,7.452343,-6.541531,4.659758,-4.590936,9.887965,7.731409,8.926244,4.316223,-4.457717,-1.565672,8.246734,-5.304910,-1.335805,-0.971636,-5.550511,-5.476124,-9.313043,5.614544,-8.432250,-6.904654,-1.102508,3.431097,-8.105040,-4.860849,2.880180,-0.922470,9.864235,8.564727,-2.752107,2.963285,-2.229441,-2.718423,-2.669506,4.885651,2.866853,-0.715550,1.759807,6.453217,-5.543569,-8.311777,8.154902,-8.416142,1.617230,-2.756283,-2.215804,2.276443,6.548798,4.185342,9.372134,-2.686465,-5.905539,-5.274534,-9.602771,-4.667922,2.163572,-7.350758,9.500796,8.103337,-3.509182,-5.389996,-0.244525,-6.520290,9.520051,0.231601,-9.642715,-3.225823,6.111183,-2.218948,-9.650399,-4.962511,3.684884,-4.629350,-9.917582,3.121919,1.313793,9.863869,0.306885,-4.609554,6.978834,2.486263,9.909799,8.870009,-0.832536,0.342247,-9.899171,-6.805877,-5.093771,-2.220916,2.620029,-6.589237,1.024949,-1.745853,5.577980,6.978738,-6.597877,-3.576636,-0.119077,-4.106362,8.001614,-5.178487,-3.840910,4.409161,9.662512,4.081893,7.956801,-6.339627,4.992814,-2.976041,8.303523,2.578576,-6.284356,9.287262,3.717485,-4.909661,3.342579,-7.033910,2.669702,2.495958,4.564245,3.380658,-6.302033,9.678252,-4.740220,-4.291965,-7.797601,-0.095983,4.134788,4.567090,6.428912,8.154028,-6.993060,-4.634555,3.761792,4.182689,-8.602885,7.913882,-7.754232,-1.878568,-9.444620,-1.723770,6.979308,-6.604016,-0.265362,2.783993,4.108276,7.730098,3.053247,9.049847,4.688082,0.494613,-0.798111,-0.345637,-1.914659,5.775373,3.788186,3.061968,-5.945392,5.288343,2.449927,2.911977,3.205421,6.603836,-6.241040,3.182100,0.268185,-4.684185,6.813704,-7.792827,7.176350,9.465723,8.595059,4.950289,-8.357670,-8.210374,-9.287496,-2.703450,-2.476244,-5.949164,-8.017562,-9.013486,-1.290360,8.948306,3.615662,8.123901,-1.206985,5.131304,7.482092,4.555907,8.388549,-3.015288,2.487471,5.350194,-3.497601,6.246602,0.768778,-3.099301,-8.620897,-2.219686,4.847947,-1.444485,-7.993064,5.805861,0.713026,5.159157,-5.354103,-7.472608,-6.767369,-5.351216,2.296997,4.708138,5.338070,-7.882980,-7.810832,-7.195410,5.550280,2.059200,-2.775281,8.764679,0.576075,2.626910,-9.277333,-1.520164,3.952741,7.477725,-2.224716,-0.537696,-4.051822,7.885831,8.441241,-1.909008,-5.058879,-7.313436,-9.554134,-8.970340,-2.505809,-4.786901,5.034241,4.319315,7.842746,2.043938,7.666361,7.593835,3.155376,-8.021641,-8.353070,8.357925,-6.953922,-0.837965,9.497106,8.700401,-2.860484,9.660746,-4.829373,-2.153139,2.429235,2.636222,6.964389,7.544949,1.815142,0.658869,-2.200171,-0.725686,-8.633140,-4.727960,-6.626344,9.193707,0.450136,-1.163214,5.211023,2.999186,4.747981,-8.171881,1.173243,7.847028,9.297789,3.348693,7.460444,4.478520,-5.508041,5.671090,4.595089,3.081942,4.658722,-7.278703,-7.094723,-4.656219,-5.011050,6.874312,-8.101432,-5.908834,4.814073,0.813684,1.995721,3.481184,-7.938438,-5.982966,2.584909,-9.348710,-1.206340,-6.354305,-5.225576,-1.088680,0.255152,5.929922,-4.794116,6.027770,4.184199,-6.202530,0.228778,-4.167452,-5.735341,2.149152,-0.444649,7.394991,-3.419124,8.404181,-7.005148,9.096572,7.382649,1.714158,-7.643419,-9.885807,4.453008,0.322261,-0.137581,3.136451,-1.307378,-0.947885,-7.874690,9.411306,0.937065,-7.207875,-8.517511,8.860584,-0.776783,6.781850,-8.088084,-4.153673,-7.525807,-2.444965,5.578803,-4.654988,3.108172,-8.896483,-7.480841,-4.056754,-0.206698,2.228509,9.755766,9.338999,6.005770,-6.610390,-3.293372,3.439178,-3.312550,0.704792,0.154712,-3.607245,-2.004022,3.129354,-6.442796,3.396558,-7.617759,-7.451475,6.027298,0.353987,-2.172196,-9.666866,-6.504477,-2.838798,-5.618201,-9.379939,9.016889,-7.493099,1.747777,-0.576340,9.805365,-4.456395,-4.525788,0.353079,-4.152326,-4.036791,5.824238,6.890316,-3.975561,-1.119065,6.133717,5.506354,2.389765,0.424983,8.563223,5.402352,9.471143,-4.105040,-6.518589,4.423652,-6.165324,7.035535,8.947307], dtype = "float32")#candidate|6161|(450,)|const|float32
var_6162 = relay.var("var_6162", dtype = "uint8", shape = (1536,))#candidate|6162|(1536,)|var|uint8
var_6163 = relay.var("var_6163", dtype = "int8", shape = (182,))#candidate|6163|(182,)|var|int8
const_6164 = relay.const([8.863426,4.496834,6.204524,-1.364182,-0.777810,3.146149,7.664318,-4.179647,3.204720,1.596631,9.169332,-6.881877,3.112896,-6.471851,-0.906787,8.811913,-9.302404,-9.547086,-0.942941,2.955196,-4.668210,0.182021,7.396161,-6.378274,4.476341,6.306639,3.563672,-7.448782,-5.025612,7.806183], dtype = "float64")#candidate|6164|(30,)|const|float64
call_6160 = relay.TupleGetItem(func_1836_call(relay.reshape(const_6161.astype('float32'), [5, 10, 9]), relay.reshape(const_6161.astype('float32'), [5, 10, 9]), relay.reshape(var_6162.astype('uint8'), [1536,]), relay.reshape(var_6163.astype('int8'), [182,]), relay.reshape(const_6164.astype('float64'), [30,]), ), 9)
call_6165 = relay.TupleGetItem(func_1842_call(relay.reshape(const_6161.astype('float32'), [5, 10, 9]), relay.reshape(const_6161.astype('float32'), [5, 10, 9]), relay.reshape(var_6162.astype('uint8'), [1536,]), relay.reshape(var_6163.astype('int8'), [182,]), relay.reshape(const_6164.astype('float64'), [30,]), ), 9)
func_3690_call = mod.get_global_var('func_3690')
func_3695_call = mutated_mod.get_global_var('func_3695')
const_6190 = relay.const([-10,-2,6,-5,7,1,-4,-9,10,-3,-5,-4,8,-2,-5,-10,-7,-5,-8,-10,-10,10,-8,3,5,6,10,8,7,10,-8,-10,3,-10,6,8,2,9,9,9,-9,-5,-4,-9,-4,4,-7,8,10,1,-7,1,8,-1,-6,-2,-7,6,-3,-4,-1,-8,-3,-10,-4,10,-1,5,2,6,-8,3,-9,-7,-3,9,9,4,-4,8,5,-3,8,-6,2,10,-4,5,5,6,-5,2,2,8,10,6,-4,2,5,-6,-9,8,1,-7,-9,4,7,8,2,5,-1,-9,-2,-9,-8,5,-1,-3,8,1,-4,-1,-1,-10,4,6,10,2,-6,-8,-6,-4,-10,1,8,7,-5,2,-5,10,10,7,-3,2,10,8,5,-2,10,2,3,9,-6,-5,-5,-4,-5,5,-10,1,-6,-3,-8,5,6,5,9,-9,-7,9,3,7,4,8,-8,3,6,7,3,-4,-3,10,5,6,8,-3,9,-1,-1,-9,7,-5,8,-9,-5,-9,1,10,-1,-7], dtype = "int8")#candidate|6190|(200,)|const|int8
var_6191 = relay.var("var_6191", dtype = "float32", shape = (1, 2156))#candidate|6191|(1, 2156)|var|float32
var_6192 = relay.var("var_6192", dtype = "int32", shape = (1456,))#candidate|6192|(1456,)|var|int32
call_6189 = relay.TupleGetItem(func_3690_call(relay.reshape(const_6190.astype('int8'), [200,]), relay.reshape(var_6191.astype('float32'), [2156,]), relay.reshape(var_6162.astype('uint8'), [1536,]), relay.reshape(var_6192.astype('int32'), [2, 728]), ), 8)
call_6193 = relay.TupleGetItem(func_3695_call(relay.reshape(const_6190.astype('int8'), [200,]), relay.reshape(var_6191.astype('float32'), [2156,]), relay.reshape(var_6162.astype('uint8'), [1536,]), relay.reshape(var_6192.astype('int32'), [2, 728]), ), 8)
func_5107_call = mod.get_global_var('func_5107')
func_5108_call = mutated_mod.get_global_var('func_5108')
call_6194 = func_5107_call()
call_6195 = func_5107_call()
func_5296_call = mod.get_global_var('func_5296')
func_5300_call = mutated_mod.get_global_var('func_5300')
call_6214 = relay.TupleGetItem(func_5296_call(relay.reshape(call_6194.astype('float64'), [1440,]), relay.reshape(const_6190.astype('int8'), [200,]), ), 6)
call_6215 = relay.TupleGetItem(func_5300_call(relay.reshape(call_6194.astype('float64'), [1440,]), relay.reshape(const_6190.astype('int8'), [200,]), ), 6)
uop_6222 = relay.log10(call_6214.astype('float32')) # shape=(200,)
uop_6224 = relay.log10(call_6215.astype('float32')) # shape=(200,)
output = relay.Tuple([call_6139,call_6148,call_6160,const_6161,var_6162,var_6163,const_6164,call_6189,const_6190,var_6191,var_6192,call_6194,uop_6222,])
output2 = relay.Tuple([call_6140,call_6149,call_6165,const_6161,var_6162,var_6163,const_6164,call_6193,const_6190,var_6191,var_6192,call_6195,uop_6224,])
func_6228 = relay.Function([var_6162,var_6163,var_6191,var_6192,], output)
mod['func_6228'] = func_6228
mod = relay.transform.InferType()(mod)
mutated_mod['func_6228'] = func_6228
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6228_call = mutated_mod.get_global_var('func_6228')
var_6230 = relay.var("var_6230", dtype = "uint8", shape = (1536,))#candidate|6230|(1536,)|var|uint8
var_6231 = relay.var("var_6231", dtype = "int8", shape = (182,))#candidate|6231|(182,)|var|int8
var_6232 = relay.var("var_6232", dtype = "float32", shape = (1, 2156))#candidate|6232|(1, 2156)|var|float32
var_6233 = relay.var("var_6233", dtype = "int32", shape = (1456,))#candidate|6233|(1456,)|var|int32
call_6229 = func_6228_call(var_6230,var_6231,var_6232,var_6233,)
output = call_6229
func_6234 = relay.Function([var_6230,var_6231,var_6232,var_6233,], output)
mutated_mod['func_6234'] = func_6234
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5263_call = mod.get_global_var('func_5263')
func_5264_call = mutated_mod.get_global_var('func_5264')
call_6261 = relay.TupleGetItem(func_5263_call(), 0)
call_6262 = relay.TupleGetItem(func_5264_call(), 0)
func_3614_call = mod.get_global_var('func_3614')
func_3616_call = mutated_mod.get_global_var('func_3616')
var_6264 = relay.var("var_6264", dtype = "int16", shape = (2, 96))#candidate|6264|(2, 96)|var|int16
call_6263 = func_3614_call(relay.reshape(var_6264.astype('int16'), [12, 2, 8]))
call_6265 = func_3614_call(relay.reshape(var_6264.astype('int16'), [12, 2, 8]))
output = relay.Tuple([call_6261,call_6263,var_6264,])
output2 = relay.Tuple([call_6262,call_6265,var_6264,])
func_6268 = relay.Function([var_6264,], output)
mod['func_6268'] = func_6268
mod = relay.transform.InferType()(mod)
mutated_mod['func_6268'] = func_6268
mutated_mod = relay.transform.InferType()(mutated_mod)
var_6269 = relay.var("var_6269", dtype = "int16", shape = (2, 96))#candidate|6269|(2, 96)|var|int16
func_6268_call = mutated_mod.get_global_var('func_6268')
call_6270 = func_6268_call(var_6269)
output = call_6270
func_6271 = relay.Function([var_6269], output)
mutated_mod['func_6271'] = func_6271
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5570_call = mod.get_global_var('func_5570')
func_5571_call = mutated_mod.get_global_var('func_5571')
call_6273 = relay.TupleGetItem(func_5570_call(), 0)
call_6274 = relay.TupleGetItem(func_5571_call(), 0)
func_5340_call = mod.get_global_var('func_5340')
func_5342_call = mutated_mod.get_global_var('func_5342')
call_6277 = func_5340_call()
call_6278 = func_5340_call()
bop_6284 = relay.equal(call_6273.astype('bool'), relay.reshape(call_6277.astype('bool'), relay.shape_of(call_6273))) # shape=(15, 8, 12)
bop_6287 = relay.equal(call_6274.astype('bool'), relay.reshape(call_6278.astype('bool'), relay.shape_of(call_6274))) # shape=(15, 8, 12)
output = relay.Tuple([bop_6284,])
output2 = relay.Tuple([bop_6287,])
func_6316 = relay.Function([], output)
mod['func_6316'] = func_6316
mod = relay.transform.InferType()(mod)
output = func_6316()
func_6317 = relay.Function([], output)
mutated_mod['func_6317'] = func_6317
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5871_call = mod.get_global_var('func_5871')
func_5872_call = mutated_mod.get_global_var('func_5872')
call_6327 = relay.TupleGetItem(func_5871_call(), 0)
call_6328 = relay.TupleGetItem(func_5872_call(), 0)
output = relay.Tuple([call_6327,])
output2 = relay.Tuple([call_6328,])
func_6333 = relay.Function([], output)
mod['func_6333'] = func_6333
mod = relay.transform.InferType()(mod)
mutated_mod['func_6333'] = func_6333
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6333_call = mutated_mod.get_global_var('func_6333')
call_6334 = func_6333_call()
output = call_6334
func_6335 = relay.Function([], output)
mutated_mod['func_6335'] = func_6335
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6333_call = mod.get_global_var('func_6333')
func_6335_call = mutated_mod.get_global_var('func_6335')
call_6370 = relay.TupleGetItem(func_6333_call(), 0)
call_6371 = relay.TupleGetItem(func_6335_call(), 0)
func_3690_call = mod.get_global_var('func_3690')
func_3695_call = mutated_mod.get_global_var('func_3695')
const_6377 = relay.const([1,-2,-10,6,-9,-8,10,2,5,6,7,1,-8,3,2,-2,3,-7,-5,1,-1,-3,-4,-3,-2,-6,-8,4,-1,-6,6,7,3,4,-10,-2,-5,-6,-3,-9,9,-4,4,4,5,-10,9,-2,-5,10,3,-8,8,-1,-4,-6,8,1,9,1,7,-7,-1,9,-7,-3,1,-1,5,2,4,2,9,6,-1,2,-10,-2,-9,-7,10,-9,1,-1,-3,8,4,-1,-5,1,-6,4,3,7,7,-8,-5,-7,6,7,-5,-7,6,2,-5,-9,-7,6,-9,1,8,2,-6,-2,-8,-2,-3,-2,6,-2,6,-3,4,-4,-2,-8,4,-6,8,-1,-4,-7,-3,-5,2,4,-9,-4,6,-6,1,-1,-4,5,4,6,10,-6,-4,-6,8,-8,-4,-10,10,-1,9,-6,-10,3,-9,-1,-6,-4,7,1,-7,-10,1,5,5,-4,9,-5,3,10,-1,-10,7,-7,3,10,9,5,2,-3,6,-1,-7,2,8,-1,5,6,-7,-8,3,4,-8,1], dtype = "int8")#candidate|6377|(200,)|const|int8
const_6378 = relay.const([-8.725031,-3.673404,-3.511003,7.602694,6.880298,-4.069190,-8.964143,-6.282676,2.501364,7.959851,0.549172,9.734256,6.408548,8.018068,2.173811,-3.605810,2.960491,-5.003031,4.531470,6.602053,8.544216,0.229218,9.575368,-4.612587,9.263187,-6.551631,-0.190804,-6.547102,-6.064214,-3.344262,4.667126,-8.509062,5.443762,-9.654352,-9.794439,3.820823,5.353314,3.770767,3.468129,1.926481,2.369125,8.830606,-0.207698,8.820811,7.091522,-5.061304,-5.759928,7.246142,7.689216,7.282138,4.493338,4.286045,6.877326,-5.119596,0.705369,-2.565224,9.931069,-9.124931,2.357714,6.726240,2.568839,1.234663,-2.702139,5.973715,-8.977200,4.585373,3.485124,-5.435731,5.065250,0.444448,2.260241,8.381553,2.545589,-2.214788,-4.433559,8.682122,5.582193,4.460850,-9.929497,-0.083992,7.219013,-4.864844,-5.485644,-4.930632,0.416121,-5.331993,4.221040,-3.512535,9.149861,4.962748,-6.548183,2.164158,0.033709,4.704116,4.191249,-4.119590,5.525540,-9.026477,5.961675,8.728230,-0.576724,3.124755,6.619191,3.209089,-3.699591,-8.362615,8.486548,5.767745,8.652410,-5.199865,-2.327168,7.031824,-0.481044,6.515326,-1.242678,-0.748230,7.698077,-6.873260,7.104103,7.247115,-2.333346,-6.012058,-9.331670,-1.122375,-6.084884,-5.578252,1.196661,-1.181616,5.010690,-9.996439,-5.188375,8.454618,-9.071261,2.746413,3.575495,-2.023594,-3.993941,0.661238,-8.238781,-4.760642,1.941677,2.348902,2.008638,-3.182610,4.432470,-6.841636,2.346752,7.505132,-8.211719,-8.412998,-1.014463,3.250280,0.221401,4.094386,9.749956,1.209319,-8.845083,6.350940,-7.071974,5.790761,-6.787536,-7.510945,4.165532,-7.965426,-8.767808,7.680484,3.906816,6.332896,4.758800,-7.586699,2.743486,8.156608,-3.293498,9.238625,-9.740019,-8.276632,-3.532859,3.338457,4.366125,9.723227,-0.478219,-3.044119,-8.528801,-7.734001,-7.416077,-9.041839,-1.544632,9.343049,-5.681662,-4.895725,0.439886,-7.052888,0.501288,3.050967,9.322732,-4.824360,5.582700,6.607394,-2.984819,-4.279031,-8.896846,-8.509169,-8.189095,1.731218,-2.060248,-0.134083,-6.454929,-3.479000,-8.909091,-6.284247,-9.674892,2.882199,6.427032,6.592553,-0.862315,-2.000076,-2.954259,-4.724697,8.202948,-2.677037,6.182888,5.236733,0.354973,5.375602,-7.594426,0.860745,-6.339075,-7.751024,8.908269,4.851009,0.175182,-2.740892,2.263737,1.798329,-1.338406,-9.136102,-9.418164,7.760945,6.687275,9.560474,6.407333,4.248109,3.533170,6.055813,8.819014,-9.991836,6.144528,6.541011,9.303369,3.430251,-5.436394,8.346490,1.282579,-1.101178,5.910923,-9.100308,-3.608673,-2.710725,-4.597104,-0.284124,7.265048,-0.873151,5.342059,5.960058,-2.174861,-0.283664,-6.200469,8.005259,-9.480801,4.093429,7.783155,-8.151482,1.426399,8.368606,5.182715,1.082539,9.496837,2.358176,3.898136,4.242297,3.126668,-8.372991,-5.340954,5.156888,3.251518,-8.189166,1.197041,-7.882544,-5.681063,-7.254356,2.195749,-6.794331,2.831114,9.751888,-8.360692,6.286362,-7.869852,5.079683,4.379043,-6.308478,4.187458,-7.811932,4.128234,9.662240,-3.599613,7.007460,-2.141885,-1.940186,5.764065,-8.092017,4.985655,9.954106,-0.141682,-9.905486,-4.235010,-9.348189,2.142441,-8.082520,-1.303022,-2.667511,0.337066,-4.179511,7.404560,6.244822,3.705588,-1.657608,8.670946,-5.799000,6.555794,-2.875932,0.424443,5.991471,8.234785,-1.686180,-2.673785,-3.169169,-9.980901,4.012476,-8.706615,5.826619,-4.713528,-1.328388,4.662547,6.685069,9.067008,-6.548356,8.815467,3.651915,5.420669,-4.976320,4.338431,8.195290,0.434849,2.909526,-0.795728,4.882203,0.533325,-7.776821,1.758439,0.348621,5.480619,5.859852,2.413588,5.668152,-5.797311,-4.373867,4.083650,-1.550560,-0.072541,-9.705324,-5.731821,-0.806502,1.441734,-1.431011,-4.431539,5.975514,-5.201817,-4.857656,2.791118,-4.766331,7.020669,0.067224,1.953529,-4.899489,-0.139519,-6.524830,-4.353560,-7.238133,8.067775,-9.540037,-0.622547,-4.686259,9.929211,-8.897676,-6.813838,-1.692064,-6.742970,-6.386119,6.671597,2.784703,9.484048,-8.580936,-6.262801,4.736882,-3.040685,-0.304952,5.304808,1.078225,2.221977,-3.053529,-2.771235,-0.666119,-0.582231,-4.201542,2.686008,5.513764,2.600711,-6.748651,-0.281537,-3.115918,-1.808759,0.434678,7.276570,-4.834029,3.970052,-5.845417,5.882548,-1.476808,-7.635055,-2.489608,-6.160154,-2.396010,3.152498,-5.297118,4.396843,-3.395581,1.334580,7.743102,-7.196254,3.644349,-3.074779,-2.159093,-1.508857,-9.532219,2.409497,-2.917522,-2.296487,-0.716206,-3.488782,-2.091524,5.397365,3.504732,-1.892653,5.040183,-2.474723,-4.635492,-4.861453,-8.233248,2.722182,5.580126,5.325125,8.002602,3.001525,-9.531701,-7.369832,5.261104,6.791066,-2.645406,8.178312,4.208091,-5.016552,4.982385,-7.861175,-9.929095,-6.416800,-5.187965,4.463213,0.434524,3.994551,-5.180382,-8.983797,9.366083,-2.261214,-6.391965,7.263905,9.428626,0.604636,8.762437,6.411564,-6.101990,0.349414,9.455596,-7.861105,1.746622,-7.801343,4.993864,8.000592,5.502727,-5.040476,-4.240041,0.368069,8.841783,-3.443238,-2.119390,-5.613251,9.968700,0.922162,9.379799,9.573115,-0.908389,-0.529508,4.756619,-3.958851,-9.711965,-2.773531,5.731935,-4.442210,-2.844600,7.781313,-0.725171,3.292749,9.532474,2.665145,-5.803890,-4.491076,-8.566452,-5.165303,-4.473616,-5.444716,9.393035,9.412350,-0.265137,-4.345731,-9.468299,4.419544,2.896357,-1.394629,-1.122946,4.018718,8.732115,1.698965,8.248479,2.935335,-6.203807,-1.027140,-1.205747,-8.040301,6.721636,2.431430,-8.078892,1.859214,-8.569569,3.566613,9.049534,4.568958,-7.454695,-4.071836,2.491069,8.983962,-6.564752,9.919923,-8.742622,0.817271,-3.351199,6.509175,-0.226193,5.819140,8.682480,6.057864,3.807004,6.595125,6.531282,2.662178,9.032558,-5.505242,-4.048417,-2.974453,-9.473454,2.899534,-3.657464,6.085528,5.091477,6.105322,1.976243,3.660867,-8.584654,-9.923059,-8.031679,-3.973020,1.535328,4.065671,-7.930142,-1.203608,-1.664520,-1.127578,-4.383474,4.307279,-2.363072,-6.437825,1.507032,-4.190446,-2.624492,7.811681,3.874992,-0.316987,-4.597179,-5.813344,3.121862,6.393943,-1.737979,5.866142,-5.901392,-9.487253,8.076948,-8.907003,-7.918117,-2.778160,-6.877799,-5.777599,3.640402,-9.489887,-8.202179,6.067826,4.525317,1.821260,-2.296935,-5.766471,5.145642,3.630865,-8.552977,0.833054,-9.861662,9.923856,6.647455,-6.035081,5.626157,9.322142,-0.237573,8.867365,2.181291,0.546031,6.905131,-6.759336,8.981267,-7.572315,-3.215063,-3.920454,9.007564,6.574812,3.539614,-9.481410,-7.265921,6.972899,-7.330851,-4.882654,2.274360,5.359985,2.939617,-6.351136,4.856879,-5.626112,-5.080396,-2.862092,4.857787,9.962991,-2.398297,4.383541,3.666469,6.057404,6.067764,1.514543,8.900135,-5.467529,0.136892,4.397433,9.061351,-1.384715,6.579543,9.483176,-1.605071,8.392392,-5.276703,5.663105,7.311131,0.157930,-4.870172,-5.899031,7.859761,-6.506075,9.468256,2.076810,-4.808277,-4.854218,9.139743,-7.563914,-3.670312,-5.232394,-4.659133,-6.355499,-1.512652,-6.761886,1.369775,-0.670616,8.031433,2.681568,5.623872,6.858235,-9.746465,9.726506,-0.269172,6.547823,4.174622,2.973263,1.634937,-0.496782,-2.589342,-3.411522,2.924203,-0.203353,7.972901,5.037835,6.141818,-2.483160,-3.330415,6.361954,4.489184,-0.569736,-4.659736,-0.479094,7.635695,6.367291,-9.695054,9.944476,-7.643262,-8.070095,8.345546,-5.252758,6.320394,-7.639498,-2.694704,-7.713011,-0.398590,0.985684,-6.171594,-2.945961,-3.040915,3.941678,9.895181,-4.066254,0.512267,-7.297858,-9.177559,2.480584,7.054265,9.345054,3.623043,-9.099933,-2.618737,-4.855351,4.857271,4.814304,-3.274113,-4.141268,7.201073,6.052309,-9.303655,-6.521635,5.973173,-1.600981,7.655452,-0.510420,7.755063,8.778056,-6.365293,-9.832665,-1.422548,3.139684,7.900895,0.332707,-0.257254,6.732081,-8.037466,5.991724,3.201712,-1.223419,-7.374346,1.976791,0.346929,2.003487,-3.426618,-7.799994,1.782770,3.815080,6.125715,-7.492073,2.696549,-8.144387,7.210551,6.457191,4.090705,7.257135,4.166560,7.543638,9.139442,-3.881520,0.387636,3.602683,7.159149,1.359731,1.241813,-7.005070,9.129114,-8.967533,6.039137,6.476721,9.882771,-5.483208,2.769894,-1.361811,-1.442337,-7.376881,5.521098,7.332974,-4.613758,2.954104,-2.384418,-4.202670,3.407625,-8.836207,1.301314,2.713332,-1.424901,3.093741,-6.204925,0.506502,-5.902605,-3.299699,5.371044,-4.078073,-5.507407,1.299751,-7.440146,-3.364842,-0.239581,-4.876671,-9.426491,-3.006842,0.770162,-1.399944,5.458484,-0.971794,4.115844,6.635314,-1.171499,-1.381629,-7.900795,8.399216,9.251047,-1.334914,-4.391992,4.284674,-7.990016,-9.420648,8.576452,2.124757,-0.097292,3.845631,-1.904951,-4.834985,-2.211026,9.816943,-0.340879,0.002278,-8.214691,5.691356,-3.214489,7.487870,-9.931684,-0.774143,-9.538235,9.683484,-1.663030,-9.771950,0.332324,7.474540,6.832230,-2.632497,-4.556688,-6.732646,6.118997,1.512519,-3.510188,9.978487,-4.016009,3.938646,1.193523,6.009693,1.855206,8.628440,-9.603420,-0.897273,7.215199,2.174874,8.823173,0.500245,2.785431,-0.898656,6.100363,1.903501,-7.410181,3.572826,1.386119,9.926181,-6.045699,5.513294,9.100521,7.258735,9.703571,-0.655749,-3.149649,5.018140,7.385616,9.218167,7.694972,-1.091455,6.883918,-8.116054,8.603061,6.108726,-0.988414,-1.918139,6.791432,-8.100746,4.686948,2.502823,-9.629781,7.470827,-7.201588,7.889778,7.022799,6.721420,2.660199,0.647152,4.589666,-3.717447,-4.629041,-8.356293,-4.842578,-8.916440,7.816491,0.908058,-8.317793,9.433661,-9.959767,5.281604,7.624270,-6.944858,-7.458413,8.045585,0.596544,4.978000,-5.233761,5.827367,-1.766188,-5.582251,5.256172,-4.304142,0.949152,-8.916699,-4.983965,2.615907,6.071824,-2.705450,-5.400076,7.138649,5.824843,0.785088,-6.105356,2.850985,-9.037658,8.284064,6.279279,5.058868,8.219412,-0.547324,1.047240,3.735252,-0.179542,-2.724964,3.924894,-6.312875,-2.617910,9.837073,-7.852060,-8.625313,-5.575020,-1.851664,2.889681,-1.456332,1.889325,-9.989194,1.731212,0.288487,6.472911,-1.583968,-4.498549,4.062515,-1.385094,4.674127,4.393346,5.727391,6.630332,-0.362539,4.936152,-8.411576,0.267950,-8.998562,-8.944849,-0.367278,1.596135,2.533186,8.268123,9.551287,6.039900,-8.932898,-0.914955,-5.817078,8.670716,-4.922959,-9.807002,-4.857045,1.521720,-2.269979,-1.225786,0.166097,0.723332,8.580054,9.354471,-3.849824,-4.017851,-8.629939,-0.329042,-6.527598,2.827773,-1.430752,9.808975,9.194136,0.200021,0.877925,1.542902,-1.316268,9.412357,0.388105,-3.459446,9.677331,7.339286,1.032504,-1.125126,9.653493,-1.843410,4.888948,-9.693000,-6.073842,-2.525608,-7.527356,-8.858297,-1.542697,-9.359586,-8.471531,7.799078,8.743157,7.904948,-1.367611,5.744120,2.525660,-5.012405,0.414641,-6.125494,-6.758708,3.882573,-7.805566,9.457544,4.125763,-6.782752,-6.519081,9.753531,-5.239339,-3.995181,9.698494,7.118687,3.707066,6.317085,-7.853683,-8.216198,3.058018,7.016187,1.470525,-0.879403,6.325474,0.238230,7.136815,0.202118,9.696393,-6.083049,5.999932,-8.948144,9.771040,-1.891235,3.957215,2.653785,-0.200296,-4.078844,8.536119,0.116691,7.192949,8.174591,7.624443,5.702267,-7.824547,8.823434,0.891867,1.069907,-2.293968,-0.091669,-9.310567,-0.266837,0.081652,4.718489,9.723886,6.146727,0.146294,9.828705,1.366138,6.227183,2.869987,-6.981445,-3.886200,2.004996,7.770135,-0.603077,2.183640,-2.690763,3.051381,-6.622973,-8.743218,-1.797701,-9.126475,9.075075,-9.572769,6.941048,3.201791,-7.763159,4.468277,-3.448502,5.670301,7.019960,8.263915,9.381653,0.587540,-8.413408,0.606859,7.703553,-5.970598,-3.600712,4.823905,-9.270759,0.774810,6.111984,9.826118,8.044074,-6.643269,6.516156,-4.953711,0.678301,-2.303393,-5.979388,-3.274926,6.906227,-6.499493,6.509708,-1.056110,-6.631275,-1.355606,-5.612110,-4.702285,-1.335037,-5.192004,-6.734646,7.114257,-3.686403,1.429695,1.236136,-0.333226,6.614935,-3.375964,1.269690,-9.357472,-0.559086,2.649084,-7.256490,-4.047396,-2.504435,4.219648,-3.818207,-0.252134,-0.285528,9.974291,5.015380,6.777193,-3.868521,7.255637,-9.815742,8.151280,-7.375763,6.191083,-7.532990,-4.426053,9.822594,-0.353463,-5.543221,-8.045555,-6.231706,-5.908106,-7.977492,-4.749954,-7.185058,-1.431952,-9.506158,7.902494,-7.485263,1.428493,5.666876,2.015474,4.219569,-1.031574,3.407685,8.536230,-2.029541,3.448046,8.022724,7.477908,-5.254666,-6.478554,7.102621,1.594955,-8.820862,5.077597,-0.666275,-9.623476,-2.678498,7.936291,-1.907547,8.052286,8.535562,9.119164,5.825377,-8.150666,-8.291958,-6.070394,-8.952595,9.543385,-3.597238,-0.790022,8.806487,9.146569,4.508850,4.838759,3.538726,-8.943730,-8.820136,4.018262,-4.797729,4.196805,-4.569159,7.064084,4.016905,0.675076,6.043392,2.045326,3.631816,-7.135360,5.647683,-0.763299,-5.231118,2.762582,-4.085270,-9.714375,-6.593895,8.476220,1.024330,-9.233992,7.328887,3.737166,0.131299,6.396928,0.684995,-2.248715,-8.864983,2.108070,6.049644,3.233077,6.799399,2.359250,4.718732,-5.189229,1.305051,2.653512,-7.859238,0.271937,8.489451,-9.706850,-1.052711,-5.258635,9.081568,6.950729,-9.811118,-6.831716,9.294244,-4.143095,-9.822860,8.194167,5.434583,-9.503531,6.919169,6.482161,9.729739,2.628775,-9.966681,-4.818607,5.591932,1.017366,-3.300496,2.507042,1.070257,-9.104161,-2.246531,0.777840,-6.301580,-7.650838,3.569402,5.700747,7.858358,-8.184731,-0.499483,-4.656771,-0.976413,8.528971,9.723206,-6.456667,-4.719538,7.461932,6.302802,-5.437127,-6.289241,1.699764,7.957459,-5.282573,-7.939990,-5.047842,4.847229,-6.748782,-4.605803,-4.694255,5.855324,-9.044358,2.139614,-8.277476,-1.527898,8.144146,8.602192,-7.374473,9.141176,-5.346828,9.734165,-0.793573,8.734531,1.753442,-7.971167,3.937256,-3.273229,-4.442978,0.058220,-9.476778,3.461567,1.174329,6.016722,3.518030,-7.947921,-9.445980,9.151475,4.708290,6.112322,-4.582428,-3.823511,3.107226,-1.523450,7.307635,7.523883,7.431668,8.230463,3.360120,0.957669,4.955068,-7.758343,2.764063,-6.386220,-8.505822,2.104295,4.936000,7.871546,3.083492,-9.888774,8.057473,-2.076890,7.736918,2.582670,-8.357973,4.081868,6.448228,6.689115,0.638317,2.390649,-7.497373,2.959489,-4.630720,-4.259157,-7.380781,-6.644434,-4.027785,-4.337557,-0.321485,7.521771,-6.722809,-2.228099,-8.495229,1.048000,5.807752,-3.443969,0.094335,-6.592929,-0.360449,8.526547,0.999738,-6.308173,9.176055,3.405252,1.626674,-3.617059,-7.207968,2.668024,3.208916,-8.174999,2.011914,-5.367552,-0.452758,-0.619443,6.909392,7.118432,-0.560237,6.478536,8.295224,9.754381,3.808997,-8.264031,0.033794,-6.323839,-9.838561,0.115323,4.433581,6.406602,-1.015828,-1.147528,6.156862,1.770338,-5.745219,3.847178,4.718935,-4.428985,2.644934,-5.883184,-7.682100,4.117276,-2.493206,-4.782496,-5.664115,9.066406,2.190621,-2.971468,-9.946338,-8.922913,-3.814904,-0.534993,6.518753,-8.411466,9.067753,4.510324,-9.318802,8.686907,9.528038,-5.800654,0.422394,2.811517,-5.250467,8.996149,3.361346,9.953594,-3.854221,8.360821,-0.281374,-1.484206,4.257989,5.550488,-8.316056,-9.548852,-3.571207,8.039448,-4.506083,-7.047058,-4.215276,5.235332,-2.876097,-0.895584,-4.889345,-5.196505,4.899003,3.228162,-3.031147,-9.659452,9.885506,-2.384810,-8.757439,8.388445,-5.059282,8.307478,3.112151,-6.886580,9.570497,-8.648365,3.886167,-5.764319,1.364114,4.026436,-6.711223,-1.825387,-0.398344,7.899643,-7.211765,5.714281,-8.535532,-9.532194,-7.347781,2.883344,7.763989,7.310888,-4.630231,6.182718,0.772624,7.059623,3.646156,0.172305,8.614689,-4.784410,0.098401,-0.798824,-1.082380,-0.803672,-9.608346,-3.635649,3.318155,-2.050624,8.133049,-6.110277,-5.204606,-8.376436,3.597116,0.998439,-4.093998,8.126947,3.090802,0.562038,-0.122628,-7.750238,-0.906265,-5.152599,2.924325,0.410947,-9.000982,0.280347,-8.823664,-0.495470,-1.702407,-8.589255,3.701134,-7.517581,0.303766,-4.975420,1.589324,-7.403157,8.110919,-1.601249,5.281672,5.420617,5.281998,-4.277926,-4.131098,2.977188,-8.531413,8.293652,8.313664,9.368716,-3.649789,-1.921396,-3.673802,0.800551,1.313595,-7.360375,3.838899,9.029553,1.183283,-1.577959,-4.490270,-2.944809,5.130939,2.685446,6.647405,-2.745330,-7.632598,-1.295698,3.136018,6.763034,7.548006,-1.172406,0.625522,7.689187,4.667872,0.386742,1.982267,0.527598,1.759065,-7.494828,8.397537,-6.207989,3.274088,-7.019148,-9.953781,-3.099117,-9.427910,4.815853,-6.761181,-9.495824,-9.913995,3.609466,9.862349,0.949136,2.889716,4.894834,-0.564715,2.110799,-4.582311,-3.345603,8.473051,-8.591414,7.134163,9.343398,-1.418758,-8.622290,5.271252,5.246200,-5.170707,-6.028219,-6.637403,-9.287935,0.963202,-0.584562,2.946063,2.060126,3.078357,-4.121850,8.772372,-3.914307,9.487718,-0.732234,9.741343,5.576230,-0.092318,9.547853,-2.526443,2.866819,2.041348,9.008060,0.383055,3.710467,3.588022,4.634456,-6.360519,-3.396664,-5.267982,-8.249384,-8.043239,4.159843,2.035296,5.754309,-8.627072,-9.955681,6.825182,0.788150,-3.809729,1.578397,-7.346061,-3.442437,6.671497,7.782767,2.990150,0.124237,0.583898,8.751414,5.803826,-4.478857,7.961245,-8.810417,5.225855,2.782863,-0.048791,2.106615,-0.059316,6.476865,-4.393976,9.158386,7.533845,-2.778113,-3.024020,4.617419,-7.968956,3.700198,-2.068809,-2.365980,6.183282,1.927261,9.575448,9.825070,-9.049863,2.843217,6.487838,0.363281,1.189628,6.543817,4.586267,6.662783,8.200553,9.671777,-5.642531,0.855562,-8.052052,-4.895843,7.150829,7.473749,-7.739881,-0.310513,3.095923,-1.271724,5.432966,-6.704454,1.923396,8.691067,4.251319,-3.662928,-9.529000,6.058780,1.062745,-3.947297,0.407899,-8.747496,-8.929717,9.710375,-7.969236,-2.341702,-8.686417,-4.882531,3.881380,-8.843913,8.842727,-5.295183,-1.668442,-1.187972,2.731609,-1.446167,-0.888253,3.458088,6.949835,-9.883949,-2.984449,-5.590817,-9.124748,-5.200073,-4.032510,-1.584556,-8.896102,8.738114,-1.763756,-8.563601,0.299774,5.890904,0.966753,-6.988187,5.436826,6.143165,-7.174467,-3.229352,-4.160267,-4.257307,9.646737,-9.846609,9.002783,-4.682030,1.033176,-2.093516,7.542003,-2.835722,-2.100086,-4.224673,-3.791761,2.876222,5.079275,5.277718,9.234677,-9.701131,-9.688501,-4.106342,-4.018888,5.578703,1.955892,-5.793432,7.105813,7.986453,-7.015628,-7.269087,5.822122,2.936005,0.804543,9.621945,-8.895359,-7.099918,-7.269614,-3.037384,0.008088,2.584474,1.514329,-9.117427,-6.175594,-0.043518,2.950312,2.295034,3.621852,0.968507,8.991190,8.968137,-8.657130,-4.566233,-8.510203,4.228787,5.676990,-5.509111,0.560186,5.994289,-5.742618,-5.065155,-0.858326,2.205671,-8.597829,7.402168,6.628460,1.623808,-6.972340,-1.787516,-9.024788,-6.156837,-7.991972,3.411330,7.406708,-9.986070,-6.654421,5.628853,-0.770908,-6.174782,3.715088,1.948043,-3.451087,-6.329426,-7.361708,8.747904,8.173397,-7.701004,-0.647103,5.655979,6.380459,-6.074805,-1.841780,-2.026500,-8.960675,3.470055,-3.811336,-4.248410,1.593374,6.350915,4.613854,-9.173504,5.034103,1.226684,-2.134702,3.222702,-7.279672,-0.081685,-4.730037,0.245706,9.670853,-8.664883,5.518108,3.311924,-7.566965,1.343765,9.471616,-2.827494,-6.530610,3.978681,-7.339309,-8.630586,-6.658481,8.698158,-9.596023,0.035360,2.006094,8.221135,-6.672222,1.264058,-9.459546,-3.278157,-2.724546,-9.105700,-7.670343,-1.700373,-8.667541,5.619178,5.163068,9.722601,-7.965624,1.354959,8.420453,-3.554641,3.328846,-7.319581,-1.185590,-6.395714,2.976231,-5.701663,-9.174708,-5.250640,3.375958,5.792834,-0.210609,-8.718857,2.755012,-3.167803,3.769179,-5.407388,-4.012512,-7.764037,9.339600,8.315178,6.262281,9.643184,-4.945926,-0.160986,4.714928,-6.424927,0.486148,-7.833802,1.226753,0.085076,-5.826672,3.796526,-6.085161,6.905548,-2.198449,-6.389215,-0.760891,3.364832,4.136972,3.227939,4.247851,-7.703962,-7.719314,6.530927,5.236855,-3.391424,-0.554022,-8.737235,5.854202,2.426735,-2.993295,5.980499,8.917204,-9.637714,0.177858,1.019294,2.201995,0.910463,4.543960,2.272172,4.570063,-5.475833,-3.856337,-7.497130,-5.501368,9.583785,1.299889,-5.348350,-4.413014,2.725120,-2.861885,-8.359688,-7.092586,7.502031,4.232307,-4.361767,4.321601,-2.171472,4.430933,7.345091,-2.925296,-8.092871,-0.323381,-1.638939,1.187509,-2.862056,2.939446,-4.960026,-0.115743,7.820012,-1.272553,-7.087896,-3.188853,5.057674,4.843078,1.952593,-9.198574,4.102409,-0.487964,0.819882,4.955198,5.549392,-4.309406,-4.962413,-2.286051,-5.915450,7.408158,-5.211621,-0.114255,8.025356,-6.708418,5.255846,-2.670607,7.295121,2.112922,0.263923,-1.234815,5.044243,-7.947232,0.496747,2.225581,5.915186,-7.466042,-7.244082,-0.536574,-0.342246,-3.448781,4.777029,-8.899390,-3.063362,8.833217,-6.984863,-5.400269,-0.132175,1.683161,4.613899,-4.585766,9.836094,-3.626364,7.948348,2.754718,-7.233125,2.934507,7.379313,-2.721126,8.875309,7.386627,-7.764790,6.847414,-8.456991,-9.503608,2.528294,-3.393849,-0.887054,-5.064037,0.416134,7.320285,-4.251694,3.995624,9.694723,1.691868,1.385720,-8.844239,-1.817013,7.049870,9.852411,0.539030,-4.006284,2.957021,-9.897274,-0.886734,-8.398760,7.950303,-1.245368,-3.123725,0.889826,5.323374,-0.018280,-9.440931,8.325751,5.434853,0.947759,-9.780319,-6.053540,-7.729901,9.068829,0.104840,8.821734,-3.600087,7.710323,3.965727,-8.439129,-2.756061,-2.410364,-9.653565,-3.427266,-0.062869,-7.337734,5.342698,6.960544,3.585394,-7.257469,-4.040169,-9.655229,7.639931,9.122982,-6.022975,3.457476], dtype = "float32")#candidate|6378|(2156,)|const|float32
var_6379 = relay.var("var_6379", dtype = "uint8", shape = (1536,))#candidate|6379|(1536,)|var|uint8
var_6380 = relay.var("var_6380", dtype = "int32", shape = (1456,))#candidate|6380|(1456,)|var|int32
call_6376 = relay.TupleGetItem(func_3690_call(relay.reshape(const_6377.astype('int8'), [200,]), relay.reshape(const_6378.astype('float32'), [2156,]), relay.reshape(var_6379.astype('uint8'), [1536,]), relay.reshape(var_6380.astype('int32'), [2, 728]), ), 7)
call_6381 = relay.TupleGetItem(func_3695_call(relay.reshape(const_6377.astype('int8'), [200,]), relay.reshape(const_6378.astype('float32'), [2156,]), relay.reshape(var_6379.astype('uint8'), [1536,]), relay.reshape(var_6380.astype('int32'), [2, 728]), ), 7)
output = relay.Tuple([call_6370,call_6376,const_6377,const_6378,var_6379,var_6380,])
output2 = relay.Tuple([call_6371,call_6381,const_6377,const_6378,var_6379,var_6380,])
func_6390 = relay.Function([var_6379,var_6380,], output)
mod['func_6390'] = func_6390
mod = relay.transform.InferType()(mod)
mutated_mod['func_6390'] = func_6390
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6390_call = mutated_mod.get_global_var('func_6390')
var_6392 = relay.var("var_6392", dtype = "uint8", shape = (1536,))#candidate|6392|(1536,)|var|uint8
var_6393 = relay.var("var_6393", dtype = "int32", shape = (1456,))#candidate|6393|(1456,)|var|int32
call_6391 = func_6390_call(var_6392,var_6393,)
output = call_6391
func_6394 = relay.Function([var_6392,var_6393,], output)
mutated_mod['func_6394'] = func_6394
mutated_mod = relay.transform.InferType()(mutated_mod)
const_6402 = relay.const([[[-5.044033,8.108261,-1.218511,-6.287182,2.948379,-7.763835,-0.081324,-1.907589,4.330978,2.213581,0.655251,-1.044778,6.351752,-1.223556,1.183663,-9.127734],[9.194697,2.200522,3.594539,6.201278,-9.784805,-1.758184,7.274949,5.928998,-9.040597,-1.390273,-2.465348,8.778413,-8.164266,7.980153,9.688989,3.645346],[0.781993,6.657833,0.805019,-8.289652,-9.114538,-3.814679,6.469863,-1.612146,-5.068701,-6.643131,-8.341847,-4.254579,4.153369,-5.269824,-5.302600,2.433140],[7.000781,-8.965965,1.317497,-1.044777,7.525753,-1.591397,-8.994142,-8.604099,0.760679,-1.936062,-4.350482,-1.178293,-5.617303,-7.402486,0.326191,7.932149],[-8.679195,1.817288,-6.207323,4.383169,-6.508675,-6.471924,9.560584,8.366494,9.080691,-7.118395,4.493276,1.005504,0.087558,-4.050616,7.182582,3.940128],[0.144452,-2.872070,-8.930467,0.479128,7.991349,-8.875982,-7.526161,5.173350,8.951590,2.602575,-8.830407,-9.999022,-0.016736,-2.575604,-5.632823,-0.024678],[-4.985483,0.803512,-0.797074,3.249010,9.547468,-3.192458,-5.572304,4.450197,7.063893,-9.104613,-7.226065,-9.592018,4.478247,-6.746683,-7.720451,0.573320]],[[8.831366,-4.134135,5.061649,4.890452,0.719480,-5.935534,4.829244,2.133268,-3.413731,1.998744,-7.175620,0.437787,-7.503233,-7.307426,-1.014234,-7.622903],[-4.986503,-5.789457,-0.625510,-6.640274,2.460325,0.048661,0.104307,-3.912784,-5.014632,-1.216661,4.020888,-1.264842,3.198260,-1.350540,-7.676563,-0.048015],[8.028338,-8.796150,-3.036192,0.666488,5.170549,6.079299,5.617870,-3.898213,5.044415,8.415183,4.439203,-4.921856,-6.593806,-7.927166,9.288517,5.778219],[3.447801,9.510541,8.327601,-2.789648,4.432461,7.629321,8.097888,5.844957,-8.256287,0.245855,-9.797211,-7.221435,-6.895739,-6.096856,3.211873,1.657103],[7.721167,3.258461,4.594137,-1.109517,4.630861,-2.553124,3.727816,0.490292,-4.997653,7.049895,-3.350903,0.835455,2.729793,8.135086,5.833490,6.789139],[9.562897,9.113946,-0.479889,3.045906,1.174300,-3.132154,0.154612,-9.876370,-3.712329,7.938113,-3.402808,-3.378521,-5.807455,-9.310530,-9.348422,-3.840074],[-5.418702,-9.602046,2.084424,-2.363481,0.632919,-8.448287,-3.453438,-3.823849,-1.660617,-6.438771,-5.002860,-5.912207,-1.760383,5.696001,0.754628,-3.267253]],[[6.768071,-7.180584,-2.012161,-0.701356,-5.570824,5.378395,6.502455,8.529797,8.641910,-3.197466,-3.647799,-0.661385,-5.076197,6.704065,9.415607,5.512708],[6.621087,-8.383885,3.083830,9.142919,5.092717,-4.176591,9.721269,-0.999306,7.886043,-6.973655,-8.136910,-2.506541,-2.013726,-5.726863,5.984861,0.592595],[2.473135,0.752310,-9.412493,-5.763479,2.579040,-4.153099,7.090541,3.896548,-7.764783,-5.480729,-1.528362,7.300862,5.138026,-5.203859,2.137745,4.132721],[3.249844,3.635983,7.008959,4.113874,5.515216,4.473436,5.421613,2.503389,6.608226,-0.846257,8.522853,-0.679755,7.737846,8.318487,-5.747789,7.933803],[2.197082,6.801263,6.955555,6.299795,6.377489,3.068402,6.599759,-8.802068,-3.219296,-6.545415,-7.262383,-7.984669,-6.979401,-3.776728,-6.530089,-4.483704],[0.227035,1.606769,9.563353,6.150308,1.231439,1.757876,1.720100,9.773866,-7.284899,4.827495,5.703026,-4.184069,-0.937820,-7.757593,-8.941505,-3.863686],[7.772236,-5.706828,6.261553,4.198082,-0.225417,1.311088,-2.653399,-9.874081,8.227001,8.672747,1.272275,-7.504592,-1.386478,3.917854,5.219010,-1.298210]],[[6.314040,1.718647,-5.416683,6.489929,1.700271,4.932939,-7.873278,-4.911870,7.241230,-4.266205,8.629208,-9.557182,9.695914,6.606014,-9.142624,5.837915],[-3.857731,-0.121465,9.858602,-5.104083,-1.908171,-1.602756,3.651055,-9.947212,-0.026489,4.645336,7.743056,-7.225546,9.591257,-5.619077,6.277705,4.318777],[-4.335054,2.773668,-4.428841,6.699039,7.167580,8.102139,-0.442261,9.868565,-3.283372,2.517578,2.574711,-2.938559,8.865630,-9.203985,2.871117,-0.879569],[4.472058,4.902500,7.307572,-8.762896,8.259051,8.908348,-6.231198,-9.192990,-0.450527,-3.954312,0.915680,-9.127741,2.263278,-0.481220,9.968713,5.472390],[-5.812423,-4.263766,0.728901,-1.536504,-2.587492,-0.670503,-0.418380,0.526906,-1.269480,-9.281788,-4.366165,-5.255477,5.015468,-1.290644,-1.340020,8.683755],[8.218418,-1.128589,5.382469,1.106115,1.541149,-7.855798,-3.229590,-3.921706,0.303420,9.323659,8.258066,-1.322404,-3.923344,7.701608,-5.536810,8.787636],[-4.760175,-0.893998,-9.022636,5.473871,0.871006,9.876617,7.290605,9.628802,8.579069,7.999022,-6.545246,1.240057,-0.863590,5.183158,-9.660621,-7.601429]],[[3.350319,-5.987910,-5.104888,2.423577,8.938780,-7.653915,-8.618061,5.265017,-9.850055,-0.632770,-9.286644,4.236568,3.028727,6.653492,7.878765,-4.957619],[-1.262743,-8.705685,8.816527,5.163260,-3.904973,8.003350,0.159089,-6.122623,5.080023,-1.889479,2.057734,3.312580,7.362430,-6.269122,-7.574550,6.407770],[6.463376,-4.759201,3.875920,2.583037,5.186645,-5.723601,3.167256,-2.589366,7.520711,3.491595,-8.752750,4.774681,5.105262,-1.101982,8.971788,3.727030],[9.975284,8.892794,6.809252,-5.493906,6.631626,6.443405,-6.162380,-3.170538,-2.579025,-4.129276,-3.295497,-2.765094,0.919379,2.826699,-7.662106,8.613020],[-6.762626,-1.869006,6.377105,-3.943844,4.666001,4.094170,3.116791,-9.435888,5.502322,-6.645694,-3.068120,-1.381921,7.025414,-7.371726,-7.220880,8.496119],[-3.939497,-4.962237,2.461515,5.005630,-4.428325,-6.987110,-5.782970,3.949279,1.935067,6.495500,9.199302,5.417244,9.407422,-6.637512,4.871341,2.675798],[-2.022161,2.246679,-7.069389,-5.191079,4.256094,9.611523,1.095277,-5.853328,-8.871323,4.729545,0.570568,3.444385,-2.679977,-8.343227,1.916835,-7.612943]],[[0.044127,0.155647,-0.194103,-2.598715,-1.991835,7.549124,-2.204830,-7.184944,3.592772,-7.515356,-0.490155,3.944104,-6.876267,-0.426072,4.272508,2.404480],[-0.972304,8.604891,-3.918676,2.093262,3.913176,3.163028,-0.253120,-1.964543,9.132086,-9.343441,-8.785291,-6.834181,6.089411,7.018117,0.773065,1.854793],[5.244836,-2.654819,-1.310826,9.941356,-4.085647,9.087176,-6.179866,-9.044959,9.899179,-8.065971,8.249623,-5.445327,9.271857,5.106125,-0.498428,4.260136],[9.614060,8.465795,4.432042,1.080287,9.383722,-1.566527,3.072767,1.848104,4.533643,-4.105012,3.586063,4.039748,-6.387374,7.336594,7.348732,3.670821],[8.825323,-5.847909,4.719149,-5.220710,-6.528469,-4.129864,-4.164634,-5.956799,0.119523,-0.355845,1.887417,-3.875839,-7.289764,-9.218200,-0.470919,6.908281],[7.036717,-4.648681,6.447517,1.048726,2.894512,1.991225,-1.332849,3.809677,7.835290,-0.395055,3.826742,-1.828868,-8.039156,3.650583,-1.495121,-8.557667],[-8.050704,-2.969015,-6.892349,1.599511,-4.944081,5.939055,7.128322,-5.859849,-3.313273,3.411320,5.626856,7.254078,7.456142,-5.544733,3.058880,2.932460]]], dtype = "float64")#candidate|6402|(6, 7, 16)|const|float64
uop_6403 = relay.sigmoid(const_6402.astype('float64')) # shape=(6, 7, 16)
output = uop_6403
output2 = uop_6403
func_6433 = relay.Function([], output)
mod['func_6433'] = func_6433
mod = relay.transform.InferType()(mod)
output = func_6433()
func_6434 = relay.Function([], output)
mutated_mod['func_6434'] = func_6434
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5907_call = mod.get_global_var('func_5907')
func_5909_call = mutated_mod.get_global_var('func_5909')
call_6442 = func_5907_call()
call_6443 = func_5907_call()
const_6463 = relay.const([[[-8.585648,7.195063,-0.820598,9.168218,3.742399,-2.011172,5.894707,2.300722,-3.594527,-2.329483,-9.317231,-9.035164],[-1.419152,-6.071423,-0.212270,8.302811,4.234027,-1.237545,-8.595381,-8.552988,8.130356,-4.884514,-4.829580,3.280340],[2.553069,6.612239,-0.208513,7.666193,-9.159897,-6.675865,7.024712,5.732640,-8.291558,-6.418190,3.915473,-9.755266],[0.860612,1.553789,-0.175540,-3.962406,-1.981944,-9.395668,-7.882266,-0.653750,0.307929,7.314510,-1.638928,1.430470],[-8.859921,-6.544732,6.252685,-6.006991,3.294309,-7.258681,-1.105922,0.328287,5.180988,-3.263221,8.006138,-9.370532],[2.103052,3.514190,-7.133903,-6.985550,-3.970378,-6.855838,5.122409,-8.118281,5.010482,-1.997271,3.065757,-3.638390],[1.866622,-4.498228,9.063487,-3.936958,-9.503787,6.769389,-4.980150,8.145657,-7.652449,-9.339426,3.619326,-6.602124],[-8.998796,-8.587964,-6.819746,-6.818975,4.404232,-5.850275,6.289633,1.605754,-4.745778,-5.241192,-5.277504,8.800706]],[[9.979562,-0.198243,-5.347743,0.312731,-5.779784,-7.176099,9.589153,-2.899853,-5.099772,2.566446,0.688757,3.666600],[9.111034,3.870617,-4.075918,-9.696387,-7.811459,-7.311912,7.701510,0.934255,5.269686,-6.256292,-7.514984,-6.967799],[8.999680,-4.165575,-2.989851,-7.885527,7.988187,-2.518436,-9.554749,-1.988397,2.543830,4.164867,-6.553858,-4.190515],[5.038917,-5.782076,-6.911165,-3.064738,3.880579,-3.153022,-7.155420,8.910785,-5.433154,3.593270,0.164525,-2.905746],[-6.569025,5.907141,-7.370036,3.389559,9.201147,-1.097744,-7.568534,8.752728,2.247276,9.290823,0.344060,-3.706424],[-6.504165,-3.992836,1.171507,1.676174,3.859831,-3.996801,-6.012873,1.273290,-8.274924,2.278587,-7.136353,-1.076849],[2.785085,1.565315,-7.043270,-9.510526,-8.902066,-6.671739,1.192739,0.726868,2.881425,7.889250,4.533629,7.619373],[-7.211683,-0.568182,9.013142,-8.935935,9.084021,9.586373,9.321158,-5.742842,4.999625,1.044531,-9.237363,7.662554]],[[2.018192,-8.066640,3.442395,-2.581568,-6.347361,-7.119388,2.222207,-1.808997,-2.315583,-2.078162,-2.259790,0.581137],[-6.852414,-1.717605,-4.155734,-6.424461,-7.164026,-5.093517,-1.059001,1.565372,-8.554418,-9.238689,9.633681,-4.245978],[7.532610,5.547650,2.294415,7.753873,-8.101655,2.851721,6.827030,-6.472486,-4.990821,6.957686,8.710805,7.984110],[-4.621146,6.737188,1.335425,6.580108,-6.408595,-8.192982,-2.400433,5.587958,3.912379,6.368933,-0.483119,5.581123],[-4.625141,3.132995,1.618697,5.815604,5.647258,1.657818,-3.124787,7.503891,-5.874703,0.414427,1.564037,2.674482],[5.676312,2.691421,-0.367974,-8.065697,5.133490,-5.255164,-6.446862,-3.153146,-4.461278,-3.439435,-2.602228,2.521827],[5.132420,0.986795,-5.980106,-3.094905,7.250484,3.943153,-3.711887,7.313154,-7.299675,-7.103931,9.354315,-0.746546],[7.403058,6.434399,-7.086445,-4.631261,5.701821,-5.535974,-3.175545,5.222548,-8.101668,7.654519,-9.556479,-5.378670]],[[-8.147752,6.015382,0.167388,5.698716,0.648730,-5.713010,8.575965,3.442770,0.088898,-9.361246,-3.608927,4.895806],[9.489587,9.108982,3.408941,-9.265065,8.109050,-9.349064,8.161573,1.168770,-3.464415,-4.641600,-8.015329,-2.460589],[8.818506,2.339571,-8.773108,-9.578146,4.739774,4.799501,6.225739,-6.937532,0.177116,8.693497,-2.945765,9.229271],[-9.187351,-5.971222,-5.106417,-1.215948,-6.029952,3.218237,6.876041,-3.911785,-4.981247,9.070042,4.847794,-8.453025],[-8.974951,7.273644,-7.669252,9.251228,-9.678327,7.043202,-2.484720,-6.330814,8.187159,5.659837,0.433979,6.485277],[5.340663,3.560044,-5.841983,-1.504503,3.880358,2.141975,-9.110910,-4.881402,-6.492512,9.264497,-6.836263,1.629312],[-3.846413,-4.729483,-0.464190,6.518075,-5.396314,-6.997499,-5.033212,-9.076827,-0.568217,4.461952,-6.380036,9.094721],[4.131045,-5.609921,-4.025529,0.945044,-3.148003,-0.626825,7.484285,7.436727,-9.663356,-8.209195,-4.554269,-2.630246]],[[-7.624429,7.567357,-5.524264,2.226253,-8.298551,9.135405,-1.760961,5.267170,-9.046098,2.496405,5.432466,3.051561],[9.145879,-0.540597,-5.750719,-3.823026,-5.494489,-7.820005,0.764714,-3.304973,1.574622,-1.669489,-1.033479,-2.534621],[-5.869539,-5.968274,-7.819724,8.205472,8.019732,9.131174,4.879958,-1.315878,-5.465441,-6.582667,-4.904460,1.975423],[-6.588527,9.774558,3.620282,1.157593,-5.112082,8.747225,5.554980,-1.162606,-8.266746,6.187773,2.503752,5.801362],[-7.381049,2.327256,-4.421346,-7.088212,9.042307,3.225472,6.712452,-7.264608,-0.890790,9.266721,-0.851871,-0.799524],[1.668564,-2.969096,4.619788,-5.010018,7.246460,-1.528867,-6.561765,-1.614197,4.094792,-8.608116,-4.846112,-3.336806],[-7.307953,6.138217,1.178442,1.212698,3.686266,4.905187,1.274447,-2.476213,-6.653496,-9.847618,2.284592,-3.181315],[-4.707226,6.490876,1.089481,8.311275,6.112586,-7.474296,-6.918895,-9.543428,-2.091533,-4.062266,7.193121,-5.285979]],[[-0.961494,5.473819,-8.328577,-6.456759,-2.159797,3.983242,9.104471,-9.513128,4.138633,7.623015,-8.777035,0.185593],[4.010019,3.452073,-5.430470,-3.163583,-2.503326,-7.620977,3.421290,-7.408853,4.440522,6.003259,-1.907969,6.867716],[7.563130,-0.292894,-0.388614,-3.592102,5.506524,5.151638,1.562994,-6.521797,5.625627,-2.745019,2.402263,-2.340777],[9.052222,4.950060,8.380696,4.866203,5.047251,4.672223,-0.351337,-8.522138,1.018884,2.231945,8.932137,-8.661127],[8.010055,-4.568929,4.225032,0.433668,-5.465872,1.437656,9.849579,-1.930238,-4.069659,1.257689,9.455735,-6.441881],[8.684001,-7.328543,-5.430340,9.560012,9.375181,-7.541860,-2.866826,5.470288,5.178479,8.435550,-6.076148,0.080423],[3.397307,2.682203,-8.812508,1.772096,9.532390,6.041178,-9.102620,3.333671,-2.253631,4.885555,9.529184,3.271493],[8.045154,-0.443309,5.573061,-4.302813,-5.454380,5.400141,5.706803,-5.737781,-7.464339,-4.137029,-7.493199,9.657468]],[[-6.141474,4.380655,3.799386,-6.624379,6.405931,-7.125851,-3.809346,0.190995,-8.366937,-0.686430,1.304054,6.294773],[-0.961577,2.962394,9.565948,0.973632,3.442511,-6.989549,6.239553,2.224257,5.292982,6.833427,-6.802643,-5.361113],[-0.002810,-3.315511,0.658831,8.491982,-8.220592,-8.870900,1.938866,4.688397,-4.122226,-4.993332,-0.508341,7.319212],[2.826004,9.510070,9.726562,3.742267,-5.055202,-3.985986,2.201789,7.693008,-7.547645,0.640581,5.339930,-6.809373],[-5.236490,-8.861898,-0.100870,-9.258185,-5.038761,6.659750,5.102529,9.412612,-0.489055,7.339532,-3.338820,6.849935],[-8.090706,-0.244938,8.751747,-3.654747,0.087001,-3.070575,-7.223363,-2.094146,3.886763,-5.407708,-6.698619,-2.871480],[0.403260,-7.916734,6.780608,-3.283713,-0.355843,1.106560,1.848455,-3.190004,-2.684861,-2.860516,1.481134,-2.892166],[-9.805954,-4.975718,-8.000166,-8.637240,-5.473078,2.154059,-4.669463,-5.937285,3.848003,2.881365,2.357594,8.740513]],[[-4.698737,-7.395895,-3.276352,-4.843006,9.909912,5.442968,-2.357067,-8.759794,-6.184325,-7.811274,8.276522,-9.869593],[-2.099004,-4.290478,3.872268,-3.767065,1.880301,5.075464,2.841205,8.073945,-2.229870,-9.121021,-6.296121,-3.729910],[0.174029,6.422495,7.668801,2.794167,1.827257,3.503384,2.592281,1.107855,-2.965715,4.937533,-6.908640,-2.219072],[3.260608,6.991236,5.775662,8.802810,-2.316712,-4.000215,-7.148915,-0.239841,6.227072,-5.225887,4.815715,7.328855],[-1.805757,5.911454,2.963009,-3.705950,-1.255285,-5.058259,9.136153,-2.364557,4.202309,4.521892,-8.873410,8.680912],[5.255591,8.765229,1.620856,-0.067424,7.562952,5.607243,7.298641,1.179573,4.439811,-2.724163,0.780686,6.966177],[1.346533,-0.153288,-1.882372,5.846710,7.695436,-2.786635,3.068154,0.347991,-7.889670,-0.827638,-2.747619,4.977532],[6.857829,-9.434834,9.841761,5.914113,-2.535355,-6.013016,-3.897282,-2.286815,-9.970857,-1.805965,4.017499,-7.859387]],[[-2.278683,9.562768,2.048455,7.030145,-6.564132,2.579973,9.956245,-3.845021,3.514244,-4.626429,-8.414859,7.754170],[3.524512,7.871001,2.585523,-3.298606,-4.843928,-3.112302,-4.323593,-1.271611,9.073264,-8.396371,5.934585,-6.503798],[-5.006766,-1.685750,9.525487,5.165532,6.617462,2.895934,8.098802,0.815369,-9.613139,9.029306,5.964735,7.290402],[0.536263,7.694853,8.664514,9.911761,-5.334273,-9.072007,-7.111719,-7.499991,-4.972562,-8.613373,1.781967,6.743473],[-9.872987,-3.290680,9.716441,-3.687371,-0.889701,7.070330,-9.192272,1.545865,-2.690020,-0.128643,1.189755,-6.599741],[5.119717,2.459944,-6.366515,-3.397689,8.235309,-2.022781,-6.838379,-7.144452,-1.770140,-2.034131,-7.389779,4.032585],[-1.743907,3.818131,-4.273271,6.088195,6.610009,-6.915556,-0.369226,-5.641701,-3.013267,-4.995678,6.478922,2.393346],[-7.457711,-4.993188,5.099483,6.616473,-7.973092,8.337996,-6.188986,-6.635900,-4.118771,-8.677737,6.462493,-1.040835]],[[9.880153,-5.070508,0.903659,4.409388,-2.472230,0.264110,1.901444,4.971446,0.995576,9.684237,3.951397,5.752801],[-4.394797,-5.120090,-6.678480,1.064703,6.513240,8.220787,8.421385,-5.884712,-1.712765,8.988744,-5.102941,7.484477],[-2.359887,-7.532701,-3.977718,4.111515,9.722755,-9.064387,-1.437024,0.120164,-6.394567,1.361775,8.424371,6.271764],[3.357773,-4.559565,1.435940,5.943048,-8.636381,7.629134,-4.782419,5.769183,3.763629,6.761793,-4.136624,4.821884],[9.510670,-8.366216,4.422539,3.693400,8.855071,-1.456048,3.067644,-9.425116,1.543229,0.418539,-2.115645,6.004069],[-0.975645,7.862434,-2.855678,2.873202,8.174506,-1.096923,9.228373,8.499975,3.603599,0.477981,-1.557492,-5.093782],[-0.882962,0.539577,3.379406,-2.543079,7.015219,-8.506155,-4.595407,-5.263906,1.128544,-5.524946,-3.997965,0.683328],[-8.778007,-2.137709,-1.463195,-2.862884,-8.745141,0.869575,3.653864,-6.380437,-9.672750,-9.667133,-5.947546,-0.767916]],[[3.758808,1.865341,1.131961,-7.401713,4.018876,-1.434242,3.347125,-7.936888,-4.913986,8.738873,8.101070,-9.704480],[-0.122534,3.735864,3.142296,8.548954,-5.554837,-9.838881,8.911085,0.079250,-3.858707,1.480792,6.406710,3.829708],[0.405873,6.143152,-6.270079,-1.795531,-7.589022,-7.986871,-2.902960,-6.956286,-1.999214,-9.509283,9.265072,-2.292310],[5.339432,-3.754872,-2.307729,-5.023043,-6.202373,-5.116924,4.915718,-5.022984,-8.185123,-4.322683,-6.683214,-8.757766],[9.600390,-7.843033,-8.378447,-9.702233,-8.020164,-0.059527,5.169050,9.526128,-8.184370,-5.161583,-5.488924,5.146786],[6.332817,2.209559,1.647270,-7.408414,-9.031164,1.392283,-8.005101,-8.937765,-7.928334,7.458648,1.143256,-5.393105],[-9.838176,-4.321668,3.966394,-8.525755,5.469684,-8.442390,2.647567,4.444571,8.596937,-2.288830,0.307680,6.775279],[-9.177682,3.081195,9.265622,0.196078,-4.124284,-1.180489,-6.726982,3.406612,6.636509,-8.624947,-1.342965,-7.399952]],[[-1.368935,3.755468,-8.902980,-3.486404,2.917749,-7.034484,6.197222,1.948919,7.523856,8.107531,-6.112555,8.017643],[-5.481404,-2.605088,-7.063874,-2.612896,8.391530,-3.455981,-6.212204,-7.754961,-0.913219,-5.127582,7.452169,6.984752],[-7.470125,-5.281987,9.780108,-3.339873,3.824416,1.172221,7.514400,-8.529562,4.997606,-9.364195,0.928801,-2.627454],[-8.775309,6.484328,-4.068795,-0.692320,1.782403,6.446023,4.359034,-0.589593,-4.438963,-6.614883,-5.760108,-1.834282],[1.149153,1.790668,-3.392014,-3.900771,7.083483,-1.780881,-3.377252,-5.030170,8.969268,4.774132,3.040276,9.765669],[9.153058,9.256214,-6.496029,9.069645,7.776342,6.478661,-1.394817,-5.978367,9.177989,5.962968,1.748285,-6.558980],[8.649139,1.739199,2.240336,-8.754340,-8.487471,-0.473359,-0.508641,-0.279947,5.724504,7.616635,5.669182,9.040922],[-0.363106,8.123328,-3.076790,-1.982574,9.702178,-9.632394,-3.904822,1.570694,-2.195321,1.113314,0.433785,-0.390969]],[[1.915969,2.514680,9.788131,-5.234172,9.660420,-1.068265,3.947279,-1.819399,-4.108314,6.680212,5.477726,-3.003709],[2.366942,-1.879079,5.071123,1.944936,-4.824346,-1.591710,3.508783,4.918450,-8.535743,-3.997969,-4.715984,-2.888100],[3.575089,1.957260,-6.903458,-8.338259,-2.841577,-6.348045,-0.379822,-3.712593,-5.846950,-4.187566,6.733820,2.208387],[9.550025,0.361642,-2.353835,6.104425,-6.975185,-0.041418,-2.143945,-0.616868,-5.957917,-5.813429,-5.184344,5.134019],[9.293253,-6.810409,-5.920394,-8.684668,9.916260,4.978713,3.865762,8.031047,-3.110515,-5.577902,-7.206087,4.543844],[-1.847528,6.844978,-3.736967,3.259608,8.411378,9.813916,1.012194,5.355691,7.966131,-8.884883,2.180960,-7.403924],[-4.479615,-4.680344,6.815671,8.641790,-3.847062,-1.739302,3.000301,-7.471406,8.874330,-5.315075,-3.121861,0.162270],[9.758524,-9.096955,9.967568,-5.528395,-2.908668,3.637286,-1.773087,0.832516,6.013853,9.047270,1.298297,4.621538]],[[2.017685,-8.208979,-2.976886,-6.134972,5.289418,-2.214517,6.743863,-8.644030,-1.987761,-6.151188,-8.766020,9.695987],[2.140415,9.782661,-4.077204,-8.297555,-0.018296,8.433058,-0.741508,-4.357017,3.449695,7.168822,5.421894,-6.318266],[6.654835,-2.551612,-5.875135,3.985105,5.953338,-1.123212,-5.827877,9.116334,9.440272,0.425731,-8.747124,-5.258686],[-5.965054,6.240950,0.114048,3.510839,-7.387686,4.240327,6.654267,-6.374155,2.804719,0.341950,8.116553,-1.419822],[0.421463,8.773478,-6.775654,8.038836,4.746715,-9.464583,-3.209450,5.204148,-6.729598,7.471652,0.114778,-5.136372],[3.851988,-3.274432,-5.508722,5.590557,-7.299521,-9.142369,-5.829536,-9.229136,-5.317612,0.633009,-0.394833,8.085566],[6.183011,2.989198,-3.464778,9.364009,6.357570,3.566300,-2.613306,0.059135,0.895648,8.892160,-9.383892,6.668919],[9.438223,0.942213,1.412978,-7.804679,-5.023107,9.029393,7.507891,-8.775251,9.050533,-7.826572,-4.832732,-2.924848]],[[9.848416,-1.785082,1.791703,-3.095127,-1.195448,0.319091,-9.327316,-0.086664,5.857974,-1.730519,-5.338347,5.312683],[-0.897254,7.575217,1.504758,-0.084701,-2.627682,-7.086885,-1.286036,-2.753211,2.085479,-2.467670,4.662914,-1.606919],[-4.146110,9.377965,9.184333,-8.124144,-4.851853,-3.207162,-9.193528,5.603639,7.319982,-3.192571,-6.150074,-8.522420],[-8.524679,-9.192424,4.817446,-2.303585,5.499829,-2.980821,-6.531663,-2.354623,0.821511,4.066521,2.410637,-4.282145],[-0.912079,-3.287469,6.204549,-6.002301,0.310100,7.506855,4.730580,-6.136882,2.839831,4.495895,-3.929536,-7.520330],[1.050308,5.300392,-3.728675,9.350759,-6.771762,-5.739941,1.629614,-9.139784,5.675329,2.171857,8.345604,9.098821],[6.267831,2.327193,-1.766315,3.913238,7.273209,-2.574724,-9.905937,-7.113055,1.467892,-3.766840,-5.790279,8.259204],[-6.337340,-5.919735,-1.872373,-5.761529,8.349127,4.548184,6.056787,5.674754,5.121245,0.773832,2.210540,1.089687]]], dtype = "float64")#candidate|6463|(15, 8, 12)|const|float64
bop_6464 = relay.less_equal(call_6442.astype('bool'), relay.reshape(const_6463.astype('bool'), relay.shape_of(call_6442))) # shape=(15, 8, 12)
bop_6467 = relay.less_equal(call_6443.astype('bool'), relay.reshape(const_6463.astype('bool'), relay.shape_of(call_6443))) # shape=(15, 8, 12)
output = relay.Tuple([bop_6464,])
output2 = relay.Tuple([bop_6467,])
func_6470 = relay.Function([], output)
mod['func_6470'] = func_6470
mod = relay.transform.InferType()(mod)
mutated_mod['func_6470'] = func_6470
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6470_call = mutated_mod.get_global_var('func_6470')
call_6471 = func_6470_call()
output = call_6471
func_6472 = relay.Function([], output)
mutated_mod['func_6472'] = func_6472
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6022_call = mod.get_global_var('func_6022')
func_6024_call = mutated_mod.get_global_var('func_6024')
call_6478 = relay.TupleGetItem(func_6022_call(), 0)
call_6479 = relay.TupleGetItem(func_6024_call(), 0)
func_5545_call = mod.get_global_var('func_5545')
func_5547_call = mutated_mod.get_global_var('func_5547')
var_6497 = relay.var("var_6497", dtype = "uint64", shape = (20,))#candidate|6497|(20,)|var|uint64
call_6496 = relay.TupleGetItem(func_5545_call(relay.reshape(var_6497.astype('uint64'), [1, 20])), 2)
call_6498 = relay.TupleGetItem(func_5547_call(relay.reshape(var_6497.astype('uint64'), [1, 20])), 2)
uop_6502 = relay.atan(call_6496.astype('float64')) # shape=(1, 20)
uop_6504 = relay.atan(call_6498.astype('float64')) # shape=(1, 20)
func_3956_call = mod.get_global_var('func_3956')
func_3960_call = mutated_mod.get_global_var('func_3960')
var_6509 = relay.var("var_6509", dtype = "float64", shape = (1440,))#candidate|6509|(1440,)|var|float64
call_6508 = relay.TupleGetItem(func_3956_call(relay.reshape(var_6509.astype('float64'), [15, 8, 12]), relay.reshape(var_6509.astype('float64'), [15, 8, 12]), ), 0)
call_6510 = relay.TupleGetItem(func_3960_call(relay.reshape(var_6509.astype('float64'), [15, 8, 12]), relay.reshape(var_6509.astype('float64'), [15, 8, 12]), ), 0)
var_6523 = relay.var("var_6523", dtype = "float64", shape = (16, 20))#candidate|6523|(16, 20)|var|float64
bop_6524 = relay.less(uop_6502.astype('bool'), var_6523.astype('bool')) # shape=(16, 20)
bop_6527 = relay.less(uop_6504.astype('bool'), var_6523.astype('bool')) # shape=(16, 20)
func_5907_call = mod.get_global_var('func_5907')
func_5909_call = mutated_mod.get_global_var('func_5909')
call_6532 = func_5907_call()
call_6533 = func_5907_call()
output = relay.Tuple([call_6478,var_6497,call_6508,var_6509,bop_6524,call_6532,])
output2 = relay.Tuple([call_6479,var_6497,call_6510,var_6509,bop_6527,call_6533,])
func_6535 = relay.Function([var_6497,var_6509,var_6523,], output)
mod['func_6535'] = func_6535
mod = relay.transform.InferType()(mod)
var_6536 = relay.var("var_6536", dtype = "uint64", shape = (20,))#candidate|6536|(20,)|var|uint64
var_6537 = relay.var("var_6537", dtype = "float64", shape = (1440,))#candidate|6537|(1440,)|var|float64
var_6538 = relay.var("var_6538", dtype = "float64", shape = (16, 20))#candidate|6538|(16, 20)|var|float64
output = func_6535(var_6536,var_6537,var_6538,)
func_6539 = relay.Function([var_6536,var_6537,var_6538,], output)
mutated_mod['func_6539'] = func_6539
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4125_call = mod.get_global_var('func_4125')
func_4127_call = mutated_mod.get_global_var('func_4127')
call_6541 = relay.TupleGetItem(func_4125_call(), 2)
call_6542 = relay.TupleGetItem(func_4127_call(), 2)
func_1087_call = mod.get_global_var('func_1087')
func_1091_call = mutated_mod.get_global_var('func_1091')
const_6545 = relay.const([4,8,5,5,-7,4,-6,-1,-6,-1,-7,-1,7,7,7,-2,-1,-10,-4,4,-2,3,3,9,4,6,-8,2,2,-1,-3,-2,3,3,-7,-1,9,-8,-9,-2,7,-2,-4,-8,-6,-9,-2,-5,3,4,-7,10,8,-8,5,2,7,6,-10,2,-5,-5,2,-4,8,-4,3,-2,-1,10,10,7,5,1,-8,-9,3,-4,4,1,-7,8,8,3,-2,-5,-4,-10,-6,6,3,10,9,-3,1,-6,9,-8,-8,8,5,-10,8,10,10,-1,-1,-1,5,5,7,4,-9,-3,-5,-5,-4,9,-7,-7,3,4,-9,4,10,-9,3,3,6,-9,6,-1,-10,-4,7,6,9,4,4,1,-9,8,-4,6,-6,-10,8,5,-10,-7,-2,7,-2,1,-8,9,-5,-1,-10,8,1,-10,-1,-9,6,8,-10,1,-5,-7,5,2,4,10,10,10,7,-2,-7,-9,-8,10,3,1,4,-3,-5,10,8,-1,-7,10,3,10,5,-4,6,3,7,-7,2,-1,-5,-4,10,-1,-10,-3,-3,4,4,-10,-4,-2,-5,-2,-1,3,6,8,5,-5,2,-10,10,-2,-4,7,-7,10,7,10,7,-1,1,8,-1,-2,2,-8,8,9,6,3,-2,-5,5,5,9,4,7,9,-7,-3,-5,-1,2,-8,-3,-10,-3,4,-10,-9,-4,10,-5,1,10,-10,4,-1,-1,-5,-9,1,-1,8,-1,2,-2,-9,1,-10,4,7,3,-4,-6,-1,3,-5,-7,8,1,-5,2,9,-6,6,9,5,1,6,-8,2,-9,8,1,-5,-7,5,-6,5,-5,9,-4,6,6,7,-1,7,-6,-7,4,9,-2,-1,9,8,6,-10,6,10,-9,7,-5,-1,1,8,-8,7,1,8,-5,-6,6,5,-1,3,3,-10,-4,9,-7,-3,2,-6,-9,3,-1,-8,4,-10,-10,2,2,-2,-3,2,-8,8,6,-2,-8,-2,5,-9,-5,1,9,1,-7,8,5,-1,-6,2,-3,-8,3,-2,-1,-7,-10,-2,-4,-2,5,3,1,-3,-3,10,3,-8,7,-7,3,-5,-4,1,7,1,1,-3,7,9,3,7,7,-2,-7,5,3,-10,4,-7,3,6,-1,8,5,2,-9,3,4,2,-6,-1,6,6,-5,4,2,-5,9,4,3,3,5,-9,1,2,8,-6,7,8,-8,9,2,-4,-7,6,-2,-3,-5,6,4,5,3,10,-7,1,1,-5,4,-6,6,3,1,5,-8,3,-10,6,2,-1,-4,-2,4,8,5,-1,7,8,-1,5,-5,3,-7,-7,7,-7,2,-4,7,6,-5,6,2,10,-9,5,3,7,9,8,6,4,7,6,-1,7,-9,8,6,-5,2,9,9,5,4,3,1,7,9,-1,6,-6,2,6,-1,5,2,1,9,-1,-3,2,4,-1,5,-3,1,-5,1,-1,4,-10,-9,8,-10,3,-3,-7,-4,-2,-10,9,-2,4,-8,8,2,-6,10,9,3,1,-6,-5,-9,-9,-9,10,-5,-7,-1,2,-4,4,-4,-3,-4,-3,5,9,4,-2,-8,-6,-9,5,9,-3,8,6,10,-7,4,-3,7,-10,1,3,6,-4,2,5,7,-4,-5,4,-8,10,-2,-10,6,-9,-3,8,-4,4,-2,-9,9,1,-4,9,-8,5,-1,-1,4,-4,4,8,-4,8,-3,4,-2,6,-2,9,6,-9,8,4,2,3,-1,8,3,-3,2,-6,2,10,9,-3,-5,3,-4,9,8,4,1,7,7,-10,-9,3,2,-3,-5,7,-1,-5,-9,1,-4,-7,6,-3,-5,-3,-1,6,-2,-6,7,6,4,-1,6,10,-6,9,2,6,-4,4,5,-9,-8,3,8,3,3,-5,-5,-2,-4,6,2,-5,-3,2,-8,-5,7,4,-7,7,1,2,-9,-9,-5,10,7,2,4,-7,6,-1,-10,-8,1,9,-9,8,-3,-2,-3,6,10,1,-1,-8,-10,9,5,-7,7,10,6,6,6,10,2,9,-3,6,9,-10,-7,9,10,-10,-3,-3,-8,-2,10,-4,-7,4,5,3,-6,-3,6,4,-7,3,7,-10,-8,1,-4,8,-10,-3,-4,9,1,-4,-3,5,5,3,-5,-6,5,8,-2,3,1,-9,2,5,-1,2,-9,5,4,-5,10,1,9,-9,6,-5,9,1,3,7,-7,7,4,10,-9,-9,6,-6,-9,-6,-8,3,-6,-9,2,-2,-2,7,-10,-8,-9,9,4,10,2,-10,8,8,-10,2,2,3,2,2,4,-2,6,10,-7,-5,8,-9,-9,-10,-3,-10,-6,-9,-2,2,-10,3,-4,-5,-5,9,-6,-8,7,-3,-10,-5,10,9,-4,10,-5,-9,-7,-1,-5,-8,3,5,5,8,2,4,-7,4,5,-3,-10,-1,-7,1,-7,2,-6,7,4,7,-1,10,5,7,-1,-2,5,7,-8,-3,-9,6,-1,-7,10,-2,4,-9,7,8,-8,-6,4,6,-6,-10,5,2,-8,-2,-10,1,8,2,-8,3,1,-1,-7,-8,6,-7,1,-7,-8,-9,-5,2,-4,9,7,10,-1,4,9,-10,9,6,-9,-2,1,-5,4,10,-6,-2,10,10,4,-1,7,8,1,7,-8,-8,2,7,-5,-6,5,3,-9,-9,8,-5,-3,10,-8,5,9,5,9,9,-9,4,-2,-9,9,-5,-8,-1,-5,5,1,1,3,1,-8,-7,-5,10,7,10,9,-2,-8,-10,-5,10,6,4,-7,-3,-5,-3,1,-8,5,4,-5,-5,-9,-8,9,-10,7,-6,1,9,-2,-6,8,-1,4,-8,-2,-10,5,5,5,-1,-1,9,8,8,2,3,10,2,-9,-10,3,-2,-9,-4,-4,9,6,7,-9,4,-9,-1,8,2,6,-8,2,-7,9,-5,8,8,5,-8,10,-6,-6,9,-2,5,3,-7,3,5,-5,7,-6,7,-10,-6,6,3,-8,-10,-3,8,-8,2,7,5,10,7,-7,-9,-1,1,-6,-3,-7,5,-8,8,8,-9,-9,-8,8,-9,2,-6,-3,-2,9,3,10,6,3,-6,-5,-5,-1,5,10,6,2,-7,-7,5,-4,-4,8,-2,5,9,5,6,1,-5,5,-3,5,3,-8,-10,7,-9,-3,4,-1,9,1,1,-7,2,-10,-9,6,-9,-10,-1,2,-2,10,-6,-2,-6,10,-4,-6,9,5,10,-1,8,-9,-10,8,9,-9,9,-10,4,-4,5,9,5,5,5,-6,9,3,-6,9,-1,10,10,6,-8,-2,-8,10,-5,9,-10,7,10,-7,3,4,6,3,-4,8,9,6,3,3,8,9,8,-7,8,-7,-2,4,-6,2,7,-9,-3,6,-8,5,-10,6,-4,8,-7,-4,7,4,6,1,-7,-2,7,8,8,3,-10,7,2,-6,2,5,-10,3,5,1,-6,6,-2,9,8,7,-1,-3,-10,1,1,-1,4,-6,8,3,-2,-7,3,-6,10,-10,8,3,4,-1,-9,-3,6,2,-7,-10,-3,-3,5,-9,3,-5,5,-10,-1,4,-3,2,6,-5,-6,2,-4,-8,-4,-3,8,-9,-7,2,2,-7,-2,-8,1,-3,-8,10,2,2,-7,-5,2,-6,5,-6,-3,-5,4,-5,-7,-3,3,-9,-3,3,6,5,-3,7,-8,-6,8,7,-7,6,-9,8,-4,7,8,9,7,3,4,8,5,-6,9,4,4,-7,10,-6,-4,4,-4,-7,-7,-1,-2,-7,-6,9,-4,9,-2,-2,-6,7,-1,4,-3,6,-3,5,7,2,2,-7,2,-6,-6,7,7,2,4,-5,10,1,10,1,-5,-1,4,-5,7,3,10,-3,-3,-4,4,-5,1,-10,-1,8,-3,5,8,6,-1,-7,8,-7,9,-7,3,7,-10,-4,-5,-9,1,6,5,-3,10,9,-1,8,-10,-3,8,6,5,1,2,10,5,3,9,-8,7,8,6,10,-2,-8,10,-10,-3,7,-10,-1,3,5,-9,1,-10,5,-5,-1,-5,9,2], dtype = "uint8")#candidate|6545|(1536,)|const|uint8
call_6544 = relay.TupleGetItem(func_1087_call(relay.reshape(const_6545.astype('uint8'), [12, 16, 8]), relay.reshape(const_6545.astype('uint8'), [12, 16, 8]), ), 2)
call_6546 = relay.TupleGetItem(func_1091_call(relay.reshape(const_6545.astype('uint8'), [12, 16, 8]), relay.reshape(const_6545.astype('uint8'), [12, 16, 8]), ), 2)
func_3748_call = mod.get_global_var('func_3748')
func_3751_call = mutated_mod.get_global_var('func_3751')
var_6559 = relay.var("var_6559", dtype = "uint8", shape = (420,))#candidate|6559|(420,)|var|uint8
call_6558 = relay.TupleGetItem(func_3748_call(relay.reshape(var_6559.astype('uint8'), [2, 15, 14]), relay.reshape(const_6545.astype('uint8'), [64, 24]), ), 3)
call_6560 = relay.TupleGetItem(func_3751_call(relay.reshape(var_6559.astype('uint8'), [2, 15, 14]), relay.reshape(const_6545.astype('uint8'), [64, 24]), ), 3)
var_6563 = relay.var("var_6563", dtype = "float32", shape = (6, 6, 8))#candidate|6563|(6, 6, 8)|var|float32
bop_6564 = relay.equal(call_6541.astype('bool'), relay.reshape(var_6563.astype('bool'), relay.shape_of(call_6541))) # shape=(6, 6, 8)
bop_6567 = relay.equal(call_6542.astype('bool'), relay.reshape(var_6563.astype('bool'), relay.shape_of(call_6542))) # shape=(6, 6, 8)
func_4657_call = mod.get_global_var('func_4657')
func_4661_call = mutated_mod.get_global_var('func_4661')
call_6574 = relay.TupleGetItem(func_4657_call(relay.reshape(var_6559.astype('uint8'), [420,]), relay.reshape(const_6545.astype('uint8'), [1536,]), ), 3)
call_6575 = relay.TupleGetItem(func_4661_call(relay.reshape(var_6559.astype('uint8'), [420,]), relay.reshape(const_6545.astype('uint8'), [1536,]), ), 3)
output = relay.Tuple([call_6544,const_6545,call_6558,var_6559,bop_6564,call_6574,])
output2 = relay.Tuple([call_6546,const_6545,call_6560,var_6559,bop_6567,call_6575,])
func_6618 = relay.Function([var_6559,var_6563,], output)
mod['func_6618'] = func_6618
mod = relay.transform.InferType()(mod)
var_6619 = relay.var("var_6619", dtype = "uint8", shape = (420,))#candidate|6619|(420,)|var|uint8
var_6620 = relay.var("var_6620", dtype = "float32", shape = (6, 6, 8))#candidate|6620|(6, 6, 8)|var|float32
output = func_6618(var_6619,var_6620,)
func_6621 = relay.Function([var_6619,var_6620,], output)
mutated_mod['func_6621'] = func_6621
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5495_call = mod.get_global_var('func_5495')
func_5497_call = mutated_mod.get_global_var('func_5497')
call_6645 = relay.TupleGetItem(func_5495_call(), 0)
call_6646 = relay.TupleGetItem(func_5497_call(), 0)
output = relay.Tuple([call_6645,])
output2 = relay.Tuple([call_6646,])
func_6647 = relay.Function([], output)
mod['func_6647'] = func_6647
mod = relay.transform.InferType()(mod)
output = func_6647()
func_6648 = relay.Function([], output)
mutated_mod['func_6648'] = func_6648
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4125_call = mod.get_global_var('func_4125')
func_4127_call = mutated_mod.get_global_var('func_4127')
call_6661 = relay.TupleGetItem(func_4125_call(), 1)
call_6662 = relay.TupleGetItem(func_4127_call(), 1)
output = call_6661
output2 = call_6662
func_6670 = relay.Function([], output)
mod['func_6670'] = func_6670
mod = relay.transform.InferType()(mod)
mutated_mod['func_6670'] = func_6670
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6670_call = mutated_mod.get_global_var('func_6670')
call_6671 = func_6670_call()
output = call_6671
func_6672 = relay.Function([], output)
mutated_mod['func_6672'] = func_6672
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4891_call = mod.get_global_var('func_4891')
func_4893_call = mutated_mod.get_global_var('func_4893')
call_6701 = relay.TupleGetItem(func_4891_call(), 0)
call_6702 = relay.TupleGetItem(func_4893_call(), 0)
func_4315_call = mod.get_global_var('func_4315')
func_4316_call = mutated_mod.get_global_var('func_4316')
call_6703 = func_4315_call()
call_6704 = func_4315_call()
output = relay.Tuple([call_6701,call_6703,])
output2 = relay.Tuple([call_6702,call_6704,])
func_6715 = relay.Function([], output)
mod['func_6715'] = func_6715
mod = relay.transform.InferType()(mod)
output = func_6715()
func_6716 = relay.Function([], output)
mutated_mod['func_6716'] = func_6716
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6316_call = mod.get_global_var('func_6316')
func_6317_call = mutated_mod.get_global_var('func_6317')
call_6748 = relay.TupleGetItem(func_6316_call(), 0)
call_6749 = relay.TupleGetItem(func_6317_call(), 0)
func_5880_call = mod.get_global_var('func_5880')
func_5881_call = mutated_mod.get_global_var('func_5881')
call_6758 = func_5880_call()
call_6759 = func_5880_call()
func_2310_call = mod.get_global_var('func_2310')
func_2315_call = mutated_mod.get_global_var('func_2315')
var_6781 = relay.var("var_6781", dtype = "float64", shape = (65, 6))#candidate|6781|(65, 6)|var|float64
var_6782 = relay.var("var_6782", dtype = "uint8", shape = (384, 4))#candidate|6782|(384, 4)|var|uint8
const_6783 = relay.const([8.980381,8.167460,2.717261,0.908533,0.761779,4.290999,-0.270304,7.372335,-9.738636,2.049876,-4.193129,3.388198,-2.293950,-2.392044,9.271594,-5.075269,3.840253,-5.024612,4.739462,-8.951915,1.064148,1.656370,-4.527402,9.678564,-3.867132,-0.915493,-0.582270,6.349061,2.699748,-6.201248,2.220612,1.072330,-0.064715,2.486992,0.939990,-1.870550,7.861496,5.633915,1.790959,-2.265284,0.759257,-2.576815,8.167590,-8.673491,-0.478716,4.638623,3.971560,-2.396204,-0.577528,-8.977532,1.140055,-3.746086,-0.192193,-0.992760,-5.890493,2.111615,8.315028,3.034478,-4.870919,8.527022,-9.650692,-4.721594,-9.317172,-0.638919,-6.380190,-1.714697,2.073147,-4.491264,-8.681073,1.781376,4.279893,-0.134272,2.520589,4.733342,9.585079,-7.366175,6.358170,-7.493949,4.618756,-5.860790,1.088987,-8.628401,-2.708382,-7.619548,4.581786,4.091915,-0.154531,-3.623328,-0.767192,3.396668,-8.724385,6.968358,-8.542644,6.526220,-9.968995,4.057603,7.563831,8.706739,-4.564451,-2.221434,0.639935,0.550786,-1.314317,0.909141,8.684448,-4.326275,-3.745261,-7.467300,9.813787,5.062970,4.129686,7.734222,-4.264276,-0.738375,-7.498077,-4.840090,9.714200,-6.336152,2.965732,-4.959473,-0.455431,2.780607,-5.814999,-8.311474,1.482633,-2.399172,-7.076713,0.933818,-1.649387,-2.174562,9.869532,-2.502431,-3.218949,-0.258413,5.788670,-6.495461,5.160534,-1.456635,9.235848,-1.116479,-9.620707,-1.597528,-5.746474,2.468068,5.949106,-3.080730,4.891653,3.361068,9.653464,9.402351,-0.857642,-3.557710,6.753814,-2.321879,8.203307,-0.585200,3.382939,2.312099,-4.172825,-8.222447,-0.445965,-1.771494,2.828414,1.055935,3.591133,8.775509,-3.844450,-6.379368,0.057112,8.895509,9.424825,-8.833478,-7.692885,-4.857915,3.214901,-8.451832,9.827024,9.642470,2.196415,4.059824,4.518567,-0.417643,6.908469,-2.775198,1.443301,2.152575,9.242736,8.872336,3.802179,-8.763728,-4.108100,-5.880284,-6.781857,4.873812,-0.832527,-2.514515,5.052903,-0.972508,0.734383,2.174311,-1.250870,7.531430,6.311834,2.708500,5.251284,6.755875,-8.077306,2.706265,5.914045,-8.665764,-7.247175,7.711149,-7.705989,-7.029405,-8.162542,-5.642153,-7.314950,-2.709127,1.770042,4.487413,-0.265735,-3.214784,-8.257900,5.719466,-6.756808,-4.742366,-6.112811,5.479151,8.113745,2.081422,4.360455,-2.316875,0.165878,0.196048,-5.131895,6.332260,8.542486,6.857538,-4.072772,5.310636], dtype = "float64")#candidate|6783|(240,)|const|float64
const_6784 = relay.const([-4,6,5,5,-5,5,-4,6,-2,1,-5,-9,-10,8,-10,9,-7,-8,-9,6,-3,-3,-2,4,7,7,-2,2,-1,-2,-3,-5,-6,-5,-7,10,2,10,4,5,-1,-5,1,5,-8,-2,-5,-3,1,5,9,-1,-1,-2,-5,6,3,9,1,-5,10,-1,-6,6,-2,-7,-8,-1,-9,6,2,-4,-5,1,6,4,5,10,10,1,9,-5,8,8,1,-3,-5,-9,9,-4,-6,-2,-4,2,-10,-9,3,-8,2,-6,9,5,8,2,-4,2,-7,-2,-9,-8,-9,8,1,-1,-3,3,8,-5,3,-4,6,-8,-2,-5,-5,10,9,4,-5,2,-1,9,4,8,1,-4,-9,1,1,4,10,9,-3,9,5,-7,6,-10,2,-8,1,2,-4,-3,1,-10,3,-10,2,4,3,-8,9,-9,-5,6,9,-7,-10,-8,10,-2,9,9,3,1,-7,5,6,-9,-3,10], dtype = "int8")#candidate|6784|(182,)|const|int8
call_6780 = relay.TupleGetItem(func_2310_call(relay.reshape(var_6781.astype('float64'), [390,]), relay.reshape(var_6782.astype('uint8'), [1536,]), relay.reshape(const_6783.astype('float64'), [240,]), relay.reshape(const_6784.astype('int8'), [182,]), ), 6)
call_6785 = relay.TupleGetItem(func_2315_call(relay.reshape(var_6781.astype('float64'), [390,]), relay.reshape(var_6782.astype('uint8'), [1536,]), relay.reshape(const_6783.astype('float64'), [240,]), relay.reshape(const_6784.astype('int8'), [182,]), ), 6)
output = relay.Tuple([call_6748,call_6758,call_6780,var_6781,var_6782,const_6783,const_6784,])
output2 = relay.Tuple([call_6749,call_6759,call_6785,var_6781,var_6782,const_6783,const_6784,])
func_6786 = relay.Function([var_6781,var_6782,], output)
mod['func_6786'] = func_6786
mod = relay.transform.InferType()(mod)
var_6787 = relay.var("var_6787", dtype = "float64", shape = (65, 6))#candidate|6787|(65, 6)|var|float64
var_6788 = relay.var("var_6788", dtype = "uint8", shape = (384, 4))#candidate|6788|(384, 4)|var|uint8
output = func_6786(var_6787,var_6788,)
func_6789 = relay.Function([var_6787,var_6788,], output)
mutated_mod['func_6789'] = func_6789
mutated_mod = relay.transform.InferType()(mutated_mod)
var_6803 = relay.var("var_6803", dtype = "float32", shape = (3, 2, 1))#candidate|6803|(3, 2, 1)|var|float32
uop_6804 = relay.erf(var_6803.astype('float32')) # shape=(3, 2, 1)
output = relay.Tuple([uop_6804,])
output2 = relay.Tuple([uop_6804,])
func_6808 = relay.Function([var_6803,], output)
mod['func_6808'] = func_6808
mod = relay.transform.InferType()(mod)
mutated_mod['func_6808'] = func_6808
mutated_mod = relay.transform.InferType()(mutated_mod)
var_6809 = relay.var("var_6809", dtype = "float32", shape = (3, 2, 1))#candidate|6809|(3, 2, 1)|var|float32
func_6808_call = mutated_mod.get_global_var('func_6808')
call_6810 = func_6808_call(var_6809)
output = call_6810
func_6811 = relay.Function([var_6809], output)
mutated_mod['func_6811'] = func_6811
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5414_call = mod.get_global_var('func_5414')
func_5415_call = mutated_mod.get_global_var('func_5415')
call_6867 = relay.TupleGetItem(func_5414_call(), 3)
call_6868 = relay.TupleGetItem(func_5415_call(), 3)
output = call_6867
output2 = call_6868
func_6872 = relay.Function([], output)
mod['func_6872'] = func_6872
mod = relay.transform.InferType()(mod)
mutated_mod['func_6872'] = func_6872
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6872_call = mutated_mod.get_global_var('func_6872')
call_6873 = func_6872_call()
output = call_6873
func_6874 = relay.Function([], output)
mutated_mod['func_6874'] = func_6874
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4194_call = mod.get_global_var('func_4194')
func_4196_call = mutated_mod.get_global_var('func_4196')
call_6892 = relay.TupleGetItem(func_4194_call(), 2)
call_6893 = relay.TupleGetItem(func_4196_call(), 2)
uop_6913 = relay.sigmoid(call_6892.astype('float32')) # shape=(1, 810)
uop_6915 = relay.sigmoid(call_6893.astype('float32')) # shape=(1, 810)
func_6022_call = mod.get_global_var('func_6022')
func_6024_call = mutated_mod.get_global_var('func_6024')
call_6923 = relay.TupleGetItem(func_6022_call(), 0)
call_6924 = relay.TupleGetItem(func_6024_call(), 0)
func_2209_call = mod.get_global_var('func_2209')
func_2214_call = mutated_mod.get_global_var('func_2214')
var_6933 = relay.var("var_6933", dtype = "float64", shape = (24, 10))#candidate|6933|(24, 10)|var|float64
const_6934 = relay.const([-7,-9,1,3,1,-3,-9,-4,-2,-7,1,-3,-2,1,4,-8,-4,9,5,5,3,10,1,-2,2,9,1,-8,10,9,-3,5,7,1,8,-7,5,5,-3,8,-6,7,-1,-2,-4,5,9,-5,5,-8,3,6,-5,4,7,5,9,1,-7,-10,-4,-10,-8,9,10,-8,5,1,-6,1,-6,-5,8,-6,-6,8,3,3,5,-5,-9,8,-9,-7,-5,-6,-3,-6,6,-6,8,4,-5,5,9,5,-2,-6,-3,6,9,8,7,-5,-8,7,6,-9,10,-9,3,1,-8,-8,9,-8,10,-2,-2,9,-7,-7,-2,4,-10,3,8,1,-10,-6,5,-7,1,-3,6,2,10,8,6,4,-6,9,10,9,-1,8,10,2,-7,-4,-6,-8,-8,8,8,-9,-8,10,10,-9,6,-6,3,8,2,-4,-2,7,-9,-3,-7,-3,3,-5,3,-6,1,5,-2,5,7,-6,-10,-9,6,-7,-6,-7,2,-4,6,-3,-3,-1,1,1,-5,-7,10,5,-7,10,-1,-4,1,-1,9,-1,2,9,10,-1,9,-10,-5,-4,7,6,2,-2,-8,-9,-7,-1,-4,2,10,-9,-3,-7,-5,-1,-6,-10,-6,3,-7,3,3,-3,-4,-1,8,5,-2,-10,-5,9,7,-2,-4,-1,5,7,9,5,4,-8,-9,-6,5,-7,-6,-2,6,7,8,2,-1,-1,6,-2,3,5,-4,2,8,10,6,6,-7,-3,-1,8,2,2,7,-2,-5,4,-9,-9,-8,2,10,-7,1,1,4,5,9,8,1,-6,-7,8,-9,-5,-5,-2,-5,1,8,9,1,8,1,-6,5,1,-4,-10,-5,1,-3,4,-1,-5,6,9,-10,-9,-4,-5,7,-3,-4,-4,-1,8,8,-4,-6,-6,-5,-2,-5,-7,-4,-9,10,-1,-8,-5,2,3,-3,8,5,2,10,-6,2,5,-8,8,8,-4,8,5,3,9,4,5,-1,9,10,-6,1,-10,-8,8,-2,2,4,-10,-7,4,6,1,4,-1,-7,9,-8,6,-9,-2,1,-1,-5,-3,-9,4,-6,-3,4,7,10,-9,6,6,4,-6,-6,-1,7,-1,-10,-2,-9,7,10,7,9,-2,-3,-10,-8,1,7,-5,5,1,-3,2,-7,-7,4,-8,-8,-9,9,-8,-10,-3,1,1,7,3,-4,-2,-5,-9,3,-5,-8,-3,-6,3,2,-4,5,-8,7,2,6,6,5,4,3,-10,-4,7,6,9,-8,-10,8,3,1,9,-1,1,-10,-5,-6,5,8,1,2,1,-3,-2,10,8,-3,1,2,2,-8,-7,10,4,4,3,7,5,-6,3,-2,-9,8,9,-9,3,7,-2,2,6,-1,-3,4,8,-4,-8,-2,3,5,1,4,3,-4,8,-1,3,5,2,-3,-1,-1,-5,-4,-2,-2,-6,7,-6,6,-10,-10,1,-10,-5,1,-1,-5,-5,7,-9,-10,-3,-6,-9,-7,-9,1,-2,-1,3,-5,6,3,10,-1,-8,5,10,-2,-2,-8,-8,1,10,-9,3,9,5,-3,1,5,4,3,-1,-3,-6,6,-9,-3,8,-4,-7,10,-5,6,-6,-7,1,6,-5,-5,-9,-4,-7,-7,-9,5,4,-10,8,-8,9,7,-5,1,2,-2,8,-9,-3,7,-7,-9,-8,1,5,4,-5,3,6,4,10,10,2,-1,8,-8,-2,8,-6,-10,8,-4,-7,-3,-10,10,2,6,-1,-2,8,-8,9,-4,6,-5,-10,-7,5,-7,-8,-5,-8,6,-1,-2,10,-1,5,3,1,-6,-8,-5,5,-10,-2,-3,5,2,10,4,2,-9,1,10,10,3,1,1,-2,6,5,4,1,-7,-10,10,-6,-10,-9,-9,8,-6,-9,-2,-9,5,-10,-5,7,-1,-1,-8,10,-6,-8,-9,-8,-5,4,-10,-6,7,7,8,-4,-8,1,-3,-4,1,7,-10,5,-4,3,-1,2,-6,2,1,-4,-2,-7,-6,-6,-4,-7,10,10,-10,-7,-1,-3,-7,10,2,1,8,8,10,1,9,-8,9,-10,-10,-3,7,7,-10,4,-2,-3,2,6,-7,7,6,-4,5,5,-4,-8,4,-7,-6,-6,5,-1,-3,10,-4,8,4,5,8,7,-8,-3,2,-7,-10,-7,2,-5,-2,9,-3,6,-10,7,2,-10,-8,-3,4,7,2,-10,-1,-1,9,1,-6,-1,9,-4,1,1,10,10,-3,7,-2,-10,-1,5,1,-6,-2,-3,3,2,-3,5,-7,5,-1,-5,-1,-5,-8,-6,6,-5,-9,3,-6,-7,-8,-2,7,-4,2,-1,-4,7,7,-10,5,5,-4,7,-3,-8,-7,5,10,2,7,-4,10,-3,-7,1,-8,8,-7,3,9,1,4,10,5,3,-5,-5,10,-1,-2,-1,-3,6,3,-9,3,-8,8,-10,-10,-7,1,10,-1,-10,-5,7,9,-7,-3,5,-8,2,3,-9,4,-7,-9,8,-8,-4,9,-1,7,1,6,-5,-10,-10,-10,7,-6,-10,-1,-6,-7,4,-4,-4,-4,-10,-10,-5,-5,-5,-6,10,7,9,-8,-7,-7,-3,-7,-1,-2,9,9,6,1,-8,4,-8,-8,10,-2,-3,7,10,-2,5,6,-8,10,-9,-5,-7,-5,-1,4,10,-8,6,8,-1,9,-8,2,9,2,-2,-7,8,-3,-6,2,-2,-9,-8,-4,-1,5,-9,-5,-8,6,-4,10,-4,2,-10,6,-5,-10,-5,-1,9,-4,-2,7,-6,3,-6,3,-4,2,9,7,4,-6,6,-5,-3,5,10,9,-5,-7,3,-2,4,2,3,-9,9,-6,-3,9,-10,3,-6,-5,5,1,1,-7,-9,-10,8,-9,-5,1,-8,3,-7,-9,9,4,-5,1,10,2,-7,-2,-2,-6,-8,4,-9,3,3,9,-7,7,-7,9,-8,-9,-3,-4,1,-3,-6,4,-6,-3,10,-3,4,8,-10,-1,8,-7,-10,-10,-10,-10,2,4,-1,-8,-9,-8,3,-6,-5,-3,-8,7,-3,9,-2,2,2,-3,-2,-6,4,-6,1,9,-1,-2,5,7,6,1,-4,5,8,-1,-1,-3,-2,-9,1,3,-2,-8,-4,-7,2,2,3,-4,-5,3,-3,-10,-3,1,9,-5,7,-10,-10,-3,6,-10,3,10,-10,-6,9,-9,-7,8,2,-8,9,-2,-6,-3,10,-1,-7,1,-6,-10,2,-9,10,6,-1,3,-4,-10,1,3,7,4,-7,-1,3,7,-3,-6,-4,-6,-9,-4,5,-3,9,8,10,-10,-1,9,4,-1,2,1,4,-10,6,5,-10,-8,4,5,-9,10,-5,6,-7,-6,8,7,-5,-4,3,-2,8,1,5,-8,8,6,9,3,-1,-6,-8,-1,-8,-6,2,3,6,-4,8,7,1,1,7,5,7,-9,2,10,2,-2,-1,-8,9,-10,-5,-6,10,4,3,7,3,-5,-5,7,-10,-6,6,-10,6,-5,-8,-5,8,8,-3,9,3,10,-8,7,-10,9,-7,-2,-10,5,-5,8,2,-5,3,10,8,3,-1,-2,-5,6,1,-8,4,-8,-2,2,-2,-10,1,-10,1,4,8,-2,8,-7,-7,-1,6,10,6,5,-1,5,-6,10,10,9,2,1,1,-1,2,-9,-1,-8,1,7,8,-3,-8,-2,-8,4,-6,2,-4,-6,-4,5,-2,-4,-8,-6,-4,-3,-1,-1,-9,9,-2,3,-3,-2,-3,-10,-4,9,-5,10,-1,4,-1,-1,9,-6,-10,-7,-7,9,10,5,4,-5,9,2,10,4,-8,2,6,10,-6,-10,-8,2,-10,9,3,5,-1,3,-3,-3,-3,-10,-4,8,7,-4,9,-10,-5,3,5,1,6,-7,3,2,4,9,-2,7,-7,2,-7,4,-5,1,8,-6,-5,5,-3,-4,-9,-5,1,10,-5,3,9,5,8,-4,7,9,2,-10,3,2,-8,-4,-2,-7,9,10,-9,1,-10,-4,-6,-9,-8,-1,-6,2,-3,2,-1,2,-1,9,7,9,-9,-6,-5,1,-5,-4,-7,-4,-5,6,7,7,10,8,-7], dtype = "uint8")#candidate|6934|(1536,)|const|uint8
const_6935 = relay.const([-7.422116,-5.462559,8.686184,-1.025332,-9.033626,7.263684,-8.872162,-8.795428,-9.343629,-5.818701,-7.768324,1.217265,5.230503,9.392171,-5.017621,8.531932,-7.472796,7.936762,5.836045,2.529416,7.214277,7.044189,7.144700,4.698052,3.954814,-6.096144,6.929674,9.839142,-9.777009,4.202055], dtype = "float64")#candidate|6935|(30,)|const|float64
call_6932 = relay.TupleGetItem(func_2209_call(relay.reshape(var_6933.astype('float64'), [5, 6, 8]), relay.reshape(const_6934.astype('uint8'), [1536,]), relay.reshape(const_6935.astype('float64'), [30,]), ), 4)
call_6936 = relay.TupleGetItem(func_2214_call(relay.reshape(var_6933.astype('float64'), [5, 6, 8]), relay.reshape(const_6934.astype('uint8'), [1536,]), relay.reshape(const_6935.astype('float64'), [30,]), ), 4)
uop_6937 = relay.log2(uop_6913.astype('float64')) # shape=(1, 810)
uop_6939 = relay.log2(uop_6915.astype('float64')) # shape=(1, 810)
bop_6951 = relay.right_shift(uop_6913.astype('int64'), relay.reshape(uop_6937.astype('int64'), relay.shape_of(uop_6913))) # shape=(1, 810)
bop_6954 = relay.right_shift(uop_6915.astype('int64'), relay.reshape(uop_6939.astype('int64'), relay.shape_of(uop_6915))) # shape=(1, 810)
func_5977_call = mod.get_global_var('func_5977')
func_5979_call = mutated_mod.get_global_var('func_5979')
call_6955 = func_5977_call()
call_6956 = func_5977_call()
bop_6959 = relay.mod(uop_6937.astype('float64'), relay.reshape(call_6892.astype('float64'), relay.shape_of(uop_6937))) # shape=(1, 810)
bop_6962 = relay.mod(uop_6939.astype('float64'), relay.reshape(call_6893.astype('float64'), relay.shape_of(uop_6939))) # shape=(1, 810)
output = relay.Tuple([call_6923,call_6932,var_6933,const_6934,const_6935,bop_6951,call_6955,bop_6959,])
output2 = relay.Tuple([call_6924,call_6936,var_6933,const_6934,const_6935,bop_6954,call_6956,bop_6962,])
func_6966 = relay.Function([var_6933,], output)
mod['func_6966'] = func_6966
mod = relay.transform.InferType()(mod)
var_6967 = relay.var("var_6967", dtype = "float64", shape = (24, 10))#candidate|6967|(24, 10)|var|float64
output = func_6966(var_6967)
func_6968 = relay.Function([var_6967], output)
mutated_mod['func_6968'] = func_6968
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5263_call = mod.get_global_var('func_5263')
func_5264_call = mutated_mod.get_global_var('func_5264')
call_7013 = relay.TupleGetItem(func_5263_call(), 1)
call_7014 = relay.TupleGetItem(func_5264_call(), 1)
uop_7032 = relay.sinh(call_7013.astype('float32')) # shape=(420,)
uop_7034 = relay.sinh(call_7014.astype('float32')) # shape=(420,)
output = relay.Tuple([uop_7032,])
output2 = relay.Tuple([uop_7034,])
func_7047 = relay.Function([], output)
mod['func_7047'] = func_7047
mod = relay.transform.InferType()(mod)
mutated_mod['func_7047'] = func_7047
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7047_call = mutated_mod.get_global_var('func_7047')
call_7048 = func_7047_call()
output = call_7048
func_7049 = relay.Function([], output)
mutated_mod['func_7049'] = func_7049
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4809_call = mod.get_global_var('func_4809')
func_4811_call = mutated_mod.get_global_var('func_4811')
call_7123 = relay.TupleGetItem(func_4809_call(), 0)
call_7124 = relay.TupleGetItem(func_4811_call(), 0)
output = relay.Tuple([call_7123,])
output2 = relay.Tuple([call_7124,])
func_7135 = relay.Function([], output)
mod['func_7135'] = func_7135
mod = relay.transform.InferType()(mod)
output = func_7135()
func_7136 = relay.Function([], output)
mutated_mod['func_7136'] = func_7136
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5871_call = mod.get_global_var('func_5871')
func_5872_call = mutated_mod.get_global_var('func_5872')
call_7137 = relay.TupleGetItem(func_5871_call(), 1)
call_7138 = relay.TupleGetItem(func_5872_call(), 1)
func_5658_call = mod.get_global_var('func_5658')
func_5661_call = mutated_mod.get_global_var('func_5661')
const_7152 = relay.const([7.638252,-6.682500,-3.149588,7.944807,-1.166037,9.395496,-2.040643,-9.104433,6.109982,5.963373,1.550297,-4.228296,-7.563177,-8.800335,6.555140,6.657315,-0.693921,-0.116117,-8.064083,-8.463048,-3.946274,-7.364770,7.815224,7.334527,-1.304240,2.859316,-4.137190,-9.768887,4.477350,4.403385,-9.636724,9.125240,-8.184458,-2.767534,5.436703,2.047307,-6.933989,-9.207070,5.876426,-8.794494,7.318247,7.296744,6.656334,-1.792076,-0.935205,1.539541,0.264622,-1.559901,6.781809,-8.797257,3.170344,-4.137343,2.790916,5.254266,-5.651401,-3.763037,-1.920233,-3.953925,1.976743,-7.790717,-2.451763,3.148708,-5.713058,2.330233,-0.622481,3.819707,-0.208686,9.554120,-8.211920,-5.991296,-2.282040,-1.773827,-5.214260,-7.025340,-0.349076,6.406035,6.002982,-7.681085,-7.061546,2.919752,9.807753,-6.858217,-6.439669,3.614165,6.662644,-1.286740,-0.513240,-4.760865,1.218038,3.585617,7.301227,-3.616792,9.469672,-0.931562,-6.314999,-7.071331,-2.414684,7.142651,-7.359084,-5.295729,-0.229665,3.286117,2.323169,3.413181,-2.609842,-7.077445,-5.812406,-7.387316,0.106907,9.329091,-3.159215,6.036657,4.431490,-6.582303,4.446349,5.374161,5.239508,2.177428,-9.642551,1.191305,0.435070,-9.529822,-9.160958,7.453151,5.232069,5.213197,-7.871021,8.426946,-9.354863,9.591605,-1.765692,4.574058,0.709692,-4.130503,-3.997434,-6.202903,-1.162349,3.667958,-6.631040,-3.037694,5.716195,6.423714,9.833947,8.410807,-3.752111,5.887339,3.425198,-5.837054,7.579970,-3.043626,-2.832420,2.619909,6.529053,4.620956,5.715048,-4.853717,-0.355189,-0.545295,-4.840162,0.369248,-9.554956,6.928008,6.201711,-4.651827,-7.971599,-0.682551,-2.104297,4.015306,-9.653425,0.336039,6.462968,9.002921,4.636634,1.391447,2.077142,5.395265,1.158969,-7.008979,-7.020242,-5.270199,7.373866,-9.765307,-8.520990,-0.965907,-8.079678,5.800692,9.943663,2.206515,-8.361668,-0.799745,9.979347,-0.888921,-6.605989,-9.297874,9.026853,8.020729,2.869727,-1.170697,-9.728443,1.325102,-7.864393,-6.398150,8.856848,2.160960,-0.941865,1.124240,2.003272,-6.627927,-1.833739,-2.585035,2.643136,0.407588,9.950873,9.908943,-6.904542,0.157000,2.950744,-7.480782,3.915327,-5.097556,0.011676,-5.051405,0.963728,-3.612087,7.794719,-6.563367,-4.078466,6.230102,8.844698,7.098364,7.462462,1.343469,-5.601521,7.365572,0.299502,0.014823,-4.169566,7.266327,9.073222,5.917753,-4.024990,2.641704,6.936894,2.254649,9.628425,-5.538524,6.092586,0.598247,4.838805,0.189844,6.712008,0.424597,-6.730799,5.285637,-5.070950,-0.039381,-3.201071,-1.202933,6.215941,6.930270,-0.155965,8.424271,2.055569,-6.940553,-1.810423,8.429457,-1.409445,3.989316,7.695363,-9.919340,1.271914,-4.141720,3.361778,-4.424564,-4.845139,3.054163,5.663395,-0.240365,-7.554486,-3.817478,6.430634,-5.810631,-4.747543,-9.136056,-6.406890,-9.387548,-2.478242,-6.650432,4.870593,-5.124877,-0.792088,-0.403979,-2.909387,-4.704397,8.043202,1.655712,-7.561964,4.469223,1.885368,-9.809932,-7.745613,-4.191699,6.837751,-4.266257,8.186920,6.718267,0.800676,4.325597,-7.000398,-1.830563,-0.385756,-9.547621,8.066868,-7.849601,-4.079818,-5.058389,1.495228,0.754461,5.535268,6.353180,-7.411845,-9.173877,-2.523896,2.968080,2.976124,2.372011,-3.947836,-9.199077,5.807626,-1.565846,9.866561,-2.063700,1.474470,-9.484140,-3.716643,9.513016,-3.982001,-7.244945,-5.001762,4.549602,3.088901,8.497419,9.109296,6.561476,-8.120392,-6.154735,-7.335912,-1.752484,-8.018250,7.368465,-5.884656,5.020618,-4.733154,-1.660562,5.346653,9.374391,-8.548693,-9.176604,-2.952344,-0.903033,-9.987530,6.841882,4.119187,-3.270666,-4.757899,-1.880921,4.613895,2.292120,0.641994,-5.523958,6.604270,3.417519,-7.830202,4.721959,1.820397,-2.999383,-0.254398,1.625667,6.878672,8.208043,2.860123,5.436269,0.338724,-8.048890,-8.517616,-0.261644,-1.839057,3.477018,1.774524,-5.626325,-8.842879,-4.321117,-4.239564,-5.391506,-0.826794,2.424241,-9.420536,-7.122246,2.803705,-6.345746,2.613571,6.512752,3.850675,-4.772833,-9.215010,3.845037,4.411751,7.326560,9.429074,-0.225052,-4.149402,7.453371,-0.735102,-8.401057,9.047881,9.686131,0.321589,-7.817387,1.585782,-7.621886,0.154686,-5.649810,2.133480,-6.009174,2.089200,-7.128528,-7.145408,-3.335902,3.798139,-4.298186,-2.490125,0.035766,8.378779,-5.420539,0.029191,-1.194082,-1.998228,2.915387,-1.346604,2.265602,-0.692761,1.693257,8.305878,6.680219,2.283537,2.646607,3.704693,6.177702,7.765949,5.392849], dtype = "float32")#candidate|7152|(450,)|const|float32
var_7153 = relay.var("var_7153", dtype = "int8", shape = (182,))#candidate|7153|(182,)|var|int8
call_7151 = relay.TupleGetItem(func_5658_call(relay.reshape(const_7152.astype('float32'), [450,]), relay.reshape(var_7153.astype('int8'), [13, 14]), ), 6)
call_7154 = relay.TupleGetItem(func_5661_call(relay.reshape(const_7152.astype('float32'), [450,]), relay.reshape(var_7153.astype('int8'), [13, 14]), ), 6)
func_4571_call = mod.get_global_var('func_4571')
func_4578_call = mutated_mod.get_global_var('func_4578')
const_7157 = relay.const([5.079956,4.058565,-2.528063,-6.930088,0.769580,5.611717,-5.196386,-0.362311,-2.800114,-5.230104,1.422796,8.094978,-5.708386,-4.007846,8.377401,2.596108,-2.839208,9.605392,7.100363,6.054355,0.816032,6.928948,-5.274143,6.237201,1.479295,-7.641902,-8.464998,9.504034,-3.291166,-8.086305,-4.447228,-9.229608,9.924729,3.854869,-1.121773,5.900409,8.851753,6.767238,-8.583153,-8.827400,-5.754443,7.211905,-9.834847,7.206683,-4.148461,-0.845782,4.551696,5.856451,6.696108,9.099462,4.584294,3.906047,-6.117704,3.025915,7.432170,-8.195758,-3.349960,-6.858502,-0.974367,7.054906,-5.050334,6.902513,7.395216,-5.692424,7.000427,-9.425503,-2.386846,1.190679,-6.508560,-5.079233,7.989599,0.690832,-2.580199,-5.615777,4.779369,5.854349,-4.299273,-4.547883,8.276698,-0.596579,-3.361805,-6.824781,-3.427833,4.273300,-4.743086,-3.930231,2.430804,2.149160,6.890080,-6.015243,-4.158076,-0.964037,1.789243,-5.020800,7.261058,7.236713,9.243507,1.248098,-6.677877,-4.100046,-1.880567,-2.276693,-3.168031,0.128410,4.622663,-3.074390,7.927171,-6.177088,8.662978,5.819400,7.234107,4.333824,-0.816295,-5.118140,9.517748,4.174892,6.838783,2.869927,-3.705535,-1.347022,1.721150,7.719245,1.348172,1.840088,-4.983176,-3.803968,4.546555,-5.951901,-1.666045,-3.714765,8.249690,9.489824,9.166351,-5.947249,6.339463,-5.200604,7.388879,3.074090,7.824396,-8.848462,1.845713,-0.294432,-1.417568,6.405465,3.498742,-7.270099,8.275863,-1.634362,5.235511,-8.830981,9.068821,7.857966,-4.621419,5.366314,6.987020,4.311948,-5.188139,7.441901,-2.829170,4.734412,8.029230,-8.202478,9.857640,7.761031,8.229294,5.178005,-0.720197,-0.171971,7.957458,3.813156,6.320235,-6.079465,-8.099417,-0.423741,-2.776197,-0.774363,6.337935,-8.566349,2.582779,6.272308,-9.869343,2.270840,8.104263,8.852236,-1.075368,8.091140,-1.717542,4.395071,-2.921129,3.375122,-7.174695,-6.256664,2.901847,-0.405110,-3.001379,9.774460,1.152759,-5.771985,-8.941059,9.015460,-7.801279,-6.369570,-2.209336,2.611408,9.186938,9.409914,-5.774461,-2.115492,5.462108,8.425921,-0.402721,-0.624992,0.067060,7.868483,-0.405955,-4.133966,0.524153,5.194137,1.096486,-0.956279,-8.988342,-1.959431,7.097566,-5.531656,6.639780,5.244753,-2.167831,0.682197,-1.184056,-8.304303,-9.070723,1.376651,0.692210,9.045144,4.025409,-6.149195,-0.209933,-0.535407,0.542966,-6.134192,-0.956442,-3.719354,6.076737,1.120489,-3.053989,-0.009495,-5.624180,7.386693,5.958086,-4.787798,-4.150523,-6.845171,6.852483,6.765737,1.910625,-0.829173,8.408512,-0.595181,-9.735910,-9.577176,1.145488,6.572587,-7.965895,-9.345335,-9.593007,-6.314526,5.793089,9.853149,0.869730,8.218836,-8.416757,6.790555,-9.158784,-7.716284,8.002612,-5.089909,7.021819,-3.669095,-4.050174,5.319726,-3.168146,5.326390,-0.562600,-0.790436,8.188880,-6.943985,1.407462,7.449357,-3.947122,8.887676,-0.731173,-7.211998,6.155782,8.286969,1.434061,-3.496914,-0.108249,5.929677,-4.659181,9.824845,5.552895,5.217759,7.461470,8.806375,-3.537038,8.213783,-4.143550,0.413276,-3.780521,8.426134,5.632718,1.490698,8.323157,8.752141,2.865745,-7.842338,-6.697289,4.125391,-5.075002,7.269591,1.923195,-2.795057,5.472374,-6.708621,-2.364771,4.083713,9.439696,-8.158273,-0.220335,4.470432,-3.068899,-1.303474,5.633667,-2.954829,-8.575294,5.239256], dtype = "float64")#candidate|7157|(336,)|const|float64
const_7158 = relay.const([3,-3,2,6,-5,6,3,-3,-9,-8,-5,-7,-1,6,-9,3,7,-10,2,-8,3,6,8,-6,2,-1,7,5,-2,-1,10,-2,-9,-7,-10,-1,10,8,7,-6,-8,-9,4,2,-5,-4,-6,-3,1,-8,-4,2,8,-2,6,7,5,-10,10,-3,-4,1,7,6,1,-9,-5,-8,2,10,-10,-1,-3,-3,2,9,7,5,1,10,-7,6,9,-7,-8,9,5,4,-1,-2,-5,9,8,-3,-7,-10,3,6,-10,3,9,-7,-1,2,-7,5,5,5,-9,-2,-3,-1,-6,6,-10,-7,2,3,4,7,2,-5,-7,-10,-9,5,5,-6,-2,9,5,9,10,3,9,-5,-2,-8,1,7,10,-9,7,6,-10,-1,2,2,-4,-6,-5,-4,1,7,-9,1,-8,6,8,7,10,-2,-10,6,9,8,1,10,3,-6,-4,6,5,-1,6,10,-8,10,-1,3,-6,-6,3,1,-5,-2,3,-3,10,3,2,3], dtype = "int16")#candidate|7158|(192,)|const|int16
var_7159 = relay.var("var_7159", dtype = "uint8", shape = (1536,))#candidate|7159|(1536,)|var|uint8
call_7156 = relay.TupleGetItem(func_4571_call(relay.reshape(const_7157.astype('float64'), [7, 4, 12]), relay.reshape(const_7157.astype('float64'), [7, 4, 12]), relay.reshape(const_7158.astype('int16'), [192,]), relay.reshape(var_7159.astype('uint8'), [1, 1536]), relay.reshape(var_7153.astype('int8'), [182,]), ), 3)
call_7160 = relay.TupleGetItem(func_4578_call(relay.reshape(const_7157.astype('float64'), [7, 4, 12]), relay.reshape(const_7157.astype('float64'), [7, 4, 12]), relay.reshape(const_7158.astype('int16'), [192,]), relay.reshape(var_7159.astype('uint8'), [1, 1536]), relay.reshape(var_7153.astype('int8'), [182,]), ), 3)
output = relay.Tuple([call_7137,call_7151,const_7152,var_7153,call_7156,const_7157,const_7158,var_7159,])
output2 = relay.Tuple([call_7138,call_7154,const_7152,var_7153,call_7160,const_7157,const_7158,var_7159,])
func_7171 = relay.Function([var_7153,var_7159,], output)
mod['func_7171'] = func_7171
mod = relay.transform.InferType()(mod)
mutated_mod['func_7171'] = func_7171
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7171_call = mutated_mod.get_global_var('func_7171')
var_7173 = relay.var("var_7173", dtype = "int8", shape = (182,))#candidate|7173|(182,)|var|int8
var_7174 = relay.var("var_7174", dtype = "uint8", shape = (1536,))#candidate|7174|(1536,)|var|uint8
call_7172 = func_7171_call(var_7173,var_7174,)
output = call_7172
func_7175 = relay.Function([var_7173,var_7174,], output)
mutated_mod['func_7175'] = func_7175
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4315_call = mod.get_global_var('func_4315')
func_4316_call = mutated_mod.get_global_var('func_4316')
call_7207 = func_4315_call()
call_7208 = func_4315_call()
func_6333_call = mod.get_global_var('func_6333')
func_6335_call = mutated_mod.get_global_var('func_6335')
call_7209 = relay.TupleGetItem(func_6333_call(), 0)
call_7210 = relay.TupleGetItem(func_6335_call(), 0)
output = relay.Tuple([call_7207,call_7209,])
output2 = relay.Tuple([call_7208,call_7210,])
func_7212 = relay.Function([], output)
mod['func_7212'] = func_7212
mod = relay.transform.InferType()(mod)
mutated_mod['func_7212'] = func_7212
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7212_call = mutated_mod.get_global_var('func_7212')
call_7213 = func_7212_call()
output = call_7213
func_7214 = relay.Function([], output)
mutated_mod['func_7214'] = func_7214
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3825_call = mod.get_global_var('func_3825')
func_3826_call = mutated_mod.get_global_var('func_3826')
call_7218 = func_3825_call()
call_7219 = func_3825_call()
func_6966_call = mod.get_global_var('func_6966')
func_6968_call = mutated_mod.get_global_var('func_6968')
const_7224 = relay.const([-5.734625,7.366217,-4.106467,-0.573361,-0.314178,-7.251854,-7.378555,-2.078219,6.128055,-6.522666,2.730659,-9.803535,-2.057895,-4.504630,-4.748511,-7.285978,9.369460,-0.674574,0.117015,5.501017,-9.019419,6.449578,5.783818,3.536460,-4.270968,-7.371828,4.566103,-0.279989,3.543182,-5.179342,-8.375478,-9.918044,-5.753982,4.832787,-1.988512,5.456918,-1.735201,4.974050,-8.752264,-1.795305,-3.503052,-2.203504,1.550620,2.804390,3.032099,2.507662,6.373437,3.122547,-8.351222,1.898769,-5.627087,7.053163,1.023154,-3.382973,9.813935,-7.045589,7.914215,-2.905673,1.847169,9.467710,9.590281,-4.631933,5.020300,-1.800296,-7.270249,-7.207164,-6.002971,7.042982,-9.111347,4.519358,2.696075,1.965044,-5.039237,1.443504,8.941325,-6.646767,6.755253,6.526595,-6.110865,-4.845337,8.923751,5.762708,-1.838970,8.381404,0.630059,8.500174,0.797802,5.696297,-2.682295,0.149518,-6.097581,-6.845066,3.201999,-8.355521,1.956371,-7.836272,3.933901,-7.172073,1.009150,-2.436439,-4.172855,6.867088,-4.828002,0.802989,3.020365,-8.750297,-8.779946,-4.002525,0.790420,8.444310,3.121118,7.412535,-9.287676,7.811679,-6.603721,-6.515759,9.150218,-8.162459,-7.511787,-4.887271,-9.746553,4.343379,8.718998,-3.728606,-9.182484,9.605596,-0.884460,-0.622561,-9.746189,-9.436673,3.252856,2.708202,-9.639041,-4.759542,6.856636,-8.703373,-4.968097,-1.585058,3.223677,-8.777471,-5.005044,-8.497142,-0.627956,7.291067,-9.233019,0.791100,-7.730037,-4.439827,-3.828994,-9.974738,6.697386,-9.828896,-8.127658,5.257512,9.784856,-8.800510,8.887350,-5.460053,4.833619,-0.911119,2.677673,-9.176126,-4.953227,-5.522859,1.477936,-7.695380,-3.723586,-8.165960,6.087452,-2.385631,9.135257,-9.008341,4.327276,8.792074,2.571385,-6.988114,1.070867,-1.176490,5.535847,3.345575,7.439108,8.899518,-3.035846,1.507916,5.283324,-9.245007,-4.045081,9.235079,-0.661371,-9.174885,-9.463680,-0.309385,6.637318,9.612766,-1.476806,-8.450968,-0.799533,1.143337,8.699070,-0.086812,-7.786682,-8.522698,-1.224180,3.037733,-4.779646,-5.291060,-1.181172,-4.950526,8.917808,7.341558,-8.763056,-9.145104,6.177303,1.030257,-0.550208,-4.943860,3.956824,2.163767,-2.702337,-7.314426,-6.575545,-1.242559,2.749868,8.399166,-7.556652,-1.773245,-5.768913,-5.078604,-2.341304,-9.192373,4.895522,-8.454250,1.990337,-4.483367,-7.748110,-5.672776,5.425683,4.692129,-3.973127,-7.916258], dtype = "float64")#candidate|7224|(240,)|const|float64
call_7223 = relay.TupleGetItem(func_6966_call(relay.reshape(const_7224.astype('float64'), [24, 10])), 5)
call_7225 = relay.TupleGetItem(func_6968_call(relay.reshape(const_7224.astype('float64'), [24, 10])), 5)
uop_7226 = relay.atanh(call_7218.astype('float64')) # shape=(15, 8, 12)
uop_7228 = relay.atanh(call_7219.astype('float64')) # shape=(15, 8, 12)
output = relay.Tuple([call_7223,const_7224,uop_7226,])
output2 = relay.Tuple([call_7225,const_7224,uop_7228,])
func_7229 = relay.Function([], output)
mod['func_7229'] = func_7229
mod = relay.transform.InferType()(mod)
mutated_mod['func_7229'] = func_7229
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7229_call = mutated_mod.get_global_var('func_7229')
call_7230 = func_7229_call()
output = call_7230
func_7231 = relay.Function([], output)
mutated_mod['func_7231'] = func_7231
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5107_call = mod.get_global_var('func_5107')
func_5108_call = mutated_mod.get_global_var('func_5108')
call_7255 = func_5107_call()
call_7256 = func_5107_call()
func_397_call = mod.get_global_var('func_397')
func_401_call = mutated_mod.get_global_var('func_401')
const_7270 = relay.const([8.396257,-8.146813,-7.425526,-3.386850,0.119025,4.661337,-7.073899,4.503571,-2.285259,-5.957299,-8.035168,0.711393,7.121469,1.401862,-5.898315,7.493624,6.683523,9.074486,-0.612707,2.582569,-0.407383,3.988566,-7.698497,-1.832283,3.162386,-3.196851,-5.737479,-7.870452,-7.342313,-3.700550], dtype = "float64")#candidate|7270|(30,)|const|float64
const_7271 = relay.const([1.053810,-6.501665,-0.838737,-0.872545,0.600498,8.413724,-7.050998,-3.926021,-8.875202,1.669290,-2.702586,-9.277626,5.503411,-0.344447,6.729531,9.409656,-7.388921,-3.949008,7.779143,0.614157,5.899818,-8.713621,-7.886741,7.654649,9.293893,-3.139200,-4.018919,6.651756,8.374526,9.630936,-1.441628,-9.348272,-5.027868,6.416873,1.586320,-3.525488,9.724332,-1.914511,2.654244,8.632714,-4.710200,2.133473,-2.069750,3.188707,-5.093690,-1.059845,4.094286,7.182615,-3.828905,-9.699407,5.914329,-3.704496,8.069873,7.497374,-4.881022,-5.418690,-8.928205,0.788600,-7.893907,-5.903553,0.344759,1.957180,1.463080,9.112120,-3.056224,0.536617,-8.213717,-6.501314,-1.730400,7.844437,-2.294610,-3.987062,7.283721,-9.713823,-3.078058,-8.581764,3.928586,-3.695869,-6.497644,-8.342284,0.120223,-2.092292,4.167570,-8.517215,-6.322848,-4.461782,3.175033,4.536024,9.778363,-8.761293,2.215795,3.601401,-6.328476,4.610958,9.351721,9.693937,-6.803031,3.455165,8.958213,4.141038,1.576021,-1.710036,-1.419845,0.437604,0.428027,2.639696,-2.503191,-4.323642,6.270731,2.206846,3.559772,8.105317,-4.725130,-0.788006,-7.921484,-9.875953,3.227345,-7.318362,-5.593321,0.102318,2.176370,-1.303620,-6.421069,1.933701,7.995536,-0.060081,1.234907,-0.552056,-1.636644,8.199022,-6.787773,-8.086080,8.427371,-7.409554,-1.592834,2.268489,-8.884657,6.761250,-7.228644,-8.496410,7.220773,2.207631,6.097851,9.445431,-3.410841,-8.075217,-0.112792,-3.410596,-1.386048,7.172977,9.586077,-7.836649,5.881847,-2.823111,-0.879649,5.330354,0.866258,2.347627,-5.865478,1.973101,8.159807,5.885492,-2.857381,6.400184,-9.400917,-9.687211,-9.273433,-0.535881,-4.035110,2.778075,1.877302,9.993514,5.825354,0.118157,1.846426,-9.833128,3.166678,-5.893670,-2.350739,-2.237868,-4.992675,-8.547467,3.245516,-2.479255,0.496046,0.894902,-0.768730,7.200317,7.615833,0.822404,2.784410,8.909675,-0.042831,9.551926,-4.112071,2.911298,-1.253891,5.138501,-5.430572,3.562113,7.079941,5.012116,4.841641,-8.312099,5.936068,4.954267,4.314827,4.985294,-4.125866,-1.561462,-6.981689,-6.920411,6.312240,4.882653,1.085631,6.706920,8.462286,8.536850,-3.062883,1.548652,7.241349,-0.378837,2.380525,-1.009114,-3.304656,-8.650149,5.638116,4.388286,-5.244546,-6.188567,-2.710730,0.341874,-8.650010,-2.924402,-6.152671,8.831415,5.517737,-9.824558,7.019260,-5.447990,-9.981614,6.490411,8.785984,-4.184290,1.500785,-9.807496,4.454368,9.882798,-1.126300,-0.626715,5.272384,-0.702908,1.017095,7.605927,-8.999783,3.341718,5.971661,-1.959643,6.781098,-2.827894,3.345802,-1.405270,-8.105283,4.902007,-8.701234,8.348271,9.888929,-3.571720,2.100539,7.797426,6.880712,-6.767302,9.686681,-0.951056,5.111596,7.491207,9.708827,6.697506,4.508377,-6.270322,-8.673147,7.537623,0.028442,5.037531,-0.938541,-8.693143,1.982440,-0.979494,8.835277,1.465808,1.039554,-0.402460,0.755530,6.506308,-5.306706,-6.695141,2.878692,-3.215173,7.705413,2.881739,-5.835534,9.385606,-2.070712,9.435452,-1.679677,3.979962,8.247762,-1.908766,4.046036,-4.357966,9.633773,3.061390,-4.265848,-9.602578,8.322560,7.169895,8.575608,5.399778,-6.817237,-8.027986,9.298430,8.435280,8.664882,0.169614,2.203741,-2.322144,-0.880725,9.306186,7.150924,-5.526918,-4.643371,-2.521191,4.533150,0.091178,-4.231216,-0.063592,9.294295,1.806017,-7.234230,-7.235700,-2.409880,-9.479357,-2.470898,9.356143,7.533176,-9.394289,-9.207234,-0.096013,-4.706702,3.495001,8.613860,-4.736077,6.704298,1.786365,7.821289,4.378324,-0.309122,-8.186194,-9.839037,-5.709129,-6.739400,4.629700,7.970192,-2.297484,5.782589,6.716214,3.634859,-6.170065,4.215234,-2.173810,6.512926,-1.470305,-5.872631,-2.999746,-6.320822,-4.807713,3.337979,6.666735,5.829624,-8.728051,-4.347738,0.866598,2.214084,-3.837412,1.198241,3.059885,9.735986,-8.497840,3.710980,-1.132864], dtype = "float64")#candidate|7271|(390,)|const|float64
call_7269 = relay.TupleGetItem(func_397_call(relay.reshape(const_7270.astype('float64'), [10, 1, 3]), relay.reshape(const_7271.astype('float64'), [10, 13, 3]), ), 0)
call_7272 = relay.TupleGetItem(func_401_call(relay.reshape(const_7270.astype('float64'), [10, 1, 3]), relay.reshape(const_7271.astype('float64'), [10, 13, 3]), ), 0)
func_3690_call = mod.get_global_var('func_3690')
func_3695_call = mutated_mod.get_global_var('func_3695')
const_7281 = relay.const([-5,7,-1,-5,-8,10,7,3,-7,-7,-6,-7,8,7,7,4,-6,-9,-1,-5,-1,4,1,3,-6,1,9,-2,5,3,-5,6,-9,-10,1,1,10,-10,-5,-1,5,-3,-3,1,4,10,2,3,-10,6,-10,-3,-4,-5,8,-10,-9,7,-9,10,4,-5,5,-2,2,-6,6,-5,2,9,-6,-5,5,-9,-10,-8,-8,-5,-2,7,4,6,-3,-10,3,-7,2,5,3,2,4,2,-4,4,3,-7,7,8,-6,-6,-10,9,-4,9,-2,-3,-2,8,-1,9,-8,-2,4,4,10,1,3,-4,-6,-8,-4,5,-5,2,-7,-1,-9,-7,-3,-3,1,3,-3,4,-9,-10,-3,-1,-7,-6,3,-7,-8,-3,9,4,-9,-5,3,6,2,-7,8,-3,2,-9,-7,-5,-5,8,6,4,-8,-2,8,4,-3,-5,10,7,-9,7,5,3,-2,-3,-2,6,6,10,5,6,-7,-10,-10,1,5,7,9,1,-10,10,1,-9,-5,3,-5,9,-9,-10], dtype = "int8")#candidate|7281|(200,)|const|int8
const_7282 = relay.constdtype = "float32")#candidate|7282|(154, 14)|const|float32
const_7283 = relay.const([-4,-9,-1,10,-3,3,-1,4,3,1,-8,-2,-10,-10,-9,2,-10,-8,1,10,-2,5,-9,-3,6,-8,4,7,-8,-3,-10,10,5,10,5,9,5,1,4,-8,6,5,3,-6,-9,-8,3,10,6,-5,9,8,-1,-8,3,-5,2,-10,2,-8,6,-3,-5,-8,-10,-4,10,-3,-3,6,-8,4,3,-7,-2,7,10,-5,-2,8,8,10,-7,9,-5,7,-7,3,7,-4,-4,4,-2,1,-6,3,2,-3,8,1,6,7,1,3,2,6,10,-2,-1,-4,1,-10,-5,-3,5,-4,-4,-6,5,-4,7,-4,1,9,8,-8,5,3,-3,10,-4,10,-7,4,6,-10,-9,-9,-8,-2,-4,-7,-10,-8,1,-4,-4,5,-1,-5,9,9,8,6,-8,4,9,-10,4,-6,6,9,4,-3,-3,3,2,9,4,7,4,-6,5,-5,-6,3,1,-3,-6,-2,-3,-10,-1,-6,-4,8,6,-2,10,1,8,-9,6,6,6,-10,6,-5,-8,-1,4,2,-3,-1,6,10,-6,5,-9,-5,-10,6,-6,3,10,8,-3,-3,9,-1,8,8,-8,-7,5,-4,6,1,10,5,9,-5,-6,-1,4,1,-3,3,4,-10,1,-6,-5,6,2,-7,-7,-3,1,-9,8,-5,10,2,-10,-3,-6,6,5,-5,5,7,-4,-4,-6,8,-4,-5,-2,8,-7,1,-9,3,10,10,1,5,8,2,6,-10,-4,-5,-1,-8,-4,-2,-7,7,-4,-3,4,4,-1,8,6,-8,-2,-7,-5,-1,-6,-2,-9,-2,-7,10,5,5,-2,-3,-2,1,1,-9,4,5,-5,5,-5,-7,-4,-4,-2,-4,4,3,8,2,-1,-8,-2,-7,8,-1,8,5,-4,2,-8,2,-6,7,-8,-5,-9,6,-4,8,-6,6,6,8,10,8,6,9,-7,-6,-5,-8,4,8,8,9,-5,-7,-6,-3,-5,-4,4,-3,-2,-8,1,-1,-9,-2,-7,10,-8,4,-4,-2,-1,7,2,6,10,10,9,6,-2,-6,1,-2,-5,-3,-5,-7,1,-2,6,6,-2,-9,10,9,-4,-3,-3,4,-1,-6,-1,-5,-8,7,4,2,-10,5,4,3,10,-3,-9,10,3,8,-10,-8,9,2,9,-9,3,-10,-1,5,9,2,-4,-9,10,-2,-2,9,-4,-7,3,3,-4,-4,-7,4,-8,3,-1,-10,-4,1,1,-9,1,9,4,1,-6,-2,-4,9,5,6,6,8,6,-6,-1,3,3,-5,5,-6,3,-4,-2,-8,4,-2,-10,10,2,-5,1,5,2,-2,8,-10,5,7,-4,4,-1,-10,-9,-8,-6,-3,1,-2,8,1,-3,-6,-2,6,9,6,8,-10,-6,-7,-1,9,8,4,7,-3,-4,-9,-3,-4,4,-2,-8,9,-1,4,9,-4,7,5,5,6,-9,8,7,4,-4,2,-9,3,9,3,-3,5,7,5,9,1,-4,10,3,-3,-8,-8,-7,-8,10,-6,-8,-4,10,9,9,-7,-1,6,-9,-10,5,-6,10,-1,-5,5,8,10,-9,9,-9,2,-3,1,-7,-1,-10,7,10,10,4,9,-5,10,-6,-3,-5,-4,-3,-10,-7,-5,7,4,-9,-3,2,-7,-10,2,-7,-10,9,-1,-10,-5,4,-1,3,8,-2,6,-2,-2,1,-8,-10,-1,4,-3,6,1,-9,3,-8,3,4,5,-4,6,-10,4,-3,-8,10,3,-9,-8,-5,-2,3,-4,-7,-1,-5,-8,3,4,10,5,3,-8,10,-5,-8,-9,-2,-8,-3,4,7,-4,6,8,-10,-6,9,-7,1,-6,-7,-9,-2,-2,9,-5,-5,-9,-9,-7,-8,-1,-8,-7,-10,-7,10,10,7,8,-5,2,-4,-3,8,1,2,4,-2,-8,-6,1,-2,-9,-10,-5,-2,5,8,8,-7,-1,-10,-10,5,-5,4,8,-7,-7,4,2,-8,1,-6,-9,9,-5,-4,3,4,2,-6,-5,5,-9,-3,4,-9,-7,-5,9,8,-5,8,4,6,9,-6,4,-6,10,-4,-3,3,-8,-6,-4,-1,-9,-7,-1,8,-6,4,-6,2,4,-4,9,-4,-6,3,7,1,3,8,2,3,2,9,-2,6,9,10,7,-6,-6,-5,5,10,3,-1,6,6,-5,-8,7,4,3,-5,-10,7,10,-1,-7,2,-1,-8,10,4,8,4,-5,-1,-4,1,7,-2,-10,-3,-5,1,-1,10,-3,-9,-6,6,3,2,-6,-1,-10,2,-7,-1,4,-8,-10,-8,-5,-4,2,-4,7,-2,8,-8,8,2,-6,8,6,-7,-4,-9,-4,10,3,10,-8,5,-6,6,-2,7,-3,2,-1,-4,-3,-2,8,-2,-5,-10,-5,-1,-7,-4,7,-1,-6,-10,9,2,8,1,-5,6,-5,5,3,-10,-6,1,6,6,4,-1,-1,-9,8,-5,-2,4,-9,-9,8,-3,2,10,8,1,1,7,4,10,-5,-4,-6,-6,9,7,3,-2,6,4,-7,7,7,-1,-9,5,-8,1,-9,-10,10,-6,7,-9,-1,10,8,-9,3,-9,2,6,-3,5,6,10,3,9,7,5,-3,-5,2,7,3,8,10,-7,-5,-4,-6,-6,-4,8,-5,9,-8,10,-10,7,-4,1,1,6,-10,4,7,-6,-7,4,9,-9,-10,9,7,-5,1,3,-4,7,-9,2,2,-1,-2,10,-8,10,-9,8,-5,5,1,-9,8,10,10,5,10,3,-9,-5,2,-7,-4,-7,9,4,-1,-4,-10,4,6,2,-5,2,-7,-5,2,-2,-6,-5,10,-3,-4,-7,3,4,3,7,-2,4,-6,10,10,4,10,8,-9,-8,10,-9,7,2,1,9,-10,5,-3,-4,9,-8,-7,9,-9,-1,4,-4,3,-2,7,10,-4,3,-1,10,-5,9,5,8,-4,-5,-8,9,4,8,3,-1,4,-6,-1,5,3,5,-3,-3,3,7,-8,-5,-10,-6,-4,1,10,-2,-4,-4,2,-6,-4,2,-7,-9,5,-7,-10,7,-9,9,-6,10,-10,6,6,5,-10,-7,5,-4,-3,-5,-8,-4,-5,-6,-6,2,3,-7,1,-8,8,10,3,-4,-8,7,5,3,-8,2,7,9,-1,6,-8,-3,-10,-10,10,9,-6,2,-10,3,5,-2,-7,-10,-9,2,-3,-4,9,-5,-1,-7,-1,-10,5,10,9,10,-5,6,-9,1,-3,-4,-10,-3,3,10,8,-6,-3,1,-8,-8,3,7,2,5,-5,-2,-10,-8,5,-9,-5,-6,-1,8,1,-2,-10,8,7,9,-6,8,6,-1,1,-3,-4,5,-7,-5,-9,-5,-6,-2,8,-6,4,10,-8,-10,10,-5,2,2,-3,10,-3,-2,7,3,-9,8,5,-3,7,-3,-5,-3,-8,-8,1,-4,2,5,-2,-5,-1,4,10,-8,9,6,-10,2,-4,-9,-10,-1,-1,-4,-7,1,1,-2,3,2,1,-5,-8,9,9,7,2,-4,4,-5,-8,-9,-4,-1,-2,8,-2,-4,-1,-2,-4,-2,9,-1,-7,-6,-3,-1,7,-3,-7,-2,-5,9,1,8,2,-2,-7,6,9,6,-8,-10,-3,3,3,8,2,-4,9,-8,4,-2,3,5,-9,-4,2,-9,7,6,7,-10,1,2,7,-3,-10,-2,-2,-6,1,-5,4,-9,-7,-2,9,3,-7,-4,-5,-3,-9,-7,-3,-9,3,-7,-1,9,-3,4,5,4,2,-6,2,-1,4,1,1,2,-7,4,-7,-7,3,2,9,-10,3,-8,-5,7,7,9,-9,3,-9,-5,-9,5,-6,-2,3,5,-9,-3,10,-6,-10,-6,-3,7,7,8,-8,9,-10,-8,4,10,-6,8,3,-2,6,-3,8,-2,-4,10,3,-6,10,-7,5,8,10,-7,9,-7,-9,5,-10,4,-7,-8,4,3,-5,-8,8,4,-9,3,2,2,-10,-1,-4,-6,9,-1,-7,-5,-5,-5,-9,2,-7,6,5,-3,7,-5,8,1,-7,-8,-7,7,8,-4,8,-4,1,6,-2,-8,2,-9,9,6,2], dtype = "uint8")#candidate|7283|(1536,)|const|uint8
var_7284 = relay.var("var_7284", dtype = "int32", shape = (2, 728))#candidate|7284|(2, 728)|var|int32
call_7280 = relay.TupleGetItem(func_3690_call(relay.reshape(const_7281.astype('int8'), [200,]), relay.reshape(const_7282.astype('float32'), [2156,]), relay.reshape(const_7283.astype('uint8'), [1536,]), relay.reshape(var_7284.astype('int32'), [2, 728]), ), 0)
call_7285 = relay.TupleGetItem(func_3695_call(relay.reshape(const_7281.astype('int8'), [200,]), relay.reshape(const_7282.astype('float32'), [2156,]), relay.reshape(const_7283.astype('uint8'), [1536,]), relay.reshape(var_7284.astype('int32'), [2, 728]), ), 0)
func_6316_call = mod.get_global_var('func_6316')
func_6317_call = mutated_mod.get_global_var('func_6317')
call_7296 = relay.TupleGetItem(func_6316_call(), 0)
call_7297 = relay.TupleGetItem(func_6317_call(), 0)
output = relay.Tuple([call_7255,call_7269,const_7270,const_7271,call_7280,const_7281,const_7282,const_7283,var_7284,call_7296,])
output2 = relay.Tuple([call_7256,call_7272,const_7270,const_7271,call_7285,const_7281,const_7282,const_7283,var_7284,call_7297,])
func_7298 = relay.Function([var_7284,], output)
mod['func_7298'] = func_7298
mod = relay.transform.InferType()(mod)
mutated_mod['func_7298'] = func_7298
mutated_mod = relay.transform.InferType()(mutated_mod)
var_7299 = relay.var("var_7299", dtype = "int32", shape = (2, 728))#candidate|7299|(2, 728)|var|int32
func_7298_call = mutated_mod.get_global_var('func_7298')
call_7300 = func_7298_call(var_7299)
output = call_7300
func_7301 = relay.Function([var_7299], output)
mutated_mod['func_7301'] = func_7301
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5107_call = mod.get_global_var('func_5107')
func_5108_call = mutated_mod.get_global_var('func_5108')
call_7350 = func_5107_call()
call_7351 = func_5107_call()
func_4194_call = mod.get_global_var('func_4194')
func_4196_call = mutated_mod.get_global_var('func_4196')
call_7352 = relay.TupleGetItem(func_4194_call(), 1)
call_7353 = relay.TupleGetItem(func_4196_call(), 1)
func_6114_call = mod.get_global_var('func_6114')
func_6117_call = mutated_mod.get_global_var('func_6117')
call_7357 = relay.TupleGetItem(func_6114_call(relay.reshape(call_7352.astype('float32'), [810,])), 1)
call_7358 = relay.TupleGetItem(func_6117_call(relay.reshape(call_7352.astype('float32'), [810,])), 1)
output = relay.Tuple([call_7350,call_7352,call_7357,])
output2 = relay.Tuple([call_7351,call_7353,call_7358,])
func_7363 = relay.Function([], output)
mod['func_7363'] = func_7363
mod = relay.transform.InferType()(mod)
mutated_mod['func_7363'] = func_7363
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7363_call = mutated_mod.get_global_var('func_7363')
call_7364 = func_7363_call()
output = call_7364
func_7365 = relay.Function([], output)
mutated_mod['func_7365'] = func_7365
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4125_call = mod.get_global_var('func_4125')
func_4127_call = mutated_mod.get_global_var('func_4127')
call_7410 = relay.TupleGetItem(func_4125_call(), 2)
call_7411 = relay.TupleGetItem(func_4127_call(), 2)
output = relay.Tuple([call_7410,])
output2 = relay.Tuple([call_7411,])
func_7423 = relay.Function([], output)
mod['func_7423'] = func_7423
mod = relay.transform.InferType()(mod)
output = func_7423()
func_7424 = relay.Function([], output)
mutated_mod['func_7424'] = func_7424
mutated_mod = relay.transform.InferType()(mutated_mod)
var_7435 = relay.var("var_7435", dtype = "float64", shape = (6, 7, 12))#candidate|7435|(6, 7, 12)|var|float64
uop_7436 = relay.asinh(var_7435.astype('float64')) # shape=(6, 7, 12)
output = relay.Tuple([uop_7436,])
output2 = relay.Tuple([uop_7436,])
func_7471 = relay.Function([var_7435,], output)
mod['func_7471'] = func_7471
mod = relay.transform.InferType()(mod)
var_7472 = relay.var("var_7472", dtype = "float64", shape = (6, 7, 12))#candidate|7472|(6, 7, 12)|var|float64
output = func_7471(var_7472)
func_7473 = relay.Function([var_7472], output)
mutated_mod['func_7473'] = func_7473
mutated_mod = relay.transform.InferType()(mutated_mod)
var_7485 = relay.var("var_7485", dtype = "float64", shape = (2, 8, 1))#candidate|7485|(2, 8, 1)|var|float64
uop_7486 = relay.acosh(var_7485.astype('float64')) # shape=(2, 8, 1)
output = uop_7486
output2 = uop_7486
func_7491 = relay.Function([var_7485,], output)
mod['func_7491'] = func_7491
mod = relay.transform.InferType()(mod)
mutated_mod['func_7491'] = func_7491
mutated_mod = relay.transform.InferType()(mutated_mod)
var_7492 = relay.var("var_7492", dtype = "float64", shape = (2, 8, 1))#candidate|7492|(2, 8, 1)|var|float64
func_7491_call = mutated_mod.get_global_var('func_7491')
call_7493 = func_7491_call(var_7492)
output = call_7493
func_7494 = relay.Function([var_7492], output)
mutated_mod['func_7494'] = func_7494
mutated_mod = relay.transform.InferType()(mutated_mod)
var_7540 = relay.var("var_7540", dtype = "float64", shape = (10, 3, 15))#candidate|7540|(10, 3, 15)|var|float64
uop_7541 = relay.rsqrt(var_7540.astype('float64')) # shape=(10, 3, 15)
uop_7544 = relay.acos(var_7540.astype('float32')) # shape=(10, 3, 15)
bop_7548 = relay.subtract(var_7540.astype('float32'), relay.reshape(uop_7544.astype('float32'), relay.shape_of(var_7540))) # shape=(10, 3, 15)
var_7551 = relay.var("var_7551", dtype = "float64", shape = (10, 3, 15))#candidate|7551|(10, 3, 15)|var|float64
bop_7552 = relay.less(var_7540.astype('bool'), relay.reshape(var_7551.astype('bool'), relay.shape_of(var_7540))) # shape=(10, 3, 15)
func_2610_call = mod.get_global_var('func_2610')
func_2613_call = mutated_mod.get_global_var('func_2613')
var_7556 = relay.var("var_7556", dtype = "float32", shape = (640,))#candidate|7556|(640,)|var|float32
call_7555 = relay.TupleGetItem(func_2610_call(relay.reshape(var_7556.astype('float32'), [8, 10, 8])), 0)
call_7557 = relay.TupleGetItem(func_2613_call(relay.reshape(var_7556.astype('float32'), [8, 10, 8])), 0)
func_6268_call = mod.get_global_var('func_6268')
func_6271_call = mutated_mod.get_global_var('func_6271')
var_7564 = relay.var("var_7564", dtype = "int16", shape = (192,))#candidate|7564|(192,)|var|int16
call_7563 = relay.TupleGetItem(func_6268_call(relay.reshape(var_7564.astype('int16'), [2, 96])), 1)
call_7565 = relay.TupleGetItem(func_6271_call(relay.reshape(var_7564.astype('int16'), [2, 96])), 1)
func_4007_call = mod.get_global_var('func_4007')
func_4009_call = mutated_mod.get_global_var('func_4009')
call_7570 = func_4007_call()
call_7571 = func_4007_call()
func_6647_call = mod.get_global_var('func_6647')
func_6648_call = mutated_mod.get_global_var('func_6648')
call_7579 = relay.TupleGetItem(func_6647_call(), 0)
call_7580 = relay.TupleGetItem(func_6648_call(), 0)
func_5049_call = mod.get_global_var('func_5049')
func_5053_call = mutated_mod.get_global_var('func_5053')
var_7588 = relay.var("var_7588", dtype = "uint32", shape = (60,))#candidate|7588|(60,)|var|uint32
call_7587 = relay.TupleGetItem(func_5049_call(relay.reshape(var_7588.astype('uint32'), [10, 3, 2]), relay.reshape(var_7588.astype('uint32'), [10, 3, 2]), ), 1)
call_7589 = relay.TupleGetItem(func_5053_call(relay.reshape(var_7588.astype('uint32'), [10, 3, 2]), relay.reshape(var_7588.astype('uint32'), [10, 3, 2]), ), 1)
output = relay.Tuple([uop_7541,bop_7548,bop_7552,call_7555,var_7556,call_7563,var_7564,call_7570,call_7579,call_7587,var_7588,])
output2 = relay.Tuple([uop_7541,bop_7548,bop_7552,call_7557,var_7556,call_7565,var_7564,call_7571,call_7580,call_7589,var_7588,])
func_7592 = relay.Function([var_7540,var_7551,var_7556,var_7564,var_7588,], output)
mod['func_7592'] = func_7592
mod = relay.transform.InferType()(mod)
mutated_mod['func_7592'] = func_7592
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7592_call = mutated_mod.get_global_var('func_7592')
var_7594 = relay.var("var_7594", dtype = "float64", shape = (10, 3, 15))#candidate|7594|(10, 3, 15)|var|float64
var_7595 = relay.var("var_7595", dtype = "float64", shape = (10, 3, 15))#candidate|7595|(10, 3, 15)|var|float64
var_7596 = relay.var("var_7596", dtype = "float32", shape = (640,))#candidate|7596|(640,)|var|float32
var_7597 = relay.var("var_7597", dtype = "int16", shape = (192,))#candidate|7597|(192,)|var|int16
var_7598 = relay.var("var_7598", dtype = "uint32", shape = (60,))#candidate|7598|(60,)|var|uint32
call_7593 = func_7592_call(var_7594,var_7595,var_7596,var_7597,var_7598,)
output = call_7593
func_7599 = relay.Function([var_7594,var_7595,var_7596,var_7597,var_7598,], output)
mutated_mod['func_7599'] = func_7599
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4809_call = mod.get_global_var('func_4809')
func_4811_call = mutated_mod.get_global_var('func_4811')
call_7638 = relay.TupleGetItem(func_4809_call(), 0)
call_7639 = relay.TupleGetItem(func_4811_call(), 0)
output = call_7638
output2 = call_7639
func_7654 = relay.Function([], output)
mod['func_7654'] = func_7654
mod = relay.transform.InferType()(mod)
output = func_7654()
func_7655 = relay.Function([], output)
mutated_mod['func_7655'] = func_7655
mutated_mod = relay.transform.InferType()(mutated_mod)
const_7736 = relay.const([[[10,-10,5,-7,-10,-4,10,-10],[-5,2,3,-3,-3,-1,-3,2],[-6,-4,-6,-4,3,5,-9,6],[1,4,-3,10,-9,-1,-3,6],[7,2,3,2,-6,-1,3,-9],[-5,-10,-9,6,-5,-10,2,-10],[8,-6,8,8,6,8,-7,4],[9,2,-6,4,7,-10,2,10]],[[1,-10,4,4,-5,9,-9,-6],[7,-6,6,4,6,2,3,-7],[-10,3,4,3,-10,-1,-5,9],[5,-7,-7,-4,-7,2,-2,2],[5,5,-3,-9,3,1,-1,4],[-6,-8,-3,8,1,-10,9,5],[7,5,2,-10,8,-7,-2,4],[3,10,6,-8,8,-2,-9,-4]],[[10,-6,-5,-9,10,3,-8,-9],[-9,-9,-7,-4,2,-3,-2,9],[6,4,2,6,1,3,6,-2],[-10,-2,5,-1,1,-10,-3,-6],[-4,10,-6,-9,8,8,-5,1],[-9,-2,2,-3,-9,5,-6,1],[-1,-8,-9,-4,1,3,10,1],[10,6,-9,2,-6,10,-9,-1]],[[-1,-9,-6,-9,5,-4,7,-6],[1,6,5,-5,-8,10,-5,-10],[-10,9,2,-6,2,-5,7,4],[5,5,-10,10,7,-5,-3,-1],[4,2,9,-4,-7,-10,10,2],[5,-7,10,-3,7,1,3,-2],[3,-4,1,-5,-6,-5,-8,4],[-4,6,-6,3,9,3,10,-8]],[[1,-7,-9,-3,7,1,-4,-9],[-6,6,-6,-7,-5,-6,10,-9],[-7,5,3,10,5,5,8,10],[1,-10,-7,1,-9,-8,-2,-2],[-7,4,5,8,-7,1,-9,3],[-9,6,-10,-7,-3,-8,3,-3],[-6,-8,2,1,1,7,3,9],[-3,-5,1,9,-6,-8,-8,-9]],[[9,-3,3,2,-4,-3,1,6],[-8,-4,-4,2,2,10,2,-2],[5,4,9,-4,-7,1,-1,-9],[-9,-8,7,-4,-2,1,-2,-7],[-10,6,8,-4,9,2,-4,10],[7,-8,-8,3,5,-5,9,-5],[-6,-10,-1,1,2,3,-6,9],[1,-8,-8,-10,-7,9,9,-4]],[[-4,-9,-9,-8,-4,4,4,-5],[-1,-5,-4,-1,9,6,5,-5],[2,-8,4,9,5,-2,-9,3],[8,8,-2,-4,10,-1,9,7],[-1,2,9,5,-9,4,-2,7],[-6,3,-3,-10,-6,-1,8,8],[-1,5,6,-7,-7,-2,-9,-2],[-3,4,3,-2,-5,-5,10,-4]],[[-6,2,-1,6,1,8,6,-6],[6,-6,4,-1,10,3,1,-1],[-6,-8,4,-4,3,-5,-3,-9],[-1,-9,2,3,6,-2,-3,6],[7,-4,-10,-6,-10,6,-3,4],[10,8,-5,-4,7,10,10,-9],[1,-8,2,6,6,-7,6,3],[-5,8,4,-3,-9,-2,8,-5]],[[-5,-2,6,8,1,-1,7,3],[-8,3,6,-2,-8,3,6,-5],[-3,-7,-6,-3,10,-5,1,-10],[10,9,-9,10,-7,-3,1,3],[6,4,-7,-10,10,-6,3,8],[-9,-9,9,-6,-2,-1,-9,-8],[-8,-9,-7,4,4,8,7,-3],[6,7,-9,4,-1,6,-3,5]],[[5,6,2,-1,9,-6,-9,5],[10,3,-4,-3,-3,-7,1,6],[7,-2,-2,-9,-6,7,5,1],[3,-5,10,-6,-6,9,-6,-5],[-9,-3,-2,9,-7,-3,8,6],[-7,-10,10,2,-8,3,-8,-8],[7,-5,4,-7,2,-3,-4,-4],[1,-8,2,7,10,6,8,2]],[[-5,-6,-3,-10,-5,-5,-4,-9],[-5,-8,-8,-6,4,-8,-6,-2],[9,10,3,7,4,6,-3,7],[-6,4,1,-4,-2,9,-5,8],[1,8,-9,3,-8,-5,5,-8],[6,-5,-2,2,-3,1,-6,-4],[1,10,-6,5,-1,7,-10,-7],[9,-3,-2,4,-10,3,-5,2]],[[6,6,-4,-10,-1,4,-3,10],[-4,-10,2,10,-8,5,-10,7],[-8,2,4,-10,8,-6,5,-3],[-1,-5,-9,-4,-10,10,7,-7],[-10,10,10,9,-3,9,5,9],[4,-10,1,-10,4,-2,-9,7],[-8,5,4,-4,-1,9,4,1],[-1,3,-4,2,4,8,-3,-5]],[[9,-6,4,-3,2,10,-7,-6],[-1,-10,-3,-4,6,-2,-6,-9],[7,-1,5,5,-4,-3,-7,1],[7,4,8,7,-7,-5,6,-9],[7,-3,1,-10,-2,-10,-2,-8],[6,1,7,8,-8,8,-4,4],[-6,-4,4,4,6,8,6,-9],[5,6,7,-9,-4,-9,-5,-10]],[[2,10,7,-6,9,-1,8,-9],[7,9,7,10,-5,2,2,1],[-5,9,-4,-4,-9,-9,-2,-1],[4,-4,-8,-4,3,-2,-7,8],[5,-3,4,-3,-2,-1,-5,-5],[2,9,6,-2,-9,-4,9,-8],[1,5,-1,-10,3,7,-4,6],[-4,6,10,10,4,6,8,-10]]], dtype = "uint8")#candidate|7736|(14, 8, 8)|const|uint8
const_7737 = relay.const([[[-4,7,6,-7,9,-1,2,-7],[2,7,9,6,-4,4,-9,5],[-1,-7,-4,-5,10,-6,-4,1],[3,7,8,9,2,1,-8,-7],[1,-8,-2,-9,-1,-7,10,-10],[7,-6,-1,-7,6,6,-4,-5],[-1,-3,-7,7,7,-2,-1,-9],[-10,-1,10,3,6,10,-6,-9]],[[9,10,-4,4,1,8,10,10],[2,10,1,-8,5,-1,6,-8],[1,10,6,-7,-2,1,-4,-4],[4,10,9,6,-9,-7,-6,7],[2,5,1,-5,6,-7,-8,-9],[-6,2,9,1,5,-1,2,2],[-5,-4,-8,-1,6,7,10,-6],[6,-4,-6,-1,3,-5,9,-1]],[[-4,-3,5,-9,2,2,-3,-10],[8,4,-9,6,8,-8,-1,-3],[5,9,8,8,-5,3,1,-9],[-7,3,-9,-9,4,-3,-6,10],[-10,1,9,1,-2,-4,-8,-1],[5,1,7,-10,-7,4,1,7],[4,-1,-7,-7,-7,-9,-3,9],[8,-3,-10,-4,7,-10,-5,-10]],[[-5,2,-3,9,1,6,2,-1],[5,-5,-6,-4,8,-1,-3,4],[2,-9,6,-7,-8,8,-8,8],[4,10,4,-2,10,-7,-4,10],[-4,3,7,-6,2,-4,-4,6],[8,7,2,4,5,-6,10,-7],[6,-6,-1,-7,6,-5,-6,8],[9,-3,7,6,9,-2,-9,-3]],[[10,-8,-2,6,-6,6,-4,-5],[-10,-7,-8,-10,4,-3,-1,-9],[-8,4,4,5,2,2,-10,10],[-7,-8,9,-1,-9,9,-3,-1],[-7,-10,-4,1,-10,2,1,-9],[-1,3,-4,5,9,3,2,2],[10,10,-8,-2,3,-8,7,5],[6,-8,-2,-4,-8,-4,5,-2]],[[9,1,-3,8,8,-4,-5,3],[-7,-4,5,-2,6,-5,-4,-6],[-9,2,9,-9,8,-1,2,-6],[6,-10,7,6,-7,-4,8,-4],[6,-10,-6,1,-2,-6,-6,-3],[-2,3,-2,3,-10,2,9,-6],[2,10,-4,-1,-1,1,9,10],[-5,-3,4,10,-4,-3,-8,6]],[[4,7,6,4,-5,7,-9,7],[1,-4,-5,8,-7,-4,9,-5],[7,1,-8,-1,2,-8,6,-6],[3,-4,4,-2,5,6,-6,-9],[10,4,-8,2,-4,10,6,-9],[-6,9,-4,-1,-7,-5,5,-3],[5,-7,-4,-1,-1,-10,-9,-6],[-1,6,-6,-6,-3,5,4,-5]],[[5,10,-2,10,3,8,3,6],[-9,-1,9,-9,8,-10,-9,-9],[-8,-6,9,-4,9,2,-8,-6],[-3,3,4,-4,-5,3,1,2],[1,2,5,-10,-9,-6,3,3],[9,-7,1,3,6,-4,8,-6],[4,-8,-3,-5,3,9,-3,1],[10,5,7,-7,-6,10,7,-2]],[[4,-1,-10,-9,-10,-6,-1,-5],[5,4,9,-5,-4,-8,8,1],[-2,1,1,-3,-8,-5,8,-4],[1,-4,-9,3,1,4,1,-3],[10,-5,4,3,8,3,-10,-8],[-2,1,-9,-7,-8,-2,-8,4],[-9,-10,-6,2,-5,-10,1,7],[-10,7,5,-10,4,-5,-8,-10]],[[-9,-7,5,1,-6,4,8,-9],[10,-8,9,-1,1,-3,7,4],[-4,-1,2,-9,-2,4,-4,8],[10,-2,-5,1,-9,5,-8,9],[1,10,-3,-2,6,9,-10,6],[3,10,-1,4,-5,-3,7,2],[-6,-1,-5,-8,-10,1,-1,3],[-4,-4,4,-4,-6,-2,1,-10]],[[8,7,-6,-4,-1,-6,1,8],[2,2,-9,-7,-5,7,10,-4],[1,-4,8,3,3,2,1,-1],[4,-1,2,-10,-4,3,-4,-4],[10,-2,-6,-8,4,-2,3,-8],[-9,-2,4,9,8,-3,1,-9],[-7,-3,-6,1,2,5,-9,2],[3,-2,-5,6,-3,6,-6,8]],[[6,6,2,-1,1,10,10,-9],[-6,-1,-1,4,4,1,5,-5],[1,-4,-7,9,-3,-9,3,-8],[-10,-9,6,5,1,1,-5,10],[8,-1,1,6,-1,10,4,2],[-9,-2,-2,6,-5,1,5,-8],[-7,9,-10,-1,9,-4,1,4],[-7,-4,5,2,7,10,7,7]],[[6,2,-1,9,-6,3,-9,5],[5,-4,-9,10,2,-10,-9,-4],[4,-3,1,-3,4,-2,2,10],[-9,8,1,-6,2,-3,-4,8],[-3,1,4,10,-1,-5,-10,-2],[9,6,2,4,-9,-4,6,-1],[6,4,9,8,-4,6,-7,-2],[-10,8,-2,5,9,-4,-3,5]],[[-10,-9,-1,-10,-1,-9,-5,-5],[-3,5,5,-7,-1,-1,-10,6],[-3,9,-4,-7,5,3,10,5],[3,9,1,-2,8,9,-8,-6],[-9,-5,5,-8,-9,-10,-1,2],[-4,1,6,-8,-9,-10,9,9],[2,3,-5,8,5,5,-3,-9],[-10,2,6,-10,-6,-1,8,-5]]], dtype = "uint8")#candidate|7737|(14, 8, 8)|const|uint8
bop_7738 = relay.logical_xor(const_7736.astype('uint8'), relay.reshape(const_7737.astype('uint8'), relay.shape_of(const_7736))) # shape=(14, 8, 8)
func_4891_call = mod.get_global_var('func_4891')
func_4893_call = mutated_mod.get_global_var('func_4893')
call_7751 = relay.TupleGetItem(func_4891_call(), 0)
call_7752 = relay.TupleGetItem(func_4893_call(), 0)
func_1836_call = mod.get_global_var('func_1836')
func_1842_call = mutated_mod.get_global_var('func_1842')
const_7758 = relay.const([-2.529525,-8.274004,8.057467,-7.858207,-4.397304,1.767480,-9.566959,-2.291551,3.548366,2.183718,6.190935,-6.326251,-6.899760,4.552308,-7.136068,-7.118746,2.453476,2.148824,-1.101750,-5.922573,7.576576,-3.637016,3.918575,-8.727226,9.267084,9.560904,-7.191327,-4.328128,8.560780,-4.167817,7.881505,-0.500913,8.000066,0.128422,-1.249041,-9.652432,0.123485,7.215167,2.491617,4.109891,1.837020,-7.767375,-0.105702,6.188164,-8.404039,8.596577,-8.077204,-1.936749,9.602034,7.008677,1.201505,2.197586,7.810848,7.012726,-4.863566,5.559059,5.480045,4.847306,-3.213932,-0.852941,-8.986193,-0.004782,7.322495,3.479042,-5.163296,-8.070414,-9.976881,-1.852317,2.821786,0.990576,-5.051196,4.062244,-7.092624,-8.319658,2.565140,3.220545,-0.736130,3.763930,0.546520,1.020174,9.763994,9.642718,1.568453,9.565641,-0.530968,2.348090,7.623964,-3.225978,5.785135,9.476683,4.837321,5.744451,-2.402801,-4.019305,9.969205,-4.701360,3.804574,-2.316018,1.818005,6.738415,-6.455785,7.120261,-3.012418,8.112150,-8.096880,-3.164955,-0.317355,8.670483,-0.476035,-3.370095,5.415785,9.493950,-8.718519,-3.513786,8.227938,8.934403,-4.028787,-0.874677,7.481166,-5.557543,-0.628073,1.275755,-7.067923,5.214435,-0.753586,-3.632287,-7.785682,8.724391,-8.766458,4.562777,4.541550,8.368415,9.384565,-9.844157,-8.837559,-2.506947,-3.429127,8.502423,-7.256119,3.603185,-6.526961,6.179982,0.633841,6.251810,-7.897998,-5.452514,-7.787825,0.258135,5.926201,-4.090956,-4.040038,-5.004916,-2.331937,-4.247035,-5.815680,-3.467511,3.816933,-5.385070,-5.249942,-4.610877,-8.223421,-1.566431,4.264698,-0.786771,-0.995652,-6.125959,3.549315,1.364097,-2.281910,-3.067431,1.588358,7.180897,-2.531382,-7.334913,6.092074,7.825015,4.822710,-9.529878,2.154103,5.526144,6.818651,2.168447,-6.157056,4.998484,-5.888127,0.221444,-6.157113,-2.678134,-7.934644,5.812865,-2.050703,6.990834,-6.412858,-2.898746,-9.992858,4.430524,6.981951,-5.888195,8.018622,-9.320645,-3.756105,-4.855825,-4.086316,8.846407,1.997836,-7.860003,-8.162858,0.089532,-2.274866,-8.352143,1.175687,-4.618337,-3.309605,-7.177958,-7.627006,2.096434,-6.832931,4.531612,4.844779,-2.855879,7.914385,-3.448694,-4.040703,8.631156,9.580697,-7.630595,3.553055,3.225141,7.612776,-9.123145,-4.980701,-0.300415,7.320304,2.006271,5.038663,2.319841,-9.132412,-1.009539,2.543500,5.608532,3.476199,6.499776,2.098602,8.982077,-0.999786,-8.174096,6.162592,9.529162,1.051780,7.002848,-1.566099,5.733818,-3.922672,-0.089929,7.641261,-3.744713,4.320957,-8.788618,-2.344913,6.499421,9.359711,9.520803,7.805237,5.047644,4.105806,0.627060,8.899329,2.759807,-5.732374,3.698912,6.325227,-1.011176,0.408201,6.268284,-5.995845,-0.218985,0.922109,3.470798,-6.414502,6.291658,3.336599,-0.368883,1.241182,2.388391,4.487232,-2.053614,-6.352083,3.128367,6.742762,-4.217685,0.347004,5.401839,-8.555200,1.842151,7.690721,4.615965,8.323740,3.196225,1.404390,-4.573605,1.242492,2.024003,-6.126261,5.111323,-1.386658,8.427765,-5.887079,-5.401293,6.421235,5.240906,-9.901019,-3.201490,-5.103550,-8.154911,-9.791131,-8.066184,0.587487,6.653931,-5.761090,0.069419,-4.505601,4.337999,7.045501,-7.852757,7.435798,5.899194,-0.581180,-2.384031,5.064596,-7.074806,5.621544,1.578324,-1.713329,-3.046827,4.327100,6.909660,7.222707,-5.846515,-7.786371,6.336925,0.565908,5.494060,-1.605123,-2.377237,8.718514,5.675142,-5.395941,2.411199,-4.920527,1.648794,-7.706336,1.863733,0.260754,-8.541749,-7.604099,-8.088225,2.857871,6.688119,8.044658,7.034016,-4.485520,5.860805,-9.479348,-5.630798,1.863367,-0.806503,-2.805883,6.300999,-3.568300,-3.911418,0.776795,-5.138236,-4.061849,0.333374,3.143639,-3.229693,5.410883,-5.161934,1.792376,-2.370033,3.817312,-1.549296,0.380289,2.275761,8.730944,-0.580269,-5.960135,3.076216,3.531538,-1.198631,-7.971257,-7.183530,3.242416,6.011891,9.021638,5.166945,-5.747557,8.595314,4.792815,9.664178,-7.284510,4.357587,-4.992646,6.743533,9.368198,3.221655,0.855384,-8.582531,-3.645035,4.489908,2.308387,-0.501435,-7.156902,3.061548,9.039417,-0.870400,5.835097,-9.326538,6.064146,2.137099,-3.881728,-3.490141,-9.751266,-4.520876,-8.444514,4.840918,-5.547190,7.882209,7.457721,-2.000441,-7.179697,-7.365674,-1.567401,8.217746,-6.377919,2.298904,6.517846,-9.721184,-5.982829,7.250488,-4.985910,-8.471396,-5.135864,4.311298,9.432330,-0.679970,9.087398,7.394318,-7.512571,1.023736], dtype = "float32")#candidate|7758|(450,)|const|float32
const_7759 = relay.const([[6],[8],[-3],[-2],[3],[7],[1],[-10],[-9],[4],[-6],[-10],[6],[-6],[5],[-1],[5],[-8],[8],[1],[8],[-3],[-2],[-8],[3],[6],[-6],[4],[-4],[10],[-4],[4],[-2],[-8],[-4],[4],[-9],[-1],[-9],[-3],[2],[6],[10],[1],[-10],[-5],[3],[4],[4],[8],[2],[-2],[-10],[-1],[-3],[-5],[-6],[6],[-1],[-9],[-9],[7],[-8],[9],[-6],[-1],[-8],[9],[-7],[9],[7],[-6],[5],[10],[-8],[-8],[7],[-1],[10],[-6],[7],[-3],[2],[5],[4],[-9],[9],[7],[-9],[9],[8],[-8],[-5],[-2],[9],[1],[5],[2],[-8],[7],[2],[5],[3],[-5],[-9],[-4],[4],[-5],[-1],[5],[-3],[7],[-10],[5],[8],[10],[-8],[-3],[-6],[-7],[-5],[-3],[-5],[9],[5],[7],[10],[-10],[-6],[8],[7],[-8],[-2],[-9],[-1],[3],[-1],[6],[-7],[1],[3],[-4],[5],[3],[8],[-7],[-7],[1],[-6],[-8],[-9],[5],[-1],[6],[-8],[-2],[9],[3],[-9],[-7],[-8],[-2],[-9],[-6],[5],[2],[-7],[6],[7],[-8],[10],[-5],[-7],[5],[7],[-2],[6],[9],[9],[10],[1],[10],[6],[8],[9],[-8],[5],[10],[-4],[-9],[-6],[-5],[7],[10],[9],[-9],[-10],[10],[6],[-9],[1],[6],[3],[-9],[10],[9],[9],[2],[7],[-1],[2],[7],[-1],[-7],[-5],[4],[6],[-2],[-5],[-7],[1],[10],[-7],[5],[4],[10],[-7],[7],[-6],[-9],[-3],[-6],[2],[-9],[1],[9],[-1],[1],[3],[3],[3],[1],[-4],[2],[-3],[10],[-3],[-6],[-4],[-1],[10],[-6],[-10],[10],[-4],[-1],[8],[-7],[-10],[-2],[-9],[10],[9],[-6],[-2],[10],[6],[4],[5],[-9],[9],[-6],[-2],[1],[3],[9],[-6],[-3],[-7],[-9],[-3],[-1],[-7],[4],[1],[10],[3],[-8],[8],[-1],[3],[-2],[-8],[-3],[1],[4],[-1],[2],[-1],[9],[-2],[-3],[3],[-2],[-1],[2],[2],[2],[-9],[5],[-8],[-4],[3],[8],[-4],[6],[-4],[-1],[-2],[-1],[-5],[-6],[9],[8],[-6],[-7],[-3],[3],[7],[-2],[8],[7],[8],[-10],[8],[-3],[4],[-3],[-9],[10],[6],[-10],[-8],[-7],[-4],[-8],[-6],[4],[-10],[4],[8],[2],[-7],[5],[-7],[-3],[-2],[-2],[-4],[5],[-7],[-10],[-5],[-8],[-9],[-2],[10],[-8],[-10],[4],[10],[10],[8],[10],[2],[-2],[8],[1],[6],[-10],[-2],[3],[10],[-8],[6],[10],[9],[6],[4],[1],[-3],[5],[7],[-7],[-7],[-10],[-1],[8],[6],[-10],[8],[-6],[1],[-4],[10],[-3],[10],[-6],[-5],[-10],[10],[-1],[2],[-10],[7],[-1],[-1],[-4],[1],[-7],[5],[5],[7],[-2],[4],[7],[1],[5],[-7],[-4],[-7],[3],[-3],[10],[7],[6],[7],[-9],[5],[-9],[3],[-3],[3],[-8],[2],[-7],[8],[-7],[-7],[5],[-6],[7],[-4],[-10],[-8],[-10],[-4],[-3],[-2],[9],[4],[3],[6],[-3],[8],[-8],[-8],[-8],[1],[-3],[-6],[8],[-7],[-8],[4],[3],[3],[-10],[-9],[-3],[-10],[1],[-6],[-4],[6],[4],[2],[3],[2],[8],[-1],[6],[8],[-5],[10],[4],[-9],[-9],[2],[9],[-1],[-10],[-4],[-2],[-6],[-4],[1],[3],[5],[-6],[5],[4],[5],[-8],[5],[4],[4],[-8],[-9],[-7],[-9],[4],[-1],[1],[6],[-1],[-9],[7],[-6],[-10],[-6],[-6],[-10],[-9],[5],[6],[8],[-5],[-10],[5],[6],[-6],[-8],[-9],[-10],[7],[7],[6],[-10],[-8],[4],[-8],[-7],[-1],[1],[-2],[-1],[2],[-3],[-8],[-3],[-9],[-10],[8],[2],[6],[2],[-8],[9],[4],[5],[-7],[-4],[8],[1],[10],[-10],[-4],[8],[2],[-10],[5],[2],[-8],[5],[1],[10],[6],[8],[-3],[1],[4],[-6],[4],[2],[3],[-4],[-1],[4],[-7],[5],[-8],[-7],[-3],[10],[5],[1],[3],[-10],[9],[-10],[-2],[-1],[-1],[6],[3],[-10],[-8],[-5],[4],[-7],[7],[8],[3],[-6],[10],[5],[2],[-6],[-2],[-5],[-6],[5],[-1],[-5],[6],[-4],[7],[-4],[2],[7],[7],[3],[-9],[-4],[-3],[-5],[3],[-1],[10],[9],[-7],[10],[9],[-6],[-5],[-2],[-6],[-4],[5],[-5],[9],[5],[10],[6],[3],[8],[10],[-4],[4],[-9],[-5],[-1],[-7],[-6],[-5],[1],[1],[-5],[6],[-10],[9],[-9],[-6],[8],[-6],[-8],[2],[-2],[6],[-3],[8],[-6],[2],[9],[5],[8],[-7],[-2],[1],[2],[-1],[-6],[10],[1],[-7],[9],[-8],[4],[8],[-7],[3],[6],[-2],[3],[-10],[-9],[-5],[-3],[-7],[1],[9],[-9],[6],[-7],[7],[7],[1],[1],[4],[7],[1],[5],[4],[-1],[2],[-5],[3],[-8],[-7],[3],[-8],[3],[-8],[3],[8],[-7],[7],[-5],[2],[2],[-1],[5],[-10],[2],[7],[-1],[-10],[4],[-1],[-1],[10],[-10],[-2],[8],[2],[-7],[8],[6],[4],[-7],[-5],[-6],[5],[4],[-9],[-6],[3],[-6],[10],[6],[-5],[-6],[5],[-10],[10],[-10],[6],[-2],[5],[8],[3],[5],[-10],[10],[6],[-6],[10],[-3],[-4],[4],[2],[10],[9],[10],[10],[-10],[-2],[8],[7],[-5],[-3],[-3],[5],[-8],[2],[-2],[7],[2],[-4],[9],[-10],[8],[5],[7],[-3],[6],[-7],[10],[6],[-8],[1],[3],[-10],[3],[-9],[1],[-3],[-3],[-6],[-2],[-7],[4],[7],[4],[2],[-4],[-2],[1],[3],[-9],[6],[2],[-8],[10],[7],[2],[10],[8],[1],[-3],[-3],[-8],[-3],[8],[-10],[-6],[4],[8],[5],[5],[-7],[6],[4],[5],[5],[8],[4],[-3],[-4],[-2],[-8],[3],[-8],[-6],[-6],[-3],[-10],[2],[-4],[-9],[6],[6],[-3],[6],[-2],[4],[-7],[-1],[-7],[-6],[-10],[7],[9],[-3],[-10],[-1],[-2],[-6],[-6],[4],[3],[7],[2],[-4],[5],[-3],[-10],[-4],[-4],[3],[9],[-10],[-1],[-6],[1],[6],[-8],[3],[-2],[-1],[9],[-1],[-6],[10],[-2],[-4],[9],[4],[2],[-8],[1],[-8],[-8],[9],[10],[-7],[5],[9],[-3],[-1],[-4],[-7],[-9],[-4],[2],[6],[9],[-10],[-9],[-8],[-10],[7],[3],[5],[7],[-4],[-1],[5],[-4],[2],[4],[-7],[6],[-9],[-8],[-3],[2],[-4],[-7],[4],[6],[-4],[-8],[8],[-9],[-6],[-2],[3],[2],[-2],[-9],[-9],[-4],[7],[-1],[-3],[6],[4],[8],[8],[4],[-10],[8],[-4],[-7],[1],[9],[8],[-2],[-5],[3],[-9],[-7],[7],[-5],[-3],[-10],[5],[8],[8],[-6],[-1],[10],[10],[-2],[2],[5],[8],[-4],[-7],[9],[-10],[-5],[-7],[-4],[6],[6],[7],[-7],[-8],[2],[-6],[-3],[8],[9],[-8],[7],[7],[3],[-5],[-9],[-9],[10],[-2],[4],[8],[10],[-4],[-10],[2],[-10],[-8],[-6],[-1],[9],[8],[-8],[-6],[4],[7],[-8],[6],[3],[-2],[-2],[4],[5],[-9],[9],[2],[5],[-9],[-8],[3],[-10],[1],[-9],[7],[9],[-5],[-4],[-3],[3],[9],[-3],[1],[8],[10],[2],[7],[-6],[-2],[-7],[7],[6],[7],[2],[-8],[3],[6],[-6],[-3],[-4],[2],[6],[10],[2],[-7],[8],[-3],[5],[-6],[-1],[10],[2],[9],[3],[-6],[-4],[-5],[-2],[2],[-6],[10],[-2],[-10],[-4],[-2],[3],[-10],[-9],[6],[-10],[-9],[3],[-7],[-8],[8],[2],[7],[3],[-9],[-6],[-4],[4],[-5],[-3],[-3],[3],[1],[7],[-10],[1],[-8],[-8],[-4],[-2],[7],[-5],[-8],[-7],[10],[-4],[-4],[8],[-3],[-5],[9],[-3],[-8],[-1],[1],[5],[-1],[1],[9],[-2],[7],[-3],[-3],[6],[3],[10],[-7],[8],[3],[8],[-3],[4],[-3],[-5],[10],[-1],[-5],[7],[5],[-3],[5],[2],[-8],[7],[-2],[-5],[-8],[-10],[3],[-7],[-5],[9],[-5],[8],[-2],[-10],[-4],[-8],[5],[-4],[-2],[1],[-10],[-3],[8],[-6],[-8],[-3],[-3],[-3],[-1],[1],[5],[8],[7],[-4],[-2],[9],[8],[5],[-3],[1],[7],[-4],[-6],[-7],[-10],[-4],[10],[-3],[-5],[7],[6],[1],[9],[-1],[8],[4],[9],[-8],[-5],[-4],[7],[-7],[10],[-5],[-1],[-4],[8],[10],[-1],[10],[5],[3],[-9],[9],[-9],[-8],[10],[3],[-7],[7],[-1],[-4],[6],[8],[7],[5],[9],[-7],[2],[-2],[-8],[-5],[-8],[-10],[-9],[3],[-10],[2],[-3],[3],[6],[3],[7],[-6],[6],[10],[-10],[2],[-5],[3],[1],[-5],[4],[-7],[8],[8],[-8],[-1],[-3],[-6],[7],[-4],[-10],[5],[1],[1],[-3],[-3],[6],[6],[1],[-9],[-7],[6],[9],[10],[7],[-3],[10],[-4],[5],[3],[6],[6],[7],[5],[8],[-7],[-4],[6],[6],[-9],[9],[9],[1],[10],[-1],[-5],[10],[-8],[-3],[-5],[6],[-5],[-8],[6],[-6],[4],[-1],[7],[-8],[-8],[-2],[5],[-6],[1],[5],[10],[1],[-4],[8],[-2],[6],[-2],[-10],[-9],[-7],[-9],[-1],[5],[9],[-7],[-3],[6],[4],[-4],[1],[-1],[-1],[-6],[-3],[9],[-1],[1],[5],[7],[3],[6],[3],[-1],[-3],[1],[8],[-1],[-6],[-9],[-1],[1],[9],[3],[-9],[5],[6],[-9],[5],[-6],[-4],[2],[-3],[-2],[-1],[10],[-1],[3],[-6],[-3],[-1],[-8],[-10],[-6],[6],[1],[2],[-5],[-8],[4],[9],[-1],[-8],[2],[3],[8],[2],[10],[2],[6],[9],[9],[1],[-6],[2],[-8],[5],[-3],[6],[-6],[1],[-4],[1],[-6],[10],[-2],[-9],[10],[-4],[1],[-6],[7],[8],[6],[-7],[4],[8],[2],[2],[4],[-2],[-2],[-7],[1],[7],[-7],[10],[-6],[-6],[-6],[-5],[-1],[-8],[2],[-3],[-3],[3],[5],[8],[-9],[-7],[9],[2],[10],[8],[-9],[6],[-5],[4],[-6],[6],[-1],[-5],[-6],[2],[9],[4],[1],[-3],[-4]], dtype = "uint8")#candidate|7759|(1536, 1)|const|uint8
var_7760 = relay.var("var_7760", dtype = "int8", shape = (182,))#candidate|7760|(182,)|var|int8
const_7761 = relay.const([-7.118661,-5.176972,4.714092,0.652744,-3.913726,-0.641941,2.429328,6.891106,-2.333498,0.001780,-4.635446,-6.451612,-4.601242,8.199327,2.837790,-4.232398,0.309086,1.595228,-0.080629,-7.000370,-4.819961,-5.450407,7.117346,-5.694191,4.540257,-1.328758,-7.828146,-0.982151,4.706902,-9.594004], dtype = "float64")#candidate|7761|(30,)|const|float64
call_7757 = relay.TupleGetItem(func_1836_call(relay.reshape(const_7758.astype('float32'), [5, 10, 9]), relay.reshape(const_7758.astype('float32'), [5, 10, 9]), relay.reshape(const_7759.astype('uint8'), [1536,]), relay.reshape(var_7760.astype('int8'), [182,]), relay.reshape(const_7761.astype('float64'), [30,]), ), 2)
call_7762 = relay.TupleGetItem(func_1842_call(relay.reshape(const_7758.astype('float32'), [5, 10, 9]), relay.reshape(const_7758.astype('float32'), [5, 10, 9]), relay.reshape(const_7759.astype('uint8'), [1536,]), relay.reshape(var_7760.astype('int8'), [182,]), relay.reshape(const_7761.astype('float64'), [30,]), ), 2)
output = relay.Tuple([bop_7738,call_7751,call_7757,const_7758,const_7759,var_7760,const_7761,])
output2 = relay.Tuple([bop_7738,call_7752,call_7762,const_7758,const_7759,var_7760,const_7761,])
func_7768 = relay.Function([var_7760,], output)
mod['func_7768'] = func_7768
mod = relay.transform.InferType()(mod)
var_7769 = relay.var("var_7769", dtype = "int8", shape = (182,))#candidate|7769|(182,)|var|int8
output = func_7768(var_7769)
func_7770 = relay.Function([var_7769], output)
mutated_mod['func_7770'] = func_7770
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6333_call = mod.get_global_var('func_6333')
func_6335_call = mutated_mod.get_global_var('func_6335')
call_7772 = relay.TupleGetItem(func_6333_call(), 0)
call_7773 = relay.TupleGetItem(func_6335_call(), 0)
output = call_7772
output2 = call_7773
func_7778 = relay.Function([], output)
mod['func_7778'] = func_7778
mod = relay.transform.InferType()(mod)
output = func_7778()
func_7779 = relay.Function([], output)
mutated_mod['func_7779'] = func_7779
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5132_call = mod.get_global_var('func_5132')
func_5133_call = mutated_mod.get_global_var('func_5133')
call_7945 = func_5132_call()
call_7946 = func_5132_call()
output = call_7945
output2 = call_7946
func_7955 = relay.Function([], output)
mod['func_7955'] = func_7955
mod = relay.transform.InferType()(mod)
output = func_7955()
func_7956 = relay.Function([], output)
mutated_mod['func_7956'] = func_7956
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4315_call = mod.get_global_var('func_4315')
func_4316_call = mutated_mod.get_global_var('func_4316')
call_7966 = func_4315_call()
call_7967 = func_4315_call()
func_6022_call = mod.get_global_var('func_6022')
func_6024_call = mutated_mod.get_global_var('func_6024')
call_7977 = relay.TupleGetItem(func_6022_call(), 0)
call_7978 = relay.TupleGetItem(func_6024_call(), 0)
output = relay.Tuple([call_7966,call_7977,])
output2 = relay.Tuple([call_7967,call_7978,])
func_7979 = relay.Function([], output)
mod['func_7979'] = func_7979
mod = relay.transform.InferType()(mod)
output = func_7979()
func_7980 = relay.Function([], output)
mutated_mod['func_7980'] = func_7980
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5880_call = mod.get_global_var('func_5880')
func_5881_call = mutated_mod.get_global_var('func_5881')
call_7983 = func_5880_call()
call_7984 = func_5880_call()
output = call_7983
output2 = call_7984
func_7992 = relay.Function([], output)
mod['func_7992'] = func_7992
mod = relay.transform.InferType()(mod)
output = func_7992()
func_7993 = relay.Function([], output)
mutated_mod['func_7993'] = func_7993
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7955_call = mod.get_global_var('func_7955')
func_7956_call = mutated_mod.get_global_var('func_7956')
call_8061 = func_7955_call()
call_8062 = func_7955_call()
func_4749_call = mod.get_global_var('func_4749')
func_4754_call = mutated_mod.get_global_var('func_4754')
const_8066 = relay.const([-1,4,2,4,-8,-7,-1,4,3,-6,6,-7,-1,-7,8,-6,2,-10,-3,4,-1,-4,7,-2,8,9,-5,-2,3,-3,-5,2,9,4,8,3,-8,4,7,-10,-5,-8,-5,-1,10,-1,-2,-2,7,-3,1,6,5,9,-7,-6,7,-5,4,5,9,-9,-9,4,-5,2,-6,-9,10,4,8,2,-4,2,-4,-2,-2,-7,-9,8,-9,4,-3,-8,-3,-2,10,8,2,2,4,-10,4,-7,10,9,-8,-7,-7,5,5,1,-1,9,-7,-1,4,7,-1,-1,2,2,-4,-4,-2,-1,4,2,8,-1,4,-6,-5,8,-9,-9,-10,4,10,7,5,-8,-7,-6,-4,10,1,8,-10,6,-5,4,-7,-1,8,-6,-5,4,5,-7,-1,6,-4,9,-1,7,3,-3,-2,5,4,5,-8,-1,10,-1,-8,2,3,8,-8,2,-8,2,-3,2,-10,9,5,-10,-10,4,2,-10,9,1,-4,-1,-9,-4,9,2,-2,-7,10,2,2,6,3,-9], dtype = "int8")#candidate|8066|(200,)|const|int8
const_8067 = relay.const([-3.766046,-8.839789,-0.057205,-6.485826,1.700726,-3.144143,2.978001,0.406004,3.154951,6.352143,2.072103,-7.309490,6.236840,5.251841,5.075768,-5.381372,-0.452384,9.389805,-1.172497,1.774498,9.823514,4.161376,1.712611,-5.518613,-3.708225,-2.008649,-5.299599,-1.219659,6.918320,-7.429475,-7.979985,-8.795010,-9.708044,8.127689,9.486553,-1.118562,-3.685046,6.831917,-4.513801,6.117230,1.451903,0.543973,-8.954471,-2.391588,5.774113,5.837567,4.221746,-8.939938,7.717853,-7.059561,7.189398,4.741477,-4.796228,9.765500,7.516766,2.326651,-1.208717,-0.193994,-4.437484,-3.680755,-2.359514,6.878879,9.392980,5.784387,9.664387,2.001142,-8.339304,8.867412,0.246108,-8.337651,7.227955,-8.038147,-6.052867,-1.784475,9.150593,-9.019060,-4.567988,6.032314,9.861501,-4.214835,-8.225552,7.205703,9.199973,3.142133,-9.978158,4.154293,-3.717164,5.302440,-7.510562,5.096979,9.250078,4.304816,-9.185882,5.695004,9.332918,-9.888912,-6.628257,2.082232,-2.329410,-2.692391,-2.372203,-9.673173,2.960072,2.666854,-2.395158,1.506340,-7.878134,0.954348,5.885513,-1.847929,7.010489,-5.144561,2.489075,7.618452,5.619323,-6.929591,9.221187,-1.937289,-4.120105,-0.982886,-8.125479,-7.323470,4.746344,1.725448,1.817093,5.089711,7.100673,-9.822751,2.939139,-2.960029,7.093148,-6.818321,-5.594077,-0.019064,-7.336511,5.881535,-7.397213,2.015569,9.724866,1.789210,6.805091,2.336248,-7.751654,4.545152,2.410359,-5.092914,-6.439066,4.870818,8.992564,7.881171,3.271730,4.100798,5.516625,5.249708,7.512203,1.450997,6.491563,6.765673,-9.374492,-2.916426,1.497746,-5.789607,4.195619,-2.332904,6.587007,6.134983,-4.087820,0.748290,7.300508,-1.306112,9.740340,0.363542,8.379255,-2.391831,5.896101,3.127021,-0.647096,-0.286540,-5.029223,-7.495471,6.911779,-1.503576,-7.062977,3.957217,-5.584030,1.380698,8.742682,-6.549684,2.696770,-2.791529,6.355542,6.227758,3.646555,-0.536492,-6.304204,-6.242908,-5.418260,0.550688,-6.282801,-4.238864,0.080380,-3.244798,5.294044,0.918212,2.414624,8.477359,0.416922,-0.569763,5.813508,-0.555181,-5.143255,9.336100,1.226586,1.939139,0.292278,-0.611331,2.830045,2.783502,-5.366997,-6.134885,-6.062912,-3.647349,-7.286129,-9.908556,2.181668,-3.114364,8.398787,-7.185114,-1.373701,-6.673158,-2.371786,-0.722185,4.776358,-0.220822,-7.478251,-5.686727,-6.413437,6.746672,2.979722,-6.011687,-8.589251,-3.778181,-2.841270,2.400839,6.644753,-3.611590,-6.025375,7.659600,-0.073704,5.989861,-6.308778,4.680734,2.259824,-7.833418,7.233923,0.978631,0.688026,0.761242,7.675139,-3.448235,4.492102,-1.266950,-9.858586,0.675532,6.475595,5.401300,-2.713641,-4.912613,0.432930,1.427704,-2.663683,1.065259,-1.730576,8.672630,1.362496,-5.549992,7.247025,-8.151740,4.269810,-6.193947,0.852442,-0.383857,9.520055,6.420078,9.989220,9.810157,8.063797,1.294762,0.224161,8.126850,3.476322,5.185531,-6.123399,-4.969645,-4.293458,-0.280027,-7.388237,2.497826,-6.197665,7.043453,5.091490,0.147916,1.216081,2.318963,2.986086,5.242761,-6.952772,4.045855,-9.092871,-0.693988,3.181831,-9.631634,-6.765904,5.595215,-7.307581,-2.669227,0.795733,2.005252,7.368942,0.092416,6.206244,2.471070,-7.167360,5.395019,-5.387469,6.877816,-1.061317,5.158885,6.190419,8.657788,7.186323,-8.449764,4.566908,9.301151,-1.746906,-8.702247,1.489661,1.466578,-5.199526,3.832642,4.666576,-7.217156,-9.385481,-0.395939,-9.891698,-9.348405,1.771773,-7.732268,-5.745590,4.671102,3.393624,-9.047349,5.328973,-4.836478,-3.863773,-2.918073,-5.875589,-9.402264,2.736506,-1.301128,-8.597932,4.185136,2.753156,9.640356,-0.045837,-4.774403,-4.790118,-3.350565,7.581079,8.292718,-8.377874,9.192211,8.628996,-9.677889,-8.338873,-5.996089,0.642434,-2.552415,-9.955625,-7.235957,9.432615,-3.106578,6.831454,7.168635,8.311690,0.976414,7.666459,-8.672754,-4.563080,5.723358,0.424279,1.693379,1.706538,-6.117483,6.420690,-3.913155,5.240627,-8.878518,-0.625907,7.780752,4.360289,3.157496,7.600603,6.730957,-9.293190,-2.523891,-5.787115,-0.660917,-2.437403,7.869227,8.494757,-5.893335,-9.628820,-9.143646,-7.331857,-2.566998,-6.515058,-8.387817,9.653078,8.876680,-5.222697,-2.663150,8.751369,9.164110,7.680822,-4.227492,-3.263502,7.520207,7.528584,5.897021,-2.101202,0.313672,-3.849997,-2.209305,3.344015,0.760901,-3.244523,8.696051,9.860844,1.629270,7.530058,0.345534,-2.831185,5.808875,-9.314648,4.992595,-5.182607,1.642704,8.771660,5.825071,2.739856,-9.564821,-5.462654,-1.746547,-6.689569,-5.360810,0.471807,-4.798736,-9.014221,2.488233,-7.615152,8.373028,-7.292297,1.958228,0.779092,-7.718442,-1.944644,-6.341686,-0.835669,-1.350426,-2.955459,5.488483,-0.509963,8.153517,1.016830,-8.359238,2.063355,-8.708159,-3.074293,0.505339,-1.091153,9.508540,4.813211,2.042491,-5.828284,-4.028220,-5.090928,-1.352408,1.556996,-5.231099,-1.325108,2.039559,-6.875661,4.025535,9.947681,-6.466572,9.454553,-4.350959,4.441617,-4.240751,1.452218,-4.988419,-2.297693,6.053291,-7.933627,-7.875918,-1.056114,3.305166,-5.067523,6.916735,7.320751,9.900349,8.560264,6.343200,-0.386420,-5.981759,3.508832,1.182757,2.167931,9.708899,-9.969431,2.970997,4.448272,-1.311880,7.832277,-9.816100,3.048122,7.825687,9.162466,-2.541264,6.352958,-6.561407,4.054699,-8.536165,-7.478316,7.140174,-8.530369,1.476694,7.090856,3.572913,2.840913,0.975143,6.673385,-9.585537,-2.807826,-9.080368,2.344383,-1.643401,0.594127,-2.466577,-1.730263,-6.181765,-0.106335,7.309096,7.575891,-5.127639,-4.686255,-9.568691,6.189984,-9.004154,4.786186,3.118402,4.322185,0.490388,-4.038591,-4.415858,6.762629,8.812431,-1.685518,1.470475,2.982379,2.937163,-7.018210,-5.336403,-1.149694,7.060372,6.128569,-6.903199,-0.045182,0.511566,2.113293,7.512609,6.421913,-3.330822,6.763802,6.300128,-5.414222,-4.193696,-8.451239,-1.639976,-1.233224,-7.988503,-0.574605,-1.731952,7.020271,8.838093,-6.529196,2.272976,-8.753988,7.265786,-2.878860,-5.551691,2.160315,2.586906,1.188629,-4.046317,9.139021,-6.663683,-1.048873,-2.621794,-2.313187,-7.319489,-0.545778,-4.922771,-1.704901,6.235706,9.951509,1.311064,-4.328566,-4.539788,-4.862182,3.907109,-4.500776,3.069478,6.278301,-3.197487,5.948847,-4.169841,-0.153441,-4.029591,-2.674942,9.824218,-7.342777,2.366020,8.938248,-4.511943,-3.514974,6.192286,5.583430,4.284754,-7.985022,5.834595,0.541967,-7.184111,-5.980069,-4.980497,-5.016394,-7.947148,-9.083438,0.584902,-0.478931,3.709569,-4.789582,2.375495,1.280167,-7.993643,-9.151606,1.780544,9.997587,2.735849,8.215148,-2.489894,-8.950153,-6.329703,-3.329883,-5.236399,7.217060,-1.307479,5.598891,-0.645376,-8.493209,-2.132615,-3.293151,-1.384323,8.370310,4.723153,6.325856,-9.167337,5.026289,-6.151537,9.826496,-2.654767,-4.730131,-7.761505,-6.132298,-5.980210,4.031986,6.893795,0.230176,3.622432,1.620818,6.919739,-0.890524,-3.008051,-6.971706,-8.495647,-5.337373,-0.437497,9.357699,-8.178662,0.177119,-7.733911,5.083306,-9.708180,-8.537409,-5.690530,4.044344,-2.356807,8.629962,5.926455,-2.815301,8.824514,-3.498767,3.533458,-6.677072,1.183956,1.468892,-7.718075,6.595609,9.393636,-9.621485,7.023482,7.973916,-8.473549,8.620546,-5.772807,8.711838,-9.383049,5.122815,5.823026,7.663857,-6.442142,-5.992706,9.030800,4.050435,1.696851,-8.985916,4.448039,2.988357,9.678620,6.369682,-6.797617,7.687328,-4.093286,-2.412307,9.585340,-6.456288,-7.108549,-3.176047,-0.527603,-5.624542,-5.059135,6.749605,-7.613977,1.839302,3.893916,2.427166,1.277302,-9.202808,-1.448735,8.476533,-9.317995,5.918213,-1.776064,-7.577165,3.137489,5.849934,-2.625338,-3.797075,6.224216,-1.115981,-2.110595,-6.669631,-5.961274,-9.890573,2.948838,-1.704853,1.944881,5.916012,-3.364893,9.820677,-1.160050,6.169329,0.905539,-1.997349,1.672628,4.161336,-7.519896,3.755130,-8.438821,2.338233,5.915946,1.858627,8.821162,-1.256878,-3.171146,-5.996325,-7.491212,9.207601,0.194149,-9.047643,-3.690538,-8.378390,4.046704,-4.124250,1.915441,-4.737303,9.744116,-6.576310,-7.871767,-9.622120,-8.940083,8.877810,-6.348962,-3.389065,-7.455637,-7.231347,-4.394725,-4.374015,-9.039121,5.631180,-3.702896,-5.734765,1.737553,0.133290,-5.846733,-8.849883,-9.797168,3.626238,6.787507,-0.335983,1.959267,-9.622671,0.818125,2.147412,3.579137,-5.009846,-1.208473,-7.104245,7.313519,5.054338,8.284772,-4.920993,-1.641339,8.757369,3.309444,2.381578,-1.027303,-6.719180,-8.262196,-7.872476,-7.812990,-0.490586,4.886167,-2.352417,-2.951738,-4.089213,9.852422,0.425469,6.852718,1.214355,-3.627790,8.414738,8.712042,-5.660358,2.683354,4.606516,7.299509,5.731126,-1.059704,8.253993,7.338954,5.419398,-8.102140,-0.555917,0.262049,-7.140054,7.284038,-1.895924,5.248289,-7.616909,3.027962,-6.415686,3.911127,-2.913624,4.222762,-6.886186,9.100523,-6.669679,-4.450201,6.283360,-1.444325,7.950028,6.694359,-4.988599,8.562365,-2.783575,9.430909,8.089733,-0.888078,-1.282164,-1.075566,-5.026030,-4.847591,9.588524,-3.408989,-0.332540,4.924839,-9.178045,-6.594917,5.488966,1.733055,-6.360940,3.941849,-5.497905,7.395593,5.081168,7.170456,-7.022171,-6.406118,5.361987,-1.750838,-3.874391,3.848420,5.143711,1.416604,6.035363,-9.934820,4.428141,-4.863042,0.682090,9.448025,1.706174,-1.686985,-8.317644,4.627278,3.267697,-2.971554,6.029408,-1.967797,8.549048,-3.310537,3.793409,-8.932557,-8.013711,-5.809056,1.575448,-6.910371,-0.017894,-5.288461,-4.027316,-2.955585,7.727918,9.413610,0.733151,1.275393,4.725037,5.418527,-8.745323,-2.643214,-6.700174,-9.222155,-5.966429,-7.498038,-9.202422,1.343301,5.241333,-0.786558,-2.791000,2.935860,-1.290930,-1.405002,-8.453005,-2.706548,-7.611643,9.345626,4.312148,-7.867244,1.964790,-7.829068,9.166891,-6.275169,-5.410733,1.978554,-9.720287,-5.991396,-4.423675,-6.382054,-5.495411,8.369256,4.412047,-4.892419,4.717477,-1.228078,5.785012,-8.509491,0.478315,3.659542,4.573717,-4.451700,-0.772434,-1.947137,-8.156021,4.375332,7.790402,3.642251,-1.839827,2.097115,-1.237245,-2.272377,2.541681,-3.224142,5.902596,-3.709864,-8.356145,-9.149933,7.022435,9.286232,9.058511,-9.770462,-7.983932,-4.381841,2.042328,-6.067991,7.191730,-3.904005,5.601091,2.863056,-9.309264,0.645382,1.465418,0.991680,0.850378,-2.691891,-2.175489,3.711788,-7.239925,9.452005,-9.480835,2.060985,-0.959625,-9.624233,-2.531316,-9.593251,8.558309,1.891562,4.331148,5.989562,-3.887167,7.297255,-3.020001,1.419811,-3.595613,6.421334,-9.841389,3.765333,-8.747927,-1.360306,0.417725,1.876830,-5.267303,0.145869,-1.011823,-9.677199,-1.612483,7.744585,4.351089,8.341562,8.956727,-3.293033,3.144729,-1.304293,1.055953,-4.520726,5.479897,2.926061,7.235244,9.300028,4.250616,-2.237769,8.195108,-0.681012,-1.770690,1.754891,-1.093269,0.323746,6.779594,0.308972,-9.672344,8.492050,-7.654440,9.123008,-5.052561,4.827036,6.394041,7.630843,5.457395,9.260762,-7.996670,0.161119,-0.744186,-9.722855,-1.543240,-4.914350,-5.549627,-3.025140,-3.172359,-9.852830,-5.071542,-7.198997,4.491965,-7.907141,2.698661,-6.445413,-5.405274,1.695201,-9.716370,-7.162793,7.216244,1.918018,5.157318,-7.989165,2.878376,-6.817935,-4.762436,9.963732,-4.058086,-4.476773,7.722186,4.750931,-3.457120,-3.156073,7.211178,8.861099,2.222348,-0.231919,-1.416610,-9.628517,6.527119,6.816253,7.912971,1.709971,4.880861,-8.319959,-2.243523,-4.197992,-6.314682,9.809201,-5.473403,-0.293388,7.649965,-5.323916,-3.060970,1.764860,2.436950,5.511888,-8.200223,-7.737430,7.174828,-0.954502,6.541999,-6.923807,-3.542338,9.951370,6.614519,-6.083984,-8.309285,-0.953790,-9.683773,-7.931714,1.844413,-8.805333,-0.670979,5.594456,9.402720,4.553161,-8.246898,-9.015016,6.016468,6.787599,-3.232120,8.621781,-2.240193,1.678115,1.718073,-7.223622,9.671038,-9.283465,-3.083931,1.280350,-4.854165,-1.251062,4.055416,9.773001,-0.026299,3.444303,-6.116037,6.173225,-2.103354,7.241498,-6.849930,-0.357409,0.211978,1.705687,-1.710566,4.155867,4.960784,-0.098275,1.566434,3.430594,-9.703827,-1.769505,1.536488,-2.279935,-7.953345,8.772955,7.157419,-2.430779,4.787194,-7.890617,8.031344,-0.740081,1.689378,4.400168,-7.452493,-5.542754,3.373762,0.469250,-9.779751,-8.949731,-0.095580,4.761255,-4.584356,-4.594131,8.009085,9.319863,-3.905899,3.765662,-4.040168,-2.208583,3.900085,-8.455783,5.956386,5.428001,1.133750,-9.081336,-8.886136,4.672873,-0.823643,-1.718242,0.045212,-6.814515,2.893209,9.620647,-1.059744,-1.954813,9.912845,-9.609627,-7.993574,-3.416169,4.485936,2.568789,8.421481,-8.495651,-0.789741,0.928729,0.095573,-6.575798,-5.754524,-9.830640,7.018869,-8.566899,1.102092,-3.512569,1.793346,6.930588,8.446966,-1.547658,-9.609654,-7.770162,1.717510,-7.970162,3.437314,7.225296,-1.018783,-6.461950,-5.566041,-2.785639,6.893133,8.805565,-4.657206,-6.145486,-5.919401,-3.804039,1.808240,6.588849,-3.226456,3.344994,-8.004146,3.552659,5.115333,7.545943,7.446806,7.924692,-7.399811,3.775364,-2.737468,-8.171882,-1.173759,5.243290,-1.387787,-1.190455,-0.373975,-6.822583,-4.485464,0.065686,-6.521267,2.835069,2.507790,-0.086612,6.078238,-5.685172,9.366475,-2.934587,7.637760,-6.626158,2.079873,-1.913258,-2.314398,-0.843827,4.436255,-2.412676,-8.657314,2.868674,7.197933,1.351354,0.245287,-4.596181,6.716662,-5.104245,-7.758405,-6.692450,3.580052,0.433841,0.018020,-6.490886,8.159352,-4.415426,-6.543396,8.578671,-1.911998,-8.199006,-0.384410,-7.364662,-5.405285,-6.798024,4.131590,-2.002717,-3.091992,6.786490,0.165802,-6.865016,-6.795826,0.208143,-8.962106,-4.969987,1.202712,-6.836982,1.049872,7.707842,8.975287,-2.983272,-6.510362,9.646081,-1.442290,9.239159,-4.830314,5.668142,-1.947727,1.280395,2.155363,5.281169,-8.214581,9.153559,6.178293,5.653809,-4.178649,4.455445,-2.859735,0.922390,4.819211,5.219238,-1.137249,7.475854,8.319343,3.459405,-5.955983,6.093981,-3.155882,0.276830,-6.470864,-5.103354,-7.424100,7.775716,-5.358525,-7.206126,8.308247,3.357973,-1.650793,8.381544,7.336288,-8.686361,6.137214,8.588111,-4.836977,5.339229,1.550958,-3.679250,-6.068544,7.028775,-8.786182,-1.129070,0.545169,-2.973801,-7.438221,1.290472,-7.192272,-9.340997,2.793793,-5.695571,-9.660722,-0.410348,4.608973,6.586845,5.739394,2.251170,-8.800873,8.570344,7.940644,2.451595,4.454641,-3.333481,0.351606,-3.901786,-4.369882,-9.003296,-9.078403,-6.886079,8.558301,9.568925,-0.509927,1.248801,9.287588,-2.203375,-0.670417,-9.217564,-0.687517,6.105196,8.944426,0.879169,-2.108082,-7.374766,-7.908241,6.545139,5.788986,-4.426888,7.527779,-0.130675,9.288700,2.610021,2.499483,1.332057,-0.781572,1.653905,-5.279901,0.221052,-0.134921,-8.564994,0.022334,1.100490,-9.480305,-4.191705,6.188281,-9.464303,-4.919437,-1.891195,-3.291671,2.120672,-8.228900,-9.726868,9.900769,-5.043717,-6.456996,9.845379,-2.901818,-5.392677,-6.397769,-5.702509,2.839257,-0.906685,-6.726771,5.084706,2.666518,-0.381913,9.286511,-9.191442,-4.455106,9.408022,7.951983,-2.182811,9.090781,4.752231,-5.686145,3.632492,-8.418996,1.542595,-0.538131,5.353344,4.226168,3.453838,0.673752,-1.429740,-7.308543,-8.505752,-4.103048,4.354432,9.580537,9.944335,-1.297133,1.808437,2.802056,-2.874754,-7.925207,1.628009,9.112424,-2.917822,-9.730988,-9.747019,-5.357152,1.013674,-1.851764,-4.988953,6.072129,9.266184,-9.990152,-2.329318,3.195456,5.997202,1.224191,8.970990,-6.116878,1.962774,-4.148357,2.879083,-7.085340,2.422623,-8.553972,-7.656760,-7.727764,0.763950,-8.586929,-0.893402,-1.306484,3.784222,-0.289396,-9.035657,1.779056,2.144020,-5.172911,-1.717843,0.499867,7.193179,-6.369128,6.275063,4.931103,7.877226,2.465902,2.962001,-3.345417,0.642715,6.083490,2.150086,4.431046,7.037896,7.155066,-3.599444,8.278068,-6.671882,6.123318,-0.991614,0.981179,-2.313032,6.715176,-8.335492,4.975507,-2.084875,-4.289861,6.896659,1.514731,1.391433,-7.350483,6.046424,7.215872,3.090843,-4.256858,9.296459,-5.598976,-5.269212,5.081879,9.834075,-8.275981,8.533082,1.737944,-9.473649,5.484421,8.880263,5.469652,-9.786036,0.695942,3.705913,6.818428,0.626727,-4.784504,-2.608062,-4.264479,-0.504195,2.961011,3.477645,-8.020742,7.385407,3.841094,-7.641637,-0.576696,9.107961,-6.530863,1.880911,6.842658,1.163631,-4.207844,3.687111,3.424461,0.143930,-0.754430,9.700553,-5.781342,-0.087858,-9.686931,-7.530562,4.883933,-4.704762,-8.646753,-1.901705,-0.201641,6.482243,2.164700,3.147696,4.656272,8.484129,-1.145922,-5.902400,-1.951210,-3.189753,3.236137,2.041936,3.133193,2.630806,2.972628,6.942302,4.849885,-0.737134,-8.224508,-9.825072,-4.593749,8.285784,-4.133572,0.731670,-6.679406,5.064997,-5.924524,1.015524,-8.409309,9.179658,-5.781543,0.750511,8.852378,-3.495283,-6.099566,8.381430,-9.403914,8.366472,7.596381,8.013658,-0.252573,5.768777,5.749166,-7.490545,9.477755,7.956311,1.596472,-5.605255,-2.246392,-1.521993,4.799404,8.438552,-2.197938,-2.080628,6.578407,8.710892,5.473487,-2.140902,2.318212,-2.339167,-1.016166,-3.571317,4.176612,8.942769,2.895653,-4.176261,8.575379,2.136892,-1.039737,5.810481,4.693272,0.661781,-2.077916,-4.025849,3.720302,-9.665179,-0.063970,0.222181,0.063749,-6.248678,-9.858464,0.035092,-2.725723,4.943175,3.304591,6.621391,0.761932,0.246270,-7.899807,-7.614574,-3.589171,-7.036550,2.824697,-8.128389,-7.219594,-3.817485,3.819318,-6.408299,-7.001571,-8.377787,7.551738,-2.660626,6.160377,-5.440446,2.381763,4.510924,6.915383,5.971493,4.590921,-2.691792,-3.424005,-3.923494,-0.673373,6.553848,-6.880982,-4.913111,8.786926,-0.756231,-0.526908,4.353076,0.362254,-3.295885,-6.592803,-8.756746,5.390225,0.560932,4.303074,-2.644312,-9.067909,-8.648713,9.417619,-9.227406,6.837313,5.728772,6.453069,-0.354131,1.667790,-3.008571,-4.997585,3.988505,7.579753,6.673140,-8.309524,-4.731451,2.975485,1.722859,-3.671226,-6.494294,3.067285,7.286890,-1.099974,9.194816,-4.062047,6.576625,-6.084473,8.155273,2.417064,-0.342280,-2.384093,-2.765124,4.821425,-6.326310,-8.140143,-8.695118,8.274426,-9.557487,8.862728,7.234014,5.542113,-3.654234,-5.774345,9.610097,-2.420774,7.584077,8.223288,-5.251990,-7.067031,-0.826606,9.143400,-2.509443,-7.531480,-4.627466,-9.476746,-4.708994,-8.718613,-9.285519,-1.607888,-2.537821,2.058160,1.269772,-0.368046,-2.352312,-7.583263,8.999909,8.730895,-8.989826,-0.257837,8.459972,9.775969,8.892403,-7.340048,-8.352146,5.517308,8.751395,-8.056263,2.202547,-9.604154,0.057806,-9.272290,3.057449,-1.984537,-2.981321,-8.302133,-7.675867,0.666939,-9.479791,6.476403,-2.675748,9.046965,2.073421,-4.399884,-3.648673,-3.264716,1.775869,-2.588587,-5.286632,7.654765,-6.822057,-5.174781,9.054044,-8.760181,7.770652,-1.442781,-2.044426,8.514480,1.750409,3.025958,0.297620,-1.314353,-4.210607,2.311201,2.571394,1.590874,-0.786683,-0.918648,5.605259,8.098288,-6.833933,-3.614983,-0.287903,0.262820,9.074911,0.258536,-8.881558,-7.454877,6.642347,-8.096275,-6.784794,-2.047336,5.682787,-4.595852,3.916315,-5.126373,4.042870,-3.859603,-2.703512,9.788554,-4.757235,-7.184440,-7.738545,-1.860185,-0.930595,5.663371,-8.940588,-5.401563,-5.058145,1.938198,-2.898243,-5.727312,-9.185547,1.932128,-8.131005,9.831351,-2.835853,8.776811,-6.773058,-7.992001,-1.045043,2.690331,2.508139,1.927118,-1.190347,1.045057,-9.052261,-8.217082,-0.727072,7.171572,-7.783700,-3.551283,8.952982,-5.930018,0.762949,-1.570796,-7.624957,-4.837200,6.570784,5.662685,-6.136676,7.846805,-9.006385,-0.633297,2.390872,3.938409,-3.636177,-6.532574,-0.122985,2.226171,9.904208,2.479201,7.282728,8.925076,0.635435,-1.808825,8.905192,-3.990045,4.463205,4.287294,5.099945,-5.851925,-3.280898,9.325416,9.288807,-2.754634,-3.623596,-4.247677,9.681657,9.499416,9.207619,1.446437,3.650529,-3.852185,-8.639522,5.494038,6.356333,7.359089,7.942742,-9.020098,0.084612,8.850943,-3.569696,6.500118,-1.605124,9.456328,-8.578773,-4.735547,-2.732408,-9.200740,-2.909274,-4.687959,6.900327,6.937263,-1.621286,-7.962974,-7.670696,-4.373801,5.271641,3.973237,-0.010059,6.813108,0.456404,-7.574052,6.767858,-9.791819,-6.112333,7.663375,-7.668784,-1.599418,-9.969546,-0.659977,1.662328,5.317349,-2.607868,-2.594521,4.880074,3.452658,2.137061,1.302320,-6.325839,8.744409,-7.433243,-9.477513,9.338279,-1.167477,0.169014,6.236854,2.045037,-9.542185,6.936028,-7.437443,-5.447775,4.206810,7.897069,-2.914103,-4.345520,-6.066276,-4.401249,7.183671,-0.264231,5.033228,-0.946214,-6.399661,-3.307304,2.237865,6.120997,-2.476869,8.701409,4.351167,-0.177569,-6.188711,8.392036,-8.655534,5.125069,-1.995638,0.198985,-2.811201,-0.567977,1.150068,2.182989,-3.362732,-9.226958,-2.274978,-2.519228,-7.794770,-2.782677,9.631918,1.749082,5.811706,8.477639,-0.179669,-6.967063,-0.100947,8.066831,2.271294,-7.118958,3.522997,-8.290087,-8.345825,-6.569381,-7.083127,1.401502,-5.469449,5.012858,7.839085,9.372318,4.015173,-1.097062,-2.550397,4.928193,-9.989325,7.508892,-7.874423,-3.625377,-3.414903,7.562248,3.676055,-5.016842,8.790410,8.986515,-3.380871,6.921846,-8.046959,6.923781,0.573530,-1.941532,-9.764606,-8.673599,-9.940470,7.213589,8.453044,6.725058,6.508854,-5.886511,3.625479,-1.467268,7.071802,0.790516,0.458701,-3.430557,9.381618,5.451584,1.832466,-4.668579,-8.760492,-1.089715,-9.793842,-3.916671,-1.734918,-4.951316,-7.762477,9.356540,-5.087335,-1.916039,-6.169493,3.570913], dtype = "float32")#candidate|8067|(2156,)|const|float32
const_8068 = relay.const([-10,-10,-4,-5,9,-2,-7,8,1,-8,10,4,8,8,1,-3,-8,-1,-6,-3,8,-5,-8,8,-6,8,10,8,2,-1,-1,4,-7,-2,-3,8,-2,-4,-6,2,1,-8,2,9,1,-8,6,2,7,6,10,-9,7,-5,-10,-6,4,1,7,-9,2,3,-1,3,10,8,-3,2,-4,4,-1,2,4,1,-3,-2,-10,-3,1,-9,-5,-8,-5,10,-7,-1,7,-6,-9,4,9,-9,2,-2,-9,-1,7,5,-2,-1,-1,9,-8,-9,-4,-2,-9,-4,4,4,-6,-10,-4,4,9,-5,10,8,-1,-6,10,-9,-1,-1,-8,8,10,6,-2,2,-8,2,2,-5,-7,-7,-10,-9,1,4,7,-5,2,2,4,5,-10,-9,9,3,-6,4,-9,7,-4,-1,-6,9,8,2,-3,7,6,-4,-1,-10,1,6,-8,10,-5,5,7,-9,-3,-10,-10,10,2,-2,4,3,7,-5,-10,6,-8,-9,3,2,1,-4,7,-8,9,4,-1,9,4,-2,3,-4,-9,7,-10,-9,1,1,-7,-10,8,-2,-3,-6,8,-3,-6,-3,-9,8,-1,10,2,3,2,-8,7,1,2,7,3,-1,9,3,-6,7,2,1,-1,-3,-8,-7,-2,7,4,-4,-7,8,-8,-2,-6,4,-8,-9,-1,-4,-7,8,-7,-3,-10,-2,3,3,-2,8,5,3,-6,2,7,8,7,3,-10,7,-7,-7,8,10,4,-6,-9,-10,-3,2,-10,-6,-6,-1,7,-6,-6,5,-10,1,-2,-3,-8,-7,7,1,-2,2,-5,-4,-10,9,3,9,-8,9,1,-2,-5,10,-8,1,7,8,6,-6,-2,4,8,1,8,-7,-2,-8,8,10,8,-6,5,-8,-5,1,1,5,1,-7,-5,-7,-3,-3,2,7,-5,4,-8,-4,7,2,-1,9,-2,2,-1,4,4,7,3,4,8,9,-2,-8,-6,-9,9,2,4,-1,-3,-3,4,-10,5,-4,-6,8,6,7,10,3,-1,1,7,2,-8,-6,4,-9,4,1,-6,7,9,-6,-7,-6,-1,6,10,-9,-5,-9,5,-8,-1,8,-2,-9,-7,9,3,-4,6,-4,2,-3,10,-5,-9,-3,-6,10,-6,-10,-4,-8,-6,-1,4,9,9,-2,3,2,-2,4,8,5,-3,-6,4,3,-10,-2,-10,-10,-2,-7,-2,9,-6,10,-9,5,-8,10,-8,-1,9,-3,-6,-7,-7,-5,5,-1,-9,2,-5,-3,-1,6,7,-8,-5,-5,-5,-9,-9,1,8,-3,-6,8,-4,-6,-1,-4,2,-5,2,9,-2,-10,-3,-5,7,-10,4,4,-9,5,-5,-10,-3,-5,5,-2,2,-10,-5,8,4,4,-7,8,-9,6,3,4,-9,1,-4,-2,5,3,-6,1,-10,6,3,1,-8,-7,-1,7,1,5,-2,-2,-9,-6,-6,3,-2,-3,-4,9,1,2,-9,3,8,-7,-7,7,6,8,-2,9,-9,-1,5,4,-5,8,-7,6,-1,6,-2,3,-8,-1,2,-4,-10,-4,4,1,-6,5,-3,9,-4,3,1,5,7,-10,3,9,-1,-10,-1,-6,1,-10,-2,10,7,-3,9,8,3,-2,1,10,4,-7,-3,4,4,-8,-5,6,4,-10,9,-7,-5,-9,-2,-8,-10,-3,-8,7,-1,2,-7,-9,8,-2,-9,-9,1,1,-8,-4,-6,3,4,-7,9,4,-8,5,-2,2,9,6,-9,5,-5,-10,-6,6,5,6,5,-9,2,-6,4,-6,9,-3,8,-8,5,-8,10,-10,7,8,5,-4,3,1,-10,-8,-10,9,-7,5,-6,-4,6,1,1,7,7,4,3,-7,4,-2,-6,-4,-10,8,1,2,5,3,3,3,1,-1,-3,-7,-4,3,4,5,-8,9,3,9,7,4,-1,-1,4,-9,8,6,-7,-2,-8,-2,-9,8,-6,-10,10,-2,-2,-5,3,-3,-10,-7,-8,5,-7,4,1,6,10,8,-1,-1,3,9,-10,1,3,-4,-6,-9,-7,6,5,-3,9,7,2,-3,5,-3,6,4,9,-4,-8,-7,-8,-3,7,9,9,-4,-3,-8,-10,-3,4,-8,5,9,5,-8,-10,-7,9,1,-10,-1,-1,-1,-9,-7,-2,-5,9,2,-1,-8,-3,6,-8,2,-1,3,1,4,8,2,-8,-9,-2,-2,1,-3,-4,-8,5,4,-10,-9,3,-10,5,-3,10,2,10,6,4,8,8,4,-4,1,-5,7,-6,-9,1,-5,-3,-3,-1,-6,8,-4,-10,2,-7,9,5,-2,-5,9,-4,-6,-1,1,10,8,-3,-4,3,8,9,3,-5,5,5,-5,8,7,-2,3,8,-10,4,-6,2,-6,-1,-6,-6,-6,5,-2,-3,-4,9,-9,-7,-10,6,9,-9,-10,-5,-5,-7,2,2,-5,-4,4,-8,-2,5,-7,7,-9,-10,7,5,-6,4,-2,-1,3,-10,9,-1,3,3,7,6,8,-4,1,6,-2,5,-7,3,-2,-1,10,-3,8,-5,-8,2,8,9,-7,-9,5,3,2,6,-10,6,8,5,5,-4,2,9,2,-1,2,6,-4,3,-8,10,5,9,5,-1,5,-5,9,-7,1,10,8,3,6,7,-5,3,5,3,-8,-2,10,-2,-3,-2,8,8,-9,-7,-10,-8,-3,7,2,8,6,5,-1,-7,-5,-9,-2,-7,9,-5,-10,4,-3,-1,-10,-7,3,4,-6,-6,-1,-3,1,5,6,1,-2,-1,-5,-2,-5,3,10,2,10,6,-5,6,1,-8,-1,4,5,10,10,-6,8,5,-7,-3,-6,-8,-10,-9,-8,-7,-7,2,-8,1,-4,-5,8,-2,6,2,6,5,6,8,-10,-5,-8,8,-1,4,-7,8,10,8,5,9,2,9,5,-6,-4,1,-7,-6,7,-4,10,8,1,-7,10,10,-10,-1,-10,-4,-7,-4,4,-5,-3,-5,-10,-2,-1,-9,-7,-2,-2,5,-2,-6,-2,7,4,6,10,8,-6,-5,1,9,-7,-4,6,10,-6,10,9,-5,9,10,-5,-1,1,10,-2,-10,10,7,-5,5,-5,1,-10,7,-10,-1,7,7,-10,10,6,10,-5,-1,3,-2,-10,-2,-1,-2,-8,-9,-6,3,-5,-9,-2,-6,-5,-7,-4,-7,-6,-9,-10,10,-5,-4,-7,-9,9,-3,9,10,-8,-2,-8,9,10,10,8,-9,-1,5,10,-10,4,-10,3,-6,-6,3,9,-9,9,-10,-3,9,-4,4,8,2,7,6,-3,1,1,5,-8,-9,-6,-4,-10,3,-9,9,-10,1,5,5,10,-9,-2,10,-1,-6,2,7,5,5,6,-1,-4,-4,-10,9,7,-10,2,-10,1,-1,-8,-4,-8,-6,2,3,-10,5,7,1,-1,4,10,-8,10,5,-10,10,7,-4,-3,-5,7,-4,-5,10,-3,9,10,6,1,-9,-2,8,-5,8,-1,-1,-4,-5,-10,-7,1,8,-5,3,-8,6,-1,9,7,4,-2,-8,-9,-9,10,-4,2,-4,8,3,-10,-8,-1,9,-6,-8,7,7,1,-7,-10,1,4,-8,-3,-10,10,-5,5,-1,-6,-1,8,-1,4,9,-10,7,-6,-6,-8,3,6,-10,-4,4,-1,5,3,-8,5,-4,-10,8,-7,-6,-1,-2,-8,8,5,-2,-6,-6,2,-9,-5,-1,-3,-10,3,7,6,-1,-4,-4,2,5,-2,1,9,2,-3,9,-10,-8,7,-9,7,-5,10,1,-7,3,9,5,4,-4,-8,2,-3,3,6,-3,1,-5,7,-4,-2,4,-1,-1,-4,-1,-9,-2,-5,-10,-6,-5,1,5,-6,4,8,-1,-9,-5,9,-7,8,9,-4,-6,4,-5,-1,-4,-3,-5,8,-9,8,10,-9,4,-6,-1,-5,-3,8,3,2,6,-6,6,7,-9,-9,-2,5,8,-10,4,-7,4,6,-5,-5,-4,4,-4,-5,-5,3,-7,-3,4,3,1,-6,5,4,-10,3,-9,2,-7,10,5,7,-4,4,-8,-5,-9,5,2,-6,-8,4,5,5,-5,3,-8,2], dtype = "uint8")#candidate|8068|(1536,)|const|uint8
call_8065 = relay.TupleGetItem(func_4749_call(relay.reshape(const_8066.astype('int8'), [200,]), relay.reshape(const_8067.astype('float32'), [2156,]), relay.reshape(const_8068.astype('uint8'), [1536,]), ), 3)
call_8069 = relay.TupleGetItem(func_4754_call(relay.reshape(const_8066.astype('int8'), [200,]), relay.reshape(const_8067.astype('float32'), [2156,]), relay.reshape(const_8068.astype('uint8'), [1536,]), ), 3)
func_6268_call = mod.get_global_var('func_6268')
func_6271_call = mutated_mod.get_global_var('func_6271')
const_8088 = relay.const([[4,1],[-4,-5],[-8,3],[1,-8],[-10,8],[-8,-8],[10,-6],[2,4],[9,-5],[8,6],[-2,-4],[6,4],[1,-4],[8,5],[-9,-8],[2,8],[-1,-4],[4,5],[-8,-7],[-10,-2],[2,1],[-9,-9],[-9,3],[2,5],[-4,-2],[-1,-2],[-5,5],[1,-8],[3,-2],[-6,-3],[9,6],[-5,3],[-10,-8],[2,-1],[-1,2],[-4,-5],[-10,9],[8,-8],[-6,-8],[-5,-2],[8,9],[-2,-6],[-7,-4],[-3,-9],[-6,6],[10,10],[-10,9],[-1,-4],[3,-8],[-2,-9],[-7,1],[4,10],[8,-3],[-1,6],[-3,-9],[-8,-5],[4,7],[10,-8],[-10,6],[1,-5],[3,7],[5,7],[8,4],[1,-6],[-3,-5],[-10,-9],[-2,-8],[10,-1],[-3,6],[2,6],[3,6],[9,1],[9,-4],[-8,1],[7,-2],[3,7],[4,4],[1,7],[-1,-8],[-7,4],[-4,6],[3,-2],[7,5],[-9,-5],[-10,-8],[10,6],[8,-4],[2,2],[-8,8],[6,-2],[-1,-2],[-3,-5],[8,7],[9,-9],[-7,4],[3,-7]], dtype = "int16")#candidate|8088|(96, 2)|const|int16
call_8087 = relay.TupleGetItem(func_6268_call(relay.reshape(const_8088.astype('int16'), [2, 96])), 0)
call_8089 = relay.TupleGetItem(func_6271_call(relay.reshape(const_8088.astype('int16'), [2, 96])), 0)
uop_8099 = relay.log(const_8088.astype('float32')) # shape=(96, 2)
output = relay.Tuple([call_8061,call_8065,const_8066,const_8067,const_8068,call_8087,uop_8099,])
output2 = relay.Tuple([call_8062,call_8069,const_8066,const_8067,const_8068,call_8089,uop_8099,])
func_8102 = relay.Function([], output)
mod['func_8102'] = func_8102
mod = relay.transform.InferType()(mod)
mutated_mod['func_8102'] = func_8102
mutated_mod = relay.transform.InferType()(mutated_mod)
func_8102_call = mutated_mod.get_global_var('func_8102')
call_8103 = func_8102_call()
output = call_8103
func_8104 = relay.Function([], output)
mutated_mod['func_8104'] = func_8104
mutated_mod = relay.transform.InferType()(mutated_mod)
func_8102_call = mod.get_global_var('func_8102')
func_8104_call = mutated_mod.get_global_var('func_8104')
call_8150 = relay.TupleGetItem(func_8102_call(), 1)
call_8151 = relay.TupleGetItem(func_8104_call(), 1)
output = call_8150
output2 = call_8151
func_8166 = relay.Function([], output)
mod['func_8166'] = func_8166
mod = relay.transform.InferType()(mod)
output = func_8166()
func_8167 = relay.Function([], output)
mutated_mod['func_8167'] = func_8167
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4007_call = mod.get_global_var('func_4007')
func_4009_call = mutated_mod.get_global_var('func_4009')
call_8194 = func_4007_call()
call_8195 = func_4007_call()
func_6333_call = mod.get_global_var('func_6333')
func_6335_call = mutated_mod.get_global_var('func_6335')
call_8209 = relay.TupleGetItem(func_6333_call(), 0)
call_8210 = relay.TupleGetItem(func_6335_call(), 0)
output = relay.Tuple([call_8194,call_8209,])
output2 = relay.Tuple([call_8195,call_8210,])
func_8211 = relay.Function([], output)
mod['func_8211'] = func_8211
mod = relay.transform.InferType()(mod)
output = func_8211()
func_8212 = relay.Function([], output)
mutated_mod['func_8212'] = func_8212
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5263_call = mod.get_global_var('func_5263')
func_5264_call = mutated_mod.get_global_var('func_5264')
call_8266 = relay.TupleGetItem(func_5263_call(), 3)
call_8267 = relay.TupleGetItem(func_5264_call(), 3)
output = relay.Tuple([call_8266,])
output2 = relay.Tuple([call_8267,])
func_8273 = relay.Function([], output)
mod['func_8273'] = func_8273
mod = relay.transform.InferType()(mod)
mutated_mod['func_8273'] = func_8273
mutated_mod = relay.transform.InferType()(mutated_mod)
func_8273_call = mutated_mod.get_global_var('func_8273')
call_8274 = func_8273_call()
output = call_8274
func_8275 = relay.Function([], output)
mutated_mod['func_8275'] = func_8275
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7992_call = mod.get_global_var('func_7992')
func_7993_call = mutated_mod.get_global_var('func_7993')
call_8276 = func_7992_call()
call_8277 = func_7992_call()
uop_8286 = relay.sinh(call_8276.astype('float64')) # shape=(5, 4, 14)
uop_8288 = relay.sinh(call_8277.astype('float64')) # shape=(5, 4, 14)
output = uop_8286
output2 = uop_8288
func_8292 = relay.Function([], output)
mod['func_8292'] = func_8292
mod = relay.transform.InferType()(mod)
output = func_8292()
func_8293 = relay.Function([], output)
mutated_mod['func_8293'] = func_8293
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7955_call = mod.get_global_var('func_7955')
func_7956_call = mutated_mod.get_global_var('func_7956')
call_8323 = func_7955_call()
call_8324 = func_7955_call()
output = call_8323
output2 = call_8324
func_8333 = relay.Function([], output)
mod['func_8333'] = func_8333
mod = relay.transform.InferType()(mod)
output = func_8333()
func_8334 = relay.Function([], output)
mutated_mod['func_8334'] = func_8334
mutated_mod = relay.transform.InferType()(mutated_mod)
const_8345 = relay.const([[[3.576905,0.982544,-8.412271,4.963292,5.244048,-7.190358,6.752820,-1.082863,-8.333678,3.388930],[9.710045,-9.224744,2.801924,2.823111,-2.673724,3.239187,0.143323,-5.667260,-0.322711,-7.683603],[-4.845195,-1.380410,2.997600,4.917943,7.968212,-1.334847,7.851297,7.519487,-3.268696,-8.319783],[4.763945,-7.631940,4.232851,-1.506121,-4.946361,2.527046,7.459317,3.784675,-7.261054,-1.837266],[8.253070,-8.823528,-2.704401,2.266672,-1.064265,3.134720,7.120552,-1.603444,9.833742,-1.808231],[-5.228277,-9.174687,3.012890,-0.038380,4.954102,2.363999,-2.876137,5.731297,-7.390824,5.728436],[-6.521640,-1.346169,3.779306,-7.931924,-4.607036,-8.741643,-3.537988,-0.113782,-8.265305,-7.835749],[-8.763144,-0.430007,4.723036,8.175591,-1.474633,5.191364,3.332171,-3.522328,-3.735943,8.183574],[1.345649,3.278030,2.076397,-0.960142,0.760049,5.322525,-9.390054,-2.201434,6.472528,0.729160],[-1.821378,-8.575129,1.549931,-7.128338,-8.368277,-4.864766,-7.824865,6.852706,3.444999,2.662652],[-7.144795,-9.340788,3.092275,9.867118,-8.191082,-6.293608,3.758272,9.159082,-0.269869,-9.693723]],[[1.906724,-6.791813,3.372190,3.768941,1.602770,1.808165,4.509415,7.299469,-7.686421,1.662104],[9.221278,3.622555,5.405750,0.916069,4.359124,-4.084034,-7.906570,-8.979656,-6.095610,3.622731],[-0.861815,-7.314175,-0.559482,-7.661765,-7.369579,-2.652960,-6.254419,-6.784071,-6.925961,7.930365],[8.720039,-1.271551,-4.248695,3.831762,1.407493,5.322445,9.068290,7.464446,0.854896,-4.794411],[-9.784317,3.068543,3.334365,-5.262245,-5.159434,0.885300,1.000786,2.387186,-4.556236,-2.372438],[7.601733,3.338584,9.417300,9.281093,5.200056,-3.646054,-6.896184,-1.040874,5.852165,3.404323],[-2.909011,-4.730442,-6.025748,8.610103,-0.954334,-4.593798,3.600461,4.017889,7.642267,6.200518],[-6.449420,-1.319745,-8.740004,-1.663194,3.020363,5.961456,-7.841595,7.345324,4.323234,8.232896],[-3.570078,-9.306549,-9.582407,1.763363,-4.219069,-0.357431,-0.803041,7.295582,6.965856,0.926428],[0.314060,-5.302170,-5.068830,-6.252717,-6.745149,0.991936,-6.792234,3.510007,4.333938,-9.913502],[5.342211,8.185245,4.637762,-9.443670,-8.969788,8.951264,-9.270084,-3.711810,8.156676,2.835393]],[[-7.439757,-8.314648,-0.575227,3.364920,-6.534424,0.835362,-7.680288,-9.168957,0.010475,-5.428253],[-8.537901,4.112041,5.748611,4.872826,-8.292566,9.861935,4.450954,6.444378,9.757404,-7.105440],[-6.048711,1.165620,-6.928696,-2.881938,4.216908,7.416146,-6.971862,-5.055024,-6.657836,-8.060215],[-1.537448,-9.512990,-6.510958,5.383513,-7.617577,4.415487,3.280362,-8.919685,-6.649068,2.143864],[2.568853,3.971381,5.978514,-7.039001,0.703046,7.912332,-2.785035,-5.091140,7.797605,-2.071880],[6.488505,0.557954,-9.976811,-8.681544,-3.052372,-0.183639,-3.289938,-2.235925,-2.816611,-6.623984],[2.409187,4.381185,5.823296,-2.946594,-7.335188,-1.865427,4.505863,-8.168171,2.891038,-8.374234],[8.733309,-3.854545,0.271235,4.723518,4.088124,5.535964,1.510508,-1.974664,-0.704575,-4.402550],[2.986048,-3.479475,-7.531495,-7.171444,1.444882,7.669720,-1.423627,9.991591,-3.378518,9.182271],[-9.050221,5.275408,4.303282,-5.767038,-2.057875,-5.240595,9.234726,-0.489996,-3.133566,-8.339977],[-5.290700,-7.334742,9.719529,-3.865644,-2.753613,9.166604,-8.171005,6.071613,-6.343919,-3.080157]]], dtype = "float32")#candidate|8345|(3, 11, 10)|const|float32
uop_8346 = relay.sqrt(const_8345.astype('float32')) # shape=(3, 11, 10)
output = relay.Tuple([uop_8346,])
output2 = relay.Tuple([uop_8346,])
func_8354 = relay.Function([], output)
mod['func_8354'] = func_8354
mod = relay.transform.InferType()(mod)
mutated_mod['func_8354'] = func_8354
mutated_mod = relay.transform.InferType()(mutated_mod)
func_8354_call = mutated_mod.get_global_var('func_8354')
call_8355 = func_8354_call()
output = call_8355
func_8356 = relay.Function([], output)
mutated_mod['func_8356'] = func_8356
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4315_call = mod.get_global_var('func_4315')
func_4316_call = mutated_mod.get_global_var('func_4316')
call_8379 = func_4315_call()
call_8380 = func_4315_call()
output = call_8379
output2 = call_8380
func_8406 = relay.Function([], output)
mod['func_8406'] = func_8406
mod = relay.transform.InferType()(mod)
mutated_mod['func_8406'] = func_8406
mutated_mod = relay.transform.InferType()(mutated_mod)
func_8406_call = mutated_mod.get_global_var('func_8406')
call_8407 = func_8406_call()
output = call_8407
func_8408 = relay.Function([], output)
mutated_mod['func_8408'] = func_8408
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4029_call = mod.get_global_var('func_4029')
func_4031_call = mutated_mod.get_global_var('func_4031')
call_8409 = relay.TupleGetItem(func_4029_call(), 0)
call_8410 = relay.TupleGetItem(func_4031_call(), 0)
output = relay.Tuple([call_8409,])
output2 = relay.Tuple([call_8410,])
func_8416 = relay.Function([], output)
mod['func_8416'] = func_8416
mod = relay.transform.InferType()(mod)
mutated_mod['func_8416'] = func_8416
mutated_mod = relay.transform.InferType()(mutated_mod)
func_8416_call = mutated_mod.get_global_var('func_8416')
call_8417 = func_8416_call()
output = call_8417
func_8418 = relay.Function([], output)
mutated_mod['func_8418'] = func_8418
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6022_call = mod.get_global_var('func_6022')
func_6024_call = mutated_mod.get_global_var('func_6024')
call_8432 = relay.TupleGetItem(func_6022_call(), 0)
call_8433 = relay.TupleGetItem(func_6024_call(), 0)
uop_8439 = relay.sigmoid(call_8432.astype('float64')) # shape=(5, 4, 14)
uop_8441 = relay.sigmoid(call_8433.astype('float64')) # shape=(5, 4, 14)
func_2985_call = mod.get_global_var('func_2985')
func_2988_call = mutated_mod.get_global_var('func_2988')
const_8443 = relay.const([[2,-3,5,-4,10,4,-4,8,5,3,-8,1,-1,8,2,1,2,-5,-9,5],[9,-9,2,4,-3,-3,9,-5,-2,4,-5,-8,-8,-3,3,4,9,6,-1,1],[7,-6,-9,9,-8,-7,-7,-7,7,-9,9,-4,-9,4,-3,5,-10,-10,-4,2],[1,2,-4,10,10,-4,5,1,-10,-5,9,-5,-8,6,4,-3,-7,5,-7,-3],[-6,-10,-8,-6,-4,-3,8,-10,3,-2,5,-3,2,4,-5,-8,5,-2,7,-3],[-9,-5,-4,-7,2,5,-5,-10,8,-8,-10,-4,4,-9,-5,5,-9,-3,5,10],[-1,5,-5,3,-8,6,7,6,-5,-4,9,6,-10,-9,-1,2,-3,-8,-3,-2],[1,-2,10,-2,3,5,7,-10,-10,-10,9,3,-1,10,1,9,-4,4,9,6],[4,-5,-5,-6,5,8,-9,6,3,8,-10,7,7,7,-7,-7,-6,-2,7,-6],[5,4,4,-6,8,10,-10,-3,8,1,2,-6,10,9,-5,10,8,4,4,8]], dtype = "int8")#candidate|8443|(10, 20)|const|int8
call_8442 = func_2985_call(relay.reshape(const_8443.astype('int8'), [5, 5, 8]))
call_8444 = func_2985_call(relay.reshape(const_8443.astype('int8'), [5, 5, 8]))
func_5570_call = mod.get_global_var('func_5570')
func_5571_call = mutated_mod.get_global_var('func_5571')
call_8452 = relay.TupleGetItem(func_5570_call(), 1)
call_8453 = relay.TupleGetItem(func_5571_call(), 1)
func_5570_call = mod.get_global_var('func_5570')
func_5571_call = mutated_mod.get_global_var('func_5571')
call_8458 = relay.TupleGetItem(func_5570_call(), 1)
call_8459 = relay.TupleGetItem(func_5571_call(), 1)
func_5414_call = mod.get_global_var('func_5414')
func_5415_call = mutated_mod.get_global_var('func_5415')
call_8466 = relay.TupleGetItem(func_5414_call(), 2)
call_8467 = relay.TupleGetItem(func_5415_call(), 2)
output = relay.Tuple([uop_8439,call_8442,const_8443,call_8452,call_8458,call_8466,])
output2 = relay.Tuple([uop_8441,call_8444,const_8443,call_8453,call_8459,call_8467,])
func_8474 = relay.Function([], output)
mod['func_8474'] = func_8474
mod = relay.transform.InferType()(mod)
mutated_mod['func_8474'] = func_8474
mutated_mod = relay.transform.InferType()(mutated_mod)
func_8474_call = mutated_mod.get_global_var('func_8474')
call_8475 = func_8474_call()
output = call_8475
func_8476 = relay.Function([], output)
mutated_mod['func_8476'] = func_8476
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5340_call = mod.get_global_var('func_5340')
func_5342_call = mutated_mod.get_global_var('func_5342')
call_8491 = func_5340_call()
call_8492 = func_5340_call()
func_8211_call = mod.get_global_var('func_8211')
func_8212_call = mutated_mod.get_global_var('func_8212')
call_8494 = relay.TupleGetItem(func_8211_call(), 0)
call_8495 = relay.TupleGetItem(func_8212_call(), 0)
output = relay.Tuple([call_8491,call_8494,])
output2 = relay.Tuple([call_8492,call_8495,])
func_8503 = relay.Function([], output)
mod['func_8503'] = func_8503
mod = relay.transform.InferType()(mod)
output = func_8503()
func_8504 = relay.Function([], output)
mutated_mod['func_8504'] = func_8504
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6470_call = mod.get_global_var('func_6470')
func_6472_call = mutated_mod.get_global_var('func_6472')
call_8528 = relay.TupleGetItem(func_6470_call(), 0)
call_8529 = relay.TupleGetItem(func_6472_call(), 0)
output = call_8528
output2 = call_8529
func_8551 = relay.Function([], output)
mod['func_8551'] = func_8551
mod = relay.transform.InferType()(mod)
output = func_8551()
func_8552 = relay.Function([], output)
mutated_mod['func_8552'] = func_8552
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5481_call = mod.get_global_var('func_5481')
func_5482_call = mutated_mod.get_global_var('func_5482')
call_8606 = relay.TupleGetItem(func_5481_call(), 1)
call_8607 = relay.TupleGetItem(func_5482_call(), 1)
output = call_8606
output2 = call_8607
func_8613 = relay.Function([], output)
mod['func_8613'] = func_8613
mod = relay.transform.InferType()(mod)
output = func_8613()
func_8614 = relay.Function([], output)
mutated_mod['func_8614'] = func_8614
mutated_mod = relay.transform.InferType()(mutated_mod)
var_8615 = relay.var("var_8615", dtype = "uint8", shape = (8, 1, 1))#candidate|8615|(8, 1, 1)|var|uint8
var_8616 = relay.var("var_8616", dtype = "uint8", shape = (8, 10, 16))#candidate|8616|(8, 10, 16)|var|uint8
bop_8617 = relay.bitwise_and(var_8615.astype('uint8'), var_8616.astype('uint8')) # shape=(8, 10, 16)
func_571_call = mod.get_global_var('func_571')
func_575_call = mutated_mod.get_global_var('func_575')
const_8629 = relay.const([2,-10,5,-10,3,3,-7,-2,7,-5,-7,-8,1,10,-4,3,2,9,-1,8], dtype = "uint64")#candidate|8629|(20,)|const|uint64
call_8628 = relay.TupleGetItem(func_571_call(relay.reshape(const_8629.astype('uint64'), [2, 2, 5]), relay.reshape(const_8629.astype('uint64'), [2, 2, 5]), ), 1)
call_8630 = relay.TupleGetItem(func_575_call(relay.reshape(const_8629.astype('uint64'), [2, 2, 5]), relay.reshape(const_8629.astype('uint64'), [2, 2, 5]), ), 1)
var_8632 = relay.var("var_8632", dtype = "uint8", shape = (8, 10, 16))#candidate|8632|(8, 10, 16)|var|uint8
bop_8633 = relay.bitwise_or(bop_8617.astype('uint8'), relay.reshape(var_8632.astype('uint8'), relay.shape_of(bop_8617))) # shape=(8, 10, 16)
func_3956_call = mod.get_global_var('func_3956')
func_3960_call = mutated_mod.get_global_var('func_3960')
const_8647 = relay.const([1.879796,1.966081,3.676306,-6.827258,5.272842,2.747911,5.338756,7.747026,-5.956397,-0.364871,-5.333012,-9.654473,1.134276,-4.346477,9.004908,-7.086312,8.685682,2.774873,-1.085084,-4.124337,-7.467724,-7.989423,-7.256677,5.784693,-7.455887,-3.140415,-4.300806,7.894647,1.580130,-8.325689,-8.300460,-2.137065,8.548136,-2.862166,0.364220,0.164784,-7.076252,0.341038,0.148135,2.979079,-7.023020,-7.541415,6.428906,-9.522611,6.927985,5.471761,7.470133,6.090839,0.654451,4.078638,-3.912504,-3.946770,-9.556189,2.466093,-5.895728,6.237183,-4.182777,-4.113070,1.604066,6.858283,5.037889,-0.402650,-2.134044,7.208909,7.982142,-2.990965,0.930286,-0.688823,-2.172720,7.706773,8.644310,-9.837241,-5.049255,3.517846,2.338575,-8.297635,4.794165,-1.703036,-9.002706,-7.064778,-5.029407,1.759514,9.883489,6.371534,-5.227408,7.122336,-3.034852,0.565279,-9.457629,-0.647345,8.413291,-5.179153,-2.153041,-5.630133,0.176600,-8.215190,6.242495,9.354423,-1.394796,9.959492,-5.126118,-0.552872,-6.736913,4.526672,-6.332851,-9.843457,8.265768,-6.520602,6.881494,-6.404939,0.863995,-9.744776,8.915798,-5.343884,3.869611,-5.666154,-3.938284,-3.182244,-3.132135,7.364610,2.513989,0.664035,-6.545052,-9.416253,-7.316752,-2.762795,-7.368477,9.133652,6.320117,5.977665,4.886971,-2.949220,-6.473385,-2.763761,-8.109676,0.809402,1.022775,-7.765860,-8.854062,-1.986356,-1.209338,2.205330,3.703317,-3.947827,-0.034529,1.389437,2.087497,0.924826,-1.543316,-1.949346,9.553985,7.791904,-9.003506,-2.579141,-5.230760,-2.274901,-5.438994,3.504603,-2.816507,-5.540294,8.667093,-1.625873,9.712122,-9.965028,3.067962,-8.475867,-1.036537,6.803048,-7.419433,-7.615759,-9.074797,2.730870,-3.358424,6.010028,-2.756536,2.276217,1.339502,-1.938675,9.966257,7.974493,2.951808,6.750464,5.805521,2.292198,-8.699891,-4.017544,-5.692712,4.161540,3.419117,6.658108,-1.960812,1.129199,-2.790053,-7.269854,9.772579,-4.958116,-6.927566,-4.846393,-8.205456,4.841567,5.162166,-5.647790,1.435232,-9.734083,-0.354231,-9.699899,-1.257536,-5.964963,5.570816,-7.897841,-7.064345,8.650817,-2.707503,-6.295139,8.913048,-5.323062,-5.132681,-9.268773,-8.369593,-5.573008,-7.183097,-1.374947,-9.237763,6.837187,1.695428,-7.370861,-5.601001,-9.451685,-6.899464,-7.471780,-1.021311,-3.516603,3.268404,-6.420735,-9.581172,-5.635070,6.280938,3.511980,5.282955,0.063676,0.492412,9.913120,-2.653789,-3.740325,-7.996610,-9.052756,7.452380,7.125094,-2.954610,5.219783,-3.793824,3.084365,-5.639189,-2.671341,-6.777851,-3.264115,7.565016,8.099828,-2.921231,-1.615655,-9.685663,6.755419,-9.789845,-3.050934,2.727631,8.924753,9.858815,3.883868,5.764792,-5.064889,-7.526245,0.629296,-7.489169,9.551348,2.416022,2.285454,-8.051048,7.932538,-7.382174,0.757626,5.406412,5.711791,-6.329635,-4.084829,-0.268155,6.998482,-3.679143,0.038002,0.182281,5.800315,-7.337823,5.850152,2.570825,1.448580,-1.092978,2.957692,4.835394,4.175244,-1.738221,-1.122728,-6.770556,1.116989,-1.745695,2.781614,7.022075,-6.100171,0.878921,-9.091094,7.923530,-6.040412,9.904073,5.045314,3.717966,-5.592133,0.723122,-6.259214,-4.098179,-9.472221,-6.916014,-7.224803,-2.014920,-9.912743,-3.950569,-4.343892,-0.802623,-5.960822,0.503748,2.892544,-5.544388,-0.444741,-1.015290,2.383767,-9.855358,1.409595,3.686326,-4.843990,5.257146,3.636734,6.470002,1.542439,9.701561,8.372992,1.747555,6.106193,-0.187430,4.907501,-3.779548,7.454330,-9.267429,-3.776668,9.102342,4.600751,8.425499,-3.708478,4.488493,-8.690837,2.407650,6.814982,-6.906868,-9.698433,-7.740639,8.433648,-2.983066,9.737982,-5.565684,-0.029966,-9.570098,-6.354679,5.338101,-6.465237,-0.416191,7.271189,4.624661,-5.270078,8.305157,-7.153955,6.347461,-8.644949,3.732444,-6.055994,6.732572,7.424382,8.146509,1.908682,-5.274181,0.650867,3.750780,9.363150,3.002988,-0.351518,-6.871172,-2.226604,1.812073,-5.085195,-7.255022,-5.789866,7.360098,1.437901,6.412733,2.557737,-6.305379,-7.091325,7.863676,-1.295059,2.889624,9.351352,-1.755684,1.019584,1.615678,-9.501816,0.657661,1.658637,-2.887060,7.227815,-5.427800,1.652360,6.601993,-3.622458,4.241931,6.767638,3.461637,9.294412,-1.921283,2.339136,-4.697831,5.616349,-1.311339,-9.422706,4.787637,-6.109935,0.646372,-4.804212,8.183470,8.840498,-6.996563,-6.000060,-1.615810,1.004375,-6.640548,-4.757750,-0.198442,-5.142100,-0.383522,7.425773,-1.955860,0.802605,5.116570,-3.704396,-9.785160,-9.763257,-2.459101,8.000610,-1.737984,0.045231,0.873737,1.185142,8.326934,8.425547,-5.659756,8.762456,-6.126322,-5.907054,6.482791,7.750341,4.797361,-5.695350,-8.488992,-0.059863,-8.564561,8.903981,1.157594,1.722443,3.406352,-4.711255,1.075166,-3.992649,0.266748,7.744346,-7.788899,-3.100260,-6.946278,8.158688,-2.599940,6.350398,-7.884083,1.339352,6.094209,-5.943811,4.436971,2.189362,0.157038,-1.230969,-2.973549,3.754858,-9.399379,-9.980318,-0.780839,0.020612,8.410435,4.026915,-8.377263,1.718527,2.010323,-3.717873,5.233389,3.847344,2.334781,2.889805,7.514681,-3.059434,-0.462833,8.295034,2.067491,-1.775495,0.366968,-7.334088,-7.658260,-1.656460,6.127177,-5.453810,-5.602964,4.403884,1.988735,7.757714,1.358129,9.884715,8.781134,-9.192587,8.571287,2.795246,-2.307945,-4.177162,-1.263202,-6.770894,8.769638,-0.732983,-0.230378,-8.356324,-3.417596,5.707870,5.042456,9.729350,7.085334,7.742239,-0.680027,3.736231,-5.272024,4.704078,-9.432457,9.792905,-2.978712,5.428149,2.678133,2.904099,-4.765877,-0.452515,8.809205,-7.045719,2.949530,7.889733,-8.926218,8.458795,7.924962,2.883574,-9.672718,5.895615,-4.606239,-7.300847,-0.786432,0.307145,-5.204973,8.238530,-3.276256,-0.510730,1.921905,0.765257,-1.148069,7.606445,-4.758455,-4.906151,7.571862,9.540661,-9.246301,1.682651,0.858722,3.548532,-3.039698,2.853508,-2.527594,7.798011,-2.224961,-7.642550,1.450481,-9.730966,-1.082865,-7.458630,-0.758553,-9.133490,4.516120,-4.954538,-3.557123,-6.589040,-7.585763,0.713904,9.277158,-2.450420,-5.064347,3.906327,-9.470396,8.821921,-5.604149,-9.520832,6.419717,6.296629,8.299216,-1.730713,-6.532375,-9.604204,-9.555499,5.027436,-6.174879,3.556923,-8.635183,-4.169020,-0.663815,-8.141417,-3.576730,-1.408912,2.929134,-0.952070,2.160178,-5.191926,-4.721292,-4.888856,8.337639,-3.634614,6.554529,-9.933420,-1.480274,5.701316,-1.130038,8.128351,-1.288881,-2.652268,-2.079759,-4.974554,5.360700,1.532453,-8.823733,2.542371,9.485378,0.361287,9.806309,1.565166,5.060982,8.512432,-3.851558,-1.587834,-7.672087,-5.671569,5.914104,-5.045528,6.122362,-8.660134,9.934538,3.958212,-6.691920,8.084320,-9.578097,7.547341,3.724674,1.810937,-7.425865,5.964148,4.789041,7.097844,-4.702027,6.664986,4.573793,1.817143,2.937581,8.543697,-7.923411,-3.391145,7.853232,-9.486051,-7.599780,-6.616745,1.430045,4.566796,2.452516,7.469654,-5.757612,-1.991105,8.122525,-4.552842,-8.988725,-5.589289,-8.867637,-1.040845,-2.173399,4.465201,-4.446833,2.647631,0.234512,-0.101379,3.230401,-1.924446,3.816755,8.361326,3.789933,4.003720,-7.921296,-3.269094,-4.335869,-2.837167,4.176606,4.762824,-0.994566,0.710260,9.462626,-3.288746,2.320649,-9.740807,3.907556,9.663548,0.696307,8.532664,-8.235157,0.353980,-8.585709,-4.674661,7.426181,1.228112,-0.617057,3.189230,0.233186,6.451166,-9.603014,0.247679,8.361434,-3.258651,3.142014,-3.034231,8.934732,0.809232,-4.292233,5.231216,7.744289,2.903244,0.482054,-3.085520,-7.115258,-4.945629,6.596666,7.218732,-2.629165,-2.830510,7.206325,-6.713110,-8.713380,-1.272911,8.710173,-0.297617,-7.528636,-1.418180,-4.676142,-4.261988,-1.036467,5.980472,-9.882402,7.944446,6.519644,1.560307,-7.201746,6.146686,0.386490,8.619234,-6.028996,8.500528,1.391773,-3.641379,-5.913707,4.057350,5.380910,4.200258,1.487825,5.306684,-2.436148,5.206414,-4.373101,7.099862,-2.286573,-7.796381,-7.519004,0.979655,3.894292,5.872598,8.942292,4.998711,8.519601,-0.391252,6.037889,7.234795,-5.327847,-6.346246,-4.698426,-0.396736,1.917031,9.032129,6.692065,3.468778,-7.080267,-1.865757,4.925515,3.234542,-1.694566,6.254724,8.788788,6.231052,4.635325,-7.185927,3.207257,-1.809166,8.638715,-3.841624,3.389469,1.740850,-4.415578,6.040650,5.500502,3.485616,-3.406408,0.585779,4.567662,-6.316204,6.447799,-5.916723,6.708330,6.142330,-8.432294,3.851285,1.188589,-8.074751,7.275064,-3.486747,-3.553697,-5.374865,-7.628482,-7.934129,2.580179,6.854564,0.217395,6.397671,-1.409749,8.859737,9.318894,-4.747168,6.628081,-2.852686,-9.012011,-9.816369,-6.940475,-2.288596,-2.081524,3.257089,2.189737,-0.235903,-0.343395,9.064500,-8.559447,-1.786006,-7.953681,3.077588,4.897588,-5.174828,-9.200293,-2.397427,7.397490,1.116626,2.911559,5.876299,9.566856,6.912147,-4.548379,4.444343,2.939608,-6.196914,-2.110890,4.304871,4.758600,-6.153500,-8.575399,4.759189,6.326681,-3.364044,4.279416,7.336629,2.248038,-2.940145,9.218041,3.353998,7.997440,-5.627397,9.436250,7.050647,5.427201,-8.032360,-2.796744,-9.920730,-4.644001,-4.255605,-3.616898,7.438351,-5.297530,9.526171,6.691124,-7.570976,-5.079493,-7.120572,8.306027,3.437500,6.756703,-3.432244,1.974275,8.038108,2.373690,9.175505,6.225595,-9.184653,-8.648396,-2.329715,-2.237475,0.769398,6.329522,-9.737272,8.162667,-0.595337,6.102577,1.716731,5.719864,-5.404193,-8.163275,-1.692901,-1.571851,-2.423766,7.715127,-5.502716,9.163993,-4.677050,-2.319294,6.059863,-3.810391,-4.405345,5.899718,-3.143367,8.559159,1.887717,-1.657656,5.301153,-7.881499,-8.417841,-3.413356,9.012829,-5.438566,7.084597,-1.473355,-8.899585,-3.736014,-3.020020,-9.138755,-0.628481,-2.148775,-1.282010,8.743476,5.615864,2.880033,7.647429,8.192025,0.207419,4.391913,-5.853363,-2.963320,-8.172478,8.765469,-3.195963,-1.674546,4.192233,-2.394568,0.148554,-4.171598,-8.260107,-8.744510,2.563388,-0.330099,3.074230,2.509672,-7.142655,7.572078,-6.166848,5.850822,-8.170397,1.466413,-5.657233,1.901279,-1.589026,4.317345,8.260569,-7.742461,1.363310,-3.781248,-8.369755,-4.826863,5.400486,-1.898615,-0.907367,-1.629157,3.060875,0.463030,9.210808,9.681155,-6.896432,-5.643555,3.681425,-3.982989,-9.024446,9.090380,6.510768,7.746480,9.747096,-2.219632,2.456344,5.801259,0.940185,9.587207,3.055251,-4.690873,4.487825,-1.918263,4.326016,8.247016,4.800500,4.235494,-0.293720,4.054538,-9.909080,8.850277,-5.504726,-6.862208,3.818255,-9.348161,-1.386336,-8.108424,-3.197413,-1.167493,-5.810863,1.938279,9.122207,-4.201509,3.899612,1.526109,0.308226,5.503403,8.954066,2.027264,4.760219,-4.192355,-1.357717,7.662029,4.418889,3.376745,3.203734,6.833035,8.097873,-6.639848,4.554374,-3.522903,2.248026,-2.423362,4.048329,7.076058,3.962321,-6.637062,4.593610,-9.332135,-0.841148,-1.830343,-8.369245,-2.283327,2.787708,-9.385719,-6.443907,8.819693,8.231932,4.586616,-6.381376,3.331435,-6.426112,7.302449,-5.436894,-8.852153,4.027444,-5.435496,-7.758458,4.560907,-4.675612,-1.480827,-1.855358,-7.232085,6.554549,-1.850724,-8.806558,3.555390,-3.750958,-3.760230,1.186068,9.712472,5.624088,-8.191780,-1.823656,1.069441,-7.584322,3.672413,-2.867711,-9.108093,9.618775,8.950691,-0.934619,-9.929658,1.795081,6.414288,1.992918,-0.837325,6.297575,-5.605155,-2.315249,-2.833474,1.771029,-4.957427,5.720475,1.913704,5.537401,-4.283801,-2.683984,-6.181881,-5.721086,-1.450374,-4.424506,-9.001978,1.314235,1.380081,6.924996,-8.363611,-9.675306,-0.662193,4.397741,-3.321211,-6.555666,7.330485,-4.689745,-9.477666,1.445629,-4.788302,1.798005,8.167070,-3.290015,1.914668,-5.503918,-6.884562,-2.787774,-6.528512,0.954309,-7.763696,-0.828714,-8.941067,-3.092296,5.426809,2.824447,3.122691,-4.785811,6.752045,-5.731181,-1.846197,1.069057,4.186937,3.269230,9.373988,-6.753597,-0.403066,1.854691,9.507036,-6.140910,-7.727112,6.841830,-1.109928,-1.009675,-1.792870,-6.915509,-9.143597,5.481043,8.122594,0.354332,1.986897,0.101936,-2.109275,-8.073971,-5.056002,-2.958995,-8.775167,-5.754503,-8.844179,1.058181,0.152440,3.744606,9.147075,7.671818,-7.813385,2.124727,0.315616,1.070615,-6.655780,9.040694,-8.465451,7.805869,0.853226,-0.632594,-5.890194,-6.021047,9.471672,1.231608,8.026462,-6.957704,-8.704825,9.062335,-4.328743,7.143054,9.062502,0.931149,3.037868,-7.153962,-0.223885,-9.577787,-7.048778,5.084308,-8.790981,-4.113824,6.396173,0.559705,1.939920,4.120212,-0.460598,-6.864471,-9.936621,7.855128,-7.321104,-0.659896,-4.386474,2.900400,-0.985657,5.811340,-0.933471,-9.333845,-4.004015,1.743453,-0.333799,6.426071,0.878821,-5.684977,4.131549,7.516509,-5.146440,-1.207607,-3.896820,4.497800,-7.293155,-1.237665,7.916588,9.195928,-4.092007,0.379392,2.049086,0.009157,-7.491701,-0.430517,-3.226229,6.233992,-7.801222,2.511208,9.290267,0.812434,4.598878,-5.786802,-3.363363,-4.756165,-4.399530,1.159369,-6.427860,2.242595,7.108255,-4.286238,7.671716,-6.646936,-5.172839,1.305416,-0.649194,4.144364,-0.514095,-1.323049,4.433477,9.637860,-7.911090,-9.831303,-4.596816,2.374153,8.918088,9.657875,9.602641,-8.907852,7.344479,-2.251761,-9.443703,-7.842314,9.628507,0.565126,0.329486,5.956952,-0.756822,8.292735,6.040125,-5.851766,-2.772498,4.412678,5.856633,8.820313,7.388861,-2.291543,-5.286577,-0.097207,-4.552042,-0.194323,6.494999,0.137086,9.031426,-4.001733,-6.654764,-6.980803,-2.521027,-4.506053,5.343039,-7.256077,0.724957,2.743317,2.766589,-9.554056,4.043044,-6.297233,-4.582425,-4.705403,-0.901019,-1.422853,7.817468,8.576807,-2.904224,1.437483,-9.894309,7.884045,8.522468,8.406417,-3.382652,-8.155355,-2.415627,-3.443169,-3.203555,4.154590,2.819285,4.293511,-1.117273,-9.240228,1.954333,-1.784830,-6.844318,3.670261,-5.316938,-0.103615,-6.272764,5.975628,9.313360,5.385835,-5.374020,-7.629161,-0.435366,1.687625,7.539959,-1.737398,9.791103,-8.977602,-8.110434,6.346951,-8.037781,2.197329,-5.397733,9.415932,9.551882,-9.148805,8.956109,1.676255,-2.590714,-7.663964,1.079636,-0.402991,-0.435647,-7.104507,7.347116,0.801052,4.179764,-6.828832,0.664897,-2.492711,7.371461,3.318889,1.512635,-9.727060,0.586684,4.370815,7.073114,7.752296,-1.888286,-1.132296,-2.751469,9.419656,2.056644,9.110528,-7.360749,1.234966,-9.016932,-0.827167,7.318094,-9.705415,-9.378730,4.584874], dtype = "float64")#candidate|8647|(1440,)|const|float64
call_8646 = relay.TupleGetItem(func_3956_call(relay.reshape(const_8647.astype('float64'), [15, 8, 12]), relay.reshape(const_8647.astype('float64'), [15, 8, 12]), ), 1)
call_8648 = relay.TupleGetItem(func_3960_call(relay.reshape(const_8647.astype('float64'), [15, 8, 12]), relay.reshape(const_8647.astype('float64'), [15, 8, 12]), ), 1)
output = relay.Tuple([call_8628,const_8629,bop_8633,call_8646,const_8647,])
output2 = relay.Tuple([call_8630,const_8629,bop_8633,call_8648,const_8647,])
func_8649 = relay.Function([var_8615,var_8616,var_8632,], output)
mod['func_8649'] = func_8649
mod = relay.transform.InferType()(mod)
var_8650 = relay.var("var_8650", dtype = "uint8", shape = (8, 1, 1))#candidate|8650|(8, 1, 1)|var|uint8
var_8651 = relay.var("var_8651", dtype = "uint8", shape = (8, 10, 16))#candidate|8651|(8, 10, 16)|var|uint8
var_8652 = relay.var("var_8652", dtype = "uint8", shape = (8, 10, 16))#candidate|8652|(8, 10, 16)|var|uint8
output = func_8649(var_8650,var_8651,var_8652,)
func_8653 = relay.Function([var_8650,var_8651,var_8652,], output)
mutated_mod['func_8653'] = func_8653
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5871_call = mod.get_global_var('func_5871')
func_5872_call = mutated_mod.get_global_var('func_5872')
call_8673 = relay.TupleGetItem(func_5871_call(), 1)
call_8674 = relay.TupleGetItem(func_5872_call(), 1)
output = call_8673
output2 = call_8674
func_8694 = relay.Function([], output)
mod['func_8694'] = func_8694
mod = relay.transform.InferType()(mod)
output = func_8694()
func_8695 = relay.Function([], output)
mutated_mod['func_8695'] = func_8695
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6872_call = mod.get_global_var('func_6872')
func_6874_call = mutated_mod.get_global_var('func_6874')
call_8778 = func_6872_call()
call_8779 = func_6872_call()
output = call_8778
output2 = call_8779
func_8780 = relay.Function([], output)
mod['func_8780'] = func_8780
mod = relay.transform.InferType()(mod)
mutated_mod['func_8780'] = func_8780
mutated_mod = relay.transform.InferType()(mutated_mod)
func_8780_call = mutated_mod.get_global_var('func_8780')
call_8781 = func_8780_call()
output = call_8781
func_8782 = relay.Function([], output)
mutated_mod['func_8782'] = func_8782
mutated_mod = relay.transform.InferType()(mutated_mod)
const_8829 = relay.const([[[-8,3,-8,3,-4],[-2,-7,-9,-4,-6],[-1,10,-8,-2,6],[7,4,6,-4,8],[5,-2,9,-9,-8],[-7,-6,10,-6,10],[-6,3,-6,-3,-7],[-8,-3,5,4,4],[1,-3,-8,10,5],[-3,-9,-2,7,-5],[6,-9,8,10,-9],[5,6,6,3,8],[-6,-1,-9,-9,-8],[-3,10,3,7,1]],[[8,8,6,-7,-10],[8,-8,-10,-10,5],[3,-2,1,2,-9],[-6,1,-10,-5,-7],[-4,10,2,8,9],[1,3,-7,-1,2],[4,-8,9,-1,6],[1,10,9,1,7],[-3,4,-2,-8,-1],[-2,10,9,7,-6],[-9,3,8,3,-1],[9,-9,-10,3,-5],[-10,-9,-8,-10,10],[7,2,-9,2,-10]],[[-4,-9,-4,-3,6],[-3,-4,7,-5,-6],[2,4,-3,-6,9],[-2,-9,-4,-9,-1],[-5,-1,1,1,-4],[10,-2,2,1,2],[6,-1,-6,-7,3],[10,-4,-7,9,-10],[-6,-3,-9,4,4],[10,-2,4,-7,1],[-1,-8,-1,2,2],[7,4,-6,6,3],[-6,10,5,3,5],[3,-6,2,5,-9]]], dtype = "int16")#candidate|8829|(3, 14, 5)|const|int16
var_8830 = relay.var("var_8830", dtype = "int16", shape = (3, 14, 5))#candidate|8830|(3, 14, 5)|var|int16
bop_8831 = relay.greater_equal(const_8829.astype('bool'), relay.reshape(var_8830.astype('bool'), relay.shape_of(const_8829))) # shape=(3, 14, 5)
func_8292_call = mod.get_global_var('func_8292')
func_8293_call = mutated_mod.get_global_var('func_8293')
call_8848 = func_8292_call()
call_8849 = func_8292_call()
func_8613_call = mod.get_global_var('func_8613')
func_8614_call = mutated_mod.get_global_var('func_8614')
call_8855 = func_8613_call()
call_8856 = func_8613_call()
uop_8865 = relay.atanh(var_8830.astype('float64')) # shape=(3, 14, 5)
bop_8867 = relay.less_equal(bop_8831.astype('bool'), relay.reshape(uop_8865.astype('bool'), relay.shape_of(bop_8831))) # shape=(3, 14, 5)
output = relay.Tuple([call_8848,call_8855,bop_8867,])
output2 = relay.Tuple([call_8849,call_8856,bop_8867,])
func_8873 = relay.Function([var_8830,], output)
mod['func_8873'] = func_8873
mod = relay.transform.InferType()(mod)
var_8874 = relay.var("var_8874", dtype = "int16", shape = (3, 14, 5))#candidate|8874|(3, 14, 5)|var|int16
output = func_8873(var_8874)
func_8875 = relay.Function([var_8874], output)
mutated_mod['func_8875'] = func_8875
mutated_mod = relay.transform.InferType()(mutated_mod)
const_8883 = relay.const([[[-0.276617,0.351152,2.508895,-7.348087,2.680681,-6.969695,-2.956466,-1.061428,0.345064],[-5.624870,9.641227,8.214226,4.784678,-0.538318,6.255698,2.349017,4.034712,-0.545085]],[[-0.750479,2.712701,-8.811472,7.009030,-0.590000,7.111293,1.130912,-1.178180,-7.595983],[9.183195,3.172074,-9.807117,-0.696850,8.095933,-8.462679,-5.829601,-1.502973,-3.944075]],[[-7.666661,4.815348,-3.754495,-1.874847,-1.120807,-4.384834,-0.363775,2.092682,0.620977],[-8.407732,3.343726,1.803895,7.181137,-9.999982,-2.220925,1.371413,-9.275164,4.104533]],[[3.625067,8.333708,-7.333339,-6.362780,3.170632,-7.780458,3.139370,-8.234167,-7.582946],[-9.414211,-0.088701,2.403387,9.445849,6.274939,4.012042,-6.895247,-5.147706,5.273392]],[[4.912181,8.187087,0.453363,0.092921,-9.311160,1.813173,-4.392650,-0.410655,1.627443],[7.815313,-1.578142,-1.609416,3.215400,-7.432010,-0.970159,-7.788664,8.459528,3.084480]],[[5.305806,6.463374,-8.989089,1.234581,-6.220502,4.267445,5.729902,5.527421,1.332498],[-2.957154,-5.963715,-0.367517,-5.164410,1.024664,-4.028692,-9.611420,8.404513,2.489985]],[[-3.391106,-4.187043,5.283229,-5.961208,-0.565119,-6.012890,-3.752922,-3.833721,-4.040098],[6.140129,6.497090,-3.250356,4.573075,-7.247098,9.838406,5.532634,-6.440670,-3.938140]],[[0.746683,-6.167217,-3.126764,-9.097354,1.910933,-4.851644,8.252913,-6.094705,-8.550014],[9.287635,0.540653,-2.212666,1.062915,3.526998,-6.570325,5.006229,-5.457912,6.942603]],[[5.070798,9.520388,4.824333,-5.316593,-5.491909,1.970569,6.795277,-7.839481,-8.401303],[4.214510,-7.859084,8.664818,2.543541,7.559837,4.759084,-0.743593,-5.882495,0.080159]]], dtype = "float64")#candidate|8883|(9, 2, 9)|const|float64
uop_8884 = relay.sigmoid(const_8883.astype('float64')) # shape=(9, 2, 9)
output = relay.Tuple([uop_8884,])
output2 = relay.Tuple([uop_8884,])
func_8909 = relay.Function([], output)
mod['func_8909'] = func_8909
mod = relay.transform.InferType()(mod)
output = func_8909()
func_8910 = relay.Function([], output)
mutated_mod['func_8910'] = func_8910
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7363_call = mod.get_global_var('func_7363')
func_7365_call = mutated_mod.get_global_var('func_7365')
call_8924 = relay.TupleGetItem(func_7363_call(), 0)
call_8925 = relay.TupleGetItem(func_7365_call(), 0)
uop_8926 = relay.log10(call_8924.astype('float64')) # shape=(15, 8, 12)
uop_8928 = relay.log10(call_8925.astype('float64')) # shape=(15, 8, 12)
func_8551_call = mod.get_global_var('func_8551')
func_8552_call = mutated_mod.get_global_var('func_8552')
call_8929 = func_8551_call()
call_8930 = func_8551_call()
func_5340_call = mod.get_global_var('func_5340')
func_5342_call = mutated_mod.get_global_var('func_5342')
call_8946 = func_5340_call()
call_8947 = func_5340_call()
func_4007_call = mod.get_global_var('func_4007')
func_4009_call = mutated_mod.get_global_var('func_4009')
call_8956 = func_4007_call()
call_8957 = func_4007_call()
func_3614_call = mod.get_global_var('func_3614')
func_3616_call = mutated_mod.get_global_var('func_3616')
const_8962 = relay.const([-7,-4,-2,-1,-5,2,-6,-1,7,9,10,3,1,3,-9,7,-3,-2,3,-8,2,10,-3,3,6,5,1,-10,-1,8,-3,-5,-6,-3,-2,-1,1,6,-2,-3,3,6,7,8,1,9,3,-10,10,-9,-4,-1,-4,6,-6,-4,-6,-4,-8,-10,-10,-3,-2,-3,-6,-9,5,-5,4,4,-10,-10,-9,-1,9,-6,-2,-2,-3,9,9,10,-5,-2,-6,-1,-5,5,7,2,9,5,-8,6,-1,-9,-2,-4,-3,7,1,8,-3,9,-8,4,-1,-9,-5,8,-9,-8,-7,-9,9,2,6,-5,2,8,8,-7,10,-6,10,-3,-1,1,3,10,6,3,1,-2,3,3,2,8,8,9,8,-9,4,8,-10,9,-10,9,-10,4,-10,7,-9,-8,-9,-4,-10,7,-5,-1,-1,10,-5,-5,-9,-10,-8,-5,-4,-3,-1,-1,2,-4,10,1,-8,-5,9,9,8,10,-10,2,-9,6,-2,10,-6,-2,-2,10], dtype = "int16")#candidate|8962|(192,)|const|int16
call_8961 = func_3614_call(relay.reshape(const_8962.astype('int16'), [12, 2, 8]))
call_8963 = func_3614_call(relay.reshape(const_8962.astype('int16'), [12, 2, 8]))
func_8551_call = mod.get_global_var('func_8551')
func_8552_call = mutated_mod.get_global_var('func_8552')
call_8968 = func_8551_call()
call_8969 = func_8551_call()
output = relay.Tuple([uop_8926,call_8929,call_8946,call_8956,call_8961,const_8962,call_8968,])
output2 = relay.Tuple([uop_8928,call_8930,call_8947,call_8957,call_8963,const_8962,call_8969,])
func_8987 = relay.Function([], output)
mod['func_8987'] = func_8987
mod = relay.transform.InferType()(mod)
mutated_mod['func_8987'] = func_8987
mutated_mod = relay.transform.InferType()(mutated_mod)
func_8987_call = mutated_mod.get_global_var('func_8987')
call_8988 = func_8987_call()
output = call_8988
func_8989 = relay.Function([], output)
mutated_mod['func_8989'] = func_8989
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7992_call = mod.get_global_var('func_7992')
func_7993_call = mutated_mod.get_global_var('func_7993')
call_9146 = func_7992_call()
call_9147 = func_7992_call()
func_8102_call = mod.get_global_var('func_8102')
func_8104_call = mutated_mod.get_global_var('func_8104')
call_9154 = relay.TupleGetItem(func_8102_call(), 2)
call_9155 = relay.TupleGetItem(func_8104_call(), 2)
func_7979_call = mod.get_global_var('func_7979')
func_7980_call = mutated_mod.get_global_var('func_7980')
call_9156 = relay.TupleGetItem(func_7979_call(), 0)
call_9157 = relay.TupleGetItem(func_7980_call(), 0)
var_9158 = relay.var("var_9158", dtype = "bool", shape = (5, 4, 14))#candidate|9158|(5, 4, 14)|var|bool
bop_9159 = relay.left_shift(call_9146.astype('int8'), relay.reshape(var_9158.astype('int8'), relay.shape_of(call_9146))) # shape=(5, 4, 14)
bop_9162 = relay.left_shift(call_9147.astype('int8'), relay.reshape(var_9158.astype('int8'), relay.shape_of(call_9147))) # shape=(5, 4, 14)
var_9169 = relay.var("var_9169", dtype = "bool", shape = (5, 4, 14))#candidate|9169|(5, 4, 14)|var|bool
bop_9170 = relay.greater_equal(call_9146.astype('bool'), relay.reshape(var_9169.astype('bool'), relay.shape_of(call_9146))) # shape=(5, 4, 14)
bop_9173 = relay.greater_equal(call_9147.astype('bool'), relay.reshape(var_9169.astype('bool'), relay.shape_of(call_9147))) # shape=(5, 4, 14)
func_5545_call = mod.get_global_var('func_5545')
func_5547_call = mutated_mod.get_global_var('func_5547')
var_9180 = relay.var("var_9180", dtype = "uint64", shape = (20,))#candidate|9180|(20,)|var|uint64
call_9179 = relay.TupleGetItem(func_5545_call(relay.reshape(var_9180.astype('uint64'), [1, 20])), 0)
call_9181 = relay.TupleGetItem(func_5547_call(relay.reshape(var_9180.astype('uint64'), [1, 20])), 0)
bop_9189 = relay.minimum(bop_9159.astype('float32'), relay.reshape(bop_9170.astype('float32'), relay.shape_of(bop_9159))) # shape=(5, 4, 14)
bop_9192 = relay.minimum(bop_9162.astype('float32'), relay.reshape(bop_9173.astype('float32'), relay.shape_of(bop_9162))) # shape=(5, 4, 14)
output = relay.Tuple([call_9154,call_9156,call_9179,var_9180,bop_9189,])
output2 = relay.Tuple([call_9155,call_9157,call_9181,var_9180,bop_9192,])
func_9194 = relay.Function([var_9158,var_9169,var_9180,], output)
mod['func_9194'] = func_9194
mod = relay.transform.InferType()(mod)
var_9195 = relay.var("var_9195", dtype = "bool", shape = (5, 4, 14))#candidate|9195|(5, 4, 14)|var|bool
var_9196 = relay.var("var_9196", dtype = "bool", shape = (5, 4, 14))#candidate|9196|(5, 4, 14)|var|bool
var_9197 = relay.var("var_9197", dtype = "uint64", shape = (20,))#candidate|9197|(20,)|var|uint64
output = func_9194(var_9195,var_9196,var_9197,)
func_9198 = relay.Function([var_9195,var_9196,var_9197,], output)
mutated_mod['func_9198'] = func_9198
mutated_mod = relay.transform.InferType()(mutated_mod)
func_8416_call = mod.get_global_var('func_8416')
func_8418_call = mutated_mod.get_global_var('func_8418')
call_9309 = relay.TupleGetItem(func_8416_call(), 0)
call_9310 = relay.TupleGetItem(func_8418_call(), 0)
output = relay.Tuple([call_9309,])
output2 = relay.Tuple([call_9310,])
func_9311 = relay.Function([], output)
mod['func_9311'] = func_9311
mod = relay.transform.InferType()(mod)
output = func_9311()
func_9312 = relay.Function([], output)
mutated_mod['func_9312'] = func_9312
mutated_mod = relay.transform.InferType()(mutated_mod)
var_9346 = relay.var("var_9346", dtype = "int32", shape = (5, 2, 14))#candidate|9346|(5, 2, 14)|var|int32
const_9347 = relay.const([[[-7,-6,9,-2,-7,-2,6,1,3,10,-8,9,-10,5],[2,-7,10,9,5,10,8,10,-10,-2,1,-6,-8,8]],[[-8,3,-8,-10,-6,-8,2,4,-1,-4,7,5,-7,-9],[-10,4,-10,9,-9,-8,7,7,5,-9,-6,-9,-8,-3]],[[7,-9,-6,4,-10,-6,9,-6,-10,-6,-4,3,-8,5],[7,3,9,-9,-5,-3,-6,-7,-2,3,-6,1,6,4]],[[-6,-3,8,-9,8,-3,2,1,6,-3,1,-10,-9,-8],[5,-10,-10,8,-9,-6,4,9,7,2,-7,10,4,-4]],[[-3,7,-2,-2,2,-2,-4,7,10,-4,5,10,4,10],[2,-1,6,-4,7,-5,-4,9,7,-8,3,4,9,-1]]], dtype = "int32")#candidate|9347|(5, 2, 14)|const|int32
bop_9348 = relay.bitwise_or(var_9346.astype('int32'), relay.reshape(const_9347.astype('int32'), relay.shape_of(var_9346))) # shape=(5, 2, 14)
func_8273_call = mod.get_global_var('func_8273')
func_8275_call = mutated_mod.get_global_var('func_8275')
call_9361 = relay.TupleGetItem(func_8273_call(), 0)
call_9362 = relay.TupleGetItem(func_8275_call(), 0)
func_7047_call = mod.get_global_var('func_7047')
func_7049_call = mutated_mod.get_global_var('func_7049')
call_9375 = relay.TupleGetItem(func_7047_call(), 0)
call_9376 = relay.TupleGetItem(func_7049_call(), 0)
var_9383 = relay.var("var_9383", dtype = "uint8", shape = (1536,))#candidate|9383|(1536,)|var|uint8
bop_9384 = relay.bitwise_xor(call_9361.astype('uint8'), relay.reshape(var_9383.astype('uint8'), relay.shape_of(call_9361))) # shape=(1536,)
bop_9387 = relay.bitwise_xor(call_9362.astype('uint8'), relay.reshape(var_9383.astype('uint8'), relay.shape_of(call_9362))) # shape=(1536,)
output = relay.Tuple([bop_9348,call_9375,bop_9384,])
output2 = relay.Tuple([bop_9348,call_9376,bop_9387,])
func_9390 = relay.Function([var_9346,var_9383,], output)
mod['func_9390'] = func_9390
mod = relay.transform.InferType()(mod)
var_9391 = relay.var("var_9391", dtype = "int32", shape = (5, 2, 14))#candidate|9391|(5, 2, 14)|var|int32
var_9392 = relay.var("var_9392", dtype = "uint8", shape = (1536,))#candidate|9392|(1536,)|var|uint8
output = func_9390(var_9391,var_9392,)
func_9393 = relay.Function([var_9391,var_9392,], output)
mutated_mod['func_9393'] = func_9393
mutated_mod = relay.transform.InferType()(mutated_mod)
func_8102_call = mod.get_global_var('func_8102')
func_8104_call = mutated_mod.get_global_var('func_8104')
call_9405 = relay.TupleGetItem(func_8102_call(), 1)
call_9406 = relay.TupleGetItem(func_8104_call(), 1)
output = call_9405
output2 = call_9406
func_9425 = relay.Function([], output)
mod['func_9425'] = func_9425
mod = relay.transform.InferType()(mod)
output = func_9425()
func_9426 = relay.Function([], output)
mutated_mod['func_9426'] = func_9426
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5570_call = mod.get_global_var('func_5570')
func_5571_call = mutated_mod.get_global_var('func_5571')
call_9456 = relay.TupleGetItem(func_5570_call(), 1)
call_9457 = relay.TupleGetItem(func_5571_call(), 1)
output = call_9456
output2 = call_9457
func_9464 = relay.Function([], output)
mod['func_9464'] = func_9464
mod = relay.transform.InferType()(mod)
output = func_9464()
func_9465 = relay.Function([], output)
mutated_mod['func_9465'] = func_9465
mutated_mod = relay.transform.InferType()(mutated_mod)
var_9540 = relay.var("var_9540", dtype = "float32", shape = (6, 10, 4))#candidate|9540|(6, 10, 4)|var|float32
uop_9541 = relay.log10(var_9540.astype('float32')) # shape=(6, 10, 4)
bop_9546 = relay.floor_mod(uop_9541.astype('float32'), relay.reshape(var_9540.astype('float32'), relay.shape_of(uop_9541))) # shape=(6, 10, 4)
bop_9549 = relay.less(uop_9541.astype('bool'), relay.reshape(bop_9546.astype('bool'), relay.shape_of(uop_9541))) # shape=(6, 10, 4)
output = bop_9549
output2 = bop_9549
F = relay.Function([var_9540,], output)
mod['main'] = F
mod = relay.transform.InferType()(mod)
print('==========mod==========')
print(mod.astext(show_meta_data=False))
print('===================================')
F = relay.Function([var_9540,], output2)
mutated_mod['main'] = F
mutated_mod = relay.transform.InferType()(mutated_mod)
print('==========mutated_mod==========')
print(mutated_mod.astext(show_meta_data=False))
print('===================================')
graph, lib, params = relay.build(mod, target='llvm')
module1 = graph_runtime.create(graph, lib, tvm.device('llvm',0))
intrp2 = relay.build_module.create_executor('graph', mod, tvm.device('llvm',0),'llvm')
intrp3 = relay.build_module.create_executor('debug', mod, tvm.device('llvm',0),'llvm')
intrp4 = relay.build_module.create_executor('vm', mod, tvm.device('llvm',0),'llvm')
graph, lib, params = relay.build(mod, target='cuda')
module5 = graph_runtime.create(graph, lib, tvm.device('cuda',0))
intrp6 = relay.build_module.create_executor('graph', mod, tvm.device('cuda',0),'cuda')
intrp7 = relay.build_module.create_executor('debug', mod, tvm.device('cuda',0),'cuda')
intrp8 = relay.build_module.create_executor('vm', mod, tvm.device('cuda',0),'cuda')
seq = Sequential([
	relay.transform.AlterOpLayout(),
	relay.transform.AnnotateSpans(),
	relay.transform.BatchingOps(),
	relay.transform.CanonicalizeCast(),
	relay.transform.CanonicalizeOps(),
	relay.transform.DeadCodeElimination(),
	relay.transform.DynamicToStatic(),
	relay.transform.FastMath(),
	relay.transform.FirstOrderGradient(),
	relay.transform.EliminateCommonSubexpr(),
	relay.transform.MergeCompilerRegions(),
	relay.transform.Inline(),
	relay.transform.LambdaLift(),
	relay.transform.LazyGradientInit(),
	relay.transform.PartialEvaluate(),
	relay.transform.Legalize(),
	relay.transform.FoldConstant(),
	relay.transform.ToANormalForm(),
	relay.transform.ToGraphNormalForm(),
	relay.transform.SimplifyInference(),
	relay.transform.ToBasicBlockNormalForm(),
])
mod = seq(mod)
print(mod.astext(show_meta_data=False))
graph, lib, params = relay.build(mod, target='llvm')
module9 = graph_runtime.create(graph, lib, tvm.device('llvm',0))
intrp10 = relay.build_module.create_executor('graph', mod, tvm.device('llvm',0),'llvm')
intrp11 = relay.build_module.create_executor('debug', mod, tvm.device('llvm',0),'llvm')
intrp12 = relay.build_module.create_executor('vm', mod, tvm.device('llvm',0),'llvm')
graph, lib, params = relay.build(mod, target='cuda')
module13 = graph_runtime.create(graph, lib, tvm.device('cuda',0))
intrp14 = relay.build_module.create_executor('graph', mod, tvm.device('cuda',0),'cuda')
intrp15 = relay.build_module.create_executor('debug', mod, tvm.device('cuda',0),'cuda')
intrp16 = relay.build_module.create_executor('vm', mod, tvm.device('cuda',0),'cuda')
graph, lib, params = relay.build(mutated_mod, target='llvm')
module17 = graph_runtime.create(graph, lib, tvm.device('llvm',0))
intrp18 = relay.build_module.create_executor('graph', mutated_mod, tvm.device('llvm',0),'llvm')
intrp19 = relay.build_module.create_executor('debug', mutated_mod, tvm.device('llvm',0),'llvm')
intrp20 = relay.build_module.create_executor('vm', mutated_mod, tvm.device('llvm',0),'llvm')
graph, lib, params = relay.build(mutated_mod, target='cuda')
module21 = graph_runtime.create(graph, lib, tvm.device('cuda',0))
intrp22 = relay.build_module.create_executor('graph', mutated_mod, tvm.device('cuda',0),'cuda')
intrp23 = relay.build_module.create_executor('debug', mutated_mod, tvm.device('cuda',0),'cuda')
intrp24 = relay.build_module.create_executor('vm', mutated_mod, tvm.device('cuda',0),'cuda')

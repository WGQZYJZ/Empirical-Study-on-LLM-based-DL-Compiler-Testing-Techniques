==========mod==========
#[version = "0.0.5"]
def @func_5527() -> (Tensor[(1560), float64], Tensor[(12, 12, 3), float32]) {
  %0 = @func_4065() /* ty=(Tensor[(12, 12, 3), float32],) */;
  %1 = @func_4791() /* ty=Tensor[(1560), float64] */;
  %2 = %0.0;
  (%1, %2)
}

def @func_4904() -> Tensor[(40), uint8] {
  %3 = @func_4819() /* ty=(Tensor[(40), uint8],) */;
  %3.0
}

def @func_11000() -> (Tensor[(40), uint8],) {
  %4 = @func_4904() /* ty=Tensor[(40), uint8] */;
  (%4,)
}

def @func_12821(%var_12766: Tensor[(1560), float64], %var_12767: Tensor[(1, 132), float32]) -> (Tensor[(12, 12, 3), int16], Tensor[(40), uint8], Tensor[(?, 14, 9), float32], Tensor[(1560), float64], Tensor[(1, 132), float32], Tensor[(2, 20), uint8]) {
  %5 = @func_11896() /* ty=(Tensor[(12, 12, 3), int16], Tensor[(40), uint8], Tensor[(12, 12, 3), float32]) */;
  %6 = cast(%var_12766, dtype="float64") /* ty=Tensor[(1560), float64] */;
  %7 = cast(%var_12767, dtype="float32") /* ty=Tensor[(1, 132), float32] */;
  %8 = reshape(%6, newshape=[10, 12, 13]) /* ty=Tensor[(10, 12, 13), float64] */;
  %9 = reshape(%7, newshape=[132]) /* ty=Tensor[(132), float32] */;
  %10 = @func_3182(%8, %9) /* ty=(Tensor[(10, 12, 13), bool], Tensor[(?, 14, 9), float32], uint8, Tensor[(3, 11, 4), float32], Tensor[(132), float32]) */;
  %11 = cast(%var_12766, dtype="float32") /* ty=Tensor[(1560), float32] */;
  %12 = reshape(%11, newshape=[1560]) /* ty=Tensor[(1560), float32] */;
  %13 = @func_11185(%12) /* ty=(Tensor[(40), uint8], Tensor[(2, 20), uint8], Tensor[(1560), float32]) */;
  %14 = %5.0;
  %15 = @func_10041() /* ty=Tensor[(40), uint8] */;
  %16 = %10.1;
  %17 = %13.1;
  (%14, %15, %16, %var_12766, %var_12767, %17)
}

def @func_5083() -> (Tensor[(2, 20), float64],) {
  %18 = @func_3254() /* ty=(Tensor[(12, 130), float64], Tensor[(1560), float64], Tensor[(33, 7), float64], uint8, Tensor[(7, 3, 11), float32], uint8, Tensor[(66), float64], Tensor[(40), uint8], Tensor[(2, 20), float64]) */;
  %19 = %18.8;
  (%19,)
}

def @func_672(%var_665: Tensor[(9, 1, 16), float64]) -> (Tensor[(9, 1, 16), float64],) {
  %20 = cast(%var_665, dtype="float64") /* ty=Tensor[(9, 1, 16), float64] */;
  %21 = sigmoid(%20) /* ty=Tensor[(9, 1, 16), float64] */;
  (%21,)
}

def @func_5582() -> (Tensor[(12, 130), uint16], Tensor[(12, 130), float64]) {
  %22 = @func_4637() /* ty=(Tensor[(12, 130), float64],) */;
  %23 = %22.0;
  %24 = @func_3618() /* ty=Tensor[(1560), float64] */;
  %25 = cast(%24, dtype="uint16") /* ty=Tensor[(1560), uint16] */;
  %26 = shape_of(%23, dtype="int32") /* ty=Tensor[(2), int32] */;
  %27 = cast(%23, dtype="uint16") /* ty=Tensor[(12, 130), uint16] */;
  %28 = dyn.reshape(%25, %26, newshape=[]) /* ty=Tensor[(?, ?), uint16] */;
  %29 = cast(meta[relay.Constant][0] /* ty=Tensor[(12, 130), float64] */, dtype="float64") /* ty=Tensor[(12, 130), float64] */;
  %30 = shape_of(%23, dtype="int32") /* ty=Tensor[(2), int32] */;
  %31 = cast(%23, dtype="float64") /* ty=Tensor[(12, 130), float64] */;
  %32 = dyn.reshape(%29, %30, newshape=[]) /* ty=Tensor[(?, ?), float64] */;
  %33 = logical_xor(%27, %28) /* ty=Tensor[(12, 130), uint16] */;
  %34 = divide(%31, %32) /* ty=Tensor[(12, 130), float64] */;
  (%33, %34)
}

def @func_6741() -> (Tensor[(2, 20), float64], Tensor[(12, 12, 3), float32]) {
  %35 = @func_5083() /* ty=(Tensor[(2, 20), float64],) */;
  %36 = %35.0;
  %37 = @func_5966() /* ty=Tensor[(12, 12, 3), float32] */;
  (%36, %37)
}

def @func_3030(%var_3004: Tensor[(2, 20), float64]) -> (Tensor[(12, 12, 3), float32], Tensor[(9, 1, 16), float64], Tensor[(2, 20), float64], Tensor[(144), float64]) {
  %38 = @func_2864() /* ty=(Tensor[(12, 12, 3), float32],) */;
  %39 = cast(%var_3004, dtype="float64") /* ty=Tensor[(2, 20), float64] */;
  %40 = cast(meta[relay.Constant][1] /* ty=Tensor[(144), float64] */, dtype="float64") /* ty=Tensor[(144), float64] */;
  %41 = reshape(%39, newshape=[1, 8, 5]) /* ty=Tensor[(1, 8, 5), float64] */;
  %42 = reshape(%40, newshape=[144]) /* ty=Tensor[(144), float64] */;
  %43 = @func_956(%41, %42) /* ty=(Tensor[(15, 8, 5), bool], Tensor[(9, 1, 16), float64], Tensor[(144), float64]) */;
  %44 = %38.0;
  %45 = %43.1;
  (%44, %45, %var_3004, meta[relay.Constant][1] /* ty=Tensor[(144), float64] */)
}

def @func_6222() -> (Tensor[(12, 12, 3), float32], Tensor[(12, 12, 3), float32]) {
  %46 = @func_2864() /* ty=(Tensor[(12, 12, 3), float32],) */;
  %47 = @func_2864() /* ty=(Tensor[(12, 12, 3), float32],) */;
  %48 = %46.0;
  %49 = %47.0;
  (%48, %49)
}

def @func_10469() -> (Tensor[(12, 12, 3), float32], Tensor[(1560), float64], Tensor[(1560), float64], Tensor[(2, 20), float64]) {
  %50 = @func_3933() /* ty=(Tensor[(12, 12, 3), float32],) */;
  %51 = @func_8180() /* ty=(Tensor[(12, 12, 3), float32], Tensor[(12, 12, 3), float32], Tensor[(1560), float64], Tensor[(2, 20), float64]) */;
  %52 = %50.0;
  %53 = @func_6655() /* ty=Tensor[(1560), float64] */;
  %54 = @func_3618() /* ty=Tensor[(1560), float64] */;
  %55 = %51.3;
  (%52, %53, %54, %55)
}

def @func_2864() -> (Tensor[(12, 12, 3), float32],) {
  %56 = @func_2829() /* ty=(Tensor[(12, 12, 3), float32], Tensor[(10, 12, 13), float64], Tensor[(12, 130), float64]) */;
  %57 = %56.0;
  (%57,)
}

def @func_8299() -> Tensor[(12, 12, 3), float32] {
  @func_5188() /* ty=Tensor[(12, 12, 3), float32] */
}

def @func_9270(%var_9261: Tensor[(15, 7, 9), uint32]) -> Tensor[(15, 7, 9), bool] {
  %58 = cast(meta[relay.Constant][2] /* ty=uint32 */, dtype="bool") /* ty=bool */;
  %59 = cast(%var_9261, dtype="bool") /* ty=Tensor[(15, 7, 9), bool] */;
  greater(%58, %59) /* ty=Tensor[(15, 7, 9), bool] */
}

def @main(%var_13413: Tensor[(16, 3, 15), float64]) -> (Tensor[(16, 3, 15), float64],) {
  %60 = cast(%var_13413, dtype="float64") /* ty=Tensor[(16, 3, 15), float64] */;
  %61 = rsqrt(%60) /* ty=Tensor[(16, 3, 15), float64] */;
  (%61,)
}

def @func_4791() -> Tensor[(1560), float64] {
  %62 = @func_4739() /* ty=(Tensor[(1560), float64], Tensor[(12, 12, 3), float32]) */;
  %62.0
}

def @func_4599() -> Tensor[(12, 12, 3), float32] {
  @func_3372() /* ty=Tensor[(12, 12, 3), float32] */
}

def @func_8618() -> (Tensor[(140, 16), int32], Tensor[(7, 3, 11), float64], Tensor[(231), float64], uint8, Tensor[(1560), float64], uint8) {
  %63 = @func_7897() /* ty=(Tensor[(12, 12, 3), float32], Tensor[(140, 16), int32], Tensor[(140, 16), float64]) */;
  %64 = cast(meta[relay.Constant][3] /* ty=Tensor[(231), float64] */, dtype="float64") /* ty=Tensor[(231), float64] */;
  %65 = cast(meta[relay.Constant][4] /* ty=uint8 */, dtype="uint8") /* ty=uint8 */;
  %66 = cast(meta[relay.Constant][5] /* ty=Tensor[(1560), float64] */, dtype="float64") /* ty=Tensor[(1560), float64] */;
  %67 = cast(meta[relay.Constant][3] /* ty=Tensor[(231), float64] */, dtype="float64") /* ty=Tensor[(231), float64] */;
  %68 = reshape(%64, newshape=[7, 3, 11]) /* ty=Tensor[(7, 3, 11), float64] */;
  %69 = reshape(%65, newshape=[]) /* ty=uint8 */;
  %70 = reshape(%66, newshape=[1560]) /* ty=Tensor[(1560), float64] */;
  %71 = reshape(%67, newshape=[7, 3, 11]) /* ty=Tensor[(7, 3, 11), float64] */;
  %72 = @func_3145(%68, %69, %70, %71) /* ty=(Tensor[(7, 3, 11), float64], Tensor[(3, 11, 4), float32], uint8, Tensor[(10, 12, 13), float64], Tensor[(1560), float64], Tensor[(7, 3, 11), float64], Tensor[(12, 12, 3), float32]) */;
  %73 = @func_3254() /* ty=(Tensor[(12, 130), float64], Tensor[(1560), float64], Tensor[(33, 7), float64], uint8, Tensor[(7, 3, 11), float32], uint8, Tensor[(66), float64], Tensor[(40), uint8], Tensor[(2, 20), float64]) */;
  %74 = %63.1;
  %75 = %72.5;
  %76 = %73.5;
  (%74, %75, meta[relay.Constant][3] /* ty=Tensor[(231), float64] */, meta[relay.Constant][4] /* ty=uint8 */, meta[relay.Constant][5] /* ty=Tensor[(1560), float64] */, %76)
}

def @func_9834(%var_9791: Tensor[(40), uint8]) -> (Tensor[(40), uint8], Tensor[(12, 12, 3), float64], Tensor[(12, 12, 3), float32]) {
  %77 = @func_4522() /* ty=Tensor[(12, 12, 3), float32] */;
  %78 = cast(%var_9791, dtype="uint8") /* ty=Tensor[(40), uint8] */;
  %79 = cast(%77, dtype="float32") /* ty=Tensor[(12, 12, 3), float32] */;
  %80 = cast(%77, dtype="float64") /* ty=Tensor[(12, 12, 3), float64] */;
  %81 = reshape(%78, newshape=[40]) /* ty=Tensor[(40), uint8] */;
  %82 = reshape(%79, newshape=[12, 12, 3]) /* ty=Tensor[(12, 12, 3), float32] */;
  %83 = reshape(%80, newshape=[12, 12, 3]) /* ty=Tensor[(12, 12, 3), float64] */;
  %84 = @func_3519(%81, %82, %83) /* ty=(Tensor[(12, 12, 3), float32], Tensor[(132), float32], uint8, Tensor[(40), uint8], Tensor[(12, 12, 3), float64], Tensor[(12, 12, 3), float32], Tensor[(10, 12, 13), float64], Tensor[(1, 1560), float64], Tensor[(12, 12, 3), float64], Tensor[(12, 12, 3), int8]) */;
  %85 = %84.4;
  %86 = cast(%85, dtype="float64") /* ty=Tensor[(12, 12, 3), float64] */;
  %87 = shape_of(%77, dtype="int32") /* ty=Tensor[(3), int32] */;
  %88 = cast(%77, dtype="float64") /* ty=Tensor[(12, 12, 3), float64] */;
  %89 = dyn.reshape(%86, %87, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %90 = @func_8680() /* ty=(Tensor[(12, 12, 3), float32],) */;
  %91 = floor_mod(%88, %89) /* ty=Tensor[(12, 12, 3), float64] */;
  %92 = %90.0;
  (%var_9791, %91, %92)
}

def @func_4965() -> (Tensor[(12, 12, 3), float32], Tensor[(10, 12, 13), float64], Tensor[(1560, 1), float64], Tensor[(1560), float64], Tensor[(40, 1), float64], Tensor[(40), float64], Tensor[(144), float64]) {
  %93 = @func_2864() /* ty=(Tensor[(12, 12, 3), float32],) */;
  %94 = cast(meta[relay.Constant][6] /* ty=Tensor[(1560, 1), float64] */, dtype="float64") /* ty=Tensor[(1560, 1), float64] */;
  %95 = reshape(%94, newshape=[10, 12, 13]) /* ty=Tensor[(10, 12, 13), float64] */;
  %96 = @func_4482() /* ty=(Tensor[(12, 12, 3), float32], Tensor[(1560), float64], Tensor[(12, 130), float64]) */;
  %97 = cast(meta[relay.Constant][7] /* ty=Tensor[(40), float64] */, dtype="float64") /* ty=Tensor[(40), float64] */;
  %98 = cast(meta[relay.Constant][8] /* ty=Tensor[(144), float64] */, dtype="float64") /* ty=Tensor[(144), float64] */;
  %99 = reshape(%97, newshape=[40, 1]) /* ty=Tensor[(40, 1), float64] */;
  %100 = reshape(%98, newshape=[144]) /* ty=Tensor[(144), float64] */;
  %101 = @func_3579(%99, %100) /* ty=(Tensor[(12, 12, 3), float32], Tensor[(15, 8, 5), bool], Tensor[(40, 1), float64], Tensor[(144), float64]) */;
  %102 = %93.0;
  %103 = @func_2171(%95) /* ty=Tensor[(10, 12, 13), float64] */;
  %104 = %96.1;
  %105 = %101.2;
  (%102, %103, meta[relay.Constant][6] /* ty=Tensor[(1560, 1), float64] */, %104, %105, meta[relay.Constant][7] /* ty=Tensor[(40), float64] */, meta[relay.Constant][8] /* ty=Tensor[(144), float64] */)
}

def @func_8107() -> (Tensor[(12, 12, 3), float32],) {
  %106 = @func_4065() /* ty=(Tensor[(12, 12, 3), float32],) */;
  %107 = %106.0;
  (%107,)
}

def @func_5306() -> Tensor[(40), uint8] {
  %108 = @func_4819() /* ty=(Tensor[(40), uint8],) */;
  %108.0
}

def @func_10021() -> (Tensor[(40), uint8],) {
  %109 = @func_9055() /* ty=Tensor[(40), uint8] */;
  (%109,)
}

def @func_9067() -> (Tensor[(40), uint8],) {
  %110 = @func_4904() /* ty=Tensor[(40), uint8] */;
  (%110,)
}

def @func_7147() -> (Tensor[(12, 130), float64], Tensor[(12, 12, 3), float32], Tensor[(12, 12, 3), float32], Tensor[(10, 12, 13), float64]) {
  %111 = @func_4637() /* ty=(Tensor[(12, 130), float64],) */;
  %112 = @func_5216() /* ty=(Tensor[(12, 12, 3), float32],) */;
  %113 = @func_5771() /* ty=(Tensor[(12, 12, 3), float32], Tensor[(1560), float32], Tensor[(12, 130), float64]) */;
  %114 = %111.0;
  %115 = cast(%114, dtype="float64") /* ty=Tensor[(12, 130), float64] */;
  %116 = reshape(%115, newshape=[10, 12, 13]) /* ty=Tensor[(10, 12, 13), float64] */;
  %117 = %112.0;
  %118 = %113.0;
  %119 = @func_2171(%116) /* ty=Tensor[(10, 12, 13), float64] */;
  (%114, %117, %118, %119)
}

def @func_11940() -> (Tensor[(12, 12, 3), float32],) {
  %120 = @func_2864() /* ty=(Tensor[(12, 12, 3), float32],) */;
  %121 = %120.0;
  (%121,)
}

def @func_11185(%var_11176: Tensor[(1560), float32]) -> (Tensor[(40), uint8], Tensor[(2, 20), uint8], Tensor[(1560), float32]) {
  %122 = @func_11069() /* ty=(Tensor[(40), uint8], Tensor[(12, 12, 3), float32], Tensor[(12, 12, 3), float32]) */;
  %123 = cast(%var_11176, dtype="float32") /* ty=Tensor[(1560), float32] */;
  %124 = %122.0;
  %125 = cast(%124, dtype="uint8") /* ty=Tensor[(40), uint8] */;
  %126 = reshape(%123, newshape=[12, 130]) /* ty=Tensor[(12, 130), float32] */;
  %127 = reshape(%125, newshape=[2, 20]) /* ty=Tensor[(2, 20), uint8] */;
  %128 = @func_3844(%126, %127) /* ty=(Tensor[(12, 130), int32], uint8, Tensor[(66), float64], uint8, Tensor[(2, 20), uint8]) */;
  %129 = %128.4;
  (%124, %129, %var_11176)
}

def @func_8998() -> Tensor[(40), uint8] {
  %130 = @func_8349() /* ty=(Tensor[(40), uint8],) */;
  %130.0
}

def @func_10822() -> (Tensor[(1560), float64], Tensor[(1560), bool]) {
  %131 = @func_10673() /* ty=(Tensor[(1560), float64],) */;
  %132 = %131.0;
  %133 = cast(%132, dtype="float64") /* ty=Tensor[(1560), float64] */;
  %134 = reshape(%133, newshape=[1560]) /* ty=Tensor[(1560), float64] */;
  %135 = @func_10494(%134) /* ty=Tensor[(1560), bool] */;
  (%132, %135)
}

def @func_3690(%var_3653: Tensor[(231), float64], %var_3654: uint8, %var_3655: Tensor[(2, 780), float64]) -> (Tensor[(12, 12, 3), float32], uint8, Tensor[(2, 780), float64], Tensor[(231), float32], Tensor[(1560), float64], Tensor[(10, 12, 13), float64], uint8, Tensor[(132), float32]) {
  %136 = cast(%var_3653, dtype="float64") /* ty=Tensor[(231), float64] */;
  %137 = cast(%var_3654, dtype="uint8") /* ty=uint8 */;
  %138 = cast(%var_3655, dtype="float64") /* ty=Tensor[(2, 780), float64] */;
  %139 = cast(%var_3653, dtype="float64") /* ty=Tensor[(231), float64] */;
  %140 = reshape(%136, newshape=[7, 3, 11]) /* ty=Tensor[(7, 3, 11), float64] */;
  %141 = reshape(%137, newshape=[]) /* ty=uint8 */;
  %142 = reshape(%138, newshape=[1560]) /* ty=Tensor[(1560), float64] */;
  %143 = reshape(%139, newshape=[7, 3, 11]) /* ty=Tensor[(7, 3, 11), float64] */;
  %144 = @func_3145(%140, %141, %142, %143) /* ty=(Tensor[(7, 3, 11), float64], Tensor[(3, 11, 4), float32], uint8, Tensor[(10, 12, 13), float64], Tensor[(1560), float64], Tensor[(7, 3, 11), float64], Tensor[(12, 12, 3), float32]) */;
  %145 = %144.5;
  %146 = cast(%145, dtype="float32") /* ty=Tensor[(7, 3, 11), float32] */;
  %147 = shape_of(%var_3653, dtype="int32") /* ty=Tensor[(1), int32] */;
  %148 = cast(%var_3653, dtype="float32") /* ty=Tensor[(231), float32] */;
  %149 = dyn.reshape(%146, %147, newshape=[]) /* ty=Tensor[(?), float32] */;
  %150 = cast(%var_3655, dtype="float64") /* ty=Tensor[(2, 780), float64] */;
  %151 = reshape(%150, newshape=[10, 12, 13]) /* ty=Tensor[(10, 12, 13), float64] */;
  %152 = cast(%var_3655, dtype="float64") /* ty=Tensor[(2, 780), float64] */;
  %153 = cast(meta[relay.Constant][9] /* ty=Tensor[(132), float32] */, dtype="float32") /* ty=Tensor[(132), float32] */;
  %154 = reshape(%152, newshape=[10, 12, 13]) /* ty=Tensor[(10, 12, 13), float64] */;
  %155 = reshape(%153, newshape=[132]) /* ty=Tensor[(132), float32] */;
  %156 = @func_3182(%154, %155) /* ty=(Tensor[(10, 12, 13), bool], Tensor[(?, 14, 9), float32], uint8, Tensor[(3, 11, 4), float32], Tensor[(132), float32]) */;
  %157 = @func_3372() /* ty=Tensor[(12, 12, 3), float32] */;
  %158 = mod(%148, %149) /* ty=Tensor[(231), float32] */;
  %159 = @func_3618() /* ty=Tensor[(1560), float64] */;
  %160 = @func_2171(%151) /* ty=Tensor[(10, 12, 13), float64] */;
  %161 = %156.2;
  (%157, %var_3654, %var_3655, %158, %159, %160, %161, meta[relay.Constant][9] /* ty=Tensor[(132), float32] */)
}

def @func_6904(%var_6880: Tensor[(11, 16, 8), uint32]) -> (Tensor[(11, 16, 8), uint32], Tensor[(12, 12, 3), float32]) {
  %162 = cast(meta[relay.Constant][10] /* ty=uint32 */, dtype="uint32") /* ty=uint32 */;
  %163 = cast(%var_6880, dtype="uint32") /* ty=Tensor[(11, 16, 8), uint32] */;
  %164 = @func_3713() /* ty=(Tensor[(12, 12, 3), float32],) */;
  %165 = bitwise_or(%162, %163) /* ty=Tensor[(11, 16, 8), uint32] */;
  %166 = %164.0;
  (%165, %166)
}

def @func_12733() -> (Tensor[(12, 12, 3), float32],) {
  %167 = @func_4739() /* ty=(Tensor[(1560), float64], Tensor[(12, 12, 3), float32]) */;
  %168 = %167.1;
  (%168,)
}

def @func_4146() -> (Tensor[(12, 12, 3), float32], Tensor[(12, 12, 3), float32], Tensor[(12, 12, 3), float32]) {
  %169 = @func_4065() /* ty=(Tensor[(12, 12, 3), float32],) */;
  %170 = @func_3372() /* ty=Tensor[(12, 12, 3), float32] */;
  %171 = cast(%170, dtype="float32") /* ty=Tensor[(12, 12, 3), float32] */;
  %172 = @func_3372() /* ty=Tensor[(12, 12, 3), float32] */;
  %173 = %169.0;
  %174 = sigmoid(%171) /* ty=Tensor[(12, 12, 3), float32] */;
  (%172, %173, %174)
}

def @func_956(%var_933: Tensor[(1, 8, 5), float64], %var_952: Tensor[(144), float64]) -> (Tensor[(15, 8, 5), bool], Tensor[(9, 1, 16), float64], Tensor[(144), float64]) {
  %175 = cast(%var_933, dtype="float64") /* ty=Tensor[(1, 8, 5), float64] */;
  %176 = cast(meta[relay.Constant][11] /* ty=Tensor[(15, 8, 5), float64] */, dtype="float64") /* ty=Tensor[(15, 8, 5), float64] */;
  %177 = multiply(%175, %176) /* ty=Tensor[(15, 8, 5), float64] */;
  %178 = cast(%var_933, dtype="int16") /* ty=Tensor[(1, 8, 5), int16] */;
  %179 = cast(meta[relay.Constant][11] /* ty=Tensor[(15, 8, 5), float64] */, dtype="int16") /* ty=Tensor[(15, 8, 5), int16] */;
  %180 = left_shift(%178, %179) /* ty=Tensor[(15, 8, 5), int16] */;
  %181 = cast(%180, dtype="bool") /* ty=Tensor[(15, 8, 5), bool] */;
  %182 = shape_of(%177, dtype="int32") /* ty=Tensor[(3), int32] */;
  %183 = cast(%177, dtype="bool") /* ty=Tensor[(15, 8, 5), bool] */;
  %184 = dyn.reshape(%181, %182, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %185 = cast(%var_952, dtype="float64") /* ty=Tensor[(144), float64] */;
  %186 = reshape(%185, newshape=[9, 1, 16]) /* ty=Tensor[(9, 1, 16), float64] */;
  %187 = @func_672(%186) /* ty=(Tensor[(9, 1, 16), float64],) */;
  %188 = greater(%183, %184) /* ty=Tensor[(15, 8, 5), bool] */;
  %189 = %187.0;
  (%188, %189, %var_952)
}

def @func_97(%var_90: Tensor[(3, 11, 4), float32]) -> Tensor[(3, 11, 4), float32] {
  %190 = cast(%var_90, dtype="float32") /* ty=Tensor[(3, 11, 4), float32] */;
  sigmoid(%190) /* ty=Tensor[(3, 11, 4), float32] */
}

def @func_4819() -> (Tensor[(40), uint8],) {
  %191 = @func_3254() /* ty=(Tensor[(12, 130), float64], Tensor[(1560), float64], Tensor[(33, 7), float64], uint8, Tensor[(7, 3, 11), float32], uint8, Tensor[(66), float64], Tensor[(40), uint8], Tensor[(2, 20), float64]) */;
  %192 = %191.7;
  (%192,)
}

def @func_3182(%var_3164: Tensor[(10, 12, 13), float64], %var_3179: Tensor[(132), float32]) -> (Tensor[(10, 12, 13), bool], Tensor[(?, 14, 9), float32], uint8, Tensor[(3, 11, 4), float32], Tensor[(132), float32]) {
  %193 = @func_2829() /* ty=(Tensor[(12, 12, 3), float32], Tensor[(10, 12, 13), float64], Tensor[(12, 130), float64]) */;
  %194 = %193.1;
  %195 = cast(%var_3164, dtype="bool") /* ty=Tensor[(10, 12, 13), bool] */;
  %196 = shape_of(%194, dtype="int32") /* ty=Tensor[(3), int32] */;
  %197 = cast(%194, dtype="bool") /* ty=Tensor[(10, 12, 13), bool] */;
  %198 = dyn.reshape(%195, %196, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %199 = cast(meta[relay.Constant][12] /* ty=uint8 */, dtype="uint8") /* ty=uint8 */;
  %200 = reshape(%199, newshape=[]) /* ty=uint8 */;
  %201 = @func_788(%200) /* ty=(Tensor[(3, 11, 4), float32], uint8, Tensor[(40, 1), uint8], Tensor[(1, 14, 9), float64], Tensor[(?, 14, 9), float32], Tensor[(3, 11, 4), float32]) */;
  %202 = cast(%var_3179, dtype="float32") /* ty=Tensor[(132), float32] */;
  %203 = reshape(%202, newshape=[3, 11, 4]) /* ty=Tensor[(3, 11, 4), float32] */;
  %204 = greater(%197, %198) /* ty=Tensor[(10, 12, 13), bool] */;
  %205 = %201.4;
  %206 = @func_97(%203) /* ty=Tensor[(3, 11, 4), float32] */;
  (%204, %205, meta[relay.Constant][12] /* ty=uint8 */, %206, %var_3179)
}

def @func_7283() -> Tensor[(40), uint8] {
  %207 = @func_4819() /* ty=(Tensor[(40), uint8],) */;
  %207.0
}

def @func_11659() -> (Tensor[(11, 16, 8), uint32],) {
  %208 = @func_9117() /* ty=(Tensor[(12, 12, 3), float32], Tensor[(11, 16, 8), uint32], Tensor[(1408), uint32], Tensor[(40), float32]) */;
  %209 = %208.1;
  (%209,)
}

def @func_10896() -> Tensor[(12, 12, 3), float32] {
  %210 = @func_3713() /* ty=(Tensor[(12, 12, 3), float32],) */;
  %210.0
}

def @func_4441() -> Tensor[(12, 12, 3), float32] {
  @func_3372() /* ty=Tensor[(12, 12, 3), float32] */
}

def @func_4923() -> (Tensor[(1560), float64],) {
  %211 = @func_4739() /* ty=(Tensor[(1560), float64], Tensor[(12, 12, 3), float32]) */;
  %212 = %211.0;
  (%212,)
}

def @func_3519(%var_3448: Tensor[(40), uint8], %var_3465: Tensor[(12, 12, 3), float32], %var_3511: Tensor[(12, 12, 3), float64]) -> (Tensor[(12, 12, 3), float32], Tensor[(132), float32], uint8, Tensor[(40), uint8], Tensor[(12, 12, 3), float64], Tensor[(12, 12, 3), float32], Tensor[(10, 12, 13), float64], Tensor[(1, 1560), float64], Tensor[(12, 12, 3), float64], Tensor[(12, 12, 3), int8]) {
  %213 = @func_2864() /* ty=(Tensor[(12, 12, 3), float32],) */;
  %214 = cast(meta[relay.Constant][13] /* ty=uint8 */, dtype="uint8") /* ty=uint8 */;
  %215 = cast(%var_3448, dtype="uint8") /* ty=Tensor[(40), uint8] */;
  %216 = reshape(%214, newshape=[]) /* ty=uint8 */;
  %217 = reshape(%215, newshape=[1, 8, 5]) /* ty=Tensor[(1, 8, 5), uint8] */;
  %218 = @func_619(%216, %217) /* ty=(Tensor[(3, 11, 4), float32], Tensor[(132), float32], Tensor[(?, 8, 5), int32], Tensor[(3, 11, 4), float32], Tensor[(3, 11, 4), float32]) */;
  %219 = cast(%var_3448, dtype="float64") /* ty=Tensor[(40), float64] */;
  %220 = reshape(%219, newshape=[2, 20]) /* ty=Tensor[(2, 20), float64] */;
  %221 = @func_3030(%220) /* ty=(Tensor[(12, 12, 3), float32], Tensor[(9, 1, 16), float64], Tensor[(2, 20), float64], Tensor[(144), float64]) */;
  %222 = %221.0;
  %223 = cast(%var_3465, dtype="float64") /* ty=Tensor[(12, 12, 3), float64] */;
  %224 = shape_of(%222, dtype="int32") /* ty=Tensor[(3), int32] */;
  %225 = cast(%222, dtype="float64") /* ty=Tensor[(12, 12, 3), float64] */;
  %226 = dyn.reshape(%223, %224, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %227 = @func_2829() /* ty=(Tensor[(12, 12, 3), float32], Tensor[(10, 12, 13), float64], Tensor[(12, 130), float64]) */;
  %228 = cast(meta[relay.Constant][14] /* ty=Tensor[(1, 1560), float64] */, dtype="float64") /* ty=Tensor[(1, 1560), float64] */;
  %229 = reshape(%228, newshape=[10, 12, 13]) /* ty=Tensor[(10, 12, 13), float64] */;
  %230 = cast(%222, dtype="float64") /* ty=Tensor[(12, 12, 3), float64] */;
  %231 = atanh(%230) /* ty=Tensor[(12, 12, 3), float64] */;
  %232 = cast(%231, dtype="float64") /* ty=Tensor[(12, 12, 3), float64] */;
  %233 = cast(%var_3511, dtype="int8") /* ty=Tensor[(12, 12, 3), int8] */;
  %234 = shape_of(%231, dtype="int32") /* ty=Tensor[(3), int32] */;
  %235 = cast(%231, dtype="int8") /* ty=Tensor[(12, 12, 3), int8] */;
  %236 = dyn.reshape(%233, %234, newshape=[]) /* ty=Tensor[(?, ?, ?), int8] */;
  %237 = %213.0;
  %238 = %218.1;
  %239 = mod(%225, %226) /* ty=Tensor[(12, 12, 3), float64] */;
  %240 = %227.0;
  %241 = @func_2171(%229) /* ty=Tensor[(10, 12, 13), float64] */;
  %242 = erf(%232) /* ty=Tensor[(12, 12, 3), float64] */;
  %243 = maximum(%235, %236) /* ty=Tensor[(12, 12, 3), int8] */;
  (%237, %238, meta[relay.Constant][13] /* ty=uint8 */, %var_3448, %239, %240, %241, meta[relay.Constant][14] /* ty=Tensor[(1, 1560), float64] */, %242, %243)
}

def @func_4522() -> Tensor[(12, 12, 3), float32] {
  @func_3372() /* ty=Tensor[(12, 12, 3), float32] */
}

def @func_11323() -> (Tensor[(1560), float64], Tensor[(9, 1, 16), float64], Tensor[(2, 72), float64], Tensor[(2, 20), float64], Tensor[(2, 20), float64]) {
  %244 = @func_4965() /* ty=(Tensor[(12, 12, 3), float32], Tensor[(10, 12, 13), float64], Tensor[(1560, 1), float64], Tensor[(1560), float64], Tensor[(40, 1), float64], Tensor[(40), float64], Tensor[(144), float64]) */;
  %245 = cast(meta[relay.Constant][15] /* ty=Tensor[(2, 72), float64] */, dtype="float64") /* ty=Tensor[(2, 72), float64] */;
  %246 = reshape(%245, newshape=[9, 1, 16]) /* ty=Tensor[(9, 1, 16), float64] */;
  %247 = @func_672(%246) /* ty=(Tensor[(9, 1, 16), float64],) */;
  %248 = @func_5083() /* ty=(Tensor[(2, 20), float64],) */;
  %249 = @func_5083() /* ty=(Tensor[(2, 20), float64],) */;
  %250 = %244.3;
  %251 = %247.0;
  %252 = %248.0;
  %253 = %249.0;
  (%250, %251, meta[relay.Constant][15] /* ty=Tensor[(2, 72), float64] */, %252, %253)
}

def @func_8180() -> (Tensor[(12, 12, 3), float32], Tensor[(12, 12, 3), float32], Tensor[(1560), float64], Tensor[(2, 20), float64]) {
  %254 = @func_5083() /* ty=(Tensor[(2, 20), float64],) */;
  %255 = @func_5188() /* ty=Tensor[(12, 12, 3), float32] */;
  %256 = @func_5878() /* ty=Tensor[(12, 12, 3), float32] */;
  %257 = @func_8130() /* ty=Tensor[(1560), float64] */;
  %258 = %254.0;
  (%255, %256, %257, %258)
}

def @func_10231(%var_10222: Tensor[(33, 7), float64]) -> (Tensor[(12, 12, 3), int16], Tensor[(1560), float32], Tensor[(1560), float64], Tensor[(9, 1, 16), float64], Tensor[(144), float64], Tensor[(12, 12, 3), float32], Tensor[(33, 7), float64], uint8, Tensor[(2, 20), float64]) {
  %259 = @func_9949() /* ty=(Tensor[(12, 12, 3), int16],) */;
  %260 = @func_6390() /* ty=(Tensor[(12, 12, 3), float32], Tensor[(1560), float64]) */;
  %261 = cast(meta[relay.Constant][16] /* ty=Tensor[(144), float64] */, dtype="float64") /* ty=Tensor[(144), float64] */;
  %262 = reshape(%261, newshape=[9, 1, 16]) /* ty=Tensor[(9, 1, 16), float64] */;
  %263 = @func_672(%262) /* ty=(Tensor[(9, 1, 16), float64],) */;
  %264 = cast(%var_10222, dtype="float64") /* ty=Tensor[(33, 7), float64] */;
  %265 = cast(meta[relay.Constant][17] /* ty=uint8 */, dtype="uint8") /* ty=uint8 */;
  %266 = %260.1;
  %267 = cast(%266, dtype="float64") /* ty=Tensor[(1560), float64] */;
  %268 = reshape(%264, newshape=[231]) /* ty=Tensor[(231), float64] */;
  %269 = reshape(%265, newshape=[]) /* ty=uint8 */;
  %270 = reshape(%267, newshape=[2, 780]) /* ty=Tensor[(2, 780), float64] */;
  %271 = @func_3690(%268, %269, %270) /* ty=(Tensor[(12, 12, 3), float32], uint8, Tensor[(2, 780), float64], Tensor[(231), float32], Tensor[(1560), float64], Tensor[(10, 12, 13), float64], uint8, Tensor[(132), float32]) */;
  %272 = @func_3254() /* ty=(Tensor[(12, 130), float64], Tensor[(1560), float64], Tensor[(33, 7), float64], uint8, Tensor[(7, 3, 11), float32], uint8, Tensor[(66), float64], Tensor[(40), uint8], Tensor[(2, 20), float64]) */;
  %273 = %259.0;
  %274 = @func_5679() /* ty=Tensor[(1560), float32] */;
  %275 = %263.0;
  %276 = %271.0;
  %277 = %272.8;
  (%273, %274, %266, %275, meta[relay.Constant][16] /* ty=Tensor[(144), float64] */, %276, %var_10222, meta[relay.Constant][17] /* ty=uint8 */, %277)
}

def @func_2472(%var_2455: Tensor[(2, 3, 11), float64], %var_2459: uint8, %var_2460: Tensor[(2, 20), uint8]) -> (Tensor[(?, 8, 5), int32], uint8, Tensor[(2, 20), uint8], Tensor[(2, 3, 11), float64]) {
  %278 = cast(%var_2459, dtype="uint8") /* ty=uint8 */;
  %279 = cast(%var_2460, dtype="uint8") /* ty=Tensor[(2, 20), uint8] */;
  %280 = reshape(%278, newshape=[]) /* ty=uint8 */;
  %281 = reshape(%279, newshape=[1, 8, 5]) /* ty=Tensor[(1, 8, 5), uint8] */;
  %282 = @func_619(%280, %281) /* ty=(Tensor[(3, 11, 4), float32], Tensor[(132), float32], Tensor[(?, 8, 5), int32], Tensor[(3, 11, 4), float32], Tensor[(3, 11, 4), float32]) */;
  %283 = cast(%var_2455, dtype="float64") /* ty=Tensor[(2, 3, 11), float64] */;
  %284 = sin(%283) /* ty=Tensor[(2, 3, 11), float64] */;
  %285 = cast(%284, dtype="float64") /* ty=Tensor[(2, 3, 11), float64] */;
  %286 = %282.2;
  %287 = log10(%285) /* ty=Tensor[(2, 3, 11), float64] */;
  (%286, %var_2459, %var_2460, %287)
}

def @func_9577() -> (Tensor[(40), uint8], uint8) {
  %288 = @func_8349() /* ty=(Tensor[(40), uint8],) */;
  %289 = @func_8618() /* ty=(Tensor[(140, 16), int32], Tensor[(7, 3, 11), float64], Tensor[(231), float64], uint8, Tensor[(1560), float64], uint8) */;
  %290 = %288.0;
  %291 = %289.5;
  (%290, %291)
}

def @func_6802() -> Tensor[(1560), float64] {
  @func_4791() /* ty=Tensor[(1560), float64] */
}

def @func_10617() -> (Tensor[(1560), float64],) {
  %292 = @func_8130() /* ty=Tensor[(1560), float64] */;
  (%292,)
}

def @func_12000() -> (Tensor[(40), uint8], Tensor[(40), uint8]) {
  %293 = @func_9067() /* ty=(Tensor[(40), uint8],) */;
  %294 = @func_5387() /* ty=(Tensor[(40), uint8], Tensor[(40), uint8]) */;
  %295 = %293.0;
  %296 = %294.0;
  (%295, %296)
}

def @func_12284(%var_12270: Tensor[(16, 10, 16), uint16], %var_12271: Tensor[(16, 10, 16), uint16]) -> (Tensor[(16, 10, 16), uint16], Tensor[(16, 10, 16), float32]) {
  %297 = cast(%var_12271, dtype="uint16") /* ty=Tensor[(16, 10, 16), uint16] */;
  %298 = shape_of(%var_12270, dtype="int32") /* ty=Tensor[(3), int32] */;
  %299 = cast(%var_12270, dtype="uint16") /* ty=Tensor[(16, 10, 16), uint16] */;
  %300 = dyn.reshape(%297, %298, newshape=[]) /* ty=Tensor[(?, ?, ?), uint16] */;
  %301 = cast(%var_12271, dtype="float32") /* ty=Tensor[(16, 10, 16), float32] */;
  %302 = logical_xor(%299, %300) /* ty=Tensor[(16, 10, 16), uint16] */;
  %303 = sinh(%301) /* ty=Tensor[(16, 10, 16), float32] */;
  (%302, %303)
}

def @func_6068(%var_6019: Tensor[(10, 12, 13), float32], %var_6025: Tensor[(132), float32]) -> (Tensor[(10, 12, 13), float64], Tensor[(3, 11, 4), float32], Tensor[(132), float32], Tensor[(40), float64], Tensor[(12, 12, 3), float32], Tensor[(12, 12, 3), float32], Tensor[(10, 12, 13), float64], Tensor[(12, 130), uint16]) {
  %304 = @func_2829() /* ty=(Tensor[(12, 12, 3), float32], Tensor[(10, 12, 13), float64], Tensor[(12, 130), float64]) */;
  %305 = %304.1;
  %306 = cast(%305, dtype="float32") /* ty=Tensor[(10, 12, 13), float32] */;
  %307 = erf(%306) /* ty=Tensor[(10, 12, 13), float32] */;
  %308 = cast(%var_6019, dtype="float64") /* ty=Tensor[(10, 12, 13), float64] */;
  %309 = shape_of(%307, dtype="int32") /* ty=Tensor[(3), int32] */;
  %310 = cast(%307, dtype="float64") /* ty=Tensor[(10, 12, 13), float64] */;
  %311 = dyn.reshape(%308, %309, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %312 = cast(%var_6025, dtype="float32") /* ty=Tensor[(132), float32] */;
  %313 = cast(meta[relay.Constant][18] /* ty=Tensor[(40), float64] */, dtype="float64") /* ty=Tensor[(40), float64] */;
  %314 = reshape(%312, newshape=[132]) /* ty=Tensor[(132), float32] */;
  %315 = reshape(%313, newshape=[40, 1]) /* ty=Tensor[(40, 1), float64] */;
  %316 = @func_4768(%314, %315) /* ty=(Tensor[(1560), float64], Tensor[(3, 11, 4), float32], Tensor[(132), float32], Tensor[(40), float64], Tensor[(40, 1), float64]) */;
  %317 = @func_5216() /* ty=(Tensor[(12, 12, 3), float32],) */;
  %318 = cast(%307, dtype="float64") /* ty=Tensor[(10, 12, 13), float64] */;
  %319 = @func_5582() /* ty=(Tensor[(12, 130), uint16], Tensor[(12, 130), float64]) */;
  %320 = floor_divide(%310, %311) /* ty=Tensor[(10, 12, 13), float64] */;
  %321 = %316.1;
  %322 = %317.0;
  %323 = @func_4522() /* ty=Tensor[(12, 12, 3), float32] */;
  %324 = rsqrt(%318) /* ty=Tensor[(10, 12, 13), float64] */;
  %325 = %319.0;
  (%320, %321, %var_6025, meta[relay.Constant][18] /* ty=Tensor[(40), float64] */, %322, %323, %324, %325)
}

def @func_5216() -> (Tensor[(12, 12, 3), float32],) {
  %326 = @func_4599() /* ty=Tensor[(12, 12, 3), float32] */;
  (%326,)
}

def @func_5966() -> Tensor[(12, 12, 3), float32] {
  %327 = @func_5342() /* ty=(Tensor[(12, 12, 3), float32],) */;
  %327.0
}

def @func_7016() -> (Tensor[(12, 12, 3), float32], Tensor[(12, 12, 3), int16]) {
  %328 = @func_6741() /* ty=(Tensor[(2, 20), float64], Tensor[(12, 12, 3), float32]) */;
  %329 = @func_6143() /* ty=(Tensor[(12, 12, 3), float64], Tensor[(14, ?, 11), bool], Tensor[(1, 154), float64], Tensor[(1560), float64], Tensor[(12, 12, 3), int16], Tensor[(12, 12, 3), float32], Tensor[(12, 12, 3), float32]) */;
  %330 = %328.1;
  %331 = %329.4;
  (%330, %331)
}

def @func_12574() -> (Tensor[(12, 12, 3), float32], Tensor[(12, 130), bool], Tensor[(1560), float64]) {
  %332 = @func_7509() /* ty=(Tensor[(12, 12, 3), float32],) */;
  %333 = cast(meta[relay.Constant][19] /* ty=Tensor[(1560), float64] */, dtype="float64") /* ty=Tensor[(1560), float64] */;
  %334 = reshape(%333, newshape=[12, 130]) /* ty=Tensor[(12, 130), float64] */;
  %335 = @func_10786(%334) /* ty=(Tensor[(12, 130), bool],) */;
  %336 = %332.0;
  %337 = %335.0;
  (%336, %337, meta[relay.Constant][19] /* ty=Tensor[(1560), float64] */)
}

def @func_3352(%var_3336: Tensor[(132), float32], %var_3348: Tensor[(40), float64]) -> (Tensor[(12, 12, 3), float32], uint8, Tensor[(1560), float64], Tensor[(132), float32], Tensor[(12, 12, 3), float32], Tensor[(9, 1, 16), float64], Tensor[(40), float64]) {
  %338 = @func_2864() /* ty=(Tensor[(12, 12, 3), float32],) */;
  %339 = cast(meta[relay.Constant][20] /* ty=Tensor[(1560), float64] */, dtype="float64") /* ty=Tensor[(1560), float64] */;
  %340 = cast(%var_3336, dtype="float32") /* ty=Tensor[(132), float32] */;
  %341 = reshape(%339, newshape=[10, 12, 13]) /* ty=Tensor[(10, 12, 13), float64] */;
  %342 = reshape(%340, newshape=[132]) /* ty=Tensor[(132), float32] */;
  %343 = @func_3182(%341, %342) /* ty=(Tensor[(10, 12, 13), bool], Tensor[(?, 14, 9), float32], uint8, Tensor[(3, 11, 4), float32], Tensor[(132), float32]) */;
  %344 = @func_2864() /* ty=(Tensor[(12, 12, 3), float32],) */;
  %345 = cast(%var_3348, dtype="float64") /* ty=Tensor[(40), float64] */;
  %346 = reshape(%345, newshape=[2, 20]) /* ty=Tensor[(2, 20), float64] */;
  %347 = @func_3030(%346) /* ty=(Tensor[(12, 12, 3), float32], Tensor[(9, 1, 16), float64], Tensor[(2, 20), float64], Tensor[(144), float64]) */;
  %348 = %338.0;
  %349 = %343.2;
  %350 = %344.0;
  %351 = %347.1;
  (%348, %349, meta[relay.Constant][20] /* ty=Tensor[(1560), float64] */, %var_3336, %350, %351, %var_3348)
}

def @func_13177(%var_13164: Tensor[(12, 12, 3), float32]) -> (Tensor[(12, 12, 3), int64],) {
  %352 = @func_11551() /* ty=(Tensor[(12, 12, 3), float32],) */;
  %353 = %352.0;
  %354 = cast(%var_13164, dtype="int64") /* ty=Tensor[(12, 12, 3), int64] */;
  %355 = shape_of(%353, dtype="int32") /* ty=Tensor[(3), int32] */;
  %356 = cast(%353, dtype="int64") /* ty=Tensor[(12, 12, 3), int64] */;
  %357 = dyn.reshape(%354, %355, newshape=[]) /* ty=Tensor[(?, ?, ?), int64] */;
  %358 = logical_xor(%356, %357) /* ty=Tensor[(12, 12, 3), int64] */;
  (%358,)
}

def @func_11383(%var_11355: Tensor[(1, 945), uint32]) -> (Tensor[(12, 12, 3), float32], Tensor[(140, 16), int32], Tensor[(1, 945), int32]) {
  %359 = cast(meta[relay.Constant][21] /* ty=uint8 */, dtype="uint8") /* ty=uint8 */;
  %360 = cast(%var_11355, dtype="uint32") /* ty=Tensor[(1, 945), uint32] */;
  %361 = reshape(%359, newshape=[]) /* ty=uint8 */;
  %362 = reshape(%360, newshape=[945]) /* ty=Tensor[(945), uint32] */;
  %363 = @func_10649(%361, %362) /* ty=(Tensor[(14, ?, 11), bool], Tensor[(?, 8, 5), int32], uint8, Tensor[(15, 7, 9), bool], Tensor[(945), uint32], Tensor[(140, 16), int32], Tensor[(12, 12, 3), float32]) */;
  %364 = cast(%var_11355, dtype="int32") /* ty=Tensor[(1, 945), int32] */;
  %365 = cast(meta[relay.Constant][21] /* ty=uint8 */, dtype="int32") /* ty=int32 */;
  %366 = @func_5188() /* ty=Tensor[(12, 12, 3), float32] */;
  %367 = %363.5;
  %368 = minimum(%364, %365) /* ty=Tensor[(1, 945), int32] */;
  (%366, %367, %368)
}

def @func_12374() -> (Tensor[(12, 12, 3), float32],) {
  %369 = @func_5979() /* ty=Tensor[(12, 12, 3), float32] */;
  (%369,)
}

def @func_5920(%var_5911: uint8, %var_5912: Tensor[(1560), float64]) -> (Tensor[(40), uint8], Tensor[(132), float32], Tensor[(231), float64], uint8, Tensor[(1560), float64], Tensor[(12, 12, 3), float32]) {
  %370 = @func_5625() /* ty=(Tensor[(40), uint8],) */;
  %371 = cast(meta[relay.Constant][22] /* ty=Tensor[(231), float64] */, dtype="float64") /* ty=Tensor[(231), float64] */;
  %372 = cast(%var_5911, dtype="uint8") /* ty=uint8 */;
  %373 = cast(%var_5912, dtype="float64") /* ty=Tensor[(1560), float64] */;
  %374 = reshape(%371, newshape=[231]) /* ty=Tensor[(231), float64] */;
  %375 = reshape(%372, newshape=[]) /* ty=uint8 */;
  %376 = reshape(%373, newshape=[2, 780]) /* ty=Tensor[(2, 780), float64] */;
  %377 = @func_3690(%374, %375, %376) /* ty=(Tensor[(12, 12, 3), float32], uint8, Tensor[(2, 780), float64], Tensor[(231), float32], Tensor[(1560), float64], Tensor[(10, 12, 13), float64], uint8, Tensor[(132), float32]) */;
  %378 = @func_5527() /* ty=(Tensor[(1560), float64], Tensor[(12, 12, 3), float32]) */;
  %379 = %370.0;
  %380 = %377.7;
  %381 = %378.1;
  (%379, %380, meta[relay.Constant][22] /* ty=Tensor[(231), float64] */, %var_5911, %var_5912, %381)
}

def @func_7776() -> (Tensor[(12, 12, 3), float32], Tensor[(1560), float64]) {
  %382 = @func_3933() /* ty=(Tensor[(12, 12, 3), float32],) */;
  %383 = @func_6977() /* ty=(Tensor[(1560), float64], Tensor[(40), float64], Tensor[(2, 20), uint8]) */;
  %384 = %382.0;
  %385 = %383.0;
  (%384, %385)
}

def @func_7074() -> (Tensor[(40, 1), float64], Tensor[(40), uint8], Tensor[(40), uint8], Tensor[(12, 12, 3), float32]) {
  %386 = @func_4965() /* ty=(Tensor[(12, 12, 3), float32], Tensor[(10, 12, 13), float64], Tensor[(1560, 1), float64], Tensor[(1560), float64], Tensor[(40, 1), float64], Tensor[(40), float64], Tensor[(144), float64]) */;
  %387 = @func_4482() /* ty=(Tensor[(12, 12, 3), float32], Tensor[(1560), float64], Tensor[(12, 130), float64]) */;
  %388 = %386.4;
  %389 = @func_4904() /* ty=Tensor[(40), uint8] */;
  %390 = @func_5306() /* ty=Tensor[(40), uint8] */;
  %391 = %387.0;
  (%388, %389, %390, %391)
}

def @func_11496() -> (Tensor[(1560), float64], Tensor[(12, 12, 3), float32]) {
  %392 = @func_9677() /* ty=(Tensor[(1560), float64], Tensor[(1560), float64], Tensor[(12, 12, 3), float32]) */;
  %393 = @func_8586() /* ty=(Tensor[(12, 12, 3), float32],) */;
  %394 = %392.1;
  %395 = %393.0;
  (%394, %395)
}

def @func_5938() -> Tensor[(1560), float64] {
  %396 = @func_4965() /* ty=(Tensor[(12, 12, 3), float32], Tensor[(10, 12, 13), float64], Tensor[(1560, 1), float64], Tensor[(1560), float64], Tensor[(40, 1), float64], Tensor[(40), float64], Tensor[(144), float64]) */;
  %396.3
}

def @func_3896(%var_3857: Tensor[(7, 1, 7), float64], %var_3858: Tensor[(7, 13, 7), float64], %var_3884: Tensor[(40), float64], %var_3885: Tensor[(144, 1), float64]) -> (Tensor[(7, 13, 7), float64], Tensor[(12, 12, 3), float32], Tensor[(12, 12, 3), float32], Tensor[(40), float64], Tensor[(144, 1), float64], Tensor[(15, 8, 5), float64]) {
  %397 = cast(%var_3857, dtype="float64") /* ty=Tensor[(7, 1, 7), float64] */;
  %398 = cast(%var_3858, dtype="float64") /* ty=Tensor[(7, 13, 7), float64] */;
  %399 = @func_2864() /* ty=(Tensor[(12, 12, 3), float32],) */;
  %400 = @func_2864() /* ty=(Tensor[(12, 12, 3), float32],) */;
  %401 = cast(%var_3884, dtype="float64") /* ty=Tensor[(40), float64] */;
  %402 = cast(%var_3885, dtype="float64") /* ty=Tensor[(144, 1), float64] */;
  %403 = reshape(%401, newshape=[1, 8, 5]) /* ty=Tensor[(1, 8, 5), float64] */;
  %404 = reshape(%402, newshape=[144]) /* ty=Tensor[(144), float64] */;
  %405 = @func_956(%403, %404) /* ty=(Tensor[(15, 8, 5), bool], Tensor[(9, 1, 16), float64], Tensor[(144), float64]) */;
  %406 = %405.0;
  %407 = cast(%406, dtype="float64") /* ty=Tensor[(15, 8, 5), float64] */;
  %408 = divide(%397, %398) /* ty=Tensor[(7, 13, 7), float64] */;
  %409 = %399.0;
  %410 = %400.0;
  %411 = asinh(%407) /* ty=Tensor[(15, 8, 5), float64] */;
  (%408, %409, %410, %var_3884, %var_3885, %411)
}

def @func_4312(%var_4300: Tensor[(2, 20), uint8]) -> (Tensor[(12, 12, 3), int32], Tensor[(3, 11, 4), float32], uint8, Tensor[(1560), float64], Tensor[(12, 12, 3), float64], Tensor[(3, 11, 4), float32], Tensor[(2, 20), uint8]) {
  %412 = @func_4065() /* ty=(Tensor[(12, 12, 3), float32],) */;
  %413 = %412.0;
  %414 = cast(meta[relay.Constant][23] /* ty=Tensor[(12, 12, 3), float32] */, dtype="int32") /* ty=Tensor[(12, 12, 3), int32] */;
  %415 = shape_of(%413, dtype="int32") /* ty=Tensor[(3), int32] */;
  %416 = cast(%413, dtype="int32") /* ty=Tensor[(12, 12, 3), int32] */;
  %417 = dyn.reshape(%414, %415, newshape=[]) /* ty=Tensor[(?, ?, ?), int32] */;
  %418 = cast(meta[relay.Constant][24] /* ty=uint8 */, dtype="uint8") /* ty=uint8 */;
  %419 = reshape(%418, newshape=[]) /* ty=uint8 */;
  %420 = @func_788(%419) /* ty=(Tensor[(3, 11, 4), float32], uint8, Tensor[(40, 1), uint8], Tensor[(1, 14, 9), float64], Tensor[(?, 14, 9), float32], Tensor[(3, 11, 4), float32]) */;
  %421 = cast(%413, dtype="float64") /* ty=Tensor[(12, 12, 3), float64] */;
  %422 = cast(meta[relay.Constant][24] /* ty=uint8 */, dtype="uint8") /* ty=uint8 */;
  %423 = cast(%var_4300, dtype="uint8") /* ty=Tensor[(2, 20), uint8] */;
  %424 = reshape(%422, newshape=[]) /* ty=uint8 */;
  %425 = reshape(%423, newshape=[1, 8, 5]) /* ty=Tensor[(1, 8, 5), uint8] */;
  %426 = @func_619(%424, %425) /* ty=(Tensor[(3, 11, 4), float32], Tensor[(132), float32], Tensor[(?, 8, 5), int32], Tensor[(3, 11, 4), float32], Tensor[(3, 11, 4), float32]) */;
  %427 = right_shift(%416, %417) /* ty=Tensor[(12, 12, 3), int32] */;
  %428 = %420.5;
  %429 = @func_3618() /* ty=Tensor[(1560), float64] */;
  %430 = log(%421) /* ty=Tensor[(12, 12, 3), float64] */;
  %431 = %426.3;
  (%427, %428, meta[relay.Constant][24] /* ty=uint8 */, %429, %430, %431, %var_4300)
}

def @func_10763() -> (Tensor[(40), uint8],) {
  %432 = @func_10041() /* ty=Tensor[(40), uint8] */;
  (%432,)
}

def @func_3579(%var_3576: Tensor[(40, 1), float64], %var_3577: Tensor[(144), float64]) -> (Tensor[(12, 12, 3), float32], Tensor[(15, 8, 5), bool], Tensor[(40, 1), float64], Tensor[(144), float64]) {
  %433 = @func_2864() /* ty=(Tensor[(12, 12, 3), float32],) */;
  %434 = cast(%var_3576, dtype="float64") /* ty=Tensor[(40, 1), float64] */;
  %435 = cast(%var_3577, dtype="float64") /* ty=Tensor[(144), float64] */;
  %436 = reshape(%434, newshape=[1, 8, 5]) /* ty=Tensor[(1, 8, 5), float64] */;
  %437 = reshape(%435, newshape=[144]) /* ty=Tensor[(144), float64] */;
  %438 = @func_956(%436, %437) /* ty=(Tensor[(15, 8, 5), bool], Tensor[(9, 1, 16), float64], Tensor[(144), float64]) */;
  %439 = %433.0;
  %440 = %438.0;
  (%439, %440, %var_3576, %var_3577)
}

def @func_13067() -> Tensor[(12, 12, 3), float32] {
  %441 = @func_7147() /* ty=(Tensor[(12, 130), float64], Tensor[(12, 12, 3), float32], Tensor[(12, 12, 3), float32], Tensor[(10, 12, 13), float64]) */;
  %441.2
}

def @func_8634() -> (Tensor[(12, 12, 3), float32],) {
  %442 = @func_8180() /* ty=(Tensor[(12, 12, 3), float32], Tensor[(12, 12, 3), float32], Tensor[(1560), float64], Tensor[(2, 20), float64]) */;
  %443 = %442.0;
  (%443,)
}

def @func_8130() -> Tensor[(1560), float64] {
  %444 = @func_5527() /* ty=(Tensor[(1560), float64], Tensor[(12, 12, 3), float32]) */;
  %444.0
}

def @func_6843(%var_6831: Tensor[(13, 15, 2), int32]) -> Tensor[(13, 15, 2), int32] {
  %445 = cast(meta[relay.Constant][25] /* ty=Tensor[(13, 15, 2), int32] */, dtype="int32") /* ty=Tensor[(13, 15, 2), int32] */;
  %446 = shape_of(%var_6831, dtype="int32") /* ty=Tensor[(3), int32] */;
  %447 = cast(%var_6831, dtype="int32") /* ty=Tensor[(13, 15, 2), int32] */;
  %448 = dyn.reshape(%445, %446, newshape=[]) /* ty=Tensor[(?, ?, ?), int32] */;
  add(%447, %448) /* ty=Tensor[(13, 15, 2), int32] */
}

def @func_5825(%var_5788: Tensor[(4, 10, 7), uint16], %var_5789: Tensor[(4, 10, 7), uint16]) -> (Tensor[(4, 10, 7), uint16], Tensor[(4, 10, 7), bool]) {
  %449 = cast(%var_5789, dtype="uint16") /* ty=Tensor[(4, 10, 7), uint16] */;
  %450 = shape_of(%var_5788, dtype="int32") /* ty=Tensor[(3), int32] */;
  %451 = cast(%var_5788, dtype="uint16") /* ty=Tensor[(4, 10, 7), uint16] */;
  %452 = dyn.reshape(%449, %450, newshape=[]) /* ty=Tensor[(?, ?, ?), uint16] */;
  %453 = cast(%var_5789, dtype="bool") /* ty=Tensor[(4, 10, 7), bool] */;
  %454 = shape_of(%var_5788, dtype="int32") /* ty=Tensor[(3), int32] */;
  %455 = cast(%var_5788, dtype="bool") /* ty=Tensor[(4, 10, 7), bool] */;
  %456 = dyn.reshape(%453, %454, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %457 = multiply(%451, %452) /* ty=Tensor[(4, 10, 7), uint16] */;
  %458 = greater(%455, %456) /* ty=Tensor[(4, 10, 7), bool] */;
  (%457, %458)
}

def @func_11151(%var_11115: Tensor[(1560), float64]) -> (Tensor[(1560), bool], Tensor[(12, 12, 3), float32], Tensor[(12, 12, 3), float32], Tensor[(12, 12, 3), float64]) {
  %459 = @func_6802() /* ty=Tensor[(1560), float64] */;
  %460 = cast(%var_11115, dtype="bool") /* ty=Tensor[(1560), bool] */;
  %461 = shape_of(%459, dtype="int32") /* ty=Tensor[(1), int32] */;
  %462 = cast(%459, dtype="bool") /* ty=Tensor[(1560), bool] */;
  %463 = dyn.reshape(%460, %461, newshape=[]) /* ty=Tensor[(?), bool] */;
  %464 = @func_5342() /* ty=(Tensor[(12, 12, 3), float32],) */;
  %465 = @func_8107() /* ty=(Tensor[(12, 12, 3), float32],) */;
  %466 = %465.0;
  %467 = cast(%466, dtype="float32") /* ty=Tensor[(12, 12, 3), float32] */;
  %468 = reshape(%467, newshape=[12, 12, 3]) /* ty=Tensor[(12, 12, 3), float32] */;
  %469 = @func_6311(%468) /* ty=(Tensor[(12, 12, 3), uint8], Tensor[(12, 12, 3), float64], Tensor[(2, 20), uint8], Tensor[(12, 130), float32], Tensor[(40), uint8]) */;
  %470 = equal(%462, %463) /* ty=Tensor[(1560), bool] */;
  %471 = %464.0;
  %472 = %469.1;
  (%470, %471, %466, %472)
}

def @func_11080() -> Tensor[(1560), float64] {
  %473 = @func_3254() /* ty=(Tensor[(12, 130), float64], Tensor[(1560), float64], Tensor[(33, 7), float64], uint8, Tensor[(7, 3, 11), float32], uint8, Tensor[(66), float64], Tensor[(40), uint8], Tensor[(2, 20), float64]) */;
  %473.1
}

def @func_6143() -> (Tensor[(12, 12, 3), float64], Tensor[(14, ?, 11), bool], Tensor[(1, 154), float64], Tensor[(1560), float64], Tensor[(12, 12, 3), int16], Tensor[(12, 12, 3), float32], Tensor[(12, 12, 3), float32]) {
  %474 = @func_4965() /* ty=(Tensor[(12, 12, 3), float32], Tensor[(10, 12, 13), float64], Tensor[(1560, 1), float64], Tensor[(1560), float64], Tensor[(40, 1), float64], Tensor[(40), float64], Tensor[(144), float64]) */;
  %475 = %474.0;
  %476 = @func_4146() /* ty=(Tensor[(12, 12, 3), float32], Tensor[(12, 12, 3), float32], Tensor[(12, 12, 3), float32]) */;
  %477 = %476.0;
  %478 = cast(%477, dtype="float64") /* ty=Tensor[(12, 12, 3), float64] */;
  %479 = shape_of(%475, dtype="int32") /* ty=Tensor[(3), int32] */;
  %480 = cast(%475, dtype="float64") /* ty=Tensor[(12, 12, 3), float64] */;
  %481 = dyn.reshape(%478, %479, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %482 = cast(meta[relay.Constant][26] /* ty=Tensor[(1, 154), float64] */, dtype="float64") /* ty=Tensor[(1, 154), float64] */;
  %483 = reshape(%482, newshape=[14, 1, 11]) /* ty=Tensor[(14, 1, 11), float64] */;
  %484 = @func_4249(%483) /* ty=(Tensor[(14, ?, 11), bool], Tensor[(14, ?, 11), bool]) */;
  %485 = @func_4739() /* ty=(Tensor[(1560), float64], Tensor[(12, 12, 3), float32]) */;
  %486 = cast(%477, dtype="int16") /* ty=Tensor[(12, 12, 3), int16] */;
  %487 = shape_of(%475, dtype="int32") /* ty=Tensor[(3), int32] */;
  %488 = cast(%475, dtype="int16") /* ty=Tensor[(12, 12, 3), int16] */;
  %489 = dyn.reshape(%486, %487, newshape=[]) /* ty=Tensor[(?, ?, ?), int16] */;
  %490 = @func_5342() /* ty=(Tensor[(12, 12, 3), float32],) */;
  %491 = @func_5527() /* ty=(Tensor[(1560), float64], Tensor[(12, 12, 3), float32]) */;
  %492 = power(%480, %481) /* ty=Tensor[(12, 12, 3), float64] */;
  %493 = %484.0;
  %494 = %485.0;
  %495 = bitwise_or(%488, %489) /* ty=Tensor[(12, 12, 3), int16] */;
  %496 = %490.0;
  %497 = %491.1;
  (%492, %493, meta[relay.Constant][26] /* ty=Tensor[(1, 154), float64] */, %494, %495, %496, %497)
}

def @func_3933() -> (Tensor[(12, 12, 3), float32],) {
  %498 = @func_3372() /* ty=Tensor[(12, 12, 3), float32] */;
  (%498,)
}

def @func_6635() -> Tensor[(12, 12, 3), float32] {
  %499 = @func_2829() /* ty=(Tensor[(12, 12, 3), float32], Tensor[(10, 12, 13), float64], Tensor[(12, 130), float64]) */;
  %499.0
}

def @func_11069() -> (Tensor[(40), uint8], Tensor[(12, 12, 3), float32], Tensor[(12, 12, 3), float32]) {
  %500 = @func_4819() /* ty=(Tensor[(40), uint8],) */;
  %501 = %500.0;
  %502 = @func_4522() /* ty=Tensor[(12, 12, 3), float32] */;
  %503 = @func_6635() /* ty=Tensor[(12, 12, 3), float32] */;
  (%501, %502, %503)
}

def @func_8680() -> (Tensor[(12, 12, 3), float32],) {
  %504 = @func_4146() /* ty=(Tensor[(12, 12, 3), float32], Tensor[(12, 12, 3), float32], Tensor[(12, 12, 3), float32]) */;
  %505 = %504.2;
  (%505,)
}

def @func_5979() -> Tensor[(12, 12, 3), float32] {
  @func_5188() /* ty=Tensor[(12, 12, 3), float32] */
}

def @func_4016(%var_3988: Tensor[(637), float64]) -> (Tensor[(12, 130), int16], uint8, Tensor[(132), float32], Tensor[(40, 1), float64], Tensor[(12, 12, 3), float32], Tensor[(49), float64], Tensor[(637), float64], Tensor[(144), float64], Tensor[(9, 1, 16), float64]) {
  %506 = @func_3254() /* ty=(Tensor[(12, 130), float64], Tensor[(1560), float64], Tensor[(33, 7), float64], uint8, Tensor[(7, 3, 11), float32], uint8, Tensor[(66), float64], Tensor[(40), uint8], Tensor[(2, 20), float64]) */;
  %507 = %506.0;
  %508 = cast(%507, dtype="float64") /* ty=Tensor[(12, 130), float64] */;
  %509 = cos(%508) /* ty=Tensor[(12, 130), float64] */;
  %510 = cast(%509, dtype="float64") /* ty=Tensor[(12, 130), float64] */;
  %511 = log10(%510) /* ty=Tensor[(12, 130), float64] */;
  %512 = cast(%509, dtype="bool") /* ty=Tensor[(12, 130), bool] */;
  %513 = shape_of(%511, dtype="int32") /* ty=Tensor[(2), int32] */;
  %514 = cast(%511, dtype="bool") /* ty=Tensor[(12, 130), bool] */;
  %515 = dyn.reshape(%512, %513, newshape=[]) /* ty=Tensor[(?, ?), bool] */;
  %516 = not_equal(%514, %515) /* ty=Tensor[(12, 130), bool] */;
  %517 = cast(%516, dtype="int16") /* ty=Tensor[(12, 130), int16] */;
  %518 = shape_of(%511, dtype="int32") /* ty=Tensor[(2), int32] */;
  %519 = cast(%511, dtype="int16") /* ty=Tensor[(12, 130), int16] */;
  %520 = dyn.reshape(%517, %518, newshape=[]) /* ty=Tensor[(?, ?), int16] */;
  %521 = cast(meta[relay.Constant][27] /* ty=Tensor[(132), float32] */, dtype="float32") /* ty=Tensor[(132), float32] */;
  %522 = cast(meta[relay.Constant][28] /* ty=Tensor[(40, 1), float64] */, dtype="float64") /* ty=Tensor[(40, 1), float64] */;
  %523 = reshape(%521, newshape=[132]) /* ty=Tensor[(132), float32] */;
  %524 = reshape(%522, newshape=[40]) /* ty=Tensor[(40), float64] */;
  %525 = @func_3352(%523, %524) /* ty=(Tensor[(12, 12, 3), float32], uint8, Tensor[(1560), float64], Tensor[(132), float32], Tensor[(12, 12, 3), float32], Tensor[(9, 1, 16), float64], Tensor[(40), float64]) */;
  %526 = cast(meta[relay.Constant][29] /* ty=Tensor[(49), float64] */, dtype="float64") /* ty=Tensor[(49), float64] */;
  %527 = cast(%var_3988, dtype="float64") /* ty=Tensor[(637), float64] */;
  %528 = cast(meta[relay.Constant][28] /* ty=Tensor[(40, 1), float64] */, dtype="float64") /* ty=Tensor[(40, 1), float64] */;
  %529 = cast(meta[relay.Constant][30] /* ty=Tensor[(144), float64] */, dtype="float64") /* ty=Tensor[(144), float64] */;
  %530 = reshape(%526, newshape=[7, 1, 7]) /* ty=Tensor[(7, 1, 7), float64] */;
  %531 = reshape(%527, newshape=[7, 13, 7]) /* ty=Tensor[(7, 13, 7), float64] */;
  %532 = reshape(%528, newshape=[40]) /* ty=Tensor[(40), float64] */;
  %533 = reshape(%529, newshape=[144, 1]) /* ty=Tensor[(144, 1), float64] */;
  %534 = @func_3896(%530, %531, %532, %533) /* ty=(Tensor[(7, 13, 7), float64], Tensor[(12, 12, 3), float32], Tensor[(12, 12, 3), float32], Tensor[(40), float64], Tensor[(144, 1), float64], Tensor[(15, 8, 5), float64]) */;
  %535 = cast(meta[relay.Constant][30] /* ty=Tensor[(144), float64] */, dtype="float64") /* ty=Tensor[(144), float64] */;
  %536 = reshape(%535, newshape=[9, 1, 16]) /* ty=Tensor[(9, 1, 16), float64] */;
  %537 = @func_672(%536) /* ty=(Tensor[(9, 1, 16), float64],) */;
  %538 = subtract(%519, %520) /* ty=Tensor[(12, 130), int16] */;
  %539 = %525.1;
  %540 = %534.1;
  %541 = %537.0;
  (%538, %539, meta[relay.Constant][27] /* ty=Tensor[(132), float32] */, meta[relay.Constant][28] /* ty=Tensor[(40, 1), float64] */, %540, meta[relay.Constant][29] /* ty=Tensor[(49), float64] */, %var_3988, meta[relay.Constant][30] /* ty=Tensor[(144), float64] */, %541)
}

def @func_10001(%var_9991: Tensor[(12, 12, 3), float32]) -> Tensor[(12, 12, 3), int8] {
  %542 = @func_6249() /* ty=(Tensor[(12, 12, 3), float32],) */;
  %543 = %542.0;
  %544 = cast(%var_9991, dtype="int8") /* ty=Tensor[(12, 12, 3), int8] */;
  %545 = shape_of(%543, dtype="int32") /* ty=Tensor[(3), int32] */;
  %546 = cast(%543, dtype="int8") /* ty=Tensor[(12, 12, 3), int8] */;
  %547 = dyn.reshape(%544, %545, newshape=[]) /* ty=Tensor[(?, ?, ?), int8] */;
  multiply(%546, %547) /* ty=Tensor[(12, 12, 3), int8] */
}

def @func_13393() -> (Tensor[(12, 12, 3), float32], Tensor[(12, 12, 3), float32]) {
  %548 = @func_9377() /* ty=(Tensor[(40), uint8], Tensor[(12, 12, 3), float32], Tensor[(11, 6), float64], uint8, Tensor[(12, 12, 3), float32], Tensor[(12, 12, 3), float32]) */;
  %549 = @func_5966() /* ty=Tensor[(12, 12, 3), float32] */;
  %550 = %548.5;
  (%549, %550)
}

def @func_4705(%var_4686: Tensor[(40), float64]) -> (Tensor[(12, 12, 3), float32], Tensor[(9, 1, 16), float64], Tensor[(40), float64], Tensor[(144), float64], Tensor[(9, 1, 16), float64]) {
  %551 = @func_2864() /* ty=(Tensor[(12, 12, 3), float32],) */;
  %552 = cast(%var_4686, dtype="float64") /* ty=Tensor[(40), float64] */;
  %553 = cast(meta[relay.Constant][31] /* ty=Tensor[(144), float64] */, dtype="float64") /* ty=Tensor[(144), float64] */;
  %554 = reshape(%552, newshape=[1, 8, 5]) /* ty=Tensor[(1, 8, 5), float64] */;
  %555 = reshape(%553, newshape=[144]) /* ty=Tensor[(144), float64] */;
  %556 = @func_956(%554, %555) /* ty=(Tensor[(15, 8, 5), bool], Tensor[(9, 1, 16), float64], Tensor[(144), float64]) */;
  %557 = %556.1;
  %558 = cast(%557, dtype="float64") /* ty=Tensor[(9, 1, 16), float64] */;
  %559 = reshape(%558, newshape=[9, 1, 16]) /* ty=Tensor[(9, 1, 16), float64] */;
  %560 = @func_672(%559) /* ty=(Tensor[(9, 1, 16), float64],) */;
  %561 = %551.0;
  %562 = %560.0;
  (%561, %557, %var_4686, meta[relay.Constant][31] /* ty=Tensor[(144), float64] */, %562)
}

def @func_9677() -> (Tensor[(1560), float64], Tensor[(1560), float64], Tensor[(12, 12, 3), float32]) {
  %563 = @func_5527() /* ty=(Tensor[(1560), float64], Tensor[(12, 12, 3), float32]) */;
  %564 = @func_7147() /* ty=(Tensor[(12, 130), float64], Tensor[(12, 12, 3), float32], Tensor[(12, 12, 3), float32], Tensor[(10, 12, 13), float64]) */;
  %565 = @func_5938() /* ty=Tensor[(1560), float64] */;
  %566 = %563.0;
  %567 = %564.1;
  (%565, %566, %567)
}

def @func_12128() -> (Tensor[(10, 12, 13), float64], Tensor[(1560), float32]) {
  %568 = @func_4965() /* ty=(Tensor[(12, 12, 3), float32], Tensor[(10, 12, 13), float64], Tensor[(1560, 1), float64], Tensor[(1560), float64], Tensor[(40, 1), float64], Tensor[(40), float64], Tensor[(144), float64]) */;
  %569 = %568.1;
  %570 = @func_5679() /* ty=Tensor[(1560), float32] */;
  (%569, %570)
}

def @func_3254() -> (Tensor[(12, 130), float64], Tensor[(1560), float64], Tensor[(33, 7), float64], uint8, Tensor[(7, 3, 11), float32], uint8, Tensor[(66), float64], Tensor[(40), uint8], Tensor[(2, 20), float64]) {
  %571 = @func_2829() /* ty=(Tensor[(12, 12, 3), float32], Tensor[(10, 12, 13), float64], Tensor[(12, 130), float64]) */;
  %572 = cast(meta[relay.Constant][32] /* ty=Tensor[(33, 7), float64] */, dtype="float64") /* ty=Tensor[(33, 7), float64] */;
  %573 = cast(meta[relay.Constant][33] /* ty=uint8 */, dtype="uint8") /* ty=uint8 */;
  %574 = %571.2;
  %575 = cast(%574, dtype="float64") /* ty=Tensor[(12, 130), float64] */;
  %576 = cast(meta[relay.Constant][32] /* ty=Tensor[(33, 7), float64] */, dtype="float64") /* ty=Tensor[(33, 7), float64] */;
  %577 = reshape(%572, newshape=[7, 3, 11]) /* ty=Tensor[(7, 3, 11), float64] */;
  %578 = reshape(%573, newshape=[]) /* ty=uint8 */;
  %579 = reshape(%575, newshape=[1560]) /* ty=Tensor[(1560), float64] */;
  %580 = reshape(%576, newshape=[7, 3, 11]) /* ty=Tensor[(7, 3, 11), float64] */;
  %581 = @func_3145(%577, %578, %579, %580) /* ty=(Tensor[(7, 3, 11), float64], Tensor[(3, 11, 4), float32], uint8, Tensor[(10, 12, 13), float64], Tensor[(1560), float64], Tensor[(7, 3, 11), float64], Tensor[(12, 12, 3), float32]) */;
  %582 = cast(meta[relay.Constant][32] /* ty=Tensor[(33, 7), float64] */, dtype="float64") /* ty=Tensor[(33, 7), float64] */;
  %583 = cast(meta[relay.Constant][33] /* ty=uint8 */, dtype="uint8") /* ty=uint8 */;
  %584 = %581.4;
  %585 = cast(%584, dtype="float64") /* ty=Tensor[(1560), float64] */;
  %586 = cast(meta[relay.Constant][32] /* ty=Tensor[(33, 7), float64] */, dtype="float64") /* ty=Tensor[(33, 7), float64] */;
  %587 = reshape(%582, newshape=[7, 3, 11]) /* ty=Tensor[(7, 3, 11), float64] */;
  %588 = reshape(%583, newshape=[]) /* ty=uint8 */;
  %589 = reshape(%585, newshape=[1560]) /* ty=Tensor[(1560), float64] */;
  %590 = reshape(%586, newshape=[7, 3, 11]) /* ty=Tensor[(7, 3, 11), float64] */;
  %591 = @func_3145(%587, %588, %589, %590) /* ty=(Tensor[(7, 3, 11), float64], Tensor[(3, 11, 4), float32], uint8, Tensor[(10, 12, 13), float64], Tensor[(1560), float64], Tensor[(7, 3, 11), float64], Tensor[(12, 12, 3), float32]) */;
  %592 = %591.5;
  %593 = cast(%592, dtype="float32") /* ty=Tensor[(7, 3, 11), float32] */;
  %594 = cast(meta[relay.Constant][34] /* ty=Tensor[(66), float64] */, dtype="float64") /* ty=Tensor[(66), float64] */;
  %595 = cast(meta[relay.Constant][33] /* ty=uint8 */, dtype="uint8") /* ty=uint8 */;
  %596 = cast(meta[relay.Constant][35] /* ty=Tensor[(40), uint8] */, dtype="uint8") /* ty=Tensor[(40), uint8] */;
  %597 = reshape(%594, newshape=[2, 3, 11]) /* ty=Tensor[(2, 3, 11), float64] */;
  %598 = reshape(%595, newshape=[]) /* ty=uint8 */;
  %599 = reshape(%596, newshape=[2, 20]) /* ty=Tensor[(2, 20), uint8] */;
  %600 = @func_2472(%597, %598, %599) /* ty=(Tensor[(?, 8, 5), int32], uint8, Tensor[(2, 20), uint8], Tensor[(2, 3, 11), float64]) */;
  %601 = cast(meta[relay.Constant][35] /* ty=Tensor[(40), uint8] */, dtype="float64") /* ty=Tensor[(40), float64] */;
  %602 = reshape(%601, newshape=[2, 20]) /* ty=Tensor[(2, 20), float64] */;
  %603 = @func_3030(%602) /* ty=(Tensor[(12, 12, 3), float32], Tensor[(9, 1, 16), float64], Tensor[(2, 20), float64], Tensor[(144), float64]) */;
  %604 = rsqrt(%593) /* ty=Tensor[(7, 3, 11), float32] */;
  %605 = %600.1;
  %606 = %603.2;
  (%574, %584, meta[relay.Constant][32] /* ty=Tensor[(33, 7), float64] */, meta[relay.Constant][33] /* ty=uint8 */, %604, %605, meta[relay.Constant][34] /* ty=Tensor[(66), float64] */, meta[relay.Constant][35] /* ty=Tensor[(40), uint8] */, %606)
}

def @func_6524(%var_6443: Tensor[(12, 12, 3), float32], %var_6461: Tensor[(22, 7), float64], %var_6476: Tensor[(49), float64], %var_6477: Tensor[(637), float64], %var_6478: Tensor[(20, 2), float64], %var_6479: Tensor[(2, 72), float64]) -> (Tensor[(12, 12, 3), bool], Tensor[(12, 12, 3), float32], Tensor[(12, 12, 3), float32], Tensor[(12, 12, 3), float32], Tensor[(49), float64], Tensor[(637), float64], Tensor[(20, 2), float64], Tensor[(2, 72), float64], Tensor[(14, ?, 11), bool], Tensor[(2, 20), uint8], Tensor[(12, 12, 3), float32], Tensor[(14, ?, 11), int64]) {
  %607 = @func_4522() /* ty=Tensor[(12, 12, 3), float32] */;
  %608 = cast(%var_6443, dtype="bool") /* ty=Tensor[(12, 12, 3), bool] */;
  %609 = shape_of(%607, dtype="int32") /* ty=Tensor[(3), int32] */;
  %610 = cast(%607, dtype="bool") /* ty=Tensor[(12, 12, 3), bool] */;
  %611 = dyn.reshape(%608, %609, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %612 = cast(%var_6476, dtype="float64") /* ty=Tensor[(49), float64] */;
  %613 = cast(%var_6477, dtype="float64") /* ty=Tensor[(637), float64] */;
  %614 = cast(%var_6478, dtype="float64") /* ty=Tensor[(20, 2), float64] */;
  %615 = cast(%var_6479, dtype="float64") /* ty=Tensor[(2, 72), float64] */;
  %616 = reshape(%612, newshape=[7, 1, 7]) /* ty=Tensor[(7, 1, 7), float64] */;
  %617 = reshape(%613, newshape=[7, 13, 7]) /* ty=Tensor[(7, 13, 7), float64] */;
  %618 = reshape(%614, newshape=[40]) /* ty=Tensor[(40), float64] */;
  %619 = reshape(%615, newshape=[144, 1]) /* ty=Tensor[(144, 1), float64] */;
  %620 = @func_3896(%616, %617, %618, %619) /* ty=(Tensor[(7, 13, 7), float64], Tensor[(12, 12, 3), float32], Tensor[(12, 12, 3), float32], Tensor[(40), float64], Tensor[(144, 1), float64], Tensor[(15, 8, 5), float64]) */;
  %621 = cast(%var_6461, dtype="float64") /* ty=Tensor[(22, 7), float64] */;
  %622 = reshape(%621, newshape=[14, 1, 11]) /* ty=Tensor[(14, 1, 11), float64] */;
  %623 = @func_4249(%622) /* ty=(Tensor[(14, ?, 11), bool], Tensor[(14, ?, 11), bool]) */;
  %624 = %623.0;
  %625 = cast(%624, dtype="float64") /* ty=Tensor[(14, ?, 11), float64] */;
  %626 = sin(%625) /* ty=Tensor[(14, ?, 11), float64] */;
  %627 = cast(%var_6461, dtype="uint32") /* ty=Tensor[(22, 7), uint32] */;
  %628 = shape_of(%626, dtype="int32") /* ty=Tensor[(3), int32] */;
  %629 = cast(%626, dtype="uint32") /* ty=Tensor[(14, ?, 11), uint32] */;
  %630 = dyn.reshape(%627, %628, newshape=[]) /* ty=Tensor[(?, ?, ?), uint32] */;
  %631 = minimum(%629, %630) /* ty=Tensor[(14, ?, 11), uint32] */;
  %632 = cast(%624, dtype="bool") /* ty=Tensor[(14, ?, 11), bool] */;
  %633 = shape_of(%631, dtype="int32") /* ty=Tensor[(3), int32] */;
  %634 = cast(%631, dtype="bool") /* ty=Tensor[(14, ?, 11), bool] */;
  %635 = dyn.reshape(%632, %633, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %636 = cast(%var_6478, dtype="uint8") /* ty=Tensor[(20, 2), uint8] */;
  %637 = reshape(%636, newshape=[2, 20]) /* ty=Tensor[(2, 20), uint8] */;
  %638 = @func_4312(%637) /* ty=(Tensor[(12, 12, 3), int32], Tensor[(3, 11, 4), float32], uint8, Tensor[(1560), float64], Tensor[(12, 12, 3), float64], Tensor[(3, 11, 4), float32], Tensor[(2, 20), uint8]) */;
  %639 = @func_2864() /* ty=(Tensor[(12, 12, 3), float32],) */;
  %640 = cast(%631, dtype="float64") /* ty=Tensor[(14, ?, 11), float64] */;
  %641 = reshape(%640, newshape=[14, 1, 11]) /* ty=Tensor[(14, 1, 11), float64] */;
  %642 = @func_4249(%641) /* ty=(Tensor[(14, ?, 11), bool], Tensor[(14, ?, 11), bool]) */;
  %643 = %642.1;
  %644 = cast(%624, dtype="int64") /* ty=Tensor[(14, ?, 11), int64] */;
  %645 = shape_of(%643, dtype="int32") /* ty=Tensor[(3), int32] */;
  %646 = cast(%643, dtype="int64") /* ty=Tensor[(14, ?, 11), int64] */;
  %647 = dyn.reshape(%644, %645, newshape=[]) /* ty=Tensor[(?, ?, ?), int64] */;
  %648 = less_equal(%610, %611) /* ty=Tensor[(12, 12, 3), bool] */;
  %649 = @func_3372() /* ty=Tensor[(12, 12, 3), float32] */;
  %650 = @func_3372() /* ty=Tensor[(12, 12, 3), float32] */;
  %651 = %620.2;
  %652 = greater_equal(%634, %635) /* ty=Tensor[(14, ?, 11), bool] */;
  %653 = %638.6;
  %654 = %639.0;
  %655 = add(%646, %647) /* ty=Tensor[(14, ?, 11), int64] */;
  (%648, %649, %650, %651, %var_6476, %var_6477, %var_6478, %var_6479, %652, %653, %654, %655)
}

def @func_9915(%var_9912: Tensor[(14, 9, 10), float32]) -> Tensor[(14, 9, 10), float32] {
  %656 = cast(%var_9912, dtype="float32") /* ty=Tensor[(14, 9, 10), float32] */;
  atan(%656) /* ty=Tensor[(14, 9, 10), float32] */
}

def @func_8586() -> (Tensor[(12, 12, 3), float32],) {
  %657 = @func_3372() /* ty=Tensor[(12, 12, 3), float32] */;
  (%657,)
}

def @func_4482() -> (Tensor[(12, 12, 3), float32], Tensor[(1560), float64], Tensor[(12, 130), float64]) {
  %658 = @func_2864() /* ty=(Tensor[(12, 12, 3), float32],) */;
  %659 = @func_2829() /* ty=(Tensor[(12, 12, 3), float32], Tensor[(10, 12, 13), float64], Tensor[(12, 130), float64]) */;
  %660 = %658.0;
  %661 = @func_3618() /* ty=Tensor[(1560), float64] */;
  %662 = %659.2;
  (%660, %661, %662)
}

def @func_3372() -> Tensor[(12, 12, 3), float32] {
  %663 = @func_2864() /* ty=(Tensor[(12, 12, 3), float32],) */;
  %663.0
}

def @func_5188() -> Tensor[(12, 12, 3), float32] {
  @func_4522() /* ty=Tensor[(12, 12, 3), float32] */
}

def @func_9377() -> (Tensor[(40), uint8], Tensor[(12, 12, 3), float32], Tensor[(11, 6), float64], uint8, Tensor[(12, 12, 3), float32], Tensor[(12, 12, 3), float32]) {
  %664 = @func_8415() /* ty=(Tensor[(40), uint8],) */;
  %665 = @func_3933() /* ty=(Tensor[(12, 12, 3), float32],) */;
  %666 = %665.0;
  %667 = cast(%666, dtype="float32") /* ty=Tensor[(12, 12, 3), float32] */;
  %668 = cast(meta[relay.Constant][36] /* ty=uint8 */, dtype="uint8") /* ty=uint8 */;
  %669 = reshape(%668, newshape=[]) /* ty=uint8 */;
  %670 = @func_8883(%669) /* ty=(Tensor[(12, 12, 3), float32], Tensor[(?, 8, 5), int32], Tensor[(11, 6), float64], uint8, Tensor[(2, 20), uint8]) */;
  %671 = @func_6936() /* ty=(Tensor[(12, 12, 3), float32], Tensor[(13, 15, 2), int32], Tensor[(390), int32]) */;
  %672 = %664.0;
  %673 = sinh(%667) /* ty=Tensor[(12, 12, 3), float32] */;
  %674 = %670.2;
  %675 = %671.0;
  %676 = @func_4522() /* ty=Tensor[(12, 12, 3), float32] */;
  (%672, %673, %674, meta[relay.Constant][36] /* ty=uint8 */, %675, %676)
}

def @func_11896() -> (Tensor[(12, 12, 3), int16], Tensor[(40), uint8], Tensor[(12, 12, 3), float32]) {
  %677 = @func_9949() /* ty=(Tensor[(12, 12, 3), int16],) */;
  %678 = @func_11551() /* ty=(Tensor[(12, 12, 3), float32],) */;
  %679 = %677.0;
  %680 = @func_9055() /* ty=Tensor[(40), uint8] */;
  %681 = %678.0;
  (%679, %680, %681)
}

def @func_9724(%var_9718: Tensor[(432), float32]) -> (Tensor[(1560), float64], Tensor[(12, 12, 3), uint8], Tensor[(432), float32]) {
  %682 = @func_3254() /* ty=(Tensor[(12, 130), float64], Tensor[(1560), float64], Tensor[(33, 7), float64], uint8, Tensor[(7, 3, 11), float32], uint8, Tensor[(66), float64], Tensor[(40), uint8], Tensor[(2, 20), float64]) */;
  %683 = cast(%var_9718, dtype="float32") /* ty=Tensor[(432), float32] */;
  %684 = reshape(%683, newshape=[12, 12, 3]) /* ty=Tensor[(12, 12, 3), float32] */;
  %685 = @func_6311(%684) /* ty=(Tensor[(12, 12, 3), uint8], Tensor[(12, 12, 3), float64], Tensor[(2, 20), uint8], Tensor[(12, 130), float32], Tensor[(40), uint8]) */;
  %686 = %682.1;
  %687 = %685.0;
  (%686, %687, %var_9718)
}

def @func_5057(%var_5041: Tensor[(14, 15, 12), int32]) -> (Tensor[(14, 15, 12), int32], Tensor[(12, 12, 3), float32]) {
  %688 = cast(%var_5041, dtype="int32") /* ty=Tensor[(14, 15, 12), int32] */;
  %689 = shape_of(meta[relay.Constant][37] /* ty=Tensor[(14, 15, 12), int32] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %690 = cast(meta[relay.Constant][37] /* ty=Tensor[(14, 15, 12), int32] */, dtype="int32") /* ty=Tensor[(14, 15, 12), int32] */;
  %691 = dyn.reshape(%688, %689, newshape=[]) /* ty=Tensor[(?, ?, ?), int32] */;
  %692 = multiply(%690, %691) /* ty=Tensor[(14, 15, 12), int32] */;
  %693 = @func_3372() /* ty=Tensor[(12, 12, 3), float32] */;
  (%692, %693)
}

def @func_11503() -> (Tensor[(12, 12, 3), float32],) {
  %694 = @func_8586() /* ty=(Tensor[(12, 12, 3), float32],) */;
  %695 = %694.0;
  (%695,)
}

def @func_2171(%var_2161: Tensor[(10, 12, 13), float64]) -> Tensor[(10, 12, 13), float64] {
  %696 = cast(%var_2161, dtype="float64") /* ty=Tensor[(10, 12, 13), float64] */;
  asin(%696) /* ty=Tensor[(10, 12, 13), float64] */
}

def @func_12256(%var_12170: Tensor[(132), float32], %var_12171: Tensor[(40), float64]) -> (Tensor[(12, 12, 3), float32], Tensor[(40), float64], Tensor[(12, 12, 3), int32], Tensor[(10, 12, 13), float64], Tensor[(40, 132), float32], Tensor[(40, 132), bool]) {
  %697 = @func_7509() /* ty=(Tensor[(12, 12, 3), float32],) */;
  %698 = cast(%var_12171, dtype="uint8") /* ty=Tensor[(40), uint8] */;
  %699 = reshape(%698, newshape=[2, 20]) /* ty=Tensor[(2, 20), uint8] */;
  %700 = @func_4312(%699) /* ty=(Tensor[(12, 12, 3), int32], Tensor[(3, 11, 4), float32], uint8, Tensor[(1560), float64], Tensor[(12, 12, 3), float64], Tensor[(3, 11, 4), float32], Tensor[(2, 20), uint8]) */;
  %701 = @func_12128() /* ty=(Tensor[(10, 12, 13), float64], Tensor[(1560), float32]) */;
  %702 = cast(%var_12170, dtype="float32") /* ty=Tensor[(132), float32] */;
  %703 = cast(%var_12171, dtype="float64") /* ty=Tensor[(40), float64] */;
  %704 = reshape(%702, newshape=[132]) /* ty=Tensor[(132), float32] */;
  %705 = reshape(%703, newshape=[40, 1]) /* ty=Tensor[(40, 1), float64] */;
  %706 = @func_4768(%704, %705) /* ty=(Tensor[(1560), float64], Tensor[(3, 11, 4), float32], Tensor[(132), float32], Tensor[(40), float64], Tensor[(40, 1), float64]) */;
  %707 = %706.4;
  %708 = cast(%var_12170, dtype="float32") /* ty=Tensor[(132), float32] */;
  %709 = cast(%707, dtype="float32") /* ty=Tensor[(40, 1), float32] */;
  %710 = floor_mod(%708, %709) /* ty=Tensor[(40, 132), float32] */;
  %711 = cast(%710, dtype="float32") /* ty=Tensor[(40, 132), float32] */;
  %712 = sqrt(%711) /* ty=Tensor[(40, 132), float32] */;
  %713 = cast(%710, dtype="float32") /* ty=Tensor[(40, 132), float32] */;
  %714 = shape_of(%712, dtype="int32") /* ty=Tensor[(2), int32] */;
  %715 = cast(%712, dtype="float32") /* ty=Tensor[(40, 132), float32] */;
  %716 = dyn.reshape(%713, %714, newshape=[]) /* ty=Tensor[(?, ?), float32] */;
  %717 = cast(%712, dtype="float32") /* ty=Tensor[(40, 132), float32] */;
  %718 = asin(%717) /* ty=Tensor[(40, 132), float32] */;
  %719 = cast(%712, dtype="bool") /* ty=Tensor[(40, 132), bool] */;
  %720 = shape_of(%718, dtype="int32") /* ty=Tensor[(2), int32] */;
  %721 = cast(%718, dtype="bool") /* ty=Tensor[(40, 132), bool] */;
  %722 = dyn.reshape(%719, %720, newshape=[]) /* ty=Tensor[(?, ?), bool] */;
  %723 = %697.0;
  %724 = %700.0;
  %725 = %701.0;
  %726 = power(%715, %716) /* ty=Tensor[(40, 132), float32] */;
  %727 = equal(%721, %722) /* ty=Tensor[(40, 132), bool] */;
  (%723, %var_12171, %724, %725, %726, %727)
}

def @func_5771() -> (Tensor[(12, 12, 3), float32], Tensor[(1560), float32], Tensor[(12, 130), float64]) {
  %728 = @func_4637() /* ty=(Tensor[(12, 130), float64],) */;
  %729 = @func_4522() /* ty=Tensor[(12, 12, 3), float32] */;
  %730 = @func_5679() /* ty=Tensor[(1560), float32] */;
  %731 = %728.0;
  (%729, %730, %731)
}

def @func_4401(%var_4364: Tensor[(11, 9, 5), uint64], %var_4365: Tensor[(11, 9, 5), uint64]) -> (Tensor[(11, 9, 5), uint64], Tensor[(11, 9, 5), float64], Tensor[(14, ?, 11), bool], Tensor[(154, 1), float64]) {
  %732 = cast(%var_4365, dtype="uint64") /* ty=Tensor[(11, 9, 5), uint64] */;
  %733 = shape_of(%var_4364, dtype="int32") /* ty=Tensor[(3), int32] */;
  %734 = cast(%var_4364, dtype="uint64") /* ty=Tensor[(11, 9, 5), uint64] */;
  %735 = dyn.reshape(%732, %733, newshape=[]) /* ty=Tensor[(?, ?, ?), uint64] */;
  %736 = cast(%var_4365, dtype="float64") /* ty=Tensor[(11, 9, 5), float64] */;
  %737 = cast(meta[relay.Constant][38] /* ty=Tensor[(154, 1), float64] */, dtype="float64") /* ty=Tensor[(154, 1), float64] */;
  %738 = reshape(%737, newshape=[14, 1, 11]) /* ty=Tensor[(14, 1, 11), float64] */;
  %739 = @func_4249(%738) /* ty=(Tensor[(14, ?, 11), bool], Tensor[(14, ?, 11), bool]) */;
  %740 = maximum(%734, %735) /* ty=Tensor[(11, 9, 5), uint64] */;
  %741 = sinh(%736) /* ty=Tensor[(11, 9, 5), float64] */;
  %742 = %739.1;
  (%740, %741, %742, meta[relay.Constant][38] /* ty=Tensor[(154, 1), float64] */)
}

def @func_9193() -> (Tensor[(2, 20), float64],) {
  %743 = @func_5083() /* ty=(Tensor[(2, 20), float64],) */;
  %744 = %743.0;
  (%744,)
}

def @func_11955() -> (Tensor[(5, 13, 5), float64],) {
  %745 = cast(meta[relay.Constant][39] /* ty=Tensor[(5, 13, 5), float64] */, dtype="float64") /* ty=Tensor[(5, 13, 5), float64] */;
  %746 = cosh(%745) /* ty=Tensor[(5, 13, 5), float64] */;
  (%746,)
}

def @func_11551() -> (Tensor[(12, 12, 3), float32],) {
  %747 = @func_8586() /* ty=(Tensor[(12, 12, 3), float32],) */;
  %748 = %747.0;
  (%748,)
}

def @func_11815(%var_11778: Tensor[(945), uint32]) -> (Tensor[(1560), float64], Tensor[(1560), float64], Tensor[(40), uint8], Tensor[(15, 8, 5), bool], Tensor[(24, 6), float64], Tensor[(140, 16), int32], Tensor[(945), uint32], Tensor[(14, ?, 11), bool], Tensor[(154), float64], Tensor[(12, 130), bool], Tensor[(12, 12, 3), float32]) {
  %749 = @func_4739() /* ty=(Tensor[(1560), float64], Tensor[(12, 12, 3), float32]) */;
  %750 = @func_9067() /* ty=(Tensor[(40), uint8],) */;
  %751 = %750.0;
  %752 = cast(%751, dtype="float64") /* ty=Tensor[(40), float64] */;
  %753 = cast(meta[relay.Constant][40] /* ty=Tensor[(24, 6), float64] */, dtype="float64") /* ty=Tensor[(24, 6), float64] */;
  %754 = reshape(%752, newshape=[1, 8, 5]) /* ty=Tensor[(1, 8, 5), float64] */;
  %755 = reshape(%753, newshape=[144]) /* ty=Tensor[(144), float64] */;
  %756 = @func_956(%754, %755) /* ty=(Tensor[(15, 8, 5), bool], Tensor[(9, 1, 16), float64], Tensor[(144), float64]) */;
  %757 = cast(%var_11778, dtype="uint32") /* ty=Tensor[(945), uint32] */;
  %758 = reshape(%757, newshape=[1, 945]) /* ty=Tensor[(1, 945), uint32] */;
  %759 = @func_11383(%758) /* ty=(Tensor[(12, 12, 3), float32], Tensor[(140, 16), int32], Tensor[(1, 945), int32]) */;
  %760 = cast(meta[relay.Constant][41] /* ty=Tensor[(154), float64] */, dtype="float64") /* ty=Tensor[(154), float64] */;
  %761 = reshape(%760, newshape=[14, 1, 11]) /* ty=Tensor[(14, 1, 11), float64] */;
  %762 = @func_4249(%761) /* ty=(Tensor[(14, ?, 11), bool], Tensor[(14, ?, 11), bool]) */;
  %763 = %749.0;
  %764 = cast(%763, dtype="float64") /* ty=Tensor[(1560), float64] */;
  %765 = reshape(%764, newshape=[12, 130]) /* ty=Tensor[(12, 130), float64] */;
  %766 = @func_10786(%765) /* ty=(Tensor[(12, 130), bool],) */;
  %767 = @func_2829() /* ty=(Tensor[(12, 12, 3), float32], Tensor[(10, 12, 13), float64], Tensor[(12, 130), float64]) */;
  %768 = @func_4791() /* ty=Tensor[(1560), float64] */;
  %769 = %756.0;
  %770 = %759.1;
  %771 = %762.1;
  %772 = %766.0;
  %773 = %767.0;
  (%763, %768, %751, %769, meta[relay.Constant][40] /* ty=Tensor[(24, 6), float64] */, %770, %var_11778, %771, meta[relay.Constant][41] /* ty=Tensor[(154), float64] */, %772, %773)
}

def @func_9537() -> Tensor[(12, 12, 3), float32] {
  %774 = @func_8180() /* ty=(Tensor[(12, 12, 3), float32], Tensor[(12, 12, 3), float32], Tensor[(1560), float64], Tensor[(2, 20), float64]) */;
  %774.0
}

def @func_4249(%var_4214: Tensor[(14, 1, 11), float64]) -> (Tensor[(14, ?, 11), bool], Tensor[(14, ?, 11), bool]) {
  %775 = cast(%var_4214, dtype="float64") /* ty=Tensor[(14, 1, 11), float64] */;
  %776 = tan(%775) /* ty=Tensor[(14, 1, 11), float64] */;
  %777 = cast(%var_4214, dtype="bool") /* ty=Tensor[(14, 1, 11), bool] */;
  %778 = shape_of(%776, dtype="int32") /* ty=Tensor[(3), int32] */;
  %779 = cast(%776, dtype="bool") /* ty=Tensor[(14, 1, 11), bool] */;
  %780 = dyn.reshape(%777, %778, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %781 = cast(%776, dtype="bool") /* ty=Tensor[(14, 1, 11), bool] */;
  %782 = shape_of(%var_4214, dtype="int32") /* ty=Tensor[(3), int32] */;
  %783 = cast(%var_4214, dtype="bool") /* ty=Tensor[(14, 1, 11), bool] */;
  %784 = dyn.reshape(%781, %782, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %785 = logical_and(%779, %780) /* ty=Tensor[(14, ?, 11), bool] */;
  %786 = less_equal(%783, %784) /* ty=Tensor[(14, ?, 11), bool] */;
  (%785, %786)
}

def @func_7335() -> Tensor[(12, 12, 3), float32] {
  %787 = @func_6143() /* ty=(Tensor[(12, 12, 3), float64], Tensor[(14, ?, 11), bool], Tensor[(1, 154), float64], Tensor[(1560), float64], Tensor[(12, 12, 3), int16], Tensor[(12, 12, 3), float32], Tensor[(12, 12, 3), float32]) */;
  %787.6
}

def @func_788(%var_765: uint8) -> (Tensor[(3, 11, 4), float32], uint8, Tensor[(40, 1), uint8], Tensor[(1, 14, 9), float64], Tensor[(?, 14, 9), float32], Tensor[(3, 11, 4), float32]) {
  %788 = cast(%var_765, dtype="uint8") /* ty=uint8 */;
  %789 = cast(meta[relay.Constant][42] /* ty=Tensor[(40, 1), uint8] */, dtype="uint8") /* ty=Tensor[(40, 1), uint8] */;
  %790 = reshape(%788, newshape=[]) /* ty=uint8 */;
  %791 = reshape(%789, newshape=[1, 8, 5]) /* ty=Tensor[(1, 8, 5), uint8] */;
  %792 = @func_619(%790, %791) /* ty=(Tensor[(3, 11, 4), float32], Tensor[(132), float32], Tensor[(?, 8, 5), int32], Tensor[(3, 11, 4), float32], Tensor[(3, 11, 4), float32]) */;
  %793 = cast(meta[relay.Constant][43] /* ty=Tensor[(1, 14, 9), float32] */, dtype="float32") /* ty=Tensor[(1, 14, 9), float32] */;
  %794 = tan(%793) /* ty=Tensor[(1, 14, 9), float32] */;
  %795 = cast(%794, dtype="float32") /* ty=Tensor[(1, 14, 9), float32] */;
  %796 = log(%795) /* ty=Tensor[(1, 14, 9), float32] */;
  %797 = cast(%796, dtype="float64") /* ty=Tensor[(1, 14, 9), float64] */;
  %798 = cast(%794, dtype="float32") /* ty=Tensor[(1, 14, 9), float32] */;
  %799 = shape_of(%796, dtype="int32") /* ty=Tensor[(3), int32] */;
  %800 = cast(%796, dtype="float32") /* ty=Tensor[(1, 14, 9), float32] */;
  %801 = dyn.reshape(%798, %799, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %802 = %792.0;
  %803 = cast(%802, dtype="float32") /* ty=Tensor[(3, 11, 4), float32] */;
  %804 = reshape(%803, newshape=[3, 11, 4]) /* ty=Tensor[(3, 11, 4), float32] */;
  %805 = cos(%797) /* ty=Tensor[(1, 14, 9), float64] */;
  %806 = divide(%800, %801) /* ty=Tensor[(?, 14, 9), float32] */;
  %807 = @func_97(%804) /* ty=Tensor[(3, 11, 4), float32] */;
  (%802, %var_765, meta[relay.Constant][42] /* ty=Tensor[(40, 1), uint8] */, %805, %806, %807)
}

def @func_10356() -> (Tensor[(12, 12, 3), float32], Tensor[(2, 20), float64], Tensor[(12, 12, 3), float32]) {
  %808 = @func_9193() /* ty=(Tensor[(2, 20), float64],) */;
  %809 = @func_5771() /* ty=(Tensor[(12, 12, 3), float32], Tensor[(1560), float32], Tensor[(12, 130), float64]) */;
  %810 = @func_4599() /* ty=Tensor[(12, 12, 3), float32] */;
  %811 = %808.0;
  %812 = %809.0;
  (%810, %811, %812)
}

def @func_13087() -> (Tensor[(40), uint8],) {
  %813 = @func_10041() /* ty=Tensor[(40), uint8] */;
  (%813,)
}

def @func_6083() -> (Tensor[(12, 130), float64], Tensor[(40), uint8]) {
  %814 = @func_4637() /* ty=(Tensor[(12, 130), float64],) */;
  %815 = %814.0;
  %816 = @func_5306() /* ty=Tensor[(40), uint8] */;
  (%815, %816)
}

def @func_11608() -> (Tensor[(40), uint8], uint8, Tensor[(9, 1, 16), float64], Tensor[(144), float64]) {
  %817 = @func_4819() /* ty=(Tensor[(40), uint8],) */;
  %818 = @func_9377() /* ty=(Tensor[(40), uint8], Tensor[(12, 12, 3), float32], Tensor[(11, 6), float64], uint8, Tensor[(12, 12, 3), float32], Tensor[(12, 12, 3), float32]) */;
  %819 = cast(meta[relay.Constant][44] /* ty=Tensor[(144), float64] */, dtype="float64") /* ty=Tensor[(144), float64] */;
  %820 = reshape(%819, newshape=[9, 1, 16]) /* ty=Tensor[(9, 1, 16), float64] */;
  %821 = @func_672(%820) /* ty=(Tensor[(9, 1, 16), float64],) */;
  %822 = %817.0;
  %823 = %818.3;
  %824 = %821.0;
  (%822, %823, %824, meta[relay.Constant][44] /* ty=Tensor[(144), float64] */)
}

def @func_6311(%var_6263: Tensor[(12, 12, 3), float32]) -> (Tensor[(12, 12, 3), uint8], Tensor[(12, 12, 3), float64], Tensor[(2, 20), uint8], Tensor[(12, 130), float32], Tensor[(40), uint8]) {
  %825 = @func_5979() /* ty=Tensor[(12, 12, 3), float32] */;
  %826 = cast(%var_6263, dtype="uint8") /* ty=Tensor[(12, 12, 3), uint8] */;
  %827 = shape_of(%825, dtype="int32") /* ty=Tensor[(3), int32] */;
  %828 = cast(%825, dtype="uint8") /* ty=Tensor[(12, 12, 3), uint8] */;
  %829 = dyn.reshape(%826, %827, newshape=[]) /* ty=Tensor[(?, ?, ?), uint8] */;
  %830 = cast(%var_6263, dtype="float64") /* ty=Tensor[(12, 12, 3), float64] */;
  %831 = cast(meta[relay.Constant][45] /* ty=Tensor[(12, 130), float32] */, dtype="float32") /* ty=Tensor[(12, 130), float32] */;
  %832 = cast(meta[relay.Constant][46] /* ty=Tensor[(40), uint8] */, dtype="uint8") /* ty=Tensor[(40), uint8] */;
  %833 = reshape(%831, newshape=[12, 130]) /* ty=Tensor[(12, 130), float32] */;
  %834 = reshape(%832, newshape=[2, 20]) /* ty=Tensor[(2, 20), uint8] */;
  %835 = @func_3844(%833, %834) /* ty=(Tensor[(12, 130), int32], uint8, Tensor[(66), float64], uint8, Tensor[(2, 20), uint8]) */;
  %836 = bitwise_xor(%828, %829) /* ty=Tensor[(12, 12, 3), uint8] */;
  %837 = tan(%830) /* ty=Tensor[(12, 12, 3), float64] */;
  %838 = %835.4;
  (%836, %837, %838, meta[relay.Constant][45] /* ty=Tensor[(12, 130), float32] */, meta[relay.Constant][46] /* ty=Tensor[(40), uint8] */)
}

def @func_12491() -> (Tensor[(1560), float64], Tensor[(40), float64], Tensor[(12, 12, 3), float32]) {
  %839 = @func_4965() /* ty=(Tensor[(12, 12, 3), float32], Tensor[(10, 12, 13), float64], Tensor[(1560, 1), float64], Tensor[(1560), float64], Tensor[(40, 1), float64], Tensor[(40), float64], Tensor[(144), float64]) */;
  %840 = @func_2864() /* ty=(Tensor[(12, 12, 3), float32],) */;
  %841 = @func_4791() /* ty=Tensor[(1560), float64] */;
  %842 = %839.5;
  %843 = %840.0;
  (%841, %842, %843)
}

def @func_2829() -> (Tensor[(12, 12, 3), float32], Tensor[(10, 12, 13), float64], Tensor[(12, 130), float64]) {
  %844 = cast(meta[relay.Constant][47] /* ty=Tensor[(12, 12, 3), float32] */, dtype="float32") /* ty=Tensor[(12, 12, 3), float32] */;
  %845 = cast(meta[relay.Constant][48] /* ty=Tensor[(12, 130), float64] */, dtype="float64") /* ty=Tensor[(12, 130), float64] */;
  %846 = reshape(%845, newshape=[10, 12, 13]) /* ty=Tensor[(10, 12, 13), float64] */;
  %847 = acos(%844) /* ty=Tensor[(12, 12, 3), float32] */;
  %848 = @func_2171(%846) /* ty=Tensor[(10, 12, 13), float64] */;
  (%847, %848, meta[relay.Constant][48] /* ty=Tensor[(12, 130), float64] */)
}

def @func_10673() -> (Tensor[(1560), float64],) {
  %849 = @func_4791() /* ty=Tensor[(1560), float64] */;
  (%849,)
}

def @func_6977() -> (Tensor[(1560), float64], Tensor[(40), float64], Tensor[(2, 20), uint8]) {
  %850 = @func_4923() /* ty=(Tensor[(1560), float64],) */;
  %851 = @func_4965() /* ty=(Tensor[(12, 12, 3), float32], Tensor[(10, 12, 13), float64], Tensor[(1560, 1), float64], Tensor[(1560), float64], Tensor[(40, 1), float64], Tensor[(40), float64], Tensor[(144), float64]) */;
  %852 = %850.0;
  %853 = cast(%852, dtype="float32") /* ty=Tensor[(1560), float32] */;
  %854 = %851.5;
  %855 = cast(%854, dtype="uint8") /* ty=Tensor[(40), uint8] */;
  %856 = reshape(%853, newshape=[12, 130]) /* ty=Tensor[(12, 130), float32] */;
  %857 = reshape(%855, newshape=[2, 20]) /* ty=Tensor[(2, 20), uint8] */;
  %858 = @func_3844(%856, %857) /* ty=(Tensor[(12, 130), int32], uint8, Tensor[(66), float64], uint8, Tensor[(2, 20), uint8]) */;
  %859 = %858.4;
  (%852, %854, %859)
}

def @func_5387() -> (Tensor[(40), uint8], Tensor[(40), uint8]) {
  %860 = @func_4904() /* ty=Tensor[(40), uint8] */;
  %861 = @func_5306() /* ty=Tensor[(40), uint8] */;
  (%860, %861)
}

def @func_4768(%var_4751: Tensor[(132), float32], %var_4757: Tensor[(40, 1), float64]) -> (Tensor[(1560), float64], Tensor[(3, 11, 4), float32], Tensor[(132), float32], Tensor[(40), float64], Tensor[(40, 1), float64]) {
  %862 = @func_4482() /* ty=(Tensor[(12, 12, 3), float32], Tensor[(1560), float64], Tensor[(12, 130), float64]) */;
  %863 = cast(%var_4751, dtype="float32") /* ty=Tensor[(132), float32] */;
  %864 = reshape(%863, newshape=[3, 11, 4]) /* ty=Tensor[(3, 11, 4), float32] */;
  %865 = @func_97(%864) /* ty=Tensor[(3, 11, 4), float32] */;
  %866 = cast(%865, dtype="float32") /* ty=Tensor[(3, 11, 4), float32] */;
  %867 = cast(%var_4757, dtype="float64") /* ty=Tensor[(40, 1), float64] */;
  %868 = reshape(%866, newshape=[132]) /* ty=Tensor[(132), float32] */;
  %869 = reshape(%867, newshape=[40]) /* ty=Tensor[(40), float64] */;
  %870 = @func_3352(%868, %869) /* ty=(Tensor[(12, 12, 3), float32], uint8, Tensor[(1560), float64], Tensor[(132), float32], Tensor[(12, 12, 3), float32], Tensor[(9, 1, 16), float64], Tensor[(40), float64]) */;
  %871 = %862.1;
  %872 = %870.6;
  (%871, %865, %var_4751, %872, %var_4757)
}

def @func_5679() -> Tensor[(1560), float32] {
  %873 = @func_3618() /* ty=Tensor[(1560), float64] */;
  %874 = cast(%873, dtype="float32") /* ty=Tensor[(1560), float32] */;
  atan(%874) /* ty=Tensor[(1560), float32] */
}

def @func_8669() -> (Tensor[(1560), float64], Tensor[(12, 12, 3), float32], Tensor[(40), uint8]) {
  %875 = @func_3933() /* ty=(Tensor[(12, 12, 3), float32],) */;
  %876 = @func_7949() /* ty=(Tensor[(40), uint8],) */;
  %877 = @func_3618() /* ty=Tensor[(1560), float64] */;
  %878 = %875.0;
  %879 = %876.0;
  (%877, %878, %879)
}

def @func_5342() -> (Tensor[(12, 12, 3), float32],) {
  %880 = @func_2864() /* ty=(Tensor[(12, 12, 3), float32],) */;
  %881 = %880.0;
  (%881,)
}

def @func_11252() -> (Tensor[(1560), float64], Tensor[(4, 10, 7), bool], Tensor[(280), uint16], Tensor[(2, 20), float64]) {
  %882 = @func_4923() /* ty=(Tensor[(1560), float64],) */;
  %883 = %882.0;
  %884 = cast(%883, dtype="float64") /* ty=Tensor[(1560), float64] */;
  %885 = cast(meta[relay.Constant][49] /* ty=Tensor[(280), uint16] */, dtype="uint16") /* ty=Tensor[(280), uint16] */;
  %886 = cast(meta[relay.Constant][49] /* ty=Tensor[(280), uint16] */, dtype="uint16") /* ty=Tensor[(280), uint16] */;
  %887 = reshape(%885, newshape=[4, 10, 7]) /* ty=Tensor[(4, 10, 7), uint16] */;
  %888 = reshape(%886, newshape=[4, 10, 7]) /* ty=Tensor[(4, 10, 7), uint16] */;
  %889 = @func_5825(%887, %888) /* ty=(Tensor[(4, 10, 7), uint16], Tensor[(4, 10, 7), bool]) */;
  %890 = @func_9193() /* ty=(Tensor[(2, 20), float64],) */;
  %891 = erf(%884) /* ty=Tensor[(1560), float64] */;
  %892 = %889.1;
  %893 = %890.0;
  (%891, %892, meta[relay.Constant][49] /* ty=Tensor[(280), uint16] */, %893)
}

def @func_7897() -> (Tensor[(12, 12, 3), float32], Tensor[(140, 16), int32], Tensor[(140, 16), float64]) {
  %894 = @func_4739() /* ty=(Tensor[(1560), float64], Tensor[(12, 12, 3), float32]) */;
  %895 = cast(meta[relay.Constant][50] /* ty=Tensor[(140, 16), uint64] */, dtype="uint64") /* ty=Tensor[(140, 16), uint64] */;
  %896 = reshape(%895, newshape=[16, 14, 10]) /* ty=Tensor[(16, 14, 10), uint64] */;
  %897 = @func_5259(%896) /* ty=Tensor[(16, 14, 10), uint64] */;
  %898 = cast(%897, dtype="float64") /* ty=Tensor[(16, 14, 10), float64] */;
  %899 = shape_of(meta[relay.Constant][50] /* ty=Tensor[(140, 16), uint64] */, dtype="int32") /* ty=Tensor[(2), int32] */;
  %900 = cast(meta[relay.Constant][50] /* ty=Tensor[(140, 16), uint64] */, dtype="float64") /* ty=Tensor[(140, 16), float64] */;
  %901 = dyn.reshape(%898, %899, newshape=[]) /* ty=Tensor[(?, ?), float64] */;
  %902 = mod(%900, %901) /* ty=Tensor[(140, 16), float64] */;
  %903 = cast(%897, dtype="int32") /* ty=Tensor[(16, 14, 10), int32] */;
  %904 = shape_of(%902, dtype="int32") /* ty=Tensor[(2), int32] */;
  %905 = cast(%902, dtype="int32") /* ty=Tensor[(140, 16), int32] */;
  %906 = dyn.reshape(%903, %904, newshape=[]) /* ty=Tensor[(?, ?), int32] */;
  %907 = cast(%902, dtype="float64") /* ty=Tensor[(140, 16), float64] */;
  %908 = %894.1;
  %909 = add(%905, %906) /* ty=Tensor[(140, 16), int32] */;
  %910 = acos(%907) /* ty=Tensor[(140, 16), float64] */;
  (%908, %909, %910)
}

def @func_6390() -> (Tensor[(12, 12, 3), float32], Tensor[(1560), float64]) {
  %911 = @func_5342() /* ty=(Tensor[(12, 12, 3), float32],) */;
  %912 = @func_4739() /* ty=(Tensor[(1560), float64], Tensor[(12, 12, 3), float32]) */;
  %913 = %911.0;
  %914 = %912.0;
  (%913, %914)
}

def @func_10649(%var_10633: uint8, %var_10638: Tensor[(945), uint32]) -> (Tensor[(14, ?, 11), bool], Tensor[(?, 8, 5), int32], uint8, Tensor[(15, 7, 9), bool], Tensor[(945), uint32], Tensor[(140, 16), int32], Tensor[(12, 12, 3), float32]) {
  %915 = @func_6143() /* ty=(Tensor[(12, 12, 3), float64], Tensor[(14, ?, 11), bool], Tensor[(1, 154), float64], Tensor[(1560), float64], Tensor[(12, 12, 3), int16], Tensor[(12, 12, 3), float32], Tensor[(12, 12, 3), float32]) */;
  %916 = cast(%var_10633, dtype="uint8") /* ty=uint8 */;
  %917 = reshape(%916, newshape=[]) /* ty=uint8 */;
  %918 = @func_8883(%917) /* ty=(Tensor[(12, 12, 3), float32], Tensor[(?, 8, 5), int32], Tensor[(11, 6), float64], uint8, Tensor[(2, 20), uint8]) */;
  %919 = cast(%var_10638, dtype="uint32") /* ty=Tensor[(945), uint32] */;
  %920 = reshape(%919, newshape=[15, 7, 9]) /* ty=Tensor[(15, 7, 9), uint32] */;
  %921 = @func_7897() /* ty=(Tensor[(12, 12, 3), float32], Tensor[(140, 16), int32], Tensor[(140, 16), float64]) */;
  %922 = @func_4146() /* ty=(Tensor[(12, 12, 3), float32], Tensor[(12, 12, 3), float32], Tensor[(12, 12, 3), float32]) */;
  %923 = %915.1;
  %924 = %918.1;
  %925 = @func_9270(%920) /* ty=Tensor[(15, 7, 9), bool] */;
  %926 = %921.1;
  %927 = %922.2;
  (%923, %924, %var_10633, %925, %var_10638, %926, %927)
}

def @func_3844(%var_3813: Tensor[(12, 130), float32], %var_3823: Tensor[(2, 20), uint8]) -> (Tensor[(12, 130), int32], uint8, Tensor[(66), float64], uint8, Tensor[(2, 20), uint8]) {
  %928 = @func_2829() /* ty=(Tensor[(12, 12, 3), float32], Tensor[(10, 12, 13), float64], Tensor[(12, 130), float64]) */;
  %929 = %928.2;
  %930 = cast(%929, dtype="float32") /* ty=Tensor[(12, 130), float32] */;
  %931 = rsqrt(%930) /* ty=Tensor[(12, 130), float32] */;
  %932 = cast(%var_3813, dtype="int32") /* ty=Tensor[(12, 130), int32] */;
  %933 = shape_of(%931, dtype="int32") /* ty=Tensor[(2), int32] */;
  %934 = cast(%931, dtype="int32") /* ty=Tensor[(12, 130), int32] */;
  %935 = dyn.reshape(%932, %933, newshape=[]) /* ty=Tensor[(?, ?), int32] */;
  %936 = cast(meta[relay.Constant][51] /* ty=Tensor[(66), float64] */, dtype="float64") /* ty=Tensor[(66), float64] */;
  %937 = cast(meta[relay.Constant][52] /* ty=uint8 */, dtype="uint8") /* ty=uint8 */;
  %938 = cast(%var_3823, dtype="uint8") /* ty=Tensor[(2, 20), uint8] */;
  %939 = reshape(%936, newshape=[2, 3, 11]) /* ty=Tensor[(2, 3, 11), float64] */;
  %940 = reshape(%937, newshape=[]) /* ty=uint8 */;
  %941 = reshape(%938, newshape=[2, 20]) /* ty=Tensor[(2, 20), uint8] */;
  %942 = @func_2472(%939, %940, %941) /* ty=(Tensor[(?, 8, 5), int32], uint8, Tensor[(2, 20), uint8], Tensor[(2, 3, 11), float64]) */;
  %943 = left_shift(%934, %935) /* ty=Tensor[(12, 130), int32] */;
  %944 = %942.1;
  (%943, %944, meta[relay.Constant][51] /* ty=Tensor[(66), float64] */, meta[relay.Constant][52] /* ty=uint8 */, %var_3823)
}

def @func_9435() -> (Tensor[(12, 12, 3), float32], Tensor[(1560), int8], Tensor[(12, 12, 3), float32]) {
  %945 = @func_8634() /* ty=(Tensor[(12, 12, 3), float32],) */;
  %946 = @func_5527() /* ty=(Tensor[(1560), float64], Tensor[(12, 12, 3), float32]) */;
  %947 = %946.0;
  %948 = cast(meta[relay.Constant][53] /* ty=Tensor[(1560), float64] */, dtype="int8") /* ty=Tensor[(1560), int8] */;
  %949 = shape_of(%947, dtype="int32") /* ty=Tensor[(1), int32] */;
  %950 = cast(%947, dtype="int8") /* ty=Tensor[(1560), int8] */;
  %951 = dyn.reshape(%948, %949, newshape=[]) /* ty=Tensor[(?), int8] */;
  %952 = @func_2829() /* ty=(Tensor[(12, 12, 3), float32], Tensor[(10, 12, 13), float64], Tensor[(12, 130), float64]) */;
  %953 = %945.0;
  %954 = right_shift(%950, %951) /* ty=Tensor[(1560), int8] */;
  %955 = %952.0;
  (%953, %954, %955)
}

def @func_12079() -> (Tensor[(12, 12, 3), float32],) {
  %956 = @func_3933() /* ty=(Tensor[(12, 12, 3), float32],) */;
  %957 = %956.0;
  (%957,)
}

def @func_11933() -> (Tensor[(12, 12, 3), float32],) {
  %958 = @func_10575() /* ty=(Tensor[(12, 12, 3), float32],) */;
  %959 = %958.0;
  (%959,)
}

def @func_7509() -> (Tensor[(12, 12, 3), float32],) {
  %960 = @func_2829() /* ty=(Tensor[(12, 12, 3), float32], Tensor[(10, 12, 13), float64], Tensor[(12, 130), float64]) */;
  %961 = %960.0;
  (%961,)
}

def @func_619(%var_592: uint8, %var_593: Tensor[(1, 8, 5), uint8]) -> (Tensor[(3, 11, 4), float32], Tensor[(132), float32], Tensor[(?, 8, 5), int32], Tensor[(3, 11, 4), float32], Tensor[(3, 11, 4), float32]) {
  %962 = cast(meta[relay.Constant][54] /* ty=Tensor[(132), float32] */, dtype="float32") /* ty=Tensor[(132), float32] */;
  %963 = reshape(%962, newshape=[3, 11, 4]) /* ty=Tensor[(3, 11, 4), float32] */;
  %964 = cast(%var_593, dtype="float32") /* ty=Tensor[(1, 8, 5), float32] */;
  %965 = tan(%964) /* ty=Tensor[(1, 8, 5), float32] */;
  %966 = cast(%var_592, dtype="uint8") /* ty=uint8 */;
  %967 = cast(%var_593, dtype="uint8") /* ty=Tensor[(1, 8, 5), uint8] */;
  %968 = subtract(%966, %967) /* ty=Tensor[(1, 8, 5), uint8] */;
  %969 = cast(%968, dtype="int32") /* ty=Tensor[(1, 8, 5), int32] */;
  %970 = shape_of(%965, dtype="int32") /* ty=Tensor[(3), int32] */;
  %971 = cast(%965, dtype="int32") /* ty=Tensor[(1, 8, 5), int32] */;
  %972 = dyn.reshape(%969, %970, newshape=[]) /* ty=Tensor[(?, ?, ?), int32] */;
  %973 = @func_97(%963) /* ty=Tensor[(3, 11, 4), float32] */;
  %974 = cast(%973, dtype="float32") /* ty=Tensor[(3, 11, 4), float32] */;
  %975 = reshape(%974, newshape=[3, 11, 4]) /* ty=Tensor[(3, 11, 4), float32] */;
  %976 = cast(meta[relay.Constant][54] /* ty=Tensor[(132), float32] */, dtype="float32") /* ty=Tensor[(132), float32] */;
  %977 = reshape(%976, newshape=[3, 11, 4]) /* ty=Tensor[(3, 11, 4), float32] */;
  %978 = maximum(%971, %972) /* ty=Tensor[(?, 8, 5), int32] */;
  %979 = @func_97(%975) /* ty=Tensor[(3, 11, 4), float32] */;
  %980 = @func_97(%977) /* ty=Tensor[(3, 11, 4), float32] */;
  (%973, meta[relay.Constant][54] /* ty=Tensor[(132), float32] */, %978, %979, %980)
}

def @func_10494(%var_10483: Tensor[(1560), float64]) -> Tensor[(1560), bool] {
  %981 = @func_5938() /* ty=Tensor[(1560), float64] */;
  %982 = cast(%var_10483, dtype="bool") /* ty=Tensor[(1560), bool] */;
  %983 = shape_of(%981, dtype="int32") /* ty=Tensor[(1), int32] */;
  %984 = cast(%981, dtype="bool") /* ty=Tensor[(1560), bool] */;
  %985 = dyn.reshape(%982, %983, newshape=[]) /* ty=Tensor[(?), bool] */;
  logical_and(%984, %985) /* ty=Tensor[(1560), bool] */
}

def @func_5878() -> Tensor[(12, 12, 3), float32] {
  %986 = @func_3713() /* ty=(Tensor[(12, 12, 3), float32],) */;
  %986.0
}

def @func_10041() -> Tensor[(40), uint8] {
  @func_4904() /* ty=Tensor[(40), uint8] */
}

def @func_5625() -> (Tensor[(40), uint8],) {
  %987 = @func_4904() /* ty=Tensor[(40), uint8] */;
  (%987,)
}

def @func_3145(%var_3104: Tensor[(7, 3, 11), float64], %var_3119: uint8, %var_3122: Tensor[(1560), float64], %var_3133: Tensor[(7, 3, 11), float64]) -> (Tensor[(7, 3, 11), float64], Tensor[(3, 11, 4), float32], uint8, Tensor[(10, 12, 13), float64], Tensor[(1560), float64], Tensor[(7, 3, 11), float64], Tensor[(12, 12, 3), float32]) {
  %988 = cast(%var_3104, dtype="float64") /* ty=Tensor[(7, 3, 11), float64] */;
  %989 = cast(%var_3119, dtype="uint8") /* ty=uint8 */;
  %990 = reshape(%989, newshape=[]) /* ty=uint8 */;
  %991 = @func_788(%990) /* ty=(Tensor[(3, 11, 4), float32], uint8, Tensor[(40, 1), uint8], Tensor[(1, 14, 9), float64], Tensor[(?, 14, 9), float32], Tensor[(3, 11, 4), float32]) */;
  %992 = cast(%var_3122, dtype="float64") /* ty=Tensor[(1560), float64] */;
  %993 = reshape(%992, newshape=[10, 12, 13]) /* ty=Tensor[(10, 12, 13), float64] */;
  %994 = cast(%var_3133, dtype="float64") /* ty=Tensor[(7, 3, 11), float64] */;
  %995 = shape_of(%var_3104, dtype="int32") /* ty=Tensor[(3), int32] */;
  %996 = cast(%var_3104, dtype="float64") /* ty=Tensor[(7, 3, 11), float64] */;
  %997 = dyn.reshape(%994, %995, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %998 = @func_2864() /* ty=(Tensor[(12, 12, 3), float32],) */;
  %999 = sin(%988) /* ty=Tensor[(7, 3, 11), float64] */;
  %1000 = %991.5;
  %1001 = @func_2171(%993) /* ty=Tensor[(10, 12, 13), float64] */;
  %1002 = mod(%996, %997) /* ty=Tensor[(7, 3, 11), float64] */;
  %1003 = %998.0;
  (%999, %1000, %var_3119, %1001, %var_3122, %1002, %1003)
}

def @func_7395() -> (Tensor[(12, 12, 3), float32], Tensor[(12, 12, 3), float32]) {
  %1004 = @func_3933() /* ty=(Tensor[(12, 12, 3), float32],) */;
  %1005 = %1004.0;
  %1006 = @func_3372() /* ty=Tensor[(12, 12, 3), float32] */;
  (%1005, %1006)
}

def @func_8835(%var_8733: Tensor[(10, 3), float64], %var_8760: Tensor[(66), float64]) -> (Tensor[(12, 12, 3), float32], Tensor[(40), uint8], Tensor[(1, 6, 5), float64], Tensor[(10, 3), float64], Tensor[(40), float64], uint8, Tensor[(66), float64], uint8, Tensor[(1560), float64], Tensor[(40), uint8], Tensor[(12, 12, 3), float32]) {
  %1007 = @func_7395() /* ty=(Tensor[(12, 12, 3), float32], Tensor[(12, 12, 3), float32]) */;
  %1008 = @func_4819() /* ty=(Tensor[(40), uint8],) */;
  %1009 = cast(%var_8733, dtype="float64") /* ty=Tensor[(10, 3), float64] */;
  %1010 = reshape(%1009, newshape=[1, 6, 5]) /* ty=Tensor[(1, 6, 5), float64] */;
  %1011 = @func_4965() /* ty=(Tensor[(12, 12, 3), float32], Tensor[(10, 12, 13), float64], Tensor[(1560, 1), float64], Tensor[(1560), float64], Tensor[(40, 1), float64], Tensor[(40), float64], Tensor[(144), float64]) */;
  %1012 = cast(%var_8760, dtype="float64") /* ty=Tensor[(66), float64] */;
  %1013 = cast(meta[relay.Constant][55] /* ty=uint8 */, dtype="uint8") /* ty=uint8 */;
  %1014 = %1008.0;
  %1015 = cast(%1014, dtype="uint8") /* ty=Tensor[(40), uint8] */;
  %1016 = reshape(%1012, newshape=[2, 3, 11]) /* ty=Tensor[(2, 3, 11), float64] */;
  %1017 = reshape(%1013, newshape=[]) /* ty=uint8 */;
  %1018 = reshape(%1015, newshape=[2, 20]) /* ty=Tensor[(2, 20), uint8] */;
  %1019 = @func_2472(%1016, %1017, %1018) /* ty=(Tensor[(?, 8, 5), int32], uint8, Tensor[(2, 20), uint8], Tensor[(2, 3, 11), float64]) */;
  %1020 = @func_4739() /* ty=(Tensor[(1560), float64], Tensor[(12, 12, 3), float32]) */;
  %1021 = @func_6249() /* ty=(Tensor[(12, 12, 3), float32],) */;
  %1022 = %1007.1;
  %1023 = @func_6941(%1010) /* ty=Tensor[(1, 6, 5), float64] */;
  %1024 = %1011.5;
  %1025 = %1019.1;
  %1026 = %1020.0;
  %1027 = @func_5306() /* ty=Tensor[(40), uint8] */;
  %1028 = %1021.0;
  (%1022, %1014, %1023, %var_8733, %1024, %1025, %var_8760, meta[relay.Constant][55] /* ty=uint8 */, %1026, %1027, %1028)
}

def @func_8349() -> (Tensor[(40), uint8],) {
  %1029 = @func_4904() /* ty=Tensor[(40), uint8] */;
  (%1029,)
}

def @func_5242(%var_5220: Tensor[(5, 12, 1), uint8], %var_5221: Tensor[(5, 12, 1), uint8]) -> (Tensor[(5, 12, ?), int8], Tensor[(5, 12, ?), uint32]) {
  %1030 = cast(%var_5221, dtype="uint8") /* ty=Tensor[(5, 12, 1), uint8] */;
  %1031 = shape_of(%var_5220, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1032 = cast(%var_5220, dtype="uint8") /* ty=Tensor[(5, 12, 1), uint8] */;
  %1033 = dyn.reshape(%1030, %1031, newshape=[]) /* ty=Tensor[(?, ?, ?), uint8] */;
  %1034 = maximum(%1032, %1033) /* ty=Tensor[(5, 12, ?), uint8] */;
  %1035 = cast(%var_5220, dtype="int8") /* ty=Tensor[(5, 12, 1), int8] */;
  %1036 = shape_of(%1034, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1037 = cast(%1034, dtype="int8") /* ty=Tensor[(5, 12, ?), int8] */;
  %1038 = dyn.reshape(%1035, %1036, newshape=[]) /* ty=Tensor[(?, ?, ?), int8] */;
  %1039 = cast(%var_5221, dtype="uint32") /* ty=Tensor[(5, 12, 1), uint32] */;
  %1040 = shape_of(%1034, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1041 = cast(%1034, dtype="uint32") /* ty=Tensor[(5, 12, ?), uint32] */;
  %1042 = dyn.reshape(%1039, %1040, newshape=[]) /* ty=Tensor[(?, ?, ?), uint32] */;
  %1043 = subtract(%1037, %1038) /* ty=Tensor[(5, 12, ?), int8] */;
  %1044 = bitwise_xor(%1041, %1042) /* ty=Tensor[(5, 12, ?), uint32] */;
  (%1043, %1044)
}

def @func_5259(%var_5249: Tensor[(16, 14, 10), uint64]) -> Tensor[(16, 14, 10), uint64] {
  %1045 = cast(%var_5249, dtype="uint64") /* ty=Tensor[(16, 14, 10), uint64] */;
  %1046 = shape_of(meta[relay.Constant][56] /* ty=Tensor[(16, 14, 10), uint64] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1047 = cast(meta[relay.Constant][56] /* ty=Tensor[(16, 14, 10), uint64] */, dtype="uint64") /* ty=Tensor[(16, 14, 10), uint64] */;
  %1048 = dyn.reshape(%1045, %1046, newshape=[]) /* ty=Tensor[(?, ?, ?), uint64] */;
  right_shift(%1047, %1048) /* ty=Tensor[(16, 14, 10), uint64] */
}

def @func_13235(%var_13219: Tensor[(1, 1560), float32]) -> (Tensor[(40), uint8], Tensor[(1, 6, 5), float64], Tensor[(10, 3), float64], Tensor[(40), uint8], Tensor[(12, 12, 3), float32], Tensor[(40), float64], Tensor[(1, 1560), float32], Tensor[(132), float32], Tensor[(12, 12, 3), float32]) {
  %1049 = @func_6083() /* ty=(Tensor[(12, 130), float64], Tensor[(40), uint8]) */;
  %1050 = cast(meta[relay.Constant][57] /* ty=Tensor[(10, 3), float64] */, dtype="float64") /* ty=Tensor[(10, 3), float64] */;
  %1051 = reshape(%1050, newshape=[1, 6, 5]) /* ty=Tensor[(1, 6, 5), float64] */;
  %1052 = @func_8107() /* ty=(Tensor[(12, 12, 3), float32],) */;
  %1053 = cast(%var_13219, dtype="float32") /* ty=Tensor[(1, 1560), float32] */;
  %1054 = cast(meta[relay.Constant][58] /* ty=Tensor[(132), float32] */, dtype="float32") /* ty=Tensor[(132), float32] */;
  %1055 = reshape(%1053, newshape=[10, 12, 13]) /* ty=Tensor[(10, 12, 13), float32] */;
  %1056 = reshape(%1054, newshape=[132]) /* ty=Tensor[(132), float32] */;
  %1057 = @func_6068(%1055, %1056) /* ty=(Tensor[(10, 12, 13), float64], Tensor[(3, 11, 4), float32], Tensor[(132), float32], Tensor[(40), float64], Tensor[(12, 12, 3), float32], Tensor[(12, 12, 3), float32], Tensor[(10, 12, 13), float64], Tensor[(12, 130), uint16]) */;
  %1058 = %1049.1;
  %1059 = @func_6941(%1051) /* ty=Tensor[(1, 6, 5), float64] */;
  %1060 = @func_5306() /* ty=Tensor[(40), uint8] */;
  %1061 = %1052.0;
  %1062 = %1057.3;
  %1063 = @func_4599() /* ty=Tensor[(12, 12, 3), float32] */;
  (%1058, %1059, meta[relay.Constant][57] /* ty=Tensor[(10, 3), float64] */, %1060, %1061, %1062, %var_13219, meta[relay.Constant][58] /* ty=Tensor[(132), float32] */, %1063)
}

def @func_10548(%var_10524: Tensor[(30), float64], %var_10525: Tensor[(66), float64]) -> (Tensor[(40), uint8], Tensor[(40), float64], uint8, Tensor[(30), float64], Tensor[(66), float64]) {
  %1064 = @func_7074() /* ty=(Tensor[(40, 1), float64], Tensor[(40), uint8], Tensor[(40), uint8], Tensor[(12, 12, 3), float32]) */;
  %1065 = @func_6977() /* ty=(Tensor[(1560), float64], Tensor[(40), float64], Tensor[(2, 20), uint8]) */;
  %1066 = cast(%var_10524, dtype="float64") /* ty=Tensor[(30), float64] */;
  %1067 = cast(%var_10525, dtype="float64") /* ty=Tensor[(66), float64] */;
  %1068 = reshape(%1066, newshape=[10, 3]) /* ty=Tensor[(10, 3), float64] */;
  %1069 = reshape(%1067, newshape=[66]) /* ty=Tensor[(66), float64] */;
  %1070 = @func_8835(%1068, %1069) /* ty=(Tensor[(12, 12, 3), float32], Tensor[(40), uint8], Tensor[(1, 6, 5), float64], Tensor[(10, 3), float64], Tensor[(40), float64], uint8, Tensor[(66), float64], uint8, Tensor[(1560), float64], Tensor[(40), uint8], Tensor[(12, 12, 3), float32]) */;
  %1071 = %1064.1;
  %1072 = %1065.1;
  %1073 = %1070.5;
  (%1071, %1072, %1073, %var_10524, %var_10525)
}

def @func_10147(%var_10100: Tensor[(11, 21), float64], %var_10101: uint8) -> (Tensor[(12, 12, 3), float32], Tensor[(7, 3, 11), float64], Tensor[(11, 21), float64], uint8, Tensor[(1560), float64], Tensor[(3, 11, 4), float32], Tensor[(1560), float64], Tensor[(2, 20), float64], Tensor[(10, 12, 13), float64]) {
  %1074 = @func_8680() /* ty=(Tensor[(12, 12, 3), float32],) */;
  %1075 = cast(%var_10100, dtype="float64") /* ty=Tensor[(11, 21), float64] */;
  %1076 = cast(%var_10101, dtype="uint8") /* ty=uint8 */;
  %1077 = cast(meta[relay.Constant][59] /* ty=Tensor[(1560), float64] */, dtype="float64") /* ty=Tensor[(1560), float64] */;
  %1078 = cast(%var_10100, dtype="float64") /* ty=Tensor[(11, 21), float64] */;
  %1079 = reshape(%1075, newshape=[7, 3, 11]) /* ty=Tensor[(7, 3, 11), float64] */;
  %1080 = reshape(%1076, newshape=[]) /* ty=uint8 */;
  %1081 = reshape(%1077, newshape=[1560]) /* ty=Tensor[(1560), float64] */;
  %1082 = reshape(%1078, newshape=[7, 3, 11]) /* ty=Tensor[(7, 3, 11), float64] */;
  %1083 = @func_3145(%1079, %1080, %1081, %1082) /* ty=(Tensor[(7, 3, 11), float64], Tensor[(3, 11, 4), float32], uint8, Tensor[(10, 12, 13), float64], Tensor[(1560), float64], Tensor[(7, 3, 11), float64], Tensor[(12, 12, 3), float32]) */;
  %1084 = %1083.5;
  %1085 = cast(%1084, dtype="float64") /* ty=Tensor[(7, 3, 11), float64] */;
  %1086 = cast(%var_10101, dtype="uint8") /* ty=uint8 */;
  %1087 = cast(meta[relay.Constant][59] /* ty=Tensor[(1560), float64] */, dtype="float64") /* ty=Tensor[(1560), float64] */;
  %1088 = cast(%1084, dtype="float64") /* ty=Tensor[(7, 3, 11), float64] */;
  %1089 = reshape(%1085, newshape=[7, 3, 11]) /* ty=Tensor[(7, 3, 11), float64] */;
  %1090 = reshape(%1086, newshape=[]) /* ty=uint8 */;
  %1091 = reshape(%1087, newshape=[1560]) /* ty=Tensor[(1560), float64] */;
  %1092 = reshape(%1088, newshape=[7, 3, 11]) /* ty=Tensor[(7, 3, 11), float64] */;
  %1093 = @func_3145(%1089, %1090, %1091, %1092) /* ty=(Tensor[(7, 3, 11), float64], Tensor[(3, 11, 4), float32], uint8, Tensor[(10, 12, 13), float64], Tensor[(1560), float64], Tensor[(7, 3, 11), float64], Tensor[(12, 12, 3), float32]) */;
  %1094 = @func_9193() /* ty=(Tensor[(2, 20), float64],) */;
  %1095 = @func_7147() /* ty=(Tensor[(12, 130), float64], Tensor[(12, 12, 3), float32], Tensor[(12, 12, 3), float32], Tensor[(10, 12, 13), float64]) */;
  %1096 = %1074.0;
  %1097 = %1093.1;
  %1098 = @func_3618() /* ty=Tensor[(1560), float64] */;
  %1099 = %1094.0;
  %1100 = %1095.3;
  (%1096, %1084, %var_10100, %var_10101, meta[relay.Constant][59] /* ty=Tensor[(1560), float64] */, %1097, %1098, %1099, %1100)
}

def @func_9247(%var_9227: Tensor[(3, 12, 1), float64]) -> Tensor[(3, 12, 1), float64] {
  %1101 = cast(%var_9227, dtype="float64") /* ty=Tensor[(3, 12, 1), float64] */;
  acos(%1101) /* ty=Tensor[(3, 12, 1), float64] */
}

def @func_4065() -> (Tensor[(12, 12, 3), float32],) {
  %1102 = @func_3933() /* ty=(Tensor[(12, 12, 3), float32],) */;
  %1103 = %1102.0;
  (%1103,)
}

def @func_6722() -> (Tensor[(12, 12, 3), float32], Tensor[(154, 1), float64], Tensor[(165, 3), uint64]) {
  %1104 = @func_3713() /* ty=(Tensor[(12, 12, 3), float32],) */;
  %1105 = cast(meta[relay.Constant][60] /* ty=Tensor[(165, 3), uint64] */, dtype="uint64") /* ty=Tensor[(165, 3), uint64] */;
  %1106 = cast(meta[relay.Constant][60] /* ty=Tensor[(165, 3), uint64] */, dtype="uint64") /* ty=Tensor[(165, 3), uint64] */;
  %1107 = reshape(%1105, newshape=[11, 9, 5]) /* ty=Tensor[(11, 9, 5), uint64] */;
  %1108 = reshape(%1106, newshape=[11, 9, 5]) /* ty=Tensor[(11, 9, 5), uint64] */;
  %1109 = @func_4401(%1107, %1108) /* ty=(Tensor[(11, 9, 5), uint64], Tensor[(11, 9, 5), float64], Tensor[(14, ?, 11), bool], Tensor[(154, 1), float64]) */;
  %1110 = cast(meta[relay.Constant][60] /* ty=Tensor[(165, 3), uint64] */, dtype="float64") /* ty=Tensor[(165, 3), float64] */;
  %1111 = sinh(%1110) /* ty=Tensor[(165, 3), float64] */;
  %1112 = cast(meta[relay.Constant][61] /* ty=Tensor[(165, 3), uint64] */, dtype="int8") /* ty=Tensor[(165, 3), int8] */;
  %1113 = shape_of(meta[relay.Constant][60] /* ty=Tensor[(165, 3), uint64] */, dtype="int32") /* ty=Tensor[(2), int32] */;
  %1114 = cast(meta[relay.Constant][60] /* ty=Tensor[(165, 3), uint64] */, dtype="int8") /* ty=Tensor[(165, 3), int8] */;
  %1115 = dyn.reshape(%1112, %1113, newshape=[]) /* ty=Tensor[(?, ?), int8] */;
  %1116 = subtract(%1114, %1115) /* ty=Tensor[(165, 3), int8] */;
  %1117 = cast(%1116, dtype="float32") /* ty=Tensor[(165, 3), float32] */;
  %1118 = shape_of(%1111, dtype="int32") /* ty=Tensor[(2), int32] */;
  %1119 = cast(%1111, dtype="float32") /* ty=Tensor[(165, 3), float32] */;
  %1120 = dyn.reshape(%1117, %1118, newshape=[]) /* ty=Tensor[(?, ?), float32] */;
  %1121 = divide(%1119, %1120) /* ty=Tensor[(165, 3), float32] */;
  %1122 = cast(meta[relay.Constant][61] /* ty=Tensor[(165, 3), uint64] */, dtype="uint64") /* ty=Tensor[(165, 3), uint64] */;
  %1123 = shape_of(%1121, dtype="int32") /* ty=Tensor[(2), int32] */;
  %1124 = cast(%1121, dtype="uint64") /* ty=Tensor[(165, 3), uint64] */;
  %1125 = dyn.reshape(%1122, %1123, newshape=[]) /* ty=Tensor[(?, ?), uint64] */;
  %1126 = %1104.0;
  %1127 = %1109.3;
  %1128 = add(%1124, %1125) /* ty=Tensor[(165, 3), uint64] */;
  (%1126, %1127, %1128)
}

def @func_10575() -> (Tensor[(12, 12, 3), float32],) {
  %1129 = @func_8180() /* ty=(Tensor[(12, 12, 3), float32], Tensor[(12, 12, 3), float32], Tensor[(1560), float64], Tensor[(2, 20), float64]) */;
  %1130 = %1129.0;
  %1131 = cast(%1130, dtype="float32") /* ty=Tensor[(12, 12, 3), float32] */;
  %1132 = asinh(%1131) /* ty=Tensor[(12, 12, 3), float32] */;
  (%1132,)
}

def @func_10735() -> Tensor[(12, 130), float64] {
  %1133 = @func_2829() /* ty=(Tensor[(12, 12, 3), float32], Tensor[(10, 12, 13), float64], Tensor[(12, 130), float64]) */;
  %1133.2
}

def @func_10786(%var_10775: Tensor[(12, 130), float64]) -> (Tensor[(12, 130), bool],) {
  %1134 = @func_4637() /* ty=(Tensor[(12, 130), float64],) */;
  %1135 = %1134.0;
  %1136 = cast(%var_10775, dtype="bool") /* ty=Tensor[(12, 130), bool] */;
  %1137 = shape_of(%1135, dtype="int32") /* ty=Tensor[(2), int32] */;
  %1138 = cast(%1135, dtype="bool") /* ty=Tensor[(12, 130), bool] */;
  %1139 = dyn.reshape(%1136, %1137, newshape=[]) /* ty=Tensor[(?, ?), bool] */;
  %1140 = less(%1138, %1139) /* ty=Tensor[(12, 130), bool] */;
  (%1140,)
}

def @func_8415() -> (Tensor[(40), uint8],) {
  %1141 = @func_5387() /* ty=(Tensor[(40), uint8], Tensor[(40), uint8]) */;
  %1142 = %1141.0;
  (%1142,)
}

def @func_3618() -> Tensor[(1560), float64] {
  %1143 = @func_3254() /* ty=(Tensor[(12, 130), float64], Tensor[(1560), float64], Tensor[(33, 7), float64], uint8, Tensor[(7, 3, 11), float32], uint8, Tensor[(66), float64], Tensor[(40), uint8], Tensor[(2, 20), float64]) */;
  %1143.1
}

def @func_12668() -> (Tensor[(12, 12, 3), float32], Tensor[(12, 12, 3), float32], Tensor[(12, 12, 3), float32]) {
  %1144 = @func_4522() /* ty=Tensor[(12, 12, 3), float32] */;
  %1145 = @func_9537() /* ty=Tensor[(12, 12, 3), float32] */;
  %1146 = @func_10896() /* ty=Tensor[(12, 12, 3), float32] */;
  (%1144, %1145, %1146)
}

def @func_13359(%var_13332: uint16, %var_13333: Tensor[(6, 15, 4), uint16]) -> (Tensor[(6, 15, 4), bool], Tensor[(40, 1), float64]) {
  %1147 = cast(%var_13332, dtype="bool") /* ty=bool */;
  %1148 = cast(%var_13333, dtype="bool") /* ty=Tensor[(6, 15, 4), bool] */;
  %1149 = @func_12046() /* ty=(Tensor[(40, 1), float64],) */;
  %1150 = less_equal(%1147, %1148) /* ty=Tensor[(6, 15, 4), bool] */;
  %1151 = %1149.0;
  (%1150, %1151)
}

def @func_3713() -> (Tensor[(12, 12, 3), float32],) {
  %1152 = @func_3372() /* ty=Tensor[(12, 12, 3), float32] */;
  (%1152,)
}

def @func_6249() -> (Tensor[(12, 12, 3), float32],) {
  %1153 = @func_4065() /* ty=(Tensor[(12, 12, 3), float32],) */;
  %1154 = %1153.0;
  (%1154,)
}

def @func_7477(%var_7440: Tensor[(16, 8, 5), uint8], %var_7455: Tensor[(2520), int32]) -> (Tensor[(16, 8, 5), float32], Tensor[(14, 15, 12), int32], Tensor[(2520), int32], Tensor[(1560), float64]) {
  %1155 = cast(meta[relay.Constant][62] /* ty=Tensor[(16, 8, 5), uint8] */, dtype="uint8") /* ty=Tensor[(16, 8, 5), uint8] */;
  %1156 = shape_of(%var_7440, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1157 = cast(%var_7440, dtype="uint8") /* ty=Tensor[(16, 8, 5), uint8] */;
  %1158 = dyn.reshape(%1155, %1156, newshape=[]) /* ty=Tensor[(?, ?, ?), uint8] */;
  %1159 = bitwise_or(%1157, %1158) /* ty=Tensor[(16, 8, 5), uint8] */;
  %1160 = cast(%1159, dtype="float32") /* ty=Tensor[(16, 8, 5), float32] */;
  %1161 = cast(%var_7455, dtype="int32") /* ty=Tensor[(2520), int32] */;
  %1162 = reshape(%1161, newshape=[14, 15, 12]) /* ty=Tensor[(14, 15, 12), int32] */;
  %1163 = @func_5057(%1162) /* ty=(Tensor[(14, 15, 12), int32], Tensor[(12, 12, 3), float32]) */;
  %1164 = cos(%1160) /* ty=Tensor[(16, 8, 5), float32] */;
  %1165 = %1163.0;
  %1166 = @func_4791() /* ty=Tensor[(1560), float64] */;
  (%1164, %1165, %var_7455, %1166)
}

def @func_9949() -> (Tensor[(12, 12, 3), int16],) {
  %1167 = @func_6143() /* ty=(Tensor[(12, 12, 3), float64], Tensor[(14, ?, 11), bool], Tensor[(1, 154), float64], Tensor[(1560), float64], Tensor[(12, 12, 3), int16], Tensor[(12, 12, 3), float32], Tensor[(12, 12, 3), float32]) */;
  %1168 = %1167.4;
  (%1168,)
}

def @func_12046() -> (Tensor[(40, 1), float64],) {
  %1169 = @func_7074() /* ty=(Tensor[(40, 1), float64], Tensor[(40), uint8], Tensor[(40), uint8], Tensor[(12, 12, 3), float32]) */;
  %1170 = %1169.0;
  (%1170,)
}

def @func_7949() -> (Tensor[(40), uint8],) {
  %1171 = @func_7283() /* ty=Tensor[(40), uint8] */;
  (%1171,)
}

def @func_13003() -> (Tensor[(40), uint8], Tensor[(10, 12, 13), float64], Tensor[(12, 12, 3), float32], Tensor[(12, 12, 3), float32]) {
  %1172 = @func_4819() /* ty=(Tensor[(40), uint8],) */;
  %1173 = @func_12128() /* ty=(Tensor[(10, 12, 13), float64], Tensor[(1560), float32]) */;
  %1174 = @func_12079() /* ty=(Tensor[(12, 12, 3), float32],) */;
  %1175 = @func_6222() /* ty=(Tensor[(12, 12, 3), float32], Tensor[(12, 12, 3), float32]) */;
  %1176 = %1172.0;
  %1177 = %1173.0;
  %1178 = %1174.0;
  %1179 = %1175.0;
  (%1176, %1177, %1178, %1179)
}

def @func_4091(%var_4074: Tensor[(144), float64]) -> (Tensor[(1560), float64], Tensor[(144), float64], Tensor[(40), float64], Tensor[(144), float64]) {
  %1180 = cast(meta[relay.Constant][63] /* ty=Tensor[(40), float64] */, dtype="float64") /* ty=Tensor[(40), float64] */;
  %1181 = cast(%var_4074, dtype="float64") /* ty=Tensor[(144), float64] */;
  %1182 = reshape(%1180, newshape=[40, 1]) /* ty=Tensor[(40, 1), float64] */;
  %1183 = reshape(%1181, newshape=[144]) /* ty=Tensor[(144), float64] */;
  %1184 = @func_3579(%1182, %1183) /* ty=(Tensor[(12, 12, 3), float32], Tensor[(15, 8, 5), bool], Tensor[(40, 1), float64], Tensor[(144), float64]) */;
  %1185 = @func_3618() /* ty=Tensor[(1560), float64] */;
  %1186 = %1184.3;
  (%1185, %1186, meta[relay.Constant][63] /* ty=Tensor[(40), float64] */, %var_4074)
}

def @func_13140() -> (Tensor[(12, 12, 3), float32], Tensor[(12, 130), float64]) {
  %1187 = @func_10356() /* ty=(Tensor[(12, 12, 3), float32], Tensor[(2, 20), float64], Tensor[(12, 12, 3), float32]) */;
  %1188 = %1187.2;
  %1189 = @func_10735() /* ty=Tensor[(12, 130), float64] */;
  (%1188, %1189)
}

def @func_8959() -> (Tensor[(12, 12, 3), float32], Tensor[(12, 12, 3), float32], Tensor[(1, 6, 5), float64], Tensor[(30), float64], Tensor[(12, 12, 3), float32]) {
  %1190 = @func_7147() /* ty=(Tensor[(12, 130), float64], Tensor[(12, 12, 3), float32], Tensor[(12, 12, 3), float32], Tensor[(10, 12, 13), float64]) */;
  %1191 = cast(meta[relay.Constant][64] /* ty=Tensor[(30), float64] */, dtype="float64") /* ty=Tensor[(30), float64] */;
  %1192 = reshape(%1191, newshape=[1, 6, 5]) /* ty=Tensor[(1, 6, 5), float64] */;
  %1193 = @func_5979() /* ty=Tensor[(12, 12, 3), float32] */;
  %1194 = %1190.2;
  %1195 = @func_6941(%1192) /* ty=Tensor[(1, 6, 5), float64] */;
  %1196 = @func_5966() /* ty=Tensor[(12, 12, 3), float32] */;
  (%1193, %1194, %1195, meta[relay.Constant][64] /* ty=Tensor[(30), float64] */, %1196)
}

def @func_12322() -> Tensor[(12, 12, 3), float32] {
  @func_4441() /* ty=Tensor[(12, 12, 3), float32] */
}

def @func_6936() -> (Tensor[(12, 12, 3), float32], Tensor[(13, 15, 2), int32], Tensor[(390), int32]) {
  %1197 = @func_5342() /* ty=(Tensor[(12, 12, 3), float32],) */;
  %1198 = cast(meta[relay.Constant][65] /* ty=Tensor[(390), int32] */, dtype="int32") /* ty=Tensor[(390), int32] */;
  %1199 = reshape(%1198, newshape=[13, 15, 2]) /* ty=Tensor[(13, 15, 2), int32] */;
  %1200 = %1197.0;
  %1201 = @func_6843(%1199) /* ty=Tensor[(13, 15, 2), int32] */;
  (%1200, %1201, meta[relay.Constant][65] /* ty=Tensor[(390), int32] */)
}

def @func_8883(%var_8876: uint8) -> (Tensor[(12, 12, 3), float32], Tensor[(?, 8, 5), int32], Tensor[(11, 6), float64], uint8, Tensor[(2, 20), uint8]) {
  %1202 = cast(meta[relay.Constant][66] /* ty=Tensor[(11, 6), float64] */, dtype="float64") /* ty=Tensor[(11, 6), float64] */;
  %1203 = cast(%var_8876, dtype="uint8") /* ty=uint8 */;
  %1204 = cast(meta[relay.Constant][67] /* ty=Tensor[(2, 20), uint8] */, dtype="uint8") /* ty=Tensor[(2, 20), uint8] */;
  %1205 = reshape(%1202, newshape=[2, 3, 11]) /* ty=Tensor[(2, 3, 11), float64] */;
  %1206 = reshape(%1203, newshape=[]) /* ty=uint8 */;
  %1207 = reshape(%1204, newshape=[2, 20]) /* ty=Tensor[(2, 20), uint8] */;
  %1208 = @func_2472(%1205, %1206, %1207) /* ty=(Tensor[(?, 8, 5), int32], uint8, Tensor[(2, 20), uint8], Tensor[(2, 3, 11), float64]) */;
  %1209 = @func_4599() /* ty=Tensor[(12, 12, 3), float32] */;
  %1210 = %1208.0;
  (%1209, %1210, meta[relay.Constant][66] /* ty=Tensor[(11, 6), float64] */, %var_8876, meta[relay.Constant][67] /* ty=Tensor[(2, 20), uint8] */)
}

def @func_6655() -> Tensor[(1560), float64] {
  %1211 = @func_4923() /* ty=(Tensor[(1560), float64],) */;
  %1211.0
}

def @func_6941(%var_6938: Tensor[(1, 6, 5), float64]) -> Tensor[(1, 6, 5), float64] {
  %1212 = cast(%var_6938, dtype="float64") /* ty=Tensor[(1, 6, 5), float64] */;
  erf(%1212) /* ty=Tensor[(1, 6, 5), float64] */
}

def @func_4637() -> (Tensor[(12, 130), float64],) {
  %1213 = @func_3254() /* ty=(Tensor[(12, 130), float64], Tensor[(1560), float64], Tensor[(33, 7), float64], uint8, Tensor[(7, 3, 11), float32], uint8, Tensor[(66), float64], Tensor[(40), uint8], Tensor[(2, 20), float64]) */;
  %1214 = %1213.0;
  (%1214,)
}

def @func_7611() -> (Tensor[(12, 12, 3), float32],) {
  %1215 = @func_7395() /* ty=(Tensor[(12, 12, 3), float32], Tensor[(12, 12, 3), float32]) */;
  %1216 = %1215.1;
  (%1216,)
}

def @func_4739() -> (Tensor[(1560), float64], Tensor[(12, 12, 3), float32]) {
  %1217 = @func_4482() /* ty=(Tensor[(12, 12, 3), float32], Tensor[(1560), float64], Tensor[(12, 130), float64]) */;
  %1218 = @func_3933() /* ty=(Tensor[(12, 12, 3), float32],) */;
  %1219 = %1217.1;
  %1220 = %1218.0;
  (%1219, %1220)
}

def @func_9055() -> Tensor[(40), uint8] {
  %1221 = @func_7949() /* ty=(Tensor[(40), uint8],) */;
  %1221.0
}

def @func_9117() -> (Tensor[(12, 12, 3), float32], Tensor[(11, 16, 8), uint32], Tensor[(1408), uint32], Tensor[(40), float32]) {
  %1222 = @func_8586() /* ty=(Tensor[(12, 12, 3), float32],) */;
  %1223 = cast(meta[relay.Constant][68] /* ty=Tensor[(1408), uint32] */, dtype="uint32") /* ty=Tensor[(1408), uint32] */;
  %1224 = reshape(%1223, newshape=[11, 16, 8]) /* ty=Tensor[(11, 16, 8), uint32] */;
  %1225 = @func_6904(%1224) /* ty=(Tensor[(11, 16, 8), uint32], Tensor[(12, 12, 3), float32]) */;
  %1226 = @func_5387() /* ty=(Tensor[(40), uint8], Tensor[(40), uint8]) */;
  %1227 = %1226.0;
  %1228 = cast(meta[relay.Constant][69] /* ty=Tensor[(40), uint8] */, dtype="float32") /* ty=Tensor[(40), float32] */;
  %1229 = shape_of(%1227, dtype="int32") /* ty=Tensor[(1), int32] */;
  %1230 = cast(%1227, dtype="float32") /* ty=Tensor[(40), float32] */;
  %1231 = dyn.reshape(%1228, %1229, newshape=[]) /* ty=Tensor[(?), float32] */;
  %1232 = %1222.0;
  %1233 = %1225.0;
  %1234 = floor_mod(%1230, %1231) /* ty=Tensor[(40), float32] */;
  (%1232, %1233, meta[relay.Constant][68] /* ty=Tensor[(1408), uint32] */, %1234)
}

/* For debugging purposes the metadata section has been omitted.
 * If you would like to see the full metadata section you can set the 
 * option to `True` when invoking `astext`. 
 */
===================================
==========mutated_mod==========
#[version = "0.0.5"]
def @func_8181() -> (Tensor[(12, 12, 3), float32], Tensor[(12, 12, 3), float32], Tensor[(1560), float64], Tensor[(2, 20), float64]) {
  %5 = fn () -> (Tensor[(12, 12, 3), float32], Tensor[(12, 12, 3), float32], Tensor[(1560), float64], Tensor[(2, 20), float64]) {
    %0 = @func_5083() /* ty=(Tensor[(2, 20), float64],) */;
    %1 = @func_5188() /* ty=Tensor[(12, 12, 3), float32] */;
    %2 = @func_5878() /* ty=Tensor[(12, 12, 3), float32] */;
    %3 = @func_8130() /* ty=Tensor[(1560), float64] */;
    %4 = %0.0;
    (%1, %2, %3, %4)
  };
  %5() /* ty=(Tensor[(12, 12, 3), float32], Tensor[(12, 12, 3), float32], Tensor[(1560), float64], Tensor[(2, 20), float64]) */
}

def @func_4966() -> (Tensor[(12, 12, 3), float32], Tensor[(10, 12, 13), float64], Tensor[(1560, 1), float64], Tensor[(1560), float64], Tensor[(40, 1), float64], Tensor[(40), float64], Tensor[(144), float64]) {
  %19 = fn () -> (Tensor[(12, 12, 3), float32], Tensor[(10, 12, 13), float64], Tensor[(1560, 1), float64], Tensor[(1560), float64], Tensor[(40, 1), float64], Tensor[(40), float64], Tensor[(144), float64]) {
    %6 = @func_2864() /* ty=(Tensor[(12, 12, 3), float32],) */;
    %7 = cast(meta[relay.Constant][0] /* ty=Tensor[(1560, 1), float64] */, dtype="float64") /* ty=Tensor[(1560, 1), float64] */;
    %8 = reshape(%7, newshape=[10, 12, 13]) /* ty=Tensor[(10, 12, 13), float64] */;
    %9 = @func_4482() /* ty=(Tensor[(12, 12, 3), float32], Tensor[(1560), float64], Tensor[(12, 130), float64]) */;
    %10 = cast(meta[relay.Constant][1] /* ty=Tensor[(40), float64] */, dtype="float64") /* ty=Tensor[(40), float64] */;
    %11 = cast(meta[relay.Constant][2] /* ty=Tensor[(144), float64] */, dtype="float64") /* ty=Tensor[(144), float64] */;
    %12 = reshape(%10, newshape=[40, 1]) /* ty=Tensor[(40, 1), float64] */;
    %13 = reshape(%11, newshape=[144]) /* ty=Tensor[(144), float64] */;
    %14 = @func_3579(%12, %13) /* ty=(Tensor[(12, 12, 3), float32], Tensor[(15, 8, 5), bool], Tensor[(40, 1), float64], Tensor[(144), float64]) */;
    %15 = %6.0;
    %16 = @func_2171(%8) /* ty=Tensor[(10, 12, 13), float64] */;
    %17 = %9.1;
    %18 = %14.2;
    (%15, %16, meta[relay.Constant][0] /* ty=Tensor[(1560, 1), float64] */, %17, %18, meta[relay.Constant][1] /* ty=Tensor[(40), float64] */, meta[relay.Constant][2] /* ty=Tensor[(144), float64] */)
  };
  %19() /* ty=(Tensor[(12, 12, 3), float32], Tensor[(10, 12, 13), float64], Tensor[(1560, 1), float64], Tensor[(1560), float64], Tensor[(40, 1), float64], Tensor[(40), float64], Tensor[(144), float64]) */
}

def @func_10151(%var_10149: Tensor[(11, 21), float64], %var_10150: uint8) -> (Tensor[(12, 12, 3), float32], Tensor[(7, 3, 11), float64], Tensor[(11, 21), float64], uint8, Tensor[(1560), float64], Tensor[(3, 11, 4), float32], Tensor[(1560), float64], Tensor[(2, 20), float64], Tensor[(10, 12, 13), float64]) {
  @func_10147(%var_10149, %var_10150) /* ty=(Tensor[(12, 12, 3), float32], Tensor[(7, 3, 11), float64], Tensor[(11, 21), float64], uint8, Tensor[(1560), float64], Tensor[(3, 11, 4), float32], Tensor[(1560), float64], Tensor[(2, 20), float64], Tensor[(10, 12, 13), float64]) */
}

def @func_3254() -> (Tensor[(12, 130), float64], Tensor[(1560), float64], Tensor[(33, 7), float64], uint8, Tensor[(7, 3, 11), float32], uint8, Tensor[(66), float64], Tensor[(40), uint8], Tensor[(2, 20), float64]) {
  %20 = @func_2829() /* ty=(Tensor[(12, 12, 3), float32], Tensor[(10, 12, 13), float64], Tensor[(12, 130), float64]) */;
  %21 = cast(meta[relay.Constant][3] /* ty=Tensor[(33, 7), float64] */, dtype="float64") /* ty=Tensor[(33, 7), float64] */;
  %22 = cast(meta[relay.Constant][4] /* ty=uint8 */, dtype="uint8") /* ty=uint8 */;
  %23 = %20.2;
  %24 = cast(%23, dtype="float64") /* ty=Tensor[(12, 130), float64] */;
  %25 = cast(meta[relay.Constant][3] /* ty=Tensor[(33, 7), float64] */, dtype="float64") /* ty=Tensor[(33, 7), float64] */;
  %26 = reshape(%21, newshape=[7, 3, 11]) /* ty=Tensor[(7, 3, 11), float64] */;
  %27 = reshape(%22, newshape=[]) /* ty=uint8 */;
  %28 = reshape(%24, newshape=[1560]) /* ty=Tensor[(1560), float64] */;
  %29 = reshape(%25, newshape=[7, 3, 11]) /* ty=Tensor[(7, 3, 11), float64] */;
  %30 = @func_3145(%26, %27, %28, %29) /* ty=(Tensor[(7, 3, 11), float64], Tensor[(3, 11, 4), float32], uint8, Tensor[(10, 12, 13), float64], Tensor[(1560), float64], Tensor[(7, 3, 11), float64], Tensor[(12, 12, 3), float32]) */;
  %31 = cast(meta[relay.Constant][3] /* ty=Tensor[(33, 7), float64] */, dtype="float64") /* ty=Tensor[(33, 7), float64] */;
  %32 = cast(meta[relay.Constant][4] /* ty=uint8 */, dtype="uint8") /* ty=uint8 */;
  %33 = %30.4;
  %34 = cast(%33, dtype="float64") /* ty=Tensor[(1560), float64] */;
  %35 = cast(meta[relay.Constant][3] /* ty=Tensor[(33, 7), float64] */, dtype="float64") /* ty=Tensor[(33, 7), float64] */;
  %36 = reshape(%31, newshape=[7, 3, 11]) /* ty=Tensor[(7, 3, 11), float64] */;
  %37 = reshape(%32, newshape=[]) /* ty=uint8 */;
  %38 = reshape(%34, newshape=[1560]) /* ty=Tensor[(1560), float64] */;
  %39 = reshape(%35, newshape=[7, 3, 11]) /* ty=Tensor[(7, 3, 11), float64] */;
  %40 = @func_3145(%36, %37, %38, %39) /* ty=(Tensor[(7, 3, 11), float64], Tensor[(3, 11, 4), float32], uint8, Tensor[(10, 12, 13), float64], Tensor[(1560), float64], Tensor[(7, 3, 11), float64], Tensor[(12, 12, 3), float32]) */;
  %41 = %40.5;
  %42 = cast(%41, dtype="float32") /* ty=Tensor[(7, 3, 11), float32] */;
  %43 = cast(meta[relay.Constant][5] /* ty=Tensor[(66), float64] */, dtype="float64") /* ty=Tensor[(66), float64] */;
  %44 = cast(meta[relay.Constant][4] /* ty=uint8 */, dtype="uint8") /* ty=uint8 */;
  %45 = cast(meta[relay.Constant][6] /* ty=Tensor[(40), uint8] */, dtype="uint8") /* ty=Tensor[(40), uint8] */;
  %46 = reshape(%43, newshape=[2, 3, 11]) /* ty=Tensor[(2, 3, 11), float64] */;
  %47 = reshape(%44, newshape=[]) /* ty=uint8 */;
  %48 = reshape(%45, newshape=[2, 20]) /* ty=Tensor[(2, 20), uint8] */;
  %49 = @func_2472(%46, %47, %48) /* ty=(Tensor[(?, 8, 5), int32], uint8, Tensor[(2, 20), uint8], Tensor[(2, 3, 11), float64]) */;
  %50 = cast(meta[relay.Constant][6] /* ty=Tensor[(40), uint8] */, dtype="float64") /* ty=Tensor[(40), float64] */;
  %51 = reshape(%50, newshape=[2, 20]) /* ty=Tensor[(2, 20), float64] */;
  %52 = @func_3030(%51) /* ty=(Tensor[(12, 12, 3), float32], Tensor[(9, 1, 16), float64], Tensor[(2, 20), float64], Tensor[(144), float64]) */;
  %53 = rsqrt(%42) /* ty=Tensor[(7, 3, 11), float32] */;
  %54 = %49.1;
  %55 = %52.2;
  (%23, %33, meta[relay.Constant][3] /* ty=Tensor[(33, 7), float64] */, meta[relay.Constant][4] /* ty=uint8 */, %53, %54, meta[relay.Constant][5] /* ty=Tensor[(66), float64] */, meta[relay.Constant][6] /* ty=Tensor[(40), uint8] */, %55)
}

def @func_10652(%var_10650: uint8, %var_10651: Tensor[(945), uint32]) -> (Tensor[(14, ?, 11), bool], Tensor[(?, 8, 5), int32], uint8, Tensor[(15, 7, 9), bool], Tensor[(945), uint32], Tensor[(140, 16), int32], Tensor[(12, 12, 3), float32]) {
  %69 = fn (%var_10633: uint8, %var_10638: Tensor[(945), uint32]) -> (Tensor[(14, ?, 11), bool], Tensor[(?, 8, 5), int32], uint8, Tensor[(15, 7, 9), bool], Tensor[(945), uint32], Tensor[(140, 16), int32], Tensor[(12, 12, 3), float32]) {
    %56 = @func_6143() /* ty=(Tensor[(12, 12, 3), float64], Tensor[(14, ?, 11), bool], Tensor[(1, 154), float64], Tensor[(1560), float64], Tensor[(12, 12, 3), int16], Tensor[(12, 12, 3), float32], Tensor[(12, 12, 3), float32]) */;
    %57 = cast(%var_10633, dtype="uint8") /* ty=uint8 */;
    %58 = reshape(%57, newshape=[]) /* ty=uint8 */;
    %59 = @func_8883(%58) /* ty=(Tensor[(12, 12, 3), float32], Tensor[(?, 8, 5), int32], Tensor[(11, 6), float64], uint8, Tensor[(2, 20), uint8]) */;
    %60 = cast(%var_10638, dtype="uint32") /* ty=Tensor[(945), uint32] */;
    %61 = reshape(%60, newshape=[15, 7, 9]) /* ty=Tensor[(15, 7, 9), uint32] */;
    %62 = @func_7897() /* ty=(Tensor[(12, 12, 3), float32], Tensor[(140, 16), int32], Tensor[(140, 16), float64]) */;
    %63 = @func_4146() /* ty=(Tensor[(12, 12, 3), float32], Tensor[(12, 12, 3), float32], Tensor[(12, 12, 3), float32]) */;
    %64 = %56.1;
    %65 = %59.1;
    %66 = @func_9270(%61) /* ty=Tensor[(15, 7, 9), bool] */;
    %67 = %62.1;
    %68 = %63.2;
    (%64, %65, %var_10633, %66, %var_10638, %67, %68)
  };
  %69(%var_10650, %var_10651) /* ty=(Tensor[(14, ?, 11), bool], Tensor[(?, 8, 5), int32], uint8, Tensor[(15, 7, 9), bool], Tensor[(945), uint32], Tensor[(140, 16), int32], Tensor[(12, 12, 3), float32]) */
}

def @func_622(%var_620: uint8, %var_621: Tensor[(1, 8, 5), uint8]) -> (Tensor[(3, 11, 4), float32], Tensor[(132), float32], Tensor[(?, 8, 5), int32], Tensor[(3, 11, 4), float32], Tensor[(3, 11, 4), float32]) {
  %89 = fn (%var_592: uint8, %var_593: Tensor[(1, 8, 5), uint8]) -> (Tensor[(3, 11, 4), float32], Tensor[(132), float32], Tensor[(?, 8, 5), int32], Tensor[(3, 11, 4), float32], Tensor[(3, 11, 4), float32]) {
    %70 = cast(meta[relay.Constant][7] /* ty=Tensor[(132), float32] */, dtype="float32") /* ty=Tensor[(132), float32] */;
    %71 = reshape(%70, newshape=[3, 11, 4]) /* ty=Tensor[(3, 11, 4), float32] */;
    %72 = cast(%var_593, dtype="float32") /* ty=Tensor[(1, 8, 5), float32] */;
    %73 = tan(%72) /* ty=Tensor[(1, 8, 5), float32] */;
    %74 = cast(%var_592, dtype="uint8") /* ty=uint8 */;
    %75 = cast(%var_593, dtype="uint8") /* ty=Tensor[(1, 8, 5), uint8] */;
    %76 = subtract(%74, %75) /* ty=Tensor[(1, 8, 5), uint8] */;
    %77 = cast(%76, dtype="int32") /* ty=Tensor[(1, 8, 5), int32] */;
    %78 = shape_of(%73, dtype="int32") /* ty=Tensor[(3), int32] */;
    %79 = cast(%73, dtype="int32") /* ty=Tensor[(1, 8, 5), int32] */;
    %80 = dyn.reshape(%77, %78, newshape=[]) /* ty=Tensor[(?, ?, ?), int32] */;
    %81 = @func_97(%71) /* ty=Tensor[(3, 11, 4), float32] */;
    %82 = cast(%81, dtype="float32") /* ty=Tensor[(3, 11, 4), float32] */;
    %83 = reshape(%82, newshape=[3, 11, 4]) /* ty=Tensor[(3, 11, 4), float32] */;
    %84 = cast(meta[relay.Constant][7] /* ty=Tensor[(132), float32] */, dtype="float32") /* ty=Tensor[(132), float32] */;
    %85 = reshape(%84, newshape=[3, 11, 4]) /* ty=Tensor[(3, 11, 4), float32] */;
    %86 = maximum(%79, %80) /* ty=Tensor[(?, 8, 5), int32] */;
    %87 = @func_97(%83) /* ty=Tensor[(3, 11, 4), float32] */;
    %88 = @func_97(%85) /* ty=Tensor[(3, 11, 4), float32] */;
    (%81, meta[relay.Constant][7] /* ty=Tensor[(132), float32] */, %86, %87, %88)
  };
  %89(%var_620, %var_621) /* ty=(Tensor[(3, 11, 4), float32], Tensor[(132), float32], Tensor[(?, 8, 5), int32], Tensor[(3, 11, 4), float32], Tensor[(3, 11, 4), float32]) */
}

def @func_11080() -> Tensor[(1560), float64] {
  %90 = @func_3254() /* ty=(Tensor[(12, 130), float64], Tensor[(1560), float64], Tensor[(33, 7), float64], uint8, Tensor[(7, 3, 11), float32], uint8, Tensor[(66), float64], Tensor[(40), uint8], Tensor[(2, 20), float64]) */;
  %90.1
}

def @func_13393() -> (Tensor[(12, 12, 3), float32], Tensor[(12, 12, 3), float32]) {
  %91 = @func_9377() /* ty=(Tensor[(40), uint8], Tensor[(12, 12, 3), float32], Tensor[(11, 6), float64], uint8, Tensor[(12, 12, 3), float32], Tensor[(12, 12, 3), float32]) */;
  %92 = @func_5966() /* ty=Tensor[(12, 12, 3), float32] */;
  %93 = %91.5;
  (%92, %93)
}

def @func_5242(%var_5220: Tensor[(5, 12, 1), uint8], %var_5221: Tensor[(5, 12, 1), uint8]) -> (Tensor[(5, 12, ?), int8], Tensor[(5, 12, ?), uint32]) {
  %94 = cast(%var_5221, dtype="uint8") /* ty=Tensor[(5, 12, 1), uint8] */;
  %95 = shape_of(%var_5220, dtype="int32") /* ty=Tensor[(3), int32] */;
  %96 = cast(%var_5220, dtype="uint8") /* ty=Tensor[(5, 12, 1), uint8] */;
  %97 = dyn.reshape(%94, %95, newshape=[]) /* ty=Tensor[(?, ?, ?), uint8] */;
  %98 = maximum(%96, %97) /* ty=Tensor[(5, 12, ?), uint8] */;
  %99 = cast(%var_5220, dtype="int8") /* ty=Tensor[(5, 12, 1), int8] */;
  %100 = shape_of(%98, dtype="int32") /* ty=Tensor[(3), int32] */;
  %101 = cast(%98, dtype="int8") /* ty=Tensor[(5, 12, ?), int8] */;
  %102 = dyn.reshape(%99, %100, newshape=[]) /* ty=Tensor[(?, ?, ?), int8] */;
  %103 = cast(%var_5221, dtype="uint32") /* ty=Tensor[(5, 12, 1), uint32] */;
  %104 = shape_of(%98, dtype="int32") /* ty=Tensor[(3), int32] */;
  %105 = cast(%98, dtype="uint32") /* ty=Tensor[(5, 12, ?), uint32] */;
  %106 = dyn.reshape(%103, %104, newshape=[]) /* ty=Tensor[(?, ?, ?), uint32] */;
  %107 = subtract(%101, %102) /* ty=Tensor[(5, 12, ?), int8] */;
  %108 = bitwise_xor(%105, %106) /* ty=Tensor[(5, 12, ?), uint32] */;
  (%107, %108)
}

def @func_10736() -> Tensor[(12, 130), float64] {
  %110 = fn () -> Tensor[(12, 130), float64] {
    %109 = @func_2829() /* ty=(Tensor[(12, 12, 3), float32], Tensor[(10, 12, 13), float64], Tensor[(12, 130), float64]) */;
    %109.2
  };
  %110() /* ty=Tensor[(12, 130), float64] */
}

def @func_11956() -> (Tensor[(5, 13, 5), float64],) {
  %113 = fn () -> (Tensor[(5, 13, 5), float64],) {
    %111 = cast(meta[relay.Constant][8] /* ty=Tensor[(5, 13, 5), float64] */, dtype="float64") /* ty=Tensor[(5, 13, 5), float64] */;
    %112 = cosh(%111) /* ty=Tensor[(5, 13, 5), float64] */;
    (%112,)
  };
  %113() /* ty=(Tensor[(5, 13, 5), float64],) */
}

def @func_11497() -> (Tensor[(1560), float64], Tensor[(12, 12, 3), float32]) {
  %118 = fn () -> (Tensor[(1560), float64], Tensor[(12, 12, 3), float32]) {
    %114 = @func_9677() /* ty=(Tensor[(1560), float64], Tensor[(1560), float64], Tensor[(12, 12, 3), float32]) */;
    %115 = @func_8586() /* ty=(Tensor[(12, 12, 3), float32],) */;
    %116 = %114.1;
    %117 = %115.0;
    (%116, %117)
  };
  %118() /* ty=(Tensor[(1560), float64], Tensor[(12, 12, 3), float32]) */
}

def @func_8635() -> (Tensor[(12, 12, 3), float32],) {
  %121 = fn () -> (Tensor[(12, 12, 3), float32],) {
    %119 = @func_8180() /* ty=(Tensor[(12, 12, 3), float32], Tensor[(12, 12, 3), float32], Tensor[(1560), float64], Tensor[(2, 20), float64]) */;
    %120 = %119.0;
    (%120,)
  };
  %121() /* ty=(Tensor[(12, 12, 3), float32],) */
}

def @func_7016() -> (Tensor[(12, 12, 3), float32], Tensor[(12, 12, 3), int16]) {
  %122 = @func_6741() /* ty=(Tensor[(2, 20), float64], Tensor[(12, 12, 3), float32]) */;
  %123 = @func_6143() /* ty=(Tensor[(12, 12, 3), float64], Tensor[(14, ?, 11), bool], Tensor[(1, 154), float64], Tensor[(1560), float64], Tensor[(12, 12, 3), int16], Tensor[(12, 12, 3), float32], Tensor[(12, 12, 3), float32]) */;
  %124 = %122.1;
  %125 = %123.4;
  (%124, %125)
}

def @func_13089() -> (Tensor[(40), uint8],) {
  @func_13087() /* ty=(Tensor[(40), uint8],) */
}

def @func_3620() -> Tensor[(1560), float64] {
  @func_3618() /* ty=Tensor[(1560), float64] */
}

def @func_10675() -> (Tensor[(1560), float64],) {
  @func_10673() /* ty=(Tensor[(1560), float64],) */
}

def @func_8669() -> (Tensor[(1560), float64], Tensor[(12, 12, 3), float32], Tensor[(40), uint8]) {
  %126 = @func_3933() /* ty=(Tensor[(12, 12, 3), float32],) */;
  %127 = @func_7949() /* ty=(Tensor[(40), uint8],) */;
  %128 = @func_3618() /* ty=Tensor[(1560), float64] */;
  %129 = %126.0;
  %130 = %127.0;
  (%128, %129, %130)
}

def @func_9727(%var_9725: Tensor[(432), float32]) -> (Tensor[(1560), float64], Tensor[(12, 12, 3), uint8], Tensor[(432), float32]) {
  @func_9724(%var_9725) /* ty=(Tensor[(1560), float64], Tensor[(12, 12, 3), uint8], Tensor[(432), float32]) */
}

def @func_12081() -> (Tensor[(12, 12, 3), float32],) {
  @func_12079() /* ty=(Tensor[(12, 12, 3), float32],) */
}

def @func_10824() -> (Tensor[(1560), float64], Tensor[(1560), bool]) {
  @func_10822() /* ty=(Tensor[(1560), float64], Tensor[(1560), bool]) */
}

def @func_11897() -> (Tensor[(12, 12, 3), int16], Tensor[(40), uint8], Tensor[(12, 12, 3), float32]) {
  %136 = fn () -> (Tensor[(12, 12, 3), int16], Tensor[(40), uint8], Tensor[(12, 12, 3), float32]) {
    %131 = @func_9949() /* ty=(Tensor[(12, 12, 3), int16],) */;
    %132 = @func_11551() /* ty=(Tensor[(12, 12, 3), float32],) */;
    %133 = %131.0;
    %134 = @func_9055() /* ty=Tensor[(40), uint8] */;
    %135 = %132.0;
    (%133, %134, %135)
  };
  %136() /* ty=(Tensor[(12, 12, 3), int16], Tensor[(40), uint8], Tensor[(12, 12, 3), float32]) */
}

def @func_10765() -> (Tensor[(40), uint8],) {
  @func_10763() /* ty=(Tensor[(40), uint8],) */
}

def @func_5259(%var_5249: Tensor[(16, 14, 10), uint64]) -> Tensor[(16, 14, 10), uint64] {
  %137 = cast(%var_5249, dtype="uint64") /* ty=Tensor[(16, 14, 10), uint64] */;
  %138 = shape_of(meta[relay.Constant][9] /* ty=Tensor[(16, 14, 10), uint64] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %139 = cast(meta[relay.Constant][9] /* ty=Tensor[(16, 14, 10), uint64] */, dtype="uint64") /* ty=Tensor[(16, 14, 10), uint64] */;
  %140 = dyn.reshape(%137, %138, newshape=[]) /* ty=Tensor[(?, ?, ?), uint64] */;
  right_shift(%139, %140) /* ty=Tensor[(16, 14, 10), uint64] */
}

def @func_6391() -> (Tensor[(12, 12, 3), float32], Tensor[(1560), float64]) {
  %145 = fn () -> (Tensor[(12, 12, 3), float32], Tensor[(1560), float64]) {
    %141 = @func_5342() /* ty=(Tensor[(12, 12, 3), float32],) */;
    %142 = @func_4739() /* ty=(Tensor[(1560), float64], Tensor[(12, 12, 3), float32]) */;
    %143 = %141.0;
    %144 = %142.0;
    (%143, %144)
  };
  %145() /* ty=(Tensor[(12, 12, 3), float32], Tensor[(1560), float64]) */
}

def @func_8350() -> (Tensor[(40), uint8],) {
  %147 = fn () -> (Tensor[(40), uint8],) {
    %146 = @func_4904() /* ty=Tensor[(40), uint8] */;
    (%146,)
  };
  %147() /* ty=(Tensor[(40), uint8],) */
}

def @func_956(%var_933: Tensor[(1, 8, 5), float64], %var_952: Tensor[(144), float64]) -> (Tensor[(15, 8, 5), bool], Tensor[(9, 1, 16), float64], Tensor[(144), float64]) {
  %148 = cast(%var_933, dtype="float64") /* ty=Tensor[(1, 8, 5), float64] */;
  %149 = cast(meta[relay.Constant][10] /* ty=Tensor[(15, 8, 5), float64] */, dtype="float64") /* ty=Tensor[(15, 8, 5), float64] */;
  %150 = multiply(%148, %149) /* ty=Tensor[(15, 8, 5), float64] */;
  %151 = cast(%var_933, dtype="int16") /* ty=Tensor[(1, 8, 5), int16] */;
  %152 = cast(meta[relay.Constant][10] /* ty=Tensor[(15, 8, 5), float64] */, dtype="int16") /* ty=Tensor[(15, 8, 5), int16] */;
  %153 = left_shift(%151, %152) /* ty=Tensor[(15, 8, 5), int16] */;
  %154 = cast(%153, dtype="bool") /* ty=Tensor[(15, 8, 5), bool] */;
  %155 = shape_of(%150, dtype="int32") /* ty=Tensor[(3), int32] */;
  %156 = cast(%150, dtype="bool") /* ty=Tensor[(15, 8, 5), bool] */;
  %157 = dyn.reshape(%154, %155, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %158 = cast(%var_952, dtype="float64") /* ty=Tensor[(144), float64] */;
  %159 = reshape(%158, newshape=[9, 1, 16]) /* ty=Tensor[(9, 1, 16), float64] */;
  %160 = @func_672(%159) /* ty=(Tensor[(9, 1, 16), float64],) */;
  %161 = greater(%156, %157) /* ty=Tensor[(15, 8, 5), bool] */;
  %162 = %160.0;
  (%161, %162, %var_952)
}

def @func_5582() -> (Tensor[(12, 130), uint16], Tensor[(12, 130), float64]) {
  %163 = @func_4637() /* ty=(Tensor[(12, 130), float64],) */;
  %164 = %163.0;
  %165 = @func_3618() /* ty=Tensor[(1560), float64] */;
  %166 = cast(%165, dtype="uint16") /* ty=Tensor[(1560), uint16] */;
  %167 = shape_of(%164, dtype="int32") /* ty=Tensor[(2), int32] */;
  %168 = cast(%164, dtype="uint16") /* ty=Tensor[(12, 130), uint16] */;
  %169 = dyn.reshape(%166, %167, newshape=[]) /* ty=Tensor[(?, ?), uint16] */;
  %170 = cast(meta[relay.Constant][11] /* ty=Tensor[(12, 130), float64] */, dtype="float64") /* ty=Tensor[(12, 130), float64] */;
  %171 = shape_of(%164, dtype="int32") /* ty=Tensor[(2), int32] */;
  %172 = cast(%164, dtype="float64") /* ty=Tensor[(12, 130), float64] */;
  %173 = dyn.reshape(%170, %171, newshape=[]) /* ty=Tensor[(?, ?), float64] */;
  %174 = logical_xor(%168, %169) /* ty=Tensor[(12, 130), uint16] */;
  %175 = divide(%172, %173) /* ty=Tensor[(12, 130), float64] */;
  (%174, %175)
}

def @func_5980() -> Tensor[(12, 12, 3), float32] {
  %176 = fn () -> Tensor[(12, 12, 3), float32] {
    @func_5188() /* ty=Tensor[(12, 12, 3), float32] */
  };
  %176() /* ty=Tensor[(12, 12, 3), float32] */
}

def @func_5879() -> Tensor[(12, 12, 3), float32] {
  %178 = fn () -> Tensor[(12, 12, 3), float32] {
    %177 = @func_3713() /* ty=(Tensor[(12, 12, 3), float32],) */;
    %177.0
  };
  %178() /* ty=Tensor[(12, 12, 3), float32] */
}

def @func_10022() -> (Tensor[(40), uint8],) {
  %180 = fn () -> (Tensor[(40), uint8],) {
    %179 = @func_9055() /* ty=Tensor[(40), uint8] */;
    (%179,)
  };
  %180() /* ty=(Tensor[(40), uint8],) */
}

def @func_11817(%var_11816: Tensor[(945), uint32]) -> (Tensor[(1560), float64], Tensor[(1560), float64], Tensor[(40), uint8], Tensor[(15, 8, 5), bool], Tensor[(24, 6), float64], Tensor[(140, 16), int32], Tensor[(945), uint32], Tensor[(14, ?, 11), bool], Tensor[(154), float64], Tensor[(12, 130), bool], Tensor[(12, 12, 3), float32]) {
  %206 = fn (%var_11778: Tensor[(945), uint32]) -> (Tensor[(1560), float64], Tensor[(1560), float64], Tensor[(40), uint8], Tensor[(15, 8, 5), bool], Tensor[(24, 6), float64], Tensor[(140, 16), int32], Tensor[(945), uint32], Tensor[(14, ?, 11), bool], Tensor[(154), float64], Tensor[(12, 130), bool], Tensor[(12, 12, 3), float32]) {
    %181 = @func_4739() /* ty=(Tensor[(1560), float64], Tensor[(12, 12, 3), float32]) */;
    %182 = @func_9067() /* ty=(Tensor[(40), uint8],) */;
    %183 = %182.0;
    %184 = cast(%183, dtype="float64") /* ty=Tensor[(40), float64] */;
    %185 = cast(meta[relay.Constant][12] /* ty=Tensor[(24, 6), float64] */, dtype="float64") /* ty=Tensor[(24, 6), float64] */;
    %186 = reshape(%184, newshape=[1, 8, 5]) /* ty=Tensor[(1, 8, 5), float64] */;
    %187 = reshape(%185, newshape=[144]) /* ty=Tensor[(144), float64] */;
    %188 = @func_956(%186, %187) /* ty=(Tensor[(15, 8, 5), bool], Tensor[(9, 1, 16), float64], Tensor[(144), float64]) */;
    %189 = cast(%var_11778, dtype="uint32") /* ty=Tensor[(945), uint32] */;
    %190 = reshape(%189, newshape=[1, 945]) /* ty=Tensor[(1, 945), uint32] */;
    %191 = @func_11383(%190) /* ty=(Tensor[(12, 12, 3), float32], Tensor[(140, 16), int32], Tensor[(1, 945), int32]) */;
    %192 = cast(meta[relay.Constant][13] /* ty=Tensor[(154), float64] */, dtype="float64") /* ty=Tensor[(154), float64] */;
    %193 = reshape(%192, newshape=[14, 1, 11]) /* ty=Tensor[(14, 1, 11), float64] */;
    %194 = @func_4249(%193) /* ty=(Tensor[(14, ?, 11), bool], Tensor[(14, ?, 11), bool]) */;
    %195 = %181.0;
    %196 = cast(%195, dtype="float64") /* ty=Tensor[(1560), float64] */;
    %197 = reshape(%196, newshape=[12, 130]) /* ty=Tensor[(12, 130), float64] */;
    %198 = @func_10786(%197) /* ty=(Tensor[(12, 130), bool],) */;
    %199 = @func_2829() /* ty=(Tensor[(12, 12, 3), float32], Tensor[(10, 12, 13), float64], Tensor[(12, 130), float64]) */;
    %200 = @func_4791() /* ty=Tensor[(1560), float64] */;
    %201 = %188.0;
    %202 = %191.1;
    %203 = %194.1;
    %204 = %198.0;
    %205 = %199.0;
    (%195, %200, %183, %201, meta[relay.Constant][12] /* ty=Tensor[(24, 6), float64] */, %202, %var_11778, %203, meta[relay.Constant][13] /* ty=Tensor[(154), float64] */, %204, %205)
  };
  %206(%var_11816) /* ty=(Tensor[(1560), float64], Tensor[(1560), float64], Tensor[(40), uint8], Tensor[(15, 8, 5), bool], Tensor[(24, 6), float64], Tensor[(140, 16), int32], Tensor[(945), uint32], Tensor[(14, ?, 11), bool], Tensor[(154), float64], Tensor[(12, 130), bool], Tensor[(12, 12, 3), float32]) */
}

def @func_4066() -> (Tensor[(12, 12, 3), float32],) {
  %209 = fn () -> (Tensor[(12, 12, 3), float32],) {
    %207 = @func_3933() /* ty=(Tensor[(12, 12, 3), float32],) */;
    %208 = %207.0;
    (%208,)
  };
  %209() /* ty=(Tensor[(12, 12, 3), float32],) */
}

def @func_6084() -> (Tensor[(12, 130), float64], Tensor[(40), uint8]) {
  %213 = fn () -> (Tensor[(12, 130), float64], Tensor[(40), uint8]) {
    %210 = @func_4637() /* ty=(Tensor[(12, 130), float64],) */;
    %211 = %210.0;
    %212 = @func_5306() /* ty=Tensor[(40), uint8] */;
    (%211, %212)
  };
  %213() /* ty=(Tensor[(12, 130), float64], Tensor[(40), uint8]) */
}

def @func_9538() -> Tensor[(12, 12, 3), float32] {
  %215 = fn () -> Tensor[(12, 12, 3), float32] {
    %214 = @func_8180() /* ty=(Tensor[(12, 12, 3), float32], Tensor[(12, 12, 3), float32], Tensor[(1560), float64], Tensor[(2, 20), float64]) */;
    %214.0
  };
  %215() /* ty=Tensor[(12, 12, 3), float32] */
}

def @func_11551() -> (Tensor[(12, 12, 3), float32],) {
  %216 = @func_8586() /* ty=(Tensor[(12, 12, 3), float32],) */;
  %217 = %216.0;
  (%217,)
}

def @func_6943(%var_6942: Tensor[(1, 6, 5), float64]) -> Tensor[(1, 6, 5), float64] {
  %219 = fn (%var_6938: Tensor[(1, 6, 5), float64]) -> Tensor[(1, 6, 5), float64] {
    %218 = cast(%var_6938, dtype="float64") /* ty=Tensor[(1, 6, 5), float64] */;
    erf(%218) /* ty=Tensor[(1, 6, 5), float64] */
  };
  %219(%var_6942) /* ty=Tensor[(1, 6, 5), float64] */
}

def @func_6655() -> Tensor[(1560), float64] {
  %220 = @func_4923() /* ty=(Tensor[(1560), float64],) */;
  %220.0
}

def @func_8417() -> (Tensor[(40), uint8],) {
  @func_8415() /* ty=(Tensor[(40), uint8],) */
}

def @func_9578() -> (Tensor[(40), uint8], uint8) {
  %225 = fn () -> (Tensor[(40), uint8], uint8) {
    %221 = @func_8349() /* ty=(Tensor[(40), uint8],) */;
    %222 = @func_8618() /* ty=(Tensor[(140, 16), int32], Tensor[(7, 3, 11), float64], Tensor[(231), float64], uint8, Tensor[(1560), float64], uint8) */;
    %223 = %221.0;
    %224 = %222.5;
    (%223, %224)
  };
  %225() /* ty=(Tensor[(40), uint8], uint8) */
}

def @func_8107() -> (Tensor[(12, 12, 3), float32],) {
  %226 = @func_4065() /* ty=(Tensor[(12, 12, 3), float32],) */;
  %227 = %226.0;
  (%227,)
}

def @func_3582(%var_3580: Tensor[(40, 1), float64], %var_3581: Tensor[(144), float64]) -> (Tensor[(12, 12, 3), float32], Tensor[(15, 8, 5), bool], Tensor[(40, 1), float64], Tensor[(144), float64]) {
  %236 = fn (%var_3576: Tensor[(40, 1), float64], %var_3577: Tensor[(144), float64]) -> (Tensor[(12, 12, 3), float32], Tensor[(15, 8, 5), bool], Tensor[(40, 1), float64], Tensor[(144), float64]) {
    %228 = @func_2864() /* ty=(Tensor[(12, 12, 3), float32],) */;
    %229 = cast(%var_3576, dtype="float64") /* ty=Tensor[(40, 1), float64] */;
    %230 = cast(%var_3577, dtype="float64") /* ty=Tensor[(144), float64] */;
    %231 = reshape(%229, newshape=[1, 8, 5]) /* ty=Tensor[(1, 8, 5), float64] */;
    %232 = reshape(%230, newshape=[144]) /* ty=Tensor[(144), float64] */;
    %233 = @func_956(%231, %232) /* ty=(Tensor[(15, 8, 5), bool], Tensor[(9, 1, 16), float64], Tensor[(144), float64]) */;
    %234 = %228.0;
    %235 = %233.0;
    (%234, %235, %var_3576, %var_3577)
  };
  %236(%var_3580, %var_3581) /* ty=(Tensor[(12, 12, 3), float32], Tensor[(15, 8, 5), bool], Tensor[(40, 1), float64], Tensor[(144), float64]) */
}

def @func_6724() -> (Tensor[(12, 12, 3), float32], Tensor[(154, 1), float64], Tensor[(165, 3), uint64]) {
  @func_6722() /* ty=(Tensor[(12, 12, 3), float32], Tensor[(154, 1), float64], Tensor[(165, 3), uint64]) */
}

def @func_10004(%var_10002: Tensor[(12, 12, 3), float32]) -> Tensor[(12, 12, 3), int8] {
  @func_10001(%var_10002) /* ty=Tensor[(12, 12, 3), int8] */
}

def @func_11383(%var_11355: Tensor[(1, 945), uint32]) -> (Tensor[(12, 12, 3), float32], Tensor[(140, 16), int32], Tensor[(1, 945), int32]) {
  %237 = cast(meta[relay.Constant][14] /* ty=uint8 */, dtype="uint8") /* ty=uint8 */;
  %238 = cast(%var_11355, dtype="uint32") /* ty=Tensor[(1, 945), uint32] */;
  %239 = reshape(%237, newshape=[]) /* ty=uint8 */;
  %240 = reshape(%238, newshape=[945]) /* ty=Tensor[(945), uint32] */;
  %241 = @func_10649(%239, %240) /* ty=(Tensor[(14, ?, 11), bool], Tensor[(?, 8, 5), int32], uint8, Tensor[(15, 7, 9), bool], Tensor[(945), uint32], Tensor[(140, 16), int32], Tensor[(12, 12, 3), float32]) */;
  %242 = cast(%var_11355, dtype="int32") /* ty=Tensor[(1, 945), int32] */;
  %243 = cast(meta[relay.Constant][14] /* ty=uint8 */, dtype="int32") /* ty=int32 */;
  %244 = @func_5188() /* ty=Tensor[(12, 12, 3), float32] */;
  %245 = %241.5;
  %246 = minimum(%242, %243) /* ty=Tensor[(1, 945), int32] */;
  (%244, %245, %246)
}

def @func_12322() -> Tensor[(12, 12, 3), float32] {
  @func_4441() /* ty=Tensor[(12, 12, 3), float32] */
}

def @func_9836(%var_9835: Tensor[(40), uint8]) -> (Tensor[(40), uint8], Tensor[(12, 12, 3), float64], Tensor[(12, 12, 3), float32]) {
  %263 = fn (%var_9791: Tensor[(40), uint8]) -> (Tensor[(40), uint8], Tensor[(12, 12, 3), float64], Tensor[(12, 12, 3), float32]) {
    %247 = @func_4522() /* ty=Tensor[(12, 12, 3), float32] */;
    %248 = cast(%var_9791, dtype="uint8") /* ty=Tensor[(40), uint8] */;
    %249 = cast(%247, dtype="float32") /* ty=Tensor[(12, 12, 3), float32] */;
    %250 = cast(%247, dtype="float64") /* ty=Tensor[(12, 12, 3), float64] */;
    %251 = reshape(%248, newshape=[40]) /* ty=Tensor[(40), uint8] */;
    %252 = reshape(%249, newshape=[12, 12, 3]) /* ty=Tensor[(12, 12, 3), float32] */;
    %253 = reshape(%250, newshape=[12, 12, 3]) /* ty=Tensor[(12, 12, 3), float64] */;
    %254 = @func_3519(%251, %252, %253) /* ty=(Tensor[(12, 12, 3), float32], Tensor[(132), float32], uint8, Tensor[(40), uint8], Tensor[(12, 12, 3), float64], Tensor[(12, 12, 3), float32], Tensor[(10, 12, 13), float64], Tensor[(1, 1560), float64], Tensor[(12, 12, 3), float64], Tensor[(12, 12, 3), int8]) */;
    %255 = %254.4;
    %256 = cast(%255, dtype="float64") /* ty=Tensor[(12, 12, 3), float64] */;
    %257 = shape_of(%247, dtype="int32") /* ty=Tensor[(3), int32] */;
    %258 = cast(%247, dtype="float64") /* ty=Tensor[(12, 12, 3), float64] */;
    %259 = dyn.reshape(%256, %257, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
    %260 = @func_8680() /* ty=(Tensor[(12, 12, 3), float32],) */;
    %261 = floor_mod(%258, %259) /* ty=Tensor[(12, 12, 3), float64] */;
    %262 = %260.0;
    (%var_9791, %261, %262)
  };
  %263(%var_9835) /* ty=(Tensor[(40), uint8], Tensor[(12, 12, 3), float64], Tensor[(12, 12, 3), float32]) */
}

def @func_12821(%var_12766: Tensor[(1560), float64], %var_12767: Tensor[(1, 132), float32]) -> (Tensor[(12, 12, 3), int16], Tensor[(40), uint8], Tensor[(?, 14, 9), float32], Tensor[(1560), float64], Tensor[(1, 132), float32], Tensor[(2, 20), uint8]) {
  %264 = @func_11896() /* ty=(Tensor[(12, 12, 3), int16], Tensor[(40), uint8], Tensor[(12, 12, 3), float32]) */;
  %265 = cast(%var_12766, dtype="float64") /* ty=Tensor[(1560), float64] */;
  %266 = cast(%var_12767, dtype="float32") /* ty=Tensor[(1, 132), float32] */;
  %267 = reshape(%265, newshape=[10, 12, 13]) /* ty=Tensor[(10, 12, 13), float64] */;
  %268 = reshape(%266, newshape=[132]) /* ty=Tensor[(132), float32] */;
  %269 = @func_3182(%267, %268) /* ty=(Tensor[(10, 12, 13), bool], Tensor[(?, 14, 9), float32], uint8, Tensor[(3, 11, 4), float32], Tensor[(132), float32]) */;
  %270 = cast(%var_12766, dtype="float32") /* ty=Tensor[(1560), float32] */;
  %271 = reshape(%270, newshape=[1560]) /* ty=Tensor[(1560), float32] */;
  %272 = @func_11185(%271) /* ty=(Tensor[(40), uint8], Tensor[(2, 20), uint8], Tensor[(1560), float32]) */;
  %273 = %264.0;
  %274 = @func_10041() /* ty=Tensor[(40), uint8] */;
  %275 = %269.1;
  %276 = %272.1;
  (%273, %274, %275, %var_12766, %var_12767, %276)
}

def @func_6524(%var_6443: Tensor[(12, 12, 3), float32], %var_6461: Tensor[(22, 7), float64], %var_6476: Tensor[(49), float64], %var_6477: Tensor[(637), float64], %var_6478: Tensor[(20, 2), float64], %var_6479: Tensor[(2, 72), float64]) -> (Tensor[(12, 12, 3), bool], Tensor[(12, 12, 3), float32], Tensor[(12, 12, 3), float32], Tensor[(12, 12, 3), float32], Tensor[(49), float64], Tensor[(637), float64], Tensor[(20, 2), float64], Tensor[(2, 72), float64], Tensor[(14, ?, 11), bool], Tensor[(2, 20), uint8], Tensor[(12, 12, 3), float32], Tensor[(14, ?, 11), int64]) {
  %277 = @func_4522() /* ty=Tensor[(12, 12, 3), float32] */;
  %278 = cast(%var_6443, dtype="bool") /* ty=Tensor[(12, 12, 3), bool] */;
  %279 = shape_of(%277, dtype="int32") /* ty=Tensor[(3), int32] */;
  %280 = cast(%277, dtype="bool") /* ty=Tensor[(12, 12, 3), bool] */;
  %281 = dyn.reshape(%278, %279, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %282 = cast(%var_6476, dtype="float64") /* ty=Tensor[(49), float64] */;
  %283 = cast(%var_6477, dtype="float64") /* ty=Tensor[(637), float64] */;
  %284 = cast(%var_6478, dtype="float64") /* ty=Tensor[(20, 2), float64] */;
  %285 = cast(%var_6479, dtype="float64") /* ty=Tensor[(2, 72), float64] */;
  %286 = reshape(%282, newshape=[7, 1, 7]) /* ty=Tensor[(7, 1, 7), float64] */;
  %287 = reshape(%283, newshape=[7, 13, 7]) /* ty=Tensor[(7, 13, 7), float64] */;
  %288 = reshape(%284, newshape=[40]) /* ty=Tensor[(40), float64] */;
  %289 = reshape(%285, newshape=[144, 1]) /* ty=Tensor[(144, 1), float64] */;
  %290 = @func_3896(%286, %287, %288, %289) /* ty=(Tensor[(7, 13, 7), float64], Tensor[(12, 12, 3), float32], Tensor[(12, 12, 3), float32], Tensor[(40), float64], Tensor[(144, 1), float64], Tensor[(15, 8, 5), float64]) */;
  %291 = cast(%var_6461, dtype="float64") /* ty=Tensor[(22, 7), float64] */;
  %292 = reshape(%291, newshape=[14, 1, 11]) /* ty=Tensor[(14, 1, 11), float64] */;
  %293 = @func_4249(%292) /* ty=(Tensor[(14, ?, 11), bool], Tensor[(14, ?, 11), bool]) */;
  %294 = %293.0;
  %295 = cast(%294, dtype="float64") /* ty=Tensor[(14, ?, 11), float64] */;
  %296 = sin(%295) /* ty=Tensor[(14, ?, 11), float64] */;
  %297 = cast(%var_6461, dtype="uint32") /* ty=Tensor[(22, 7), uint32] */;
  %298 = shape_of(%296, dtype="int32") /* ty=Tensor[(3), int32] */;
  %299 = cast(%296, dtype="uint32") /* ty=Tensor[(14, ?, 11), uint32] */;
  %300 = dyn.reshape(%297, %298, newshape=[]) /* ty=Tensor[(?, ?, ?), uint32] */;
  %301 = minimum(%299, %300) /* ty=Tensor[(14, ?, 11), uint32] */;
  %302 = cast(%294, dtype="bool") /* ty=Tensor[(14, ?, 11), bool] */;
  %303 = shape_of(%301, dtype="int32") /* ty=Tensor[(3), int32] */;
  %304 = cast(%301, dtype="bool") /* ty=Tensor[(14, ?, 11), bool] */;
  %305 = dyn.reshape(%302, %303, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %306 = cast(%var_6478, dtype="uint8") /* ty=Tensor[(20, 2), uint8] */;
  %307 = reshape(%306, newshape=[2, 20]) /* ty=Tensor[(2, 20), uint8] */;
  %308 = @func_4312(%307) /* ty=(Tensor[(12, 12, 3), int32], Tensor[(3, 11, 4), float32], uint8, Tensor[(1560), float64], Tensor[(12, 12, 3), float64], Tensor[(3, 11, 4), float32], Tensor[(2, 20), uint8]) */;
  %309 = @func_2864() /* ty=(Tensor[(12, 12, 3), float32],) */;
  %310 = cast(%301, dtype="float64") /* ty=Tensor[(14, ?, 11), float64] */;
  %311 = reshape(%310, newshape=[14, 1, 11]) /* ty=Tensor[(14, 1, 11), float64] */;
  %312 = @func_4249(%311) /* ty=(Tensor[(14, ?, 11), bool], Tensor[(14, ?, 11), bool]) */;
  %313 = %312.1;
  %314 = cast(%294, dtype="int64") /* ty=Tensor[(14, ?, 11), int64] */;
  %315 = shape_of(%313, dtype="int32") /* ty=Tensor[(3), int32] */;
  %316 = cast(%313, dtype="int64") /* ty=Tensor[(14, ?, 11), int64] */;
  %317 = dyn.reshape(%314, %315, newshape=[]) /* ty=Tensor[(?, ?, ?), int64] */;
  %318 = less_equal(%280, %281) /* ty=Tensor[(12, 12, 3), bool] */;
  %319 = @func_3372() /* ty=Tensor[(12, 12, 3), float32] */;
  %320 = @func_3372() /* ty=Tensor[(12, 12, 3), float32] */;
  %321 = %290.2;
  %322 = greater_equal(%304, %305) /* ty=Tensor[(14, ?, 11), bool] */;
  %323 = %308.6;
  %324 = %309.0;
  %325 = add(%316, %317) /* ty=Tensor[(14, ?, 11), int64] */;
  (%318, %319, %320, %321, %var_6476, %var_6477, %var_6478, %var_6479, %322, %323, %324, %325)
}

def @func_99(%var_98: Tensor[(3, 11, 4), float32]) -> Tensor[(3, 11, 4), float32] {
  %327 = fn (%var_90: Tensor[(3, 11, 4), float32]) -> Tensor[(3, 11, 4), float32] {
    %326 = cast(%var_90, dtype="float32") /* ty=Tensor[(3, 11, 4), float32] */;
    sigmoid(%326) /* ty=Tensor[(3, 11, 4), float32] */
  };
  %327(%var_98) /* ty=Tensor[(3, 11, 4), float32] */
}

def @func_3182(%var_3164: Tensor[(10, 12, 13), float64], %var_3179: Tensor[(132), float32]) -> (Tensor[(10, 12, 13), bool], Tensor[(?, 14, 9), float32], uint8, Tensor[(3, 11, 4), float32], Tensor[(132), float32]) {
  %328 = @func_2829() /* ty=(Tensor[(12, 12, 3), float32], Tensor[(10, 12, 13), float64], Tensor[(12, 130), float64]) */;
  %329 = %328.1;
  %330 = cast(%var_3164, dtype="bool") /* ty=Tensor[(10, 12, 13), bool] */;
  %331 = shape_of(%329, dtype="int32") /* ty=Tensor[(3), int32] */;
  %332 = cast(%329, dtype="bool") /* ty=Tensor[(10, 12, 13), bool] */;
  %333 = dyn.reshape(%330, %331, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %334 = cast(meta[relay.Constant][15] /* ty=uint8 */, dtype="uint8") /* ty=uint8 */;
  %335 = reshape(%334, newshape=[]) /* ty=uint8 */;
  %336 = @func_788(%335) /* ty=(Tensor[(3, 11, 4), float32], uint8, Tensor[(40, 1), uint8], Tensor[(1, 14, 9), float64], Tensor[(?, 14, 9), float32], Tensor[(3, 11, 4), float32]) */;
  %337 = cast(%var_3179, dtype="float32") /* ty=Tensor[(132), float32] */;
  %338 = reshape(%337, newshape=[3, 11, 4]) /* ty=Tensor[(3, 11, 4), float32] */;
  %339 = greater(%332, %333) /* ty=Tensor[(10, 12, 13), bool] */;
  %340 = %336.4;
  %341 = @func_97(%338) /* ty=Tensor[(3, 11, 4), float32] */;
  (%339, %340, meta[relay.Constant][15] /* ty=uint8 */, %341, %var_3179)
}

def @func_12669() -> (Tensor[(12, 12, 3), float32], Tensor[(12, 12, 3), float32], Tensor[(12, 12, 3), float32]) {
  %345 = fn () -> (Tensor[(12, 12, 3), float32], Tensor[(12, 12, 3), float32], Tensor[(12, 12, 3), float32]) {
    %342 = @func_4522() /* ty=Tensor[(12, 12, 3), float32] */;
    %343 = @func_9537() /* ty=Tensor[(12, 12, 3), float32] */;
    %344 = @func_10896() /* ty=Tensor[(12, 12, 3), float32] */;
    (%342, %343, %344)
  };
  %345() /* ty=(Tensor[(12, 12, 3), float32], Tensor[(12, 12, 3), float32], Tensor[(12, 12, 3), float32]) */
}

def @func_3373() -> Tensor[(12, 12, 3), float32] {
  %347 = fn () -> Tensor[(12, 12, 3), float32] {
    %346 = @func_2864() /* ty=(Tensor[(12, 12, 3), float32],) */;
    %346.0
  };
  %347() /* ty=Tensor[(12, 12, 3), float32] */
}

def @func_5584() -> (Tensor[(12, 130), uint16], Tensor[(12, 130), float64]) {
  @func_5582() /* ty=(Tensor[(12, 130), uint16], Tensor[(12, 130), float64]) */
}

def @func_6937() -> (Tensor[(12, 12, 3), float32], Tensor[(13, 15, 2), int32], Tensor[(390), int32]) {
  %353 = fn () -> (Tensor[(12, 12, 3), float32], Tensor[(13, 15, 2), int32], Tensor[(390), int32]) {
    %348 = @func_5342() /* ty=(Tensor[(12, 12, 3), float32],) */;
    %349 = cast(meta[relay.Constant][16] /* ty=Tensor[(390), int32] */, dtype="int32") /* ty=Tensor[(390), int32] */;
    %350 = reshape(%349, newshape=[13, 15, 2]) /* ty=Tensor[(13, 15, 2), int32] */;
    %351 = %348.0;
    %352 = @func_6843(%350) /* ty=Tensor[(13, 15, 2), int32] */;
    (%351, %352, meta[relay.Constant][16] /* ty=Tensor[(390), int32] */)
  };
  %353() /* ty=(Tensor[(12, 12, 3), float32], Tensor[(13, 15, 2), int32], Tensor[(390), int32]) */
}

def @func_10618() -> (Tensor[(1560), float64],) {
  %355 = fn () -> (Tensor[(1560), float64],) {
    %354 = @func_8130() /* ty=Tensor[(1560), float64] */;
    (%354,)
  };
  %355() /* ty=(Tensor[(1560), float64],) */
}

def @func_8109() -> (Tensor[(12, 12, 3), float32],) {
  @func_8107() /* ty=(Tensor[(12, 12, 3), float32],) */
}

def @func_10233(%var_10232: Tensor[(33, 7), float64]) -> (Tensor[(12, 12, 3), int16], Tensor[(1560), float32], Tensor[(1560), float64], Tensor[(9, 1, 16), float64], Tensor[(144), float64], Tensor[(12, 12, 3), float32], Tensor[(33, 7), float64], uint8, Tensor[(2, 20), float64]) {
  %375 = fn (%var_10222: Tensor[(33, 7), float64]) -> (Tensor[(12, 12, 3), int16], Tensor[(1560), float32], Tensor[(1560), float64], Tensor[(9, 1, 16), float64], Tensor[(144), float64], Tensor[(12, 12, 3), float32], Tensor[(33, 7), float64], uint8, Tensor[(2, 20), float64]) {
    %356 = @func_9949() /* ty=(Tensor[(12, 12, 3), int16],) */;
    %357 = @func_6390() /* ty=(Tensor[(12, 12, 3), float32], Tensor[(1560), float64]) */;
    %358 = cast(meta[relay.Constant][17] /* ty=Tensor[(144), float64] */, dtype="float64") /* ty=Tensor[(144), float64] */;
    %359 = reshape(%358, newshape=[9, 1, 16]) /* ty=Tensor[(9, 1, 16), float64] */;
    %360 = @func_672(%359) /* ty=(Tensor[(9, 1, 16), float64],) */;
    %361 = cast(%var_10222, dtype="float64") /* ty=Tensor[(33, 7), float64] */;
    %362 = cast(meta[relay.Constant][18] /* ty=uint8 */, dtype="uint8") /* ty=uint8 */;
    %363 = %357.1;
    %364 = cast(%363, dtype="float64") /* ty=Tensor[(1560), float64] */;
    %365 = reshape(%361, newshape=[231]) /* ty=Tensor[(231), float64] */;
    %366 = reshape(%362, newshape=[]) /* ty=uint8 */;
    %367 = reshape(%364, newshape=[2, 780]) /* ty=Tensor[(2, 780), float64] */;
    %368 = @func_3690(%365, %366, %367) /* ty=(Tensor[(12, 12, 3), float32], uint8, Tensor[(2, 780), float64], Tensor[(231), float32], Tensor[(1560), float64], Tensor[(10, 12, 13), float64], uint8, Tensor[(132), float32]) */;
    %369 = @func_3254() /* ty=(Tensor[(12, 130), float64], Tensor[(1560), float64], Tensor[(33, 7), float64], uint8, Tensor[(7, 3, 11), float32], uint8, Tensor[(66), float64], Tensor[(40), uint8], Tensor[(2, 20), float64]) */;
    %370 = %356.0;
    %371 = @func_5679() /* ty=Tensor[(1560), float32] */;
    %372 = %360.0;
    %373 = %368.0;
    %374 = %369.8;
    (%370, %371, %363, %372, meta[relay.Constant][17] /* ty=Tensor[(144), float64] */, %373, %var_10222, meta[relay.Constant][18] /* ty=uint8 */, %374)
  };
  %375(%var_10232) /* ty=(Tensor[(12, 12, 3), int16], Tensor[(1560), float32], Tensor[(1560), float64], Tensor[(9, 1, 16), float64], Tensor[(144), float64], Tensor[(12, 12, 3), float32], Tensor[(33, 7), float64], uint8, Tensor[(2, 20), float64]) */
}

def @func_4251(%var_4250: Tensor[(14, 1, 11), float64]) -> (Tensor[(14, ?, 11), bool], Tensor[(14, ?, 11), bool]) {
  %388 = fn (%var_4214: Tensor[(14, 1, 11), float64]) -> (Tensor[(14, ?, 11), bool], Tensor[(14, ?, 11), bool]) {
    %376 = cast(%var_4214, dtype="float64") /* ty=Tensor[(14, 1, 11), float64] */;
    %377 = tan(%376) /* ty=Tensor[(14, 1, 11), float64] */;
    %378 = cast(%var_4214, dtype="bool") /* ty=Tensor[(14, 1, 11), bool] */;
    %379 = shape_of(%377, dtype="int32") /* ty=Tensor[(3), int32] */;
    %380 = cast(%377, dtype="bool") /* ty=Tensor[(14, 1, 11), bool] */;
    %381 = dyn.reshape(%378, %379, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    %382 = cast(%377, dtype="bool") /* ty=Tensor[(14, 1, 11), bool] */;
    %383 = shape_of(%var_4214, dtype="int32") /* ty=Tensor[(3), int32] */;
    %384 = cast(%var_4214, dtype="bool") /* ty=Tensor[(14, 1, 11), bool] */;
    %385 = dyn.reshape(%382, %383, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    %386 = logical_and(%380, %381) /* ty=Tensor[(14, ?, 11), bool] */;
    %387 = less_equal(%384, %385) /* ty=Tensor[(14, ?, 11), bool] */;
    (%386, %387)
  };
  %388(%var_4250) /* ty=(Tensor[(14, ?, 11), bool], Tensor[(14, ?, 11), bool]) */
}

def @func_7283() -> Tensor[(40), uint8] {
  %389 = @func_4819() /* ty=(Tensor[(40), uint8],) */;
  %389.0
}

def @func_5308() -> Tensor[(40), uint8] {
  @func_5306() /* ty=Tensor[(40), uint8] */
}

def @func_7018() -> (Tensor[(12, 12, 3), float32], Tensor[(12, 12, 3), int16]) {
  @func_7016() /* ty=(Tensor[(12, 12, 3), float32], Tensor[(12, 12, 3), int16]) */
}

def @func_12288(%var_12286: Tensor[(16, 10, 16), uint16], %var_12287: Tensor[(16, 10, 16), uint16]) -> (Tensor[(16, 10, 16), uint16], Tensor[(16, 10, 16), float32]) {
  @func_12284(%var_12286, %var_12287) /* ty=(Tensor[(16, 10, 16), uint16], Tensor[(16, 10, 16), float32]) */
}

def @func_6144() -> (Tensor[(12, 12, 3), float64], Tensor[(14, ?, 11), bool], Tensor[(1, 154), float64], Tensor[(1560), float64], Tensor[(12, 12, 3), int16], Tensor[(12, 12, 3), float32], Tensor[(12, 12, 3), float32]) {
  %414 = fn () -> (Tensor[(12, 12, 3), float64], Tensor[(14, ?, 11), bool], Tensor[(1, 154), float64], Tensor[(1560), float64], Tensor[(12, 12, 3), int16], Tensor[(12, 12, 3), float32], Tensor[(12, 12, 3), float32]) {
    %390 = @func_4965() /* ty=(Tensor[(12, 12, 3), float32], Tensor[(10, 12, 13), float64], Tensor[(1560, 1), float64], Tensor[(1560), float64], Tensor[(40, 1), float64], Tensor[(40), float64], Tensor[(144), float64]) */;
    %391 = %390.0;
    %392 = @func_4146() /* ty=(Tensor[(12, 12, 3), float32], Tensor[(12, 12, 3), float32], Tensor[(12, 12, 3), float32]) */;
    %393 = %392.0;
    %394 = cast(%393, dtype="float64") /* ty=Tensor[(12, 12, 3), float64] */;
    %395 = shape_of(%391, dtype="int32") /* ty=Tensor[(3), int32] */;
    %396 = cast(%391, dtype="float64") /* ty=Tensor[(12, 12, 3), float64] */;
    %397 = dyn.reshape(%394, %395, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
    %398 = cast(meta[relay.Constant][19] /* ty=Tensor[(1, 154), float64] */, dtype="float64") /* ty=Tensor[(1, 154), float64] */;
    %399 = reshape(%398, newshape=[14, 1, 11]) /* ty=Tensor[(14, 1, 11), float64] */;
    %400 = @func_4249(%399) /* ty=(Tensor[(14, ?, 11), bool], Tensor[(14, ?, 11), bool]) */;
    %401 = @func_4739() /* ty=(Tensor[(1560), float64], Tensor[(12, 12, 3), float32]) */;
    %402 = cast(%393, dtype="int16") /* ty=Tensor[(12, 12, 3), int16] */;
    %403 = shape_of(%391, dtype="int32") /* ty=Tensor[(3), int32] */;
    %404 = cast(%391, dtype="int16") /* ty=Tensor[(12, 12, 3), int16] */;
    %405 = dyn.reshape(%402, %403, newshape=[]) /* ty=Tensor[(?, ?, ?), int16] */;
    %406 = @func_5342() /* ty=(Tensor[(12, 12, 3), float32],) */;
    %407 = @func_5527() /* ty=(Tensor[(1560), float64], Tensor[(12, 12, 3), float32]) */;
    %408 = power(%396, %397) /* ty=Tensor[(12, 12, 3), float64] */;
    %409 = %400.0;
    %410 = %401.0;
    %411 = bitwise_or(%404, %405) /* ty=Tensor[(12, 12, 3), int16] */;
    %412 = %406.0;
    %413 = %407.1;
    (%408, %409, meta[relay.Constant][19] /* ty=Tensor[(1, 154), float64] */, %410, %411, %412, %413)
  };
  %414() /* ty=(Tensor[(12, 12, 3), float64], Tensor[(14, ?, 11), bool], Tensor[(1, 154), float64], Tensor[(1560), float64], Tensor[(12, 12, 3), int16], Tensor[(12, 12, 3), float32], Tensor[(12, 12, 3), float32]) */
}

def @func_13140() -> (Tensor[(12, 12, 3), float32], Tensor[(12, 130), float64]) {
  %415 = @func_10356() /* ty=(Tensor[(12, 12, 3), float32], Tensor[(2, 20), float64], Tensor[(12, 12, 3), float32]) */;
  %416 = %415.2;
  %417 = @func_10735() /* ty=Tensor[(12, 130), float64] */;
  (%416, %417)
}

def @func_6722() -> (Tensor[(12, 12, 3), float32], Tensor[(154, 1), float64], Tensor[(165, 3), uint64]) {
  %418 = @func_3713() /* ty=(Tensor[(12, 12, 3), float32],) */;
  %419 = cast(meta[relay.Constant][20] /* ty=Tensor[(165, 3), uint64] */, dtype="uint64") /* ty=Tensor[(165, 3), uint64] */;
  %420 = cast(meta[relay.Constant][20] /* ty=Tensor[(165, 3), uint64] */, dtype="uint64") /* ty=Tensor[(165, 3), uint64] */;
  %421 = reshape(%419, newshape=[11, 9, 5]) /* ty=Tensor[(11, 9, 5), uint64] */;
  %422 = reshape(%420, newshape=[11, 9, 5]) /* ty=Tensor[(11, 9, 5), uint64] */;
  %423 = @func_4401(%421, %422) /* ty=(Tensor[(11, 9, 5), uint64], Tensor[(11, 9, 5), float64], Tensor[(14, ?, 11), bool], Tensor[(154, 1), float64]) */;
  %424 = cast(meta[relay.Constant][20] /* ty=Tensor[(165, 3), uint64] */, dtype="float64") /* ty=Tensor[(165, 3), float64] */;
  %425 = sinh(%424) /* ty=Tensor[(165, 3), float64] */;
  %426 = cast(meta[relay.Constant][21] /* ty=Tensor[(165, 3), uint64] */, dtype="int8") /* ty=Tensor[(165, 3), int8] */;
  %427 = shape_of(meta[relay.Constant][20] /* ty=Tensor[(165, 3), uint64] */, dtype="int32") /* ty=Tensor[(2), int32] */;
  %428 = cast(meta[relay.Constant][20] /* ty=Tensor[(165, 3), uint64] */, dtype="int8") /* ty=Tensor[(165, 3), int8] */;
  %429 = dyn.reshape(%426, %427, newshape=[]) /* ty=Tensor[(?, ?), int8] */;
  %430 = subtract(%428, %429) /* ty=Tensor[(165, 3), int8] */;
  %431 = cast(%430, dtype="float32") /* ty=Tensor[(165, 3), float32] */;
  %432 = shape_of(%425, dtype="int32") /* ty=Tensor[(2), int32] */;
  %433 = cast(%425, dtype="float32") /* ty=Tensor[(165, 3), float32] */;
  %434 = dyn.reshape(%431, %432, newshape=[]) /* ty=Tensor[(?, ?), float32] */;
  %435 = divide(%433, %434) /* ty=Tensor[(165, 3), float32] */;
  %436 = cast(meta[relay.Constant][21] /* ty=Tensor[(165, 3), uint64] */, dtype="uint64") /* ty=Tensor[(165, 3), uint64] */;
  %437 = shape_of(%435, dtype="int32") /* ty=Tensor[(2), int32] */;
  %438 = cast(%435, dtype="uint64") /* ty=Tensor[(165, 3), uint64] */;
  %439 = dyn.reshape(%436, %437, newshape=[]) /* ty=Tensor[(?, ?), uint64] */;
  %440 = %418.0;
  %441 = %423.3;
  %442 = add(%438, %439) /* ty=Tensor[(165, 3), uint64] */;
  (%440, %441, %442)
}

def @func_4768(%var_4751: Tensor[(132), float32], %var_4757: Tensor[(40, 1), float64]) -> (Tensor[(1560), float64], Tensor[(3, 11, 4), float32], Tensor[(132), float32], Tensor[(40), float64], Tensor[(40, 1), float64]) {
  %443 = @func_4482() /* ty=(Tensor[(12, 12, 3), float32], Tensor[(1560), float64], Tensor[(12, 130), float64]) */;
  %444 = cast(%var_4751, dtype="float32") /* ty=Tensor[(132), float32] */;
  %445 = reshape(%444, newshape=[3, 11, 4]) /* ty=Tensor[(3, 11, 4), float32] */;
  %446 = @func_97(%445) /* ty=Tensor[(3, 11, 4), float32] */;
  %447 = cast(%446, dtype="float32") /* ty=Tensor[(3, 11, 4), float32] */;
  %448 = cast(%var_4757, dtype="float64") /* ty=Tensor[(40, 1), float64] */;
  %449 = reshape(%447, newshape=[132]) /* ty=Tensor[(132), float32] */;
  %450 = reshape(%448, newshape=[40]) /* ty=Tensor[(40), float64] */;
  %451 = @func_3352(%449, %450) /* ty=(Tensor[(12, 12, 3), float32], uint8, Tensor[(1560), float64], Tensor[(132), float32], Tensor[(12, 12, 3), float32], Tensor[(9, 1, 16), float64], Tensor[(40), float64]) */;
  %452 = %443.1;
  %453 = %451.6;
  (%452, %446, %var_4751, %453, %var_4757)
}

def @func_7778() -> (Tensor[(12, 12, 3), float32], Tensor[(1560), float64]) {
  @func_7776() /* ty=(Tensor[(12, 12, 3), float32], Tensor[(1560), float64]) */
}

def @func_10497(%var_10495: Tensor[(1560), float64]) -> Tensor[(1560), bool] {
  @func_10494(%var_10495) /* ty=Tensor[(1560), bool] */
}

def @func_2477(%var_2474: Tensor[(2, 3, 11), float64], %var_2475: uint8, %var_2476: Tensor[(2, 20), uint8]) -> (Tensor[(?, 8, 5), int32], uint8, Tensor[(2, 20), uint8], Tensor[(2, 3, 11), float64]) {
  @func_2472(%var_2474, %var_2475, %var_2476) /* ty=(Tensor[(?, 8, 5), int32], uint8, Tensor[(2, 20), uint8], Tensor[(2, 3, 11), float64]) */
}

def @func_5060(%var_5058: Tensor[(14, 15, 12), int32]) -> (Tensor[(14, 15, 12), int32], Tensor[(12, 12, 3), float32]) {
  @func_5057(%var_5058) /* ty=(Tensor[(14, 15, 12), int32], Tensor[(12, 12, 3), float32]) */
}

def @func_675(%var_673: Tensor[(9, 1, 16), float64]) -> (Tensor[(9, 1, 16), float64],) {
  @func_672(%var_673) /* ty=(Tensor[(9, 1, 16), float64],) */
}

def @func_3848(%var_3846: Tensor[(12, 130), float32], %var_3847: Tensor[(2, 20), uint8]) -> (Tensor[(12, 130), int32], uint8, Tensor[(66), float64], uint8, Tensor[(2, 20), uint8]) {
  @func_3844(%var_3846, %var_3847) /* ty=(Tensor[(12, 130), int32], uint8, Tensor[(66), float64], uint8, Tensor[(2, 20), uint8]) */
}

def @func_10469() -> (Tensor[(12, 12, 3), float32], Tensor[(1560), float64], Tensor[(1560), float64], Tensor[(2, 20), float64]) {
  %454 = @func_3933() /* ty=(Tensor[(12, 12, 3), float32],) */;
  %455 = @func_8180() /* ty=(Tensor[(12, 12, 3), float32], Tensor[(12, 12, 3), float32], Tensor[(1560), float64], Tensor[(2, 20), float64]) */;
  %456 = %454.0;
  %457 = @func_6655() /* ty=Tensor[(1560), float64] */;
  %458 = @func_3618() /* ty=Tensor[(1560), float64] */;
  %459 = %455.3;
  (%456, %457, %458, %459)
}

def @func_3151(%var_3147: Tensor[(7, 3, 11), float64], %var_3148: uint8, %var_3149: Tensor[(1560), float64], %var_3150: Tensor[(7, 3, 11), float64]) -> (Tensor[(7, 3, 11), float64], Tensor[(3, 11, 4), float32], uint8, Tensor[(10, 12, 13), float64], Tensor[(1560), float64], Tensor[(7, 3, 11), float64], Tensor[(12, 12, 3), float32]) {
  @func_3145(%var_3147, %var_3148, %var_3149, %var_3150) /* ty=(Tensor[(7, 3, 11), float64], Tensor[(3, 11, 4), float32], uint8, Tensor[(10, 12, 13), float64], Tensor[(1560), float64], Tensor[(7, 3, 11), float64], Tensor[(12, 12, 3), float32]) */
}

def @func_3256() -> (Tensor[(12, 130), float64], Tensor[(1560), float64], Tensor[(33, 7), float64], uint8, Tensor[(7, 3, 11), float32], uint8, Tensor[(66), float64], Tensor[(40), uint8], Tensor[(2, 20), float64]) {
  @func_3254() /* ty=(Tensor[(12, 130), float64], Tensor[(1560), float64], Tensor[(33, 7), float64], uint8, Tensor[(7, 3, 11), float32], uint8, Tensor[(66), float64], Tensor[(40), uint8], Tensor[(2, 20), float64]) */
}

def @func_9194() -> (Tensor[(2, 20), float64],) {
  %462 = fn () -> (Tensor[(2, 20), float64],) {
    %460 = @func_5083() /* ty=(Tensor[(2, 20), float64],) */;
    %461 = %460.0;
    (%461,)
  };
  %462() /* ty=(Tensor[(2, 20), float64],) */
}

def @func_4741() -> (Tensor[(1560), float64], Tensor[(12, 12, 3), float32]) {
  @func_4739() /* ty=(Tensor[(1560), float64], Tensor[(12, 12, 3), float32]) */
}

def @func_8999() -> Tensor[(40), uint8] {
  %464 = fn () -> Tensor[(40), uint8] {
    %463 = @func_8349() /* ty=(Tensor[(40), uint8],) */;
    %463.0
  };
  %464() /* ty=Tensor[(40), uint8] */
}

def @func_7149() -> (Tensor[(12, 130), float64], Tensor[(12, 12, 3), float32], Tensor[(12, 12, 3), float32], Tensor[(10, 12, 13), float64]) {
  @func_7147() /* ty=(Tensor[(12, 130), float64], Tensor[(12, 12, 3), float32], Tensor[(12, 12, 3), float32], Tensor[(10, 12, 13), float64]) */
}

def @func_9679() -> (Tensor[(1560), float64], Tensor[(1560), float64], Tensor[(12, 12, 3), float32]) {
  @func_9677() /* ty=(Tensor[(1560), float64], Tensor[(1560), float64], Tensor[(12, 12, 3), float32]) */
}

def @func_11323() -> (Tensor[(1560), float64], Tensor[(9, 1, 16), float64], Tensor[(2, 72), float64], Tensor[(2, 20), float64], Tensor[(2, 20), float64]) {
  %465 = @func_4965() /* ty=(Tensor[(12, 12, 3), float32], Tensor[(10, 12, 13), float64], Tensor[(1560, 1), float64], Tensor[(1560), float64], Tensor[(40, 1), float64], Tensor[(40), float64], Tensor[(144), float64]) */;
  %466 = cast(meta[relay.Constant][22] /* ty=Tensor[(2, 72), float64] */, dtype="float64") /* ty=Tensor[(2, 72), float64] */;
  %467 = reshape(%466, newshape=[9, 1, 16]) /* ty=Tensor[(9, 1, 16), float64] */;
  %468 = @func_672(%467) /* ty=(Tensor[(9, 1, 16), float64],) */;
  %469 = @func_5083() /* ty=(Tensor[(2, 20), float64],) */;
  %470 = @func_5083() /* ty=(Tensor[(2, 20), float64],) */;
  %471 = %465.3;
  %472 = %468.0;
  %473 = %469.0;
  %474 = %470.0;
  (%471, %472, meta[relay.Constant][22] /* ty=Tensor[(2, 72), float64] */, %473, %474)
}

def @func_9918(%var_9916: Tensor[(14, 9, 10), float32]) -> Tensor[(14, 9, 10), float32] {
  @func_9915(%var_9916) /* ty=Tensor[(14, 9, 10), float32] */
}

def @func_13237(%var_13236: Tensor[(1, 1560), float32]) -> (Tensor[(40), uint8], Tensor[(1, 6, 5), float64], Tensor[(10, 3), float64], Tensor[(40), uint8], Tensor[(12, 12, 3), float32], Tensor[(40), float64], Tensor[(1, 1560), float32], Tensor[(132), float32], Tensor[(12, 12, 3), float32]) {
  %490 = fn (%var_13219: Tensor[(1, 1560), float32]) -> (Tensor[(40), uint8], Tensor[(1, 6, 5), float64], Tensor[(10, 3), float64], Tensor[(40), uint8], Tensor[(12, 12, 3), float32], Tensor[(40), float64], Tensor[(1, 1560), float32], Tensor[(132), float32], Tensor[(12, 12, 3), float32]) {
    %475 = @func_6083() /* ty=(Tensor[(12, 130), float64], Tensor[(40), uint8]) */;
    %476 = cast(meta[relay.Constant][23] /* ty=Tensor[(10, 3), float64] */, dtype="float64") /* ty=Tensor[(10, 3), float64] */;
    %477 = reshape(%476, newshape=[1, 6, 5]) /* ty=Tensor[(1, 6, 5), float64] */;
    %478 = @func_8107() /* ty=(Tensor[(12, 12, 3), float32],) */;
    %479 = cast(%var_13219, dtype="float32") /* ty=Tensor[(1, 1560), float32] */;
    %480 = cast(meta[relay.Constant][24] /* ty=Tensor[(132), float32] */, dtype="float32") /* ty=Tensor[(132), float32] */;
    %481 = reshape(%479, newshape=[10, 12, 13]) /* ty=Tensor[(10, 12, 13), float32] */;
    %482 = reshape(%480, newshape=[132]) /* ty=Tensor[(132), float32] */;
    %483 = @func_6068(%481, %482) /* ty=(Tensor[(10, 12, 13), float64], Tensor[(3, 11, 4), float32], Tensor[(132), float32], Tensor[(40), float64], Tensor[(12, 12, 3), float32], Tensor[(12, 12, 3), float32], Tensor[(10, 12, 13), float64], Tensor[(12, 130), uint16]) */;
    %484 = %475.1;
    %485 = @func_6941(%477) /* ty=Tensor[(1, 6, 5), float64] */;
    %486 = @func_5306() /* ty=Tensor[(40), uint8] */;
    %487 = %478.0;
    %488 = %483.3;
    %489 = @func_4599() /* ty=Tensor[(12, 12, 3), float32] */;
    (%484, %485, meta[relay.Constant][23] /* ty=Tensor[(10, 3), float64] */, %486, %487, %488, %var_13219, meta[relay.Constant][24] /* ty=Tensor[(132), float32] */, %489)
  };
  %490(%var_13236) /* ty=(Tensor[(40), uint8], Tensor[(1, 6, 5), float64], Tensor[(10, 3), float64], Tensor[(40), uint8], Tensor[(12, 12, 3), float32], Tensor[(40), float64], Tensor[(1, 1560), float32], Tensor[(132), float32], Tensor[(12, 12, 3), float32]) */
}

def @func_2866() -> (Tensor[(12, 12, 3), float32],) {
  @func_2864() /* ty=(Tensor[(12, 12, 3), float32],) */
}

def @func_5084() -> (Tensor[(2, 20), float64],) {
  %493 = fn () -> (Tensor[(2, 20), float64],) {
    %491 = @func_3254() /* ty=(Tensor[(12, 130), float64], Tensor[(1560), float64], Tensor[(33, 7), float64], uint8, Tensor[(7, 3, 11), float32], uint8, Tensor[(66), float64], Tensor[(40), uint8], Tensor[(2, 20), float64]) */;
    %492 = %491.8;
    (%492,)
  };
  %493() /* ty=(Tensor[(2, 20), float64],) */
}

def @func_4793() -> Tensor[(1560), float64] {
  @func_4791() /* ty=Tensor[(1560), float64] */
}

def @func_9119() -> (Tensor[(12, 12, 3), float32], Tensor[(11, 16, 8), uint32], Tensor[(1408), uint32], Tensor[(40), float32]) {
  @func_9117() /* ty=(Tensor[(12, 12, 3), float32], Tensor[(11, 16, 8), uint32], Tensor[(1408), uint32], Tensor[(40), float32]) */
}

def @func_5627() -> (Tensor[(40), uint8],) {
  @func_5625() /* ty=(Tensor[(40), uint8],) */
}

def @func_5343() -> (Tensor[(12, 12, 3), float32],) {
  %496 = fn () -> (Tensor[(12, 12, 3), float32],) {
    %494 = @func_2864() /* ty=(Tensor[(12, 12, 3), float32],) */;
    %495 = %494.0;
    (%495,)
  };
  %496() /* ty=(Tensor[(12, 12, 3), float32],) */
}

def @func_8300() -> Tensor[(12, 12, 3), float32] {
  %497 = fn () -> Tensor[(12, 12, 3), float32] {
    @func_5188() /* ty=Tensor[(12, 12, 3), float32] */
  };
  %497() /* ty=Tensor[(12, 12, 3), float32] */
}

def @func_10897() -> Tensor[(12, 12, 3), float32] {
  %499 = fn () -> Tensor[(12, 12, 3), float32] {
    %498 = @func_3713() /* ty=(Tensor[(12, 12, 3), float32],) */;
    %498.0
  };
  %499() /* ty=Tensor[(12, 12, 3), float32] */
}

def @func_5680() -> Tensor[(1560), float32] {
  %502 = fn () -> Tensor[(1560), float32] {
    %500 = @func_3618() /* ty=Tensor[(1560), float64] */;
    %501 = cast(%500, dtype="float32") /* ty=Tensor[(1560), float32] */;
    atan(%501) /* ty=Tensor[(1560), float32] */
  };
  %502() /* ty=Tensor[(1560), float32] */
}

def @func_3715() -> (Tensor[(12, 12, 3), float32],) {
  @func_3713() /* ty=(Tensor[(12, 12, 3), float32],) */
}

def @func_6742() -> (Tensor[(2, 20), float64], Tensor[(12, 12, 3), float32]) {
  %506 = fn () -> (Tensor[(2, 20), float64], Tensor[(12, 12, 3), float32]) {
    %503 = @func_5083() /* ty=(Tensor[(2, 20), float64],) */;
    %504 = %503.0;
    %505 = @func_5966() /* ty=Tensor[(12, 12, 3), float32] */;
    (%504, %505)
  };
  %506() /* ty=(Tensor[(2, 20), float64], Tensor[(12, 12, 3), float32]) */
}

def @func_9057() -> Tensor[(40), uint8] {
  @func_9055() /* ty=Tensor[(40), uint8] */
}

def @func_9435() -> (Tensor[(12, 12, 3), float32], Tensor[(1560), int8], Tensor[(12, 12, 3), float32]) {
  %507 = @func_8634() /* ty=(Tensor[(12, 12, 3), float32],) */;
  %508 = @func_5527() /* ty=(Tensor[(1560), float64], Tensor[(12, 12, 3), float32]) */;
  %509 = %508.0;
  %510 = cast(meta[relay.Constant][25] /* ty=Tensor[(1560), float64] */, dtype="int8") /* ty=Tensor[(1560), int8] */;
  %511 = shape_of(%509, dtype="int32") /* ty=Tensor[(1), int32] */;
  %512 = cast(%509, dtype="int8") /* ty=Tensor[(1560), int8] */;
  %513 = dyn.reshape(%510, %511, newshape=[]) /* ty=Tensor[(?), int8] */;
  %514 = @func_2829() /* ty=(Tensor[(12, 12, 3), float32], Tensor[(10, 12, 13), float64], Tensor[(12, 130), float64]) */;
  %515 = %507.0;
  %516 = right_shift(%512, %513) /* ty=Tensor[(1560), int8] */;
  %517 = %514.0;
  (%515, %516, %517)
}

def @func_6313(%var_6312: Tensor[(12, 12, 3), float32]) -> (Tensor[(12, 12, 3), uint8], Tensor[(12, 12, 3), float64], Tensor[(2, 20), uint8], Tensor[(12, 130), float32], Tensor[(40), uint8]) {
  %532 = fn (%var_6263: Tensor[(12, 12, 3), float32]) -> (Tensor[(12, 12, 3), uint8], Tensor[(12, 12, 3), float64], Tensor[(2, 20), uint8], Tensor[(12, 130), float32], Tensor[(40), uint8]) {
    %518 = @func_5979() /* ty=Tensor[(12, 12, 3), float32] */;
    %519 = cast(%var_6263, dtype="uint8") /* ty=Tensor[(12, 12, 3), uint8] */;
    %520 = shape_of(%518, dtype="int32") /* ty=Tensor[(3), int32] */;
    %521 = cast(%518, dtype="uint8") /* ty=Tensor[(12, 12, 3), uint8] */;
    %522 = dyn.reshape(%519, %520, newshape=[]) /* ty=Tensor[(?, ?, ?), uint8] */;
    %523 = cast(%var_6263, dtype="float64") /* ty=Tensor[(12, 12, 3), float64] */;
    %524 = cast(meta[relay.Constant][26] /* ty=Tensor[(12, 130), float32] */, dtype="float32") /* ty=Tensor[(12, 130), float32] */;
    %525 = cast(meta[relay.Constant][27] /* ty=Tensor[(40), uint8] */, dtype="uint8") /* ty=Tensor[(40), uint8] */;
    %526 = reshape(%524, newshape=[12, 130]) /* ty=Tensor[(12, 130), float32] */;
    %527 = reshape(%525, newshape=[2, 20]) /* ty=Tensor[(2, 20), uint8] */;
    %528 = @func_3844(%526, %527) /* ty=(Tensor[(12, 130), int32], uint8, Tensor[(66), float64], uint8, Tensor[(2, 20), uint8]) */;
    %529 = bitwise_xor(%521, %522) /* ty=Tensor[(12, 12, 3), uint8] */;
    %530 = tan(%523) /* ty=Tensor[(12, 12, 3), float64] */;
    %531 = %528.4;
    (%529, %530, %531, meta[relay.Constant][26] /* ty=Tensor[(12, 130), float32] */, meta[relay.Constant][27] /* ty=Tensor[(40), uint8] */)
  };
  %532(%var_6312) /* ty=(Tensor[(12, 12, 3), uint8], Tensor[(12, 12, 3), float64], Tensor[(2, 20), uint8], Tensor[(12, 130), float32], Tensor[(40), uint8]) */
}

def @func_5387() -> (Tensor[(40), uint8], Tensor[(40), uint8]) {
  %533 = @func_4904() /* ty=Tensor[(40), uint8] */;
  %534 = @func_5306() /* ty=Tensor[(40), uint8] */;
  (%533, %534)
}

def @func_3355(%var_3353: Tensor[(132), float32], %var_3354: Tensor[(40), float64]) -> (Tensor[(12, 12, 3), float32], uint8, Tensor[(1560), float64], Tensor[(132), float32], Tensor[(12, 12, 3), float32], Tensor[(9, 1, 16), float64], Tensor[(40), float64]) {
  %549 = fn (%var_3336: Tensor[(132), float32], %var_3348: Tensor[(40), float64]) -> (Tensor[(12, 12, 3), float32], uint8, Tensor[(1560), float64], Tensor[(132), float32], Tensor[(12, 12, 3), float32], Tensor[(9, 1, 16), float64], Tensor[(40), float64]) {
    %535 = @func_2864() /* ty=(Tensor[(12, 12, 3), float32],) */;
    %536 = cast(meta[relay.Constant][28] /* ty=Tensor[(1560), float64] */, dtype="float64") /* ty=Tensor[(1560), float64] */;
    %537 = cast(%var_3336, dtype="float32") /* ty=Tensor[(132), float32] */;
    %538 = reshape(%536, newshape=[10, 12, 13]) /* ty=Tensor[(10, 12, 13), float64] */;
    %539 = reshape(%537, newshape=[132]) /* ty=Tensor[(132), float32] */;
    %540 = @func_3182(%538, %539) /* ty=(Tensor[(10, 12, 13), bool], Tensor[(?, 14, 9), float32], uint8, Tensor[(3, 11, 4), float32], Tensor[(132), float32]) */;
    %541 = @func_2864() /* ty=(Tensor[(12, 12, 3), float32],) */;
    %542 = cast(%var_3348, dtype="float64") /* ty=Tensor[(40), float64] */;
    %543 = reshape(%542, newshape=[2, 20]) /* ty=Tensor[(2, 20), float64] */;
    %544 = @func_3030(%543) /* ty=(Tensor[(12, 12, 3), float32], Tensor[(9, 1, 16), float64], Tensor[(2, 20), float64], Tensor[(144), float64]) */;
    %545 = %535.0;
    %546 = %540.2;
    %547 = %541.0;
    %548 = %544.1;
    (%545, %546, meta[relay.Constant][28] /* ty=Tensor[(1560), float64] */, %var_3336, %547, %548, %var_3348)
  };
  %549(%var_3353, %var_3354) /* ty=(Tensor[(12, 12, 3), float32], uint8, Tensor[(1560), float64], Tensor[(132), float32], Tensor[(12, 12, 3), float32], Tensor[(9, 1, 16), float64], Tensor[(40), float64]) */
}

def @func_12575() -> (Tensor[(12, 12, 3), float32], Tensor[(12, 130), bool], Tensor[(1560), float64]) {
  %556 = fn () -> (Tensor[(12, 12, 3), float32], Tensor[(12, 130), bool], Tensor[(1560), float64]) {
    %550 = @func_7509() /* ty=(Tensor[(12, 12, 3), float32],) */;
    %551 = cast(meta[relay.Constant][29] /* ty=Tensor[(1560), float64] */, dtype="float64") /* ty=Tensor[(1560), float64] */;
    %552 = reshape(%551, newshape=[12, 130]) /* ty=Tensor[(12, 130), float64] */;
    %553 = @func_10786(%552) /* ty=(Tensor[(12, 130), bool],) */;
    %554 = %550.0;
    %555 = %553.0;
    (%554, %555, meta[relay.Constant][29] /* ty=Tensor[(1560), float64] */)
  };
  %556() /* ty=(Tensor[(12, 12, 3), float32], Tensor[(12, 130), bool], Tensor[(1560), float64]) */
}

def @func_5924(%var_5922: uint8, %var_5923: Tensor[(1560), float64]) -> (Tensor[(40), uint8], Tensor[(132), float32], Tensor[(231), float64], uint8, Tensor[(1560), float64], Tensor[(12, 12, 3), float32]) {
  @func_5920(%var_5922, %var_5923) /* ty=(Tensor[(40), uint8], Tensor[(132), float32], Tensor[(231), float64], uint8, Tensor[(1560), float64], Tensor[(12, 12, 3), float32]) */
}

def @func_7147() -> (Tensor[(12, 130), float64], Tensor[(12, 12, 3), float32], Tensor[(12, 12, 3), float32], Tensor[(10, 12, 13), float64]) {
  %557 = @func_4637() /* ty=(Tensor[(12, 130), float64],) */;
  %558 = @func_5216() /* ty=(Tensor[(12, 12, 3), float32],) */;
  %559 = @func_5771() /* ty=(Tensor[(12, 12, 3), float32], Tensor[(1560), float32], Tensor[(12, 130), float64]) */;
  %560 = %557.0;
  %561 = cast(%560, dtype="float64") /* ty=Tensor[(12, 130), float64] */;
  %562 = reshape(%561, newshape=[10, 12, 13]) /* ty=Tensor[(10, 12, 13), float64] */;
  %563 = %558.0;
  %564 = %559.0;
  %565 = @func_2171(%562) /* ty=Tensor[(10, 12, 13), float64] */;
  (%560, %563, %564, %565)
}

def @func_4599() -> Tensor[(12, 12, 3), float32] {
  @func_3372() /* ty=Tensor[(12, 12, 3), float32] */
}

def @func_3713() -> (Tensor[(12, 12, 3), float32],) {
  %566 = @func_3372() /* ty=Tensor[(12, 12, 3), float32] */;
  (%566,)
}

def @func_5528() -> (Tensor[(1560), float64], Tensor[(12, 12, 3), float32]) {
  %570 = fn () -> (Tensor[(1560), float64], Tensor[(12, 12, 3), float32]) {
    %567 = @func_4065() /* ty=(Tensor[(12, 12, 3), float32],) */;
    %568 = @func_4791() /* ty=Tensor[(1560), float64] */;
    %569 = %567.0;
    (%568, %569)
  };
  %570() /* ty=(Tensor[(1560), float64], Tensor[(12, 12, 3), float32]) */
}

def @func_10822() -> (Tensor[(1560), float64], Tensor[(1560), bool]) {
  %571 = @func_10673() /* ty=(Tensor[(1560), float64],) */;
  %572 = %571.0;
  %573 = cast(%572, dtype="float64") /* ty=Tensor[(1560), float64] */;
  %574 = reshape(%573, newshape=[1560]) /* ty=Tensor[(1560), float64] */;
  %575 = @func_10494(%574) /* ty=Tensor[(1560), bool] */;
  (%572, %575)
}

def @func_6532(%var_6526: Tensor[(12, 12, 3), float32], %var_6527: Tensor[(22, 7), float64], %var_6528: Tensor[(49), float64], %var_6529: Tensor[(637), float64], %var_6530: Tensor[(20, 2), float64], %var_6531: Tensor[(2, 72), float64]) -> (Tensor[(12, 12, 3), bool], Tensor[(12, 12, 3), float32], Tensor[(12, 12, 3), float32], Tensor[(12, 12, 3), float32], Tensor[(49), float64], Tensor[(637), float64], Tensor[(20, 2), float64], Tensor[(2, 72), float64], Tensor[(14, ?, 11), bool], Tensor[(2, 20), uint8], Tensor[(12, 12, 3), float32], Tensor[(14, ?, 11), int64]) {
  @func_6524(%var_6526, %var_6527, %var_6528, %var_6529, %var_6530, %var_6531) /* ty=(Tensor[(12, 12, 3), bool], Tensor[(12, 12, 3), float32], Tensor[(12, 12, 3), float32], Tensor[(12, 12, 3), float32], Tensor[(49), float64], Tensor[(637), float64], Tensor[(20, 2), float64], Tensor[(2, 72), float64], Tensor[(14, ?, 11), bool], Tensor[(2, 20), uint8], Tensor[(12, 12, 3), float32], Tensor[(14, ?, 11), int64]) */
}

def @func_3186(%var_3184: Tensor[(10, 12, 13), float64], %var_3185: Tensor[(132), float32]) -> (Tensor[(10, 12, 13), bool], Tensor[(?, 14, 9), float32], uint8, Tensor[(3, 11, 4), float32], Tensor[(132), float32]) {
  @func_3182(%var_3184, %var_3185) /* ty=(Tensor[(10, 12, 13), bool], Tensor[(?, 14, 9), float32], uint8, Tensor[(3, 11, 4), float32], Tensor[(132), float32]) */
}

def @func_10041() -> Tensor[(40), uint8] {
  @func_4904() /* ty=Tensor[(40), uint8] */
}

def @func_12259(%var_12257: Tensor[(132), float32], %var_12258: Tensor[(40), float64]) -> (Tensor[(12, 12, 3), float32], Tensor[(40), float64], Tensor[(12, 12, 3), int32], Tensor[(10, 12, 13), float64], Tensor[(40, 132), float32], Tensor[(40, 132), bool]) {
  %607 = fn (%var_12170: Tensor[(132), float32], %var_12171: Tensor[(40), float64]) -> (Tensor[(12, 12, 3), float32], Tensor[(40), float64], Tensor[(12, 12, 3), int32], Tensor[(10, 12, 13), float64], Tensor[(40, 132), float32], Tensor[(40, 132), bool]) {
    %576 = @func_7509() /* ty=(Tensor[(12, 12, 3), float32],) */;
    %577 = cast(%var_12171, dtype="uint8") /* ty=Tensor[(40), uint8] */;
    %578 = reshape(%577, newshape=[2, 20]) /* ty=Tensor[(2, 20), uint8] */;
    %579 = @func_4312(%578) /* ty=(Tensor[(12, 12, 3), int32], Tensor[(3, 11, 4), float32], uint8, Tensor[(1560), float64], Tensor[(12, 12, 3), float64], Tensor[(3, 11, 4), float32], Tensor[(2, 20), uint8]) */;
    %580 = @func_12128() /* ty=(Tensor[(10, 12, 13), float64], Tensor[(1560), float32]) */;
    %581 = cast(%var_12170, dtype="float32") /* ty=Tensor[(132), float32] */;
    %582 = cast(%var_12171, dtype="float64") /* ty=Tensor[(40), float64] */;
    %583 = reshape(%581, newshape=[132]) /* ty=Tensor[(132), float32] */;
    %584 = reshape(%582, newshape=[40, 1]) /* ty=Tensor[(40, 1), float64] */;
    %585 = @func_4768(%583, %584) /* ty=(Tensor[(1560), float64], Tensor[(3, 11, 4), float32], Tensor[(132), float32], Tensor[(40), float64], Tensor[(40, 1), float64]) */;
    %586 = %585.4;
    %587 = cast(%var_12170, dtype="float32") /* ty=Tensor[(132), float32] */;
    %588 = cast(%586, dtype="float32") /* ty=Tensor[(40, 1), float32] */;
    %589 = floor_mod(%587, %588) /* ty=Tensor[(40, 132), float32] */;
    %590 = cast(%589, dtype="float32") /* ty=Tensor[(40, 132), float32] */;
    %591 = sqrt(%590) /* ty=Tensor[(40, 132), float32] */;
    %592 = cast(%589, dtype="float32") /* ty=Tensor[(40, 132), float32] */;
    %593 = shape_of(%591, dtype="int32") /* ty=Tensor[(2), int32] */;
    %594 = cast(%591, dtype="float32") /* ty=Tensor[(40, 132), float32] */;
    %595 = dyn.reshape(%592, %593, newshape=[]) /* ty=Tensor[(?, ?), float32] */;
    %596 = cast(%591, dtype="float32") /* ty=Tensor[(40, 132), float32] */;
    %597 = asin(%596) /* ty=Tensor[(40, 132), float32] */;
    %598 = cast(%591, dtype="bool") /* ty=Tensor[(40, 132), bool] */;
    %599 = shape_of(%597, dtype="int32") /* ty=Tensor[(2), int32] */;
    %600 = cast(%597, dtype="bool") /* ty=Tensor[(40, 132), bool] */;
    %601 = dyn.reshape(%598, %599, newshape=[]) /* ty=Tensor[(?, ?), bool] */;
    %602 = %576.0;
    %603 = %579.0;
    %604 = %580.0;
    %605 = power(%594, %595) /* ty=Tensor[(40, 132), float32] */;
    %606 = equal(%600, %601) /* ty=Tensor[(40, 132), bool] */;
    (%602, %var_12171, %603, %604, %605, %606)
  };
  %607(%var_12257, %var_12258) /* ty=(Tensor[(12, 12, 3), float32], Tensor[(40), float64], Tensor[(12, 12, 3), int32], Tensor[(10, 12, 13), float64], Tensor[(40, 132), float32], Tensor[(40, 132), bool]) */
}

def @func_9068() -> (Tensor[(40), uint8],) {
  %609 = fn () -> (Tensor[(40), uint8],) {
    %608 = @func_4904() /* ty=Tensor[(40), uint8] */;
    (%608,)
  };
  %609() /* ty=(Tensor[(40), uint8],) */
}

def @func_9437() -> (Tensor[(12, 12, 3), float32], Tensor[(1560), int8], Tensor[(12, 12, 3), float32]) {
  @func_9435() /* ty=(Tensor[(12, 12, 3), float32], Tensor[(1560), int8], Tensor[(12, 12, 3), float32]) */
}

def @func_7613() -> (Tensor[(12, 12, 3), float32],) {
  @func_7611() /* ty=(Tensor[(12, 12, 3), float32],) */
}

def @func_6843(%var_6831: Tensor[(13, 15, 2), int32]) -> Tensor[(13, 15, 2), int32] {
  %610 = cast(meta[relay.Constant][30] /* ty=Tensor[(13, 15, 2), int32] */, dtype="int32") /* ty=Tensor[(13, 15, 2), int32] */;
  %611 = shape_of(%var_6831, dtype="int32") /* ty=Tensor[(3), int32] */;
  %612 = cast(%var_6831, dtype="int32") /* ty=Tensor[(13, 15, 2), int32] */;
  %613 = dyn.reshape(%610, %611, newshape=[]) /* ty=Tensor[(?, ?, ?), int32] */;
  add(%612, %613) /* ty=Tensor[(13, 15, 2), int32] */
}

def @func_6977() -> (Tensor[(1560), float64], Tensor[(40), float64], Tensor[(2, 20), uint8]) {
  %614 = @func_4923() /* ty=(Tensor[(1560), float64],) */;
  %615 = @func_4965() /* ty=(Tensor[(12, 12, 3), float32], Tensor[(10, 12, 13), float64], Tensor[(1560, 1), float64], Tensor[(1560), float64], Tensor[(40, 1), float64], Tensor[(40), float64], Tensor[(144), float64]) */;
  %616 = %614.0;
  %617 = cast(%616, dtype="float32") /* ty=Tensor[(1560), float32] */;
  %618 = %615.5;
  %619 = cast(%618, dtype="uint8") /* ty=Tensor[(40), uint8] */;
  %620 = reshape(%617, newshape=[12, 130]) /* ty=Tensor[(12, 130), float32] */;
  %621 = reshape(%619, newshape=[2, 20]) /* ty=Tensor[(2, 20), uint8] */;
  %622 = @func_3844(%620, %621) /* ty=(Tensor[(12, 130), int32], uint8, Tensor[(66), float64], uint8, Tensor[(2, 20), uint8]) */;
  %623 = %622.4;
  (%616, %618, %623)
}

def @func_4923() -> (Tensor[(1560), float64],) {
  %624 = @func_4739() /* ty=(Tensor[(1560), float64], Tensor[(12, 12, 3), float32]) */;
  %625 = %624.0;
  (%625,)
}

def @func_5246(%var_5244: Tensor[(5, 12, 1), uint8], %var_5245: Tensor[(5, 12, 1), uint8]) -> (Tensor[(5, 12, ?), int8], Tensor[(5, 12, ?), uint32]) {
  @func_5242(%var_5244, %var_5245) /* ty=(Tensor[(5, 12, ?), int8], Tensor[(5, 12, ?), uint32]) */
}

def @func_11933() -> (Tensor[(12, 12, 3), float32],) {
  %626 = @func_10575() /* ty=(Tensor[(12, 12, 3), float32],) */;
  %627 = %626.0;
  (%627,)
}

def @func_4524() -> Tensor[(12, 12, 3), float32] {
  @func_4522() /* ty=Tensor[(12, 12, 3), float32] */
}

def @func_4601() -> Tensor[(12, 12, 3), float32] {
  @func_4599() /* ty=Tensor[(12, 12, 3), float32] */
}

def @func_6071(%var_6069: Tensor[(10, 12, 13), float32], %var_6070: Tensor[(132), float32]) -> (Tensor[(10, 12, 13), float64], Tensor[(3, 11, 4), float32], Tensor[(132), float32], Tensor[(40), float64], Tensor[(12, 12, 3), float32], Tensor[(12, 12, 3), float32], Tensor[(10, 12, 13), float64], Tensor[(12, 130), uint16]) {
  %650 = fn (%var_6019: Tensor[(10, 12, 13), float32], %var_6025: Tensor[(132), float32]) -> (Tensor[(10, 12, 13), float64], Tensor[(3, 11, 4), float32], Tensor[(132), float32], Tensor[(40), float64], Tensor[(12, 12, 3), float32], Tensor[(12, 12, 3), float32], Tensor[(10, 12, 13), float64], Tensor[(12, 130), uint16]) {
    %628 = @func_2829() /* ty=(Tensor[(12, 12, 3), float32], Tensor[(10, 12, 13), float64], Tensor[(12, 130), float64]) */;
    %629 = %628.1;
    %630 = cast(%629, dtype="float32") /* ty=Tensor[(10, 12, 13), float32] */;
    %631 = erf(%630) /* ty=Tensor[(10, 12, 13), float32] */;
    %632 = cast(%var_6019, dtype="float64") /* ty=Tensor[(10, 12, 13), float64] */;
    %633 = shape_of(%631, dtype="int32") /* ty=Tensor[(3), int32] */;
    %634 = cast(%631, dtype="float64") /* ty=Tensor[(10, 12, 13), float64] */;
    %635 = dyn.reshape(%632, %633, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
    %636 = cast(%var_6025, dtype="float32") /* ty=Tensor[(132), float32] */;
    %637 = cast(meta[relay.Constant][31] /* ty=Tensor[(40), float64] */, dtype="float64") /* ty=Tensor[(40), float64] */;
    %638 = reshape(%636, newshape=[132]) /* ty=Tensor[(132), float32] */;
    %639 = reshape(%637, newshape=[40, 1]) /* ty=Tensor[(40, 1), float64] */;
    %640 = @func_4768(%638, %639) /* ty=(Tensor[(1560), float64], Tensor[(3, 11, 4), float32], Tensor[(132), float32], Tensor[(40), float64], Tensor[(40, 1), float64]) */;
    %641 = @func_5216() /* ty=(Tensor[(12, 12, 3), float32],) */;
    %642 = cast(%631, dtype="float64") /* ty=Tensor[(10, 12, 13), float64] */;
    %643 = @func_5582() /* ty=(Tensor[(12, 130), uint16], Tensor[(12, 130), float64]) */;
    %644 = floor_divide(%634, %635) /* ty=Tensor[(10, 12, 13), float64] */;
    %645 = %640.1;
    %646 = %641.0;
    %647 = @func_4522() /* ty=Tensor[(12, 12, 3), float32] */;
    %648 = rsqrt(%642) /* ty=Tensor[(10, 12, 13), float64] */;
    %649 = %643.0;
    (%644, %645, %var_6025, meta[relay.Constant][31] /* ty=Tensor[(40), float64] */, %646, %647, %648, %649)
  };
  %650(%var_6069, %var_6070) /* ty=(Tensor[(10, 12, 13), float64], Tensor[(3, 11, 4), float32], Tensor[(132), float32], Tensor[(40), float64], Tensor[(12, 12, 3), float32], Tensor[(12, 12, 3), float32], Tensor[(10, 12, 13), float64], Tensor[(12, 130), uint16]) */
}

def @func_11187(%var_11186: Tensor[(1560), float32]) -> (Tensor[(40), uint8], Tensor[(2, 20), uint8], Tensor[(1560), float32]) {
  %659 = fn (%var_11176: Tensor[(1560), float32]) -> (Tensor[(40), uint8], Tensor[(2, 20), uint8], Tensor[(1560), float32]) {
    %651 = @func_11069() /* ty=(Tensor[(40), uint8], Tensor[(12, 12, 3), float32], Tensor[(12, 12, 3), float32]) */;
    %652 = cast(%var_11176, dtype="float32") /* ty=Tensor[(1560), float32] */;
    %653 = %651.0;
    %654 = cast(%653, dtype="uint8") /* ty=Tensor[(40), uint8] */;
    %655 = reshape(%652, newshape=[12, 130]) /* ty=Tensor[(12, 130), float32] */;
    %656 = reshape(%654, newshape=[2, 20]) /* ty=Tensor[(2, 20), uint8] */;
    %657 = @func_3844(%655, %656) /* ty=(Tensor[(12, 130), int32], uint8, Tensor[(66), float64], uint8, Tensor[(2, 20), uint8]) */;
    %658 = %657.4;
    (%653, %658, %var_11176)
  };
  %659(%var_11186) /* ty=(Tensor[(40), uint8], Tensor[(2, 20), uint8], Tensor[(1560), float32]) */
}

def @func_9055() -> Tensor[(40), uint8] {
  %660 = @func_7949() /* ty=(Tensor[(40), uint8],) */;
  %660.0
}

def @func_3934() -> (Tensor[(12, 12, 3), float32],) {
  %662 = fn () -> (Tensor[(12, 12, 3), float32],) {
    %661 = @func_3372() /* ty=Tensor[(12, 12, 3), float32] */;
    (%661,)
  };
  %662() /* ty=(Tensor[(12, 12, 3), float32],) */
}

def @func_12324() -> Tensor[(12, 12, 3), float32] {
  @func_12322() /* ty=Tensor[(12, 12, 3), float32] */
}

def @func_10471() -> (Tensor[(12, 12, 3), float32], Tensor[(1560), float64], Tensor[(1560), float64], Tensor[(2, 20), float64]) {
  @func_10469() /* ty=(Tensor[(12, 12, 3), float32], Tensor[(1560), float64], Tensor[(1560), float64], Tensor[(2, 20), float64]) */
}

def @func_6657() -> Tensor[(1560), float64] {
  @func_6655() /* ty=Tensor[(1560), float64] */
}

def @func_5189() -> Tensor[(12, 12, 3), float32] {
  %663 = fn () -> Tensor[(12, 12, 3), float32] {
    @func_4522() /* ty=Tensor[(12, 12, 3), float32] */
  };
  %663() /* ty=Tensor[(12, 12, 3), float32] */
}

def @func_4312(%var_4300: Tensor[(2, 20), uint8]) -> (Tensor[(12, 12, 3), int32], Tensor[(3, 11, 4), float32], uint8, Tensor[(1560), float64], Tensor[(12, 12, 3), float64], Tensor[(3, 11, 4), float32], Tensor[(2, 20), uint8]) {
  %664 = @func_4065() /* ty=(Tensor[(12, 12, 3), float32],) */;
  %665 = %664.0;
  %666 = cast(meta[relay.Constant][32] /* ty=Tensor[(12, 12, 3), float32] */, dtype="int32") /* ty=Tensor[(12, 12, 3), int32] */;
  %667 = shape_of(%665, dtype="int32") /* ty=Tensor[(3), int32] */;
  %668 = cast(%665, dtype="int32") /* ty=Tensor[(12, 12, 3), int32] */;
  %669 = dyn.reshape(%666, %667, newshape=[]) /* ty=Tensor[(?, ?, ?), int32] */;
  %670 = cast(meta[relay.Constant][33] /* ty=uint8 */, dtype="uint8") /* ty=uint8 */;
  %671 = reshape(%670, newshape=[]) /* ty=uint8 */;
  %672 = @func_788(%671) /* ty=(Tensor[(3, 11, 4), float32], uint8, Tensor[(40, 1), uint8], Tensor[(1, 14, 9), float64], Tensor[(?, 14, 9), float32], Tensor[(3, 11, 4), float32]) */;
  %673 = cast(%665, dtype="float64") /* ty=Tensor[(12, 12, 3), float64] */;
  %674 = cast(meta[relay.Constant][33] /* ty=uint8 */, dtype="uint8") /* ty=uint8 */;
  %675 = cast(%var_4300, dtype="uint8") /* ty=Tensor[(2, 20), uint8] */;
  %676 = reshape(%674, newshape=[]) /* ty=uint8 */;
  %677 = reshape(%675, newshape=[1, 8, 5]) /* ty=Tensor[(1, 8, 5), uint8] */;
  %678 = @func_619(%676, %677) /* ty=(Tensor[(3, 11, 4), float32], Tensor[(132), float32], Tensor[(?, 8, 5), int32], Tensor[(3, 11, 4), float32], Tensor[(3, 11, 4), float32]) */;
  %679 = right_shift(%668, %669) /* ty=Tensor[(12, 12, 3), int32] */;
  %680 = %672.5;
  %681 = @func_3618() /* ty=Tensor[(1560), float64] */;
  %682 = log(%673) /* ty=Tensor[(12, 12, 3), float64] */;
  %683 = %678.3;
  (%679, %680, meta[relay.Constant][33] /* ty=uint8 */, %681, %682, %683, %var_4300)
}

def @func_7285() -> Tensor[(40), uint8] {
  @func_7283() /* ty=Tensor[(40), uint8] */
}

def @func_3145(%var_3104: Tensor[(7, 3, 11), float64], %var_3119: uint8, %var_3122: Tensor[(1560), float64], %var_3133: Tensor[(7, 3, 11), float64]) -> (Tensor[(7, 3, 11), float64], Tensor[(3, 11, 4), float32], uint8, Tensor[(10, 12, 13), float64], Tensor[(1560), float64], Tensor[(7, 3, 11), float64], Tensor[(12, 12, 3), float32]) {
  %684 = cast(%var_3104, dtype="float64") /* ty=Tensor[(7, 3, 11), float64] */;
  %685 = cast(%var_3119, dtype="uint8") /* ty=uint8 */;
  %686 = reshape(%685, newshape=[]) /* ty=uint8 */;
  %687 = @func_788(%686) /* ty=(Tensor[(3, 11, 4), float32], uint8, Tensor[(40, 1), uint8], Tensor[(1, 14, 9), float64], Tensor[(?, 14, 9), float32], Tensor[(3, 11, 4), float32]) */;
  %688 = cast(%var_3122, dtype="float64") /* ty=Tensor[(1560), float64] */;
  %689 = reshape(%688, newshape=[10, 12, 13]) /* ty=Tensor[(10, 12, 13), float64] */;
  %690 = cast(%var_3133, dtype="float64") /* ty=Tensor[(7, 3, 11), float64] */;
  %691 = shape_of(%var_3104, dtype="int32") /* ty=Tensor[(3), int32] */;
  %692 = cast(%var_3104, dtype="float64") /* ty=Tensor[(7, 3, 11), float64] */;
  %693 = dyn.reshape(%690, %691, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %694 = @func_2864() /* ty=(Tensor[(12, 12, 3), float32],) */;
  %695 = sin(%684) /* ty=Tensor[(7, 3, 11), float64] */;
  %696 = %687.5;
  %697 = @func_2171(%689) /* ty=Tensor[(10, 12, 13), float64] */;
  %698 = mod(%692, %693) /* ty=Tensor[(7, 3, 11), float64] */;
  %699 = %694.0;
  (%695, %696, %var_3119, %697, %var_3122, %698, %699)
}

def @func_7396() -> (Tensor[(12, 12, 3), float32], Tensor[(12, 12, 3), float32]) {
  %703 = fn () -> (Tensor[(12, 12, 3), float32], Tensor[(12, 12, 3), float32]) {
    %700 = @func_3933() /* ty=(Tensor[(12, 12, 3), float32],) */;
    %701 = %700.0;
    %702 = @func_3372() /* ty=Tensor[(12, 12, 3), float32] */;
    (%701, %702)
  };
  %703() /* ty=(Tensor[(12, 12, 3), float32], Tensor[(12, 12, 3), float32]) */
}

def @func_9950() -> (Tensor[(12, 12, 3), int16],) {
  %706 = fn () -> (Tensor[(12, 12, 3), int16],) {
    %704 = @func_6143() /* ty=(Tensor[(12, 12, 3), float64], Tensor[(14, ?, 11), bool], Tensor[(1, 154), float64], Tensor[(1560), float64], Tensor[(12, 12, 3), int16], Tensor[(12, 12, 3), float32], Tensor[(12, 12, 3), float32]) */;
    %705 = %704.4;
    (%705,)
  };
  %706() /* ty=(Tensor[(12, 12, 3), int16],) */
}

def @func_5968() -> Tensor[(12, 12, 3), float32] {
  @func_5966() /* ty=Tensor[(12, 12, 3), float32] */
}

def @func_3030(%var_3004: Tensor[(2, 20), float64]) -> (Tensor[(12, 12, 3), float32], Tensor[(9, 1, 16), float64], Tensor[(2, 20), float64], Tensor[(144), float64]) {
  %707 = @func_2864() /* ty=(Tensor[(12, 12, 3), float32],) */;
  %708 = cast(%var_3004, dtype="float64") /* ty=Tensor[(2, 20), float64] */;
  %709 = cast(meta[relay.Constant][34] /* ty=Tensor[(144), float64] */, dtype="float64") /* ty=Tensor[(144), float64] */;
  %710 = reshape(%708, newshape=[1, 8, 5]) /* ty=Tensor[(1, 8, 5), float64] */;
  %711 = reshape(%709, newshape=[144]) /* ty=Tensor[(144), float64] */;
  %712 = @func_956(%710, %711) /* ty=(Tensor[(15, 8, 5), bool], Tensor[(9, 1, 16), float64], Tensor[(144), float64]) */;
  %713 = %707.0;
  %714 = %712.1;
  (%713, %714, %var_3004, meta[relay.Constant][34] /* ty=Tensor[(144), float64] */)
}

def @func_3902(%var_3898: Tensor[(7, 1, 7), float64], %var_3899: Tensor[(7, 13, 7), float64], %var_3900: Tensor[(40), float64], %var_3901: Tensor[(144, 1), float64]) -> (Tensor[(7, 13, 7), float64], Tensor[(12, 12, 3), float32], Tensor[(12, 12, 3), float32], Tensor[(40), float64], Tensor[(144, 1), float64], Tensor[(15, 8, 5), float64]) {
  @func_3896(%var_3898, %var_3899, %var_3900, %var_3901) /* ty=(Tensor[(7, 13, 7), float64], Tensor[(12, 12, 3), float32], Tensor[(12, 12, 3), float32], Tensor[(40), float64], Tensor[(144, 1), float64], Tensor[(15, 8, 5), float64]) */
}

def @func_8619() -> (Tensor[(140, 16), int32], Tensor[(7, 3, 11), float64], Tensor[(231), float64], uint8, Tensor[(1560), float64], uint8) {
  %729 = fn () -> (Tensor[(140, 16), int32], Tensor[(7, 3, 11), float64], Tensor[(231), float64], uint8, Tensor[(1560), float64], uint8) {
    %715 = @func_7897() /* ty=(Tensor[(12, 12, 3), float32], Tensor[(140, 16), int32], Tensor[(140, 16), float64]) */;
    %716 = cast(meta[relay.Constant][35] /* ty=Tensor[(231), float64] */, dtype="float64") /* ty=Tensor[(231), float64] */;
    %717 = cast(meta[relay.Constant][36] /* ty=uint8 */, dtype="uint8") /* ty=uint8 */;
    %718 = cast(meta[relay.Constant][37] /* ty=Tensor[(1560), float64] */, dtype="float64") /* ty=Tensor[(1560), float64] */;
    %719 = cast(meta[relay.Constant][35] /* ty=Tensor[(231), float64] */, dtype="float64") /* ty=Tensor[(231), float64] */;
    %720 = reshape(%716, newshape=[7, 3, 11]) /* ty=Tensor[(7, 3, 11), float64] */;
    %721 = reshape(%717, newshape=[]) /* ty=uint8 */;
    %722 = reshape(%718, newshape=[1560]) /* ty=Tensor[(1560), float64] */;
    %723 = reshape(%719, newshape=[7, 3, 11]) /* ty=Tensor[(7, 3, 11), float64] */;
    %724 = @func_3145(%720, %721, %722, %723) /* ty=(Tensor[(7, 3, 11), float64], Tensor[(3, 11, 4), float32], uint8, Tensor[(10, 12, 13), float64], Tensor[(1560), float64], Tensor[(7, 3, 11), float64], Tensor[(12, 12, 3), float32]) */;
    %725 = @func_3254() /* ty=(Tensor[(12, 130), float64], Tensor[(1560), float64], Tensor[(33, 7), float64], uint8, Tensor[(7, 3, 11), float32], uint8, Tensor[(66), float64], Tensor[(40), uint8], Tensor[(2, 20), float64]) */;
    %726 = %715.1;
    %727 = %724.5;
    %728 = %725.5;
    (%726, %727, meta[relay.Constant][35] /* ty=Tensor[(231), float64] */, meta[relay.Constant][36] /* ty=uint8 */, meta[relay.Constant][37] /* ty=Tensor[(1560), float64] */, %728)
  };
  %729() /* ty=(Tensor[(140, 16), int32], Tensor[(7, 3, 11), float64], Tensor[(231), float64], uint8, Tensor[(1560), float64], uint8) */
}

def @func_12047() -> (Tensor[(40, 1), float64],) {
  %732 = fn () -> (Tensor[(40, 1), float64],) {
    %730 = @func_7074() /* ty=(Tensor[(40, 1), float64], Tensor[(40), uint8], Tensor[(40), uint8], Tensor[(12, 12, 3), float32]) */;
    %731 = %730.0;
    (%731,)
  };
  %732() /* ty=(Tensor[(40, 1), float64],) */
}

def @func_5262(%var_5260: Tensor[(16, 14, 10), uint64]) -> Tensor[(16, 14, 10), uint64] {
  @func_5259(%var_5260) /* ty=Tensor[(16, 14, 10), uint64] */
}

def @func_13142() -> (Tensor[(12, 12, 3), float32], Tensor[(12, 130), float64]) {
  @func_13140() /* ty=(Tensor[(12, 12, 3), float32], Tensor[(12, 130), float64]) */
}

def @func_4018(%var_4017: Tensor[(637), float64]) -> (Tensor[(12, 130), int16], uint8, Tensor[(132), float32], Tensor[(40, 1), float64], Tensor[(12, 12, 3), float32], Tensor[(49), float64], Tensor[(637), float64], Tensor[(144), float64], Tensor[(9, 1, 16), float64]) {
  %769 = fn (%var_3988: Tensor[(637), float64]) -> (Tensor[(12, 130), int16], uint8, Tensor[(132), float32], Tensor[(40, 1), float64], Tensor[(12, 12, 3), float32], Tensor[(49), float64], Tensor[(637), float64], Tensor[(144), float64], Tensor[(9, 1, 16), float64]) {
    %733 = @func_3254() /* ty=(Tensor[(12, 130), float64], Tensor[(1560), float64], Tensor[(33, 7), float64], uint8, Tensor[(7, 3, 11), float32], uint8, Tensor[(66), float64], Tensor[(40), uint8], Tensor[(2, 20), float64]) */;
    %734 = %733.0;
    %735 = cast(%734, dtype="float64") /* ty=Tensor[(12, 130), float64] */;
    %736 = cos(%735) /* ty=Tensor[(12, 130), float64] */;
    %737 = cast(%736, dtype="float64") /* ty=Tensor[(12, 130), float64] */;
    %738 = log10(%737) /* ty=Tensor[(12, 130), float64] */;
    %739 = cast(%736, dtype="bool") /* ty=Tensor[(12, 130), bool] */;
    %740 = shape_of(%738, dtype="int32") /* ty=Tensor[(2), int32] */;
    %741 = cast(%738, dtype="bool") /* ty=Tensor[(12, 130), bool] */;
    %742 = dyn.reshape(%739, %740, newshape=[]) /* ty=Tensor[(?, ?), bool] */;
    %743 = not_equal(%741, %742) /* ty=Tensor[(12, 130), bool] */;
    %744 = cast(%743, dtype="int16") /* ty=Tensor[(12, 130), int16] */;
    %745 = shape_of(%738, dtype="int32") /* ty=Tensor[(2), int32] */;
    %746 = cast(%738, dtype="int16") /* ty=Tensor[(12, 130), int16] */;
    %747 = dyn.reshape(%744, %745, newshape=[]) /* ty=Tensor[(?, ?), int16] */;
    %748 = cast(meta[relay.Constant][38] /* ty=Tensor[(132), float32] */, dtype="float32") /* ty=Tensor[(132), float32] */;
    %749 = cast(meta[relay.Constant][39] /* ty=Tensor[(40, 1), float64] */, dtype="float64") /* ty=Tensor[(40, 1), float64] */;
    %750 = reshape(%748, newshape=[132]) /* ty=Tensor[(132), float32] */;
    %751 = reshape(%749, newshape=[40]) /* ty=Tensor[(40), float64] */;
    %752 = @func_3352(%750, %751) /* ty=(Tensor[(12, 12, 3), float32], uint8, Tensor[(1560), float64], Tensor[(132), float32], Tensor[(12, 12, 3), float32], Tensor[(9, 1, 16), float64], Tensor[(40), float64]) */;
    %753 = cast(meta[relay.Constant][40] /* ty=Tensor[(49), float64] */, dtype="float64") /* ty=Tensor[(49), float64] */;
    %754 = cast(%var_3988, dtype="float64") /* ty=Tensor[(637), float64] */;
    %755 = cast(meta[relay.Constant][39] /* ty=Tensor[(40, 1), float64] */, dtype="float64") /* ty=Tensor[(40, 1), float64] */;
    %756 = cast(meta[relay.Constant][41] /* ty=Tensor[(144), float64] */, dtype="float64") /* ty=Tensor[(144), float64] */;
    %757 = reshape(%753, newshape=[7, 1, 7]) /* ty=Tensor[(7, 1, 7), float64] */;
    %758 = reshape(%754, newshape=[7, 13, 7]) /* ty=Tensor[(7, 13, 7), float64] */;
    %759 = reshape(%755, newshape=[40]) /* ty=Tensor[(40), float64] */;
    %760 = reshape(%756, newshape=[144, 1]) /* ty=Tensor[(144, 1), float64] */;
    %761 = @func_3896(%757, %758, %759, %760) /* ty=(Tensor[(7, 13, 7), float64], Tensor[(12, 12, 3), float32], Tensor[(12, 12, 3), float32], Tensor[(40), float64], Tensor[(144, 1), float64], Tensor[(15, 8, 5), float64]) */;
    %762 = cast(meta[relay.Constant][41] /* ty=Tensor[(144), float64] */, dtype="float64") /* ty=Tensor[(144), float64] */;
    %763 = reshape(%762, newshape=[9, 1, 16]) /* ty=Tensor[(9, 1, 16), float64] */;
    %764 = @func_672(%763) /* ty=(Tensor[(9, 1, 16), float64],) */;
    %765 = subtract(%746, %747) /* ty=Tensor[(12, 130), int16] */;
    %766 = %752.1;
    %767 = %761.1;
    %768 = %764.0;
    (%765, %766, meta[relay.Constant][38] /* ty=Tensor[(132), float32] */, meta[relay.Constant][39] /* ty=Tensor[(40, 1), float64] */, %767, meta[relay.Constant][40] /* ty=Tensor[(49), float64] */, %var_3988, meta[relay.Constant][41] /* ty=Tensor[(144), float64] */, %768)
  };
  %769(%var_4017) /* ty=(Tensor[(12, 130), int16], uint8, Tensor[(132), float32], Tensor[(40, 1), float64], Tensor[(12, 12, 3), float32], Tensor[(49), float64], Tensor[(637), float64], Tensor[(144), float64], Tensor[(9, 1, 16), float64]) */
}

def @func_4638() -> (Tensor[(12, 130), float64],) {
  %772 = fn () -> (Tensor[(12, 130), float64],) {
    %770 = @func_3254() /* ty=(Tensor[(12, 130), float64], Tensor[(1560), float64], Tensor[(33, 7), float64], uint8, Tensor[(7, 3, 11), float32], uint8, Tensor[(66), float64], Tensor[(40), uint8], Tensor[(2, 20), float64]) */;
    %771 = %770.0;
    (%771,)
  };
  %772() /* ty=(Tensor[(12, 130), float64],) */
}

def @func_10673() -> (Tensor[(1560), float64],) {
  %773 = @func_4791() /* ty=Tensor[(1560), float64] */;
  (%773,)
}

def @func_5773() -> (Tensor[(12, 12, 3), float32], Tensor[(1560), float32], Tensor[(12, 130), float64]) {
  @func_5771() /* ty=(Tensor[(12, 12, 3), float32], Tensor[(1560), float32], Tensor[(12, 130), float64]) */
}

def @func_12129() -> (Tensor[(10, 12, 13), float64], Tensor[(1560), float32]) {
  %777 = fn () -> (Tensor[(10, 12, 13), float64], Tensor[(1560), float32]) {
    %774 = @func_4965() /* ty=(Tensor[(12, 12, 3), float32], Tensor[(10, 12, 13), float64], Tensor[(1560, 1), float64], Tensor[(1560), float64], Tensor[(40, 1), float64], Tensor[(40), float64], Tensor[(144), float64]) */;
    %775 = %774.1;
    %776 = @func_5679() /* ty=Tensor[(1560), float32] */;
    (%775, %776)
  };
  %777() /* ty=(Tensor[(10, 12, 13), float64], Tensor[(1560), float32]) */
}

def @func_11386(%var_11384: Tensor[(1, 945), uint32]) -> (Tensor[(12, 12, 3), float32], Tensor[(140, 16), int32], Tensor[(1, 945), int32]) {
  @func_11383(%var_11384) /* ty=(Tensor[(12, 12, 3), float32], Tensor[(140, 16), int32], Tensor[(1, 945), int32]) */
}

def @func_3844(%var_3813: Tensor[(12, 130), float32], %var_3823: Tensor[(2, 20), uint8]) -> (Tensor[(12, 130), int32], uint8, Tensor[(66), float64], uint8, Tensor[(2, 20), uint8]) {
  %778 = @func_2829() /* ty=(Tensor[(12, 12, 3), float32], Tensor[(10, 12, 13), float64], Tensor[(12, 130), float64]) */;
  %779 = %778.2;
  %780 = cast(%779, dtype="float32") /* ty=Tensor[(12, 130), float32] */;
  %781 = rsqrt(%780) /* ty=Tensor[(12, 130), float32] */;
  %782 = cast(%var_3813, dtype="int32") /* ty=Tensor[(12, 130), int32] */;
  %783 = shape_of(%781, dtype="int32") /* ty=Tensor[(2), int32] */;
  %784 = cast(%781, dtype="int32") /* ty=Tensor[(12, 130), int32] */;
  %785 = dyn.reshape(%782, %783, newshape=[]) /* ty=Tensor[(?, ?), int32] */;
  %786 = cast(meta[relay.Constant][42] /* ty=Tensor[(66), float64] */, dtype="float64") /* ty=Tensor[(66), float64] */;
  %787 = cast(meta[relay.Constant][43] /* ty=uint8 */, dtype="uint8") /* ty=uint8 */;
  %788 = cast(%var_3823, dtype="uint8") /* ty=Tensor[(2, 20), uint8] */;
  %789 = reshape(%786, newshape=[2, 3, 11]) /* ty=Tensor[(2, 3, 11), float64] */;
  %790 = reshape(%787, newshape=[]) /* ty=uint8 */;
  %791 = reshape(%788, newshape=[2, 20]) /* ty=Tensor[(2, 20), uint8] */;
  %792 = @func_2472(%789, %790, %791) /* ty=(Tensor[(?, 8, 5), int32], uint8, Tensor[(2, 20), uint8], Tensor[(2, 3, 11), float64]) */;
  %793 = left_shift(%784, %785) /* ty=Tensor[(12, 130), int32] */;
  %794 = %792.1;
  (%793, %794, meta[relay.Constant][42] /* ty=Tensor[(66), float64] */, meta[relay.Constant][43] /* ty=uint8 */, %var_3823)
}

def @func_11254() -> (Tensor[(1560), float64], Tensor[(4, 10, 7), bool], Tensor[(280), uint16], Tensor[(2, 20), float64]) {
  @func_11252() /* ty=(Tensor[(1560), float64], Tensor[(4, 10, 7), bool], Tensor[(280), uint16], Tensor[(2, 20), float64]) */
}

def @func_2174(%var_2172: Tensor[(10, 12, 13), float64]) -> Tensor[(10, 12, 13), float64] {
  @func_2171(%var_2172) /* ty=Tensor[(10, 12, 13), float64] */
}

def @func_6222() -> (Tensor[(12, 12, 3), float32], Tensor[(12, 12, 3), float32]) {
  %795 = @func_2864() /* ty=(Tensor[(12, 12, 3), float32],) */;
  %796 = @func_2864() /* ty=(Tensor[(12, 12, 3), float32],) */;
  %797 = %795.0;
  %798 = %796.0;
  (%797, %798)
}

def @func_2171(%var_2161: Tensor[(10, 12, 13), float64]) -> Tensor[(10, 12, 13), float64] {
  %799 = cast(%var_2161, dtype="float64") /* ty=Tensor[(10, 12, 13), float64] */;
  asin(%799) /* ty=Tensor[(10, 12, 13), float64] */
}

def @func_7075() -> (Tensor[(40, 1), float64], Tensor[(40), uint8], Tensor[(40), uint8], Tensor[(12, 12, 3), float32]) {
  %806 = fn () -> (Tensor[(40, 1), float64], Tensor[(40), uint8], Tensor[(40), uint8], Tensor[(12, 12, 3), float32]) {
    %800 = @func_4965() /* ty=(Tensor[(12, 12, 3), float32], Tensor[(10, 12, 13), float64], Tensor[(1560, 1), float64], Tensor[(1560), float64], Tensor[(40, 1), float64], Tensor[(40), float64], Tensor[(144), float64]) */;
    %801 = @func_4482() /* ty=(Tensor[(12, 12, 3), float32], Tensor[(1560), float64], Tensor[(12, 130), float64]) */;
    %802 = %800.4;
    %803 = @func_4904() /* ty=Tensor[(40), uint8] */;
    %804 = @func_5306() /* ty=Tensor[(40), uint8] */;
    %805 = %801.0;
    (%802, %803, %804, %805)
  };
  %806() /* ty=(Tensor[(40, 1), float64], Tensor[(40), uint8], Tensor[(40), uint8], Tensor[(12, 12, 3), float32]) */
}

def @func_13004() -> (Tensor[(40), uint8], Tensor[(10, 12, 13), float64], Tensor[(12, 12, 3), float32], Tensor[(12, 12, 3), float32]) {
  %815 = fn () -> (Tensor[(40), uint8], Tensor[(10, 12, 13), float64], Tensor[(12, 12, 3), float32], Tensor[(12, 12, 3), float32]) {
    %807 = @func_4819() /* ty=(Tensor[(40), uint8],) */;
    %808 = @func_12128() /* ty=(Tensor[(10, 12, 13), float64], Tensor[(1560), float32]) */;
    %809 = @func_12079() /* ty=(Tensor[(12, 12, 3), float32],) */;
    %810 = @func_6222() /* ty=(Tensor[(12, 12, 3), float32], Tensor[(12, 12, 3), float32]) */;
    %811 = %807.0;
    %812 = %808.0;
    %813 = %809.0;
    %814 = %810.0;
    (%811, %812, %813, %814)
  };
  %815() /* ty=(Tensor[(40), uint8], Tensor[(10, 12, 13), float64], Tensor[(12, 12, 3), float32], Tensor[(12, 12, 3), float32]) */
}

def @func_11252() -> (Tensor[(1560), float64], Tensor[(4, 10, 7), bool], Tensor[(280), uint16], Tensor[(2, 20), float64]) {
  %816 = @func_4923() /* ty=(Tensor[(1560), float64],) */;
  %817 = %816.0;
  %818 = cast(%817, dtype="float64") /* ty=Tensor[(1560), float64] */;
  %819 = cast(meta[relay.Constant][44] /* ty=Tensor[(280), uint16] */, dtype="uint16") /* ty=Tensor[(280), uint16] */;
  %820 = cast(meta[relay.Constant][44] /* ty=Tensor[(280), uint16] */, dtype="uint16") /* ty=Tensor[(280), uint16] */;
  %821 = reshape(%819, newshape=[4, 10, 7]) /* ty=Tensor[(4, 10, 7), uint16] */;
  %822 = reshape(%820, newshape=[4, 10, 7]) /* ty=Tensor[(4, 10, 7), uint16] */;
  %823 = @func_5825(%821, %822) /* ty=(Tensor[(4, 10, 7), uint16], Tensor[(4, 10, 7), bool]) */;
  %824 = @func_9193() /* ty=(Tensor[(2, 20), float64],) */;
  %825 = erf(%818) /* ty=Tensor[(1560), float64] */;
  %826 = %823.1;
  %827 = %824.0;
  (%825, %826, meta[relay.Constant][44] /* ty=Tensor[(280), uint16] */, %827)
}

def @func_7899() -> (Tensor[(12, 12, 3), float32], Tensor[(140, 16), int32], Tensor[(140, 16), float64]) {
  @func_7897() /* ty=(Tensor[(12, 12, 3), float32], Tensor[(140, 16), int32], Tensor[(140, 16), float64]) */
}

def @func_7511() -> (Tensor[(12, 12, 3), float32],) {
  @func_7509() /* ty=(Tensor[(12, 12, 3), float32],) */
}

def @func_3519(%var_3448: Tensor[(40), uint8], %var_3465: Tensor[(12, 12, 3), float32], %var_3511: Tensor[(12, 12, 3), float64]) -> (Tensor[(12, 12, 3), float32], Tensor[(132), float32], uint8, Tensor[(40), uint8], Tensor[(12, 12, 3), float64], Tensor[(12, 12, 3), float32], Tensor[(10, 12, 13), float64], Tensor[(1, 1560), float64], Tensor[(12, 12, 3), float64], Tensor[(12, 12, 3), int8]) {
  %828 = @func_2864() /* ty=(Tensor[(12, 12, 3), float32],) */;
  %829 = cast(meta[relay.Constant][45] /* ty=uint8 */, dtype="uint8") /* ty=uint8 */;
  %830 = cast(%var_3448, dtype="uint8") /* ty=Tensor[(40), uint8] */;
  %831 = reshape(%829, newshape=[]) /* ty=uint8 */;
  %832 = reshape(%830, newshape=[1, 8, 5]) /* ty=Tensor[(1, 8, 5), uint8] */;
  %833 = @func_619(%831, %832) /* ty=(Tensor[(3, 11, 4), float32], Tensor[(132), float32], Tensor[(?, 8, 5), int32], Tensor[(3, 11, 4), float32], Tensor[(3, 11, 4), float32]) */;
  %834 = cast(%var_3448, dtype="float64") /* ty=Tensor[(40), float64] */;
  %835 = reshape(%834, newshape=[2, 20]) /* ty=Tensor[(2, 20), float64] */;
  %836 = @func_3030(%835) /* ty=(Tensor[(12, 12, 3), float32], Tensor[(9, 1, 16), float64], Tensor[(2, 20), float64], Tensor[(144), float64]) */;
  %837 = %836.0;
  %838 = cast(%var_3465, dtype="float64") /* ty=Tensor[(12, 12, 3), float64] */;
  %839 = shape_of(%837, dtype="int32") /* ty=Tensor[(3), int32] */;
  %840 = cast(%837, dtype="float64") /* ty=Tensor[(12, 12, 3), float64] */;
  %841 = dyn.reshape(%838, %839, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %842 = @func_2829() /* ty=(Tensor[(12, 12, 3), float32], Tensor[(10, 12, 13), float64], Tensor[(12, 130), float64]) */;
  %843 = cast(meta[relay.Constant][46] /* ty=Tensor[(1, 1560), float64] */, dtype="float64") /* ty=Tensor[(1, 1560), float64] */;
  %844 = reshape(%843, newshape=[10, 12, 13]) /* ty=Tensor[(10, 12, 13), float64] */;
  %845 = cast(%837, dtype="float64") /* ty=Tensor[(12, 12, 3), float64] */;
  %846 = atanh(%845) /* ty=Tensor[(12, 12, 3), float64] */;
  %847 = cast(%846, dtype="float64") /* ty=Tensor[(12, 12, 3), float64] */;
  %848 = cast(%var_3511, dtype="int8") /* ty=Tensor[(12, 12, 3), int8] */;
  %849 = shape_of(%846, dtype="int32") /* ty=Tensor[(3), int32] */;
  %850 = cast(%846, dtype="int8") /* ty=Tensor[(12, 12, 3), int8] */;
  %851 = dyn.reshape(%848, %849, newshape=[]) /* ty=Tensor[(?, ?, ?), int8] */;
  %852 = %828.0;
  %853 = %833.1;
  %854 = mod(%840, %841) /* ty=Tensor[(12, 12, 3), float64] */;
  %855 = %842.0;
  %856 = @func_2171(%844) /* ty=Tensor[(10, 12, 13), float64] */;
  %857 = erf(%847) /* ty=Tensor[(12, 12, 3), float64] */;
  %858 = maximum(%850, %851) /* ty=Tensor[(12, 12, 3), int8] */;
  (%852, %853, meta[relay.Constant][45] /* ty=uint8 */, %var_3448, %854, %855, %856, meta[relay.Constant][46] /* ty=Tensor[(1, 1560), float64] */, %857, %858)
}

def @func_10763() -> (Tensor[(40), uint8],) {
  %859 = @func_10041() /* ty=Tensor[(40), uint8] */;
  (%859,)
}

def @func_12735() -> (Tensor[(12, 12, 3), float32],) {
  @func_12733() /* ty=(Tensor[(12, 12, 3), float32],) */
}

def @func_8680() -> (Tensor[(12, 12, 3), float32],) {
  %860 = @func_4146() /* ty=(Tensor[(12, 12, 3), float32], Tensor[(12, 12, 3), float32], Tensor[(12, 12, 3), float32]) */;
  %861 = %860.2;
  (%861,)
}

def @func_10001(%var_9991: Tensor[(12, 12, 3), float32]) -> Tensor[(12, 12, 3), int8] {
  %862 = @func_6249() /* ty=(Tensor[(12, 12, 3), float32],) */;
  %863 = %862.0;
  %864 = cast(%var_9991, dtype="int8") /* ty=Tensor[(12, 12, 3), int8] */;
  %865 = shape_of(%863, dtype="int32") /* ty=Tensor[(3), int32] */;
  %866 = cast(%863, dtype="int8") /* ty=Tensor[(12, 12, 3), int8] */;
  %867 = dyn.reshape(%864, %865, newshape=[]) /* ty=Tensor[(?, ?, ?), int8] */;
  multiply(%866, %867) /* ty=Tensor[(12, 12, 3), int8] */
}

def @func_12000() -> (Tensor[(40), uint8], Tensor[(40), uint8]) {
  %868 = @func_9067() /* ty=(Tensor[(40), uint8],) */;
  %869 = @func_5387() /* ty=(Tensor[(40), uint8], Tensor[(40), uint8]) */;
  %870 = %868.0;
  %871 = %869.0;
  (%870, %871)
}

def @func_12491() -> (Tensor[(1560), float64], Tensor[(40), float64], Tensor[(12, 12, 3), float32]) {
  %872 = @func_4965() /* ty=(Tensor[(12, 12, 3), float32], Tensor[(10, 12, 13), float64], Tensor[(1560, 1), float64], Tensor[(1560), float64], Tensor[(40, 1), float64], Tensor[(40), float64], Tensor[(144), float64]) */;
  %873 = @func_2864() /* ty=(Tensor[(12, 12, 3), float32],) */;
  %874 = @func_4791() /* ty=Tensor[(1560), float64] */;
  %875 = %872.5;
  %876 = %873.0;
  (%874, %875, %876)
}

def @func_960(%var_958: Tensor[(1, 8, 5), float64], %var_959: Tensor[(144), float64]) -> (Tensor[(15, 8, 5), bool], Tensor[(9, 1, 16), float64], Tensor[(144), float64]) {
  @func_956(%var_958, %var_959) /* ty=(Tensor[(15, 8, 5), bool], Tensor[(9, 1, 16), float64], Tensor[(144), float64]) */
}

def @func_7481(%var_7479: Tensor[(16, 8, 5), uint8], %var_7480: Tensor[(2520), int32]) -> (Tensor[(16, 8, 5), float32], Tensor[(14, 15, 12), int32], Tensor[(2520), int32], Tensor[(1560), float64]) {
  @func_7477(%var_7479, %var_7480) /* ty=(Tensor[(16, 8, 5), float32], Tensor[(14, 15, 12), int32], Tensor[(2520), int32], Tensor[(1560), float64]) */
}

def @func_9915(%var_9912: Tensor[(14, 9, 10), float32]) -> Tensor[(14, 9, 10), float32] {
  %877 = cast(%var_9912, dtype="float32") /* ty=Tensor[(14, 9, 10), float32] */;
  atan(%877) /* ty=Tensor[(14, 9, 10), float32] */
}

def @func_4905() -> Tensor[(40), uint8] {
  %879 = fn () -> Tensor[(40), uint8] {
    %878 = @func_4819() /* ty=(Tensor[(40), uint8],) */;
    %878.0
  };
  %879() /* ty=Tensor[(40), uint8] */
}

def @func_13362(%var_13360: uint16, %var_13361: Tensor[(6, 15, 4), uint16]) -> (Tensor[(6, 15, 4), bool], Tensor[(40, 1), float64]) {
  %885 = fn (%var_13332: uint16, %var_13333: Tensor[(6, 15, 4), uint16]) -> (Tensor[(6, 15, 4), bool], Tensor[(40, 1), float64]) {
    %880 = cast(%var_13332, dtype="bool") /* ty=bool */;
    %881 = cast(%var_13333, dtype="bool") /* ty=Tensor[(6, 15, 4), bool] */;
    %882 = @func_12046() /* ty=(Tensor[(40, 1), float64],) */;
    %883 = less_equal(%880, %881) /* ty=Tensor[(6, 15, 4), bool] */;
    %884 = %882.0;
    (%883, %884)
  };
  %885(%var_13360, %var_13361) /* ty=(Tensor[(6, 15, 4), bool], Tensor[(40, 1), float64]) */
}

def @func_4315(%var_4313: Tensor[(2, 20), uint8]) -> (Tensor[(12, 12, 3), int32], Tensor[(3, 11, 4), float32], uint8, Tensor[(1560), float64], Tensor[(12, 12, 3), float64], Tensor[(3, 11, 4), float32], Tensor[(2, 20), uint8]) {
  @func_4312(%var_4313) /* ty=(Tensor[(12, 12, 3), int32], Tensor[(3, 11, 4), float32], uint8, Tensor[(1560), float64], Tensor[(12, 12, 3), float64], Tensor[(3, 11, 4), float32], Tensor[(2, 20), uint8]) */
}

def @func_11610() -> (Tensor[(40), uint8], uint8, Tensor[(9, 1, 16), float64], Tensor[(144), float64]) {
  @func_11608() /* ty=(Tensor[(40), uint8], uint8, Tensor[(9, 1, 16), float64], Tensor[(144), float64]) */
}

def @func_2830() -> (Tensor[(12, 12, 3), float32], Tensor[(10, 12, 13), float64], Tensor[(12, 130), float64]) {
  %891 = fn () -> (Tensor[(12, 12, 3), float32], Tensor[(10, 12, 13), float64], Tensor[(12, 130), float64]) {
    %886 = cast(meta[relay.Constant][47] /* ty=Tensor[(12, 12, 3), float32] */, dtype="float32") /* ty=Tensor[(12, 12, 3), float32] */;
    %887 = cast(meta[relay.Constant][48] /* ty=Tensor[(12, 130), float64] */, dtype="float64") /* ty=Tensor[(12, 130), float64] */;
    %888 = reshape(%887, newshape=[10, 12, 13]) /* ty=Tensor[(10, 12, 13), float64] */;
    %889 = acos(%886) /* ty=Tensor[(12, 12, 3), float32] */;
    %890 = @func_2171(%888) /* ty=Tensor[(10, 12, 13), float64] */;
    (%889, %890, meta[relay.Constant][48] /* ty=Tensor[(12, 130), float64] */)
  };
  %891() /* ty=(Tensor[(12, 12, 3), float32], Tensor[(10, 12, 13), float64], Tensor[(12, 130), float64]) */
}

def @func_3896(%var_3857: Tensor[(7, 1, 7), float64], %var_3858: Tensor[(7, 13, 7), float64], %var_3884: Tensor[(40), float64], %var_3885: Tensor[(144, 1), float64]) -> (Tensor[(7, 13, 7), float64], Tensor[(12, 12, 3), float32], Tensor[(12, 12, 3), float32], Tensor[(40), float64], Tensor[(144, 1), float64], Tensor[(15, 8, 5), float64]) {
  %892 = cast(%var_3857, dtype="float64") /* ty=Tensor[(7, 1, 7), float64] */;
  %893 = cast(%var_3858, dtype="float64") /* ty=Tensor[(7, 13, 7), float64] */;
  %894 = @func_2864() /* ty=(Tensor[(12, 12, 3), float32],) */;
  %895 = @func_2864() /* ty=(Tensor[(12, 12, 3), float32],) */;
  %896 = cast(%var_3884, dtype="float64") /* ty=Tensor[(40), float64] */;
  %897 = cast(%var_3885, dtype="float64") /* ty=Tensor[(144, 1), float64] */;
  %898 = reshape(%896, newshape=[1, 8, 5]) /* ty=Tensor[(1, 8, 5), float64] */;
  %899 = reshape(%897, newshape=[144]) /* ty=Tensor[(144), float64] */;
  %900 = @func_956(%898, %899) /* ty=(Tensor[(15, 8, 5), bool], Tensor[(9, 1, 16), float64], Tensor[(144), float64]) */;
  %901 = %900.0;
  %902 = cast(%901, dtype="float64") /* ty=Tensor[(15, 8, 5), float64] */;
  %903 = divide(%892, %893) /* ty=Tensor[(7, 13, 7), float64] */;
  %904 = %894.0;
  %905 = %895.0;
  %906 = asinh(%902) /* ty=Tensor[(15, 8, 5), float64] */;
  (%903, %904, %905, %var_3884, %var_3885, %906)
}

def @func_8682() -> (Tensor[(12, 12, 3), float32],) {
  @func_8680() /* ty=(Tensor[(12, 12, 3), float32],) */
}

def @func_5057(%var_5041: Tensor[(14, 15, 12), int32]) -> (Tensor[(14, 15, 12), int32], Tensor[(12, 12, 3), float32]) {
  %907 = cast(%var_5041, dtype="int32") /* ty=Tensor[(14, 15, 12), int32] */;
  %908 = shape_of(meta[relay.Constant][49] /* ty=Tensor[(14, 15, 12), int32] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %909 = cast(meta[relay.Constant][49] /* ty=Tensor[(14, 15, 12), int32] */, dtype="int32") /* ty=Tensor[(14, 15, 12), int32] */;
  %910 = dyn.reshape(%907, %908, newshape=[]) /* ty=Tensor[(?, ?, ?), int32] */;
  %911 = multiply(%909, %910) /* ty=Tensor[(14, 15, 12), int32] */;
  %912 = @func_3372() /* ty=Tensor[(12, 12, 3), float32] */;
  (%911, %912)
}

def @func_9250(%var_9248: Tensor[(3, 12, 1), float64]) -> Tensor[(3, 12, 1), float64] {
  @func_9247(%var_9248) /* ty=Tensor[(3, 12, 1), float64] */
}

def @func_11940() -> (Tensor[(12, 12, 3), float32],) {
  %913 = @func_2864() /* ty=(Tensor[(12, 12, 3), float32],) */;
  %914 = %913.0;
  (%914,)
}

def @func_12733() -> (Tensor[(12, 12, 3), float32],) {
  %915 = @func_4739() /* ty=(Tensor[(1560), float64], Tensor[(12, 12, 3), float32]) */;
  %916 = %915.1;
  (%916,)
}

def @func_5920(%var_5911: uint8, %var_5912: Tensor[(1560), float64]) -> (Tensor[(40), uint8], Tensor[(132), float32], Tensor[(231), float64], uint8, Tensor[(1560), float64], Tensor[(12, 12, 3), float32]) {
  %917 = @func_5625() /* ty=(Tensor[(40), uint8],) */;
  %918 = cast(meta[relay.Constant][50] /* ty=Tensor[(231), float64] */, dtype="float64") /* ty=Tensor[(231), float64] */;
  %919 = cast(%var_5911, dtype="uint8") /* ty=uint8 */;
  %920 = cast(%var_5912, dtype="float64") /* ty=Tensor[(1560), float64] */;
  %921 = reshape(%918, newshape=[231]) /* ty=Tensor[(231), float64] */;
  %922 = reshape(%919, newshape=[]) /* ty=uint8 */;
  %923 = reshape(%920, newshape=[2, 780]) /* ty=Tensor[(2, 780), float64] */;
  %924 = @func_3690(%921, %922, %923) /* ty=(Tensor[(12, 12, 3), float32], uint8, Tensor[(2, 780), float64], Tensor[(231), float32], Tensor[(1560), float64], Tensor[(10, 12, 13), float64], uint8, Tensor[(132), float32]) */;
  %925 = @func_5527() /* ty=(Tensor[(1560), float64], Tensor[(12, 12, 3), float32]) */;
  %926 = %917.0;
  %927 = %924.7;
  %928 = %925.1;
  (%926, %927, meta[relay.Constant][50] /* ty=Tensor[(231), float64] */, %var_5911, %var_5912, %928)
}

def @func_11935() -> (Tensor[(12, 12, 3), float32],) {
  @func_11933() /* ty=(Tensor[(12, 12, 3), float32],) */
}

def @func_9272(%var_9271: Tensor[(15, 7, 9), uint32]) -> Tensor[(15, 7, 9), bool] {
  %931 = fn (%var_9261: Tensor[(15, 7, 9), uint32]) -> Tensor[(15, 7, 9), bool] {
    %929 = cast(meta[relay.Constant][51] /* ty=uint32 */, dtype="bool") /* ty=bool */;
    %930 = cast(%var_9261, dtype="bool") /* ty=Tensor[(15, 7, 9), bool] */;
    greater(%929, %930) /* ty=Tensor[(15, 7, 9), bool] */
  };
  %931(%var_9271) /* ty=Tensor[(15, 7, 9), bool] */
}

def @func_4821() -> (Tensor[(40), uint8],) {
  @func_4819() /* ty=(Tensor[(40), uint8],) */
}

def @func_7611() -> (Tensor[(12, 12, 3), float32],) {
  %932 = @func_7395() /* ty=(Tensor[(12, 12, 3), float32], Tensor[(12, 12, 3), float32]) */;
  %933 = %932.1;
  (%933,)
}

def @main(%var_13413: Tensor[(16, 3, 15), float64]) -> (Tensor[(16, 3, 15), float64],) {
  %934 = cast(%var_13413, dtype="float64") /* ty=Tensor[(16, 3, 15), float64] */;
  %935 = rsqrt(%934) /* ty=Tensor[(16, 3, 15), float64] */;
  (%935,)
}

def @func_5771() -> (Tensor[(12, 12, 3), float32], Tensor[(1560), float32], Tensor[(12, 130), float64]) {
  %936 = @func_4637() /* ty=(Tensor[(12, 130), float64],) */;
  %937 = @func_4522() /* ty=Tensor[(12, 12, 3), float32] */;
  %938 = @func_5679() /* ty=Tensor[(1560), float32] */;
  %939 = %936.0;
  (%937, %938, %939)
}

def @func_3618() -> Tensor[(1560), float64] {
  %940 = @func_3254() /* ty=(Tensor[(12, 130), float64], Tensor[(1560), float64], Tensor[(33, 7), float64], uint8, Tensor[(7, 3, 11), float32], uint8, Tensor[(66), float64], Tensor[(40), uint8], Tensor[(2, 20), float64]) */;
  %940.1
}

def @func_12493() -> (Tensor[(1560), float64], Tensor[(40), float64], Tensor[(12, 12, 3), float32]) {
  @func_12491() /* ty=(Tensor[(1560), float64], Tensor[(40), float64], Tensor[(12, 12, 3), float32]) */
}

def @func_4707(%var_4706: Tensor[(40), float64]) -> (Tensor[(12, 12, 3), float32], Tensor[(9, 1, 16), float64], Tensor[(40), float64], Tensor[(144), float64], Tensor[(9, 1, 16), float64]) {
  %953 = fn (%var_4686: Tensor[(40), float64]) -> (Tensor[(12, 12, 3), float32], Tensor[(9, 1, 16), float64], Tensor[(40), float64], Tensor[(144), float64], Tensor[(9, 1, 16), float64]) {
    %941 = @func_2864() /* ty=(Tensor[(12, 12, 3), float32],) */;
    %942 = cast(%var_4686, dtype="float64") /* ty=Tensor[(40), float64] */;
    %943 = cast(meta[relay.Constant][52] /* ty=Tensor[(144), float64] */, dtype="float64") /* ty=Tensor[(144), float64] */;
    %944 = reshape(%942, newshape=[1, 8, 5]) /* ty=Tensor[(1, 8, 5), float64] */;
    %945 = reshape(%943, newshape=[144]) /* ty=Tensor[(144), float64] */;
    %946 = @func_956(%944, %945) /* ty=(Tensor[(15, 8, 5), bool], Tensor[(9, 1, 16), float64], Tensor[(144), float64]) */;
    %947 = %946.1;
    %948 = cast(%947, dtype="float64") /* ty=Tensor[(9, 1, 16), float64] */;
    %949 = reshape(%948, newshape=[9, 1, 16]) /* ty=Tensor[(9, 1, 16), float64] */;
    %950 = @func_672(%949) /* ty=(Tensor[(9, 1, 16), float64],) */;
    %951 = %941.0;
    %952 = %950.0;
    (%951, %947, %var_4686, meta[relay.Constant][52] /* ty=Tensor[(144), float64] */, %952)
  };
  %953(%var_4706) /* ty=(Tensor[(12, 12, 3), float32], Tensor[(9, 1, 16), float64], Tensor[(40), float64], Tensor[(144), float64], Tensor[(9, 1, 16), float64]) */
}

def @func_5828(%var_5826: Tensor[(4, 10, 7), uint16], %var_5827: Tensor[(4, 10, 7), uint16]) -> (Tensor[(4, 10, 7), uint16], Tensor[(4, 10, 7), bool]) {
  %964 = fn (%var_5788: Tensor[(4, 10, 7), uint16], %var_5789: Tensor[(4, 10, 7), uint16]) -> (Tensor[(4, 10, 7), uint16], Tensor[(4, 10, 7), bool]) {
    %954 = cast(%var_5789, dtype="uint16") /* ty=Tensor[(4, 10, 7), uint16] */;
    %955 = shape_of(%var_5788, dtype="int32") /* ty=Tensor[(3), int32] */;
    %956 = cast(%var_5788, dtype="uint16") /* ty=Tensor[(4, 10, 7), uint16] */;
    %957 = dyn.reshape(%954, %955, newshape=[]) /* ty=Tensor[(?, ?, ?), uint16] */;
    %958 = cast(%var_5789, dtype="bool") /* ty=Tensor[(4, 10, 7), bool] */;
    %959 = shape_of(%var_5788, dtype="int32") /* ty=Tensor[(3), int32] */;
    %960 = cast(%var_5788, dtype="bool") /* ty=Tensor[(4, 10, 7), bool] */;
    %961 = dyn.reshape(%958, %959, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    %962 = multiply(%956, %957) /* ty=Tensor[(4, 10, 7), uint16] */;
    %963 = greater(%960, %961) /* ty=Tensor[(4, 10, 7), bool] */;
    (%962, %963)
  };
  %964(%var_5826, %var_5827) /* ty=(Tensor[(4, 10, 7), uint16], Tensor[(4, 10, 7), bool]) */
}

def @func_790(%var_789: uint8) -> (Tensor[(3, 11, 4), float32], uint8, Tensor[(40, 1), uint8], Tensor[(1, 14, 9), float64], Tensor[(?, 14, 9), float32], Tensor[(3, 11, 4), float32]) {
  %985 = fn (%var_765: uint8) -> (Tensor[(3, 11, 4), float32], uint8, Tensor[(40, 1), uint8], Tensor[(1, 14, 9), float64], Tensor[(?, 14, 9), float32], Tensor[(3, 11, 4), float32]) {
    %965 = cast(%var_765, dtype="uint8") /* ty=uint8 */;
    %966 = cast(meta[relay.Constant][53] /* ty=Tensor[(40, 1), uint8] */, dtype="uint8") /* ty=Tensor[(40, 1), uint8] */;
    %967 = reshape(%965, newshape=[]) /* ty=uint8 */;
    %968 = reshape(%966, newshape=[1, 8, 5]) /* ty=Tensor[(1, 8, 5), uint8] */;
    %969 = @func_619(%967, %968) /* ty=(Tensor[(3, 11, 4), float32], Tensor[(132), float32], Tensor[(?, 8, 5), int32], Tensor[(3, 11, 4), float32], Tensor[(3, 11, 4), float32]) */;
    %970 = cast(meta[relay.Constant][54] /* ty=Tensor[(1, 14, 9), float32] */, dtype="float32") /* ty=Tensor[(1, 14, 9), float32] */;
    %971 = tan(%970) /* ty=Tensor[(1, 14, 9), float32] */;
    %972 = cast(%971, dtype="float32") /* ty=Tensor[(1, 14, 9), float32] */;
    %973 = log(%972) /* ty=Tensor[(1, 14, 9), float32] */;
    %974 = cast(%973, dtype="float64") /* ty=Tensor[(1, 14, 9), float64] */;
    %975 = cast(%971, dtype="float32") /* ty=Tensor[(1, 14, 9), float32] */;
    %976 = shape_of(%973, dtype="int32") /* ty=Tensor[(3), int32] */;
    %977 = cast(%973, dtype="float32") /* ty=Tensor[(1, 14, 9), float32] */;
    %978 = dyn.reshape(%975, %976, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
    %979 = %969.0;
    %980 = cast(%979, dtype="float32") /* ty=Tensor[(3, 11, 4), float32] */;
    %981 = reshape(%980, newshape=[3, 11, 4]) /* ty=Tensor[(3, 11, 4), float32] */;
    %982 = cos(%974) /* ty=Tensor[(1, 14, 9), float64] */;
    %983 = divide(%977, %978) /* ty=Tensor[(?, 14, 9), float32] */;
    %984 = @func_97(%981) /* ty=Tensor[(3, 11, 4), float32] */;
    (%979, %var_765, meta[relay.Constant][53] /* ty=Tensor[(40, 1), uint8] */, %982, %983, %984)
  };
  %985(%var_789) /* ty=(Tensor[(3, 11, 4), float32], uint8, Tensor[(40, 1), uint8], Tensor[(1, 14, 9), float64], Tensor[(?, 14, 9), float32], Tensor[(3, 11, 4), float32]) */
}

def @func_12079() -> (Tensor[(12, 12, 3), float32],) {
  %986 = @func_3933() /* ty=(Tensor[(12, 12, 3), float32],) */;
  %987 = %986.0;
  (%987,)
}

def @func_6224() -> (Tensor[(12, 12, 3), float32], Tensor[(12, 12, 3), float32]) {
  @func_6222() /* ty=(Tensor[(12, 12, 3), float32], Tensor[(12, 12, 3), float32]) */
}

def @func_6636() -> Tensor[(12, 12, 3), float32] {
  %989 = fn () -> Tensor[(12, 12, 3), float32] {
    %988 = @func_2829() /* ty=(Tensor[(12, 12, 3), float32], Tensor[(10, 12, 13), float64], Tensor[(12, 130), float64]) */;
    %988.0
  };
  %989() /* ty=Tensor[(12, 12, 3), float32] */
}

def @func_672(%var_665: Tensor[(9, 1, 16), float64]) -> (Tensor[(9, 1, 16), float64],) {
  %990 = cast(%var_665, dtype="float64") /* ty=Tensor[(9, 1, 16), float64] */;
  %991 = sigmoid(%990) /* ty=Tensor[(9, 1, 16), float64] */;
  (%991,)
}

def @func_9724(%var_9718: Tensor[(432), float32]) -> (Tensor[(1560), float64], Tensor[(12, 12, 3), uint8], Tensor[(432), float32]) {
  %992 = @func_3254() /* ty=(Tensor[(12, 130), float64], Tensor[(1560), float64], Tensor[(33, 7), float64], uint8, Tensor[(7, 3, 11), float32], uint8, Tensor[(66), float64], Tensor[(40), uint8], Tensor[(2, 20), float64]) */;
  %993 = cast(%var_9718, dtype="float32") /* ty=Tensor[(432), float32] */;
  %994 = reshape(%993, newshape=[12, 12, 3]) /* ty=Tensor[(12, 12, 3), float32] */;
  %995 = @func_6311(%994) /* ty=(Tensor[(12, 12, 3), uint8], Tensor[(12, 12, 3), float64], Tensor[(2, 20), uint8], Tensor[(12, 130), float32], Tensor[(40), uint8]) */;
  %996 = %992.1;
  %997 = %995.0;
  (%996, %997, %var_9718)
}

def @func_11153(%var_11152: Tensor[(1560), float64]) -> (Tensor[(1560), bool], Tensor[(12, 12, 3), float32], Tensor[(12, 12, 3), float32], Tensor[(12, 12, 3), float64]) {
  %1012 = fn (%var_11115: Tensor[(1560), float64]) -> (Tensor[(1560), bool], Tensor[(12, 12, 3), float32], Tensor[(12, 12, 3), float32], Tensor[(12, 12, 3), float64]) {
    %998 = @func_6802() /* ty=Tensor[(1560), float64] */;
    %999 = cast(%var_11115, dtype="bool") /* ty=Tensor[(1560), bool] */;
    %1000 = shape_of(%998, dtype="int32") /* ty=Tensor[(1), int32] */;
    %1001 = cast(%998, dtype="bool") /* ty=Tensor[(1560), bool] */;
    %1002 = dyn.reshape(%999, %1000, newshape=[]) /* ty=Tensor[(?), bool] */;
    %1003 = @func_5342() /* ty=(Tensor[(12, 12, 3), float32],) */;
    %1004 = @func_8107() /* ty=(Tensor[(12, 12, 3), float32],) */;
    %1005 = %1004.0;
    %1006 = cast(%1005, dtype="float32") /* ty=Tensor[(12, 12, 3), float32] */;
    %1007 = reshape(%1006, newshape=[12, 12, 3]) /* ty=Tensor[(12, 12, 3), float32] */;
    %1008 = @func_6311(%1007) /* ty=(Tensor[(12, 12, 3), uint8], Tensor[(12, 12, 3), float64], Tensor[(2, 20), uint8], Tensor[(12, 130), float32], Tensor[(40), uint8]) */;
    %1009 = equal(%1001, %1002) /* ty=Tensor[(1560), bool] */;
    %1010 = %1003.0;
    %1011 = %1008.1;
    (%1009, %1010, %1005, %1011)
  };
  %1012(%var_11152) /* ty=(Tensor[(1560), bool], Tensor[(12, 12, 3), float32], Tensor[(12, 12, 3), float32], Tensor[(12, 12, 3), float64]) */
}

def @func_8131() -> Tensor[(1560), float64] {
  %1014 = fn () -> Tensor[(1560), float64] {
    %1013 = @func_5527() /* ty=(Tensor[(1560), float64], Tensor[(12, 12, 3), float32]) */;
    %1013.0
  };
  %1014() /* ty=Tensor[(1560), float64] */
}

def @func_5389() -> (Tensor[(40), uint8], Tensor[(40), uint8]) {
  @func_5387() /* ty=(Tensor[(40), uint8], Tensor[(40), uint8]) */
}

def @func_8415() -> (Tensor[(40), uint8],) {
  %1015 = @func_5387() /* ty=(Tensor[(40), uint8], Tensor[(40), uint8]) */;
  %1016 = %1015.0;
  (%1016,)
}

def @func_10576() -> (Tensor[(12, 12, 3), float32],) {
  %1021 = fn () -> (Tensor[(12, 12, 3), float32],) {
    %1017 = @func_8180() /* ty=(Tensor[(12, 12, 3), float32], Tensor[(12, 12, 3), float32], Tensor[(1560), float64], Tensor[(2, 20), float64]) */;
    %1018 = %1017.0;
    %1019 = cast(%1018, dtype="float32") /* ty=Tensor[(12, 12, 3), float32] */;
    %1020 = asinh(%1019) /* ty=Tensor[(12, 12, 3), float32] */;
    (%1020,)
  };
  %1021() /* ty=(Tensor[(12, 12, 3), float32],) */
}

def @func_5306() -> Tensor[(40), uint8] {
  %1022 = @func_4819() /* ty=(Tensor[(40), uint8],) */;
  %1022.0
}

def @func_4772(%var_4770: Tensor[(132), float32], %var_4771: Tensor[(40, 1), float64]) -> (Tensor[(1560), float64], Tensor[(3, 11, 4), float32], Tensor[(132), float32], Tensor[(40), float64], Tensor[(40, 1), float64]) {
  @func_4768(%var_4770, %var_4771) /* ty=(Tensor[(1560), float64], Tensor[(3, 11, 4), float32], Tensor[(132), float32], Tensor[(40), float64], Tensor[(40, 1), float64]) */
}

def @func_10788(%var_10787: Tensor[(12, 130), float64]) -> (Tensor[(12, 130), bool],) {
  %1030 = fn (%var_10775: Tensor[(12, 130), float64]) -> (Tensor[(12, 130), bool],) {
    %1023 = @func_4637() /* ty=(Tensor[(12, 130), float64],) */;
    %1024 = %1023.0;
    %1025 = cast(%var_10775, dtype="bool") /* ty=Tensor[(12, 130), bool] */;
    %1026 = shape_of(%1024, dtype="int32") /* ty=Tensor[(2), int32] */;
    %1027 = cast(%1024, dtype="bool") /* ty=Tensor[(12, 130), bool] */;
    %1028 = dyn.reshape(%1025, %1026, newshape=[]) /* ty=Tensor[(?, ?), bool] */;
    %1029 = less(%1027, %1028) /* ty=Tensor[(12, 130), bool] */;
    (%1029,)
  };
  %1030(%var_10787) /* ty=(Tensor[(12, 130), bool],) */
}

def @func_4791() -> Tensor[(1560), float64] {
  %1031 = @func_4739() /* ty=(Tensor[(1560), float64], Tensor[(12, 12, 3), float32]) */;
  %1031.0
}

def @func_11082() -> Tensor[(1560), float64] {
  @func_11080() /* ty=Tensor[(1560), float64] */
}

def @func_7950() -> (Tensor[(40), uint8],) {
  %1033 = fn () -> (Tensor[(40), uint8],) {
    %1032 = @func_7283() /* ty=Tensor[(40), uint8] */;
    (%1032,)
  };
  %1033() /* ty=(Tensor[(40), uint8],) */
}

def @func_3524(%var_3521: Tensor[(40), uint8], %var_3522: Tensor[(12, 12, 3), float32], %var_3523: Tensor[(12, 12, 3), float64]) -> (Tensor[(12, 12, 3), float32], Tensor[(132), float32], uint8, Tensor[(40), uint8], Tensor[(12, 12, 3), float64], Tensor[(12, 12, 3), float32], Tensor[(10, 12, 13), float64], Tensor[(1, 1560), float64], Tensor[(12, 12, 3), float64], Tensor[(12, 12, 3), int8]) {
  @func_3519(%var_3521, %var_3522, %var_3523) /* ty=(Tensor[(12, 12, 3), float32], Tensor[(132), float32], uint8, Tensor[(40), uint8], Tensor[(12, 12, 3), float64], Tensor[(12, 12, 3), float32], Tensor[(10, 12, 13), float64], Tensor[(1, 1560), float64], Tensor[(12, 12, 3), float64], Tensor[(12, 12, 3), int8]) */
}

def @func_13395() -> (Tensor[(12, 12, 3), float32], Tensor[(12, 12, 3), float32]) {
  @func_13393() /* ty=(Tensor[(12, 12, 3), float32], Tensor[(12, 12, 3), float32]) */
}

def @func_11070() -> (Tensor[(40), uint8], Tensor[(12, 12, 3), float32], Tensor[(12, 12, 3), float32]) {
  %1038 = fn () -> (Tensor[(40), uint8], Tensor[(12, 12, 3), float32], Tensor[(12, 12, 3), float32]) {
    %1034 = @func_4819() /* ty=(Tensor[(40), uint8],) */;
    %1035 = %1034.0;
    %1036 = @func_4522() /* ty=Tensor[(12, 12, 3), float32] */;
    %1037 = @func_6635() /* ty=Tensor[(12, 12, 3), float32] */;
    (%1035, %1036, %1037)
  };
  %1038() /* ty=(Tensor[(40), uint8], Tensor[(12, 12, 3), float32], Tensor[(12, 12, 3), float32]) */
}

def @func_4091(%var_4074: Tensor[(144), float64]) -> (Tensor[(1560), float64], Tensor[(144), float64], Tensor[(40), float64], Tensor[(144), float64]) {
  %1039 = cast(meta[relay.Constant][55] /* ty=Tensor[(40), float64] */, dtype="float64") /* ty=Tensor[(40), float64] */;
  %1040 = cast(%var_4074, dtype="float64") /* ty=Tensor[(144), float64] */;
  %1041 = reshape(%1039, newshape=[40, 1]) /* ty=Tensor[(40, 1), float64] */;
  %1042 = reshape(%1040, newshape=[144]) /* ty=Tensor[(144), float64] */;
  %1043 = @func_3579(%1041, %1042) /* ty=(Tensor[(12, 12, 3), float32], Tensor[(15, 8, 5), bool], Tensor[(40, 1), float64], Tensor[(144), float64]) */;
  %1044 = @func_3618() /* ty=Tensor[(1560), float64] */;
  %1045 = %1043.3;
  (%1044, %1045, meta[relay.Constant][55] /* ty=Tensor[(40), float64] */, %var_4074)
}

def @func_11325() -> (Tensor[(1560), float64], Tensor[(9, 1, 16), float64], Tensor[(2, 72), float64], Tensor[(2, 20), float64], Tensor[(2, 20), float64]) {
  @func_11323() /* ty=(Tensor[(1560), float64], Tensor[(9, 1, 16), float64], Tensor[(2, 72), float64], Tensor[(2, 20), float64], Tensor[(2, 20), float64]) */
}

def @func_10552(%var_10550: Tensor[(30), float64], %var_10551: Tensor[(66), float64]) -> (Tensor[(40), uint8], Tensor[(40), float64], uint8, Tensor[(30), float64], Tensor[(66), float64]) {
  @func_10548(%var_10550, %var_10551) /* ty=(Tensor[(40), uint8], Tensor[(40), float64], uint8, Tensor[(30), float64], Tensor[(66), float64]) */
}

def @func_6251() -> (Tensor[(12, 12, 3), float32],) {
  @func_6249() /* ty=(Tensor[(12, 12, 3), float32],) */
}

def @func_2472(%var_2455: Tensor[(2, 3, 11), float64], %var_2459: uint8, %var_2460: Tensor[(2, 20), uint8]) -> (Tensor[(?, 8, 5), int32], uint8, Tensor[(2, 20), uint8], Tensor[(2, 3, 11), float64]) {
  %1046 = cast(%var_2459, dtype="uint8") /* ty=uint8 */;
  %1047 = cast(%var_2460, dtype="uint8") /* ty=Tensor[(2, 20), uint8] */;
  %1048 = reshape(%1046, newshape=[]) /* ty=uint8 */;
  %1049 = reshape(%1047, newshape=[1, 8, 5]) /* ty=Tensor[(1, 8, 5), uint8] */;
  %1050 = @func_619(%1048, %1049) /* ty=(Tensor[(3, 11, 4), float32], Tensor[(132), float32], Tensor[(?, 8, 5), int32], Tensor[(3, 11, 4), float32], Tensor[(3, 11, 4), float32]) */;
  %1051 = cast(%var_2455, dtype="float64") /* ty=Tensor[(2, 3, 11), float64] */;
  %1052 = sin(%1051) /* ty=Tensor[(2, 3, 11), float64] */;
  %1053 = cast(%1052, dtype="float64") /* ty=Tensor[(2, 3, 11), float64] */;
  %1054 = %1050.2;
  %1055 = log10(%1053) /* ty=Tensor[(2, 3, 11), float64] */;
  (%1054, %var_2459, %var_2460, %1055)
}

def @func_6846(%var_6844: Tensor[(13, 15, 2), int32]) -> Tensor[(13, 15, 2), int32] {
  @func_6843(%var_6844) /* ty=Tensor[(13, 15, 2), int32] */
}

def @func_4484() -> (Tensor[(12, 12, 3), float32], Tensor[(1560), float64], Tensor[(12, 130), float64]) {
  @func_4482() /* ty=(Tensor[(12, 12, 3), float32], Tensor[(1560), float64], Tensor[(12, 130), float64]) */
}

def @func_8960() -> (Tensor[(12, 12, 3), float32], Tensor[(12, 12, 3), float32], Tensor[(1, 6, 5), float64], Tensor[(30), float64], Tensor[(12, 12, 3), float32]) {
  %1063 = fn () -> (Tensor[(12, 12, 3), float32], Tensor[(12, 12, 3), float32], Tensor[(1, 6, 5), float64], Tensor[(30), float64], Tensor[(12, 12, 3), float32]) {
    %1056 = @func_7147() /* ty=(Tensor[(12, 130), float64], Tensor[(12, 12, 3), float32], Tensor[(12, 12, 3), float32], Tensor[(10, 12, 13), float64]) */;
    %1057 = cast(meta[relay.Constant][56] /* ty=Tensor[(30), float64] */, dtype="float64") /* ty=Tensor[(30), float64] */;
    %1058 = reshape(%1057, newshape=[1, 6, 5]) /* ty=Tensor[(1, 6, 5), float64] */;
    %1059 = @func_5979() /* ty=Tensor[(12, 12, 3), float32] */;
    %1060 = %1056.2;
    %1061 = @func_6941(%1058) /* ty=Tensor[(1, 6, 5), float64] */;
    %1062 = @func_5966() /* ty=Tensor[(12, 12, 3), float32] */;
    (%1059, %1060, %1061, meta[relay.Constant][56] /* ty=Tensor[(30), float64] */, %1062)
  };
  %1063() /* ty=(Tensor[(12, 12, 3), float32], Tensor[(12, 12, 3), float32], Tensor[(1, 6, 5), float64], Tensor[(30), float64], Tensor[(12, 12, 3), float32]) */
}

def @func_4148() -> (Tensor[(12, 12, 3), float32], Tensor[(12, 12, 3), float32], Tensor[(12, 12, 3), float32]) {
  @func_4146() /* ty=(Tensor[(12, 12, 3), float32], Tensor[(12, 12, 3), float32], Tensor[(12, 12, 3), float32]) */
}

def @func_4146() -> (Tensor[(12, 12, 3), float32], Tensor[(12, 12, 3), float32], Tensor[(12, 12, 3), float32]) {
  %1064 = @func_4065() /* ty=(Tensor[(12, 12, 3), float32],) */;
  %1065 = @func_3372() /* ty=Tensor[(12, 12, 3), float32] */;
  %1066 = cast(%1065, dtype="float32") /* ty=Tensor[(12, 12, 3), float32] */;
  %1067 = @func_3372() /* ty=Tensor[(12, 12, 3), float32] */;
  %1068 = %1064.0;
  %1069 = sigmoid(%1066) /* ty=Tensor[(12, 12, 3), float32] */;
  (%1067, %1068, %1069)
}

def @func_8838(%var_8836: Tensor[(10, 3), float64], %var_8837: Tensor[(66), float64]) -> (Tensor[(12, 12, 3), float32], Tensor[(40), uint8], Tensor[(1, 6, 5), float64], Tensor[(10, 3), float64], Tensor[(40), float64], uint8, Tensor[(66), float64], uint8, Tensor[(1560), float64], Tensor[(40), uint8], Tensor[(12, 12, 3), float32]) {
  %1092 = fn (%var_8733: Tensor[(10, 3), float64], %var_8760: Tensor[(66), float64]) -> (Tensor[(12, 12, 3), float32], Tensor[(40), uint8], Tensor[(1, 6, 5), float64], Tensor[(10, 3), float64], Tensor[(40), float64], uint8, Tensor[(66), float64], uint8, Tensor[(1560), float64], Tensor[(40), uint8], Tensor[(12, 12, 3), float32]) {
    %1070 = @func_7395() /* ty=(Tensor[(12, 12, 3), float32], Tensor[(12, 12, 3), float32]) */;
    %1071 = @func_4819() /* ty=(Tensor[(40), uint8],) */;
    %1072 = cast(%var_8733, dtype="float64") /* ty=Tensor[(10, 3), float64] */;
    %1073 = reshape(%1072, newshape=[1, 6, 5]) /* ty=Tensor[(1, 6, 5), float64] */;
    %1074 = @func_4965() /* ty=(Tensor[(12, 12, 3), float32], Tensor[(10, 12, 13), float64], Tensor[(1560, 1), float64], Tensor[(1560), float64], Tensor[(40, 1), float64], Tensor[(40), float64], Tensor[(144), float64]) */;
    %1075 = cast(%var_8760, dtype="float64") /* ty=Tensor[(66), float64] */;
    %1076 = cast(meta[relay.Constant][57] /* ty=uint8 */, dtype="uint8") /* ty=uint8 */;
    %1077 = %1071.0;
    %1078 = cast(%1077, dtype="uint8") /* ty=Tensor[(40), uint8] */;
    %1079 = reshape(%1075, newshape=[2, 3, 11]) /* ty=Tensor[(2, 3, 11), float64] */;
    %1080 = reshape(%1076, newshape=[]) /* ty=uint8 */;
    %1081 = reshape(%1078, newshape=[2, 20]) /* ty=Tensor[(2, 20), uint8] */;
    %1082 = @func_2472(%1079, %1080, %1081) /* ty=(Tensor[(?, 8, 5), int32], uint8, Tensor[(2, 20), uint8], Tensor[(2, 3, 11), float64]) */;
    %1083 = @func_4739() /* ty=(Tensor[(1560), float64], Tensor[(12, 12, 3), float32]) */;
    %1084 = @func_6249() /* ty=(Tensor[(12, 12, 3), float32],) */;
    %1085 = %1070.1;
    %1086 = @func_6941(%1073) /* ty=Tensor[(1, 6, 5), float64] */;
    %1087 = %1074.5;
    %1088 = %1082.1;
    %1089 = %1083.0;
    %1090 = @func_5306() /* ty=Tensor[(40), uint8] */;
    %1091 = %1084.0;
    (%1085, %1077, %1086, %var_8733, %1087, %1088, %var_8760, meta[relay.Constant][57] /* ty=uint8 */, %1089, %1090, %1091)
  };
  %1092(%var_8836, %var_8837) /* ty=(Tensor[(12, 12, 3), float32], Tensor[(40), uint8], Tensor[(1, 6, 5), float64], Tensor[(10, 3), float64], Tensor[(40), float64], uint8, Tensor[(66), float64], uint8, Tensor[(1560), float64], Tensor[(40), uint8], Tensor[(12, 12, 3), float32]) */
}

def @func_12825(%var_12823: Tensor[(1560), float64], %var_12824: Tensor[(1, 132), float32]) -> (Tensor[(12, 12, 3), int16], Tensor[(40), uint8], Tensor[(?, 14, 9), float32], Tensor[(1560), float64], Tensor[(1, 132), float32], Tensor[(2, 20), uint8]) {
  @func_12821(%var_12823, %var_12824) /* ty=(Tensor[(12, 12, 3), int16], Tensor[(40), uint8], Tensor[(?, 14, 9), float32], Tensor[(1560), float64], Tensor[(1, 132), float32], Tensor[(2, 20), uint8]) */
}

def @func_9378() -> (Tensor[(40), uint8], Tensor[(12, 12, 3), float32], Tensor[(11, 6), float64], uint8, Tensor[(12, 12, 3), float32], Tensor[(12, 12, 3), float32]) {
  %1106 = fn () -> (Tensor[(40), uint8], Tensor[(12, 12, 3), float32], Tensor[(11, 6), float64], uint8, Tensor[(12, 12, 3), float32], Tensor[(12, 12, 3), float32]) {
    %1093 = @func_8415() /* ty=(Tensor[(40), uint8],) */;
    %1094 = @func_3933() /* ty=(Tensor[(12, 12, 3), float32],) */;
    %1095 = %1094.0;
    %1096 = cast(%1095, dtype="float32") /* ty=Tensor[(12, 12, 3), float32] */;
    %1097 = cast(meta[relay.Constant][58] /* ty=uint8 */, dtype="uint8") /* ty=uint8 */;
    %1098 = reshape(%1097, newshape=[]) /* ty=uint8 */;
    %1099 = @func_8883(%1098) /* ty=(Tensor[(12, 12, 3), float32], Tensor[(?, 8, 5), int32], Tensor[(11, 6), float64], uint8, Tensor[(2, 20), uint8]) */;
    %1100 = @func_6936() /* ty=(Tensor[(12, 12, 3), float32], Tensor[(13, 15, 2), int32], Tensor[(390), int32]) */;
    %1101 = %1093.0;
    %1102 = sinh(%1096) /* ty=Tensor[(12, 12, 3), float32] */;
    %1103 = %1099.2;
    %1104 = %1100.0;
    %1105 = @func_4522() /* ty=Tensor[(12, 12, 3), float32] */;
    (%1101, %1102, %1103, meta[relay.Constant][58] /* ty=uint8 */, %1104, %1105)
  };
  %1106() /* ty=(Tensor[(40), uint8], Tensor[(12, 12, 3), float32], Tensor[(11, 6), float64], uint8, Tensor[(12, 12, 3), float32], Tensor[(12, 12, 3), float32]) */
}

def @func_10043() -> Tensor[(40), uint8] {
  @func_10041() /* ty=Tensor[(40), uint8] */
}

def @func_5625() -> (Tensor[(40), uint8],) {
  %1107 = @func_4904() /* ty=Tensor[(40), uint8] */;
  (%1107,)
}

def @func_8587() -> (Tensor[(12, 12, 3), float32],) {
  %1109 = fn () -> (Tensor[(12, 12, 3), float32],) {
    %1108 = @func_3372() /* ty=Tensor[(12, 12, 3), float32] */;
    (%1108,)
  };
  %1109() /* ty=(Tensor[(12, 12, 3), float32],) */
}

def @func_4739() -> (Tensor[(1560), float64], Tensor[(12, 12, 3), float32]) {
  %1110 = @func_4482() /* ty=(Tensor[(12, 12, 3), float32], Tensor[(1560), float64], Tensor[(12, 130), float64]) */;
  %1111 = @func_3933() /* ty=(Tensor[(12, 12, 3), float32],) */;
  %1112 = %1110.1;
  %1113 = %1111.0;
  (%1112, %1113)
}

def @func_2864() -> (Tensor[(12, 12, 3), float32],) {
  %1114 = @func_2829() /* ty=(Tensor[(12, 12, 3), float32], Tensor[(10, 12, 13), float64], Tensor[(12, 130), float64]) */;
  %1115 = %1114.0;
  (%1115,)
}

def @func_13068() -> Tensor[(12, 12, 3), float32] {
  %1117 = fn () -> Tensor[(12, 12, 3), float32] {
    %1116 = @func_7147() /* ty=(Tensor[(12, 130), float64], Tensor[(12, 12, 3), float32], Tensor[(12, 12, 3), float32], Tensor[(10, 12, 13), float64]) */;
    %1116.2
  };
  %1117() /* ty=Tensor[(12, 12, 3), float32] */
}

def @func_11942() -> (Tensor[(12, 12, 3), float32],) {
  @func_11940() /* ty=(Tensor[(12, 12, 3), float32],) */
}

def @func_11504() -> (Tensor[(12, 12, 3), float32],) {
  %1120 = fn () -> (Tensor[(12, 12, 3), float32],) {
    %1118 = @func_8586() /* ty=(Tensor[(12, 12, 3), float32],) */;
    %1119 = %1118.0;
    (%1119,)
  };
  %1120() /* ty=(Tensor[(12, 12, 3), float32],) */
}

def @func_6249() -> (Tensor[(12, 12, 3), float32],) {
  %1121 = @func_4065() /* ty=(Tensor[(12, 12, 3), float32],) */;
  %1122 = %1121.0;
  (%1122,)
}

def @func_5939() -> Tensor[(1560), float64] {
  %1124 = fn () -> Tensor[(1560), float64] {
    %1123 = @func_4965() /* ty=(Tensor[(12, 12, 3), float32], Tensor[(10, 12, 13), float64], Tensor[(1560, 1), float64], Tensor[(1560), float64], Tensor[(40, 1), float64], Tensor[(40), float64], Tensor[(144), float64]) */;
    %1123.3
  };
  %1124() /* ty=Tensor[(1560), float64] */
}

def @func_5217() -> (Tensor[(12, 12, 3), float32],) {
  %1126 = fn () -> (Tensor[(12, 12, 3), float32],) {
    %1125 = @func_4599() /* ty=Tensor[(12, 12, 3), float32] */;
    (%1125,)
  };
  %1126() /* ty=(Tensor[(12, 12, 3), float32],) */
}

def @func_12374() -> (Tensor[(12, 12, 3), float32],) {
  %1127 = @func_5979() /* ty=Tensor[(12, 12, 3), float32] */;
  (%1127,)
}

def @func_4819() -> (Tensor[(40), uint8],) {
  %1128 = @func_3254() /* ty=(Tensor[(12, 130), float64], Tensor[(1560), float64], Tensor[(33, 7), float64], uint8, Tensor[(7, 3, 11), float32], uint8, Tensor[(66), float64], Tensor[(40), uint8], Tensor[(2, 20), float64]) */;
  %1129 = %1128.7;
  (%1129,)
}

def @func_7336() -> Tensor[(12, 12, 3), float32] {
  %1131 = fn () -> Tensor[(12, 12, 3), float32] {
    %1130 = @func_6143() /* ty=(Tensor[(12, 12, 3), float64], Tensor[(14, ?, 11), bool], Tensor[(1, 154), float64], Tensor[(1560), float64], Tensor[(12, 12, 3), int16], Tensor[(12, 12, 3), float32], Tensor[(12, 12, 3), float32]) */;
    %1130.6
  };
  %1131() /* ty=Tensor[(12, 12, 3), float32] */
}

def @func_13179(%var_13178: Tensor[(12, 12, 3), float32]) -> (Tensor[(12, 12, 3), int64],) {
  %1139 = fn (%var_13164: Tensor[(12, 12, 3), float32]) -> (Tensor[(12, 12, 3), int64],) {
    %1132 = @func_11551() /* ty=(Tensor[(12, 12, 3), float32],) */;
    %1133 = %1132.0;
    %1134 = cast(%var_13164, dtype="int64") /* ty=Tensor[(12, 12, 3), int64] */;
    %1135 = shape_of(%1133, dtype="int32") /* ty=Tensor[(3), int32] */;
    %1136 = cast(%1133, dtype="int64") /* ty=Tensor[(12, 12, 3), int64] */;
    %1137 = dyn.reshape(%1134, %1135, newshape=[]) /* ty=Tensor[(?, ?, ?), int64] */;
    %1138 = logical_xor(%1136, %1137) /* ty=Tensor[(12, 12, 3), int64] */;
    (%1138,)
  };
  %1139(%var_13178) /* ty=(Tensor[(12, 12, 3), int64],) */
}

def @func_4442() -> Tensor[(12, 12, 3), float32] {
  %1140 = fn () -> Tensor[(12, 12, 3), float32] {
    @func_3372() /* ty=Tensor[(12, 12, 3), float32] */
  };
  %1140() /* ty=Tensor[(12, 12, 3), float32] */
}

def @func_11608() -> (Tensor[(40), uint8], uint8, Tensor[(9, 1, 16), float64], Tensor[(144), float64]) {
  %1141 = @func_4819() /* ty=(Tensor[(40), uint8],) */;
  %1142 = @func_9377() /* ty=(Tensor[(40), uint8], Tensor[(12, 12, 3), float32], Tensor[(11, 6), float64], uint8, Tensor[(12, 12, 3), float32], Tensor[(12, 12, 3), float32]) */;
  %1143 = cast(meta[relay.Constant][59] /* ty=Tensor[(144), float64] */, dtype="float64") /* ty=Tensor[(144), float64] */;
  %1144 = reshape(%1143, newshape=[9, 1, 16]) /* ty=Tensor[(9, 1, 16), float64] */;
  %1145 = @func_672(%1144) /* ty=(Tensor[(9, 1, 16), float64],) */;
  %1146 = %1141.0;
  %1147 = %1142.3;
  %1148 = %1145.0;
  (%1146, %1147, %1148, meta[relay.Constant][59] /* ty=Tensor[(144), float64] */)
}

def @func_10494(%var_10483: Tensor[(1560), float64]) -> Tensor[(1560), bool] {
  %1149 = @func_5938() /* ty=Tensor[(1560), float64] */;
  %1150 = cast(%var_10483, dtype="bool") /* ty=Tensor[(1560), bool] */;
  %1151 = shape_of(%1149, dtype="int32") /* ty=Tensor[(1), int32] */;
  %1152 = cast(%1149, dtype="bool") /* ty=Tensor[(1560), bool] */;
  %1153 = dyn.reshape(%1150, %1151, newshape=[]) /* ty=Tensor[(?), bool] */;
  logical_and(%1152, %1153) /* ty=Tensor[(1560), bool] */
}

def @func_10147(%var_10100: Tensor[(11, 21), float64], %var_10101: uint8) -> (Tensor[(12, 12, 3), float32], Tensor[(7, 3, 11), float64], Tensor[(11, 21), float64], uint8, Tensor[(1560), float64], Tensor[(3, 11, 4), float32], Tensor[(1560), float64], Tensor[(2, 20), float64], Tensor[(10, 12, 13), float64]) {
  %1154 = @func_8680() /* ty=(Tensor[(12, 12, 3), float32],) */;
  %1155 = cast(%var_10100, dtype="float64") /* ty=Tensor[(11, 21), float64] */;
  %1156 = cast(%var_10101, dtype="uint8") /* ty=uint8 */;
  %1157 = cast(meta[relay.Constant][60] /* ty=Tensor[(1560), float64] */, dtype="float64") /* ty=Tensor[(1560), float64] */;
  %1158 = cast(%var_10100, dtype="float64") /* ty=Tensor[(11, 21), float64] */;
  %1159 = reshape(%1155, newshape=[7, 3, 11]) /* ty=Tensor[(7, 3, 11), float64] */;
  %1160 = reshape(%1156, newshape=[]) /* ty=uint8 */;
  %1161 = reshape(%1157, newshape=[1560]) /* ty=Tensor[(1560), float64] */;
  %1162 = reshape(%1158, newshape=[7, 3, 11]) /* ty=Tensor[(7, 3, 11), float64] */;
  %1163 = @func_3145(%1159, %1160, %1161, %1162) /* ty=(Tensor[(7, 3, 11), float64], Tensor[(3, 11, 4), float32], uint8, Tensor[(10, 12, 13), float64], Tensor[(1560), float64], Tensor[(7, 3, 11), float64], Tensor[(12, 12, 3), float32]) */;
  %1164 = %1163.5;
  %1165 = cast(%1164, dtype="float64") /* ty=Tensor[(7, 3, 11), float64] */;
  %1166 = cast(%var_10101, dtype="uint8") /* ty=uint8 */;
  %1167 = cast(meta[relay.Constant][60] /* ty=Tensor[(1560), float64] */, dtype="float64") /* ty=Tensor[(1560), float64] */;
  %1168 = cast(%1164, dtype="float64") /* ty=Tensor[(7, 3, 11), float64] */;
  %1169 = reshape(%1165, newshape=[7, 3, 11]) /* ty=Tensor[(7, 3, 11), float64] */;
  %1170 = reshape(%1166, newshape=[]) /* ty=uint8 */;
  %1171 = reshape(%1167, newshape=[1560]) /* ty=Tensor[(1560), float64] */;
  %1172 = reshape(%1168, newshape=[7, 3, 11]) /* ty=Tensor[(7, 3, 11), float64] */;
  %1173 = @func_3145(%1169, %1170, %1171, %1172) /* ty=(Tensor[(7, 3, 11), float64], Tensor[(3, 11, 4), float32], uint8, Tensor[(10, 12, 13), float64], Tensor[(1560), float64], Tensor[(7, 3, 11), float64], Tensor[(12, 12, 3), float32]) */;
  %1174 = @func_9193() /* ty=(Tensor[(2, 20), float64],) */;
  %1175 = @func_7147() /* ty=(Tensor[(12, 130), float64], Tensor[(12, 12, 3), float32], Tensor[(12, 12, 3), float32], Tensor[(10, 12, 13), float64]) */;
  %1176 = %1154.0;
  %1177 = %1173.1;
  %1178 = @func_3618() /* ty=Tensor[(1560), float64] */;
  %1179 = %1174.0;
  %1180 = %1175.3;
  (%1176, %1164, %var_10100, %var_10101, meta[relay.Constant][60] /* ty=Tensor[(1560), float64] */, %1177, %1178, %1179, %1180)
}

def @func_9117() -> (Tensor[(12, 12, 3), float32], Tensor[(11, 16, 8), uint32], Tensor[(1408), uint32], Tensor[(40), float32]) {
  %1181 = @func_8586() /* ty=(Tensor[(12, 12, 3), float32],) */;
  %1182 = cast(meta[relay.Constant][61] /* ty=Tensor[(1408), uint32] */, dtype="uint32") /* ty=Tensor[(1408), uint32] */;
  %1183 = reshape(%1182, newshape=[11, 16, 8]) /* ty=Tensor[(11, 16, 8), uint32] */;
  %1184 = @func_6904(%1183) /* ty=(Tensor[(11, 16, 8), uint32], Tensor[(12, 12, 3), float32]) */;
  %1185 = @func_5387() /* ty=(Tensor[(40), uint8], Tensor[(40), uint8]) */;
  %1186 = %1185.0;
  %1187 = cast(meta[relay.Constant][62] /* ty=Tensor[(40), uint8] */, dtype="float32") /* ty=Tensor[(40), float32] */;
  %1188 = shape_of(%1186, dtype="int32") /* ty=Tensor[(1), int32] */;
  %1189 = cast(%1186, dtype="float32") /* ty=Tensor[(40), float32] */;
  %1190 = dyn.reshape(%1187, %1188, newshape=[]) /* ty=Tensor[(?), float32] */;
  %1191 = %1181.0;
  %1192 = %1184.0;
  %1193 = floor_mod(%1189, %1190) /* ty=Tensor[(40), float32] */;
  (%1191, %1192, meta[relay.Constant][61] /* ty=Tensor[(1408), uint32] */, %1193)
}

def @func_7776() -> (Tensor[(12, 12, 3), float32], Tensor[(1560), float64]) {
  %1194 = @func_3933() /* ty=(Tensor[(12, 12, 3), float32],) */;
  %1195 = @func_6977() /* ty=(Tensor[(1560), float64], Tensor[(40), float64], Tensor[(2, 20), uint8]) */;
  %1196 = %1194.0;
  %1197 = %1195.0;
  (%1196, %1197)
}

def @func_11001() -> (Tensor[(40), uint8],) {
  %1199 = fn () -> (Tensor[(40), uint8],) {
    %1198 = @func_4904() /* ty=Tensor[(40), uint8] */;
    (%1198,)
  };
  %1199() /* ty=(Tensor[(40), uint8],) */
}

def @func_3033(%var_3031: Tensor[(2, 20), float64]) -> (Tensor[(12, 12, 3), float32], Tensor[(9, 1, 16), float64], Tensor[(2, 20), float64], Tensor[(144), float64]) {
  @func_3030(%var_3031) /* ty=(Tensor[(12, 12, 3), float32], Tensor[(9, 1, 16), float64], Tensor[(2, 20), float64], Tensor[(144), float64]) */
}

def @func_9677() -> (Tensor[(1560), float64], Tensor[(1560), float64], Tensor[(12, 12, 3), float32]) {
  %1200 = @func_5527() /* ty=(Tensor[(1560), float64], Tensor[(12, 12, 3), float32]) */;
  %1201 = @func_7147() /* ty=(Tensor[(12, 130), float64], Tensor[(12, 12, 3), float32], Tensor[(12, 12, 3), float32], Tensor[(10, 12, 13), float64]) */;
  %1202 = @func_5938() /* ty=Tensor[(1560), float64] */;
  %1203 = %1200.0;
  %1204 = %1201.1;
  (%1202, %1203, %1204)
}

def @func_12002() -> (Tensor[(40), uint8], Tensor[(40), uint8]) {
  @func_12000() /* ty=(Tensor[(40), uint8], Tensor[(40), uint8]) */
}

def @func_5966() -> Tensor[(12, 12, 3), float32] {
  %1205 = @func_5342() /* ty=(Tensor[(12, 12, 3), float32],) */;
  %1205.0
}

def @func_7477(%var_7440: Tensor[(16, 8, 5), uint8], %var_7455: Tensor[(2520), int32]) -> (Tensor[(16, 8, 5), float32], Tensor[(14, 15, 12), int32], Tensor[(2520), int32], Tensor[(1560), float64]) {
  %1206 = cast(meta[relay.Constant][63] /* ty=Tensor[(16, 8, 5), uint8] */, dtype="uint8") /* ty=Tensor[(16, 8, 5), uint8] */;
  %1207 = shape_of(%var_7440, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1208 = cast(%var_7440, dtype="uint8") /* ty=Tensor[(16, 8, 5), uint8] */;
  %1209 = dyn.reshape(%1206, %1207, newshape=[]) /* ty=Tensor[(?, ?, ?), uint8] */;
  %1210 = bitwise_or(%1208, %1209) /* ty=Tensor[(16, 8, 5), uint8] */;
  %1211 = cast(%1210, dtype="float32") /* ty=Tensor[(16, 8, 5), float32] */;
  %1212 = cast(%var_7455, dtype="int32") /* ty=Tensor[(2520), int32] */;
  %1213 = reshape(%1212, newshape=[14, 15, 12]) /* ty=Tensor[(14, 15, 12), int32] */;
  %1214 = @func_5057(%1213) /* ty=(Tensor[(14, 15, 12), int32], Tensor[(12, 12, 3), float32]) */;
  %1215 = cos(%1211) /* ty=Tensor[(16, 8, 5), float32] */;
  %1216 = %1214.0;
  %1217 = @func_4791() /* ty=Tensor[(1560), float64] */;
  (%1215, %1216, %var_7455, %1217)
}

def @func_10358() -> (Tensor[(12, 12, 3), float32], Tensor[(2, 20), float64], Tensor[(12, 12, 3), float32]) {
  @func_10356() /* ty=(Tensor[(12, 12, 3), float32], Tensor[(2, 20), float64], Tensor[(12, 12, 3), float32]) */
}

def @func_6906(%var_6905: Tensor[(11, 16, 8), uint32]) -> (Tensor[(11, 16, 8), uint32], Tensor[(12, 12, 3), float32]) {
  %1223 = fn (%var_6880: Tensor[(11, 16, 8), uint32]) -> (Tensor[(11, 16, 8), uint32], Tensor[(12, 12, 3), float32]) {
    %1218 = cast(meta[relay.Constant][64] /* ty=uint32 */, dtype="uint32") /* ty=uint32 */;
    %1219 = cast(%var_6880, dtype="uint32") /* ty=Tensor[(11, 16, 8), uint32] */;
    %1220 = @func_3713() /* ty=(Tensor[(12, 12, 3), float32],) */;
    %1221 = bitwise_or(%1218, %1219) /* ty=Tensor[(11, 16, 8), uint32] */;
    %1222 = %1220.0;
    (%1221, %1222)
  };
  %1223(%var_6905) /* ty=(Tensor[(11, 16, 8), uint32], Tensor[(12, 12, 3), float32]) */
}

def @func_4925() -> (Tensor[(1560), float64],) {
  @func_4923() /* ty=(Tensor[(1560), float64],) */
}

def @func_12284(%var_12270: Tensor[(16, 10, 16), uint16], %var_12271: Tensor[(16, 10, 16), uint16]) -> (Tensor[(16, 10, 16), uint16], Tensor[(16, 10, 16), float32]) {
  %1224 = cast(%var_12271, dtype="uint16") /* ty=Tensor[(16, 10, 16), uint16] */;
  %1225 = shape_of(%var_12270, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1226 = cast(%var_12270, dtype="uint16") /* ty=Tensor[(16, 10, 16), uint16] */;
  %1227 = dyn.reshape(%1224, %1225, newshape=[]) /* ty=Tensor[(?, ?, ?), uint16] */;
  %1228 = cast(%var_12271, dtype="float32") /* ty=Tensor[(16, 10, 16), float32] */;
  %1229 = logical_xor(%1226, %1227) /* ty=Tensor[(16, 10, 16), uint16] */;
  %1230 = sinh(%1228) /* ty=Tensor[(16, 10, 16), float32] */;
  (%1229, %1230)
}

def @func_8885(%var_8884: uint8) -> (Tensor[(12, 12, 3), float32], Tensor[(?, 8, 5), int32], Tensor[(11, 6), float64], uint8, Tensor[(2, 20), uint8]) {
  %1240 = fn (%var_8876: uint8) -> (Tensor[(12, 12, 3), float32], Tensor[(?, 8, 5), int32], Tensor[(11, 6), float64], uint8, Tensor[(2, 20), uint8]) {
    %1231 = cast(meta[relay.Constant][65] /* ty=Tensor[(11, 6), float64] */, dtype="float64") /* ty=Tensor[(11, 6), float64] */;
    %1232 = cast(%var_8876, dtype="uint8") /* ty=uint8 */;
    %1233 = cast(meta[relay.Constant][66] /* ty=Tensor[(2, 20), uint8] */, dtype="uint8") /* ty=Tensor[(2, 20), uint8] */;
    %1234 = reshape(%1231, newshape=[2, 3, 11]) /* ty=Tensor[(2, 3, 11), float64] */;
    %1235 = reshape(%1232, newshape=[]) /* ty=uint8 */;
    %1236 = reshape(%1233, newshape=[2, 20]) /* ty=Tensor[(2, 20), uint8] */;
    %1237 = @func_2472(%1234, %1235, %1236) /* ty=(Tensor[(?, 8, 5), int32], uint8, Tensor[(2, 20), uint8], Tensor[(2, 3, 11), float64]) */;
    %1238 = @func_4599() /* ty=Tensor[(12, 12, 3), float32] */;
    %1239 = %1237.0;
    (%1238, %1239, meta[relay.Constant][65] /* ty=Tensor[(11, 6), float64] */, %var_8876, meta[relay.Constant][66] /* ty=Tensor[(2, 20), uint8] */)
  };
  %1240(%var_8884) /* ty=(Tensor[(12, 12, 3), float32], Tensor[(?, 8, 5), int32], Tensor[(11, 6), float64], uint8, Tensor[(2, 20), uint8]) */
}

def @func_3694(%var_3691: Tensor[(231), float64], %var_3692: uint8, %var_3693: Tensor[(2, 780), float64]) -> (Tensor[(12, 12, 3), float32], uint8, Tensor[(2, 780), float64], Tensor[(231), float32], Tensor[(1560), float64], Tensor[(10, 12, 13), float64], uint8, Tensor[(132), float32]) {
  %1267 = fn (%var_3653: Tensor[(231), float64], %var_3654: uint8, %var_3655: Tensor[(2, 780), float64]) -> (Tensor[(12, 12, 3), float32], uint8, Tensor[(2, 780), float64], Tensor[(231), float32], Tensor[(1560), float64], Tensor[(10, 12, 13), float64], uint8, Tensor[(132), float32]) {
    %1241 = cast(%var_3653, dtype="float64") /* ty=Tensor[(231), float64] */;
    %1242 = cast(%var_3654, dtype="uint8") /* ty=uint8 */;
    %1243 = cast(%var_3655, dtype="float64") /* ty=Tensor[(2, 780), float64] */;
    %1244 = cast(%var_3653, dtype="float64") /* ty=Tensor[(231), float64] */;
    %1245 = reshape(%1241, newshape=[7, 3, 11]) /* ty=Tensor[(7, 3, 11), float64] */;
    %1246 = reshape(%1242, newshape=[]) /* ty=uint8 */;
    %1247 = reshape(%1243, newshape=[1560]) /* ty=Tensor[(1560), float64] */;
    %1248 = reshape(%1244, newshape=[7, 3, 11]) /* ty=Tensor[(7, 3, 11), float64] */;
    %1249 = @func_3145(%1245, %1246, %1247, %1248) /* ty=(Tensor[(7, 3, 11), float64], Tensor[(3, 11, 4), float32], uint8, Tensor[(10, 12, 13), float64], Tensor[(1560), float64], Tensor[(7, 3, 11), float64], Tensor[(12, 12, 3), float32]) */;
    %1250 = %1249.5;
    %1251 = cast(%1250, dtype="float32") /* ty=Tensor[(7, 3, 11), float32] */;
    %1252 = shape_of(%var_3653, dtype="int32") /* ty=Tensor[(1), int32] */;
    %1253 = cast(%var_3653, dtype="float32") /* ty=Tensor[(231), float32] */;
    %1254 = dyn.reshape(%1251, %1252, newshape=[]) /* ty=Tensor[(?), float32] */;
    %1255 = cast(%var_3655, dtype="float64") /* ty=Tensor[(2, 780), float64] */;
    %1256 = reshape(%1255, newshape=[10, 12, 13]) /* ty=Tensor[(10, 12, 13), float64] */;
    %1257 = cast(%var_3655, dtype="float64") /* ty=Tensor[(2, 780), float64] */;
    %1258 = cast(meta[relay.Constant][67] /* ty=Tensor[(132), float32] */, dtype="float32") /* ty=Tensor[(132), float32] */;
    %1259 = reshape(%1257, newshape=[10, 12, 13]) /* ty=Tensor[(10, 12, 13), float64] */;
    %1260 = reshape(%1258, newshape=[132]) /* ty=Tensor[(132), float32] */;
    %1261 = @func_3182(%1259, %1260) /* ty=(Tensor[(10, 12, 13), bool], Tensor[(?, 14, 9), float32], uint8, Tensor[(3, 11, 4), float32], Tensor[(132), float32]) */;
    %1262 = @func_3372() /* ty=Tensor[(12, 12, 3), float32] */;
    %1263 = mod(%1253, %1254) /* ty=Tensor[(231), float32] */;
    %1264 = @func_3618() /* ty=Tensor[(1560), float64] */;
    %1265 = @func_2171(%1256) /* ty=Tensor[(10, 12, 13), float64] */;
    %1266 = %1261.2;
    (%1262, %var_3654, %var_3655, %1263, %1264, %1265, %1266, meta[relay.Constant][67] /* ty=Tensor[(132), float32] */)
  };
  %1267(%var_3691, %var_3692, %var_3693) /* ty=(Tensor[(12, 12, 3), float32], uint8, Tensor[(2, 780), float64], Tensor[(231), float32], Tensor[(1560), float64], Tensor[(10, 12, 13), float64], uint8, Tensor[(132), float32]) */
}

def @func_4404(%var_4402: Tensor[(11, 9, 5), uint64], %var_4403: Tensor[(11, 9, 5), uint64]) -> (Tensor[(11, 9, 5), uint64], Tensor[(11, 9, 5), float64], Tensor[(14, ?, 11), bool], Tensor[(154, 1), float64]) {
  %1279 = fn (%var_4364: Tensor[(11, 9, 5), uint64], %var_4365: Tensor[(11, 9, 5), uint64]) -> (Tensor[(11, 9, 5), uint64], Tensor[(11, 9, 5), float64], Tensor[(14, ?, 11), bool], Tensor[(154, 1), float64]) {
    %1268 = cast(%var_4365, dtype="uint64") /* ty=Tensor[(11, 9, 5), uint64] */;
    %1269 = shape_of(%var_4364, dtype="int32") /* ty=Tensor[(3), int32] */;
    %1270 = cast(%var_4364, dtype="uint64") /* ty=Tensor[(11, 9, 5), uint64] */;
    %1271 = dyn.reshape(%1268, %1269, newshape=[]) /* ty=Tensor[(?, ?, ?), uint64] */;
    %1272 = cast(%var_4365, dtype="float64") /* ty=Tensor[(11, 9, 5), float64] */;
    %1273 = cast(meta[relay.Constant][68] /* ty=Tensor[(154, 1), float64] */, dtype="float64") /* ty=Tensor[(154, 1), float64] */;
    %1274 = reshape(%1273, newshape=[14, 1, 11]) /* ty=Tensor[(14, 1, 11), float64] */;
    %1275 = @func_4249(%1274) /* ty=(Tensor[(14, ?, 11), bool], Tensor[(14, ?, 11), bool]) */;
    %1276 = maximum(%1270, %1271) /* ty=Tensor[(11, 9, 5), uint64] */;
    %1277 = sinh(%1272) /* ty=Tensor[(11, 9, 5), float64] */;
    %1278 = %1275.1;
    (%1276, %1277, %1278, meta[relay.Constant][68] /* ty=Tensor[(154, 1), float64] */)
  };
  %1279(%var_4402, %var_4403) /* ty=(Tensor[(11, 9, 5), uint64], Tensor[(11, 9, 5), float64], Tensor[(14, ?, 11), bool], Tensor[(154, 1), float64]) */
}

def @func_8671() -> (Tensor[(1560), float64], Tensor[(12, 12, 3), float32], Tensor[(40), uint8]) {
  @func_8669() /* ty=(Tensor[(1560), float64], Tensor[(12, 12, 3), float32], Tensor[(40), uint8]) */
}

def @func_13087() -> (Tensor[(40), uint8],) {
  %1280 = @func_10041() /* ty=Tensor[(40), uint8] */;
  (%1280,)
}

def @func_7897() -> (Tensor[(12, 12, 3), float32], Tensor[(140, 16), int32], Tensor[(140, 16), float64]) {
  %1281 = @func_4739() /* ty=(Tensor[(1560), float64], Tensor[(12, 12, 3), float32]) */;
  %1282 = cast(meta[relay.Constant][69] /* ty=Tensor[(140, 16), uint64] */, dtype="uint64") /* ty=Tensor[(140, 16), uint64] */;
  %1283 = reshape(%1282, newshape=[16, 14, 10]) /* ty=Tensor[(16, 14, 10), uint64] */;
  %1284 = @func_5259(%1283) /* ty=Tensor[(16, 14, 10), uint64] */;
  %1285 = cast(%1284, dtype="float64") /* ty=Tensor[(16, 14, 10), float64] */;
  %1286 = shape_of(meta[relay.Constant][69] /* ty=Tensor[(140, 16), uint64] */, dtype="int32") /* ty=Tensor[(2), int32] */;
  %1287 = cast(meta[relay.Constant][69] /* ty=Tensor[(140, 16), uint64] */, dtype="float64") /* ty=Tensor[(140, 16), float64] */;
  %1288 = dyn.reshape(%1285, %1286, newshape=[]) /* ty=Tensor[(?, ?), float64] */;
  %1289 = mod(%1287, %1288) /* ty=Tensor[(140, 16), float64] */;
  %1290 = cast(%1284, dtype="int32") /* ty=Tensor[(16, 14, 10), int32] */;
  %1291 = shape_of(%1289, dtype="int32") /* ty=Tensor[(2), int32] */;
  %1292 = cast(%1289, dtype="int32") /* ty=Tensor[(140, 16), int32] */;
  %1293 = dyn.reshape(%1290, %1291, newshape=[]) /* ty=Tensor[(?, ?), int32] */;
  %1294 = cast(%1289, dtype="float64") /* ty=Tensor[(140, 16), float64] */;
  %1295 = %1281.1;
  %1296 = add(%1292, %1293) /* ty=Tensor[(140, 16), int32] */;
  %1297 = acos(%1294) /* ty=Tensor[(140, 16), float64] */;
  (%1295, %1296, %1297)
}

def @func_12376() -> (Tensor[(12, 12, 3), float32],) {
  @func_12374() /* ty=(Tensor[(12, 12, 3), float32],) */
}

def @func_4482() -> (Tensor[(12, 12, 3), float32], Tensor[(1560), float64], Tensor[(12, 130), float64]) {
  %1298 = @func_2864() /* ty=(Tensor[(12, 12, 3), float32],) */;
  %1299 = @func_2829() /* ty=(Tensor[(12, 12, 3), float32], Tensor[(10, 12, 13), float64], Tensor[(12, 130), float64]) */;
  %1300 = %1298.0;
  %1301 = @func_3618() /* ty=Tensor[(1560), float64] */;
  %1302 = %1299.2;
  (%1300, %1301, %1302)
}

def @func_11553() -> (Tensor[(12, 12, 3), float32],) {
  @func_11551() /* ty=(Tensor[(12, 12, 3), float32],) */
}

def @func_9247(%var_9227: Tensor[(3, 12, 1), float64]) -> Tensor[(3, 12, 1), float64] {
  %1303 = cast(%var_9227, dtype="float64") /* ty=Tensor[(3, 12, 1), float64] */;
  acos(%1303) /* ty=Tensor[(3, 12, 1), float64] */
}

def @func_6979() -> (Tensor[(1560), float64], Tensor[(40), float64], Tensor[(2, 20), uint8]) {
  @func_6977() /* ty=(Tensor[(1560), float64], Tensor[(40), float64], Tensor[(2, 20), uint8]) */
}

def @func_4522() -> Tensor[(12, 12, 3), float32] {
  @func_3372() /* ty=Tensor[(12, 12, 3), float32] */
}

def @func_6803() -> Tensor[(1560), float64] {
  %1304 = fn () -> Tensor[(1560), float64] {
    @func_4791() /* ty=Tensor[(1560), float64] */
  };
  %1304() /* ty=Tensor[(1560), float64] */
}

def @func_7509() -> (Tensor[(12, 12, 3), float32],) {
  %1305 = @func_2829() /* ty=(Tensor[(12, 12, 3), float32], Tensor[(10, 12, 13), float64], Tensor[(12, 130), float64]) */;
  %1306 = %1305.0;
  (%1306,)
}

def @func_11660() -> (Tensor[(11, 16, 8), uint32],) {
  %1309 = fn () -> (Tensor[(11, 16, 8), uint32],) {
    %1307 = @func_9117() /* ty=(Tensor[(12, 12, 3), float32], Tensor[(11, 16, 8), uint32], Tensor[(1408), uint32], Tensor[(40), float32]) */;
    %1308 = %1307.1;
    (%1308,)
  };
  %1309() /* ty=(Tensor[(11, 16, 8), uint32],) */
}

def @func_4094(%var_4092: Tensor[(144), float64]) -> (Tensor[(1560), float64], Tensor[(144), float64], Tensor[(40), float64], Tensor[(144), float64]) {
  @func_4091(%var_4092) /* ty=(Tensor[(1560), float64], Tensor[(144), float64], Tensor[(40), float64], Tensor[(144), float64]) */
}

def @func_10548(%var_10524: Tensor[(30), float64], %var_10525: Tensor[(66), float64]) -> (Tensor[(40), uint8], Tensor[(40), float64], uint8, Tensor[(30), float64], Tensor[(66), float64]) {
  %1310 = @func_7074() /* ty=(Tensor[(40, 1), float64], Tensor[(40), uint8], Tensor[(40), uint8], Tensor[(12, 12, 3), float32]) */;
  %1311 = @func_6977() /* ty=(Tensor[(1560), float64], Tensor[(40), float64], Tensor[(2, 20), uint8]) */;
  %1312 = cast(%var_10524, dtype="float64") /* ty=Tensor[(30), float64] */;
  %1313 = cast(%var_10525, dtype="float64") /* ty=Tensor[(66), float64] */;
  %1314 = reshape(%1312, newshape=[10, 3]) /* ty=Tensor[(10, 3), float64] */;
  %1315 = reshape(%1313, newshape=[66]) /* ty=Tensor[(66), float64] */;
  %1316 = @func_8835(%1314, %1315) /* ty=(Tensor[(12, 12, 3), float32], Tensor[(40), uint8], Tensor[(1, 6, 5), float64], Tensor[(10, 3), float64], Tensor[(40), float64], uint8, Tensor[(66), float64], uint8, Tensor[(1560), float64], Tensor[(40), uint8], Tensor[(12, 12, 3), float32]) */;
  %1317 = %1310.1;
  %1318 = %1311.1;
  %1319 = %1316.5;
  (%1317, %1318, %1319, %var_10524, %var_10525)
}

def @func_10356() -> (Tensor[(12, 12, 3), float32], Tensor[(2, 20), float64], Tensor[(12, 12, 3), float32]) {
  %1320 = @func_9193() /* ty=(Tensor[(2, 20), float64],) */;
  %1321 = @func_5771() /* ty=(Tensor[(12, 12, 3), float32], Tensor[(1560), float32], Tensor[(12, 130), float64]) */;
  %1322 = @func_4599() /* ty=Tensor[(12, 12, 3), float32] */;
  %1323 = %1320.0;
  %1324 = %1321.0;
  (%1322, %1323, %1324)
}

/* For debugging purposes the metadata section has been omitted.
 * If you would like to see the full metadata section you can set the 
 * option to `True` when invoking `astext`. 
 *//home/yujunzhe/Hirgen_generated/tvm0.8_test/HirGen829/build/output.py:3841: DeprecationWarning: legacy graph executor behavior of producing json / lib / params will be removed in the next release. Please see documents of tvm.contrib.graph_executor.GraphModule for the  new recommended usage.
  graph, lib, params = relay.build(mod, target='llvm')
/home/yujunzhe/tvm/python/tvm/contrib/graph_runtime.py:25: UserWarning: This function has been moved to tvm.contrib.graph_executor and will be removed in the next TVM release
  warnings.warn(

===================================
Traceback (most recent call last):
  File "/home/yujunzhe/Hirgen_generated/tvm0.8_test/HirGen829/build/output.py", line 3846, in <module>
    graph, lib, params = relay.build(mod, target='cuda')
  File "/home/yujunzhe/tvm/python/tvm/relay/build_module.py", line 369, in build
    executor_config, runtime_mod, params = bld_mod.build(
  File "/home/yujunzhe/tvm/python/tvm/relay/build_module.py", line 177, in build
    self._build(mod, target, target_host, executor, mod_name)
  File "/home/yujunzhe/tvm/python/tvm/_ffi/_ctypes/packed_func.py", line 237, in __call__
    raise get_last_ffi_error()
tvm._ffi.base.TVMError: Traceback (most recent call last):
  7: TVMFuncCall
  6: std::_Function_handler<void (tvm::runtime::TVMArgs, tvm::runtime::TVMRetValue*), tvm::relay::backend::RelayBuildModule::GetFunction(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, tvm::runtime::ObjectPtr<tvm::runtime::Object> const&)::{lambda(tvm::runtime::TVMArgs, tvm::runtime::TVMRetValue*)#3}>::_M_invoke(std::_Any_data const&, tvm::runtime::TVMArgs&&, tvm::runtime::TVMRetValue*&&)
  5: tvm::relay::backend::RelayBuildModule::BuildRelay(tvm::IRModule, std::unordered_map<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, tvm::runtime::NDArray, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, tvm::runtime::NDArray> > > const&, tvm::runtime::String)
  4: tvm::build(tvm::runtime::Map<tvm::Target, tvm::IRModule, void, void> const&, tvm::Target const&)
  3: tvm::codegen::Build(tvm::IRModule, tvm::Target)
  2: tvm::runtime::TypedPackedFunc<tvm::runtime::Module (tvm::IRModule, tvm::Target)>::AssignTypedLambda<tvm::runtime::Module (*)(tvm::IRModule, tvm::Target)>(tvm::runtime::Module (*)(tvm::IRModule, tvm::Target), std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >)::{lambda(tvm::runtime::TVMArgs const&, tvm::runtime::TVMRetValue*)#1}::operator()(tvm::runtime::TVMArgs const&, tvm::runtime::TVMRetValue*) const
  1: tvm::codegen::BuildCUDA(tvm::IRModule, tvm::Target)
  0: std::_Function_handler<void (tvm::runtime::TVMArgs, tvm::runtime::TVMRetValue*), TVMFuncCreateFromCFunc::{lambda(tvm::runtime::TVMArgs, tvm::runtime::TVMRetValue*)#2}>::_M_invoke(std::_Any_data const&, tvm::runtime::TVMArgs&&, tvm::runtime::TVMRetValue*&&) [clone .cold]
  File "/home/yujunzhe/tvm/python/tvm/_ffi/_ctypes/packed_func.py", line 81, in cfun
    rv = local_pyfunc(*pyargs)
  File "/home/yujunzhe/tvm/python/tvm/autotvm/measure/measure_methods.py", line 789, in tvm_callback_cuda_compile
    ptx = nvcc.compile_cuda(code, target=target, arch=AutotvmGlobalScope.current.cuda_target_arch)
  File "/home/yujunzhe/tvm/python/tvm/contrib/nvcc.py", line 108, in compile_cuda
    raise RuntimeError(msg)
RuntimeError: 
#ifdef _WIN32
  using uint = unsigned int;
  using uchar = unsigned char;
  using ushort = unsigned short;
  using int64_t = long long;
  using uint64_t = unsigned long long;
#else
  #define uint unsigned int
  #define uchar unsigned char
  #define ushort unsigned short
  #define int64_t long long
  #define uint64_t unsigned long long
#endif
extern "C" __global__ void __launch_bounds__(720) tvmgen_default_fused_rsqrt_kernel0(double* __restrict__ tensor, double* __restrict__ placeholder) {
  tensor[(((int)threadIdx.x))] = (1.000000e+00 / sqrt(placeholder[(((int)threadIdx.x))]));
}


Compilation error:
In file included from /usr/local/cuda/bin/../targets/x86_64-linux/include/cuda_runtime.h:82,
                 from <command-line>:
/usr/local/cuda/bin/../targets/x86_64-linux/include/crt/host_config.h:143:2: error: #error -- unsupported GNU version! gcc versions later than 12 are not supported! The nvcc flag '-allow-unsupported-compiler' can be used to override this version check; however, using an unsupported host compiler may cause compilation failure or incorrect run time execution. Use at your own risk.
  143 | #error -- unsupported GNU version! gcc versions later than 12 are not supported! The nvcc flag '-allow-unsupported-compiler' can be used to override this version check; however, using an unsupported host compiler may cause compilation failure or incorrect run time execution. Use at your own risk.
      |  ^~~~~


==========mod==========
#[version = "0.0.5"]
def @func_19108() -> (Tensor[(8, 8, 4), float64], Tensor[(8, 8, 4), uint8]) {
  %0 = @func_13110() /* ty=(Tensor[(8, 8, 4), int64], Tensor[(256), float64], Tensor[(1296), float64], Tensor[(8, 8, 4), float64]) */;
  %1 = @func_15578() /* ty=(Tensor[(8, 8, 4), float64], Tensor[(8, 8, 4), float64], Tensor[(8, 8, 4), uint8], uint8) */;
  %2 = %0.3;
  %3 = %1.2;
  (%2, %3)
}

def @func_11893(%var_11884: Tensor[(30), float32], %var_11885: Tensor[(77, 15), int8], %var_11886: Tensor[(1260), float32]) -> (Tensor[(8, 8, 4), float64], Tensor[(8, 8, 4), uint8], Tensor[(8, 8, 4), float64], Tensor[(8, 8, 4), float64], Tensor[(8, 8, 4), int64], Tensor[(14, 6, 15), float32], Tensor[(30), float32], Tensor[(77, 15), int8], Tensor[(1260), float32], Tensor[(8, 8, 4), float64]) {
  %4 = @func_9237() /* ty=(Tensor[(8, 8, 4), float64], Tensor[(1296), float64], Tensor[(1260), bool], Tensor[(528), float32]) */;
  %5 = @func_7595() /* ty=(Tensor[(1296), float64], Tensor[(8, 8, 4), float64], Tensor[(8, 8, 4), uint8]) */;
  %6 = @func_5727() /* ty=(Tensor[(8, 8, 4), float64],) */;
  %7 = @func_7816() /* ty=(Tensor[(8, 8, 4), float64], Tensor[(8, 8, 4), int32]) */;
  %8 = %4.0;
  %9 = cast(%8, dtype="float64") /* ty=Tensor[(8, 8, 4), float64] */;
  %10 = reshape(%9, newshape=[8, 8, 4]) /* ty=Tensor[(8, 8, 4), float64] */;
  %11 = cast(%var_11884, dtype="float32") /* ty=Tensor[(30), float32] */;
  %12 = cast(%var_11885, dtype="int8") /* ty=Tensor[(77, 15), int8] */;
  %13 = cast(%var_11886, dtype="float32") /* ty=Tensor[(1260), float32] */;
  %14 = reshape(%11, newshape=[5, 2, 3]) /* ty=Tensor[(5, 2, 3), float32] */;
  %15 = reshape(%12, newshape=[1155, 1]) /* ty=Tensor[(1155, 1), int8] */;
  %16 = reshape(%13, newshape=[1260]) /* ty=Tensor[(1260), float32] */;
  %17 = @func_7573(%14, %15, %16) /* ty=(Tensor[(8, 8, 4), float64], Tensor[(5, 2, 3), float32], Tensor[(8, 8, 4), int64], Tensor[(8, 8, 4), float64], Tensor[(14, 6, 15), float32], Tensor[(1155, 1), int8], Tensor[(1260), float32], Tensor[(8, 8, 4), float64]) */;
  %18 = %5.2;
  %19 = %6.0;
  %20 = %7.0;
  %21 = @func_5643(%10) /* ty=Tensor[(8, 8, 4), int64] */;
  %22 = %17.4;
  %23 = @func_8501() /* ty=Tensor[(8, 8, 4), float64] */;
  (%8, %18, %19, %20, %21, %22, %var_11884, %var_11885, %var_11886, %23)
}

def @func_20730(%var_20605: Tensor[(264, 2), float32], %var_20621: Tensor[(1296), bool], %var_20669: uint8) -> (Tensor[(8, 8, 4), float64], Tensor[(8, 8, 4), float64], Tensor[(8, 8, 4), float64], Tensor[(12, 15, 7), float64], Tensor[(1260), float64], Tensor[(264, 2), int64], Tensor[(1296), uint64], Tensor[(8, 8, 4), float64], Tensor[(14, 6, 15), float32], Tensor[(75), uint8], uint8, Tensor[(8, 8, 4), float64], Tensor[(8, 8, 4), float64], Tensor[(264, 2), float64], Tensor[(264, 2), bool], Tensor[(1296), bool]) {
  %24 = @func_6982() /* ty=(Tensor[(8, 8, 4), float64], Tensor[(8, 8, 4), float64]) */;
  %25 = cast(meta[relay.Constant][0] /* ty=Tensor[(1260), float64] */, dtype="float64") /* ty=Tensor[(1260), float64] */;
  %26 = cast(meta[relay.Constant][0] /* ty=Tensor[(1260), float64] */, dtype="float64") /* ty=Tensor[(1260), float64] */;
  %27 = reshape(%25, newshape=[12, 15, 7]) /* ty=Tensor[(12, 15, 7), float64] */;
  %28 = reshape(%26, newshape=[12, 15, 7]) /* ty=Tensor[(12, 15, 7), float64] */;
  %29 = cast(%var_20605, dtype="float32") /* ty=Tensor[(264, 2), float32] */;
  %30 = reshape(%29, newshape=[264, 2]) /* ty=Tensor[(264, 2), float32] */;
  %31 = @func_6610(%30) /* ty=(Tensor[(8, 8, 4), float64], Tensor[(3, 11, 16), float32], Tensor[(264, 2), float32], uint8) */;
  %32 = %31.2;
  %33 = cast(%32, dtype="int64") /* ty=Tensor[(264, 2), int64] */;
  %34 = shape_of(%var_20605, dtype="int32") /* ty=Tensor[(2), int32] */;
  %35 = cast(%var_20605, dtype="int64") /* ty=Tensor[(264, 2), int64] */;
  %36 = dyn.reshape(%33, %34, newshape=[]) /* ty=Tensor[(?, ?), int64] */;
  %37 = @func_6366() /* ty=(Tensor[(1296), bool], Tensor[(8, 8, 4), int64], Tensor[(256), float64]) */;
  %38 = %37.0;
  %39 = cast(%var_20621, dtype="uint64") /* ty=Tensor[(1296), uint64] */;
  %40 = shape_of(%38, dtype="int32") /* ty=Tensor[(1), int32] */;
  %41 = cast(%38, dtype="uint64") /* ty=Tensor[(1296), uint64] */;
  %42 = dyn.reshape(%39, %40, newshape=[]) /* ty=Tensor[(?), uint64] */;
  %43 = @func_15657() /* ty=(Tensor[(8, 8, 4), float64], Tensor[(8, 8, 4), float64]) */;
  %44 = cast(meta[relay.Constant][0] /* ty=Tensor[(1260), float64] */, dtype="float32") /* ty=Tensor[(1260), float32] */;
  %45 = reshape(%44, newshape=[14, 6, 15]) /* ty=Tensor[(14, 6, 15), float32] */;
  %46 = @func_963(%45) /* ty=(Tensor[(14, 6, 15), float32],) */;
  %47 = cast(%var_20669, dtype="uint8") /* ty=uint8 */;
  %48 = reshape(%47, newshape=[]) /* ty=uint8 */;
  %49 = @func_12417(%48) /* ty=(Tensor[(8, 8, 4), float64], Tensor[(75), uint8], Tensor[(4, 132), float32], uint8) */;
  %50 = @func_10865() /* ty=(Tensor[(8, 8, 4), float64], Tensor[(1296), bool], Tensor[(256), float64], Tensor[(8, 8, 4), float64], uint8) */;
  %51 = @func_11223() /* ty=(Tensor[(8, 8, 4), float64],) */;
  %52 = cast(%32, dtype="float64") /* ty=Tensor[(264, 2), float64] */;
  %53 = acos(%52) /* ty=Tensor[(264, 2), float64] */;
  %54 = cast(%53, dtype="float32") /* ty=Tensor[(264, 2), float32] */;
  %55 = exp(%54) /* ty=Tensor[(264, 2), float32] */;
  %56 = cast(%55, dtype="float64") /* ty=Tensor[(264, 2), float64] */;
  %57 = sin(%56) /* ty=Tensor[(264, 2), float64] */;
  %58 = cast(%57, dtype="float64") /* ty=Tensor[(264, 2), float64] */;
  %59 = cast(%var_20605, dtype="float32") /* ty=Tensor[(264, 2), float32] */;
  %60 = reshape(%59, newshape=[264, 2]) /* ty=Tensor[(264, 2), float32] */;
  %61 = @func_6610(%60) /* ty=(Tensor[(8, 8, 4), float64], Tensor[(3, 11, 16), float32], Tensor[(264, 2), float32], uint8) */;
  %62 = %61.2;
  %63 = cast(%62, dtype="bool") /* ty=Tensor[(264, 2), bool] */;
  %64 = shape_of(%55, dtype="int32") /* ty=Tensor[(2), int32] */;
  %65 = cast(%55, dtype="bool") /* ty=Tensor[(264, 2), bool] */;
  %66 = dyn.reshape(%63, %64, newshape=[]) /* ty=Tensor[(?, ?), bool] */;
  %67 = @func_16012() /* ty=(Tensor[(1296), bool], Tensor[(8, 8, 4), float64]) */;
  %68 = @func_16986() /* ty=Tensor[(8, 8, 4), float64] */;
  %69 = %24.1;
  %70 = @func_13487() /* ty=Tensor[(8, 8, 4), float64] */;
  %71 = @func_7075(%27, %28) /* ty=Tensor[(12, 15, 7), float64] */;
  %72 = add(%35, %36) /* ty=Tensor[(264, 2), int64] */;
  %73 = bitwise_and(%41, %42) /* ty=Tensor[(1296), uint64] */;
  %74 = %43.0;
  %75 = %46.0;
  %76 = %49.1;
  %77 = %50.0;
  %78 = %51.0;
  %79 = asinh(%58) /* ty=Tensor[(264, 2), float64] */;
  %80 = less_equal(%65, %66) /* ty=Tensor[(264, 2), bool] */;
  %81 = %67.0;
  (%68, %69, %70, %71, meta[relay.Constant][0] /* ty=Tensor[(1260), float64] */, %72, %73, %74, %75, %76, %var_20669, %77, %78, %79, %80, %81)
}

def @func_10439() -> Tensor[(1296), bool] {
  @func_9968() /* ty=Tensor[(1296), bool] */
}

def @func_6001() -> (Tensor[(8, 8, 4), float64],) {
  %82 = @func_5468() /* ty=(Tensor[(8, 8, 4), float64],) */;
  %83 = %82.0;
  (%83,)
}

def @func_6538() -> Tensor[(1296), bool] {
  %84 = @func_6366() /* ty=(Tensor[(1296), bool], Tensor[(8, 8, 4), int64], Tensor[(256), float64]) */;
  %84.0
}

def @func_25558(%var_25539: Tensor[(6864), float32]) -> (Tensor[(8, 8, 4), float64], Tensor[(8, 8, 4), float64], Tensor[(6864), float32], uint8) {
  %85 = @func_12567() /* ty=(Tensor[(8, 8, 4), float64], Tensor[(8, 8, 4), float64]) */;
  %86 = cast(%var_25539, dtype="float32") /* ty=Tensor[(6864), float32] */;
  %87 = reshape(%86, newshape=[528, 13]) /* ty=Tensor[(528, 13), float32] */;
  %88 = @func_24354(%87) /* ty=(Tensor[(528, 13), float64], Tensor[(8, 8, 4), float64]) */;
  %89 = @func_14156() /* ty=(uint8, Tensor[(8, 8, 4), float64]) */;
  %90 = %85.1;
  %91 = %88.1;
  %92 = %89.0;
  (%90, %91, %var_25539, %92)
}

def @func_21654() -> (Tensor[(1296), bool],) {
  %93 = @func_11429() /* ty=(Tensor[(1296), bool],) */;
  %94 = %93.0;
  (%94,)
}

def @func_10865() -> (Tensor[(8, 8, 4), float64], Tensor[(1296), bool], Tensor[(256), float64], Tensor[(8, 8, 4), float64], uint8) {
  %95 = @func_8352() /* ty=(Tensor[(8, 8, 4), float64], Tensor[(1296), bool]) */;
  %96 = @func_6042() /* ty=Tensor[(8, 8, 4), float64] */;
  %97 = cast(%96, dtype="float64") /* ty=Tensor[(8, 8, 4), float64] */;
  %98 = reshape(%97, newshape=[256]) /* ty=Tensor[(256), float64] */;
  %99 = @func_10085(%98) /* ty=(Tensor[(1296), float64], Tensor[(1296), float64], Tensor[(8, 8, 4), int32], Tensor[(256), float64]) */;
  %100 = @func_6698() /* ty=(Tensor[(8, 8, 4), float64],) */;
  %101 = %95.1;
  %102 = %99.3;
  %103 = %100.0;
  %104 = @func_7901() /* ty=uint8 */;
  (%96, %101, %102, %103, %104)
}

def @func_23174() -> (Tensor[(8, 8, 4), float64],) {
  %105 = @func_16986() /* ty=Tensor[(8, 8, 4), float64] */;
  (%105,)
}

def @func_21550() -> (Tensor[(8, 8, 4), float64], Tensor[(1296), float64]) {
  %106 = @func_15479() /* ty=(Tensor[(8, 8, 4), float64],) */;
  %107 = %106.0;
  %108 = @func_6295() /* ty=Tensor[(1296), float64] */;
  (%107, %108)
}

def @func_23000() -> Tensor[(1296), float64] {
  %109 = @func_16717() /* ty=(Tensor[(8, 8, 4), float64], Tensor[(1296), float64]) */;
  %109.1
}

def @func_7075(%var_7070: Tensor[(12, 15, 7), float64], %var_7071: Tensor[(12, 15, 7), float64]) -> Tensor[(12, 15, 7), float64] {
  %110 = cast(%var_7071, dtype="float64") /* ty=Tensor[(12, 15, 7), float64] */;
  %111 = shape_of(%var_7070, dtype="int32") /* ty=Tensor[(3), int32] */;
  %112 = cast(%var_7070, dtype="float64") /* ty=Tensor[(12, 15, 7), float64] */;
  %113 = dyn.reshape(%110, %111, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  floor_divide(%112, %113) /* ty=Tensor[(12, 15, 7), float64] */
}

def @func_15193() -> (Tensor[(8, 8, 4), float64],) {
  %114 = @func_13842() /* ty=(Tensor[(8, 8, 4), float64],) */;
  %115 = %114.0;
  (%115,)
}

def @func_20415() -> (Tensor[(8, 8, 4), float64],) {
  %116 = @func_15328() /* ty=(Tensor[(8, 8, 4), float64],) */;
  %117 = %116.0;
  (%117,)
}

def @func_26114() -> (Tensor[(8, 8, 4), float64],) {
  %118 = @func_7099() /* ty=(Tensor[(8, 8, 4), float64],) */;
  %119 = %118.0;
  (%119,)
}

def @func_16717() -> (Tensor[(8, 8, 4), float64], Tensor[(1296), float64]) {
  %120 = @func_12860() /* ty=(Tensor[(8, 8, 4), float64],) */;
  %121 = %120.0;
  %122 = @func_13328() /* ty=Tensor[(1296), float64] */;
  (%121, %122)
}

def @func_23208(%var_23176: Tensor[(7, 3, 11), float64]) -> (Tensor[(7, 3, 11), float64], Tensor[(1296), float64]) {
  %123 = cast(%var_23176, dtype="float64") /* ty=Tensor[(7, 3, 11), float64] */;
  %124 = @func_16717() /* ty=(Tensor[(8, 8, 4), float64], Tensor[(1296), float64]) */;
  %125 = sqrt(%123) /* ty=Tensor[(7, 3, 11), float64] */;
  %126 = %124.1;
  (%125, %126)
}

def @func_21157() -> Tensor[(8, 8, 4), int32] {
  %127 = @func_13898() /* ty=(Tensor[(8, 8, 4), float64], Tensor[(8, 8, 4), int32]) */;
  %127.1
}

def @func_20457() -> uint8 {
  %128 = @func_9953() /* ty=(uint8,) */;
  %128.0
}

def @func_19299() -> (Tensor[(256), float64],) {
  %129 = @func_13419() /* ty=(Tensor[(9, 12, 12), float32], Tensor[(256), float64]) */;
  %130 = %129.1;
  (%130,)
}

def @func_10626() -> (Tensor[(8, 8, 4), int64], Tensor[(8, 8, 4), float64]) {
  %131 = @func_7364() /* ty=(Tensor[(8, 8, 4), int64], Tensor[(256), float64]) */;
  %132 = @func_5468() /* ty=(Tensor[(8, 8, 4), float64],) */;
  %133 = %131.0;
  %134 = %132.0;
  (%133, %134)
}

def @func_9339() -> (Tensor[(1296), float64], Tensor[(8, 8, 4), float64]) {
  %135 = @func_7595() /* ty=(Tensor[(1296), float64], Tensor[(8, 8, 4), float64], Tensor[(8, 8, 4), uint8]) */;
  %136 = @func_8571() /* ty=Tensor[(1296), float64] */;
  %137 = %135.1;
  (%136, %137)
}

def @func_15578() -> (Tensor[(8, 8, 4), float64], Tensor[(8, 8, 4), float64], Tensor[(8, 8, 4), uint8], uint8) {
  %138 = @func_15207() /* ty=(Tensor[(8, 8, 4), float64], Tensor[(8, 8, 4), uint8]) */;
  %139 = @func_8298() /* ty=Tensor[(8, 8, 4), float64] */;
  %140 = @func_12707() /* ty=Tensor[(8, 8, 4), float64] */;
  %141 = %138.1;
  %142 = @func_8420() /* ty=uint8 */;
  (%139, %140, %141, %142)
}

def @func_21509() -> (Tensor[(8, 8, 4), float64], Tensor[(256), float64], Tensor[(1296), bool]) {
  %143 = @func_19205() /* ty=(Tensor[(256), float64], Tensor[(8, 8, 4), float64]) */;
  %144 = @func_16575() /* ty=(Tensor[(9, 12, 12), float32], Tensor[(1296), bool], Tensor[(256), float64], Tensor[(1296), bool]) */;
  %145 = @func_15340() /* ty=Tensor[(8, 8, 4), float64] */;
  %146 = %143.0;
  %147 = %144.1;
  (%145, %146, %147)
}

def @func_6018() -> (Tensor[(8, 8, 4), float64],) {
  %148 = @func_5807() /* ty=Tensor[(8, 8, 4), float64] */;
  (%148,)
}

def @func_19635() -> Tensor[(256), float64] {
  %149 = @func_14126() /* ty=(Tensor[(256), float64],) */;
  %149.0
}

def @func_14847() -> (Tensor[(8, 8, 4), float64],) {
  %150 = @func_8936() /* ty=Tensor[(8, 8, 4), float64] */;
  (%150,)
}

def @func_10481() -> (Tensor[(8, 8, 4), float64], Tensor[(8, 8, 4), int64]) {
  %151 = @func_7099() /* ty=(Tensor[(8, 8, 4), float64],) */;
  %152 = %151.0;
  %153 = cast(%152, dtype="float64") /* ty=Tensor[(8, 8, 4), float64] */;
  %154 = reshape(%153, newshape=[8, 8, 4]) /* ty=Tensor[(8, 8, 4), float64] */;
  %155 = @func_5643(%154) /* ty=Tensor[(8, 8, 4), int64] */;
  (%152, %155)
}

def @func_13110() -> (Tensor[(8, 8, 4), int64], Tensor[(256), float64], Tensor[(1296), float64], Tensor[(8, 8, 4), float64]) {
  %156 = cast(meta[relay.Constant][1] /* ty=Tensor[(256), float64] */, dtype="float64") /* ty=Tensor[(256), float64] */;
  %157 = reshape(%156, newshape=[8, 8, 4]) /* ty=Tensor[(8, 8, 4), float64] */;
  %158 = @func_6538() /* ty=Tensor[(1296), bool] */;
  %159 = cast(%158, dtype="float64") /* ty=Tensor[(1296), float64] */;
  %160 = @func_9677() /* ty=(Tensor[(8, 8, 4), float64], Tensor[(8, 8, 4), float64]) */;
  %161 = @func_5643(%157) /* ty=Tensor[(8, 8, 4), int64] */;
  %162 = rsqrt(%159) /* ty=Tensor[(1296), float64] */;
  %163 = %160.0;
  (%161, meta[relay.Constant][1] /* ty=Tensor[(256), float64] */, %162, %163)
}

def @func_23253() -> (uint8, Tensor[(8, 8, 4), float64], Tensor[(8, 8, 4), int64]) {
  %164 = @func_12511() /* ty=(Tensor[(8, 8, 4), float64], uint8) */;
  %165 = @func_21550() /* ty=(Tensor[(8, 8, 4), float64], Tensor[(1296), float64]) */;
  %166 = %164.1;
  %167 = cast(%166, dtype="uint8") /* ty=uint8 */;
  %168 = reshape(%167, newshape=[]) /* ty=uint8 */;
  %169 = @func_18129(%168) /* ty=(Tensor[(8, 8, 4), float64], Tensor[(8, 8, 4), float64], Tensor[(14, 6, 15), float32], Tensor[(528), float32], uint8, Tensor[(8, 8, 4), int64]) */;
  %170 = %165.0;
  %171 = %169.5;
  (%166, %170, %171)
}

def @func_15207() -> (Tensor[(8, 8, 4), float64], Tensor[(8, 8, 4), uint8]) {
  %172 = @func_6905() /* ty=(Tensor[(8, 8, 4), float64], uint8, Tensor[(528), float32], uint8, Tensor[(8, 8, 4), float64]) */;
  %173 = @func_9585() /* ty=(Tensor[(8, 8, 4), int64], Tensor[(8, 8, 4), float64], Tensor[(1296), bool], uint8, Tensor[(8, 8, 4), uint8], Tensor[(1296), float64], Tensor[(2, 5, 12), bool], Tensor[(120), float64], Tensor[(8, 8, 4), bool]) */;
  %174 = %172.0;
  %175 = %173.4;
  (%174, %175)
}

def @func_21882() -> (Tensor[(8, 8, 4), float64], Tensor[(1296), bool]) {
  %176 = @func_15300() /* ty=(Tensor[(8, 8, 4), float64],) */;
  %177 = @func_20988() /* ty=(Tensor[(1296), float64], Tensor[(1296), bool], uint8) */;
  %178 = %176.0;
  %179 = %177.1;
  (%178, %179)
}

def @func_16790(%var_16777: uint8) -> (Tensor[(8, 8, 4), float64], Tensor[(14, 6, 15), float32], uint8, Tensor[(1, 528), float32]) {
  %180 = @func_7292() /* ty=(Tensor[(8, 8, 4), float64],) */;
  %181 = cast(meta[relay.Constant][2] /* ty=Tensor[(1, 528), float32] */, dtype="float32") /* ty=Tensor[(1, 528), float32] */;
  %182 = cast(%var_16777, dtype="uint8") /* ty=uint8 */;
  %183 = reshape(%181, newshape=[3, 11, 16]) /* ty=Tensor[(3, 11, 16), float32] */;
  %184 = reshape(%182, newshape=[]) /* ty=uint8 */;
  %185 = @func_2471(%183, %184) /* ty=(Tensor[(3, 11, 16), float32], Tensor[(14, 6, 15), float32], Tensor[(1260), float32], Tensor[(1260), float32], uint8, Tensor[(75), uint8], Tensor[(14, 6, 15), float32]) */;
  %186 = cast(meta[relay.Constant][2] /* ty=Tensor[(1, 528), float32] */, dtype="float32") /* ty=Tensor[(1, 528), float32] */;
  %187 = %180.0;
  %188 = %185.1;
  %189 = sigmoid(%186) /* ty=Tensor[(1, 528), float32] */;
  (%187, %188, %var_16777, %189)
}

def @func_23301() -> (Tensor[(8, 8, 4), float64],) {
  %190 = @func_20277() /* ty=(Tensor[(8, 8, 4), float64], Tensor[(8, 8, 4), float64]) */;
  %191 = %190.0;
  (%191,)
}

def @func_12616(%var_12608: Tensor[(13, 8, 14), float64]) -> Tensor[(13, 8, 14), float64] {
  %192 = cast(%var_12608, dtype="float64") /* ty=Tensor[(13, 8, 14), float64] */;
  asin(%192) /* ty=Tensor[(13, 8, 14), float64] */
}

def @func_1297(%var_1281: uint8, %var_1282: Tensor[(15, 1, 5), uint8], %var_1289: Tensor[(1260), float32]) -> (Tensor[(15, 1, 5), uint8], Tensor[(14, 6, 15), float32], Tensor[(1260), float32]) {
  %193 = cast(%var_1281, dtype="uint8") /* ty=uint8 */;
  %194 = cast(%var_1282, dtype="uint8") /* ty=Tensor[(15, 1, 5), uint8] */;
  %195 = cast(%var_1289, dtype="float32") /* ty=Tensor[(1260), float32] */;
  %196 = reshape(%195, newshape=[14, 6, 15]) /* ty=Tensor[(14, 6, 15), float32] */;
  %197 = @func_963(%196) /* ty=(Tensor[(14, 6, 15), float32],) */;
  %198 = left_shift(%193, %194) /* ty=Tensor[(15, 1, 5), uint8] */;
  %199 = %197.0;
  (%198, %199, %var_1289)
}

def @func_18709() -> Tensor[(8, 8, 4), float64] {
  @func_11472() /* ty=Tensor[(8, 8, 4), float64] */
}

def @func_25317() -> (Tensor[(8, 8, 4), uint8],) {
  %200 = @func_19030() /* ty=(Tensor[(1260), bool], Tensor[(8, 8, 4), uint8]) */;
  %201 = %200.1;
  (%201,)
}

def @func_7504() -> (Tensor[(8, 8, 4), float64],) {
  %202 = @func_5688() /* ty=Tensor[(8, 8, 4), float64] */;
  (%202,)
}

def @func_22241() -> (Tensor[(8, 8, 4), float64],) {
  %203 = @func_8630() /* ty=(Tensor[(8, 8, 4), float64],) */;
  %204 = %203.0;
  (%204,)
}

def @func_21736() -> (uint8, Tensor[(8, 8, 4), float64]) {
  %205 = @func_18328() /* ty=uint8 */;
  %206 = @func_5807() /* ty=Tensor[(8, 8, 4), float64] */;
  (%205, %206)
}

def @func_21601(%var_21579: Tensor[(77, 4), uint64]) -> (Tensor[(8, 8, 4), float64], Tensor[(2, 14, 11), uint64], Tensor[(77, 4), uint64]) {
  %207 = @func_7099() /* ty=(Tensor[(8, 8, 4), float64],) */;
  %208 = cast(%var_21579, dtype="uint64") /* ty=Tensor[(77, 4), uint64] */;
  %209 = cast(%var_21579, dtype="uint64") /* ty=Tensor[(77, 4), uint64] */;
  %210 = reshape(%208, newshape=[2, 14, 11]) /* ty=Tensor[(2, 14, 11), uint64] */;
  %211 = reshape(%209, newshape=[2, 14, 11]) /* ty=Tensor[(2, 14, 11), uint64] */;
  %212 = @func_11696(%210, %211) /* ty=(Tensor[(2, 14, 11), uint64], Tensor[(8, 8, 4), float64], Tensor[(2, 14, 11), float32]) */;
  %213 = %207.0;
  %214 = %212.0;
  (%213, %214, %var_21579)
}

def @func_2943(%var_2927: Tensor[(1, 2, 15), int64], %var_2928: Tensor[(14, 2, 15), int64]) -> (Tensor[(14, 2, 15), int64],) {
  %215 = cast(%var_2927, dtype="int64") /* ty=Tensor[(1, 2, 15), int64] */;
  %216 = cast(%var_2928, dtype="int64") /* ty=Tensor[(14, 2, 15), int64] */;
  %217 = bitwise_xor(%215, %216) /* ty=Tensor[(14, 2, 15), int64] */;
  (%217,)
}

def @func_21565() -> Tensor[(120), float64] {
  @func_10009() /* ty=Tensor[(120), float64] */
}

def @func_18549() -> (Tensor[(1296), float64],) {
  %218 = @func_16259() /* ty=(Tensor[(1296), float64],) */;
  %219 = %218.0;
  (%219,)
}

def @func_12185() -> (Tensor[(8, 8, 4), float64],) {
  %220 = @func_7342() /* ty=Tensor[(8, 8, 4), float64] */;
  (%220,)
}

def @func_16575() -> (Tensor[(9, 12, 12), float32], Tensor[(1296), bool], Tensor[(256), float64], Tensor[(1296), bool]) {
  %221 = @func_13762() /* ty=(Tensor[(9, 12, 12), float32], Tensor[(9, 12, 12), float32]) */;
  %222 = @func_16469() /* ty=(Tensor[(1296), bool],) */;
  %223 = %221.0;
  %224 = %222.0;
  %225 = @func_15833() /* ty=Tensor[(256), float64] */;
  %226 = @func_10439() /* ty=Tensor[(1296), bool] */;
  (%223, %224, %225, %226)
}

def @func_15986() -> (Tensor[(8, 8, 4), float64],) {
  %227 = @func_14973() /* ty=Tensor[(8, 8, 4), float64] */;
  (%227,)
}

def @func_5727() -> (Tensor[(8, 8, 4), float64],) {
  %228 = @func_5468() /* ty=(Tensor[(8, 8, 4), float64],) */;
  %229 = %228.0;
  (%229,)
}

def @func_15328() -> (Tensor[(8, 8, 4), float64],) {
  %230 = @func_12946() /* ty=(Tensor[(1296), bool], Tensor[(8, 8, 4), float64]) */;
  %231 = %230.1;
  (%231,)
}

def @func_14301() -> (Tensor[(1296), bool], Tensor[(120), float64]) {
  %232 = @func_12332() /* ty=(Tensor[(120), float64], Tensor[(1296), float64]) */;
  %233 = @func_10439() /* ty=Tensor[(1296), bool] */;
  %234 = %232.0;
  (%233, %234)
}

def @func_25848() -> Tensor[(8, 8, 4), float64] {
  @func_15340() /* ty=Tensor[(8, 8, 4), float64] */
}

def @func_14772() -> Tensor[(1296), float64] {
  %235 = @func_6490() /* ty=(Tensor[(1296), float64],) */;
  %235.0
}

def @func_26738(%var_26726: Tensor[(6, 12, 7), float64]) -> (Tensor[(6, 12, 7), float64], Tensor[(4, 6, 1), float64], Tensor[(24), float64], Tensor[(6, 12, 7), float32]) {
  %236 = cast(meta[relay.Constant][3] /* ty=Tensor[(6, 12, 7), float64] */, dtype="float64") /* ty=Tensor[(6, 12, 7), float64] */;
  %237 = shape_of(%var_26726, dtype="int32") /* ty=Tensor[(3), int32] */;
  %238 = cast(%var_26726, dtype="float64") /* ty=Tensor[(6, 12, 7), float64] */;
  %239 = dyn.reshape(%236, %237, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %240 = cast(meta[relay.Constant][4] /* ty=Tensor[(24), float64] */, dtype="float64") /* ty=Tensor[(24), float64] */;
  %241 = reshape(%240, newshape=[4, 6, 1]) /* ty=Tensor[(4, 6, 1), float64] */;
  %242 = @func_12454(%241) /* ty=(Tensor[(4, 6, 1), float64],) */;
  %243 = cast(meta[relay.Constant][3] /* ty=Tensor[(6, 12, 7), float64] */, dtype="float32") /* ty=Tensor[(6, 12, 7), float32] */;
  %244 = shape_of(%var_26726, dtype="int32") /* ty=Tensor[(3), int32] */;
  %245 = cast(%var_26726, dtype="float32") /* ty=Tensor[(6, 12, 7), float32] */;
  %246 = dyn.reshape(%243, %244, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %247 = floor_mod(%238, %239) /* ty=Tensor[(6, 12, 7), float64] */;
  %248 = %242.0;
  %249 = divide(%245, %246) /* ty=Tensor[(6, 12, 7), float32] */;
  (%247, %248, meta[relay.Constant][4] /* ty=Tensor[(24), float64] */, %249)
}

def @func_26856() -> (Tensor[(8, 8, 4), float64], Tensor[(256), float64], Tensor[(8, 8, 4), float64]) {
  %250 = @func_17644() /* ty=(Tensor[(8, 8, 4), float64],) */;
  %251 = @func_26672() /* ty=(Tensor[(256), float64], Tensor[(1296), float64], Tensor[(8, 8, 4), float64]) */;
  %252 = %250.0;
  %253 = %251.0;
  %254 = @func_8829() /* ty=Tensor[(8, 8, 4), float64] */;
  (%252, %253, %254)
}

def @func_7663(%var_7654: Tensor[(588), uint8]) -> (Tensor[(8, 8, 4), float64], Tensor[(6, 7, 14), float64], Tensor[(588), uint8], Tensor[(8, 8, 4), float64]) {
  %255 = @func_7099() /* ty=(Tensor[(8, 8, 4), float64],) */;
  %256 = cast(%var_7654, dtype="uint8") /* ty=Tensor[(588), uint8] */;
  %257 = reshape(%256, newshape=[6, 7, 14]) /* ty=Tensor[(6, 7, 14), uint8] */;
  %258 = @func_4543(%257) /* ty=(Tensor[(6, 7, 14), float64],) */;
  %259 = @func_7099() /* ty=(Tensor[(8, 8, 4), float64],) */;
  %260 = %255.0;
  %261 = %258.0;
  %262 = %259.0;
  (%260, %261, %var_7654, %262)
}

def @func_14391() -> Tensor[(8, 8, 4), float64] {
  %263 = @func_13685() /* ty=(Tensor[(8, 8, 4), float64], Tensor[(8, 8, 4), float64]) */;
  %263.0
}

def @func_8209(%var_8191: Tensor[(640), float64]) -> (Tensor[(8, 8, 4), float64], Tensor[(16, 8, 5), float64], Tensor[(640), float64]) {
  %264 = @func_7955() /* ty=(Tensor[(8, 8, 4), float64],) */;
  %265 = cast(%var_8191, dtype="float64") /* ty=Tensor[(640), float64] */;
  %266 = reshape(%265, newshape=[16, 8, 5]) /* ty=Tensor[(16, 8, 5), float64] */;
  %267 = @func_2187(%266) /* ty=(Tensor[(16, 8, 5), float64],) */;
  %268 = %264.0;
  %269 = %267.0;
  (%268, %269, %var_8191)
}

def @func_8630() -> (Tensor[(8, 8, 4), float64],) {
  %270 = @func_6452() /* ty=Tensor[(8, 8, 4), float64] */;
  (%270,)
}

def @func_26029(%var_25960: uint8, %var_25962: Tensor[(1260), float32]) -> (Tensor[(8, 8, 4), float64], uint8, Tensor[(75), uint8], Tensor[(1260), uint32], Tensor[(3, 11, 16), float32], Tensor[(15, 8, 16), float32], Tensor[(1920), float32], Tensor[(1440), bool], Tensor[(1296), float64], Tensor[(8, 8, 4), float64]) {
  %271 = cast(%var_25960, dtype="uint8") /* ty=uint8 */;
  %272 = cast(meta[relay.Constant][5] /* ty=Tensor[(75), uint8] */, dtype="uint8") /* ty=Tensor[(75), uint8] */;
  %273 = cast(%var_25962, dtype="float32") /* ty=Tensor[(1260), float32] */;
  %274 = reshape(%271, newshape=[]) /* ty=uint8 */;
  %275 = reshape(%272, newshape=[15, 1, 5]) /* ty=Tensor[(15, 1, 5), uint8] */;
  %276 = reshape(%273, newshape=[1260]) /* ty=Tensor[(1260), float32] */;
  %277 = @func_1297(%274, %275, %276) /* ty=(Tensor[(15, 1, 5), uint8], Tensor[(14, 6, 15), float32], Tensor[(1260), float32]) */;
  %278 = %277.2;
  %279 = cast(%278, dtype="uint32") /* ty=Tensor[(1260), uint32] */;
  %280 = shape_of(%var_25962, dtype="int32") /* ty=Tensor[(1), int32] */;
  %281 = cast(%var_25962, dtype="uint32") /* ty=Tensor[(1260), uint32] */;
  %282 = dyn.reshape(%279, %280, newshape=[]) /* ty=Tensor[(?), uint32] */;
  %283 = cast(meta[relay.Constant][6] /* ty=Tensor[(1440), uint16] */, dtype="uint16") /* ty=Tensor[(1440), uint16] */;
  %284 = reshape(%283, newshape=[1440]) /* ty=Tensor[(1440), uint16] */;
  %285 = @func_18533(%284) /* ty=(Tensor[(120), float64], Tensor[(3, 11, 16), float32], Tensor[(1440), uint16], Tensor[(528), float32], Tensor[(10, 64), float64]) */;
  %286 = cast(meta[relay.Constant][7] /* ty=Tensor[(1920), float32] */, dtype="float32") /* ty=Tensor[(1920), float32] */;
  %287 = cast(meta[relay.Constant][7] /* ty=Tensor[(1920), float32] */, dtype="float32") /* ty=Tensor[(1920), float32] */;
  %288 = reshape(%286, newshape=[15, 8, 16]) /* ty=Tensor[(15, 8, 16), float32] */;
  %289 = reshape(%287, newshape=[15, 8, 16]) /* ty=Tensor[(15, 8, 16), float32] */;
  %290 = @func_14346(%288, %289) /* ty=(Tensor[(15, 8, 16), float32],) */;
  %291 = cast(meta[relay.Constant][6] /* ty=Tensor[(1440), uint16] */, dtype="float64") /* ty=Tensor[(1440), float64] */;
  %292 = asin(%291) /* ty=Tensor[(1440), float64] */;
  %293 = cast(meta[relay.Constant][6] /* ty=Tensor[(1440), uint16] */, dtype="bool") /* ty=Tensor[(1440), bool] */;
  %294 = shape_of(%292, dtype="int32") /* ty=Tensor[(1), int32] */;
  %295 = cast(%292, dtype="bool") /* ty=Tensor[(1440), bool] */;
  %296 = dyn.reshape(%293, %294, newshape=[]) /* ty=Tensor[(?), bool] */;
  %297 = @func_18549() /* ty=(Tensor[(1296), float64],) */;
  %298 = @func_22878() /* ty=Tensor[(8, 8, 4), float64] */;
  %299 = maximum(%281, %282) /* ty=Tensor[(1260), uint32] */;
  %300 = %285.1;
  %301 = %290.0;
  %302 = greater(%295, %296) /* ty=Tensor[(1440), bool] */;
  %303 = %297.0;
  %304 = @func_22340() /* ty=Tensor[(8, 8, 4), float64] */;
  (%298, %var_25960, meta[relay.Constant][5] /* ty=Tensor[(75), uint8] */, %299, %300, %301, meta[relay.Constant][7] /* ty=Tensor[(1920), float32] */, %302, %303, %304)
}

def @func_14112() -> Tensor[(1296), bool] {
  %305 = @func_8352() /* ty=(Tensor[(8, 8, 4), float64], Tensor[(1296), bool]) */;
  %305.1
}

def @func_22913() -> Tensor[(8, 8, 4), float64] {
  %306 = @func_12511() /* ty=(Tensor[(8, 8, 4), float64], uint8) */;
  %306.0
}

def @func_9585() -> (Tensor[(8, 8, 4), int64], Tensor[(8, 8, 4), float64], Tensor[(1296), bool], uint8, Tensor[(8, 8, 4), uint8], Tensor[(1296), float64], Tensor[(2, 5, 12), bool], Tensor[(120), float64], Tensor[(8, 8, 4), bool]) {
  %307 = @func_7878() /* ty=(Tensor[(8, 8, 4), float64], Tensor[(8, 8, 4), int64], Tensor[(256), float64]) */;
  %308 = @func_7399() /* ty=Tensor[(8, 8, 4), float64] */;
  %309 = cast(%308, dtype="float64") /* ty=Tensor[(8, 8, 4), float64] */;
  %310 = reshape(%309, newshape=[8, 8, 4]) /* ty=Tensor[(8, 8, 4), float64] */;
  %311 = @func_6490() /* ty=(Tensor[(1296), float64],) */;
  %312 = cast(meta[relay.Constant][8] /* ty=Tensor[(120), float64] */, dtype="float64") /* ty=Tensor[(120), float64] */;
  %313 = cast(meta[relay.Constant][8] /* ty=Tensor[(120), float64] */, dtype="float64") /* ty=Tensor[(120), float64] */;
  %314 = reshape(%312, newshape=[2, 5, 12]) /* ty=Tensor[(2, 5, 12), float64] */;
  %315 = reshape(%313, newshape=[2, 5, 12]) /* ty=Tensor[(2, 5, 12), float64] */;
  %316 = @func_8852(%314, %315) /* ty=(Tensor[(2, 5, 12), bool],) */;
  %317 = cast(%308, dtype="float64") /* ty=Tensor[(8, 8, 4), float64] */;
  %318 = reshape(%317, newshape=[8, 8, 4]) /* ty=Tensor[(8, 8, 4), float64] */;
  %319 = @func_7237(%318) /* ty=(Tensor[(8, 8, 4), bool], Tensor[(8, 8, 4), float64], Tensor[(8, 8, 4), float32], Tensor[(8, 8, 4), float64]) */;
  %320 = %307.1;
  %321 = @func_6538() /* ty=Tensor[(1296), bool] */;
  %322 = @func_7901() /* ty=uint8 */;
  %323 = @func_6658(%310) /* ty=Tensor[(8, 8, 4), uint8] */;
  %324 = %311.0;
  %325 = %316.0;
  %326 = %319.0;
  (%320, %308, %321, %322, %323, %324, %325, meta[relay.Constant][8] /* ty=Tensor[(120), float64] */, %326)
}

def @func_18328() -> uint8 {
  %327 = @func_11111() /* ty=(uint8, Tensor[(1296), float64]) */;
  %327.0
}

def @func_22413(%var_22409: Tensor[(648, 2), bool]) -> (Tensor[(8, 8, 4), int32], Tensor[(8, 8, 4), float64], Tensor[(528, 1), float32], Tensor[(648, 2), bool]) {
  %328 = cast(meta[relay.Constant][9] /* ty=Tensor[(528, 1), float32] */, dtype="float32") /* ty=Tensor[(528, 1), float32] */;
  %329 = cast(%var_22409, dtype="bool") /* ty=Tensor[(648, 2), bool] */;
  %330 = reshape(%328, newshape=[528]) /* ty=Tensor[(528), float32] */;
  %331 = reshape(%329, newshape=[1296]) /* ty=Tensor[(1296), bool] */;
  %332 = @func_12034(%330, %331) /* ty=(Tensor[(8, 8, 4), float64], Tensor[(8, 8, 4), float64], Tensor[(528), float32], Tensor[(1296), bool]) */;
  %333 = @func_21157() /* ty=Tensor[(8, 8, 4), int32] */;
  %334 = %332.0;
  (%333, %334, meta[relay.Constant][9] /* ty=Tensor[(528, 1), float32] */, %var_22409)
}

def @func_13487() -> Tensor[(8, 8, 4), float64] {
  %335 = @func_7955() /* ty=(Tensor[(8, 8, 4), float64],) */;
  %335.0
}

def @func_21213() -> uint8 {
  %336 = @func_10684() /* ty=(uint8,) */;
  %336.0
}

def @func_11795() -> uint8 {
  %337 = @func_6905() /* ty=(Tensor[(8, 8, 4), float64], uint8, Tensor[(528), float32], uint8, Tensor[(8, 8, 4), float64]) */;
  %337.3
}

def @func_6982() -> (Tensor[(8, 8, 4), float64], Tensor[(8, 8, 4), float64]) {
  %338 = @func_6452() /* ty=Tensor[(8, 8, 4), float64] */;
  %339 = @func_6452() /* ty=Tensor[(8, 8, 4), float64] */;
  (%338, %339)
}

def @func_12396() -> (Tensor[(120), float64], Tensor[(8, 8, 4), int64]) {
  %340 = @func_7878() /* ty=(Tensor[(8, 8, 4), float64], Tensor[(8, 8, 4), int64], Tensor[(256), float64]) */;
  %341 = @func_10009() /* ty=Tensor[(120), float64] */;
  %342 = %340.1;
  (%341, %342)
}

def @func_10962() -> (Tensor[(1296), float64], Tensor[(256), float64], Tensor[(8, 8, 4), float64]) {
  %343 = @func_6490() /* ty=(Tensor[(1296), float64],) */;
  %344 = @func_10031() /* ty=(Tensor[(256), float64], Tensor[(1296), float64]) */;
  %345 = %343.0;
  %346 = %344.0;
  %347 = @func_6452() /* ty=Tensor[(8, 8, 4), float64] */;
  (%345, %346, %347)
}

def @func_15851() -> (Tensor[(8, 8, 4), float64], Tensor[(8, 8, 4), uint8], Tensor[(8, 8, 4), int32]) {
  %348 = @func_10182() /* ty=(Tensor[(8, 8, 4), float64], Tensor[(8, 8, 4), float64]) */;
  %349 = @func_9585() /* ty=(Tensor[(8, 8, 4), int64], Tensor[(8, 8, 4), float64], Tensor[(1296), bool], uint8, Tensor[(8, 8, 4), uint8], Tensor[(1296), float64], Tensor[(2, 5, 12), bool], Tensor[(120), float64], Tensor[(8, 8, 4), bool]) */;
  %350 = @func_7816() /* ty=(Tensor[(8, 8, 4), float64], Tensor[(8, 8, 4), int32]) */;
  %351 = %348.0;
  %352 = %349.4;
  %353 = %350.1;
  (%351, %352, %353)
}

def @func_24205() -> (Tensor[(1296), bool], Tensor[(264, 2), bool], Tensor[(528, 1), float32], uint8) {
  %354 = @func_16469() /* ty=(Tensor[(1296), bool],) */;
  %355 = cast(meta[relay.Constant][10] /* ty=Tensor[(528, 1), float32] */, dtype="float32") /* ty=Tensor[(528, 1), float32] */;
  %356 = %354.0;
  %357 = cast(%356, dtype="bool") /* ty=Tensor[(1296), bool] */;
  %358 = cast(meta[relay.Constant][11] /* ty=uint8 */, dtype="uint8") /* ty=uint8 */;
  %359 = reshape(%355, newshape=[264, 2]) /* ty=Tensor[(264, 2), float32] */;
  %360 = reshape(%357, newshape=[1296]) /* ty=Tensor[(1296), bool] */;
  %361 = reshape(%358, newshape=[]) /* ty=uint8 */;
  %362 = @func_20730(%359, %360, %361) /* ty=(Tensor[(8, 8, 4), float64], Tensor[(8, 8, 4), float64], Tensor[(8, 8, 4), float64], Tensor[(12, 15, 7), float64], Tensor[(1260), float64], Tensor[(264, 2), int64], Tensor[(1296), uint64], Tensor[(8, 8, 4), float64], Tensor[(14, 6, 15), float32], Tensor[(75), uint8], uint8, Tensor[(8, 8, 4), float64], Tensor[(8, 8, 4), float64], Tensor[(264, 2), float64], Tensor[(264, 2), bool], Tensor[(1296), bool]) */;
  %363 = %362.14;
  (%356, %363, meta[relay.Constant][10] /* ty=Tensor[(528, 1), float32] */, meta[relay.Constant][11] /* ty=uint8 */)
}

def @func_20007() -> (Tensor[(8, 8, 4), float64], Tensor[(8, 8, 4), float64]) {
  %364 = @func_16635() /* ty=(uint8, Tensor[(8, 8, 4), float64], Tensor[(8, 8, 4), float64]) */;
  %365 = %364.2;
  %366 = @func_13487() /* ty=Tensor[(8, 8, 4), float64] */;
  (%365, %366)
}

def @func_17340() -> (uint8, Tensor[(12, 15, 7), float64], Tensor[(90, 14), float64], Tensor[(8, 8, 4), float64]) {
  %367 = cast(meta[relay.Constant][12] /* ty=Tensor[(90, 14), float64] */, dtype="float64") /* ty=Tensor[(90, 14), float64] */;
  %368 = cast(meta[relay.Constant][12] /* ty=Tensor[(90, 14), float64] */, dtype="float64") /* ty=Tensor[(90, 14), float64] */;
  %369 = reshape(%367, newshape=[12, 15, 7]) /* ty=Tensor[(12, 15, 7), float64] */;
  %370 = reshape(%368, newshape=[12, 15, 7]) /* ty=Tensor[(12, 15, 7), float64] */;
  %371 = @func_11795() /* ty=uint8 */;
  %372 = @func_7075(%369, %370) /* ty=Tensor[(12, 15, 7), float64] */;
  %373 = @func_8501() /* ty=Tensor[(8, 8, 4), float64] */;
  (%371, %372, meta[relay.Constant][12] /* ty=Tensor[(90, 14), float64] */, %373)
}

def @func_6366() -> (Tensor[(1296), bool], Tensor[(8, 8, 4), int64], Tensor[(256), float64]) {
  %374 = @func_6257() /* ty=(Tensor[(1296), float64],) */;
  %375 = %374.0;
  %376 = cast(meta[relay.Constant][13] /* ty=Tensor[(1296), float64] */, dtype="bool") /* ty=Tensor[(1296), bool] */;
  %377 = shape_of(%375, dtype="int32") /* ty=Tensor[(1), int32] */;
  %378 = cast(%375, dtype="bool") /* ty=Tensor[(1296), bool] */;
  %379 = dyn.reshape(%376, %377, newshape=[]) /* ty=Tensor[(?), bool] */;
  %380 = cast(meta[relay.Constant][14] /* ty=Tensor[(256), float64] */, dtype="float64") /* ty=Tensor[(256), float64] */;
  %381 = reshape(%380, newshape=[8, 8, 4]) /* ty=Tensor[(8, 8, 4), float64] */;
  %382 = greater(%378, %379) /* ty=Tensor[(1296), bool] */;
  %383 = @func_5643(%381) /* ty=Tensor[(8, 8, 4), int64] */;
  (%382, %383, meta[relay.Constant][14] /* ty=Tensor[(256), float64] */)
}

def @func_15517() -> (Tensor[(8, 8, 4), float64], Tensor[(1296), float64]) {
  %384 = @func_9677() /* ty=(Tensor[(8, 8, 4), float64], Tensor[(8, 8, 4), float64]) */;
  %385 = @func_6176() /* ty=(Tensor[(8, 8, 4), float64], Tensor[(6, 7, 14), float64], Tensor[(588), uint8], Tensor[(8, 8, 4), float64], Tensor[(9, 12, 12), float32], Tensor[(1296), float64]) */;
  %386 = %384.0;
  %387 = %385.5;
  (%386, %387)
}

def @func_22381() -> Tensor[(8, 8, 4), float64] {
  @func_11472() /* ty=Tensor[(8, 8, 4), float64] */
}

def @func_12332() -> (Tensor[(120), float64], Tensor[(1296), float64]) {
  %388 = @func_9585() /* ty=(Tensor[(8, 8, 4), int64], Tensor[(8, 8, 4), float64], Tensor[(1296), bool], uint8, Tensor[(8, 8, 4), uint8], Tensor[(1296), float64], Tensor[(2, 5, 12), bool], Tensor[(120), float64], Tensor[(8, 8, 4), bool]) */;
  %389 = @func_9618() /* ty=Tensor[(120), float64] */;
  %390 = %388.5;
  (%389, %390)
}

def @func_9968() -> Tensor[(1296), bool] {
  %391 = @func_8352() /* ty=(Tensor[(8, 8, 4), float64], Tensor[(1296), bool]) */;
  %391.1
}

def @func_10684() -> (uint8,) {
  %392 = @func_8420() /* ty=uint8 */;
  (%392,)
}

def @func_7595() -> (Tensor[(1296), float64], Tensor[(8, 8, 4), float64], Tensor[(8, 8, 4), uint8]) {
  %393 = @func_6490() /* ty=(Tensor[(1296), float64],) */;
  %394 = @func_7099() /* ty=(Tensor[(8, 8, 4), float64],) */;
  %395 = %394.0;
  %396 = cast(%395, dtype="float64") /* ty=Tensor[(8, 8, 4), float64] */;
  %397 = reshape(%396, newshape=[8, 8, 4]) /* ty=Tensor[(8, 8, 4), float64] */;
  %398 = %393.0;
  %399 = @func_6658(%397) /* ty=Tensor[(8, 8, 4), uint8] */;
  (%398, %395, %399)
}

def @func_12724() -> (Tensor[(8, 8, 4), float64],) {
  %400 = @func_8829() /* ty=Tensor[(8, 8, 4), float64] */;
  (%400,)
}

def @func_22318() -> (Tensor[(1296), bool], Tensor[(8, 8, 4), float64], Tensor[(8, 8, 4), float64]) {
  %401 = @func_8448() /* ty=(Tensor[(1296), bool], Tensor[(1296), bool]) */;
  %402 = @func_7816() /* ty=(Tensor[(8, 8, 4), float64], Tensor[(8, 8, 4), int32]) */;
  %403 = @func_20415() /* ty=(Tensor[(8, 8, 4), float64],) */;
  %404 = %401.1;
  %405 = %402.0;
  %406 = %403.0;
  (%404, %405, %406)
}

def @func_6780(%var_6762: Tensor[(1, 528), float32]) -> (Tensor[(256), float64], Tensor[(1296), bool], Tensor[(8, 8, 4), float64], Tensor[(1, 528), float32], Tensor[(8, 8, 4), int64]) {
  %407 = @func_6366() /* ty=(Tensor[(1296), bool], Tensor[(8, 8, 4), int64], Tensor[(256), float64]) */;
  %408 = cast(%var_6762, dtype="float32") /* ty=Tensor[(1, 528), float32] */;
  %409 = reshape(%408, newshape=[264, 2]) /* ty=Tensor[(264, 2), float32] */;
  %410 = @func_6610(%409) /* ty=(Tensor[(8, 8, 4), float64], Tensor[(3, 11, 16), float32], Tensor[(264, 2), float32], uint8) */;
  %411 = %407.2;
  %412 = cast(%411, dtype="float64") /* ty=Tensor[(256), float64] */;
  %413 = reshape(%412, newshape=[8, 8, 4]) /* ty=Tensor[(8, 8, 4), float64] */;
  %414 = @func_6538() /* ty=Tensor[(1296), bool] */;
  %415 = %410.0;
  %416 = @func_5643(%413) /* ty=Tensor[(8, 8, 4), int64] */;
  (%411, %414, %415, %var_6762, %416)
}

def @func_14720() -> (Tensor[(8, 8, 4), float64], Tensor[(1296), float64], Tensor[(1296), bool], Tensor[(4, 5, 10), bool], Tensor[(200), bool], Tensor[(8, 8, 4), float64]) {
  %417 = @func_9759() /* ty=(Tensor[(8, 8, 4), float64],) */;
  %418 = @func_9339() /* ty=(Tensor[(1296), float64], Tensor[(8, 8, 4), float64]) */;
  %419 = cast(meta[relay.Constant][15] /* ty=Tensor[(200), bool] */, dtype="bool") /* ty=Tensor[(200), bool] */;
  %420 = reshape(%419, newshape=[4, 5, 10]) /* ty=Tensor[(4, 5, 10), bool] */;
  %421 = @func_11584(%420) /* ty=(Tensor[(4, 5, 10), bool],) */;
  %422 = @func_9677() /* ty=(Tensor[(8, 8, 4), float64], Tensor[(8, 8, 4), float64]) */;
  %423 = %417.0;
  %424 = %418.0;
  %425 = @func_6538() /* ty=Tensor[(1296), bool] */;
  %426 = %421.0;
  %427 = %422.0;
  (%423, %424, %425, %426, meta[relay.Constant][15] /* ty=Tensor[(200), bool] */, %427)
}

def @func_7749(%var_7731: Tensor[(3, 11, 5), float32]) -> (Tensor[(3, 11, 5), float32], Tensor[(8, 8, 4), float64], Tensor[(1260), bool], Tensor[(528), float32]) {
  %428 = cast(%var_7731, dtype="float32") /* ty=Tensor[(3, 11, 5), float32] */;
  %429 = @func_6698() /* ty=(Tensor[(8, 8, 4), float64],) */;
  %430 = cast(meta[relay.Constant][16] /* ty=Tensor[(528), float32] */, dtype="float32") /* ty=Tensor[(528), float32] */;
  %431 = reshape(%430, newshape=[528, 1]) /* ty=Tensor[(528, 1), float32] */;
  %432 = @func_7484(%431) /* ty=(Tensor[(8, 8, 4), float64], Tensor[(1260), bool], Tensor[(1440), uint16], Tensor[(528, 1), float32], Tensor[(640), float64], Tensor[(14, 6, 15), float32]) */;
  %433 = atanh(%428) /* ty=Tensor[(3, 11, 5), float32] */;
  %434 = %429.0;
  %435 = %432.1;
  (%433, %434, %435, meta[relay.Constant][16] /* ty=Tensor[(528), float32] */)
}

def @func_14346(%var_14335: Tensor[(15, 8, 16), float32], %var_14336: Tensor[(15, 8, 16), float32]) -> (Tensor[(15, 8, 16), float32],) {
  %436 = cast(%var_14336, dtype="float32") /* ty=Tensor[(15, 8, 16), float32] */;
  %437 = shape_of(%var_14335, dtype="int32") /* ty=Tensor[(3), int32] */;
  %438 = cast(%var_14335, dtype="float32") /* ty=Tensor[(15, 8, 16), float32] */;
  %439 = dyn.reshape(%436, %437, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %440 = mod(%438, %439) /* ty=Tensor[(15, 8, 16), float32] */;
  (%440,)
}

def @func_13762() -> (Tensor[(9, 12, 12), float32], Tensor[(9, 12, 12), float32]) {
  %441 = @func_13419() /* ty=(Tensor[(9, 12, 12), float32], Tensor[(256), float64]) */;
  %442 = %441.0;
  %443 = cast(%442, dtype="float64") /* ty=Tensor[(9, 12, 12), float64] */;
  %444 = reshape(%443, newshape=[9, 12, 12]) /* ty=Tensor[(9, 12, 12), float64] */;
  %445 = @func_2887(%444) /* ty=Tensor[(9, 12, 12), float32] */;
  (%442, %445)
}

def @func_10182() -> (Tensor[(8, 8, 4), float64], Tensor[(8, 8, 4), float64]) {
  %446 = @func_5468() /* ty=(Tensor[(8, 8, 4), float64],) */;
  %447 = %446.0;
  %448 = cast(%447, dtype="float64") /* ty=Tensor[(8, 8, 4), float64] */;
  %449 = reshape(%448, newshape=[8, 8, 4]) /* ty=Tensor[(8, 8, 4), float64] */;
  %450 = @func_7237(%449) /* ty=(Tensor[(8, 8, 4), bool], Tensor[(8, 8, 4), float64], Tensor[(8, 8, 4), float32], Tensor[(8, 8, 4), float64]) */;
  %451 = %450.1;
  (%447, %451)
}

def @func_9275() -> (Tensor[(8, 8, 4), float64], Tensor[(1260), float32], Tensor[(1155), int8], Tensor[(1260), float32], Tensor[(8, 8, 4), float64], Tensor[(8, 8, 4), float64]) {
  %452 = @func_6698() /* ty=(Tensor[(8, 8, 4), float64],) */;
  %453 = cast(meta[relay.Constant][17] /* ty=Tensor[(1155), int8] */, dtype="int8") /* ty=Tensor[(1155), int8] */;
  %454 = cast(meta[relay.Constant][18] /* ty=Tensor[(1260), float32] */, dtype="float32") /* ty=Tensor[(1260), float32] */;
  %455 = reshape(%453, newshape=[7, 11, 15]) /* ty=Tensor[(7, 11, 15), int8] */;
  %456 = reshape(%454, newshape=[1260]) /* ty=Tensor[(1260), float32] */;
  %457 = @func_4660(%455, %456) /* ty=(Tensor[(7, 11, 15), bool], Tensor[(14, 6, 15), float32], Tensor[(1260), float32]) */;
  %458 = @func_7504() /* ty=(Tensor[(8, 8, 4), float64],) */;
  %459 = %452.0;
  %460 = %457.2;
  %461 = %458.0;
  %462 = @func_8829() /* ty=Tensor[(8, 8, 4), float64] */;
  (%459, %460, meta[relay.Constant][17] /* ty=Tensor[(1155), int8] */, meta[relay.Constant][18] /* ty=Tensor[(1260), float32] */, %461, %462)
}

def @func_13419() -> (Tensor[(9, 12, 12), float32], Tensor[(256), float64]) {
  %463 = @func_6176() /* ty=(Tensor[(8, 8, 4), float64], Tensor[(6, 7, 14), float64], Tensor[(588), uint8], Tensor[(8, 8, 4), float64], Tensor[(9, 12, 12), float32], Tensor[(1296), float64]) */;
  %464 = %463.4;
  %465 = cast(%464, dtype="float32") /* ty=Tensor[(9, 12, 12), float32] */;
  %466 = @func_7364() /* ty=(Tensor[(8, 8, 4), int64], Tensor[(256), float64]) */;
  %467 = sqrt(%465) /* ty=Tensor[(9, 12, 12), float32] */;
  %468 = %466.1;
  (%467, %468)
}

def @func_14410() -> (Tensor[(8, 8, 4), float64],) {
  %469 = @func_9677() /* ty=(Tensor[(8, 8, 4), float64], Tensor[(8, 8, 4), float64]) */;
  %470 = %469.1;
  (%470,)
}

def @func_26496() -> Tensor[(8, 8, 4), float64] {
  @func_22878() /* ty=Tensor[(8, 8, 4), float64] */
}

def @func_24702() -> (Tensor[(1260), float32],) {
  %471 = @func_11342() /* ty=(Tensor[(8, 8, 4), float64], Tensor[(1260), float32]) */;
  %472 = %471.1;
  (%472,)
}

def @func_11387() -> (Tensor[(8, 8, 4), float64], Tensor[(8, 8, 4), float64]) {
  %473 = @func_8261() /* ty=(Tensor[(8, 8, 4), float64], Tensor[(8, 8, 4), int64], Tensor[(8, 8, 4), float64]) */;
  %474 = %473.2;
  %475 = @func_8298() /* ty=Tensor[(8, 8, 4), float64] */;
  (%474, %475)
}

def @func_19858(%var_19827: Tensor[(30), float32], %var_19828: Tensor[(1, 1155), int8]) -> (Tensor[(8, 8, 4), float64], Tensor[(8, 8, 4), float64], Tensor[(8, 8, 4), float64], Tensor[(8, 8, 4), float64], Tensor[(77, 15), int8], Tensor[(30), float32], Tensor[(1, 1155), int8], Tensor[(1260), float32], Tensor[(8, 8, 4), float64], Tensor[(588), uint8]) {
  %476 = @func_6698() /* ty=(Tensor[(8, 8, 4), float64],) */;
  %477 = cast(%var_19827, dtype="float32") /* ty=Tensor[(30), float32] */;
  %478 = cast(%var_19828, dtype="int8") /* ty=Tensor[(1, 1155), int8] */;
  %479 = cast(meta[relay.Constant][19] /* ty=Tensor[(1260), float32] */, dtype="float32") /* ty=Tensor[(1260), float32] */;
  %480 = reshape(%477, newshape=[30]) /* ty=Tensor[(30), float32] */;
  %481 = reshape(%478, newshape=[77, 15]) /* ty=Tensor[(77, 15), int8] */;
  %482 = reshape(%479, newshape=[1260]) /* ty=Tensor[(1260), float32] */;
  %483 = @func_11893(%480, %481, %482) /* ty=(Tensor[(8, 8, 4), float64], Tensor[(8, 8, 4), uint8], Tensor[(8, 8, 4), float64], Tensor[(8, 8, 4), float64], Tensor[(8, 8, 4), int64], Tensor[(14, 6, 15), float32], Tensor[(30), float32], Tensor[(77, 15), int8], Tensor[(1260), float32], Tensor[(8, 8, 4), float64]) */;
  %484 = cast(meta[relay.Constant][20] /* ty=Tensor[(588), uint8] */, dtype="uint8") /* ty=Tensor[(588), uint8] */;
  %485 = reshape(%484, newshape=[588]) /* ty=Tensor[(588), uint8] */;
  %486 = @func_7663(%485) /* ty=(Tensor[(8, 8, 4), float64], Tensor[(6, 7, 14), float64], Tensor[(588), uint8], Tensor[(8, 8, 4), float64]) */;
  %487 = @func_11627() /* ty=Tensor[(8, 8, 4), float64] */;
  %488 = @func_8829() /* ty=Tensor[(8, 8, 4), float64] */;
  %489 = @func_8298() /* ty=Tensor[(8, 8, 4), float64] */;
  %490 = %476.0;
  %491 = %483.7;
  %492 = %486.3;
  (%487, %488, %489, %490, %491, %var_19827, %var_19828, meta[relay.Constant][19] /* ty=Tensor[(1260), float32] */, %492, meta[relay.Constant][20] /* ty=Tensor[(588), uint8] */)
}

def @func_23167() -> (Tensor[(1296), float64], Tensor[(1296), float64], Tensor[(1260), float32], Tensor[(1296), float64], uint8) {
  %493 = @func_17303() /* ty=(Tensor[(8, 8, 4), float64], Tensor[(1296), float64]) */;
  %494 = @func_19933() /* ty=(Tensor[(1296), float64], Tensor[(8, 8, 4), float64], Tensor[(1296), float64]) */;
  %495 = @func_11342() /* ty=(Tensor[(8, 8, 4), float64], Tensor[(1260), float32]) */;
  %496 = @func_14720() /* ty=(Tensor[(8, 8, 4), float64], Tensor[(1296), float64], Tensor[(1296), bool], Tensor[(4, 5, 10), bool], Tensor[(200), bool], Tensor[(8, 8, 4), float64]) */;
  %497 = @func_15709() /* ty=(uint8,) */;
  %498 = %493.1;
  %499 = %494.0;
  %500 = %495.1;
  %501 = %496.1;
  %502 = %497.0;
  (%498, %499, %500, %501, %502)
}

def @func_22834() -> Tensor[(8, 8, 4), float64] {
  %503 = @func_19705() /* ty=(Tensor[(1296), float64], Tensor[(8, 8, 4), float64]) */;
  %503.1
}

def @func_11627() -> Tensor[(8, 8, 4), float64] {
  %504 = @func_7955() /* ty=(Tensor[(8, 8, 4), float64],) */;
  %504.0
}

def @func_21371(%var_21358: Tensor[(640), float64]) -> (Tensor[(8, 8, 4), int64], Tensor[(8, 8, 4), float64], Tensor[(14, 6, 15), float32], Tensor[(1440), uint16], Tensor[(24, 22), float32], Tensor[(640), float64], Tensor[(8, 8, 4), float64]) {
  %505 = @func_15472() /* ty=(Tensor[(8, 8, 4), float64], Tensor[(8, 8, 4), int64]) */;
  %506 = cast(meta[relay.Constant][21] /* ty=Tensor[(1440), uint16] */, dtype="uint16") /* ty=Tensor[(1440), uint16] */;
  %507 = cast(meta[relay.Constant][21] /* ty=Tensor[(1440), uint16] */, dtype="uint16") /* ty=Tensor[(1440), uint16] */;
  %508 = cast(meta[relay.Constant][22] /* ty=Tensor[(24, 22), float32] */, dtype="float32") /* ty=Tensor[(24, 22), float32] */;
  %509 = cast(%var_21358, dtype="float64") /* ty=Tensor[(640), float64] */;
  %510 = reshape(%506, newshape=[16, 15, 6]) /* ty=Tensor[(16, 15, 6), uint16] */;
  %511 = reshape(%507, newshape=[16, 15, 6]) /* ty=Tensor[(16, 15, 6), uint16] */;
  %512 = reshape(%508, newshape=[528]) /* ty=Tensor[(528), float32] */;
  %513 = reshape(%509, newshape=[640]) /* ty=Tensor[(640), float64] */;
  %514 = @func_3760(%510, %511, %512, %513) /* ty=(Tensor[(16, 15, 6), uint16], Tensor[(528), float32], uint8, Tensor[(16, 15, 6), bool], Tensor[(16, 8, 5), float64], Tensor[(640), float64], Tensor[(14, 6, 15), float32], Tensor[(9, 12, 12), float32], Tensor[(1296), float64], Tensor[(1260), bool], Tensor[(3, 11, 16), float32]) */;
  %515 = @func_10626() /* ty=(Tensor[(8, 8, 4), int64], Tensor[(8, 8, 4), float64]) */;
  %516 = %505.1;
  %517 = @func_16986() /* ty=Tensor[(8, 8, 4), float64] */;
  %518 = %514.6;
  %519 = %515.1;
  (%516, %517, %518, meta[relay.Constant][21] /* ty=Tensor[(1440), uint16] */, meta[relay.Constant][22] /* ty=Tensor[(24, 22), float32] */, %var_21358, %519)
}

def @func_17644() -> (Tensor[(8, 8, 4), float64],) {
  %520 = @func_9339() /* ty=(Tensor[(1296), float64], Tensor[(8, 8, 4), float64]) */;
  %521 = %520.1;
  (%521,)
}

def @func_15919() -> (Tensor[(1296), float64], Tensor[(8, 8, 4), float64], Tensor[(528), float32]) {
  %522 = @func_12332() /* ty=(Tensor[(120), float64], Tensor[(1296), float64]) */;
  %523 = cast(meta[relay.Constant][23] /* ty=Tensor[(528), float32] */, dtype="float32") /* ty=Tensor[(528), float32] */;
  %524 = %522.1;
  %525 = cast(%524, dtype="bool") /* ty=Tensor[(1296), bool] */;
  %526 = reshape(%523, newshape=[528]) /* ty=Tensor[(528), float32] */;
  %527 = reshape(%525, newshape=[1296]) /* ty=Tensor[(1296), bool] */;
  %528 = @func_12034(%526, %527) /* ty=(Tensor[(8, 8, 4), float64], Tensor[(8, 8, 4), float64], Tensor[(528), float32], Tensor[(1296), bool]) */;
  %529 = %528.1;
  (%524, %529, meta[relay.Constant][23] /* ty=Tensor[(528), float32] */)
}

def @func_27013(%var_26998: Tensor[(1296), float64]) -> (Tensor[(8, 8, 4), float64], Tensor[(9, 12, 12), float32], Tensor[(1296), float64], Tensor[(8, 8, 4), float64]) {
  %530 = @func_8261() /* ty=(Tensor[(8, 8, 4), float64], Tensor[(8, 8, 4), int64], Tensor[(8, 8, 4), float64]) */;
  %531 = cast(%var_26998, dtype="float64") /* ty=Tensor[(1296), float64] */;
  %532 = reshape(%531, newshape=[9, 12, 12]) /* ty=Tensor[(9, 12, 12), float64] */;
  %533 = @func_22753() /* ty=(Tensor[(8, 8, 4), float64],) */;
  %534 = %530.0;
  %535 = @func_2887(%532) /* ty=Tensor[(9, 12, 12), float32] */;
  %536 = %533.0;
  (%534, %535, %var_26998, %536)
}

def @func_7878() -> (Tensor[(8, 8, 4), float64], Tensor[(8, 8, 4), int64], Tensor[(256), float64]) {
  %537 = @func_7342() /* ty=Tensor[(8, 8, 4), float64] */;
  %538 = cast(%537, dtype="float64") /* ty=Tensor[(8, 8, 4), float64] */;
  %539 = reshape(%538, newshape=[8, 8, 4]) /* ty=Tensor[(8, 8, 4), float64] */;
  %540 = @func_7364() /* ty=(Tensor[(8, 8, 4), int64], Tensor[(256), float64]) */;
  %541 = @func_5643(%539) /* ty=Tensor[(8, 8, 4), int64] */;
  %542 = %540.1;
  (%537, %541, %542)
}

def @func_19384() -> (Tensor[(8, 8, 4), float64], Tensor[(528), float32], Tensor[(8, 8, 4), float64]) {
  %543 = @func_16149() /* ty=(Tensor[(8, 8, 4), float64], Tensor[(1260), float32]) */;
  %544 = @func_15919() /* ty=(Tensor[(1296), float64], Tensor[(8, 8, 4), float64], Tensor[(528), float32]) */;
  %545 = @func_16635() /* ty=(uint8, Tensor[(8, 8, 4), float64], Tensor[(8, 8, 4), float64]) */;
  %546 = %543.0;
  %547 = %544.2;
  %548 = %545.2;
  (%546, %547, %548)
}

def @func_23502() -> (Tensor[(120), float64], Tensor[(8, 8, 4), float64]) {
  %549 = @func_21565() /* ty=Tensor[(120), float64] */;
  %550 = @func_8501() /* ty=Tensor[(8, 8, 4), float64] */;
  (%549, %550)
}

def @func_7955() -> (Tensor[(8, 8, 4), float64],) {
  %551 = @func_7292() /* ty=(Tensor[(8, 8, 4), float64],) */;
  %552 = %551.0;
  (%552,)
}

def @func_15479() -> (Tensor[(8, 8, 4), float64],) {
  %553 = @func_6982() /* ty=(Tensor[(8, 8, 4), float64], Tensor[(8, 8, 4), float64]) */;
  %554 = %553.0;
  (%554,)
}

def @func_8501() -> Tensor[(8, 8, 4), float64] {
  @func_7342() /* ty=Tensor[(8, 8, 4), float64] */
}

def @func_7364() -> (Tensor[(8, 8, 4), int64], Tensor[(256), float64]) {
  %555 = @func_6366() /* ty=(Tensor[(1296), bool], Tensor[(8, 8, 4), int64], Tensor[(256), float64]) */;
  %556 = @func_6366() /* ty=(Tensor[(1296), bool], Tensor[(8, 8, 4), int64], Tensor[(256), float64]) */;
  %557 = %555.1;
  %558 = %556.2;
  (%557, %558)
}

def @func_18129(%var_18119: uint8) -> (Tensor[(8, 8, 4), float64], Tensor[(8, 8, 4), float64], Tensor[(14, 6, 15), float32], Tensor[(528), float32], uint8, Tensor[(8, 8, 4), int64]) {
  %559 = @func_13789() /* ty=(Tensor[(8, 8, 4), float64], Tensor[(8, 8, 4), float64]) */;
  %560 = @func_11342() /* ty=(Tensor[(8, 8, 4), float64], Tensor[(1260), float32]) */;
  %561 = cast(meta[relay.Constant][24] /* ty=Tensor[(528), float32] */, dtype="float32") /* ty=Tensor[(528), float32] */;
  %562 = cast(%var_18119, dtype="uint8") /* ty=uint8 */;
  %563 = reshape(%561, newshape=[3, 11, 16]) /* ty=Tensor[(3, 11, 16), float32] */;
  %564 = reshape(%562, newshape=[]) /* ty=uint8 */;
  %565 = @func_2471(%563, %564) /* ty=(Tensor[(3, 11, 16), float32], Tensor[(14, 6, 15), float32], Tensor[(1260), float32], Tensor[(1260), float32], uint8, Tensor[(75), uint8], Tensor[(14, 6, 15), float32]) */;
  %566 = @func_15472() /* ty=(Tensor[(8, 8, 4), float64], Tensor[(8, 8, 4), int64]) */;
  %567 = %559.0;
  %568 = %560.0;
  %569 = %565.6;
  %570 = %566.1;
  (%567, %568, %569, meta[relay.Constant][24] /* ty=Tensor[(528), float32] */, %var_18119, %570)
}

def @func_8809() -> (Tensor[(1296), bool],) {
  %571 = @func_8448() /* ty=(Tensor[(1296), bool], Tensor[(1296), bool]) */;
  %572 = %571.1;
  (%572,)
}

def @func_9237() -> (Tensor[(8, 8, 4), float64], Tensor[(1296), float64], Tensor[(1260), bool], Tensor[(528), float32]) {
  %573 = @func_7595() /* ty=(Tensor[(1296), float64], Tensor[(8, 8, 4), float64], Tensor[(8, 8, 4), uint8]) */;
  %574 = cast(meta[relay.Constant][25] /* ty=Tensor[(528), float32] */, dtype="float32") /* ty=Tensor[(528), float32] */;
  %575 = reshape(%574, newshape=[528, 1]) /* ty=Tensor[(528, 1), float32] */;
  %576 = @func_7484(%575) /* ty=(Tensor[(8, 8, 4), float64], Tensor[(1260), bool], Tensor[(1440), uint16], Tensor[(528, 1), float32], Tensor[(640), float64], Tensor[(14, 6, 15), float32]) */;
  %577 = @func_6042() /* ty=Tensor[(8, 8, 4), float64] */;
  %578 = %573.0;
  %579 = %576.1;
  (%577, %578, %579, meta[relay.Constant][25] /* ty=Tensor[(528), float32] */)
}

def @func_8298() -> Tensor[(8, 8, 4), float64] {
  %580 = @func_6001() /* ty=(Tensor[(8, 8, 4), float64],) */;
  %580.0
}

def @func_11696(%var_11632: Tensor[(2, 14, 11), uint64], %var_11633: Tensor[(2, 14, 11), uint64]) -> (Tensor[(2, 14, 11), uint64], Tensor[(8, 8, 4), float64], Tensor[(2, 14, 11), float32]) {
  %581 = cast(%var_11633, dtype="uint64") /* ty=Tensor[(2, 14, 11), uint64] */;
  %582 = shape_of(%var_11632, dtype="int32") /* ty=Tensor[(3), int32] */;
  %583 = cast(%var_11632, dtype="uint64") /* ty=Tensor[(2, 14, 11), uint64] */;
  %584 = dyn.reshape(%581, %582, newshape=[]) /* ty=Tensor[(?, ?, ?), uint64] */;
  %585 = cast(%var_11633, dtype="float32") /* ty=Tensor[(2, 14, 11), float32] */;
  %586 = bitwise_or(%583, %584) /* ty=Tensor[(2, 14, 11), uint64] */;
  %587 = @func_7342() /* ty=Tensor[(8, 8, 4), float64] */;
  %588 = asinh(%585) /* ty=Tensor[(2, 14, 11), float32] */;
  (%586, %587, %588)
}

def @func_6257() -> (Tensor[(1296), float64],) {
  %589 = @func_6176() /* ty=(Tensor[(8, 8, 4), float64], Tensor[(6, 7, 14), float64], Tensor[(588), uint8], Tensor[(8, 8, 4), float64], Tensor[(9, 12, 12), float32], Tensor[(1296), float64]) */;
  %590 = %589.5;
  (%590,)
}

def @func_22053() -> (Tensor[(1296), bool], Tensor[(256), float64]) {
  %591 = @func_16012() /* ty=(Tensor[(1296), bool], Tensor[(8, 8, 4), float64]) */;
  %592 = @func_19404() /* ty=(uint8, Tensor[(256), float64], Tensor[(8, 8, 4), float64], Tensor[(256), float64]) */;
  %593 = %591.0;
  %594 = %592.3;
  (%593, %594)
}

def @func_3760(%var_3626: Tensor[(16, 15, 6), uint16], %var_3630: Tensor[(16, 15, 6), uint16], %var_3648: Tensor[(528), float32], %var_3688: Tensor[(640), float64]) -> (Tensor[(16, 15, 6), uint16], Tensor[(528), float32], uint8, Tensor[(16, 15, 6), bool], Tensor[(16, 8, 5), float64], Tensor[(640), float64], Tensor[(14, 6, 15), float32], Tensor[(9, 12, 12), float32], Tensor[(1296), float64], Tensor[(1260), bool], Tensor[(3, 11, 16), float32]) {
  %595 = cast(%var_3626, dtype="uint16") /* ty=Tensor[(16, 15, 6), uint16] */;
  %596 = shape_of(meta[relay.Constant][26] /* ty=Tensor[(16, 15, 6), uint16] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %597 = cast(meta[relay.Constant][26] /* ty=Tensor[(16, 15, 6), uint16] */, dtype="uint16") /* ty=Tensor[(16, 15, 6), uint16] */;
  %598 = dyn.reshape(%595, %596, newshape=[]) /* ty=Tensor[(?, ?, ?), uint16] */;
  %599 = cast(%var_3630, dtype="uint32") /* ty=Tensor[(16, 15, 6), uint32] */;
  %600 = shape_of(%var_3626, dtype="int32") /* ty=Tensor[(3), int32] */;
  %601 = cast(%var_3626, dtype="uint32") /* ty=Tensor[(16, 15, 6), uint32] */;
  %602 = dyn.reshape(%599, %600, newshape=[]) /* ty=Tensor[(?, ?, ?), uint32] */;
  %603 = subtract(%601, %602) /* ty=Tensor[(16, 15, 6), uint32] */;
  %604 = cast(meta[relay.Constant][26] /* ty=Tensor[(16, 15, 6), uint16] */, dtype="bool") /* ty=Tensor[(16, 15, 6), bool] */;
  %605 = shape_of(%603, dtype="int32") /* ty=Tensor[(3), int32] */;
  %606 = cast(%603, dtype="bool") /* ty=Tensor[(16, 15, 6), bool] */;
  %607 = dyn.reshape(%604, %605, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %608 = cast(%var_3688, dtype="float64") /* ty=Tensor[(640), float64] */;
  %609 = reshape(%608, newshape=[16, 8, 5]) /* ty=Tensor[(16, 8, 5), float64] */;
  %610 = @func_2187(%609) /* ty=(Tensor[(16, 8, 5), float64],) */;
  %611 = cast(%var_3648, dtype="float32") /* ty=Tensor[(528), float32] */;
  %612 = cast(meta[relay.Constant][27] /* ty=uint8 */, dtype="uint8") /* ty=uint8 */;
  %613 = reshape(%611, newshape=[3, 11, 16]) /* ty=Tensor[(3, 11, 16), float32] */;
  %614 = reshape(%612, newshape=[]) /* ty=uint8 */;
  %615 = @func_2471(%613, %614) /* ty=(Tensor[(3, 11, 16), float32], Tensor[(14, 6, 15), float32], Tensor[(1260), float32], Tensor[(1260), float32], uint8, Tensor[(75), uint8], Tensor[(14, 6, 15), float32]) */;
  %616 = %615.2;
  %617 = cast(%616, dtype="float32") /* ty=Tensor[(1260), float32] */;
  %618 = reshape(%617, newshape=[14, 6, 15]) /* ty=Tensor[(14, 6, 15), float32] */;
  %619 = @func_963(%618) /* ty=(Tensor[(14, 6, 15), float32],) */;
  %620 = cast(meta[relay.Constant][28] /* ty=Tensor[(1296), float64] */, dtype="float64") /* ty=Tensor[(1296), float64] */;
  %621 = reshape(%620, newshape=[9, 12, 12]) /* ty=Tensor[(9, 12, 12), float64] */;
  %622 = cast(%616, dtype="float64") /* ty=Tensor[(1260), float64] */;
  %623 = tan(%622) /* ty=Tensor[(1260), float64] */;
  %624 = cast(%616, dtype="bool") /* ty=Tensor[(1260), bool] */;
  %625 = shape_of(%623, dtype="int32") /* ty=Tensor[(1), int32] */;
  %626 = cast(%623, dtype="bool") /* ty=Tensor[(1260), bool] */;
  %627 = dyn.reshape(%624, %625, newshape=[]) /* ty=Tensor[(?), bool] */;
  %628 = cast(%var_3648, dtype="float32") /* ty=Tensor[(528), float32] */;
  %629 = cast(meta[relay.Constant][27] /* ty=uint8 */, dtype="uint8") /* ty=uint8 */;
  %630 = reshape(%628, newshape=[3, 11, 16]) /* ty=Tensor[(3, 11, 16), float32] */;
  %631 = reshape(%629, newshape=[]) /* ty=uint8 */;
  %632 = @func_2471(%630, %631) /* ty=(Tensor[(3, 11, 16), float32], Tensor[(14, 6, 15), float32], Tensor[(1260), float32], Tensor[(1260), float32], uint8, Tensor[(75), uint8], Tensor[(14, 6, 15), float32]) */;
  %633 = maximum(%597, %598) /* ty=Tensor[(16, 15, 6), uint16] */;
  %634 = greater_equal(%606, %607) /* ty=Tensor[(16, 15, 6), bool] */;
  %635 = %610.0;
  %636 = %619.0;
  %637 = @func_2887(%621) /* ty=Tensor[(9, 12, 12), float32] */;
  %638 = less(%626, %627) /* ty=Tensor[(1260), bool] */;
  %639 = %632.0;
  (%633, %var_3648, meta[relay.Constant][27] /* ty=uint8 */, %634, %635, %var_3688, %636, %637, meta[relay.Constant][28] /* ty=Tensor[(1296), float64] */, %638, %639)
}

def @func_11144() -> (Tensor[(120), float64], Tensor[(8, 8, 4), float64]) {
  %640 = @func_10245() /* ty=(Tensor[(120), float64],) */;
  %641 = @func_8352() /* ty=(Tensor[(8, 8, 4), float64], Tensor[(1296), bool]) */;
  %642 = %640.0;
  %643 = %641.0;
  (%642, %643)
}

def @func_6575(%var_6569: Tensor[(1296), float64]) -> (Tensor[(8, 8, 4), float64], Tensor[(9, 12, 12), float32], Tensor[(1296), float64], Tensor[(6, 7, 14), float64], Tensor[(14, 42), uint8]) {
  %644 = cast(%var_6569, dtype="float64") /* ty=Tensor[(1296), float64] */;
  %645 = reshape(%644, newshape=[9, 12, 12]) /* ty=Tensor[(9, 12, 12), float64] */;
  %646 = cast(meta[relay.Constant][29] /* ty=Tensor[(14, 42), uint8] */, dtype="uint8") /* ty=Tensor[(14, 42), uint8] */;
  %647 = reshape(%646, newshape=[6, 7, 14]) /* ty=Tensor[(6, 7, 14), uint8] */;
  %648 = @func_4543(%647) /* ty=(Tensor[(6, 7, 14), float64],) */;
  %649 = @func_5688() /* ty=Tensor[(8, 8, 4), float64] */;
  %650 = @func_2887(%645) /* ty=Tensor[(9, 12, 12), float32] */;
  %651 = %648.0;
  (%649, %650, %var_6569, %651, meta[relay.Constant][29] /* ty=Tensor[(14, 42), uint8] */)
}

def @func_16212() -> (Tensor[(1296), float64], Tensor[(1296), float64], Tensor[(4, 4, 11), uint8]) {
  %652 = @func_9094() /* ty=(Tensor[(1296), float64],) */;
  %653 = cast(meta[relay.Constant][30] /* ty=Tensor[(4, 4, 11), float64] */, dtype="float64") /* ty=Tensor[(4, 4, 11), float64] */;
  %654 = sinh(%653) /* ty=Tensor[(4, 4, 11), float64] */;
  %655 = cast(meta[relay.Constant][30] /* ty=Tensor[(4, 4, 11), float64] */, dtype="uint8") /* ty=Tensor[(4, 4, 11), uint8] */;
  %656 = shape_of(%654, dtype="int32") /* ty=Tensor[(3), int32] */;
  %657 = cast(%654, dtype="uint8") /* ty=Tensor[(4, 4, 11), uint8] */;
  %658 = dyn.reshape(%655, %656, newshape=[]) /* ty=Tensor[(?, ?, ?), uint8] */;
  %659 = @func_6295() /* ty=Tensor[(1296), float64] */;
  %660 = %652.0;
  %661 = logical_xor(%657, %658) /* ty=Tensor[(4, 4, 11), uint8] */;
  (%659, %660, %661)
}

def @func_5468() -> (Tensor[(8, 8, 4), float64],) {
  %662 = cast(meta[relay.Constant][31] /* ty=Tensor[(8, 8, 4), float64] */, dtype="float64") /* ty=Tensor[(8, 8, 4), float64] */;
  %663 = log10(%662) /* ty=Tensor[(8, 8, 4), float64] */;
  (%663,)
}

def @func_26072() -> (uint8, Tensor[(8, 8, 4), float64], Tensor[(8, 8, 4), float64]) {
  %664 = @func_12529() /* ty=(uint8,) */;
  %665 = @func_15193() /* ty=(Tensor[(8, 8, 4), float64],) */;
  %666 = @func_23174() /* ty=(Tensor[(8, 8, 4), float64],) */;
  %667 = %664.0;
  %668 = %665.0;
  %669 = %666.0;
  (%667, %668, %669)
}

def @func_26984(%var_26972: Tensor[(5, 5, 1), uint8]) -> (Tensor[(5, 5, 1), bool],) {
  %670 = cast(meta[relay.Constant][32] /* ty=uint8 */, dtype="bool") /* ty=bool */;
  %671 = cast(%var_26972, dtype="bool") /* ty=Tensor[(5, 5, 1), bool] */;
  %672 = less_equal(%670, %671) /* ty=Tensor[(5, 5, 1), bool] */;
  (%672,)
}

def @func_18459(%var_18442: Tensor[(528), float32]) -> (Tensor[(8, 8, 4), float64], uint8, Tensor[(3, 11, 16), uint16], Tensor[(1296), float64]) {
  %673 = @func_10481() /* ty=(Tensor[(8, 8, 4), float64], Tensor[(8, 8, 4), int64]) */;
  %674 = cast(%var_18442, dtype="float32") /* ty=Tensor[(528), float32] */;
  %675 = cast(meta[relay.Constant][33] /* ty=uint8 */, dtype="uint8") /* ty=uint8 */;
  %676 = reshape(%674, newshape=[3, 11, 16]) /* ty=Tensor[(3, 11, 16), float32] */;
  %677 = reshape(%675, newshape=[]) /* ty=uint8 */;
  %678 = @func_2471(%676, %677) /* ty=(Tensor[(3, 11, 16), float32], Tensor[(14, 6, 15), float32], Tensor[(1260), float32], Tensor[(1260), float32], uint8, Tensor[(75), uint8], Tensor[(14, 6, 15), float32]) */;
  %679 = %678.0;
  %680 = cast(%var_18442, dtype="uint16") /* ty=Tensor[(528), uint16] */;
  %681 = shape_of(%679, dtype="int32") /* ty=Tensor[(3), int32] */;
  %682 = cast(%679, dtype="uint16") /* ty=Tensor[(3, 11, 16), uint16] */;
  %683 = dyn.reshape(%680, %681, newshape=[]) /* ty=Tensor[(?, ?, ?), uint16] */;
  %684 = @func_15919() /* ty=(Tensor[(1296), float64], Tensor[(8, 8, 4), float64], Tensor[(528), float32]) */;
  %685 = %673.0;
  %686 = right_shift(%682, %683) /* ty=Tensor[(3, 11, 16), uint16] */;
  %687 = %684.0;
  (%685, meta[relay.Constant][33] /* ty=uint8 */, %686, %687)
}

def @func_8420() -> uint8 {
  %688 = @func_6905() /* ty=(Tensor[(8, 8, 4), float64], uint8, Tensor[(528), float32], uint8, Tensor[(8, 8, 4), float64]) */;
  %688.1
}

def @func_20988() -> (Tensor[(1296), float64], Tensor[(1296), bool], uint8) {
  %689 = @func_16355() /* ty=(uint8, Tensor[(8, 8, 4), float64], Tensor[(1296), bool], Tensor[(14, 2, 15), int64], Tensor[(5, 6), int64], Tensor[(5, 84), int64]) */;
  %690 = @func_17451() /* ty=(Tensor[(8, 8, 4), float64], uint8, Tensor[(24, 22), float32]) */;
  %691 = @func_16917() /* ty=Tensor[(1296), float64] */;
  %692 = %689.2;
  %693 = %690.1;
  (%691, %692, %693)
}

def @func_8959(%var_8943: Tensor[(120), float64]) -> (Tensor[(528), float32], Tensor[(2, 5, 12), bool], Tensor[(120), float64], Tensor[(2, 5, 12), bool]) {
  %694 = @func_6905() /* ty=(Tensor[(8, 8, 4), float64], uint8, Tensor[(528), float32], uint8, Tensor[(8, 8, 4), float64]) */;
  %695 = cast(%var_8943, dtype="float64") /* ty=Tensor[(120), float64] */;
  %696 = cast(%var_8943, dtype="float64") /* ty=Tensor[(120), float64] */;
  %697 = reshape(%695, newshape=[2, 5, 12]) /* ty=Tensor[(2, 5, 12), float64] */;
  %698 = reshape(%696, newshape=[2, 5, 12]) /* ty=Tensor[(2, 5, 12), float64] */;
  %699 = @func_8852(%697, %698) /* ty=(Tensor[(2, 5, 12), bool],) */;
  %700 = cast(%var_8943, dtype="float64") /* ty=Tensor[(120), float64] */;
  %701 = %699.0;
  %702 = cast(%701, dtype="float64") /* ty=Tensor[(2, 5, 12), float64] */;
  %703 = reshape(%700, newshape=[2, 5, 12]) /* ty=Tensor[(2, 5, 12), float64] */;
  %704 = reshape(%702, newshape=[2, 5, 12]) /* ty=Tensor[(2, 5, 12), float64] */;
  %705 = @func_8852(%703, %704) /* ty=(Tensor[(2, 5, 12), bool],) */;
  %706 = %694.2;
  %707 = %705.0;
  (%706, %701, %var_8943, %707)
}

def @func_10009() -> Tensor[(120), float64] {
  @func_9618() /* ty=Tensor[(120), float64] */
}

def @func_9953() -> (uint8,) {
  %708 = @func_8420() /* ty=uint8 */;
  (%708,)
}

def @func_15047(%var_15020: Tensor[(1260), float64]) -> (Tensor[(8, 8, 4), float64], Tensor[(1296), float64], Tensor[(12, 15, 7), float64], Tensor[(1260), float64], Tensor[(1296), float64], Tensor[(8, 8, 4), float64], Tensor[(8, 8, 4), float64]) {
  %709 = @func_10378() /* ty=(Tensor[(8, 8, 4), int64], Tensor[(8, 8, 4), float64], Tensor[(9, 12, 12), float32], Tensor[(1296), float64], Tensor[(16, 8, 5), float64]) */;
  %710 = cast(%var_15020, dtype="float64") /* ty=Tensor[(1260), float64] */;
  %711 = cast(%var_15020, dtype="float64") /* ty=Tensor[(1260), float64] */;
  %712 = reshape(%710, newshape=[12, 15, 7]) /* ty=Tensor[(12, 15, 7), float64] */;
  %713 = reshape(%711, newshape=[12, 15, 7]) /* ty=Tensor[(12, 15, 7), float64] */;
  %714 = @func_9237() /* ty=(Tensor[(8, 8, 4), float64], Tensor[(1296), float64], Tensor[(1260), bool], Tensor[(528), float32]) */;
  %715 = @func_13842() /* ty=(Tensor[(8, 8, 4), float64],) */;
  %716 = @func_6452() /* ty=Tensor[(8, 8, 4), float64] */;
  %717 = %709.3;
  %718 = @func_7075(%712, %713) /* ty=Tensor[(12, 15, 7), float64] */;
  %719 = @func_14772() /* ty=Tensor[(1296), float64] */;
  %720 = %714.0;
  %721 = %715.0;
  (%716, %717, %718, %var_15020, %719, %720, %721)
}

def @func_7342() -> Tensor[(8, 8, 4), float64] {
  %722 = @func_6698() /* ty=(Tensor[(8, 8, 4), float64],) */;
  %722.0
}

def @func_13328() -> Tensor[(1296), float64] {
  %723 = @func_6490() /* ty=(Tensor[(1296), float64],) */;
  %724 = %723.0;
  %725 = cast(%724, dtype="float64") /* ty=Tensor[(1296), float64] */;
  acos(%725) /* ty=Tensor[(1296), float64] */
}

def @func_15340() -> Tensor[(8, 8, 4), float64] {
  %726 = @func_9397() /* ty=(Tensor[(8, 8, 4), float64], Tensor[(16, 8, 5), float64], Tensor[(936, 1), uint8]) */;
  %726.0
}

def @func_12454(%var_12450: Tensor[(4, 6, 1), float64]) -> (Tensor[(4, 6, 1), float64],) {
  %727 = cast(4.36096f64 /* ty=float64 */, dtype="float64") /* ty=float64 */;
  %728 = cast(%var_12450, dtype="float64") /* ty=Tensor[(4, 6, 1), float64] */;
  %729 = floor_divide(%727, %728) /* ty=Tensor[(4, 6, 1), float64] */;
  (%729,)
}

def @func_16917() -> Tensor[(1296), float64] {
  %730 = @func_6295() /* ty=Tensor[(1296), float64] */;
  %731 = cast(%730, dtype="float64") /* ty=Tensor[(1296), float64] */;
  log(%731) /* ty=Tensor[(1296), float64] */
}

def @func_24759() -> (Tensor[(8, 8, 4), float64], Tensor[(2, 5, 12), bool], Tensor[(1296), bool], uint8, Tensor[(8, 8, 4), float64], Tensor[(120), float64]) {
  %732 = @func_12185() /* ty=(Tensor[(8, 8, 4), float64],) */;
  %733 = @func_9111() /* ty=(Tensor[(4, 7, 5), float32], Tensor[(2, 5, 12), bool], Tensor[(120), float64]) */;
  %734 = @func_22053() /* ty=(Tensor[(1296), bool], Tensor[(256), float64]) */;
  %735 = @func_12529() /* ty=(uint8,) */;
  %736 = @func_7504() /* ty=(Tensor[(8, 8, 4), float64],) */;
  %737 = @func_12396() /* ty=(Tensor[(120), float64], Tensor[(8, 8, 4), int64]) */;
  %738 = %732.0;
  %739 = %733.1;
  %740 = %734.0;
  %741 = %735.0;
  %742 = %736.0;
  %743 = %737.0;
  (%738, %739, %740, %741, %742, %743)
}

def @func_21923() -> (Tensor[(8, 8, 4), float64], Tensor[(8, 8, 4), int32], Tensor[(1296), float64]) {
  %744 = @func_9339() /* ty=(Tensor[(1296), float64], Tensor[(8, 8, 4), float64]) */;
  %745 = @func_20165() /* ty=Tensor[(8, 8, 4), float64] */;
  %746 = @func_21157() /* ty=Tensor[(8, 8, 4), int32] */;
  %747 = %744.0;
  (%745, %746, %747)
}

def @func_26503() -> (Tensor[(8, 8, 4), float64],) {
  %748 = @func_22241() /* ty=(Tensor[(8, 8, 4), float64],) */;
  %749 = %748.0;
  (%749,)
}

def @func_12780(%var_12761: Tensor[(7, 4, 6), int8]) -> (Tensor[(7, 4, 6), int8], Tensor[(14, 6, 15), float32], Tensor[(1155), int8], Tensor[(1260), float32]) {
  %750 = cast(%var_12761, dtype="int8") /* ty=Tensor[(7, 4, 6), int8] */;
  %751 = shape_of(meta[relay.Constant][34] /* ty=Tensor[(7, 4, 6), int8] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %752 = cast(meta[relay.Constant][34] /* ty=Tensor[(7, 4, 6), int8] */, dtype="int8") /* ty=Tensor[(7, 4, 6), int8] */;
  %753 = dyn.reshape(%750, %751, newshape=[]) /* ty=Tensor[(?, ?, ?), int8] */;
  %754 = cast(meta[relay.Constant][35] /* ty=Tensor[(1155), int8] */, dtype="int8") /* ty=Tensor[(1155), int8] */;
  %755 = cast(meta[relay.Constant][36] /* ty=Tensor[(1260), float32] */, dtype="float32") /* ty=Tensor[(1260), float32] */;
  %756 = reshape(%754, newshape=[7, 11, 15]) /* ty=Tensor[(7, 11, 15), int8] */;
  %757 = reshape(%755, newshape=[1260]) /* ty=Tensor[(1260), float32] */;
  %758 = @func_4660(%756, %757) /* ty=(Tensor[(7, 11, 15), bool], Tensor[(14, 6, 15), float32], Tensor[(1260), float32]) */;
  %759 = multiply(%752, %753) /* ty=Tensor[(7, 4, 6), int8] */;
  %760 = %758.1;
  (%759, %760, meta[relay.Constant][35] /* ty=Tensor[(1155), int8] */, meta[relay.Constant][36] /* ty=Tensor[(1260), float32] */)
}

def @func_8571() -> Tensor[(1296), float64] {
  %761 = @func_6257() /* ty=(Tensor[(1296), float64],) */;
  %761.0
}

def @func_16469() -> (Tensor[(1296), bool],) {
  %762 = @func_11429() /* ty=(Tensor[(1296), bool],) */;
  %763 = %762.0;
  (%763,)
}

def @func_7399() -> Tensor[(8, 8, 4), float64] {
  @func_6042() /* ty=Tensor[(8, 8, 4), float64] */
}

def @func_17451() -> (Tensor[(8, 8, 4), float64], uint8, Tensor[(24, 22), float32]) {
  %764 = @func_15986() /* ty=(Tensor[(8, 8, 4), float64],) */;
  %765 = cast(meta[relay.Constant][37] /* ty=Tensor[(24, 22), float32] */, dtype="float32") /* ty=Tensor[(24, 22), float32] */;
  %766 = reshape(%765, newshape=[264, 2]) /* ty=Tensor[(264, 2), float32] */;
  %767 = @func_6610(%766) /* ty=(Tensor[(8, 8, 4), float64], Tensor[(3, 11, 16), float32], Tensor[(264, 2), float32], uint8) */;
  %768 = %764.0;
  %769 = %767.3;
  (%768, %769, meta[relay.Constant][37] /* ty=Tensor[(24, 22), float32] */)
}

def @func_12946() -> (Tensor[(1296), bool], Tensor[(8, 8, 4), float64]) {
  %770 = @func_8352() /* ty=(Tensor[(8, 8, 4), float64], Tensor[(1296), bool]) */;
  %771 = %770.1;
  %772 = @func_8298() /* ty=Tensor[(8, 8, 4), float64] */;
  (%771, %772)
}

def @func_25498(%var_25482: Tensor[(12, 5, 14), float64]) -> (uint8, Tensor[(12, 5, 14), bool]) {
  %773 = cast(%var_25482, dtype="float64") /* ty=Tensor[(12, 5, 14), float64] */;
  %774 = rsqrt(%773) /* ty=Tensor[(12, 5, 14), float64] */;
  %775 = cast(%var_25482, dtype="bool") /* ty=Tensor[(12, 5, 14), bool] */;
  %776 = shape_of(%774, dtype="int32") /* ty=Tensor[(3), int32] */;
  %777 = cast(%774, dtype="bool") /* ty=Tensor[(12, 5, 14), bool] */;
  %778 = dyn.reshape(%775, %776, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %779 = @func_21213() /* ty=uint8 */;
  %780 = logical_and(%777, %778) /* ty=Tensor[(12, 5, 14), bool] */;
  (%779, %780)
}

def @func_24057() -> Tensor[(1296), bool] {
  %781 = @func_21509() /* ty=(Tensor[(8, 8, 4), float64], Tensor[(256), float64], Tensor[(1296), bool]) */;
  %781.2
}

def @func_9705() -> Tensor[(8, 8, 4), float64] {
  %782 = @func_8261() /* ty=(Tensor[(8, 8, 4), float64], Tensor[(8, 8, 4), int64], Tensor[(8, 8, 4), float64]) */;
  %782.0
}

def @func_22618() -> Tensor[(8, 8, 4), float64] {
  %783 = @func_21753() /* ty=(Tensor[(8, 8, 4), float64],) */;
  %783.0
}

def @func_26273() -> (Tensor[(120), float64], Tensor[(8, 8, 4), float64], Tensor[(256), float64]) {
  %784 = @func_11144() /* ty=(Tensor[(120), float64], Tensor[(8, 8, 4), float64]) */;
  %785 = @func_6905() /* ty=(Tensor[(8, 8, 4), float64], uint8, Tensor[(528), float32], uint8, Tensor[(8, 8, 4), float64]) */;
  %786 = @func_19205() /* ty=(Tensor[(256), float64], Tensor[(8, 8, 4), float64]) */;
  %787 = %784.0;
  %788 = %785.4;
  %789 = %786.0;
  (%787, %788, %789)
}

def @func_26946() -> Tensor[(8, 8, 4), float64] {
  %790 = @func_22241() /* ty=(Tensor[(8, 8, 4), float64],) */;
  %790.0
}

def @func_9618() -> Tensor[(120), float64] {
  %791 = @func_9111() /* ty=(Tensor[(4, 7, 5), float32], Tensor[(2, 5, 12), bool], Tensor[(120), float64]) */;
  %791.2
}

def @func_20784(%var_20736: Tensor[(16, 5, 12), float64], %var_20737: Tensor[(16, 5, 12), float64]) -> (Tensor[(16, 5, 12), float64], Tensor[(8, 8, 4), float64], Tensor[(16, 8, 5), float64], Tensor[(16, 5, 12), float32], Tensor[(8, 8, 4), float64], Tensor[(8, 8, 4), float64]) {
  %792 = cast(%var_20737, dtype="float64") /* ty=Tensor[(16, 5, 12), float64] */;
  %793 = shape_of(%var_20736, dtype="int32") /* ty=Tensor[(3), int32] */;
  %794 = cast(%var_20736, dtype="float64") /* ty=Tensor[(16, 5, 12), float64] */;
  %795 = dyn.reshape(%792, %793, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %796 = @func_15479() /* ty=(Tensor[(8, 8, 4), float64],) */;
  %797 = @func_11192() /* ty=(Tensor[(16, 8, 5), float64],) */;
  %798 = cast(%var_20736, dtype="float32") /* ty=Tensor[(16, 5, 12), float32] */;
  %799 = shape_of(%var_20737, dtype="int32") /* ty=Tensor[(3), int32] */;
  %800 = cast(%var_20737, dtype="float32") /* ty=Tensor[(16, 5, 12), float32] */;
  %801 = dyn.reshape(%798, %799, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %802 = floor_divide(%800, %801) /* ty=Tensor[(16, 5, 12), float32] */;
  %803 = cast(%802, dtype="float32") /* ty=Tensor[(16, 5, 12), float32] */;
  %804 = floor_mod(%794, %795) /* ty=Tensor[(16, 5, 12), float64] */;
  %805 = %796.0;
  %806 = %797.0;
  %807 = asinh(%803) /* ty=Tensor[(16, 5, 12), float32] */;
  %808 = @func_20165() /* ty=Tensor[(8, 8, 4), float64] */;
  %809 = @func_6452() /* ty=Tensor[(8, 8, 4), float64] */;
  (%804, %805, %806, %807, %808, %809)
}

def @func_18322() -> (Tensor[(256), float64],) {
  %810 = @func_13110() /* ty=(Tensor[(8, 8, 4), int64], Tensor[(256), float64], Tensor[(1296), float64], Tensor[(8, 8, 4), float64]) */;
  %811 = %810.1;
  (%811,)
}

def @func_6490() -> (Tensor[(1296), float64],) {
  %812 = @func_6295() /* ty=Tensor[(1296), float64] */;
  (%812,)
}

def @func_7803(%var_7783: float32, %var_7784: Tensor[(9, 4, 12), float32], %var_7798: Tensor[(9, 4, 12), float32]) -> (Tensor[(9, 4, 12), bool],) {
  %813 = cast(%var_7783, dtype="float32") /* ty=float32 */;
  %814 = cast(%var_7784, dtype="float32") /* ty=Tensor[(9, 4, 12), float32] */;
  %815 = divide(%813, %814) /* ty=Tensor[(9, 4, 12), float32] */;
  %816 = cast(%var_7798, dtype="bool") /* ty=Tensor[(9, 4, 12), bool] */;
  %817 = shape_of(%815, dtype="int32") /* ty=Tensor[(3), int32] */;
  %818 = cast(%815, dtype="bool") /* ty=Tensor[(9, 4, 12), bool] */;
  %819 = dyn.reshape(%816, %817, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %820 = logical_or(%818, %819) /* ty=Tensor[(9, 4, 12), bool] */;
  (%820,)
}

def @func_14126() -> (Tensor[(256), float64],) {
  %821 = @func_6366() /* ty=(Tensor[(1296), bool], Tensor[(8, 8, 4), int64], Tensor[(256), float64]) */;
  %822 = %821.2;
  (%822,)
}

def @func_16702() -> (Tensor[(8, 8, 4), float64],) {
  %823 = @func_15578() /* ty=(Tensor[(8, 8, 4), float64], Tensor[(8, 8, 4), float64], Tensor[(8, 8, 4), uint8], uint8) */;
  %824 = %823.0;
  (%824,)
}

def @func_8745() -> (Tensor[(8, 8, 4), float64], Tensor[(8, 8, 4), float64]) {
  %825 = @func_7099() /* ty=(Tensor[(8, 8, 4), float64],) */;
  %826 = @func_6452() /* ty=Tensor[(8, 8, 4), float64] */;
  %827 = %825.0;
  (%826, %827)
}

def @func_25722() -> Tensor[(1296), float64] {
  %828 = @func_19584() /* ty=(Tensor[(1296), float64],) */;
  %828.0
}

def @func_16012() -> (Tensor[(1296), bool], Tensor[(8, 8, 4), float64]) {
  %829 = @func_14112() /* ty=Tensor[(1296), bool] */;
  %830 = @func_12707() /* ty=Tensor[(8, 8, 4), float64] */;
  (%829, %830)
}

def @func_4660(%var_4631: Tensor[(7, 11, 15), int8], %var_4653: Tensor[(1260), float32]) -> (Tensor[(7, 11, 15), bool], Tensor[(14, 6, 15), float32], Tensor[(1260), float32]) {
  %831 = cast(%var_4631, dtype="bool") /* ty=Tensor[(7, 11, 15), bool] */;
  %832 = shape_of(meta[relay.Constant][38] /* ty=Tensor[(7, 11, 15), int8] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %833 = cast(meta[relay.Constant][38] /* ty=Tensor[(7, 11, 15), int8] */, dtype="bool") /* ty=Tensor[(7, 11, 15), bool] */;
  %834 = dyn.reshape(%831, %832, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %835 = cast(%var_4653, dtype="float32") /* ty=Tensor[(1260), float32] */;
  %836 = reshape(%835, newshape=[14, 6, 15]) /* ty=Tensor[(14, 6, 15), float32] */;
  %837 = @func_963(%836) /* ty=(Tensor[(14, 6, 15), float32],) */;
  %838 = not_equal(%833, %834) /* ty=Tensor[(7, 11, 15), bool] */;
  %839 = %837.0;
  (%838, %839, %var_4653)
}

def @func_7237(%var_7191: Tensor[(8, 8, 4), float64]) -> (Tensor[(8, 8, 4), bool], Tensor[(8, 8, 4), float64], Tensor[(8, 8, 4), float32], Tensor[(8, 8, 4), float64]) {
  %840 = @func_6018() /* ty=(Tensor[(8, 8, 4), float64],) */;
  %841 = %840.0;
  %842 = cast(%var_7191, dtype="bool") /* ty=Tensor[(8, 8, 4), bool] */;
  %843 = shape_of(%841, dtype="int32") /* ty=Tensor[(3), int32] */;
  %844 = cast(%841, dtype="bool") /* ty=Tensor[(8, 8, 4), bool] */;
  %845 = dyn.reshape(%842, %843, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %846 = @func_6001() /* ty=(Tensor[(8, 8, 4), float64],) */;
  %847 = cast(%var_7191, dtype="float64") /* ty=Tensor[(8, 8, 4), float64] */;
  %848 = cosh(%847) /* ty=Tensor[(8, 8, 4), float64] */;
  %849 = cast(%848, dtype="float32") /* ty=Tensor[(8, 8, 4), float32] */;
  %850 = @func_6698() /* ty=(Tensor[(8, 8, 4), float64],) */;
  %851 = logical_and(%844, %845) /* ty=Tensor[(8, 8, 4), bool] */;
  %852 = %846.0;
  %853 = asinh(%849) /* ty=Tensor[(8, 8, 4), float32] */;
  %854 = %850.0;
  (%851, %852, %853, %854)
}

def @func_13632() -> Tensor[(8, 8, 4), float64] {
  %855 = @func_9397() /* ty=(Tensor[(8, 8, 4), float64], Tensor[(16, 8, 5), float64], Tensor[(936, 1), uint8]) */;
  %855.0
}

def @func_7573(%var_7534: Tensor[(5, 2, 3), float32], %var_7556: Tensor[(1155, 1), int8], %var_7557: Tensor[(1260), float32]) -> (Tensor[(8, 8, 4), float64], Tensor[(5, 2, 3), float32], Tensor[(8, 8, 4), int64], Tensor[(8, 8, 4), float64], Tensor[(14, 6, 15), float32], Tensor[(1155, 1), int8], Tensor[(1260), float32], Tensor[(8, 8, 4), float64]) {
  %856 = cast(meta[relay.Constant][39] /* ty=Tensor[(5, 2, 3), float32] */, dtype="float32") /* ty=Tensor[(5, 2, 3), float32] */;
  %857 = shape_of(%var_7534, dtype="int32") /* ty=Tensor[(3), int32] */;
  %858 = cast(%var_7534, dtype="float32") /* ty=Tensor[(5, 2, 3), float32] */;
  %859 = dyn.reshape(%856, %857, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %860 = power(%858, %859) /* ty=Tensor[(5, 2, 3), float32] */;
  %861 = cast(%860, dtype="float32") /* ty=Tensor[(5, 2, 3), float32] */;
  %862 = @func_5807() /* ty=Tensor[(8, 8, 4), float64] */;
  %863 = cast(%862, dtype="float64") /* ty=Tensor[(8, 8, 4), float64] */;
  %864 = reshape(%863, newshape=[8, 8, 4]) /* ty=Tensor[(8, 8, 4), float64] */;
  %865 = @func_7504() /* ty=(Tensor[(8, 8, 4), float64],) */;
  %866 = cast(%var_7556, dtype="int8") /* ty=Tensor[(1155, 1), int8] */;
  %867 = cast(%var_7557, dtype="float32") /* ty=Tensor[(1260), float32] */;
  %868 = reshape(%866, newshape=[7, 11, 15]) /* ty=Tensor[(7, 11, 15), int8] */;
  %869 = reshape(%867, newshape=[1260]) /* ty=Tensor[(1260), float32] */;
  %870 = @func_4660(%868, %869) /* ty=(Tensor[(7, 11, 15), bool], Tensor[(14, 6, 15), float32], Tensor[(1260), float32]) */;
  %871 = log2(%861) /* ty=Tensor[(5, 2, 3), float32] */;
  %872 = @func_5643(%864) /* ty=Tensor[(8, 8, 4), int64] */;
  %873 = %865.0;
  %874 = %870.1;
  %875 = @func_7399() /* ty=Tensor[(8, 8, 4), float64] */;
  (%862, %871, %872, %873, %874, %var_7556, %var_7557, %875)
}

def @func_22738() -> (Tensor[(1296), bool], Tensor[(9, 12, 12), float32], Tensor[(8, 8, 4), int32]) {
  %876 = @func_14112() /* ty=Tensor[(1296), bool] */;
  %877 = cast(%876, dtype="float64") /* ty=Tensor[(1296), float64] */;
  %878 = reshape(%877, newshape=[9, 12, 12]) /* ty=Tensor[(9, 12, 12), float64] */;
  %879 = @func_13898() /* ty=(Tensor[(8, 8, 4), float64], Tensor[(8, 8, 4), int32]) */;
  %880 = @func_2887(%878) /* ty=Tensor[(9, 12, 12), float32] */;
  %881 = %879.1;
  (%876, %880, %881)
}

def @func_23090() -> Tensor[(8, 8, 4), float64] {
  %882 = @func_19705() /* ty=(Tensor[(1296), float64], Tensor[(8, 8, 4), float64]) */;
  %882.1
}

def @func_12707() -> Tensor[(8, 8, 4), float64] {
  @func_11472() /* ty=Tensor[(8, 8, 4), float64] */
}

def @func_6610(%var_6603: Tensor[(264, 2), float32]) -> (Tensor[(8, 8, 4), float64], Tensor[(3, 11, 16), float32], Tensor[(264, 2), float32], uint8) {
  %883 = @func_6018() /* ty=(Tensor[(8, 8, 4), float64],) */;
  %884 = cast(%var_6603, dtype="float32") /* ty=Tensor[(264, 2), float32] */;
  %885 = cast(meta[relay.Constant][40] /* ty=uint8 */, dtype="uint8") /* ty=uint8 */;
  %886 = reshape(%884, newshape=[3, 11, 16]) /* ty=Tensor[(3, 11, 16), float32] */;
  %887 = reshape(%885, newshape=[]) /* ty=uint8 */;
  %888 = @func_2471(%886, %887) /* ty=(Tensor[(3, 11, 16), float32], Tensor[(14, 6, 15), float32], Tensor[(1260), float32], Tensor[(1260), float32], uint8, Tensor[(75), uint8], Tensor[(14, 6, 15), float32]) */;
  %889 = %883.0;
  %890 = %888.0;
  (%889, %890, %var_6603, meta[relay.Constant][40] /* ty=uint8 */)
}

def @func_963(%var_957: Tensor[(14, 6, 15), float32]) -> (Tensor[(14, 6, 15), float32],) {
  %891 = cast(meta[relay.Constant][41] /* ty=Tensor[(14, 6, 15), float32] */, dtype="float32") /* ty=Tensor[(14, 6, 15), float32] */;
  %892 = shape_of(%var_957, dtype="int32") /* ty=Tensor[(3), int32] */;
  %893 = cast(%var_957, dtype="float32") /* ty=Tensor[(14, 6, 15), float32] */;
  %894 = dyn.reshape(%891, %892, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %895 = mod(%893, %894) /* ty=Tensor[(14, 6, 15), float32] */;
  (%895,)
}

def @func_26349() -> (Tensor[(8, 8, 4), float64],) {
  %896 = @func_23253() /* ty=(uint8, Tensor[(8, 8, 4), float64], Tensor[(8, 8, 4), int64]) */;
  %897 = %896.1;
  (%897,)
}

def @func_16426() -> Tensor[(8, 8, 4), float64] {
  %898 = @func_5468() /* ty=(Tensor[(8, 8, 4), float64],) */;
  %898.0
}

def @func_5643(%var_5634: Tensor[(8, 8, 4), float64]) -> Tensor[(8, 8, 4), int64] {
  %899 = @func_5468() /* ty=(Tensor[(8, 8, 4), float64],) */;
  %900 = %899.0;
  %901 = cast(%var_5634, dtype="int64") /* ty=Tensor[(8, 8, 4), int64] */;
  %902 = shape_of(%900, dtype="int32") /* ty=Tensor[(3), int32] */;
  %903 = cast(%900, dtype="int64") /* ty=Tensor[(8, 8, 4), int64] */;
  %904 = dyn.reshape(%901, %902, newshape=[]) /* ty=Tensor[(?, ?, ?), int64] */;
  minimum(%903, %904) /* ty=Tensor[(8, 8, 4), int64] */
}

def @func_11342() -> (Tensor[(8, 8, 4), float64], Tensor[(1260), float32]) {
  %905 = @func_9275() /* ty=(Tensor[(8, 8, 4), float64], Tensor[(1260), float32], Tensor[(1155), int8], Tensor[(1260), float32], Tensor[(8, 8, 4), float64], Tensor[(8, 8, 4), float64]) */;
  %906 = @func_9705() /* ty=Tensor[(8, 8, 4), float64] */;
  %907 = %905.1;
  (%906, %907)
}

def @func_13996() -> (Tensor[(8, 8, 4), float64],) {
  %908 = @func_7878() /* ty=(Tensor[(8, 8, 4), float64], Tensor[(8, 8, 4), int64], Tensor[(256), float64]) */;
  %909 = %908.0;
  (%909,)
}

def @func_24044() -> (Tensor[(8, 8, 4), float64],) {
  %910 = @func_23253() /* ty=(uint8, Tensor[(8, 8, 4), float64], Tensor[(8, 8, 4), int64]) */;
  %911 = %910.1;
  (%911,)
}

def @func_2187(%var_2173: Tensor[(16, 8, 5), float64]) -> (Tensor[(16, 8, 5), float64],) {
  %912 = cast(%var_2173, dtype="float64") /* ty=Tensor[(16, 8, 5), float64] */;
  %913 = tan(%912) /* ty=Tensor[(16, 8, 5), float64] */;
  (%913,)
}

def @func_6905() -> (Tensor[(8, 8, 4), float64], uint8, Tensor[(528), float32], uint8, Tensor[(8, 8, 4), float64]) {
  %914 = cast(meta[relay.Constant][42] /* ty=Tensor[(528), float32] */, dtype="float32") /* ty=Tensor[(528), float32] */;
  %915 = cast(meta[relay.Constant][43] /* ty=uint8 */, dtype="uint8") /* ty=uint8 */;
  %916 = reshape(%914, newshape=[3, 11, 16]) /* ty=Tensor[(3, 11, 16), float32] */;
  %917 = reshape(%915, newshape=[]) /* ty=uint8 */;
  %918 = @func_2471(%916, %917) /* ty=(Tensor[(3, 11, 16), float32], Tensor[(14, 6, 15), float32], Tensor[(1260), float32], Tensor[(1260), float32], uint8, Tensor[(75), uint8], Tensor[(14, 6, 15), float32]) */;
  %919 = @func_5807() /* ty=Tensor[(8, 8, 4), float64] */;
  %920 = %918.4;
  %921 = @func_5807() /* ty=Tensor[(8, 8, 4), float64] */;
  (%919, %920, meta[relay.Constant][42] /* ty=Tensor[(528), float32] */, meta[relay.Constant][43] /* ty=uint8 */, %921)
}

def @func_18208() -> (Tensor[(14, 2, 15), float64],) {
  %922 = @func_16355() /* ty=(uint8, Tensor[(8, 8, 4), float64], Tensor[(1296), bool], Tensor[(14, 2, 15), int64], Tensor[(5, 6), int64], Tensor[(5, 84), int64]) */;
  %923 = %922.3;
  %924 = cast(%923, dtype="float64") /* ty=Tensor[(14, 2, 15), float64] */;
  %925 = rsqrt(%924) /* ty=Tensor[(14, 2, 15), float64] */;
  (%925,)
}

def @func_17491(%var_17480: Tensor[(528), float32], %var_17484: Tensor[(432), float32]) -> (Tensor[(8, 8, 4), float64], Tensor[(8, 8, 4), float64], Tensor[(3, 11, 16), float32], Tensor[(528), float32], uint8, Tensor[(9, 4, 12), bool], Tensor[(432), float32]) {
  %926 = @func_10865() /* ty=(Tensor[(8, 8, 4), float64], Tensor[(1296), bool], Tensor[(256), float64], Tensor[(8, 8, 4), float64], uint8) */;
  %927 = @func_15657() /* ty=(Tensor[(8, 8, 4), float64], Tensor[(8, 8, 4), float64]) */;
  %928 = cast(%var_17480, dtype="float32") /* ty=Tensor[(528), float32] */;
  %929 = cast(meta[relay.Constant][44] /* ty=uint8 */, dtype="uint8") /* ty=uint8 */;
  %930 = reshape(%928, newshape=[3, 11, 16]) /* ty=Tensor[(3, 11, 16), float32] */;
  %931 = reshape(%929, newshape=[]) /* ty=uint8 */;
  %932 = @func_2471(%930, %931) /* ty=(Tensor[(3, 11, 16), float32], Tensor[(14, 6, 15), float32], Tensor[(1260), float32], Tensor[(1260), float32], uint8, Tensor[(75), uint8], Tensor[(14, 6, 15), float32]) */;
  %933 = cast(meta[relay.Constant][44] /* ty=uint8 */, dtype="float32") /* ty=float32 */;
  %934 = cast(%var_17484, dtype="float32") /* ty=Tensor[(432), float32] */;
  %935 = cast(%var_17484, dtype="float32") /* ty=Tensor[(432), float32] */;
  %936 = reshape(%933, newshape=[]) /* ty=float32 */;
  %937 = reshape(%934, newshape=[9, 4, 12]) /* ty=Tensor[(9, 4, 12), float32] */;
  %938 = reshape(%935, newshape=[9, 4, 12]) /* ty=Tensor[(9, 4, 12), float32] */;
  %939 = @func_7803(%936, %937, %938) /* ty=(Tensor[(9, 4, 12), bool],) */;
  %940 = %926.0;
  %941 = %927.0;
  %942 = %932.0;
  %943 = %939.0;
  (%940, %941, %942, %var_17480, meta[relay.Constant][44] /* ty=uint8 */, %943, %var_17484)
}

def @func_26037() -> Tensor[(8, 8, 4), float64] {
  %944 = @func_13110() /* ty=(Tensor[(8, 8, 4), int64], Tensor[(256), float64], Tensor[(1296), float64], Tensor[(8, 8, 4), float64]) */;
  %944.3
}

def @func_20561(%var_20553: Tensor[(12, 2, 4), float32]) -> (Tensor[(12, 2, 4), float32],) {
  %945 = cast(%var_20553, dtype="float32") /* ty=Tensor[(12, 2, 4), float32] */;
  %946 = sigmoid(%945) /* ty=Tensor[(12, 2, 4), float32] */;
  (%946,)
}

def @func_13842() -> (Tensor[(8, 8, 4), float64],) {
  %947 = @func_13789() /* ty=(Tensor[(8, 8, 4), float64], Tensor[(8, 8, 4), float64]) */;
  %948 = %947.0;
  (%948,)
}

def @func_26244() -> Tensor[(8, 8, 4), float64] {
  %949 = @func_7292() /* ty=(Tensor[(8, 8, 4), float64],) */;
  %949.0
}

def @func_17614() -> (Tensor[(8, 8, 4), float64],) {
  %950 = @func_8261() /* ty=(Tensor[(8, 8, 4), float64], Tensor[(8, 8, 4), int64], Tensor[(8, 8, 4), float64]) */;
  %951 = %950.0;
  (%951,)
}

def @func_12529() -> (uint8,) {
  %952 = @func_6905() /* ty=(Tensor[(8, 8, 4), float64], uint8, Tensor[(528), float32], uint8, Tensor[(8, 8, 4), float64]) */;
  %953 = %952.1;
  (%953,)
}

def @func_19205() -> (Tensor[(256), float64], Tensor[(8, 8, 4), float64]) {
  %954 = @func_14126() /* ty=(Tensor[(256), float64],) */;
  %955 = %954.0;
  %956 = cast(%955, dtype="float64") /* ty=Tensor[(256), float64] */;
  %957 = reshape(%956, newshape=[8, 8, 4]) /* ty=Tensor[(8, 8, 4), float64] */;
  %958 = @func_7237(%957) /* ty=(Tensor[(8, 8, 4), bool], Tensor[(8, 8, 4), float64], Tensor[(8, 8, 4), float32], Tensor[(8, 8, 4), float64]) */;
  %959 = %958.3;
  (%955, %959)
}

def @func_15709() -> (uint8,) {
  %960 = @func_6905() /* ty=(Tensor[(8, 8, 4), float64], uint8, Tensor[(528), float32], uint8, Tensor[(8, 8, 4), float64]) */;
  %961 = %960.3;
  (%961,)
}

def @func_8852(%var_8845: Tensor[(2, 5, 12), float64], %var_8846: Tensor[(2, 5, 12), float64]) -> (Tensor[(2, 5, 12), bool],) {
  %962 = cast(%var_8846, dtype="bool") /* ty=Tensor[(2, 5, 12), bool] */;
  %963 = shape_of(%var_8845, dtype="int32") /* ty=Tensor[(3), int32] */;
  %964 = cast(%var_8845, dtype="bool") /* ty=Tensor[(2, 5, 12), bool] */;
  %965 = dyn.reshape(%962, %963, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %966 = greater_equal(%964, %965) /* ty=Tensor[(2, 5, 12), bool] */;
  (%966,)
}

def @func_15069() -> (Tensor[(256), float64], Tensor[(8, 8, 4), float64], Tensor[(1296), float64]) {
  %967 = @func_10031() /* ty=(Tensor[(256), float64], Tensor[(1296), float64]) */;
  %968 = @func_9094() /* ty=(Tensor[(1296), float64],) */;
  %969 = %967.0;
  %970 = @func_7342() /* ty=Tensor[(8, 8, 4), float64] */;
  %971 = %968.0;
  (%969, %970, %971)
}

def @func_8971() -> (Tensor[(1296), float64],) {
  %972 = @func_6490() /* ty=(Tensor[(1296), float64],) */;
  %973 = %972.0;
  (%973,)
}

def @func_18985() -> (Tensor[(8, 8, 4), float64], Tensor[(1260), float32]) {
  %974 = @func_11342() /* ty=(Tensor[(8, 8, 4), float64], Tensor[(1260), float32]) */;
  %975 = @func_6042() /* ty=Tensor[(8, 8, 4), float64] */;
  %976 = %974.1;
  (%975, %976)
}

def @func_21144() -> (Tensor[(256), float64], Tensor[(120), float64]) {
  %977 = @func_17774() /* ty=(Tensor[(256), float64], Tensor[(8, 8, 4), float64]) */;
  %978 = @func_10245() /* ty=(Tensor[(120), float64],) */;
  %979 = %977.0;
  %980 = %978.0;
  (%979, %980)
}

def @func_10085(%var_10080: Tensor[(256), float64]) -> (Tensor[(1296), float64], Tensor[(1296), float64], Tensor[(8, 8, 4), int32], Tensor[(256), float64]) {
  %981 = @func_9648() /* ty=(Tensor[(1296), float64],) */;
  %982 = @func_9648() /* ty=(Tensor[(1296), float64],) */;
  %983 = cast(%var_10080, dtype="float64") /* ty=Tensor[(256), float64] */;
  %984 = reshape(%983, newshape=[8, 8, 4]) /* ty=Tensor[(8, 8, 4), float64] */;
  %985 = %981.0;
  %986 = %982.0;
  %987 = @func_6833(%984) /* ty=Tensor[(8, 8, 4), int32] */;
  (%985, %986, %987, %var_10080)
}

def @func_11429() -> (Tensor[(1296), bool],) {
  %988 = @func_8448() /* ty=(Tensor[(1296), bool], Tensor[(1296), bool]) */;
  %989 = %988.0;
  (%989,)
}

def @func_15638() -> (Tensor[(8, 8, 4), float64],) {
  %990 = @func_6001() /* ty=(Tensor[(8, 8, 4), float64],) */;
  %991 = %990.0;
  (%991,)
}

def @func_7099() -> (Tensor[(8, 8, 4), float64],) {
  %992 = @func_6001() /* ty=(Tensor[(8, 8, 4), float64],) */;
  %993 = %992.0;
  (%993,)
}

def @func_23231() -> (Tensor[(8, 8, 4), float64], Tensor[(8, 8, 4), float64]) {
  %994 = @func_10962() /* ty=(Tensor[(1296), float64], Tensor[(256), float64], Tensor[(8, 8, 4), float64]) */;
  %995 = %994.2;
  %996 = @func_18409() /* ty=Tensor[(8, 8, 4), float64] */;
  (%995, %996)
}

def @func_24243() -> Tensor[(1296), bool] {
  @func_24057() /* ty=Tensor[(1296), bool] */
}

def @func_16043() -> (Tensor[(8, 8, 4), float64],) {
  %997 = @func_13789() /* ty=(Tensor[(8, 8, 4), float64], Tensor[(8, 8, 4), float64]) */;
  %998 = %997.1;
  (%998,)
}

def @func_23834(%var_23823: Tensor[(252), int64]) -> (Tensor[(120), float64], Tensor[(16, 8, 5), float64], int64, Tensor[(252), int64]) {
  %999 = @func_10245() /* ty=(Tensor[(120), float64],) */;
  %1000 = cast(-2 /* ty=int64 */, dtype="int64") /* ty=int64 */;
  %1001 = cast(%var_23823, dtype="int64") /* ty=Tensor[(252), int64] */;
  %1002 = reshape(%1000, newshape=[]) /* ty=int64 */;
  %1003 = reshape(%1001, newshape=[9, 4, 7]) /* ty=Tensor[(9, 4, 7), int64] */;
  %1004 = @func_14559(%1002, %1003) /* ty=(Tensor[(9, 4, 7), bool], Tensor[(16, 8, 5), float64], Tensor[(640), float64]) */;
  %1005 = %999.0;
  %1006 = %1004.1;
  (%1005, %1006, -2 /* ty=int64 */, %var_23823)
}

def @func_14916() -> (Tensor[(8, 8, 4), float64], Tensor[(8, 8, 4), float64], Tensor[(1296), bool]) {
  %1007 = @func_14410() /* ty=(Tensor[(8, 8, 4), float64],) */;
  %1008 = @func_12946() /* ty=(Tensor[(1296), bool], Tensor[(8, 8, 4), float64]) */;
  %1009 = @func_7399() /* ty=Tensor[(8, 8, 4), float64] */;
  %1010 = %1007.0;
  %1011 = %1008.0;
  (%1009, %1010, %1011)
}

def @func_19886() -> (Tensor[(1296), float64],) {
  %1012 = @func_18549() /* ty=(Tensor[(1296), float64],) */;
  %1013 = %1012.0;
  (%1013,)
}

def @func_16399() -> (Tensor[(528), float32],) {
  %1014 = @func_9237() /* ty=(Tensor[(8, 8, 4), float64], Tensor[(1296), float64], Tensor[(1260), bool], Tensor[(528), float32]) */;
  %1015 = %1014.3;
  (%1015,)
}

def @func_15300() -> (Tensor[(8, 8, 4), float64],) {
  %1016 = @func_5688() /* ty=Tensor[(8, 8, 4), float64] */;
  (%1016,)
}

def @func_16149() -> (Tensor[(8, 8, 4), float64], Tensor[(1260), float32]) {
  %1017 = @func_9275() /* ty=(Tensor[(8, 8, 4), float64], Tensor[(1260), float32], Tensor[(1155), int8], Tensor[(1260), float32], Tensor[(8, 8, 4), float64], Tensor[(8, 8, 4), float64]) */;
  %1018 = @func_10517() /* ty=Tensor[(8, 8, 4), float64] */;
  %1019 = %1017.1;
  (%1018, %1019)
}

def @func_17842() -> (Tensor[(9, 12, 12), float32], Tensor[(8, 8, 4), float64], uint8) {
  %1020 = @func_13762() /* ty=(Tensor[(9, 12, 12), float32], Tensor[(9, 12, 12), float32]) */;
  %1021 = %1020.0;
  %1022 = cast(%1021, dtype="float32") /* ty=Tensor[(9, 12, 12), float32] */;
  %1023 = cast(meta[relay.Constant][45] /* ty=uint8 */, dtype="uint8") /* ty=uint8 */;
  %1024 = reshape(%1023, newshape=[]) /* ty=uint8 */;
  %1025 = @func_12417(%1024) /* ty=(Tensor[(8, 8, 4), float64], Tensor[(75), uint8], Tensor[(4, 132), float32], uint8) */;
  %1026 = acosh(%1022) /* ty=Tensor[(9, 12, 12), float32] */;
  %1027 = %1025.0;
  (%1026, %1027, meta[relay.Constant][45] /* ty=uint8 */)
}

def @func_15956() -> (Tensor[(1296), float64],) {
  %1028 = @func_10378() /* ty=(Tensor[(8, 8, 4), int64], Tensor[(8, 8, 4), float64], Tensor[(9, 12, 12), float32], Tensor[(1296), float64], Tensor[(16, 8, 5), float64]) */;
  %1029 = %1028.3;
  (%1029,)
}

def @func_22460() -> (Tensor[(8, 8, 4), float64], Tensor[(8, 8, 4), float64]) {
  %1030 = @func_6001() /* ty=(Tensor[(8, 8, 4), float64],) */;
  %1031 = %1030.0;
  %1032 = @func_18401() /* ty=Tensor[(8, 8, 4), float64] */;
  (%1031, %1032)
}

def @func_19904() -> (Tensor[(1296), float64],) {
  %1033 = @func_10962() /* ty=(Tensor[(1296), float64], Tensor[(256), float64], Tensor[(8, 8, 4), float64]) */;
  %1034 = %1033.0;
  (%1034,)
}

def @func_18046() -> (Tensor[(8, 8, 4), float64], Tensor[(8, 8, 4), float64], Tensor[(8, 8, 4), float64], Tensor[(8, 8, 4), float64], Tensor[(2, 5, 12), bool], Tensor[(120, 1), float64], Tensor[(8, 8, 4), float64], Tensor[(8, 8, 4), float64], Tensor[(8, 8, 4), float64]) {
  %1035 = @func_11387() /* ty=(Tensor[(8, 8, 4), float64], Tensor[(8, 8, 4), float64]) */;
  %1036 = @func_17966() /* ty=(Tensor[(8, 8, 4), float64],) */;
  %1037 = @func_15193() /* ty=(Tensor[(8, 8, 4), float64],) */;
  %1038 = @func_17966() /* ty=(Tensor[(8, 8, 4), float64],) */;
  %1039 = cast(meta[relay.Constant][46] /* ty=Tensor[(120, 1), float64] */, dtype="float64") /* ty=Tensor[(120, 1), float64] */;
  %1040 = cast(meta[relay.Constant][46] /* ty=Tensor[(120, 1), float64] */, dtype="float64") /* ty=Tensor[(120, 1), float64] */;
  %1041 = reshape(%1039, newshape=[2, 5, 12]) /* ty=Tensor[(2, 5, 12), float64] */;
  %1042 = reshape(%1040, newshape=[2, 5, 12]) /* ty=Tensor[(2, 5, 12), float64] */;
  %1043 = @func_8852(%1041, %1042) /* ty=(Tensor[(2, 5, 12), bool],) */;
  %1044 = @func_8630() /* ty=(Tensor[(8, 8, 4), float64],) */;
  %1045 = @func_15328() /* ty=(Tensor[(8, 8, 4), float64],) */;
  %1046 = %1035.0;
  %1047 = %1036.0;
  %1048 = %1037.0;
  %1049 = %1038.0;
  %1050 = %1043.0;
  %1051 = @func_8829() /* ty=Tensor[(8, 8, 4), float64] */;
  %1052 = %1044.0;
  %1053 = %1045.0;
  (%1046, %1047, %1048, %1049, %1050, meta[relay.Constant][46] /* ty=Tensor[(120, 1), float64] */, %1051, %1052, %1053)
}

def @func_20277() -> (Tensor[(8, 8, 4), float64], Tensor[(8, 8, 4), float64]) {
  %1054 = @func_5727() /* ty=(Tensor[(8, 8, 4), float64],) */;
  %1055 = @func_8745() /* ty=(Tensor[(8, 8, 4), float64], Tensor[(8, 8, 4), float64]) */;
  %1056 = %1054.0;
  %1057 = %1055.0;
  (%1056, %1057)
}

def @func_6042() -> Tensor[(8, 8, 4), float64] {
  %1058 = @func_6018() /* ty=(Tensor[(8, 8, 4), float64],) */;
  %1058.0
}

def @func_19245() -> (uint8, Tensor[(256), float64], Tensor[(1296), bool]) {
  %1059 = @func_14455() /* ty=(Tensor[(256), float64],) */;
  %1060 = @func_11429() /* ty=(Tensor[(1296), bool],) */;
  %1061 = @func_18328() /* ty=uint8 */;
  %1062 = %1059.0;
  %1063 = %1060.0;
  (%1061, %1062, %1063)
}

def @func_26782() -> (Tensor[(8, 8, 4), uint8], Tensor[(8, 8, 4), float64]) {
  %1064 = @func_15207() /* ty=(Tensor[(8, 8, 4), float64], Tensor[(8, 8, 4), uint8]) */;
  %1065 = %1064.1;
  %1066 = @func_22340() /* ty=Tensor[(8, 8, 4), float64] */;
  (%1065, %1066)
}

def @func_25036() -> Tensor[(8, 8, 4), float64] {
  %1067 = @func_22657() /* ty=(Tensor[(8, 8, 4), float64],) */;
  %1067.0
}

def @func_10600(%var_10565: Tensor[(1296), float64], %var_10580: Tensor[(256), float64]) -> (Tensor[(1296), float32], Tensor[(8, 8, 4), int32], Tensor[(256), float64], Tensor[(1296), float64]) {
  %1068 = @func_9648() /* ty=(Tensor[(1296), float64],) */;
  %1069 = %1068.0;
  %1070 = cast(%var_10565, dtype="float32") /* ty=Tensor[(1296), float32] */;
  %1071 = shape_of(%1069, dtype="int32") /* ty=Tensor[(1), int32] */;
  %1072 = cast(%1069, dtype="float32") /* ty=Tensor[(1296), float32] */;
  %1073 = dyn.reshape(%1070, %1071, newshape=[]) /* ty=Tensor[(?), float32] */;
  %1074 = cast(%var_10580, dtype="float64") /* ty=Tensor[(256), float64] */;
  %1075 = reshape(%1074, newshape=[8, 8, 4]) /* ty=Tensor[(8, 8, 4), float64] */;
  %1076 = cast(%var_10565, dtype="float64") /* ty=Tensor[(1296), float64] */;
  %1077 = power(%1072, %1073) /* ty=Tensor[(1296), float32] */;
  %1078 = @func_6833(%1075) /* ty=Tensor[(8, 8, 4), int32] */;
  %1079 = asinh(%1076) /* ty=Tensor[(1296), float64] */;
  (%1077, %1078, %var_10580, %1079)
}

def @func_17071() -> Tensor[(256), float64] {
  %1080 = @func_13419() /* ty=(Tensor[(9, 12, 12), float32], Tensor[(256), float64]) */;
  %1080.1
}

def @func_24019() -> (Tensor[(1296), float64], Tensor[(1296), float64], Tensor[(1296), bool]) {
  %1081 = @func_23544() /* ty=(Tensor[(1296), bool],) */;
  %1082 = @func_13328() /* ty=Tensor[(1296), float64] */;
  %1083 = @func_6295() /* ty=Tensor[(1296), float64] */;
  %1084 = %1081.0;
  (%1082, %1083, %1084)
}

def @func_20347() -> (Tensor[(8, 8, 4), float64], Tensor[(1296), float64], Tensor[(8, 8, 4), float64], Tensor[(8, 8, 4), float64]) {
  %1085 = @func_17966() /* ty=(Tensor[(8, 8, 4), float64],) */;
  %1086 = %1085.0;
  %1087 = cast(%1086, dtype="float64") /* ty=Tensor[(8, 8, 4), float64] */;
  %1088 = reshape(%1087, newshape=[256]) /* ty=Tensor[(256), float64] */;
  %1089 = @func_10085(%1088) /* ty=(Tensor[(1296), float64], Tensor[(1296), float64], Tensor[(8, 8, 4), int32], Tensor[(256), float64]) */;
  %1090 = @func_17842() /* ty=(Tensor[(9, 12, 12), float32], Tensor[(8, 8, 4), float64], uint8) */;
  %1091 = @func_6982() /* ty=(Tensor[(8, 8, 4), float64], Tensor[(8, 8, 4), float64]) */;
  %1092 = %1089.1;
  %1093 = %1090.1;
  %1094 = %1091.1;
  (%1086, %1092, %1093, %1094)
}

def @func_10517() -> Tensor[(8, 8, 4), float64] {
  %1095 = @func_7595() /* ty=(Tensor[(1296), float64], Tensor[(8, 8, 4), float64], Tensor[(8, 8, 4), uint8]) */;
  %1095.1
}

def @func_26237() -> (uint8, Tensor[(1296), float64]) {
  %1096 = @func_26072() /* ty=(uint8, Tensor[(8, 8, 4), float64], Tensor[(8, 8, 4), float64]) */;
  %1097 = %1096.0;
  %1098 = @func_13328() /* ty=Tensor[(1296), float64] */;
  (%1097, %1098)
}

def @func_7484(%var_7454: Tensor[(528, 1), float32]) -> (Tensor[(8, 8, 4), float64], Tensor[(1260), bool], Tensor[(1440), uint16], Tensor[(528, 1), float32], Tensor[(640), float64], Tensor[(14, 6, 15), float32]) {
  %1099 = @func_5468() /* ty=(Tensor[(8, 8, 4), float64],) */;
  %1100 = cast(meta[relay.Constant][47] /* ty=Tensor[(1440), uint16] */, dtype="uint16") /* ty=Tensor[(1440), uint16] */;
  %1101 = cast(meta[relay.Constant][47] /* ty=Tensor[(1440), uint16] */, dtype="uint16") /* ty=Tensor[(1440), uint16] */;
  %1102 = cast(%var_7454, dtype="float32") /* ty=Tensor[(528, 1), float32] */;
  %1103 = cast(meta[relay.Constant][48] /* ty=Tensor[(640), float64] */, dtype="float64") /* ty=Tensor[(640), float64] */;
  %1104 = reshape(%1100, newshape=[16, 15, 6]) /* ty=Tensor[(16, 15, 6), uint16] */;
  %1105 = reshape(%1101, newshape=[16, 15, 6]) /* ty=Tensor[(16, 15, 6), uint16] */;
  %1106 = reshape(%1102, newshape=[528]) /* ty=Tensor[(528), float32] */;
  %1107 = reshape(%1103, newshape=[640]) /* ty=Tensor[(640), float64] */;
  %1108 = @func_3760(%1104, %1105, %1106, %1107) /* ty=(Tensor[(16, 15, 6), uint16], Tensor[(528), float32], uint8, Tensor[(16, 15, 6), bool], Tensor[(16, 8, 5), float64], Tensor[(640), float64], Tensor[(14, 6, 15), float32], Tensor[(9, 12, 12), float32], Tensor[(1296), float64], Tensor[(1260), bool], Tensor[(3, 11, 16), float32]) */;
  %1109 = %1108.9;
  %1110 = cast(%1109, dtype="float32") /* ty=Tensor[(1260), float32] */;
  %1111 = reshape(%1110, newshape=[14, 6, 15]) /* ty=Tensor[(14, 6, 15), float32] */;
  %1112 = @func_963(%1111) /* ty=(Tensor[(14, 6, 15), float32],) */;
  %1113 = %1099.0;
  %1114 = %1112.0;
  (%1113, %1109, meta[relay.Constant][47] /* ty=Tensor[(1440), uint16] */, %var_7454, meta[relay.Constant][48] /* ty=Tensor[(640), float64] */, %1114)
}

def @func_23544() -> (Tensor[(1296), bool],) {
  %1115 = @func_6538() /* ty=Tensor[(1296), bool] */;
  (%1115,)
}

def @func_25443() -> (Tensor[(8, 8, 4), float64],) {
  %1116 = @func_6001() /* ty=(Tensor[(8, 8, 4), float64],) */;
  %1117 = %1116.0;
  (%1117,)
}

def @func_14883(%var_14863: Tensor[(14, 10, 9), float32]) -> (Tensor[(14, 10, 9), float32], Tensor[(1296), float64]) {
  %1118 = cast(%var_14863, dtype="float32") /* ty=Tensor[(14, 10, 9), float32] */;
  %1119 = @func_6176() /* ty=(Tensor[(8, 8, 4), float64], Tensor[(6, 7, 14), float64], Tensor[(588), uint8], Tensor[(8, 8, 4), float64], Tensor[(9, 12, 12), float32], Tensor[(1296), float64]) */;
  %1120 = sigmoid(%1118) /* ty=Tensor[(14, 10, 9), float32] */;
  %1121 = %1119.5;
  (%1120, %1121)
}

def @func_9397() -> (Tensor[(8, 8, 4), float64], Tensor[(16, 8, 5), float64], Tensor[(936, 1), uint8]) {
  %1122 = @func_9275() /* ty=(Tensor[(8, 8, 4), float64], Tensor[(1260), float32], Tensor[(1155), int8], Tensor[(1260), float32], Tensor[(8, 8, 4), float64], Tensor[(8, 8, 4), float64]) */;
  %1123 = cast(meta[relay.Constant][49] /* ty=Tensor[(936, 1), uint8] */, dtype="uint8") /* ty=Tensor[(936, 1), uint8] */;
  %1124 = reshape(%1123, newshape=[13, 8, 9]) /* ty=Tensor[(13, 8, 9), uint8] */;
  %1125 = @func_2229(%1124) /* ty=(Tensor[(13, 8, 9), bool], Tensor[(16, 8, 5), float64], Tensor[(640), float64]) */;
  %1126 = %1122.0;
  %1127 = %1125.1;
  (%1126, %1127, meta[relay.Constant][49] /* ty=Tensor[(936, 1), uint8] */)
}

def @func_18533(%var_18526: Tensor[(1440), uint16]) -> (Tensor[(120), float64], Tensor[(3, 11, 16), float32], Tensor[(1440), uint16], Tensor[(528), float32], Tensor[(10, 64), float64]) {
  %1128 = @func_14940() /* ty=(Tensor[(120), float64],) */;
  %1129 = cast(%var_18526, dtype="uint16") /* ty=Tensor[(1440), uint16] */;
  %1130 = cast(%var_18526, dtype="uint16") /* ty=Tensor[(1440), uint16] */;
  %1131 = cast(meta[relay.Constant][50] /* ty=Tensor[(528), float32] */, dtype="float32") /* ty=Tensor[(528), float32] */;
  %1132 = cast(meta[relay.Constant][51] /* ty=Tensor[(10, 64), float64] */, dtype="float64") /* ty=Tensor[(10, 64), float64] */;
  %1133 = reshape(%1129, newshape=[16, 15, 6]) /* ty=Tensor[(16, 15, 6), uint16] */;
  %1134 = reshape(%1130, newshape=[16, 15, 6]) /* ty=Tensor[(16, 15, 6), uint16] */;
  %1135 = reshape(%1131, newshape=[528]) /* ty=Tensor[(528), float32] */;
  %1136 = reshape(%1132, newshape=[640]) /* ty=Tensor[(640), float64] */;
  %1137 = @func_3760(%1133, %1134, %1135, %1136) /* ty=(Tensor[(16, 15, 6), uint16], Tensor[(528), float32], uint8, Tensor[(16, 15, 6), bool], Tensor[(16, 8, 5), float64], Tensor[(640), float64], Tensor[(14, 6, 15), float32], Tensor[(9, 12, 12), float32], Tensor[(1296), float64], Tensor[(1260), bool], Tensor[(3, 11, 16), float32]) */;
  %1138 = %1128.0;
  %1139 = %1137.10;
  (%1138, %1139, %var_18526, meta[relay.Constant][50] /* ty=Tensor[(528), float32] */, meta[relay.Constant][51] /* ty=Tensor[(10, 64), float64] */)
}

def @func_20202() -> (Tensor[(2, 4, 15), float32],) {
  %1140 = cast(meta[relay.Constant][52] /* ty=Tensor[(2, 4, 15), float64] */, dtype="float64") /* ty=Tensor[(2, 4, 15), float64] */;
  %1141 = rsqrt(%1140) /* ty=Tensor[(2, 4, 15), float64] */;
  %1142 = cast(meta[relay.Constant][52] /* ty=Tensor[(2, 4, 15), float64] */, dtype="float32") /* ty=Tensor[(2, 4, 15), float32] */;
  %1143 = shape_of(%1141, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1144 = cast(%1141, dtype="float32") /* ty=Tensor[(2, 4, 15), float32] */;
  %1145 = dyn.reshape(%1142, %1143, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %1146 = divide(%1144, %1145) /* ty=Tensor[(2, 4, 15), float32] */;
  (%1146,)
}

def @func_15472() -> (Tensor[(8, 8, 4), float64], Tensor[(8, 8, 4), int64]) {
  %1147 = @func_13842() /* ty=(Tensor[(8, 8, 4), float64],) */;
  %1148 = @func_10378() /* ty=(Tensor[(8, 8, 4), int64], Tensor[(8, 8, 4), float64], Tensor[(9, 12, 12), float32], Tensor[(1296), float64], Tensor[(16, 8, 5), float64]) */;
  %1149 = %1147.0;
  %1150 = %1148.0;
  (%1149, %1150)
}

def @func_6176() -> (Tensor[(8, 8, 4), float64], Tensor[(6, 7, 14), float64], Tensor[(588), uint8], Tensor[(8, 8, 4), float64], Tensor[(9, 12, 12), float32], Tensor[(1296), float64]) {
  %1151 = cast(meta[relay.Constant][53] /* ty=Tensor[(588), uint8] */, dtype="uint8") /* ty=Tensor[(588), uint8] */;
  %1152 = reshape(%1151, newshape=[6, 7, 14]) /* ty=Tensor[(6, 7, 14), uint8] */;
  %1153 = @func_4543(%1152) /* ty=(Tensor[(6, 7, 14), float64],) */;
  %1154 = cast(meta[relay.Constant][54] /* ty=Tensor[(1296), float64] */, dtype="float64") /* ty=Tensor[(1296), float64] */;
  %1155 = reshape(%1154, newshape=[9, 12, 12]) /* ty=Tensor[(9, 12, 12), float64] */;
  %1156 = @func_5807() /* ty=Tensor[(8, 8, 4), float64] */;
  %1157 = %1153.0;
  %1158 = @func_5807() /* ty=Tensor[(8, 8, 4), float64] */;
  %1159 = @func_2887(%1155) /* ty=Tensor[(9, 12, 12), float32] */;
  (%1156, %1157, meta[relay.Constant][53] /* ty=Tensor[(588), uint8] */, %1158, %1159, meta[relay.Constant][54] /* ty=Tensor[(1296), float64] */)
}

def @func_22340() -> Tensor[(8, 8, 4), float64] {
  %1160 = @func_15479() /* ty=(Tensor[(8, 8, 4), float64],) */;
  %1160.0
}

def @func_19753() -> (Tensor[(8, 8, 4), float64],) {
  %1161 = @func_7342() /* ty=Tensor[(8, 8, 4), float64] */;
  (%1161,)
}

def @func_10245() -> (Tensor[(120), float64],) {
  %1162 = @func_10231() /* ty=(Tensor[(120), float64], Tensor[(8, 8, 4), float64], Tensor[(1296), float64]) */;
  %1163 = %1162.0;
  (%1163,)
}

def @func_13550() -> Tensor[(1296), float64] {
  %1164 = @func_6490() /* ty=(Tensor[(1296), float64],) */;
  %1165 = %1164.0;
  %1166 = cast(%1165, dtype="float64") /* ty=Tensor[(1296), float64] */;
  sinh(%1166) /* ty=Tensor[(1296), float64] */
}

def @func_10378() -> (Tensor[(8, 8, 4), int64], Tensor[(8, 8, 4), float64], Tensor[(9, 12, 12), float32], Tensor[(1296), float64], Tensor[(16, 8, 5), float64]) {
  %1167 = @func_7878() /* ty=(Tensor[(8, 8, 4), float64], Tensor[(8, 8, 4), int64], Tensor[(256), float64]) */;
  %1168 = @func_7099() /* ty=(Tensor[(8, 8, 4), float64],) */;
  %1169 = cast(meta[relay.Constant][55] /* ty=Tensor[(1296), float64] */, dtype="float64") /* ty=Tensor[(1296), float64] */;
  %1170 = reshape(%1169, newshape=[9, 12, 12]) /* ty=Tensor[(9, 12, 12), float64] */;
  %1171 = @func_9397() /* ty=(Tensor[(8, 8, 4), float64], Tensor[(16, 8, 5), float64], Tensor[(936, 1), uint8]) */;
  %1172 = %1167.1;
  %1173 = %1168.0;
  %1174 = @func_2887(%1170) /* ty=Tensor[(9, 12, 12), float32] */;
  %1175 = %1171.1;
  (%1172, %1173, %1174, meta[relay.Constant][55] /* ty=Tensor[(1296), float64] */, %1175)
}

def @func_19447() -> (uint8, Tensor[(16, 8, 5), float64], Tensor[(1296), bool], Tensor[(936), float64]) {
  %1176 = cast(meta[relay.Constant][56] /* ty=Tensor[(936), uint8] */, dtype="uint8") /* ty=Tensor[(936), uint8] */;
  %1177 = reshape(%1176, newshape=[13, 8, 9]) /* ty=Tensor[(13, 8, 9), uint8] */;
  %1178 = @func_2229(%1177) /* ty=(Tensor[(13, 8, 9), bool], Tensor[(16, 8, 5), float64], Tensor[(640), float64]) */;
  %1179 = @func_16355() /* ty=(uint8, Tensor[(8, 8, 4), float64], Tensor[(1296), bool], Tensor[(14, 2, 15), int64], Tensor[(5, 6), int64], Tensor[(5, 84), int64]) */;
  %1180 = cast(meta[relay.Constant][56] /* ty=Tensor[(936), uint8] */, dtype="float64") /* ty=Tensor[(936), float64] */;
  %1181 = @func_11795() /* ty=uint8 */;
  %1182 = %1178.1;
  %1183 = %1179.2;
  %1184 = rsqrt(%1180) /* ty=Tensor[(936), float64] */;
  (%1181, %1182, %1183, %1184)
}

def @func_23328() -> (Tensor[(8, 8, 4), float64], Tensor[(8, 8, 4), float64], Tensor[(8, 8, 4), float64]) {
  %1185 = @func_14156() /* ty=(uint8, Tensor[(8, 8, 4), float64]) */;
  %1186 = @func_10626() /* ty=(Tensor[(8, 8, 4), int64], Tensor[(8, 8, 4), float64]) */;
  %1187 = @func_18409() /* ty=Tensor[(8, 8, 4), float64] */;
  %1188 = %1185.1;
  %1189 = %1186.1;
  (%1187, %1188, %1189)
}

def @func_21105(%var_21094: Tensor[(7, 165), int8], %var_21095: Tensor[(1260), float32]) -> (Tensor[(8, 8, 4), float64], Tensor[(528), float32], Tensor[(8, 8, 4), float64], Tensor[(30), float32], Tensor[(7, 165), int8], Tensor[(1260), float32]) {
  %1190 = @func_7099() /* ty=(Tensor[(8, 8, 4), float64],) */;
  %1191 = @func_16399() /* ty=(Tensor[(528), float32],) */;
  %1192 = cast(meta[relay.Constant][57] /* ty=Tensor[(30), float32] */, dtype="float32") /* ty=Tensor[(30), float32] */;
  %1193 = cast(%var_21094, dtype="int8") /* ty=Tensor[(7, 165), int8] */;
  %1194 = cast(%var_21095, dtype="float32") /* ty=Tensor[(1260), float32] */;
  %1195 = reshape(%1192, newshape=[5, 2, 3]) /* ty=Tensor[(5, 2, 3), float32] */;
  %1196 = reshape(%1193, newshape=[1155, 1]) /* ty=Tensor[(1155, 1), int8] */;
  %1197 = reshape(%1194, newshape=[1260]) /* ty=Tensor[(1260), float32] */;
  %1198 = @func_7573(%1195, %1196, %1197) /* ty=(Tensor[(8, 8, 4), float64], Tensor[(5, 2, 3), float32], Tensor[(8, 8, 4), int64], Tensor[(8, 8, 4), float64], Tensor[(14, 6, 15), float32], Tensor[(1155, 1), int8], Tensor[(1260), float32], Tensor[(8, 8, 4), float64]) */;
  %1199 = %1190.0;
  %1200 = %1191.0;
  %1201 = %1198.3;
  (%1199, %1200, %1201, meta[relay.Constant][57] /* ty=Tensor[(30), float32] */, %var_21094, %var_21095)
}

def @func_11472() -> Tensor[(8, 8, 4), float64] {
  @func_8829() /* ty=Tensor[(8, 8, 4), float64] */
}

def @func_19784() -> (Tensor[(8, 8, 4), bool],) {
  %1202 = @func_9585() /* ty=(Tensor[(8, 8, 4), int64], Tensor[(8, 8, 4), float64], Tensor[(1296), bool], uint8, Tensor[(8, 8, 4), uint8], Tensor[(1296), float64], Tensor[(2, 5, 12), bool], Tensor[(120), float64], Tensor[(8, 8, 4), bool]) */;
  %1203 = %1202.8;
  (%1203,)
}

def @func_7292() -> (Tensor[(8, 8, 4), float64],) {
  %1204 = @func_5727() /* ty=(Tensor[(8, 8, 4), float64],) */;
  %1205 = %1204.0;
  (%1205,)
}

def @func_13685() -> (Tensor[(8, 8, 4), float64], Tensor[(8, 8, 4), float64]) {
  %1206 = @func_7504() /* ty=(Tensor[(8, 8, 4), float64],) */;
  %1207 = @func_7342() /* ty=Tensor[(8, 8, 4), float64] */;
  %1208 = %1206.0;
  (%1207, %1208)
}

def @func_25107() -> (Tensor[(8, 8, 4), float64],) {
  %1209 = @func_20393() /* ty=(Tensor[(8, 8, 4), float64],) */;
  %1210 = %1209.0;
  (%1210,)
}

def @func_25351() -> Tensor[(1296), bool] {
  @func_10439() /* ty=Tensor[(1296), bool] */
}

def @func_6698() -> (Tensor[(8, 8, 4), float64],) {
  %1211 = @func_5727() /* ty=(Tensor[(8, 8, 4), float64],) */;
  %1212 = %1211.0;
  (%1212,)
}

def @func_22635() -> uint8 {
  %1213 = @func_19447() /* ty=(uint8, Tensor[(16, 8, 5), float64], Tensor[(1296), bool], Tensor[(936), float64]) */;
  %1213.0
}

def @func_24107() -> (Tensor[(8, 8, 4), float64], Tensor[(1296), bool]) {
  %1214 = @func_17966() /* ty=(Tensor[(8, 8, 4), float64],) */;
  %1215 = %1214.0;
  %1216 = @func_15674() /* ty=Tensor[(1296), bool] */;
  (%1215, %1216)
}

def @func_24354(%var_24311: Tensor[(528, 13), float32]) -> (Tensor[(528, 13), float64], Tensor[(8, 8, 4), float64]) {
  %1217 = @func_24205() /* ty=(Tensor[(1296), bool], Tensor[(264, 2), bool], Tensor[(528, 1), float32], uint8) */;
  %1218 = %1217.2;
  %1219 = cast(%1218, dtype="bool") /* ty=Tensor[(528, 1), bool] */;
  %1220 = cast(%var_24311, dtype="bool") /* ty=Tensor[(528, 13), bool] */;
  %1221 = less_equal(%1219, %1220) /* ty=Tensor[(528, 13), bool] */;
  %1222 = cast(%1221, dtype="float64") /* ty=Tensor[(528, 13), float64] */;
  %1223 = cast(%1218, dtype="float64") /* ty=Tensor[(528, 1), float64] */;
  %1224 = @func_18985() /* ty=(Tensor[(8, 8, 4), float64], Tensor[(1260), float32]) */;
  %1225 = power(%1222, %1223) /* ty=Tensor[(528, 13), float64] */;
  %1226 = %1224.0;
  (%1225, %1226)
}

def @func_23633() -> (Tensor[(8, 8, 4), float64], Tensor[(1296), float64]) {
  %1227 = @func_8261() /* ty=(Tensor[(8, 8, 4), float64], Tensor[(8, 8, 4), int64], Tensor[(8, 8, 4), float64]) */;
  %1228 = %1227.0;
  %1229 = @func_14772() /* ty=Tensor[(1296), float64] */;
  (%1228, %1229)
}

def @func_22573() -> (Tensor[(1296), bool],) {
  %1230 = @func_22318() /* ty=(Tensor[(1296), bool], Tensor[(8, 8, 4), float64], Tensor[(8, 8, 4), float64]) */;
  %1231 = %1230.0;
  (%1231,)
}

def @func_12886(%var_12871: Tensor[(936, 13), uint8]) -> (Tensor[(8, 8, 4), float64], Tensor[(936, 13), bool]) {
  %1232 = @func_10182() /* ty=(Tensor[(8, 8, 4), float64], Tensor[(8, 8, 4), float64]) */;
  %1233 = @func_9397() /* ty=(Tensor[(8, 8, 4), float64], Tensor[(16, 8, 5), float64], Tensor[(936, 1), uint8]) */;
  %1234 = %1233.2;
  %1235 = cast(%1234, dtype="bool") /* ty=Tensor[(936, 1), bool] */;
  %1236 = cast(%var_12871, dtype="bool") /* ty=Tensor[(936, 13), bool] */;
  %1237 = %1232.1;
  %1238 = less(%1235, %1236) /* ty=Tensor[(936, 13), bool] */;
  (%1237, %1238)
}

def @func_25418() -> (Tensor[(8, 8, 4), float64], Tensor[(8, 8, 4), float64], Tensor[(1296), float64]) {
  %1239 = @func_5727() /* ty=(Tensor[(8, 8, 4), float64],) */;
  %1240 = @func_17644() /* ty=(Tensor[(8, 8, 4), float64],) */;
  %1241 = %1239.0;
  %1242 = %1240.0;
  %1243 = @func_13328() /* ty=Tensor[(1296), float64] */;
  (%1241, %1242, %1243)
}

def @func_15792() -> (uint8, Tensor[(120), float64]) {
  %1244 = @func_10231() /* ty=(Tensor[(120), float64], Tensor[(8, 8, 4), float64], Tensor[(1296), float64]) */;
  %1245 = @func_8420() /* ty=uint8 */;
  %1246 = %1244.0;
  (%1245, %1246)
}

def @func_16355() -> (uint8, Tensor[(8, 8, 4), float64], Tensor[(1296), bool], Tensor[(14, 2, 15), int64], Tensor[(5, 6), int64], Tensor[(5, 84), int64]) {
  %1247 = @func_9953() /* ty=(uint8,) */;
  %1248 = @func_8352() /* ty=(Tensor[(8, 8, 4), float64], Tensor[(1296), bool]) */;
  %1249 = cast(meta[relay.Constant][58] /* ty=Tensor[(5, 6), int64] */, dtype="int64") /* ty=Tensor[(5, 6), int64] */;
  %1250 = cast(meta[relay.Constant][59] /* ty=Tensor[(5, 84), int64] */, dtype="int64") /* ty=Tensor[(5, 84), int64] */;
  %1251 = reshape(%1249, newshape=[1, 2, 15]) /* ty=Tensor[(1, 2, 15), int64] */;
  %1252 = reshape(%1250, newshape=[14, 2, 15]) /* ty=Tensor[(14, 2, 15), int64] */;
  %1253 = @func_2943(%1251, %1252) /* ty=(Tensor[(14, 2, 15), int64],) */;
  %1254 = %1247.0;
  %1255 = @func_7399() /* ty=Tensor[(8, 8, 4), float64] */;
  %1256 = %1248.1;
  %1257 = %1253.0;
  (%1254, %1255, %1256, %1257, meta[relay.Constant][58] /* ty=Tensor[(5, 6), int64] */, meta[relay.Constant][59] /* ty=Tensor[(5, 84), int64] */)
}

def @func_8829() -> Tensor[(8, 8, 4), float64] {
  %1258 = @func_7099() /* ty=(Tensor[(8, 8, 4), float64],) */;
  %1258.0
}

def @func_11584(%var_11568: Tensor[(4, 5, 10), bool]) -> (Tensor[(4, 5, 10), bool],) {
  %1259 = cast(meta[relay.Constant][60] /* ty=Tensor[(4, 5, 10), bool] */, dtype="bool") /* ty=Tensor[(4, 5, 10), bool] */;
  %1260 = shape_of(%var_11568, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1261 = cast(%var_11568, dtype="bool") /* ty=Tensor[(4, 5, 10), bool] */;
  %1262 = dyn.reshape(%1259, %1260, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %1263 = logical_and(%1261, %1262) /* ty=Tensor[(4, 5, 10), bool] */;
  (%1263,)
}

def @func_2229(%var_2216: Tensor[(13, 8, 9), uint8]) -> (Tensor[(13, 8, 9), bool], Tensor[(16, 8, 5), float64], Tensor[(640), float64]) {
  %1264 = cast(meta[relay.Constant][61] /* ty=Tensor[(13, 8, 9), uint8] */, dtype="bool") /* ty=Tensor[(13, 8, 9), bool] */;
  %1265 = shape_of(%var_2216, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1266 = cast(%var_2216, dtype="bool") /* ty=Tensor[(13, 8, 9), bool] */;
  %1267 = dyn.reshape(%1264, %1265, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %1268 = cast(meta[relay.Constant][62] /* ty=Tensor[(640), float64] */, dtype="float64") /* ty=Tensor[(640), float64] */;
  %1269 = reshape(%1268, newshape=[16, 8, 5]) /* ty=Tensor[(16, 8, 5), float64] */;
  %1270 = @func_2187(%1269) /* ty=(Tensor[(16, 8, 5), float64],) */;
  %1271 = less_equal(%1266, %1267) /* ty=Tensor[(13, 8, 9), bool] */;
  %1272 = %1270.0;
  (%1271, %1272, meta[relay.Constant][62] /* ty=Tensor[(640), float64] */)
}

def @func_11953(%var_11942: float32, %var_11943: Tensor[(432), float32]) -> (Tensor[(8, 8, 4), float64], Tensor[(9, 4, 12), bool], float32, Tensor[(432), float32]) {
  %1273 = @func_9397() /* ty=(Tensor[(8, 8, 4), float64], Tensor[(16, 8, 5), float64], Tensor[(936, 1), uint8]) */;
  %1274 = cast(%var_11942, dtype="float32") /* ty=float32 */;
  %1275 = cast(%var_11943, dtype="float32") /* ty=Tensor[(432), float32] */;
  %1276 = cast(%var_11943, dtype="float32") /* ty=Tensor[(432), float32] */;
  %1277 = reshape(%1274, newshape=[]) /* ty=float32 */;
  %1278 = reshape(%1275, newshape=[9, 4, 12]) /* ty=Tensor[(9, 4, 12), float32] */;
  %1279 = reshape(%1276, newshape=[9, 4, 12]) /* ty=Tensor[(9, 4, 12), float32] */;
  %1280 = @func_7803(%1277, %1278, %1279) /* ty=(Tensor[(9, 4, 12), bool],) */;
  %1281 = %1273.0;
  %1282 = %1280.0;
  (%1281, %1282, %var_11942, %var_11943)
}

def @func_25824() -> (Tensor[(8, 8, 4), float64],) {
  %1283 = @func_22913() /* ty=Tensor[(8, 8, 4), float64] */;
  (%1283,)
}

def @func_16986() -> Tensor[(8, 8, 4), float64] {
  %1284 = @func_13685() /* ty=(Tensor[(8, 8, 4), float64], Tensor[(8, 8, 4), float64]) */;
  %1284.1
}

def @func_10031() -> (Tensor[(256), float64], Tensor[(1296), float64]) {
  %1285 = @func_7878() /* ty=(Tensor[(8, 8, 4), float64], Tensor[(8, 8, 4), int64], Tensor[(256), float64]) */;
  %1286 = @func_9585() /* ty=(Tensor[(8, 8, 4), int64], Tensor[(8, 8, 4), float64], Tensor[(1296), bool], uint8, Tensor[(8, 8, 4), uint8], Tensor[(1296), float64], Tensor[(2, 5, 12), bool], Tensor[(120), float64], Tensor[(8, 8, 4), bool]) */;
  %1287 = %1285.2;
  %1288 = %1286.5;
  (%1287, %1288)
}

def @func_23799(%var_23752: uint8) -> (Tensor[(8, 8, 4), float64], Tensor[(8, 8, 4), float64], Tensor[(528), float32], Tensor[(1296), float64], Tensor[(256), float64], Tensor[(14, 6, 15), int8]) {
  %1289 = @func_23502() /* ty=(Tensor[(120), float64], Tensor[(8, 8, 4), float64]) */;
  %1290 = @func_20007() /* ty=(Tensor[(8, 8, 4), float64], Tensor[(8, 8, 4), float64]) */;
  %1291 = @func_9094() /* ty=(Tensor[(1296), float64],) */;
  %1292 = @func_7364() /* ty=(Tensor[(8, 8, 4), int64], Tensor[(256), float64]) */;
  %1293 = cast(meta[relay.Constant][63] /* ty=Tensor[(528), float32] */, dtype="float32") /* ty=Tensor[(528), float32] */;
  %1294 = cast(%var_23752, dtype="uint8") /* ty=uint8 */;
  %1295 = reshape(%1293, newshape=[3, 11, 16]) /* ty=Tensor[(3, 11, 16), float32] */;
  %1296 = reshape(%1294, newshape=[]) /* ty=uint8 */;
  %1297 = @func_2471(%1295, %1296) /* ty=(Tensor[(3, 11, 16), float32], Tensor[(14, 6, 15), float32], Tensor[(1260), float32], Tensor[(1260), float32], uint8, Tensor[(75), uint8], Tensor[(14, 6, 15), float32]) */;
  %1298 = %1297.6;
  %1299 = cast(%1298, dtype="int8") /* ty=Tensor[(14, 6, 15), int8] */;
  %1300 = cast(%var_23752, dtype="int8") /* ty=int8 */;
  %1301 = %1289.1;
  %1302 = %1290.1;
  %1303 = %1291.0;
  %1304 = %1292.1;
  %1305 = bitwise_xor(%1299, %1300) /* ty=Tensor[(14, 6, 15), int8] */;
  (%1301, %1302, meta[relay.Constant][63] /* ty=Tensor[(528), float32] */, %1303, %1304, %1305)
}

def @main(%var_27194: Tensor[(12, 2, 3), float32]) -> (Tensor[(12, 2, 3), int64],) {
  %1306 = @func_21264() /* ty=(Tensor[(12, 2, 3), float32], Tensor[(8, 8, 4), float64]) */;
  %1307 = %1306.0;
  %1308 = cast(%var_27194, dtype="int64") /* ty=Tensor[(12, 2, 3), int64] */;
  %1309 = shape_of(%1307, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1310 = cast(%1307, dtype="int64") /* ty=Tensor[(12, 2, 3), int64] */;
  %1311 = dyn.reshape(%1308, %1309, newshape=[]) /* ty=Tensor[(?, ?, ?), int64] */;
  %1312 = bitwise_or(%1310, %1311) /* ty=Tensor[(12, 2, 3), int64] */;
  (%1312,)
}

def @func_14559(%var_14551: int64, %var_14552: Tensor[(9, 4, 7), int64]) -> (Tensor[(9, 4, 7), bool], Tensor[(16, 8, 5), float64], Tensor[(640), float64]) {
  %1313 = cast(%var_14551, dtype="bool") /* ty=bool */;
  %1314 = cast(%var_14552, dtype="bool") /* ty=Tensor[(9, 4, 7), bool] */;
  %1315 = cast(meta[relay.Constant][64] /* ty=Tensor[(640), float64] */, dtype="float64") /* ty=Tensor[(640), float64] */;
  %1316 = reshape(%1315, newshape=[640]) /* ty=Tensor[(640), float64] */;
  %1317 = @func_8209(%1316) /* ty=(Tensor[(8, 8, 4), float64], Tensor[(16, 8, 5), float64], Tensor[(640), float64]) */;
  %1318 = equal(%1313, %1314) /* ty=Tensor[(9, 4, 7), bool] */;
  %1319 = %1317.1;
  (%1318, %1319, meta[relay.Constant][64] /* ty=Tensor[(640), float64] */)
}

def @func_5688() -> Tensor[(8, 8, 4), float64] {
  %1320 = @func_5468() /* ty=(Tensor[(8, 8, 4), float64],) */;
  %1320.0
}

def @func_22545() -> uint8 {
  %1321 = @func_10684() /* ty=(uint8,) */;
  %1321.0
}

def @func_19705() -> (Tensor[(1296), float64], Tensor[(8, 8, 4), float64]) {
  %1322 = @func_16917() /* ty=Tensor[(1296), float64] */;
  %1323 = @func_8829() /* ty=Tensor[(8, 8, 4), float64] */;
  (%1322, %1323)
}

def @func_11111() -> (uint8, Tensor[(1296), float64]) {
  %1324 = @func_9648() /* ty=(Tensor[(1296), float64],) */;
  %1325 = @func_8420() /* ty=uint8 */;
  %1326 = %1324.0;
  (%1325, %1326)
}

def @func_18409() -> Tensor[(8, 8, 4), float64] {
  %1327 = @func_15657() /* ty=(Tensor[(8, 8, 4), float64], Tensor[(8, 8, 4), float64]) */;
  %1327.0
}

def @func_19484() -> (Tensor[(8, 8, 4), float64],) {
  %1328 = @func_6905() /* ty=(Tensor[(8, 8, 4), float64], uint8, Tensor[(528), float32], uint8, Tensor[(8, 8, 4), float64]) */;
  %1329 = %1328.4;
  (%1329,)
}

def @func_12149(%var_12119: Tensor[(1296), float64]) -> Tensor[(1296), float32] {
  %1330 = @func_6295() /* ty=Tensor[(1296), float64] */;
  %1331 = cast(%var_12119, dtype="float32") /* ty=Tensor[(1296), float32] */;
  %1332 = shape_of(%1330, dtype="int32") /* ty=Tensor[(1), int32] */;
  %1333 = cast(%1330, dtype="float32") /* ty=Tensor[(1296), float32] */;
  %1334 = dyn.reshape(%1331, %1332, newshape=[]) /* ty=Tensor[(?), float32] */;
  divide(%1333, %1334) /* ty=Tensor[(1296), float32] */
}

def @func_24857() -> (Tensor[(8, 8, 4), float64], Tensor[(8, 8, 4), float64], Tensor[(8, 8, 4), int32]) {
  %1335 = @func_17774() /* ty=(Tensor[(256), float64], Tensor[(8, 8, 4), float64]) */;
  %1336 = %1335.1;
  %1337 = @func_22878() /* ty=Tensor[(8, 8, 4), float64] */;
  %1338 = @func_21157() /* ty=Tensor[(8, 8, 4), int32] */;
  (%1336, %1337, %1338)
}

def @func_14940() -> (Tensor[(120), float64],) {
  %1339 = @func_9618() /* ty=Tensor[(120), float64] */;
  (%1339,)
}

def @func_20838() -> (Tensor[(8, 8, 4), float64], Tensor[(936, 256), float64]) {
  %1340 = @func_10481() /* ty=(Tensor[(8, 8, 4), float64], Tensor[(8, 8, 4), int64]) */;
  %1341 = @func_9397() /* ty=(Tensor[(8, 8, 4), float64], Tensor[(16, 8, 5), float64], Tensor[(936, 1), uint8]) */;
  %1342 = %1341.2;
  %1343 = @func_13419() /* ty=(Tensor[(9, 12, 12), float32], Tensor[(256), float64]) */;
  %1344 = %1343.1;
  %1345 = cast(%1342, dtype="float64") /* ty=Tensor[(936, 1), float64] */;
  %1346 = cast(%1344, dtype="float64") /* ty=Tensor[(256), float64] */;
  %1347 = floor_mod(%1345, %1346) /* ty=Tensor[(936, 256), float64] */;
  %1348 = cast(%1347, dtype="float64") /* ty=Tensor[(936, 256), float64] */;
  %1349 = cast(%1344, dtype="float64") /* ty=Tensor[(256), float64] */;
  %1350 = %1340.0;
  %1351 = mod(%1348, %1349) /* ty=Tensor[(936, 256), float64] */;
  (%1350, %1351)
}

def @func_22107(%var_22088: Tensor[(528), float32], %var_22092: Tensor[(24), float64]) -> (Tensor[(8, 8, 4), float64], Tensor[(8, 8, 4), float64], Tensor[(528), float32], Tensor[(4, 6, 1), float64], Tensor[(24), float64]) {
  %1352 = @func_6018() /* ty=(Tensor[(8, 8, 4), float64],) */;
  %1353 = cast(%var_22088, dtype="float32") /* ty=Tensor[(528), float32] */;
  %1354 = reshape(%1353, newshape=[528, 1]) /* ty=Tensor[(528, 1), float32] */;
  %1355 = @func_7484(%1354) /* ty=(Tensor[(8, 8, 4), float64], Tensor[(1260), bool], Tensor[(1440), uint16], Tensor[(528, 1), float32], Tensor[(640), float64], Tensor[(14, 6, 15), float32]) */;
  %1356 = cast(%var_22092, dtype="float64") /* ty=Tensor[(24), float64] */;
  %1357 = reshape(%1356, newshape=[4, 6, 1]) /* ty=Tensor[(4, 6, 1), float64] */;
  %1358 = @func_12454(%1357) /* ty=(Tensor[(4, 6, 1), float64],) */;
  %1359 = %1352.0;
  %1360 = %1355.0;
  %1361 = %1358.0;
  (%1359, %1360, %var_22088, %1361, %var_22092)
}

def @func_19584() -> (Tensor[(1296), float64],) {
  %1362 = @func_19149() /* ty=(Tensor[(8, 8, 4), float64], Tensor[(1296), float64]) */;
  %1363 = %1362.1;
  (%1363,)
}

def @func_21233() -> (Tensor[(8, 8, 4), float64], Tensor[(8, 8, 4), float64]) {
  %1364 = @func_16702() /* ty=(Tensor[(8, 8, 4), float64],) */;
  %1365 = @func_16426() /* ty=Tensor[(8, 8, 4), float64] */;
  %1366 = %1364.0;
  (%1365, %1366)
}

def @func_25925() -> (Tensor[(8, 8, 4), float64], Tensor[(8, 8, 4), float64]) {
  %1367 = @func_25443() /* ty=(Tensor[(8, 8, 4), float64],) */;
  %1368 = @func_14410() /* ty=(Tensor[(8, 8, 4), float64],) */;
  %1369 = %1367.0;
  %1370 = %1368.0;
  (%1369, %1370)
}

def @func_2471(%var_2419: Tensor[(3, 11, 16), float32], %var_2458: uint8) -> (Tensor[(3, 11, 16), float32], Tensor[(14, 6, 15), float32], Tensor[(1260), float32], Tensor[(1260), float32], uint8, Tensor[(75), uint8], Tensor[(14, 6, 15), float32]) {
  %1371 = cast(%var_2419, dtype="float32") /* ty=Tensor[(3, 11, 16), float32] */;
  %1372 = cast(meta[relay.Constant][65] /* ty=Tensor[(1260), float32] */, dtype="float32") /* ty=Tensor[(1260), float32] */;
  %1373 = reshape(%1372, newshape=[14, 6, 15]) /* ty=Tensor[(14, 6, 15), float32] */;
  %1374 = @func_963(%1373) /* ty=(Tensor[(14, 6, 15), float32],) */;
  %1375 = cast(%var_2458, dtype="uint8") /* ty=uint8 */;
  %1376 = cast(meta[relay.Constant][66] /* ty=Tensor[(75), uint8] */, dtype="uint8") /* ty=Tensor[(75), uint8] */;
  %1377 = %1374.0;
  %1378 = cast(%1377, dtype="float32") /* ty=Tensor[(14, 6, 15), float32] */;
  %1379 = reshape(%1375, newshape=[]) /* ty=uint8 */;
  %1380 = reshape(%1376, newshape=[15, 1, 5]) /* ty=Tensor[(15, 1, 5), uint8] */;
  %1381 = reshape(%1378, newshape=[1260]) /* ty=Tensor[(1260), float32] */;
  %1382 = @func_1297(%1379, %1380, %1381) /* ty=(Tensor[(15, 1, 5), uint8], Tensor[(14, 6, 15), float32], Tensor[(1260), float32]) */;
  %1383 = cast(%var_2458, dtype="uint8") /* ty=uint8 */;
  %1384 = cast(meta[relay.Constant][66] /* ty=Tensor[(75), uint8] */, dtype="uint8") /* ty=Tensor[(75), uint8] */;
  %1385 = cast(%1377, dtype="float32") /* ty=Tensor[(14, 6, 15), float32] */;
  %1386 = reshape(%1383, newshape=[]) /* ty=uint8 */;
  %1387 = reshape(%1384, newshape=[15, 1, 5]) /* ty=Tensor[(15, 1, 5), uint8] */;
  %1388 = reshape(%1385, newshape=[1260]) /* ty=Tensor[(1260), float32] */;
  %1389 = @func_1297(%1386, %1387, %1388) /* ty=(Tensor[(15, 1, 5), uint8], Tensor[(14, 6, 15), float32], Tensor[(1260), float32]) */;
  %1390 = log10(%1371) /* ty=Tensor[(3, 11, 16), float32] */;
  %1391 = %1382.2;
  %1392 = %1389.1;
  (%1390, %1377, meta[relay.Constant][65] /* ty=Tensor[(1260), float32] */, %1391, %var_2458, meta[relay.Constant][66] /* ty=Tensor[(75), uint8] */, %1392)
}

def @func_25199() -> (Tensor[(1296), bool], Tensor[(1296), float64]) {
  %1393 = @func_10439() /* ty=Tensor[(1296), bool] */;
  %1394 = @func_13550() /* ty=Tensor[(1296), float64] */;
  (%1393, %1394)
}

def @func_20393() -> (Tensor[(8, 8, 4), float64],) {
  %1395 = @func_20165() /* ty=Tensor[(8, 8, 4), float64] */;
  (%1395,)
}

def @func_12567() -> (Tensor[(8, 8, 4), float64], Tensor[(8, 8, 4), float64]) {
  %1396 = @func_6982() /* ty=(Tensor[(8, 8, 4), float64], Tensor[(8, 8, 4), float64]) */;
  %1397 = @func_7099() /* ty=(Tensor[(8, 8, 4), float64],) */;
  %1398 = %1396.0;
  %1399 = %1397.0;
  (%1398, %1399)
}

def @func_15657() -> (Tensor[(8, 8, 4), float64], Tensor[(8, 8, 4), float64]) {
  %1400 = @func_8261() /* ty=(Tensor[(8, 8, 4), float64], Tensor[(8, 8, 4), int64], Tensor[(8, 8, 4), float64]) */;
  %1401 = %1400.2;
  %1402 = @func_14444() /* ty=Tensor[(8, 8, 4), float64] */;
  (%1401, %1402)
}

def @func_6658(%var_6637: Tensor[(8, 8, 4), float64]) -> Tensor[(8, 8, 4), uint8] {
  %1403 = @func_6018() /* ty=(Tensor[(8, 8, 4), float64],) */;
  %1404 = %1403.0;
  %1405 = cast(%var_6637, dtype="uint8") /* ty=Tensor[(8, 8, 4), uint8] */;
  %1406 = shape_of(%1404, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1407 = cast(%1404, dtype="uint8") /* ty=Tensor[(8, 8, 4), uint8] */;
  %1408 = dyn.reshape(%1405, %1406, newshape=[]) /* ty=Tensor[(?, ?, ?), uint8] */;
  bitwise_or(%1407, %1408) /* ty=Tensor[(8, 8, 4), uint8] */
}

def @func_23672() -> (Tensor[(8, 8, 4), float64],) {
  %1409 = @func_22913() /* ty=Tensor[(8, 8, 4), float64] */;
  (%1409,)
}

def @func_18863(%var_18807: Tensor[(5, 14, 14), uint32]) -> (Tensor[(5, 14, 14), uint32], Tensor[(8, 8, 4), float64], Tensor[(8, 8, 4), float64], Tensor[(2, 5, 12), bool], Tensor[(120), float64], Tensor[(8, 8, 4), float64]) {
  %1410 = cast(%var_18807, dtype="uint32") /* ty=Tensor[(5, 14, 14), uint32] */;
  %1411 = shape_of(meta[relay.Constant][67] /* ty=Tensor[(5, 14, 14), uint32] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1412 = cast(meta[relay.Constant][67] /* ty=Tensor[(5, 14, 14), uint32] */, dtype="uint32") /* ty=Tensor[(5, 14, 14), uint32] */;
  %1413 = dyn.reshape(%1410, %1411, newshape=[]) /* ty=Tensor[(?, ?, ?), uint32] */;
  %1414 = @func_8261() /* ty=(Tensor[(8, 8, 4), float64], Tensor[(8, 8, 4), int64], Tensor[(8, 8, 4), float64]) */;
  %1415 = @func_15851() /* ty=(Tensor[(8, 8, 4), float64], Tensor[(8, 8, 4), uint8], Tensor[(8, 8, 4), int32]) */;
  %1416 = cast(meta[relay.Constant][68] /* ty=Tensor[(120), float64] */, dtype="float64") /* ty=Tensor[(120), float64] */;
  %1417 = cast(meta[relay.Constant][68] /* ty=Tensor[(120), float64] */, dtype="float64") /* ty=Tensor[(120), float64] */;
  %1418 = reshape(%1416, newshape=[2, 5, 12]) /* ty=Tensor[(2, 5, 12), float64] */;
  %1419 = reshape(%1417, newshape=[2, 5, 12]) /* ty=Tensor[(2, 5, 12), float64] */;
  %1420 = @func_8852(%1418, %1419) /* ty=(Tensor[(2, 5, 12), bool],) */;
  %1421 = @func_7099() /* ty=(Tensor[(8, 8, 4), float64],) */;
  %1422 = bitwise_and(%1412, %1413) /* ty=Tensor[(5, 14, 14), uint32] */;
  %1423 = %1414.0;
  %1424 = %1415.0;
  %1425 = %1420.0;
  %1426 = %1421.0;
  (%1422, %1423, %1424, %1425, meta[relay.Constant][68] /* ty=Tensor[(120), float64] */, %1426)
}

def @func_13789() -> (Tensor[(8, 8, 4), float64], Tensor[(8, 8, 4), float64]) {
  %1427 = @func_8745() /* ty=(Tensor[(8, 8, 4), float64], Tensor[(8, 8, 4), float64]) */;
  %1428 = @func_7099() /* ty=(Tensor[(8, 8, 4), float64],) */;
  %1429 = %1427.0;
  %1430 = %1428.0;
  (%1429, %1430)
}

def @func_8261() -> (Tensor[(8, 8, 4), float64], Tensor[(8, 8, 4), int64], Tensor[(8, 8, 4), float64]) {
  %1431 = @func_6452() /* ty=Tensor[(8, 8, 4), float64] */;
  %1432 = cast(%1431, dtype="float64") /* ty=Tensor[(8, 8, 4), float64] */;
  %1433 = reshape(%1432, newshape=[8, 8, 4]) /* ty=Tensor[(8, 8, 4), float64] */;
  %1434 = @func_6982() /* ty=(Tensor[(8, 8, 4), float64], Tensor[(8, 8, 4), float64]) */;
  %1435 = @func_5643(%1433) /* ty=Tensor[(8, 8, 4), int64] */;
  %1436 = %1434.1;
  (%1431, %1435, %1436)
}

def @func_13355() -> (Tensor[(8, 8, 4), float64], Tensor[(1296), float64]) {
  %1437 = @func_10231() /* ty=(Tensor[(120), float64], Tensor[(8, 8, 4), float64], Tensor[(1296), float64]) */;
  %1438 = @func_10517() /* ty=Tensor[(8, 8, 4), float64] */;
  %1439 = %1437.2;
  (%1438, %1439)
}

def @func_8352() -> (Tensor[(8, 8, 4), float64], Tensor[(1296), bool]) {
  %1440 = @func_7168() /* ty=Tensor[(8, 8, 4), float64] */;
  %1441 = @func_6538() /* ty=Tensor[(1296), bool] */;
  (%1440, %1441)
}

def @func_16116() -> (Tensor[(1296), bool], Tensor[(8, 8, 4), float64]) {
  %1442 = @func_14112() /* ty=Tensor[(1296), bool] */;
  %1443 = @func_15340() /* ty=Tensor[(8, 8, 4), float64] */;
  (%1442, %1443)
}

def @func_26425() -> uint8 {
  %1444 = @func_10684() /* ty=(uint8,) */;
  %1444.0
}

def @func_17076() -> (Tensor[(1296), float64],) {
  %1445 = @func_16259() /* ty=(Tensor[(1296), float64],) */;
  %1446 = %1445.0;
  (%1446,)
}

def @func_19149() -> (Tensor[(8, 8, 4), float64], Tensor[(1296), float64]) {
  %1447 = @func_6982() /* ty=(Tensor[(8, 8, 4), float64], Tensor[(8, 8, 4), float64]) */;
  %1448 = @func_10231() /* ty=(Tensor[(120), float64], Tensor[(8, 8, 4), float64], Tensor[(1296), float64]) */;
  %1449 = %1447.1;
  %1450 = %1448.2;
  (%1449, %1450)
}

def @func_25781() -> (Tensor[(528, 1), float32],) {
  %1451 = @func_24205() /* ty=(Tensor[(1296), bool], Tensor[(264, 2), bool], Tensor[(528, 1), float32], uint8) */;
  %1452 = %1451.2;
  (%1452,)
}

def @func_16664() -> (Tensor[(8, 8, 4), float64],) {
  %1453 = @func_10626() /* ty=(Tensor[(8, 8, 4), int64], Tensor[(8, 8, 4), float64]) */;
  %1454 = %1453.1;
  (%1454,)
}

def @func_21264() -> (Tensor[(12, 2, 3), float32], Tensor[(8, 8, 4), float64]) {
  %1455 = cast(meta[relay.Constant][69] /* ty=Tensor[(12, 2, 3), float32] */, dtype="float32") /* ty=Tensor[(12, 2, 3), float32] */;
  %1456 = @func_20393() /* ty=(Tensor[(8, 8, 4), float64],) */;
  %1457 = asin(%1455) /* ty=Tensor[(12, 2, 3), float32] */;
  %1458 = %1456.0;
  (%1457, %1458)
}

def @func_26569(%var_26562: Tensor[(768), float32], %var_26566: Tensor[(1296), float64]) -> (Tensor[(8, 8, 4), float64], Tensor[(16, 12, 4), float32], Tensor[(768), float32], Tensor[(1296), float32], Tensor[(1296), float64]) {
  %1459 = cast(%var_26562, dtype="float32") /* ty=Tensor[(768), float32] */;
  %1460 = reshape(%1459, newshape=[16, 12, 4]) /* ty=Tensor[(16, 12, 4), float32] */;
  %1461 = cast(%var_26566, dtype="float64") /* ty=Tensor[(1296), float64] */;
  %1462 = reshape(%1461, newshape=[1296]) /* ty=Tensor[(1296), float64] */;
  %1463 = @func_11472() /* ty=Tensor[(8, 8, 4), float64] */;
  %1464 = @func_23662(%1460) /* ty=Tensor[(16, 12, 4), float32] */;
  %1465 = @func_12149(%1462) /* ty=Tensor[(1296), float32] */;
  (%1463, %1464, %var_26562, %1465, %var_26566)
}

def @func_22657() -> (Tensor[(8, 8, 4), float64],) {
  %1466 = @func_7504() /* ty=(Tensor[(8, 8, 4), float64],) */;
  %1467 = %1466.0;
  (%1467,)
}

def @func_22471() -> (Tensor[(1296), float64],) {
  %1468 = @func_19886() /* ty=(Tensor[(1296), float64],) */;
  %1469 = %1468.0;
  (%1469,)
}

def @func_22878() -> Tensor[(8, 8, 4), float64] {
  %1470 = @func_19205() /* ty=(Tensor[(256), float64], Tensor[(8, 8, 4), float64]) */;
  %1470.1
}

def @func_10231() -> (Tensor[(120), float64], Tensor[(8, 8, 4), float64], Tensor[(1296), float64]) {
  %1471 = @func_9111() /* ty=(Tensor[(4, 7, 5), float32], Tensor[(2, 5, 12), bool], Tensor[(120), float64]) */;
  %1472 = @func_7099() /* ty=(Tensor[(8, 8, 4), float64],) */;
  %1473 = %1472.0;
  %1474 = cast(%1473, dtype="float64") /* ty=Tensor[(8, 8, 4), float64] */;
  %1475 = reshape(%1474, newshape=[256]) /* ty=Tensor[(256), float64] */;
  %1476 = @func_10085(%1475) /* ty=(Tensor[(1296), float64], Tensor[(1296), float64], Tensor[(8, 8, 4), int32], Tensor[(256), float64]) */;
  %1477 = %1471.2;
  %1478 = %1476.1;
  (%1477, %1473, %1478)
}

def @func_7816() -> (Tensor[(8, 8, 4), float64], Tensor[(8, 8, 4), int32]) {
  %1479 = @func_5468() /* ty=(Tensor[(8, 8, 4), float64],) */;
  %1480 = %1479.0;
  %1481 = cast(%1480, dtype="float64") /* ty=Tensor[(8, 8, 4), float64] */;
  %1482 = reshape(%1481, newshape=[8, 8, 4]) /* ty=Tensor[(8, 8, 4), float64] */;
  %1483 = @func_6833(%1482) /* ty=Tensor[(8, 8, 4), int32] */;
  (%1480, %1483)
}

def @func_24578(%var_24542: Tensor[(4, 4, 3), int16], %var_24564: Tensor[(5, 6), int64]) -> (Tensor[(4, 4, 3), int16], Tensor[(4, 4, 3), float64], Tensor[(4, 4, 3), float32], Tensor[(8, 8, 4), float64], Tensor[(5, 6), int64], Tensor[(528), float32]) {
  %1484 = cast(%var_24542, dtype="int16") /* ty=Tensor[(4, 4, 3), int16] */;
  %1485 = shape_of(meta[relay.Constant][70] /* ty=Tensor[(4, 4, 3), int16] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1486 = cast(meta[relay.Constant][70] /* ty=Tensor[(4, 4, 3), int16] */, dtype="int16") /* ty=Tensor[(4, 4, 3), int16] */;
  %1487 = dyn.reshape(%1484, %1485, newshape=[]) /* ty=Tensor[(?, ?, ?), int16] */;
  %1488 = cast(meta[relay.Constant][70] /* ty=Tensor[(4, 4, 3), int16] */, dtype="float64") /* ty=Tensor[(4, 4, 3), float64] */;
  %1489 = cast(meta[relay.Constant][70] /* ty=Tensor[(4, 4, 3), int16] */, dtype="float32") /* ty=Tensor[(4, 4, 3), float32] */;
  %1490 = cast(%var_24564, dtype="int64") /* ty=Tensor[(5, 6), int64] */;
  %1491 = cast(meta[relay.Constant][71] /* ty=Tensor[(528), float32] */, dtype="float32") /* ty=Tensor[(528), float32] */;
  %1492 = reshape(%1490, newshape=[30]) /* ty=Tensor[(30), int64] */;
  %1493 = reshape(%1491, newshape=[528]) /* ty=Tensor[(528), float32] */;
  %1494 = @func_5932(%1492, %1493) /* ty=(Tensor[(8, 8, 4), float64], Tensor[(14, 2, 15), int64], Tensor[(30), int64], Tensor[(420), int64], Tensor[(8, 8, 4), bool], Tensor[(14, 6, 15), float32], Tensor[(528), float32], uint8) */;
  %1495 = right_shift(%1486, %1487) /* ty=Tensor[(4, 4, 3), int16] */;
  %1496 = acos(%1488) /* ty=Tensor[(4, 4, 3), float64] */;
  %1497 = atanh(%1489) /* ty=Tensor[(4, 4, 3), float32] */;
  %1498 = %1494.0;
  (%1495, %1496, %1497, %1498, %var_24564, meta[relay.Constant][71] /* ty=Tensor[(528), float32] */)
}

def @func_27132(%var_27126: Tensor[(1260), float64]) -> (Tensor[(256), float64], Tensor[(12, 15, 7), float64], Tensor[(1260), float64], Tensor[(8, 8, 4), float64]) {
  %1499 = @func_7878() /* ty=(Tensor[(8, 8, 4), float64], Tensor[(8, 8, 4), int64], Tensor[(256), float64]) */;
  %1500 = cast(%var_27126, dtype="float64") /* ty=Tensor[(1260), float64] */;
  %1501 = cast(%var_27126, dtype="float64") /* ty=Tensor[(1260), float64] */;
  %1502 = reshape(%1500, newshape=[12, 15, 7]) /* ty=Tensor[(12, 15, 7), float64] */;
  %1503 = reshape(%1501, newshape=[12, 15, 7]) /* ty=Tensor[(12, 15, 7), float64] */;
  %1504 = @func_10865() /* ty=(Tensor[(8, 8, 4), float64], Tensor[(1296), bool], Tensor[(256), float64], Tensor[(8, 8, 4), float64], uint8) */;
  %1505 = %1499.2;
  %1506 = @func_7075(%1502, %1503) /* ty=Tensor[(12, 15, 7), float64] */;
  %1507 = %1504.3;
  (%1505, %1506, %var_27126, %1507)
}

def @func_6452() -> Tensor[(8, 8, 4), float64] {
  @func_5807() /* ty=Tensor[(8, 8, 4), float64] */
}

def @func_4543(%var_4535: Tensor[(6, 7, 14), uint8]) -> (Tensor[(6, 7, 14), float64],) {
  %1508 = cast(%var_4535, dtype="bool") /* ty=Tensor[(6, 7, 14), bool] */;
  %1509 = shape_of(meta[relay.Constant][72] /* ty=Tensor[(6, 7, 14), uint8] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1510 = cast(meta[relay.Constant][72] /* ty=Tensor[(6, 7, 14), uint8] */, dtype="bool") /* ty=Tensor[(6, 7, 14), bool] */;
  %1511 = dyn.reshape(%1508, %1509, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %1512 = greater_equal(%1510, %1511) /* ty=Tensor[(6, 7, 14), bool] */;
  %1513 = cast(%1512, dtype="float64") /* ty=Tensor[(6, 7, 14), float64] */;
  %1514 = sigmoid(%1513) /* ty=Tensor[(6, 7, 14), float64] */;
  (%1514,)
}

def @func_15674() -> Tensor[(1296), bool] {
  %1515 = @func_14720() /* ty=(Tensor[(8, 8, 4), float64], Tensor[(1296), float64], Tensor[(1296), bool], Tensor[(4, 5, 10), bool], Tensor[(200), bool], Tensor[(8, 8, 4), float64]) */;
  %1515.2
}

def @func_14444() -> Tensor[(8, 8, 4), float64] {
  %1516 = @func_8745() /* ty=(Tensor[(8, 8, 4), float64], Tensor[(8, 8, 4), float64]) */;
  %1516.1
}

def @func_6833(%var_6806: Tensor[(8, 8, 4), float64]) -> Tensor[(8, 8, 4), int32] {
  %1517 = @func_5468() /* ty=(Tensor[(8, 8, 4), float64],) */;
  %1518 = %1517.0;
  %1519 = cast(%var_6806, dtype="int32") /* ty=Tensor[(8, 8, 4), int32] */;
  %1520 = shape_of(%1518, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1521 = cast(%1518, dtype="int32") /* ty=Tensor[(8, 8, 4), int32] */;
  %1522 = dyn.reshape(%1519, %1520, newshape=[]) /* ty=Tensor[(?, ?, ?), int32] */;
  left_shift(%1521, %1522) /* ty=Tensor[(8, 8, 4), int32] */
}

def @func_14282() -> (Tensor[(256), float64],) {
  %1523 = @func_7364() /* ty=(Tensor[(8, 8, 4), int64], Tensor[(256), float64]) */;
  %1524 = %1523.1;
  (%1524,)
}

def @func_19404() -> (uint8, Tensor[(256), float64], Tensor[(8, 8, 4), float64], Tensor[(256), float64]) {
  %1525 = @func_16355() /* ty=(uint8, Tensor[(8, 8, 4), float64], Tensor[(1296), bool], Tensor[(14, 2, 15), int64], Tensor[(5, 6), int64], Tensor[(5, 84), int64]) */;
  %1526 = @func_13419() /* ty=(Tensor[(9, 12, 12), float32], Tensor[(256), float64]) */;
  %1527 = @func_16664() /* ty=(Tensor[(8, 8, 4), float64],) */;
  %1528 = @func_19299() /* ty=(Tensor[(256), float64],) */;
  %1529 = %1525.0;
  %1530 = %1526.1;
  %1531 = %1527.0;
  %1532 = %1528.0;
  (%1529, %1530, %1531, %1532)
}

def @func_26627() -> Tensor[(8, 8, 4), float64] {
  @func_18709() /* ty=Tensor[(8, 8, 4), float64] */
}

def @func_9155(%var_9151: Tensor[(528), float32]) -> (Tensor[(1296), bool], Tensor[(8, 8, 4), float64], Tensor[(256), float64], Tensor[(528), float32]) {
  %1533 = @func_8809() /* ty=(Tensor[(1296), bool],) */;
  %1534 = cast(%var_9151, dtype="float32") /* ty=Tensor[(528), float32] */;
  %1535 = reshape(%1534, newshape=[1, 528]) /* ty=Tensor[(1, 528), float32] */;
  %1536 = @func_6780(%1535) /* ty=(Tensor[(256), float64], Tensor[(1296), bool], Tensor[(8, 8, 4), float64], Tensor[(1, 528), float32], Tensor[(8, 8, 4), int64]) */;
  %1537 = %1533.0;
  %1538 = @func_7342() /* ty=Tensor[(8, 8, 4), float64] */;
  %1539 = %1536.0;
  (%1537, %1538, %1539, %var_9151)
}

def @func_6295() -> Tensor[(1296), float64] {
  %1540 = @func_6257() /* ty=(Tensor[(1296), float64],) */;
  %1540.0
}

def @func_25638() -> (Tensor[(256), float64],) {
  %1541 = @func_19299() /* ty=(Tensor[(256), float64],) */;
  %1542 = %1541.0;
  (%1542,)
}

def @func_8448() -> (Tensor[(1296), bool], Tensor[(1296), bool]) {
  %1543 = @func_6366() /* ty=(Tensor[(1296), bool], Tensor[(8, 8, 4), int64], Tensor[(256), float64]) */;
  %1544 = @func_6538() /* ty=Tensor[(1296), bool] */;
  %1545 = %1543.0;
  (%1544, %1545)
}

def @func_8936() -> Tensor[(8, 8, 4), float64] {
  @func_7342() /* ty=Tensor[(8, 8, 4), float64] */
}

def @func_21852() -> (uint8, Tensor[(256), float64]) {
  %1546 = @func_19205() /* ty=(Tensor[(256), float64], Tensor[(8, 8, 4), float64]) */;
  %1547 = @func_18328() /* ty=uint8 */;
  %1548 = %1546.0;
  (%1547, %1548)
}

def @func_14455() -> (Tensor[(256), float64],) {
  %1549 = @func_13110() /* ty=(Tensor[(8, 8, 4), int64], Tensor[(256), float64], Tensor[(1296), float64], Tensor[(8, 8, 4), float64]) */;
  %1550 = %1549.1;
  (%1550,)
}

def @func_25267() -> (Tensor[(8, 8, 4), float64],) {
  %1551 = @func_14720() /* ty=(Tensor[(8, 8, 4), float64], Tensor[(1296), float64], Tensor[(1296), bool], Tensor[(4, 5, 10), bool], Tensor[(200), bool], Tensor[(8, 8, 4), float64]) */;
  %1552 = %1551.0;
  (%1552,)
}

def @func_26672() -> (Tensor[(256), float64], Tensor[(1296), float64], Tensor[(8, 8, 4), float64]) {
  %1553 = @func_25638() /* ty=(Tensor[(256), float64],) */;
  %1554 = @func_17303() /* ty=(Tensor[(8, 8, 4), float64], Tensor[(1296), float64]) */;
  %1555 = @func_23946() /* ty=(Tensor[(8, 8, 4), float64],) */;
  %1556 = %1553.0;
  %1557 = %1554.1;
  %1558 = %1555.0;
  (%1556, %1557, %1558)
}

def @func_14973() -> Tensor[(8, 8, 4), float64] {
  %1559 = @func_8352() /* ty=(Tensor[(8, 8, 4), float64], Tensor[(1296), bool]) */;
  %1559.0
}

def @func_17303() -> (Tensor[(8, 8, 4), float64], Tensor[(1296), float64]) {
  %1560 = @func_15517() /* ty=(Tensor[(8, 8, 4), float64], Tensor[(1296), float64]) */;
  %1561 = @func_8971() /* ty=(Tensor[(1296), float64],) */;
  %1562 = %1560.0;
  %1563 = %1561.0;
  (%1562, %1563)
}

def @func_15833() -> Tensor[(256), float64] {
  %1564 = @func_10031() /* ty=(Tensor[(256), float64], Tensor[(1296), float64]) */;
  %1564.0
}

def @func_24620() -> (Tensor[(8, 8, 4), float64],) {
  %1565 = @func_14410() /* ty=(Tensor[(8, 8, 4), float64],) */;
  %1566 = %1565.0;
  (%1566,)
}

def @func_14122() -> (Tensor[(8, 8, 4), float64],) {
  %1567 = @func_7342() /* ty=Tensor[(8, 8, 4), float64] */;
  (%1567,)
}

def @func_12511() -> (Tensor[(8, 8, 4), float64], uint8) {
  %1568 = @func_6905() /* ty=(Tensor[(8, 8, 4), float64], uint8, Tensor[(528), float32], uint8, Tensor[(8, 8, 4), float64]) */;
  %1569 = @func_7168() /* ty=Tensor[(8, 8, 4), float64] */;
  %1570 = %1568.3;
  (%1569, %1570)
}

def @func_23593(%var_23577: Tensor[(120), float64]) -> (Tensor[(1296), float64], Tensor[(2, 5, 12), bool], Tensor[(120), float64]) {
  %1571 = cast(%var_23577, dtype="float64") /* ty=Tensor[(120), float64] */;
  %1572 = cast(%var_23577, dtype="float64") /* ty=Tensor[(120), float64] */;
  %1573 = reshape(%1571, newshape=[2, 5, 12]) /* ty=Tensor[(2, 5, 12), float64] */;
  %1574 = reshape(%1572, newshape=[2, 5, 12]) /* ty=Tensor[(2, 5, 12), float64] */;
  %1575 = @func_8852(%1573, %1574) /* ty=(Tensor[(2, 5, 12), bool],) */;
  %1576 = @func_14772() /* ty=Tensor[(1296), float64] */;
  %1577 = %1575.0;
  (%1576, %1577, %var_23577)
}

def @func_23273() -> (uint8, uint8) {
  %1578 = @func_6905() /* ty=(Tensor[(8, 8, 4), float64], uint8, Tensor[(528), float32], uint8, Tensor[(8, 8, 4), float64]) */;
  %1579 = %1578.3;
  %1580 = @func_22635() /* ty=uint8 */;
  (%1579, %1580)
}

def @func_24464(%var_24455: Tensor[(528), float32]) -> (Tensor[(8, 8, 4), float64], Tensor[(120), float64], Tensor[(8, 8, 4), float64], Tensor[(640), float64], Tensor[(528), float32]) {
  %1581 = @func_23633() /* ty=(Tensor[(8, 8, 4), float64], Tensor[(1296), float64]) */;
  %1582 = @func_10231() /* ty=(Tensor[(120), float64], Tensor[(8, 8, 4), float64], Tensor[(1296), float64]) */;
  %1583 = @func_20415() /* ty=(Tensor[(8, 8, 4), float64],) */;
  %1584 = cast(%var_24455, dtype="float32") /* ty=Tensor[(528), float32] */;
  %1585 = reshape(%1584, newshape=[528, 1]) /* ty=Tensor[(528, 1), float32] */;
  %1586 = @func_7484(%1585) /* ty=(Tensor[(8, 8, 4), float64], Tensor[(1260), bool], Tensor[(1440), uint16], Tensor[(528, 1), float32], Tensor[(640), float64], Tensor[(14, 6, 15), float32]) */;
  %1587 = %1581.0;
  %1588 = %1582.0;
  %1589 = %1583.0;
  %1590 = %1586.4;
  (%1587, %1588, %1589, %1590, %var_24455)
}

def @func_12860() -> (Tensor[(8, 8, 4), float64],) {
  %1591 = @func_8745() /* ty=(Tensor[(8, 8, 4), float64], Tensor[(8, 8, 4), float64]) */;
  %1592 = %1591.0;
  (%1592,)
}

def @func_9094() -> (Tensor[(1296), float64],) {
  %1593 = @func_6295() /* ty=Tensor[(1296), float64] */;
  (%1593,)
}

def @func_26719() -> (uint8, Tensor[(1296), float64], Tensor[(8, 8, 4), uint8]) {
  %1594 = @func_8971() /* ty=(Tensor[(1296), float64],) */;
  %1595 = @func_25317() /* ty=(Tensor[(8, 8, 4), uint8],) */;
  %1596 = @func_20457() /* ty=uint8 */;
  %1597 = %1594.0;
  %1598 = %1595.0;
  (%1596, %1597, %1598)
}

def @func_9648() -> (Tensor[(1296), float64],) {
  %1599 = @func_7595() /* ty=(Tensor[(1296), float64], Tensor[(8, 8, 4), float64], Tensor[(8, 8, 4), uint8]) */;
  %1600 = %1599.0;
  (%1600,)
}

def @func_12034(%var_12016: Tensor[(528), float32], %var_12028: Tensor[(1296), bool]) -> (Tensor[(8, 8, 4), float64], Tensor[(8, 8, 4), float64], Tensor[(528), float32], Tensor[(1296), bool]) {
  %1601 = @func_11387() /* ty=(Tensor[(8, 8, 4), float64], Tensor[(8, 8, 4), float64]) */;
  %1602 = cast(%var_12016, dtype="float32") /* ty=Tensor[(528), float32] */;
  %1603 = reshape(%1602, newshape=[528]) /* ty=Tensor[(528), float32] */;
  %1604 = @func_9155(%1603) /* ty=(Tensor[(1296), bool], Tensor[(8, 8, 4), float64], Tensor[(256), float64], Tensor[(528), float32]) */;
  %1605 = %1604.0;
  %1606 = cast(%var_12028, dtype="bool") /* ty=Tensor[(1296), bool] */;
  %1607 = shape_of(%1605, dtype="int32") /* ty=Tensor[(1), int32] */;
  %1608 = cast(%1605, dtype="bool") /* ty=Tensor[(1296), bool] */;
  %1609 = dyn.reshape(%1606, %1607, newshape=[]) /* ty=Tensor[(?), bool] */;
  %1610 = @func_7342() /* ty=Tensor[(8, 8, 4), float64] */;
  %1611 = %1601.1;
  %1612 = equal(%1608, %1609) /* ty=Tensor[(1296), bool] */;
  (%1610, %1611, %var_12016, %1612)
}

def @func_19933() -> (Tensor[(1296), float64], Tensor[(8, 8, 4), float64], Tensor[(1296), float64]) {
  %1613 = @func_19584() /* ty=(Tensor[(1296), float64],) */;
  %1614 = %1613.0;
  %1615 = @func_14391() /* ty=Tensor[(8, 8, 4), float64] */;
  %1616 = @func_8571() /* ty=Tensor[(1296), float64] */;
  (%1614, %1615, %1616)
}

def @func_5807() -> Tensor[(8, 8, 4), float64] {
  @func_5688() /* ty=Tensor[(8, 8, 4), float64] */
}

def @func_14156() -> (uint8, Tensor[(8, 8, 4), float64]) {
  %1617 = @func_10684() /* ty=(uint8,) */;
  %1618 = %1617.0;
  %1619 = @func_10517() /* ty=Tensor[(8, 8, 4), float64] */;
  (%1618, %1619)
}

def @func_20165() -> Tensor[(8, 8, 4), float64] {
  %1620 = @func_20007() /* ty=(Tensor[(8, 8, 4), float64], Tensor[(8, 8, 4), float64]) */;
  %1620.1
}

def @func_22753() -> (Tensor[(8, 8, 4), float64],) {
  %1621 = @func_5807() /* ty=Tensor[(8, 8, 4), float64] */;
  (%1621,)
}

def @func_23946() -> (Tensor[(8, 8, 4), float64],) {
  %1622 = @func_8829() /* ty=Tensor[(8, 8, 4), float64] */;
  (%1622,)
}

def @func_24383() -> Tensor[(256), float64] {
  %1623 = @func_14282() /* ty=(Tensor[(256), float64],) */;
  %1623.0
}

def @func_8515() -> Tensor[(8, 8, 4), float64] {
  %1624 = @func_7504() /* ty=(Tensor[(8, 8, 4), float64],) */;
  %1624.0
}

def @func_9759() -> (Tensor[(8, 8, 4), float64],) {
  %1625 = @func_6982() /* ty=(Tensor[(8, 8, 4), float64], Tensor[(8, 8, 4), float64]) */;
  %1626 = %1625.1;
  (%1626,)
}

def @func_24183(%var_24137: Tensor[(1440), uint16]) -> (Tensor[(1296), float64], Tensor[(16, 8, 5), float64], Tensor[(1440), uint16], Tensor[(528), float32], Tensor[(640), float64], Tensor[(256), float64], Tensor[(8, 8, 4), float64], Tensor[(980), uint32], Tensor[(8, 8, 4), float64], Tensor[(6, 7, 14), float64]) {
  %1627 = @func_19149() /* ty=(Tensor[(8, 8, 4), float64], Tensor[(1296), float64]) */;
  %1628 = cast(%var_24137, dtype="uint16") /* ty=Tensor[(1440), uint16] */;
  %1629 = cast(%var_24137, dtype="uint16") /* ty=Tensor[(1440), uint16] */;
  %1630 = cast(meta[relay.Constant][73] /* ty=Tensor[(528), float32] */, dtype="float32") /* ty=Tensor[(528), float32] */;
  %1631 = cast(meta[relay.Constant][74] /* ty=Tensor[(640), float64] */, dtype="float64") /* ty=Tensor[(640), float64] */;
  %1632 = reshape(%1628, newshape=[16, 15, 6]) /* ty=Tensor[(16, 15, 6), uint16] */;
  %1633 = reshape(%1629, newshape=[16, 15, 6]) /* ty=Tensor[(16, 15, 6), uint16] */;
  %1634 = reshape(%1630, newshape=[528]) /* ty=Tensor[(528), float32] */;
  %1635 = reshape(%1631, newshape=[640]) /* ty=Tensor[(640), float64] */;
  %1636 = @func_3760(%1632, %1633, %1634, %1635) /* ty=(Tensor[(16, 15, 6), uint16], Tensor[(528), float32], uint8, Tensor[(16, 15, 6), bool], Tensor[(16, 8, 5), float64], Tensor[(640), float64], Tensor[(14, 6, 15), float32], Tensor[(9, 12, 12), float32], Tensor[(1296), float64], Tensor[(1260), bool], Tensor[(3, 11, 16), float32]) */;
  %1637 = @func_7364() /* ty=(Tensor[(8, 8, 4), int64], Tensor[(256), float64]) */;
  %1638 = cast(meta[relay.Constant][75] /* ty=Tensor[(980), uint32] */, dtype="uint32") /* ty=Tensor[(980), uint32] */;
  %1639 = reshape(%1638, newshape=[5, 14, 14]) /* ty=Tensor[(5, 14, 14), uint32] */;
  %1640 = @func_18863(%1639) /* ty=(Tensor[(5, 14, 14), uint32], Tensor[(8, 8, 4), float64], Tensor[(8, 8, 4), float64], Tensor[(2, 5, 12), bool], Tensor[(120), float64], Tensor[(8, 8, 4), float64]) */;
  %1641 = @func_21736() /* ty=(uint8, Tensor[(8, 8, 4), float64]) */;
  %1642 = @func_6176() /* ty=(Tensor[(8, 8, 4), float64], Tensor[(6, 7, 14), float64], Tensor[(588), uint8], Tensor[(8, 8, 4), float64], Tensor[(9, 12, 12), float32], Tensor[(1296), float64]) */;
  %1643 = %1627.1;
  %1644 = %1636.4;
  %1645 = %1637.1;
  %1646 = %1640.1;
  %1647 = %1641.1;
  %1648 = %1642.1;
  (%1643, %1644, %var_24137, meta[relay.Constant][73] /* ty=Tensor[(528), float32] */, meta[relay.Constant][74] /* ty=Tensor[(640), float64] */, %1645, %1646, meta[relay.Constant][75] /* ty=Tensor[(980), uint32] */, %1647, %1648)
}

def @func_13898() -> (Tensor[(8, 8, 4), float64], Tensor[(8, 8, 4), int32]) {
  %1649 = @func_5468() /* ty=(Tensor[(8, 8, 4), float64],) */;
  %1650 = %1649.0;
  %1651 = cast(%1650, dtype="float64") /* ty=Tensor[(8, 8, 4), float64] */;
  %1652 = reshape(%1651, newshape=[256]) /* ty=Tensor[(256), float64] */;
  %1653 = @func_10085(%1652) /* ty=(Tensor[(1296), float64], Tensor[(1296), float64], Tensor[(8, 8, 4), int32], Tensor[(256), float64]) */;
  %1654 = %1653.2;
  (%1650, %1654)
}

def @func_2887(%var_2867: Tensor[(9, 12, 12), float64]) -> Tensor[(9, 12, 12), float32] {
  %1655 = cast(%var_2867, dtype="float64") /* ty=Tensor[(9, 12, 12), float64] */;
  %1656 = erf(%1655) /* ty=Tensor[(9, 12, 12), float64] */;
  %1657 = cast(%var_2867, dtype="float32") /* ty=Tensor[(9, 12, 12), float32] */;
  %1658 = shape_of(%1656, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1659 = cast(%1656, dtype="float32") /* ty=Tensor[(9, 12, 12), float32] */;
  %1660 = dyn.reshape(%1657, %1658, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  mod(%1659, %1660) /* ty=Tensor[(9, 12, 12), float32] */
}

def @func_25298(%var_25296: Tensor[(1260), float32]) -> (Tensor[(1296), bool], Tensor[(30), float32], Tensor[(1155), int8], Tensor[(1260), float32]) {
  %1661 = @func_22053() /* ty=(Tensor[(1296), bool], Tensor[(256), float64]) */;
  %1662 = cast(meta[relay.Constant][76] /* ty=Tensor[(1155), int8] */, dtype="int8") /* ty=Tensor[(1155), int8] */;
  %1663 = cast(%var_25296, dtype="float32") /* ty=Tensor[(1260), float32] */;
  %1664 = %1661.0;
  %1665 = cast(%1664, dtype="bool") /* ty=Tensor[(1296), bool] */;
  %1666 = reshape(%1662, newshape=[1155]) /* ty=Tensor[(1155), int8] */;
  %1667 = reshape(%1663, newshape=[1, 1260]) /* ty=Tensor[(1, 1260), float32] */;
  %1668 = reshape(%1665, newshape=[1296]) /* ty=Tensor[(1296), bool] */;
  %1669 = @func_10987(%1666, %1667, %1668) /* ty=(Tensor[(8, 8, 4), int64], Tensor[(30), float32], Tensor[(1155), int8], Tensor[(1, 1260), float32], Tensor[(1296), uint64]) */;
  %1670 = %1669.1;
  (%1664, %1670, meta[relay.Constant][76] /* ty=Tensor[(1155), int8] */, %var_25296)
}

def @func_15269() -> (Tensor[(8, 8, 4), float64], Tensor[(8, 8, 4), int64]) {
  %1671 = @func_10182() /* ty=(Tensor[(8, 8, 4), float64], Tensor[(8, 8, 4), float64]) */;
  %1672 = @func_7878() /* ty=(Tensor[(8, 8, 4), float64], Tensor[(8, 8, 4), int64], Tensor[(256), float64]) */;
  %1673 = %1671.0;
  %1674 = %1672.1;
  (%1673, %1674)
}

def @func_17774() -> (Tensor[(256), float64], Tensor[(8, 8, 4), float64]) {
  %1675 = @func_6366() /* ty=(Tensor[(1296), bool], Tensor[(8, 8, 4), int64], Tensor[(256), float64]) */;
  %1676 = @func_15578() /* ty=(Tensor[(8, 8, 4), float64], Tensor[(8, 8, 4), float64], Tensor[(8, 8, 4), uint8], uint8) */;
  %1677 = %1675.2;
  %1678 = %1676.1;
  (%1677, %1678)
}

def @func_14467() -> Tensor[(1296), float64] {
  %1679 = @func_6490() /* ty=(Tensor[(1296), float64],) */;
  %1679.0
}

def @func_26330(%var_26307: int64, %var_26308: Tensor[(3, 15, 2), int64]) -> (Tensor[(3, 15, 2), bool], Tensor[(3, 15, 2), float32]) {
  %1680 = cast(%var_26307, dtype="bool") /* ty=bool */;
  %1681 = cast(%var_26308, dtype="bool") /* ty=Tensor[(3, 15, 2), bool] */;
  %1682 = cast(%var_26308, dtype="float32") /* ty=Tensor[(3, 15, 2), float32] */;
  %1683 = cast(%var_26307, dtype="float32") /* ty=float32 */;
  %1684 = equal(%1680, %1681) /* ty=Tensor[(3, 15, 2), bool] */;
  %1685 = divide(%1682, %1683) /* ty=Tensor[(3, 15, 2), float32] */;
  (%1684, %1685)
}

def @func_12417(%var_12412: uint8) -> (Tensor[(8, 8, 4), float64], Tensor[(75), uint8], Tensor[(4, 132), float32], uint8) {
  %1686 = cast(meta[relay.Constant][77] /* ty=Tensor[(4, 132), float32] */, dtype="float32") /* ty=Tensor[(4, 132), float32] */;
  %1687 = cast(%var_12412, dtype="uint8") /* ty=uint8 */;
  %1688 = reshape(%1686, newshape=[3, 11, 16]) /* ty=Tensor[(3, 11, 16), float32] */;
  %1689 = reshape(%1687, newshape=[]) /* ty=uint8 */;
  %1690 = @func_2471(%1688, %1689) /* ty=(Tensor[(3, 11, 16), float32], Tensor[(14, 6, 15), float32], Tensor[(1260), float32], Tensor[(1260), float32], uint8, Tensor[(75), uint8], Tensor[(14, 6, 15), float32]) */;
  %1691 = @func_7168() /* ty=Tensor[(8, 8, 4), float64] */;
  %1692 = %1690.5;
  (%1691, %1692, meta[relay.Constant][77] /* ty=Tensor[(4, 132), float32] */, %var_12412)
}

def @func_19314() -> (Tensor[(8, 8, 4), float64],) {
  %1693 = @func_8936() /* ty=Tensor[(8, 8, 4), float64] */;
  (%1693,)
}

def @func_14633() -> (Tensor[(528), float32], Tensor[(1296), float64], Tensor[(8, 8, 4), float64]) {
  %1694 = @func_6905() /* ty=(Tensor[(8, 8, 4), float64], uint8, Tensor[(528), float32], uint8, Tensor[(8, 8, 4), float64]) */;
  %1695 = @func_5727() /* ty=(Tensor[(8, 8, 4), float64],) */;
  %1696 = %1694.2;
  %1697 = @func_13328() /* ty=Tensor[(1296), float64] */;
  %1698 = %1695.0;
  (%1696, %1697, %1698)
}

def @func_23853() -> (Tensor[(2, 4, 15), float32],) {
  %1699 = @func_20202() /* ty=(Tensor[(2, 4, 15), float32],) */;
  %1700 = %1699.0;
  (%1700,)
}

def @func_21753() -> (Tensor[(8, 8, 4), float64],) {
  %1701 = @func_20415() /* ty=(Tensor[(8, 8, 4), float64],) */;
  %1702 = %1701.0;
  (%1702,)
}

def @func_25708() -> (Tensor[(8, 8, 4), float64], Tensor[(1296), float64], Tensor[(1296), float64], Tensor[(1296), float64]) {
  %1703 = @func_24620() /* ty=(Tensor[(8, 8, 4), float64],) */;
  %1704 = @func_6257() /* ty=(Tensor[(1296), float64],) */;
  %1705 = @func_21923() /* ty=(Tensor[(8, 8, 4), float64], Tensor[(8, 8, 4), int32], Tensor[(1296), float64]) */;
  %1706 = %1703.0;
  %1707 = %1704.0;
  %1708 = %1705.2;
  %1709 = @func_14467() /* ty=Tensor[(1296), float64] */;
  (%1706, %1707, %1708, %1709)
}

def @func_23387() -> (Tensor[(8, 8, 4), float64], Tensor[(1296), float64], uint8) {
  %1710 = @func_21233() /* ty=(Tensor[(8, 8, 4), float64], Tensor[(8, 8, 4), float64]) */;
  %1711 = @func_9237() /* ty=(Tensor[(8, 8, 4), float64], Tensor[(1296), float64], Tensor[(1260), bool], Tensor[(528), float32]) */;
  %1712 = @func_21852() /* ty=(uint8, Tensor[(256), float64]) */;
  %1713 = %1710.1;
  %1714 = %1711.1;
  %1715 = %1712.0;
  (%1713, %1714, %1715)
}

def @func_11223() -> (Tensor[(8, 8, 4), float64],) {
  %1716 = @func_9677() /* ty=(Tensor[(8, 8, 4), float64], Tensor[(8, 8, 4), float64]) */;
  %1717 = %1716.0;
  (%1717,)
}

def @func_16259() -> (Tensor[(1296), float64],) {
  %1718 = @func_6295() /* ty=Tensor[(1296), float64] */;
  (%1718,)
}

def @func_16635() -> (uint8, Tensor[(8, 8, 4), float64], Tensor[(8, 8, 4), float64]) {
  %1719 = @func_10481() /* ty=(Tensor[(8, 8, 4), float64], Tensor[(8, 8, 4), int64]) */;
  %1720 = @func_9339() /* ty=(Tensor[(1296), float64], Tensor[(8, 8, 4), float64]) */;
  %1721 = @func_11795() /* ty=uint8 */;
  %1722 = %1719.0;
  %1723 = %1720.1;
  (%1721, %1722, %1723)
}

def @func_5932(%var_5860: Tensor[(30), int64], %var_5926: Tensor[(528), float32]) -> (Tensor[(8, 8, 4), float64], Tensor[(14, 2, 15), int64], Tensor[(30), int64], Tensor[(420), int64], Tensor[(8, 8, 4), bool], Tensor[(14, 6, 15), float32], Tensor[(528), float32], uint8) {
  %1724 = @func_5468() /* ty=(Tensor[(8, 8, 4), float64],) */;
  %1725 = cast(%var_5860, dtype="int64") /* ty=Tensor[(30), int64] */;
  %1726 = cast(meta[relay.Constant][78] /* ty=Tensor[(420), int64] */, dtype="int64") /* ty=Tensor[(420), int64] */;
  %1727 = reshape(%1725, newshape=[1, 2, 15]) /* ty=Tensor[(1, 2, 15), int64] */;
  %1728 = reshape(%1726, newshape=[14, 2, 15]) /* ty=Tensor[(14, 2, 15), int64] */;
  %1729 = @func_2943(%1727, %1728) /* ty=(Tensor[(14, 2, 15), int64],) */;
  %1730 = @func_5688() /* ty=Tensor[(8, 8, 4), float64] */;
  %1731 = cast(%1730, dtype="float64") /* ty=Tensor[(8, 8, 4), float64] */;
  %1732 = asin(%1731) /* ty=Tensor[(8, 8, 4), float64] */;
  %1733 = cast(%1730, dtype="bool") /* ty=Tensor[(8, 8, 4), bool] */;
  %1734 = shape_of(%1732, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1735 = cast(%1732, dtype="bool") /* ty=Tensor[(8, 8, 4), bool] */;
  %1736 = dyn.reshape(%1733, %1734, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %1737 = cast(%var_5926, dtype="float32") /* ty=Tensor[(528), float32] */;
  %1738 = cast(meta[relay.Constant][79] /* ty=uint8 */, dtype="uint8") /* ty=uint8 */;
  %1739 = reshape(%1737, newshape=[3, 11, 16]) /* ty=Tensor[(3, 11, 16), float32] */;
  %1740 = reshape(%1738, newshape=[]) /* ty=uint8 */;
  %1741 = @func_2471(%1739, %1740) /* ty=(Tensor[(3, 11, 16), float32], Tensor[(14, 6, 15), float32], Tensor[(1260), float32], Tensor[(1260), float32], uint8, Tensor[(75), uint8], Tensor[(14, 6, 15), float32]) */;
  %1742 = %1724.0;
  %1743 = %1729.0;
  %1744 = less_equal(%1735, %1736) /* ty=Tensor[(8, 8, 4), bool] */;
  %1745 = %1741.1;
  (%1742, %1743, %var_5860, meta[relay.Constant][78] /* ty=Tensor[(420), int64] */, %1744, %1745, %var_5926, meta[relay.Constant][79] /* ty=uint8 */)
}

def @func_23662(%var_23657: Tensor[(16, 12, 4), float32]) -> Tensor[(16, 12, 4), float32] {
  %1746 = cast(%var_23657, dtype="float32") /* ty=Tensor[(16, 12, 4), float32] */;
  atan(%1746) /* ty=Tensor[(16, 12, 4), float32] */
}

def @func_7168() -> Tensor[(8, 8, 4), float64] {
  %1747 = @func_6018() /* ty=(Tensor[(8, 8, 4), float64],) */;
  %1747.0
}

def @func_11744(%var_11735: Tensor[(256), float64]) -> (Tensor[(1296), float64], Tensor[(8, 8, 4), int32], Tensor[(256), float64]) {
  %1748 = @func_8971() /* ty=(Tensor[(1296), float64],) */;
  %1749 = cast(%var_11735, dtype="float64") /* ty=Tensor[(256), float64] */;
  %1750 = reshape(%1749, newshape=[8, 8, 4]) /* ty=Tensor[(8, 8, 4), float64] */;
  %1751 = %1748.0;
  %1752 = @func_6833(%1750) /* ty=Tensor[(8, 8, 4), int32] */;
  (%1751, %1752, %var_11735)
}

def @func_7901() -> uint8 {
  %1753 = @func_6905() /* ty=(Tensor[(8, 8, 4), float64], uint8, Tensor[(528), float32], uint8, Tensor[(8, 8, 4), float64]) */;
  %1753.3
}

def @func_9111() -> (Tensor[(4, 7, 5), float32], Tensor[(2, 5, 12), bool], Tensor[(120), float64]) {
  %1754 = cast(meta[relay.Constant][80] /* ty=Tensor[(4, 7, 5), float32] */, dtype="float32") /* ty=Tensor[(4, 7, 5), float32] */;
  %1755 = cast(meta[relay.Constant][81] /* ty=Tensor[(120), float64] */, dtype="float64") /* ty=Tensor[(120), float64] */;
  %1756 = cast(meta[relay.Constant][81] /* ty=Tensor[(120), float64] */, dtype="float64") /* ty=Tensor[(120), float64] */;
  %1757 = reshape(%1755, newshape=[2, 5, 12]) /* ty=Tensor[(2, 5, 12), float64] */;
  %1758 = reshape(%1756, newshape=[2, 5, 12]) /* ty=Tensor[(2, 5, 12), float64] */;
  %1759 = @func_8852(%1757, %1758) /* ty=(Tensor[(2, 5, 12), bool],) */;
  %1760 = sin(%1754) /* ty=Tensor[(4, 7, 5), float32] */;
  %1761 = %1759.0;
  (%1760, %1761, meta[relay.Constant][81] /* ty=Tensor[(120), float64] */)
}

def @func_13003() -> (Tensor[(1296), float64],) {
  %1762 = @func_8971() /* ty=(Tensor[(1296), float64],) */;
  %1763 = %1762.0;
  (%1763,)
}

def @func_26401(%var_26370: Tensor[(528), float32]) -> (Tensor[(8, 8, 4), float64], Tensor[(8, 8, 4), int64], Tensor[(528), float32]) {
  %1764 = @func_14916() /* ty=(Tensor[(8, 8, 4), float64], Tensor[(8, 8, 4), float64], Tensor[(1296), bool]) */;
  %1765 = cast(%var_26370, dtype="float32") /* ty=Tensor[(528), float32] */;
  %1766 = reshape(%1765, newshape=[1, 528]) /* ty=Tensor[(1, 528), float32] */;
  %1767 = @func_6780(%1766) /* ty=(Tensor[(256), float64], Tensor[(1296), bool], Tensor[(8, 8, 4), float64], Tensor[(1, 528), float32], Tensor[(8, 8, 4), int64]) */;
  %1768 = %1764.0;
  %1769 = %1767.4;
  (%1768, %1769, %var_26370)
}

def @func_25833() -> Tensor[(1296), float64] {
  %1770 = @func_19584() /* ty=(Tensor[(1296), float64],) */;
  %1770.0
}

def @func_26440() -> (Tensor[(1296), bool], Tensor[(256), float64]) {
  %1771 = @func_16012() /* ty=(Tensor[(1296), bool], Tensor[(8, 8, 4), float64]) */;
  %1772 = @func_26273() /* ty=(Tensor[(120), float64], Tensor[(8, 8, 4), float64], Tensor[(256), float64]) */;
  %1773 = %1771.0;
  %1774 = %1772.2;
  (%1773, %1774)
}

def @func_9677() -> (Tensor[(8, 8, 4), float64], Tensor[(8, 8, 4), float64]) {
  %1775 = @func_6018() /* ty=(Tensor[(8, 8, 4), float64],) */;
  %1776 = %1775.0;
  %1777 = @func_7168() /* ty=Tensor[(8, 8, 4), float64] */;
  (%1776, %1777)
}

def @func_10987(%var_10969: Tensor[(1155), int8], %var_10970: Tensor[(1, 1260), float32], %var_10978: Tensor[(1296), bool]) -> (Tensor[(8, 8, 4), int64], Tensor[(30), float32], Tensor[(1155), int8], Tensor[(1, 1260), float32], Tensor[(1296), uint64]) {
  %1778 = cast(meta[relay.Constant][82] /* ty=Tensor[(30), float32] */, dtype="float32") /* ty=Tensor[(30), float32] */;
  %1779 = cast(%var_10969, dtype="int8") /* ty=Tensor[(1155), int8] */;
  %1780 = cast(%var_10970, dtype="float32") /* ty=Tensor[(1, 1260), float32] */;
  %1781 = reshape(%1778, newshape=[5, 2, 3]) /* ty=Tensor[(5, 2, 3), float32] */;
  %1782 = reshape(%1779, newshape=[1155, 1]) /* ty=Tensor[(1155, 1), int8] */;
  %1783 = reshape(%1780, newshape=[1260]) /* ty=Tensor[(1260), float32] */;
  %1784 = @func_7573(%1781, %1782, %1783) /* ty=(Tensor[(8, 8, 4), float64], Tensor[(5, 2, 3), float32], Tensor[(8, 8, 4), int64], Tensor[(8, 8, 4), float64], Tensor[(14, 6, 15), float32], Tensor[(1155, 1), int8], Tensor[(1260), float32], Tensor[(8, 8, 4), float64]) */;
  %1785 = @func_10439() /* ty=Tensor[(1296), bool] */;
  %1786 = cast(%var_10978, dtype="uint64") /* ty=Tensor[(1296), uint64] */;
  %1787 = shape_of(%1785, dtype="int32") /* ty=Tensor[(1), int32] */;
  %1788 = cast(%1785, dtype="uint64") /* ty=Tensor[(1296), uint64] */;
  %1789 = dyn.reshape(%1786, %1787, newshape=[]) /* ty=Tensor[(?), uint64] */;
  %1790 = %1784.2;
  %1791 = add(%1788, %1789) /* ty=Tensor[(1296), uint64] */;
  (%1790, meta[relay.Constant][82] /* ty=Tensor[(30), float32] */, %var_10969, %var_10970, %1791)
}

def @func_22812() -> (Tensor[(8, 8, 4), float64],) {
  %1792 = @func_13632() /* ty=Tensor[(8, 8, 4), float64] */;
  (%1792,)
}

def @func_14590(%var_14565: Tensor[(14, 8, 13), float64]) -> (Tensor[(14, 8, 13), float64], Tensor[(14, 8, 13), float64], Tensor[(14, 8, 13), float32], Tensor[(8, 8, 4), float64]) {
  %1793 = cast(%var_14565, dtype="float64") /* ty=Tensor[(14, 8, 13), float64] */;
  %1794 = cast(%var_14565, dtype="float64") /* ty=Tensor[(14, 8, 13), float64] */;
  %1795 = cast(%var_14565, dtype="float32") /* ty=Tensor[(14, 8, 13), float32] */;
  %1796 = @func_12511() /* ty=(Tensor[(8, 8, 4), float64], uint8) */;
  %1797 = cosh(%1793) /* ty=Tensor[(14, 8, 13), float64] */;
  %1798 = atan(%1794) /* ty=Tensor[(14, 8, 13), float64] */;
  %1799 = log(%1795) /* ty=Tensor[(14, 8, 13), float32] */;
  %1800 = %1796.0;
  (%1797, %1798, %1799, %1800)
}

def @func_11192() -> (Tensor[(16, 8, 5), float64],) {
  %1801 = @func_10378() /* ty=(Tensor[(8, 8, 4), int64], Tensor[(8, 8, 4), float64], Tensor[(9, 12, 12), float32], Tensor[(1296), float64], Tensor[(16, 8, 5), float64]) */;
  %1802 = %1801.4;
  (%1802,)
}

def @func_17966() -> (Tensor[(8, 8, 4), float64],) {
  %1803 = @func_13996() /* ty=(Tensor[(8, 8, 4), float64],) */;
  %1804 = %1803.0;
  (%1804,)
}

def @func_19030() -> (Tensor[(1260), bool], Tensor[(8, 8, 4), uint8]) {
  %1805 = @func_9237() /* ty=(Tensor[(8, 8, 4), float64], Tensor[(1296), float64], Tensor[(1260), bool], Tensor[(528), float32]) */;
  %1806 = @func_7595() /* ty=(Tensor[(1296), float64], Tensor[(8, 8, 4), float64], Tensor[(8, 8, 4), uint8]) */;
  %1807 = %1805.2;
  %1808 = %1806.2;
  (%1807, %1808)
}

def @func_18401() -> Tensor[(8, 8, 4), float64] {
  %1809 = @func_5727() /* ty=(Tensor[(8, 8, 4), float64],) */;
  %1809.0
}

/* For debugging purposes the metadata section has been omitted.
 * If you would like to see the full metadata section you can set the 
 * option to `True` when invoking `astext`. 
 */
===================================
==========mutated_mod==========
#[version = "0.0.5"]
def @func_17967() -> (Tensor[(8, 8, 4), float64],) {
  %2 = fn () -> (Tensor[(8, 8, 4), float64],) {
    %0 = @func_13996() /* ty=(Tensor[(8, 8, 4), float64],) */;
    %1 = %0.0;
    (%1,)
  };
  %2() /* ty=(Tensor[(8, 8, 4), float64],) */
}

def @func_5468() -> (Tensor[(8, 8, 4), float64],) {
  %3 = cast(meta[relay.Constant][0] /* ty=Tensor[(8, 8, 4), float64] */, dtype="float64") /* ty=Tensor[(8, 8, 4), float64] */;
  %4 = log10(%3) /* ty=Tensor[(8, 8, 4), float64] */;
  (%4,)
}

def @func_11627() -> Tensor[(8, 8, 4), float64] {
  %5 = @func_7955() /* ty=(Tensor[(8, 8, 4), float64],) */;
  %5.0
}

def @func_11700(%var_11698: Tensor[(2, 14, 11), uint64], %var_11699: Tensor[(2, 14, 11), uint64]) -> (Tensor[(2, 14, 11), uint64], Tensor[(8, 8, 4), float64], Tensor[(2, 14, 11), float32]) {
  @func_11696(%var_11698, %var_11699) /* ty=(Tensor[(2, 14, 11), uint64], Tensor[(8, 8, 4), float64], Tensor[(2, 14, 11), float32]) */
}

def @func_5936(%var_5934: Tensor[(30), int64], %var_5935: Tensor[(528), float32]) -> (Tensor[(8, 8, 4), float64], Tensor[(14, 2, 15), int64], Tensor[(30), int64], Tensor[(420), int64], Tensor[(8, 8, 4), bool], Tensor[(14, 6, 15), float32], Tensor[(528), float32], uint8) {
  @func_5932(%var_5934, %var_5935) /* ty=(Tensor[(8, 8, 4), float64], Tensor[(14, 2, 15), int64], Tensor[(30), int64], Tensor[(420), int64], Tensor[(8, 8, 4), bool], Tensor[(14, 6, 15), float32], Tensor[(528), float32], uint8) */
}

def @func_21753() -> (Tensor[(8, 8, 4), float64],) {
  %6 = @func_20415() /* ty=(Tensor[(8, 8, 4), float64],) */;
  %7 = %6.0;
  (%7,)
}

def @func_2187(%var_2173: Tensor[(16, 8, 5), float64]) -> (Tensor[(16, 8, 5), float64],) {
  %8 = cast(%var_2173, dtype="float64") /* ty=Tensor[(16, 8, 5), float64] */;
  %9 = tan(%8) /* ty=Tensor[(16, 8, 5), float64] */;
  (%9,)
}

def @func_13328() -> Tensor[(1296), float64] {
  %10 = @func_6490() /* ty=(Tensor[(1296), float64],) */;
  %11 = %10.0;
  %12 = cast(%11, dtype="float64") /* ty=Tensor[(1296), float64] */;
  acos(%12) /* ty=Tensor[(1296), float64] */
}

def @func_23274() -> (uint8, uint8) {
  %16 = fn () -> (uint8, uint8) {
    %13 = @func_6905() /* ty=(Tensor[(8, 8, 4), float64], uint8, Tensor[(528), float32], uint8, Tensor[(8, 8, 4), float64]) */;
    %14 = %13.3;
    %15 = @func_22635() /* ty=uint8 */;
    (%14, %15)
  };
  %16() /* ty=(uint8, uint8) */
}

def @func_22416(%var_22414: Tensor[(648, 2), bool]) -> (Tensor[(8, 8, 4), int32], Tensor[(8, 8, 4), float64], Tensor[(528, 1), float32], Tensor[(648, 2), bool]) {
  @func_22413(%var_22414) /* ty=(Tensor[(8, 8, 4), int32], Tensor[(8, 8, 4), float64], Tensor[(528, 1), float32], Tensor[(648, 2), bool]) */
}

def @func_12511() -> (Tensor[(8, 8, 4), float64], uint8) {
  %17 = @func_6905() /* ty=(Tensor[(8, 8, 4), float64], uint8, Tensor[(528), float32], uint8, Tensor[(8, 8, 4), float64]) */;
  %18 = @func_7168() /* ty=Tensor[(8, 8, 4), float64] */;
  %19 = %17.3;
  (%18, %19)
}

def @func_23329() -> (Tensor[(8, 8, 4), float64], Tensor[(8, 8, 4), float64], Tensor[(8, 8, 4), float64]) {
  %25 = fn () -> (Tensor[(8, 8, 4), float64], Tensor[(8, 8, 4), float64], Tensor[(8, 8, 4), float64]) {
    %20 = @func_14156() /* ty=(uint8, Tensor[(8, 8, 4), float64]) */;
    %21 = @func_10626() /* ty=(Tensor[(8, 8, 4), int64], Tensor[(8, 8, 4), float64]) */;
    %22 = @func_18409() /* ty=Tensor[(8, 8, 4), float64] */;
    %23 = %20.1;
    %24 = %21.1;
    (%22, %23, %24)
  };
  %25() /* ty=(Tensor[(8, 8, 4), float64], Tensor[(8, 8, 4), float64], Tensor[(8, 8, 4), float64]) */
}

def @func_10441() -> Tensor[(1296), bool] {
  @func_10439() /* ty=Tensor[(1296), bool] */
}

def @func_24207() -> (Tensor[(1296), bool], Tensor[(264, 2), bool], Tensor[(528, 1), float32], uint8) {
  @func_24205() /* ty=(Tensor[(1296), bool], Tensor[(264, 2), bool], Tensor[(528, 1), float32], uint8) */
}

def @func_21145() -> (Tensor[(256), float64], Tensor[(120), float64]) {
  %30 = fn () -> (Tensor[(256), float64], Tensor[(120), float64]) {
    %26 = @func_17774() /* ty=(Tensor[(256), float64], Tensor[(8, 8, 4), float64]) */;
    %27 = @func_10245() /* ty=(Tensor[(120), float64],) */;
    %28 = %26.0;
    %29 = %27.0;
    (%28, %29)
  };
  %30() /* ty=(Tensor[(256), float64], Tensor[(120), float64]) */
}

def @func_14302() -> (Tensor[(1296), bool], Tensor[(120), float64]) {
  %34 = fn () -> (Tensor[(1296), bool], Tensor[(120), float64]) {
    %31 = @func_12332() /* ty=(Tensor[(120), float64], Tensor[(1296), float64]) */;
    %32 = @func_10439() /* ty=Tensor[(1296), bool] */;
    %33 = %31.0;
    (%32, %33)
  };
  %34() /* ty=(Tensor[(1296), bool], Tensor[(120), float64]) */
}

def @func_24703() -> (Tensor[(1260), float32],) {
  %37 = fn () -> (Tensor[(1260), float32],) {
    %35 = @func_11342() /* ty=(Tensor[(8, 8, 4), float64], Tensor[(1260), float32]) */;
    %36 = %35.1;
    (%36,)
  };
  %37() /* ty=(Tensor[(1260), float32],) */
}

def @func_24384() -> Tensor[(256), float64] {
  %39 = fn () -> Tensor[(256), float64] {
    %38 = @func_14282() /* ty=(Tensor[(256), float64],) */;
    %38.0
  };
  %39() /* ty=Tensor[(256), float64] */
}

def @func_23504() -> (Tensor[(120), float64], Tensor[(8, 8, 4), float64]) {
  @func_23502() /* ty=(Tensor[(120), float64], Tensor[(8, 8, 4), float64]) */
}

def @func_14917() -> (Tensor[(8, 8, 4), float64], Tensor[(8, 8, 4), float64], Tensor[(1296), bool]) {
  %45 = fn () -> (Tensor[(8, 8, 4), float64], Tensor[(8, 8, 4), float64], Tensor[(1296), bool]) {
    %40 = @func_14410() /* ty=(Tensor[(8, 8, 4), float64],) */;
    %41 = @func_12946() /* ty=(Tensor[(1296), bool], Tensor[(8, 8, 4), float64]) */;
    %42 = @func_7399() /* ty=Tensor[(8, 8, 4), float64] */;
    %43 = %40.0;
    %44 = %41.0;
    (%42, %43, %44)
  };
  %45() /* ty=(Tensor[(8, 8, 4), float64], Tensor[(8, 8, 4), float64], Tensor[(1296), bool]) */
}

def @func_26721() -> (uint8, Tensor[(1296), float64], Tensor[(8, 8, 4), uint8]) {
  @func_26719() /* ty=(uint8, Tensor[(1296), float64], Tensor[(8, 8, 4), uint8]) */
}

def @func_19110() -> (Tensor[(8, 8, 4), float64], Tensor[(8, 8, 4), uint8]) {
  @func_19108() /* ty=(Tensor[(8, 8, 4), float64], Tensor[(8, 8, 4), uint8]) */
}

def @func_21105(%var_21094: Tensor[(7, 165), int8], %var_21095: Tensor[(1260), float32]) -> (Tensor[(8, 8, 4), float64], Tensor[(528), float32], Tensor[(8, 8, 4), float64], Tensor[(30), float32], Tensor[(7, 165), int8], Tensor[(1260), float32]) {
  %46 = @func_7099() /* ty=(Tensor[(8, 8, 4), float64],) */;
  %47 = @func_16399() /* ty=(Tensor[(528), float32],) */;
  %48 = cast(meta[relay.Constant][1] /* ty=Tensor[(30), float32] */, dtype="float32") /* ty=Tensor[(30), float32] */;
  %49 = cast(%var_21094, dtype="int8") /* ty=Tensor[(7, 165), int8] */;
  %50 = cast(%var_21095, dtype="float32") /* ty=Tensor[(1260), float32] */;
  %51 = reshape(%48, newshape=[5, 2, 3]) /* ty=Tensor[(5, 2, 3), float32] */;
  %52 = reshape(%49, newshape=[1155, 1]) /* ty=Tensor[(1155, 1), int8] */;
  %53 = reshape(%50, newshape=[1260]) /* ty=Tensor[(1260), float32] */;
  %54 = @func_7573(%51, %52, %53) /* ty=(Tensor[(8, 8, 4), float64], Tensor[(5, 2, 3), float32], Tensor[(8, 8, 4), int64], Tensor[(8, 8, 4), float64], Tensor[(14, 6, 15), float32], Tensor[(1155, 1), int8], Tensor[(1260), float32], Tensor[(8, 8, 4), float64]) */;
  %55 = %46.0;
  %56 = %47.0;
  %57 = %54.3;
  (%55, %56, %57, meta[relay.Constant][1] /* ty=Tensor[(30), float32] */, %var_21094, %var_21095)
}

def @func_25353() -> Tensor[(1296), bool] {
  @func_25351() /* ty=Tensor[(1296), bool] */
}

def @func_22814() -> (Tensor[(8, 8, 4), float64],) {
  @func_22812() /* ty=(Tensor[(8, 8, 4), float64],) */
}

def @func_6982() -> (Tensor[(8, 8, 4), float64], Tensor[(8, 8, 4), float64]) {
  %58 = @func_6452() /* ty=Tensor[(8, 8, 4), float64] */;
  %59 = @func_6452() /* ty=Tensor[(8, 8, 4), float64] */;
  (%58, %59)
}

def @func_11145() -> (Tensor[(120), float64], Tensor[(8, 8, 4), float64]) {
  %64 = fn () -> (Tensor[(120), float64], Tensor[(8, 8, 4), float64]) {
    %60 = @func_10245() /* ty=(Tensor[(120), float64],) */;
    %61 = @func_8352() /* ty=(Tensor[(8, 8, 4), float64], Tensor[(1296), bool]) */;
    %62 = %60.0;
    %63 = %61.0;
    (%62, %63)
  };
  %64() /* ty=(Tensor[(120), float64], Tensor[(8, 8, 4), float64]) */
}

def @func_10031() -> (Tensor[(256), float64], Tensor[(1296), float64]) {
  %65 = @func_7878() /* ty=(Tensor[(8, 8, 4), float64], Tensor[(8, 8, 4), int64], Tensor[(256), float64]) */;
  %66 = @func_9585() /* ty=(Tensor[(8, 8, 4), int64], Tensor[(8, 8, 4), float64], Tensor[(1296), bool], uint8, Tensor[(8, 8, 4), uint8], Tensor[(1296), float64], Tensor[(2, 5, 12), bool], Tensor[(120), float64], Tensor[(8, 8, 4), bool]) */;
  %67 = %65.2;
  %68 = %66.5;
  (%67, %68)
}

def @func_26987(%var_26985: Tensor[(5, 5, 1), uint8]) -> (Tensor[(5, 5, 1), bool],) {
  @func_26984(%var_26985) /* ty=(Tensor[(5, 5, 1), bool],) */
}

def @func_7666(%var_7664: Tensor[(588), uint8]) -> (Tensor[(8, 8, 4), float64], Tensor[(6, 7, 14), float64], Tensor[(588), uint8], Tensor[(8, 8, 4), float64]) {
  @func_7663(%var_7664) /* ty=(Tensor[(8, 8, 4), float64], Tensor[(6, 7, 14), float64], Tensor[(588), uint8], Tensor[(8, 8, 4), float64]) */
}

def @func_18461(%var_18460: Tensor[(528), float32]) -> (Tensor[(8, 8, 4), float64], uint8, Tensor[(3, 11, 16), uint16], Tensor[(1296), float64]) {
  %84 = fn (%var_18442: Tensor[(528), float32]) -> (Tensor[(8, 8, 4), float64], uint8, Tensor[(3, 11, 16), uint16], Tensor[(1296), float64]) {
    %69 = @func_10481() /* ty=(Tensor[(8, 8, 4), float64], Tensor[(8, 8, 4), int64]) */;
    %70 = cast(%var_18442, dtype="float32") /* ty=Tensor[(528), float32] */;
    %71 = cast(meta[relay.Constant][2] /* ty=uint8 */, dtype="uint8") /* ty=uint8 */;
    %72 = reshape(%70, newshape=[3, 11, 16]) /* ty=Tensor[(3, 11, 16), float32] */;
    %73 = reshape(%71, newshape=[]) /* ty=uint8 */;
    %74 = @func_2471(%72, %73) /* ty=(Tensor[(3, 11, 16), float32], Tensor[(14, 6, 15), float32], Tensor[(1260), float32], Tensor[(1260), float32], uint8, Tensor[(75), uint8], Tensor[(14, 6, 15), float32]) */;
    %75 = %74.0;
    %76 = cast(%var_18442, dtype="uint16") /* ty=Tensor[(528), uint16] */;
    %77 = shape_of(%75, dtype="int32") /* ty=Tensor[(3), int32] */;
    %78 = cast(%75, dtype="uint16") /* ty=Tensor[(3, 11, 16), uint16] */;
    %79 = dyn.reshape(%76, %77, newshape=[]) /* ty=Tensor[(?, ?, ?), uint16] */;
    %80 = @func_15919() /* ty=(Tensor[(1296), float64], Tensor[(8, 8, 4), float64], Tensor[(528), float32]) */;
    %81 = %69.0;
    %82 = right_shift(%78, %79) /* ty=Tensor[(3, 11, 16), uint16] */;
    %83 = %80.0;
    (%81, meta[relay.Constant][2] /* ty=uint8 */, %82, %83)
  };
  %84(%var_18460) /* ty=(Tensor[(8, 8, 4), float64], uint8, Tensor[(3, 11, 16), uint16], Tensor[(1296), float64]) */
}

def @func_23167() -> (Tensor[(1296), float64], Tensor[(1296), float64], Tensor[(1260), float32], Tensor[(1296), float64], uint8) {
  %85 = @func_17303() /* ty=(Tensor[(8, 8, 4), float64], Tensor[(1296), float64]) */;
  %86 = @func_19933() /* ty=(Tensor[(1296), float64], Tensor[(8, 8, 4), float64], Tensor[(1296), float64]) */;
  %87 = @func_11342() /* ty=(Tensor[(8, 8, 4), float64], Tensor[(1260), float32]) */;
  %88 = @func_14720() /* ty=(Tensor[(8, 8, 4), float64], Tensor[(1296), float64], Tensor[(1296), bool], Tensor[(4, 5, 10), bool], Tensor[(200), bool], Tensor[(8, 8, 4), float64]) */;
  %89 = @func_15709() /* ty=(uint8,) */;
  %90 = %85.1;
  %91 = %86.0;
  %92 = %87.1;
  %93 = %88.1;
  %94 = %89.0;
  (%90, %91, %92, %93, %94)
}

def @func_13356() -> (Tensor[(8, 8, 4), float64], Tensor[(1296), float64]) {
  %98 = fn () -> (Tensor[(8, 8, 4), float64], Tensor[(1296), float64]) {
    %95 = @func_10231() /* ty=(Tensor[(120), float64], Tensor[(8, 8, 4), float64], Tensor[(1296), float64]) */;
    %96 = @func_10517() /* ty=Tensor[(8, 8, 4), float64] */;
    %97 = %95.2;
    (%96, %97)
  };
  %98() /* ty=(Tensor[(8, 8, 4), float64], Tensor[(1296), float64]) */
}

def @func_15793() -> (uint8, Tensor[(120), float64]) {
  %102 = fn () -> (uint8, Tensor[(120), float64]) {
    %99 = @func_10231() /* ty=(Tensor[(120), float64], Tensor[(8, 8, 4), float64], Tensor[(1296), float64]) */;
    %100 = @func_8420() /* ty=uint8 */;
    %101 = %99.0;
    (%100, %101)
  };
  %102() /* ty=(uint8, Tensor[(120), float64]) */
}

def @func_6698() -> (Tensor[(8, 8, 4), float64],) {
  %103 = @func_5727() /* ty=(Tensor[(8, 8, 4), float64],) */;
  %104 = %103.0;
  (%104,)
}

def @func_7170() -> Tensor[(8, 8, 4), float64] {
  @func_7168() /* ty=Tensor[(8, 8, 4), float64] */
}

def @func_19484() -> (Tensor[(8, 8, 4), float64],) {
  %105 = @func_6905() /* ty=(Tensor[(8, 8, 4), float64], uint8, Tensor[(528), float32], uint8, Tensor[(8, 8, 4), float64]) */;
  %106 = %105.4;
  (%106,)
}

def @func_18131(%var_18130: uint8) -> (Tensor[(8, 8, 4), float64], Tensor[(8, 8, 4), float64], Tensor[(14, 6, 15), float32], Tensor[(528), float32], uint8, Tensor[(8, 8, 4), int64]) {
  %119 = fn (%var_18119: uint8) -> (Tensor[(8, 8, 4), float64], Tensor[(8, 8, 4), float64], Tensor[(14, 6, 15), float32], Tensor[(528), float32], uint8, Tensor[(8, 8, 4), int64]) {
    %107 = @func_13789() /* ty=(Tensor[(8, 8, 4), float64], Tensor[(8, 8, 4), float64]) */;
    %108 = @func_11342() /* ty=(Tensor[(8, 8, 4), float64], Tensor[(1260), float32]) */;
    %109 = cast(meta[relay.Constant][3] /* ty=Tensor[(528), float32] */, dtype="float32") /* ty=Tensor[(528), float32] */;
    %110 = cast(%var_18119, dtype="uint8") /* ty=uint8 */;
    %111 = reshape(%109, newshape=[3, 11, 16]) /* ty=Tensor[(3, 11, 16), float32] */;
    %112 = reshape(%110, newshape=[]) /* ty=uint8 */;
    %113 = @func_2471(%111, %112) /* ty=(Tensor[(3, 11, 16), float32], Tensor[(14, 6, 15), float32], Tensor[(1260), float32], Tensor[(1260), float32], uint8, Tensor[(75), uint8], Tensor[(14, 6, 15), float32]) */;
    %114 = @func_15472() /* ty=(Tensor[(8, 8, 4), float64], Tensor[(8, 8, 4), int64]) */;
    %115 = %107.0;
    %116 = %108.0;
    %117 = %113.6;
    %118 = %114.1;
    (%115, %116, %117, meta[relay.Constant][3] /* ty=Tensor[(528), float32] */, %var_18119, %118)
  };
  %119(%var_18130) /* ty=(Tensor[(8, 8, 4), float64], Tensor[(8, 8, 4), float64], Tensor[(14, 6, 15), float32], Tensor[(528), float32], uint8, Tensor[(8, 8, 4), int64]) */
}

def @func_15472() -> (Tensor[(8, 8, 4), float64], Tensor[(8, 8, 4), int64]) {
  %120 = @func_13842() /* ty=(Tensor[(8, 8, 4), float64],) */;
  %121 = @func_10378() /* ty=(Tensor[(8, 8, 4), int64], Tensor[(8, 8, 4), float64], Tensor[(9, 12, 12), float32], Tensor[(1296), float64], Tensor[(16, 8, 5), float64]) */;
  %122 = %120.0;
  %123 = %121.0;
  (%122, %123)
}

def @func_22319() -> (Tensor[(1296), bool], Tensor[(8, 8, 4), float64], Tensor[(8, 8, 4), float64]) {
  %130 = fn () -> (Tensor[(1296), bool], Tensor[(8, 8, 4), float64], Tensor[(8, 8, 4), float64]) {
    %124 = @func_8448() /* ty=(Tensor[(1296), bool], Tensor[(1296), bool]) */;
    %125 = @func_7816() /* ty=(Tensor[(8, 8, 4), float64], Tensor[(8, 8, 4), int32]) */;
    %126 = @func_20415() /* ty=(Tensor[(8, 8, 4), float64],) */;
    %127 = %124.1;
    %128 = %125.0;
    %129 = %126.0;
    (%127, %128, %129)
  };
  %130() /* ty=(Tensor[(1296), bool], Tensor[(8, 8, 4), float64], Tensor[(8, 8, 4), float64]) */
}

def @func_26719() -> (uint8, Tensor[(1296), float64], Tensor[(8, 8, 4), uint8]) {
  %131 = @func_8971() /* ty=(Tensor[(1296), float64],) */;
  %132 = @func_25317() /* ty=(Tensor[(8, 8, 4), uint8],) */;
  %133 = @func_20457() /* ty=uint8 */;
  %134 = %131.0;
  %135 = %132.0;
  (%133, %134, %135)
}

def @func_20988() -> (Tensor[(1296), float64], Tensor[(1296), bool], uint8) {
  %136 = @func_16355() /* ty=(uint8, Tensor[(8, 8, 4), float64], Tensor[(1296), bool], Tensor[(14, 2, 15), int64], Tensor[(5, 6), int64], Tensor[(5, 84), int64]) */;
  %137 = @func_17451() /* ty=(Tensor[(8, 8, 4), float64], uint8, Tensor[(24, 22), float32]) */;
  %138 = @func_16917() /* ty=Tensor[(1296), float64] */;
  %139 = %136.2;
  %140 = %137.1;
  (%138, %139, %140)
}

def @func_16988() -> Tensor[(8, 8, 4), float64] {
  @func_16986() /* ty=Tensor[(8, 8, 4), float64] */
}

def @func_13900() -> (Tensor[(8, 8, 4), float64], Tensor[(8, 8, 4), int32]) {
  @func_13898() /* ty=(Tensor[(8, 8, 4), float64], Tensor[(8, 8, 4), int32]) */
}

def @func_10517() -> Tensor[(8, 8, 4), float64] {
  %141 = @func_7595() /* ty=(Tensor[(1296), float64], Tensor[(8, 8, 4), float64], Tensor[(8, 8, 4), uint8]) */;
  %141.1
}

def @func_7955() -> (Tensor[(8, 8, 4), float64],) {
  %142 = @func_7292() /* ty=(Tensor[(8, 8, 4), float64],) */;
  %143 = %142.0;
  (%143,)
}

def @func_24185(%var_24184: Tensor[(1440), uint16]) -> (Tensor[(1296), float64], Tensor[(16, 8, 5), float64], Tensor[(1440), uint16], Tensor[(528), float32], Tensor[(640), float64], Tensor[(256), float64], Tensor[(8, 8, 4), float64], Tensor[(980), uint32], Tensor[(8, 8, 4), float64], Tensor[(6, 7, 14), float64]) {
  %166 = fn (%var_24137: Tensor[(1440), uint16]) -> (Tensor[(1296), float64], Tensor[(16, 8, 5), float64], Tensor[(1440), uint16], Tensor[(528), float32], Tensor[(640), float64], Tensor[(256), float64], Tensor[(8, 8, 4), float64], Tensor[(980), uint32], Tensor[(8, 8, 4), float64], Tensor[(6, 7, 14), float64]) {
    %144 = @func_19149() /* ty=(Tensor[(8, 8, 4), float64], Tensor[(1296), float64]) */;
    %145 = cast(%var_24137, dtype="uint16") /* ty=Tensor[(1440), uint16] */;
    %146 = cast(%var_24137, dtype="uint16") /* ty=Tensor[(1440), uint16] */;
    %147 = cast(meta[relay.Constant][4] /* ty=Tensor[(528), float32] */, dtype="float32") /* ty=Tensor[(528), float32] */;
    %148 = cast(meta[relay.Constant][5] /* ty=Tensor[(640), float64] */, dtype="float64") /* ty=Tensor[(640), float64] */;
    %149 = reshape(%145, newshape=[16, 15, 6]) /* ty=Tensor[(16, 15, 6), uint16] */;
    %150 = reshape(%146, newshape=[16, 15, 6]) /* ty=Tensor[(16, 15, 6), uint16] */;
    %151 = reshape(%147, newshape=[528]) /* ty=Tensor[(528), float32] */;
    %152 = reshape(%148, newshape=[640]) /* ty=Tensor[(640), float64] */;
    %153 = @func_3760(%149, %150, %151, %152) /* ty=(Tensor[(16, 15, 6), uint16], Tensor[(528), float32], uint8, Tensor[(16, 15, 6), bool], Tensor[(16, 8, 5), float64], Tensor[(640), float64], Tensor[(14, 6, 15), float32], Tensor[(9, 12, 12), float32], Tensor[(1296), float64], Tensor[(1260), bool], Tensor[(3, 11, 16), float32]) */;
    %154 = @func_7364() /* ty=(Tensor[(8, 8, 4), int64], Tensor[(256), float64]) */;
    %155 = cast(meta[relay.Constant][6] /* ty=Tensor[(980), uint32] */, dtype="uint32") /* ty=Tensor[(980), uint32] */;
    %156 = reshape(%155, newshape=[5, 14, 14]) /* ty=Tensor[(5, 14, 14), uint32] */;
    %157 = @func_18863(%156) /* ty=(Tensor[(5, 14, 14), uint32], Tensor[(8, 8, 4), float64], Tensor[(8, 8, 4), float64], Tensor[(2, 5, 12), bool], Tensor[(120), float64], Tensor[(8, 8, 4), float64]) */;
    %158 = @func_21736() /* ty=(uint8, Tensor[(8, 8, 4), float64]) */;
    %159 = @func_6176() /* ty=(Tensor[(8, 8, 4), float64], Tensor[(6, 7, 14), float64], Tensor[(588), uint8], Tensor[(8, 8, 4), float64], Tensor[(9, 12, 12), float32], Tensor[(1296), float64]) */;
    %160 = %144.1;
    %161 = %153.4;
    %162 = %154.1;
    %163 = %157.1;
    %164 = %158.1;
    %165 = %159.1;
    (%160, %161, %var_24137, meta[relay.Constant][4] /* ty=Tensor[(528), float32] */, meta[relay.Constant][5] /* ty=Tensor[(640), float64] */, %162, %163, meta[relay.Constant][6] /* ty=Tensor[(980), uint32] */, %164, %165)
  };
  %166(%var_24184) /* ty=(Tensor[(1296), float64], Tensor[(16, 8, 5), float64], Tensor[(1440), uint16], Tensor[(528), float32], Tensor[(640), float64], Tensor[(256), float64], Tensor[(8, 8, 4), float64], Tensor[(980), uint32], Tensor[(8, 8, 4), float64], Tensor[(6, 7, 14), float64]) */
}

def @func_18863(%var_18807: Tensor[(5, 14, 14), uint32]) -> (Tensor[(5, 14, 14), uint32], Tensor[(8, 8, 4), float64], Tensor[(8, 8, 4), float64], Tensor[(2, 5, 12), bool], Tensor[(120), float64], Tensor[(8, 8, 4), float64]) {
  %167 = cast(%var_18807, dtype="uint32") /* ty=Tensor[(5, 14, 14), uint32] */;
  %168 = shape_of(meta[relay.Constant][7] /* ty=Tensor[(5, 14, 14), uint32] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %169 = cast(meta[relay.Constant][7] /* ty=Tensor[(5, 14, 14), uint32] */, dtype="uint32") /* ty=Tensor[(5, 14, 14), uint32] */;
  %170 = dyn.reshape(%167, %168, newshape=[]) /* ty=Tensor[(?, ?, ?), uint32] */;
  %171 = @func_8261() /* ty=(Tensor[(8, 8, 4), float64], Tensor[(8, 8, 4), int64], Tensor[(8, 8, 4), float64]) */;
  %172 = @func_15851() /* ty=(Tensor[(8, 8, 4), float64], Tensor[(8, 8, 4), uint8], Tensor[(8, 8, 4), int32]) */;
  %173 = cast(meta[relay.Constant][8] /* ty=Tensor[(120), float64] */, dtype="float64") /* ty=Tensor[(120), float64] */;
  %174 = cast(meta[relay.Constant][8] /* ty=Tensor[(120), float64] */, dtype="float64") /* ty=Tensor[(120), float64] */;
  %175 = reshape(%173, newshape=[2, 5, 12]) /* ty=Tensor[(2, 5, 12), float64] */;
  %176 = reshape(%174, newshape=[2, 5, 12]) /* ty=Tensor[(2, 5, 12), float64] */;
  %177 = @func_8852(%175, %176) /* ty=(Tensor[(2, 5, 12), bool],) */;
  %178 = @func_7099() /* ty=(Tensor[(8, 8, 4), float64],) */;
  %179 = bitwise_and(%169, %170) /* ty=Tensor[(5, 14, 14), uint32] */;
  %180 = %171.0;
  %181 = %172.0;
  %182 = %177.0;
  %183 = %178.0;
  (%179, %180, %181, %182, meta[relay.Constant][8] /* ty=Tensor[(120), float64] */, %183)
}

def @func_19486() -> (Tensor[(8, 8, 4), float64],) {
  @func_19484() /* ty=(Tensor[(8, 8, 4), float64],) */
}

def @func_12947() -> (Tensor[(1296), bool], Tensor[(8, 8, 4), float64]) {
  %187 = fn () -> (Tensor[(1296), bool], Tensor[(8, 8, 4), float64]) {
    %184 = @func_8352() /* ty=(Tensor[(8, 8, 4), float64], Tensor[(1296), bool]) */;
    %185 = %184.1;
    %186 = @func_8298() /* ty=Tensor[(8, 8, 4), float64] */;
    (%185, %186)
  };
  %187() /* ty=(Tensor[(1296), bool], Tensor[(8, 8, 4), float64]) */
}

def @func_15269() -> (Tensor[(8, 8, 4), float64], Tensor[(8, 8, 4), int64]) {
  %188 = @func_10182() /* ty=(Tensor[(8, 8, 4), float64], Tensor[(8, 8, 4), float64]) */;
  %189 = @func_7878() /* ty=(Tensor[(8, 8, 4), float64], Tensor[(8, 8, 4), int64], Tensor[(256), float64]) */;
  %190 = %188.0;
  %191 = %189.1;
  (%190, %191)
}

def @func_24859() -> (Tensor[(8, 8, 4), float64], Tensor[(8, 8, 4), float64], Tensor[(8, 8, 4), int32]) {
  @func_24857() /* ty=(Tensor[(8, 8, 4), float64], Tensor[(8, 8, 4), float64], Tensor[(8, 8, 4), int32]) */
}

def @func_18710() -> Tensor[(8, 8, 4), float64] {
  %192 = fn () -> Tensor[(8, 8, 4), float64] {
    @func_11472() /* ty=Tensor[(8, 8, 4), float64] */
  };
  %192() /* ty=Tensor[(8, 8, 4), float64] */
}

def @func_21234() -> (Tensor[(8, 8, 4), float64], Tensor[(8, 8, 4), float64]) {
  %196 = fn () -> (Tensor[(8, 8, 4), float64], Tensor[(8, 8, 4), float64]) {
    %193 = @func_16702() /* ty=(Tensor[(8, 8, 4), float64],) */;
    %194 = @func_16426() /* ty=Tensor[(8, 8, 4), float64] */;
    %195 = %193.0;
    (%194, %195)
  };
  %196() /* ty=(Tensor[(8, 8, 4), float64], Tensor[(8, 8, 4), float64]) */
}

def @func_7292() -> (Tensor[(8, 8, 4), float64],) {
  %197 = @func_5727() /* ty=(Tensor[(8, 8, 4), float64],) */;
  %198 = %197.0;
  (%198,)
}

def @func_13997() -> (Tensor[(8, 8, 4), float64],) {
  %201 = fn () -> (Tensor[(8, 8, 4), float64],) {
    %199 = @func_7878() /* ty=(Tensor[(8, 8, 4), float64], Tensor[(8, 8, 4), int64], Tensor[(256), float64]) */;
    %200 = %199.0;
    (%200,)
  };
  %201() /* ty=(Tensor[(8, 8, 4), float64],) */
}

def @func_4664(%var_4662: Tensor[(7, 11, 15), int8], %var_4663: Tensor[(1260), float32]) -> (Tensor[(7, 11, 15), bool], Tensor[(14, 6, 15), float32], Tensor[(1260), float32]) {
  @func_4660(%var_4662, %var_4663) /* ty=(Tensor[(7, 11, 15), bool], Tensor[(14, 6, 15), float32], Tensor[(1260), float32]) */
}

def @func_25200() -> (Tensor[(1296), bool], Tensor[(1296), float64]) {
  %204 = fn () -> (Tensor[(1296), bool], Tensor[(1296), float64]) {
    %202 = @func_10439() /* ty=Tensor[(1296), bool] */;
    %203 = @func_13550() /* ty=Tensor[(1296), float64] */;
    (%202, %203)
  };
  %204() /* ty=(Tensor[(1296), bool], Tensor[(1296), float64]) */
}

def @func_9275() -> (Tensor[(8, 8, 4), float64], Tensor[(1260), float32], Tensor[(1155), int8], Tensor[(1260), float32], Tensor[(8, 8, 4), float64], Tensor[(8, 8, 4), float64]) {
  %205 = @func_6698() /* ty=(Tensor[(8, 8, 4), float64],) */;
  %206 = cast(meta[relay.Constant][9] /* ty=Tensor[(1155), int8] */, dtype="int8") /* ty=Tensor[(1155), int8] */;
  %207 = cast(meta[relay.Constant][10] /* ty=Tensor[(1260), float32] */, dtype="float32") /* ty=Tensor[(1260), float32] */;
  %208 = reshape(%206, newshape=[7, 11, 15]) /* ty=Tensor[(7, 11, 15), int8] */;
  %209 = reshape(%207, newshape=[1260]) /* ty=Tensor[(1260), float32] */;
  %210 = @func_4660(%208, %209) /* ty=(Tensor[(7, 11, 15), bool], Tensor[(14, 6, 15), float32], Tensor[(1260), float32]) */;
  %211 = @func_7504() /* ty=(Tensor[(8, 8, 4), float64],) */;
  %212 = %205.0;
  %213 = %210.2;
  %214 = %211.0;
  %215 = @func_8829() /* ty=Tensor[(8, 8, 4), float64] */;
  (%212, %213, meta[relay.Constant][9] /* ty=Tensor[(1155), int8] */, meta[relay.Constant][10] /* ty=Tensor[(1260), float32] */, %214, %215)
}

def @func_15919() -> (Tensor[(1296), float64], Tensor[(8, 8, 4), float64], Tensor[(528), float32]) {
  %216 = @func_12332() /* ty=(Tensor[(120), float64], Tensor[(1296), float64]) */;
  %217 = cast(meta[relay.Constant][11] /* ty=Tensor[(528), float32] */, dtype="float32") /* ty=Tensor[(528), float32] */;
  %218 = %216.1;
  %219 = cast(%218, dtype="bool") /* ty=Tensor[(1296), bool] */;
  %220 = reshape(%217, newshape=[528]) /* ty=Tensor[(528), float32] */;
  %221 = reshape(%219, newshape=[1296]) /* ty=Tensor[(1296), bool] */;
  %222 = @func_12034(%220, %221) /* ty=(Tensor[(8, 8, 4), float64], Tensor[(8, 8, 4), float64], Tensor[(528), float32], Tensor[(1296), bool]) */;
  %223 = %222.1;
  (%218, %223, meta[relay.Constant][11] /* ty=Tensor[(528), float32] */)
}

def @func_10685() -> (uint8,) {
  %225 = fn () -> (uint8,) {
    %224 = @func_8420() /* ty=uint8 */;
    (%224,)
  };
  %225() /* ty=(uint8,) */
}

def @func_5470() -> (Tensor[(8, 8, 4), float64],) {
  @func_5468() /* ty=(Tensor[(8, 8, 4), float64],) */
}

def @func_26275() -> (Tensor[(120), float64], Tensor[(8, 8, 4), float64], Tensor[(256), float64]) {
  @func_26273() /* ty=(Tensor[(120), float64], Tensor[(8, 8, 4), float64], Tensor[(256), float64]) */
}

def @func_13003() -> (Tensor[(1296), float64],) {
  %226 = @func_8971() /* ty=(Tensor[(1296), float64],) */;
  %227 = %226.0;
  (%227,)
}

def @func_11429() -> (Tensor[(1296), bool],) {
  %228 = @func_8448() /* ty=(Tensor[(1296), bool], Tensor[(1296), bool]) */;
  %229 = %228.0;
  (%229,)
}

def @func_17303() -> (Tensor[(8, 8, 4), float64], Tensor[(1296), float64]) {
  %230 = @func_15517() /* ty=(Tensor[(8, 8, 4), float64], Tensor[(1296), float64]) */;
  %231 = @func_8971() /* ty=(Tensor[(1296), float64],) */;
  %232 = %230.0;
  %233 = %231.0;
  (%232, %233)
}

def @func_16118() -> (Tensor[(1296), bool], Tensor[(8, 8, 4), float64]) {
  @func_16116() /* ty=(Tensor[(1296), bool], Tensor[(8, 8, 4), float64]) */
}

def @func_9707() -> Tensor[(8, 8, 4), float64] {
  @func_9705() /* ty=Tensor[(8, 8, 4), float64] */
}

def @func_23634() -> (Tensor[(8, 8, 4), float64], Tensor[(1296), float64]) {
  %237 = fn () -> (Tensor[(8, 8, 4), float64], Tensor[(1296), float64]) {
    %234 = @func_8261() /* ty=(Tensor[(8, 8, 4), float64], Tensor[(8, 8, 4), int64], Tensor[(8, 8, 4), float64]) */;
    %235 = %234.0;
    %236 = @func_14772() /* ty=Tensor[(1296), float64] */;
    (%235, %236)
  };
  %237() /* ty=(Tensor[(8, 8, 4), float64], Tensor[(1296), float64]) */
}

def @func_17491(%var_17480: Tensor[(528), float32], %var_17484: Tensor[(432), float32]) -> (Tensor[(8, 8, 4), float64], Tensor[(8, 8, 4), float64], Tensor[(3, 11, 16), float32], Tensor[(528), float32], uint8, Tensor[(9, 4, 12), bool], Tensor[(432), float32]) {
  %238 = @func_10865() /* ty=(Tensor[(8, 8, 4), float64], Tensor[(1296), bool], Tensor[(256), float64], Tensor[(8, 8, 4), float64], uint8) */;
  %239 = @func_15657() /* ty=(Tensor[(8, 8, 4), float64], Tensor[(8, 8, 4), float64]) */;
  %240 = cast(%var_17480, dtype="float32") /* ty=Tensor[(528), float32] */;
  %241 = cast(meta[relay.Constant][12] /* ty=uint8 */, dtype="uint8") /* ty=uint8 */;
  %242 = reshape(%240, newshape=[3, 11, 16]) /* ty=Tensor[(3, 11, 16), float32] */;
  %243 = reshape(%241, newshape=[]) /* ty=uint8 */;
  %244 = @func_2471(%242, %243) /* ty=(Tensor[(3, 11, 16), float32], Tensor[(14, 6, 15), float32], Tensor[(1260), float32], Tensor[(1260), float32], uint8, Tensor[(75), uint8], Tensor[(14, 6, 15), float32]) */;
  %245 = cast(meta[relay.Constant][12] /* ty=uint8 */, dtype="float32") /* ty=float32 */;
  %246 = cast(%var_17484, dtype="float32") /* ty=Tensor[(432), float32] */;
  %247 = cast(%var_17484, dtype="float32") /* ty=Tensor[(432), float32] */;
  %248 = reshape(%245, newshape=[]) /* ty=float32 */;
  %249 = reshape(%246, newshape=[9, 4, 12]) /* ty=Tensor[(9, 4, 12), float32] */;
  %250 = reshape(%247, newshape=[9, 4, 12]) /* ty=Tensor[(9, 4, 12), float32] */;
  %251 = @func_7803(%248, %249, %250) /* ty=(Tensor[(9, 4, 12), bool],) */;
  %252 = %238.0;
  %253 = %239.0;
  %254 = %244.0;
  %255 = %251.0;
  (%252, %253, %254, %var_17480, meta[relay.Constant][12] /* ty=uint8 */, %255, %var_17484)
}

def @func_25709() -> (Tensor[(8, 8, 4), float64], Tensor[(1296), float64], Tensor[(1296), float64], Tensor[(1296), float64]) {
  %263 = fn () -> (Tensor[(8, 8, 4), float64], Tensor[(1296), float64], Tensor[(1296), float64], Tensor[(1296), float64]) {
    %256 = @func_24620() /* ty=(Tensor[(8, 8, 4), float64],) */;
    %257 = @func_6257() /* ty=(Tensor[(1296), float64],) */;
    %258 = @func_21923() /* ty=(Tensor[(8, 8, 4), float64], Tensor[(8, 8, 4), int32], Tensor[(1296), float64]) */;
    %259 = %256.0;
    %260 = %257.0;
    %261 = %258.2;
    %262 = @func_14467() /* ty=Tensor[(1296), float64] */;
    (%259, %260, %261, %262)
  };
  %263() /* ty=(Tensor[(8, 8, 4), float64], Tensor[(1296), float64], Tensor[(1296), float64], Tensor[(1296), float64]) */
}

def @func_12529() -> (uint8,) {
  %264 = @func_6905() /* ty=(Tensor[(8, 8, 4), float64], uint8, Tensor[(528), float32], uint8, Tensor[(8, 8, 4), float64]) */;
  %265 = %264.1;
  (%265,)
}

def @func_26784() -> (Tensor[(8, 8, 4), uint8], Tensor[(8, 8, 4), float64]) {
  @func_26782() /* ty=(Tensor[(8, 8, 4), uint8], Tensor[(8, 8, 4), float64]) */
}

def @func_12037(%var_12035: Tensor[(528), float32], %var_12036: Tensor[(1296), bool]) -> (Tensor[(8, 8, 4), float64], Tensor[(8, 8, 4), float64], Tensor[(528), float32], Tensor[(1296), bool]) {
  %278 = fn (%var_12016: Tensor[(528), float32], %var_12028: Tensor[(1296), bool]) -> (Tensor[(8, 8, 4), float64], Tensor[(8, 8, 4), float64], Tensor[(528), float32], Tensor[(1296), bool]) {
    %266 = @func_11387() /* ty=(Tensor[(8, 8, 4), float64], Tensor[(8, 8, 4), float64]) */;
    %267 = cast(%var_12016, dtype="float32") /* ty=Tensor[(528), float32] */;
    %268 = reshape(%267, newshape=[528]) /* ty=Tensor[(528), float32] */;
    %269 = @func_9155(%268) /* ty=(Tensor[(1296), bool], Tensor[(8, 8, 4), float64], Tensor[(256), float64], Tensor[(528), float32]) */;
    %270 = %269.0;
    %271 = cast(%var_12028, dtype="bool") /* ty=Tensor[(1296), bool] */;
    %272 = shape_of(%270, dtype="int32") /* ty=Tensor[(1), int32] */;
    %273 = cast(%270, dtype="bool") /* ty=Tensor[(1296), bool] */;
    %274 = dyn.reshape(%271, %272, newshape=[]) /* ty=Tensor[(?), bool] */;
    %275 = @func_7342() /* ty=Tensor[(8, 8, 4), float64] */;
    %276 = %266.1;
    %277 = equal(%273, %274) /* ty=Tensor[(1296), bool] */;
    (%275, %276, %var_12016, %277)
  };
  %278(%var_12035, %var_12036) /* ty=(Tensor[(8, 8, 4), float64], Tensor[(8, 8, 4), float64], Tensor[(528), float32], Tensor[(1296), bool]) */
}

def @func_7808(%var_7805: float32, %var_7806: Tensor[(9, 4, 12), float32], %var_7807: Tensor[(9, 4, 12), float32]) -> (Tensor[(9, 4, 12), bool],) {
  @func_7803(%var_7805, %var_7806, %var_7807) /* ty=(Tensor[(9, 4, 12), bool],) */
}

def @func_17646() -> (Tensor[(8, 8, 4), float64],) {
  @func_17644() /* ty=(Tensor[(8, 8, 4), float64],) */
}

def @func_23255() -> (uint8, Tensor[(8, 8, 4), float64], Tensor[(8, 8, 4), int64]) {
  @func_23253() /* ty=(uint8, Tensor[(8, 8, 4), float64], Tensor[(8, 8, 4), int64]) */
}

def @func_7818() -> (Tensor[(8, 8, 4), float64], Tensor[(8, 8, 4), int32]) {
  @func_7816() /* ty=(Tensor[(8, 8, 4), float64], Tensor[(8, 8, 4), int32]) */
}

def @func_19584() -> (Tensor[(1296), float64],) {
  %279 = @func_19149() /* ty=(Tensor[(8, 8, 4), float64], Tensor[(1296), float64]) */;
  %280 = %279.1;
  (%280,)
}

def @func_6700() -> (Tensor[(8, 8, 4), float64],) {
  @func_6698() /* ty=(Tensor[(8, 8, 4), float64],) */
}

def @func_19384() -> (Tensor[(8, 8, 4), float64], Tensor[(528), float32], Tensor[(8, 8, 4), float64]) {
  %281 = @func_16149() /* ty=(Tensor[(8, 8, 4), float64], Tensor[(1260), float32]) */;
  %282 = @func_15919() /* ty=(Tensor[(1296), float64], Tensor[(8, 8, 4), float64], Tensor[(528), float32]) */;
  %283 = @func_16635() /* ty=(uint8, Tensor[(8, 8, 4), float64], Tensor[(8, 8, 4), float64]) */;
  %284 = %281.0;
  %285 = %282.2;
  %286 = %283.2;
  (%284, %285, %286)
}

def @func_15957() -> (Tensor[(1296), float64],) {
  %289 = fn () -> (Tensor[(1296), float64],) {
    %287 = @func_10378() /* ty=(Tensor[(8, 8, 4), int64], Tensor[(8, 8, 4), float64], Tensor[(9, 12, 12), float32], Tensor[(1296), float64], Tensor[(16, 8, 5), float64]) */;
    %288 = %287.3;
    (%288,)
  };
  %289() /* ty=(Tensor[(1296), float64],) */
}

def @func_14973() -> Tensor[(8, 8, 4), float64] {
  %290 = @func_8352() /* ty=(Tensor[(8, 8, 4), float64], Tensor[(1296), bool]) */;
  %290.0
}

def @func_16665() -> (Tensor[(8, 8, 4), float64],) {
  %293 = fn () -> (Tensor[(8, 8, 4), float64],) {
    %291 = @func_10626() /* ty=(Tensor[(8, 8, 4), int64], Tensor[(8, 8, 4), float64]) */;
    %292 = %291.1;
    (%292,)
  };
  %293() /* ty=(Tensor[(8, 8, 4), float64],) */
}

def @func_26740(%var_26739: Tensor[(6, 12, 7), float64]) -> (Tensor[(6, 12, 7), float64], Tensor[(4, 6, 1), float64], Tensor[(24), float64], Tensor[(6, 12, 7), float32]) {
  %308 = fn (%var_26726: Tensor[(6, 12, 7), float64]) -> (Tensor[(6, 12, 7), float64], Tensor[(4, 6, 1), float64], Tensor[(24), float64], Tensor[(6, 12, 7), float32]) {
    %294 = cast(meta[relay.Constant][13] /* ty=Tensor[(6, 12, 7), float64] */, dtype="float64") /* ty=Tensor[(6, 12, 7), float64] */;
    %295 = shape_of(%var_26726, dtype="int32") /* ty=Tensor[(3), int32] */;
    %296 = cast(%var_26726, dtype="float64") /* ty=Tensor[(6, 12, 7), float64] */;
    %297 = dyn.reshape(%294, %295, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
    %298 = cast(meta[relay.Constant][14] /* ty=Tensor[(24), float64] */, dtype="float64") /* ty=Tensor[(24), float64] */;
    %299 = reshape(%298, newshape=[4, 6, 1]) /* ty=Tensor[(4, 6, 1), float64] */;
    %300 = @func_12454(%299) /* ty=(Tensor[(4, 6, 1), float64],) */;
    %301 = cast(meta[relay.Constant][13] /* ty=Tensor[(6, 12, 7), float64] */, dtype="float32") /* ty=Tensor[(6, 12, 7), float32] */;
    %302 = shape_of(%var_26726, dtype="int32") /* ty=Tensor[(3), int32] */;
    %303 = cast(%var_26726, dtype="float32") /* ty=Tensor[(6, 12, 7), float32] */;
    %304 = dyn.reshape(%301, %302, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
    %305 = floor_mod(%296, %297) /* ty=Tensor[(6, 12, 7), float64] */;
    %306 = %300.0;
    %307 = divide(%303, %304) /* ty=Tensor[(6, 12, 7), float32] */;
    (%305, %306, meta[relay.Constant][14] /* ty=Tensor[(24), float64] */, %307)
  };
  %308(%var_26739) /* ty=(Tensor[(6, 12, 7), float64], Tensor[(4, 6, 1), float64], Tensor[(24), float64], Tensor[(6, 12, 7), float32]) */
}

def @func_6044() -> Tensor[(8, 8, 4), float64] {
  @func_6042() /* ty=Tensor[(8, 8, 4), float64] */
}

def @func_25498(%var_25482: Tensor[(12, 5, 14), float64]) -> (uint8, Tensor[(12, 5, 14), bool]) {
  %309 = cast(%var_25482, dtype="float64") /* ty=Tensor[(12, 5, 14), float64] */;
  %310 = rsqrt(%309) /* ty=Tensor[(12, 5, 14), float64] */;
  %311 = cast(%var_25482, dtype="bool") /* ty=Tensor[(12, 5, 14), bool] */;
  %312 = shape_of(%310, dtype="int32") /* ty=Tensor[(3), int32] */;
  %313 = cast(%310, dtype="bool") /* ty=Tensor[(12, 5, 14), bool] */;
  %314 = dyn.reshape(%311, %312, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %315 = @func_21213() /* ty=uint8 */;
  %316 = logical_and(%313, %314) /* ty=Tensor[(12, 5, 14), bool] */;
  (%315, %316)
}

def @func_15207() -> (Tensor[(8, 8, 4), float64], Tensor[(8, 8, 4), uint8]) {
  %317 = @func_6905() /* ty=(Tensor[(8, 8, 4), float64], uint8, Tensor[(528), float32], uint8, Tensor[(8, 8, 4), float64]) */;
  %318 = @func_9585() /* ty=(Tensor[(8, 8, 4), int64], Tensor[(8, 8, 4), float64], Tensor[(1296), bool], uint8, Tensor[(8, 8, 4), uint8], Tensor[(1296), float64], Tensor[(2, 5, 12), bool], Tensor[(120), float64], Tensor[(8, 8, 4), bool]) */;
  %319 = %317.0;
  %320 = %318.4;
  (%319, %320)
}

def @func_8632() -> (Tensor[(8, 8, 4), float64],) {
  @func_8630() /* ty=(Tensor[(8, 8, 4), float64],) */
}

def @func_19151() -> (Tensor[(8, 8, 4), float64], Tensor[(1296), float64]) {
  @func_19149() /* ty=(Tensor[(8, 8, 4), float64], Tensor[(1296), float64]) */
}

def @func_19245() -> (uint8, Tensor[(256), float64], Tensor[(1296), bool]) {
  %321 = @func_14455() /* ty=(Tensor[(256), float64],) */;
  %322 = @func_11429() /* ty=(Tensor[(1296), bool],) */;
  %323 = @func_18328() /* ty=uint8 */;
  %324 = %321.0;
  %325 = %322.0;
  (%323, %324, %325)
}

def @func_11431() -> (Tensor[(1296), bool],) {
  @func_11429() /* ty=(Tensor[(1296), bool],) */
}

def @func_17341() -> (uint8, Tensor[(12, 15, 7), float64], Tensor[(90, 14), float64], Tensor[(8, 8, 4), float64]) {
  %333 = fn () -> (uint8, Tensor[(12, 15, 7), float64], Tensor[(90, 14), float64], Tensor[(8, 8, 4), float64]) {
    %326 = cast(meta[relay.Constant][15] /* ty=Tensor[(90, 14), float64] */, dtype="float64") /* ty=Tensor[(90, 14), float64] */;
    %327 = cast(meta[relay.Constant][15] /* ty=Tensor[(90, 14), float64] */, dtype="float64") /* ty=Tensor[(90, 14), float64] */;
    %328 = reshape(%326, newshape=[12, 15, 7]) /* ty=Tensor[(12, 15, 7), float64] */;
    %329 = reshape(%327, newshape=[12, 15, 7]) /* ty=Tensor[(12, 15, 7), float64] */;
    %330 = @func_11795() /* ty=uint8 */;
    %331 = @func_7075(%328, %329) /* ty=Tensor[(12, 15, 7), float64] */;
    %332 = @func_8501() /* ty=Tensor[(8, 8, 4), float64] */;
    (%330, %331, meta[relay.Constant][15] /* ty=Tensor[(90, 14), float64] */, %332)
  };
  %333() /* ty=(uint8, Tensor[(12, 15, 7), float64], Tensor[(90, 14), float64], Tensor[(8, 8, 4), float64]) */
}

def @func_15835() -> Tensor[(256), float64] {
  @func_15833() /* ty=Tensor[(256), float64] */
}

def @func_6367() -> (Tensor[(1296), bool], Tensor[(8, 8, 4), int64], Tensor[(256), float64]) {
  %344 = fn () -> (Tensor[(1296), bool], Tensor[(8, 8, 4), int64], Tensor[(256), float64]) {
    %334 = @func_6257() /* ty=(Tensor[(1296), float64],) */;
    %335 = %334.0;
    %336 = cast(meta[relay.Constant][16] /* ty=Tensor[(1296), float64] */, dtype="bool") /* ty=Tensor[(1296), bool] */;
    %337 = shape_of(%335, dtype="int32") /* ty=Tensor[(1), int32] */;
    %338 = cast(%335, dtype="bool") /* ty=Tensor[(1296), bool] */;
    %339 = dyn.reshape(%336, %337, newshape=[]) /* ty=Tensor[(?), bool] */;
    %340 = cast(meta[relay.Constant][17] /* ty=Tensor[(256), float64] */, dtype="float64") /* ty=Tensor[(256), float64] */;
    %341 = reshape(%340, newshape=[8, 8, 4]) /* ty=Tensor[(8, 8, 4), float64] */;
    %342 = greater(%338, %339) /* ty=Tensor[(1296), bool] */;
    %343 = @func_5643(%341) /* ty=Tensor[(8, 8, 4), int64] */;
    (%342, %343, meta[relay.Constant][17] /* ty=Tensor[(256), float64] */)
  };
  %344() /* ty=(Tensor[(1296), bool], Tensor[(8, 8, 4), int64], Tensor[(256), float64]) */
}

def @func_7487(%var_7485: Tensor[(528, 1), float32]) -> (Tensor[(8, 8, 4), float64], Tensor[(1260), bool], Tensor[(1440), uint16], Tensor[(528, 1), float32], Tensor[(640), float64], Tensor[(14, 6, 15), float32]) {
  @func_7484(%var_7485) /* ty=(Tensor[(8, 8, 4), float64], Tensor[(1260), bool], Tensor[(1440), uint16], Tensor[(528, 1), float32], Tensor[(640), float64], Tensor[(14, 6, 15), float32]) */
}

def @func_6259() -> (Tensor[(1296), float64],) {
  @func_6257() /* ty=(Tensor[(1296), float64],) */
}

def @func_24021() -> (Tensor[(1296), float64], Tensor[(1296), float64], Tensor[(1296), bool]) {
  @func_24019() /* ty=(Tensor[(1296), float64], Tensor[(1296), float64], Tensor[(1296), bool]) */
}

def @func_25722() -> Tensor[(1296), float64] {
  %345 = @func_19584() /* ty=(Tensor[(1296), float64],) */;
  %345.0
}

def @func_15711() -> (uint8,) {
  @func_15709() /* ty=(uint8,) */
}

def @func_9677() -> (Tensor[(8, 8, 4), float64], Tensor[(8, 8, 4), float64]) {
  %346 = @func_6018() /* ty=(Tensor[(8, 8, 4), float64],) */;
  %347 = %346.0;
  %348 = @func_7168() /* ty=Tensor[(8, 8, 4), float64] */;
  (%347, %348)
}

def @func_21552() -> (Tensor[(8, 8, 4), float64], Tensor[(1296), float64]) {
  @func_21550() /* ty=(Tensor[(8, 8, 4), float64], Tensor[(1296), float64]) */
}

def @func_26330(%var_26307: int64, %var_26308: Tensor[(3, 15, 2), int64]) -> (Tensor[(3, 15, 2), bool], Tensor[(3, 15, 2), float32]) {
  %349 = cast(%var_26307, dtype="bool") /* ty=bool */;
  %350 = cast(%var_26308, dtype="bool") /* ty=Tensor[(3, 15, 2), bool] */;
  %351 = cast(%var_26308, dtype="float32") /* ty=Tensor[(3, 15, 2), float32] */;
  %352 = cast(%var_26307, dtype="float32") /* ty=float32 */;
  %353 = equal(%349, %350) /* ty=Tensor[(3, 15, 2), bool] */;
  %354 = divide(%351, %352) /* ty=Tensor[(3, 15, 2), float32] */;
  (%353, %354)
}

def @func_15049(%var_15048: Tensor[(1260), float64]) -> (Tensor[(8, 8, 4), float64], Tensor[(1296), float64], Tensor[(12, 15, 7), float64], Tensor[(1260), float64], Tensor[(1296), float64], Tensor[(8, 8, 4), float64], Tensor[(8, 8, 4), float64]) {
  %368 = fn (%var_15020: Tensor[(1260), float64]) -> (Tensor[(8, 8, 4), float64], Tensor[(1296), float64], Tensor[(12, 15, 7), float64], Tensor[(1260), float64], Tensor[(1296), float64], Tensor[(8, 8, 4), float64], Tensor[(8, 8, 4), float64]) {
    %355 = @func_10378() /* ty=(Tensor[(8, 8, 4), int64], Tensor[(8, 8, 4), float64], Tensor[(9, 12, 12), float32], Tensor[(1296), float64], Tensor[(16, 8, 5), float64]) */;
    %356 = cast(%var_15020, dtype="float64") /* ty=Tensor[(1260), float64] */;
    %357 = cast(%var_15020, dtype="float64") /* ty=Tensor[(1260), float64] */;
    %358 = reshape(%356, newshape=[12, 15, 7]) /* ty=Tensor[(12, 15, 7), float64] */;
    %359 = reshape(%357, newshape=[12, 15, 7]) /* ty=Tensor[(12, 15, 7), float64] */;
    %360 = @func_9237() /* ty=(Tensor[(8, 8, 4), float64], Tensor[(1296), float64], Tensor[(1260), bool], Tensor[(528), float32]) */;
    %361 = @func_13842() /* ty=(Tensor[(8, 8, 4), float64],) */;
    %362 = @func_6452() /* ty=Tensor[(8, 8, 4), float64] */;
    %363 = %355.3;
    %364 = @func_7075(%358, %359) /* ty=Tensor[(12, 15, 7), float64] */;
    %365 = @func_14772() /* ty=Tensor[(1296), float64] */;
    %366 = %360.0;
    %367 = %361.0;
    (%362, %363, %364, %var_15020, %365, %366, %367)
  };
  %368(%var_15048) /* ty=(Tensor[(8, 8, 4), float64], Tensor[(1296), float64], Tensor[(12, 15, 7), float64], Tensor[(1260), float64], Tensor[(1296), float64], Tensor[(8, 8, 4), float64], Tensor[(8, 8, 4), float64]) */
}

def @func_2190(%var_2188: Tensor[(16, 8, 5), float64]) -> (Tensor[(16, 8, 5), float64],) {
  @func_2187(%var_2188) /* ty=(Tensor[(16, 8, 5), float64],) */
}

def @func_11194() -> (Tensor[(16, 8, 5), float64],) {
  @func_11192() /* ty=(Tensor[(16, 8, 5), float64],) */
}

def @func_19447() -> (uint8, Tensor[(16, 8, 5), float64], Tensor[(1296), bool], Tensor[(936), float64]) {
  %369 = cast(meta[relay.Constant][18] /* ty=Tensor[(936), uint8] */, dtype="uint8") /* ty=Tensor[(936), uint8] */;
  %370 = reshape(%369, newshape=[13, 8, 9]) /* ty=Tensor[(13, 8, 9), uint8] */;
  %371 = @func_2229(%370) /* ty=(Tensor[(13, 8, 9), bool], Tensor[(16, 8, 5), float64], Tensor[(640), float64]) */;
  %372 = @func_16355() /* ty=(uint8, Tensor[(8, 8, 4), float64], Tensor[(1296), bool], Tensor[(14, 2, 15), int64], Tensor[(5, 6), int64], Tensor[(5, 84), int64]) */;
  %373 = cast(meta[relay.Constant][18] /* ty=Tensor[(936), uint8] */, dtype="float64") /* ty=Tensor[(936), float64] */;
  %374 = @func_11795() /* ty=uint8 */;
  %375 = %371.1;
  %376 = %372.2;
  %377 = rsqrt(%373) /* ty=Tensor[(936), float64] */;
  (%374, %375, %376, %377)
}

def @func_18533(%var_18526: Tensor[(1440), uint16]) -> (Tensor[(120), float64], Tensor[(3, 11, 16), float32], Tensor[(1440), uint16], Tensor[(528), float32], Tensor[(10, 64), float64]) {
  %378 = @func_14940() /* ty=(Tensor[(120), float64],) */;
  %379 = cast(%var_18526, dtype="uint16") /* ty=Tensor[(1440), uint16] */;
  %380 = cast(%var_18526, dtype="uint16") /* ty=Tensor[(1440), uint16] */;
  %381 = cast(meta[relay.Constant][19] /* ty=Tensor[(528), float32] */, dtype="float32") /* ty=Tensor[(528), float32] */;
  %382 = cast(meta[relay.Constant][20] /* ty=Tensor[(10, 64), float64] */, dtype="float64") /* ty=Tensor[(10, 64), float64] */;
  %383 = reshape(%379, newshape=[16, 15, 6]) /* ty=Tensor[(16, 15, 6), uint16] */;
  %384 = reshape(%380, newshape=[16, 15, 6]) /* ty=Tensor[(16, 15, 6), uint16] */;
  %385 = reshape(%381, newshape=[528]) /* ty=Tensor[(528), float32] */;
  %386 = reshape(%382, newshape=[640]) /* ty=Tensor[(640), float64] */;
  %387 = @func_3760(%383, %384, %385, %386) /* ty=(Tensor[(16, 15, 6), uint16], Tensor[(528), float32], uint8, Tensor[(16, 15, 6), bool], Tensor[(16, 8, 5), float64], Tensor[(640), float64], Tensor[(14, 6, 15), float32], Tensor[(9, 12, 12), float32], Tensor[(1296), float64], Tensor[(1260), bool], Tensor[(3, 11, 16), float32]) */;
  %388 = %378.0;
  %389 = %387.10;
  (%388, %389, %var_18526, meta[relay.Constant][19] /* ty=Tensor[(528), float32] */, meta[relay.Constant][20] /* ty=Tensor[(10, 64), float64] */)
}

def @func_19904() -> (Tensor[(1296), float64],) {
  %390 = @func_10962() /* ty=(Tensor[(1296), float64], Tensor[(256), float64], Tensor[(8, 8, 4), float64]) */;
  %391 = %390.0;
  (%391,)
}

def @func_21215() -> uint8 {
  @func_21213() /* ty=uint8 */
}

def @func_7505() -> (Tensor[(8, 8, 4), float64],) {
  %393 = fn () -> (Tensor[(8, 8, 4), float64],) {
    %392 = @func_5688() /* ty=Tensor[(8, 8, 4), float64] */;
    (%392,)
  };
  %393() /* ty=(Tensor[(8, 8, 4), float64],) */
}

def @func_19449() -> (uint8, Tensor[(16, 8, 5), float64], Tensor[(1296), bool], Tensor[(936), float64]) {
  @func_19447() /* ty=(uint8, Tensor[(16, 8, 5), float64], Tensor[(1296), bool], Tensor[(936), float64]) */
}

def @func_9239() -> (Tensor[(8, 8, 4), float64], Tensor[(1296), float64], Tensor[(1260), bool], Tensor[(528), float32]) {
  @func_9237() /* ty=(Tensor[(8, 8, 4), float64], Tensor[(1296), float64], Tensor[(1260), bool], Tensor[(528), float32]) */
}

def @func_22462() -> (Tensor[(8, 8, 4), float64], Tensor[(8, 8, 4), float64]) {
  @func_22460() /* ty=(Tensor[(8, 8, 4), float64], Tensor[(8, 8, 4), float64]) */
}

def @func_24243() -> Tensor[(1296), bool] {
  @func_24057() /* ty=Tensor[(1296), bool] */
}

def @func_11893(%var_11884: Tensor[(30), float32], %var_11885: Tensor[(77, 15), int8], %var_11886: Tensor[(1260), float32]) -> (Tensor[(8, 8, 4), float64], Tensor[(8, 8, 4), uint8], Tensor[(8, 8, 4), float64], Tensor[(8, 8, 4), float64], Tensor[(8, 8, 4), int64], Tensor[(14, 6, 15), float32], Tensor[(30), float32], Tensor[(77, 15), int8], Tensor[(1260), float32], Tensor[(8, 8, 4), float64]) {
  %394 = @func_9237() /* ty=(Tensor[(8, 8, 4), float64], Tensor[(1296), float64], Tensor[(1260), bool], Tensor[(528), float32]) */;
  %395 = @func_7595() /* ty=(Tensor[(1296), float64], Tensor[(8, 8, 4), float64], Tensor[(8, 8, 4), uint8]) */;
  %396 = @func_5727() /* ty=(Tensor[(8, 8, 4), float64],) */;
  %397 = @func_7816() /* ty=(Tensor[(8, 8, 4), float64], Tensor[(8, 8, 4), int32]) */;
  %398 = %394.0;
  %399 = cast(%398, dtype="float64") /* ty=Tensor[(8, 8, 4), float64] */;
  %400 = reshape(%399, newshape=[8, 8, 4]) /* ty=Tensor[(8, 8, 4), float64] */;
  %401 = cast(%var_11884, dtype="float32") /* ty=Tensor[(30), float32] */;
  %402 = cast(%var_11885, dtype="int8") /* ty=Tensor[(77, 15), int8] */;
  %403 = cast(%var_11886, dtype="float32") /* ty=Tensor[(1260), float32] */;
  %404 = reshape(%401, newshape=[5, 2, 3]) /* ty=Tensor[(5, 2, 3), float32] */;
  %405 = reshape(%402, newshape=[1155, 1]) /* ty=Tensor[(1155, 1), int8] */;
  %406 = reshape(%403, newshape=[1260]) /* ty=Tensor[(1260), float32] */;
  %407 = @func_7573(%404, %405, %406) /* ty=(Tensor[(8, 8, 4), float64], Tensor[(5, 2, 3), float32], Tensor[(8, 8, 4), int64], Tensor[(8, 8, 4), float64], Tensor[(14, 6, 15), float32], Tensor[(1155, 1), int8], Tensor[(1260), float32], Tensor[(8, 8, 4), float64]) */;
  %408 = %395.2;
  %409 = %396.0;
  %410 = %397.0;
  %411 = @func_5643(%400) /* ty=Tensor[(8, 8, 4), int64] */;
  %412 = %407.4;
  %413 = @func_8501() /* ty=Tensor[(8, 8, 4), float64] */;
  (%398, %408, %409, %410, %411, %412, %var_11884, %var_11885, %var_11886, %413)
}

def @func_7803(%var_7783: float32, %var_7784: Tensor[(9, 4, 12), float32], %var_7798: Tensor[(9, 4, 12), float32]) -> (Tensor[(9, 4, 12), bool],) {
  %414 = cast(%var_7783, dtype="float32") /* ty=float32 */;
  %415 = cast(%var_7784, dtype="float32") /* ty=Tensor[(9, 4, 12), float32] */;
  %416 = divide(%414, %415) /* ty=Tensor[(9, 4, 12), float32] */;
  %417 = cast(%var_7798, dtype="bool") /* ty=Tensor[(9, 4, 12), bool] */;
  %418 = shape_of(%416, dtype="int32") /* ty=Tensor[(3), int32] */;
  %419 = cast(%416, dtype="bool") /* ty=Tensor[(9, 4, 12), bool] */;
  %420 = dyn.reshape(%417, %418, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %421 = logical_or(%419, %420) /* ty=Tensor[(9, 4, 12), bool] */;
  (%421,)
}

def @func_11797() -> uint8 {
  @func_11795() /* ty=uint8 */
}

def @func_16043() -> (Tensor[(8, 8, 4), float64],) {
  %422 = @func_13789() /* ty=(Tensor[(8, 8, 4), float64], Tensor[(8, 8, 4), float64]) */;
  %423 = %422.1;
  (%423,)
}

def @func_19406() -> (uint8, Tensor[(256), float64], Tensor[(8, 8, 4), float64], Tensor[(256), float64]) {
  @func_19404() /* ty=(uint8, Tensor[(256), float64], Tensor[(8, 8, 4), float64], Tensor[(256), float64]) */
}

def @func_14772() -> Tensor[(1296), float64] {
  %424 = @func_6490() /* ty=(Tensor[(1296), float64],) */;
  %424.0
}

def @func_12888(%var_12887: Tensor[(936, 13), uint8]) -> (Tensor[(8, 8, 4), float64], Tensor[(936, 13), bool]) {
  %432 = fn (%var_12871: Tensor[(936, 13), uint8]) -> (Tensor[(8, 8, 4), float64], Tensor[(936, 13), bool]) {
    %425 = @func_10182() /* ty=(Tensor[(8, 8, 4), float64], Tensor[(8, 8, 4), float64]) */;
    %426 = @func_9397() /* ty=(Tensor[(8, 8, 4), float64], Tensor[(16, 8, 5), float64], Tensor[(936, 1), uint8]) */;
    %427 = %426.2;
    %428 = cast(%427, dtype="bool") /* ty=Tensor[(936, 1), bool] */;
    %429 = cast(%var_12871, dtype="bool") /* ty=Tensor[(936, 13), bool] */;
    %430 = %425.1;
    %431 = less(%428, %429) /* ty=Tensor[(936, 13), bool] */;
    (%430, %431)
  };
  %432(%var_12887) /* ty=(Tensor[(8, 8, 4), float64], Tensor[(936, 13), bool]) */
}

def @func_8501() -> Tensor[(8, 8, 4), float64] {
  @func_7342() /* ty=Tensor[(8, 8, 4), float64] */
}

def @func_19206() -> (Tensor[(256), float64], Tensor[(8, 8, 4), float64]) {
  %439 = fn () -> (Tensor[(256), float64], Tensor[(8, 8, 4), float64]) {
    %433 = @func_14126() /* ty=(Tensor[(256), float64],) */;
    %434 = %433.0;
    %435 = cast(%434, dtype="float64") /* ty=Tensor[(256), float64] */;
    %436 = reshape(%435, newshape=[8, 8, 4]) /* ty=Tensor[(8, 8, 4), float64] */;
    %437 = @func_7237(%436) /* ty=(Tensor[(8, 8, 4), bool], Tensor[(8, 8, 4), float64], Tensor[(8, 8, 4), float32], Tensor[(8, 8, 4), float64]) */;
    %438 = %437.3;
    (%434, %438)
  };
  %439() /* ty=(Tensor[(256), float64], Tensor[(8, 8, 4), float64]) */
}

def @func_22341() -> Tensor[(8, 8, 4), float64] {
  %441 = fn () -> Tensor[(8, 8, 4), float64] {
    %440 = @func_15479() /* ty=(Tensor[(8, 8, 4), float64],) */;
    %440.0
  };
  %441() /* ty=Tensor[(8, 8, 4), float64] */
}

def @func_24057() -> Tensor[(1296), bool] {
  %442 = @func_21509() /* ty=(Tensor[(8, 8, 4), float64], Tensor[(256), float64], Tensor[(1296), bool]) */;
  %442.2
}

def @func_11192() -> (Tensor[(16, 8, 5), float64],) {
  %443 = @func_10378() /* ty=(Tensor[(8, 8, 4), int64], Tensor[(8, 8, 4), float64], Tensor[(9, 12, 12), float32], Tensor[(1296), float64], Tensor[(16, 8, 5), float64]) */;
  %444 = %443.4;
  (%444,)
}

def @main(%var_27194: Tensor[(12, 2, 3), float32]) -> (Tensor[(12, 2, 3), int64],) {
  %445 = @func_21265() /* ty=(Tensor[(12, 2, 3), float32], Tensor[(8, 8, 4), float64]) */;
  %446 = %445.0;
  %447 = cast(%var_27194, dtype="int64") /* ty=Tensor[(12, 2, 3), int64] */;
  %448 = shape_of(%446, dtype="int32") /* ty=Tensor[(3), int32] */;
  %449 = cast(%446, dtype="int64") /* ty=Tensor[(12, 2, 3), int64] */;
  %450 = dyn.reshape(%447, %448, newshape=[]) /* ty=Tensor[(?, ?, ?), int64] */;
  %451 = bitwise_or(%449, %450) /* ty=Tensor[(12, 2, 3), int64] */;
  (%451,)
}

def @func_12152(%var_12150: Tensor[(1296), float64]) -> Tensor[(1296), float32] {
  @func_12149(%var_12150) /* ty=Tensor[(1296), float32] */
}

def @func_5646(%var_5644: Tensor[(8, 8, 4), float64]) -> Tensor[(8, 8, 4), int64] {
  @func_5643(%var_5644) /* ty=Tensor[(8, 8, 4), int64] */
}

def @func_6836(%var_6834: Tensor[(8, 8, 4), float64]) -> Tensor[(8, 8, 4), int32] {
  @func_6833(%var_6834) /* ty=Tensor[(8, 8, 4), int32] */
}

def @func_24019() -> (Tensor[(1296), float64], Tensor[(1296), float64], Tensor[(1296), bool]) {
  %452 = @func_23544() /* ty=(Tensor[(1296), bool],) */;
  %453 = @func_13328() /* ty=Tensor[(1296), float64] */;
  %454 = @func_6295() /* ty=Tensor[(1296), float64] */;
  %455 = %452.0;
  (%453, %454, %455)
}

def @func_26627() -> Tensor[(8, 8, 4), float64] {
  @func_18709() /* ty=Tensor[(8, 8, 4), float64] */
}

def @func_19861(%var_19859: Tensor[(30), float32], %var_19860: Tensor[(1, 1155), int8]) -> (Tensor[(8, 8, 4), float64], Tensor[(8, 8, 4), float64], Tensor[(8, 8, 4), float64], Tensor[(8, 8, 4), float64], Tensor[(77, 15), int8], Tensor[(30), float32], Tensor[(1, 1155), int8], Tensor[(1260), float32], Tensor[(8, 8, 4), float64], Tensor[(588), uint8]) {
  %473 = fn (%var_19827: Tensor[(30), float32], %var_19828: Tensor[(1, 1155), int8]) -> (Tensor[(8, 8, 4), float64], Tensor[(8, 8, 4), float64], Tensor[(8, 8, 4), float64], Tensor[(8, 8, 4), float64], Tensor[(77, 15), int8], Tensor[(30), float32], Tensor[(1, 1155), int8], Tensor[(1260), float32], Tensor[(8, 8, 4), float64], Tensor[(588), uint8]) {
    %456 = @func_6698() /* ty=(Tensor[(8, 8, 4), float64],) */;
    %457 = cast(%var_19827, dtype="float32") /* ty=Tensor[(30), float32] */;
    %458 = cast(%var_19828, dtype="int8") /* ty=Tensor[(1, 1155), int8] */;
    %459 = cast(meta[relay.Constant][21] /* ty=Tensor[(1260), float32] */, dtype="float32") /* ty=Tensor[(1260), float32] */;
    %460 = reshape(%457, newshape=[30]) /* ty=Tensor[(30), float32] */;
    %461 = reshape(%458, newshape=[77, 15]) /* ty=Tensor[(77, 15), int8] */;
    %462 = reshape(%459, newshape=[1260]) /* ty=Tensor[(1260), float32] */;
    %463 = @func_11893(%460, %461, %462) /* ty=(Tensor[(8, 8, 4), float64], Tensor[(8, 8, 4), uint8], Tensor[(8, 8, 4), float64], Tensor[(8, 8, 4), float64], Tensor[(8, 8, 4), int64], Tensor[(14, 6, 15), float32], Tensor[(30), float32], Tensor[(77, 15), int8], Tensor[(1260), float32], Tensor[(8, 8, 4), float64]) */;
    %464 = cast(meta[relay.Constant][22] /* ty=Tensor[(588), uint8] */, dtype="uint8") /* ty=Tensor[(588), uint8] */;
    %465 = reshape(%464, newshape=[588]) /* ty=Tensor[(588), uint8] */;
    %466 = @func_7663(%465) /* ty=(Tensor[(8, 8, 4), float64], Tensor[(6, 7, 14), float64], Tensor[(588), uint8], Tensor[(8, 8, 4), float64]) */;
    %467 = @func_11627() /* ty=Tensor[(8, 8, 4), float64] */;
    %468 = @func_8829() /* ty=Tensor[(8, 8, 4), float64] */;
    %469 = @func_8298() /* ty=Tensor[(8, 8, 4), float64] */;
    %470 = %456.0;
    %471 = %463.7;
    %472 = %466.3;
    (%467, %468, %469, %470, %471, %var_19827, %var_19828, meta[relay.Constant][21] /* ty=Tensor[(1260), float32] */, %472, meta[relay.Constant][22] /* ty=Tensor[(588), uint8] */)
  };
  %473(%var_19859, %var_19860) /* ty=(Tensor[(8, 8, 4), float64], Tensor[(8, 8, 4), float64], Tensor[(8, 8, 4), float64], Tensor[(8, 8, 4), float64], Tensor[(77, 15), int8], Tensor[(30), float32], Tensor[(1, 1155), int8], Tensor[(1260), float32], Tensor[(8, 8, 4), float64], Tensor[(588), uint8]) */
}

def @func_16427() -> Tensor[(8, 8, 4), float64] {
  %475 = fn () -> Tensor[(8, 8, 4), float64] {
    %474 = @func_5468() /* ty=(Tensor[(8, 8, 4), float64],) */;
    %474.0
  };
  %475() /* ty=Tensor[(8, 8, 4), float64] */
}

def @func_14590(%var_14565: Tensor[(14, 8, 13), float64]) -> (Tensor[(14, 8, 13), float64], Tensor[(14, 8, 13), float64], Tensor[(14, 8, 13), float32], Tensor[(8, 8, 4), float64]) {
  %476 = cast(%var_14565, dtype="float64") /* ty=Tensor[(14, 8, 13), float64] */;
  %477 = cast(%var_14565, dtype="float64") /* ty=Tensor[(14, 8, 13), float64] */;
  %478 = cast(%var_14565, dtype="float32") /* ty=Tensor[(14, 8, 13), float32] */;
  %479 = @func_12511() /* ty=(Tensor[(8, 8, 4), float64], uint8) */;
  %480 = cosh(%476) /* ty=Tensor[(14, 8, 13), float64] */;
  %481 = atan(%477) /* ty=Tensor[(14, 8, 13), float64] */;
  %482 = log(%478) /* ty=Tensor[(14, 8, 13), float32] */;
  %483 = %479.0;
  (%480, %481, %482, %483)
}

def @func_8811() -> (Tensor[(1296), bool],) {
  @func_8809() /* ty=(Tensor[(1296), bool],) */
}

def @func_21601(%var_21579: Tensor[(77, 4), uint64]) -> (Tensor[(8, 8, 4), float64], Tensor[(2, 14, 11), uint64], Tensor[(77, 4), uint64]) {
  %484 = @func_7099() /* ty=(Tensor[(8, 8, 4), float64],) */;
  %485 = cast(%var_21579, dtype="uint64") /* ty=Tensor[(77, 4), uint64] */;
  %486 = cast(%var_21579, dtype="uint64") /* ty=Tensor[(77, 4), uint64] */;
  %487 = reshape(%485, newshape=[2, 14, 11]) /* ty=Tensor[(2, 14, 11), uint64] */;
  %488 = reshape(%486, newshape=[2, 14, 11]) /* ty=Tensor[(2, 14, 11), uint64] */;
  %489 = @func_11696(%487, %488) /* ty=(Tensor[(2, 14, 11), uint64], Tensor[(8, 8, 4), float64], Tensor[(2, 14, 11), float32]) */;
  %490 = %484.0;
  %491 = %489.0;
  (%490, %491, %var_21579)
}

def @func_17071() -> Tensor[(256), float64] {
  %492 = @func_13419() /* ty=(Tensor[(9, 12, 12), float32], Tensor[(256), float64]) */;
  %492.1
}

def @func_23253() -> (uint8, Tensor[(8, 8, 4), float64], Tensor[(8, 8, 4), int64]) {
  %493 = @func_12511() /* ty=(Tensor[(8, 8, 4), float64], uint8) */;
  %494 = @func_21550() /* ty=(Tensor[(8, 8, 4), float64], Tensor[(1296), float64]) */;
  %495 = %493.1;
  %496 = cast(%495, dtype="uint8") /* ty=uint8 */;
  %497 = reshape(%496, newshape=[]) /* ty=uint8 */;
  %498 = @func_18129(%497) /* ty=(Tensor[(8, 8, 4), float64], Tensor[(8, 8, 4), float64], Tensor[(14, 6, 15), float32], Tensor[(528), float32], uint8, Tensor[(8, 8, 4), int64]) */;
  %499 = %494.0;
  %500 = %498.5;
  (%495, %499, %500)
}

def @func_6490() -> (Tensor[(1296), float64],) {
  %501 = @func_6295() /* ty=Tensor[(1296), float64] */;
  (%501,)
}

def @func_12707() -> Tensor[(8, 8, 4), float64] {
  @func_11472() /* ty=Tensor[(8, 8, 4), float64] */
}

def @func_9340() -> (Tensor[(1296), float64], Tensor[(8, 8, 4), float64]) {
  %505 = fn () -> (Tensor[(1296), float64], Tensor[(8, 8, 4), float64]) {
    %502 = @func_7595() /* ty=(Tensor[(1296), float64], Tensor[(8, 8, 4), float64], Tensor[(8, 8, 4), uint8]) */;
    %503 = @func_8571() /* ty=Tensor[(1296), float64] */;
    %504 = %502.1;
    (%503, %504)
  };
  %505() /* ty=(Tensor[(1296), float64], Tensor[(8, 8, 4), float64]) */
}

def @func_9399() -> (Tensor[(8, 8, 4), float64], Tensor[(16, 8, 5), float64], Tensor[(936, 1), uint8]) {
  @func_9397() /* ty=(Tensor[(8, 8, 4), float64], Tensor[(16, 8, 5), float64], Tensor[(936, 1), uint8]) */
}

def @func_4660(%var_4631: Tensor[(7, 11, 15), int8], %var_4653: Tensor[(1260), float32]) -> (Tensor[(7, 11, 15), bool], Tensor[(14, 6, 15), float32], Tensor[(1260), float32]) {
  %506 = cast(%var_4631, dtype="bool") /* ty=Tensor[(7, 11, 15), bool] */;
  %507 = shape_of(meta[relay.Constant][23] /* ty=Tensor[(7, 11, 15), int8] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %508 = cast(meta[relay.Constant][23] /* ty=Tensor[(7, 11, 15), int8] */, dtype="bool") /* ty=Tensor[(7, 11, 15), bool] */;
  %509 = dyn.reshape(%506, %507, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %510 = cast(%var_4653, dtype="float32") /* ty=Tensor[(1260), float32] */;
  %511 = reshape(%510, newshape=[14, 6, 15]) /* ty=Tensor[(14, 6, 15), float32] */;
  %512 = @func_963(%511) /* ty=(Tensor[(14, 6, 15), float32],) */;
  %513 = not_equal(%508, %509) /* ty=Tensor[(7, 11, 15), bool] */;
  %514 = %512.0;
  (%513, %514, %var_4653)
}

def @func_7903() -> uint8 {
  @func_7901() /* ty=uint8 */
}

def @func_6492() -> (Tensor[(1296), float64],) {
  @func_6490() /* ty=(Tensor[(1296), float64],) */
}

def @func_23092() -> Tensor[(8, 8, 4), float64] {
  @func_23090() /* ty=Tensor[(8, 8, 4), float64] */
}

def @func_9157(%var_9156: Tensor[(528), float32]) -> (Tensor[(1296), bool], Tensor[(8, 8, 4), float64], Tensor[(256), float64], Tensor[(528), float32]) {
  %522 = fn (%var_9151: Tensor[(528), float32]) -> (Tensor[(1296), bool], Tensor[(8, 8, 4), float64], Tensor[(256), float64], Tensor[(528), float32]) {
    %515 = @func_8809() /* ty=(Tensor[(1296), bool],) */;
    %516 = cast(%var_9151, dtype="float32") /* ty=Tensor[(528), float32] */;
    %517 = reshape(%516, newshape=[1, 528]) /* ty=Tensor[(1, 528), float32] */;
    %518 = @func_6780(%517) /* ty=(Tensor[(256), float64], Tensor[(1296), bool], Tensor[(8, 8, 4), float64], Tensor[(1, 528), float32], Tensor[(8, 8, 4), int64]) */;
    %519 = %515.0;
    %520 = @func_7342() /* ty=Tensor[(8, 8, 4), float64] */;
    %521 = %518.0;
    (%519, %520, %521, %var_9151)
  };
  %522(%var_9156) /* ty=(Tensor[(1296), bool], Tensor[(8, 8, 4), float64], Tensor[(256), float64], Tensor[(528), float32]) */
}

def @func_14349(%var_14347: Tensor[(15, 8, 16), float32], %var_14348: Tensor[(15, 8, 16), float32]) -> (Tensor[(15, 8, 16), float32],) {
  %528 = fn (%var_14335: Tensor[(15, 8, 16), float32], %var_14336: Tensor[(15, 8, 16), float32]) -> (Tensor[(15, 8, 16), float32],) {
    %523 = cast(%var_14336, dtype="float32") /* ty=Tensor[(15, 8, 16), float32] */;
    %524 = shape_of(%var_14335, dtype="int32") /* ty=Tensor[(3), int32] */;
    %525 = cast(%var_14335, dtype="float32") /* ty=Tensor[(15, 8, 16), float32] */;
    %526 = dyn.reshape(%523, %524, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
    %527 = mod(%525, %526) /* ty=Tensor[(15, 8, 16), float32] */;
    (%527,)
  };
  %528(%var_14347, %var_14348) /* ty=(Tensor[(15, 8, 16), float32],) */
}

def @func_11629() -> Tensor[(8, 8, 4), float64] {
  @func_11627() /* ty=Tensor[(8, 8, 4), float64] */
}

def @func_11744(%var_11735: Tensor[(256), float64]) -> (Tensor[(1296), float64], Tensor[(8, 8, 4), int32], Tensor[(256), float64]) {
  %529 = @func_8971() /* ty=(Tensor[(1296), float64],) */;
  %530 = cast(%var_11735, dtype="float64") /* ty=Tensor[(256), float64] */;
  %531 = reshape(%530, newshape=[8, 8, 4]) /* ty=Tensor[(8, 8, 4), float64] */;
  %532 = %529.0;
  %533 = @func_6833(%531) /* ty=Tensor[(8, 8, 4), int32] */;
  (%532, %533, %var_11735)
}

def @func_5808() -> Tensor[(8, 8, 4), float64] {
  %534 = fn () -> Tensor[(8, 8, 4), float64] {
    @func_5688() /* ty=Tensor[(8, 8, 4), float64] */
  };
  %534() /* ty=Tensor[(8, 8, 4), float64] */
}

def @func_14635() -> (Tensor[(528), float32], Tensor[(1296), float64], Tensor[(8, 8, 4), float64]) {
  @func_14633() /* ty=(Tensor[(528), float32], Tensor[(1296), float64], Tensor[(8, 8, 4), float64]) */
}

def @func_14457() -> (Tensor[(256), float64],) {
  @func_14455() /* ty=(Tensor[(256), float64],) */
}

def @func_25038() -> Tensor[(8, 8, 4), float64] {
  @func_25036() /* ty=Tensor[(8, 8, 4), float64] */
}

def @func_13421() -> (Tensor[(9, 12, 12), float32], Tensor[(256), float64]) {
  @func_13419() /* ty=(Tensor[(9, 12, 12), float32], Tensor[(256), float64]) */
}

def @func_9277() -> (Tensor[(8, 8, 4), float64], Tensor[(1260), float32], Tensor[(1155), int8], Tensor[(1260), float32], Tensor[(8, 8, 4), float64], Tensor[(8, 8, 4), float64]) {
  @func_9275() /* ty=(Tensor[(8, 8, 4), float64], Tensor[(1260), float32], Tensor[(1155), int8], Tensor[(1260), float32], Tensor[(8, 8, 4), float64], Tensor[(8, 8, 4), float64]) */
}

def @func_10245() -> (Tensor[(120), float64],) {
  %535 = @func_10231() /* ty=(Tensor[(120), float64], Tensor[(8, 8, 4), float64], Tensor[(1296), float64]) */;
  %536 = %535.0;
  (%536,)
}

def @func_20458() -> uint8 {
  %538 = fn () -> uint8 {
    %537 = @func_9953() /* ty=(uint8,) */;
    %537.0
  };
  %538() /* ty=uint8 */
}

def @func_8212(%var_8210: Tensor[(640), float64]) -> (Tensor[(8, 8, 4), float64], Tensor[(16, 8, 5), float64], Tensor[(640), float64]) {
  @func_8209(%var_8210) /* ty=(Tensor[(8, 8, 4), float64], Tensor[(16, 8, 5), float64], Tensor[(640), float64]) */
}

def @func_26782() -> (Tensor[(8, 8, 4), uint8], Tensor[(8, 8, 4), float64]) {
  %539 = @func_15207() /* ty=(Tensor[(8, 8, 4), float64], Tensor[(8, 8, 4), uint8]) */;
  %540 = %539.1;
  %541 = @func_22340() /* ty=Tensor[(8, 8, 4), float64] */;
  (%540, %541)
}

def @func_9620() -> Tensor[(120), float64] {
  @func_9618() /* ty=Tensor[(120), float64] */
}

def @func_7957() -> (Tensor[(8, 8, 4), float64],) {
  @func_7955() /* ty=(Tensor[(8, 8, 4), float64],) */
}

def @func_25639() -> (Tensor[(256), float64],) {
  %544 = fn () -> (Tensor[(256), float64],) {
    %542 = @func_19299() /* ty=(Tensor[(256), float64],) */;
    %543 = %542.0;
    (%543,)
  };
  %544() /* ty=(Tensor[(256), float64],) */
}

def @func_5643(%var_5634: Tensor[(8, 8, 4), float64]) -> Tensor[(8, 8, 4), int64] {
  %545 = @func_5468() /* ty=(Tensor[(8, 8, 4), float64],) */;
  %546 = %545.0;
  %547 = cast(%var_5634, dtype="int64") /* ty=Tensor[(8, 8, 4), int64] */;
  %548 = shape_of(%546, dtype="int32") /* ty=Tensor[(3), int32] */;
  %549 = cast(%546, dtype="int64") /* ty=Tensor[(8, 8, 4), int64] */;
  %550 = dyn.reshape(%547, %548, newshape=[]) /* ty=Tensor[(?, ?, ?), int64] */;
  minimum(%549, %550) /* ty=Tensor[(8, 8, 4), int64] */
}

def @func_20167() -> Tensor[(8, 8, 4), float64] {
  @func_20165() /* ty=Tensor[(8, 8, 4), float64] */
}

def @func_14391() -> Tensor[(8, 8, 4), float64] {
  %551 = @func_13685() /* ty=(Tensor[(8, 8, 4), float64], Tensor[(8, 8, 4), float64]) */;
  %551.0
}

def @func_11898(%var_11895: Tensor[(30), float32], %var_11896: Tensor[(77, 15), int8], %var_11897: Tensor[(1260), float32]) -> (Tensor[(8, 8, 4), float64], Tensor[(8, 8, 4), uint8], Tensor[(8, 8, 4), float64], Tensor[(8, 8, 4), float64], Tensor[(8, 8, 4), int64], Tensor[(14, 6, 15), float32], Tensor[(30), float32], Tensor[(77, 15), int8], Tensor[(1260), float32], Tensor[(8, 8, 4), float64]) {
  @func_11893(%var_11895, %var_11896, %var_11897) /* ty=(Tensor[(8, 8, 4), float64], Tensor[(8, 8, 4), uint8], Tensor[(8, 8, 4), float64], Tensor[(8, 8, 4), float64], Tensor[(8, 8, 4), int64], Tensor[(14, 6, 15), float32], Tensor[(30), float32], Tensor[(77, 15), int8], Tensor[(1260), float32], Tensor[(8, 8, 4), float64]) */
}

def @func_14283() -> (Tensor[(256), float64],) {
  %554 = fn () -> (Tensor[(256), float64],) {
    %552 = @func_7364() /* ty=(Tensor[(8, 8, 4), int64], Tensor[(256), float64]) */;
    %553 = %552.1;
    (%553,)
  };
  %554() /* ty=(Tensor[(256), float64],) */
}

def @func_12619(%var_12617: Tensor[(13, 8, 14), float64]) -> Tensor[(13, 8, 14), float64] {
  @func_12616(%var_12617) /* ty=Tensor[(13, 8, 14), float64] */
}

def @func_21737() -> (uint8, Tensor[(8, 8, 4), float64]) {
  %557 = fn () -> (uint8, Tensor[(8, 8, 4), float64]) {
    %555 = @func_18328() /* ty=uint8 */;
    %556 = @func_5807() /* ty=Tensor[(8, 8, 4), float64] */;
    (%555, %556)
  };
  %557() /* ty=(uint8, Tensor[(8, 8, 4), float64]) */
}

def @func_20165() -> Tensor[(8, 8, 4), float64] {
  %558 = @func_20007() /* ty=(Tensor[(8, 8, 4), float64], Tensor[(8, 8, 4), float64]) */;
  %558.1
}

def @func_8448() -> (Tensor[(1296), bool], Tensor[(1296), bool]) {
  %559 = @func_6366() /* ty=(Tensor[(1296), bool], Tensor[(8, 8, 4), int64], Tensor[(256), float64]) */;
  %560 = @func_6538() /* ty=Tensor[(1296), bool] */;
  %561 = %559.0;
  (%560, %561)
}

def @func_9111() -> (Tensor[(4, 7, 5), float32], Tensor[(2, 5, 12), bool], Tensor[(120), float64]) {
  %562 = cast(meta[relay.Constant][24] /* ty=Tensor[(4, 7, 5), float32] */, dtype="float32") /* ty=Tensor[(4, 7, 5), float32] */;
  %563 = cast(meta[relay.Constant][25] /* ty=Tensor[(120), float64] */, dtype="float64") /* ty=Tensor[(120), float64] */;
  %564 = cast(meta[relay.Constant][25] /* ty=Tensor[(120), float64] */, dtype="float64") /* ty=Tensor[(120), float64] */;
  %565 = reshape(%563, newshape=[2, 5, 12]) /* ty=Tensor[(2, 5, 12), float64] */;
  %566 = reshape(%564, newshape=[2, 5, 12]) /* ty=Tensor[(2, 5, 12), float64] */;
  %567 = @func_8852(%565, %566) /* ty=(Tensor[(2, 5, 12), bool],) */;
  %568 = sin(%562) /* ty=Tensor[(4, 7, 5), float32] */;
  %569 = %567.0;
  (%568, %569, meta[relay.Constant][25] /* ty=Tensor[(120), float64] */)
}

def @func_6782(%var_6781: Tensor[(1, 528), float32]) -> (Tensor[(256), float64], Tensor[(1296), bool], Tensor[(8, 8, 4), float64], Tensor[(1, 528), float32], Tensor[(8, 8, 4), int64]) {
  %580 = fn (%var_6762: Tensor[(1, 528), float32]) -> (Tensor[(256), float64], Tensor[(1296), bool], Tensor[(8, 8, 4), float64], Tensor[(1, 528), float32], Tensor[(8, 8, 4), int64]) {
    %570 = @func_6366() /* ty=(Tensor[(1296), bool], Tensor[(8, 8, 4), int64], Tensor[(256), float64]) */;
    %571 = cast(%var_6762, dtype="float32") /* ty=Tensor[(1, 528), float32] */;
    %572 = reshape(%571, newshape=[264, 2]) /* ty=Tensor[(264, 2), float32] */;
    %573 = @func_6610(%572) /* ty=(Tensor[(8, 8, 4), float64], Tensor[(3, 11, 16), float32], Tensor[(264, 2), float32], uint8) */;
    %574 = %570.2;
    %575 = cast(%574, dtype="float64") /* ty=Tensor[(256), float64] */;
    %576 = reshape(%575, newshape=[8, 8, 4]) /* ty=Tensor[(8, 8, 4), float64] */;
    %577 = @func_6538() /* ty=Tensor[(1296), bool] */;
    %578 = %573.0;
    %579 = @func_5643(%576) /* ty=Tensor[(8, 8, 4), int64] */;
    (%574, %577, %578, %var_6762, %579)
  };
  %580(%var_6781) /* ty=(Tensor[(256), float64], Tensor[(1296), bool], Tensor[(8, 8, 4), float64], Tensor[(1, 528), float32], Tensor[(8, 8, 4), int64]) */
}

def @func_19108() -> (Tensor[(8, 8, 4), float64], Tensor[(8, 8, 4), uint8]) {
  %581 = @func_13110() /* ty=(Tensor[(8, 8, 4), int64], Tensor[(256), float64], Tensor[(1296), float64], Tensor[(8, 8, 4), float64]) */;
  %582 = @func_15578() /* ty=(Tensor[(8, 8, 4), float64], Tensor[(8, 8, 4), float64], Tensor[(8, 8, 4), uint8], uint8) */;
  %583 = %581.3;
  %584 = %582.2;
  (%583, %584)
}

def @func_26426() -> uint8 {
  %586 = fn () -> uint8 {
    %585 = @func_10684() /* ty=(uint8,) */;
    %585.0
  };
  %586() /* ty=uint8 */
}

def @func_19300() -> (Tensor[(256), float64],) {
  %589 = fn () -> (Tensor[(256), float64],) {
    %587 = @func_13419() /* ty=(Tensor[(9, 12, 12), float32], Tensor[(256), float64]) */;
    %588 = %587.1;
    (%588,)
  };
  %589() /* ty=(Tensor[(256), float64],) */
}

def @func_10600(%var_10565: Tensor[(1296), float64], %var_10580: Tensor[(256), float64]) -> (Tensor[(1296), float32], Tensor[(8, 8, 4), int32], Tensor[(256), float64], Tensor[(1296), float64]) {
  %590 = @func_9648() /* ty=(Tensor[(1296), float64],) */;
  %591 = %590.0;
  %592 = cast(%var_10565, dtype="float32") /* ty=Tensor[(1296), float32] */;
  %593 = shape_of(%591, dtype="int32") /* ty=Tensor[(1), int32] */;
  %594 = cast(%591, dtype="float32") /* ty=Tensor[(1296), float32] */;
  %595 = dyn.reshape(%592, %593, newshape=[]) /* ty=Tensor[(?), float32] */;
  %596 = cast(%var_10580, dtype="float64") /* ty=Tensor[(256), float64] */;
  %597 = reshape(%596, newshape=[8, 8, 4]) /* ty=Tensor[(8, 8, 4), float64] */;
  %598 = cast(%var_10565, dtype="float64") /* ty=Tensor[(1296), float64] */;
  %599 = power(%594, %595) /* ty=Tensor[(1296), float32] */;
  %600 = @func_6833(%597) /* ty=Tensor[(8, 8, 4), int32] */;
  %601 = asinh(%598) /* ty=Tensor[(1296), float64] */;
  (%599, %600, %var_10580, %601)
}

def @func_15480() -> (Tensor[(8, 8, 4), float64],) {
  %604 = fn () -> (Tensor[(8, 8, 4), float64],) {
    %602 = @func_6982() /* ty=(Tensor[(8, 8, 4), float64], Tensor[(8, 8, 4), float64]) */;
    %603 = %602.0;
    (%603,)
  };
  %604() /* ty=(Tensor[(8, 8, 4), float64],) */
}

def @func_18987() -> (Tensor[(8, 8, 4), float64], Tensor[(1260), float32]) {
  @func_18985() /* ty=(Tensor[(8, 8, 4), float64], Tensor[(1260), float32]) */
}

def @func_12616(%var_12608: Tensor[(13, 8, 14), float64]) -> Tensor[(13, 8, 14), float64] {
  %605 = cast(%var_12608, dtype="float64") /* ty=Tensor[(13, 8, 14), float64] */;
  asin(%605) /* ty=Tensor[(13, 8, 14), float64] */
}

def @func_25267() -> (Tensor[(8, 8, 4), float64],) {
  %606 = @func_14720() /* ty=(Tensor[(8, 8, 4), float64], Tensor[(1296), float64], Tensor[(1296), bool], Tensor[(4, 5, 10), bool], Tensor[(200), bool], Tensor[(8, 8, 4), float64]) */;
  %607 = %606.0;
  (%607,)
}

def @func_20561(%var_20553: Tensor[(12, 2, 4), float32]) -> (Tensor[(12, 2, 4), float32],) {
  %608 = cast(%var_20553, dtype="float32") /* ty=Tensor[(12, 2, 4), float32] */;
  %609 = sigmoid(%608) /* ty=Tensor[(12, 2, 4), float32] */;
  (%609,)
}

def @func_26115() -> (Tensor[(8, 8, 4), float64],) {
  %612 = fn () -> (Tensor[(8, 8, 4), float64],) {
    %610 = @func_7099() /* ty=(Tensor[(8, 8, 4), float64],) */;
    %611 = %610.0;
    (%611,)
  };
  %612() /* ty=(Tensor[(8, 8, 4), float64],) */
}

def @func_5688() -> Tensor[(8, 8, 4), float64] {
  %613 = @func_5468() /* ty=(Tensor[(8, 8, 4), float64],) */;
  %613.0
}

def @func_20990() -> (Tensor[(1296), float64], Tensor[(1296), bool], uint8) {
  @func_20988() /* ty=(Tensor[(1296), float64], Tensor[(1296), bool], uint8) */
}

def @func_14468() -> Tensor[(1296), float64] {
  %615 = fn () -> Tensor[(1296), float64] {
    %614 = @func_6490() /* ty=(Tensor[(1296), float64],) */;
    %614.0
  };
  %615() /* ty=Tensor[(1296), float64] */
}

def @func_15639() -> (Tensor[(8, 8, 4), float64],) {
  %618 = fn () -> (Tensor[(8, 8, 4), float64],) {
    %616 = @func_6001() /* ty=(Tensor[(8, 8, 4), float64],) */;
    %617 = %616.0;
    (%617,)
  };
  %618() /* ty=(Tensor[(8, 8, 4), float64],) */
}

def @func_21550() -> (Tensor[(8, 8, 4), float64], Tensor[(1296), float64]) {
  %619 = @func_15479() /* ty=(Tensor[(8, 8, 4), float64],) */;
  %620 = %619.0;
  %621 = @func_6295() /* ty=Tensor[(1296), float64] */;
  (%620, %621)
}

def @func_6454() -> Tensor[(8, 8, 4), float64] {
  @func_6452() /* ty=Tensor[(8, 8, 4), float64] */
}

def @func_20787(%var_20785: Tensor[(16, 5, 12), float64], %var_20786: Tensor[(16, 5, 12), float64]) -> (Tensor[(16, 5, 12), float64], Tensor[(8, 8, 4), float64], Tensor[(16, 8, 5), float64], Tensor[(16, 5, 12), float32], Tensor[(8, 8, 4), float64], Tensor[(8, 8, 4), float64]) {
  %640 = fn (%var_20736: Tensor[(16, 5, 12), float64], %var_20737: Tensor[(16, 5, 12), float64]) -> (Tensor[(16, 5, 12), float64], Tensor[(8, 8, 4), float64], Tensor[(16, 8, 5), float64], Tensor[(16, 5, 12), float32], Tensor[(8, 8, 4), float64], Tensor[(8, 8, 4), float64]) {
    %622 = cast(%var_20737, dtype="float64") /* ty=Tensor[(16, 5, 12), float64] */;
    %623 = shape_of(%var_20736, dtype="int32") /* ty=Tensor[(3), int32] */;
    %624 = cast(%var_20736, dtype="float64") /* ty=Tensor[(16, 5, 12), float64] */;
    %625 = dyn.reshape(%622, %623, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
    %626 = @func_15479() /* ty=(Tensor[(8, 8, 4), float64],) */;
    %627 = @func_11192() /* ty=(Tensor[(16, 8, 5), float64],) */;
    %628 = cast(%var_20736, dtype="float32") /* ty=Tensor[(16, 5, 12), float32] */;
    %629 = shape_of(%var_20737, dtype="int32") /* ty=Tensor[(3), int32] */;
    %630 = cast(%var_20737, dtype="float32") /* ty=Tensor[(16, 5, 12), float32] */;
    %631 = dyn.reshape(%628, %629, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
    %632 = floor_divide(%630, %631) /* ty=Tensor[(16, 5, 12), float32] */;
    %633 = cast(%632, dtype="float32") /* ty=Tensor[(16, 5, 12), float32] */;
    %634 = floor_mod(%624, %625) /* ty=Tensor[(16, 5, 12), float64] */;
    %635 = %626.0;
    %636 = %627.0;
    %637 = asinh(%633) /* ty=Tensor[(16, 5, 12), float32] */;
    %638 = @func_20165() /* ty=Tensor[(8, 8, 4), float64] */;
    %639 = @func_6452() /* ty=Tensor[(8, 8, 4), float64] */;
    (%634, %635, %636, %637, %638, %639)
  };
  %640(%var_20785, %var_20786) /* ty=(Tensor[(16, 5, 12), float64], Tensor[(8, 8, 4), float64], Tensor[(16, 8, 5), float64], Tensor[(16, 5, 12), float32], Tensor[(8, 8, 4), float64], Tensor[(8, 8, 4), float64]) */
}

def @func_22636() -> uint8 {
  %642 = fn () -> uint8 {
    %641 = @func_19447() /* ty=(uint8, Tensor[(16, 8, 5), float64], Tensor[(1296), bool], Tensor[(936), float64]) */;
    %641.0
  };
  %642() /* ty=uint8 */
}

def @func_10866() -> (Tensor[(8, 8, 4), float64], Tensor[(1296), bool], Tensor[(256), float64], Tensor[(8, 8, 4), float64], uint8) {
  %653 = fn () -> (Tensor[(8, 8, 4), float64], Tensor[(1296), bool], Tensor[(256), float64], Tensor[(8, 8, 4), float64], uint8) {
    %643 = @func_8352() /* ty=(Tensor[(8, 8, 4), float64], Tensor[(1296), bool]) */;
    %644 = @func_6042() /* ty=Tensor[(8, 8, 4), float64] */;
    %645 = cast(%644, dtype="float64") /* ty=Tensor[(8, 8, 4), float64] */;
    %646 = reshape(%645, newshape=[256]) /* ty=Tensor[(256), float64] */;
    %647 = @func_10085(%646) /* ty=(Tensor[(1296), float64], Tensor[(1296), float64], Tensor[(8, 8, 4), int32], Tensor[(256), float64]) */;
    %648 = @func_6698() /* ty=(Tensor[(8, 8, 4), float64],) */;
    %649 = %643.1;
    %650 = %647.3;
    %651 = %648.0;
    %652 = @func_7901() /* ty=uint8 */;
    (%644, %649, %650, %651, %652)
  };
  %653() /* ty=(Tensor[(8, 8, 4), float64], Tensor[(1296), bool], Tensor[(256), float64], Tensor[(8, 8, 4), float64], uint8) */
}

def @func_26672() -> (Tensor[(256), float64], Tensor[(1296), float64], Tensor[(8, 8, 4), float64]) {
  %654 = @func_25638() /* ty=(Tensor[(256), float64],) */;
  %655 = @func_17303() /* ty=(Tensor[(8, 8, 4), float64], Tensor[(1296), float64]) */;
  %656 = @func_23946() /* ty=(Tensor[(8, 8, 4), float64],) */;
  %657 = %654.0;
  %658 = %655.1;
  %659 = %656.0;
  (%657, %658, %659)
}

def @func_7816() -> (Tensor[(8, 8, 4), float64], Tensor[(8, 8, 4), int32]) {
  %660 = @func_5468() /* ty=(Tensor[(8, 8, 4), float64],) */;
  %661 = %660.0;
  %662 = cast(%661, dtype="float64") /* ty=Tensor[(8, 8, 4), float64] */;
  %663 = reshape(%662, newshape=[8, 8, 4]) /* ty=Tensor[(8, 8, 4), float64] */;
  %664 = @func_6833(%663) /* ty=Tensor[(8, 8, 4), int32] */;
  (%661, %664)
}

def @func_19314() -> (Tensor[(8, 8, 4), float64],) {
  %665 = @func_8936() /* ty=Tensor[(8, 8, 4), float64] */;
  (%665,)
}

def @func_22460() -> (Tensor[(8, 8, 4), float64], Tensor[(8, 8, 4), float64]) {
  %666 = @func_6001() /* ty=(Tensor[(8, 8, 4), float64],) */;
  %667 = %666.0;
  %668 = @func_18401() /* ty=Tensor[(8, 8, 4), float64] */;
  (%667, %668)
}

def @func_23595(%var_23594: Tensor[(120), float64]) -> (Tensor[(1296), float64], Tensor[(2, 5, 12), bool], Tensor[(120), float64]) {
  %676 = fn (%var_23577: Tensor[(120), float64]) -> (Tensor[(1296), float64], Tensor[(2, 5, 12), bool], Tensor[(120), float64]) {
    %669 = cast(%var_23577, dtype="float64") /* ty=Tensor[(120), float64] */;
    %670 = cast(%var_23577, dtype="float64") /* ty=Tensor[(120), float64] */;
    %671 = reshape(%669, newshape=[2, 5, 12]) /* ty=Tensor[(2, 5, 12), float64] */;
    %672 = reshape(%670, newshape=[2, 5, 12]) /* ty=Tensor[(2, 5, 12), float64] */;
    %673 = @func_8852(%671, %672) /* ty=(Tensor[(2, 5, 12), bool],) */;
    %674 = @func_14772() /* ty=Tensor[(1296), float64] */;
    %675 = %673.0;
    (%674, %675, %var_23577)
  };
  %676(%var_23594) /* ty=(Tensor[(1296), float64], Tensor[(2, 5, 12), bool], Tensor[(120), float64]) */
}

def @func_14158() -> (uint8, Tensor[(8, 8, 4), float64]) {
  @func_14156() /* ty=(uint8, Tensor[(8, 8, 4), float64]) */
}

def @func_20394() -> (Tensor[(8, 8, 4), float64],) {
  %678 = fn () -> (Tensor[(8, 8, 4), float64],) {
    %677 = @func_20165() /* ty=Tensor[(8, 8, 4), float64] */;
    (%677,)
  };
  %678() /* ty=(Tensor[(8, 8, 4), float64],) */
}

def @func_12725() -> (Tensor[(8, 8, 4), float64],) {
  %680 = fn () -> (Tensor[(8, 8, 4), float64],) {
    %679 = @func_8829() /* ty=Tensor[(8, 8, 4), float64] */;
    (%679,)
  };
  %680() /* ty=(Tensor[(8, 8, 4), float64],) */
}

def @func_16793(%var_16791: uint8) -> (Tensor[(8, 8, 4), float64], Tensor[(14, 6, 15), float32], uint8, Tensor[(1, 528), float32]) {
  @func_16790(%var_16791) /* ty=(Tensor[(8, 8, 4), float64], Tensor[(14, 6, 15), float32], uint8, Tensor[(1, 528), float32]) */
}

def @func_23211(%var_23209: Tensor[(7, 3, 11), float64]) -> (Tensor[(7, 3, 11), float64], Tensor[(1296), float64]) {
  @func_23208(%var_23209) /* ty=(Tensor[(7, 3, 11), float64], Tensor[(1296), float64]) */
}

def @func_22755() -> (Tensor[(8, 8, 4), float64],) {
  @func_22753() /* ty=(Tensor[(8, 8, 4), float64],) */
}

def @func_4545(%var_4544: Tensor[(6, 7, 14), uint8]) -> (Tensor[(6, 7, 14), float64],) {
  %688 = fn (%var_4535: Tensor[(6, 7, 14), uint8]) -> (Tensor[(6, 7, 14), float64],) {
    %681 = cast(%var_4535, dtype="bool") /* ty=Tensor[(6, 7, 14), bool] */;
    %682 = shape_of(meta[relay.Constant][26] /* ty=Tensor[(6, 7, 14), uint8] */, dtype="int32") /* ty=Tensor[(3), int32] */;
    %683 = cast(meta[relay.Constant][26] /* ty=Tensor[(6, 7, 14), uint8] */, dtype="bool") /* ty=Tensor[(6, 7, 14), bool] */;
    %684 = dyn.reshape(%681, %682, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    %685 = greater_equal(%683, %684) /* ty=Tensor[(6, 7, 14), bool] */;
    %686 = cast(%685, dtype="float64") /* ty=Tensor[(6, 7, 14), float64] */;
    %687 = sigmoid(%686) /* ty=Tensor[(6, 7, 14), float64] */;
    (%687,)
  };
  %688(%var_4544) /* ty=(Tensor[(6, 7, 14), float64],) */
}

def @func_22753() -> (Tensor[(8, 8, 4), float64],) {
  %689 = @func_5807() /* ty=Tensor[(8, 8, 4), float64] */;
  (%689,)
}

def @func_9970() -> Tensor[(1296), bool] {
  @func_9968() /* ty=Tensor[(1296), bool] */
}

def @func_21655() -> (Tensor[(1296), bool],) {
  %692 = fn () -> (Tensor[(1296), bool],) {
    %690 = @func_11429() /* ty=(Tensor[(1296), bool],) */;
    %691 = %690.0;
    (%691,)
  };
  %692() /* ty=(Tensor[(1296), bool],) */
}

def @func_15988() -> (Tensor[(8, 8, 4), float64],) {
  @func_15986() /* ty=(Tensor[(8, 8, 4), float64],) */
}

def @func_14941() -> (Tensor[(120), float64],) {
  %694 = fn () -> (Tensor[(120), float64],) {
    %693 = @func_9618() /* ty=Tensor[(120), float64] */;
    (%693,)
  };
  %694() /* ty=(Tensor[(120), float64],) */
}

def @func_18985() -> (Tensor[(8, 8, 4), float64], Tensor[(1260), float32]) {
  %695 = @func_11342() /* ty=(Tensor[(8, 8, 4), float64], Tensor[(1260), float32]) */;
  %696 = @func_6042() /* ty=Tensor[(8, 8, 4), float64] */;
  %697 = %695.1;
  (%696, %697)
}

def @func_19705() -> (Tensor[(1296), float64], Tensor[(8, 8, 4), float64]) {
  %698 = @func_16917() /* ty=Tensor[(1296), float64] */;
  %699 = @func_8829() /* ty=Tensor[(8, 8, 4), float64] */;
  (%698, %699)
}

def @func_24205() -> (Tensor[(1296), bool], Tensor[(264, 2), bool], Tensor[(528, 1), float32], uint8) {
  %700 = @func_16469() /* ty=(Tensor[(1296), bool],) */;
  %701 = cast(meta[relay.Constant][27] /* ty=Tensor[(528, 1), float32] */, dtype="float32") /* ty=Tensor[(528, 1), float32] */;
  %702 = %700.0;
  %703 = cast(%702, dtype="bool") /* ty=Tensor[(1296), bool] */;
  %704 = cast(meta[relay.Constant][28] /* ty=uint8 */, dtype="uint8") /* ty=uint8 */;
  %705 = reshape(%701, newshape=[264, 2]) /* ty=Tensor[(264, 2), float32] */;
  %706 = reshape(%703, newshape=[1296]) /* ty=Tensor[(1296), bool] */;
  %707 = reshape(%704, newshape=[]) /* ty=uint8 */;
  %708 = @func_20730(%705, %706, %707) /* ty=(Tensor[(8, 8, 4), float64], Tensor[(8, 8, 4), float64], Tensor[(8, 8, 4), float64], Tensor[(12, 15, 7), float64], Tensor[(1260), float64], Tensor[(264, 2), int64], Tensor[(1296), uint64], Tensor[(8, 8, 4), float64], Tensor[(14, 6, 15), float32], Tensor[(75), uint8], uint8, Tensor[(8, 8, 4), float64], Tensor[(8, 8, 4), float64], Tensor[(264, 2), float64], Tensor[(264, 2), bool], Tensor[(1296), bool]) */;
  %709 = %708.14;
  (%702, %709, meta[relay.Constant][27] /* ty=Tensor[(528, 1), float32] */, meta[relay.Constant][28] /* ty=uint8 */)
}

def @func_14393() -> Tensor[(8, 8, 4), float64] {
  @func_14391() /* ty=Tensor[(8, 8, 4), float64] */
}

def @func_7168() -> Tensor[(8, 8, 4), float64] {
  %710 = @func_6018() /* ty=(Tensor[(8, 8, 4), float64],) */;
  %710.0
}

def @func_16116() -> (Tensor[(1296), bool], Tensor[(8, 8, 4), float64]) {
  %711 = @func_14112() /* ty=Tensor[(1296), bool] */;
  %712 = @func_15340() /* ty=Tensor[(8, 8, 4), float64] */;
  (%711, %712)
}

def @func_13110() -> (Tensor[(8, 8, 4), int64], Tensor[(256), float64], Tensor[(1296), float64], Tensor[(8, 8, 4), float64]) {
  %713 = cast(meta[relay.Constant][29] /* ty=Tensor[(256), float64] */, dtype="float64") /* ty=Tensor[(256), float64] */;
  %714 = reshape(%713, newshape=[8, 8, 4]) /* ty=Tensor[(8, 8, 4), float64] */;
  %715 = @func_6538() /* ty=Tensor[(1296), bool] */;
  %716 = cast(%715, dtype="float64") /* ty=Tensor[(1296), float64] */;
  %717 = @func_9677() /* ty=(Tensor[(8, 8, 4), float64], Tensor[(8, 8, 4), float64]) */;
  %718 = @func_5643(%714) /* ty=Tensor[(8, 8, 4), int64] */;
  %719 = rsqrt(%716) /* ty=Tensor[(1296), float64] */;
  %720 = %717.0;
  (%718, meta[relay.Constant][29] /* ty=Tensor[(256), float64] */, %719, %720)
}

def @func_11112() -> (uint8, Tensor[(1296), float64]) {
  %724 = fn () -> (uint8, Tensor[(1296), float64]) {
    %721 = @func_9648() /* ty=(Tensor[(1296), float64],) */;
    %722 = @func_8420() /* ty=uint8 */;
    %723 = %721.0;
    (%722, %723)
  };
  %724() /* ty=(uint8, Tensor[(1296), float64]) */
}

def @func_22053() -> (Tensor[(1296), bool], Tensor[(256), float64]) {
  %725 = @func_16012() /* ty=(Tensor[(1296), bool], Tensor[(8, 8, 4), float64]) */;
  %726 = @func_19404() /* ty=(uint8, Tensor[(256), float64], Tensor[(8, 8, 4), float64], Tensor[(256), float64]) */;
  %727 = %725.0;
  %728 = %726.3;
  (%727, %728)
}

def @func_7663(%var_7654: Tensor[(588), uint8]) -> (Tensor[(8, 8, 4), float64], Tensor[(6, 7, 14), float64], Tensor[(588), uint8], Tensor[(8, 8, 4), float64]) {
  %729 = @func_7099() /* ty=(Tensor[(8, 8, 4), float64],) */;
  %730 = cast(%var_7654, dtype="uint8") /* ty=Tensor[(588), uint8] */;
  %731 = reshape(%730, newshape=[6, 7, 14]) /* ty=Tensor[(6, 7, 14), uint8] */;
  %732 = @func_4543(%731) /* ty=(Tensor[(6, 7, 14), float64],) */;
  %733 = @func_7099() /* ty=(Tensor[(8, 8, 4), float64],) */;
  %734 = %729.0;
  %735 = %732.0;
  %736 = %733.0;
  (%734, %735, %var_7654, %736)
}

def @func_12513() -> (Tensor[(8, 8, 4), float64], uint8) {
  @func_12511() /* ty=(Tensor[(8, 8, 4), float64], uint8) */
}

def @func_22107(%var_22088: Tensor[(528), float32], %var_22092: Tensor[(24), float64]) -> (Tensor[(8, 8, 4), float64], Tensor[(8, 8, 4), float64], Tensor[(528), float32], Tensor[(4, 6, 1), float64], Tensor[(24), float64]) {
  %737 = @func_6018() /* ty=(Tensor[(8, 8, 4), float64],) */;
  %738 = cast(%var_22088, dtype="float32") /* ty=Tensor[(528), float32] */;
  %739 = reshape(%738, newshape=[528, 1]) /* ty=Tensor[(528, 1), float32] */;
  %740 = @func_7484(%739) /* ty=(Tensor[(8, 8, 4), float64], Tensor[(1260), bool], Tensor[(1440), uint16], Tensor[(528, 1), float32], Tensor[(640), float64], Tensor[(14, 6, 15), float32]) */;
  %741 = cast(%var_22092, dtype="float64") /* ty=Tensor[(24), float64] */;
  %742 = reshape(%741, newshape=[4, 6, 1]) /* ty=Tensor[(4, 6, 1), float64] */;
  %743 = @func_12454(%742) /* ty=(Tensor[(4, 6, 1), float64],) */;
  %744 = %737.0;
  %745 = %740.0;
  %746 = %743.0;
  (%744, %745, %var_22088, %746, %var_22092)
}

def @func_26858() -> (Tensor[(8, 8, 4), float64], Tensor[(256), float64], Tensor[(8, 8, 4), float64]) {
  @func_26856() /* ty=(Tensor[(8, 8, 4), float64], Tensor[(256), float64], Tensor[(8, 8, 4), float64]) */
}

def @func_11586(%var_11585: Tensor[(4, 5, 10), bool]) -> (Tensor[(4, 5, 10), bool],) {
  %752 = fn (%var_11568: Tensor[(4, 5, 10), bool]) -> (Tensor[(4, 5, 10), bool],) {
    %747 = cast(meta[relay.Constant][30] /* ty=Tensor[(4, 5, 10), bool] */, dtype="bool") /* ty=Tensor[(4, 5, 10), bool] */;
    %748 = shape_of(%var_11568, dtype="int32") /* ty=Tensor[(3), int32] */;
    %749 = cast(%var_11568, dtype="bool") /* ty=Tensor[(4, 5, 10), bool] */;
    %750 = dyn.reshape(%747, %748, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    %751 = logical_and(%749, %750) /* ty=Tensor[(4, 5, 10), bool] */;
    (%751,)
  };
  %752(%var_11585) /* ty=(Tensor[(4, 5, 10), bool],) */
}

def @func_26072() -> (uint8, Tensor[(8, 8, 4), float64], Tensor[(8, 8, 4), float64]) {
  %753 = @func_12529() /* ty=(uint8,) */;
  %754 = @func_15193() /* ty=(Tensor[(8, 8, 4), float64],) */;
  %755 = @func_23174() /* ty=(Tensor[(8, 8, 4), float64],) */;
  %756 = %753.0;
  %757 = %754.0;
  %758 = %755.0;
  (%756, %757, %758)
}

def @func_20278() -> (Tensor[(8, 8, 4), float64], Tensor[(8, 8, 4), float64]) {
  %763 = fn () -> (Tensor[(8, 8, 4), float64], Tensor[(8, 8, 4), float64]) {
    %759 = @func_5727() /* ty=(Tensor[(8, 8, 4), float64],) */;
    %760 = @func_8745() /* ty=(Tensor[(8, 8, 4), float64], Tensor[(8, 8, 4), float64]) */;
    %761 = %759.0;
    %762 = %760.0;
    (%761, %762)
  };
  %763() /* ty=(Tensor[(8, 8, 4), float64], Tensor[(8, 8, 4), float64]) */
}

def @func_9649() -> (Tensor[(1296), float64],) {
  %766 = fn () -> (Tensor[(1296), float64],) {
    %764 = @func_7595() /* ty=(Tensor[(1296), float64], Tensor[(8, 8, 4), float64], Tensor[(8, 8, 4), uint8]) */;
    %765 = %764.0;
    (%765,)
  };
  %766() /* ty=(Tensor[(1296), float64],) */
}

def @func_8572() -> Tensor[(1296), float64] {
  %768 = fn () -> Tensor[(1296), float64] {
    %767 = @func_6257() /* ty=(Tensor[(1296), float64],) */;
    %767.0
  };
  %768() /* ty=Tensor[(1296), float64] */
}

def @func_25835() -> Tensor[(1296), float64] {
  @func_25833() /* ty=Tensor[(1296), float64] */
}

def @func_10033() -> (Tensor[(256), float64], Tensor[(1296), float64]) {
  @func_10031() /* ty=(Tensor[(256), float64], Tensor[(1296), float64]) */
}

def @func_18048() -> (Tensor[(8, 8, 4), float64], Tensor[(8, 8, 4), float64], Tensor[(8, 8, 4), float64], Tensor[(8, 8, 4), float64], Tensor[(2, 5, 12), bool], Tensor[(120, 1), float64], Tensor[(8, 8, 4), float64], Tensor[(8, 8, 4), float64], Tensor[(8, 8, 4), float64]) {
  @func_18046() /* ty=(Tensor[(8, 8, 4), float64], Tensor[(8, 8, 4), float64], Tensor[(8, 8, 4), float64], Tensor[(8, 8, 4), float64], Tensor[(2, 5, 12), bool], Tensor[(120, 1), float64], Tensor[(8, 8, 4), float64], Tensor[(8, 8, 4), float64], Tensor[(8, 8, 4), float64]) */
}

def @func_19404() -> (uint8, Tensor[(256), float64], Tensor[(8, 8, 4), float64], Tensor[(256), float64]) {
  %769 = @func_16355() /* ty=(uint8, Tensor[(8, 8, 4), float64], Tensor[(1296), bool], Tensor[(14, 2, 15), int64], Tensor[(5, 6), int64], Tensor[(5, 84), int64]) */;
  %770 = @func_13419() /* ty=(Tensor[(9, 12, 12), float32], Tensor[(256), float64]) */;
  %771 = @func_16664() /* ty=(Tensor[(8, 8, 4), float64],) */;
  %772 = @func_19299() /* ty=(Tensor[(256), float64],) */;
  %773 = %769.0;
  %774 = %770.1;
  %775 = %771.0;
  %776 = %772.0;
  (%773, %774, %775, %776)
}

def @func_15340() -> Tensor[(8, 8, 4), float64] {
  %777 = @func_9397() /* ty=(Tensor[(8, 8, 4), float64], Tensor[(16, 8, 5), float64], Tensor[(936, 1), uint8]) */;
  %777.0
}

def @func_15709() -> (uint8,) {
  %778 = @func_6905() /* ty=(Tensor[(8, 8, 4), float64], uint8, Tensor[(528), float32], uint8, Tensor[(8, 8, 4), float64]) */;
  %779 = %778.3;
  (%779,)
}

def @func_17452() -> (Tensor[(8, 8, 4), float64], uint8, Tensor[(24, 22), float32]) {
  %786 = fn () -> (Tensor[(8, 8, 4), float64], uint8, Tensor[(24, 22), float32]) {
    %780 = @func_15986() /* ty=(Tensor[(8, 8, 4), float64],) */;
    %781 = cast(meta[relay.Constant][31] /* ty=Tensor[(24, 22), float32] */, dtype="float32") /* ty=Tensor[(24, 22), float32] */;
    %782 = reshape(%781, newshape=[264, 2]) /* ty=Tensor[(264, 2), float32] */;
    %783 = @func_6610(%782) /* ty=(Tensor[(8, 8, 4), float64], Tensor[(3, 11, 16), float32], Tensor[(264, 2), float32], uint8) */;
    %784 = %780.0;
    %785 = %783.3;
    (%784, %785, meta[relay.Constant][31] /* ty=Tensor[(24, 22), float32] */)
  };
  %786() /* ty=(Tensor[(8, 8, 4), float64], uint8, Tensor[(24, 22), float32]) */
}

def @func_7343() -> Tensor[(8, 8, 4), float64] {
  %788 = fn () -> Tensor[(8, 8, 4), float64] {
    %787 = @func_6698() /* ty=(Tensor[(8, 8, 4), float64],) */;
    %787.0
  };
  %788() /* ty=Tensor[(8, 8, 4), float64] */
}

def @func_1302(%var_1299: uint8, %var_1300: Tensor[(15, 1, 5), uint8], %var_1301: Tensor[(1260), float32]) -> (Tensor[(15, 1, 5), uint8], Tensor[(14, 6, 15), float32], Tensor[(1260), float32]) {
  @func_1297(%var_1299, %var_1300, %var_1301) /* ty=(Tensor[(15, 1, 5), uint8], Tensor[(14, 6, 15), float32], Tensor[(1260), float32]) */
}

def @func_8972() -> (Tensor[(1296), float64],) {
  %791 = fn () -> (Tensor[(1296), float64],) {
    %789 = @func_6490() /* ty=(Tensor[(1296), float64],) */;
    %790 = %789.0;
    (%790,)
  };
  %791() /* ty=(Tensor[(1296), float64],) */
}

def @func_16013() -> (Tensor[(1296), bool], Tensor[(8, 8, 4), float64]) {
  %794 = fn () -> (Tensor[(1296), bool], Tensor[(8, 8, 4), float64]) {
    %792 = @func_14112() /* ty=Tensor[(1296), bool] */;
    %793 = @func_12707() /* ty=Tensor[(8, 8, 4), float64] */;
    (%792, %793)
  };
  %794() /* ty=(Tensor[(1296), bool], Tensor[(8, 8, 4), float64]) */
}

def @func_22383() -> Tensor[(8, 8, 4), float64] {
  @func_22381() /* ty=Tensor[(8, 8, 4), float64] */
}

def @func_22546() -> uint8 {
  %796 = fn () -> uint8 {
    %795 = @func_10684() /* ty=(uint8,) */;
    %795.0
  };
  %796() /* ty=uint8 */
}

def @func_14559(%var_14551: int64, %var_14552: Tensor[(9, 4, 7), int64]) -> (Tensor[(9, 4, 7), bool], Tensor[(16, 8, 5), float64], Tensor[(640), float64]) {
  %797 = cast(%var_14551, dtype="bool") /* ty=bool */;
  %798 = cast(%var_14552, dtype="bool") /* ty=Tensor[(9, 4, 7), bool] */;
  %799 = cast(meta[relay.Constant][32] /* ty=Tensor[(640), float64] */, dtype="float64") /* ty=Tensor[(640), float64] */;
  %800 = reshape(%799, newshape=[640]) /* ty=Tensor[(640), float64] */;
  %801 = @func_8209(%800) /* ty=(Tensor[(8, 8, 4), float64], Tensor[(16, 8, 5), float64], Tensor[(640), float64]) */;
  %802 = equal(%797, %798) /* ty=Tensor[(9, 4, 7), bool] */;
  %803 = %801.1;
  (%802, %803, meta[relay.Constant][32] /* ty=Tensor[(640), float64] */)
}

def @func_14633() -> (Tensor[(528), float32], Tensor[(1296), float64], Tensor[(8, 8, 4), float64]) {
  %804 = @func_6905() /* ty=(Tensor[(8, 8, 4), float64], uint8, Tensor[(528), float32], uint8, Tensor[(8, 8, 4), float64]) */;
  %805 = @func_5727() /* ty=(Tensor[(8, 8, 4), float64],) */;
  %806 = %804.2;
  %807 = @func_13328() /* ty=Tensor[(1296), float64] */;
  %808 = %805.0;
  (%806, %807, %808)
}

def @func_6001() -> (Tensor[(8, 8, 4), float64],) {
  %809 = @func_5468() /* ty=(Tensor[(8, 8, 4), float64],) */;
  %810 = %809.0;
  (%810,)
}

def @func_10247() -> (Tensor[(120), float64],) {
  @func_10245() /* ty=(Tensor[(120), float64],) */
}

def @func_9955() -> (uint8,) {
  @func_9953() /* ty=(uint8,) */
}

def @func_10009() -> Tensor[(120), float64] {
  @func_9618() /* ty=Tensor[(120), float64] */
}

def @func_11388() -> (Tensor[(8, 8, 4), float64], Tensor[(8, 8, 4), float64]) {
  %814 = fn () -> (Tensor[(8, 8, 4), float64], Tensor[(8, 8, 4), float64]) {
    %811 = @func_8261() /* ty=(Tensor[(8, 8, 4), float64], Tensor[(8, 8, 4), int64], Tensor[(8, 8, 4), float64]) */;
    %812 = %811.2;
    %813 = @func_8298() /* ty=Tensor[(8, 8, 4), float64] */;
    (%812, %813)
  };
  %814() /* ty=(Tensor[(8, 8, 4), float64], Tensor[(8, 8, 4), float64]) */
}

def @func_18046() -> (Tensor[(8, 8, 4), float64], Tensor[(8, 8, 4), float64], Tensor[(8, 8, 4), float64], Tensor[(8, 8, 4), float64], Tensor[(2, 5, 12), bool], Tensor[(120, 1), float64], Tensor[(8, 8, 4), float64], Tensor[(8, 8, 4), float64], Tensor[(8, 8, 4), float64]) {
  %815 = @func_11387() /* ty=(Tensor[(8, 8, 4), float64], Tensor[(8, 8, 4), float64]) */;
  %816 = @func_17966() /* ty=(Tensor[(8, 8, 4), float64],) */;
  %817 = @func_15193() /* ty=(Tensor[(8, 8, 4), float64],) */;
  %818 = @func_17966() /* ty=(Tensor[(8, 8, 4), float64],) */;
  %819 = cast(meta[relay.Constant][33] /* ty=Tensor[(120, 1), float64] */, dtype="float64") /* ty=Tensor[(120, 1), float64] */;
  %820 = cast(meta[relay.Constant][33] /* ty=Tensor[(120, 1), float64] */, dtype="float64") /* ty=Tensor[(120, 1), float64] */;
  %821 = reshape(%819, newshape=[2, 5, 12]) /* ty=Tensor[(2, 5, 12), float64] */;
  %822 = reshape(%820, newshape=[2, 5, 12]) /* ty=Tensor[(2, 5, 12), float64] */;
  %823 = @func_8852(%821, %822) /* ty=(Tensor[(2, 5, 12), bool],) */;
  %824 = @func_8630() /* ty=(Tensor[(8, 8, 4), float64],) */;
  %825 = @func_15328() /* ty=(Tensor[(8, 8, 4), float64],) */;
  %826 = %815.0;
  %827 = %816.0;
  %828 = %817.0;
  %829 = %818.0;
  %830 = %823.0;
  %831 = @func_8829() /* ty=Tensor[(8, 8, 4), float64] */;
  %832 = %824.0;
  %833 = %825.0;
  (%826, %827, %828, %829, %830, meta[relay.Constant][33] /* ty=Tensor[(120, 1), float64] */, %831, %832, %833)
}

def @func_13687() -> (Tensor[(8, 8, 4), float64], Tensor[(8, 8, 4), float64]) {
  @func_13685() /* ty=(Tensor[(8, 8, 4), float64], Tensor[(8, 8, 4), float64]) */
}

def @func_25109() -> (Tensor[(8, 8, 4), float64],) {
  @func_25107() /* ty=(Tensor[(8, 8, 4), float64],) */
}

def @func_14593(%var_14591: Tensor[(14, 8, 13), float64]) -> (Tensor[(14, 8, 13), float64], Tensor[(14, 8, 13), float64], Tensor[(14, 8, 13), float32], Tensor[(8, 8, 4), float64]) {
  @func_14590(%var_14591) /* ty=(Tensor[(14, 8, 13), float64], Tensor[(14, 8, 13), float64], Tensor[(14, 8, 13), float32], Tensor[(8, 8, 4), float64]) */
}

def @func_19247() -> (uint8, Tensor[(256), float64], Tensor[(1296), bool]) {
  @func_19245() /* ty=(uint8, Tensor[(256), float64], Tensor[(1296), bool]) */
}

def @func_9679() -> (Tensor[(8, 8, 4), float64], Tensor[(8, 8, 4), float64]) {
  @func_9677() /* ty=(Tensor[(8, 8, 4), float64], Tensor[(8, 8, 4), float64]) */
}

def @func_6042() -> Tensor[(8, 8, 4), float64] {
  %834 = @func_6018() /* ty=(Tensor[(8, 8, 4), float64],) */;
  %834.0
}

def @func_8746() -> (Tensor[(8, 8, 4), float64], Tensor[(8, 8, 4), float64]) {
  %838 = fn () -> (Tensor[(8, 8, 4), float64], Tensor[(8, 8, 4), float64]) {
    %835 = @func_7099() /* ty=(Tensor[(8, 8, 4), float64],) */;
    %836 = @func_6452() /* ty=Tensor[(8, 8, 4), float64] */;
    %837 = %835.0;
    (%836, %837)
  };
  %838() /* ty=(Tensor[(8, 8, 4), float64], Tensor[(8, 8, 4), float64]) */
}

def @func_26033(%var_26031: uint8, %var_26032: Tensor[(1260), float32]) -> (Tensor[(8, 8, 4), float64], uint8, Tensor[(75), uint8], Tensor[(1260), uint32], Tensor[(3, 11, 16), float32], Tensor[(15, 8, 16), float32], Tensor[(1920), float32], Tensor[(1440), bool], Tensor[(1296), float64], Tensor[(8, 8, 4), float64]) {
  @func_26029(%var_26031, %var_26032) /* ty=(Tensor[(8, 8, 4), float64], uint8, Tensor[(75), uint8], Tensor[(1260), uint32], Tensor[(3, 11, 16), float32], Tensor[(15, 8, 16), float32], Tensor[(1920), float32], Tensor[(1440), bool], Tensor[(1296), float64], Tensor[(8, 8, 4), float64]) */
}

def @func_13112() -> (Tensor[(8, 8, 4), int64], Tensor[(256), float64], Tensor[(1296), float64], Tensor[(8, 8, 4), float64]) {
  @func_13110() /* ty=(Tensor[(8, 8, 4), int64], Tensor[(256), float64], Tensor[(1296), float64], Tensor[(8, 8, 4), float64]) */
}

def @func_14455() -> (Tensor[(256), float64],) {
  %839 = @func_13110() /* ty=(Tensor[(8, 8, 4), int64], Tensor[(256), float64], Tensor[(1296), float64], Tensor[(8, 8, 4), float64]) */;
  %840 = %839.1;
  (%840,)
}

def @func_20734(%var_20731: Tensor[(264, 2), float32], %var_20732: Tensor[(1296), bool], %var_20733: uint8) -> (Tensor[(8, 8, 4), float64], Tensor[(8, 8, 4), float64], Tensor[(8, 8, 4), float64], Tensor[(12, 15, 7), float64], Tensor[(1260), float64], Tensor[(264, 2), int64], Tensor[(1296), uint64], Tensor[(8, 8, 4), float64], Tensor[(14, 6, 15), float32], Tensor[(75), uint8], uint8, Tensor[(8, 8, 4), float64], Tensor[(8, 8, 4), float64], Tensor[(264, 2), float64], Tensor[(264, 2), bool], Tensor[(1296), bool]) {
  %899 = fn (%var_20605: Tensor[(264, 2), float32], %var_20621: Tensor[(1296), bool], %var_20669: uint8) -> (Tensor[(8, 8, 4), float64], Tensor[(8, 8, 4), float64], Tensor[(8, 8, 4), float64], Tensor[(12, 15, 7), float64], Tensor[(1260), float64], Tensor[(264, 2), int64], Tensor[(1296), uint64], Tensor[(8, 8, 4), float64], Tensor[(14, 6, 15), float32], Tensor[(75), uint8], uint8, Tensor[(8, 8, 4), float64], Tensor[(8, 8, 4), float64], Tensor[(264, 2), float64], Tensor[(264, 2), bool], Tensor[(1296), bool]) {
    %841 = @func_6982() /* ty=(Tensor[(8, 8, 4), float64], Tensor[(8, 8, 4), float64]) */;
    %842 = cast(meta[relay.Constant][34] /* ty=Tensor[(1260), float64] */, dtype="float64") /* ty=Tensor[(1260), float64] */;
    %843 = cast(meta[relay.Constant][34] /* ty=Tensor[(1260), float64] */, dtype="float64") /* ty=Tensor[(1260), float64] */;
    %844 = reshape(%842, newshape=[12, 15, 7]) /* ty=Tensor[(12, 15, 7), float64] */;
    %845 = reshape(%843, newshape=[12, 15, 7]) /* ty=Tensor[(12, 15, 7), float64] */;
    %846 = cast(%var_20605, dtype="float32") /* ty=Tensor[(264, 2), float32] */;
    %847 = reshape(%846, newshape=[264, 2]) /* ty=Tensor[(264, 2), float32] */;
    %848 = @func_6610(%847) /* ty=(Tensor[(8, 8, 4), float64], Tensor[(3, 11, 16), float32], Tensor[(264, 2), float32], uint8) */;
    %849 = %848.2;
    %850 = cast(%849, dtype="int64") /* ty=Tensor[(264, 2), int64] */;
    %851 = shape_of(%var_20605, dtype="int32") /* ty=Tensor[(2), int32] */;
    %852 = cast(%var_20605, dtype="int64") /* ty=Tensor[(264, 2), int64] */;
    %853 = dyn.reshape(%850, %851, newshape=[]) /* ty=Tensor[(?, ?), int64] */;
    %854 = @func_6366() /* ty=(Tensor[(1296), bool], Tensor[(8, 8, 4), int64], Tensor[(256), float64]) */;
    %855 = %854.0;
    %856 = cast(%var_20621, dtype="uint64") /* ty=Tensor[(1296), uint64] */;
    %857 = shape_of(%855, dtype="int32") /* ty=Tensor[(1), int32] */;
    %858 = cast(%855, dtype="uint64") /* ty=Tensor[(1296), uint64] */;
    %859 = dyn.reshape(%856, %857, newshape=[]) /* ty=Tensor[(?), uint64] */;
    %860 = @func_15657() /* ty=(Tensor[(8, 8, 4), float64], Tensor[(8, 8, 4), float64]) */;
    %861 = cast(meta[relay.Constant][34] /* ty=Tensor[(1260), float64] */, dtype="float32") /* ty=Tensor[(1260), float32] */;
    %862 = reshape(%861, newshape=[14, 6, 15]) /* ty=Tensor[(14, 6, 15), float32] */;
    %863 = @func_963(%862) /* ty=(Tensor[(14, 6, 15), float32],) */;
    %864 = cast(%var_20669, dtype="uint8") /* ty=uint8 */;
    %865 = reshape(%864, newshape=[]) /* ty=uint8 */;
    %866 = @func_12417(%865) /* ty=(Tensor[(8, 8, 4), float64], Tensor[(75), uint8], Tensor[(4, 132), float32], uint8) */;
    %867 = @func_10865() /* ty=(Tensor[(8, 8, 4), float64], Tensor[(1296), bool], Tensor[(256), float64], Tensor[(8, 8, 4), float64], uint8) */;
    %868 = @func_11223() /* ty=(Tensor[(8, 8, 4), float64],) */;
    %869 = cast(%849, dtype="float64") /* ty=Tensor[(264, 2), float64] */;
    %870 = acos(%869) /* ty=Tensor[(264, 2), float64] */;
    %871 = cast(%870, dtype="float32") /* ty=Tensor[(264, 2), float32] */;
    %872 = exp(%871) /* ty=Tensor[(264, 2), float32] */;
    %873 = cast(%872, dtype="float64") /* ty=Tensor[(264, 2), float64] */;
    %874 = sin(%873) /* ty=Tensor[(264, 2), float64] */;
    %875 = cast(%874, dtype="float64") /* ty=Tensor[(264, 2), float64] */;
    %876 = cast(%var_20605, dtype="float32") /* ty=Tensor[(264, 2), float32] */;
    %877 = reshape(%876, newshape=[264, 2]) /* ty=Tensor[(264, 2), float32] */;
    %878 = @func_6610(%877) /* ty=(Tensor[(8, 8, 4), float64], Tensor[(3, 11, 16), float32], Tensor[(264, 2), float32], uint8) */;
    %879 = %878.2;
    %880 = cast(%879, dtype="bool") /* ty=Tensor[(264, 2), bool] */;
    %881 = shape_of(%872, dtype="int32") /* ty=Tensor[(2), int32] */;
    %882 = cast(%872, dtype="bool") /* ty=Tensor[(264, 2), bool] */;
    %883 = dyn.reshape(%880, %881, newshape=[]) /* ty=Tensor[(?, ?), bool] */;
    %884 = @func_16012() /* ty=(Tensor[(1296), bool], Tensor[(8, 8, 4), float64]) */;
    %885 = @func_16986() /* ty=Tensor[(8, 8, 4), float64] */;
    %886 = %841.1;
    %887 = @func_13487() /* ty=Tensor[(8, 8, 4), float64] */;
    %888 = @func_7075(%844, %845) /* ty=Tensor[(12, 15, 7), float64] */;
    %889 = add(%852, %853) /* ty=Tensor[(264, 2), int64] */;
    %890 = bitwise_and(%858, %859) /* ty=Tensor[(1296), uint64] */;
    %891 = %860.0;
    %892 = %863.0;
    %893 = %866.1;
    %894 = %867.0;
    %895 = %868.0;
    %896 = asinh(%875) /* ty=Tensor[(264, 2), float64] */;
    %897 = less_equal(%882, %883) /* ty=Tensor[(264, 2), bool] */;
    %898 = %884.0;
    (%885, %886, %887, %888, meta[relay.Constant][34] /* ty=Tensor[(1260), float64] */, %889, %890, %891, %892, %893, %var_20669, %894, %895, %896, %897, %898)
  };
  %899(%var_20731, %var_20732, %var_20733) /* ty=(Tensor[(8, 8, 4), float64], Tensor[(8, 8, 4), float64], Tensor[(8, 8, 4), float64], Tensor[(12, 15, 7), float64], Tensor[(1260), float64], Tensor[(264, 2), int64], Tensor[(1296), uint64], Tensor[(8, 8, 4), float64], Tensor[(14, 6, 15), float32], Tensor[(75), uint8], uint8, Tensor[(8, 8, 4), float64], Tensor[(8, 8, 4), float64], Tensor[(264, 2), float64], Tensor[(264, 2), bool], Tensor[(1296), bool]) */
}

def @func_14410() -> (Tensor[(8, 8, 4), float64],) {
  %900 = @func_9677() /* ty=(Tensor[(8, 8, 4), float64], Tensor[(8, 8, 4), float64]) */;
  %901 = %900.1;
  (%901,)
}

def @func_963(%var_957: Tensor[(14, 6, 15), float32]) -> (Tensor[(14, 6, 15), float32],) {
  %902 = cast(meta[relay.Constant][35] /* ty=Tensor[(14, 6, 15), float32] */, dtype="float32") /* ty=Tensor[(14, 6, 15), float32] */;
  %903 = shape_of(%var_957, dtype="int32") /* ty=Tensor[(3), int32] */;
  %904 = cast(%var_957, dtype="float32") /* ty=Tensor[(14, 6, 15), float32] */;
  %905 = dyn.reshape(%902, %903, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %906 = mod(%904, %905) /* ty=Tensor[(14, 6, 15), float32] */;
  (%906,)
}

def @func_6660(%var_6659: Tensor[(8, 8, 4), float64]) -> Tensor[(8, 8, 4), uint8] {
  %913 = fn (%var_6637: Tensor[(8, 8, 4), float64]) -> Tensor[(8, 8, 4), uint8] {
    %907 = @func_6018() /* ty=(Tensor[(8, 8, 4), float64],) */;
    %908 = %907.0;
    %909 = cast(%var_6637, dtype="uint8") /* ty=Tensor[(8, 8, 4), uint8] */;
    %910 = shape_of(%908, dtype="int32") /* ty=Tensor[(3), int32] */;
    %911 = cast(%908, dtype="uint8") /* ty=Tensor[(8, 8, 4), uint8] */;
    %912 = dyn.reshape(%909, %910, newshape=[]) /* ty=Tensor[(?, ?, ?), uint8] */;
    bitwise_or(%911, %912) /* ty=Tensor[(8, 8, 4), uint8] */
  };
  %913(%var_6659) /* ty=Tensor[(8, 8, 4), uint8] */
}

def @func_12419(%var_12418: uint8) -> (Tensor[(8, 8, 4), float64], Tensor[(75), uint8], Tensor[(4, 132), float32], uint8) {
  %921 = fn (%var_12412: uint8) -> (Tensor[(8, 8, 4), float64], Tensor[(75), uint8], Tensor[(4, 132), float32], uint8) {
    %914 = cast(meta[relay.Constant][36] /* ty=Tensor[(4, 132), float32] */, dtype="float32") /* ty=Tensor[(4, 132), float32] */;
    %915 = cast(%var_12412, dtype="uint8") /* ty=uint8 */;
    %916 = reshape(%914, newshape=[3, 11, 16]) /* ty=Tensor[(3, 11, 16), float32] */;
    %917 = reshape(%915, newshape=[]) /* ty=uint8 */;
    %918 = @func_2471(%916, %917) /* ty=(Tensor[(3, 11, 16), float32], Tensor[(14, 6, 15), float32], Tensor[(1260), float32], Tensor[(1260), float32], uint8, Tensor[(75), uint8], Tensor[(14, 6, 15), float32]) */;
    %919 = @func_7168() /* ty=Tensor[(8, 8, 4), float64] */;
    %920 = %918.5;
    (%919, %920, meta[relay.Constant][36] /* ty=Tensor[(4, 132), float32] */, %var_12412)
  };
  %921(%var_12418) /* ty=(Tensor[(8, 8, 4), float64], Tensor[(75), uint8], Tensor[(4, 132), float32], uint8) */
}

def @func_24621() -> (Tensor[(8, 8, 4), float64],) {
  %924 = fn () -> (Tensor[(8, 8, 4), float64],) {
    %922 = @func_14410() /* ty=(Tensor[(8, 8, 4), float64],) */;
    %923 = %922.0;
    (%923,)
  };
  %924() /* ty=(Tensor[(8, 8, 4), float64],) */
}

def @func_10011() -> Tensor[(120), float64] {
  @func_10009() /* ty=Tensor[(120), float64] */
}

def @func_18536(%var_18534: Tensor[(1440), uint16]) -> (Tensor[(120), float64], Tensor[(3, 11, 16), float32], Tensor[(1440), uint16], Tensor[(528), float32], Tensor[(10, 64), float64]) {
  @func_18533(%var_18534) /* ty=(Tensor[(120), float64], Tensor[(3, 11, 16), float32], Tensor[(1440), uint16], Tensor[(528), float32], Tensor[(10, 64), float64]) */
}

def @func_20564(%var_20562: Tensor[(12, 2, 4), float32]) -> (Tensor[(12, 2, 4), float32],) {
  @func_20561(%var_20562) /* ty=(Tensor[(12, 2, 4), float32],) */
}

def @func_18328() -> uint8 {
  %925 = @func_11111() /* ty=(uint8, Tensor[(1296), float64]) */;
  %925.0
}

def @func_23175() -> (Tensor[(8, 8, 4), float64],) {
  %927 = fn () -> (Tensor[(8, 8, 4), float64],) {
    %926 = @func_16986() /* ty=Tensor[(8, 8, 4), float64] */;
    (%926,)
  };
  %927() /* ty=(Tensor[(8, 8, 4), float64],) */
}

def @func_23802(%var_23800: uint8) -> (Tensor[(8, 8, 4), float64], Tensor[(8, 8, 4), float64], Tensor[(528), float32], Tensor[(1296), float64], Tensor[(256), float64], Tensor[(14, 6, 15), int8]) {
  @func_23799(%var_23800) /* ty=(Tensor[(8, 8, 4), float64], Tensor[(8, 8, 4), float64], Tensor[(528), float32], Tensor[(1296), float64], Tensor[(256), float64], Tensor[(14, 6, 15), int8]) */
}

def @func_15271() -> (Tensor[(8, 8, 4), float64], Tensor[(8, 8, 4), int64]) {
  @func_15269() /* ty=(Tensor[(8, 8, 4), float64], Tensor[(8, 8, 4), int64]) */
}

def @func_16918() -> Tensor[(1296), float64] {
  %930 = fn () -> Tensor[(1296), float64] {
    %928 = @func_6295() /* ty=Tensor[(1296), float64] */;
    %929 = cast(%928, dtype="float64") /* ty=Tensor[(1296), float64] */;
    log(%929) /* ty=Tensor[(1296), float64] */
  };
  %930() /* ty=Tensor[(1296), float64] */
}

def @func_23834(%var_23823: Tensor[(252), int64]) -> (Tensor[(120), float64], Tensor[(16, 8, 5), float64], int64, Tensor[(252), int64]) {
  %931 = @func_10245() /* ty=(Tensor[(120), float64],) */;
  %932 = cast(-2 /* ty=int64 */, dtype="int64") /* ty=int64 */;
  %933 = cast(%var_23823, dtype="int64") /* ty=Tensor[(252), int64] */;
  %934 = reshape(%932, newshape=[]) /* ty=int64 */;
  %935 = reshape(%933, newshape=[9, 4, 7]) /* ty=Tensor[(9, 4, 7), int64] */;
  %936 = @func_14559(%934, %935) /* ty=(Tensor[(9, 4, 7), bool], Tensor[(16, 8, 5), float64], Tensor[(640), float64]) */;
  %937 = %931.0;
  %938 = %936.1;
  (%937, %938, -2 /* ty=int64 */, %var_23823)
}

def @func_25927() -> (Tensor[(8, 8, 4), float64], Tensor[(8, 8, 4), float64]) {
  @func_25925() /* ty=(Tensor[(8, 8, 4), float64], Tensor[(8, 8, 4), float64]) */
}

def @func_27134(%var_27133: Tensor[(1260), float64]) -> (Tensor[(256), float64], Tensor[(12, 15, 7), float64], Tensor[(1260), float64], Tensor[(8, 8, 4), float64]) {
  %948 = fn (%var_27126: Tensor[(1260), float64]) -> (Tensor[(256), float64], Tensor[(12, 15, 7), float64], Tensor[(1260), float64], Tensor[(8, 8, 4), float64]) {
    %939 = @func_7878() /* ty=(Tensor[(8, 8, 4), float64], Tensor[(8, 8, 4), int64], Tensor[(256), float64]) */;
    %940 = cast(%var_27126, dtype="float64") /* ty=Tensor[(1260), float64] */;
    %941 = cast(%var_27126, dtype="float64") /* ty=Tensor[(1260), float64] */;
    %942 = reshape(%940, newshape=[12, 15, 7]) /* ty=Tensor[(12, 15, 7), float64] */;
    %943 = reshape(%941, newshape=[12, 15, 7]) /* ty=Tensor[(12, 15, 7), float64] */;
    %944 = @func_10865() /* ty=(Tensor[(8, 8, 4), float64], Tensor[(1296), bool], Tensor[(256), float64], Tensor[(8, 8, 4), float64], uint8) */;
    %945 = %939.2;
    %946 = @func_7075(%942, %943) /* ty=Tensor[(12, 15, 7), float64] */;
    %947 = %944.3;
    (%945, %946, %var_27126, %947)
  };
  %948(%var_27133) /* ty=(Tensor[(256), float64], Tensor[(12, 15, 7), float64], Tensor[(1260), float64], Tensor[(8, 8, 4), float64]) */
}

def @func_11696(%var_11632: Tensor[(2, 14, 11), uint64], %var_11633: Tensor[(2, 14, 11), uint64]) -> (Tensor[(2, 14, 11), uint64], Tensor[(8, 8, 4), float64], Tensor[(2, 14, 11), float32]) {
  %949 = cast(%var_11633, dtype="uint64") /* ty=Tensor[(2, 14, 11), uint64] */;
  %950 = shape_of(%var_11632, dtype="int32") /* ty=Tensor[(3), int32] */;
  %951 = cast(%var_11632, dtype="uint64") /* ty=Tensor[(2, 14, 11), uint64] */;
  %952 = dyn.reshape(%949, %950, newshape=[]) /* ty=Tensor[(?, ?, ?), uint64] */;
  %953 = cast(%var_11633, dtype="float32") /* ty=Tensor[(2, 14, 11), float32] */;
  %954 = bitwise_or(%951, %952) /* ty=Tensor[(2, 14, 11), uint64] */;
  %955 = @func_7342() /* ty=Tensor[(8, 8, 4), float64] */;
  %956 = asinh(%953) /* ty=Tensor[(2, 14, 11), float32] */;
  (%954, %955, %956)
}

def @func_16703() -> (Tensor[(8, 8, 4), float64],) {
  %959 = fn () -> (Tensor[(8, 8, 4), float64],) {
    %957 = @func_15578() /* ty=(Tensor[(8, 8, 4), float64], Tensor[(8, 8, 4), float64], Tensor[(8, 8, 4), uint8], uint8) */;
    %958 = %957.0;
    (%958,)
  };
  %959() /* ty=(Tensor[(8, 8, 4), float64],) */
}

def @func_23232() -> (Tensor[(8, 8, 4), float64], Tensor[(8, 8, 4), float64]) {
  %963 = fn () -> (Tensor[(8, 8, 4), float64], Tensor[(8, 8, 4), float64]) {
    %960 = @func_10962() /* ty=(Tensor[(1296), float64], Tensor[(256), float64], Tensor[(8, 8, 4), float64]) */;
    %961 = %960.2;
    %962 = @func_18409() /* ty=Tensor[(8, 8, 4), float64] */;
    (%961, %962)
  };
  %963() /* ty=(Tensor[(8, 8, 4), float64], Tensor[(8, 8, 4), float64]) */
}

def @func_25925() -> (Tensor[(8, 8, 4), float64], Tensor[(8, 8, 4), float64]) {
  %964 = @func_25443() /* ty=(Tensor[(8, 8, 4), float64],) */;
  %965 = @func_14410() /* ty=(Tensor[(8, 8, 4), float64],) */;
  %966 = %964.0;
  %967 = %965.0;
  (%966, %967)
}

def @func_17495(%var_17493: Tensor[(528), float32], %var_17494: Tensor[(432), float32]) -> (Tensor[(8, 8, 4), float64], Tensor[(8, 8, 4), float64], Tensor[(3, 11, 16), float32], Tensor[(528), float32], uint8, Tensor[(9, 4, 12), bool], Tensor[(432), float32]) {
  @func_17491(%var_17493, %var_17494) /* ty=(Tensor[(8, 8, 4), float64], Tensor[(8, 8, 4), float64], Tensor[(3, 11, 16), float32], Tensor[(528), float32], uint8, Tensor[(9, 4, 12), bool], Tensor[(432), float32]) */
}

def @func_26246() -> Tensor[(8, 8, 4), float64] {
  @func_26244() /* ty=Tensor[(8, 8, 4), float64] */
}

def @func_12397() -> (Tensor[(120), float64], Tensor[(8, 8, 4), int64]) {
  %971 = fn () -> (Tensor[(120), float64], Tensor[(8, 8, 4), int64]) {
    %968 = @func_7878() /* ty=(Tensor[(8, 8, 4), float64], Tensor[(8, 8, 4), int64], Tensor[(256), float64]) */;
    %969 = @func_10009() /* ty=Tensor[(120), float64] */;
    %970 = %968.1;
    (%969, %970)
  };
  %971() /* ty=(Tensor[(120), float64], Tensor[(8, 8, 4), int64]) */
}

def @func_26403(%var_26402: Tensor[(528), float32]) -> (Tensor[(8, 8, 4), float64], Tensor[(8, 8, 4), int64], Tensor[(528), float32]) {
  %978 = fn (%var_26370: Tensor[(528), float32]) -> (Tensor[(8, 8, 4), float64], Tensor[(8, 8, 4), int64], Tensor[(528), float32]) {
    %972 = @func_14916() /* ty=(Tensor[(8, 8, 4), float64], Tensor[(8, 8, 4), float64], Tensor[(1296), bool]) */;
    %973 = cast(%var_26370, dtype="float32") /* ty=Tensor[(528), float32] */;
    %974 = reshape(%973, newshape=[1, 528]) /* ty=Tensor[(1, 528), float32] */;
    %975 = @func_6780(%974) /* ty=(Tensor[(256), float64], Tensor[(1296), bool], Tensor[(8, 8, 4), float64], Tensor[(1, 528), float32], Tensor[(8, 8, 4), int64]) */;
    %976 = %972.0;
    %977 = %975.4;
    (%976, %977, %var_26370)
  };
  %978(%var_26402) /* ty=(Tensor[(8, 8, 4), float64], Tensor[(8, 8, 4), int64], Tensor[(528), float32]) */
}

def @func_8422() -> uint8 {
  @func_8420() /* ty=uint8 */
}

def @func_7365() -> (Tensor[(8, 8, 4), int64], Tensor[(256), float64]) {
  %983 = fn () -> (Tensor[(8, 8, 4), int64], Tensor[(256), float64]) {
    %979 = @func_6366() /* ty=(Tensor[(1296), bool], Tensor[(8, 8, 4), int64], Tensor[(256), float64]) */;
    %980 = @func_6366() /* ty=(Tensor[(1296), bool], Tensor[(8, 8, 4), int64], Tensor[(256), float64]) */;
    %981 = %979.1;
    %982 = %980.2;
    (%981, %982)
  };
  %983() /* ty=(Tensor[(8, 8, 4), int64], Tensor[(256), float64]) */
}

def @func_23169() -> (Tensor[(1296), float64], Tensor[(1296), float64], Tensor[(1260), float32], Tensor[(1296), float64], uint8) {
  @func_23167() /* ty=(Tensor[(1296), float64], Tensor[(1296), float64], Tensor[(1260), float32], Tensor[(1296), float64], uint8) */
}

def @func_8299() -> Tensor[(8, 8, 4), float64] {
  %985 = fn () -> Tensor[(8, 8, 4), float64] {
    %984 = @func_6001() /* ty=(Tensor[(8, 8, 4), float64],) */;
    %984.0
  };
  %985() /* ty=Tensor[(8, 8, 4), float64] */
}

def @func_22242() -> (Tensor[(8, 8, 4), float64],) {
  %988 = fn () -> (Tensor[(8, 8, 4), float64],) {
    %986 = @func_8630() /* ty=(Tensor[(8, 8, 4), float64],) */;
    %987 = %986.0;
    (%987,)
  };
  %988() /* ty=(Tensor[(8, 8, 4), float64],) */
}

def @func_8503() -> Tensor[(8, 8, 4), float64] {
  @func_8501() /* ty=Tensor[(8, 8, 4), float64] */
}

def @func_19906() -> (Tensor[(1296), float64],) {
  @func_19904() /* ty=(Tensor[(1296), float64],) */
}

def @func_22836() -> Tensor[(8, 8, 4), float64] {
  @func_22834() /* ty=Tensor[(8, 8, 4), float64] */
}

def @func_7751(%var_7750: Tensor[(3, 11, 5), float32]) -> (Tensor[(3, 11, 5), float32], Tensor[(8, 8, 4), float64], Tensor[(1260), bool], Tensor[(528), float32]) {
  %997 = fn (%var_7731: Tensor[(3, 11, 5), float32]) -> (Tensor[(3, 11, 5), float32], Tensor[(8, 8, 4), float64], Tensor[(1260), bool], Tensor[(528), float32]) {
    %989 = cast(%var_7731, dtype="float32") /* ty=Tensor[(3, 11, 5), float32] */;
    %990 = @func_6698() /* ty=(Tensor[(8, 8, 4), float64],) */;
    %991 = cast(meta[relay.Constant][37] /* ty=Tensor[(528), float32] */, dtype="float32") /* ty=Tensor[(528), float32] */;
    %992 = reshape(%991, newshape=[528, 1]) /* ty=Tensor[(528, 1), float32] */;
    %993 = @func_7484(%992) /* ty=(Tensor[(8, 8, 4), float64], Tensor[(1260), bool], Tensor[(1440), uint16], Tensor[(528, 1), float32], Tensor[(640), float64], Tensor[(14, 6, 15), float32]) */;
    %994 = atanh(%989) /* ty=Tensor[(3, 11, 5), float32] */;
    %995 = %990.0;
    %996 = %993.1;
    (%994, %995, %996, meta[relay.Constant][37] /* ty=Tensor[(528), float32] */)
  };
  %997(%var_7750) /* ty=(Tensor[(3, 11, 5), float32], Tensor[(8, 8, 4), float64], Tensor[(1260), bool], Tensor[(528), float32]) */
}

def @func_9096() -> (Tensor[(1296), float64],) {
  @func_9094() /* ty=(Tensor[(1296), float64],) */
}

def @func_26946() -> Tensor[(8, 8, 4), float64] {
  %998 = @func_22241() /* ty=(Tensor[(8, 8, 4), float64],) */;
  %998.0
}

def @func_17305() -> (Tensor[(8, 8, 4), float64], Tensor[(1296), float64]) {
  @func_17303() /* ty=(Tensor[(8, 8, 4), float64], Tensor[(1296), float64]) */
}

def @func_19707() -> (Tensor[(1296), float64], Tensor[(8, 8, 4), float64]) {
  @func_19705() /* ty=(Tensor[(1296), float64], Tensor[(8, 8, 4), float64]) */
}

def @func_11343() -> (Tensor[(8, 8, 4), float64], Tensor[(1260), float32]) {
  %1002 = fn () -> (Tensor[(8, 8, 4), float64], Tensor[(1260), float32]) {
    %999 = @func_9275() /* ty=(Tensor[(8, 8, 4), float64], Tensor[(1260), float32], Tensor[(1155), int8], Tensor[(1260), float32], Tensor[(8, 8, 4), float64], Tensor[(8, 8, 4), float64]) */;
    %1000 = @func_9705() /* ty=Tensor[(8, 8, 4), float64] */;
    %1001 = %999.1;
    (%1000, %1001)
  };
  %1002() /* ty=(Tensor[(8, 8, 4), float64], Tensor[(1260), float32]) */
}

def @func_6296() -> Tensor[(1296), float64] {
  %1004 = fn () -> Tensor[(1296), float64] {
    %1003 = @func_6257() /* ty=(Tensor[(1296), float64],) */;
    %1003.0
  };
  %1004() /* ty=Tensor[(1296), float64] */
}

def @func_7099() -> (Tensor[(8, 8, 4), float64],) {
  %1005 = @func_6001() /* ty=(Tensor[(8, 8, 4), float64],) */;
  %1006 = %1005.0;
  (%1006,)
}

def @func_9968() -> Tensor[(1296), bool] {
  %1007 = @func_8352() /* ty=(Tensor[(8, 8, 4), float64], Tensor[(1296), bool]) */;
  %1007.1
}

def @func_6177() -> (Tensor[(8, 8, 4), float64], Tensor[(6, 7, 14), float64], Tensor[(588), uint8], Tensor[(8, 8, 4), float64], Tensor[(9, 12, 12), float32], Tensor[(1296), float64]) {
  %1017 = fn () -> (Tensor[(8, 8, 4), float64], Tensor[(6, 7, 14), float64], Tensor[(588), uint8], Tensor[(8, 8, 4), float64], Tensor[(9, 12, 12), float32], Tensor[(1296), float64]) {
    %1008 = cast(meta[relay.Constant][38] /* ty=Tensor[(588), uint8] */, dtype="uint8") /* ty=Tensor[(588), uint8] */;
    %1009 = reshape(%1008, newshape=[6, 7, 14]) /* ty=Tensor[(6, 7, 14), uint8] */;
    %1010 = @func_4543(%1009) /* ty=(Tensor[(6, 7, 14), float64],) */;
    %1011 = cast(meta[relay.Constant][39] /* ty=Tensor[(1296), float64] */, dtype="float64") /* ty=Tensor[(1296), float64] */;
    %1012 = reshape(%1011, newshape=[9, 12, 12]) /* ty=Tensor[(9, 12, 12), float64] */;
    %1013 = @func_5807() /* ty=Tensor[(8, 8, 4), float64] */;
    %1014 = %1010.0;
    %1015 = @func_5807() /* ty=Tensor[(8, 8, 4), float64] */;
    %1016 = @func_2887(%1012) /* ty=Tensor[(9, 12, 12), float32] */;
    (%1013, %1014, meta[relay.Constant][38] /* ty=Tensor[(588), uint8] */, %1015, %1016, meta[relay.Constant][39] /* ty=Tensor[(1296), float64] */)
  };
  %1017() /* ty=(Tensor[(8, 8, 4), float64], Tensor[(6, 7, 14), float64], Tensor[(588), uint8], Tensor[(8, 8, 4), float64], Tensor[(9, 12, 12), float32], Tensor[(1296), float64]) */
}

def @func_22619() -> Tensor[(8, 8, 4), float64] {
  %1019 = fn () -> Tensor[(8, 8, 4), float64] {
    %1018 = @func_21753() /* ty=(Tensor[(8, 8, 4), float64],) */;
    %1018.0
  };
  %1019() /* ty=Tensor[(8, 8, 4), float64] */
}

def @func_2887(%var_2867: Tensor[(9, 12, 12), float64]) -> Tensor[(9, 12, 12), float32] {
  %1020 = cast(%var_2867, dtype="float64") /* ty=Tensor[(9, 12, 12), float64] */;
  %1021 = erf(%1020) /* ty=Tensor[(9, 12, 12), float64] */;
  %1022 = cast(%var_2867, dtype="float32") /* ty=Tensor[(9, 12, 12), float32] */;
  %1023 = shape_of(%1021, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1024 = cast(%1021, dtype="float32") /* ty=Tensor[(9, 12, 12), float32] */;
  %1025 = dyn.reshape(%1022, %1023, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  mod(%1024, %1025) /* ty=Tensor[(9, 12, 12), float32] */
}

def @func_22812() -> (Tensor[(8, 8, 4), float64],) {
  %1026 = @func_13632() /* ty=Tensor[(8, 8, 4), float64] */;
  (%1026,)
}

def @func_24760() -> (Tensor[(8, 8, 4), float64], Tensor[(2, 5, 12), bool], Tensor[(1296), bool], uint8, Tensor[(8, 8, 4), float64], Tensor[(120), float64]) {
  %1039 = fn () -> (Tensor[(8, 8, 4), float64], Tensor[(2, 5, 12), bool], Tensor[(1296), bool], uint8, Tensor[(8, 8, 4), float64], Tensor[(120), float64]) {
    %1027 = @func_12185() /* ty=(Tensor[(8, 8, 4), float64],) */;
    %1028 = @func_9111() /* ty=(Tensor[(4, 7, 5), float32], Tensor[(2, 5, 12), bool], Tensor[(120), float64]) */;
    %1029 = @func_22053() /* ty=(Tensor[(1296), bool], Tensor[(256), float64]) */;
    %1030 = @func_12529() /* ty=(uint8,) */;
    %1031 = @func_7504() /* ty=(Tensor[(8, 8, 4), float64],) */;
    %1032 = @func_12396() /* ty=(Tensor[(120), float64], Tensor[(8, 8, 4), int64]) */;
    %1033 = %1027.0;
    %1034 = %1028.1;
    %1035 = %1029.0;
    %1036 = %1030.0;
    %1037 = %1031.0;
    %1038 = %1032.0;
    (%1033, %1034, %1035, %1036, %1037, %1038)
  };
  %1039() /* ty=(Tensor[(8, 8, 4), float64], Tensor[(2, 5, 12), bool], Tensor[(1296), bool], uint8, Tensor[(8, 8, 4), float64], Tensor[(120), float64]) */
}

def @func_20839() -> (Tensor[(8, 8, 4), float64], Tensor[(936, 256), float64]) {
  %1052 = fn () -> (Tensor[(8, 8, 4), float64], Tensor[(936, 256), float64]) {
    %1040 = @func_10481() /* ty=(Tensor[(8, 8, 4), float64], Tensor[(8, 8, 4), int64]) */;
    %1041 = @func_9397() /* ty=(Tensor[(8, 8, 4), float64], Tensor[(16, 8, 5), float64], Tensor[(936, 1), uint8]) */;
    %1042 = %1041.2;
    %1043 = @func_13419() /* ty=(Tensor[(9, 12, 12), float32], Tensor[(256), float64]) */;
    %1044 = %1043.1;
    %1045 = cast(%1042, dtype="float64") /* ty=Tensor[(936, 1), float64] */;
    %1046 = cast(%1044, dtype="float64") /* ty=Tensor[(256), float64] */;
    %1047 = floor_mod(%1045, %1046) /* ty=Tensor[(936, 256), float64] */;
    %1048 = cast(%1047, dtype="float64") /* ty=Tensor[(936, 256), float64] */;
    %1049 = cast(%1044, dtype="float64") /* ty=Tensor[(256), float64] */;
    %1050 = %1040.0;
    %1051 = mod(%1048, %1049) /* ty=Tensor[(936, 256), float64] */;
    (%1050, %1051)
  };
  %1052() /* ty=(Tensor[(8, 8, 4), float64], Tensor[(936, 256), float64]) */
}

def @func_8262() -> (Tensor[(8, 8, 4), float64], Tensor[(8, 8, 4), int64], Tensor[(8, 8, 4), float64]) {
  %1059 = fn () -> (Tensor[(8, 8, 4), float64], Tensor[(8, 8, 4), int64], Tensor[(8, 8, 4), float64]) {
    %1053 = @func_6452() /* ty=Tensor[(8, 8, 4), float64] */;
    %1054 = cast(%1053, dtype="float64") /* ty=Tensor[(8, 8, 4), float64] */;
    %1055 = reshape(%1054, newshape=[8, 8, 4]) /* ty=Tensor[(8, 8, 4), float64] */;
    %1056 = @func_6982() /* ty=(Tensor[(8, 8, 4), float64], Tensor[(8, 8, 4), float64]) */;
    %1057 = @func_5643(%1055) /* ty=Tensor[(8, 8, 4), int64] */;
    %1058 = %1056.1;
    (%1053, %1057, %1058)
  };
  %1059() /* ty=(Tensor[(8, 8, 4), float64], Tensor[(8, 8, 4), int64], Tensor[(8, 8, 4), float64]) */
}

def @func_19586() -> (Tensor[(1296), float64],) {
  @func_19584() /* ty=(Tensor[(1296), float64],) */
}

def @func_1297(%var_1281: uint8, %var_1282: Tensor[(15, 1, 5), uint8], %var_1289: Tensor[(1260), float32]) -> (Tensor[(15, 1, 5), uint8], Tensor[(14, 6, 15), float32], Tensor[(1260), float32]) {
  %1060 = cast(%var_1281, dtype="uint8") /* ty=uint8 */;
  %1061 = cast(%var_1282, dtype="uint8") /* ty=Tensor[(15, 1, 5), uint8] */;
  %1062 = cast(%var_1289, dtype="float32") /* ty=Tensor[(1260), float32] */;
  %1063 = reshape(%1062, newshape=[14, 6, 15]) /* ty=Tensor[(14, 6, 15), float32] */;
  %1064 = @func_963(%1063) /* ty=(Tensor[(14, 6, 15), float32],) */;
  %1065 = left_shift(%1060, %1061) /* ty=Tensor[(15, 1, 5), uint8] */;
  %1066 = %1064.0;
  (%1065, %1066, %var_1289)
}

def @func_13488() -> Tensor[(8, 8, 4), float64] {
  %1068 = fn () -> Tensor[(8, 8, 4), float64] {
    %1067 = @func_7955() /* ty=(Tensor[(8, 8, 4), float64],) */;
    %1067.0
  };
  %1068() /* ty=Tensor[(8, 8, 4), float64] */
}

def @func_18209() -> (Tensor[(14, 2, 15), float64],) {
  %1073 = fn () -> (Tensor[(14, 2, 15), float64],) {
    %1069 = @func_16355() /* ty=(uint8, Tensor[(8, 8, 4), float64], Tensor[(1296), bool], Tensor[(14, 2, 15), int64], Tensor[(5, 6), int64], Tensor[(5, 84), int64]) */;
    %1070 = %1069.3;
    %1071 = cast(%1070, dtype="float64") /* ty=Tensor[(14, 2, 15), float64] */;
    %1072 = rsqrt(%1071) /* ty=Tensor[(14, 2, 15), float64] */;
    (%1072,)
  };
  %1073() /* ty=(Tensor[(14, 2, 15), float64],) */
}

def @func_25501(%var_25499: Tensor[(12, 5, 14), float64]) -> (uint8, Tensor[(12, 5, 14), bool]) {
  @func_25498(%var_25499) /* ty=(uint8, Tensor[(12, 5, 14), bool]) */
}

def @func_14849() -> (Tensor[(8, 8, 4), float64],) {
  @func_14847() /* ty=(Tensor[(8, 8, 4), float64],) */
}

def @func_12456(%var_12455: Tensor[(4, 6, 1), float64]) -> (Tensor[(4, 6, 1), float64],) {
  %1077 = fn (%var_12450: Tensor[(4, 6, 1), float64]) -> (Tensor[(4, 6, 1), float64],) {
    %1074 = cast(4.36096f64 /* ty=float64 */, dtype="float64") /* ty=float64 */;
    %1075 = cast(%var_12450, dtype="float64") /* ty=Tensor[(4, 6, 1), float64] */;
    %1076 = floor_divide(%1074, %1075) /* ty=Tensor[(4, 6, 1), float64] */;
    (%1076,)
  };
  %1077(%var_12455) /* ty=(Tensor[(4, 6, 1), float64],) */
}

def @func_18330() -> uint8 {
  @func_18328() /* ty=uint8 */
}

def @func_25443() -> (Tensor[(8, 8, 4), float64],) {
  %1078 = @func_6001() /* ty=(Tensor[(8, 8, 4), float64],) */;
  %1079 = %1078.0;
  (%1079,)
}

def @func_12861() -> (Tensor[(8, 8, 4), float64],) {
  %1082 = fn () -> (Tensor[(8, 8, 4), float64],) {
    %1080 = @func_8745() /* ty=(Tensor[(8, 8, 4), float64], Tensor[(8, 8, 4), float64]) */;
    %1081 = %1080.0;
    (%1081,)
  };
  %1082() /* ty=(Tensor[(8, 8, 4), float64],) */
}

def @func_2471(%var_2419: Tensor[(3, 11, 16), float32], %var_2458: uint8) -> (Tensor[(3, 11, 16), float32], Tensor[(14, 6, 15), float32], Tensor[(1260), float32], Tensor[(1260), float32], uint8, Tensor[(75), uint8], Tensor[(14, 6, 15), float32]) {
  %1083 = cast(%var_2419, dtype="float32") /* ty=Tensor[(3, 11, 16), float32] */;
  %1084 = cast(meta[relay.Constant][40] /* ty=Tensor[(1260), float32] */, dtype="float32") /* ty=Tensor[(1260), float32] */;
  %1085 = reshape(%1084, newshape=[14, 6, 15]) /* ty=Tensor[(14, 6, 15), float32] */;
  %1086 = @func_963(%1085) /* ty=(Tensor[(14, 6, 15), float32],) */;
  %1087 = cast(%var_2458, dtype="uint8") /* ty=uint8 */;
  %1088 = cast(meta[relay.Constant][41] /* ty=Tensor[(75), uint8] */, dtype="uint8") /* ty=Tensor[(75), uint8] */;
  %1089 = %1086.0;
  %1090 = cast(%1089, dtype="float32") /* ty=Tensor[(14, 6, 15), float32] */;
  %1091 = reshape(%1087, newshape=[]) /* ty=uint8 */;
  %1092 = reshape(%1088, newshape=[15, 1, 5]) /* ty=Tensor[(15, 1, 5), uint8] */;
  %1093 = reshape(%1090, newshape=[1260]) /* ty=Tensor[(1260), float32] */;
  %1094 = @func_1297(%1091, %1092, %1093) /* ty=(Tensor[(15, 1, 5), uint8], Tensor[(14, 6, 15), float32], Tensor[(1260), float32]) */;
  %1095 = cast(%var_2458, dtype="uint8") /* ty=uint8 */;
  %1096 = cast(meta[relay.Constant][41] /* ty=Tensor[(75), uint8] */, dtype="uint8") /* ty=Tensor[(75), uint8] */;
  %1097 = cast(%1089, dtype="float32") /* ty=Tensor[(14, 6, 15), float32] */;
  %1098 = reshape(%1095, newshape=[]) /* ty=uint8 */;
  %1099 = reshape(%1096, newshape=[15, 1, 5]) /* ty=Tensor[(15, 1, 5), uint8] */;
  %1100 = reshape(%1097, newshape=[1260]) /* ty=Tensor[(1260), float32] */;
  %1101 = @func_1297(%1098, %1099, %1100) /* ty=(Tensor[(15, 1, 5), uint8], Tensor[(14, 6, 15), float32], Tensor[(1260), float32]) */;
  %1102 = log10(%1083) /* ty=Tensor[(3, 11, 16), float32] */;
  %1103 = %1094.2;
  %1104 = %1101.1;
  (%1102, %1089, meta[relay.Constant][40] /* ty=Tensor[(1260), float32] */, %1103, %var_2458, meta[relay.Constant][41] /* ty=Tensor[(75), uint8] */, %1104)
}

def @func_6833(%var_6806: Tensor[(8, 8, 4), float64]) -> Tensor[(8, 8, 4), int32] {
  %1105 = @func_5468() /* ty=(Tensor[(8, 8, 4), float64],) */;
  %1106 = %1105.0;
  %1107 = cast(%var_6806, dtype="int32") /* ty=Tensor[(8, 8, 4), int32] */;
  %1108 = shape_of(%1106, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1109 = cast(%1106, dtype="int32") /* ty=Tensor[(8, 8, 4), int32] */;
  %1110 = dyn.reshape(%1107, %1108, newshape=[]) /* ty=Tensor[(?, ?, ?), int32] */;
  left_shift(%1109, %1110) /* ty=Tensor[(8, 8, 4), int32] */
}

def @func_14885(%var_14884: Tensor[(14, 10, 9), float32]) -> (Tensor[(14, 10, 9), float32], Tensor[(1296), float64]) {
  %1115 = fn (%var_14863: Tensor[(14, 10, 9), float32]) -> (Tensor[(14, 10, 9), float32], Tensor[(1296), float64]) {
    %1111 = cast(%var_14863, dtype="float32") /* ty=Tensor[(14, 10, 9), float32] */;
    %1112 = @func_6176() /* ty=(Tensor[(8, 8, 4), float64], Tensor[(6, 7, 14), float64], Tensor[(588), uint8], Tensor[(8, 8, 4), float64], Tensor[(9, 12, 12), float32], Tensor[(1296), float64]) */;
    %1113 = sigmoid(%1111) /* ty=Tensor[(14, 10, 9), float32] */;
    %1114 = %1112.5;
    (%1113, %1114)
  };
  %1115(%var_14884) /* ty=(Tensor[(14, 10, 9), float32], Tensor[(1296), float64]) */
}

def @func_16577() -> (Tensor[(9, 12, 12), float32], Tensor[(1296), bool], Tensor[(256), float64], Tensor[(1296), bool]) {
  @func_16575() /* ty=(Tensor[(9, 12, 12), float32], Tensor[(1296), bool], Tensor[(256), float64], Tensor[(1296), bool]) */
}

def @func_13843() -> (Tensor[(8, 8, 4), float64],) {
  %1118 = fn () -> (Tensor[(8, 8, 4), float64],) {
    %1116 = @func_13789() /* ty=(Tensor[(8, 8, 4), float64], Tensor[(8, 8, 4), float64]) */;
    %1117 = %1116.0;
    (%1117,)
  };
  %1118() /* ty=(Tensor[(8, 8, 4), float64],) */
}

def @func_7597() -> (Tensor[(1296), float64], Tensor[(8, 8, 4), float64], Tensor[(8, 8, 4), uint8]) {
  @func_7595() /* ty=(Tensor[(1296), float64], Tensor[(8, 8, 4), float64], Tensor[(8, 8, 4), uint8]) */
}

def @func_6578(%var_6576: Tensor[(1296), float64]) -> (Tensor[(8, 8, 4), float64], Tensor[(9, 12, 12), float32], Tensor[(1296), float64], Tensor[(6, 7, 14), float64], Tensor[(14, 42), uint8]) {
  @func_6575(%var_6576) /* ty=(Tensor[(8, 8, 4), float64], Tensor[(9, 12, 12), float32], Tensor[(1296), float64], Tensor[(6, 7, 14), float64], Tensor[(14, 42), uint8]) */
}

def @func_17077() -> (Tensor[(1296), float64],) {
  %1121 = fn () -> (Tensor[(1296), float64],) {
    %1119 = @func_16259() /* ty=(Tensor[(1296), float64],) */;
    %1120 = %1119.0;
    (%1120,)
  };
  %1121() /* ty=(Tensor[(1296), float64],) */
}

def @func_14446() -> Tensor[(8, 8, 4), float64] {
  @func_14444() /* ty=Tensor[(8, 8, 4), float64] */
}

def @func_13005() -> (Tensor[(1296), float64],) {
  @func_13003() /* ty=(Tensor[(1296), float64],) */
}

def @func_14563(%var_14561: int64, %var_14562: Tensor[(9, 4, 7), int64]) -> (Tensor[(9, 4, 7), bool], Tensor[(16, 8, 5), float64], Tensor[(640), float64]) {
  @func_14559(%var_14561, %var_14562) /* ty=(Tensor[(9, 4, 7), bool], Tensor[(16, 8, 5), float64], Tensor[(640), float64]) */
}

def @func_7078(%var_7076: Tensor[(12, 15, 7), float64], %var_7077: Tensor[(12, 15, 7), float64]) -> Tensor[(12, 15, 7), float64] {
  %1126 = fn (%var_7070: Tensor[(12, 15, 7), float64], %var_7071: Tensor[(12, 15, 7), float64]) -> Tensor[(12, 15, 7), float64] {
    %1122 = cast(%var_7071, dtype="float64") /* ty=Tensor[(12, 15, 7), float64] */;
    %1123 = shape_of(%var_7070, dtype="int32") /* ty=Tensor[(3), int32] */;
    %1124 = cast(%var_7070, dtype="float64") /* ty=Tensor[(12, 15, 7), float64] */;
    %1125 = dyn.reshape(%1122, %1123, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
    floor_divide(%1124, %1125) /* ty=Tensor[(12, 15, 7), float64] */
  };
  %1126(%var_7076, %var_7077) /* ty=Tensor[(12, 15, 7), float64] */
}

def @func_15209() -> (Tensor[(8, 8, 4), float64], Tensor[(8, 8, 4), uint8]) {
  @func_15207() /* ty=(Tensor[(8, 8, 4), float64], Tensor[(8, 8, 4), uint8]) */
}

def @func_23664(%var_23663: Tensor[(16, 12, 4), float32]) -> Tensor[(16, 12, 4), float32] {
  %1128 = fn (%var_23657: Tensor[(16, 12, 4), float32]) -> Tensor[(16, 12, 4), float32] {
    %1127 = cast(%var_23657, dtype="float32") /* ty=Tensor[(16, 12, 4), float32] */;
    atan(%1127) /* ty=Tensor[(16, 12, 4), float32] */
  };
  %1128(%var_23663) /* ty=Tensor[(16, 12, 4), float32] */
}

def @func_10519() -> Tensor[(8, 8, 4), float64] {
  @func_10517() /* ty=Tensor[(8, 8, 4), float64] */
}

def @func_25298(%var_25296: Tensor[(1260), float32]) -> (Tensor[(1296), bool], Tensor[(30), float32], Tensor[(1155), int8], Tensor[(1260), float32]) {
  %1129 = @func_22053() /* ty=(Tensor[(1296), bool], Tensor[(256), float64]) */;
  %1130 = cast(meta[relay.Constant][42] /* ty=Tensor[(1155), int8] */, dtype="int8") /* ty=Tensor[(1155), int8] */;
  %1131 = cast(%var_25296, dtype="float32") /* ty=Tensor[(1260), float32] */;
  %1132 = %1129.0;
  %1133 = cast(%1132, dtype="bool") /* ty=Tensor[(1296), bool] */;
  %1134 = reshape(%1130, newshape=[1155]) /* ty=Tensor[(1155), int8] */;
  %1135 = reshape(%1131, newshape=[1, 1260]) /* ty=Tensor[(1, 1260), float32] */;
  %1136 = reshape(%1133, newshape=[1296]) /* ty=Tensor[(1296), bool] */;
  %1137 = @func_10987(%1134, %1135, %1136) /* ty=(Tensor[(8, 8, 4), int64], Tensor[(30), float32], Tensor[(1155), int8], Tensor[(1, 1260), float32], Tensor[(1296), uint64]) */;
  %1138 = %1137.1;
  (%1132, %1138, meta[relay.Constant][42] /* ty=Tensor[(1155), int8] */, %var_25296)
}

def @func_15658() -> (Tensor[(8, 8, 4), float64], Tensor[(8, 8, 4), float64]) {
  %1142 = fn () -> (Tensor[(8, 8, 4), float64], Tensor[(8, 8, 4), float64]) {
    %1139 = @func_8261() /* ty=(Tensor[(8, 8, 4), float64], Tensor[(8, 8, 4), int64], Tensor[(8, 8, 4), float64]) */;
    %1140 = %1139.2;
    %1141 = @func_14444() /* ty=Tensor[(8, 8, 4), float64] */;
    (%1140, %1141)
  };
  %1142() /* ty=(Tensor[(8, 8, 4), float64], Tensor[(8, 8, 4), float64]) */
}

def @func_22834() -> Tensor[(8, 8, 4), float64] {
  %1143 = @func_19705() /* ty=(Tensor[(1296), float64], Tensor[(8, 8, 4), float64]) */;
  %1143.1
}

def @func_18409() -> Tensor[(8, 8, 4), float64] {
  %1144 = @func_15657() /* ty=(Tensor[(8, 8, 4), float64], Tensor[(8, 8, 4), float64]) */;
  %1144.0
}

def @func_10604(%var_10602: Tensor[(1296), float64], %var_10603: Tensor[(256), float64]) -> (Tensor[(1296), float32], Tensor[(8, 8, 4), int32], Tensor[(256), float64], Tensor[(1296), float64]) {
  @func_10600(%var_10602, %var_10603) /* ty=(Tensor[(1296), float32], Tensor[(8, 8, 4), int32], Tensor[(256), float64], Tensor[(1296), float64]) */
}

def @func_16636() -> (uint8, Tensor[(8, 8, 4), float64], Tensor[(8, 8, 4), float64]) {
  %1150 = fn () -> (uint8, Tensor[(8, 8, 4), float64], Tensor[(8, 8, 4), float64]) {
    %1145 = @func_10481() /* ty=(Tensor[(8, 8, 4), float64], Tensor[(8, 8, 4), int64]) */;
    %1146 = @func_9339() /* ty=(Tensor[(1296), float64], Tensor[(8, 8, 4), float64]) */;
    %1147 = @func_11795() /* ty=uint8 */;
    %1148 = %1145.0;
    %1149 = %1146.1;
    (%1147, %1148, %1149)
  };
  %1150() /* ty=(uint8, Tensor[(8, 8, 4), float64], Tensor[(8, 8, 4), float64]) */
}

def @func_26273() -> (Tensor[(120), float64], Tensor[(8, 8, 4), float64], Tensor[(256), float64]) {
  %1151 = @func_11144() /* ty=(Tensor[(120), float64], Tensor[(8, 8, 4), float64]) */;
  %1152 = @func_6905() /* ty=(Tensor[(8, 8, 4), float64], uint8, Tensor[(528), float32], uint8, Tensor[(8, 8, 4), float64]) */;
  %1153 = @func_19205() /* ty=(Tensor[(256), float64], Tensor[(8, 8, 4), float64]) */;
  %1154 = %1151.0;
  %1155 = %1152.4;
  %1156 = %1153.0;
  (%1154, %1155, %1156)
}

def @func_14156() -> (uint8, Tensor[(8, 8, 4), float64]) {
  %1157 = @func_10684() /* ty=(uint8,) */;
  %1158 = %1157.0;
  %1159 = @func_10517() /* ty=Tensor[(8, 8, 4), float64] */;
  (%1158, %1159)
}

def @func_16356() -> (uint8, Tensor[(8, 8, 4), float64], Tensor[(1296), bool], Tensor[(14, 2, 15), int64], Tensor[(5, 6), int64], Tensor[(5, 84), int64]) {
  %1171 = fn () -> (uint8, Tensor[(8, 8, 4), float64], Tensor[(1296), bool], Tensor[(14, 2, 15), int64], Tensor[(5, 6), int64], Tensor[(5, 84), int64]) {
    %1160 = @func_9953() /* ty=(uint8,) */;
    %1161 = @func_8352() /* ty=(Tensor[(8, 8, 4), float64], Tensor[(1296), bool]) */;
    %1162 = cast(meta[relay.Constant][43] /* ty=Tensor[(5, 6), int64] */, dtype="int64") /* ty=Tensor[(5, 6), int64] */;
    %1163 = cast(meta[relay.Constant][44] /* ty=Tensor[(5, 84), int64] */, dtype="int64") /* ty=Tensor[(5, 84), int64] */;
    %1164 = reshape(%1162, newshape=[1, 2, 15]) /* ty=Tensor[(1, 2, 15), int64] */;
    %1165 = reshape(%1163, newshape=[14, 2, 15]) /* ty=Tensor[(14, 2, 15), int64] */;
    %1166 = @func_2943(%1164, %1165) /* ty=(Tensor[(14, 2, 15), int64],) */;
    %1167 = %1160.0;
    %1168 = @func_7399() /* ty=Tensor[(8, 8, 4), float64] */;
    %1169 = %1161.1;
    %1170 = %1166.0;
    (%1167, %1168, %1169, %1170, meta[relay.Constant][43] /* ty=Tensor[(5, 6), int64] */, meta[relay.Constant][44] /* ty=Tensor[(5, 84), int64] */)
  };
  %1171() /* ty=(uint8, Tensor[(8, 8, 4), float64], Tensor[(1296), bool], Tensor[(14, 2, 15), int64], Tensor[(5, 6), int64], Tensor[(5, 84), int64]) */
}

def @func_8856(%var_8854: Tensor[(2, 5, 12), float64], %var_8855: Tensor[(2, 5, 12), float64]) -> (Tensor[(2, 5, 12), bool],) {
  @func_8852(%var_8854, %var_8855) /* ty=(Tensor[(2, 5, 12), bool],) */
}

def @func_25848() -> Tensor[(8, 8, 4), float64] {
  @func_15340() /* ty=Tensor[(8, 8, 4), float64] */
}

def @func_20416() -> (Tensor[(8, 8, 4), float64],) {
  %1174 = fn () -> (Tensor[(8, 8, 4), float64],) {
    %1172 = @func_15328() /* ty=(Tensor[(8, 8, 4), float64],) */;
    %1173 = %1172.0;
    (%1173,)
  };
  %1174() /* ty=(Tensor[(8, 8, 4), float64],) */
}

def @func_16150() -> (Tensor[(8, 8, 4), float64], Tensor[(1260), float32]) {
  %1178 = fn () -> (Tensor[(8, 8, 4), float64], Tensor[(1260), float32]) {
    %1175 = @func_9275() /* ty=(Tensor[(8, 8, 4), float64], Tensor[(1260), float32], Tensor[(1155), int8], Tensor[(1260), float32], Tensor[(8, 8, 4), float64], Tensor[(8, 8, 4), float64]) */;
    %1176 = @func_10517() /* ty=Tensor[(8, 8, 4), float64] */;
    %1177 = %1175.1;
    (%1176, %1177)
  };
  %1178() /* ty=(Tensor[(8, 8, 4), float64], Tensor[(1260), float32]) */
}

def @func_22472() -> (Tensor[(1296), float64],) {
  %1181 = fn () -> (Tensor[(1296), float64],) {
    %1179 = @func_19886() /* ty=(Tensor[(1296), float64],) */;
    %1180 = %1179.0;
    (%1180,)
  };
  %1181() /* ty=(Tensor[(1296), float64],) */
}

def @func_10627() -> (Tensor[(8, 8, 4), int64], Tensor[(8, 8, 4), float64]) {
  %1186 = fn () -> (Tensor[(8, 8, 4), int64], Tensor[(8, 8, 4), float64]) {
    %1182 = @func_7364() /* ty=(Tensor[(8, 8, 4), int64], Tensor[(256), float64]) */;
    %1183 = @func_5468() /* ty=(Tensor[(8, 8, 4), float64],) */;
    %1184 = %1182.0;
    %1185 = %1183.0;
    (%1184, %1185)
  };
  %1186() /* ty=(Tensor[(8, 8, 4), int64], Tensor[(8, 8, 4), float64]) */
}

def @func_23673() -> (Tensor[(8, 8, 4), float64],) {
  %1188 = fn () -> (Tensor[(8, 8, 4), float64],) {
    %1187 = @func_22913() /* ty=Tensor[(8, 8, 4), float64] */;
    (%1187,)
  };
  %1188() /* ty=(Tensor[(8, 8, 4), float64],) */
}

def @func_12187() -> (Tensor[(8, 8, 4), float64],) {
  @func_12185() /* ty=(Tensor[(8, 8, 4), float64],) */
}

def @func_14721() -> (Tensor[(8, 8, 4), float64], Tensor[(1296), float64], Tensor[(1296), bool], Tensor[(4, 5, 10), bool], Tensor[(200), bool], Tensor[(8, 8, 4), float64]) {
  %1200 = fn () -> (Tensor[(8, 8, 4), float64], Tensor[(1296), float64], Tensor[(1296), bool], Tensor[(4, 5, 10), bool], Tensor[(200), bool], Tensor[(8, 8, 4), float64]) {
    %1189 = @func_9759() /* ty=(Tensor[(8, 8, 4), float64],) */;
    %1190 = @func_9339() /* ty=(Tensor[(1296), float64], Tensor[(8, 8, 4), float64]) */;
    %1191 = cast(meta[relay.Constant][45] /* ty=Tensor[(200), bool] */, dtype="bool") /* ty=Tensor[(200), bool] */;
    %1192 = reshape(%1191, newshape=[4, 5, 10]) /* ty=Tensor[(4, 5, 10), bool] */;
    %1193 = @func_11584(%1192) /* ty=(Tensor[(4, 5, 10), bool],) */;
    %1194 = @func_9677() /* ty=(Tensor[(8, 8, 4), float64], Tensor[(8, 8, 4), float64]) */;
    %1195 = %1189.0;
    %1196 = %1190.0;
    %1197 = @func_6538() /* ty=Tensor[(1296), bool] */;
    %1198 = %1193.0;
    %1199 = %1194.0;
    (%1195, %1196, %1197, %1198, meta[relay.Constant][45] /* ty=Tensor[(200), bool] */, %1199)
  };
  %1200() /* ty=(Tensor[(8, 8, 4), float64], Tensor[(1296), float64], Tensor[(1296), bool], Tensor[(4, 5, 10), bool], Tensor[(200), bool], Tensor[(8, 8, 4), float64]) */
}

def @func_14123() -> (Tensor[(8, 8, 4), float64],) {
  %1202 = fn () -> (Tensor[(8, 8, 4), float64],) {
    %1201 = @func_7342() /* ty=Tensor[(8, 8, 4), float64] */;
    (%1201,)
  };
  %1202() /* ty=(Tensor[(8, 8, 4), float64],) */
}

def @func_22657() -> (Tensor[(8, 8, 4), float64],) {
  %1203 = @func_7504() /* ty=(Tensor[(8, 8, 4), float64],) */;
  %1204 = %1203.0;
  (%1204,)
}

def @func_25445() -> (Tensor[(8, 8, 4), float64],) {
  @func_25443() /* ty=(Tensor[(8, 8, 4), float64],) */
}

def @func_25833() -> Tensor[(1296), float64] {
  %1205 = @func_19584() /* ty=(Tensor[(1296), float64],) */;
  %1205.0
}

def @func_7595() -> (Tensor[(1296), float64], Tensor[(8, 8, 4), float64], Tensor[(8, 8, 4), uint8]) {
  %1206 = @func_6490() /* ty=(Tensor[(1296), float64],) */;
  %1207 = @func_7099() /* ty=(Tensor[(8, 8, 4), float64],) */;
  %1208 = %1207.0;
  %1209 = cast(%1208, dtype="float64") /* ty=Tensor[(8, 8, 4), float64] */;
  %1210 = reshape(%1209, newshape=[8, 8, 4]) /* ty=Tensor[(8, 8, 4), float64] */;
  %1211 = %1206.0;
  %1212 = @func_6658(%1210) /* ty=Tensor[(8, 8, 4), uint8] */;
  (%1211, %1208, %1212)
}

def @func_16719() -> (Tensor[(8, 8, 4), float64], Tensor[(1296), float64]) {
  @func_16717() /* ty=(Tensor[(8, 8, 4), float64], Tensor[(1296), float64]) */
}

def @func_3760(%var_3626: Tensor[(16, 15, 6), uint16], %var_3630: Tensor[(16, 15, 6), uint16], %var_3648: Tensor[(528), float32], %var_3688: Tensor[(640), float64]) -> (Tensor[(16, 15, 6), uint16], Tensor[(528), float32], uint8, Tensor[(16, 15, 6), bool], Tensor[(16, 8, 5), float64], Tensor[(640), float64], Tensor[(14, 6, 15), float32], Tensor[(9, 12, 12), float32], Tensor[(1296), float64], Tensor[(1260), bool], Tensor[(3, 11, 16), float32]) {
  %1213 = cast(%var_3626, dtype="uint16") /* ty=Tensor[(16, 15, 6), uint16] */;
  %1214 = shape_of(meta[relay.Constant][46] /* ty=Tensor[(16, 15, 6), uint16] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1215 = cast(meta[relay.Constant][46] /* ty=Tensor[(16, 15, 6), uint16] */, dtype="uint16") /* ty=Tensor[(16, 15, 6), uint16] */;
  %1216 = dyn.reshape(%1213, %1214, newshape=[]) /* ty=Tensor[(?, ?, ?), uint16] */;
  %1217 = cast(%var_3630, dtype="uint32") /* ty=Tensor[(16, 15, 6), uint32] */;
  %1218 = shape_of(%var_3626, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1219 = cast(%var_3626, dtype="uint32") /* ty=Tensor[(16, 15, 6), uint32] */;
  %1220 = dyn.reshape(%1217, %1218, newshape=[]) /* ty=Tensor[(?, ?, ?), uint32] */;
  %1221 = subtract(%1219, %1220) /* ty=Tensor[(16, 15, 6), uint32] */;
  %1222 = cast(meta[relay.Constant][46] /* ty=Tensor[(16, 15, 6), uint16] */, dtype="bool") /* ty=Tensor[(16, 15, 6), bool] */;
  %1223 = shape_of(%1221, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1224 = cast(%1221, dtype="bool") /* ty=Tensor[(16, 15, 6), bool] */;
  %1225 = dyn.reshape(%1222, %1223, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %1226 = cast(%var_3688, dtype="float64") /* ty=Tensor[(640), float64] */;
  %1227 = reshape(%1226, newshape=[16, 8, 5]) /* ty=Tensor[(16, 8, 5), float64] */;
  %1228 = @func_2187(%1227) /* ty=(Tensor[(16, 8, 5), float64],) */;
  %1229 = cast(%var_3648, dtype="float32") /* ty=Tensor[(528), float32] */;
  %1230 = cast(meta[relay.Constant][47] /* ty=uint8 */, dtype="uint8") /* ty=uint8 */;
  %1231 = reshape(%1229, newshape=[3, 11, 16]) /* ty=Tensor[(3, 11, 16), float32] */;
  %1232 = reshape(%1230, newshape=[]) /* ty=uint8 */;
  %1233 = @func_2471(%1231, %1232) /* ty=(Tensor[(3, 11, 16), float32], Tensor[(14, 6, 15), float32], Tensor[(1260), float32], Tensor[(1260), float32], uint8, Tensor[(75), uint8], Tensor[(14, 6, 15), float32]) */;
  %1234 = %1233.2;
  %1235 = cast(%1234, dtype="float32") /* ty=Tensor[(1260), float32] */;
  %1236 = reshape(%1235, newshape=[14, 6, 15]) /* ty=Tensor[(14, 6, 15), float32] */;
  %1237 = @func_963(%1236) /* ty=(Tensor[(14, 6, 15), float32],) */;
  %1238 = cast(meta[relay.Constant][48] /* ty=Tensor[(1296), float64] */, dtype="float64") /* ty=Tensor[(1296), float64] */;
  %1239 = reshape(%1238, newshape=[9, 12, 12]) /* ty=Tensor[(9, 12, 12), float64] */;
  %1240 = cast(%1234, dtype="float64") /* ty=Tensor[(1260), float64] */;
  %1241 = tan(%1240) /* ty=Tensor[(1260), float64] */;
  %1242 = cast(%1234, dtype="bool") /* ty=Tensor[(1260), bool] */;
  %1243 = shape_of(%1241, dtype="int32") /* ty=Tensor[(1), int32] */;
  %1244 = cast(%1241, dtype="bool") /* ty=Tensor[(1260), bool] */;
  %1245 = dyn.reshape(%1242, %1243, newshape=[]) /* ty=Tensor[(?), bool] */;
  %1246 = cast(%var_3648, dtype="float32") /* ty=Tensor[(528), float32] */;
  %1247 = cast(meta[relay.Constant][47] /* ty=uint8 */, dtype="uint8") /* ty=uint8 */;
  %1248 = reshape(%1246, newshape=[3, 11, 16]) /* ty=Tensor[(3, 11, 16), float32] */;
  %1249 = reshape(%1247, newshape=[]) /* ty=uint8 */;
  %1250 = @func_2471(%1248, %1249) /* ty=(Tensor[(3, 11, 16), float32], Tensor[(14, 6, 15), float32], Tensor[(1260), float32], Tensor[(1260), float32], uint8, Tensor[(75), uint8], Tensor[(14, 6, 15), float32]) */;
  %1251 = maximum(%1215, %1216) /* ty=Tensor[(16, 15, 6), uint16] */;
  %1252 = greater_equal(%1224, %1225) /* ty=Tensor[(16, 15, 6), bool] */;
  %1253 = %1228.0;
  %1254 = %1237.0;
  %1255 = @func_2887(%1239) /* ty=Tensor[(9, 12, 12), float32] */;
  %1256 = less(%1244, %1245) /* ty=Tensor[(1260), bool] */;
  %1257 = %1250.0;
  (%1251, %var_3648, meta[relay.Constant][47] /* ty=uint8 */, %1252, %1253, %var_3688, %1254, %1255, meta[relay.Constant][48] /* ty=Tensor[(1296), float64] */, %1256, %1257)
}

def @func_13634() -> Tensor[(8, 8, 4), float64] {
  @func_13632() /* ty=Tensor[(8, 8, 4), float64] */
}

def @func_2890(%var_2888: Tensor[(9, 12, 12), float64]) -> Tensor[(9, 12, 12), float32] {
  @func_2887(%var_2888) /* ty=Tensor[(9, 12, 12), float32] */
}

def @func_15833() -> Tensor[(256), float64] {
  %1258 = @func_10031() /* ty=(Tensor[(256), float64], Tensor[(1296), float64]) */;
  %1258.0
}

def @func_27015(%var_27014: Tensor[(1296), float64]) -> (Tensor[(8, 8, 4), float64], Tensor[(9, 12, 12), float32], Tensor[(1296), float64], Tensor[(8, 8, 4), float64]) {
  %1266 = fn (%var_26998: Tensor[(1296), float64]) -> (Tensor[(8, 8, 4), float64], Tensor[(9, 12, 12), float32], Tensor[(1296), float64], Tensor[(8, 8, 4), float64]) {
    %1259 = @func_8261() /* ty=(Tensor[(8, 8, 4), float64], Tensor[(8, 8, 4), int64], Tensor[(8, 8, 4), float64]) */;
    %1260 = cast(%var_26998, dtype="float64") /* ty=Tensor[(1296), float64] */;
    %1261 = reshape(%1260, newshape=[9, 12, 12]) /* ty=Tensor[(9, 12, 12), float64] */;
    %1262 = @func_22753() /* ty=(Tensor[(8, 8, 4), float64],) */;
    %1263 = %1259.0;
    %1264 = @func_2887(%1261) /* ty=Tensor[(9, 12, 12), float32] */;
    %1265 = %1262.0;
    (%1263, %1264, %var_26998, %1265)
  };
  %1266(%var_27014) /* ty=(Tensor[(8, 8, 4), float64], Tensor[(9, 12, 12), float32], Tensor[(1296), float64], Tensor[(8, 8, 4), float64]) */
}

def @func_7880() -> (Tensor[(8, 8, 4), float64], Tensor[(8, 8, 4), int64], Tensor[(256), float64]) {
  @func_7878() /* ty=(Tensor[(8, 8, 4), float64], Tensor[(8, 8, 4), int64], Tensor[(256), float64]) */
}

def @func_21924() -> (Tensor[(8, 8, 4), float64], Tensor[(8, 8, 4), int32], Tensor[(1296), float64]) {
  %1271 = fn () -> (Tensor[(8, 8, 4), float64], Tensor[(8, 8, 4), int32], Tensor[(1296), float64]) {
    %1267 = @func_9339() /* ty=(Tensor[(1296), float64], Tensor[(8, 8, 4), float64]) */;
    %1268 = @func_20165() /* ty=Tensor[(8, 8, 4), float64] */;
    %1269 = @func_21157() /* ty=Tensor[(8, 8, 4), int32] */;
    %1270 = %1267.0;
    (%1268, %1269, %1270)
  };
  %1271() /* ty=(Tensor[(8, 8, 4), float64], Tensor[(8, 8, 4), int32], Tensor[(1296), float64]) */
}

def @func_23389() -> (Tensor[(8, 8, 4), float64], Tensor[(1296), float64], uint8) {
  @func_23387() /* ty=(Tensor[(8, 8, 4), float64], Tensor[(1296), float64], uint8) */
}

def @func_12333() -> (Tensor[(120), float64], Tensor[(1296), float64]) {
  %1275 = fn () -> (Tensor[(120), float64], Tensor[(1296), float64]) {
    %1272 = @func_9585() /* ty=(Tensor[(8, 8, 4), int64], Tensor[(8, 8, 4), float64], Tensor[(1296), bool], uint8, Tensor[(8, 8, 4), uint8], Tensor[(1296), float64], Tensor[(2, 5, 12), bool], Tensor[(120), float64], Tensor[(8, 8, 4), bool]) */;
    %1273 = @func_9618() /* ty=Tensor[(120), float64] */;
    %1274 = %1272.5;
    (%1273, %1274)
  };
  %1275() /* ty=(Tensor[(120), float64], Tensor[(1296), float64]) */
}

def @func_19316() -> (Tensor[(8, 8, 4), float64],) {
  @func_19314() /* ty=(Tensor[(8, 8, 4), float64],) */
}

def @func_25724() -> Tensor[(1296), float64] {
  @func_25722() /* ty=Tensor[(1296), float64] */
}

def @func_10183() -> (Tensor[(8, 8, 4), float64], Tensor[(8, 8, 4), float64]) {
  %1282 = fn () -> (Tensor[(8, 8, 4), float64], Tensor[(8, 8, 4), float64]) {
    %1276 = @func_5468() /* ty=(Tensor[(8, 8, 4), float64],) */;
    %1277 = %1276.0;
    %1278 = cast(%1277, dtype="float64") /* ty=Tensor[(8, 8, 4), float64] */;
    %1279 = reshape(%1278, newshape=[8, 8, 4]) /* ty=Tensor[(8, 8, 4), float64] */;
    %1280 = @func_7237(%1279) /* ty=(Tensor[(8, 8, 4), bool], Tensor[(8, 8, 4), float64], Tensor[(8, 8, 4), float32], Tensor[(8, 8, 4), float64]) */;
    %1281 = %1280.1;
    (%1277, %1281)
  };
  %1282() /* ty=(Tensor[(8, 8, 4), float64], Tensor[(8, 8, 4), float64]) */
}

def @func_15194() -> (Tensor[(8, 8, 4), float64],) {
  %1285 = fn () -> (Tensor[(8, 8, 4), float64],) {
    %1283 = @func_13842() /* ty=(Tensor[(8, 8, 4), float64],) */;
    %1284 = %1283.0;
    (%1284,)
  };
  %1285() /* ty=(Tensor[(8, 8, 4), float64],) */
}

def @func_16400() -> (Tensor[(528), float32],) {
  %1288 = fn () -> (Tensor[(528), float32],) {
    %1286 = @func_9237() /* ty=(Tensor[(8, 8, 4), float64], Tensor[(1296), float64], Tensor[(1260), bool], Tensor[(528), float32]) */;
    %1287 = %1286.3;
    (%1287,)
  };
  %1288() /* ty=(Tensor[(528), float32],) */
}

def @func_26029(%var_25960: uint8, %var_25962: Tensor[(1260), float32]) -> (Tensor[(8, 8, 4), float64], uint8, Tensor[(75), uint8], Tensor[(1260), uint32], Tensor[(3, 11, 16), float32], Tensor[(15, 8, 16), float32], Tensor[(1920), float32], Tensor[(1440), bool], Tensor[(1296), float64], Tensor[(8, 8, 4), float64]) {
  %1289 = cast(%var_25960, dtype="uint8") /* ty=uint8 */;
  %1290 = cast(meta[relay.Constant][49] /* ty=Tensor[(75), uint8] */, dtype="uint8") /* ty=Tensor[(75), uint8] */;
  %1291 = cast(%var_25962, dtype="float32") /* ty=Tensor[(1260), float32] */;
  %1292 = reshape(%1289, newshape=[]) /* ty=uint8 */;
  %1293 = reshape(%1290, newshape=[15, 1, 5]) /* ty=Tensor[(15, 1, 5), uint8] */;
  %1294 = reshape(%1291, newshape=[1260]) /* ty=Tensor[(1260), float32] */;
  %1295 = @func_1297(%1292, %1293, %1294) /* ty=(Tensor[(15, 1, 5), uint8], Tensor[(14, 6, 15), float32], Tensor[(1260), float32]) */;
  %1296 = %1295.2;
  %1297 = cast(%1296, dtype="uint32") /* ty=Tensor[(1260), uint32] */;
  %1298 = shape_of(%var_25962, dtype="int32") /* ty=Tensor[(1), int32] */;
  %1299 = cast(%var_25962, dtype="uint32") /* ty=Tensor[(1260), uint32] */;
  %1300 = dyn.reshape(%1297, %1298, newshape=[]) /* ty=Tensor[(?), uint32] */;
  %1301 = cast(meta[relay.Constant][50] /* ty=Tensor[(1440), uint16] */, dtype="uint16") /* ty=Tensor[(1440), uint16] */;
  %1302 = reshape(%1301, newshape=[1440]) /* ty=Tensor[(1440), uint16] */;
  %1303 = @func_18533(%1302) /* ty=(Tensor[(120), float64], Tensor[(3, 11, 16), float32], Tensor[(1440), uint16], Tensor[(528), float32], Tensor[(10, 64), float64]) */;
  %1304 = cast(meta[relay.Constant][51] /* ty=Tensor[(1920), float32] */, dtype="float32") /* ty=Tensor[(1920), float32] */;
  %1305 = cast(meta[relay.Constant][51] /* ty=Tensor[(1920), float32] */, dtype="float32") /* ty=Tensor[(1920), float32] */;
  %1306 = reshape(%1304, newshape=[15, 8, 16]) /* ty=Tensor[(15, 8, 16), float32] */;
  %1307 = reshape(%1305, newshape=[15, 8, 16]) /* ty=Tensor[(15, 8, 16), float32] */;
  %1308 = @func_14346(%1306, %1307) /* ty=(Tensor[(15, 8, 16), float32],) */;
  %1309 = cast(meta[relay.Constant][50] /* ty=Tensor[(1440), uint16] */, dtype="float64") /* ty=Tensor[(1440), float64] */;
  %1310 = asin(%1309) /* ty=Tensor[(1440), float64] */;
  %1311 = cast(meta[relay.Constant][50] /* ty=Tensor[(1440), uint16] */, dtype="bool") /* ty=Tensor[(1440), bool] */;
  %1312 = shape_of(%1310, dtype="int32") /* ty=Tensor[(1), int32] */;
  %1313 = cast(%1310, dtype="bool") /* ty=Tensor[(1440), bool] */;
  %1314 = dyn.reshape(%1311, %1312, newshape=[]) /* ty=Tensor[(?), bool] */;
  %1315 = @func_18549() /* ty=(Tensor[(1296), float64],) */;
  %1316 = @func_22878() /* ty=Tensor[(8, 8, 4), float64] */;
  %1317 = maximum(%1299, %1300) /* ty=Tensor[(1260), uint32] */;
  %1318 = %1303.1;
  %1319 = %1308.0;
  %1320 = greater(%1313, %1314) /* ty=Tensor[(1440), bool] */;
  %1321 = %1315.0;
  %1322 = @func_22340() /* ty=Tensor[(8, 8, 4), float64] */;
  (%1316, %var_25960, meta[relay.Constant][49] /* ty=Tensor[(75), uint8] */, %1317, %1318, %1319, meta[relay.Constant][51] /* ty=Tensor[(1920), float32] */, %1320, %1321, %1322)
}

def @func_15853() -> (Tensor[(8, 8, 4), float64], Tensor[(8, 8, 4), uint8], Tensor[(8, 8, 4), int32]) {
  @func_15851() /* ty=(Tensor[(8, 8, 4), float64], Tensor[(8, 8, 4), uint8], Tensor[(8, 8, 4), int32]) */
}

def @func_23303() -> (Tensor[(8, 8, 4), float64],) {
  @func_23301() /* ty=(Tensor[(8, 8, 4), float64],) */
}

def @func_11795() -> uint8 {
  %1323 = @func_6905() /* ty=(Tensor[(8, 8, 4), float64], uint8, Tensor[(528), float32], uint8, Tensor[(8, 8, 4), float64]) */;
  %1323.3
}

def @func_21265() -> (Tensor[(12, 2, 3), float32], Tensor[(8, 8, 4), float64]) {
  %1328 = fn () -> (Tensor[(12, 2, 3), float32], Tensor[(8, 8, 4), float64]) {
    %1324 = cast(meta[relay.Constant][52] /* ty=Tensor[(12, 2, 3), float32] */, dtype="float32") /* ty=Tensor[(12, 2, 3), float32] */;
    %1325 = @func_20393() /* ty=(Tensor[(8, 8, 4), float64],) */;
    %1326 = asin(%1324) /* ty=Tensor[(12, 2, 3), float32] */;
    %1327 = %1325.0;
    (%1326, %1327)
  };
  %1328() /* ty=(Tensor[(12, 2, 3), float32], Tensor[(8, 8, 4), float64]) */
}

def @func_2475(%var_2473: Tensor[(3, 11, 16), float32], %var_2474: uint8) -> (Tensor[(3, 11, 16), float32], Tensor[(14, 6, 15), float32], Tensor[(1260), float32], Tensor[(1260), float32], uint8, Tensor[(75), uint8], Tensor[(14, 6, 15), float32]) {
  @func_2471(%var_2473, %var_2474) /* ty=(Tensor[(3, 11, 16), float32], Tensor[(14, 6, 15), float32], Tensor[(1260), float32], Tensor[(1260), float32], uint8, Tensor[(75), uint8], Tensor[(14, 6, 15), float32]) */
}

def @func_8630() -> (Tensor[(8, 8, 4), float64],) {
  %1329 = @func_6452() /* ty=Tensor[(8, 8, 4), float64] */;
  (%1329,)
}

def @func_25558(%var_25539: Tensor[(6864), float32]) -> (Tensor[(8, 8, 4), float64], Tensor[(8, 8, 4), float64], Tensor[(6864), float32], uint8) {
  %1330 = @func_12567() /* ty=(Tensor[(8, 8, 4), float64], Tensor[(8, 8, 4), float64]) */;
  %1331 = cast(%var_25539, dtype="float32") /* ty=Tensor[(6864), float32] */;
  %1332 = reshape(%1331, newshape=[528, 13]) /* ty=Tensor[(528, 13), float32] */;
  %1333 = @func_24354(%1332) /* ty=(Tensor[(528, 13), float64], Tensor[(8, 8, 4), float64]) */;
  %1334 = @func_14156() /* ty=(uint8, Tensor[(8, 8, 4), float64]) */;
  %1335 = %1330.1;
  %1336 = %1333.1;
  %1337 = %1334.0;
  (%1335, %1336, %var_25539, %1337)
}

def @func_14774() -> Tensor[(1296), float64] {
  @func_14772() /* ty=Tensor[(1296), float64] */
}

def @func_17615() -> (Tensor[(8, 8, 4), float64],) {
  %1340 = fn () -> (Tensor[(8, 8, 4), float64],) {
    %1338 = @func_8261() /* ty=(Tensor[(8, 8, 4), float64], Tensor[(8, 8, 4), int64], Tensor[(8, 8, 4), float64]) */;
    %1339 = %1338.0;
    (%1339,)
  };
  %1340() /* ty=(Tensor[(8, 8, 4), float64],) */
}

def @func_21565() -> Tensor[(120), float64] {
  @func_10009() /* ty=Tensor[(120), float64] */
}

def @func_20348() -> (Tensor[(8, 8, 4), float64], Tensor[(1296), float64], Tensor[(8, 8, 4), float64], Tensor[(8, 8, 4), float64]) {
  %1351 = fn () -> (Tensor[(8, 8, 4), float64], Tensor[(1296), float64], Tensor[(8, 8, 4), float64], Tensor[(8, 8, 4), float64]) {
    %1341 = @func_17966() /* ty=(Tensor[(8, 8, 4), float64],) */;
    %1342 = %1341.0;
    %1343 = cast(%1342, dtype="float64") /* ty=Tensor[(8, 8, 4), float64] */;
    %1344 = reshape(%1343, newshape=[256]) /* ty=Tensor[(256), float64] */;
    %1345 = @func_10085(%1344) /* ty=(Tensor[(1296), float64], Tensor[(1296), float64], Tensor[(8, 8, 4), int32], Tensor[(256), float64]) */;
    %1346 = @func_17842() /* ty=(Tensor[(9, 12, 12), float32], Tensor[(8, 8, 4), float64], uint8) */;
    %1347 = @func_6982() /* ty=(Tensor[(8, 8, 4), float64], Tensor[(8, 8, 4), float64]) */;
    %1348 = %1345.1;
    %1349 = %1346.1;
    %1350 = %1347.1;
    (%1342, %1348, %1349, %1350)
  };
  %1351() /* ty=(Tensor[(8, 8, 4), float64], Tensor[(1296), float64], Tensor[(8, 8, 4), float64], Tensor[(8, 8, 4), float64]) */
}

def @func_13685() -> (Tensor[(8, 8, 4), float64], Tensor[(8, 8, 4), float64]) {
  %1352 = @func_7504() /* ty=(Tensor[(8, 8, 4), float64],) */;
  %1353 = @func_7342() /* ty=Tensor[(8, 8, 4), float64] */;
  %1354 = %1352.0;
  (%1353, %1354)
}

def @func_26629() -> Tensor[(8, 8, 4), float64] {
  @func_26627() /* ty=Tensor[(8, 8, 4), float64] */
}

def @func_11472() -> Tensor[(8, 8, 4), float64] {
  @func_8829() /* ty=Tensor[(8, 8, 4), float64] */
}

def @func_15851() -> (Tensor[(8, 8, 4), float64], Tensor[(8, 8, 4), uint8], Tensor[(8, 8, 4), int32]) {
  %1355 = @func_10182() /* ty=(Tensor[(8, 8, 4), float64], Tensor[(8, 8, 4), float64]) */;
  %1356 = @func_9585() /* ty=(Tensor[(8, 8, 4), int64], Tensor[(8, 8, 4), float64], Tensor[(1296), bool], uint8, Tensor[(8, 8, 4), uint8], Tensor[(1296), float64], Tensor[(2, 5, 12), bool], Tensor[(120), float64], Tensor[(8, 8, 4), bool]) */;
  %1357 = @func_7816() /* ty=(Tensor[(8, 8, 4), float64], Tensor[(8, 8, 4), int32]) */;
  %1358 = %1355.0;
  %1359 = %1356.4;
  %1360 = %1357.1;
  (%1358, %1359, %1360)
}

def @func_24354(%var_24311: Tensor[(528, 13), float32]) -> (Tensor[(528, 13), float64], Tensor[(8, 8, 4), float64]) {
  %1361 = @func_24205() /* ty=(Tensor[(1296), bool], Tensor[(264, 2), bool], Tensor[(528, 1), float32], uint8) */;
  %1362 = %1361.2;
  %1363 = cast(%1362, dtype="bool") /* ty=Tensor[(528, 1), bool] */;
  %1364 = cast(%var_24311, dtype="bool") /* ty=Tensor[(528, 13), bool] */;
  %1365 = less_equal(%1363, %1364) /* ty=Tensor[(528, 13), bool] */;
  %1366 = cast(%1365, dtype="float64") /* ty=Tensor[(528, 13), float64] */;
  %1367 = cast(%1362, dtype="float64") /* ty=Tensor[(528, 1), float64] */;
  %1368 = @func_18985() /* ty=(Tensor[(8, 8, 4), float64], Tensor[(1260), float32]) */;
  %1369 = power(%1366, %1367) /* ty=Tensor[(528, 13), float64] */;
  %1370 = %1368.0;
  (%1369, %1370)
}

def @func_17775() -> (Tensor[(256), float64], Tensor[(8, 8, 4), float64]) {
  %1375 = fn () -> (Tensor[(256), float64], Tensor[(8, 8, 4), float64]) {
    %1371 = @func_6366() /* ty=(Tensor[(1296), bool], Tensor[(8, 8, 4), int64], Tensor[(256), float64]) */;
    %1372 = @func_15578() /* ty=(Tensor[(8, 8, 4), float64], Tensor[(8, 8, 4), float64], Tensor[(8, 8, 4), uint8], uint8) */;
    %1373 = %1371.2;
    %1374 = %1372.1;
    (%1373, %1374)
  };
  %1375() /* ty=(Tensor[(256), float64], Tensor[(8, 8, 4), float64]) */
}

def @func_15674() -> Tensor[(1296), bool] {
  %1376 = @func_14720() /* ty=(Tensor[(8, 8, 4), float64], Tensor[(1296), float64], Tensor[(1296), bool], Tensor[(4, 5, 10), bool], Tensor[(200), bool], Tensor[(8, 8, 4), float64]) */;
  %1376.2
}

def @func_14113() -> Tensor[(1296), bool] {
  %1378 = fn () -> Tensor[(1296), bool] {
    %1377 = @func_8352() /* ty=(Tensor[(8, 8, 4), float64], Tensor[(1296), bool]) */;
    %1377.1
  };
  %1378() /* ty=Tensor[(1296), bool] */
}

def @func_11474() -> Tensor[(8, 8, 4), float64] {
  @func_11472() /* ty=Tensor[(8, 8, 4), float64] */
}

def @func_23502() -> (Tensor[(120), float64], Tensor[(8, 8, 4), float64]) {
  %1379 = @func_21565() /* ty=Tensor[(120), float64] */;
  %1380 = @func_8501() /* ty=Tensor[(8, 8, 4), float64] */;
  (%1379, %1380)
}

def @func_21213() -> uint8 {
  %1381 = @func_10684() /* ty=(uint8,) */;
  %1381.0
}

def @func_6257() -> (Tensor[(1296), float64],) {
  %1382 = @func_6176() /* ty=(Tensor[(8, 8, 4), float64], Tensor[(6, 7, 14), float64], Tensor[(588), uint8], Tensor[(8, 8, 4), float64], Tensor[(9, 12, 12), float32], Tensor[(1296), float64]) */;
  %1383 = %1382.5;
  (%1383,)
}

def @func_6003() -> (Tensor[(8, 8, 4), float64],) {
  @func_6001() /* ty=(Tensor[(8, 8, 4), float64],) */
}

def @func_24245() -> Tensor[(1296), bool] {
  @func_24243() /* ty=Tensor[(1296), bool] */
}

def @func_24059() -> Tensor[(1296), bool] {
  @func_24057() /* ty=Tensor[(1296), bool] */
}

def @func_15301() -> (Tensor[(8, 8, 4), float64],) {
  %1385 = fn () -> (Tensor[(8, 8, 4), float64],) {
    %1384 = @func_5688() /* ty=Tensor[(8, 8, 4), float64] */;
    (%1384,)
  };
  %1385() /* ty=(Tensor[(8, 8, 4), float64],) */
}

def @func_21853() -> (uint8, Tensor[(256), float64]) {
  %1389 = fn () -> (uint8, Tensor[(256), float64]) {
    %1386 = @func_19205() /* ty=(Tensor[(256), float64], Tensor[(8, 8, 4), float64]) */;
    %1387 = @func_18328() /* ty=uint8 */;
    %1388 = %1386.0;
    (%1387, %1388)
  };
  %1389() /* ty=(uint8, Tensor[(256), float64]) */
}

def @func_9113() -> (Tensor[(4, 7, 5), float32], Tensor[(2, 5, 12), bool], Tensor[(120), float64]) {
  @func_9111() /* ty=(Tensor[(4, 7, 5), float32], Tensor[(2, 5, 12), bool], Tensor[(120), float64]) */
}

def @func_19637() -> Tensor[(256), float64] {
  @func_19635() /* ty=Tensor[(256), float64] */
}

def @func_12531() -> (uint8,) {
  @func_12529() /* ty=(uint8,) */
}

def @func_26238() -> (uint8, Tensor[(1296), float64]) {
  %1393 = fn () -> (uint8, Tensor[(1296), float64]) {
    %1390 = @func_26072() /* ty=(uint8, Tensor[(8, 8, 4), float64], Tensor[(8, 8, 4), float64]) */;
    %1391 = %1390.0;
    %1392 = @func_13328() /* ty=Tensor[(1296), float64] */;
    (%1391, %1392)
  };
  %1393() /* ty=(uint8, Tensor[(1296), float64]) */
}

def @func_18401() -> Tensor[(8, 8, 4), float64] {
  %1394 = @func_5727() /* ty=(Tensor[(8, 8, 4), float64],) */;
  %1394.0
}

def @func_19635() -> Tensor[(256), float64] {
  %1395 = @func_14126() /* ty=(Tensor[(256), float64],) */;
  %1395.0
}

def @func_9953() -> (uint8,) {
  %1396 = @func_8420() /* ty=uint8 */;
  (%1396,)
}

def @func_21373(%var_21372: Tensor[(640), float64]) -> (Tensor[(8, 8, 4), int64], Tensor[(8, 8, 4), float64], Tensor[(14, 6, 15), float32], Tensor[(1440), uint16], Tensor[(24, 22), float32], Tensor[(640), float64], Tensor[(8, 8, 4), float64]) {
  %1412 = fn (%var_21358: Tensor[(640), float64]) -> (Tensor[(8, 8, 4), int64], Tensor[(8, 8, 4), float64], Tensor[(14, 6, 15), float32], Tensor[(1440), uint16], Tensor[(24, 22), float32], Tensor[(640), float64], Tensor[(8, 8, 4), float64]) {
    %1397 = @func_15472() /* ty=(Tensor[(8, 8, 4), float64], Tensor[(8, 8, 4), int64]) */;
    %1398 = cast(meta[relay.Constant][53] /* ty=Tensor[(1440), uint16] */, dtype="uint16") /* ty=Tensor[(1440), uint16] */;
    %1399 = cast(meta[relay.Constant][53] /* ty=Tensor[(1440), uint16] */, dtype="uint16") /* ty=Tensor[(1440), uint16] */;
    %1400 = cast(meta[relay.Constant][54] /* ty=Tensor[(24, 22), float32] */, dtype="float32") /* ty=Tensor[(24, 22), float32] */;
    %1401 = cast(%var_21358, dtype="float64") /* ty=Tensor[(640), float64] */;
    %1402 = reshape(%1398, newshape=[16, 15, 6]) /* ty=Tensor[(16, 15, 6), uint16] */;
    %1403 = reshape(%1399, newshape=[16, 15, 6]) /* ty=Tensor[(16, 15, 6), uint16] */;
    %1404 = reshape(%1400, newshape=[528]) /* ty=Tensor[(528), float32] */;
    %1405 = reshape(%1401, newshape=[640]) /* ty=Tensor[(640), float64] */;
    %1406 = @func_3760(%1402, %1403, %1404, %1405) /* ty=(Tensor[(16, 15, 6), uint16], Tensor[(528), float32], uint8, Tensor[(16, 15, 6), bool], Tensor[(16, 8, 5), float64], Tensor[(640), float64], Tensor[(14, 6, 15), float32], Tensor[(9, 12, 12), float32], Tensor[(1296), float64], Tensor[(1260), bool], Tensor[(3, 11, 16), float32]) */;
    %1407 = @func_10626() /* ty=(Tensor[(8, 8, 4), int64], Tensor[(8, 8, 4), float64]) */;
    %1408 = %1397.1;
    %1409 = @func_16986() /* ty=Tensor[(8, 8, 4), float64] */;
    %1410 = %1406.6;
    %1411 = %1407.1;
    (%1408, %1409, %1410, meta[relay.Constant][53] /* ty=Tensor[(1440), uint16] */, meta[relay.Constant][54] /* ty=Tensor[(24, 22), float32] */, %var_21358, %1411)
  };
  %1412(%var_21372) /* ty=(Tensor[(8, 8, 4), int64], Tensor[(8, 8, 4), float64], Tensor[(14, 6, 15), float32], Tensor[(1440), uint16], Tensor[(24, 22), float32], Tensor[(640), float64], Tensor[(8, 8, 4), float64]) */
}

def @func_9705() -> Tensor[(8, 8, 4), float64] {
  %1413 = @func_8261() /* ty=(Tensor[(8, 8, 4), float64], Tensor[(8, 8, 4), int64], Tensor[(8, 8, 4), float64]) */;
  %1413.0
}

def @func_16470() -> (Tensor[(1296), bool],) {
  %1416 = fn () -> (Tensor[(1296), bool],) {
    %1414 = @func_11429() /* ty=(Tensor[(1296), bool],) */;
    %1415 = %1414.0;
    (%1415,)
  };
  %1416() /* ty=(Tensor[(1296), bool],) */
}

def @func_24045() -> (Tensor[(8, 8, 4), float64],) {
  %1419 = fn () -> (Tensor[(8, 8, 4), float64],) {
    %1417 = @func_23253() /* ty=(uint8, Tensor[(8, 8, 4), float64], Tensor[(8, 8, 4), int64]) */;
    %1418 = %1417.1;
    (%1418,)
  };
  %1419() /* ty=(Tensor[(8, 8, 4), float64],) */
}

def @func_11747(%var_11745: Tensor[(256), float64]) -> (Tensor[(1296), float64], Tensor[(8, 8, 4), int32], Tensor[(256), float64]) {
  @func_11744(%var_11745) /* ty=(Tensor[(1296), float64], Tensor[(8, 8, 4), int32], Tensor[(256), float64]) */
}

def @func_23947() -> (Tensor[(8, 8, 4), float64],) {
  %1421 = fn () -> (Tensor[(8, 8, 4), float64],) {
    %1420 = @func_8829() /* ty=Tensor[(8, 8, 4), float64] */;
    (%1420,)
  };
  %1421() /* ty=(Tensor[(8, 8, 4), float64],) */
}

def @func_13632() -> Tensor[(8, 8, 4), float64] {
  %1422 = @func_9397() /* ty=(Tensor[(8, 8, 4), float64], Tensor[(16, 8, 5), float64], Tensor[(936, 1), uint8]) */;
  %1422.0
}

def @func_2231(%var_2230: Tensor[(13, 8, 9), uint8]) -> (Tensor[(13, 8, 9), bool], Tensor[(16, 8, 5), float64], Tensor[(640), float64]) {
  %1432 = fn (%var_2216: Tensor[(13, 8, 9), uint8]) -> (Tensor[(13, 8, 9), bool], Tensor[(16, 8, 5), float64], Tensor[(640), float64]) {
    %1423 = cast(meta[relay.Constant][55] /* ty=Tensor[(13, 8, 9), uint8] */, dtype="bool") /* ty=Tensor[(13, 8, 9), bool] */;
    %1424 = shape_of(%var_2216, dtype="int32") /* ty=Tensor[(3), int32] */;
    %1425 = cast(%var_2216, dtype="bool") /* ty=Tensor[(13, 8, 9), bool] */;
    %1426 = dyn.reshape(%1423, %1424, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    %1427 = cast(meta[relay.Constant][56] /* ty=Tensor[(640), float64] */, dtype="float64") /* ty=Tensor[(640), float64] */;
    %1428 = reshape(%1427, newshape=[16, 8, 5]) /* ty=Tensor[(16, 8, 5), float64] */;
    %1429 = @func_2187(%1428) /* ty=(Tensor[(16, 8, 5), float64],) */;
    %1430 = less_equal(%1425, %1426) /* ty=Tensor[(13, 8, 9), bool] */;
    %1431 = %1429.0;
    (%1430, %1431, meta[relay.Constant][56] /* ty=Tensor[(640), float64] */)
  };
  %1432(%var_2230) /* ty=(Tensor[(13, 8, 9), bool], Tensor[(16, 8, 5), float64], Tensor[(640), float64]) */
}

def @func_6610(%var_6603: Tensor[(264, 2), float32]) -> (Tensor[(8, 8, 4), float64], Tensor[(3, 11, 16), float32], Tensor[(264, 2), float32], uint8) {
  %1433 = @func_6018() /* ty=(Tensor[(8, 8, 4), float64],) */;
  %1434 = cast(%var_6603, dtype="float32") /* ty=Tensor[(264, 2), float32] */;
  %1435 = cast(meta[relay.Constant][57] /* ty=uint8 */, dtype="uint8") /* ty=uint8 */;
  %1436 = reshape(%1434, newshape=[3, 11, 16]) /* ty=Tensor[(3, 11, 16), float32] */;
  %1437 = reshape(%1435, newshape=[]) /* ty=uint8 */;
  %1438 = @func_2471(%1436, %1437) /* ty=(Tensor[(3, 11, 16), float32], Tensor[(14, 6, 15), float32], Tensor[(1260), float32], Tensor[(1260), float32], uint8, Tensor[(75), uint8], Tensor[(14, 6, 15), float32]) */;
  %1439 = %1433.0;
  %1440 = %1438.0;
  (%1439, %1440, %var_6603, meta[relay.Constant][57] /* ty=uint8 */)
}

def @func_14847() -> (Tensor[(8, 8, 4), float64],) {
  %1441 = @func_8936() /* ty=Tensor[(8, 8, 4), float64] */;
  (%1441,)
}

def @func_9760() -> (Tensor[(8, 8, 4), float64],) {
  %1444 = fn () -> (Tensor[(8, 8, 4), float64],) {
    %1442 = @func_6982() /* ty=(Tensor[(8, 8, 4), float64], Tensor[(8, 8, 4), float64]) */;
    %1443 = %1442.1;
    (%1443,)
  };
  %1444() /* ty=(Tensor[(8, 8, 4), float64],) */
}

def @func_6907() -> (Tensor[(8, 8, 4), float64], uint8, Tensor[(528), float32], uint8, Tensor[(8, 8, 4), float64]) {
  @func_6905() /* ty=(Tensor[(8, 8, 4), float64], uint8, Tensor[(528), float32], uint8, Tensor[(8, 8, 4), float64]) */
}

def @func_15579() -> (Tensor[(8, 8, 4), float64], Tensor[(8, 8, 4), float64], Tensor[(8, 8, 4), uint8], uint8) {
  %1450 = fn () -> (Tensor[(8, 8, 4), float64], Tensor[(8, 8, 4), float64], Tensor[(8, 8, 4), uint8], uint8) {
    %1445 = @func_15207() /* ty=(Tensor[(8, 8, 4), float64], Tensor[(8, 8, 4), uint8]) */;
    %1446 = @func_8298() /* ty=Tensor[(8, 8, 4), float64] */;
    %1447 = @func_12707() /* ty=Tensor[(8, 8, 4), float64] */;
    %1448 = %1445.1;
    %1449 = @func_8420() /* ty=uint8 */;
    (%1446, %1447, %1448, %1449)
  };
  %1450() /* ty=(Tensor[(8, 8, 4), float64], Tensor[(8, 8, 4), float64], Tensor[(8, 8, 4), uint8], uint8) */
}

def @func_26948() -> Tensor[(8, 8, 4), float64] {
  @func_26946() /* ty=Tensor[(8, 8, 4), float64] */
}

def @func_25319() -> (Tensor[(8, 8, 4), uint8],) {
  @func_25317() /* ty=(Tensor[(8, 8, 4), uint8],) */
}

def @func_8209(%var_8191: Tensor[(640), float64]) -> (Tensor[(8, 8, 4), float64], Tensor[(16, 8, 5), float64], Tensor[(640), float64]) {
  %1451 = @func_7955() /* ty=(Tensor[(8, 8, 4), float64],) */;
  %1452 = cast(%var_8191, dtype="float64") /* ty=Tensor[(640), float64] */;
  %1453 = reshape(%1452, newshape=[16, 8, 5]) /* ty=Tensor[(16, 8, 5), float64] */;
  %1454 = @func_2187(%1453) /* ty=(Tensor[(16, 8, 5), float64],) */;
  %1455 = %1451.0;
  %1456 = %1454.0;
  (%1455, %1456, %var_8191)
}

def @func_23855() -> (Tensor[(2, 4, 15), float32],) {
  @func_23853() /* ty=(Tensor[(2, 4, 15), float32],) */
}

def @func_23387() -> (Tensor[(8, 8, 4), float64], Tensor[(1296), float64], uint8) {
  %1457 = @func_21233() /* ty=(Tensor[(8, 8, 4), float64], Tensor[(8, 8, 4), float64]) */;
  %1458 = @func_9237() /* ty=(Tensor[(8, 8, 4), float64], Tensor[(1296), float64], Tensor[(1260), bool], Tensor[(528), float32]) */;
  %1459 = @func_21852() /* ty=(uint8, Tensor[(256), float64]) */;
  %1460 = %1457.1;
  %1461 = %1458.1;
  %1462 = %1459.0;
  (%1460, %1461, %1462)
}

def @func_25351() -> Tensor[(1296), bool] {
  @func_10439() /* ty=Tensor[(1296), bool] */
}

def @func_22381() -> Tensor[(8, 8, 4), float64] {
  @func_11472() /* ty=Tensor[(8, 8, 4), float64] */
}

def @func_24581(%var_24579: Tensor[(4, 4, 3), int16], %var_24580: Tensor[(5, 6), int64]) -> (Tensor[(4, 4, 3), int16], Tensor[(4, 4, 3), float64], Tensor[(4, 4, 3), float32], Tensor[(8, 8, 4), float64], Tensor[(5, 6), int64], Tensor[(528), float32]) {
  %1478 = fn (%var_24542: Tensor[(4, 4, 3), int16], %var_24564: Tensor[(5, 6), int64]) -> (Tensor[(4, 4, 3), int16], Tensor[(4, 4, 3), float64], Tensor[(4, 4, 3), float32], Tensor[(8, 8, 4), float64], Tensor[(5, 6), int64], Tensor[(528), float32]) {
    %1463 = cast(%var_24542, dtype="int16") /* ty=Tensor[(4, 4, 3), int16] */;
    %1464 = shape_of(meta[relay.Constant][58] /* ty=Tensor[(4, 4, 3), int16] */, dtype="int32") /* ty=Tensor[(3), int32] */;
    %1465 = cast(meta[relay.Constant][58] /* ty=Tensor[(4, 4, 3), int16] */, dtype="int16") /* ty=Tensor[(4, 4, 3), int16] */;
    %1466 = dyn.reshape(%1463, %1464, newshape=[]) /* ty=Tensor[(?, ?, ?), int16] */;
    %1467 = cast(meta[relay.Constant][58] /* ty=Tensor[(4, 4, 3), int16] */, dtype="float64") /* ty=Tensor[(4, 4, 3), float64] */;
    %1468 = cast(meta[relay.Constant][58] /* ty=Tensor[(4, 4, 3), int16] */, dtype="float32") /* ty=Tensor[(4, 4, 3), float32] */;
    %1469 = cast(%var_24564, dtype="int64") /* ty=Tensor[(5, 6), int64] */;
    %1470 = cast(meta[relay.Constant][59] /* ty=Tensor[(528), float32] */, dtype="float32") /* ty=Tensor[(528), float32] */;
    %1471 = reshape(%1469, newshape=[30]) /* ty=Tensor[(30), int64] */;
    %1472 = reshape(%1470, newshape=[528]) /* ty=Tensor[(528), float32] */;
    %1473 = @func_5932(%1471, %1472) /* ty=(Tensor[(8, 8, 4), float64], Tensor[(14, 2, 15), int64], Tensor[(30), int64], Tensor[(420), int64], Tensor[(8, 8, 4), bool], Tensor[(14, 6, 15), float32], Tensor[(528), float32], uint8) */;
    %1474 = right_shift(%1465, %1466) /* ty=Tensor[(4, 4, 3), int16] */;
    %1475 = acos(%1467) /* ty=Tensor[(4, 4, 3), float64] */;
    %1476 = atanh(%1468) /* ty=Tensor[(4, 4, 3), float32] */;
    %1477 = %1473.0;
    (%1474, %1475, %1476, %1477, %var_24564, meta[relay.Constant][59] /* ty=Tensor[(528), float32] */)
  };
  %1478(%var_24579, %var_24580) /* ty=(Tensor[(4, 4, 3), int16], Tensor[(4, 4, 3), float64], Tensor[(4, 4, 3), float32], Tensor[(8, 8, 4), float64], Tensor[(5, 6), int64], Tensor[(528), float32]) */
}

def @func_24467(%var_24465: Tensor[(528), float32]) -> (Tensor[(8, 8, 4), float64], Tensor[(120), float64], Tensor[(8, 8, 4), float64], Tensor[(640), float64], Tensor[(528), float32]) {
  @func_24464(%var_24465) /* ty=(Tensor[(8, 8, 4), float64], Tensor[(120), float64], Tensor[(8, 8, 4), float64], Tensor[(640), float64], Tensor[(528), float32]) */
}

def @func_22413(%var_22409: Tensor[(648, 2), bool]) -> (Tensor[(8, 8, 4), int32], Tensor[(8, 8, 4), float64], Tensor[(528, 1), float32], Tensor[(648, 2), bool]) {
  %1479 = cast(meta[relay.Constant][60] /* ty=Tensor[(528, 1), float32] */, dtype="float32") /* ty=Tensor[(528, 1), float32] */;
  %1480 = cast(%var_22409, dtype="bool") /* ty=Tensor[(648, 2), bool] */;
  %1481 = reshape(%1479, newshape=[528]) /* ty=Tensor[(528), float32] */;
  %1482 = reshape(%1480, newshape=[1296]) /* ty=Tensor[(1296), bool] */;
  %1483 = @func_12034(%1481, %1482) /* ty=(Tensor[(8, 8, 4), float64], Tensor[(8, 8, 4), float64], Tensor[(528), float32], Tensor[(1296), bool]) */;
  %1484 = @func_21157() /* ty=Tensor[(8, 8, 4), int32] */;
  %1485 = %1483.0;
  (%1484, %1485, meta[relay.Constant][60] /* ty=Tensor[(528, 1), float32] */, %var_22409)
}

def @func_14128() -> (Tensor[(256), float64],) {
  @func_14126() /* ty=(Tensor[(256), float64],) */
}

def @func_19386() -> (Tensor[(8, 8, 4), float64], Tensor[(528), float32], Tensor[(8, 8, 4), float64]) {
  @func_19384() /* ty=(Tensor[(8, 8, 4), float64], Tensor[(528), float32], Tensor[(8, 8, 4), float64]) */
}

def @func_25269() -> (Tensor[(8, 8, 4), float64],) {
  @func_25267() /* ty=(Tensor[(8, 8, 4), float64],) */
}

def @func_2943(%var_2927: Tensor[(1, 2, 15), int64], %var_2928: Tensor[(14, 2, 15), int64]) -> (Tensor[(14, 2, 15), int64],) {
  %1486 = cast(%var_2927, dtype="int64") /* ty=Tensor[(1, 2, 15), int64] */;
  %1487 = cast(%var_2928, dtype="int64") /* ty=Tensor[(14, 2, 15), int64] */;
  %1488 = bitwise_xor(%1486, %1487) /* ty=Tensor[(14, 2, 15), int64] */;
  (%1488,)
}

def @func_13898() -> (Tensor[(8, 8, 4), float64], Tensor[(8, 8, 4), int32]) {
  %1489 = @func_5468() /* ty=(Tensor[(8, 8, 4), float64],) */;
  %1490 = %1489.0;
  %1491 = cast(%1490, dtype="float64") /* ty=Tensor[(8, 8, 4), float64] */;
  %1492 = reshape(%1491, newshape=[256]) /* ty=Tensor[(256), float64] */;
  %1493 = @func_10085(%1492) /* ty=(Tensor[(1296), float64], Tensor[(1296), float64], Tensor[(8, 8, 4), int32], Tensor[(256), float64]) */;
  %1494 = %1493.2;
  (%1490, %1494)
}

def @func_6539() -> Tensor[(1296), bool] {
  %1496 = fn () -> Tensor[(1296), bool] {
    %1495 = @func_6366() /* ty=(Tensor[(1296), bool], Tensor[(8, 8, 4), int64], Tensor[(256), float64]) */;
    %1495.0
  };
  %1496() /* ty=Tensor[(1296), bool] */
}

def @func_26038() -> Tensor[(8, 8, 4), float64] {
  %1498 = fn () -> Tensor[(8, 8, 4), float64] {
    %1497 = @func_13110() /* ty=(Tensor[(8, 8, 4), int64], Tensor[(256), float64], Tensor[(1296), float64], Tensor[(8, 8, 4), float64]) */;
    %1497.3
  };
  %1498() /* ty=Tensor[(8, 8, 4), float64] */
}

def @func_5728() -> (Tensor[(8, 8, 4), float64],) {
  %1501 = fn () -> (Tensor[(8, 8, 4), float64],) {
    %1499 = @func_5468() /* ty=(Tensor[(8, 8, 4), float64],) */;
    %1500 = %1499.0;
    (%1500,)
  };
  %1501() /* ty=(Tensor[(8, 8, 4), float64],) */
}

def @func_23002() -> Tensor[(1296), float64] {
  @func_23000() /* ty=Tensor[(1296), float64] */
}

def @func_25782() -> (Tensor[(528, 1), float32],) {
  %1504 = fn () -> (Tensor[(528, 1), float32],) {
    %1502 = @func_24205() /* ty=(Tensor[(1296), bool], Tensor[(264, 2), bool], Tensor[(528, 1), float32], uint8) */;
    %1503 = %1502.2;
    (%1503,)
  };
  %1504() /* ty=(Tensor[(528, 1), float32],) */
}

def @func_26572(%var_26570: Tensor[(768), float32], %var_26571: Tensor[(1296), float64]) -> (Tensor[(8, 8, 4), float64], Tensor[(16, 12, 4), float32], Tensor[(768), float32], Tensor[(1296), float32], Tensor[(1296), float64]) {
  %1512 = fn (%var_26562: Tensor[(768), float32], %var_26566: Tensor[(1296), float64]) -> (Tensor[(8, 8, 4), float64], Tensor[(16, 12, 4), float32], Tensor[(768), float32], Tensor[(1296), float32], Tensor[(1296), float64]) {
    %1505 = cast(%var_26562, dtype="float32") /* ty=Tensor[(768), float32] */;
    %1506 = reshape(%1505, newshape=[16, 12, 4]) /* ty=Tensor[(16, 12, 4), float32] */;
    %1507 = cast(%var_26566, dtype="float64") /* ty=Tensor[(1296), float64] */;
    %1508 = reshape(%1507, newshape=[1296]) /* ty=Tensor[(1296), float64] */;
    %1509 = @func_11472() /* ty=Tensor[(8, 8, 4), float64] */;
    %1510 = @func_23662(%1506) /* ty=Tensor[(16, 12, 4), float32] */;
    %1511 = @func_12149(%1508) /* ty=Tensor[(1296), float32] */;
    (%1509, %1510, %var_26562, %1511, %var_26566)
  };
  %1512(%var_26570, %var_26571) /* ty=(Tensor[(8, 8, 4), float64], Tensor[(16, 12, 4), float32], Tensor[(768), float32], Tensor[(1296), float32], Tensor[(1296), float64]) */
}

def @func_12782(%var_12781: Tensor[(7, 4, 6), int8]) -> (Tensor[(7, 4, 6), int8], Tensor[(14, 6, 15), float32], Tensor[(1155), int8], Tensor[(1260), float32]) {
  %1524 = fn (%var_12761: Tensor[(7, 4, 6), int8]) -> (Tensor[(7, 4, 6), int8], Tensor[(14, 6, 15), float32], Tensor[(1155), int8], Tensor[(1260), float32]) {
    %1513 = cast(%var_12761, dtype="int8") /* ty=Tensor[(7, 4, 6), int8] */;
    %1514 = shape_of(meta[relay.Constant][61] /* ty=Tensor[(7, 4, 6), int8] */, dtype="int32") /* ty=Tensor[(3), int32] */;
    %1515 = cast(meta[relay.Constant][61] /* ty=Tensor[(7, 4, 6), int8] */, dtype="int8") /* ty=Tensor[(7, 4, 6), int8] */;
    %1516 = dyn.reshape(%1513, %1514, newshape=[]) /* ty=Tensor[(?, ?, ?), int8] */;
    %1517 = cast(meta[relay.Constant][62] /* ty=Tensor[(1155), int8] */, dtype="int8") /* ty=Tensor[(1155), int8] */;
    %1518 = cast(meta[relay.Constant][63] /* ty=Tensor[(1260), float32] */, dtype="float32") /* ty=Tensor[(1260), float32] */;
    %1519 = reshape(%1517, newshape=[7, 11, 15]) /* ty=Tensor[(7, 11, 15), int8] */;
    %1520 = reshape(%1518, newshape=[1260]) /* ty=Tensor[(1260), float32] */;
    %1521 = @func_4660(%1519, %1520) /* ty=(Tensor[(7, 11, 15), bool], Tensor[(14, 6, 15), float32], Tensor[(1260), float32]) */;
    %1522 = multiply(%1515, %1516) /* ty=Tensor[(7, 4, 6), int8] */;
    %1523 = %1521.1;
    (%1522, %1523, meta[relay.Constant][62] /* ty=Tensor[(1155), int8] */, meta[relay.Constant][63] /* ty=Tensor[(1260), float32] */)
  };
  %1524(%var_12781) /* ty=(Tensor[(7, 4, 6), int8], Tensor[(14, 6, 15), float32], Tensor[(1155), int8], Tensor[(1260), float32]) */
}

def @func_22878() -> Tensor[(8, 8, 4), float64] {
  %1525 = @func_19205() /* ty=(Tensor[(256), float64], Tensor[(8, 8, 4), float64]) */;
  %1525.1
}

def @func_25301(%var_25299: Tensor[(1260), float32]) -> (Tensor[(1296), bool], Tensor[(30), float32], Tensor[(1155), int8], Tensor[(1260), float32]) {
  @func_25298(%var_25299) /* ty=(Tensor[(1296), bool], Tensor[(30), float32], Tensor[(1155), int8], Tensor[(1260), float32]) */
}

def @func_13419() -> (Tensor[(9, 12, 12), float32], Tensor[(256), float64]) {
  %1526 = @func_6176() /* ty=(Tensor[(8, 8, 4), float64], Tensor[(6, 7, 14), float64], Tensor[(588), uint8], Tensor[(8, 8, 4), float64], Tensor[(9, 12, 12), float32], Tensor[(1296), float64]) */;
  %1527 = %1526.4;
  %1528 = cast(%1527, dtype="float32") /* ty=Tensor[(9, 12, 12), float32] */;
  %1529 = @func_7364() /* ty=(Tensor[(8, 8, 4), int64], Tensor[(256), float64]) */;
  %1530 = sqrt(%1528) /* ty=Tensor[(9, 12, 12), float32] */;
  %1531 = %1529.1;
  (%1530, %1531)
}

def @func_26244() -> Tensor[(8, 8, 4), float64] {
  %1532 = @func_7292() /* ty=(Tensor[(8, 8, 4), float64],) */;
  %1532.0
}

def @func_20202() -> (Tensor[(2, 4, 15), float32],) {
  %1533 = cast(meta[relay.Constant][64] /* ty=Tensor[(2, 4, 15), float64] */, dtype="float64") /* ty=Tensor[(2, 4, 15), float64] */;
  %1534 = rsqrt(%1533) /* ty=Tensor[(2, 4, 15), float64] */;
  %1535 = cast(meta[relay.Constant][64] /* ty=Tensor[(2, 4, 15), float64] */, dtype="float32") /* ty=Tensor[(2, 4, 15), float32] */;
  %1536 = shape_of(%1534, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1537 = cast(%1534, dtype="float32") /* ty=Tensor[(2, 4, 15), float32] */;
  %1538 = dyn.reshape(%1535, %1536, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %1539 = divide(%1537, %1538) /* ty=Tensor[(2, 4, 15), float32] */;
  (%1539,)
}

def @func_21158() -> Tensor[(8, 8, 4), int32] {
  %1541 = fn () -> Tensor[(8, 8, 4), int32] {
    %1540 = @func_13898() /* ty=(Tensor[(8, 8, 4), float64], Tensor[(8, 8, 4), int32]) */;
    %1540.1
  };
  %1541() /* ty=Tensor[(8, 8, 4), int32] */
}

def @func_10085(%var_10080: Tensor[(256), float64]) -> (Tensor[(1296), float64], Tensor[(1296), float64], Tensor[(8, 8, 4), int32], Tensor[(256), float64]) {
  %1542 = @func_9648() /* ty=(Tensor[(1296), float64],) */;
  %1543 = @func_9648() /* ty=(Tensor[(1296), float64],) */;
  %1544 = cast(%var_10080, dtype="float64") /* ty=Tensor[(256), float64] */;
  %1545 = reshape(%1544, newshape=[8, 8, 4]) /* ty=Tensor[(8, 8, 4), float64] */;
  %1546 = %1542.0;
  %1547 = %1543.0;
  %1548 = @func_6833(%1545) /* ty=Tensor[(8, 8, 4), int32] */;
  (%1546, %1547, %1548, %var_10080)
}

def @func_8809() -> (Tensor[(1296), bool],) {
  %1549 = @func_8448() /* ty=(Tensor[(1296), bool], Tensor[(1296), bool]) */;
  %1550 = %1549.1;
  (%1550,)
}

def @func_5690() -> Tensor[(8, 8, 4), float64] {
  @func_5688() /* ty=Tensor[(8, 8, 4), float64] */
}

def @func_8420() -> uint8 {
  %1551 = @func_6905() /* ty=(Tensor[(8, 8, 4), float64], uint8, Tensor[(528), float32], uint8, Tensor[(8, 8, 4), float64]) */;
  %1551.1
}

def @func_8961(%var_8960: Tensor[(120), float64]) -> (Tensor[(528), float32], Tensor[(2, 5, 12), bool], Tensor[(120), float64], Tensor[(2, 5, 12), bool]) {
  %1566 = fn (%var_8943: Tensor[(120), float64]) -> (Tensor[(528), float32], Tensor[(2, 5, 12), bool], Tensor[(120), float64], Tensor[(2, 5, 12), bool]) {
    %1552 = @func_6905() /* ty=(Tensor[(8, 8, 4), float64], uint8, Tensor[(528), float32], uint8, Tensor[(8, 8, 4), float64]) */;
    %1553 = cast(%var_8943, dtype="float64") /* ty=Tensor[(120), float64] */;
    %1554 = cast(%var_8943, dtype="float64") /* ty=Tensor[(120), float64] */;
    %1555 = reshape(%1553, newshape=[2, 5, 12]) /* ty=Tensor[(2, 5, 12), float64] */;
    %1556 = reshape(%1554, newshape=[2, 5, 12]) /* ty=Tensor[(2, 5, 12), float64] */;
    %1557 = @func_8852(%1555, %1556) /* ty=(Tensor[(2, 5, 12), bool],) */;
    %1558 = cast(%var_8943, dtype="float64") /* ty=Tensor[(120), float64] */;
    %1559 = %1557.0;
    %1560 = cast(%1559, dtype="float64") /* ty=Tensor[(2, 5, 12), float64] */;
    %1561 = reshape(%1558, newshape=[2, 5, 12]) /* ty=Tensor[(2, 5, 12), float64] */;
    %1562 = reshape(%1560, newshape=[2, 5, 12]) /* ty=Tensor[(2, 5, 12), float64] */;
    %1563 = @func_8852(%1561, %1562) /* ty=(Tensor[(2, 5, 12), bool],) */;
    %1564 = %1552.2;
    %1565 = %1563.0;
    (%1564, %1559, %var_8943, %1565)
  };
  %1566(%var_8960) /* ty=(Tensor[(528), float32], Tensor[(2, 5, 12), bool], Tensor[(120), float64], Tensor[(2, 5, 12), bool]) */
}

def @func_23544() -> (Tensor[(1296), bool],) {
  %1567 = @func_6538() /* ty=Tensor[(1296), bool] */;
  (%1567,)
}

def @func_20007() -> (Tensor[(8, 8, 4), float64], Tensor[(8, 8, 4), float64]) {
  %1568 = @func_16635() /* ty=(uint8, Tensor[(8, 8, 4), float64], Tensor[(8, 8, 4), float64]) */;
  %1569 = %1568.2;
  %1570 = @func_13487() /* ty=Tensor[(8, 8, 4), float64] */;
  (%1569, %1570)
}

def @func_14975() -> Tensor[(8, 8, 4), float64] {
  @func_14973() /* ty=Tensor[(8, 8, 4), float64] */
}

def @func_9618() -> Tensor[(120), float64] {
  %1571 = @func_9111() /* ty=(Tensor[(4, 7, 5), float32], Tensor[(2, 5, 12), bool], Tensor[(120), float64]) */;
  %1571.2
}

def @func_3766(%var_3762: Tensor[(16, 15, 6), uint16], %var_3763: Tensor[(16, 15, 6), uint16], %var_3764: Tensor[(528), float32], %var_3765: Tensor[(640), float64]) -> (Tensor[(16, 15, 6), uint16], Tensor[(528), float32], uint8, Tensor[(16, 15, 6), bool], Tensor[(16, 8, 5), float64], Tensor[(640), float64], Tensor[(14, 6, 15), float32], Tensor[(9, 12, 12), float32], Tensor[(1296), float64], Tensor[(1260), bool], Tensor[(3, 11, 16), float32]) {
  @func_3760(%var_3762, %var_3763, %var_3764, %var_3765) /* ty=(Tensor[(16, 15, 6), uint16], Tensor[(528), float32], uint8, Tensor[(16, 15, 6), bool], Tensor[(16, 8, 5), float64], Tensor[(640), float64], Tensor[(14, 6, 15), float32], Tensor[(9, 12, 12), float32], Tensor[(1296), float64], Tensor[(1260), bool], Tensor[(3, 11, 16), float32]) */
}

def @func_19887() -> (Tensor[(1296), float64],) {
  %1574 = fn () -> (Tensor[(1296), float64],) {
    %1572 = @func_18549() /* ty=(Tensor[(1296), float64],) */;
    %1573 = %1572.0;
    (%1573,)
  };
  %1574() /* ty=(Tensor[(1296), float64],) */
}

def @func_6575(%var_6569: Tensor[(1296), float64]) -> (Tensor[(8, 8, 4), float64], Tensor[(9, 12, 12), float32], Tensor[(1296), float64], Tensor[(6, 7, 14), float64], Tensor[(14, 42), uint8]) {
  %1575 = cast(%var_6569, dtype="float64") /* ty=Tensor[(1296), float64] */;
  %1576 = reshape(%1575, newshape=[9, 12, 12]) /* ty=Tensor[(9, 12, 12), float64] */;
  %1577 = cast(meta[relay.Constant][65] /* ty=Tensor[(14, 42), uint8] */, dtype="uint8") /* ty=Tensor[(14, 42), uint8] */;
  %1578 = reshape(%1577, newshape=[6, 7, 14]) /* ty=Tensor[(6, 7, 14), uint8] */;
  %1579 = @func_4543(%1578) /* ty=(Tensor[(6, 7, 14), float64],) */;
  %1580 = @func_5688() /* ty=Tensor[(8, 8, 4), float64] */;
  %1581 = @func_2887(%1576) /* ty=Tensor[(9, 12, 12), float32] */;
  %1582 = %1579.0;
  (%1580, %1581, %var_6569, %1582, meta[relay.Constant][65] /* ty=Tensor[(14, 42), uint8] */)
}

def @func_18403() -> Tensor[(8, 8, 4), float64] {
  @func_18401() /* ty=Tensor[(8, 8, 4), float64] */
}

def @func_17843() -> (Tensor[(9, 12, 12), float32], Tensor[(8, 8, 4), float64], uint8) {
  %1591 = fn () -> (Tensor[(9, 12, 12), float32], Tensor[(8, 8, 4), float64], uint8) {
    %1583 = @func_13762() /* ty=(Tensor[(9, 12, 12), float32], Tensor[(9, 12, 12), float32]) */;
    %1584 = %1583.0;
    %1585 = cast(%1584, dtype="float32") /* ty=Tensor[(9, 12, 12), float32] */;
    %1586 = cast(meta[relay.Constant][66] /* ty=uint8 */, dtype="uint8") /* ty=uint8 */;
    %1587 = reshape(%1586, newshape=[]) /* ty=uint8 */;
    %1588 = @func_12417(%1587) /* ty=(Tensor[(8, 8, 4), float64], Tensor[(75), uint8], Tensor[(4, 132), float32], uint8) */;
    %1589 = acosh(%1585) /* ty=Tensor[(9, 12, 12), float32] */;
    %1590 = %1588.0;
    (%1589, %1590, meta[relay.Constant][66] /* ty=uint8 */)
  };
  %1591() /* ty=(Tensor[(9, 12, 12), float32], Tensor[(8, 8, 4), float64], uint8) */
}

def @func_16717() -> (Tensor[(8, 8, 4), float64], Tensor[(1296), float64]) {
  %1592 = @func_12860() /* ty=(Tensor[(8, 8, 4), float64],) */;
  %1593 = %1592.0;
  %1594 = @func_13328() /* ty=Tensor[(1296), float64] */;
  (%1593, %1594)
}

def @func_16045() -> (Tensor[(8, 8, 4), float64],) {
  @func_16043() /* ty=(Tensor[(8, 8, 4), float64],) */
}

def @func_15070() -> (Tensor[(256), float64], Tensor[(8, 8, 4), float64], Tensor[(1296), float64]) {
  %1600 = fn () -> (Tensor[(256), float64], Tensor[(8, 8, 4), float64], Tensor[(1296), float64]) {
    %1595 = @func_10031() /* ty=(Tensor[(256), float64], Tensor[(1296), float64]) */;
    %1596 = @func_9094() /* ty=(Tensor[(1296), float64],) */;
    %1597 = %1595.0;
    %1598 = @func_7342() /* ty=Tensor[(8, 8, 4), float64] */;
    %1599 = %1596.0;
    (%1597, %1598, %1599)
  };
  %1600() /* ty=(Tensor[(256), float64], Tensor[(8, 8, 4), float64], Tensor[(1296), float64]) */
}

def @func_25036() -> Tensor[(8, 8, 4), float64] {
  %1601 = @func_22657() /* ty=(Tensor[(8, 8, 4), float64],) */;
  %1601.0
}

def @func_9237() -> (Tensor[(8, 8, 4), float64], Tensor[(1296), float64], Tensor[(1260), bool], Tensor[(528), float32]) {
  %1602 = @func_7595() /* ty=(Tensor[(1296), float64], Tensor[(8, 8, 4), float64], Tensor[(8, 8, 4), uint8]) */;
  %1603 = cast(meta[relay.Constant][67] /* ty=Tensor[(528), float32] */, dtype="float32") /* ty=Tensor[(528), float32] */;
  %1604 = reshape(%1603, newshape=[528, 1]) /* ty=Tensor[(528, 1), float32] */;
  %1605 = @func_7484(%1604) /* ty=(Tensor[(8, 8, 4), float64], Tensor[(1260), bool], Tensor[(1440), uint16], Tensor[(528, 1), float32], Tensor[(640), float64], Tensor[(14, 6, 15), float32]) */;
  %1606 = @func_6042() /* ty=Tensor[(8, 8, 4), float64] */;
  %1607 = %1602.0;
  %1608 = %1605.1;
  (%1606, %1607, %1608, meta[relay.Constant][67] /* ty=Tensor[(528), float32] */)
}

def @func_25561(%var_25559: Tensor[(6864), float32]) -> (Tensor[(8, 8, 4), float64], Tensor[(8, 8, 4), float64], Tensor[(6864), float32], uint8) {
  @func_25558(%var_25559) /* ty=(Tensor[(8, 8, 4), float64], Tensor[(8, 8, 4), float64], Tensor[(6864), float32], uint8) */
}

def @func_26504() -> (Tensor[(8, 8, 4), float64],) {
  %1611 = fn () -> (Tensor[(8, 8, 4), float64],) {
    %1609 = @func_22241() /* ty=(Tensor[(8, 8, 4), float64],) */;
    %1610 = %1609.0;
    (%1610,)
  };
  %1611() /* ty=(Tensor[(8, 8, 4), float64],) */
}

def @func_16790(%var_16777: uint8) -> (Tensor[(8, 8, 4), float64], Tensor[(14, 6, 15), float32], uint8, Tensor[(1, 528), float32]) {
  %1612 = @func_7292() /* ty=(Tensor[(8, 8, 4), float64],) */;
  %1613 = cast(meta[relay.Constant][68] /* ty=Tensor[(1, 528), float32] */, dtype="float32") /* ty=Tensor[(1, 528), float32] */;
  %1614 = cast(%var_16777, dtype="uint8") /* ty=uint8 */;
  %1615 = reshape(%1613, newshape=[3, 11, 16]) /* ty=Tensor[(3, 11, 16), float32] */;
  %1616 = reshape(%1614, newshape=[]) /* ty=uint8 */;
  %1617 = @func_2471(%1615, %1616) /* ty=(Tensor[(3, 11, 16), float32], Tensor[(14, 6, 15), float32], Tensor[(1260), float32], Tensor[(1260), float32], uint8, Tensor[(75), uint8], Tensor[(14, 6, 15), float32]) */;
  %1618 = cast(meta[relay.Constant][68] /* ty=Tensor[(1, 528), float32] */, dtype="float32") /* ty=Tensor[(1, 528), float32] */;
  %1619 = %1612.0;
  %1620 = %1617.1;
  %1621 = sigmoid(%1618) /* ty=Tensor[(1, 528), float32] */;
  (%1619, %1620, %var_16777, %1621)
}

def @func_15518() -> (Tensor[(8, 8, 4), float64], Tensor[(1296), float64]) {
  %1626 = fn () -> (Tensor[(8, 8, 4), float64], Tensor[(1296), float64]) {
    %1622 = @func_9677() /* ty=(Tensor[(8, 8, 4), float64], Tensor[(8, 8, 4), float64]) */;
    %1623 = @func_6176() /* ty=(Tensor[(8, 8, 4), float64], Tensor[(6, 7, 14), float64], Tensor[(588), uint8], Tensor[(8, 8, 4), float64], Tensor[(9, 12, 12), float32], Tensor[(1296), float64]) */;
    %1624 = %1622.0;
    %1625 = %1623.5;
    (%1624, %1625)
  };
  %1626() /* ty=(Tensor[(8, 8, 4), float64], Tensor[(1296), float64]) */
}

def @func_15342() -> Tensor[(8, 8, 4), float64] {
  @func_15340() /* ty=Tensor[(8, 8, 4), float64] */
}

def @func_8830() -> Tensor[(8, 8, 4), float64] {
  %1628 = fn () -> Tensor[(8, 8, 4), float64] {
    %1627 = @func_7099() /* ty=(Tensor[(8, 8, 4), float64],) */;
    %1627.0
  };
  %1628() /* ty=Tensor[(8, 8, 4), float64] */
}

def @func_15986() -> (Tensor[(8, 8, 4), float64],) {
  %1629 = @func_14973() /* ty=Tensor[(8, 8, 4), float64] */;
  (%1629,)
}

def @func_14412() -> (Tensor[(8, 8, 4), float64],) {
  @func_14410() /* ty=(Tensor[(8, 8, 4), float64],) */
}

def @func_20204() -> (Tensor[(2, 4, 15), float32],) {
  @func_20202() /* ty=(Tensor[(2, 4, 15), float32],) */
}

def @func_24857() -> (Tensor[(8, 8, 4), float64], Tensor[(8, 8, 4), float64], Tensor[(8, 8, 4), int32]) {
  %1630 = @func_17774() /* ty=(Tensor[(256), float64], Tensor[(8, 8, 4), float64]) */;
  %1631 = %1630.1;
  %1632 = @func_22878() /* ty=Tensor[(8, 8, 4), float64] */;
  %1633 = @func_21157() /* ty=Tensor[(8, 8, 4), int32] */;
  (%1631, %1632, %1633)
}

def @func_6452() -> Tensor[(8, 8, 4), float64] {
  @func_5807() /* ty=Tensor[(8, 8, 4), float64] */
}

def @func_11953(%var_11942: float32, %var_11943: Tensor[(432), float32]) -> (Tensor[(8, 8, 4), float64], Tensor[(9, 4, 12), bool], float32, Tensor[(432), float32]) {
  %1634 = @func_9397() /* ty=(Tensor[(8, 8, 4), float64], Tensor[(16, 8, 5), float64], Tensor[(936, 1), uint8]) */;
  %1635 = cast(%var_11942, dtype="float32") /* ty=float32 */;
  %1636 = cast(%var_11943, dtype="float32") /* ty=Tensor[(432), float32] */;
  %1637 = cast(%var_11943, dtype="float32") /* ty=Tensor[(432), float32] */;
  %1638 = reshape(%1635, newshape=[]) /* ty=float32 */;
  %1639 = reshape(%1636, newshape=[9, 4, 12]) /* ty=Tensor[(9, 4, 12), float32] */;
  %1640 = reshape(%1637, newshape=[9, 4, 12]) /* ty=Tensor[(9, 4, 12), float32] */;
  %1641 = @func_7803(%1638, %1639, %1640) /* ty=(Tensor[(9, 4, 12), bool],) */;
  %1642 = %1634.0;
  %1643 = %1641.0;
  (%1642, %1643, %var_11942, %var_11943)
}

def @func_26441() -> (Tensor[(1296), bool], Tensor[(256), float64]) {
  %1648 = fn () -> (Tensor[(1296), bool], Tensor[(256), float64]) {
    %1644 = @func_16012() /* ty=(Tensor[(1296), bool], Tensor[(8, 8, 4), float64]) */;
    %1645 = @func_26273() /* ty=(Tensor[(120), float64], Tensor[(8, 8, 4), float64], Tensor[(256), float64]) */;
    %1646 = %1644.0;
    %1647 = %1645.2;
    (%1646, %1647)
  };
  %1648() /* ty=(Tensor[(1296), bool], Tensor[(256), float64]) */
}

def @func_26856() -> (Tensor[(8, 8, 4), float64], Tensor[(256), float64], Tensor[(8, 8, 4), float64]) {
  %1649 = @func_17644() /* ty=(Tensor[(8, 8, 4), float64],) */;
  %1650 = @func_26672() /* ty=(Tensor[(256), float64], Tensor[(1296), float64], Tensor[(8, 8, 4), float64]) */;
  %1651 = %1649.0;
  %1652 = %1650.0;
  %1653 = @func_8829() /* ty=Tensor[(8, 8, 4), float64] */;
  (%1651, %1652, %1653)
}

def @func_14444() -> Tensor[(8, 8, 4), float64] {
  %1654 = @func_8745() /* ty=(Tensor[(8, 8, 4), float64], Tensor[(8, 8, 4), float64]) */;
  %1654.1
}

def @func_21604(%var_21602: Tensor[(77, 4), uint64]) -> (Tensor[(8, 8, 4), float64], Tensor[(2, 14, 11), uint64], Tensor[(77, 4), uint64]) {
  @func_21601(%var_21602) /* ty=(Tensor[(8, 8, 4), float64], Tensor[(2, 14, 11), uint64], Tensor[(77, 4), uint64]) */
}

def @func_25825() -> (Tensor[(8, 8, 4), float64],) {
  %1656 = fn () -> (Tensor[(8, 8, 4), float64],) {
    %1655 = @func_22913() /* ty=Tensor[(8, 8, 4), float64] */;
    (%1655,)
  };
  %1656() /* ty=(Tensor[(8, 8, 4), float64],) */
}

def @func_12149(%var_12119: Tensor[(1296), float64]) -> Tensor[(1296), float32] {
  %1657 = @func_6295() /* ty=Tensor[(1296), float64] */;
  %1658 = cast(%var_12119, dtype="float32") /* ty=Tensor[(1296), float32] */;
  %1659 = shape_of(%1657, dtype="int32") /* ty=Tensor[(1), int32] */;
  %1660 = cast(%1657, dtype="float32") /* ty=Tensor[(1296), float32] */;
  %1661 = dyn.reshape(%1658, %1659, newshape=[]) /* ty=Tensor[(?), float32] */;
  divide(%1660, %1661) /* ty=Tensor[(1296), float32] */
}

def @func_10991(%var_10988: Tensor[(1155), int8], %var_10989: Tensor[(1, 1260), float32], %var_10990: Tensor[(1296), bool]) -> (Tensor[(8, 8, 4), int64], Tensor[(30), float32], Tensor[(1155), int8], Tensor[(1, 1260), float32], Tensor[(1296), uint64]) {
  %1676 = fn (%var_10969: Tensor[(1155), int8], %var_10970: Tensor[(1, 1260), float32], %var_10978: Tensor[(1296), bool]) -> (Tensor[(8, 8, 4), int64], Tensor[(30), float32], Tensor[(1155), int8], Tensor[(1, 1260), float32], Tensor[(1296), uint64]) {
    %1662 = cast(meta[relay.Constant][69] /* ty=Tensor[(30), float32] */, dtype="float32") /* ty=Tensor[(30), float32] */;
    %1663 = cast(%var_10969, dtype="int8") /* ty=Tensor[(1155), int8] */;
    %1664 = cast(%var_10970, dtype="float32") /* ty=Tensor[(1, 1260), float32] */;
    %1665 = reshape(%1662, newshape=[5, 2, 3]) /* ty=Tensor[(5, 2, 3), float32] */;
    %1666 = reshape(%1663, newshape=[1155, 1]) /* ty=Tensor[(1155, 1), int8] */;
    %1667 = reshape(%1664, newshape=[1260]) /* ty=Tensor[(1260), float32] */;
    %1668 = @func_7573(%1665, %1666, %1667) /* ty=(Tensor[(8, 8, 4), float64], Tensor[(5, 2, 3), float32], Tensor[(8, 8, 4), int64], Tensor[(8, 8, 4), float64], Tensor[(14, 6, 15), float32], Tensor[(1155, 1), int8], Tensor[(1260), float32], Tensor[(8, 8, 4), float64]) */;
    %1669 = @func_10439() /* ty=Tensor[(1296), bool] */;
    %1670 = cast(%var_10978, dtype="uint64") /* ty=Tensor[(1296), uint64] */;
    %1671 = shape_of(%1669, dtype="int32") /* ty=Tensor[(1), int32] */;
    %1672 = cast(%1669, dtype="uint64") /* ty=Tensor[(1296), uint64] */;
    %1673 = dyn.reshape(%1670, %1671, newshape=[]) /* ty=Tensor[(?), uint64] */;
    %1674 = %1668.2;
    %1675 = add(%1672, %1673) /* ty=Tensor[(1296), uint64] */;
    (%1674, meta[relay.Constant][69] /* ty=Tensor[(30), float32] */, %var_10969, %var_10970, %1675)
  };
  %1676(%var_10988, %var_10989, %var_10990) /* ty=(Tensor[(8, 8, 4), int64], Tensor[(30), float32], Tensor[(1155), int8], Tensor[(1, 1260), float32], Tensor[(1296), uint64]) */
}

def @func_12185() -> (Tensor[(8, 8, 4), float64],) {
  %1677 = @func_7342() /* ty=Tensor[(8, 8, 4), float64] */;
  (%1677,)
}

def @func_24357(%var_24355: Tensor[(528, 13), float32]) -> (Tensor[(528, 13), float64], Tensor[(8, 8, 4), float64]) {
  @func_24354(%var_24355) /* ty=(Tensor[(528, 13), float64], Tensor[(8, 8, 4), float64]) */
}

def @func_21567() -> Tensor[(120), float64] {
  @func_21565() /* ty=Tensor[(120), float64] */
}

def @func_15676() -> Tensor[(1296), bool] {
  @func_15674() /* ty=Tensor[(1296), bool] */
}

def @func_22055() -> (Tensor[(1296), bool], Tensor[(256), float64]) {
  @func_22053() /* ty=(Tensor[(1296), bool], Tensor[(256), float64]) */
}

def @func_22880() -> Tensor[(8, 8, 4), float64] {
  @func_22878() /* ty=Tensor[(8, 8, 4), float64] */
}

def @func_9094() -> (Tensor[(1296), float64],) {
  %1678 = @func_6295() /* ty=Tensor[(1296), float64] */;
  (%1678,)
}

def @func_8852(%var_8845: Tensor[(2, 5, 12), float64], %var_8846: Tensor[(2, 5, 12), float64]) -> (Tensor[(2, 5, 12), bool],) {
  %1679 = cast(%var_8846, dtype="bool") /* ty=Tensor[(2, 5, 12), bool] */;
  %1680 = shape_of(%var_8845, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1681 = cast(%var_8845, dtype="bool") /* ty=Tensor[(2, 5, 12), bool] */;
  %1682 = dyn.reshape(%1679, %1680, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %1683 = greater_equal(%1681, %1682) /* ty=Tensor[(2, 5, 12), bool] */;
  (%1683,)
}

def @func_21883() -> (Tensor[(8, 8, 4), float64], Tensor[(1296), bool]) {
  %1688 = fn () -> (Tensor[(8, 8, 4), float64], Tensor[(1296), bool]) {
    %1684 = @func_15300() /* ty=(Tensor[(8, 8, 4), float64],) */;
    %1685 = @func_20988() /* ty=(Tensor[(1296), float64], Tensor[(1296), bool], uint8) */;
    %1686 = %1684.0;
    %1687 = %1685.1;
    (%1686, %1687)
  };
  %1688() /* ty=(Tensor[(8, 8, 4), float64], Tensor[(1296), bool]) */
}

def @func_23000() -> Tensor[(1296), float64] {
  %1689 = @func_16717() /* ty=(Tensor[(8, 8, 4), float64], Tensor[(1296), float64]) */;
  %1689.1
}

def @func_6613(%var_6611: Tensor[(264, 2), float32]) -> (Tensor[(8, 8, 4), float64], Tensor[(3, 11, 16), float32], Tensor[(264, 2), float32], uint8) {
  @func_6610(%var_6611) /* ty=(Tensor[(8, 8, 4), float64], Tensor[(3, 11, 16), float32], Tensor[(264, 2), float32], uint8) */
}

def @func_17073() -> Tensor[(256), float64] {
  @func_17071() /* ty=Tensor[(256), float64] */
}

def @func_9397() -> (Tensor[(8, 8, 4), float64], Tensor[(16, 8, 5), float64], Tensor[(936, 1), uint8]) {
  %1690 = @func_9275() /* ty=(Tensor[(8, 8, 4), float64], Tensor[(1260), float32], Tensor[(1155), int8], Tensor[(1260), float32], Tensor[(8, 8, 4), float64], Tensor[(8, 8, 4), float64]) */;
  %1691 = cast(meta[relay.Constant][70] /* ty=Tensor[(936, 1), uint8] */, dtype="uint8") /* ty=Tensor[(936, 1), uint8] */;
  %1692 = reshape(%1691, newshape=[13, 8, 9]) /* ty=Tensor[(13, 8, 9), uint8] */;
  %1693 = @func_2229(%1692) /* ty=(Tensor[(13, 8, 9), bool], Tensor[(16, 8, 5), float64], Tensor[(640), float64]) */;
  %1694 = %1690.0;
  %1695 = %1693.1;
  (%1694, %1695, meta[relay.Constant][70] /* ty=Tensor[(936, 1), uint8] */)
}

def @func_12568() -> (Tensor[(8, 8, 4), float64], Tensor[(8, 8, 4), float64]) {
  %1700 = fn () -> (Tensor[(8, 8, 4), float64], Tensor[(8, 8, 4), float64]) {
    %1696 = @func_6982() /* ty=(Tensor[(8, 8, 4), float64], Tensor[(8, 8, 4), float64]) */;
    %1697 = @func_7099() /* ty=(Tensor[(8, 8, 4), float64],) */;
    %1698 = %1696.0;
    %1699 = %1697.0;
    (%1698, %1699)
  };
  %1700() /* ty=(Tensor[(8, 8, 4), float64], Tensor[(8, 8, 4), float64]) */
}

def @func_16213() -> (Tensor[(1296), float64], Tensor[(1296), float64], Tensor[(4, 4, 11), uint8]) {
  %1711 = fn () -> (Tensor[(1296), float64], Tensor[(1296), float64], Tensor[(4, 4, 11), uint8]) {
    %1701 = @func_9094() /* ty=(Tensor[(1296), float64],) */;
    %1702 = cast(meta[relay.Constant][71] /* ty=Tensor[(4, 4, 11), float64] */, dtype="float64") /* ty=Tensor[(4, 4, 11), float64] */;
    %1703 = sinh(%1702) /* ty=Tensor[(4, 4, 11), float64] */;
    %1704 = cast(meta[relay.Constant][71] /* ty=Tensor[(4, 4, 11), float64] */, dtype="uint8") /* ty=Tensor[(4, 4, 11), uint8] */;
    %1705 = shape_of(%1703, dtype="int32") /* ty=Tensor[(3), int32] */;
    %1706 = cast(%1703, dtype="uint8") /* ty=Tensor[(4, 4, 11), uint8] */;
    %1707 = dyn.reshape(%1704, %1705, newshape=[]) /* ty=Tensor[(?, ?, ?), uint8] */;
    %1708 = @func_6295() /* ty=Tensor[(1296), float64] */;
    %1709 = %1701.0;
    %1710 = logical_xor(%1706, %1707) /* ty=Tensor[(4, 4, 11), uint8] */;
    (%1708, %1709, %1710)
  };
  %1711() /* ty=(Tensor[(1296), float64], Tensor[(1296), float64], Tensor[(4, 4, 11), uint8]) */
}

def @func_21755() -> (Tensor[(8, 8, 4), float64],) {
  @func_21753() /* ty=(Tensor[(8, 8, 4), float64],) */
}

def @func_24108() -> (Tensor[(8, 8, 4), float64], Tensor[(1296), bool]) {
  %1715 = fn () -> (Tensor[(8, 8, 4), float64], Tensor[(1296), bool]) {
    %1712 = @func_17966() /* ty=(Tensor[(8, 8, 4), float64],) */;
    %1713 = %1712.0;
    %1714 = @func_15674() /* ty=Tensor[(1296), bool] */;
    (%1713, %1714)
  };
  %1715() /* ty=(Tensor[(8, 8, 4), float64], Tensor[(1296), bool]) */
}

def @func_18866(%var_18864: Tensor[(5, 14, 14), uint32]) -> (Tensor[(5, 14, 14), uint32], Tensor[(8, 8, 4), float64], Tensor[(8, 8, 4), float64], Tensor[(2, 5, 12), bool], Tensor[(120), float64], Tensor[(8, 8, 4), float64]) {
  @func_18863(%var_18864) /* ty=(Tensor[(5, 14, 14), uint32], Tensor[(8, 8, 4), float64], Tensor[(8, 8, 4), float64], Tensor[(2, 5, 12), bool], Tensor[(120), float64], Tensor[(8, 8, 4), float64]) */
}

def @func_8937() -> Tensor[(8, 8, 4), float64] {
  %1716 = fn () -> Tensor[(8, 8, 4), float64] {
    @func_7342() /* ty=Tensor[(8, 8, 4), float64] */
  };
  %1716() /* ty=Tensor[(8, 8, 4), float64] */
}

def @func_11224() -> (Tensor[(8, 8, 4), float64],) {
  %1719 = fn () -> (Tensor[(8, 8, 4), float64],) {
    %1717 = @func_9677() /* ty=(Tensor[(8, 8, 4), float64], Tensor[(8, 8, 4), float64]) */;
    %1718 = %1717.0;
    (%1718,)
  };
  %1719() /* ty=(Tensor[(8, 8, 4), float64],) */
}

def @func_19785() -> (Tensor[(8, 8, 4), bool],) {
  %1722 = fn () -> (Tensor[(8, 8, 4), bool],) {
    %1720 = @func_9585() /* ty=(Tensor[(8, 8, 4), int64], Tensor[(8, 8, 4), float64], Tensor[(1296), bool], uint8, Tensor[(8, 8, 4), uint8], Tensor[(1296), float64], Tensor[(2, 5, 12), bool], Tensor[(120), float64], Tensor[(8, 8, 4), bool]) */;
    %1721 = %1720.8;
    (%1721,)
  };
  %1722() /* ty=(Tensor[(8, 8, 4), bool],) */
}

def @func_10378() -> (Tensor[(8, 8, 4), int64], Tensor[(8, 8, 4), float64], Tensor[(9, 12, 12), float32], Tensor[(1296), float64], Tensor[(16, 8, 5), float64]) {
  %1723 = @func_7878() /* ty=(Tensor[(8, 8, 4), float64], Tensor[(8, 8, 4), int64], Tensor[(256), float64]) */;
  %1724 = @func_7099() /* ty=(Tensor[(8, 8, 4), float64],) */;
  %1725 = cast(meta[relay.Constant][72] /* ty=Tensor[(1296), float64] */, dtype="float64") /* ty=Tensor[(1296), float64] */;
  %1726 = reshape(%1725, newshape=[9, 12, 12]) /* ty=Tensor[(9, 12, 12), float64] */;
  %1727 = @func_9397() /* ty=(Tensor[(8, 8, 4), float64], Tensor[(16, 8, 5), float64], Tensor[(936, 1), uint8]) */;
  %1728 = %1723.1;
  %1729 = %1724.0;
  %1730 = @func_2887(%1726) /* ty=Tensor[(9, 12, 12), float32] */;
  %1731 = %1727.1;
  (%1728, %1729, %1730, meta[relay.Constant][72] /* ty=Tensor[(1296), float64] */, %1731)
}

def @func_22574() -> (Tensor[(1296), bool],) {
  %1734 = fn () -> (Tensor[(1296), bool],) {
    %1732 = @func_22318() /* ty=(Tensor[(1296), bool], Tensor[(8, 8, 4), float64], Tensor[(8, 8, 4), float64]) */;
    %1733 = %1732.0;
    (%1733,)
  };
  %1734() /* ty=(Tensor[(1296), bool],) */
}

def @func_26074() -> (uint8, Tensor[(8, 8, 4), float64], Tensor[(8, 8, 4), float64]) {
  @func_26072() /* ty=(uint8, Tensor[(8, 8, 4), float64], Tensor[(8, 8, 4), float64]) */
}

def @func_7577(%var_7574: Tensor[(5, 2, 3), float32], %var_7575: Tensor[(1155, 1), int8], %var_7576: Tensor[(1260), float32]) -> (Tensor[(8, 8, 4), float64], Tensor[(5, 2, 3), float32], Tensor[(8, 8, 4), int64], Tensor[(8, 8, 4), float64], Tensor[(14, 6, 15), float32], Tensor[(1155, 1), int8], Tensor[(1260), float32], Tensor[(8, 8, 4), float64]) {
  %1755 = fn (%var_7534: Tensor[(5, 2, 3), float32], %var_7556: Tensor[(1155, 1), int8], %var_7557: Tensor[(1260), float32]) -> (Tensor[(8, 8, 4), float64], Tensor[(5, 2, 3), float32], Tensor[(8, 8, 4), int64], Tensor[(8, 8, 4), float64], Tensor[(14, 6, 15), float32], Tensor[(1155, 1), int8], Tensor[(1260), float32], Tensor[(8, 8, 4), float64]) {
    %1735 = cast(meta[relay.Constant][73] /* ty=Tensor[(5, 2, 3), float32] */, dtype="float32") /* ty=Tensor[(5, 2, 3), float32] */;
    %1736 = shape_of(%var_7534, dtype="int32") /* ty=Tensor[(3), int32] */;
    %1737 = cast(%var_7534, dtype="float32") /* ty=Tensor[(5, 2, 3), float32] */;
    %1738 = dyn.reshape(%1735, %1736, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
    %1739 = power(%1737, %1738) /* ty=Tensor[(5, 2, 3), float32] */;
    %1740 = cast(%1739, dtype="float32") /* ty=Tensor[(5, 2, 3), float32] */;
    %1741 = @func_5807() /* ty=Tensor[(8, 8, 4), float64] */;
    %1742 = cast(%1741, dtype="float64") /* ty=Tensor[(8, 8, 4), float64] */;
    %1743 = reshape(%1742, newshape=[8, 8, 4]) /* ty=Tensor[(8, 8, 4), float64] */;
    %1744 = @func_7504() /* ty=(Tensor[(8, 8, 4), float64],) */;
    %1745 = cast(%var_7556, dtype="int8") /* ty=Tensor[(1155, 1), int8] */;
    %1746 = cast(%var_7557, dtype="float32") /* ty=Tensor[(1260), float32] */;
    %1747 = reshape(%1745, newshape=[7, 11, 15]) /* ty=Tensor[(7, 11, 15), int8] */;
    %1748 = reshape(%1746, newshape=[1260]) /* ty=Tensor[(1260), float32] */;
    %1749 = @func_4660(%1747, %1748) /* ty=(Tensor[(7, 11, 15), bool], Tensor[(14, 6, 15), float32], Tensor[(1260), float32]) */;
    %1750 = log2(%1740) /* ty=Tensor[(5, 2, 3), float32] */;
    %1751 = @func_5643(%1743) /* ty=Tensor[(8, 8, 4), int64] */;
    %1752 = %1744.0;
    %1753 = %1749.1;
    %1754 = @func_7399() /* ty=Tensor[(8, 8, 4), float64] */;
    (%1741, %1750, %1751, %1752, %1753, %var_7556, %var_7557, %1754)
  };
  %1755(%var_7574, %var_7575, %var_7576) /* ty=(Tensor[(8, 8, 4), float64], Tensor[(5, 2, 3), float32], Tensor[(8, 8, 4), int64], Tensor[(8, 8, 4), float64], Tensor[(14, 6, 15), float32], Tensor[(1155, 1), int8], Tensor[(1260), float32], Tensor[(8, 8, 4), float64]) */
}

def @func_6019() -> (Tensor[(8, 8, 4), float64],) {
  %1757 = fn () -> (Tensor[(8, 8, 4), float64],) {
    %1756 = @func_5807() /* ty=Tensor[(8, 8, 4), float64] */;
    (%1756,)
  };
  %1757() /* ty=(Tensor[(8, 8, 4), float64],) */
}

def @func_6984() -> (Tensor[(8, 8, 4), float64], Tensor[(8, 8, 4), float64]) {
  @func_6982() /* ty=(Tensor[(8, 8, 4), float64], Tensor[(8, 8, 4), float64]) */
}

def @func_6905() -> (Tensor[(8, 8, 4), float64], uint8, Tensor[(528), float32], uint8, Tensor[(8, 8, 4), float64]) {
  %1758 = cast(meta[relay.Constant][74] /* ty=Tensor[(528), float32] */, dtype="float32") /* ty=Tensor[(528), float32] */;
  %1759 = cast(meta[relay.Constant][75] /* ty=uint8 */, dtype="uint8") /* ty=uint8 */;
  %1760 = reshape(%1758, newshape=[3, 11, 16]) /* ty=Tensor[(3, 11, 16), float32] */;
  %1761 = reshape(%1759, newshape=[]) /* ty=uint8 */;
  %1762 = @func_2471(%1760, %1761) /* ty=(Tensor[(3, 11, 16), float32], Tensor[(14, 6, 15), float32], Tensor[(1260), float32], Tensor[(1260), float32], uint8, Tensor[(75), uint8], Tensor[(14, 6, 15), float32]) */;
  %1763 = @func_5807() /* ty=Tensor[(8, 8, 4), float64] */;
  %1764 = %1762.4;
  %1765 = @func_5807() /* ty=Tensor[(8, 8, 4), float64] */;
  (%1763, %1764, meta[relay.Constant][74] /* ty=Tensor[(528), float32] */, meta[relay.Constant][75] /* ty=uint8 */, %1765)
}

def @func_10482() -> (Tensor[(8, 8, 4), float64], Tensor[(8, 8, 4), int64]) {
  %1771 = fn () -> (Tensor[(8, 8, 4), float64], Tensor[(8, 8, 4), int64]) {
    %1766 = @func_7099() /* ty=(Tensor[(8, 8, 4), float64],) */;
    %1767 = %1766.0;
    %1768 = cast(%1767, dtype="float64") /* ty=Tensor[(8, 8, 4), float64] */;
    %1769 = reshape(%1768, newshape=[8, 8, 4]) /* ty=Tensor[(8, 8, 4), float64] */;
    %1770 = @func_5643(%1769) /* ty=Tensor[(8, 8, 4), int64] */;
    (%1767, %1770)
  };
  %1771() /* ty=(Tensor[(8, 8, 4), float64], Tensor[(8, 8, 4), int64]) */
}

def @func_13330() -> Tensor[(1296), float64] {
  @func_13328() /* ty=Tensor[(1296), float64] */
}

def @func_19031() -> (Tensor[(1260), bool], Tensor[(8, 8, 4), uint8]) {
  %1776 = fn () -> (Tensor[(1260), bool], Tensor[(8, 8, 4), uint8]) {
    %1772 = @func_9237() /* ty=(Tensor[(8, 8, 4), float64], Tensor[(1296), float64], Tensor[(1260), bool], Tensor[(528), float32]) */;
    %1773 = @func_7595() /* ty=(Tensor[(1296), float64], Tensor[(8, 8, 4), float64], Tensor[(8, 8, 4), uint8]) */;
    %1774 = %1772.2;
    %1775 = %1773.2;
    (%1774, %1775)
  };
  %1776() /* ty=(Tensor[(1260), bool], Tensor[(8, 8, 4), uint8]) */
}

def @func_15474() -> (Tensor[(8, 8, 4), float64], Tensor[(8, 8, 4), int64]) {
  @func_15472() /* ty=(Tensor[(8, 8, 4), float64], Tensor[(8, 8, 4), int64]) */
}

def @func_12709() -> Tensor[(8, 8, 4), float64] {
  @func_12707() /* ty=Tensor[(8, 8, 4), float64] */
}

def @func_23799(%var_23752: uint8) -> (Tensor[(8, 8, 4), float64], Tensor[(8, 8, 4), float64], Tensor[(528), float32], Tensor[(1296), float64], Tensor[(256), float64], Tensor[(14, 6, 15), int8]) {
  %1777 = @func_23502() /* ty=(Tensor[(120), float64], Tensor[(8, 8, 4), float64]) */;
  %1778 = @func_20007() /* ty=(Tensor[(8, 8, 4), float64], Tensor[(8, 8, 4), float64]) */;
  %1779 = @func_9094() /* ty=(Tensor[(1296), float64],) */;
  %1780 = @func_7364() /* ty=(Tensor[(8, 8, 4), int64], Tensor[(256), float64]) */;
  %1781 = cast(meta[relay.Constant][76] /* ty=Tensor[(528), float32] */, dtype="float32") /* ty=Tensor[(528), float32] */;
  %1782 = cast(%var_23752, dtype="uint8") /* ty=uint8 */;
  %1783 = reshape(%1781, newshape=[3, 11, 16]) /* ty=Tensor[(3, 11, 16), float32] */;
  %1784 = reshape(%1782, newshape=[]) /* ty=uint8 */;
  %1785 = @func_2471(%1783, %1784) /* ty=(Tensor[(3, 11, 16), float32], Tensor[(14, 6, 15), float32], Tensor[(1260), float32], Tensor[(1260), float32], uint8, Tensor[(75), uint8], Tensor[(14, 6, 15), float32]) */;
  %1786 = %1785.6;
  %1787 = cast(%1786, dtype="int8") /* ty=Tensor[(14, 6, 15), int8] */;
  %1788 = cast(%var_23752, dtype="int8") /* ty=int8 */;
  %1789 = %1777.1;
  %1790 = %1778.1;
  %1791 = %1779.0;
  %1792 = %1780.1;
  %1793 = bitwise_xor(%1787, %1788) /* ty=Tensor[(14, 6, 15), int8] */;
  (%1789, %1790, meta[relay.Constant][76] /* ty=Tensor[(528), float32] */, %1791, %1792, %1793)
}

def @func_19754() -> (Tensor[(8, 8, 4), float64],) {
  %1795 = fn () -> (Tensor[(8, 8, 4), float64],) {
    %1794 = @func_7342() /* ty=Tensor[(8, 8, 4), float64] */;
    (%1794,)
  };
  %1795() /* ty=(Tensor[(8, 8, 4), float64],) */
}

def @func_25850() -> Tensor[(8, 8, 4), float64] {
  @func_25848() /* ty=Tensor[(8, 8, 4), float64] */
}

def @func_7239(%var_7238: Tensor[(8, 8, 4), float64]) -> (Tensor[(8, 8, 4), bool], Tensor[(8, 8, 4), float64], Tensor[(8, 8, 4), float32], Tensor[(8, 8, 4), float64]) {
  %1811 = fn (%var_7191: Tensor[(8, 8, 4), float64]) -> (Tensor[(8, 8, 4), bool], Tensor[(8, 8, 4), float64], Tensor[(8, 8, 4), float32], Tensor[(8, 8, 4), float64]) {
    %1796 = @func_6018() /* ty=(Tensor[(8, 8, 4), float64],) */;
    %1797 = %1796.0;
    %1798 = cast(%var_7191, dtype="bool") /* ty=Tensor[(8, 8, 4), bool] */;
    %1799 = shape_of(%1797, dtype="int32") /* ty=Tensor[(3), int32] */;
    %1800 = cast(%1797, dtype="bool") /* ty=Tensor[(8, 8, 4), bool] */;
    %1801 = dyn.reshape(%1798, %1799, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    %1802 = @func_6001() /* ty=(Tensor[(8, 8, 4), float64],) */;
    %1803 = cast(%var_7191, dtype="float64") /* ty=Tensor[(8, 8, 4), float64] */;
    %1804 = cosh(%1803) /* ty=Tensor[(8, 8, 4), float64] */;
    %1805 = cast(%1804, dtype="float32") /* ty=Tensor[(8, 8, 4), float32] */;
    %1806 = @func_6698() /* ty=(Tensor[(8, 8, 4), float64],) */;
    %1807 = logical_and(%1800, %1801) /* ty=Tensor[(8, 8, 4), bool] */;
    %1808 = %1802.0;
    %1809 = asinh(%1805) /* ty=Tensor[(8, 8, 4), float32] */;
    %1810 = %1806.0;
    (%1807, %1808, %1809, %1810)
  };
  %1811(%var_7238) /* ty=(Tensor[(8, 8, 4), bool], Tensor[(8, 8, 4), float64], Tensor[(8, 8, 4), float32], Tensor[(8, 8, 4), float64]) */
}

def @func_23208(%var_23176: Tensor[(7, 3, 11), float64]) -> (Tensor[(7, 3, 11), float64], Tensor[(1296), float64]) {
  %1812 = cast(%var_23176, dtype="float64") /* ty=Tensor[(7, 3, 11), float64] */;
  %1813 = @func_16717() /* ty=(Tensor[(8, 8, 4), float64], Tensor[(1296), float64]) */;
  %1814 = sqrt(%1812) /* ty=Tensor[(7, 3, 11), float64] */;
  %1815 = %1813.1;
  (%1814, %1815)
}

def @func_26496() -> Tensor[(8, 8, 4), float64] {
  @func_22878() /* ty=Tensor[(8, 8, 4), float64] */
}

def @func_24464(%var_24455: Tensor[(528), float32]) -> (Tensor[(8, 8, 4), float64], Tensor[(120), float64], Tensor[(8, 8, 4), float64], Tensor[(640), float64], Tensor[(528), float32]) {
  %1816 = @func_23633() /* ty=(Tensor[(8, 8, 4), float64], Tensor[(1296), float64]) */;
  %1817 = @func_10231() /* ty=(Tensor[(120), float64], Tensor[(8, 8, 4), float64], Tensor[(1296), float64]) */;
  %1818 = @func_20415() /* ty=(Tensor[(8, 8, 4), float64],) */;
  %1819 = cast(%var_24455, dtype="float32") /* ty=Tensor[(528), float32] */;
  %1820 = reshape(%1819, newshape=[528, 1]) /* ty=Tensor[(528, 1), float32] */;
  %1821 = @func_7484(%1820) /* ty=(Tensor[(8, 8, 4), float64], Tensor[(1260), bool], Tensor[(1440), uint16], Tensor[(528, 1), float32], Tensor[(640), float64], Tensor[(14, 6, 15), float32]) */;
  %1822 = %1816.0;
  %1823 = %1817.0;
  %1824 = %1818.0;
  %1825 = %1821.4;
  (%1822, %1823, %1824, %1825, %var_24455)
}

def @func_26334(%var_26332: int64, %var_26333: Tensor[(3, 15, 2), int64]) -> (Tensor[(3, 15, 2), bool], Tensor[(3, 15, 2), float32]) {
  @func_26330(%var_26332, %var_26333) /* ty=(Tensor[(3, 15, 2), bool], Tensor[(3, 15, 2), float32]) */
}

def @func_15921() -> (Tensor[(1296), float64], Tensor[(8, 8, 4), float64], Tensor[(528), float32]) {
  @func_15919() /* ty=(Tensor[(1296), float64], Tensor[(8, 8, 4), float64], Tensor[(528), float32]) */
}

def @func_10088(%var_10086: Tensor[(256), float64]) -> (Tensor[(1296), float64], Tensor[(1296), float64], Tensor[(8, 8, 4), int32], Tensor[(256), float64]) {
  @func_10085(%var_10086) /* ty=(Tensor[(1296), float64], Tensor[(1296), float64], Tensor[(8, 8, 4), int32], Tensor[(256), float64]) */
}

def @func_19149() -> (Tensor[(8, 8, 4), float64], Tensor[(1296), float64]) {
  %1826 = @func_6982() /* ty=(Tensor[(8, 8, 4), float64], Tensor[(8, 8, 4), float64]) */;
  %1827 = @func_10231() /* ty=(Tensor[(120), float64], Tensor[(8, 8, 4), float64], Tensor[(1296), float64]) */;
  %1828 = %1826.1;
  %1829 = %1827.2;
  (%1828, %1829)
}

def @func_26350() -> (Tensor[(8, 8, 4), float64],) {
  %1832 = fn () -> (Tensor[(8, 8, 4), float64],) {
    %1830 = @func_23253() /* ty=(uint8, Tensor[(8, 8, 4), float64], Tensor[(8, 8, 4), int64]) */;
    %1831 = %1830.1;
    (%1831,)
  };
  %1832() /* ty=(Tensor[(8, 8, 4), float64],) */
}

def @func_7101() -> (Tensor[(8, 8, 4), float64],) {
  @func_7099() /* ty=(Tensor[(8, 8, 4), float64],) */
}

def @func_21510() -> (Tensor[(8, 8, 4), float64], Tensor[(256), float64], Tensor[(1296), bool]) {
  %1838 = fn () -> (Tensor[(8, 8, 4), float64], Tensor[(256), float64], Tensor[(1296), bool]) {
    %1833 = @func_19205() /* ty=(Tensor[(256), float64], Tensor[(8, 8, 4), float64]) */;
    %1834 = @func_16575() /* ty=(Tensor[(9, 12, 12), float32], Tensor[(1296), bool], Tensor[(256), float64], Tensor[(1296), bool]) */;
    %1835 = @func_15340() /* ty=Tensor[(8, 8, 4), float64] */;
    %1836 = %1833.0;
    %1837 = %1834.1;
    (%1835, %1836, %1837)
  };
  %1838() /* ty=(Tensor[(8, 8, 4), float64], Tensor[(256), float64], Tensor[(1296), bool]) */
}

def @func_14126() -> (Tensor[(256), float64],) {
  %1839 = @func_6366() /* ty=(Tensor[(1296), bool], Tensor[(8, 8, 4), int64], Tensor[(256), float64]) */;
  %1840 = %1839.2;
  (%1840,)
}

def @func_21109(%var_21107: Tensor[(7, 165), int8], %var_21108: Tensor[(1260), float32]) -> (Tensor[(8, 8, 4), float64], Tensor[(528), float32], Tensor[(8, 8, 4), float64], Tensor[(30), float32], Tensor[(7, 165), int8], Tensor[(1260), float32]) {
  @func_21105(%var_21107, %var_21108) /* ty=(Tensor[(8, 8, 4), float64], Tensor[(528), float32], Tensor[(8, 8, 4), float64], Tensor[(30), float32], Tensor[(7, 165), int8], Tensor[(1260), float32]) */
}

def @func_13790() -> (Tensor[(8, 8, 4), float64], Tensor[(8, 8, 4), float64]) {
  %1845 = fn () -> (Tensor[(8, 8, 4), float64], Tensor[(8, 8, 4), float64]) {
    %1841 = @func_8745() /* ty=(Tensor[(8, 8, 4), float64], Tensor[(8, 8, 4), float64]) */;
    %1842 = @func_7099() /* ty=(Tensor[(8, 8, 4), float64],) */;
    %1843 = %1841.0;
    %1844 = %1842.0;
    (%1843, %1844)
  };
  %1845() /* ty=(Tensor[(8, 8, 4), float64], Tensor[(8, 8, 4), float64]) */
}

def @func_23853() -> (Tensor[(2, 4, 15), float32],) {
  %1846 = @func_20202() /* ty=(Tensor[(2, 4, 15), float32],) */;
  %1847 = %1846.0;
  (%1847,)
}

def @func_8353() -> (Tensor[(8, 8, 4), float64], Tensor[(1296), bool]) {
  %1850 = fn () -> (Tensor[(8, 8, 4), float64], Tensor[(1296), bool]) {
    %1848 = @func_7168() /* ty=Tensor[(8, 8, 4), float64] */;
    %1849 = @func_6538() /* ty=Tensor[(1296), bool] */;
    (%1848, %1849)
  };
  %1850() /* ty=(Tensor[(8, 8, 4), float64], Tensor[(1296), bool]) */
}

def @func_15329() -> (Tensor[(8, 8, 4), float64],) {
  %1853 = fn () -> (Tensor[(8, 8, 4), float64],) {
    %1851 = @func_12946() /* ty=(Tensor[(1296), bool], Tensor[(8, 8, 4), float64]) */;
    %1852 = %1851.1;
    (%1852,)
  };
  %1853() /* ty=(Tensor[(8, 8, 4), float64],) */
}

def @func_22111(%var_22109: Tensor[(528), float32], %var_22110: Tensor[(24), float64]) -> (Tensor[(8, 8, 4), float64], Tensor[(8, 8, 4), float64], Tensor[(528), float32], Tensor[(4, 6, 1), float64], Tensor[(24), float64]) {
  @func_22107(%var_22109, %var_22110) /* ty=(Tensor[(8, 8, 4), float64], Tensor[(8, 8, 4), float64], Tensor[(528), float32], Tensor[(4, 6, 1), float64], Tensor[(24), float64]) */
}

def @func_7484(%var_7454: Tensor[(528, 1), float32]) -> (Tensor[(8, 8, 4), float64], Tensor[(1260), bool], Tensor[(1440), uint16], Tensor[(528, 1), float32], Tensor[(640), float64], Tensor[(14, 6, 15), float32]) {
  %1854 = @func_5468() /* ty=(Tensor[(8, 8, 4), float64],) */;
  %1855 = cast(meta[relay.Constant][77] /* ty=Tensor[(1440), uint16] */, dtype="uint16") /* ty=Tensor[(1440), uint16] */;
  %1856 = cast(meta[relay.Constant][77] /* ty=Tensor[(1440), uint16] */, dtype="uint16") /* ty=Tensor[(1440), uint16] */;
  %1857 = cast(%var_7454, dtype="float32") /* ty=Tensor[(528, 1), float32] */;
  %1858 = cast(meta[relay.Constant][78] /* ty=Tensor[(640), float64] */, dtype="float64") /* ty=Tensor[(640), float64] */;
  %1859 = reshape(%1855, newshape=[16, 15, 6]) /* ty=Tensor[(16, 15, 6), uint16] */;
  %1860 = reshape(%1856, newshape=[16, 15, 6]) /* ty=Tensor[(16, 15, 6), uint16] */;
  %1861 = reshape(%1857, newshape=[528]) /* ty=Tensor[(528), float32] */;
  %1862 = reshape(%1858, newshape=[640]) /* ty=Tensor[(640), float64] */;
  %1863 = @func_3760(%1859, %1860, %1861, %1862) /* ty=(Tensor[(16, 15, 6), uint16], Tensor[(528), float32], uint8, Tensor[(16, 15, 6), bool], Tensor[(16, 8, 5), float64], Tensor[(640), float64], Tensor[(14, 6, 15), float32], Tensor[(9, 12, 12), float32], Tensor[(1296), float64], Tensor[(1260), bool], Tensor[(3, 11, 16), float32]) */;
  %1864 = %1863.9;
  %1865 = cast(%1864, dtype="float32") /* ty=Tensor[(1260), float32] */;
  %1866 = reshape(%1865, newshape=[14, 6, 15]) /* ty=Tensor[(14, 6, 15), float32] */;
  %1867 = @func_963(%1866) /* ty=(Tensor[(14, 6, 15), float32],) */;
  %1868 = %1854.0;
  %1869 = %1867.0;
  (%1868, %1864, meta[relay.Constant][77] /* ty=Tensor[(1440), uint16] */, %var_7454, meta[relay.Constant][78] /* ty=Tensor[(640), float64] */, %1869)
}

def @func_10380() -> (Tensor[(8, 8, 4), int64], Tensor[(8, 8, 4), float64], Tensor[(9, 12, 12), float32], Tensor[(1296), float64], Tensor[(16, 8, 5), float64]) {
  @func_10378() /* ty=(Tensor[(8, 8, 4), int64], Tensor[(8, 8, 4), float64], Tensor[(9, 12, 12), float32], Tensor[(1296), float64], Tensor[(16, 8, 5), float64]) */
}

def @func_25420() -> (Tensor[(8, 8, 4), float64], Tensor[(8, 8, 4), float64], Tensor[(1296), float64]) {
  @func_25418() /* ty=(Tensor[(8, 8, 4), float64], Tensor[(8, 8, 4), float64], Tensor[(1296), float64]) */
}

def @func_19934() -> (Tensor[(1296), float64], Tensor[(8, 8, 4), float64], Tensor[(1296), float64]) {
  %1874 = fn () -> (Tensor[(1296), float64], Tensor[(8, 8, 4), float64], Tensor[(1296), float64]) {
    %1870 = @func_19584() /* ty=(Tensor[(1296), float64],) */;
    %1871 = %1870.0;
    %1872 = @func_14391() /* ty=Tensor[(8, 8, 4), float64] */;
    %1873 = @func_8571() /* ty=Tensor[(1296), float64] */;
    (%1871, %1872, %1873)
  };
  %1874() /* ty=(Tensor[(1296), float64], Tensor[(8, 8, 4), float64], Tensor[(1296), float64]) */
}

def @func_23301() -> (Tensor[(8, 8, 4), float64],) {
  %1875 = @func_20277() /* ty=(Tensor[(8, 8, 4), float64], Tensor[(8, 8, 4), float64]) */;
  %1876 = %1875.0;
  (%1876,)
}

def @func_25107() -> (Tensor[(8, 8, 4), float64],) {
  %1877 = @func_20393() /* ty=(Tensor[(8, 8, 4), float64],) */;
  %1878 = %1877.0;
  (%1878,)
}

def @func_11957(%var_11955: float32, %var_11956: Tensor[(432), float32]) -> (Tensor[(8, 8, 4), float64], Tensor[(9, 4, 12), bool], float32, Tensor[(432), float32]) {
  @func_11953(%var_11955, %var_11956) /* ty=(Tensor[(8, 8, 4), float64], Tensor[(9, 4, 12), bool], float32, Tensor[(432), float32]) */
}

def @func_23090() -> Tensor[(8, 8, 4), float64] {
  %1879 = @func_19705() /* ty=(Tensor[(1296), float64], Tensor[(8, 8, 4), float64]) */;
  %1879.1
}

def @func_16575() -> (Tensor[(9, 12, 12), float32], Tensor[(1296), bool], Tensor[(256), float64], Tensor[(1296), bool]) {
  %1880 = @func_13762() /* ty=(Tensor[(9, 12, 12), float32], Tensor[(9, 12, 12), float32]) */;
  %1881 = @func_16469() /* ty=(Tensor[(1296), bool],) */;
  %1882 = %1880.0;
  %1883 = %1881.0;
  %1884 = @func_15833() /* ty=Tensor[(256), float64] */;
  %1885 = @func_10439() /* ty=Tensor[(1296), bool] */;
  (%1882, %1883, %1884, %1885)
}

def @func_18550() -> (Tensor[(1296), float64],) {
  %1888 = fn () -> (Tensor[(1296), float64],) {
    %1886 = @func_16259() /* ty=(Tensor[(1296), float64],) */;
    %1887 = %1886.0;
    (%1887,)
  };
  %1888() /* ty=(Tensor[(1296), float64],) */
}

def @func_22914() -> Tensor[(8, 8, 4), float64] {
  %1890 = fn () -> Tensor[(8, 8, 4), float64] {
    %1889 = @func_12511() /* ty=(Tensor[(8, 8, 4), float64], uint8) */;
    %1889.0
  };
  %1890() /* ty=Tensor[(8, 8, 4), float64] */
}

def @func_7400() -> Tensor[(8, 8, 4), float64] {
  %1891 = fn () -> Tensor[(8, 8, 4), float64] {
    @func_6042() /* ty=Tensor[(8, 8, 4), float64] */
  };
  %1891() /* ty=Tensor[(8, 8, 4), float64] */
}

def @func_966(%var_964: Tensor[(14, 6, 15), float32]) -> (Tensor[(14, 6, 15), float32],) {
  @func_963(%var_964) /* ty=(Tensor[(14, 6, 15), float32],) */
}

def @func_25418() -> (Tensor[(8, 8, 4), float64], Tensor[(8, 8, 4), float64], Tensor[(1296), float64]) {
  %1892 = @func_5727() /* ty=(Tensor[(8, 8, 4), float64],) */;
  %1893 = @func_17644() /* ty=(Tensor[(8, 8, 4), float64],) */;
  %1894 = %1892.0;
  %1895 = %1893.0;
  %1896 = @func_13328() /* ty=Tensor[(1296), float64] */;
  (%1894, %1895, %1896)
}

def @func_26498() -> Tensor[(8, 8, 4), float64] {
  @func_26496() /* ty=Tensor[(8, 8, 4), float64] */
}

def @func_9586() -> (Tensor[(8, 8, 4), int64], Tensor[(8, 8, 4), float64], Tensor[(1296), bool], uint8, Tensor[(8, 8, 4), uint8], Tensor[(1296), float64], Tensor[(2, 5, 12), bool], Tensor[(120), float64], Tensor[(8, 8, 4), bool]) {
  %1917 = fn () -> (Tensor[(8, 8, 4), int64], Tensor[(8, 8, 4), float64], Tensor[(1296), bool], uint8, Tensor[(8, 8, 4), uint8], Tensor[(1296), float64], Tensor[(2, 5, 12), bool], Tensor[(120), float64], Tensor[(8, 8, 4), bool]) {
    %1897 = @func_7878() /* ty=(Tensor[(8, 8, 4), float64], Tensor[(8, 8, 4), int64], Tensor[(256), float64]) */;
    %1898 = @func_7399() /* ty=Tensor[(8, 8, 4), float64] */;
    %1899 = cast(%1898, dtype="float64") /* ty=Tensor[(8, 8, 4), float64] */;
    %1900 = reshape(%1899, newshape=[8, 8, 4]) /* ty=Tensor[(8, 8, 4), float64] */;
    %1901 = @func_6490() /* ty=(Tensor[(1296), float64],) */;
    %1902 = cast(meta[relay.Constant][79] /* ty=Tensor[(120), float64] */, dtype="float64") /* ty=Tensor[(120), float64] */;
    %1903 = cast(meta[relay.Constant][79] /* ty=Tensor[(120), float64] */, dtype="float64") /* ty=Tensor[(120), float64] */;
    %1904 = reshape(%1902, newshape=[2, 5, 12]) /* ty=Tensor[(2, 5, 12), float64] */;
    %1905 = reshape(%1903, newshape=[2, 5, 12]) /* ty=Tensor[(2, 5, 12), float64] */;
    %1906 = @func_8852(%1904, %1905) /* ty=(Tensor[(2, 5, 12), bool],) */;
    %1907 = cast(%1898, dtype="float64") /* ty=Tensor[(8, 8, 4), float64] */;
    %1908 = reshape(%1907, newshape=[8, 8, 4]) /* ty=Tensor[(8, 8, 4), float64] */;
    %1909 = @func_7237(%1908) /* ty=(Tensor[(8, 8, 4), bool], Tensor[(8, 8, 4), float64], Tensor[(8, 8, 4), float32], Tensor[(8, 8, 4), float64]) */;
    %1910 = %1897.1;
    %1911 = @func_6538() /* ty=Tensor[(1296), bool] */;
    %1912 = @func_7901() /* ty=uint8 */;
    %1913 = @func_6658(%1900) /* ty=Tensor[(8, 8, 4), uint8] */;
    %1914 = %1901.0;
    %1915 = %1906.0;
    %1916 = %1909.0;
    (%1910, %1898, %1911, %1912, %1913, %1914, %1915, meta[relay.Constant][79] /* ty=Tensor[(120), float64] */, %1916)
  };
  %1917() /* ty=(Tensor[(8, 8, 4), int64], Tensor[(8, 8, 4), float64], Tensor[(1296), bool], uint8, Tensor[(8, 8, 4), uint8], Tensor[(1296), float64], Tensor[(2, 5, 12), bool], Tensor[(120), float64], Tensor[(8, 8, 4), bool]) */
}

def @func_17644() -> (Tensor[(8, 8, 4), float64],) {
  %1918 = @func_9339() /* ty=(Tensor[(1296), float64], Tensor[(8, 8, 4), float64]) */;
  %1919 = %1918.1;
  (%1919,)
}

def @func_26984(%var_26972: Tensor[(5, 5, 1), uint8]) -> (Tensor[(5, 5, 1), bool],) {
  %1920 = cast(meta[relay.Constant][80] /* ty=uint8 */, dtype="bool") /* ty=bool */;
  %1921 = cast(%var_26972, dtype="bool") /* ty=Tensor[(5, 5, 1), bool] */;
  %1922 = less_equal(%1920, %1921) /* ty=Tensor[(5, 5, 1), bool] */;
  (%1922,)
}

def @func_16260() -> (Tensor[(1296), float64],) {
  %1924 = fn () -> (Tensor[(1296), float64],) {
    %1923 = @func_6295() /* ty=Tensor[(1296), float64] */;
    (%1923,)
  };
  %1924() /* ty=(Tensor[(1296), float64],) */
}

def @func_18323() -> (Tensor[(256), float64],) {
  %1927 = fn () -> (Tensor[(256), float64],) {
    %1925 = @func_13110() /* ty=(Tensor[(8, 8, 4), int64], Tensor[(256), float64], Tensor[(1296), float64], Tensor[(8, 8, 4), float64]) */;
    %1926 = %1925.1;
    (%1926,)
  };
  %1927() /* ty=(Tensor[(256), float64],) */
}

def @func_7878() -> (Tensor[(8, 8, 4), float64], Tensor[(8, 8, 4), int64], Tensor[(256), float64]) {
  %1928 = @func_7342() /* ty=Tensor[(8, 8, 4), float64] */;
  %1929 = cast(%1928, dtype="float64") /* ty=Tensor[(8, 8, 4), float64] */;
  %1930 = reshape(%1929, newshape=[8, 8, 4]) /* ty=Tensor[(8, 8, 4), float64] */;
  %1931 = @func_7364() /* ty=(Tensor[(8, 8, 4), int64], Tensor[(256), float64]) */;
  %1932 = @func_5643(%1930) /* ty=Tensor[(8, 8, 4), int64] */;
  %1933 = %1931.1;
  (%1928, %1932, %1933)
}

def @func_13763() -> (Tensor[(9, 12, 12), float32], Tensor[(9, 12, 12), float32]) {
  %1939 = fn () -> (Tensor[(9, 12, 12), float32], Tensor[(9, 12, 12), float32]) {
    %1934 = @func_13419() /* ty=(Tensor[(9, 12, 12), float32], Tensor[(256), float64]) */;
    %1935 = %1934.0;
    %1936 = cast(%1935, dtype="float64") /* ty=Tensor[(9, 12, 12), float64] */;
    %1937 = reshape(%1936, newshape=[9, 12, 12]) /* ty=Tensor[(9, 12, 12), float64] */;
    %1938 = @func_2887(%1937) /* ty=Tensor[(9, 12, 12), float32] */;
    (%1935, %1938)
  };
  %1939() /* ty=(Tensor[(9, 12, 12), float32], Tensor[(9, 12, 12), float32]) */
}

def @func_8450() -> (Tensor[(1296), bool], Tensor[(1296), bool]) {
  @func_8448() /* ty=(Tensor[(1296), bool], Tensor[(1296), bool]) */
}

def @func_16986() -> Tensor[(8, 8, 4), float64] {
  %1940 = @func_13685() /* ty=(Tensor[(8, 8, 4), float64], Tensor[(8, 8, 4), float64]) */;
  %1940.1
}

def @func_20009() -> (Tensor[(8, 8, 4), float64], Tensor[(8, 8, 4), float64]) {
  @func_20007() /* ty=(Tensor[(8, 8, 4), float64], Tensor[(8, 8, 4), float64]) */
}

def @func_22659() -> (Tensor[(8, 8, 4), float64],) {
  @func_22657() /* ty=(Tensor[(8, 8, 4), float64],) */
}

def @func_2947(%var_2945: Tensor[(1, 2, 15), int64], %var_2946: Tensor[(14, 2, 15), int64]) -> (Tensor[(14, 2, 15), int64],) {
  @func_2943(%var_2945, %var_2946) /* ty=(Tensor[(14, 2, 15), int64],) */
}

def @func_22739() -> (Tensor[(1296), bool], Tensor[(9, 12, 12), float32], Tensor[(8, 8, 4), int32]) {
  %1947 = fn () -> (Tensor[(1296), bool], Tensor[(9, 12, 12), float32], Tensor[(8, 8, 4), int32]) {
    %1941 = @func_14112() /* ty=Tensor[(1296), bool] */;
    %1942 = cast(%1941, dtype="float64") /* ty=Tensor[(1296), float64] */;
    %1943 = reshape(%1942, newshape=[9, 12, 12]) /* ty=Tensor[(9, 12, 12), float64] */;
    %1944 = @func_13898() /* ty=(Tensor[(8, 8, 4), float64], Tensor[(8, 8, 4), int32]) */;
    %1945 = @func_2887(%1943) /* ty=Tensor[(9, 12, 12), float32] */;
    %1946 = %1944.1;
    (%1941, %1945, %1946)
  };
  %1947() /* ty=(Tensor[(1296), bool], Tensor[(9, 12, 12), float32], Tensor[(8, 8, 4), int32]) */
}

def @func_18411() -> Tensor[(8, 8, 4), float64] {
  @func_18409() /* ty=Tensor[(8, 8, 4), float64] */
}

def @func_23546() -> (Tensor[(1296), bool],) {
  @func_23544() /* ty=(Tensor[(1296), bool],) */
}

def @func_7294() -> (Tensor[(8, 8, 4), float64],) {
  @func_7292() /* ty=(Tensor[(8, 8, 4), float64],) */
}

def @func_5932(%var_5860: Tensor[(30), int64], %var_5926: Tensor[(528), float32]) -> (Tensor[(8, 8, 4), float64], Tensor[(14, 2, 15), int64], Tensor[(30), int64], Tensor[(420), int64], Tensor[(8, 8, 4), bool], Tensor[(14, 6, 15), float32], Tensor[(528), float32], uint8) {
  %1948 = @func_5468() /* ty=(Tensor[(8, 8, 4), float64],) */;
  %1949 = cast(%var_5860, dtype="int64") /* ty=Tensor[(30), int64] */;
  %1950 = cast(meta[relay.Constant][81] /* ty=Tensor[(420), int64] */, dtype="int64") /* ty=Tensor[(420), int64] */;
  %1951 = reshape(%1949, newshape=[1, 2, 15]) /* ty=Tensor[(1, 2, 15), int64] */;
  %1952 = reshape(%1950, newshape=[14, 2, 15]) /* ty=Tensor[(14, 2, 15), int64] */;
  %1953 = @func_2943(%1951, %1952) /* ty=(Tensor[(14, 2, 15), int64],) */;
  %1954 = @func_5688() /* ty=Tensor[(8, 8, 4), float64] */;
  %1955 = cast(%1954, dtype="float64") /* ty=Tensor[(8, 8, 4), float64] */;
  %1956 = asin(%1955) /* ty=Tensor[(8, 8, 4), float64] */;
  %1957 = cast(%1954, dtype="bool") /* ty=Tensor[(8, 8, 4), bool] */;
  %1958 = shape_of(%1956, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1959 = cast(%1956, dtype="bool") /* ty=Tensor[(8, 8, 4), bool] */;
  %1960 = dyn.reshape(%1957, %1958, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %1961 = cast(%var_5926, dtype="float32") /* ty=Tensor[(528), float32] */;
  %1962 = cast(meta[relay.Constant][82] /* ty=uint8 */, dtype="uint8") /* ty=uint8 */;
  %1963 = reshape(%1961, newshape=[3, 11, 16]) /* ty=Tensor[(3, 11, 16), float32] */;
  %1964 = reshape(%1962, newshape=[]) /* ty=uint8 */;
  %1965 = @func_2471(%1963, %1964) /* ty=(Tensor[(3, 11, 16), float32], Tensor[(14, 6, 15), float32], Tensor[(1260), float32], Tensor[(1260), float32], uint8, Tensor[(75), uint8], Tensor[(14, 6, 15), float32]) */;
  %1966 = %1948.0;
  %1967 = %1953.0;
  %1968 = less_equal(%1959, %1960) /* ty=Tensor[(8, 8, 4), bool] */;
  %1969 = %1965.1;
  (%1966, %1967, %var_5860, meta[relay.Constant][81] /* ty=Tensor[(420), int64] */, %1968, %1969, %var_5926, meta[relay.Constant][82] /* ty=uint8 */)
}

def @func_23837(%var_23835: Tensor[(252), int64]) -> (Tensor[(120), float64], Tensor[(16, 8, 5), float64], int64, Tensor[(252), int64]) {
  @func_23834(%var_23835) /* ty=(Tensor[(120), float64], Tensor[(16, 8, 5), float64], int64, Tensor[(252), int64]) */
}

def @func_25317() -> (Tensor[(8, 8, 4), uint8],) {
  %1970 = @func_19030() /* ty=(Tensor[(1260), bool], Tensor[(8, 8, 4), uint8]) */;
  %1971 = %1970.1;
  (%1971,)
}

def @func_7901() -> uint8 {
  %1972 = @func_6905() /* ty=(Tensor[(8, 8, 4), float64], uint8, Tensor[(528), float32], uint8, Tensor[(8, 8, 4), float64]) */;
  %1972.3
}

def @func_8516() -> Tensor[(8, 8, 4), float64] {
  %1974 = fn () -> Tensor[(8, 8, 4), float64] {
    %1973 = @func_7504() /* ty=(Tensor[(8, 8, 4), float64],) */;
    %1973.0
  };
  %1974() /* ty=Tensor[(8, 8, 4), float64] */
}

def @func_10963() -> (Tensor[(1296), float64], Tensor[(256), float64], Tensor[(8, 8, 4), float64]) {
  %1980 = fn () -> (Tensor[(1296), float64], Tensor[(256), float64], Tensor[(8, 8, 4), float64]) {
    %1975 = @func_6490() /* ty=(Tensor[(1296), float64],) */;
    %1976 = @func_10031() /* ty=(Tensor[(256), float64], Tensor[(1296), float64]) */;
    %1977 = %1975.0;
    %1978 = %1976.0;
    %1979 = @func_6452() /* ty=Tensor[(8, 8, 4), float64] */;
    (%1977, %1978, %1979)
  };
  %1980() /* ty=(Tensor[(1296), float64], Tensor[(256), float64], Tensor[(8, 8, 4), float64]) */
}

def @func_13551() -> Tensor[(1296), float64] {
  %1984 = fn () -> Tensor[(1296), float64] {
    %1981 = @func_6490() /* ty=(Tensor[(1296), float64],) */;
    %1982 = %1981.0;
    %1983 = cast(%1982, dtype="float64") /* ty=Tensor[(1296), float64] */;
    sinh(%1983) /* ty=Tensor[(1296), float64] */
  };
  %1984() /* ty=Tensor[(1296), float64] */
}

def @func_26674() -> (Tensor[(256), float64], Tensor[(1296), float64], Tensor[(8, 8, 4), float64]) {
  @func_26672() /* ty=(Tensor[(256), float64], Tensor[(1296), float64], Tensor[(8, 8, 4), float64]) */
}

def @func_10232() -> (Tensor[(120), float64], Tensor[(8, 8, 4), float64], Tensor[(1296), float64]) {
  %1993 = fn () -> (Tensor[(120), float64], Tensor[(8, 8, 4), float64], Tensor[(1296), float64]) {
    %1985 = @func_9111() /* ty=(Tensor[(4, 7, 5), float32], Tensor[(2, 5, 12), bool], Tensor[(120), float64]) */;
    %1986 = @func_7099() /* ty=(Tensor[(8, 8, 4), float64],) */;
    %1987 = %1986.0;
    %1988 = cast(%1987, dtype="float64") /* ty=Tensor[(8, 8, 4), float64] */;
    %1989 = reshape(%1988, newshape=[256]) /* ty=Tensor[(256), float64] */;
    %1990 = @func_10085(%1989) /* ty=(Tensor[(1296), float64], Tensor[(1296), float64], Tensor[(8, 8, 4), int32], Tensor[(256), float64]) */;
    %1991 = %1985.2;
    %1992 = %1990.1;
    (%1991, %1987, %1992)
  };
  %1993() /* ty=(Tensor[(120), float64], Tensor[(8, 8, 4), float64], Tensor[(1296), float64]) */
}

def @func_10439() -> Tensor[(1296), bool] {
  @func_9968() /* ty=Tensor[(1296), bool] */
}

/* For debugging purposes the metadata section has been omitted.
 * If you would like to see the full metadata section you can set the 
 * option to `True` when invoking `astext`. 
 */
===================================
Traceback (most recent call last):
  File "/home/yujunzhe/Hirgen_generated/tvm0.8_test/HirGen970/build/output.py", line 7493, in <module>
    graph, lib, params = relay.build(mod, target='llvm')
  File "/home/yujunzhe/tvm/python/tvm/relay/build_module.py", line 369, in build
    executor_config, runtime_mod, params = bld_mod.build(
  File "/home/yujunzhe/tvm/python/tvm/relay/build_module.py", line 177, in build
    self._build(mod, target, target_host, executor, mod_name)
  File "/home/yujunzhe/tvm/python/tvm/_ffi/_ctypes/packed_func.py", line 237, in __call__
    raise get_last_ffi_error()
tvm._ffi.base.TVMError: Traceback (most recent call last):
  79: TVMFuncCall
  78: std::_Function_handler<void (tvm::runtime::TVMArgs, tvm::runtime::TVMRetValue*), tvm::relay::backend::RelayBuildModule::GetFunction(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, tvm::runtime::ObjectPtr<tvm::runtime::Object> const&)::{lambda(tvm::runtime::TVMArgs, tvm::runtime::TVMRetValue*)#3}>::_M_invoke(std::_Any_data const&, tvm::runtime::TVMArgs&&, tvm::runtime::TVMRetValue*&&)
  77: tvm::relay::backend::RelayBuildModule::BuildRelay(tvm::IRModule, std::unordered_map<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, tvm::runtime::NDArray, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, tvm::runtime::NDArray> > > const&, tvm::runtime::String)
  76: tvm::relay::backend::RelayBuildModule::OptimizeImpl(tvm::IRModule, std::unordered_map<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, tvm::runtime::NDArray, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, tvm::runtime::NDArray> > > const&)
  75: tvm::transform::Pass::operator()(tvm::IRModule) const
  74: tvm::transform::Pass::operator()(tvm::IRModule, tvm::transform::PassContext const&) const
  73: tvm::transform::SequentialNode::operator()(tvm::IRModule, tvm::transform::PassContext const&) const
  72: tvm::transform::Pass::operator()(tvm::IRModule, tvm::transform::PassContext const&) const
  71: tvm::relay::transform::FunctionPassNode::operator()(tvm::IRModule, tvm::transform::PassContext const&) const
  70: std::_Function_handler<void (tvm::runtime::TVMArgs, tvm::runtime::TVMRetValue*), tvm::runtime::TypedPackedFunc<tvm::relay::Function (tvm::relay::Function, tvm::IRModule, tvm::transform::PassContext)>::AssignTypedLambda<tvm::relay::transform::DynamicToStatic()::{lambda(tvm::relay::Function, tvm::IRModule, tvm::transform::PassContext)#1}>(tvm::relay::transform::DynamicToStatic()::{lambda(tvm::relay::Function, tvm::IRModule, tvm::transform::PassContext)#1})::{lambda(tvm::runtime::TVMArgs const&, tvm::runtime::TVMRetValue*)#1}>::_M_invoke(std::_Any_data const&, tvm::runtime::TVMArgs&&, tvm::runtime::TVMRetValue*&&)
  69: tvm::relay::DynamicToStatic(tvm::relay::Function, tvm::IRModule)
  68: tvm::relay::DynamicToStaticMutator::PrepareInput(tvm::RelayExpr const&)
  67: tvm::transform::Pass::operator()(tvm::IRModule) const
  66: tvm::transform::Pass::operator()(tvm::IRModule, tvm::transform::PassContext const&) const
  65: tvm::relay::transform::FunctionPassNode::operator()(tvm::IRModule, tvm::transform::PassContext const&) const
  64: std::_Function_handler<void (tvm::runtime::TVMArgs, tvm::runtime::TVMRetValue*), tvm::runtime::TypedPackedFunc<tvm::relay::Function (tvm::relay::Function, tvm::IRModule, tvm::transform::PassContext)>::AssignTypedLambda<tvm::relay::transform::FoldConstant()::{lambda(tvm::relay::Function, tvm::IRModule, tvm::transform::PassContext)#1}>(tvm::relay::transform::FoldConstant()::{lambda(tvm::relay::Function, tvm::IRModule, tvm::transform::PassContext)#1})::{lambda(tvm::runtime::TVMArgs const&, tvm::runtime::TVMRetValue*)#1}>::_M_invoke(std::_Any_data const&, tvm::runtime::TVMArgs&&, tvm::runtime::TVMRetValue*&&)
  63: tvm::relay::transform::FoldConstantExpr(tvm::RelayExpr const&, tvm::IRModule const&)
  62: tvm::relay::MixedModeMutator::VisitExpr(tvm::RelayExpr const&)
  61: tvm::relay::MixedModeMutator::VisitLeaf(tvm::RelayExpr const&)
  60: _ZN3tvm5relay1
  59: tvm::relay::ExprMutator::VisitExpr(tvm::RelayExpr const&)
  58: tvm::relay::ExprFunctor<tvm::RelayExpr (tvm::RelayExpr const&)>::VisitExpr(tvm::RelayExpr const&)
  57: _ZZN3tvm5relay11ExprFunc
  56: tvm::relay::transform::(anonymous namespace)::ConstantFolder::VisitExpr_(tvm::relay::FunctionNode const*)
  55: tvm::relay::ExprMutator::VisitExpr_(tvm::relay::FunctionNode const*)
  54: tvm::relay::MixedModeMutator::VisitExpr(tvm::RelayExpr const&)
  53: tvm::relay::MixedModeMutator::VisitLeaf(tvm::RelayExpr const&)
  52: _ZN3tvm5relay1
  51: tvm::relay::ExprMutator::VisitExpr(tvm::RelayExpr const&)
  50: tvm::relay::ExprFunctor<tvm::RelayExpr (tvm::RelayExpr const&)>::VisitExpr(tvm::RelayExpr const&)
  49: _ZZN3tvm5relay11ExprFunc
  48: tvm::relay::MixedModeMutator::VisitExpr_(tvm::relay::CallNode const*)
  47: tvm::relay::transform::(anonymous namespace)::ConstantFolder::Rewrite_(tvm::relay::CallNode const*, tvm::RelayExpr const&)
  46: tvm::relay::transform::(anonymous namespace)::ConstantFolder::ConstEvaluate(tvm::RelayExpr const&)
  45: tvm::relay::Eval(tvm::RelayExpr, tvm::runtime::Map<tvm::GlobalTypeVar, tvm::TypeData, void, void>, std::unordered_set<tvm::runtime::String, std::hash<tvm::runtime::String>, std::equal_to<tvm::runtime::String>, std::allocator<tvm::runtime::String> >, DLDevice, tvm::Target)
  44: tvm::relay::Prepare(tvm::IRModule, tvm::CompilationConfig)
  43: tvm::transform::Pass::operator()(tvm::IRModule) const
  42: tvm::transform::Pass::operator()(tvm::IRModule, tvm::transform::PassContext const&) const
  41: tvm::transform::SequentialNode::operator()(tvm::IRModule, tvm::transform::PassContext const&) const
  40: tvm::transform::Pass::operator()(tvm::IRModule, tvm::transform::PassContext const&) const
  39: tvm::transform::SequentialNode::operator()(tvm::IRModule, tvm::transform::PassContext const&) const
  38: tvm::transform::Pass::operator()(tvm::IRModule, tvm::transform::PassContext const&) const
  37: tvm::transform::ModulePassNode::operator()(tvm::IRModule, tvm::transform::PassContext const&) const
  36: std::_Function_handler<void (tvm::runtime::TVMArgs, tvm::runtime::TVMRetValue*), tvm::runtime::TypedPackedFunc<tvm::IRModule (tvm::IRModule, tvm::transform::PassContext)>::AssignTypedLambda<tvm::relay::tec::LowerTEPass(std::unordered_map<DLDeviceType, tvm::Target, tvm::relay::backend::EnumClassHash, std::equal_to<DLDeviceType>, std::allocator<std::pair<DLDeviceType const, tvm::Target> > >, tvm::runtime::String const&, std::function<void (tvm::relay::Function)>)::{lambda(tvm::IRModule, tvm::transform::PassContext)#1}>(tvm::relay::tec::LowerTEPass(std::unordered_map<DLDeviceType, tvm::Target, tvm::relay::backend::EnumClassHash, std::equal_to<DLDeviceType>, std::allocator<std::pair<DLDeviceType const, tvm::Target> > >, tvm::runtime::String const&, std::function<void (tvm::relay::Function)>)::{lambda(tvm::IRModule, tvm::transform::PassContext)#1})::{lambda(tvm::runtime::TVMArgs const&, tvm::runtime::TVMRetValue*)#1}>::_M_invoke(std::_Any_data const&, tvm::runtime::TVMArgs&&, tvm::runtime::TVMRetValue*&&)
  35: tvm::relay::tec::LowerTE(tvm::IRModule const&, std::unordered_map<DLDeviceType, tvm::Target, tvm::relay::backend::EnumClassHash, std::equal_to<DLDeviceType>, std::allocator<std::pair<DLDeviceType const, tvm::Target> > >, tvm::runtime::String const&, std::function<void (tvm::relay::Function)>)
  34: tvm::transform::Pass::operator()(tvm::IRModule) const
  33: tvm::transform::Pass::operator()(tvm::IRModule, tvm::transform::PassContext const&) const
  32: tvm::relay::transform::FunctionPassNode::operator()(tvm::IRModule, tvm::transform::PassContext const&) const
  31: tvm::runtime::TypedPackedFunc<tvm::relay::Function (tvm::relay::Function, tvm::IRModule, tvm::transform::PassContext)>::AssignTypedLambda<tvm::relay::tec::LowerTensorExpr(std::unordered_map<DLDeviceType, tvm::Target, tvm::relay::backend::EnumClassHash, std::equal_to<DLDeviceType>, std::allocator<std::pair<DLDeviceType const, tvm::Target> > >, tvm::runtime::String const&, tvm::relay::tec::TECompiler, std::function<void (tvm::relay::Function)>)::{lambda(tvm::relay::Function, tvm::IRModule, tvm::transform::PassContext)#1}>(tvm::relay::tec::LowerTensorExpr(std::unordered_map<DLDeviceType, tvm::Target, tvm::relay::backend::EnumClassHash, std::equal_to<DLDeviceType>, std::allocator<std::pair<DLDeviceType const, tvm::Target> > >, tvm::runtime::String const&, tvm::relay::tec::TECompiler, std::function<void (tvm::relay::Function)>)::{lambda(tvm::relay::Function, tvm::IRModule, tvm::transform::PassContext)#1})::{lambda(tvm::runtime::TVMArgs const&, tvm::runtime::TVMRetValue*)#1}::operator()(tvm::runtime::TVMArgs const&, tvm::runtime::TVMRetValue*) const
  30: tvm::relay::ExprMutator::VisitExpr(tvm::RelayExpr const&)
  29: tvm::relay::ExprFunctor<tvm::RelayExpr (tvm::RelayExpr const&)>::VisitExpr(tvm::RelayExpr const&)
  28: _ZZN3tvm5relay11ExprFunc
  27: tvm::relay::transform::DeviceAwareExprMutator::VisitExpr_(tvm::relay::FunctionNode const*)
  26: tvm::relay::tec::LowerTensorExprMutator::DeviceAwareVisitExpr_(tvm::relay::FunctionNode const*)
  25: _ZN3tvm5relay9
  24: tvm::relay::ExprMutator::VisitExpr_(tvm::relay::FunctionNode const*)
  23: tvm::relay::ExprMutator::VisitExpr(tvm::RelayExpr const&)
  22: tvm::relay::ExprFunctor<tvm::RelayExpr (tvm::RelayExpr const&)>::VisitExpr(tvm::RelayExpr const&)
  21: _ZZN3tvm5relay11ExprFunc
  20: tvm::relay::transform::DeviceAwareExprMutator::VisitExpr_(tvm::relay::LetNode const*)
  19: tvm::relay::tec::LowerTensorExprMutator::PreVisitLetBinding_(tvm::relay::Var const&, tvm::RelayExpr const&)
  18: tvm::relay::ExprMutator::VisitExpr(tvm::RelayExpr const&)
  17: tvm::relay::ExprFunctor<tvm::RelayExpr (tvm::RelayExpr const&)>::VisitExpr(tvm::RelayExpr const&)
  16: _ZZN3tvm5relay11ExprFunc
  15: tvm::relay::transform::DeviceAwareExprMutator::VisitExpr_(tvm::relay::CallNode const*)
  14: tvm::relay::ExprMutator::VisitExpr(tvm::RelayExpr const&)
  13: tvm::relay::ExprFunctor<tvm::RelayExpr (tvm::RelayExpr const&)>::VisitExpr(tvm::RelayExpr const&)
  12: _ZZN3tvm5relay11ExprFunc
  11: tvm::relay::transform::DeviceAwareExprMutator::VisitExpr_(tvm::relay::CallNode const*)
  10: tvm::relay::tec::LowerTensorExprMutator::DeviceAwareVisitExpr_(tvm::relay::CallNode const*)
  9: tvm::relay::tec::LowerTensorExprMutator::MakeLoweredCall(tvm::relay::Function, tvm::runtime::Array<tvm::RelayExpr, void>, tvm::runtime::Array<tvm::Type, void>, tvm::Span, tvm::Target)
  8: tvm::relay::tec::TECompilerImpl::LowerShapeFuncInternal(tvm::relay::tec::CCacheKey const&)
  7: tvm::relay::tec::ShapeFuncFor(tvm::relay::Function const&, tvm::Target const&, std::function<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > (std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >)>)
  6: tvm::relay::tec::MakeShapeFunc::Create(tvm::relay::Function const&, tvm::Target const&, std::function<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > (std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >)>)
  5: tvm::relay::tec::MakeShapeFunc::VisitExpr(tvm::RelayExpr const&)
  4: tvm::relay::backend::MemoizedExprTranslator<tvm::runtime::Array<tvm::te::Tensor, void> >::VisitExpr(tvm::RelayExpr const&)
  3: tvm::relay::ExprFunctor<tvm::runtime::Array<tvm::te::Tensor, void> (tvm::RelayExpr const&)>::VisitExpr(tvm::RelayExpr const&)
  2: _ZZN3tvm5relay11ExprFunc
  1: tvm::relay::tec::MakeShapeFunc::VisitExpr_(tvm::relay::CallNode const*)
  0: std::_Function_handler<void (tvm::runtime::TVMArgs, tvm::runtime::TVMRetValue*), TVMFuncCreateFromCFunc::{lambda(tvm::runtime::TVMArgs, tvm::runtime::TVMRetValue*)#2}>::_M_invoke(std::_Any_data const&, tvm::runtime::TVMArgs&&, tvm::runtime::TVMRetValue*&&) [clone .cold]
  File "/home/yujunzhe/tvm/python/tvm/_ffi/_ctypes/packed_func.py", line 81, in cfun
    rv = local_pyfunc(*pyargs)
  File "/home/yujunzhe/tvm/python/tvm/relay/op/dyn/_transform.py", line 92, in dynamic_reshape_shape_func
    return [_reshape_shape_func_input_data(*inputs, out_ndims[0])]
  File "/home/yujunzhe/.local/lib/python3.9/site-packages/decorator.py", line 232, in fun
    return caller(func, *(extras + args), **kw)
  File "/home/yujunzhe/tvm/python/tvm/te/hybrid/__init__.py", line 60, in wrapped_func
    return source_to_op(src, args, func.__globals__, closure_vars)
  File "/home/yujunzhe/tvm/python/tvm/te/hybrid/parser.py", line 634, in source_to_op
    parser = parse_python(src, args, symbols, closure_vars)
  File "/home/yujunzhe/tvm/python/tvm/te/hybrid/parser.py", line 604, in parse_python
    parser.parsed_body = parser.visit(root)
  File "/home/yujunzhe/anaconda3/envs/tvm0.8/lib/python3.9/ast.py", line 409, in visit
    return visitor(node)
  File "/home/yujunzhe/tvm/python/tvm/te/hybrid/parser.py", line 229, in visit_Module
    return self.visit(node.body[0])
  File "/home/yujunzhe/anaconda3/envs/tvm0.8/lib/python3.9/ast.py", line 409, in visit
    return visitor(node)
  File "/home/yujunzhe/tvm/python/tvm/te/hybrid/parser.py", line 242, in visit_FunctionDef
    res = visit_list_to_block(self.visit, node.body)
  File "/home/yujunzhe/tvm/python/tvm/te/hybrid/parser.py", line 58, in visit_list_to_block
    lst = [visit(stmt) for stmt in lst if not utils.is_docstring(stmt)]
  File "/home/yujunzhe/tvm/python/tvm/te/hybrid/parser.py", line 58, in <listcomp>
    lst = [visit(stmt) for stmt in lst if not utils.is_docstring(stmt)]
  File "/home/yujunzhe/anaconda3/envs/tvm0.8/lib/python3.9/ast.py", line 409, in visit
    return visitor(node)
  File "/home/yujunzhe/tvm/python/tvm/te/hybrid/parser.py", line 506, in visit_For
    body = visit_list_to_block(self.visit, node.body)
  File "/home/yujunzhe/tvm/python/tvm/te/hybrid/parser.py", line 58, in visit_list_to_block
    lst = [visit(stmt) for stmt in lst if not utils.is_docstring(stmt)]
  File "/home/yujunzhe/tvm/python/tvm/te/hybrid/parser.py", line 58, in <listcomp>
    lst = [visit(stmt) for stmt in lst if not utils.is_docstring(stmt)]
  File "/home/yujunzhe/anaconda3/envs/tvm0.8/lib/python3.9/ast.py", line 409, in visit
    return visitor(node)
  File "/home/yujunzhe/tvm/python/tvm/te/hybrid/parser.py", line 419, in visit_If
    else_body = visit_list_to_block(self.visit, node.orelse)
  File "/home/yujunzhe/tvm/python/tvm/te/hybrid/parser.py", line 58, in visit_list_to_block
    lst = [visit(stmt) for stmt in lst if not utils.is_docstring(stmt)]
  File "/home/yujunzhe/tvm/python/tvm/te/hybrid/parser.py", line 58, in <listcomp>
    lst = [visit(stmt) for stmt in lst if not utils.is_docstring(stmt)]
  File "/home/yujunzhe/anaconda3/envs/tvm0.8/lib/python3.9/ast.py", line 409, in visit
    return visitor(node)
  File "/home/yujunzhe/tvm/python/tvm/te/hybrid/parser.py", line 406, in visit_If
    cond = self.analyzer.simplify(self.visit(node.test))
  File "/home/yujunzhe/anaconda3/envs/tvm0.8/lib/python3.9/ast.py", line 409, in visit
    return visitor(node)
  File "/home/yujunzhe/tvm/python/tvm/te/hybrid/parser.py", line 432, in visit_Compare
    ops = [self.visit(node.left)]
  File "/home/yujunzhe/anaconda3/envs/tvm0.8/lib/python3.9/ast.py", line 409, in visit
    return visitor(node)
  File "/home/yujunzhe/tvm/python/tvm/te/hybrid/parser.py", line 389, in visit_Subscript
    return tvm.tir.ProducerLoad(arr, args)
  File "/home/yujunzhe/tvm/python/tvm/tir/expr.py", line 1078, in __init__
    self.__init_handle_by_constructor__(
  File "/home/yujunzhe/tvm/python/tvm/_ffi/_ctypes/object.py", line 136, in __init_handle_by_constructor__
    handle = __init_by_constructor__(fconstructor, args)
  File "/home/yujunzhe/tvm/python/tvm/_ffi/_ctypes/packed_func.py", line 260, in __init_handle_by_constructor__
    raise get_last_ffi_error()
  3: TVMFuncCall
  2: std::_Function_handler<void (tvm::runtime::TVMArgs, tvm::runtime::TVMRetValue*), tvm::runtime::TypedPackedFunc<tvm::tir::ProducerLoad (tvm::tir::DataProducer, tvm::runtime::Array<tvm::PrimExpr, void>, tvm::Span)>::AssignTypedLambda<tvm::tir::__mk_TVM137::{lambda(tvm::tir::DataProducer, tvm::runtime::Array<tvm::PrimExpr, void>, tvm::Span)#1}>(tvm::tir::__mk_TVM137::{lambda(tvm::tir::DataProducer, tvm::runtime::Array<tvm::PrimExpr, void>, tvm::Span)#1}, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >)::{lambda(tvm::runtime::TVMArgs const&, tvm::runtime::TVMRetValue*)#1}>::_M_invoke(std::_Any_data const&, tvm::runtime::TVMArgs&&, tvm::runtime::TVMRetValue*&&)
  1: tvm::runtime::TVMMovableArgValueWithContext_::operator tvm::runtime::Array<tvm::PrimExpr, void><tvm::runtime::Array<tvm::PrimExpr, void> >() const
  0: _ZN3tvm7runtime6deta
  4: TVMFuncCall
  3: std::_Function_handler<void (tvm::runtime::TVMArgs, tvm::runtime::TVMRetValue*), tvm::runtime::TypedPackedFunc<tvm::tir::ProducerLoad (tvm::tir::DataProducer, tvm::runtime::Array<tvm::PrimExpr, void>, tvm::Span)>::AssignTypedLambda<tvm::tir::__mk_TVM137::{lambda(tvm::tir::DataProducer, tvm::runtime::Array<tvm::PrimExpr, void>, tvm::Span)#1}>(tvm::tir::__mk_TVM137::{lambda(tvm::tir::DataProducer, tvm::runtime::Array<tvm::PrimExpr, void>, tvm::Span)#1}, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >)::{lambda(tvm::runtime::TVMArgs const&, tvm::runtime::TVMRetValue*)#1}>::_M_invoke(std::_Any_data const&, tvm::runtime::TVMArgs&&, tvm::runtime::TVMRetValue*&&)
  2: tvm::runtime::TVMMovableArgValueWithContext_::operator tvm::runtime::Array<tvm::PrimExpr, void><tvm::runtime::Array<tvm::PrimExpr, void> >() const
  1: tvm::runtime::Array<tvm::PrimExpr, void> tvm::runtime::TVMPODValue_::AsObjectRef<tvm::runtime::Array<tvm::PrimExpr, void> >() const
  0: _ZN3tvm7runtime6deta
  File "/home/yujunzhe/tvm/include/tvm/runtime/packed_func.h", line 714
TVMError: In function tir.ProducerLoad: error while converting argument 1: [15:06:28] /home/yujunzhe/tvm/include/tvm/runtime/packed_func.h:1611: 
---------------------------------------------------------------
An error occurred during the execution of TVM.
For more information, please see: https://tvm.apache.org/docs/errors.html
---------------------------------------------------------------

  Check failed: type_code_ == kTVMObjectHandle (0 vs. 8) : expected Object but got int


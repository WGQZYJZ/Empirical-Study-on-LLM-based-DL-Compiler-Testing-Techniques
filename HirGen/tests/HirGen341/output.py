import tvm
from tvm import relay
from tvm.ir.transform import Sequential
from tvm.contrib import graph_runtime
import numpy as np
mod = tvm.IRModule()
mutated_mod = tvm.IRModule()
var_137 = relay.var("var_137", dtype = "float32", shape = (9, 14, 11))#candidate|137|(9, 14, 11)|var|float32
uop_138 = relay.log10(var_137.astype('float32')) # shape=(9, 14, 11)
bop_140 = relay.maximum(uop_138.astype('float32'), relay.reshape(var_137.astype('float32'), relay.shape_of(uop_138))) # shape=(9, 14, 11)
output = relay.Tuple([bop_140,])
output2 = relay.Tuple([bop_140,])
func_148 = relay.Function([var_137,], output)
mod['func_148'] = func_148
mod = relay.transform.InferType()(mod)
var_149 = relay.var("var_149", dtype = "float32", shape = (9, 14, 11))#candidate|149|(9, 14, 11)|var|float32
output = func_148(var_149)
func_150 = relay.Function([var_149], output)
mutated_mod['func_150'] = func_150
mutated_mod = relay.transform.InferType()(mutated_mod)
var_247 = relay.var("var_247", dtype = "float32", shape = (9, 1, 11))#candidate|247|(9, 1, 11)|var|float32
uop_248 = relay.sin(var_247.astype('float32')) # shape=(9, 1, 11)
output = uop_248
output2 = uop_248
func_252 = relay.Function([var_247,], output)
mod['func_252'] = func_252
mod = relay.transform.InferType()(mod)
var_253 = relay.var("var_253", dtype = "float32", shape = (9, 1, 11))#candidate|253|(9, 1, 11)|var|float32
output = func_252(var_253)
func_254 = relay.Function([var_253], output)
mutated_mod['func_254'] = func_254
mutated_mod = relay.transform.InferType()(mutated_mod)
const_706 = relay.const([[1.597582,8.465433,-7.207618,-2.959466,8.765086,-8.260081,3.933860,-2.940126],[8.814834,-8.247223,5.859264,3.408822,1.869705,-1.214655,-2.097300,-2.672570]], dtype = "float64")#candidate|706|(2, 8)|const|float64
uop_707 = relay.sinh(const_706.astype('float64')) # shape=(2, 8)
output = uop_707
output2 = uop_707
func_749 = relay.Function([], output)
mod['func_749'] = func_749
mod = relay.transform.InferType()(mod)
mutated_mod['func_749'] = func_749
mutated_mod = relay.transform.InferType()(mutated_mod)
func_749_call = mutated_mod.get_global_var('func_749')
call_750 = func_749_call()
output = call_750
func_751 = relay.Function([], output)
mutated_mod['func_751'] = func_751
mutated_mod = relay.transform.InferType()(mutated_mod)
func_749_call = mod.get_global_var('func_749')
func_751_call = mutated_mod.get_global_var('func_751')
call_812 = func_749_call()
call_813 = func_749_call()
func_252_call = mod.get_global_var('func_252')
func_254_call = mutated_mod.get_global_var('func_254')
const_815 = relay.const([-7.684386,-0.509977,6.897295,-8.328717,-5.600801,-0.712824,-5.438441,-1.215677,-8.919850,-3.860101,-5.468108,-9.061194,-2.798337,7.630236,-7.311944,-7.683175,-3.735578,0.276528,6.191135,-0.148545,4.237047,4.664607,9.495879,8.283344,3.867335,5.783873,-5.607683,-4.802440,-5.872846,2.420200,-8.662617,-7.411012,-9.399036,-2.289464,3.676754,8.037254,-6.372050,9.046372,-3.219836,6.122722,-8.803294,4.914579,9.244175,2.615326,3.478829,-1.532235,-3.621336,1.113953,-5.752465,5.542804,-5.839500,6.787272,0.749794,8.698337,4.216732,6.968829,2.454596,-3.527897,-3.204360,-7.080231,-7.435378,1.540029,9.010123,9.349867,-0.950014,-3.236079,0.221733,6.494800,-1.100352,5.639677,-9.843626,9.441641,3.247732,-8.252817,2.005458,-4.996990,1.876778,-1.651092,-5.449341,7.108863,-2.184776,7.903249,0.356719,-7.827691,6.317889,7.229890,-7.000566,8.523376,-6.956461,2.264006,0.717458,-6.281468,1.105966,8.063764,-6.391413,3.321210,-5.336754,8.107799,9.236440], dtype = "float32")#candidate|815|(99,)|const|float32
call_814 = func_252_call(relay.reshape(const_815.astype('float32'), [9, 1, 11]))
call_816 = func_252_call(relay.reshape(const_815.astype('float32'), [9, 1, 11]))
output = relay.Tuple([call_812,call_814,const_815,])
output2 = relay.Tuple([call_813,call_816,const_815,])
func_820 = relay.Function([], output)
mod['func_820'] = func_820
mod = relay.transform.InferType()(mod)
output = func_820()
func_821 = relay.Function([], output)
mutated_mod['func_821'] = func_821
mutated_mod = relay.transform.InferType()(mutated_mod)
func_820_call = mod.get_global_var('func_820')
func_821_call = mutated_mod.get_global_var('func_821')
call_989 = relay.TupleGetItem(func_820_call(), 2)
call_990 = relay.TupleGetItem(func_821_call(), 2)
func_820_call = mod.get_global_var('func_820')
func_821_call = mutated_mod.get_global_var('func_821')
call_1003 = relay.TupleGetItem(func_820_call(), 1)
call_1004 = relay.TupleGetItem(func_821_call(), 1)
func_148_call = mod.get_global_var('func_148')
func_150_call = mutated_mod.get_global_var('func_150')
const_1019 = relay.const([1.740213,-9.097104,2.559143,-1.972829,1.992947,3.117242,-8.093470,-5.645625,3.336018,-1.240713,-0.403389,9.859379,1.358747,6.208191,1.857919,2.411852,2.245680,8.245483,8.533865,8.948991,-1.903916,7.608049,1.640074,2.107786,-5.418475,1.359374,5.948464,-7.319151,4.491856,6.453847,2.262019,-0.752439,5.192056,7.485635,3.278437,5.511941,3.337731,9.275612,-8.175751,7.004173,-9.894334,1.394815,0.533312,-8.938548,4.442845,-9.255996,-0.238492,-5.757460,-5.609141,-0.184759,-4.634971,-7.795978,-2.958036,-7.523770,-2.852876,-8.151181,-1.175779,-1.720204,5.544397,4.732272,-9.729502,5.395727,-9.589495,-8.155461,9.226217,-3.180262,-5.372478,0.126709,-5.130577,-1.801491,1.416804,-6.851987,-3.859139,-7.120128,8.350486,5.551257,2.194855,9.031074,-3.284814,-2.124055,-9.723789,6.123527,6.742721,-6.079366,-8.221938,-9.731688,3.908610,0.860864,3.039346,5.398470,5.223589,9.685964,-7.459097,-9.892976,-3.906840,-2.344937,-6.537504,-8.757097,2.060765,8.356401,9.333030,5.662314,-3.027505,-7.713652,-7.674498,9.830326,-1.324903,-0.264695,5.761469,7.778393,-0.598389,-5.850331,8.596680,-5.552518,7.734402,-9.485696,-9.538011,0.597838,6.531929,-7.301099,-2.890639,8.269937,-4.317341,3.397271,7.515016,-8.821596,-2.683584,-9.791950,0.654478,-6.448020,-7.291843,0.447318,9.927452,-7.121835,-7.015555,-7.066175,-8.947189,-2.143112,-0.251237,-9.967586,-6.146847,1.783779,1.241433,4.494594,-4.078905,-2.573994,-2.948084,5.411272,-5.763673,-7.670192,1.278230,2.467448,0.959616,-6.280837,2.102294,9.568602,0.121047,6.135360,-2.529586,2.401085,-7.279361,1.611198,6.538475,-0.361056,-1.671188,0.977970,-7.893889,4.044388,-0.797766,2.640393,-3.561391,0.995627,6.961763,0.560304,2.395229,-5.624159,-3.841128,9.434962,9.222752,3.715786,-7.322631,4.408190,-9.875464,-2.288880,-1.177274,-1.273635,-4.800884,0.750865,-2.797512,4.723782,1.105211,-0.188266,-8.391993,-8.156485,3.291318,8.049805,-6.727195,-4.524253,-5.347758,9.124237,-1.540199,8.862323,1.430470,-9.517188,7.754154,-9.673221,-8.749572,-2.038845,-6.219331,-9.687850,9.851846,7.257861,-9.433277,-2.278154,3.620452,6.315598,3.864445,-2.803526,9.675306,8.754910,4.661385,-3.014639,-5.747271,-0.249275,5.834753,-9.695005,-1.779840,-8.628443,-7.830458,7.410611,-3.124072,5.554031,-3.805160,-5.568205,2.883862,-3.246420,0.690862,-0.726560,-8.268213,-3.335626,7.994411,-0.506913,0.009439,-1.993136,4.824239,2.866884,-7.389245,6.903171,-1.646761,2.498824,4.374153,-4.517472,-6.147112,-8.634185,8.352216,-3.887137,-7.997037,8.803804,1.303065,1.133586,2.397511,-7.749335,4.585293,-0.191637,1.923284,6.932347,-7.227446,-2.147695,-0.298659,1.113967,2.823594,-4.847609,-3.337121,0.622411,3.440023,-4.725162,8.628480,9.459874,-5.247208,0.811869,2.224366,1.440572,-0.518152,-5.025432,-0.909622,0.671476,4.865008,6.301336,6.204594,8.626345,0.132532,4.772280,-9.586409,-6.950075,3.119080,-3.413120,-1.694557,-2.094350,0.312924,-1.058273,-2.075343,-6.889830,2.076328,1.039834,-4.468831,-4.963632,-4.741216,6.340824,-2.553655,7.329843,3.531187,-6.633138,6.712381,-0.851282,3.065388,9.762550,-1.786434,7.264058,9.613592,-6.813823,7.049942,-9.385994,5.185184,-9.975012,6.025547,3.381646,4.264022,-5.791021,-8.708898,-0.183875,4.162151,9.581282,9.308635,-8.183890,9.877010,-6.503395,7.710013,-7.988671,-0.427278,-1.137140,-9.703543,-2.357021,8.355868,8.395142,-8.013308,1.785333,3.312247,0.402285,4.023179,6.714410,6.475101,7.273268,-9.229178,8.289234,-4.920992,-8.656690,8.252026,-2.090815,-8.635709,-4.455684,0.885027,-6.362563,-5.300349,2.984530,5.559375,-7.792507,6.749223,3.702130,7.653766,-2.427835,-4.723705,-6.927380,-4.481829,-9.050249,-9.837678,7.269877,-8.042879,-5.460213,7.211040,-9.067227,4.844100,4.537468,-0.977410,-1.742802,5.867746,9.175036,-2.400833,7.158052,5.533703,9.009524,-4.211665,2.036543,-0.046802,3.469949,-0.867351,2.180723,-8.256845,-4.356817,7.476613,-9.360940,6.782044,8.873430,-1.086618,-2.269135,-6.583230,7.625948,-9.213925,-7.065337,1.195577,5.783251,5.451040,1.384273,1.670640,0.350616,-5.247292,-2.412002,8.336350,5.010581,-1.094583,5.593800,7.086599,-4.522728,-0.389352,2.189202,-7.190797,2.939377,4.383808,-9.016846,-5.629982,9.119701,2.039071,-8.721144,7.310016,-6.279447,-8.841937,2.442932,7.724810,7.390095,-9.614613,3.403835,1.953379,-5.519127,8.241152,-5.845666,-2.065134,-6.634805,7.177461,8.513423,2.275659,-3.566467,4.074678,0.688892,5.932328,-9.839457,6.117146,5.329942,-3.485004,4.849080,-8.510994,1.142127,-5.696760,-9.966049,7.419858,-0.707209,-2.341613,-3.826319,-8.482471,-2.096173,-1.006779,4.009129,-0.590534,8.189266,3.630017,-0.848684,-7.002978,-1.776294,5.983409,-2.063662,-4.050447,1.969416,7.804375,6.191860,-6.943096,-7.546059,-5.811434,-9.357581,-3.176675,-9.672560,4.505925,5.167966,-3.818783,-3.315216,-2.003431,-7.320801,7.831554,3.092057,2.569982,5.819446,-5.639130,5.274411,5.305620,1.825054,8.457724,3.979316,-7.710884,-2.049183,9.671001,1.608119,0.553853,-0.055839,3.000036,0.152762,-0.450781,-6.393478,-7.036840,-9.295742,-8.286077,1.449631,0.211444,-8.404050,6.345299,-6.671154,0.146184,7.205509,-3.407849,7.134962,7.644102,-3.039160,4.389744,2.519950,-1.335012,-9.013748,0.110164,-2.188026,-9.882792,2.160290,7.898022,-9.759337,3.109193,1.009036,-3.780511,9.182476,-3.552226,4.464366,3.967643,6.579201,-3.449750,-4.264160,-4.901627,-8.610950,1.263630,-1.088927,-2.499669,3.209755,-8.747898,8.227834,9.158603,0.921271,-6.502541,-9.387413,6.875320,-4.756162,2.985756,2.097938,2.160863,-8.735724,6.220653,-3.350051,-2.378186,0.098006,-3.692915,1.715161,-4.153946,7.610224,5.577464,-0.337586,-9.822163,8.698802,4.977616,7.198056,-7.843964,8.028369,-0.828984,0.829000,3.885198,-5.050357,2.731053,9.517944,-2.990291,0.090672,-0.301558,-8.823172,-6.728312,-2.931048,-8.588782,-5.303096,-4.264731,4.140346,3.025549,2.450451,0.950389,1.276584,7.878022,-6.166998,1.601733,7.020134,3.784308,-1.365176,9.085639,3.902523,-8.117458,6.167055,2.644465,-3.566423,4.002029,2.118745,4.772445,-5.972487,-4.256726,-1.052214,-0.864308,9.753117,4.662006,6.868981,2.358902,-8.634473,-1.806447,-0.645537,-1.269117,6.867856,-4.605116,5.525516,1.901612,-2.932008,-9.340601,6.411861,-8.552166,6.612214,0.909214,2.126110,2.484347,-6.942085,2.772024,-5.815527,6.673678,0.214180,-8.722040,7.618217,-4.611491,2.885811,-8.482499,5.569845,-4.763138,-0.056548,7.539946,-3.140005,-0.326415,4.347464,1.151808,6.107623,9.895228,-7.237793,1.034641,0.769586,7.166065,9.415183,6.882955,-1.242530,3.506661,9.636243,-3.920462,1.461109,8.325835,-8.421780,-8.601877,5.147407,5.091758,-3.964975,-7.003364,-0.741012,-8.115814,0.124334,9.248266,0.413421,7.820820,6.264161,-1.765503,-9.123665,6.608597,-1.988391,-2.538623,8.626878,6.970832,6.714795,0.860981,8.437720,3.814389,-1.375943,3.984401,3.759535,-2.656464,-4.138467,1.788970,-0.236827,-3.281231,3.196040,1.683123,-7.845071,-9.152262,-3.323193,3.821336,7.438026,-7.969611,9.194522,-7.238118,-3.861877,-3.744885,0.503313,4.045085,-6.126452,8.705448,7.483536,4.110899,7.322633,0.514492,3.866947,-7.498497,1.368626,-4.204804,-7.799264,4.337576,-1.987254,0.293486,6.808002,3.014070,-2.721686,0.048583,1.907034,5.418493,-1.488586,-3.686863,-1.183765,1.627614,-2.529707,-4.699677,-4.177720,5.650952,5.680946,-5.626988,-6.250106,3.935524,-6.689654,-9.793745,3.633990,2.793094,-6.710089,3.329184,-4.770237,-7.143365,0.429977,2.137425,-6.045793,-9.140761,3.053269,-6.223513,-3.212989,0.145005,7.158854,9.683675,8.430448,-6.813596,-1.560705,-6.504699,-2.364195,8.000418,-6.183914,3.649463,-2.617263,-9.574608,7.639129,3.630365,-7.950357,-4.698732,-7.422614,-6.722287,-6.490530,7.692869,0.529900,7.994888,-2.596992,2.955492,0.380772,6.200038,-5.534807,-4.377880,-3.176116,8.351647,-1.705470,-0.226836,7.841363,-4.374807,-3.929612,9.673344,-7.353708,4.288742,5.708475,9.218493,-0.469054,-9.236890,-4.843829,-7.197372,-9.372960,-9.735380,5.561925,2.226264,2.424819,7.060969,8.575507,0.611519,7.995921,-4.086794,5.468699,-6.056672,-8.149999,-1.504762,5.575262,-8.230383,6.215730,-5.798198,8.984363,2.481440,8.578758,-3.091104,1.924473,-9.269046,1.489867,-3.565534,-6.195503,-5.780939,3.048520,-7.854883,1.922604,0.120058,5.930495,6.199868,6.721264,6.030020,1.060749,-1.417397,-3.348756,-5.730901,9.027425,-2.834336,5.084828,8.875566,-7.510267,8.225090,-4.224100,-1.373455,-7.279728,-8.587205,-4.703721,-1.436968,-6.297929,0.492260,-2.403756,-4.097954,-2.092485,0.881557,4.852152,-4.129612,-8.280374,7.561366,-2.384193,-9.746960,4.606770,0.365681,1.004376,-0.858280,-5.170018,-6.192789,8.406552,-6.062766,4.413757,5.285355,-5.885944,-3.853234,6.966800,2.470497,4.270001,-2.034774,0.373218,7.781686,1.590484,-6.718687,6.396045,-0.729836,6.886177,-8.681313,7.790415,8.325551,9.816935,-0.694923,7.695084,6.434065,-2.929672,4.390675,2.277257,-0.670710,-8.023534,-0.114405,3.916988,-2.410813,5.806964,6.754952,-1.240797,0.694766,9.495121,-5.676186,9.604182,7.150068,1.482290,7.613854,8.712195,-6.976829,-1.067101,8.559045,8.533336,-5.141778,-5.136386,2.282757,-0.424195,0.356903,3.399511,-6.376858,7.205219,-7.844866,4.546845,5.491136,4.999912,-5.216049,-0.787275,7.044740,-6.358216,-2.130948,7.488110,3.411425,-1.727799,7.995613,3.120473,4.390217,-7.603958,9.843146,1.881656,-2.329773,-4.592131,0.993487,1.027272,2.640233,-2.826494,-6.207985,5.925831,-6.328390,-3.700350,2.143555,4.264174,-1.376723,-5.943657,7.666101,-4.537740,-7.609732,5.994671,9.289445,-3.184488,-2.143665,3.363877,2.965483,-5.715867,-5.383840,8.721284,-9.827318,-9.619480,-6.239610,6.175943,9.170571,-5.154241,-6.516381,0.299843,-1.319218,-4.905228,-7.547378,4.280596,1.415598,0.411915,6.930710,0.204479,-6.475790,-0.412277,2.394658,-0.797493,-7.138804,-7.363926,-0.570806,-8.318941,-3.003724,3.412997,-4.666349,-5.766393,7.621138,-3.991941,-3.460340,-2.707871,0.208049,-9.153940,-3.571983,3.301744,9.839818,-5.915983,7.942716,-3.402703,8.358887,5.771959,-3.420463,8.728604,3.460346,-2.258313,-4.234314,-7.349224,-0.778923,-6.294770,-9.702341,0.799757,5.920034,4.619941,-0.657340,-6.956293,-4.412709,-9.591000,1.081470,-6.220112,6.351087,9.610593,2.953738,9.713463,-3.939289,2.049041,-1.845783,-6.767382,-6.184119,-9.160365,0.535425,-2.613736,-5.362225,-1.239616,9.312836,4.403558,-6.873532,-0.673241,-9.872344,4.197112,3.869098,7.503144,9.384588,1.523496,-1.033816,-3.837691,3.568482,4.510442,1.101841,7.696440,-6.334834,3.289033,2.966883,-3.973800,-2.648806,-3.158677,-5.204861,8.997079,1.493125,7.302914,-9.765962,0.671837,5.463361,-3.648961,6.006736,5.183559,-8.930665,-3.295882,-1.381481,7.668317,-7.808796,-5.745632,-5.290599,-8.121280,-0.744425,7.756563,2.771317,-4.289146,3.507054,-2.443572,2.992627,-8.064541,-0.200702,2.817396,0.971391,0.820141,6.973010,3.396275,9.170467,8.253082,1.968112,2.838548,-7.408955,9.570023,-6.932049,-3.985926,9.330512,7.104709,9.423057,-3.278148,5.262834,-8.774991,4.875570,-9.855141,7.025504,4.420108,-9.733432,0.999980,-1.497364,-9.945714,-5.750086,-5.310121,2.339658,-3.360242,0.939342,-4.534664,-1.705169,7.117740,-1.307396,4.704228,3.711396,-9.529753,2.434659,-6.007524,1.083430,-0.930358,0.221410,5.455663,-0.927876,8.668698,5.861293,-9.793127,-4.875692,2.323946,-7.416201,-4.165308,3.220250,7.131195,5.228846,6.748992,4.092507,-2.839775,-8.793233,5.151355,5.478064,-7.301295,-0.806993,0.046570,-8.006718,5.787629,7.084246,5.867301,0.172484,6.016421,-1.346243,2.239886,-4.926296,2.504456,5.304270,1.254623,5.816134,1.567886,-3.316573,1.412398,-4.024880,7.559172,-5.441609,-3.958542,-2.241432,-1.275072,-7.385343,-4.578339,-1.078497,-0.732335,-2.141933,-9.126686,8.738991,-2.268161,-4.998708,4.831754,-9.322134,-3.537386,9.584327,-3.002624,-7.938448,-2.211824,-3.527941,0.231257,-2.458435,0.247638,8.919941,1.023066,1.755629,1.648961,6.116562,-8.562043,5.087416,-7.250261,-1.987487,-7.866516,-2.900847,3.012137,9.322642,4.227281,-7.491367,4.649755,-3.651346,6.564872,-3.148406,-4.295639,0.933958,1.138717,3.940798,9.185286,0.523785,2.233267,-7.317611,-4.562799,5.492778,-5.598450,-4.863781,-6.328106,-8.966894,4.390115,-8.946764,-2.237692,-7.705143,-9.259143,1.654601,4.842893,-1.290580,-9.904050,-2.648748,-4.686129,-1.384832,2.427484,-9.342684,-7.212157,2.412483,8.842740,8.349119,7.865024,-6.089680,4.613787,2.140862,-3.728689,0.694241,5.762734,1.252784,-4.200297,-5.304157,6.860318,7.593091,3.641491,1.245461,-7.053153,-7.348482,-9.345493,5.828445,-0.831611,1.069420,-2.454321,-1.274790,-4.232186,-8.097563,1.091797,-8.676344,4.122346,-3.951819,6.282927,-1.200358,-2.750559,6.745889,0.309237,8.155887,-9.807717,-4.799961,5.939905,-4.208994,-7.306264,-5.422794,8.912301,-4.574796,-5.589841,5.041530,-9.450090,0.681004,-7.890075,-7.675298,-1.061926,6.504179,-4.273135,6.834031,-8.299710,3.155756,-3.479912,9.418976,-5.408446,0.116467,-3.881230,-2.427049,-2.522283,-2.067710,5.134185,-6.838457,-8.962371,-5.997984,3.965127,-5.694986,8.278079,-8.257844,-6.025283,5.091480,-3.655832,2.797545,5.943146,2.718861,-2.183530,-2.491414,-5.889584,3.627572,-5.589023,9.889286,3.307565,-3.417363,4.375247,1.843020,-2.138771,9.914521,2.390264,9.917485,-6.697701,-3.915483,-5.588370,-0.091200,4.340709,1.666888,8.688704,6.228856,6.219170,4.213823,-2.007870,-3.637046,8.270735,7.307543,-5.521354,0.069210,-4.655465,9.636072,-1.311389,5.896282,2.301072,-6.305597,-5.011531,-7.224047,5.328145,-1.485943,-9.309515,-5.798000,-3.908637,-6.374713,-7.632133,-1.892080,5.165138,-1.987404,6.341433], dtype = "float32")#candidate|1019|(1386,)|const|float32
call_1018 = relay.TupleGetItem(func_148_call(relay.reshape(const_1019.astype('float32'), [9, 14, 11])), 0)
call_1020 = relay.TupleGetItem(func_150_call(relay.reshape(const_1019.astype('float32'), [9, 14, 11])), 0)
output = relay.Tuple([call_989,call_1003,call_1018,const_1019,])
output2 = relay.Tuple([call_990,call_1004,call_1020,const_1019,])
func_1022 = relay.Function([], output)
mod['func_1022'] = func_1022
mod = relay.transform.InferType()(mod)
output = func_1022()
func_1023 = relay.Function([], output)
mutated_mod['func_1023'] = func_1023
mutated_mod = relay.transform.InferType()(mutated_mod)
func_749_call = mod.get_global_var('func_749')
func_751_call = mutated_mod.get_global_var('func_751')
call_1049 = func_749_call()
call_1050 = func_749_call()
func_148_call = mod.get_global_var('func_148')
func_150_call = mutated_mod.get_global_var('func_150')
const_1052 = relay.const([-8.358084,1.065020,-2.214584,-4.996243,-4.518674,4.388559,-0.625435,-7.533978,2.512130,-7.647509,3.663217,7.190614,-4.018037,0.309290,-6.988906,-6.711915,7.955530,-8.871754,-1.172208,-2.686758,-0.988365,8.200320,5.648707,-2.203262,-9.115753,5.444394,7.154713,0.661484,7.766532,0.289913,9.187395,-7.433144,-7.845757,-0.421583,4.469620,7.363407,-0.749416,-3.544112,-6.952384,7.831662,2.267265,-2.679885,2.362772,-2.776801,8.501731,-1.098300,9.419797,6.929126,-8.714389,2.201710,-1.557496,9.990395,9.239136,-3.077716,2.142807,-3.005179,-5.275997,0.074628,8.070773,-1.392844,9.403442,2.465461,-3.133546,-6.204821,0.421890,-2.173359,-1.472131,-4.931167,-6.659068,-4.698416,-8.240627,-3.366942,4.260556,-7.192872,-6.913676,0.623549,-9.132293,-3.148189,3.823810,3.516481,-8.030822,8.216772,5.470152,2.264597,-0.621518,7.813792,-9.820468,-7.238611,8.343549,-8.072613,6.515644,-6.792310,2.068321,-5.126692,3.931564,6.906385,-7.048004,5.224264,-4.218491,1.761430,-5.810479,-5.093077,-1.076413,-1.325816,2.524594,8.494321,3.917556,-6.723495,2.441190,8.774337,-6.486834,-7.619695,4.819722,5.578012,-7.324953,6.000056,7.325563,-8.075363,-4.867725,-8.577173,7.319097,-5.103141,9.867339,5.200179,-4.384480,9.106619,3.732189,6.591509,5.496312,4.482151,9.980507,-6.145196,-0.706395,-3.291329,-9.407993,-8.290145,6.865489,-2.290045,-0.598109,8.688615,-4.509953,3.952882,-0.548762,0.898143,2.413566,-3.217934,5.200227,-5.456543,0.631220,-7.630140,1.562228,6.634458,2.025667,0.008009,-0.777926,-8.394647,1.908489,-6.066036,-6.192565,-1.900704,-3.703445,-9.107214,0.468543,3.889773,-1.388899,-9.871186,2.712478,-9.664055,5.399531,-5.047707,-4.625211,9.923339,-3.640119,4.788685,7.293060,3.977735,-6.701894,9.660879,-0.537863,-9.509343,-3.947953,-2.218500,9.513233,-8.999447,-2.676040,-8.961359,-8.730378,-2.644040,6.222579,1.993941,6.150754,0.859308,4.246226,-6.645830,9.732994,-5.613475,7.801653,4.390434,8.338402,-7.539396,-0.857461,-7.184595,-2.382653,-3.250386,-7.495429,-0.267474,-8.944298,-1.709475,-4.237307,7.687986,0.241253,0.738336,-4.458391,0.580264,-6.394535,4.590056,-6.423662,5.860300,-0.741461,4.716624,-4.607312,2.019094,9.249717,-0.807107,-8.005595,7.961616,6.680871,-3.770705,-6.071620,3.428894,1.571984,0.013131,-9.911350,-5.449278,-7.599597,9.327876,2.517611,7.466779,-8.095417,-0.347216,4.661462,6.321517,-2.748078,-6.324684,4.627294,-5.278424,-2.308404,0.045857,-8.852289,-9.383283,8.253445,1.044461,-4.662572,4.776486,-2.338217,2.887967,1.622670,-9.516061,-9.161387,-4.244647,-1.920738,6.809094,2.688210,8.405604,-0.508875,-4.094852,-6.184551,2.825861,0.612976,0.422559,-2.364416,1.200519,9.967523,-5.870608,9.441518,-4.559969,0.400843,-7.792368,-5.924481,-8.303919,9.582626,-4.042351,4.890461,-7.429028,-2.815863,-4.901482,-0.766085,-0.021622,-2.049066,-4.420030,-4.519065,1.338555,-6.295521,-0.973479,-7.038152,3.728364,0.345349,7.058702,6.515282,1.791491,5.604237,4.827772,-1.281533,-1.393043,-2.662726,-3.549547,9.186915,-7.440623,7.224606,-8.373492,2.460803,-7.743074,9.803712,5.731216,3.433452,-2.450758,2.933399,2.986142,8.124633,-7.288665,-5.211984,-2.276081,-5.195825,8.425419,3.496608,8.000984,3.869287,-7.182398,4.135941,-9.694536,-4.446968,-5.178604,-8.769008,7.008270,0.506804,3.043688,-4.812561,2.575834,-7.396634,4.561302,-0.310346,-0.299578,-7.196852,-2.587684,5.729738,-6.964999,5.043771,2.331726,-3.322942,0.954422,-5.764877,4.945183,7.607138,8.036230,1.491105,8.806271,-7.164051,-5.400419,-4.813348,-6.312791,1.001728,-4.875777,6.797216,-9.080260,-9.122165,0.964728,-3.325740,-6.810290,5.202810,5.453693,-5.449708,-4.822033,-9.627534,3.961493,0.128119,-0.663054,-8.223744,4.608962,-4.735900,-1.552244,-9.124561,6.627361,-5.102858,-1.867915,-8.325429,7.851424,-1.412140,1.279140,-8.405418,-8.966525,-3.610593,-2.976744,1.552716,1.166659,1.045028,-7.792918,8.300427,-6.742751,3.359512,-9.966790,-1.994786,-4.361557,8.934826,2.242071,-5.934989,-3.259925,2.741161,-0.187664,-1.661169,-1.627040,0.321746,9.300861,9.451033,-8.200599,-6.642337,-4.475876,-1.230291,-6.908170,-3.898884,9.241696,0.192330,2.917538,-7.438684,0.223149,0.890252,-6.001264,-8.952588,-3.729624,2.667669,8.222706,8.454037,-8.383474,-0.553982,1.195141,3.298234,-8.030284,-3.497630,7.428886,6.470494,-7.105299,-7.459508,9.558572,-3.112824,-4.116933,-5.478138,-8.524398,0.524433,-8.308380,6.370282,-3.190906,-3.562699,1.867167,0.473086,-7.388786,1.293342,7.734661,7.259350,-1.736125,-7.291067,-8.648370,-7.689534,-2.092511,9.827845,-3.082757,8.035649,3.264780,8.752597,-5.898951,4.225620,3.731813,4.005367,7.065161,2.469270,4.673457,-7.561896,-8.869804,-3.860333,5.745259,7.275050,-8.778235,-0.042627,7.095891,-9.307479,-9.553122,-9.834409,-6.154490,9.804263,-7.115252,1.468134,-7.459444,0.004422,1.853776,-5.966080,-9.354864,-3.531459,-1.262892,-0.966793,-7.265670,4.305053,8.481547,-8.827131,-9.244506,0.764527,-6.033574,-7.853909,-2.570103,4.932204,6.587419,-3.956094,-0.819017,-9.189028,-0.637353,-5.629426,5.084472,2.541601,8.169288,-0.999601,5.488246,-7.782759,-8.924869,7.328071,1.239643,-2.435351,-0.469437,-2.027933,6.543827,6.993315,1.043225,-8.803205,0.075279,5.231088,5.056285,-5.026187,6.636885,-8.862327,4.489466,4.610459,7.945083,9.573790,-5.747474,-3.517371,-9.637297,7.615015,8.145913,-8.775707,-4.824159,0.472841,8.786413,-3.515440,-1.297852,4.282528,-7.646636,-2.434745,-0.906453,7.797399,7.108238,4.593226,0.934491,-2.909100,-7.237626,-5.840514,-8.513614,4.439742,1.606862,3.025020,-9.073059,-6.546220,1.379231,-8.664113,-1.215883,-7.216434,9.048316,-7.555407,1.715296,8.093455,0.179041,-5.955301,1.986886,-4.194299,5.424127,4.738442,-6.666804,4.485055,-8.511812,9.434256,9.626225,8.117914,8.672190,-5.347956,-2.532711,0.828601,7.238935,6.958156,8.404501,2.706553,4.876661,-7.446207,-9.156560,4.408422,-6.005236,-3.581855,8.913329,-8.173838,5.027421,2.834736,1.475261,2.010211,-5.040079,2.393811,-4.131665,-3.048198,8.471820,6.049293,-3.710644,2.495921,-0.262726,2.591543,4.715760,-9.950795,-9.231545,-9.156879,-0.934997,-1.944613,-5.528529,-4.433603,-6.897274,8.195040,-4.547636,-4.701759,5.747978,4.559908,3.466613,5.832449,-7.237840,4.461539,0.010333,-6.045560,7.184821,-5.843415,0.050825,1.279032,-0.770829,4.187944,8.114450,4.848353,3.043950,-6.234830,4.924226,7.036561,-6.119737,-0.751668,-6.255815,0.787558,2.696018,-4.710501,9.515782,1.030309,-2.422398,-0.161718,-6.115150,-1.742676,-1.920450,-4.879257,6.400915,0.133470,-5.725641,4.167954,3.745958,-5.993748,1.262535,6.386790,-4.135899,-0.625415,5.034466,2.321920,-0.851372,-7.581646,-1.282066,4.024305,-6.004408,0.174314,-1.424181,-3.446895,-9.189722,5.933537,0.512183,-1.295051,2.371631,-9.502506,7.995076,-4.304551,4.063959,-9.645431,5.699308,1.462733,-9.228450,-8.992199,-0.611868,-0.874047,7.647955,-6.174440,-3.996174,2.819718,8.520588,2.831742,1.622473,-2.650346,-4.058395,-9.401628,-6.132745,7.581441,1.274044,-5.541971,-5.816073,-5.902554,-8.427668,-7.913825,8.230384,-2.579732,4.777180,7.017607,7.821750,-5.262472,-7.145843,3.551642,-9.282217,1.721940,-8.568491,2.818918,2.005953,-8.952102,-7.388195,-5.011737,-9.387607,-8.173758,-7.733808,-4.593125,-8.565727,0.645405,-4.521946,6.129203,-8.022578,-6.139307,-3.854838,2.506566,0.073938,3.353246,1.804797,7.896017,-2.343888,3.417676,4.312883,-1.517844,-5.293350,-6.008347,-9.894238,-2.377453,-1.992515,6.716608,-7.119891,-9.798585,5.394318,-4.008452,-5.841058,-1.706708,7.540588,5.817782,-4.535521,-1.321968,-0.475045,5.899496,6.798947,5.807798,-9.768253,-0.200774,5.434351,-3.148000,8.620794,2.604935,-1.741746,-8.050326,-0.232908,-8.331801,-1.927341,4.397425,0.342789,1.148200,-1.212546,-0.746511,-7.328967,-3.856472,-1.625747,-7.953526,8.118678,0.645201,3.510592,3.976963,2.269513,-6.518237,3.378465,-2.069773,-4.001269,9.255380,-5.287685,6.199722,-0.847212,4.153066,-1.043904,-4.920174,4.585696,3.347255,-5.784381,-0.765297,-8.961738,3.706943,4.057817,-8.319981,8.107913,-0.667415,-3.595105,-1.888976,4.885387,7.863663,3.742478,8.385161,8.978095,-0.974448,-5.016650,9.789255,4.426012,-1.178905,0.226340,9.297905,-0.116856,-4.061209,6.161160,2.936793,-9.158349,8.137321,2.180895,7.596909,0.751759,-4.926083,-4.010880,1.723233,-1.979170,-1.762822,-8.610851,-2.335026,-8.481050,2.274013,-0.896742,-2.935072,4.992559,-1.983834,1.646617,9.974729,7.220959,-4.087283,-1.504302,-8.142131,9.907338,-1.268591,-1.728545,-8.169973,1.745965,-8.420149,-5.733779,8.653352,-0.451110,-9.758432,0.859990,1.725329,0.457487,-9.792837,9.115233,-5.566111,-8.601122,-7.071805,-5.144859,3.620975,9.266103,5.759613,-0.344796,8.686271,-5.175045,-3.553452,-6.487006,1.835546,0.985189,0.024191,-9.329553,7.991358,-1.597125,3.210453,-9.362141,-3.508457,-2.837236,-4.603244,-6.877527,-3.907337,0.189108,-9.278995,-3.859480,-0.547699,-1.319896,-4.233383,7.790456,2.919453,7.584004,-6.140682,0.861429,5.736510,-1.181602,-5.118189,-9.058824,-8.092159,-0.859108,8.340766,-5.013141,-3.939468,7.996797,3.023938,9.096623,-6.758811,5.552433,-9.535164,9.648635,-9.096924,5.448559,1.537045,6.627464,-5.435110,-1.037559,-9.721796,0.936560,0.990521,1.086314,8.132342,3.257303,-2.253155,5.916234,1.372291,-3.044358,-8.632717,1.392993,1.309970,3.671428,-2.955259,0.814833,-7.854656,7.065678,8.823448,-4.323803,6.024727,-6.090175,-6.078437,7.595596,4.007295,-5.508521,4.251389,3.210063,-4.648581,-7.273747,-9.960932,-6.053390,-0.254135,3.349408,-9.264462,9.340957,4.415634,6.609920,7.748536,-6.318918,9.784981,-3.377692,-1.557042,9.160162,4.122025,2.318305,-0.475730,-4.847646,3.197133,-5.569008,-6.025132,-0.172728,-0.571707,7.925523,-1.987565,-2.294446,-2.623585,-2.273737,-0.982311,-1.575383,-5.344560,0.445477,1.686384,2.481287,5.316165,-0.115925,0.404743,-7.838998,2.826048,6.570311,9.394665,4.345137,3.981356,-0.648305,2.422222,2.878008,-4.090333,-0.679801,-2.179324,-9.338410,-5.404119,2.751053,5.422375,3.343784,-0.068372,-0.105409,-4.415462,8.332459,-3.908746,9.032261,-9.314487,8.928390,6.260913,-5.072360,4.818385,-3.388537,-2.302855,-4.149315,0.381018,-8.084092,-6.952539,1.856945,-0.315837,-4.048066,-7.604149,-1.145148,-1.535768,2.892774,-8.159591,-6.956853,-3.035636,8.900428,-3.572593,6.589806,0.286552,8.126834,-7.321485,-2.053336,-9.521315,1.947989,-1.974062,1.230752,1.253855,-0.068971,1.483813,-6.652434,2.252314,-0.485369,2.946740,9.278033,7.589439,-6.954904,5.794999,-3.452083,-6.440215,-6.293990,5.567554,1.394780,-2.317554,-9.590167,-1.666749,-9.923077,-4.427786,-3.565411,-5.629293,-1.775556,-5.436451,3.751423,0.527573,3.014314,-5.357466,-7.889741,-3.793893,-7.909301,-6.713613,-0.174712,2.566987,-2.267084,2.573597,7.653219,9.893726,4.065480,4.445331,0.239564,-5.828789,-1.437965,2.402712,-1.465053,-3.401482,-0.679045,-8.239220,-2.071788,0.208931,8.592257,4.069707,-3.855135,4.789608,-7.460666,7.163905,0.440338,4.810888,-0.167974,2.802592,-2.059567,7.754235,-6.319938,0.517927,-9.517315,4.363795,7.600645,-5.888954,8.060791,4.344401,-2.696069,-8.994648,-1.971899,6.641988,-4.801753,1.424831,0.884518,2.216626,-9.401512,-2.229006,-1.092033,1.829629,-8.417861,4.448679,7.108003,0.935956,8.415376,9.700998,7.134611,-2.508226,7.058843,-2.389582,9.986316,-2.479515,-8.105392,-4.680064,6.040635,-3.440939,1.039096,8.655694,-6.835101,7.227304,-7.841669,2.724727,5.395997,8.880011,-4.207856,0.010580,-7.348581,0.636220,-0.329855,1.918385,1.151749,8.964310,7.657809,0.824604,-8.311533,-5.700373,-0.854168,-9.471069,7.464368,-5.251237,-5.868680,6.436871,-9.397982,4.867883,-3.516651,-1.310703,0.537203,4.054895,-2.348277,-9.236370,4.880143,-6.184335,9.689477,7.012354,-6.125380,-4.442422,-5.991891,2.312725,-2.335904,1.199684,9.679834,4.578354,-9.186132,-2.166719,6.207188,5.313101,3.548344,-7.174390,-1.926523,3.448867,-8.849660,6.307453,-0.328445,0.445050,-8.282733,8.210239,-5.379467,-9.248067,5.843435,1.441977,6.374099,7.249630,-9.615771,7.254874,-7.098266,-9.505494,-1.517556,0.828403,-9.107236,-0.158913,0.155040,0.489060,-8.792175,-1.275875,-5.803626,-1.097315,-1.353804,-6.202676,-4.789896,-2.027975,-2.736127,1.208125,-7.103468,3.665290,1.258108,0.730975,-3.955945,-5.977250,-6.851198,-3.047419,-5.652381,6.396027,4.925717,-3.404374,9.829143,-0.819564,7.017631,2.777203,-3.715466,-8.489276,-3.284947,-5.049982,-7.133073,7.314810,-4.589338,7.403854,-5.115369,6.682636,-0.984605,3.224331,-6.977458,-6.761199,4.166694,-0.280074,-6.284798,2.618046,-9.611259,0.680618,-8.204603,-3.311718,8.016661,-8.254991,-0.126355,4.987645,0.104239,-4.754212,-6.876543,7.503278,-4.089657,3.360433,-5.546962,5.442404,-9.099883,-6.195959,4.691220,9.090341,-6.183131,4.540361,-5.756216,-8.533442,7.096925,9.069107,5.811823,-9.273246,-3.925429,-1.698621,-7.672812,-0.935704,2.572177,-7.489893,6.302263,1.392137,4.616289,-6.586101,2.530712,2.627588,8.523307,-0.877177,7.847542,4.330596,-3.596462,-0.985326,1.579472,8.880498,4.740083,-5.251772,-4.725806,9.250988,-4.941406,7.298213,-0.940940,-5.533753,2.053495,-2.625193,2.865554,6.996418,5.472241,7.485771,-5.427525,1.512874,-6.377515,-4.402533,0.386464,-3.352663,0.069276,7.110883,-8.335586,4.017150,-7.032401,-8.863314,8.902065,0.593905,3.970558,-7.981452,-0.526520,-4.852749,2.578837,3.663474,-2.183405,-2.442992,1.881424,7.206174,9.042492,7.855764,-2.360198,-4.872809,7.033944,-8.672059,-7.578289,-2.552097,0.699324,8.223199,1.924610,2.788185,-5.327585,2.044528,-9.842424,8.333399,-8.561702,3.077704,-7.218080,-1.619840,-8.338503,-7.771547,6.164655,4.543804,7.157299], dtype = "float32")#candidate|1052|(1386,)|const|float32
call_1051 = relay.TupleGetItem(func_148_call(relay.reshape(const_1052.astype('float32'), [9, 14, 11])), 0)
call_1053 = relay.TupleGetItem(func_150_call(relay.reshape(const_1052.astype('float32'), [9, 14, 11])), 0)
output = relay.Tuple([call_1049,call_1051,const_1052,])
output2 = relay.Tuple([call_1050,call_1053,const_1052,])
func_1065 = relay.Function([], output)
mod['func_1065'] = func_1065
mod = relay.transform.InferType()(mod)
mutated_mod['func_1065'] = func_1065
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1065_call = mutated_mod.get_global_var('func_1065')
call_1066 = func_1065_call()
output = call_1066
func_1067 = relay.Function([], output)
mutated_mod['func_1067'] = func_1067
mutated_mod = relay.transform.InferType()(mutated_mod)
func_749_call = mod.get_global_var('func_749')
func_751_call = mutated_mod.get_global_var('func_751')
call_1087 = func_749_call()
call_1088 = func_749_call()
func_1022_call = mod.get_global_var('func_1022')
func_1023_call = mutated_mod.get_global_var('func_1023')
call_1116 = relay.TupleGetItem(func_1022_call(), 2)
call_1117 = relay.TupleGetItem(func_1023_call(), 2)
output = relay.Tuple([call_1087,call_1116,])
output2 = relay.Tuple([call_1088,call_1117,])
func_1124 = relay.Function([], output)
mod['func_1124'] = func_1124
mod = relay.transform.InferType()(mod)
output = func_1124()
func_1125 = relay.Function([], output)
mutated_mod['func_1125'] = func_1125
mutated_mod = relay.transform.InferType()(mutated_mod)
var_1153 = relay.var("var_1153", dtype = "float32", shape = (11, 6, 15))#candidate|1153|(11, 6, 15)|var|float32
var_1154 = relay.var("var_1154", dtype = "float32", shape = (11, 6, 15))#candidate|1154|(11, 6, 15)|var|float32
bop_1155 = relay.mod(var_1153.astype('float32'), relay.reshape(var_1154.astype('float32'), relay.shape_of(var_1153))) # shape=(11, 6, 15)
uop_1159 = relay.acosh(bop_1155.astype('float32')) # shape=(11, 6, 15)
func_1065_call = mod.get_global_var('func_1065')
func_1067_call = mutated_mod.get_global_var('func_1067')
call_1168 = relay.TupleGetItem(func_1065_call(), 0)
call_1169 = relay.TupleGetItem(func_1067_call(), 0)
bop_1178 = relay.minimum(uop_1159.astype('int64'), relay.reshape(var_1154.astype('int64'), relay.shape_of(uop_1159))) # shape=(11, 6, 15)
func_1065_call = mod.get_global_var('func_1065')
func_1067_call = mutated_mod.get_global_var('func_1067')
call_1186 = relay.TupleGetItem(func_1065_call(), 2)
call_1187 = relay.TupleGetItem(func_1067_call(), 2)
func_148_call = mod.get_global_var('func_148')
func_150_call = mutated_mod.get_global_var('func_150')
call_1192 = relay.TupleGetItem(func_148_call(relay.reshape(call_1186.astype('float32'), [9, 14, 11])), 0)
call_1193 = relay.TupleGetItem(func_150_call(relay.reshape(call_1186.astype('float32'), [9, 14, 11])), 0)
const_1200 = relay.const([[[3.483181,8.274583,-4.877342,0.027699,1.396626,-3.014040,4.084896,2.470266,2.395441,5.379742,9.028773,-5.463016,9.011257,-6.997255,-1.184315],[-7.386011,9.599477,8.249821,1.511840,6.166066,-7.090570,7.167971,6.853171,-3.359452,9.482656,-7.878834,-9.875077,-6.686611,9.995291,3.781630],[-8.031635,5.480699,9.014277,0.248782,6.828272,6.702242,-8.585433,5.008819,-0.766885,-4.879513,-8.595218,-7.412963,-7.610825,-6.858540,8.632299],[1.313835,4.058505,-0.742992,9.047891,7.499867,-4.979686,1.227626,5.359954,-7.109002,-9.874881,3.711105,-7.781707,-0.533355,7.186593,-0.517561],[-5.852329,-0.832449,-8.603083,-2.960343,6.939420,-0.453382,3.208082,-5.323614,5.832740,-7.729071,-8.117126,-4.076887,3.001765,6.003366,5.500378],[2.601625,4.488315,8.967903,-6.721914,0.093576,-1.958874,-3.408190,3.659126,-8.614398,9.579551,3.617793,6.127021,-2.722067,-2.835200,7.771552]],[[9.678894,6.183917,-5.252947,-3.942178,-3.008194,-1.477807,-2.121388,-2.916688,-6.484495,-0.165841,4.622681,1.973378,2.198427,2.272038,4.407114],[3.560309,-3.871081,3.938389,6.482030,6.086375,9.468538,-8.795225,-2.776119,-3.989392,-3.976974,4.046089,-9.878781,-8.657555,-5.389787,5.218010],[-7.371807,9.987760,6.556137,1.763892,-2.459624,-3.736175,4.986141,1.458277,-9.542890,-4.323831,-4.882722,-9.368118,-1.237376,-4.396891,5.029964],[-3.722592,-4.427796,-0.858571,-5.833374,9.276135,-5.293155,-6.998262,-7.146899,-5.745295,9.396191,8.395313,-0.322989,-7.312312,-9.863563,9.336636],[-3.988222,8.009721,5.870055,-3.222198,-4.744054,9.810686,-6.230967,-0.661680,4.875310,1.717658,7.619885,3.096860,-9.653020,-3.428268,-2.136201],[-3.569744,2.051260,-3.916221,5.340761,-6.681830,-5.443271,7.891225,7.867972,8.837994,-4.785683,-8.323588,-7.458890,0.754753,5.709086,6.427849]],[[9.004588,6.632849,-6.872432,-5.531721,-6.543389,8.578696,-1.445172,6.021208,-8.125652,-9.801889,6.029479,-5.967964,-2.210488,5.155936,1.504457],[-4.741861,-7.651942,6.788037,8.828190,8.299573,-2.762564,-5.571644,1.142214,-8.585664,-5.097131,-3.075590,4.053146,6.223194,-1.545339,-6.910410],[-1.954601,-4.703713,-1.288453,6.326295,7.339265,6.175404,5.986387,-8.711217,-5.306548,-5.080788,-6.517569,-6.548520,4.072891,7.847569,-5.931417],[5.180600,-3.964546,-9.127634,7.949540,-1.304757,-9.825251,-9.465163,3.805465,-3.553481,0.081882,9.808713,4.003417,-7.325232,8.476590,-2.902037],[3.221172,-7.371731,6.029992,-1.465842,-3.985098,-0.805566,-0.479540,-1.932629,1.695682,0.093046,2.489130,-4.427475,9.092608,3.786796,2.920875],[-6.541299,9.490089,-6.789023,9.342862,2.897217,-3.800530,-5.474051,-4.351494,-7.137766,1.917542,3.160864,-5.190827,0.631794,-4.502898,7.297310]],[[-9.602966,-4.025482,-2.677303,7.460470,9.473111,-4.972275,-0.385821,-7.550762,6.129610,-6.690529,5.575947,-6.609482,-2.652324,9.943866,-8.992739],[-0.337518,-8.484964,5.212528,9.066050,2.610126,9.718164,-4.699229,-0.316300,0.972847,-9.567881,7.831144,2.351761,7.100218,9.173701,-4.666478],[9.824214,7.223492,8.173793,7.265564,1.973044,3.754450,-0.627603,-9.092799,-9.063420,-9.518283,4.324020,-8.210184,9.999436,-3.234039,-2.761709],[8.465537,4.618724,-4.517571,9.498649,-5.507459,-1.285116,9.897711,8.586572,8.969566,8.687341,-3.735317,6.145002,8.958149,9.084628,-7.487595],[-2.440887,1.064645,-1.138946,-0.862105,6.168703,-6.426106,-6.171260,-5.254996,4.421997,-9.680884,-9.171178,9.602207,8.629575,-5.356961,3.383723],[5.631811,-0.642399,3.789157,-3.156663,-6.922395,-1.323902,4.273180,8.466346,9.028248,8.439398,5.783325,-2.661369,-8.727448,-3.136857,-2.728392]],[[1.036326,6.819384,2.762985,-5.523054,4.268139,6.622571,8.383021,-6.999214,7.077521,8.613803,8.973544,-1.765538,5.852919,-3.098453,4.763823],[6.136767,-4.812798,3.563558,-5.223914,6.479319,-3.907549,0.458877,0.869255,-0.117932,1.271307,9.459385,9.402588,6.972793,-6.889114,-1.145016],[-1.630348,-8.638929,-4.451119,-7.727790,5.221460,-0.431581,7.492821,4.746905,-6.605040,6.465172,1.829782,-4.620409,-0.177066,-9.535754,3.285791],[-1.438153,-3.906513,-5.421639,-3.573015,9.191698,-7.504155,-2.657578,-7.106198,-6.400286,1.414798,-8.749511,2.827475,4.903896,-6.117202,-5.818676],[-0.201834,-2.585060,-0.109403,-9.437913,8.226392,-5.082978,3.723687,2.265969,4.497609,-7.602994,0.942667,5.914181,-3.552439,-0.406850,-4.277751],[-6.275367,-8.521581,-7.498011,-0.992876,6.359380,-6.043541,1.920295,-2.792689,7.442307,9.883123,0.583469,4.731986,9.955062,7.326531,-0.475418]],[[-9.158940,1.496036,8.780267,9.381961,-8.298416,-0.974798,2.327068,-4.624528,-0.961380,4.813850,-4.498257,8.560617,3.437303,2.110122,-4.427130],[1.526589,-1.673376,9.685215,-1.255089,9.636025,-5.420142,6.971627,-7.378822,8.053353,-8.661766,-3.957476,8.544573,-8.632352,-3.992095,-6.789059],[2.075610,2.431779,-6.321826,-5.581987,-3.609112,7.518865,1.467849,-1.158525,-3.469511,-2.780516,-2.133278,5.703042,-3.801430,-9.200416,1.713950],[-3.472042,-7.445438,2.538064,-9.259520,8.161373,4.572573,0.718099,-1.280431,-5.218615,-8.167559,5.452513,5.553943,-3.448909,-3.985779,-1.511740],[0.815251,-6.938118,7.950297,-7.110788,1.805346,-0.270952,-9.812320,6.906012,1.890700,-1.966930,5.409984,-1.837186,-2.446333,-8.532242,2.734163],[5.510370,4.618406,2.566823,2.133748,9.514626,8.449824,7.958965,1.848449,-0.837908,9.347720,-5.313522,-6.493112,3.278585,-0.863734,7.295242]],[[7.302872,-7.195835,4.905442,9.573008,-9.340955,6.331277,-9.022761,7.612759,-8.848719,-2.119803,-5.755614,-8.296830,2.685752,-0.249926,5.120033],[2.008987,-1.697934,-5.046241,6.890545,-4.444098,-8.330594,-3.127675,-8.253571,-6.162663,6.622840,-1.588426,-8.111464,1.232416,4.428005,0.954271],[3.467534,9.925514,-1.174609,4.639890,3.720164,7.354013,-7.974343,-5.982534,-8.519057,0.471857,0.935420,9.305259,-1.955263,9.403091,-0.866239],[-3.966182,9.421885,5.471826,0.558665,-8.291829,-0.398577,-6.000031,1.392284,-8.757860,-5.833699,0.470421,4.803172,7.023751,5.540407,9.439731],[9.592435,-5.517759,5.816905,-8.834468,-7.297022,4.256925,2.970962,3.368863,-3.266169,-6.097148,5.472020,-1.720948,-1.604639,-1.946918,-6.064653],[-1.161645,-6.456232,6.211133,-2.001293,-1.320842,-2.584104,-1.072625,-3.978987,-4.924668,8.932810,3.525209,-0.365326,7.657437,8.728310,8.970772]],[[-4.244579,0.310809,-1.631880,-8.293053,-4.197241,5.035685,8.936055,-3.924159,-5.795029,-0.039125,8.668059,-4.688792,-5.085334,8.731237,-1.553383],[0.026575,-8.845206,1.463382,2.423441,8.648317,-6.793988,-6.810977,-3.340084,9.118538,0.019785,-0.221542,3.845353,1.347508,3.590895,6.350165],[4.718861,-0.452956,5.639272,-5.706806,2.316755,1.267755,-0.537066,9.920675,-1.520780,4.370622,0.788982,4.683776,9.659270,-8.223882,4.313085],[-2.843888,-6.864106,-8.143102,-1.002137,9.716386,-8.417431,6.413967,-2.188608,-1.709331,-2.465441,4.252335,7.585613,-6.501592,0.133616,2.396848],[6.162153,6.596799,-5.325130,8.532139,-0.969952,2.945428,8.510907,6.344490,1.038746,6.263554,-1.350299,4.811058,0.617653,-8.697602,-4.692586],[6.160288,4.358464,-2.143279,-4.458146,-6.925300,-9.935018,1.862109,-4.907232,4.340275,-6.713860,2.239410,3.851070,7.642169,5.763321,2.439482]],[[3.748411,6.551939,2.680679,1.722810,8.346505,-5.827403,5.091127,-1.038243,7.071731,1.059305,-0.844367,-4.960677,-7.062222,-8.977967,2.463852],[9.649575,-2.890220,3.407268,-0.668975,2.014816,-1.535456,3.294707,8.543308,1.349265,-9.328859,4.658859,-1.273883,-4.323799,1.952117,-3.249373],[3.994059,2.144943,-8.949912,5.665862,1.150089,-1.437380,6.644243,0.525884,5.237935,5.564175,-5.237020,-1.297863,-0.471865,0.770734,4.949446],[-7.186101,2.069629,-4.251762,-8.944377,0.107437,-8.307834,8.145339,6.379500,1.409326,3.880304,-6.158876,3.577150,-8.684861,-5.624227,8.532298],[1.837168,-0.686182,8.458319,-5.916820,-4.813105,-9.209326,-9.108228,-6.083614,-0.329450,-4.809095,-4.312329,2.800009,-6.433875,7.410228,8.732423],[-8.868256,-6.152881,-7.757956,-6.599737,4.922322,-2.419163,2.755320,9.801457,-7.976812,2.824635,-5.107078,-9.240501,4.844460,9.500785,1.473849]],[[0.709542,-5.754481,-2.654027,-2.923024,6.820887,7.996314,5.315016,-2.700752,2.230176,-0.120693,-1.336811,-3.092536,2.053884,4.739197,6.168022],[0.442351,-0.685533,-8.396987,-6.777822,5.378372,5.979907,4.238724,-2.465475,0.883602,7.238930,-1.416347,-9.633153,-1.266475,5.710467,3.292989],[-4.160410,5.883044,-2.206460,5.787744,-7.953041,-4.118118,6.513991,-5.678407,-1.436416,1.146782,-5.385022,1.527401,5.105111,-2.050245,9.607778],[0.500377,-9.808549,-9.987348,-4.852822,-7.500098,0.321808,-3.963530,-2.020606,-4.933975,1.703563,-1.923251,2.377293,-8.696953,0.876703,2.342574],[-0.002850,-2.104774,-4.294780,1.632001,-3.598522,8.898181,8.375015,2.733163,9.433924,-7.054381,8.192691,-1.906118,-7.724046,4.157604,2.728673],[-8.329363,7.749339,-9.256272,7.854298,2.929999,1.635586,4.665031,-0.611856,4.271280,-2.298533,-6.563717,-5.173680,8.984738,-8.447271,7.170646]],[[0.385363,6.452635,-5.551464,-8.928070,-8.111648,-3.997124,5.936075,-9.299681,-5.509508,2.750895,5.901111,-2.684462,-9.104076,-1.554909,1.423774],[-3.081717,6.086049,6.709362,8.743910,2.703384,5.231063,-8.864704,-5.010100,3.619520,-9.338984,3.331965,-6.673825,0.554723,5.757617,6.625347],[0.789198,-8.690172,-6.894731,8.756088,6.393164,2.937545,-9.650174,2.693534,-2.565414,3.248513,0.740837,-1.637849,-9.873544,-6.526326,1.848476],[-3.582054,2.896467,7.709659,3.202803,-0.025076,2.227896,6.468338,9.937546,-6.431803,9.465916,-1.550599,9.752292,9.966097,-9.972879,0.968945],[3.075988,8.588824,-3.896102,-7.901861,2.664511,8.928545,-7.066282,-7.589848,7.760626,8.175369,-7.562888,-3.210732,-1.802767,9.281790,6.155780],[-7.820474,3.647957,-8.152321,-3.000483,4.393336,1.310541,0.816349,9.693820,4.144330,-0.020308,-4.474744,-5.480187,-4.796623,-9.408288,8.256628]]], dtype = "float32")#candidate|1200|(11, 6, 15)|const|float32
bop_1201 = relay.logical_and(uop_1159.astype('bool'), relay.reshape(const_1200.astype('bool'), relay.shape_of(uop_1159))) # shape=(11, 6, 15)
var_1214 = relay.var("var_1214", dtype = "float32", shape = (11, 6, 15))#candidate|1214|(11, 6, 15)|var|float32
bop_1215 = relay.greater_equal(const_1200.astype('bool'), relay.reshape(var_1214.astype('bool'), relay.shape_of(const_1200))) # shape=(11, 6, 15)
output = relay.Tuple([call_1168,bop_1178,call_1186,call_1192,bop_1201,bop_1215,])
output2 = relay.Tuple([call_1169,bop_1178,call_1187,call_1193,bop_1201,bop_1215,])
func_1218 = relay.Function([var_1153,var_1154,var_1214,], output)
mod['func_1218'] = func_1218
mod = relay.transform.InferType()(mod)
var_1219 = relay.var("var_1219", dtype = "float32", shape = (11, 6, 15))#candidate|1219|(11, 6, 15)|var|float32
var_1220 = relay.var("var_1220", dtype = "float32", shape = (11, 6, 15))#candidate|1220|(11, 6, 15)|var|float32
var_1221 = relay.var("var_1221", dtype = "float32", shape = (11, 6, 15))#candidate|1221|(11, 6, 15)|var|float32
output = func_1218(var_1219,var_1220,var_1221,)
func_1222 = relay.Function([var_1219,var_1220,var_1221,], output)
mutated_mod['func_1222'] = func_1222
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1022_call = mod.get_global_var('func_1022')
func_1023_call = mutated_mod.get_global_var('func_1023')
call_1258 = relay.TupleGetItem(func_1022_call(), 0)
call_1259 = relay.TupleGetItem(func_1023_call(), 0)
output = call_1258
output2 = call_1259
func_1272 = relay.Function([], output)
mod['func_1272'] = func_1272
mod = relay.transform.InferType()(mod)
output = func_1272()
func_1273 = relay.Function([], output)
mutated_mod['func_1273'] = func_1273
mutated_mod = relay.transform.InferType()(mutated_mod)
func_749_call = mod.get_global_var('func_749')
func_751_call = mutated_mod.get_global_var('func_751')
call_1327 = func_749_call()
call_1328 = func_749_call()
func_749_call = mod.get_global_var('func_749')
func_751_call = mutated_mod.get_global_var('func_751')
call_1334 = func_749_call()
call_1335 = func_749_call()
func_252_call = mod.get_global_var('func_252')
func_254_call = mutated_mod.get_global_var('func_254')
const_1337 = relay.const([-0.208101,-0.098297,-2.372790,8.353771,7.578314,-5.791857,9.232122,-0.532064,0.219771,3.280433,9.867421,7.534510,3.836433,-6.204068,7.154938,2.438584,-2.689018,-3.475730,3.867627,-9.074078,-3.333673,6.989492,-5.753107,-7.395345,4.312951,-3.444191,-5.031487,-6.114144,8.220730,-5.952369,9.686144,7.255128,-5.570382,-1.213862,3.872738,-4.254290,-4.395729,1.473022,9.439010,-6.784121,-0.158261,0.195405,-6.973061,-4.925145,-6.986544,-3.230012,-2.604986,6.701132,-0.627459,5.888572,-0.646766,9.696294,3.199605,-6.882099,7.217064,2.882250,5.868172,-9.768665,-1.447336,1.682378,1.158852,-4.657432,6.736227,-6.910985,-5.925071,-1.090756,3.126465,0.819697,-7.259612,9.457828,-1.585486,1.325507,1.697792,3.359730,-8.944831,5.168611,9.718569,-6.634819,2.119755,-2.926444,-1.921797,7.327269,-3.341508,-1.509545,-9.905953,-4.870036,-4.790445,-8.330258,4.824174,1.963429,-8.032176,-5.591572,-1.445722,3.051971,8.919826,9.189897,-9.556210,-3.430987,3.971130], dtype = "float32")#candidate|1337|(99,)|const|float32
call_1336 = func_252_call(relay.reshape(const_1337.astype('float32'), [9, 1, 11]))
call_1338 = func_252_call(relay.reshape(const_1337.astype('float32'), [9, 1, 11]))
func_252_call = mod.get_global_var('func_252')
func_254_call = mutated_mod.get_global_var('func_254')
call_1341 = func_252_call(relay.reshape(const_1337.astype('float32'), [9, 1, 11]))
call_1342 = func_252_call(relay.reshape(const_1337.astype('float32'), [9, 1, 11]))
output = relay.Tuple([call_1327,call_1334,call_1336,const_1337,call_1341,])
output2 = relay.Tuple([call_1328,call_1335,call_1338,const_1337,call_1342,])
func_1346 = relay.Function([], output)
mod['func_1346'] = func_1346
mod = relay.transform.InferType()(mod)
output = func_1346()
func_1347 = relay.Function([], output)
mutated_mod['func_1347'] = func_1347
mutated_mod = relay.transform.InferType()(mutated_mod)
var_1350 = relay.var("var_1350", dtype = "float64", shape = (16, 9, 11))#candidate|1350|(16, 9, 11)|var|float64
uop_1351 = relay.sigmoid(var_1350.astype('float64')) # shape=(16, 9, 11)
output = uop_1351
output2 = uop_1351
func_1356 = relay.Function([var_1350,], output)
mod['func_1356'] = func_1356
mod = relay.transform.InferType()(mod)
var_1357 = relay.var("var_1357", dtype = "float64", shape = (16, 9, 11))#candidate|1357|(16, 9, 11)|var|float64
output = func_1356(var_1357)
func_1358 = relay.Function([var_1357], output)
mutated_mod['func_1358'] = func_1358
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1124_call = mod.get_global_var('func_1124')
func_1125_call = mutated_mod.get_global_var('func_1125')
call_1382 = relay.TupleGetItem(func_1124_call(), 1)
call_1383 = relay.TupleGetItem(func_1125_call(), 1)
func_820_call = mod.get_global_var('func_820')
func_821_call = mutated_mod.get_global_var('func_821')
call_1405 = relay.TupleGetItem(func_820_call(), 0)
call_1406 = relay.TupleGetItem(func_821_call(), 0)
var_1434 = relay.var("var_1434", dtype = "float32", shape = (9, 14, 11))#candidate|1434|(9, 14, 11)|var|float32
bop_1435 = relay.divide(call_1382.astype('float32'), relay.reshape(var_1434.astype('float32'), relay.shape_of(call_1382))) # shape=(9, 14, 11)
bop_1438 = relay.divide(call_1383.astype('float32'), relay.reshape(var_1434.astype('float32'), relay.shape_of(call_1383))) # shape=(9, 14, 11)
func_148_call = mod.get_global_var('func_148')
func_150_call = mutated_mod.get_global_var('func_150')
call_1468 = relay.TupleGetItem(func_148_call(relay.reshape(bop_1435.astype('float32'), [9, 14, 11])), 0)
call_1469 = relay.TupleGetItem(func_150_call(relay.reshape(bop_1435.astype('float32'), [9, 14, 11])), 0)
output = relay.Tuple([call_1405,bop_1435,call_1468,])
output2 = relay.Tuple([call_1406,bop_1438,call_1469,])
func_1472 = relay.Function([var_1434,], output)
mod['func_1472'] = func_1472
mod = relay.transform.InferType()(mod)
mutated_mod['func_1472'] = func_1472
mutated_mod = relay.transform.InferType()(mutated_mod)
var_1473 = relay.var("var_1473", dtype = "float32", shape = (9, 14, 11))#candidate|1473|(9, 14, 11)|var|float32
func_1472_call = mutated_mod.get_global_var('func_1472')
call_1474 = func_1472_call(var_1473)
output = call_1474
func_1475 = relay.Function([var_1473], output)
mutated_mod['func_1475'] = func_1475
mutated_mod = relay.transform.InferType()(mutated_mod)
func_749_call = mod.get_global_var('func_749')
func_751_call = mutated_mod.get_global_var('func_751')
call_1496 = func_749_call()
call_1497 = func_749_call()
output = call_1496
output2 = call_1497
func_1505 = relay.Function([], output)
mod['func_1505'] = func_1505
mod = relay.transform.InferType()(mod)
mutated_mod['func_1505'] = func_1505
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1505_call = mutated_mod.get_global_var('func_1505')
call_1506 = func_1505_call()
output = call_1506
func_1507 = relay.Function([], output)
mutated_mod['func_1507'] = func_1507
mutated_mod = relay.transform.InferType()(mutated_mod)
var_1529 = relay.var("var_1529", dtype = "float64", shape = (13, 9, 15))#candidate|1529|(13, 9, 15)|var|float64
uop_1530 = relay.acos(var_1529.astype('float64')) # shape=(13, 9, 15)
output = uop_1530
output2 = uop_1530
func_1532 = relay.Function([var_1529,], output)
mod['func_1532'] = func_1532
mod = relay.transform.InferType()(mod)
mutated_mod['func_1532'] = func_1532
mutated_mod = relay.transform.InferType()(mutated_mod)
var_1533 = relay.var("var_1533", dtype = "float64", shape = (13, 9, 15))#candidate|1533|(13, 9, 15)|var|float64
func_1532_call = mutated_mod.get_global_var('func_1532')
call_1534 = func_1532_call(var_1533)
output = call_1534
func_1535 = relay.Function([var_1533], output)
mutated_mod['func_1535'] = func_1535
mutated_mod = relay.transform.InferType()(mutated_mod)
var_1542 = relay.var("var_1542", dtype = "uint8", shape = ())#candidate|1542|()|var|uint8
var_1543 = relay.var("var_1543", dtype = "uint8", shape = (3, 14, 14))#candidate|1543|(3, 14, 14)|var|uint8
bop_1544 = relay.bitwise_and(var_1542.astype('uint8'), var_1543.astype('uint8')) # shape=(3, 14, 14)
func_1346_call = mod.get_global_var('func_1346')
func_1347_call = mutated_mod.get_global_var('func_1347')
call_1558 = relay.TupleGetItem(func_1346_call(), 2)
call_1559 = relay.TupleGetItem(func_1347_call(), 2)
func_1505_call = mod.get_global_var('func_1505')
func_1507_call = mutated_mod.get_global_var('func_1507')
call_1568 = func_1505_call()
call_1569 = func_1505_call()
func_749_call = mod.get_global_var('func_749')
func_751_call = mutated_mod.get_global_var('func_751')
call_1606 = func_749_call()
call_1607 = func_749_call()
func_1346_call = mod.get_global_var('func_1346')
func_1347_call = mutated_mod.get_global_var('func_1347')
call_1614 = relay.TupleGetItem(func_1346_call(), 3)
call_1615 = relay.TupleGetItem(func_1347_call(), 3)
func_148_call = mod.get_global_var('func_148')
func_150_call = mutated_mod.get_global_var('func_150')
const_1617 = relay.const([1.080961,-9.827469,7.687791,-2.761128,6.503194,-7.489372,-6.013140,-7.076451,-3.883544,1.057385,8.730590,7.485980,-9.702182,-0.774320,-9.222243,4.399807,5.932275,9.590607,-9.635050,3.407500,5.340724,-6.133203,9.828393,-5.714385,6.057608,3.671961,-5.609194,2.488103,-6.253153,-2.719445,1.662262,7.107132,6.072351,2.845110,-7.633153,-3.870581,-7.043542,1.372524,8.271540,2.490633,0.950668,9.863984,1.232653,-9.254931,-0.441189,4.506965,-4.316503,0.852396,3.518125,-4.816048,9.459732,8.201778,0.289588,3.076790,-3.063760,5.120191,0.890941,1.768057,7.148425,8.700656,-3.409840,8.145339,5.346969,3.171168,1.473403,-1.489336,-9.385405,-1.005823,-1.622135,-1.138476,-9.752029,-2.792000,-4.195661,3.100247,-2.414383,-2.321222,9.352823,4.935714,-3.624959,0.912251,-5.790926,-9.320426,-1.275424,-4.741400,-7.395862,7.907059,-1.965649,8.971237,-8.472182,-7.601757,7.812492,0.079836,-1.758065,7.515897,8.519207,-2.874811,-6.745798,-1.675343,4.210175,9.707465,9.003760,1.537755,-9.887602,1.421424,4.298530,4.345625,-9.117411,8.473580,-7.597060,4.336319,8.863296,4.612151,-1.113413,-8.970916,8.383729,2.924129,6.395214,-2.730680,0.573249,-0.901363,-0.511156,6.713643,-5.539226,3.020356,1.040314,4.090379,6.408433,-2.066675,-3.892190,9.775077,-9.389575,8.335241,2.690375,-7.621528,3.056293,6.649778,-3.410426,-6.456402,8.591699,4.291133,-9.875975,-3.233311,-6.473187,1.471958,4.955294,-1.227329,5.774096,1.289997,2.377500,-4.592631,-1.409073,-5.155204,-7.909600,-4.004553,2.012254,5.634916,-2.453178,6.096077,-6.053157,8.612714,6.226627,-0.946739,1.320330,-7.670509,5.152834,6.679182,-0.149951,-6.434408,-1.813679,8.577866,8.285847,6.217620,-0.100290,-1.543905,6.502752,-3.819863,7.295300,-5.330770,5.809157,4.921850,9.770825,-0.668492,5.886380,-6.313466,7.043866,0.736306,-6.582792,-1.181562,3.453282,-3.043735,8.891399,8.769183,5.084376,6.731641,-1.153514,1.157365,-7.192562,-0.186609,-9.805522,6.492075,-4.418618,-9.997047,-9.692916,7.569450,9.341126,-7.350348,-8.159852,9.649620,9.869896,-1.544603,-1.041083,4.029002,-2.147211,-6.228205,4.177763,-7.418777,-1.992290,-9.281850,-3.167581,-9.680092,4.698280,-9.489923,-3.100366,1.805633,-5.648505,-7.045424,1.035758,5.495362,4.807728,4.021063,-0.626918,-3.742759,-9.576455,5.394721,-6.098521,9.627450,-3.818695,9.488083,1.956467,5.625307,1.484121,-5.468055,8.360980,-2.999725,0.995855,6.157400,6.127194,-4.776266,5.816597,-8.434281,9.144690,1.576271,7.260997,9.093135,-8.321496,7.600006,-8.384899,-4.914867,8.353157,-8.120014,-9.077337,-0.840262,0.704760,-6.676543,-8.700192,-6.116063,-7.646212,-3.336156,-4.061497,-2.822400,-2.690129,-5.277915,-3.779768,-7.032362,0.342471,-5.602637,5.578138,-8.265487,-7.197265,5.234790,9.756871,-4.200476,6.994354,-4.714481,-9.351525,-5.480403,-0.013914,0.884383,-1.354956,-2.545091,-9.355030,2.789336,-7.561910,-3.062389,-8.597852,2.734789,5.649342,0.056479,-8.895461,9.628401,6.456471,5.134147,-6.461506,-4.105769,6.932603,4.908092,3.119819,9.270018,-5.068139,-8.158600,7.465034,-7.441467,-3.182795,1.556461,0.065285,2.632862,8.889388,-8.521393,-4.184534,-8.960418,-0.346749,5.470420,-3.031645,8.847086,8.977463,-3.610194,1.779327,0.859155,-1.009637,8.521271,4.083185,-0.549368,3.747475,7.249424,6.236739,4.956015,8.349557,-7.501885,8.361527,-1.132018,4.460226,1.891775,7.206272,-4.046984,-4.957968,-0.925676,6.500873,-2.832661,4.481165,-2.775150,3.128668,-2.442082,-4.178836,-4.825794,-1.691198,-7.000133,9.367351,3.394193,6.879662,2.802966,0.861216,4.343704,-0.848362,2.028126,4.767346,6.865464,-3.705169,4.246591,-5.530779,-4.069671,-7.584983,-5.575937,8.684904,8.403257,-2.672407,-1.886192,-9.742076,-5.008633,6.109778,-4.363126,4.125055,2.998897,-3.253704,-7.263077,-9.650763,4.517741,-5.128826,9.792975,7.267883,-6.975820,8.700734,6.152583,-3.444882,-3.956929,-5.783902,7.994231,-6.740084,3.039520,1.085806,6.823123,-8.472246,7.700989,1.414150,-2.829505,4.184653,-2.285599,8.564376,-3.650247,2.609397,1.740608,1.599148,9.147841,2.732375,-0.773649,-2.859593,5.190279,0.014408,3.469162,2.691610,7.666865,-7.411108,8.586894,-8.696831,-3.002370,-8.251549,2.448251,-0.719582,-5.374836,0.760114,-9.875223,-5.775161,-4.660898,-3.318293,-9.279992,-3.809710,-1.830052,4.013407,-9.848679,6.437676,4.890947,6.144004,-4.335626,5.159938,4.433433,6.515329,4.233231,8.211119,0.090062,5.475579,4.221543,-3.911458,3.557688,1.014857,5.995497,-8.309784,3.764855,7.968476,5.243567,-0.964309,7.277230,-5.163151,5.486133,-7.151426,-4.023499,6.439662,8.485439,0.919140,5.955062,0.353522,-3.802364,-3.880453,3.813590,3.256615,-4.559673,9.447024,8.341291,-1.635548,-2.421885,-8.225252,3.406409,-0.651533,6.663967,3.415721,0.980315,1.070770,-4.406834,6.244443,6.272838,-4.346813,-9.559679,9.876591,2.407731,-3.217004,-2.021725,-0.443214,-0.155360,9.366638,4.293938,9.878083,4.191522,-1.358833,-9.732924,5.992444,-1.523292,0.159992,8.527583,-4.580008,1.478189,-3.008721,6.242250,0.617426,-9.573186,9.283783,9.987430,-7.239477,1.518141,-9.776899,-8.033001,2.475546,8.775547,8.762430,9.569660,2.091660,-4.164817,8.013413,4.074557,-7.748235,6.172626,2.603370,-8.944795,6.205215,-2.450458,4.334190,4.376580,5.063692,4.871075,8.313315,-9.067845,9.096199,3.434773,7.754020,7.117953,-3.845925,9.806383,2.266768,4.385670,-5.527707,-4.855746,-4.401938,-6.930398,-0.968947,-6.134805,7.668374,3.583957,6.255718,0.625112,0.783683,-1.911740,8.015463,4.012326,9.411203,2.619406,-2.155043,1.406856,6.346107,-4.161171,-4.351638,3.787845,6.486085,-0.702725,2.410312,9.402788,3.191266,-5.466609,-7.315616,2.742088,-6.019076,4.917745,5.113747,4.615292,-5.246851,-5.950818,-7.825446,-5.006246,-7.358894,0.032166,-3.253301,-5.980126,-5.402244,-1.753888,-9.353928,1.485092,-7.396927,8.619056,3.470200,-2.541821,-2.134546,-1.735158,9.853744,7.111328,-6.728613,9.579157,5.577879,-4.767034,3.992269,-5.474557,-0.702031,-7.128882,-6.745202,-3.044157,7.845716,-9.383502,-3.458236,-2.480015,4.933448,6.030696,-8.215499,0.626160,8.492938,-5.777609,-9.906911,-3.659168,-1.473065,-9.082001,8.186028,-4.688579,3.093802,-3.898691,-9.170621,4.590594,-2.643848,2.239132,-6.066065,4.560924,-0.152999,-5.529828,-1.862773,9.914562,1.849841,-3.330876,8.759069,7.282907,3.502502,-4.529475,3.268655,5.769291,-9.976361,-2.929154,5.983460,-2.936242,8.883897,7.124810,-0.088801,-9.923602,-0.744492,-2.582436,-8.406148,-0.909809,9.312428,9.690322,9.803255,9.659176,5.710095,-6.917649,5.489410,-3.804587,0.756069,-1.219605,-7.429210,5.919119,7.533757,-9.988733,-6.592882,4.121095,6.587862,-6.105123,-1.789105,5.719796,0.087670,-9.053119,-0.749236,-8.262564,-8.029433,3.127241,3.754319,8.075545,-1.813262,-7.937889,7.322070,9.671141,-5.240107,1.018241,1.595325,-5.219351,-7.815504,1.167818,5.266531,-4.625368,-1.330130,5.366308,-0.302150,8.163448,-7.597090,2.279340,8.679050,1.516925,-7.621178,-7.107612,1.662550,8.562756,-4.195111,-0.196603,-2.161728,7.211063,1.573458,-8.139895,-7.627507,-2.550816,-4.752096,-5.294602,-1.704493,6.679654,-4.228772,-6.120701,3.167128,9.513611,-3.836095,1.073610,-0.611625,-6.217429,4.113460,5.087938,-2.154232,6.362004,-9.125113,-6.473080,6.565269,7.274331,-2.371934,1.307072,6.364831,2.521837,-8.930831,-4.789464,4.182926,-9.081501,-9.699256,-2.764481,-7.461254,0.289098,1.915452,9.005206,3.476193,-7.545300,3.159914,5.170218,-5.153689,-1.112834,-9.352648,6.683237,6.683731,-3.346748,-2.634557,-5.946045,-7.617666,4.664139,-0.647297,-7.177682,2.613887,6.361081,-3.079823,-3.994360,3.713844,-9.645682,4.775986,8.353592,0.300288,-8.752034,3.429841,-8.766421,-5.713317,6.062714,3.699154,9.578839,4.025903,4.454819,9.026837,-3.261972,-9.188175,-4.751227,7.472796,6.822140,-2.347630,-5.154170,-5.124677,5.904020,-3.298069,9.686047,2.742382,-6.921067,6.565302,-0.128584,1.849791,1.388084,1.712392,-0.760434,-9.934023,-1.214962,4.733589,-5.976443,4.134922,9.001394,-2.451487,8.306166,9.552339,-6.312786,4.151527,1.893951,-2.587335,8.156025,1.381064,-2.843614,2.738672,-4.916903,2.164712,-1.537438,-7.123810,-6.782425,0.317148,-5.147835,3.468074,4.057789,-0.119033,-7.809423,-1.846609,-1.260015,3.004115,2.663351,8.675855,2.350145,-0.716359,-9.512431,3.682978,6.792542,-6.106094,4.882808,7.062925,2.239408,-6.260056,-4.763954,7.301325,-4.692445,1.935366,2.154167,0.166287,3.005991,-4.816057,-4.502980,-9.316889,-6.363887,-4.430770,-8.340366,9.283728,5.893388,2.125457,-3.313675,-5.473351,0.497922,-0.199116,1.288646,-6.482146,7.082796,-0.660043,-4.722343,5.445502,3.755365,3.449734,7.201536,4.976651,-3.810765,-4.626465,5.636713,0.016362,-2.733388,5.323476,1.187840,-3.016278,5.808980,-1.733783,5.814795,-2.070308,7.169383,8.656543,-9.805345,6.580879,2.615132,3.985915,1.242399,-7.687911,-8.947348,4.330068,8.926669,-7.898521,-8.262762,-8.088406,6.764662,-2.441513,-8.858699,5.629110,8.639884,7.388612,0.328450,1.050701,8.269962,-1.445049,-0.378469,3.964855,-8.560737,-2.740585,1.564543,-6.350984,1.039902,2.688777,-5.429741,6.864959,-8.585161,7.005045,4.998133,-5.313745,-8.621290,6.465278,-4.328006,-8.336091,-9.988527,7.532349,3.197623,-1.017499,-3.842228,5.341299,6.244018,-7.195314,2.823212,0.219485,1.150415,-6.181618,-1.181769,-1.656258,-7.819929,4.923725,7.762855,-5.966042,1.549251,8.621228,3.623247,-0.038461,4.797887,-5.563470,-6.542138,-3.267414,8.571714,4.705237,-5.881769,-8.526143,-1.011252,1.080926,-5.858885,2.667676,4.182237,2.500194,7.729476,2.549688,3.296159,8.045804,9.813327,7.441437,-1.840999,-3.913185,-2.838993,-8.071538,7.178028,-9.279456,5.832638,3.842408,-8.445388,2.665336,-8.607829,9.440394,-8.685333,-0.857099,-1.562424,-3.609663,-9.849112,2.739642,4.032123,-5.388899,1.135831,-0.329767,-4.043126,9.957284,8.249749,-4.728745,5.300656,6.266913,-4.783391,0.565135,8.401916,-7.986138,4.516589,-6.422169,6.355226,5.042581,0.025435,2.875773,0.896761,-7.779774,-0.028757,-4.318873,-4.900677,5.056511,2.189279,3.196045,5.056511,2.470284,5.789916,3.112929,-5.560368,-5.174426,7.525139,2.934950,-1.027146,5.927383,-1.987661,3.852362,7.891596,6.048757,0.152095,9.329200,-9.151155,5.288454,-7.146475,-7.431737,5.033903,-4.679065,7.499165,0.117133,5.025177,-3.872956,1.788131,4.434459,-1.755030,0.478693,4.369076,-2.954244,9.202685,-5.794046,9.344339,-6.048417,5.563545,0.483264,-3.043760,-0.949380,8.118708,6.284503,-4.980965,9.791998,-3.108880,0.964145,1.039691,1.399067,3.115317,-2.029766,7.995537,-5.716467,9.383686,3.112824,-8.259330,8.407710,-1.750317,-4.091369,4.524122,3.249610,5.101352,-6.842804,1.044452,0.707341,8.467703,6.263472,6.675506,2.394088,2.611535,-6.419404,-8.315372,3.921724,8.826773,-0.126962,9.479899,-2.939984,-1.799933,2.859869,-8.824299,-2.062731,-1.403839,-3.229335,1.831253,-1.193364,-5.347468,9.481990,-4.144956,7.794679,-7.423626,4.462887,-1.964901,-9.442057,-4.422515,-5.369646,5.403152,-0.687422,-6.151330,6.458685,-6.966539,-4.435790,-7.992169,1.668024,-8.022922,-1.697321,-3.145983,-0.208935,6.619851,2.130798,-2.878617,5.217583,8.368098,1.794334,-4.867360,3.851335,-9.534763,-2.717069,7.358198,7.224631,-2.474982,7.816727,9.786279,2.004806,-3.491539,-2.926287,-7.117906,-7.416433,6.920395,1.687387,-6.802010,-3.134195,-5.414759,-9.466936,3.573962,8.811428,5.857596,-6.753130,-2.320065,-2.790231,5.198534,8.465278,-7.651157,0.611103,2.937468,8.683521,5.484375,-2.880571,-7.339470,-6.878557,9.225033,-3.268082,-0.562985,4.733875,-0.436863,1.096379,0.470076,-2.303859,9.173239,9.282553,-8.955193,-9.912931,0.349231,-3.085053,3.528991,7.481017,-4.533573,-1.631918,-0.299203,-8.235153,3.597058,-8.744140,-8.343636,-4.062415,-4.973188,7.246811,-0.018333,7.096226,-5.462231,-7.536229,-2.324528,-4.183427,6.609087,7.278727,4.644459,-8.038648,3.527333,8.120263,7.618017,5.534355,7.628737,2.871433,7.701375,4.564118,-7.118601,4.966621,4.512175,1.793450,-6.138047,1.016582,-2.597518,-5.331464,-0.032931,-4.636662,7.870829,-9.064411,-9.833051,9.163370,-3.064460,6.589546,-5.842441,9.148200,9.857090,-3.316741,0.512693,1.223515,3.818298,0.322642,0.299534,-1.674025,-6.823639,4.787306,-1.130019,-7.336438,-1.579797,5.270771,-9.556783,-6.404588,3.894083,-3.298934,-2.752865,2.748778,3.344371,-7.724860,-9.697412,-4.368993,9.739374,3.619936,-9.130794,-1.824869,5.191968,6.013786,-4.481181,9.078157,-2.175739,-5.022077,5.522143,-0.204096,-7.709371,2.183983,0.493917,6.204794,-9.032528,-2.592393,-4.275490,1.282151,-4.789930,-5.962337,-3.133721,4.320013,6.257688,-5.654464,3.117527,3.121739,1.034968,-9.099927,-3.750077,0.938952,-3.702894,4.866838,-4.578924,-5.609014,5.466996,2.980065,4.947217,-8.046821,-2.746492,4.806146,-7.677804,0.551021,-1.938776,-2.782676,-0.305368,5.388255,-8.767553,0.210309,5.775540,8.004242,-5.434232,-8.686616,0.093620,-0.965989,2.811103,0.857277,9.290495,1.485812,-0.424460,-1.666297,5.895145,6.771221,2.546360,-0.495666,4.571393,0.552221,-5.374419,5.481006,7.610494,3.726956,6.416037,-6.183559,-9.358188,-7.451298,3.996144,8.730095,-1.449260,-7.716431,9.931883,-7.535499,8.836392,2.577226,-8.388592,1.079883,-8.897819,-7.807811,-6.354115,-9.974604,1.938030,4.911452,-1.876060,7.473936,-2.094299,-3.664305,0.043085,-6.837477,-0.940502,-1.318970,-5.814072,-9.896916,4.434213,-3.497769,5.194705,-5.881979,-3.924509,-8.033357,-4.152729,4.118260,8.173497,-0.067772,7.774874,0.805446,-1.113844,-4.438712,-7.285243,-1.027425,1.296072,2.136435,8.231468,5.988732,8.102707,-2.852224,-8.554050,-1.930283,3.166589,-2.082676,4.282314,8.615859,9.085269], dtype = "float32")#candidate|1617|(1386,)|const|float32
call_1616 = relay.TupleGetItem(func_148_call(relay.reshape(const_1617.astype('float32'), [9, 14, 11])), 0)
call_1618 = relay.TupleGetItem(func_150_call(relay.reshape(const_1617.astype('float32'), [9, 14, 11])), 0)
func_1346_call = mod.get_global_var('func_1346')
func_1347_call = mutated_mod.get_global_var('func_1347')
call_1619 = relay.TupleGetItem(func_1346_call(), 2)
call_1620 = relay.TupleGetItem(func_1347_call(), 2)
output = relay.Tuple([bop_1544,call_1558,call_1568,call_1606,call_1614,call_1616,const_1617,call_1619,])
output2 = relay.Tuple([bop_1544,call_1559,call_1569,call_1607,call_1615,call_1618,const_1617,call_1620,])
func_1627 = relay.Function([var_1542,var_1543,], output)
mod['func_1627'] = func_1627
mod = relay.transform.InferType()(mod)
var_1628 = relay.var("var_1628", dtype = "uint8", shape = ())#candidate|1628|()|var|uint8
var_1629 = relay.var("var_1629", dtype = "uint8", shape = (3, 14, 14))#candidate|1629|(3, 14, 14)|var|uint8
output = func_1627(var_1628,var_1629,)
func_1630 = relay.Function([var_1628,var_1629,], output)
mutated_mod['func_1630'] = func_1630
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1505_call = mod.get_global_var('func_1505')
func_1507_call = mutated_mod.get_global_var('func_1507')
call_1687 = func_1505_call()
call_1688 = func_1505_call()
func_1218_call = mod.get_global_var('func_1218')
func_1222_call = mutated_mod.get_global_var('func_1222')
const_1692 = relay.const([[6.478503,-4.312874,7.208206,8.289730,-7.806494,-1.547049,3.315542,2.806742,-2.563972,2.649995,9.536097,6.096704,-2.285290,-7.374309,-0.488308,9.194461,-3.303109,5.351681,-7.290559,2.656569,7.153128,-3.452286,0.451949,0.231472,-7.678775,8.949165,-5.168249,9.986549,-1.489281,-3.548706,-3.077033,-6.749073,3.583229,-8.010294,-2.818769,-9.214838,3.539194,4.871307,-7.960361,1.179125,1.203220,3.395177,7.473128,4.503446,-0.555045,-0.568780,9.082170,6.720283,-7.034793,6.970837,4.724365,3.110594,-9.773251,-5.522961,7.189836,9.204938,-9.054845,8.720073,1.014404,2.457620,-8.638631,-0.502164,-2.489090,-6.078120,-2.239238,-2.590408,-2.354607,-6.503006,-9.861345,4.861306,-1.111662,-0.395296,8.763031,8.031381,-4.033395,2.245185,-3.000974,4.992322,8.228870,-4.359446,3.810971,-6.631813,-7.864394,-1.615532,0.840888,-3.423114,6.171175,-6.530518,-4.021655,9.470932,6.430549,7.002998,6.138353,-7.332182,4.308842,-3.572017,0.622242,-8.794677,5.243671,-4.353461,-5.613497,5.815539,-3.335421,5.172049,4.743463,5.367140,3.981511,-4.386859,6.849555,6.955163,2.066317,8.690704,-7.109527,-6.511941,0.317303,-2.144876,-8.334400,9.831995,-9.469918,2.498040,3.044737,-6.180510,-0.875020,2.552738,2.814899,-7.393164,-4.042494,-8.155405,6.948058,1.951468,6.135456,-0.140014,2.675565,-1.439494,-3.299099,4.338317,0.652896,-2.316244,-1.420354,4.245743,8.775291,7.914637,-6.884880,-6.595646,-2.716426,-6.831788,-1.953690,3.936575,-4.155608,4.880613,-0.805062,-9.733754,-7.356778,1.834855,7.428853,-9.213109,-0.922244,-7.989749,1.815716,-9.482210,-2.744026,-7.907180,3.133617,-2.194803,7.318436,1.461520,-1.817562,2.030164,-1.101910,-3.345087,-8.163691,-3.049740,-6.827154,8.782188,-7.318382,0.237860,-3.802950,2.256295,-6.858142,9.645417,2.701346,6.890311,-9.575724,-6.364376,2.637813,-0.801462,7.370989,-8.899821,-9.857986,-6.940033,2.892376,7.284513,5.865444,3.779443,7.687149,6.270014,6.476391,-7.870530],[-7.294956,2.269272,8.447350,6.701673,-2.914331,-1.413938,1.150481,0.273581,0.753543,-4.494338,0.023837,-5.687583,-9.744782,5.702804,-7.295817,5.434076,-1.266621,-2.374689,9.836355,1.974534,9.644879,-1.004698,-6.031412,3.505648,-4.398253,-5.399497,9.113573,-0.659906,-4.359369,-7.999975,-4.004207,2.587153,-2.515014,-3.460712,1.236427,5.485959,-2.471622,4.055218,-5.946924,-5.379724,-4.694346,-3.476069,5.555316,8.800621,3.732228,-2.694136,-6.003535,-3.462251,7.586425,-4.395184,-2.218583,9.220912,5.105480,0.665032,1.862867,-5.062466,-3.969489,9.105918,-9.446074,-4.052322,-1.649993,7.044708,-2.146396,2.159540,-2.759770,4.736798,-6.951749,6.397491,8.545973,1.134443,-1.460985,7.086860,-2.992746,-7.905497,3.569118,-5.741246,0.284304,-0.365015,-0.717347,7.429778,5.522401,5.327887,0.641853,5.929911,-9.185612,1.456847,2.042014,1.800267,-4.123462,-8.881529,-7.613318,9.736408,-6.500172,-7.810836,-9.747660,4.591200,-3.408579,9.154442,-0.764134,-6.491672,2.453046,3.544918,-4.262132,-2.699269,4.751967,6.681410,-9.051382,2.984097,-9.120094,1.671258,-7.402596,7.775384,8.008826,-3.776938,3.337568,-0.651002,3.953133,9.875790,2.257567,-7.739925,-6.923659,-2.817446,-4.049739,7.832672,6.342498,8.534750,-9.622162,-0.615749,2.309631,9.830006,-7.869563,4.872409,9.522474,3.590672,6.980562,7.276499,2.138681,-4.636967,-2.752938,5.119423,-2.659291,2.381699,5.329097,-3.376224,-9.959654,1.695865,-4.743864,-8.337265,-5.759375,-7.179193,1.009430,2.110775,9.594456,5.955029,-2.262935,-9.533652,4.496497,6.904205,0.043140,-2.434457,3.983258,-6.691948,-1.321213,8.909889,0.803783,-8.574371,-1.488913,3.476296,2.084827,3.611890,8.541020,-8.934498,1.051563,4.436381,-4.754530,-3.489835,-2.079104,6.278449,-1.194355,2.860469,-1.156270,-9.785655,6.773078,-1.899252,-9.279517,-6.793877,9.561205,8.914288,-5.723185,-3.148219,-0.182327,-1.150844,1.963229,7.202491,0.460014,2.739388,3.862412,-0.798675],[-4.236513,0.238048,-9.742461,-8.285853,3.594986,-4.851922,1.969153,-3.934608,5.715299,-2.067395,-5.013870,-9.589927,-6.410257,3.487213,-3.351053,-0.806321,-7.784333,4.487216,-1.564652,1.224468,8.515431,2.081514,-0.179049,-1.054972,6.954185,-6.812528,0.710538,9.723886,5.881115,2.475952,-6.695535,-8.917309,1.327158,0.737212,1.358690,5.008894,-1.779154,9.857885,-8.572101,-4.079654,-3.021746,5.539387,-1.199600,9.365057,5.032906,7.838390,0.367354,8.830522,8.532074,-2.341610,9.379874,-2.881629,-0.305175,-2.247686,2.814765,-1.488798,2.723200,9.272148,-0.820357,3.187758,6.440514,7.640745,-3.948323,-2.693323,4.611784,3.837149,-5.817886,-4.405563,6.739120,-7.244796,-5.093254,2.049309,-1.412331,9.500762,8.134485,7.638297,0.976554,8.517711,6.936570,6.118578,-8.749163,1.190303,-0.890414,-8.356772,-1.822553,5.890951,4.720938,-8.062034,9.836670,4.766005,5.635701,-4.360904,7.185540,-6.843591,2.797153,-8.778466,-6.005008,-9.475703,8.286206,1.000773,5.071511,-8.026031,1.894904,1.551462,-1.376334,9.503732,8.770818,-0.566245,-1.791913,5.172134,4.749169,0.422851,6.276326,-0.604621,-6.316572,-9.056289,-5.941427,3.412756,3.947076,3.075340,6.062447,5.850985,-6.379523,6.453693,7.350729,-0.973925,-5.934440,-9.967352,3.230418,2.240587,-0.058842,-6.946740,-5.397030,-1.576411,-5.782609,-4.657894,9.220455,-9.176288,3.586386,-2.352701,-4.939261,0.785525,-3.827511,-6.652731,3.915274,-5.764008,3.726064,-4.711816,-8.553194,0.630923,-8.084502,-4.175764,-5.783055,7.919954,-7.419624,-9.921733,-6.305393,-1.833241,5.288105,7.167484,-6.299365,3.807221,-8.614450,2.042902,-6.150307,5.239915,-9.792885,-1.245781,-4.006137,7.585799,5.589829,5.759883,0.149499,0.403066,-8.117282,8.222855,-1.831741,-8.825293,0.785572,9.166464,-0.105494,-4.723882,-9.939762,2.841307,7.298213,4.326388,-4.958780,-5.798557,-2.072278,3.446621,-5.686006,8.418054,9.814056,8.211037,-0.145008,-1.271041,3.386055,3.345456],[-6.747897,-3.008437,2.072902,-3.319464,-2.513758,-4.160794,-7.478871,5.519925,-8.502771,7.080151,-5.160461,-1.302287,7.223011,-0.278152,-4.647462,-9.930087,-0.970889,-5.369216,2.950211,-1.164491,1.249106,-9.762585,-8.660185,9.569059,8.900911,-8.868423,3.938319,-6.430827,2.621310,-4.668362,-9.449948,-1.806808,3.001166,6.045391,-5.258121,2.630052,-9.261206,0.423943,5.188651,3.714293,-8.325927,1.537436,7.583649,-6.480637,-2.677850,-1.750494,-9.897468,3.476669,2.816615,-6.158174,-8.330969,8.641243,5.046200,6.622518,3.789454,8.470529,-5.987991,-3.591833,-6.898642,0.027754,9.390942,-2.823307,-6.832361,8.848250,-0.290446,2.607081,3.402129,7.866995,-9.020399,-8.434003,2.345877,7.337756,-5.841270,2.706885,-2.159121,4.870578,-1.972272,8.348145,5.214154,-4.491288,-4.546309,4.669072,4.627577,5.313949,3.968584,8.217600,8.956455,3.966148,-7.153600,6.090524,0.782318,-4.850118,-3.886371,-2.009027,2.552446,0.525862,1.140092,7.768608,5.337276,-8.979678,-1.872637,0.853981,-1.060277,8.721643,-0.414303,7.797939,4.194105,5.871438,-7.493987,-9.367523,8.767996,3.849166,-6.320585,4.144914,8.595242,-8.679279,4.029005,-8.837285,-0.002729,6.937828,-4.264853,-9.742859,-8.807658,2.524183,-0.015463,-7.537393,8.425098,-0.715622,7.344116,7.648713,5.038486,-1.921062,8.105015,-8.078548,6.528402,-2.904690,-8.260746,7.406348,2.457142,7.486193,-9.998573,1.992283,-9.585711,6.146367,5.180081,-5.252820,2.286293,7.806121,3.483674,-8.417313,6.135895,-4.564186,-7.142502,7.590451,-5.762607,3.880931,-3.137306,-1.638919,-6.814416,-2.030639,-7.309422,-8.554880,-3.610343,4.266781,9.088438,-6.551680,-3.862784,-7.532650,-2.182998,-7.983676,0.189108,-0.954865,-5.162561,-8.968584,-2.307561,-9.135532,6.927306,-5.714986,4.001092,-9.419515,-4.385061,4.954912,9.179796,9.793727,0.576324,6.337287,7.610111,4.470895,-0.819209,-6.108380,-5.447726,-4.141148,8.832479,9.802024,-4.715421,7.267822,-8.577851,4.358750],[-9.554282,-9.226638,6.873449,-6.170379,2.023554,-2.567353,6.208385,-3.100130,-4.396658,-5.608619,-5.475517,-2.498980,7.736254,8.198093,-8.174389,7.172407,6.480178,5.986096,9.021355,6.997763,8.089585,0.054268,-2.774100,-4.328457,-9.322516,-7.421626,2.384175,7.118788,-4.773650,-5.422501,6.429605,0.451169,4.123094,0.529445,8.141815,5.409623,1.635225,8.523677,8.341477,-4.814074,-8.125447,-0.868762,9.342028,-3.696401,-2.637629,-9.922994,7.947492,-5.505050,-4.810970,5.019553,-5.011243,-7.931747,7.630541,6.394426,-5.054483,-2.639172,-9.574034,-3.614538,-1.209687,7.036990,4.305904,4.142282,6.065933,-2.500127,2.233757,9.089628,-7.856724,8.864517,-1.663804,-1.710880,-4.644892,3.814325,5.368601,-6.937835,3.915568,-4.667706,-8.573148,5.501951,7.956391,0.149826,6.205039,-2.140227,4.597509,-8.867519,-5.966161,-4.782311,4.638676,4.499893,0.822521,1.328290,0.046906,5.798563,2.234776,-2.968990,-1.804867,3.393794,-8.871518,-3.537517,-2.842225,1.143574,0.685868,2.916753,-3.167597,-9.143077,7.631183,-2.538468,9.209926,-6.878076,-8.973123,-9.883307,-7.372950,-2.112465,8.642720,-9.822071,3.805782,4.199468,5.597956,-0.819488,1.357578,6.046037,-0.892966,-8.418774,-4.394614,-1.130959,3.567964,6.824541,-7.802410,-2.269459,-9.394347,2.178756,4.393313,0.019298,-1.332248,-6.398377,-3.226496,-6.392783,5.851312,-7.469404,1.288401,-9.421812,9.328431,-9.687754,6.425362,-3.357161,-4.966895,-7.491910,-6.725914,-0.703645,9.990080,-0.156878,0.008617,-6.538011,1.480855,-5.044041,9.069113,5.627047,-8.698493,-1.553600,0.680806,-6.145781,1.070427,1.764405,-8.049691,-2.000645,-7.258952,5.792257,8.634132,-6.255273,-8.723382,2.107730,5.706897,0.949741,-9.940605,5.409185,-6.400218,2.911920,-5.341730,8.735457,3.590583,-0.644351,-1.870700,5.104058,4.579800,7.056379,-2.483783,4.171794,1.002350,3.828035,3.908432,2.803021,-0.029687,3.177141,5.617524,1.281103,-5.442192,-5.548882,7.830810,-2.294235]], dtype = "float32")#candidate|1692|(5, 198)|const|float32
call_1691 = relay.TupleGetItem(func_1218_call(relay.reshape(const_1692.astype('float32'), [11, 6, 15]), relay.reshape(const_1692.astype('float32'), [11, 6, 15]), relay.reshape(const_1692.astype('float32'), [11, 6, 15]), ), 5)
call_1693 = relay.TupleGetItem(func_1222_call(relay.reshape(const_1692.astype('float32'), [11, 6, 15]), relay.reshape(const_1692.astype('float32'), [11, 6, 15]), relay.reshape(const_1692.astype('float32'), [11, 6, 15]), ), 5)
uop_1703 = relay.asinh(const_1692.astype('float64')) # shape=(5, 198)
output = relay.Tuple([call_1687,call_1691,uop_1703,])
output2 = relay.Tuple([call_1688,call_1693,uop_1703,])
func_1711 = relay.Function([], output)
mod['func_1711'] = func_1711
mod = relay.transform.InferType()(mod)
mutated_mod['func_1711'] = func_1711
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1711_call = mutated_mod.get_global_var('func_1711')
call_1712 = func_1711_call()
output = call_1712
func_1713 = relay.Function([], output)
mutated_mod['func_1713'] = func_1713
mutated_mod = relay.transform.InferType()(mutated_mod)
var_1719 = relay.var("var_1719", dtype = "int64", shape = (10, 7, 9))#candidate|1719|(10, 7, 9)|var|int64
var_1720 = relay.var("var_1720", dtype = "int64", shape = (10, 7, 9))#candidate|1720|(10, 7, 9)|var|int64
bop_1721 = relay.multiply(var_1719.astype('int64'), relay.reshape(var_1720.astype('int64'), relay.shape_of(var_1719))) # shape=(10, 7, 9)
func_1022_call = mod.get_global_var('func_1022')
func_1023_call = mutated_mod.get_global_var('func_1023')
call_1725 = relay.TupleGetItem(func_1022_call(), 1)
call_1726 = relay.TupleGetItem(func_1023_call(), 1)
func_820_call = mod.get_global_var('func_820')
func_821_call = mutated_mod.get_global_var('func_821')
call_1733 = relay.TupleGetItem(func_820_call(), 2)
call_1734 = relay.TupleGetItem(func_821_call(), 2)
output = relay.Tuple([bop_1721,call_1725,call_1733,])
output2 = relay.Tuple([bop_1721,call_1726,call_1734,])
func_1737 = relay.Function([var_1719,var_1720,], output)
mod['func_1737'] = func_1737
mod = relay.transform.InferType()(mod)
mutated_mod['func_1737'] = func_1737
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1737_call = mutated_mod.get_global_var('func_1737')
var_1739 = relay.var("var_1739", dtype = "int64", shape = (10, 7, 9))#candidate|1739|(10, 7, 9)|var|int64
var_1740 = relay.var("var_1740", dtype = "int64", shape = (10, 7, 9))#candidate|1740|(10, 7, 9)|var|int64
call_1738 = func_1737_call(var_1739,var_1740,)
output = call_1738
func_1741 = relay.Function([var_1739,var_1740,], output)
mutated_mod['func_1741'] = func_1741
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1711_call = mod.get_global_var('func_1711')
func_1713_call = mutated_mod.get_global_var('func_1713')
call_1807 = relay.TupleGetItem(func_1711_call(), 0)
call_1808 = relay.TupleGetItem(func_1713_call(), 0)
func_1627_call = mod.get_global_var('func_1627')
func_1630_call = mutated_mod.get_global_var('func_1630')
const_1817 = relay.const(8, dtype = "uint8")#candidate|1817|()|const|uint8
var_1818 = relay.var("var_1818", dtype = "uint8", shape = (588,))#candidate|1818|(588,)|var|uint8
call_1816 = relay.TupleGetItem(func_1627_call(relay.reshape(const_1817.astype('uint8'), []), relay.reshape(var_1818.astype('uint8'), [3, 14, 14]), ), 5)
call_1819 = relay.TupleGetItem(func_1630_call(relay.reshape(const_1817.astype('uint8'), []), relay.reshape(var_1818.astype('uint8'), [3, 14, 14]), ), 5)
func_1065_call = mod.get_global_var('func_1065')
func_1067_call = mutated_mod.get_global_var('func_1067')
call_1823 = relay.TupleGetItem(func_1065_call(), 1)
call_1824 = relay.TupleGetItem(func_1067_call(), 1)
bop_1826 = relay.logical_and(call_1823.astype('bool'), relay.reshape(call_1816.astype('bool'), relay.shape_of(call_1823))) # shape=(9, 14, 11)
bop_1829 = relay.logical_and(call_1824.astype('bool'), relay.reshape(call_1819.astype('bool'), relay.shape_of(call_1824))) # shape=(9, 14, 11)
output = relay.Tuple([call_1807,const_1817,var_1818,bop_1826,])
output2 = relay.Tuple([call_1808,const_1817,var_1818,bop_1829,])
func_1835 = relay.Function([var_1818,], output)
mod['func_1835'] = func_1835
mod = relay.transform.InferType()(mod)
var_1836 = relay.var("var_1836", dtype = "uint8", shape = (588,))#candidate|1836|(588,)|var|uint8
output = func_1835(var_1836)
func_1837 = relay.Function([var_1836], output)
mutated_mod['func_1837'] = func_1837
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1124_call = mod.get_global_var('func_1124')
func_1125_call = mutated_mod.get_global_var('func_1125')
call_1848 = relay.TupleGetItem(func_1124_call(), 0)
call_1849 = relay.TupleGetItem(func_1125_call(), 0)
output = call_1848
output2 = call_1849
func_1852 = relay.Function([], output)
mod['func_1852'] = func_1852
mod = relay.transform.InferType()(mod)
mutated_mod['func_1852'] = func_1852
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1852_call = mutated_mod.get_global_var('func_1852')
call_1853 = func_1852_call()
output = call_1853
func_1854 = relay.Function([], output)
mutated_mod['func_1854'] = func_1854
mutated_mod = relay.transform.InferType()(mutated_mod)
func_820_call = mod.get_global_var('func_820')
func_821_call = mutated_mod.get_global_var('func_821')
call_1855 = relay.TupleGetItem(func_820_call(), 1)
call_1856 = relay.TupleGetItem(func_821_call(), 1)
func_1627_call = mod.get_global_var('func_1627')
func_1630_call = mutated_mod.get_global_var('func_1630')
var_1858 = relay.var("var_1858", dtype = "uint8", shape = ())#candidate|1858|()|var|uint8
const_1859 = relay.const([-8,-7,-4,10,10,4,-5,-1,-9,-1,2,1,6,7,10,-1,6,7,-10,-1,-8,-4,-3,-6,-6,1,5,-4,-3,10,-5,-2,-1,-5,4,3,-1,7,-4,10,-1,9,-4,1,-6,-1,-2,-5,1,-3,-6,-9,5,-4,-10,-8,7,1,4,1,10,2,6,-4,5,-2,-8,-7,10,2,6,-2,-1,6,-4,-3,8,8,-3,3,-2,7,7,-2,7,-6,8,-6,1,-2,9,-1,3,3,2,1,10,-3,-6,-3,-1,-6,8,-7,5,6,-7,3,6,3,3,-3,4,1,3,2,4,4,-9,-3,-10,-8,-5,4,-6,-9,-3,-3,8,-8,9,-6,6,-7,1,-9,8,-8,8,-4,9,5,-6,8,4,7,-5,-8,-5,8,-4,8,6,-7,-6,-1,6,8,6,-8,-3,6,1,1,-1,-1,7,9,3,-10,-8,-7,-6,-8,2,-5,-2,3,6,-7,-4,-4,-10,-6,10,6,-6,-4,-8,7,8,-5,6,2,-3,-9,-9,-9,7,-4,1,8,-10,2,-5,-8,-4,3,-10,-1,4,-9,4,-4,3,-1,5,-4,4,-5,-8,3,-7,-3,1,-1,4,10,9,-3,1,9,-5,-4,-10,9,-5,3,9,10,-7,-9,-2,3,4,-4,-1,-2,5,-7,-7,4,-9,4,2,-9,7,-4,-6,10,4,-6,6,-1,-4,-5,-5,2,7,-1,10,-10,10,5,10,6,9,6,10,6,8,-6,2,6,-6,10,8,2,-1,-4,4,2,-3,-1,-10,10,8,-2,6,2,6,7,-10,-2,7,2,9,7,6,7,-2,-5,-5,-3,-4,2,-4,4,1,7,-3,9,4,-5,1,8,1,6,-10,-6,1,-2,10,-1,1,6,6,5,-3,-2,-2,-10,4,8,4,-8,-5,-1,6,3,1,-1,-9,9,-9,-6,1,-4,1,-9,-8,-9,-7,8,-4,1,4,-4,-2,-5,-4,-2,7,10,-9,-1,3,-10,2,-6,-10,-4,10,-7,1,-3,-3,9,-10,7,7,-6,8,3,-5,8,5,-2,-10,-9,-3,7,7,5,5,7,-10,4,-1,9,5,5,-9,-9,8,-9,2,6,-2,-9,2,10,-10,-1,-3,-9,6,-2,-3,-4,-9,-9,-1,-2,-7,-1,-6,-1,7,-9,2,1,-4,-3,-2,-7,1,3,2,-4,-4,-7,8,-9,2,7,6,2,-9,-6,-1,5,8,4,3,8,-5,-10,-5,-7,-6,2,2,-9,-8,-3,5,-3,-6,-2,4,-10,5,1,-10,-10,3,-6,4,6,-10,5,9,-10,-4,5,4,-7,5,10,6,-2,2,6,3,9,2,-3,-1,-5,-7,1,6,-2,-5,8,2,10,8,-1,-9,8,-4,4,6,-10,-2,6,-8,2,-1,-5,-2,9,1,3,-10,-3,4,2,9,-4,-3,-2,9,6,-6,-4,-6,-8,-3,-8,4,1,-1,9,-5,4,3,2,-1,1,7,-6,10,-9,7,-8,-1,10,-2,-5,-1,-8,6,-6,8,4,5,-8,6,-8,7,5,-4,3,3,6], dtype = "uint8")#candidate|1859|(588,)|const|uint8
call_1857 = relay.TupleGetItem(func_1627_call(relay.reshape(var_1858.astype('uint8'), []), relay.reshape(const_1859.astype('uint8'), [3, 14, 14]), ), 6)
call_1860 = relay.TupleGetItem(func_1630_call(relay.reshape(var_1858.astype('uint8'), []), relay.reshape(const_1859.astype('uint8'), [3, 14, 14]), ), 6)
bop_1862 = relay.add(call_1855.astype('int32'), var_1858.astype('int32')) # shape=(9, 1, 11)
bop_1865 = relay.add(call_1856.astype('int32'), var_1858.astype('int32')) # shape=(9, 1, 11)
func_1505_call = mod.get_global_var('func_1505')
func_1507_call = mutated_mod.get_global_var('func_1507')
call_1870 = func_1505_call()
call_1871 = func_1505_call()
func_1356_call = mod.get_global_var('func_1356')
func_1358_call = mutated_mod.get_global_var('func_1358')
var_1874 = relay.var("var_1874", dtype = "float64", shape = (1584,))#candidate|1874|(1584,)|var|float64
call_1873 = func_1356_call(relay.reshape(var_1874.astype('float64'), [16, 9, 11]))
call_1875 = func_1356_call(relay.reshape(var_1874.astype('float64'), [16, 9, 11]))
func_820_call = mod.get_global_var('func_820')
func_821_call = mutated_mod.get_global_var('func_821')
call_1876 = relay.TupleGetItem(func_820_call(), 0)
call_1877 = relay.TupleGetItem(func_821_call(), 0)
func_1272_call = mod.get_global_var('func_1272')
func_1273_call = mutated_mod.get_global_var('func_1273')
call_1888 = func_1272_call()
call_1889 = func_1272_call()
output = relay.Tuple([call_1857,const_1859,bop_1862,call_1870,call_1873,var_1874,call_1876,call_1888,])
output2 = relay.Tuple([call_1860,const_1859,bop_1865,call_1871,call_1875,var_1874,call_1877,call_1889,])
func_1891 = relay.Function([var_1858,var_1874,], output)
mod['func_1891'] = func_1891
mod = relay.transform.InferType()(mod)
mutated_mod['func_1891'] = func_1891
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1891_call = mutated_mod.get_global_var('func_1891')
var_1893 = relay.var("var_1893", dtype = "uint8", shape = ())#candidate|1893|()|var|uint8
var_1894 = relay.var("var_1894", dtype = "float64", shape = (1584,))#candidate|1894|(1584,)|var|float64
call_1892 = func_1891_call(var_1893,var_1894,)
output = call_1892
func_1895 = relay.Function([var_1893,var_1894,], output)
mutated_mod['func_1895'] = func_1895
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1022_call = mod.get_global_var('func_1022')
func_1023_call = mutated_mod.get_global_var('func_1023')
call_1897 = relay.TupleGetItem(func_1022_call(), 1)
call_1898 = relay.TupleGetItem(func_1023_call(), 1)
uop_1901 = relay.tan(call_1897.astype('float32')) # shape=(9, 1, 11)
uop_1903 = relay.tan(call_1898.astype('float32')) # shape=(9, 1, 11)
bop_1905 = relay.floor_divide(call_1897.astype('float64'), relay.reshape(uop_1901.astype('float64'), relay.shape_of(call_1897))) # shape=(9, 1, 11)
bop_1908 = relay.floor_divide(call_1898.astype('float64'), relay.reshape(uop_1903.astype('float64'), relay.shape_of(call_1898))) # shape=(9, 1, 11)
bop_1919 = relay.power(call_1897.astype('float64'), relay.reshape(bop_1905.astype('float64'), relay.shape_of(call_1897))) # shape=(9, 1, 11)
bop_1922 = relay.power(call_1898.astype('float64'), relay.reshape(bop_1908.astype('float64'), relay.shape_of(call_1898))) # shape=(9, 1, 11)
bop_1923 = relay.mod(bop_1919.astype('float32'), relay.reshape(uop_1901.astype('float32'), relay.shape_of(bop_1919))) # shape=(9, 1, 11)
bop_1926 = relay.mod(bop_1922.astype('float32'), relay.reshape(uop_1903.astype('float32'), relay.shape_of(bop_1922))) # shape=(9, 1, 11)
bop_1932 = relay.greater_equal(call_1897.astype('bool'), relay.reshape(uop_1901.astype('bool'), relay.shape_of(call_1897))) # shape=(9, 1, 11)
bop_1935 = relay.greater_equal(call_1898.astype('bool'), relay.reshape(uop_1903.astype('bool'), relay.shape_of(call_1898))) # shape=(9, 1, 11)
output = relay.Tuple([bop_1923,bop_1932,])
output2 = relay.Tuple([bop_1926,bop_1935,])
func_1936 = relay.Function([], output)
mod['func_1936'] = func_1936
mod = relay.transform.InferType()(mod)
mutated_mod['func_1936'] = func_1936
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1936_call = mutated_mod.get_global_var('func_1936')
call_1937 = func_1936_call()
output = call_1937
func_1938 = relay.Function([], output)
mutated_mod['func_1938'] = func_1938
mutated_mod = relay.transform.InferType()(mutated_mod)
func_749_call = mod.get_global_var('func_749')
func_751_call = mutated_mod.get_global_var('func_751')
call_1948 = func_749_call()
call_1949 = func_749_call()
output = relay.Tuple([call_1948,])
output2 = relay.Tuple([call_1949,])
func_1952 = relay.Function([], output)
mod['func_1952'] = func_1952
mod = relay.transform.InferType()(mod)
output = func_1952()
func_1953 = relay.Function([], output)
mutated_mod['func_1953'] = func_1953
mutated_mod = relay.transform.InferType()(mutated_mod)
func_749_call = mod.get_global_var('func_749')
func_751_call = mutated_mod.get_global_var('func_751')
call_1958 = func_749_call()
call_1959 = func_749_call()
output = relay.Tuple([call_1958,])
output2 = relay.Tuple([call_1959,])
func_1965 = relay.Function([], output)
mod['func_1965'] = func_1965
mod = relay.transform.InferType()(mod)
mutated_mod['func_1965'] = func_1965
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1965_call = mutated_mod.get_global_var('func_1965')
call_1966 = func_1965_call()
output = call_1966
func_1967 = relay.Function([], output)
mutated_mod['func_1967'] = func_1967
mutated_mod = relay.transform.InferType()(mutated_mod)
func_820_call = mod.get_global_var('func_820')
func_821_call = mutated_mod.get_global_var('func_821')
call_1992 = relay.TupleGetItem(func_820_call(), 1)
call_1993 = relay.TupleGetItem(func_821_call(), 1)
func_1532_call = mod.get_global_var('func_1532')
func_1535_call = mutated_mod.get_global_var('func_1535')
const_1995 = relay.const([[3.039395,-6.454560,-5.857462],[9.103924,-3.792419,-9.255681],[7.774766,-8.636213,-2.146049],[-6.090788,-1.168816,4.798516],[9.305661,7.434415,-1.823283],[5.437146,-7.227605,1.482725],[-5.204000,-7.256127,8.807598],[-8.855634,7.657889,-9.892223],[5.340332,2.106180,9.855429],[-6.267038,4.484719,-4.114338],[-7.084737,2.692530,2.240843],[9.783727,-1.263053,-5.676796],[-1.021900,-6.912584,9.110289],[0.385147,7.737492,-3.173620],[6.335161,2.322149,-7.531218],[0.803399,0.392989,7.945405],[2.441773,-2.261101,0.505169],[6.666461,-0.368974,5.516577],[-8.195055,-6.531468,3.531364],[-7.179665,8.575360,-6.165173],[4.143238,-1.315696,-7.910107],[5.829219,-8.285322,4.328753],[-1.812790,3.978386,-8.321501],[-7.935415,-0.870960,-9.858204],[3.196396,-3.590351,-4.131765],[-3.114249,-7.588073,-4.695754],[5.873015,-2.627939,-9.980305],[3.113038,-5.296290,0.025811],[1.141047,-2.064819,-1.571898],[3.686230,4.283764,5.138634],[-4.548657,-8.287915,-7.050177],[-5.966487,-9.973389,-9.672195],[-3.731116,-5.979612,-2.909478],[-4.036006,6.994450,8.560109],[4.784315,-0.157366,7.364349],[2.942600,1.596566,-1.749426],[-8.142585,5.141885,-2.037569],[0.498166,6.695958,1.766351],[4.798497,3.467858,-0.345834],[6.812397,-3.987036,6.954760],[4.974297,6.642861,-3.143638],[-9.600708,-7.634394,5.456098],[7.659998,-1.207396,-5.050143],[7.813539,9.715412,2.295876],[5.162645,6.481643,-1.824820],[6.386271,7.439523,-6.526938],[4.933047,3.720428,1.481615],[-6.664310,9.266769,2.199753],[-3.044450,-2.080558,-0.880497],[-2.232480,-5.758819,0.615906],[-8.650971,-9.938512,9.952787],[7.618848,3.028638,1.128194],[8.388308,-0.601047,-8.121790],[0.499816,-8.058631,-7.172986],[7.645381,-5.130423,-5.805853],[-1.189131,9.242413,2.652263],[8.490031,2.908312,9.687307],[1.474162,-1.319520,1.983698],[-4.779710,4.307207,-9.289375],[0.628267,-2.529636,2.959043],[9.821312,0.113840,-0.264809],[8.889414,1.569692,8.139526],[4.303345,-7.326918,-8.649629],[-7.299743,-4.562829,8.847866],[3.295514,-9.763566,-1.937351],[9.048351,4.008598,-8.826171],[2.218101,2.548470,-7.739701],[7.810766,-8.820487,7.134634],[7.592990,1.816953,-2.072987],[5.985530,9.257370,5.082564],[3.170115,3.850651,-4.265715],[2.039213,5.893342,-4.754608],[2.741657,-3.333610,6.780425],[-5.266609,5.380541,-8.457609],[-6.547185,-9.529779,9.859022],[3.090063,-2.760596,2.895696],[4.277954,-9.811680,-1.140719],[-0.883783,-4.106523,3.576989],[6.475159,-6.547091,1.631148],[-1.440734,-8.083391,2.238898],[-1.147794,2.191823,4.560369],[5.713062,6.942642,8.822186],[7.871303,3.481956,-3.086750],[9.132200,-8.507301,0.062142],[7.759597,4.043163,-2.798351],[8.479733,9.080313,4.344389],[-4.394236,2.072369,-8.376408],[0.898642,0.328507,1.080177],[7.641897,4.440450,-1.181262],[5.275759,-3.488838,-2.093293],[6.751887,7.566973,-0.976463],[5.323437,-7.988777,-1.619579],[0.577595,-5.191739,-8.550143],[8.187373,-0.151923,5.450220],[1.139134,-1.441243,7.359060],[-7.160942,4.705145,1.128386],[-6.243689,-4.998369,-0.136739],[7.002916,-7.036368,-9.419999],[1.596659,-0.542294,-3.394529],[-5.485101,-5.181371,4.032494],[4.453269,-0.260522,1.960193],[-5.325078,-6.013092,-3.225586],[7.095916,-1.917778,6.486070],[-9.235111,-4.746811,1.446402],[-4.583640,-9.285192,-2.299275],[-7.906468,3.017572,-7.098078],[2.232735,-3.602395,1.862467],[-2.624852,-1.866946,-7.109566],[9.145141,-6.011453,3.740759],[-7.142823,-0.007573,-2.334806],[-6.713021,-0.657686,3.523432],[-0.784869,-9.482741,-8.610017],[-6.238055,-1.934746,-4.909945],[-2.823097,-5.655337,6.092972],[-7.429879,8.898759,1.392532],[-1.742961,7.074534,8.038284],[9.921039,2.500815,8.265814],[-0.030963,-1.024587,-2.370940],[1.910147,-1.866038,-9.073579],[-5.806639,6.761549,8.768557],[2.725930,-4.468373,-4.449448],[-9.418246,1.326459,4.042866],[5.601229,-8.768697,6.834325],[-2.697652,-4.543843,-1.677077],[4.710155,3.305678,-4.770557],[6.962947,-8.663387,-9.088679],[6.777523,8.799718,-6.760225],[9.627262,-8.908555,3.996390],[2.173191,-9.955570,-7.295539],[-1.228435,8.577637,-8.279226],[-7.819658,-0.567438,4.304454],[8.845130,3.552364,-9.859366],[-6.207053,6.196758,0.784552],[-4.918183,3.803034,-7.916833],[1.072506,7.201413,6.577669],[-0.115774,1.165026,-5.526764],[-4.448498,5.051672,-5.806762],[9.516035,-4.414535,8.684362],[-6.345681,-1.905806,8.102378],[7.711641,9.238491,5.725289],[0.788038,-2.843194,-5.843635],[7.982219,-1.807890,-4.337657],[-2.240261,4.828703,6.752421],[2.446604,-1.938475,3.097968],[-8.190620,-6.643405,6.991930],[-6.020464,-9.143650,7.463792],[-5.399415,5.580985,4.069319],[0.334241,8.009781,-4.659258],[-5.644812,-7.176325,6.801648],[-6.015662,5.368327,4.354298],[-4.103475,4.417160,-2.830410],[-1.563745,6.213711,-0.573804],[5.531966,6.638552,-2.716099],[5.444360,1.474603,-3.236224],[0.817191,-8.282049,5.524830],[5.954269,-2.589771,-1.025349],[3.601296,8.997773,-4.679868],[-9.104399,3.956059,0.285430],[6.385631,-5.801784,-7.967246],[-6.709089,5.506067,-4.781756],[-8.624804,4.886788,-2.975792],[-8.030018,-7.419776,5.862031],[4.157328,-6.621122,8.722568],[-3.462579,3.236660,5.659431],[5.731730,1.695877,-2.961196],[-0.259378,-4.444124,5.831378],[8.125887,-4.454054,2.659625],[6.097233,8.210891,-8.542831],[7.081943,-7.696271,7.879059],[-4.737185,8.295833,-8.904400],[-1.813309,-6.840109,-8.505526],[2.152519,4.793873,0.267061],[7.772583,5.100865,-5.122591],[8.941692,3.902056,-9.383560],[2.618771,5.822824,6.896992],[0.822343,-3.997720,-8.626414],[1.922091,9.976859,7.289346],[-2.725552,9.825086,-8.579645],[4.438360,6.336368,1.391244],[8.131123,-6.608590,8.859186],[-8.121345,6.311157,-5.355684],[2.443309,-6.295884,8.013749],[0.522817,-6.750962,8.228967],[1.341418,8.833803,2.401648],[-5.088474,9.913549,-5.993145],[-2.080466,0.515222,5.530134],[9.668895,-7.205189,3.392743],[-6.862449,6.628768,9.609476],[5.022777,5.120352,7.338778],[6.097209,7.518607,7.302147],[1.109349,0.497185,2.716521],[-5.188372,8.953082,-8.968507],[-8.024644,-1.864147,-1.394914],[6.160255,-8.240828,-1.689214],[0.818615,4.014289,-8.609332],[-2.185906,7.062094,2.808926],[2.883195,1.936286,-1.197033],[3.799297,-7.543831,-1.670787],[-8.747980,-1.202491,-4.423598],[-5.346191,-1.177386,-5.293078],[-8.453813,-0.536942,-8.643864],[6.015700,-6.284065,8.055775],[-8.863469,1.654477,-1.994348],[9.527243,7.102230,4.712967],[-6.781402,-4.254335,8.821095],[-7.373375,7.369743,6.271765],[-4.784667,6.880791,-5.417385],[3.292351,-6.434318,0.293257],[-8.707730,6.963676,8.009683],[3.301415,-8.785908,-6.458507],[-3.482442,-4.277454,-1.659149],[-6.262831,-9.163634,4.263879],[-4.609192,9.772115,3.465674],[6.846367,-2.143962,-3.647932],[3.117549,8.179550,2.930362],[6.013187,-4.815628,4.920210],[-0.013797,2.053199,-4.197549],[4.819610,0.131275,4.360316],[0.807129,-9.486736,4.724880],[7.829334,-8.399309,-0.162092],[3.527839,-6.172178,1.059968],[-4.562586,1.855127,-7.062708],[-1.750389,-2.845916,2.742836],[-5.304441,-5.469745,-3.980707],[6.926338,-9.606028,-4.543056],[6.396474,-2.922196,-5.832701],[-4.347627,5.183376,-7.705146],[2.342775,8.379356,8.412549],[9.508242,-6.213686,-1.492723],[4.550399,-7.832451,-6.421265],[-6.493940,-9.813653,5.235687],[6.309174,6.277560,1.748574],[-8.960502,-9.947612,-7.664676],[-2.393949,-6.499052,7.929713],[3.435591,-4.232148,-9.035647],[3.014048,7.189879,5.888946],[-8.143191,-4.634372,-5.214751],[5.486567,-9.035976,-0.718090],[7.087903,-4.897604,2.536013],[2.259567,-5.419079,2.979886],[-0.884340,8.908754,-1.366392],[-6.807308,8.368912,4.617796],[-0.385220,3.325411,-9.814373],[6.835544,-5.614695,6.775271],[2.980054,0.363285,4.506965],[-2.707810,5.255890,8.404115],[-6.054996,-6.646329,-6.066400],[1.816754,-0.747433,0.960731],[0.989141,2.989261,-0.046754],[7.046222,9.843436,3.934246],[9.250383,-2.480409,1.854717],[1.054298,9.722860,-3.514905],[4.313700,-9.006116,-6.743968],[-1.719890,-3.559113,3.365782],[4.212658,-1.587056,9.247700],[3.835951,1.086877,2.952198],[0.679179,-6.963019,-5.653349],[-5.089368,0.594236,-2.920742],[-2.229650,2.259777,-0.635388],[1.288929,7.859564,-6.206265],[4.288202,-9.443059,3.236933],[0.212091,-8.100098,6.942054],[-6.790942,-2.696486,-9.880277],[1.281190,0.437059,4.302098],[-9.194138,5.982526,-6.349695],[-7.864671,8.049124,-0.998935],[6.805817,1.219725,0.992394],[-1.999604,-3.899251,4.066331],[3.961347,2.943217,5.149804],[-4.037279,3.601760,-4.766002],[9.885884,5.857177,5.652298],[9.631483,-3.907596,-8.128201],[2.709268,2.703613,9.052797],[-3.232467,-8.931025,9.338815],[-3.967246,2.929605,-1.447261],[1.312674,-5.498536,-8.826591],[-9.039093,-8.931646,5.371334],[3.275671,-8.737682,-5.378431],[5.645076,-5.178754,9.798590],[-1.852989,-1.255551,5.902875],[5.037256,-0.931240,-1.865018],[3.417626,7.904645,6.272315],[-3.489714,6.758512,8.639836],[-3.575469,4.622559,-6.828036],[-7.558236,-5.276860,-5.651373],[9.245566,6.204633,-3.195072],[7.727113,-3.356608,8.910983],[8.511973,-0.566486,-2.314325],[-0.136587,4.731452,-1.118530],[-3.111515,-8.704812,3.687831],[9.129368,-2.654928,-1.252436],[-6.247256,-8.100524,-9.668027],[-8.279210,7.006050,9.351186],[-1.892226,-1.383151,7.735851],[-8.695318,0.247772,-8.039177],[2.684597,-2.633459,-1.251865],[-8.605145,-2.577515,-2.261424],[5.633678,-7.325554,0.066682],[-3.043096,8.597883,5.297233],[6.679401,2.462955,-3.654107],[0.281689,4.055839,0.317025],[4.065056,-9.180154,-7.788509],[-2.751077,5.625269,-6.201536],[-1.290976,-9.443636,4.522027],[-9.609088,4.066297,-2.285951],[-9.492493,-7.028171,2.976694],[8.446481,4.433097,-4.442178],[-8.928769,6.288898,1.107238],[8.113889,0.952492,7.362755],[0.629418,8.457632,3.970368],[9.527155,-6.627421,6.193099],[2.356965,-0.740756,-7.793706],[7.653231,6.663297,-2.274309],[-7.206671,4.346271,-7.032252],[8.605164,-2.798755,-5.483645],[-1.348226,3.002682,3.341448],[-6.188893,-3.654669,-0.006603],[9.493886,5.158931,-0.275524],[8.347963,9.411818,-9.205528],[7.924659,-5.026797,2.599956],[-4.610422,-2.813257,-5.367596],[-8.478230,-9.561666,4.366701],[-4.273620,-6.789030,4.956330],[4.976151,-8.383830,2.705530],[-8.289158,-5.917377,6.863164],[-5.422249,8.075473,7.230556],[-4.836665,-5.262572,-7.444244],[9.829870,-8.924864,0.553420],[6.469311,-6.377244,2.314478],[-2.139512,-5.978372,-9.726495],[-2.550012,1.705693,7.681472],[5.643022,9.740701,6.780746],[0.252554,-5.576827,-5.719168],[-8.353781,-9.878311,9.270100],[-7.934428,-5.298831,-8.673470],[-8.451846,0.882735,-5.935615],[6.558348,-2.339755,4.682250],[-8.520924,4.172725,-9.723926],[-5.120552,4.265089,7.198646],[4.521306,-6.952615,3.598992],[-2.648356,-2.616510,4.768180],[1.590606,-9.603120,3.969349],[0.751655,2.651130,-3.815891],[-2.263017,-8.781371,-4.524168],[0.891257,9.717553,1.736432],[-2.781892,1.093524,5.128431],[-3.613856,2.339125,-1.607229],[-7.741640,-5.906409,-2.133818],[-4.187866,-1.621610,-5.987361],[-4.633766,-7.551308,-6.635636],[-4.302624,3.936758,4.413654],[0.455733,0.477291,-2.182480],[6.251907,8.685673,-2.173809],[3.217706,6.032189,3.756348],[-3.137706,9.070816,-0.450251],[-2.728582,-0.057149,-8.454504],[-5.314956,7.714010,-0.857747],[0.963722,8.608428,7.258161],[9.053617,-6.941488,-6.064115],[-1.936003,9.289547,8.575747],[0.837817,5.636081,-8.700421],[5.545006,6.976876,-8.255113],[2.000942,6.182286,4.974992],[-3.204880,0.673783,5.778661],[3.614737,-7.786178,8.131920],[-6.524896,1.851358,-9.520706],[1.321692,-7.510389,5.966286],[-6.193714,3.282766,8.347716],[-9.525052,3.638851,-0.343764],[-1.920000,-0.679400,-2.064945],[-9.410421,7.226951,-9.968687],[4.050409,2.537653,-1.071955],[7.932477,5.318551,7.346227],[2.232887,5.449413,0.464284],[4.752986,5.919284,5.743323],[2.973036,-2.969217,9.239924],[-1.129172,-2.992622,9.583837],[-9.370599,7.393332,1.142396],[-6.184080,-2.873764,3.381953],[5.418120,9.502671,-9.827398],[8.883111,9.628941,-0.995264],[-6.825343,7.679208,1.530416],[-5.364054,2.592418,5.826848],[-8.532039,9.941169,3.097135],[-9.694696,0.262427,6.323657],[-8.605169,6.292283,-7.984348],[5.756673,7.705694,8.620393],[6.034776,-7.550244,1.677598],[2.849516,-2.769725,8.828451],[5.163193,-2.853518,0.077028],[-8.693704,-4.168827,5.074452],[-6.964058,-1.746458,-0.910311],[-3.594637,2.484301,-7.188261],[-6.044825,-7.694998,5.936268],[5.744544,0.523298,9.337853],[2.952543,1.580596,-6.700302],[8.679610,3.361951,-8.477745],[4.149096,6.870865,6.500146],[-5.103127,7.924363,-3.251115],[-9.985743,8.997218,-2.134756],[-4.052373,-7.604293,6.262705],[1.388733,1.716655,-6.318787],[-2.038781,-8.522116,-0.470565],[8.885966,-9.545469,5.963347],[0.986244,-7.964625,-1.288506],[-4.532523,-6.162823,-1.841917],[7.805131,-0.147273,-6.785971],[-5.351084,9.409619,-8.034445],[-4.250676,-4.210443,-4.820757],[-1.045901,6.821569,-7.190659],[6.237069,-3.280007,9.093822],[1.900430,-2.337395,-8.620230],[8.327664,5.720256,8.146425],[-2.546995,-6.993788,-3.441355],[6.522055,-6.227291,5.357478],[-7.755800,2.323126,2.452556],[7.314734,1.514735,-8.489325],[-8.138564,-2.955428,-2.693027],[9.272337,-2.092161,6.983034],[-8.648563,0.817817,2.019826],[0.579824,7.984210,4.395988],[3.923535,1.694506,-3.140455],[-4.820252,6.886179,5.511816],[2.776335,8.479381,-3.891040],[-9.862905,0.854303,8.889489],[2.005594,-2.058622,-6.653928],[4.195291,-1.246853,-7.521524],[-8.069231,7.110517,-5.267398],[-2.019890,4.543901,3.018592],[-4.657773,-6.751002,6.521357],[0.514177,-2.386566,4.189542],[3.204371,-2.917731,6.608932],[-3.361874,-2.705761,-4.112405],[-8.285587,-4.422626,-1.344856],[9.908382,8.672701,-1.036210],[-5.282722,9.805583,5.494300],[6.110467,2.242012,-1.024195],[-1.644938,6.951553,-0.171493],[2.494575,-2.372399,-3.697347],[7.901692,2.166963,1.495479],[1.214195,3.925168,-9.355348],[2.355613,8.583418,7.650373],[-1.625136,9.096292,-2.437145],[7.105163,-7.770079,8.532498],[-2.306855,8.698975,-4.208050],[0.234612,-1.474012,-0.854301],[5.808027,-0.859533,0.968040],[-9.225845,1.299964,5.349468],[6.314105,-1.558661,-1.675045],[-1.985165,-5.804552,-8.741701],[-1.943226,8.002118,1.966606],[4.522949,3.798742,2.392279],[8.266827,-7.528431,6.020362],[3.973094,-5.365937,5.902691],[4.588268,8.940115,6.365798],[-0.767018,7.615131,-7.261819],[-1.355587,0.131883,8.342874],[-7.348310,-9.055389,6.761599],[-9.981475,-7.788658,-0.427369],[2.379867,5.589216,-8.598063],[-0.362735,-7.641745,-9.407246],[-3.011733,-3.751732,-7.971712],[1.383937,2.062493,-8.125208],[6.616921,0.468412,2.190869],[4.758414,4.376592,-6.263043],[0.897942,3.740070,-1.029028],[-2.272754,-9.095505,9.405003],[-8.064270,1.190159,-4.197397],[9.415534,-5.336600,-4.369008],[-4.869856,-4.867688,-4.923387],[8.377703,7.548106,-9.022720],[-0.089465,9.468462,7.190520],[-3.904743,3.348845,5.689329],[5.795111,6.561187,6.735269],[2.552402,-8.613032,-6.748030],[-4.106025,-3.544973,-0.257378],[-2.656543,-3.301793,7.715035],[-7.454704,1.847103,1.614532],[9.055724,3.941269,-2.047646],[-0.015480,2.521849,2.559628],[-0.508226,7.322193,7.217749],[4.886808,7.592867,0.259570],[8.414407,-3.200813,3.198367],[-4.177742,-9.706379,-4.723090],[-4.826910,-6.811665,9.901140],[0.013241,-6.591210,-3.410397],[-8.696020,5.083491,4.572176],[-6.777073,-3.499456,-9.044585],[-3.282555,-2.928253,-0.397355],[4.842225,-3.530571,-2.552379],[5.096390,3.293603,8.227949],[-6.101941,5.508648,0.082466],[-8.913996,8.800625,-9.848409],[1.962168,-4.791038,8.292469],[-3.430998,-8.229694,-3.122398],[-2.904453,-3.206558,4.446330],[4.731166,-5.696618,0.615938],[-6.492587,5.330950,-1.185595],[3.016471,0.702531,-8.875957],[-9.011124,6.933105,7.766259],[-5.302707,-5.703827,1.315114],[-3.344888,9.878074,2.489166],[-3.232640,-4.378611,7.458332],[8.805845,-1.800473,7.753389],[2.957210,5.863862,-0.217883],[-9.515719,-1.043815,9.026400],[2.437382,0.818129,-6.878196],[3.771713,-2.209736,7.934372],[0.046743,-1.322159,4.087472],[-8.117496,9.226631,1.397945],[-0.188570,-1.342202,-5.460719],[-1.797417,7.033338,-1.475287],[-1.112893,-2.301774,-8.119135],[-0.178434,-8.239507,6.925075],[-1.099523,-8.199242,-9.441504],[1.224090,-0.710547,4.130960],[-9.858336,-6.979408,1.982390],[4.841129,-5.922313,-1.264250],[5.632083,-7.991746,8.855968],[0.211270,9.299932,-4.907781],[-9.597176,-1.349604,4.662882],[2.273794,4.220829,-8.165623],[1.958820,-5.736186,6.677281],[-2.380057,-9.267109,8.311003],[-6.978779,1.992637,-8.839652],[0.742441,-2.296514,6.333588],[-4.519696,0.656983,-1.692253],[-2.286022,7.397817,-7.243240],[-7.420109,-0.234615,4.889532],[-5.004502,-9.502441,-4.060352],[2.484789,9.610993,5.180336],[-5.217606,-8.716942,-5.032298],[4.828527,-7.111875,2.286211],[1.485074,3.079018,-1.676557],[6.779515,-1.687150,8.829640],[3.811443,6.282455,-1.774072],[3.688416,-4.361100,-7.464865],[6.554365,9.210827,-8.013088],[-6.360153,-5.162375,4.898993],[-5.357771,-0.409171,0.895747],[9.770646,-9.878933,2.447581],[-0.505556,2.007314,-1.064401],[2.489241,3.012443,6.378205],[2.812316,-2.556629,1.490345],[1.206553,-1.752562,6.027018],[2.701253,-1.649962,8.479933],[-9.187545,1.418426,-8.608222],[3.949024,2.515359,-6.300998],[-4.397695,-0.687030,-3.726058],[4.033485,3.237652,4.000878],[8.692328,-9.025655,-9.136196],[8.614656,8.357977,2.492071],[8.127002,3.942340,7.351691],[2.698576,1.988941,-6.895351],[-8.519958,3.551100,-6.693569],[-2.039928,8.452090,6.530429],[-6.270443,-8.435474,4.407940],[3.570401,-7.821442,0.171621],[-1.114089,-7.919329,-2.477039],[8.913409,-1.926006,2.943981],[2.905113,-3.470387,-5.838119],[7.843123,-2.234781,-2.905366],[9.162677,-8.501836,-2.410954],[9.945246,6.359571,-0.373820],[5.251124,-7.331840,3.409818],[-5.537908,9.191458,7.304591],[-9.035001,-1.775562,6.543352],[9.893457,-2.170488,-5.933234],[7.816702,7.410199,0.507645],[3.475210,-5.664340,-6.892785],[4.183549,-4.201100,5.043199],[-4.591851,-7.892152,6.464920],[3.959050,-7.027564,-7.180636],[-5.869740,3.208633,-9.870019],[2.557840,7.386551,2.654026],[6.128858,-7.997653,8.755002],[-0.297559,8.721077,-1.678946],[-0.006832,7.663074,2.281806],[8.427865,-4.283988,-5.207443],[-0.416231,-9.474091,8.622880],[3.416720,-6.008839,-8.506448],[-3.447493,5.378700,-8.624588],[-0.938596,7.617671,3.103700],[5.617879,-1.268942,6.434695],[2.763633,-4.095021,9.465676]], dtype = "float64")#candidate|1995|(585, 3)|const|float64
call_1994 = func_1532_call(relay.reshape(const_1995.astype('float64'), [13, 9, 15]))
call_1996 = func_1532_call(relay.reshape(const_1995.astype('float64'), [13, 9, 15]))
func_1218_call = mod.get_global_var('func_1218')
func_1222_call = mutated_mod.get_global_var('func_1222')
var_2000 = relay.var("var_2000", dtype = "float32", shape = (990,))#candidate|2000|(990,)|var|float32
call_1999 = relay.TupleGetItem(func_1218_call(relay.reshape(var_2000.astype('float32'), [11, 6, 15]), relay.reshape(var_2000.astype('float32'), [11, 6, 15]), relay.reshape(var_2000.astype('float32'), [11, 6, 15]), ), 5)
call_2001 = relay.TupleGetItem(func_1222_call(relay.reshape(var_2000.astype('float32'), [11, 6, 15]), relay.reshape(var_2000.astype('float32'), [11, 6, 15]), relay.reshape(var_2000.astype('float32'), [11, 6, 15]), ), 5)
bop_2004 = relay.less_equal(const_1995.astype('bool'), relay.reshape(call_1994.astype('bool'), relay.shape_of(const_1995))) # shape=(585, 3)
bop_2007 = relay.less_equal(const_1995.astype('bool'), relay.reshape(call_1996.astype('bool'), relay.shape_of(const_1995))) # shape=(585, 3)
output = relay.Tuple([call_1992,call_1999,var_2000,bop_2004,])
output2 = relay.Tuple([call_1993,call_2001,var_2000,bop_2007,])
func_2008 = relay.Function([var_2000,], output)
mod['func_2008'] = func_2008
mod = relay.transform.InferType()(mod)
mutated_mod['func_2008'] = func_2008
mutated_mod = relay.transform.InferType()(mutated_mod)
var_2009 = relay.var("var_2009", dtype = "float32", shape = (990,))#candidate|2009|(990,)|var|float32
func_2008_call = mutated_mod.get_global_var('func_2008')
call_2010 = func_2008_call(var_2009)
output = call_2010
func_2011 = relay.Function([var_2009], output)
mutated_mod['func_2011'] = func_2011
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1711_call = mod.get_global_var('func_1711')
func_1713_call = mutated_mod.get_global_var('func_1713')
call_2082 = relay.TupleGetItem(func_1711_call(), 2)
call_2083 = relay.TupleGetItem(func_1713_call(), 2)
output = call_2082
output2 = call_2083
func_2085 = relay.Function([], output)
mod['func_2085'] = func_2085
mod = relay.transform.InferType()(mod)
output = func_2085()
func_2086 = relay.Function([], output)
mutated_mod['func_2086'] = func_2086
mutated_mod = relay.transform.InferType()(mutated_mod)
func_820_call = mod.get_global_var('func_820')
func_821_call = mutated_mod.get_global_var('func_821')
call_2096 = relay.TupleGetItem(func_820_call(), 2)
call_2097 = relay.TupleGetItem(func_821_call(), 2)
func_1952_call = mod.get_global_var('func_1952')
func_1953_call = mutated_mod.get_global_var('func_1953')
call_2099 = relay.TupleGetItem(func_1952_call(), 0)
call_2100 = relay.TupleGetItem(func_1953_call(), 0)
output = relay.Tuple([call_2096,call_2099,])
output2 = relay.Tuple([call_2097,call_2100,])
func_2101 = relay.Function([], output)
mod['func_2101'] = func_2101
mod = relay.transform.InferType()(mod)
mutated_mod['func_2101'] = func_2101
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2101_call = mutated_mod.get_global_var('func_2101')
call_2102 = func_2101_call()
output = call_2102
func_2103 = relay.Function([], output)
mutated_mod['func_2103'] = func_2103
mutated_mod = relay.transform.InferType()(mutated_mod)
func_820_call = mod.get_global_var('func_820')
func_821_call = mutated_mod.get_global_var('func_821')
call_2106 = relay.TupleGetItem(func_820_call(), 2)
call_2107 = relay.TupleGetItem(func_821_call(), 2)
uop_2108 = relay.sinh(call_2106.astype('float64')) # shape=(99,)
uop_2110 = relay.sinh(call_2107.astype('float64')) # shape=(99,)
output = relay.Tuple([uop_2108,])
output2 = relay.Tuple([uop_2110,])
func_2114 = relay.Function([], output)
mod['func_2114'] = func_2114
mod = relay.transform.InferType()(mod)
mutated_mod['func_2114'] = func_2114
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2114_call = mutated_mod.get_global_var('func_2114')
call_2115 = func_2114_call()
output = call_2115
func_2116 = relay.Function([], output)
mutated_mod['func_2116'] = func_2116
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2114_call = mod.get_global_var('func_2114')
func_2116_call = mutated_mod.get_global_var('func_2116')
call_2179 = relay.TupleGetItem(func_2114_call(), 0)
call_2180 = relay.TupleGetItem(func_2116_call(), 0)
func_1124_call = mod.get_global_var('func_1124')
func_1125_call = mutated_mod.get_global_var('func_1125')
call_2220 = relay.TupleGetItem(func_1124_call(), 0)
call_2221 = relay.TupleGetItem(func_1125_call(), 0)
func_1532_call = mod.get_global_var('func_1532')
func_1535_call = mutated_mod.get_global_var('func_1535')
var_2225 = relay.var("var_2225", dtype = "float64", shape = (1755,))#candidate|2225|(1755,)|var|float64
call_2224 = func_1532_call(relay.reshape(var_2225.astype('float64'), [13, 9, 15]))
call_2226 = func_1532_call(relay.reshape(var_2225.astype('float64'), [13, 9, 15]))
bop_2233 = relay.power(var_2225.astype('float32'), relay.reshape(call_2224.astype('float32'), relay.shape_of(var_2225))) # shape=(1755,)
bop_2236 = relay.power(var_2225.astype('float32'), relay.reshape(call_2226.astype('float32'), relay.shape_of(var_2225))) # shape=(1755,)
output = relay.Tuple([call_2179,call_2220,bop_2233,])
output2 = relay.Tuple([call_2180,call_2221,bop_2236,])
func_2241 = relay.Function([var_2225,], output)
mod['func_2241'] = func_2241
mod = relay.transform.InferType()(mod)
var_2242 = relay.var("var_2242", dtype = "float64", shape = (1755,))#candidate|2242|(1755,)|var|float64
output = func_2241(var_2242)
func_2243 = relay.Function([var_2242], output)
mutated_mod['func_2243'] = func_2243
mutated_mod = relay.transform.InferType()(mutated_mod)
var_2383 = relay.var("var_2383", dtype = "float32", shape = (11, 5, 13))#candidate|2383|(11, 5, 13)|var|float32
uop_2384 = relay.rsqrt(var_2383.astype('float32')) # shape=(11, 5, 13)
output = uop_2384
output2 = uop_2384
func_2387 = relay.Function([var_2383,], output)
mod['func_2387'] = func_2387
mod = relay.transform.InferType()(mod)
mutated_mod['func_2387'] = func_2387
mutated_mod = relay.transform.InferType()(mutated_mod)
var_2388 = relay.var("var_2388", dtype = "float32", shape = (11, 5, 13))#candidate|2388|(11, 5, 13)|var|float32
func_2387_call = mutated_mod.get_global_var('func_2387')
call_2389 = func_2387_call(var_2388)
output = call_2389
func_2390 = relay.Function([var_2388], output)
mutated_mod['func_2390'] = func_2390
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1965_call = mod.get_global_var('func_1965')
func_1967_call = mutated_mod.get_global_var('func_1967')
call_2485 = relay.TupleGetItem(func_1965_call(), 0)
call_2486 = relay.TupleGetItem(func_1967_call(), 0)
output = relay.Tuple([call_2485,])
output2 = relay.Tuple([call_2486,])
func_2501 = relay.Function([], output)
mod['func_2501'] = func_2501
mod = relay.transform.InferType()(mod)
output = func_2501()
func_2502 = relay.Function([], output)
mutated_mod['func_2502'] = func_2502
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1022_call = mod.get_global_var('func_1022')
func_1023_call = mutated_mod.get_global_var('func_1023')
call_2541 = relay.TupleGetItem(func_1022_call(), 0)
call_2542 = relay.TupleGetItem(func_1023_call(), 0)
func_1065_call = mod.get_global_var('func_1065')
func_1067_call = mutated_mod.get_global_var('func_1067')
call_2543 = relay.TupleGetItem(func_1065_call(), 2)
call_2544 = relay.TupleGetItem(func_1067_call(), 2)
func_749_call = mod.get_global_var('func_749')
func_751_call = mutated_mod.get_global_var('func_751')
call_2546 = func_749_call()
call_2547 = func_749_call()
func_1835_call = mod.get_global_var('func_1835')
func_1837_call = mutated_mod.get_global_var('func_1837')
var_2572 = relay.var("var_2572", dtype = "uint8", shape = (588,))#candidate|2572|(588,)|var|uint8
call_2571 = relay.TupleGetItem(func_1835_call(relay.reshape(var_2572.astype('uint8'), [588,])), 2)
call_2573 = relay.TupleGetItem(func_1837_call(relay.reshape(var_2572.astype('uint8'), [588,])), 2)
uop_2628 = relay.asinh(call_2541.astype('float64')) # shape=(99,)
uop_2630 = relay.asinh(call_2542.astype('float64')) # shape=(99,)
output = relay.Tuple([call_2543,call_2546,call_2571,var_2572,uop_2628,])
output2 = relay.Tuple([call_2544,call_2547,call_2573,var_2572,uop_2630,])
func_2639 = relay.Function([var_2572,], output)
mod['func_2639'] = func_2639
mod = relay.transform.InferType()(mod)
mutated_mod['func_2639'] = func_2639
mutated_mod = relay.transform.InferType()(mutated_mod)
var_2640 = relay.var("var_2640", dtype = "uint8", shape = (588,))#candidate|2640|(588,)|var|uint8
func_2639_call = mutated_mod.get_global_var('func_2639')
call_2641 = func_2639_call(var_2640)
output = call_2641
func_2642 = relay.Function([var_2640], output)
mutated_mod['func_2642'] = func_2642
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2085_call = mod.get_global_var('func_2085')
func_2086_call = mutated_mod.get_global_var('func_2086')
call_2689 = func_2085_call()
call_2690 = func_2085_call()
output = relay.Tuple([call_2689,])
output2 = relay.Tuple([call_2690,])
func_2694 = relay.Function([], output)
mod['func_2694'] = func_2694
mod = relay.transform.InferType()(mod)
mutated_mod['func_2694'] = func_2694
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2694_call = mutated_mod.get_global_var('func_2694')
call_2695 = func_2694_call()
output = call_2695
func_2696 = relay.Function([], output)
mutated_mod['func_2696'] = func_2696
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1065_call = mod.get_global_var('func_1065')
func_1067_call = mutated_mod.get_global_var('func_1067')
call_2719 = relay.TupleGetItem(func_1065_call(), 0)
call_2720 = relay.TupleGetItem(func_1067_call(), 0)
func_2501_call = mod.get_global_var('func_2501')
func_2502_call = mutated_mod.get_global_var('func_2502')
call_2723 = relay.TupleGetItem(func_2501_call(), 0)
call_2724 = relay.TupleGetItem(func_2502_call(), 0)
func_1346_call = mod.get_global_var('func_1346')
func_1347_call = mutated_mod.get_global_var('func_1347')
call_2725 = relay.TupleGetItem(func_1346_call(), 4)
call_2726 = relay.TupleGetItem(func_1347_call(), 4)
func_820_call = mod.get_global_var('func_820')
func_821_call = mutated_mod.get_global_var('func_821')
call_2745 = relay.TupleGetItem(func_820_call(), 0)
call_2746 = relay.TupleGetItem(func_821_call(), 0)
output = relay.Tuple([call_2719,call_2723,call_2725,call_2745,])
output2 = relay.Tuple([call_2720,call_2724,call_2726,call_2746,])
func_2752 = relay.Function([], output)
mod['func_2752'] = func_2752
mod = relay.transform.InferType()(mod)
output = func_2752()
func_2753 = relay.Function([], output)
mutated_mod['func_2753'] = func_2753
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1272_call = mod.get_global_var('func_1272')
func_1273_call = mutated_mod.get_global_var('func_1273')
call_2791 = func_1272_call()
call_2792 = func_1272_call()
output = relay.Tuple([call_2791,])
output2 = relay.Tuple([call_2792,])
func_2844 = relay.Function([], output)
mod['func_2844'] = func_2844
mod = relay.transform.InferType()(mod)
output = func_2844()
func_2845 = relay.Function([], output)
mutated_mod['func_2845'] = func_2845
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2501_call = mod.get_global_var('func_2501')
func_2502_call = mutated_mod.get_global_var('func_2502')
call_2876 = relay.TupleGetItem(func_2501_call(), 0)
call_2877 = relay.TupleGetItem(func_2502_call(), 0)
output = call_2876
output2 = call_2877
func_2890 = relay.Function([], output)
mod['func_2890'] = func_2890
mod = relay.transform.InferType()(mod)
mutated_mod['func_2890'] = func_2890
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2890_call = mutated_mod.get_global_var('func_2890')
call_2891 = func_2890_call()
output = call_2891
func_2892 = relay.Function([], output)
mutated_mod['func_2892'] = func_2892
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2114_call = mod.get_global_var('func_2114')
func_2116_call = mutated_mod.get_global_var('func_2116')
call_2895 = relay.TupleGetItem(func_2114_call(), 0)
call_2896 = relay.TupleGetItem(func_2116_call(), 0)
func_2114_call = mod.get_global_var('func_2114')
func_2116_call = mutated_mod.get_global_var('func_2116')
call_2925 = relay.TupleGetItem(func_2114_call(), 0)
call_2926 = relay.TupleGetItem(func_2116_call(), 0)
uop_2930 = relay.sqrt(call_2925.astype('float64')) # shape=(99,)
uop_2932 = relay.sqrt(call_2926.astype('float64')) # shape=(99,)
func_1472_call = mod.get_global_var('func_1472')
func_1475_call = mutated_mod.get_global_var('func_1475')
var_2957 = relay.var("var_2957", dtype = "float32", shape = (1386,))#candidate|2957|(1386,)|var|float32
call_2956 = relay.TupleGetItem(func_1472_call(relay.reshape(var_2957.astype('float32'), [9, 14, 11])), 2)
call_2958 = relay.TupleGetItem(func_1475_call(relay.reshape(var_2957.astype('float32'), [9, 14, 11])), 2)
func_2241_call = mod.get_global_var('func_2241')
func_2243_call = mutated_mod.get_global_var('func_2243')
const_2960 = relay.const([-3.847130,3.130496,-1.663924,6.989776,-0.275870,-1.578649,-2.528927,2.921443,4.636111,7.613209,-3.084383,2.238046,8.388651,6.763427,-8.287558,1.219431,-0.973586,-3.262215,9.769300,8.435901,5.515613,2.329004,-0.212623,-0.552123,4.760350,-2.083566,7.658345,0.076316,3.827558,-6.041839,7.515101,-4.523526,-5.160027,-2.954777,6.832323,9.339321,4.395624,-8.997898,-4.176097,0.727800,-7.483779,9.432512,4.493697,2.297840,3.060253,-9.133284,6.419644,-3.359870,-9.075544,8.586743,8.967273,-9.424601,-9.511519,-9.117759,5.815152,-6.912849,-9.335600,-8.105731,-7.185250,-9.364890,1.877372,-8.487577,-9.654357,-3.016333,7.419619,-4.909212,2.607456,5.574551,2.190266,-7.302792,4.611298,5.672431,-6.278977,8.741658,6.382461,-6.368557,-0.753360,8.867365,7.970332,6.710493,1.433053,2.901168,-9.612806,-6.090682,9.931356,1.787018,6.144207,-1.360859,-0.435787,-0.922604,0.230835,-6.252573,1.099651,-7.149630,5.542751,3.698313,3.023656,2.469832,1.511957,-7.469988,-0.227830,5.007258,-5.179536,7.542729,7.138134,-6.288108,-2.134741,6.728293,-3.088455,8.984151,2.876731,-4.930752,3.561585,7.291170,-0.174451,9.740210,4.741951,-1.902193,-5.772624,-3.397999,-1.063717,9.175272,8.015337,-8.375903,-5.830747,1.063190,0.460087,8.742839,-1.155727,9.545380,-3.216890,3.955067,-2.732784,4.754666,-3.618545,-6.977485,-9.591263,8.943914,-5.500810,1.803301,9.426321,3.864441,-5.984187,-2.298189,5.223247,5.327518,-2.583571,2.395946,7.513243,-8.198154,-1.938268,-2.512294,-7.785836,-9.368026,0.950040,4.117211,-0.062762,8.613104,2.265473,7.259268,-1.845581,-3.470637,-8.808802,8.471181,-4.485353,2.654317,-9.985467,8.744021,0.847610,-7.165230,0.368117,-4.664740,-1.710992,5.805374,3.769475,-1.665576,3.449490,-6.398145,-6.182203,3.949599,0.220781,7.199351,-4.682710,-5.058334,-6.039581,8.405983,9.316952,2.792954,0.367908,1.226653,-0.191572,-6.122201,9.184474,0.821205,-6.596435,-7.274753,0.432840,-9.484962,2.216332,6.154375,3.782586,4.964159,-8.427622,-7.749479,4.409009,-0.153434,1.926792,-9.179764,-5.503599,-6.911421,-0.916080,-8.787943,-5.129808,-6.685482,-1.285193,9.984905,-7.296796,-1.850153,3.447433,-1.614469,-1.685288,-2.026311,-4.683196,-2.979547,-9.468370,1.198882,-7.408395,-4.238707,-3.954005,-0.942094,8.210117,-4.818389,-0.038179,-3.922207,3.042610,7.752507,-9.571304,5.869386,-3.825153,5.880936,-9.812868,1.360845,-8.574963,9.780955,-8.976834,4.212788,6.718304,3.046045,-9.282383,-2.752287,4.480510,-8.264554,6.316077,-0.200149,6.504498,3.617801,-5.712340,-3.089604,-7.604372,-9.519040,2.891115,-2.478425,4.529761,6.743420,-2.555326,-0.099188,1.196406,9.551086,-8.309462,-2.193481,2.615584,-1.604996,-0.772938,-7.469740,-4.169432,-4.334565,7.989906,1.076947,-2.101327,-3.094431,-5.794023,-4.297120,6.830752,-7.961420,2.832761,-0.961366,-1.166707,5.288099,7.957810,-1.264334,-8.768458,-1.754656,2.741293,-1.799156,-8.382760,-5.395171,3.772362,-7.603228,-4.417562,6.833473,2.859528,-7.261779,-5.466618,-6.069439,-2.089387,0.120996,6.860852,-8.058677,0.821532,4.045219,5.301421,-8.137167,-2.491860,-7.148386,-4.437492,3.216961,4.232623,0.805755,4.797546,1.646266,-5.570164,-0.219470,-0.143034,4.107025,2.777766,0.733481,-3.764580,-5.241171,-2.323995,-1.915135,-4.524840,-6.372531,4.244985,8.074078,-1.606749,-5.701353,3.508277,-5.433500,3.857285,-1.706791,-0.971280,-8.721327,1.357459,-8.634561,9.928308,-5.930018,-6.336947,5.572050,5.730951,-2.233563,5.449552,-2.903805,6.026562,3.065156,-2.650716,3.078631,0.767788,-0.725602,-1.723296,2.275544,0.762975,1.524395,-4.715004,9.527898,7.971125,3.813524,3.471034,-2.045294,0.355534,2.793845,4.909375,-6.904990,-4.858090,3.012371,8.632320,-9.223368,5.227081,-3.796008,-8.632461,9.030387,1.794604,9.848500,-3.398124,5.112145,0.824509,-3.404347,-5.524655,5.431892,0.168949,1.953534,9.370590,3.200675,-7.886016,2.274894,6.949660,-9.457075,2.415979,1.601597,2.412439,5.379519,-8.351703,8.120549,9.080401,7.673361,-7.498763,5.885480,5.823963,-7.016466,7.921243,-5.824698,-6.376812,7.488132,-1.088184,9.911116,-4.513840,-3.126296,-3.299199,1.515167,2.550850,-3.440356,6.400642,4.306220,-5.879171,-6.207624,5.555602,2.626520,-9.835345,-7.791141,5.429143,-0.913971,-9.583591,-4.769552,6.428728,-2.886574,8.288443,-5.787531,7.259802,8.533296,5.160470,4.691264,-0.172269,-6.660170,4.609973,-0.649418,-8.580337,-0.593794,6.510067,-3.892147,-1.937265,5.783367,2.457657,6.016413,-1.078077,8.751489,-9.960233,-0.868960,7.043290,9.487133,4.218030,1.990367,9.130002,3.152794,4.377680,6.374113,-7.195172,7.788882,-1.430652,-0.240454,0.173899,-0.430883,-2.071666,-2.341382,3.410522,8.380777,1.647841,-8.397443,-4.252696,-9.763232,4.643432,-3.314502,-3.652071,-5.080080,-2.877397,6.194681,-8.919296,8.359164,7.268158,-2.895164,-2.848382,6.406543,-2.071372,-3.777137,0.589126,-3.604664,-7.901107,1.533011,-5.116288,4.839417,-6.501373,-0.284507,-0.925714,-0.737871,-9.848210,-2.190219,-5.730007,-8.085472,8.386971,2.911239,0.977152,-9.274096,-8.125951,1.238829,2.389273,7.768504,3.190754,-6.549439,-0.089871,0.255281,9.983966,0.422351,-9.110665,-3.764703,-6.487616,-1.929982,-9.741900,4.463794,-0.492907,1.392683,8.065436,-5.347376,6.598328,-4.460700,6.930728,-4.207708,4.529278,-9.279810,0.125579,6.428519,-7.760208,-9.391337,-5.325525,-8.863836,-7.459743,-2.696631,-8.839849,-0.825943,4.664571,5.773869,1.982500,3.762840,3.792947,-6.848053,2.050388,-1.436881,1.964964,-0.048483,-4.216946,5.157861,-0.969200,-5.678767,-6.121849,-2.815217,8.199856,-6.342368,2.971550,5.647052,1.450883,-7.172932,-6.438048,-1.274692,1.977432,7.042710,7.700799,-3.894408,0.540341,0.847952,0.602927,5.768827,9.548436,7.651446,-3.318105,-0.609102,-1.983929,-2.624519,8.045172,6.790794,4.874529,2.197808,4.231346,-8.980969,-2.513952,-4.930662,-8.374088,5.295190,5.896873,-9.135362,1.071972,5.819897,0.406176,-3.653498,-4.765377,3.785333,2.422236,1.357212,-6.702274,9.626255,0.955491,5.784857,3.985601,7.602069,9.445258,-4.419091,-0.777486,3.232347,0.889482,2.121049,9.714659,1.601129,1.870271,8.272301,3.512831,-0.768972,-9.704556,-5.840921,-6.930097,-8.787826,3.674662,2.516559,-6.720594,-5.909099,-4.833407,1.772246,-2.455874,-9.751332,7.530696,-7.439399,-4.715016,3.565163,-7.970699,9.829412,-5.411262,-7.230987,-8.837657,6.060100,-9.344881,1.377558,9.438462,-3.404268,4.055115,2.617091,-9.987412,4.294182,3.947771,4.396399,-7.339400,-0.943582,-7.221171,9.129730,-4.017968,2.790136,-1.530145,-5.738801,-4.637796,7.301013,4.992113,-6.659888,-3.363414,1.060133,1.034677,7.237063,4.259526,-1.812866,4.956677,-9.325046,-5.088065,-6.363190,-1.894159,6.760225,-1.379014,6.973780,2.943719,1.034982,9.541775,1.885969,-8.169911,2.879021,3.889508,5.773107,9.290277,-4.953872,-5.757579,-2.321564,8.559107,8.707808,-4.952957,-6.177055,-2.421070,-2.331859,-7.815671,-6.323360,-1.533877,-9.032508,3.492444,-2.845141,4.562919,2.023597,-1.382926,1.415671,8.444237,5.810974,1.278107,2.775062,2.049599,0.333771,-1.584678,-8.569747,9.470158,-3.481858,3.720628,4.996884,0.803997,-4.847892,-4.286235,-1.912672,-3.861981,-9.806780,5.338109,8.838467,7.016501,-0.782891,3.798915,-1.316253,3.737427,1.993801,-3.612440,1.744536,8.370619,4.026257,6.652246,8.676033,8.821631,5.378789,-0.501355,4.849454,-1.679822,2.760532,8.074804,-7.186968,-9.591278,0.176520,9.938240,-3.672613,-5.763316,-6.717812,1.893101,3.636517,6.588638,6.276480,6.535972,2.943297,-1.752560,3.075609,6.194096,-9.069302,-0.745328,-8.264350,0.901943,-7.730756,-1.060286,5.717604,9.315395,-6.111218,-3.359159,-8.740092,-4.934924,8.230736,-7.483064,-9.563423,-9.743707,8.544593,-2.942709,-5.888909,-5.403398,2.287761,-9.125469,5.090500,2.711387,-3.629190,9.256256,-4.348070,2.157202,2.294007,-4.396532,4.653079,-3.637409,7.870458,-3.558752,-6.807119,2.384435,7.723319,9.468039,4.177354,-6.842346,-9.484204,-5.578879,3.996263,-3.090511,7.895784,8.310172,3.025772,2.183314,-3.821830,2.653981,-9.611739,7.459254,-9.737298,-3.117099,3.354871,8.974241,1.748721,-8.155856,2.042774,1.043026,-2.619148,9.455099,-4.927191,-5.375177,-0.837373,-1.488827,-0.244800,-4.247791,-1.564773,-8.299429,9.870950,5.562154,0.247601,-1.406444,-1.802930,2.615180,-0.233335,-3.771256,7.620502,4.903671,-0.946239,9.246281,5.343429,0.337522,-0.918972,-1.565301,-0.331769,-0.173279,8.763046,-3.039304,-8.103753,-5.567502,9.070145,-7.697875,-4.000764,-4.405513,9.486140,9.937081,-6.168426,-4.485467,0.349053,-1.350138,-7.812031,8.666578,3.649074,2.411919,-1.812835,-8.399741,-7.542763,-3.944775,3.767683,-8.791729,-1.528212,2.679761,-7.810097,-6.852978,-8.855616,9.064916,8.298283,5.107748,7.467243,0.030285,-7.370424,9.838674,-8.999851,9.841444,-3.743217,-9.427744,-3.280772,3.493627,7.406879,-1.679164,2.186718,-3.242587,-6.092215,0.226974,-6.612071,1.866407,3.361316,3.993933,6.349461,9.739073,-1.538834,-1.854278,1.007616,-0.377739,6.551393,7.625962,-1.249723,-3.070116,1.898993,-9.504175,-6.983182,-4.613839,-4.555916,4.693666,2.342040,-3.490288,-7.020550,-9.944166,-3.062551,-6.354938,7.755861,-5.836018,4.223013,-6.382463,0.445178,-2.096075,9.290017,9.178355,-9.387626,2.748513,8.120141,-7.513350,-6.024276,1.774808,6.488813,8.164665,0.445315,-4.407698,-8.416895,0.701761,-3.101199,6.206373,3.227461,9.309657,2.080038,9.326821,-9.523892,-8.599356,-5.876733,-8.608876,2.988185,-5.112745,6.795417,2.328450,4.372890,2.192186,-5.111614,3.445457,4.694742,9.187872,9.123991,4.349612,-2.130591,1.673316,-9.186633,-0.865612,4.164268,-3.002028,-6.896082,-6.837523,2.974329,2.240910,-8.953443,6.050688,8.834204,-0.445671,1.076099,3.066401,0.971242,-8.907915,-2.220642,9.094369,4.973199,-4.533131,5.762011,4.042429,2.344496,-1.333587,-3.102699,6.061537,-1.433029,-6.362936,-2.678163,-7.491909,-3.606470,4.797809,9.636734,-2.667613,-3.055309,-8.028628,2.107911,-2.844011,-1.401919,-9.947141,-5.574134,4.526670,7.540820,-8.898493,9.953831,7.924495,8.489906,-5.194015,0.761193,8.426009,4.967777,4.226973,-3.114404,7.372881,-2.846782,3.818752,-0.800378,-1.451631,-0.641143,6.459961,3.553503,-0.686923,8.533405,9.563454,5.489753,-8.017117,9.455219,-7.817548,-1.619551,-5.808841,9.760253,0.241877,-3.318883,-6.225917,8.613189,-3.639597,-7.404088,3.096330,9.571156,7.780547,-8.887821,-2.667431,1.770099,1.205919,-3.156395,4.487020,6.126275,9.115385,-7.368759,-4.080864,0.784929,-2.784005,8.044408,2.718004,-9.486348,-8.472594,5.660643,-1.549139,0.017304,-2.037824,-8.545420,7.836301,-1.738434,3.021358,-2.673336,-0.824555,9.057523,-3.098865,4.667973,3.569915,-2.400616,-9.698260,-1.032118,-5.695679,-8.720805,-8.565583,-4.895697,-8.678411,-8.412105,3.468807,0.114972,6.076525,-7.308783,-7.311601,2.847258,-0.113214,0.930783,9.535756,3.120571,2.555873,-1.652501,-0.090198,5.348429,-6.506556,6.470918,6.784286,9.304078,8.946442,-1.781121,4.439637,3.698135,8.138875,-4.937848,6.860328,-8.611241,2.294867,-7.930946,-2.682148,-6.841270,7.774123,-6.615348,1.907029,2.581541,-0.417988,-9.092602,-5.147106,4.832634,-2.438160,-6.876882,0.373469,-6.073274,-5.055644,6.473396,-5.208852,0.287018,3.287910,-6.321691,8.320591,7.366347,3.993036,-5.656478,7.239046,6.741263,7.393694,0.085883,4.995135,-9.949246,-0.813276,-9.630250,3.310277,5.274611,2.311223,2.709682,9.342586,-0.198448,-5.116319,-3.308659,-8.397986,0.151438,-0.613085,1.538648,-0.856796,0.227314,7.413170,-9.495517,7.618760,3.730938,9.831624,0.783525,9.221217,-5.446283,-4.907044,7.824254,-2.062569,6.294627,-1.510101,-2.785321,-9.920654,3.785345,9.894590,-5.120651,1.453495,-9.120972,8.220152,-9.294273,7.331712,-5.263587,0.347795,0.550102,8.540007,-6.425561,3.732282,-3.881151,-9.342748,9.116175,9.479159,-7.795989,1.842567,-6.684542,0.087780,3.190870,4.955098,-4.790718,4.956570,-5.879575,-0.469872,-1.190966,-0.147987,3.824446,1.629644,-4.238438,1.868045,7.857683,8.116008,1.514411,-0.028836,-8.884075,-4.945894,6.553713,-6.528119,-0.238534,-0.493560,-6.968812,-8.485651,-2.581718,-3.752072,-6.018398,9.871616,-0.353284,5.980927,6.294402,-9.068577,3.938328,1.513574,-8.942958,8.924345,-0.885231,-6.908848,-8.624836,5.038495,-2.930105,9.252998,3.249672,-9.587187,-0.863837,2.958578,-1.542660,9.534419,-8.212337,-9.562313,-5.172913,-1.941682,4.040284,6.361625,8.531455,-2.071870,-2.877758,-1.658186,3.186954,7.955798,1.072052,3.668787,-9.775676,6.834305,3.277532,5.185785,6.963688,4.901579,-5.303787,-0.917059,2.280675,1.320014,0.691667,0.689612,9.393343,-1.613913,6.503014,-8.740822,-4.672310,-7.893181,2.375525,9.183333,5.017840,8.640297,9.587680,7.432674,4.985039,-8.729213,2.202936,0.821465,-9.257709,9.052487,3.781485,7.749363,1.036572,-6.820558,5.638616,-8.967395,-5.914547,4.594141,7.742237,-5.669954,4.535507,4.980718,-9.968819,2.721385,-7.050238,-2.138278,-3.507381,5.208154,8.947415,-1.626087,5.204484,-7.185311,4.774994,2.222004,-9.444039,4.658921,-0.440810,-1.615753,2.817827,5.302573,-4.974959,1.780367,5.863614,1.531252,-7.849904,-5.821681,-1.602395,5.730365,-2.492840,-3.479858,-4.465664,-4.360561,5.029110,7.674896,4.325874,-8.870346,-6.614356,-1.821399,6.773352,9.334920,-5.561684,4.417075,-2.897906,-5.480693,-0.254050,1.187446,-3.567395,0.755732,3.074177,-8.395883,-1.213868,-7.476998,-5.880988,-7.122958,-9.644133,-3.520114,7.544332,5.129232,-2.339549,-2.586556,3.287683,-7.209218,-2.984841,7.998238,-4.767627,-5.326477,-3.810112,-4.662417,5.981809,-2.571275,-5.571333,-6.063533,1.650222,7.657481,0.788113,-7.986045,1.781873,-5.745744,-3.701541,4.956709,7.171825,4.701407,0.570801,2.956681,4.266143,-6.260581,-6.615073,6.237818,0.629737,2.804319,4.548767,0.666932,-2.316942,-1.964034,7.911142,-6.961778,9.103591,-8.285562,1.370385,9.696222,-2.190674,-1.462799,7.258877,-4.705441,-1.016156,9.963714,3.392141,-8.491015,6.748406,-6.295848,9.804760,3.648649,5.779396,5.849027,8.821576,1.085573,-4.254052,-4.405193,5.708580,-4.125333,6.522427,1.998981,-2.884743,-7.453610,-7.524383,-7.027988,9.626398,-9.227450,-1.682066,5.864553,4.908109,2.924376,-2.535135,6.384701,-3.833904,2.324979,8.441063,-6.084236,9.611369,2.326960,3.840842,5.077052,-8.923542,8.791177,3.230252,-4.232600,6.188457,-6.433070,-3.275127,-4.153494,-7.417194,-1.740681,-9.361808,7.847677,1.621262,-0.260504,8.141794,-6.845819,6.375630,-1.548188,-8.879298,2.171652,-7.989110,-2.710887,3.396013,1.660367,-8.507915,-3.517174,-4.301455,-3.200391,-4.892492,-2.788209,-2.598803,6.566018,4.836688,-4.762049,1.902560,6.793614,-0.892121,-0.489078,-4.778773,5.024887,6.829413,-6.984134,3.931961,6.661266,6.156408,6.880609,-9.959726,2.264162,-3.216369,-4.990975,-2.633412,5.351774,3.515486,-4.162262,0.654607,-1.655255,1.121379,-6.392288,-2.236284,7.151246,-1.979007,7.786392,2.156132,-9.758084,7.172918,4.685715,-9.123353,-1.535180,-5.114726,-8.549864,-2.039753,-0.932773,0.959294,-8.654853,4.941798,7.518175,7.277866,-8.580641,8.380554,-8.203850,9.636637,-7.857489,9.818603,3.884580,-7.160982,7.154759,9.367477,-3.024431,0.923548,-5.349273,-2.470398,-8.160402,-8.726278,5.677976,4.536484,-3.462495,9.870812,-5.356733,9.310926,3.897454,4.044539,-3.688364,-2.512446,1.798459,-5.246641,-1.588921,7.137572,-2.636800,-3.088091,-0.795107,7.642796,-5.236361,0.037594,4.622158,3.751713,-4.762400,-3.634023,4.838063,-9.741096,-6.510657,-1.752973,3.637027,6.193824,0.027659,7.936058,2.664821,2.070828,-6.782780,-8.829920,8.655908,-9.510701,8.982296,6.580598,2.095646,3.363930,-6.450323,7.295593,-3.167001,6.331453,-8.795716,8.327567,0.354227,7.122211,9.732838,-6.122447,2.084987,3.817263,4.065991,0.118362,-5.869051,-4.108763,-1.094970,-6.506191,-3.594912,0.064779,5.151262,-5.442835,3.077646,-2.037940,5.550138,6.979461,5.604395,1.062612,9.526969,6.475947,-2.570995,-0.753410,0.736913,2.338248,-3.724137,-9.195443,3.989776,9.509565,8.267626,5.350197,-8.853692,8.510058,0.214603,-5.313579,-4.541838,-9.148107,0.036557,3.557519,-7.869215,-8.369397,8.576389,-6.207725,2.021026,6.899889,0.589314,4.716193,-7.669027,1.059658,-4.385988,-7.645171,3.944545,9.958219,-2.817458,-8.525965,3.749159,9.564600,4.936993,1.578282,4.356405,1.543422,5.844199,-1.275842,-1.968634,-7.032974,9.204179,1.491830,4.710621,6.880556,4.564624,-6.163739,-8.275806,-9.686934,9.037274,-2.053175,-5.463851,2.177230,7.019219,1.636918,7.050115,-9.856088,3.274055,-1.847278,-6.679743,-6.370023,8.182338,-4.244381,-9.675996,6.840931,-3.883474,6.873134,-8.681598,-7.385191,-6.127165,7.832943,6.601949,9.248462,4.813580,-2.409408,2.843743,8.530086,8.126859,5.097935,-9.826476,-2.887671,-2.402371,-8.289588,-9.761054,-6.289869,-5.352205,0.608085,5.575421,-1.565485,-7.568440,-4.418768,3.393273,-6.082645,5.172119,2.223664,-3.866930,-2.045012,4.600904,4.399464,-8.122162,-3.739458,3.445321,-8.209979,-6.163462,7.677255,4.427303,7.947152,-4.588008,-9.038706,4.311540,4.206116,1.793418,-4.507574,-0.563104,-9.027569,-1.428429,-7.416142,-1.229133,-5.149270,2.795869,8.289989,-2.309812,-8.733787,-7.501465,-0.503346,-2.609638,-5.340255,-3.727375,-7.851098,-6.826680,8.789978,8.394583,8.442885,-3.989808,5.420430,9.100313,4.520359,8.630620,-7.088654,-3.924858,8.538707,0.561108,-3.766258,-5.925878], dtype = "float64")#candidate|2960|(1755,)|const|float64
call_2959 = relay.TupleGetItem(func_2241_call(relay.reshape(const_2960.astype('float64'), [1755,])), 2)
call_2961 = relay.TupleGetItem(func_2243_call(relay.reshape(const_2960.astype('float64'), [1755,])), 2)
bop_2970 = relay.multiply(uop_2930.astype('uint8'), relay.reshape(call_2925.astype('uint8'), relay.shape_of(uop_2930))) # shape=(99,)
bop_2973 = relay.multiply(uop_2932.astype('uint8'), relay.reshape(call_2926.astype('uint8'), relay.shape_of(uop_2932))) # shape=(99,)
func_2639_call = mod.get_global_var('func_2639')
func_2642_call = mutated_mod.get_global_var('func_2642')
const_2982 = relay.const([2,2,-9,2,5,-3,10,9,1,2,4,-7,-1,10,-3,-1,-4,-10,5,9,8,6,-3,10,8,-2,-7,7,-5,10,-4,4,-7,-3,4,4,-5,-2,5,10,3,8,-10,-8,3,-4,-10,-7,3,-1,1,1,-6,-4,-6,-6,6,-10,10,3,7,-4,-8,-6,-2,-7,2,1,-2,1,-9,6,-3,-2,-6,8,-4,2,5,2,7,-10,-9,9,6,-9,6,-10,4,2,1,-5,4,7,-5,7,-2,1,10,5,9,-2,-1,-4,6,-7,9,4,-9,-5,1,4,-10,5,4,-7,3,-8,2,1,7,7,-2,-9,1,5,7,7,6,-9,-1,-3,-6,9,2,-5,2,7,2,-6,2,-7,1,-8,6,-9,-6,1,3,7,4,6,-8,1,-1,-5,8,-3,5,-8,-1,-8,-9,-6,-1,-10,8,10,-9,6,-7,4,-2,-8,8,-2,5,3,-10,-8,3,5,-4,-5,-5,-4,1,-2,4,-4,6,-9,-5,-6,-3,-8,-2,6,-6,-2,4,-5,-3,10,7,-10,-9,5,-3,-10,5,1,-1,-5,9,-9,-3,-10,1,6,3,2,-6,9,-8,-8,-9,4,7,6,-9,1,-1,-10,8,-2,-1,4,-3,-9,-1,6,5,9,-1,9,2,-2,10,9,8,-10,8,-8,-8,4,5,1,-1,-3,-7,-10,4,-4,-4,2,-6,2,-8,-7,-1,-10,-10,-6,3,-1,4,1,-5,-2,-10,2,-7,-2,-7,5,-9,-4,-6,-7,-2,9,-4,-3,7,-2,10,-3,-10,-5,-5,7,-5,-2,-3,-2,-9,-2,3,-6,3,-5,1,9,6,-10,-4,4,10,-2,5,8,7,1,-7,8,4,-10,-5,8,-5,-2,-7,-10,-2,-10,6,-5,9,-3,-2,6,-6,10,-9,3,-7,5,-1,1,-7,2,-10,-6,-4,7,10,3,4,-7,4,-7,3,4,-6,9,7,-9,-10,-8,-4,2,2,9,-1,-9,6,-5,-9,-5,6,-10,-5,10,4,10,6,-3,9,4,-2,-4,-10,-7,8,6,6,-4,5,-6,5,8,-10,-10,6,-1,-9,-5,2,10,6,3,-1,4,-5,4,8,9,-6,-9,5,9,4,2,9,-7,7,-10,-9,4,-5,-3,-2,-5,3,1,5,-1,7,5,7,-3,-4,-3,-7,6,-7,7,3,-10,-5,4,2,-8,-3,6,-7,-6,-4,-3,-8,-3,7,-4,3,7,-4,9,-10,-6,-10,-3,-1,-5,8,6,-6,-8,-2,-5,8,-2,-5,-10,-7,-8,-1,1,7,-9,-5,-10,-5,-6,-3,-1,-5,5,3,4,4,-5,2,6,-4,-6,-7,10,5,8,-6,-8,1,10,-9,-4,-8,-5,-8,2,6,-1,-4,-7,-6,6,-6,-3,-6,-1,-7,7,5,-6,6,5,7,5,8,8,-10,7,9,-3,3,1,10,-5,-1,-9,10,9,3,-7,-7,-6,1,3,5,6,-9,-6,-4,-7,2,2,-2,-9,4,-6,5,7,5,-10,3,8,1,-4,-5,-10,5,-2,2,1,-9,6,-7,4], dtype = "uint8")#candidate|2982|(588,)|const|uint8
call_2981 = relay.TupleGetItem(func_2639_call(relay.reshape(const_2982.astype('uint8'), [588,])), 2)
call_2983 = relay.TupleGetItem(func_2642_call(relay.reshape(const_2982.astype('uint8'), [588,])), 2)
output = relay.Tuple([call_2895,call_2956,var_2957,call_2959,const_2960,bop_2970,call_2981,const_2982,])
output2 = relay.Tuple([call_2896,call_2958,var_2957,call_2961,const_2960,bop_2973,call_2983,const_2982,])
func_2987 = relay.Function([var_2957,], output)
mod['func_2987'] = func_2987
mod = relay.transform.InferType()(mod)
mutated_mod['func_2987'] = func_2987
mutated_mod = relay.transform.InferType()(mutated_mod)
var_2988 = relay.var("var_2988", dtype = "float32", shape = (1386,))#candidate|2988|(1386,)|var|float32
func_2987_call = mutated_mod.get_global_var('func_2987')
call_2989 = func_2987_call(var_2988)
output = call_2989
func_2990 = relay.Function([var_2988], output)
mutated_mod['func_2990'] = func_2990
mutated_mod = relay.transform.InferType()(mutated_mod)
var_3002 = relay.var("var_3002", dtype = "float64", shape = ())#candidate|3002|()|var|float64
var_3003 = relay.var("var_3003", dtype = "float64", shape = (11, 8, 13))#candidate|3003|(11, 8, 13)|var|float64
bop_3004 = relay.divide(var_3002.astype('float64'), var_3003.astype('float64')) # shape=(11, 8, 13)
bop_3025 = relay.subtract(var_3003.astype('uint64'), var_3002.astype('uint64')) # shape=(11, 8, 13)
func_820_call = mod.get_global_var('func_820')
func_821_call = mutated_mod.get_global_var('func_821')
call_3029 = relay.TupleGetItem(func_820_call(), 0)
call_3030 = relay.TupleGetItem(func_821_call(), 0)
output = relay.Tuple([bop_3004,bop_3025,call_3029,])
output2 = relay.Tuple([bop_3004,bop_3025,call_3030,])
func_3034 = relay.Function([var_3002,var_3003,], output)
mod['func_3034'] = func_3034
mod = relay.transform.InferType()(mod)
var_3035 = relay.var("var_3035", dtype = "float64", shape = ())#candidate|3035|()|var|float64
var_3036 = relay.var("var_3036", dtype = "float64", shape = (11, 8, 13))#candidate|3036|(11, 8, 13)|var|float64
output = func_3034(var_3035,var_3036,)
func_3037 = relay.Function([var_3035,var_3036,], output)
mutated_mod['func_3037'] = func_3037
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2085_call = mod.get_global_var('func_2085')
func_2086_call = mutated_mod.get_global_var('func_2086')
call_3044 = func_2085_call()
call_3045 = func_2085_call()
func_2844_call = mod.get_global_var('func_2844')
func_2845_call = mutated_mod.get_global_var('func_2845')
call_3050 = relay.TupleGetItem(func_2844_call(), 0)
call_3051 = relay.TupleGetItem(func_2845_call(), 0)
func_2752_call = mod.get_global_var('func_2752')
func_2753_call = mutated_mod.get_global_var('func_2753')
call_3057 = relay.TupleGetItem(func_2752_call(), 2)
call_3058 = relay.TupleGetItem(func_2753_call(), 2)
uop_3074 = relay.cos(call_3057.astype('float64')) # shape=(9, 1, 11)
uop_3076 = relay.cos(call_3058.astype('float64')) # shape=(9, 1, 11)
output = relay.Tuple([call_3044,call_3050,uop_3074,])
output2 = relay.Tuple([call_3045,call_3051,uop_3076,])
func_3080 = relay.Function([], output)
mod['func_3080'] = func_3080
mod = relay.transform.InferType()(mod)
output = func_3080()
func_3081 = relay.Function([], output)
mutated_mod['func_3081'] = func_3081
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1272_call = mod.get_global_var('func_1272')
func_1273_call = mutated_mod.get_global_var('func_1273')
call_3117 = func_1272_call()
call_3118 = func_1272_call()
func_2987_call = mod.get_global_var('func_2987')
func_2990_call = mutated_mod.get_global_var('func_2990')
var_3122 = relay.var("var_3122", dtype = "float32", shape = (1, 1386))#candidate|3122|(1, 1386)|var|float32
call_3121 = relay.TupleGetItem(func_2987_call(relay.reshape(var_3122.astype('float32'), [1386,])), 2)
call_3123 = relay.TupleGetItem(func_2990_call(relay.reshape(var_3122.astype('float32'), [1386,])), 2)
func_820_call = mod.get_global_var('func_820')
func_821_call = mutated_mod.get_global_var('func_821')
call_3149 = relay.TupleGetItem(func_820_call(), 0)
call_3150 = relay.TupleGetItem(func_821_call(), 0)
func_148_call = mod.get_global_var('func_148')
func_150_call = mutated_mod.get_global_var('func_150')
call_3158 = relay.TupleGetItem(func_148_call(relay.reshape(call_3121.astype('float32'), [9, 14, 11])), 0)
call_3159 = relay.TupleGetItem(func_150_call(relay.reshape(call_3121.astype('float32'), [9, 14, 11])), 0)
output = relay.Tuple([call_3117,call_3121,var_3122,call_3149,call_3158,])
output2 = relay.Tuple([call_3118,call_3123,var_3122,call_3150,call_3159,])
func_3163 = relay.Function([var_3122,], output)
mod['func_3163'] = func_3163
mod = relay.transform.InferType()(mod)
mutated_mod['func_3163'] = func_3163
mutated_mod = relay.transform.InferType()(mutated_mod)
var_3164 = relay.var("var_3164", dtype = "float32", shape = (1, 1386))#candidate|3164|(1, 1386)|var|float32
func_3163_call = mutated_mod.get_global_var('func_3163')
call_3165 = func_3163_call(var_3164)
output = call_3165
func_3166 = relay.Function([var_3164], output)
mutated_mod['func_3166'] = func_3166
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1852_call = mod.get_global_var('func_1852')
func_1854_call = mutated_mod.get_global_var('func_1854')
call_3231 = func_1852_call()
call_3232 = func_1852_call()
output = relay.Tuple([call_3231,])
output2 = relay.Tuple([call_3232,])
func_3239 = relay.Function([], output)
mod['func_3239'] = func_3239
mod = relay.transform.InferType()(mod)
output = func_3239()
func_3240 = relay.Function([], output)
mutated_mod['func_3240'] = func_3240
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2752_call = mod.get_global_var('func_2752')
func_2753_call = mutated_mod.get_global_var('func_2753')
call_3259 = relay.TupleGetItem(func_2752_call(), 0)
call_3260 = relay.TupleGetItem(func_2753_call(), 0)
func_1124_call = mod.get_global_var('func_1124')
func_1125_call = mutated_mod.get_global_var('func_1125')
call_3273 = relay.TupleGetItem(func_1124_call(), 0)
call_3274 = relay.TupleGetItem(func_1125_call(), 0)
output = relay.Tuple([call_3259,call_3273,])
output2 = relay.Tuple([call_3260,call_3274,])
func_3277 = relay.Function([], output)
mod['func_3277'] = func_3277
mod = relay.transform.InferType()(mod)
mutated_mod['func_3277'] = func_3277
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3277_call = mutated_mod.get_global_var('func_3277')
call_3278 = func_3277_call()
output = call_3278
func_3279 = relay.Function([], output)
mutated_mod['func_3279'] = func_3279
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2501_call = mod.get_global_var('func_2501')
func_2502_call = mutated_mod.get_global_var('func_2502')
call_3320 = relay.TupleGetItem(func_2501_call(), 0)
call_3321 = relay.TupleGetItem(func_2502_call(), 0)
output = call_3320
output2 = call_3321
func_3322 = relay.Function([], output)
mod['func_3322'] = func_3322
mod = relay.transform.InferType()(mod)
output = func_3322()
func_3323 = relay.Function([], output)
mutated_mod['func_3323'] = func_3323
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1952_call = mod.get_global_var('func_1952')
func_1953_call = mutated_mod.get_global_var('func_1953')
call_3394 = relay.TupleGetItem(func_1952_call(), 0)
call_3395 = relay.TupleGetItem(func_1953_call(), 0)
output = call_3394
output2 = call_3395
func_3423 = relay.Function([], output)
mod['func_3423'] = func_3423
mod = relay.transform.InferType()(mod)
output = func_3423()
func_3424 = relay.Function([], output)
mutated_mod['func_3424'] = func_3424
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3322_call = mod.get_global_var('func_3322')
func_3323_call = mutated_mod.get_global_var('func_3323')
call_3505 = func_3322_call()
call_3506 = func_3322_call()
func_2114_call = mod.get_global_var('func_2114')
func_2116_call = mutated_mod.get_global_var('func_2116')
call_3507 = relay.TupleGetItem(func_2114_call(), 0)
call_3508 = relay.TupleGetItem(func_2116_call(), 0)
func_2639_call = mod.get_global_var('func_2639')
func_2642_call = mutated_mod.get_global_var('func_2642')
var_3515 = relay.var("var_3515", dtype = "uint8", shape = (588,))#candidate|3515|(588,)|var|uint8
call_3514 = relay.TupleGetItem(func_2639_call(relay.reshape(var_3515.astype('uint8'), [588,])), 0)
call_3516 = relay.TupleGetItem(func_2642_call(relay.reshape(var_3515.astype('uint8'), [588,])), 0)
uop_3518 = relay.asinh(call_3514.astype('float64')) # shape=(1386,)
uop_3520 = relay.asinh(call_3516.astype('float64')) # shape=(1386,)
func_148_call = mod.get_global_var('func_148')
func_150_call = mutated_mod.get_global_var('func_150')
call_3540 = relay.TupleGetItem(func_148_call(relay.reshape(call_3514.astype('float32'), [9, 14, 11])), 0)
call_3541 = relay.TupleGetItem(func_150_call(relay.reshape(call_3514.astype('float32'), [9, 14, 11])), 0)
bop_3549 = relay.power(uop_3518.astype('float64'), relay.reshape(call_3540.astype('float64'), relay.shape_of(uop_3518))) # shape=(1386,)
bop_3552 = relay.power(uop_3520.astype('float64'), relay.reshape(call_3541.astype('float64'), relay.shape_of(uop_3520))) # shape=(1386,)
output = relay.Tuple([call_3505,call_3507,var_3515,bop_3549,])
output2 = relay.Tuple([call_3506,call_3508,var_3515,bop_3552,])
func_3585 = relay.Function([var_3515,], output)
mod['func_3585'] = func_3585
mod = relay.transform.InferType()(mod)
var_3586 = relay.var("var_3586", dtype = "uint8", shape = (588,))#candidate|3586|(588,)|var|uint8
output = func_3585(var_3586)
func_3587 = relay.Function([var_3586], output)
mutated_mod['func_3587'] = func_3587
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3277_call = mod.get_global_var('func_3277')
func_3279_call = mutated_mod.get_global_var('func_3279')
call_3616 = relay.TupleGetItem(func_3277_call(), 1)
call_3617 = relay.TupleGetItem(func_3279_call(), 1)
func_2890_call = mod.get_global_var('func_2890')
func_2892_call = mutated_mod.get_global_var('func_2892')
call_3624 = func_2890_call()
call_3625 = func_2890_call()
output = relay.Tuple([call_3616,call_3624,])
output2 = relay.Tuple([call_3617,call_3625,])
func_3630 = relay.Function([], output)
mod['func_3630'] = func_3630
mod = relay.transform.InferType()(mod)
output = func_3630()
func_3631 = relay.Function([], output)
mutated_mod['func_3631'] = func_3631
mutated_mod = relay.transform.InferType()(mutated_mod)
var_3660 = relay.var("var_3660", dtype = "float64", shape = (13, 8, 9))#candidate|3660|(13, 8, 9)|var|float64
var_3661 = relay.var("var_3661", dtype = "float64", shape = (13, 8, 9))#candidate|3661|(13, 8, 9)|var|float64
bop_3662 = relay.floor_mod(var_3660.astype('float64'), relay.reshape(var_3661.astype('float64'), relay.shape_of(var_3660))) # shape=(13, 8, 9)
var_3670 = relay.var("var_3670", dtype = "float64", shape = (13, 8, 9))#candidate|3670|(13, 8, 9)|var|float64
bop_3671 = relay.multiply(var_3661.astype('uint64'), relay.reshape(var_3670.astype('uint64'), relay.shape_of(var_3661))) # shape=(13, 8, 9)
func_2387_call = mod.get_global_var('func_2387')
func_2390_call = mutated_mod.get_global_var('func_2390')
var_3708 = relay.var("var_3708", dtype = "float32", shape = (715,))#candidate|3708|(715,)|var|float32
call_3707 = func_2387_call(relay.reshape(var_3708.astype('float32'), [11, 5, 13]))
call_3709 = func_2387_call(relay.reshape(var_3708.astype('float32'), [11, 5, 13]))
output = relay.Tuple([bop_3662,bop_3671,call_3707,var_3708,])
output2 = relay.Tuple([bop_3662,bop_3671,call_3709,var_3708,])
func_3722 = relay.Function([var_3660,var_3661,var_3670,var_3708,], output)
mod['func_3722'] = func_3722
mod = relay.transform.InferType()(mod)
var_3723 = relay.var("var_3723", dtype = "float64", shape = (13, 8, 9))#candidate|3723|(13, 8, 9)|var|float64
var_3724 = relay.var("var_3724", dtype = "float64", shape = (13, 8, 9))#candidate|3724|(13, 8, 9)|var|float64
var_3725 = relay.var("var_3725", dtype = "float64", shape = (13, 8, 9))#candidate|3725|(13, 8, 9)|var|float64
var_3726 = relay.var("var_3726", dtype = "float32", shape = (715,))#candidate|3726|(715,)|var|float32
output = func_3722(var_3723,var_3724,var_3725,var_3726,)
func_3727 = relay.Function([var_3723,var_3724,var_3725,var_3726,], output)
mutated_mod['func_3727'] = func_3727
mutated_mod = relay.transform.InferType()(mutated_mod)
var_3837 = relay.var("var_3837", dtype = "int8", shape = (16, 2, 11))#candidate|3837|(16, 2, 11)|var|int8
var_3838 = relay.var("var_3838", dtype = "int8", shape = (16, 2, 11))#candidate|3838|(16, 2, 11)|var|int8
bop_3839 = relay.logical_xor(var_3837.astype('int8'), relay.reshape(var_3838.astype('int8'), relay.shape_of(var_3837))) # shape=(16, 2, 11)
func_3423_call = mod.get_global_var('func_3423')
func_3424_call = mutated_mod.get_global_var('func_3424')
call_3846 = func_3423_call()
call_3847 = func_3423_call()
output = relay.Tuple([bop_3839,call_3846,])
output2 = relay.Tuple([bop_3839,call_3847,])
func_3849 = relay.Function([var_3837,var_3838,], output)
mod['func_3849'] = func_3849
mod = relay.transform.InferType()(mod)
var_3850 = relay.var("var_3850", dtype = "int8", shape = (16, 2, 11))#candidate|3850|(16, 2, 11)|var|int8
var_3851 = relay.var("var_3851", dtype = "int8", shape = (16, 2, 11))#candidate|3851|(16, 2, 11)|var|int8
output = func_3849(var_3850,var_3851,)
func_3852 = relay.Function([var_3850,var_3851,], output)
mutated_mod['func_3852'] = func_3852
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1952_call = mod.get_global_var('func_1952')
func_1953_call = mutated_mod.get_global_var('func_1953')
call_3875 = relay.TupleGetItem(func_1952_call(), 0)
call_3876 = relay.TupleGetItem(func_1953_call(), 0)
output = relay.Tuple([call_3875,])
output2 = relay.Tuple([call_3876,])
func_3902 = relay.Function([], output)
mod['func_3902'] = func_3902
mod = relay.transform.InferType()(mod)
output = func_3902()
func_3903 = relay.Function([], output)
mutated_mod['func_3903'] = func_3903
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2501_call = mod.get_global_var('func_2501')
func_2502_call = mutated_mod.get_global_var('func_2502')
call_3920 = relay.TupleGetItem(func_2501_call(), 0)
call_3921 = relay.TupleGetItem(func_2502_call(), 0)
output = call_3920
output2 = call_3921
func_3926 = relay.Function([], output)
mod['func_3926'] = func_3926
mod = relay.transform.InferType()(mod)
output = func_3926()
func_3927 = relay.Function([], output)
mutated_mod['func_3927'] = func_3927
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2101_call = mod.get_global_var('func_2101')
func_2103_call = mutated_mod.get_global_var('func_2103')
call_3937 = relay.TupleGetItem(func_2101_call(), 1)
call_3938 = relay.TupleGetItem(func_2103_call(), 1)
output = call_3937
output2 = call_3938
func_3943 = relay.Function([], output)
mod['func_3943'] = func_3943
mod = relay.transform.InferType()(mod)
mutated_mod['func_3943'] = func_3943
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3943_call = mutated_mod.get_global_var('func_3943')
call_3944 = func_3943_call()
output = call_3944
func_3945 = relay.Function([], output)
mutated_mod['func_3945'] = func_3945
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2101_call = mod.get_global_var('func_2101')
func_2103_call = mutated_mod.get_global_var('func_2103')
call_3946 = relay.TupleGetItem(func_2101_call(), 0)
call_3947 = relay.TupleGetItem(func_2103_call(), 0)
output = call_3946
output2 = call_3947
func_3952 = relay.Function([], output)
mod['func_3952'] = func_3952
mod = relay.transform.InferType()(mod)
mutated_mod['func_3952'] = func_3952
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3952_call = mutated_mod.get_global_var('func_3952')
call_3953 = func_3952_call()
output = call_3953
func_3954 = relay.Function([], output)
mutated_mod['func_3954'] = func_3954
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3423_call = mod.get_global_var('func_3423')
func_3424_call = mutated_mod.get_global_var('func_3424')
call_3960 = func_3423_call()
call_3961 = func_3423_call()
func_3322_call = mod.get_global_var('func_3322')
func_3323_call = mutated_mod.get_global_var('func_3323')
call_3964 = func_3322_call()
call_3965 = func_3322_call()
func_3163_call = mod.get_global_var('func_3163')
func_3166_call = mutated_mod.get_global_var('func_3166')
var_3967 = relay.var("var_3967", dtype = "float32", shape = (1386,))#candidate|3967|(1386,)|var|float32
call_3966 = relay.TupleGetItem(func_3163_call(relay.reshape(var_3967.astype('float32'), [1, 1386])), 3)
call_3968 = relay.TupleGetItem(func_3166_call(relay.reshape(var_3967.astype('float32'), [1, 1386])), 3)
output = relay.Tuple([call_3960,call_3964,call_3966,var_3967,])
output2 = relay.Tuple([call_3961,call_3965,call_3968,var_3967,])
func_3974 = relay.Function([var_3967,], output)
mod['func_3974'] = func_3974
mod = relay.transform.InferType()(mod)
var_3975 = relay.var("var_3975", dtype = "float32", shape = (1386,))#candidate|3975|(1386,)|var|float32
output = func_3974(var_3975)
func_3976 = relay.Function([var_3975], output)
mutated_mod['func_3976'] = func_3976
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3902_call = mod.get_global_var('func_3902')
func_3903_call = mutated_mod.get_global_var('func_3903')
call_3989 = relay.TupleGetItem(func_3902_call(), 0)
call_3990 = relay.TupleGetItem(func_3903_call(), 0)
output = relay.Tuple([call_3989,])
output2 = relay.Tuple([call_3990,])
func_3996 = relay.Function([], output)
mod['func_3996'] = func_3996
mod = relay.transform.InferType()(mod)
output = func_3996()
func_3997 = relay.Function([], output)
mutated_mod['func_3997'] = func_3997
mutated_mod = relay.transform.InferType()(mutated_mod)
func_820_call = mod.get_global_var('func_820')
func_821_call = mutated_mod.get_global_var('func_821')
call_4018 = relay.TupleGetItem(func_820_call(), 0)
call_4019 = relay.TupleGetItem(func_821_call(), 0)
func_1356_call = mod.get_global_var('func_1356')
func_1358_call = mutated_mod.get_global_var('func_1358')
const_4021 = relay.const([2.823031,9.167472,-4.432151,-3.279672,8.044175,9.916380,-4.956274,-9.382215,1.334457,5.386774,7.442510,-6.197501,-4.599193,2.132575,9.048895,6.482348,-4.558512,1.537754,4.434576,1.080760,-9.052928,-9.934442,-4.041049,-4.303155,-4.793118,-2.250459,-8.885002,-1.878488,4.395637,-8.455823,-6.977866,0.500991,8.038902,0.752538,-0.294518,6.678825,5.107728,0.367902,2.192536,-6.077585,8.286072,1.435371,7.773733,-9.304110,6.261156,7.108089,-9.184554,-3.803078,9.742271,-6.423457,-9.066956,4.419623,3.839762,-3.689552,-6.764190,-1.280348,8.374221,8.176989,4.875535,6.931263,4.723715,-3.247410,3.810192,9.720265,-7.967277,-4.706652,1.414578,6.305730,-0.177937,5.194545,-6.089138,-5.955322,4.925018,-0.344772,5.553874,6.165747,-4.564723,2.969980,-2.573673,-5.983375,-1.169355,-7.043746,-3.837524,5.025723,9.311073,-0.772729,-2.690707,4.388618,-9.974872,5.396059,1.794361,-6.883389,-9.655361,1.524575,-7.371234,-7.742614,-1.906771,0.035252,-3.626682,0.812826,7.227376,1.080824,-1.291765,-1.915051,-7.797556,-8.553238,-3.929701,5.295613,-5.560817,-2.945674,-5.464627,-1.860952,3.553958,-4.468895,-9.705964,0.153128,0.213083,3.357918,4.509607,-4.428930,2.134540,0.858494,-5.521448,3.511105,1.966512,3.772636,-5.104460,-1.878206,1.248189,1.066782,-8.014361,-9.881161,7.646521,8.333309,3.473550,-3.715462,-9.300378,-5.154250,-2.233008,-1.290879,3.734178,1.890387,7.681593,0.080768,-7.045878,-6.539897,0.604830,-4.797397,-0.746290,6.024133,-7.929837,3.880379,8.377282,1.946049,8.141780,1.568140,8.187533,-8.048241,-7.044518,-4.199746,-6.376797,1.118671,9.655353,-9.889346,7.063573,9.469128,5.272968,4.294201,-3.857458,-4.450918,-3.191897,2.201960,-5.901882,-7.609168,7.396002,-2.234032,2.141162,-7.753389,1.715893,-1.292767,-3.269114,-8.423213,-5.649294,5.169476,-8.990723,-5.298536,3.764753,6.972870,1.076164,3.154596,-8.832435,-9.780547,0.896391,-2.427451,0.348321,-5.274374,-3.387042,2.547541,-7.519200,3.485212,-4.187456,9.804561,0.012446,-4.128215,-9.977397,-1.074019,1.218948,-7.826624,1.173376,1.930271,4.760731,-3.522461,9.263125,8.025443,-0.787959,-1.073441,-1.148158,1.019797,-9.108902,2.107657,9.977702,8.287676,-7.924370,3.423439,-8.694930,0.595720,-1.360775,1.385144,8.671088,3.526168,-6.933758,4.158984,1.120781,-4.645518,-7.266528,-9.298178,9.803210,-5.340835,2.970263,1.363154,-9.771749,-4.174474,5.387210,-3.268991,-4.760375,-1.219095,-9.268861,6.375537,-0.010017,3.617799,2.169696,-6.003018,-8.842393,3.315526,7.470954,7.080863,0.263894,-0.715935,-6.392009,9.694570,6.597207,0.054296,0.238298,7.782199,-6.191937,-4.355018,1.498675,2.516734,2.564932,3.809585,3.467167,5.296993,-1.183212,6.543045,-6.470982,2.368008,9.281894,7.491937,-7.903086,-4.843064,-4.988387,-3.824831,-1.269026,0.910395,-8.667401,-5.189850,5.084769,-1.817910,1.647730,-9.553631,4.790943,6.259415,-3.955616,2.475985,-9.228057,-8.577472,1.840505,-7.611612,-5.004909,6.000504,-9.510797,-9.055960,5.900590,-1.121283,8.065678,8.997364,-4.468500,0.726530,7.897134,8.121532,-9.328051,-1.426347,9.455933,7.590020,-1.300332,-4.838162,-3.678501,2.398391,-8.607239,0.851743,-3.377526,-9.425679,7.290406,-6.688180,-8.523588,-3.868383,6.756321,-5.013257,4.951157,-8.918124,9.982664,8.852301,1.405830,8.725291,-8.021196,8.701428,8.843880,3.587495,3.072570,-6.106933,-1.382889,1.709548,9.877917,-8.860639,1.973624,7.511237,4.231599,9.464978,9.203083,-0.261086,9.639420,-9.751895,2.279143,1.329375,5.187327,9.445387,9.389770,8.590475,-3.591719,4.638837,-5.345741,-4.660897,0.048609,5.985806,9.529179,-3.296958,7.600321,3.394074,6.855763,-7.593581,-2.875296,-2.445646,-8.549666,9.731279,6.020179,-4.582516,0.459877,7.057153,-3.896821,6.072642,5.789988,-5.759805,-3.261377,4.730762,0.514592,6.453380,4.313192,6.071673,1.339054,4.598018,9.448548,4.634334,-1.792917,-2.221862,8.452654,-1.801713,7.035991,8.501043,8.628542,9.092269,-0.211398,-6.522643,-1.581028,4.326991,-2.980857,-3.294331,1.054968,-1.861890,7.707870,-6.526210,-9.649212,7.386815,-4.339752,-2.765646,8.316917,-3.949826,-4.261881,-1.762369,-2.540355,-9.773286,-6.627391,-4.364320,-7.627315,3.576456,0.729120,-6.913077,5.270087,-1.427949,0.456072,8.507016,-2.407903,-1.500692,-1.958979,-8.681628,9.127740,-1.322821,7.400284,8.632964,0.073782,3.469934,-7.911215,5.003923,6.194140,0.563887,-6.510465,-7.878432,-4.558303,9.872994,0.996977,1.478318,-9.285874,-3.004325,9.049117,-6.828865,-4.854547,9.572627,3.389561,-2.644616,-6.852681,7.707744,-5.342528,-2.468800,1.563637,-8.019087,0.899375,9.069901,4.759377,5.182081,7.178230,2.650248,-3.969463,-5.824789,4.979301,-7.481629,5.085408,-7.734979,3.783769,-7.736956,-5.643352,0.426878,2.425461,-5.014902,-4.297689,3.750031,3.156442,-2.724019,9.565378,9.213947,5.132898,0.125281,-1.950750,3.717190,-0.493400,-2.769064,-0.080304,-1.371750,-4.900574,-1.571866,-1.717982,-4.473791,-0.182379,2.613745,1.229071,5.667412,2.733667,4.487970,-2.349763,5.785621,5.373534,-7.941907,-9.648211,7.777862,1.643432,7.141195,1.756828,4.527904,-3.551340,6.638273,2.208550,7.230531,2.471556,-3.397125,7.288863,-2.244868,2.054646,-7.278619,8.414137,-0.419220,9.854348,4.467169,3.662902,-1.053910,1.680247,-6.005253,-1.130972,3.697992,-4.268423,-1.070565,-3.900705,-5.790224,1.790627,6.183748,-6.076409,5.235982,1.463915,-6.837549,6.565089,9.373906,1.799361,5.176734,1.477887,8.952246,1.012486,5.142390,5.562579,9.883181,-6.178541,5.909990,0.346334,-7.375894,1.496526,7.103461,5.454906,-5.803438,-5.032540,3.168531,-1.236939,-6.750526,-2.181659,0.861710,2.298531,-5.741758,1.159706,6.921141,-3.068397,-3.870757,-9.288125,-4.899918,-6.419384,-0.094967,-7.098219,-5.673726,1.064329,-8.518602,-7.209456,6.140091,0.465432,0.570438,1.434476,6.309304,-9.520630,-9.296405,1.388044,-6.253328,6.157217,4.621676,-4.078491,-9.658421,-4.657769,6.019365,8.435091,-9.170397,-0.636687,7.489095,-5.303568,3.091587,-5.307096,-1.538263,-7.490746,4.452452,3.970863,-1.351462,-9.728930,5.387432,5.887972,8.224492,3.199725,7.046446,4.706851,-3.396587,0.559590,-1.215061,4.307548,-3.612228,-2.301053,1.612382,-9.324031,2.916396,-0.205316,3.507815,-8.095005,-7.724757,-0.101607,5.704138,0.673263,-0.080335,-0.091861,-6.829687,8.999800,3.349199,4.224835,3.136557,-5.192708,-6.234191,-3.506737,7.233462,6.374035,-0.958171,5.913328,8.667157,4.586595,-9.497264,3.911640,3.540414,0.841684,-0.606402,0.385019,-3.859377,-6.327686,0.465881,-2.629845,1.272645,-4.127985,7.604873,-6.694398,-2.897392,-1.739329,6.812914,-7.474789,-7.051224,2.136192,-2.984849,0.831457,2.805043,0.313632,-2.276972,0.317061,3.117757,0.269407,2.450504,-9.088291,-2.345823,-5.300817,-5.744508,-4.700371,-8.935371,0.739192,9.331266,4.219688,-1.938028,7.975799,-8.486007,7.060000,-2.912782,1.361223,-0.780429,-4.047831,-9.820663,-4.578698,7.674207,-4.364513,-2.922029,-1.084374,-2.840449,-7.674882,-7.098364,0.036551,-6.799236,9.899534,4.633427,7.669342,-1.216664,-0.500231,-7.872165,3.434346,-3.746166,-6.513985,9.991089,-7.866127,-9.602815,-7.960167,-3.366853,-4.894563,-2.945384,6.402907,-1.405287,8.168468,-0.738714,7.010526,-2.590195,-1.144947,-1.990593,-5.394991,2.499693,5.555609,0.705975,7.776919,2.519990,2.874738,9.589345,-4.971540,9.862902,-1.308668,8.681521,-8.722955,-9.217546,-7.306740,1.739627,-4.107650,0.291945,3.352861,0.190443,-8.758804,-3.206404,6.164761,0.389516,6.677718,8.666125,-0.760000,6.764953,5.434574,-4.902137,0.979088,-0.011565,-3.056314,4.505917,-1.192499,-9.355894,-8.151065,-7.638826,-2.347937,5.959439,-8.879214,8.241723,8.367185,-6.365170,-8.845513,6.908177,-2.281963,7.219669,7.903278,-0.265089,-2.497657,1.843679,0.115526,-1.049262,2.034613,1.473765,-0.544484,-2.808508,-3.032652,-0.068458,4.119648,-0.361636,3.489019,5.045171,-4.118216,0.463425,-3.242059,4.143849,-7.670906,-4.622156,5.167455,-2.187332,-8.887451,-6.629679,6.385803,-8.954186,-3.965189,-8.930918,-4.935961,-2.087100,-3.801373,1.334239,-6.275899,-0.914732,-6.022880,-7.081543,9.478936,-9.264169,-3.624730,-4.549414,1.938749,-5.034211,4.248732,-5.836677,-9.732342,-9.811962,-1.167371,-0.770587,5.984804,8.868351,6.437018,2.671373,-5.691933,-1.539585,-5.066640,-2.439727,6.881248,7.369997,-7.349933,5.275282,1.959723,2.821704,9.755085,-1.729679,-1.638470,3.503780,-0.072394,-8.397077,-2.987061,0.920386,8.690229,-7.718361,-6.072131,2.907892,3.127738,-3.131382,7.265428,-2.356891,1.780234,2.764922,9.454252,9.091920,2.569219,-5.287731,-7.675974,9.005420,-6.993964,0.900708,1.041278,5.567526,7.176675,3.989225,8.068684,9.403000,2.921045,-8.186741,7.751336,-8.243493,-8.447511,-4.676183,-9.013552,-4.344964,-5.852119,5.099398,1.659049,-1.595580,-5.083712,6.574828,-6.531206,-9.459774,4.571991,-2.559079,-3.549096,9.826745,7.120009,-2.931257,5.120182,-7.155583,-1.168439,-7.668341,-1.643685,-4.408051,-2.014262,-3.431076,-4.907936,-5.452723,-9.765771,4.236904,6.067955,9.265710,-2.040324,-0.202445,-6.978019,2.699566,5.901394,-7.014613,4.974498,-1.957151,-5.333956,-1.010054,-5.312231,-3.991982,1.359252,1.672970,6.312238,4.616723,-3.240411,2.455840,8.120190,6.946452,-3.168616,-4.346817,-4.079367,-3.975875,-3.157263,-1.320565,1.451325,2.662792,-1.381951,-7.866312,1.437455,5.124178,8.695962,-8.574167,-3.354523,2.746433,-6.661207,-9.556085,6.669668,2.788671,7.660755,-5.602531,3.334832,4.809349,-1.994291,9.818651,7.456424,-9.395791,3.264189,4.670638,-0.640723,8.579367,5.479286,-9.710602,-0.581389,-2.475482,6.492847,-7.238351,-9.055968,-1.737141,9.044455,-9.551155,-7.401480,-4.123942,3.448795,9.756427,-2.204508,-4.394994,-7.237736,-0.058018,3.058179,-7.288597,1.442444,9.145470,-3.289887,8.152885,2.610384,6.675888,-6.722619,1.596790,9.886560,9.322422,6.889161,4.102154,-7.419199,-3.661000,-6.503263,-7.904139,-2.066026,9.738136,7.732370,-5.877772,-9.234817,3.271366,5.054870,8.603997,3.817716,9.720505,-6.849903,2.476294,-5.606580,-4.903703,-7.808540,0.815783,-2.863752,-5.393630,0.850701,-3.400664,-0.407343,-6.223966,2.700716,-7.691744,-3.911993,4.135727,6.915708,-3.922684,6.768754,-8.247951,5.724306,-3.546342,3.757278,-8.871788,1.072565,-4.119369,-3.400132,-8.241303,-8.226861,-6.738765,-0.425500,-8.105389,-3.646328,5.483238,6.539694,-7.274130,4.646410,3.760659,1.031257,3.927737,-5.957843,-9.351297,-2.900461,-7.130352,6.239330,-0.634757,9.301786,4.199041,7.531745,7.012223,8.165573,8.423006,-8.062357,3.047478,-3.639111,-4.370524,-2.883993,1.579149,9.276795,-9.663263,5.833850,-3.061297,8.853228,-4.921114,7.550622,6.059225,5.368950,0.854964,0.726232,4.465429,-9.173136,4.778457,-2.421494,4.453031,-6.177821,4.878825,-4.441927,-4.453587,5.188184,-6.130524,-8.193730,6.145600,7.930234,1.782727,3.700356,-9.059161,0.724402,2.909793,5.464227,2.064789,-7.522640,0.293437,5.155365,-1.455984,-1.554614,2.087410,-5.146038,3.895024,0.442176,1.299222,6.633151,-5.886286,2.531766,6.302558,2.530023,-4.523402,7.636567,-3.739284,-9.457103,4.815583,-0.016312,3.096719,-8.112794,-5.106327,-7.636088,-3.550705,0.853311,-8.493407,-6.676523,2.141660,-3.554966,4.848218,6.568101,-7.728131,-0.590997,2.319396,-3.197437,-5.042513,7.620226,0.548254,-1.890966,7.107672,-9.801232,-9.259035,6.643366,-1.431427,2.748705,4.929935,-5.947506,-5.327195,-3.580781,9.239495,5.065928,8.441980,-3.741960,-8.196481,-8.794941,-4.526962,2.145703,-3.767393,3.653788,-9.967377,-4.388541,8.559662,-2.306194,-9.998353,9.955932,9.532462,6.324478,3.281443,8.060147,-8.873081,-4.386314,7.933500,6.540552,-7.554109,-0.717879,2.833918,6.705125,9.985353,1.486220,-3.424057,5.120480,9.910130,-3.885442,-7.940757,-4.245673,2.058167,-5.647877,-0.343179,-2.140862,-6.556581,6.516523,-2.847313,-5.986099,-9.922230,8.632922,7.332245,7.506797,0.854069,9.337958,2.584411,-1.387504,-8.371134,4.373613,-5.659234,-9.366655,6.416631,-6.712378,-0.549549,9.610227,-3.250344,3.827118,-5.887453,-9.855955,-1.417392,5.110591,8.803596,-1.811585,-4.144021,-5.652124,-5.018212,1.248316,4.663849,8.190166,9.916313,-7.362349,0.937355,9.593272,-3.480397,3.108071,9.553397,7.372749,-2.247466,2.342174,9.308711,4.148416,-3.828385,1.096718,-2.934526,7.668865,-9.915453,-5.386331,3.767463,4.072081,5.295241,-6.913345,4.772968,-9.911622,1.514139,4.170778,3.666567,-6.970231,2.470310,9.549166,-4.313792,9.512098,6.917645,-2.341136,4.648700,-1.187326,-4.278792,-8.792208,-9.369378,7.995070,-4.026644,0.522753,4.974461,9.427214,5.495417,6.888512,4.180593,-6.348621,-3.466773,2.134678,-5.975460,-8.883669,-7.625521,7.820855,0.021888,-5.913939,7.486563,-8.407927,-0.894260,1.268427,-4.993132,4.854750,-5.917880,-3.119015,0.829756,-4.754324,-0.633250,-3.594630,5.492142,1.638753,7.987692,-8.600722,0.328546,1.155328,-8.640815,-1.012632,2.158246,-4.757829,3.275488,-9.559023,-6.971973,7.731232,-3.562748,9.873732,6.310468,-5.105018,3.691182,7.359816,7.325040,-8.539821,1.151528,3.804002,-1.268230,-5.458135,-6.356369,-2.832421,-9.620250,9.849660,-9.959260,-4.004788,-4.585799,-6.677734,-5.463067,-4.777949,-5.476031,5.132995,4.643552,4.497015,5.741667,-1.356935,-2.618985,-9.009176,-8.511535,8.730796,0.180465,-3.781844,7.640653,8.433582,-6.610008,1.544908,-1.637061,-3.504672,3.748908,1.305406,-7.709374,8.682091,4.755439,6.325769,1.354720,-7.976693,-5.485065,-0.529004,3.484143,6.679036,-5.846220,-6.337232,-7.538992,-0.427922,-1.809846,-0.874099,9.494175,-4.119977,1.445287,-1.052998,-5.716325,2.292930,8.736647,-4.357278,3.265651,-5.477146,1.334641,-9.835810,-9.670168,3.601411,6.101841,6.716212,2.462516,7.207093,1.391318,-8.510303,-6.596663,-3.845336,0.049910,-6.337498,2.620074,-3.896603,9.212931,-8.834138,-1.083878,9.591399,7.044423,-9.816724,-0.766184,2.015450,-3.713901,6.077487,-9.451900,-6.270602,4.687554,-2.182996,-7.503994,1.830841,-1.458063,9.184929,1.633607,-4.314394,1.255323,-3.645411,-0.062946,2.529533,2.030278,3.217585,-5.827247,5.236999,-0.327180,-3.347895,8.737684,-2.944230,7.225252,-0.397340,-2.470778,4.984400,3.892247,5.438233,-3.651376,-3.045283,-0.305410,4.841848,-6.071595,-7.924538,-1.555727,6.739824,-8.447359,4.707034,5.270718,-5.305673,-8.266855,9.167941,4.139036,3.422671,1.211180,1.990095,4.390294,-5.191129,-1.023273,-4.419318,-1.127275,-0.760855,-4.852643,-2.639171,4.899905,8.414847,1.688513,4.700733,-7.761163,-3.238484,0.184761,5.357253,-8.822518,-1.656328,-4.935476,3.902781,-3.972658,5.912065,-3.692453,-5.158231,-1.412381,8.451095,-4.047192,7.801302,-8.211348,-2.478916,5.842334,-8.622372,2.267003,-4.375829,-3.388202,-9.275687,2.979344,0.445500,-4.550454,0.701431,8.594585,-5.369278,-4.523647,-1.285930,3.290758,-3.190591,-4.565709,-5.947939,8.254233,0.431821,-5.664592,-9.835315,4.078858,9.677556,5.127473,6.993875,-4.588890,-8.790642,2.664096,8.447012,2.771445,8.098544,-2.655236,9.446213,1.434777,0.813991,2.682104,5.189420,8.829732,-1.651976,-9.207142,-8.343239,1.642300,1.041801,5.258277,2.985626,-1.846165,8.028295,-7.705760,-9.465953,3.172767,7.788909,8.089001,-9.715361,-1.167271,4.223406,-9.193305,8.916479,-7.634593,-2.083682,6.193100,-6.936222,-9.665692,-4.076928,-4.578278,-1.942921,7.039657,-8.482418,8.906258,2.035830,5.464934,-0.951458,-0.096062,7.395554,-4.657725,1.902724,0.982704,6.008078,8.679360,-5.908562,-2.267078,8.159411,1.038996,-6.425297,-0.180935,-9.518335,-9.068554,6.285242,-7.081704,8.763823,-7.877666,-8.981401,-9.724166,-3.389434,4.895968,1.885777,7.720361,7.825891,7.536220,3.737916,-3.714479,7.790477,-9.055890,7.499291,-1.823029,0.618560,0.970596], dtype = "float64")#candidate|4021|(1584,)|const|float64
call_4020 = func_1356_call(relay.reshape(const_4021.astype('float64'), [16, 9, 11]))
call_4022 = func_1356_call(relay.reshape(const_4021.astype('float64'), [16, 9, 11]))
func_2008_call = mod.get_global_var('func_2008')
func_2011_call = mutated_mod.get_global_var('func_2011')
const_4030 = relay.const([-7.618123,6.099879,0.554742,-8.135176,-0.983215,9.809359,9.099129,3.962650,7.139809,9.827051,4.517809,4.166434,-5.079508,3.814036,-6.986840,0.277405,8.518179,4.060813,-6.445159,-9.923401,3.603292,9.681974,-4.836773,-1.142329,-1.445889,-7.835305,5.664885,-2.601120,5.339992,3.909139,-6.044327,-9.010176,5.736219,-2.864606,-0.289259,1.383546,-7.386770,-9.502343,1.584304,0.501170,7.981016,0.402192,1.734870,-0.562140,-3.255609,-9.283252,-6.355979,-0.682187,-2.799350,7.553755,-8.665357,7.785616,0.358937,4.484414,-9.860773,-7.527339,4.161779,-5.141591,3.083199,0.944413,-9.739809,6.373657,3.214071,6.951303,-2.805691,-3.928019,1.941624,-6.025060,5.469244,0.453277,-1.224769,3.564066,-6.426863,-4.068428,-3.375908,7.860597,-3.174660,2.488004,-4.393449,9.335300,-8.364897,5.281692,2.354390,-2.214322,-1.076596,3.863889,-1.517406,-6.549047,-4.492851,-3.111439,-8.635104,-3.652805,-7.041841,-0.954363,-3.924275,-1.339171,0.368700,-8.250764,6.619401,-3.112593,-3.302616,-1.485521,-9.850282,9.123965,9.915834,-9.241872,7.441963,-3.781381,-7.112452,3.843402,3.995482,9.763049,6.750257,0.928010,9.826400,-5.043580,6.411549,-9.689422,7.349677,4.071531,1.530330,1.575108,-6.003234,8.475619,-7.016642,9.412401,-0.155525,9.002635,-4.991306,-3.541379,-6.760054,3.762680,9.319596,5.864018,-8.714816,5.978373,-6.771977,-7.692121,6.992227,-0.384141,-6.428797,7.929971,-3.457684,3.444122,8.264837,-5.264883,-8.683443,-5.246531,7.119528,0.263557,-1.109544,-2.869924,5.629021,1.380217,-9.607314,-9.005332,4.784009,4.905896,-8.001815,-2.518181,-6.998872,7.038326,-5.216780,-9.957230,-5.309498,5.071467,-6.392079,6.248385,4.013774,-8.856856,-4.898032,-8.913641,-5.267958,-9.442978,-0.310822,2.413347,3.705212,-6.462885,-0.458512,-6.682453,-8.148280,4.791490,7.715938,-1.222777,6.931324,-1.403308,3.837424,1.443082,-6.599828,3.314604,-1.757234,3.916255,2.210012,9.408271,-8.007982,-0.083402,-8.973877,4.579692,8.949786,-0.299976,4.724805,-9.424132,4.058093,-3.112260,4.955394,0.756270,-1.485205,-9.968130,-6.790707,3.031215,1.040466,7.971872,7.895579,7.196609,-7.233285,8.619739,-4.463760,-0.666383,0.519052,9.307298,-1.741772,-9.722079,6.427923,8.390304,6.568802,-4.117371,-2.721782,-5.991651,-9.480542,-3.101407,4.466461,-0.842297,-6.743198,1.827815,-0.460015,-6.466449,0.671436,8.575864,1.775472,-0.040638,-6.753799,1.483080,-7.999088,-4.207771,4.614593,6.474818,4.889634,-5.397679,7.143500,8.512010,-3.212310,-7.897903,3.804034,-5.931296,-5.859105,1.798182,9.698790,-8.778062,-8.593894,6.458693,9.094573,-1.997904,-1.021301,-1.818621,-2.163143,4.353154,-6.554399,6.161619,-3.288232,-3.055291,-8.973564,7.439453,5.742290,-3.077586,-1.326686,2.741597,-0.176944,-5.428795,6.420897,-3.555472,1.002632,-9.715778,-8.220545,5.275229,-4.805350,2.391638,2.241451,-7.643136,-7.931775,-3.824295,-4.279519,9.027256,4.677593,-3.747606,-7.412197,-6.757394,-0.160342,6.317960,-4.431374,3.728473,0.510940,-2.353351,7.161939,8.131360,6.105464,8.559744,3.539540,-4.916234,-7.005702,3.590173,-7.759843,-0.369489,3.935981,2.497923,-4.854418,-3.790469,3.262731,-4.737085,5.883851,4.964001,6.212291,5.702878,3.529082,9.997307,-4.854151,-9.739948,6.343033,0.275645,8.624339,-0.070116,-3.974814,2.913936,4.504851,-9.957301,3.646983,6.407251,-4.979038,0.841423,5.515658,-6.309526,-8.779650,-0.659279,6.593577,-5.660773,-4.309850,6.673797,8.784800,-0.029301,-3.965917,8.205329,-9.645407,5.367571,3.598593,-0.211498,6.759971,-4.467045,-4.657610,1.143730,4.518278,-8.604456,0.140349,-4.467628,-3.653776,3.138009,6.925192,-5.494843,-0.370521,2.722802,-3.605119,-7.877903,-6.491770,1.831847,2.113157,-7.554548,-7.300586,-8.315353,-0.558653,-1.604743,3.557645,-4.903659,3.833275,6.648747,-0.177477,4.097392,-8.900194,-2.518917,7.676247,7.704826,3.941281,4.742384,-1.840622,1.055207,-8.568218,8.458977,7.889008,-7.810793,-9.975393,-5.389733,-8.499134,-3.114051,6.325550,6.904531,-0.713969,9.626517,2.195319,-0.180777,-8.241093,-9.655505,2.696128,6.485793,9.057340,8.885796,3.308881,-0.616981,-8.760312,-6.953115,-7.127587,-0.885756,3.920521,-2.232303,-8.745724,-0.819888,-1.229344,4.662441,5.133854,-8.948100,-7.570991,-7.658297,-7.979699,-4.475206,0.728269,-1.571403,-2.112620,0.839806,3.761706,-6.761515,-7.965810,-8.576428,-5.858487,-8.705687,-0.374034,-2.249930,5.476941,-4.590607,-6.529954,-3.429943,-4.234036,6.939668,8.309171,-8.883766,-2.524283,-7.925620,5.835009,4.033643,-2.235254,7.417480,-4.025331,9.859090,2.479595,1.036422,-8.804923,8.713132,8.441806,-0.214579,1.693261,1.263600,7.358820,-3.125397,-8.599343,-6.794882,-8.998521,-0.430459,-0.708807,-3.749943,5.359070,3.184458,4.133577,-8.808519,9.030190,8.267166,5.137165,-2.994683,-2.939194,-7.831781,-0.654683,9.831390,-6.328393,3.497257,0.442988,-8.279895,-4.315381,1.467272,3.580036,-3.142253,-0.260947,5.304093,-0.096139,-3.675438,0.175361,5.857413,-0.546517,-0.633898,-8.156736,3.413271,0.906311,1.118907,5.404063,9.759330,-2.769176,8.748705,7.473149,4.760201,-6.979849,-8.234403,-9.567374,7.096138,-6.916323,8.099137,0.106876,-6.695643,8.366386,-7.883192,-4.024235,5.210171,8.555156,4.705151,7.666663,-1.643245,3.671194,8.831682,4.068945,-9.593155,-0.499123,-3.555874,-8.128444,-3.371936,-9.988064,-4.042584,-8.713391,-0.673137,-3.540630,-1.649715,-0.883056,4.330441,4.369882,6.165032,8.908626,-7.465380,1.836667,7.931545,-7.677932,6.928968,4.432139,5.224208,7.766789,7.702638,-4.699364,-1.842349,2.550234,-2.728423,-7.856363,5.779300,6.528096,-8.850647,-2.602494,-6.402241,0.833679,-3.636151,5.835854,3.761355,8.729222,-4.305698,-5.590142,-3.251142,-9.896695,6.385474,-1.310395,-5.367435,-4.766920,-4.024017,-1.260423,7.767033,0.052488,-2.779453,-1.539155,7.180662,3.836721,8.096814,-4.012677,7.345006,-3.284236,-7.850410,5.112014,-8.286002,4.419273,-2.524394,5.720160,8.326202,7.716289,9.501404,2.833197,3.759076,-2.948760,5.325481,-9.680240,4.681017,3.068260,6.020083,-4.015420,-3.427758,5.202358,1.571094,2.251808,6.588972,7.939541,-2.734436,9.185230,6.365214,-3.514277,2.520798,6.449536,3.528371,-2.372063,3.289155,-1.028185,-2.133484,-3.600971,-5.453130,-9.908407,5.868501,-1.020085,1.800072,5.548286,0.636114,5.256166,1.455531,0.531534,3.845718,7.252281,-6.202005,-5.706195,6.971806,-0.129678,-4.982567,0.537585,-4.023747,0.928853,-6.210614,-3.328172,-4.333153,-8.019751,-5.721315,-0.789971,1.398860,-0.300875,9.848635,-3.418408,-0.588958,-1.723983,5.189105,-3.715419,0.435809,6.193845,-7.432883,2.477068,1.861324,-1.469763,9.243238,1.612654,8.035589,-7.691265,2.678397,7.370477,-7.415985,-7.256078,-9.116436,9.231979,1.052853,2.364567,1.917664,-8.012964,-7.948742,-7.405554,-1.803182,-3.745624,-3.832889,-7.272095,8.415638,5.835612,-0.120336,1.478931,-5.508839,-5.860151,-3.243810,6.997810,5.091901,-2.333976,4.700462,8.898644,9.784776,2.894048,2.377228,7.666372,2.947437,-4.537783,-3.313559,-4.476820,-0.881951,-3.918089,-3.909191,-1.561282,-9.105514,6.006063,-0.245879,2.137995,-2.605388,0.411787,-1.286733,-5.726031,9.550413,0.139117,2.254424,-1.588883,1.660980,-9.246986,-1.228674,8.089461,3.983812,-2.440154,2.445245,6.196448,-3.064176,9.302168,0.573695,7.129539,-6.511474,1.125238,-7.553740,-7.384218,-3.556214,-1.278844,5.377259,9.292494,-5.710326,-1.932527,7.644328,-0.615275,-6.727969,0.345936,3.889591,-4.291423,5.207626,6.745434,5.051324,7.691280,-0.997150,2.490142,5.536594,2.353867,-4.710599,-0.331000,2.007687,-4.606981,-9.203278,-3.492938,-6.659700,-6.263719,-1.154597,4.886429,5.296390,0.482962,-2.514501,0.396325,-7.370065,-5.775952,0.734097,-3.019580,7.711351,-9.549003,-4.805461,9.745525,-0.690111,6.235842,-8.433573,-1.192375,2.438213,9.331411,-9.896973,-1.579105,3.603953,-7.685149,8.401200,-4.029196,1.294652,-5.432359,6.063646,-7.684290,7.953619,-1.500571,-5.333618,6.798446,-3.592928,-8.937701,-0.320695,2.973358,2.858852,-6.439505,9.248819,0.313265,8.136937,-6.515854,0.610921,-7.819979,-0.024508,-3.442739,-2.106745,9.531720,8.667351,8.079493,-4.339457,1.856707,-4.584657,-0.782013,-0.316937,-8.535392,0.149073,-2.584855,7.279451,-6.900656,8.137554,9.304194,-2.152276,3.723337,-7.404199,5.565125,8.110627,-3.687987,-4.927437,1.240670,-0.185408,8.093203,5.986957,-7.255680,-5.368537,-4.215721,-2.474379,2.536450,-9.509870,-1.379159,-9.800219,0.579723,-9.023930,0.328686,-8.844935,-1.202836,8.819219,2.214632,0.025859,7.233896,-5.653693,-0.388185,2.334399,5.754523,-6.853445,-8.444036,-3.423708,-2.346908,1.323609,8.327172,0.192666,-1.723898,9.369522,4.369021,-7.741346,1.652708,-7.196888,0.187917,7.015498,-6.152222,-7.432462,-4.147364,-8.488131,8.510784,8.572964,-4.022776,-0.693859,6.176524,-1.258384,1.405069,3.527186,8.597371,-0.515156,-7.820890,6.304927,4.769697,5.411004,-0.117888,-6.401676,-6.804237,6.990348,-4.013434,6.768711,5.926397,-2.217899,-5.763360,8.318413,-6.765081,-7.718875,-0.772242,9.919886,4.406964,5.081299,-0.120447,-0.905127,1.115607,8.833837,3.976693,6.062333,-3.493229,3.962657,-0.918626,-0.708883,-7.474149,1.322535,9.946161,-4.079238,6.705210,-1.380143,-2.844624,-6.579178,-0.653590,2.350891,5.667652,6.146816,3.474301,-9.744367,5.521118,-7.303148,-6.368236,-7.864493,-5.218551,-5.822926,8.018262,2.184803,0.187513,4.460890,-9.250718,-8.222526,-9.059136,4.827471,-1.564011,0.507921,7.030280,-5.623493,2.451694,4.498346,1.227027,3.876004,-8.956696,-7.216568,2.806632,-6.466749,1.244027,1.419725,-6.971082,9.983483,-7.253589,-6.521376,-3.622359,2.653011,-0.530120,5.344769,7.836205,-5.959090,6.156607,2.519647,-3.342881,-9.723208,-2.057189,5.403587,9.556228,-6.135419,5.315470,0.069300,1.648468,6.420835,4.240266,2.191192,-2.075746,-5.209699], dtype = "float32")#candidate|4030|(990,)|const|float32
call_4029 = relay.TupleGetItem(func_2008_call(relay.reshape(const_4030.astype('float32'), [990,])), 3)
call_4031 = relay.TupleGetItem(func_2011_call(relay.reshape(const_4030.astype('float32'), [990,])), 3)
uop_4052 = relay.sinh(call_4029.astype('float32')) # shape=(585, 3)
uop_4054 = relay.sinh(call_4031.astype('float32')) # shape=(585, 3)
uop_4055 = relay.cosh(uop_4052.astype('float64')) # shape=(585, 3)
uop_4057 = relay.cosh(uop_4054.astype('float64')) # shape=(585, 3)
bop_4063 = relay.maximum(call_4029.astype('uint64'), relay.reshape(uop_4052.astype('uint64'), relay.shape_of(call_4029))) # shape=(585, 3)
bop_4066 = relay.maximum(call_4031.astype('uint64'), relay.reshape(uop_4054.astype('uint64'), relay.shape_of(call_4031))) # shape=(585, 3)
output = relay.Tuple([call_4018,call_4020,const_4021,const_4030,uop_4055,bop_4063,])
output2 = relay.Tuple([call_4019,call_4022,const_4021,const_4030,uop_4057,bop_4066,])
func_4074 = relay.Function([], output)
mod['func_4074'] = func_4074
mod = relay.transform.InferType()(mod)
output = func_4074()
func_4075 = relay.Function([], output)
mutated_mod['func_4075'] = func_4075
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2752_call = mod.get_global_var('func_2752')
func_2753_call = mutated_mod.get_global_var('func_2753')
call_4106 = relay.TupleGetItem(func_2752_call(), 2)
call_4107 = relay.TupleGetItem(func_2753_call(), 2)
output = call_4106
output2 = call_4107
func_4108 = relay.Function([], output)
mod['func_4108'] = func_4108
mod = relay.transform.InferType()(mod)
output = func_4108()
func_4109 = relay.Function([], output)
mutated_mod['func_4109'] = func_4109
mutated_mod = relay.transform.InferType()(mutated_mod)
const_4135 = relay.const([[[-3.732206,9.662951,6.852474,0.655751,-4.690781,-7.910131,-7.877001,6.752132,8.541073],[-7.294356,3.938818,3.818479,0.137622,4.959894,7.940766,7.915700,3.961976,-8.752785],[-2.528506,-9.682700,0.627373,5.765427,5.108366,-8.827096,-2.404076,-0.104253,7.515205],[-6.606743,5.521695,-9.446451,9.206499,-8.153669,-9.150794,7.735149,6.776779,5.336392],[-9.201511,-2.290975,6.318776,-1.722900,4.754951,-4.185452,-0.808439,5.641121,-8.019619],[0.212369,1.481564,-9.517992,-1.084028,-6.556373,5.056925,-9.416094,-7.777732,-8.720380],[0.885179,1.547120,5.146503,8.436891,2.165533,8.864874,-9.547808,9.144917,9.729058]],[[0.067561,5.471497,2.553214,3.407873,-6.688781,-3.589982,-7.164757,9.808373,-8.341473],[7.814842,1.441975,-0.624952,-6.491029,5.852690,-1.245593,9.318923,-6.197064,2.911264],[0.712431,1.071475,-8.454459,-7.638079,8.386461,-3.532821,9.911396,3.322289,-2.187992],[4.355466,0.961494,-5.455747,5.367680,7.362877,-8.130468,5.164758,-2.265960,4.925037],[-8.576573,8.390750,-4.943593,5.740308,4.953842,-5.691278,-9.936244,-0.408935,-2.812984],[8.462839,-1.108876,6.708711,4.486553,-2.738269,5.383766,-3.834018,-0.478815,5.883890],[-9.145100,-2.883975,9.842735,0.061075,-8.032724,5.063318,6.556921,8.622794,-2.986750]],[[-6.543751,7.179020,4.942576,3.169356,3.542566,7.765431,-6.293152,8.213150,5.206225],[0.362791,1.369153,-7.002660,-0.758836,1.449853,6.341975,-0.153647,-6.664584,-7.614918],[-2.325753,5.565961,0.279722,-2.236252,-9.677778,-2.534285,-1.129580,3.829068,-4.681010],[8.273868,5.065736,-7.455204,-5.941150,-5.829116,-9.557681,-7.205315,-9.007716,-2.345573],[-6.420976,2.259484,1.363892,-9.349000,4.661299,0.295465,1.717293,-4.562357,3.181072],[9.561359,5.507449,-1.317572,-0.258099,-1.249824,6.509823,1.584334,1.044783,-3.876694],[-4.836860,0.553225,-0.935876,8.426734,7.009400,-0.360787,-4.259355,-0.953409,-9.021726]],[[-6.118812,7.686948,4.869282,5.999724,-6.657798,-1.323125,0.409638,2.335729,-5.836599],[1.695917,1.115113,-6.437511,-6.280342,1.942919,-6.853980,8.681339,-1.229128,-5.729643],[9.736077,-7.365079,-1.843961,4.370182,-5.341230,-8.923830,-1.197935,-8.048812,-1.543786],[-6.093812,-4.955249,8.132184,9.300412,9.137602,9.913743,3.358831,9.381620,-9.674738],[-8.512779,-9.660058,-8.556180,-0.589539,-1.445747,-0.902466,6.433709,2.770962,-1.966627],[-9.462803,-6.125010,-5.990436,1.054463,-1.419400,8.146315,8.627283,-7.019560,-1.345629],[-0.117200,-6.485224,-0.442486,-1.482550,6.908983,9.077739,-5.328888,7.472333,8.166707]],[[8.399582,1.062168,0.689879,-3.320912,1.553438,-4.487281,-1.552229,-6.665094,-5.643429],[4.581821,-8.732272,-9.805438,2.371049,4.491399,5.361387,-8.624796,-1.884741,8.387886],[-5.249743,-7.400718,-2.670570,-2.413611,6.789990,3.101201,1.497336,-3.209853,7.961628],[1.267190,-9.576329,7.675568,5.720617,-6.204972,-0.812835,7.625089,7.355294,-2.860103],[3.868388,-3.760048,4.767989,-6.557127,2.574605,-2.853254,8.123974,4.449853,-4.238093],[-4.687576,-8.805475,8.350835,-9.907795,8.784318,-1.960820,6.383991,-0.309566,9.852232],[-7.905693,-5.689655,-3.780591,-8.197947,-4.406565,3.586462,3.924467,-5.104600,-4.223981]]], dtype = "float32")#candidate|4135|(5, 7, 9)|const|float32
var_4136 = relay.var("var_4136", dtype = "float32", shape = (5, 7, 9))#candidate|4136|(5, 7, 9)|var|float32
bop_4137 = relay.mod(const_4135.astype('float32'), relay.reshape(var_4136.astype('float32'), relay.shape_of(const_4135))) # shape=(5, 7, 9)
output = bop_4137
output2 = bop_4137
func_4145 = relay.Function([var_4136,], output)
mod['func_4145'] = func_4145
mod = relay.transform.InferType()(mod)
var_4146 = relay.var("var_4146", dtype = "float32", shape = (5, 7, 9))#candidate|4146|(5, 7, 9)|var|float32
output = func_4145(var_4146)
func_4147 = relay.Function([var_4146], output)
mutated_mod['func_4147'] = func_4147
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3239_call = mod.get_global_var('func_3239')
func_3240_call = mutated_mod.get_global_var('func_3240')
call_4149 = relay.TupleGetItem(func_3239_call(), 0)
call_4150 = relay.TupleGetItem(func_3240_call(), 0)
func_1218_call = mod.get_global_var('func_1218')
func_1222_call = mutated_mod.get_global_var('func_1222')
var_4155 = relay.var("var_4155", dtype = "float32", shape = (990,))#candidate|4155|(990,)|var|float32
call_4154 = relay.TupleGetItem(func_1218_call(relay.reshape(var_4155.astype('float32'), [11, 6, 15]), relay.reshape(var_4155.astype('float32'), [11, 6, 15]), relay.reshape(var_4155.astype('float32'), [11, 6, 15]), ), 4)
call_4156 = relay.TupleGetItem(func_1222_call(relay.reshape(var_4155.astype('float32'), [11, 6, 15]), relay.reshape(var_4155.astype('float32'), [11, 6, 15]), relay.reshape(var_4155.astype('float32'), [11, 6, 15]), ), 4)
output = relay.Tuple([call_4149,call_4154,var_4155,])
output2 = relay.Tuple([call_4150,call_4156,var_4155,])
func_4160 = relay.Function([var_4155,], output)
mod['func_4160'] = func_4160
mod = relay.transform.InferType()(mod)
var_4161 = relay.var("var_4161", dtype = "float32", shape = (990,))#candidate|4161|(990,)|var|float32
output = func_4160(var_4161)
func_4162 = relay.Function([var_4161], output)
mutated_mod['func_4162'] = func_4162
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2101_call = mod.get_global_var('func_2101')
func_2103_call = mutated_mod.get_global_var('func_2103')
call_4164 = relay.TupleGetItem(func_2101_call(), 1)
call_4165 = relay.TupleGetItem(func_2103_call(), 1)
func_3943_call = mod.get_global_var('func_3943')
func_3945_call = mutated_mod.get_global_var('func_3945')
call_4171 = func_3943_call()
call_4172 = func_3943_call()
output = relay.Tuple([call_4164,call_4171,])
output2 = relay.Tuple([call_4165,call_4172,])
func_4184 = relay.Function([], output)
mod['func_4184'] = func_4184
mod = relay.transform.InferType()(mod)
output = func_4184()
func_4185 = relay.Function([], output)
mutated_mod['func_4185'] = func_4185
mutated_mod = relay.transform.InferType()(mutated_mod)
var_4193 = relay.var("var_4193", dtype = "float32", shape = (14, 15, 6))#candidate|4193|(14, 15, 6)|var|float32
uop_4194 = relay.sinh(var_4193.astype('float32')) # shape=(14, 15, 6)
output = relay.Tuple([uop_4194,])
output2 = relay.Tuple([uop_4194,])
func_4203 = relay.Function([var_4193,], output)
mod['func_4203'] = func_4203
mod = relay.transform.InferType()(mod)
mutated_mod['func_4203'] = func_4203
mutated_mod = relay.transform.InferType()(mutated_mod)
var_4204 = relay.var("var_4204", dtype = "float32", shape = (14, 15, 6))#candidate|4204|(14, 15, 6)|var|float32
func_4203_call = mutated_mod.get_global_var('func_4203')
call_4205 = func_4203_call(var_4204)
output = call_4205
func_4206 = relay.Function([var_4204], output)
mutated_mod['func_4206'] = func_4206
mutated_mod = relay.transform.InferType()(mutated_mod)
var_4286 = relay.var("var_4286", dtype = "int32", shape = (11, 3, 13))#candidate|4286|(11, 3, 13)|var|int32
var_4287 = relay.var("var_4287", dtype = "int32", shape = (11, 3, 13))#candidate|4287|(11, 3, 13)|var|int32
bop_4288 = relay.less_equal(var_4286.astype('bool'), relay.reshape(var_4287.astype('bool'), relay.shape_of(var_4286))) # shape=(11, 3, 13)
output = relay.Tuple([bop_4288,])
output2 = relay.Tuple([bop_4288,])
func_4292 = relay.Function([var_4286,var_4287,], output)
mod['func_4292'] = func_4292
mod = relay.transform.InferType()(mod)
mutated_mod['func_4292'] = func_4292
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4292_call = mutated_mod.get_global_var('func_4292')
var_4294 = relay.var("var_4294", dtype = "int32", shape = (11, 3, 13))#candidate|4294|(11, 3, 13)|var|int32
var_4295 = relay.var("var_4295", dtype = "int32", shape = (11, 3, 13))#candidate|4295|(11, 3, 13)|var|int32
call_4293 = func_4292_call(var_4294,var_4295,)
output = call_4293
func_4296 = relay.Function([var_4294,var_4295,], output)
mutated_mod['func_4296'] = func_4296
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2844_call = mod.get_global_var('func_2844')
func_2845_call = mutated_mod.get_global_var('func_2845')
call_4300 = relay.TupleGetItem(func_2844_call(), 0)
call_4301 = relay.TupleGetItem(func_2845_call(), 0)
output = relay.Tuple([call_4300,])
output2 = relay.Tuple([call_4301,])
func_4308 = relay.Function([], output)
mod['func_4308'] = func_4308
mod = relay.transform.InferType()(mod)
output = func_4308()
func_4309 = relay.Function([], output)
mutated_mod['func_4309'] = func_4309
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4108_call = mod.get_global_var('func_4108')
func_4109_call = mutated_mod.get_global_var('func_4109')
call_4386 = func_4108_call()
call_4387 = func_4108_call()
func_1346_call = mod.get_global_var('func_1346')
func_1347_call = mutated_mod.get_global_var('func_1347')
call_4398 = relay.TupleGetItem(func_1346_call(), 0)
call_4399 = relay.TupleGetItem(func_1347_call(), 0)
output = relay.Tuple([call_4386,call_4398,])
output2 = relay.Tuple([call_4387,call_4399,])
func_4419 = relay.Function([], output)
mod['func_4419'] = func_4419
mod = relay.transform.InferType()(mod)
mutated_mod['func_4419'] = func_4419
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4419_call = mutated_mod.get_global_var('func_4419')
call_4420 = func_4419_call()
output = call_4420
func_4421 = relay.Function([], output)
mutated_mod['func_4421'] = func_4421
mutated_mod = relay.transform.InferType()(mutated_mod)
const_4439 = relay.const(-3, dtype = "int64")#candidate|4439|()|const|int64
const_4440 = relay.const([[[3,-7,6,-3,-7,-4],[-7,6,8,9,6,6],[3,-8,1,2,5,-4],[-1,7,8,-9,-10,6],[-2,1,-6,-1,-5,9],[6,10,3,6,3,-4],[-5,-7,-7,-4,-9,-6],[2,-3,-6,-2,6,-6],[8,-4,5,3,2,-6],[4,-9,5,-7,3,-3],[-2,3,-9,-8,-3,7],[2,-10,1,-5,-6,-7],[10,-9,3,5,-8,-3],[9,3,4,10,9,10],[5,-2,-10,3,2,4]],[[-3,1,9,-8,3,-10],[9,-5,-7,-6,-10,3],[-9,3,-8,9,8,-1],[-3,-5,10,5,5,-10],[5,-5,6,9,6,-1],[9,-4,-1,3,-5,2],[2,-7,-9,9,2,-1],[6,8,-1,6,8,-8],[6,2,-10,9,4,-8],[2,7,3,-6,9,3],[-2,4,9,-8,-3,-6],[-7,-4,-10,5,2,-8],[1,6,-6,4,7,8],[9,-1,-10,-5,4,1],[-4,6,10,10,5,-3]],[[-4,1,-4,7,8,-8],[-5,-9,-4,2,7,-1],[3,-8,7,1,8,-3],[4,-8,8,-3,8,-3],[-10,-10,5,2,3,6],[1,1,1,4,6,8],[-7,-6,-10,-9,3,7],[-1,4,9,3,-9,-1],[-10,4,6,-7,-2,10],[-1,-10,8,-2,6,-10],[8,-7,8,7,-3,-6],[-4,4,8,-6,2,-5],[5,7,5,-10,-1,-10],[-5,10,10,6,9,-8],[1,7,-1,-4,-2,-10]],[[8,-10,5,9,8,7],[-3,2,1,10,1,7],[-2,8,10,8,8,-7],[1,2,-5,-9,-1,2],[-8,-6,-2,3,-2,5],[-1,-1,5,3,-4,-7],[-5,9,7,8,6,8],[-6,9,4,-1,-8,-5],[10,9,2,-5,4,2],[7,-7,-7,8,-8,1],[-2,-8,-5,-3,10,1],[10,10,9,-5,6,-9],[7,-6,4,-6,2,-9],[8,1,6,1,-7,-1],[-2,5,8,-1,-1,1]],[[-6,4,-2,4,4,5],[9,-7,-6,-5,5,-8],[-3,-10,-8,10,8,2],[4,8,-5,-8,-9,-1],[3,5,5,1,-4,10],[9,-8,3,-7,-7,-5],[-9,7,9,-5,3,10],[-3,5,1,-9,-7,-7],[8,7,8,8,-6,5],[2,-8,10,-4,-9,10],[6,10,8,-4,-1,2],[5,-9,6,8,6,4],[4,-8,-8,-2,-10,8],[10,-4,6,-4,-7,-4],[9,-10,8,2,5,6]],[[8,8,10,8,1,-5],[-10,-8,4,-10,5,-9],[-6,-4,10,-4,8,8],[1,10,-10,7,-3,-6],[8,-9,6,8,8,-4],[-4,7,-4,9,-3,-5],[3,-2,10,3,-2,3],[-2,-3,-2,9,7,7],[-2,-7,7,-7,-6,9],[5,-6,-6,-8,-9,-9],[7,-7,3,-8,-2,10],[-6,10,-4,-10,2,-7],[-4,-7,3,5,3,6],[8,2,8,-7,-7,-10],[7,1,7,-10,-10,-5]],[[-2,-4,-4,2,6,-10],[-6,-3,-8,-3,5,6],[1,-5,2,5,-2,-10],[1,8,8,4,-9,-6],[-1,3,4,-8,-5,5],[4,-3,2,5,-7,-3],[-5,8,5,10,-2,2],[2,8,-2,5,6,-4],[-1,-2,-4,-5,1,2],[7,1,-4,-3,2,2],[-8,-4,4,1,-9,-8],[-7,1,-6,5,2,3],[1,-10,9,9,-10,-2],[-10,-2,7,1,2,-5],[2,4,-7,2,2,3]],[[6,1,-4,10,5,3],[1,9,4,4,5,2],[2,10,-7,-7,4,9],[-10,-1,5,8,-8,1],[-10,-9,-10,7,-6,8],[-1,-6,-3,-4,-8,-8],[9,-8,5,-10,-2,-10],[-2,6,5,9,1,2],[2,8,10,-2,-4,-7],[-10,5,-6,6,-3,5],[-10,-5,-2,6,-4,-4],[10,5,-4,4,9,-6],[4,4,6,-7,-6,9],[1,1,-10,10,-9,-6],[7,-9,-7,5,8,-1]],[[1,-3,10,2,-5,-7],[-8,-5,-1,-1,8,7],[2,-9,1,7,7,6],[1,-9,3,-1,2,-7],[6,-1,6,4,-10,-2],[-4,-1,-6,6,-9,4],[-10,4,-3,-5,8,7],[-6,6,5,-4,-5,-8],[6,-10,1,-8,1,3],[2,6,7,-6,4,8],[-9,8,1,-7,-2,-3],[-3,3,4,9,-7,-8],[10,-7,5,6,10,-10],[-2,8,-3,6,-4,1],[5,6,7,-6,7,3]],[[-1,-7,-5,-9,-3,-8],[10,4,2,-1,-5,1],[-10,-1,2,-10,5,1],[-6,4,9,-8,5,-2],[7,-4,-2,-6,-1,9],[3,6,9,-7,-10,-2],[2,-6,2,-3,-3,1],[3,-6,-4,-10,6,-4],[-5,-8,1,-2,10,9],[-5,-10,1,-4,9,-9],[-6,-2,6,7,-7,4],[7,-1,3,-10,4,9],[-1,10,-4,3,-9,-2],[10,-4,-6,-7,4,9],[-9,10,-9,1,-3,-2]],[[-9,6,-1,-2,-10,10],[-7,-9,6,-10,9,8],[-10,-9,-9,9,5,7],[4,7,-8,-9,3,-5],[8,-3,5,4,-2,8],[4,-1,-1,-5,10,10],[-8,-2,-9,-1,2,5],[-9,5,-3,-3,10,-8],[-2,7,-4,1,-8,-4],[-10,5,2,3,10,-3],[3,-10,1,6,-8,7],[-2,5,-1,-8,-7,-5],[4,2,-6,-6,2,1],[-3,-9,2,4,-4,7],[-9,8,-9,-7,-3,-8]]], dtype = "int64")#candidate|4440|(11, 15, 6)|const|int64
bop_4441 = relay.subtract(const_4439.astype('int64'), const_4440.astype('int64')) # shape=(11, 15, 6)
output = relay.Tuple([bop_4441,])
output2 = relay.Tuple([bop_4441,])
func_4448 = relay.Function([], output)
mod['func_4448'] = func_4448
mod = relay.transform.InferType()(mod)
mutated_mod['func_4448'] = func_4448
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4448_call = mutated_mod.get_global_var('func_4448')
call_4449 = func_4448_call()
output = call_4449
func_4450 = relay.Function([], output)
mutated_mod['func_4450'] = func_4450
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1346_call = mod.get_global_var('func_1346')
func_1347_call = mutated_mod.get_global_var('func_1347')
call_4508 = relay.TupleGetItem(func_1346_call(), 3)
call_4509 = relay.TupleGetItem(func_1347_call(), 3)
output = relay.Tuple([call_4508,])
output2 = relay.Tuple([call_4509,])
func_4516 = relay.Function([], output)
mod['func_4516'] = func_4516
mod = relay.transform.InferType()(mod)
output = func_4516()
func_4517 = relay.Function([], output)
mutated_mod['func_4517'] = func_4517
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1272_call = mod.get_global_var('func_1272')
func_1273_call = mutated_mod.get_global_var('func_1273')
call_4577 = func_1272_call()
call_4578 = func_1272_call()
output = relay.Tuple([call_4577,])
output2 = relay.Tuple([call_4578,])
func_4581 = relay.Function([], output)
mod['func_4581'] = func_4581
mod = relay.transform.InferType()(mod)
mutated_mod['func_4581'] = func_4581
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4581_call = mutated_mod.get_global_var('func_4581')
call_4582 = func_4581_call()
output = call_4582
func_4583 = relay.Function([], output)
mutated_mod['func_4583'] = func_4583
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4108_call = mod.get_global_var('func_4108')
func_4109_call = mutated_mod.get_global_var('func_4109')
call_4598 = func_4108_call()
call_4599 = func_4108_call()
uop_4615 = relay.log(call_4598.astype('float64')) # shape=(9, 1, 11)
uop_4617 = relay.log(call_4599.astype('float64')) # shape=(9, 1, 11)
uop_4622 = relay.cosh(uop_4615.astype('float32')) # shape=(9, 1, 11)
uop_4624 = relay.cosh(uop_4617.astype('float32')) # shape=(9, 1, 11)
uop_4634 = relay.acos(uop_4622.astype('float32')) # shape=(9, 1, 11)
uop_4636 = relay.acos(uop_4624.astype('float32')) # shape=(9, 1, 11)
output = relay.Tuple([uop_4634,])
output2 = relay.Tuple([uop_4636,])
func_4642 = relay.Function([], output)
mod['func_4642'] = func_4642
mod = relay.transform.InferType()(mod)
output = func_4642()
func_4643 = relay.Function([], output)
mutated_mod['func_4643'] = func_4643
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4642_call = mod.get_global_var('func_4642')
func_4643_call = mutated_mod.get_global_var('func_4643')
call_4659 = relay.TupleGetItem(func_4642_call(), 0)
call_4660 = relay.TupleGetItem(func_4643_call(), 0)
func_4184_call = mod.get_global_var('func_4184')
func_4185_call = mutated_mod.get_global_var('func_4185')
call_4672 = relay.TupleGetItem(func_4184_call(), 0)
call_4673 = relay.TupleGetItem(func_4185_call(), 0)
func_2501_call = mod.get_global_var('func_2501')
func_2502_call = mutated_mod.get_global_var('func_2502')
call_4677 = relay.TupleGetItem(func_2501_call(), 0)
call_4678 = relay.TupleGetItem(func_2502_call(), 0)
output = relay.Tuple([call_4659,call_4672,call_4677,])
output2 = relay.Tuple([call_4660,call_4673,call_4678,])
func_4692 = relay.Function([], output)
mod['func_4692'] = func_4692
mod = relay.transform.InferType()(mod)
mutated_mod['func_4692'] = func_4692
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4692_call = mutated_mod.get_global_var('func_4692')
call_4693 = func_4692_call()
output = call_4693
func_4694 = relay.Function([], output)
mutated_mod['func_4694'] = func_4694
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4581_call = mod.get_global_var('func_4581')
func_4583_call = mutated_mod.get_global_var('func_4583')
call_4721 = relay.TupleGetItem(func_4581_call(), 0)
call_4722 = relay.TupleGetItem(func_4583_call(), 0)
func_2639_call = mod.get_global_var('func_2639')
func_2642_call = mutated_mod.get_global_var('func_2642')
const_4724 = relay.const([4,-7,-9,7,-2,2,1,-5,1,-8,-5,-10,-3,7,10,8,-9,-9,3,-10,-4,3,2,-4,9,9,-4,-8,-5,5,-4,7,9,-10,5,5,2,5,-8,-8,-10,-5,-5,-3,8,6,-10,5,-9,2,-7,-5,7,-5,-8,-3,10,-5,1,-7,-6,10,4,-7,-2,-8,6,-6,-3,9,3,-2,-10,-10,-4,9,-8,8,-6,-8,4,5,-1,-4,-1,-8,6,9,-6,8,-8,2,8,9,-6,2,4,9,-10,10,9,8,-7,-3,8,4,8,1,7,2,8,3,-3,9,-9,-5,-8,-4,-1,-1,8,-4,-3,-6,6,6,-4,-8,-3,-8,-8,1,-7,-3,1,7,9,-10,8,-5,-4,10,1,-4,-7,-7,5,-2,-2,-1,1,6,1,4,-2,4,3,-5,-2,-9,1,-5,-3,-1,2,-9,1,-4,-1,-2,1,-10,-7,-9,4,-7,5,1,9,-2,-5,-5,-4,1,-9,-8,-6,-5,5,-2,-3,2,-1,5,-7,2,-7,10,-7,-9,-3,-9,7,-2,9,1,-4,-9,8,-6,8,-10,-4,6,-1,-8,-2,-3,-10,-1,-10,-2,-5,-1,2,1,5,4,-10,-1,-7,-7,-5,-10,-5,5,-5,-10,-5,-5,-6,8,6,1,6,8,10,-4,6,-9,7,6,10,-2,7,-3,-4,6,-4,-7,-10,4,2,4,-2,-1,-6,8,-3,2,-8,4,-7,3,7,4,6,-7,3,-10,-4,-3,8,-8,-2,10,7,-1,4,8,3,-1,9,1,9,9,10,4,1,-8,4,2,-4,8,6,-1,7,2,-2,-9,4,-4,8,-4,-2,4,4,7,-9,-8,-2,-8,3,-6,4,-7,1,-5,-1,-2,3,9,1,5,-3,-9,-2,-4,6,3,5,-8,-1,-9,-2,-7,4,10,2,-7,8,7,-2,8,-3,10,1,4,1,-8,4,-7,9,-6,-3,-5,-1,-5,-7,5,-6,-8,2,-2,-5,5,-4,-10,10,-6,-10,-7,5,-6,-7,-10,5,-9,-10,-10,-9,-6,7,-8,3,1,-4,6,10,-2,4,-7,10,6,9,8,-2,3,-2,8,6,1,-8,9,-1,-5,3,-2,2,-6,5,-8,-8,-8,-5,-6,-6,1,3,3,1,7,-2,10,8,-4,9,1,5,8,4,1,2,-3,1,9,4,7,-8,9,-2,10,-6,-9,-10,3,2,3,3,8,-4,8,-4,5,4,7,-8,9,8,7,6,2,-1,1,5,-1,-8,-8,-4,6,10,7,-2,1,6,-8,7,10,8,-5,-5,-1,-5,-7,3,-8,7,-10,2,9,-1,-10,-10,8,4,-9,2,-1,-1,8,4,-7,-3,-9,10,3,-6,10,3,-2,-3,-7,-10,-2,9,-7,7,-3,10,-5,10,2,1,2,1,-3,4,3,-8,-9,6,9,7,-2,-6,9,-5,1,-4,9,8,4,-10,10,-2,7,2,-1,-10,7,-10,-1,9,10,-7,-9,-1,-9,-9,-10,-7,-9,5,-9,3,-8,-4,7,-10,-7,5,4,-8,-8,-3,8,-5,10], dtype = "uint8")#candidate|4724|(588,)|const|uint8
call_4723 = relay.TupleGetItem(func_2639_call(relay.reshape(const_4724.astype('uint8'), [588,])), 2)
call_4725 = relay.TupleGetItem(func_2642_call(relay.reshape(const_4724.astype('uint8'), [588,])), 2)
uop_4737 = relay.cosh(call_4723.astype('float32')) # shape=(588,)
uop_4739 = relay.cosh(call_4725.astype('float32')) # shape=(588,)
uop_4757 = relay.sqrt(uop_4737.astype('float64')) # shape=(588,)
uop_4759 = relay.sqrt(uop_4739.astype('float64')) # shape=(588,)
func_3974_call = mod.get_global_var('func_3974')
func_3976_call = mutated_mod.get_global_var('func_3976')
var_4764 = relay.var("var_4764", dtype = "float32", shape = (1386,))#candidate|4764|(1386,)|var|float32
call_4763 = relay.TupleGetItem(func_3974_call(relay.reshape(var_4764.astype('float32'), [1386,])), 2)
call_4765 = relay.TupleGetItem(func_3976_call(relay.reshape(var_4764.astype('float32'), [1386,])), 2)
output = relay.Tuple([call_4721,const_4724,uop_4757,call_4763,var_4764,])
output2 = relay.Tuple([call_4722,const_4724,uop_4759,call_4765,var_4764,])
func_4768 = relay.Function([var_4764,], output)
mod['func_4768'] = func_4768
mod = relay.transform.InferType()(mod)
mutated_mod['func_4768'] = func_4768
mutated_mod = relay.transform.InferType()(mutated_mod)
var_4769 = relay.var("var_4769", dtype = "float32", shape = (1386,))#candidate|4769|(1386,)|var|float32
func_4768_call = mutated_mod.get_global_var('func_4768')
call_4770 = func_4768_call(var_4769)
output = call_4770
func_4771 = relay.Function([var_4769], output)
mutated_mod['func_4771'] = func_4771
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4419_call = mod.get_global_var('func_4419')
func_4421_call = mutated_mod.get_global_var('func_4421')
call_4797 = relay.TupleGetItem(func_4419_call(), 0)
call_4798 = relay.TupleGetItem(func_4421_call(), 0)
output = relay.Tuple([call_4797,])
output2 = relay.Tuple([call_4798,])
func_4814 = relay.Function([], output)
mod['func_4814'] = func_4814
mod = relay.transform.InferType()(mod)
mutated_mod['func_4814'] = func_4814
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4814_call = mutated_mod.get_global_var('func_4814')
call_4815 = func_4814_call()
output = call_4815
func_4816 = relay.Function([], output)
mutated_mod['func_4816'] = func_4816
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2890_call = mod.get_global_var('func_2890')
func_2892_call = mutated_mod.get_global_var('func_2892')
call_4935 = func_2890_call()
call_4936 = func_2890_call()
output = call_4935
output2 = call_4936
func_4954 = relay.Function([], output)
mod['func_4954'] = func_4954
mod = relay.transform.InferType()(mod)
output = func_4954()
func_4955 = relay.Function([], output)
mutated_mod['func_4955'] = func_4955
mutated_mod = relay.transform.InferType()(mutated_mod)
func_749_call = mod.get_global_var('func_749')
func_751_call = mutated_mod.get_global_var('func_751')
call_4965 = func_749_call()
call_4966 = func_749_call()
func_4074_call = mod.get_global_var('func_4074')
func_4075_call = mutated_mod.get_global_var('func_4075')
call_4971 = relay.TupleGetItem(func_4074_call(), 4)
call_4972 = relay.TupleGetItem(func_4075_call(), 4)
var_4979 = relay.var("var_4979", dtype = "float64", shape = (585, 3))#candidate|4979|(585, 3)|var|float64
bop_4980 = relay.logical_or(call_4971.astype('bool'), relay.reshape(var_4979.astype('bool'), relay.shape_of(call_4971))) # shape=(585, 3)
bop_4983 = relay.logical_or(call_4972.astype('bool'), relay.reshape(var_4979.astype('bool'), relay.shape_of(call_4972))) # shape=(585, 3)
output = relay.Tuple([call_4965,bop_4980,])
output2 = relay.Tuple([call_4966,bop_4983,])
func_4984 = relay.Function([var_4979,], output)
mod['func_4984'] = func_4984
mod = relay.transform.InferType()(mod)
mutated_mod['func_4984'] = func_4984
mutated_mod = relay.transform.InferType()(mutated_mod)
var_4985 = relay.var("var_4985", dtype = "float64", shape = (585, 3))#candidate|4985|(585, 3)|var|float64
func_4984_call = mutated_mod.get_global_var('func_4984')
call_4986 = func_4984_call(var_4985)
output = call_4986
func_4987 = relay.Function([var_4985], output)
mutated_mod['func_4987'] = func_4987
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4074_call = mod.get_global_var('func_4074')
func_4075_call = mutated_mod.get_global_var('func_4075')
call_5019 = relay.TupleGetItem(func_4074_call(), 5)
call_5020 = relay.TupleGetItem(func_4075_call(), 5)
func_3722_call = mod.get_global_var('func_3722')
func_3727_call = mutated_mod.get_global_var('func_3727')
var_5037 = relay.var("var_5037", dtype = "float64", shape = (936,))#candidate|5037|(936,)|var|float64
var_5038 = relay.var("var_5038", dtype = "float32", shape = (715,))#candidate|5038|(715,)|var|float32
call_5036 = relay.TupleGetItem(func_3722_call(relay.reshape(var_5037.astype('float64'), [13, 8, 9]), relay.reshape(var_5037.astype('float64'), [13, 8, 9]), relay.reshape(var_5037.astype('float64'), [13, 8, 9]), relay.reshape(var_5038.astype('float32'), [715,]), ), 3)
call_5039 = relay.TupleGetItem(func_3727_call(relay.reshape(var_5037.astype('float64'), [13, 8, 9]), relay.reshape(var_5037.astype('float64'), [13, 8, 9]), relay.reshape(var_5037.astype('float64'), [13, 8, 9]), relay.reshape(var_5038.astype('float32'), [715,]), ), 3)
func_3163_call = mod.get_global_var('func_3163')
func_3166_call = mutated_mod.get_global_var('func_3166')
var_5042 = relay.var("var_5042", dtype = "float32", shape = (14, 99))#candidate|5042|(14, 99)|var|float32
call_5041 = relay.TupleGetItem(func_3163_call(relay.reshape(var_5042.astype('float32'), [1, 1386])), 3)
call_5043 = relay.TupleGetItem(func_3166_call(relay.reshape(var_5042.astype('float32'), [1, 1386])), 3)
func_2890_call = mod.get_global_var('func_2890')
func_2892_call = mutated_mod.get_global_var('func_2892')
call_5050 = func_2890_call()
call_5051 = func_2890_call()
uop_5093 = relay.log(var_5038.astype('float32')) # shape=(715,)
output = relay.Tuple([call_5019,call_5036,var_5037,call_5041,var_5042,call_5050,uop_5093,])
output2 = relay.Tuple([call_5020,call_5039,var_5037,call_5043,var_5042,call_5051,uop_5093,])
func_5096 = relay.Function([var_5037,var_5038,var_5042,], output)
mod['func_5096'] = func_5096
mod = relay.transform.InferType()(mod)
mutated_mod['func_5096'] = func_5096
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5096_call = mutated_mod.get_global_var('func_5096')
var_5098 = relay.var("var_5098", dtype = "float64", shape = (936,))#candidate|5098|(936,)|var|float64
var_5099 = relay.var("var_5099", dtype = "float32", shape = (715,))#candidate|5099|(715,)|var|float32
var_5100 = relay.var("var_5100", dtype = "float32", shape = (14, 99))#candidate|5100|(14, 99)|var|float32
call_5097 = func_5096_call(var_5098,var_5099,var_5100,)
output = call_5097
func_5101 = relay.Function([var_5098,var_5099,var_5100,], output)
mutated_mod['func_5101'] = func_5101
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4108_call = mod.get_global_var('func_4108')
func_4109_call = mutated_mod.get_global_var('func_4109')
call_5138 = func_4108_call()
call_5139 = func_4108_call()
func_2085_call = mod.get_global_var('func_2085')
func_2086_call = mutated_mod.get_global_var('func_2086')
call_5158 = func_2085_call()
call_5159 = func_2085_call()
func_3423_call = mod.get_global_var('func_3423')
func_3424_call = mutated_mod.get_global_var('func_3424')
call_5160 = func_3423_call()
call_5161 = func_3423_call()
func_252_call = mod.get_global_var('func_252')
func_254_call = mutated_mod.get_global_var('func_254')
call_5166 = func_252_call(relay.reshape(call_5138.astype('float32'), [9, 1, 11]))
call_5167 = func_252_call(relay.reshape(call_5138.astype('float32'), [9, 1, 11]))
output = relay.Tuple([call_5138,call_5158,call_5160,call_5166,])
output2 = relay.Tuple([call_5139,call_5159,call_5161,call_5167,])
func_5168 = relay.Function([], output)
mod['func_5168'] = func_5168
mod = relay.transform.InferType()(mod)
output = func_5168()
func_5169 = relay.Function([], output)
mutated_mod['func_5169'] = func_5169
mutated_mod = relay.transform.InferType()(mutated_mod)
const_5175 = relay.const(-5.470493, dtype = "float64")#candidate|5175|()|const|float64
var_5176 = relay.var("var_5176", dtype = "float64", shape = (10, 9, 4))#candidate|5176|(10, 9, 4)|var|float64
bop_5177 = relay.mod(const_5175.astype('float64'), var_5176.astype('float64')) # shape=(10, 9, 4)
bop_5200 = relay.multiply(bop_5177.astype('int8'), relay.reshape(var_5176.astype('int8'), relay.shape_of(bop_5177))) # shape=(10, 9, 4)
var_5203 = relay.var("var_5203", dtype = "float64", shape = (10, 9, 4))#candidate|5203|(10, 9, 4)|var|float64
bop_5204 = relay.floor_mod(bop_5177.astype('float32'), relay.reshape(var_5203.astype('float32'), relay.shape_of(bop_5177))) # shape=(10, 9, 4)
func_4814_call = mod.get_global_var('func_4814')
func_4816_call = mutated_mod.get_global_var('func_4816')
call_5217 = relay.TupleGetItem(func_4814_call(), 0)
call_5218 = relay.TupleGetItem(func_4816_call(), 0)
output = relay.Tuple([bop_5200,bop_5204,call_5217,])
output2 = relay.Tuple([bop_5200,bop_5204,call_5218,])
func_5220 = relay.Function([var_5176,var_5203,], output)
mod['func_5220'] = func_5220
mod = relay.transform.InferType()(mod)
var_5221 = relay.var("var_5221", dtype = "float64", shape = (10, 9, 4))#candidate|5221|(10, 9, 4)|var|float64
var_5222 = relay.var("var_5222", dtype = "float64", shape = (10, 9, 4))#candidate|5222|(10, 9, 4)|var|float64
output = func_5220(var_5221,var_5222,)
func_5223 = relay.Function([var_5221,var_5222,], output)
mutated_mod['func_5223'] = func_5223
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1936_call = mod.get_global_var('func_1936')
func_1938_call = mutated_mod.get_global_var('func_1938')
call_5280 = relay.TupleGetItem(func_1936_call(), 0)
call_5281 = relay.TupleGetItem(func_1938_call(), 0)
output = call_5280
output2 = call_5281
func_5303 = relay.Function([], output)
mod['func_5303'] = func_5303
mod = relay.transform.InferType()(mod)
mutated_mod['func_5303'] = func_5303
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5303_call = mutated_mod.get_global_var('func_5303')
call_5304 = func_5303_call()
output = call_5304
func_5305 = relay.Function([], output)
mutated_mod['func_5305'] = func_5305
mutated_mod = relay.transform.InferType()(mutated_mod)
var_5306 = relay.var("var_5306", dtype = "uint8", shape = (10, 8, 8))#candidate|5306|(10, 8, 8)|var|uint8
const_5307 = relay.const([[[8,-1,-3,-8,7,-4,-7,-3],[9,-8,4,6,-6,9,5,-8],[-8,-10,9,5,-8,-6,-5,9],[2,-9,-5,-2,-7,-5,-3,-7],[-9,-1,7,-6,-5,1,3,6],[-9,2,9,-7,5,9,2,-6],[-3,3,2,-4,-2,-9,-4,10],[7,9,6,-2,-7,-8,7,4]],[[-10,9,-4,1,7,-1,-4,-4],[3,-6,-1,-9,-1,9,-2,5],[8,5,6,-10,-3,-4,3,7],[3,-6,-6,-3,3,-3,3,-6],[2,4,5,-3,-6,7,-6,7],[2,4,-8,2,-8,-6,-5,-3],[4,-6,-1,1,-5,9,5,-1],[-9,4,3,-3,-3,2,-3,-6]],[[2,8,-1,5,7,9,1,-10],[8,-2,-2,-2,3,-4,10,-3],[-1,10,-10,-2,-10,-1,-3,-3],[-7,-4,1,-7,-1,-3,10,-7],[-9,-3,-3,-7,5,8,-3,1],[-8,-2,-10,-5,7,-3,-4,-7],[9,-3,4,7,-2,-9,6,6],[4,4,4,-6,7,-7,2,-5]],[[6,5,-10,1,-9,-6,2,-2],[-7,-10,-6,-3,8,4,-5,-2],[7,-1,2,-8,4,-8,5,1],[-6,4,-9,-3,-6,-6,-3,4],[-6,6,6,-8,7,7,6,3],[-10,2,-3,-6,-1,2,1,-6],[8,4,4,-6,-10,3,2,-7],[-3,2,5,5,-10,-2,10,9]],[[-9,-3,7,-6,-6,-4,-4,-9],[-2,-3,8,-5,-2,3,-6,-1],[7,10,5,2,4,10,-7,-5],[9,-5,3,-7,-6,6,-5,7],[-10,8,2,9,-8,-3,7,3],[3,2,8,2,2,-6,-4,-8],[1,-4,-8,10,-1,2,-9,5],[-2,10,8,4,10,8,-6,-10]],[[4,1,-8,-9,-1,8,-5,4],[10,7,-5,-10,2,1,-4,-6],[-5,-10,7,-2,10,10,3,-3],[9,-10,1,-1,8,3,-1,10],[-8,-10,10,3,2,-5,9,-7],[-6,-3,9,-1,6,-10,-5,-6],[9,-7,-8,10,4,-6,-1,-9],[1,5,-8,8,-2,-2,7,9]],[[-3,-8,7,-2,1,-1,-2,9],[-6,3,1,-9,-10,-10,-10,4],[7,4,-7,-4,6,-3,8,2],[-8,-10,-8,2,4,6,10,7],[1,-1,10,9,3,-4,3,6],[3,-10,9,-1,-3,6,7,3],[7,-8,-1,2,-10,4,-6,-7],[-8,-2,-9,7,1,7,7,8]],[[6,-10,5,-1,-2,-8,-7,7],[-2,-2,1,-4,3,10,3,-3],[-6,-8,-6,-5,5,-7,10,8],[1,4,-9,4,-10,-3,4,2],[10,-10,8,-5,1,-7,-5,5],[-5,8,9,-8,-10,-2,7,-4],[-3,-3,2,-5,-1,-7,7,2],[3,10,4,1,-6,-8,-6,-2]],[[-9,-9,5,7,6,2,-8,-7],[-4,2,-4,-2,5,-5,-4,-7],[10,-5,10,10,-6,9,-9,-4],[5,1,-1,8,-4,-7,10,3],[-2,6,10,7,-10,-9,-5,2],[-1,7,-9,-7,10,3,-8,1],[-5,-9,4,-1,4,-3,-5,9],[9,7,5,-3,6,6,-2,-1]],[[3,-2,-9,1,-6,-2,-3,-6],[-1,2,-7,-10,9,-6,-2,-10],[10,-1,-8,10,-1,5,-7,6],[-6,-3,-3,5,-8,5,-9,-4],[6,5,2,-5,10,-6,-3,-5],[3,3,1,-8,-10,-9,-5,-7],[2,4,-9,-6,-3,8,-7,6],[-2,-5,-8,2,-5,6,-3,2]]], dtype = "uint8")#candidate|5307|(10, 8, 8)|const|uint8
bop_5308 = relay.less_equal(var_5306.astype('bool'), relay.reshape(const_5307.astype('bool'), relay.shape_of(var_5306))) # shape=(10, 8, 8)
output = relay.Tuple([bop_5308,])
output2 = relay.Tuple([bop_5308,])
func_5313 = relay.Function([var_5306,], output)
mod['func_5313'] = func_5313
mod = relay.transform.InferType()(mod)
mutated_mod['func_5313'] = func_5313
mutated_mod = relay.transform.InferType()(mutated_mod)
var_5314 = relay.var("var_5314", dtype = "uint8", shape = (10, 8, 8))#candidate|5314|(10, 8, 8)|var|uint8
func_5313_call = mutated_mod.get_global_var('func_5313')
call_5315 = func_5313_call(var_5314)
output = call_5315
func_5316 = relay.Function([var_5314], output)
mutated_mod['func_5316'] = func_5316
mutated_mod = relay.transform.InferType()(mutated_mod)
var_5348 = relay.var("var_5348", dtype = "float32", shape = (9, 6, 9))#candidate|5348|(9, 6, 9)|var|float32
uop_5349 = relay.sinh(var_5348.astype('float32')) # shape=(9, 6, 9)
bop_5357 = relay.less(uop_5349.astype('bool'), relay.reshape(var_5348.astype('bool'), relay.shape_of(uop_5349))) # shape=(9, 6, 9)
func_1891_call = mod.get_global_var('func_1891')
func_1895_call = mutated_mod.get_global_var('func_1895')
var_5367 = relay.var("var_5367", dtype = "uint8", shape = ())#candidate|5367|()|var|uint8
var_5368 = relay.var("var_5368", dtype = "float64", shape = (1584,))#candidate|5368|(1584,)|var|float64
call_5366 = relay.TupleGetItem(func_1891_call(relay.reshape(var_5367.astype('uint8'), []), relay.reshape(var_5368.astype('float64'), [1584,]), ), 0)
call_5369 = relay.TupleGetItem(func_1895_call(relay.reshape(var_5367.astype('uint8'), []), relay.reshape(var_5368.astype('float64'), [1584,]), ), 0)
uop_5380 = relay.cosh(var_5348.astype('float32')) # shape=(9, 6, 9)
output = relay.Tuple([bop_5357,call_5366,var_5367,var_5368,uop_5380,])
output2 = relay.Tuple([bop_5357,call_5369,var_5367,var_5368,uop_5380,])
func_5382 = relay.Function([var_5348,var_5367,var_5368,], output)
mod['func_5382'] = func_5382
mod = relay.transform.InferType()(mod)
var_5383 = relay.var("var_5383", dtype = "float32", shape = (9, 6, 9))#candidate|5383|(9, 6, 9)|var|float32
var_5384 = relay.var("var_5384", dtype = "uint8", shape = ())#candidate|5384|()|var|uint8
var_5385 = relay.var("var_5385", dtype = "float64", shape = (1584,))#candidate|5385|(1584,)|var|float64
output = func_5382(var_5383,var_5384,var_5385,)
func_5386 = relay.Function([var_5383,var_5384,var_5385,], output)
mutated_mod['func_5386'] = func_5386
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3630_call = mod.get_global_var('func_3630')
func_3631_call = mutated_mod.get_global_var('func_3631')
call_5396 = relay.TupleGetItem(func_3630_call(), 0)
call_5397 = relay.TupleGetItem(func_3631_call(), 0)
func_4074_call = mod.get_global_var('func_4074')
func_4075_call = mutated_mod.get_global_var('func_4075')
call_5408 = relay.TupleGetItem(func_4074_call(), 0)
call_5409 = relay.TupleGetItem(func_4075_call(), 0)
func_1711_call = mod.get_global_var('func_1711')
func_1713_call = mutated_mod.get_global_var('func_1713')
call_5412 = relay.TupleGetItem(func_1711_call(), 2)
call_5413 = relay.TupleGetItem(func_1713_call(), 2)
var_5419 = relay.var("var_5419", dtype = "float64", shape = (5, 198))#candidate|5419|(5, 198)|var|float64
bop_5420 = relay.logical_or(call_5412.astype('bool'), relay.reshape(var_5419.astype('bool'), relay.shape_of(call_5412))) # shape=(5, 198)
bop_5423 = relay.logical_or(call_5413.astype('bool'), relay.reshape(var_5419.astype('bool'), relay.shape_of(call_5413))) # shape=(5, 198)
func_4642_call = mod.get_global_var('func_4642')
func_4643_call = mutated_mod.get_global_var('func_4643')
call_5438 = relay.TupleGetItem(func_4642_call(), 0)
call_5439 = relay.TupleGetItem(func_4643_call(), 0)
func_5382_call = mod.get_global_var('func_5382')
func_5386_call = mutated_mod.get_global_var('func_5386')
var_5441 = relay.var("var_5441", dtype = "float32", shape = (243, 2))#candidate|5441|(243, 2)|var|float32
const_5442 = relay.const(1, dtype = "uint8")#candidate|5442|()|const|uint8
var_5443 = relay.var("var_5443", dtype = "float64", shape = (1584,))#candidate|5443|(1584,)|var|float64
call_5440 = relay.TupleGetItem(func_5382_call(relay.reshape(var_5441.astype('float32'), [9, 6, 9]), relay.reshape(const_5442.astype('uint8'), []), relay.reshape(var_5443.astype('float64'), [1584,]), ), 0)
call_5444 = relay.TupleGetItem(func_5386_call(relay.reshape(var_5441.astype('float32'), [9, 6, 9]), relay.reshape(const_5442.astype('uint8'), []), relay.reshape(var_5443.astype('float64'), [1584,]), ), 0)
output = relay.Tuple([call_5396,call_5408,bop_5420,call_5438,call_5440,var_5441,const_5442,var_5443,])
output2 = relay.Tuple([call_5397,call_5409,bop_5423,call_5439,call_5444,var_5441,const_5442,var_5443,])
func_5451 = relay.Function([var_5419,var_5441,var_5443,], output)
mod['func_5451'] = func_5451
mod = relay.transform.InferType()(mod)
var_5452 = relay.var("var_5452", dtype = "float64", shape = (5, 198))#candidate|5452|(5, 198)|var|float64
var_5453 = relay.var("var_5453", dtype = "float32", shape = (243, 2))#candidate|5453|(243, 2)|var|float32
var_5454 = relay.var("var_5454", dtype = "float64", shape = (1584,))#candidate|5454|(1584,)|var|float64
output = func_5451(var_5452,var_5453,var_5454,)
func_5455 = relay.Function([var_5452,var_5453,var_5454,], output)
mutated_mod['func_5455'] = func_5455
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4308_call = mod.get_global_var('func_4308')
func_4309_call = mutated_mod.get_global_var('func_4309')
call_5459 = relay.TupleGetItem(func_4308_call(), 0)
call_5460 = relay.TupleGetItem(func_4309_call(), 0)
func_4160_call = mod.get_global_var('func_4160')
func_4162_call = mutated_mod.get_global_var('func_4162')
var_5468 = relay.var("var_5468", dtype = "float32", shape = (990,))#candidate|5468|(990,)|var|float32
call_5467 = relay.TupleGetItem(func_4160_call(relay.reshape(var_5468.astype('float32'), [990,])), 2)
call_5469 = relay.TupleGetItem(func_4162_call(relay.reshape(var_5468.astype('float32'), [990,])), 2)
bop_5485 = relay.greater(call_5467.astype('bool'), relay.reshape(var_5468.astype('bool'), relay.shape_of(call_5467))) # shape=(990,)
bop_5488 = relay.greater(call_5469.astype('bool'), relay.reshape(var_5468.astype('bool'), relay.shape_of(call_5469))) # shape=(990,)
func_2008_call = mod.get_global_var('func_2008')
func_2011_call = mutated_mod.get_global_var('func_2011')
call_5496 = relay.TupleGetItem(func_2008_call(relay.reshape(call_5467.astype('float32'), [990,])), 3)
call_5497 = relay.TupleGetItem(func_2011_call(relay.reshape(call_5467.astype('float32'), [990,])), 3)
func_3585_call = mod.get_global_var('func_3585')
func_3587_call = mutated_mod.get_global_var('func_3587')
var_5499 = relay.var("var_5499", dtype = "uint8", shape = (14, 42))#candidate|5499|(14, 42)|var|uint8
call_5498 = relay.TupleGetItem(func_3585_call(relay.reshape(var_5499.astype('uint8'), [588,])), 2)
call_5500 = relay.TupleGetItem(func_3587_call(relay.reshape(var_5499.astype('uint8'), [588,])), 2)
output = relay.Tuple([call_5459,bop_5485,call_5496,call_5498,var_5499,])
output2 = relay.Tuple([call_5460,bop_5488,call_5497,call_5500,var_5499,])
func_5507 = relay.Function([var_5468,var_5499,], output)
mod['func_5507'] = func_5507
mod = relay.transform.InferType()(mod)
var_5508 = relay.var("var_5508", dtype = "float32", shape = (990,))#candidate|5508|(990,)|var|float32
var_5509 = relay.var("var_5509", dtype = "uint8", shape = (14, 42))#candidate|5509|(14, 42)|var|uint8
output = func_5507(var_5508,var_5509,)
func_5510 = relay.Function([var_5508,var_5509,], output)
mutated_mod['func_5510'] = func_5510
mutated_mod = relay.transform.InferType()(mutated_mod)
const_5518 = relay.const([[[3.832548,-5.651969,-6.283658,-3.566023,1.883595,-4.573242,-4.444481]],[[-4.738777,-8.218386,-4.344582,2.610057,-4.923019,2.613701,-6.508368]],[[-9.536921,-3.833366,3.531884,-1.518750,6.397645,3.025193,1.037440]],[[3.831088,8.248839,-5.984406,-4.303484,6.847936,4.193551,1.992828]],[[-1.283874,9.964693,-5.527663,-3.592955,-5.388514,6.135546,-4.326733]],[[-2.922277,-1.936673,0.119442,6.076336,0.929780,-5.115942,4.239100]],[[-9.360863,-3.146288,-7.490735,-3.794778,8.978809,-3.137045,6.055173]],[[3.294132,-3.866763,2.989355,-7.828459,8.899620,-0.790149,9.358757]],[[3.414068,-7.901541,-7.756043,-1.507145,-1.570025,5.491483,-7.757908]],[[7.342128,6.554085,4.643217,-4.895505,-4.485597,6.860167,-7.656303]],[[-4.326852,3.555280,-0.278823,-6.987519,-2.846437,9.617618,8.485323]],[[6.945214,6.608261,1.650816,4.135436,-4.512592,3.436124,-3.706697]]], dtype = "float64")#candidate|5518|(12, 1, 7)|const|float64
uop_5519 = relay.sigmoid(const_5518.astype('float64')) # shape=(12, 1, 7)
func_3902_call = mod.get_global_var('func_3902')
func_3903_call = mutated_mod.get_global_var('func_3903')
call_5522 = relay.TupleGetItem(func_3902_call(), 0)
call_5523 = relay.TupleGetItem(func_3903_call(), 0)
uop_5524 = relay.sqrt(uop_5519.astype('float64')) # shape=(12, 1, 7)
func_2890_call = mod.get_global_var('func_2890')
func_2892_call = mutated_mod.get_global_var('func_2892')
call_5529 = func_2890_call()
call_5530 = func_2890_call()
output = relay.Tuple([call_5522,uop_5524,call_5529,])
output2 = relay.Tuple([call_5523,uop_5524,call_5530,])
func_5538 = relay.Function([], output)
mod['func_5538'] = func_5538
mod = relay.transform.InferType()(mod)
output = func_5538()
func_5539 = relay.Function([], output)
mutated_mod['func_5539'] = func_5539
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4074_call = mod.get_global_var('func_4074')
func_4075_call = mutated_mod.get_global_var('func_4075')
call_5551 = relay.TupleGetItem(func_4074_call(), 4)
call_5552 = relay.TupleGetItem(func_4075_call(), 4)
func_2008_call = mod.get_global_var('func_2008')
func_2011_call = mutated_mod.get_global_var('func_2011')
const_5554 = relay.const([7.261799,9.304906,-3.446973,-7.569211,-2.090887,-5.182991,-8.418853,-5.560009,7.733624,-5.380063,3.504011,7.319333,8.426567,-8.574686,-2.601411,-9.326300,9.609355,8.108707,-5.994903,-7.851557,4.822433,-8.764641,4.176913,-4.686985,8.332818,7.276298,-4.856473,-2.211056,6.299359,0.357173,6.970860,2.095876,9.797090,-4.177194,4.015959,-1.175302,1.762103,-0.358758,-5.128439,1.418649,-4.563617,-1.372214,0.477132,-2.067490,1.949813,-9.313492,2.720798,-6.449400,-9.854667,-4.578305,4.725090,5.177309,5.332315,2.770129,-6.481466,0.741435,-5.321149,-8.442602,0.371464,-1.453546,-0.491020,7.186944,-8.828238,-8.588457,-2.675367,-2.756729,3.176596,-8.223887,-3.584807,-9.233350,-5.531299,2.825065,5.317709,-8.390633,-5.321920,-8.624127,-0.536625,-7.277025,7.638980,3.288399,-2.111202,7.655691,0.079540,-7.573130,3.918853,9.577172,0.944789,-6.715979,-8.531934,7.248262,8.775504,0.401441,9.983978,1.626747,-6.228270,-6.866483,-4.069812,-0.739965,8.155500,1.184943,-9.866587,-2.566421,3.733557,-5.642243,5.600225,-3.477026,4.355619,-3.861103,-2.623626,0.734402,1.402666,7.397888,8.957308,6.920930,-4.189338,-0.746620,2.765928,-5.252393,4.248007,-0.607956,-2.596077,-2.119351,-2.799774,-6.439314,-4.865729,1.392912,1.186879,2.402607,2.153204,8.374542,-2.548479,-2.622144,-5.252148,-7.370949,2.873331,0.968127,-4.566975,-3.086808,-3.998292,7.874923,-5.042126,-5.196636,9.374964,8.748412,7.197632,-9.720658,-4.177891,2.106371,-5.697405,-0.986721,8.441859,0.563219,9.836127,-9.837345,0.980327,-6.030535,9.508464,0.281707,8.820814,4.961571,-9.814652,-9.907470,-4.984900,0.469553,1.378080,-2.308346,9.231136,-4.485284,3.657853,8.931494,-3.662369,6.603274,-8.262195,-1.371015,4.644560,-4.443094,-2.807228,-6.532187,8.031500,9.258273,0.493881,6.798242,6.123955,-2.607668,-5.580862,2.129741,8.946749,-4.341144,-8.487819,5.406867,-2.717573,7.163038,-2.739737,1.257975,0.932384,1.096316,2.015820,-6.332436,-1.216224,1.689303,-4.435262,-7.210953,9.943459,6.858804,9.561839,5.562773,3.535659,-9.270027,-5.927921,7.024907,-5.042105,0.122443,4.773368,5.006652,-7.623031,-0.626859,8.159616,-8.877430,-5.260116,-4.257196,1.684908,4.141743,-3.899687,-6.311184,-9.541298,7.331630,-2.039401,-7.065815,-4.354605,-7.612925,-9.085060,8.423982,5.811523,8.832818,2.639724,3.209702,5.905885,4.454922,5.899087,9.189265,6.089529,-3.869002,0.611120,6.147203,-9.307131,-3.729603,3.065369,8.959359,3.509913,-3.924624,-1.199257,9.229520,-8.325238,-7.694373,8.932145,9.264308,-9.392208,-5.096958,-9.851870,8.690891,4.914934,-1.767571,6.709748,2.756374,-4.496329,3.578707,-4.986560,-1.731126,-6.892532,-3.929824,-2.133581,-9.999061,6.472293,-6.397099,4.585572,8.076685,5.974325,3.838625,7.127968,-0.677611,-8.593056,-3.514391,-5.029694,7.738271,4.239789,-8.217317,-0.618238,-6.334747,-7.669513,3.737687,-7.958845,-5.996781,-4.659474,-5.045390,8.657898,6.700034,7.798106,-9.043093,5.866333,-6.376652,0.640158,-9.363571,0.295178,0.234895,-0.737262,6.933278,2.912685,-0.103153,9.835698,6.570056,2.745346,-7.728019,1.204650,1.816947,6.285122,0.237978,-9.269071,-9.453994,7.431730,0.435873,-3.481150,-6.662894,9.822471,-9.117357,-8.447994,1.476995,-9.210249,-0.483072,-9.923748,-9.700194,1.290875,-1.442217,-3.832491,2.944170,-9.110753,4.905787,-3.081049,9.366940,-1.425474,-2.313594,2.771914,7.339442,-6.229426,9.340092,2.348345,-6.647503,-4.954856,-1.621192,6.086250,-2.184287,5.516129,-7.380644,7.707529,2.339233,5.609194,-9.895497,4.617922,4.086447,7.238802,-2.172868,-1.585646,2.241914,7.485904,6.576199,-9.481206,-4.244402,8.224604,7.870854,-0.712603,4.058419,-9.562820,8.554401,9.626450,4.065742,4.777222,6.741320,-5.163067,-2.381880,-5.230993,-6.879723,6.884626,-8.157019,-9.319833,-5.547712,-4.890185,-1.768423,5.191782,-6.971530,-4.854340,-7.884533,2.780892,-6.571630,-4.349023,3.559271,-4.415791,6.695178,6.946286,1.825169,0.628385,-7.609627,9.193032,0.880045,-9.144601,9.511922,4.703475,4.388596,7.529923,0.113678,-8.265392,-2.052279,-2.778483,4.535542,-2.862073,0.300987,-1.293800,2.200375,6.766813,-7.555949,5.333382,-8.186453,0.022587,3.028966,0.349472,3.453857,-7.913361,1.660166,0.758081,-6.222807,5.207840,-9.713647,2.074019,7.137249,-6.311854,7.159971,6.030650,-4.994341,1.429932,8.490941,-1.265220,-2.690105,-4.710353,-4.913941,-0.638830,1.057768,-0.745696,8.515015,-8.077010,-6.384052,6.324890,-3.241521,-5.923544,9.927988,-5.646836,-6.298905,1.281214,9.956171,-7.265040,-8.901658,-6.854325,-4.256958,1.397066,3.045616,-0.709382,-2.919979,3.312402,-0.065456,5.962513,7.859723,-6.270991,7.353695,-3.802439,-6.029954,-1.509869,-8.063707,-4.174838,5.198440,-5.251627,5.681939,5.520453,-4.841407,-3.573105,-5.687580,0.647354,-0.857365,8.782862,1.040633,-3.234958,3.783813,-4.508386,-7.830590,-4.226417,-0.004142,-8.023628,-8.308629,6.251948,-6.062695,1.670330,-9.891260,-3.525624,3.487919,-0.722338,1.163789,-7.228696,2.971161,-6.865442,7.964414,6.493698,-0.238671,-3.481569,7.686898,5.352462,5.833202,-5.055801,5.550142,-6.212228,9.114557,-9.555477,-6.635269,7.136594,8.026939,6.183449,-0.718694,8.716988,-7.373837,7.006498,0.990920,1.867693,-3.158698,-6.250973,-0.398238,-0.988884,7.329918,-5.986346,3.417290,6.727947,-8.932424,4.642865,-9.968471,1.592595,-2.003680,-8.560978,8.072247,7.401482,-4.084589,-4.772585,-3.210226,-2.495793,0.988927,6.781009,-3.806878,0.737222,0.621906,8.030457,8.081198,-4.609329,-8.522553,-6.791590,-4.852252,3.986160,3.701424,8.645622,-2.383841,-5.992152,3.480627,-3.072956,-3.458088,-9.444881,-6.151545,9.203631,-0.560378,-0.224624,3.235901,-9.504037,-8.774346,-8.847922,7.554736,9.489909,3.773998,0.815144,-4.022914,-9.631275,-5.702103,-8.466736,-1.628755,-1.003303,-5.135883,4.945465,3.944842,3.464739,8.780318,-4.599629,-3.664341,-1.018752,6.550772,-8.800268,3.803497,-0.614839,1.077509,7.215464,9.100435,-5.478002,-6.716128,7.119065,0.533797,2.919502,-4.326765,-3.317188,5.978330,-4.256955,-7.542338,-3.657272,3.589684,5.722426,-9.180317,-7.631225,0.100318,9.820270,4.090195,5.173266,5.907011,9.651414,-8.551082,-1.785722,1.950092,-5.049498,4.180209,1.712056,-6.322462,6.500043,6.025861,-8.738889,-8.071137,-0.299875,-3.446509,1.276534,-0.884835,8.976492,-4.398867,0.477945,-6.666441,9.069899,-6.036963,-0.252034,-8.522895,5.994889,8.971270,-8.032397,6.052587,8.589811,-4.836784,-0.788693,-8.174494,-0.995432,4.427943,-8.923737,6.253593,-9.216590,-5.815753,-2.009683,-9.371986,3.459469,4.329499,-1.130383,-8.187647,-7.933951,-8.014534,-4.908554,-2.662918,4.692065,-6.368922,6.567256,7.321148,5.731330,-8.091830,-3.467655,-7.913364,3.006824,0.475406,-4.665750,3.451930,1.247083,8.973314,-8.817562,-1.465442,-1.860773,2.086882,-0.542013,3.173556,6.157752,-7.322774,-3.751756,2.422177,-6.015776,9.164830,-0.363111,-9.919328,-3.798674,6.452063,4.868193,-1.079854,-5.183132,-6.768747,0.618281,1.227629,3.179138,-6.201893,-4.580179,1.505935,3.366971,2.680475,-6.347195,8.287080,-3.862829,4.684437,-6.356865,1.006568,-2.040002,9.701131,1.082588,-8.685741,-9.187486,-7.928688,-6.660670,-5.435836,6.569624,2.796457,8.903767,-3.140807,-0.080118,7.322356,-6.093943,0.747420,-3.287788,-7.010567,0.033956,4.572904,6.422623,-5.105872,6.338340,0.524200,9.189659,-3.181726,2.009672,-9.206987,9.945108,-6.535363,-3.776729,-8.218280,3.289528,-8.916710,6.035262,-3.917910,2.992367,-8.176092,4.797616,2.577395,-0.882262,4.793070,3.081870,4.517649,-4.250583,-6.026216,-4.547710,9.038330,5.086797,-9.949778,7.767783,2.995300,-9.298911,-3.389389,-6.932896,-5.024491,0.164099,-4.489327,3.187949,6.759937,-1.040359,-1.717495,-7.543168,-8.103471,5.052130,-9.815287,4.335605,6.783242,7.904055,-1.918003,-6.172953,9.332547,-0.835731,-6.836461,9.874812,7.987679,1.044809,-9.387637,-2.647968,9.935764,-1.798329,-2.158311,9.271079,9.726052,0.249921,-9.402116,-0.591481,-1.716079,-0.638318,-7.025501,-8.314659,0.485228,3.991066,-0.081561,-2.795747,3.191715,5.947972,-4.514108,3.231327,-2.922440,8.858707,-5.627883,-4.959294,3.159681,8.073103,-6.982163,5.563785,1.874539,-7.965710,-9.829153,6.138610,7.551619,-2.719930,-8.197045,0.820515,-0.167368,6.391692,-3.139997,6.009851,-0.474893,7.951570,1.443926,-7.586024,3.568455,-2.644622,9.970391,7.576406,-2.296948,0.468312,0.548369,5.549653,2.695015,8.308984,-2.481355,6.885089,4.019922,-8.589427,-1.697618,-5.544211,1.149476,0.381977,-0.289243,8.529618,-4.228102,8.328424,4.177346,-4.476195,-4.251048,-7.795912,-4.214378,8.088043,-3.098421,-7.840577,7.296990,-8.115226,2.541540,8.662983,-7.989688,0.753702,5.800928,-4.904618,7.703607,-0.044549,-3.358965,6.657500,-9.846838,4.162746,-8.071751,7.376663,-1.258417,-8.576848,-5.461636,9.080339,-6.484514,0.145000,-9.022379,-2.373998,-0.040159,0.035156,3.133040,-5.658686,4.378238,-3.737229,1.894410,5.407736,2.401209,-4.296485,-5.053636,-4.742918,-5.074150,-2.842518,4.219340,-7.416760,1.879644,3.432652,-8.949078,1.871312,6.492394,9.509443,3.033081,-7.275198,-9.863587,-2.655204,-2.542106,3.869659,4.475781,4.373472,-4.056954,-4.865838,5.546863,-4.454579,8.264314,-0.072092,0.977156,-2.606739,-0.023201,4.129378,2.592743,5.826686,-1.182397,-2.928336,6.963578,2.532769,3.860572,8.274802,5.414067,0.338505,9.629229,0.963613,9.192114,-1.408649,-6.319855,2.057948,9.193240,6.202154,5.698920,8.735152,-4.724105,0.607197,7.840991,-6.112044,-7.921743,9.407371,1.572344,3.396845,-2.041626,2.788626,8.189716,-5.849129,1.912501,3.591530,2.087844,1.351832,0.345146,-9.958632,-8.388769,0.345794,-5.316261,-5.912568,7.467216,-9.719250,2.390396,-6.992700,-7.956202,-2.483413,-0.063528,7.625561,-5.436102,1.594821,6.710446,-6.287752,3.240633,-2.221169,3.926539], dtype = "float32")#candidate|5554|(990,)|const|float32
call_5553 = relay.TupleGetItem(func_2008_call(relay.reshape(const_5554.astype('float32'), [990,])), 3)
call_5555 = relay.TupleGetItem(func_2011_call(relay.reshape(const_5554.astype('float32'), [990,])), 3)
output = relay.Tuple([call_5551,call_5553,const_5554,])
output2 = relay.Tuple([call_5552,call_5555,const_5554,])
func_5556 = relay.Function([], output)
mod['func_5556'] = func_5556
mod = relay.transform.InferType()(mod)
output = func_5556()
func_5557 = relay.Function([], output)
mutated_mod['func_5557'] = func_5557
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2085_call = mod.get_global_var('func_2085')
func_2086_call = mutated_mod.get_global_var('func_2086')
call_5586 = func_2085_call()
call_5587 = func_2085_call()
uop_5595 = relay.acosh(call_5586.astype('float32')) # shape=(5, 198)
uop_5597 = relay.acosh(call_5587.astype('float32')) # shape=(5, 198)
uop_5608 = relay.sinh(uop_5595.astype('float32')) # shape=(5, 198)
uop_5610 = relay.sinh(uop_5597.astype('float32')) # shape=(5, 198)
output = uop_5608
output2 = uop_5610
func_5611 = relay.Function([], output)
mod['func_5611'] = func_5611
mod = relay.transform.InferType()(mod)
output = func_5611()
func_5612 = relay.Function([], output)
mutated_mod['func_5612'] = func_5612
mutated_mod = relay.transform.InferType()(mutated_mod)
var_5644 = relay.var("var_5644", dtype = "float32", shape = (4, 6, 1))#candidate|5644|(4, 6, 1)|var|float32
uop_5645 = relay.log(var_5644.astype('float32')) # shape=(4, 6, 1)
output = relay.Tuple([uop_5645,])
output2 = relay.Tuple([uop_5645,])
func_5671 = relay.Function([var_5644,], output)
mod['func_5671'] = func_5671
mod = relay.transform.InferType()(mod)
mutated_mod['func_5671'] = func_5671
mutated_mod = relay.transform.InferType()(mutated_mod)
var_5672 = relay.var("var_5672", dtype = "float32", shape = (4, 6, 1))#candidate|5672|(4, 6, 1)|var|float32
func_5671_call = mutated_mod.get_global_var('func_5671')
call_5673 = func_5671_call(var_5672)
output = call_5673
func_5674 = relay.Function([var_5672], output)
mutated_mod['func_5674'] = func_5674
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5303_call = mod.get_global_var('func_5303')
func_5305_call = mutated_mod.get_global_var('func_5305')
call_5682 = func_5303_call()
call_5683 = func_5303_call()
output = relay.Tuple([call_5682,])
output2 = relay.Tuple([call_5683,])
func_5684 = relay.Function([], output)
mod['func_5684'] = func_5684
mod = relay.transform.InferType()(mod)
mutated_mod['func_5684'] = func_5684
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5684_call = mutated_mod.get_global_var('func_5684')
call_5685 = func_5684_call()
output = call_5685
func_5686 = relay.Function([], output)
mutated_mod['func_5686'] = func_5686
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3630_call = mod.get_global_var('func_3630')
func_3631_call = mutated_mod.get_global_var('func_3631')
call_5743 = relay.TupleGetItem(func_3630_call(), 1)
call_5744 = relay.TupleGetItem(func_3631_call(), 1)
output = call_5743
output2 = call_5744
func_5745 = relay.Function([], output)
mod['func_5745'] = func_5745
mod = relay.transform.InferType()(mod)
output = func_5745()
func_5746 = relay.Function([], output)
mutated_mod['func_5746'] = func_5746
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4954_call = mod.get_global_var('func_4954')
func_4955_call = mutated_mod.get_global_var('func_4955')
call_5754 = func_4954_call()
call_5755 = func_4954_call()
output = relay.Tuple([call_5754,])
output2 = relay.Tuple([call_5755,])
func_5759 = relay.Function([], output)
mod['func_5759'] = func_5759
mod = relay.transform.InferType()(mod)
mutated_mod['func_5759'] = func_5759
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5759_call = mutated_mod.get_global_var('func_5759')
call_5760 = func_5759_call()
output = call_5760
func_5761 = relay.Function([], output)
mutated_mod['func_5761'] = func_5761
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1952_call = mod.get_global_var('func_1952')
func_1953_call = mutated_mod.get_global_var('func_1953')
call_5762 = relay.TupleGetItem(func_1952_call(), 0)
call_5763 = relay.TupleGetItem(func_1953_call(), 0)
func_1711_call = mod.get_global_var('func_1711')
func_1713_call = mutated_mod.get_global_var('func_1713')
call_5765 = relay.TupleGetItem(func_1711_call(), 1)
call_5766 = relay.TupleGetItem(func_1713_call(), 1)
func_4954_call = mod.get_global_var('func_4954')
func_4955_call = mutated_mod.get_global_var('func_4955')
call_5770 = func_4954_call()
call_5771 = func_4954_call()
uop_5775 = relay.rsqrt(call_5765.astype('float64')) # shape=(11, 6, 15)
uop_5777 = relay.rsqrt(call_5766.astype('float64')) # shape=(11, 6, 15)
func_1124_call = mod.get_global_var('func_1124')
func_1125_call = mutated_mod.get_global_var('func_1125')
call_5779 = relay.TupleGetItem(func_1124_call(), 0)
call_5780 = relay.TupleGetItem(func_1125_call(), 0)
func_5303_call = mod.get_global_var('func_5303')
func_5305_call = mutated_mod.get_global_var('func_5305')
call_5791 = func_5303_call()
call_5792 = func_5303_call()
uop_5795 = relay.cosh(uop_5775.astype('float32')) # shape=(11, 6, 15)
uop_5797 = relay.cosh(uop_5777.astype('float32')) # shape=(11, 6, 15)
func_4145_call = mod.get_global_var('func_4145')
func_4147_call = mutated_mod.get_global_var('func_4147')
const_5811 = relay.const([5.184999,7.580991,-3.166751,8.816701,9.939974,9.572949,6.958182,1.945064,8.244822,9.849339,3.984087,5.733088,-2.424506,-0.439428,0.013632,0.236798,-4.794356,3.397863,6.109239,7.433342,-3.310426,0.963878,-1.906530,-5.171344,-1.374077,8.005930,-4.577820,2.651543,-4.261629,-4.209306,7.200651,-9.489477,3.144310,-2.746082,-4.820664,5.566613,8.838564,-8.558631,2.799212,8.669502,2.733868,7.139997,5.665304,-5.893385,-9.458744,8.835115,-8.250644,2.808802,8.839798,-0.777023,4.454796,-3.319890,-0.815123,1.790741,-8.372079,-5.272988,8.442287,9.673713,-3.508600,-5.246892,0.274373,-1.128099,6.028685,8.555521,-2.487725,-1.383215,0.888460,-5.733635,2.233013,4.777576,-2.742786,3.956274,-3.042487,-1.213185,7.317265,5.177280,-3.282336,-0.586440,-8.159692,8.672974,-9.117074,-7.484680,-4.763817,2.074050,-5.200438,5.323604,-3.378716,-4.686418,-7.628590,-3.840263,9.893153,-4.130176,1.245015,6.299558,-1.968580,-1.131138,-5.204205,-0.925018,5.881911,8.191421,-2.356285,-3.100427,8.925861,0.009216,2.879884,2.863391,-3.747917,3.285718,1.989876,4.971805,2.958063,-4.647296,-2.819281,-9.702554,-5.365202,-3.828800,9.927448,-2.081326,6.285823,-2.742875,0.038854,-9.240085,6.484487,5.331069,-8.516547,-4.537113,6.733917,-2.097270,7.503481,7.027452,-6.865338,-1.089672,3.686483,-7.948629,2.181816,5.990356,0.736454,-7.545007,4.140291,9.744200,-3.684728,0.081495,-6.468866,0.417143,1.391823,9.276736,-1.280329,2.092727,-7.758333,7.342652,-2.761209,-2.026149,-7.370085,-1.867026,1.682578,9.067505,4.443657,2.457099,-6.344409,3.104521,5.016092,9.938735,-8.335790,5.871135,6.042181,-8.038858,-4.481130,2.579773,3.681716,-8.793138,0.726152,-9.406795,7.562370,-0.675318,2.315513,7.949403,-9.424729,-0.739477,3.409059,-5.938713,-7.347144,-3.403733,0.172414,1.531800,4.757736,1.590550,-4.066684,4.028341,1.413579,6.076337,3.062490,-1.074817,-5.215651,-4.177757,-9.337614,-1.069067,-6.732362,7.390132,-0.647921,-5.596550,8.834457,-9.514369,-6.527192,9.964445,5.552168,-9.473111,5.892173,-4.563854,4.187612,6.060363,3.557245,1.421538,-2.658913,-8.959890,7.684415,-0.903341,-1.117169,-3.651659,-5.067606,0.283886,8.034753,-4.449983,-8.012400,-9.816945,1.251131,5.565725,8.251306,-1.795714,-5.305765,-0.841136,-7.435307,-0.503180,5.346577,0.184164,-4.419526,1.953447,-6.010911,-9.624289,-1.146749,-4.567868,-3.862886,8.703862,-7.378538,3.981484,-0.460926,8.107843,-8.447219,5.729953,-0.853020,3.321718,1.945816,-0.401988,-4.018645,-5.005164,3.780545,-3.734901,4.531460,9.219332,-8.897339,-4.322626,-8.289992,5.868604,7.751575,-7.193247,8.218819,-6.118406,-5.174329,-6.736470,7.898405,-4.063987,2.485335,-7.206159,-4.595262,2.756194,-9.977938,9.321341,8.953987,1.803290,1.389496,-2.192894,4.076110,-6.752954,-6.186904,-3.569942,5.280915,-7.405423,6.212292,1.214574,1.756242,-9.865891,-9.593544,-3.873399,-6.397052,-0.493806,-4.619897,-5.655116,7.534911,7.559501,4.403213,0.140890,-0.283612,-6.698854,-1.236268,7.453854,-9.057258,2.935746,6.376717,-7.609442,6.455573,-5.818508,2.053708,1.320255,0.291318,-3.282537,-6.080666], dtype = "float32")#candidate|5811|(315,)|const|float32
call_5810 = func_4145_call(relay.reshape(const_5811.astype('float32'), [5, 7, 9]))
call_5812 = func_4145_call(relay.reshape(const_5811.astype('float32'), [5, 7, 9]))
output = relay.Tuple([call_5762,call_5770,call_5779,call_5791,uop_5795,call_5810,const_5811,])
output2 = relay.Tuple([call_5763,call_5771,call_5780,call_5792,uop_5797,call_5812,const_5811,])
func_5813 = relay.Function([], output)
mod['func_5813'] = func_5813
mod = relay.transform.InferType()(mod)
output = func_5813()
func_5814 = relay.Function([], output)
mutated_mod['func_5814'] = func_5814
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2844_call = mod.get_global_var('func_2844')
func_2845_call = mutated_mod.get_global_var('func_2845')
call_5817 = relay.TupleGetItem(func_2844_call(), 0)
call_5818 = relay.TupleGetItem(func_2845_call(), 0)
output = call_5817
output2 = call_5818
func_5836 = relay.Function([], output)
mod['func_5836'] = func_5836
mod = relay.transform.InferType()(mod)
output = func_5836()
func_5837 = relay.Function([], output)
mutated_mod['func_5837'] = func_5837
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5836_call = mod.get_global_var('func_5836')
func_5837_call = mutated_mod.get_global_var('func_5837')
call_5838 = func_5836_call()
call_5839 = func_5836_call()
output = relay.Tuple([call_5838,])
output2 = relay.Tuple([call_5839,])
func_5845 = relay.Function([], output)
mod['func_5845'] = func_5845
mod = relay.transform.InferType()(mod)
output = func_5845()
func_5846 = relay.Function([], output)
mutated_mod['func_5846'] = func_5846
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4419_call = mod.get_global_var('func_4419')
func_4421_call = mutated_mod.get_global_var('func_4421')
call_5863 = relay.TupleGetItem(func_4419_call(), 1)
call_5864 = relay.TupleGetItem(func_4421_call(), 1)
func_3080_call = mod.get_global_var('func_3080')
func_3081_call = mutated_mod.get_global_var('func_3081')
call_5927 = relay.TupleGetItem(func_3080_call(), 1)
call_5928 = relay.TupleGetItem(func_3081_call(), 1)
func_2085_call = mod.get_global_var('func_2085')
func_2086_call = mutated_mod.get_global_var('func_2086')
call_5932 = func_2085_call()
call_5933 = func_2085_call()
func_2890_call = mod.get_global_var('func_2890')
func_2892_call = mutated_mod.get_global_var('func_2892')
call_5947 = func_2890_call()
call_5948 = func_2890_call()
output = relay.Tuple([call_5863,call_5927,call_5932,call_5947,])
output2 = relay.Tuple([call_5864,call_5928,call_5933,call_5948,])
func_5959 = relay.Function([], output)
mod['func_5959'] = func_5959
mod = relay.transform.InferType()(mod)
output = func_5959()
func_5960 = relay.Function([], output)
mutated_mod['func_5960'] = func_5960
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5836_call = mod.get_global_var('func_5836')
func_5837_call = mutated_mod.get_global_var('func_5837')
call_6030 = func_5836_call()
call_6031 = func_5836_call()
output = call_6030
output2 = call_6031
func_6034 = relay.Function([], output)
mod['func_6034'] = func_6034
mod = relay.transform.InferType()(mod)
mutated_mod['func_6034'] = func_6034
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6034_call = mutated_mod.get_global_var('func_6034')
call_6035 = func_6034_call()
output = call_6035
func_6036 = relay.Function([], output)
mutated_mod['func_6036'] = func_6036
mutated_mod = relay.transform.InferType()(mutated_mod)
const_6083 = relay.const([[[10,9,6,5,2,6,4,10,2,-2,1,4,6],[2,-2,-5,2,8,-8,3,-2,3,8,3,1,10],[7,-3,8,8,-8,-2,7,-10,2,-6,4,-10,3],[2,-9,4,-8,1,-6,-6,4,-5,-8,7,-10,-6],[-4,-9,-10,-1,-5,6,-5,1,-10,6,-7,-6,-7],[6,-9,4,-9,-10,-3,-7,-9,-6,-4,8,6,-9],[-6,-9,-9,2,9,9,10,6,-4,4,10,2,8],[9,3,-8,-2,-3,6,-8,3,3,-9,-7,-6,8],[2,1,9,4,9,-2,1,-1,-3,9,6,-9,5],[-10,10,8,-8,-2,2,-1,-7,9,10,-2,8,-9]],[[7,9,-4,4,9,-6,2,5,5,4,-1,-10,2],[-4,-7,-7,10,8,-5,10,4,-10,-5,2,-3,3],[-9,4,9,6,-10,-10,-8,-6,1,-8,1,5,5],[7,-6,-3,-5,10,7,-8,6,-9,8,-9,1,-8],[-7,10,2,1,10,-3,-1,7,-9,-6,4,-1,-9],[5,-8,-4,-6,7,2,4,-2,-4,-1,10,7,5],[9,6,-6,10,4,9,8,5,-3,-1,9,-7,-8],[10,-3,7,-1,-4,5,-1,9,6,7,7,-2,5],[6,2,3,1,7,9,-2,4,-8,6,-4,-5,6],[1,2,1,-1,4,-5,9,-5,-9,-3,4,-8,1]],[[5,-5,7,8,5,9,-2,-10,-10,-8,-9,-3,10],[6,-10,-1,4,-3,-3,2,2,-4,4,3,4,10],[10,8,3,-9,-2,5,8,6,-10,-9,-10,9,10],[-10,5,8,5,5,-1,-8,-5,-10,10,-6,4,3],[10,-8,5,-5,-9,-8,-10,-10,-9,5,-1,9,-10],[-4,-10,-6,10,-3,1,-9,-10,5,-2,-2,-5,-7],[3,-10,10,-7,2,3,9,-10,3,-3,4,4,4],[7,4,-6,9,-1,-3,-1,6,-8,9,7,7,4],[9,7,3,-3,-9,7,-8,-9,9,-7,-6,-1,-4],[9,-2,3,3,5,6,-5,10,5,2,-8,-5,-7]],[[-1,-10,-9,-4,-1,2,-9,-2,-6,1,10,-3,-1],[-3,-5,1,-1,1,-7,-8,-2,-4,7,7,4,-1],[-6,-7,5,-5,-2,-8,-5,-10,-4,5,-1,8,-7],[-3,-2,3,9,7,10,4,-8,5,-1,-8,-5,2],[3,6,-4,-1,5,6,-6,8,5,-9,6,6,1],[2,-8,6,4,-3,2,5,-2,1,-6,-5,1,-1],[10,-4,-3,10,1,-5,7,1,2,7,9,-1,7],[5,9,-4,-5,-1,5,10,-7,-10,2,4,-1,9],[8,-6,-5,-2,-9,5,-5,2,8,-5,-8,-9,-8],[4,5,9,3,-10,-6,-3,9,7,-4,5,5,-7]],[[6,-1,1,4,-1,1,8,-2,-4,-7,3,-10,-7],[9,4,2,3,4,1,2,-9,-5,6,3,-2,-6],[6,-4,-8,4,-10,-2,4,-1,-4,-8,-7,1,-10],[-3,5,-9,-3,6,5,-7,-10,10,-7,-8,3,3],[1,-3,-8,-5,-6,-6,7,-4,5,9,-10,-1,1],[5,7,6,-4,7,3,-7,-6,10,8,-8,-3,10],[10,-10,1,5,-5,-4,-9,-3,4,-1,-4,8,5],[6,-4,1,8,-5,9,6,2,-3,2,-3,-7,-1],[-7,4,4,10,-4,4,-4,-10,-2,7,6,-4,9],[7,4,-6,6,3,-7,9,-3,5,3,-2,-2,8]],[[-2,-8,-10,4,2,4,-9,-9,-9,-10,-1,-4,2],[1,5,-2,2,8,7,-5,-2,-7,8,-7,-4,1],[-4,2,-9,10,2,2,3,7,2,9,3,-6,3],[7,-2,5,-1,2,1,5,5,9,-7,-8,-8,-4],[-2,-1,-6,2,-7,4,5,-2,-9,2,-6,1,-7],[2,-5,-8,7,-4,10,-10,5,8,3,8,7,-7],[-3,6,-9,-7,5,3,-7,-6,7,7,-2,-3,3],[7,3,2,-2,6,-9,8,-10,-7,-10,-5,10,10],[-7,7,6,1,-9,7,-3,5,-8,5,3,-7,6],[-1,-4,-8,-4,10,-2,1,-3,-5,3,-8,2,-9]],[[7,10,-7,-2,10,1,-7,-5,-1,-10,-7,3,-4],[1,6,1,-7,9,-1,-7,10,-6,9,8,10,-6],[-7,-6,-10,7,8,-9,10,-1,6,-10,7,7,-9],[-8,7,5,3,-4,-10,-8,10,5,5,9,-5,-2],[-6,8,6,-4,10,-4,1,-7,-9,-9,-4,9,2],[3,-6,10,3,-7,6,1,-1,10,-5,2,1,4],[-6,5,8,5,-2,-6,-7,-6,-4,-2,4,-6,-8],[-2,10,6,-9,-3,-10,3,-7,9,-3,8,1,-2],[-1,-1,-7,-10,1,4,-9,-8,-7,-1,1,-8,-2],[-10,4,6,-10,-4,4,-5,-4,-6,8,-1,5,1]],[[9,-10,6,6,2,5,10,3,7,-8,9,-3,-8],[-1,-6,10,-2,8,10,9,-5,6,-8,-9,8,-6],[-3,-3,-5,5,9,-5,-6,10,-7,10,5,-5,-6],[8,4,-3,4,10,-4,-9,2,5,-8,-6,6,-5],[1,-2,6,2,-3,-9,-3,-6,-3,10,-8,-3,-2],[9,4,-8,6,3,9,4,-4,-1,-3,4,10,3],[-2,6,7,3,1,-8,3,-9,-1,-6,-7,2,4],[9,-3,-3,1,1,7,9,7,-3,1,3,-6,-6],[8,6,-5,5,7,3,9,4,-7,-4,-4,-3,10],[8,-6,10,4,3,8,7,8,-3,-3,-3,-4,3]],[[3,-5,-3,-8,9,1,3,-3,4,8,10,-8,-10],[3,5,10,-1,10,7,-3,7,10,-9,-3,-4,4],[-4,-7,1,-6,6,-6,-2,3,6,8,9,5,2],[1,-9,-10,-5,-7,6,5,-1,1,9,5,-7,1],[10,3,4,-5,-9,7,-1,2,-8,-1,10,-2,-3],[6,-9,-7,-5,-10,6,-1,2,9,-4,3,10,3],[-6,-10,-4,-9,5,2,8,-6,-7,9,9,-5,1],[-5,3,-10,2,6,-8,9,-2,-3,10,5,8,-1],[2,-10,-5,3,-2,5,-4,-2,-9,-6,-1,-3,8],[-10,-10,5,-8,-4,-1,-1,3,-7,-10,-9,-9,1]],[[-6,10,-2,4,3,5,-6,6,-7,10,-4,7,5],[2,5,-5,10,4,-8,-6,-10,6,-10,-3,9,7],[10,5,3,1,-5,-6,-4,6,1,-4,-3,-6,3],[1,1,-3,-3,-6,10,-4,-6,9,-5,3,-9,6],[7,6,-9,2,-5,3,-7,-6,-8,3,3,5,9],[3,-3,1,-8,4,1,1,2,4,3,-10,10,-5],[5,10,-6,-3,1,2,10,9,1,7,-2,-7,-3],[-5,8,6,10,1,-9,8,10,-9,8,-2,-10,6],[-10,-8,-8,5,-3,-3,-9,2,9,-9,-3,-7,-10],[2,8,1,-9,-2,-2,-4,10,-9,-10,-10,-4,-7]],[[-9,8,3,-7,-7,8,9,-4,-9,-5,6,9,-6],[6,-7,-7,-9,-6,-4,-3,3,-7,-3,3,-9,-8],[-4,-4,5,-2,-5,1,-3,-6,1,-6,-1,7,3],[-4,8,-9,1,3,-5,2,-4,-6,1,-4,9,7],[2,-4,3,9,-1,6,-6,-2,5,-3,-7,6,8],[10,-9,-9,-10,7,-10,7,-9,-7,-1,5,3,5],[-4,-7,8,-4,-4,-9,6,8,-6,-1,-7,9,-5],[3,2,-7,-6,1,-4,2,-7,-2,9,-1,4,-8],[-10,8,1,3,-7,10,-7,-9,7,10,-2,-9,2],[-4,1,7,10,7,7,5,-10,-7,-7,9,10,7]],[[10,3,-5,-8,10,8,-1,3,4,-1,-4,-3,-7],[-4,10,8,-9,-3,7,-3,-7,9,7,-5,2,7],[-4,-7,-3,-7,4,4,-6,8,-8,-2,-1,2,-5],[-8,3,-2,-6,-10,-10,3,-2,-5,-3,2,1,6],[-7,1,5,10,7,-5,-3,-3,1,4,2,-2,2],[6,-9,7,-1,9,-10,-4,-3,9,3,8,7,-9],[-1,3,6,9,2,-1,-6,6,3,2,-8,-1,-4],[-7,1,1,-9,-9,2,10,6,6,4,-10,4,3],[7,-5,5,4,-9,1,-9,-3,-8,4,2,8,4],[5,3,9,3,1,-9,-5,-9,-6,-5,-9,10,7]]], dtype = "uint16")#candidate|6083|(12, 10, 13)|const|uint16
var_6084 = relay.var("var_6084", dtype = "uint16", shape = (12, 10, 13))#candidate|6084|(12, 10, 13)|var|uint16
bop_6085 = relay.maximum(const_6083.astype('uint16'), relay.reshape(var_6084.astype('uint16'), relay.shape_of(const_6083))) # shape=(12, 10, 13)
output = relay.Tuple([bop_6085,])
output2 = relay.Tuple([bop_6085,])
func_6088 = relay.Function([var_6084,], output)
mod['func_6088'] = func_6088
mod = relay.transform.InferType()(mod)
var_6089 = relay.var("var_6089", dtype = "uint16", shape = (12, 10, 13))#candidate|6089|(12, 10, 13)|var|uint16
output = func_6088(var_6089)
func_6090 = relay.Function([var_6089], output)
mutated_mod['func_6090'] = func_6090
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3902_call = mod.get_global_var('func_3902')
func_3903_call = mutated_mod.get_global_var('func_3903')
call_6124 = relay.TupleGetItem(func_3902_call(), 0)
call_6125 = relay.TupleGetItem(func_3903_call(), 0)
output = call_6124
output2 = call_6125
func_6142 = relay.Function([], output)
mod['func_6142'] = func_6142
mod = relay.transform.InferType()(mod)
output = func_6142()
func_6143 = relay.Function([], output)
mutated_mod['func_6143'] = func_6143
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4814_call = mod.get_global_var('func_4814')
func_4816_call = mutated_mod.get_global_var('func_4816')
call_6150 = relay.TupleGetItem(func_4814_call(), 0)
call_6151 = relay.TupleGetItem(func_4816_call(), 0)
output = call_6150
output2 = call_6151
func_6157 = relay.Function([], output)
mod['func_6157'] = func_6157
mod = relay.transform.InferType()(mod)
output = func_6157()
func_6158 = relay.Function([], output)
mutated_mod['func_6158'] = func_6158
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4954_call = mod.get_global_var('func_4954')
func_4955_call = mutated_mod.get_global_var('func_4955')
call_6168 = func_4954_call()
call_6169 = func_4954_call()
output = relay.Tuple([call_6168,])
output2 = relay.Tuple([call_6169,])
func_6180 = relay.Function([], output)
mod['func_6180'] = func_6180
mod = relay.transform.InferType()(mod)
output = func_6180()
func_6181 = relay.Function([], output)
mutated_mod['func_6181'] = func_6181
mutated_mod = relay.transform.InferType()(mutated_mod)
const_6219 = relay.const([[[-10,5,5,5,-8,6,5,-4,-8,6,-9],[6,8,-4,3,6,6,3,5,5,-6,5],[-6,4,-10,-5,-5,-6,-6,5,-4,5,2],[1,5,-3,6,2,-8,5,7,7,-3,-6],[-5,-10,-1,3,4,-3,10,2,3,-2,-2],[-1,7,2,2,8,-6,10,-7,3,7,-2],[3,6,8,8,-3,9,-6,-1,-7,-10,1],[-4,-1,10,4,-6,6,2,-8,-1,9,4],[-9,6,5,-10,-5,5,-1,5,-8,2,-1],[-5,-7,1,-8,-3,-1,4,-6,4,-1,7],[-5,9,3,7,-8,-4,-9,-2,1,6,6],[-6,6,-2,-1,9,3,-9,-9,-10,-9,5],[1,-6,5,-2,2,3,-10,-5,6,-8,1]],[[-5,4,-9,-2,-2,4,-5,10,9,-7,-9],[7,-7,7,-2,-3,-9,4,9,-4,7,8],[6,9,-1,-8,-3,-4,10,8,-10,-10,-7],[8,-8,-10,8,-9,8,-10,6,9,4,10],[7,-5,8,-5,-8,4,5,3,1,-10,1],[8,-9,-7,-10,-5,6,5,5,-10,3,1],[7,1,-9,9,-10,-9,1,10,-4,2,6],[5,-7,6,-10,-8,-4,-7,2,5,2,-3],[-2,6,-9,-8,-6,-8,-8,5,-3,5,3],[-2,-7,-1,1,-1,6,-10,8,3,9,-8],[-6,-2,-7,-8,-8,-7,7,5,-1,-2,-6],[5,-8,-9,-8,3,10,-4,-2,-7,-3,9],[-4,10,1,-2,2,-10,-4,7,-7,-7,-8]],[[4,-5,2,9,10,4,-7,-9,1,-8,4],[-1,7,3,-7,-7,1,-5,-4,2,6,-3],[2,-5,5,-3,7,-10,-6,-8,-6,-5,9],[-7,4,6,-9,4,10,2,5,4,3,-6],[-1,-1,9,1,6,2,1,-10,6,-10,5],[4,9,-2,4,-1,-2,1,8,3,1,-4],[5,3,-9,-10,6,4,3,-8,-6,3,3],[3,-5,-7,-2,-9,4,8,4,8,3,-5],[-2,5,-6,-7,-2,2,5,-4,-8,-3,6],[6,9,-1,-7,-1,1,-4,4,-8,2,-4],[7,3,10,10,7,-5,9,3,2,3,-9],[2,10,10,10,-8,-1,-6,9,8,-1,6],[-8,-8,-2,6,1,5,-10,3,10,-10,-4]],[[-3,-2,9,-3,-5,-4,3,-3,-7,1,-6],[-8,2,2,-6,-8,-7,9,4,-5,-3,2],[-4,7,1,-3,10,8,9,5,4,4,4],[1,5,8,4,-4,-7,10,-10,7,-6,1],[4,-1,-9,-2,-10,2,-9,-1,-2,-3,-9],[-9,8,6,-10,1,5,2,9,-9,-7,4],[3,10,2,4,-6,10,-8,2,-5,2,9],[4,-8,-8,-5,-2,8,2,7,1,9,-1],[-8,-5,-8,-5,-10,6,3,2,4,4,8],[-4,-4,-10,6,9,4,9,2,-10,2,-2],[-10,2,-10,8,4,5,-6,-2,8,-8,-9],[6,-10,6,2,6,-2,-6,7,-2,-5,-1],[-6,3,4,6,-8,-7,-9,-10,-10,-1,-5]],[[7,-2,-4,-10,5,-10,7,10,9,6,-6],[-6,-5,1,1,4,9,-8,10,10,3,-6],[3,-8,3,6,-8,-6,-1,9,-4,-9,-9],[-7,-9,6,8,4,9,-4,5,-4,6,-6],[-6,8,-7,4,-8,-7,-10,8,-5,1,-6],[8,7,-4,9,-10,4,4,7,-9,9,-9],[-9,8,1,9,6,-7,-7,-8,3,-1,5],[10,3,6,-5,2,-4,-1,-2,2,-8,-3],[-2,-3,-10,-1,10,-9,-1,7,-2,4,-1],[-2,-7,-3,3,-2,-8,9,-1,-2,-2,-4],[-8,10,1,-7,-1,7,5,-1,-7,-3,-9],[-2,-3,-1,-5,-7,-7,-4,-3,9,2,-9],[6,-5,-4,10,3,4,-6,8,-10,-6,-1]],[[3,3,-5,-10,2,-6,-10,9,4,2,5],[-10,1,7,-7,8,-4,6,6,6,3,-8],[10,5,-7,-3,4,7,-5,3,-7,-4,1],[-10,5,6,-6,2,-2,-4,-5,5,-10,5],[9,7,-8,-4,-10,-6,10,2,-8,6,3],[-1,4,-8,-8,-10,-8,2,-10,4,3,-5],[-2,1,-3,-10,-6,5,-6,-6,3,-1,5],[-8,2,-6,-2,9,10,-5,-8,9,7,4],[4,-10,-6,-9,-4,9,-9,-10,8,6,-1],[10,6,-1,-5,6,5,-8,7,-5,6,-9],[-10,5,-10,5,2,9,9,10,-7,5,4],[-4,-3,-6,-4,6,-3,2,-4,5,2,-5],[-5,5,5,3,-5,2,7,-9,-2,5,-7]],[[-1,3,8,-3,8,-8,-10,-3,4,-2,-6],[-4,-2,-1,6,-3,1,-4,-1,2,4,2],[-4,-9,-5,-5,-9,-7,7,-7,5,9,-6],[-5,-1,8,-8,1,7,10,-10,6,-4,-2],[2,6,-9,-5,2,-4,8,10,2,8,3],[5,3,-5,-4,-9,-8,6,-2,4,3,-8],[-10,7,-10,-3,-2,-6,-8,1,-2,10,9],[-9,9,6,-3,-2,-3,-7,3,5,6,8],[6,10,4,-8,-8,-4,2,8,4,-8,-9],[9,-5,-5,10,9,-5,-4,8,1,-10,-2],[5,-8,10,-8,-3,8,5,-10,-7,3,-5],[10,-8,9,6,-10,1,-3,-4,-7,2,-4],[9,2,-3,7,-1,-3,-9,-8,-4,-7,-6]],[[6,-3,-6,8,-2,4,-10,-8,-4,5,-1],[-10,9,-9,8,9,5,7,-7,-1,-10,4],[9,9,2,-1,-8,1,-6,4,-6,-8,-6],[-2,9,-3,-8,1,10,3,3,6,4,9],[-10,3,-7,-6,-9,-10,-2,9,2,9,9],[-6,5,-4,-9,-10,7,2,-8,10,9,-6],[-3,-2,7,8,3,-10,4,-9,8,-2,5],[-10,-4,-10,10,-5,5,9,9,9,1,-10],[5,10,1,10,-7,10,-3,-6,10,-8,-7],[6,4,7,5,2,1,5,3,-9,-8,-4],[3,5,-1,8,-10,5,-2,-1,2,-6,5],[-6,-9,-1,-5,-9,6,2,9,-9,-8,2],[7,-6,-7,3,-6,-2,-3,3,1,6,7]],[[7,2,4,-10,-10,2,-7,8,2,-10,-8],[-9,-3,-2,8,-9,-7,10,-10,10,7,-4],[2,6,-6,10,1,5,-10,3,8,2,2],[7,-2,10,10,6,7,-9,2,1,9,-7],[4,-6,1,-10,-1,5,-5,-5,-10,-8,-6],[-2,-8,-2,-8,5,-9,6,10,3,2,-5],[2,1,-4,8,8,8,2,3,9,4,1],[-7,6,10,-5,-5,6,8,-5,-10,8,-10],[-8,-2,3,6,-8,4,-1,1,3,5,-2],[-9,-9,3,-7,-8,8,-3,-8,6,1,1],[8,2,-10,1,9,-10,-1,4,5,-4,-3],[-5,-5,8,-3,-10,3,-4,-8,-4,5,5],[-6,-3,-2,4,-3,8,-10,-7,-5,7,8]]], dtype = "int8")#candidate|6219|(9, 13, 11)|const|int8
var_6220 = relay.var("var_6220", dtype = "int8", shape = (9, 13, 11))#candidate|6220|(9, 13, 11)|var|int8
bop_6221 = relay.right_shift(const_6219.astype('int8'), relay.reshape(var_6220.astype('int8'), relay.shape_of(const_6219))) # shape=(9, 13, 11)
func_1852_call = mod.get_global_var('func_1852')
func_1854_call = mutated_mod.get_global_var('func_1854')
call_6226 = func_1852_call()
call_6227 = func_1852_call()
output = relay.Tuple([bop_6221,call_6226,])
output2 = relay.Tuple([bop_6221,call_6227,])
func_6234 = relay.Function([var_6220,], output)
mod['func_6234'] = func_6234
mod = relay.transform.InferType()(mod)
var_6235 = relay.var("var_6235", dtype = "int8", shape = (9, 13, 11))#candidate|6235|(9, 13, 11)|var|int8
output = func_6234(var_6235)
func_6236 = relay.Function([var_6235], output)
mutated_mod['func_6236'] = func_6236
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3322_call = mod.get_global_var('func_3322')
func_3323_call = mutated_mod.get_global_var('func_3323')
call_6284 = func_3322_call()
call_6285 = func_3322_call()
func_5671_call = mod.get_global_var('func_5671')
func_5674_call = mutated_mod.get_global_var('func_5674')
var_6305 = relay.var("var_6305", dtype = "float32", shape = (24, 1))#candidate|6305|(24, 1)|var|float32
call_6304 = relay.TupleGetItem(func_5671_call(relay.reshape(var_6305.astype('float32'), [4, 6, 1])), 0)
call_6306 = relay.TupleGetItem(func_5674_call(relay.reshape(var_6305.astype('float32'), [4, 6, 1])), 0)
output = relay.Tuple([call_6284,call_6304,var_6305,])
output2 = relay.Tuple([call_6285,call_6306,var_6305,])
func_6311 = relay.Function([var_6305,], output)
mod['func_6311'] = func_6311
mod = relay.transform.InferType()(mod)
var_6312 = relay.var("var_6312", dtype = "float32", shape = (24, 1))#candidate|6312|(24, 1)|var|float32
output = func_6311(var_6312)
func_6313 = relay.Function([var_6312], output)
mutated_mod['func_6313'] = func_6313
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5611_call = mod.get_global_var('func_5611')
func_5612_call = mutated_mod.get_global_var('func_5612')
call_6315 = func_5611_call()
call_6316 = func_5611_call()
var_6336 = relay.var("var_6336", dtype = "float32", shape = (5, 198))#candidate|6336|(5, 198)|var|float32
bop_6337 = relay.less_equal(call_6315.astype('bool'), relay.reshape(var_6336.astype('bool'), relay.shape_of(call_6315))) # shape=(5, 198)
bop_6340 = relay.less_equal(call_6316.astype('bool'), relay.reshape(var_6336.astype('bool'), relay.shape_of(call_6316))) # shape=(5, 198)
output = bop_6337
output2 = bop_6340
func_6344 = relay.Function([var_6336,], output)
mod['func_6344'] = func_6344
mod = relay.transform.InferType()(mod)
mutated_mod['func_6344'] = func_6344
mutated_mod = relay.transform.InferType()(mutated_mod)
var_6345 = relay.var("var_6345", dtype = "float32", shape = (5, 198))#candidate|6345|(5, 198)|var|float32
func_6344_call = mutated_mod.get_global_var('func_6344')
call_6346 = func_6344_call(var_6345)
output = call_6346
func_6347 = relay.Function([var_6345], output)
mutated_mod['func_6347'] = func_6347
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1936_call = mod.get_global_var('func_1936')
func_1938_call = mutated_mod.get_global_var('func_1938')
call_6363 = relay.TupleGetItem(func_1936_call(), 0)
call_6364 = relay.TupleGetItem(func_1938_call(), 0)
func_820_call = mod.get_global_var('func_820')
func_821_call = mutated_mod.get_global_var('func_821')
call_6371 = relay.TupleGetItem(func_820_call(), 1)
call_6372 = relay.TupleGetItem(func_821_call(), 1)
output = relay.Tuple([call_6363,call_6371,])
output2 = relay.Tuple([call_6364,call_6372,])
func_6401 = relay.Function([], output)
mod['func_6401'] = func_6401
mod = relay.transform.InferType()(mod)
mutated_mod['func_6401'] = func_6401
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6401_call = mutated_mod.get_global_var('func_6401')
call_6402 = func_6401_call()
output = call_6402
func_6403 = relay.Function([], output)
mutated_mod['func_6403'] = func_6403
mutated_mod = relay.transform.InferType()(mutated_mod)
const_6414 = relay.const([[[False,False,False,False,False,True,True,False,True,False,True,False,True,False,True],[True,True,True,False,False,True,False,False,True,False,True,False,True,True,True],[True,False,True,True,False,True,True,True,True,False,True,False,False,False,False],[True,True,True,False,False,False,False,False,False,True,False,True,False,True,True],[True,True,True,False,False,True,True,True,False,False,True,False,False,False,False],[False,True,False,False,False,False,False,False,False,False,True,False,False,True,False],[True,False,True,False,False,True,True,True,True,True,True,False,True,True,False]],[[False,False,False,False,False,False,False,False,False,False,False,True,False,False,True],[False,True,True,True,True,False,True,False,True,False,False,True,False,True,False],[True,True,False,True,True,False,True,True,False,True,True,True,False,False,True],[True,False,True,True,False,False,True,True,True,False,True,True,True,True,False],[False,False,False,False,True,True,True,False,True,True,True,False,False,False,False],[False,True,True,True,False,True,True,True,False,False,False,True,True,True,False],[False,True,True,False,False,False,True,True,True,False,False,False,True,True,False]],[[True,True,False,False,False,False,True,True,False,True,False,False,False,True,True],[True,True,True,False,True,True,False,True,False,True,True,False,False,False,True],[False,False,False,False,False,False,True,False,False,True,True,False,True,False,True],[False,True,True,True,True,False,False,True,True,False,True,True,True,True,True],[False,True,True,True,False,False,True,True,False,True,False,True,True,True,True],[True,True,False,False,True,True,False,True,True,False,False,False,True,True,True],[False,True,False,False,False,False,False,False,True,False,True,True,True,True,False]]], dtype = "bool")#candidate|6414|(3, 7, 15)|const|bool
var_6415 = relay.var("var_6415", dtype = "bool", shape = (3, 7, 15))#candidate|6415|(3, 7, 15)|var|bool
bop_6416 = relay.logical_and(const_6414.astype('bool'), relay.reshape(var_6415.astype('bool'), relay.shape_of(const_6414))) # shape=(3, 7, 15)
output = bop_6416
output2 = bop_6416
func_6421 = relay.Function([var_6415,], output)
mod['func_6421'] = func_6421
mod = relay.transform.InferType()(mod)
var_6422 = relay.var("var_6422", dtype = "bool", shape = (3, 7, 15))#candidate|6422|(3, 7, 15)|var|bool
output = func_6421(var_6422)
func_6423 = relay.Function([var_6422], output)
mutated_mod['func_6423'] = func_6423
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5556_call = mod.get_global_var('func_5556')
func_5557_call = mutated_mod.get_global_var('func_5557')
call_6482 = relay.TupleGetItem(func_5556_call(), 0)
call_6483 = relay.TupleGetItem(func_5557_call(), 0)
var_6501 = relay.var("var_6501", dtype = "float64", shape = (585, 3))#candidate|6501|(585, 3)|var|float64
bop_6502 = relay.add(call_6482.astype('int32'), relay.reshape(var_6501.astype('int32'), relay.shape_of(call_6482))) # shape=(585, 3)
bop_6505 = relay.add(call_6483.astype('int32'), relay.reshape(var_6501.astype('int32'), relay.shape_of(call_6483))) # shape=(585, 3)
uop_6510 = relay.sin(bop_6502.astype('float64')) # shape=(585, 3)
uop_6512 = relay.sin(bop_6505.astype('float64')) # shape=(585, 3)
output = uop_6510
output2 = uop_6512
func_6514 = relay.Function([var_6501,], output)
mod['func_6514'] = func_6514
mod = relay.transform.InferType()(mod)
var_6515 = relay.var("var_6515", dtype = "float64", shape = (585, 3))#candidate|6515|(585, 3)|var|float64
output = func_6514(var_6515)
func_6516 = relay.Function([var_6515], output)
mutated_mod['func_6516'] = func_6516
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3943_call = mod.get_global_var('func_3943')
func_3945_call = mutated_mod.get_global_var('func_3945')
call_6552 = func_3943_call()
call_6553 = func_3943_call()
output = call_6552
output2 = call_6553
func_6576 = relay.Function([], output)
mod['func_6576'] = func_6576
mod = relay.transform.InferType()(mod)
mutated_mod['func_6576'] = func_6576
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6576_call = mutated_mod.get_global_var('func_6576')
call_6577 = func_6576_call()
output = call_6577
func_6578 = relay.Function([], output)
mutated_mod['func_6578'] = func_6578
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4642_call = mod.get_global_var('func_4642')
func_4643_call = mutated_mod.get_global_var('func_4643')
call_6591 = relay.TupleGetItem(func_4642_call(), 0)
call_6592 = relay.TupleGetItem(func_4643_call(), 0)
uop_6605 = relay.asin(call_6591.astype('float64')) # shape=(9, 1, 11)
uop_6607 = relay.asin(call_6592.astype('float64')) # shape=(9, 1, 11)
func_2890_call = mod.get_global_var('func_2890')
func_2892_call = mutated_mod.get_global_var('func_2892')
call_6610 = func_2890_call()
call_6611 = func_2890_call()
bop_6617 = relay.multiply(uop_6605.astype('float32'), relay.reshape(call_6591.astype('float32'), relay.shape_of(uop_6605))) # shape=(9, 1, 11)
bop_6620 = relay.multiply(uop_6607.astype('float32'), relay.reshape(call_6592.astype('float32'), relay.shape_of(uop_6607))) # shape=(9, 1, 11)
func_1124_call = mod.get_global_var('func_1124')
func_1125_call = mutated_mod.get_global_var('func_1125')
call_6648 = relay.TupleGetItem(func_1124_call(), 0)
call_6649 = relay.TupleGetItem(func_1125_call(), 0)
output = relay.Tuple([call_6610,bop_6617,call_6648,])
output2 = relay.Tuple([call_6611,bop_6620,call_6649,])
func_6650 = relay.Function([], output)
mod['func_6650'] = func_6650
mod = relay.transform.InferType()(mod)
mutated_mod['func_6650'] = func_6650
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6650_call = mutated_mod.get_global_var('func_6650')
call_6651 = func_6650_call()
output = call_6651
func_6652 = relay.Function([], output)
mutated_mod['func_6652'] = func_6652
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6180_call = mod.get_global_var('func_6180')
func_6181_call = mutated_mod.get_global_var('func_6181')
call_6678 = relay.TupleGetItem(func_6180_call(), 0)
call_6679 = relay.TupleGetItem(func_6181_call(), 0)
func_6514_call = mod.get_global_var('func_6514')
func_6516_call = mutated_mod.get_global_var('func_6516')
var_6684 = relay.var("var_6684", dtype = "float64", shape = (1755,))#candidate|6684|(1755,)|var|float64
call_6683 = func_6514_call(relay.reshape(var_6684.astype('float64'), [585, 3]))
call_6685 = func_6514_call(relay.reshape(var_6684.astype('float64'), [585, 3]))
func_6034_call = mod.get_global_var('func_6034')
func_6036_call = mutated_mod.get_global_var('func_6036')
call_6689 = func_6034_call()
call_6690 = func_6034_call()
output = relay.Tuple([call_6678,call_6683,var_6684,call_6689,])
output2 = relay.Tuple([call_6679,call_6685,var_6684,call_6690,])
func_6707 = relay.Function([var_6684,], output)
mod['func_6707'] = func_6707
mod = relay.transform.InferType()(mod)
var_6708 = relay.var("var_6708", dtype = "float64", shape = (1755,))#candidate|6708|(1755,)|var|float64
output = func_6707(var_6708)
func_6709 = relay.Function([var_6708], output)
mutated_mod['func_6709'] = func_6709
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5556_call = mod.get_global_var('func_5556')
func_5557_call = mutated_mod.get_global_var('func_5557')
call_6837 = relay.TupleGetItem(func_5556_call(), 2)
call_6838 = relay.TupleGetItem(func_5557_call(), 2)
func_4074_call = mod.get_global_var('func_4074')
func_4075_call = mutated_mod.get_global_var('func_4075')
call_6839 = relay.TupleGetItem(func_4074_call(), 0)
call_6840 = relay.TupleGetItem(func_4075_call(), 0)
var_6871 = relay.var("var_6871", dtype = "float32", shape = (990,))#candidate|6871|(990,)|var|float32
bop_6872 = relay.left_shift(call_6837.astype('uint8'), relay.reshape(var_6871.astype('uint8'), relay.shape_of(call_6837))) # shape=(990,)
bop_6875 = relay.left_shift(call_6838.astype('uint8'), relay.reshape(var_6871.astype('uint8'), relay.shape_of(call_6838))) # shape=(990,)
func_252_call = mod.get_global_var('func_252')
func_254_call = mutated_mod.get_global_var('func_254')
var_6887 = relay.var("var_6887", dtype = "float32", shape = (99,))#candidate|6887|(99,)|var|float32
call_6886 = func_252_call(relay.reshape(var_6887.astype('float32'), [9, 1, 11]))
call_6888 = func_252_call(relay.reshape(var_6887.astype('float32'), [9, 1, 11]))
func_5538_call = mod.get_global_var('func_5538')
func_5539_call = mutated_mod.get_global_var('func_5539')
call_6892 = relay.TupleGetItem(func_5538_call(), 2)
call_6893 = relay.TupleGetItem(func_5539_call(), 2)
func_6142_call = mod.get_global_var('func_6142')
func_6143_call = mutated_mod.get_global_var('func_6143')
call_6904 = func_6142_call()
call_6905 = func_6142_call()
output = relay.Tuple([call_6839,bop_6872,call_6886,var_6887,call_6892,call_6904,])
output2 = relay.Tuple([call_6840,bop_6875,call_6888,var_6887,call_6893,call_6905,])
func_6920 = relay.Function([var_6871,var_6887,], output)
mod['func_6920'] = func_6920
mod = relay.transform.InferType()(mod)
mutated_mod['func_6920'] = func_6920
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6920_call = mutated_mod.get_global_var('func_6920')
var_6922 = relay.var("var_6922", dtype = "float32", shape = (990,))#candidate|6922|(990,)|var|float32
var_6923 = relay.var("var_6923", dtype = "float32", shape = (99,))#candidate|6923|(99,)|var|float32
call_6921 = func_6920_call(var_6922,var_6923,)
output = call_6921
func_6924 = relay.Function([var_6922,var_6923,], output)
mutated_mod['func_6924'] = func_6924
mutated_mod = relay.transform.InferType()(mutated_mod)
const_6956 = relay.const([[[7.034328,-3.509107,-6.335921,3.397227,5.525020,-0.577314,-2.408878,3.222857,5.254280,9.198148,-4.108563,-3.762059,1.312715,1.073109,-0.623673],[-2.270640,-7.039611,-2.306959,-4.999244,0.119481,2.161318,-3.362128,4.849404,-6.495545,1.848054,-5.592481,-1.199357,-1.853478,-6.770988,-6.883293],[-8.228857,4.146454,1.169067,-1.569560,5.761870,0.923711,4.838447,-7.311544,8.343092,0.130608,-2.910579,-6.007179,-3.653726,-3.272681,-4.500501],[9.808478,3.914496,8.748470,6.044300,-7.657854,3.301907,0.437280,9.931802,6.182451,-9.011983,9.832022,-2.764055,1.110275,0.401876,-6.278673],[-8.541875,-7.674229,-3.119270,-2.569604,3.917341,-1.020360,-4.623226,-3.367271,1.139125,-4.799123,-5.119338,-7.290534,9.972205,-2.687502,8.098227],[-3.323870,-8.106478,2.227314,-4.346300,-1.384703,-8.841001,-8.141311,-0.308959,-1.254588,2.558287,-1.932620,4.313331,-0.236091,-8.455629,2.119520],[0.165760,-4.751603,-1.186856,-4.325904,3.391434,8.373312,0.705627,3.475249,-1.832044,6.916386,-6.463797,7.660742,-6.071504,4.287655,-2.592019],[-4.772336,-3.130965,-3.547210,-3.013703,-0.705986,6.368258,1.020729,6.198797,1.481262,6.344107,7.141038,-9.680589,4.418517,1.772156,5.085382],[3.458180,8.795728,-1.119952,-3.739390,5.982603,9.120777,-1.684626,7.630144,9.650561,9.538657,-9.800760,-3.574666,-3.191877,8.233803,-6.267837],[4.815649,5.284723,-3.277517,-9.584813,-4.086868,5.283576,8.366325,0.107250,8.886528,0.998573,1.748976,-7.562041,-7.017390,4.757798,-3.898192],[-7.230061,2.623706,-7.156993,-1.878571,-0.215252,-9.054353,-0.756241,-5.763830,1.819499,-5.755693,-9.600786,-0.882847,0.953124,9.576435,-3.806903],[4.840703,-5.406539,-7.283247,-3.632134,5.707172,-4.810930,-8.980866,2.725097,-6.702964,-8.991156,4.258501,-3.776570,3.557230,-8.420145,-1.216372],[-6.655838,-7.358771,-2.851292,-8.718728,0.323364,2.394650,4.370008,-3.895513,-1.401366,6.054517,4.946547,-4.584463,-9.413631,0.146362,-4.234349]],[[-9.318391,2.936566,4.168258,4.881936,-2.899047,-0.817162,-9.771245,2.589134,-1.667964,6.932358,1.908412,3.668790,-1.030100,8.608341,-2.313663],[4.497614,1.149533,0.311832,-2.735067,-2.375473,1.887714,4.860428,-4.336933,-3.091063,-9.879660,5.438365,-7.331677,9.645222,-0.357747,2.300995],[8.452164,7.410808,8.466403,9.555250,-1.602299,9.720678,-7.385432,5.178224,6.758858,-6.112842,-6.000364,4.215982,-3.427755,2.817475,-8.288991],[0.638624,-9.990931,-3.748268,-8.378069,9.234914,3.181569,-9.297363,3.788047,-0.150941,-9.969565,0.741171,-1.869388,4.962486,2.797298,-9.979855],[5.144099,5.286754,-1.409156,-3.321525,-1.343366,5.451002,-5.058833,0.080625,-4.930385,-4.456530,-0.093391,6.603860,1.113179,5.152935,4.929769],[-8.158465,-0.525207,-3.847488,1.544544,5.001098,3.652537,9.371588,-8.404985,6.030882,-8.268756,3.648105,9.509451,-8.569641,-6.566980,-6.664425],[7.068013,-5.866962,-1.952996,-2.096246,5.079183,0.665901,6.689787,-7.633864,-9.144878,-5.975526,-9.645493,7.793699,-4.246390,-4.833972,-6.671578],[-6.834830,0.743788,2.947339,-1.637617,7.369456,0.852128,-7.817271,2.548691,-6.335171,-2.381182,-2.253552,8.282946,1.067612,1.487996,-6.632937],[-6.144808,7.409405,3.979370,5.182818,5.718041,-0.138481,-1.452668,4.004695,2.671584,2.098263,-9.517266,-2.984875,3.571842,3.298539,5.320003],[-6.456667,-0.695003,2.064138,-5.491023,0.946210,6.881559,-6.763629,-1.653415,8.159823,-7.278774,-4.847659,7.124912,-5.221218,-8.551889,4.885397],[7.147946,1.844185,-2.324845,1.488484,6.530022,-8.827688,-2.172846,-0.202687,-2.964728,0.378939,-9.410025,7.672038,-7.664156,5.038792,7.897289],[7.866433,-0.374479,-0.864087,5.691886,-0.185051,9.050716,-7.080496,7.428537,-8.780186,-5.912546,-0.650863,5.366351,-6.418119,0.116711,-0.912354],[9.521806,2.851172,-3.587413,-7.711240,-4.334855,8.014565,8.675399,6.945311,-2.524999,-2.274194,3.234317,-7.845402,-4.553319,7.476359,-9.951879]],[[-2.616506,3.579274,4.702409,8.417758,2.591321,-9.986777,8.407729,-3.172400,9.943003,1.697557,-9.549147,-1.901844,7.644766,4.676594,0.293607],[8.727264,8.158506,8.263620,-6.499063,-0.070429,-8.694161,-3.797312,-8.198716,2.888985,-7.299003,9.699597,8.178947,4.791485,-9.617658,3.057029],[-4.855271,0.839734,3.490650,-6.199243,-6.921333,-5.182965,-9.323629,-2.795951,6.871860,-5.741172,-2.059817,-2.790978,6.207090,8.745213,9.704885],[2.087796,7.855961,0.929683,-1.568583,-7.128382,4.359980,5.723074,-1.431569,-7.769268,3.416586,1.372438,0.044701,-6.565491,6.216741,-7.264023],[-2.070582,-8.286740,5.394438,5.285944,6.638408,-4.160607,-0.838194,-3.300402,1.636330,-6.446269,1.413959,2.874940,-3.614975,-6.666685,6.254647],[-4.509522,-7.360881,5.414045,-7.736164,1.964497,-7.237750,-5.714868,-8.448388,5.163290,-4.032302,-4.407065,2.925705,-8.113239,0.086914,9.950988],[0.842371,3.386720,-9.177790,2.267102,8.237389,2.596664,-2.719507,-6.983794,-2.314432,1.799755,2.810583,6.814720,3.060770,-3.667709,-5.097724],[4.165569,6.878086,1.557978,2.287219,4.923958,-5.490153,-1.338560,-1.761171,5.060399,7.683255,7.443012,-7.044784,7.941001,-2.544652,6.328984],[-6.832916,0.257378,3.054366,6.423182,7.241239,6.336837,5.961363,8.371282,-8.638639,1.008765,0.919226,-2.738743,2.908599,7.635549,-5.640786],[-0.577815,1.589801,-5.537259,-6.360776,2.462447,-7.674677,9.045461,-5.034059,-2.463193,0.675327,-9.235700,-9.197168,9.986770,7.725464,-2.475075],[4.291708,-5.594523,-2.817922,0.123837,-3.975930,-2.892165,0.793316,9.604713,-5.231648,-6.074561,1.473179,-7.628230,4.396682,3.894430,-6.176539],[-8.989999,-2.022909,-7.567125,-5.510348,5.507881,-5.387337,2.551197,-9.875267,-0.759464,-5.442580,-3.485727,2.565016,-3.292139,-8.848578,8.515580],[6.460112,-3.712941,-8.812301,-7.925923,-3.133380,-3.943785,1.241586,-7.781549,-6.291058,2.539181,6.445839,-0.394969,-4.053767,-3.669098,-1.809821]],[[-4.635046,3.125884,8.672207,7.577150,-4.162828,4.221868,2.085961,9.964222,-5.385295,-1.436968,-5.836153,-7.808989,-5.158681,0.721576,9.594502],[2.991375,1.870916,9.673778,-0.784890,-5.917337,-4.589863,2.162038,8.403953,-9.146883,-2.753725,1.237585,-9.889730,3.108336,-7.263880,9.443522],[-8.248944,5.424422,-6.911408,-4.516333,-2.187938,4.724024,7.191615,-2.442764,7.480983,-3.707175,7.794483,6.718824,5.635645,-9.237054,8.238857],[-2.357705,-4.480307,-9.288939,-5.196175,-3.974147,9.583496,7.749645,-7.581832,5.166391,-3.935828,-6.709158,9.687852,-4.867221,-9.108341,7.531113],[-4.107649,-2.893341,2.739006,4.013819,7.476436,-3.906980,-9.070047,3.446403,0.642617,-8.568573,7.896846,9.292773,-6.388583,8.603022,5.406566],[9.544397,-9.151440,-6.207500,-7.565534,2.197403,8.134840,-0.074288,-6.320954,7.908289,4.912229,1.446878,-6.904228,4.208017,-1.087827,7.321753],[4.968169,-2.701615,-5.241040,-1.938203,-1.454128,1.144840,5.483756,3.592495,2.850652,-0.414847,1.182724,0.610713,-0.086740,-6.999204,-6.200184],[-6.336950,-0.767758,4.178120,-6.165262,7.609025,-3.459967,-1.419807,0.873419,2.259747,-3.845290,0.523125,4.869101,0.522678,7.959762,1.164646],[-4.909707,-9.694907,-3.074098,4.569846,0.452165,7.823676,5.857600,7.975748,-3.793547,-3.168670,-7.690858,-4.743930,-9.781975,-3.843897,7.416833],[7.644624,1.602720,9.658281,-2.700182,-4.849236,4.086917,0.601884,-0.162919,8.405202,7.907982,6.690251,1.691029,2.375896,-1.241431,-6.166239],[5.102396,1.284185,9.398099,-6.491825,3.343719,0.986196,7.672386,-5.044962,2.877484,-9.029837,6.134060,2.935083,7.610399,-3.312530,-3.392509],[9.247314,0.804395,-1.883316,3.501237,-6.435321,-4.591897,-6.191979,-7.238528,9.804643,-6.156942,-3.710502,6.981105,7.966049,-1.943945,-4.848187],[-3.690888,9.641754,-2.986623,-5.371259,-0.816554,2.028028,-6.771643,-9.269157,-7.156088,-0.395855,3.002767,-6.543790,-8.164974,6.540610,5.320819]],[[3.963784,-4.559729,3.835519,4.802390,-8.334507,-6.031553,-2.161892,8.207457,3.831664,-4.970787,2.996676,-8.680023,-8.758479,5.205911,-7.156617],[-1.687011,-1.475868,-4.787959,8.831155,9.038710,6.932076,4.743857,-1.228507,7.820250,-6.533707,9.198128,3.431719,9.060440,5.779612,-7.320151],[-9.075513,8.894563,7.560973,-5.839598,5.181069,-9.440530,-9.790922,-0.535213,8.161158,-0.818365,7.208489,5.872787,-1.560465,0.124150,6.619533],[0.391196,-9.999124,-3.989627,-8.444379,-9.897759,-2.123020,-3.124016,4.050653,9.658161,-1.639806,-7.251528,3.947791,7.402898,9.424399,6.964805],[-3.208151,-4.227424,-1.953496,-4.883546,3.736918,-2.722913,7.822045,-5.233739,-6.169067,4.506511,-7.426413,-3.250818,1.215624,9.342845,-4.475769],[3.413584,3.105763,7.517549,-7.514490,-4.984611,8.502983,1.129755,8.461519,1.584231,7.968671,2.911410,-2.934095,-0.227196,8.808624,-5.690195],[-3.033016,-4.346679,5.605588,5.961495,0.886885,-2.759005,9.498913,4.487345,4.485171,-6.232179,-5.077688,-7.247288,7.123693,-1.862586,-0.137086],[7.156878,0.132213,-2.343990,7.469831,-5.200393,8.806600,8.669386,7.964745,-2.313283,5.742416,4.407704,-6.217539,2.735603,-3.628175,-4.196541],[-3.741514,-0.470543,0.643653,6.647256,-4.469388,3.690573,-2.524029,-9.605073,3.385490,-3.789398,0.138330,-0.799593,-9.494688,-6.028211,-3.804006],[6.981000,-4.621179,-7.736837,6.974192,-8.889009,1.096796,3.852242,2.154084,6.826788,-4.599475,6.666262,-8.531559,1.185614,0.581263,5.750129],[-1.864831,8.379375,-1.023358,-3.536090,8.925972,-6.437637,-1.181355,-6.586204,1.707109,4.335458,5.394342,-3.969587,-9.692227,-8.435610,7.272193],[4.892163,7.493600,-3.662223,-5.257233,3.490361,9.184285,5.299069,3.528090,7.676021,7.969050,8.207741,-2.508262,-1.567774,2.040760,-3.439595],[1.991114,6.774907,-9.577295,-4.625820,-8.530503,-3.063183,3.542564,-7.034620,6.680168,-3.243422,-4.748983,-4.307176,8.530954,7.784324,6.342648]],[[0.259987,-4.807362,1.556475,-4.855357,0.531441,5.410028,-1.498491,1.797460,-3.089092,2.073818,-2.770595,-6.473887,-4.900389,8.345344,-5.005672],[1.802949,9.935966,-9.040120,7.506805,0.835795,-3.179137,-3.279068,0.150343,5.421090,0.318094,-7.176364,-7.244622,-6.387148,-1.857738,-2.986509],[-4.421997,-7.167243,7.201469,9.341987,8.313974,-8.193868,4.471740,7.692494,-4.828155,-8.316501,7.685991,6.830011,8.707093,-7.958600,-4.211806],[6.378927,-7.365188,-5.617614,-1.577022,-9.563428,-2.818487,9.873106,-9.839103,0.097204,1.928538,-8.561425,-1.068726,-4.280070,0.090850,-1.238152],[-8.769996,-8.212077,0.974413,-9.004193,-3.577465,-1.772020,8.623846,2.754570,-8.381994,4.197229,-5.571490,-4.688183,6.968254,2.011456,4.158351],[-1.561893,6.480217,-4.988546,-3.228305,-5.588416,-2.571481,6.752598,5.860192,2.736331,0.131823,8.907654,-8.342193,0.128374,3.557869,-5.912592],[-2.518588,-8.822682,8.634330,-2.566896,4.328259,6.691136,5.760534,-5.539176,3.462943,-8.835832,-4.473625,-5.433461,4.863862,-9.274063,-7.434817],[5.965970,-4.757602,-0.501263,8.062832,4.072366,-0.459636,-2.389832,1.594308,-5.909671,-8.392054,-6.076105,-5.136212,4.988426,-1.603319,-2.527628],[-6.851155,4.180929,3.163357,-5.900548,-2.201436,-9.092707,-7.028420,6.931421,0.292094,-7.379071,-8.519682,-2.218499,-9.289198,4.807402,2.644142],[8.177392,2.691728,-0.392536,4.762375,4.521415,-0.617777,-9.276779,-6.361847,2.550366,1.217105,2.886959,-8.028645,-6.953711,6.493820,3.966170],[-9.702763,-0.290362,4.594137,-0.031975,-6.049429,-5.240010,6.713633,7.942665,-3.695669,4.462804,8.859798,-9.769263,-1.220846,-1.977288,-9.066696],[4.144077,-1.151443,-0.219428,-6.858923,-4.914143,0.629766,-7.890627,4.184109,-1.019520,-3.777759,1.018668,4.060668,1.839733,6.999108,0.633410],[6.570377,-3.173310,9.206276,0.567799,6.656197,-1.948427,-1.445978,-8.565897,-6.567796,-2.864377,-7.019700,-7.546765,0.440173,-0.282020,9.805169]],[[-9.570211,-7.234915,9.348063,9.226119,8.599801,-5.043700,8.916272,-3.771490,8.388597,2.167123,5.403279,5.598906,8.620757,3.186438,0.695713],[9.056835,7.535116,-2.907653,0.363128,4.489421,9.149677,-9.514768,7.600372,-4.321014,-5.466397,-6.295878,7.252589,5.331815,-3.463928,-6.474592],[-5.576474,4.031216,3.162953,-1.876330,7.731024,-1.488180,0.943031,-7.764032,1.444275,3.992447,-2.050777,-4.813417,-8.791178,-3.964860,-2.885943],[-2.995183,-5.737310,6.870501,-6.962360,5.851133,0.105564,-7.830541,-5.857543,7.429730,0.390137,9.769965,-3.714422,7.274534,-8.563752,6.176212],[6.347350,7.475877,4.843122,3.813714,-1.533109,-9.581044,-4.100932,-4.883108,9.528505,4.251833,4.849008,-5.373751,-2.290664,-1.303038,1.047630],[4.478790,7.252769,-0.433061,6.527990,-4.441700,-0.048249,-7.325130,9.529243,-6.230981,-9.200939,1.910248,-4.941202,-7.365359,-4.029092,9.654769],[-2.793709,-6.916876,9.268444,6.834968,-4.214226,-0.491396,-9.963566,-8.036375,-9.851478,-8.918732,-6.823395,-3.836971,2.482496,4.080091,9.033752],[2.989694,3.924434,1.218563,-6.137152,-2.165270,5.553353,-8.471505,1.276210,1.080561,8.314108,-5.717135,-3.940481,-3.042037,8.018492,6.322975],[3.667918,4.570796,-4.119541,6.388907,8.362441,0.166682,9.375354,-7.846292,-4.213941,-5.038355,2.399667,0.557558,0.386711,7.670037,9.557457],[5.264338,2.801872,-0.092351,9.594308,-2.955997,2.739030,7.333625,6.700781,9.982758,-3.741442,2.191096,-4.321317,1.023131,6.464371,7.110549],[8.686618,0.342055,0.476636,-1.662194,7.063427,0.893127,-8.581026,8.575603,-6.003556,-3.788788,-2.522526,-3.759786,-9.825018,-3.657623,-2.281405],[8.316354,-7.238291,-0.500552,-2.246122,6.211035,4.047544,-4.196189,1.770339,-5.432431,-7.705260,-7.821098,-1.445392,7.633900,-3.104064,-0.103790],[7.637852,-6.506568,-7.680200,3.070147,5.059404,8.125192,9.945919,7.223379,8.369611,-9.147741,-0.247340,6.269864,1.726609,0.133442,-7.912435]],[[-6.527570,6.262457,-9.735014,9.313318,-6.885032,-8.613710,-8.439010,5.121703,-8.256785,9.601752,-9.517594,-7.798083,-0.090847,7.021736,8.431997],[-2.025351,9.162791,1.424165,2.557846,-9.768103,2.609560,0.125768,-4.980015,2.674010,-2.864113,-1.426480,-7.849927,-7.648820,-2.839219,1.171532],[9.368684,-5.829031,0.571481,-0.264658,-4.679064,9.580416,0.085581,5.691915,2.986974,2.577634,6.288014,3.326271,-4.606977,2.516206,5.649836],[-1.439284,-9.504507,2.472032,-6.570787,-5.776019,-6.190206,3.018700,0.211099,-7.329882,1.554942,-7.512950,2.867560,5.462382,1.459433,-9.595830],[6.209859,0.011590,5.962822,3.344445,5.480471,4.495111,1.721526,8.801915,1.116338,-2.258368,1.089962,-9.847440,-6.810874,-2.226471,-3.485622],[-4.232780,-0.406404,3.093804,-8.692329,2.727587,-2.672385,-8.211690,1.147278,-0.231555,7.560071,-1.224537,8.335008,0.005247,-2.227502,2.926413],[-5.509117,-2.788136,-1.558649,9.388095,-3.105053,-8.434587,1.617456,2.204390,-6.023893,3.109687,-5.282884,5.074058,-2.444647,6.131564,-6.452163],[3.648760,-7.540139,6.903082,5.287915,7.966355,-0.241797,9.795645,-3.388481,-0.537485,-4.997998,-2.678354,5.638731,4.782048,-5.126263,-7.491952],[1.129967,-0.761937,8.474791,-2.248381,-3.641992,3.366987,3.993193,-9.055453,3.214328,7.405165,-6.540549,-9.806188,4.116225,-0.428159,-7.816285],[-7.939391,-4.852970,8.051538,0.717846,8.609587,3.657277,-5.820786,1.058085,7.703084,7.022313,-5.092687,-2.375997,-4.615108,-7.586420,-7.106968],[5.555514,1.865593,2.742024,-5.250122,-3.353806,-5.495527,-3.193291,0.873493,0.835735,-3.549223,3.992790,-6.165861,7.412833,4.618336,0.907436],[-6.605039,-9.639555,8.582140,-5.991709,-8.690598,7.905042,-1.818580,0.512237,7.498246,-6.979593,-1.498237,-6.954950,-3.184937,0.393466,-8.481571],[6.758082,2.924920,-0.637954,2.752949,-2.952970,9.633900,-8.944652,0.783488,8.365226,-5.208745,-1.680209,9.831695,4.472409,-2.843328,1.002838]],[[-2.991378,7.467628,6.602978,-3.659285,-5.677779,-1.072847,-0.411722,-1.257839,6.274038,-8.794542,7.848519,-1.622927,5.156425,-9.357440,-6.180257],[-3.305760,-1.208203,-5.332166,2.383499,-8.083949,-6.819796,-3.617228,3.274979,-2.513209,-6.566485,-2.734796,-4.342665,3.776163,8.937926,0.241142],[2.503986,-9.301326,-0.218065,9.949057,4.367650,1.823018,9.605719,-9.625767,-0.381765,0.542563,4.090365,6.664818,-9.714525,9.765388,-5.780314],[6.343867,1.449785,-5.462933,-1.614133,6.765793,7.868626,1.905903,-0.927594,-1.866602,6.571645,-3.150711,5.908450,-6.154784,-9.926502,5.420880],[-9.248429,-9.804591,-4.365037,0.467978,4.387682,-9.343681,-5.258868,4.465771,0.478389,2.279588,6.629972,9.629680,0.796729,-0.108759,-2.453830],[0.695662,-0.863506,-2.959416,-3.747610,9.753709,-4.625933,-9.183153,-6.507919,-5.403773,5.479774,-0.944271,4.309003,-2.829592,7.228995,-5.951381],[-2.359845,-1.047943,2.503455,-5.719731,4.703877,2.334644,0.691309,-4.677032,6.707801,-1.935048,-4.043340,7.573007,-7.674193,1.831671,-9.338703],[6.914628,9.989712,8.371524,-0.403722,-4.402451,-7.211648,-3.108536,6.310407,6.189655,6.192370,-5.066981,-4.680624,9.096289,0.946331,-1.483697],[-4.941264,-5.994722,5.826949,-5.129323,7.655256,4.213571,2.960266,-0.518284,-3.129339,3.108273,2.404462,-0.019260,-3.402104,-2.188579,-8.047169],[7.961518,5.188210,-3.072444,-8.121808,-4.929312,8.123329,5.418431,1.366090,5.847692,3.631848,2.838338,-4.045698,-7.064882,1.181106,-6.426499],[8.545667,-0.891027,-1.150195,5.250015,-8.119192,-2.588309,-7.839845,-9.504201,0.846456,8.001019,-1.729191,7.049285,-2.968959,8.251781,2.171184],[3.877824,-9.184686,1.220639,-1.201555,5.482224,-8.502755,-4.242469,6.477776,9.086141,3.114525,9.345677,9.234549,-0.462361,-5.078114,-0.887012],[-6.193295,-3.481373,9.846860,9.326497,-3.765091,-7.379107,-8.362345,3.786220,2.793639,0.820522,-3.177802,6.346139,3.193126,9.713908,5.203507]],[[4.090853,-5.141936,-2.290336,3.209167,9.868855,-7.221693,8.706842,3.667876,-0.354270,5.580074,3.309944,-6.060560,8.664128,-7.117472,5.275765],[-9.531268,1.920021,-4.105284,2.188901,3.468179,-6.199970,-9.033313,2.140121,-9.800559,9.533799,7.210815,0.134559,5.385474,9.634751,-0.723206],[0.452412,-0.043856,5.064217,8.937897,-6.489509,4.229468,-3.672778,-7.988318,9.371043,-4.573135,-3.338798,7.639714,8.522384,6.673112,5.991239],[-7.767127,-0.857961,4.039689,9.062035,-6.032412,-9.842419,-9.186310,-4.663115,-8.121695,-2.942421,-8.926017,-7.311902,-8.473932,-2.977109,-6.832268],[1.345579,-4.338151,4.276156,5.099913,-7.760235,3.667448,-4.739421,-5.848434,-6.343227,-8.827184,9.759605,-4.111234,3.494585,9.915153,-6.704358],[1.956957,-1.738297,1.928303,5.515456,7.401300,1.581459,-9.231031,-0.542890,-5.590837,0.749672,9.704789,9.624092,-4.802266,8.105517,-9.320965],[-6.879657,9.038645,3.993357,-6.812633,-2.792079,7.845063,-2.963505,3.786317,-5.077074,-3.786381,-2.331709,-9.051209,1.791571,-9.877150,-8.990952],[-3.479838,-4.314468,-7.230190,-3.925702,2.566760,-7.741881,-7.713133,-1.464719,2.642475,6.363710,6.767173,-6.981537,2.806394,-5.829460,-0.768961],[-1.030167,1.458192,-7.712526,0.904261,5.385735,7.140674,9.915019,-6.568744,9.026587,-8.334795,7.847932,8.896120,7.350477,1.967412,-8.519835],[-8.677372,-4.328628,-0.107506,8.136552,-3.957823,-8.252357,-7.769350,2.820372,3.418616,5.856654,-0.424036,6.572136,-0.931190,-5.793151,3.571487],[0.684744,-4.884300,6.169461,-7.932556,-3.562370,6.853844,0.838262,-9.249200,7.007135,4.583198,8.711260,0.198133,0.998391,7.826702,-4.429483],[9.348038,-0.842484,7.613357,-5.090486,2.372226,-0.662530,2.885017,-0.541779,6.222996,1.648361,-9.563631,-3.449922,-4.134870,0.352527,2.298866],[-5.840446,9.158379,-7.131769,-8.081535,8.295170,1.819109,5.043841,4.716208,-9.039922,6.632375,9.138725,-6.748633,3.980743,-3.789790,-4.837318]],[[-7.952146,-0.099038,-2.604289,6.091328,9.791404,-1.442936,-3.435941,4.368596,9.098955,-7.439926,0.769484,9.509864,0.858441,-2.907715,5.996428],[-0.445747,2.867795,-6.860703,7.398975,7.699983,-6.240985,-4.410589,7.786581,-8.844213,5.421718,4.974259,-2.824889,6.908163,8.251893,2.176542],[-4.954114,9.158764,-2.575733,1.479875,5.899154,-1.288440,-5.282700,-6.640301,-4.622289,5.451266,-0.198358,8.189554,5.637783,-5.418763,-8.530522],[4.979664,1.074292,8.179662,-5.214276,-3.746502,8.918338,3.587136,9.364600,7.226408,-1.507253,4.734200,2.245294,-2.317286,2.307275,2.342990],[-2.809120,8.043842,9.075073,-1.868886,1.865836,8.453548,5.974087,4.417262,6.161521,6.852039,0.686364,-9.553402,1.835778,1.009166,6.599527],[-3.598875,5.025722,-0.987677,-2.934034,4.952149,4.638348,-8.947178,6.217519,6.103216,-6.635039,5.433268,6.114207,-1.221950,-6.520990,-4.931456],[7.505974,7.678683,-7.001319,5.072602,-1.755887,-2.707037,-1.723940,4.471582,-9.607880,-8.980570,1.695442,-2.310734,5.081782,1.240940,-7.470633],[7.640121,-3.099346,3.302728,-2.479914,-5.667278,9.838773,-5.370898,1.083023,7.675784,-7.569509,6.769033,6.000791,8.776274,-8.726192,-4.183987],[-0.298837,-8.595632,3.336346,7.856993,8.578986,-0.195811,-5.886765,-9.157824,-7.665892,-1.345049,6.181401,-0.061330,1.781021,7.940076,-8.302449],[6.932898,9.806818,-0.781112,3.152202,6.091094,5.375447,0.604219,-4.532524,1.184969,0.038046,-9.063617,3.083327,-1.535125,-4.502676,9.535478],[8.178545,4.833018,-1.852152,4.481490,3.507291,-4.963909,0.751111,-0.495914,1.195139,-3.305701,3.083789,9.301342,-8.123188,-4.467332,5.468024],[2.750101,-4.860032,-3.697388,-6.568629,-0.801135,-4.672786,-3.518663,-9.090319,9.314660,4.063362,-3.702164,-4.355918,1.694446,0.871219,6.040386],[7.223351,-9.356878,8.347614,7.219698,-2.394205,2.667679,-8.978412,-0.106668,6.061006,0.120451,-2.625267,3.569872,5.509994,4.373959,-1.338801]],[[-7.682455,2.982135,6.336849,6.177531,2.552125,-0.422733,-3.939330,-1.549167,5.164310,-8.384062,-1.154981,4.390045,-1.251982,2.823163,6.196530],[-7.476000,3.155433,-7.543627,2.036021,8.249861,-0.560290,8.683253,5.013890,5.945411,4.879241,6.095319,-1.593462,-4.996556,5.258079,-2.569258],[5.217278,-1.902995,7.296542,-7.066401,-0.165239,6.922302,9.129587,5.817519,-6.111220,-6.061895,1.839055,-0.470335,-6.595081,-6.609478,-3.292544],[-5.030025,0.517179,-8.641089,-4.456766,9.466000,0.273073,9.231734,-1.192260,9.210767,1.111442,-5.933275,5.935580,1.492212,7.853973,8.979320],[-2.363802,-5.391908,9.156466,-6.446605,1.648432,-0.642505,-9.466180,6.032422,0.451893,-7.508812,-3.468310,3.882611,6.573013,4.086410,-5.900502],[-8.723781,3.680468,-9.709566,9.992293,-3.115909,8.366734,7.776710,-1.634107,-7.266339,6.172371,-3.856691,5.687143,5.499351,-3.196201,-2.841660],[-3.891507,-5.498125,3.632068,-2.265249,6.108346,6.189568,3.167423,2.332134,3.427985,6.196938,-5.997922,1.944590,0.123309,-3.636958,1.867381],[-1.893915,0.017081,2.371459,-5.538496,8.173274,-2.611923,-4.326306,-6.060807,0.180574,8.196106,-2.566400,2.579223,2.899592,9.363998,-9.900730],[-3.498029,-9.653639,3.323891,-4.240083,1.467148,-5.832928,-3.788262,4.007357,-7.980115,2.547928,-8.423472,0.481113,0.032089,-5.527360,-5.854560],[0.416157,-9.614656,-2.355134,-4.279029,9.416639,-8.299538,8.964807,-2.223668,6.238786,-9.602890,-0.633674,2.033619,-3.776128,-7.981494,9.476026],[6.338133,-6.489882,-9.657557,-9.061641,7.205500,-7.094119,1.126743,2.723430,-5.020188,-1.768063,5.287254,9.158599,-4.490216,7.855192,6.616857],[2.614061,2.424772,-8.983634,-5.847982,-1.529416,-9.027926,5.841601,2.429285,9.305636,-0.917379,-5.537833,-7.934261,-4.866926,5.103972,9.693597],[-0.736881,3.210868,-4.326189,5.268893,-4.715680,2.761326,-7.939920,-5.171464,5.892906,2.566660,3.582887,6.418558,-9.406919,-7.969510,3.172800]],[[-0.573011,-3.394504,9.964531,7.865601,8.238409,6.035926,-2.458165,-2.514989,6.473647,-7.966302,9.551121,-4.382621,6.798579,-0.648259,-0.212189],[6.084163,8.728246,-5.650432,9.626721,9.631357,-1.213017,0.345840,-1.245330,8.426670,0.092703,-7.230372,-4.225549,4.399781,0.786871,7.717044],[5.160115,-2.872406,9.116859,0.655452,-3.896631,1.634793,4.194916,0.126137,-0.815725,7.645148,-5.267504,-6.590338,-1.737353,-8.355175,4.355278],[8.221452,9.214149,0.891575,1.447354,2.757046,3.548218,-0.494087,3.654079,-0.378094,-8.795904,7.860150,-0.518031,8.751735,6.464492,-7.458339],[-0.448196,4.326118,-3.341915,-8.467417,2.614506,6.956507,-8.328069,-9.657861,-9.341375,-0.195927,-9.663238,7.830505,3.447307,-3.132971,3.888443],[-2.464423,-5.287360,0.815807,-0.334395,-4.823915,9.277324,6.057565,3.618307,1.471751,-5.411350,6.167548,4.242832,6.574245,0.327953,2.987837],[5.748047,-0.839020,8.695390,-2.626412,7.743711,6.233869,-0.358220,9.914436,-6.252435,8.261251,-0.228629,-9.960568,-7.804403,-9.223478,7.859806],[-1.987392,0.629349,-0.678946,-3.199245,2.211570,-1.853012,-2.188472,6.471415,-2.064431,-7.549779,-4.908387,-4.700348,-5.103497,9.800668,5.360378],[-0.798762,8.382502,-1.058991,-6.637337,-3.445711,7.111771,-3.097453,4.485237,1.463906,-9.860541,-2.634164,-1.860487,6.447233,1.533068,1.496341],[8.806323,-6.718234,-3.764221,-2.847140,6.862331,-6.814988,0.329056,-6.433651,-3.591177,6.191944,2.155172,5.178013,-5.162621,-7.730538,3.105041],[-1.589707,8.132534,5.283604,-6.396622,-7.097200,-8.649976,-0.733584,6.210904,9.295553,-3.673712,-9.688291,-1.400940,5.491219,-7.098507,-2.077607],[2.109696,-4.784525,0.163862,-0.510459,-1.281886,8.004637,9.995957,-4.243184,-8.182921,-3.881275,-4.857495,-3.485794,4.920626,-4.922419,2.805471],[6.381904,1.061295,2.096986,-2.702474,-1.300260,-8.182022,8.557060,5.579788,-7.397490,0.460674,-2.716233,-8.490832,-8.383120,-0.810562,7.683153]],[[0.401649,4.472966,5.330298,7.431708,-3.118587,-6.210411,8.432176,2.098644,5.338354,-3.700526,-1.457239,1.971498,6.335831,-3.720781,-3.921584],[6.453873,5.017718,-0.996186,4.080862,-6.443843,-2.386526,-8.399763,-1.254438,-1.639113,-5.433067,5.558070,-2.666334,6.182588,-8.498124,1.486830],[6.610248,1.417134,7.134733,0.786024,2.768552,9.032022,-9.132738,-9.189030,6.600703,4.492328,6.203704,-2.347901,5.902953,-3.324891,-3.121659],[-1.272795,-4.088713,-9.628248,6.855036,6.417191,1.165454,-3.192037,-2.390289,-5.717852,-1.880951,5.612209,-3.526789,9.480002,9.760936,-6.617450],[2.940204,-0.489444,-1.897184,-6.204696,-1.142081,-3.532411,-4.106648,-8.736587,4.203789,-4.050084,-1.193187,-6.289887,1.929740,-3.709804,0.790664],[-5.345862,4.239178,-0.425329,4.293722,8.662641,-0.419314,1.152584,1.862672,-3.231678,9.779432,-2.861386,-7.434257,-5.007822,-6.606651,3.412490],[0.489162,-4.360765,-0.045337,-0.167793,6.674344,4.554550,-2.669988,-9.047313,-8.969127,-0.703524,5.839630,4.884277,4.367157,-9.755951,-0.328641],[7.159977,5.457629,-5.342332,2.370981,-3.298716,7.548148,-8.665171,-7.836652,9.482028,5.790160,-9.621561,-2.150257,4.760332,-2.411455,1.452596],[7.203455,-2.331301,-9.220777,-2.299821,-1.896693,4.101690,-2.519679,2.454017,-5.498037,-2.631697,-6.964947,9.680622,-7.076620,9.641633,-3.950300],[-8.083727,8.952672,-7.537726,0.559539,4.455251,0.169429,3.265958,8.526741,9.012521,1.404903,3.302334,-6.969810,-6.549315,3.138020,9.099689],[-5.601419,4.464281,8.864931,-7.794839,-7.008107,-1.405665,-8.214015,-8.226333,-0.237723,4.115003,0.567463,1.206059,6.668026,-1.211519,0.701430],[-9.900412,8.681172,-0.378094,-3.280216,-2.704232,-1.459529,-3.049202,-4.579129,-2.058527,-6.637151,3.434232,3.431198,-7.684628,-1.008309,7.316956],[-3.160163,-3.112575,-1.662743,-9.836311,3.726620,3.838786,7.947032,-4.918044,-9.900112,-3.708182,-1.355468,-2.801121,5.053224,1.424046,-3.213521]]], dtype = "float64")#candidate|6956|(14, 13, 15)|const|float64
var_6957 = relay.var("var_6957", dtype = "float64", shape = (14, 13, 15))#candidate|6957|(14, 13, 15)|var|float64
bop_6958 = relay.equal(const_6956.astype('bool'), relay.reshape(var_6957.astype('bool'), relay.shape_of(const_6956))) # shape=(14, 13, 15)
output = relay.Tuple([bop_6958,])
output2 = relay.Tuple([bop_6958,])
func_6963 = relay.Function([var_6957,], output)
mod['func_6963'] = func_6963
mod = relay.transform.InferType()(mod)
var_6964 = relay.var("var_6964", dtype = "float64", shape = (14, 13, 15))#candidate|6964|(14, 13, 15)|var|float64
output = func_6963(var_6964)
func_6965 = relay.Function([var_6964], output)
mutated_mod['func_6965'] = func_6965
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1952_call = mod.get_global_var('func_1952')
func_1953_call = mutated_mod.get_global_var('func_1953')
call_7023 = relay.TupleGetItem(func_1952_call(), 0)
call_7024 = relay.TupleGetItem(func_1953_call(), 0)
output = call_7023
output2 = call_7024
func_7048 = relay.Function([], output)
mod['func_7048'] = func_7048
mod = relay.transform.InferType()(mod)
output = func_7048()
func_7049 = relay.Function([], output)
mutated_mod['func_7049'] = func_7049
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1022_call = mod.get_global_var('func_1022')
func_1023_call = mutated_mod.get_global_var('func_1023')
call_7101 = relay.TupleGetItem(func_1022_call(), 0)
call_7102 = relay.TupleGetItem(func_1023_call(), 0)
output = call_7101
output2 = call_7102
func_7105 = relay.Function([], output)
mod['func_7105'] = func_7105
mod = relay.transform.InferType()(mod)
output = func_7105()
func_7106 = relay.Function([], output)
mutated_mod['func_7106'] = func_7106
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1065_call = mod.get_global_var('func_1065')
func_1067_call = mutated_mod.get_global_var('func_1067')
call_7136 = relay.TupleGetItem(func_1065_call(), 0)
call_7137 = relay.TupleGetItem(func_1067_call(), 0)
output = call_7136
output2 = call_7137
func_7140 = relay.Function([], output)
mod['func_7140'] = func_7140
mod = relay.transform.InferType()(mod)
output = func_7140()
func_7141 = relay.Function([], output)
mutated_mod['func_7141'] = func_7141
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1936_call = mod.get_global_var('func_1936')
func_1938_call = mutated_mod.get_global_var('func_1938')
call_7175 = relay.TupleGetItem(func_1936_call(), 0)
call_7176 = relay.TupleGetItem(func_1938_call(), 0)
output = relay.Tuple([call_7175,])
output2 = relay.Tuple([call_7176,])
func_7178 = relay.Function([], output)
mod['func_7178'] = func_7178
mod = relay.transform.InferType()(mod)
output = func_7178()
func_7179 = relay.Function([], output)
mutated_mod['func_7179'] = func_7179
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3080_call = mod.get_global_var('func_3080')
func_3081_call = mutated_mod.get_global_var('func_3081')
call_7312 = relay.TupleGetItem(func_3080_call(), 1)
call_7313 = relay.TupleGetItem(func_3081_call(), 1)
output = relay.Tuple([call_7312,])
output2 = relay.Tuple([call_7313,])
func_7314 = relay.Function([], output)
mod['func_7314'] = func_7314
mod = relay.transform.InferType()(mod)
mutated_mod['func_7314'] = func_7314
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7314_call = mutated_mod.get_global_var('func_7314')
call_7315 = func_7314_call()
output = call_7315
func_7316 = relay.Function([], output)
mutated_mod['func_7316'] = func_7316
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1022_call = mod.get_global_var('func_1022')
func_1023_call = mutated_mod.get_global_var('func_1023')
call_7339 = relay.TupleGetItem(func_1022_call(), 1)
call_7340 = relay.TupleGetItem(func_1023_call(), 1)
func_2752_call = mod.get_global_var('func_2752')
func_2753_call = mutated_mod.get_global_var('func_2753')
call_7344 = relay.TupleGetItem(func_2752_call(), 2)
call_7345 = relay.TupleGetItem(func_2753_call(), 2)
bop_7348 = relay.less(call_7344.astype('bool'), relay.reshape(call_7339.astype('bool'), relay.shape_of(call_7344))) # shape=(9, 1, 11)
bop_7351 = relay.less(call_7345.astype('bool'), relay.reshape(call_7340.astype('bool'), relay.shape_of(call_7345))) # shape=(9, 1, 11)
output = bop_7348
output2 = bop_7351
func_7353 = relay.Function([], output)
mod['func_7353'] = func_7353
mod = relay.transform.InferType()(mod)
output = func_7353()
func_7354 = relay.Function([], output)
mutated_mod['func_7354'] = func_7354
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6180_call = mod.get_global_var('func_6180')
func_6181_call = mutated_mod.get_global_var('func_6181')
call_7470 = relay.TupleGetItem(func_6180_call(), 0)
call_7471 = relay.TupleGetItem(func_6181_call(), 0)
output = call_7470
output2 = call_7471
func_7494 = relay.Function([], output)
mod['func_7494'] = func_7494
mod = relay.transform.InferType()(mod)
output = func_7494()
func_7495 = relay.Function([], output)
mutated_mod['func_7495'] = func_7495
mutated_mod = relay.transform.InferType()(mutated_mod)
var_7529 = relay.var("var_7529", dtype = "int32", shape = (12, 10, 14))#candidate|7529|(12, 10, 14)|var|int32
var_7530 = relay.var("var_7530", dtype = "int32", shape = (12, 10, 14))#candidate|7530|(12, 10, 14)|var|int32
bop_7531 = relay.left_shift(var_7529.astype('int32'), relay.reshape(var_7530.astype('int32'), relay.shape_of(var_7529))) # shape=(12, 10, 14)
func_1218_call = mod.get_global_var('func_1218')
func_1222_call = mutated_mod.get_global_var('func_1222')
var_7538 = relay.var("var_7538", dtype = "float32", shape = (990, 1))#candidate|7538|(990, 1)|var|float32
call_7537 = relay.TupleGetItem(func_1218_call(relay.reshape(var_7538.astype('float32'), [11, 6, 15]), relay.reshape(var_7538.astype('float32'), [11, 6, 15]), relay.reshape(var_7538.astype('float32'), [11, 6, 15]), ), 2)
call_7539 = relay.TupleGetItem(func_1222_call(relay.reshape(var_7538.astype('float32'), [11, 6, 15]), relay.reshape(var_7538.astype('float32'), [11, 6, 15]), relay.reshape(var_7538.astype('float32'), [11, 6, 15]), ), 2)
func_6514_call = mod.get_global_var('func_6514')
func_6516_call = mutated_mod.get_global_var('func_6516')
var_7546 = relay.var("var_7546", dtype = "float64", shape = (1755,))#candidate|7546|(1755,)|var|float64
call_7545 = func_6514_call(relay.reshape(var_7546.astype('float64'), [585, 3]))
call_7547 = func_6514_call(relay.reshape(var_7546.astype('float64'), [585, 3]))
output = relay.Tuple([bop_7531,call_7537,var_7538,call_7545,var_7546,])
output2 = relay.Tuple([bop_7531,call_7539,var_7538,call_7547,var_7546,])
func_7548 = relay.Function([var_7529,var_7530,var_7538,var_7546,], output)
mod['func_7548'] = func_7548
mod = relay.transform.InferType()(mod)
mutated_mod['func_7548'] = func_7548
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7548_call = mutated_mod.get_global_var('func_7548')
var_7550 = relay.var("var_7550", dtype = "int32", shape = (12, 10, 14))#candidate|7550|(12, 10, 14)|var|int32
var_7551 = relay.var("var_7551", dtype = "int32", shape = (12, 10, 14))#candidate|7551|(12, 10, 14)|var|int32
var_7552 = relay.var("var_7552", dtype = "float32", shape = (990, 1))#candidate|7552|(990, 1)|var|float32
var_7553 = relay.var("var_7553", dtype = "float64", shape = (1755,))#candidate|7553|(1755,)|var|float64
call_7549 = func_7548_call(var_7550,var_7551,var_7552,var_7553,)
output = call_7549
func_7554 = relay.Function([var_7550,var_7551,var_7552,var_7553,], output)
mutated_mod['func_7554'] = func_7554
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3630_call = mod.get_global_var('func_3630')
func_3631_call = mutated_mod.get_global_var('func_3631')
call_7572 = relay.TupleGetItem(func_3630_call(), 1)
call_7573 = relay.TupleGetItem(func_3631_call(), 1)
output = relay.Tuple([call_7572,])
output2 = relay.Tuple([call_7573,])
func_7578 = relay.Function([], output)
mod['func_7578'] = func_7578
mod = relay.transform.InferType()(mod)
output = func_7578()
func_7579 = relay.Function([], output)
mutated_mod['func_7579'] = func_7579
mutated_mod = relay.transform.InferType()(mutated_mod)
var_7582 = relay.var("var_7582", dtype = "uint8", shape = ())#candidate|7582|()|var|uint8
var_7583 = relay.var("var_7583", dtype = "uint8", shape = (5, 1, 8))#candidate|7583|(5, 1, 8)|var|uint8
bop_7584 = relay.not_equal(var_7582.astype('bool'), var_7583.astype('bool')) # shape=(5, 1, 8)
func_5745_call = mod.get_global_var('func_5745')
func_5746_call = mutated_mod.get_global_var('func_5746')
call_7589 = func_5745_call()
call_7590 = func_5745_call()
uop_7594 = relay.tan(bop_7584.astype('float64')) # shape=(5, 1, 8)
func_4308_call = mod.get_global_var('func_4308')
func_4309_call = mutated_mod.get_global_var('func_4309')
call_7601 = relay.TupleGetItem(func_4308_call(), 0)
call_7602 = relay.TupleGetItem(func_4309_call(), 0)
func_6034_call = mod.get_global_var('func_6034')
func_6036_call = mutated_mod.get_global_var('func_6036')
call_7605 = func_6034_call()
call_7606 = func_6034_call()
uop_7609 = relay.exp(uop_7594.astype('float32')) # shape=(5, 1, 8)
func_1272_call = mod.get_global_var('func_1272')
func_1273_call = mutated_mod.get_global_var('func_1273')
call_7614 = func_1272_call()
call_7615 = func_1272_call()
uop_7630 = relay.sin(uop_7594.astype('float32')) # shape=(5, 1, 8)
output = relay.Tuple([call_7589,call_7601,call_7605,uop_7609,call_7614,uop_7630,])
output2 = relay.Tuple([call_7590,call_7602,call_7606,uop_7609,call_7615,uop_7630,])
func_7632 = relay.Function([var_7582,var_7583,], output)
mod['func_7632'] = func_7632
mod = relay.transform.InferType()(mod)
mutated_mod['func_7632'] = func_7632
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7632_call = mutated_mod.get_global_var('func_7632')
var_7634 = relay.var("var_7634", dtype = "uint8", shape = ())#candidate|7634|()|var|uint8
var_7635 = relay.var("var_7635", dtype = "uint8", shape = (5, 1, 8))#candidate|7635|(5, 1, 8)|var|uint8
call_7633 = func_7632_call(var_7634,var_7635,)
output = call_7633
func_7636 = relay.Function([var_7634,var_7635,], output)
mutated_mod['func_7636'] = func_7636
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4516_call = mod.get_global_var('func_4516')
func_4517_call = mutated_mod.get_global_var('func_4517')
call_7680 = relay.TupleGetItem(func_4516_call(), 0)
call_7681 = relay.TupleGetItem(func_4517_call(), 0)
var_7696 = relay.var("var_7696", dtype = "float32", shape = (99,))#candidate|7696|(99,)|var|float32
bop_7697 = relay.not_equal(call_7680.astype('bool'), relay.reshape(var_7696.astype('bool'), relay.shape_of(call_7680))) # shape=(99,)
bop_7700 = relay.not_equal(call_7681.astype('bool'), relay.reshape(var_7696.astype('bool'), relay.shape_of(call_7681))) # shape=(99,)
func_5611_call = mod.get_global_var('func_5611')
func_5612_call = mutated_mod.get_global_var('func_5612')
call_7719 = func_5611_call()
call_7720 = func_5611_call()
func_6157_call = mod.get_global_var('func_6157')
func_6158_call = mutated_mod.get_global_var('func_6158')
call_7727 = func_6157_call()
call_7728 = func_6157_call()
output = relay.Tuple([bop_7697,call_7719,call_7727,])
output2 = relay.Tuple([bop_7700,call_7720,call_7728,])
func_7772 = relay.Function([var_7696,], output)
mod['func_7772'] = func_7772
mod = relay.transform.InferType()(mod)
var_7773 = relay.var("var_7773", dtype = "float32", shape = (99,))#candidate|7773|(99,)|var|float32
output = func_7772(var_7773)
func_7774 = relay.Function([var_7773], output)
mutated_mod['func_7774'] = func_7774
mutated_mod = relay.transform.InferType()(mutated_mod)
const_7787 = relay.const(-4, dtype = "int64")#candidate|7787|()|const|int64
var_7788 = relay.var("var_7788", dtype = "int64", shape = (16, 1, 2))#candidate|7788|(16, 1, 2)|var|int64
bop_7789 = relay.multiply(const_7787.astype('int64'), var_7788.astype('int64')) # shape=(16, 1, 2)
func_7772_call = mod.get_global_var('func_7772')
func_7774_call = mutated_mod.get_global_var('func_7774')
var_7801 = relay.var("var_7801", dtype = "float32", shape = (11, 9))#candidate|7801|(11, 9)|var|float32
call_7800 = relay.TupleGetItem(func_7772_call(relay.reshape(var_7801.astype('float32'), [99,])), 1)
call_7802 = relay.TupleGetItem(func_7774_call(relay.reshape(var_7801.astype('float32'), [99,])), 1)
output = relay.Tuple([bop_7789,call_7800,var_7801,])
output2 = relay.Tuple([bop_7789,call_7802,var_7801,])
func_7828 = relay.Function([var_7788,var_7801,], output)
mod['func_7828'] = func_7828
mod = relay.transform.InferType()(mod)
mutated_mod['func_7828'] = func_7828
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7828_call = mutated_mod.get_global_var('func_7828')
var_7830 = relay.var("var_7830", dtype = "int64", shape = (16, 1, 2))#candidate|7830|(16, 1, 2)|var|int64
var_7831 = relay.var("var_7831", dtype = "float32", shape = (11, 9))#candidate|7831|(11, 9)|var|float32
call_7829 = func_7828_call(var_7830,var_7831,)
output = call_7829
func_7832 = relay.Function([var_7830,var_7831,], output)
mutated_mod['func_7832'] = func_7832
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1711_call = mod.get_global_var('func_1711')
func_1713_call = mutated_mod.get_global_var('func_1713')
call_7853 = relay.TupleGetItem(func_1711_call(), 1)
call_7854 = relay.TupleGetItem(func_1713_call(), 1)
uop_7861 = relay.sigmoid(call_7853.astype('float64')) # shape=(11, 6, 15)
uop_7863 = relay.sigmoid(call_7854.astype('float64')) # shape=(11, 6, 15)
func_5538_call = mod.get_global_var('func_5538')
func_5539_call = mutated_mod.get_global_var('func_5539')
call_7870 = relay.TupleGetItem(func_5538_call(), 1)
call_7871 = relay.TupleGetItem(func_5539_call(), 1)
func_2987_call = mod.get_global_var('func_2987')
func_2990_call = mutated_mod.get_global_var('func_2990')
const_7886 = relay.const([1.337450,-9.381365,-7.608906,8.462940,5.248288,-2.693468,-9.464204,-3.317040,-5.175988,0.673630,9.325041,3.800685,-1.819443,6.152626,4.182082,-9.635440,-2.487539,5.161042,-5.859667,-5.710162,-6.385752,4.876402,1.157409,-2.321609,2.573249,-1.626089,-3.861818,9.641158,-6.861802,-4.949305,1.053589,-3.613639,-3.837083,-9.008393,3.111762,-7.898525,-5.753501,-5.652546,0.397063,0.203333,-4.437386,4.859293,8.917708,7.980374,4.360072,-2.483143,-0.486083,-7.714012,-3.049311,6.605093,4.717778,2.615676,8.921976,-9.723047,7.717770,-4.343260,2.642670,-3.579575,-7.024527,-0.529340,-7.373465,-9.464622,-1.630663,2.703591,-6.418199,-5.117982,-5.939473,3.077771,7.059830,-6.304530,9.918338,-0.376217,-1.239078,7.241567,-2.929873,8.474010,-4.718085,8.522856,-9.739904,0.221173,-0.875296,8.640060,-1.123084,-3.866395,-7.514342,-1.507349,5.038497,-8.921378,6.442718,-4.356391,3.682491,-5.471740,-4.944086,-9.186186,-5.201804,9.980045,0.577715,2.685034,2.582540,4.085237,-2.725921,3.328290,-4.138022,-1.811200,0.372590,9.684839,-5.395116,0.775228,-2.328892,8.046744,2.695982,9.200295,1.283914,-3.240767,-2.153521,-7.338321,1.132624,9.821121,4.132096,-3.497514,-1.799239,-2.074495,6.900436,2.013941,0.504253,9.360239,7.194389,-8.917106,0.834146,4.813041,-1.951906,6.448043,4.344438,-4.189271,-7.414430,-4.739189,-1.220915,2.723591,-4.984129,4.595799,4.112490,-7.618297,5.280672,-9.301064,-0.408226,1.318539,5.969261,-3.650315,2.801950,-9.963572,9.011290,-9.018973,0.221308,-3.785743,0.525188,9.533570,-9.630674,4.144158,-0.456649,-0.592866,-3.030337,-3.088567,-2.845040,-5.057369,8.307302,8.844562,8.651619,-1.258895,9.027663,-3.970023,3.384322,-7.375887,-1.264819,7.067743,3.138638,5.012098,8.434026,1.518398,-6.552066,0.566550,-5.735044,5.717073,5.105462,-4.509520,-1.911678,9.426994,7.552899,0.666412,0.621631,-7.580749,-4.797970,-1.353899,3.421889,-4.309719,-3.753306,9.729201,-9.288977,-0.284404,2.378597,5.196840,-1.216295,5.209410,-2.268592,4.628377,7.944957,-4.093747,5.513114,-1.549057,-1.726054,-5.178926,-8.092668,-7.465372,-9.034440,-6.260897,8.085912,6.397755,-1.555781,3.023454,5.833717,4.653057,5.752040,2.941449,-0.334567,3.253100,-3.655354,0.106394,-3.315977,3.621116,8.205081,-2.288017,3.322713,-0.931906,-5.082460,-8.277384,-8.606963,-0.147313,3.785159,-8.728982,2.196933,6.568718,1.544441,1.211615,-1.086721,7.720561,-4.861134,-8.164831,7.626823,-8.412143,1.379694,-9.337405,-0.715555,2.117168,-8.841324,3.540078,0.167263,4.722727,-6.618135,-1.162574,0.433597,-3.585712,6.570668,-0.339447,8.626952,-9.812134,7.897997,-4.984639,-2.648891,-4.877663,6.665022,-1.586854,-6.548689,7.809050,-2.452294,6.297176,5.544320,-9.710107,-2.911839,-6.927922,1.585713,-8.390265,4.635731,-1.893217,-2.164873,-5.131765,-2.581941,8.403754,-5.930680,1.218720,-3.103310,-5.498430,-3.330240,7.639100,6.464901,-0.123479,-9.818298,-4.168378,3.379059,6.394956,2.053380,0.708009,0.944749,-9.078037,-2.548545,-1.756702,-9.846843,-5.964066,8.170263,5.361694,0.965769,5.638094,6.420707,1.080610,-7.642341,-6.046962,-1.359956,-4.365247,-9.089202,7.135415,-9.526040,-5.539615,6.257858,-8.368689,-5.959570,8.474856,9.535070,6.088100,-1.121788,-1.324719,-5.999169,-2.387782,-2.376521,-8.329760,5.052158,8.252007,3.993773,-3.180618,1.258479,-0.639235,3.071151,3.140271,-6.577648,9.394446,-1.897101,-2.391327,-5.784418,2.818447,1.788164,-2.728966,-7.881214,-9.752602,7.449585,-8.425423,9.334103,-8.471647,-1.446064,-1.139015,-6.500450,-9.527398,6.036559,2.886843,7.097109,-2.737956,-0.313269,-9.243548,3.602254,3.429843,4.199972,2.546840,-7.472933,7.209023,8.019096,4.855057,0.058342,-5.573530,-3.086277,5.547587,2.940506,-7.544908,-3.746218,-5.882479,-7.370953,-7.690358,0.632608,-3.805607,7.348164,-6.948568,2.836535,-3.248832,0.120919,8.169124,3.390025,-4.376266,2.857926,-4.771486,6.321717,5.156972,-6.477219,2.744576,2.222116,2.675165,-1.753856,3.256810,-1.204489,-8.082960,2.328650,3.883320,-3.761921,7.090672,9.611318,9.757088,-7.625231,-7.354074,-1.604578,-8.123351,3.950841,-6.994145,4.915840,-4.030743,-4.620898,-4.303127,-8.310960,-4.597027,0.400557,-2.143246,2.166804,6.637821,-7.247889,4.896447,1.681903,-8.942035,8.628587,-3.934882,8.943434,-2.539994,-8.888961,0.686201,6.613227,6.316354,1.887585,9.098939,-5.137291,-7.461737,-5.993600,1.528332,0.033332,-8.152607,6.221234,9.767272,4.905468,-7.551515,-9.449787,8.362112,6.766650,-6.785069,-0.866796,4.882162,-5.807377,-1.065473,2.979498,1.031297,0.201619,-5.334035,-3.984595,7.326747,5.662469,0.465392,9.940800,8.121240,-7.213059,5.629068,0.765115,5.844068,-9.185324,-7.305357,0.808597,-8.508054,-0.199677,5.823328,8.640848,-9.420101,-6.323821,-4.829404,-4.260606,-1.029574,-6.203520,-7.566796,1.074938,1.487849,2.624227,4.765104,9.446724,3.861712,-8.693882,6.031736,-1.636193,0.487619,7.725846,-3.889573,0.172311,-5.946481,3.356721,-4.096892,-5.454895,-9.298689,8.771025,7.098190,-6.220052,-7.420924,8.468708,-8.965927,-8.900528,6.058457,4.035563,9.549114,-8.682501,-8.975496,-3.629637,-3.677333,4.213587,-7.663576,9.138015,3.062490,9.061211,-1.044719,9.267628,-0.750815,-4.270358,-9.141700,6.976620,9.818599,2.420131,0.759963,-2.885454,6.914509,3.299270,-7.200806,9.009444,-6.385454,-6.331256,3.549851,4.481117,9.745627,0.776714,0.755373,7.958111,0.005513,4.841191,1.030985,-3.429410,2.179217,-3.798768,-0.953205,8.967071,-0.056944,-4.840810,-0.998245,4.579627,7.056407,4.485512,-4.763312,7.820601,3.284624,-1.880950,-4.287648,0.735818,-1.783581,-9.109290,6.063635,6.691166,3.121561,-9.832737,7.605765,9.006648,-0.337633,-9.189573,1.673168,-1.621330,-4.302212,1.691148,-7.198843,-3.333201,1.564391,4.697142,-1.674607,-6.227561,-1.024746,8.801709,2.131228,6.247507,5.279765,-1.472417,4.770082,-1.457698,5.368894,1.212798,-0.323071,3.213169,-1.017998,8.632983,9.828278,-9.359673,-4.659037,-7.150313,-7.242292,4.140855,3.373550,-7.624030,6.078951,-5.266808,3.974256,-7.044622,6.760208,3.682420,-1.958459,-5.172383,-6.947825,-1.240929,5.205353,-5.100042,-2.285748,1.867898,3.008054,-0.871012,-4.685956,-4.604188,-7.160087,-7.928014,-5.817693,1.016950,-7.892719,-4.971820,-5.233552,6.529772,7.180395,5.359110,8.521065,8.948628,4.435786,4.583546,-4.908099,7.644392,-0.984846,-4.456219,1.085992,-2.361675,-8.936377,-1.510588,4.859902,-9.626747,-9.244820,-8.289075,-3.905621,-6.167628,3.520721,-4.830788,5.542876,9.179041,9.446004,-1.150273,1.810628,-1.402679,-3.384549,5.919983,-0.995475,-6.129435,6.821051,-2.883004,0.340720,9.434148,4.032960,-7.944393,3.400952,-4.589845,-6.730004,3.667220,6.369600,8.252630,5.040934,3.324946,-0.636125,-7.614643,-3.767394,0.724382,2.867398,5.140285,-9.569287,-1.758102,6.353276,-1.310941,0.927808,6.065823,5.514878,-2.511376,4.436767,-8.378921,-9.887994,-0.394234,-5.564235,-6.060715,-8.888613,-1.628353,3.157688,3.217053,7.913388,-4.215248,0.149208,-0.573019,-0.952628,3.269079,-8.901250,9.300221,-7.068043,-5.656478,-8.324726,1.781214,-6.187967,4.046943,-7.242465,-3.060483,5.895869,-8.968116,-3.963494,0.178510,-8.089598,8.850496,7.577968,2.249262,-2.253460,-3.774692,-0.534882,3.899271,5.270285,-3.455285,9.647324,5.645660,-1.496686,-5.757059,-5.919568,8.418018,-3.990771,-4.633593,-0.514767,-2.627632,8.127515,8.559700,-3.193500,-8.183736,7.746302,2.955737,1.133639,9.753701,-4.102048,-2.014175,-4.167390,3.168280,-1.475640,-0.562209,6.593714,7.461215,5.143172,-6.279711,-4.105078,3.823545,-2.797637,-1.523534,4.053722,7.106178,0.880153,0.860611,7.803316,9.602269,-8.901595,-9.950794,-7.426535,-4.306661,-5.215570,5.756979,7.004354,3.394199,6.338096,1.056571,1.117708,-6.023289,-8.029354,-6.609136,1.235633,-5.533566,2.463161,0.514636,-5.601717,5.621685,0.767484,3.289857,2.117434,-5.413905,4.647485,-1.196718,-3.889427,7.310064,-3.812922,-2.282623,3.323397,3.859551,-1.894144,-6.813120,-5.990586,8.513021,-9.020200,-8.249891,1.278259,-0.095698,-7.031361,-4.610569,-9.361399,9.183203,1.926318,-7.839133,-9.905483,-4.707562,-1.728698,-5.986946,-8.756455,-7.011124,-0.267474,9.050089,6.953445,-3.844416,-1.248068,-3.179189,0.674194,0.708482,-7.056729,6.728295,4.241123,8.834209,1.707917,-6.265115,9.575849,-7.533145,0.210060,-3.982834,-9.386537,-5.282851,2.949687,0.906829,-9.300008,1.641128,-1.845901,-3.626991,-6.492364,0.675587,2.069091,-1.189197,2.624465,-6.464185,-1.020572,2.651747,-7.251019,2.697206,7.667827,-3.587975,8.898981,-8.296123,-6.549944,1.076425,-2.550264,-0.716974,-2.264967,-9.534959,-6.639054,-4.238881,9.812091,6.078287,7.428913,0.841293,6.463924,-7.274041,-5.142905,-7.910947,4.879932,2.688662,-1.482059,5.705465,-8.570751,-6.614800,5.231864,6.087530,5.167089,-0.785056,9.853350,6.397728,8.552868,3.472927,-3.803801,-1.095443,5.988030,8.692810,-8.575710,-1.103953,-5.315251,6.550225,0.693686,6.047405,0.140878,2.717285,1.287956,8.150694,2.567533,-1.004867,-9.317098,8.965673,6.371432,1.725522,-4.290119,-0.041889,3.272137,-4.070288,0.188661,9.282835,7.974293,8.267249,5.742255,0.168493,-6.971133,-9.748382,-7.894182,-0.382205,-5.458536,3.441939,-4.911961,6.931953,3.987472,-6.954245,5.469938,1.236151,7.548659,-2.873670,8.929260,8.017251,5.515920,-0.853287,3.278704,6.285712,6.763845,-6.331659,5.227465,8.871391,8.235174,0.395357,8.456108,8.956064,2.232575,4.590666,1.289463,-8.240716,-0.535957,4.504074,-9.354367,9.137814,7.325703,0.803996,9.098997,-8.264937,-6.408653,-7.541788,-9.146993,-2.306263,4.876958,1.260723,-4.592902,4.214018,-3.922336,2.985739,-4.151580,-9.889064,-4.990871,-7.717442,-0.534001,0.675772,-8.881534,-8.832298,4.833577,-3.428948,-5.333274,-6.124188,-2.277572,3.590831,-7.568203,3.156707,2.102544,-5.784911,2.531675,-7.122206,0.588625,-6.450157,9.122203,8.021481,-6.159461,3.732432,2.124035,9.328819,8.232938,-0.666894,1.397643,-0.675591,-7.708391,8.626999,4.635921,0.044136,6.862287,-0.173623,1.413891,3.797549,-5.409460,-9.743139,-0.137015,8.655104,5.374430,2.181935,8.987824,4.067449,6.540445,4.147855,-8.684003,4.968711,-3.741767,-0.459021,9.867864,3.551920,-0.164601,6.275531,-3.246533,5.707923,6.391702,-0.875739,-2.651440,-7.092806,-4.978243,6.060047,-5.000417,-4.446867,-0.906854,-5.130905,0.886701,9.096403,-5.184344,-4.009001,4.408591,-6.404879,0.889171,7.644252,-5.044521,1.668372,1.139983,-8.718666,6.378843,3.468226,4.544308,-1.875596,1.331000,8.136505,-8.728309,-6.605373,1.768794,-1.676033,-1.978181,-3.309481,7.533710,2.542292,-2.014781,1.144033,8.134139,-7.078524,-2.861504,5.482703,-4.133603,7.480098,-4.319995,5.998452,-6.384996,-0.513748,2.757131,-5.228438,-9.100442,-1.884613,6.760208,5.868390,-8.425454,8.670207,-8.357564,-6.189963,9.196934,9.457228,-1.925779,5.170207,3.908324,8.924400,1.613619,9.327897,8.922280,-7.516849,9.984306,3.786957,3.643451,4.701263,2.484638,8.369154,8.909459,7.360893,3.283557,5.291133,-9.271465,5.018014,-2.145362,-6.743122,-1.304053,-1.854371,-9.170173,9.310858,-8.973972,4.758419,4.974102,9.403344,7.377752,-9.973365,0.173332,6.047449,-7.205850,1.818936,-1.914375,-9.620027,0.404784,-9.460644,1.043359,2.493253,-8.593623,6.225255,7.315084,2.980592,0.308703,1.465613,8.746909,0.779657,-2.752015,-9.353425,-1.680636,7.545307,7.270071,9.927225,-9.627323,-2.967469,5.365709,-4.145138,-4.987254,5.905504,7.578610,6.347735,-4.560161,-4.174615,1.513974,8.886291,1.806275,1.828477,-1.073386,1.447866,-9.775397,-2.387912,-4.873267,-9.282103,-7.400426,-0.261493,7.390777,-5.599842,-4.294007,-0.214195,6.186899,8.137686,-7.578208,8.216044,6.422468,3.595103,-8.836170,8.382415,-0.067643,-2.677040,-9.256139,-4.273384,-1.548551,3.117994,9.905487,-4.902903,9.440724,-8.646009,4.506975,-6.202348,-0.756492,-5.412952,3.756470,0.309207,8.125845,-6.733619,9.434733,8.182534,7.879749,-0.876874,-2.827495,3.557564,6.400431,-3.292472,0.631015,7.759911,-2.509694,3.365695,-8.779721,-4.346851,-0.231847,9.670912,3.540755,9.309039,8.338476,-2.736359,-8.187650,6.766322,7.360165,-3.406359,-6.330044,-0.388640,7.370924,9.252127,6.958637,-1.744532,-6.624969,0.179483,-5.565883,3.006012,-9.568438,-3.661935,9.639472,-7.425344,4.446188,-1.005210,7.077700,-8.915184,-9.140005,-3.988120,2.984378,5.875641,-2.177258,-6.301022,9.344940,-2.894702,1.264331,-5.071552,-3.204007,9.556426,-2.833416,7.701286,-9.418293,-4.207748,2.616273,-8.328023,6.908152,4.653705,-2.266470,2.049779,7.891103,-7.711228,-0.082472,5.145384,0.212327,-9.768213,-8.267630,2.079352,9.343725,7.590293,-1.128874,-1.172977,8.029142,3.478231,5.591032,5.959840,-7.602968,7.605000,2.989725,0.622902,7.894079,-1.469459,-6.314538,-5.882476,5.421369,-7.456333,-5.528511,-6.549965,-9.714426,4.945501,-4.130816,-6.991830,-0.393172,0.526844,4.267672,4.366425,-1.417105,-6.119258,9.513433,-4.792886,9.852883,5.298647,7.849729,5.328566,0.336732,4.405099,-0.382316,4.127983,0.942463,-2.122190,4.559872,6.496065,5.424521,-9.701587,9.267370,6.800874,-9.769375,-0.481134,-5.424542,9.013538,-4.472465,1.973022,1.453208,-0.541607,6.201571,1.869159,-0.730656,-0.849496,-1.355630,-1.662631,-5.283137,-1.163245,-6.392006,-6.245356,8.053209,7.441800,9.783567,-1.466949,8.648431,8.638903,7.679308,3.582411,-4.587109,0.296822,6.958934,-7.718709,0.859963,-3.881884,5.874765,4.370061,-0.056818,-4.201262,0.942544,-9.773395,3.086149,-3.570934,-5.869541,-3.919986,7.833849,-2.831924,-8.812901,-3.673776,1.754357,8.773811,-4.766665,7.907227,4.753435,-4.483061,-5.675237,7.580622,-4.192040,-9.875531,-2.947016,1.759074,-4.974674,-0.897010,-8.303885,6.038968,9.577135,-1.343311,7.430259], dtype = "float32")#candidate|7886|(1386,)|const|float32
call_7885 = relay.TupleGetItem(func_2987_call(relay.reshape(const_7886.astype('float32'), [1386,])), 4)
call_7887 = relay.TupleGetItem(func_2990_call(relay.reshape(const_7886.astype('float32'), [1386,])), 4)
func_7105_call = mod.get_global_var('func_7105')
func_7106_call = mutated_mod.get_global_var('func_7106')
call_7888 = func_7105_call()
call_7889 = func_7105_call()
func_3849_call = mod.get_global_var('func_3849')
func_3852_call = mutated_mod.get_global_var('func_3852')
const_7892 = relay.const([7,-6,-9,-2,-9,-8,-6,4,-4,-2,-9,8,-7,5,7,-5,-3,3,-6,-3,-4,10,7,-9,4,-7,-8,-3,9,-2,-1,1,8,10,-1,-6,5,8,-4,4,-8,1,8,-2,3,3,1,-9,-2,-2,1,9,-6,7,-1,9,4,7,5,8,3,3,-9,-2,3,-3,4,10,8,1,10,1,10,-5,7,-3,7,6,-8,9,4,6,6,7,5,3,8,1,-2,-10,-10,-9,9,-4,-4,10,7,-6,-4,-4,3,-6,1,-8,4,2,-3,2,6,2,-9,10,8,6,2,-1,-9,-5,-2,5,-3,9,-10,1,-7,10,5,3,-7,-3,10,4,-1,-4,-4,-9,10,6,-1,7,-9,-5,8,-6,-8,4,5,1,-8,8,-4,2,7,3,4,5,1,-8,9,-4,6,-6,9,-4,-2,3,-1,1,3,-5,6,-4,3,5,-7,8,-10,-2,-2,8,-1,10,-5,10,-5,-7,-7,9,3,2,7,-5,6,8,6,-4,4,-10,4,-7,7,3,6,-5,-8,-1,9,-1,-3,-5,-4,9,4,9,1,9,1,-1,-4,8,-3,6,-4,9,6,8,4,10,-7,3,6,-4,-4,5,-3,-9,-1,10,-3,-1,-4,1,-6,-3,-1,-1,-10,5,3,-3,3,5,-6,7,6,8,-9,-6,-1,2,-5,8,-9,1,-3,8,-6,-9,-10,2,6,-3,-3,4,8,-6,8,-2,9,8,-6,9,9,-4,6,-4,10,-1,-8,6,10,1,-8,-4,-6,10,-7,4,10,-7,-8,1,8,-8,9,-2,-8,7,-8,2,1,6,2,8,-9,-10,-5,4,5,10,8,2,-7,-1,-10,-6,4,1,-3,-9,5,1,10,-3,-7,-8,-7,10,-9,-8,3,-10,-8,-4,1,5,-3,-5,-10,-10,3,4], dtype = "int8")#candidate|7892|(352,)|const|int8
call_7891 = relay.TupleGetItem(func_3849_call(relay.reshape(const_7892.astype('int8'), [16, 2, 11]), relay.reshape(const_7892.astype('int8'), [16, 2, 11]), ), 1)
call_7893 = relay.TupleGetItem(func_3852_call(relay.reshape(const_7892.astype('int8'), [16, 2, 11]), relay.reshape(const_7892.astype('int8'), [16, 2, 11]), ), 1)
func_3322_call = mod.get_global_var('func_3322')
func_3323_call = mutated_mod.get_global_var('func_3323')
call_7896 = func_3322_call()
call_7897 = func_3322_call()
output = relay.Tuple([uop_7861,call_7870,call_7885,const_7886,call_7888,call_7891,const_7892,call_7896,])
output2 = relay.Tuple([uop_7863,call_7871,call_7887,const_7886,call_7889,call_7893,const_7892,call_7897,])
func_7898 = relay.Function([], output)
mod['func_7898'] = func_7898
mod = relay.transform.InferType()(mod)
output = func_7898()
func_7899 = relay.Function([], output)
mutated_mod['func_7899'] = func_7899
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3423_call = mod.get_global_var('func_3423')
func_3424_call = mutated_mod.get_global_var('func_3424')
call_7908 = func_3423_call()
call_7909 = func_3423_call()
func_4768_call = mod.get_global_var('func_4768')
func_4771_call = mutated_mod.get_global_var('func_4771')
var_7921 = relay.var("var_7921", dtype = "float32", shape = (1386,))#candidate|7921|(1386,)|var|float32
call_7920 = relay.TupleGetItem(func_4768_call(relay.reshape(var_7921.astype('float32'), [1386,])), 4)
call_7922 = relay.TupleGetItem(func_4771_call(relay.reshape(var_7921.astype('float32'), [1386,])), 4)
output = relay.Tuple([call_7908,call_7920,var_7921,])
output2 = relay.Tuple([call_7909,call_7922,var_7921,])
func_7935 = relay.Function([var_7921,], output)
mod['func_7935'] = func_7935
mod = relay.transform.InferType()(mod)
var_7936 = relay.var("var_7936", dtype = "float32", shape = (1386,))#candidate|7936|(1386,)|var|float32
output = func_7935(var_7936)
func_7937 = relay.Function([var_7936], output)
mutated_mod['func_7937'] = func_7937
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6650_call = mod.get_global_var('func_6650')
func_6652_call = mutated_mod.get_global_var('func_6652')
call_7965 = relay.TupleGetItem(func_6650_call(), 1)
call_7966 = relay.TupleGetItem(func_6652_call(), 1)
func_7632_call = mod.get_global_var('func_7632')
func_7636_call = mutated_mod.get_global_var('func_7636')
var_7973 = relay.var("var_7973", dtype = "uint8", shape = ())#candidate|7973|()|var|uint8
var_7974 = relay.var("var_7974", dtype = "uint8", shape = (40,))#candidate|7974|(40,)|var|uint8
call_7972 = relay.TupleGetItem(func_7632_call(relay.reshape(var_7973.astype('uint8'), []), relay.reshape(var_7974.astype('uint8'), [5, 1, 8]), ), 3)
call_7975 = relay.TupleGetItem(func_7636_call(relay.reshape(var_7973.astype('uint8'), []), relay.reshape(var_7974.astype('uint8'), [5, 1, 8]), ), 3)
bop_7982 = relay.less(call_7972.astype('bool'), var_7973.astype('bool')) # shape=(5, 1, 8)
bop_7985 = relay.less(call_7975.astype('bool'), var_7973.astype('bool')) # shape=(5, 1, 8)
uop_7991 = relay.acos(call_7972.astype('float64')) # shape=(5, 1, 8)
uop_7993 = relay.acos(call_7975.astype('float64')) # shape=(5, 1, 8)
bop_7994 = relay.minimum(uop_7991.astype('uint64'), relay.reshape(bop_7982.astype('uint64'), relay.shape_of(uop_7991))) # shape=(5, 1, 8)
bop_7997 = relay.minimum(uop_7993.astype('uint64'), relay.reshape(bop_7985.astype('uint64'), relay.shape_of(uop_7993))) # shape=(5, 1, 8)
output = relay.Tuple([call_7965,var_7974,bop_7994,])
output2 = relay.Tuple([call_7966,var_7974,bop_7997,])
func_7998 = relay.Function([var_7973,var_7974,], output)
mod['func_7998'] = func_7998
mod = relay.transform.InferType()(mod)
mutated_mod['func_7998'] = func_7998
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7998_call = mutated_mod.get_global_var('func_7998')
var_8000 = relay.var("var_8000", dtype = "uint8", shape = ())#candidate|8000|()|var|uint8
var_8001 = relay.var("var_8001", dtype = "uint8", shape = (40,))#candidate|8001|(40,)|var|uint8
call_7999 = func_7998_call(var_8000,var_8001,)
output = call_7999
func_8002 = relay.Function([var_8000,var_8001,], output)
mutated_mod['func_8002'] = func_8002
mutated_mod = relay.transform.InferType()(mutated_mod)
var_8004 = relay.var("var_8004", dtype = "float64", shape = (16, 9, 2))#candidate|8004|(16, 9, 2)|var|float64
uop_8005 = relay.asin(var_8004.astype('float64')) # shape=(16, 9, 2)
func_5759_call = mod.get_global_var('func_5759')
func_5761_call = mutated_mod.get_global_var('func_5761')
call_8009 = relay.TupleGetItem(func_5759_call(), 0)
call_8010 = relay.TupleGetItem(func_5761_call(), 0)
output = relay.Tuple([uop_8005,call_8009,])
output2 = relay.Tuple([uop_8005,call_8010,])
func_8011 = relay.Function([var_8004,], output)
mod['func_8011'] = func_8011
mod = relay.transform.InferType()(mod)
mutated_mod['func_8011'] = func_8011
mutated_mod = relay.transform.InferType()(mutated_mod)
var_8012 = relay.var("var_8012", dtype = "float64", shape = (16, 9, 2))#candidate|8012|(16, 9, 2)|var|float64
func_8011_call = mutated_mod.get_global_var('func_8011')
call_8013 = func_8011_call(var_8012)
output = call_8013
func_8014 = relay.Function([var_8012], output)
mutated_mod['func_8014'] = func_8014
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4308_call = mod.get_global_var('func_4308')
func_4309_call = mutated_mod.get_global_var('func_4309')
call_8047 = relay.TupleGetItem(func_4308_call(), 0)
call_8048 = relay.TupleGetItem(func_4309_call(), 0)
func_5813_call = mod.get_global_var('func_5813')
func_5814_call = mutated_mod.get_global_var('func_5814')
call_8049 = relay.TupleGetItem(func_5813_call(), 1)
call_8050 = relay.TupleGetItem(func_5814_call(), 1)
output = relay.Tuple([call_8047,call_8049,])
output2 = relay.Tuple([call_8048,call_8050,])
func_8055 = relay.Function([], output)
mod['func_8055'] = func_8055
mod = relay.transform.InferType()(mod)
mutated_mod['func_8055'] = func_8055
mutated_mod = relay.transform.InferType()(mutated_mod)
func_8055_call = mutated_mod.get_global_var('func_8055')
call_8056 = func_8055_call()
output = call_8056
func_8057 = relay.Function([], output)
mutated_mod['func_8057'] = func_8057
mutated_mod = relay.transform.InferType()(mutated_mod)
const_8072 = relay.const([[[7,2,-7,-10,-8,9,-9,-1,-8,3,-2,6,-10,-2,3,-6],[3,2,3,-1,8,-2,6,3,2,4,8,-1,-5,3,-2,8],[8,-7,3,3,9,-8,1,-1,-9,7,4,-4,-3,-9,-7,-10],[9,8,-5,-5,8,-1,7,2,-6,-5,-8,-1,7,6,9,9],[-3,-9,-7,3,10,-4,6,4,6,-2,8,7,-5,7,9,1],[-2,10,-7,-3,-9,-3,-3,-6,-6,-5,-4,-10,-7,3,5,-10]],[[4,-8,-5,7,10,-10,9,-3,-6,1,-3,9,2,-8,7,5],[7,4,4,9,-3,6,5,-9,10,-1,3,-2,5,1,7,-3],[9,10,9,7,8,-4,-3,-6,-4,-5,-8,-1,7,4,8,-10],[-7,10,10,9,-1,1,-7,8,-5,-6,9,7,-9,-4,10,-6],[4,2,5,2,-2,1,-1,1,-9,-10,-4,8,7,2,6,2],[-6,-4,4,7,2,-7,5,10,5,-6,-6,-6,-6,10,-6,10]],[[7,-3,3,-8,7,9,-5,8,10,1,-10,-10,-7,6,5,5],[3,4,7,-2,-9,-6,1,-4,-2,8,-4,-6,-1,4,10,7],[-9,-9,2,3,-2,6,5,-6,-9,-6,-5,5,7,-1,1,10],[6,8,-1,-9,-10,-8,-7,1,-1,8,-3,1,2,-7,-7,-5],[-8,-10,6,2,6,-10,-4,-6,1,-8,-9,-4,-10,-6,-10,1],[5,-7,-3,-4,6,-2,8,3,4,-4,2,-3,-3,-3,-9,-10]],[[-8,-3,3,9,-5,2,-1,-5,-8,-7,8,-7,9,3,2,10],[8,2,3,3,-4,-3,9,9,6,-10,-6,-5,-4,-10,-2,8],[-4,-5,4,6,2,1,7,1,-6,10,-7,-4,5,-1,4,1],[2,8,-4,1,6,-9,2,6,2,-9,-3,4,-6,-7,4,10],[-1,-9,-3,-3,2,1,6,3,5,9,-4,-6,-5,3,-10,-5],[-1,8,-5,-4,4,1,5,10,-6,6,1,10,-6,9,-6,-6]],[[9,3,-4,-10,-2,-10,7,-7,-10,-2,-6,1,7,-5,-2,-2],[-5,-4,-3,9,5,4,-9,4,-3,-2,-1,2,-3,-1,-10,-8],[9,3,-6,9,2,-5,4,2,-6,-10,-9,4,-1,-7,-9,5],[-6,-2,-1,-6,-6,-5,2,10,6,-6,-2,5,5,-4,6,4],[8,-4,9,-3,3,-5,-9,-3,-7,-10,-9,-4,-8,1,-8,5],[1,6,-1,4,8,1,6,-2,4,2,6,8,-6,7,-3,1]],[[-4,-3,9,3,7,-7,-9,-6,1,-6,5,3,2,5,-4,9],[-7,-7,10,-6,-3,1,-9,2,-6,9,2,-3,1,2,-8,5],[5,-2,9,3,-10,-3,1,1,6,7,1,4,9,7,-7,3],[-4,7,2,7,-4,10,-8,3,10,-1,1,3,1,7,4,-2],[-4,4,-10,-7,1,-2,-10,-10,8,-1,7,10,8,8,7,10],[8,7,-5,6,4,3,-4,6,6,-10,-3,-3,-6,-3,-10,4]],[[7,7,8,7,1,7,5,-7,1,8,-6,7,1,-6,-2,-8],[-2,2,10,5,1,9,5,9,-1,-2,-7,8,-6,8,5,-1],[-2,-8,-4,6,-4,1,8,7,-6,-6,-5,-10,9,3,3,10],[8,-2,2,8,-2,7,-9,-1,3,-8,4,-3,6,-6,9,6],[5,-2,5,-4,6,-1,8,-2,1,-9,-7,-7,-8,4,8,-7],[-8,-9,8,2,-7,-1,-4,3,-2,-10,9,-4,8,-6,-7,-9]],[[-3,-8,4,-5,2,5,6,3,4,-8,9,-8,9,-5,-9,1],[-5,-3,8,9,3,-8,-3,8,2,-8,8,-2,-2,-5,-1,4],[-5,6,-2,-3,-10,3,-2,9,-9,-7,-5,-5,-5,-9,-7,4],[-8,5,-5,7,9,-7,3,5,4,-10,-2,-7,5,7,9,-4],[-2,-8,-9,-4,-9,1,8,-3,-9,-3,-7,-2,-6,-6,10,3],[1,1,-8,-10,6,8,-7,-6,5,-9,-10,5,-10,3,3,2]],[[-7,5,5,-4,-7,7,-5,-10,4,3,10,10,-10,-10,8,8],[2,-3,-9,2,-9,-7,9,5,9,-7,-7,-9,-1,2,10,5],[3,10,4,7,-10,10,-4,-5,4,-3,1,9,-10,1,3,1],[5,10,-5,7,-3,-5,1,-9,-1,7,4,-4,-1,4,3,3],[-9,1,10,-9,2,-10,-3,-1,3,6,6,-4,5,2,-7,7],[-8,2,-4,-10,7,3,-3,4,-2,5,-10,-4,9,2,3,-2]],[[6,8,6,-8,2,-3,-6,10,7,4,6,-2,-8,-1,-6,9],[-8,3,8,5,5,-4,-6,6,10,3,-10,1,1,-6,-4,8],[5,-5,5,1,-9,8,9,-1,4,5,10,1,-9,-10,-5,6],[-2,-10,-1,4,6,-9,7,-4,-5,4,-6,-9,-3,7,-7,-5],[1,5,-8,6,-2,7,-5,10,-1,-7,9,-9,5,10,8,-3],[3,-3,-7,-5,3,10,-4,-10,-5,1,3,6,-7,-1,6,-3]]], dtype = "int8")#candidate|8072|(10, 6, 16)|const|int8
var_8073 = relay.var("var_8073", dtype = "int8", shape = (10, 6, 16))#candidate|8073|(10, 6, 16)|var|int8
bop_8074 = relay.add(const_8072.astype('int8'), relay.reshape(var_8073.astype('int8'), relay.shape_of(const_8072))) # shape=(10, 6, 16)
func_7105_call = mod.get_global_var('func_7105')
func_7106_call = mutated_mod.get_global_var('func_7106')
call_8096 = func_7105_call()
call_8097 = func_7105_call()
func_148_call = mod.get_global_var('func_148')
func_150_call = mutated_mod.get_global_var('func_150')
var_8106 = relay.var("var_8106", dtype = "float32", shape = (1386,))#candidate|8106|(1386,)|var|float32
call_8105 = relay.TupleGetItem(func_148_call(relay.reshape(var_8106.astype('float32'), [9, 14, 11])), 0)
call_8107 = relay.TupleGetItem(func_150_call(relay.reshape(var_8106.astype('float32'), [9, 14, 11])), 0)
output = relay.Tuple([bop_8074,call_8096,call_8105,var_8106,])
output2 = relay.Tuple([bop_8074,call_8097,call_8107,var_8106,])
func_8128 = relay.Function([var_8073,var_8106,], output)
mod['func_8128'] = func_8128
mod = relay.transform.InferType()(mod)
var_8129 = relay.var("var_8129", dtype = "int8", shape = (10, 6, 16))#candidate|8129|(10, 6, 16)|var|int8
var_8130 = relay.var("var_8130", dtype = "float32", shape = (1386,))#candidate|8130|(1386,)|var|float32
output = func_8128(var_8129,var_8130,)
func_8131 = relay.Function([var_8129,var_8130,], output)
mutated_mod['func_8131'] = func_8131
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4642_call = mod.get_global_var('func_4642')
func_4643_call = mutated_mod.get_global_var('func_4643')
call_8249 = relay.TupleGetItem(func_4642_call(), 0)
call_8250 = relay.TupleGetItem(func_4643_call(), 0)
func_4108_call = mod.get_global_var('func_4108')
func_4109_call = mutated_mod.get_global_var('func_4109')
call_8252 = func_4108_call()
call_8253 = func_4108_call()
uop_8258 = relay.atanh(call_8249.astype('float32')) # shape=(9, 1, 11)
uop_8260 = relay.atanh(call_8250.astype('float32')) # shape=(9, 1, 11)
uop_8264 = relay.atan(call_8252.astype('float64')) # shape=(9, 1, 11)
uop_8266 = relay.atan(call_8253.astype('float64')) # shape=(9, 1, 11)
bop_8278 = relay.bitwise_or(call_8249.astype('uint16'), relay.reshape(uop_8264.astype('uint16'), relay.shape_of(call_8249))) # shape=(9, 1, 11)
bop_8281 = relay.bitwise_or(call_8250.astype('uint16'), relay.reshape(uop_8266.astype('uint16'), relay.shape_of(call_8250))) # shape=(9, 1, 11)
bop_8292 = relay.logical_and(call_8252.astype('bool'), relay.reshape(uop_8258.astype('bool'), relay.shape_of(call_8252))) # shape=(9, 1, 11)
bop_8295 = relay.logical_and(call_8253.astype('bool'), relay.reshape(uop_8260.astype('bool'), relay.shape_of(call_8253))) # shape=(9, 1, 11)
func_6344_call = mod.get_global_var('func_6344')
func_6347_call = mutated_mod.get_global_var('func_6347')
var_8302 = relay.var("var_8302", dtype = "float32", shape = (990,))#candidate|8302|(990,)|var|float32
call_8301 = func_6344_call(relay.reshape(var_8302.astype('float32'), [5, 198]))
call_8303 = func_6344_call(relay.reshape(var_8302.astype('float32'), [5, 198]))
func_2241_call = mod.get_global_var('func_2241')
func_2243_call = mutated_mod.get_global_var('func_2243')
var_8310 = relay.var("var_8310", dtype = "float64", shape = (1755,))#candidate|8310|(1755,)|var|float64
call_8309 = relay.TupleGetItem(func_2241_call(relay.reshape(var_8310.astype('float64'), [1755,])), 1)
call_8311 = relay.TupleGetItem(func_2243_call(relay.reshape(var_8310.astype('float64'), [1755,])), 1)
uop_8336 = relay.sigmoid(var_8302.astype('float64')) # shape=(990,)
uop_8340 = relay.log2(bop_8292.astype('float64')) # shape=(9, 1, 11)
uop_8342 = relay.log2(bop_8295.astype('float64')) # shape=(9, 1, 11)
output = relay.Tuple([bop_8278,call_8301,call_8309,var_8310,uop_8336,uop_8340,])
output2 = relay.Tuple([bop_8281,call_8303,call_8311,var_8310,uop_8336,uop_8342,])
func_8347 = relay.Function([var_8302,var_8310,], output)
mod['func_8347'] = func_8347
mod = relay.transform.InferType()(mod)
mutated_mod['func_8347'] = func_8347
mutated_mod = relay.transform.InferType()(mutated_mod)
func_8347_call = mutated_mod.get_global_var('func_8347')
var_8349 = relay.var("var_8349", dtype = "float32", shape = (990,))#candidate|8349|(990,)|var|float32
var_8350 = relay.var("var_8350", dtype = "float64", shape = (1755,))#candidate|8350|(1755,)|var|float64
call_8348 = func_8347_call(var_8349,var_8350,)
output = call_8348
func_8351 = relay.Function([var_8349,var_8350,], output)
mutated_mod['func_8351'] = func_8351
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2844_call = mod.get_global_var('func_2844')
func_2845_call = mutated_mod.get_global_var('func_2845')
call_8399 = relay.TupleGetItem(func_2844_call(), 0)
call_8400 = relay.TupleGetItem(func_2845_call(), 0)
output = relay.Tuple([call_8399,])
output2 = relay.Tuple([call_8400,])
func_8408 = relay.Function([], output)
mod['func_8408'] = func_8408
mod = relay.transform.InferType()(mod)
output = func_8408()
func_8409 = relay.Function([], output)
mutated_mod['func_8409'] = func_8409
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3630_call = mod.get_global_var('func_3630')
func_3631_call = mutated_mod.get_global_var('func_3631')
call_8410 = relay.TupleGetItem(func_3630_call(), 1)
call_8411 = relay.TupleGetItem(func_3631_call(), 1)
func_7898_call = mod.get_global_var('func_7898')
func_7899_call = mutated_mod.get_global_var('func_7899')
call_8421 = relay.TupleGetItem(func_7898_call(), 1)
call_8422 = relay.TupleGetItem(func_7899_call(), 1)
func_7494_call = mod.get_global_var('func_7494')
func_7495_call = mutated_mod.get_global_var('func_7495')
call_8449 = func_7494_call()
call_8450 = func_7494_call()
func_8128_call = mod.get_global_var('func_8128')
func_8131_call = mutated_mod.get_global_var('func_8131')
var_8456 = relay.var("var_8456", dtype = "int8", shape = (960,))#candidate|8456|(960,)|var|int8
var_8457 = relay.var("var_8457", dtype = "float32", shape = (1386,))#candidate|8457|(1386,)|var|float32
call_8455 = relay.TupleGetItem(func_8128_call(relay.reshape(var_8456.astype('int8'), [10, 6, 16]), relay.reshape(var_8457.astype('float32'), [1386,]), ), 1)
call_8458 = relay.TupleGetItem(func_8131_call(relay.reshape(var_8456.astype('int8'), [10, 6, 16]), relay.reshape(var_8457.astype('float32'), [1386,]), ), 1)
output = relay.Tuple([call_8410,call_8421,call_8449,call_8455,var_8456,var_8457,])
output2 = relay.Tuple([call_8411,call_8422,call_8450,call_8458,var_8456,var_8457,])
func_8459 = relay.Function([var_8456,var_8457,], output)
mod['func_8459'] = func_8459
mod = relay.transform.InferType()(mod)
var_8460 = relay.var("var_8460", dtype = "int8", shape = (960,))#candidate|8460|(960,)|var|int8
var_8461 = relay.var("var_8461", dtype = "float32", shape = (1386,))#candidate|8461|(1386,)|var|float32
output = func_8459(var_8460,var_8461,)
func_8462 = relay.Function([var_8460,var_8461,], output)
mutated_mod['func_8462'] = func_8462
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4074_call = mod.get_global_var('func_4074')
func_4075_call = mutated_mod.get_global_var('func_4075')
call_8525 = relay.TupleGetItem(func_4074_call(), 3)
call_8526 = relay.TupleGetItem(func_4075_call(), 3)
func_1022_call = mod.get_global_var('func_1022')
func_1023_call = mutated_mod.get_global_var('func_1023')
call_8531 = relay.TupleGetItem(func_1022_call(), 3)
call_8532 = relay.TupleGetItem(func_1023_call(), 3)
func_6650_call = mod.get_global_var('func_6650')
func_6652_call = mutated_mod.get_global_var('func_6652')
call_8540 = relay.TupleGetItem(func_6650_call(), 2)
call_8541 = relay.TupleGetItem(func_6652_call(), 2)
var_8547 = relay.var("var_8547", dtype = "float32", shape = (1386,))#candidate|8547|(1386,)|var|float32
bop_8548 = relay.mod(call_8531.astype('float32'), relay.reshape(var_8547.astype('float32'), relay.shape_of(call_8531))) # shape=(1386,)
bop_8551 = relay.mod(call_8532.astype('float32'), relay.reshape(var_8547.astype('float32'), relay.shape_of(call_8532))) # shape=(1386,)
func_3080_call = mod.get_global_var('func_3080')
func_3081_call = mutated_mod.get_global_var('func_3081')
call_8573 = relay.TupleGetItem(func_3080_call(), 1)
call_8574 = relay.TupleGetItem(func_3081_call(), 1)
output = relay.Tuple([call_8525,call_8540,bop_8548,call_8573,])
output2 = relay.Tuple([call_8526,call_8541,bop_8551,call_8574,])
func_8578 = relay.Function([var_8547,], output)
mod['func_8578'] = func_8578
mod = relay.transform.InferType()(mod)
mutated_mod['func_8578'] = func_8578
mutated_mod = relay.transform.InferType()(mutated_mod)
var_8579 = relay.var("var_8579", dtype = "float32", shape = (1386,))#candidate|8579|(1386,)|var|float32
func_8578_call = mutated_mod.get_global_var('func_8578')
call_8580 = func_8578_call(var_8579)
output = call_8580
func_8581 = relay.Function([var_8579], output)
mutated_mod['func_8581'] = func_8581
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5168_call = mod.get_global_var('func_5168')
func_5169_call = mutated_mod.get_global_var('func_5169')
call_8589 = relay.TupleGetItem(func_5168_call(), 1)
call_8590 = relay.TupleGetItem(func_5169_call(), 1)
var_8596 = relay.var("var_8596", dtype = "float64", shape = (5, 198))#candidate|8596|(5, 198)|var|float64
bop_8597 = relay.left_shift(call_8589.astype('int16'), relay.reshape(var_8596.astype('int16'), relay.shape_of(call_8589))) # shape=(5, 198)
bop_8600 = relay.left_shift(call_8590.astype('int16'), relay.reshape(var_8596.astype('int16'), relay.shape_of(call_8590))) # shape=(5, 198)
func_7353_call = mod.get_global_var('func_7353')
func_7354_call = mutated_mod.get_global_var('func_7354')
call_8608 = func_7353_call()
call_8609 = func_7353_call()
output = relay.Tuple([bop_8597,call_8608,])
output2 = relay.Tuple([bop_8600,call_8609,])
func_8617 = relay.Function([var_8596,], output)
mod['func_8617'] = func_8617
mod = relay.transform.InferType()(mod)
var_8618 = relay.var("var_8618", dtype = "float64", shape = (5, 198))#candidate|8618|(5, 198)|var|float64
output = func_8617(var_8618)
func_8619 = relay.Function([var_8618], output)
mutated_mod['func_8619'] = func_8619
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4814_call = mod.get_global_var('func_4814')
func_4816_call = mutated_mod.get_global_var('func_4816')
call_8637 = relay.TupleGetItem(func_4814_call(), 0)
call_8638 = relay.TupleGetItem(func_4816_call(), 0)
output = relay.Tuple([call_8637,])
output2 = relay.Tuple([call_8638,])
func_8647 = relay.Function([], output)
mod['func_8647'] = func_8647
mod = relay.transform.InferType()(mod)
mutated_mod['func_8647'] = func_8647
mutated_mod = relay.transform.InferType()(mutated_mod)
func_8647_call = mutated_mod.get_global_var('func_8647')
call_8648 = func_8647_call()
output = call_8648
func_8649 = relay.Function([], output)
mutated_mod['func_8649'] = func_8649
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3277_call = mod.get_global_var('func_3277')
func_3279_call = mutated_mod.get_global_var('func_3279')
call_8741 = relay.TupleGetItem(func_3277_call(), 0)
call_8742 = relay.TupleGetItem(func_3279_call(), 0)
output = relay.Tuple([call_8741,])
output2 = relay.Tuple([call_8742,])
func_8743 = relay.Function([], output)
mod['func_8743'] = func_8743
mod = relay.transform.InferType()(mod)
mutated_mod['func_8743'] = func_8743
mutated_mod = relay.transform.InferType()(mutated_mod)
func_8743_call = mutated_mod.get_global_var('func_8743')
call_8744 = func_8743_call()
output = call_8744
func_8745 = relay.Function([], output)
mutated_mod['func_8745'] = func_8745
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2114_call = mod.get_global_var('func_2114')
func_2116_call = mutated_mod.get_global_var('func_2116')
call_8764 = relay.TupleGetItem(func_2114_call(), 0)
call_8765 = relay.TupleGetItem(func_2116_call(), 0)
output = call_8764
output2 = call_8765
func_8772 = relay.Function([], output)
mod['func_8772'] = func_8772
mod = relay.transform.InferType()(mod)
output = func_8772()
func_8773 = relay.Function([], output)
mutated_mod['func_8773'] = func_8773
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2501_call = mod.get_global_var('func_2501')
func_2502_call = mutated_mod.get_global_var('func_2502')
call_8819 = relay.TupleGetItem(func_2501_call(), 0)
call_8820 = relay.TupleGetItem(func_2502_call(), 0)
output = relay.Tuple([call_8819,])
output2 = relay.Tuple([call_8820,])
func_8823 = relay.Function([], output)
mod['func_8823'] = func_8823
mod = relay.transform.InferType()(mod)
mutated_mod['func_8823'] = func_8823
mutated_mod = relay.transform.InferType()(mutated_mod)
func_8823_call = mutated_mod.get_global_var('func_8823')
call_8824 = func_8823_call()
output = call_8824
func_8825 = relay.Function([], output)
mutated_mod['func_8825'] = func_8825
mutated_mod = relay.transform.InferType()(mutated_mod)
func_749_call = mod.get_global_var('func_749')
func_751_call = mutated_mod.get_global_var('func_751')
call_8858 = func_749_call()
call_8859 = func_749_call()
output = relay.Tuple([call_8858,])
output2 = relay.Tuple([call_8859,])
func_8869 = relay.Function([], output)
mod['func_8869'] = func_8869
mod = relay.transform.InferType()(mod)
output = func_8869()
func_8870 = relay.Function([], output)
mutated_mod['func_8870'] = func_8870
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5959_call = mod.get_global_var('func_5959')
func_5960_call = mutated_mod.get_global_var('func_5960')
call_8871 = relay.TupleGetItem(func_5959_call(), 0)
call_8872 = relay.TupleGetItem(func_5960_call(), 0)
output = call_8871
output2 = call_8872
func_8873 = relay.Function([], output)
mod['func_8873'] = func_8873
mod = relay.transform.InferType()(mod)
output = func_8873()
func_8874 = relay.Function([], output)
mutated_mod['func_8874'] = func_8874
mutated_mod = relay.transform.InferType()(mutated_mod)
var_8884 = relay.var("var_8884", dtype = "float32", shape = (4, 13, 14))#candidate|8884|(4, 13, 14)|var|float32
var_8885 = relay.var("var_8885", dtype = "float32", shape = (4, 13, 14))#candidate|8885|(4, 13, 14)|var|float32
bop_8886 = relay.power(var_8884.astype('float32'), relay.reshape(var_8885.astype('float32'), relay.shape_of(var_8884))) # shape=(4, 13, 14)
output = bop_8886
output2 = bop_8886
F = relay.Function([var_8884,var_8885,], output)
mod['main'] = F
mod = relay.transform.InferType()(mod)
print('==========mod==========')
print(mod.astext(show_meta_data=False))
print('===================================')
F = relay.Function([var_8884,var_8885,], output2)
mutated_mod['main'] = F
mutated_mod = relay.transform.InferType()(mutated_mod)
print('==========mutated_mod==========')
print(mutated_mod.astext(show_meta_data=False))
print('===================================')
graph, lib, params = relay.build(mod, target='llvm')
module1 = graph_runtime.create(graph, lib, tvm.device('llvm',0))
intrp2 = relay.build_module.create_executor('graph', mod, tvm.device('llvm',0),'llvm')
intrp3 = relay.build_module.create_executor('debug', mod, tvm.device('llvm',0),'llvm')
intrp4 = relay.build_module.create_executor('vm', mod, tvm.device('llvm',0),'llvm')
graph, lib, params = relay.build(mod, target='cuda')
module5 = graph_runtime.create(graph, lib, tvm.device('cuda',0))
intrp6 = relay.build_module.create_executor('graph', mod, tvm.device('cuda',0),'cuda')
intrp7 = relay.build_module.create_executor('debug', mod, tvm.device('cuda',0),'cuda')
intrp8 = relay.build_module.create_executor('vm', mod, tvm.device('cuda',0),'cuda')
seq = Sequential([
	relay.transform.AlterOpLayout(),
	relay.transform.AnnotateSpans(),
	relay.transform.BatchingOps(),
	relay.transform.CanonicalizeCast(),
	relay.transform.CanonicalizeOps(),
	relay.transform.DeadCodeElimination(),
])
mod = seq(mod)
print(mod.astext(show_meta_data=False))
graph, lib, params = relay.build(mod, target='llvm')
module9 = graph_runtime.create(graph, lib, tvm.device('llvm',0))
intrp10 = relay.build_module.create_executor('graph', mod, tvm.device('llvm',0),'llvm')
intrp11 = relay.build_module.create_executor('debug', mod, tvm.device('llvm',0),'llvm')
intrp12 = relay.build_module.create_executor('vm', mod, tvm.device('llvm',0),'llvm')
graph, lib, params = relay.build(mod, target='cuda')
module13 = graph_runtime.create(graph, lib, tvm.device('cuda',0))
intrp14 = relay.build_module.create_executor('graph', mod, tvm.device('cuda',0),'cuda')
intrp15 = relay.build_module.create_executor('debug', mod, tvm.device('cuda',0),'cuda')
intrp16 = relay.build_module.create_executor('vm', mod, tvm.device('cuda',0),'cuda')
graph, lib, params = relay.build(mutated_mod, target='llvm')
module17 = graph_runtime.create(graph, lib, tvm.device('llvm',0))
intrp18 = relay.build_module.create_executor('graph', mutated_mod, tvm.device('llvm',0),'llvm')
intrp19 = relay.build_module.create_executor('debug', mutated_mod, tvm.device('llvm',0),'llvm')
intrp20 = relay.build_module.create_executor('vm', mutated_mod, tvm.device('llvm',0),'llvm')
graph, lib, params = relay.build(mutated_mod, target='cuda')
module21 = graph_runtime.create(graph, lib, tvm.device('cuda',0))
intrp22 = relay.build_module.create_executor('graph', mutated_mod, tvm.device('cuda',0),'cuda')
intrp23 = relay.build_module.create_executor('debug', mutated_mod, tvm.device('cuda',0),'cuda')
intrp24 = relay.build_module.create_executor('vm', mutated_mod, tvm.device('cuda',0),'cuda')

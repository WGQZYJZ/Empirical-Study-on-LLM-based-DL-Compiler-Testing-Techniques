==========mod==========
#[version = "0.0.5"]
def @func_3722(%var_3660: Tensor[(13, 8, 9), float64], %var_3661: Tensor[(13, 8, 9), float64], %var_3670: Tensor[(13, 8, 9), float64], %var_3708: Tensor[(715), float32]) -> (Tensor[(13, 8, 9), float64], Tensor[(13, 8, 9), uint64], Tensor[(11, 5, 13), float32], Tensor[(715), float32]) {
  %0 = cast(%var_3661, dtype="float64") /* ty=Tensor[(13, 8, 9), float64] */;
  %1 = shape_of(%var_3660, dtype="int32") /* ty=Tensor[(3), int32] */;
  %2 = cast(%var_3660, dtype="float64") /* ty=Tensor[(13, 8, 9), float64] */;
  %3 = dyn.reshape(%0, %1, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %4 = cast(%var_3670, dtype="uint64") /* ty=Tensor[(13, 8, 9), uint64] */;
  %5 = shape_of(%var_3661, dtype="int32") /* ty=Tensor[(3), int32] */;
  %6 = cast(%var_3661, dtype="uint64") /* ty=Tensor[(13, 8, 9), uint64] */;
  %7 = dyn.reshape(%4, %5, newshape=[]) /* ty=Tensor[(?, ?, ?), uint64] */;
  %8 = cast(%var_3708, dtype="float32") /* ty=Tensor[(715), float32] */;
  %9 = reshape(%8, newshape=[11, 5, 13]) /* ty=Tensor[(11, 5, 13), float32] */;
  %10 = floor_mod(%2, %3) /* ty=Tensor[(13, 8, 9), float64] */;
  %11 = multiply(%6, %7) /* ty=Tensor[(13, 8, 9), uint64] */;
  %12 = @func_2387(%9) /* ty=Tensor[(11, 5, 13), float32] */;
  (%10, %11, %12, %var_3708)
}

def @func_1505() -> Tensor[(2, 8), float64] {
  @func_749() /* ty=Tensor[(2, 8), float64] */
}

def @func_4292(%var_4286: Tensor[(11, 3, 13), int32], %var_4287: Tensor[(11, 3, 13), int32]) -> (Tensor[(11, 3, 13), bool],) {
  %13 = cast(%var_4287, dtype="bool") /* ty=Tensor[(11, 3, 13), bool] */;
  %14 = shape_of(%var_4286, dtype="int32") /* ty=Tensor[(3), int32] */;
  %15 = cast(%var_4286, dtype="bool") /* ty=Tensor[(11, 3, 13), bool] */;
  %16 = dyn.reshape(%13, %14, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %17 = less_equal(%15, %16) /* ty=Tensor[(11, 3, 13), bool] */;
  (%17,)
}

def @func_7578() -> (Tensor[(2, 8), float64],) {
  %18 = @func_3630() /* ty=(Tensor[(2, 8), float64], Tensor[(2, 8), float64]) */;
  %19 = %18.1;
  (%19,)
}

def @func_7105() -> Tensor[(99), float32] {
  %20 = @func_1022() /* ty=(Tensor[(99), float32], Tensor[(9, 1, 11), float32], Tensor[(9, 14, 11), float32], Tensor[(1386), float32]) */;
  %20.0
}

def @main(%var_8884: Tensor[(4, 13, 14), float32], %var_8885: Tensor[(4, 13, 14), float32]) -> Tensor[(4, 13, 14), float32] {
  %21 = cast(%var_8885, dtype="float32") /* ty=Tensor[(4, 13, 14), float32] */;
  %22 = shape_of(%var_8884, dtype="int32") /* ty=Tensor[(3), int32] */;
  %23 = cast(%var_8884, dtype="float32") /* ty=Tensor[(4, 13, 14), float32] */;
  %24 = dyn.reshape(%21, %22, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  power(%23, %24) /* ty=Tensor[(4, 13, 14), float32] */
}

def @func_5382(%var_5348: Tensor[(9, 6, 9), float32], %var_5367: uint8, %var_5368: Tensor[(1584), float64]) -> (Tensor[(9, 6, 9), bool], Tensor[(1386), float32], uint8, Tensor[(1584), float64], Tensor[(9, 6, 9), float32]) {
  %25 = cast(%var_5348, dtype="float32") /* ty=Tensor[(9, 6, 9), float32] */;
  %26 = sinh(%25) /* ty=Tensor[(9, 6, 9), float32] */;
  %27 = cast(%var_5348, dtype="bool") /* ty=Tensor[(9, 6, 9), bool] */;
  %28 = shape_of(%26, dtype="int32") /* ty=Tensor[(3), int32] */;
  %29 = cast(%26, dtype="bool") /* ty=Tensor[(9, 6, 9), bool] */;
  %30 = dyn.reshape(%27, %28, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %31 = cast(%var_5367, dtype="uint8") /* ty=uint8 */;
  %32 = cast(%var_5368, dtype="float64") /* ty=Tensor[(1584), float64] */;
  %33 = reshape(%31, newshape=[]) /* ty=uint8 */;
  %34 = reshape(%32, newshape=[1584]) /* ty=Tensor[(1584), float64] */;
  %35 = @func_1891(%33, %34) /* ty=(Tensor[(1386), float32], Tensor[(588), uint8], Tensor[(9, 1, 11), int32], Tensor[(2, 8), float64], Tensor[(16, 9, 11), float64], Tensor[(1584), float64], Tensor[(2, 8), float64], Tensor[(99), float32]) */;
  %36 = cast(%var_5348, dtype="float32") /* ty=Tensor[(9, 6, 9), float32] */;
  %37 = less(%29, %30) /* ty=Tensor[(9, 6, 9), bool] */;
  %38 = %35.0;
  %39 = cosh(%36) /* ty=Tensor[(9, 6, 9), float32] */;
  (%37, %38, %var_5367, %var_5368, %39)
}

def @func_8055() -> (Tensor[(99), float32], Tensor[(2, 8), float64]) {
  %40 = @func_4308() /* ty=(Tensor[(99), float32],) */;
  %41 = @func_5813() /* ty=(Tensor[(2, 8), float64], Tensor[(2, 8), float64], Tensor[(2, 8), float64], Tensor[(9, ?, 11), float32], Tensor[(11, 6, 15), float32], Tensor[(5, 7, 9), float32], Tensor[(315), float32]) */;
  %42 = %40.0;
  %43 = %41.1;
  (%42, %43)
}

def @func_3277() -> (Tensor[(2, 8), float64], Tensor[(2, 8), float64]) {
  %44 = @func_2752() /* ty=(Tensor[(2, 8), float64], Tensor[(2, 8), float64], Tensor[(9, 1, 11), float32], Tensor[(2, 8), float64]) */;
  %45 = @func_1124() /* ty=(Tensor[(2, 8), float64], Tensor[(9, 14, 11), float32]) */;
  %46 = %44.0;
  %47 = %45.0;
  (%46, %47)
}

def @func_6088(%var_6084: Tensor[(12, 10, 13), uint16]) -> (Tensor[(12, 10, 13), uint16],) {
  %48 = cast(%var_6084, dtype="uint16") /* ty=Tensor[(12, 10, 13), uint16] */;
  %49 = shape_of(meta[relay.Constant][0] /* ty=Tensor[(12, 10, 13), uint16] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %50 = cast(meta[relay.Constant][0] /* ty=Tensor[(12, 10, 13), uint16] */, dtype="uint16") /* ty=Tensor[(12, 10, 13), uint16] */;
  %51 = dyn.reshape(%48, %49, newshape=[]) /* ty=Tensor[(?, ?, ?), uint16] */;
  %52 = maximum(%50, %51) /* ty=Tensor[(12, 10, 13), uint16] */;
  (%52,)
}

def @func_7140() -> Tensor[(2, 8), float64] {
  %53 = @func_1065() /* ty=(Tensor[(2, 8), float64], Tensor[(9, 14, 11), float32], Tensor[(1386), float32]) */;
  %53.0
}

def @func_1852() -> Tensor[(2, 8), float64] {
  %54 = @func_1124() /* ty=(Tensor[(2, 8), float64], Tensor[(9, 14, 11), float32]) */;
  %54.0
}

def @func_4692() -> (Tensor[(9, 1, 11), float32], Tensor[(2, 8), float64], Tensor[(2, 8), float64]) {
  %55 = @func_4642() /* ty=(Tensor[(9, 1, 11), float32],) */;
  %56 = @func_4184() /* ty=(Tensor[(2, 8), float64], Tensor[(2, 8), float64]) */;
  %57 = @func_2501() /* ty=(Tensor[(2, 8), float64],) */;
  %58 = %55.0;
  %59 = %56.0;
  %60 = %57.0;
  (%58, %59, %60)
}

def @func_5813() -> (Tensor[(2, 8), float64], Tensor[(2, 8), float64], Tensor[(2, 8), float64], Tensor[(9, ?, 11), float32], Tensor[(11, 6, 15), float32], Tensor[(5, 7, 9), float32], Tensor[(315), float32]) {
  %61 = @func_1952() /* ty=(Tensor[(2, 8), float64],) */;
  %62 = @func_1124() /* ty=(Tensor[(2, 8), float64], Tensor[(9, 14, 11), float32]) */;
  %63 = @func_1711() /* ty=(Tensor[(2, 8), float64], Tensor[(11, 6, 15), bool], Tensor[(5, 198), float64]) */;
  %64 = %63.1;
  %65 = cast(%64, dtype="float64") /* ty=Tensor[(11, 6, 15), float64] */;
  %66 = rsqrt(%65) /* ty=Tensor[(11, 6, 15), float64] */;
  %67 = cast(%66, dtype="float32") /* ty=Tensor[(11, 6, 15), float32] */;
  %68 = cast(meta[relay.Constant][1] /* ty=Tensor[(315), float32] */, dtype="float32") /* ty=Tensor[(315), float32] */;
  %69 = reshape(%68, newshape=[5, 7, 9]) /* ty=Tensor[(5, 7, 9), float32] */;
  %70 = %61.0;
  %71 = @func_4954() /* ty=Tensor[(2, 8), float64] */;
  %72 = %62.0;
  %73 = @func_5303() /* ty=Tensor[(9, ?, 11), float32] */;
  %74 = cosh(%67) /* ty=Tensor[(11, 6, 15), float32] */;
  %75 = @func_4145(%69) /* ty=Tensor[(5, 7, 9), float32] */;
  (%70, %71, %72, %73, %74, %75, meta[relay.Constant][1] /* ty=Tensor[(315), float32] */)
}

def @func_7548(%var_7529: Tensor[(12, 10, 14), int32], %var_7530: Tensor[(12, 10, 14), int32], %var_7538: Tensor[(990, 1), float32], %var_7546: Tensor[(1755), float64]) -> (Tensor[(12, 10, 14), int32], Tensor[(1386), float32], Tensor[(990, 1), float32], Tensor[(585, 3), float64], Tensor[(1755), float64]) {
  %76 = cast(%var_7530, dtype="int32") /* ty=Tensor[(12, 10, 14), int32] */;
  %77 = shape_of(%var_7529, dtype="int32") /* ty=Tensor[(3), int32] */;
  %78 = cast(%var_7529, dtype="int32") /* ty=Tensor[(12, 10, 14), int32] */;
  %79 = dyn.reshape(%76, %77, newshape=[]) /* ty=Tensor[(?, ?, ?), int32] */;
  %80 = cast(%var_7538, dtype="float32") /* ty=Tensor[(990, 1), float32] */;
  %81 = cast(%var_7538, dtype="float32") /* ty=Tensor[(990, 1), float32] */;
  %82 = cast(%var_7538, dtype="float32") /* ty=Tensor[(990, 1), float32] */;
  %83 = reshape(%80, newshape=[11, 6, 15]) /* ty=Tensor[(11, 6, 15), float32] */;
  %84 = reshape(%81, newshape=[11, 6, 15]) /* ty=Tensor[(11, 6, 15), float32] */;
  %85 = reshape(%82, newshape=[11, 6, 15]) /* ty=Tensor[(11, 6, 15), float32] */;
  %86 = @func_1218(%83, %84, %85) /* ty=(Tensor[(2, 8), float64], Tensor[(11, 6, 15), int64], Tensor[(1386), float32], Tensor[(9, 14, 11), float32], Tensor[(11, 6, 15), bool], Tensor[(11, 6, 15), bool]) */;
  %87 = cast(%var_7546, dtype="float64") /* ty=Tensor[(1755), float64] */;
  %88 = reshape(%87, newshape=[585, 3]) /* ty=Tensor[(585, 3), float64] */;
  %89 = left_shift(%78, %79) /* ty=Tensor[(12, 10, 14), int32] */;
  %90 = %86.2;
  %91 = @func_6514(%88) /* ty=Tensor[(585, 3), float64] */;
  (%89, %90, %var_7538, %91, %var_7546)
}

def @func_5507(%var_5468: Tensor[(990), float32], %var_5499: Tensor[(14, 42), uint8]) -> (Tensor[(99), float32], Tensor[(990), bool], Tensor[(585, 3), bool], Tensor[(588), uint8], Tensor[(14, 42), uint8]) {
  %92 = @func_4308() /* ty=(Tensor[(99), float32],) */;
  %93 = cast(%var_5468, dtype="float32") /* ty=Tensor[(990), float32] */;
  %94 = reshape(%93, newshape=[990]) /* ty=Tensor[(990), float32] */;
  %95 = @func_4160(%94) /* ty=(Tensor[(2, 8), float64], Tensor[(11, 6, 15), bool], Tensor[(990), float32]) */;
  %96 = %95.2;
  %97 = cast(%var_5468, dtype="bool") /* ty=Tensor[(990), bool] */;
  %98 = shape_of(%96, dtype="int32") /* ty=Tensor[(1), int32] */;
  %99 = cast(%96, dtype="bool") /* ty=Tensor[(990), bool] */;
  %100 = dyn.reshape(%97, %98, newshape=[]) /* ty=Tensor[(?), bool] */;
  %101 = cast(%96, dtype="float32") /* ty=Tensor[(990), float32] */;
  %102 = reshape(%101, newshape=[990]) /* ty=Tensor[(990), float32] */;
  %103 = @func_2008(%102) /* ty=(Tensor[(9, 1, 11), float32], Tensor[(11, 6, 15), bool], Tensor[(990), float32], Tensor[(585, 3), bool]) */;
  %104 = cast(%var_5499, dtype="uint8") /* ty=Tensor[(14, 42), uint8] */;
  %105 = reshape(%104, newshape=[588]) /* ty=Tensor[(588), uint8] */;
  %106 = @func_3585(%105) /* ty=(Tensor[(2, 8), float64], Tensor[(99), float64], Tensor[(588), uint8], Tensor[(1386), float64]) */;
  %107 = %92.0;
  %108 = greater(%99, %100) /* ty=Tensor[(990), bool] */;
  %109 = %103.3;
  %110 = %106.2;
  (%107, %108, %109, %110, %var_5499)
}

def @func_5745() -> Tensor[(2, 8), float64] {
  %111 = @func_3630() /* ty=(Tensor[(2, 8), float64], Tensor[(2, 8), float64]) */;
  %111.1
}

def @func_5096(%var_5037: Tensor[(936), float64], %var_5038: Tensor[(715), float32], %var_5042: Tensor[(14, 99), float32]) -> (Tensor[(585, 3), uint64], Tensor[(715), float32], Tensor[(936), float64], Tensor[(2, 8), float64], Tensor[(14, 99), float32], Tensor[(2, 8), float64], Tensor[(715), float32]) {
  %112 = @func_4074() /* ty=(Tensor[(2, 8), float64], Tensor[(16, 9, 11), float64], Tensor[(1584), float64], Tensor[(990), float32], Tensor[(585, 3), float64], Tensor[(585, 3), uint64]) */;
  %113 = cast(%var_5037, dtype="float64") /* ty=Tensor[(936), float64] */;
  %114 = cast(%var_5037, dtype="float64") /* ty=Tensor[(936), float64] */;
  %115 = cast(%var_5037, dtype="float64") /* ty=Tensor[(936), float64] */;
  %116 = cast(%var_5038, dtype="float32") /* ty=Tensor[(715), float32] */;
  %117 = reshape(%113, newshape=[13, 8, 9]) /* ty=Tensor[(13, 8, 9), float64] */;
  %118 = reshape(%114, newshape=[13, 8, 9]) /* ty=Tensor[(13, 8, 9), float64] */;
  %119 = reshape(%115, newshape=[13, 8, 9]) /* ty=Tensor[(13, 8, 9), float64] */;
  %120 = reshape(%116, newshape=[715]) /* ty=Tensor[(715), float32] */;
  %121 = @func_3722(%117, %118, %119, %120) /* ty=(Tensor[(13, 8, 9), float64], Tensor[(13, 8, 9), uint64], Tensor[(11, 5, 13), float32], Tensor[(715), float32]) */;
  %122 = cast(%var_5042, dtype="float32") /* ty=Tensor[(14, 99), float32] */;
  %123 = reshape(%122, newshape=[1, 1386]) /* ty=Tensor[(1, 1386), float32] */;
  %124 = @func_3163(%123) /* ty=(Tensor[(99), float32], Tensor[(1386), float32], Tensor[(1, 1386), float32], Tensor[(2, 8), float64], Tensor[(9, 14, 11), float32]) */;
  %125 = cast(%var_5038, dtype="float32") /* ty=Tensor[(715), float32] */;
  %126 = %112.5;
  %127 = %121.3;
  %128 = %124.3;
  %129 = @func_2890() /* ty=Tensor[(2, 8), float64] */;
  %130 = log(%125) /* ty=Tensor[(715), float32] */;
  (%126, %127, %var_5037, %128, %var_5042, %129, %130)
}

def @func_7935(%var_7921: Tensor[(1386), float32]) -> (Tensor[(2, 8), float64], Tensor[(1386), float32], Tensor[(1386), float32]) {
  %131 = cast(%var_7921, dtype="float32") /* ty=Tensor[(1386), float32] */;
  %132 = reshape(%131, newshape=[1386]) /* ty=Tensor[(1386), float32] */;
  %133 = @func_4768(%132) /* ty=(Tensor[(99), float32], Tensor[(588), uint8], Tensor[(588), float64], Tensor[(2, 8), float64], Tensor[(1386), float32]) */;
  %134 = @func_3423() /* ty=Tensor[(2, 8), float64] */;
  %135 = %133.4;
  (%134, %135, %var_7921)
}

def @func_2987(%var_2957: Tensor[(1386), float32]) -> (Tensor[(99), float64], Tensor[(9, 14, 11), float32], Tensor[(1386), float32], Tensor[(1755), float32], Tensor[(1755), float64], Tensor[(99), uint8], Tensor[(588), uint8], Tensor[(588), uint8]) {
  %136 = @func_2114() /* ty=(Tensor[(99), float64],) */;
  %137 = cast(%var_2957, dtype="float32") /* ty=Tensor[(1386), float32] */;
  %138 = reshape(%137, newshape=[9, 14, 11]) /* ty=Tensor[(9, 14, 11), float32] */;
  %139 = @func_1472(%138) /* ty=(Tensor[(2, 8), float64], Tensor[(9, 14, 11), float32], Tensor[(9, 14, 11), float32]) */;
  %140 = cast(meta[relay.Constant][2] /* ty=Tensor[(1755), float64] */, dtype="float64") /* ty=Tensor[(1755), float64] */;
  %141 = reshape(%140, newshape=[1755]) /* ty=Tensor[(1755), float64] */;
  %142 = @func_2241(%141) /* ty=(Tensor[(99), float64], Tensor[(2, 8), float64], Tensor[(1755), float32]) */;
  %143 = @func_2114() /* ty=(Tensor[(99), float64],) */;
  %144 = %143.0;
  %145 = cast(%144, dtype="float64") /* ty=Tensor[(99), float64] */;
  %146 = sqrt(%145) /* ty=Tensor[(99), float64] */;
  %147 = cast(%144, dtype="uint8") /* ty=Tensor[(99), uint8] */;
  %148 = shape_of(%146, dtype="int32") /* ty=Tensor[(1), int32] */;
  %149 = cast(%146, dtype="uint8") /* ty=Tensor[(99), uint8] */;
  %150 = dyn.reshape(%147, %148, newshape=[]) /* ty=Tensor[(?), uint8] */;
  %151 = cast(meta[relay.Constant][3] /* ty=Tensor[(588), uint8] */, dtype="uint8") /* ty=Tensor[(588), uint8] */;
  %152 = reshape(%151, newshape=[588]) /* ty=Tensor[(588), uint8] */;
  %153 = @func_2639(%152) /* ty=(Tensor[(1386), float32], Tensor[(2, 8), float64], Tensor[(588), uint8], Tensor[(588), uint8], Tensor[(99), float64]) */;
  %154 = %136.0;
  %155 = %139.2;
  %156 = %142.2;
  %157 = multiply(%149, %150) /* ty=Tensor[(99), uint8] */;
  %158 = %153.2;
  (%154, %155, %var_2957, %156, meta[relay.Constant][2] /* ty=Tensor[(1755), float64] */, %157, %158, meta[relay.Constant][3] /* ty=Tensor[(588), uint8] */)
}

def @func_8772() -> Tensor[(99), float64] {
  %159 = @func_2114() /* ty=(Tensor[(99), float64],) */;
  %159.0
}

def @func_6034() -> Tensor[(99), float32] {
  @func_5836() /* ty=Tensor[(99), float32] */
}

def @func_4984(%var_4979: Tensor[(585, 3), float64]) -> (Tensor[(2, 8), float64], Tensor[(585, 3), bool]) {
  %160 = @func_4074() /* ty=(Tensor[(2, 8), float64], Tensor[(16, 9, 11), float64], Tensor[(1584), float64], Tensor[(990), float32], Tensor[(585, 3), float64], Tensor[(585, 3), uint64]) */;
  %161 = %160.4;
  %162 = cast(%var_4979, dtype="bool") /* ty=Tensor[(585, 3), bool] */;
  %163 = shape_of(%161, dtype="int32") /* ty=Tensor[(2), int32] */;
  %164 = cast(%161, dtype="bool") /* ty=Tensor[(585, 3), bool] */;
  %165 = dyn.reshape(%162, %163, newshape=[]) /* ty=Tensor[(?, ?), bool] */;
  %166 = @func_749() /* ty=Tensor[(2, 8), float64] */;
  %167 = logical_or(%164, %165) /* ty=Tensor[(585, 3), bool] */;
  (%166, %167)
}

def @func_3974(%var_3967: Tensor[(1386), float32]) -> (Tensor[(2, 8), float64], Tensor[(2, 8), float64], Tensor[(2, 8), float64], Tensor[(1386), float32]) {
  %168 = cast(%var_3967, dtype="float32") /* ty=Tensor[(1386), float32] */;
  %169 = reshape(%168, newshape=[1, 1386]) /* ty=Tensor[(1, 1386), float32] */;
  %170 = @func_3163(%169) /* ty=(Tensor[(99), float32], Tensor[(1386), float32], Tensor[(1, 1386), float32], Tensor[(2, 8), float64], Tensor[(9, 14, 11), float32]) */;
  %171 = @func_3423() /* ty=Tensor[(2, 8), float64] */;
  %172 = @func_3322() /* ty=Tensor[(2, 8), float64] */;
  %173 = %170.3;
  (%171, %172, %173, %var_3967)
}

def @func_1936() -> (Tensor[(9, ?, 11), float32], Tensor[(9, ?, 11), bool]) {
  %174 = @func_1022() /* ty=(Tensor[(99), float32], Tensor[(9, 1, 11), float32], Tensor[(9, 14, 11), float32], Tensor[(1386), float32]) */;
  %175 = %174.1;
  %176 = cast(%175, dtype="float32") /* ty=Tensor[(9, 1, 11), float32] */;
  %177 = tan(%176) /* ty=Tensor[(9, 1, 11), float32] */;
  %178 = cast(%177, dtype="float64") /* ty=Tensor[(9, 1, 11), float64] */;
  %179 = shape_of(%175, dtype="int32") /* ty=Tensor[(3), int32] */;
  %180 = cast(%175, dtype="float64") /* ty=Tensor[(9, 1, 11), float64] */;
  %181 = dyn.reshape(%178, %179, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %182 = floor_divide(%180, %181) /* ty=Tensor[(9, ?, 11), float64] */;
  %183 = cast(%182, dtype="float64") /* ty=Tensor[(9, ?, 11), float64] */;
  %184 = shape_of(%175, dtype="int32") /* ty=Tensor[(3), int32] */;
  %185 = cast(%175, dtype="float64") /* ty=Tensor[(9, 1, 11), float64] */;
  %186 = dyn.reshape(%183, %184, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %187 = power(%185, %186) /* ty=Tensor[(9, ?, 11), float64] */;
  %188 = cast(%177, dtype="float32") /* ty=Tensor[(9, 1, 11), float32] */;
  %189 = shape_of(%187, dtype="int32") /* ty=Tensor[(3), int32] */;
  %190 = cast(%187, dtype="float32") /* ty=Tensor[(9, ?, 11), float32] */;
  %191 = dyn.reshape(%188, %189, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %192 = cast(%177, dtype="bool") /* ty=Tensor[(9, 1, 11), bool] */;
  %193 = shape_of(%175, dtype="int32") /* ty=Tensor[(3), int32] */;
  %194 = cast(%175, dtype="bool") /* ty=Tensor[(9, 1, 11), bool] */;
  %195 = dyn.reshape(%192, %193, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %196 = mod(%190, %191) /* ty=Tensor[(9, ?, 11), float32] */;
  %197 = greater_equal(%194, %195) /* ty=Tensor[(9, ?, 11), bool] */;
  (%196, %197)
}

def @func_2639(%var_2572: Tensor[(588), uint8]) -> (Tensor[(1386), float32], Tensor[(2, 8), float64], Tensor[(588), uint8], Tensor[(588), uint8], Tensor[(99), float64]) {
  %198 = @func_1065() /* ty=(Tensor[(2, 8), float64], Tensor[(9, 14, 11), float32], Tensor[(1386), float32]) */;
  %199 = cast(%var_2572, dtype="uint8") /* ty=Tensor[(588), uint8] */;
  %200 = reshape(%199, newshape=[588]) /* ty=Tensor[(588), uint8] */;
  %201 = @func_1835(%200) /* ty=(Tensor[(2, 8), float64], uint8, Tensor[(588), uint8], Tensor[(9, 14, 11), bool]) */;
  %202 = @func_1022() /* ty=(Tensor[(99), float32], Tensor[(9, 1, 11), float32], Tensor[(9, 14, 11), float32], Tensor[(1386), float32]) */;
  %203 = %202.0;
  %204 = cast(%203, dtype="float64") /* ty=Tensor[(99), float64] */;
  %205 = %198.2;
  %206 = @func_749() /* ty=Tensor[(2, 8), float64] */;
  %207 = %201.2;
  %208 = asinh(%204) /* ty=Tensor[(99), float64] */;
  (%205, %206, %207, %var_2572, %208)
}

def @func_8647() -> (Tensor[(9, 1, 11), float32],) {
  %209 = @func_4814() /* ty=(Tensor[(9, 1, 11), float32],) */;
  %210 = %209.0;
  (%210,)
}

def @func_8459(%var_8456: Tensor[(960), int8], %var_8457: Tensor[(1386), float32]) -> (Tensor[(2, 8), float64], Tensor[(12, 1, 7), float64], Tensor[(2, 8), float64], Tensor[(99), float32], Tensor[(960), int8], Tensor[(1386), float32]) {
  %211 = @func_3630() /* ty=(Tensor[(2, 8), float64], Tensor[(2, 8), float64]) */;
  %212 = @func_7898() /* ty=(Tensor[(11, 6, 15), float64], Tensor[(12, 1, 7), float64], Tensor[(1755), float64], Tensor[(1386), float32], Tensor[(99), float32], Tensor[(2, 8), float64], Tensor[(352), int8], Tensor[(2, 8), float64]) */;
  %213 = cast(%var_8456, dtype="int8") /* ty=Tensor[(960), int8] */;
  %214 = cast(%var_8457, dtype="float32") /* ty=Tensor[(1386), float32] */;
  %215 = reshape(%213, newshape=[10, 6, 16]) /* ty=Tensor[(10, 6, 16), int8] */;
  %216 = reshape(%214, newshape=[1386]) /* ty=Tensor[(1386), float32] */;
  %217 = @func_8128(%215, %216) /* ty=(Tensor[(10, 6, 16), int8], Tensor[(99), float32], Tensor[(9, 14, 11), float32], Tensor[(1386), float32]) */;
  %218 = %211.1;
  %219 = %212.1;
  %220 = @func_7494() /* ty=Tensor[(2, 8), float64] */;
  %221 = %217.1;
  (%218, %219, %220, %221, %var_8456, %var_8457)
}

def @func_8128(%var_8073: Tensor[(10, 6, 16), int8], %var_8106: Tensor[(1386), float32]) -> (Tensor[(10, 6, 16), int8], Tensor[(99), float32], Tensor[(9, 14, 11), float32], Tensor[(1386), float32]) {
  %222 = cast(%var_8073, dtype="int8") /* ty=Tensor[(10, 6, 16), int8] */;
  %223 = shape_of(meta[relay.Constant][4] /* ty=Tensor[(10, 6, 16), int8] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %224 = cast(meta[relay.Constant][4] /* ty=Tensor[(10, 6, 16), int8] */, dtype="int8") /* ty=Tensor[(10, 6, 16), int8] */;
  %225 = dyn.reshape(%222, %223, newshape=[]) /* ty=Tensor[(?, ?, ?), int8] */;
  %226 = cast(%var_8106, dtype="float32") /* ty=Tensor[(1386), float32] */;
  %227 = reshape(%226, newshape=[9, 14, 11]) /* ty=Tensor[(9, 14, 11), float32] */;
  %228 = @func_148(%227) /* ty=(Tensor[(9, 14, 11), float32],) */;
  %229 = add(%224, %225) /* ty=Tensor[(10, 6, 16), int8] */;
  %230 = @func_7105() /* ty=Tensor[(99), float32] */;
  %231 = %228.0;
  (%229, %230, %231, %var_8106)
}

def @func_1472(%var_1434: Tensor[(9, 14, 11), float32]) -> (Tensor[(2, 8), float64], Tensor[(9, 14, 11), float32], Tensor[(9, 14, 11), float32]) {
  %232 = @func_820() /* ty=(Tensor[(2, 8), float64], Tensor[(9, 1, 11), float32], Tensor[(99), float32]) */;
  %233 = @func_1124() /* ty=(Tensor[(2, 8), float64], Tensor[(9, 14, 11), float32]) */;
  %234 = %233.1;
  %235 = cast(%var_1434, dtype="float32") /* ty=Tensor[(9, 14, 11), float32] */;
  %236 = shape_of(%234, dtype="int32") /* ty=Tensor[(3), int32] */;
  %237 = cast(%234, dtype="float32") /* ty=Tensor[(9, 14, 11), float32] */;
  %238 = dyn.reshape(%235, %236, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %239 = divide(%237, %238) /* ty=Tensor[(9, 14, 11), float32] */;
  %240 = cast(%239, dtype="float32") /* ty=Tensor[(9, 14, 11), float32] */;
  %241 = reshape(%240, newshape=[9, 14, 11]) /* ty=Tensor[(9, 14, 11), float32] */;
  %242 = @func_148(%241) /* ty=(Tensor[(9, 14, 11), float32],) */;
  %243 = %232.0;
  %244 = %242.0;
  (%243, %239, %244)
}

def @func_2752() -> (Tensor[(2, 8), float64], Tensor[(2, 8), float64], Tensor[(9, 1, 11), float32], Tensor[(2, 8), float64]) {
  %245 = @func_1065() /* ty=(Tensor[(2, 8), float64], Tensor[(9, 14, 11), float32], Tensor[(1386), float32]) */;
  %246 = @func_2501() /* ty=(Tensor[(2, 8), float64],) */;
  %247 = @func_1346() /* ty=(Tensor[(2, 8), float64], Tensor[(2, 8), float64], Tensor[(9, 1, 11), float32], Tensor[(99), float32], Tensor[(9, 1, 11), float32]) */;
  %248 = @func_820() /* ty=(Tensor[(2, 8), float64], Tensor[(9, 1, 11), float32], Tensor[(99), float32]) */;
  %249 = %245.0;
  %250 = %246.0;
  %251 = %247.4;
  %252 = %248.0;
  (%249, %250, %251, %252)
}

def @func_8869() -> (Tensor[(2, 8), float64],) {
  %253 = @func_749() /* ty=Tensor[(2, 8), float64] */;
  (%253,)
}

def @func_7998(%var_7973: uint8, %var_7974: Tensor[(40), uint8]) -> (Tensor[(9, ?, 11), float32], Tensor[(40), uint8], Tensor[(5, ?, 8), uint64]) {
  %254 = @func_6650() /* ty=(Tensor[(2, 8), float64], Tensor[(9, ?, 11), float32], Tensor[(2, 8), float64]) */;
  %255 = cast(%var_7973, dtype="uint8") /* ty=uint8 */;
  %256 = cast(%var_7974, dtype="uint8") /* ty=Tensor[(40), uint8] */;
  %257 = reshape(%255, newshape=[]) /* ty=uint8 */;
  %258 = reshape(%256, newshape=[5, 1, 8]) /* ty=Tensor[(5, 1, 8), uint8] */;
  %259 = @func_7632(%257, %258) /* ty=(Tensor[(2, 8), float64], Tensor[(99), float32], Tensor[(99), float32], Tensor[(5, 1, 8), float32], Tensor[(99), float32], Tensor[(5, 1, 8), float32]) */;
  %260 = %259.3;
  %261 = cast(%260, dtype="float64") /* ty=Tensor[(5, 1, 8), float64] */;
  %262 = acos(%261) /* ty=Tensor[(5, 1, 8), float64] */;
  %263 = cast(%260, dtype="bool") /* ty=Tensor[(5, 1, 8), bool] */;
  %264 = cast(%var_7973, dtype="bool") /* ty=bool */;
  %265 = less(%263, %264) /* ty=Tensor[(5, 1, 8), bool] */;
  %266 = cast(%265, dtype="uint64") /* ty=Tensor[(5, 1, 8), uint64] */;
  %267 = shape_of(%262, dtype="int32") /* ty=Tensor[(3), int32] */;
  %268 = cast(%262, dtype="uint64") /* ty=Tensor[(5, 1, 8), uint64] */;
  %269 = dyn.reshape(%266, %267, newshape=[]) /* ty=Tensor[(?, ?, ?), uint64] */;
  %270 = %254.1;
  %271 = minimum(%268, %269) /* ty=Tensor[(5, ?, 8), uint64] */;
  (%270, %var_7974, %271)
}

def @func_7178() -> (Tensor[(9, ?, 11), float32],) {
  %272 = @func_1936() /* ty=(Tensor[(9, ?, 11), float32], Tensor[(9, ?, 11), bool]) */;
  %273 = %272.0;
  (%273,)
}

def @func_1065() -> (Tensor[(2, 8), float64], Tensor[(9, 14, 11), float32], Tensor[(1386), float32]) {
  %274 = cast(meta[relay.Constant][5] /* ty=Tensor[(1386), float32] */, dtype="float32") /* ty=Tensor[(1386), float32] */;
  %275 = reshape(%274, newshape=[9, 14, 11]) /* ty=Tensor[(9, 14, 11), float32] */;
  %276 = @func_148(%275) /* ty=(Tensor[(9, 14, 11), float32],) */;
  %277 = @func_749() /* ty=Tensor[(2, 8), float64] */;
  %278 = %276.0;
  (%277, %278, meta[relay.Constant][5] /* ty=Tensor[(1386), float32] */)
}

def @func_6311(%var_6305: Tensor[(24, 1), float32]) -> (Tensor[(2, 8), float64], Tensor[(4, 6, 1), float32], Tensor[(24, 1), float32]) {
  %279 = cast(%var_6305, dtype="float32") /* ty=Tensor[(24, 1), float32] */;
  %280 = reshape(%279, newshape=[4, 6, 1]) /* ty=Tensor[(4, 6, 1), float32] */;
  %281 = @func_5671(%280) /* ty=(Tensor[(4, 6, 1), float32],) */;
  %282 = @func_3322() /* ty=Tensor[(2, 8), float64] */;
  %283 = %281.0;
  (%282, %283, %var_6305)
}

def @func_3423() -> Tensor[(2, 8), float64] {
  %284 = @func_1952() /* ty=(Tensor[(2, 8), float64],) */;
  %284.0
}

def @func_4581() -> (Tensor[(99), float32],) {
  %285 = @func_1272() /* ty=Tensor[(99), float32] */;
  (%285,)
}

def @func_1124() -> (Tensor[(2, 8), float64], Tensor[(9, 14, 11), float32]) {
  %286 = @func_1022() /* ty=(Tensor[(99), float32], Tensor[(9, 1, 11), float32], Tensor[(9, 14, 11), float32], Tensor[(1386), float32]) */;
  %287 = @func_749() /* ty=Tensor[(2, 8), float64] */;
  %288 = %286.2;
  (%287, %288)
}

def @func_6401() -> (Tensor[(9, ?, 11), float32], Tensor[(9, 1, 11), float32]) {
  %289 = @func_1936() /* ty=(Tensor[(9, ?, 11), float32], Tensor[(9, ?, 11), bool]) */;
  %290 = @func_820() /* ty=(Tensor[(2, 8), float64], Tensor[(9, 1, 11), float32], Tensor[(99), float32]) */;
  %291 = %289.0;
  %292 = %290.1;
  (%291, %292)
}

def @func_5836() -> Tensor[(99), float32] {
  %293 = @func_2844() /* ty=(Tensor[(99), float32],) */;
  %293.0
}

def @func_4074() -> (Tensor[(2, 8), float64], Tensor[(16, 9, 11), float64], Tensor[(1584), float64], Tensor[(990), float32], Tensor[(585, 3), float64], Tensor[(585, 3), uint64]) {
  %294 = @func_820() /* ty=(Tensor[(2, 8), float64], Tensor[(9, 1, 11), float32], Tensor[(99), float32]) */;
  %295 = cast(meta[relay.Constant][6] /* ty=Tensor[(1584), float64] */, dtype="float64") /* ty=Tensor[(1584), float64] */;
  %296 = reshape(%295, newshape=[16, 9, 11]) /* ty=Tensor[(16, 9, 11), float64] */;
  %297 = cast(meta[relay.Constant][7] /* ty=Tensor[(990), float32] */, dtype="float32") /* ty=Tensor[(990), float32] */;
  %298 = reshape(%297, newshape=[990]) /* ty=Tensor[(990), float32] */;
  %299 = @func_2008(%298) /* ty=(Tensor[(9, 1, 11), float32], Tensor[(11, 6, 15), bool], Tensor[(990), float32], Tensor[(585, 3), bool]) */;
  %300 = %299.3;
  %301 = cast(%300, dtype="float32") /* ty=Tensor[(585, 3), float32] */;
  %302 = sinh(%301) /* ty=Tensor[(585, 3), float32] */;
  %303 = cast(%302, dtype="float64") /* ty=Tensor[(585, 3), float64] */;
  %304 = cast(%302, dtype="uint64") /* ty=Tensor[(585, 3), uint64] */;
  %305 = shape_of(%300, dtype="int32") /* ty=Tensor[(2), int32] */;
  %306 = cast(%300, dtype="uint64") /* ty=Tensor[(585, 3), uint64] */;
  %307 = dyn.reshape(%304, %305, newshape=[]) /* ty=Tensor[(?, ?), uint64] */;
  %308 = %294.0;
  %309 = @func_1356(%296) /* ty=Tensor[(16, 9, 11), float64] */;
  %310 = cosh(%303) /* ty=Tensor[(585, 3), float64] */;
  %311 = maximum(%306, %307) /* ty=Tensor[(585, 3), uint64] */;
  (%308, %309, meta[relay.Constant][6] /* ty=Tensor[(1584), float64] */, meta[relay.Constant][7] /* ty=Tensor[(990), float32] */, %310, %311)
}

def @func_4768(%var_4764: Tensor[(1386), float32]) -> (Tensor[(99), float32], Tensor[(588), uint8], Tensor[(588), float64], Tensor[(2, 8), float64], Tensor[(1386), float32]) {
  %312 = @func_4581() /* ty=(Tensor[(99), float32],) */;
  %313 = cast(meta[relay.Constant][8] /* ty=Tensor[(588), uint8] */, dtype="uint8") /* ty=Tensor[(588), uint8] */;
  %314 = reshape(%313, newshape=[588]) /* ty=Tensor[(588), uint8] */;
  %315 = @func_2639(%314) /* ty=(Tensor[(1386), float32], Tensor[(2, 8), float64], Tensor[(588), uint8], Tensor[(588), uint8], Tensor[(99), float64]) */;
  %316 = %315.2;
  %317 = cast(%316, dtype="float32") /* ty=Tensor[(588), float32] */;
  %318 = cosh(%317) /* ty=Tensor[(588), float32] */;
  %319 = cast(%318, dtype="float64") /* ty=Tensor[(588), float64] */;
  %320 = cast(%var_4764, dtype="float32") /* ty=Tensor[(1386), float32] */;
  %321 = reshape(%320, newshape=[1386]) /* ty=Tensor[(1386), float32] */;
  %322 = @func_3974(%321) /* ty=(Tensor[(2, 8), float64], Tensor[(2, 8), float64], Tensor[(2, 8), float64], Tensor[(1386), float32]) */;
  %323 = %312.0;
  %324 = sqrt(%319) /* ty=Tensor[(588), float64] */;
  %325 = %322.2;
  (%323, meta[relay.Constant][8] /* ty=Tensor[(588), uint8] */, %324, %325, %var_4764)
}

def @func_2241(%var_2225: Tensor[(1755), float64]) -> (Tensor[(99), float64], Tensor[(2, 8), float64], Tensor[(1755), float32]) {
  %326 = @func_2114() /* ty=(Tensor[(99), float64],) */;
  %327 = @func_1124() /* ty=(Tensor[(2, 8), float64], Tensor[(9, 14, 11), float32]) */;
  %328 = cast(%var_2225, dtype="float64") /* ty=Tensor[(1755), float64] */;
  %329 = reshape(%328, newshape=[13, 9, 15]) /* ty=Tensor[(13, 9, 15), float64] */;
  %330 = @func_1532(%329) /* ty=Tensor[(13, 9, 15), float64] */;
  %331 = cast(%330, dtype="float32") /* ty=Tensor[(13, 9, 15), float32] */;
  %332 = shape_of(%var_2225, dtype="int32") /* ty=Tensor[(1), int32] */;
  %333 = cast(%var_2225, dtype="float32") /* ty=Tensor[(1755), float32] */;
  %334 = dyn.reshape(%331, %332, newshape=[]) /* ty=Tensor[(?), float32] */;
  %335 = %326.0;
  %336 = %327.0;
  %337 = power(%333, %334) /* ty=Tensor[(1755), float32] */;
  (%335, %336, %337)
}

def @func_252(%var_247: Tensor[(9, 1, 11), float32]) -> Tensor[(9, 1, 11), float32] {
  %338 = cast(%var_247, dtype="float32") /* ty=Tensor[(9, 1, 11), float32] */;
  sin(%338) /* ty=Tensor[(9, 1, 11), float32] */
}

def @func_1952() -> (Tensor[(2, 8), float64],) {
  %339 = @func_749() /* ty=Tensor[(2, 8), float64] */;
  (%339,)
}

def @func_6920(%var_6871: Tensor[(990), float32], %var_6887: Tensor[(99), float32]) -> (Tensor[(2, 8), float64], Tensor[(990), uint8], Tensor[(9, 1, 11), float32], Tensor[(99), float32], Tensor[(2, 8), float64], Tensor[(2, 8), float64]) {
  %340 = @func_4074() /* ty=(Tensor[(2, 8), float64], Tensor[(16, 9, 11), float64], Tensor[(1584), float64], Tensor[(990), float32], Tensor[(585, 3), float64], Tensor[(585, 3), uint64]) */;
  %341 = @func_5556() /* ty=(Tensor[(585, 3), float64], Tensor[(585, 3), bool], Tensor[(990), float32]) */;
  %342 = %341.2;
  %343 = cast(%var_6871, dtype="uint8") /* ty=Tensor[(990), uint8] */;
  %344 = shape_of(%342, dtype="int32") /* ty=Tensor[(1), int32] */;
  %345 = cast(%342, dtype="uint8") /* ty=Tensor[(990), uint8] */;
  %346 = dyn.reshape(%343, %344, newshape=[]) /* ty=Tensor[(?), uint8] */;
  %347 = cast(%var_6887, dtype="float32") /* ty=Tensor[(99), float32] */;
  %348 = reshape(%347, newshape=[9, 1, 11]) /* ty=Tensor[(9, 1, 11), float32] */;
  %349 = @func_5538() /* ty=(Tensor[(2, 8), float64], Tensor[(12, 1, 7), float64], Tensor[(2, 8), float64]) */;
  %350 = %340.0;
  %351 = left_shift(%345, %346) /* ty=Tensor[(990), uint8] */;
  %352 = @func_252(%348) /* ty=Tensor[(9, 1, 11), float32] */;
  %353 = %349.2;
  %354 = @func_6142() /* ty=Tensor[(2, 8), float64] */;
  (%350, %351, %352, %var_6887, %353, %354)
}

def @func_4203(%var_4193: Tensor[(14, 15, 6), float32]) -> (Tensor[(14, 15, 6), float32],) {
  %355 = cast(%var_4193, dtype="float32") /* ty=Tensor[(14, 15, 6), float32] */;
  %356 = sinh(%355) /* ty=Tensor[(14, 15, 6), float32] */;
  (%356,)
}

def @func_4814() -> (Tensor[(9, 1, 11), float32],) {
  %357 = @func_4419() /* ty=(Tensor[(9, 1, 11), float32], Tensor[(2, 8), float64]) */;
  %358 = %357.0;
  (%358,)
}

def @func_7772(%var_7696: Tensor[(99), float32]) -> (Tensor[(99), bool], Tensor[(5, 198), float32], Tensor[(9, 1, 11), float32]) {
  %359 = @func_4516() /* ty=(Tensor[(99), float32],) */;
  %360 = %359.0;
  %361 = cast(%var_7696, dtype="bool") /* ty=Tensor[(99), bool] */;
  %362 = shape_of(%360, dtype="int32") /* ty=Tensor[(1), int32] */;
  %363 = cast(%360, dtype="bool") /* ty=Tensor[(99), bool] */;
  %364 = dyn.reshape(%361, %362, newshape=[]) /* ty=Tensor[(?), bool] */;
  %365 = not_equal(%363, %364) /* ty=Tensor[(99), bool] */;
  %366 = @func_5611() /* ty=Tensor[(5, 198), float32] */;
  %367 = @func_6157() /* ty=Tensor[(9, 1, 11), float32] */;
  (%365, %366, %367)
}

def @func_5671(%var_5644: Tensor[(4, 6, 1), float32]) -> (Tensor[(4, 6, 1), float32],) {
  %368 = cast(%var_5644, dtype="float32") /* ty=Tensor[(4, 6, 1), float32] */;
  %369 = log(%368) /* ty=Tensor[(4, 6, 1), float32] */;
  (%369,)
}

def @func_7494() -> Tensor[(2, 8), float64] {
  %370 = @func_6180() /* ty=(Tensor[(2, 8), float64],) */;
  %370.0
}

def @func_3952() -> Tensor[(99), float32] {
  %371 = @func_2101() /* ty=(Tensor[(99), float32], Tensor[(2, 8), float64]) */;
  %371.0
}

def @func_5845() -> (Tensor[(99), float32],) {
  %372 = @func_5836() /* ty=Tensor[(99), float32] */;
  (%372,)
}

def @func_2844() -> (Tensor[(99), float32],) {
  %373 = @func_1272() /* ty=Tensor[(99), float32] */;
  (%373,)
}

def @func_4642() -> (Tensor[(9, 1, 11), float32],) {
  %374 = @func_4108() /* ty=Tensor[(9, 1, 11), float32] */;
  %375 = cast(%374, dtype="float64") /* ty=Tensor[(9, 1, 11), float64] */;
  %376 = log(%375) /* ty=Tensor[(9, 1, 11), float64] */;
  %377 = cast(%376, dtype="float32") /* ty=Tensor[(9, 1, 11), float32] */;
  %378 = cosh(%377) /* ty=Tensor[(9, 1, 11), float32] */;
  %379 = cast(%378, dtype="float32") /* ty=Tensor[(9, 1, 11), float32] */;
  %380 = acos(%379) /* ty=Tensor[(9, 1, 11), float32] */;
  (%380,)
}

def @func_5313(%var_5306: Tensor[(10, 8, 8), uint8]) -> (Tensor[(10, 8, 8), bool],) {
  %381 = cast(meta[relay.Constant][9] /* ty=Tensor[(10, 8, 8), uint8] */, dtype="bool") /* ty=Tensor[(10, 8, 8), bool] */;
  %382 = shape_of(%var_5306, dtype="int32") /* ty=Tensor[(3), int32] */;
  %383 = cast(%var_5306, dtype="bool") /* ty=Tensor[(10, 8, 8), bool] */;
  %384 = dyn.reshape(%381, %382, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %385 = less_equal(%383, %384) /* ty=Tensor[(10, 8, 8), bool] */;
  (%385,)
}

def @func_3239() -> (Tensor[(2, 8), float64],) {
  %386 = @func_1852() /* ty=Tensor[(2, 8), float64] */;
  (%386,)
}

def @func_7314() -> (Tensor[(99), float32],) {
  %387 = @func_3080() /* ty=(Tensor[(5, 198), float64], Tensor[(99), float32], Tensor[(9, 1, 11), float64]) */;
  %388 = %387.1;
  (%388,)
}

def @func_820() -> (Tensor[(2, 8), float64], Tensor[(9, 1, 11), float32], Tensor[(99), float32]) {
  %389 = cast(meta[relay.Constant][10] /* ty=Tensor[(99), float32] */, dtype="float32") /* ty=Tensor[(99), float32] */;
  %390 = reshape(%389, newshape=[9, 1, 11]) /* ty=Tensor[(9, 1, 11), float32] */;
  %391 = @func_749() /* ty=Tensor[(2, 8), float64] */;
  %392 = @func_252(%390) /* ty=Tensor[(9, 1, 11), float32] */;
  (%391, %392, meta[relay.Constant][10] /* ty=Tensor[(99), float32] */)
}

def @func_2387(%var_2383: Tensor[(11, 5, 13), float32]) -> Tensor[(11, 5, 13), float32] {
  %393 = cast(%var_2383, dtype="float32") /* ty=Tensor[(11, 5, 13), float32] */;
  rsqrt(%393) /* ty=Tensor[(11, 5, 13), float32] */
}

def @func_1218(%var_1153: Tensor[(11, 6, 15), float32], %var_1154: Tensor[(11, 6, 15), float32], %var_1214: Tensor[(11, 6, 15), float32]) -> (Tensor[(2, 8), float64], Tensor[(11, 6, 15), int64], Tensor[(1386), float32], Tensor[(9, 14, 11), float32], Tensor[(11, 6, 15), bool], Tensor[(11, 6, 15), bool]) {
  %394 = @func_1065() /* ty=(Tensor[(2, 8), float64], Tensor[(9, 14, 11), float32], Tensor[(1386), float32]) */;
  %395 = cast(%var_1154, dtype="float32") /* ty=Tensor[(11, 6, 15), float32] */;
  %396 = shape_of(%var_1153, dtype="int32") /* ty=Tensor[(3), int32] */;
  %397 = cast(%var_1153, dtype="float32") /* ty=Tensor[(11, 6, 15), float32] */;
  %398 = dyn.reshape(%395, %396, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %399 = mod(%397, %398) /* ty=Tensor[(11, 6, 15), float32] */;
  %400 = cast(%399, dtype="float32") /* ty=Tensor[(11, 6, 15), float32] */;
  %401 = acosh(%400) /* ty=Tensor[(11, 6, 15), float32] */;
  %402 = cast(%var_1154, dtype="int64") /* ty=Tensor[(11, 6, 15), int64] */;
  %403 = shape_of(%401, dtype="int32") /* ty=Tensor[(3), int32] */;
  %404 = cast(%401, dtype="int64") /* ty=Tensor[(11, 6, 15), int64] */;
  %405 = dyn.reshape(%402, %403, newshape=[]) /* ty=Tensor[(?, ?, ?), int64] */;
  %406 = @func_1065() /* ty=(Tensor[(2, 8), float64], Tensor[(9, 14, 11), float32], Tensor[(1386), float32]) */;
  %407 = %406.2;
  %408 = cast(%407, dtype="float32") /* ty=Tensor[(1386), float32] */;
  %409 = reshape(%408, newshape=[9, 14, 11]) /* ty=Tensor[(9, 14, 11), float32] */;
  %410 = @func_148(%409) /* ty=(Tensor[(9, 14, 11), float32],) */;
  %411 = cast(meta[relay.Constant][11] /* ty=Tensor[(11, 6, 15), float32] */, dtype="bool") /* ty=Tensor[(11, 6, 15), bool] */;
  %412 = shape_of(%401, dtype="int32") /* ty=Tensor[(3), int32] */;
  %413 = cast(%401, dtype="bool") /* ty=Tensor[(11, 6, 15), bool] */;
  %414 = dyn.reshape(%411, %412, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %415 = cast(%var_1214, dtype="bool") /* ty=Tensor[(11, 6, 15), bool] */;
  %416 = shape_of(meta[relay.Constant][11] /* ty=Tensor[(11, 6, 15), float32] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %417 = cast(meta[relay.Constant][11] /* ty=Tensor[(11, 6, 15), float32] */, dtype="bool") /* ty=Tensor[(11, 6, 15), bool] */;
  %418 = dyn.reshape(%415, %416, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %419 = %394.0;
  %420 = minimum(%404, %405) /* ty=Tensor[(11, 6, 15), int64] */;
  %421 = %410.0;
  %422 = logical_and(%413, %414) /* ty=Tensor[(11, 6, 15), bool] */;
  %423 = greater_equal(%417, %418) /* ty=Tensor[(11, 6, 15), bool] */;
  (%419, %420, %407, %421, %422, %423)
}

def @func_4419() -> (Tensor[(9, 1, 11), float32], Tensor[(2, 8), float64]) {
  %424 = @func_1346() /* ty=(Tensor[(2, 8), float64], Tensor[(2, 8), float64], Tensor[(9, 1, 11), float32], Tensor[(99), float32], Tensor[(9, 1, 11), float32]) */;
  %425 = @func_4108() /* ty=Tensor[(9, 1, 11), float32] */;
  %426 = %424.0;
  (%425, %426)
}

def @func_1891(%var_1858: uint8, %var_1874: Tensor[(1584), float64]) -> (Tensor[(1386), float32], Tensor[(588), uint8], Tensor[(9, 1, 11), int32], Tensor[(2, 8), float64], Tensor[(16, 9, 11), float64], Tensor[(1584), float64], Tensor[(2, 8), float64], Tensor[(99), float32]) {
  %427 = cast(%var_1858, dtype="uint8") /* ty=uint8 */;
  %428 = cast(meta[relay.Constant][12] /* ty=Tensor[(588), uint8] */, dtype="uint8") /* ty=Tensor[(588), uint8] */;
  %429 = reshape(%427, newshape=[]) /* ty=uint8 */;
  %430 = reshape(%428, newshape=[3, 14, 14]) /* ty=Tensor[(3, 14, 14), uint8] */;
  %431 = @func_1627(%429, %430) /* ty=(Tensor[(3, 14, 14), uint8], Tensor[(9, 1, 11), float32], Tensor[(2, 8), float64], Tensor[(2, 8), float64], Tensor[(99), float32], Tensor[(9, 14, 11), float32], Tensor[(1386), float32], Tensor[(9, 1, 11), float32]) */;
  %432 = @func_820() /* ty=(Tensor[(2, 8), float64], Tensor[(9, 1, 11), float32], Tensor[(99), float32]) */;
  %433 = %432.1;
  %434 = cast(%433, dtype="int32") /* ty=Tensor[(9, 1, 11), int32] */;
  %435 = cast(%var_1858, dtype="int32") /* ty=int32 */;
  %436 = cast(%var_1874, dtype="float64") /* ty=Tensor[(1584), float64] */;
  %437 = reshape(%436, newshape=[16, 9, 11]) /* ty=Tensor[(16, 9, 11), float64] */;
  %438 = @func_820() /* ty=(Tensor[(2, 8), float64], Tensor[(9, 1, 11), float32], Tensor[(99), float32]) */;
  %439 = %431.6;
  %440 = add(%434, %435) /* ty=Tensor[(9, 1, 11), int32] */;
  %441 = @func_1505() /* ty=Tensor[(2, 8), float64] */;
  %442 = @func_1356(%437) /* ty=Tensor[(16, 9, 11), float64] */;
  %443 = %438.0;
  %444 = @func_1272() /* ty=Tensor[(99), float32] */;
  (%439, meta[relay.Constant][12] /* ty=Tensor[(588), uint8] */, %440, %441, %442, %var_1874, %443, %444)
}

def @func_5168() -> (Tensor[(9, 1, 11), float32], Tensor[(5, 198), float64], Tensor[(2, 8), float64], Tensor[(9, 1, 11), float32]) {
  %445 = @func_4108() /* ty=Tensor[(9, 1, 11), float32] */;
  %446 = cast(%445, dtype="float32") /* ty=Tensor[(9, 1, 11), float32] */;
  %447 = reshape(%446, newshape=[9, 1, 11]) /* ty=Tensor[(9, 1, 11), float32] */;
  %448 = @func_2085() /* ty=Tensor[(5, 198), float64] */;
  %449 = @func_3423() /* ty=Tensor[(2, 8), float64] */;
  %450 = @func_252(%447) /* ty=Tensor[(9, 1, 11), float32] */;
  (%445, %448, %449, %450)
}

def @func_1835(%var_1818: Tensor[(588), uint8]) -> (Tensor[(2, 8), float64], uint8, Tensor[(588), uint8], Tensor[(9, 14, 11), bool]) {
  %451 = @func_1711() /* ty=(Tensor[(2, 8), float64], Tensor[(11, 6, 15), bool], Tensor[(5, 198), float64]) */;
  %452 = @func_1065() /* ty=(Tensor[(2, 8), float64], Tensor[(9, 14, 11), float32], Tensor[(1386), float32]) */;
  %453 = %452.1;
  %454 = cast(meta[relay.Constant][13] /* ty=uint8 */, dtype="uint8") /* ty=uint8 */;
  %455 = cast(%var_1818, dtype="uint8") /* ty=Tensor[(588), uint8] */;
  %456 = reshape(%454, newshape=[]) /* ty=uint8 */;
  %457 = reshape(%455, newshape=[3, 14, 14]) /* ty=Tensor[(3, 14, 14), uint8] */;
  %458 = @func_1627(%456, %457) /* ty=(Tensor[(3, 14, 14), uint8], Tensor[(9, 1, 11), float32], Tensor[(2, 8), float64], Tensor[(2, 8), float64], Tensor[(99), float32], Tensor[(9, 14, 11), float32], Tensor[(1386), float32], Tensor[(9, 1, 11), float32]) */;
  %459 = %458.5;
  %460 = cast(%459, dtype="bool") /* ty=Tensor[(9, 14, 11), bool] */;
  %461 = shape_of(%453, dtype="int32") /* ty=Tensor[(3), int32] */;
  %462 = cast(%453, dtype="bool") /* ty=Tensor[(9, 14, 11), bool] */;
  %463 = dyn.reshape(%460, %461, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %464 = %451.0;
  %465 = logical_and(%462, %463) /* ty=Tensor[(9, 14, 11), bool] */;
  (%464, meta[relay.Constant][13] /* ty=uint8 */, %var_1818, %465)
}

def @func_7898() -> (Tensor[(11, 6, 15), float64], Tensor[(12, 1, 7), float64], Tensor[(1755), float64], Tensor[(1386), float32], Tensor[(99), float32], Tensor[(2, 8), float64], Tensor[(352), int8], Tensor[(2, 8), float64]) {
  %466 = @func_1711() /* ty=(Tensor[(2, 8), float64], Tensor[(11, 6, 15), bool], Tensor[(5, 198), float64]) */;
  %467 = %466.1;
  %468 = cast(%467, dtype="float64") /* ty=Tensor[(11, 6, 15), float64] */;
  %469 = @func_5538() /* ty=(Tensor[(2, 8), float64], Tensor[(12, 1, 7), float64], Tensor[(2, 8), float64]) */;
  %470 = cast(meta[relay.Constant][14] /* ty=Tensor[(1386), float32] */, dtype="float32") /* ty=Tensor[(1386), float32] */;
  %471 = reshape(%470, newshape=[1386]) /* ty=Tensor[(1386), float32] */;
  %472 = @func_2987(%471) /* ty=(Tensor[(99), float64], Tensor[(9, 14, 11), float32], Tensor[(1386), float32], Tensor[(1755), float32], Tensor[(1755), float64], Tensor[(99), uint8], Tensor[(588), uint8], Tensor[(588), uint8]) */;
  %473 = cast(meta[relay.Constant][15] /* ty=Tensor[(352), int8] */, dtype="int8") /* ty=Tensor[(352), int8] */;
  %474 = cast(meta[relay.Constant][15] /* ty=Tensor[(352), int8] */, dtype="int8") /* ty=Tensor[(352), int8] */;
  %475 = reshape(%473, newshape=[16, 2, 11]) /* ty=Tensor[(16, 2, 11), int8] */;
  %476 = reshape(%474, newshape=[16, 2, 11]) /* ty=Tensor[(16, 2, 11), int8] */;
  %477 = @func_3849(%475, %476) /* ty=(Tensor[(16, 2, 11), int8], Tensor[(2, 8), float64]) */;
  %478 = sigmoid(%468) /* ty=Tensor[(11, 6, 15), float64] */;
  %479 = %469.1;
  %480 = %472.4;
  %481 = @func_7105() /* ty=Tensor[(99), float32] */;
  %482 = %477.1;
  %483 = @func_3322() /* ty=Tensor[(2, 8), float64] */;
  (%478, %479, %480, meta[relay.Constant][14] /* ty=Tensor[(1386), float32] */, %481, %482, meta[relay.Constant][15] /* ty=Tensor[(352), int8] */, %483)
}

def @func_4160(%var_4155: Tensor[(990), float32]) -> (Tensor[(2, 8), float64], Tensor[(11, 6, 15), bool], Tensor[(990), float32]) {
  %484 = @func_3239() /* ty=(Tensor[(2, 8), float64],) */;
  %485 = cast(%var_4155, dtype="float32") /* ty=Tensor[(990), float32] */;
  %486 = cast(%var_4155, dtype="float32") /* ty=Tensor[(990), float32] */;
  %487 = cast(%var_4155, dtype="float32") /* ty=Tensor[(990), float32] */;
  %488 = reshape(%485, newshape=[11, 6, 15]) /* ty=Tensor[(11, 6, 15), float32] */;
  %489 = reshape(%486, newshape=[11, 6, 15]) /* ty=Tensor[(11, 6, 15), float32] */;
  %490 = reshape(%487, newshape=[11, 6, 15]) /* ty=Tensor[(11, 6, 15), float32] */;
  %491 = @func_1218(%488, %489, %490) /* ty=(Tensor[(2, 8), float64], Tensor[(11, 6, 15), int64], Tensor[(1386), float32], Tensor[(9, 14, 11), float32], Tensor[(11, 6, 15), bool], Tensor[(11, 6, 15), bool]) */;
  %492 = %484.0;
  %493 = %491.4;
  (%492, %493, %var_4155)
}

def @func_6514(%var_6501: Tensor[(585, 3), float64]) -> Tensor[(585, 3), float64] {
  %494 = @func_5556() /* ty=(Tensor[(585, 3), float64], Tensor[(585, 3), bool], Tensor[(990), float32]) */;
  %495 = %494.0;
  %496 = cast(%var_6501, dtype="int32") /* ty=Tensor[(585, 3), int32] */;
  %497 = shape_of(%495, dtype="int32") /* ty=Tensor[(2), int32] */;
  %498 = cast(%495, dtype="int32") /* ty=Tensor[(585, 3), int32] */;
  %499 = dyn.reshape(%496, %497, newshape=[]) /* ty=Tensor[(?, ?), int32] */;
  %500 = add(%498, %499) /* ty=Tensor[(585, 3), int32] */;
  %501 = cast(%500, dtype="float64") /* ty=Tensor[(585, 3), float64] */;
  sin(%501) /* ty=Tensor[(585, 3), float64] */
}

def @func_4145(%var_4136: Tensor[(5, 7, 9), float32]) -> Tensor[(5, 7, 9), float32] {
  %502 = cast(%var_4136, dtype="float32") /* ty=Tensor[(5, 7, 9), float32] */;
  %503 = shape_of(meta[relay.Constant][16] /* ty=Tensor[(5, 7, 9), float32] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %504 = cast(meta[relay.Constant][16] /* ty=Tensor[(5, 7, 9), float32] */, dtype="float32") /* ty=Tensor[(5, 7, 9), float32] */;
  %505 = dyn.reshape(%502, %503, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  mod(%504, %505) /* ty=Tensor[(5, 7, 9), float32] */
}

def @func_7353() -> Tensor[(9, ?, 11), bool] {
  %506 = @func_2752() /* ty=(Tensor[(2, 8), float64], Tensor[(2, 8), float64], Tensor[(9, 1, 11), float32], Tensor[(2, 8), float64]) */;
  %507 = %506.2;
  %508 = @func_1022() /* ty=(Tensor[(99), float32], Tensor[(9, 1, 11), float32], Tensor[(9, 14, 11), float32], Tensor[(1386), float32]) */;
  %509 = %508.1;
  %510 = cast(%509, dtype="bool") /* ty=Tensor[(9, 1, 11), bool] */;
  %511 = shape_of(%507, dtype="int32") /* ty=Tensor[(3), int32] */;
  %512 = cast(%507, dtype="bool") /* ty=Tensor[(9, 1, 11), bool] */;
  %513 = dyn.reshape(%510, %511, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  less(%512, %513) /* ty=Tensor[(9, ?, 11), bool] */
}

def @func_6234(%var_6220: Tensor[(9, 13, 11), int8]) -> (Tensor[(9, 13, 11), int8], Tensor[(2, 8), float64]) {
  %514 = cast(%var_6220, dtype="int8") /* ty=Tensor[(9, 13, 11), int8] */;
  %515 = shape_of(meta[relay.Constant][17] /* ty=Tensor[(9, 13, 11), int8] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %516 = cast(meta[relay.Constant][17] /* ty=Tensor[(9, 13, 11), int8] */, dtype="int8") /* ty=Tensor[(9, 13, 11), int8] */;
  %517 = dyn.reshape(%514, %515, newshape=[]) /* ty=Tensor[(?, ?, ?), int8] */;
  %518 = right_shift(%516, %517) /* ty=Tensor[(9, 13, 11), int8] */;
  %519 = @func_1852() /* ty=Tensor[(2, 8), float64] */;
  (%518, %519)
}

def @func_4308() -> (Tensor[(99), float32],) {
  %520 = @func_2844() /* ty=(Tensor[(99), float32],) */;
  %521 = %520.0;
  (%521,)
}

def @func_2008(%var_2000: Tensor[(990), float32]) -> (Tensor[(9, 1, 11), float32], Tensor[(11, 6, 15), bool], Tensor[(990), float32], Tensor[(585, 3), bool]) {
  %522 = @func_820() /* ty=(Tensor[(2, 8), float64], Tensor[(9, 1, 11), float32], Tensor[(99), float32]) */;
  %523 = cast(%var_2000, dtype="float32") /* ty=Tensor[(990), float32] */;
  %524 = cast(%var_2000, dtype="float32") /* ty=Tensor[(990), float32] */;
  %525 = cast(%var_2000, dtype="float32") /* ty=Tensor[(990), float32] */;
  %526 = reshape(%523, newshape=[11, 6, 15]) /* ty=Tensor[(11, 6, 15), float32] */;
  %527 = reshape(%524, newshape=[11, 6, 15]) /* ty=Tensor[(11, 6, 15), float32] */;
  %528 = reshape(%525, newshape=[11, 6, 15]) /* ty=Tensor[(11, 6, 15), float32] */;
  %529 = @func_1218(%526, %527, %528) /* ty=(Tensor[(2, 8), float64], Tensor[(11, 6, 15), int64], Tensor[(1386), float32], Tensor[(9, 14, 11), float32], Tensor[(11, 6, 15), bool], Tensor[(11, 6, 15), bool]) */;
  %530 = cast(meta[relay.Constant][18] /* ty=Tensor[(585, 3), float64] */, dtype="float64") /* ty=Tensor[(585, 3), float64] */;
  %531 = reshape(%530, newshape=[13, 9, 15]) /* ty=Tensor[(13, 9, 15), float64] */;
  %532 = @func_1532(%531) /* ty=Tensor[(13, 9, 15), float64] */;
  %533 = cast(%532, dtype="bool") /* ty=Tensor[(13, 9, 15), bool] */;
  %534 = shape_of(meta[relay.Constant][18] /* ty=Tensor[(585, 3), float64] */, dtype="int32") /* ty=Tensor[(2), int32] */;
  %535 = cast(meta[relay.Constant][18] /* ty=Tensor[(585, 3), float64] */, dtype="bool") /* ty=Tensor[(585, 3), bool] */;
  %536 = dyn.reshape(%533, %534, newshape=[]) /* ty=Tensor[(?, ?), bool] */;
  %537 = %522.1;
  %538 = %529.5;
  %539 = less_equal(%535, %536) /* ty=Tensor[(585, 3), bool] */;
  (%537, %538, %var_2000, %539)
}

def @func_148(%var_137: Tensor[(9, 14, 11), float32]) -> (Tensor[(9, 14, 11), float32],) {
  %540 = cast(%var_137, dtype="float32") /* ty=Tensor[(9, 14, 11), float32] */;
  %541 = log10(%540) /* ty=Tensor[(9, 14, 11), float32] */;
  %542 = cast(%var_137, dtype="float32") /* ty=Tensor[(9, 14, 11), float32] */;
  %543 = shape_of(%541, dtype="int32") /* ty=Tensor[(3), int32] */;
  %544 = cast(%541, dtype="float32") /* ty=Tensor[(9, 14, 11), float32] */;
  %545 = dyn.reshape(%542, %543, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %546 = maximum(%544, %545) /* ty=Tensor[(9, 14, 11), float32] */;
  (%546,)
}

def @func_3943() -> Tensor[(2, 8), float64] {
  %547 = @func_2101() /* ty=(Tensor[(99), float32], Tensor[(2, 8), float64]) */;
  %547.1
}

def @func_749() -> Tensor[(2, 8), float64] {
  %548 = cast(meta[relay.Constant][19] /* ty=Tensor[(2, 8), float64] */, dtype="float64") /* ty=Tensor[(2, 8), float64] */;
  sinh(%548) /* ty=Tensor[(2, 8), float64] */
}

def @func_2101() -> (Tensor[(99), float32], Tensor[(2, 8), float64]) {
  %549 = @func_820() /* ty=(Tensor[(2, 8), float64], Tensor[(9, 1, 11), float32], Tensor[(99), float32]) */;
  %550 = @func_1952() /* ty=(Tensor[(2, 8), float64],) */;
  %551 = %549.2;
  %552 = %550.0;
  (%551, %552)
}

def @func_8011(%var_8004: Tensor[(16, 9, 2), float64]) -> (Tensor[(16, 9, 2), float64], Tensor[(2, 8), float64]) {
  %553 = cast(%var_8004, dtype="float64") /* ty=Tensor[(16, 9, 2), float64] */;
  %554 = @func_5759() /* ty=(Tensor[(2, 8), float64],) */;
  %555 = asin(%553) /* ty=Tensor[(16, 9, 2), float64] */;
  %556 = %554.0;
  (%555, %556)
}

def @func_2501() -> (Tensor[(2, 8), float64],) {
  %557 = @func_1965() /* ty=(Tensor[(2, 8), float64],) */;
  %558 = %557.0;
  (%558,)
}

def @func_5556() -> (Tensor[(585, 3), float64], Tensor[(585, 3), bool], Tensor[(990), float32]) {
  %559 = @func_4074() /* ty=(Tensor[(2, 8), float64], Tensor[(16, 9, 11), float64], Tensor[(1584), float64], Tensor[(990), float32], Tensor[(585, 3), float64], Tensor[(585, 3), uint64]) */;
  %560 = cast(meta[relay.Constant][20] /* ty=Tensor[(990), float32] */, dtype="float32") /* ty=Tensor[(990), float32] */;
  %561 = reshape(%560, newshape=[990]) /* ty=Tensor[(990), float32] */;
  %562 = @func_2008(%561) /* ty=(Tensor[(9, 1, 11), float32], Tensor[(11, 6, 15), bool], Tensor[(990), float32], Tensor[(585, 3), bool]) */;
  %563 = %559.4;
  %564 = %562.3;
  (%563, %564, meta[relay.Constant][20] /* ty=Tensor[(990), float32] */)
}

def @func_5684() -> (Tensor[(9, ?, 11), float32],) {
  %565 = @func_5303() /* ty=Tensor[(9, ?, 11), float32] */;
  (%565,)
}

def @func_3322() -> Tensor[(2, 8), float64] {
  %566 = @func_2501() /* ty=(Tensor[(2, 8), float64],) */;
  %566.0
}

def @func_8743() -> (Tensor[(2, 8), float64],) {
  %567 = @func_3277() /* ty=(Tensor[(2, 8), float64], Tensor[(2, 8), float64]) */;
  %568 = %567.0;
  (%568,)
}

def @func_3630() -> (Tensor[(2, 8), float64], Tensor[(2, 8), float64]) {
  %569 = @func_3277() /* ty=(Tensor[(2, 8), float64], Tensor[(2, 8), float64]) */;
  %570 = %569.1;
  %571 = @func_2890() /* ty=Tensor[(2, 8), float64] */;
  (%570, %571)
}

def @func_3849(%var_3837: Tensor[(16, 2, 11), int8], %var_3838: Tensor[(16, 2, 11), int8]) -> (Tensor[(16, 2, 11), int8], Tensor[(2, 8), float64]) {
  %572 = cast(%var_3838, dtype="int8") /* ty=Tensor[(16, 2, 11), int8] */;
  %573 = shape_of(%var_3837, dtype="int32") /* ty=Tensor[(3), int32] */;
  %574 = cast(%var_3837, dtype="int8") /* ty=Tensor[(16, 2, 11), int8] */;
  %575 = dyn.reshape(%572, %573, newshape=[]) /* ty=Tensor[(?, ?, ?), int8] */;
  %576 = logical_xor(%574, %575) /* ty=Tensor[(16, 2, 11), int8] */;
  %577 = @func_3423() /* ty=Tensor[(2, 8), float64] */;
  (%576, %577)
}

def @func_3996() -> (Tensor[(2, 8), float64],) {
  %578 = @func_3902() /* ty=(Tensor[(2, 8), float64],) */;
  %579 = %578.0;
  (%579,)
}

def @func_4954() -> Tensor[(2, 8), float64] {
  @func_2890() /* ty=Tensor[(2, 8), float64] */
}

def @func_7828(%var_7788: Tensor[(16, 1, 2), int64], %var_7801: Tensor[(11, 9), float32]) -> (Tensor[(16, 1, 2), int64], Tensor[(5, 198), float32], Tensor[(11, 9), float32]) {
  %580 = cast(-4 /* ty=int64 */, dtype="int64") /* ty=int64 */;
  %581 = cast(%var_7788, dtype="int64") /* ty=Tensor[(16, 1, 2), int64] */;
  %582 = cast(%var_7801, dtype="float32") /* ty=Tensor[(11, 9), float32] */;
  %583 = reshape(%582, newshape=[99]) /* ty=Tensor[(99), float32] */;
  %584 = @func_7772(%583) /* ty=(Tensor[(99), bool], Tensor[(5, 198), float32], Tensor[(9, 1, 11), float32]) */;
  %585 = multiply(%580, %581) /* ty=Tensor[(16, 1, 2), int64] */;
  %586 = %584.1;
  (%585, %586, %var_7801)
}

def @func_1022() -> (Tensor[(99), float32], Tensor[(9, 1, 11), float32], Tensor[(9, 14, 11), float32], Tensor[(1386), float32]) {
  %587 = @func_820() /* ty=(Tensor[(2, 8), float64], Tensor[(9, 1, 11), float32], Tensor[(99), float32]) */;
  %588 = @func_820() /* ty=(Tensor[(2, 8), float64], Tensor[(9, 1, 11), float32], Tensor[(99), float32]) */;
  %589 = cast(meta[relay.Constant][21] /* ty=Tensor[(1386), float32] */, dtype="float32") /* ty=Tensor[(1386), float32] */;
  %590 = reshape(%589, newshape=[9, 14, 11]) /* ty=Tensor[(9, 14, 11), float32] */;
  %591 = @func_148(%590) /* ty=(Tensor[(9, 14, 11), float32],) */;
  %592 = %587.2;
  %593 = %588.1;
  %594 = %591.0;
  (%592, %593, %594, meta[relay.Constant][21] /* ty=Tensor[(1386), float32] */)
}

def @func_4184() -> (Tensor[(2, 8), float64], Tensor[(2, 8), float64]) {
  %595 = @func_2101() /* ty=(Tensor[(99), float32], Tensor[(2, 8), float64]) */;
  %596 = %595.1;
  %597 = @func_3943() /* ty=Tensor[(2, 8), float64] */;
  (%596, %597)
}

def @func_5451(%var_5419: Tensor[(5, 198), float64], %var_5441: Tensor[(243, 2), float32], %var_5443: Tensor[(1584), float64]) -> (Tensor[(2, 8), float64], Tensor[(2, 8), float64], Tensor[(5, 198), bool], Tensor[(9, 1, 11), float32], Tensor[(9, 6, 9), bool], Tensor[(243, 2), float32], uint8, Tensor[(1584), float64]) {
  %598 = @func_3630() /* ty=(Tensor[(2, 8), float64], Tensor[(2, 8), float64]) */;
  %599 = @func_4074() /* ty=(Tensor[(2, 8), float64], Tensor[(16, 9, 11), float64], Tensor[(1584), float64], Tensor[(990), float32], Tensor[(585, 3), float64], Tensor[(585, 3), uint64]) */;
  %600 = @func_1711() /* ty=(Tensor[(2, 8), float64], Tensor[(11, 6, 15), bool], Tensor[(5, 198), float64]) */;
  %601 = %600.2;
  %602 = cast(%var_5419, dtype="bool") /* ty=Tensor[(5, 198), bool] */;
  %603 = shape_of(%601, dtype="int32") /* ty=Tensor[(2), int32] */;
  %604 = cast(%601, dtype="bool") /* ty=Tensor[(5, 198), bool] */;
  %605 = dyn.reshape(%602, %603, newshape=[]) /* ty=Tensor[(?, ?), bool] */;
  %606 = @func_4642() /* ty=(Tensor[(9, 1, 11), float32],) */;
  %607 = cast(%var_5441, dtype="float32") /* ty=Tensor[(243, 2), float32] */;
  %608 = cast(meta[relay.Constant][22] /* ty=uint8 */, dtype="uint8") /* ty=uint8 */;
  %609 = cast(%var_5443, dtype="float64") /* ty=Tensor[(1584), float64] */;
  %610 = reshape(%607, newshape=[9, 6, 9]) /* ty=Tensor[(9, 6, 9), float32] */;
  %611 = reshape(%608, newshape=[]) /* ty=uint8 */;
  %612 = reshape(%609, newshape=[1584]) /* ty=Tensor[(1584), float64] */;
  %613 = @func_5382(%610, %611, %612) /* ty=(Tensor[(9, 6, 9), bool], Tensor[(1386), float32], uint8, Tensor[(1584), float64], Tensor[(9, 6, 9), float32]) */;
  %614 = %598.0;
  %615 = %599.0;
  %616 = logical_or(%604, %605) /* ty=Tensor[(5, 198), bool] */;
  %617 = %606.0;
  %618 = %613.0;
  (%614, %615, %616, %617, %618, %var_5441, meta[relay.Constant][22] /* ty=uint8 */, %var_5443)
}

def @func_5959() -> (Tensor[(2, 8), float64], Tensor[(99), float32], Tensor[(5, 198), float64], Tensor[(2, 8), float64]) {
  %619 = @func_4419() /* ty=(Tensor[(9, 1, 11), float32], Tensor[(2, 8), float64]) */;
  %620 = @func_3080() /* ty=(Tensor[(5, 198), float64], Tensor[(99), float32], Tensor[(9, 1, 11), float64]) */;
  %621 = %619.1;
  %622 = %620.1;
  %623 = @func_2085() /* ty=Tensor[(5, 198), float64] */;
  %624 = @func_2890() /* ty=Tensor[(2, 8), float64] */;
  (%621, %622, %623, %624)
}

def @func_1346() -> (Tensor[(2, 8), float64], Tensor[(2, 8), float64], Tensor[(9, 1, 11), float32], Tensor[(99), float32], Tensor[(9, 1, 11), float32]) {
  %625 = cast(meta[relay.Constant][23] /* ty=Tensor[(99), float32] */, dtype="float32") /* ty=Tensor[(99), float32] */;
  %626 = reshape(%625, newshape=[9, 1, 11]) /* ty=Tensor[(9, 1, 11), float32] */;
  %627 = cast(meta[relay.Constant][23] /* ty=Tensor[(99), float32] */, dtype="float32") /* ty=Tensor[(99), float32] */;
  %628 = reshape(%627, newshape=[9, 1, 11]) /* ty=Tensor[(9, 1, 11), float32] */;
  %629 = @func_749() /* ty=Tensor[(2, 8), float64] */;
  %630 = @func_749() /* ty=Tensor[(2, 8), float64] */;
  %631 = @func_252(%626) /* ty=Tensor[(9, 1, 11), float32] */;
  %632 = @func_252(%628) /* ty=Tensor[(9, 1, 11), float32] */;
  (%629, %630, %631, meta[relay.Constant][23] /* ty=Tensor[(99), float32] */, %632)
}

def @func_4108() -> Tensor[(9, 1, 11), float32] {
  %633 = @func_2752() /* ty=(Tensor[(2, 8), float64], Tensor[(2, 8), float64], Tensor[(9, 1, 11), float32], Tensor[(2, 8), float64]) */;
  %633.2
}

def @func_8873() -> Tensor[(2, 8), float64] {
  %634 = @func_5959() /* ty=(Tensor[(2, 8), float64], Tensor[(99), float32], Tensor[(5, 198), float64], Tensor[(2, 8), float64]) */;
  %634.0
}

def @func_6576() -> Tensor[(2, 8), float64] {
  @func_3943() /* ty=Tensor[(2, 8), float64] */
}

def @func_7048() -> Tensor[(2, 8), float64] {
  %635 = @func_1952() /* ty=(Tensor[(2, 8), float64],) */;
  %635.0
}

def @func_5303() -> Tensor[(9, ?, 11), float32] {
  %636 = @func_1936() /* ty=(Tensor[(9, ?, 11), float32], Tensor[(9, ?, 11), bool]) */;
  %636.0
}

def @func_3902() -> (Tensor[(2, 8), float64],) {
  %637 = @func_1952() /* ty=(Tensor[(2, 8), float64],) */;
  %638 = %637.0;
  (%638,)
}

def @func_6650() -> (Tensor[(2, 8), float64], Tensor[(9, ?, 11), float32], Tensor[(2, 8), float64]) {
  %639 = @func_4642() /* ty=(Tensor[(9, 1, 11), float32],) */;
  %640 = %639.0;
  %641 = cast(%640, dtype="float64") /* ty=Tensor[(9, 1, 11), float64] */;
  %642 = asin(%641) /* ty=Tensor[(9, 1, 11), float64] */;
  %643 = cast(%640, dtype="float32") /* ty=Tensor[(9, 1, 11), float32] */;
  %644 = shape_of(%642, dtype="int32") /* ty=Tensor[(3), int32] */;
  %645 = cast(%642, dtype="float32") /* ty=Tensor[(9, 1, 11), float32] */;
  %646 = dyn.reshape(%643, %644, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %647 = @func_1124() /* ty=(Tensor[(2, 8), float64], Tensor[(9, 14, 11), float32]) */;
  %648 = @func_2890() /* ty=Tensor[(2, 8), float64] */;
  %649 = multiply(%645, %646) /* ty=Tensor[(9, ?, 11), float32] */;
  %650 = %647.0;
  (%648, %649, %650)
}

def @func_2890() -> Tensor[(2, 8), float64] {
  %651 = @func_2501() /* ty=(Tensor[(2, 8), float64],) */;
  %651.0
}

def @func_1627(%var_1542: uint8, %var_1543: Tensor[(3, 14, 14), uint8]) -> (Tensor[(3, 14, 14), uint8], Tensor[(9, 1, 11), float32], Tensor[(2, 8), float64], Tensor[(2, 8), float64], Tensor[(99), float32], Tensor[(9, 14, 11), float32], Tensor[(1386), float32], Tensor[(9, 1, 11), float32]) {
  %652 = cast(%var_1542, dtype="uint8") /* ty=uint8 */;
  %653 = cast(%var_1543, dtype="uint8") /* ty=Tensor[(3, 14, 14), uint8] */;
  %654 = @func_1346() /* ty=(Tensor[(2, 8), float64], Tensor[(2, 8), float64], Tensor[(9, 1, 11), float32], Tensor[(99), float32], Tensor[(9, 1, 11), float32]) */;
  %655 = @func_1346() /* ty=(Tensor[(2, 8), float64], Tensor[(2, 8), float64], Tensor[(9, 1, 11), float32], Tensor[(99), float32], Tensor[(9, 1, 11), float32]) */;
  %656 = cast(meta[relay.Constant][24] /* ty=Tensor[(1386), float32] */, dtype="float32") /* ty=Tensor[(1386), float32] */;
  %657 = reshape(%656, newshape=[9, 14, 11]) /* ty=Tensor[(9, 14, 11), float32] */;
  %658 = @func_148(%657) /* ty=(Tensor[(9, 14, 11), float32],) */;
  %659 = @func_1346() /* ty=(Tensor[(2, 8), float64], Tensor[(2, 8), float64], Tensor[(9, 1, 11), float32], Tensor[(99), float32], Tensor[(9, 1, 11), float32]) */;
  %660 = bitwise_and(%652, %653) /* ty=Tensor[(3, 14, 14), uint8] */;
  %661 = %654.2;
  %662 = @func_1505() /* ty=Tensor[(2, 8), float64] */;
  %663 = @func_749() /* ty=Tensor[(2, 8), float64] */;
  %664 = %655.3;
  %665 = %658.0;
  %666 = %659.2;
  (%660, %661, %662, %663, %664, %665, meta[relay.Constant][24] /* ty=Tensor[(1386), float32] */, %666)
}

def @func_2694() -> (Tensor[(5, 198), float64],) {
  %667 = @func_2085() /* ty=Tensor[(5, 198), float64] */;
  (%667,)
}

def @func_3585(%var_3515: Tensor[(588), uint8]) -> (Tensor[(2, 8), float64], Tensor[(99), float64], Tensor[(588), uint8], Tensor[(1386), float64]) {
  %668 = @func_2114() /* ty=(Tensor[(99), float64],) */;
  %669 = cast(%var_3515, dtype="uint8") /* ty=Tensor[(588), uint8] */;
  %670 = reshape(%669, newshape=[588]) /* ty=Tensor[(588), uint8] */;
  %671 = @func_2639(%670) /* ty=(Tensor[(1386), float32], Tensor[(2, 8), float64], Tensor[(588), uint8], Tensor[(588), uint8], Tensor[(99), float64]) */;
  %672 = %671.0;
  %673 = cast(%672, dtype="float64") /* ty=Tensor[(1386), float64] */;
  %674 = asinh(%673) /* ty=Tensor[(1386), float64] */;
  %675 = cast(%672, dtype="float32") /* ty=Tensor[(1386), float32] */;
  %676 = reshape(%675, newshape=[9, 14, 11]) /* ty=Tensor[(9, 14, 11), float32] */;
  %677 = @func_148(%676) /* ty=(Tensor[(9, 14, 11), float32],) */;
  %678 = %677.0;
  %679 = cast(%678, dtype="float64") /* ty=Tensor[(9, 14, 11), float64] */;
  %680 = shape_of(%674, dtype="int32") /* ty=Tensor[(1), int32] */;
  %681 = cast(%674, dtype="float64") /* ty=Tensor[(1386), float64] */;
  %682 = dyn.reshape(%679, %680, newshape=[]) /* ty=Tensor[(?), float64] */;
  %683 = @func_3322() /* ty=Tensor[(2, 8), float64] */;
  %684 = %668.0;
  %685 = power(%681, %682) /* ty=Tensor[(1386), float64] */;
  (%683, %684, %var_3515, %685)
}

def @func_6421(%var_6415: Tensor[(3, 7, 15), bool]) -> Tensor[(3, 7, 15), bool] {
  %686 = cast(%var_6415, dtype="bool") /* ty=Tensor[(3, 7, 15), bool] */;
  %687 = shape_of(meta[relay.Constant][25] /* ty=Tensor[(3, 7, 15), bool] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %688 = cast(meta[relay.Constant][25] /* ty=Tensor[(3, 7, 15), bool] */, dtype="bool") /* ty=Tensor[(3, 7, 15), bool] */;
  %689 = dyn.reshape(%686, %687, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  logical_and(%688, %689) /* ty=Tensor[(3, 7, 15), bool] */
}

def @func_5759() -> (Tensor[(2, 8), float64],) {
  %690 = @func_4954() /* ty=Tensor[(2, 8), float64] */;
  (%690,)
}

def @func_1965() -> (Tensor[(2, 8), float64],) {
  %691 = @func_749() /* ty=Tensor[(2, 8), float64] */;
  (%691,)
}

def @func_3926() -> Tensor[(2, 8), float64] {
  %692 = @func_2501() /* ty=(Tensor[(2, 8), float64],) */;
  %692.0
}

def @func_2085() -> Tensor[(5, 198), float64] {
  %693 = @func_1711() /* ty=(Tensor[(2, 8), float64], Tensor[(11, 6, 15), bool], Tensor[(5, 198), float64]) */;
  %693.2
}

def @func_5611() -> Tensor[(5, 198), float32] {
  %694 = @func_2085() /* ty=Tensor[(5, 198), float64] */;
  %695 = cast(%694, dtype="float32") /* ty=Tensor[(5, 198), float32] */;
  %696 = acosh(%695) /* ty=Tensor[(5, 198), float32] */;
  %697 = cast(%696, dtype="float32") /* ty=Tensor[(5, 198), float32] */;
  sinh(%697) /* ty=Tensor[(5, 198), float32] */
}

def @func_1532(%var_1529: Tensor[(13, 9, 15), float64]) -> Tensor[(13, 9, 15), float64] {
  %698 = cast(%var_1529, dtype="float64") /* ty=Tensor[(13, 9, 15), float64] */;
  acos(%698) /* ty=Tensor[(13, 9, 15), float64] */
}

def @func_1272() -> Tensor[(99), float32] {
  %699 = @func_1022() /* ty=(Tensor[(99), float32], Tensor[(9, 1, 11), float32], Tensor[(9, 14, 11), float32], Tensor[(1386), float32]) */;
  %699.0
}

def @func_6707(%var_6684: Tensor[(1755), float64]) -> (Tensor[(2, 8), float64], Tensor[(585, 3), float64], Tensor[(1755), float64], Tensor[(99), float32]) {
  %700 = @func_6180() /* ty=(Tensor[(2, 8), float64],) */;
  %701 = cast(%var_6684, dtype="float64") /* ty=Tensor[(1755), float64] */;
  %702 = reshape(%701, newshape=[585, 3]) /* ty=Tensor[(585, 3), float64] */;
  %703 = %700.0;
  %704 = @func_6514(%702) /* ty=Tensor[(585, 3), float64] */;
  %705 = @func_6034() /* ty=Tensor[(99), float32] */;
  (%703, %704, %var_6684, %705)
}

def @func_5220(%var_5176: Tensor[(10, 9, 4), float64], %var_5203: Tensor[(10, 9, 4), float64]) -> (Tensor[(10, 9, 4), int8], Tensor[(10, 9, 4), float32], Tensor[(9, 1, 11), float32]) {
  %706 = cast(-5.47049f64 /* ty=float64 */, dtype="float64") /* ty=float64 */;
  %707 = cast(%var_5176, dtype="float64") /* ty=Tensor[(10, 9, 4), float64] */;
  %708 = mod(%706, %707) /* ty=Tensor[(10, 9, 4), float64] */;
  %709 = cast(%var_5176, dtype="int8") /* ty=Tensor[(10, 9, 4), int8] */;
  %710 = shape_of(%708, dtype="int32") /* ty=Tensor[(3), int32] */;
  %711 = cast(%708, dtype="int8") /* ty=Tensor[(10, 9, 4), int8] */;
  %712 = dyn.reshape(%709, %710, newshape=[]) /* ty=Tensor[(?, ?, ?), int8] */;
  %713 = cast(%var_5203, dtype="float32") /* ty=Tensor[(10, 9, 4), float32] */;
  %714 = shape_of(%708, dtype="int32") /* ty=Tensor[(3), int32] */;
  %715 = cast(%708, dtype="float32") /* ty=Tensor[(10, 9, 4), float32] */;
  %716 = dyn.reshape(%713, %714, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %717 = @func_4814() /* ty=(Tensor[(9, 1, 11), float32],) */;
  %718 = multiply(%711, %712) /* ty=Tensor[(10, 9, 4), int8] */;
  %719 = floor_mod(%715, %716) /* ty=Tensor[(10, 9, 4), float32] */;
  %720 = %717.0;
  (%718, %719, %720)
}

def @func_1711() -> (Tensor[(2, 8), float64], Tensor[(11, 6, 15), bool], Tensor[(5, 198), float64]) {
  %721 = cast(meta[relay.Constant][26] /* ty=Tensor[(5, 198), float32] */, dtype="float32") /* ty=Tensor[(5, 198), float32] */;
  %722 = cast(meta[relay.Constant][26] /* ty=Tensor[(5, 198), float32] */, dtype="float32") /* ty=Tensor[(5, 198), float32] */;
  %723 = cast(meta[relay.Constant][26] /* ty=Tensor[(5, 198), float32] */, dtype="float32") /* ty=Tensor[(5, 198), float32] */;
  %724 = reshape(%721, newshape=[11, 6, 15]) /* ty=Tensor[(11, 6, 15), float32] */;
  %725 = reshape(%722, newshape=[11, 6, 15]) /* ty=Tensor[(11, 6, 15), float32] */;
  %726 = reshape(%723, newshape=[11, 6, 15]) /* ty=Tensor[(11, 6, 15), float32] */;
  %727 = @func_1218(%724, %725, %726) /* ty=(Tensor[(2, 8), float64], Tensor[(11, 6, 15), int64], Tensor[(1386), float32], Tensor[(9, 14, 11), float32], Tensor[(11, 6, 15), bool], Tensor[(11, 6, 15), bool]) */;
  %728 = cast(meta[relay.Constant][26] /* ty=Tensor[(5, 198), float32] */, dtype="float64") /* ty=Tensor[(5, 198), float64] */;
  %729 = @func_1505() /* ty=Tensor[(2, 8), float64] */;
  %730 = %727.5;
  %731 = asinh(%728) /* ty=Tensor[(5, 198), float64] */;
  (%729, %730, %731)
}

def @func_3034(%var_3002: float64, %var_3003: Tensor[(11, 8, 13), float64]) -> (Tensor[(11, 8, 13), float64], Tensor[(11, 8, 13), uint64], Tensor[(2, 8), float64]) {
  %732 = cast(%var_3002, dtype="float64") /* ty=float64 */;
  %733 = cast(%var_3003, dtype="float64") /* ty=Tensor[(11, 8, 13), float64] */;
  %734 = cast(%var_3003, dtype="uint64") /* ty=Tensor[(11, 8, 13), uint64] */;
  %735 = cast(%var_3002, dtype="uint64") /* ty=uint64 */;
  %736 = @func_820() /* ty=(Tensor[(2, 8), float64], Tensor[(9, 1, 11), float32], Tensor[(99), float32]) */;
  %737 = divide(%732, %733) /* ty=Tensor[(11, 8, 13), float64] */;
  %738 = subtract(%734, %735) /* ty=Tensor[(11, 8, 13), uint64] */;
  %739 = %736.0;
  (%737, %738, %739)
}

def @func_8578(%var_8547: Tensor[(1386), float32]) -> (Tensor[(990), float32], Tensor[(2, 8), float64], Tensor[(1386), float32], Tensor[(99), float32]) {
  %740 = @func_4074() /* ty=(Tensor[(2, 8), float64], Tensor[(16, 9, 11), float64], Tensor[(1584), float64], Tensor[(990), float32], Tensor[(585, 3), float64], Tensor[(585, 3), uint64]) */;
  %741 = @func_6650() /* ty=(Tensor[(2, 8), float64], Tensor[(9, ?, 11), float32], Tensor[(2, 8), float64]) */;
  %742 = @func_1022() /* ty=(Tensor[(99), float32], Tensor[(9, 1, 11), float32], Tensor[(9, 14, 11), float32], Tensor[(1386), float32]) */;
  %743 = %742.3;
  %744 = cast(%var_8547, dtype="float32") /* ty=Tensor[(1386), float32] */;
  %745 = shape_of(%743, dtype="int32") /* ty=Tensor[(1), int32] */;
  %746 = cast(%743, dtype="float32") /* ty=Tensor[(1386), float32] */;
  %747 = dyn.reshape(%744, %745, newshape=[]) /* ty=Tensor[(?), float32] */;
  %748 = @func_3080() /* ty=(Tensor[(5, 198), float64], Tensor[(99), float32], Tensor[(9, 1, 11), float64]) */;
  %749 = %740.3;
  %750 = %741.2;
  %751 = mod(%746, %747) /* ty=Tensor[(1386), float32] */;
  %752 = %748.1;
  (%749, %750, %751, %752)
}

def @func_8347(%var_8302: Tensor[(990), float32], %var_8310: Tensor[(1755), float64]) -> (Tensor[(9, ?, 11), uint16], Tensor[(5, 198), bool], Tensor[(2, 8), float64], Tensor[(1755), float64], Tensor[(990), float64], Tensor[(9, ?, 11), float64]) {
  %753 = @func_4642() /* ty=(Tensor[(9, 1, 11), float32],) */;
  %754 = %753.0;
  %755 = @func_4108() /* ty=Tensor[(9, 1, 11), float32] */;
  %756 = cast(%755, dtype="float64") /* ty=Tensor[(9, 1, 11), float64] */;
  %757 = atan(%756) /* ty=Tensor[(9, 1, 11), float64] */;
  %758 = cast(%757, dtype="uint16") /* ty=Tensor[(9, 1, 11), uint16] */;
  %759 = shape_of(%754, dtype="int32") /* ty=Tensor[(3), int32] */;
  %760 = cast(%754, dtype="uint16") /* ty=Tensor[(9, 1, 11), uint16] */;
  %761 = dyn.reshape(%758, %759, newshape=[]) /* ty=Tensor[(?, ?, ?), uint16] */;
  %762 = cast(%var_8302, dtype="float32") /* ty=Tensor[(990), float32] */;
  %763 = reshape(%762, newshape=[5, 198]) /* ty=Tensor[(5, 198), float32] */;
  %764 = cast(%var_8310, dtype="float64") /* ty=Tensor[(1755), float64] */;
  %765 = reshape(%764, newshape=[1755]) /* ty=Tensor[(1755), float64] */;
  %766 = @func_2241(%765) /* ty=(Tensor[(99), float64], Tensor[(2, 8), float64], Tensor[(1755), float32]) */;
  %767 = cast(%var_8302, dtype="float64") /* ty=Tensor[(990), float64] */;
  %768 = cast(%754, dtype="float32") /* ty=Tensor[(9, 1, 11), float32] */;
  %769 = atanh(%768) /* ty=Tensor[(9, 1, 11), float32] */;
  %770 = cast(%769, dtype="bool") /* ty=Tensor[(9, 1, 11), bool] */;
  %771 = shape_of(%755, dtype="int32") /* ty=Tensor[(3), int32] */;
  %772 = cast(%755, dtype="bool") /* ty=Tensor[(9, 1, 11), bool] */;
  %773 = dyn.reshape(%770, %771, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %774 = logical_and(%772, %773) /* ty=Tensor[(9, ?, 11), bool] */;
  %775 = cast(%774, dtype="float64") /* ty=Tensor[(9, ?, 11), float64] */;
  %776 = bitwise_or(%760, %761) /* ty=Tensor[(9, ?, 11), uint16] */;
  %777 = @func_6344(%763) /* ty=Tensor[(5, 198), bool] */;
  %778 = %766.1;
  %779 = sigmoid(%767) /* ty=Tensor[(990), float64] */;
  %780 = log2(%775) /* ty=Tensor[(9, ?, 11), float64] */;
  (%776, %777, %778, %var_8310, %779, %780)
}

def @func_3163(%var_3122: Tensor[(1, 1386), float32]) -> (Tensor[(99), float32], Tensor[(1386), float32], Tensor[(1, 1386), float32], Tensor[(2, 8), float64], Tensor[(9, 14, 11), float32]) {
  %781 = cast(%var_3122, dtype="float32") /* ty=Tensor[(1, 1386), float32] */;
  %782 = reshape(%781, newshape=[1386]) /* ty=Tensor[(1386), float32] */;
  %783 = @func_2987(%782) /* ty=(Tensor[(99), float64], Tensor[(9, 14, 11), float32], Tensor[(1386), float32], Tensor[(1755), float32], Tensor[(1755), float64], Tensor[(99), uint8], Tensor[(588), uint8], Tensor[(588), uint8]) */;
  %784 = @func_820() /* ty=(Tensor[(2, 8), float64], Tensor[(9, 1, 11), float32], Tensor[(99), float32]) */;
  %785 = %783.2;
  %786 = cast(%785, dtype="float32") /* ty=Tensor[(1386), float32] */;
  %787 = reshape(%786, newshape=[9, 14, 11]) /* ty=Tensor[(9, 14, 11), float32] */;
  %788 = @func_148(%787) /* ty=(Tensor[(9, 14, 11), float32],) */;
  %789 = @func_1272() /* ty=Tensor[(99), float32] */;
  %790 = %784.0;
  %791 = %788.0;
  (%789, %785, %var_3122, %790, %791)
}

def @func_4448() -> (Tensor[(11, 15, 6), int64],) {
  %792 = cast(-3 /* ty=int64 */, dtype="int64") /* ty=int64 */;
  %793 = cast(meta[relay.Constant][27] /* ty=Tensor[(11, 15, 6), int64] */, dtype="int64") /* ty=Tensor[(11, 15, 6), int64] */;
  %794 = subtract(%792, %793) /* ty=Tensor[(11, 15, 6), int64] */;
  (%794,)
}

def @func_8823() -> (Tensor[(2, 8), float64],) {
  %795 = @func_2501() /* ty=(Tensor[(2, 8), float64],) */;
  %796 = %795.0;
  (%796,)
}

def @func_6142() -> Tensor[(2, 8), float64] {
  %797 = @func_3902() /* ty=(Tensor[(2, 8), float64],) */;
  %797.0
}

def @func_6157() -> Tensor[(9, 1, 11), float32] {
  %798 = @func_4814() /* ty=(Tensor[(9, 1, 11), float32],) */;
  %798.0
}

def @func_7632(%var_7582: uint8, %var_7583: Tensor[(5, 1, 8), uint8]) -> (Tensor[(2, 8), float64], Tensor[(99), float32], Tensor[(99), float32], Tensor[(5, 1, 8), float32], Tensor[(99), float32], Tensor[(5, 1, 8), float32]) {
  %799 = @func_4308() /* ty=(Tensor[(99), float32],) */;
  %800 = cast(%var_7582, dtype="bool") /* ty=bool */;
  %801 = cast(%var_7583, dtype="bool") /* ty=Tensor[(5, 1, 8), bool] */;
  %802 = not_equal(%800, %801) /* ty=Tensor[(5, 1, 8), bool] */;
  %803 = cast(%802, dtype="float64") /* ty=Tensor[(5, 1, 8), float64] */;
  %804 = tan(%803) /* ty=Tensor[(5, 1, 8), float64] */;
  %805 = cast(%804, dtype="float32") /* ty=Tensor[(5, 1, 8), float32] */;
  %806 = cast(%804, dtype="float32") /* ty=Tensor[(5, 1, 8), float32] */;
  %807 = @func_5745() /* ty=Tensor[(2, 8), float64] */;
  %808 = %799.0;
  %809 = @func_6034() /* ty=Tensor[(99), float32] */;
  %810 = exp(%805) /* ty=Tensor[(5, 1, 8), float32] */;
  %811 = @func_1272() /* ty=Tensor[(99), float32] */;
  %812 = sin(%806) /* ty=Tensor[(5, 1, 8), float32] */;
  (%807, %808, %809, %810, %811, %812)
}

def @func_2114() -> (Tensor[(99), float64],) {
  %813 = @func_820() /* ty=(Tensor[(2, 8), float64], Tensor[(9, 1, 11), float32], Tensor[(99), float32]) */;
  %814 = %813.2;
  %815 = cast(%814, dtype="float64") /* ty=Tensor[(99), float64] */;
  %816 = sinh(%815) /* ty=Tensor[(99), float64] */;
  (%816,)
}

def @func_5538() -> (Tensor[(2, 8), float64], Tensor[(12, 1, 7), float64], Tensor[(2, 8), float64]) {
  %817 = @func_3902() /* ty=(Tensor[(2, 8), float64],) */;
  %818 = cast(meta[relay.Constant][28] /* ty=Tensor[(12, 1, 7), float64] */, dtype="float64") /* ty=Tensor[(12, 1, 7), float64] */;
  %819 = sigmoid(%818) /* ty=Tensor[(12, 1, 7), float64] */;
  %820 = cast(%819, dtype="float64") /* ty=Tensor[(12, 1, 7), float64] */;
  %821 = %817.0;
  %822 = sqrt(%820) /* ty=Tensor[(12, 1, 7), float64] */;
  %823 = @func_2890() /* ty=Tensor[(2, 8), float64] */;
  (%821, %822, %823)
}

def @func_1356(%var_1350: Tensor[(16, 9, 11), float64]) -> Tensor[(16, 9, 11), float64] {
  %824 = cast(%var_1350, dtype="float64") /* ty=Tensor[(16, 9, 11), float64] */;
  sigmoid(%824) /* ty=Tensor[(16, 9, 11), float64] */
}

def @func_6180() -> (Tensor[(2, 8), float64],) {
  %825 = @func_4954() /* ty=Tensor[(2, 8), float64] */;
  (%825,)
}

def @func_6963(%var_6957: Tensor[(14, 13, 15), float64]) -> (Tensor[(14, 13, 15), bool],) {
  %826 = cast(%var_6957, dtype="bool") /* ty=Tensor[(14, 13, 15), bool] */;
  %827 = shape_of(meta[relay.Constant][29] /* ty=Tensor[(14, 13, 15), float64] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %828 = cast(meta[relay.Constant][29] /* ty=Tensor[(14, 13, 15), float64] */, dtype="bool") /* ty=Tensor[(14, 13, 15), bool] */;
  %829 = dyn.reshape(%826, %827, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %830 = equal(%828, %829) /* ty=Tensor[(14, 13, 15), bool] */;
  (%830,)
}

def @func_3080() -> (Tensor[(5, 198), float64], Tensor[(99), float32], Tensor[(9, 1, 11), float64]) {
  %831 = @func_2844() /* ty=(Tensor[(99), float32],) */;
  %832 = @func_2752() /* ty=(Tensor[(2, 8), float64], Tensor[(2, 8), float64], Tensor[(9, 1, 11), float32], Tensor[(2, 8), float64]) */;
  %833 = %832.2;
  %834 = cast(%833, dtype="float64") /* ty=Tensor[(9, 1, 11), float64] */;
  %835 = @func_2085() /* ty=Tensor[(5, 198), float64] */;
  %836 = %831.0;
  %837 = cos(%834) /* ty=Tensor[(9, 1, 11), float64] */;
  (%835, %836, %837)
}

def @func_8617(%var_8596: Tensor[(5, 198), float64]) -> (Tensor[(5, 198), int16], Tensor[(9, ?, 11), bool]) {
  %838 = @func_5168() /* ty=(Tensor[(9, 1, 11), float32], Tensor[(5, 198), float64], Tensor[(2, 8), float64], Tensor[(9, 1, 11), float32]) */;
  %839 = %838.1;
  %840 = cast(%var_8596, dtype="int16") /* ty=Tensor[(5, 198), int16] */;
  %841 = shape_of(%839, dtype="int32") /* ty=Tensor[(2), int32] */;
  %842 = cast(%839, dtype="int16") /* ty=Tensor[(5, 198), int16] */;
  %843 = dyn.reshape(%840, %841, newshape=[]) /* ty=Tensor[(?, ?), int16] */;
  %844 = left_shift(%842, %843) /* ty=Tensor[(5, 198), int16] */;
  %845 = @func_7353() /* ty=Tensor[(9, ?, 11), bool] */;
  (%844, %845)
}

def @func_6344(%var_6336: Tensor[(5, 198), float32]) -> Tensor[(5, 198), bool] {
  %846 = @func_5611() /* ty=Tensor[(5, 198), float32] */;
  %847 = cast(%var_6336, dtype="bool") /* ty=Tensor[(5, 198), bool] */;
  %848 = shape_of(%846, dtype="int32") /* ty=Tensor[(2), int32] */;
  %849 = cast(%846, dtype="bool") /* ty=Tensor[(5, 198), bool] */;
  %850 = dyn.reshape(%847, %848, newshape=[]) /* ty=Tensor[(?, ?), bool] */;
  less_equal(%849, %850) /* ty=Tensor[(5, 198), bool] */
}

def @func_1737(%var_1719: Tensor[(10, 7, 9), int64], %var_1720: Tensor[(10, 7, 9), int64]) -> (Tensor[(10, 7, 9), int64], Tensor[(9, 1, 11), float32], Tensor[(99), float32]) {
  %851 = cast(%var_1720, dtype="int64") /* ty=Tensor[(10, 7, 9), int64] */;
  %852 = shape_of(%var_1719, dtype="int32") /* ty=Tensor[(3), int32] */;
  %853 = cast(%var_1719, dtype="int64") /* ty=Tensor[(10, 7, 9), int64] */;
  %854 = dyn.reshape(%851, %852, newshape=[]) /* ty=Tensor[(?, ?, ?), int64] */;
  %855 = @func_1022() /* ty=(Tensor[(99), float32], Tensor[(9, 1, 11), float32], Tensor[(9, 14, 11), float32], Tensor[(1386), float32]) */;
  %856 = @func_820() /* ty=(Tensor[(2, 8), float64], Tensor[(9, 1, 11), float32], Tensor[(99), float32]) */;
  %857 = multiply(%853, %854) /* ty=Tensor[(10, 7, 9), int64] */;
  %858 = %855.1;
  %859 = %856.2;
  (%857, %858, %859)
}

def @func_4516() -> (Tensor[(99), float32],) {
  %860 = @func_1346() /* ty=(Tensor[(2, 8), float64], Tensor[(2, 8), float64], Tensor[(9, 1, 11), float32], Tensor[(99), float32], Tensor[(9, 1, 11), float32]) */;
  %861 = %860.3;
  (%861,)
}

def @func_8408() -> (Tensor[(99), float32],) {
  %862 = @func_2844() /* ty=(Tensor[(99), float32],) */;
  %863 = %862.0;
  (%863,)
}

/* For debugging purposes the metadata section has been omitted.
 * If you would like to see the full metadata section you can set the 
 * option to `True` when invoking `astext`. 
 */
===================================
==========mutated_mod==========
#[version = "0.0.5"]
def @func_3997() -> (Tensor[(2, 8), float64],) {
  %2 = fn () -> (Tensor[(2, 8), float64],) {
    %0 = @func_3902() /* ty=(Tensor[(2, 8), float64],) */;
    %1 = %0.0;
    (%1,)
  };
  %2() /* ty=(Tensor[(2, 8), float64],) */
}

def @func_1347() -> (Tensor[(2, 8), float64], Tensor[(2, 8), float64], Tensor[(9, 1, 11), float32], Tensor[(99), float32], Tensor[(9, 1, 11), float32]) {
  %11 = fn () -> (Tensor[(2, 8), float64], Tensor[(2, 8), float64], Tensor[(9, 1, 11), float32], Tensor[(99), float32], Tensor[(9, 1, 11), float32]) {
    %3 = cast(meta[relay.Constant][0] /* ty=Tensor[(99), float32] */, dtype="float32") /* ty=Tensor[(99), float32] */;
    %4 = reshape(%3, newshape=[9, 1, 11]) /* ty=Tensor[(9, 1, 11), float32] */;
    %5 = cast(meta[relay.Constant][0] /* ty=Tensor[(99), float32] */, dtype="float32") /* ty=Tensor[(99), float32] */;
    %6 = reshape(%5, newshape=[9, 1, 11]) /* ty=Tensor[(9, 1, 11), float32] */;
    %7 = @func_749() /* ty=Tensor[(2, 8), float64] */;
    %8 = @func_749() /* ty=Tensor[(2, 8), float64] */;
    %9 = @func_252(%4) /* ty=Tensor[(9, 1, 11), float32] */;
    %10 = @func_252(%6) /* ty=Tensor[(9, 1, 11), float32] */;
    (%7, %8, %9, meta[relay.Constant][0] /* ty=Tensor[(99), float32] */, %10)
  };
  %11() /* ty=(Tensor[(2, 8), float64], Tensor[(2, 8), float64], Tensor[(9, 1, 11), float32], Tensor[(99), float32], Tensor[(9, 1, 11), float32]) */
}

def @func_7828(%var_7788: Tensor[(16, 1, 2), int64], %var_7801: Tensor[(11, 9), float32]) -> (Tensor[(16, 1, 2), int64], Tensor[(5, 198), float32], Tensor[(11, 9), float32]) {
  %12 = cast(-4 /* ty=int64 */, dtype="int64") /* ty=int64 */;
  %13 = cast(%var_7788, dtype="int64") /* ty=Tensor[(16, 1, 2), int64] */;
  %14 = cast(%var_7801, dtype="float32") /* ty=Tensor[(11, 9), float32] */;
  %15 = reshape(%14, newshape=[99]) /* ty=Tensor[(99), float32] */;
  %16 = @func_7772(%15) /* ty=(Tensor[(99), bool], Tensor[(5, 198), float32], Tensor[(9, 1, 11), float32]) */;
  %17 = multiply(%12, %13) /* ty=Tensor[(16, 1, 2), int64] */;
  %18 = %16.1;
  (%17, %18, %var_7801)
}

def @func_1472(%var_1434: Tensor[(9, 14, 11), float32]) -> (Tensor[(2, 8), float64], Tensor[(9, 14, 11), float32], Tensor[(9, 14, 11), float32]) {
  %19 = @func_820() /* ty=(Tensor[(2, 8), float64], Tensor[(9, 1, 11), float32], Tensor[(99), float32]) */;
  %20 = @func_1124() /* ty=(Tensor[(2, 8), float64], Tensor[(9, 14, 11), float32]) */;
  %21 = %20.1;
  %22 = cast(%var_1434, dtype="float32") /* ty=Tensor[(9, 14, 11), float32] */;
  %23 = shape_of(%21, dtype="int32") /* ty=Tensor[(3), int32] */;
  %24 = cast(%21, dtype="float32") /* ty=Tensor[(9, 14, 11), float32] */;
  %25 = dyn.reshape(%22, %23, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %26 = divide(%24, %25) /* ty=Tensor[(9, 14, 11), float32] */;
  %27 = cast(%26, dtype="float32") /* ty=Tensor[(9, 14, 11), float32] */;
  %28 = reshape(%27, newshape=[9, 14, 11]) /* ty=Tensor[(9, 14, 11), float32] */;
  %29 = @func_148(%28) /* ty=(Tensor[(9, 14, 11), float32],) */;
  %30 = %19.0;
  %31 = %29.0;
  (%30, %26, %31)
}

def @func_751() -> Tensor[(2, 8), float64] {
  @func_749() /* ty=Tensor[(2, 8), float64] */
}

def @func_8057() -> (Tensor[(99), float32], Tensor[(2, 8), float64]) {
  @func_8055() /* ty=(Tensor[(99), float32], Tensor[(2, 8), float64]) */
}

def @func_4450() -> (Tensor[(11, 15, 6), int64],) {
  @func_4448() /* ty=(Tensor[(11, 15, 6), int64],) */
}

def @func_4692() -> (Tensor[(9, 1, 11), float32], Tensor[(2, 8), float64], Tensor[(2, 8), float64]) {
  %32 = @func_4642() /* ty=(Tensor[(9, 1, 11), float32],) */;
  %33 = @func_4184() /* ty=(Tensor[(2, 8), float64], Tensor[(2, 8), float64]) */;
  %34 = @func_2501() /* ty=(Tensor[(2, 8), float64],) */;
  %35 = %32.0;
  %36 = %33.0;
  %37 = %34.0;
  (%35, %36, %37)
}

def @func_1065() -> (Tensor[(2, 8), float64], Tensor[(9, 14, 11), float32], Tensor[(1386), float32]) {
  %38 = cast(meta[relay.Constant][1] /* ty=Tensor[(1386), float32] */, dtype="float32") /* ty=Tensor[(1386), float32] */;
  %39 = reshape(%38, newshape=[9, 14, 11]) /* ty=Tensor[(9, 14, 11), float32] */;
  %40 = @func_148(%39) /* ty=(Tensor[(9, 14, 11), float32],) */;
  %41 = @func_749() /* ty=Tensor[(2, 8), float64] */;
  %42 = %40.0;
  (%41, %42, meta[relay.Constant][1] /* ty=Tensor[(1386), float32] */)
}

def @func_7832(%var_7830: Tensor[(16, 1, 2), int64], %var_7831: Tensor[(11, 9), float32]) -> (Tensor[(16, 1, 2), int64], Tensor[(5, 198), float32], Tensor[(11, 9), float32]) {
  @func_7828(%var_7830, %var_7831) /* ty=(Tensor[(16, 1, 2), int64], Tensor[(5, 198), float32], Tensor[(11, 9), float32]) */
}

def @func_1711() -> (Tensor[(2, 8), float64], Tensor[(11, 6, 15), bool], Tensor[(5, 198), float64]) {
  %43 = cast(meta[relay.Constant][2] /* ty=Tensor[(5, 198), float32] */, dtype="float32") /* ty=Tensor[(5, 198), float32] */;
  %44 = cast(meta[relay.Constant][2] /* ty=Tensor[(5, 198), float32] */, dtype="float32") /* ty=Tensor[(5, 198), float32] */;
  %45 = cast(meta[relay.Constant][2] /* ty=Tensor[(5, 198), float32] */, dtype="float32") /* ty=Tensor[(5, 198), float32] */;
  %46 = reshape(%43, newshape=[11, 6, 15]) /* ty=Tensor[(11, 6, 15), float32] */;
  %47 = reshape(%44, newshape=[11, 6, 15]) /* ty=Tensor[(11, 6, 15), float32] */;
  %48 = reshape(%45, newshape=[11, 6, 15]) /* ty=Tensor[(11, 6, 15), float32] */;
  %49 = @func_1218(%46, %47, %48) /* ty=(Tensor[(2, 8), float64], Tensor[(11, 6, 15), int64], Tensor[(1386), float32], Tensor[(9, 14, 11), float32], Tensor[(11, 6, 15), bool], Tensor[(11, 6, 15), bool]) */;
  %50 = cast(meta[relay.Constant][2] /* ty=Tensor[(5, 198), float32] */, dtype="float64") /* ty=Tensor[(5, 198), float64] */;
  %51 = @func_1505() /* ty=Tensor[(2, 8), float64] */;
  %52 = %49.5;
  %53 = asinh(%50) /* ty=Tensor[(5, 198), float64] */;
  (%51, %52, %53)
}

def @func_4419() -> (Tensor[(9, 1, 11), float32], Tensor[(2, 8), float64]) {
  %54 = @func_1346() /* ty=(Tensor[(2, 8), float64], Tensor[(2, 8), float64], Tensor[(9, 1, 11), float32], Tensor[(99), float32], Tensor[(9, 1, 11), float32]) */;
  %55 = @func_4108() /* ty=Tensor[(9, 1, 11), float32] */;
  %56 = %54.0;
  (%55, %56)
}

def @func_4694() -> (Tensor[(9, 1, 11), float32], Tensor[(2, 8), float64], Tensor[(2, 8), float64]) {
  @func_4692() /* ty=(Tensor[(9, 1, 11), float32], Tensor[(2, 8), float64], Tensor[(2, 8), float64]) */
}

def @func_5096(%var_5037: Tensor[(936), float64], %var_5038: Tensor[(715), float32], %var_5042: Tensor[(14, 99), float32]) -> (Tensor[(585, 3), uint64], Tensor[(715), float32], Tensor[(936), float64], Tensor[(2, 8), float64], Tensor[(14, 99), float32], Tensor[(2, 8), float64], Tensor[(715), float32]) {
  %57 = @func_4074() /* ty=(Tensor[(2, 8), float64], Tensor[(16, 9, 11), float64], Tensor[(1584), float64], Tensor[(990), float32], Tensor[(585, 3), float64], Tensor[(585, 3), uint64]) */;
  %58 = cast(%var_5037, dtype="float64") /* ty=Tensor[(936), float64] */;
  %59 = cast(%var_5037, dtype="float64") /* ty=Tensor[(936), float64] */;
  %60 = cast(%var_5037, dtype="float64") /* ty=Tensor[(936), float64] */;
  %61 = cast(%var_5038, dtype="float32") /* ty=Tensor[(715), float32] */;
  %62 = reshape(%58, newshape=[13, 8, 9]) /* ty=Tensor[(13, 8, 9), float64] */;
  %63 = reshape(%59, newshape=[13, 8, 9]) /* ty=Tensor[(13, 8, 9), float64] */;
  %64 = reshape(%60, newshape=[13, 8, 9]) /* ty=Tensor[(13, 8, 9), float64] */;
  %65 = reshape(%61, newshape=[715]) /* ty=Tensor[(715), float32] */;
  %66 = @func_3722(%62, %63, %64, %65) /* ty=(Tensor[(13, 8, 9), float64], Tensor[(13, 8, 9), uint64], Tensor[(11, 5, 13), float32], Tensor[(715), float32]) */;
  %67 = cast(%var_5042, dtype="float32") /* ty=Tensor[(14, 99), float32] */;
  %68 = reshape(%67, newshape=[1, 1386]) /* ty=Tensor[(1, 1386), float32] */;
  %69 = @func_3163(%68) /* ty=(Tensor[(99), float32], Tensor[(1386), float32], Tensor[(1, 1386), float32], Tensor[(2, 8), float64], Tensor[(9, 14, 11), float32]) */;
  %70 = cast(%var_5038, dtype="float32") /* ty=Tensor[(715), float32] */;
  %71 = %57.5;
  %72 = %66.3;
  %73 = %69.3;
  %74 = @func_2890() /* ty=Tensor[(2, 8), float64] */;
  %75 = log(%70) /* ty=Tensor[(715), float32] */;
  (%71, %72, %var_5037, %73, %var_5042, %74, %75)
}

def @func_4185() -> (Tensor[(2, 8), float64], Tensor[(2, 8), float64]) {
  %79 = fn () -> (Tensor[(2, 8), float64], Tensor[(2, 8), float64]) {
    %76 = @func_2101() /* ty=(Tensor[(99), float32], Tensor[(2, 8), float64]) */;
    %77 = %76.1;
    %78 = @func_3943() /* ty=Tensor[(2, 8), float64] */;
    (%77, %78)
  };
  %79() /* ty=(Tensor[(2, 8), float64], Tensor[(2, 8), float64]) */
}

def @func_5846() -> (Tensor[(99), float32],) {
  %81 = fn () -> (Tensor[(99), float32],) {
    %80 = @func_5836() /* ty=Tensor[(99), float32] */;
    (%80,)
  };
  %81() /* ty=(Tensor[(99), float32],) */
}

def @func_1953() -> (Tensor[(2, 8), float64],) {
  %83 = fn () -> (Tensor[(2, 8), float64],) {
    %82 = @func_749() /* ty=Tensor[(2, 8), float64] */;
    (%82,)
  };
  %83() /* ty=(Tensor[(2, 8), float64],) */
}

def @func_2642(%var_2640: Tensor[(588), uint8]) -> (Tensor[(1386), float32], Tensor[(2, 8), float64], Tensor[(588), uint8], Tensor[(588), uint8], Tensor[(99), float64]) {
  @func_2639(%var_2640) /* ty=(Tensor[(1386), float32], Tensor[(2, 8), float64], Tensor[(588), uint8], Tensor[(588), uint8], Tensor[(99), float64]) */
}

def @func_7632(%var_7582: uint8, %var_7583: Tensor[(5, 1, 8), uint8]) -> (Tensor[(2, 8), float64], Tensor[(99), float32], Tensor[(99), float32], Tensor[(5, 1, 8), float32], Tensor[(99), float32], Tensor[(5, 1, 8), float32]) {
  %84 = @func_4308() /* ty=(Tensor[(99), float32],) */;
  %85 = cast(%var_7582, dtype="bool") /* ty=bool */;
  %86 = cast(%var_7583, dtype="bool") /* ty=Tensor[(5, 1, 8), bool] */;
  %87 = not_equal(%85, %86) /* ty=Tensor[(5, 1, 8), bool] */;
  %88 = cast(%87, dtype="float64") /* ty=Tensor[(5, 1, 8), float64] */;
  %89 = tan(%88) /* ty=Tensor[(5, 1, 8), float64] */;
  %90 = cast(%89, dtype="float32") /* ty=Tensor[(5, 1, 8), float32] */;
  %91 = cast(%89, dtype="float32") /* ty=Tensor[(5, 1, 8), float32] */;
  %92 = @func_5745() /* ty=Tensor[(2, 8), float64] */;
  %93 = %84.0;
  %94 = @func_6034() /* ty=Tensor[(99), float32] */;
  %95 = exp(%90) /* ty=Tensor[(5, 1, 8), float32] */;
  %96 = @func_1272() /* ty=Tensor[(99), float32] */;
  %97 = sin(%91) /* ty=Tensor[(5, 1, 8), float32] */;
  (%92, %93, %94, %95, %96, %97)
}

def @func_4768(%var_4764: Tensor[(1386), float32]) -> (Tensor[(99), float32], Tensor[(588), uint8], Tensor[(588), float64], Tensor[(2, 8), float64], Tensor[(1386), float32]) {
  %98 = @func_4581() /* ty=(Tensor[(99), float32],) */;
  %99 = cast(meta[relay.Constant][3] /* ty=Tensor[(588), uint8] */, dtype="uint8") /* ty=Tensor[(588), uint8] */;
  %100 = reshape(%99, newshape=[588]) /* ty=Tensor[(588), uint8] */;
  %101 = @func_2639(%100) /* ty=(Tensor[(1386), float32], Tensor[(2, 8), float64], Tensor[(588), uint8], Tensor[(588), uint8], Tensor[(99), float64]) */;
  %102 = %101.2;
  %103 = cast(%102, dtype="float32") /* ty=Tensor[(588), float32] */;
  %104 = cosh(%103) /* ty=Tensor[(588), float32] */;
  %105 = cast(%104, dtype="float64") /* ty=Tensor[(588), float64] */;
  %106 = cast(%var_4764, dtype="float32") /* ty=Tensor[(1386), float32] */;
  %107 = reshape(%106, newshape=[1386]) /* ty=Tensor[(1386), float32] */;
  %108 = @func_3974(%107) /* ty=(Tensor[(2, 8), float64], Tensor[(2, 8), float64], Tensor[(2, 8), float64], Tensor[(1386), float32]) */;
  %109 = %98.0;
  %110 = sqrt(%105) /* ty=Tensor[(588), float64] */;
  %111 = %108.2;
  (%109, meta[relay.Constant][3] /* ty=Tensor[(588), uint8] */, %110, %111, %var_4764)
}

def @func_7554(%var_7550: Tensor[(12, 10, 14), int32], %var_7551: Tensor[(12, 10, 14), int32], %var_7552: Tensor[(990, 1), float32], %var_7553: Tensor[(1755), float64]) -> (Tensor[(12, 10, 14), int32], Tensor[(1386), float32], Tensor[(990, 1), float32], Tensor[(585, 3), float64], Tensor[(1755), float64]) {
  @func_7548(%var_7550, %var_7551, %var_7552, %var_7553) /* ty=(Tensor[(12, 10, 14), int32], Tensor[(1386), float32], Tensor[(990, 1), float32], Tensor[(585, 3), float64], Tensor[(1755), float64]) */
}

def @func_6965(%var_6964: Tensor[(14, 13, 15), float64]) -> (Tensor[(14, 13, 15), bool],) {
  %117 = fn (%var_6957: Tensor[(14, 13, 15), float64]) -> (Tensor[(14, 13, 15), bool],) {
    %112 = cast(%var_6957, dtype="bool") /* ty=Tensor[(14, 13, 15), bool] */;
    %113 = shape_of(meta[relay.Constant][4] /* ty=Tensor[(14, 13, 15), float64] */, dtype="int32") /* ty=Tensor[(3), int32] */;
    %114 = cast(meta[relay.Constant][4] /* ty=Tensor[(14, 13, 15), float64] */, dtype="bool") /* ty=Tensor[(14, 13, 15), bool] */;
    %115 = dyn.reshape(%112, %113, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    %116 = equal(%114, %115) /* ty=Tensor[(14, 13, 15), bool] */;
    (%116,)
  };
  %117(%var_6964) /* ty=(Tensor[(14, 13, 15), bool],) */
}

def @func_4075() -> (Tensor[(2, 8), float64], Tensor[(16, 9, 11), float64], Tensor[(1584), float64], Tensor[(990), float32], Tensor[(585, 3), float64], Tensor[(585, 3), uint64]) {
  %136 = fn () -> (Tensor[(2, 8), float64], Tensor[(16, 9, 11), float64], Tensor[(1584), float64], Tensor[(990), float32], Tensor[(585, 3), float64], Tensor[(585, 3), uint64]) {
    %118 = @func_820() /* ty=(Tensor[(2, 8), float64], Tensor[(9, 1, 11), float32], Tensor[(99), float32]) */;
    %119 = cast(meta[relay.Constant][5] /* ty=Tensor[(1584), float64] */, dtype="float64") /* ty=Tensor[(1584), float64] */;
    %120 = reshape(%119, newshape=[16, 9, 11]) /* ty=Tensor[(16, 9, 11), float64] */;
    %121 = cast(meta[relay.Constant][6] /* ty=Tensor[(990), float32] */, dtype="float32") /* ty=Tensor[(990), float32] */;
    %122 = reshape(%121, newshape=[990]) /* ty=Tensor[(990), float32] */;
    %123 = @func_2008(%122) /* ty=(Tensor[(9, 1, 11), float32], Tensor[(11, 6, 15), bool], Tensor[(990), float32], Tensor[(585, 3), bool]) */;
    %124 = %123.3;
    %125 = cast(%124, dtype="float32") /* ty=Tensor[(585, 3), float32] */;
    %126 = sinh(%125) /* ty=Tensor[(585, 3), float32] */;
    %127 = cast(%126, dtype="float64") /* ty=Tensor[(585, 3), float64] */;
    %128 = cast(%126, dtype="uint64") /* ty=Tensor[(585, 3), uint64] */;
    %129 = shape_of(%124, dtype="int32") /* ty=Tensor[(2), int32] */;
    %130 = cast(%124, dtype="uint64") /* ty=Tensor[(585, 3), uint64] */;
    %131 = dyn.reshape(%128, %129, newshape=[]) /* ty=Tensor[(?, ?), uint64] */;
    %132 = %118.0;
    %133 = @func_1356(%120) /* ty=Tensor[(16, 9, 11), float64] */;
    %134 = cosh(%127) /* ty=Tensor[(585, 3), float64] */;
    %135 = maximum(%130, %131) /* ty=Tensor[(585, 3), uint64] */;
    (%132, %133, meta[relay.Constant][5] /* ty=Tensor[(1584), float64] */, meta[relay.Constant][6] /* ty=Tensor[(990), float32] */, %134, %135)
  };
  %136() /* ty=(Tensor[(2, 8), float64], Tensor[(16, 9, 11), float64], Tensor[(1584), float64], Tensor[(990), float32], Tensor[(585, 3), float64], Tensor[(585, 3), uint64]) */
}

def @func_2243(%var_2242: Tensor[(1755), float64]) -> (Tensor[(99), float64], Tensor[(2, 8), float64], Tensor[(1755), float32]) {
  %149 = fn (%var_2225: Tensor[(1755), float64]) -> (Tensor[(99), float64], Tensor[(2, 8), float64], Tensor[(1755), float32]) {
    %137 = @func_2114() /* ty=(Tensor[(99), float64],) */;
    %138 = @func_1124() /* ty=(Tensor[(2, 8), float64], Tensor[(9, 14, 11), float32]) */;
    %139 = cast(%var_2225, dtype="float64") /* ty=Tensor[(1755), float64] */;
    %140 = reshape(%139, newshape=[13, 9, 15]) /* ty=Tensor[(13, 9, 15), float64] */;
    %141 = @func_1532(%140) /* ty=Tensor[(13, 9, 15), float64] */;
    %142 = cast(%141, dtype="float32") /* ty=Tensor[(13, 9, 15), float32] */;
    %143 = shape_of(%var_2225, dtype="int32") /* ty=Tensor[(1), int32] */;
    %144 = cast(%var_2225, dtype="float32") /* ty=Tensor[(1755), float32] */;
    %145 = dyn.reshape(%142, %143, newshape=[]) /* ty=Tensor[(?), float32] */;
    %146 = %137.0;
    %147 = %138.0;
    %148 = power(%144, %145) /* ty=Tensor[(1755), float32] */;
    (%146, %147, %148)
  };
  %149(%var_2242) /* ty=(Tensor[(99), float64], Tensor[(2, 8), float64], Tensor[(1755), float32]) */
}

def @func_3852(%var_3850: Tensor[(16, 2, 11), int8], %var_3851: Tensor[(16, 2, 11), int8]) -> (Tensor[(16, 2, 11), int8], Tensor[(2, 8), float64]) {
  %156 = fn (%var_3837: Tensor[(16, 2, 11), int8], %var_3838: Tensor[(16, 2, 11), int8]) -> (Tensor[(16, 2, 11), int8], Tensor[(2, 8), float64]) {
    %150 = cast(%var_3838, dtype="int8") /* ty=Tensor[(16, 2, 11), int8] */;
    %151 = shape_of(%var_3837, dtype="int32") /* ty=Tensor[(3), int32] */;
    %152 = cast(%var_3837, dtype="int8") /* ty=Tensor[(16, 2, 11), int8] */;
    %153 = dyn.reshape(%150, %151, newshape=[]) /* ty=Tensor[(?, ?, ?), int8] */;
    %154 = logical_xor(%152, %153) /* ty=Tensor[(16, 2, 11), int8] */;
    %155 = @func_3423() /* ty=Tensor[(2, 8), float64] */;
    (%154, %155)
  };
  %156(%var_3850, %var_3851) /* ty=(Tensor[(16, 2, 11), int8], Tensor[(2, 8), float64]) */
}

def @func_1891(%var_1858: uint8, %var_1874: Tensor[(1584), float64]) -> (Tensor[(1386), float32], Tensor[(588), uint8], Tensor[(9, 1, 11), int32], Tensor[(2, 8), float64], Tensor[(16, 9, 11), float64], Tensor[(1584), float64], Tensor[(2, 8), float64], Tensor[(99), float32]) {
  %157 = cast(%var_1858, dtype="uint8") /* ty=uint8 */;
  %158 = cast(meta[relay.Constant][7] /* ty=Tensor[(588), uint8] */, dtype="uint8") /* ty=Tensor[(588), uint8] */;
  %159 = reshape(%157, newshape=[]) /* ty=uint8 */;
  %160 = reshape(%158, newshape=[3, 14, 14]) /* ty=Tensor[(3, 14, 14), uint8] */;
  %161 = @func_1627(%159, %160) /* ty=(Tensor[(3, 14, 14), uint8], Tensor[(9, 1, 11), float32], Tensor[(2, 8), float64], Tensor[(2, 8), float64], Tensor[(99), float32], Tensor[(9, 14, 11), float32], Tensor[(1386), float32], Tensor[(9, 1, 11), float32]) */;
  %162 = @func_820() /* ty=(Tensor[(2, 8), float64], Tensor[(9, 1, 11), float32], Tensor[(99), float32]) */;
  %163 = %162.1;
  %164 = cast(%163, dtype="int32") /* ty=Tensor[(9, 1, 11), int32] */;
  %165 = cast(%var_1858, dtype="int32") /* ty=int32 */;
  %166 = cast(%var_1874, dtype="float64") /* ty=Tensor[(1584), float64] */;
  %167 = reshape(%166, newshape=[16, 9, 11]) /* ty=Tensor[(16, 9, 11), float64] */;
  %168 = @func_820() /* ty=(Tensor[(2, 8), float64], Tensor[(9, 1, 11), float32], Tensor[(99), float32]) */;
  %169 = %161.6;
  %170 = add(%164, %165) /* ty=Tensor[(9, 1, 11), int32] */;
  %171 = @func_1505() /* ty=Tensor[(2, 8), float64] */;
  %172 = @func_1356(%167) /* ty=Tensor[(16, 9, 11), float64] */;
  %173 = %168.0;
  %174 = @func_1272() /* ty=Tensor[(99), float32] */;
  (%169, meta[relay.Constant][7] /* ty=Tensor[(588), uint8] */, %170, %171, %172, %var_1874, %173, %174)
}

def @func_1273() -> Tensor[(99), float32] {
  %176 = fn () -> Tensor[(99), float32] {
    %175 = @func_1022() /* ty=(Tensor[(99), float32], Tensor[(9, 1, 11), float32], Tensor[(9, 14, 11), float32], Tensor[(1386), float32]) */;
    %175.0
  };
  %176() /* ty=Tensor[(99), float32] */
}

def @func_3727(%var_3723: Tensor[(13, 8, 9), float64], %var_3724: Tensor[(13, 8, 9), float64], %var_3725: Tensor[(13, 8, 9), float64], %var_3726: Tensor[(715), float32]) -> (Tensor[(13, 8, 9), float64], Tensor[(13, 8, 9), uint64], Tensor[(11, 5, 13), float32], Tensor[(715), float32]) {
  %190 = fn (%var_3660: Tensor[(13, 8, 9), float64], %var_3661: Tensor[(13, 8, 9), float64], %var_3670: Tensor[(13, 8, 9), float64], %var_3708: Tensor[(715), float32]) -> (Tensor[(13, 8, 9), float64], Tensor[(13, 8, 9), uint64], Tensor[(11, 5, 13), float32], Tensor[(715), float32]) {
    %177 = cast(%var_3661, dtype="float64") /* ty=Tensor[(13, 8, 9), float64] */;
    %178 = shape_of(%var_3660, dtype="int32") /* ty=Tensor[(3), int32] */;
    %179 = cast(%var_3660, dtype="float64") /* ty=Tensor[(13, 8, 9), float64] */;
    %180 = dyn.reshape(%177, %178, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
    %181 = cast(%var_3670, dtype="uint64") /* ty=Tensor[(13, 8, 9), uint64] */;
    %182 = shape_of(%var_3661, dtype="int32") /* ty=Tensor[(3), int32] */;
    %183 = cast(%var_3661, dtype="uint64") /* ty=Tensor[(13, 8, 9), uint64] */;
    %184 = dyn.reshape(%181, %182, newshape=[]) /* ty=Tensor[(?, ?, ?), uint64] */;
    %185 = cast(%var_3708, dtype="float32") /* ty=Tensor[(715), float32] */;
    %186 = reshape(%185, newshape=[11, 5, 13]) /* ty=Tensor[(11, 5, 13), float32] */;
    %187 = floor_mod(%179, %180) /* ty=Tensor[(13, 8, 9), float64] */;
    %188 = multiply(%183, %184) /* ty=Tensor[(13, 8, 9), uint64] */;
    %189 = @func_2387(%186) /* ty=Tensor[(11, 5, 13), float32] */;
    (%187, %188, %189, %var_3708)
  };
  %190(%var_3723, %var_3724, %var_3725, %var_3726) /* ty=(Tensor[(13, 8, 9), float64], Tensor[(13, 8, 9), uint64], Tensor[(11, 5, 13), float32], Tensor[(715), float32]) */
}

def @func_1741(%var_1739: Tensor[(10, 7, 9), int64], %var_1740: Tensor[(10, 7, 9), int64]) -> (Tensor[(10, 7, 9), int64], Tensor[(9, 1, 11), float32], Tensor[(99), float32]) {
  @func_1737(%var_1739, %var_1740) /* ty=(Tensor[(10, 7, 9), int64], Tensor[(9, 1, 11), float32], Tensor[(99), float32]) */
}

def @func_6709(%var_6708: Tensor[(1755), float64]) -> (Tensor[(2, 8), float64], Tensor[(585, 3), float64], Tensor[(1755), float64], Tensor[(99), float32]) {
  %197 = fn (%var_6684: Tensor[(1755), float64]) -> (Tensor[(2, 8), float64], Tensor[(585, 3), float64], Tensor[(1755), float64], Tensor[(99), float32]) {
    %191 = @func_6180() /* ty=(Tensor[(2, 8), float64],) */;
    %192 = cast(%var_6684, dtype="float64") /* ty=Tensor[(1755), float64] */;
    %193 = reshape(%192, newshape=[585, 3]) /* ty=Tensor[(585, 3), float64] */;
    %194 = %191.0;
    %195 = @func_6514(%193) /* ty=Tensor[(585, 3), float64] */;
    %196 = @func_6034() /* ty=Tensor[(99), float32] */;
    (%194, %195, %var_6684, %196)
  };
  %197(%var_6708) /* ty=(Tensor[(2, 8), float64], Tensor[(585, 3), float64], Tensor[(1755), float64], Tensor[(99), float32]) */
}

def @func_8351(%var_8349: Tensor[(990), float32], %var_8350: Tensor[(1755), float64]) -> (Tensor[(9, ?, 11), uint16], Tensor[(5, 198), bool], Tensor[(2, 8), float64], Tensor[(1755), float64], Tensor[(990), float64], Tensor[(9, ?, 11), float64]) {
  @func_8347(%var_8349, %var_8350) /* ty=(Tensor[(9, ?, 11), uint16], Tensor[(5, 198), bool], Tensor[(2, 8), float64], Tensor[(1755), float64], Tensor[(990), float64], Tensor[(9, ?, 11), float64]) */
}

def @func_6924(%var_6922: Tensor[(990), float32], %var_6923: Tensor[(99), float32]) -> (Tensor[(2, 8), float64], Tensor[(990), uint8], Tensor[(9, 1, 11), float32], Tensor[(99), float32], Tensor[(2, 8), float64], Tensor[(2, 8), float64]) {
  @func_6920(%var_6922, %var_6923) /* ty=(Tensor[(2, 8), float64], Tensor[(990), uint8], Tensor[(9, 1, 11), float32], Tensor[(99), float32], Tensor[(2, 8), float64], Tensor[(2, 8), float64]) */
}

def @func_5684() -> (Tensor[(9, ?, 11), float32],) {
  %198 = @func_5303() /* ty=Tensor[(9, ?, 11), float32] */;
  (%198,)
}

def @func_6036() -> Tensor[(99), float32] {
  @func_6034() /* ty=Tensor[(99), float32] */
}

def @func_3279() -> (Tensor[(2, 8), float64], Tensor[(2, 8), float64]) {
  @func_3277() /* ty=(Tensor[(2, 8), float64], Tensor[(2, 8), float64]) */
}

def @func_1713() -> (Tensor[(2, 8), float64], Tensor[(11, 6, 15), bool], Tensor[(5, 198), float64]) {
  @func_1711() /* ty=(Tensor[(2, 8), float64], Tensor[(11, 6, 15), bool], Tensor[(5, 198), float64]) */
}

def @func_6652() -> (Tensor[(2, 8), float64], Tensor[(9, ?, 11), float32], Tensor[(2, 8), float64]) {
  @func_6650() /* ty=(Tensor[(2, 8), float64], Tensor[(9, ?, 11), float32], Tensor[(2, 8), float64]) */
}

def @func_6576() -> Tensor[(2, 8), float64] {
  @func_3943() /* ty=Tensor[(2, 8), float64] */
}

def @func_2694() -> (Tensor[(5, 198), float64],) {
  %199 = @func_2085() /* ty=Tensor[(5, 198), float64] */;
  (%199,)
}

def @func_7899() -> (Tensor[(11, 6, 15), float64], Tensor[(12, 1, 7), float64], Tensor[(1755), float64], Tensor[(1386), float32], Tensor[(99), float32], Tensor[(2, 8), float64], Tensor[(352), int8], Tensor[(2, 8), float64]) {
  %218 = fn () -> (Tensor[(11, 6, 15), float64], Tensor[(12, 1, 7), float64], Tensor[(1755), float64], Tensor[(1386), float32], Tensor[(99), float32], Tensor[(2, 8), float64], Tensor[(352), int8], Tensor[(2, 8), float64]) {
    %200 = @func_1711() /* ty=(Tensor[(2, 8), float64], Tensor[(11, 6, 15), bool], Tensor[(5, 198), float64]) */;
    %201 = %200.1;
    %202 = cast(%201, dtype="float64") /* ty=Tensor[(11, 6, 15), float64] */;
    %203 = @func_5538() /* ty=(Tensor[(2, 8), float64], Tensor[(12, 1, 7), float64], Tensor[(2, 8), float64]) */;
    %204 = cast(meta[relay.Constant][8] /* ty=Tensor[(1386), float32] */, dtype="float32") /* ty=Tensor[(1386), float32] */;
    %205 = reshape(%204, newshape=[1386]) /* ty=Tensor[(1386), float32] */;
    %206 = @func_2987(%205) /* ty=(Tensor[(99), float64], Tensor[(9, 14, 11), float32], Tensor[(1386), float32], Tensor[(1755), float32], Tensor[(1755), float64], Tensor[(99), uint8], Tensor[(588), uint8], Tensor[(588), uint8]) */;
    %207 = cast(meta[relay.Constant][9] /* ty=Tensor[(352), int8] */, dtype="int8") /* ty=Tensor[(352), int8] */;
    %208 = cast(meta[relay.Constant][9] /* ty=Tensor[(352), int8] */, dtype="int8") /* ty=Tensor[(352), int8] */;
    %209 = reshape(%207, newshape=[16, 2, 11]) /* ty=Tensor[(16, 2, 11), int8] */;
    %210 = reshape(%208, newshape=[16, 2, 11]) /* ty=Tensor[(16, 2, 11), int8] */;
    %211 = @func_3849(%209, %210) /* ty=(Tensor[(16, 2, 11), int8], Tensor[(2, 8), float64]) */;
    %212 = sigmoid(%202) /* ty=Tensor[(11, 6, 15), float64] */;
    %213 = %203.1;
    %214 = %206.4;
    %215 = @func_7105() /* ty=Tensor[(99), float32] */;
    %216 = %211.1;
    %217 = @func_3322() /* ty=Tensor[(2, 8), float64] */;
    (%212, %213, %214, meta[relay.Constant][8] /* ty=Tensor[(1386), float32] */, %215, %216, meta[relay.Constant][9] /* ty=Tensor[(352), int8] */, %217)
  };
  %218() /* ty=(Tensor[(11, 6, 15), float64], Tensor[(12, 1, 7), float64], Tensor[(1755), float64], Tensor[(1386), float32], Tensor[(99), float32], Tensor[(2, 8), float64], Tensor[(352), int8], Tensor[(2, 8), float64]) */
}

def @func_3631() -> (Tensor[(2, 8), float64], Tensor[(2, 8), float64]) {
  %222 = fn () -> (Tensor[(2, 8), float64], Tensor[(2, 8), float64]) {
    %219 = @func_3277() /* ty=(Tensor[(2, 8), float64], Tensor[(2, 8), float64]) */;
    %220 = %219.1;
    %221 = @func_2890() /* ty=Tensor[(2, 8), float64] */;
    (%220, %221)
  };
  %222() /* ty=(Tensor[(2, 8), float64], Tensor[(2, 8), float64]) */
}

def @func_4955() -> Tensor[(2, 8), float64] {
  %223 = fn () -> Tensor[(2, 8), float64] {
    @func_2890() /* ty=Tensor[(2, 8), float64] */
  };
  %223() /* ty=Tensor[(2, 8), float64] */
}

def @func_4292(%var_4286: Tensor[(11, 3, 13), int32], %var_4287: Tensor[(11, 3, 13), int32]) -> (Tensor[(11, 3, 13), bool],) {
  %224 = cast(%var_4287, dtype="bool") /* ty=Tensor[(11, 3, 13), bool] */;
  %225 = shape_of(%var_4286, dtype="int32") /* ty=Tensor[(3), int32] */;
  %226 = cast(%var_4286, dtype="bool") /* ty=Tensor[(11, 3, 13), bool] */;
  %227 = dyn.reshape(%224, %225, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %228 = less_equal(%226, %227) /* ty=Tensor[(11, 3, 13), bool] */;
  (%228,)
}

def @func_6347(%var_6345: Tensor[(5, 198), float32]) -> Tensor[(5, 198), bool] {
  @func_6344(%var_6345) /* ty=Tensor[(5, 198), bool] */
}

def @func_5612() -> Tensor[(5, 198), float32] {
  %233 = fn () -> Tensor[(5, 198), float32] {
    %229 = @func_2085() /* ty=Tensor[(5, 198), float64] */;
    %230 = cast(%229, dtype="float32") /* ty=Tensor[(5, 198), float32] */;
    %231 = acosh(%230) /* ty=Tensor[(5, 198), float32] */;
    %232 = cast(%231, dtype="float32") /* ty=Tensor[(5, 198), float32] */;
    sinh(%232) /* ty=Tensor[(5, 198), float32] */
  };
  %233() /* ty=Tensor[(5, 198), float32] */
}

def @func_5316(%var_5314: Tensor[(10, 8, 8), uint8]) -> (Tensor[(10, 8, 8), bool],) {
  @func_5313(%var_5314) /* ty=(Tensor[(10, 8, 8), bool],) */
}

def @func_7179() -> (Tensor[(9, ?, 11), float32],) {
  %236 = fn () -> (Tensor[(9, ?, 11), float32],) {
    %234 = @func_1936() /* ty=(Tensor[(9, ?, 11), float32], Tensor[(9, ?, 11), bool]) */;
    %235 = %234.0;
    (%235,)
  };
  %236() /* ty=(Tensor[(9, ?, 11), float32],) */
}

def @func_7998(%var_7973: uint8, %var_7974: Tensor[(40), uint8]) -> (Tensor[(9, ?, 11), float32], Tensor[(40), uint8], Tensor[(5, ?, 8), uint64]) {
  %237 = @func_6650() /* ty=(Tensor[(2, 8), float64], Tensor[(9, ?, 11), float32], Tensor[(2, 8), float64]) */;
  %238 = cast(%var_7973, dtype="uint8") /* ty=uint8 */;
  %239 = cast(%var_7974, dtype="uint8") /* ty=Tensor[(40), uint8] */;
  %240 = reshape(%238, newshape=[]) /* ty=uint8 */;
  %241 = reshape(%239, newshape=[5, 1, 8]) /* ty=Tensor[(5, 1, 8), uint8] */;
  %242 = @func_7632(%240, %241) /* ty=(Tensor[(2, 8), float64], Tensor[(99), float32], Tensor[(99), float32], Tensor[(5, 1, 8), float32], Tensor[(99), float32], Tensor[(5, 1, 8), float32]) */;
  %243 = %242.3;
  %244 = cast(%243, dtype="float64") /* ty=Tensor[(5, 1, 8), float64] */;
  %245 = acos(%244) /* ty=Tensor[(5, 1, 8), float64] */;
  %246 = cast(%243, dtype="bool") /* ty=Tensor[(5, 1, 8), bool] */;
  %247 = cast(%var_7973, dtype="bool") /* ty=bool */;
  %248 = less(%246, %247) /* ty=Tensor[(5, 1, 8), bool] */;
  %249 = cast(%248, dtype="uint64") /* ty=Tensor[(5, 1, 8), uint64] */;
  %250 = shape_of(%245, dtype="int32") /* ty=Tensor[(3), int32] */;
  %251 = cast(%245, dtype="uint64") /* ty=Tensor[(5, 1, 8), uint64] */;
  %252 = dyn.reshape(%249, %250, newshape=[]) /* ty=Tensor[(?, ?, ?), uint64] */;
  %253 = %237.1;
  %254 = minimum(%251, %252) /* ty=Tensor[(5, ?, 8), uint64] */;
  (%253, %var_7974, %254)
}

def @func_5686() -> (Tensor[(9, ?, 11), float32],) {
  @func_5684() /* ty=(Tensor[(9, ?, 11), float32],) */
}

def @func_6401() -> (Tensor[(9, ?, 11), float32], Tensor[(9, 1, 11), float32]) {
  %255 = @func_1936() /* ty=(Tensor[(9, ?, 11), float32], Tensor[(9, ?, 11), bool]) */;
  %256 = @func_820() /* ty=(Tensor[(2, 8), float64], Tensor[(9, 1, 11), float32], Tensor[(99), float32]) */;
  %257 = %255.0;
  %258 = %256.1;
  (%257, %258)
}

def @func_4816() -> (Tensor[(9, 1, 11), float32],) {
  @func_4814() /* ty=(Tensor[(9, 1, 11), float32],) */
}

def @func_3424() -> Tensor[(2, 8), float64] {
  %260 = fn () -> Tensor[(2, 8), float64] {
    %259 = @func_1952() /* ty=(Tensor[(2, 8), float64],) */;
    %259.0
  };
  %260() /* ty=Tensor[(2, 8), float64] */
}

def @func_2011(%var_2009: Tensor[(990), float32]) -> (Tensor[(9, 1, 11), float32], Tensor[(11, 6, 15), bool], Tensor[(990), float32], Tensor[(585, 3), bool]) {
  @func_2008(%var_2009) /* ty=(Tensor[(9, 1, 11), float32], Tensor[(11, 6, 15), bool], Tensor[(990), float32], Tensor[(585, 3), bool]) */
}

def @func_3081() -> (Tensor[(5, 198), float64], Tensor[(99), float32], Tensor[(9, 1, 11), float64]) {
  %268 = fn () -> (Tensor[(5, 198), float64], Tensor[(99), float32], Tensor[(9, 1, 11), float64]) {
    %261 = @func_2844() /* ty=(Tensor[(99), float32],) */;
    %262 = @func_2752() /* ty=(Tensor[(2, 8), float64], Tensor[(2, 8), float64], Tensor[(9, 1, 11), float32], Tensor[(2, 8), float64]) */;
    %263 = %262.2;
    %264 = cast(%263, dtype="float64") /* ty=Tensor[(9, 1, 11), float64] */;
    %265 = @func_2085() /* ty=Tensor[(5, 198), float64] */;
    %266 = %261.0;
    %267 = cos(%264) /* ty=Tensor[(9, 1, 11), float64] */;
    (%265, %266, %267)
  };
  %268() /* ty=(Tensor[(5, 198), float64], Tensor[(99), float32], Tensor[(9, 1, 11), float64]) */
}

def @func_4162(%var_4161: Tensor[(990), float32]) -> (Tensor[(2, 8), float64], Tensor[(11, 6, 15), bool], Tensor[(990), float32]) {
  %279 = fn (%var_4155: Tensor[(990), float32]) -> (Tensor[(2, 8), float64], Tensor[(11, 6, 15), bool], Tensor[(990), float32]) {
    %269 = @func_3239() /* ty=(Tensor[(2, 8), float64],) */;
    %270 = cast(%var_4155, dtype="float32") /* ty=Tensor[(990), float32] */;
    %271 = cast(%var_4155, dtype="float32") /* ty=Tensor[(990), float32] */;
    %272 = cast(%var_4155, dtype="float32") /* ty=Tensor[(990), float32] */;
    %273 = reshape(%270, newshape=[11, 6, 15]) /* ty=Tensor[(11, 6, 15), float32] */;
    %274 = reshape(%271, newshape=[11, 6, 15]) /* ty=Tensor[(11, 6, 15), float32] */;
    %275 = reshape(%272, newshape=[11, 6, 15]) /* ty=Tensor[(11, 6, 15), float32] */;
    %276 = @func_1218(%273, %274, %275) /* ty=(Tensor[(2, 8), float64], Tensor[(11, 6, 15), int64], Tensor[(1386), float32], Tensor[(9, 14, 11), float32], Tensor[(11, 6, 15), bool], Tensor[(11, 6, 15), bool]) */;
    %277 = %269.0;
    %278 = %276.4;
    (%277, %278, %var_4155)
  };
  %279(%var_4161) /* ty=(Tensor[(2, 8), float64], Tensor[(11, 6, 15), bool], Tensor[(990), float32]) */
}

def @func_821() -> (Tensor[(2, 8), float64], Tensor[(9, 1, 11), float32], Tensor[(99), float32]) {
  %284 = fn () -> (Tensor[(2, 8), float64], Tensor[(9, 1, 11), float32], Tensor[(99), float32]) {
    %280 = cast(meta[relay.Constant][10] /* ty=Tensor[(99), float32] */, dtype="float32") /* ty=Tensor[(99), float32] */;
    %281 = reshape(%280, newshape=[9, 1, 11]) /* ty=Tensor[(9, 1, 11), float32] */;
    %282 = @func_749() /* ty=Tensor[(2, 8), float64] */;
    %283 = @func_252(%281) /* ty=Tensor[(9, 1, 11), float32] */;
    (%282, %283, meta[relay.Constant][10] /* ty=Tensor[(99), float32] */)
  };
  %284() /* ty=(Tensor[(2, 8), float64], Tensor[(9, 1, 11), float32], Tensor[(99), float32]) */
}

def @func_4421() -> (Tensor[(9, 1, 11), float32], Tensor[(2, 8), float64]) {
  @func_4419() /* ty=(Tensor[(9, 1, 11), float32], Tensor[(2, 8), float64]) */
}

def @func_4583() -> (Tensor[(99), float32],) {
  @func_4581() /* ty=(Tensor[(99), float32],) */
}

def @func_4984(%var_4979: Tensor[(585, 3), float64]) -> (Tensor[(2, 8), float64], Tensor[(585, 3), bool]) {
  %285 = @func_4074() /* ty=(Tensor[(2, 8), float64], Tensor[(16, 9, 11), float64], Tensor[(1584), float64], Tensor[(990), float32], Tensor[(585, 3), float64], Tensor[(585, 3), uint64]) */;
  %286 = %285.4;
  %287 = cast(%var_4979, dtype="bool") /* ty=Tensor[(585, 3), bool] */;
  %288 = shape_of(%286, dtype="int32") /* ty=Tensor[(2), int32] */;
  %289 = cast(%286, dtype="bool") /* ty=Tensor[(585, 3), bool] */;
  %290 = dyn.reshape(%287, %288, newshape=[]) /* ty=Tensor[(?, ?), bool] */;
  %291 = @func_749() /* ty=Tensor[(2, 8), float64] */;
  %292 = logical_or(%289, %290) /* ty=Tensor[(585, 3), bool] */;
  (%291, %292)
}

def @func_6090(%var_6089: Tensor[(12, 10, 13), uint16]) -> (Tensor[(12, 10, 13), uint16],) {
  %298 = fn (%var_6084: Tensor[(12, 10, 13), uint16]) -> (Tensor[(12, 10, 13), uint16],) {
    %293 = cast(%var_6084, dtype="uint16") /* ty=Tensor[(12, 10, 13), uint16] */;
    %294 = shape_of(meta[relay.Constant][11] /* ty=Tensor[(12, 10, 13), uint16] */, dtype="int32") /* ty=Tensor[(3), int32] */;
    %295 = cast(meta[relay.Constant][11] /* ty=Tensor[(12, 10, 13), uint16] */, dtype="uint16") /* ty=Tensor[(12, 10, 13), uint16] */;
    %296 = dyn.reshape(%293, %294, newshape=[]) /* ty=Tensor[(?, ?, ?), uint16] */;
    %297 = maximum(%295, %296) /* ty=Tensor[(12, 10, 13), uint16] */;
    (%297,)
  };
  %298(%var_6089) /* ty=(Tensor[(12, 10, 13), uint16],) */
}

def @func_7049() -> Tensor[(2, 8), float64] {
  %300 = fn () -> Tensor[(2, 8), float64] {
    %299 = @func_1952() /* ty=(Tensor[(2, 8), float64],) */;
    %299.0
  };
  %300() /* ty=Tensor[(2, 8), float64] */
}

def @func_8347(%var_8302: Tensor[(990), float32], %var_8310: Tensor[(1755), float64]) -> (Tensor[(9, ?, 11), uint16], Tensor[(5, 198), bool], Tensor[(2, 8), float64], Tensor[(1755), float64], Tensor[(990), float64], Tensor[(9, ?, 11), float64]) {
  %301 = @func_4642() /* ty=(Tensor[(9, 1, 11), float32],) */;
  %302 = %301.0;
  %303 = @func_4108() /* ty=Tensor[(9, 1, 11), float32] */;
  %304 = cast(%303, dtype="float64") /* ty=Tensor[(9, 1, 11), float64] */;
  %305 = atan(%304) /* ty=Tensor[(9, 1, 11), float64] */;
  %306 = cast(%305, dtype="uint16") /* ty=Tensor[(9, 1, 11), uint16] */;
  %307 = shape_of(%302, dtype="int32") /* ty=Tensor[(3), int32] */;
  %308 = cast(%302, dtype="uint16") /* ty=Tensor[(9, 1, 11), uint16] */;
  %309 = dyn.reshape(%306, %307, newshape=[]) /* ty=Tensor[(?, ?, ?), uint16] */;
  %310 = cast(%var_8302, dtype="float32") /* ty=Tensor[(990), float32] */;
  %311 = reshape(%310, newshape=[5, 198]) /* ty=Tensor[(5, 198), float32] */;
  %312 = cast(%var_8310, dtype="float64") /* ty=Tensor[(1755), float64] */;
  %313 = reshape(%312, newshape=[1755]) /* ty=Tensor[(1755), float64] */;
  %314 = @func_2241(%313) /* ty=(Tensor[(99), float64], Tensor[(2, 8), float64], Tensor[(1755), float32]) */;
  %315 = cast(%var_8302, dtype="float64") /* ty=Tensor[(990), float64] */;
  %316 = cast(%302, dtype="float32") /* ty=Tensor[(9, 1, 11), float32] */;
  %317 = atanh(%316) /* ty=Tensor[(9, 1, 11), float32] */;
  %318 = cast(%317, dtype="bool") /* ty=Tensor[(9, 1, 11), bool] */;
  %319 = shape_of(%303, dtype="int32") /* ty=Tensor[(3), int32] */;
  %320 = cast(%303, dtype="bool") /* ty=Tensor[(9, 1, 11), bool] */;
  %321 = dyn.reshape(%318, %319, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %322 = logical_and(%320, %321) /* ty=Tensor[(9, ?, 11), bool] */;
  %323 = cast(%322, dtype="float64") /* ty=Tensor[(9, ?, 11), float64] */;
  %324 = bitwise_or(%308, %309) /* ty=Tensor[(9, ?, 11), uint16] */;
  %325 = @func_6344(%311) /* ty=Tensor[(5, 198), bool] */;
  %326 = %314.1;
  %327 = sigmoid(%315) /* ty=Tensor[(990), float64] */;
  %328 = log2(%323) /* ty=Tensor[(9, ?, 11), float64] */;
  (%324, %325, %326, %var_8310, %327, %328)
}

def @func_2890() -> Tensor[(2, 8), float64] {
  %329 = @func_2501() /* ty=(Tensor[(2, 8), float64],) */;
  %329.0
}

def @func_3952() -> Tensor[(99), float32] {
  %330 = @func_2101() /* ty=(Tensor[(99), float32], Tensor[(2, 8), float64]) */;
  %330.0
}

def @func_1125() -> (Tensor[(2, 8), float64], Tensor[(9, 14, 11), float32]) {
  %334 = fn () -> (Tensor[(2, 8), float64], Tensor[(9, 14, 11), float32]) {
    %331 = @func_1022() /* ty=(Tensor[(99), float32], Tensor[(9, 1, 11), float32], Tensor[(9, 14, 11), float32], Tensor[(1386), float32]) */;
    %332 = @func_749() /* ty=Tensor[(2, 8), float64] */;
    %333 = %331.2;
    (%332, %333)
  };
  %334() /* ty=(Tensor[(2, 8), float64], Tensor[(9, 14, 11), float32]) */
}

def @func_8055() -> (Tensor[(99), float32], Tensor[(2, 8), float64]) {
  %335 = @func_4308() /* ty=(Tensor[(99), float32],) */;
  %336 = @func_5813() /* ty=(Tensor[(2, 8), float64], Tensor[(2, 8), float64], Tensor[(2, 8), float64], Tensor[(9, ?, 11), float32], Tensor[(11, 6, 15), float32], Tensor[(5, 7, 9), float32], Tensor[(315), float32]) */;
  %337 = %335.0;
  %338 = %336.1;
  (%337, %338)
}

def @func_8578(%var_8547: Tensor[(1386), float32]) -> (Tensor[(990), float32], Tensor[(2, 8), float64], Tensor[(1386), float32], Tensor[(99), float32]) {
  %339 = @func_4074() /* ty=(Tensor[(2, 8), float64], Tensor[(16, 9, 11), float64], Tensor[(1584), float64], Tensor[(990), float32], Tensor[(585, 3), float64], Tensor[(585, 3), uint64]) */;
  %340 = @func_6650() /* ty=(Tensor[(2, 8), float64], Tensor[(9, ?, 11), float32], Tensor[(2, 8), float64]) */;
  %341 = @func_1022() /* ty=(Tensor[(99), float32], Tensor[(9, 1, 11), float32], Tensor[(9, 14, 11), float32], Tensor[(1386), float32]) */;
  %342 = %341.3;
  %343 = cast(%var_8547, dtype="float32") /* ty=Tensor[(1386), float32] */;
  %344 = shape_of(%342, dtype="int32") /* ty=Tensor[(1), int32] */;
  %345 = cast(%342, dtype="float32") /* ty=Tensor[(1386), float32] */;
  %346 = dyn.reshape(%343, %344, newshape=[]) /* ty=Tensor[(?), float32] */;
  %347 = @func_3080() /* ty=(Tensor[(5, 198), float64], Tensor[(99), float32], Tensor[(9, 1, 11), float64]) */;
  %348 = %339.3;
  %349 = %340.2;
  %350 = mod(%345, %346) /* ty=Tensor[(1386), float32] */;
  %351 = %347.1;
  (%348, %349, %350, %351)
}

def @func_7579() -> (Tensor[(2, 8), float64],) {
  %354 = fn () -> (Tensor[(2, 8), float64],) {
    %352 = @func_3630() /* ty=(Tensor[(2, 8), float64], Tensor[(2, 8), float64]) */;
    %353 = %352.1;
    (%353,)
  };
  %354() /* ty=(Tensor[(2, 8), float64],) */
}

def @func_8649() -> (Tensor[(9, 1, 11), float32],) {
  @func_8647() /* ty=(Tensor[(9, 1, 11), float32],) */
}

def @func_2502() -> (Tensor[(2, 8), float64],) {
  %357 = fn () -> (Tensor[(2, 8), float64],) {
    %355 = @func_1965() /* ty=(Tensor[(2, 8), float64],) */;
    %356 = %355.0;
    (%356,)
  };
  %357() /* ty=(Tensor[(2, 8), float64],) */
}

def @func_8462(%var_8460: Tensor[(960), int8], %var_8461: Tensor[(1386), float32]) -> (Tensor[(2, 8), float64], Tensor[(12, 1, 7), float64], Tensor[(2, 8), float64], Tensor[(99), float32], Tensor[(960), int8], Tensor[(1386), float32]) {
  %369 = fn (%var_8456: Tensor[(960), int8], %var_8457: Tensor[(1386), float32]) -> (Tensor[(2, 8), float64], Tensor[(12, 1, 7), float64], Tensor[(2, 8), float64], Tensor[(99), float32], Tensor[(960), int8], Tensor[(1386), float32]) {
    %358 = @func_3630() /* ty=(Tensor[(2, 8), float64], Tensor[(2, 8), float64]) */;
    %359 = @func_7898() /* ty=(Tensor[(11, 6, 15), float64], Tensor[(12, 1, 7), float64], Tensor[(1755), float64], Tensor[(1386), float32], Tensor[(99), float32], Tensor[(2, 8), float64], Tensor[(352), int8], Tensor[(2, 8), float64]) */;
    %360 = cast(%var_8456, dtype="int8") /* ty=Tensor[(960), int8] */;
    %361 = cast(%var_8457, dtype="float32") /* ty=Tensor[(1386), float32] */;
    %362 = reshape(%360, newshape=[10, 6, 16]) /* ty=Tensor[(10, 6, 16), int8] */;
    %363 = reshape(%361, newshape=[1386]) /* ty=Tensor[(1386), float32] */;
    %364 = @func_8128(%362, %363) /* ty=(Tensor[(10, 6, 16), int8], Tensor[(99), float32], Tensor[(9, 14, 11), float32], Tensor[(1386), float32]) */;
    %365 = %358.1;
    %366 = %359.1;
    %367 = @func_7494() /* ty=Tensor[(2, 8), float64] */;
    %368 = %364.1;
    (%365, %366, %367, %368, %var_8456, %var_8457)
  };
  %369(%var_8460, %var_8461) /* ty=(Tensor[(2, 8), float64], Tensor[(12, 1, 7), float64], Tensor[(2, 8), float64], Tensor[(99), float32], Tensor[(960), int8], Tensor[(1386), float32]) */
}

def @func_6423(%var_6422: Tensor[(3, 7, 15), bool]) -> Tensor[(3, 7, 15), bool] {
  %374 = fn (%var_6415: Tensor[(3, 7, 15), bool]) -> Tensor[(3, 7, 15), bool] {
    %370 = cast(%var_6415, dtype="bool") /* ty=Tensor[(3, 7, 15), bool] */;
    %371 = shape_of(meta[relay.Constant][12] /* ty=Tensor[(3, 7, 15), bool] */, dtype="int32") /* ty=Tensor[(3), int32] */;
    %372 = cast(meta[relay.Constant][12] /* ty=Tensor[(3, 7, 15), bool] */, dtype="bool") /* ty=Tensor[(3, 7, 15), bool] */;
    %373 = dyn.reshape(%370, %371, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    logical_and(%372, %373) /* ty=Tensor[(3, 7, 15), bool] */
  };
  %374(%var_6422) /* ty=Tensor[(3, 7, 15), bool] */
}

def @func_2892() -> Tensor[(2, 8), float64] {
  @func_2890() /* ty=Tensor[(2, 8), float64] */
}

def @func_2990(%var_2988: Tensor[(1386), float32]) -> (Tensor[(99), float64], Tensor[(9, 14, 11), float32], Tensor[(1386), float32], Tensor[(1755), float32], Tensor[(1755), float64], Tensor[(99), uint8], Tensor[(588), uint8], Tensor[(588), uint8]) {
  @func_2987(%var_2988) /* ty=(Tensor[(99), float64], Tensor[(9, 14, 11), float32], Tensor[(1386), float32], Tensor[(1755), float32], Tensor[(1755), float64], Tensor[(99), uint8], Tensor[(588), uint8], Tensor[(588), uint8]) */
}

def @func_1535(%var_1533: Tensor[(13, 9, 15), float64]) -> Tensor[(13, 9, 15), float64] {
  @func_1532(%var_1533) /* ty=Tensor[(13, 9, 15), float64] */
}

def @func_8014(%var_8012: Tensor[(16, 9, 2), float64]) -> (Tensor[(16, 9, 2), float64], Tensor[(2, 8), float64]) {
  @func_8011(%var_8012) /* ty=(Tensor[(16, 9, 2), float64], Tensor[(2, 8), float64]) */
}

def @func_1965() -> (Tensor[(2, 8), float64],) {
  %375 = @func_749() /* ty=Tensor[(2, 8), float64] */;
  (%375,)
}

def @func_5169() -> (Tensor[(9, 1, 11), float32], Tensor[(5, 198), float64], Tensor[(2, 8), float64], Tensor[(9, 1, 11), float32]) {
  %382 = fn () -> (Tensor[(9, 1, 11), float32], Tensor[(5, 198), float64], Tensor[(2, 8), float64], Tensor[(9, 1, 11), float32]) {
    %376 = @func_4108() /* ty=Tensor[(9, 1, 11), float32] */;
    %377 = cast(%376, dtype="float32") /* ty=Tensor[(9, 1, 11), float32] */;
    %378 = reshape(%377, newshape=[9, 1, 11]) /* ty=Tensor[(9, 1, 11), float32] */;
    %379 = @func_2085() /* ty=Tensor[(5, 198), float64] */;
    %380 = @func_3423() /* ty=Tensor[(2, 8), float64] */;
    %381 = @func_252(%378) /* ty=Tensor[(9, 1, 11), float32] */;
    (%376, %379, %380, %381)
  };
  %382() /* ty=(Tensor[(9, 1, 11), float32], Tensor[(5, 198), float64], Tensor[(2, 8), float64], Tensor[(9, 1, 11), float32]) */
}

def @func_4581() -> (Tensor[(99), float32],) {
  %383 = @func_1272() /* ty=Tensor[(99), float32] */;
  (%383,)
}

def @func_6516(%var_6515: Tensor[(585, 3), float64]) -> Tensor[(585, 3), float64] {
  %392 = fn (%var_6501: Tensor[(585, 3), float64]) -> Tensor[(585, 3), float64] {
    %384 = @func_5556() /* ty=(Tensor[(585, 3), float64], Tensor[(585, 3), bool], Tensor[(990), float32]) */;
    %385 = %384.0;
    %386 = cast(%var_6501, dtype="int32") /* ty=Tensor[(585, 3), int32] */;
    %387 = shape_of(%385, dtype="int32") /* ty=Tensor[(2), int32] */;
    %388 = cast(%385, dtype="int32") /* ty=Tensor[(585, 3), int32] */;
    %389 = dyn.reshape(%386, %387, newshape=[]) /* ty=Tensor[(?, ?), int32] */;
    %390 = add(%388, %389) /* ty=Tensor[(585, 3), int32] */;
    %391 = cast(%390, dtype="float64") /* ty=Tensor[(585, 3), float64] */;
    sin(%391) /* ty=Tensor[(585, 3), float64] */
  };
  %392(%var_6515) /* ty=Tensor[(585, 3), float64] */
}

def @func_1507() -> Tensor[(2, 8), float64] {
  @func_1505() /* ty=Tensor[(2, 8), float64] */
}

def @func_2008(%var_2000: Tensor[(990), float32]) -> (Tensor[(9, 1, 11), float32], Tensor[(11, 6, 15), bool], Tensor[(990), float32], Tensor[(585, 3), bool]) {
  %393 = @func_820() /* ty=(Tensor[(2, 8), float64], Tensor[(9, 1, 11), float32], Tensor[(99), float32]) */;
  %394 = cast(%var_2000, dtype="float32") /* ty=Tensor[(990), float32] */;
  %395 = cast(%var_2000, dtype="float32") /* ty=Tensor[(990), float32] */;
  %396 = cast(%var_2000, dtype="float32") /* ty=Tensor[(990), float32] */;
  %397 = reshape(%394, newshape=[11, 6, 15]) /* ty=Tensor[(11, 6, 15), float32] */;
  %398 = reshape(%395, newshape=[11, 6, 15]) /* ty=Tensor[(11, 6, 15), float32] */;
  %399 = reshape(%396, newshape=[11, 6, 15]) /* ty=Tensor[(11, 6, 15), float32] */;
  %400 = @func_1218(%397, %398, %399) /* ty=(Tensor[(2, 8), float64], Tensor[(11, 6, 15), int64], Tensor[(1386), float32], Tensor[(9, 14, 11), float32], Tensor[(11, 6, 15), bool], Tensor[(11, 6, 15), bool]) */;
  %401 = cast(meta[relay.Constant][13] /* ty=Tensor[(585, 3), float64] */, dtype="float64") /* ty=Tensor[(585, 3), float64] */;
  %402 = reshape(%401, newshape=[13, 9, 15]) /* ty=Tensor[(13, 9, 15), float64] */;
  %403 = @func_1532(%402) /* ty=Tensor[(13, 9, 15), float64] */;
  %404 = cast(%403, dtype="bool") /* ty=Tensor[(13, 9, 15), bool] */;
  %405 = shape_of(meta[relay.Constant][13] /* ty=Tensor[(585, 3), float64] */, dtype="int32") /* ty=Tensor[(2), int32] */;
  %406 = cast(meta[relay.Constant][13] /* ty=Tensor[(585, 3), float64] */, dtype="bool") /* ty=Tensor[(585, 3), bool] */;
  %407 = dyn.reshape(%404, %405, newshape=[]) /* ty=Tensor[(?, ?), bool] */;
  %408 = %393.1;
  %409 = %400.5;
  %410 = less_equal(%406, %407) /* ty=Tensor[(585, 3), bool] */;
  (%408, %409, %var_2000, %410)
}

def @func_3943() -> Tensor[(2, 8), float64] {
  %411 = @func_2101() /* ty=(Tensor[(99), float32], Tensor[(2, 8), float64]) */;
  %411.1
}

def @func_3976(%var_3975: Tensor[(1386), float32]) -> (Tensor[(2, 8), float64], Tensor[(2, 8), float64], Tensor[(2, 8), float64], Tensor[(1386), float32]) {
  %418 = fn (%var_3967: Tensor[(1386), float32]) -> (Tensor[(2, 8), float64], Tensor[(2, 8), float64], Tensor[(2, 8), float64], Tensor[(1386), float32]) {
    %412 = cast(%var_3967, dtype="float32") /* ty=Tensor[(1386), float32] */;
    %413 = reshape(%412, newshape=[1, 1386]) /* ty=Tensor[(1, 1386), float32] */;
    %414 = @func_3163(%413) /* ty=(Tensor[(99), float32], Tensor[(1386), float32], Tensor[(1, 1386), float32], Tensor[(2, 8), float64], Tensor[(9, 14, 11), float32]) */;
    %415 = @func_3423() /* ty=Tensor[(2, 8), float64] */;
    %416 = @func_3322() /* ty=Tensor[(2, 8), float64] */;
    %417 = %414.3;
    (%415, %416, %417, %var_3967)
  };
  %418(%var_3975) /* ty=(Tensor[(2, 8), float64], Tensor[(2, 8), float64], Tensor[(2, 8), float64], Tensor[(1386), float32]) */
}

def @func_5837() -> Tensor[(99), float32] {
  %420 = fn () -> Tensor[(99), float32] {
    %419 = @func_2844() /* ty=(Tensor[(99), float32],) */;
    %419.0
  };
  %420() /* ty=Tensor[(99), float32] */
}

def @func_7141() -> Tensor[(2, 8), float64] {
  %422 = fn () -> Tensor[(2, 8), float64] {
    %421 = @func_1065() /* ty=(Tensor[(2, 8), float64], Tensor[(9, 14, 11), float32], Tensor[(1386), float32]) */;
    %421.0
  };
  %422() /* ty=Tensor[(2, 8), float64] */
}

def @func_5671(%var_5644: Tensor[(4, 6, 1), float32]) -> (Tensor[(4, 6, 1), float32],) {
  %423 = cast(%var_5644, dtype="float32") /* ty=Tensor[(4, 6, 1), float32] */;
  %424 = log(%423) /* ty=Tensor[(4, 6, 1), float32] */;
  (%424,)
}

def @func_5305() -> Tensor[(9, ?, 11), float32] {
  @func_5303() /* ty=Tensor[(9, ?, 11), float32] */
}

def @func_3163(%var_3122: Tensor[(1, 1386), float32]) -> (Tensor[(99), float32], Tensor[(1386), float32], Tensor[(1, 1386), float32], Tensor[(2, 8), float64], Tensor[(9, 14, 11), float32]) {
  %425 = cast(%var_3122, dtype="float32") /* ty=Tensor[(1, 1386), float32] */;
  %426 = reshape(%425, newshape=[1386]) /* ty=Tensor[(1386), float32] */;
  %427 = @func_2987(%426) /* ty=(Tensor[(99), float64], Tensor[(9, 14, 11), float32], Tensor[(1386), float32], Tensor[(1755), float32], Tensor[(1755), float64], Tensor[(99), uint8], Tensor[(588), uint8], Tensor[(588), uint8]) */;
  %428 = @func_820() /* ty=(Tensor[(2, 8), float64], Tensor[(9, 1, 11), float32], Tensor[(99), float32]) */;
  %429 = %427.2;
  %430 = cast(%429, dtype="float32") /* ty=Tensor[(1386), float32] */;
  %431 = reshape(%430, newshape=[9, 14, 11]) /* ty=Tensor[(9, 14, 11), float32] */;
  %432 = @func_148(%431) /* ty=(Tensor[(9, 14, 11), float32],) */;
  %433 = @func_1272() /* ty=Tensor[(99), float32] */;
  %434 = %428.0;
  %435 = %432.0;
  (%433, %429, %var_3122, %434, %435)
}

def @func_6403() -> (Tensor[(9, ?, 11), float32], Tensor[(9, 1, 11), float32]) {
  @func_6401() /* ty=(Tensor[(9, ?, 11), float32], Tensor[(9, 1, 11), float32]) */
}

def @func_3945() -> Tensor[(2, 8), float64] {
  @func_3943() /* ty=Tensor[(2, 8), float64] */
}

def @func_4517() -> (Tensor[(99), float32],) {
  %438 = fn () -> (Tensor[(99), float32],) {
    %436 = @func_1346() /* ty=(Tensor[(2, 8), float64], Tensor[(2, 8), float64], Tensor[(9, 1, 11), float32], Tensor[(99), float32], Tensor[(9, 1, 11), float32]) */;
    %437 = %436.3;
    (%437,)
  };
  %438() /* ty=(Tensor[(99), float32],) */
}

def @func_4448() -> (Tensor[(11, 15, 6), int64],) {
  %439 = cast(-3 /* ty=int64 */, dtype="int64") /* ty=int64 */;
  %440 = cast(meta[relay.Constant][14] /* ty=Tensor[(11, 15, 6), int64] */, dtype="int64") /* ty=Tensor[(11, 15, 6), int64] */;
  %441 = subtract(%439, %440) /* ty=Tensor[(11, 15, 6), int64] */;
  (%441,)
}

def @func_1852() -> Tensor[(2, 8), float64] {
  %442 = @func_1124() /* ty=(Tensor[(2, 8), float64], Tensor[(9, 14, 11), float32]) */;
  %442.0
}

def @func_7548(%var_7529: Tensor[(12, 10, 14), int32], %var_7530: Tensor[(12, 10, 14), int32], %var_7538: Tensor[(990, 1), float32], %var_7546: Tensor[(1755), float64]) -> (Tensor[(12, 10, 14), int32], Tensor[(1386), float32], Tensor[(990, 1), float32], Tensor[(585, 3), float64], Tensor[(1755), float64]) {
  %443 = cast(%var_7530, dtype="int32") /* ty=Tensor[(12, 10, 14), int32] */;
  %444 = shape_of(%var_7529, dtype="int32") /* ty=Tensor[(3), int32] */;
  %445 = cast(%var_7529, dtype="int32") /* ty=Tensor[(12, 10, 14), int32] */;
  %446 = dyn.reshape(%443, %444, newshape=[]) /* ty=Tensor[(?, ?, ?), int32] */;
  %447 = cast(%var_7538, dtype="float32") /* ty=Tensor[(990, 1), float32] */;
  %448 = cast(%var_7538, dtype="float32") /* ty=Tensor[(990, 1), float32] */;
  %449 = cast(%var_7538, dtype="float32") /* ty=Tensor[(990, 1), float32] */;
  %450 = reshape(%447, newshape=[11, 6, 15]) /* ty=Tensor[(11, 6, 15), float32] */;
  %451 = reshape(%448, newshape=[11, 6, 15]) /* ty=Tensor[(11, 6, 15), float32] */;
  %452 = reshape(%449, newshape=[11, 6, 15]) /* ty=Tensor[(11, 6, 15), float32] */;
  %453 = @func_1218(%450, %451, %452) /* ty=(Tensor[(2, 8), float64], Tensor[(11, 6, 15), int64], Tensor[(1386), float32], Tensor[(9, 14, 11), float32], Tensor[(11, 6, 15), bool], Tensor[(11, 6, 15), bool]) */;
  %454 = cast(%var_7546, dtype="float64") /* ty=Tensor[(1755), float64] */;
  %455 = reshape(%454, newshape=[585, 3]) /* ty=Tensor[(585, 3), float64] */;
  %456 = left_shift(%445, %446) /* ty=Tensor[(12, 10, 14), int32] */;
  %457 = %453.2;
  %458 = @func_6514(%455) /* ty=Tensor[(585, 3), float64] */;
  (%456, %457, %var_7538, %458, %var_7546)
}

def @func_8581(%var_8579: Tensor[(1386), float32]) -> (Tensor[(990), float32], Tensor[(2, 8), float64], Tensor[(1386), float32], Tensor[(99), float32]) {
  @func_8578(%var_8579) /* ty=(Tensor[(990), float32], Tensor[(2, 8), float64], Tensor[(1386), float32], Tensor[(99), float32]) */
}

def @func_2753() -> (Tensor[(2, 8), float64], Tensor[(2, 8), float64], Tensor[(9, 1, 11), float32], Tensor[(2, 8), float64]) {
  %467 = fn () -> (Tensor[(2, 8), float64], Tensor[(2, 8), float64], Tensor[(9, 1, 11), float32], Tensor[(2, 8), float64]) {
    %459 = @func_1065() /* ty=(Tensor[(2, 8), float64], Tensor[(9, 14, 11), float32], Tensor[(1386), float32]) */;
    %460 = @func_2501() /* ty=(Tensor[(2, 8), float64],) */;
    %461 = @func_1346() /* ty=(Tensor[(2, 8), float64], Tensor[(2, 8), float64], Tensor[(9, 1, 11), float32], Tensor[(99), float32], Tensor[(9, 1, 11), float32]) */;
    %462 = @func_820() /* ty=(Tensor[(2, 8), float64], Tensor[(9, 1, 11), float32], Tensor[(99), float32]) */;
    %463 = %459.0;
    %464 = %460.0;
    %465 = %461.4;
    %466 = %462.0;
    (%463, %464, %465, %466)
  };
  %467() /* ty=(Tensor[(2, 8), float64], Tensor[(2, 8), float64], Tensor[(9, 1, 11), float32], Tensor[(2, 8), float64]) */
}

def @func_4147(%var_4146: Tensor[(5, 7, 9), float32]) -> Tensor[(5, 7, 9), float32] {
  %472 = fn (%var_4136: Tensor[(5, 7, 9), float32]) -> Tensor[(5, 7, 9), float32] {
    %468 = cast(%var_4136, dtype="float32") /* ty=Tensor[(5, 7, 9), float32] */;
    %469 = shape_of(meta[relay.Constant][15] /* ty=Tensor[(5, 7, 9), float32] */, dtype="int32") /* ty=Tensor[(3), int32] */;
    %470 = cast(meta[relay.Constant][15] /* ty=Tensor[(5, 7, 9), float32] */, dtype="float32") /* ty=Tensor[(5, 7, 9), float32] */;
    %471 = dyn.reshape(%468, %469, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
    mod(%470, %471) /* ty=Tensor[(5, 7, 9), float32] */
  };
  %472(%var_4146) /* ty=Tensor[(5, 7, 9), float32] */
}

def @func_5455(%var_5452: Tensor[(5, 198), float64], %var_5453: Tensor[(243, 2), float32], %var_5454: Tensor[(1584), float64]) -> (Tensor[(2, 8), float64], Tensor[(2, 8), float64], Tensor[(5, 198), bool], Tensor[(9, 1, 11), float32], Tensor[(9, 6, 9), bool], Tensor[(243, 2), float32], uint8, Tensor[(1584), float64]) {
  %494 = fn (%var_5419: Tensor[(5, 198), float64], %var_5441: Tensor[(243, 2), float32], %var_5443: Tensor[(1584), float64]) -> (Tensor[(2, 8), float64], Tensor[(2, 8), float64], Tensor[(5, 198), bool], Tensor[(9, 1, 11), float32], Tensor[(9, 6, 9), bool], Tensor[(243, 2), float32], uint8, Tensor[(1584), float64]) {
    %473 = @func_3630() /* ty=(Tensor[(2, 8), float64], Tensor[(2, 8), float64]) */;
    %474 = @func_4074() /* ty=(Tensor[(2, 8), float64], Tensor[(16, 9, 11), float64], Tensor[(1584), float64], Tensor[(990), float32], Tensor[(585, 3), float64], Tensor[(585, 3), uint64]) */;
    %475 = @func_1711() /* ty=(Tensor[(2, 8), float64], Tensor[(11, 6, 15), bool], Tensor[(5, 198), float64]) */;
    %476 = %475.2;
    %477 = cast(%var_5419, dtype="bool") /* ty=Tensor[(5, 198), bool] */;
    %478 = shape_of(%476, dtype="int32") /* ty=Tensor[(2), int32] */;
    %479 = cast(%476, dtype="bool") /* ty=Tensor[(5, 198), bool] */;
    %480 = dyn.reshape(%477, %478, newshape=[]) /* ty=Tensor[(?, ?), bool] */;
    %481 = @func_4642() /* ty=(Tensor[(9, 1, 11), float32],) */;
    %482 = cast(%var_5441, dtype="float32") /* ty=Tensor[(243, 2), float32] */;
    %483 = cast(meta[relay.Constant][16] /* ty=uint8 */, dtype="uint8") /* ty=uint8 */;
    %484 = cast(%var_5443, dtype="float64") /* ty=Tensor[(1584), float64] */;
    %485 = reshape(%482, newshape=[9, 6, 9]) /* ty=Tensor[(9, 6, 9), float32] */;
    %486 = reshape(%483, newshape=[]) /* ty=uint8 */;
    %487 = reshape(%484, newshape=[1584]) /* ty=Tensor[(1584), float64] */;
    %488 = @func_5382(%485, %486, %487) /* ty=(Tensor[(9, 6, 9), bool], Tensor[(1386), float32], uint8, Tensor[(1584), float64], Tensor[(9, 6, 9), float32]) */;
    %489 = %473.0;
    %490 = %474.0;
    %491 = logical_or(%479, %480) /* ty=Tensor[(5, 198), bool] */;
    %492 = %481.0;
    %493 = %488.0;
    (%489, %490, %491, %492, %493, %var_5441, meta[relay.Constant][16] /* ty=uint8 */, %var_5443)
  };
  %494(%var_5452, %var_5453, %var_5454) /* ty=(Tensor[(2, 8), float64], Tensor[(2, 8), float64], Tensor[(5, 198), bool], Tensor[(9, 1, 11), float32], Tensor[(9, 6, 9), bool], Tensor[(243, 2), float32], uint8, Tensor[(1584), float64]) */
}

def @func_1532(%var_1529: Tensor[(13, 9, 15), float64]) -> Tensor[(13, 9, 15), float64] {
  %495 = cast(%var_1529, dtype="float64") /* ty=Tensor[(13, 9, 15), float64] */;
  acos(%495) /* ty=Tensor[(13, 9, 15), float64] */
}

def @func_6181() -> (Tensor[(2, 8), float64],) {
  %497 = fn () -> (Tensor[(2, 8), float64],) {
    %496 = @func_4954() /* ty=Tensor[(2, 8), float64] */;
    (%496,)
  };
  %497() /* ty=(Tensor[(2, 8), float64],) */
}

def @func_1067() -> (Tensor[(2, 8), float64], Tensor[(9, 14, 11), float32], Tensor[(1386), float32]) {
  @func_1065() /* ty=(Tensor[(2, 8), float64], Tensor[(9, 14, 11), float32], Tensor[(1386), float32]) */
}

def @func_3954() -> Tensor[(99), float32] {
  @func_3952() /* ty=Tensor[(99), float32] */
}

def @func_7636(%var_7634: uint8, %var_7635: Tensor[(5, 1, 8), uint8]) -> (Tensor[(2, 8), float64], Tensor[(99), float32], Tensor[(99), float32], Tensor[(5, 1, 8), float32], Tensor[(99), float32], Tensor[(5, 1, 8), float32]) {
  @func_7632(%var_7634, %var_7635) /* ty=(Tensor[(2, 8), float64], Tensor[(99), float32], Tensor[(99), float32], Tensor[(5, 1, 8), float32], Tensor[(99), float32], Tensor[(5, 1, 8), float32]) */
}

def @func_7495() -> Tensor[(2, 8), float64] {
  %499 = fn () -> Tensor[(2, 8), float64] {
    %498 = @func_6180() /* ty=(Tensor[(2, 8), float64],) */;
    %498.0
  };
  %499() /* ty=Tensor[(2, 8), float64] */
}

def @func_4309() -> (Tensor[(99), float32],) {
  %502 = fn () -> (Tensor[(99), float32],) {
    %500 = @func_2844() /* ty=(Tensor[(99), float32],) */;
    %501 = %500.0;
    (%501,)
  };
  %502() /* ty=(Tensor[(99), float32],) */
}

def @func_7354() -> Tensor[(9, ?, 11), bool] {
  %511 = fn () -> Tensor[(9, ?, 11), bool] {
    %503 = @func_2752() /* ty=(Tensor[(2, 8), float64], Tensor[(2, 8), float64], Tensor[(9, 1, 11), float32], Tensor[(2, 8), float64]) */;
    %504 = %503.2;
    %505 = @func_1022() /* ty=(Tensor[(99), float32], Tensor[(9, 1, 11), float32], Tensor[(9, 14, 11), float32], Tensor[(1386), float32]) */;
    %506 = %505.1;
    %507 = cast(%506, dtype="bool") /* ty=Tensor[(9, 1, 11), bool] */;
    %508 = shape_of(%504, dtype="int32") /* ty=Tensor[(3), int32] */;
    %509 = cast(%504, dtype="bool") /* ty=Tensor[(9, 1, 11), bool] */;
    %510 = dyn.reshape(%507, %508, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    less(%509, %510) /* ty=Tensor[(9, ?, 11), bool] */
  };
  %511() /* ty=Tensor[(9, ?, 11), bool] */
}

def @func_8647() -> (Tensor[(9, 1, 11), float32],) {
  %512 = @func_4814() /* ty=(Tensor[(9, 1, 11), float32],) */;
  %513 = %512.0;
  (%513,)
}

def @func_6344(%var_6336: Tensor[(5, 198), float32]) -> Tensor[(5, 198), bool] {
  %514 = @func_5611() /* ty=Tensor[(5, 198), float32] */;
  %515 = cast(%var_6336, dtype="bool") /* ty=Tensor[(5, 198), bool] */;
  %516 = shape_of(%514, dtype="int32") /* ty=Tensor[(2), int32] */;
  %517 = cast(%514, dtype="bool") /* ty=Tensor[(5, 198), bool] */;
  %518 = dyn.reshape(%515, %516, newshape=[]) /* ty=Tensor[(?, ?), bool] */;
  less_equal(%517, %518) /* ty=Tensor[(5, 198), bool] */
}

def @func_1505() -> Tensor[(2, 8), float64] {
  @func_749() /* ty=Tensor[(2, 8), float64] */
}

def @func_4203(%var_4193: Tensor[(14, 15, 6), float32]) -> (Tensor[(14, 15, 6), float32],) {
  %519 = cast(%var_4193, dtype="float32") /* ty=Tensor[(14, 15, 6), float32] */;
  %520 = sinh(%519) /* ty=Tensor[(14, 15, 6), float32] */;
  (%520,)
}

def @func_2086() -> Tensor[(5, 198), float64] {
  %522 = fn () -> Tensor[(5, 198), float64] {
    %521 = @func_1711() /* ty=(Tensor[(2, 8), float64], Tensor[(11, 6, 15), bool], Tensor[(5, 198), float64]) */;
    %521.2
  };
  %522() /* ty=Tensor[(5, 198), float64] */
}

def @func_1854() -> Tensor[(2, 8), float64] {
  @func_1852() /* ty=Tensor[(2, 8), float64] */
}

def @func_5303() -> Tensor[(9, ?, 11), float32] {
  %523 = @func_1936() /* ty=(Tensor[(9, ?, 11), float32], Tensor[(9, ?, 11), bool]) */;
  %523.0
}

def @func_2390(%var_2388: Tensor[(11, 5, 13), float32]) -> Tensor[(11, 5, 13), float32] {
  @func_2387(%var_2388) /* ty=Tensor[(11, 5, 13), float32] */
}

def @main(%var_8884: Tensor[(4, 13, 14), float32], %var_8885: Tensor[(4, 13, 14), float32]) -> Tensor[(4, 13, 14), float32] {
  %524 = cast(%var_8885, dtype="float32") /* ty=Tensor[(4, 13, 14), float32] */;
  %525 = shape_of(%var_8884, dtype="int32") /* ty=Tensor[(3), int32] */;
  %526 = cast(%var_8884, dtype="float32") /* ty=Tensor[(4, 13, 14), float32] */;
  %527 = dyn.reshape(%524, %525, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  power(%526, %527) /* ty=Tensor[(4, 13, 14), float32] */
}

def @func_4814() -> (Tensor[(9, 1, 11), float32],) {
  %528 = @func_4419() /* ty=(Tensor[(9, 1, 11), float32], Tensor[(2, 8), float64]) */;
  %529 = %528.0;
  (%529,)
}

def @func_2116() -> (Tensor[(99), float64],) {
  @func_2114() /* ty=(Tensor[(99), float64],) */
}

def @func_4771(%var_4769: Tensor[(1386), float32]) -> (Tensor[(99), float32], Tensor[(588), uint8], Tensor[(588), float64], Tensor[(2, 8), float64], Tensor[(1386), float32]) {
  @func_4768(%var_4769) /* ty=(Tensor[(99), float32], Tensor[(588), uint8], Tensor[(588), float64], Tensor[(2, 8), float64], Tensor[(1386), float32]) */
}

def @func_8823() -> (Tensor[(2, 8), float64],) {
  %530 = @func_2501() /* ty=(Tensor[(2, 8), float64],) */;
  %531 = %530.0;
  (%531,)
}

def @func_1895(%var_1893: uint8, %var_1894: Tensor[(1584), float64]) -> (Tensor[(1386), float32], Tensor[(588), uint8], Tensor[(9, 1, 11), int32], Tensor[(2, 8), float64], Tensor[(16, 9, 11), float64], Tensor[(1584), float64], Tensor[(2, 8), float64], Tensor[(99), float32]) {
  @func_1891(%var_1893, %var_1894) /* ty=(Tensor[(1386), float32], Tensor[(588), uint8], Tensor[(9, 1, 11), int32], Tensor[(2, 8), float64], Tensor[(16, 9, 11), float64], Tensor[(1584), float64], Tensor[(2, 8), float64], Tensor[(99), float32]) */
}

def @func_6920(%var_6871: Tensor[(990), float32], %var_6887: Tensor[(99), float32]) -> (Tensor[(2, 8), float64], Tensor[(990), uint8], Tensor[(9, 1, 11), float32], Tensor[(99), float32], Tensor[(2, 8), float64], Tensor[(2, 8), float64]) {
  %532 = @func_4074() /* ty=(Tensor[(2, 8), float64], Tensor[(16, 9, 11), float64], Tensor[(1584), float64], Tensor[(990), float32], Tensor[(585, 3), float64], Tensor[(585, 3), uint64]) */;
  %533 = @func_5556() /* ty=(Tensor[(585, 3), float64], Tensor[(585, 3), bool], Tensor[(990), float32]) */;
  %534 = %533.2;
  %535 = cast(%var_6871, dtype="uint8") /* ty=Tensor[(990), uint8] */;
  %536 = shape_of(%534, dtype="int32") /* ty=Tensor[(1), int32] */;
  %537 = cast(%534, dtype="uint8") /* ty=Tensor[(990), uint8] */;
  %538 = dyn.reshape(%535, %536, newshape=[]) /* ty=Tensor[(?), uint8] */;
  %539 = cast(%var_6887, dtype="float32") /* ty=Tensor[(99), float32] */;
  %540 = reshape(%539, newshape=[9, 1, 11]) /* ty=Tensor[(9, 1, 11), float32] */;
  %541 = @func_5538() /* ty=(Tensor[(2, 8), float64], Tensor[(12, 1, 7), float64], Tensor[(2, 8), float64]) */;
  %542 = %532.0;
  %543 = left_shift(%537, %538) /* ty=Tensor[(990), uint8] */;
  %544 = @func_252(%540) /* ty=Tensor[(9, 1, 11), float32] */;
  %545 = %541.2;
  %546 = @func_6142() /* ty=Tensor[(2, 8), float64] */;
  (%542, %543, %544, %var_6887, %545, %546)
}

def @func_1023() -> (Tensor[(99), float32], Tensor[(9, 1, 11), float32], Tensor[(9, 14, 11), float32], Tensor[(1386), float32]) {
  %555 = fn () -> (Tensor[(99), float32], Tensor[(9, 1, 11), float32], Tensor[(9, 14, 11), float32], Tensor[(1386), float32]) {
    %547 = @func_820() /* ty=(Tensor[(2, 8), float64], Tensor[(9, 1, 11), float32], Tensor[(99), float32]) */;
    %548 = @func_820() /* ty=(Tensor[(2, 8), float64], Tensor[(9, 1, 11), float32], Tensor[(99), float32]) */;
    %549 = cast(meta[relay.Constant][17] /* ty=Tensor[(1386), float32] */, dtype="float32") /* ty=Tensor[(1386), float32] */;
    %550 = reshape(%549, newshape=[9, 14, 11]) /* ty=Tensor[(9, 14, 11), float32] */;
    %551 = @func_148(%550) /* ty=(Tensor[(9, 14, 11), float32],) */;
    %552 = %547.2;
    %553 = %548.1;
    %554 = %551.0;
    (%552, %553, %554, meta[relay.Constant][17] /* ty=Tensor[(1386), float32] */)
  };
  %555() /* ty=(Tensor[(99), float32], Tensor[(9, 1, 11), float32], Tensor[(9, 14, 11), float32], Tensor[(1386), float32]) */
}

def @func_4296(%var_4294: Tensor[(11, 3, 13), int32], %var_4295: Tensor[(11, 3, 13), int32]) -> (Tensor[(11, 3, 13), bool],) {
  @func_4292(%var_4294, %var_4295) /* ty=(Tensor[(11, 3, 13), bool],) */
}

def @func_4643() -> (Tensor[(9, 1, 11), float32],) {
  %563 = fn () -> (Tensor[(9, 1, 11), float32],) {
    %556 = @func_4108() /* ty=Tensor[(9, 1, 11), float32] */;
    %557 = cast(%556, dtype="float64") /* ty=Tensor[(9, 1, 11), float64] */;
    %558 = log(%557) /* ty=Tensor[(9, 1, 11), float64] */;
    %559 = cast(%558, dtype="float32") /* ty=Tensor[(9, 1, 11), float32] */;
    %560 = cosh(%559) /* ty=Tensor[(9, 1, 11), float32] */;
    %561 = cast(%560, dtype="float32") /* ty=Tensor[(9, 1, 11), float32] */;
    %562 = acos(%561) /* ty=Tensor[(9, 1, 11), float32] */;
    (%562,)
  };
  %563() /* ty=(Tensor[(9, 1, 11), float32],) */
}

def @func_3323() -> Tensor[(2, 8), float64] {
  %565 = fn () -> Tensor[(2, 8), float64] {
    %564 = @func_2501() /* ty=(Tensor[(2, 8), float64],) */;
    %564.0
  };
  %565() /* ty=Tensor[(2, 8), float64] */
}

def @func_5759() -> (Tensor[(2, 8), float64],) {
  %566 = @func_4954() /* ty=Tensor[(2, 8), float64] */;
  (%566,)
}

def @func_1837(%var_1836: Tensor[(588), uint8]) -> (Tensor[(2, 8), float64], uint8, Tensor[(588), uint8], Tensor[(9, 14, 11), bool]) {
  %582 = fn (%var_1818: Tensor[(588), uint8]) -> (Tensor[(2, 8), float64], uint8, Tensor[(588), uint8], Tensor[(9, 14, 11), bool]) {
    %567 = @func_1711() /* ty=(Tensor[(2, 8), float64], Tensor[(11, 6, 15), bool], Tensor[(5, 198), float64]) */;
    %568 = @func_1065() /* ty=(Tensor[(2, 8), float64], Tensor[(9, 14, 11), float32], Tensor[(1386), float32]) */;
    %569 = %568.1;
    %570 = cast(meta[relay.Constant][18] /* ty=uint8 */, dtype="uint8") /* ty=uint8 */;
    %571 = cast(%var_1818, dtype="uint8") /* ty=Tensor[(588), uint8] */;
    %572 = reshape(%570, newshape=[]) /* ty=uint8 */;
    %573 = reshape(%571, newshape=[3, 14, 14]) /* ty=Tensor[(3, 14, 14), uint8] */;
    %574 = @func_1627(%572, %573) /* ty=(Tensor[(3, 14, 14), uint8], Tensor[(9, 1, 11), float32], Tensor[(2, 8), float64], Tensor[(2, 8), float64], Tensor[(99), float32], Tensor[(9, 14, 11), float32], Tensor[(1386), float32], Tensor[(9, 1, 11), float32]) */;
    %575 = %574.5;
    %576 = cast(%575, dtype="bool") /* ty=Tensor[(9, 14, 11), bool] */;
    %577 = shape_of(%569, dtype="int32") /* ty=Tensor[(3), int32] */;
    %578 = cast(%569, dtype="bool") /* ty=Tensor[(9, 14, 11), bool] */;
    %579 = dyn.reshape(%576, %577, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    %580 = %567.0;
    %581 = logical_and(%578, %579) /* ty=Tensor[(9, 14, 11), bool] */;
    (%580, meta[relay.Constant][18] /* ty=uint8 */, %var_1818, %581)
  };
  %582(%var_1836) /* ty=(Tensor[(2, 8), float64], uint8, Tensor[(588), uint8], Tensor[(9, 14, 11), bool]) */
}

def @func_5223(%var_5221: Tensor[(10, 9, 4), float64], %var_5222: Tensor[(10, 9, 4), float64]) -> (Tensor[(10, 9, 4), int8], Tensor[(10, 9, 4), float32], Tensor[(9, 1, 11), float32]) {
  %598 = fn (%var_5176: Tensor[(10, 9, 4), float64], %var_5203: Tensor[(10, 9, 4), float64]) -> (Tensor[(10, 9, 4), int8], Tensor[(10, 9, 4), float32], Tensor[(9, 1, 11), float32]) {
    %583 = cast(-5.47049f64 /* ty=float64 */, dtype="float64") /* ty=float64 */;
    %584 = cast(%var_5176, dtype="float64") /* ty=Tensor[(10, 9, 4), float64] */;
    %585 = mod(%583, %584) /* ty=Tensor[(10, 9, 4), float64] */;
    %586 = cast(%var_5176, dtype="int8") /* ty=Tensor[(10, 9, 4), int8] */;
    %587 = shape_of(%585, dtype="int32") /* ty=Tensor[(3), int32] */;
    %588 = cast(%585, dtype="int8") /* ty=Tensor[(10, 9, 4), int8] */;
    %589 = dyn.reshape(%586, %587, newshape=[]) /* ty=Tensor[(?, ?, ?), int8] */;
    %590 = cast(%var_5203, dtype="float32") /* ty=Tensor[(10, 9, 4), float32] */;
    %591 = shape_of(%585, dtype="int32") /* ty=Tensor[(3), int32] */;
    %592 = cast(%585, dtype="float32") /* ty=Tensor[(10, 9, 4), float32] */;
    %593 = dyn.reshape(%590, %591, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
    %594 = @func_4814() /* ty=(Tensor[(9, 1, 11), float32],) */;
    %595 = multiply(%588, %589) /* ty=Tensor[(10, 9, 4), int8] */;
    %596 = floor_mod(%592, %593) /* ty=Tensor[(10, 9, 4), float32] */;
    %597 = %594.0;
    (%595, %596, %597)
  };
  %598(%var_5221, %var_5222) /* ty=(Tensor[(10, 9, 4), int8], Tensor[(10, 9, 4), float32], Tensor[(9, 1, 11), float32]) */
}

def @func_8011(%var_8004: Tensor[(16, 9, 2), float64]) -> (Tensor[(16, 9, 2), float64], Tensor[(2, 8), float64]) {
  %599 = cast(%var_8004, dtype="float64") /* ty=Tensor[(16, 9, 2), float64] */;
  %600 = @func_5759() /* ty=(Tensor[(2, 8), float64],) */;
  %601 = asin(%599) /* ty=Tensor[(16, 9, 2), float64] */;
  %602 = %600.0;
  (%601, %602)
}

def @func_7314() -> (Tensor[(99), float32],) {
  %603 = @func_3080() /* ty=(Tensor[(5, 198), float64], Tensor[(99), float32], Tensor[(9, 1, 11), float64]) */;
  %604 = %603.1;
  (%604,)
}

def @func_8825() -> (Tensor[(2, 8), float64],) {
  @func_8823() /* ty=(Tensor[(2, 8), float64],) */
}

def @func_5313(%var_5306: Tensor[(10, 8, 8), uint8]) -> (Tensor[(10, 8, 8), bool],) {
  %605 = cast(meta[relay.Constant][19] /* ty=Tensor[(10, 8, 8), uint8] */, dtype="bool") /* ty=Tensor[(10, 8, 8), bool] */;
  %606 = shape_of(%var_5306, dtype="int32") /* ty=Tensor[(3), int32] */;
  %607 = cast(%var_5306, dtype="bool") /* ty=Tensor[(10, 8, 8), bool] */;
  %608 = dyn.reshape(%605, %606, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %609 = less_equal(%607, %608) /* ty=Tensor[(10, 8, 8), bool] */;
  (%609,)
}

def @func_8870() -> (Tensor[(2, 8), float64],) {
  %611 = fn () -> (Tensor[(2, 8), float64],) {
    %610 = @func_749() /* ty=Tensor[(2, 8), float64] */;
    (%610,)
  };
  %611() /* ty=(Tensor[(2, 8), float64],) */
}

def @func_8874() -> Tensor[(2, 8), float64] {
  %613 = fn () -> Tensor[(2, 8), float64] {
    %612 = @func_5959() /* ty=(Tensor[(2, 8), float64], Tensor[(99), float32], Tensor[(5, 198), float64], Tensor[(2, 8), float64]) */;
    %612.0
  };
  %613() /* ty=Tensor[(2, 8), float64] */
}

def @func_150(%var_149: Tensor[(9, 14, 11), float32]) -> (Tensor[(9, 14, 11), float32],) {
  %621 = fn (%var_137: Tensor[(9, 14, 11), float32]) -> (Tensor[(9, 14, 11), float32],) {
    %614 = cast(%var_137, dtype="float32") /* ty=Tensor[(9, 14, 11), float32] */;
    %615 = log10(%614) /* ty=Tensor[(9, 14, 11), float32] */;
    %616 = cast(%var_137, dtype="float32") /* ty=Tensor[(9, 14, 11), float32] */;
    %617 = shape_of(%615, dtype="int32") /* ty=Tensor[(3), int32] */;
    %618 = cast(%615, dtype="float32") /* ty=Tensor[(9, 14, 11), float32] */;
    %619 = dyn.reshape(%616, %617, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
    %620 = maximum(%618, %619) /* ty=Tensor[(9, 14, 11), float32] */;
    (%620,)
  };
  %621(%var_149) /* ty=(Tensor[(9, 14, 11), float32],) */
}

def @func_1358(%var_1357: Tensor[(16, 9, 11), float64]) -> Tensor[(16, 9, 11), float64] {
  %623 = fn (%var_1350: Tensor[(16, 9, 11), float64]) -> Tensor[(16, 9, 11), float64] {
    %622 = cast(%var_1350, dtype="float64") /* ty=Tensor[(16, 9, 11), float64] */;
    sigmoid(%622) /* ty=Tensor[(16, 9, 11), float64] */
  };
  %623(%var_1357) /* ty=Tensor[(16, 9, 11), float64] */
}

def @func_1222(%var_1219: Tensor[(11, 6, 15), float32], %var_1220: Tensor[(11, 6, 15), float32], %var_1221: Tensor[(11, 6, 15), float32]) -> (Tensor[(2, 8), float64], Tensor[(11, 6, 15), int64], Tensor[(1386), float32], Tensor[(9, 14, 11), float32], Tensor[(11, 6, 15), bool], Tensor[(11, 6, 15), bool]) {
  %654 = fn (%var_1153: Tensor[(11, 6, 15), float32], %var_1154: Tensor[(11, 6, 15), float32], %var_1214: Tensor[(11, 6, 15), float32]) -> (Tensor[(2, 8), float64], Tensor[(11, 6, 15), int64], Tensor[(1386), float32], Tensor[(9, 14, 11), float32], Tensor[(11, 6, 15), bool], Tensor[(11, 6, 15), bool]) {
    %624 = @func_1065() /* ty=(Tensor[(2, 8), float64], Tensor[(9, 14, 11), float32], Tensor[(1386), float32]) */;
    %625 = cast(%var_1154, dtype="float32") /* ty=Tensor[(11, 6, 15), float32] */;
    %626 = shape_of(%var_1153, dtype="int32") /* ty=Tensor[(3), int32] */;
    %627 = cast(%var_1153, dtype="float32") /* ty=Tensor[(11, 6, 15), float32] */;
    %628 = dyn.reshape(%625, %626, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
    %629 = mod(%627, %628) /* ty=Tensor[(11, 6, 15), float32] */;
    %630 = cast(%629, dtype="float32") /* ty=Tensor[(11, 6, 15), float32] */;
    %631 = acosh(%630) /* ty=Tensor[(11, 6, 15), float32] */;
    %632 = cast(%var_1154, dtype="int64") /* ty=Tensor[(11, 6, 15), int64] */;
    %633 = shape_of(%631, dtype="int32") /* ty=Tensor[(3), int32] */;
    %634 = cast(%631, dtype="int64") /* ty=Tensor[(11, 6, 15), int64] */;
    %635 = dyn.reshape(%632, %633, newshape=[]) /* ty=Tensor[(?, ?, ?), int64] */;
    %636 = @func_1065() /* ty=(Tensor[(2, 8), float64], Tensor[(9, 14, 11), float32], Tensor[(1386), float32]) */;
    %637 = %636.2;
    %638 = cast(%637, dtype="float32") /* ty=Tensor[(1386), float32] */;
    %639 = reshape(%638, newshape=[9, 14, 11]) /* ty=Tensor[(9, 14, 11), float32] */;
    %640 = @func_148(%639) /* ty=(Tensor[(9, 14, 11), float32],) */;
    %641 = cast(meta[relay.Constant][20] /* ty=Tensor[(11, 6, 15), float32] */, dtype="bool") /* ty=Tensor[(11, 6, 15), bool] */;
    %642 = shape_of(%631, dtype="int32") /* ty=Tensor[(3), int32] */;
    %643 = cast(%631, dtype="bool") /* ty=Tensor[(11, 6, 15), bool] */;
    %644 = dyn.reshape(%641, %642, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    %645 = cast(%var_1214, dtype="bool") /* ty=Tensor[(11, 6, 15), bool] */;
    %646 = shape_of(meta[relay.Constant][20] /* ty=Tensor[(11, 6, 15), float32] */, dtype="int32") /* ty=Tensor[(3), int32] */;
    %647 = cast(meta[relay.Constant][20] /* ty=Tensor[(11, 6, 15), float32] */, dtype="bool") /* ty=Tensor[(11, 6, 15), bool] */;
    %648 = dyn.reshape(%645, %646, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    %649 = %624.0;
    %650 = minimum(%634, %635) /* ty=Tensor[(11, 6, 15), int64] */;
    %651 = %640.0;
    %652 = logical_and(%643, %644) /* ty=Tensor[(11, 6, 15), bool] */;
    %653 = greater_equal(%647, %648) /* ty=Tensor[(11, 6, 15), bool] */;
    (%649, %650, %637, %651, %652, %653)
  };
  %654(%var_1219, %var_1220, %var_1221) /* ty=(Tensor[(2, 8), float64], Tensor[(11, 6, 15), int64], Tensor[(1386), float32], Tensor[(9, 14, 11), float32], Tensor[(11, 6, 15), bool], Tensor[(11, 6, 15), bool]) */
}

def @func_7106() -> Tensor[(99), float32] {
  %656 = fn () -> Tensor[(99), float32] {
    %655 = @func_1022() /* ty=(Tensor[(99), float32], Tensor[(9, 1, 11), float32], Tensor[(9, 14, 11), float32], Tensor[(1386), float32]) */;
    %655.0
  };
  %656() /* ty=Tensor[(99), float32] */
}

def @func_1630(%var_1628: uint8, %var_1629: Tensor[(3, 14, 14), uint8]) -> (Tensor[(3, 14, 14), uint8], Tensor[(9, 1, 11), float32], Tensor[(2, 8), float64], Tensor[(2, 8), float64], Tensor[(99), float32], Tensor[(9, 14, 11), float32], Tensor[(1386), float32], Tensor[(9, 1, 11), float32]) {
  %672 = fn (%var_1542: uint8, %var_1543: Tensor[(3, 14, 14), uint8]) -> (Tensor[(3, 14, 14), uint8], Tensor[(9, 1, 11), float32], Tensor[(2, 8), float64], Tensor[(2, 8), float64], Tensor[(99), float32], Tensor[(9, 14, 11), float32], Tensor[(1386), float32], Tensor[(9, 1, 11), float32]) {
    %657 = cast(%var_1542, dtype="uint8") /* ty=uint8 */;
    %658 = cast(%var_1543, dtype="uint8") /* ty=Tensor[(3, 14, 14), uint8] */;
    %659 = @func_1346() /* ty=(Tensor[(2, 8), float64], Tensor[(2, 8), float64], Tensor[(9, 1, 11), float32], Tensor[(99), float32], Tensor[(9, 1, 11), float32]) */;
    %660 = @func_1346() /* ty=(Tensor[(2, 8), float64], Tensor[(2, 8), float64], Tensor[(9, 1, 11), float32], Tensor[(99), float32], Tensor[(9, 1, 11), float32]) */;
    %661 = cast(meta[relay.Constant][21] /* ty=Tensor[(1386), float32] */, dtype="float32") /* ty=Tensor[(1386), float32] */;
    %662 = reshape(%661, newshape=[9, 14, 11]) /* ty=Tensor[(9, 14, 11), float32] */;
    %663 = @func_148(%662) /* ty=(Tensor[(9, 14, 11), float32],) */;
    %664 = @func_1346() /* ty=(Tensor[(2, 8), float64], Tensor[(2, 8), float64], Tensor[(9, 1, 11), float32], Tensor[(99), float32], Tensor[(9, 1, 11), float32]) */;
    %665 = bitwise_and(%657, %658) /* ty=Tensor[(3, 14, 14), uint8] */;
    %666 = %659.2;
    %667 = @func_1505() /* ty=Tensor[(2, 8), float64] */;
    %668 = @func_749() /* ty=Tensor[(2, 8), float64] */;
    %669 = %660.3;
    %670 = %663.0;
    %671 = %664.2;
    (%665, %666, %667, %668, %669, %670, meta[relay.Constant][21] /* ty=Tensor[(1386), float32] */, %671)
  };
  %672(%var_1628, %var_1629) /* ty=(Tensor[(3, 14, 14), uint8], Tensor[(9, 1, 11), float32], Tensor[(2, 8), float64], Tensor[(2, 8), float64], Tensor[(99), float32], Tensor[(9, 14, 11), float32], Tensor[(1386), float32], Tensor[(9, 1, 11), float32]) */
}

def @func_3927() -> Tensor[(2, 8), float64] {
  %674 = fn () -> Tensor[(2, 8), float64] {
    %673 = @func_2501() /* ty=(Tensor[(2, 8), float64],) */;
    %673.0
  };
  %674() /* ty=Tensor[(2, 8), float64] */
}

def @func_5539() -> (Tensor[(2, 8), float64], Tensor[(12, 1, 7), float64], Tensor[(2, 8), float64]) {
  %682 = fn () -> (Tensor[(2, 8), float64], Tensor[(12, 1, 7), float64], Tensor[(2, 8), float64]) {
    %675 = @func_3902() /* ty=(Tensor[(2, 8), float64],) */;
    %676 = cast(meta[relay.Constant][22] /* ty=Tensor[(12, 1, 7), float64] */, dtype="float64") /* ty=Tensor[(12, 1, 7), float64] */;
    %677 = sigmoid(%676) /* ty=Tensor[(12, 1, 7), float64] */;
    %678 = cast(%677, dtype="float64") /* ty=Tensor[(12, 1, 7), float64] */;
    %679 = %675.0;
    %680 = sqrt(%678) /* ty=Tensor[(12, 1, 7), float64] */;
    %681 = @func_2890() /* ty=Tensor[(2, 8), float64] */;
    (%679, %680, %681)
  };
  %682() /* ty=(Tensor[(2, 8), float64], Tensor[(12, 1, 7), float64], Tensor[(2, 8), float64]) */
}

def @func_5557() -> (Tensor[(585, 3), float64], Tensor[(585, 3), bool], Tensor[(990), float32]) {
  %689 = fn () -> (Tensor[(585, 3), float64], Tensor[(585, 3), bool], Tensor[(990), float32]) {
    %683 = @func_4074() /* ty=(Tensor[(2, 8), float64], Tensor[(16, 9, 11), float64], Tensor[(1584), float64], Tensor[(990), float32], Tensor[(585, 3), float64], Tensor[(585, 3), uint64]) */;
    %684 = cast(meta[relay.Constant][23] /* ty=Tensor[(990), float32] */, dtype="float32") /* ty=Tensor[(990), float32] */;
    %685 = reshape(%684, newshape=[990]) /* ty=Tensor[(990), float32] */;
    %686 = @func_2008(%685) /* ty=(Tensor[(9, 1, 11), float32], Tensor[(11, 6, 15), bool], Tensor[(990), float32], Tensor[(585, 3), bool]) */;
    %687 = %683.4;
    %688 = %686.3;
    (%687, %688, meta[relay.Constant][23] /* ty=Tensor[(990), float32] */)
  };
  %689() /* ty=(Tensor[(585, 3), float64], Tensor[(585, 3), bool], Tensor[(990), float32]) */
}

def @func_6578() -> Tensor[(2, 8), float64] {
  @func_6576() /* ty=Tensor[(2, 8), float64] */
}

def @func_2387(%var_2383: Tensor[(11, 5, 13), float32]) -> Tensor[(11, 5, 13), float32] {
  %690 = cast(%var_2383, dtype="float32") /* ty=Tensor[(11, 5, 13), float32] */;
  rsqrt(%690) /* ty=Tensor[(11, 5, 13), float32] */
}

def @func_1475(%var_1473: Tensor[(9, 14, 11), float32]) -> (Tensor[(2, 8), float64], Tensor[(9, 14, 11), float32], Tensor[(9, 14, 11), float32]) {
  @func_1472(%var_1473) /* ty=(Tensor[(2, 8), float64], Tensor[(9, 14, 11), float32], Tensor[(9, 14, 11), float32]) */
}

def @func_6313(%var_6312: Tensor[(24, 1), float32]) -> (Tensor[(2, 8), float64], Tensor[(4, 6, 1), float32], Tensor[(24, 1), float32]) {
  %696 = fn (%var_6305: Tensor[(24, 1), float32]) -> (Tensor[(2, 8), float64], Tensor[(4, 6, 1), float32], Tensor[(24, 1), float32]) {
    %691 = cast(%var_6305, dtype="float32") /* ty=Tensor[(24, 1), float32] */;
    %692 = reshape(%691, newshape=[4, 6, 1]) /* ty=Tensor[(4, 6, 1), float32] */;
    %693 = @func_5671(%692) /* ty=(Tensor[(4, 6, 1), float32],) */;
    %694 = @func_3322() /* ty=Tensor[(2, 8), float64] */;
    %695 = %693.0;
    (%694, %695, %var_6305)
  };
  %696(%var_6312) /* ty=(Tensor[(2, 8), float64], Tensor[(4, 6, 1), float32], Tensor[(24, 1), float32]) */
}

def @func_8773() -> Tensor[(99), float64] {
  %698 = fn () -> Tensor[(99), float64] {
    %697 = @func_2114() /* ty=(Tensor[(99), float64],) */;
    %697.0
  };
  %698() /* ty=Tensor[(99), float64] */
}

def @func_6236(%var_6235: Tensor[(9, 13, 11), int8]) -> (Tensor[(9, 13, 11), int8], Tensor[(2, 8), float64]) {
  %705 = fn (%var_6220: Tensor[(9, 13, 11), int8]) -> (Tensor[(9, 13, 11), int8], Tensor[(2, 8), float64]) {
    %699 = cast(%var_6220, dtype="int8") /* ty=Tensor[(9, 13, 11), int8] */;
    %700 = shape_of(meta[relay.Constant][24] /* ty=Tensor[(9, 13, 11), int8] */, dtype="int32") /* ty=Tensor[(3), int32] */;
    %701 = cast(meta[relay.Constant][24] /* ty=Tensor[(9, 13, 11), int8] */, dtype="int8") /* ty=Tensor[(9, 13, 11), int8] */;
    %702 = dyn.reshape(%699, %700, newshape=[]) /* ty=Tensor[(?, ?, ?), int8] */;
    %703 = right_shift(%701, %702) /* ty=Tensor[(9, 13, 11), int8] */;
    %704 = @func_1852() /* ty=Tensor[(2, 8), float64] */;
    (%703, %704)
  };
  %705(%var_6235) /* ty=(Tensor[(9, 13, 11), int8], Tensor[(2, 8), float64]) */
}

def @func_7774(%var_7773: Tensor[(99), float32]) -> (Tensor[(99), bool], Tensor[(5, 198), float32], Tensor[(9, 1, 11), float32]) {
  %715 = fn (%var_7696: Tensor[(99), float32]) -> (Tensor[(99), bool], Tensor[(5, 198), float32], Tensor[(9, 1, 11), float32]) {
    %706 = @func_4516() /* ty=(Tensor[(99), float32],) */;
    %707 = %706.0;
    %708 = cast(%var_7696, dtype="bool") /* ty=Tensor[(99), bool] */;
    %709 = shape_of(%707, dtype="int32") /* ty=Tensor[(1), int32] */;
    %710 = cast(%707, dtype="bool") /* ty=Tensor[(99), bool] */;
    %711 = dyn.reshape(%708, %709, newshape=[]) /* ty=Tensor[(?), bool] */;
    %712 = not_equal(%710, %711) /* ty=Tensor[(99), bool] */;
    %713 = @func_5611() /* ty=Tensor[(5, 198), float32] */;
    %714 = @func_6157() /* ty=Tensor[(9, 1, 11), float32] */;
    (%712, %713, %714)
  };
  %715(%var_7773) /* ty=(Tensor[(99), bool], Tensor[(5, 198), float32], Tensor[(9, 1, 11), float32]) */
}

def @func_1938() -> (Tensor[(9, ?, 11), float32], Tensor[(9, ?, 11), bool]) {
  @func_1936() /* ty=(Tensor[(9, ?, 11), float32], Tensor[(9, ?, 11), bool]) */
}

def @func_2103() -> (Tensor[(99), float32], Tensor[(2, 8), float64]) {
  @func_2101() /* ty=(Tensor[(99), float32], Tensor[(2, 8), float64]) */
}

def @func_3587(%var_3586: Tensor[(588), uint8]) -> (Tensor[(2, 8), float64], Tensor[(99), float64], Tensor[(588), uint8], Tensor[(1386), float64]) {
  %734 = fn (%var_3515: Tensor[(588), uint8]) -> (Tensor[(2, 8), float64], Tensor[(99), float64], Tensor[(588), uint8], Tensor[(1386), float64]) {
    %716 = @func_2114() /* ty=(Tensor[(99), float64],) */;
    %717 = cast(%var_3515, dtype="uint8") /* ty=Tensor[(588), uint8] */;
    %718 = reshape(%717, newshape=[588]) /* ty=Tensor[(588), uint8] */;
    %719 = @func_2639(%718) /* ty=(Tensor[(1386), float32], Tensor[(2, 8), float64], Tensor[(588), uint8], Tensor[(588), uint8], Tensor[(99), float64]) */;
    %720 = %719.0;
    %721 = cast(%720, dtype="float64") /* ty=Tensor[(1386), float64] */;
    %722 = asinh(%721) /* ty=Tensor[(1386), float64] */;
    %723 = cast(%720, dtype="float32") /* ty=Tensor[(1386), float32] */;
    %724 = reshape(%723, newshape=[9, 14, 11]) /* ty=Tensor[(9, 14, 11), float32] */;
    %725 = @func_148(%724) /* ty=(Tensor[(9, 14, 11), float32],) */;
    %726 = %725.0;
    %727 = cast(%726, dtype="float64") /* ty=Tensor[(9, 14, 11), float64] */;
    %728 = shape_of(%722, dtype="int32") /* ty=Tensor[(1), int32] */;
    %729 = cast(%722, dtype="float64") /* ty=Tensor[(1386), float64] */;
    %730 = dyn.reshape(%727, %728, newshape=[]) /* ty=Tensor[(?), float64] */;
    %731 = @func_3322() /* ty=Tensor[(2, 8), float64] */;
    %732 = %716.0;
    %733 = power(%729, %730) /* ty=Tensor[(1386), float64] */;
    (%731, %732, %var_3515, %733)
  };
  %734(%var_3586) /* ty=(Tensor[(2, 8), float64], Tensor[(99), float64], Tensor[(588), uint8], Tensor[(1386), float64]) */
}

def @func_3166(%var_3164: Tensor[(1, 1386), float32]) -> (Tensor[(99), float32], Tensor[(1386), float32], Tensor[(1, 1386), float32], Tensor[(2, 8), float64], Tensor[(9, 14, 11), float32]) {
  @func_3163(%var_3164) /* ty=(Tensor[(99), float32], Tensor[(1386), float32], Tensor[(1, 1386), float32], Tensor[(2, 8), float64], Tensor[(9, 14, 11), float32]) */
}

def @func_5386(%var_5383: Tensor[(9, 6, 9), float32], %var_5384: uint8, %var_5385: Tensor[(1584), float64]) -> (Tensor[(9, 6, 9), bool], Tensor[(1386), float32], uint8, Tensor[(1584), float64], Tensor[(9, 6, 9), float32]) {
  %750 = fn (%var_5348: Tensor[(9, 6, 9), float32], %var_5367: uint8, %var_5368: Tensor[(1584), float64]) -> (Tensor[(9, 6, 9), bool], Tensor[(1386), float32], uint8, Tensor[(1584), float64], Tensor[(9, 6, 9), float32]) {
    %735 = cast(%var_5348, dtype="float32") /* ty=Tensor[(9, 6, 9), float32] */;
    %736 = sinh(%735) /* ty=Tensor[(9, 6, 9), float32] */;
    %737 = cast(%var_5348, dtype="bool") /* ty=Tensor[(9, 6, 9), bool] */;
    %738 = shape_of(%736, dtype="int32") /* ty=Tensor[(3), int32] */;
    %739 = cast(%736, dtype="bool") /* ty=Tensor[(9, 6, 9), bool] */;
    %740 = dyn.reshape(%737, %738, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    %741 = cast(%var_5367, dtype="uint8") /* ty=uint8 */;
    %742 = cast(%var_5368, dtype="float64") /* ty=Tensor[(1584), float64] */;
    %743 = reshape(%741, newshape=[]) /* ty=uint8 */;
    %744 = reshape(%742, newshape=[1584]) /* ty=Tensor[(1584), float64] */;
    %745 = @func_1891(%743, %744) /* ty=(Tensor[(1386), float32], Tensor[(588), uint8], Tensor[(9, 1, 11), int32], Tensor[(2, 8), float64], Tensor[(16, 9, 11), float64], Tensor[(1584), float64], Tensor[(2, 8), float64], Tensor[(99), float32]) */;
    %746 = cast(%var_5348, dtype="float32") /* ty=Tensor[(9, 6, 9), float32] */;
    %747 = less(%739, %740) /* ty=Tensor[(9, 6, 9), bool] */;
    %748 = %745.0;
    %749 = cosh(%746) /* ty=Tensor[(9, 6, 9), float32] */;
    (%747, %748, %var_5367, %var_5368, %749)
  };
  %750(%var_5383, %var_5384, %var_5385) /* ty=(Tensor[(9, 6, 9), bool], Tensor[(1386), float32], uint8, Tensor[(1584), float64], Tensor[(9, 6, 9), float32]) */
}

def @func_8131(%var_8129: Tensor[(10, 6, 16), int8], %var_8130: Tensor[(1386), float32]) -> (Tensor[(10, 6, 16), int8], Tensor[(99), float32], Tensor[(9, 14, 11), float32], Tensor[(1386), float32]) {
  %761 = fn (%var_8073: Tensor[(10, 6, 16), int8], %var_8106: Tensor[(1386), float32]) -> (Tensor[(10, 6, 16), int8], Tensor[(99), float32], Tensor[(9, 14, 11), float32], Tensor[(1386), float32]) {
    %751 = cast(%var_8073, dtype="int8") /* ty=Tensor[(10, 6, 16), int8] */;
    %752 = shape_of(meta[relay.Constant][25] /* ty=Tensor[(10, 6, 16), int8] */, dtype="int32") /* ty=Tensor[(3), int32] */;
    %753 = cast(meta[relay.Constant][25] /* ty=Tensor[(10, 6, 16), int8] */, dtype="int8") /* ty=Tensor[(10, 6, 16), int8] */;
    %754 = dyn.reshape(%751, %752, newshape=[]) /* ty=Tensor[(?, ?, ?), int8] */;
    %755 = cast(%var_8106, dtype="float32") /* ty=Tensor[(1386), float32] */;
    %756 = reshape(%755, newshape=[9, 14, 11]) /* ty=Tensor[(9, 14, 11), float32] */;
    %757 = @func_148(%756) /* ty=(Tensor[(9, 14, 11), float32],) */;
    %758 = add(%753, %754) /* ty=Tensor[(10, 6, 16), int8] */;
    %759 = @func_7105() /* ty=Tensor[(99), float32] */;
    %760 = %757.0;
    (%758, %759, %760, %var_8106)
  };
  %761(%var_8129, %var_8130) /* ty=(Tensor[(10, 6, 16), int8], Tensor[(99), float32], Tensor[(9, 14, 11), float32], Tensor[(1386), float32]) */
}

def @func_4206(%var_4204: Tensor[(14, 15, 6), float32]) -> (Tensor[(14, 15, 6), float32],) {
  @func_4203(%var_4204) /* ty=(Tensor[(14, 15, 6), float32],) */
}

def @func_2845() -> (Tensor[(99), float32],) {
  %763 = fn () -> (Tensor[(99), float32],) {
    %762 = @func_1272() /* ty=Tensor[(99), float32] */;
    (%762,)
  };
  %763() /* ty=(Tensor[(99), float32],) */
}

def @func_2639(%var_2572: Tensor[(588), uint8]) -> (Tensor[(1386), float32], Tensor[(2, 8), float64], Tensor[(588), uint8], Tensor[(588), uint8], Tensor[(99), float64]) {
  %764 = @func_1065() /* ty=(Tensor[(2, 8), float64], Tensor[(9, 14, 11), float32], Tensor[(1386), float32]) */;
  %765 = cast(%var_2572, dtype="uint8") /* ty=Tensor[(588), uint8] */;
  %766 = reshape(%765, newshape=[588]) /* ty=Tensor[(588), uint8] */;
  %767 = @func_1835(%766) /* ty=(Tensor[(2, 8), float64], uint8, Tensor[(588), uint8], Tensor[(9, 14, 11), bool]) */;
  %768 = @func_1022() /* ty=(Tensor[(99), float32], Tensor[(9, 1, 11), float32], Tensor[(9, 14, 11), float32], Tensor[(1386), float32]) */;
  %769 = %768.0;
  %770 = cast(%769, dtype="float64") /* ty=Tensor[(99), float64] */;
  %771 = %764.2;
  %772 = @func_749() /* ty=Tensor[(2, 8), float64] */;
  %773 = %767.2;
  %774 = asinh(%770) /* ty=Tensor[(99), float64] */;
  (%771, %772, %773, %var_2572, %774)
}

def @func_3037(%var_3035: float64, %var_3036: Tensor[(11, 8, 13), float64]) -> (Tensor[(11, 8, 13), float64], Tensor[(11, 8, 13), uint64], Tensor[(2, 8), float64]) {
  %783 = fn (%var_3002: float64, %var_3003: Tensor[(11, 8, 13), float64]) -> (Tensor[(11, 8, 13), float64], Tensor[(11, 8, 13), uint64], Tensor[(2, 8), float64]) {
    %775 = cast(%var_3002, dtype="float64") /* ty=float64 */;
    %776 = cast(%var_3003, dtype="float64") /* ty=Tensor[(11, 8, 13), float64] */;
    %777 = cast(%var_3003, dtype="uint64") /* ty=Tensor[(11, 8, 13), uint64] */;
    %778 = cast(%var_3002, dtype="uint64") /* ty=uint64 */;
    %779 = @func_820() /* ty=(Tensor[(2, 8), float64], Tensor[(9, 1, 11), float32], Tensor[(99), float32]) */;
    %780 = divide(%775, %776) /* ty=Tensor[(11, 8, 13), float64] */;
    %781 = subtract(%777, %778) /* ty=Tensor[(11, 8, 13), uint64] */;
    %782 = %779.0;
    (%780, %781, %782)
  };
  %783(%var_3035, %var_3036) /* ty=(Tensor[(11, 8, 13), float64], Tensor[(11, 8, 13), uint64], Tensor[(2, 8), float64]) */
}

def @func_1737(%var_1719: Tensor[(10, 7, 9), int64], %var_1720: Tensor[(10, 7, 9), int64]) -> (Tensor[(10, 7, 9), int64], Tensor[(9, 1, 11), float32], Tensor[(99), float32]) {
  %784 = cast(%var_1720, dtype="int64") /* ty=Tensor[(10, 7, 9), int64] */;
  %785 = shape_of(%var_1719, dtype="int32") /* ty=Tensor[(3), int32] */;
  %786 = cast(%var_1719, dtype="int64") /* ty=Tensor[(10, 7, 9), int64] */;
  %787 = dyn.reshape(%784, %785, newshape=[]) /* ty=Tensor[(?, ?, ?), int64] */;
  %788 = @func_1022() /* ty=(Tensor[(99), float32], Tensor[(9, 1, 11), float32], Tensor[(9, 14, 11), float32], Tensor[(1386), float32]) */;
  %789 = @func_820() /* ty=(Tensor[(2, 8), float64], Tensor[(9, 1, 11), float32], Tensor[(99), float32]) */;
  %790 = multiply(%786, %787) /* ty=Tensor[(10, 7, 9), int64] */;
  %791 = %788.1;
  %792 = %789.2;
  (%790, %791, %792)
}

def @func_749() -> Tensor[(2, 8), float64] {
  %793 = cast(meta[relay.Constant][26] /* ty=Tensor[(2, 8), float64] */, dtype="float64") /* ty=Tensor[(2, 8), float64] */;
  sinh(%793) /* ty=Tensor[(2, 8), float64] */
}

def @func_4987(%var_4985: Tensor[(585, 3), float64]) -> (Tensor[(2, 8), float64], Tensor[(585, 3), bool]) {
  @func_4984(%var_4985) /* ty=(Tensor[(2, 8), float64], Tensor[(585, 3), bool]) */
}

def @func_5960() -> (Tensor[(2, 8), float64], Tensor[(99), float32], Tensor[(5, 198), float64], Tensor[(2, 8), float64]) {
  %800 = fn () -> (Tensor[(2, 8), float64], Tensor[(99), float32], Tensor[(5, 198), float64], Tensor[(2, 8), float64]) {
    %794 = @func_4419() /* ty=(Tensor[(9, 1, 11), float32], Tensor[(2, 8), float64]) */;
    %795 = @func_3080() /* ty=(Tensor[(5, 198), float64], Tensor[(99), float32], Tensor[(9, 1, 11), float64]) */;
    %796 = %794.1;
    %797 = %795.1;
    %798 = @func_2085() /* ty=Tensor[(5, 198), float64] */;
    %799 = @func_2890() /* ty=Tensor[(2, 8), float64] */;
    (%796, %797, %798, %799)
  };
  %800() /* ty=(Tensor[(2, 8), float64], Tensor[(99), float32], Tensor[(5, 198), float64], Tensor[(2, 8), float64]) */
}

def @func_6143() -> Tensor[(2, 8), float64] {
  %802 = fn () -> Tensor[(2, 8), float64] {
    %801 = @func_3902() /* ty=(Tensor[(2, 8), float64],) */;
    %801.0
  };
  %802() /* ty=Tensor[(2, 8), float64] */
}

def @func_6650() -> (Tensor[(2, 8), float64], Tensor[(9, ?, 11), float32], Tensor[(2, 8), float64]) {
  %803 = @func_4642() /* ty=(Tensor[(9, 1, 11), float32],) */;
  %804 = %803.0;
  %805 = cast(%804, dtype="float64") /* ty=Tensor[(9, 1, 11), float64] */;
  %806 = asin(%805) /* ty=Tensor[(9, 1, 11), float64] */;
  %807 = cast(%804, dtype="float32") /* ty=Tensor[(9, 1, 11), float32] */;
  %808 = shape_of(%806, dtype="int32") /* ty=Tensor[(3), int32] */;
  %809 = cast(%806, dtype="float32") /* ty=Tensor[(9, 1, 11), float32] */;
  %810 = dyn.reshape(%807, %808, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %811 = @func_1124() /* ty=(Tensor[(2, 8), float64], Tensor[(9, 14, 11), float32]) */;
  %812 = @func_2890() /* ty=Tensor[(2, 8), float64] */;
  %813 = multiply(%809, %810) /* ty=Tensor[(9, ?, 11), float32] */;
  %814 = %811.0;
  (%812, %813, %814)
}

def @func_7316() -> (Tensor[(99), float32],) {
  @func_7314() /* ty=(Tensor[(99), float32],) */
}

def @func_8409() -> (Tensor[(99), float32],) {
  %817 = fn () -> (Tensor[(99), float32],) {
    %815 = @func_2844() /* ty=(Tensor[(99), float32],) */;
    %816 = %815.0;
    (%816,)
  };
  %817() /* ty=(Tensor[(99), float32],) */
}

def @func_5510(%var_5508: Tensor[(990), float32], %var_5509: Tensor[(14, 42), uint8]) -> (Tensor[(99), float32], Tensor[(990), bool], Tensor[(585, 3), bool], Tensor[(588), uint8], Tensor[(14, 42), uint8]) {
  %837 = fn (%var_5468: Tensor[(990), float32], %var_5499: Tensor[(14, 42), uint8]) -> (Tensor[(99), float32], Tensor[(990), bool], Tensor[(585, 3), bool], Tensor[(588), uint8], Tensor[(14, 42), uint8]) {
    %818 = @func_4308() /* ty=(Tensor[(99), float32],) */;
    %819 = cast(%var_5468, dtype="float32") /* ty=Tensor[(990), float32] */;
    %820 = reshape(%819, newshape=[990]) /* ty=Tensor[(990), float32] */;
    %821 = @func_4160(%820) /* ty=(Tensor[(2, 8), float64], Tensor[(11, 6, 15), bool], Tensor[(990), float32]) */;
    %822 = %821.2;
    %823 = cast(%var_5468, dtype="bool") /* ty=Tensor[(990), bool] */;
    %824 = shape_of(%822, dtype="int32") /* ty=Tensor[(1), int32] */;
    %825 = cast(%822, dtype="bool") /* ty=Tensor[(990), bool] */;
    %826 = dyn.reshape(%823, %824, newshape=[]) /* ty=Tensor[(?), bool] */;
    %827 = cast(%822, dtype="float32") /* ty=Tensor[(990), float32] */;
    %828 = reshape(%827, newshape=[990]) /* ty=Tensor[(990), float32] */;
    %829 = @func_2008(%828) /* ty=(Tensor[(9, 1, 11), float32], Tensor[(11, 6, 15), bool], Tensor[(990), float32], Tensor[(585, 3), bool]) */;
    %830 = cast(%var_5499, dtype="uint8") /* ty=Tensor[(14, 42), uint8] */;
    %831 = reshape(%830, newshape=[588]) /* ty=Tensor[(588), uint8] */;
    %832 = @func_3585(%831) /* ty=(Tensor[(2, 8), float64], Tensor[(99), float64], Tensor[(588), uint8], Tensor[(1386), float64]) */;
    %833 = %818.0;
    %834 = greater(%825, %826) /* ty=Tensor[(990), bool] */;
    %835 = %829.3;
    %836 = %832.2;
    (%833, %834, %835, %836, %var_5499)
  };
  %837(%var_5508, %var_5509) /* ty=(Tensor[(99), float32], Tensor[(990), bool], Tensor[(585, 3), bool], Tensor[(588), uint8], Tensor[(14, 42), uint8]) */
}

def @func_8002(%var_8000: uint8, %var_8001: Tensor[(40), uint8]) -> (Tensor[(9, ?, 11), float32], Tensor[(40), uint8], Tensor[(5, ?, 8), uint64]) {
  @func_7998(%var_8000, %var_8001) /* ty=(Tensor[(9, ?, 11), float32], Tensor[(40), uint8], Tensor[(5, ?, 8), uint64]) */
}

def @func_5101(%var_5098: Tensor[(936), float64], %var_5099: Tensor[(715), float32], %var_5100: Tensor[(14, 99), float32]) -> (Tensor[(585, 3), uint64], Tensor[(715), float32], Tensor[(936), float64], Tensor[(2, 8), float64], Tensor[(14, 99), float32], Tensor[(2, 8), float64], Tensor[(715), float32]) {
  @func_5096(%var_5098, %var_5099, %var_5100) /* ty=(Tensor[(585, 3), uint64], Tensor[(715), float32], Tensor[(936), float64], Tensor[(2, 8), float64], Tensor[(14, 99), float32], Tensor[(2, 8), float64], Tensor[(715), float32]) */
}

def @func_5674(%var_5672: Tensor[(4, 6, 1), float32]) -> (Tensor[(4, 6, 1), float32],) {
  @func_5671(%var_5672) /* ty=(Tensor[(4, 6, 1), float32],) */
}

def @func_8745() -> (Tensor[(2, 8), float64],) {
  @func_8743() /* ty=(Tensor[(2, 8), float64],) */
}

def @func_5761() -> (Tensor[(2, 8), float64],) {
  @func_5759() /* ty=(Tensor[(2, 8), float64],) */
}

def @func_6158() -> Tensor[(9, 1, 11), float32] {
  %839 = fn () -> Tensor[(9, 1, 11), float32] {
    %838 = @func_4814() /* ty=(Tensor[(9, 1, 11), float32],) */;
    %838.0
  };
  %839() /* ty=Tensor[(9, 1, 11), float32] */
}

def @func_8619(%var_8618: Tensor[(5, 198), float64]) -> (Tensor[(5, 198), int16], Tensor[(9, ?, 11), bool]) {
  %848 = fn (%var_8596: Tensor[(5, 198), float64]) -> (Tensor[(5, 198), int16], Tensor[(9, ?, 11), bool]) {
    %840 = @func_5168() /* ty=(Tensor[(9, 1, 11), float32], Tensor[(5, 198), float64], Tensor[(2, 8), float64], Tensor[(9, 1, 11), float32]) */;
    %841 = %840.1;
    %842 = cast(%var_8596, dtype="int16") /* ty=Tensor[(5, 198), int16] */;
    %843 = shape_of(%841, dtype="int32") /* ty=Tensor[(2), int32] */;
    %844 = cast(%841, dtype="int16") /* ty=Tensor[(5, 198), int16] */;
    %845 = dyn.reshape(%842, %843, newshape=[]) /* ty=Tensor[(?, ?), int16] */;
    %846 = left_shift(%844, %845) /* ty=Tensor[(5, 198), int16] */;
    %847 = @func_7353() /* ty=Tensor[(9, ?, 11), bool] */;
    (%846, %847)
  };
  %848(%var_8618) /* ty=(Tensor[(5, 198), int16], Tensor[(9, ?, 11), bool]) */
}

def @func_3277() -> (Tensor[(2, 8), float64], Tensor[(2, 8), float64]) {
  %849 = @func_2752() /* ty=(Tensor[(2, 8), float64], Tensor[(2, 8), float64], Tensor[(9, 1, 11), float32], Tensor[(2, 8), float64]) */;
  %850 = @func_1124() /* ty=(Tensor[(2, 8), float64], Tensor[(9, 14, 11), float32]) */;
  %851 = %849.0;
  %852 = %850.0;
  (%851, %852)
}

def @func_2696() -> (Tensor[(5, 198), float64],) {
  @func_2694() /* ty=(Tensor[(5, 198), float64],) */
}

def @func_254(%var_253: Tensor[(9, 1, 11), float32]) -> Tensor[(9, 1, 11), float32] {
  %854 = fn (%var_247: Tensor[(9, 1, 11), float32]) -> Tensor[(9, 1, 11), float32] {
    %853 = cast(%var_247, dtype="float32") /* ty=Tensor[(9, 1, 11), float32] */;
    sin(%853) /* ty=Tensor[(9, 1, 11), float32] */
  };
  %854(%var_253) /* ty=Tensor[(9, 1, 11), float32] */
}

def @func_2114() -> (Tensor[(99), float64],) {
  %855 = @func_820() /* ty=(Tensor[(2, 8), float64], Tensor[(9, 1, 11), float32], Tensor[(99), float32]) */;
  %856 = %855.2;
  %857 = cast(%856, dtype="float64") /* ty=Tensor[(99), float64] */;
  %858 = sinh(%857) /* ty=Tensor[(99), float64] */;
  (%858,)
}

def @func_3240() -> (Tensor[(2, 8), float64],) {
  %860 = fn () -> (Tensor[(2, 8), float64],) {
    %859 = @func_1852() /* ty=Tensor[(2, 8), float64] */;
    (%859,)
  };
  %860() /* ty=(Tensor[(2, 8), float64],) */
}

def @func_1936() -> (Tensor[(9, ?, 11), float32], Tensor[(9, ?, 11), bool]) {
  %861 = @func_1022() /* ty=(Tensor[(99), float32], Tensor[(9, 1, 11), float32], Tensor[(9, 14, 11), float32], Tensor[(1386), float32]) */;
  %862 = %861.1;
  %863 = cast(%862, dtype="float32") /* ty=Tensor[(9, 1, 11), float32] */;
  %864 = tan(%863) /* ty=Tensor[(9, 1, 11), float32] */;
  %865 = cast(%864, dtype="float64") /* ty=Tensor[(9, 1, 11), float64] */;
  %866 = shape_of(%862, dtype="int32") /* ty=Tensor[(3), int32] */;
  %867 = cast(%862, dtype="float64") /* ty=Tensor[(9, 1, 11), float64] */;
  %868 = dyn.reshape(%865, %866, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %869 = floor_divide(%867, %868) /* ty=Tensor[(9, ?, 11), float64] */;
  %870 = cast(%869, dtype="float64") /* ty=Tensor[(9, ?, 11), float64] */;
  %871 = shape_of(%862, dtype="int32") /* ty=Tensor[(3), int32] */;
  %872 = cast(%862, dtype="float64") /* ty=Tensor[(9, 1, 11), float64] */;
  %873 = dyn.reshape(%870, %871, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %874 = power(%872, %873) /* ty=Tensor[(9, ?, 11), float64] */;
  %875 = cast(%864, dtype="float32") /* ty=Tensor[(9, 1, 11), float32] */;
  %876 = shape_of(%874, dtype="int32") /* ty=Tensor[(3), int32] */;
  %877 = cast(%874, dtype="float32") /* ty=Tensor[(9, ?, 11), float32] */;
  %878 = dyn.reshape(%875, %876, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %879 = cast(%864, dtype="bool") /* ty=Tensor[(9, 1, 11), bool] */;
  %880 = shape_of(%862, dtype="int32") /* ty=Tensor[(3), int32] */;
  %881 = cast(%862, dtype="bool") /* ty=Tensor[(9, 1, 11), bool] */;
  %882 = dyn.reshape(%879, %880, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %883 = mod(%877, %878) /* ty=Tensor[(9, ?, 11), float32] */;
  %884 = greater_equal(%881, %882) /* ty=Tensor[(9, ?, 11), bool] */;
  (%883, %884)
}

def @func_2101() -> (Tensor[(99), float32], Tensor[(2, 8), float64]) {
  %885 = @func_820() /* ty=(Tensor[(2, 8), float64], Tensor[(9, 1, 11), float32], Tensor[(99), float32]) */;
  %886 = @func_1952() /* ty=(Tensor[(2, 8), float64],) */;
  %887 = %885.2;
  %888 = %886.0;
  (%887, %888)
}

def @func_3903() -> (Tensor[(2, 8), float64],) {
  %891 = fn () -> (Tensor[(2, 8), float64],) {
    %889 = @func_1952() /* ty=(Tensor[(2, 8), float64],) */;
    %890 = %889.0;
    (%890,)
  };
  %891() /* ty=(Tensor[(2, 8), float64],) */
}

def @func_1967() -> (Tensor[(2, 8), float64],) {
  @func_1965() /* ty=(Tensor[(2, 8), float64],) */
}

def @func_8743() -> (Tensor[(2, 8), float64],) {
  %892 = @func_3277() /* ty=(Tensor[(2, 8), float64], Tensor[(2, 8), float64]) */;
  %893 = %892.0;
  (%893,)
}

def @func_2987(%var_2957: Tensor[(1386), float32]) -> (Tensor[(99), float64], Tensor[(9, 14, 11), float32], Tensor[(1386), float32], Tensor[(1755), float32], Tensor[(1755), float64], Tensor[(99), uint8], Tensor[(588), uint8], Tensor[(588), uint8]) {
  %894 = @func_2114() /* ty=(Tensor[(99), float64],) */;
  %895 = cast(%var_2957, dtype="float32") /* ty=Tensor[(1386), float32] */;
  %896 = reshape(%895, newshape=[9, 14, 11]) /* ty=Tensor[(9, 14, 11), float32] */;
  %897 = @func_1472(%896) /* ty=(Tensor[(2, 8), float64], Tensor[(9, 14, 11), float32], Tensor[(9, 14, 11), float32]) */;
  %898 = cast(meta[relay.Constant][27] /* ty=Tensor[(1755), float64] */, dtype="float64") /* ty=Tensor[(1755), float64] */;
  %899 = reshape(%898, newshape=[1755]) /* ty=Tensor[(1755), float64] */;
  %900 = @func_2241(%899) /* ty=(Tensor[(99), float64], Tensor[(2, 8), float64], Tensor[(1755), float32]) */;
  %901 = @func_2114() /* ty=(Tensor[(99), float64],) */;
  %902 = %901.0;
  %903 = cast(%902, dtype="float64") /* ty=Tensor[(99), float64] */;
  %904 = sqrt(%903) /* ty=Tensor[(99), float64] */;
  %905 = cast(%902, dtype="uint8") /* ty=Tensor[(99), uint8] */;
  %906 = shape_of(%904, dtype="int32") /* ty=Tensor[(1), int32] */;
  %907 = cast(%904, dtype="uint8") /* ty=Tensor[(99), uint8] */;
  %908 = dyn.reshape(%905, %906, newshape=[]) /* ty=Tensor[(?), uint8] */;
  %909 = cast(meta[relay.Constant][28] /* ty=Tensor[(588), uint8] */, dtype="uint8") /* ty=Tensor[(588), uint8] */;
  %910 = reshape(%909, newshape=[588]) /* ty=Tensor[(588), uint8] */;
  %911 = @func_2639(%910) /* ty=(Tensor[(1386), float32], Tensor[(2, 8), float64], Tensor[(588), uint8], Tensor[(588), uint8], Tensor[(99), float64]) */;
  %912 = %894.0;
  %913 = %897.2;
  %914 = %900.2;
  %915 = multiply(%907, %908) /* ty=Tensor[(99), uint8] */;
  %916 = %911.2;
  (%912, %913, %var_2957, %914, meta[relay.Constant][27] /* ty=Tensor[(1755), float64] */, %915, %916, meta[relay.Constant][28] /* ty=Tensor[(588), uint8] */)
}

def @func_5814() -> (Tensor[(2, 8), float64], Tensor[(2, 8), float64], Tensor[(2, 8), float64], Tensor[(9, ?, 11), float32], Tensor[(11, 6, 15), float32], Tensor[(5, 7, 9), float32], Tensor[(315), float32]) {
  %932 = fn () -> (Tensor[(2, 8), float64], Tensor[(2, 8), float64], Tensor[(2, 8), float64], Tensor[(9, ?, 11), float32], Tensor[(11, 6, 15), float32], Tensor[(5, 7, 9), float32], Tensor[(315), float32]) {
    %917 = @func_1952() /* ty=(Tensor[(2, 8), float64],) */;
    %918 = @func_1124() /* ty=(Tensor[(2, 8), float64], Tensor[(9, 14, 11), float32]) */;
    %919 = @func_1711() /* ty=(Tensor[(2, 8), float64], Tensor[(11, 6, 15), bool], Tensor[(5, 198), float64]) */;
    %920 = %919.1;
    %921 = cast(%920, dtype="float64") /* ty=Tensor[(11, 6, 15), float64] */;
    %922 = rsqrt(%921) /* ty=Tensor[(11, 6, 15), float64] */;
    %923 = cast(%922, dtype="float32") /* ty=Tensor[(11, 6, 15), float32] */;
    %924 = cast(meta[relay.Constant][29] /* ty=Tensor[(315), float32] */, dtype="float32") /* ty=Tensor[(315), float32] */;
    %925 = reshape(%924, newshape=[5, 7, 9]) /* ty=Tensor[(5, 7, 9), float32] */;
    %926 = %917.0;
    %927 = @func_4954() /* ty=Tensor[(2, 8), float64] */;
    %928 = %918.0;
    %929 = @func_5303() /* ty=Tensor[(9, ?, 11), float32] */;
    %930 = cosh(%923) /* ty=Tensor[(11, 6, 15), float32] */;
    %931 = @func_4145(%925) /* ty=Tensor[(5, 7, 9), float32] */;
    (%926, %927, %928, %929, %930, %931, meta[relay.Constant][29] /* ty=Tensor[(315), float32] */)
  };
  %932() /* ty=(Tensor[(2, 8), float64], Tensor[(2, 8), float64], Tensor[(2, 8), float64], Tensor[(9, ?, 11), float32], Tensor[(11, 6, 15), float32], Tensor[(5, 7, 9), float32], Tensor[(315), float32]) */
}

def @func_4109() -> Tensor[(9, 1, 11), float32] {
  %934 = fn () -> Tensor[(9, 1, 11), float32] {
    %933 = @func_2752() /* ty=(Tensor[(2, 8), float64], Tensor[(2, 8), float64], Tensor[(9, 1, 11), float32], Tensor[(2, 8), float64]) */;
    %933.2
  };
  %934() /* ty=Tensor[(9, 1, 11), float32] */
}

def @func_5746() -> Tensor[(2, 8), float64] {
  %936 = fn () -> Tensor[(2, 8), float64] {
    %935 = @func_3630() /* ty=(Tensor[(2, 8), float64], Tensor[(2, 8), float64]) */;
    %935.1
  };
  %936() /* ty=Tensor[(2, 8), float64] */
}

def @func_6034() -> Tensor[(99), float32] {
  @func_5836() /* ty=Tensor[(99), float32] */
}

def @func_7937(%var_7936: Tensor[(1386), float32]) -> (Tensor[(2, 8), float64], Tensor[(1386), float32], Tensor[(1386), float32]) {
  %942 = fn (%var_7921: Tensor[(1386), float32]) -> (Tensor[(2, 8), float64], Tensor[(1386), float32], Tensor[(1386), float32]) {
    %937 = cast(%var_7921, dtype="float32") /* ty=Tensor[(1386), float32] */;
    %938 = reshape(%937, newshape=[1386]) /* ty=Tensor[(1386), float32] */;
    %939 = @func_4768(%938) /* ty=(Tensor[(99), float32], Tensor[(588), uint8], Tensor[(588), float64], Tensor[(2, 8), float64], Tensor[(1386), float32]) */;
    %940 = @func_3423() /* ty=Tensor[(2, 8), float64] */;
    %941 = %939.4;
    (%940, %941, %var_7921)
  };
  %942(%var_7936) /* ty=(Tensor[(2, 8), float64], Tensor[(1386), float32], Tensor[(1386), float32]) */
}

/* For debugging purposes the metadata section has been omitted.
 * If you would like to see the full metadata section you can set the 
 * option to `True` when invoking `astext`. 
 *//home/yujunzhe/Hirgen_generated/tvm0.8_test/HirGen341/build/output.py:2783: DeprecationWarning: legacy graph executor behavior of producing json / lib / params will be removed in the next release. Please see documents of tvm.contrib.graph_executor.GraphModule for the  new recommended usage.
  graph, lib, params = relay.build(mod, target='llvm')
/home/yujunzhe/tvm/python/tvm/contrib/graph_runtime.py:25: UserWarning: This function has been moved to tvm.contrib.graph_executor and will be removed in the next TVM release
  warnings.warn(

===================================
Traceback (most recent call last):
  File "/home/yujunzhe/Hirgen_generated/tvm0.8_test/HirGen341/build/output.py", line 2788, in <module>
    graph, lib, params = relay.build(mod, target='cuda')
  File "/home/yujunzhe/tvm/python/tvm/relay/build_module.py", line 369, in build
    executor_config, runtime_mod, params = bld_mod.build(
  File "/home/yujunzhe/tvm/python/tvm/relay/build_module.py", line 177, in build
    self._build(mod, target, target_host, executor, mod_name)
  File "/home/yujunzhe/tvm/python/tvm/_ffi/_ctypes/packed_func.py", line 237, in __call__
    raise get_last_ffi_error()
tvm._ffi.base.TVMError: Traceback (most recent call last):
  7: TVMFuncCall
  6: std::_Function_handler<void (tvm::runtime::TVMArgs, tvm::runtime::TVMRetValue*), tvm::relay::backend::RelayBuildModule::GetFunction(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, tvm::runtime::ObjectPtr<tvm::runtime::Object> const&)::{lambda(tvm::runtime::TVMArgs, tvm::runtime::TVMRetValue*)#3}>::_M_invoke(std::_Any_data const&, tvm::runtime::TVMArgs&&, tvm::runtime::TVMRetValue*&&)
  5: tvm::relay::backend::RelayBuildModule::BuildRelay(tvm::IRModule, std::unordered_map<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, tvm::runtime::NDArray, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, tvm::runtime::NDArray> > > const&, tvm::runtime::String)
  4: tvm::build(tvm::runtime::Map<tvm::Target, tvm::IRModule, void, void> const&, tvm::Target const&)
  3: tvm::codegen::Build(tvm::IRModule, tvm::Target)
  2: tvm::runtime::TypedPackedFunc<tvm::runtime::Module (tvm::IRModule, tvm::Target)>::AssignTypedLambda<tvm::runtime::Module (*)(tvm::IRModule, tvm::Target)>(tvm::runtime::Module (*)(tvm::IRModule, tvm::Target), std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >)::{lambda(tvm::runtime::TVMArgs const&, tvm::runtime::TVMRetValue*)#1}::operator()(tvm::runtime::TVMArgs const&, tvm::runtime::TVMRetValue*) const
  1: tvm::codegen::BuildCUDA(tvm::IRModule, tvm::Target)
  0: std::_Function_handler<void (tvm::runtime::TVMArgs, tvm::runtime::TVMRetValue*), TVMFuncCreateFromCFunc::{lambda(tvm::runtime::TVMArgs, tvm::runtime::TVMRetValue*)#2}>::_M_invoke(std::_Any_data const&, tvm::runtime::TVMArgs&&, tvm::runtime::TVMRetValue*&&) [clone .cold]
  File "/home/yujunzhe/tvm/python/tvm/_ffi/_ctypes/packed_func.py", line 81, in cfun
    rv = local_pyfunc(*pyargs)
  File "/home/yujunzhe/tvm/python/tvm/autotvm/measure/measure_methods.py", line 789, in tvm_callback_cuda_compile
    ptx = nvcc.compile_cuda(code, target=target, arch=AutotvmGlobalScope.current.cuda_target_arch)
  File "/home/yujunzhe/tvm/python/tvm/contrib/nvcc.py", line 108, in compile_cuda
    raise RuntimeError(msg)
RuntimeError: 
#ifdef _WIN32
  using uint = unsigned int;
  using uchar = unsigned char;
  using ushort = unsigned short;
  using int64_t = long long;
  using uint64_t = unsigned long long;
#else
  #define uint unsigned int
  #define uchar unsigned char
  #define ushort unsigned short
  #define int64_t long long
  #define uint64_t unsigned long long
#endif
extern "C" __global__ void __launch_bounds__(728) tvmgen_default_fused_reshape_power_kernel0(float* __restrict__ T_power, float* __restrict__ placeholder, float* __restrict__ placeholder1) {
  T_power[(((int)threadIdx.x))] = powf(placeholder[(((int)threadIdx.x))], placeholder1[(((int)threadIdx.x))]);
}


Compilation error:
In file included from /usr/local/cuda/bin/../targets/x86_64-linux/include/cuda_runtime.h:82,
                 from <command-line>:
/usr/local/cuda/bin/../targets/x86_64-linux/include/crt/host_config.h:143:2: error: #error -- unsupported GNU version! gcc versions later than 12 are not supported! The nvcc flag '-allow-unsupported-compiler' can be used to override this version check; however, using an unsupported host compiler may cause compilation failure or incorrect run time execution. Use at your own risk.
  143 | #error -- unsupported GNU version! gcc versions later than 12 are not supported! The nvcc flag '-allow-unsupported-compiler' can be used to override this version check; however, using an unsupported host compiler may cause compilation failure or incorrect run time execution. Use at your own risk.
      |  ^~~~~


import tvm
from tvm import relay
from tvm.ir.transform import Sequential
from tvm.contrib import graph_runtime
import numpy as np
mod = tvm.IRModule()
mutated_mod = tvm.IRModule()
var_130 = relay.var("var_130", dtype = "float64", shape = (5, 7, 16))#candidate|130|(5, 7, 16)|var|float64
var_131 = relay.var("var_131", dtype = "float64", shape = (5, 7, 16))#candidate|131|(5, 7, 16)|var|float64
bop_132 = relay.divide(var_130.astype('float64'), relay.reshape(var_131.astype('float64'), relay.shape_of(var_130))) # shape=(5, 7, 16)
output = bop_132
output2 = bop_132
func_141 = relay.Function([var_130,var_131,], output)
mod['func_141'] = func_141
mod = relay.transform.InferType()(mod)
mutated_mod['func_141'] = func_141
mutated_mod = relay.transform.InferType()(mutated_mod)
func_141_call = mutated_mod.get_global_var('func_141')
var_143 = relay.var("var_143", dtype = "float64", shape = (5, 7, 16))#candidate|143|(5, 7, 16)|var|float64
var_144 = relay.var("var_144", dtype = "float64", shape = (5, 7, 16))#candidate|144|(5, 7, 16)|var|float64
call_142 = func_141_call(var_143,var_144,)
output = call_142
func_145 = relay.Function([var_143,var_144,], output)
mutated_mod['func_145'] = func_145
mutated_mod = relay.transform.InferType()(mutated_mod)
var_254 = relay.var("var_254", dtype = "float32", shape = (9, 14, 3))#candidate|254|(9, 14, 3)|var|float32
uop_255 = relay.tan(var_254.astype('float32')) # shape=(9, 14, 3)
func_141_call = mod.get_global_var('func_141')
func_145_call = mutated_mod.get_global_var('func_145')
const_265 = relay.const([[-2.755758,5.828314,4.540755,-8.084917,-3.110730,7.108435,-7.849216,3.158991,-4.671947,-9.289744,-5.428600,7.123323,-0.033250,-1.914868,-8.161854,-8.852573,-2.140613,0.187657,2.545451,7.500743,-7.180306,-4.334822,2.671378,-1.279967,3.620481,-8.455441,3.343671,-4.935975,-0.028199,-3.837782,-9.764368,-1.743327,8.904416,-8.934169,8.292547,-7.923201,-1.960352,8.633464,7.972491,-5.604278,-4.546152,-4.160286,-3.947482,4.986702,7.711774,1.385606,-5.212226,-8.001335,-3.231010,-6.771666,2.018004,0.104842,2.156506,8.885779,-9.033206,-1.654690,-0.356824,6.019339,3.205554,1.621840,-4.390021,-3.137979,-0.357141,-8.379085,-6.351517,1.099732,-4.010523,9.971713,2.674857,-5.442089,-6.287834,-1.977367,0.768068,1.668413,-7.318192,-7.984888,-5.810859,1.728314,5.883005,5.468642,-2.244325,8.687229,9.314126,6.178691,0.808456,2.455392,-2.429126,-5.100362,8.587532,-9.514036,0.341830,-4.744168,5.020017,-4.832218,-7.033157,-5.760071,-3.516576,6.503533,2.609957,-3.339537,-7.793438,-9.472420,5.772146,-3.190877,7.691158,-6.080621,9.373721,-8.224576,-5.347741,-1.952985,-0.169793,-3.232221,-0.573511,-5.154069,-0.940609,4.627305,-3.289817,1.784220,-2.952499,-4.341533,-5.733554,-6.823373,-3.037577,-8.708457,-0.151875,7.507697,-4.973673,2.262967,3.967842,-1.827222,0.551846,-3.845629,6.275870,1.439659,7.163456,4.633302,9.347274,-6.502177,-1.124973,-2.660756],[9.482882,8.462787,5.748681,-5.971080,2.285960,-3.496056,-3.755453,-6.099327,-8.984041,-6.041856,-6.536545,3.114802,0.878572,7.128764,7.022907,-8.954508,4.173686,-8.792967,0.597336,7.372008,2.046296,0.338742,-9.689654,0.420629,9.400090,-4.425014,-4.231910,3.612503,3.540135,6.594630,3.040485,0.235629,-0.576487,1.551938,4.678715,-1.086729,1.784817,-4.839136,5.353819,-3.680511,0.310846,-9.272347,6.597051,-7.992247,-9.834768,3.801531,9.600621,-8.587521,-0.856055,4.769942,-5.172937,-4.711131,3.214612,7.250777,-3.247540,-8.132037,7.506952,9.158776,-2.429169,3.639615,-1.812312,-1.564414,-9.649699,1.430220,8.750517,-0.903363,-6.162928,9.143240,3.957496,-6.894377,-8.233905,-0.129164,-1.508557,-5.930378,1.772902,9.561781,-8.881073,6.414048,0.854056,3.390020,-9.045408,-6.729393,-9.596037,-3.297409,0.295613,-8.365487,2.286291,8.876118,-5.327380,0.156788,1.894541,3.889309,-0.736209,-1.115565,5.854571,-7.291341,3.945624,-9.617741,-9.525566,-4.646746,-9.307953,-8.740931,1.346659,5.796779,5.994208,4.579071,5.477180,6.713703,5.882957,9.556605,1.080806,-9.197175,7.940475,8.576230,-7.238871,9.626285,-8.820851,-8.704797,3.229138,2.230003,-3.923250,2.120382,-1.211056,-9.240399,7.654202,-3.603548,8.495397,6.568181,-4.612479,0.585700,-5.657303,7.129986,-4.714144,-6.723233,8.171863,-6.460142,-1.929735,5.055746,-8.959566,7.820751],[-5.923593,9.551909,-0.600970,-2.701083,4.950150,1.815091,-9.157274,-5.489232,7.730287,-2.334060,-9.009509,-1.263169,-3.147977,1.756765,3.147692,-0.465210,6.583152,-5.503352,7.397001,-5.728703,-4.206209,-6.042392,-0.345544,2.373698,-1.426838,-5.150771,-7.947346,9.196863,-4.652269,-1.051527,8.318591,1.699751,-5.160061,8.322628,-9.051736,-4.885212,1.625826,8.012836,8.958582,6.685911,-1.161026,-9.497022,5.942677,-4.428709,3.697850,3.669643,6.347709,2.885775,-9.122184,6.575918,-8.976563,9.952853,2.331889,4.643019,9.683154,-5.642234,-0.138352,5.555689,-4.508135,3.433258,-5.609775,7.389495,-9.894826,9.488608,6.158822,4.123981,-9.372306,5.405839,-4.914478,-9.041764,-8.859262,9.216960,6.329471,-6.731940,-5.455661,4.077182,-0.067562,7.949507,2.571095,-8.661764,7.323102,-1.011587,-2.536480,9.897536,-2.470746,0.274321,-1.391023,3.404170,6.679804,-9.836732,-9.382430,-4.868333,-5.895669,4.192732,-3.540908,-7.947123,4.619651,8.548659,-9.769033,-5.487570,-2.758633,3.003437,2.639737,-4.306898,-6.637785,-3.190299,5.991596,-3.880438,-7.281007,3.320223,7.531707,5.533000,7.917892,-7.640443,6.553086,-7.178113,-6.363408,5.723383,3.370131,-9.443620,-2.812097,-2.326531,4.916782,8.511611,-8.160584,-6.209285,-3.476865,-4.560780,-8.336125,7.809833,-2.903412,4.303365,-5.630384,-4.326601,2.354121,0.349650,5.479018,0.909620,-0.718838,4.628968],[9.746420,-9.989369,0.317120,0.363759,-8.845550,3.888756,9.254339,8.034208,6.288424,4.721553,0.756420,-6.969994,-9.437803,0.371470,-8.993619,4.098694,5.566966,6.476604,-8.118457,-6.301053,-4.436974,5.498267,1.673242,3.117171,-4.467296,3.195961,2.895012,0.785305,2.634869,1.102853,9.442955,5.327515,-8.821972,3.020689,-0.599282,1.500555,4.922455,-6.394945,-6.827369,-8.435484,-2.685770,-0.099559,2.007803,6.880892,-7.986954,7.075698,6.249988,-5.077114,1.293722,-8.873845,-0.022906,-2.929855,8.151405,-5.512949,-9.081604,-2.436929,-0.772782,3.413186,-6.056111,-0.725986,1.148498,-8.964483,-3.938071,-1.876628,-2.173758,1.939939,0.064253,4.627340,-2.759073,-1.111418,-7.636706,9.402187,5.747641,-3.778803,0.875626,-7.714320,-9.375264,8.760945,-7.790795,6.514068,0.470522,0.790707,-4.822615,6.033655,-4.117217,-2.868609,-0.174105,3.767795,-8.323141,-8.943537,-8.731949,-5.680749,8.459526,3.941199,6.111617,9.294918,-7.435800,9.548578,0.854696,0.219461,-1.878744,-8.966822,-9.163768,-8.198331,9.158007,-1.854624,-5.639175,6.604410,0.762069,4.454522,5.634961,8.400804,7.425921,-5.287010,1.055627,-6.141395,9.667240,-7.431749,-7.048245,-4.050733,3.079627,1.184065,8.480762,-0.493346,8.630366,-4.581029,-6.577459,-4.313321,-4.720946,-3.373180,1.899041,-2.110161,1.221760,-5.600813,1.298821,0.304985,5.792673,-3.230361,3.034032,8.559175]], dtype = "float64")#candidate|265|(4, 140)|const|float64
call_264 = func_141_call(relay.reshape(const_265.astype('float64'), [5, 7, 16]), relay.reshape(const_265.astype('float64'), [5, 7, 16]), )
call_266 = func_141_call(relay.reshape(const_265.astype('float64'), [5, 7, 16]), relay.reshape(const_265.astype('float64'), [5, 7, 16]), )
bop_267 = relay.bitwise_xor(uop_255.astype('int8'), relay.reshape(var_254.astype('int8'), relay.shape_of(uop_255))) # shape=(9, 14, 3)
output = relay.Tuple([call_264,const_265,bop_267,])
output2 = relay.Tuple([call_266,const_265,bop_267,])
func_272 = relay.Function([var_254,], output)
mod['func_272'] = func_272
mod = relay.transform.InferType()(mod)
mutated_mod['func_272'] = func_272
mutated_mod = relay.transform.InferType()(mutated_mod)
var_273 = relay.var("var_273", dtype = "float32", shape = (9, 14, 3))#candidate|273|(9, 14, 3)|var|float32
func_272_call = mutated_mod.get_global_var('func_272')
call_274 = func_272_call(var_273)
output = call_274
func_275 = relay.Function([var_273], output)
mutated_mod['func_275'] = func_275
mutated_mod = relay.transform.InferType()(mutated_mod)
var_493 = relay.var("var_493", dtype = "float64", shape = (6, 8, 8))#candidate|493|(6, 8, 8)|var|float64
var_494 = relay.var("var_494", dtype = "float64", shape = (6, 8, 8))#candidate|494|(6, 8, 8)|var|float64
bop_495 = relay.mod(var_493.astype('float64'), relay.reshape(var_494.astype('float64'), relay.shape_of(var_493))) # shape=(6, 8, 8)
output = relay.Tuple([bop_495,])
output2 = relay.Tuple([bop_495,])
func_502 = relay.Function([var_493,var_494,], output)
mod['func_502'] = func_502
mod = relay.transform.InferType()(mod)
mutated_mod['func_502'] = func_502
mutated_mod = relay.transform.InferType()(mutated_mod)
func_502_call = mutated_mod.get_global_var('func_502')
var_504 = relay.var("var_504", dtype = "float64", shape = (6, 8, 8))#candidate|504|(6, 8, 8)|var|float64
var_505 = relay.var("var_505", dtype = "float64", shape = (6, 8, 8))#candidate|505|(6, 8, 8)|var|float64
call_503 = func_502_call(var_504,var_505,)
output = call_503
func_506 = relay.Function([var_504,var_505,], output)
mutated_mod['func_506'] = func_506
mutated_mod = relay.transform.InferType()(mutated_mod)
var_711 = relay.var("var_711", dtype = "float32", shape = (6, 16, 9))#candidate|711|(6, 16, 9)|var|float32
uop_712 = relay.log10(var_711.astype('float32')) # shape=(6, 16, 9)
func_272_call = mod.get_global_var('func_272')
func_275_call = mutated_mod.get_global_var('func_275')
const_727 = relay.const([9.427862,-9.284789,-6.599217,0.763789,-5.907777,-6.593039,0.655118,1.437735,-9.234978,-3.350437,9.072003,4.329877,-8.512696,7.731043,-7.641537,-6.334631,-9.992160,7.265032,-5.222199,-1.618425,6.538468,-0.740951,-0.341979,-5.809307,6.777218,-1.848389,-1.210626,-4.018444,8.462106,-8.057054,-5.092841,7.497317,-6.765121,-7.003682,7.697020,2.986833,1.126439,5.376431,-6.412365,4.699953,3.546805,-2.683155,6.880218,-3.005761,-8.001245,-4.286561,-9.547588,-4.068763,5.704833,4.088524,5.125584,1.311922,-3.496645,-1.518398,5.668368,-4.862402,3.242035,-6.748777,6.161772,7.338446,-0.854257,9.596423,5.814916,9.747471,-0.494745,6.271407,9.806261,-1.350177,-3.692203,-8.554233,-8.862938,-4.523056,4.461312,-3.384719,5.008764,6.529273,-5.847239,-1.699374,-7.162414,-2.589532,5.597004,-6.581611,-6.389620,-8.304210,2.409413,-0.456713,-5.794801,-5.911299,-5.237042,-6.170183,-7.771699,0.049984,-3.555419,3.476044,4.183293,4.832669,4.951339,8.602931,2.273156,-9.278950,1.628737,-8.055482,5.016872,9.863942,-2.755182,-1.749459,8.545987,5.253632,3.931246,-7.957572,-3.765730,1.577391,1.893098,7.349977,5.445708,-0.396437,0.051185,-5.841435,0.640278,-9.346790,7.782362,-0.444581,-8.815125,1.467941,-7.621991,-3.348435,2.265746,4.971235,-7.998380,0.115312,-7.339548,-5.194926,3.862388,9.300254,3.159938,-0.456667,-9.001159,3.045323,-5.046819,-0.243310,9.563892,2.803037,6.140183,2.600951,9.431346,4.199960,-8.565760,8.824387,-6.860690,-7.098958,-7.105861,-4.212935,-2.998909,5.079242,-2.150254,9.605778,-4.056565,2.164062,8.178250,-5.317905,9.436414,9.312459,6.066773,8.867300,2.975840,4.651685,-9.750262,-4.915584,-7.487222,7.840551,6.902348,-3.929139,8.505179,4.523413,-4.884732,-1.268643,6.592280,-3.104389,-9.343237,-7.835547,3.368507,-3.752307,-9.258601,-9.916716,-1.870457,8.235621,3.570668,-4.157011,1.768175,3.462716,9.373399,-0.328282,8.262435,8.231530,-0.647030,6.931559,-2.015684,-1.521277,-0.506018,7.169404,-1.112454,0.541690,-6.374105,9.990414,0.993691,4.894862,-6.119625,-6.337851,-8.894565,1.006715,1.867760,8.028526,-0.641524,-7.931183,-3.238889,-0.670249,9.499867,-4.802634,0.087082,3.699835,6.554325,9.539583,-4.396942,0.121362,7.535818,-3.890921,-8.833625,-6.918544,6.622885,1.093485,-3.736312,-5.129051,2.615307,1.659918,-7.304121,-2.567406,-0.172076,6.497461,7.652657,9.184717,-3.720865,8.956949,3.615773,2.346909,3.357550,7.053363,-5.985459,4.674397,-5.646895,-1.984204,5.055953,-4.930737,-1.614399,7.233360,9.933647,4.115340,-7.754589,-0.387874,-6.141436,-5.430544,-3.334721,-4.634950,1.976434,2.151301,-6.144521,7.211449,-3.152913,7.867496,1.688202,-3.466651,-4.063026,-1.690021,-2.157020,-4.546392,0.996124,-7.874174,-7.036788,-3.683679,-4.679090,-5.284172,-8.126099,5.433737,7.442457,6.922250,6.541022,8.462169,4.891504,-9.802551,-3.991088,9.675766,1.099017,-4.167885,-9.287187,0.787773,-1.197240,1.964878,0.784308,6.416137,-1.719873,-7.817908,-3.513903,6.072505,0.263366,0.359487,-3.103495,5.349249,9.189009,-3.887948,3.850962,-6.640521,3.486655,-3.161074,-0.559137,3.315547,-5.499311,-7.744119,-4.243874,8.083632,4.390573,2.793752,9.204969,6.832565,-8.871182,-6.159329,-3.925828,0.520937,-7.143340,-1.006692,9.594523,5.129561,1.673329,-6.232335,8.099284,-4.435933,2.657638,9.053041,-4.348223,6.025295,-4.944221,-8.172316,-6.395651,-7.790655,1.948487,-0.612483,-8.677291,0.168958,4.245796,2.072378,1.194021,-2.115475,-4.025962,4.086946,-2.428315,4.508042,-4.072217,3.823549,-3.307684,5.924793,8.895667,-6.816886,-6.837995,0.702563,-1.015468,-3.313917,-3.870146,-4.410524,-1.032226,-4.815960,-9.306882,3.002250,2.655589,7.859907,-4.292676,-2.636636,-3.687840,-2.098110,-8.819658,5.128358], dtype = "float32")#candidate|727|(378,)|const|float32
call_726 = relay.TupleGetItem(func_272_call(relay.reshape(const_727.astype('float32'), [9, 14, 3])), 0)
call_728 = relay.TupleGetItem(func_275_call(relay.reshape(const_727.astype('float32'), [9, 14, 3])), 0)
output = relay.Tuple([uop_712,call_726,const_727,])
output2 = relay.Tuple([uop_712,call_728,const_727,])
func_734 = relay.Function([var_711,], output)
mod['func_734'] = func_734
mod = relay.transform.InferType()(mod)
mutated_mod['func_734'] = func_734
mutated_mod = relay.transform.InferType()(mutated_mod)
var_735 = relay.var("var_735", dtype = "float32", shape = (6, 16, 9))#candidate|735|(6, 16, 9)|var|float32
func_734_call = mutated_mod.get_global_var('func_734')
call_736 = func_734_call(var_735)
output = call_736
func_737 = relay.Function([var_735], output)
mutated_mod['func_737'] = func_737
mutated_mod = relay.transform.InferType()(mutated_mod)
const_742 = relay.const([[[True,True,False,False,False,True,True,True],[True,True,False,True,False,True,True,False],[True,True,True,True,False,True,True,True],[False,False,False,False,True,True,False,True]],[[False,False,True,True,True,True,False,False],[False,False,True,False,False,False,True,True],[False,False,False,False,True,True,True,False],[False,True,False,True,False,False,False,False]],[[False,False,True,True,True,True,True,True],[False,False,False,False,True,True,True,True],[True,False,True,True,True,False,True,True],[True,True,True,True,True,True,True,True]],[[True,True,False,False,False,True,False,False],[True,False,False,False,True,False,True,False],[False,False,True,True,False,False,True,True],[True,False,False,False,True,False,True,True]],[[True,True,True,True,False,True,False,False],[True,False,False,False,False,False,True,False],[False,False,False,True,True,True,False,False],[True,True,True,False,True,False,True,False]],[[False,True,True,False,False,True,False,False],[False,True,False,False,True,True,True,True],[False,True,False,True,False,True,True,True],[False,False,True,True,True,True,True,True]],[[False,False,True,False,False,False,False,False],[True,True,False,False,False,True,True,False],[False,False,True,False,True,True,True,True],[True,True,False,False,False,True,True,False]],[[True,True,False,True,True,True,True,False],[False,False,False,False,True,True,True,False],[True,False,False,False,True,False,True,True],[True,True,True,True,False,True,True,False]],[[False,True,True,True,False,True,True,False],[True,True,True,False,False,False,False,False],[False,True,False,False,True,False,True,False],[True,False,True,False,True,False,False,True]],[[True,True,False,False,False,True,False,True],[False,True,False,True,True,False,True,False],[True,True,False,False,True,True,False,True],[True,True,True,True,True,True,False,True]],[[False,True,True,True,False,True,False,True],[True,False,False,False,True,True,False,False],[False,False,True,False,True,True,True,True],[True,False,False,False,True,False,True,True]],[[True,False,False,False,False,True,True,True],[True,True,True,False,False,False,True,False],[False,False,False,False,True,True,True,False],[True,True,True,False,True,False,False,True]],[[True,False,True,True,True,False,False,True],[True,True,True,True,True,False,True,False],[False,False,False,False,True,True,False,True],[False,True,True,True,False,True,False,True]],[[False,True,False,True,True,False,False,False],[True,False,True,True,False,True,True,True],[True,True,True,False,False,True,True,False],[True,True,True,True,False,False,False,False]]], dtype = "bool")#candidate|742|(14, 4, 8)|const|bool
var_743 = relay.var("var_743", dtype = "bool", shape = (14, 4, 8))#candidate|743|(14, 4, 8)|var|bool
bop_744 = relay.logical_and(const_742.astype('bool'), relay.reshape(var_743.astype('bool'), relay.shape_of(const_742))) # shape=(14, 4, 8)
uop_751 = relay.log10(const_742.astype('float64')) # shape=(14, 4, 8)
output = relay.Tuple([bop_744,uop_751,])
output2 = relay.Tuple([bop_744,uop_751,])
func_761 = relay.Function([var_743,], output)
mod['func_761'] = func_761
mod = relay.transform.InferType()(mod)
var_762 = relay.var("var_762", dtype = "bool", shape = (14, 4, 8))#candidate|762|(14, 4, 8)|var|bool
output = func_761(var_762)
func_763 = relay.Function([var_762], output)
mutated_mod['func_763'] = func_763
mutated_mod = relay.transform.InferType()(mutated_mod)
var_854 = relay.var("var_854", dtype = "float32", shape = (14, 14, 8))#candidate|854|(14, 14, 8)|var|float32
const_855 = relay.const([[[6.056838,-7.682514,-1.228945,1.918575,-2.979896,-7.545506,-9.948475,0.700549],[1.726894,0.838902,8.647366,8.006437,0.403836,-8.047933,3.459829,4.679119],[-9.289814,-5.573640,4.184709,4.400054,7.482577,-8.962524,-7.761262,5.040636],[1.724118,4.454920,-2.346181,8.901791,-3.499492,-6.742855,5.057876,3.662064],[9.747517,5.967428,6.275255,-5.236904,-5.857947,2.402850,4.230106,5.386799],[8.530258,2.722509,4.821393,4.488737,-7.417366,1.863678,8.381905,3.664336],[-9.551045,7.946970,7.198176,-2.334392,-0.990190,5.430570,3.771398,-4.506779],[0.581833,-4.114244,-3.942685,2.699658,2.654843,8.532140,9.544907,7.684829],[7.365216,0.882220,2.164638,-6.011564,0.463110,7.151207,-4.508805,0.677603],[3.276277,-5.771502,0.142681,1.704991,4.744280,7.156978,4.248866,-8.276335],[7.461290,-9.461172,-0.700160,-9.903981,-2.862228,-3.976137,-0.257557,-8.335849],[6.006831,7.646532,-5.789430,-4.063433,9.657644,-4.339241,-7.183173,0.201737],[1.806729,-4.999815,3.137469,9.997416,-3.497830,-5.476738,-6.700972,3.039409],[-7.329826,-9.358679,5.934083,-3.275367,4.072547,8.705476,7.194605,7.518404]],[[-5.910535,-8.434703,0.635520,4.053107,7.118781,-5.330428,3.600342,-1.457298],[-4.549154,-2.188967,5.557038,1.419884,-5.816803,-8.660752,1.769004,-9.152145],[-3.219435,2.751306,-7.163203,8.518010,2.965256,1.893652,1.282418,-4.888842],[0.475881,1.265390,0.031787,4.906255,-9.454634,9.873233,4.793140,9.698950],[5.462997,5.815208,-6.664837,9.883048,-5.185378,-4.802883,-7.953283,-4.363410],[4.938252,-5.194825,-7.738391,-8.270543,-0.785260,-0.079023,4.814714,3.033316],[0.268855,0.172825,8.215273,4.749380,3.187179,-0.212288,-9.781875,4.183619],[-8.227014,-6.753676,9.646346,6.451570,-7.106061,-1.407682,-0.284423,-2.343418],[-6.653259,4.877805,4.577361,-4.391971,-5.612845,-7.134555,2.013774,-1.809794],[-8.113659,-5.316254,-3.946403,0.732312,2.279621,-7.409987,4.706232,3.543382],[-7.652233,3.948774,2.507179,2.642468,-9.785427,-7.205646,7.317298,-3.498368],[4.111902,-2.375597,-6.491465,9.181749,6.531063,2.812384,-7.517963,-8.408000],[6.077035,-1.292772,6.677820,-9.749402,-8.647822,1.897275,-4.666916,7.821876],[-5.841325,4.191769,0.645593,7.042067,-4.787237,6.273442,8.125626,-6.458677]],[[2.191813,-0.910631,-1.432959,1.249125,4.870127,-1.184250,-7.028987,-7.313225],[3.454997,5.101434,-0.599160,8.681082,-0.460377,1.866563,5.577399,-8.950423],[8.695757,6.434084,-9.507370,-3.608127,-8.196579,0.538282,-1.863646,3.625175],[9.487512,-8.215967,3.032399,-8.939562,-2.715849,-1.972429,3.732209,-9.351308],[3.907499,-1.984996,-6.654472,7.921721,-1.691056,1.197004,-8.929404,-8.770446],[-2.542052,3.923424,9.612248,3.075091,-7.042417,3.833979,-3.415835,-3.132776],[3.468141,6.554754,0.775205,-5.235686,1.352560,-5.716491,1.493586,5.637313],[4.363701,0.241587,6.236467,-8.180641,-2.629611,9.227271,4.533899,-8.879776],[2.385824,6.713713,7.737153,-6.825751,4.659352,-5.791120,5.067461,-5.717859],[2.258218,2.064431,-4.284070,-9.093624,0.316148,-9.862546,2.630651,-9.935237],[-9.581867,4.537365,4.225194,3.669801,-2.353544,8.026687,5.798740,-6.412224],[-2.616352,3.257006,5.015594,6.802469,-2.557354,3.986781,0.134111,-2.766072],[4.447841,5.222173,8.762112,-0.204350,-8.420532,5.099927,6.295480,-5.463093],[-5.614278,7.532593,8.752626,-0.265646,-5.846045,6.552208,4.423778,3.183780]],[[5.495667,-8.928259,9.230173,-7.307128,-7.893005,-0.422876,6.859383,2.083750],[-0.252383,3.221669,-1.847955,0.643243,-7.327421,-2.639490,-8.265925,-8.917985],[-8.012105,-6.020269,1.243961,7.401707,4.727171,-4.310055,5.573909,-3.886203],[-7.464070,2.418621,3.394078,1.073355,-4.303415,-2.316767,0.229016,-9.273380],[8.230038,-9.410233,-0.266450,-1.813827,2.810867,-4.728728,1.290525,-2.790935],[6.894620,-3.619233,9.370982,-4.953104,0.405591,-4.856176,1.084027,-9.723689],[-5.337571,-5.578595,-2.338331,-2.217021,1.766281,-2.299714,1.607984,-3.718482],[2.976636,5.575967,-9.964064,-5.843239,-7.910311,-4.758976,0.095223,-5.479909],[2.357006,-3.333111,-5.140711,2.452776,-6.249520,-6.556165,0.464692,-1.902933],[2.267219,7.838809,6.965244,5.153950,-4.154212,8.977106,-6.143691,9.290102],[-4.689429,4.410934,-0.738836,-4.636275,1.328283,-5.440003,4.736722,7.881537],[3.580472,-1.325877,-5.074267,-8.913148,-7.409797,-2.032959,-2.783566,-0.979119],[-6.301777,6.060321,6.082541,0.830790,-7.335061,2.313546,-3.990411,-1.064983],[0.100375,-3.029985,-7.091165,-8.546500,-2.694715,2.703516,2.715812,-2.957790]],[[0.032964,-7.743436,9.593297,4.958042,-0.771273,-0.611716,3.614774,-6.948236],[3.943528,-1.079311,5.934716,-3.757417,-4.215685,-5.099696,-3.469698,5.239675],[-3.678594,-7.755674,7.477742,5.508240,-2.135310,-2.496385,-0.307688,-9.943711],[7.912583,8.251293,2.880950,-2.337110,2.465966,7.465033,1.411187,-1.555276],[5.245963,-0.828585,-1.236454,-3.908771,6.745346,1.516042,1.880416,9.535021],[-2.204115,6.155102,1.638123,5.703496,0.226482,-6.919890,8.709184,-6.691000],[0.522825,0.934516,1.798823,-4.093110,-2.295356,-0.792355,2.137199,-4.884894],[4.763636,2.910780,-6.681242,1.750472,-0.852179,-7.147474,-1.783269,-0.772895],[7.240313,-1.460977,8.462254,7.397149,-0.682952,2.909988,-0.559692,1.785385],[4.047759,-9.032168,-7.186170,0.308011,9.155833,-6.213830,3.505695,0.568378],[1.258428,4.335994,-0.359460,-8.899337,-8.617679,-0.487951,-0.048936,-7.886149],[-5.025676,7.962539,3.733011,2.956598,-9.763187,-7.641574,-2.636158,9.924670],[6.277186,-7.370282,4.013867,-8.458790,-6.754964,-2.803780,7.954024,1.459726],[3.272182,-6.120472,3.778637,8.717228,5.711414,7.411566,5.068375,0.334466]],[[9.358851,-1.246465,9.341624,4.311602,9.779730,-2.968403,-4.975477,5.276161],[-8.589687,-0.573607,3.934661,3.724875,-1.306456,9.401257,2.870324,-5.022356],[-1.557051,-9.028632,-8.118714,-3.991055,3.077915,-8.637770,-7.828523,-4.983526],[7.225143,-6.911642,-8.941377,5.575215,6.794429,0.627455,-3.515406,0.962892],[-8.962984,-4.787201,3.511380,9.137808,0.717152,4.435407,5.616019,-3.184655],[-4.675810,1.109346,-1.255242,8.821593,4.366936,3.154657,1.538323,5.100328],[-8.601645,-0.434680,-1.482761,-0.464621,4.267509,8.581134,5.615381,6.501849],[-1.949786,7.052991,5.742766,-4.078447,1.134562,-9.930164,3.757574,-0.026065],[4.650142,9.470391,-2.537631,6.524586,6.773796,-9.231828,-6.358609,8.989895],[7.858142,-2.338331,1.647206,3.713872,-3.162017,5.185377,7.839305,1.070255],[-8.570636,-8.797995,-9.979418,-5.568332,-3.856619,6.422648,-5.500693,-9.206157],[6.606430,6.436911,3.938335,5.589821,-6.078580,9.872616,-3.981880,7.269611],[-0.107719,-7.057800,3.257582,-7.952073,8.015540,3.176193,-4.101894,9.195804],[-5.939861,0.408764,-3.647313,8.188765,4.146042,-2.013443,9.579778,1.730085]],[[-9.091889,-5.130253,-9.873159,2.979545,-3.843310,-7.904930,-6.305557,-8.907003],[-0.928434,7.709331,-6.008630,3.403483,0.703344,-2.937702,5.876183,-9.138527],[0.749121,-3.531414,-1.320620,7.895956,-3.214495,7.172480,-4.934520,6.104962],[8.238370,6.818543,0.091363,-6.146675,-8.987938,1.771240,-6.038862,0.411397],[-5.616278,0.917022,-5.386510,-9.339381,-5.904661,7.258770,4.859748,7.072164],[5.061579,6.947291,-0.587152,-6.392414,-8.687860,-3.419393,3.317274,-1.134427],[0.421293,-2.371518,-2.765560,-9.887605,9.986698,2.976183,-7.749049,9.623837],[5.247290,-2.681007,-3.475487,3.113805,-5.896939,0.772317,7.240714,-8.908121],[-4.975373,-6.732665,8.263094,8.959725,9.791581,3.213307,-1.116420,2.754019],[9.134180,5.166027,-1.198254,-8.863095,-4.901319,9.862769,3.661477,3.689055],[-6.941248,7.324235,-2.846680,-9.810358,8.348233,-3.190791,2.823517,-1.817021],[2.848636,-8.127393,-5.146187,7.549882,3.103311,-3.423962,-7.169594,-0.637890],[-4.446473,-4.113008,-6.679555,-4.821290,-0.711403,8.568155,-9.970934,4.304567],[2.910527,-7.035421,-7.963772,9.614741,-6.184708,3.146148,4.890193,8.114362]],[[4.947643,-5.440281,4.541989,6.693935,9.550970,3.538224,-9.396732,-9.784325],[-4.973396,0.536629,-0.074549,-3.718547,8.386845,8.681954,2.714219,-3.170333],[-1.286062,3.138705,9.428275,6.699652,4.892635,-1.974270,9.583940,-0.957500],[2.198229,5.990271,-4.806736,-3.365533,6.078566,-3.794946,1.185417,1.556648],[1.035927,7.515257,7.924134,-0.958509,0.628145,6.591178,9.221204,-3.820278],[9.578719,-4.046761,-0.986709,8.259847,-5.597728,-9.739030,-2.562305,5.835411],[-5.015286,-2.091969,4.429900,2.708416,-7.783656,-3.068219,-3.799462,-8.605900],[-6.243499,8.292292,-2.320814,-5.033772,-5.383444,-9.364113,-4.675757,-6.214790],[-2.867675,-6.886543,3.846342,-0.097226,-3.383553,8.634848,2.714035,2.763679],[-1.747174,-0.826540,5.317102,9.716612,-3.928674,8.839325,6.942421,9.096334],[-8.311180,-1.170342,0.339997,2.407762,3.154723,-0.463181,7.036994,-8.491129],[-9.544443,-9.148128,0.734171,2.015752,0.176178,-3.195987,1.252673,-9.371258],[9.077647,9.281010,6.047757,9.531912,-9.669027,9.453823,5.652824,9.505336],[2.165953,2.424827,-6.610609,-2.361234,4.783573,-8.976517,-1.846691,1.982108]],[[3.427284,1.339441,9.461154,5.810876,-6.188361,4.591964,-6.826887,-0.728874],[-1.163212,-5.920533,-3.286063,-2.670147,4.611830,-9.737420,3.460579,-8.908761],[5.623068,7.350583,-6.009321,-5.173184,-3.761011,-0.764131,-7.218752,-8.584231],[-8.207042,0.157695,7.354196,3.890427,2.337682,-7.122212,1.047718,0.936556],[-9.872646,0.659075,-0.196140,-8.161944,-0.569831,2.426350,8.083460,9.722290],[9.246180,-6.634570,0.042396,0.356500,-5.793438,8.909538,-9.983818,-2.056837],[-3.333425,5.812926,8.593357,8.298757,-1.562037,-4.005764,-3.934700,-1.942033],[2.303040,-4.465016,-7.544950,5.302945,0.367961,-0.019869,2.043620,0.881247],[-4.695925,-5.350032,-7.350233,5.729108,1.193207,-8.081896,-7.739119,2.178961],[0.236301,-5.977119,4.463135,-5.366402,-8.698538,5.159285,7.090134,9.037287],[1.509755,8.844378,7.640191,6.957961,7.282059,-3.028944,-5.222856,9.476581],[3.031987,9.988652,8.200623,-6.568712,-2.560656,1.570239,-2.443182,8.296133],[8.405109,3.289063,-1.750837,4.711485,-4.526524,0.881473,6.138865,-3.780653],[-5.467632,3.025018,-7.950298,0.358668,0.787631,-8.873653,-7.983710,-7.592747]],[[3.059565,-1.325657,-8.899306,3.165685,-2.051530,0.976228,1.653315,-7.016871],[2.584746,7.393852,8.904923,-9.321315,8.599570,-1.136038,-1.363354,0.895121],[-4.739083,4.613565,0.785912,0.926093,2.253991,7.728868,3.896427,-3.216745],[-3.256842,-9.900335,3.140740,-0.555433,0.212117,-3.673509,4.185882,2.249262],[3.989895,-0.620528,0.476967,-1.491432,-5.418410,1.663150,-8.867714,-2.594079],[4.874259,-7.501968,8.119402,-1.326085,-7.802861,4.024933,-6.263409,3.145228],[0.273311,4.530344,-0.761141,-8.320531,7.191362,-4.343777,5.595652,-9.701279],[8.201030,7.155983,-8.619170,0.253743,-3.402155,-2.362122,-7.834108,4.213892],[-8.619161,-5.317564,-5.370110,7.272727,5.756362,7.848585,2.702694,3.704370],[9.223562,2.051146,-6.009871,-2.769995,6.073745,-2.393098,-4.968761,-7.807029],[-2.207349,8.584892,9.628941,-9.520100,-0.841683,9.757706,-5.270143,-7.693229],[-4.890312,1.160750,1.522562,3.808877,-8.833699,-0.980906,8.654830,6.295057],[9.299267,0.481437,-0.054993,8.511261,9.325118,-7.616979,-1.777079,1.454485],[-2.966655,7.737861,-3.978914,9.948809,-1.027267,-8.924356,-8.405993,5.803676]],[[-9.870940,-9.524744,7.261214,-3.734608,-2.281133,-7.817163,5.690723,5.715702],[-8.142417,9.567888,-3.818489,6.134069,-4.096713,-9.737032,-1.141007,7.888199],[-1.455126,7.145540,0.623530,1.312213,-1.615274,-3.782485,4.754455,6.400607],[7.276086,2.590523,4.875479,-6.211937,-8.812603,-1.802675,5.857754,3.482208],[7.494586,5.365404,-3.918080,4.840326,-2.800910,7.728397,0.414813,6.682730],[9.718562,-8.889325,7.061418,8.894002,-9.618023,-0.535595,9.603181,7.461238],[-1.888949,9.909657,8.890403,2.547566,0.080037,-3.122881,-0.639910,6.502081],[-8.965276,-3.899230,-7.355550,6.752858,-7.306782,-8.090523,2.829770,-9.757159],[-5.139447,8.323264,-7.062262,4.290086,7.241963,0.475449,7.064585,6.523225],[-2.887822,-4.934812,4.402709,3.187656,2.910982,5.806572,-6.721904,8.991323],[-4.160709,-1.514629,3.400249,-5.566559,7.987898,-4.433013,-0.220078,-4.183788],[-0.624211,2.245063,-5.181865,5.925027,2.192237,5.889132,-7.790194,-1.793591],[6.905490,-3.020148,0.776835,3.288705,-2.622470,3.877298,3.997467,1.857644],[-8.992068,-7.532800,-7.500156,2.726292,-5.744438,2.175994,5.316689,2.339522]],[[-9.676074,8.520893,-0.880593,6.495175,6.768496,0.264736,-0.906146,-9.129198],[-0.463329,-4.757929,-1.564243,-9.083722,-2.764165,1.414146,6.380768,-6.047556],[-4.951018,9.579274,-9.172166,2.005369,-4.263794,-5.682421,-4.363400,3.073411],[1.386337,7.398634,3.077602,4.323572,9.950201,5.584334,9.285531,-0.087637],[-3.103219,4.583792,-3.891509,-3.814202,2.055058,-7.410400,9.015459,-5.253439],[5.522683,-2.187210,5.700491,-0.366826,-2.750050,-6.478258,9.221137,-8.047614],[-9.237454,-7.700225,-5.908611,5.379105,7.611723,6.970964,-2.883661,-8.735140],[6.655011,-4.093734,-6.699126,1.279651,4.216273,-2.022380,8.220879,-2.501867],[-2.461353,-0.081181,3.037064,4.082076,3.136965,1.390800,-4.816164,5.127846],[-8.245523,5.797733,-8.787244,3.921789,-9.858268,-4.649526,-4.192442,5.273732],[0.336923,-8.157087,-2.713737,-7.164490,-7.402200,6.864661,3.766518,1.639727],[-3.159364,-4.283917,8.879008,-8.038027,6.714711,8.550143,7.943679,9.135444],[9.859207,1.905858,6.206231,0.037145,0.521739,-5.931392,-4.876479,-4.797893],[-7.217791,1.493432,0.234164,9.190817,2.901585,-2.682170,-3.419833,3.359815]],[[9.885335,6.933941,-8.884177,9.970596,7.159306,-1.228589,4.582023,-0.332924],[0.609813,1.566470,-7.911821,-4.619242,-8.585055,-7.375024,-8.525030,-5.726236],[4.137049,-9.282005,-4.989893,4.584057,1.239054,3.995444,8.214994,6.757490],[-1.977876,3.397872,0.468668,-7.283688,-5.651535,-2.493725,-2.012743,2.569536],[-6.751067,-9.330828,4.002896,-4.872142,9.850656,2.284782,-9.680284,-1.841275],[4.796996,4.083291,2.891015,-6.602891,-6.974503,-9.055017,5.878740,-1.563293],[1.967187,9.976658,2.066526,4.679974,0.460208,5.754883,4.344827,-3.566671],[4.749542,-3.237624,1.615149,-3.449119,4.305830,1.904808,-9.506506,9.719407],[-1.314840,-8.098317,-8.126383,-8.482680,-1.872763,8.116922,6.674463,8.031553],[0.451821,7.439585,-5.707832,9.502535,-5.809469,5.083271,-5.200437,-4.779476],[7.459513,-8.309677,4.350485,1.630870,-8.743136,5.059042,1.741346,-5.927693],[-0.909766,2.374339,-9.142307,1.141894,0.961379,0.668684,7.611688,-6.468692],[8.309413,-0.952779,-4.938688,-1.288275,1.629473,-9.313489,-3.544814,0.562675],[8.578055,-6.218022,0.430799,-7.579890,-7.736196,6.335573,-5.945872,-0.439099]],[[-9.293886,-4.943964,-1.105284,-2.337258,-0.170377,-9.295887,8.498452,-2.689165],[7.749943,-7.895780,-3.411382,2.014679,7.296436,-0.671962,7.124358,6.311040],[6.910574,-5.135874,-6.969792,6.024075,2.522659,-9.140625,-1.023165,9.243512],[0.838827,-4.371275,9.861219,-1.236111,-2.399790,-9.203974,7.237645,-5.750085],[0.566476,-2.061637,7.549930,-4.636255,-7.377853,1.406544,4.745298,-9.901014],[4.455216,-8.442280,-3.165802,5.149087,8.212950,-3.179053,5.849306,-1.230266],[0.882622,-8.451743,-3.261971,-1.817369,9.754469,4.742901,-7.306373,4.728564],[4.707533,-1.104607,-9.192466,-7.576275,8.630099,-0.106993,1.366103,4.135688],[-4.189675,7.924422,8.611794,9.987887,-8.780989,4.945068,-6.249092,-3.261820],[3.236070,4.969800,-4.260813,3.358732,4.713838,-0.999125,-3.400308,6.647700],[0.240817,-1.007602,-9.132776,-1.650174,-4.759342,-9.466328,-3.750848,-0.099087],[9.054742,-1.934826,-8.505216,-1.244791,1.824319,-5.797650,-4.378726,-2.257406],[7.387935,-8.130545,-3.400165,-7.811943,2.189688,6.640844,3.543072,9.725183],[-7.087922,-2.657318,5.211396,-0.627636,6.431438,3.759327,-0.968949,1.071485]]], dtype = "float32")#candidate|855|(14, 14, 8)|const|float32
bop_856 = relay.not_equal(var_854.astype('bool'), relay.reshape(const_855.astype('bool'), relay.shape_of(var_854))) # shape=(14, 14, 8)
bop_866 = relay.greater_equal(var_854.astype('bool'), relay.reshape(const_855.astype('bool'), relay.shape_of(var_854))) # shape=(14, 14, 8)
bop_877 = relay.left_shift(bop_866.astype('int32'), relay.reshape(const_855.astype('int32'), relay.shape_of(bop_866))) # shape=(14, 14, 8)
uop_883 = relay.asin(bop_877.astype('float32')) # shape=(14, 14, 8)
output = relay.Tuple([bop_856,uop_883,])
output2 = relay.Tuple([bop_856,uop_883,])
func_885 = relay.Function([var_854,], output)
mod['func_885'] = func_885
mod = relay.transform.InferType()(mod)
var_886 = relay.var("var_886", dtype = "float32", shape = (14, 14, 8))#candidate|886|(14, 14, 8)|var|float32
output = func_885(var_886)
func_887 = relay.Function([var_886], output)
mutated_mod['func_887'] = func_887
mutated_mod = relay.transform.InferType()(mutated_mod)
var_892 = relay.var("var_892", dtype = "float64", shape = (5, 4, 2))#candidate|892|(5, 4, 2)|var|float64
var_893 = relay.var("var_893", dtype = "float64", shape = (5, 4, 2))#candidate|893|(5, 4, 2)|var|float64
bop_894 = relay.power(var_892.astype('float64'), relay.reshape(var_893.astype('float64'), relay.shape_of(var_892))) # shape=(5, 4, 2)
bop_898 = relay.less(bop_894.astype('bool'), relay.reshape(var_893.astype('bool'), relay.shape_of(bop_894))) # shape=(5, 4, 2)
output = bop_898
output2 = bop_898
func_904 = relay.Function([var_892,var_893,], output)
mod['func_904'] = func_904
mod = relay.transform.InferType()(mod)
var_905 = relay.var("var_905", dtype = "float64", shape = (5, 4, 2))#candidate|905|(5, 4, 2)|var|float64
var_906 = relay.var("var_906", dtype = "float64", shape = (5, 4, 2))#candidate|906|(5, 4, 2)|var|float64
output = func_904(var_905,var_906,)
func_907 = relay.Function([var_905,var_906,], output)
mutated_mod['func_907'] = func_907
mutated_mod = relay.transform.InferType()(mutated_mod)
var_1326 = relay.var("var_1326", dtype = "uint16", shape = (6, 4, 6))#candidate|1326|(6, 4, 6)|var|uint16
var_1327 = relay.var("var_1327", dtype = "uint16", shape = (6, 4, 6))#candidate|1327|(6, 4, 6)|var|uint16
bop_1328 = relay.bitwise_and(var_1326.astype('uint16'), relay.reshape(var_1327.astype('uint16'), relay.shape_of(var_1326))) # shape=(6, 4, 6)
func_272_call = mod.get_global_var('func_272')
func_275_call = mutated_mod.get_global_var('func_275')
const_1335 = relay.const([-4.352067,8.692378,-7.572759,-1.870096,5.231862,-2.616594,7.119834,-2.557170,6.792253,9.759582,7.097335,8.931204,-4.642829,-5.296155,-7.214313,6.087292,4.139846,4.866687,-9.076779,4.481259,-0.424014,3.735144,-4.997777,9.004101,-8.926147,-6.542599,-5.939589,1.489434,-3.705713,-0.047081,-1.113606,5.933359,-9.500584,-2.330322,-6.478622,1.931042,6.719075,9.286464,-1.575198,3.185672,3.193583,1.202952,4.053685,-9.516505,-9.135931,-9.197923,6.244936,-6.529026,9.856175,-6.253232,-3.784834,-8.367261,6.327658,7.154601,-6.792886,-5.981270,-8.229223,5.450738,4.937277,-6.918343,-6.584368,-0.106261,-9.654362,-3.881423,4.684143,-8.062033,-3.716194,9.990007,-6.190132,4.586865,5.182460,-8.188368,0.022973,5.880924,9.474279,-9.182712,6.834753,9.273642,1.148836,5.510380,0.829952,-6.597145,-4.986229,1.166950,-5.077368,0.659967,-7.114278,-2.007422,-0.810173,-7.783288,3.285717,7.162234,-9.935928,-6.623778,-5.814007,-7.856814,2.428229,1.589256,4.462306,-9.199013,-3.860706,6.903352,4.825827,-5.004697,-2.370991,-4.721227,-5.701838,-9.552161,-7.433410,-3.985646,-7.705797,-1.176803,-5.682725,8.251817,-5.097632,1.908756,2.886019,-3.051661,-7.157332,-3.901085,4.664658,-5.024757,7.508758,-0.893976,-4.844436,-0.576709,-5.474491,-9.485621,4.170109,-0.528093,-8.517966,-1.790613,-5.177161,-0.818469,0.973018,4.049057,2.950586,-7.497276,-7.474219,6.880946,-8.959007,0.054378,-3.591268,7.866472,5.279193,-7.401903,1.925451,-6.149306,5.752553,9.368229,1.991089,7.033216,-3.579509,2.261586,6.651649,6.971232,8.390730,-0.011199,2.964345,0.025500,4.254778,-3.880592,-1.648615,-2.912617,1.185426,-1.568733,8.506366,-8.014376,-6.972777,-2.646065,-9.629096,6.416944,4.560910,1.370958,0.066670,4.770346,-4.937847,7.317555,-5.284411,-3.759922,4.519154,9.961929,3.812598,1.082958,6.556556,1.820436,9.260715,9.399575,-4.581009,8.048641,5.539497,-5.187406,-8.287850,-5.873111,8.371903,0.807686,-5.769555,8.461394,-9.273233,9.414652,6.136489,1.825148,1.637836,0.424756,7.563675,8.455870,4.593007,2.800192,9.559135,8.337371,-9.054251,-2.824384,5.536273,-1.235241,-0.892800,9.071233,-3.598077,-6.542431,-9.894642,6.154167,2.619271,-0.723791,-9.180014,-8.745368,-1.518642,2.970179,-4.594066,1.543959,8.152208,8.441924,0.412987,1.356331,9.204368,5.470737,3.148946,-0.267684,3.197163,-4.186620,-4.559993,2.094568,-7.401062,4.390726,-0.742113,-3.639521,0.193107,3.286223,-9.736498,-3.132825,7.399198,7.302114,1.638176,7.642528,7.759952,-5.600710,-7.521203,-0.628003,-9.700623,-8.578769,-2.888273,2.478184,-0.832673,-0.564028,4.050778,5.561964,-1.330368,-7.111347,-5.219176,-9.693884,4.097836,5.809205,-3.143453,-3.186610,8.927461,-0.323079,4.750076,2.792735,-9.320634,-0.190746,0.971369,-4.283985,4.198835,2.768148,-0.746281,8.262185,-7.737544,-2.137696,-7.965527,-3.603735,8.939358,1.841314,-7.205434,-5.284804,-8.104049,-1.706596,-0.283193,1.676490,8.507170,5.783708,-2.993393,8.952308,7.953150,8.740569,-7.268440,-7.608769,-8.374542,-4.891950,-5.887770,-3.262729,-3.588090,-5.575204,1.814191,-8.639541,-5.678834,3.570371,-0.351921,-6.042628,-6.386854,9.541797,2.385441,-3.754572,6.414564,-5.648513,2.526247,-8.826888,5.840817,4.481754,-0.220912,-5.393043,6.043991,8.497790,-8.023158,-7.226705,6.751063,-3.629480,3.675059,6.300238,1.097300,-9.663079,-2.348639,-6.926060,-0.060941,-8.588964,3.725166,6.579178,-2.951741,-2.079771,-6.648583,4.861024,-6.186876,-1.186066,-2.099411,-6.752924,5.102471,7.315769,0.371073,-6.128909,7.807093,-0.425918,7.991699,5.889558,-2.777746,-3.100154,-1.516428,6.443163,0.489469,-3.050279,8.093322,-8.170377,-3.851574,-9.974720,4.460025,0.519238,5.657442,-3.865199,0.932644,0.913213,8.789392,6.234305], dtype = "float32")#candidate|1335|(378,)|const|float32
call_1334 = relay.TupleGetItem(func_272_call(relay.reshape(const_1335.astype('float32'), [9, 14, 3])), 0)
call_1336 = relay.TupleGetItem(func_275_call(relay.reshape(const_1335.astype('float32'), [9, 14, 3])), 0)
func_904_call = mod.get_global_var('func_904')
func_907_call = mutated_mod.get_global_var('func_907')
var_1347 = relay.var("var_1347", dtype = "float64", shape = (40,))#candidate|1347|(40,)|var|float64
call_1346 = func_904_call(relay.reshape(var_1347.astype('float64'), [5, 4, 2]), relay.reshape(var_1347.astype('float64'), [5, 4, 2]), )
call_1348 = func_904_call(relay.reshape(var_1347.astype('float64'), [5, 4, 2]), relay.reshape(var_1347.astype('float64'), [5, 4, 2]), )
output = relay.Tuple([bop_1328,call_1334,const_1335,call_1346,var_1347,])
output2 = relay.Tuple([bop_1328,call_1336,const_1335,call_1348,var_1347,])
func_1351 = relay.Function([var_1326,var_1327,var_1347,], output)
mod['func_1351'] = func_1351
mod = relay.transform.InferType()(mod)
var_1352 = relay.var("var_1352", dtype = "uint16", shape = (6, 4, 6))#candidate|1352|(6, 4, 6)|var|uint16
var_1353 = relay.var("var_1353", dtype = "uint16", shape = (6, 4, 6))#candidate|1353|(6, 4, 6)|var|uint16
var_1354 = relay.var("var_1354", dtype = "float64", shape = (40,))#candidate|1354|(40,)|var|float64
output = func_1351(var_1352,var_1353,var_1354,)
func_1355 = relay.Function([var_1352,var_1353,var_1354,], output)
mutated_mod['func_1355'] = func_1355
mutated_mod = relay.transform.InferType()(mutated_mod)
var_1498 = relay.var("var_1498", dtype = "float64", shape = (3, 1, 1))#candidate|1498|(3, 1, 1)|var|float64
uop_1499 = relay.asin(var_1498.astype('float64')) # shape=(3, 1, 1)
func_904_call = mod.get_global_var('func_904')
func_907_call = mutated_mod.get_global_var('func_907')
var_1510 = relay.var("var_1510", dtype = "float64", shape = (40,))#candidate|1510|(40,)|var|float64
call_1509 = func_904_call(relay.reshape(var_1510.astype('float64'), [5, 4, 2]), relay.reshape(var_1510.astype('float64'), [5, 4, 2]), )
call_1511 = func_904_call(relay.reshape(var_1510.astype('float64'), [5, 4, 2]), relay.reshape(var_1510.astype('float64'), [5, 4, 2]), )
uop_1512 = relay.sin(var_1510.astype('float32')) # shape=(40,)
output = relay.Tuple([uop_1499,call_1509,uop_1512,])
output2 = relay.Tuple([uop_1499,call_1511,uop_1512,])
func_1514 = relay.Function([var_1498,var_1510,], output)
mod['func_1514'] = func_1514
mod = relay.transform.InferType()(mod)
mutated_mod['func_1514'] = func_1514
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1514_call = mutated_mod.get_global_var('func_1514')
var_1516 = relay.var("var_1516", dtype = "float64", shape = (3, 1, 1))#candidate|1516|(3, 1, 1)|var|float64
var_1517 = relay.var("var_1517", dtype = "float64", shape = (40,))#candidate|1517|(40,)|var|float64
call_1515 = func_1514_call(var_1516,var_1517,)
output = call_1515
func_1518 = relay.Function([var_1516,var_1517,], output)
mutated_mod['func_1518'] = func_1518
mutated_mod = relay.transform.InferType()(mutated_mod)
var_1591 = relay.var("var_1591", dtype = "float32", shape = (12, 13, 3))#candidate|1591|(12, 13, 3)|var|float32
uop_1592 = relay.asin(var_1591.astype('float32')) # shape=(12, 13, 3)
output = relay.Tuple([uop_1592,])
output2 = relay.Tuple([uop_1592,])
func_1599 = relay.Function([var_1591,], output)
mod['func_1599'] = func_1599
mod = relay.transform.InferType()(mod)
mutated_mod['func_1599'] = func_1599
mutated_mod = relay.transform.InferType()(mutated_mod)
var_1600 = relay.var("var_1600", dtype = "float32", shape = (12, 13, 3))#candidate|1600|(12, 13, 3)|var|float32
func_1599_call = mutated_mod.get_global_var('func_1599')
call_1601 = func_1599_call(var_1600)
output = call_1601
func_1602 = relay.Function([var_1600], output)
mutated_mod['func_1602'] = func_1602
mutated_mod = relay.transform.InferType()(mutated_mod)
var_1769 = relay.var("var_1769", dtype = "float32", shape = (2, 6, 5))#candidate|1769|(2, 6, 5)|var|float32
uop_1770 = relay.log(var_1769.astype('float32')) # shape=(2, 6, 5)
func_885_call = mod.get_global_var('func_885')
func_887_call = mutated_mod.get_global_var('func_887')
var_1774 = relay.var("var_1774", dtype = "float32", shape = (4, 392))#candidate|1774|(4, 392)|var|float32
call_1773 = relay.TupleGetItem(func_885_call(relay.reshape(var_1774.astype('float32'), [14, 14, 8])), 0)
call_1775 = relay.TupleGetItem(func_887_call(relay.reshape(var_1774.astype('float32'), [14, 14, 8])), 0)
func_141_call = mod.get_global_var('func_141')
func_145_call = mutated_mod.get_global_var('func_145')
var_1782 = relay.var("var_1782", dtype = "float64", shape = (560,))#candidate|1782|(560,)|var|float64
call_1781 = func_141_call(relay.reshape(var_1782.astype('float64'), [5, 7, 16]), relay.reshape(var_1782.astype('float64'), [5, 7, 16]), )
call_1783 = func_141_call(relay.reshape(var_1782.astype('float64'), [5, 7, 16]), relay.reshape(var_1782.astype('float64'), [5, 7, 16]), )
bop_1786 = relay.maximum(uop_1770.astype('float64'), relay.reshape(var_1769.astype('float64'), relay.shape_of(uop_1770))) # shape=(2, 6, 5)
output = relay.Tuple([call_1773,var_1774,call_1781,var_1782,bop_1786,])
output2 = relay.Tuple([call_1775,var_1774,call_1783,var_1782,bop_1786,])
func_1797 = relay.Function([var_1769,var_1774,var_1782,], output)
mod['func_1797'] = func_1797
mod = relay.transform.InferType()(mod)
mutated_mod['func_1797'] = func_1797
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1797_call = mutated_mod.get_global_var('func_1797')
var_1799 = relay.var("var_1799", dtype = "float32", shape = (2, 6, 5))#candidate|1799|(2, 6, 5)|var|float32
var_1800 = relay.var("var_1800", dtype = "float32", shape = (4, 392))#candidate|1800|(4, 392)|var|float32
var_1801 = relay.var("var_1801", dtype = "float64", shape = (560,))#candidate|1801|(560,)|var|float64
call_1798 = func_1797_call(var_1799,var_1800,var_1801,)
output = call_1798
func_1802 = relay.Function([var_1799,var_1800,var_1801,], output)
mutated_mod['func_1802'] = func_1802
mutated_mod = relay.transform.InferType()(mutated_mod)
var_2162 = relay.var("var_2162", dtype = "float32", shape = (2, 16, 3))#candidate|2162|(2, 16, 3)|var|float32
var_2163 = relay.var("var_2163", dtype = "float32", shape = (2, 16, 3))#candidate|2163|(2, 16, 3)|var|float32
bop_2164 = relay.mod(var_2162.astype('float32'), relay.reshape(var_2163.astype('float32'), relay.shape_of(var_2162))) # shape=(2, 16, 3)
func_761_call = mod.get_global_var('func_761')
func_763_call = mutated_mod.get_global_var('func_763')
const_2178 = relay.const([[False,True,False,False],[True,False,False,False],[False,False,True,False],[False,True,True,False],[False,True,False,False],[False,True,True,True],[False,False,True,True],[False,True,False,False],[False,False,True,True],[True,True,True,True],[True,False,True,True],[False,True,True,False],[False,True,False,False],[False,True,False,True],[True,True,False,True],[False,False,False,False],[True,True,True,False],[False,False,True,False],[True,False,True,True],[True,True,True,True],[False,True,False,True],[False,False,False,False],[True,False,True,False],[False,True,False,True],[False,False,True,True],[False,False,True,True],[True,False,False,False],[True,True,False,False],[False,False,True,True],[False,True,True,True],[True,False,True,True],[False,False,True,False],[False,False,True,False],[True,False,False,False],[True,False,False,False],[False,False,False,False],[False,True,True,False],[False,False,False,True],[True,True,True,True],[True,False,True,True],[False,True,False,True],[True,False,True,False],[False,False,True,False],[False,True,True,True],[True,False,True,True],[True,True,True,False],[True,False,True,False],[False,False,False,False],[True,False,False,True],[False,True,True,False],[True,False,True,False],[False,False,True,True],[False,False,False,True],[False,True,True,True],[True,False,True,True],[True,True,False,False],[True,False,True,True],[True,True,False,True],[True,True,True,True],[True,False,False,True],[False,True,True,False],[False,False,True,False],[True,True,True,False],[False,True,False,False],[True,False,True,True],[True,True,False,False],[False,True,False,True],[True,False,True,True],[True,False,False,False],[False,True,False,True],[False,True,True,True],[True,False,True,False],[False,False,True,True],[False,True,True,False],[False,True,False,True],[False,True,True,True],[True,True,True,True],[False,True,True,True],[True,False,False,False],[False,True,False,False],[True,False,True,True],[True,True,False,False],[False,False,True,False],[True,False,False,False],[True,True,True,False],[True,False,True,False],[True,True,False,True],[False,False,False,True],[False,True,True,False],[False,True,False,True],[True,True,True,False],[False,True,False,True],[True,True,True,False],[False,False,False,True],[True,False,False,True],[False,False,True,True],[False,False,True,False],[True,True,True,False],[False,True,False,False],[False,False,False,True],[True,True,True,True],[False,True,False,True],[True,True,True,False],[True,False,True,True],[False,False,False,True],[True,True,True,True],[False,True,False,True],[True,False,False,False],[True,False,False,True],[True,False,True,True],[True,False,True,True],[False,False,False,False]], dtype = "bool")#candidate|2178|(112, 4)|const|bool
call_2177 = relay.TupleGetItem(func_761_call(relay.reshape(const_2178.astype('bool'), [14, 4, 8])), 0)
call_2179 = relay.TupleGetItem(func_763_call(relay.reshape(const_2178.astype('bool'), [14, 4, 8])), 0)
func_885_call = mod.get_global_var('func_885')
func_887_call = mutated_mod.get_global_var('func_887')
var_2181 = relay.var("var_2181", dtype = "float32", shape = (1568,))#candidate|2181|(1568,)|var|float32
call_2180 = relay.TupleGetItem(func_885_call(relay.reshape(var_2181.astype('float32'), [14, 14, 8])), 1)
call_2182 = relay.TupleGetItem(func_887_call(relay.reshape(var_2181.astype('float32'), [14, 14, 8])), 1)
output = relay.Tuple([bop_2164,call_2177,const_2178,call_2180,var_2181,])
output2 = relay.Tuple([bop_2164,call_2179,const_2178,call_2182,var_2181,])
func_2186 = relay.Function([var_2162,var_2163,var_2181,], output)
mod['func_2186'] = func_2186
mod = relay.transform.InferType()(mod)
mutated_mod['func_2186'] = func_2186
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2186_call = mutated_mod.get_global_var('func_2186')
var_2188 = relay.var("var_2188", dtype = "float32", shape = (2, 16, 3))#candidate|2188|(2, 16, 3)|var|float32
var_2189 = relay.var("var_2189", dtype = "float32", shape = (2, 16, 3))#candidate|2189|(2, 16, 3)|var|float32
var_2190 = relay.var("var_2190", dtype = "float32", shape = (1568,))#candidate|2190|(1568,)|var|float32
call_2187 = func_2186_call(var_2188,var_2189,var_2190,)
output = call_2187
func_2191 = relay.Function([var_2188,var_2189,var_2190,], output)
mutated_mod['func_2191'] = func_2191
mutated_mod = relay.transform.InferType()(mutated_mod)
var_2454 = relay.var("var_2454", dtype = "int64", shape = (6, 7, 10))#candidate|2454|(6, 7, 10)|var|int64
const_2455 = relay.const([[[-9,8,-8,-5,9,-8,-9,4,3,6],[-10,8,-2,-4,9,9,-4,4,-2,-10],[10,5,-10,-7,8,2,2,1,-8,5],[4,9,-2,9,-4,6,8,5,-4,-2],[8,2,4,5,2,-1,-5,2,5,-3],[2,-5,5,-10,-2,1,6,9,-9,-10],[-6,5,3,-9,3,-7,3,7,2,5]],[[10,2,-1,4,7,9,8,5,5,2],[-5,-3,3,-6,-7,-6,9,5,-3,10],[-4,3,6,5,-1,-9,6,-7,-4,-3],[-6,-10,-9,6,3,-3,-6,-10,6,6],[-2,6,-7,-8,-5,-1,-2,-9,7,4],[-3,8,-5,4,6,7,-4,-10,5,1],[-1,-5,5,-7,-9,-2,-9,-4,1,-4]],[[-7,-6,5,4,-4,-3,9,-9,10,-9],[-8,-3,-3,1,-4,-2,-7,4,6,3],[-2,6,-2,8,-2,5,7,-7,5,-6],[-5,2,7,-4,-3,-3,-3,8,6,1],[2,6,-4,-2,2,-7,-6,-9,-4,-8],[-9,-2,1,-10,-6,5,-7,-9,-5,-9],[9,-4,-7,-2,5,10,2,-6,1,-10]],[[-9,5,5,6,-7,8,2,-2,4,-2],[3,-5,-3,8,9,1,2,-1,-1,8],[1,-3,10,2,9,-5,7,7,-10,-3],[2,6,-3,-2,5,2,8,9,-3,1],[8,-8,5,2,-10,-4,-1,10,-7,-10],[-4,8,-10,-9,-1,-8,-8,1,-2,1],[-10,-6,-5,-6,-9,-5,-9,-5,4,-3]],[[-8,-2,-7,-2,-8,1,-7,-10,3,7],[4,-5,6,3,5,3,-7,2,9,-1],[6,-6,8,7,6,3,5,3,9,-1],[2,-10,10,10,-5,-8,-2,-5,-10,4],[-6,6,-7,3,6,2,10,6,-3,9],[9,2,2,4,2,10,4,-9,4,9],[-6,10,3,5,-2,8,4,3,-7,-9]],[[-2,7,2,7,8,8,8,-9,3,9],[-10,5,6,9,-4,2,-7,1,5,-7],[-5,6,-4,4,-8,-1,1,2,5,-1],[-2,-4,-2,-8,5,9,-2,-3,7,-4],[-2,5,2,-1,1,-5,-6,1,3,4],[-7,-8,-7,5,-8,-1,3,-4,-1,1],[8,4,6,2,5,7,-1,10,4,2]]], dtype = "int64")#candidate|2455|(6, 7, 10)|const|int64
bop_2456 = relay.right_shift(var_2454.astype('int64'), relay.reshape(const_2455.astype('int64'), relay.shape_of(var_2454))) # shape=(6, 7, 10)
uop_2460 = relay.acos(var_2454.astype('float32')) # shape=(6, 7, 10)
uop_2470 = relay.log10(uop_2460.astype('float32')) # shape=(6, 7, 10)
const_2477 = relay.const([[[-4.377405,-1.956300,-9.949256,1.270165,-4.486080,6.166581,-6.925139,-1.884466,9.188697,-7.111686],[-3.396837,-2.020980,-9.736311,2.713522,-9.881651,-1.264095,-1.220207,-4.727099,-4.051470,3.269510],[4.048422,-1.156642,-0.800655,4.442087,-0.157328,-3.051085,-4.678171,-5.101751,-2.767459,-1.782654],[-2.308946,1.941425,-2.626510,-3.956195,2.093337,2.714525,-8.424790,-2.723814,-2.428940,-2.569366],[-7.539537,-7.971330,8.143782,5.999596,-0.059742,-4.281995,-0.396036,2.042835,7.150748,3.532548],[-2.839092,-1.878695,-8.426988,4.243794,-5.665458,-2.776772,-2.793015,-2.853637,9.825261,3.839401],[7.494624,-5.112124,0.239262,-4.637666,0.708032,-1.903802,-7.644099,-3.796825,5.508812,-0.866716]],[[4.358949,-8.994233,7.161660,1.959546,-8.929174,-0.289634,-9.983979,4.136717,3.421336,9.088054],[-5.676282,-9.218965,-2.864852,1.529353,-9.376688,7.134319,-6.125326,-7.890317,-8.425718,-0.679712],[-9.727197,3.927857,-4.513578,4.129620,-9.595644,-1.187305,-0.936511,-5.220628,-7.245303,-0.878408],[6.884036,-0.606289,-3.456200,7.479403,2.527879,7.831122,-6.787656,-5.409265,-8.857830,-0.604397],[-6.738822,5.840025,5.646364,3.997158,2.138925,9.958932,-1.882820,5.472864,-9.890204,1.943186],[-3.377817,2.046130,3.956926,4.410144,3.859014,7.072281,7.197613,-3.592878,-9.233550,-9.365274],[-1.737384,-8.064355,6.726118,7.742657,-5.490538,9.282506,8.355522,3.475989,4.109057,-6.017491]],[[1.683904,-9.040107,-2.572523,3.140916,5.242736,0.150635,1.096049,-1.493012,4.661997,-5.714653],[-5.807532,-8.028115,9.859983,2.377216,7.482473,1.269860,2.048993,8.272303,2.403660,-8.484232],[-7.857841,-8.406128,8.117472,-7.860588,-2.884874,-5.449384,1.716186,-0.095779,-5.789288,1.145408],[-1.122671,-4.659976,-7.965134,0.198338,5.386870,-5.168743,1.706283,8.594163,5.035439,0.873467],[2.356077,7.446871,4.112256,0.091329,8.630434,2.034174,6.277740,0.846464,6.209868,6.563368],[-2.840288,-8.716873,-4.377564,-9.483836,6.511801,5.554010,0.827790,5.023770,7.023985,-2.787280],[9.717383,-2.652849,-9.770659,6.495431,-2.124531,-9.049528,-3.584734,6.587869,-8.537179,2.423760]],[[5.553495,-6.509479,0.426890,8.702531,-1.326618,2.332770,6.553305,1.233277,9.964445,6.038597],[6.670389,-8.050554,-2.846769,9.562061,3.713748,8.980255,4.224478,4.087336,8.108646,3.659626],[-6.700059,-7.968009,-5.594344,0.459704,-2.490467,-2.663172,-0.582134,6.186383,-1.614411,-6.983905],[9.299780,-7.178442,9.235829,4.266970,9.654275,9.279632,0.902055,3.356750,2.670960,9.720422],[-8.609884,1.201740,-1.555670,9.839897,3.049440,-3.550834,8.759113,-8.090178,-3.292457,-0.891623],[-5.067232,-2.074128,3.828302,-9.367043,-1.481109,-3.710962,2.554315,-9.594602,-3.480747,-8.930754],[6.510306,7.761305,3.776982,0.383423,4.522752,3.358932,4.401044,-6.505492,-5.788874,8.800563]],[[-2.472526,2.452871,-6.016225,-7.943648,2.194011,-0.982766,6.351114,-1.892321,8.955614,6.925820],[2.912919,3.229222,-6.841866,4.328533,-8.199919,1.846198,-4.196359,-0.174491,-6.248894,2.076100],[3.540752,-6.807718,4.554851,9.357396,7.943513,-2.802654,-6.816276,2.167251,5.044239,2.753695],[-4.530633,-1.656721,9.788496,8.038448,5.888302,9.996894,-1.224631,-7.069527,-6.524122,7.122788],[-9.692253,-8.335743,2.365572,6.470557,-1.704765,-0.227737,2.585178,4.144343,6.788754,9.599910],[-7.163692,6.580569,-8.057385,-4.245654,0.440441,-1.270222,0.203004,-2.231112,7.818474,5.349622],[-9.363586,-1.293957,6.026819,-4.902806,-2.813724,7.353820,2.419400,7.359256,-0.553834,-2.465415]],[[2.599164,6.047292,-2.943263,5.237135,3.128978,5.480036,-3.534681,-6.131579,-9.686933,-4.836778],[-4.537601,2.888711,-2.129606,3.762995,-6.539599,5.627937,6.939995,1.503696,-0.118762,6.044638],[5.357136,-2.586561,-8.125863,9.174814,7.059996,3.428987,-2.906234,4.686393,8.376302,8.178085],[0.272043,-6.410073,-3.695010,-4.877872,-5.620894,-7.169367,-4.805844,-4.935614,1.388096,0.222066],[1.873745,-1.439900,2.971569,3.168053,3.787595,5.072484,4.208365,3.690263,7.635581,-3.487664],[5.014477,7.930900,6.387321,-4.165700,-6.937830,-6.752986,-1.178557,5.471581,-7.912668,-5.355443],[5.004640,-6.863936,0.286766,-5.879611,5.091717,1.668311,-5.741255,5.849643,-0.437242,-4.960723]]], dtype = "float32")#candidate|2477|(6, 7, 10)|const|float32
bop_2478 = relay.less(uop_2470.astype('bool'), relay.reshape(const_2477.astype('bool'), relay.shape_of(uop_2470))) # shape=(6, 7, 10)
func_2186_call = mod.get_global_var('func_2186')
func_2191_call = mutated_mod.get_global_var('func_2191')
const_2488 = relay.const([-6.199173,-6.229815,-0.339599,-7.401806,-3.823339,-1.690870,-3.849399,-1.192476,7.963745,0.137706,-4.111174,3.297394,-0.397479,-1.069477,-9.962218,-4.144523,-9.988866,0.153397,-1.307763,-6.541120,2.857987,7.049269,-8.400073,5.539924,7.256058,-2.196308,-7.159081,-3.230741,-7.405418,-3.279962,-2.735625,-8.786187,-8.723465,7.674309,5.008055,1.147066,-1.237191,-6.213466,-3.796464,-1.072110,-5.965135,-1.574654,-2.188502,4.823021,9.826438,-3.318365,6.359147,-4.924654,-3.267090,-0.876470,5.057792,7.789172,-9.961558,-8.308641,2.988959,-2.232765,8.015669,-6.551750,6.749734,4.790398,7.257602,-7.244490,-8.198838,-7.761727,-5.769215,-6.131093,-3.791790,8.253726,0.376372,-5.050355,-8.153407,1.472608,7.694958,3.760550,2.286148,6.700671,-2.468908,4.752876,-8.820337,-4.995631,-6.083510,-8.040060,-7.529205,5.983924,2.049886,-1.731731,-2.330208,-8.589146,2.167143,-3.524121,-3.206280,4.825127,9.385979,4.437472,3.222736,-5.708951], dtype = "float32")#candidate|2488|(96,)|const|float32
var_2489 = relay.var("var_2489", dtype = "float32", shape = (8, 196))#candidate|2489|(8, 196)|var|float32
call_2487 = relay.TupleGetItem(func_2186_call(relay.reshape(const_2488.astype('float32'), [2, 16, 3]), relay.reshape(const_2488.astype('float32'), [2, 16, 3]), relay.reshape(var_2489.astype('float32'), [1568,]), ), 4)
call_2490 = relay.TupleGetItem(func_2191_call(relay.reshape(const_2488.astype('float32'), [2, 16, 3]), relay.reshape(const_2488.astype('float32'), [2, 16, 3]), relay.reshape(var_2489.astype('float32'), [1568,]), ), 4)
output = relay.Tuple([bop_2456,bop_2478,call_2487,const_2488,var_2489,])
output2 = relay.Tuple([bop_2456,bop_2478,call_2490,const_2488,var_2489,])
func_2492 = relay.Function([var_2454,var_2489,], output)
mod['func_2492'] = func_2492
mod = relay.transform.InferType()(mod)
mutated_mod['func_2492'] = func_2492
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2492_call = mutated_mod.get_global_var('func_2492')
var_2494 = relay.var("var_2494", dtype = "int64", shape = (6, 7, 10))#candidate|2494|(6, 7, 10)|var|int64
var_2495 = relay.var("var_2495", dtype = "float32", shape = (8, 196))#candidate|2495|(8, 196)|var|float32
call_2493 = func_2492_call(var_2494,var_2495,)
output = call_2493
func_2496 = relay.Function([var_2494,var_2495,], output)
mutated_mod['func_2496'] = func_2496
mutated_mod = relay.transform.InferType()(mutated_mod)
var_2605 = relay.var("var_2605", dtype = "float32", shape = (4, 3, 12))#candidate|2605|(4, 3, 12)|var|float32
uop_2606 = relay.log(var_2605.astype('float32')) # shape=(4, 3, 12)
output = relay.Tuple([uop_2606,])
output2 = relay.Tuple([uop_2606,])
func_2624 = relay.Function([var_2605,], output)
mod['func_2624'] = func_2624
mod = relay.transform.InferType()(mod)
mutated_mod['func_2624'] = func_2624
mutated_mod = relay.transform.InferType()(mutated_mod)
var_2625 = relay.var("var_2625", dtype = "float32", shape = (4, 3, 12))#candidate|2625|(4, 3, 12)|var|float32
func_2624_call = mutated_mod.get_global_var('func_2624')
call_2626 = func_2624_call(var_2625)
output = call_2626
func_2627 = relay.Function([var_2625], output)
mutated_mod['func_2627'] = func_2627
mutated_mod = relay.transform.InferType()(mutated_mod)
const_2667 = relay.const([[[2.555168,7.306751,-4.540421,-4.932564,-7.900627],[4.552613,6.686161,-1.378086,0.713054,-8.646454],[6.757206,0.652947,-0.199222,0.175078,0.546154],[9.273315,4.378813,-7.825887,-3.379408,1.341772],[-2.556518,-1.798724,8.229522,4.147374,0.609653],[-4.591512,-0.976729,5.192696,-4.214192,-2.091788],[9.569086,-0.550870,-2.410849,2.892291,9.329642]],[[-0.270463,8.651566,-6.290188,6.109692,2.044905],[0.035308,8.319056,-7.172695,-1.981953,9.020708],[-0.223233,-4.840504,-3.915483,0.812604,7.688262],[-1.964244,2.842802,9.462744,-7.073772,5.659423],[7.223153,-9.644274,-6.904364,-5.997842,7.826622],[-8.654529,-1.645235,4.955807,2.517292,-8.899691],[0.128545,-3.811632,-1.583294,-6.389340,1.477833]],[[3.240539,-9.754499,7.736252,-1.383501,6.223054],[-6.806319,9.571048,1.745095,5.634805,-5.140735],[5.779563,-9.564332,-8.235782,6.467344,7.949056],[-2.409158,-2.439562,-1.528211,5.624023,5.045857],[7.988449,-7.371083,-8.562351,7.061204,7.516475],[-2.334205,1.638788,-7.011207,3.333354,9.948700],[-2.767775,0.747581,-9.521065,9.799068,-8.599132]],[[2.185687,-2.281333,5.406631,5.334824,-2.322626],[-5.892301,7.576813,0.442776,9.216787,-0.694960],[4.048925,-6.655260,1.734787,9.137381,-5.776666],[0.483875,8.214160,-2.905956,-6.389939,2.972196],[-3.981368,0.496437,9.628852,4.775271,-4.256464],[5.998189,7.055683,-6.042376,8.300727,2.263134],[-9.405167,8.297627,-8.516299,-1.276216,3.364439]],[[7.142104,8.227509,4.723264,1.611041,6.381130],[-4.453310,1.339984,-2.798001,-1.502202,3.726391],[3.828815,-3.542422,5.751210,-7.737232,-9.989767],[0.124111,9.351839,-3.038250,-8.180548,-2.459816],[8.750898,-2.055123,-2.366321,3.347943,-4.250384],[-6.029320,-8.892142,-8.047536,3.875164,5.488094],[-8.107571,2.427536,8.039111,3.751136,1.981402]]], dtype = "float32")#candidate|2667|(5, 7, 5)|const|float32
uop_2668 = relay.cosh(const_2667.astype('float32')) # shape=(5, 7, 5)
output = uop_2668
output2 = uop_2668
func_2676 = relay.Function([], output)
mod['func_2676'] = func_2676
mod = relay.transform.InferType()(mod)
mutated_mod['func_2676'] = func_2676
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2676_call = mutated_mod.get_global_var('func_2676')
call_2677 = func_2676_call()
output = call_2677
func_2678 = relay.Function([], output)
mutated_mod['func_2678'] = func_2678
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2676_call = mod.get_global_var('func_2676')
func_2678_call = mutated_mod.get_global_var('func_2678')
call_2726 = func_2676_call()
call_2727 = func_2676_call()
uop_2739 = relay.sigmoid(call_2726.astype('float32')) # shape=(5, 7, 5)
uop_2741 = relay.sigmoid(call_2727.astype('float32')) # shape=(5, 7, 5)
uop_2747 = relay.acos(uop_2739.astype('float64')) # shape=(5, 7, 5)
uop_2749 = relay.acos(uop_2741.astype('float64')) # shape=(5, 7, 5)
func_2676_call = mod.get_global_var('func_2676')
func_2678_call = mutated_mod.get_global_var('func_2678')
call_2759 = func_2676_call()
call_2760 = func_2676_call()
func_141_call = mod.get_global_var('func_141')
func_145_call = mutated_mod.get_global_var('func_145')
const_2763 = relay.const([0.737586,-7.122329,-1.004609,-2.190373,2.600041,0.237293,0.461251,1.810599,-0.444574,-7.555362,3.409026,0.363532,2.575881,-5.259672,-2.308604,8.363788,-1.932490,8.515065,2.056341,0.482310,5.278303,1.758048,4.410185,-0.955383,3.330785,2.927072,8.018627,-1.745992,-1.145182,-6.795048,0.873642,1.763614,4.733314,-3.016719,-5.186110,5.348707,4.890519,-6.459725,-5.562442,-3.080224,4.328156,-6.724864,2.410209,7.238886,3.122240,-2.692576,0.236208,-9.342828,3.279005,3.483199,1.772019,5.271147,5.796811,8.187508,-9.477872,-9.408901,2.019444,2.347476,5.417790,-9.792243,-3.634953,2.056723,-7.159412,-0.129116,5.481613,7.885957,-4.333611,6.077982,-3.011648,2.813887,-4.580891,-1.775709,0.389582,-9.699129,1.158641,4.739327,-8.646721,3.755493,9.801170,-0.444959,-3.597999,2.068648,-3.644073,-6.315465,3.033141,-4.694350,9.239450,6.727841,-8.567162,-5.747200,-1.818563,9.753728,-1.507420,-6.024375,-8.345501,-0.981594,-9.092958,3.259212,-7.339800,-2.451536,-8.219712,-7.091262,2.886036,-3.781282,3.426071,7.746198,-1.103745,-4.141379,-6.045629,-5.745593,1.041412,4.917831,-3.459351,1.226606,-4.448966,-1.212993,-7.413264,8.042979,-2.116269,4.781437,-4.974353,-2.820908,9.612536,6.786690,6.792345,-5.067090,1.600643,-7.695800,-7.429172,-1.878297,2.148455,5.760021,6.752872,-8.649900,-4.628565,-0.984479,-3.476093,-0.316533,3.136398,8.215920,1.466743,-8.241466,3.308432,6.184909,-7.700884,3.386919,-4.866070,4.952486,8.442056,-6.153670,4.814105,-7.856667,8.494040,7.585808,-4.210937,8.246613,-1.901924,-7.496463,-3.091691,6.602726,-2.787157,3.536772,-6.682482,-1.589601,-2.469028,2.973128,9.625229,2.461468,-8.085364,-2.546650,-7.981697,8.370983,9.358434,-7.831482,3.293520,-7.566010,-3.329205,-8.948097,-0.672654,-5.129741,5.876652,-3.528689,3.110827,4.484916,-7.668099,5.203039,2.975055,2.240482,-4.664703,2.746256,4.778806,2.269623,3.380467,-6.278492,6.260789,-5.303479,0.859678,1.290342,-5.806600,-9.236426,-6.797025,2.612566,-1.341075,-0.506331,5.431587,-1.646855,0.456539,-2.056984,-9.670774,-5.193455,-6.851427,-3.189107,4.501915,-4.994376,4.770283,-2.567877,-6.667770,3.897449,-1.760047,-2.277268,1.543843,6.589225,-8.280977,6.391362,-8.355883,-4.047878,-6.299710,-7.049431,7.858253,-4.202987,-5.745070,-8.070194,-2.678221,8.986215,-0.095045,-1.649240,4.974788,-1.042083,-3.190111,-0.301956,-1.358468,3.227056,2.989996,-2.087869,-3.001322,5.072843,-0.881321,-7.616104,-5.762420,5.217340,4.409045,-6.234225,7.350374,-5.138061,1.286703,9.840478,-8.992912,-5.643775,-2.680740,-8.839976,1.999056,3.712178,1.193775,4.586569,-6.203516,-8.260545,-1.326088,-6.167487,-4.190529,1.196774,1.368451,3.502633,7.197306,6.093644,-1.725097,4.286848,-5.257103,1.687382,-5.130807,9.612706,-9.806522,-8.902272,-4.243008,-8.046174,8.418939,-9.657769,-2.210600,-2.414930,-3.628247,-4.386804,4.054028,-6.258771,-2.842313,-3.929654,-6.389127,4.117404,3.942669,-6.974611,-8.591872,-2.377028,-9.132639,-1.844819,-6.850348,8.344960,8.602105,-3.886843,8.991467,-3.335819,-5.340600,-5.684822,-4.743874,4.652829,6.431293,4.979680,6.375041,4.555501,5.560542,-1.002886,8.971089,-3.803145,1.130433,9.230406,1.385856,5.086879,-3.238395,8.375524,3.525957,5.598886,-8.733682,7.955763,-3.771514,1.055811,-8.340771,-8.357694,7.027704,-0.080061,4.569412,4.039658,5.735929,-0.514772,-5.771540,-5.532017,9.376276,-7.817603,0.724554,5.303680,1.479955,7.180921,-3.059436,6.331337,-9.233882,9.335430,3.231356,-7.654201,1.513079,4.174689,-1.711701,0.070024,1.980296,2.153402,3.213574,-9.187018,-6.530242,6.234975,4.271290,-6.629302,-6.163454,0.408881,5.604191,4.867010,3.559089,-8.212633,-7.006653,4.037514,-1.681924,-9.174926,2.437563,-4.551129,-3.953044,-1.986917,-7.781539,0.972078,-1.214021,-3.488531,8.586419,-6.547386,-2.441259,-7.490565,0.113046,-0.092107,3.568036,3.709083,-5.743044,-0.686351,5.080524,-9.496374,8.289392,9.188822,2.998310,7.847746,5.328209,9.742290,0.352294,-9.291485,2.381934,-9.438206,-2.949250,1.815030,3.917894,5.636570,-3.685738,-9.874384,-9.879659,-4.764548,8.883695,-0.655979,2.402580,3.886050,0.397041,4.388395,-7.167931,3.505901,-2.491232,2.968155,-4.931922,-3.219149,9.849276,8.866899,-8.389189,5.073865,5.281494,-4.155481,3.417984,8.277897,-1.469259,5.399146,-8.093719,6.140611,1.581513,-1.116697,8.727966,-3.361454,5.533090,-7.731958,2.114540,-8.232453,4.434533,-1.624575,-2.582617,-8.605990,-1.169626,1.584778,-2.415068,0.383532,-5.608876,-3.740950,8.738060,-6.061201,-9.839669,-7.732639,-5.775966,-2.967640,-7.629355,-7.047459,9.106380,5.204970,-6.440888,-4.721031,9.422276,-5.991128,-1.735955,6.663008,4.371988,-6.107829,8.465939,-4.821753,3.593196,6.617985,1.117012,-7.158733,-0.073002,-0.496237,0.562356,-9.620205,9.876497,-9.497377,6.548780,2.132652,0.706628,-1.232639,-3.923897,-2.530340,4.180188,5.317015,7.142144,0.360435,9.623682,-1.175070,8.010165,9.960414,0.212231,-3.775674,-9.433838,3.993721,4.449691,-0.453575,-9.212900,-6.107842,-1.132155,-9.644488,4.020274,-0.979651,-8.377023,2.931521,7.554655,-2.763624,-6.443308,6.128840,-3.157128,-4.429435,-5.929591,2.301059,6.143439,-6.657180,-4.535719,2.872969,5.830975,-8.679972,-6.708654,8.602670,2.488304,-4.443002,-5.131589,-0.144462,8.974764,-3.797349,1.099801,-3.551533,1.978921,-6.310335,-5.393621,-9.711965,2.551038,7.124694,-5.422949,5.821413,-9.766182,-2.940800,5.228439,2.307584,1.360317,-9.766722,3.819337,-8.354948,-1.442427,-8.639260,-0.823306,-0.888767,-0.007324,-0.027990], dtype = "float64")#candidate|2763|(560,)|const|float64
call_2762 = func_141_call(relay.reshape(const_2763.astype('float64'), [5, 7, 16]), relay.reshape(const_2763.astype('float64'), [5, 7, 16]), )
call_2764 = func_141_call(relay.reshape(const_2763.astype('float64'), [5, 7, 16]), relay.reshape(const_2763.astype('float64'), [5, 7, 16]), )
output = relay.Tuple([uop_2747,call_2759,call_2762,const_2763,])
output2 = relay.Tuple([uop_2749,call_2760,call_2764,const_2763,])
func_2786 = relay.Function([], output)
mod['func_2786'] = func_2786
mod = relay.transform.InferType()(mod)
output = func_2786()
func_2787 = relay.Function([], output)
mutated_mod['func_2787'] = func_2787
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2676_call = mod.get_global_var('func_2676')
func_2678_call = mutated_mod.get_global_var('func_2678')
call_2791 = func_2676_call()
call_2792 = func_2676_call()
uop_2810 = relay.tan(call_2791.astype('float32')) # shape=(5, 7, 5)
uop_2812 = relay.tan(call_2792.astype('float32')) # shape=(5, 7, 5)
uop_2819 = relay.log(uop_2810.astype('float32')) # shape=(5, 7, 5)
uop_2821 = relay.log(uop_2812.astype('float32')) # shape=(5, 7, 5)
uop_2839 = relay.sin(uop_2810.astype('float32')) # shape=(5, 7, 5)
uop_2841 = relay.sin(uop_2812.astype('float32')) # shape=(5, 7, 5)
output = relay.Tuple([uop_2819,uop_2839,])
output2 = relay.Tuple([uop_2821,uop_2841,])
func_2856 = relay.Function([], output)
mod['func_2856'] = func_2856
mod = relay.transform.InferType()(mod)
output = func_2856()
func_2857 = relay.Function([], output)
mutated_mod['func_2857'] = func_2857
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2856_call = mod.get_global_var('func_2856')
func_2857_call = mutated_mod.get_global_var('func_2857')
call_2922 = relay.TupleGetItem(func_2856_call(), 1)
call_2923 = relay.TupleGetItem(func_2857_call(), 1)
func_2676_call = mod.get_global_var('func_2676')
func_2678_call = mutated_mod.get_global_var('func_2678')
call_2928 = func_2676_call()
call_2929 = func_2676_call()
bop_2935 = relay.subtract(call_2922.astype('int64'), relay.reshape(call_2928.astype('int64'), relay.shape_of(call_2922))) # shape=(5, 7, 5)
bop_2938 = relay.subtract(call_2923.astype('int64'), relay.reshape(call_2929.astype('int64'), relay.shape_of(call_2923))) # shape=(5, 7, 5)
uop_2939 = relay.asinh(call_2928.astype('float64')) # shape=(5, 7, 5)
uop_2941 = relay.asinh(call_2929.astype('float64')) # shape=(5, 7, 5)
output = relay.Tuple([bop_2935,uop_2939,])
output2 = relay.Tuple([bop_2938,uop_2941,])
func_2949 = relay.Function([], output)
mod['func_2949'] = func_2949
mod = relay.transform.InferType()(mod)
output = func_2949()
func_2950 = relay.Function([], output)
mutated_mod['func_2950'] = func_2950
mutated_mod = relay.transform.InferType()(mutated_mod)
var_2955 = relay.var("var_2955", dtype = "float64", shape = (2, 14, 10))#candidate|2955|(2, 14, 10)|var|float64
uop_2956 = relay.cosh(var_2955.astype('float64')) # shape=(2, 14, 10)
output = uop_2956
output2 = uop_2956
func_2985 = relay.Function([var_2955,], output)
mod['func_2985'] = func_2985
mod = relay.transform.InferType()(mod)
var_2986 = relay.var("var_2986", dtype = "float64", shape = (2, 14, 10))#candidate|2986|(2, 14, 10)|var|float64
output = func_2985(var_2986)
func_2987 = relay.Function([var_2986], output)
mutated_mod['func_2987'] = func_2987
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2786_call = mod.get_global_var('func_2786')
func_2787_call = mutated_mod.get_global_var('func_2787')
call_3050 = relay.TupleGetItem(func_2786_call(), 2)
call_3051 = relay.TupleGetItem(func_2787_call(), 2)
output = call_3050
output2 = call_3051
func_3055 = relay.Function([], output)
mod['func_3055'] = func_3055
mod = relay.transform.InferType()(mod)
mutated_mod['func_3055'] = func_3055
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3055_call = mutated_mod.get_global_var('func_3055')
call_3056 = func_3055_call()
output = call_3056
func_3057 = relay.Function([], output)
mutated_mod['func_3057'] = func_3057
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2676_call = mod.get_global_var('func_2676')
func_2678_call = mutated_mod.get_global_var('func_2678')
call_3060 = func_2676_call()
call_3061 = func_2676_call()
output = call_3060
output2 = call_3061
func_3066 = relay.Function([], output)
mod['func_3066'] = func_3066
mod = relay.transform.InferType()(mod)
output = func_3066()
func_3067 = relay.Function([], output)
mutated_mod['func_3067'] = func_3067
mutated_mod = relay.transform.InferType()(mutated_mod)
var_3085 = relay.var("var_3085", dtype = "int8", shape = (5, 15, 13))#candidate|3085|(5, 15, 13)|var|int8
const_3086 = relay.const([[[2,7,-6,-6,-1,-6,3,6,10,3,-9,-2,4],[-10,3,-1,1,10,5,10,5,10,3,-5,7,-4],[-2,-5,-10,7,4,8,-8,-5,-4,-6,8,-8,-1],[5,8,-6,-8,1,6,1,8,5,8,8,2,5],[-1,4,6,1,1,-6,-10,6,7,-6,-9,-10,3],[-2,-3,9,-10,5,2,-9,7,1,4,-3,-7,5],[-4,-4,2,-1,3,-8,-3,-8,-1,2,-2,-5,-2],[-7,-1,-4,7,1,-4,-6,-2,-9,-9,4,3,8],[-8,-2,-3,-9,1,-9,-3,-10,3,-5,10,4,10],[9,-1,-9,-2,-9,-3,-9,-4,-5,-1,6,-10,-2],[5,-10,-3,8,-6,3,1,-2,2,9,2,-5,-8],[6,1,6,2,-1,-5,-9,8,-8,7,3,1,-5],[5,-3,-10,9,-7,-7,3,5,9,-8,9,-7,-3],[-4,-4,7,-1,-2,-1,4,8,-8,1,8,9,-8],[1,5,-10,8,9,3,6,-1,-8,5,-8,8,6]],[[9,1,6,-5,-6,7,8,1,-6,-1,-4,-5,7],[-1,1,1,5,-7,6,9,8,-7,-3,-10,-5,-9],[-1,7,-6,-3,6,-8,9,-1,9,8,7,6,4],[-1,8,-8,-4,5,5,-8,-5,1,2,-9,-3,10],[2,2,-1,-7,-4,-8,-3,-10,-2,-9,-7,-10,-4],[1,6,9,-7,-8,-5,9,-1,10,1,-10,2,-9],[2,7,-8,3,-10,-4,5,-7,-6,-10,5,-10,-1],[9,-2,2,8,9,-6,2,7,2,7,-2,10,-9],[-3,-1,-1,-10,1,-8,9,-6,10,-10,-3,10,-6],[4,-4,2,6,-4,6,-2,5,-7,-7,-1,3,5],[6,8,6,9,-9,-1,-4,1,-10,8,-3,10,-10],[-7,2,10,5,-1,2,-5,3,-5,1,-9,-9,6],[6,3,7,-8,2,-9,8,2,-2,-10,-4,-3,10],[-6,1,-2,10,-2,7,-5,9,-8,4,6,8,2],[-10,-7,-7,1,6,4,1,2,7,7,-1,-5,-8]],[[2,9,-7,1,1,-10,-9,-8,-2,-10,-6,-2,-6],[-1,-10,2,-4,8,-9,-9,10,-3,-6,1,-7,-4],[9,-10,-9,-4,10,10,6,-7,-8,3,4,6,-6],[-9,5,8,9,9,-8,6,-8,2,-6,-6,5,-2],[-7,10,5,-6,3,6,-1,10,5,-7,-2,-6,-8],[-3,-4,-2,5,-4,-1,1,-6,6,2,-7,1,10],[3,-4,-10,3,-1,-7,-7,7,3,4,4,7,7],[3,-9,5,-10,-4,3,-6,-2,-3,4,-9,-5,-6],[-6,-7,6,2,2,7,6,4,-7,-6,-3,-10,-8],[-4,3,-3,3,-1,-9,-2,2,-5,-1,10,7,-6],[4,7,-4,-4,-1,5,9,10,-1,-9,4,-3,-10],[10,8,8,-6,5,-6,-9,8,-10,2,-2,-6,7],[-2,-2,1,10,2,5,-2,7,9,-4,10,5,8],[4,-10,-2,1,-7,-8,4,-6,5,9,-6,8,7],[-6,1,-2,7,-5,-6,-3,-9,-1,-10,-3,-3,-8]],[[1,8,3,4,7,-8,8,5,10,-7,10,3,5],[4,-8,-6,8,1,-10,-5,1,-3,-9,-4,-6,-7],[1,6,-5,3,-3,-2,-4,2,6,-3,3,5,-4],[-10,-10,-7,-8,-6,-3,6,-9,-9,-1,-9,10,-5],[9,6,1,-4,-4,3,-3,-5,-7,4,-9,-10,-4],[9,-10,9,-6,-3,-3,-9,7,9,10,-8,-2,4],[-5,-4,-1,5,9,1,8,-2,10,-8,-3,8,-8],[2,-1,3,-1,5,2,-5,3,-6,-9,-2,2,-5],[4,10,-2,-3,-1,8,-5,-7,-4,-10,10,8,8],[8,1,-7,-1,-8,-1,7,-1,-5,-10,5,-5,-3],[-3,-4,-2,-1,10,-9,-6,3,1,-1,-6,9,9],[10,-1,8,-3,-4,-7,-9,4,-9,8,-10,-3,-1],[9,5,-4,-3,7,10,6,-8,-1,-3,6,7,-3],[2,8,-4,-3,-5,3,3,-1,-3,-9,1,7,-6],[5,8,-2,5,6,-9,8,8,-3,-3,-6,-3,-5]],[[-6,10,7,5,3,-10,9,8,6,1,-7,-9,-9],[5,1,-6,-4,8,2,-1,-3,5,-8,8,-9,2],[-3,6,-7,6,3,-4,8,10,-7,7,1,-10,5],[7,-6,1,9,3,-8,-3,-1,-8,10,1,9,5],[-1,3,10,-1,-8,-6,-10,4,-6,-9,-5,-7,4],[-2,5,-5,10,-4,7,-9,-10,3,-5,-7,5,9],[-4,-6,-4,3,6,8,5,8,-9,-8,-3,-8,9],[1,-3,5,7,-8,-2,2,9,3,4,-8,10,4],[7,4,-9,-10,-7,10,8,7,-8,-7,-9,-5,-2],[5,-8,-7,-1,1,-8,-2,7,3,9,5,-10,-6],[-3,-3,-3,6,9,6,-6,10,7,-1,4,-10,-5],[-2,-7,6,-7,-4,-9,-2,4,8,5,4,-2,8],[10,-2,-5,1,-1,2,6,-8,6,3,8,-2,1],[-6,-4,2,-2,-8,-9,9,-8,9,6,-10,7,-4],[5,7,3,-3,-8,10,1,9,9,-1,-10,10,8]]], dtype = "int8")#candidate|3086|(5, 15, 13)|const|int8
bop_3087 = relay.minimum(var_3085.astype('int8'), relay.reshape(const_3086.astype('int8'), relay.shape_of(var_3085))) # shape=(5, 15, 13)
func_1514_call = mod.get_global_var('func_1514')
func_1518_call = mutated_mod.get_global_var('func_1518')
var_3094 = relay.var("var_3094", dtype = "float64", shape = (3, 1))#candidate|3094|(3, 1)|var|float64
var_3095 = relay.var("var_3095", dtype = "float64", shape = (40,))#candidate|3095|(40,)|var|float64
call_3093 = relay.TupleGetItem(func_1514_call(relay.reshape(var_3094.astype('float64'), [3, 1, 1]), relay.reshape(var_3095.astype('float64'), [40,]), ), 2)
call_3096 = relay.TupleGetItem(func_1518_call(relay.reshape(var_3094.astype('float64'), [3, 1, 1]), relay.reshape(var_3095.astype('float64'), [40,]), ), 2)
output = relay.Tuple([bop_3087,call_3093,var_3094,var_3095,])
output2 = relay.Tuple([bop_3087,call_3096,var_3094,var_3095,])
func_3105 = relay.Function([var_3085,var_3094,var_3095,], output)
mod['func_3105'] = func_3105
mod = relay.transform.InferType()(mod)
var_3106 = relay.var("var_3106", dtype = "int8", shape = (5, 15, 13))#candidate|3106|(5, 15, 13)|var|int8
var_3107 = relay.var("var_3107", dtype = "float64", shape = (3, 1))#candidate|3107|(3, 1)|var|float64
var_3108 = relay.var("var_3108", dtype = "float64", shape = (40,))#candidate|3108|(40,)|var|float64
output = func_3105(var_3106,var_3107,var_3108,)
func_3109 = relay.Function([var_3106,var_3107,var_3108,], output)
mutated_mod['func_3109'] = func_3109
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2676_call = mod.get_global_var('func_2676')
func_2678_call = mutated_mod.get_global_var('func_2678')
call_3148 = func_2676_call()
call_3149 = func_2676_call()
const_3151 = relay.const([[[6.549677,-2.804997,-1.007719,2.686468,4.123917],[5.056941,9.299625,1.690215,0.731827,-7.176843],[5.944060,-6.218028,-2.294189,3.928352,3.566419],[3.142792,-7.054479,-3.084575,-4.727547,-5.904301],[-8.514967,-6.831949,-8.987558,5.590668,8.405349],[-3.875891,8.409871,-7.220711,-0.487328,6.077492],[-7.204433,0.815099,5.436350,-5.204795,4.246221]],[[0.027627,-3.294339,0.392315,0.521981,-5.720220],[-4.147500,3.997937,-0.340659,5.343376,1.425636],[-0.540559,8.077430,-0.065140,8.626256,8.558741],[2.799612,-2.889473,-5.804297,7.156053,-4.052041],[-0.456947,-8.255741,1.596687,4.843508,-0.310871],[7.632376,4.025760,-1.213860,5.706356,-7.979066],[-1.751115,-0.801311,2.267707,-4.642751,-2.240164]],[[2.876624,2.596645,4.383170,-8.499224,0.885590],[1.299996,4.315962,-9.514010,2.901187,2.372700],[-6.309003,2.045895,-3.648218,9.042046,5.162269],[4.773251,-5.567406,1.651275,5.694248,-1.375596],[-6.191115,-3.059885,-1.600508,7.747636,-7.645958],[7.223147,-4.356185,2.162178,-6.597061,7.828294],[2.171317,-4.540168,1.156551,6.956191,8.721523]],[[0.078628,3.573326,9.319409,-4.007072,9.707035],[3.343906,8.078567,-1.853819,-0.354861,4.788799],[-8.171770,-9.696713,-6.516234,-5.350178,7.146024],[-3.564423,5.880255,-7.182806,7.674641,8.326920],[0.791648,-4.165722,-9.622161,-1.764841,1.207410],[-0.584755,-2.596284,-6.190613,-4.921143,-6.683527],[-1.798447,3.396275,-2.539262,-9.229494,-6.841706]],[[0.106890,-0.419447,9.388713,-6.909784,3.196228],[2.686066,8.556528,-5.725648,1.691405,2.495947],[-1.225723,-3.589820,7.868251,2.224582,-2.544532],[-3.557035,-6.656965,0.628407,8.376237,8.142879],[5.302919,3.105835,-4.614950,-5.058160,-6.418781],[7.136069,0.616981,-7.920202,-8.107714,-8.273726],[-6.247935,-5.187426,0.682379,-0.905429,3.044039]]], dtype = "float32")#candidate|3151|(5, 7, 5)|const|float32
bop_3152 = relay.greater_equal(call_3148.astype('bool'), relay.reshape(const_3151.astype('bool'), relay.shape_of(call_3148))) # shape=(5, 7, 5)
bop_3155 = relay.greater_equal(call_3149.astype('bool'), relay.reshape(const_3151.astype('bool'), relay.shape_of(call_3149))) # shape=(5, 7, 5)
func_2949_call = mod.get_global_var('func_2949')
func_2950_call = mutated_mod.get_global_var('func_2950')
call_3157 = relay.TupleGetItem(func_2949_call(), 0)
call_3158 = relay.TupleGetItem(func_2950_call(), 0)
func_3055_call = mod.get_global_var('func_3055')
func_3057_call = mutated_mod.get_global_var('func_3057')
call_3161 = func_3055_call()
call_3162 = func_3055_call()
func_141_call = mod.get_global_var('func_141')
func_145_call = mutated_mod.get_global_var('func_145')
call_3170 = func_141_call(relay.reshape(call_3161.astype('float64'), [5, 7, 16]), relay.reshape(call_3161.astype('float64'), [5, 7, 16]), )
call_3171 = func_141_call(relay.reshape(call_3161.astype('float64'), [5, 7, 16]), relay.reshape(call_3161.astype('float64'), [5, 7, 16]), )
output = relay.Tuple([bop_3152,call_3157,call_3161,call_3170,])
output2 = relay.Tuple([bop_3155,call_3158,call_3162,call_3171,])
func_3184 = relay.Function([], output)
mod['func_3184'] = func_3184
mod = relay.transform.InferType()(mod)
output = func_3184()
func_3185 = relay.Function([], output)
mutated_mod['func_3185'] = func_3185
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3066_call = mod.get_global_var('func_3066')
func_3067_call = mutated_mod.get_global_var('func_3067')
call_3239 = func_3066_call()
call_3240 = func_3066_call()
const_3261 = relay.const([[[-0.508754,5.917265,-6.420600,-7.686517,-2.898873],[0.565696,-1.055189,6.952520,-1.149687,0.820366],[6.454916,-8.297921,-2.963401,-2.280015,-0.544751],[7.078283,-6.741823,-8.256770,-2.792783,-7.812769],[4.837983,8.256126,-4.720572,5.694654,-1.682957],[0.790911,-2.967201,3.453849,1.201135,-7.604693],[-3.255179,-7.919789,6.945275,1.611369,-8.740871]],[[-1.967630,2.320388,1.458295,-5.528431,7.994001],[-9.733808,7.288922,-2.956308,3.552316,-3.784037],[9.132803,-5.305837,5.174379,-0.806234,6.417345],[-9.143551,-9.463678,2.299686,-6.975170,9.325388],[1.332035,-7.765938,-9.143883,0.025314,-5.076982],[-0.181182,-6.561816,-0.589019,-0.384807,8.957546],[3.229694,0.792984,7.285303,5.708019,5.246734]],[[1.225904,-4.109600,9.214765,-0.456788,3.643933],[-5.085115,-0.957260,-1.384294,-6.421999,-4.730263],[-1.798287,-4.770861,5.387579,3.255671,3.991231],[1.379682,1.905393,-3.614954,6.088239,9.482408],[9.011301,-0.196455,4.427042,-1.387329,9.150872],[3.061662,-8.160015,4.837072,3.502535,2.434628],[4.127031,-7.777019,-8.884869,1.180340,5.729513]],[[-2.179366,-6.735597,4.527884,9.470842,-4.169079],[-6.898163,8.462404,5.185036,-3.007863,3.526964],[5.457465,7.615069,1.836791,-0.587507,0.876822],[2.068710,-2.360058,-7.129526,2.827560,-9.816403],[-9.667993,8.379621,5.909948,-9.215943,-2.867395],[7.134875,7.755991,4.586102,8.989388,0.261407],[7.098078,-2.960645,3.147869,5.502650,4.255802]],[[-9.231677,-2.133823,9.844623,-2.000313,-3.675167],[5.073448,-3.457619,-3.951162,7.818337,5.137139],[-2.309324,4.418461,-3.246694,3.671045,-4.954209],[5.034935,-9.183728,-7.818338,-2.976470,7.718357],[7.559462,-7.727517,9.075080,3.233143,-5.406180],[-6.063645,-4.155575,-7.957358,-9.887538,-0.539067],[-5.323763,4.637229,-6.117326,-0.860029,-6.401614]]], dtype = "float32")#candidate|3261|(5, 7, 5)|const|float32
bop_3262 = relay.less(call_3239.astype('bool'), relay.reshape(const_3261.astype('bool'), relay.shape_of(call_3239))) # shape=(5, 7, 5)
bop_3265 = relay.less(call_3240.astype('bool'), relay.reshape(const_3261.astype('bool'), relay.shape_of(call_3240))) # shape=(5, 7, 5)
func_141_call = mod.get_global_var('func_141')
func_145_call = mutated_mod.get_global_var('func_145')
const_3269 = relay.const([-9.596112,0.749432,4.449226,1.691268,-5.113602,9.000142,-4.337411,4.399503,-5.659279,2.646642,-4.326426,9.630217,2.211961,7.791039,-2.760977,-2.326419,6.238589,9.134372,-8.778777,-7.004373,-4.179755,-2.850628,-1.462036,9.978073,0.482741,-6.949062,-5.321881,2.708804,6.914815,-9.795991,-0.769918,3.745323,-6.482604,1.889741,0.694846,5.474032,7.045140,-8.430191,9.046224,-7.056046,-9.158249,8.440492,-6.921132,-9.965715,6.564171,9.640989,5.740241,-4.202970,5.208659,-0.733056,6.220914,-7.866070,5.378589,7.938661,-8.184959,3.232970,-6.394747,9.218024,-1.283734,5.398762,-7.489831,8.962858,9.292320,-9.796812,5.898145,9.501536,-2.874150,7.869090,-5.258527,3.012123,-4.353740,3.106336,3.415534,0.459084,-6.721143,3.301475,0.902066,-1.379592,-6.349320,5.393255,0.002325,9.616443,-4.615767,8.384611,8.092803,-0.257403,8.027152,-6.112573,-8.159162,-3.489513,-5.414934,-1.507960,0.549022,-6.092392,7.365027,2.623931,-1.626030,-7.179459,-5.233418,5.331774,-7.977245,3.404740,2.283433,-7.817035,-3.230903,-0.713227,0.472588,-3.847413,8.541154,-6.601296,7.554877,4.149070,-3.031568,-4.203875,9.491501,-8.230043,7.023355,-8.254282,-2.334258,1.507334,4.691264,4.465804,-0.790609,5.606440,1.733971,-2.393701,-7.989947,-8.921230,9.004208,7.291361,5.196550,0.124474,5.725937,1.511655,-9.860402,-5.913261,5.279807,-1.790911,-5.717443,9.090146,-1.512074,-6.964571,-5.072480,0.375066,7.006994,-0.063861,8.078470,-5.171104,8.706277,-5.533876,-6.089647,-8.304739,-0.732579,1.270451,-8.086083,-3.141333,-0.441201,8.592304,-8.959761,-7.680858,3.490918,-6.974658,-3.798802,-8.425813,-6.655473,-5.602318,6.060358,-3.974112,9.222573,-4.186356,6.624784,-6.102391,0.819353,-8.114600,6.277810,-9.512849,2.016603,4.493315,3.700946,-6.299059,-3.335959,-4.868799,5.116722,5.577780,-6.887893,-9.589915,8.295381,0.051340,1.073024,-6.495236,-5.468892,6.763947,0.936834,-1.005111,-6.309704,-6.774152,2.899132,0.839759,-7.772949,2.566420,-8.467502,-8.026453,3.195775,2.836711,8.638022,3.277334,-5.415742,9.754997,1.688345,-5.418517,-5.919592,-2.643437,8.614203,-5.880545,-8.610756,-9.323320,-1.835250,-2.577622,-2.144070,-4.630911,2.834703,7.626655,-2.266786,5.402534,-0.929342,-9.665998,2.120923,-9.753382,-9.290979,-7.186989,0.518110,3.605477,5.376874,2.900427,1.821360,5.512319,8.813262,-3.015750,2.093935,2.728763,5.352043,5.208996,-6.887377,5.826498,-9.833803,5.697417,-8.675100,1.703669,6.354837,6.808841,-2.185776,9.526701,-2.858013,-0.957706,-9.937015,9.827368,3.188626,-3.686659,4.458210,-2.918667,7.053651,3.456228,-0.477136,8.359637,3.412256,3.989591,4.644192,8.958604,-6.406797,3.988680,6.097616,8.588008,5.982943,-9.095846,7.103338,0.203656,-5.161470,7.996287,7.537264,-6.163859,7.189710,5.420602,8.348810,-1.350557,-8.364022,-1.968127,0.926136,-2.227218,9.893761,0.209373,1.954394,2.470685,1.311976,-3.015036,0.925937,2.647995,-7.802658,0.473215,7.566493,-7.390238,9.842967,0.204658,-7.116116,-6.282650,-7.973610,-0.530737,-6.483119,6.225795,-5.429554,-8.935094,9.867451,5.025590,-9.114119,1.017956,-7.635143,7.358260,-7.785391,-8.754655,-1.269013,-2.384679,-4.373887,-1.542268,-4.191363,-4.902587,-3.372157,-6.524303,-9.821058,7.919432,-6.804972,-4.537883,-1.028081,-1.530315,-6.102135,8.188816,1.394054,0.767655,7.440428,-7.390324,-3.139784,-0.689403,-6.980653,-9.829892,-0.785578,9.124604,-8.767506,-8.365355,-0.304220,6.600584,9.308593,1.160733,-1.482175,3.962825,8.758276,2.045104,-6.657192,-0.288172,-5.699199,-0.410353,-2.881925,2.980244,9.900493,-6.503577,-0.868393,6.389954,-2.322492,2.703358,8.382134,-5.686186,-5.969236,-6.280848,-2.437271,9.302404,2.587677,9.184896,-0.339451,-5.390881,-7.418519,8.545017,-7.105799,4.695471,1.748219,9.006606,7.604793,4.994610,7.237287,-6.533161,-7.259777,-9.778898,6.572597,-1.335425,-4.986527,-9.867438,1.159926,-4.733733,-6.782161,-7.948126,-4.236387,-3.232961,-8.296052,8.981089,-6.139533,7.034001,-4.070134,-8.823730,6.060425,1.475117,-0.078680,6.233767,8.058769,7.223333,9.858921,7.459252,-5.155325,0.363627,-3.674194,-8.107404,-0.606579,7.644324,-6.307837,8.024424,-4.236312,0.800878,-2.119016,-1.628886,-2.630463,8.044498,-4.096683,4.775548,-3.683973,9.847678,-8.060541,9.639280,0.087334,7.751577,0.654597,1.257432,9.036179,-0.057938,1.137037,9.893927,-2.967279,3.577602,8.245934,9.854391,8.928384,-8.936380,3.411523,4.510805,9.330574,-2.688673,8.055543,-9.676131,-3.983362,-3.526439,-0.886132,-7.937212,-7.377225,9.387857,-6.637194,3.535788,3.689073,1.869072,-1.429815,4.651838,7.466827,-1.800648,8.837435,1.945735,4.217501,-9.006335,4.725423,-7.369333,-9.052644,-0.489091,2.848953,9.868591,2.550893,4.762975,5.517040,0.068675,-0.464633,8.832035,4.840922,3.263127,-4.155315,-5.040433,-6.399991,5.870836,-2.086059,-5.033667,5.093805,-8.356917,-2.579027,-2.618477,-2.711729,7.206367,4.061109,-3.713620,0.836965,2.901198,6.787217,-9.958502,3.111084,8.367745,9.600899,7.349249,7.089492,5.374235,2.629902,1.441583,-9.127906,-8.329312,7.425738,-8.424705,-1.956794,-9.151449,5.652783,-0.587130,-0.520333,-0.454609,4.189175,-1.722554,3.605111,-8.998891,-6.131654,-9.408783,-6.684987,-0.969177,2.768597,9.799628,1.963832,-5.385153,-5.674919,0.470585,-2.559451,-6.452374,2.257885,-8.463639,-8.148423,9.492697,-8.174863,9.710745,-4.805600,-3.552087,-6.939878,3.943359,1.368519,-4.887440,-1.041030,-6.920434,5.186697,-0.238281,5.201049,6.438451,-9.191977,-1.468379,-2.441791,8.640050,-2.993477,9.418961], dtype = "float64")#candidate|3269|(560,)|const|float64
call_3268 = func_141_call(relay.reshape(const_3269.astype('float64'), [5, 7, 16]), relay.reshape(const_3269.astype('float64'), [5, 7, 16]), )
call_3270 = func_141_call(relay.reshape(const_3269.astype('float64'), [5, 7, 16]), relay.reshape(const_3269.astype('float64'), [5, 7, 16]), )
func_1599_call = mod.get_global_var('func_1599')
func_1602_call = mutated_mod.get_global_var('func_1602')
const_3287 = relay.const([2.969926,0.945622,-9.698707,3.681856,8.180796,3.256910,-4.408299,2.136051,8.417201,-7.477145,-6.084075,-9.191828,-8.851352,-1.544819,9.349977,-9.060822,-7.410701,5.105920,8.630879,-5.135162,5.360757,-6.322945,-1.170605,2.024516,-8.689892,2.918788,-4.066260,-6.840111,4.554620,6.256659,6.840342,2.132022,5.666831,-9.997900,4.000408,2.211179,4.993008,-3.791326,9.542681,3.650558,6.289268,-6.544419,-0.882255,-4.740074,3.009169,4.867229,7.993647,-3.250281,9.018439,8.835651,8.678251,7.762003,3.869320,-9.973306,-0.634727,-0.850129,-0.557791,7.044404,0.708760,-4.362448,6.679831,2.711512,-8.053368,3.965801,3.725018,-0.030897,0.203649,6.496421,2.417378,5.404737,9.409672,8.481290,6.886516,-3.483091,-7.204973,1.131754,-5.209472,7.837157,0.482717,-8.881227,7.558123,3.212882,9.351031,3.490630,9.189109,-8.613215,-3.914803,-3.474910,-0.414975,3.311828,-1.821384,0.497579,1.118258,8.768644,9.143906,1.260396,3.965579,-6.187649,6.373718,6.232736,-8.602673,8.437763,-7.273034,-4.886584,6.965835,7.135429,9.570931,-1.200927,2.144208,3.437577,-8.274561,-4.725650,5.247213,-9.397347,-2.885810,2.770478,8.977265,-4.531582,5.496879,-8.984848,-7.814936,-2.270893,-2.345096,-8.935915,-1.204250,3.134320,4.026706,-0.277330,-8.010859,6.289419,1.534843,1.555234,-6.140161,-9.440234,2.928611,-9.952982,-5.001015,5.245924,1.669244,6.021231,8.982929,-2.486690,-9.780163,6.992405,4.444783,1.327012,-0.082519,9.885537,-3.709106,-4.898117,7.003120,2.960934,4.416210,-5.400685,1.424568,-7.561793,-0.580109,4.469185,-8.907322,8.266008,4.134368,-7.310629,-7.581265,-4.924971,3.321394,-9.269247,4.088068,-0.786925,-6.575296,-8.037200,-5.295282,-2.039934,2.084340,8.637132,-0.149573,-6.047164,-0.141298,0.735572,-1.108728,4.046797,-1.966897,-5.811986,-9.009477,-5.004120,-6.452073,-2.999627,-5.759366,0.262154,-0.417190,8.049883,-8.839246,-2.675321,-6.743506,0.957871,-2.149171,-7.170500,-5.489215,-7.403039,2.589848,6.710137,7.727557,7.350101,-8.749867,-0.017133,9.285718,9.806568,1.938309,-9.074132,-9.019440,-9.705695,6.772931,8.237978,-6.834711,-3.801036,9.671557,3.162207,6.959941,-5.481322,1.556476,-8.456815,-1.232162,-8.432301,7.976064,2.200171,-8.465692,-9.322851,-7.861753,2.003011,-5.181740,-9.691826,0.473758,-7.071528,-4.965473,-4.844084,9.518126,7.886037,7.555618,0.101397,-2.769991,-3.095600,4.915792,-8.347863,-9.140872,-9.163103,4.893519,-4.898872,-3.886547,3.867671,1.523285,-3.493426,-2.276279,-1.124866,-6.245873,1.493638,-1.134714,1.992483,-5.823631,8.240254,-6.063834,1.321456,2.562772,-4.330164,4.726948,-2.984904,-8.167011,9.573623,-8.608686,-2.611703,-0.024947,-5.604458,5.502728,-8.599242,3.968670,-6.147536,2.320288,-7.845046,-3.870828,-6.077047,-2.645979,-4.249122,9.416217,-9.517062,-1.125637,-3.846362,-4.996969,1.177876,6.587008,3.219414,-4.842576,-9.009273,-8.600012,-9.075530,2.030737,-8.438105,9.000507,-4.358939,-0.279821,1.385245,8.039670,4.269530,-2.635518,8.444012,-4.800419,-6.572543,2.080970,-5.999298,3.411159,-9.443523,5.385654,5.370055,1.997084,-3.553759,-8.798265,-8.419532,4.036072,2.252836,8.740243,0.499931,2.779037,-9.540860,-1.579514,-9.095701,9.504831,9.885899,2.809566,2.005830,-9.179015,2.137495,7.223074,4.659495,8.679436,-6.280773,6.124911,5.177625,-6.091335,8.729092,-0.058841,-7.535234,-2.181440,5.957311,-2.119281,0.115393,-3.772312,2.186387,-5.567262,-5.953507,4.678452,-4.717117,9.292887,-2.030266,3.692926,-9.839856,2.347509,2.123093,-5.263612,-7.262994,-7.658653,-4.638228,-5.405626,-6.929687,-7.481593,-8.571162,-2.365924,-7.319194,-6.743714,4.155331,1.375971,-2.703202,-8.538774,-6.261099,-0.697493,-4.899190,-9.476877,2.835060,-1.866498,-4.835542,-4.740713,4.173341,5.107206,-7.148180,-8.341649,-8.209079,-0.301584,-5.382601,-8.483488,0.742248,5.396593,3.702410,-8.773731,-6.263414,1.278659,8.600276,-0.834224,-8.561878,5.965202,8.477201,-2.281165,0.224317,-3.398550,3.696149,-4.397679,2.798140,-4.096027,-4.093842,9.948950,-5.607177,3.606343,0.769303,-1.990589,9.269412,-4.345837,7.449037,-2.934329,8.917062,-8.240322,-3.790165,-3.171436,5.286986,-4.595046,1.510280,-3.520559,-8.706903,-9.329158,2.707879,8.083218,-2.193342,-1.172302,-1.957776,-3.911010,4.875012,1.866130,9.828461,-4.491955,-0.465763,-3.920629,-5.794901,7.135751,-7.840950,-2.329098,-2.543053,2.324843,-2.800227,-3.329375,-2.778890,-4.630996,-8.637123,6.543656,9.617852,-3.284527,1.557459,-1.884888,1.693981,-5.527086,2.709292,-0.786186,7.942699,-7.241334,4.577295,-8.736699,3.648142,3.564369,-3.957509,1.871088,-7.027051,-4.584794,4.790200,-2.837462,-3.267476], dtype = "float32")#candidate|3287|(468,)|const|float32
call_3286 = relay.TupleGetItem(func_1599_call(relay.reshape(const_3287.astype('float32'), [12, 13, 3])), 0)
call_3288 = relay.TupleGetItem(func_1602_call(relay.reshape(const_3287.astype('float32'), [12, 13, 3])), 0)
output = relay.Tuple([bop_3262,call_3268,const_3269,call_3286,const_3287,])
output2 = relay.Tuple([bop_3265,call_3270,const_3269,call_3288,const_3287,])
func_3291 = relay.Function([], output)
mod['func_3291'] = func_3291
mod = relay.transform.InferType()(mod)
output = func_3291()
func_3292 = relay.Function([], output)
mutated_mod['func_3292'] = func_3292
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3055_call = mod.get_global_var('func_3055')
func_3057_call = mutated_mod.get_global_var('func_3057')
call_3318 = func_3055_call()
call_3319 = func_3055_call()
output = call_3318
output2 = call_3319
func_3326 = relay.Function([], output)
mod['func_3326'] = func_3326
mod = relay.transform.InferType()(mod)
output = func_3326()
func_3327 = relay.Function([], output)
mutated_mod['func_3327'] = func_3327
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2786_call = mod.get_global_var('func_2786')
func_2787_call = mutated_mod.get_global_var('func_2787')
call_3328 = relay.TupleGetItem(func_2786_call(), 1)
call_3329 = relay.TupleGetItem(func_2787_call(), 1)
output = call_3328
output2 = call_3329
func_3341 = relay.Function([], output)
mod['func_3341'] = func_3341
mod = relay.transform.InferType()(mod)
output = func_3341()
func_3342 = relay.Function([], output)
mutated_mod['func_3342'] = func_3342
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3055_call = mod.get_global_var('func_3055')
func_3057_call = mutated_mod.get_global_var('func_3057')
call_3392 = func_3055_call()
call_3393 = func_3055_call()
var_3394 = relay.var("var_3394", dtype = "float64", shape = (5, 7, 16))#candidate|3394|(5, 7, 16)|var|float64
bop_3395 = relay.logical_xor(call_3392.astype('uint8'), relay.reshape(var_3394.astype('uint8'), relay.shape_of(call_3392))) # shape=(5, 7, 16)
bop_3398 = relay.logical_xor(call_3393.astype('uint8'), relay.reshape(var_3394.astype('uint8'), relay.shape_of(call_3393))) # shape=(5, 7, 16)
output = bop_3395
output2 = bop_3398
func_3407 = relay.Function([var_3394,], output)
mod['func_3407'] = func_3407
mod = relay.transform.InferType()(mod)
mutated_mod['func_3407'] = func_3407
mutated_mod = relay.transform.InferType()(mutated_mod)
var_3408 = relay.var("var_3408", dtype = "float64", shape = (5, 7, 16))#candidate|3408|(5, 7, 16)|var|float64
func_3407_call = mutated_mod.get_global_var('func_3407')
call_3409 = func_3407_call(var_3408)
output = call_3409
func_3410 = relay.Function([var_3408], output)
mutated_mod['func_3410'] = func_3410
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2676_call = mod.get_global_var('func_2676')
func_2678_call = mutated_mod.get_global_var('func_2678')
call_3442 = func_2676_call()
call_3443 = func_2676_call()
output = call_3442
output2 = call_3443
func_3445 = relay.Function([], output)
mod['func_3445'] = func_3445
mod = relay.transform.InferType()(mod)
mutated_mod['func_3445'] = func_3445
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3445_call = mutated_mod.get_global_var('func_3445')
call_3446 = func_3445_call()
output = call_3446
func_3447 = relay.Function([], output)
mutated_mod['func_3447'] = func_3447
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3055_call = mod.get_global_var('func_3055')
func_3057_call = mutated_mod.get_global_var('func_3057')
call_3468 = func_3055_call()
call_3469 = func_3055_call()
uop_3473 = relay.atan(call_3468.astype('float64')) # shape=(5, 7, 16)
uop_3475 = relay.atan(call_3469.astype('float64')) # shape=(5, 7, 16)
var_3482 = relay.var("var_3482", dtype = "float64", shape = (5, 7, 16))#candidate|3482|(5, 7, 16)|var|float64
bop_3483 = relay.less_equal(uop_3473.astype('bool'), relay.reshape(var_3482.astype('bool'), relay.shape_of(uop_3473))) # shape=(5, 7, 16)
bop_3486 = relay.less_equal(uop_3475.astype('bool'), relay.reshape(var_3482.astype('bool'), relay.shape_of(uop_3475))) # shape=(5, 7, 16)
bop_3493 = relay.bitwise_and(var_3482.astype('uint64'), relay.reshape(bop_3483.astype('uint64'), relay.shape_of(var_3482))) # shape=(5, 7, 16)
bop_3496 = relay.bitwise_and(var_3482.astype('uint64'), relay.reshape(bop_3486.astype('uint64'), relay.shape_of(var_3482))) # shape=(5, 7, 16)
func_1351_call = mod.get_global_var('func_1351')
func_1355_call = mutated_mod.get_global_var('func_1355')
const_3525 = relay.const([-3,1,-6,-4,10,9,-5,3,-8,6,-8,4,-2,-5,-10,-8,5,-8,2,-7,-3,4,1,-10,2,7,-6,-7,-1,-3,-7,5,-4,-5,3,9,-10,4,2,8,-9,-6,-5,-7,5,9,-3,-6,-7,3,2,-8,9,-4,7,7,-7,2,5,-10,9,4,6,-1,10,-3,-8,-5,-4,-9,10,-8,8,3,-9,-6,6,2,-10,3,7,-4,-8,3,9,4,8,8,-1,-3,-6,1,-1,-4,-6,-2,-4,9,5,-7,-5,-4,2,-1,5,-5,5,4,7,-8,4,5,6,1,7,8,8,5,5,3,1,2,-4,-1,-4,-5,7,-6,5,6,7,1,5,-5,1,-2,-8,8,3,-4,-8,-7,10,-10], dtype = "uint16")#candidate|3525|(144,)|const|uint16
const_3526 = relay.const([[-2.888291,-4.918686,1.105079,-8.296579,5.475661,-7.757488,7.266802,1.534074,-5.736088,9.044443,-9.022130,4.407589,-4.700710,-2.382040,9.574465,-2.134665,-6.002778,-3.706712,6.291948,2.593192,9.556928,-6.776921,0.647787,-8.914421,-8.432250,-6.478930,1.105930,-8.204788,-9.508109,-8.046986,-2.698856,7.229196,-7.986331,2.842917,5.769142,-1.672228,-1.177544,6.711816,-1.546540,7.065016]], dtype = "float64")#candidate|3526|(1, 40)|const|float64
call_3524 = relay.TupleGetItem(func_1351_call(relay.reshape(const_3525.astype('uint16'), [6, 4, 6]), relay.reshape(const_3525.astype('uint16'), [6, 4, 6]), relay.reshape(const_3526.astype('float64'), [40,]), ), 2)
call_3527 = relay.TupleGetItem(func_1355_call(relay.reshape(const_3525.astype('uint16'), [6, 4, 6]), relay.reshape(const_3525.astype('uint16'), [6, 4, 6]), relay.reshape(const_3526.astype('float64'), [40,]), ), 2)
output = relay.Tuple([bop_3493,call_3524,const_3525,const_3526,])
output2 = relay.Tuple([bop_3496,call_3527,const_3525,const_3526,])
func_3532 = relay.Function([var_3482,], output)
mod['func_3532'] = func_3532
mod = relay.transform.InferType()(mod)
mutated_mod['func_3532'] = func_3532
mutated_mod = relay.transform.InferType()(mutated_mod)
var_3533 = relay.var("var_3533", dtype = "float64", shape = (5, 7, 16))#candidate|3533|(5, 7, 16)|var|float64
func_3532_call = mutated_mod.get_global_var('func_3532')
call_3534 = func_3532_call(var_3533)
output = call_3534
func_3535 = relay.Function([var_3533], output)
mutated_mod['func_3535'] = func_3535
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3445_call = mod.get_global_var('func_3445')
func_3447_call = mutated_mod.get_global_var('func_3447')
call_3581 = func_3445_call()
call_3582 = func_3445_call()
output = call_3581
output2 = call_3582
func_3586 = relay.Function([], output)
mod['func_3586'] = func_3586
mod = relay.transform.InferType()(mod)
output = func_3586()
func_3587 = relay.Function([], output)
mutated_mod['func_3587'] = func_3587
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3445_call = mod.get_global_var('func_3445')
func_3447_call = mutated_mod.get_global_var('func_3447')
call_3597 = func_3445_call()
call_3598 = func_3445_call()
output = call_3597
output2 = call_3598
func_3611 = relay.Function([], output)
mod['func_3611'] = func_3611
mod = relay.transform.InferType()(mod)
output = func_3611()
func_3612 = relay.Function([], output)
mutated_mod['func_3612'] = func_3612
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3055_call = mod.get_global_var('func_3055')
func_3057_call = mutated_mod.get_global_var('func_3057')
call_3692 = func_3055_call()
call_3693 = func_3055_call()
output = call_3692
output2 = call_3693
func_3695 = relay.Function([], output)
mod['func_3695'] = func_3695
mod = relay.transform.InferType()(mod)
output = func_3695()
func_3696 = relay.Function([], output)
mutated_mod['func_3696'] = func_3696
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3291_call = mod.get_global_var('func_3291')
func_3292_call = mutated_mod.get_global_var('func_3292')
call_3731 = relay.TupleGetItem(func_3291_call(), 1)
call_3732 = relay.TupleGetItem(func_3292_call(), 1)
func_3611_call = mod.get_global_var('func_3611')
func_3612_call = mutated_mod.get_global_var('func_3612')
call_3736 = func_3611_call()
call_3737 = func_3611_call()
output = relay.Tuple([call_3731,call_3736,])
output2 = relay.Tuple([call_3732,call_3737,])
func_3753 = relay.Function([], output)
mod['func_3753'] = func_3753
mod = relay.transform.InferType()(mod)
mutated_mod['func_3753'] = func_3753
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3753_call = mutated_mod.get_global_var('func_3753')
call_3754 = func_3753_call()
output = call_3754
func_3755 = relay.Function([], output)
mutated_mod['func_3755'] = func_3755
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3611_call = mod.get_global_var('func_3611')
func_3612_call = mutated_mod.get_global_var('func_3612')
call_3765 = func_3611_call()
call_3766 = func_3611_call()
func_885_call = mod.get_global_var('func_885')
func_887_call = mutated_mod.get_global_var('func_887')
var_3780 = relay.var("var_3780", dtype = "float32", shape = (1568,))#candidate|3780|(1568,)|var|float32
call_3779 = relay.TupleGetItem(func_885_call(relay.reshape(var_3780.astype('float32'), [14, 14, 8])), 0)
call_3781 = relay.TupleGetItem(func_887_call(relay.reshape(var_3780.astype('float32'), [14, 14, 8])), 0)
output = relay.Tuple([call_3765,call_3779,var_3780,])
output2 = relay.Tuple([call_3766,call_3781,var_3780,])
func_3782 = relay.Function([var_3780,], output)
mod['func_3782'] = func_3782
mod = relay.transform.InferType()(mod)
var_3783 = relay.var("var_3783", dtype = "float32", shape = (1568,))#candidate|3783|(1568,)|var|float32
output = func_3782(var_3783)
func_3784 = relay.Function([var_3783], output)
mutated_mod['func_3784'] = func_3784
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3445_call = mod.get_global_var('func_3445')
func_3447_call = mutated_mod.get_global_var('func_3447')
call_3838 = func_3445_call()
call_3839 = func_3445_call()
output = relay.Tuple([call_3838,])
output2 = relay.Tuple([call_3839,])
func_3843 = relay.Function([], output)
mod['func_3843'] = func_3843
mod = relay.transform.InferType()(mod)
mutated_mod['func_3843'] = func_3843
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3843_call = mutated_mod.get_global_var('func_3843')
call_3844 = func_3843_call()
output = call_3844
func_3845 = relay.Function([], output)
mutated_mod['func_3845'] = func_3845
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2949_call = mod.get_global_var('func_2949')
func_2950_call = mutated_mod.get_global_var('func_2950')
call_3883 = relay.TupleGetItem(func_2949_call(), 0)
call_3884 = relay.TupleGetItem(func_2950_call(), 0)
func_2856_call = mod.get_global_var('func_2856')
func_2857_call = mutated_mod.get_global_var('func_2857')
call_3921 = relay.TupleGetItem(func_2856_call(), 1)
call_3922 = relay.TupleGetItem(func_2857_call(), 1)
bop_3929 = relay.logical_and(call_3883.astype('bool'), relay.reshape(call_3921.astype('bool'), relay.shape_of(call_3883))) # shape=(5, 7, 5)
bop_3932 = relay.logical_and(call_3884.astype('bool'), relay.reshape(call_3922.astype('bool'), relay.shape_of(call_3884))) # shape=(5, 7, 5)
output = relay.Tuple([bop_3929,])
output2 = relay.Tuple([bop_3932,])
func_3941 = relay.Function([], output)
mod['func_3941'] = func_3941
mod = relay.transform.InferType()(mod)
mutated_mod['func_3941'] = func_3941
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3941_call = mutated_mod.get_global_var('func_3941')
call_3942 = func_3941_call()
output = call_3942
func_3943 = relay.Function([], output)
mutated_mod['func_3943'] = func_3943
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3291_call = mod.get_global_var('func_3291')
func_3292_call = mutated_mod.get_global_var('func_3292')
call_3944 = relay.TupleGetItem(func_3291_call(), 2)
call_3945 = relay.TupleGetItem(func_3292_call(), 2)
uop_3946 = relay.atanh(call_3944.astype('float32')) # shape=(560,)
uop_3948 = relay.atanh(call_3945.astype('float32')) # shape=(560,)
func_3184_call = mod.get_global_var('func_3184')
func_3185_call = mutated_mod.get_global_var('func_3185')
call_3980 = relay.TupleGetItem(func_3184_call(), 2)
call_3981 = relay.TupleGetItem(func_3185_call(), 2)
func_3341_call = mod.get_global_var('func_3341')
func_3342_call = mutated_mod.get_global_var('func_3342')
call_3990 = func_3341_call()
call_3991 = func_3341_call()
func_2985_call = mod.get_global_var('func_2985')
func_2987_call = mutated_mod.get_global_var('func_2987')
const_4001 = relay.const([-2.322064,-5.050036,-8.462874,-5.628509,1.765327,5.252838,0.907490,5.544230,5.661457,6.507046,2.718369,-0.778792,0.719718,6.231538,8.767944,-8.814511,-1.408056,-9.666388,-5.768069,-6.286887,-9.073456,7.838663,6.416635,2.349300,4.919692,-3.534848,8.732235,-6.911323,-4.116301,-7.197979,-4.079561,4.594392,6.431206,5.044773,0.667975,1.370894,-4.045215,7.113703,8.451069,-8.412057,3.542963,6.867760,8.309652,7.038200,5.272925,6.691872,-9.856292,-6.434440,9.996986,-0.970349,7.019792,-9.846914,-9.172198,0.186173,-5.740206,-3.587539,-6.942031,0.275395,3.362236,3.187029,-8.655293,-0.803260,-8.586670,-4.861586,3.873327,-3.888216,-0.108966,-0.130225,-2.910844,0.575230,6.868255,-4.760645,0.399526,7.501809,-8.208973,-0.502974,2.958818,-4.016604,0.320211,6.496595,5.183040,-1.402050,6.346569,-8.038186,-2.794634,-5.854990,2.039972,-0.734431,-2.543832,5.139959,-4.116517,0.513029,-6.658918,8.128919,-8.523502,-1.424509,-9.551294,-4.992381,4.904212,2.567214,-9.857212,6.469686,-8.803905,-2.740124,1.048389,-1.647417,5.944884,-4.445264,9.356552,-4.307128,-8.364578,9.780689,3.484817,-2.371746,-1.692076,-7.981285,-9.017172,-4.085088,2.067877,5.125049,-8.674854,1.643252,-8.655114,8.773733,5.905529,0.028068,1.292336,7.357655,-8.248204,0.278969,6.441056,5.788046,-4.900208,0.196415,8.109187,-2.433661,-5.929248,4.948670,8.983454,-1.245157,-6.345285,5.841601,-8.020504,-7.971925,-8.731530,2.940971,-0.712071,4.324928,-0.253892,-4.983983,-8.115381,5.876142,-8.557050,8.567357,1.870418,0.107191,9.555792,6.640790,4.149636,1.124437,-9.153187,9.440141,3.504803,6.534167,3.130298,1.882176,-5.016026,-3.891389,-4.153673,9.874108,4.936517,2.630903,1.798830,-1.417417,3.984501,-9.968048,-4.110284,-1.306481,4.090657,4.503551,9.982480,-4.598554,9.208439,2.007328,-1.442116,-5.152900,7.874054,-3.808588,-1.492062,7.449116,-2.027096,5.947834,8.152778,0.306235,6.761467,-9.756877,8.741777,0.149237,6.207294,-4.358255,0.075070,-8.668605,4.457538,4.313489,5.010198,7.864516,-2.180156,1.573593,-4.005922,-5.042824,8.510783,-1.315407,7.173518,-3.417486,-7.267086,-5.410919,3.866915,-6.491120,-9.819642,-9.722594,-0.663455,4.783981,2.214158,0.862806,6.242078,8.332012,-5.472466,-1.516280,7.052239,-6.351822,7.400587,7.351304,0.325498,8.585772,2.369759,-1.257510,7.047057,7.392041,-6.568801,-8.948142,-9.377098,-0.564804,-7.220155,1.680291,3.068060,7.317684,-5.736910,2.364039,0.916301,9.926427,9.533437,-1.981313,-2.720675,8.734916,-9.732602,-0.990257,0.594748,3.586452,2.005036,-2.079454,9.223904,-2.292733,-7.000856,8.560042,-5.180672,8.074075,-6.156198,4.753525,9.220530,4.084400,-0.049439,-6.359642,9.994390,6.474180,-7.518674,7.712697,-8.271694,-9.359712,-2.936479,-6.922991], dtype = "float64")#candidate|4001|(280,)|const|float64
call_4000 = func_2985_call(relay.reshape(const_4001.astype('float64'), [2, 14, 10]))
call_4002 = func_2985_call(relay.reshape(const_4001.astype('float64'), [2, 14, 10]))
output = relay.Tuple([uop_3946,call_3980,call_3990,call_4000,const_4001,])
output2 = relay.Tuple([uop_3948,call_3981,call_3991,call_4002,const_4001,])
func_4012 = relay.Function([], output)
mod['func_4012'] = func_4012
mod = relay.transform.InferType()(mod)
output = func_4012()
func_4013 = relay.Function([], output)
mutated_mod['func_4013'] = func_4013
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2786_call = mod.get_global_var('func_2786')
func_2787_call = mutated_mod.get_global_var('func_2787')
call_4025 = relay.TupleGetItem(func_2786_call(), 3)
call_4026 = relay.TupleGetItem(func_2787_call(), 3)
func_904_call = mod.get_global_var('func_904')
func_907_call = mutated_mod.get_global_var('func_907')
var_4031 = relay.var("var_4031", dtype = "float64", shape = (40,))#candidate|4031|(40,)|var|float64
call_4030 = func_904_call(relay.reshape(var_4031.astype('float64'), [5, 4, 2]), relay.reshape(var_4031.astype('float64'), [5, 4, 2]), )
call_4032 = func_904_call(relay.reshape(var_4031.astype('float64'), [5, 4, 2]), relay.reshape(var_4031.astype('float64'), [5, 4, 2]), )
bop_4036 = relay.left_shift(call_4030.astype('uint16'), relay.reshape(var_4031.astype('uint16'), relay.shape_of(call_4030))) # shape=(5, 4, 2)
bop_4039 = relay.left_shift(call_4032.astype('uint16'), relay.reshape(var_4031.astype('uint16'), relay.shape_of(call_4032))) # shape=(5, 4, 2)
output = relay.Tuple([call_4025,bop_4036,])
output2 = relay.Tuple([call_4026,bop_4039,])
func_4040 = relay.Function([var_4031,], output)
mod['func_4040'] = func_4040
mod = relay.transform.InferType()(mod)
mutated_mod['func_4040'] = func_4040
mutated_mod = relay.transform.InferType()(mutated_mod)
var_4041 = relay.var("var_4041", dtype = "float64", shape = (40,))#candidate|4041|(40,)|var|float64
func_4040_call = mutated_mod.get_global_var('func_4040')
call_4042 = func_4040_call(var_4041)
output = call_4042
func_4043 = relay.Function([var_4041], output)
mutated_mod['func_4043'] = func_4043
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3184_call = mod.get_global_var('func_3184')
func_3185_call = mutated_mod.get_global_var('func_3185')
call_4079 = relay.TupleGetItem(func_3184_call(), 1)
call_4080 = relay.TupleGetItem(func_3185_call(), 1)
output = relay.Tuple([call_4079,])
output2 = relay.Tuple([call_4080,])
func_4090 = relay.Function([], output)
mod['func_4090'] = func_4090
mod = relay.transform.InferType()(mod)
mutated_mod['func_4090'] = func_4090
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4090_call = mutated_mod.get_global_var('func_4090')
call_4091 = func_4090_call()
output = call_4091
func_4092 = relay.Function([], output)
mutated_mod['func_4092'] = func_4092
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4090_call = mod.get_global_var('func_4090')
func_4092_call = mutated_mod.get_global_var('func_4092')
call_4105 = relay.TupleGetItem(func_4090_call(), 0)
call_4106 = relay.TupleGetItem(func_4092_call(), 0)
output = call_4105
output2 = call_4106
func_4107 = relay.Function([], output)
mod['func_4107'] = func_4107
mod = relay.transform.InferType()(mod)
output = func_4107()
func_4108 = relay.Function([], output)
mutated_mod['func_4108'] = func_4108
mutated_mod = relay.transform.InferType()(mutated_mod)
const_4126 = relay.const([[[2.808606,3.935995,2.889888,-8.888855,-1.318773,-6.414199,-7.407774,2.531971]],[[3.302403,-7.677307,-9.767155,-8.755211,-8.537440,-4.845718,8.432338,6.760287]],[[3.694274,6.933499,-9.768484,5.350735,8.274681,-4.506261,7.342763,-7.776186]],[[4.988728,6.603213,0.064652,9.984209,-2.917094,-6.620270,7.351683,-0.012474]],[[1.593112,5.646591,3.463024,-8.082891,-2.569049,-7.803281,0.135567,-8.011240]],[[7.700319,-8.331457,1.165095,-3.301203,6.264610,3.937373,-6.687154,-6.067062]],[[7.825709,-8.827276,-7.787033,-3.855571,6.955464,3.586552,1.262433,1.975839]],[[3.415885,7.905146,3.979221,-4.433424,-6.708434,6.506528,2.473323,-1.485853]],[[7.054866,-6.376830,-7.570640,-8.272361,6.181279,-2.872930,8.244991,-6.207320]]], dtype = "float64")#candidate|4126|(9, 1, 8)|const|float64
uop_4127 = relay.sinh(const_4126.astype('float64')) # shape=(9, 1, 8)
func_3843_call = mod.get_global_var('func_3843')
func_3845_call = mutated_mod.get_global_var('func_3845')
call_4129 = relay.TupleGetItem(func_3843_call(), 0)
call_4130 = relay.TupleGetItem(func_3845_call(), 0)
func_3055_call = mod.get_global_var('func_3055')
func_3057_call = mutated_mod.get_global_var('func_3057')
call_4134 = func_3055_call()
call_4135 = func_3055_call()
uop_4143 = relay.acos(call_4134.astype('float32')) # shape=(5, 7, 16)
uop_4145 = relay.acos(call_4135.astype('float32')) # shape=(5, 7, 16)
func_2624_call = mod.get_global_var('func_2624')
func_2627_call = mutated_mod.get_global_var('func_2627')
const_4149 = relay.const([[-7.072185,1.941905,-5.110241,8.826821,1.145298,-3.087168],[2.713362,6.374072,6.384214,0.550161,-9.322989,9.508418],[-0.864608,-0.345980,-7.688325,5.621655,2.777312,0.049846],[-6.306845,-1.485477,4.447118,0.216779,-4.879108,6.234155],[8.392503,-4.975478,1.898480,-7.035531,-2.938844,-6.775877],[8.363721,6.055334,-6.350784,-3.505944,-0.314213,-4.581124],[-4.991840,-3.091484,-3.508778,-2.454429,-3.898692,2.189584],[-7.245381,6.204520,-3.946198,6.674058,4.963766,-5.470678],[0.134681,2.467968,1.795305,-0.116420,5.508678,0.500421],[-6.963305,9.298492,-5.325085,-1.927023,-3.496807,2.132147],[5.284163,2.634255,6.627692,-4.719666,-8.848940,-0.401704],[3.442013,4.433948,5.092131,-5.413373,-0.345830,5.632995],[-4.307043,-6.459968,3.190390,0.500420,-7.369133,-0.267513],[1.465218,3.029384,-1.066355,6.312347,-0.138336,-2.326121],[1.222076,4.670117,8.519097,-0.825275,9.411539,-4.632565],[-6.557524,8.671765,-1.835948,0.013717,1.189955,-6.749149],[-3.183744,0.085076,-0.278194,8.431270,2.915431,-4.835936],[4.557799,-4.208519,5.743565,8.477160,3.767786,-7.152419],[-2.853005,5.761914,-3.906616,1.518666,8.373253,5.016392],[7.215064,-5.119394,-0.231014,9.491766,5.152590,-6.283826],[-4.947931,8.783287,-3.346162,-5.493985,3.194349,-8.949625],[5.235604,-9.352257,9.235821,-3.012660,-0.394091,4.720689],[3.885089,-1.137368,-4.160577,9.215266,2.963910,-2.711880],[2.211221,-3.387712,-8.669111,-5.211128,8.571885,7.504712]], dtype = "float32")#candidate|4149|(24, 6)|const|float32
call_4148 = relay.TupleGetItem(func_2624_call(relay.reshape(const_4149.astype('float32'), [4, 3, 12])), 0)
call_4150 = relay.TupleGetItem(func_2627_call(relay.reshape(const_4149.astype('float32'), [4, 3, 12])), 0)
func_3341_call = mod.get_global_var('func_3341')
func_3342_call = mutated_mod.get_global_var('func_3342')
call_4155 = func_3341_call()
call_4156 = func_3341_call()
func_3695_call = mod.get_global_var('func_3695')
func_3696_call = mutated_mod.get_global_var('func_3696')
call_4161 = func_3695_call()
call_4162 = func_3695_call()
func_3066_call = mod.get_global_var('func_3066')
func_3067_call = mutated_mod.get_global_var('func_3067')
call_4168 = func_3066_call()
call_4169 = func_3066_call()
var_4182 = relay.var("var_4182", dtype = "float64", shape = (9, 11, 8))#candidate|4182|(9, 11, 8)|var|float64
bop_4183 = relay.not_equal(uop_4127.astype('bool'), var_4182.astype('bool')) # shape=(9, 11, 8)
uop_4187 = relay.log2(call_4168.astype('float32')) # shape=(5, 7, 5)
uop_4189 = relay.log2(call_4169.astype('float32')) # shape=(5, 7, 5)
output = relay.Tuple([call_4129,uop_4143,call_4148,const_4149,call_4155,call_4161,bop_4183,uop_4187,])
output2 = relay.Tuple([call_4130,uop_4145,call_4150,const_4149,call_4156,call_4162,bop_4183,uop_4189,])
func_4190 = relay.Function([var_4182,], output)
mod['func_4190'] = func_4190
mod = relay.transform.InferType()(mod)
var_4191 = relay.var("var_4191", dtype = "float64", shape = (9, 11, 8))#candidate|4191|(9, 11, 8)|var|float64
output = func_4190(var_4191)
func_4192 = relay.Function([var_4191], output)
mutated_mod['func_4192'] = func_4192
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3753_call = mod.get_global_var('func_3753')
func_3755_call = mutated_mod.get_global_var('func_3755')
call_4209 = relay.TupleGetItem(func_3753_call(), 0)
call_4210 = relay.TupleGetItem(func_3755_call(), 0)
func_3326_call = mod.get_global_var('func_3326')
func_3327_call = mutated_mod.get_global_var('func_3327')
call_4215 = func_3326_call()
call_4216 = func_3326_call()
output = relay.Tuple([call_4209,call_4215,])
output2 = relay.Tuple([call_4210,call_4216,])
func_4230 = relay.Function([], output)
mod['func_4230'] = func_4230
mod = relay.transform.InferType()(mod)
mutated_mod['func_4230'] = func_4230
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4230_call = mutated_mod.get_global_var('func_4230')
call_4231 = func_4230_call()
output = call_4231
func_4232 = relay.Function([], output)
mutated_mod['func_4232'] = func_4232
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3291_call = mod.get_global_var('func_3291')
func_3292_call = mutated_mod.get_global_var('func_3292')
call_4243 = relay.TupleGetItem(func_3291_call(), 2)
call_4244 = relay.TupleGetItem(func_3292_call(), 2)
func_1599_call = mod.get_global_var('func_1599')
func_1602_call = mutated_mod.get_global_var('func_1602')
var_4255 = relay.var("var_4255", dtype = "float32", shape = (468,))#candidate|4255|(468,)|var|float32
call_4254 = relay.TupleGetItem(func_1599_call(relay.reshape(var_4255.astype('float32'), [12, 13, 3])), 0)
call_4256 = relay.TupleGetItem(func_1602_call(relay.reshape(var_4255.astype('float32'), [12, 13, 3])), 0)
func_4012_call = mod.get_global_var('func_4012')
func_4013_call = mutated_mod.get_global_var('func_4013')
call_4266 = relay.TupleGetItem(func_4012_call(), 1)
call_4267 = relay.TupleGetItem(func_4013_call(), 1)
output = relay.Tuple([call_4243,call_4254,var_4255,call_4266,])
output2 = relay.Tuple([call_4244,call_4256,var_4255,call_4267,])
func_4282 = relay.Function([var_4255,], output)
mod['func_4282'] = func_4282
mod = relay.transform.InferType()(mod)
mutated_mod['func_4282'] = func_4282
mutated_mod = relay.transform.InferType()(mutated_mod)
var_4283 = relay.var("var_4283", dtype = "float32", shape = (468,))#candidate|4283|(468,)|var|float32
func_4282_call = mutated_mod.get_global_var('func_4282')
call_4284 = func_4282_call(var_4283)
output = call_4284
func_4285 = relay.Function([var_4283], output)
mutated_mod['func_4285'] = func_4285
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2676_call = mod.get_global_var('func_2676')
func_2678_call = mutated_mod.get_global_var('func_2678')
call_4292 = func_2676_call()
call_4293 = func_2676_call()
func_3782_call = mod.get_global_var('func_3782')
func_3784_call = mutated_mod.get_global_var('func_3784')
var_4305 = relay.var("var_4305", dtype = "float32", shape = (1568,))#candidate|4305|(1568,)|var|float32
call_4304 = relay.TupleGetItem(func_3782_call(relay.reshape(var_4305.astype('float32'), [1568,])), 1)
call_4306 = relay.TupleGetItem(func_3784_call(relay.reshape(var_4305.astype('float32'), [1568,])), 1)
var_4307 = relay.var("var_4307", dtype = "bool", shape = (14, 14, 8))#candidate|4307|(14, 14, 8)|var|bool
bop_4308 = relay.floor_divide(call_4304.astype('float64'), relay.reshape(var_4307.astype('float64'), relay.shape_of(call_4304))) # shape=(14, 14, 8)
bop_4311 = relay.floor_divide(call_4306.astype('float64'), relay.reshape(var_4307.astype('float64'), relay.shape_of(call_4306))) # shape=(14, 14, 8)
var_4324 = relay.var("var_4324", dtype = "float32", shape = (5, 7, 5))#candidate|4324|(5, 7, 5)|var|float32
bop_4325 = relay.power(call_4292.astype('float64'), relay.reshape(var_4324.astype('float64'), relay.shape_of(call_4292))) # shape=(5, 7, 5)
bop_4328 = relay.power(call_4293.astype('float64'), relay.reshape(var_4324.astype('float64'), relay.shape_of(call_4293))) # shape=(5, 7, 5)
bop_4337 = relay.bitwise_xor(var_4307.astype('int64'), relay.reshape(call_4304.astype('int64'), relay.shape_of(var_4307))) # shape=(14, 14, 8)
bop_4340 = relay.bitwise_xor(var_4307.astype('int64'), relay.reshape(call_4306.astype('int64'), relay.shape_of(var_4307))) # shape=(14, 14, 8)
func_3611_call = mod.get_global_var('func_3611')
func_3612_call = mutated_mod.get_global_var('func_3612')
call_4343 = func_3611_call()
call_4344 = func_3611_call()
output = relay.Tuple([var_4305,bop_4308,bop_4325,bop_4337,call_4343,])
output2 = relay.Tuple([var_4305,bop_4311,bop_4328,bop_4340,call_4344,])
func_4355 = relay.Function([var_4305,var_4307,var_4324,], output)
mod['func_4355'] = func_4355
mod = relay.transform.InferType()(mod)
mutated_mod['func_4355'] = func_4355
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4355_call = mutated_mod.get_global_var('func_4355')
var_4357 = relay.var("var_4357", dtype = "float32", shape = (1568,))#candidate|4357|(1568,)|var|float32
var_4358 = relay.var("var_4358", dtype = "bool", shape = (14, 14, 8))#candidate|4358|(14, 14, 8)|var|bool
var_4359 = relay.var("var_4359", dtype = "float32", shape = (5, 7, 5))#candidate|4359|(5, 7, 5)|var|float32
call_4356 = func_4355_call(var_4357,var_4358,var_4359,)
output = call_4356
func_4360 = relay.Function([var_4357,var_4358,var_4359,], output)
mutated_mod['func_4360'] = func_4360
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3753_call = mod.get_global_var('func_3753')
func_3755_call = mutated_mod.get_global_var('func_3755')
call_4367 = relay.TupleGetItem(func_3753_call(), 0)
call_4368 = relay.TupleGetItem(func_3755_call(), 0)
output = relay.Tuple([call_4367,])
output2 = relay.Tuple([call_4368,])
func_4386 = relay.Function([], output)
mod['func_4386'] = func_4386
mod = relay.transform.InferType()(mod)
mutated_mod['func_4386'] = func_4386
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4386_call = mutated_mod.get_global_var('func_4386')
call_4387 = func_4386_call()
output = call_4387
func_4388 = relay.Function([], output)
mutated_mod['func_4388'] = func_4388
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2786_call = mod.get_global_var('func_2786')
func_2787_call = mutated_mod.get_global_var('func_2787')
call_4420 = relay.TupleGetItem(func_2786_call(), 1)
call_4421 = relay.TupleGetItem(func_2787_call(), 1)
output = call_4420
output2 = call_4421
func_4449 = relay.Function([], output)
mod['func_4449'] = func_4449
mod = relay.transform.InferType()(mod)
output = func_4449()
func_4450 = relay.Function([], output)
mutated_mod['func_4450'] = func_4450
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3291_call = mod.get_global_var('func_3291')
func_3292_call = mutated_mod.get_global_var('func_3292')
call_4480 = relay.TupleGetItem(func_3291_call(), 4)
call_4481 = relay.TupleGetItem(func_3292_call(), 4)
output = relay.Tuple([call_4480,])
output2 = relay.Tuple([call_4481,])
func_4484 = relay.Function([], output)
mod['func_4484'] = func_4484
mod = relay.transform.InferType()(mod)
output = func_4484()
func_4485 = relay.Function([], output)
mutated_mod['func_4485'] = func_4485
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4090_call = mod.get_global_var('func_4090')
func_4092_call = mutated_mod.get_global_var('func_4092')
call_4493 = relay.TupleGetItem(func_4090_call(), 0)
call_4494 = relay.TupleGetItem(func_4092_call(), 0)
func_4190_call = mod.get_global_var('func_4190')
func_4192_call = mutated_mod.get_global_var('func_4192')
const_4506 = relay.const([-3.384495,2.465004,2.085976,6.492169,4.330822,-1.063344,-8.059858,-9.560129,-1.518804,8.698995,1.348530,-4.699444,-2.200176,-6.310560,-7.021964,1.927362,-9.447812,7.591361,5.983257,-8.438991,-1.826697,-8.019259,-7.005937,4.443108,-2.994631,7.694776,-7.862479,6.513127,8.005349,-1.862491,5.356959,4.229469,1.986912,1.064440,2.895287,3.287711,-6.002652,-4.733693,0.448330,0.156540,-7.868681,1.582716,-1.756050,0.434529,-5.812106,-0.883208,1.415679,4.274772,-9.789851,3.228985,3.012752,-0.387432,-7.453836,-1.001481,-5.648417,-8.551964,6.981870,4.278137,-5.877874,1.500716,0.572348,0.646969,1.251632,4.805575,5.044999,7.861312,9.084821,4.767011,-5.417928,4.578775,0.337148,4.776625,3.453558,5.856713,-1.421365,0.323086,-3.504172,-2.125696,5.226004,5.775704,6.468922,9.067809,-7.699343,-6.065747,5.200723,-6.188649,3.000347,3.457533,-6.435013,6.171262,1.553816,-2.136645,7.619701,-5.609871,-9.766193,3.561839,-2.522993,2.472131,8.415867,-1.132090,0.468590,-4.178437,-2.861722,-3.317745,-9.318495,6.842026,-2.347357,6.575045,0.982121,-3.149834,4.997604,8.852029,2.203542,3.167481,-3.627218,8.778073,-7.551181,7.469605,1.846858,0.779078,3.875894,5.392757,2.362286,7.641313,-3.988152,-7.314008,7.620158,-7.360588,-5.736111,-4.608872,9.308118,2.339030,8.022948,-1.329128,-6.814479,-4.337110,2.838503,5.808394,-8.502593,5.512753,-6.777192,-5.696613,3.936566,-0.198804,-6.386054,-4.718480,-5.884176,6.002701,-5.629398,-1.913020,-2.904682,-7.653084,9.754112,-3.818485,-4.926025,-9.384193,1.483111,2.863127,6.859263,4.907175,-8.688112,4.114362,8.077131,-8.080292,0.886699,-5.123095,0.694477,5.391779,-2.906543,-3.517891,9.651488,3.128153,2.100265,3.600700,9.646736,9.191210,-9.502995,-7.348815,1.539865,-5.348111,-4.700858,-0.169034,3.934748,-2.832331,1.886877,4.732453,5.843939,-5.575152,3.566047,-5.687929,-1.469014,-1.505016,-3.974568,-1.870404,4.298815,-3.579889,9.264532,6.287758,-7.200936,-9.366643,-6.616441,-6.816188,-9.301253,-4.719725,-7.288221,-4.754247,-8.791851,-4.692071,-3.755215,8.232782,9.714926,7.115782,-0.543586,3.922422,-1.459919,7.024154,9.232402,-9.500613,-1.218862,5.186015,7.201599,2.638867,-1.735419,4.480104,-8.556341,-5.763561,-9.426447,-4.718432,-9.509293,-5.387709,0.404838,4.618312,4.636012,-5.473870,1.777111,2.289186,-3.888321,-5.769808,-7.053547,7.514655,-8.083850,-8.277231,3.731051,-2.563674,-1.022309,-8.766976,-1.158508,0.322065,0.714023,0.362013,0.396240,-7.326854,7.952961,0.721860,-5.890372,-9.118222,-1.301148,6.018504,0.017645,-4.822600,-7.910486,2.773958,-5.021346,0.902522,-8.442885,-5.155397,0.867244,8.107084,-2.907331,-1.968662,2.319071,5.163275,5.608181,4.931278,-3.941075,-4.767256,-3.733583,9.354489,-5.241877,7.350882,0.351922,3.510205,-8.834064,8.314057,5.494871,1.609986,-6.439342,-2.724738,8.291119,-1.881830,5.514454,8.781517,-2.916570,2.705175,1.766765,-0.397514,-4.938283,3.777763,-3.435882,2.109572,-9.554844,4.866875,-0.618684,-7.516966,5.498091,8.599461,5.538586,1.566625,-0.308938,9.902049,3.545264,-2.006963,1.212861,-9.237857,4.354515,4.120791,-1.644867,-9.285146,-7.324563,-6.499907,-8.475238,4.354868,-5.743273,2.212127,5.071150,-8.366646,-1.598718,-8.329560,-3.516339,-1.946347,8.976677,6.107164,-2.818656,-2.720562,-1.797847,-0.384325,-1.277930,6.042026,-3.119673,6.609278,4.763279,-9.786119,2.757841,6.589379,3.739532,5.872242,7.067690,-9.558508,-5.997549,-3.380486,-8.389704,0.885104,-6.286187,9.558054,-6.169059,-1.253884,6.016338,8.711926,-7.583937,-5.095533,-7.800300,-3.050007,0.543319,8.396992,4.466744,-0.511496,2.422477,-7.837117,-5.624031,-7.230459,2.398565,-1.614412,-3.447805,1.823378,-6.625146,-4.533609,0.533966,-7.889717,-2.238024,-3.041696,-4.352356,7.659624,4.988678,1.596302,8.640631,-0.352508,6.790073,0.934613,-9.988561,-9.531713,0.081287,-1.371691,8.772019,2.570798,-3.103537,2.726565,-8.080458,-0.893218,-5.051477,-0.200321,-0.787167,-9.141976,7.415852,9.699714,-7.685083,8.890590,-0.319137,-9.878925,-8.322675,8.221740,-4.992242,9.750222,0.600685,-5.493523,-7.551163,-1.921244,2.208278,-3.650054,-7.989949,-4.231180,6.169995,-7.618422,0.416356,8.040054,-0.912581,1.453310,3.143926,-9.494156,-3.685772,-0.181985,0.393686,5.199992,-0.286941,5.288561,8.758581,1.356188,1.630470,8.059338,3.581874,0.223567,3.361189,-5.865188,7.280052,-2.802405,7.232607,-0.965468,0.587194,1.326402,6.658264,-2.167946,-6.444381,2.301240,-6.095269,4.786613,2.612422,5.061349,3.794216,3.248019,-1.445089,-1.400324,9.037158,-7.494905,8.224260,-2.973523,5.264948,2.523554,-1.249835,7.386494,6.907157,-8.581875,9.103681,-8.104231,2.600917,-8.566751,6.350752,5.730168,7.957685,4.522687,9.949735,-8.753717,-9.047661,0.134675,-1.526431,0.631224,7.939336,0.150925,-7.853659,1.060737,8.628777,5.221276,-4.448343,5.644923,4.304344,-3.814955,-5.213346,2.084321,9.620247,-3.677631,4.956381,0.356164,7.319909,-0.570379,-8.258810,-0.682578,5.940541,-7.479735,-6.702366,5.417760,-6.133388,3.221212,-0.966159,-4.266712,8.089015,-9.686202,-5.400015,1.982640,-4.456109,8.398195,7.997854,-7.498716,-5.946400,-6.446407,4.298674,-1.108451,-5.303725,-1.474589,-0.848122,-4.401378,0.258674,-4.548157,-2.063459,-1.659004,3.360502,-8.729175,0.313911,1.608848,5.570825,-9.008302,-0.268826,3.930606,-2.580792,7.702710,-3.798402,-6.815894,-3.480057,1.780108,-2.146564,3.195141,-6.503333,-4.225914,1.154783,2.233787,-2.148447,2.991245,-6.936500,2.957047,-2.996957,8.879113,-0.300418,4.150778,-2.009847,3.275248,-9.333980,1.333880,-6.541792,-6.587713,1.904935,7.440497,9.375005,-9.325523,5.027527,5.119873,8.295139,-2.156363,-3.075637,-3.917918,-6.769431,-3.182050,9.940952,1.566232,7.821538,0.371612,0.653595,-6.310906,1.547066,-7.526970,-3.960352,-4.977122,-6.052810,5.028771,-1.030942,-0.651319,-5.562744,5.673588,-8.751709,1.515248,-6.975780,-5.289665,8.928016,7.557887,-0.180082,2.756433,0.128710,-2.862441,-4.682879,-4.521972,8.162891,-9.447134,2.436036,4.740037,-0.882266,-8.601072,2.986737,5.692169,9.503088,4.009032,-7.723805,1.294404,0.742469,-1.859734,6.575643,-0.077212,6.843314,-2.793619,4.904854,-2.473622,2.969234,-1.495841,4.954384,2.679248,-4.216668,-1.075892,-5.858878,-4.456987,0.282961,6.274178,-9.462122,-0.132433,-5.874087,-8.478243,-7.835188,-3.807191,5.229403,5.553044,-3.851032,-2.030421,3.935073,5.362894,-4.598472,0.393052,-8.338008,-9.194206,9.653419,-9.744943,-4.419660,6.617781,8.396687,-7.910652,-3.731205,-9.811883,-5.397663,-9.835629,2.886286,8.751167,9.213287,-5.439188,-8.468722,-4.477273,3.769092,4.806852,-3.213744,-7.120246,-9.120320,-2.606136,-3.047180,0.065540,2.409669,8.704492,-6.776426,-4.634256,5.215255,1.586342,-7.345872,3.764932,2.326629,8.389733,7.178774,1.284071,-9.982064,5.627079,-9.347970,6.000861,-0.973650,2.365507,-9.574402,-2.425152,-3.549965,0.050441,-8.422081,-1.727531,8.220666,4.565900,2.025085,0.366085,-1.096400,7.749076,2.594844,6.796634,9.936349,-5.354512,-7.450735,8.513547,1.714546,3.685873,-9.881363,9.036663,6.998143,-1.989252,5.488088,-3.370486,-8.216137,6.261901,4.187576,3.983417,9.899714,-7.817714,1.470983,-7.770736,-0.131386,-5.339066,8.199152,-5.415419,-2.892608,7.742446,-9.550080,3.487968,5.914028,3.194526,2.553153,7.535681,-2.405448,2.620982,-6.546523,-9.436103,7.691121,0.563908,-4.938718,-6.739026,-7.060193,5.913045,7.010681,-7.971359,0.932082,4.651177,-9.887256,3.839412,-4.967814,-7.736798,-2.631366,3.331548,8.920768,-1.833471,7.980241,-0.908539,-2.456429,-0.519972,4.213315,5.591282,-9.976582,2.241427,3.568909,-6.606966,3.998948,-6.484105,3.056219,-8.495071,-9.313794,1.046674,1.525488,-7.194767,0.590880,8.716022,1.406715,0.849688,-1.365471,-2.100643,4.726932,3.239292,-9.678889,-7.647198,-6.554915,-4.807659], dtype = "float64")#candidate|4506|(792,)|const|float64
call_4505 = relay.TupleGetItem(func_4190_call(relay.reshape(const_4506.astype('float64'), [9, 11, 8])), 6)
call_4507 = relay.TupleGetItem(func_4192_call(relay.reshape(const_4506.astype('float64'), [9, 11, 8])), 6)
output = relay.Tuple([call_4493,call_4505,const_4506,])
output2 = relay.Tuple([call_4494,call_4507,const_4506,])
func_4514 = relay.Function([], output)
mod['func_4514'] = func_4514
mod = relay.transform.InferType()(mod)
mutated_mod['func_4514'] = func_4514
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4514_call = mutated_mod.get_global_var('func_4514')
call_4515 = func_4514_call()
output = call_4515
func_4516 = relay.Function([], output)
mutated_mod['func_4516'] = func_4516
mutated_mod = relay.transform.InferType()(mutated_mod)
var_4560 = relay.var("var_4560", dtype = "int16", shape = (15, 11, 9))#candidate|4560|(15, 11, 9)|var|int16
var_4561 = relay.var("var_4561", dtype = "int16", shape = (15, 11, 9))#candidate|4561|(15, 11, 9)|var|int16
bop_4562 = relay.minimum(var_4560.astype('int16'), relay.reshape(var_4561.astype('int16'), relay.shape_of(var_4560))) # shape=(15, 11, 9)
func_3782_call = mod.get_global_var('func_3782')
func_3784_call = mutated_mod.get_global_var('func_3784')
const_4566 = relay.const([6.903173,4.701932,9.782213,7.226583,3.332237,6.634130,2.374928,-3.833820,-3.969150,-3.003496,9.417256,5.405772,-2.836133,-0.249140,2.916978,-7.470736,8.833666,9.185994,-2.071543,-4.202509,-6.487815,6.179974,-9.197002,-1.349181,-4.233039,5.278016,8.866094,8.578046,-0.008320,5.027390,9.715097,-5.211813,-6.362711,-1.407593,9.957762,-5.493329,-1.549777,9.338014,-2.886178,6.443717,-0.764561,-9.340265,5.336739,2.582650,-0.896110,4.458337,7.761976,-7.859027,-0.698852,-7.029083,7.703862,9.883729,-2.238777,-9.475272,-4.021464,4.699774,-1.601349,-7.467634,1.767120,7.241408,-3.767074,-6.074303,-1.648752,5.255844,2.239485,-6.338541,0.472611,-5.210687,-4.892656,-0.019648,-4.607054,-1.148508,6.446624,1.945548,-0.138234,-4.381145,5.613019,-6.244076,3.628148,-9.725409,-4.719717,2.653243,-6.394842,6.783004,-5.384396,6.685874,-6.203669,7.755131,-8.959283,-6.731785,2.837799,-5.627708,5.314367,9.246050,-8.710470,9.822974,-9.955045,-0.794968,-2.710901,-5.347897,0.604779,-1.302849,5.120998,-9.308093,-3.240599,-6.877246,8.838215,-2.369167,-3.896567,-3.230519,-8.041670,7.658592,-7.481242,1.160805,3.272578,-7.563801,-2.756486,-3.919127,-7.846348,1.935063,-0.110585,4.089421,-8.525166,-5.136333,9.475762,-6.940746,0.336052,-0.848434,0.206480,-3.748864,8.226984,-7.839195,0.199065,4.936286,4.393038,-3.951318,8.874038,7.588856,-1.455102,-2.012399,-7.535532,9.042021,-6.290787,-3.748774,3.499020,-2.474619,5.926361,-2.770302,-1.161486,-1.947478,1.832261,2.020109,-3.455875,-3.124749,-6.067434,-9.174454,4.763397,-8.557316,-0.211579,-3.749894,-4.107847,-2.768540,6.768422,-2.696655,0.023971,8.343889,-2.754797,8.969017,2.251966,2.465736,-3.576716,0.337744,3.829531,9.929434,-6.616585,2.463082,-8.384923,-3.456939,2.423555,5.848188,2.809686,9.739281,6.166146,1.506196,-4.924888,3.065796,-1.217882,0.768663,-2.227238,1.291384,-0.245019,8.743599,6.256787,-4.318014,3.369307,3.785006,-0.714928,-0.798918,5.228477,-3.131941,-7.476029,-9.829990,-4.443141,-1.447615,-7.281414,2.763478,-9.185806,3.317612,-5.217717,-6.332255,-7.525832,9.391042,-7.307581,-4.941121,6.880795,-2.894433,-9.302503,-4.675964,-7.334986,-5.328006,0.696566,7.888909,-5.974665,2.869126,-4.107649,-6.782662,3.018150,2.349328,6.936111,8.612212,-6.299872,-6.279360,-1.005447,-6.390651,8.532917,5.628625,-1.409568,9.250639,5.870529,-4.932991,-2.978060,-4.039467,-2.283413,-0.485862,-7.155725,-0.445454,0.250897,4.288475,9.623991,-9.580198,-9.570404,0.133393,-8.004427,-3.126399,1.876351,2.895685,4.401677,6.493786,5.588133,-0.889252,0.451855,-6.136477,5.962177,-4.177585,4.939368,-6.483687,-2.854374,1.176700,-3.871911,3.986334,-6.756554,1.458978,-5.479719,9.964120,-7.225636,8.707175,-4.390495,-0.292905,-5.150955,-3.974702,8.838111,9.958615,5.336440,-8.995756,-7.488632,6.661012,-5.812158,5.003244,-5.406820,-8.845435,-8.291912,-8.196191,-1.033099,-5.661280,-1.360178,-6.117371,2.108612,4.049271,-4.725802,-7.186275,5.827062,5.255897,3.173080,8.955105,1.504522,-1.895644,0.180814,-6.056444,-2.716636,-0.280094,-9.178908,-1.350342,0.539491,-1.759375,-7.863051,-2.517189,-8.623370,5.487286,-7.962755,6.451924,7.844403,5.999157,9.084864,-9.018875,7.462550,-6.362681,8.854577,0.924897,-5.414681,9.965343,5.158662,0.167386,5.255392,1.322961,6.332942,-5.718626,-7.631675,3.447297,3.229503,4.534528,4.941810,-2.210251,8.176818,3.798770,1.723948,-7.804906,-5.861214,4.881873,-8.158221,-2.727013,1.831248,-6.427086,-5.675140,5.875498,6.358370,-7.859745,-0.713655,-1.248271,5.376016,-5.686262,-3.966056,0.154502,-1.910432,-7.186887,9.485258,-1.273192,6.550938,-7.595825,-5.400978,-4.756611,2.144036,-9.386711,4.488296,4.193202,-8.306631,-3.041735,-7.726801,-6.628635,-0.924608,3.826483,3.856711,-0.083772,9.613696,-9.554479,3.034354,4.742425,-2.244383,-9.540852,-8.804146,-4.865499,8.100277,7.108292,-9.557811,-7.395376,7.243305,-2.916183,0.382752,3.849621,3.110991,1.182124,-4.687511,5.697895,-7.486827,4.551334,4.957006,-7.322519,-2.395074,-2.281329,2.150966,0.467442,8.922197,8.852681,-6.412351,9.747466,-7.269560,-4.595608,2.272846,5.710881,-4.119137,7.117039,-9.362547,-7.578551,7.497933,7.859731,-5.681320,5.072114,-6.889638,-7.068490,-7.278602,8.764797,-7.218914,0.472269,4.688055,-2.342387,7.503347,-6.680667,1.716120,-1.979674,1.773196,9.231329,-0.390193,5.448407,5.914685,-6.976882,8.710312,-7.312448,8.689267,-3.155882,8.416652,-2.851361,-7.206431,-2.567910,-3.564353,-6.873147,8.351418,0.918785,0.873806,-1.436609,-0.448894,-3.328143,-3.623061,-8.197905,-4.839149,1.760572,5.250033,9.371324,-4.968733,0.345429,-4.578983,-4.563165,2.130354,-1.386392,2.499799,2.805095,1.070481,4.638653,-7.938837,9.390052,-8.669941,-3.951633,4.810279,1.231415,-2.162765,-1.212069,9.163358,-5.605038,-7.010118,9.007768,7.515975,8.576806,-7.673950,0.035478,-7.655591,8.247666,7.957105,-1.308152,5.914414,-7.877291,-2.471818,6.154723,2.296258,-2.906145,-8.032751,3.452389,-8.213594,-3.518071,-4.022245,-3.614435,-3.483520,2.162161,4.081792,-4.253815,-4.038749,-5.306831,3.921401,-5.962685,4.338794,-9.676866,-3.527332,-0.330563,3.549882,6.760860,-9.323474,-4.235384,4.982799,-4.257665,-9.439059,-0.504810,8.724118,6.081939,-1.748646,7.205151,0.145511,6.528473,-6.553162,-2.913972,-5.667432,0.722030,8.541241,7.276317,4.911541,-5.806597,7.575348,-2.185914,9.296577,4.152718,9.114297,-0.384708,9.151482,-2.844985,3.714775,9.329068,-4.770062,-3.383252,-9.206551,0.405679,7.681646,6.722743,-5.224103,9.952708,-2.322554,6.773531,0.154651,-5.824846,6.146816,-0.350008,9.254920,-2.215394,-6.875315,-7.884772,-6.373790,1.796446,7.445165,-7.116559,-1.057275,8.640737,6.708320,2.432065,-5.281099,2.805917,-2.188121,-8.966316,2.271014,-6.556443,8.658949,-6.177950,-8.769593,4.515388,4.463657,7.271647,5.741168,-3.514494,6.686180,-6.934089,4.679046,3.928720,5.316893,8.008710,-4.622071,8.707598,-2.439729,2.896404,4.078623,-1.929097,7.571820,-5.430992,7.907056,9.876959,-6.802511,-7.165585,8.249467,-6.269096,-9.452238,6.687196,9.616281,-6.580260,-4.901701,-2.551790,0.145354,-9.087568,-8.750235,4.995909,0.366887,-8.874932,-5.327416,6.702491,-1.135632,4.030317,-7.036840,1.845735,8.907643,7.226083,5.536859,3.377559,0.373397,6.838813,-2.860796,7.417506,7.320343,-5.974380,-3.802115,6.544121,1.079541,3.312615,0.776682,4.017126,0.251011,4.699541,-6.129817,5.773439,-1.426362,9.319895,9.894273,1.592135,-1.283892,2.627606,4.724587,7.925993,3.150878,-6.029014,0.299533,9.000496,7.281378,7.262928,9.909059,2.336181,-6.985534,-8.883111,7.404473,-9.525425,9.169209,-2.086450,5.208505,7.641369,1.128455,6.583675,3.231509,7.693417,0.930219,-0.721885,7.906317,8.634278,-2.109509,4.733600,0.905519,7.519049,5.634065,3.972819,3.898561,2.271049,8.843773,8.817633,0.272592,9.276689,-3.076364,4.389713,0.791883,8.840751,9.543408,1.428952,-4.480403,0.021848,-7.510527,-1.720448,-3.574585,-6.762410,2.171058,-4.287067,-6.268559,4.621015,-0.371561,-4.942989,1.320781,1.019888,8.007972,8.320300,-5.130652,0.121231,-5.998204,-2.223486,-4.202773,-8.471794,9.778416,-9.813485,-8.808237,-9.003269,8.087527,-6.993735,-9.221476,0.039870,-8.165229,8.573056,8.581042,0.668266,3.529349,-9.339985,7.877974,8.814179,-5.974541,-8.910126,4.764587,6.629514,-5.546829,-1.994642,9.451687,-4.336082,-5.823898,-4.147618,-4.344294,3.459247,-7.286041,7.336106,-5.844748,-0.653419,6.626122,7.079272,3.898796,3.724745,-0.261099,-5.388375,8.568315,4.105503,-5.555303,5.675381,-1.040759,-3.401882,6.141335,-0.371864,-1.671351,-0.564147,6.491772,6.506798,-4.455846,-6.798623,-4.842911,-5.213990,8.488916,9.102715,-5.902377,0.069916,-6.508947,1.303444,0.592450,4.735288,-5.795887,3.593910,-7.886998,-0.539355,9.661003,0.973082,8.948087,8.840619,-4.354550,-5.989810,-7.683877,5.376905,-8.631773,-7.627739,-9.226809,6.623500,0.965603,-3.268276,8.043601,-6.163984,-0.713493,-3.462285,0.490246,-1.676034,8.103056,-8.203291,-2.362432,-5.717572,-8.550491,9.899297,-7.499190,9.813134,4.417927,1.391156,-3.378873,-6.124758,-7.441513,-2.473784,-0.699489,5.624562,-7.080049,7.036522,2.288184,7.718933,-6.355443,-9.108990,1.151804,-5.729880,8.952294,-3.286927,8.686973,-0.597516,1.699806,-7.948940,-4.469625,2.409116,4.185001,0.484232,-9.470342,8.583459,2.022456,-6.104469,9.614940,-5.509286,-3.370991,0.232593,7.625894,3.015770,-4.466022,-6.854338,4.517541,3.367836,1.604494,2.171831,4.143545,-0.469457,-0.365264,-8.463321,-6.423960,0.507014,9.252518,-4.686664,-6.625467,8.301303,4.749323,6.660911,-2.254232,-9.316079,-2.105577,3.992065,-4.883141,-1.261420,-0.691211,-2.527910,3.011956,-8.341049,-5.584376,9.571860,-3.032007,-2.188565,4.820026,8.910496,-0.537759,3.244106,0.815086,9.219275,-2.116312,2.205694,-7.263646,4.310231,6.929487,-0.097272,2.896325,-9.558292,-0.678690,8.411615,4.113329,1.806798,-3.314810,-6.882689,-5.092396,6.870854,0.451317,0.929565,6.808496,-6.262424,-6.600873,-1.298170,-9.399214,-6.428214,8.379078,-4.805791,-6.757193,3.243481,-9.588231,-3.301938,8.065231,-2.540813,-1.740524,-4.326396,-4.042425,-5.701935,9.725884,-1.537057,-9.278117,-4.704354,3.131071,-1.546582,0.576957,-2.724608,7.749509,-3.025974,8.360987,8.360303,-2.876480,3.817831,-3.483356,-8.595814,-9.244978,-1.184465,2.785819,1.465045,1.001342,-8.964074,7.210655,6.760606,8.573990,2.797606,-9.029873,7.728088,-4.618385,8.875061,-2.476183,-3.491082,2.358198,3.962890,1.389272,1.292734,-4.808808,7.771946,-9.900387,-5.866717,-3.789284,-5.572472,8.913575,-5.350065,-6.874668,-3.778098,7.795873,-7.975771,3.856228,7.185941,-3.118136,-0.074854,-9.759242,-4.712375,-7.143439,-0.670596,-2.958731,7.913900,-3.707904,9.460395,1.772909,-5.732611,-4.491273,8.976768,-7.159807,-8.658766,0.875753,-0.102058,8.841844,0.176247,5.489233,-2.350142,-8.068667,4.873666,4.841690,-8.783268,1.141949,9.378899,3.346578,8.393209,4.596318,-9.977266,-0.444938,-9.875226,7.270551,1.031237,-9.906640,-9.450607,4.498079,0.173599,-6.902174,-2.613126,-0.844410,9.571386,-6.794869,-1.446685,-9.559455,1.364728,0.580398,-8.011646,1.857306,6.266461,-9.125286,-8.704413,-7.881106,-4.537895,8.150783,-3.420704,1.769267,0.450536,-8.823532,6.509916,-3.467094,-3.496649,0.797167,-2.090273,-0.554751,-2.170115,3.674474,6.275590,-4.386632,-5.951664,-4.563433,-6.769646,-1.042127,0.778707,7.659066,-1.664788,1.712601,7.281369,1.902583,8.140478,0.189981,-0.962549,8.731976,-4.186195,-1.279601,7.245989,3.543781,-2.493296,-0.045541,2.915890,-9.730151,2.994288,-8.264346,-1.491303,3.260648,6.566061,2.931110,5.686983,4.423682,2.086796,5.014383,-5.983484,-6.504863,-9.804693,9.147408,-8.268716,2.709476,4.405897,-8.289152,-8.238460,-2.934575,-6.480451,1.620651,-6.324446,-5.652751,-2.596907,-2.641962,-2.669357,1.566754,1.834927,-3.211474,3.262088,-2.839700,0.650246,-8.908038,-6.167509,-8.359327,5.668838,-6.385574,-9.703798,2.525156,-3.857476,-2.065918,-7.094981,-6.127165,-1.997001,0.459808,-3.308094,-9.894827,-5.947997,6.113285,4.891060,5.459360,-9.840564,-5.139413,-1.907872,6.393706,-4.307032,-9.196474,-2.739150,-8.143276,4.906292,-5.468765,0.144945,-2.882655,0.566671,-7.701051,5.346923,2.899429,-8.264369,-3.620379,8.974799,6.067446,9.224340,-1.947830,-4.071562,-4.986433,-8.379969,-2.911224,-2.553827,4.129511,-5.509084,-6.381138,-7.555748,6.818746,-6.005309,0.751469,-7.599297,5.997439,-6.090521,6.342352,-3.025233,1.946922,-1.815758,9.953025,-5.858859,-7.713964,-7.766378,-4.148909,2.345323,4.747502,5.461405,5.464058,-9.393379,-4.629860,9.303044,2.399573,4.569074,-2.133402,-0.192807,-8.578109,0.077482,-4.359255,-3.971958,-0.249936,-1.756589,1.663717,-2.297193,1.096458,1.008543,-0.138667,9.509800,-4.571627,-1.838619,-7.880052,-0.507784,4.939746,-5.033285,-4.487127,-5.681883,-5.832022,-3.122432,-5.352845,-6.088306,3.087242,8.818882,-1.041051,-6.549374,-3.797547,-6.932905,0.763381,1.561039,-2.531709,-5.580471,-2.566266,5.617623,-7.467124,-3.129600,-6.287366,-1.854180,-8.263436,9.164139,6.520982,-8.510289,-8.510239,-9.576532,7.547335,-2.779845,7.705463,-2.455544,8.539961,-0.687034,-8.342085,2.620986,-6.954615,-9.418889,9.827897,7.103306,0.810926,-2.275871,-3.629542,-9.991375,3.699187,5.203002,9.549449,-6.952094,6.166545,-7.824082,-8.728759,1.873981,-1.474595,8.334558,6.487292,-1.259998,-8.505018,3.797043,8.163818,6.905380,-7.112639,-9.115522,-2.874205,1.789942,1.592835,2.731172,7.589866,-3.017799,2.317545,0.379342,0.407556,7.933153,8.954022,-1.803133,-7.558980,0.583599,5.993578,7.134265,-9.185880,9.973422,-5.349125,3.942225,7.921068,5.152165,-7.051482,-3.907651,-9.370781,2.693420,-3.569717,4.796537,9.625990,0.026087,-7.536268,5.886208,5.284088,-7.494731,5.675181,0.601675,-2.604092,7.642719,-4.905208,-0.594301,-6.809443,-8.530074,0.272355,0.325321,-0.535755,1.211684,8.596273,0.857138,-3.654910,0.560334,-2.692934,-5.865761,0.968236,2.517872,7.818035,1.658935,9.189770,-6.295065,9.987398,-5.506179,4.934240,-3.255527,-9.795314,0.723234,2.081372,-2.931316,-3.366590,-6.812202,1.313670,6.310781,4.911224,-2.136326,-0.164396,-5.366224,-4.931860,5.706737,-6.588488,9.774762,9.952591,6.464366,5.156131,-7.148106,5.609661,9.000692,-4.470818,7.024718,1.159680,4.207767,0.086039,6.350961,-3.220977,0.733159,-0.915431,6.779658,6.186710,3.111394,-1.398583,-8.269714,-5.677896,-8.383726,-2.373453,0.675601,6.070830,2.808225,-6.796889,2.246300,1.093935,6.082780,4.634725,-0.137566,-4.246167,5.698544,8.876091,-6.059920,1.160615,1.026180,-3.086660,-0.381026,0.474800,-8.264179,-2.965908,-9.701033,-5.563846,-7.989882,-8.738346,5.672216,-0.378355,5.360691,-7.815637,8.587741,1.771312,-9.063819,4.846533,1.762499,-5.554205,-5.282271,5.222231,6.689308,4.397187,6.107510,-7.525809,-6.161834,8.043845,-2.927872,7.280806,-2.158663,-9.928298,-4.749111,9.114945,-4.259857,-3.381137,-6.496628,2.748571,0.237117,7.328367,-7.447575,5.060069,-2.931290,5.584050,5.316518,1.316007,2.572646,-7.647066,8.680448,3.025591,2.532374,1.185847,-3.846259,0.476212,2.666146,-7.206934,-5.726285,-0.864989,2.095105,-8.550318,-1.646138,-6.099485,4.542239,0.668037,-6.961384,8.295541,-4.882235,8.051676,8.638942,8.480259,-2.861940,0.508742,4.732670,9.772490,1.840313,0.695667,5.116607,6.283292,-7.914041,-3.675739,6.187244,5.819340,-5.681995,-9.256035,2.290409,-1.236657,-2.552632,6.401094,7.975999,-1.790113,-3.495516,-9.516404,2.788024,-5.599512,-6.961733,-3.293319,-4.837533,-6.167220,-1.345671,1.449686,-1.216071,5.092035,2.814869,-7.625753,-7.860202,2.124383,0.715930,-2.065211,1.271682,-9.464520,3.099583,6.288548,-3.379202,-1.682861,4.562666,8.854264,8.016216,-5.000084,9.138941,1.724958,2.816077,-4.851285,-4.337752,6.437660,8.904350,-7.193210,-1.886711,2.861086,7.173287,2.030506,2.981559,-4.789064,-5.602699,0.568121,5.559928,9.166734,3.228069,4.397438,-2.053528,0.331306,2.815331,4.757714,3.186657,-7.124247,-3.786865,2.401497,-6.878279,4.646671,-7.806484,-0.828992,2.329199,-1.746839,2.705026,3.780371,-2.008880,-7.451029,-8.979594,2.380599,-4.156541,-1.272389,-8.912348,-4.247059,0.607942,8.165079,-0.323237,0.364453,3.401605,-7.823289,-7.075867,-4.566677,-2.926394,-6.819742,-4.382371,-1.943249,1.269460,-4.073619,8.258323,6.410329,-3.128734,-9.929154,-7.260632,-0.773417,-2.452384,5.672212,-2.478806,9.434577,-8.546556,4.749732,-5.277263,9.343231,-3.652969,5.346295,-6.161522,-4.935763,7.085107], dtype = "float32")#candidate|4566|(1568,)|const|float32
call_4565 = relay.TupleGetItem(func_3782_call(relay.reshape(const_4566.astype('float32'), [1568,])), 0)
call_4567 = relay.TupleGetItem(func_3784_call(relay.reshape(const_4566.astype('float32'), [1568,])), 0)
func_4449_call = mod.get_global_var('func_4449')
func_4450_call = mutated_mod.get_global_var('func_4450')
call_4570 = func_4449_call()
call_4571 = func_4449_call()
output = relay.Tuple([bop_4562,call_4565,const_4566,call_4570,])
output2 = relay.Tuple([bop_4562,call_4567,const_4566,call_4571,])
func_4579 = relay.Function([var_4560,var_4561,], output)
mod['func_4579'] = func_4579
mod = relay.transform.InferType()(mod)
mutated_mod['func_4579'] = func_4579
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4579_call = mutated_mod.get_global_var('func_4579')
var_4581 = relay.var("var_4581", dtype = "int16", shape = (15, 11, 9))#candidate|4581|(15, 11, 9)|var|int16
var_4582 = relay.var("var_4582", dtype = "int16", shape = (15, 11, 9))#candidate|4582|(15, 11, 9)|var|int16
call_4580 = func_4579_call(var_4581,var_4582,)
output = call_4580
func_4583 = relay.Function([var_4581,var_4582,], output)
mutated_mod['func_4583'] = func_4583
mutated_mod = relay.transform.InferType()(mutated_mod)
var_4626 = relay.var("var_4626", dtype = "float64", shape = (16, 16, 8))#candidate|4626|(16, 16, 8)|var|float64
var_4627 = relay.var("var_4627", dtype = "float64", shape = (16, 16, 8))#candidate|4627|(16, 16, 8)|var|float64
bop_4628 = relay.mod(var_4626.astype('float64'), relay.reshape(var_4627.astype('float64'), relay.shape_of(var_4626))) # shape=(16, 16, 8)
func_3695_call = mod.get_global_var('func_3695')
func_3696_call = mutated_mod.get_global_var('func_3696')
call_4634 = func_3695_call()
call_4635 = func_3695_call()
func_141_call = mod.get_global_var('func_141')
func_145_call = mutated_mod.get_global_var('func_145')
call_4636 = func_141_call(relay.reshape(call_4634.astype('float64'), [5, 7, 16]), relay.reshape(call_4634.astype('float64'), [5, 7, 16]), )
call_4637 = func_141_call(relay.reshape(call_4634.astype('float64'), [5, 7, 16]), relay.reshape(call_4634.astype('float64'), [5, 7, 16]), )
func_4107_call = mod.get_global_var('func_4107')
func_4108_call = mutated_mod.get_global_var('func_4108')
call_4647 = func_4107_call()
call_4648 = func_4107_call()
uop_4664 = relay.sin(var_4627.astype('float32')) # shape=(16, 16, 8)
output = relay.Tuple([bop_4628,call_4634,call_4636,call_4647,uop_4664,])
output2 = relay.Tuple([bop_4628,call_4635,call_4637,call_4648,uop_4664,])
func_4682 = relay.Function([var_4626,var_4627,], output)
mod['func_4682'] = func_4682
mod = relay.transform.InferType()(mod)
var_4683 = relay.var("var_4683", dtype = "float64", shape = (16, 16, 8))#candidate|4683|(16, 16, 8)|var|float64
var_4684 = relay.var("var_4684", dtype = "float64", shape = (16, 16, 8))#candidate|4684|(16, 16, 8)|var|float64
output = func_4682(var_4683,var_4684,)
func_4685 = relay.Function([var_4683,var_4684,], output)
mutated_mod['func_4685'] = func_4685
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3055_call = mod.get_global_var('func_3055')
func_3057_call = mutated_mod.get_global_var('func_3057')
call_4768 = func_3055_call()
call_4769 = func_3055_call()
func_3843_call = mod.get_global_var('func_3843')
func_3845_call = mutated_mod.get_global_var('func_3845')
call_4770 = relay.TupleGetItem(func_3843_call(), 0)
call_4771 = relay.TupleGetItem(func_3845_call(), 0)
func_502_call = mod.get_global_var('func_502')
func_506_call = mutated_mod.get_global_var('func_506')
var_4775 = relay.var("var_4775", dtype = "float64", shape = (96, 4))#candidate|4775|(96, 4)|var|float64
call_4774 = relay.TupleGetItem(func_502_call(relay.reshape(var_4775.astype('float64'), [6, 8, 8]), relay.reshape(var_4775.astype('float64'), [6, 8, 8]), ), 0)
call_4776 = relay.TupleGetItem(func_506_call(relay.reshape(var_4775.astype('float64'), [6, 8, 8]), relay.reshape(var_4775.astype('float64'), [6, 8, 8]), ), 0)
output = relay.Tuple([call_4768,call_4770,call_4774,var_4775,])
output2 = relay.Tuple([call_4769,call_4771,call_4776,var_4775,])
func_4780 = relay.Function([var_4775,], output)
mod['func_4780'] = func_4780
mod = relay.transform.InferType()(mod)
mutated_mod['func_4780'] = func_4780
mutated_mod = relay.transform.InferType()(mutated_mod)
var_4781 = relay.var("var_4781", dtype = "float64", shape = (96, 4))#candidate|4781|(96, 4)|var|float64
func_4780_call = mutated_mod.get_global_var('func_4780')
call_4782 = func_4780_call(var_4781)
output = call_4782
func_4783 = relay.Function([var_4781], output)
mutated_mod['func_4783'] = func_4783
mutated_mod = relay.transform.InferType()(mutated_mod)
var_4791 = relay.var("var_4791", dtype = "uint8", shape = (6, 4, 6))#candidate|4791|(6, 4, 6)|var|uint8
var_4792 = relay.var("var_4792", dtype = "uint8", shape = (6, 4, 6))#candidate|4792|(6, 4, 6)|var|uint8
bop_4793 = relay.equal(var_4791.astype('bool'), relay.reshape(var_4792.astype('bool'), relay.shape_of(var_4791))) # shape=(6, 4, 6)
func_2985_call = mod.get_global_var('func_2985')
func_2987_call = mutated_mod.get_global_var('func_2987')
const_4799 = relay.const([[-7.260899,-2.222080,-5.427208,-3.269277,5.568054,-4.437277,0.595768,-9.851119,1.435490,-8.896312,-8.932414,3.076401,0.785211,1.792682,4.130167,-2.316254,-5.094045,-4.480047,-9.735549,7.205730,-7.985062,-8.566473,5.894950,-3.661947,-1.288767,-1.678440,-2.179838,-0.761721,-5.961980,-6.942636,-2.270233,-3.340390,7.170390,-0.775596,5.220551,2.170121,8.992294,9.466643,4.485815,-9.985658,7.712231,-5.797025,-6.779139,7.285396,-8.473583,-5.737295,-1.340666,8.538649,0.486074,1.815285,6.877311,4.591770,3.988364,2.139343,-6.333008,-7.379870,3.091372,-8.713552,1.475566,-3.193272,9.519081,8.305428,4.245848,3.908219,-9.569064,0.813874,-1.209886,-7.482894,-7.181901,-9.416496,1.321512,-4.676733,6.234230,-3.993431,-3.818147,-2.331570,2.151888,-7.672267,-8.410198,-6.612084,-9.142342,-2.864260,-0.779351,-7.780785,-3.143380,0.666344,9.829016,-9.965991,-8.539899,-8.821869,-9.861354,-6.471137,-5.910099,-3.197490,0.879556,5.876199,8.628104,-1.363465,-4.173844,-6.530058,8.756508,5.012651,1.549119,0.781138,-6.637289,-9.425099,-4.784323,6.934037,3.318187,0.942009,-8.295532,1.056322,-0.514501,2.461914,-6.135374,4.379256,9.585869,2.839412,9.623766,1.078420,-5.232697,-0.589032,-0.191661,1.087356,4.923279,-6.933708,0.309558,8.339640,2.406959,-3.498992,-2.902093,8.746363,-9.375496,-1.838874,8.486378,-4.916871,-6.920668,-4.669346,-8.560932,-4.456923,-6.959104,6.771439,-4.801007,3.344628,3.268660,-5.859974,-4.077416,0.691395,-1.594407,-6.586739,6.682389,7.255191,4.289515,4.315588,5.929296,3.208599,-1.484779,3.643541,-5.332398,0.752609,-1.913012,0.862909,8.287165,-0.327369,2.281522,-3.318656,6.980446,-3.953376,3.291111,-1.844055,5.527686,0.865822,-9.141824,5.384803,4.049086,-3.309724,-8.585185,-7.184875,-9.576789,5.507950,3.216681,2.763697,9.063981,2.935068,7.083013,7.438128,-8.939170,-8.004429,9.231602,1.818094,-3.381844,-6.305530,3.166467,6.064523,1.402454,7.811326,-2.442447,3.472435,-4.675383,-6.962350,-2.358266,2.164092,-6.476226,1.808499,1.701194,5.583907,-3.967999,-2.485797,-0.594279,-1.535345,-9.274378,7.593535,-2.516262,-7.043535,8.555077,-7.379940,-8.038245,-2.393210,9.037826,-2.269158,-4.280282,9.078702,2.091235,0.990292,7.752820,-0.862024,1.474689,-8.074379,-8.255038,3.133405,9.786079,-1.341470,0.885819,6.351182,-2.659231,8.002657,5.477280,-9.274834,-3.906045,-8.128053,8.212475,4.512798,-4.030646,-5.607004,-6.540597,2.855870,6.868140,3.698901,-1.721169,3.219559,-6.007623,-4.614934,0.143532,-8.706307,-7.620487,6.535275,2.331005,-9.171970,-6.459656,8.595803,-7.605182,0.716689,-7.026990,-0.313408,2.517978,9.786806,-5.164807,0.583956,-9.739371,8.417214,-7.640050,-8.993030,2.914728,-1.699040,8.164590,-8.164747,-5.843524,9.232407,-3.516664,9.367956]], dtype = "float64")#candidate|4799|(1, 280)|const|float64
call_4798 = func_2985_call(relay.reshape(const_4799.astype('float64'), [2, 14, 10]))
call_4800 = func_2985_call(relay.reshape(const_4799.astype('float64'), [2, 14, 10]))
func_4514_call = mod.get_global_var('func_4514')
func_4516_call = mutated_mod.get_global_var('func_4516')
call_4816 = relay.TupleGetItem(func_4514_call(), 2)
call_4817 = relay.TupleGetItem(func_4516_call(), 2)
const_4818 = relay.const([[-9.924197,7.718938,9.289793,3.308587,-7.794143,-1.864276,0.313709,3.468937,-5.936506,6.954903,8.579641,-2.550442,6.486828,-3.869838,8.043105,6.660677,-0.635313,5.079076,7.415983,-3.421389,-1.475436,1.458616,5.777970,8.829161,5.959059,-0.273066,3.721553,-4.596180,-1.718474,-0.103118,-6.392469,9.244329,-2.114434,-1.823157,4.911428,7.431667,4.635869,1.436397,6.593584,-9.378081,1.876779,7.222572,-6.740804,8.539417,-5.478580,-3.261162,-1.989180,-4.930635,-5.412418,-0.121415,1.486418,-1.095451,7.888900,-7.139465,-0.642672,4.093485,3.866161,0.188347,-1.049826,-7.870123,-9.653079,2.708659,-6.264221,5.436813,-3.695118,-2.124590,7.947734,-7.354953,-6.071584,-9.795713,-5.334688,0.779762,-6.892354,7.898133,7.548329,-0.199987,-4.899439,-1.218398,4.542519,-4.604447,-9.624174,5.474609,5.348993,-2.145793,-4.029190,-4.608871,-8.607423,8.252561,-8.301478,6.428272,-3.332524,9.760436,8.834315,-6.105435,9.681036,-9.234270,4.476176,-9.853661,2.024116,8.814374,3.230738,-3.649189,5.225653,-2.124556,-1.382983,8.184674,3.756255,-8.411408,2.225384,4.228484,6.025319,-8.797064,-7.194695,8.083224,2.196328,7.590514,-8.035662,-8.814907,6.748199,-8.391255,-4.953905,8.048847,-8.145832,-9.087224,-4.997056,7.492946,5.656692,-9.456191,-6.363586,2.383384,-6.038790,-6.655451,5.555148,-6.076054,1.434863,-5.364754,4.551179,-9.024382,6.980853,0.869982,-5.054562,7.618532,-4.411748,3.479578,4.846719,-5.983495,-4.907385,5.185660,0.504481,-3.204520,-2.861482,-6.220014,-8.969254,0.595212,6.647207,5.422151,0.997839,4.129329,0.558621,-9.001359,2.536417,-5.879806,0.235861,1.445566,-7.340705,-6.437162,1.959340,-5.082281,5.398321,2.144913,-2.612998,-9.484745,-2.313491,4.988843,3.357121,-0.151825,-1.904886,-3.102214,-4.193623,-7.252029,9.929201,3.470018,0.935886,9.795185,-6.993360,4.708987,6.579453,-3.009155,1.001987,0.706371,-4.360636,4.779081,0.592502,-7.477463,-7.602162,-4.288356,9.946067,-8.098590,7.154162,1.582812,-8.965655,-7.767869,7.778672,0.093396,-9.211769,4.795361,4.853771,1.643190,-9.401155,-4.227432,-2.459457,-8.066066,5.838409,-9.198351,-4.860913,-5.964148,-7.153570,2.203008,5.876605,-9.617433,3.905837,-4.026130,-8.444701,7.090722,-9.094652,1.188166,-4.951884,-8.455922,-4.266877,-4.460029,0.196431,-6.366488,0.282148,8.780406,-5.668316,-4.046985,5.456161,-8.070776,-2.033264,-2.422671,-6.406130,6.036572,8.900346,-5.161380,-3.491759,2.363078,7.823091,8.325164,7.400525,8.304655,-9.987326,3.833047,5.374663,-4.643333,-7.833802,-5.544972,-0.414635,6.998345,0.013902,-4.843886,4.974277,0.856274,8.807533,3.260616,0.477667,-0.003667,3.258884,3.890168,-1.764212,-1.729979,-8.772137,6.363402,4.732091,5.165958,-3.404803,-1.926807,6.659298,-9.529847,9.509065,2.562942]], dtype = "float64")#candidate|4818|(1, 280)|const|float64
bop_4819 = relay.not_equal(const_4799.astype('bool'), relay.reshape(const_4818.astype('bool'), relay.shape_of(const_4799))) # shape=(1, 280)
var_4823 = relay.var("var_4823", dtype = "bool", shape = (15, 280))#candidate|4823|(15, 280)|var|bool
bop_4824 = relay.less(bop_4819.astype('bool'), var_4823.astype('bool')) # shape=(15, 280)
output = relay.Tuple([bop_4793,call_4798,call_4816,bop_4824,])
output2 = relay.Tuple([bop_4793,call_4800,call_4817,bop_4824,])
func_4836 = relay.Function([var_4791,var_4792,var_4823,], output)
mod['func_4836'] = func_4836
mod = relay.transform.InferType()(mod)
mutated_mod['func_4836'] = func_4836
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4836_call = mutated_mod.get_global_var('func_4836')
var_4838 = relay.var("var_4838", dtype = "uint8", shape = (6, 4, 6))#candidate|4838|(6, 4, 6)|var|uint8
var_4839 = relay.var("var_4839", dtype = "uint8", shape = (6, 4, 6))#candidate|4839|(6, 4, 6)|var|uint8
var_4840 = relay.var("var_4840", dtype = "bool", shape = (15, 280))#candidate|4840|(15, 280)|var|bool
call_4837 = func_4836_call(var_4838,var_4839,var_4840,)
output = call_4837
func_4841 = relay.Function([var_4838,var_4839,var_4840,], output)
mutated_mod['func_4841'] = func_4841
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3695_call = mod.get_global_var('func_3695')
func_3696_call = mutated_mod.get_global_var('func_3696')
call_4847 = func_3695_call()
call_4848 = func_3695_call()
output = call_4847
output2 = call_4848
func_4854 = relay.Function([], output)
mod['func_4854'] = func_4854
mod = relay.transform.InferType()(mod)
output = func_4854()
func_4855 = relay.Function([], output)
mutated_mod['func_4855'] = func_4855
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4230_call = mod.get_global_var('func_4230')
func_4232_call = mutated_mod.get_global_var('func_4232')
call_4856 = relay.TupleGetItem(func_4230_call(), 1)
call_4857 = relay.TupleGetItem(func_4232_call(), 1)
func_3055_call = mod.get_global_var('func_3055')
func_3057_call = mutated_mod.get_global_var('func_3057')
call_4866 = func_3055_call()
call_4867 = func_3055_call()
func_2985_call = mod.get_global_var('func_2985')
func_2987_call = mutated_mod.get_global_var('func_2987')
var_4883 = relay.var("var_4883", dtype = "float64", shape = (280,))#candidate|4883|(280,)|var|float64
call_4882 = func_2985_call(relay.reshape(var_4883.astype('float64'), [2, 14, 10]))
call_4884 = func_2985_call(relay.reshape(var_4883.astype('float64'), [2, 14, 10]))
uop_4887 = relay.sigmoid(call_4882.astype('float32')) # shape=(2, 14, 10)
uop_4889 = relay.sigmoid(call_4884.astype('float32')) # shape=(2, 14, 10)
bop_4891 = relay.left_shift(call_4856.astype('uint16'), relay.reshape(call_4866.astype('uint16'), relay.shape_of(call_4856))) # shape=(5, 7, 16)
bop_4894 = relay.left_shift(call_4857.astype('uint16'), relay.reshape(call_4867.astype('uint16'), relay.shape_of(call_4857))) # shape=(5, 7, 16)
var_4900 = relay.var("var_4900", dtype = "float32", shape = (2, 14, 10))#candidate|4900|(2, 14, 10)|var|float32
bop_4901 = relay.greater(uop_4887.astype('bool'), relay.reshape(var_4900.astype('bool'), relay.shape_of(uop_4887))) # shape=(2, 14, 10)
bop_4904 = relay.greater(uop_4889.astype('bool'), relay.reshape(var_4900.astype('bool'), relay.shape_of(uop_4889))) # shape=(2, 14, 10)
func_1514_call = mod.get_global_var('func_1514')
func_1518_call = mutated_mod.get_global_var('func_1518')
const_4917 = relay.const([9.355350,1.511116,-2.616907], dtype = "float64")#candidate|4917|(3,)|const|float64
const_4918 = relay.const([-6.942652,8.714307,3.788192,6.868072,-9.518712,-6.921525,-8.152429,8.710021,6.384708,-4.917413,3.852412,-6.657260,-8.154334,0.369608,5.405602,-5.452576,0.287496,0.543907,-4.937135,-8.876559,-6.894500,9.041833,-4.557732,6.806283,5.972577,-9.791630,4.548672,-6.367394,-4.767665,2.242046,-3.115892,3.749449,-6.065129,-2.645346,5.460579,5.830653,5.536855,-0.920700,-4.338767,2.599375], dtype = "float64")#candidate|4918|(40,)|const|float64
call_4916 = relay.TupleGetItem(func_1514_call(relay.reshape(const_4917.astype('float64'), [3, 1, 1]), relay.reshape(const_4918.astype('float64'), [40,]), ), 1)
call_4919 = relay.TupleGetItem(func_1518_call(relay.reshape(const_4917.astype('float64'), [3, 1, 1]), relay.reshape(const_4918.astype('float64'), [40,]), ), 1)
output = relay.Tuple([var_4883,bop_4891,bop_4901,call_4916,const_4917,const_4918,])
output2 = relay.Tuple([var_4883,bop_4894,bop_4904,call_4919,const_4917,const_4918,])
func_4920 = relay.Function([var_4883,var_4900,], output)
mod['func_4920'] = func_4920
mod = relay.transform.InferType()(mod)
var_4921 = relay.var("var_4921", dtype = "float64", shape = (280,))#candidate|4921|(280,)|var|float64
var_4922 = relay.var("var_4922", dtype = "float32", shape = (2, 14, 10))#candidate|4922|(2, 14, 10)|var|float32
output = func_4920(var_4921,var_4922,)
func_4923 = relay.Function([var_4921,var_4922,], output)
mutated_mod['func_4923'] = func_4923
mutated_mod = relay.transform.InferType()(mutated_mod)
var_4932 = relay.var("var_4932", dtype = "bool", shape = (10, 16, 4))#candidate|4932|(10, 16, 4)|var|bool
var_4933 = relay.var("var_4933", dtype = "bool", shape = (10, 16, 4))#candidate|4933|(10, 16, 4)|var|bool
bop_4934 = relay.logical_and(var_4932.astype('bool'), relay.reshape(var_4933.astype('bool'), relay.shape_of(var_4932))) # shape=(10, 16, 4)
func_2624_call = mod.get_global_var('func_2624')
func_2627_call = mutated_mod.get_global_var('func_2627')
var_4940 = relay.var("var_4940", dtype = "float32", shape = (144,))#candidate|4940|(144,)|var|float32
call_4939 = relay.TupleGetItem(func_2624_call(relay.reshape(var_4940.astype('float32'), [4, 3, 12])), 0)
call_4941 = relay.TupleGetItem(func_2627_call(relay.reshape(var_4940.astype('float32'), [4, 3, 12])), 0)
func_3184_call = mod.get_global_var('func_3184')
func_3185_call = mutated_mod.get_global_var('func_3185')
call_4944 = relay.TupleGetItem(func_3184_call(), 1)
call_4945 = relay.TupleGetItem(func_3185_call(), 1)
var_4979 = relay.var("var_4979", dtype = "bool", shape = (10, 16, 4))#candidate|4979|(10, 16, 4)|var|bool
bop_4980 = relay.floor_divide(var_4932.astype('float64'), relay.reshape(var_4979.astype('float64'), relay.shape_of(var_4932))) # shape=(10, 16, 4)
output = relay.Tuple([bop_4934,call_4939,var_4940,call_4944,bop_4980,])
output2 = relay.Tuple([bop_4934,call_4941,var_4940,call_4945,bop_4980,])
func_4986 = relay.Function([var_4932,var_4933,var_4940,var_4979,], output)
mod['func_4986'] = func_4986
mod = relay.transform.InferType()(mod)
mutated_mod['func_4986'] = func_4986
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4986_call = mutated_mod.get_global_var('func_4986')
var_4988 = relay.var("var_4988", dtype = "bool", shape = (10, 16, 4))#candidate|4988|(10, 16, 4)|var|bool
var_4989 = relay.var("var_4989", dtype = "bool", shape = (10, 16, 4))#candidate|4989|(10, 16, 4)|var|bool
var_4990 = relay.var("var_4990", dtype = "float32", shape = (144,))#candidate|4990|(144,)|var|float32
var_4991 = relay.var("var_4991", dtype = "bool", shape = (10, 16, 4))#candidate|4991|(10, 16, 4)|var|bool
call_4987 = func_4986_call(var_4988,var_4989,var_4990,var_4991,)
output = call_4987
func_4992 = relay.Function([var_4988,var_4989,var_4990,var_4991,], output)
mutated_mod['func_4992'] = func_4992
mutated_mod = relay.transform.InferType()(mutated_mod)
const_5003 = relay.const([[[-6.834813,-7.031699],[5.641432,6.281719],[7.690896,9.532418],[6.559461,-8.461837],[-5.113590,-0.874230],[5.002141,2.638670],[6.125090,-5.546234],[-6.303271,1.271823],[-3.628719,-9.823336],[0.948364,-9.553807],[-3.386401,1.522895],[0.944647,-5.536465]],[[-1.173502,-0.957706],[3.034964,1.796799],[7.045802,-8.681501],[0.899306,-5.970066],[4.656929,1.538815],[-6.714589,-8.856311],[4.326837,6.740072],[1.540669,-7.332596],[-6.232171,-8.779963],[-4.460257,-4.779231],[1.819895,4.457094],[8.309958,-8.004663]],[[9.377408,2.886167],[1.962949,-8.374211],[6.775522,-3.580197],[0.078501,-7.580601],[7.580215,3.740634],[-8.380973,9.513190],[-8.493974,-5.042110],[-7.733755,-3.790594],[-2.832694,-3.760312],[9.229503,3.027010],[-5.802864,-3.506914],[-5.104140,1.963839]],[[8.855110,-8.825818],[-8.867374,6.014548],[-4.179585,-8.842273],[-1.791229,-6.248282],[-6.275863,6.145047],[5.180500,-7.925779],[-5.732174,0.975461],[3.032184,-2.905100],[2.499882,-1.915540],[-8.842466,-0.400418],[9.512864,2.691042],[-5.244383,8.766630]],[[-7.000419,-6.245071],[2.428283,9.803678],[8.335154,-1.456944],[3.724666,9.027247],[6.279243,1.758663],[3.492874,9.577102],[-6.859361,8.064074],[-9.101385,-9.166073],[5.547127,3.656863],[7.559630,-8.322476],[0.750433,-4.248918],[7.271045,-5.599653]],[[3.856484,-8.005670],[3.389869,-2.871851],[-2.056053,-3.646361],[-4.589152,-9.743762],[-4.157924,-8.482294],[-7.814582,-4.768015],[7.219342,1.756834],[0.185363,-7.811862],[5.914882,9.607991],[-7.551476,-5.522095],[5.000299,6.429937],[4.623980,8.904701]],[[1.564368,-1.346900],[-4.011041,-1.076323],[6.863920,-5.920024],[0.381974,7.763939],[7.543628,7.695756],[-5.776320,1.664793],[6.225473,5.562354],[-6.823693,-1.924522],[-4.429984,3.192030],[3.994307,2.854548],[5.481223,0.967295],[-8.094680,3.351723]],[[-9.005163,5.210058],[5.708838,-8.893809],[5.304641,7.021605],[3.750816,-2.462558],[-8.723215,-9.290101],[2.424124,-6.979942],[-0.270356,7.986294],[0.940672,-9.390732],[7.756238,-1.218573],[-4.592970,7.533243],[8.721672,0.224965],[-1.187879,-9.640420]],[[-7.118239,0.350980],[-0.425826,-5.457194],[9.570579,4.945864],[3.799284,-4.929522],[4.803254,5.650870],[-8.688706,-2.609781],[4.883580,-3.910401],[0.311024,0.178144],[9.011542,1.748953],[-9.377533,-5.419854],[3.795176,-3.735265],[-4.616502,9.007601]],[[-1.520521,4.787807],[-1.187924,-4.660970],[-1.561386,6.193606],[7.710322,4.922702],[6.005616,4.772490],[-1.586661,-7.948610],[3.547230,-8.340783],[0.251844,-3.317083],[-4.486639,-4.086723],[3.357319,8.239674],[8.377646,5.839606],[5.502141,-0.157299]],[[3.175057,-0.814623],[1.251577,8.572747],[-7.149966,-3.677738],[5.262215,6.051923],[9.809188,-3.851954],[-5.284945,-2.806921],[0.985076,-4.675554],[-1.814822,5.240105],[-3.036183,1.744706],[-9.140697,6.449551],[7.546388,6.621621],[-8.496915,-9.756572]],[[-1.642500,-1.632955],[-2.672363,2.594458],[-2.870711,-9.180785],[-7.313968,-2.843179],[-0.551941,-9.724163],[-6.671388,8.036238],[-7.842351,-7.145539],[1.444088,-5.817120],[-3.447075,-6.387013],[7.623323,-4.152850],[3.821159,-2.263989],[-9.573664,0.912135]],[[-3.238960,-0.551877],[4.865001,-3.710415],[-1.292598,-3.586715],[-7.383635,0.098691],[3.228619,9.729415],[1.901832,-3.483617],[5.926578,-6.135050],[5.179200,-4.529095],[-4.919456,-4.065361],[-5.053679,7.744482],[5.188803,-0.724733],[-7.605416,-8.222273]],[[0.997968,-7.333055],[7.542650,6.040450],[9.998967,1.558085],[4.353085,-5.322524],[-8.234940,4.208351],[-0.403955,4.900976],[-8.827292,1.423782],[7.419521,-3.941953],[9.581947,-7.277454],[1.330646,2.420325],[8.967992,1.155942],[-0.465067,-8.211042]]], dtype = "float64")#candidate|5003|(14, 12, 2)|const|float64
var_5004 = relay.var("var_5004", dtype = "float64", shape = (14, 12, 2))#candidate|5004|(14, 12, 2)|var|float64
bop_5005 = relay.floor_mod(const_5003.astype('float64'), relay.reshape(var_5004.astype('float64'), relay.shape_of(const_5003))) # shape=(14, 12, 2)
bop_5010 = relay.right_shift(const_5003.astype('uint8'), relay.reshape(bop_5005.astype('uint8'), relay.shape_of(const_5003))) # shape=(14, 12, 2)
output = relay.Tuple([bop_5010,])
output2 = relay.Tuple([bop_5010,])
func_5014 = relay.Function([var_5004,], output)
mod['func_5014'] = func_5014
mod = relay.transform.InferType()(mod)
var_5015 = relay.var("var_5015", dtype = "float64", shape = (14, 12, 2))#candidate|5015|(14, 12, 2)|var|float64
output = func_5014(var_5015)
func_5016 = relay.Function([var_5015], output)
mutated_mod['func_5016'] = func_5016
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3611_call = mod.get_global_var('func_3611')
func_3612_call = mutated_mod.get_global_var('func_3612')
call_5023 = func_3611_call()
call_5024 = func_3611_call()
output = call_5023
output2 = call_5024
func_5034 = relay.Function([], output)
mod['func_5034'] = func_5034
mod = relay.transform.InferType()(mod)
output = func_5034()
func_5035 = relay.Function([], output)
mutated_mod['func_5035'] = func_5035
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2949_call = mod.get_global_var('func_2949')
func_2950_call = mutated_mod.get_global_var('func_2950')
call_5143 = relay.TupleGetItem(func_2949_call(), 0)
call_5144 = relay.TupleGetItem(func_2950_call(), 0)
func_3695_call = mod.get_global_var('func_3695')
func_3696_call = mutated_mod.get_global_var('func_3696')
call_5155 = func_3695_call()
call_5156 = func_3695_call()
output = relay.Tuple([call_5143,call_5155,])
output2 = relay.Tuple([call_5144,call_5156,])
func_5180 = relay.Function([], output)
mod['func_5180'] = func_5180
mod = relay.transform.InferType()(mod)
mutated_mod['func_5180'] = func_5180
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5180_call = mutated_mod.get_global_var('func_5180')
call_5181 = func_5180_call()
output = call_5181
func_5182 = relay.Function([], output)
mutated_mod['func_5182'] = func_5182
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3066_call = mod.get_global_var('func_3066')
func_3067_call = mutated_mod.get_global_var('func_3067')
call_5217 = func_3066_call()
call_5218 = func_3066_call()
func_3326_call = mod.get_global_var('func_3326')
func_3327_call = mutated_mod.get_global_var('func_3327')
call_5238 = func_3326_call()
call_5239 = func_3326_call()
uop_5263 = relay.erf(call_5238.astype('float64')) # shape=(5, 7, 16)
uop_5265 = relay.erf(call_5239.astype('float64')) # shape=(5, 7, 16)
func_4449_call = mod.get_global_var('func_4449')
func_4450_call = mutated_mod.get_global_var('func_4450')
call_5269 = func_4449_call()
call_5270 = func_4449_call()
func_4484_call = mod.get_global_var('func_4484')
func_4485_call = mutated_mod.get_global_var('func_4485')
call_5274 = relay.TupleGetItem(func_4484_call(), 0)
call_5275 = relay.TupleGetItem(func_4485_call(), 0)
func_4012_call = mod.get_global_var('func_4012')
func_4013_call = mutated_mod.get_global_var('func_4013')
call_5282 = relay.TupleGetItem(func_4012_call(), 3)
call_5283 = relay.TupleGetItem(func_4013_call(), 3)
output = relay.Tuple([call_5217,uop_5263,call_5269,call_5274,call_5282,])
output2 = relay.Tuple([call_5218,uop_5265,call_5270,call_5275,call_5283,])
func_5284 = relay.Function([], output)
mod['func_5284'] = func_5284
mod = relay.transform.InferType()(mod)
mutated_mod['func_5284'] = func_5284
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5284_call = mutated_mod.get_global_var('func_5284')
call_5285 = func_5284_call()
output = call_5285
func_5286 = relay.Function([], output)
mutated_mod['func_5286'] = func_5286
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2676_call = mod.get_global_var('func_2676')
func_2678_call = mutated_mod.get_global_var('func_2678')
call_5328 = func_2676_call()
call_5329 = func_2676_call()
func_4012_call = mod.get_global_var('func_4012')
func_4013_call = mutated_mod.get_global_var('func_4013')
call_5346 = relay.TupleGetItem(func_4012_call(), 3)
call_5347 = relay.TupleGetItem(func_4013_call(), 3)
var_5351 = relay.var("var_5351", dtype = "float64", shape = (2, 14, 10))#candidate|5351|(2, 14, 10)|var|float64
bop_5352 = relay.maximum(call_5346.astype('int32'), relay.reshape(var_5351.astype('int32'), relay.shape_of(call_5346))) # shape=(2, 14, 10)
bop_5355 = relay.maximum(call_5347.astype('int32'), relay.reshape(var_5351.astype('int32'), relay.shape_of(call_5347))) # shape=(2, 14, 10)
func_3695_call = mod.get_global_var('func_3695')
func_3696_call = mutated_mod.get_global_var('func_3696')
call_5357 = func_3695_call()
call_5358 = func_3695_call()
output = relay.Tuple([call_5328,bop_5352,call_5357,])
output2 = relay.Tuple([call_5329,bop_5355,call_5358,])
func_5359 = relay.Function([var_5351,], output)
mod['func_5359'] = func_5359
mod = relay.transform.InferType()(mod)
mutated_mod['func_5359'] = func_5359
mutated_mod = relay.transform.InferType()(mutated_mod)
var_5360 = relay.var("var_5360", dtype = "float64", shape = (2, 14, 10))#candidate|5360|(2, 14, 10)|var|float64
func_5359_call = mutated_mod.get_global_var('func_5359')
call_5361 = func_5359_call(var_5360)
output = call_5361
func_5362 = relay.Function([var_5360], output)
mutated_mod['func_5362'] = func_5362
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3941_call = mod.get_global_var('func_3941')
func_3943_call = mutated_mod.get_global_var('func_3943')
call_5380 = relay.TupleGetItem(func_3941_call(), 0)
call_5381 = relay.TupleGetItem(func_3943_call(), 0)
output = relay.Tuple([call_5380,])
output2 = relay.Tuple([call_5381,])
func_5385 = relay.Function([], output)
mod['func_5385'] = func_5385
mod = relay.transform.InferType()(mod)
output = func_5385()
func_5386 = relay.Function([], output)
mutated_mod['func_5386'] = func_5386
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2676_call = mod.get_global_var('func_2676')
func_2678_call = mutated_mod.get_global_var('func_2678')
call_5411 = func_2676_call()
call_5412 = func_2676_call()
func_2949_call = mod.get_global_var('func_2949')
func_2950_call = mutated_mod.get_global_var('func_2950')
call_5413 = relay.TupleGetItem(func_2949_call(), 0)
call_5414 = relay.TupleGetItem(func_2950_call(), 0)
output = relay.Tuple([call_5411,call_5413,])
output2 = relay.Tuple([call_5412,call_5414,])
func_5427 = relay.Function([], output)
mod['func_5427'] = func_5427
mod = relay.transform.InferType()(mod)
output = func_5427()
func_5428 = relay.Function([], output)
mutated_mod['func_5428'] = func_5428
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3445_call = mod.get_global_var('func_3445')
func_3447_call = mutated_mod.get_global_var('func_3447')
call_5437 = func_3445_call()
call_5438 = func_3445_call()
output = relay.Tuple([call_5437,])
output2 = relay.Tuple([call_5438,])
func_5440 = relay.Function([], output)
mod['func_5440'] = func_5440
mod = relay.transform.InferType()(mod)
output = func_5440()
func_5441 = relay.Function([], output)
mutated_mod['func_5441'] = func_5441
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5440_call = mod.get_global_var('func_5440')
func_5441_call = mutated_mod.get_global_var('func_5441')
call_5445 = relay.TupleGetItem(func_5440_call(), 0)
call_5446 = relay.TupleGetItem(func_5441_call(), 0)
func_2676_call = mod.get_global_var('func_2676')
func_2678_call = mutated_mod.get_global_var('func_2678')
call_5448 = func_2676_call()
call_5449 = func_2676_call()
output = relay.Tuple([call_5445,call_5448,])
output2 = relay.Tuple([call_5446,call_5449,])
func_5469 = relay.Function([], output)
mod['func_5469'] = func_5469
mod = relay.transform.InferType()(mod)
output = func_5469()
func_5470 = relay.Function([], output)
mutated_mod['func_5470'] = func_5470
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3184_call = mod.get_global_var('func_3184')
func_3185_call = mutated_mod.get_global_var('func_3185')
call_5622 = relay.TupleGetItem(func_3184_call(), 2)
call_5623 = relay.TupleGetItem(func_3185_call(), 2)
output = relay.Tuple([call_5622,])
output2 = relay.Tuple([call_5623,])
func_5630 = relay.Function([], output)
mod['func_5630'] = func_5630
mod = relay.transform.InferType()(mod)
mutated_mod['func_5630'] = func_5630
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5630_call = mutated_mod.get_global_var('func_5630')
call_5631 = func_5630_call()
output = call_5631
func_5632 = relay.Function([], output)
mutated_mod['func_5632'] = func_5632
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4484_call = mod.get_global_var('func_4484')
func_4485_call = mutated_mod.get_global_var('func_4485')
call_5674 = relay.TupleGetItem(func_4484_call(), 0)
call_5675 = relay.TupleGetItem(func_4485_call(), 0)
output = relay.Tuple([call_5674,])
output2 = relay.Tuple([call_5675,])
func_5694 = relay.Function([], output)
mod['func_5694'] = func_5694
mod = relay.transform.InferType()(mod)
mutated_mod['func_5694'] = func_5694
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5694_call = mutated_mod.get_global_var('func_5694')
call_5695 = func_5694_call()
output = call_5695
func_5696 = relay.Function([], output)
mutated_mod['func_5696'] = func_5696
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2949_call = mod.get_global_var('func_2949')
func_2950_call = mutated_mod.get_global_var('func_2950')
call_5798 = relay.TupleGetItem(func_2949_call(), 0)
call_5799 = relay.TupleGetItem(func_2950_call(), 0)
output = call_5798
output2 = call_5799
func_5802 = relay.Function([], output)
mod['func_5802'] = func_5802
mod = relay.transform.InferType()(mod)
output = func_5802()
func_5803 = relay.Function([], output)
mutated_mod['func_5803'] = func_5803
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5440_call = mod.get_global_var('func_5440')
func_5441_call = mutated_mod.get_global_var('func_5441')
call_5817 = relay.TupleGetItem(func_5440_call(), 0)
call_5818 = relay.TupleGetItem(func_5441_call(), 0)
output = call_5817
output2 = call_5818
func_5819 = relay.Function([], output)
mod['func_5819'] = func_5819
mod = relay.transform.InferType()(mod)
output = func_5819()
func_5820 = relay.Function([], output)
mutated_mod['func_5820'] = func_5820
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5034_call = mod.get_global_var('func_5034')
func_5035_call = mutated_mod.get_global_var('func_5035')
call_5842 = func_5034_call()
call_5843 = func_5034_call()
uop_5858 = relay.atan(call_5842.astype('float64')) # shape=(5, 7, 5)
uop_5860 = relay.atan(call_5843.astype('float64')) # shape=(5, 7, 5)
output = uop_5858
output2 = uop_5860
func_5865 = relay.Function([], output)
mod['func_5865'] = func_5865
mod = relay.transform.InferType()(mod)
mutated_mod['func_5865'] = func_5865
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5865_call = mutated_mod.get_global_var('func_5865')
call_5866 = func_5865_call()
output = call_5866
func_5867 = relay.Function([], output)
mutated_mod['func_5867'] = func_5867
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5469_call = mod.get_global_var('func_5469')
func_5470_call = mutated_mod.get_global_var('func_5470')
call_5873 = relay.TupleGetItem(func_5469_call(), 0)
call_5874 = relay.TupleGetItem(func_5470_call(), 0)
output = relay.Tuple([call_5873,])
output2 = relay.Tuple([call_5874,])
func_5878 = relay.Function([], output)
mod['func_5878'] = func_5878
mod = relay.transform.InferType()(mod)
mutated_mod['func_5878'] = func_5878
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5878_call = mutated_mod.get_global_var('func_5878')
call_5879 = func_5878_call()
output = call_5879
func_5880 = relay.Function([], output)
mutated_mod['func_5880'] = func_5880
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5427_call = mod.get_global_var('func_5427')
func_5428_call = mutated_mod.get_global_var('func_5428')
call_5885 = relay.TupleGetItem(func_5427_call(), 0)
call_5886 = relay.TupleGetItem(func_5428_call(), 0)
output = call_5885
output2 = call_5886
func_5887 = relay.Function([], output)
mod['func_5887'] = func_5887
mod = relay.transform.InferType()(mod)
output = func_5887()
func_5888 = relay.Function([], output)
mutated_mod['func_5888'] = func_5888
mutated_mod = relay.transform.InferType()(mutated_mod)
var_5909 = relay.var("var_5909", dtype = "uint16", shape = ())#candidate|5909|()|var|uint16
var_5910 = relay.var("var_5910", dtype = "uint16", shape = (13, 15, 11))#candidate|5910|(13, 15, 11)|var|uint16
bop_5911 = relay.bitwise_or(var_5909.astype('uint16'), var_5910.astype('uint16')) # shape=(13, 15, 11)
output = bop_5911
output2 = bop_5911
func_5938 = relay.Function([var_5909,var_5910,], output)
mod['func_5938'] = func_5938
mod = relay.transform.InferType()(mod)
var_5939 = relay.var("var_5939", dtype = "uint16", shape = ())#candidate|5939|()|var|uint16
var_5940 = relay.var("var_5940", dtype = "uint16", shape = (13, 15, 11))#candidate|5940|(13, 15, 11)|var|uint16
output = func_5938(var_5939,var_5940,)
func_5941 = relay.Function([var_5939,var_5940,], output)
mutated_mod['func_5941'] = func_5941
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2856_call = mod.get_global_var('func_2856')
func_2857_call = mutated_mod.get_global_var('func_2857')
call_6050 = relay.TupleGetItem(func_2856_call(), 1)
call_6051 = relay.TupleGetItem(func_2857_call(), 1)
func_3586_call = mod.get_global_var('func_3586')
func_3587_call = mutated_mod.get_global_var('func_3587')
call_6058 = func_3586_call()
call_6059 = func_3586_call()
func_4090_call = mod.get_global_var('func_4090')
func_4092_call = mutated_mod.get_global_var('func_4092')
call_6060 = relay.TupleGetItem(func_4090_call(), 0)
call_6061 = relay.TupleGetItem(func_4092_call(), 0)
output = relay.Tuple([call_6050,call_6058,call_6060,])
output2 = relay.Tuple([call_6051,call_6059,call_6061,])
func_6063 = relay.Function([], output)
mod['func_6063'] = func_6063
mod = relay.transform.InferType()(mod)
output = func_6063()
func_6064 = relay.Function([], output)
mutated_mod['func_6064'] = func_6064
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5819_call = mod.get_global_var('func_5819')
func_5820_call = mutated_mod.get_global_var('func_5820')
call_6076 = func_5819_call()
call_6077 = func_5819_call()
func_272_call = mod.get_global_var('func_272')
func_275_call = mutated_mod.get_global_var('func_275')
var_6086 = relay.var("var_6086", dtype = "float32", shape = (378,))#candidate|6086|(378,)|var|float32
call_6085 = relay.TupleGetItem(func_272_call(relay.reshape(var_6086.astype('float32'), [9, 14, 3])), 1)
call_6087 = relay.TupleGetItem(func_275_call(relay.reshape(var_6086.astype('float32'), [9, 14, 3])), 1)
func_4836_call = mod.get_global_var('func_4836')
func_4841_call = mutated_mod.get_global_var('func_4841')
const_6091 = relay.const([4,-5,6,3,-7,8,10,6,-7,-8,9,-4,-5,1,8,4,-7,-4,-5,6,10,7,-6,-7,-6,-1,-2,-4,-2,10,6,-2,2,-7,-3,-10,8,4,-4,6,-3,-7,-4,1,-5,-7,-4,3,7,7,-2,2,6,-4,6,-2,-1,-5,9,10,-6,6,-8,-9,10,4,3,-4,5,-1,9,9,4,4,1,-9,3,-8,-6,-7,-1,8,10,-4,1,-5,1,-2,-9,8,2,-6,5,-9,10,-7,8,6,-9,-10,-8,-3,-10,-5,1,8,3,2,7,8,5,8,-3,1,7,-2,-8,-7,10,-7,7,6,-7,-7,10,-2,3,8,6,-7,3,-9,6,7,-8,-9,-10,-5,5,-3,-1,10,7,-9], dtype = "uint8")#candidate|6091|(144,)|const|uint8
var_6092 = relay.var("var_6092", dtype = "bool", shape = (210, 20))#candidate|6092|(210, 20)|var|bool
call_6090 = relay.TupleGetItem(func_4836_call(relay.reshape(const_6091.astype('uint8'), [6, 4, 6]), relay.reshape(const_6091.astype('uint8'), [6, 4, 6]), relay.reshape(var_6092.astype('bool'), [15, 280]), ), 2)
call_6093 = relay.TupleGetItem(func_4841_call(relay.reshape(const_6091.astype('uint8'), [6, 4, 6]), relay.reshape(const_6091.astype('uint8'), [6, 4, 6]), relay.reshape(var_6092.astype('bool'), [15, 280]), ), 2)
var_6094 = relay.var("var_6094", dtype = "bool", shape = (210, 20))#candidate|6094|(210, 20)|var|bool
bop_6095 = relay.greater(var_6092.astype('bool'), relay.reshape(var_6094.astype('bool'), relay.shape_of(var_6092))) # shape=(210, 20)
uop_6101 = relay.sigmoid(var_6094.astype('float64')) # shape=(210, 20)
func_141_call = mod.get_global_var('func_141')
func_145_call = mutated_mod.get_global_var('func_145')
call_6107 = func_141_call(relay.reshape(call_6085.astype('float64'), [5, 7, 16]), relay.reshape(call_6085.astype('float64'), [5, 7, 16]), )
call_6108 = func_141_call(relay.reshape(call_6085.astype('float64'), [5, 7, 16]), relay.reshape(call_6085.astype('float64'), [5, 7, 16]), )
output = relay.Tuple([call_6076,call_6085,var_6086,call_6090,const_6091,bop_6095,uop_6101,call_6107,])
output2 = relay.Tuple([call_6077,call_6087,var_6086,call_6093,const_6091,bop_6095,uop_6101,call_6108,])
func_6115 = relay.Function([var_6086,var_6092,var_6094,], output)
mod['func_6115'] = func_6115
mod = relay.transform.InferType()(mod)
mutated_mod['func_6115'] = func_6115
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6115_call = mutated_mod.get_global_var('func_6115')
var_6117 = relay.var("var_6117", dtype = "float32", shape = (378,))#candidate|6117|(378,)|var|float32
var_6118 = relay.var("var_6118", dtype = "bool", shape = (210, 20))#candidate|6118|(210, 20)|var|bool
var_6119 = relay.var("var_6119", dtype = "bool", shape = (210, 20))#candidate|6119|(210, 20)|var|bool
call_6116 = func_6115_call(var_6117,var_6118,var_6119,)
output = call_6116
func_6120 = relay.Function([var_6117,var_6118,var_6119,], output)
mutated_mod['func_6120'] = func_6120
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5819_call = mod.get_global_var('func_5819')
func_5820_call = mutated_mod.get_global_var('func_5820')
call_6161 = func_5819_call()
call_6162 = func_5819_call()
func_4355_call = mod.get_global_var('func_4355')
func_4360_call = mutated_mod.get_global_var('func_4360')
const_6178 = relay.const([2.258707,2.217917,-5.336156,-2.955374,2.907156,2.027127,-3.239197,-7.879332,-0.535565,-7.592800,1.397046,8.337342,2.790189,8.578224,3.563559,-3.085464,-4.859346,8.644603,3.425502,7.190461,6.079065,3.697008,9.113015,-8.361538,-1.451574,-0.734839,-2.335479,2.076337,9.812289,6.828961,1.363998,-2.879560,5.419509,-4.025197,8.877266,8.703417,-3.982610,-7.457196,0.400082,-7.920347,-7.671790,5.099472,-7.810190,-3.108353,-0.323939,-4.085268,-6.359306,6.302048,-0.281176,-8.480702,-0.783608,-2.937837,-7.586350,-6.259437,5.661682,4.473234,6.378646,0.742005,-8.246109,-0.482023,4.622690,-0.071785,7.546180,3.730539,-8.945204,3.880718,-6.439577,3.118214,-2.064113,-4.463584,-0.668698,4.598975,-8.588803,6.075077,5.006977,4.241676,-1.485096,-7.815435,-9.783422,7.696135,7.869137,0.229828,2.527140,-7.470957,-2.825514,7.901288,2.628523,-4.024256,5.088790,-7.456087,3.987420,8.812869,4.982086,3.265460,-7.355871,-9.683008,8.231794,1.194121,1.478428,2.171988,-4.212988,-8.076011,9.326908,5.179659,8.572757,1.130355,-1.544332,-8.181691,-5.177313,9.455145,8.595509,-3.312851,3.866138,7.438413,-3.615045,-6.499354,7.050338,-4.033502,0.507993,-1.548361,6.195664,-3.037120,-0.654945,0.333304,-1.662764,0.599458,8.680544,9.550364,0.463336,3.458931,5.551570,-3.425450,-8.019046,2.806114,4.428140,-2.659593,-1.835118,-8.686139,-3.433674,0.264867,-3.339271,-5.539130,7.405214,-7.188076,-5.710107,-4.623852,9.162114,-8.456523,7.872347,5.324489,1.123937,2.855153,-2.521552,1.105033,9.443036,-3.132095,5.151373,9.458244,-3.471225,-1.972665,5.052943,-8.829832,7.018498,0.313111,-8.498506,0.532122,-4.956091,7.730027,-7.196200,4.769192,-9.362571,8.037699,-6.447171,-0.112269,-3.619834,8.779455,0.063707,-2.704307,2.744969,5.246553,2.752965,9.133830,4.020520,-7.456686,5.410498,9.784132,4.534134,-1.569521,-1.485649,-3.655273,8.838367,-0.658989,1.433684,6.086204,-6.779817,7.092574,-3.984768,-2.598541,3.149146,9.071928,-7.412688,-2.209941,-0.868234,-3.328592,0.140569,5.160679,-5.294162,9.913272,0.542332,-1.229895,3.858573,7.178724,7.020732,1.441264,-8.877172,4.528780,-3.108024,4.886349,-0.784314,6.679216,-6.273369,-2.165339,-2.080095,4.106596,6.335127,-6.389608,7.666595,-5.700234,7.739931,4.323339,-0.193220,-8.605298,9.749971,2.694959,0.881144,8.222654,-9.314454,6.315990,-0.105375,-8.419123,-4.833269,-3.484894,-6.962893,-3.288890,1.732205,4.374504,9.839995,-5.488963,2.044315,-3.801292,-3.365143,4.990223,-0.212171,2.664960,0.164530,-5.022453,-0.147851,9.228083,3.149985,-5.514667,0.204763,-5.494068,-4.117748,4.268444,5.772257,-2.403895,-7.215425,-8.001554,-4.356602,3.745485,6.280622,-4.021619,-0.256667,-9.334339,9.481946,-4.800986,-0.135088,8.803890,9.031896,6.483305,3.247870,-8.199242,4.806244,-9.112790,6.525464,3.009046,7.082160,-1.872176,2.352415,2.110993,-5.894065,6.266320,-9.428056,7.313248,-8.724503,-1.661913,-0.753465,6.554088,2.702193,-4.142308,6.367062,4.327291,8.743984,-5.922896,-5.101995,6.176680,-8.812302,-1.168084,-9.012590,-4.573707,-1.811205,-8.530743,-3.882680,-5.989933,0.040778,-5.824144,-6.822436,2.719627,8.850796,-9.772580,7.274085,-9.582855,-9.687783,-8.608911,-1.876776,1.871065,-5.306072,-0.926985,2.516400,-6.892735,1.859738,3.523784,7.286884,3.947771,1.586719,-3.572418,9.412511,-1.526672,6.297340,-4.221889,8.510584,-7.249120,8.042131,-1.612133,2.018606,4.989631,6.559684,-1.262294,1.659256,-4.521048,4.047883,9.886000,6.452225,3.060014,2.773966,8.951983,6.826794,-1.206426,-1.349778,-2.865529,7.484450,-5.207267,-9.142396,6.906903,-4.298376,-5.702195,9.217527,-2.187331,1.324622,4.579816,-3.315725,-1.515756,7.592331,-5.657999,5.055993,2.248104,5.746177,-5.326899,2.800659,2.128866,8.882144,4.926318,-8.462074,7.355338,7.534735,-3.491282,5.455438,-0.115061,0.803444,-1.863462,3.359054,5.008863,7.931425,-5.034527,-6.905526,-0.408225,-7.978395,-5.325602,-7.800328,-8.264261,-0.594411,1.893063,9.638853,-6.438033,-9.937053,-4.193562,5.624031,-8.204485,7.744810,6.387375,6.240100,3.971950,8.609094,-5.169321,0.561918,-0.438911,2.473388,-5.524012,7.846760,0.522321,5.375282,8.261940,0.015559,-7.995924,-4.819769,-5.013970,5.386021,0.520303,3.394609,-2.764496,6.933687,7.088900,-0.943789,0.242252,-7.346567,-5.016777,-1.441601,-2.428007,8.699622,-6.872706,-9.360972,1.429001,-0.252438,0.460627,-2.982335,4.296985,-2.114067,-8.892221,-9.197654,-9.034380,-9.155964,-4.761198,-4.449534,5.205088,4.355453,0.402525,-5.765847,-0.958292,-9.139101,2.821086,5.125966,-4.027572,6.327384,1.179931,-8.065887,-2.866192,-4.212320,-4.494561,-7.218537,-8.138057,1.546333,5.232277,8.102882,9.830251,3.459777,-2.316174,4.186509,-3.214871,-8.509174,-0.607647,0.754193,8.981416,3.607006,-6.783309,8.632111,-4.236893,6.359428,6.879641,0.325495,-8.108357,9.427312,8.053063,4.495143,3.619627,1.278114,-8.167686,-3.806016,-3.359220,8.458147,2.144811,-5.793019,-7.571486,-8.514530,-8.755201,-2.046640,-5.934864,2.466952,-6.886072,-2.022196,-6.503469,0.976858,-9.725968,1.086064,5.544453,-8.740395,7.339811,-6.795428,-9.247863,1.525719,-6.143786,2.361749,7.774670,8.567903,0.979029,5.727590,5.602315,-8.108222,4.549276,0.222159,3.446808,2.022382,-4.960392,-7.859263,-9.209978,3.016699,0.671133,-4.846070,0.294433,-3.015186,1.344099,4.730810,-2.216080,-5.935516,5.256300,-4.535271,3.004361,9.236787,-4.266571,-6.740991,-4.188517,2.349035,-1.273694,-7.359597,3.538950,-0.792560,8.730910,-6.637293,-3.180572,9.862782,-1.470355,-7.417392,3.062628,8.840341,9.695598,8.898424,8.224573,2.413193,-3.865598,8.334491,-3.403746,-5.463863,6.445593,0.434291,4.603513,2.692119,-2.494188,-7.313887,-2.762899,6.526354,4.082362,3.679603,-1.483552,4.473287,-2.061880,-7.540686,-9.070078,-7.117985,8.045295,7.856570,-4.514530,-8.152940,-7.797302,8.338564,-4.908488,-4.740559,1.527441,-8.857034,-8.193828,-4.037711,4.475975,2.734453,9.499974,5.678630,3.537159,0.262971,-6.767969,6.424293,-1.143686,6.091731,8.381424,2.767371,9.868310,-3.278276,7.021559,-1.394390,-1.614394,-8.228649,-8.048165,-2.253837,9.435974,3.078069,-4.039209,-3.926792,3.477936,9.264776,-8.262320,5.243303,0.767874,6.017879,-2.663374,4.653014,-3.791058,-2.781946,1.158208,-0.186392,1.839239,-3.286176,-7.690530,-7.948184,-3.513799,7.349541,-3.566106,-6.128688,-5.096742,-3.516602,-3.720073,1.417140,-6.659766,2.402274,7.350388,-3.055197,4.215361,-2.373801,8.904043,-9.992918,-6.352908,-2.170094,-7.006178,-1.257267,2.007836,-1.288462,-2.486915,-3.923162,3.960243,9.139563,8.326055,9.211840,-8.672617,8.357834,5.362491,-3.145605,0.611604,-9.734119,6.348094,-3.342898,-8.373254,-1.100853,0.323484,8.826388,-8.613446,3.648746,-2.321151,1.380365,-7.111570,-4.259948,-9.743728,4.884929,-3.992838,6.998503,3.731139,-0.395215,-4.095999,-6.910462,8.049093,8.386969,-7.669635,6.933526,3.399351,-5.003605,9.400230,7.337242,8.560338,1.199860,0.116466,3.598001,1.771261,-0.893028,9.205732,8.323356,-6.434894,-1.398552,1.476616,6.765678,-8.021446,-3.052053,-6.641870,3.532465,-3.137472,2.189315,-7.755614,-2.486712,-2.937249,1.475160,-6.579023,-4.132955,1.374766,0.337736,0.540162,-8.940555,-2.241010,9.826028,-4.545693,-5.614390,-5.196820,-7.122696,1.925143,-6.716223,4.877996,0.897082,-5.609062,-1.579745,-2.081299,-1.094969,-5.710708,-7.462183,5.787779,-2.334776,-1.923060,-6.504042,-9.165754,2.514462,-6.481739,-3.444223,-0.827776,1.663583,4.131556,-9.117636,8.591871,9.975158,6.421705,7.948061,-6.148834,5.106457,-0.740582,8.341015,-2.194299,-5.700274,-3.830100,3.570901,-1.048794,2.066073,-5.962162,-0.879984,-4.433852,-3.129967,7.227854,-6.538716,2.005420,-1.113203,7.630880,-1.026017,2.700286,-3.071717,5.139272,-7.575412,-6.351696,-4.675719,4.472551,5.265026,-8.606770,-6.439094,6.655552,6.670191,-5.958652,-6.485480,9.670223,1.784930,-8.022066,-1.808685,2.876521,4.334073,-0.100734,9.394380,-8.164805,2.326523,-4.350253,-0.503221,-4.270531,-7.171357,-2.562428,4.495353,6.471023,-7.453664,-8.019256,-9.799996,3.860454,-8.842039,5.168436,6.560198,-0.050474,-6.444860,-6.349418,-2.625958,2.109361,5.328864,6.424907,0.727608,-5.354962,-2.538992,1.828464,-9.943345,6.516540,-6.332813,-9.837088,-3.591857,0.688066,5.695903,-9.786209,-7.138936,-4.395922,6.416578,-4.182710,1.965859,-3.363374,-0.538312,-0.348789,-5.554645,3.929269,-8.559451,-3.474257,-8.583689,3.463188,-1.162592,2.603255,8.900313,-5.042190,7.481656,-5.321550,3.609080,3.624619,-2.597642,3.512957,4.862152,0.818243,-2.879179,-8.141232,6.186470,8.976657,5.733543,4.745900,-7.621832,3.970063,-2.998347,-9.080677,-3.615523,1.680976,8.158004,4.212483,9.523943,-2.426962,6.505863,-8.749714,4.488638,-9.689721,-3.691656,2.592988,3.461833,3.181592,-0.822578,-5.691036,7.420148,1.246579,-6.480824,5.757712,-5.500524,9.669442,-4.100002,-1.362671,1.013857,6.587086,-2.214846,6.346999,7.595766,-4.154071,-0.633600,3.185138,-0.133006,8.256710,9.103624,5.513548,-2.048846,8.469182,-7.035584,-1.051819,-1.637651,-6.660104,5.653436,3.285902,-7.881894,-5.337750,-6.793476,-9.193104,7.970815,0.994979,-2.777859,-2.203879,9.852919,6.025282,8.842307,-2.659642,9.872872,8.916444,-0.038304,-4.493209,-4.544577,1.173670,-2.048592,7.646767,6.053723,-1.967190,8.402993,8.386326,0.512047,2.966821,-1.792435,-9.009528,-7.813033,-9.113384,-3.824325,0.793188,-3.758822,6.347761,-6.016006,-5.344744,7.699892,4.023780,1.281804,-7.167676,9.107129,1.489991,8.432603,-9.488005,2.907608,-5.656556,4.714574,-8.192545,-3.153667,-3.776095,2.111055,4.649318,4.017431,4.608175,6.122092,1.056513,9.513439,-3.715564,7.229743,-1.497118,-1.662555,-0.668902,-5.055393,3.745109,2.072001,6.818906,-8.190336,8.319360,7.684801,-6.650235,-0.255587,-6.325361,-3.881012,-3.438437,4.667516,1.421810,6.330845,0.339318,-5.239837,6.753068,-8.256250,-0.478530,7.304914,-4.907967,6.127639,8.183828,5.370700,7.806065,-4.201210,4.896186,5.932783,4.857055,-0.236020,-9.417437,5.413318,-0.919530,9.602817,-5.728080,1.278047,2.425307,6.825241,-3.003249,-2.582141,2.578389,-9.901086,-0.680627,9.995022,-3.280216,-9.027138,-2.443975,-4.034597,3.012980,-1.971672,-5.785575,1.616509,-3.538884,-1.181303,8.202933,-2.291537,-7.854571,3.928340,-0.007530,-1.543934,-6.732422,-3.451773,6.163469,-2.320045,-1.822226,-2.710347,-1.494751,-1.057131,1.878169,6.758958,-1.008258,7.926178,-3.241637,4.824563,6.353135,-1.265792,4.942004,-5.554128,7.894418,7.365796,7.887547,2.478604,3.620727,-3.076882,-6.469881,3.334247,-4.819879,4.869751,9.766796,2.927975,6.033094,9.395212,-4.861483,8.552053,-2.518584,2.087630,-7.209102,5.648386,4.637870,-7.146397,5.918638,-2.327031,-4.891103,9.421707,-0.396015,-1.472285,-0.426831,-4.173227,-7.442362,-6.865153,3.942232,-5.611868,-9.707465,5.211152,-6.039368,-8.483950,-1.907717,7.832854,-1.071306,-3.838046,1.356537,-5.912667,-0.544192,1.602217,-0.884893,0.165661,6.915203,-0.232110,4.299532,8.208627,4.350058,-3.481258,-2.300462,8.829367,-6.974755,-2.116560,-5.495384,8.186667,5.262466,4.908879,-7.211345,5.609711,5.383590,-2.759600,-0.150875,-8.313319,3.201704,7.363147,-5.930230,-9.603098,-5.165611,-7.063310,-4.392453,-7.913763,-1.405973,7.671070,-6.533902,3.084607,-8.584733,4.683841,4.782864,4.729628,-8.667958,2.560378,0.351461,9.733580,-5.409169,-4.672269,2.204552,-5.374863,0.509825,-9.627075,4.804360,0.755280,1.650350,-7.370424,-5.291003,7.314912,-3.998071,4.069969,7.777331,7.476308,-7.766235,-6.509421,-3.694171,-8.986715,-2.799904,-1.593431,-1.859862,-7.763002,-6.383026,-6.311612,-4.745529,3.312550,-7.186194,-8.590587,9.929545,3.387518,5.882820,9.702334,7.711007,6.057393,-4.752483,3.807499,8.800350,9.233394,-7.778551,-8.121150,2.247680,4.805997,-3.202990,1.065404,8.819329,-0.580257,-0.619434,7.145866,1.676259,-5.968071,-3.983180,-6.908659,0.196869,3.295811,0.449606,-2.325913,2.782327,5.286211,6.560553,7.493766,7.037329,4.192515,4.662208,6.778696,-8.310664,-9.376604,2.230002,-3.462506,-5.080140,-0.959721,-6.932849,5.553613,-1.003341,4.343060,1.142452,1.977561,-3.178628,6.342374,0.804111,-9.999395,-5.603025,-7.249649,6.435102,-4.409158,-0.449721,-9.038191,7.008053,-8.179571,-5.637312,0.512200,-2.008492,-5.180958,1.770350,-1.313294,0.883186,-6.208555,8.970232,9.541202,-7.495078,8.315178,9.162549,4.522990,8.483344,-1.574911,9.376347,6.720392,-5.115864,2.931176,1.988239,-0.105846,-1.352009,-8.902334,5.168416,9.043052,0.088293,-1.348211,-2.216586,1.832508,7.807541,9.421204,9.806085,-2.238528,-5.339902,-9.429731,9.887898,-2.605143,9.826265,-0.246503,3.875707,-8.488777,-2.160652,1.671267,-0.696538,-5.269681,-0.046392,9.836347,-8.384614,-3.350061,1.956235,9.618935,2.286292,-6.943295,-6.755791,-4.304000,-0.378183,6.590431,1.229594,6.647699,8.245562,-1.700303,0.285241,-8.844862,5.438496,4.707784,1.834194,-7.709588,-4.358263,8.957333,1.039096,-2.980143,5.324125,-4.797783,-8.244238,-1.765534,5.942811,-1.012961,-1.714249,-0.286157,2.045218,-2.605013,-4.649523,3.932292,-4.877076,-7.797745,-7.104756,8.553463,-4.833878,2.582111,-6.716888,-2.276381,-9.629978,-4.231489,8.491581,-3.342675,-9.938011,1.112941,6.121439,-0.858520,-3.001413,1.652229,4.998728,-9.458320,-4.216458,9.708398,8.781963,-6.791269,-9.881576,9.620838,-6.961081,-6.391220,-7.680273,5.991132,-2.755813,9.871966,-9.406210,-2.204129,-2.479234,9.898815,-7.361138,6.072557,5.397417,1.917043,-3.131618,5.694098,-6.323774,-2.798381,-4.935504,0.927415,1.609418,7.971916,3.041038,8.462685,-9.194623,1.536441,1.427938,-3.887558,-4.182265,-6.051422,-8.791411,0.918490,8.234628,-6.664813,-6.293538,6.118588,-7.089274,7.161551,-3.379218,6.357262,-4.132876,2.394055,8.195501,-3.132162,2.941698,3.220502,-0.981741,-7.081417,-0.884866,0.921808,-5.008354,-6.061268,7.055767,7.433289,-0.932519,-8.464703,9.610869,5.895049,-9.778723,-6.891271,-0.139663,1.928800,8.995697,3.787342,-7.303576,-9.782999,9.436231,-5.822374,-3.167372,-1.626385,-4.363071,7.501052,-0.072588,8.185280,-2.874768,-1.719773,8.319870,-2.881997,2.235810,-0.724361,-8.646507,3.195302,3.169490,4.435315,2.496571,-5.868733,-1.335623,2.486537,-3.792014,7.847230,-7.274048,-2.300987,-4.190560,-6.133081,-2.129775,6.559523,6.595109,-5.167780,-9.616589,6.065841,4.062786,-5.408651,9.399701,-9.288783,-7.180355,7.343017,2.365403,-0.630530,-3.611984,7.988355,8.813335,4.810103,4.681627,7.539588,5.310411,6.279381,-2.897910,4.623893,3.146318,-1.062669,3.915730,2.554085,3.904964,-2.418396,-2.927355,-7.007740,9.862773,6.442180,9.976945,-5.183655,4.619355,5.131525,4.673674,2.444886,-1.672724,-2.457566,6.640495,-5.156114,2.789005,-6.208029,-1.686056,1.125001,0.281301,2.177568,3.588177,0.501215,4.612339,3.905011,8.206062,-5.497760,-2.920615,-2.666276,-8.204631,-7.301188,2.514954,3.156721,7.553253,5.246222,5.476944,9.646083,2.258593,3.631766,3.194090,2.356243,-1.476169,-7.348600,3.166433,-6.398126,6.702106,9.586047,-9.881857,-1.466203,-3.242191,-3.853498,-3.915539,-3.519578,-5.072875,1.984037,-8.985977,0.429517,-5.237566,4.442016,-3.623685,0.239748,-7.984774,-9.901926,8.574383,-6.530504,5.118472,-5.640241,-4.023808,1.222133,-1.738115,-6.446669,3.669180,6.293357,9.367142,7.784694,9.231984,0.359633,-1.177889,-7.647169,0.662687,0.355702,1.505810,-0.199447,-9.331986,-4.416188,-1.209757,-1.391088,-2.360839,5.123868,-0.945293,1.735004,3.667199,-5.292697,7.289525,-3.984750,2.470768,9.872713,9.098199], dtype = "float32")#candidate|6178|(1568,)|const|float32
call_6177 = relay.TupleGetItem(func_4355_call(relay.reshape(const_6178.astype('float32'), [1568,]), relay.reshape(const_6178.astype('bool'), [14, 14, 8]), relay.reshape(call_6161.astype('float32'), [5, 7, 5]), ), 1)
call_6179 = relay.TupleGetItem(func_4360_call(relay.reshape(const_6178.astype('float32'), [1568,]), relay.reshape(const_6178.astype('bool'), [14, 14, 8]), relay.reshape(call_6161.astype('float32'), [5, 7, 5]), ), 1)
func_5938_call = mod.get_global_var('func_5938')
func_5941_call = mutated_mod.get_global_var('func_5941')
const_6181 = relay.const(7, dtype = "uint16")#candidate|6181|()|const|uint16
var_6182 = relay.var("var_6182", dtype = "uint16", shape = (2145,))#candidate|6182|(2145,)|var|uint16
call_6180 = func_5938_call(relay.reshape(const_6181.astype('uint16'), []), relay.reshape(var_6182.astype('uint16'), [13, 15, 11]), )
call_6183 = func_5938_call(relay.reshape(const_6181.astype('uint16'), []), relay.reshape(var_6182.astype('uint16'), [13, 15, 11]), )
output = relay.Tuple([call_6161,call_6177,const_6178,call_6180,const_6181,var_6182,])
output2 = relay.Tuple([call_6162,call_6179,const_6178,call_6183,const_6181,var_6182,])
func_6190 = relay.Function([var_6182,], output)
mod['func_6190'] = func_6190
mod = relay.transform.InferType()(mod)
mutated_mod['func_6190'] = func_6190
mutated_mod = relay.transform.InferType()(mutated_mod)
var_6191 = relay.var("var_6191", dtype = "uint16", shape = (2145,))#candidate|6191|(2145,)|var|uint16
func_6190_call = mutated_mod.get_global_var('func_6190')
call_6192 = func_6190_call(var_6191)
output = call_6192
func_6193 = relay.Function([var_6191], output)
mutated_mod['func_6193'] = func_6193
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5694_call = mod.get_global_var('func_5694')
func_5696_call = mutated_mod.get_global_var('func_5696')
call_6278 = relay.TupleGetItem(func_5694_call(), 0)
call_6279 = relay.TupleGetItem(func_5696_call(), 0)
func_2985_call = mod.get_global_var('func_2985')
func_2987_call = mutated_mod.get_global_var('func_2987')
const_6332 = relay.const([[-6.907885,-1.180550,-9.961779,2.009874,-8.352995,3.943925,-3.652315,-5.610019,-6.517051,-4.003312,6.881657,2.967012,-9.620015,-6.130157,-5.194284,7.311788,1.465330,3.760972,-6.721831,-6.859259,-1.158127,-4.212907,8.800682,0.841317,-1.761890,-2.211689,9.756352,-9.794272],[-9.326770,4.580819,8.320480,3.829699,-3.927885,-4.669110,1.419002,4.390132,3.645376,-9.816918,9.536420,-2.212415,-9.019641,5.686896,-5.873131,7.330038,9.889220,5.744224,7.061204,0.097333,-4.747076,-2.057982,-0.574858,1.961774,9.154575,-2.186128,4.671043,-3.080435],[9.782294,-3.798528,-9.616017,9.006087,-7.997045,-8.441358,4.881677,7.354581,4.429609,-9.273368,-8.422347,8.813787,5.816719,-9.500433,3.381961,-5.793133,-4.595821,-5.995190,-4.293768,-4.117495,6.526684,-6.182535,5.738346,-7.285337,2.552881,-3.694858,-7.989317,-8.068238],[-2.629827,-9.420942,3.704039,-5.809324,2.526146,-1.238394,-3.553801,-5.637986,1.412812,2.908020,0.316856,-4.880300,-5.326976,-3.572359,-0.553936,-8.733808,0.554990,-1.341479,-9.897172,-5.611556,-1.731748,1.937919,-4.348870,-2.190320,1.683616,-3.570178,6.819207,5.658935],[5.627822,-9.264606,-4.422949,-7.175510,6.497231,2.855090,-7.035395,-1.386501,-0.995402,5.946854,1.019451,9.132775,6.008126,7.308260,-8.000622,-8.314916,-7.074042,7.717369,-2.709334,-4.445930,7.175825,2.148502,-0.405316,-8.078526,8.675351,7.642248,0.040394,5.290606],[-3.056372,2.378977,-7.356746,-4.666582,-0.288465,7.696870,-3.448407,-7.645760,6.415495,9.060500,6.428049,6.628995,1.067065,-7.775088,7.540722,-7.533684,-9.938122,-5.288244,4.453220,-3.158386,-3.060542,-7.657521,7.265725,-3.969422,-6.369905,-6.671199,5.357648,4.208756],[-8.856272,2.395737,4.299652,9.606240,1.411027,-6.321281,1.816706,-4.270374,3.854260,-4.606516,-2.996091,3.105918,-0.812781,-9.444535,2.742889,-0.098369,8.638152,3.893691,5.316282,7.109034,-1.998958,-0.018787,-2.487344,-4.206366,9.060709,-8.339169,0.321483,1.647064],[-7.239699,-0.167621,2.041460,6.899973,-1.742839,0.304621,-5.131024,6.599845,4.582517,-9.905469,-5.742045,1.308087,3.618875,3.320801,0.016784,-0.999607,3.332334,-5.170848,6.519052,0.447736,-5.487887,-9.538631,3.427313,-4.545140,1.448219,-0.173007,6.604017,1.686881],[-8.655224,4.179010,1.397803,6.471309,-5.138260,9.622222,4.358058,-6.872293,-8.821426,-4.237610,-2.794179,-7.853306,4.278610,2.936505,-4.054780,9.888408,-8.746638,-4.549408,-9.404468,-5.229249,3.290354,1.906662,-1.508542,1.922086,-6.037577,6.688694,-5.248302,-9.346312],[-1.549151,-3.911987,-4.924649,5.053171,-2.594783,6.340848,0.252321,-3.746368,0.029376,-5.546417,4.497377,-5.423127,2.125502,-4.482176,8.309464,-5.589592,-4.266879,-6.366097,-3.921909,3.594852,-6.766120,-2.950013,-7.549192,-9.160201,-2.322786,-7.241328,-5.170653,5.788475]], dtype = "float64")#candidate|6332|(10, 28)|const|float64
call_6331 = func_2985_call(relay.reshape(const_6332.astype('float64'), [2, 14, 10]))
call_6333 = func_2985_call(relay.reshape(const_6332.astype('float64'), [2, 14, 10]))
uop_6349 = relay.sinh(call_6331.astype('float64')) # shape=(2, 14, 10)
uop_6351 = relay.sinh(call_6333.astype('float64')) # shape=(2, 14, 10)
var_6357 = relay.var("var_6357", dtype = "float64", shape = (2, 14, 10))#candidate|6357|(2, 14, 10)|var|float64
bop_6358 = relay.less_equal(uop_6349.astype('bool'), relay.reshape(var_6357.astype('bool'), relay.shape_of(uop_6349))) # shape=(2, 14, 10)
bop_6361 = relay.less_equal(uop_6351.astype('bool'), relay.reshape(var_6357.astype('bool'), relay.shape_of(uop_6351))) # shape=(2, 14, 10)
bop_6362 = relay.less(bop_6358.astype('bool'), relay.reshape(uop_6349.astype('bool'), relay.shape_of(bop_6358))) # shape=(2, 14, 10)
bop_6365 = relay.less(bop_6361.astype('bool'), relay.reshape(uop_6351.astype('bool'), relay.shape_of(bop_6361))) # shape=(2, 14, 10)
output = relay.Tuple([call_6278,const_6332,bop_6362,])
output2 = relay.Tuple([call_6279,const_6332,bop_6365,])
func_6370 = relay.Function([var_6357,], output)
mod['func_6370'] = func_6370
mod = relay.transform.InferType()(mod)
var_6371 = relay.var("var_6371", dtype = "float64", shape = (2, 14, 10))#candidate|6371|(2, 14, 10)|var|float64
output = func_6370(var_6371)
func_6372 = relay.Function([var_6371], output)
mutated_mod['func_6372'] = func_6372
mutated_mod = relay.transform.InferType()(mutated_mod)
var_6383 = relay.var("var_6383", dtype = "float64", shape = (2, 11, 11))#candidate|6383|(2, 11, 11)|var|float64
const_6384 = relay.const([[[3.605715,-9.378631,-8.811430,-9.718974,-5.729001,-8.813925,8.503169,8.500274,1.815072,1.132275,-4.983112],[-7.035691,7.599744,-9.635638,5.507660,-7.729381,9.126161,-6.986743,-6.211446,-4.339868,-9.416883,-1.898109],[7.310758,7.297047,9.841613,-1.126895,8.899948,1.600804,-5.119123,6.073013,0.710925,-6.332267,-3.218175],[-0.364968,-5.970196,2.934246,3.525226,-5.383652,-7.587567,5.051786,-8.239638,7.360733,-6.612101,-5.722791],[-9.623286,2.465689,4.492728,6.233165,-2.134730,6.550744,-0.125183,6.477249,-7.121952,-9.976971,-7.508289],[-8.890846,1.125057,-1.816511,9.714170,-8.744625,-1.820919,2.475566,2.452473,9.836058,7.928596,-4.800920],[-0.869822,1.174457,7.892281,5.400474,-0.389748,-4.043226,7.985654,9.257359,-0.339825,-7.451680,1.317883],[-6.191762,-5.189062,9.459994,-6.639297,1.499016,6.221260,-0.840117,-5.007333,-2.609730,0.423105,-9.262729],[0.187656,7.011410,4.448217,-0.293010,-9.421274,-6.315506,3.204298,-1.006235,0.632555,-5.602817,-9.659536],[-7.873309,-6.786993,4.888402,6.559954,-5.282379,-5.034831,-7.583872,6.925466,-8.189643,-2.201497,2.036467],[-8.670905,6.741579,2.043350,5.124249,-1.260429,4.299021,-9.652484,1.969943,-5.448760,6.687716,7.447599]],[[1.529079,-7.012119,-4.116764,-2.092163,-1.925134,9.694851,-5.126124,9.630889,0.823496,0.151636,-5.859649],[3.128390,-8.533829,3.412442,-8.020530,1.188844,-0.001836,-7.379439,-8.846641,-3.059255,7.786463,4.864848],[-9.141175,6.787373,-2.985757,-2.706129,9.918764,-8.066577,-0.548965,2.760494,5.547029,-1.234920,-7.840601],[-1.927657,0.571920,-4.323512,3.669026,-6.292639,-1.093478,1.779807,7.450418,-6.702744,7.863812,-1.573231],[-9.692812,1.406044,-4.512124,5.749991,-1.915316,-3.302941,-0.186220,-9.936641,-9.216658,-0.486929,8.450538],[5.329886,0.536387,6.800950,5.324275,-1.330047,0.801695,1.356328,4.135486,-2.114602,-7.782475,1.312218],[7.766682,-7.161669,5.771659,4.827388,-0.926566,0.095493,-8.136825,0.667303,-1.870483,6.346007,8.647349],[2.400745,-1.706793,-3.099301,-9.793574,9.367586,7.825744,2.168203,-4.009302,0.349763,-1.269428,5.678818],[8.783963,-0.498026,-9.102939,9.722758,-1.934615,0.565022,4.942843,4.395649,2.710135,0.768972,0.953307],[0.965285,6.968902,-3.469951,5.418356,-0.262284,-2.460425,-1.616937,2.405202,-3.130330,8.127586,-1.923930],[0.263749,-2.156946,-3.510568,-4.646356,4.516308,-6.660787,-5.131518,-1.890898,-7.886003,2.575557,9.374969]]], dtype = "float64")#candidate|6384|(2, 11, 11)|const|float64
bop_6385 = relay.mod(var_6383.astype('float64'), relay.reshape(const_6384.astype('float64'), relay.shape_of(var_6383))) # shape=(2, 11, 11)
bop_6394 = relay.maximum(bop_6385.astype('uint64'), relay.reshape(const_6384.astype('uint64'), relay.shape_of(bop_6385))) # shape=(2, 11, 11)
bop_6400 = relay.right_shift(bop_6394.astype('int32'), relay.reshape(var_6383.astype('int32'), relay.shape_of(bop_6394))) # shape=(2, 11, 11)
func_5440_call = mod.get_global_var('func_5440')
func_5441_call = mutated_mod.get_global_var('func_5441')
call_6416 = relay.TupleGetItem(func_5440_call(), 0)
call_6417 = relay.TupleGetItem(func_5441_call(), 0)
func_734_call = mod.get_global_var('func_734')
func_737_call = mutated_mod.get_global_var('func_737')
var_6422 = relay.var("var_6422", dtype = "float32", shape = (864,))#candidate|6422|(864,)|var|float32
call_6421 = relay.TupleGetItem(func_734_call(relay.reshape(var_6422.astype('float32'), [6, 16, 9])), 2)
call_6423 = relay.TupleGetItem(func_737_call(relay.reshape(var_6422.astype('float32'), [6, 16, 9])), 2)
bop_6438 = relay.equal(var_6383.astype('bool'), relay.reshape(bop_6385.astype('bool'), relay.shape_of(var_6383))) # shape=(2, 11, 11)
bop_6444 = relay.logical_xor(bop_6394.astype('int64'), relay.reshape(bop_6400.astype('int64'), relay.shape_of(bop_6394))) # shape=(2, 11, 11)
output = relay.Tuple([call_6416,call_6421,var_6422,bop_6438,bop_6444,])
output2 = relay.Tuple([call_6417,call_6423,var_6422,bop_6438,bop_6444,])
func_6460 = relay.Function([var_6383,var_6422,], output)
mod['func_6460'] = func_6460
mod = relay.transform.InferType()(mod)
mutated_mod['func_6460'] = func_6460
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6460_call = mutated_mod.get_global_var('func_6460')
var_6462 = relay.var("var_6462", dtype = "float64", shape = (2, 11, 11))#candidate|6462|(2, 11, 11)|var|float64
var_6463 = relay.var("var_6463", dtype = "float32", shape = (864,))#candidate|6463|(864,)|var|float32
call_6461 = func_6460_call(var_6462,var_6463,)
output = call_6461
func_6464 = relay.Function([var_6462,var_6463,], output)
mutated_mod['func_6464'] = func_6464
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3611_call = mod.get_global_var('func_3611')
func_3612_call = mutated_mod.get_global_var('func_3612')
call_6499 = func_3611_call()
call_6500 = func_3611_call()
func_4230_call = mod.get_global_var('func_4230')
func_4232_call = mutated_mod.get_global_var('func_4232')
call_6507 = relay.TupleGetItem(func_4230_call(), 1)
call_6508 = relay.TupleGetItem(func_4232_call(), 1)
output = relay.Tuple([call_6499,call_6507,])
output2 = relay.Tuple([call_6500,call_6508,])
func_6516 = relay.Function([], output)
mod['func_6516'] = func_6516
mod = relay.transform.InferType()(mod)
mutated_mod['func_6516'] = func_6516
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6516_call = mutated_mod.get_global_var('func_6516')
call_6517 = func_6516_call()
output = call_6517
func_6518 = relay.Function([], output)
mutated_mod['func_6518'] = func_6518
mutated_mod = relay.transform.InferType()(mutated_mod)
var_6574 = relay.var("var_6574", dtype = "float32", shape = (9, 12, 10))#candidate|6574|(9, 12, 10)|var|float32
uop_6575 = relay.exp(var_6574.astype('float32')) # shape=(9, 12, 10)
uop_6584 = relay.erf(uop_6575.astype('float64')) # shape=(9, 12, 10)
func_4190_call = mod.get_global_var('func_4190')
func_4192_call = mutated_mod.get_global_var('func_4192')
var_6598 = relay.var("var_6598", dtype = "float64", shape = (792,))#candidate|6598|(792,)|var|float64
call_6597 = relay.TupleGetItem(func_4190_call(relay.reshape(var_6598.astype('float64'), [9, 11, 8])), 5)
call_6599 = relay.TupleGetItem(func_4192_call(relay.reshape(var_6598.astype('float64'), [9, 11, 8])), 5)
var_6615 = relay.var("var_6615", dtype = "float64", shape = (9, 12, 10))#candidate|6615|(9, 12, 10)|var|float64
bop_6616 = relay.power(uop_6584.astype('float32'), relay.reshape(var_6615.astype('float32'), relay.shape_of(uop_6584))) # shape=(9, 12, 10)
output = relay.Tuple([call_6597,var_6598,bop_6616,])
output2 = relay.Tuple([call_6599,var_6598,bop_6616,])
func_6622 = relay.Function([var_6574,var_6598,var_6615,], output)
mod['func_6622'] = func_6622
mod = relay.transform.InferType()(mod)
var_6623 = relay.var("var_6623", dtype = "float32", shape = (9, 12, 10))#candidate|6623|(9, 12, 10)|var|float32
var_6624 = relay.var("var_6624", dtype = "float64", shape = (792,))#candidate|6624|(792,)|var|float64
var_6625 = relay.var("var_6625", dtype = "float64", shape = (9, 12, 10))#candidate|6625|(9, 12, 10)|var|float64
output = func_6622(var_6623,var_6624,var_6625,)
func_6626 = relay.Function([var_6623,var_6624,var_6625,], output)
mutated_mod['func_6626'] = func_6626
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5440_call = mod.get_global_var('func_5440')
func_5441_call = mutated_mod.get_global_var('func_5441')
call_6651 = relay.TupleGetItem(func_5440_call(), 0)
call_6652 = relay.TupleGetItem(func_5441_call(), 0)
output = call_6651
output2 = call_6652
func_6668 = relay.Function([], output)
mod['func_6668'] = func_6668
mod = relay.transform.InferType()(mod)
mutated_mod['func_6668'] = func_6668
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6668_call = mutated_mod.get_global_var('func_6668')
call_6669 = func_6668_call()
output = call_6669
func_6670 = relay.Function([], output)
mutated_mod['func_6670'] = func_6670
mutated_mod = relay.transform.InferType()(mutated_mod)
var_6688 = relay.var("var_6688", dtype = "uint32", shape = (7, 10, 15))#candidate|6688|(7, 10, 15)|var|uint32
const_6689 = relay.const([[[1,-1,7,-10,2,-6,-6,-9,1,1,-9,-10,5,10,10],[-7,8,-5,7,7,-7,-4,-9,-9,5,2,-1,2,6,7],[3,-1,1,-7,-3,8,5,-4,4,-9,-3,2,3,10,-5],[-9,1,9,-6,-2,9,9,-1,10,-6,2,-2,-5,-8,6],[2,-2,-5,-6,-7,8,-8,10,9,5,-3,-7,3,9,7],[-7,-1,3,-9,-5,-1,10,1,9,4,-7,2,1,8,-9],[3,5,4,-8,-10,7,7,1,1,-9,-7,-3,2,6,-4],[-6,-10,1,-2,-7,3,4,-3,-9,8,-3,-4,-1,10,8],[-2,-1,7,8,-2,-4,9,6,-6,10,2,-6,-10,3,-6],[-6,-5,-3,-10,4,4,-8,7,-6,-10,6,8,8,-8,-9]],[[-2,-3,1,-1,-8,4,4,-4,-9,-5,-7,-1,-10,-4,-10],[3,8,-10,5,-10,8,-3,-8,-7,-1,4,-5,4,5,-6],[-3,-8,-6,-9,-2,1,5,-6,5,7,-8,-4,7,-8,6],[-9,2,9,8,8,9,1,7,4,-1,-10,4,-9,1,-5],[-9,7,6,1,4,-5,3,6,3,4,2,10,5,9,7],[5,10,9,-10,1,10,-6,2,-2,3,-7,-9,1,6,-2],[-3,1,2,1,-10,3,-8,4,-4,-3,4,10,-6,-9,-10],[-7,1,8,8,3,-4,10,9,4,-10,-8,8,10,-2,8],[2,-5,-5,-6,6,3,-8,-4,6,-10,-6,3,-8,-7,1],[-2,-3,8,4,3,3,-10,6,8,3,-8,-6,-10,-3,-7]],[[-4,-9,-6,5,1,9,-3,-5,-4,-10,-10,-5,-1,-3,4],[3,6,5,1,3,-9,5,3,2,4,-4,4,1,4,2],[-1,-6,-6,-3,2,-10,10,4,7,9,-9,6,-2,-1,-2],[-4,7,-1,2,2,10,8,7,-3,9,-8,7,-4,-4,5],[7,8,-1,6,5,-1,10,-6,1,-3,-3,3,-8,9,1],[5,-5,-3,-4,-2,-9,-3,-10,9,-6,4,-5,9,3,3],[-2,-5,3,-5,-6,-5,10,5,-5,-3,-7,2,5,5,-9],[-3,1,10,-3,1,2,6,4,-3,-8,-1,3,-8,7,6],[4,-9,-7,-8,-5,-4,5,-10,3,-7,8,-5,1,1,7],[-4,-9,5,-3,10,2,-5,-4,-5,8,8,-9,-9,6,-8]],[[1,3,6,-10,3,-7,4,3,8,-6,1,2,-7,-4,-5],[6,-6,-8,9,1,7,-8,-1,8,-10,-6,8,-4,-1,2],[1,-1,-8,-9,-6,8,2,4,-6,5,-7,-8,-10,-4,1],[6,3,-8,8,-8,2,8,4,7,6,-8,4,-10,10,-5],[1,2,-9,-4,8,1,-10,3,-3,-3,-4,-2,9,-3,9],[10,9,3,-10,7,1,-9,-9,4,-3,-2,8,-7,9,3],[-8,-9,5,-7,1,5,1,4,8,-5,4,10,-3,-6,5],[-10,4,-9,1,4,-9,-5,-6,-2,6,-5,-5,2,-2,-10],[-10,1,2,-5,-6,-9,1,-5,5,-9,-5,3,1,-9,4],[1,2,1,2,10,-4,-4,3,2,-9,10,7,-5,9,-3]],[[-3,-10,-6,2,-7,-7,1,8,3,3,10,7,9,10,-5],[-4,7,7,6,-1,-2,-6,2,-9,3,-6,-9,2,2,-9],[-5,9,-8,-5,-6,7,-9,-2,-6,-3,-5,2,9,-4,-6],[-1,-6,2,5,-8,8,-10,10,-5,3,5,-6,-1,-3,-9],[8,7,-8,-7,8,3,-1,-2,-5,7,-6,5,1,8,-3],[-2,-7,-4,-10,10,-4,-6,8,-6,-5,-10,-9,-5,-2,-4],[-2,-3,-7,-5,-8,7,-8,9,-10,-8,1,-8,-2,9,-7],[-7,1,-9,-9,-5,9,-10,-4,-2,5,-1,-5,-5,1,-1],[8,7,-9,8,-3,4,-5,-9,-3,-3,-1,5,3,-5,5],[-3,3,4,8,-8,7,3,8,2,2,-2,-2,-1,8,-9]],[[1,5,4,3,-1,5,7,-1,9,-8,9,-6,-8,5,-4],[-8,8,10,-5,6,-6,-6,-8,-5,8,-9,-5,7,-5,-1],[9,-7,-5,9,-8,5,-5,-6,-8,1,6,5,7,7,6],[-5,7,2,-7,-9,-3,2,7,-10,-8,-3,10,-6,-9,3],[10,2,9,7,-2,-4,3,2,1,7,2,-4,5,1,4],[1,9,-9,-7,6,-3,6,-4,7,2,-5,-1,7,2,2],[-10,-7,-6,9,3,5,-4,5,9,5,6,-8,-10,5,-2],[7,-9,3,3,1,7,-5,4,1,1,-7,-8,4,-9,-2],[-3,5,5,9,1,-7,5,1,1,-5,10,9,-6,-7,-1],[7,8,-10,-9,-3,9,9,4,-1,2,7,-9,-9,1,-1]],[[-3,-10,8,7,9,8,-2,9,-4,10,8,7,6,-4,2],[-3,4,7,5,9,-6,1,-3,3,-3,-3,-10,10,-6,7],[10,4,-7,-7,-7,-6,3,-8,-8,-6,-3,3,9,3,10],[7,2,-5,2,-3,8,9,-7,-10,7,-9,4,6,-7,-3],[1,-8,-9,3,-5,-10,6,-6,8,1,1,8,1,-1,4],[-5,1,-7,-8,-4,7,-6,3,7,10,-7,-5,10,-10,4],[4,9,5,-10,8,-6,7,-9,5,-2,-1,10,5,-4,1],[-8,-9,2,5,-7,-5,-8,-6,-1,-3,8,3,2,9,10],[3,-7,-7,6,-3,4,5,-8,-1,4,3,7,-1,1,-2],[2,-3,8,7,9,-9,8,7,7,-7,1,4,-6,-7,-6]]], dtype = "uint32")#candidate|6689|(7, 10, 15)|const|uint32
bop_6690 = relay.right_shift(var_6688.astype('uint32'), relay.reshape(const_6689.astype('uint32'), relay.shape_of(var_6688))) # shape=(7, 10, 15)
func_6668_call = mod.get_global_var('func_6668')
func_6670_call = mutated_mod.get_global_var('func_6670')
call_6696 = func_6668_call()
call_6697 = func_6668_call()
func_2985_call = mod.get_global_var('func_2985')
func_2987_call = mutated_mod.get_global_var('func_2987')
const_6703 = relay.const([9.524589,-1.150372,-1.912838,3.098439,9.573105,-7.885091,9.118795,2.273529,5.977016,6.229950,-9.049191,8.312090,7.058997,2.571824,-0.797710,5.574762,-7.940640,2.923906,6.013184,4.819193,-2.344087,-8.376239,6.399261,-0.660714,-2.888158,8.778264,-4.373389,0.033673,4.473451,4.334756,4.204990,9.312730,-6.954627,-4.543864,-1.760849,1.444556,0.473840,-4.415417,5.588228,5.508596,-6.632819,-5.770568,-1.679132,-2.342083,-6.839945,0.296890,-1.456704,-0.423743,3.481380,-0.130122,-5.341497,-3.751930,7.372516,-3.993242,2.217928,-0.050848,-0.880049,6.789505,-8.970759,8.596045,0.896329,-6.076711,8.498827,-4.189571,2.239308,-6.407307,-9.435660,-8.083769,6.396422,-6.927941,-5.345875,-9.046029,-9.807875,1.729131,2.888580,7.999734,7.270664,4.090627,-2.510025,5.349872,-4.939192,7.862806,-1.009074,0.857206,-8.785523,2.841287,-6.330032,-8.920041,5.993695,-0.510630,-0.792023,6.582059,0.024865,-0.777471,-4.966566,-2.546212,-7.753424,-2.029680,4.949665,-0.240176,6.929311,-7.823039,-3.350611,-1.486665,6.836389,-4.640259,6.693848,2.948831,-9.593685,-2.499536,-6.633554,-4.903894,5.742505,8.755685,-5.900139,-8.938375,7.945433,4.319224,8.466281,1.028431,-0.444734,-3.479392,4.870373,9.014754,-6.222080,1.089151,-1.685442,4.523538,-5.231483,-4.737481,-5.748946,-8.586025,7.002374,1.062407,-2.671938,1.943432,6.806851,-5.040786,-5.990832,-8.682450,3.545863,6.676448,9.337055,8.509568,2.467215,-7.134919,2.172122,-0.362841,0.369267,4.375140,-1.773389,-7.358512,7.077757,3.184986,-3.591790,-9.960837,0.841474,5.913794,-2.257440,-1.341696,-7.597387,6.978795,7.480690,7.745271,-6.483645,-3.571847,9.900579,-3.999069,8.606861,-8.122775,8.884224,-5.466553,-5.173791,-9.261097,-0.322335,5.519942,4.902807,-8.289308,-0.655514,8.179648,2.651274,0.908188,8.530534,1.488025,2.575705,-3.581678,-3.918789,4.681414,6.293727,2.862668,-5.475298,-7.033885,2.107470,0.787040,-4.522213,-4.611775,-8.053756,4.742300,9.562097,3.063660,-8.026068,-3.737404,-5.946588,-1.141349,0.724138,0.187179,-1.847926,3.394386,5.494956,3.427034,-7.220711,0.609932,7.830401,-8.577978,5.360661,-4.638659,6.536510,-7.049636,-8.499961,5.572300,-6.138977,-4.562887,8.026761,-7.781669,-6.967063,-5.953175,-6.341976,5.967194,-6.304384,-4.601957,3.944915,-4.767177,0.176377,-6.987551,7.548421,3.921441,1.056402,-2.300468,-6.390111,8.732700,-6.408525,4.376047,0.123777,-8.895163,-5.199818,5.545881,3.305123,-0.159427,-3.901812,6.769957,2.478825,0.887838,-3.867939,8.787425,-9.874209,2.183178,-3.524129,8.326454,5.654620,-6.555123,1.504370,-4.354704,1.987267,9.849599,4.539026,5.715920,-7.378706,0.358558,-4.195051,5.780557,2.812543,0.377900,6.205642,7.011206,-7.160272,-1.298830,4.359466,0.240555,4.373607,-0.970168], dtype = "float64")#candidate|6703|(280,)|const|float64
call_6702 = func_2985_call(relay.reshape(const_6703.astype('float64'), [2, 14, 10]))
call_6704 = func_2985_call(relay.reshape(const_6703.astype('float64'), [2, 14, 10]))
func_2786_call = mod.get_global_var('func_2786')
func_2787_call = mutated_mod.get_global_var('func_2787')
call_6715 = relay.TupleGetItem(func_2786_call(), 1)
call_6716 = relay.TupleGetItem(func_2787_call(), 1)
func_5819_call = mod.get_global_var('func_5819')
func_5820_call = mutated_mod.get_global_var('func_5820')
call_6722 = func_5819_call()
call_6723 = func_5819_call()
func_4780_call = mod.get_global_var('func_4780')
func_4783_call = mutated_mod.get_global_var('func_4783')
var_6725 = relay.var("var_6725", dtype = "float64", shape = (384,))#candidate|6725|(384,)|var|float64
call_6724 = relay.TupleGetItem(func_4780_call(relay.reshape(var_6725.astype('float64'), [96, 4])), 0)
call_6726 = relay.TupleGetItem(func_4783_call(relay.reshape(var_6725.astype('float64'), [96, 4])), 0)
func_3586_call = mod.get_global_var('func_3586')
func_3587_call = mutated_mod.get_global_var('func_3587')
call_6727 = func_3586_call()
call_6728 = func_3586_call()
output = relay.Tuple([bop_6690,call_6696,call_6702,const_6703,call_6715,call_6722,call_6724,var_6725,call_6727,])
output2 = relay.Tuple([bop_6690,call_6697,call_6704,const_6703,call_6716,call_6723,call_6726,var_6725,call_6728,])
func_6738 = relay.Function([var_6688,var_6725,], output)
mod['func_6738'] = func_6738
mod = relay.transform.InferType()(mod)
mutated_mod['func_6738'] = func_6738
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6738_call = mutated_mod.get_global_var('func_6738')
var_6740 = relay.var("var_6740", dtype = "uint32", shape = (7, 10, 15))#candidate|6740|(7, 10, 15)|var|uint32
var_6741 = relay.var("var_6741", dtype = "float64", shape = (384,))#candidate|6741|(384,)|var|float64
call_6739 = func_6738_call(var_6740,var_6741,)
output = call_6739
func_6742 = relay.Function([var_6740,var_6741,], output)
mutated_mod['func_6742'] = func_6742
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6063_call = mod.get_global_var('func_6063')
func_6064_call = mutated_mod.get_global_var('func_6064')
call_6805 = relay.TupleGetItem(func_6063_call(), 1)
call_6806 = relay.TupleGetItem(func_6064_call(), 1)
func_734_call = mod.get_global_var('func_734')
func_737_call = mutated_mod.get_global_var('func_737')
var_6815 = relay.var("var_6815", dtype = "float32", shape = (864,))#candidate|6815|(864,)|var|float32
call_6814 = relay.TupleGetItem(func_734_call(relay.reshape(var_6815.astype('float32'), [6, 16, 9])), 0)
call_6816 = relay.TupleGetItem(func_737_call(relay.reshape(var_6815.astype('float32'), [6, 16, 9])), 0)
output = relay.Tuple([call_6805,call_6814,var_6815,])
output2 = relay.Tuple([call_6806,call_6816,var_6815,])
func_6828 = relay.Function([var_6815,], output)
mod['func_6828'] = func_6828
mod = relay.transform.InferType()(mod)
var_6829 = relay.var("var_6829", dtype = "float32", shape = (864,))#candidate|6829|(864,)|var|float32
output = func_6828(var_6829)
func_6830 = relay.Function([var_6829], output)
mutated_mod['func_6830'] = func_6830
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5180_call = mod.get_global_var('func_5180')
func_5182_call = mutated_mod.get_global_var('func_5182')
call_6832 = relay.TupleGetItem(func_5180_call(), 1)
call_6833 = relay.TupleGetItem(func_5182_call(), 1)
uop_6843 = relay.rsqrt(call_6832.astype('float32')) # shape=(5, 7, 16)
uop_6845 = relay.rsqrt(call_6833.astype('float32')) # shape=(5, 7, 16)
uop_6848 = relay.asin(uop_6843.astype('float64')) # shape=(5, 7, 16)
uop_6850 = relay.asin(uop_6845.astype('float64')) # shape=(5, 7, 16)
output = relay.Tuple([uop_6848,])
output2 = relay.Tuple([uop_6850,])
func_6873 = relay.Function([], output)
mod['func_6873'] = func_6873
mod = relay.transform.InferType()(mod)
mutated_mod['func_6873'] = func_6873
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6873_call = mutated_mod.get_global_var('func_6873')
call_6874 = func_6873_call()
output = call_6874
func_6875 = relay.Function([], output)
mutated_mod['func_6875'] = func_6875
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5427_call = mod.get_global_var('func_5427')
func_5428_call = mutated_mod.get_global_var('func_5428')
call_6876 = relay.TupleGetItem(func_5427_call(), 1)
call_6877 = relay.TupleGetItem(func_5428_call(), 1)
output = relay.Tuple([call_6876,])
output2 = relay.Tuple([call_6877,])
func_6878 = relay.Function([], output)
mod['func_6878'] = func_6878
mod = relay.transform.InferType()(mod)
output = func_6878()
func_6879 = relay.Function([], output)
mutated_mod['func_6879'] = func_6879
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2786_call = mod.get_global_var('func_2786')
func_2787_call = mutated_mod.get_global_var('func_2787')
call_6959 = relay.TupleGetItem(func_2786_call(), 1)
call_6960 = relay.TupleGetItem(func_2787_call(), 1)
const_6961 = relay.const([[[6.798169,2.791250,5.334840,-4.376754,-2.448462],[-5.800250,6.418267,5.049083,-1.557801,5.646922],[-9.130987,-2.456872,-9.613164,8.818592,8.420911],[7.281850,-7.985007,-1.057775,9.174019,4.309168],[2.467047,-9.026595,2.829162,3.525248,6.699951],[8.256465,8.171231,2.290730,3.541241,1.088721],[0.840849,9.344983,-6.047144,9.374111,-7.480382]],[[2.026798,4.564796,8.481597,7.539231,-8.167613],[1.827935,5.001620,-1.206601,-6.431796,5.439246],[-4.606747,-5.728303,-6.512407,6.826416,2.137682],[5.362009,-4.238362,-1.529325,3.736262,-2.538116],[4.894995,-2.828396,-3.828532,2.464206,-6.453639],[-0.603727,7.994440,0.531211,5.697625,0.587137],[-5.427128,6.658629,4.175081,-1.534062,-7.547960]],[[0.072017,4.913327,-5.449400,-7.344949,-4.533308],[-9.691531,1.069751,-7.830057,-8.315745,5.398447],[-0.958898,-8.435485,-5.446577,6.076923,-4.708781],[2.023362,0.620193,2.989127,-1.729712,1.205628],[2.770707,-4.914521,9.889797,2.037695,-6.974700],[-3.548416,-3.952594,1.407337,-3.179853,-5.892684],[-9.312225,-9.480560,-3.417004,1.233224,0.478788]],[[7.279921,-5.618321,5.742419,-0.705652,8.415209],[-5.784209,8.744559,-4.992493,2.164332,-7.005447],[-4.729937,-2.541663,-6.995440,-7.814994,9.376767],[8.489654,-7.089677,-4.428677,1.975744,-6.211233],[-7.683616,-0.281184,-9.343012,-7.210254,-7.169347],[8.371461,9.674507,4.133302,-2.806387,3.873352],[-1.743645,-4.198181,-8.923700,-7.233021,-0.351765]],[[1.767348,4.605169,-9.503045,-3.345478,-4.276728],[0.598023,9.915251,0.175323,7.809561,7.529554],[1.336675,6.194583,-5.284282,6.130967,2.041008],[-0.264226,-5.441108,7.820712,4.332648,6.113926],[-5.846334,3.233238,8.891384,-8.980926,-1.625461],[0.228277,3.320649,2.091476,-0.198141,2.382203],[-1.052696,-7.069454,3.742132,-8.273068,-2.982424]]], dtype = "float32")#candidate|6961|(5, 7, 5)|const|float32
bop_6962 = relay.right_shift(call_6959.astype('int64'), relay.reshape(const_6961.astype('int64'), relay.shape_of(call_6959))) # shape=(5, 7, 5)
bop_6965 = relay.right_shift(call_6960.astype('int64'), relay.reshape(const_6961.astype('int64'), relay.shape_of(call_6960))) # shape=(5, 7, 5)
func_3843_call = mod.get_global_var('func_3843')
func_3845_call = mutated_mod.get_global_var('func_3845')
call_6968 = relay.TupleGetItem(func_3843_call(), 0)
call_6969 = relay.TupleGetItem(func_3845_call(), 0)
func_885_call = mod.get_global_var('func_885')
func_887_call = mutated_mod.get_global_var('func_887')
const_6979 = relay.const([7.942982,-3.811502,-1.573608,-6.030702,2.447348,8.243430,3.254672,-4.355366,-9.842191,-8.075096,4.517269,4.737402,-4.151409,-5.696175,4.506898,6.777443,2.379619,8.166784,7.897100,-6.265901,-2.515451,0.886623,-4.545021,-0.697383,-5.726213,8.763661,1.408932,6.575692,-3.658985,2.416920,-8.389038,2.041230,9.013129,2.779369,-0.613220,0.685787,7.131176,2.544761,-1.139437,7.196051,-2.226761,-7.376523,1.936681,8.138343,5.698090,-2.930045,9.549854,-7.780374,-7.370589,0.948358,4.476329,8.150555,-8.380389,-6.388530,-3.123796,6.815517,-2.417939,-0.565494,-0.933273,-5.635703,5.755049,8.822558,-5.735897,2.277171,-8.207383,1.398967,5.815499,-1.125104,1.732846,-1.685901,-7.430963,-6.850269,1.585548,6.670907,-8.049673,6.857656,-3.059986,-1.078777,-9.322463,8.040766,3.712007,-5.086161,6.007517,-3.249699,-8.752445,-9.502221,-6.036625,3.365584,-4.652461,4.352079,-2.686526,-5.820869,-5.280806,8.988263,-0.882075,1.486890,-4.458918,-7.643509,-4.991338,-3.248402,2.724468,-6.688874,-3.047113,8.691887,-1.647293,3.944327,1.943069,7.119669,4.313908,7.359894,8.545238,9.209792,-2.730520,8.998582,-7.270057,1.858547,-2.411849,1.801994,-1.058112,0.212249,-4.623333,6.988669,-3.757945,6.828695,-0.897550,4.738619,0.220425,6.921512,-6.783856,-2.999553,-8.757043,-6.904341,8.241000,3.086236,-5.035633,-8.822693,-7.822561,3.101931,-9.919911,-7.052431,9.792778,-1.158417,-8.832199,-0.362065,-7.395204,8.391134,9.239061,-1.548246,8.779465,-0.539682,-4.930286,-3.723845,-8.317549,-0.570930,-9.790732,6.550910,-8.555133,-0.259006,3.045965,-6.389872,-6.216522,4.982111,0.146170,-4.965050,4.361271,5.010190,-0.205457,-5.644566,2.090822,9.452160,9.225254,8.360122,9.962149,-1.516575,-2.683470,-8.062162,-3.501964,-5.169326,7.318315,4.123113,9.610040,4.883624,-5.196272,6.375123,-2.437580,-9.343993,0.869473,2.602725,6.807887,-2.130971,-8.157318,-0.930314,-7.134463,4.931902,-0.303752,-2.314128,8.569433,3.248265,-9.657158,1.548429,1.342716,-7.020637,8.007883,2.576421,-2.257397,-0.637515,3.105608,3.305730,-7.987851,4.796746,8.776749,-5.203730,0.488496,8.317669,-6.096339,-6.090997,-2.297006,7.447013,3.158386,-0.859335,-3.424322,-7.254549,-1.979033,9.668974,-3.470605,3.813717,-3.330918,-8.062401,6.557984,9.101915,-5.934636,3.419290,3.354838,-9.702889,-1.481693,-0.415787,-2.917430,-4.708642,-6.894912,4.993334,-2.117457,6.755014,-9.651494,3.855132,1.535419,-8.231375,-1.333823,-1.835400,-4.990060,-1.031604,4.527949,5.318839,-2.378149,-3.826772,5.900302,5.400642,-5.445747,-5.232338,3.369693,-2.674846,1.469139,-9.177191,4.515267,4.099480,-0.847559,-9.483374,-2.120878,5.464932,7.283522,5.626714,4.599203,-8.729720,7.704628,-8.803651,-6.513022,0.443821,6.044825,-8.081174,-2.083823,-0.617005,1.944573,8.654422,-3.043030,-0.051982,-5.663979,-5.792918,3.834033,-2.510516,-6.712489,3.450312,9.808188,-2.297443,-1.822121,7.045360,-1.854175,3.118285,-8.526590,6.747435,4.980737,-5.215851,0.750540,2.648643,-9.556786,-6.054298,0.731966,5.038686,-2.990280,7.071256,-9.301939,-5.622963,4.057656,4.418081,-2.260581,-8.037637,-4.115384,9.329991,-3.746251,-4.293776,-6.058697,3.801202,-9.577959,8.999601,-2.810672,-6.617097,0.040710,9.502152,-3.210833,0.072838,0.990089,3.367460,-2.386292,4.438527,9.907833,2.999692,-8.172824,3.861889,-3.977786,-3.821122,-3.595291,3.688609,8.270718,-7.726551,3.322826,-2.420298,9.319652,5.788544,-3.177542,-7.693816,-6.608510,-5.366890,-2.362237,-0.522001,-2.244359,4.461353,5.900156,-3.514813,9.000485,-7.722904,-9.272655,3.759417,-1.977684,-9.200603,-9.709365,8.867156,-6.330161,7.266954,9.078884,4.582725,-6.135124,-2.129399,-2.941803,-7.987742,8.882408,-2.713840,7.571493,-0.454206,-6.488400,7.234292,0.534744,-4.078522,-2.811466,3.570157,7.579781,9.859953,0.658059,6.688752,-1.411978,-0.886068,-2.415080,-9.154069,-2.872829,-6.306346,6.925081,3.960024,-3.854974,-8.514215,-4.377998,-0.075447,6.232470,0.470399,-6.581662,-6.976577,0.422089,-5.610495,3.919119,9.751736,3.687932,8.030568,0.751571,-3.722135,-3.213347,-2.050598,-0.167673,-9.263914,-0.694779,-9.153906,-4.154672,-1.980917,7.649990,9.335873,6.012542,7.057973,-1.637618,4.897933,2.072201,9.325751,-1.696562,-1.033530,1.170097,-1.251184,9.723617,-4.862474,3.136502,8.788036,4.579990,-7.315485,0.969344,-7.870291,-0.940834,-6.642978,1.777104,5.711009,6.997943,-0.464486,-2.982656,1.740472,5.498760,2.096818,-8.883258,-6.752488,3.930038,-8.748631,-5.066855,8.122889,-9.376943,-3.908547,8.919166,9.596249,-8.414469,3.828118,1.268741,-2.720756,-3.645976,7.411259,-9.408300,0.237769,-3.285770,-6.080062,-0.517453,1.083206,5.938296,-4.826391,1.656913,-3.147640,0.043714,-7.212396,-0.496337,3.609036,-0.773428,2.064560,-4.199101,1.775385,-3.023986,0.700308,0.386599,9.451655,6.526714,2.460630,8.976292,-3.664646,-2.443092,5.846397,3.477057,6.586791,-6.747040,-6.093917,4.346760,8.564272,6.257346,-3.853156,-3.998710,-1.702067,4.774221,-6.669473,8.443211,8.606839,-1.952202,-8.391236,-6.611119,5.466826,-1.041019,2.715042,1.886383,1.550123,-5.390245,8.128298,5.279427,-2.079962,-8.048223,8.681334,2.675333,4.968276,-5.744653,6.435125,6.211178,8.898371,-7.598496,-6.774872,2.524291,-7.140122,9.808665,-3.905154,2.920384,-1.530208,-9.156502,6.834009,-8.449201,8.241928,-2.408335,1.124027,2.291597,4.956375,-0.386529,-1.617644,5.008000,6.492538,-5.485912,0.426498,-2.950899,0.749496,-5.647904,-9.952299,4.282469,5.116309,-7.190638,-4.446905,4.710581,2.376265,9.559054,7.030088,-8.956792,8.286098,2.761292,8.486837,-7.056093,-1.931467,3.801310,-4.559330,-8.760840,0.832334,-0.416301,-1.581558,7.557191,0.603429,5.806597,-5.909372,7.269960,3.173957,-7.080246,-8.596790,2.485698,1.696822,5.307849,-4.582858,9.144015,-9.440792,7.318982,9.906491,-7.580571,4.370069,-8.777801,-2.542152,7.381328,-8.586713,-1.027173,4.854379,8.930848,-3.858121,-6.738138,-4.819143,-9.090506,5.540475,5.404539,6.305827,-3.691068,-5.106189,-6.059153,-6.273748,-9.841017,5.699995,-2.516270,-7.482573,-8.637294,-8.358924,4.512813,-4.203565,-2.319792,7.636695,8.085641,3.685732,6.706956,-6.550165,-9.771244,-3.868382,5.058323,5.025291,-8.800651,4.810412,4.013467,0.272928,-8.815881,-9.862020,9.062722,-1.733754,-9.816649,-0.923141,4.891947,0.749439,-6.035070,-3.399186,-4.890693,4.509043,-2.356598,7.667203,-5.784764,-1.540181,-3.689884,1.216210,2.715601,-6.844315,-5.817509,5.829499,9.693226,4.171604,-2.148280,7.789206,-7.857909,8.329441,6.967801,-4.750301,7.580313,-2.852202,3.376261,-5.893755,-3.779987,8.021643,0.132933,-0.136197,3.967248,-1.442288,-0.973376,-6.493108,-5.787563,3.878001,-4.361431,-7.547805,-1.121487,-8.798011,-3.206023,-7.274855,4.001357,4.173380,0.603643,-2.917172,-8.830695,-6.028076,-0.585250,1.515985,1.341014,9.371473,-9.999098,6.033254,-1.946120,-6.957494,-1.249022,6.934874,-8.444135,6.736716,1.746722,7.336591,-8.596057,-7.701709,-9.078939,-2.659304,-3.990252,-9.523912,8.333320,0.047839,1.868368,-4.604378,3.809557,8.149373,4.587012,1.553594,-4.659920,-5.413568,-1.348690,-5.574437,-9.408675,-7.917005,-2.134577,1.191326,3.198408,7.097648,-6.917306,-2.307290,-2.477996,-0.432177,-3.920165,-5.681137,-8.024631,-7.675772,7.752734,3.050375,2.517035,-1.971669,-3.598007,5.242579,-6.434744,-7.564278,-6.229709,-3.061392,4.670371,-9.460162,-4.491290,-2.749998,9.722264,-4.202667,5.771957,-6.839782,1.440098,-9.108605,-8.983790,2.670704,3.999606,-3.173446,9.449845,-7.164204,3.528692,-8.121708,6.671108,-6.551104,7.762362,6.240660,-1.492125,4.531601,-5.996776,-1.741332,0.493200,7.261593,2.515977,5.419171,8.259558,4.168662,-6.330246,-3.154922,4.495801,3.471401,7.029303,6.763129,-4.168587,-5.784441,9.397873,-6.976442,-6.332671,1.854748,9.795928,-6.620120,-4.548296,6.372124,-9.291539,-7.796945,-2.299566,-0.119198,-4.903170,1.370842,2.162204,3.824698,-0.363920,5.846949,7.686685,2.478015,6.011245,1.728433,9.175988,8.097821,8.124069,3.149084,1.982594,5.253616,-1.888210,-5.650371,-8.232548,-4.428107,4.998774,-0.054363,-3.936281,7.091190,9.933276,3.734658,1.694020,-8.970899,-5.842094,-2.614329,-4.434040,7.128622,9.070242,-5.745128,1.187794,-6.290185,-8.616093,9.647743,-3.293161,0.244381,-4.249912,9.015935,7.539860,-8.983373,3.214924,7.147786,-7.732442,-5.521794,-0.222861,-2.775749,5.511892,2.108410,1.707908,-8.720639,1.551742,9.729696,-3.839816,-2.299118,8.463253,0.146134,6.425816,-1.415929,5.140747,6.654274,5.684816,0.518169,4.926790,-9.429052,-1.894248,-0.307937,-2.929764,0.113830,-7.469027,-5.019052,-5.779011,4.963042,-5.596204,3.883795,-8.148780,-2.112885,-1.410437,4.607292,-1.904588,-8.171298,-7.655593,-8.664276,1.980444,-1.390776,1.947032,8.411326,-7.473098,-1.086323,-3.487812,9.915862,-9.142429,-7.796753,1.945015,-1.581217,5.080371,-0.416028,-9.843680,8.146009,-1.131466,7.066788,-0.780556,3.025008,5.948104,-5.184785,-8.328352,5.177283,1.163979,7.751907,5.864908,-6.577844,1.010463,-7.321959,0.645978,4.480725,6.418043,-8.079048,4.740941,9.767680,6.516875,-5.383331,9.744084,-5.761334,7.753238,8.869015,-9.113010,6.992261,1.709565,1.036752,9.073899,-5.198102,2.863626,9.678253,8.292651,-1.558123,-2.234027,-5.045986,-2.484814,-2.205864,-0.842369,-7.261824,0.989330,-1.862116,1.734286,1.672938,-4.686721,-2.547115,-4.574987,-2.649123,-3.450488,-2.373141,2.004578,-2.980734,-2.143207,3.442429,-6.010371,7.913433,-2.288766,-5.364327,5.083498,-6.256061,-1.553931,5.801860,-2.145975,-8.414392,-4.617376,8.372681,3.870599,7.298738,-0.341843,-6.323687,-7.827029,-3.116736,-2.094963,8.920222,4.295146,3.558116,-5.214853,-2.830290,2.936662,8.859847,-1.797773,1.549889,-3.751849,2.863190,-5.907231,6.881632,0.917111,4.871956,0.921765,3.828763,-3.720520,-8.711259,0.650651,-0.146350,1.522537,0.307141,-5.881428,4.202798,1.266431,-4.548502,-5.264555,6.822188,8.564439,4.214057,2.433218,9.962944,-1.192663,-9.318734,1.168424,-3.819795,-7.599441,-5.912718,-8.544079,4.974810,-9.348541,6.941677,0.867531,-5.741865,6.617910,7.510805,-1.784672,3.997914,-1.567712,-8.282014,-4.923150,-5.796225,-7.963879,9.529315,-6.508272,9.111353,-1.473475,-2.799904,7.024673,8.035656,-4.082234,7.393251,1.889482,6.615037,-9.119575,7.089004,-7.879297,5.012381,-8.978269,-7.783044,6.447104,8.306970,-8.606483,1.856673,-9.122381,6.390129,-2.688839,7.188542,1.488074,9.386749,6.388925,-4.830827,4.638595,-5.679621,-2.881588,-4.207070,-3.679010,-6.291655,2.250569,-4.645891,-4.843968,8.324877,-3.000949,-9.156187,6.600469,3.627824,0.891847,1.871304,1.787691,-9.782532,-6.944620,7.984691,3.084115,6.621276,-6.846133,-1.295239,6.238623,6.315536,3.865580,3.399288,1.872085,3.398790,-0.336418,0.819510,-9.919870,-4.844172,2.552865,-2.136579,5.980196,9.039608,8.661375,-0.590473,8.020239,8.829882,9.177663,-7.029187,2.224323,7.046874,-7.727783,-0.013764,4.282530,6.092616,-4.252446,4.981037,9.366355,3.050302,-0.747136,-6.272937,4.010479,-1.059089,-9.495139,-7.228088,-1.329684,-2.990055,-7.364854,-1.412641,5.091012,-6.538591,6.588498,5.670695,6.687749,0.753258,-2.112440,4.790690,3.152056,-1.662308,-0.185393,-1.013560,5.399805,7.216544,6.905070,2.130833,1.365263,-0.522941,2.336540,-4.299227,9.171878,-8.874217,6.585251,9.510741,-8.249323,-0.531512,-8.433112,3.445839,5.837525,-1.347754,-8.177494,2.534090,2.684557,-9.100783,6.385871,4.610205,7.714065,-5.901338,-7.415756,8.418331,-5.303626,7.705741,-9.509882,-5.638518,-2.746762,-7.801654,-0.831897,-3.007669,-7.564840,-5.584198,6.160695,-9.613843,4.800033,1.696275,-9.541431,-5.088154,1.837108,-9.036947,5.853906,1.696320,4.354979,-3.135302,-5.111582,0.204474,-2.264189,-7.833509,-2.979465,-7.766750,-9.573829,3.726692,-6.196445,8.739858,8.448628,-1.352634,-5.333338,-6.076921,9.005546,1.573875,-5.310030,-0.588906,-2.186095,-0.956497,7.995247,-7.680518,0.650381,9.605151,-4.079557,3.023431,-0.288621,-5.741957,7.781252,-4.060924,8.836899,-6.734826,-4.088934,-2.295674,-7.859997,0.791276,0.706891,3.244242,0.166935,2.809150,5.703621,-6.741271,-7.784693,-0.488157,3.616977,-4.015875,-9.171915,-2.989179,-4.528649,5.498695,-5.210441,-7.082356,-5.852342,-2.654330,-9.052185,3.421044,-2.590091,2.497221,-4.051010,-1.417471,-1.300972,9.047987,-3.544053,-7.551616,-8.281727,4.942292,-6.661366,0.729237,1.716178,1.825947,2.175903,1.274449,-3.840209,-0.212029,-4.833047,-7.096546,2.140321,5.582580,-2.330837,-6.550194,5.649433,9.321005,-7.405834,-7.328411,-3.995185,7.122946,1.424386,0.378189,-7.420910,-3.552835,-6.227623,1.430645,-2.185432,2.421314,-9.739992,-3.030048,3.090205,-7.241672,-1.812511,4.612079,-7.965242,-1.664915,0.810258,7.260398,3.978862,-0.496541,-5.558588,9.706596,-2.273631,0.369974,5.381990,-9.163660,0.708292,-6.585479,-2.554955,-5.544048,-8.329632,-7.604227,-3.933838,9.667450,0.886728,-4.967577,-5.741308,8.680914,-6.852650,5.779819,-0.696352,1.949547,-3.948075,9.019453,7.639067,5.617213,-9.472044,-6.426443,6.382330,-4.125558,4.774823,7.705583,-7.659316,6.768928,6.034700,-2.902566,-3.981581,-1.759168,0.999396,6.143849,3.717220,4.884496,-9.731561,8.296179,2.458725,6.142211,-0.785915,-0.732868,4.274036,3.828630,5.031259,-9.769536,1.876483,-1.200295,-9.639308,-8.896851,5.505405,1.393077,9.114287,7.343397,-0.232293,3.705393,7.705402,5.036525,1.651337,-9.497691,7.077481,7.726391,9.925358,8.532490,3.039849,5.626970,9.707463,4.928448,4.867062,-9.535651,2.952569,-9.496458,1.331081,0.645284,1.360425,5.727759,-1.434131,2.115991,3.401782,3.889001,-6.095078,8.926051,3.049936,-5.339826,1.340039,-5.433383,3.796525,-6.348658,-3.635180,2.214949,8.760325,-6.097170,0.905216,8.635420,9.112675,-3.069557,7.145008,7.698744,-9.985057,-0.432855,-9.528211,-7.630451,7.707742,2.742775,-4.978225,0.241712,0.412550,5.160700,-4.674874,7.187632,1.729304,1.374791,4.214233,2.226992,9.815452,-0.885409,-4.751476,8.471249,0.179424,5.488393,6.751913,6.249852,2.232130,-7.584638,7.725087,7.853476,9.764435,0.745115,7.159196,-9.674796,-4.878852,3.693912,5.960050,1.748158,2.054006,-6.943478,4.424464,1.282947,-4.336568,-8.106643,-0.999736,-1.893198,1.824032,-3.398303,-6.159053,8.933584,4.231826,0.978272,4.667802,5.067136,9.557080,9.040452,4.422654,5.513886,-6.240973,0.803471,6.720612,-5.294062,-4.258272,-1.919399,8.099342,0.525783,-0.368779,3.378781,1.132366,-1.002938,-3.168570,-4.446756,-8.819022,5.004489,1.156638,4.053741,-3.442464,5.326651,0.983850,1.292924,6.403361,4.991444,8.069407,9.577676,-5.761088,-8.574492,-4.313643,-0.846980,-1.952119,6.349166,6.663891,8.849837,0.412301,-6.090823,-2.107758,6.494690,-5.802819,1.408526,-1.585128,5.429168,-0.661015,1.622137,-4.859001,4.000547,-1.105755,-8.162842,-9.958911,5.124167,0.294704,-9.444407,-9.909490,1.046175,-6.324551,-5.772275,-0.270963,4.680627,0.201625,0.819655,7.134945,6.080406,2.942470,9.026246,3.847804,7.270167,-6.966548,-0.412067,-6.181578,3.846160,-9.331310,9.907197,7.157204,3.013844,2.089550,-4.765248,2.245706,-0.876708,-0.618358,-8.230588,1.259586,-1.317587,7.180438,-8.133376,-5.057058,0.149877,0.865333,0.856034,8.480745,-3.342149,8.760634,1.418208,-6.611914,-9.477613,4.892553,-3.744028,-6.172809,-8.271522,1.948123,3.270705,3.246497,-2.884650,8.154324,7.459345,-0.018209,-1.525687,4.696500,-8.083695,8.013875,-8.647422,-5.926260,4.097475,3.667160,-4.433595,-9.156372,-7.968844,-1.659320,7.323695,4.287777,7.911552,-3.092820,6.995365], dtype = "float32")#candidate|6979|(1568,)|const|float32
call_6978 = relay.TupleGetItem(func_885_call(relay.reshape(const_6979.astype('float32'), [14, 14, 8])), 1)
call_6980 = relay.TupleGetItem(func_887_call(relay.reshape(const_6979.astype('float32'), [14, 14, 8])), 1)
func_5284_call = mod.get_global_var('func_5284')
func_5286_call = mutated_mod.get_global_var('func_5286')
call_6983 = relay.TupleGetItem(func_5284_call(), 0)
call_6984 = relay.TupleGetItem(func_5286_call(), 0)
output = relay.Tuple([bop_6962,call_6968,call_6978,const_6979,call_6983,])
output2 = relay.Tuple([bop_6965,call_6969,call_6980,const_6979,call_6984,])
func_6985 = relay.Function([], output)
mod['func_6985'] = func_6985
mod = relay.transform.InferType()(mod)
output = func_6985()
func_6986 = relay.Function([], output)
mutated_mod['func_6986'] = func_6986
mutated_mod = relay.transform.InferType()(mutated_mod)
var_6989 = relay.var("var_6989", dtype = "uint16", shape = (2, 11, 8))#candidate|6989|(2, 11, 8)|var|uint16
const_6990 = relay.const([[[9,8,6,8,5,-3,7,-3],[-8,3,-2,-1,3,-9,4,2],[7,-3,5,-7,7,-1,7,-5],[8,8,1,6,-7,-6,-10,-6],[10,10,-3,8,-6,-6,4,7],[-7,5,-4,-4,3,2,8,-10],[9,6,6,4,2,6,-1,-9],[8,8,4,-3,-2,2,-6,10],[4,-9,-7,-4,-5,6,-5,-2],[-10,7,2,3,-6,4,9,7],[-10,-4,1,8,2,10,3,-2]],[[-4,-9,8,10,8,4,-10,1],[-9,-6,6,-6,10,-6,2,5],[7,-2,-7,7,-8,3,5,-7],[10,5,-9,-2,9,-1,-6,-6],[-2,7,1,-5,8,7,3,-6],[-5,-6,-3,5,-6,10,-5,-6],[5,8,-7,4,-4,-9,-3,7],[7,4,2,10,8,-2,6,-1],[1,-6,-6,-4,-1,5,-7,4],[8,3,-9,-9,-5,-9,-1,2],[2,10,10,6,6,-7,-8,8]]], dtype = "uint16")#candidate|6990|(2, 11, 8)|const|uint16
bop_6991 = relay.equal(var_6989.astype('bool'), relay.reshape(const_6990.astype('bool'), relay.shape_of(var_6989))) # shape=(2, 11, 8)
func_885_call = mod.get_global_var('func_885')
func_887_call = mutated_mod.get_global_var('func_887')
const_7004 = relay.const([[-1.398678,-8.434380,-1.134400,-0.241735,-3.748709,1.014221,5.485690,8.438175,9.191189,1.085547,3.469204,-2.738157,-7.100055,-3.332067,-7.318465,8.843710,2.710908,-8.661767,9.057409,5.064328,3.517017,-3.527047,7.159826,5.455863,-3.656673,1.873768,-7.219912,-7.408725,3.599146,8.233853,7.536009,-1.239796,-4.503755,-1.302730,3.603088,-8.546362,-3.592671,1.769604,-2.474599,-9.471698,3.729365,-4.250264,-4.931869,4.034540,4.326859,8.906341,6.115584,0.595204,-9.161874,0.219257,3.130165,8.802297,-5.432413,2.054164,6.329530,3.466974,-7.908631,-2.547857,-8.208529,-6.262222,-5.389335,-5.781366,-3.853551,-1.382588,7.307827,-8.634459,2.125961,-7.377344,7.396169,-1.877763,-2.419063,9.474474,6.185283,6.068670,2.946912,0.135708,1.859927,5.681592,8.979931,-9.331189,3.774073,-2.989947,-9.564667,-5.750269,-9.591516,-2.723536,-3.937275,4.591684,8.059231,-5.142603,1.331695,5.304013,3.558311,-9.806523,-8.001838,-9.844828,1.360252,-7.086301,8.590983,3.727266,0.718505,-4.023686,-0.093232,9.631589,-7.273774,-2.943920,6.540128,-3.783362,2.876067,3.902572,-1.210151,7.116056,-0.690198,6.096048,0.830923,-5.767620,2.441255,-4.696995,-4.774668,9.094080,3.299835,-4.541851,9.955699,-0.117924,0.842804,-2.162739,2.468278,-9.530419,7.836379,1.159363,-6.040087,4.593481,0.668483,0.653141,8.597176,-6.381714,0.593344,1.232303,-3.537415,6.625598,-5.369715,3.654723,1.614171,3.190017,3.236947,9.068610,-2.768182,6.299794,9.111842,-6.530799,-0.812772,8.417083,0.850327,-4.289640,-1.526724,-5.369717,-8.627625,-6.958829,0.044725,-1.997005,1.360349,-1.794582,4.235473,7.758670,1.089456,5.935804,-2.903940,1.792029,-1.168399,5.865777,4.865935,2.768641,9.385869,9.600948,2.921866,-8.644047,-6.031627,9.371630,-1.761256,-3.331137,-8.720533,1.040380,-5.767124,-3.608755,4.327920,-1.600970,2.183083,-3.304965,4.183498,7.605611,7.283613,3.686824,1.791987,7.986064,8.251842,2.081335,-5.287161,3.210563,1.691860,8.127766,9.030487,7.099939,2.709493,-6.614263,6.584546,6.496841,3.899091,-2.954887,9.128322,-1.879593,3.562312,-6.790958,9.317967,6.519723,-0.436085,4.968417,-1.029914,-0.798250,-3.661171,-0.170885,6.724766,-7.345729,4.830042,1.443993,9.990539,4.965036,2.858405,-9.841521,9.852478,2.613701,-6.493394,-8.735419,7.696923,-6.005008,6.548972,9.708189,-3.294243,1.576008,5.939774,4.822363,-7.311381,6.222094,-0.121432,-9.443065,0.830062,9.186183,-2.834455,-1.051320,5.707959,2.954062,-8.888122,4.764892,6.719869,-0.325960,4.128605,9.032943,-8.634926,9.870425,-7.267785,6.671185,4.307422,6.572698,-4.460548,4.385511,-5.476855,-5.515192,6.468626,0.326603,-2.103015,9.978323,6.339558,7.279424,-9.848103,0.246497,7.412952,-7.181793,1.039375,-9.199125,-8.203644,3.411347,9.530756,2.748007,1.169982,7.392712,-7.862092,8.230144,7.524648,5.461987,7.188126,-0.638909,6.009858,6.959076,-7.161802,-4.262254,3.070364,3.234103,2.385869,-2.377830,7.150508,-3.029068,-1.243241,-7.025475,2.067837,8.218497,-6.344949,6.646305,1.834968,-0.728354,-3.052464,-2.820603,7.790925,-1.248933,-2.555378,4.912757,-7.991049,9.928779,-5.110926,-1.975768,6.455355,-3.390106,9.466164,-8.480135,3.081739,-9.709140,1.619217,5.784769,-9.616752,-5.383909,-7.440422,8.107247,8.616718,-9.424079,-6.356441,9.138999,-2.340881,2.023906,6.886266,-4.644396,-1.198822,9.882628,5.269584,-3.313690,-6.095531,-2.683233,8.574088,-6.414538,-7.839128,-1.564285,3.934270,0.201229,4.103021,-2.057930,-0.433312,7.088274,5.298793,-3.759612,-0.960391,5.725407,0.598530,5.789177,6.071827,-5.587361,-8.887361,-4.768523,-8.180118,-6.359576,-4.281599,1.784225,6.558867,2.369511,3.686975,-8.113480,5.453786,-3.940102,2.377031,8.865267,8.629770,3.261567,-5.535538,-3.225902,9.268854,-9.943772,9.491137,-6.631600,9.313695,0.274393,5.489592,-5.017964,6.178306,-6.381364,-9.989683,6.944899,8.650533,-5.028476,-5.619811,-6.052922,4.380303,2.102696,-8.708978,4.070406,-1.751542,-5.680932,-4.288512,-6.978764,-8.663243,9.802704,-7.155181,-5.439795,5.603990,2.012428,7.632252,2.586153,-1.449551,4.095725,-2.275018,-3.329034,-3.905803,-4.625342,4.829550,-7.261555,9.486333,7.653546,8.545339,9.191456,-4.979628,-6.937888,3.746791,-0.486062,9.277578,-3.400290,-9.857976,-1.194754,-3.243483,-4.724389,9.903792,8.867286,-5.881311,-2.007315,-1.996415,-4.628774,-8.076722,7.744771,-7.551015,8.891869,6.426116,6.795598,7.515519,-8.575035,-7.560126,9.023653,-3.664583,0.063134,1.064741,-6.566376,7.141297,-8.043894,8.832523,4.664071,3.938491,1.448884,7.323137,4.864132,-4.614054,-8.374760,-6.590727,-6.435263,-3.593142,8.905852,8.191006,4.132589,-9.541346,-2.362134,0.707599,1.950339,4.899475,-3.884333,3.087621,7.303810,3.388562,-4.207147,3.627057,-7.194021,-8.909476,-3.185992,4.262943,9.877381,2.457178,-2.538753,8.132141,-4.035218,-6.946521,7.157283,-2.365666,-9.360294,-7.446370,2.176198,5.342653,5.915432,8.754048,-1.378420,-5.880192,-1.024913,3.800036,-1.395749,-8.892365,6.318260,9.939615,-6.418886,4.529947,-3.484353,7.397587,-7.218692,8.085243,1.224553,8.157331,-3.959130,6.768351,0.369545,6.587991,9.633036,-6.661392,-2.140592,-1.876538,1.247943,2.961138,4.254371,6.169986,-9.810981,-0.592373,4.234989,0.165535,4.979437,-0.064478,3.655973,-8.720629,7.845133,-8.127913,2.327289,-6.211725,-0.004597,-2.536119,5.159237,4.510093,-5.385043,1.618630,7.895204,6.251726,1.557054,-9.577034,7.353283,9.869900,9.634083,7.954878,-7.042626,-4.070072,4.405185,3.681945,-4.847285,-9.412747,-2.317773,6.688464,-2.908366,-5.411357,-1.383440,0.207809,2.805088,3.005705,-3.476684,0.759288,-8.416217,9.784040,-3.812505,-7.278514,-0.308544,-4.956927,-1.580583,-5.457610,-5.432186,-4.531467,5.137586,0.669273,9.063762,-6.465634,1.933630,-0.305708,8.488818,4.341818,-7.918598,-5.239922,2.401221,9.614299,-6.824322,-7.033136,-4.698242,-5.451720,-2.815125,8.117583,-8.918204,1.447852,2.244007,3.647674,-6.313546,1.167310,5.606019,2.663927,-2.846135,-5.110042,-8.048139,0.456378,-8.755774,1.190214,5.645332,-4.138921,-3.320133,3.240840,5.045015,-4.894419,-4.516577,8.247006,5.140981,-8.067470,2.941052,4.306567,2.613734,5.219196,-0.596360,5.972513,4.285890,4.543113,4.823547,8.800907,7.115383,-4.708559,5.856493,1.902271,-2.681156,-5.409630,0.010327,-0.918240,6.266132,-3.563156,-6.104500,1.307200,8.871510,8.995585,-0.057183,7.154311,-3.623180,1.037371,6.375221,-3.798773,-9.724674,-1.337102,-6.038844,-5.132287,-7.403664,6.942074,-9.654078,-3.313896,5.403341,8.231187,-6.166133,-2.414224,-7.693796,6.363870,-5.487985,-1.200540,-6.344923,-3.921857,0.036670,-0.825205,2.246494,-7.240938,1.928265,8.224698,-0.572647,-0.669392,-7.566963,3.041279,-6.297548,-8.427454,-1.198803,4.447864,8.199366,-7.792289,-1.606564,-7.920565,-6.999360,-1.946421,4.440583,5.248863,-6.863541,0.645312,-3.415172,6.409181,1.690975,8.701491,-6.194964,-8.280433,1.442898,-4.251046,-2.553241,8.270822,6.866562,-9.396072,-4.216483,-7.534350,6.583687,9.397976,-8.013374,-3.846651,-7.548933,-1.014619,-5.755653,4.330011,6.283711,4.692935,-4.807326,-6.157680,-2.893303,5.498595,-7.671988,7.480969,3.056088,5.042251,-6.341530,2.759422,-7.194087,5.271015,-0.223765,-2.738162,6.837056,2.943926,-5.444946,3.441318,-5.529958,5.848216,1.239820,-8.711342,7.617185,-2.250970,1.300046,9.071226,6.338124,-5.107615,9.643280,9.191420,8.498334,-6.883160,0.214082,-7.393300,-4.359528,-5.441718,1.917581,-6.748397,3.678129,-4.410179,-0.419499,-8.238059,-3.033204,-0.349988,1.668389,-5.848886,-5.407657,-1.337732,7.348596,-9.666163,7.224928,7.625710,8.703022,9.998104,-9.068949,-8.705155,2.151722,8.776385,9.338780,0.556806,4.292766,4.722380,2.104040,0.424790,4.190388,-3.518206,5.066656,6.150935,-0.111838,7.378410,-1.731724,0.420359,-4.977090,5.895943,-5.684225,-7.210761,6.635498,-8.930122,1.355995,4.686220,7.683190,5.087119,0.257756,0.269182,-5.244947,-3.729366,-7.175517,-5.463946,-9.177177,8.389965,9.499711,6.057474,7.682038,7.995955,8.167371,6.886410,-2.923312,5.903675,1.935394,6.016783,3.222609,-3.305744,-9.421300,-2.696810,3.038929,7.698136,5.844332,3.359466,-6.688105,-6.423299,7.100424,-2.824430,-9.021285,9.274861,0.029727,8.844510,-1.748415,-4.115892,5.756488,-0.419640,-6.857066,6.546863,-4.823995,1.120182,0.050906,-9.086937,3.783486,-0.161299,4.725109,-6.031255,3.087606,7.463334,8.948518,-6.771202,3.206637,9.124808,-1.969549,0.980778,1.871790,-5.086598,-4.233973,3.717857,3.600006,-4.761658,8.374820,7.470681,-6.782876,4.945282,2.688416,-1.132944,-7.000995,-0.392093,-0.991963,5.934885,-3.668243,-9.312744,-5.058747,1.155474,-7.520027,-3.038261,-6.027299,-2.215080,2.242637,-4.280346,8.758311,6.634783,0.148021,-3.987271,5.313038,6.237854,0.946302,8.643555,-8.938857,-7.493959,-9.619015,-9.983745,-2.245945,1.362591,-0.678995,-8.767124,9.306353,1.267209,-2.389686,-3.459510,7.307945,9.006546,-8.463719,8.221105,3.318547,3.148110,-6.662905,-1.555817,-1.156472,-5.853295,-2.482399,-4.619570,-3.477274,-9.660662,7.898254,6.485089,-4.164142,-2.679439,9.469324,2.121279,4.537800,-3.141430,7.867249,-8.820802,-2.883560,-3.436083,-4.898473,-2.999048,0.274928,8.292569,-7.778752,8.913465,6.559132,6.030836,2.209357,-3.893650,9.855284,3.312393,4.487618,-1.889316,-7.910733,-7.514939,6.618898,-2.446625,6.229046,8.951657,-6.569399,9.672025,-9.805389,-0.667159,1.152883,-4.317365,4.034206,3.757884,-6.152046,-2.808558,5.617970,1.167697,-3.922231,6.209527,6.161356,6.449850,2.631011,5.078396,3.597925,-6.496202,-5.179130,6.934096,-0.328021,4.984130,-1.428879,2.303088,-6.003310,-2.468722,-1.785560,6.413041,-7.051121,6.794312,6.705451,-5.476099,-7.519839,5.414663,7.944706,-0.870039,-1.133462,-8.723752,-8.076919,-6.327149,-4.663321,8.560507,-8.801257,-0.472316,7.403920,-3.230525,9.290889,3.368177,0.473888,-2.285088,1.493480,-8.646947,-4.484177,-8.439084,9.480782,-7.142382,1.412844,-7.690715,-8.233720,-5.503990,6.435352,-5.513490,5.854489,-5.457080,-5.492909,-8.644724,-5.821921,3.901477,6.198004,7.605921,-3.539325,4.207396,8.760633,8.598690,-5.483274,5.474602,6.533057,-9.110483,8.379522,8.998034,-4.671312,4.459267,6.052014,2.904256,-2.718903,3.491460,-5.779246,-5.471058,-1.526572,0.209957,2.832283,-9.173209,-9.105957,-7.669249,-1.635973,-5.074825,4.815003,1.054305,-8.703653,3.933159,8.236270,-4.965275,6.776756,1.210853,-6.669037,9.067917,1.104585,-4.808261,-2.112443,4.862029,1.295953,3.575893,7.419344,5.060722,-5.055884,-3.229083,1.556680,7.724704,1.848289,-0.724253,-4.843960,7.532266,-9.447796,7.151128,-3.909501,1.413474,-9.149468,-5.306331,6.259229,-5.473664,5.068365,7.672524,9.645737,8.658170,2.082264,-6.835475,8.205875,5.171093,-0.216264,8.742187,1.782953,-5.315245,4.536106,0.336875,-0.452921,-6.132234,-2.968998,-6.210217,2.389415,-8.359273,7.732998,-2.781646,-2.169262,-6.652771,-4.031798,-0.436634,-9.040835,-7.224212,7.733917,-2.609982,6.535876,1.990838,-0.296395,3.422527,-2.515948,-8.635305,-7.114022,-3.148834,-7.402697,8.836288,-6.444472,-2.635630,-5.205443,4.908628,-6.919109,0.700310,-7.422921,8.174512,-6.470686,-7.656984,-6.137648,8.823651,4.134880,-4.737974,-0.094565,0.394658,5.304489,-7.648411,-6.284680,6.148409,3.479659,-3.447022,-1.946884,8.371332,-4.178053,6.419428,-4.589564,2.279885,-8.453683,-7.831896,-5.421498,-0.914584,3.136591,6.470391,-0.567531,6.549855,-1.020634,8.393921,4.429111,7.746885,1.320720,4.631773,5.782663,5.415860,-6.241134,9.793631,6.948771,-8.992152,-2.233807,-5.092406,-9.259617,-1.960138,7.467776,8.078270,-5.404467,-5.117324,6.541046,-3.648282,4.712809,7.359298,1.537283,-2.115732,-8.605215,3.517325,-3.672770,4.976833,0.324841,7.565788,3.540503,-5.711939,-9.851802,4.609712,-7.101317,-7.165597,-6.569625,0.256805,-4.785310,-2.510234,-1.150945,7.151297,-8.707837,5.235025,3.813475,-4.372847,-9.897964,-7.115177,-7.022166,-4.561740,1.776818,-4.813657,-8.910922,0.925577,5.281707,3.813316,-9.615027,-9.750437,6.933600,-0.448501,2.979354,-6.023428,3.584781,-7.178302,-8.727082,-3.658309,1.271529,5.764124,-3.091072,5.645688,5.713049,4.535368,9.782380,-1.680470,-0.882059,4.543305,2.586740,8.524377,5.061136,-8.543856,-3.902737,6.261916,2.621195,-6.638005,-2.077314,1.777492,-8.720227,2.103992,8.814504,7.741844,-4.694916,2.756596,-9.567272,5.471994,-1.568590,8.802448,-6.071334,-9.324971,-1.962853,-8.113310,-9.177398,-0.795510,-5.741022,0.798364,2.606056,6.753656,3.378206,5.335611,2.515436,9.447793,6.044888,6.239100,-9.752651,0.451279,-7.055778,6.707899,-8.610659,1.710794,4.737678,-2.362159,0.974025,-5.952829,-2.697252,-4.050598,-6.244751,5.030800,0.169359,-9.424740,-5.169910,-2.225554,8.830868,-0.830424,6.536877,-8.541901,-7.517923,3.838517,5.110663,-0.628841,0.884479,5.235345,7.221174,7.535261,4.398759,-7.061300,-8.421573,-5.957845,-1.385595,3.223468,2.967826,-8.120461,-0.324758,1.776648,0.657152,2.640027,7.384077,4.424632,4.443250,5.410568,-0.656452,-8.616032,-0.254038,-5.613270,9.625501,-8.345153,9.648758,-3.664436,-7.156267,3.418808,-6.709622,-9.750258,-0.990939,-1.113141,6.852296,-0.907757,7.855194,-0.783010,-2.249661,-7.111783,-9.819926,-4.357495,2.837652,0.656475,-6.985045,2.926290,6.012216,-9.929280,0.744993,5.796815,-7.537777,-8.580461,-5.285138,6.466717,0.683709,5.158198,-5.802400,-3.627702,-7.921053,6.510325,-0.083037,7.444540,3.013702,8.223698,-5.160599,1.950536,8.994290,-6.596926,-1.922484,-2.678820,8.093675,6.245597,3.396998,7.777555,9.227734,-7.185410,-8.975753,1.010494,-6.538276,-3.891263,9.128599,5.801137,-2.412640,-2.143106,-8.566903,-8.260298,-4.474983,7.748281,7.283173,-7.660044,-7.526153,5.295770,-7.034051,-7.290292,2.267221,-9.664322,-0.759441,1.832168,4.327971,4.568246,-9.398158,-6.532065,9.991792,-2.960189,-6.630205,4.889206,-3.697805,0.971419,2.018673,7.327562,9.131767,7.194557,0.777064,-7.105076,-4.780908,-5.335119,2.590580,-5.771338,1.459850,-0.303650,7.662944,-5.191951,-6.162760,-7.755205,7.795702,-6.067241,0.363285,-0.734378,6.309195,-3.735094,-6.818471,-5.927982,8.458563,-0.169802,-3.614527,-4.901484,-7.259249,8.018991,0.027275,-8.924977,1.313045,2.146398,-1.344850,7.701967,-5.196825,0.589012,5.560495,-0.182883,-8.096285,2.349307,8.976026,-7.023626,-7.060901,-7.710215,-4.245319,-4.323491,-7.025587,-7.441896,9.173225,-0.020861,5.534107,-6.725743,8.582754,6.063175,3.295937,-2.725975,8.537951,-3.758443,-8.912858,2.847757,4.300916,-8.445087,6.366893,-0.230775,9.191962,-5.593323,-5.349830,9.555141,8.121498,-9.904345,9.210346,-2.002168,2.002061,-9.310897,7.307892,-7.110711,7.724795,-3.579999,-7.448739,8.969209,3.603136,-7.053628,-5.418551,-1.765061,2.823220,-4.582192,5.754281,8.642393,6.329146,3.692047,7.042160,7.664138,-9.905817,5.838431,-8.074415,-5.093369,-7.367407,9.555391,-7.034591,-1.210376,-9.151461,-2.181155,9.805115,6.478268,2.644914,-2.964211,-1.884265,3.323946,2.930594,6.998323,3.507883,-9.878250,5.439221,-6.914074,3.499881,5.674146,0.570410,5.870780,3.171173,1.784141,0.979967,4.596370,2.325360,4.431462,0.122879,-8.585175,-7.948744,-1.544607,4.869551,-2.806035,9.286295,-9.971208,0.050694,-2.880611,-7.639281,-8.969166,6.810389,-8.549890,-6.586068,3.700113,-5.905465,3.798854,-0.790327,-1.906101,-0.527823,-9.337358,-2.342688,6.489214,3.120475,-7.308413,0.882107,4.905086,-6.441952,-7.916921,9.967390,-5.576193,4.763369,7.163032,0.141020,9.461996,-9.945692,-5.608218,6.620917]], dtype = "float32")#candidate|7004|(1, 1568)|const|float32
call_7003 = relay.TupleGetItem(func_885_call(relay.reshape(const_7004.astype('float32'), [14, 14, 8])), 0)
call_7005 = relay.TupleGetItem(func_887_call(relay.reshape(const_7004.astype('float32'), [14, 14, 8])), 0)
func_885_call = mod.get_global_var('func_885')
func_887_call = mutated_mod.get_global_var('func_887')
call_7011 = relay.TupleGetItem(func_885_call(relay.reshape(call_7003.astype('float32'), [14, 14, 8])), 1)
call_7012 = relay.TupleGetItem(func_887_call(relay.reshape(call_7003.astype('float32'), [14, 14, 8])), 1)
output = relay.Tuple([bop_6991,call_7003,const_7004,call_7011,])
output2 = relay.Tuple([bop_6991,call_7005,const_7004,call_7012,])
func_7014 = relay.Function([var_6989,], output)
mod['func_7014'] = func_7014
mod = relay.transform.InferType()(mod)
mutated_mod['func_7014'] = func_7014
mutated_mod = relay.transform.InferType()(mutated_mod)
var_7015 = relay.var("var_7015", dtype = "uint16", shape = (2, 11, 8))#candidate|7015|(2, 11, 8)|var|uint16
func_7014_call = mutated_mod.get_global_var('func_7014')
call_7016 = func_7014_call(var_7015)
output = call_7016
func_7017 = relay.Function([var_7015], output)
mutated_mod['func_7017'] = func_7017
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5034_call = mod.get_global_var('func_5034')
func_5035_call = mutated_mod.get_global_var('func_5035')
call_7113 = func_5034_call()
call_7114 = func_5034_call()
func_4012_call = mod.get_global_var('func_4012')
func_4013_call = mutated_mod.get_global_var('func_4013')
call_7117 = relay.TupleGetItem(func_4012_call(), 3)
call_7118 = relay.TupleGetItem(func_4013_call(), 3)
func_5887_call = mod.get_global_var('func_5887')
func_5888_call = mutated_mod.get_global_var('func_5888')
call_7132 = func_5887_call()
call_7133 = func_5887_call()
func_4579_call = mod.get_global_var('func_4579')
func_4583_call = mutated_mod.get_global_var('func_4583')
var_7139 = relay.var("var_7139", dtype = "int16", shape = (1485,))#candidate|7139|(1485,)|var|int16
call_7138 = relay.TupleGetItem(func_4579_call(relay.reshape(var_7139.astype('int16'), [15, 11, 9]), relay.reshape(var_7139.astype('int16'), [15, 11, 9]), ), 1)
call_7140 = relay.TupleGetItem(func_4583_call(relay.reshape(var_7139.astype('int16'), [15, 11, 9]), relay.reshape(var_7139.astype('int16'), [15, 11, 9]), ), 1)
func_5469_call = mod.get_global_var('func_5469')
func_5470_call = mutated_mod.get_global_var('func_5470')
call_7141 = relay.TupleGetItem(func_5469_call(), 1)
call_7142 = relay.TupleGetItem(func_5470_call(), 1)
output = relay.Tuple([call_7113,call_7117,call_7132,call_7138,var_7139,call_7141,])
output2 = relay.Tuple([call_7114,call_7118,call_7133,call_7140,var_7139,call_7142,])
func_7147 = relay.Function([var_7139,], output)
mod['func_7147'] = func_7147
mod = relay.transform.InferType()(mod)
mutated_mod['func_7147'] = func_7147
mutated_mod = relay.transform.InferType()(mutated_mod)
var_7148 = relay.var("var_7148", dtype = "int16", shape = (1485,))#candidate|7148|(1485,)|var|int16
func_7147_call = mutated_mod.get_global_var('func_7147')
call_7149 = func_7147_call(var_7148)
output = call_7149
func_7150 = relay.Function([var_7148], output)
mutated_mod['func_7150'] = func_7150
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4514_call = mod.get_global_var('func_4514')
func_4516_call = mutated_mod.get_global_var('func_4516')
call_7155 = relay.TupleGetItem(func_4514_call(), 2)
call_7156 = relay.TupleGetItem(func_4516_call(), 2)
output = relay.Tuple([call_7155,])
output2 = relay.Tuple([call_7156,])
func_7159 = relay.Function([], output)
mod['func_7159'] = func_7159
mod = relay.transform.InferType()(mod)
mutated_mod['func_7159'] = func_7159
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7159_call = mutated_mod.get_global_var('func_7159')
call_7160 = func_7159_call()
output = call_7160
func_7161 = relay.Function([], output)
mutated_mod['func_7161'] = func_7161
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3843_call = mod.get_global_var('func_3843')
func_3845_call = mutated_mod.get_global_var('func_3845')
call_7185 = relay.TupleGetItem(func_3843_call(), 0)
call_7186 = relay.TupleGetItem(func_3845_call(), 0)
func_4780_call = mod.get_global_var('func_4780')
func_4783_call = mutated_mod.get_global_var('func_4783')
var_7188 = relay.var("var_7188", dtype = "float64", shape = (384,))#candidate|7188|(384,)|var|float64
call_7187 = relay.TupleGetItem(func_4780_call(relay.reshape(var_7188.astype('float64'), [96, 4])), 0)
call_7189 = relay.TupleGetItem(func_4783_call(relay.reshape(var_7188.astype('float64'), [96, 4])), 0)
output = relay.Tuple([call_7185,call_7187,var_7188,])
output2 = relay.Tuple([call_7186,call_7189,var_7188,])
func_7197 = relay.Function([var_7188,], output)
mod['func_7197'] = func_7197
mod = relay.transform.InferType()(mod)
var_7198 = relay.var("var_7198", dtype = "float64", shape = (384,))#candidate|7198|(384,)|var|float64
output = func_7197(var_7198)
func_7199 = relay.Function([var_7198], output)
mutated_mod['func_7199'] = func_7199
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2856_call = mod.get_global_var('func_2856')
func_2857_call = mutated_mod.get_global_var('func_2857')
call_7204 = relay.TupleGetItem(func_2856_call(), 0)
call_7205 = relay.TupleGetItem(func_2857_call(), 0)
output = call_7204
output2 = call_7205
func_7214 = relay.Function([], output)
mod['func_7214'] = func_7214
mod = relay.transform.InferType()(mod)
mutated_mod['func_7214'] = func_7214
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7214_call = mutated_mod.get_global_var('func_7214')
call_7215 = func_7214_call()
output = call_7215
func_7216 = relay.Function([], output)
mutated_mod['func_7216'] = func_7216
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5034_call = mod.get_global_var('func_5034')
func_5035_call = mutated_mod.get_global_var('func_5035')
call_7239 = func_5034_call()
call_7240 = func_5034_call()
func_3586_call = mod.get_global_var('func_3586')
func_3587_call = mutated_mod.get_global_var('func_3587')
call_7244 = func_3586_call()
call_7245 = func_3586_call()
func_5440_call = mod.get_global_var('func_5440')
func_5441_call = mutated_mod.get_global_var('func_5441')
call_7249 = relay.TupleGetItem(func_5440_call(), 0)
call_7250 = relay.TupleGetItem(func_5441_call(), 0)
func_7159_call = mod.get_global_var('func_7159')
func_7161_call = mutated_mod.get_global_var('func_7161')
call_7256 = relay.TupleGetItem(func_7159_call(), 0)
call_7257 = relay.TupleGetItem(func_7161_call(), 0)
output = relay.Tuple([call_7239,call_7244,call_7249,call_7256,])
output2 = relay.Tuple([call_7240,call_7245,call_7250,call_7257,])
func_7272 = relay.Function([], output)
mod['func_7272'] = func_7272
mod = relay.transform.InferType()(mod)
output = func_7272()
func_7273 = relay.Function([], output)
mutated_mod['func_7273'] = func_7273
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6878_call = mod.get_global_var('func_6878')
func_6879_call = mutated_mod.get_global_var('func_6879')
call_7308 = relay.TupleGetItem(func_6878_call(), 0)
call_7309 = relay.TupleGetItem(func_6879_call(), 0)
func_3066_call = mod.get_global_var('func_3066')
func_3067_call = mutated_mod.get_global_var('func_3067')
call_7314 = func_3066_call()
call_7315 = func_3066_call()
output = relay.Tuple([call_7308,call_7314,])
output2 = relay.Tuple([call_7309,call_7315,])
func_7329 = relay.Function([], output)
mod['func_7329'] = func_7329
mod = relay.transform.InferType()(mod)
output = func_7329()
func_7330 = relay.Function([], output)
mutated_mod['func_7330'] = func_7330
mutated_mod = relay.transform.InferType()(mutated_mod)
const_7357 = relay.const([[[True,False,True,True,False,False,True,False,True,True,True,False,True,False,True],[True,False,False,True,False,False,True,True,False,True,False,True,False,True,True],[False,False,True,False,True,True,False,False,False,False,False,True,False,True,True],[True,False,False,True,False,False,False,True,True,False,False,True,True,False,False],[False,True,True,False,True,False,True,True,True,True,True,True,False,True,False],[False,False,False,False,False,False,False,False,True,True,False,True,False,True,False]],[[False,True,True,True,True,False,False,True,True,True,False,True,False,True,False],[False,True,True,False,True,True,True,True,True,False,False,True,False,False,False],[False,False,True,True,False,True,True,False,False,False,True,False,True,True,True],[False,True,False,True,True,True,False,False,False,True,True,False,False,True,False],[False,True,True,True,False,True,False,True,True,False,True,False,True,True,True],[False,True,False,True,False,True,False,False,False,True,True,True,True,True,False]],[[False,True,True,True,False,True,False,True,False,True,True,True,True,False,False],[False,True,True,False,False,True,True,False,True,True,True,False,False,True,True],[False,True,False,True,False,True,False,False,False,False,True,True,False,False,False],[False,False,True,False,False,True,True,True,True,True,True,True,True,True,False],[True,False,True,True,True,True,False,False,True,False,False,False,False,False,False],[False,True,False,True,True,False,False,False,True,True,True,False,False,True,False]],[[False,False,False,True,True,True,False,False,True,True,False,False,True,False,False],[True,False,True,True,True,False,True,True,True,True,True,False,True,True,True],[True,False,True,True,True,True,True,False,True,False,True,True,False,True,False],[True,False,False,False,False,False,True,True,True,False,False,False,False,False,False],[False,True,False,True,True,True,False,False,True,True,False,True,True,True,False],[True,False,False,True,False,False,True,True,False,True,True,False,True,False,False]],[[True,False,False,True,True,True,True,False,True,False,True,True,True,False,False],[True,True,False,False,True,True,False,False,False,False,True,False,True,True,False],[True,False,False,True,False,True,False,True,True,True,True,True,True,True,True],[True,False,True,False,False,False,True,True,False,True,True,False,True,False,True],[True,False,True,True,True,True,True,False,False,False,True,False,True,False,True],[True,False,True,False,False,False,False,True,True,False,False,False,False,False,True]],[[True,True,True,True,True,False,False,False,False,True,False,False,True,False,False],[False,True,False,True,True,False,True,True,True,False,True,False,True,False,False],[False,True,True,True,False,False,True,True,False,False,False,True,False,True,True],[False,True,False,True,False,True,True,False,False,True,False,True,True,True,True],[True,True,True,False,False,True,True,False,False,True,False,False,False,False,True],[True,False,False,True,True,True,False,True,True,False,False,True,False,True,True]],[[True,False,False,False,False,True,False,True,True,False,True,True,True,True,True],[False,True,True,True,False,True,False,True,False,True,True,False,False,True,True],[True,True,True,False,True,True,True,True,True,False,False,False,True,True,True],[False,True,False,True,False,True,False,False,False,False,True,True,False,False,True],[True,True,False,False,True,True,False,False,True,True,False,True,True,True,False],[False,True,True,True,True,False,False,True,False,False,False,False,True,False,False]],[[False,False,True,False,False,True,False,False,True,True,True,False,False,False,True],[False,True,True,True,False,False,True,False,True,False,False,True,False,True,False],[False,False,False,True,False,False,False,False,True,False,True,False,False,True,True],[True,True,False,False,True,False,False,False,False,False,False,False,True,False,True],[True,False,True,True,False,False,False,False,False,True,False,False,True,False,True],[False,False,True,False,False,False,False,True,False,False,True,True,False,False,True]],[[False,False,False,True,True,False,True,True,False,False,False,True,False,False,True],[True,False,True,False,True,False,False,True,True,True,False,False,False,False,False],[True,False,False,True,False,False,True,True,True,False,True,False,True,True,False],[False,True,False,False,True,True,False,False,True,True,True,True,True,True,True],[True,False,False,False,False,False,False,True,True,True,True,True,True,False,False],[True,True,True,False,True,True,True,True,True,False,False,False,True,True,True]],[[True,False,True,True,False,True,True,False,True,False,False,False,True,True,True],[False,True,False,True,True,True,False,False,False,True,True,False,True,False,True],[False,True,True,False,False,False,True,True,False,False,False,False,True,True,False],[False,True,True,False,True,False,True,True,False,True,True,True,True,False,False],[False,True,True,True,True,False,True,False,True,False,True,True,False,False,True],[False,False,False,True,False,True,True,True,True,False,False,False,True,True,False]],[[True,True,True,True,False,False,True,False,True,False,False,False,False,False,False],[True,True,False,True,False,False,True,False,True,False,False,True,False,True,False],[False,True,True,False,False,True,False,True,True,True,True,True,True,True,False],[True,False,True,True,False,True,True,True,True,False,True,True,True,True,True],[True,True,False,False,True,False,False,False,True,True,True,False,True,True,False],[True,False,False,False,False,False,True,True,True,True,False,False,False,True,True]],[[True,True,True,True,True,False,True,True,False,False,True,False,True,False,True],[True,True,True,True,True,True,False,False,True,True,True,True,False,False,False],[True,True,True,False,True,True,True,False,False,True,True,True,True,False,True],[False,True,False,False,False,True,True,False,False,False,False,True,True,False,True],[False,True,True,True,False,False,False,True,False,True,False,True,False,False,True],[False,False,False,False,False,True,False,False,True,False,False,True,True,False,True]],[[True,False,True,False,True,True,False,False,False,False,True,False,False,True,False],[True,True,True,False,False,True,True,False,True,False,False,False,False,True,False],[True,False,False,False,False,True,True,False,True,True,True,False,False,True,False],[False,False,True,True,False,True,True,True,True,False,False,True,False,False,True],[False,True,True,False,False,False,False,True,False,True,True,True,False,True,False],[False,True,True,True,True,True,True,False,True,False,False,True,False,True,True]],[[True,True,False,False,False,False,False,False,False,True,True,True,False,True,False],[True,True,True,False,True,False,True,False,False,False,False,True,True,False,False],[False,True,True,True,False,True,True,False,True,True,True,True,False,False,False],[False,True,False,False,True,True,False,False,True,True,True,True,False,False,False],[False,True,True,True,False,True,True,True,False,False,True,True,True,True,True],[False,False,False,False,False,True,True,False,False,False,True,True,True,True,True]]], dtype = "bool")#candidate|7357|(14, 6, 15)|const|bool
var_7358 = relay.var("var_7358", dtype = "bool", shape = (14, 6, 15))#candidate|7358|(14, 6, 15)|var|bool
bop_7359 = relay.logical_and(const_7357.astype('bool'), relay.reshape(var_7358.astype('bool'), relay.shape_of(const_7357))) # shape=(14, 6, 15)
output = bop_7359
output2 = bop_7359
func_7367 = relay.Function([var_7358,], output)
mod['func_7367'] = func_7367
mod = relay.transform.InferType()(mod)
var_7368 = relay.var("var_7368", dtype = "bool", shape = (14, 6, 15))#candidate|7368|(14, 6, 15)|var|bool
output = func_7367(var_7368)
func_7369 = relay.Function([var_7368], output)
mutated_mod['func_7369'] = func_7369
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5694_call = mod.get_global_var('func_5694')
func_5696_call = mutated_mod.get_global_var('func_5696')
call_7399 = relay.TupleGetItem(func_5694_call(), 0)
call_7400 = relay.TupleGetItem(func_5696_call(), 0)
output = call_7399
output2 = call_7400
func_7411 = relay.Function([], output)
mod['func_7411'] = func_7411
mod = relay.transform.InferType()(mod)
output = func_7411()
func_7412 = relay.Function([], output)
mutated_mod['func_7412'] = func_7412
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5427_call = mod.get_global_var('func_5427')
func_5428_call = mutated_mod.get_global_var('func_5428')
call_7423 = relay.TupleGetItem(func_5427_call(), 1)
call_7424 = relay.TupleGetItem(func_5428_call(), 1)
output = relay.Tuple([call_7423,])
output2 = relay.Tuple([call_7424,])
func_7431 = relay.Function([], output)
mod['func_7431'] = func_7431
mod = relay.transform.InferType()(mod)
output = func_7431()
func_7432 = relay.Function([], output)
mutated_mod['func_7432'] = func_7432
mutated_mod = relay.transform.InferType()(mutated_mod)
var_7480 = relay.var("var_7480", dtype = "float32", shape = (13, 1, 16))#candidate|7480|(13, 1, 16)|var|float32
uop_7481 = relay.acosh(var_7480.astype('float32')) # shape=(13, 1, 16)
bop_7485 = relay.divide(uop_7481.astype('float32'), relay.reshape(var_7480.astype('float32'), relay.shape_of(uop_7481))) # shape=(13, 1, 16)
output = relay.Tuple([bop_7485,])
output2 = relay.Tuple([bop_7485,])
func_7492 = relay.Function([var_7480,], output)
mod['func_7492'] = func_7492
mod = relay.transform.InferType()(mod)
mutated_mod['func_7492'] = func_7492
mutated_mod = relay.transform.InferType()(mutated_mod)
var_7493 = relay.var("var_7493", dtype = "float32", shape = (13, 1, 16))#candidate|7493|(13, 1, 16)|var|float32
func_7492_call = mutated_mod.get_global_var('func_7492')
call_7494 = func_7492_call(var_7493)
output = call_7494
func_7495 = relay.Function([var_7493], output)
mutated_mod['func_7495'] = func_7495
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4230_call = mod.get_global_var('func_4230')
func_4232_call = mutated_mod.get_global_var('func_4232')
call_7504 = relay.TupleGetItem(func_4230_call(), 1)
call_7505 = relay.TupleGetItem(func_4232_call(), 1)
output = relay.Tuple([call_7504,])
output2 = relay.Tuple([call_7505,])
func_7506 = relay.Function([], output)
mod['func_7506'] = func_7506
mod = relay.transform.InferType()(mod)
mutated_mod['func_7506'] = func_7506
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7506_call = mutated_mod.get_global_var('func_7506')
call_7507 = func_7506_call()
output = call_7507
func_7508 = relay.Function([], output)
mutated_mod['func_7508'] = func_7508
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2786_call = mod.get_global_var('func_2786')
func_2787_call = mutated_mod.get_global_var('func_2787')
call_7509 = relay.TupleGetItem(func_2786_call(), 3)
call_7510 = relay.TupleGetItem(func_2787_call(), 3)
uop_7516 = relay.log10(call_7509.astype('float64')) # shape=(560,)
uop_7518 = relay.log10(call_7510.astype('float64')) # shape=(560,)
output = relay.Tuple([uop_7516,])
output2 = relay.Tuple([uop_7518,])
func_7529 = relay.Function([], output)
mod['func_7529'] = func_7529
mod = relay.transform.InferType()(mod)
output = func_7529()
func_7530 = relay.Function([], output)
mutated_mod['func_7530'] = func_7530
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5878_call = mod.get_global_var('func_5878')
func_5880_call = mutated_mod.get_global_var('func_5880')
call_7629 = relay.TupleGetItem(func_5878_call(), 0)
call_7630 = relay.TupleGetItem(func_5880_call(), 0)
output = call_7629
output2 = call_7630
func_7640 = relay.Function([], output)
mod['func_7640'] = func_7640
mod = relay.transform.InferType()(mod)
mutated_mod['func_7640'] = func_7640
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7640_call = mutated_mod.get_global_var('func_7640')
call_7641 = func_7640_call()
output = call_7641
func_7642 = relay.Function([], output)
mutated_mod['func_7642'] = func_7642
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6063_call = mod.get_global_var('func_6063')
func_6064_call = mutated_mod.get_global_var('func_6064')
call_7713 = relay.TupleGetItem(func_6063_call(), 1)
call_7714 = relay.TupleGetItem(func_6064_call(), 1)
uop_7717 = relay.acosh(call_7713.astype('float32')) # shape=(5, 7, 5)
uop_7719 = relay.acosh(call_7714.astype('float32')) # shape=(5, 7, 5)
output = uop_7717
output2 = uop_7719
func_7724 = relay.Function([], output)
mod['func_7724'] = func_7724
mod = relay.transform.InferType()(mod)
mutated_mod['func_7724'] = func_7724
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7724_call = mutated_mod.get_global_var('func_7724')
call_7725 = func_7724_call()
output = call_7725
func_7726 = relay.Function([], output)
mutated_mod['func_7726'] = func_7726
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5694_call = mod.get_global_var('func_5694')
func_5696_call = mutated_mod.get_global_var('func_5696')
call_7734 = relay.TupleGetItem(func_5694_call(), 0)
call_7735 = relay.TupleGetItem(func_5696_call(), 0)
output = call_7734
output2 = call_7735
func_7736 = relay.Function([], output)
mod['func_7736'] = func_7736
mod = relay.transform.InferType()(mod)
mutated_mod['func_7736'] = func_7736
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7736_call = mutated_mod.get_global_var('func_7736')
call_7737 = func_7736_call()
output = call_7737
func_7738 = relay.Function([], output)
mutated_mod['func_7738'] = func_7738
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3695_call = mod.get_global_var('func_3695')
func_3696_call = mutated_mod.get_global_var('func_3696')
call_7768 = func_3695_call()
call_7769 = func_3695_call()
func_3611_call = mod.get_global_var('func_3611')
func_3612_call = mutated_mod.get_global_var('func_3612')
call_7777 = func_3611_call()
call_7778 = func_3611_call()
output = relay.Tuple([call_7768,call_7777,])
output2 = relay.Tuple([call_7769,call_7778,])
func_7779 = relay.Function([], output)
mod['func_7779'] = func_7779
mod = relay.transform.InferType()(mod)
output = func_7779()
func_7780 = relay.Function([], output)
mutated_mod['func_7780'] = func_7780
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5630_call = mod.get_global_var('func_5630')
func_5632_call = mutated_mod.get_global_var('func_5632')
call_7784 = relay.TupleGetItem(func_5630_call(), 0)
call_7785 = relay.TupleGetItem(func_5632_call(), 0)
output = call_7784
output2 = call_7785
func_7797 = relay.Function([], output)
mod['func_7797'] = func_7797
mod = relay.transform.InferType()(mod)
mutated_mod['func_7797'] = func_7797
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7797_call = mutated_mod.get_global_var('func_7797')
call_7798 = func_7797_call()
output = call_7798
func_7799 = relay.Function([], output)
mutated_mod['func_7799'] = func_7799
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4449_call = mod.get_global_var('func_4449')
func_4450_call = mutated_mod.get_global_var('func_4450')
call_7800 = func_4449_call()
call_7801 = func_4449_call()
output = call_7800
output2 = call_7801
func_7822 = relay.Function([], output)
mod['func_7822'] = func_7822
mod = relay.transform.InferType()(mod)
mutated_mod['func_7822'] = func_7822
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7822_call = mutated_mod.get_global_var('func_7822')
call_7823 = func_7822_call()
output = call_7823
func_7824 = relay.Function([], output)
mutated_mod['func_7824'] = func_7824
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2676_call = mod.get_global_var('func_2676')
func_2678_call = mutated_mod.get_global_var('func_2678')
call_7834 = func_2676_call()
call_7835 = func_2676_call()
output = call_7834
output2 = call_7835
func_7837 = relay.Function([], output)
mod['func_7837'] = func_7837
mod = relay.transform.InferType()(mod)
mutated_mod['func_7837'] = func_7837
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7837_call = mutated_mod.get_global_var('func_7837')
call_7838 = func_7837_call()
output = call_7838
func_7839 = relay.Function([], output)
mutated_mod['func_7839'] = func_7839
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6063_call = mod.get_global_var('func_6063')
func_6064_call = mutated_mod.get_global_var('func_6064')
call_7862 = relay.TupleGetItem(func_6063_call(), 1)
call_7863 = relay.TupleGetItem(func_6064_call(), 1)
output = relay.Tuple([call_7862,])
output2 = relay.Tuple([call_7863,])
func_7871 = relay.Function([], output)
mod['func_7871'] = func_7871
mod = relay.transform.InferType()(mod)
mutated_mod['func_7871'] = func_7871
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7871_call = mutated_mod.get_global_var('func_7871')
call_7872 = func_7871_call()
output = call_7872
func_7873 = relay.Function([], output)
mutated_mod['func_7873'] = func_7873
mutated_mod = relay.transform.InferType()(mutated_mod)
const_7874 = relay.const([[[-7.404483,-5.719689,2.009657,-3.679533,-4.744341,-6.876540,6.301702,2.142103,4.067566,0.605623,-4.378638,-9.176370,0.693332,-1.551300],[-7.168364,-2.469136,-4.430663,-1.536808,-8.700788,0.625964,2.422518,9.412675,-4.686175,1.271993,-9.418609,8.626058,-4.020751,1.828700],[3.191170,-9.270177,-7.032209,-6.308942,1.112955,-9.105384,-1.418999,7.067837,7.350987,-8.700234,2.376835,0.562540,-8.874558,-1.131363],[4.478970,-5.443319,5.019328,-4.195706,-5.614220,-2.077340,6.393026,3.184263,3.436015,3.568949,4.250752,-5.772375,2.460148,9.320326],[-8.677516,3.106687,2.930017,-4.529893,-4.941733,-8.062686,-0.323009,-3.121303,5.760601,7.596383,-6.272114,1.814252,-1.405509,8.760250],[-8.517108,8.836374,-8.524865,-2.726428,-6.665191,7.814269,9.261259,1.960885,-2.026449,-1.261310,9.072127,-9.261224,-1.646004,-9.276934],[6.550480,1.861880,-9.446320,5.396714,0.419832,-6.432693,-8.301027,-6.373146,-2.467233,5.470340,2.872783,-1.193490,2.885346,2.682624],[0.689653,-5.955399,9.135249,-6.340979,-8.177958,-3.983498,1.595106,-9.312794,-2.978404,5.858993,-2.612304,-3.741406,-4.726524,0.991571],[3.137697,-2.331350,-2.832111,-3.040433,-5.204907,8.343439,-4.359701,-5.660748,-4.676103,9.888629,8.912916,3.848637,-8.933513,5.478723],[6.460874,-5.647921,8.866669,1.757267,-6.433024,7.043989,-3.110268,4.854584,3.113752,-9.636554,-5.128371,-7.175294,-6.246167,-7.245273],[4.009155,-4.428192,-1.385528,-9.158055,0.793538,3.728465,7.403936,-4.453906,6.515598,-7.450969,5.795161,-5.379967,-3.050952,9.688141],[0.864017,3.797578,3.533771,3.769018,7.725841,-4.870602,4.256471,-2.802319,-2.891415,-6.550010,-2.315648,-2.684905,8.393420,-8.190752]],[[-7.675514,-2.080026,4.853750,-6.962109,3.686303,-1.690650,9.272660,0.011113,-6.980845,4.416056,-8.304735,-8.241423,-4.338059,-2.413909],[8.599975,-4.958952,-2.518238,0.298281,-3.167530,1.115309,0.303772,-8.925030,-4.683543,7.791457,9.442530,8.855559,-3.005258,9.261990],[5.590373,-5.791429,-1.237931,-4.527623,-7.414304,-0.603787,4.453551,-6.165483,3.595335,-9.867743,9.363461,-9.463078,-8.077515,-5.284542],[5.779819,-5.502236,-6.184943,7.035828,7.976438,9.387079,-4.070781,-5.671492,9.340934,-0.146789,-9.611953,-8.259171,6.278859,-0.608068],[6.365793,-8.845196,-5.061635,8.104179,-1.098411,9.835358,-6.201406,5.566082,-4.543964,-7.447959,-5.187920,-0.554678,1.057629,-2.103589],[6.293656,9.979968,-4.041579,4.639744,-0.871577,6.026301,-9.467730,-2.320907,8.243479,0.950832,9.844977,-9.832863,-0.669556,-6.476535],[6.727633,-8.859226,-8.891598,3.153962,-2.668286,1.945619,1.744432,5.954256,-3.250852,-6.244357,8.726488,2.124472,-3.308894,-7.614060],[7.937938,-1.749272,-6.133738,2.519888,-2.545259,2.439555,-3.815613,9.931644,0.964395,1.575566,-0.639903,6.776032,2.806291,0.004417],[-2.894329,-1.716518,-7.139581,3.817026,-9.288956,0.233227,5.059828,3.007459,-4.783006,-3.650748,5.344317,7.335266,3.147373,3.740805],[7.286826,-4.832634,-7.543076,9.475684,-9.804956,1.094957,-9.390920,2.533392,0.297204,3.662795,-2.975136,7.982506,3.537435,9.128483],[-9.386931,8.953386,9.383481,4.204196,-7.225168,1.640703,7.288234,2.451298,8.892909,-7.756040,7.011389,-4.068046,6.585894,1.657519],[-5.363710,0.184675,7.267966,8.055053,8.477427,2.163718,7.713432,-4.385660,5.412243,-9.336363,-3.957240,-1.020865,-8.810235,8.352721]],[[-3.445008,-3.723876,-7.446363,5.872058,-2.728058,-7.065399,-1.051227,-0.877340,-0.787088,-7.884977,-2.585392,1.514734,9.913036,8.730920],[-4.041771,3.513464,4.961418,-4.294143,-1.056763,-9.190502,-9.054374,-1.109641,-3.717889,-2.938061,7.306302,-3.801178,-7.904575,-2.312129],[6.322097,6.678435,1.816091,9.970220,6.909285,-3.277673,2.311486,-8.505912,9.579844,-7.229900,8.866149,3.612679,-4.727112,0.878324],[6.789913,-3.184730,2.824588,-9.079114,9.215983,9.424369,0.434210,-9.145319,-5.555564,-3.451140,9.918322,6.399567,-9.380521,9.088901],[2.161925,8.364240,-7.632045,1.788733,4.123481,-7.206318,3.491657,3.587646,9.436157,-6.914992,7.147606,-6.999296,8.813042,8.705978],[-3.625985,-5.021565,8.491813,-3.658431,-9.599676,8.589580,1.244850,-2.193314,-7.130047,-5.948957,5.001792,3.661512,3.324297,6.538565],[-3.443938,-1.057698,7.599568,-9.315704,-7.449681,-5.882750,-5.768105,7.410433,-0.681296,2.396070,9.515543,-7.047882,-7.291075,6.159287],[6.474194,-0.873109,-2.997963,-2.810160,-5.307577,-5.212500,1.284572,5.132724,5.668342,-3.921642,-7.095554,-4.225830,1.081398,-6.407869],[-4.269180,3.492964,-3.238089,0.436553,6.404865,-9.404145,-1.756475,-4.239018,1.915909,-1.792750,-3.778055,-5.778167,-9.298689,6.930422],[-3.386754,9.859340,6.576522,-0.120236,-5.268990,-8.841355,-7.703987,7.699795,-0.001545,-5.713627,1.816707,-0.982120,7.830568,-5.579586],[5.417512,8.288409,3.272233,-1.877972,-9.576779,-8.722578,1.560688,-8.370078,5.986922,-5.107221,1.974467,-7.841793,4.627566,9.054310],[2.662471,-9.493022,7.694118,-9.233283,-4.323152,6.565708,-8.559578,-4.921049,4.234182,0.916134,-3.026243,-6.053178,-9.684753,0.578405]],[[7.742554,9.981071,-4.714733,1.776457,1.069194,2.353433,-4.986079,-6.368151,-4.902104,-2.980505,7.489623,4.649995,-6.046744,-0.521284],[-0.197615,-5.288483,-9.142253,-6.478089,-3.080591,-9.382648,-7.556401,3.139532,-1.046348,9.122380,-0.815222,-4.553988,9.881995,-7.913929],[2.989094,-4.538542,-2.370712,1.063384,-9.795031,8.565389,8.953562,4.811319,4.573792,0.134082,-5.414137,6.952391,-2.063712,6.421481],[3.720853,8.574310,-0.352343,-9.042061,5.729175,8.024616,2.264862,-2.903412,-7.725398,-6.345895,-2.021622,5.436791,-1.173821,-6.499879],[3.676394,-0.650630,6.149914,2.438913,-7.560063,-5.534560,-1.719166,5.653300,-9.434993,-8.857668,7.816907,7.330187,-7.425669,6.477206],[0.750885,-0.470895,4.261631,3.483156,-2.441909,-9.069255,-8.357528,-9.088148,-6.104048,-4.557452,4.010129,5.951227,-1.261389,8.076227],[0.379708,3.969663,-7.197215,4.116966,9.240916,-3.072927,-2.944890,-7.245836,1.261074,5.126651,-2.539230,-7.222831,-6.464458,9.811414],[-4.898646,-9.333922,3.102308,-2.691339,1.172860,3.271448,-6.997436,-5.099853,-8.943569,4.688819,-4.272576,3.897869,5.410595,-5.185063],[9.836790,-9.181386,-8.554191,9.943934,-4.836147,6.628895,-7.185276,-5.626677,-7.211562,4.056007,2.471231,-8.789145,0.367247,9.102150],[-8.525292,-4.125632,2.304721,9.104924,6.155608,8.702978,6.876457,1.553098,4.631159,-1.844995,6.992513,-5.416763,5.004276,-8.627546],[-3.012053,9.951493,2.088989,-2.655071,-5.075010,3.170258,-7.585242,5.133644,2.675821,7.334319,0.791528,2.968442,2.759283,4.364612],[-4.159227,0.535176,8.506103,9.032379,9.252083,1.777569,-2.317646,2.539759,4.590046,-1.554050,-8.896157,9.345857,7.311301,-0.915129]],[[-1.848663,3.463133,0.440850,5.058923,0.168158,3.841675,-6.259691,-2.554003,2.872102,-7.319000,3.917351,-8.108964,-6.728917,8.420623],[-5.242727,9.721577,0.799548,5.543110,7.526769,-3.752363,-3.627108,0.300733,-2.486056,0.258670,-3.251289,0.828837,-9.818872,9.659333],[8.849900,-3.830088,-7.145153,3.808750,2.660343,-8.010429,5.638492,7.759817,-3.649944,9.602869,9.029434,1.950566,-3.697091,0.579444],[-3.902508,9.843132,3.089585,9.655041,0.282103,0.507463,5.041272,-8.518538,-9.792651,-2.872778,-3.481177,-2.272893,-3.972662,9.819987],[-8.211903,9.272839,7.294870,-7.830726,4.896521,-2.438567,-1.339661,9.471750,0.312379,9.428235,6.219117,4.186230,2.852402,1.037861],[7.023619,-0.202468,9.647270,-6.115220,-9.304461,9.874005,-4.486395,2.167817,-9.079652,-1.470754,-0.283320,6.804059,-0.221308,1.055647],[-6.404540,3.505111,-6.856841,3.329133,-0.397837,-6.524510,9.604616,-3.141401,-8.271989,-6.672402,-5.799178,-8.997235,-4.525525,-1.035223],[-0.960510,-1.856174,4.310456,-8.212766,0.240408,3.782451,0.056262,8.477537,-2.688811,-3.640749,5.809855,7.401322,-9.895949,-2.654429],[7.303694,4.839729,-6.877269,0.869443,1.752388,3.463098,4.968579,-6.949620,5.424301,7.987281,9.518115,-1.909645,0.713261,-6.137614],[3.137347,-8.140529,-8.482451,8.810065,-1.138123,-5.543545,-5.510966,-6.392660,-7.094413,3.149623,-2.751292,8.369520,-1.225356,-6.543709],[2.531799,4.230652,4.517975,-8.612150,9.195617,2.262368,-2.932505,-1.504753,6.376625,-4.940838,4.362503,0.386173,5.855742,-3.126953],[-3.092588,4.075550,6.572565,2.024714,-6.882006,-7.126348,8.300337,2.873336,8.482388,-8.418732,2.802623,6.608313,-6.722312,-8.015943]],[[7.303609,-1.828926,-9.619671,-8.759740,-9.695200,-9.537189,8.488275,2.797030,-7.672017,-2.815054,-3.214005,9.545495,2.774905,-5.038521],[7.935969,7.452360,9.748335,7.851933,5.789834,-5.985124,3.777425,4.532529,1.490019,0.793239,3.640170,-7.822909,-9.669997,8.725780],[-5.337221,-9.407371,8.530016,-0.617835,9.960863,-8.563579,2.909218,-3.829753,2.177214,6.258457,-0.356459,7.426774,-2.235528,1.069175],[5.540121,4.012642,3.751648,2.642512,7.533402,7.936802,1.944979,-3.439536,-3.327280,3.193461,-1.656472,6.662332,6.773716,-0.760633],[-5.786558,1.349404,9.478330,0.388929,-3.172381,5.112623,-6.791748,-3.228443,-7.999836,6.741855,0.331815,-5.027359,8.986534,2.282169],[-4.009723,8.636832,9.186507,-3.717750,0.611851,9.065591,4.013839,2.236751,-8.147496,3.345402,-7.438217,7.647784,-7.762803,1.754699],[7.325663,-3.115232,1.681876,-6.224548,-7.477385,0.669577,-9.776545,8.030097,9.673617,-8.468764,-3.919633,-8.533845,-4.074737,7.634366],[1.009448,-0.881356,7.575874,8.941453,-3.625990,1.948546,-3.210173,-4.580164,-7.840200,-3.215721,9.093081,1.863175,9.197986,-5.333303],[7.930476,-5.888501,1.054726,-6.479445,6.459176,8.355403,5.913742,0.708979,5.732632,2.930959,6.970517,0.653782,-7.190256,2.669154],[-0.992979,5.324961,5.172400,-6.598289,-6.073705,7.266043,-8.896409,-0.962920,3.105081,-8.611795,7.368262,-7.377944,8.176858,3.245280],[-9.482073,3.536095,8.610066,7.383333,-7.304975,3.932299,-4.982807,8.567405,4.571287,-8.739173,9.240646,9.670219,-1.987172,8.224749],[9.197089,3.763088,2.919915,-4.905654,2.901566,7.942110,9.727101,2.165228,8.043871,5.798999,-9.816055,-6.926428,-8.830691,-7.419573]],[[5.650455,-7.922159,6.145137,6.285385,7.301200,8.901326,1.451894,-3.875118,1.548097,-3.640415,-2.302611,9.982392,6.811602,-9.782684],[8.442295,6.248185,3.054969,1.361729,2.438784,5.273449,-2.116003,-5.909689,-0.110826,-7.327467,-3.865058,-6.517798,-4.625607,7.407878],[6.634906,5.950625,-6.014641,-8.792724,9.545296,-0.311191,-5.562355,4.679147,-7.793455,-7.002113,-4.293015,-0.469023,7.128857,-4.850884],[-3.321342,3.688460,3.119896,-9.773850,5.264195,1.377379,-9.346430,-1.008630,-0.663736,5.547689,2.680266,7.789244,5.435428,-1.389054],[-9.780633,-8.782959,-2.913512,6.970171,0.812158,1.907838,-8.933217,0.131273,6.235962,8.083908,2.778842,-9.423640,-0.642175,-3.389946],[-5.120773,-8.130117,5.770218,2.720422,-9.192078,-2.716118,2.017725,8.219488,-9.551691,-7.001871,-8.073963,6.380051,7.260777,-1.522567],[2.165730,1.735829,0.208593,2.895044,-2.196224,-2.457127,3.061401,-7.641599,-0.601894,-6.426338,-1.630946,-3.130770,-9.930847,-5.365627],[-2.022589,8.070510,-9.144355,5.621871,-1.521655,-5.829338,3.375794,0.098332,5.135592,0.180315,5.848615,2.283746,5.526390,-7.930679],[8.318232,7.532041,6.008584,-6.032006,6.661820,4.861484,-0.868600,-9.148966,-3.666045,-7.754427,-1.394332,-8.494089,5.055538,6.301823],[0.907677,-1.497460,7.175872,-5.742641,-5.214692,-7.252452,-8.092204,7.438166,8.171640,7.101203,5.906930,-8.196048,5.198181,-0.133796],[-9.694541,2.771513,1.323735,-2.150936,1.370298,-6.306558,1.968545,5.183739,-3.905916,-4.775599,7.277626,-4.147842,5.685033,-1.159170],[0.045885,6.284442,-9.404803,4.695175,-5.466930,-9.796729,8.942655,0.264830,1.600918,-2.801438,4.564329,-8.722946,-0.408911,-8.145013]],[[3.514544,6.100994,9.171692,-9.220390,3.721614,6.961312,1.853015,-3.547291,-1.808804,-3.191801,-2.116407,-7.669803,3.990250,-6.511161],[8.583598,-3.850119,1.503387,5.068584,-6.203892,9.745854,5.564742,-4.411645,-6.838333,1.114535,-9.433057,2.345994,4.919117,6.500262],[-3.505861,-1.512153,-2.120552,-6.492499,-5.237829,-3.730782,5.502697,5.300856,-7.766908,0.865623,-8.839894,-7.088644,-5.254752,5.569346],[2.782106,7.675456,2.649754,7.900129,-0.183014,2.396109,3.683209,8.146930,6.239346,8.693332,-2.232413,1.699187,-7.110740,-7.096822],[6.347338,-5.272449,-4.361109,-0.979570,0.415168,7.674195,1.051828,3.684310,-9.593501,7.773894,1.925069,3.616131,1.989530,-9.359080],[-8.509848,6.272037,-1.675158,-6.648380,2.125259,-5.619133,-9.639700,-9.214644,8.863744,-4.319694,-9.004740,6.313070,1.688849,-0.513334],[2.310707,-3.386464,9.443417,1.626196,2.979287,-3.839400,-7.980511,9.865087,-9.108556,-1.668234,0.891995,6.018602,-7.782871,9.800626],[4.363770,9.772424,-8.825242,7.609023,7.941150,-3.475562,-4.954864,6.612879,6.325672,-2.569941,-5.772612,1.651500,6.174169,1.066257],[-7.789395,4.962081,-5.204195,-7.257954,-7.683431,-2.113974,0.152457,-9.701755,1.268174,-7.359002,8.569138,-3.192755,-0.597696,3.806538],[-8.468462,0.574938,-8.516165,0.933739,4.620916,6.702442,8.881333,9.963174,-8.491425,-7.210013,8.166327,6.647898,8.848408,-2.012676],[7.788778,-6.392472,8.699387,-2.649971,-2.911510,-9.261987,-7.233619,-2.180942,-3.461268,-0.285920,1.264637,-4.740098,4.816133,4.422024],[-5.033744,-4.502363,-4.434050,5.024819,9.604198,9.712649,5.238938,8.338104,1.607737,0.183691,-7.502670,6.663229,5.210552,-4.045097]],[[3.853930,7.280393,-7.164844,0.810981,-5.068550,-2.519057,6.163384,-6.985559,9.179691,-2.616893,2.170886,-6.786657,4.256971,1.344998],[-0.324539,8.085740,-3.225132,6.368090,5.987425,0.872933,9.797012,8.171268,4.316100,-4.715664,9.713658,1.125013,-6.030676,-7.459659],[4.800939,-9.245171,-9.979126,5.082826,1.761544,3.894410,-0.334168,-1.375207,-0.835857,-2.102966,1.009377,-4.408879,9.168236,9.619061],[-3.056543,3.414545,-8.036083,7.365796,2.275285,3.510445,7.190222,5.583359,8.549886,0.823730,4.466324,9.993755,-4.888497,-0.332832],[9.375276,-2.145792,8.597420,-6.057868,8.827026,-5.723747,-9.659001,6.391234,-6.992026,9.163741,1.547182,1.873503,-5.518886,0.463727],[1.923431,-8.805149,-1.480558,-1.135975,-0.628553,8.889697,-8.811715,1.725817,3.523136,-8.892671,5.351056,5.001759,-5.133270,-6.028038],[6.253506,-5.228650,7.984980,2.263731,3.507200,6.068491,-9.491859,3.879022,4.236220,-3.268403,-9.898738,-7.363957,-0.773193,-1.948792],[2.344673,-7.070086,-8.299966,2.257509,2.420051,5.267072,-8.836483,5.838160,5.035749,3.996269,1.555262,6.465871,-4.714481,6.437763],[2.401874,9.216510,-3.178968,9.034300,-3.011915,-0.820167,-5.788668,-7.714130,4.575695,5.985584,6.241811,9.183566,-7.398756,-2.307648],[-8.473400,-2.684660,4.661075,-0.129614,0.934109,-8.591276,-4.726002,7.458717,6.788908,2.837072,0.462708,2.041521,4.822180,1.153296],[-0.030848,-7.268397,-2.184090,-5.070002,5.854334,2.682157,9.056570,-7.574662,1.130506,-1.955969,-6.872155,6.908569,-3.774229,-3.097122],[3.996757,-8.330262,9.212611,-7.066895,1.254591,9.124912,-2.634429,8.990941,-7.382381,5.108912,5.983587,-7.291216,-0.804462,-9.770325]],[[5.868675,-4.490663,-5.157292,-6.049526,-7.784485,8.137912,8.724354,-7.210354,-5.092052,7.945111,4.039802,-7.789163,-0.502722,-1.659863],[-9.303780,-5.658342,7.111655,-5.177631,6.381993,1.899519,8.229718,0.202711,9.719904,-6.532257,8.184794,7.162074,6.448242,0.558131],[-7.346327,-8.818769,-6.638424,-1.675082,3.290415,-3.063683,0.771975,-8.862952,-1.045619,-3.739433,6.937249,7.108094,-3.711273,-8.908660],[-7.448168,-9.918749,2.605503,2.245006,4.854993,-1.939178,-8.183007,6.065282,-8.371738,9.128626,2.307145,3.333763,-8.712423,8.337619],[3.668500,-2.354196,4.201796,-4.526621,5.082128,2.688115,-5.684197,-4.235336,-8.451689,-9.347460,5.498703,6.145270,8.341626,-5.885813],[-1.921116,2.674839,1.418720,8.061414,-9.651377,9.949793,-3.951166,-5.167475,-5.293654,8.165561,-4.183813,-4.872042,2.868728,-9.873004],[-8.213411,7.590945,-5.883930,-8.042519,-8.889692,-9.032857,5.124617,9.448655,-0.217545,-9.621523,-6.674012,7.707336,-4.538099,-2.775027],[-3.072795,-9.217687,6.996814,6.598773,-4.937343,2.842903,3.258181,5.976223,-7.806583,-1.955317,-4.180781,7.909975,6.435523,3.867756],[-4.674303,3.287621,-2.684400,4.269508,9.152480,9.607513,-1.203196,7.403292,0.969900,4.263539,6.062653,-0.228600,-5.263333,-4.674144],[6.627861,2.986809,5.901933,-0.099819,5.944349,-6.958622,-7.741758,-0.359335,-1.000692,-5.182007,8.580372,0.030530,-5.620160,-4.011667],[-4.231047,-4.936924,9.904096,8.601182,-1.942094,-5.835547,-2.792478,0.781407,9.392588,9.211037,4.675137,5.865104,2.019062,1.724769],[-0.889276,2.003984,-7.919659,-1.583185,5.489802,-4.798001,6.245941,6.232782,8.819918,-5.887609,3.853621,1.542602,-9.884786,7.706009]],[[2.488051,6.800345,-5.110356,-0.832306,-7.044929,-6.243808,7.720175,8.705145,-9.773664,-3.013042,9.411144,-7.223445,-7.070345,0.919542],[-3.486569,0.689732,3.256275,9.440744,2.652292,-5.091480,3.505613,8.703831,-4.543737,0.055372,-6.322420,-2.324193,2.951228,-8.520982],[-5.058083,-6.013340,-3.922224,5.385693,-7.915434,4.204310,-7.624420,8.980826,9.425754,-8.278816,4.540447,-6.164449,2.260902,-8.680262],[1.282530,2.307491,-2.179435,-9.318427,8.600054,9.296766,-1.673840,7.114674,-7.978095,-5.806688,0.501812,8.238052,6.868617,-7.861350],[6.215004,3.249245,6.634191,-5.306825,-7.939454,-0.442391,-8.391535,9.375020,0.812115,-7.804370,4.955629,0.982707,9.042769,5.430549],[-5.679049,-8.536689,-0.279619,-6.953561,-3.114317,-4.034136,9.237495,-7.983159,-4.411882,-9.688757,-4.882603,2.189048,-2.146339,-6.571911],[-5.992270,-4.247177,-4.427948,-7.184315,-7.361585,-8.989613,4.139823,8.700051,-1.491937,5.832788,2.063434,-3.010668,-9.316185,7.069912],[-6.963365,-9.629507,6.242113,8.741691,7.067891,3.026146,-7.482935,-5.434555,-4.215088,-0.853581,5.808320,1.266505,1.424949,-0.825162],[2.842797,-8.059902,-4.482174,-7.858552,4.600578,1.800863,8.709643,-7.059163,-8.493039,-6.032586,-3.388674,0.847386,-8.359763,-8.130287],[-9.008333,5.771095,-2.457964,2.723727,-8.621244,1.574243,5.589763,2.390517,8.170550,-9.626781,-4.072695,-0.388298,6.969059,5.488328],[-9.640284,-0.751150,-6.481197,-0.248527,3.871141,3.202275,-2.687644,-6.991542,3.221123,-9.386970,2.179069,4.654008,7.370998,9.226932],[0.536802,-6.701289,-7.402074,9.048576,-3.288218,-5.443082,7.196120,-6.976289,-9.295072,-1.810838,-2.116462,-6.617363,6.005024,9.503950]],[[1.530804,-5.540411,4.946172,-8.241632,7.486924,2.706909,9.427464,9.393736,9.898926,-0.680375,-5.121289,-0.025304,-4.820611,9.794691],[-3.421605,-9.223796,7.726347,-1.474525,-3.537095,-8.887728,-8.676776,3.422334,3.068488,0.956913,-4.587605,-0.812481,-3.268803,8.991599],[8.475708,-4.308252,-5.082002,3.477089,1.692493,-9.004440,-0.876510,5.021515,-5.018940,9.541052,-2.273047,4.890006,-9.925033,9.673250],[-6.901194,1.526588,4.144678,8.364799,9.926775,3.784277,-3.315289,-4.020783,5.473388,-6.517569,-8.719046,9.011595,-0.253542,-1.898222],[6.483172,4.728150,-4.959611,3.900943,-6.048464,7.130760,-6.387956,2.741631,1.794623,5.810218,9.604161,-7.591719,9.998744,-5.229536],[-6.554339,4.408006,8.982147,9.047619,1.449723,0.658310,3.263454,9.208494,-1.405296,7.623859,-9.173980,-5.782164,-8.600690,-7.885167],[-1.930985,7.051528,2.167915,-8.489328,4.071532,-1.903760,5.702421,-7.525055,6.650831,-0.521573,-7.491696,7.846507,-8.120785,2.961168],[-8.630910,1.548647,-7.098384,-8.966226,3.982483,-3.973017,-6.653757,6.803186,0.693001,6.898791,-8.198484,-7.167488,1.483643,3.094814],[5.578907,-9.145535,-8.647405,-2.535186,-4.575927,-5.920025,-9.213124,-1.389499,-9.787445,-1.298661,7.002450,-4.252671,4.044001,8.603005],[-3.515126,-3.844047,8.653844,2.409430,-4.901458,-8.988717,-8.991959,-4.027764,-6.544223,-8.520928,0.538941,-4.804931,-7.918017,-3.741445],[6.920993,-6.394007,-1.043551,7.608445,9.488847,-6.838848,-9.969137,-0.160968,0.655665,3.943673,2.199610,-1.476143,-9.241723,6.193377],[6.402375,-9.508115,1.081091,-9.108872,-9.224622,2.896867,7.230616,2.787207,7.042427,-6.872998,3.386720,-9.216404,3.490676,2.595604]]], dtype = "float32")#candidate|7874|(12, 12, 14)|const|float32
uop_7875 = relay.acos(const_7874.astype('float32')) # shape=(12, 12, 14)
bop_7881 = relay.minimum(const_7874.astype('float64'), relay.reshape(uop_7875.astype('float64'), relay.shape_of(const_7874))) # shape=(12, 12, 14)
uop_7890 = relay.cosh(const_7874.astype('float32')) # shape=(12, 12, 14)
func_7014_call = mod.get_global_var('func_7014')
func_7017_call = mutated_mod.get_global_var('func_7017')
var_7893 = relay.var("var_7893", dtype = "uint16", shape = (176,))#candidate|7893|(176,)|var|uint16
call_7892 = relay.TupleGetItem(func_7014_call(relay.reshape(var_7893.astype('uint16'), [2, 11, 8])), 1)
call_7894 = relay.TupleGetItem(func_7017_call(relay.reshape(var_7893.astype('uint16'), [2, 11, 8])), 1)
func_4230_call = mod.get_global_var('func_4230')
func_4232_call = mutated_mod.get_global_var('func_4232')
call_7895 = relay.TupleGetItem(func_4230_call(), 1)
call_7896 = relay.TupleGetItem(func_4232_call(), 1)
func_2492_call = mod.get_global_var('func_2492')
func_2496_call = mutated_mod.get_global_var('func_2496')
var_7901 = relay.var("var_7901", dtype = "int64", shape = (420,))#candidate|7901|(420,)|var|int64
call_7900 = relay.TupleGetItem(func_2492_call(relay.reshape(var_7901.astype('int64'), [6, 7, 10]), relay.reshape(call_7892.astype('float32'), [8, 196]), ), 3)
call_7902 = relay.TupleGetItem(func_2496_call(relay.reshape(var_7901.astype('int64'), [6, 7, 10]), relay.reshape(call_7892.astype('float32'), [8, 196]), ), 3)
uop_7912 = relay.rsqrt(uop_7875.astype('float64')) # shape=(12, 12, 14)
func_2186_call = mod.get_global_var('func_2186')
func_2191_call = mutated_mod.get_global_var('func_2191')
call_7928 = relay.TupleGetItem(func_2186_call(relay.reshape(call_7900.astype('float32'), [2, 16, 3]), relay.reshape(call_7900.astype('float32'), [2, 16, 3]), relay.reshape(call_7892.astype('float32'), [1568,]), ), 4)
call_7929 = relay.TupleGetItem(func_2191_call(relay.reshape(call_7900.astype('float32'), [2, 16, 3]), relay.reshape(call_7900.astype('float32'), [2, 16, 3]), relay.reshape(call_7892.astype('float32'), [1568,]), ), 4)
output = relay.Tuple([bop_7881,uop_7890,call_7892,var_7893,call_7895,call_7900,var_7901,uop_7912,call_7928,])
output2 = relay.Tuple([bop_7881,uop_7890,call_7894,var_7893,call_7896,call_7902,var_7901,uop_7912,call_7929,])
func_7932 = relay.Function([var_7893,var_7901,], output)
mod['func_7932'] = func_7932
mod = relay.transform.InferType()(mod)
mutated_mod['func_7932'] = func_7932
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7932_call = mutated_mod.get_global_var('func_7932')
var_7934 = relay.var("var_7934", dtype = "uint16", shape = (176,))#candidate|7934|(176,)|var|uint16
var_7935 = relay.var("var_7935", dtype = "int64", shape = (420,))#candidate|7935|(420,)|var|int64
call_7933 = func_7932_call(var_7934,var_7935,)
output = call_7933
func_7936 = relay.Function([var_7934,var_7935,], output)
mutated_mod['func_7936'] = func_7936
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6063_call = mod.get_global_var('func_6063')
func_6064_call = mutated_mod.get_global_var('func_6064')
call_8008 = relay.TupleGetItem(func_6063_call(), 1)
call_8009 = relay.TupleGetItem(func_6064_call(), 1)
func_4107_call = mod.get_global_var('func_4107')
func_4108_call = mutated_mod.get_global_var('func_4108')
call_8020 = func_4107_call()
call_8021 = func_4107_call()
func_3341_call = mod.get_global_var('func_3341')
func_3342_call = mutated_mod.get_global_var('func_3342')
call_8031 = func_3341_call()
call_8032 = func_3341_call()
func_7779_call = mod.get_global_var('func_7779')
func_7780_call = mutated_mod.get_global_var('func_7780')
call_8037 = relay.TupleGetItem(func_7779_call(), 1)
call_8038 = relay.TupleGetItem(func_7780_call(), 1)
uop_8042 = relay.log10(call_8008.astype('float64')) # shape=(5, 7, 5)
uop_8044 = relay.log10(call_8009.astype('float64')) # shape=(5, 7, 5)
output = relay.Tuple([call_8020,call_8031,call_8037,uop_8042,])
output2 = relay.Tuple([call_8021,call_8032,call_8038,uop_8044,])
func_8046 = relay.Function([], output)
mod['func_8046'] = func_8046
mod = relay.transform.InferType()(mod)
mutated_mod['func_8046'] = func_8046
mutated_mod = relay.transform.InferType()(mutated_mod)
func_8046_call = mutated_mod.get_global_var('func_8046')
call_8047 = func_8046_call()
output = call_8047
func_8048 = relay.Function([], output)
mutated_mod['func_8048'] = func_8048
mutated_mod = relay.transform.InferType()(mutated_mod)
var_8060 = relay.var("var_8060", dtype = "float32", shape = (12, 3, 14))#candidate|8060|(12, 3, 14)|var|float32
uop_8061 = relay.acos(var_8060.astype('float32')) # shape=(12, 3, 14)
func_5819_call = mod.get_global_var('func_5819')
func_5820_call = mutated_mod.get_global_var('func_5820')
call_8063 = func_5819_call()
call_8064 = func_5819_call()
func_3184_call = mod.get_global_var('func_3184')
func_3185_call = mutated_mod.get_global_var('func_3185')
call_8065 = relay.TupleGetItem(func_3184_call(), 2)
call_8066 = relay.TupleGetItem(func_3185_call(), 2)
uop_8072 = relay.cosh(uop_8061.astype('float64')) # shape=(12, 3, 14)
uop_8084 = relay.atanh(uop_8061.astype('float64')) # shape=(12, 3, 14)
bop_8089 = relay.logical_and(uop_8072.astype('bool'), relay.reshape(uop_8061.astype('bool'), relay.shape_of(uop_8072))) # shape=(12, 3, 14)
output = relay.Tuple([call_8063,call_8065,uop_8084,bop_8089,])
output2 = relay.Tuple([call_8064,call_8066,uop_8084,bop_8089,])
F = relay.Function([var_8060,], output)
mod['main'] = F
mod = relay.transform.InferType()(mod)
print('==========mod==========')
print(mod.astext(show_meta_data=False))
print('===================================')
F = relay.Function([var_8060,], output2)
mutated_mod['main'] = F
mutated_mod = relay.transform.InferType()(mutated_mod)
print('==========mutated_mod==========')
print(mutated_mod.astext(show_meta_data=False))
print('===================================')
graph, lib, params = relay.build(mod, target='llvm')
module1 = graph_runtime.create(graph, lib, tvm.device('llvm',0))
intrp2 = relay.build_module.create_executor('graph', mod, tvm.device('llvm',0),'llvm')
intrp3 = relay.build_module.create_executor('debug', mod, tvm.device('llvm',0),'llvm')
intrp4 = relay.build_module.create_executor('vm', mod, tvm.device('llvm',0),'llvm')
graph, lib, params = relay.build(mod, target='cuda')
module5 = graph_runtime.create(graph, lib, tvm.device('cuda',0))
intrp6 = relay.build_module.create_executor('graph', mod, tvm.device('cuda',0),'cuda')
intrp7 = relay.build_module.create_executor('debug', mod, tvm.device('cuda',0),'cuda')
intrp8 = relay.build_module.create_executor('vm', mod, tvm.device('cuda',0),'cuda')
seq = Sequential([
	relay.transform.AlterOpLayout(),
	relay.transform.AnnotateSpans(),
	relay.transform.BatchingOps(),
])
mod = seq(mod)
print(mod.astext(show_meta_data=False))
graph, lib, params = relay.build(mod, target='llvm')
module9 = graph_runtime.create(graph, lib, tvm.device('llvm',0))
intrp10 = relay.build_module.create_executor('graph', mod, tvm.device('llvm',0),'llvm')
intrp11 = relay.build_module.create_executor('debug', mod, tvm.device('llvm',0),'llvm')
intrp12 = relay.build_module.create_executor('vm', mod, tvm.device('llvm',0),'llvm')
graph, lib, params = relay.build(mod, target='cuda')
module13 = graph_runtime.create(graph, lib, tvm.device('cuda',0))
intrp14 = relay.build_module.create_executor('graph', mod, tvm.device('cuda',0),'cuda')
intrp15 = relay.build_module.create_executor('debug', mod, tvm.device('cuda',0),'cuda')
intrp16 = relay.build_module.create_executor('vm', mod, tvm.device('cuda',0),'cuda')
graph, lib, params = relay.build(mutated_mod, target='llvm')
module17 = graph_runtime.create(graph, lib, tvm.device('llvm',0))
intrp18 = relay.build_module.create_executor('graph', mutated_mod, tvm.device('llvm',0),'llvm')
intrp19 = relay.build_module.create_executor('debug', mutated_mod, tvm.device('llvm',0),'llvm')
intrp20 = relay.build_module.create_executor('vm', mutated_mod, tvm.device('llvm',0),'llvm')
graph, lib, params = relay.build(mutated_mod, target='cuda')
module21 = graph_runtime.create(graph, lib, tvm.device('cuda',0))
intrp22 = relay.build_module.create_executor('graph', mutated_mod, tvm.device('cuda',0),'cuda')
intrp23 = relay.build_module.create_executor('debug', mutated_mod, tvm.device('cuda',0),'cuda')
intrp24 = relay.build_module.create_executor('vm', mutated_mod, tvm.device('cuda',0),'cuda')

==========mod==========
#[version = "0.0.5"]
def @func_3217() -> Tensor[(13, 1, 1), float64] {
  %0 = @func_684() /* ty=(Tensor[(13, 1, 1), float64], Tensor[(13, 1, 1), float64]) */;
  %0.0
}

def @func_7235() -> (Tensor[(13, 1, 1), float64], Tensor[(13, 1, 1), float64], Tensor[(13, 1, 1), float64]) {
  %1 = @func_2230() /* ty=(Tensor[(13, 1, 1), float64], Tensor[(13, 1, 1), float64], Tensor[(13, 1, 1), float64]) */;
  %2 = @func_2300() /* ty=Tensor[(13, 1, 1), float64] */;
  %3 = @func_1340() /* ty=Tensor[(13, 1, 1), float64] */;
  %4 = %1.2;
  (%2, %3, %4)
}

def @func_11037() -> Tensor[(13, ?, ?), uint32] {
  @func_7010() /* ty=Tensor[(13, ?, ?), uint32] */
}

def @func_9016() -> (Tensor[(196), float64],) {
  %5 = @func_4275() /* ty=(Tensor[(13, ?, ?), float64], Tensor[(13, 1, 1), float64], Tensor[(196), float64]) */;
  %6 = %5.2;
  (%6,)
}

def @func_8622(%var_8605: Tensor[(192), float32]) -> (Tensor[(13, ?, ?), float64], Tensor[(12, 8, 2), float32], Tensor[(192), float32], Tensor[(13, 1, 1), float64], Tensor[(936), float64]) {
  %7 = cast(%var_8605, dtype="float32") /* ty=Tensor[(192), float32] */;
  %8 = reshape(%7, newshape=[12, 8, 2]) /* ty=Tensor[(12, 8, 2), float32] */;
  %9 = @func_5797(%8) /* ty=(Tensor[(12, 8, 2), float32],) */;
  %10 = cast(meta[relay.Constant][0] /* ty=Tensor[(936), float64] */, dtype="float64") /* ty=Tensor[(936), float64] */;
  %11 = reshape(%10, newshape=[936]) /* ty=Tensor[(936), float64] */;
  %12 = @func_4099(%11) /* ty=(Tensor[(13, 11, 9), float64], Tensor[(13, 1, 1), float64], Tensor[(13, 1, 1), float64], Tensor[(13, 1, 1), float64], Tensor[(936), float64], Tensor[(13, 10, 16), float32], Tensor[(196), float64], Tensor[(13, 1, 1), float32]) */;
  %13 = @func_5837() /* ty=Tensor[(13, ?, ?), float64] */;
  %14 = %9.0;
  %15 = %12.3;
  (%13, %14, %var_8605, %15, meta[relay.Constant][0] /* ty=Tensor[(936), float64] */)
}

def @func_7260() -> (Tensor[(13, 1, 1), float64],) {
  %16 = @func_6538() /* ty=(Tensor[(5, 9, 7), int16], Tensor[(13, 1, 1), float64], Tensor[(13, 1, 1), float64]) */;
  %17 = %16.1;
  (%17,)
}

def @func_10588() -> Tensor[(13, 1, 1), float64] {
  %18 = @func_7683() /* ty=(Tensor[(13, 1, 1), float64],) */;
  %18.0
}

def @func_10607() -> Tensor[(1152), float32] {
  %19 = @func_8143() /* ty=(Tensor[(1152), float32], Tensor[(14, 11, 6), float64], Tensor[(13, 1, 1), float64]) */;
  %19.0
}

def @func_9411() -> (Tensor[(13, 1, 1), float32],) {
  %20 = @func_5384() /* ty=(Tensor[(13, ?, ?), bool], Tensor[(13, ?, ?), float64], Tensor[(13, ?, ?), float64], Tensor[(13, 1, 1), float64], Tensor[(13, 1, 1), float32]) */;
  %21 = %20.4;
  (%21,)
}

def @func_5079(%var_5049: Tensor[(315, 1), int16]) -> (Tensor[(13, 1, 1), float64], Tensor[(315), int16], Tensor[(1, 2366), float64], Tensor[(13, 1, 1), float64], Tensor[(13, 1, 1), float64], Tensor[(14, 11, 6), float64], Tensor[(13, ?, ?), float64], Tensor[(13, 315, 1), bool]) {
  %22 = cast(meta[relay.Constant][1] /* ty=Tensor[(1, 2366), float64] */, dtype="float64") /* ty=Tensor[(1, 2366), float64] */;
  %23 = cast(%var_5049, dtype="int16") /* ty=Tensor[(315, 1), int16] */;
  %24 = reshape(%22, newshape=[13, 13, 14]) /* ty=Tensor[(13, 13, 14), float64] */;
  %25 = reshape(%23, newshape=[315]) /* ty=Tensor[(315), int16] */;
  %26 = @func_4783(%24, %25) /* ty=(Tensor[(13, 13, 14), bool], Tensor[(13, 1, 1), float64], Tensor[(13, 1, 1), float64], Tensor[(1, 10, 16), float32], Tensor[(315), int16]) */;
  %27 = @func_2512() /* ty=(Tensor[(13, 1, 1), float64],) */;
  %28 = @func_3634() /* ty=(Tensor[(14, 11, 6), float64],) */;
  %29 = @func_1541() /* ty=(Tensor[(13, 1, 1), float64], Tensor[(13, ?, ?), float64]) */;
  %30 = @func_3967() /* ty=(Tensor[(13, 5, 13), uint32], Tensor[(13, 5, 13), float64], Tensor[(13, 1, 1), float64]) */;
  %31 = %30.2;
  %32 = cast(%31, dtype="bool") /* ty=Tensor[(13, 1, 1), bool] */;
  %33 = cast(%var_5049, dtype="bool") /* ty=Tensor[(315, 1), bool] */;
  %34 = @func_3877() /* ty=Tensor[(13, 1, 1), float64] */;
  %35 = %26.4;
  %36 = %27.0;
  %37 = @func_1499() /* ty=Tensor[(13, 1, 1), float64] */;
  %38 = %28.0;
  %39 = %29.1;
  %40 = logical_or(%32, %33) /* ty=Tensor[(13, 315, 1), bool] */;
  (%34, %35, meta[relay.Constant][1] /* ty=Tensor[(1, 2366), float64] */, %36, %37, %38, %39, %40)
}

def @func_12073(%var_12068: Tensor[(882), float64]) -> (Tensor[(13, 10, 16), uint8], Tensor[(7, 9, 14), float64], Tensor[(882), float64]) {
  %41 = @func_6914() /* ty=(Tensor[(13, 10, 16), uint8],) */;
  %42 = cast(%var_12068, dtype="float64") /* ty=Tensor[(882), float64] */;
  %43 = reshape(%42, newshape=[7, 9, 14]) /* ty=Tensor[(7, 9, 14), float64] */;
  %44 = @func_8243(%43) /* ty=(Tensor[(7, 9, 14), float64],) */;
  %45 = %41.0;
  %46 = %44.0;
  (%45, %46, %var_12068)
}

def @func_5295() -> Tensor[(1, 10, 16), float32] {
  @func_1972() /* ty=Tensor[(1, 10, 16), float32] */
}

def @func_7486() -> (Tensor[(9, 1, 13), float64],) {
  %47 = cast(meta[relay.Constant][2] /* ty=Tensor[(9, 1, 13), float64] */, dtype="float64") /* ty=Tensor[(9, 1, 13), float64] */;
  %48 = acos(%47) /* ty=Tensor[(9, 1, 13), float64] */;
  (%48,)
}

def @func_8224() -> (Tensor[(13, ?, ?), float64],) {
  %49 = @func_2346() /* ty=(Tensor[(13, ?, ?), float64],) */;
  %50 = %49.0;
  (%50,)
}

def @func_2300() -> Tensor[(13, 1, 1), float64] {
  %51 = @func_585() /* ty=Tensor[(13, 1, 1), float64] */;
  %52 = cast(%51, dtype="float64") /* ty=Tensor[(13, 1, 1), float64] */;
  rsqrt(%52) /* ty=Tensor[(13, 1, 1), float64] */
}

def @func_5797(%var_5794: Tensor[(12, 8, 2), float32]) -> (Tensor[(12, 8, 2), float32],) {
  %53 = cast(%var_5794, dtype="float32") /* ty=Tensor[(12, 8, 2), float32] */;
  %54 = cos(%53) /* ty=Tensor[(12, 8, 2), float32] */;
  (%54,)
}

def @func_6636() -> Tensor[(13, ?, ?), float64] {
  %55 = @func_3205() /* ty=(Tensor[(13, ?, ?), float64], Tensor[(13, ?, ?), float64]) */;
  %55.0
}

def @func_5916() -> (Tensor[(13, 10, 16), float64],) {
  %56 = @func_861() /* ty=(Tensor[(13, 1, 1), float64], Tensor[(13, 1, 1), float64], Tensor[(13, 10, 16), bool], Tensor[(13, 10, 16), uint8], Tensor[(1, 10, 16), float32]) */;
  %57 = %56.3;
  %58 = cast(%57, dtype="float64") /* ty=Tensor[(13, 10, 16), float64] */;
  %59 = atanh(%58) /* ty=Tensor[(13, 10, 16), float64] */;
  (%59,)
}

def @func_6975() -> (Tensor[(13, 1, 1), float64], Tensor[(13, 1, 1), float64]) {
  %60 = @func_2575() /* ty=(Tensor[(13, 1, 1), float64], Tensor[(13, 1, 1), float64], Tensor[(416), float64], Tensor[(13, 1, 1), float64]) */;
  %61 = @func_2230() /* ty=(Tensor[(13, 1, 1), float64], Tensor[(13, 1, 1), float64], Tensor[(13, 1, 1), float64]) */;
  %62 = %60.3;
  %63 = %61.0;
  (%62, %63)
}

def @func_1886() -> (Tensor[(13, ?, ?), float64], Tensor[(13, ?, ?), bool], Tensor[(13, 1, 1), float64], Tensor[(1, 10, 16), float32], Tensor[(13, 1, 1), float64]) {
  %64 = @func_1541() /* ty=(Tensor[(13, 1, 1), float64], Tensor[(13, ?, ?), float64]) */;
  %65 = @func_1541() /* ty=(Tensor[(13, 1, 1), float64], Tensor[(13, ?, ?), float64]) */;
  %66 = %65.1;
  %67 = @func_1304() /* ty=(Tensor[(13, ?, ?), float64], Tensor[(13, ?, ?), float64]) */;
  %68 = %67.1;
  %69 = cast(%68, dtype="bool") /* ty=Tensor[(13, ?, ?), bool] */;
  %70 = shape_of(%66, dtype="int32") /* ty=Tensor[(3), int32] */;
  %71 = cast(%66, dtype="bool") /* ty=Tensor[(13, ?, ?), bool] */;
  %72 = dyn.reshape(%69, %70, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %73 = @func_1144() /* ty=(Tensor[(13, 1, 1), float64], Tensor[(1, 10, 16), float32]) */;
  %74 = @func_750() /* ty=Tensor[(1, 10, 16), float32] */;
  %75 = cast(%74, dtype="float32") /* ty=Tensor[(1, 10, 16), float32] */;
  %76 = @func_703() /* ty=(Tensor[(13, 1, 1), float64], Tensor[(13, 1, 1), float64], Tensor[(13, 1, 1), float64]) */;
  %77 = %64.1;
  %78 = less_equal(%71, %72) /* ty=Tensor[(13, ?, ?), bool] */;
  %79 = %73.0;
  %80 = rsqrt(%75) /* ty=Tensor[(1, 10, 16), float32] */;
  %81 = %76.1;
  (%77, %78, %79, %80, %81)
}

def @func_1340() -> Tensor[(13, 1, 1), float64] {
  @func_585() /* ty=Tensor[(13, 1, 1), float64] */
}

def @func_5696(%var_5684: Tensor[(13, 13, 1), float64]) -> (Tensor[(13, 13, 1), float64],) {
  %82 = @func_1144() /* ty=(Tensor[(13, 1, 1), float64], Tensor[(1, 10, 16), float32]) */;
  %83 = %82.0;
  %84 = cast(%83, dtype="uint32") /* ty=Tensor[(13, 1, 1), uint32] */;
  %85 = cast(%var_5684, dtype="uint32") /* ty=Tensor[(13, 13, 1), uint32] */;
  %86 = multiply(%84, %85) /* ty=Tensor[(13, 13, 1), uint32] */;
  %87 = cast(%86, dtype="float64") /* ty=Tensor[(13, 13, 1), float64] */;
  %88 = cos(%87) /* ty=Tensor[(13, 13, 1), float64] */;
  (%88,)
}

def @func_1972() -> Tensor[(1, 10, 16), float32] {
  %89 = @func_861() /* ty=(Tensor[(13, 1, 1), float64], Tensor[(13, 1, 1), float64], Tensor[(13, 10, 16), bool], Tensor[(13, 10, 16), uint8], Tensor[(1, 10, 16), float32]) */;
  %89.4
}

def @func_11971() -> Tensor[(1, 10, 16), float32] {
  %90 = @func_750() /* ty=Tensor[(1, 10, 16), float32] */;
  %91 = cast(%90, dtype="float32") /* ty=Tensor[(1, 10, 16), float32] */;
  acosh(%91) /* ty=Tensor[(1, 10, 16), float32] */
}

def @func_3634() -> (Tensor[(14, 11, 6), float64],) {
  %92 = cast(meta[relay.Constant][3] /* ty=Tensor[(14, 11, 6), float64] */, dtype="float64") /* ty=Tensor[(14, 11, 6), float64] */;
  %93 = asin(%92) /* ty=Tensor[(14, 11, 6), float64] */;
  (%93,)
}

def @func_8768() -> Tensor[(7, 9), int16] {
  %94 = @func_5221() /* ty=(Tensor[(13, 1, 1), float64], Tensor[(5, 9, 7), int16], Tensor[(7, 9), int16], Tensor[(315), int16], Tensor[(13, ?, ?), float64], Tensor[(6, 3, 16), uint64], Tensor[(48), uint64]) */;
  %94.2
}

def @func_11498() -> (Tensor[(13, 6, 4), float32],) {
  %95 = @func_3800() /* ty=(Tensor[(13, ?, ?), uint32], Tensor[(13, ?, ?), float64], Tensor[(14, 11, 6), float64], Tensor[(13, 1, 1), float64]) */;
  %96 = %95.3;
  %97 = cast(%96, dtype="float32") /* ty=Tensor[(13, 1, 1), float32] */;
  %98 = cast(meta[relay.Constant][4] /* ty=Tensor[(13, 6, 4), float64] */, dtype="float32") /* ty=Tensor[(13, 6, 4), float32] */;
  %99 = power(%97, %98) /* ty=Tensor[(13, 6, 4), float32] */;
  (%99,)
}

def @func_5013(%var_4986: Tensor[(16, 8, 9), float32]) -> (Tensor[(16, 8, 9), bool], Tensor[(13, 1, 1), float64]) {
  %100 = cast(%var_4986, dtype="float32") /* ty=Tensor[(16, 8, 9), float32] */;
  %101 = log(%100) /* ty=Tensor[(16, 8, 9), float32] */;
  %102 = cast(%101, dtype="float64") /* ty=Tensor[(16, 8, 9), float64] */;
  %103 = tan(%102) /* ty=Tensor[(16, 8, 9), float64] */;
  %104 = cast(%103, dtype="bool") /* ty=Tensor[(16, 8, 9), bool] */;
  %105 = shape_of(%101, dtype="int32") /* ty=Tensor[(3), int32] */;
  %106 = cast(%101, dtype="bool") /* ty=Tensor[(16, 8, 9), bool] */;
  %107 = dyn.reshape(%104, %105, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %108 = @func_2230() /* ty=(Tensor[(13, 1, 1), float64], Tensor[(13, 1, 1), float64], Tensor[(13, 1, 1), float64]) */;
  %109 = not_equal(%106, %107) /* ty=Tensor[(16, 8, 9), bool] */;
  %110 = %108.0;
  (%109, %110)
}

def @func_9254() -> (Tensor[(13, ?, ?), float64], Tensor[(13, ?, ?), float64], Tensor[(13, 1, 1), float64]) {
  %111 = @func_1468() /* ty=(Tensor[(13, ?, ?), float64], Tensor[(13, 1, 1), float64]) */;
  %112 = @func_8561() /* ty=(Tensor[(13, 1, 1), float64],) */;
  %113 = %111.0;
  %114 = @func_6636() /* ty=Tensor[(13, ?, ?), float64] */;
  %115 = %112.0;
  (%113, %114, %115)
}

def @func_3205() -> (Tensor[(13, ?, ?), float64], Tensor[(13, ?, ?), float64]) {
  %116 = @func_1304() /* ty=(Tensor[(13, ?, ?), float64], Tensor[(13, ?, ?), float64]) */;
  %117 = @func_1468() /* ty=(Tensor[(13, ?, ?), float64], Tensor[(13, 1, 1), float64]) */;
  %118 = %116.0;
  %119 = %117.0;
  (%118, %119)
}

def @func_1304() -> (Tensor[(13, ?, ?), float64], Tensor[(13, ?, ?), float64]) {
  %120 = @func_1196() /* ty=(Tensor[(13, ?, ?), float64],) */;
  %121 = @func_1196() /* ty=(Tensor[(13, ?, ?), float64],) */;
  %122 = %120.0;
  %123 = %121.0;
  (%122, %123)
}

def @func_12551() -> Tensor[(13, 1, 1), float64] {
  @func_5989() /* ty=Tensor[(13, 1, 1), float64] */
}

def @func_6374() -> (Tensor[(13, 1, 1), float64],) {
  %124 = @func_5232() /* ty=(Tensor[(13, 1, 1), float64], Tensor[(13, 1, 1), float64]) */;
  %125 = %124.1;
  (%125,)
}

def @func_4133() -> (Tensor[(13, 1, 1), float64], Tensor[(13, 1, 1), float64]) {
  %126 = @func_3217() /* ty=Tensor[(13, 1, 1), float64] */;
  %127 = @func_3905() /* ty=Tensor[(13, 1, 1), float64] */;
  (%126, %127)
}

def @func_8468(%var_8442: Tensor[(12, 11, 4), float32]) -> Tensor[(12, 11, 4), bool] {
  %128 = cast(%var_8442, dtype="float32") /* ty=Tensor[(12, 11, 4), float32] */;
  %129 = log10(%128) /* ty=Tensor[(12, 11, 4), float32] */;
  %130 = cast(%var_8442, dtype="bool") /* ty=Tensor[(12, 11, 4), bool] */;
  %131 = shape_of(%129, dtype="int32") /* ty=Tensor[(3), int32] */;
  %132 = cast(%129, dtype="bool") /* ty=Tensor[(12, 11, 4), bool] */;
  %133 = dyn.reshape(%130, %131, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  equal(%132, %133) /* ty=Tensor[(12, 11, 4), bool] */
}

def @func_2985() -> (Tensor[(13, 1, 1), float64],) {
  %134 = @func_2320() /* ty=(Tensor[(13, 1, 1), float64], Tensor[(13, 1, 1), float64]) */;
  %135 = %134.0;
  (%135,)
}

def @func_2439() -> (Tensor[(1, 10, 16), float32], Tensor[(13, 7, 10), float32]) {
  %136 = @func_1340() /* ty=Tensor[(13, 1, 1), float64] */;
  %137 = cast(%136, dtype="float32") /* ty=Tensor[(13, 1, 1), float32] */;
  %138 = cast(meta[relay.Constant][5] /* ty=Tensor[(13, 7, 10), float64] */, dtype="float32") /* ty=Tensor[(13, 7, 10), float32] */;
  %139 = @func_750() /* ty=Tensor[(1, 10, 16), float32] */;
  %140 = floor_mod(%137, %138) /* ty=Tensor[(13, 7, 10), float32] */;
  (%139, %140)
}

def @func_2370() -> (Tensor[(13, ?, ?), float64], Tensor[(13, 1, 1), float64]) {
  %141 = @func_1468() /* ty=(Tensor[(13, ?, ?), float64], Tensor[(13, 1, 1), float64]) */;
  %142 = @func_1729() /* ty=(Tensor[(13, 1, 1), float64],) */;
  %143 = %141.0;
  %144 = %142.0;
  (%143, %144)
}

def @func_9809(%var_9789: Tensor[(936), float64]) -> (Tensor[(13, 10, 16), float64], Tensor[(1, 936), float64], Tensor[(936), float64], Tensor[(13, 1, 1), float64]) {
  %145 = cast(%var_9789, dtype="float64") /* ty=Tensor[(936), float64] */;
  %146 = reshape(%145, newshape=[1, 936]) /* ty=Tensor[(1, 936), float64] */;
  %147 = @func_9521(%146) /* ty=(Tensor[(13, 1, 1), float32], Tensor[(196), float64], Tensor[(1, 936), float64]) */;
  %148 = @func_8143() /* ty=(Tensor[(1152), float32], Tensor[(14, 11, 6), float64], Tensor[(13, 1, 1), float64]) */;
  %149 = @func_7312() /* ty=Tensor[(13, 10, 16), float64] */;
  %150 = %147.2;
  %151 = %148.2;
  (%149, %150, %var_9789, %151)
}

def @func_643() -> (Tensor[(13, 1, 1), float64], Tensor[(13, 1, 1), float64], Tensor[(13, 1, 1), float64]) {
  %152 = @func_585() /* ty=Tensor[(13, 1, 1), float64] */;
  %153 = @func_585() /* ty=Tensor[(13, 1, 1), float64] */;
  %154 = @func_585() /* ty=Tensor[(13, 1, 1), float64] */;
  (%152, %153, %154)
}

def @func_659() -> (Tensor[(13, 1, 1), float64],) {
  %155 = @func_585() /* ty=Tensor[(13, 1, 1), float64] */;
  (%155,)
}

def @func_1668() -> Tensor[(13, 1, 1), float64] {
  @func_585() /* ty=Tensor[(13, 1, 1), float64] */
}

def @func_8866(%var_8801: Tensor[(1, 2, 1), int8]) -> (Tensor[(15, 2, 6), uint64], Tensor[(1, 2, 63), float64], Tensor[(13, 1, 1), float64]) {
  %156 = cast(%var_8801, dtype="int8") /* ty=Tensor[(1, 2, 1), int8] */;
  %157 = cast(meta[relay.Constant][6] /* ty=Tensor[(15, 2, 6), int8] */, dtype="int8") /* ty=Tensor[(15, 2, 6), int8] */;
  %158 = subtract(%156, %157) /* ty=Tensor[(15, 2, 6), int8] */;
  %159 = cast(meta[relay.Constant][6] /* ty=Tensor[(15, 2, 6), int8] */, dtype="uint64") /* ty=Tensor[(15, 2, 6), uint64] */;
  %160 = shape_of(%158, dtype="int32") /* ty=Tensor[(3), int32] */;
  %161 = cast(%158, dtype="uint64") /* ty=Tensor[(15, 2, 6), uint64] */;
  %162 = dyn.reshape(%159, %160, newshape=[]) /* ty=Tensor[(?, ?, ?), uint64] */;
  %163 = @func_4522() /* ty=(Tensor[(63), float32],) */;
  %164 = %163.0;
  %165 = cast(%164, dtype="float64") /* ty=Tensor[(63), float64] */;
  %166 = cast(%var_8801, dtype="float64") /* ty=Tensor[(1, 2, 1), float64] */;
  %167 = @func_6266() /* ty=(Tensor[(13, 1, 1), float64], Tensor[(13, 1, 1), float64], Tensor[(13, 1, 1), float64]) */;
  %168 = logical_xor(%161, %162) /* ty=Tensor[(15, 2, 6), uint64] */;
  %169 = floor_mod(%165, %166) /* ty=Tensor[(1, 2, 63), float64] */;
  %170 = %167.0;
  (%168, %169, %170)
}

def @func_3335(%var_3317: Tensor[(13, 8, 9), float64]) -> (Tensor[(13, 8, 9), bool], Tensor[(13, ?, ?), float64], Tensor[(13, 1, 1), float64]) {
  %171 = @func_643() /* ty=(Tensor[(13, 1, 1), float64], Tensor[(13, 1, 1), float64], Tensor[(13, 1, 1), float64]) */;
  %172 = %171.2;
  %173 = cast(%172, dtype="bool") /* ty=Tensor[(13, 1, 1), bool] */;
  %174 = cast(%var_3317, dtype="bool") /* ty=Tensor[(13, 8, 9), bool] */;
  %175 = @func_2346() /* ty=(Tensor[(13, ?, ?), float64],) */;
  %176 = @func_643() /* ty=(Tensor[(13, 1, 1), float64], Tensor[(13, 1, 1), float64], Tensor[(13, 1, 1), float64]) */;
  %177 = not_equal(%173, %174) /* ty=Tensor[(13, 8, 9), bool] */;
  %178 = %175.0;
  %179 = %176.1;
  (%177, %178, %179)
}

def @func_10180() -> (Tensor[(13, 1, 1), float32], Tensor[(13, ?, ?), float64]) {
  %180 = @func_1370() /* ty=Tensor[(13, 1, 1), float32] */;
  %181 = @func_5837() /* ty=Tensor[(13, ?, ?), float64] */;
  (%180, %181)
}

def @func_3719(%var_3692: Tensor[(14, 14, 1), float64]) -> (Tensor[(14, 14, 1), float64], Tensor[(13, 10, 16), float32]) {
  %182 = cast(%var_3692, dtype="float64") /* ty=Tensor[(14, 14, 1), float64] */;
  %183 = @func_861() /* ty=(Tensor[(13, 1, 1), float64], Tensor[(13, 1, 1), float64], Tensor[(13, 10, 16), bool], Tensor[(13, 10, 16), uint8], Tensor[(1, 10, 16), float32]) */;
  %184 = %183.2;
  %185 = cast(%184, dtype="float32") /* ty=Tensor[(13, 10, 16), float32] */;
  %186 = acosh(%182) /* ty=Tensor[(14, 14, 1), float64] */;
  %187 = cosh(%185) /* ty=Tensor[(13, 10, 16), float32] */;
  (%186, %187)
}

def @func_1370() -> Tensor[(13, 1, 1), float32] {
  %188 = @func_643() /* ty=(Tensor[(13, 1, 1), float64], Tensor[(13, 1, 1), float64], Tensor[(13, 1, 1), float64]) */;
  %189 = %188.0;
  %190 = cast(%189, dtype="float32") /* ty=Tensor[(13, 1, 1), float32] */;
  acosh(%190) /* ty=Tensor[(13, 1, 1), float32] */
}

def @func_5489() -> (Tensor[(13, 5, 13), uint32], Tensor[(13, 1, 1), float64]) {
  %191 = @func_3967() /* ty=(Tensor[(13, 5, 13), uint32], Tensor[(13, 5, 13), float64], Tensor[(13, 1, 1), float64]) */;
  %192 = @func_2498() /* ty=(Tensor[(13, 1, 1), float64], Tensor[(13, 1, 1), float64]) */;
  %193 = %191.0;
  %194 = %192.1;
  (%193, %194)
}

def @func_5507(%var_5494: Tensor[(3, 3, 8), uint8]) -> (Tensor[(3, 3, 8), uint8], Tensor[(13, 1, 1), float64]) {
  %195 = cast(meta[relay.Constant][7] /* ty=Tensor[(3, 3, 8), uint8] */, dtype="uint8") /* ty=Tensor[(3, 3, 8), uint8] */;
  %196 = shape_of(%var_5494, dtype="int32") /* ty=Tensor[(3), int32] */;
  %197 = cast(%var_5494, dtype="uint8") /* ty=Tensor[(3, 3, 8), uint8] */;
  %198 = dyn.reshape(%195, %196, newshape=[]) /* ty=Tensor[(?, ?, ?), uint8] */;
  %199 = @func_5232() /* ty=(Tensor[(13, 1, 1), float64], Tensor[(13, 1, 1), float64]) */;
  %200 = right_shift(%197, %198) /* ty=Tensor[(3, 3, 8), uint8] */;
  %201 = %199.0;
  (%200, %201)
}

def @func_3967() -> (Tensor[(13, 5, 13), uint32], Tensor[(13, 5, 13), float64], Tensor[(13, 1, 1), float64]) {
  %202 = @func_3427() /* ty=(Tensor[(13, 1, 1), float64], Tensor[(13, 1, 1), float64]) */;
  %203 = %202.0;
  %204 = cast(%203, dtype="uint32") /* ty=Tensor[(13, 1, 1), uint32] */;
  %205 = cast(meta[relay.Constant][8] /* ty=Tensor[(13, 5, 13), float64] */, dtype="uint32") /* ty=Tensor[(13, 5, 13), uint32] */;
  %206 = cast(meta[relay.Constant][8] /* ty=Tensor[(13, 5, 13), float64] */, dtype="float64") /* ty=Tensor[(13, 5, 13), float64] */;
  %207 = @func_3427() /* ty=(Tensor[(13, 1, 1), float64], Tensor[(13, 1, 1), float64]) */;
  %208 = minimum(%204, %205) /* ty=Tensor[(13, 5, 13), uint32] */;
  %209 = log(%206) /* ty=Tensor[(13, 5, 13), float64] */;
  %210 = %207.1;
  (%208, %209, %210)
}

def @func_5989() -> Tensor[(13, 1, 1), float64] {
  %211 = @func_2370() /* ty=(Tensor[(13, ?, ?), float64], Tensor[(13, 1, 1), float64]) */;
  %211.1
}

def @func_10083() -> (Tensor[(13, 1, 1), float64], Tensor[(13, 1, 1), float64]) {
  %212 = @func_4604() /* ty=(Tensor[(13, 1, 1), float64],) */;
  %213 = @func_3967() /* ty=(Tensor[(13, 5, 13), uint32], Tensor[(13, 5, 13), float64], Tensor[(13, 1, 1), float64]) */;
  %214 = %212.0;
  %215 = %213.2;
  (%214, %215)
}

def @func_5321() -> Tensor[(13, 1, 1), float64] {
  @func_3812() /* ty=Tensor[(13, 1, 1), float64] */
}

def @func_2498() -> (Tensor[(13, 1, 1), float64], Tensor[(13, 1, 1), float64]) {
  %216 = @func_659() /* ty=(Tensor[(13, 1, 1), float64],) */;
  %217 = %216.0;
  %218 = @func_1499() /* ty=Tensor[(13, 1, 1), float64] */;
  (%217, %218)
}

def @func_3122(%var_3114: Tensor[(168), float64]) -> (Tensor[(13, 1, 1), float64], Tensor[(13, 315, ?), int16], Tensor[(168), float64], Tensor[(315), int16]) {
  %219 = @func_1541() /* ty=(Tensor[(13, 1, 1), float64], Tensor[(13, ?, ?), float64]) */;
  %220 = cast(%var_3114, dtype="float64") /* ty=Tensor[(168), float64] */;
  %221 = cast(meta[relay.Constant][9] /* ty=Tensor[(315), int16] */, dtype="int16") /* ty=Tensor[(315), int16] */;
  %222 = reshape(%220, newshape=[7, 2, 12]) /* ty=Tensor[(7, 2, 12), float64] */;
  %223 = reshape(%221, newshape=[315, 1]) /* ty=Tensor[(315, 1), int16] */;
  %224 = @func_2081(%222, %223) /* ty=(Tensor[(7, 2, 12), float64], Tensor[(13, 1, 1), float64], Tensor[(13, 10, 16), bool], Tensor[(13, 315, ?), int16]) */;
  %225 = %219.0;
  %226 = %224.3;
  (%225, %226, %var_3114, meta[relay.Constant][9] /* ty=Tensor[(315), int16] */)
}

def @func_2916(%var_2905: Tensor[(168), float64]) -> (Tensor[(13, 1, 1), float64], Tensor[(13, ?, ?), float64], Tensor[(13, 1, 1), float64], Tensor[(13, ?, ?), float64], Tensor[(13, 315, ?), int16], Tensor[(168), float64], Tensor[(315), int16]) {
  %227 = @func_2012() /* ty=(Tensor[(13, 1, 1), float64], Tensor[(13, 1, 1), float64], Tensor[(13, 1, 1), float64]) */;
  %228 = @func_2346() /* ty=(Tensor[(13, ?, ?), float64],) */;
  %229 = @func_684() /* ty=(Tensor[(13, 1, 1), float64], Tensor[(13, 1, 1), float64]) */;
  %230 = @func_1196() /* ty=(Tensor[(13, ?, ?), float64],) */;
  %231 = cast(%var_2905, dtype="float64") /* ty=Tensor[(168), float64] */;
  %232 = cast(meta[relay.Constant][10] /* ty=Tensor[(315), int16] */, dtype="int16") /* ty=Tensor[(315), int16] */;
  %233 = reshape(%231, newshape=[7, 2, 12]) /* ty=Tensor[(7, 2, 12), float64] */;
  %234 = reshape(%232, newshape=[315, 1]) /* ty=Tensor[(315, 1), int16] */;
  %235 = @func_2081(%233, %234) /* ty=(Tensor[(7, 2, 12), float64], Tensor[(13, 1, 1), float64], Tensor[(13, 10, 16), bool], Tensor[(13, 315, ?), int16]) */;
  %236 = %227.2;
  %237 = %228.0;
  %238 = %229.0;
  %239 = %230.0;
  %240 = %235.3;
  (%236, %237, %238, %239, %240, %var_2905, meta[relay.Constant][10] /* ty=Tensor[(315), int16] */)
}

def @func_3295(%var_3265: Tensor[(13, 4, 5), float64]) -> (Tensor[(13, 4, 5), uint32], Tensor[(13, 1, 1), float64]) {
  %241 = @func_2370() /* ty=(Tensor[(13, ?, ?), float64], Tensor[(13, 1, 1), float64]) */;
  %242 = %241.0;
  %243 = cast(%242, dtype="uint32") /* ty=Tensor[(13, ?, ?), uint32] */;
  %244 = cast(%var_3265, dtype="uint32") /* ty=Tensor[(13, 4, 5), uint32] */;
  %245 = @func_1729() /* ty=(Tensor[(13, 1, 1), float64],) */;
  %246 = add(%243, %244) /* ty=Tensor[(13, 4, 5), uint32] */;
  %247 = %245.0;
  (%246, %247)
}

def @func_8682(%var_8642: Tensor[(13, 14, 1), float64]) -> (Tensor[(13, 14, 1), bool],) {
  %248 = @func_6150() /* ty=(Tensor[(13, 1, 1), float64],) */;
  %249 = %248.0;
  %250 = cast(%249, dtype="bool") /* ty=Tensor[(13, 1, 1), bool] */;
  %251 = cast(%var_8642, dtype="bool") /* ty=Tensor[(13, 14, 1), bool] */;
  %252 = not_equal(%250, %251) /* ty=Tensor[(13, 14, 1), bool] */;
  %253 = cast(%252, dtype="bool") /* ty=Tensor[(13, 14, 1), bool] */;
  %254 = cast(%249, dtype="bool") /* ty=Tensor[(13, 1, 1), bool] */;
  %255 = less(%253, %254) /* ty=Tensor[(13, 14, 1), bool] */;
  (%255,)
}

def @func_10479() -> (Tensor[(13, ?, ?), float64],) {
  %256 = @func_8224() /* ty=(Tensor[(13, ?, ?), float64],) */;
  %257 = %256.0;
  (%257,)
}

def @func_9883() -> (Tensor[(13, ?, ?), float64],) {
  %258 = @func_5837() /* ty=Tensor[(13, ?, ?), float64] */;
  (%258,)
}

def @func_4425() -> (Tensor[(416), float64], Tensor[(63), int16], Tensor[(315), int16]) {
  %259 = @func_2819() /* ty=(Tensor[(416), float64], Tensor[(416), float64], Tensor[(13, 1, 1), float64]) */;
  %260 = cast(meta[relay.Constant][11] /* ty=Tensor[(315), int16] */, dtype="int16") /* ty=Tensor[(315), int16] */;
  %261 = reshape(%260, newshape=[5, 63]) /* ty=Tensor[(5, 63), int16] */;
  %262 = @func_2657(%261) /* ty=(Tensor[(13, 1, 1), float64], Tensor[(13, 10, 16), bool], Tensor[(5, 9, 7), int16], Tensor[(63), int16], Tensor[(5, 63), int16], Tensor[(13, 1, 1), float64]) */;
  %263 = %259.0;
  %264 = %262.3;
  (%263, %264, meta[relay.Constant][11] /* ty=Tensor[(315), int16] */)
}

def @func_1541() -> (Tensor[(13, 1, 1), float64], Tensor[(13, ?, ?), float64]) {
  %265 = @func_659() /* ty=(Tensor[(13, 1, 1), float64],) */;
  %266 = @func_1304() /* ty=(Tensor[(13, ?, ?), float64], Tensor[(13, ?, ?), float64]) */;
  %267 = %265.0;
  %268 = %266.0;
  (%267, %268)
}

def @func_10240(%var_10229: Tensor[(1152), float32]) -> (Tensor[(6, 4, 10), float32], Tensor[(1, 936), float64], Tensor[(936), float64], Tensor[(13, 1, 1), float64], Tensor[(16, 8, 9), bool], Tensor[(1152), float32]) {
  %269 = cast(meta[relay.Constant][12] /* ty=Tensor[(936), float64] */, dtype="float64") /* ty=Tensor[(936), float64] */;
  %270 = reshape(%269, newshape=[936]) /* ty=Tensor[(936), float64] */;
  %271 = @func_9809(%270) /* ty=(Tensor[(13, 10, 16), float64], Tensor[(1, 936), float64], Tensor[(936), float64], Tensor[(13, 1, 1), float64]) */;
  %272 = @func_732() /* ty=(Tensor[(13, 1, 1), float64],) */;
  %273 = cast(%var_10229, dtype="float32") /* ty=Tensor[(1152), float32] */;
  %274 = reshape(%273, newshape=[16, 8, 9]) /* ty=Tensor[(16, 8, 9), float32] */;
  %275 = @func_5013(%274) /* ty=(Tensor[(16, 8, 9), bool], Tensor[(13, 1, 1), float64]) */;
  %276 = @func_7581() /* ty=Tensor[(6, 4, 10), float32] */;
  %277 = %271.1;
  %278 = %272.0;
  %279 = %275.0;
  (%276, %277, meta[relay.Constant][12] /* ty=Tensor[(936), float64] */, %278, %279, %var_10229)
}

def @func_9581(%var_9567: Tensor[(48), uint64]) -> (Tensor[(13, 1, 1), float64], Tensor[(6, 3, 16), uint64], Tensor[(48), uint64], Tensor[(13, 1, 1), float64]) {
  %280 = @func_1541() /* ty=(Tensor[(13, 1, 1), float64], Tensor[(13, ?, ?), float64]) */;
  %281 = cast(%var_9567, dtype="uint64") /* ty=Tensor[(48), uint64] */;
  %282 = reshape(%281, newshape=[1, 3, 16]) /* ty=Tensor[(1, 3, 16), uint64] */;
  %283 = @func_4829(%282) /* ty=(Tensor[(6, 3, 16), uint64],) */;
  %284 = %280.0;
  %285 = %283.0;
  %286 = @func_3217() /* ty=Tensor[(13, 1, 1), float64] */;
  (%284, %285, %var_9567, %286)
}

def @func_7581() -> Tensor[(6, 4, 10), float32] {
  %287 = cast(meta[relay.Constant][13] /* ty=Tensor[(6, 4, 10), float32] */, dtype="float32") /* ty=Tensor[(6, 4, 10), float32] */;
  sigmoid(%287) /* ty=Tensor[(6, 4, 10), float32] */
}

def @func_9143(%var_9106: Tensor[(936), float64], %var_9138: Tensor[(260), float64]) -> (Tensor[(13, 1, 1), float64], Tensor[(196), float64], Tensor[(936), float64], Tensor[(196), float64], Tensor[(13, 4, 5), uint32], Tensor[(260), float64]) {
  %288 = @func_684() /* ty=(Tensor[(13, 1, 1), float64], Tensor[(13, 1, 1), float64]) */;
  %289 = cast(%var_9106, dtype="float64") /* ty=Tensor[(936), float64] */;
  %290 = reshape(%289, newshape=[936]) /* ty=Tensor[(936), float64] */;
  %291 = @func_4099(%290) /* ty=(Tensor[(13, 11, 9), float64], Tensor[(13, 1, 1), float64], Tensor[(13, 1, 1), float64], Tensor[(13, 1, 1), float64], Tensor[(936), float64], Tensor[(13, 10, 16), float32], Tensor[(196), float64], Tensor[(13, 1, 1), float32]) */;
  %292 = @func_9016() /* ty=(Tensor[(196), float64],) */;
  %293 = cast(%var_9138, dtype="float64") /* ty=Tensor[(260), float64] */;
  %294 = reshape(%293, newshape=[13, 4, 5]) /* ty=Tensor[(13, 4, 5), float64] */;
  %295 = @func_3295(%294) /* ty=(Tensor[(13, 4, 5), uint32], Tensor[(13, 1, 1), float64]) */;
  %296 = %288.0;
  %297 = %291.6;
  %298 = %292.0;
  %299 = %295.0;
  (%296, %297, %var_9106, %298, %299, %var_9138)
}

def @func_10326() -> (Tensor[(13, 1, 1), float64], Tensor[(9, 1, 13), float64]) {
  %300 = @func_7332() /* ty=(Tensor[(13, 1, 1), float64],) */;
  %301 = %300.0;
  %302 = @func_8340() /* ty=Tensor[(9, 1, 13), float64] */;
  (%301, %302)
}

def @func_5143(%var_5129: Tensor[(13, 2, 9), float64]) -> (Tensor[(13, 2, 9), int32], Tensor[(13, 1, 1), float64]) {
  %303 = @func_3205() /* ty=(Tensor[(13, ?, ?), float64], Tensor[(13, ?, ?), float64]) */;
  %304 = %303.1;
  %305 = cast(%304, dtype="int32") /* ty=Tensor[(13, ?, ?), int32] */;
  %306 = cast(%var_5129, dtype="int32") /* ty=Tensor[(13, 2, 9), int32] */;
  %307 = @func_2320() /* ty=(Tensor[(13, 1, 1), float64], Tensor[(13, 1, 1), float64]) */;
  %308 = bitwise_xor(%305, %306) /* ty=Tensor[(13, 2, 9), int32] */;
  %309 = %307.1;
  (%308, %309)
}

def @func_5713() -> (Tensor[(13, 1, 1), float64], Tensor[(13, 1, 1), float64], Tensor[(13, 1, 1), float64]) {
  %310 = @func_4604() /* ty=(Tensor[(13, 1, 1), float64],) */;
  %311 = @func_1776() /* ty=(Tensor[(13, 1, 1), float64], Tensor[(13, 1, 1), float64], Tensor[(13, 1, 1), float64], Tensor[(13, 1, 1), float64], Tensor[(416), float64]) */;
  %312 = @func_643() /* ty=(Tensor[(13, 1, 1), float64], Tensor[(13, 1, 1), float64], Tensor[(13, 1, 1), float64]) */;
  %313 = %310.0;
  %314 = %311.3;
  %315 = %312.1;
  (%313, %314, %315)
}

def @func_5837() -> Tensor[(13, ?, ?), float64] {
  %316 = @func_2346() /* ty=(Tensor[(13, ?, ?), float64],) */;
  %316.0
}

def @func_10716(%var_10711: Tensor[(13, 10, 16), float64]) -> (Tensor[(13, 10, 16), int32],) {
  %317 = @func_9711() /* ty=Tensor[(13, 10, 16), float64] */;
  %318 = cast(%var_10711, dtype="int32") /* ty=Tensor[(13, 10, 16), int32] */;
  %319 = shape_of(%317, dtype="int32") /* ty=Tensor[(3), int32] */;
  %320 = cast(%317, dtype="int32") /* ty=Tensor[(13, 10, 16), int32] */;
  %321 = dyn.reshape(%318, %319, newshape=[]) /* ty=Tensor[(?, ?, ?), int32] */;
  %322 = add(%320, %321) /* ty=Tensor[(13, 10, 16), int32] */;
  (%322,)
}

def @func_10868() -> (Tensor[(13, 1, 1), float64],) {
  %323 = @func_10535() /* ty=Tensor[(13, 1, 1), float64] */;
  (%323,)
}

def @func_11081() -> (Tensor[(13, 1, 1), float64],) {
  %324 = @func_643() /* ty=(Tensor[(13, 1, 1), float64], Tensor[(13, 1, 1), float64], Tensor[(13, 1, 1), float64]) */;
  %325 = %324.1;
  (%325,)
}

def @func_4522() -> (Tensor[(63), float32],) {
  %326 = @func_4425() /* ty=(Tensor[(416), float64], Tensor[(63), int16], Tensor[(315), int16]) */;
  %327 = %326.1;
  %328 = cast(%327, dtype="float64") /* ty=Tensor[(63), float64] */;
  %329 = acos(%328) /* ty=Tensor[(63), float64] */;
  %330 = cast(%329, dtype="float32") /* ty=Tensor[(63), float32] */;
  %331 = cos(%330) /* ty=Tensor[(63), float32] */;
  (%331,)
}

def @func_1080(%var_996: Tensor[(13, 8, 4), float64]) -> (Tensor[(13, 8, 4), int16], Tensor[(13, 10, 16), uint8], Tensor[(13, 1, 1), float64], Tensor[(13, 1, 1), float64], Tensor[(13, 1, 1), float64], Tensor[(13, 1, 1), float64]) {
  %332 = @func_585() /* ty=Tensor[(13, 1, 1), float64] */;
  %333 = cast(%332, dtype="int16") /* ty=Tensor[(13, 1, 1), int16] */;
  %334 = cast(%var_996, dtype="int16") /* ty=Tensor[(13, 8, 4), int16] */;
  %335 = @func_861() /* ty=(Tensor[(13, 1, 1), float64], Tensor[(13, 1, 1), float64], Tensor[(13, 10, 16), bool], Tensor[(13, 10, 16), uint8], Tensor[(1, 10, 16), float32]) */;
  %336 = @func_732() /* ty=(Tensor[(13, 1, 1), float64],) */;
  %337 = @func_732() /* ty=(Tensor[(13, 1, 1), float64],) */;
  %338 = @func_684() /* ty=(Tensor[(13, 1, 1), float64], Tensor[(13, 1, 1), float64]) */;
  %339 = @func_703() /* ty=(Tensor[(13, 1, 1), float64], Tensor[(13, 1, 1), float64], Tensor[(13, 1, 1), float64]) */;
  %340 = logical_xor(%333, %334) /* ty=Tensor[(13, 8, 4), int16] */;
  %341 = %335.3;
  %342 = %336.0;
  %343 = %337.0;
  %344 = %338.0;
  %345 = %339.0;
  (%340, %341, %342, %343, %344, %345)
}

def @func_7807() -> (Tensor[(13, 1, 1), float64],) {
  %346 = @func_3427() /* ty=(Tensor[(13, 1, 1), float64], Tensor[(13, 1, 1), float64]) */;
  %347 = %346.1;
  (%347,)
}

def @func_12856() -> Tensor[(13, 1, 1), float64] {
  %348 = @func_2498() /* ty=(Tensor[(13, 1, 1), float64], Tensor[(13, 1, 1), float64]) */;
  %348.0
}

def @func_3019() -> (Tensor[(13, 1, 1), float64], Tensor[(1, 10, 16), float32], Tensor[(13, 1, 1), float64]) {
  %349 = @func_2985() /* ty=(Tensor[(13, 1, 1), float64],) */;
  %350 = %349.0;
  %351 = @func_1972() /* ty=Tensor[(1, 10, 16), float32] */;
  %352 = @func_585() /* ty=Tensor[(13, 1, 1), float64] */;
  (%350, %351, %352)
}

def @func_9488(%var_9486: Tensor[(315), int16]) -> (Tensor[(13, 4, 4), bool], Tensor[(63), int16], Tensor[(315), int16]) {
  %353 = @func_2230() /* ty=(Tensor[(13, 1, 1), float64], Tensor[(13, 1, 1), float64], Tensor[(13, 1, 1), float64]) */;
  %354 = %353.0;
  %355 = cast(%354, dtype="bool") /* ty=Tensor[(13, 1, 1), bool] */;
  %356 = cast(meta[relay.Constant][14] /* ty=Tensor[(13, 4, 4), float64] */, dtype="bool") /* ty=Tensor[(13, 4, 4), bool] */;
  %357 = cast(%var_9486, dtype="int16") /* ty=Tensor[(315), int16] */;
  %358 = reshape(%357, newshape=[5, 63]) /* ty=Tensor[(5, 63), int16] */;
  %359 = @func_2657(%358) /* ty=(Tensor[(13, 1, 1), float64], Tensor[(13, 10, 16), bool], Tensor[(5, 9, 7), int16], Tensor[(63), int16], Tensor[(5, 63), int16], Tensor[(13, 1, 1), float64]) */;
  %360 = less(%355, %356) /* ty=Tensor[(13, 4, 4), bool] */;
  %361 = %359.3;
  (%360, %361, %var_9486)
}

def @func_6657() -> (Tensor[(13, ?, ?), bool], Tensor[(13, 11, 2), bool], Tensor[(63), float32]) {
  %362 = @func_1886() /* ty=(Tensor[(13, ?, ?), float64], Tensor[(13, ?, ?), bool], Tensor[(13, 1, 1), float64], Tensor[(1, 10, 16), float32], Tensor[(13, 1, 1), float64]) */;
  %363 = @func_5895() /* ty=(Tensor[(13, 11, 2), bool], Tensor[(13, 5, 13), float64], Tensor[(13, ?, ?), uint32]) */;
  %364 = @func_4522() /* ty=(Tensor[(63), float32],) */;
  %365 = %362.1;
  %366 = %363.0;
  %367 = %364.0;
  (%365, %366, %367)
}

def @func_7733() -> (Tensor[(1, 10, 16), float64],) {
  %368 = @func_2439() /* ty=(Tensor[(1, 10, 16), float32], Tensor[(13, 7, 10), float32]) */;
  %369 = %368.0;
  %370 = cast(%369, dtype="float64") /* ty=Tensor[(1, 10, 16), float64] */;
  %371 = exp(%370) /* ty=Tensor[(1, 10, 16), float64] */;
  (%371,)
}

def @func_10535() -> Tensor[(13, 1, 1), float64] {
  @func_5989() /* ty=Tensor[(13, 1, 1), float64] */
}

def @func_585() -> Tensor[(13, 1, 1), float64] {
  %372 = cast(meta[relay.Constant][15] /* ty=Tensor[(13, 1, 1), float64] */, dtype="float64") /* ty=Tensor[(13, 1, 1), float64] */;
  erf(%372) /* ty=Tensor[(13, 1, 1), float64] */
}

def @func_8714() -> (Tensor[(13, 1, 1), float64],) {
  %373 = @func_1144() /* ty=(Tensor[(13, 1, 1), float64], Tensor[(1, 10, 16), float32]) */;
  %374 = %373.0;
  (%374,)
}

def @func_1196() -> (Tensor[(13, ?, ?), float64],) {
  %375 = @func_585() /* ty=Tensor[(13, 1, 1), float64] */;
  %376 = @func_684() /* ty=(Tensor[(13, 1, 1), float64], Tensor[(13, 1, 1), float64]) */;
  %377 = %376.0;
  %378 = cast(%377, dtype="float64") /* ty=Tensor[(13, 1, 1), float64] */;
  %379 = shape_of(%375, dtype="int32") /* ty=Tensor[(3), int32] */;
  %380 = cast(%375, dtype="float64") /* ty=Tensor[(13, 1, 1), float64] */;
  %381 = dyn.reshape(%378, %379, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %382 = floor_divide(%380, %381) /* ty=Tensor[(13, ?, ?), float64] */;
  (%382,)
}

def @func_6826() -> (Tensor[(13, ?, ?), float64], Tensor[(13, 1, 1), float64]) {
  %383 = @func_2346() /* ty=(Tensor[(13, ?, ?), float64],) */;
  %384 = %383.0;
  %385 = @func_5462() /* ty=Tensor[(13, 1, 1), float64] */;
  (%384, %385)
}

def @func_8757() -> (Tensor[(13, 1, 1), float64], Tensor[(416), float64], Tensor[(13, 1, 1), float64]) {
  %386 = @func_3059() /* ty=(Tensor[(13, 1, 1), float64],) */;
  %387 = @func_3247() /* ty=(Tensor[(13, 1, 1), float64], Tensor[(416), float64], Tensor[(13, ?, ?), float64]) */;
  %388 = @func_3398() /* ty=(Tensor[(13, 1, 1), float64],) */;
  %389 = %386.0;
  %390 = %387.1;
  %391 = %388.0;
  (%389, %390, %391)
}

def @func_9352(%var_9334: Tensor[(12, 10, 16), float32]) -> (Tensor[(12, 10, 16), float64],) {
  %392 = @func_7195() /* ty=(Tensor[(1, 10, 16), float32],) */;
  %393 = %392.0;
  %394 = cast(%393, dtype="bool") /* ty=Tensor[(1, 10, 16), bool] */;
  %395 = cast(%var_9334, dtype="bool") /* ty=Tensor[(12, 10, 16), bool] */;
  %396 = logical_and(%394, %395) /* ty=Tensor[(12, 10, 16), bool] */;
  %397 = cast(%393, dtype="float64") /* ty=Tensor[(1, 10, 16), float64] */;
  %398 = cast(%396, dtype="float64") /* ty=Tensor[(12, 10, 16), float64] */;
  %399 = floor_divide(%397, %398) /* ty=Tensor[(12, 10, 16), float64] */;
  (%399,)
}

def @func_5232() -> (Tensor[(13, 1, 1), float64], Tensor[(13, 1, 1), float64]) {
  %400 = @func_3247() /* ty=(Tensor[(13, 1, 1), float64], Tensor[(416), float64], Tensor[(13, ?, ?), float64]) */;
  %401 = @func_3217() /* ty=Tensor[(13, 1, 1), float64] */;
  %402 = %400.0;
  (%401, %402)
}

def @func_6694() -> (Tensor[(315), int16], Tensor[(13, 1, 1), float64]) {
  %403 = @func_4425() /* ty=(Tensor[(416), float64], Tensor[(63), int16], Tensor[(315), int16]) */;
  %404 = @func_4133() /* ty=(Tensor[(13, 1, 1), float64], Tensor[(13, 1, 1), float64]) */;
  %405 = %403.2;
  %406 = %404.1;
  (%405, %406)
}

def @func_11229(%var_11216: Tensor[(16, 5, 8), float64]) -> (Tensor[(16, 5, 8), float64],) {
  %407 = cast(%var_11216, dtype="float64") /* ty=Tensor[(16, 5, 8), float64] */;
  %408 = asinh(%407) /* ty=Tensor[(16, 5, 8), float64] */;
  (%408,)
}

def @func_9441() -> Tensor[(13, 1, 1), float64] {
  @func_8273() /* ty=Tensor[(13, 1, 1), float64] */
}

def @func_11134() -> Tensor[(13, 1, 1), float64] {
  %409 = @func_964() /* ty=(Tensor[(13, 1, 1), float64],) */;
  %409.0
}

def @func_5384() -> (Tensor[(13, ?, ?), bool], Tensor[(13, ?, ?), float64], Tensor[(13, ?, ?), float64], Tensor[(13, 1, 1), float64], Tensor[(13, 1, 1), float32]) {
  %410 = @func_1886() /* ty=(Tensor[(13, ?, ?), float64], Tensor[(13, ?, ?), bool], Tensor[(13, 1, 1), float64], Tensor[(1, 10, 16), float32], Tensor[(13, 1, 1), float64]) */;
  %411 = @func_1196() /* ty=(Tensor[(13, ?, ?), float64],) */;
  %412 = @func_1196() /* ty=(Tensor[(13, ?, ?), float64],) */;
  %413 = @func_5321() /* ty=Tensor[(13, 1, 1), float64] */;
  %414 = cast(%413, dtype="float64") /* ty=Tensor[(13, 1, 1), float64] */;
  %415 = sigmoid(%414) /* ty=Tensor[(13, 1, 1), float64] */;
  %416 = cast(%415, dtype="float32") /* ty=Tensor[(13, 1, 1), float32] */;
  %417 = %410.1;
  %418 = %411.0;
  %419 = %412.0;
  %420 = @func_3217() /* ty=Tensor[(13, 1, 1), float64] */;
  %421 = sinh(%416) /* ty=Tensor[(13, 1, 1), float32] */;
  (%417, %418, %419, %420, %421)
}

def @func_3427() -> (Tensor[(13, 1, 1), float64], Tensor[(13, 1, 1), float64]) {
  %422 = @func_684() /* ty=(Tensor[(13, 1, 1), float64], Tensor[(13, 1, 1), float64]) */;
  %423 = @func_2512() /* ty=(Tensor[(13, 1, 1), float64],) */;
  %424 = %422.1;
  %425 = %423.0;
  (%424, %425)
}

def @func_2230() -> (Tensor[(13, 1, 1), float64], Tensor[(13, 1, 1), float64], Tensor[(13, 1, 1), float64]) {
  %426 = @func_964() /* ty=(Tensor[(13, 1, 1), float64],) */;
  %427 = @func_1804() /* ty=(Tensor[(13, 1, 1), float64],) */;
  %428 = @func_659() /* ty=(Tensor[(13, 1, 1), float64],) */;
  %429 = %426.0;
  %430 = %427.0;
  %431 = %428.0;
  (%429, %430, %431)
}

def @func_1804() -> (Tensor[(13, 1, 1), float64],) {
  %432 = @func_684() /* ty=(Tensor[(13, 1, 1), float64], Tensor[(13, 1, 1), float64]) */;
  %433 = %432.1;
  (%433,)
}

def @func_6914() -> (Tensor[(13, 10, 16), uint8],) {
  %434 = @func_861() /* ty=(Tensor[(13, 1, 1), float64], Tensor[(13, 1, 1), float64], Tensor[(13, 10, 16), bool], Tensor[(13, 10, 16), uint8], Tensor[(1, 10, 16), float32]) */;
  %435 = %434.3;
  (%435,)
}

def @func_11154() -> (Tensor[(13, 10, 16), float64],) {
  %436 = @func_7941() /* ty=(Tensor[(13, ?, ?), float64], Tensor[(13, 10, 16), float64]) */;
  %437 = %436.1;
  (%437,)
}

def @func_7716() -> Tensor[(13, 1, 1), float64] {
  %438 = @func_5232() /* ty=(Tensor[(13, 1, 1), float64], Tensor[(13, 1, 1), float64]) */;
  %438.1
}

def @func_12107() -> (Tensor[(13, ?, ?), float64],) {
  %439 = @func_7864() /* ty=Tensor[(13, ?, ?), float64] */;
  (%439,)
}

def @func_2512() -> (Tensor[(13, 1, 1), float64],) {
  %440 = @func_732() /* ty=(Tensor[(13, 1, 1), float64],) */;
  %441 = %440.0;
  (%441,)
}

def @func_7442() -> (Tensor[(1, 10, 16), float32], Tensor[(13, 1, 1), float64], Tensor[(13, 1, 1), float64], Tensor[(13, 1, 1), float64]) {
  %442 = @func_1144() /* ty=(Tensor[(13, 1, 1), float64], Tensor[(1, 10, 16), float32]) */;
  %443 = @func_1804() /* ty=(Tensor[(13, 1, 1), float64],) */;
  %444 = @func_5989() /* ty=Tensor[(13, 1, 1), float64] */;
  %445 = cast(%444, dtype="float64") /* ty=Tensor[(13, 1, 1), float64] */;
  %446 = @func_1468() /* ty=(Tensor[(13, ?, ?), float64], Tensor[(13, 1, 1), float64]) */;
  %447 = %442.1;
  %448 = %443.0;
  %449 = atanh(%445) /* ty=Tensor[(13, 1, 1), float64] */;
  %450 = %446.1;
  (%447, %448, %449, %450)
}

def @func_2320() -> (Tensor[(13, 1, 1), float64], Tensor[(13, 1, 1), float64]) {
  %451 = @func_1804() /* ty=(Tensor[(13, 1, 1), float64],) */;
  %452 = @func_1144() /* ty=(Tensor[(13, 1, 1), float64], Tensor[(1, 10, 16), float32]) */;
  %453 = %452.0;
  %454 = cast(%453, dtype="float64") /* ty=Tensor[(13, 1, 1), float64] */;
  %455 = %451.0;
  %456 = asinh(%454) /* ty=Tensor[(13, 1, 1), float64] */;
  (%455, %456)
}

def @func_2012() -> (Tensor[(13, 1, 1), float64], Tensor[(13, 1, 1), float64], Tensor[(13, 1, 1), float64]) {
  %457 = @func_861() /* ty=(Tensor[(13, 1, 1), float64], Tensor[(13, 1, 1), float64], Tensor[(13, 10, 16), bool], Tensor[(13, 10, 16), uint8], Tensor[(1, 10, 16), float32]) */;
  %458 = @func_1776() /* ty=(Tensor[(13, 1, 1), float64], Tensor[(13, 1, 1), float64], Tensor[(13, 1, 1), float64], Tensor[(13, 1, 1), float64], Tensor[(416), float64]) */;
  %459 = @func_684() /* ty=(Tensor[(13, 1, 1), float64], Tensor[(13, 1, 1), float64]) */;
  %460 = %457.0;
  %461 = %458.0;
  %462 = %459.1;
  (%460, %461, %462)
}

def @func_7531() -> Tensor[(14, 11, 6), float64] {
  %463 = @func_3634() /* ty=(Tensor[(14, 11, 6), float64],) */;
  %463.0
}

def @func_12256() -> (Tensor[(13, 1, 1), float32], Tensor[(7, 9, 14), float64], Tensor[(98, 9), float64], Tensor[(13, 1, 1), float64]) {
  %464 = cast(meta[relay.Constant][16] /* ty=Tensor[(98, 9), float64] */, dtype="float64") /* ty=Tensor[(98, 9), float64] */;
  %465 = reshape(%464, newshape=[7, 9, 14]) /* ty=Tensor[(7, 9, 14), float64] */;
  %466 = @func_8243(%465) /* ty=(Tensor[(7, 9, 14), float64],) */;
  %467 = @func_1370() /* ty=Tensor[(13, 1, 1), float32] */;
  %468 = %466.0;
  %469 = @func_5989() /* ty=Tensor[(13, 1, 1), float64] */;
  (%467, %468, meta[relay.Constant][16] /* ty=Tensor[(98, 9), float64] */, %469)
}

def @func_10111(%var_10095: Tensor[(12, 7, 6), int8], %var_10096: Tensor[(12, 7, 6), int8]) -> (Tensor[(12, 7, 6), bool],) {
  %470 = cast(%var_10096, dtype="bool") /* ty=Tensor[(12, 7, 6), bool] */;
  %471 = shape_of(%var_10095, dtype="int32") /* ty=Tensor[(3), int32] */;
  %472 = cast(%var_10095, dtype="bool") /* ty=Tensor[(12, 7, 6), bool] */;
  %473 = dyn.reshape(%470, %471, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %474 = greater(%472, %473) /* ty=Tensor[(12, 7, 6), bool] */;
  (%474,)
}

def @func_6805() -> Tensor[(13, 1, 1), float64] {
  @func_1499() /* ty=Tensor[(13, 1, 1), float64] */
}

def @func_3890() -> (Tensor[(13, 1, 1), float64],) {
  %475 = @func_659() /* ty=(Tensor[(13, 1, 1), float64],) */;
  %476 = %475.0;
  (%476,)
}

def @func_10634() -> (Tensor[(13, 1, 1), float64], Tensor[(13, 1, 1), float64]) {
  %477 = @func_6374() /* ty=(Tensor[(13, 1, 1), float64],) */;
  %478 = @func_3217() /* ty=Tensor[(13, 1, 1), float64] */;
  %479 = %477.0;
  (%478, %479)
}

def @func_11895() -> (Tensor[(8, 7, 8), float32], Tensor[(13, 1, 1), float64]) {
  %480 = cast(meta[relay.Constant][17] /* ty=Tensor[(8, 7, 8), float32] */, dtype="float32") /* ty=Tensor[(8, 7, 8), float32] */;
  %481 = @func_6975() /* ty=(Tensor[(13, 1, 1), float64], Tensor[(13, 1, 1), float64]) */;
  %482 = sigmoid(%480) /* ty=Tensor[(8, 7, 8), float32] */;
  %483 = %481.0;
  (%482, %483)
}

def @func_8045(%var_8015: Tensor[(105, 3), int16]) -> (Tensor[(315), int16], Tensor[(105, 3), int16], Tensor[(2366), float32], Tensor[(13, ?, 2366), uint64], Tensor[(2366), float64]) {
  %484 = cast(meta[relay.Constant][18] /* ty=Tensor[(2366), float64] */, dtype="float64") /* ty=Tensor[(2366), float64] */;
  %485 = cast(%var_8015, dtype="int16") /* ty=Tensor[(105, 3), int16] */;
  %486 = reshape(%484, newshape=[13, 13, 14]) /* ty=Tensor[(13, 13, 14), float64] */;
  %487 = reshape(%485, newshape=[315]) /* ty=Tensor[(315), int16] */;
  %488 = @func_4783(%486, %487) /* ty=(Tensor[(13, 13, 14), bool], Tensor[(13, 1, 1), float64], Tensor[(13, 1, 1), float64], Tensor[(1, 10, 16), float32], Tensor[(315), int16]) */;
  %489 = cast(meta[relay.Constant][18] /* ty=Tensor[(2366), float64] */, dtype="float64") /* ty=Tensor[(2366), float64] */;
  %490 = acosh(%489) /* ty=Tensor[(2366), float64] */;
  %491 = cast(%490, dtype="float32") /* ty=Tensor[(2366), float32] */;
  %492 = @func_3205() /* ty=(Tensor[(13, ?, ?), float64], Tensor[(13, ?, ?), float64]) */;
  %493 = %492.1;
  %494 = cast(%490, dtype="uint64") /* ty=Tensor[(2366), uint64] */;
  %495 = cast(%493, dtype="uint64") /* ty=Tensor[(13, ?, ?), uint64] */;
  %496 = cast(meta[relay.Constant][18] /* ty=Tensor[(2366), float64] */, dtype="float64") /* ty=Tensor[(2366), float64] */;
  %497 = %488.4;
  %498 = cos(%491) /* ty=Tensor[(2366), float32] */;
  %499 = logical_xor(%494, %495) /* ty=Tensor[(13, ?, 2366), uint64] */;
  %500 = tan(%496) /* ty=Tensor[(2366), float64] */;
  (%497, %var_8015, %498, %499, %500)
}

def @func_1776() -> (Tensor[(13, 1, 1), float64], Tensor[(13, 1, 1), float64], Tensor[(13, 1, 1), float64], Tensor[(13, 1, 1), float64], Tensor[(416), float64]) {
  %501 = @func_659() /* ty=(Tensor[(13, 1, 1), float64],) */;
  %502 = @func_1468() /* ty=(Tensor[(13, ?, ?), float64], Tensor[(13, 1, 1), float64]) */;
  %503 = cast(meta[relay.Constant][19] /* ty=Tensor[(416), float64] */, dtype="float64") /* ty=Tensor[(416), float64] */;
  %504 = reshape(%503, newshape=[13, 8, 4]) /* ty=Tensor[(13, 8, 4), float64] */;
  %505 = @func_1080(%504) /* ty=(Tensor[(13, 8, 4), int16], Tensor[(13, 10, 16), uint8], Tensor[(13, 1, 1), float64], Tensor[(13, 1, 1), float64], Tensor[(13, 1, 1), float64], Tensor[(13, 1, 1), float64]) */;
  %506 = @func_1668() /* ty=Tensor[(13, 1, 1), float64] */;
  %507 = %501.0;
  %508 = %502.1;
  %509 = %505.4;
  (%506, %507, %508, %509, meta[relay.Constant][19] /* ty=Tensor[(416), float64] */)
}

def @func_12166() -> Tensor[(416), float64] {
  %510 = @func_9055() /* ty=(Tensor[(13, 1, 1), float32], Tensor[(416), float64]) */;
  %510.1
}

def @func_3905() -> Tensor[(13, 1, 1), float64] {
  %511 = @func_703() /* ty=(Tensor[(13, 1, 1), float64], Tensor[(13, 1, 1), float64], Tensor[(13, 1, 1), float64]) */;
  %511.2
}

def @func_7941() -> (Tensor[(13, ?, ?), float64], Tensor[(13, 10, 16), float64]) {
  %512 = @func_1196() /* ty=(Tensor[(13, ?, ?), float64],) */;
  %513 = @func_5916() /* ty=(Tensor[(13, 10, 16), float64],) */;
  %514 = %512.0;
  %515 = %513.0;
  (%514, %515)
}

def @func_5582() -> (Tensor[(1, 10, 16), float32],) {
  %516 = @func_1972() /* ty=Tensor[(1, 10, 16), float32] */;
  (%516,)
}

def @func_6415() -> Tensor[(13, 10, 16), float64] {
  %517 = @func_5916() /* ty=(Tensor[(13, 10, 16), float64],) */;
  %518 = %517.0;
  %519 = @func_1776() /* ty=(Tensor[(13, 1, 1), float64], Tensor[(13, 1, 1), float64], Tensor[(13, 1, 1), float64], Tensor[(13, 1, 1), float64], Tensor[(416), float64]) */;
  %520 = %519.3;
  %521 = cast(%518, dtype="float64") /* ty=Tensor[(13, 10, 16), float64] */;
  %522 = cast(%520, dtype="float64") /* ty=Tensor[(13, 1, 1), float64] */;
  floor_divide(%521, %522) /* ty=Tensor[(13, 10, 16), float64] */
}

def @func_9055() -> (Tensor[(13, 1, 1), float32], Tensor[(416), float64]) {
  %523 = @func_6311() /* ty=(Tensor[(13, 1, 1), float32], Tensor[(13, 1, 1), float64], Tensor[(1152), float32]) */;
  %524 = @func_1776() /* ty=(Tensor[(13, 1, 1), float64], Tensor[(13, 1, 1), float64], Tensor[(13, 1, 1), float64], Tensor[(13, 1, 1), float64], Tensor[(416), float64]) */;
  %525 = %523.0;
  %526 = %524.4;
  (%525, %526)
}

def @func_861() -> (Tensor[(13, 1, 1), float64], Tensor[(13, 1, 1), float64], Tensor[(13, 10, 16), bool], Tensor[(13, 10, 16), uint8], Tensor[(1, 10, 16), float32]) {
  %527 = @func_703() /* ty=(Tensor[(13, 1, 1), float64], Tensor[(13, 1, 1), float64], Tensor[(13, 1, 1), float64]) */;
  %528 = @func_643() /* ty=(Tensor[(13, 1, 1), float64], Tensor[(13, 1, 1), float64], Tensor[(13, 1, 1), float64]) */;
  %529 = @func_750() /* ty=Tensor[(1, 10, 16), float32] */;
  %530 = cast(%529, dtype="float64") /* ty=Tensor[(1, 10, 16), float64] */;
  %531 = acos(%530) /* ty=Tensor[(1, 10, 16), float64] */;
  %532 = cast(%531, dtype="float64") /* ty=Tensor[(1, 10, 16), float64] */;
  %533 = tan(%532) /* ty=Tensor[(1, 10, 16), float64] */;
  %534 = @func_585() /* ty=Tensor[(13, 1, 1), float64] */;
  %535 = cast(%533, dtype="bool") /* ty=Tensor[(1, 10, 16), bool] */;
  %536 = cast(%534, dtype="bool") /* ty=Tensor[(13, 1, 1), bool] */;
  %537 = cast(%531, dtype="uint8") /* ty=Tensor[(1, 10, 16), uint8] */;
  %538 = cast(%534, dtype="uint8") /* ty=Tensor[(13, 1, 1), uint8] */;
  %539 = %527.0;
  %540 = %528.0;
  %541 = logical_and(%535, %536) /* ty=Tensor[(13, 10, 16), bool] */;
  %542 = right_shift(%537, %538) /* ty=Tensor[(13, 10, 16), uint8] */;
  %543 = @func_750() /* ty=Tensor[(1, 10, 16), float32] */;
  (%539, %540, %541, %542, %543)
}

def @func_1729() -> (Tensor[(13, 1, 1), float64],) {
  %544 = @func_1499() /* ty=Tensor[(13, 1, 1), float64] */;
  (%544,)
}

def @func_8143() -> (Tensor[(1152), float32], Tensor[(14, 11, 6), float64], Tensor[(13, 1, 1), float64]) {
  %545 = @func_6311() /* ty=(Tensor[(13, 1, 1), float32], Tensor[(13, 1, 1), float64], Tensor[(1152), float32]) */;
  %546 = @func_6744() /* ty=(Tensor[(13, 1, 1), float64], Tensor[(14, 11, 6), float64]) */;
  %547 = %545.2;
  %548 = %546.1;
  %549 = @func_2300() /* ty=Tensor[(13, 1, 1), float64] */;
  (%547, %548, %549)
}

def @func_8340() -> Tensor[(9, 1, 13), float64] {
  %550 = @func_7486() /* ty=(Tensor[(9, 1, 13), float64],) */;
  %550.0
}

def @func_9711() -> Tensor[(13, 10, 16), float64] {
  %551 = @func_5916() /* ty=(Tensor[(13, 10, 16), float64],) */;
  %551.0
}

def @func_4099(%var_4070: Tensor[(936), float64]) -> (Tensor[(13, 11, 9), float64], Tensor[(13, 1, 1), float64], Tensor[(13, 1, 1), float64], Tensor[(13, 1, 1), float64], Tensor[(936), float64], Tensor[(13, 10, 16), float32], Tensor[(196), float64], Tensor[(13, 1, 1), float32]) {
  %552 = cast(meta[relay.Constant][20] /* ty=Tensor[(13, 11, 9), float64] */, dtype="float64") /* ty=Tensor[(13, 11, 9), float64] */;
  %553 = @func_2512() /* ty=(Tensor[(13, 1, 1), float64],) */;
  %554 = @func_3890() /* ty=(Tensor[(13, 1, 1), float64],) */;
  %555 = cast(%var_4070, dtype="float64") /* ty=Tensor[(936), float64] */;
  %556 = reshape(%555, newshape=[13, 8, 9]) /* ty=Tensor[(13, 8, 9), float64] */;
  %557 = @func_3335(%556) /* ty=(Tensor[(13, 8, 9), bool], Tensor[(13, ?, ?), float64], Tensor[(13, 1, 1), float64]) */;
  %558 = cast(meta[relay.Constant][21] /* ty=Tensor[(196), float64] */, dtype="float64") /* ty=Tensor[(196), float64] */;
  %559 = reshape(%558, newshape=[196]) /* ty=Tensor[(196), float64] */;
  %560 = @func_3833(%559) /* ty=(Tensor[(13, 1, 1), float64], Tensor[(13, 10, 16), float32], Tensor[(196), float64]) */;
  %561 = acosh(%552) /* ty=Tensor[(13, 11, 9), float64] */;
  %562 = %553.0;
  %563 = %554.0;
  %564 = %557.2;
  %565 = %560.1;
  %566 = @func_1370() /* ty=Tensor[(13, 1, 1), float32] */;
  (%561, %562, %563, %564, %var_4070, %565, meta[relay.Constant][21] /* ty=Tensor[(196), float64] */, %566)
}

def @func_7195() -> (Tensor[(1, 10, 16), float32],) {
  %567 = @func_5295() /* ty=Tensor[(1, 10, 16), float32] */;
  (%567,)
}

def @func_2819() -> (Tensor[(416), float64], Tensor[(416), float64], Tensor[(13, 1, 1), float64]) {
  %568 = @func_1776() /* ty=(Tensor[(13, 1, 1), float64], Tensor[(13, 1, 1), float64], Tensor[(13, 1, 1), float64], Tensor[(13, 1, 1), float64], Tensor[(416), float64]) */;
  %569 = @func_2575() /* ty=(Tensor[(13, 1, 1), float64], Tensor[(13, 1, 1), float64], Tensor[(416), float64], Tensor[(13, 1, 1), float64]) */;
  %570 = @func_1541() /* ty=(Tensor[(13, 1, 1), float64], Tensor[(13, ?, ?), float64]) */;
  %571 = %568.4;
  %572 = %569.2;
  %573 = %570.0;
  (%571, %572, %573)
}

def @func_6266() -> (Tensor[(13, 1, 1), float64], Tensor[(13, 1, 1), float64], Tensor[(13, 1, 1), float64]) {
  %574 = @func_2370() /* ty=(Tensor[(13, ?, ?), float64], Tensor[(13, 1, 1), float64]) */;
  %575 = @func_4205() /* ty=(Tensor[(13, 1, 1), float64],) */;
  %576 = %574.1;
  %577 = %575.0;
  %578 = @func_1668() /* ty=Tensor[(13, 1, 1), float64] */;
  (%576, %577, %578)
}

def @func_8076() -> (Tensor[(13, 1, 1), float64], Tensor[(13, 1, 1), float64]) {
  %579 = @func_6266() /* ty=(Tensor[(13, 1, 1), float64], Tensor[(13, 1, 1), float64], Tensor[(13, 1, 1), float64]) */;
  %580 = @func_6826() /* ty=(Tensor[(13, ?, ?), float64], Tensor[(13, 1, 1), float64]) */;
  %581 = %579.0;
  %582 = %580.1;
  (%581, %582)
}

def @func_5462() -> Tensor[(13, 1, 1), float64] {
  %583 = @func_643() /* ty=(Tensor[(13, 1, 1), float64], Tensor[(13, 1, 1), float64], Tensor[(13, 1, 1), float64]) */;
  %583.0
}

def @func_8394() -> Tensor[(416), float64] {
  %584 = @func_3247() /* ty=(Tensor[(13, 1, 1), float64], Tensor[(416), float64], Tensor[(13, ?, ?), float64]) */;
  %584.1
}

def @func_684() -> (Tensor[(13, 1, 1), float64], Tensor[(13, 1, 1), float64]) {
  %585 = @func_659() /* ty=(Tensor[(13, 1, 1), float64],) */;
  %586 = @func_659() /* ty=(Tensor[(13, 1, 1), float64],) */;
  %587 = %585.0;
  %588 = %586.0;
  (%587, %588)
}

def @func_12497() -> (Tensor[(13, 1, 16), float64],) {
  %589 = @func_7235() /* ty=(Tensor[(13, 1, 1), float64], Tensor[(13, 1, 1), float64], Tensor[(13, 1, 1), float64]) */;
  %590 = %589.0;
  %591 = cast(%590, dtype="float64") /* ty=Tensor[(13, 1, 1), float64] */;
  %592 = cast(meta[relay.Constant][22] /* ty=Tensor[(13, 1, 16), float64] */, dtype="float64") /* ty=Tensor[(13, 1, 16), float64] */;
  %593 = floor_divide(%591, %592) /* ty=Tensor[(13, 1, 16), float64] */;
  (%593,)
}

def @func_2657(%var_2631: Tensor[(5, 63), int16]) -> (Tensor[(13, 1, 1), float64], Tensor[(13, 10, 16), bool], Tensor[(5, 9, 7), int16], Tensor[(63), int16], Tensor[(5, 63), int16], Tensor[(13, 1, 1), float64]) {
  %594 = @func_1541() /* ty=(Tensor[(13, 1, 1), float64], Tensor[(13, ?, ?), float64]) */;
  %595 = @func_861() /* ty=(Tensor[(13, 1, 1), float64], Tensor[(13, 1, 1), float64], Tensor[(13, 10, 16), bool], Tensor[(13, 10, 16), uint8], Tensor[(1, 10, 16), float32]) */;
  %596 = cast(meta[relay.Constant][23] /* ty=Tensor[(63), int16] */, dtype="int16") /* ty=Tensor[(63), int16] */;
  %597 = cast(%var_2631, dtype="int16") /* ty=Tensor[(5, 63), int16] */;
  %598 = reshape(%596, newshape=[1, 9, 7]) /* ty=Tensor[(1, 9, 7), int16] */;
  %599 = reshape(%597, newshape=[5, 9, 7]) /* ty=Tensor[(5, 9, 7), int16] */;
  %600 = @func_1095(%598, %599) /* ty=(Tensor[(5, 9, 7), int16],) */;
  %601 = %594.0;
  %602 = %595.2;
  %603 = %600.0;
  %604 = @func_1499() /* ty=Tensor[(13, 1, 1), float64] */;
  (%601, %602, %603, meta[relay.Constant][23] /* ty=Tensor[(63), int16] */, %var_2631, %604)
}

def @func_13038() -> (Tensor[(13, 1, 63), uint8], Tensor[(13, 1, 63), uint16]) {
  %605 = @func_5275() /* ty=Tensor[(13, 1, 1), float64] */;
  %606 = @func_6657() /* ty=(Tensor[(13, ?, ?), bool], Tensor[(13, 11, 2), bool], Tensor[(63), float32]) */;
  %607 = %606.2;
  %608 = cast(%605, dtype="uint8") /* ty=Tensor[(13, 1, 1), uint8] */;
  %609 = cast(%607, dtype="uint8") /* ty=Tensor[(63), uint8] */;
  %610 = cast(%605, dtype="uint16") /* ty=Tensor[(13, 1, 1), uint16] */;
  %611 = cast(%607, dtype="uint16") /* ty=Tensor[(63), uint16] */;
  %612 = bitwise_and(%608, %609) /* ty=Tensor[(13, 1, 63), uint8] */;
  %613 = left_shift(%610, %611) /* ty=Tensor[(13, 1, 63), uint16] */;
  (%612, %613)
}

def @func_6621(%var_6616: Tensor[(3, 7, 3), float64], %var_6617: Tensor[(3, 7, 3), float64]) -> Tensor[(3, 7, 3), bool] {
  %614 = cast(%var_6617, dtype="bool") /* ty=Tensor[(3, 7, 3), bool] */;
  %615 = shape_of(%var_6616, dtype="int32") /* ty=Tensor[(3), int32] */;
  %616 = cast(%var_6616, dtype="bool") /* ty=Tensor[(3, 7, 3), bool] */;
  %617 = dyn.reshape(%614, %615, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  not_equal(%616, %617) /* ty=Tensor[(3, 7, 3), bool] */
}

def @func_9313() -> (Tensor[(13, 1, 1), float64], Tensor[(13, 1, 1), float64], Tensor[(7, 9), int16]) {
  %618 = @func_7332() /* ty=(Tensor[(13, 1, 1), float64],) */;
  %619 = @func_5166() /* ty=(Tensor[(315), int16], Tensor[(13, 1, 1), float64]) */;
  %620 = %618.0;
  %621 = %619.1;
  %622 = @func_8768() /* ty=Tensor[(7, 9), int16] */;
  (%620, %621, %622)
}

def @func_1468() -> (Tensor[(13, ?, ?), float64], Tensor[(13, 1, 1), float64]) {
  %623 = @func_1196() /* ty=(Tensor[(13, ?, ?), float64],) */;
  %624 = %623.0;
  %625 = @func_585() /* ty=Tensor[(13, 1, 1), float64] */;
  (%624, %625)
}

def @func_5791() -> (Tensor[(13, 1, 1), float64],) {
  %626 = @func_2300() /* ty=Tensor[(13, 1, 1), float64] */;
  (%626,)
}

def @func_4604() -> (Tensor[(13, 1, 1), float64],) {
  %627 = @func_3877() /* ty=Tensor[(13, 1, 1), float64] */;
  (%627,)
}

def @func_8561() -> (Tensor[(13, 1, 1), float64],) {
  %628 = @func_3217() /* ty=Tensor[(13, 1, 1), float64] */;
  (%628,)
}

def @func_3398() -> (Tensor[(13, 1, 1), float64],) {
  %629 = @func_2985() /* ty=(Tensor[(13, 1, 1), float64],) */;
  %630 = %629.0;
  (%630,)
}

def @func_4829(%var_4822: Tensor[(1, 3, 16), uint64]) -> (Tensor[(6, 3, 16), uint64],) {
  %631 = cast(%var_4822, dtype="uint64") /* ty=Tensor[(1, 3, 16), uint64] */;
  %632 = cast(meta[relay.Constant][24] /* ty=Tensor[(6, 3, 16), uint64] */, dtype="uint64") /* ty=Tensor[(6, 3, 16), uint64] */;
  %633 = maximum(%631, %632) /* ty=Tensor[(6, 3, 16), uint64] */;
  (%633,)
}

def @func_1924(%var_1919: Tensor[(63), int16]) -> (Tensor[(13, 1, 1), float64], Tensor[(13, 10, 16), uint8], Tensor[(5, 9, 7), int16], Tensor[(63), int16], Tensor[(315), int16]) {
  %634 = @func_861() /* ty=(Tensor[(13, 1, 1), float64], Tensor[(13, 1, 1), float64], Tensor[(13, 10, 16), bool], Tensor[(13, 10, 16), uint8], Tensor[(1, 10, 16), float32]) */;
  %635 = cast(%var_1919, dtype="int16") /* ty=Tensor[(63), int16] */;
  %636 = cast(meta[relay.Constant][25] /* ty=Tensor[(315), int16] */, dtype="int16") /* ty=Tensor[(315), int16] */;
  %637 = reshape(%635, newshape=[1, 9, 7]) /* ty=Tensor[(1, 9, 7), int16] */;
  %638 = reshape(%636, newshape=[5, 9, 7]) /* ty=Tensor[(5, 9, 7), int16] */;
  %639 = @func_1095(%637, %638) /* ty=(Tensor[(5, 9, 7), int16],) */;
  %640 = @func_1340() /* ty=Tensor[(13, 1, 1), float64] */;
  %641 = %634.3;
  %642 = %639.0;
  (%640, %641, %642, %var_1919, meta[relay.Constant][25] /* ty=Tensor[(315), int16] */)
}

def @func_7391() -> (Tensor[(13, 1, 1), float64], Tensor[(315), int16]) {
  %643 = @func_7332() /* ty=(Tensor[(13, 1, 1), float64],) */;
  %644 = @func_5166() /* ty=(Tensor[(315), int16], Tensor[(13, 1, 1), float64]) */;
  %645 = %643.0;
  %646 = %644.0;
  (%645, %646)
}

def @func_6744() -> (Tensor[(13, 1, 1), float64], Tensor[(14, 11, 6), float64]) {
  %647 = @func_6150() /* ty=(Tensor[(13, 1, 1), float64],) */;
  %648 = @func_3634() /* ty=(Tensor[(14, 11, 6), float64],) */;
  %649 = %647.0;
  %650 = %648.0;
  (%649, %650)
}

def @func_11569() -> (Tensor[(13, ?, ?), float64],) {
  %651 = @func_3205() /* ty=(Tensor[(13, ?, ?), float64], Tensor[(13, ?, ?), float64]) */;
  %652 = %651.1;
  (%652,)
}

def @func_12447(%var_12428: Tensor[(9, 10, 15), float32]) -> (Tensor[(9, 10, 15), float32], Tensor[(13, ?, ?), float64]) {
  %653 = cast(%var_12428, dtype="float32") /* ty=Tensor[(9, 10, 15), float32] */;
  %654 = @func_12053() /* ty=(Tensor[(13, 1, 1), float64], Tensor[(13, 1, 1), float64], Tensor[(13, ?, ?), float64], Tensor[(13, 1, 1), float64], Tensor[(1, 10, 16), float32]) */;
  %655 = log10(%653) /* ty=Tensor[(9, 10, 15), float32] */;
  %656 = %654.2;
  (%655, %656)
}

def @func_8102() -> Tensor[(13, ?, ?), float64] {
  %657 = @func_1468() /* ty=(Tensor[(13, ?, ?), float64], Tensor[(13, 1, 1), float64]) */;
  %657.0
}

def @func_964() -> (Tensor[(13, 1, 1), float64],) {
  %658 = @func_703() /* ty=(Tensor[(13, 1, 1), float64], Tensor[(13, 1, 1), float64], Tensor[(13, 1, 1), float64]) */;
  %659 = %658.1;
  (%659,)
}

def @func_703() -> (Tensor[(13, 1, 1), float64], Tensor[(13, 1, 1), float64], Tensor[(13, 1, 1), float64]) {
  %660 = @func_659() /* ty=(Tensor[(13, 1, 1), float64],) */;
  %661 = @func_684() /* ty=(Tensor[(13, 1, 1), float64], Tensor[(13, 1, 1), float64]) */;
  %662 = @func_585() /* ty=Tensor[(13, 1, 1), float64] */;
  %663 = %660.0;
  %664 = %661.1;
  (%662, %663, %664)
}

def @func_11753(%var_11710: Tensor[(48), uint64], %var_11713: Tensor[(504), int8]) -> (Tensor[(13, 1, 1), float64], Tensor[(13, 8, 14), bool], Tensor[(13, 2, ?), float32], Tensor[(13, 1, 1), float64], Tensor[(13, 5, 13), uint32], Tensor[(13, 8, 14), float64], Tensor[(13, 1, 1), float64], Tensor[(13, 1, 1), float64], Tensor[(13, 1, 1), float64], Tensor[(13, 8, 14), float32], Tensor[(6, 3, 16), uint64], Tensor[(48), uint64], Tensor[(12, 7, 6), bool], Tensor[(504), int8], Tensor[(14, 11, 6), float64]) {
  %665 = cast(meta[relay.Constant][26] /* ty=Tensor[(2, 1), int8] */, dtype="int8") /* ty=Tensor[(2, 1), int8] */;
  %666 = reshape(%665, newshape=[1, 2, 1]) /* ty=Tensor[(1, 2, 1), int8] */;
  %667 = @func_8866(%666) /* ty=(Tensor[(15, 2, 6), uint64], Tensor[(1, 2, 63), float64], Tensor[(13, 1, 1), float64]) */;
  %668 = @func_7442() /* ty=(Tensor[(1, 10, 16), float32], Tensor[(13, 1, 1), float64], Tensor[(13, 1, 1), float64], Tensor[(13, 1, 1), float64]) */;
  %669 = %668.3;
  %670 = cast(%669, dtype="bool") /* ty=Tensor[(13, 1, 1), bool] */;
  %671 = cast(meta[relay.Constant][27] /* ty=Tensor[(13, 8, 14), float64] */, dtype="bool") /* ty=Tensor[(13, 8, 14), bool] */;
  %672 = @func_6636() /* ty=Tensor[(13, ?, ?), float64] */;
  %673 = cast(%672, dtype="float32") /* ty=Tensor[(13, ?, ?), float32] */;
  %674 = cast(meta[relay.Constant][26] /* ty=Tensor[(2, 1), int8] */, dtype="float32") /* ty=Tensor[(2, 1), float32] */;
  %675 = @func_5489() /* ty=(Tensor[(13, 5, 13), uint32], Tensor[(13, 1, 1), float64]) */;
  %676 = cast(meta[relay.Constant][27] /* ty=Tensor[(13, 8, 14), float64] */, dtype="float64") /* ty=Tensor[(13, 8, 14), float64] */;
  %677 = cast(%672, dtype="float64") /* ty=Tensor[(13, ?, ?), float64] */;
  %678 = @func_3247() /* ty=(Tensor[(13, 1, 1), float64], Tensor[(416), float64], Tensor[(13, ?, ?), float64]) */;
  %679 = @func_7807() /* ty=(Tensor[(13, 1, 1), float64],) */;
  %680 = @func_2012() /* ty=(Tensor[(13, 1, 1), float64], Tensor[(13, 1, 1), float64], Tensor[(13, 1, 1), float64]) */;
  %681 = cast(meta[relay.Constant][27] /* ty=Tensor[(13, 8, 14), float64] */, dtype="float32") /* ty=Tensor[(13, 8, 14), float32] */;
  %682 = cast(%var_11710, dtype="uint64") /* ty=Tensor[(48), uint64] */;
  %683 = reshape(%682, newshape=[1, 3, 16]) /* ty=Tensor[(1, 3, 16), uint64] */;
  %684 = @func_4829(%683) /* ty=(Tensor[(6, 3, 16), uint64],) */;
  %685 = cast(%var_11713, dtype="int8") /* ty=Tensor[(504), int8] */;
  %686 = cast(%var_11713, dtype="int8") /* ty=Tensor[(504), int8] */;
  %687 = reshape(%685, newshape=[12, 7, 6]) /* ty=Tensor[(12, 7, 6), int8] */;
  %688 = reshape(%686, newshape=[12, 7, 6]) /* ty=Tensor[(12, 7, 6), int8] */;
  %689 = @func_10111(%687, %688) /* ty=(Tensor[(12, 7, 6), bool],) */;
  %690 = %667.2;
  %691 = greater_equal(%670, %671) /* ty=Tensor[(13, 8, 14), bool] */;
  %692 = floor_divide(%673, %674) /* ty=Tensor[(13, 2, ?), float32] */;
  %693 = @func_7668() /* ty=Tensor[(13, 1, 1), float64] */;
  %694 = %675.0;
  %695 = floor_divide(%676, %677) /* ty=Tensor[(13, 8, 14), float64] */;
  %696 = %678.0;
  %697 = %679.0;
  %698 = %680.1;
  %699 = sqrt(%681) /* ty=Tensor[(13, 8, 14), float32] */;
  %700 = %684.0;
  %701 = %689.0;
  %702 = @func_9163() /* ty=Tensor[(14, 11, 6), float64] */;
  (%690, %691, %692, %693, %694, %695, %696, %697, %698, %699, %700, %var_11710, %701, %var_11713, %702)
}

def @func_7668() -> Tensor[(13, 1, 1), float64] {
  @func_1340() /* ty=Tensor[(13, 1, 1), float64] */
}

def @func_5831(%var_5827: Tensor[(936), float64]) -> (Tensor[(416), float64], Tensor[(13, 1, 1), float64], Tensor[(936), float64]) {
  %703 = @func_2575() /* ty=(Tensor[(13, 1, 1), float64], Tensor[(13, 1, 1), float64], Tensor[(416), float64], Tensor[(13, 1, 1), float64]) */;
  %704 = cast(%var_5827, dtype="float64") /* ty=Tensor[(936), float64] */;
  %705 = reshape(%704, newshape=[936]) /* ty=Tensor[(936), float64] */;
  %706 = @func_4099(%705) /* ty=(Tensor[(13, 11, 9), float64], Tensor[(13, 1, 1), float64], Tensor[(13, 1, 1), float64], Tensor[(13, 1, 1), float64], Tensor[(936), float64], Tensor[(13, 10, 16), float32], Tensor[(196), float64], Tensor[(13, 1, 1), float32]) */;
  %707 = %703.2;
  %708 = %706.3;
  (%707, %708, %var_5827)
}

def @func_5895() -> (Tensor[(13, 11, 2), bool], Tensor[(13, 5, 13), float64], Tensor[(13, ?, ?), uint32]) {
  %709 = @func_3812() /* ty=Tensor[(13, 1, 1), float64] */;
  %710 = cast(%709, dtype="bool") /* ty=Tensor[(13, 1, 1), bool] */;
  %711 = cast(meta[relay.Constant][28] /* ty=Tensor[(13, 11, 2), float64] */, dtype="bool") /* ty=Tensor[(13, 11, 2), bool] */;
  %712 = @func_3967() /* ty=(Tensor[(13, 5, 13), uint32], Tensor[(13, 5, 13), float64], Tensor[(13, 1, 1), float64]) */;
  %713 = logical_and(%710, %711) /* ty=Tensor[(13, 11, 2), bool] */;
  %714 = %712.1;
  %715 = @func_2728() /* ty=Tensor[(13, ?, ?), uint32] */;
  (%713, %714, %715)
}

def @func_9624() -> (Tensor[(13, ?, ?), uint32],) {
  %716 = @func_7010() /* ty=Tensor[(13, ?, ?), uint32] */;
  (%716,)
}

def @main() -> (Tensor[(13, ?, ?), uint32],) {
  %717 = @func_13105() /* ty=Tensor[(13, 1, 1), float64] */;
  %718 = @func_2230() /* ty=(Tensor[(13, 1, 1), float64], Tensor[(13, 1, 1), float64], Tensor[(13, 1, 1), float64]) */;
  %719 = %718.2;
  %720 = cast(%719, dtype="uint32") /* ty=Tensor[(13, 1, 1), uint32] */;
  %721 = shape_of(%717, dtype="int32") /* ty=Tensor[(3), int32] */;
  %722 = cast(%717, dtype="uint32") /* ty=Tensor[(13, 1, 1), uint32] */;
  %723 = dyn.reshape(%720, %721, newshape=[]) /* ty=Tensor[(?, ?, ?), uint32] */;
  %724 = bitwise_xor(%722, %723) /* ty=Tensor[(13, ?, ?), uint32] */;
  (%724,)
}

def @func_2728() -> Tensor[(13, ?, ?), uint32] {
  %725 = @func_1144() /* ty=(Tensor[(13, 1, 1), float64], Tensor[(1, 10, 16), float32]) */;
  %726 = %725.0;
  %727 = @func_732() /* ty=(Tensor[(13, 1, 1), float64],) */;
  %728 = %727.0;
  %729 = cast(%728, dtype="uint32") /* ty=Tensor[(13, 1, 1), uint32] */;
  %730 = shape_of(%726, dtype="int32") /* ty=Tensor[(3), int32] */;
  %731 = cast(%726, dtype="uint32") /* ty=Tensor[(13, 1, 1), uint32] */;
  %732 = dyn.reshape(%729, %730, newshape=[]) /* ty=Tensor[(?, ?, ?), uint32] */;
  logical_xor(%731, %732) /* ty=Tensor[(13, ?, ?), uint32] */
}

def @func_10977(%var_10894: Tensor[(2, 11, 12), int32], %var_10895: Tensor[(2, 11, 12), int32], %var_10928: Tensor[(1152), float32], %var_10939: Tensor[(1920), float32]) -> (Tensor[(2, 11, 12), bool], Tensor[(1, 2, 63), float64], Tensor[(2), int8], Tensor[(13, 1, 1), float64], Tensor[(192), float32], Tensor[(13, 1, 1), float64], Tensor[(1152), float32], Tensor[(13, 1, 1), float64], Tensor[(12, 10, 16), float64], Tensor[(1920), float32], Tensor[(13, 1, 1), float64], Tensor[(13, 1, 1), float64]) {
  %733 = cast(%var_10895, dtype="bool") /* ty=Tensor[(2, 11, 12), bool] */;
  %734 = shape_of(%var_10894, dtype="int32") /* ty=Tensor[(3), int32] */;
  %735 = cast(%var_10894, dtype="bool") /* ty=Tensor[(2, 11, 12), bool] */;
  %736 = dyn.reshape(%733, %734, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %737 = cast(meta[relay.Constant][29] /* ty=Tensor[(2), int8] */, dtype="int8") /* ty=Tensor[(2), int8] */;
  %738 = reshape(%737, newshape=[1, 2, 1]) /* ty=Tensor[(1, 2, 1), int8] */;
  %739 = @func_8866(%738) /* ty=(Tensor[(15, 2, 6), uint64], Tensor[(1, 2, 63), float64], Tensor[(13, 1, 1), float64]) */;
  %740 = cast(meta[relay.Constant][30] /* ty=Tensor[(192), float32] */, dtype="float32") /* ty=Tensor[(192), float32] */;
  %741 = reshape(%740, newshape=[192]) /* ty=Tensor[(192), float32] */;
  %742 = @func_8622(%741) /* ty=(Tensor[(13, ?, ?), float64], Tensor[(12, 8, 2), float32], Tensor[(192), float32], Tensor[(13, 1, 1), float64], Tensor[(936), float64]) */;
  %743 = cast(%var_10928, dtype="float32") /* ty=Tensor[(1152), float32] */;
  %744 = reshape(%743, newshape=[16, 8, 9]) /* ty=Tensor[(16, 8, 9), float32] */;
  %745 = @func_5013(%744) /* ty=(Tensor[(16, 8, 9), bool], Tensor[(13, 1, 1), float64]) */;
  %746 = @func_1804() /* ty=(Tensor[(13, 1, 1), float64],) */;
  %747 = cast(%var_10939, dtype="float32") /* ty=Tensor[(1920), float32] */;
  %748 = reshape(%747, newshape=[12, 10, 16]) /* ty=Tensor[(12, 10, 16), float32] */;
  %749 = @func_9352(%748) /* ty=(Tensor[(12, 10, 16), float64],) */;
  %750 = @func_5791() /* ty=(Tensor[(13, 1, 1), float64],) */;
  %751 = greater_equal(%735, %736) /* ty=Tensor[(2, 11, 12), bool] */;
  %752 = %739.1;
  %753 = %742.3;
  %754 = %745.1;
  %755 = %746.0;
  %756 = %749.0;
  %757 = @func_6805() /* ty=Tensor[(13, 1, 1), float64] */;
  %758 = %750.0;
  (%751, %752, meta[relay.Constant][29] /* ty=Tensor[(2), int8] */, %753, meta[relay.Constant][30] /* ty=Tensor[(192), float32] */, %754, %var_10928, %755, %756, %var_10939, %757, %758)
}

def @func_11074() -> (Tensor[(5, 5, 4), float32], Tensor[(5, 5, 4), float64]) {
  %759 = cast(meta[relay.Constant][31] /* ty=Tensor[(5, 5, 4), float32] */, dtype="float32") /* ty=Tensor[(5, 5, 4), float32] */;
  %760 = cast(meta[relay.Constant][32] /* ty=Tensor[(5, 5, 4), float32] */, dtype="float64") /* ty=Tensor[(5, 5, 4), float64] */;
  %761 = shape_of(meta[relay.Constant][31] /* ty=Tensor[(5, 5, 4), float32] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %762 = cast(meta[relay.Constant][31] /* ty=Tensor[(5, 5, 4), float32] */, dtype="float64") /* ty=Tensor[(5, 5, 4), float64] */;
  %763 = dyn.reshape(%760, %761, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %764 = cosh(%759) /* ty=Tensor[(5, 5, 4), float32] */;
  %765 = power(%762, %763) /* ty=Tensor[(5, 5, 4), float64] */;
  (%764, %765)
}

def @func_12871() -> (Tensor[(13, ?, ?), uint32], Tensor[(13, 1, 1), float64], Tensor[(13, 10, 16), float64]) {
  %766 = @func_7807() /* ty=(Tensor[(13, 1, 1), float64],) */;
  %767 = @func_11154() /* ty=(Tensor[(13, 10, 16), float64],) */;
  %768 = @func_2728() /* ty=Tensor[(13, ?, ?), uint32] */;
  %769 = %766.0;
  %770 = %767.0;
  (%768, %769, %770)
}

def @func_6784() -> Tensor[(13, 1, 1), float64] {
  %771 = @func_3398() /* ty=(Tensor[(13, 1, 1), float64],) */;
  %771.0
}

def @func_2081(%var_2022: Tensor[(7, 2, 12), float64], %var_2038: Tensor[(315, 1), int16]) -> (Tensor[(7, 2, 12), float64], Tensor[(13, 1, 1), float64], Tensor[(13, 10, 16), bool], Tensor[(13, 315, ?), int16]) {
  %772 = cast(%var_2022, dtype="float64") /* ty=Tensor[(7, 2, 12), float64] */;
  %773 = @func_861() /* ty=(Tensor[(13, 1, 1), float64], Tensor[(13, 1, 1), float64], Tensor[(13, 10, 16), bool], Tensor[(13, 10, 16), uint8], Tensor[(1, 10, 16), float32]) */;
  %774 = @func_643() /* ty=(Tensor[(13, 1, 1), float64], Tensor[(13, 1, 1), float64], Tensor[(13, 1, 1), float64]) */;
  %775 = %774.1;
  %776 = cast(%var_2038, dtype="int16") /* ty=Tensor[(315, 1), int16] */;
  %777 = reshape(%776, newshape=[315]) /* ty=Tensor[(315), int16] */;
  %778 = @func_1649(%777) /* ty=(Tensor[(13, 10, 16), uint8], Tensor[(13, ?, ?), float64], Tensor[(13, ?, ?), float64], Tensor[(1, 10, 16), float32], Tensor[(5, 9, 7), int16], Tensor[(63), int16], Tensor[(315), int16], Tensor[(13, ?, ?), float64], Tensor[(13, 1, 1), float64]) */;
  %779 = %778.2;
  %780 = cast(%779, dtype="float64") /* ty=Tensor[(13, ?, ?), float64] */;
  %781 = shape_of(%775, dtype="int32") /* ty=Tensor[(3), int32] */;
  %782 = cast(%775, dtype="float64") /* ty=Tensor[(13, 1, 1), float64] */;
  %783 = dyn.reshape(%780, %781, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %784 = floor_mod(%782, %783) /* ty=Tensor[(13, ?, ?), float64] */;
  %785 = cast(%784, dtype="int16") /* ty=Tensor[(13, ?, ?), int16] */;
  %786 = cast(%var_2038, dtype="int16") /* ty=Tensor[(315, 1), int16] */;
  %787 = cos(%772) /* ty=Tensor[(7, 2, 12), float64] */;
  %788 = @func_1499() /* ty=Tensor[(13, 1, 1), float64] */;
  %789 = %773.2;
  %790 = subtract(%785, %786) /* ty=Tensor[(13, 315, ?), int16] */;
  (%787, %788, %789, %790)
}

def @func_12343(%var_12296: Tensor[(4, 7, 10), uint32]) -> (Tensor[(13, 1, 1), float64], Tensor[(5, 5, 4), float64], Tensor[(13, 1, 1), float64], Tensor[(4, 7, 10), uint64], Tensor[(13, 10, 16), float64]) {
  %791 = @func_11074() /* ty=(Tensor[(5, 5, 4), float32], Tensor[(5, 5, 4), float64]) */;
  %792 = @func_2320() /* ty=(Tensor[(13, 1, 1), float64], Tensor[(13, 1, 1), float64]) */;
  %793 = cast(meta[relay.Constant][33] /* ty=Tensor[(4, 7, 10), uint32] */, dtype="bool") /* ty=Tensor[(4, 7, 10), bool] */;
  %794 = shape_of(%var_12296, dtype="int32") /* ty=Tensor[(3), int32] */;
  %795 = cast(%var_12296, dtype="bool") /* ty=Tensor[(4, 7, 10), bool] */;
  %796 = dyn.reshape(%793, %794, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %797 = less(%795, %796) /* ty=Tensor[(4, 7, 10), bool] */;
  %798 = cast(%797, dtype="float64") /* ty=Tensor[(4, 7, 10), float64] */;
  %799 = erf(%798) /* ty=Tensor[(4, 7, 10), float64] */;
  %800 = cast(meta[relay.Constant][33] /* ty=Tensor[(4, 7, 10), uint32] */, dtype="uint64") /* ty=Tensor[(4, 7, 10), uint64] */;
  %801 = shape_of(%799, dtype="int32") /* ty=Tensor[(3), int32] */;
  %802 = cast(%799, dtype="uint64") /* ty=Tensor[(4, 7, 10), uint64] */;
  %803 = dyn.reshape(%800, %801, newshape=[]) /* ty=Tensor[(?, ?, ?), uint64] */;
  %804 = @func_3812() /* ty=Tensor[(13, 1, 1), float64] */;
  %805 = %791.1;
  %806 = %792.0;
  %807 = bitwise_xor(%802, %803) /* ty=Tensor[(4, 7, 10), uint64] */;
  %808 = @func_9711() /* ty=Tensor[(13, 10, 16), float64] */;
  (%804, %805, %806, %807, %808)
}

def @func_10756() -> (Tensor[(13, 1, 1), float64],) {
  %809 = @func_5989() /* ty=Tensor[(13, 1, 1), float64] */;
  (%809,)
}

def @func_5435(%var_5418: Tensor[(39, 6), float64]) -> (Tensor[(13, 1, 1), float64], Tensor[(13, 1, 1), float64], Tensor[(13, 39, 6), bool]) {
  %810 = @func_2575() /* ty=(Tensor[(13, 1, 1), float64], Tensor[(13, 1, 1), float64], Tensor[(416), float64], Tensor[(13, 1, 1), float64]) */;
  %811 = cast(%var_5418, dtype="float64") /* ty=Tensor[(39, 6), float64] */;
  %812 = reshape(%811, newshape=[13, 2, 9]) /* ty=Tensor[(13, 2, 9), float64] */;
  %813 = @func_5143(%812) /* ty=(Tensor[(13, 2, 9), int32], Tensor[(13, 1, 1), float64]) */;
  %814 = @func_643() /* ty=(Tensor[(13, 1, 1), float64], Tensor[(13, 1, 1), float64], Tensor[(13, 1, 1), float64]) */;
  %815 = %814.0;
  %816 = cast(%var_5418, dtype="bool") /* ty=Tensor[(39, 6), bool] */;
  %817 = cast(%815, dtype="bool") /* ty=Tensor[(13, 1, 1), bool] */;
  %818 = %810.0;
  %819 = %813.1;
  %820 = logical_or(%816, %817) /* ty=Tensor[(13, 39, 6), bool] */;
  (%818, %819, %820)
}

def @func_750() -> Tensor[(1, 10, 16), float32] {
  %821 = cast(meta[relay.Constant][34] /* ty=Tensor[(1, 10, 16), float32] */, dtype="float32") /* ty=Tensor[(1, 10, 16), float32] */;
  sinh(%821) /* ty=Tensor[(1, 10, 16), float32] */
}

def @func_3247() -> (Tensor[(13, 1, 1), float64], Tensor[(416), float64], Tensor[(13, ?, ?), float64]) {
  %822 = @func_1144() /* ty=(Tensor[(13, 1, 1), float64], Tensor[(1, 10, 16), float32]) */;
  %823 = @func_2575() /* ty=(Tensor[(13, 1, 1), float64], Tensor[(13, 1, 1), float64], Tensor[(416), float64], Tensor[(13, 1, 1), float64]) */;
  %824 = @func_3205() /* ty=(Tensor[(13, ?, ?), float64], Tensor[(13, ?, ?), float64]) */;
  %825 = %822.0;
  %826 = %823.2;
  %827 = %824.1;
  (%825, %826, %827)
}

def @func_12919(%var_12914: Tensor[(504, 1), int8]) -> (Tensor[(13, 1, 1), float64], Tensor[(5, 5, 4), float32], Tensor[(13, 1, 1), float64], Tensor[(12, 7, 6), bool], Tensor[(504, 1), int8]) {
  %828 = @func_11074() /* ty=(Tensor[(5, 5, 4), float32], Tensor[(5, 5, 4), float64]) */;
  %829 = %828.1;
  %830 = cast(%829, dtype="float32") /* ty=Tensor[(5, 5, 4), float32] */;
  %831 = @func_1541() /* ty=(Tensor[(13, 1, 1), float64], Tensor[(13, ?, ?), float64]) */;
  %832 = cast(%var_12914, dtype="int8") /* ty=Tensor[(504, 1), int8] */;
  %833 = cast(%var_12914, dtype="int8") /* ty=Tensor[(504, 1), int8] */;
  %834 = reshape(%832, newshape=[12, 7, 6]) /* ty=Tensor[(12, 7, 6), int8] */;
  %835 = reshape(%833, newshape=[12, 7, 6]) /* ty=Tensor[(12, 7, 6), int8] */;
  %836 = @func_10111(%834, %835) /* ty=(Tensor[(12, 7, 6), bool],) */;
  %837 = @func_5462() /* ty=Tensor[(13, 1, 1), float64] */;
  %838 = sinh(%830) /* ty=Tensor[(5, 5, 4), float32] */;
  %839 = %831.0;
  %840 = %836.0;
  (%837, %838, %839, %840, %var_12914)
}

def @func_9453(%var_9443: Tensor[(15, 11, 3), float64]) -> Tensor[(15, 11, 3), float64] {
  %841 = cast(%var_9443, dtype="float64") /* ty=Tensor[(15, 11, 3), float64] */;
  exp(%841) /* ty=Tensor[(15, 11, 3), float64] */
}

def @func_12053() -> (Tensor[(13, 1, 1), float64], Tensor[(13, 1, 1), float64], Tensor[(13, ?, ?), float64], Tensor[(13, 1, 1), float64], Tensor[(1, 10, 16), float32]) {
  %842 = @func_10756() /* ty=(Tensor[(13, 1, 1), float64],) */;
  %843 = @func_7442() /* ty=(Tensor[(1, 10, 16), float32], Tensor[(13, 1, 1), float64], Tensor[(13, 1, 1), float64], Tensor[(13, 1, 1), float64]) */;
  %844 = @func_9883() /* ty=(Tensor[(13, ?, ?), float64],) */;
  %845 = @func_5582() /* ty=(Tensor[(1, 10, 16), float32],) */;
  %846 = %842.0;
  %847 = %843.2;
  %848 = %844.0;
  %849 = @func_1340() /* ty=Tensor[(13, 1, 1), float64] */;
  %850 = %845.0;
  (%846, %847, %848, %849, %850)
}

def @func_4205() -> (Tensor[(13, 1, 1), float64],) {
  %851 = @func_1729() /* ty=(Tensor[(13, 1, 1), float64],) */;
  %852 = %851.0;
  (%852,)
}

def @func_8273() -> Tensor[(13, 1, 1), float64] {
  %853 = @func_7235() /* ty=(Tensor[(13, 1, 1), float64], Tensor[(13, 1, 1), float64], Tensor[(13, 1, 1), float64]) */;
  %853.1
}

def @func_13167() -> (Tensor[(13, 1, 1), float64], Tensor[(13, 1, 1), float64]) {
  %854 = @func_732() /* ty=(Tensor[(13, 1, 1), float64],) */;
  %855 = @func_2819() /* ty=(Tensor[(416), float64], Tensor[(416), float64], Tensor[(13, 1, 1), float64]) */;
  %856 = %854.0;
  %857 = %855.2;
  (%856, %857)
}

def @func_3877() -> Tensor[(13, 1, 1), float64] {
  %858 = @func_1776() /* ty=(Tensor[(13, 1, 1), float64], Tensor[(13, 1, 1), float64], Tensor[(13, 1, 1), float64], Tensor[(13, 1, 1), float64], Tensor[(416), float64]) */;
  %858.3
}

def @func_4783(%var_4730: Tensor[(13, 13, 14), float64], %var_4767: Tensor[(315), int16]) -> (Tensor[(13, 13, 14), bool], Tensor[(13, 1, 1), float64], Tensor[(13, 1, 1), float64], Tensor[(1, 10, 16), float32], Tensor[(315), int16]) {
  %859 = @func_2230() /* ty=(Tensor[(13, 1, 1), float64], Tensor[(13, 1, 1), float64], Tensor[(13, 1, 1), float64]) */;
  %860 = %859.2;
  %861 = cast(%860, dtype="bool") /* ty=Tensor[(13, 1, 1), bool] */;
  %862 = cast(%var_4730, dtype="bool") /* ty=Tensor[(13, 13, 14), bool] */;
  %863 = cast(%860, dtype="float64") /* ty=Tensor[(13, 1, 1), float64] */;
  %864 = @func_2819() /* ty=(Tensor[(416), float64], Tensor[(416), float64], Tensor[(13, 1, 1), float64]) */;
  %865 = cast(%var_4767, dtype="int16") /* ty=Tensor[(315), int16] */;
  %866 = reshape(%865, newshape=[315]) /* ty=Tensor[(315), int16] */;
  %867 = @func_1649(%866) /* ty=(Tensor[(13, 10, 16), uint8], Tensor[(13, ?, ?), float64], Tensor[(13, ?, ?), float64], Tensor[(1, 10, 16), float32], Tensor[(5, 9, 7), int16], Tensor[(63), int16], Tensor[(315), int16], Tensor[(13, ?, ?), float64], Tensor[(13, 1, 1), float64]) */;
  %868 = logical_or(%861, %862) /* ty=Tensor[(13, 13, 14), bool] */;
  %869 = cosh(%863) /* ty=Tensor[(13, 1, 1), float64] */;
  %870 = %864.2;
  %871 = %867.3;
  (%868, %869, %870, %871, %var_4767)
}

def @func_7864() -> Tensor[(13, ?, ?), float64] {
  %872 = @func_1541() /* ty=(Tensor[(13, 1, 1), float64], Tensor[(13, ?, ?), float64]) */;
  %872.1
}

def @func_5166() -> (Tensor[(315), int16], Tensor[(13, 1, 1), float64]) {
  %873 = @func_4425() /* ty=(Tensor[(416), float64], Tensor[(63), int16], Tensor[(315), int16]) */;
  %874 = @func_1776() /* ty=(Tensor[(13, 1, 1), float64], Tensor[(13, 1, 1), float64], Tensor[(13, 1, 1), float64], Tensor[(13, 1, 1), float64], Tensor[(416), float64]) */;
  %875 = %873.2;
  %876 = %874.0;
  (%875, %876)
}

def @func_3833(%var_3830: Tensor[(196), float64]) -> (Tensor[(13, 1, 1), float64], Tensor[(13, 10, 16), float32], Tensor[(196), float64]) {
  %877 = @func_3427() /* ty=(Tensor[(13, 1, 1), float64], Tensor[(13, 1, 1), float64]) */;
  %878 = cast(%var_3830, dtype="float64") /* ty=Tensor[(196), float64] */;
  %879 = reshape(%878, newshape=[14, 14, 1]) /* ty=Tensor[(14, 14, 1), float64] */;
  %880 = @func_3719(%879) /* ty=(Tensor[(14, 14, 1), float64], Tensor[(13, 10, 16), float32]) */;
  %881 = %877.1;
  %882 = %880.1;
  (%881, %882, %var_3830)
}

def @func_4275() -> (Tensor[(13, ?, ?), float64], Tensor[(13, 1, 1), float64], Tensor[(196), float64]) {
  %883 = @func_3205() /* ty=(Tensor[(13, ?, ?), float64], Tensor[(13, ?, ?), float64]) */;
  %884 = cast(meta[relay.Constant][35] /* ty=Tensor[(196), float64] */, dtype="float64") /* ty=Tensor[(196), float64] */;
  %885 = reshape(%884, newshape=[196]) /* ty=Tensor[(196), float64] */;
  %886 = @func_3833(%885) /* ty=(Tensor[(13, 1, 1), float64], Tensor[(13, 10, 16), float32], Tensor[(196), float64]) */;
  %887 = %883.0;
  %888 = %886.0;
  (%887, %888, meta[relay.Constant][35] /* ty=Tensor[(196), float64] */)
}

def @func_7010() -> Tensor[(13, ?, ?), uint32] {
  @func_2728() /* ty=Tensor[(13, ?, ?), uint32] */
}

def @func_1649(%var_1616: Tensor[(315), int16]) -> (Tensor[(13, 10, 16), uint8], Tensor[(13, ?, ?), float64], Tensor[(13, ?, ?), float64], Tensor[(1, 10, 16), float32], Tensor[(5, 9, 7), int16], Tensor[(63), int16], Tensor[(315), int16], Tensor[(13, ?, ?), float64], Tensor[(13, 1, 1), float64]) {
  %889 = @func_861() /* ty=(Tensor[(13, 1, 1), float64], Tensor[(13, 1, 1), float64], Tensor[(13, 10, 16), bool], Tensor[(13, 10, 16), uint8], Tensor[(1, 10, 16), float32]) */;
  %890 = @func_1196() /* ty=(Tensor[(13, ?, ?), float64],) */;
  %891 = @func_1196() /* ty=(Tensor[(13, ?, ?), float64],) */;
  %892 = cast(meta[relay.Constant][36] /* ty=Tensor[(63), int16] */, dtype="int16") /* ty=Tensor[(63), int16] */;
  %893 = cast(%var_1616, dtype="int16") /* ty=Tensor[(315), int16] */;
  %894 = reshape(%892, newshape=[1, 9, 7]) /* ty=Tensor[(1, 9, 7), int16] */;
  %895 = reshape(%893, newshape=[5, 9, 7]) /* ty=Tensor[(5, 9, 7), int16] */;
  %896 = @func_1095(%894, %895) /* ty=(Tensor[(5, 9, 7), int16],) */;
  %897 = @func_1304() /* ty=(Tensor[(13, ?, ?), float64], Tensor[(13, ?, ?), float64]) */;
  %898 = @func_732() /* ty=(Tensor[(13, 1, 1), float64],) */;
  %899 = %889.3;
  %900 = %890.0;
  %901 = %891.0;
  %902 = @func_750() /* ty=Tensor[(1, 10, 16), float32] */;
  %903 = %896.0;
  %904 = %897.0;
  %905 = %898.0;
  (%899, %900, %901, %902, %903, meta[relay.Constant][36] /* ty=Tensor[(63), int16] */, %var_1616, %904, %905)
}

def @func_732() -> (Tensor[(13, 1, 1), float64],) {
  %906 = @func_585() /* ty=Tensor[(13, 1, 1), float64] */;
  (%906,)
}

def @func_9845(%var_9832: Tensor[(13, 4, 13), float64]) -> (Tensor[(13, 4, 13), bool],) {
  %907 = @func_5713() /* ty=(Tensor[(13, 1, 1), float64], Tensor[(13, 1, 1), float64], Tensor[(13, 1, 1), float64]) */;
  %908 = %907.1;
  %909 = cast(%908, dtype="bool") /* ty=Tensor[(13, 1, 1), bool] */;
  %910 = cast(%var_9832, dtype="bool") /* ty=Tensor[(13, 4, 13), bool] */;
  %911 = less(%909, %910) /* ty=Tensor[(13, 4, 13), bool] */;
  (%911,)
}

def @func_2575() -> (Tensor[(13, 1, 1), float64], Tensor[(13, 1, 1), float64], Tensor[(416), float64], Tensor[(13, 1, 1), float64]) {
  %912 = cast(meta[relay.Constant][37] /* ty=Tensor[(416), float64] */, dtype="float64") /* ty=Tensor[(416), float64] */;
  %913 = reshape(%912, newshape=[13, 8, 4]) /* ty=Tensor[(13, 8, 4), float64] */;
  %914 = @func_1080(%913) /* ty=(Tensor[(13, 8, 4), int16], Tensor[(13, 10, 16), uint8], Tensor[(13, 1, 1), float64], Tensor[(13, 1, 1), float64], Tensor[(13, 1, 1), float64], Tensor[(13, 1, 1), float64]) */;
  %915 = @func_703() /* ty=(Tensor[(13, 1, 1), float64], Tensor[(13, 1, 1), float64], Tensor[(13, 1, 1), float64]) */;
  %916 = @func_1340() /* ty=Tensor[(13, 1, 1), float64] */;
  %917 = %914.3;
  %918 = %915.2;
  (%916, %917, meta[relay.Constant][37] /* ty=Tensor[(416), float64] */, %918)
}

def @func_2346() -> (Tensor[(13, ?, ?), float64],) {
  %919 = @func_1304() /* ty=(Tensor[(13, ?, ?), float64], Tensor[(13, ?, ?), float64]) */;
  %920 = %919.0;
  (%920,)
}

def @func_8243(%var_8240: Tensor[(7, 9, 14), float64]) -> (Tensor[(7, 9, 14), float64],) {
  %921 = cast(%var_8240, dtype="float64") /* ty=Tensor[(7, 9, 14), float64] */;
  %922 = atan(%921) /* ty=Tensor[(7, 9, 14), float64] */;
  (%922,)
}

def @func_8997(%var_8986: Tensor[(13, 12, 5), uint32]) -> (Tensor[(13, 12, 5), bool],) {
  %923 = @func_7010() /* ty=Tensor[(13, ?, ?), uint32] */;
  %924 = cast(%923, dtype="bool") /* ty=Tensor[(13, ?, ?), bool] */;
  %925 = cast(%var_8986, dtype="bool") /* ty=Tensor[(13, 12, 5), bool] */;
  %926 = equal(%924, %925) /* ty=Tensor[(13, 12, 5), bool] */;
  (%926,)
}

def @func_10691() -> (Tensor[(13, 1, 1), float64], Tensor[(13, ?, ?), float64], Tensor[(13, 10, 16), float64]) {
  %927 = @func_2498() /* ty=(Tensor[(13, 1, 1), float64], Tensor[(13, 1, 1), float64]) */;
  %928 = @func_10479() /* ty=(Tensor[(13, ?, ?), float64],) */;
  %929 = %927.1;
  %930 = %928.0;
  %931 = @func_7312() /* ty=Tensor[(13, 10, 16), float64] */;
  (%929, %930, %931)
}

def @func_12525() -> (Tensor[(416), float64],) {
  %932 = @func_8757() /* ty=(Tensor[(13, 1, 1), float64], Tensor[(416), float64], Tensor[(13, 1, 1), float64]) */;
  %933 = %932.1;
  (%933,)
}

def @func_3800() -> (Tensor[(13, ?, ?), uint32], Tensor[(13, ?, ?), float64], Tensor[(14, 11, 6), float64], Tensor[(13, 1, 1), float64]) {
  %934 = @func_3398() /* ty=(Tensor[(13, 1, 1), float64],) */;
  %935 = %934.0;
  %936 = @func_1776() /* ty=(Tensor[(13, 1, 1), float64], Tensor[(13, 1, 1), float64], Tensor[(13, 1, 1), float64], Tensor[(13, 1, 1), float64], Tensor[(416), float64]) */;
  %937 = %936.0;
  %938 = cast(%937, dtype="uint32") /* ty=Tensor[(13, 1, 1), uint32] */;
  %939 = shape_of(%935, dtype="int32") /* ty=Tensor[(3), int32] */;
  %940 = cast(%935, dtype="uint32") /* ty=Tensor[(13, 1, 1), uint32] */;
  %941 = dyn.reshape(%938, %939, newshape=[]) /* ty=Tensor[(?, ?, ?), uint32] */;
  %942 = @func_3205() /* ty=(Tensor[(13, ?, ?), float64], Tensor[(13, ?, ?), float64]) */;
  %943 = @func_3634() /* ty=(Tensor[(14, 11, 6), float64],) */;
  %944 = @func_2947() /* ty=(Tensor[(13, 1, 1), float64], Tensor[(13, ?, ?), uint32]) */;
  %945 = bitwise_and(%940, %941) /* ty=Tensor[(13, ?, ?), uint32] */;
  %946 = %942.1;
  %947 = %943.0;
  %948 = %944.0;
  (%945, %946, %947, %948)
}

def @func_13105() -> Tensor[(13, 1, 1), float64] {
  %949 = @func_7235() /* ty=(Tensor[(13, 1, 1), float64], Tensor[(13, 1, 1), float64], Tensor[(13, 1, 1), float64]) */;
  %949.2
}

def @func_3059() -> (Tensor[(13, 1, 1), float64],) {
  %950 = @func_2947() /* ty=(Tensor[(13, 1, 1), float64], Tensor[(13, ?, ?), uint32]) */;
  %951 = %950.0;
  (%951,)
}

def @func_1144() -> (Tensor[(13, 1, 1), float64], Tensor[(1, 10, 16), float32]) {
  %952 = @func_643() /* ty=(Tensor[(13, 1, 1), float64], Tensor[(13, 1, 1), float64], Tensor[(13, 1, 1), float64]) */;
  %953 = %952.1;
  %954 = @func_750() /* ty=Tensor[(1, 10, 16), float32] */;
  (%953, %954)
}

def @func_6150() -> (Tensor[(13, 1, 1), float64],) {
  %955 = @func_5166() /* ty=(Tensor[(315), int16], Tensor[(13, 1, 1), float64]) */;
  %956 = %955.1;
  (%956,)
}

def @func_7332() -> (Tensor[(13, 1, 1), float64],) {
  %957 = @func_4205() /* ty=(Tensor[(13, 1, 1), float64],) */;
  %958 = %957.0;
  (%958,)
}

def @func_9521(%var_9502: Tensor[(1, 936), float64]) -> (Tensor[(13, 1, 1), float32], Tensor[(196), float64], Tensor[(1, 936), float64]) {
  %959 = @func_9411() /* ty=(Tensor[(13, 1, 1), float32],) */;
  %960 = cast(%var_9502, dtype="float64") /* ty=Tensor[(1, 936), float64] */;
  %961 = reshape(%960, newshape=[936]) /* ty=Tensor[(936), float64] */;
  %962 = @func_4099(%961) /* ty=(Tensor[(13, 11, 9), float64], Tensor[(13, 1, 1), float64], Tensor[(13, 1, 1), float64], Tensor[(13, 1, 1), float64], Tensor[(936), float64], Tensor[(13, 10, 16), float32], Tensor[(196), float64], Tensor[(13, 1, 1), float32]) */;
  %963 = %959.0;
  %964 = %962.6;
  (%963, %964, %var_9502)
}

def @func_7888() -> (Tensor[(13, 1, 1), float64],) {
  %965 = @func_6826() /* ty=(Tensor[(13, ?, ?), float64], Tensor[(13, 1, 1), float64]) */;
  %966 = %965.1;
  (%966,)
}

def @func_3585() -> (Tensor[(13, 1, 1), float64], Tensor[(13, 1, 1), float64]) {
  %967 = @func_1144() /* ty=(Tensor[(13, 1, 1), float64], Tensor[(1, 10, 16), float32]) */;
  %968 = @func_703() /* ty=(Tensor[(13, 1, 1), float64], Tensor[(13, 1, 1), float64], Tensor[(13, 1, 1), float64]) */;
  %969 = %967.0;
  %970 = %968.2;
  (%969, %970)
}

def @func_9163() -> Tensor[(14, 11, 6), float64] {
  @func_7531() /* ty=Tensor[(14, 11, 6), float64] */
}

def @func_11874(%var_11867: Tensor[(4, 11, 15), float32]) -> Tensor[(4, 11, 15), float32] {
  %971 = cast(%var_11867, dtype="float32") /* ty=Tensor[(4, 11, 15), float32] */;
  rsqrt(%971) /* ty=Tensor[(4, 11, 15), float32] */
}

def @func_7683() -> (Tensor[(13, 1, 1), float64],) {
  %972 = @func_585() /* ty=Tensor[(13, 1, 1), float64] */;
  (%972,)
}

def @func_1499() -> Tensor[(13, 1, 1), float64] {
  %973 = @func_659() /* ty=(Tensor[(13, 1, 1), float64],) */;
  %973.0
}

def @func_7312() -> Tensor[(13, 10, 16), float64] {
  %974 = @func_5916() /* ty=(Tensor[(13, 10, 16), float64],) */;
  %974.0
}

def @func_5221() -> (Tensor[(13, 1, 1), float64], Tensor[(5, 9, 7), int16], Tensor[(7, 9), int16], Tensor[(315), int16], Tensor[(13, ?, ?), float64], Tensor[(6, 3, 16), uint64], Tensor[(48), uint64]) {
  %975 = @func_2012() /* ty=(Tensor[(13, 1, 1), float64], Tensor[(13, 1, 1), float64], Tensor[(13, 1, 1), float64]) */;
  %976 = cast(meta[relay.Constant][38] /* ty=Tensor[(7, 9), int16] */, dtype="int16") /* ty=Tensor[(7, 9), int16] */;
  %977 = cast(meta[relay.Constant][39] /* ty=Tensor[(315), int16] */, dtype="int16") /* ty=Tensor[(315), int16] */;
  %978 = reshape(%976, newshape=[1, 9, 7]) /* ty=Tensor[(1, 9, 7), int16] */;
  %979 = reshape(%977, newshape=[5, 9, 7]) /* ty=Tensor[(5, 9, 7), int16] */;
  %980 = @func_1095(%978, %979) /* ty=(Tensor[(5, 9, 7), int16],) */;
  %981 = @func_4275() /* ty=(Tensor[(13, ?, ?), float64], Tensor[(13, 1, 1), float64], Tensor[(196), float64]) */;
  %982 = cast(meta[relay.Constant][40] /* ty=Tensor[(48), uint64] */, dtype="uint64") /* ty=Tensor[(48), uint64] */;
  %983 = reshape(%982, newshape=[1, 3, 16]) /* ty=Tensor[(1, 3, 16), uint64] */;
  %984 = @func_4829(%983) /* ty=(Tensor[(6, 3, 16), uint64],) */;
  %985 = %975.0;
  %986 = %980.0;
  %987 = %981.0;
  %988 = %984.0;
  (%985, %986, meta[relay.Constant][38] /* ty=Tensor[(7, 9), int16] */, meta[relay.Constant][39] /* ty=Tensor[(315), int16] */, %987, %988, meta[relay.Constant][40] /* ty=Tensor[(48), uint64] */)
}

def @func_10815(%var_10792: Tensor[(13, 7, 9), float64]) -> (Tensor[(13, 7, 9), uint16], Tensor[(13, 1, 1), float64], Tensor[(13, 1, 1), float64], Tensor[(13, ?, ?), float64]) {
  %989 = @func_7391() /* ty=(Tensor[(13, 1, 1), float64], Tensor[(315), int16]) */;
  %990 = %989.0;
  %991 = cast(%990, dtype="uint16") /* ty=Tensor[(13, 1, 1), uint16] */;
  %992 = cast(%var_10792, dtype="uint16") /* ty=Tensor[(13, 7, 9), uint16] */;
  %993 = @func_9883() /* ty=(Tensor[(13, ?, ?), float64],) */;
  %994 = bitwise_or(%991, %992) /* ty=Tensor[(13, 7, 9), uint16] */;
  %995 = @func_585() /* ty=Tensor[(13, 1, 1), float64] */;
  %996 = @func_3217() /* ty=Tensor[(13, 1, 1), float64] */;
  %997 = %993.0;
  (%994, %995, %996, %997)
}

def @func_793(%var_781: Tensor[(13, 3, 6), float64]) -> (Tensor[(13, 3, 6), bool],) {
  %998 = @func_659() /* ty=(Tensor[(13, 1, 1), float64],) */;
  %999 = %998.0;
  %1000 = cast(%999, dtype="bool") /* ty=Tensor[(13, 1, 1), bool] */;
  %1001 = cast(%var_781, dtype="bool") /* ty=Tensor[(13, 3, 6), bool] */;
  %1002 = greater(%1000, %1001) /* ty=Tensor[(13, 3, 6), bool] */;
  (%1002,)
}

def @func_11985() -> Tensor[(13, 1, 1), float64] {
  %1003 = @func_684() /* ty=(Tensor[(13, 1, 1), float64], Tensor[(13, 1, 1), float64]) */;
  %1003.0
}

def @func_6901(%var_6890: Tensor[(936), float64]) -> (Tensor[(13, 1, 1), float64], Tensor[(13, 1, 1), float64], Tensor[(13, 1, 1), float64], Tensor[(936), float64], Tensor[(13, 1, 1), float64]) {
  %1004 = @func_732() /* ty=(Tensor[(13, 1, 1), float64],) */;
  %1005 = @func_4604() /* ty=(Tensor[(13, 1, 1), float64],) */;
  %1006 = cast(%var_6890, dtype="float64") /* ty=Tensor[(936), float64] */;
  %1007 = reshape(%1006, newshape=[13, 8, 9]) /* ty=Tensor[(13, 8, 9), float64] */;
  %1008 = @func_3335(%1007) /* ty=(Tensor[(13, 8, 9), bool], Tensor[(13, ?, ?), float64], Tensor[(13, 1, 1), float64]) */;
  %1009 = @func_2012() /* ty=(Tensor[(13, 1, 1), float64], Tensor[(13, 1, 1), float64], Tensor[(13, 1, 1), float64]) */;
  %1010 = %1004.0;
  %1011 = %1005.0;
  %1012 = %1008.2;
  %1013 = %1009.2;
  (%1010, %1011, %1012, %var_6890, %1013)
}

def @func_3812() -> Tensor[(13, 1, 1), float64] {
  %1014 = @func_659() /* ty=(Tensor[(13, 1, 1), float64],) */;
  %1014.0
}

def @func_1095(%var_1085: Tensor[(1, 9, 7), int16], %var_1086: Tensor[(5, 9, 7), int16]) -> (Tensor[(5, 9, 7), int16],) {
  %1015 = cast(%var_1085, dtype="int16") /* ty=Tensor[(1, 9, 7), int16] */;
  %1016 = cast(%var_1086, dtype="int16") /* ty=Tensor[(5, 9, 7), int16] */;
  %1017 = subtract(%1015, %1016) /* ty=Tensor[(5, 9, 7), int16] */;
  (%1017,)
}

def @func_5275() -> Tensor[(13, 1, 1), float64] {
  %1018 = @func_643() /* ty=(Tensor[(13, 1, 1), float64], Tensor[(13, 1, 1), float64], Tensor[(13, 1, 1), float64]) */;
  %1018.0
}

def @func_6311() -> (Tensor[(13, 1, 1), float32], Tensor[(13, 1, 1), float64], Tensor[(1152), float32]) {
  %1019 = @func_659() /* ty=(Tensor[(13, 1, 1), float64],) */;
  %1020 = %1019.0;
  %1021 = cast(%1020, dtype="float32") /* ty=Tensor[(13, 1, 1), float32] */;
  %1022 = cast(meta[relay.Constant][41] /* ty=Tensor[(1152), float32] */, dtype="float32") /* ty=Tensor[(1152), float32] */;
  %1023 = reshape(%1022, newshape=[16, 8, 9]) /* ty=Tensor[(16, 8, 9), float32] */;
  %1024 = @func_5013(%1023) /* ty=(Tensor[(16, 8, 9), bool], Tensor[(13, 1, 1), float64]) */;
  %1025 = cos(%1021) /* ty=Tensor[(13, 1, 1), float32] */;
  %1026 = %1024.1;
  (%1025, %1026, meta[relay.Constant][41] /* ty=Tensor[(1152), float32] */)
}

def @func_12404() -> (Tensor[(196), float64], Tensor[(13, 1, 1), float64]) {
  %1027 = @func_9016() /* ty=(Tensor[(196), float64],) */;
  %1028 = @func_7442() /* ty=(Tensor[(1, 10, 16), float32], Tensor[(13, 1, 1), float64], Tensor[(13, 1, 1), float64], Tensor[(13, 1, 1), float64]) */;
  %1029 = %1027.0;
  %1030 = %1028.1;
  (%1029, %1030)
}

def @func_12716(%var_12696: Tensor[(13, 3, 16), float64]) -> (Tensor[(6, 3, 16), uint64], Tensor[(48), uint64], Tensor[(13, 3, 16), uint16], Tensor[(13, 1, 416), float64]) {
  %1031 = cast(meta[relay.Constant][42] /* ty=Tensor[(48), uint64] */, dtype="uint64") /* ty=Tensor[(48), uint64] */;
  %1032 = reshape(%1031, newshape=[48]) /* ty=Tensor[(48), uint64] */;
  %1033 = @func_9581(%1032) /* ty=(Tensor[(13, 1, 1), float64], Tensor[(6, 3, 16), uint64], Tensor[(48), uint64], Tensor[(13, 1, 1), float64]) */;
  %1034 = @func_12404() /* ty=(Tensor[(196), float64], Tensor[(13, 1, 1), float64]) */;
  %1035 = %1034.1;
  %1036 = cast(%1035, dtype="uint16") /* ty=Tensor[(13, 1, 1), uint16] */;
  %1037 = cast(%var_12696, dtype="uint16") /* ty=Tensor[(13, 3, 16), uint16] */;
  %1038 = @func_2819() /* ty=(Tensor[(416), float64], Tensor[(416), float64], Tensor[(13, 1, 1), float64]) */;
  %1039 = %1038.0;
  %1040 = cast(%1035, dtype="float64") /* ty=Tensor[(13, 1, 1), float64] */;
  %1041 = cast(%1039, dtype="float64") /* ty=Tensor[(416), float64] */;
  %1042 = %1033.1;
  %1043 = left_shift(%1036, %1037) /* ty=Tensor[(13, 3, 16), uint16] */;
  %1044 = floor_divide(%1040, %1041) /* ty=Tensor[(13, 1, 416), float64] */;
  (%1042, meta[relay.Constant][42] /* ty=Tensor[(48), uint64] */, %1043, %1044)
}

def @func_13090() -> (Tensor[(13, 1, 416), bool],) {
  %1045 = @func_964() /* ty=(Tensor[(13, 1, 1), float64],) */;
  %1046 = %1045.0;
  %1047 = @func_9055() /* ty=(Tensor[(13, 1, 1), float32], Tensor[(416), float64]) */;
  %1048 = %1047.1;
  %1049 = cast(%1046, dtype="bool") /* ty=Tensor[(13, 1, 1), bool] */;
  %1050 = cast(%1048, dtype="bool") /* ty=Tensor[(416), bool] */;
  %1051 = equal(%1049, %1050) /* ty=Tensor[(13, 1, 416), bool] */;
  (%1051,)
}

def @func_2947() -> (Tensor[(13, 1, 1), float64], Tensor[(13, ?, ?), uint32]) {
  %1052 = @func_964() /* ty=(Tensor[(13, 1, 1), float64],) */;
  %1053 = %1052.0;
  %1054 = @func_2728() /* ty=Tensor[(13, ?, ?), uint32] */;
  (%1053, %1054)
}

def @func_12094() -> (Tensor[(13, 1, 1), float64], Tensor[(1, 10, 16), float32]) {
  %1055 = @func_7442() /* ty=(Tensor[(1, 10, 16), float32], Tensor[(13, 1, 1), float64], Tensor[(13, 1, 1), float64], Tensor[(13, 1, 1), float64]) */;
  %1056 = @func_2439() /* ty=(Tensor[(1, 10, 16), float32], Tensor[(13, 7, 10), float32]) */;
  %1057 = %1055.2;
  %1058 = %1056.0;
  (%1057, %1058)
}

def @func_6538() -> (Tensor[(5, 9, 7), int16], Tensor[(13, 1, 1), float64], Tensor[(13, 1, 1), float64]) {
  %1059 = @func_5221() /* ty=(Tensor[(13, 1, 1), float64], Tensor[(5, 9, 7), int16], Tensor[(7, 9), int16], Tensor[(315), int16], Tensor[(13, ?, ?), float64], Tensor[(6, 3, 16), uint64], Tensor[(48), uint64]) */;
  %1060 = @func_5713() /* ty=(Tensor[(13, 1, 1), float64], Tensor[(13, 1, 1), float64], Tensor[(13, 1, 1), float64]) */;
  %1061 = @func_1776() /* ty=(Tensor[(13, 1, 1), float64], Tensor[(13, 1, 1), float64], Tensor[(13, 1, 1), float64], Tensor[(13, 1, 1), float64], Tensor[(416), float64]) */;
  %1062 = %1059.1;
  %1063 = %1060.1;
  %1064 = %1061.2;
  (%1062, %1063, %1064)
}

def @func_12144() -> Tensor[(13, 1, 1), float64] {
  %1065 = @func_6150() /* ty=(Tensor[(13, 1, 1), float64],) */;
  %1065.0
}

/* For debugging purposes the metadata section has been omitted.
 * If you would like to see the full metadata section you can set the 
 * option to `True` when invoking `astext`. 
 */
===================================
==========mutated_mod==========
#[version = "0.0.5"]
def @func_5791() -> (Tensor[(13, 1, 1), float64],) {
  %0 = @func_2300() /* ty=Tensor[(13, 1, 1), float64] */;
  (%0,)
}

def @func_5234() -> (Tensor[(13, 1, 1), float64], Tensor[(13, 1, 1), float64]) {
  @func_5232() /* ty=(Tensor[(13, 1, 1), float64], Tensor[(13, 1, 1), float64]) */
}

def @func_5276() -> Tensor[(13, 1, 1), float64] {
  %2 = fn () -> Tensor[(13, 1, 1), float64] {
    %1 = @func_643() /* ty=(Tensor[(13, 1, 1), float64], Tensor[(13, 1, 1), float64], Tensor[(13, 1, 1), float64]) */;
    %1.0
  };
  %2() /* ty=Tensor[(13, 1, 1), float64] */
}

def @func_3248() -> (Tensor[(13, 1, 1), float64], Tensor[(416), float64], Tensor[(13, ?, ?), float64]) {
  %9 = fn () -> (Tensor[(13, 1, 1), float64], Tensor[(416), float64], Tensor[(13, ?, ?), float64]) {
    %3 = @func_1144() /* ty=(Tensor[(13, 1, 1), float64], Tensor[(1, 10, 16), float32]) */;
    %4 = @func_2575() /* ty=(Tensor[(13, 1, 1), float64], Tensor[(13, 1, 1), float64], Tensor[(416), float64], Tensor[(13, 1, 1), float64]) */;
    %5 = @func_3205() /* ty=(Tensor[(13, ?, ?), float64], Tensor[(13, ?, ?), float64]) */;
    %6 = %3.0;
    %7 = %4.2;
    %8 = %5.1;
    (%6, %7, %8)
  };
  %9() /* ty=(Tensor[(13, 1, 1), float64], Tensor[(416), float64], Tensor[(13, ?, ?), float64]) */
}

def @func_6268() -> (Tensor[(13, 1, 1), float64], Tensor[(13, 1, 1), float64], Tensor[(13, 1, 1), float64]) {
  @func_6266() /* ty=(Tensor[(13, 1, 1), float64], Tensor[(13, 1, 1), float64], Tensor[(13, 1, 1), float64]) */
}

def @func_643() -> (Tensor[(13, 1, 1), float64], Tensor[(13, 1, 1), float64], Tensor[(13, 1, 1), float64]) {
  %10 = @func_585() /* ty=Tensor[(13, 1, 1), float64] */;
  %11 = @func_585() /* ty=Tensor[(13, 1, 1), float64] */;
  %12 = @func_585() /* ty=Tensor[(13, 1, 1), float64] */;
  (%10, %11, %12)
}

def @func_6744() -> (Tensor[(13, 1, 1), float64], Tensor[(14, 11, 6), float64]) {
  %13 = @func_6150() /* ty=(Tensor[(13, 1, 1), float64],) */;
  %14 = @func_3634() /* ty=(Tensor[(14, 11, 6), float64],) */;
  %15 = %13.0;
  %16 = %14.0;
  (%15, %16)
}

def @func_10634() -> (Tensor[(13, 1, 1), float64], Tensor[(13, 1, 1), float64]) {
  %17 = @func_6374() /* ty=(Tensor[(13, 1, 1), float64],) */;
  %18 = @func_3217() /* ty=Tensor[(13, 1, 1), float64] */;
  %19 = %17.0;
  (%18, %19)
}

def @func_5793() -> (Tensor[(13, 1, 1), float64],) {
  @func_5791() /* ty=(Tensor[(13, 1, 1), float64],) */
}

def @func_6746() -> (Tensor[(13, 1, 1), float64], Tensor[(14, 11, 6), float64]) {
  @func_6744() /* ty=(Tensor[(13, 1, 1), float64], Tensor[(14, 11, 6), float64]) */
}

def @func_1196() -> (Tensor[(13, ?, ?), float64],) {
  %20 = @func_585() /* ty=Tensor[(13, 1, 1), float64] */;
  %21 = @func_684() /* ty=(Tensor[(13, 1, 1), float64], Tensor[(13, 1, 1), float64]) */;
  %22 = %21.0;
  %23 = cast(%22, dtype="float64") /* ty=Tensor[(13, 1, 1), float64] */;
  %24 = shape_of(%20, dtype="int32") /* ty=Tensor[(3), int32] */;
  %25 = cast(%20, dtype="float64") /* ty=Tensor[(13, 1, 1), float64] */;
  %26 = dyn.reshape(%23, %24, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %27 = floor_divide(%25, %26) /* ty=Tensor[(13, ?, ?), float64] */;
  (%27,)
}

def @func_7313() -> Tensor[(13, 10, 16), float64] {
  %29 = fn () -> Tensor[(13, 10, 16), float64] {
    %28 = @func_5916() /* ty=(Tensor[(13, 10, 16), float64],) */;
    %28.0
  };
  %29() /* ty=Tensor[(13, 10, 16), float64] */
}

def @func_10115(%var_10113: Tensor[(12, 7, 6), int8], %var_10114: Tensor[(12, 7, 6), int8]) -> (Tensor[(12, 7, 6), bool],) {
  @func_10111(%var_10113, %var_10114) /* ty=(Tensor[(12, 7, 6), bool],) */
}

def @func_1924(%var_1919: Tensor[(63), int16]) -> (Tensor[(13, 1, 1), float64], Tensor[(13, 10, 16), uint8], Tensor[(5, 9, 7), int16], Tensor[(63), int16], Tensor[(315), int16]) {
  %30 = @func_861() /* ty=(Tensor[(13, 1, 1), float64], Tensor[(13, 1, 1), float64], Tensor[(13, 10, 16), bool], Tensor[(13, 10, 16), uint8], Tensor[(1, 10, 16), float32]) */;
  %31 = cast(%var_1919, dtype="int16") /* ty=Tensor[(63), int16] */;
  %32 = cast(meta[relay.Constant][0] /* ty=Tensor[(315), int16] */, dtype="int16") /* ty=Tensor[(315), int16] */;
  %33 = reshape(%31, newshape=[1, 9, 7]) /* ty=Tensor[(1, 9, 7), int16] */;
  %34 = reshape(%32, newshape=[5, 9, 7]) /* ty=Tensor[(5, 9, 7), int16] */;
  %35 = @func_1095(%33, %34) /* ty=(Tensor[(5, 9, 7), int16],) */;
  %36 = @func_1340() /* ty=Tensor[(13, 1, 1), float64] */;
  %37 = %30.3;
  %38 = %35.0;
  (%36, %37, %38, %var_1919, meta[relay.Constant][0] /* ty=Tensor[(315), int16] */)
}

def @func_12256() -> (Tensor[(13, 1, 1), float32], Tensor[(7, 9, 14), float64], Tensor[(98, 9), float64], Tensor[(13, 1, 1), float64]) {
  %39 = cast(meta[relay.Constant][1] /* ty=Tensor[(98, 9), float64] */, dtype="float64") /* ty=Tensor[(98, 9), float64] */;
  %40 = reshape(%39, newshape=[7, 9, 14]) /* ty=Tensor[(7, 9, 14), float64] */;
  %41 = @func_8243(%40) /* ty=(Tensor[(7, 9, 14), float64],) */;
  %42 = @func_1370() /* ty=Tensor[(13, 1, 1), float32] */;
  %43 = %41.0;
  %44 = @func_5989() /* ty=Tensor[(13, 1, 1), float64] */;
  (%42, %43, meta[relay.Constant][1] /* ty=Tensor[(98, 9), float64] */, %44)
}

def @func_661() -> (Tensor[(13, 1, 1), float64],) {
  @func_659() /* ty=(Tensor[(13, 1, 1), float64],) */
}

def @func_1500() -> Tensor[(13, 1, 1), float64] {
  %46 = fn () -> Tensor[(13, 1, 1), float64] {
    %45 = @func_659() /* ty=(Tensor[(13, 1, 1), float64],) */;
    %45.0
  };
  %46() /* ty=Tensor[(13, 1, 1), float64] */
}

def @func_10084() -> (Tensor[(13, 1, 1), float64], Tensor[(13, 1, 1), float64]) {
  %51 = fn () -> (Tensor[(13, 1, 1), float64], Tensor[(13, 1, 1), float64]) {
    %47 = @func_4604() /* ty=(Tensor[(13, 1, 1), float64],) */;
    %48 = @func_3967() /* ty=(Tensor[(13, 5, 13), uint32], Tensor[(13, 5, 13), float64], Tensor[(13, 1, 1), float64]) */;
    %49 = %47.0;
    %50 = %48.2;
    (%49, %50)
  };
  %51() /* ty=(Tensor[(13, 1, 1), float64], Tensor[(13, 1, 1), float64]) */
}

def @func_11074() -> (Tensor[(5, 5, 4), float32], Tensor[(5, 5, 4), float64]) {
  %52 = cast(meta[relay.Constant][2] /* ty=Tensor[(5, 5, 4), float32] */, dtype="float32") /* ty=Tensor[(5, 5, 4), float32] */;
  %53 = cast(meta[relay.Constant][3] /* ty=Tensor[(5, 5, 4), float32] */, dtype="float64") /* ty=Tensor[(5, 5, 4), float64] */;
  %54 = shape_of(meta[relay.Constant][2] /* ty=Tensor[(5, 5, 4), float32] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %55 = cast(meta[relay.Constant][2] /* ty=Tensor[(5, 5, 4), float32] */, dtype="float64") /* ty=Tensor[(5, 5, 4), float64] */;
  %56 = dyn.reshape(%53, %54, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %57 = cosh(%52) /* ty=Tensor[(5, 5, 4), float32] */;
  %58 = power(%55, %56) /* ty=Tensor[(5, 5, 4), float64] */;
  (%57, %58)
}

def @func_2512() -> (Tensor[(13, 1, 1), float64],) {
  %59 = @func_732() /* ty=(Tensor[(13, 1, 1), float64],) */;
  %60 = %59.0;
  (%60,)
}

def @func_1669() -> Tensor[(13, 1, 1), float64] {
  %61 = fn () -> Tensor[(13, 1, 1), float64] {
    @func_585() /* ty=Tensor[(13, 1, 1), float64] */
  };
  %61() /* ty=Tensor[(13, 1, 1), float64] */
}

def @func_9314() -> (Tensor[(13, 1, 1), float64], Tensor[(13, 1, 1), float64], Tensor[(7, 9), int16]) {
  %67 = fn () -> (Tensor[(13, 1, 1), float64], Tensor[(13, 1, 1), float64], Tensor[(7, 9), int16]) {
    %62 = @func_7332() /* ty=(Tensor[(13, 1, 1), float64],) */;
    %63 = @func_5166() /* ty=(Tensor[(315), int16], Tensor[(13, 1, 1), float64]) */;
    %64 = %62.0;
    %65 = %63.1;
    %66 = @func_8768() /* ty=Tensor[(7, 9), int16] */;
    (%64, %65, %66)
  };
  %67() /* ty=(Tensor[(13, 1, 1), float64], Tensor[(13, 1, 1), float64], Tensor[(7, 9), int16]) */
}

def @func_4276() -> (Tensor[(13, ?, ?), float64], Tensor[(13, 1, 1), float64], Tensor[(196), float64]) {
  %74 = fn () -> (Tensor[(13, ?, ?), float64], Tensor[(13, 1, 1), float64], Tensor[(196), float64]) {
    %68 = @func_3205() /* ty=(Tensor[(13, ?, ?), float64], Tensor[(13, ?, ?), float64]) */;
    %69 = cast(meta[relay.Constant][4] /* ty=Tensor[(196), float64] */, dtype="float64") /* ty=Tensor[(196), float64] */;
    %70 = reshape(%69, newshape=[196]) /* ty=Tensor[(196), float64] */;
    %71 = @func_3833(%70) /* ty=(Tensor[(13, 1, 1), float64], Tensor[(13, 10, 16), float32], Tensor[(196), float64]) */;
    %72 = %68.0;
    %73 = %71.0;
    (%72, %73, meta[relay.Constant][4] /* ty=Tensor[(196), float64] */)
  };
  %74() /* ty=(Tensor[(13, ?, ?), float64], Tensor[(13, 1, 1), float64], Tensor[(196), float64]) */
}

def @func_5438(%var_5436: Tensor[(39, 6), float64]) -> (Tensor[(13, 1, 1), float64], Tensor[(13, 1, 1), float64], Tensor[(13, 39, 6), bool]) {
  @func_5435(%var_5436) /* ty=(Tensor[(13, 1, 1), float64], Tensor[(13, 1, 1), float64], Tensor[(13, 39, 6), bool]) */
}

def @func_9256() -> (Tensor[(13, ?, ?), float64], Tensor[(13, ?, ?), float64], Tensor[(13, 1, 1), float64]) {
  @func_9254() /* ty=(Tensor[(13, ?, ?), float64], Tensor[(13, ?, ?), float64], Tensor[(13, 1, 1), float64]) */
}

def @func_6807() -> Tensor[(13, 1, 1), float64] {
  @func_6805() /* ty=Tensor[(13, 1, 1), float64] */
}

def @func_1340() -> Tensor[(13, 1, 1), float64] {
  @func_585() /* ty=Tensor[(13, 1, 1), float64] */
}

def @func_8716() -> (Tensor[(13, 1, 1), float64],) {
  @func_8714() /* ty=(Tensor[(13, 1, 1), float64],) */
}

def @func_5918() -> (Tensor[(13, 10, 16), float64],) {
  @func_5916() /* ty=(Tensor[(13, 10, 16), float64],) */
}

def @func_5833(%var_5832: Tensor[(936), float64]) -> (Tensor[(416), float64], Tensor[(13, 1, 1), float64], Tensor[(936), float64]) {
  %81 = fn (%var_5827: Tensor[(936), float64]) -> (Tensor[(416), float64], Tensor[(13, 1, 1), float64], Tensor[(936), float64]) {
    %75 = @func_2575() /* ty=(Tensor[(13, 1, 1), float64], Tensor[(13, 1, 1), float64], Tensor[(416), float64], Tensor[(13, 1, 1), float64]) */;
    %76 = cast(%var_5827, dtype="float64") /* ty=Tensor[(936), float64] */;
    %77 = reshape(%76, newshape=[936]) /* ty=Tensor[(936), float64] */;
    %78 = @func_4099(%77) /* ty=(Tensor[(13, 11, 9), float64], Tensor[(13, 1, 1), float64], Tensor[(13, 1, 1), float64], Tensor[(13, 1, 1), float64], Tensor[(936), float64], Tensor[(13, 10, 16), float32], Tensor[(196), float64], Tensor[(13, 1, 1), float32]) */;
    %79 = %75.2;
    %80 = %78.3;
    (%79, %80, %var_5827)
  };
  %81(%var_5832) /* ty=(Tensor[(416), float64], Tensor[(13, 1, 1), float64], Tensor[(936), float64]) */
}

def @func_10636() -> (Tensor[(13, 1, 1), float64], Tensor[(13, 1, 1), float64]) {
  @func_10634() /* ty=(Tensor[(13, 1, 1), float64], Tensor[(13, 1, 1), float64]) */
}

def @func_12718(%var_12717: Tensor[(13, 3, 16), float64]) -> (Tensor[(6, 3, 16), uint64], Tensor[(48), uint64], Tensor[(13, 3, 16), uint16], Tensor[(13, 1, 416), float64]) {
  %96 = fn (%var_12696: Tensor[(13, 3, 16), float64]) -> (Tensor[(6, 3, 16), uint64], Tensor[(48), uint64], Tensor[(13, 3, 16), uint16], Tensor[(13, 1, 416), float64]) {
    %82 = cast(meta[relay.Constant][5] /* ty=Tensor[(48), uint64] */, dtype="uint64") /* ty=Tensor[(48), uint64] */;
    %83 = reshape(%82, newshape=[48]) /* ty=Tensor[(48), uint64] */;
    %84 = @func_9581(%83) /* ty=(Tensor[(13, 1, 1), float64], Tensor[(6, 3, 16), uint64], Tensor[(48), uint64], Tensor[(13, 1, 1), float64]) */;
    %85 = @func_12404() /* ty=(Tensor[(196), float64], Tensor[(13, 1, 1), float64]) */;
    %86 = %85.1;
    %87 = cast(%86, dtype="uint16") /* ty=Tensor[(13, 1, 1), uint16] */;
    %88 = cast(%var_12696, dtype="uint16") /* ty=Tensor[(13, 3, 16), uint16] */;
    %89 = @func_2819() /* ty=(Tensor[(416), float64], Tensor[(416), float64], Tensor[(13, 1, 1), float64]) */;
    %90 = %89.0;
    %91 = cast(%86, dtype="float64") /* ty=Tensor[(13, 1, 1), float64] */;
    %92 = cast(%90, dtype="float64") /* ty=Tensor[(416), float64] */;
    %93 = %84.1;
    %94 = left_shift(%87, %88) /* ty=Tensor[(13, 3, 16), uint16] */;
    %95 = floor_divide(%91, %92) /* ty=Tensor[(13, 1, 416), float64] */;
    (%93, meta[relay.Constant][5] /* ty=Tensor[(48), uint64] */, %94, %95)
  };
  %96(%var_12717) /* ty=(Tensor[(6, 3, 16), uint64], Tensor[(48), uint64], Tensor[(13, 3, 16), uint16], Tensor[(13, 1, 416), float64]) */
}

def @func_13038() -> (Tensor[(13, 1, 63), uint8], Tensor[(13, 1, 63), uint16]) {
  %97 = @func_5275() /* ty=Tensor[(13, 1, 1), float64] */;
  %98 = @func_6657() /* ty=(Tensor[(13, ?, ?), bool], Tensor[(13, 11, 2), bool], Tensor[(63), float32]) */;
  %99 = %98.2;
  %100 = cast(%97, dtype="uint8") /* ty=Tensor[(13, 1, 1), uint8] */;
  %101 = cast(%99, dtype="uint8") /* ty=Tensor[(63), uint8] */;
  %102 = cast(%97, dtype="uint16") /* ty=Tensor[(13, 1, 1), uint16] */;
  %103 = cast(%99, dtype="uint16") /* ty=Tensor[(63), uint16] */;
  %104 = bitwise_and(%100, %101) /* ty=Tensor[(13, 1, 63), uint8] */;
  %105 = left_shift(%102, %103) /* ty=Tensor[(13, 1, 63), uint16] */;
  (%104, %105)
}

def @func_3587() -> (Tensor[(13, 1, 1), float64], Tensor[(13, 1, 1), float64]) {
  @func_3585() /* ty=(Tensor[(13, 1, 1), float64], Tensor[(13, 1, 1), float64]) */
}

def @func_8144() -> (Tensor[(1152), float32], Tensor[(14, 11, 6), float64], Tensor[(13, 1, 1), float64]) {
  %111 = fn () -> (Tensor[(1152), float32], Tensor[(14, 11, 6), float64], Tensor[(13, 1, 1), float64]) {
    %106 = @func_6311() /* ty=(Tensor[(13, 1, 1), float32], Tensor[(13, 1, 1), float64], Tensor[(1152), float32]) */;
    %107 = @func_6744() /* ty=(Tensor[(13, 1, 1), float64], Tensor[(14, 11, 6), float64]) */;
    %108 = %106.2;
    %109 = %107.1;
    %110 = @func_2300() /* ty=Tensor[(13, 1, 1), float64] */;
    (%108, %109, %110)
  };
  %111() /* ty=(Tensor[(1152), float32], Tensor[(14, 11, 6), float64], Tensor[(13, 1, 1), float64]) */
}

def @func_7393() -> (Tensor[(13, 1, 1), float64], Tensor[(315), int16]) {
  @func_7391() /* ty=(Tensor[(13, 1, 1), float64], Tensor[(315), int16]) */
}

def @func_12872() -> (Tensor[(13, ?, ?), uint32], Tensor[(13, 1, 1), float64], Tensor[(13, 10, 16), float64]) {
  %117 = fn () -> (Tensor[(13, ?, ?), uint32], Tensor[(13, 1, 1), float64], Tensor[(13, 10, 16), float64]) {
    %112 = @func_7807() /* ty=(Tensor[(13, 1, 1), float64],) */;
    %113 = @func_11154() /* ty=(Tensor[(13, 10, 16), float64],) */;
    %114 = @func_2728() /* ty=Tensor[(13, ?, ?), uint32] */;
    %115 = %112.0;
    %116 = %113.0;
    (%114, %115, %116)
  };
  %117() /* ty=(Tensor[(13, ?, ?), uint32], Tensor[(13, 1, 1), float64], Tensor[(13, 10, 16), float64]) */
}

def @func_5223() -> (Tensor[(13, 1, 1), float64], Tensor[(5, 9, 7), int16], Tensor[(7, 9), int16], Tensor[(315), int16], Tensor[(13, ?, ?), float64], Tensor[(6, 3, 16), uint64], Tensor[(48), uint64]) {
  @func_5221() /* ty=(Tensor[(13, 1, 1), float64], Tensor[(5, 9, 7), int16], Tensor[(7, 9), int16], Tensor[(315), int16], Tensor[(13, ?, ?), float64], Tensor[(6, 3, 16), uint64], Tensor[(48), uint64]) */
}

def @func_8869(%var_8867: Tensor[(1, 2, 1), int8]) -> (Tensor[(15, 2, 6), uint64], Tensor[(1, 2, 63), float64], Tensor[(13, 1, 1), float64]) {
  @func_8866(%var_8867) /* ty=(Tensor[(15, 2, 6), uint64], Tensor[(1, 2, 63), float64], Tensor[(13, 1, 1), float64]) */
}

def @func_4605() -> (Tensor[(13, 1, 1), float64],) {
  %119 = fn () -> (Tensor[(13, 1, 1), float64],) {
    %118 = @func_3877() /* ty=Tensor[(13, 1, 1), float64] */;
    (%118,)
  };
  %119() /* ty=(Tensor[(13, 1, 1), float64],) */
}

def @func_12096() -> (Tensor[(13, 1, 1), float64], Tensor[(1, 10, 16), float32]) {
  @func_12094() /* ty=(Tensor[(13, 1, 1), float64], Tensor[(1, 10, 16), float32]) */
}

def @func_1371() -> Tensor[(13, 1, 1), float32] {
  %123 = fn () -> Tensor[(13, 1, 1), float32] {
    %120 = @func_643() /* ty=(Tensor[(13, 1, 1), float64], Tensor[(13, 1, 1), float64], Tensor[(13, 1, 1), float64]) */;
    %121 = %120.0;
    %122 = cast(%121, dtype="float32") /* ty=Tensor[(13, 1, 1), float32] */;
    acosh(%122) /* ty=Tensor[(13, 1, 1), float32] */
  };
  %123() /* ty=Tensor[(13, 1, 1), float32] */
}

def @func_10480() -> (Tensor[(13, ?, ?), float64],) {
  %126 = fn () -> (Tensor[(13, ?, ?), float64],) {
    %124 = @func_8224() /* ty=(Tensor[(13, ?, ?), float64],) */;
    %125 = %124.0;
    (%125,)
  };
  %126() /* ty=(Tensor[(13, ?, ?), float64],) */
}

def @func_6658() -> (Tensor[(13, ?, ?), bool], Tensor[(13, 11, 2), bool], Tensor[(63), float32]) {
  %133 = fn () -> (Tensor[(13, ?, ?), bool], Tensor[(13, 11, 2), bool], Tensor[(63), float32]) {
    %127 = @func_1886() /* ty=(Tensor[(13, ?, ?), float64], Tensor[(13, ?, ?), bool], Tensor[(13, 1, 1), float64], Tensor[(1, 10, 16), float32], Tensor[(13, 1, 1), float64]) */;
    %128 = @func_5895() /* ty=(Tensor[(13, 11, 2), bool], Tensor[(13, 5, 13), float64], Tensor[(13, ?, ?), uint32]) */;
    %129 = @func_4522() /* ty=(Tensor[(63), float32],) */;
    %130 = %127.1;
    %131 = %128.0;
    %132 = %129.0;
    (%130, %131, %132)
  };
  %133() /* ty=(Tensor[(13, ?, ?), bool], Tensor[(13, 11, 2), bool], Tensor[(63), float32]) */
}

def @func_7488() -> (Tensor[(9, 1, 13), float64],) {
  @func_7486() /* ty=(Tensor[(9, 1, 13), float64],) */
}

def @func_5385() -> (Tensor[(13, ?, ?), bool], Tensor[(13, ?, ?), float64], Tensor[(13, ?, ?), float64], Tensor[(13, 1, 1), float64], Tensor[(13, 1, 1), float32]) {
  %146 = fn () -> (Tensor[(13, ?, ?), bool], Tensor[(13, ?, ?), float64], Tensor[(13, ?, ?), float64], Tensor[(13, 1, 1), float64], Tensor[(13, 1, 1), float32]) {
    %134 = @func_1886() /* ty=(Tensor[(13, ?, ?), float64], Tensor[(13, ?, ?), bool], Tensor[(13, 1, 1), float64], Tensor[(1, 10, 16), float32], Tensor[(13, 1, 1), float64]) */;
    %135 = @func_1196() /* ty=(Tensor[(13, ?, ?), float64],) */;
    %136 = @func_1196() /* ty=(Tensor[(13, ?, ?), float64],) */;
    %137 = @func_5321() /* ty=Tensor[(13, 1, 1), float64] */;
    %138 = cast(%137, dtype="float64") /* ty=Tensor[(13, 1, 1), float64] */;
    %139 = sigmoid(%138) /* ty=Tensor[(13, 1, 1), float64] */;
    %140 = cast(%139, dtype="float32") /* ty=Tensor[(13, 1, 1), float32] */;
    %141 = %134.1;
    %142 = %135.0;
    %143 = %136.0;
    %144 = @func_3217() /* ty=Tensor[(13, 1, 1), float64] */;
    %145 = sinh(%140) /* ty=Tensor[(13, 1, 1), float32] */;
    (%141, %142, %143, %144, %145)
  };
  %146() /* ty=(Tensor[(13, ?, ?), bool], Tensor[(13, ?, ?), float64], Tensor[(13, ?, ?), float64], Tensor[(13, 1, 1), float64], Tensor[(13, 1, 1), float32]) */
}

def @func_3059() -> (Tensor[(13, 1, 1), float64],) {
  %147 = @func_2947() /* ty=(Tensor[(13, 1, 1), float64], Tensor[(13, ?, ?), uint32]) */;
  %148 = %147.0;
  (%148,)
}

def @func_3636() -> (Tensor[(14, 11, 6), float64],) {
  @func_3634() /* ty=(Tensor[(14, 11, 6), float64],) */
}

def @func_7391() -> (Tensor[(13, 1, 1), float64], Tensor[(315), int16]) {
  %149 = @func_7332() /* ty=(Tensor[(13, 1, 1), float64],) */;
  %150 = @func_5166() /* ty=(Tensor[(315), int16], Tensor[(13, 1, 1), float64]) */;
  %151 = %149.0;
  %152 = %150.0;
  (%151, %152)
}

def @func_3021() -> (Tensor[(13, 1, 1), float64], Tensor[(1, 10, 16), float32], Tensor[(13, 1, 1), float64]) {
  @func_3019() /* ty=(Tensor[(13, 1, 1), float64], Tensor[(1, 10, 16), float32], Tensor[(13, 1, 1), float64]) */
}

def @func_9000(%var_8998: Tensor[(13, 12, 5), uint32]) -> (Tensor[(13, 12, 5), bool],) {
  @func_8997(%var_8998) /* ty=(Tensor[(13, 12, 5), bool],) */
}

def @func_1729() -> (Tensor[(13, 1, 1), float64],) {
  %153 = @func_1499() /* ty=Tensor[(13, 1, 1), float64] */;
  (%153,)
}

def @func_2514() -> (Tensor[(13, 1, 1), float64],) {
  @func_2512() /* ty=(Tensor[(13, 1, 1), float64],) */
}

def @func_4207() -> (Tensor[(13, 1, 1), float64],) {
  @func_4205() /* ty=(Tensor[(13, 1, 1), float64],) */
}

def @func_6901(%var_6890: Tensor[(936), float64]) -> (Tensor[(13, 1, 1), float64], Tensor[(13, 1, 1), float64], Tensor[(13, 1, 1), float64], Tensor[(936), float64], Tensor[(13, 1, 1), float64]) {
  %154 = @func_732() /* ty=(Tensor[(13, 1, 1), float64],) */;
  %155 = @func_4604() /* ty=(Tensor[(13, 1, 1), float64],) */;
  %156 = cast(%var_6890, dtype="float64") /* ty=Tensor[(936), float64] */;
  %157 = reshape(%156, newshape=[13, 8, 9]) /* ty=Tensor[(13, 8, 9), float64] */;
  %158 = @func_3335(%157) /* ty=(Tensor[(13, 8, 9), bool], Tensor[(13, ?, ?), float64], Tensor[(13, 1, 1), float64]) */;
  %159 = @func_2012() /* ty=(Tensor[(13, 1, 1), float64], Tensor[(13, 1, 1), float64], Tensor[(13, 1, 1), float64]) */;
  %160 = %154.0;
  %161 = %155.0;
  %162 = %158.2;
  %163 = %159.2;
  (%160, %161, %162, %var_6890, %163)
}

def @func_6638() -> Tensor[(13, ?, ?), float64] {
  @func_6636() /* ty=Tensor[(13, ?, ?), float64] */
}

def @func_5297() -> Tensor[(1, 10, 16), float32] {
  @func_5295() /* ty=Tensor[(1, 10, 16), float32] */
}

def @func_13091() -> (Tensor[(13, 1, 416), bool],) {
  %171 = fn () -> (Tensor[(13, 1, 416), bool],) {
    %164 = @func_964() /* ty=(Tensor[(13, 1, 1), float64],) */;
    %165 = %164.0;
    %166 = @func_9055() /* ty=(Tensor[(13, 1, 1), float32], Tensor[(416), float64]) */;
    %167 = %166.1;
    %168 = cast(%165, dtype="bool") /* ty=Tensor[(13, 1, 1), bool] */;
    %169 = cast(%167, dtype="bool") /* ty=Tensor[(416), bool] */;
    %170 = equal(%168, %169) /* ty=Tensor[(13, 1, 416), bool] */;
    (%170,)
  };
  %171() /* ty=(Tensor[(13, 1, 416), bool],) */
}

def @func_8624(%var_8623: Tensor[(192), float32]) -> (Tensor[(13, ?, ?), float64], Tensor[(12, 8, 2), float32], Tensor[(192), float32], Tensor[(13, 1, 1), float64], Tensor[(936), float64]) {
  %181 = fn (%var_8605: Tensor[(192), float32]) -> (Tensor[(13, ?, ?), float64], Tensor[(12, 8, 2), float32], Tensor[(192), float32], Tensor[(13, 1, 1), float64], Tensor[(936), float64]) {
    %172 = cast(%var_8605, dtype="float32") /* ty=Tensor[(192), float32] */;
    %173 = reshape(%172, newshape=[12, 8, 2]) /* ty=Tensor[(12, 8, 2), float32] */;
    %174 = @func_5797(%173) /* ty=(Tensor[(12, 8, 2), float32],) */;
    %175 = cast(meta[relay.Constant][6] /* ty=Tensor[(936), float64] */, dtype="float64") /* ty=Tensor[(936), float64] */;
    %176 = reshape(%175, newshape=[936]) /* ty=Tensor[(936), float64] */;
    %177 = @func_4099(%176) /* ty=(Tensor[(13, 11, 9), float64], Tensor[(13, 1, 1), float64], Tensor[(13, 1, 1), float64], Tensor[(13, 1, 1), float64], Tensor[(936), float64], Tensor[(13, 10, 16), float32], Tensor[(196), float64], Tensor[(13, 1, 1), float32]) */;
    %178 = @func_5837() /* ty=Tensor[(13, ?, ?), float64] */;
    %179 = %174.0;
    %180 = %177.3;
    (%178, %179, %var_8605, %180, meta[relay.Constant][6] /* ty=Tensor[(936), float64] */)
  };
  %181(%var_8623) /* ty=(Tensor[(13, ?, ?), float64], Tensor[(12, 8, 2), float32], Tensor[(192), float32], Tensor[(13, 1, 1), float64], Tensor[(936), float64]) */
}

def @func_5715() -> (Tensor[(13, 1, 1), float64], Tensor[(13, 1, 1), float64], Tensor[(13, 1, 1), float64]) {
  @func_5713() /* ty=(Tensor[(13, 1, 1), float64], Tensor[(13, 1, 1), float64], Tensor[(13, 1, 1), float64]) */
}

def @func_2820() -> (Tensor[(416), float64], Tensor[(416), float64], Tensor[(13, 1, 1), float64]) {
  %188 = fn () -> (Tensor[(416), float64], Tensor[(416), float64], Tensor[(13, 1, 1), float64]) {
    %182 = @func_1776() /* ty=(Tensor[(13, 1, 1), float64], Tensor[(13, 1, 1), float64], Tensor[(13, 1, 1), float64], Tensor[(13, 1, 1), float64], Tensor[(416), float64]) */;
    %183 = @func_2575() /* ty=(Tensor[(13, 1, 1), float64], Tensor[(13, 1, 1), float64], Tensor[(416), float64], Tensor[(13, 1, 1), float64]) */;
    %184 = @func_1541() /* ty=(Tensor[(13, 1, 1), float64], Tensor[(13, ?, ?), float64]) */;
    %185 = %182.4;
    %186 = %183.2;
    %187 = %184.0;
    (%185, %186, %187)
  };
  %188() /* ty=(Tensor[(416), float64], Tensor[(416), float64], Tensor[(13, 1, 1), float64]) */
}

def @func_5797(%var_5794: Tensor[(12, 8, 2), float32]) -> (Tensor[(12, 8, 2), float32],) {
  %189 = cast(%var_5794, dtype="float32") /* ty=Tensor[(12, 8, 2), float32] */;
  %190 = cos(%189) /* ty=Tensor[(12, 8, 2), float32] */;
  (%190,)
}

def @func_2347() -> (Tensor[(13, ?, ?), float64],) {
  %193 = fn () -> (Tensor[(13, ?, ?), float64],) {
    %191 = @func_1304() /* ty=(Tensor[(13, ?, ?), float64], Tensor[(13, ?, ?), float64]) */;
    %192 = %191.0;
    (%192,)
  };
  %193() /* ty=(Tensor[(13, ?, ?), float64],) */
}

def @func_7196() -> (Tensor[(1, 10, 16), float32],) {
  %195 = fn () -> (Tensor[(1, 10, 16), float32],) {
    %194 = @func_5295() /* ty=Tensor[(1, 10, 16), float32] */;
    (%194,)
  };
  %195() /* ty=(Tensor[(1, 10, 16), float32],) */
}

def @func_751() -> Tensor[(1, 10, 16), float32] {
  %197 = fn () -> Tensor[(1, 10, 16), float32] {
    %196 = cast(meta[relay.Constant][7] /* ty=Tensor[(1, 10, 16), float32] */, dtype="float32") /* ty=Tensor[(1, 10, 16), float32] */;
    sinh(%196) /* ty=Tensor[(1, 10, 16), float32] */
  };
  %197() /* ty=Tensor[(1, 10, 16), float32] */
}

def @func_6152() -> (Tensor[(13, 1, 1), float64],) {
  @func_6150() /* ty=(Tensor[(13, 1, 1), float64],) */
}

def @func_12919(%var_12914: Tensor[(504, 1), int8]) -> (Tensor[(13, 1, 1), float64], Tensor[(5, 5, 4), float32], Tensor[(13, 1, 1), float64], Tensor[(12, 7, 6), bool], Tensor[(504, 1), int8]) {
  %198 = @func_11074() /* ty=(Tensor[(5, 5, 4), float32], Tensor[(5, 5, 4), float64]) */;
  %199 = %198.1;
  %200 = cast(%199, dtype="float32") /* ty=Tensor[(5, 5, 4), float32] */;
  %201 = @func_1541() /* ty=(Tensor[(13, 1, 1), float64], Tensor[(13, ?, ?), float64]) */;
  %202 = cast(%var_12914, dtype="int8") /* ty=Tensor[(504, 1), int8] */;
  %203 = cast(%var_12914, dtype="int8") /* ty=Tensor[(504, 1), int8] */;
  %204 = reshape(%202, newshape=[12, 7, 6]) /* ty=Tensor[(12, 7, 6), int8] */;
  %205 = reshape(%203, newshape=[12, 7, 6]) /* ty=Tensor[(12, 7, 6), int8] */;
  %206 = @func_10111(%204, %205) /* ty=(Tensor[(12, 7, 6), bool],) */;
  %207 = @func_5462() /* ty=Tensor[(13, 1, 1), float64] */;
  %208 = sinh(%200) /* ty=Tensor[(5, 5, 4), float32] */;
  %209 = %201.0;
  %210 = %206.0;
  (%207, %208, %209, %210, %var_12914)
}

def @func_2728() -> Tensor[(13, ?, ?), uint32] {
  %211 = @func_1144() /* ty=(Tensor[(13, 1, 1), float64], Tensor[(1, 10, 16), float32]) */;
  %212 = %211.0;
  %213 = @func_732() /* ty=(Tensor[(13, 1, 1), float64],) */;
  %214 = %213.0;
  %215 = cast(%214, dtype="uint32") /* ty=Tensor[(13, 1, 1), uint32] */;
  %216 = shape_of(%212, dtype="int32") /* ty=Tensor[(3), int32] */;
  %217 = cast(%212, dtype="uint32") /* ty=Tensor[(13, 1, 1), uint32] */;
  %218 = dyn.reshape(%215, %216, newshape=[]) /* ty=Tensor[(?, ?, ?), uint32] */;
  logical_xor(%217, %218) /* ty=Tensor[(13, ?, ?), uint32] */
}

def @func_12551() -> Tensor[(13, 1, 1), float64] {
  @func_5989() /* ty=Tensor[(13, 1, 1), float64] */
}

def @func_12094() -> (Tensor[(13, 1, 1), float64], Tensor[(1, 10, 16), float32]) {
  %219 = @func_7442() /* ty=(Tensor[(1, 10, 16), float32], Tensor[(13, 1, 1), float64], Tensor[(13, 1, 1), float64], Tensor[(13, 1, 1), float64]) */;
  %220 = @func_2439() /* ty=(Tensor[(1, 10, 16), float32], Tensor[(13, 7, 10), float32]) */;
  %221 = %219.2;
  %222 = %220.0;
  (%221, %222)
}

def @func_1146() -> (Tensor[(13, 1, 1), float64], Tensor[(1, 10, 16), float32]) {
  @func_1144() /* ty=(Tensor[(13, 1, 1), float64], Tensor[(1, 10, 16), float32]) */
}

def @func_2231() -> (Tensor[(13, 1, 1), float64], Tensor[(13, 1, 1), float64], Tensor[(13, 1, 1), float64]) {
  %229 = fn () -> (Tensor[(13, 1, 1), float64], Tensor[(13, 1, 1), float64], Tensor[(13, 1, 1), float64]) {
    %223 = @func_964() /* ty=(Tensor[(13, 1, 1), float64],) */;
    %224 = @func_1804() /* ty=(Tensor[(13, 1, 1), float64],) */;
    %225 = @func_659() /* ty=(Tensor[(13, 1, 1), float64],) */;
    %226 = %223.0;
    %227 = %224.0;
    %228 = %225.0;
    (%226, %227, %228)
  };
  %229() /* ty=(Tensor[(13, 1, 1), float64], Tensor[(13, 1, 1), float64], Tensor[(13, 1, 1), float64]) */
}

def @func_7334() -> (Tensor[(13, 1, 1), float64],) {
  @func_7332() /* ty=(Tensor[(13, 1, 1), float64],) */
}

def @func_7532() -> Tensor[(14, 11, 6), float64] {
  %231 = fn () -> Tensor[(14, 11, 6), float64] {
    %230 = @func_3634() /* ty=(Tensor[(14, 11, 6), float64],) */;
    %230.0
  };
  %231() /* ty=Tensor[(14, 11, 6), float64] */
}

def @func_7260() -> (Tensor[(13, 1, 1), float64],) {
  %232 = @func_6538() /* ty=(Tensor[(5, 9, 7), int16], Tensor[(13, 1, 1), float64], Tensor[(13, 1, 1), float64]) */;
  %233 = %232.1;
  (%233,)
}

def @func_861() -> (Tensor[(13, 1, 1), float64], Tensor[(13, 1, 1), float64], Tensor[(13, 10, 16), bool], Tensor[(13, 10, 16), uint8], Tensor[(1, 10, 16), float32]) {
  %234 = @func_703() /* ty=(Tensor[(13, 1, 1), float64], Tensor[(13, 1, 1), float64], Tensor[(13, 1, 1), float64]) */;
  %235 = @func_643() /* ty=(Tensor[(13, 1, 1), float64], Tensor[(13, 1, 1), float64], Tensor[(13, 1, 1), float64]) */;
  %236 = @func_750() /* ty=Tensor[(1, 10, 16), float32] */;
  %237 = cast(%236, dtype="float64") /* ty=Tensor[(1, 10, 16), float64] */;
  %238 = acos(%237) /* ty=Tensor[(1, 10, 16), float64] */;
  %239 = cast(%238, dtype="float64") /* ty=Tensor[(1, 10, 16), float64] */;
  %240 = tan(%239) /* ty=Tensor[(1, 10, 16), float64] */;
  %241 = @func_585() /* ty=Tensor[(13, 1, 1), float64] */;
  %242 = cast(%240, dtype="bool") /* ty=Tensor[(1, 10, 16), bool] */;
  %243 = cast(%241, dtype="bool") /* ty=Tensor[(13, 1, 1), bool] */;
  %244 = cast(%238, dtype="uint8") /* ty=Tensor[(1, 10, 16), uint8] */;
  %245 = cast(%241, dtype="uint8") /* ty=Tensor[(13, 1, 1), uint8] */;
  %246 = %234.0;
  %247 = %235.0;
  %248 = logical_and(%242, %243) /* ty=Tensor[(13, 10, 16), bool] */;
  %249 = right_shift(%244, %245) /* ty=Tensor[(13, 10, 16), uint8] */;
  %250 = @func_750() /* ty=Tensor[(1, 10, 16), float32] */;
  (%246, %247, %248, %249, %250)
}

def @func_9523(%var_9522: Tensor[(1, 936), float64]) -> (Tensor[(13, 1, 1), float32], Tensor[(196), float64], Tensor[(1, 936), float64]) {
  %257 = fn (%var_9502: Tensor[(1, 936), float64]) -> (Tensor[(13, 1, 1), float32], Tensor[(196), float64], Tensor[(1, 936), float64]) {
    %251 = @func_9411() /* ty=(Tensor[(13, 1, 1), float32],) */;
    %252 = cast(%var_9502, dtype="float64") /* ty=Tensor[(1, 936), float64] */;
    %253 = reshape(%252, newshape=[936]) /* ty=Tensor[(936), float64] */;
    %254 = @func_4099(%253) /* ty=(Tensor[(13, 11, 9), float64], Tensor[(13, 1, 1), float64], Tensor[(13, 1, 1), float64], Tensor[(13, 1, 1), float64], Tensor[(936), float64], Tensor[(13, 10, 16), float32], Tensor[(196), float64], Tensor[(13, 1, 1), float32]) */;
    %255 = %251.0;
    %256 = %254.6;
    (%255, %256, %var_9502)
  };
  %257(%var_9522) /* ty=(Tensor[(13, 1, 1), float32], Tensor[(196), float64], Tensor[(1, 936), float64]) */
}

def @func_10607() -> Tensor[(1152), float32] {
  %258 = @func_8143() /* ty=(Tensor[(1152), float32], Tensor[(14, 11, 6), float64], Tensor[(13, 1, 1), float64]) */;
  %258.0
}

def @func_11136() -> Tensor[(13, 1, 1), float64] {
  @func_11134() /* ty=Tensor[(13, 1, 1), float64] */
}

def @func_7581() -> Tensor[(6, 4, 10), float32] {
  %259 = cast(meta[relay.Constant][8] /* ty=Tensor[(6, 4, 10), float32] */, dtype="float32") /* ty=Tensor[(6, 4, 10), float32] */;
  sigmoid(%259) /* ty=Tensor[(6, 4, 10), float32] */
}

def @func_11570() -> (Tensor[(13, ?, ?), float64],) {
  %262 = fn () -> (Tensor[(13, ?, ?), float64],) {
    %260 = @func_3205() /* ty=(Tensor[(13, ?, ?), float64], Tensor[(13, ?, ?), float64]) */;
    %261 = %260.1;
    (%261,)
  };
  %262() /* ty=(Tensor[(13, ?, ?), float64],) */
}

def @func_7012() -> Tensor[(13, ?, ?), uint32] {
  @func_7010() /* ty=Tensor[(13, ?, ?), uint32] */
}

def @func_8685(%var_8683: Tensor[(13, 14, 1), float64]) -> (Tensor[(13, 14, 1), bool],) {
  @func_8682(%var_8683) /* ty=(Tensor[(13, 14, 1), bool],) */
}

def @func_5435(%var_5418: Tensor[(39, 6), float64]) -> (Tensor[(13, 1, 1), float64], Tensor[(13, 1, 1), float64], Tensor[(13, 39, 6), bool]) {
  %263 = @func_2575() /* ty=(Tensor[(13, 1, 1), float64], Tensor[(13, 1, 1), float64], Tensor[(416), float64], Tensor[(13, 1, 1), float64]) */;
  %264 = cast(%var_5418, dtype="float64") /* ty=Tensor[(39, 6), float64] */;
  %265 = reshape(%264, newshape=[13, 2, 9]) /* ty=Tensor[(13, 2, 9), float64] */;
  %266 = @func_5143(%265) /* ty=(Tensor[(13, 2, 9), int32], Tensor[(13, 1, 1), float64]) */;
  %267 = @func_643() /* ty=(Tensor[(13, 1, 1), float64], Tensor[(13, 1, 1), float64], Tensor[(13, 1, 1), float64]) */;
  %268 = %267.0;
  %269 = cast(%var_5418, dtype="bool") /* ty=Tensor[(39, 6), bool] */;
  %270 = cast(%268, dtype="bool") /* ty=Tensor[(13, 1, 1), bool] */;
  %271 = %263.0;
  %272 = %266.1;
  %273 = logical_or(%269, %270) /* ty=Tensor[(13, 39, 6), bool] */;
  (%271, %272, %273)
}

def @func_4787(%var_4785: Tensor[(13, 13, 14), float64], %var_4786: Tensor[(315), int16]) -> (Tensor[(13, 13, 14), bool], Tensor[(13, 1, 1), float64], Tensor[(13, 1, 1), float64], Tensor[(1, 10, 16), float32], Tensor[(315), int16]) {
  @func_4783(%var_4785, %var_4786) /* ty=(Tensor[(13, 13, 14), bool], Tensor[(13, 1, 1), float64], Tensor[(13, 1, 1), float64], Tensor[(1, 10, 16), float32], Tensor[(315), int16]) */
}

def @func_8770() -> Tensor[(7, 9), int16] {
  @func_8768() /* ty=Tensor[(7, 9), int16] */
}

def @func_1927(%var_1925: Tensor[(63), int16]) -> (Tensor[(13, 1, 1), float64], Tensor[(13, 10, 16), uint8], Tensor[(5, 9, 7), int16], Tensor[(63), int16], Tensor[(315), int16]) {
  @func_1924(%var_1925) /* ty=(Tensor[(13, 1, 1), float64], Tensor[(13, 10, 16), uint8], Tensor[(5, 9, 7), int16], Tensor[(63), int16], Tensor[(315), int16]) */
}

def @func_2370() -> (Tensor[(13, ?, ?), float64], Tensor[(13, 1, 1), float64]) {
  %274 = @func_1468() /* ty=(Tensor[(13, ?, ?), float64], Tensor[(13, 1, 1), float64]) */;
  %275 = @func_1729() /* ty=(Tensor[(13, 1, 1), float64],) */;
  %276 = %274.0;
  %277 = %275.0;
  (%276, %277)
}

def @func_686() -> (Tensor[(13, 1, 1), float64], Tensor[(13, 1, 1), float64]) {
  @func_684() /* ty=(Tensor[(13, 1, 1), float64], Tensor[(13, 1, 1), float64]) */
}

def @func_586() -> Tensor[(13, 1, 1), float64] {
  %279 = fn () -> Tensor[(13, 1, 1), float64] {
    %278 = cast(meta[relay.Constant][9] /* ty=Tensor[(13, 1, 1), float64] */, dtype="float64") /* ty=Tensor[(13, 1, 1), float64] */;
    erf(%278) /* ty=Tensor[(13, 1, 1), float64] */
  };
  %279() /* ty=Tensor[(13, 1, 1), float64] */
}

def @func_1541() -> (Tensor[(13, 1, 1), float64], Tensor[(13, ?, ?), float64]) {
  %280 = @func_659() /* ty=(Tensor[(13, 1, 1), float64],) */;
  %281 = @func_1304() /* ty=(Tensor[(13, ?, ?), float64], Tensor[(13, ?, ?), float64]) */;
  %282 = %280.0;
  %283 = %281.0;
  (%282, %283)
}

def @func_10328() -> (Tensor[(13, 1, 1), float64], Tensor[(9, 1, 13), float64]) {
  @func_10326() /* ty=(Tensor[(13, 1, 1), float64], Tensor[(9, 1, 13), float64]) */
}

def @func_13040() -> (Tensor[(13, 1, 63), uint8], Tensor[(13, 1, 63), uint16]) {
  @func_13038() /* ty=(Tensor[(13, 1, 63), uint8], Tensor[(13, 1, 63), uint16]) */
}

def @func_3906() -> Tensor[(13, 1, 1), float64] {
  %285 = fn () -> Tensor[(13, 1, 1), float64] {
    %284 = @func_703() /* ty=(Tensor[(13, 1, 1), float64], Tensor[(13, 1, 1), float64], Tensor[(13, 1, 1), float64]) */;
    %284.2
  };
  %285() /* ty=Tensor[(13, 1, 1), float64] */
}

def @func_7888() -> (Tensor[(13, 1, 1), float64],) {
  %286 = @func_6826() /* ty=(Tensor[(13, ?, ?), float64], Tensor[(13, 1, 1), float64]) */;
  %287 = %286.1;
  (%287,)
}

def @func_1731() -> (Tensor[(13, 1, 1), float64],) {
  @func_1729() /* ty=(Tensor[(13, 1, 1), float64],) */
}

def @func_10589() -> Tensor[(13, 1, 1), float64] {
  %289 = fn () -> Tensor[(13, 1, 1), float64] {
    %288 = @func_7683() /* ty=(Tensor[(13, 1, 1), float64],) */;
    %288.0
  };
  %289() /* ty=Tensor[(13, 1, 1), float64] */
}

def @func_3219() -> Tensor[(13, 1, 1), float64] {
  @func_3217() /* ty=Tensor[(13, 1, 1), float64] */
}

def @func_12167() -> Tensor[(416), float64] {
  %291 = fn () -> Tensor[(416), float64] {
    %290 = @func_9055() /* ty=(Tensor[(13, 1, 1), float32], Tensor[(416), float64]) */;
    %290.1
  };
  %291() /* ty=Tensor[(416), float64] */
}

def @func_11500() -> (Tensor[(13, 6, 4), float32],) {
  @func_11498() /* ty=(Tensor[(13, 6, 4), float32],) */
}

def @func_12405() -> (Tensor[(196), float64], Tensor[(13, 1, 1), float64]) {
  %296 = fn () -> (Tensor[(196), float64], Tensor[(13, 1, 1), float64]) {
    %292 = @func_9016() /* ty=(Tensor[(196), float64],) */;
    %293 = @func_7442() /* ty=(Tensor[(1, 10, 16), float32], Tensor[(13, 1, 1), float64], Tensor[(13, 1, 1), float64], Tensor[(13, 1, 1), float64]) */;
    %294 = %292.0;
    %295 = %293.1;
    (%294, %295)
  };
  %296() /* ty=(Tensor[(196), float64], Tensor[(13, 1, 1), float64]) */
}

def @func_12450(%var_12448: Tensor[(9, 10, 15), float32]) -> (Tensor[(9, 10, 15), float32], Tensor[(13, ?, ?), float64]) {
  @func_12447(%var_12448) /* ty=(Tensor[(9, 10, 15), float32], Tensor[(13, ?, ?), float64]) */
}

def @func_3801() -> (Tensor[(13, ?, ?), uint32], Tensor[(13, ?, ?), float64], Tensor[(14, 11, 6), float64], Tensor[(13, 1, 1), float64]) {
  %312 = fn () -> (Tensor[(13, ?, ?), uint32], Tensor[(13, ?, ?), float64], Tensor[(14, 11, 6), float64], Tensor[(13, 1, 1), float64]) {
    %297 = @func_3398() /* ty=(Tensor[(13, 1, 1), float64],) */;
    %298 = %297.0;
    %299 = @func_1776() /* ty=(Tensor[(13, 1, 1), float64], Tensor[(13, 1, 1), float64], Tensor[(13, 1, 1), float64], Tensor[(13, 1, 1), float64], Tensor[(416), float64]) */;
    %300 = %299.0;
    %301 = cast(%300, dtype="uint32") /* ty=Tensor[(13, 1, 1), uint32] */;
    %302 = shape_of(%298, dtype="int32") /* ty=Tensor[(3), int32] */;
    %303 = cast(%298, dtype="uint32") /* ty=Tensor[(13, 1, 1), uint32] */;
    %304 = dyn.reshape(%301, %302, newshape=[]) /* ty=Tensor[(?, ?, ?), uint32] */;
    %305 = @func_3205() /* ty=(Tensor[(13, ?, ?), float64], Tensor[(13, ?, ?), float64]) */;
    %306 = @func_3634() /* ty=(Tensor[(14, 11, 6), float64],) */;
    %307 = @func_2947() /* ty=(Tensor[(13, 1, 1), float64], Tensor[(13, ?, ?), uint32]) */;
    %308 = bitwise_and(%303, %304) /* ty=Tensor[(13, ?, ?), uint32] */;
    %309 = %305.1;
    %310 = %306.0;
    %311 = %307.0;
    (%308, %309, %310, %311)
  };
  %312() /* ty=(Tensor[(13, ?, ?), uint32], Tensor[(13, ?, ?), float64], Tensor[(14, 11, 6), float64], Tensor[(13, 1, 1), float64]) */
}

def @func_2302() -> Tensor[(13, 1, 1), float64] {
  @func_2300() /* ty=Tensor[(13, 1, 1), float64] */
}

def @func_5582() -> (Tensor[(1, 10, 16), float32],) {
  %313 = @func_1972() /* ty=Tensor[(1, 10, 16), float32] */;
  (%313,)
}

def @func_7717() -> Tensor[(13, 1, 1), float64] {
  %315 = fn () -> Tensor[(13, 1, 1), float64] {
    %314 = @func_5232() /* ty=(Tensor[(13, 1, 1), float64], Tensor[(13, 1, 1), float64]) */;
    %314.1
  };
  %315() /* ty=Tensor[(13, 1, 1), float64] */
}

def @func_10868() -> (Tensor[(13, 1, 1), float64],) {
  %316 = @func_10535() /* ty=Tensor[(13, 1, 1), float64] */;
  (%316,)
}

def @func_11756(%var_11754: Tensor[(48), uint64], %var_11755: Tensor[(504), int8]) -> (Tensor[(13, 1, 1), float64], Tensor[(13, 8, 14), bool], Tensor[(13, 2, ?), float32], Tensor[(13, 1, 1), float64], Tensor[(13, 5, 13), uint32], Tensor[(13, 8, 14), float64], Tensor[(13, 1, 1), float64], Tensor[(13, 1, 1), float64], Tensor[(13, 1, 1), float64], Tensor[(13, 8, 14), float32], Tensor[(6, 3, 16), uint64], Tensor[(48), uint64], Tensor[(12, 7, 6), bool], Tensor[(504), int8], Tensor[(14, 11, 6), float64]) {
  %355 = fn (%var_11710: Tensor[(48), uint64], %var_11713: Tensor[(504), int8]) -> (Tensor[(13, 1, 1), float64], Tensor[(13, 8, 14), bool], Tensor[(13, 2, ?), float32], Tensor[(13, 1, 1), float64], Tensor[(13, 5, 13), uint32], Tensor[(13, 8, 14), float64], Tensor[(13, 1, 1), float64], Tensor[(13, 1, 1), float64], Tensor[(13, 1, 1), float64], Tensor[(13, 8, 14), float32], Tensor[(6, 3, 16), uint64], Tensor[(48), uint64], Tensor[(12, 7, 6), bool], Tensor[(504), int8], Tensor[(14, 11, 6), float64]) {
    %317 = cast(meta[relay.Constant][10] /* ty=Tensor[(2, 1), int8] */, dtype="int8") /* ty=Tensor[(2, 1), int8] */;
    %318 = reshape(%317, newshape=[1, 2, 1]) /* ty=Tensor[(1, 2, 1), int8] */;
    %319 = @func_8866(%318) /* ty=(Tensor[(15, 2, 6), uint64], Tensor[(1, 2, 63), float64], Tensor[(13, 1, 1), float64]) */;
    %320 = @func_7442() /* ty=(Tensor[(1, 10, 16), float32], Tensor[(13, 1, 1), float64], Tensor[(13, 1, 1), float64], Tensor[(13, 1, 1), float64]) */;
    %321 = %320.3;
    %322 = cast(%321, dtype="bool") /* ty=Tensor[(13, 1, 1), bool] */;
    %323 = cast(meta[relay.Constant][11] /* ty=Tensor[(13, 8, 14), float64] */, dtype="bool") /* ty=Tensor[(13, 8, 14), bool] */;
    %324 = @func_6636() /* ty=Tensor[(13, ?, ?), float64] */;
    %325 = cast(%324, dtype="float32") /* ty=Tensor[(13, ?, ?), float32] */;
    %326 = cast(meta[relay.Constant][10] /* ty=Tensor[(2, 1), int8] */, dtype="float32") /* ty=Tensor[(2, 1), float32] */;
    %327 = @func_5489() /* ty=(Tensor[(13, 5, 13), uint32], Tensor[(13, 1, 1), float64]) */;
    %328 = cast(meta[relay.Constant][11] /* ty=Tensor[(13, 8, 14), float64] */, dtype="float64") /* ty=Tensor[(13, 8, 14), float64] */;
    %329 = cast(%324, dtype="float64") /* ty=Tensor[(13, ?, ?), float64] */;
    %330 = @func_3247() /* ty=(Tensor[(13, 1, 1), float64], Tensor[(416), float64], Tensor[(13, ?, ?), float64]) */;
    %331 = @func_7807() /* ty=(Tensor[(13, 1, 1), float64],) */;
    %332 = @func_2012() /* ty=(Tensor[(13, 1, 1), float64], Tensor[(13, 1, 1), float64], Tensor[(13, 1, 1), float64]) */;
    %333 = cast(meta[relay.Constant][11] /* ty=Tensor[(13, 8, 14), float64] */, dtype="float32") /* ty=Tensor[(13, 8, 14), float32] */;
    %334 = cast(%var_11710, dtype="uint64") /* ty=Tensor[(48), uint64] */;
    %335 = reshape(%334, newshape=[1, 3, 16]) /* ty=Tensor[(1, 3, 16), uint64] */;
    %336 = @func_4829(%335) /* ty=(Tensor[(6, 3, 16), uint64],) */;
    %337 = cast(%var_11713, dtype="int8") /* ty=Tensor[(504), int8] */;
    %338 = cast(%var_11713, dtype="int8") /* ty=Tensor[(504), int8] */;
    %339 = reshape(%337, newshape=[12, 7, 6]) /* ty=Tensor[(12, 7, 6), int8] */;
    %340 = reshape(%338, newshape=[12, 7, 6]) /* ty=Tensor[(12, 7, 6), int8] */;
    %341 = @func_10111(%339, %340) /* ty=(Tensor[(12, 7, 6), bool],) */;
    %342 = %319.2;
    %343 = greater_equal(%322, %323) /* ty=Tensor[(13, 8, 14), bool] */;
    %344 = floor_divide(%325, %326) /* ty=Tensor[(13, 2, ?), float32] */;
    %345 = @func_7668() /* ty=Tensor[(13, 1, 1), float64] */;
    %346 = %327.0;
    %347 = floor_divide(%328, %329) /* ty=Tensor[(13, 8, 14), float64] */;
    %348 = %330.0;
    %349 = %331.0;
    %350 = %332.1;
    %351 = sqrt(%333) /* ty=Tensor[(13, 8, 14), float32] */;
    %352 = %336.0;
    %353 = %341.0;
    %354 = @func_9163() /* ty=Tensor[(14, 11, 6), float64] */;
    (%342, %343, %344, %345, %346, %347, %348, %349, %350, %351, %352, %var_11710, %353, %var_11713, %354)
  };
  %355(%var_11754, %var_11755) /* ty=(Tensor[(13, 1, 1), float64], Tensor[(13, 8, 14), bool], Tensor[(13, 2, ?), float32], Tensor[(13, 1, 1), float64], Tensor[(13, 5, 13), uint32], Tensor[(13, 8, 14), float64], Tensor[(13, 1, 1), float64], Tensor[(13, 1, 1), float64], Tensor[(13, 1, 1), float64], Tensor[(13, 8, 14), float32], Tensor[(6, 3, 16), uint64], Tensor[(48), uint64], Tensor[(12, 7, 6), bool], Tensor[(504), int8], Tensor[(14, 11, 6), float64]) */
}

def @func_4523() -> (Tensor[(63), float32],) {
  %362 = fn () -> (Tensor[(63), float32],) {
    %356 = @func_4425() /* ty=(Tensor[(416), float64], Tensor[(63), int16], Tensor[(315), int16]) */;
    %357 = %356.1;
    %358 = cast(%357, dtype="float64") /* ty=Tensor[(63), float64] */;
    %359 = acos(%358) /* ty=Tensor[(63), float64] */;
    %360 = cast(%359, dtype="float32") /* ty=Tensor[(63), float32] */;
    %361 = cos(%360) /* ty=Tensor[(63), float32] */;
    (%361,)
  };
  %362() /* ty=(Tensor[(63), float32],) */
}

def @func_7442() -> (Tensor[(1, 10, 16), float32], Tensor[(13, 1, 1), float64], Tensor[(13, 1, 1), float64], Tensor[(13, 1, 1), float64]) {
  %363 = @func_1144() /* ty=(Tensor[(13, 1, 1), float64], Tensor[(1, 10, 16), float32]) */;
  %364 = @func_1804() /* ty=(Tensor[(13, 1, 1), float64],) */;
  %365 = @func_5989() /* ty=Tensor[(13, 1, 1), float64] */;
  %366 = cast(%365, dtype="float64") /* ty=Tensor[(13, 1, 1), float64] */;
  %367 = @func_1468() /* ty=(Tensor[(13, ?, ?), float64], Tensor[(13, 1, 1), float64]) */;
  %368 = %363.1;
  %369 = %364.0;
  %370 = atanh(%366) /* ty=Tensor[(13, 1, 1), float64] */;
  %371 = %367.1;
  (%368, %369, %370, %371)
}

def @func_1777() -> (Tensor[(13, 1, 1), float64], Tensor[(13, 1, 1), float64], Tensor[(13, 1, 1), float64], Tensor[(13, 1, 1), float64], Tensor[(416), float64]) {
  %381 = fn () -> (Tensor[(13, 1, 1), float64], Tensor[(13, 1, 1), float64], Tensor[(13, 1, 1), float64], Tensor[(13, 1, 1), float64], Tensor[(416), float64]) {
    %372 = @func_659() /* ty=(Tensor[(13, 1, 1), float64],) */;
    %373 = @func_1468() /* ty=(Tensor[(13, ?, ?), float64], Tensor[(13, 1, 1), float64]) */;
    %374 = cast(meta[relay.Constant][12] /* ty=Tensor[(416), float64] */, dtype="float64") /* ty=Tensor[(416), float64] */;
    %375 = reshape(%374, newshape=[13, 8, 4]) /* ty=Tensor[(13, 8, 4), float64] */;
    %376 = @func_1080(%375) /* ty=(Tensor[(13, 8, 4), int16], Tensor[(13, 10, 16), uint8], Tensor[(13, 1, 1), float64], Tensor[(13, 1, 1), float64], Tensor[(13, 1, 1), float64], Tensor[(13, 1, 1), float64]) */;
    %377 = @func_1668() /* ty=Tensor[(13, 1, 1), float64] */;
    %378 = %372.0;
    %379 = %373.1;
    %380 = %376.4;
    (%377, %378, %379, %380, meta[relay.Constant][12] /* ty=Tensor[(416), float64] */)
  };
  %381() /* ty=(Tensor[(13, 1, 1), float64], Tensor[(13, 1, 1), float64], Tensor[(13, 1, 1), float64], Tensor[(13, 1, 1), float64], Tensor[(416), float64]) */
}

def @func_7941() -> (Tensor[(13, ?, ?), float64], Tensor[(13, 10, 16), float64]) {
  %382 = @func_1196() /* ty=(Tensor[(13, ?, ?), float64],) */;
  %383 = @func_5916() /* ty=(Tensor[(13, 10, 16), float64],) */;
  %384 = %382.0;
  %385 = %383.0;
  (%384, %385)
}

def @func_7733() -> (Tensor[(1, 10, 16), float64],) {
  %386 = @func_2439() /* ty=(Tensor[(1, 10, 16), float32], Tensor[(13, 7, 10), float32]) */;
  %387 = %386.0;
  %388 = cast(%387, dtype="float64") /* ty=Tensor[(1, 10, 16), float64] */;
  %389 = exp(%388) /* ty=Tensor[(1, 10, 16), float64] */;
  (%389,)
}

def @func_8243(%var_8240: Tensor[(7, 9, 14), float64]) -> (Tensor[(7, 9, 14), float64],) {
  %390 = cast(%var_8240, dtype="float64") /* ty=Tensor[(7, 9, 14), float64] */;
  %391 = atan(%390) /* ty=Tensor[(7, 9, 14), float64] */;
  (%391,)
}

def @func_8714() -> (Tensor[(13, 1, 1), float64],) {
  %392 = @func_1144() /* ty=(Tensor[(13, 1, 1), float64], Tensor[(1, 10, 16), float32]) */;
  %393 = %392.0;
  (%393,)
}

def @func_9254() -> (Tensor[(13, ?, ?), float64], Tensor[(13, ?, ?), float64], Tensor[(13, 1, 1), float64]) {
  %394 = @func_1468() /* ty=(Tensor[(13, ?, ?), float64], Tensor[(13, 1, 1), float64]) */;
  %395 = @func_8561() /* ty=(Tensor[(13, 1, 1), float64],) */;
  %396 = %394.0;
  %397 = @func_6636() /* ty=Tensor[(13, ?, ?), float64] */;
  %398 = %395.0;
  (%396, %397, %398)
}

def @func_8226() -> (Tensor[(13, ?, ?), float64],) {
  @func_8224() /* ty=(Tensor[(13, ?, ?), float64],) */
}

def @func_12053() -> (Tensor[(13, 1, 1), float64], Tensor[(13, 1, 1), float64], Tensor[(13, ?, ?), float64], Tensor[(13, 1, 1), float64], Tensor[(1, 10, 16), float32]) {
  %399 = @func_10756() /* ty=(Tensor[(13, 1, 1), float64],) */;
  %400 = @func_7442() /* ty=(Tensor[(1, 10, 16), float32], Tensor[(13, 1, 1), float64], Tensor[(13, 1, 1), float64], Tensor[(13, 1, 1), float64]) */;
  %401 = @func_9883() /* ty=(Tensor[(13, ?, ?), float64],) */;
  %402 = @func_5582() /* ty=(Tensor[(1, 10, 16), float32],) */;
  %403 = %399.0;
  %404 = %400.2;
  %405 = %401.0;
  %406 = @func_1340() /* ty=Tensor[(13, 1, 1), float64] */;
  %407 = %402.0;
  (%403, %404, %405, %406, %407)
}

def @func_10870() -> (Tensor[(13, 1, 1), float64],) {
  @func_10868() /* ty=(Tensor[(13, 1, 1), float64],) */
}

def @func_5490() -> (Tensor[(13, 5, 13), uint32], Tensor[(13, 1, 1), float64]) {
  %412 = fn () -> (Tensor[(13, 5, 13), uint32], Tensor[(13, 1, 1), float64]) {
    %408 = @func_3967() /* ty=(Tensor[(13, 5, 13), uint32], Tensor[(13, 5, 13), float64], Tensor[(13, 1, 1), float64]) */;
    %409 = @func_2498() /* ty=(Tensor[(13, 1, 1), float64], Tensor[(13, 1, 1), float64]) */;
    %410 = %408.0;
    %411 = %409.1;
    (%410, %411)
  };
  %412() /* ty=(Tensor[(13, 5, 13), uint32], Tensor[(13, 1, 1), float64]) */
}

def @func_734() -> (Tensor[(13, 1, 1), float64],) {
  @func_732() /* ty=(Tensor[(13, 1, 1), float64],) */
}

def @func_5713() -> (Tensor[(13, 1, 1), float64], Tensor[(13, 1, 1), float64], Tensor[(13, 1, 1), float64]) {
  %413 = @func_4604() /* ty=(Tensor[(13, 1, 1), float64],) */;
  %414 = @func_1776() /* ty=(Tensor[(13, 1, 1), float64], Tensor[(13, 1, 1), float64], Tensor[(13, 1, 1), float64], Tensor[(13, 1, 1), float64], Tensor[(416), float64]) */;
  %415 = @func_643() /* ty=(Tensor[(13, 1, 1), float64], Tensor[(13, 1, 1), float64], Tensor[(13, 1, 1), float64]) */;
  %416 = %413.0;
  %417 = %414.3;
  %418 = %415.1;
  (%416, %417, %418)
}

def @func_3814() -> Tensor[(13, 1, 1), float64] {
  @func_3812() /* ty=Tensor[(13, 1, 1), float64] */
}

def @func_1468() -> (Tensor[(13, ?, ?), float64], Tensor[(13, 1, 1), float64]) {
  %419 = @func_1196() /* ty=(Tensor[(13, ?, ?), float64],) */;
  %420 = %419.0;
  %421 = @func_585() /* ty=Tensor[(13, 1, 1), float64] */;
  (%420, %421)
}

def @func_1080(%var_996: Tensor[(13, 8, 4), float64]) -> (Tensor[(13, 8, 4), int16], Tensor[(13, 10, 16), uint8], Tensor[(13, 1, 1), float64], Tensor[(13, 1, 1), float64], Tensor[(13, 1, 1), float64], Tensor[(13, 1, 1), float64]) {
  %422 = @func_585() /* ty=Tensor[(13, 1, 1), float64] */;
  %423 = cast(%422, dtype="int16") /* ty=Tensor[(13, 1, 1), int16] */;
  %424 = cast(%var_996, dtype="int16") /* ty=Tensor[(13, 8, 4), int16] */;
  %425 = @func_861() /* ty=(Tensor[(13, 1, 1), float64], Tensor[(13, 1, 1), float64], Tensor[(13, 10, 16), bool], Tensor[(13, 10, 16), uint8], Tensor[(1, 10, 16), float32]) */;
  %426 = @func_732() /* ty=(Tensor[(13, 1, 1), float64],) */;
  %427 = @func_732() /* ty=(Tensor[(13, 1, 1), float64],) */;
  %428 = @func_684() /* ty=(Tensor[(13, 1, 1), float64], Tensor[(13, 1, 1), float64]) */;
  %429 = @func_703() /* ty=(Tensor[(13, 1, 1), float64], Tensor[(13, 1, 1), float64], Tensor[(13, 1, 1), float64]) */;
  %430 = logical_xor(%423, %424) /* ty=Tensor[(13, 8, 4), int16] */;
  %431 = %425.3;
  %432 = %426.0;
  %433 = %427.0;
  %434 = %428.0;
  %435 = %429.0;
  (%430, %431, %432, %433, %434, %435)
}

def @func_12553() -> Tensor[(13, 1, 1), float64] {
  @func_12551() /* ty=Tensor[(13, 1, 1), float64] */
}

def @func_3061() -> (Tensor[(13, 1, 1), float64],) {
  @func_3059() /* ty=(Tensor[(13, 1, 1), float64],) */
}

def @func_10691() -> (Tensor[(13, 1, 1), float64], Tensor[(13, ?, ?), float64], Tensor[(13, 10, 16), float64]) {
  %436 = @func_2498() /* ty=(Tensor[(13, 1, 1), float64], Tensor[(13, 1, 1), float64]) */;
  %437 = @func_10479() /* ty=(Tensor[(13, ?, ?), float64],) */;
  %438 = %436.1;
  %439 = %437.0;
  %440 = @func_7312() /* ty=Tensor[(13, 10, 16), float64] */;
  (%438, %439, %440)
}

def @func_9711() -> Tensor[(13, 10, 16), float64] {
  %441 = @func_5916() /* ty=(Tensor[(13, 10, 16), float64],) */;
  %441.0
}

def @func_9584(%var_9582: Tensor[(48), uint64]) -> (Tensor[(13, 1, 1), float64], Tensor[(6, 3, 16), uint64], Tensor[(48), uint64], Tensor[(13, 1, 1), float64]) {
  @func_9581(%var_9582) /* ty=(Tensor[(13, 1, 1), float64], Tensor[(6, 3, 16), uint64], Tensor[(48), uint64], Tensor[(13, 1, 1), float64]) */
}

def @func_2498() -> (Tensor[(13, 1, 1), float64], Tensor[(13, 1, 1), float64]) {
  %442 = @func_659() /* ty=(Tensor[(13, 1, 1), float64],) */;
  %443 = %442.0;
  %444 = @func_1499() /* ty=Tensor[(13, 1, 1), float64] */;
  (%443, %444)
}

def @func_11232(%var_11230: Tensor[(16, 5, 8), float64]) -> (Tensor[(16, 5, 8), float64],) {
  @func_11229(%var_11230) /* ty=(Tensor[(16, 5, 8), float64],) */
}

def @func_12055() -> (Tensor[(13, 1, 1), float64], Tensor[(13, 1, 1), float64], Tensor[(13, ?, ?), float64], Tensor[(13, 1, 1), float64], Tensor[(1, 10, 16), float32]) {
  @func_12053() /* ty=(Tensor[(13, 1, 1), float64], Tensor[(13, 1, 1), float64], Tensor[(13, ?, ?), float64], Tensor[(13, 1, 1), float64], Tensor[(1, 10, 16), float32]) */
}

def @func_8246(%var_8244: Tensor[(7, 9, 14), float64]) -> (Tensor[(7, 9, 14), float64],) {
  @func_8243(%var_8244) /* ty=(Tensor[(7, 9, 14), float64],) */
}

def @func_9848(%var_9846: Tensor[(13, 4, 13), float64]) -> (Tensor[(13, 4, 13), bool],) {
  @func_9845(%var_9846) /* ty=(Tensor[(13, 4, 13), bool],) */
}

def @func_1543() -> (Tensor[(13, 1, 1), float64], Tensor[(13, ?, ?), float64]) {
  @func_1541() /* ty=(Tensor[(13, 1, 1), float64], Tensor[(13, ?, ?), float64]) */
}

def @func_3427() -> (Tensor[(13, 1, 1), float64], Tensor[(13, 1, 1), float64]) {
  %445 = @func_684() /* ty=(Tensor[(13, 1, 1), float64], Tensor[(13, 1, 1), float64]) */;
  %446 = @func_2512() /* ty=(Tensor[(13, 1, 1), float64],) */;
  %447 = %445.1;
  %448 = %446.0;
  (%447, %448)
}

def @func_1306() -> (Tensor[(13, ?, ?), float64], Tensor[(13, ?, ?), float64]) {
  @func_1304() /* ty=(Tensor[(13, ?, ?), float64], Tensor[(13, ?, ?), float64]) */
}

def @func_732() -> (Tensor[(13, 1, 1), float64],) {
  %449 = @func_585() /* ty=Tensor[(13, 1, 1), float64] */;
  (%449,)
}

def @func_7865() -> Tensor[(13, ?, ?), float64] {
  %451 = fn () -> Tensor[(13, ?, ?), float64] {
    %450 = @func_1541() /* ty=(Tensor[(13, 1, 1), float64], Tensor[(13, ?, ?), float64]) */;
    %450.1
  };
  %451() /* ty=Tensor[(13, ?, ?), float64] */
}

def @func_1888() -> (Tensor[(13, ?, ?), float64], Tensor[(13, ?, ?), bool], Tensor[(13, 1, 1), float64], Tensor[(1, 10, 16), float32], Tensor[(13, 1, 1), float64]) {
  @func_1886() /* ty=(Tensor[(13, ?, ?), float64], Tensor[(13, ?, ?), bool], Tensor[(13, 1, 1), float64], Tensor[(1, 10, 16), float32], Tensor[(13, 1, 1), float64]) */
}

def @func_8104() -> Tensor[(13, ?, ?), float64] {
  @func_8102() /* ty=Tensor[(13, ?, ?), float64] */
}

def @func_5897() -> (Tensor[(13, 11, 2), bool], Tensor[(13, 5, 13), float64], Tensor[(13, ?, ?), uint32]) {
  @func_5895() /* ty=(Tensor[(13, 11, 2), bool], Tensor[(13, 5, 13), float64], Tensor[(13, ?, ?), uint32]) */
}

def @func_9413() -> (Tensor[(13, 1, 1), float32],) {
  @func_9411() /* ty=(Tensor[(13, 1, 1), float32],) */
}

def @func_12075(%var_12074: Tensor[(882), float64]) -> (Tensor[(13, 10, 16), uint8], Tensor[(7, 9, 14), float64], Tensor[(882), float64]) {
  %458 = fn (%var_12068: Tensor[(882), float64]) -> (Tensor[(13, 10, 16), uint8], Tensor[(7, 9, 14), float64], Tensor[(882), float64]) {
    %452 = @func_6914() /* ty=(Tensor[(13, 10, 16), uint8],) */;
    %453 = cast(%var_12068, dtype="float64") /* ty=Tensor[(882), float64] */;
    %454 = reshape(%453, newshape=[7, 9, 14]) /* ty=Tensor[(7, 9, 14), float64] */;
    %455 = @func_8243(%454) /* ty=(Tensor[(7, 9, 14), float64],) */;
    %456 = %452.0;
    %457 = %455.0;
    (%456, %457, %var_12068)
  };
  %458(%var_12074) /* ty=(Tensor[(13, 10, 16), uint8], Tensor[(7, 9, 14), float64], Tensor[(882), float64]) */
}

def @func_7444() -> (Tensor[(1, 10, 16), float32], Tensor[(13, 1, 1), float64], Tensor[(13, 1, 1), float64], Tensor[(13, 1, 1), float64]) {
  @func_7442() /* ty=(Tensor[(1, 10, 16), float32], Tensor[(13, 1, 1), float64], Tensor[(13, 1, 1), float64], Tensor[(13, 1, 1), float64]) */
}

def @func_10718(%var_10717: Tensor[(13, 10, 16), float64]) -> (Tensor[(13, 10, 16), int32],) {
  %465 = fn (%var_10711: Tensor[(13, 10, 16), float64]) -> (Tensor[(13, 10, 16), int32],) {
    %459 = @func_9711() /* ty=Tensor[(13, 10, 16), float64] */;
    %460 = cast(%var_10711, dtype="int32") /* ty=Tensor[(13, 10, 16), int32] */;
    %461 = shape_of(%459, dtype="int32") /* ty=Tensor[(3), int32] */;
    %462 = cast(%459, dtype="int32") /* ty=Tensor[(13, 10, 16), int32] */;
    %463 = dyn.reshape(%460, %461, newshape=[]) /* ty=Tensor[(?, ?, ?), int32] */;
    %464 = add(%462, %463) /* ty=Tensor[(13, 10, 16), int32] */;
    (%464,)
  };
  %465(%var_10717) /* ty=(Tensor[(13, 10, 16), int32],) */
}

def @func_2986() -> (Tensor[(13, 1, 1), float64],) {
  %468 = fn () -> (Tensor[(13, 1, 1), float64],) {
    %466 = @func_2320() /* ty=(Tensor[(13, 1, 1), float64], Tensor[(13, 1, 1), float64]) */;
    %467 = %466.0;
    (%467,)
  };
  %468() /* ty=(Tensor[(13, 1, 1), float64],) */
}

def @func_3429() -> (Tensor[(13, 1, 1), float64], Tensor[(13, 1, 1), float64]) {
  @func_3427() /* ty=(Tensor[(13, 1, 1), float64], Tensor[(13, 1, 1), float64]) */
}

def @func_1804() -> (Tensor[(13, 1, 1), float64],) {
  %469 = @func_684() /* ty=(Tensor[(13, 1, 1), float64], Tensor[(13, 1, 1), float64]) */;
  %470 = %469.1;
  (%470,)
}

def @func_1095(%var_1085: Tensor[(1, 9, 7), int16], %var_1086: Tensor[(5, 9, 7), int16]) -> (Tensor[(5, 9, 7), int16],) {
  %471 = cast(%var_1085, dtype="int16") /* ty=Tensor[(1, 9, 7), int16] */;
  %472 = cast(%var_1086, dtype="int16") /* ty=Tensor[(5, 9, 7), int16] */;
  %473 = subtract(%471, %472) /* ty=Tensor[(5, 9, 7), int16] */;
  (%473,)
}

def @func_3399() -> (Tensor[(13, 1, 1), float64],) {
  %476 = fn () -> (Tensor[(13, 1, 1), float64],) {
    %474 = @func_2985() /* ty=(Tensor[(13, 1, 1), float64],) */;
    %475 = %474.0;
    (%475,)
  };
  %476() /* ty=(Tensor[(13, 1, 1), float64],) */
}

def @func_645() -> (Tensor[(13, 1, 1), float64], Tensor[(13, 1, 1), float64], Tensor[(13, 1, 1), float64]) {
  @func_643() /* ty=(Tensor[(13, 1, 1), float64], Tensor[(13, 1, 1), float64], Tensor[(13, 1, 1), float64]) */
}

def @func_8275() -> Tensor[(13, 1, 1), float64] {
  @func_8273() /* ty=Tensor[(13, 1, 1), float64] */
}

def @func_9017() -> (Tensor[(196), float64],) {
  %479 = fn () -> (Tensor[(196), float64],) {
    %477 = @func_4275() /* ty=(Tensor[(13, ?, ?), float64], Tensor[(13, 1, 1), float64], Tensor[(196), float64]) */;
    %478 = %477.2;
    (%478,)
  };
  %479() /* ty=(Tensor[(196), float64],) */
}

def @func_10111(%var_10095: Tensor[(12, 7, 6), int8], %var_10096: Tensor[(12, 7, 6), int8]) -> (Tensor[(12, 7, 6), bool],) {
  %480 = cast(%var_10096, dtype="bool") /* ty=Tensor[(12, 7, 6), bool] */;
  %481 = shape_of(%var_10095, dtype="int32") /* ty=Tensor[(3), int32] */;
  %482 = cast(%var_10095, dtype="bool") /* ty=Tensor[(12, 7, 6), bool] */;
  %483 = dyn.reshape(%480, %481, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %484 = greater(%482, %483) /* ty=Tensor[(12, 7, 6), bool] */;
  (%484,)
}

def @func_10242(%var_10241: Tensor[(1152), float32]) -> (Tensor[(6, 4, 10), float32], Tensor[(1, 936), float64], Tensor[(936), float64], Tensor[(13, 1, 1), float64], Tensor[(16, 8, 9), bool], Tensor[(1152), float32]) {
  %496 = fn (%var_10229: Tensor[(1152), float32]) -> (Tensor[(6, 4, 10), float32], Tensor[(1, 936), float64], Tensor[(936), float64], Tensor[(13, 1, 1), float64], Tensor[(16, 8, 9), bool], Tensor[(1152), float32]) {
    %485 = cast(meta[relay.Constant][13] /* ty=Tensor[(936), float64] */, dtype="float64") /* ty=Tensor[(936), float64] */;
    %486 = reshape(%485, newshape=[936]) /* ty=Tensor[(936), float64] */;
    %487 = @func_9809(%486) /* ty=(Tensor[(13, 10, 16), float64], Tensor[(1, 936), float64], Tensor[(936), float64], Tensor[(13, 1, 1), float64]) */;
    %488 = @func_732() /* ty=(Tensor[(13, 1, 1), float64],) */;
    %489 = cast(%var_10229, dtype="float32") /* ty=Tensor[(1152), float32] */;
    %490 = reshape(%489, newshape=[16, 8, 9]) /* ty=Tensor[(16, 8, 9), float32] */;
    %491 = @func_5013(%490) /* ty=(Tensor[(16, 8, 9), bool], Tensor[(13, 1, 1), float64]) */;
    %492 = @func_7581() /* ty=Tensor[(6, 4, 10), float32] */;
    %493 = %487.1;
    %494 = %488.0;
    %495 = %491.0;
    (%492, %493, meta[relay.Constant][13] /* ty=Tensor[(936), float64] */, %494, %495, %var_10229)
  };
  %496(%var_10241) /* ty=(Tensor[(6, 4, 10), float32], Tensor[(1, 936), float64], Tensor[(936), float64], Tensor[(13, 1, 1), float64], Tensor[(16, 8, 9), bool], Tensor[(1152), float32]) */
}

def @func_9147(%var_9145: Tensor[(936), float64], %var_9146: Tensor[(260), float64]) -> (Tensor[(13, 1, 1), float64], Tensor[(196), float64], Tensor[(936), float64], Tensor[(196), float64], Tensor[(13, 4, 5), uint32], Tensor[(260), float64]) {
  @func_9143(%var_9145, %var_9146) /* ty=(Tensor[(13, 1, 1), float64], Tensor[(196), float64], Tensor[(936), float64], Tensor[(196), float64], Tensor[(13, 4, 5), uint32], Tensor[(260), float64]) */
}

def @func_6805() -> Tensor[(13, 1, 1), float64] {
  @func_1499() /* ty=Tensor[(13, 1, 1), float64] */
}

def @func_8866(%var_8801: Tensor[(1, 2, 1), int8]) -> (Tensor[(15, 2, 6), uint64], Tensor[(1, 2, 63), float64], Tensor[(13, 1, 1), float64]) {
  %497 = cast(%var_8801, dtype="int8") /* ty=Tensor[(1, 2, 1), int8] */;
  %498 = cast(meta[relay.Constant][14] /* ty=Tensor[(15, 2, 6), int8] */, dtype="int8") /* ty=Tensor[(15, 2, 6), int8] */;
  %499 = subtract(%497, %498) /* ty=Tensor[(15, 2, 6), int8] */;
  %500 = cast(meta[relay.Constant][14] /* ty=Tensor[(15, 2, 6), int8] */, dtype="uint64") /* ty=Tensor[(15, 2, 6), uint64] */;
  %501 = shape_of(%499, dtype="int32") /* ty=Tensor[(3), int32] */;
  %502 = cast(%499, dtype="uint64") /* ty=Tensor[(15, 2, 6), uint64] */;
  %503 = dyn.reshape(%500, %501, newshape=[]) /* ty=Tensor[(?, ?, ?), uint64] */;
  %504 = @func_4522() /* ty=(Tensor[(63), float32],) */;
  %505 = %504.0;
  %506 = cast(%505, dtype="float64") /* ty=Tensor[(63), float64] */;
  %507 = cast(%var_8801, dtype="float64") /* ty=Tensor[(1, 2, 1), float64] */;
  %508 = @func_6266() /* ty=(Tensor[(13, 1, 1), float64], Tensor[(13, 1, 1), float64], Tensor[(13, 1, 1), float64]) */;
  %509 = logical_xor(%502, %503) /* ty=Tensor[(15, 2, 6), uint64] */;
  %510 = floor_mod(%506, %507) /* ty=Tensor[(1, 2, 63), float64] */;
  %511 = %508.0;
  (%509, %510, %511)
}

def @func_12922(%var_12920: Tensor[(504, 1), int8]) -> (Tensor[(13, 1, 1), float64], Tensor[(5, 5, 4), float32], Tensor[(13, 1, 1), float64], Tensor[(12, 7, 6), bool], Tensor[(504, 1), int8]) {
  @func_12919(%var_12920) /* ty=(Tensor[(13, 1, 1), float64], Tensor[(5, 5, 4), float32], Tensor[(13, 1, 1), float64], Tensor[(12, 7, 6), bool], Tensor[(504, 1), int8]) */
}

def @func_3335(%var_3317: Tensor[(13, 8, 9), float64]) -> (Tensor[(13, 8, 9), bool], Tensor[(13, ?, ?), float64], Tensor[(13, 1, 1), float64]) {
  %512 = @func_643() /* ty=(Tensor[(13, 1, 1), float64], Tensor[(13, 1, 1), float64], Tensor[(13, 1, 1), float64]) */;
  %513 = %512.2;
  %514 = cast(%513, dtype="bool") /* ty=Tensor[(13, 1, 1), bool] */;
  %515 = cast(%var_3317, dtype="bool") /* ty=Tensor[(13, 8, 9), bool] */;
  %516 = @func_2346() /* ty=(Tensor[(13, ?, ?), float64],) */;
  %517 = @func_643() /* ty=(Tensor[(13, 1, 1), float64], Tensor[(13, 1, 1), float64], Tensor[(13, 1, 1), float64]) */;
  %518 = not_equal(%514, %515) /* ty=Tensor[(13, 8, 9), bool] */;
  %519 = %516.0;
  %520 = %517.1;
  (%518, %519, %520)
}

def @func_5167() -> (Tensor[(315), int16], Tensor[(13, 1, 1), float64]) {
  %525 = fn () -> (Tensor[(315), int16], Tensor[(13, 1, 1), float64]) {
    %521 = @func_4425() /* ty=(Tensor[(416), float64], Tensor[(63), int16], Tensor[(315), int16]) */;
    %522 = @func_1776() /* ty=(Tensor[(13, 1, 1), float64], Tensor[(13, 1, 1), float64], Tensor[(13, 1, 1), float64], Tensor[(13, 1, 1), float64], Tensor[(416), float64]) */;
    %523 = %521.2;
    %524 = %522.0;
    (%523, %524)
  };
  %525() /* ty=(Tensor[(315), int16], Tensor[(13, 1, 1), float64]) */
}

def @func_8395() -> Tensor[(416), float64] {
  %527 = fn () -> Tensor[(416), float64] {
    %526 = @func_3247() /* ty=(Tensor[(13, 1, 1), float64], Tensor[(416), float64], Tensor[(13, ?, ?), float64]) */;
    %526.1
  };
  %527() /* ty=Tensor[(416), float64] */
}

def @func_8997(%var_8986: Tensor[(13, 12, 5), uint32]) -> (Tensor[(13, 12, 5), bool],) {
  %528 = @func_7010() /* ty=Tensor[(13, ?, ?), uint32] */;
  %529 = cast(%528, dtype="bool") /* ty=Tensor[(13, ?, ?), bool] */;
  %530 = cast(%var_8986, dtype="bool") /* ty=Tensor[(13, 12, 5), bool] */;
  %531 = equal(%529, %530) /* ty=Tensor[(13, 12, 5), bool] */;
  (%531,)
}

def @func_2660(%var_2658: Tensor[(5, 63), int16]) -> (Tensor[(13, 1, 1), float64], Tensor[(13, 10, 16), bool], Tensor[(5, 9, 7), int16], Tensor[(63), int16], Tensor[(5, 63), int16], Tensor[(13, 1, 1), float64]) {
  @func_2657(%var_2658) /* ty=(Tensor[(13, 1, 1), float64], Tensor[(13, 10, 16), bool], Tensor[(5, 9, 7), int16], Tensor[(63), int16], Tensor[(5, 63), int16], Tensor[(13, 1, 1), float64]) */
}

def @func_12108() -> (Tensor[(13, ?, ?), float64],) {
  %533 = fn () -> (Tensor[(13, ?, ?), float64],) {
    %532 = @func_7864() /* ty=Tensor[(13, ?, ?), float64] */;
    (%532,)
  };
  %533() /* ty=(Tensor[(13, ?, ?), float64],) */
}

def @func_1342() -> Tensor[(13, 1, 1), float64] {
  @func_1340() /* ty=Tensor[(13, 1, 1), float64] */
}

def @func_2441() -> (Tensor[(1, 10, 16), float32], Tensor[(13, 7, 10), float32]) {
  @func_2439() /* ty=(Tensor[(1, 10, 16), float32], Tensor[(13, 7, 10), float32]) */
}

def @func_10982(%var_10978: Tensor[(2, 11, 12), int32], %var_10979: Tensor[(2, 11, 12), int32], %var_10980: Tensor[(1152), float32], %var_10981: Tensor[(1920), float32]) -> (Tensor[(2, 11, 12), bool], Tensor[(1, 2, 63), float64], Tensor[(2), int8], Tensor[(13, 1, 1), float64], Tensor[(192), float32], Tensor[(13, 1, 1), float64], Tensor[(1152), float32], Tensor[(13, 1, 1), float64], Tensor[(12, 10, 16), float64], Tensor[(1920), float32], Tensor[(13, 1, 1), float64], Tensor[(13, 1, 1), float64]) {
  %560 = fn (%var_10894: Tensor[(2, 11, 12), int32], %var_10895: Tensor[(2, 11, 12), int32], %var_10928: Tensor[(1152), float32], %var_10939: Tensor[(1920), float32]) -> (Tensor[(2, 11, 12), bool], Tensor[(1, 2, 63), float64], Tensor[(2), int8], Tensor[(13, 1, 1), float64], Tensor[(192), float32], Tensor[(13, 1, 1), float64], Tensor[(1152), float32], Tensor[(13, 1, 1), float64], Tensor[(12, 10, 16), float64], Tensor[(1920), float32], Tensor[(13, 1, 1), float64], Tensor[(13, 1, 1), float64]) {
    %534 = cast(%var_10895, dtype="bool") /* ty=Tensor[(2, 11, 12), bool] */;
    %535 = shape_of(%var_10894, dtype="int32") /* ty=Tensor[(3), int32] */;
    %536 = cast(%var_10894, dtype="bool") /* ty=Tensor[(2, 11, 12), bool] */;
    %537 = dyn.reshape(%534, %535, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    %538 = cast(meta[relay.Constant][15] /* ty=Tensor[(2), int8] */, dtype="int8") /* ty=Tensor[(2), int8] */;
    %539 = reshape(%538, newshape=[1, 2, 1]) /* ty=Tensor[(1, 2, 1), int8] */;
    %540 = @func_8866(%539) /* ty=(Tensor[(15, 2, 6), uint64], Tensor[(1, 2, 63), float64], Tensor[(13, 1, 1), float64]) */;
    %541 = cast(meta[relay.Constant][16] /* ty=Tensor[(192), float32] */, dtype="float32") /* ty=Tensor[(192), float32] */;
    %542 = reshape(%541, newshape=[192]) /* ty=Tensor[(192), float32] */;
    %543 = @func_8622(%542) /* ty=(Tensor[(13, ?, ?), float64], Tensor[(12, 8, 2), float32], Tensor[(192), float32], Tensor[(13, 1, 1), float64], Tensor[(936), float64]) */;
    %544 = cast(%var_10928, dtype="float32") /* ty=Tensor[(1152), float32] */;
    %545 = reshape(%544, newshape=[16, 8, 9]) /* ty=Tensor[(16, 8, 9), float32] */;
    %546 = @func_5013(%545) /* ty=(Tensor[(16, 8, 9), bool], Tensor[(13, 1, 1), float64]) */;
    %547 = @func_1804() /* ty=(Tensor[(13, 1, 1), float64],) */;
    %548 = cast(%var_10939, dtype="float32") /* ty=Tensor[(1920), float32] */;
    %549 = reshape(%548, newshape=[12, 10, 16]) /* ty=Tensor[(12, 10, 16), float32] */;
    %550 = @func_9352(%549) /* ty=(Tensor[(12, 10, 16), float64],) */;
    %551 = @func_5791() /* ty=(Tensor[(13, 1, 1), float64],) */;
    %552 = greater_equal(%536, %537) /* ty=Tensor[(2, 11, 12), bool] */;
    %553 = %540.1;
    %554 = %543.3;
    %555 = %546.1;
    %556 = %547.0;
    %557 = %550.0;
    %558 = @func_6805() /* ty=Tensor[(13, 1, 1), float64] */;
    %559 = %551.0;
    (%552, %553, meta[relay.Constant][15] /* ty=Tensor[(2), int8] */, %554, meta[relay.Constant][16] /* ty=Tensor[(192), float32] */, %555, %var_10928, %556, %557, %var_10939, %558, %559)
  };
  %560(%var_10978, %var_10979, %var_10980, %var_10981) /* ty=(Tensor[(2, 11, 12), bool], Tensor[(1, 2, 63), float64], Tensor[(2), int8], Tensor[(13, 1, 1), float64], Tensor[(192), float32], Tensor[(13, 1, 1), float64], Tensor[(1152), float32], Tensor[(13, 1, 1), float64], Tensor[(12, 10, 16), float64], Tensor[(1920), float32], Tensor[(13, 1, 1), float64], Tensor[(13, 1, 1), float64]) */
}

def @func_2918(%var_2917: Tensor[(168), float64]) -> (Tensor[(13, 1, 1), float64], Tensor[(13, ?, ?), float64], Tensor[(13, 1, 1), float64], Tensor[(13, ?, ?), float64], Tensor[(13, 315, ?), int16], Tensor[(168), float64], Tensor[(315), int16]) {
  %575 = fn (%var_2905: Tensor[(168), float64]) -> (Tensor[(13, 1, 1), float64], Tensor[(13, ?, ?), float64], Tensor[(13, 1, 1), float64], Tensor[(13, ?, ?), float64], Tensor[(13, 315, ?), int16], Tensor[(168), float64], Tensor[(315), int16]) {
    %561 = @func_2012() /* ty=(Tensor[(13, 1, 1), float64], Tensor[(13, 1, 1), float64], Tensor[(13, 1, 1), float64]) */;
    %562 = @func_2346() /* ty=(Tensor[(13, ?, ?), float64],) */;
    %563 = @func_684() /* ty=(Tensor[(13, 1, 1), float64], Tensor[(13, 1, 1), float64]) */;
    %564 = @func_1196() /* ty=(Tensor[(13, ?, ?), float64],) */;
    %565 = cast(%var_2905, dtype="float64") /* ty=Tensor[(168), float64] */;
    %566 = cast(meta[relay.Constant][17] /* ty=Tensor[(315), int16] */, dtype="int16") /* ty=Tensor[(315), int16] */;
    %567 = reshape(%565, newshape=[7, 2, 12]) /* ty=Tensor[(7, 2, 12), float64] */;
    %568 = reshape(%566, newshape=[315, 1]) /* ty=Tensor[(315, 1), int16] */;
    %569 = @func_2081(%567, %568) /* ty=(Tensor[(7, 2, 12), float64], Tensor[(13, 1, 1), float64], Tensor[(13, 10, 16), bool], Tensor[(13, 315, ?), int16]) */;
    %570 = %561.2;
    %571 = %562.0;
    %572 = %563.0;
    %573 = %564.0;
    %574 = %569.3;
    (%570, %571, %572, %573, %574, %var_2905, meta[relay.Constant][17] /* ty=Tensor[(315), int16] */)
  };
  %575(%var_2917) /* ty=(Tensor[(13, 1, 1), float64], Tensor[(13, ?, ?), float64], Tensor[(13, 1, 1), float64], Tensor[(13, ?, ?), float64], Tensor[(13, 315, ?), int16], Tensor[(168), float64], Tensor[(315), int16]) */
}

def @func_9143(%var_9106: Tensor[(936), float64], %var_9138: Tensor[(260), float64]) -> (Tensor[(13, 1, 1), float64], Tensor[(196), float64], Tensor[(936), float64], Tensor[(196), float64], Tensor[(13, 4, 5), uint32], Tensor[(260), float64]) {
  %576 = @func_684() /* ty=(Tensor[(13, 1, 1), float64], Tensor[(13, 1, 1), float64]) */;
  %577 = cast(%var_9106, dtype="float64") /* ty=Tensor[(936), float64] */;
  %578 = reshape(%577, newshape=[936]) /* ty=Tensor[(936), float64] */;
  %579 = @func_4099(%578) /* ty=(Tensor[(13, 11, 9), float64], Tensor[(13, 1, 1), float64], Tensor[(13, 1, 1), float64], Tensor[(13, 1, 1), float64], Tensor[(936), float64], Tensor[(13, 10, 16), float32], Tensor[(196), float64], Tensor[(13, 1, 1), float32]) */;
  %580 = @func_9016() /* ty=(Tensor[(196), float64],) */;
  %581 = cast(%var_9138, dtype="float64") /* ty=Tensor[(260), float64] */;
  %582 = reshape(%581, newshape=[13, 4, 5]) /* ty=Tensor[(13, 4, 5), float64] */;
  %583 = @func_3295(%582) /* ty=(Tensor[(13, 4, 5), uint32], Tensor[(13, 1, 1), float64]) */;
  %584 = %576.0;
  %585 = %579.6;
  %586 = %580.0;
  %587 = %583.0;
  (%584, %585, %var_9106, %586, %587, %var_9138)
}

def @func_9884() -> (Tensor[(13, ?, ?), float64],) {
  %589 = fn () -> (Tensor[(13, ?, ?), float64],) {
    %588 = @func_5837() /* ty=Tensor[(13, ?, ?), float64] */;
    (%588,)
  };
  %589() /* ty=(Tensor[(13, ?, ?), float64],) */
}

def @func_3585() -> (Tensor[(13, 1, 1), float64], Tensor[(13, 1, 1), float64]) {
  %590 = @func_1144() /* ty=(Tensor[(13, 1, 1), float64], Tensor[(1, 10, 16), float32]) */;
  %591 = @func_703() /* ty=(Tensor[(13, 1, 1), float64], Tensor[(13, 1, 1), float64], Tensor[(13, 1, 1), float64]) */;
  %592 = %590.0;
  %593 = %591.2;
  (%592, %593)
}

def @func_10818(%var_10816: Tensor[(13, 7, 9), float64]) -> (Tensor[(13, 7, 9), uint16], Tensor[(13, 1, 1), float64], Tensor[(13, 1, 1), float64], Tensor[(13, ?, ?), float64]) {
  @func_10815(%var_10816) /* ty=(Tensor[(13, 7, 9), uint16], Tensor[(13, 1, 1), float64], Tensor[(13, 1, 1), float64], Tensor[(13, ?, ?), float64]) */
}

def @func_11874(%var_11867: Tensor[(4, 11, 15), float32]) -> Tensor[(4, 11, 15), float32] {
  %594 = cast(%var_11867, dtype="float32") /* ty=Tensor[(4, 11, 15), float32] */;
  rsqrt(%594) /* ty=Tensor[(4, 11, 15), float32] */
}

def @func_1806() -> (Tensor[(13, 1, 1), float64],) {
  @func_1804() /* ty=(Tensor[(13, 1, 1), float64],) */
}

def @func_12498() -> (Tensor[(13, 1, 16), float64],) {
  %600 = fn () -> (Tensor[(13, 1, 16), float64],) {
    %595 = @func_7235() /* ty=(Tensor[(13, 1, 1), float64], Tensor[(13, 1, 1), float64], Tensor[(13, 1, 1), float64]) */;
    %596 = %595.0;
    %597 = cast(%596, dtype="float64") /* ty=Tensor[(13, 1, 1), float64] */;
    %598 = cast(meta[relay.Constant][18] /* ty=Tensor[(13, 1, 16), float64] */, dtype="float64") /* ty=Tensor[(13, 1, 16), float64] */;
    %599 = floor_divide(%597, %598) /* ty=Tensor[(13, 1, 16), float64] */;
    (%599,)
  };
  %600() /* ty=(Tensor[(13, 1, 16), float64],) */
}

def @func_2372() -> (Tensor[(13, ?, ?), float64], Tensor[(13, 1, 1), float64]) {
  @func_2370() /* ty=(Tensor[(13, ?, ?), float64], Tensor[(13, 1, 1), float64]) */
}

def @func_3835(%var_3834: Tensor[(196), float64]) -> (Tensor[(13, 1, 1), float64], Tensor[(13, 10, 16), float32], Tensor[(196), float64]) {
  %607 = fn (%var_3830: Tensor[(196), float64]) -> (Tensor[(13, 1, 1), float64], Tensor[(13, 10, 16), float32], Tensor[(196), float64]) {
    %601 = @func_3427() /* ty=(Tensor[(13, 1, 1), float64], Tensor[(13, 1, 1), float64]) */;
    %602 = cast(%var_3830, dtype="float64") /* ty=Tensor[(196), float64] */;
    %603 = reshape(%602, newshape=[14, 14, 1]) /* ty=Tensor[(14, 14, 1), float64] */;
    %604 = @func_3719(%603) /* ty=(Tensor[(14, 14, 1), float64], Tensor[(13, 10, 16), float32]) */;
    %605 = %601.1;
    %606 = %604.1;
    (%605, %606, %var_3830)
  };
  %607(%var_3834) /* ty=(Tensor[(13, 1, 1), float64], Tensor[(13, 10, 16), float32], Tensor[(196), float64]) */
}

def @func_11973() -> Tensor[(1, 10, 16), float32] {
  @func_11971() /* ty=Tensor[(1, 10, 16), float32] */
}

def @func_5464() -> Tensor[(13, 1, 1), float64] {
  @func_5462() /* ty=Tensor[(13, 1, 1), float64] */
}

def @func_3878() -> Tensor[(13, 1, 1), float64] {
  %609 = fn () -> Tensor[(13, 1, 1), float64] {
    %608 = @func_1776() /* ty=(Tensor[(13, 1, 1), float64], Tensor[(13, 1, 1), float64], Tensor[(13, 1, 1), float64], Tensor[(13, 1, 1), float64], Tensor[(416), float64]) */;
    %608.3
  };
  %609() /* ty=Tensor[(13, 1, 1), float64] */
}

def @func_8273() -> Tensor[(13, 1, 1), float64] {
  %610 = @func_7235() /* ty=(Tensor[(13, 1, 1), float64], Tensor[(13, 1, 1), float64], Tensor[(13, 1, 1), float64]) */;
  %610.1
}

def @func_5989() -> Tensor[(13, 1, 1), float64] {
  %611 = @func_2370() /* ty=(Tensor[(13, ?, ?), float64], Tensor[(13, 1, 1), float64]) */;
  %611.1
}

def @func_8470(%var_8469: Tensor[(12, 11, 4), float32]) -> Tensor[(12, 11, 4), bool] {
  %618 = fn (%var_8442: Tensor[(12, 11, 4), float32]) -> Tensor[(12, 11, 4), bool] {
    %612 = cast(%var_8442, dtype="float32") /* ty=Tensor[(12, 11, 4), float32] */;
    %613 = log10(%612) /* ty=Tensor[(12, 11, 4), float32] */;
    %614 = cast(%var_8442, dtype="bool") /* ty=Tensor[(12, 11, 4), bool] */;
    %615 = shape_of(%613, dtype="int32") /* ty=Tensor[(3), int32] */;
    %616 = cast(%613, dtype="bool") /* ty=Tensor[(12, 11, 4), bool] */;
    %617 = dyn.reshape(%614, %615, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    equal(%616, %617) /* ty=Tensor[(12, 11, 4), bool] */
  };
  %618(%var_8469) /* ty=Tensor[(12, 11, 4), bool] */
}

def @func_6417() -> Tensor[(13, 10, 16), float64] {
  @func_6415() /* ty=Tensor[(13, 10, 16), float64] */
}

def @func_6624(%var_6622: Tensor[(3, 7, 3), float64], %var_6623: Tensor[(3, 7, 3), float64]) -> Tensor[(3, 7, 3), bool] {
  %623 = fn (%var_6616: Tensor[(3, 7, 3), float64], %var_6617: Tensor[(3, 7, 3), float64]) -> Tensor[(3, 7, 3), bool] {
    %619 = cast(%var_6617, dtype="bool") /* ty=Tensor[(3, 7, 3), bool] */;
    %620 = shape_of(%var_6616, dtype="int32") /* ty=Tensor[(3), int32] */;
    %621 = cast(%var_6616, dtype="bool") /* ty=Tensor[(3, 7, 3), bool] */;
    %622 = dyn.reshape(%619, %620, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    not_equal(%621, %622) /* ty=Tensor[(3, 7, 3), bool] */
  };
  %623(%var_6622, %var_6623) /* ty=Tensor[(3, 7, 3), bool] */
}

def @func_8562() -> (Tensor[(13, 1, 1), float64],) {
  %625 = fn () -> (Tensor[(13, 1, 1), float64],) {
    %624 = @func_3217() /* ty=Tensor[(13, 1, 1), float64] */;
    (%624,)
  };
  %625() /* ty=(Tensor[(13, 1, 1), float64],) */
}

def @func_5584() -> (Tensor[(1, 10, 16), float32],) {
  @func_5582() /* ty=(Tensor[(1, 10, 16), float32],) */
}

def @func_6266() -> (Tensor[(13, 1, 1), float64], Tensor[(13, 1, 1), float64], Tensor[(13, 1, 1), float64]) {
  %626 = @func_2370() /* ty=(Tensor[(13, ?, ?), float64], Tensor[(13, 1, 1), float64]) */;
  %627 = @func_4205() /* ty=(Tensor[(13, 1, 1), float64],) */;
  %628 = %626.1;
  %629 = %627.0;
  %630 = @func_1668() /* ty=Tensor[(13, 1, 1), float64] */;
  (%628, %629, %630)
}

def @func_13105() -> Tensor[(13, 1, 1), float64] {
  %631 = @func_7235() /* ty=(Tensor[(13, 1, 1), float64], Tensor[(13, 1, 1), float64], Tensor[(13, 1, 1), float64]) */;
  %631.2
}

def @func_5837() -> Tensor[(13, ?, ?), float64] {
  %632 = @func_2346() /* ty=(Tensor[(13, ?, ?), float64],) */;
  %632.0
}

def @func_3338(%var_3336: Tensor[(13, 8, 9), float64]) -> (Tensor[(13, 8, 9), bool], Tensor[(13, ?, ?), float64], Tensor[(13, 1, 1), float64]) {
  @func_3335(%var_3336) /* ty=(Tensor[(13, 8, 9), bool], Tensor[(13, ?, ?), float64], Tensor[(13, 1, 1), float64]) */
}

def @func_6636() -> Tensor[(13, ?, ?), float64] {
  %633 = @func_3205() /* ty=(Tensor[(13, ?, ?), float64], Tensor[(13, ?, ?), float64]) */;
  %633.0
}

def @func_4134() -> (Tensor[(13, 1, 1), float64], Tensor[(13, 1, 1), float64]) {
  %636 = fn () -> (Tensor[(13, 1, 1), float64], Tensor[(13, 1, 1), float64]) {
    %634 = @func_3217() /* ty=Tensor[(13, 1, 1), float64] */;
    %635 = @func_3905() /* ty=Tensor[(13, 1, 1), float64] */;
    (%634, %635)
  };
  %636() /* ty=(Tensor[(13, 1, 1), float64], Tensor[(13, 1, 1), float64]) */
}

def @func_5015(%var_5014: Tensor[(16, 8, 9), float32]) -> (Tensor[(16, 8, 9), bool], Tensor[(13, 1, 1), float64]) {
  %648 = fn (%var_4986: Tensor[(16, 8, 9), float32]) -> (Tensor[(16, 8, 9), bool], Tensor[(13, 1, 1), float64]) {
    %637 = cast(%var_4986, dtype="float32") /* ty=Tensor[(16, 8, 9), float32] */;
    %638 = log(%637) /* ty=Tensor[(16, 8, 9), float32] */;
    %639 = cast(%638, dtype="float64") /* ty=Tensor[(16, 8, 9), float64] */;
    %640 = tan(%639) /* ty=Tensor[(16, 8, 9), float64] */;
    %641 = cast(%640, dtype="bool") /* ty=Tensor[(16, 8, 9), bool] */;
    %642 = shape_of(%638, dtype="int32") /* ty=Tensor[(3), int32] */;
    %643 = cast(%638, dtype="bool") /* ty=Tensor[(16, 8, 9), bool] */;
    %644 = dyn.reshape(%641, %642, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    %645 = @func_2230() /* ty=(Tensor[(13, 1, 1), float64], Tensor[(13, 1, 1), float64], Tensor[(13, 1, 1), float64]) */;
    %646 = not_equal(%643, %644) /* ty=Tensor[(16, 8, 9), bool] */;
    %647 = %645.0;
    (%646, %647)
  };
  %648(%var_5014) /* ty=(Tensor[(16, 8, 9), bool], Tensor[(13, 1, 1), float64]) */
}

def @func_8341() -> Tensor[(9, 1, 13), float64] {
  %650 = fn () -> Tensor[(9, 1, 13), float64] {
    %649 = @func_7486() /* ty=(Tensor[(9, 1, 13), float64],) */;
    %649.0
  };
  %650() /* ty=Tensor[(9, 1, 13), float64] */
}

def @func_6904(%var_6902: Tensor[(936), float64]) -> (Tensor[(13, 1, 1), float64], Tensor[(13, 1, 1), float64], Tensor[(13, 1, 1), float64], Tensor[(936), float64], Tensor[(13, 1, 1), float64]) {
  @func_6901(%var_6902) /* ty=(Tensor[(13, 1, 1), float64], Tensor[(13, 1, 1), float64], Tensor[(13, 1, 1), float64], Tensor[(936), float64], Tensor[(13, 1, 1), float64]) */
}

def @func_7486() -> (Tensor[(9, 1, 13), float64],) {
  %651 = cast(meta[relay.Constant][19] /* ty=Tensor[(9, 1, 13), float64] */, dtype="float64") /* ty=Tensor[(9, 1, 13), float64] */;
  %652 = acos(%651) /* ty=Tensor[(9, 1, 13), float64] */;
  (%652,)
}

def @func_9057() -> (Tensor[(13, 1, 1), float32], Tensor[(416), float64]) {
  @func_9055() /* ty=(Tensor[(13, 1, 1), float32], Tensor[(416), float64]) */
}

def @func_10181() -> (Tensor[(13, 1, 1), float32], Tensor[(13, ?, ?), float64]) {
  %655 = fn () -> (Tensor[(13, 1, 1), float32], Tensor[(13, ?, ?), float64]) {
    %653 = @func_1370() /* ty=Tensor[(13, 1, 1), float32] */;
    %654 = @func_5837() /* ty=Tensor[(13, ?, ?), float64] */;
    (%653, %654)
  };
  %655() /* ty=(Tensor[(13, 1, 1), float32], Tensor[(13, ?, ?), float64]) */
}

def @func_3812() -> Tensor[(13, 1, 1), float64] {
  %656 = @func_659() /* ty=(Tensor[(13, 1, 1), float64],) */;
  %656.0
}

def @func_7669() -> Tensor[(13, 1, 1), float64] {
  %657 = fn () -> Tensor[(13, 1, 1), float64] {
    @func_1340() /* ty=Tensor[(13, 1, 1), float64] */
  };
  %657() /* ty=Tensor[(13, 1, 1), float64] */
}

def @func_6375() -> (Tensor[(13, 1, 1), float64],) {
  %660 = fn () -> (Tensor[(13, 1, 1), float64],) {
    %658 = @func_5232() /* ty=(Tensor[(13, 1, 1), float64], Tensor[(13, 1, 1), float64]) */;
    %659 = %658.1;
    (%659,)
  };
  %660() /* ty=(Tensor[(13, 1, 1), float64],) */
}

def @func_6415() -> Tensor[(13, 10, 16), float64] {
  %661 = @func_5916() /* ty=(Tensor[(13, 10, 16), float64],) */;
  %662 = %661.0;
  %663 = @func_1776() /* ty=(Tensor[(13, 1, 1), float64], Tensor[(13, 1, 1), float64], Tensor[(13, 1, 1), float64], Tensor[(13, 1, 1), float64], Tensor[(416), float64]) */;
  %664 = %663.3;
  %665 = cast(%662, dtype="float64") /* ty=Tensor[(13, 10, 16), float64] */;
  %666 = cast(%664, dtype="float64") /* ty=Tensor[(13, 1, 1), float64] */;
  floor_divide(%665, %666) /* ty=Tensor[(13, 10, 16), float64] */
}

def @func_1973() -> Tensor[(1, 10, 16), float32] {
  %668 = fn () -> Tensor[(1, 10, 16), float32] {
    %667 = @func_861() /* ty=(Tensor[(13, 1, 1), float64], Tensor[(13, 1, 1), float64], Tensor[(13, 10, 16), bool], Tensor[(13, 10, 16), uint8], Tensor[(1, 10, 16), float32]) */;
    %667.4
  };
  %668() /* ty=Tensor[(1, 10, 16), float32] */
}

def @func_9442() -> Tensor[(13, 1, 1), float64] {
  %669 = fn () -> Tensor[(13, 1, 1), float64] {
    @func_8273() /* ty=Tensor[(13, 1, 1), float64] */
  };
  %669() /* ty=Tensor[(13, 1, 1), float64] */
}

def @func_12447(%var_12428: Tensor[(9, 10, 15), float32]) -> (Tensor[(9, 10, 15), float32], Tensor[(13, ?, ?), float64]) {
  %670 = cast(%var_12428, dtype="float32") /* ty=Tensor[(9, 10, 15), float32] */;
  %671 = @func_12053() /* ty=(Tensor[(13, 1, 1), float64], Tensor[(13, 1, 1), float64], Tensor[(13, ?, ?), float64], Tensor[(13, 1, 1), float64], Tensor[(1, 10, 16), float32]) */;
  %672 = log10(%670) /* ty=Tensor[(9, 10, 15), float32] */;
  %673 = %671.2;
  (%672, %673)
}

def @func_7943() -> (Tensor[(13, ?, ?), float64], Tensor[(13, 10, 16), float64]) {
  @func_7941() /* ty=(Tensor[(13, ?, ?), float64], Tensor[(13, 10, 16), float64]) */
}

def @func_7684() -> (Tensor[(13, 1, 1), float64],) {
  %675 = fn () -> (Tensor[(13, 1, 1), float64],) {
    %674 = @func_585() /* ty=Tensor[(13, 1, 1), float64] */;
    (%674,)
  };
  %675() /* ty=(Tensor[(13, 1, 1), float64],) */
}

def @func_5462() -> Tensor[(13, 1, 1), float64] {
  %676 = @func_643() /* ty=(Tensor[(13, 1, 1), float64], Tensor[(13, 1, 1), float64], Tensor[(13, 1, 1), float64]) */;
  %676.0
}

def @func_9453(%var_9443: Tensor[(15, 11, 3), float64]) -> Tensor[(15, 11, 3), float64] {
  %677 = cast(%var_9443, dtype="float64") /* ty=Tensor[(15, 11, 3), float64] */;
  exp(%677) /* ty=Tensor[(15, 11, 3), float64] */
}

def @func_6313() -> (Tensor[(13, 1, 1), float32], Tensor[(13, 1, 1), float64], Tensor[(1152), float32]) {
  @func_6311() /* ty=(Tensor[(13, 1, 1), float32], Tensor[(13, 1, 1), float64], Tensor[(1152), float32]) */
}

def @func_8768() -> Tensor[(7, 9), int16] {
  %678 = @func_5221() /* ty=(Tensor[(13, 1, 1), float64], Tensor[(5, 9, 7), int16], Tensor[(7, 9), int16], Tensor[(315), int16], Tensor[(13, ?, ?), float64], Tensor[(6, 3, 16), uint64], Tensor[(48), uint64]) */;
  %678.2
}

def @func_6827() -> (Tensor[(13, ?, ?), float64], Tensor[(13, 1, 1), float64]) {
  %682 = fn () -> (Tensor[(13, ?, ?), float64], Tensor[(13, 1, 1), float64]) {
    %679 = @func_2346() /* ty=(Tensor[(13, ?, ?), float64],) */;
    %680 = %679.0;
    %681 = @func_5462() /* ty=Tensor[(13, 1, 1), float64] */;
    (%680, %681)
  };
  %682() /* ty=(Tensor[(13, ?, ?), float64], Tensor[(13, 1, 1), float64]) */
}

def @func_9456(%var_9454: Tensor[(15, 11, 3), float64]) -> Tensor[(15, 11, 3), float64] {
  @func_9453(%var_9454) /* ty=Tensor[(15, 11, 3), float64] */
}

def @func_3125(%var_3123: Tensor[(168), float64]) -> (Tensor[(13, 1, 1), float64], Tensor[(13, 315, ?), int16], Tensor[(168), float64], Tensor[(315), int16]) {
  @func_3122(%var_3123) /* ty=(Tensor[(13, 1, 1), float64], Tensor[(13, 315, ?), int16], Tensor[(168), float64], Tensor[(315), int16]) */
}

def @func_11038() -> Tensor[(13, ?, ?), uint32] {
  %683 = fn () -> Tensor[(13, ?, ?), uint32] {
    @func_7010() /* ty=Tensor[(13, ?, ?), uint32] */
  };
  %683() /* ty=Tensor[(13, ?, ?), uint32] */
}

def @func_9165() -> Tensor[(14, 11, 6), float64] {
  @func_9163() /* ty=Tensor[(14, 11, 6), float64] */
}

def @func_10815(%var_10792: Tensor[(13, 7, 9), float64]) -> (Tensor[(13, 7, 9), uint16], Tensor[(13, 1, 1), float64], Tensor[(13, 1, 1), float64], Tensor[(13, ?, ?), float64]) {
  %684 = @func_7391() /* ty=(Tensor[(13, 1, 1), float64], Tensor[(315), int16]) */;
  %685 = %684.0;
  %686 = cast(%685, dtype="uint16") /* ty=Tensor[(13, 1, 1), uint16] */;
  %687 = cast(%var_10792, dtype="uint16") /* ty=Tensor[(13, 7, 9), uint16] */;
  %688 = @func_9883() /* ty=(Tensor[(13, ?, ?), float64],) */;
  %689 = bitwise_or(%686, %687) /* ty=Tensor[(13, 7, 9), uint16] */;
  %690 = @func_585() /* ty=Tensor[(13, 1, 1), float64] */;
  %691 = @func_3217() /* ty=Tensor[(13, 1, 1), float64] */;
  %692 = %688.0;
  (%689, %690, %691, %692)
}

def @func_4783(%var_4730: Tensor[(13, 13, 14), float64], %var_4767: Tensor[(315), int16]) -> (Tensor[(13, 13, 14), bool], Tensor[(13, 1, 1), float64], Tensor[(13, 1, 1), float64], Tensor[(1, 10, 16), float32], Tensor[(315), int16]) {
  %693 = @func_2230() /* ty=(Tensor[(13, 1, 1), float64], Tensor[(13, 1, 1), float64], Tensor[(13, 1, 1), float64]) */;
  %694 = %693.2;
  %695 = cast(%694, dtype="bool") /* ty=Tensor[(13, 1, 1), bool] */;
  %696 = cast(%var_4730, dtype="bool") /* ty=Tensor[(13, 13, 14), bool] */;
  %697 = cast(%694, dtype="float64") /* ty=Tensor[(13, 1, 1), float64] */;
  %698 = @func_2819() /* ty=(Tensor[(416), float64], Tensor[(416), float64], Tensor[(13, 1, 1), float64]) */;
  %699 = cast(%var_4767, dtype="int16") /* ty=Tensor[(315), int16] */;
  %700 = reshape(%699, newshape=[315]) /* ty=Tensor[(315), int16] */;
  %701 = @func_1649(%700) /* ty=(Tensor[(13, 10, 16), uint8], Tensor[(13, ?, ?), float64], Tensor[(13, ?, ?), float64], Tensor[(1, 10, 16), float32], Tensor[(5, 9, 7), int16], Tensor[(63), int16], Tensor[(315), int16], Tensor[(13, ?, ?), float64], Tensor[(13, 1, 1), float64]) */;
  %702 = logical_or(%695, %696) /* ty=Tensor[(13, 13, 14), bool] */;
  %703 = cosh(%697) /* ty=Tensor[(13, 1, 1), float64] */;
  %704 = %698.2;
  %705 = %701.3;
  (%702, %703, %704, %705, %var_4767)
}

def @func_2500() -> (Tensor[(13, 1, 1), float64], Tensor[(13, 1, 1), float64]) {
  @func_2498() /* ty=(Tensor[(13, 1, 1), float64], Tensor[(13, 1, 1), float64]) */
}

def @func_9581(%var_9567: Tensor[(48), uint64]) -> (Tensor[(13, 1, 1), float64], Tensor[(6, 3, 16), uint64], Tensor[(48), uint64], Tensor[(13, 1, 1), float64]) {
  %706 = @func_1541() /* ty=(Tensor[(13, 1, 1), float64], Tensor[(13, ?, ?), float64]) */;
  %707 = cast(%var_9567, dtype="uint64") /* ty=Tensor[(48), uint64] */;
  %708 = reshape(%707, newshape=[1, 3, 16]) /* ty=Tensor[(1, 3, 16), uint64] */;
  %709 = @func_4829(%708) /* ty=(Tensor[(6, 3, 16), uint64],) */;
  %710 = %706.0;
  %711 = %709.0;
  %712 = @func_3217() /* ty=Tensor[(13, 1, 1), float64] */;
  (%710, %711, %var_9567, %712)
}

def @func_5991() -> Tensor[(13, 1, 1), float64] {
  @func_5989() /* ty=Tensor[(13, 1, 1), float64] */
}

def @func_7262() -> (Tensor[(13, 1, 1), float64],) {
  @func_7260() /* ty=(Tensor[(13, 1, 1), float64],) */
}

def @func_3019() -> (Tensor[(13, 1, 1), float64], Tensor[(1, 10, 16), float32], Tensor[(13, 1, 1), float64]) {
  %713 = @func_2985() /* ty=(Tensor[(13, 1, 1), float64],) */;
  %714 = %713.0;
  %715 = @func_1972() /* ty=Tensor[(1, 10, 16), float32] */;
  %716 = @func_585() /* ty=Tensor[(13, 1, 1), float64] */;
  (%714, %715, %716)
}

def @func_8682(%var_8642: Tensor[(13, 14, 1), float64]) -> (Tensor[(13, 14, 1), bool],) {
  %717 = @func_6150() /* ty=(Tensor[(13, 1, 1), float64],) */;
  %718 = %717.0;
  %719 = cast(%718, dtype="bool") /* ty=Tensor[(13, 1, 1), bool] */;
  %720 = cast(%var_8642, dtype="bool") /* ty=Tensor[(13, 14, 1), bool] */;
  %721 = not_equal(%719, %720) /* ty=Tensor[(13, 14, 1), bool] */;
  %722 = cast(%721, dtype="bool") /* ty=Tensor[(13, 14, 1), bool] */;
  %723 = cast(%718, dtype="bool") /* ty=Tensor[(13, 1, 1), bool] */;
  %724 = less(%722, %723) /* ty=Tensor[(13, 14, 1), bool] */;
  (%724,)
}

def @func_4099(%var_4070: Tensor[(936), float64]) -> (Tensor[(13, 11, 9), float64], Tensor[(13, 1, 1), float64], Tensor[(13, 1, 1), float64], Tensor[(13, 1, 1), float64], Tensor[(936), float64], Tensor[(13, 10, 16), float32], Tensor[(196), float64], Tensor[(13, 1, 1), float32]) {
  %725 = cast(meta[relay.Constant][20] /* ty=Tensor[(13, 11, 9), float64] */, dtype="float64") /* ty=Tensor[(13, 11, 9), float64] */;
  %726 = @func_2512() /* ty=(Tensor[(13, 1, 1), float64],) */;
  %727 = @func_3890() /* ty=(Tensor[(13, 1, 1), float64],) */;
  %728 = cast(%var_4070, dtype="float64") /* ty=Tensor[(936), float64] */;
  %729 = reshape(%728, newshape=[13, 8, 9]) /* ty=Tensor[(13, 8, 9), float64] */;
  %730 = @func_3335(%729) /* ty=(Tensor[(13, 8, 9), bool], Tensor[(13, ?, ?), float64], Tensor[(13, 1, 1), float64]) */;
  %731 = cast(meta[relay.Constant][21] /* ty=Tensor[(196), float64] */, dtype="float64") /* ty=Tensor[(196), float64] */;
  %732 = reshape(%731, newshape=[196]) /* ty=Tensor[(196), float64] */;
  %733 = @func_3833(%732) /* ty=(Tensor[(13, 1, 1), float64], Tensor[(13, 10, 16), float32], Tensor[(196), float64]) */;
  %734 = acosh(%725) /* ty=Tensor[(13, 11, 9), float64] */;
  %735 = %726.0;
  %736 = %727.0;
  %737 = %730.2;
  %738 = %733.1;
  %739 = @func_1370() /* ty=Tensor[(13, 1, 1), float32] */;
  (%734, %735, %736, %737, %var_4070, %738, meta[relay.Constant][21] /* ty=Tensor[(196), float64] */, %739)
}

def @func_4426() -> (Tensor[(416), float64], Tensor[(63), int16], Tensor[(315), int16]) {
  %746 = fn () -> (Tensor[(416), float64], Tensor[(63), int16], Tensor[(315), int16]) {
    %740 = @func_2819() /* ty=(Tensor[(416), float64], Tensor[(416), float64], Tensor[(13, 1, 1), float64]) */;
    %741 = cast(meta[relay.Constant][22] /* ty=Tensor[(315), int16] */, dtype="int16") /* ty=Tensor[(315), int16] */;
    %742 = reshape(%741, newshape=[5, 63]) /* ty=Tensor[(5, 63), int16] */;
    %743 = @func_2657(%742) /* ty=(Tensor[(13, 1, 1), float64], Tensor[(13, 10, 16), bool], Tensor[(5, 9, 7), int16], Tensor[(63), int16], Tensor[(5, 63), int16], Tensor[(13, 1, 1), float64]) */;
    %744 = %740.0;
    %745 = %743.3;
    (%744, %745, meta[relay.Constant][22] /* ty=Tensor[(315), int16] */)
  };
  %746() /* ty=(Tensor[(416), float64], Tensor[(63), int16], Tensor[(315), int16]) */
}

def @func_11498() -> (Tensor[(13, 6, 4), float32],) {
  %747 = @func_3800() /* ty=(Tensor[(13, ?, ?), uint32], Tensor[(13, ?, ?), float64], Tensor[(14, 11, 6), float64], Tensor[(13, 1, 1), float64]) */;
  %748 = %747.3;
  %749 = cast(%748, dtype="float32") /* ty=Tensor[(13, 1, 1), float32] */;
  %750 = cast(meta[relay.Constant][23] /* ty=Tensor[(13, 6, 4), float64] */, dtype="float32") /* ty=Tensor[(13, 6, 4), float32] */;
  %751 = power(%749, %750) /* ty=Tensor[(13, 6, 4), float32] */;
  (%751,)
}

def @func_9354(%var_9353: Tensor[(12, 10, 16), float32]) -> (Tensor[(12, 10, 16), float64],) {
  %760 = fn (%var_9334: Tensor[(12, 10, 16), float32]) -> (Tensor[(12, 10, 16), float64],) {
    %752 = @func_7195() /* ty=(Tensor[(1, 10, 16), float32],) */;
    %753 = %752.0;
    %754 = cast(%753, dtype="bool") /* ty=Tensor[(1, 10, 16), bool] */;
    %755 = cast(%var_9334, dtype="bool") /* ty=Tensor[(12, 10, 16), bool] */;
    %756 = logical_and(%754, %755) /* ty=Tensor[(12, 10, 16), bool] */;
    %757 = cast(%753, dtype="float64") /* ty=Tensor[(1, 10, 16), float64] */;
    %758 = cast(%756, dtype="float64") /* ty=Tensor[(12, 10, 16), float64] */;
    %759 = floor_divide(%757, %758) /* ty=Tensor[(12, 10, 16), float64] */;
    (%759,)
  };
  %760(%var_9353) /* ty=(Tensor[(12, 10, 16), float64],) */
}

def @func_9811(%var_9810: Tensor[(936), float64]) -> (Tensor[(13, 10, 16), float64], Tensor[(1, 936), float64], Tensor[(936), float64], Tensor[(13, 1, 1), float64]) {
  %768 = fn (%var_9789: Tensor[(936), float64]) -> (Tensor[(13, 10, 16), float64], Tensor[(1, 936), float64], Tensor[(936), float64], Tensor[(13, 1, 1), float64]) {
    %761 = cast(%var_9789, dtype="float64") /* ty=Tensor[(936), float64] */;
    %762 = reshape(%761, newshape=[1, 936]) /* ty=Tensor[(1, 936), float64] */;
    %763 = @func_9521(%762) /* ty=(Tensor[(13, 1, 1), float32], Tensor[(196), float64], Tensor[(1, 936), float64]) */;
    %764 = @func_8143() /* ty=(Tensor[(1152), float32], Tensor[(14, 11, 6), float64], Tensor[(13, 1, 1), float64]) */;
    %765 = @func_7312() /* ty=Tensor[(13, 10, 16), float64] */;
    %766 = %763.2;
    %767 = %764.2;
    (%765, %766, %var_9789, %767)
  };
  %768(%var_9810) /* ty=(Tensor[(13, 10, 16), float64], Tensor[(1, 936), float64], Tensor[(936), float64], Tensor[(13, 1, 1), float64]) */
}

def @func_6311() -> (Tensor[(13, 1, 1), float32], Tensor[(13, 1, 1), float64], Tensor[(1152), float32]) {
  %769 = @func_659() /* ty=(Tensor[(13, 1, 1), float64],) */;
  %770 = %769.0;
  %771 = cast(%770, dtype="float32") /* ty=Tensor[(13, 1, 1), float32] */;
  %772 = cast(meta[relay.Constant][24] /* ty=Tensor[(1152), float32] */, dtype="float32") /* ty=Tensor[(1152), float32] */;
  %773 = reshape(%772, newshape=[16, 8, 9]) /* ty=Tensor[(16, 8, 9), float32] */;
  %774 = @func_5013(%773) /* ty=(Tensor[(16, 8, 9), bool], Tensor[(13, 1, 1), float64]) */;
  %775 = cos(%771) /* ty=Tensor[(13, 1, 1), float32] */;
  %776 = %774.1;
  (%775, %776, meta[relay.Constant][24] /* ty=Tensor[(1152), float32] */)
}

def @func_12258() -> (Tensor[(13, 1, 1), float32], Tensor[(7, 9, 14), float64], Tensor[(98, 9), float64], Tensor[(13, 1, 1), float64]) {
  @func_12256() /* ty=(Tensor[(13, 1, 1), float32], Tensor[(7, 9, 14), float64], Tensor[(98, 9), float64], Tensor[(13, 1, 1), float64]) */
}

def @func_4831(%var_4830: Tensor[(1, 3, 16), uint64]) -> (Tensor[(6, 3, 16), uint64],) {
  %780 = fn (%var_4822: Tensor[(1, 3, 16), uint64]) -> (Tensor[(6, 3, 16), uint64],) {
    %777 = cast(%var_4822, dtype="uint64") /* ty=Tensor[(1, 3, 16), uint64] */;
    %778 = cast(meta[relay.Constant][25] /* ty=Tensor[(6, 3, 16), uint64] */, dtype="uint64") /* ty=Tensor[(6, 3, 16), uint64] */;
    %779 = maximum(%777, %778) /* ty=Tensor[(6, 3, 16), uint64] */;
    (%779,)
  };
  %780(%var_4830) /* ty=(Tensor[(6, 3, 16), uint64],) */
}

def @func_1651(%var_1650: Tensor[(315), int16]) -> (Tensor[(13, 10, 16), uint8], Tensor[(13, ?, ?), float64], Tensor[(13, ?, ?), float64], Tensor[(1, 10, 16), float32], Tensor[(5, 9, 7), int16], Tensor[(63), int16], Tensor[(315), int16], Tensor[(13, ?, ?), float64], Tensor[(13, 1, 1), float64]) {
  %798 = fn (%var_1616: Tensor[(315), int16]) -> (Tensor[(13, 10, 16), uint8], Tensor[(13, ?, ?), float64], Tensor[(13, ?, ?), float64], Tensor[(1, 10, 16), float32], Tensor[(5, 9, 7), int16], Tensor[(63), int16], Tensor[(315), int16], Tensor[(13, ?, ?), float64], Tensor[(13, 1, 1), float64]) {
    %781 = @func_861() /* ty=(Tensor[(13, 1, 1), float64], Tensor[(13, 1, 1), float64], Tensor[(13, 10, 16), bool], Tensor[(13, 10, 16), uint8], Tensor[(1, 10, 16), float32]) */;
    %782 = @func_1196() /* ty=(Tensor[(13, ?, ?), float64],) */;
    %783 = @func_1196() /* ty=(Tensor[(13, ?, ?), float64],) */;
    %784 = cast(meta[relay.Constant][26] /* ty=Tensor[(63), int16] */, dtype="int16") /* ty=Tensor[(63), int16] */;
    %785 = cast(%var_1616, dtype="int16") /* ty=Tensor[(315), int16] */;
    %786 = reshape(%784, newshape=[1, 9, 7]) /* ty=Tensor[(1, 9, 7), int16] */;
    %787 = reshape(%785, newshape=[5, 9, 7]) /* ty=Tensor[(5, 9, 7), int16] */;
    %788 = @func_1095(%786, %787) /* ty=(Tensor[(5, 9, 7), int16],) */;
    %789 = @func_1304() /* ty=(Tensor[(13, ?, ?), float64], Tensor[(13, ?, ?), float64]) */;
    %790 = @func_732() /* ty=(Tensor[(13, 1, 1), float64],) */;
    %791 = %781.3;
    %792 = %782.0;
    %793 = %783.0;
    %794 = @func_750() /* ty=Tensor[(1, 10, 16), float32] */;
    %795 = %788.0;
    %796 = %789.0;
    %797 = %790.0;
    (%791, %792, %793, %794, %795, meta[relay.Constant][26] /* ty=Tensor[(63), int16] */, %var_1616, %796, %797)
  };
  %798(%var_1650) /* ty=(Tensor[(13, 10, 16), uint8], Tensor[(13, ?, ?), float64], Tensor[(13, ?, ?), float64], Tensor[(1, 10, 16), float32], Tensor[(5, 9, 7), int16], Tensor[(63), int16], Tensor[(315), int16], Tensor[(13, ?, ?), float64], Tensor[(13, 1, 1), float64]) */
}

def @func_11971() -> Tensor[(1, 10, 16), float32] {
  %799 = @func_750() /* ty=Tensor[(1, 10, 16), float32] */;
  %800 = cast(%799, dtype="float32") /* ty=Tensor[(1, 10, 16), float32] */;
  acosh(%800) /* ty=Tensor[(1, 10, 16), float32] */
}

def @func_6150() -> (Tensor[(13, 1, 1), float64],) {
  %801 = @func_5166() /* ty=(Tensor[(315), int16], Tensor[(13, 1, 1), float64]) */;
  %802 = %801.1;
  (%802,)
}

def @func_5221() -> (Tensor[(13, 1, 1), float64], Tensor[(5, 9, 7), int16], Tensor[(7, 9), int16], Tensor[(315), int16], Tensor[(13, ?, ?), float64], Tensor[(6, 3, 16), uint64], Tensor[(48), uint64]) {
  %803 = @func_2012() /* ty=(Tensor[(13, 1, 1), float64], Tensor[(13, 1, 1), float64], Tensor[(13, 1, 1), float64]) */;
  %804 = cast(meta[relay.Constant][27] /* ty=Tensor[(7, 9), int16] */, dtype="int16") /* ty=Tensor[(7, 9), int16] */;
  %805 = cast(meta[relay.Constant][28] /* ty=Tensor[(315), int16] */, dtype="int16") /* ty=Tensor[(315), int16] */;
  %806 = reshape(%804, newshape=[1, 9, 7]) /* ty=Tensor[(1, 9, 7), int16] */;
  %807 = reshape(%805, newshape=[5, 9, 7]) /* ty=Tensor[(5, 9, 7), int16] */;
  %808 = @func_1095(%806, %807) /* ty=(Tensor[(5, 9, 7), int16],) */;
  %809 = @func_4275() /* ty=(Tensor[(13, ?, ?), float64], Tensor[(13, 1, 1), float64], Tensor[(196), float64]) */;
  %810 = cast(meta[relay.Constant][29] /* ty=Tensor[(48), uint64] */, dtype="uint64") /* ty=Tensor[(48), uint64] */;
  %811 = reshape(%810, newshape=[1, 3, 16]) /* ty=Tensor[(1, 3, 16), uint64] */;
  %812 = @func_4829(%811) /* ty=(Tensor[(6, 3, 16), uint64],) */;
  %813 = %803.0;
  %814 = %808.0;
  %815 = %809.0;
  %816 = %812.0;
  (%813, %814, meta[relay.Constant][27] /* ty=Tensor[(7, 9), int16] */, meta[relay.Constant][28] /* ty=Tensor[(315), int16] */, %815, %816, meta[relay.Constant][29] /* ty=Tensor[(48), uint64] */)
}

def @func_9625() -> (Tensor[(13, ?, ?), uint32],) {
  %818 = fn () -> (Tensor[(13, ?, ?), uint32],) {
    %817 = @func_7010() /* ty=Tensor[(13, ?, ?), uint32] */;
    (%817,)
  };
  %818() /* ty=(Tensor[(13, ?, ?), uint32],) */
}

def @func_8047(%var_8046: Tensor[(105, 3), int16]) -> (Tensor[(315), int16], Tensor[(105, 3), int16], Tensor[(2366), float32], Tensor[(13, ?, 2366), uint64], Tensor[(2366), float64]) {
  %836 = fn (%var_8015: Tensor[(105, 3), int16]) -> (Tensor[(315), int16], Tensor[(105, 3), int16], Tensor[(2366), float32], Tensor[(13, ?, 2366), uint64], Tensor[(2366), float64]) {
    %819 = cast(meta[relay.Constant][30] /* ty=Tensor[(2366), float64] */, dtype="float64") /* ty=Tensor[(2366), float64] */;
    %820 = cast(%var_8015, dtype="int16") /* ty=Tensor[(105, 3), int16] */;
    %821 = reshape(%819, newshape=[13, 13, 14]) /* ty=Tensor[(13, 13, 14), float64] */;
    %822 = reshape(%820, newshape=[315]) /* ty=Tensor[(315), int16] */;
    %823 = @func_4783(%821, %822) /* ty=(Tensor[(13, 13, 14), bool], Tensor[(13, 1, 1), float64], Tensor[(13, 1, 1), float64], Tensor[(1, 10, 16), float32], Tensor[(315), int16]) */;
    %824 = cast(meta[relay.Constant][30] /* ty=Tensor[(2366), float64] */, dtype="float64") /* ty=Tensor[(2366), float64] */;
    %825 = acosh(%824) /* ty=Tensor[(2366), float64] */;
    %826 = cast(%825, dtype="float32") /* ty=Tensor[(2366), float32] */;
    %827 = @func_3205() /* ty=(Tensor[(13, ?, ?), float64], Tensor[(13, ?, ?), float64]) */;
    %828 = %827.1;
    %829 = cast(%825, dtype="uint64") /* ty=Tensor[(2366), uint64] */;
    %830 = cast(%828, dtype="uint64") /* ty=Tensor[(13, ?, ?), uint64] */;
    %831 = cast(meta[relay.Constant][30] /* ty=Tensor[(2366), float64] */, dtype="float64") /* ty=Tensor[(2366), float64] */;
    %832 = %823.4;
    %833 = cos(%826) /* ty=Tensor[(2366), float32] */;
    %834 = logical_xor(%829, %830) /* ty=Tensor[(13, ?, 2366), uint64] */;
    %835 = tan(%831) /* ty=Tensor[(2366), float64] */;
    (%832, %var_8015, %833, %834, %835)
  };
  %836(%var_8046) /* ty=(Tensor[(315), int16], Tensor[(105, 3), int16], Tensor[(2366), float32], Tensor[(13, ?, 2366), uint64], Tensor[(2366), float64]) */
}

def @func_7890() -> (Tensor[(13, 1, 1), float64],) {
  @func_7888() /* ty=(Tensor[(13, 1, 1), float64],) */
}

def @func_7237() -> (Tensor[(13, 1, 1), float64], Tensor[(13, 1, 1), float64], Tensor[(13, 1, 1), float64]) {
  @func_7235() /* ty=(Tensor[(13, 1, 1), float64], Tensor[(13, 1, 1), float64], Tensor[(13, 1, 1), float64]) */
}

def @func_10536() -> Tensor[(13, 1, 1), float64] {
  %837 = fn () -> Tensor[(13, 1, 1), float64] {
    @func_5989() /* ty=Tensor[(13, 1, 1), float64] */
  };
  %837() /* ty=Tensor[(13, 1, 1), float64] */
}

def @func_2730() -> Tensor[(13, ?, ?), uint32] {
  @func_2728() /* ty=Tensor[(13, ?, ?), uint32] */
}

def @func_863() -> (Tensor[(13, 1, 1), float64], Tensor[(13, 1, 1), float64], Tensor[(13, 10, 16), bool], Tensor[(13, 10, 16), uint8], Tensor[(1, 10, 16), float32]) {
  @func_861() /* ty=(Tensor[(13, 1, 1), float64], Tensor[(13, 1, 1), float64], Tensor[(13, 10, 16), bool], Tensor[(13, 10, 16), uint8], Tensor[(1, 10, 16), float32]) */
}

def @func_11229(%var_11216: Tensor[(16, 5, 8), float64]) -> (Tensor[(16, 5, 8), float64],) {
  %838 = cast(%var_11216, dtype="float64") /* ty=Tensor[(16, 5, 8), float64] */;
  %839 = asinh(%838) /* ty=Tensor[(16, 5, 8), float64] */;
  (%839,)
}

def @func_9488(%var_9486: Tensor[(315), int16]) -> (Tensor[(13, 4, 4), bool], Tensor[(63), int16], Tensor[(315), int16]) {
  %840 = @func_2230() /* ty=(Tensor[(13, 1, 1), float64], Tensor[(13, 1, 1), float64], Tensor[(13, 1, 1), float64]) */;
  %841 = %840.0;
  %842 = cast(%841, dtype="bool") /* ty=Tensor[(13, 1, 1), bool] */;
  %843 = cast(meta[relay.Constant][31] /* ty=Tensor[(13, 4, 4), float64] */, dtype="bool") /* ty=Tensor[(13, 4, 4), bool] */;
  %844 = cast(%var_9486, dtype="int16") /* ty=Tensor[(315), int16] */;
  %845 = reshape(%844, newshape=[5, 63]) /* ty=Tensor[(5, 63), int16] */;
  %846 = @func_2657(%845) /* ty=(Tensor[(13, 1, 1), float64], Tensor[(13, 10, 16), bool], Tensor[(5, 9, 7), int16], Tensor[(63), int16], Tensor[(5, 63), int16], Tensor[(13, 1, 1), float64]) */;
  %847 = less(%842, %843) /* ty=Tensor[(13, 4, 4), bool] */;
  %848 = %846.3;
  (%847, %848, %var_9486)
}

def @func_4205() -> (Tensor[(13, 1, 1), float64],) {
  %849 = @func_1729() /* ty=(Tensor[(13, 1, 1), float64],) */;
  %850 = %849.0;
  (%850,)
}

def @func_659() -> (Tensor[(13, 1, 1), float64],) {
  %851 = @func_585() /* ty=Tensor[(13, 1, 1), float64] */;
  (%851,)
}

def @func_10693() -> (Tensor[(13, 1, 1), float64], Tensor[(13, ?, ?), float64], Tensor[(13, 10, 16), float64]) {
  @func_10691() /* ty=(Tensor[(13, 1, 1), float64], Tensor[(13, ?, ?), float64], Tensor[(13, 10, 16), float64]) */
}

def @func_5916() -> (Tensor[(13, 10, 16), float64],) {
  %852 = @func_861() /* ty=(Tensor[(13, 1, 1), float64], Tensor[(13, 1, 1), float64], Tensor[(13, 10, 16), bool], Tensor[(13, 10, 16), uint8], Tensor[(1, 10, 16), float32]) */;
  %853 = %852.3;
  %854 = cast(%853, dtype="float64") /* ty=Tensor[(13, 10, 16), float64] */;
  %855 = atanh(%854) /* ty=Tensor[(13, 10, 16), float64] */;
  (%855,)
}

def @func_7583() -> Tensor[(6, 4, 10), float32] {
  @func_7581() /* ty=Tensor[(6, 4, 10), float32] */
}

def @func_11081() -> (Tensor[(13, 1, 1), float64],) {
  %856 = @func_643() /* ty=(Tensor[(13, 1, 1), float64], Tensor[(13, 1, 1), float64], Tensor[(13, 1, 1), float64]) */;
  %857 = %856.1;
  (%857,)
}

def @func_13168() -> (Tensor[(13, 1, 1), float64], Tensor[(13, 1, 1), float64]) {
  %862 = fn () -> (Tensor[(13, 1, 1), float64], Tensor[(13, 1, 1), float64]) {
    %858 = @func_732() /* ty=(Tensor[(13, 1, 1), float64],) */;
    %859 = @func_2819() /* ty=(Tensor[(416), float64], Tensor[(416), float64], Tensor[(13, 1, 1), float64]) */;
    %860 = %858.0;
    %861 = %859.2;
    (%860, %861)
  };
  %862() /* ty=(Tensor[(13, 1, 1), float64], Tensor[(13, 1, 1), float64]) */
}

def @func_1083(%var_1081: Tensor[(13, 8, 4), float64]) -> (Tensor[(13, 8, 4), int16], Tensor[(13, 10, 16), uint8], Tensor[(13, 1, 1), float64], Tensor[(13, 1, 1), float64], Tensor[(13, 1, 1), float64], Tensor[(13, 1, 1), float64]) {
  @func_1080(%var_1081) /* ty=(Tensor[(13, 8, 4), int16], Tensor[(13, 10, 16), uint8], Tensor[(13, 1, 1), float64], Tensor[(13, 1, 1), float64], Tensor[(13, 1, 1), float64], Tensor[(13, 1, 1), float64]) */
}

def @func_704() -> (Tensor[(13, 1, 1), float64], Tensor[(13, 1, 1), float64], Tensor[(13, 1, 1), float64]) {
  %868 = fn () -> (Tensor[(13, 1, 1), float64], Tensor[(13, 1, 1), float64], Tensor[(13, 1, 1), float64]) {
    %863 = @func_659() /* ty=(Tensor[(13, 1, 1), float64],) */;
    %864 = @func_684() /* ty=(Tensor[(13, 1, 1), float64], Tensor[(13, 1, 1), float64]) */;
    %865 = @func_585() /* ty=Tensor[(13, 1, 1), float64] */;
    %866 = %863.0;
    %867 = %864.1;
    (%865, %866, %867)
  };
  %868() /* ty=(Tensor[(13, 1, 1), float64], Tensor[(13, 1, 1), float64], Tensor[(13, 1, 1), float64]) */
}

def @func_12145() -> Tensor[(13, 1, 1), float64] {
  %870 = fn () -> Tensor[(13, 1, 1), float64] {
    %869 = @func_6150() /* ty=(Tensor[(13, 1, 1), float64],) */;
    %869.0
  };
  %870() /* ty=Tensor[(13, 1, 1), float64] */
}

def @func_3721(%var_3720: Tensor[(14, 14, 1), float64]) -> (Tensor[(14, 14, 1), float64], Tensor[(13, 10, 16), float32]) {
  %877 = fn (%var_3692: Tensor[(14, 14, 1), float64]) -> (Tensor[(14, 14, 1), float64], Tensor[(13, 10, 16), float32]) {
    %871 = cast(%var_3692, dtype="float64") /* ty=Tensor[(14, 14, 1), float64] */;
    %872 = @func_861() /* ty=(Tensor[(13, 1, 1), float64], Tensor[(13, 1, 1), float64], Tensor[(13, 10, 16), bool], Tensor[(13, 10, 16), uint8], Tensor[(1, 10, 16), float32]) */;
    %873 = %872.2;
    %874 = cast(%873, dtype="float32") /* ty=Tensor[(13, 10, 16), float32] */;
    %875 = acosh(%871) /* ty=Tensor[(14, 14, 1), float64] */;
    %876 = cosh(%874) /* ty=Tensor[(13, 10, 16), float32] */;
    (%875, %876)
  };
  %877(%var_3720) /* ty=(Tensor[(14, 14, 1), float64], Tensor[(13, 10, 16), float32]) */
}

def @func_5698(%var_5697: Tensor[(13, 13, 1), float64]) -> (Tensor[(13, 13, 1), float64],) {
  %885 = fn (%var_5684: Tensor[(13, 13, 1), float64]) -> (Tensor[(13, 13, 1), float64],) {
    %878 = @func_1144() /* ty=(Tensor[(13, 1, 1), float64], Tensor[(1, 10, 16), float32]) */;
    %879 = %878.0;
    %880 = cast(%879, dtype="uint32") /* ty=Tensor[(13, 1, 1), uint32] */;
    %881 = cast(%var_5684, dtype="uint32") /* ty=Tensor[(13, 13, 1), uint32] */;
    %882 = multiply(%880, %881) /* ty=Tensor[(13, 13, 1), uint32] */;
    %883 = cast(%882, dtype="float64") /* ty=Tensor[(13, 13, 1), float64] */;
    %884 = cos(%883) /* ty=Tensor[(13, 13, 1), float64] */;
    (%884,)
  };
  %885(%var_5697) /* ty=(Tensor[(13, 13, 1), float64],) */
}

def @func_7010() -> Tensor[(13, ?, ?), uint32] {
  @func_2728() /* ty=Tensor[(13, ?, ?), uint32] */
}

def @func_7235() -> (Tensor[(13, 1, 1), float64], Tensor[(13, 1, 1), float64], Tensor[(13, 1, 1), float64]) {
  %886 = @func_2230() /* ty=(Tensor[(13, 1, 1), float64], Tensor[(13, 1, 1), float64], Tensor[(13, 1, 1), float64]) */;
  %887 = @func_2300() /* ty=Tensor[(13, 1, 1), float64] */;
  %888 = @func_1340() /* ty=Tensor[(13, 1, 1), float64] */;
  %889 = %886.2;
  (%887, %888, %889)
}

def @func_3968() -> (Tensor[(13, 5, 13), uint32], Tensor[(13, 5, 13), float64], Tensor[(13, 1, 1), float64]) {
  %899 = fn () -> (Tensor[(13, 5, 13), uint32], Tensor[(13, 5, 13), float64], Tensor[(13, 1, 1), float64]) {
    %890 = @func_3427() /* ty=(Tensor[(13, 1, 1), float64], Tensor[(13, 1, 1), float64]) */;
    %891 = %890.0;
    %892 = cast(%891, dtype="uint32") /* ty=Tensor[(13, 1, 1), uint32] */;
    %893 = cast(meta[relay.Constant][32] /* ty=Tensor[(13, 5, 13), float64] */, dtype="uint32") /* ty=Tensor[(13, 5, 13), uint32] */;
    %894 = cast(meta[relay.Constant][32] /* ty=Tensor[(13, 5, 13), float64] */, dtype="float64") /* ty=Tensor[(13, 5, 13), float64] */;
    %895 = @func_3427() /* ty=(Tensor[(13, 1, 1), float64], Tensor[(13, 1, 1), float64]) */;
    %896 = minimum(%892, %893) /* ty=Tensor[(13, 5, 13), uint32] */;
    %897 = log(%894) /* ty=Tensor[(13, 5, 13), float64] */;
    %898 = %895.1;
    (%896, %897, %898)
  };
  %899() /* ty=(Tensor[(13, 5, 13), uint32], Tensor[(13, 5, 13), float64], Tensor[(13, 1, 1), float64]) */
}

def @func_5800(%var_5798: Tensor[(12, 8, 2), float32]) -> (Tensor[(12, 8, 2), float32],) {
  @func_5797(%var_5798) /* ty=(Tensor[(12, 8, 2), float32],) */
}

def @func_3297(%var_3296: Tensor[(13, 4, 5), float64]) -> (Tensor[(13, 4, 5), uint32], Tensor[(13, 1, 1), float64]) {
  %907 = fn (%var_3265: Tensor[(13, 4, 5), float64]) -> (Tensor[(13, 4, 5), uint32], Tensor[(13, 1, 1), float64]) {
    %900 = @func_2370() /* ty=(Tensor[(13, ?, ?), float64], Tensor[(13, 1, 1), float64]) */;
    %901 = %900.0;
    %902 = cast(%901, dtype="uint32") /* ty=Tensor[(13, ?, ?), uint32] */;
    %903 = cast(%var_3265, dtype="uint32") /* ty=Tensor[(13, 4, 5), uint32] */;
    %904 = @func_1729() /* ty=(Tensor[(13, 1, 1), float64],) */;
    %905 = add(%902, %903) /* ty=Tensor[(13, 4, 5), uint32] */;
    %906 = %904.0;
    (%905, %906)
  };
  %907(%var_3296) /* ty=(Tensor[(13, 4, 5), uint32], Tensor[(13, 1, 1), float64]) */
}

def @func_684() -> (Tensor[(13, 1, 1), float64], Tensor[(13, 1, 1), float64]) {
  %908 = @func_659() /* ty=(Tensor[(13, 1, 1), float64],) */;
  %909 = @func_659() /* ty=(Tensor[(13, 1, 1), float64],) */;
  %910 = %908.0;
  %911 = %909.0;
  (%910, %911)
}

def @func_7735() -> (Tensor[(1, 10, 16), float64],) {
  @func_7733() /* ty=(Tensor[(1, 10, 16), float64],) */
}

def @func_5081(%var_5080: Tensor[(315, 1), int16]) -> (Tensor[(13, 1, 1), float64], Tensor[(315), int16], Tensor[(1, 2366), float64], Tensor[(13, 1, 1), float64], Tensor[(13, 1, 1), float64], Tensor[(14, 11, 6), float64], Tensor[(13, ?, ?), float64], Tensor[(13, 315, 1), bool]) {
  %931 = fn (%var_5049: Tensor[(315, 1), int16]) -> (Tensor[(13, 1, 1), float64], Tensor[(315), int16], Tensor[(1, 2366), float64], Tensor[(13, 1, 1), float64], Tensor[(13, 1, 1), float64], Tensor[(14, 11, 6), float64], Tensor[(13, ?, ?), float64], Tensor[(13, 315, 1), bool]) {
    %912 = cast(meta[relay.Constant][33] /* ty=Tensor[(1, 2366), float64] */, dtype="float64") /* ty=Tensor[(1, 2366), float64] */;
    %913 = cast(%var_5049, dtype="int16") /* ty=Tensor[(315, 1), int16] */;
    %914 = reshape(%912, newshape=[13, 13, 14]) /* ty=Tensor[(13, 13, 14), float64] */;
    %915 = reshape(%913, newshape=[315]) /* ty=Tensor[(315), int16] */;
    %916 = @func_4783(%914, %915) /* ty=(Tensor[(13, 13, 14), bool], Tensor[(13, 1, 1), float64], Tensor[(13, 1, 1), float64], Tensor[(1, 10, 16), float32], Tensor[(315), int16]) */;
    %917 = @func_2512() /* ty=(Tensor[(13, 1, 1), float64],) */;
    %918 = @func_3634() /* ty=(Tensor[(14, 11, 6), float64],) */;
    %919 = @func_1541() /* ty=(Tensor[(13, 1, 1), float64], Tensor[(13, ?, ?), float64]) */;
    %920 = @func_3967() /* ty=(Tensor[(13, 5, 13), uint32], Tensor[(13, 5, 13), float64], Tensor[(13, 1, 1), float64]) */;
    %921 = %920.2;
    %922 = cast(%921, dtype="bool") /* ty=Tensor[(13, 1, 1), bool] */;
    %923 = cast(%var_5049, dtype="bool") /* ty=Tensor[(315, 1), bool] */;
    %924 = @func_3877() /* ty=Tensor[(13, 1, 1), float64] */;
    %925 = %916.4;
    %926 = %917.0;
    %927 = @func_1499() /* ty=Tensor[(13, 1, 1), float64] */;
    %928 = %918.0;
    %929 = %919.1;
    %930 = logical_or(%922, %923) /* ty=Tensor[(13, 315, 1), bool] */;
    (%924, %925, meta[relay.Constant][33] /* ty=Tensor[(1, 2366), float64] */, %926, %927, %928, %929, %930)
  };
  %931(%var_5080) /* ty=(Tensor[(13, 1, 1), float64], Tensor[(315), int16], Tensor[(1, 2366), float64], Tensor[(13, 1, 1), float64], Tensor[(13, 1, 1), float64], Tensor[(14, 11, 6), float64], Tensor[(13, ?, ?), float64], Tensor[(13, 315, 1), bool]) */
}

def @func_6695() -> (Tensor[(315), int16], Tensor[(13, 1, 1), float64]) {
  %936 = fn () -> (Tensor[(315), int16], Tensor[(13, 1, 1), float64]) {
    %932 = @func_4425() /* ty=(Tensor[(416), float64], Tensor[(63), int16], Tensor[(315), int16]) */;
    %933 = @func_4133() /* ty=(Tensor[(13, 1, 1), float64], Tensor[(13, 1, 1), float64]) */;
    %934 = %932.2;
    %935 = %933.1;
    (%934, %935)
  };
  %936() /* ty=(Tensor[(315), int16], Tensor[(13, 1, 1), float64]) */
}

def @func_2657(%var_2631: Tensor[(5, 63), int16]) -> (Tensor[(13, 1, 1), float64], Tensor[(13, 10, 16), bool], Tensor[(5, 9, 7), int16], Tensor[(63), int16], Tensor[(5, 63), int16], Tensor[(13, 1, 1), float64]) {
  %937 = @func_1541() /* ty=(Tensor[(13, 1, 1), float64], Tensor[(13, ?, ?), float64]) */;
  %938 = @func_861() /* ty=(Tensor[(13, 1, 1), float64], Tensor[(13, 1, 1), float64], Tensor[(13, 10, 16), bool], Tensor[(13, 10, 16), uint8], Tensor[(1, 10, 16), float32]) */;
  %939 = cast(meta[relay.Constant][34] /* ty=Tensor[(63), int16] */, dtype="int16") /* ty=Tensor[(63), int16] */;
  %940 = cast(%var_2631, dtype="int16") /* ty=Tensor[(5, 63), int16] */;
  %941 = reshape(%939, newshape=[1, 9, 7]) /* ty=Tensor[(1, 9, 7), int16] */;
  %942 = reshape(%940, newshape=[5, 9, 7]) /* ty=Tensor[(5, 9, 7), int16] */;
  %943 = @func_1095(%941, %942) /* ty=(Tensor[(5, 9, 7), int16],) */;
  %944 = %937.0;
  %945 = %938.2;
  %946 = %943.0;
  %947 = @func_1499() /* ty=Tensor[(13, 1, 1), float64] */;
  (%944, %945, %946, meta[relay.Constant][34] /* ty=Tensor[(63), int16] */, %var_2631, %947)
}

def @func_12856() -> Tensor[(13, 1, 1), float64] {
  %948 = @func_2498() /* ty=(Tensor[(13, 1, 1), float64], Tensor[(13, 1, 1), float64]) */;
  %948.0
}

def @func_795(%var_794: Tensor[(13, 3, 6), float64]) -> (Tensor[(13, 3, 6), bool],) {
  %954 = fn (%var_781: Tensor[(13, 3, 6), float64]) -> (Tensor[(13, 3, 6), bool],) {
    %949 = @func_659() /* ty=(Tensor[(13, 1, 1), float64],) */;
    %950 = %949.0;
    %951 = cast(%950, dtype="bool") /* ty=Tensor[(13, 1, 1), bool] */;
    %952 = cast(%var_781, dtype="bool") /* ty=Tensor[(13, 3, 6), bool] */;
    %953 = greater(%951, %952) /* ty=Tensor[(13, 3, 6), bool] */;
    (%953,)
  };
  %954(%var_794) /* ty=(Tensor[(13, 3, 6), bool],) */
}

def @func_7808() -> (Tensor[(13, 1, 1), float64],) {
  %957 = fn () -> (Tensor[(13, 1, 1), float64],) {
    %955 = @func_3427() /* ty=(Tensor[(13, 1, 1), float64], Tensor[(13, 1, 1), float64]) */;
    %956 = %955.1;
    (%956,)
  };
  %957() /* ty=(Tensor[(13, 1, 1), float64],) */
}

def @func_5322() -> Tensor[(13, 1, 1), float64] {
  %958 = fn () -> Tensor[(13, 1, 1), float64] {
    @func_3812() /* ty=Tensor[(13, 1, 1), float64] */
  };
  %958() /* ty=Tensor[(13, 1, 1), float64] */
}

def @func_9491(%var_9489: Tensor[(315), int16]) -> (Tensor[(13, 4, 4), bool], Tensor[(63), int16], Tensor[(315), int16]) {
  @func_9488(%var_9489) /* ty=(Tensor[(13, 4, 4), bool], Tensor[(63), int16], Tensor[(315), int16]) */
}

def @func_1198() -> (Tensor[(13, ?, ?), float64],) {
  @func_1196() /* ty=(Tensor[(13, ?, ?), float64],) */
}

def @func_2084(%var_2082: Tensor[(7, 2, 12), float64], %var_2083: Tensor[(315, 1), int16]) -> (Tensor[(7, 2, 12), float64], Tensor[(13, 1, 1), float64], Tensor[(13, 10, 16), bool], Tensor[(13, 315, ?), int16]) {
  %978 = fn (%var_2022: Tensor[(7, 2, 12), float64], %var_2038: Tensor[(315, 1), int16]) -> (Tensor[(7, 2, 12), float64], Tensor[(13, 1, 1), float64], Tensor[(13, 10, 16), bool], Tensor[(13, 315, ?), int16]) {
    %959 = cast(%var_2022, dtype="float64") /* ty=Tensor[(7, 2, 12), float64] */;
    %960 = @func_861() /* ty=(Tensor[(13, 1, 1), float64], Tensor[(13, 1, 1), float64], Tensor[(13, 10, 16), bool], Tensor[(13, 10, 16), uint8], Tensor[(1, 10, 16), float32]) */;
    %961 = @func_643() /* ty=(Tensor[(13, 1, 1), float64], Tensor[(13, 1, 1), float64], Tensor[(13, 1, 1), float64]) */;
    %962 = %961.1;
    %963 = cast(%var_2038, dtype="int16") /* ty=Tensor[(315, 1), int16] */;
    %964 = reshape(%963, newshape=[315]) /* ty=Tensor[(315), int16] */;
    %965 = @func_1649(%964) /* ty=(Tensor[(13, 10, 16), uint8], Tensor[(13, ?, ?), float64], Tensor[(13, ?, ?), float64], Tensor[(1, 10, 16), float32], Tensor[(5, 9, 7), int16], Tensor[(63), int16], Tensor[(315), int16], Tensor[(13, ?, ?), float64], Tensor[(13, 1, 1), float64]) */;
    %966 = %965.2;
    %967 = cast(%966, dtype="float64") /* ty=Tensor[(13, ?, ?), float64] */;
    %968 = shape_of(%962, dtype="int32") /* ty=Tensor[(3), int32] */;
    %969 = cast(%962, dtype="float64") /* ty=Tensor[(13, 1, 1), float64] */;
    %970 = dyn.reshape(%967, %968, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
    %971 = floor_mod(%969, %970) /* ty=Tensor[(13, ?, ?), float64] */;
    %972 = cast(%971, dtype="int16") /* ty=Tensor[(13, ?, ?), int16] */;
    %973 = cast(%var_2038, dtype="int16") /* ty=Tensor[(315, 1), int16] */;
    %974 = cos(%959) /* ty=Tensor[(7, 2, 12), float64] */;
    %975 = @func_1499() /* ty=Tensor[(13, 1, 1), float64] */;
    %976 = %960.2;
    %977 = subtract(%972, %973) /* ty=Tensor[(13, 315, ?), int16] */;
    (%974, %975, %976, %977)
  };
  %978(%var_2082, %var_2083) /* ty=(Tensor[(7, 2, 12), float64], Tensor[(13, 1, 1), float64], Tensor[(13, 10, 16), bool], Tensor[(13, 315, ?), int16]) */
}

def @func_10609() -> Tensor[(1152), float32] {
  @func_10607() /* ty=Tensor[(1152), float32] */
}

def @func_9411() -> (Tensor[(13, 1, 1), float32],) {
  %979 = @func_5384() /* ty=(Tensor[(13, ?, ?), bool], Tensor[(13, ?, ?), float64], Tensor[(13, ?, ?), float64], Tensor[(13, 1, 1), float64], Tensor[(13, 1, 1), float32]) */;
  %980 = %979.4;
  (%980,)
}

def @func_11877(%var_11875: Tensor[(4, 11, 15), float32]) -> Tensor[(4, 11, 15), float32] {
  @func_11874(%var_11875) /* ty=Tensor[(4, 11, 15), float32] */
}

def @func_1304() -> (Tensor[(13, ?, ?), float64], Tensor[(13, ?, ?), float64]) {
  %981 = @func_1196() /* ty=(Tensor[(13, ?, ?), float64],) */;
  %982 = @func_1196() /* ty=(Tensor[(13, ?, ?), float64],) */;
  %983 = %981.0;
  %984 = %982.0;
  (%983, %984)
}

def @func_2013() -> (Tensor[(13, 1, 1), float64], Tensor[(13, 1, 1), float64], Tensor[(13, 1, 1), float64]) {
  %991 = fn () -> (Tensor[(13, 1, 1), float64], Tensor[(13, 1, 1), float64], Tensor[(13, 1, 1), float64]) {
    %985 = @func_861() /* ty=(Tensor[(13, 1, 1), float64], Tensor[(13, 1, 1), float64], Tensor[(13, 10, 16), bool], Tensor[(13, 10, 16), uint8], Tensor[(1, 10, 16), float32]) */;
    %986 = @func_1776() /* ty=(Tensor[(13, 1, 1), float64], Tensor[(13, 1, 1), float64], Tensor[(13, 1, 1), float64], Tensor[(13, 1, 1), float64], Tensor[(416), float64]) */;
    %987 = @func_684() /* ty=(Tensor[(13, 1, 1), float64], Tensor[(13, 1, 1), float64]) */;
    %988 = %985.0;
    %989 = %986.0;
    %990 = %987.1;
    (%988, %989, %990)
  };
  %991() /* ty=(Tensor[(13, 1, 1), float64], Tensor[(13, 1, 1), float64], Tensor[(13, 1, 1), float64]) */
}

def @func_5145(%var_5144: Tensor[(13, 2, 9), float64]) -> (Tensor[(13, 2, 9), int32], Tensor[(13, 1, 1), float64]) {
  %999 = fn (%var_5129: Tensor[(13, 2, 9), float64]) -> (Tensor[(13, 2, 9), int32], Tensor[(13, 1, 1), float64]) {
    %992 = @func_3205() /* ty=(Tensor[(13, ?, ?), float64], Tensor[(13, ?, ?), float64]) */;
    %993 = %992.1;
    %994 = cast(%993, dtype="int32") /* ty=Tensor[(13, ?, ?), int32] */;
    %995 = cast(%var_5129, dtype="int32") /* ty=Tensor[(13, 2, 9), int32] */;
    %996 = @func_2320() /* ty=(Tensor[(13, 1, 1), float64], Tensor[(13, 1, 1), float64]) */;
    %997 = bitwise_xor(%994, %995) /* ty=Tensor[(13, 2, 9), int32] */;
    %998 = %996.1;
    (%997, %998)
  };
  %999(%var_5144) /* ty=(Tensor[(13, 2, 9), int32], Tensor[(13, 1, 1), float64]) */
}

def @func_12345(%var_12344: Tensor[(4, 7, 10), uint32]) -> (Tensor[(13, 1, 1), float64], Tensor[(5, 5, 4), float64], Tensor[(13, 1, 1), float64], Tensor[(4, 7, 10), uint64], Tensor[(13, 10, 16), float64]) {
  %1018 = fn (%var_12296: Tensor[(4, 7, 10), uint32]) -> (Tensor[(13, 1, 1), float64], Tensor[(5, 5, 4), float64], Tensor[(13, 1, 1), float64], Tensor[(4, 7, 10), uint64], Tensor[(13, 10, 16), float64]) {
    %1000 = @func_11074() /* ty=(Tensor[(5, 5, 4), float32], Tensor[(5, 5, 4), float64]) */;
    %1001 = @func_2320() /* ty=(Tensor[(13, 1, 1), float64], Tensor[(13, 1, 1), float64]) */;
    %1002 = cast(meta[relay.Constant][35] /* ty=Tensor[(4, 7, 10), uint32] */, dtype="bool") /* ty=Tensor[(4, 7, 10), bool] */;
    %1003 = shape_of(%var_12296, dtype="int32") /* ty=Tensor[(3), int32] */;
    %1004 = cast(%var_12296, dtype="bool") /* ty=Tensor[(4, 7, 10), bool] */;
    %1005 = dyn.reshape(%1002, %1003, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    %1006 = less(%1004, %1005) /* ty=Tensor[(4, 7, 10), bool] */;
    %1007 = cast(%1006, dtype="float64") /* ty=Tensor[(4, 7, 10), float64] */;
    %1008 = erf(%1007) /* ty=Tensor[(4, 7, 10), float64] */;
    %1009 = cast(meta[relay.Constant][35] /* ty=Tensor[(4, 7, 10), uint32] */, dtype="uint64") /* ty=Tensor[(4, 7, 10), uint64] */;
    %1010 = shape_of(%1008, dtype="int32") /* ty=Tensor[(3), int32] */;
    %1011 = cast(%1008, dtype="uint64") /* ty=Tensor[(4, 7, 10), uint64] */;
    %1012 = dyn.reshape(%1009, %1010, newshape=[]) /* ty=Tensor[(?, ?, ?), uint64] */;
    %1013 = @func_3812() /* ty=Tensor[(13, 1, 1), float64] */;
    %1014 = %1000.1;
    %1015 = %1001.0;
    %1016 = bitwise_xor(%1011, %1012) /* ty=Tensor[(4, 7, 10), uint64] */;
    %1017 = @func_9711() /* ty=Tensor[(13, 10, 16), float64] */;
    (%1013, %1014, %1015, %1016, %1017)
  };
  %1018(%var_12344) /* ty=(Tensor[(13, 1, 1), float64], Tensor[(5, 5, 4), float64], Tensor[(13, 1, 1), float64], Tensor[(4, 7, 10), uint64], Tensor[(13, 10, 16), float64]) */
}

def @func_13107() -> Tensor[(13, 1, 1), float64] {
  @func_13105() /* ty=Tensor[(13, 1, 1), float64] */
}

def @func_9845(%var_9832: Tensor[(13, 4, 13), float64]) -> (Tensor[(13, 4, 13), bool],) {
  %1019 = @func_5713() /* ty=(Tensor[(13, 1, 1), float64], Tensor[(13, 1, 1), float64], Tensor[(13, 1, 1), float64]) */;
  %1020 = %1019.1;
  %1021 = cast(%1020, dtype="bool") /* ty=Tensor[(13, 1, 1), bool] */;
  %1022 = cast(%var_9832, dtype="bool") /* ty=Tensor[(13, 4, 13), bool] */;
  %1023 = less(%1021, %1022) /* ty=Tensor[(13, 4, 13), bool] */;
  (%1023,)
}

def @func_8076() -> (Tensor[(13, 1, 1), float64], Tensor[(13, 1, 1), float64]) {
  %1024 = @func_6266() /* ty=(Tensor[(13, 1, 1), float64], Tensor[(13, 1, 1), float64], Tensor[(13, 1, 1), float64]) */;
  %1025 = @func_6826() /* ty=(Tensor[(13, ?, ?), float64], Tensor[(13, 1, 1), float64]) */;
  %1026 = %1024.0;
  %1027 = %1025.1;
  (%1026, %1027)
}

def @func_11155() -> (Tensor[(13, 10, 16), float64],) {
  %1030 = fn () -> (Tensor[(13, 10, 16), float64],) {
    %1028 = @func_7941() /* ty=(Tensor[(13, ?, ?), float64], Tensor[(13, 10, 16), float64]) */;
    %1029 = %1028.1;
    (%1029,)
  };
  %1030() /* ty=(Tensor[(13, 10, 16), float64],) */
}

def @func_8759() -> (Tensor[(13, 1, 1), float64], Tensor[(416), float64], Tensor[(13, 1, 1), float64]) {
  @func_8757() /* ty=(Tensor[(13, 1, 1), float64], Tensor[(416), float64], Tensor[(13, 1, 1), float64]) */
}

def @func_6539() -> (Tensor[(5, 9, 7), int16], Tensor[(13, 1, 1), float64], Tensor[(13, 1, 1), float64]) {
  %1037 = fn () -> (Tensor[(5, 9, 7), int16], Tensor[(13, 1, 1), float64], Tensor[(13, 1, 1), float64]) {
    %1031 = @func_5221() /* ty=(Tensor[(13, 1, 1), float64], Tensor[(5, 9, 7), int16], Tensor[(7, 9), int16], Tensor[(315), int16], Tensor[(13, ?, ?), float64], Tensor[(6, 3, 16), uint64], Tensor[(48), uint64]) */;
    %1032 = @func_5713() /* ty=(Tensor[(13, 1, 1), float64], Tensor[(13, 1, 1), float64], Tensor[(13, 1, 1), float64]) */;
    %1033 = @func_1776() /* ty=(Tensor[(13, 1, 1), float64], Tensor[(13, 1, 1), float64], Tensor[(13, 1, 1), float64], Tensor[(13, 1, 1), float64], Tensor[(416), float64]) */;
    %1034 = %1031.1;
    %1035 = %1032.1;
    %1036 = %1033.2;
    (%1034, %1035, %1036)
  };
  %1037() /* ty=(Tensor[(5, 9, 7), int16], Tensor[(13, 1, 1), float64], Tensor[(13, 1, 1), float64]) */
}

def @func_6915() -> (Tensor[(13, 10, 16), uint8],) {
  %1040 = fn () -> (Tensor[(13, 10, 16), uint8],) {
    %1038 = @func_861() /* ty=(Tensor[(13, 1, 1), float64], Tensor[(13, 1, 1), float64], Tensor[(13, 10, 16), bool], Tensor[(13, 10, 16), uint8], Tensor[(1, 10, 16), float32]) */;
    %1039 = %1038.3;
    (%1039,)
  };
  %1040() /* ty=(Tensor[(13, 10, 16), uint8],) */
}

def @func_10326() -> (Tensor[(13, 1, 1), float64], Tensor[(9, 1, 13), float64]) {
  %1041 = @func_7332() /* ty=(Tensor[(13, 1, 1), float64],) */;
  %1042 = %1041.0;
  %1043 = @func_8340() /* ty=Tensor[(9, 1, 13), float64] */;
  (%1042, %1043)
}

def @func_2948() -> (Tensor[(13, 1, 1), float64], Tensor[(13, ?, ?), uint32]) {
  %1047 = fn () -> (Tensor[(13, 1, 1), float64], Tensor[(13, ?, ?), uint32]) {
    %1044 = @func_964() /* ty=(Tensor[(13, 1, 1), float64],) */;
    %1045 = %1044.0;
    %1046 = @func_2728() /* ty=Tensor[(13, ?, ?), uint32] */;
    (%1045, %1046)
  };
  %1047() /* ty=(Tensor[(13, 1, 1), float64], Tensor[(13, ?, ?), uint32]) */
}

def @func_8224() -> (Tensor[(13, ?, ?), float64],) {
  %1048 = @func_2346() /* ty=(Tensor[(13, ?, ?), float64],) */;
  %1049 = %1048.0;
  (%1049,)
}

def @func_1886() -> (Tensor[(13, ?, ?), float64], Tensor[(13, ?, ?), bool], Tensor[(13, 1, 1), float64], Tensor[(1, 10, 16), float32], Tensor[(13, 1, 1), float64]) {
  %1050 = @func_1541() /* ty=(Tensor[(13, 1, 1), float64], Tensor[(13, ?, ?), float64]) */;
  %1051 = @func_1541() /* ty=(Tensor[(13, 1, 1), float64], Tensor[(13, ?, ?), float64]) */;
  %1052 = %1051.1;
  %1053 = @func_1304() /* ty=(Tensor[(13, ?, ?), float64], Tensor[(13, ?, ?), float64]) */;
  %1054 = %1053.1;
  %1055 = cast(%1054, dtype="bool") /* ty=Tensor[(13, ?, ?), bool] */;
  %1056 = shape_of(%1052, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1057 = cast(%1052, dtype="bool") /* ty=Tensor[(13, ?, ?), bool] */;
  %1058 = dyn.reshape(%1055, %1056, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %1059 = @func_1144() /* ty=(Tensor[(13, 1, 1), float64], Tensor[(1, 10, 16), float32]) */;
  %1060 = @func_750() /* ty=Tensor[(1, 10, 16), float32] */;
  %1061 = cast(%1060, dtype="float32") /* ty=Tensor[(1, 10, 16), float32] */;
  %1062 = @func_703() /* ty=(Tensor[(13, 1, 1), float64], Tensor[(13, 1, 1), float64], Tensor[(13, 1, 1), float64]) */;
  %1063 = %1050.1;
  %1064 = less_equal(%1057, %1058) /* ty=Tensor[(13, ?, ?), bool] */;
  %1065 = %1059.0;
  %1066 = rsqrt(%1061) /* ty=Tensor[(1, 10, 16), float32] */;
  %1067 = %1062.1;
  (%1063, %1064, %1065, %1066, %1067)
}

def @func_1470() -> (Tensor[(13, ?, ?), float64], Tensor[(13, 1, 1), float64]) {
  @func_1468() /* ty=(Tensor[(13, ?, ?), float64], Tensor[(13, 1, 1), float64]) */
}

def @func_8102() -> Tensor[(13, ?, ?), float64] {
  %1068 = @func_1468() /* ty=(Tensor[(13, ?, ?), float64], Tensor[(13, 1, 1), float64]) */;
  %1068.0
}

def @func_11076() -> (Tensor[(5, 5, 4), float32], Tensor[(5, 5, 4), float64]) {
  @func_11074() /* ty=(Tensor[(5, 5, 4), float32], Tensor[(5, 5, 4), float64]) */
}

def @func_2576() -> (Tensor[(13, 1, 1), float64], Tensor[(13, 1, 1), float64], Tensor[(416), float64], Tensor[(13, 1, 1), float64]) {
  %1076 = fn () -> (Tensor[(13, 1, 1), float64], Tensor[(13, 1, 1), float64], Tensor[(416), float64], Tensor[(13, 1, 1), float64]) {
    %1069 = cast(meta[relay.Constant][36] /* ty=Tensor[(416), float64] */, dtype="float64") /* ty=Tensor[(416), float64] */;
    %1070 = reshape(%1069, newshape=[13, 8, 4]) /* ty=Tensor[(13, 8, 4), float64] */;
    %1071 = @func_1080(%1070) /* ty=(Tensor[(13, 8, 4), int16], Tensor[(13, 10, 16), uint8], Tensor[(13, 1, 1), float64], Tensor[(13, 1, 1), float64], Tensor[(13, 1, 1), float64], Tensor[(13, 1, 1), float64]) */;
    %1072 = @func_703() /* ty=(Tensor[(13, 1, 1), float64], Tensor[(13, 1, 1), float64], Tensor[(13, 1, 1), float64]) */;
    %1073 = @func_1340() /* ty=Tensor[(13, 1, 1), float64] */;
    %1074 = %1071.3;
    %1075 = %1072.2;
    (%1073, %1074, meta[relay.Constant][36] /* ty=Tensor[(416), float64] */, %1075)
  };
  %1076() /* ty=(Tensor[(13, 1, 1), float64], Tensor[(13, 1, 1), float64], Tensor[(416), float64], Tensor[(13, 1, 1), float64]) */
}

def @func_9163() -> Tensor[(14, 11, 6), float64] {
  @func_7531() /* ty=Tensor[(14, 11, 6), float64] */
}

def @func_6785() -> Tensor[(13, 1, 1), float64] {
  %1078 = fn () -> Tensor[(13, 1, 1), float64] {
    %1077 = @func_3398() /* ty=(Tensor[(13, 1, 1), float64],) */;
    %1077.0
  };
  %1078() /* ty=Tensor[(13, 1, 1), float64] */
}

def @func_11083() -> (Tensor[(13, 1, 1), float64],) {
  @func_11081() /* ty=(Tensor[(13, 1, 1), float64],) */
}

def @func_9713() -> Tensor[(13, 10, 16), float64] {
  @func_9711() /* ty=Tensor[(13, 10, 16), float64] */
}

def @func_5510(%var_5508: Tensor[(3, 3, 8), uint8]) -> (Tensor[(3, 3, 8), uint8], Tensor[(13, 1, 1), float64]) {
  @func_5507(%var_5508) /* ty=(Tensor[(3, 3, 8), uint8], Tensor[(13, 1, 1), float64]) */
}

def @func_1099(%var_1097: Tensor[(1, 9, 7), int16], %var_1098: Tensor[(5, 9, 7), int16]) -> (Tensor[(5, 9, 7), int16],) {
  @func_1095(%var_1097, %var_1098) /* ty=(Tensor[(5, 9, 7), int16],) */
}

def @func_7332() -> (Tensor[(13, 1, 1), float64],) {
  %1079 = @func_4205() /* ty=(Tensor[(13, 1, 1), float64],) */;
  %1080 = %1079.0;
  (%1080,)
}

def @func_8078() -> (Tensor[(13, 1, 1), float64], Tensor[(13, 1, 1), float64]) {
  @func_8076() /* ty=(Tensor[(13, 1, 1), float64], Tensor[(13, 1, 1), float64]) */
}

def @func_965() -> (Tensor[(13, 1, 1), float64],) {
  %1083 = fn () -> (Tensor[(13, 1, 1), float64],) {
    %1081 = @func_703() /* ty=(Tensor[(13, 1, 1), float64], Tensor[(13, 1, 1), float64], Tensor[(13, 1, 1), float64]) */;
    %1082 = %1081.1;
    (%1082,)
  };
  %1083() /* ty=(Tensor[(13, 1, 1), float64],) */
}

def @func_3206() -> (Tensor[(13, ?, ?), float64], Tensor[(13, ?, ?), float64]) {
  %1088 = fn () -> (Tensor[(13, ?, ?), float64], Tensor[(13, ?, ?), float64]) {
    %1084 = @func_1304() /* ty=(Tensor[(13, ?, ?), float64], Tensor[(13, ?, ?), float64]) */;
    %1085 = @func_1468() /* ty=(Tensor[(13, ?, ?), float64], Tensor[(13, 1, 1), float64]) */;
    %1086 = %1084.0;
    %1087 = %1085.0;
    (%1086, %1087)
  };
  %1088() /* ty=(Tensor[(13, ?, ?), float64], Tensor[(13, ?, ?), float64]) */
}

def @func_3891() -> (Tensor[(13, 1, 1), float64],) {
  %1091 = fn () -> (Tensor[(13, 1, 1), float64],) {
    %1089 = @func_659() /* ty=(Tensor[(13, 1, 1), float64],) */;
    %1090 = %1089.0;
    (%1090,)
  };
  %1091() /* ty=(Tensor[(13, 1, 1), float64],) */
}

def @func_11134() -> Tensor[(13, 1, 1), float64] {
  %1092 = @func_964() /* ty=(Tensor[(13, 1, 1), float64],) */;
  %1092.0
}

def @main() -> (Tensor[(13, ?, ?), uint32],) {
  %1093 = @func_13105() /* ty=Tensor[(13, 1, 1), float64] */;
  %1094 = @func_2231() /* ty=(Tensor[(13, 1, 1), float64], Tensor[(13, 1, 1), float64], Tensor[(13, 1, 1), float64]) */;
  %1095 = %1094.2;
  %1096 = cast(%1095, dtype="uint32") /* ty=Tensor[(13, 1, 1), uint32] */;
  %1097 = shape_of(%1093, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1098 = cast(%1093, dtype="uint32") /* ty=Tensor[(13, 1, 1), uint32] */;
  %1099 = dyn.reshape(%1096, %1097, newshape=[]) /* ty=Tensor[(?, ?, ?), uint32] */;
  %1100 = bitwise_xor(%1098, %1099) /* ty=Tensor[(13, ?, ?), uint32] */;
  (%1100,)
}

def @func_3634() -> (Tensor[(14, 11, 6), float64],) {
  %1101 = cast(meta[relay.Constant][37] /* ty=Tensor[(14, 11, 6), float64] */, dtype="float64") /* ty=Tensor[(14, 11, 6), float64] */;
  %1102 = asin(%1101) /* ty=Tensor[(14, 11, 6), float64] */;
  (%1102,)
}

def @func_12858() -> Tensor[(13, 1, 1), float64] {
  @func_12856() /* ty=Tensor[(13, 1, 1), float64] */
}

def @func_9055() -> (Tensor[(13, 1, 1), float32], Tensor[(416), float64]) {
  %1103 = @func_6311() /* ty=(Tensor[(13, 1, 1), float32], Tensor[(13, 1, 1), float64], Tensor[(1152), float32]) */;
  %1104 = @func_1776() /* ty=(Tensor[(13, 1, 1), float64], Tensor[(13, 1, 1), float64], Tensor[(13, 1, 1), float64], Tensor[(13, 1, 1), float64], Tensor[(416), float64]) */;
  %1105 = %1103.0;
  %1106 = %1104.4;
  (%1105, %1106)
}

def @func_12526() -> (Tensor[(416), float64],) {
  %1109 = fn () -> (Tensor[(416), float64],) {
    %1107 = @func_8757() /* ty=(Tensor[(13, 1, 1), float64], Tensor[(416), float64], Tensor[(13, 1, 1), float64]) */;
    %1108 = %1107.1;
    (%1108,)
  };
  %1109() /* ty=(Tensor[(416), float64],) */
}

def @func_2321() -> (Tensor[(13, 1, 1), float64], Tensor[(13, 1, 1), float64]) {
  %1116 = fn () -> (Tensor[(13, 1, 1), float64], Tensor[(13, 1, 1), float64]) {
    %1110 = @func_1804() /* ty=(Tensor[(13, 1, 1), float64],) */;
    %1111 = @func_1144() /* ty=(Tensor[(13, 1, 1), float64], Tensor[(1, 10, 16), float32]) */;
    %1112 = %1111.0;
    %1113 = cast(%1112, dtype="float64") /* ty=Tensor[(13, 1, 1), float64] */;
    %1114 = %1110.0;
    %1115 = asinh(%1113) /* ty=Tensor[(13, 1, 1), float64] */;
    (%1114, %1115)
  };
  %1116() /* ty=(Tensor[(13, 1, 1), float64], Tensor[(13, 1, 1), float64]) */
}

def @func_6976() -> (Tensor[(13, 1, 1), float64], Tensor[(13, 1, 1), float64]) {
  %1121 = fn () -> (Tensor[(13, 1, 1), float64], Tensor[(13, 1, 1), float64]) {
    %1117 = @func_2575() /* ty=(Tensor[(13, 1, 1), float64], Tensor[(13, 1, 1), float64], Tensor[(416), float64], Tensor[(13, 1, 1), float64]) */;
    %1118 = @func_2230() /* ty=(Tensor[(13, 1, 1), float64], Tensor[(13, 1, 1), float64], Tensor[(13, 1, 1), float64]) */;
    %1119 = %1117.3;
    %1120 = %1118.0;
    (%1119, %1120)
  };
  %1121() /* ty=(Tensor[(13, 1, 1), float64], Tensor[(13, 1, 1), float64]) */
}

def @func_11986() -> Tensor[(13, 1, 1), float64] {
  %1123 = fn () -> Tensor[(13, 1, 1), float64] {
    %1122 = @func_684() /* ty=(Tensor[(13, 1, 1), float64], Tensor[(13, 1, 1), float64]) */;
    %1122.0
  };
  %1123() /* ty=Tensor[(13, 1, 1), float64] */
}

def @func_8757() -> (Tensor[(13, 1, 1), float64], Tensor[(416), float64], Tensor[(13, 1, 1), float64]) {
  %1124 = @func_3059() /* ty=(Tensor[(13, 1, 1), float64],) */;
  %1125 = @func_3247() /* ty=(Tensor[(13, 1, 1), float64], Tensor[(416), float64], Tensor[(13, ?, ?), float64]) */;
  %1126 = @func_3398() /* ty=(Tensor[(13, 1, 1), float64],) */;
  %1127 = %1124.0;
  %1128 = %1125.1;
  %1129 = %1126.0;
  (%1127, %1128, %1129)
}

def @func_11896() -> (Tensor[(8, 7, 8), float32], Tensor[(13, 1, 1), float64]) {
  %1134 = fn () -> (Tensor[(8, 7, 8), float32], Tensor[(13, 1, 1), float64]) {
    %1130 = cast(meta[relay.Constant][38] /* ty=Tensor[(8, 7, 8), float32] */, dtype="float32") /* ty=Tensor[(8, 7, 8), float32] */;
    %1131 = @func_6975() /* ty=(Tensor[(13, 1, 1), float64], Tensor[(13, 1, 1), float64]) */;
    %1132 = sigmoid(%1130) /* ty=Tensor[(8, 7, 8), float32] */;
    %1133 = %1131.0;
    (%1132, %1133)
  };
  %1134() /* ty=(Tensor[(8, 7, 8), float32], Tensor[(13, 1, 1), float64]) */
}

def @func_5507(%var_5494: Tensor[(3, 3, 8), uint8]) -> (Tensor[(3, 3, 8), uint8], Tensor[(13, 1, 1), float64]) {
  %1135 = cast(meta[relay.Constant][39] /* ty=Tensor[(3, 3, 8), uint8] */, dtype="uint8") /* ty=Tensor[(3, 3, 8), uint8] */;
  %1136 = shape_of(%var_5494, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1137 = cast(%var_5494, dtype="uint8") /* ty=Tensor[(3, 3, 8), uint8] */;
  %1138 = dyn.reshape(%1135, %1136, newshape=[]) /* ty=Tensor[(?, ?, ?), uint8] */;
  %1139 = @func_5232() /* ty=(Tensor[(13, 1, 1), float64], Tensor[(13, 1, 1), float64]) */;
  %1140 = right_shift(%1137, %1138) /* ty=Tensor[(3, 3, 8), uint8] */;
  %1141 = %1139.0;
  (%1140, %1141)
}

def @func_3122(%var_3114: Tensor[(168), float64]) -> (Tensor[(13, 1, 1), float64], Tensor[(13, 315, ?), int16], Tensor[(168), float64], Tensor[(315), int16]) {
  %1142 = @func_1541() /* ty=(Tensor[(13, 1, 1), float64], Tensor[(13, ?, ?), float64]) */;
  %1143 = cast(%var_3114, dtype="float64") /* ty=Tensor[(168), float64] */;
  %1144 = cast(meta[relay.Constant][40] /* ty=Tensor[(315), int16] */, dtype="int16") /* ty=Tensor[(315), int16] */;
  %1145 = reshape(%1143, newshape=[7, 2, 12]) /* ty=Tensor[(7, 2, 12), float64] */;
  %1146 = reshape(%1144, newshape=[315, 1]) /* ty=Tensor[(315, 1), int16] */;
  %1147 = @func_2081(%1145, %1146) /* ty=(Tensor[(7, 2, 12), float64], Tensor[(13, 1, 1), float64], Tensor[(13, 10, 16), bool], Tensor[(13, 315, ?), int16]) */;
  %1148 = %1142.0;
  %1149 = %1147.3;
  (%1148, %1149, %var_3114, meta[relay.Constant][40] /* ty=Tensor[(315), int16] */)
}

def @func_2300() -> Tensor[(13, 1, 1), float64] {
  %1150 = @func_585() /* ty=Tensor[(13, 1, 1), float64] */;
  %1151 = cast(%1150, dtype="float64") /* ty=Tensor[(13, 1, 1), float64] */;
  rsqrt(%1151) /* ty=Tensor[(13, 1, 1), float64] */
}

def @func_5232() -> (Tensor[(13, 1, 1), float64], Tensor[(13, 1, 1), float64]) {
  %1152 = @func_3247() /* ty=(Tensor[(13, 1, 1), float64], Tensor[(416), float64], Tensor[(13, ?, ?), float64]) */;
  %1153 = @func_3217() /* ty=Tensor[(13, 1, 1), float64] */;
  %1154 = %1152.0;
  (%1153, %1154)
}

def @func_5895() -> (Tensor[(13, 11, 2), bool], Tensor[(13, 5, 13), float64], Tensor[(13, ?, ?), uint32]) {
  %1155 = @func_3812() /* ty=Tensor[(13, 1, 1), float64] */;
  %1156 = cast(%1155, dtype="bool") /* ty=Tensor[(13, 1, 1), bool] */;
  %1157 = cast(meta[relay.Constant][41] /* ty=Tensor[(13, 11, 2), float64] */, dtype="bool") /* ty=Tensor[(13, 11, 2), bool] */;
  %1158 = @func_3967() /* ty=(Tensor[(13, 5, 13), uint32], Tensor[(13, 5, 13), float64], Tensor[(13, 1, 1), float64]) */;
  %1159 = logical_and(%1156, %1157) /* ty=Tensor[(13, 11, 2), bool] */;
  %1160 = %1158.1;
  %1161 = @func_2728() /* ty=Tensor[(13, ?, ?), uint32] */;
  (%1159, %1160, %1161)
}

def @func_4102(%var_4100: Tensor[(936), float64]) -> (Tensor[(13, 11, 9), float64], Tensor[(13, 1, 1), float64], Tensor[(13, 1, 1), float64], Tensor[(13, 1, 1), float64], Tensor[(936), float64], Tensor[(13, 10, 16), float32], Tensor[(196), float64], Tensor[(13, 1, 1), float32]) {
  @func_4099(%var_4100) /* ty=(Tensor[(13, 11, 9), float64], Tensor[(13, 1, 1), float64], Tensor[(13, 1, 1), float64], Tensor[(13, 1, 1), float64], Tensor[(936), float64], Tensor[(13, 10, 16), float32], Tensor[(196), float64], Tensor[(13, 1, 1), float32]) */
}

def @func_1144() -> (Tensor[(13, 1, 1), float64], Tensor[(1, 10, 16), float32]) {
  %1162 = @func_643() /* ty=(Tensor[(13, 1, 1), float64], Tensor[(13, 1, 1), float64], Tensor[(13, 1, 1), float64]) */;
  %1163 = %1162.1;
  %1164 = @func_750() /* ty=Tensor[(1, 10, 16), float32] */;
  (%1163, %1164)
}

def @func_5839() -> Tensor[(13, ?, ?), float64] {
  @func_5837() /* ty=Tensor[(13, ?, ?), float64] */
}

def @func_5295() -> Tensor[(1, 10, 16), float32] {
  @func_1972() /* ty=Tensor[(1, 10, 16), float32] */
}

def @func_10757() -> (Tensor[(13, 1, 1), float64],) {
  %1166 = fn () -> (Tensor[(13, 1, 1), float64],) {
    %1165 = @func_5989() /* ty=Tensor[(13, 1, 1), float64] */;
    (%1165,)
  };
  %1166() /* ty=(Tensor[(13, 1, 1), float64],) */
}

def @func_3217() -> Tensor[(13, 1, 1), float64] {
  %1167 = @func_684() /* ty=(Tensor[(13, 1, 1), float64], Tensor[(13, 1, 1), float64]) */;
  %1167.0
}

def @func_2439() -> (Tensor[(1, 10, 16), float32], Tensor[(13, 7, 10), float32]) {
  %1168 = @func_1340() /* ty=Tensor[(13, 1, 1), float64] */;
  %1169 = cast(%1168, dtype="float32") /* ty=Tensor[(13, 1, 1), float32] */;
  %1170 = cast(meta[relay.Constant][42] /* ty=Tensor[(13, 7, 10), float64] */, dtype="float32") /* ty=Tensor[(13, 7, 10), float32] */;
  %1171 = @func_750() /* ty=Tensor[(1, 10, 16), float32] */;
  %1172 = floor_mod(%1169, %1170) /* ty=Tensor[(13, 7, 10), float32] */;
  (%1171, %1172)
}

/* For debugging purposes the metadata section has been omitted.
 * If you would like to see the full metadata section you can set the 
 * option to `True` when invoking `astext`. 
 */The type inference pass was unable to infer a type for this expression.
This usually occurs when an operator call is under constrained in some way, check other reported errors for hints of what may of happened.

===================================
note: run with `TVM_BACKTRACE=1` environment variable to display a backtrace.

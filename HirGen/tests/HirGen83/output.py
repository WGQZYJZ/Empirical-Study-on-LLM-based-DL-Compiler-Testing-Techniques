import tvm
from tvm import relay
from tvm.ir.transform import Sequential
from tvm.contrib import graph_runtime
import numpy as np
mod = tvm.IRModule()
mutated_mod = tvm.IRModule()
var_59 = relay.var("var_59", dtype = "int16", shape = (15, 16, 15))#candidate|59|(15, 16, 15)|var|int16
var_60 = relay.var("var_60", dtype = "int16", shape = (15, 16, 15))#candidate|60|(15, 16, 15)|var|int16
bop_61 = relay.less_equal(var_59.astype('bool'), relay.reshape(var_60.astype('bool'), relay.shape_of(var_59))) # shape=(15, 16, 15)
output = bop_61
output2 = bop_61
func_89 = relay.Function([var_59,var_60,], output)
mod['func_89'] = func_89
mod = relay.transform.InferType()(mod)
var_90 = relay.var("var_90", dtype = "int16", shape = (15, 16, 15))#candidate|90|(15, 16, 15)|var|int16
var_91 = relay.var("var_91", dtype = "int16", shape = (15, 16, 15))#candidate|91|(15, 16, 15)|var|int16
output = func_89(var_90,var_91,)
func_92 = relay.Function([var_90,var_91,], output)
mutated_mod['func_92'] = func_92
mutated_mod = relay.transform.InferType()(mutated_mod)
var_97 = relay.var("var_97", dtype = "int8", shape = (14, 10, 4))#candidate|97|(14, 10, 4)|var|int8
const_98 = relay.const([[[6,-8,2,-1],[-9,-6,7,7],[6,3,-4,-4],[8,3,-4,1],[4,-4,-3,3],[9,-8,3,-6],[-7,-6,-9,1],[8,-9,-3,-4],[-2,-5,-3,-5],[-10,-1,-10,-3]],[[-7,-7,1,4],[-2,-2,1,-3],[-4,8,-9,-2],[-5,3,9,2],[6,4,7,-7],[-9,5,-4,-5],[-7,6,3,6],[-10,-3,6,6],[-5,1,6,-1],[4,-7,4,-7]],[[-2,-10,10,6],[6,8,5,6],[-4,-3,3,-7],[10,7,3,-7],[-8,3,3,-7],[-9,1,-9,-7],[3,5,-4,5],[6,9,8,8],[5,4,-1,6],[-6,-7,5,-9]],[[-1,-2,-9,-10],[1,-4,-5,6],[4,-9,9,-8],[-4,9,8,-6],[4,-4,7,8],[3,-10,6,10],[4,-8,7,-9],[8,10,7,7],[-6,-6,6,2],[8,8,7,-6]],[[9,5,8,7],[-1,-6,-1,-2],[3,-1,-4,6],[4,-7,-4,-4],[-7,-9,3,4],[10,-4,10,-9],[6,10,2,5],[4,1,-5,2],[-3,10,6,-10],[4,1,-2,7]],[[-10,-9,6,2],[-5,7,7,-3],[-10,-4,7,-5],[8,6,-8,-7],[3,3,-1,9],[-8,-6,-6,5],[2,-4,-5,-3],[-7,-4,-2,-3],[8,-4,3,-5],[-2,5,-9,-5]],[[10,-3,10,-10],[3,-2,-7,-1],[3,4,-1,-6],[-9,10,-1,-9],[4,-8,8,-1],[-1,5,10,-3],[-1,8,5,4],[2,1,9,-4],[4,7,-9,-10],[-3,-6,-2,5]],[[-5,7,6,-3],[-5,2,4,7],[10,-9,-2,7],[5,10,4,3],[8,-1,-3,-5],[-9,-4,-4,3],[3,-1,3,2],[-3,7,8,7],[4,-2,-4,-7],[3,8,-2,-9]],[[6,-2,8,-7],[6,8,-6,2],[5,-6,1,4],[7,-1,-4,6],[10,9,5,9],[-1,-7,-4,-6],[-3,9,-10,-9],[-4,5,-1,-10],[-2,9,4,-9],[4,4,5,8]],[[4,3,8,-10],[4,-10,8,-8],[-8,8,-4,9],[-2,-8,4,-6],[-5,2,-3,-8],[8,4,8,6],[6,10,-2,-1],[-3,-1,7,5],[6,-5,-8,8],[1,-1,1,-8]],[[5,8,-8,-2],[-8,-10,-10,-8],[2,7,-8,-7],[-4,-9,8,-3],[-5,8,2,6],[3,-8,1,-1],[-9,3,3,6],[8,6,3,9],[-4,3,9,7],[-7,8,1,9]],[[10,-7,1,2],[-1,7,10,3],[-7,10,-10,-9],[-2,-3,6,2],[7,9,-3,7],[-1,-7,2,-5],[-8,4,-1,-5],[2,5,1,6],[-7,5,-7,-3],[9,-1,1,8]],[[10,9,7,-4],[1,8,9,1],[-10,5,1,8],[-9,10,7,-1],[-2,-8,-4,9],[-2,-9,-3,-6],[-9,2,2,-1],[-1,2,1,-4],[-4,3,5,-3],[-10,-9,-5,8]],[[9,-7,10,-1],[-8,-8,6,1],[2,-6,-7,5],[3,2,10,-5],[10,7,9,10],[1,-8,7,5],[-3,-8,1,-10],[7,6,2,6],[3,-1,-1,2],[6,-9,9,-4]]], dtype = "int8")#candidate|98|(14, 10, 4)|const|int8
bop_99 = relay.multiply(var_97.astype('int8'), relay.reshape(const_98.astype('int8'), relay.shape_of(var_97))) # shape=(14, 10, 4)
uop_103 = relay.sqrt(bop_99.astype('float32')) # shape=(14, 10, 4)
func_89_call = mod.get_global_var('func_89')
func_92_call = mutated_mod.get_global_var('func_92')
var_110 = relay.var("var_110", dtype = "int16", shape = (2, 1800))#candidate|110|(2, 1800)|var|int16
call_109 = func_89_call(relay.reshape(var_110.astype('int16'), [15, 16, 15]), relay.reshape(var_110.astype('int16'), [15, 16, 15]), )
call_111 = func_89_call(relay.reshape(var_110.astype('int16'), [15, 16, 15]), relay.reshape(var_110.astype('int16'), [15, 16, 15]), )
uop_118 = relay.atanh(var_110.astype('float64')) # shape=(2, 1800)
uop_124 = relay.acosh(uop_103.astype('float32')) # shape=(14, 10, 4)
output = relay.Tuple([call_109,uop_118,uop_124,])
output2 = relay.Tuple([call_111,uop_118,uop_124,])
func_130 = relay.Function([var_97,var_110,], output)
mod['func_130'] = func_130
mod = relay.transform.InferType()(mod)
mutated_mod['func_130'] = func_130
mutated_mod = relay.transform.InferType()(mutated_mod)
func_130_call = mutated_mod.get_global_var('func_130')
var_132 = relay.var("var_132", dtype = "int8", shape = (14, 10, 4))#candidate|132|(14, 10, 4)|var|int8
var_133 = relay.var("var_133", dtype = "int16", shape = (2, 1800))#candidate|133|(2, 1800)|var|int16
call_131 = func_130_call(var_132,var_133,)
output = call_131
func_134 = relay.Function([var_132,var_133,], output)
mutated_mod['func_134'] = func_134
mutated_mod = relay.transform.InferType()(mutated_mod)
var_390 = relay.var("var_390", dtype = "uint8", shape = (16, 15, 5))#candidate|390|(16, 15, 5)|var|uint8
var_391 = relay.var("var_391", dtype = "uint8", shape = (16, 15, 5))#candidate|391|(16, 15, 5)|var|uint8
bop_392 = relay.bitwise_and(var_390.astype('uint8'), relay.reshape(var_391.astype('uint8'), relay.shape_of(var_390))) # shape=(16, 15, 5)
uop_398 = relay.acosh(var_391.astype('float32')) # shape=(16, 15, 5)
output = relay.Tuple([bop_392,uop_398,])
output2 = relay.Tuple([bop_392,uop_398,])
func_403 = relay.Function([var_390,var_391,], output)
mod['func_403'] = func_403
mod = relay.transform.InferType()(mod)
mutated_mod['func_403'] = func_403
mutated_mod = relay.transform.InferType()(mutated_mod)
func_403_call = mutated_mod.get_global_var('func_403')
var_405 = relay.var("var_405", dtype = "uint8", shape = (16, 15, 5))#candidate|405|(16, 15, 5)|var|uint8
var_406 = relay.var("var_406", dtype = "uint8", shape = (16, 15, 5))#candidate|406|(16, 15, 5)|var|uint8
call_404 = func_403_call(var_405,var_406,)
output = call_404
func_407 = relay.Function([var_405,var_406,], output)
mutated_mod['func_407'] = func_407
mutated_mod = relay.transform.InferType()(mutated_mod)
var_477 = relay.var("var_477", dtype = "bool", shape = (6, 5, 2))#candidate|477|(6, 5, 2)|var|bool
var_478 = relay.var("var_478", dtype = "bool", shape = (6, 5, 2))#candidate|478|(6, 5, 2)|var|bool
bop_479 = relay.logical_and(var_477.astype('bool'), relay.reshape(var_478.astype('bool'), relay.shape_of(var_477))) # shape=(6, 5, 2)
bop_489 = relay.floor_mod(bop_479.astype('float64'), relay.reshape(var_478.astype('float64'), relay.shape_of(bop_479))) # shape=(6, 5, 2)
func_89_call = mod.get_global_var('func_89')
func_92_call = mutated_mod.get_global_var('func_92')
var_507 = relay.var("var_507", dtype = "int16", shape = (3600,))#candidate|507|(3600,)|var|int16
call_506 = func_89_call(relay.reshape(var_507.astype('int16'), [15, 16, 15]), relay.reshape(var_507.astype('int16'), [15, 16, 15]), )
call_508 = func_89_call(relay.reshape(var_507.astype('int16'), [15, 16, 15]), relay.reshape(var_507.astype('int16'), [15, 16, 15]), )
output = relay.Tuple([bop_489,call_506,var_507,])
output2 = relay.Tuple([bop_489,call_508,var_507,])
func_510 = relay.Function([var_477,var_478,var_507,], output)
mod['func_510'] = func_510
mod = relay.transform.InferType()(mod)
mutated_mod['func_510'] = func_510
mutated_mod = relay.transform.InferType()(mutated_mod)
func_510_call = mutated_mod.get_global_var('func_510')
var_512 = relay.var("var_512", dtype = "bool", shape = (6, 5, 2))#candidate|512|(6, 5, 2)|var|bool
var_513 = relay.var("var_513", dtype = "bool", shape = (6, 5, 2))#candidate|513|(6, 5, 2)|var|bool
var_514 = relay.var("var_514", dtype = "int16", shape = (3600,))#candidate|514|(3600,)|var|int16
call_511 = func_510_call(var_512,var_513,var_514,)
output = call_511
func_515 = relay.Function([var_512,var_513,var_514,], output)
mutated_mod['func_515'] = func_515
mutated_mod = relay.transform.InferType()(mutated_mod)
const_728 = relay.const([[[9,7,6,-3,5,-9,-4,-9],[-10,-3,-9,10,6,4,9,5],[2,4,-7,-10,-4,-3,9,-3],[3,1,4,3,-7,-9,7,-4],[5,-8,5,-5,6,-9,10,-5],[-10,4,-6,-4,-3,1,5,8],[5,2,-3,-9,5,-3,-10,7],[-5,-3,-9,7,-8,-2,8,-4],[-8,-3,3,2,-1,-2,-5,10],[3,4,10,6,2,10,-9,-2],[-1,2,8,2,10,2,-5,7],[6,10,5,-4,3,6,8,-3],[-7,-3,-8,6,-8,-3,-1,-3]],[[-4,-2,8,-5,-10,6,-2,-7],[3,-4,6,9,6,-9,4,3],[4,6,-1,-6,3,9,1,2],[7,-5,6,6,-7,9,6,9],[7,-5,-6,7,5,7,-5,1],[7,-4,-1,-4,-9,8,-3,7],[-2,-6,5,10,-3,-5,-7,10],[-4,6,-7,2,1,3,-6,-4],[5,9,-7,-10,-7,9,-3,8],[3,1,-4,8,-4,1,-1,10],[-7,8,7,4,-4,10,2,-3],[3,7,-8,3,7,-3,9,6],[2,1,1,5,-10,3,4,7]],[[1,-3,2,-2,-9,7,8,-3],[-9,-2,-2,8,-2,4,-8,-3],[6,9,-1,-6,7,8,1,6],[8,2,4,9,-2,4,-3,-8],[-3,8,-1,-4,-10,-4,6,8],[-7,-3,2,-1,-5,4,-1,1],[-1,-10,3,-1,-6,1,6,-7],[4,5,2,-10,-10,6,-9,7],[-6,-4,-1,-2,-9,-3,6,9],[-8,6,10,-6,10,-6,-9,-9],[-2,-3,-8,-1,10,4,-4,6],[7,1,-9,10,8,-8,-10,1],[-2,6,1,-6,1,-9,-3,6]],[[-8,-9,-3,6,-6,-10,1,-8],[-10,-2,-2,-4,-10,-2,9,-7],[7,3,5,-3,4,-9,9,-8],[4,9,-10,-2,7,7,2,-4],[10,-8,7,-7,-7,5,-4,4],[-5,-5,-10,-9,-9,-5,-10,9],[-6,-4,10,-1,-6,4,1,9],[3,-3,10,-9,8,-1,3,-8],[-7,-4,-2,4,3,-1,6,-10],[-5,-9,7,-8,-2,-5,7,5],[-6,8,4,-9,10,1,1,2],[-8,-4,10,10,-9,8,10,9],[-4,3,9,-7,1,4,3,9]],[[8,4,3,2,1,-7,5,7],[5,9,2,-4,6,-7,3,-8],[-9,-8,10,-6,10,-4,-3,6],[10,1,-3,-7,10,-10,1,-3],[4,-5,-9,-5,-8,6,9,7],[-9,-1,3,3,-1,-8,3,-3],[3,1,-2,-3,-7,-2,-2,4],[-9,-4,-1,8,2,-4,-9,3],[-4,-6,-3,7,-1,-4,1,-2],[3,5,-5,-5,10,3,6,-3],[-10,-9,1,3,-8,-3,-5,7],[3,1,6,-6,-7,8,-6,-4],[-2,-1,2,5,3,6,4,-5]],[[7,8,3,-10,4,-4,10,7],[2,7,4,-1,-9,-4,-2,2],[6,-3,-4,1,-2,6,-2,8],[-3,-7,6,-3,-7,-7,-5,-8],[-1,-1,-3,-10,-5,9,-3,3],[-9,-2,-2,-9,1,10,9,8],[7,2,2,-7,2,4,10,-3],[10,5,2,1,-3,9,8,-1],[-7,-7,9,-3,9,-6,7,-1],[7,-10,-1,10,3,8,-7,8],[-4,-10,-10,-3,4,-9,1,9],[5,4,-2,2,6,-7,-8,8],[10,6,2,-9,1,7,-8,-9]],[[-8,9,-9,-3,8,1,-5,-10],[6,-6,-5,5,5,-7,2,3],[9,10,-2,7,3,8,7,-2],[3,-1,5,2,2,2,-5,4],[9,-4,-6,-1,-8,-6,4,-8],[-8,-5,7,-2,7,2,8,-8],[9,8,-4,4,-7,-9,-8,7],[-5,8,10,-10,-3,2,10,10],[3,-5,-6,-1,7,3,-6,-3],[5,-5,-3,-5,-9,10,7,9],[8,7,2,9,9,-5,4,-7],[9,-5,9,9,-7,1,8,3],[3,2,-9,5,2,-2,9,-7]],[[-3,3,4,-4,-10,4,5,6],[7,-5,8,4,-1,-6,10,-9],[8,7,-3,-5,-5,2,8,10],[-7,-4,5,3,-6,6,-4,9],[10,-8,-8,-7,3,3,-9,-9],[-7,9,10,-10,5,-2,-5,-5],[-8,8,-5,1,4,9,8,-2],[-10,-9,-5,9,-6,-10,-4,6],[7,10,-6,-8,-6,8,5,-10],[-10,-7,7,8,-5,-4,5,-2],[1,2,2,2,1,3,9,-2],[2,8,3,5,-6,8,-9,2],[2,-9,-8,-4,2,-4,1,-4]],[[5,-2,-9,8,-6,-5,-9,-4],[2,7,8,-8,9,3,-8,-2],[-10,3,1,-3,2,-1,6,3],[-1,-8,4,-9,-8,4,1,2],[2,9,9,-10,1,-1,5,4],[6,6,10,4,10,-5,-6,10],[-2,-1,4,-9,3,3,6,5],[-9,-4,6,6,-8,5,-10,3],[-8,3,8,-9,4,8,-9,-1],[-3,7,3,-5,6,6,-7,-8],[-7,-6,-2,3,-7,5,-5,-2],[1,10,-5,-6,3,7,-5,4],[5,-5,5,1,3,7,2,8]],[[1,9,3,8,-1,7,-1,8],[-2,-1,2,-10,7,5,-7,5],[3,3,-1,-3,8,-10,10,5],[10,-1,-9,9,8,-9,1,2],[-10,-9,8,5,1,-6,-3,4],[-10,-8,-6,7,3,9,-2,7],[6,2,7,3,-5,10,4,1],[-1,-3,6,-10,-7,-4,-2,10],[-8,-3,2,-4,6,4,9,4],[-4,6,-8,-2,7,-6,8,8],[-10,2,8,-10,-1,-4,10,2],[-6,6,7,3,-6,5,-6,-2],[4,10,-2,-4,-5,-7,8,-8]],[[6,-8,-4,6,-9,3,-2,4],[1,-7,2,-7,-2,1,2,4],[-5,-2,5,-10,9,-2,10,-8],[-7,3,-6,6,5,-10,7,6],[8,3,-5,8,6,-4,5,7],[-9,-9,1,5,-3,4,10,-3],[7,4,7,-4,3,9,-4,-7],[-5,7,6,-3,-8,-10,-4,-9],[-7,2,8,-6,6,8,-10,-2],[-5,-2,-1,-9,-9,-7,10,-3],[-2,10,1,-10,1,-8,5,5],[-8,-1,1,6,-9,-2,-3,-9],[-2,-5,-6,1,-5,8,10,1]],[[10,5,-4,-1,5,3,10,3],[2,4,-4,-3,7,-8,5,-3],[1,-6,10,-7,1,-5,1,-3],[-7,-1,4,-8,5,8,-5,-5],[-8,1,-8,-2,-8,10,-4,-4],[-1,-2,9,8,7,-4,-4,1],[1,9,-10,-10,8,2,4,3],[-3,2,6,-5,-3,-7,9,-10],[-2,2,10,4,4,1,2,-3],[8,6,-3,-9,4,-7,6,5],[-8,1,9,-7,-1,-10,10,-7],[-1,6,-8,2,1,-6,7,-6],[-8,-5,10,1,8,-4,7,1]],[[-8,1,2,-7,5,1,-5,-8],[-1,10,-5,-5,-2,-3,2,-6],[1,-8,3,5,9,1,-2,-6],[2,-6,-9,-9,-2,2,6,-6],[-7,1,10,-9,3,-2,9,-8],[8,-7,5,-9,-10,-10,-1,5],[-1,-8,-4,9,-7,10,10,8],[-2,-6,4,-5,-6,-1,3,5],[-4,-4,-1,6,3,7,-6,3],[1,8,-5,-10,-7,-8,-8,-6],[-7,3,-1,-6,-6,10,-8,-1],[-2,-6,1,-6,8,-1,-6,-1],[7,-10,2,7,-1,-10,-9,9]],[[2,-6,3,1,7,-10,-1,5],[4,10,-3,3,-3,-4,6,2],[1,10,10,-7,-7,10,-7,-8],[4,6,5,3,4,8,3,9],[8,9,-1,6,5,-6,5,-5],[3,6,3,-6,7,9,6,5],[7,3,-2,6,7,2,-9,8],[-10,-10,6,-2,-1,-4,-8,2],[-4,-3,-6,-4,2,-4,4,-3],[-8,5,-10,-6,7,10,8,-1],[9,-9,-3,-7,-10,10,-4,-8],[7,-4,-10,9,-2,-5,3,5],[9,8,-10,1,-7,-5,3,1]],[[5,-8,-8,6,-10,-4,-8,6],[4,3,10,-3,-6,-5,-2,-10],[4,3,9,-3,4,-3,-8,-2],[-4,6,9,-10,-10,6,1,-8],[-6,-6,4,-7,1,-1,-10,1],[7,9,-9,-3,-1,-2,4,7],[2,-8,-7,5,4,4,8,-9],[3,1,4,2,2,8,-3,-10],[10,-1,3,-4,-1,-1,4,-4],[-8,10,8,7,-5,7,-2,4],[5,9,-3,-4,-1,-5,-7,-3],[-3,-6,4,-10,8,8,-4,-2],[-10,-6,-3,-7,-9,9,-3,-10]],[[-5,7,8,2,-7,-6,3,-2],[8,-5,-2,5,-7,7,9,6],[4,7,3,9,-8,-2,2,5],[4,1,2,-5,-2,-9,-10,7],[8,-5,1,-2,-9,-3,10,9],[8,10,-5,1,9,-8,-6,-2],[-7,5,1,9,4,10,-10,8],[10,9,4,3,-1,10,-6,-2],[-9,4,-6,1,5,-6,2,-4],[-3,-8,-3,8,-3,-3,-3,5],[4,4,-2,-2,6,-3,-1,1],[-10,-8,-1,8,9,5,4,5],[-7,8,6,8,7,10,-8,1]]], dtype = "uint16")#candidate|728|(16, 13, 8)|const|uint16
var_729 = relay.var("var_729", dtype = "uint16", shape = (16, 13, 8))#candidate|729|(16, 13, 8)|var|uint16
bop_730 = relay.less_equal(const_728.astype('bool'), relay.reshape(var_729.astype('bool'), relay.shape_of(const_728))) # shape=(16, 13, 8)
output = bop_730
output2 = bop_730
func_755 = relay.Function([var_729,], output)
mod['func_755'] = func_755
mod = relay.transform.InferType()(mod)
mutated_mod['func_755'] = func_755
mutated_mod = relay.transform.InferType()(mutated_mod)
var_756 = relay.var("var_756", dtype = "uint16", shape = (16, 13, 8))#candidate|756|(16, 13, 8)|var|uint16
func_755_call = mutated_mod.get_global_var('func_755')
call_757 = func_755_call(var_756)
output = call_757
func_758 = relay.Function([var_756], output)
mutated_mod['func_758'] = func_758
mutated_mod = relay.transform.InferType()(mutated_mod)
var_891 = relay.var("var_891", dtype = "float64", shape = (9, 11, 4))#candidate|891|(9, 11, 4)|var|float64
uop_892 = relay.acosh(var_891.astype('float64')) # shape=(9, 11, 4)
output = uop_892
output2 = uop_892
func_915 = relay.Function([var_891,], output)
mod['func_915'] = func_915
mod = relay.transform.InferType()(mod)
mutated_mod['func_915'] = func_915
mutated_mod = relay.transform.InferType()(mutated_mod)
var_916 = relay.var("var_916", dtype = "float64", shape = (9, 11, 4))#candidate|916|(9, 11, 4)|var|float64
func_915_call = mutated_mod.get_global_var('func_915')
call_917 = func_915_call(var_916)
output = call_917
func_918 = relay.Function([var_916], output)
mutated_mod['func_918'] = func_918
mutated_mod = relay.transform.InferType()(mutated_mod)
var_931 = relay.var("var_931", dtype = "int64", shape = ())#candidate|931|()|var|int64
const_932 = relay.const([[[-9,6,9,-5,-8,1,-1,5,-9,5,-2,-5,-7,3,9],[9,-8,-7,-9,-1,-7,3,5,5,9,-7,-7,3,1,9],[-1,-8,-3,6,-9,-9,1,6,9,1,-3,2,-1,3,-10],[-4,1,10,8,6,-6,8,6,-5,-7,-5,-5,10,2,9],[-8,-3,-4,-2,2,2,10,3,-3,-1,5,3,-4,5,8],[8,-7,-2,-7,-7,-2,-4,10,10,-8,-6,-10,-2,-1,10],[2,-5,2,-4,-4,5,10,10,-9,-5,-3,1,-9,-6,1],[-2,-6,4,4,5,8,6,3,8,-6,10,-4,-3,-3,3],[-6,9,-10,10,-10,4,6,6,5,1,6,5,2,1,8],[9,9,-6,10,6,10,8,9,-7,-9,-10,-2,5,2,9],[-1,1,-6,-2,-2,8,8,2,-1,6,9,-5,10,7,7],[9,4,-10,9,-1,-10,-7,-5,8,7,-10,-1,-9,6,-4],[-2,8,4,-8,-10,6,-8,-10,1,2,3,6,6,6,1]],[[-2,-2,-1,-10,1,-8,2,1,10,10,-2,4,9,-3,-10],[5,-7,4,-3,-7,-8,5,-2,10,10,5,-4,-8,-7,-8],[-5,-10,-7,-10,-3,-9,3,-9,-10,-8,2,10,10,-7,-9],[5,5,6,-10,-6,-3,-3,7,-1,2,7,1,-10,-5,10],[-1,2,8,1,6,4,10,-6,-9,4,-6,-5,-8,10,1],[9,-4,-1,-9,-4,-8,4,4,-5,-9,-6,9,6,8,1],[7,-5,-3,5,9,-8,-8,6,-4,-8,-1,-2,6,8,-5],[5,-10,-4,7,4,-1,-4,5,-2,3,6,4,4,5,8],[-10,-3,-3,3,6,-7,-10,-7,-1,5,-1,-7,8,-7,-5],[6,-7,-6,-6,4,6,1,2,-10,9,8,6,-4,-7,9],[7,-7,-4,7,-4,2,-2,-4,10,-7,7,8,-1,10,-5],[-1,-6,-7,3,-10,4,-5,-6,-9,2,5,5,5,-8,-5],[-5,5,9,2,7,9,4,6,-4,6,4,7,9,-5,-6]],[[1,-1,1,-8,1,4,7,-5,-8,9,-7,9,2,6,4],[10,-3,2,8,-6,-7,9,8,6,-3,4,-8,5,-1,-7],[-3,2,7,-10,6,-4,-6,-9,-6,-2,2,10,9,1,-6],[-8,-5,-5,-4,7,-10,-7,3,3,-2,8,-3,5,-6,3],[-5,1,1,4,8,9,4,4,-1,7,-6,-7,-5,-2,-9],[3,5,-5,7,-4,-1,-2,-9,2,-7,-3,-4,-1,-5,2],[-7,-9,8,-3,-1,9,-9,7,-1,-8,-8,1,-3,4,5],[-1,10,9,2,-2,-8,-9,6,-7,-6,7,-5,-7,1,4],[5,10,-7,-5,10,4,-2,7,8,7,6,-8,-2,-9,6],[1,-1,9,2,9,-3,2,-5,-5,2,8,6,8,3,-1],[3,2,-4,5,7,10,6,-7,-8,5,6,7,-1,10,-6],[-5,-4,6,10,-6,3,10,5,-10,2,4,-1,10,9,10],[-2,4,-3,-5,-10,-3,6,-2,-3,-5,-2,-4,1,-6,3]],[[-4,10,10,8,8,6,-3,-7,5,-1,-4,1,-3,2,-3],[-7,10,4,-3,-7,2,-4,-8,-2,-10,3,-6,-2,7,10],[8,6,5,10,-4,-10,-10,5,-7,1,10,3,-10,-6,-8],[-4,4,-6,10,8,3,-2,6,3,6,3,9,1,1,-6],[-4,9,10,8,1,6,5,9,7,5,7,9,-3,7,10],[7,4,1,-1,-4,4,-8,-7,-8,-10,-8,-2,5,7,-3],[7,-10,-6,-5,-9,-3,8,-10,10,-1,-3,-9,6,-4,10],[-2,7,-6,-3,2,-9,-3,-8,-1,-2,-1,3,-2,8,4],[3,-2,7,3,-10,-2,-2,5,-7,-10,-1,4,3,-3,-1],[-6,2,-5,8,1,-5,-7,7,8,-10,-4,7,3,5,-10],[2,3,8,2,-7,5,5,10,-6,9,7,5,3,-6,5],[-7,4,10,1,7,7,4,6,6,-4,-5,6,5,-1,10],[-8,2,8,-3,6,-8,4,4,6,1,3,-1,10,-10,6]],[[7,-8,6,-1,-6,-3,-9,-8,8,-3,4,-8,8,-10,9],[10,-1,-4,-6,-8,-1,9,-9,-5,3,-9,-7,-3,-3,3],[8,-7,-4,6,4,-4,-8,-9,2,-5,3,3,8,-2,8],[4,-3,-6,10,6,-7,-10,-5,-3,4,-1,1,6,-7,-2],[-6,-10,-7,-5,-10,10,-1,-2,1,3,-3,-2,-8,8,9],[-2,-8,5,1,-10,-10,6,-3,10,-6,-1,9,7,-4,-5],[-7,-7,9,8,-1,-1,-1,2,7,-9,-7,6,-4,3,10],[-10,-5,9,8,-6,-8,-9,5,-2,-5,7,-9,-6,-8,2],[9,4,-10,1,-10,8,5,-6,9,3,7,6,7,-3,-2],[-2,9,-8,8,-9,-8,8,-6,-2,-10,-1,-8,-5,10,7],[-4,-5,-6,-2,-2,-5,-9,4,5,10,-2,4,-7,-3,8],[-9,3,-5,-8,-3,9,-1,-1,6,10,5,9,3,10,-3],[10,-3,7,-1,-7,5,4,-6,2,3,10,-5,-7,4,-6]],[[10,-10,-8,10,-2,-8,3,-5,-9,3,-9,9,-1,-4,-8],[4,8,-10,1,-8,7,1,7,10,-3,7,-5,9,7,-5],[-6,10,4,-2,9,9,-5,-5,6,-8,6,4,4,-1,7],[-3,-4,-8,-4,-5,-2,9,5,-10,9,4,3,-9,1,7],[6,2,-2,10,3,-9,10,-4,1,-9,-4,-6,-1,4,-6],[10,1,-4,4,-1,9,-4,7,7,-2,8,1,2,8,-4],[9,6,5,2,-4,-6,2,-4,-8,7,-7,-5,-7,-10,5],[3,7,-1,-9,-4,8,8,2,9,10,1,8,-6,2,-4],[-8,-10,-6,1,-6,10,7,-5,9,8,-9,9,-4,4,8],[3,-3,-3,6,6,-9,7,6,4,6,-5,10,2,-8,1],[4,-2,-9,-6,10,-6,-10,-4,4,2,-1,-5,-10,6,3],[3,-1,4,1,2,4,10,-2,-2,2,8,-10,6,-2,-9],[-8,-2,-7,-9,-6,10,3,-6,4,-1,2,2,4,4,-10]],[[1,-3,-9,9,1,-10,-7,-8,-6,-3,-1,-10,-6,10,-10],[-3,8,-4,-8,-4,-8,9,7,-10,-2,-2,9,5,-6,-7],[5,7,-6,10,-4,3,1,7,9,-1,-2,3,4,-9,3],[7,4,3,5,-5,2,-8,10,-8,-5,-2,-1,8,-3,6],[-3,-7,-8,-8,-6,1,1,-8,7,1,-5,10,-8,-1,-7],[8,-1,8,5,-2,9,8,5,10,-2,-5,-2,4,3,-10],[6,10,-4,7,-4,-10,-4,-2,4,10,-1,-4,-8,-4,8],[1,5,-1,2,8,-9,-9,-9,-2,3,1,-7,-10,5,-7],[-9,7,2,2,-6,-9,9,7,-9,2,-3,9,-8,-6,-2],[-8,-1,-2,2,6,4,-4,3,2,-2,-5,7,-6,2,10],[5,2,4,1,-10,8,4,9,-5,1,-7,-4,-10,-9,-2],[-6,-10,7,4,4,6,-2,-3,-8,-3,-8,5,7,4,-10],[7,-7,4,-3,-1,6,8,-8,8,1,-6,4,-3,-9,-6]],[[-5,-4,-10,-4,9,-9,-3,-1,-7,-8,2,7,5,6,-7],[4,-5,-2,-7,9,2,-8,-6,3,-10,2,-4,6,9,5],[4,7,8,-4,6,10,3,2,-9,-3,-7,-8,7,10,8],[3,-7,-1,10,1,-3,5,-8,-5,1,5,6,8,-1,-9],[-6,-3,3,-9,1,8,-10,10,-7,7,7,-7,-9,-6,3],[-1,8,-1,8,-3,-9,-3,-3,9,9,9,9,-9,-10,9],[2,2,4,2,-5,-10,-5,3,7,-9,7,-4,-3,5,10],[9,-5,-4,8,10,-1,8,-5,-6,-3,1,-3,6,-10,3],[8,3,-5,-4,-3,4,7,3,-3,8,-4,-3,6,6,2],[-7,9,4,5,7,-2,-3,3,3,-7,-9,10,9,-3,3],[4,4,7,9,3,1,7,4,-2,-7,8,1,9,-5,6],[-8,7,6,-1,8,-3,1,5,-1,4,7,3,1,9,-6],[3,5,-5,4,10,-2,-10,-2,-8,-3,2,-6,9,8,-3]],[[-3,6,8,3,-9,-3,3,-4,10,9,-8,-5,-5,-2,-2],[-7,3,7,7,3,-10,-9,-10,9,6,-5,-10,-9,-5,-7],[-7,-6,-8,-2,-10,2,-1,-4,-3,3,4,6,-8,-8,-5],[4,1,-4,2,5,3,3,-8,7,3,-3,-7,8,5,8],[2,3,1,-4,3,4,-7,-2,-5,6,-10,-2,7,2,-7],[1,-2,5,-2,-6,-8,-5,-7,-10,7,-10,-5,3,4,4],[-6,3,1,-1,8,-2,-8,-3,-3,9,9,6,-2,7,-4],[9,8,-10,-1,6,10,8,-4,-3,6,-6,1,-10,-10,-9],[8,6,10,-6,7,-2,1,-3,3,-1,-9,-3,-10,-3,9],[-7,-2,4,-9,2,-4,10,-4,-8,2,5,8,-4,-10,1],[1,-6,-2,-4,1,-6,-10,-10,-3,3,-10,9,-6,-8,-9],[8,8,-10,4,-3,2,2,8,-8,10,8,-10,10,9,-4],[9,-8,-6,9,-4,7,-2,8,8,-10,-7,-10,5,-5,-10]],[[-5,-9,-5,-3,4,-7,-3,-9,6,9,8,6,3,10,8],[-6,-8,-5,-1,9,6,-6,2,2,-3,-6,6,-8,5,-8],[-7,-5,-9,-10,-9,-6,3,-5,-7,5,-7,10,-6,4,-6],[4,9,8,10,-8,7,5,10,-6,-9,9,-5,1,9,1],[-10,-1,-4,6,-9,2,-2,5,-7,9,4,-3,-8,8,-2],[5,6,10,4,-4,4,-8,-5,8,-4,9,6,-6,-8,2],[-3,-1,-10,9,-1,-7,-2,-1,8,10,-8,-1,-3,-7,-1],[-9,5,-5,5,8,-10,-10,2,9,1,-5,8,-3,2,2],[-8,-8,-2,-7,9,-2,-2,9,-4,-7,8,3,-7,9,-6],[-1,-3,-9,-3,4,2,9,8,2,-6,6,1,2,-6,7],[1,8,8,10,2,3,10,9,-10,10,10,-10,5,-8,2],[-5,-5,6,10,7,10,9,-2,7,-9,-5,-3,1,6,1],[7,10,10,-7,2,4,4,9,2,-7,3,4,-7,-7,6]],[[-1,-5,7,7,-6,10,10,-5,-1,4,-10,9,6,10,-1],[1,-9,4,-2,4,1,-9,-1,9,3,-1,4,-8,-8,-4],[-5,2,1,-4,7,2,3,9,8,-5,3,6,5,-8,2],[-9,-8,3,-7,4,-4,-3,8,10,-10,-8,10,-8,8,6],[-9,9,8,-7,-10,10,-7,-2,5,-10,-4,7,2,8,3],[-2,-3,-10,-6,7,-7,-1,-9,9,2,8,10,1,-3,2],[5,8,6,10,-4,7,5,6,-10,10,6,7,5,8,8],[-4,5,-2,10,4,-8,-5,-8,1,-6,9,10,6,5,-5],[-5,6,1,-10,8,4,4,3,8,1,4,4,7,1,-5],[2,5,7,-6,6,-2,1,10,1,7,-2,3,7,7,1],[-6,1,3,-9,6,2,-8,5,9,5,-7,9,2,-9,5],[10,-2,-3,8,1,-7,-3,10,-10,3,6,-2,-1,2,3],[9,9,6,-6,1,-10,2,3,1,-10,-1,-4,3,7,-5]],[[-5,6,6,3,6,-9,4,10,-3,5,5,2,-8,5,4],[-8,6,2,-7,4,-1,-2,4,6,-2,5,-4,-7,5,10],[3,8,-3,1,-7,5,-6,7,-8,-1,2,8,-4,10,6],[-9,-9,8,9,-2,-4,6,-2,4,-6,10,3,-5,2,6],[-7,-7,-2,-6,8,-7,5,-4,8,8,-5,1,-6,-2,-2],[-6,-3,-5,2,6,-1,2,-6,-2,-6,-8,9,-8,-6,5],[1,6,6,9,-5,10,5,2,10,-8,6,-9,7,-4,-10],[-2,-2,-4,-2,-8,5,-2,2,6,2,10,1,-5,-7,-3],[7,7,-6,10,2,-4,6,9,-4,9,8,5,7,8,-8],[2,-8,7,-9,-1,-4,8,-3,-7,-10,4,-4,-7,-9,-8],[8,6,-8,-8,-1,8,6,-5,-4,7,-9,-4,-9,7,-8],[7,-2,1,-8,-4,10,4,9,4,-4,-7,-3,7,2,2],[-6,5,3,-7,-7,-10,5,4,5,-7,-10,-1,5,-4,1]],[[-6,-4,6,-9,8,8,-4,2,-6,7,-8,-10,-7,-9,2],[5,-9,-1,6,-2,7,-10,2,10,-3,-3,-3,9,8,2],[-8,-1,8,5,-3,6,-4,2,2,-6,-10,-5,-2,4,-2],[3,3,-8,6,-5,-10,-1,-9,10,5,-8,5,-10,6,8],[-10,8,2,4,-9,9,10,-4,2,-2,-2,-4,2,3,-7],[5,-9,-1,-1,3,4,9,-1,-4,-9,-10,7,-7,7,6],[-10,-3,6,-3,9,-8,7,8,2,-1,-8,-1,6,-3,-7],[-10,2,7,-7,6,4,8,1,1,8,6,6,1,7,-8],[-3,-3,-2,-4,9,-3,-5,-8,9,-2,3,4,-5,-1,9],[7,8,10,10,-6,-5,4,4,-8,1,-3,-10,-4,-4,-7],[6,6,4,3,9,3,-2,7,10,10,-7,-8,10,2,-8],[-8,5,-8,1,4,-3,-5,5,1,-7,-9,-6,1,-8,9],[-6,-10,-2,-1,-2,-2,-4,-9,8,6,-3,-2,-1,-4,-10]],[[7,-1,-6,-7,-5,-1,-5,-3,-4,4,-8,5,7,-5,-9],[5,10,4,10,-2,-2,1,8,2,7,-3,5,7,8,-3],[8,10,6,1,-9,9,5,-9,-6,-6,8,-9,9,-7,9],[-3,-9,-2,-9,9,5,-9,9,-3,10,-7,-1,3,2,9],[9,-8,-5,3,5,-1,-1,-1,10,-5,-5,1,9,-10,-4],[-2,-2,-3,-1,2,8,6,-6,10,-3,6,-9,8,1,-9],[-8,1,-3,7,-1,-2,2,10,7,4,7,9,-9,4,-4],[6,-3,-2,-9,2,5,1,-2,-5,-3,8,-9,5,-6,7],[-1,-4,9,-3,-2,-10,-7,-6,4,-7,-10,-4,-3,-8,-8],[-1,-9,-5,8,7,-3,10,-10,10,-8,8,3,1,-2,7],[6,-1,2,3,4,-3,-9,-8,9,-10,6,-7,1,-6,-8],[5,2,9,1,-5,2,-3,-1,9,-10,7,10,-4,-3,-3],[7,3,3,-3,-3,-9,-6,-7,5,7,8,9,9,8,6]],[[-2,-9,-2,8,7,6,8,10,1,5,9,3,1,3,-3],[-1,4,10,4,-3,-9,1,-3,7,6,-3,5,-7,7,4],[-3,-6,6,-4,6,-5,8,-4,-7,-8,-3,10,-8,-4,8],[-6,-4,-7,10,5,1,-1,-4,-2,8,-3,-1,-8,-1,4],[2,-10,2,-9,1,8,-1,-10,4,5,-10,-4,3,-9,-4],[-4,3,-5,3,7,7,3,4,5,5,-1,-10,5,-5,-10],[7,7,9,-7,7,4,1,4,-3,3,-10,-3,7,6,2],[5,9,1,6,-8,-4,-7,-2,-8,9,-2,-6,-9,-3,-9],[10,-6,7,-5,-7,-6,-7,-4,1,5,5,-8,10,-6,-2],[-10,8,-9,5,-8,9,1,-6,-5,9,8,7,5,-3,2],[5,-8,-8,-7,-1,5,-8,5,3,2,2,-4,-6,-8,-7],[4,2,4,-9,3,4,1,4,8,8,9,-10,8,-1,6],[-7,-1,-4,-9,4,4,-9,1,-3,-3,9,-2,5,6,8]]], dtype = "int64")#candidate|932|(15, 13, 15)|const|int64
bop_933 = relay.logical_xor(var_931.astype('int64'), const_932.astype('int64')) # shape=(15, 13, 15)
bop_937 = relay.minimum(bop_933.astype('uint32'), relay.reshape(const_932.astype('uint32'), relay.shape_of(bop_933))) # shape=(15, 13, 15)
func_89_call = mod.get_global_var('func_89')
func_92_call = mutated_mod.get_global_var('func_92')
const_949 = relay.const([[1,-7,-1,-6,2,-7],[5,-4,2,-9,-1,-1],[-6,3,4,-2,-3,3],[-10,4,-8,-5,-2,2],[-4,3,5,6,-8,-3],[-4,-1,-5,-4,3,9],[1,-4,2,-5,7,2],[3,5,8,-6,-4,1],[1,-6,-3,6,8,-5],[6,-5,-1,6,4,7],[-9,6,10,-5,-1,5],[-6,8,-3,-2,-4,-3],[-5,-8,10,3,-8,5],[6,-1,8,3,-7,8],[3,-10,-9,3,-1,5],[8,-3,6,-6,-5,-9],[1,9,-2,-9,-8,-3],[1,3,9,-3,7,-3],[3,7,-4,-3,8,-4],[-10,7,-3,7,8,-6],[-9,4,-5,10,4,-6],[-4,5,10,4,4,9],[4,1,-7,1,-6,-1],[1,10,9,-6,-6,6],[-2,-7,-4,4,-2,1],[2,7,-8,10,2,-7],[-8,3,-5,10,-9,-4],[3,10,2,7,7,1],[-4,5,1,-6,-6,-2],[10,-8,9,2,9,7],[5,-3,-6,8,-5,6],[6,8,-3,-4,-2,-1],[-6,1,7,9,2,4],[8,9,-6,3,9,3],[2,6,-4,5,2,-7],[5,-10,-8,6,8,-9],[-10,-6,2,2,1,-7],[5,-2,9,-3,-5,-3],[9,7,5,-4,8,4],[1,5,-4,-4,-6,5],[8,-2,-2,6,-4,-1],[-10,-2,4,2,3,-7],[10,7,10,3,-9,2],[10,3,2,-1,-6,5],[-2,-5,-2,4,-2,10],[-3,1,-6,3,3,-9],[9,-9,4,5,9,-3],[-10,5,-9,7,5,-4],[-1,8,3,8,7,9],[1,9,3,3,10,9],[-4,-9,-4,-2,2,-10],[-7,-8,-8,-10,-10,9],[3,-7,1,-10,2,-3],[-4,1,7,2,-2,10],[7,8,-1,9,10,-6],[-3,7,-8,2,-7,10],[6,8,2,7,10,-7],[2,-4,3,5,-6,1],[-5,6,8,4,9,4],[-1,-1,6,-3,-3,3],[7,-3,-2,-7,-9,-9],[-2,-3,-6,-2,-9,2],[-2,-6,-2,-2,8,-1],[10,-9,4,6,-2,5],[-7,9,-2,1,-3,-9],[-5,3,-4,6,-4,-3],[-5,-4,-7,7,8,9],[-4,-1,7,-4,-1,-6],[3,1,6,-8,2,-10],[-3,-6,-2,8,-7,-6],[1,5,-7,10,-2,9],[-6,1,-1,8,9,-2],[1,8,2,-10,-4,-6],[-7,-2,9,1,2,-3],[4,-6,5,5,-1,2],[6,6,-1,2,-1,9],[10,3,-3,-5,-8,-1],[1,1,-8,5,6,-6],[6,-5,6,4,7,8],[-6,8,-5,6,-4,10],[-1,9,-6,6,-5,-8],[-6,-7,-2,2,1,1],[-10,2,6,-7,-6,-6],[-1,4,-3,9,5,-2],[-2,-4,-6,-8,3,-10],[3,6,6,-2,2,5],[6,-7,-9,-9,-5,3],[-9,-6,3,1,-5,-5],[-1,-8,-3,-10,-6,-2],[-6,-5,4,-10,10,-7],[-6,-1,7,4,3,3],[-6,4,10,6,-9,-6],[-10,7,-4,7,3,3],[-3,8,-8,1,5,-5],[-3,10,-1,-4,3,-4],[-6,-7,8,10,6,7],[-10,7,6,-10,-4,-1],[-5,7,-10,4,-4,6],[-2,3,-4,-1,9,-2],[3,-5,10,-1,3,-2],[-1,-9,-9,6,1,9],[-10,-2,2,5,5,2],[6,-2,-1,3,3,6],[-9,5,-2,9,-7,-2],[-6,4,-4,7,-10,-10],[3,3,-7,10,-3,-8],[-9,6,8,7,-4,-5],[9,-10,-1,10,-6,-2],[3,-1,-8,1,7,-5],[7,1,3,2,8,-1],[-6,4,3,7,1,2],[8,-9,1,2,-4,-1],[-10,8,-5,-8,-9,3],[2,10,9,-3,5,3],[-5,-8,-1,5,10,-9],[6,7,2,9,-9,7],[3,6,3,-6,8,7],[-2,9,10,8,7,-1],[-5,-5,9,4,-4,-10],[4,5,-1,-1,7,-5],[-10,-10,8,8,-2,-10],[6,3,-6,9,10,-2],[-8,-5,3,-1,5,-1],[-5,-8,1,7,4,7],[4,2,10,6,8,-3],[3,5,-5,3,-7,-6],[3,-6,-5,8,1,-5],[7,8,-5,10,5,8],[-4,-2,5,9,-1,-4],[-10,-8,-4,1,-6,-9],[-10,-1,-4,6,1,9],[6,-4,5,-7,-10,-7],[8,6,-6,7,3,2],[-8,-5,8,6,2,-3],[8,3,5,-2,7,-8],[-4,9,-2,5,1,8],[-4,3,2,6,-6,-8],[8,-5,-2,9,8,3],[1,10,10,1,-10,-1],[-10,4,5,-8,-6,1],[8,3,-8,-5,-8,10],[3,-1,4,9,10,-2],[7,-1,5,-10,10,10],[-4,8,2,-10,-9,-9],[-5,-9,-2,-10,-2,-2],[3,-1,-9,-2,6,5],[-7,-2,-5,9,7,-5],[-10,-8,5,9,-3,-10],[3,-3,1,-8,2,3],[1,7,2,9,-6,4],[6,-9,6,-1,-3,-10],[4,-1,8,-6,-7,-8],[-3,-3,-3,-10,2,10],[-1,9,-9,6,-6,2],[4,4,-8,-2,-7,-2],[2,9,-3,4,-10,-8],[3,-4,5,-5,-3,10],[-9,-4,9,-7,10,-7],[-5,-9,-3,5,2,-4],[-5,-6,8,-10,10,3],[4,10,-6,-6,-7,5],[3,5,7,-2,10,1],[-4,5,6,3,10,3],[10,4,-6,7,-8,7],[-2,10,-7,-10,-1,-6],[4,7,3,-7,-1,10],[1,9,8,7,-4,-1],[-5,3,7,4,-1,5],[-3,6,-5,-3,2,8],[-5,1,1,10,5,3],[-5,3,-10,-1,-3,8],[3,-6,1,-4,-8,-8],[7,4,-3,5,-6,5],[9,10,3,9,9,-9],[-9,9,-10,-6,-4,10],[-9,-7,-5,2,10,-5],[-10,-9,2,-1,2,8],[-6,-10,7,10,-5,3],[-3,6,-7,-4,-7,-7],[-10,-2,8,-6,-4,-7],[-4,-7,7,-1,-4,-2],[9,-1,-1,-7,-7,-7],[9,-1,8,4,-6,5],[2,4,6,-1,3,3],[-10,-9,9,2,-9,-3],[-1,-3,9,-10,5,-10],[-1,-5,-1,-10,-9,8],[5,8,-4,-3,7,2],[3,10,8,-10,-1,3],[3,4,4,-10,3,7],[8,-4,5,4,10,9],[-3,8,3,-7,9,-6],[3,-4,-5,-8,10,-9],[-8,4,-6,9,-1,5],[-10,-10,-2,-2,4,5],[-8,4,3,-2,6,-2],[-2,-4,-7,6,-9,-6],[3,-10,-5,-8,-6,-8],[4,3,-9,-4,5,3],[9,1,8,-1,-5,-9],[5,-1,8,1,3,-5],[8,-3,-9,5,10,6],[-3,-10,-9,1,8,5],[5,-9,-10,1,6,-9],[4,3,-1,-3,-9,5],[4,1,9,-8,-10,3],[3,-7,9,6,-1,-9],[-9,7,5,-7,9,9],[-2,2,-5,-3,10,7],[-6,-5,1,9,6,1],[9,10,-4,6,7,-1],[5,-1,3,-6,-3,6],[-5,-6,-1,2,-3,-8],[1,-4,-3,1,8,-5],[-1,10,10,-10,10,-5],[2,-1,-2,-5,-2,-3],[3,-5,7,-4,8,4],[9,-4,9,2,-9,-10],[1,-5,-4,7,2,2],[1,2,7,7,10,-7],[-3,4,-1,4,-10,4],[-5,5,3,1,-1,-3],[-8,8,-4,-9,-5,10],[9,-7,-2,5,4,-7],[7,-2,10,1,-8,4],[-4,-10,7,-5,5,-7],[3,-6,-4,-3,-10,1],[10,6,9,-9,-6,-1],[10,-1,-8,-4,10,9],[3,-5,8,-3,-6,-8],[2,7,8,-2,6,7],[-2,8,-1,6,-10,6],[-6,8,-1,-6,-4,2],[-5,-4,8,4,10,-1],[-10,4,-9,7,1,-7],[4,5,8,-1,2,3],[-7,-1,10,8,1,7],[-4,5,-4,10,-6,5],[4,9,1,7,9,-5],[-10,-7,8,-10,2,8],[8,1,2,-1,2,-2],[10,-3,7,-7,2,7],[8,2,5,-6,-9,10],[-3,-10,9,-9,3,-7],[1,-7,-6,5,-6,-7],[-9,5,-10,-1,-3,7],[5,10,-10,-8,1,-6],[-4,4,-7,10,-2,4],[-9,4,-8,-6,8,10],[-5,1,-8,4,5,3],[-8,8,9,1,-8,1],[-7,8,-7,5,1,-7],[-4,-10,-10,3,-5,8],[-4,1,6,-10,3,8],[8,-9,3,7,-10,6],[-1,7,-1,-9,6,7],[-6,-6,-6,-6,-10,-3],[-4,2,-9,-3,9,-6],[5,-5,7,-6,10,-9],[-6,1,1,-1,-6,8],[-1,-6,1,1,7,-10],[8,7,-5,6,-3,-9],[3,-3,3,6,2,-4],[-4,-10,3,-7,-5,-10],[-3,4,-3,4,3,7],[-9,-9,7,-6,10,-3],[-8,-3,7,5,-8,-9],[4,-9,1,2,-10,-2],[6,-7,-4,1,-5,6],[8,3,2,8,-7,2],[4,-1,3,-9,-1,-5],[-1,8,-1,-9,8,6],[5,-8,3,-4,2,-9],[-9,3,-9,5,-7,7],[1,-8,9,1,-7,8],[-6,7,8,-2,6,-6],[-8,-6,-6,-2,8,-6],[-3,1,-5,-2,-3,-9],[-6,-7,10,7,6,10],[6,-1,-1,9,5,6],[1,10,-6,7,4,4],[9,10,5,-7,4,-3],[-4,-9,-4,-8,-2,1],[1,-9,1,-7,-5,6],[-8,2,3,-7,10,8],[2,1,6,1,9,10],[-3,2,5,9,3,5],[7,-2,1,-2,-8,6],[-6,-9,9,9,-10,2],[-1,1,2,-9,-2,-7],[3,-6,4,-2,1,9],[5,-1,-9,2,-4,3],[1,-7,2,-3,-5,5],[1,2,-1,9,9,10],[-5,-9,5,6,-3,-8],[7,2,-10,-1,-4,-2],[-6,-10,-3,4,-5,6],[4,-6,7,1,-5,5],[-10,8,-1,-9,-1,1],[-3,3,-7,-8,3,7],[-7,-3,1,-10,8,7],[8,6,6,5,-4,5],[-9,2,8,1,8,-2],[6,2,-9,3,4,7],[9,-9,-2,4,-9,3],[-6,5,-10,4,8,-8],[-6,4,-10,-10,-7,-2],[3,-8,4,2,-8,5],[3,-4,7,9,2,-3],[-8,-3,-2,-4,3,-9],[-5,-9,9,1,-5,-4],[6,6,-1,-2,4,4],[4,-2,1,-6,-4,9],[10,5,4,10,5,10],[6,4,9,5,5,-2],[9,-5,4,-8,4,10],[5,10,5,-7,-1,-9],[1,6,1,4,-6,5],[-3,-4,6,-6,5,2],[-5,-1,2,-9,-5,-8],[-2,8,-9,8,8,8],[-10,-5,-10,5,8,2],[-9,2,5,-2,-10,5],[-5,-1,6,7,6,9],[10,3,-1,9,-7,5],[9,-7,8,-10,4,8],[-3,-6,-6,6,10,-6],[-6,2,-4,-3,4,3],[3,-7,-7,9,-9,-10],[1,-10,7,5,-1,-7],[3,7,2,-1,5,4],[-2,-3,-9,3,1,2],[-1,1,3,4,-10,5],[-5,8,4,-2,-6,-7],[-10,-6,8,-8,4,-9],[-9,-5,8,-2,-8,-2],[4,-1,1,-7,10,1],[-1,7,10,4,-10,8],[-3,-10,-3,-3,6,-1],[-4,7,4,-4,-7,-10],[-6,6,-5,2,7,9],[4,-8,8,7,-10,7],[-4,-6,-1,-8,5,1],[-8,-8,-6,-4,-2,3],[4,3,-6,-5,-3,-3],[-1,9,5,-6,6,-8],[4,5,8,6,-7,5],[1,-6,-3,7,8,-10],[8,5,-3,-6,-9,-10],[6,7,7,9,-2,-10],[-1,-10,5,-3,-7,6],[-3,4,-3,7,2,-5],[5,-7,-6,-3,4,-8],[-3,-3,-9,-8,-1,-2],[-1,-6,-4,4,-2,8],[7,-8,3,1,5,6],[-1,6,-1,8,9,6],[2,3,-10,5,2,-8],[7,3,-1,8,5,6],[2,5,8,5,1,6],[-10,-7,-4,1,6,5],[-5,1,-5,-4,-3,-10],[-2,10,4,-5,7,-1],[8,-2,6,-2,-8,-10],[2,-4,7,-7,-9,-2],[-3,9,10,-10,-4,3],[-10,2,7,-3,-8,-7],[10,-1,9,2,-2,-1],[-3,-1,3,-6,8,-3],[9,-8,-2,1,-7,1],[-8,9,5,4,-2,4],[10,10,-7,-7,-8,5],[-9,4,-9,-3,7,8],[-5,8,9,7,-2,-1],[10,7,-2,10,7,7],[-8,-4,6,4,6,1],[6,9,4,8,6,2],[8,-9,-5,-2,1,-7],[-9,10,-7,-1,8,-4],[9,-6,9,-3,9,3],[-10,-10,-2,8,2,-7],[9,-3,-7,7,8,1],[1,-4,5,8,-4,-6],[7,-10,-2,-5,4,-7],[-4,-8,-10,-10,2,3],[3,5,-2,-6,5,-6],[-2,7,1,-6,10,7],[-1,-3,3,2,-9,-5],[-8,-8,8,1,6,-3],[-3,2,-3,3,6,-8],[-2,-4,9,-2,10,-1],[3,-6,9,-6,10,-6],[-6,6,-7,-2,-9,9],[-4,7,10,-4,-10,-4],[2,1,-7,-5,-10,-7],[-9,5,5,-6,-5,-5],[-10,8,9,-9,1,3],[1,-2,-10,5,8,-7],[-3,4,-5,3,-7,-5],[4,-7,8,-4,9,7],[5,-1,3,7,-1,6],[-9,-1,-1,-1,2,1],[-10,-8,-10,-2,-10,-9],[-9,1,-9,-5,-7,3],[5,-4,-3,-9,-9,-6],[6,6,-9,1,3,-9],[10,-9,2,-8,7,6],[-8,-5,-1,-5,-8,-3],[6,-6,-5,-1,3,-3],[-3,2,4,2,-2,-8],[-9,-10,-6,6,8,-10],[9,9,5,-6,4,10],[7,-9,-2,-2,1,-10],[6,8,-7,8,-2,-7],[10,5,3,-1,9,7],[-8,-4,2,4,7,-5],[-10,2,9,-1,5,2],[-3,-8,4,6,8,-1],[-4,-10,4,-7,8,8],[-1,6,-5,3,5,2],[9,-3,8,7,6,-2],[3,-9,-9,8,-8,-5],[7,2,-1,1,-2,9],[8,-1,5,9,3,9],[-6,3,3,8,-7,-2],[-5,-8,-9,7,3,6],[-1,8,-4,9,5,-6],[1,-10,4,-7,-7,8],[-4,-5,-2,6,7,-1],[-2,3,-4,8,2,-6],[-2,-7,-9,-6,9,1],[2,7,3,10,-10,-3],[-1,2,2,2,-2,-2],[-4,-6,-2,6,-6,3],[3,-5,8,9,-10,5],[-8,6,7,-3,-8,6],[5,4,-7,1,4,-4],[5,-2,-4,-6,5,4],[-4,3,-5,-4,10,-4],[-6,-8,-2,-3,-4,1],[-3,2,-1,-9,3,-8],[10,-9,-9,7,7,-6],[-8,5,3,9,2,-5],[8,-9,4,7,9,-4],[10,-2,9,-7,6,-6],[-7,6,-8,4,2,5],[3,2,10,8,9,9],[7,-2,8,-3,-7,-4],[-9,9,2,-9,-7,-6],[-9,9,6,6,3,-8],[10,-6,8,9,8,9],[1,-6,-1,5,7,-9],[-1,-8,-7,-7,-6,1],[3,-1,10,-1,-10,-9],[-9,2,-8,3,-8,-8],[-5,-1,10,-5,3,-5],[6,2,-3,8,5,2],[-2,7,-3,-6,-1,-9],[8,5,-2,2,4,-5],[-7,3,-4,9,9,8],[8,2,9,-10,7,-8],[-4,6,-8,-7,5,-9],[4,-5,-2,6,-6,-9],[8,-4,5,-4,4,-8],[-5,7,6,9,4,4],[-8,7,-7,-1,-8,-1],[-8,-1,-9,5,6,3],[10,2,7,-9,8,-3],[4,1,-10,4,-1,10],[-6,1,-9,-1,-6,2],[-3,-2,-8,-6,-8,4],[-1,-6,3,-2,1,10],[10,6,6,-1,10,10],[8,-10,-2,4,3,8],[6,-7,-5,-4,10,-3],[9,-5,-9,6,-2,-6],[1,10,10,3,7,-10],[9,-9,7,5,-8,-4],[7,4,6,-6,10,4],[3,3,-9,4,8,-7],[5,-10,4,10,5,3],[-6,10,-4,-5,2,-6],[-2,9,4,-4,9,2],[9,7,7,-7,10,10],[-2,10,2,2,-6,3],[-6,1,-10,-9,6,-5],[9,-6,9,-2,1,-4],[-9,7,9,7,7,-3],[10,10,-9,9,-6,6],[2,-8,-3,6,-1,9],[-2,-7,4,-10,1,2],[-4,7,-7,7,2,-2],[10,-7,10,-10,2,-5],[-9,-3,-4,2,6,-10],[-4,-2,-4,3,10,-4],[-6,5,6,-4,-5,-5],[4,7,-9,-2,-5,1],[-9,-3,4,1,6,10],[8,-6,3,-1,1,6],[4,2,4,-1,8,4],[-3,-2,3,-10,-5,3],[10,-4,2,2,10,7],[7,-7,-2,-7,-7,6],[2,-10,-4,7,-9,-6],[3,-10,2,-6,-5,-4],[-5,-6,3,-2,-7,3],[7,7,5,10,-1,-2],[10,-2,3,6,8,-10],[-1,5,5,1,-10,-2],[4,-2,4,8,3,9],[-7,-6,6,-5,8,-6],[9,-7,-8,3,-2,-6],[8,10,-5,9,-5,-8],[-1,-7,4,4,-1,-4],[1,-2,2,-9,6,-2],[-8,5,-6,-4,8,5],[-3,7,9,6,9,-3],[7,-1,-1,4,-6,3],[-1,-8,-8,-3,10,-8],[1,9,1,-1,3,-3],[-7,-4,-7,-6,5,9],[6,6,-2,-5,8,3],[3,2,-5,10,4,-6],[2,3,-5,3,-4,7],[3,1,3,5,-5,4],[1,-6,6,8,-6,-7],[5,2,7,7,3,-3],[9,4,4,8,10,10],[5,-5,-1,2,2,-5],[-5,-1,10,5,-4,5],[-7,-3,6,4,-5,2],[3,2,-8,-4,-9,1],[1,-1,7,2,1,-10],[3,10,-6,4,8,7],[-2,1,8,-3,10,-5],[-1,10,4,-3,-7,-5],[-7,4,-4,3,4,9],[8,2,-7,-6,3,2],[-7,8,-10,-6,-1,-4],[3,-3,1,-8,4,-6],[6,9,7,1,-6,9],[2,-5,-8,-10,-6,8],[4,4,-6,9,2,3],[7,7,-1,-1,2,7],[-7,-8,1,8,-2,5],[7,-9,-10,-10,6,-4],[4,1,-3,3,-7,-1],[-9,-6,-5,10,-3,-1],[-3,1,10,8,1,7],[8,-4,-3,1,-5,-4],[8,-2,-6,3,6,9],[-1,10,-6,8,7,7],[6,-3,-7,-1,4,5],[10,9,5,-4,7,-8],[10,-5,7,-8,-1,4],[-1,-4,-2,-5,6,8],[4,-8,5,5,4,-4],[-3,-4,5,-4,-2,-1],[7,7,-2,7,-7,8],[-2,7,3,9,-4,-2],[-2,5,-7,10,-4,9],[10,-9,-10,-10,10,-2],[-1,-8,-5,-5,-9,3],[-9,-9,-8,7,4,-6],[5,-1,-5,9,-6,-2],[7,8,-2,-1,-3,-3],[1,-8,10,-1,4,-1],[3,-7,-4,9,-10,9],[-9,-2,3,3,5,-8],[9,-1,1,2,-9,2],[9,9,2,1,10,-4],[-7,8,-10,9,8,-10],[2,-3,-10,6,-8,-9],[3,-2,1,8,2,-4],[-4,2,4,1,4,7],[-8,-5,10,-5,-6,-7],[-4,7,-3,-10,7,-1],[6,7,5,-5,-8,9],[6,10,2,9,2,-2],[10,-4,-6,7,8,-1],[9,7,-8,-5,2,-6],[-5,-10,4,4,4,8],[6,1,9,-8,-9,6],[-1,4,10,-6,7,-2],[8,3,-7,-3,6,6],[5,4,8,1,-2,-1],[-5,7,-4,4,-6,-5],[10,5,-1,3,-4,-2],[-6,-2,-8,-1,9,-6],[7,-5,7,-8,-8,-4],[6,7,-2,-4,1,-9],[8,-1,-7,10,-7,1],[-4,10,5,-3,9,3],[-8,-2,-5,-8,-10,-10],[8,-5,4,6,4,-10],[-9,-10,-2,10,1,8],[4,9,-7,-4,-8,9],[-2,1,-10,-7,-5,-7],[-1,8,-2,10,-4,-1],[9,-7,4,-10,-8,4]], dtype = "int16")#candidate|949|(600, 6)|const|int16
call_948 = func_89_call(relay.reshape(const_949.astype('int16'), [15, 16, 15]), relay.reshape(const_949.astype('int16'), [15, 16, 15]), )
call_950 = func_89_call(relay.reshape(const_949.astype('int16'), [15, 16, 15]), relay.reshape(const_949.astype('int16'), [15, 16, 15]), )
func_403_call = mod.get_global_var('func_403')
func_407_call = mutated_mod.get_global_var('func_407')
const_952 = relay.const([6,7,-4,2,-5,4,-9,-1,9,-10,-2,1,-10,-7,4,7,6,5,10,-5,-6,-3,9,9,9,-8,-2,7,4,1,1,-7,1,-8,-1,-8,-9,10,-4,9,-2,4,-6,4,-6,7,4,-6,-7,-5,-5,-3,-3,4,4,9,-10,8,6,7,8,9,7,-6,-10,-1,4,-9,9,-4,-9,-8,8,7,1,-5,-6,-10,2,7,9,-4,4,-1,9,5,-10,8,-1,1,-9,-1,-3,-9,-9,4,6,10,-3,2,-6,-1,10,-4,6,-10,-4,-1,-2,-1,-9,-8,4,7,-6,-3,-6,9,-6,6,10,7,9,-2,-8,-3,-9,2,-6,3,7,-6,-2,8,10,10,-10,-6,4,-9,1,9,-10,3,1,-9,4,1,4,4,1,-6,10,9,7,6,7,-8,-8,2,1,-10,-9,-2,10,7,-9,-2,4,-5,-9,-1,-6,-3,3,6,9,8,-6,-2,-6,8,3,-6,-3,-2,-2,7,5,4,7,2,5,5,2,-6,10,6,5,-2,5,-1,8,-6,-9,-9,-10,4,2,-5,-9,-3,-6,-4,-2,-1,10,-5,9,-1,2,7,-10,-7,10,-7,6,8,10,5,10,-1,10,-9,9,-9,2,5,5,-6,-8,4,4,8,-5,8,-10,8,-6,9,8,8,-4,-2,9,-5,-1,-2,2,1,-4,-5,-9,-4,-9,-2,-3,-7,-5,5,6,-2,-9,-4,-4,-2,-3,5,-9,6,-4,-7,1,1,2,2,5,5,-10,-7,-3,5,6,-7,-8,5,3,6,-5,-10,4,4,-5,5,9,2,-1,-7,6,3,9,4,9,6,9,-10,-7,2,5,-7,-1,6,5,-10,9,5,-3,-10,10,-6,-1,2,3,9,-3,-2,-7,-6,-4,-5,2,-1,-8,-7,8,-9,-2,-6,-5,4,-1,-2,-5,-1,7,-1,6,3,-6,4,4,2,2,-10,3,7,-10,-2,-7,5,-9,-2,10,-10,-6,2,-6,3,-2,-9,6,-9,-4,3,-4,-5,5,-1,-3,-3,5,-8,-10,1,5,-9,5,-7,-8,2,9,8,-5,2,10,-8,1,-6,-6,-6,-8,-3,-2,-3,3,4,-3,7,-1,-7,-4,-6,2,7,8,10,-8,-10,-3,3,-8,-7,1,-8,-1,-5,-1,-2,-10,2,4,-5,-5,5,8,6,-6,5,-7,2,-10,-4,6,4,5,-6,-8,-1,6,4,5,7,3,1,-7,-1,-7,-7,-1,1,-7,-6,7,-9,-5,-4,3,4,-5,9,5,8,4,-7,6,-4,-6,-7,10,-4,3,7,-1,-3,3,10,-1,-2,-6,4,10,5,8,6,2,-5,10,-10,-3,7,6,-6,8,3,-10,5,5,-3,-2,3,1,-8,9,1,-2,10,8,4,-5,-9,4,-4,-2,1,7,9,-1,-8,6,6,10,5,-3,1,9,-4,1,-3,-4,10,-10,9,7,-4,9,-2,-6,-4,-9,-9,-6,-1,-1,-2,9,-6,3,10,5,5,-4,10,6,-10,-10,1,-4,-2,5,9,8,-2,-1,10,-6,7,-4,1,4,4,2,9,-10,-10,9,-10,5,7,-4,-1,6,8,6,9,-1,-3,2,1,-6,-6,10,-1,8,10,-7,-10,-10,2,-10,-7,7,5,3,1,7,-4,3,-2,5,3,-5,-6,3,-3,10,3,-2,-9,2,-6,-7,-6,8,-1,1,9,-7,1,5,-1,3,-4,-2,-2,3,5,-10,10,8,5,5,5,8,-2,-9,-8,8,-7,-7,7,7,-9,3,-7,1,10,3,-10,1,-4,6,3,5,4,-1,9,-3,6,-6,-8,-4,-4,6,-10,5,-7,7,5,-2,-2,-10,-10,9,-8,9,-3,6,2,1,-9,7,9,8,3,-3,-2,6,-5,-9,2,-10,-3,-4,10,-8,-6,-7,-8,-9,4,8,4,-9,10,1,-6,-9,-9,5,-10,8,-9,-1,9,-9,-1,-10,-2,-1,5,-4,-4,9,8,3,-6,-6,-6,-3,8,-2,9,-1,1,1,7,-6,-10,6,-10,8,10,2,-2,4,6,-8,-6,-4,-2,-4,4,-9,6,4,4,3,-7,-1,9,-8,9,-10,6,3,-10,-6,8,1,-1,-1,7,1,8,-3,-7,-2,7,-5,-5,-3,-7,3,4,-9,-7,2,-4,-5,6,9,-9,4,-4,-10,-9,-8,-2,2,-3,5,-3,3,1,-10,-8,-2,4,4,5,9,-9,-10,7,8,-7,1,9,7,-4,7,-10,10,3,1,9,1,8,10,-5,5,-1,-2,-10,10,-8,7,-6,-1,10,8,-4,9,10,7,-10,-7,-9,-9,8,3,8,3,5,-4,7,-6,1,-3,9,-8,2,-7,-6,8,-8,1,10,-10,9,-2,6,-7,7,7,2,2,1,-3,-8,1,3,-5,-8,-10,9,-3,-1,-1,2,4,-5,6,-8,3,9,5,7,-4,5,2,-7,-10,-5,9,-10,1,-1,-1,7,8,-9,-9,5,3,-9,-5,-8,-5,5,-2,6,10,2,8,-7,-7,-9,7,2,-3,3,-7,2,-5,3,2,1,-9,-5,-2,3,-1,6,8,7,8,9,2,5,-8,5,10,-4,-8,-5,-3,10,3,-3,-3,-2,10,-6,3,-10,-2,3,-10,2,-7,-8,5,6,5,9,-8,1,-2,-8,8,6,-10,3,-5,8,10,-2,-6,-5,6,1,4,-9,8,-9,-5,8,3,7,-4,10,3,-3,8,1,1,-7,-5,9,-6,-2,5,-10,1,8,4,-1,10,9,-1,4,-4,5,9,-5,-4,8,8,10,5,5,8,8,10,-9,-10,3,6,-5,1,10,6,-5,-3,-4,-4,8,6,1,-7,-9,3,-1,9,4,6,7,9,8,8,-10,2,-6,8,-4,-10,-10,-4,-4,8,5,9,10,4,9,2,8,-9,-2,-4,10,1,8,4,8,-9,8,5,-5,-5,-4,-4,-3,-7,-10,3,-8,3,-10,8,-10,3,5,7,-8,4,1,4,-5,-9,5,-6,-6,7,-7,-4,-3,9,4,8,8,5,4,-3,2,3,-4,8,-1,4,1,-6,-6,4,1,-3,8,8,7,2,-3,-5,-5,7,-10,-3,-10,7,6,-7,7,-5,7,-8,7,4,-2,-7,1,-2,-4,4,-8,1,4,10,-5,6,-10], dtype = "uint8")#candidate|952|(1200,)|const|uint8
call_951 = relay.TupleGetItem(func_403_call(relay.reshape(const_952.astype('uint8'), [16, 15, 5]), relay.reshape(const_952.astype('uint8'), [16, 15, 5]), ), 1)
call_953 = relay.TupleGetItem(func_407_call(relay.reshape(const_952.astype('uint8'), [16, 15, 5]), relay.reshape(const_952.astype('uint8'), [16, 15, 5]), ), 1)
output = relay.Tuple([bop_937,call_948,const_949,call_951,const_952,])
output2 = relay.Tuple([bop_937,call_950,const_949,call_953,const_952,])
func_958 = relay.Function([var_931,], output)
mod['func_958'] = func_958
mod = relay.transform.InferType()(mod)
var_959 = relay.var("var_959", dtype = "int64", shape = ())#candidate|959|()|var|int64
output = func_958(var_959)
func_960 = relay.Function([var_959], output)
mutated_mod['func_960'] = func_960
mutated_mod = relay.transform.InferType()(mutated_mod)
const_991 = relay.const([[[-9.069075,0.832834,3.474530,0.131935,-6.727057,-5.993221,3.651075,-1.777123,-1.820618,-6.774545,2.999484,-0.519908,-7.048810,-8.814890,4.439407,-8.439304],[0.446859,0.955182,-8.313023,-2.271517,-8.408667,-8.981689,0.092137,9.290545,-3.505647,6.733239,8.061827,2.596267,7.547228,-3.649599,8.934424,-6.768132],[-2.652189,3.816686,6.862459,-3.722019,-1.637890,8.724034,2.305936,7.107201,6.668801,-7.916013,-1.812810,-3.681003,7.061889,-4.040557,-4.397266,3.341215],[-1.677863,4.953180,-8.522132,-5.508849,-5.868924,-7.322051,-9.056340,9.334035,9.987736,-3.139040,-0.222917,7.528050,8.041593,-7.187605,-1.656627,7.287927],[1.896124,-0.425715,-6.522203,-7.821028,9.235621,-7.859338,9.722444,5.368577,1.264032,-1.803609,-5.401427,5.268659,-2.498507,2.678311,8.067736,2.642392],[8.097925,9.564094,-0.403299,1.224696,-9.268157,-2.142037,0.654794,-9.921965,0.099013,-0.338609,-3.627113,-4.972398,-9.927956,-9.499825,-6.504078,-9.773156],[8.163045,1.709233,4.540548,8.026678,-8.807297,0.038217,4.662537,0.210551,9.288706,9.433137,8.905296,-0.720122,6.071952,-6.053881,-8.045561,-3.859107],[-1.176740,-6.086858,-4.532279,3.664323,6.901181,-6.986559,6.267465,4.941619,-0.985883,-8.874702,-9.618869,4.973303,9.935597,9.115653,-6.292491,-8.300927],[4.813695,-4.916863,-3.175977,2.344625,6.202416,8.417448,7.712646,6.373022,8.750774,5.467379,-5.823037,3.212982,-4.312691,1.038111,-8.602271,6.593246],[-7.540825,0.882522,-8.256878,-1.738084,3.822809,-9.935190,7.303494,-1.303432,8.684736,-1.067562,-0.910117,-6.357544,8.003173,3.010267,6.278005,7.079560],[-8.135803,-3.026319,6.744449,-0.639715,-5.002499,4.436106,-9.976058,-4.065928,-7.724297,7.425327,3.501788,3.162840,-9.869323,-6.212617,-8.202633,2.224601],[9.678964,7.368260,7.990407,1.864512,-8.924616,3.501250,-2.030491,-4.287983,-8.807870,2.644348,1.081342,-1.120859,4.619234,5.286158,0.834015,-0.445263],[9.851469,8.792199,-6.924056,-5.580824,-6.140905,8.744840,-1.647028,3.927989,-4.305351,-7.890091,9.475185,9.038918,0.844833,-1.349642,3.991406,3.464771],[-6.809760,1.666573,3.602999,9.234132,2.228877,-5.646748,7.408152,1.877681,-4.198346,8.068131,-7.812250,-7.703453,-7.498029,-4.534697,-3.261928,-0.626067]],[[0.269743,9.193267,8.247824,-3.607569,9.600720,-8.767696,-3.997629,-4.666218,4.741384,-4.565506,-0.421711,-2.301328,-3.145439,9.932437,-0.021954,8.171509],[8.214033,2.397317,-8.844972,-3.962072,-9.933014,-1.526365,-3.461943,-8.194535,-7.029580,6.876091,7.302106,4.582625,5.211289,-6.244567,-4.742902,2.303757],[-6.404646,1.852424,-0.329061,1.579779,-9.110992,2.774036,-5.904677,1.437353,-2.800667,-6.544415,-0.716776,4.675623,-8.501232,4.216529,-9.202673,-8.490851],[4.201282,4.491684,5.063023,6.738806,-0.597673,-6.646132,-8.078631,1.752439,1.193872,-8.454680,-7.389124,6.769844,-4.984607,7.224620,4.455746,5.924036],[1.283274,-1.724325,9.774513,1.181617,-0.010323,9.735248,6.395108,6.813874,-5.189931,-8.271285,-6.485025,2.898249,-0.750461,4.026523,-9.903078,8.308719],[9.619228,4.526893,1.384621,-9.261347,-8.767821,-8.043419,-2.682196,-2.819781,2.027084,0.678299,-2.954692,-0.414671,-6.657735,-6.184142,0.266675,-2.210135],[3.201890,3.027353,-9.582284,-3.591877,6.619320,-1.322947,0.256750,-1.187143,9.337843,-8.367610,-8.645078,8.808482,-8.622028,-6.419898,5.865194,-8.287515],[-3.078055,5.820813,8.402045,0.138792,-2.352164,-0.678189,6.180325,-9.928269,5.982765,-5.311869,-9.927827,-3.180007,-4.166406,-4.325535,2.578087,-7.208854],[-2.502961,5.844231,-3.546316,2.588919,-4.841547,-3.160521,-1.939417,7.063107,8.636086,-3.260246,6.224082,-4.751968,1.915198,2.978678,7.085347,-9.314155],[7.209348,6.970101,-7.998120,-3.276318,-2.533492,-2.733487,1.707268,-0.324992,-4.480571,-1.520960,5.122416,4.870934,4.557127,-3.650743,-1.310013,5.614737],[-3.097324,0.551941,7.654708,4.795327,-8.742716,-4.411172,7.329016,-5.432423,8.793886,7.754614,3.509096,7.533966,6.271618,7.264884,-6.791708,9.997092],[5.411710,-2.055732,-4.560202,2.749693,1.683057,3.096033,-6.549982,-4.590196,-7.111862,0.835267,-6.875709,9.747151,-4.930380,-4.351518,2.987524,2.639467],[-6.358778,9.625250,9.046131,-0.480731,-8.472506,-8.342390,4.850421,6.930767,-1.374694,-5.133910,3.427733,4.137620,-2.970030,2.823179,0.766072,4.653501],[-6.252455,4.440284,4.334128,-6.476744,0.193887,-2.117244,-3.473851,-0.631850,-4.105053,2.778265,-2.266165,6.837985,-9.769154,-4.325101,8.026138,-8.553191]],[[-8.478033,-2.434487,1.789670,-3.502019,8.938947,1.156840,-1.553324,-2.825787,-5.065457,-7.466519,-1.830186,-4.848905,-0.020238,9.628589,-7.603247,2.677614],[6.254279,-0.157952,2.931201,2.858170,9.951420,-0.790836,-3.133003,5.079699,-7.797958,-6.739808,5.488996,-8.742176,4.995015,-1.720520,2.110702,5.072970],[2.509362,0.831382,-2.399863,2.278881,4.678620,1.506595,-9.249885,3.716301,-3.674619,-8.722560,-5.589988,-1.555969,-0.901203,4.206790,-0.253783,-2.368550],[-6.889338,-2.328842,-9.307426,-0.433695,1.530888,1.651852,-9.851074,2.244627,-7.367478,7.544814,-4.286991,5.102819,-2.366085,-5.522186,8.008249,-6.513594],[-7.245049,-7.594497,-5.854611,-9.314337,-6.584721,2.894417,-8.916761,0.553898,-7.628047,8.268193,-3.840548,1.684306,3.149210,-4.803675,-5.878952,-6.203300],[2.630876,8.464417,-4.096582,-8.632638,-0.371580,6.589197,-6.031265,5.816690,8.935533,6.675422,6.951422,-6.086690,-1.003896,0.980084,0.212776,0.084889],[-7.418622,-3.020736,-5.001556,4.056111,2.804887,-9.840906,-8.447034,-0.384959,-8.387307,6.689566,8.136736,8.954982,-3.296101,-7.494597,-4.930175,5.441109],[3.201562,7.560620,-2.845642,-9.365939,-3.262892,0.807840,-3.063294,-0.558735,8.566697,2.923056,-2.882704,-7.422402,4.240462,-8.788548,-7.301857,0.594081],[-0.937838,7.455530,2.881455,-5.281182,-0.344517,-9.935243,0.303219,-0.259108,2.099785,1.598020,-7.570463,-6.022173,0.330725,3.622337,-1.481103,0.688637],[-8.494049,8.698338,-3.180926,6.870383,0.219687,5.488969,-0.540823,7.123790,0.794630,9.557508,-7.138660,-7.975032,0.070504,1.528474,-4.937606,-1.120422],[-8.392677,-6.606153,5.811420,3.462601,-7.895487,2.131988,-5.603745,-9.281592,-0.909892,6.364837,1.355828,-8.855385,-6.083142,8.873080,-7.628047,8.756582],[5.734781,2.815817,7.322356,-9.798086,8.715516,-8.546359,-2.366211,-0.163365,8.802618,-9.727000,9.122077,8.238706,-0.930413,-4.742190,-4.372675,6.390781],[3.545919,-3.883747,-7.401987,-7.088462,-6.919747,2.298384,7.375918,3.747815,-5.417744,-7.566835,-0.813064,7.871304,-9.053754,9.314957,7.800466,-3.331647],[4.075100,7.264847,2.819911,-6.661619,-0.891719,6.440705,2.788100,-1.535918,-8.036075,7.995230,-9.353531,8.504849,-3.016981,0.713742,-6.027788,-3.579943]],[[-4.477926,0.892387,-9.114028,-2.970347,0.491457,-2.385134,-0.083736,-3.048099,9.823554,-1.709034,-1.642736,-8.944918,-4.695770,-5.377028,-8.853723,1.836709],[-7.819714,-1.034373,-7.481648,-6.979028,-1.270533,-5.004147,3.139585,7.623157,-8.343959,0.702706,-9.275044,6.666425,0.158785,7.421599,-6.295919,7.905154],[3.929563,3.172180,-2.894511,0.617404,9.062153,0.987298,5.034740,2.742633,-2.356145,-4.973848,9.660018,-4.989933,-2.204647,-3.957771,-3.476362,3.515860],[4.660013,9.594254,-1.068097,5.187125,-4.047422,5.354379,6.101330,1.989903,8.664308,-1.932058,4.732790,2.147430,-7.968431,-3.448991,8.388850,-7.684600],[3.178722,-8.713399,5.268476,8.021251,3.471229,0.532974,0.543016,-5.700732,-3.736072,7.113364,2.433475,3.286462,-8.614171,-4.555006,-7.342189,5.760570],[-5.986191,7.241780,5.906293,2.155513,7.062954,4.033276,4.998501,7.725091,7.695132,8.630462,-7.793729,-0.043878,8.632943,-6.830677,-8.158319,3.750910],[-2.009624,-4.940279,8.031850,-3.524655,-5.683287,6.525077,5.779405,9.610481,-0.350886,-4.993095,-3.329463,4.900761,2.600900,5.204344,8.447166,3.044640],[0.058997,7.231325,9.749651,-3.531987,-5.540904,-6.481214,-2.389898,-9.597048,-6.233655,1.973695,3.203925,-2.462017,0.277995,-9.330980,-5.972931,-7.545573],[2.763992,-1.585227,4.179011,-5.014043,7.596877,0.738265,6.809707,-7.786345,-9.865250,-0.998256,-1.541444,5.751715,-2.114202,4.000396,4.207687,-1.787323],[6.353692,2.969387,6.830027,-7.021453,-1.153309,4.594680,4.050234,-5.954947,5.541300,-9.975464,5.706819,7.704331,2.297337,3.659131,-9.171122,-3.351980],[-0.301526,-0.078926,8.049491,-7.137683,6.719196,1.002512,8.631659,-7.050882,-2.426730,7.809525,-2.763795,5.512735,9.675024,-5.258237,7.861988,1.526054],[2.092423,9.782468,6.955907,-2.949703,3.738573,2.481191,7.167318,-2.407687,-5.997700,-6.786544,-1.933873,0.475844,-0.557158,-0.640514,-3.644110,2.149572],[7.524326,-9.653458,7.974202,4.454904,9.129289,6.135986,3.260108,-2.665659,4.683212,-3.535528,2.831901,9.301949,-7.727169,4.810104,-0.705557,-6.512424],[8.834325,-3.261687,4.988934,-8.162814,-3.887078,-9.998808,7.696478,-6.531245,4.927968,-1.916414,-1.809641,-8.034749,5.073701,7.709045,-5.832550,-2.651872]],[[-1.827616,-5.138292,-9.153818,-6.604242,9.254535,-4.824121,-3.579872,1.354949,-8.408087,-5.087300,-5.101231,5.937328,-4.446361,8.279310,-6.628518,-5.121240],[-8.576055,-2.956868,4.799315,8.090999,6.385560,8.884836,-9.370862,1.460395,1.147668,3.011677,-4.778909,2.504573,3.256113,-8.965546,-1.689559,6.212151],[6.715114,-9.347220,-5.338531,9.287581,9.880344,4.996581,-1.078817,-5.586190,-4.618078,8.602489,-5.728735,5.537298,8.950585,1.198794,1.386078,-6.104443],[4.355087,0.985895,-9.694327,5.012837,-2.323675,-8.568707,-2.252310,-7.845719,-8.216781,8.292337,-5.126534,9.658794,-4.610600,-4.531695,2.741346,0.709192],[8.123498,-5.157922,5.227940,8.798138,8.700131,-9.679143,6.456259,-7.091601,-5.215818,-5.072925,2.865356,-7.350397,7.679511,2.804249,5.120509,7.448448],[0.847014,6.595560,9.028074,-5.723982,-8.252886,-0.220658,0.593523,7.708382,4.524735,4.503264,3.797940,-2.481865,-5.145596,9.592876,-3.289078,-4.266148],[8.151373,3.926263,-9.317686,1.710372,-5.017697,-3.338239,-9.570073,-9.529928,-2.274515,-7.611295,9.443941,-5.397693,-3.261790,-7.688912,-6.653390,0.584754],[-3.216142,-4.813771,-6.263439,6.840833,-3.635103,8.663162,5.883845,-5.378633,3.044484,-0.334093,2.635977,-4.639057,-6.587619,1.292909,6.190002,-2.199555],[4.973321,-1.148103,-2.206523,-9.062864,-7.870276,-9.110280,1.294931,1.278882,8.295840,-7.736481,-0.093877,1.510787,5.948629,5.350669,8.676330,-1.243486],[-6.325677,-2.490768,-4.596202,8.889917,-0.705082,-0.844968,-4.731483,-7.793349,1.601595,0.312628,3.738904,5.948836,9.244321,2.997531,-8.884056,1.537242],[0.522246,-1.852708,-5.544979,-3.942879,9.566262,8.284150,-0.470809,3.590912,-1.394874,2.376338,1.945308,-8.474445,5.175262,4.780796,0.949287,-7.220344],[2.369367,-6.499801,1.590562,-1.221984,0.915012,-6.271757,-0.354607,-8.600233,-2.507538,-6.556937,-5.522210,-7.461491,0.343994,7.158336,-6.776530,6.537411],[-1.000345,-6.892488,-1.804691,-0.455505,-0.663530,4.058774,9.760466,7.970205,7.641723,3.322739,-6.421088,1.358547,-4.016327,-2.282704,-2.483272,-7.648923],[9.885625,-9.836261,8.649916,3.156953,-3.910529,-4.413434,-4.177067,9.310673,-7.601188,5.209497,4.106644,-4.350373,-5.090457,-8.755420,-0.352417,4.360176]],[[2.185331,2.365898,1.224235,-8.601384,1.608975,8.462718,-7.843587,5.835850,4.730950,1.766425,9.751351,-0.249388,-7.122125,-9.982705,8.897628,-8.941406],[-0.736371,-3.997171,9.767067,6.031177,0.077781,-1.787073,4.625462,-9.514153,1.608527,5.487793,7.681597,-1.833244,7.506497,-3.396898,-3.491557,9.390316],[-0.983524,-8.439833,4.857535,-0.286097,-9.999844,-5.063037,-8.491601,7.973875,2.750871,-5.728603,-0.952067,-4.122827,-5.297714,6.792725,-7.584517,1.318254],[-0.485975,-1.504885,0.408634,-3.297307,6.958578,3.134309,-6.528303,9.743310,-0.581102,-5.210951,-4.667079,-0.985223,-7.360708,-8.146060,-5.003564,4.404331],[8.499939,-8.899351,6.708052,1.067050,-5.053999,-6.710990,5.759355,-5.092512,-1.879959,-9.178314,8.810522,9.284268,-9.474812,-8.161394,4.347612,8.900825],[7.171617,9.715850,0.264164,-1.400588,7.630262,-8.437494,-6.617458,-1.991323,3.809920,-4.506636,2.856913,-4.151223,3.509760,7.322704,0.565474,4.799154],[-4.180264,7.210818,8.376166,8.451729,-9.190206,3.331001,-2.105214,6.058954,1.697396,7.479077,1.796217,-2.954309,-7.671177,6.388956,6.157207,7.255029],[2.207083,2.840847,-7.742060,-9.751606,-4.243197,5.726052,1.038482,-2.883612,-8.950916,-8.913838,-3.180441,-5.191318,-3.338571,-8.220853,7.119499,2.518517],[-9.092377,8.353012,-9.973535,6.935896,-2.613390,1.066645,-2.621360,-0.848167,5.003167,-8.124477,3.944422,4.988897,8.879947,4.932634,6.795535,1.970176],[0.751570,-0.090590,-0.276012,-9.871925,-0.749804,1.867643,-3.710443,-8.581095,-9.833241,9.491577,2.126021,2.080168,-2.710622,6.644717,7.384091,0.170232],[-9.447722,-2.131604,0.895053,3.408118,2.287953,-0.103033,-3.604913,5.030489,-6.666281,-0.739937,0.259199,-8.098487,3.358756,5.353048,-9.373733,5.940716],[-6.946133,-6.004713,6.337446,-6.267521,-8.318869,-8.597286,7.987192,5.376054,-7.586239,9.986768,0.134765,3.503713,-9.963741,0.407220,3.453137,1.320734],[5.995396,8.010911,1.492405,9.920274,4.610840,-3.888773,1.756453,-8.520885,0.047077,-8.243255,1.919824,4.363404,-0.040370,-7.082081,-1.007151,-7.231874],[8.799770,-4.570164,3.296978,-3.804128,1.499685,6.504452,-1.809734,-6.745420,9.939650,-0.458540,-1.156528,-1.806079,1.638553,-8.500745,-3.678829,2.075922]],[[-7.347235,-2.429222,6.629840,-3.093063,7.279214,9.762308,7.744141,-7.685938,-8.756052,1.104640,-1.452261,-6.586364,6.056033,2.997327,6.508291,6.271404],[-7.984327,3.816109,8.542833,-8.926309,9.055123,-4.064218,5.274515,6.478834,-3.704657,-0.873425,1.528332,-6.913292,4.513641,-1.683774,-2.900121,1.496895],[-0.908937,-9.903926,-1.433892,-8.845421,-2.864174,8.376675,6.044114,-0.785965,7.407845,0.511458,8.078956,1.302650,9.317253,5.068315,-8.715559,3.531780],[0.476329,-6.286236,-6.541458,9.510666,7.524335,5.965965,2.977236,-4.586358,-9.403962,3.457803,7.669883,5.630525,1.480585,-8.213824,9.107074,-3.649673],[7.330738,-9.533546,3.372926,7.162071,-7.296529,-1.594673,-5.974819,3.000900,-4.461246,-4.472480,4.921097,-7.387265,-1.544998,-4.575935,-5.216266,-0.127581],[5.826374,-1.014070,-3.839046,-9.422939,-9.754093,-8.816411,4.040490,4.371933,2.940925,-4.487752,9.323671,6.890599,9.561921,0.278239,-7.373636,-3.452974],[6.500543,-4.884390,-9.171456,-7.329988,3.846598,5.816662,-9.134427,-8.370353,-3.297933,1.907138,-4.566789,2.881155,-1.910637,8.822548,-3.928584,9.874254],[-8.905768,8.429153,-3.996903,0.611216,-1.794030,-6.881755,-8.358814,-5.319466,6.395900,-8.552458,-3.145791,-0.919335,3.184369,0.382935,7.091353,9.060894],[6.410792,-1.003757,-7.313265,0.729117,-9.184830,-2.035309,9.310986,1.154928,-8.698533,-5.750163,0.685781,1.667973,-1.464039,-0.736685,4.974887,-8.370145],[-4.221265,-3.235907,-2.882359,2.517930,-5.493356,2.340205,7.876943,-7.484116,5.621797,-1.541419,5.282776,7.065368,2.694046,6.155163,9.774883,7.474389],[-7.582443,-4.327006,5.129072,9.475587,6.843530,2.667589,2.315774,-6.165808,-6.835962,6.771704,2.672031,-0.371038,-5.203096,8.061389,7.149178,2.302551],[2.550461,-6.592461,-4.264787,-5.593563,7.877342,-7.751702,1.671787,9.671939,1.966797,-0.496254,1.057402,0.672246,-2.816902,7.033776,5.331922,-1.747489],[-4.408751,-0.119814,-5.608611,0.695796,-4.715388,1.870007,-5.371001,-4.200300,0.109051,-9.588509,2.833759,3.271553,0.991707,1.006189,2.317685,7.908704],[-6.959555,-8.593492,-7.155260,-1.701844,0.442517,-5.177503,-9.111879,-1.588582,9.760132,-2.371323,-1.322174,4.896891,-1.558133,8.015605,-6.907590,-0.533653]],[[-8.108005,9.847020,-1.015714,3.705877,4.719441,4.766445,-0.019176,-1.489939,6.173294,-9.555540,-0.965244,3.992569,-2.089429,-9.289211,7.636088,-4.946324],[-8.366270,-5.838360,5.413058,-2.168547,5.824366,2.970200,4.551442,-4.008123,-5.222145,8.115233,-2.121061,-9.912861,0.718430,4.609506,8.321783,-1.317305],[2.179350,-4.463732,-2.424310,-8.042697,-1.509103,-5.136146,4.950797,-1.801589,5.692232,-3.508941,-9.320614,1.353588,6.903850,-3.215527,-3.951228,-6.386527],[1.008362,-4.258655,-5.037697,-1.100097,-9.568206,-6.923314,3.733745,-4.819141,-9.678498,-1.867384,7.814177,-1.799874,-1.245294,3.189277,7.117374,-4.134419],[-5.817119,9.590159,8.502129,6.002216,-6.825924,2.161154,9.611786,-5.096907,-2.379811,-4.442262,-4.525971,8.080434,-3.188629,4.170569,-8.806542,-9.248261],[2.611920,4.244701,9.342962,-1.333019,9.172972,3.608807,1.977348,-1.887094,-6.827627,8.845100,-0.827318,0.107447,4.339769,-1.736783,7.945626,-9.637342],[-8.503074,5.623981,4.536985,7.590350,-4.191215,4.732076,4.380771,6.381762,-2.431059,-2.742981,8.892788,1.880413,2.021570,0.548808,2.767266,8.409380],[8.768276,0.495201,-0.154417,2.383590,-1.582830,6.437558,6.363483,3.949747,8.027783,-3.814351,-8.992046,-5.720230,1.321896,-5.529449,6.345436,5.953424],[-0.339987,6.943771,6.751178,3.784301,2.517415,1.153821,-7.365999,6.384949,4.520690,-7.052708,0.642952,2.444104,-5.795469,3.854181,0.594606,6.723175],[-2.973995,-0.772431,5.028720,3.849960,-7.910923,6.823797,5.870099,8.933994,-7.507240,-1.003874,-4.680585,3.301308,7.683754,-0.998144,2.975756,4.220133],[3.364059,3.475810,1.846322,9.270911,-4.792085,-6.877541,8.806856,-1.322738,-5.930355,-3.898233,-6.475284,9.381295,-4.723351,-1.589702,5.949649,7.341367],[6.561580,-0.079548,9.774931,0.360017,-4.656047,-1.448313,0.136793,-6.390992,0.226004,-4.259169,-8.826939,-5.382150,1.047511,-8.997118,-9.904211,1.838325],[-7.877804,-0.299164,-2.461937,5.866867,-4.116408,-6.183226,-6.506791,7.076955,3.986448,5.427401,7.425872,1.726304,-9.157336,-5.906930,8.194868,4.803873],[6.848520,-7.045096,5.732940,-7.829685,0.087711,6.171274,1.298462,1.885914,-9.924466,-0.836421,-7.212971,-2.932266,8.016089,1.907573,4.875919,9.558275]],[[4.666778,-4.170727,2.376227,-9.751628,6.689111,7.045560,-4.043710,-5.934516,0.333625,-1.247316,-0.008637,2.652373,0.864653,-7.562586,7.991413,4.066736],[4.069066,3.172063,6.093122,4.607759,4.743844,2.438044,-4.321914,-9.776015,4.466677,4.364814,3.906044,7.161647,-9.650387,3.583161,6.128457,-1.052437],[-2.898286,-1.284797,5.933080,0.867155,-3.963716,-0.928252,-1.138603,-0.394023,0.392913,4.062758,-5.908951,-1.909299,-0.144793,-4.533353,-0.814935,7.654504],[-5.704597,-5.528509,7.886647,-8.639331,2.656981,-4.193081,0.752082,4.122818,9.852009,-5.393639,0.011383,-3.844567,-8.875260,-8.677770,3.485293,-9.231757],[5.114704,9.463886,-4.734700,-7.031735,-0.599320,3.179597,1.180664,-0.853243,1.310405,7.634169,9.074359,-2.712088,-2.175988,1.866250,-0.121014,-6.433021],[-0.895378,9.641443,8.197943,-5.726745,-8.358347,-9.808673,-3.234889,-8.994795,8.174380,5.779000,1.189722,-8.737301,-9.454643,6.634841,6.022463,-3.185655],[6.188687,-9.148689,4.523163,-8.494940,-8.131451,5.523110,-7.064171,-2.057279,2.954085,-6.357121,-8.936999,9.634609,-5.321120,7.608542,-8.062819,-9.678991],[2.579848,-4.839920,5.335390,4.070697,4.873805,5.241841,-6.502536,0.622193,6.618502,2.112399,2.682564,-7.942650,2.866375,6.347924,5.908561,-2.709145],[4.625301,4.737637,0.301582,-2.570191,6.542399,-3.746601,-4.923020,-9.461753,-8.628986,6.399679,-2.807309,3.438129,6.545284,9.025547,-7.430716,-3.855563],[-3.540446,7.075468,-1.913376,1.579744,0.932690,5.983404,2.843279,1.471138,4.525754,7.222004,-7.157953,-1.694415,-8.733060,-5.366780,7.825342,-4.965572],[-7.345027,7.740066,2.592659,-3.495378,8.263223,-3.240979,0.242890,-4.151581,-2.232381,-9.364657,-7.331474,2.117148,-6.332050,-5.301376,-5.478832,-1.674905],[-6.447120,0.602131,-2.807975,-1.493692,5.486903,-1.498231,-7.391893,-7.980718,7.374538,1.293782,6.010980,-9.082165,-6.358774,3.193276,9.963299,1.562452],[5.202341,2.139526,-0.679367,8.076195,0.804810,4.096059,-6.387115,-7.629198,-9.967595,-1.813580,-3.418173,-1.244048,4.330382,6.505285,1.245374,-0.254276],[8.299060,-0.627224,9.120247,-2.363234,0.421491,-9.627245,2.134417,5.712069,-2.296631,1.308892,-3.357921,6.105339,0.118108,-6.889720,1.431740,7.754135]],[[2.763052,-0.589718,-5.162507,6.732006,-9.322265,5.487420,-5.832766,-8.523264,-0.101346,-8.917945,3.636933,-3.380159,-1.231090,0.195936,1.405965,4.619879],[-0.686174,6.198281,-8.667980,-6.048426,-2.147492,-9.319761,1.071432,0.468453,-7.530508,-3.940482,3.232293,-9.285630,-0.091032,0.330721,-6.313450,-6.319971],[6.146209,9.437290,-4.419954,-6.763028,-4.019338,6.195367,1.076234,5.705284,-7.293201,2.047788,4.775431,-2.378017,3.647601,9.919830,-6.727460,-3.738321],[-9.153176,2.427885,-3.836500,2.565840,-0.201583,-1.647065,-0.632632,8.329620,6.003263,-1.099763,-8.370142,-2.725015,1.471937,8.219587,8.985184,2.131091],[-5.670711,-9.785856,-6.904042,8.835134,3.421070,5.142542,4.318108,-6.139486,3.778558,2.692650,6.233163,-1.537542,-8.762816,-2.622059,8.831700,7.437358],[-1.306083,-3.988633,3.104171,5.851831,7.952859,-1.879771,1.151728,-9.475527,-6.769798,-5.948802,5.562395,-9.276526,0.905989,-0.453267,-2.608852,-5.705808],[2.909647,1.760291,-6.190707,6.993941,3.139353,-5.110478,7.737448,-3.903430,7.288825,1.648088,9.086780,-2.838528,2.163025,6.428691,-2.530239,-0.730491],[0.263071,-3.635329,0.192478,7.014857,-9.571330,0.567740,-3.220418,7.061104,3.511452,2.990174,-1.984412,4.793078,-5.008691,9.777767,-1.341714,-6.006195],[6.427606,3.534792,4.120053,-3.175308,-8.488194,8.292480,2.844193,-4.521202,3.796201,1.978171,7.259541,6.962717,9.522511,-2.666167,7.243351,2.655614],[-8.637033,6.816200,-8.677015,5.114363,9.287531,0.179775,0.854550,0.956857,7.052893,-0.799897,7.178307,-6.498173,-3.416563,-3.714358,-4.780216,-2.170225],[-5.984624,-4.569643,9.538849,-5.715127,-5.814904,3.021782,5.858331,-3.846271,6.424309,-9.816986,8.717846,-4.034761,4.147815,8.335658,-6.796063,-6.403726],[0.622862,5.857692,-4.515366,7.883878,-1.714550,-7.980094,-0.011261,-8.176030,5.070629,-6.204504,-1.402875,-2.028064,-4.408413,5.753949,-3.340334,6.879646],[-7.694246,-9.978977,-7.611401,3.210560,2.009841,7.792408,-0.882463,9.294530,-2.000923,-7.262930,-5.763251,-2.120637,-8.641875,-6.986599,-9.376896,-3.788624],[-6.144797,5.513762,8.959639,4.401997,4.503500,-2.422282,6.639913,0.682200,0.794592,-8.252577,4.156627,-4.385528,-5.563618,-5.414160,9.342981,9.559939]],[[9.137873,-4.575560,5.146655,8.796484,-4.526246,-7.085741,-6.611625,5.788711,-8.407803,3.499135,4.425262,0.925716,-6.161787,-9.263820,0.135081,-4.722746],[-9.978435,5.879220,-6.230018,-4.471241,-6.702638,-1.915681,2.917269,-6.109207,2.540477,7.658312,-8.779901,-1.258716,-2.504319,-6.192238,-9.731111,-2.598447],[6.656158,-3.389129,5.884608,0.497393,-2.334729,-3.765081,0.736230,0.496838,-8.947533,0.734371,9.513545,-4.191774,-4.838679,0.965115,5.355537,-4.300798],[2.621423,-4.168844,6.895387,-7.948163,-2.890468,8.610353,-1.873758,-2.205291,2.233840,1.079540,-1.397933,-2.451937,-0.041583,9.077185,-8.535937,-4.149523],[0.477075,-3.118233,-5.884092,-0.284273,6.506630,8.041604,-5.420427,-4.570172,1.394443,-1.436879,3.828403,9.010454,2.101408,5.003029,-4.807645,4.157474],[7.062650,-7.100400,4.122842,-9.010855,7.157668,-3.324009,3.813001,6.616351,-2.031387,-1.202482,1.763485,4.620455,2.933739,-5.158665,-0.404901,8.629158],[3.383655,-2.195272,-3.632487,7.125095,-1.279189,9.339196,-1.271664,-8.234267,-1.476413,3.212336,-9.013138,-2.239858,7.815195,7.959914,3.444451,0.922234],[4.249409,0.374532,-5.899223,2.483704,-7.833851,8.512664,0.974721,9.227098,-5.038202,4.472595,0.666314,-9.533751,-2.166219,-5.213004,-7.782172,-7.246429],[5.229097,2.198149,-5.916874,-4.244120,5.678089,-3.589479,-8.476753,3.015484,-5.623835,1.206782,-3.428818,-8.828941,-1.777531,-7.882554,0.628546,-7.676269],[-3.808882,-2.367963,-0.642729,1.223088,-5.198812,-8.279276,0.142847,-3.137857,7.706112,7.144771,8.220041,-8.565815,0.903506,0.408104,-9.543780,2.022300],[3.706884,2.491135,9.940489,-7.666475,-4.355183,-7.656836,-9.288921,1.428071,-1.987494,5.312011,7.157415,2.230361,7.890044,7.201208,-9.966313,-9.235903],[-3.295361,1.741658,7.350818,-4.439710,9.428775,4.663488,6.695173,3.474398,-4.530060,1.074946,-3.556030,-5.848323,7.552721,9.514547,-2.542958,-6.332549],[-0.605268,-1.999821,8.890586,7.393859,4.251697,-0.427674,-0.260787,9.003247,-3.499089,-4.080081,8.892663,-4.435781,-1.123875,7.055338,-5.649490,6.711501],[9.348865,-7.206075,-3.921228,9.829860,-4.611890,-3.132058,2.754357,9.544760,7.565428,1.688808,-2.804363,4.278654,5.543979,-5.724023,-5.210234,-9.918886]],[[6.443309,-6.310371,6.330053,-0.529866,2.348697,-1.234786,-2.383067,0.655347,6.975332,-5.651226,-6.521086,-9.154854,-5.817861,6.884986,-6.765665,9.277430],[-1.895497,-2.068033,8.047781,-4.781334,5.590057,-2.073509,-2.074004,8.725569,-8.723258,-3.889555,-3.153615,-1.553903,4.903382,9.384685,-8.876570,1.328263],[7.882477,-4.499777,-2.957600,5.298542,7.974586,2.181019,6.222683,5.582125,8.425208,0.357881,-5.144711,-9.007240,0.567526,7.069032,-9.187729,2.798321],[-8.647060,9.112298,-6.039617,3.349456,-4.225947,5.537878,7.450306,4.574298,-0.307787,-3.096574,-4.643483,-6.356313,1.897742,4.011962,7.603892,4.460501],[-0.971128,-0.987587,5.010047,-3.585432,7.161615,-7.188332,-6.832683,8.986022,-1.944108,0.787268,-2.984949,-2.912005,-0.376256,-9.934662,-3.110744,5.510576],[-9.157848,4.775175,0.048652,2.353878,-8.025986,-4.429069,0.808555,1.652217,8.657440,-3.494373,2.189028,6.423684,8.342663,1.725863,0.260191,-9.595481],[-7.078618,-4.733073,-8.926974,-9.736081,5.295389,2.832560,-8.277692,-5.060142,-4.599390,-4.061339,0.594855,1.416081,3.382041,3.714002,3.100945,-8.528792],[3.661832,-9.069270,-7.092841,-4.231967,9.341577,-6.533921,9.989382,7.071670,1.438490,1.843330,-6.620736,4.958427,7.756703,-5.320395,5.536241,-0.904493],[9.511659,-4.246145,-5.199967,6.222979,-7.344857,9.189295,-4.551806,9.380534,-6.761286,5.829881,3.597416,-6.929129,8.497495,-7.021646,9.180962,5.820013],[3.508785,-0.533505,8.912683,0.250578,5.624092,1.020888,9.129499,-0.467282,2.215324,-9.552580,-5.502050,4.486675,-8.809686,-9.387210,-9.076850,-2.801859],[4.944515,6.267721,6.867167,8.821060,-2.195459,-6.157854,8.310548,6.130061,-9.320362,-5.649231,9.461456,-5.745417,9.734133,4.155355,6.013055,5.960777],[9.715951,7.535984,8.335851,5.377804,7.629320,0.264720,-5.023825,0.069046,4.887893,-2.862071,6.497642,-3.413304,2.281275,-0.841066,0.808589,-8.207749],[8.596051,0.486436,-5.466361,-8.601813,8.768036,-9.602526,-8.370742,-8.623743,1.787645,-9.995484,-1.694840,8.107938,5.712926,-9.139836,6.240718,8.515563],[-2.812662,2.978492,3.546243,-8.579683,-9.536402,2.548212,-6.832737,-6.720069,-5.014509,-5.154282,2.746204,-1.232113,5.027189,8.253872,5.061030,6.505584]],[[-0.404851,-0.377761,-3.644894,-9.311178,-9.911944,-0.027689,4.487932,-1.271726,1.798035,-4.050094,7.371635,0.225354,7.414359,0.659657,1.788348,-0.299165],[-3.147760,-9.772527,0.891525,7.123988,-7.017468,-7.425912,-3.134367,4.139611,1.261339,-3.279423,-2.139691,-2.932990,-7.063069,8.217263,-7.380373,1.700317],[-2.408422,-6.515838,-2.863306,5.507679,4.539631,0.823693,7.015035,2.223017,-9.599451,8.713054,-6.387043,2.782899,2.810687,-7.362877,-1.396919,-7.427632],[5.686303,4.102475,-2.801359,-5.549125,-3.506270,1.575630,-8.677045,8.579155,-6.508846,-8.954569,-0.872810,-2.914908,-8.196284,2.734866,-5.625771,4.017584],[-5.070447,-6.243498,-8.862544,-9.367633,-8.121419,-0.017191,9.786134,0.587784,-1.312707,-7.635326,8.555221,-4.787355,5.527574,3.858974,-8.526963,-6.586531],[9.899353,1.868962,1.550069,-5.720865,-9.315074,9.526730,-1.763372,2.691968,-8.390733,1.907590,-0.005246,2.852712,-2.585314,-1.344862,9.915180,6.080386],[7.741655,-2.391822,1.251541,-7.655243,4.376254,8.398819,-3.886206,-4.648358,-5.512579,9.515066,-8.263744,-4.838500,8.342063,8.141549,7.353579,7.395844],[7.106015,-5.504115,-7.243558,-6.185833,-3.784591,-4.110965,6.741513,0.377073,-6.291056,-4.981696,3.319661,5.355226,5.209404,2.189402,-0.765000,2.399499],[6.763657,-2.977909,-6.639294,7.240980,-5.111805,-7.169330,6.618935,4.854190,-8.868067,-8.059562,-6.333888,-3.712322,-0.475733,6.719862,-0.807433,-0.452600],[-3.997430,1.962868,-1.447192,9.129928,-6.229398,-2.626256,4.437605,-0.859084,5.763850,2.473828,-7.718153,-2.173021,3.886701,2.764861,-5.968415,6.486479],[-4.865791,-0.002815,-6.467576,8.537455,2.081664,-3.306973,9.358939,-2.194782,1.895153,9.393867,1.883501,-0.092121,7.242294,-1.103364,9.905915,-7.463294],[-6.333391,-1.095927,-1.290001,-2.840138,8.227996,-4.658991,6.278472,-8.202580,-7.038821,-4.884162,8.725982,-5.308804,4.792366,-3.812136,2.943567,-3.545366],[9.033651,-4.824535,0.919358,5.711582,4.861740,4.502831,-5.205916,2.816975,0.286297,-7.484043,-2.006862,7.160834,2.228828,-3.702916,-8.001978,0.037793],[-4.008734,3.937065,-4.100035,-8.358069,-0.355731,-8.517262,9.352537,0.037433,2.579164,0.960202,9.514942,4.320703,9.033773,7.167566,6.963136,3.346363]],[[-1.441838,9.986413,-8.964009,-2.575408,9.917012,5.934452,-5.824305,-7.124950,2.485687,4.078675,-0.457016,6.339682,-6.010911,-7.491988,7.912875,2.006074],[-7.993581,-9.371396,5.398519,-6.569692,9.838085,6.044920,-8.678665,-0.130308,-9.981513,-7.225140,-2.120895,-2.332743,-3.989563,-8.997779,-8.823750,3.228745],[-2.787912,9.304062,-0.323440,7.541829,-0.021260,8.912063,-5.820221,-4.475409,8.366545,5.010293,-4.127073,5.479544,-8.436493,9.909271,4.513201,-4.005671],[-6.912612,9.849214,0.668782,8.017989,-1.876162,-2.531073,-2.777681,9.647437,-9.482763,9.297463,-1.701199,1.803332,1.793989,6.763476,-8.915418,-8.686989],[-3.230470,9.021485,-2.914878,8.266757,-5.521997,3.105829,-5.642936,-9.941168,-7.729505,2.994856,-9.798007,4.853173,5.221933,9.889296,-5.297652,3.737708],[3.231933,-8.111154,7.518694,-4.497622,-6.191073,-9.935787,-5.705440,5.065471,-3.324793,5.308391,9.086921,-9.786410,-8.716160,-8.620071,-3.818415,2.863765],[0.613365,2.955913,9.713913,-3.722819,-3.138107,-1.254544,4.913923,1.044892,-9.564166,6.877474,7.988845,9.424568,7.957688,0.341802,7.632245,1.414135],[-7.105498,1.944979,6.023330,9.063313,-7.039360,-1.793785,4.716180,6.533291,8.887831,-8.302651,3.184112,-7.985420,7.977870,-6.266099,-1.987144,6.876795],[-1.137832,-2.509613,-1.361593,5.980584,0.084133,6.001945,3.869958,-1.342134,4.949714,-5.477520,-5.079031,3.210821,-0.408018,-1.188722,6.963882,3.416411],[-0.526059,6.175518,-0.924771,2.651170,9.672892,-4.160276,-8.514177,7.987644,6.555723,-2.879829,-1.102175,-8.029689,3.971635,4.151003,-4.239746,-7.471207],[-8.900761,-1.957497,8.713419,-5.606999,-3.169734,7.626996,6.089382,-4.703637,-9.711631,8.781332,-3.479996,8.193638,-9.832471,-6.239638,-3.923994,-3.661947],[5.529502,3.214227,-2.832403,3.228452,-0.842407,8.596998,5.577982,7.892756,-9.602549,-9.762869,-9.485349,-7.298808,-0.679253,5.075887,-1.610716,1.338498],[-8.544510,-0.966906,-2.801525,3.185277,-9.175434,-1.427942,-6.514663,-4.949781,-6.221653,3.394924,-0.638059,-2.492752,8.181641,2.029737,9.477608,9.733420],[1.603192,-7.688401,1.334948,5.064505,3.525984,4.016435,3.554745,-2.927699,-7.782630,-4.900198,-4.069471,2.896266,-6.963012,0.479734,3.990768,-2.005282]]], dtype = "float64")#candidate|991|(14, 14, 16)|const|float64
uop_992 = relay.cos(const_991.astype('float64')) # shape=(14, 14, 16)
bop_995 = relay.left_shift(const_991.astype('uint64'), relay.reshape(uop_992.astype('uint64'), relay.shape_of(const_991))) # shape=(14, 14, 16)
output = relay.Tuple([bop_995,])
output2 = relay.Tuple([bop_995,])
func_1003 = relay.Function([], output)
mod['func_1003'] = func_1003
mod = relay.transform.InferType()(mod)
mutated_mod['func_1003'] = func_1003
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1003_call = mutated_mod.get_global_var('func_1003')
call_1004 = func_1003_call()
output = call_1004
func_1005 = relay.Function([], output)
mutated_mod['func_1005'] = func_1005
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1003_call = mod.get_global_var('func_1003')
func_1005_call = mutated_mod.get_global_var('func_1005')
call_1006 = relay.TupleGetItem(func_1003_call(), 0)
call_1007 = relay.TupleGetItem(func_1005_call(), 0)
func_755_call = mod.get_global_var('func_755')
func_758_call = mutated_mod.get_global_var('func_758')
var_1023 = relay.var("var_1023", dtype = "uint16", shape = (1664,))#candidate|1023|(1664,)|var|uint16
call_1022 = func_755_call(relay.reshape(var_1023.astype('uint16'), [16, 13, 8]))
call_1024 = func_755_call(relay.reshape(var_1023.astype('uint16'), [16, 13, 8]))
const_1029 = relay.const([-8,8,-6,-1,4,-5,6,-2,4,-7,-10,3,7,5,10,7,-2,9,-9,-8,-4,-8,5,-9,1,8,-4,3,-8,-3,-4,6,5,-6,6,9,-9,2,-7,2,7,-7,-2,-6,1,-9,-10,-2,8,1,-4,-6,9,6,9,4,-8,10,-5,10,-6,10,-4,2,2,8,8,-8,1,5,-10,9,1,-9,6,2,-10,7,-7,-8,6,3,-1,1,5,-4,-4,-4,-2,3,4,-7,10,-10,7,-3,3,7,9,8,5,-10,6,-7,-10,-6,6,9,-9,2,-7,9,3,6,5,9,-7,-10,-4,1,7,-8,-1,10,8,-6,-9,6,10,-5,7,6,2,7,2,1,5,4,-8,6,6,-10,-6,6,-10,10,4,1,9,-3,-8,-2,-4,9,-1,-8,6,2,4,-5,-9,-10,-10,-1,1,-1,8,9,10,-4,2,5,-9,9,5,8,8,8,-10,-6,3,-9,-1,-5,-8,-1,2,-8,5,4,1,5,-9,9,2,-2,5,9,10,8,-4,10,-4,-5,-6,-8,-1,8,8,1,3,6,-3,-5,-9,-2,-1,-7,1,-6,2,-7,1,-5,3,6,9,5,6,-6,-4,-8,-3,3,-8,4,-5,5,6,-2,5,-6,-3,-6,-2,6,3,2,8,9,-4,-5,3,6,1,-8,-9,1,-7,1,-1,9,10,7,9,-3,10,4,10,-3,-10,-7,7,-9,7,6,-6,10,-6,-5,7,-8,7,-2,-1,-10,-8,-10,-7,9,-10,1,-8,3,10,-9,-7,5,10,-5,-4,4,3,7,2,5,-9,-9,9,-4,-9,7,-1,-1,2,2,10,8,-9,-7,-8,-4,-1,7,4,-1,4,2,-10,6,9,-8,5,6,8,6,6,-5,4,8,-3,4,7,-3,-9,9,-9,6,-2,8,6,7,6,10,6,-10,5,4,-10,-8,-6,-4,5,-8,4,10,2,3,-1,-9,-9,6,5,-7,-9,-1,-4,-1,-6,-10,5,-2,9,-4,-6,-9,-4,-10,-7,1,2,10,-6,6,9,2,-8,-8,10,7,-5,-1,-1,5,6,3,-7,-5,-3,-4,-1,-4,-1,-3,-4,-6,-7,9,8,6,-1,3,4,-10,-2,-1,3,9,-10,6,5,7,1,-9,-10,-4,-8,1,-6,10,7,1,9,-5,-4,-4,-5,10,7,-4,8,9,4,7,3,9,9,2,-2,8,10,-7,-3,2,8,-6,-3,-4,5,8,-1,7,-7,-9,-8,6,-8,-4,2,2,1,8,-5,10,6,-7,2,-8,-5,-9,3,-10,10,6,9,2,8,-3,-4,2,-10,6,4,-3,8,-1,-9,6,4,-1,-9,-2,-5,-7,-7,-9,-9,9,7,-2,5,-8,4,-6,-5,9,2,-9,6,5,7,10,-7,1,4,8,7,-6,1,9,-8,8,-2,6,4,-3,5,9,6,-7,3,10,3,-3,5,-10,2,5,-4,-6,-4,9,4,-3,-8,-9,-8,-9,2,-7,3,3,5,1,-1,-8,-6,4,7,-8,-2,3,5,-2,5,-7,-9,6,-8,-1,-6,2,8,-1,7,-7,8,8,-4,-2,2,-9,-10,2,4,7,-4,9,8,4,-9,4,-3,-3,-3,-7,-4,5,-1,-2,-4,-4,-9,-10,-5,2,-7,3,9,8,9,-8,-2,-9,-1,10,1,4,9,8,-10,7,-9,7,6,-9,-1,-10,-9,7,-1,7,-1,3,-7,-3,3,4,2,-7,9,5,-2,-4,-5,3,8,-7,3,10,-3,8,-2,-8,-8,-3,3,-10,3,8,-6,4,-2,-4,3,8,-6,-3,-3,-3,8,-9,-5,7,-4,6,7,6,2,-6,-6,2,3,10,-4,6,-10,2,5,-3,-4,8,2,-1,-4,1,3,1,9,-1,-4,-7,-1,10,-10,-4,-6,8,-4,2,7,-9,-7,6,10,8,-4,10,6,3,7,-10,10,8,-6,4,-4,-4,3,-6,9,9,-1,-1,3,2,-1,-2,10,-7,-10,10,3,-6,3,-1,10,-8,-3,9,-4,5,-5,6,-6,-10,3,-4,-3,7,4,10,10,-6,-6,-8,-8,-6,1,-8,7,7,9,10,-2,2,5,-4,10,7,-7,-6,9,9,6,-10,9,-4,-9,-2,1,10,6,8,-4,-1,9,7,1,-9,7,-1,7,5,-2,-8,1,-9,-10,2,-4,-4,-2,3,10,4,9,2,-3,-1,-3,9,5,-8,7,-10,5,-3,6,2,-8,-3,-2,-5,1,-1,5,8,-8,-6,6,-7,9,-8,6,2,6,2,-8,4,-3,4,5,-7,-8,-9,10,-7,-5,-5,-5,-6,-10,-1,-5,10,8,-5,5,7,6,10,-1,6,-4,-7,-8,1,1,-8,7,-4,3,-9,3,4,1,7,2,7,2,4,9,10,7,6,-8,-8,-2,-1,-4,-6,10,-6,5,-8,-7,9,-8,-6,6,9,-6,7,6,3,-3,-5,-2,-5,4,6,-4,7,-3,-8,-9,-7,6,1,1,3,4,-5,1,-5,-3,-6,5,10,-10,-1,5,-2,-1,6,10,4,-9,2,10,5,-6,2,-6,-3,1,5,-1,1,-1,-4,6,7,-8,5,4,-3,1,-6,-8,-5,-3,6,-7,-8,2,1,9,-5,-7,-8,10,-3,-7,-10,-10,-3,-5,-8,4,5,7,5,-4,-4,-1,-3,-4,-2,7,-7,6,9,10,6,-3,-1,-6,6,-7,10,3,-8,10,-1,1,4,-9,-1,-10,3,5,-4,10,-1,-10,-6,-4,3,6,3,-3,7,1,1,4,-5,-7,9,10,-6,-5,-5,-7,-5,4,2,-6,-9,6,8,-3,-8,3,10,1,4,-8,-5,1,10,9,-5,3,-9,6,-9,-10,1,-6,7,-7,-3,1,-10,9,10,-1,10,8,5,5,-5,10,-8,-7,8,-7,-8,9,3,-7,-6,7,-4,-5,1,2,-7,-3,1,-2,-5,9,9,1,-8,4,-9,-1,-10,-2,8,-8,-6,-4,5,7,-6,5,-6,7,5,9,-6,8,1,-6,2,6,9,9,5,-5,-2,-6,7,4,9,-7,-6,-1,-5,-5,-3,6,-10,-5,1,-8,8,-9,9,8,-7,-3,10,-1,10,-1,-7,-4,-4,-6,9,-5,-7,-2,10,-6,-7,-1,2,-1,7,7,10,3,-2,-6,2,-8,8,7,1,4,-2,-4,-6,-9,6,-7,1,10,-10,2,10,2,1,-5,-1,-8,-3,-7,7,1,4,-2,1,-8,-2,4,-2,9,4,-6,2,-7,-8,3,-2,1,-6,3,-8,-10,-3,2,1,-9,-7,3,8,-2,6,-4,-4,6,-1,-9,10,-9,6,-6,-7,3,1,1,5,8,3,-10,8,-6,5,-7,-7,-5,10,-1,8,8,1,9,-5,9,-8,4,7,2,-7,6,-7,-8,-4,-3,2,-4,-3,1,1,-5,-9,4,8,7,-6,1,3,10,8,-10,7,5,6,-9,6,-5,-4,10,-6,9,-7,5,2,7,-1,2,10,9,3,-4,-3,-3,-7,-2,7,5,4,6,-5,5,8,3,7,6,1,9,1,2,-5,1,6,8,7,-5,6,10,9,4,5,-6,-1,10,-10,-10,-7,-9,-8,-4,-2,9,10,2,3,7,-7,4,-9,2,9,4,-6,10,1,-10,2,9,-7,3,-8,-7,3,-6,8,-4,1,-4,3,2,-7,-7,10,-2,8,6,-6,-10,6,3,-4,-2,9,4,9,7,6,6,-9,-4,4,2,5,-8,8,7,-2,-8,7,2,8,4,3,-10,8,1,4,-9,5,-1,3,-4,-9,6,4,3,-7,-6,9,-5,9,-7,9,-5,-7,5,6,-5,-2,2,8,8,2,-8,-9,8,-10,5,2,4,-6,-9,10,9,4,-10,7,-8,3,2,2,1,4,3,-6,7,-6,8,2,-8,9,9,-7,4,6,1,5,-9,-10,9,9,-1,6,-1,-5,7,8,-9,-4,4,-1,7,8,9,8,5,-5,2,-6,-10,-3,-4,-2,5,-7,7,5,6,-9,3,-2,-7,-5,-8,4,-3,-4,8,-1,3,4,-8,3,-2,10,2,-4,-10,-1,-1,6,-2,2,-10,4,2,5,-7,-5,-1,-4,6,-5,8,-5,-9,-6,5,2,2,-1,4,-6,2,-1,6,-9,5,9,8,-6,-6,1,-10,-9,8,7,-3,4,4,-10,1,1,3,-1,5,-1,10,4,-4,-2,-2,4,-2,1,-4,-6,-4,2,8,-10,3,-6,3,4,-3,-10,5,-10,-2,5,-4,10,-8,5,8,-1,-9,3,-6,-9,-3,-6,5,-7,7,-5,-3,-8,9,-8,-1,5,5,3,-5,10,3,8,2,-5,9,9,-6,6,-4,-10,3,-6,5,10,4,-10], dtype = "uint16")#candidate|1029|(1664,)|const|uint16
bop_1030 = relay.multiply(var_1023.astype('float64'), relay.reshape(const_1029.astype('float64'), relay.shape_of(var_1023))) # shape=(1664,)
output = relay.Tuple([call_1006,call_1022,bop_1030,])
output2 = relay.Tuple([call_1007,call_1024,bop_1030,])
func_1034 = relay.Function([var_1023,], output)
mod['func_1034'] = func_1034
mod = relay.transform.InferType()(mod)
var_1035 = relay.var("var_1035", dtype = "uint16", shape = (1664,))#candidate|1035|(1664,)|var|uint16
output = func_1034(var_1035)
func_1036 = relay.Function([var_1035], output)
mutated_mod['func_1036'] = func_1036
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1003_call = mod.get_global_var('func_1003')
func_1005_call = mutated_mod.get_global_var('func_1005')
call_1109 = relay.TupleGetItem(func_1003_call(), 0)
call_1110 = relay.TupleGetItem(func_1005_call(), 0)
output = call_1109
output2 = call_1110
func_1126 = relay.Function([], output)
mod['func_1126'] = func_1126
mod = relay.transform.InferType()(mod)
output = func_1126()
func_1127 = relay.Function([], output)
mutated_mod['func_1127'] = func_1127
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1003_call = mod.get_global_var('func_1003')
func_1005_call = mutated_mod.get_global_var('func_1005')
call_1142 = relay.TupleGetItem(func_1003_call(), 0)
call_1143 = relay.TupleGetItem(func_1005_call(), 0)
func_1126_call = mod.get_global_var('func_1126')
func_1127_call = mutated_mod.get_global_var('func_1127')
call_1159 = func_1126_call()
call_1160 = func_1126_call()
output = relay.Tuple([call_1142,call_1159,])
output2 = relay.Tuple([call_1143,call_1160,])
func_1166 = relay.Function([], output)
mod['func_1166'] = func_1166
mod = relay.transform.InferType()(mod)
mutated_mod['func_1166'] = func_1166
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1166_call = mutated_mod.get_global_var('func_1166')
call_1167 = func_1166_call()
output = call_1167
func_1168 = relay.Function([], output)
mutated_mod['func_1168'] = func_1168
mutated_mod = relay.transform.InferType()(mutated_mod)
var_1171 = relay.var("var_1171", dtype = "float32", shape = (13, 14, 9))#candidate|1171|(13, 14, 9)|var|float32
uop_1172 = relay.sqrt(var_1171.astype('float32')) # shape=(13, 14, 9)
uop_1181 = relay.erf(uop_1172.astype('float32')) # shape=(13, 14, 9)
uop_1193 = relay.log2(uop_1181.astype('float64')) # shape=(13, 14, 9)
func_755_call = mod.get_global_var('func_755')
func_758_call = mutated_mod.get_global_var('func_758')
const_1211 = relay.const([-1,-4,5,1,-2,2,-1,-3,10,-1,-4,-6,6,3,-9,3,-7,1,6,-2,3,2,-6,-1,2,1,-8,2,9,3,8,-7,6,4,2,-2,9,2,-8,-2,-6,10,-4,-9,10,8,-9,-2,7,-7,-4,-5,-3,-10,2,5,7,-4,-10,3,-5,9,-9,1,8,4,-8,-9,-8,4,-1,7,-6,10,-4,-7,3,4,-8,-8,2,-2,-3,-1,-10,-8,-4,10,8,10,-2,-10,5,-6,7,-1,6,-9,-4,9,-3,-4,3,-1,-3,-10,7,1,4,-5,3,-9,-3,9,7,3,4,1,3,-8,-10,-1,-8,9,2,-2,3,-4,-8,-4,-9,-6,-6,2,-8,4,-9,-5,9,-1,-1,6,4,2,2,-8,-5,-8,3,8,8,-9,1,6,-9,1,-1,6,8,9,6,-3,-6,-1,10,-8,1,7,-3,-4,-1,-4,3,-8,-10,2,-6,6,-7,1,-6,6,-8,9,-6,-4,7,9,-8,2,-8,5,-9,-8,-7,4,7,1,2,5,-5,5,6,4,5,-3,10,6,8,6,2,9,9,-5,9,9,8,6,9,8,-5,8,-1,-7,-10,-4,-4,-2,-2,3,6,5,-5,-5,-2,2,-6,-5,5,-5,6,7,-4,-10,-5,-10,-5,2,8,8,-2,1,1,4,9,-2,9,-2,10,1,-7,6,-6,3,8,5,-2,-10,4,8,1,6,-1,5,2,-7,-7,-10,3,-8,-5,-5,-1,9,-6,9,-8,1,5,9,4,-8,-10,5,-2,-6,-7,-5,3,6,-2,9,1,-9,6,6,5,10,-2,9,-9,2,-6,-4,2,10,-4,4,-1,-4,3,8,3,1,4,-1,5,-6,-2,-1,2,-8,2,-4,7,1,-7,5,-6,9,-8,-10,-6,3,-1,-2,-6,9,-2,-1,10,-8,1,-1,2,7,-10,3,5,2,10,7,4,-4,-3,-7,8,-2,-1,-6,-10,-10,-9,-6,9,-8,-4,5,-5,6,7,-10,1,6,4,-4,2,-7,-9,5,3,-8,-2,-6,-3,6,-10,-7,-8,-4,2,1,1,6,2,-9,7,-5,10,8,6,5,10,-8,2,3,7,1,3,-10,-9,4,-6,-6,10,2,-8,1,-9,-8,-10,-7,6,-7,-5,6,7,3,8,-4,5,-4,2,-1,-6,-2,-2,3,6,7,-6,7,-4,1,-2,-10,-8,10,-2,9,-1,-2,1,-9,3,10,2,7,10,9,10,6,4,9,6,3,10,-10,-1,8,6,5,7,-3,-9,-6,-2,10,10,-3,7,6,1,10,5,-4,-6,-9,3,10,2,3,-10,-1,10,7,-10,-9,-8,-1,-7,-2,-5,5,-2,-2,-1,-10,7,1,5,-7,10,-4,-4,-9,-1,5,-3,6,5,2,2,-9,5,-6,-6,7,-10,-4,7,7,-8,4,3,9,-5,-6,-4,5,2,2,-4,-6,10,-1,5,3,-10,-7,6,-1,-6,7,1,-1,-3,3,-4,4,-10,10,-4,-1,1,-7,3,-9,6,-10,8,-10,-8,10,1,-5,10,-8,-2,9,6,-2,6,7,7,-9,-1,-10,3,1,6,6,-5,10,-5,3,-7,-2,8,6,-9,4,5,8,-4,3,7,5,6,-1,8,-4,-1,-7,6,-6,-10,6,4,3,-5,7,-6,5,-10,4,-10,-3,5,-10,5,7,-8,-1,6,-8,10,4,10,9,6,7,2,-7,-4,-9,6,-4,-6,5,-9,-3,-10,7,6,1,-1,-8,-10,1,5,-3,-5,-3,4,-5,3,-3,4,-5,8,-2,6,-4,-6,-10,-7,10,-2,5,3,8,-7,-2,-3,-3,5,-1,-5,9,4,-2,4,4,-7,1,-8,-9,-4,-10,-2,-9,8,9,-9,-5,-8,3,-1,8,-6,9,2,1,-10,2,-1,8,4,-3,6,5,6,-5,-5,-4,-6,4,-2,-3,-3,-4,-9,-6,-2,4,-8,1,7,9,-1,-2,6,6,-9,2,-7,8,1,-6,4,10,-1,4,-8,-9,-5,-7,-6,-9,-1,7,-7,3,1,-2,1,5,-2,-1,1,1,-2,-7,9,-3,8,10,7,5,3,4,-9,8,-9,2,-1,-6,-1,-1,-10,5,-4,-5,-6,-2,-8,-5,-5,-10,1,6,7,7,6,10,-2,-6,-8,1,1,-5,10,-10,2,-1,2,-7,9,6,-3,9,-1,-4,-6,-5,8,10,3,-3,7,-9,9,-9,1,-2,-2,-2,8,4,-10,-2,2,-4,-1,-9,9,9,-6,-8,4,3,-3,-10,10,-4,4,9,-10,-8,-10,-1,-7,-8,-1,-1,-6,-2,1,9,-8,2,-1,-6,1,-1,-3,1,3,2,-6,10,7,-9,5,-10,3,5,-10,-2,-6,-4,-5,6,2,3,-9,10,-4,6,8,-2,-5,-4,9,8,1,2,-4,-4,-4,-6,10,3,-6,-3,5,5,4,5,-5,7,-4,2,7,6,-4,8,-8,-10,-10,-9,10,-4,-3,-10,-1,-4,7,-3,-3,10,3,3,-9,-8,-6,3,-2,4,6,-4,2,2,-6,-8,5,-8,5,10,4,2,-4,8,2,1,-6,4,5,-9,-2,3,2,4,5,-1,1,-9,-10,10,6,9,6,-10,-9,5,-4,7,-10,-5,-6,-1,10,3,-8,-2,-4,-8,4,5,-7,-7,7,-8,6,1,10,10,-4,1,-5,6,-6,2,-2,-5,7,1,5,-10,-5,-4,5,-6,-4,10,-2,1,-3,-9,-9,-8,-6,10,-10,-4,-3,1,-2,-8,-6,8,-9,7,3,8,10,-8,-5,-10,1,2,-6,-2,2,7,-10,-5,5,10,-5,9,4,-4,8,-6,1,2,10,4,-4,9,7,1,-5,-1,9,8,9,-2,7,3,5,3,-9,-7,-9,7,10,1,10,6,4,-5,-7,8,-5,9,-6,7,-1,-8,-3,-8,6,-8,3,-8,-9,8,9,9,-8,-6,-3,10,1,6,-7,-7,-6,-9,-1,6,9,-8,-1,-4,7,3,-5,6,5,10,-6,4,1,1,-2,4,2,-2,10,1,-8,-1,-1,10,7,-5,6,5,3,-9,-4,8,6,-8,-8,8,-5,-10,4,-10,8,3,7,1,-5,-6,-5,6,6,2,5,9,-6,6,-9,-2,6,-2,7,-4,6,-3,6,-4,3,8,5,8,8,-5,2,3,5,10,1,-6,4,9,9,4,-9,-10,10,8,-3,5,2,-3,3,9,-5,-10,4,-1,-3,7,-5,-10,8,-5,3,-4,7,-2,-1,6,-5,7,8,-6,-10,6,-1,-4,-6,-10,8,4,3,8,4,-10,-2,2,-4,2,-1,-1,5,-3,-4,-10,7,10,7,-4,1,3,10,3,2,-7,-4,-7,-6,9,-3,6,2,-2,3,-1,-7,-8,-10,10,-6,6,9,-8,6,-7,-8,-1,-9,1,-6,-4,9,-1,-3,-2,1,-9,-3,-5,8,-8,-7,9,1,-5,4,-1,3,1,-2,-5,3,3,-2,-5,-2,-7,3,2,5,2,-1,2,4,2,-8,-10,2,9,2,6,-10,-3,-10,8,4,-7,-2,1,-4,-1,-1,-7,4,8,-1,-2,-7,5,-9,5,2,2,-2,-9,7,3,1,-10,-6,-3,-3,10,-9,1,8,5,9,6,-2,10,-7,7,2,4,-6,-9,-3,2,3,-4,-9,-5,-6,-10,7,8,-10,3,2,2,-6,10,-9,5,-6,-5,8,1,-10,-4,10,1,7,-4,1,9,-8,-9,9,-10,-3,-10,-4,6,-4,1,4,-6,5,-10,-7,-4,-7,-3,-6,-3,-8,1,6,8,-2,3,-2,-5,-10,-3,-5,1,9,10,7,-8,6,8,9,-3,-6,4,-7,5,7,2,5,4,7,1,7,8,-9,7,-2,-10,7,6,-7,9,1,6,7,9,-3,-10,2,-4,-4,-10,9,5,-5,10,-4,-6,4,-10,-9,7,-1,-2,6,-3,-7,9,4,4,6,1,-6,-2,8,-1,1,9,-6,-5,7,5,3,-9,-7,-8,6,-3,-8,-3,9,1,4,3,1,4,-8,-1,2,-1,3,-4,-1,-3,3,3,-10,3,-6,-5,4,6,-6,-6,5,9,-7,8,1,-4,7,-6,4,2,6,9,-5,-6,2,-3,-9,6,7,-3,5,-3,-7,-1,10,2,-9,8,8,6,5,-8,4,-2,7,-9,5,7,3,-4,1,3,-1,-5,6,-8,3,-7,9,5,-7,10,-8,-5,-5,6,-6,-6,-9,-5,-2,-7,-10,-1,-6,-7,-3,-4,-4,-2,7,-4,8,-10,-1,-3,10,10,-4,1,9,10,6,3,-2,-10,-4,4,6,-10,-10,2,10,-2,-4,4,-4,7,10,-2,6,3,-8,-3,-10,-9,-5,2,2,-2,8,10,-2,-2], dtype = "uint16")#candidate|1211|(1664,)|const|uint16
call_1210 = func_755_call(relay.reshape(const_1211.astype('uint16'), [16, 13, 8]))
call_1212 = func_755_call(relay.reshape(const_1211.astype('uint16'), [16, 13, 8]))
uop_1213 = relay.log10(uop_1172.astype('float64')) # shape=(13, 14, 9)
bop_1216 = relay.equal(uop_1213.astype('bool'), relay.reshape(uop_1181.astype('bool'), relay.shape_of(uop_1213))) # shape=(13, 14, 9)
output = relay.Tuple([uop_1193,call_1210,const_1211,bop_1216,])
output2 = relay.Tuple([uop_1193,call_1212,const_1211,bop_1216,])
func_1220 = relay.Function([var_1171,], output)
mod['func_1220'] = func_1220
mod = relay.transform.InferType()(mod)
mutated_mod['func_1220'] = func_1220
mutated_mod = relay.transform.InferType()(mutated_mod)
var_1221 = relay.var("var_1221", dtype = "float32", shape = (13, 14, 9))#candidate|1221|(13, 14, 9)|var|float32
func_1220_call = mutated_mod.get_global_var('func_1220')
call_1222 = func_1220_call(var_1221)
output = call_1222
func_1223 = relay.Function([var_1221], output)
mutated_mod['func_1223'] = func_1223
mutated_mod = relay.transform.InferType()(mutated_mod)
var_1242 = relay.var("var_1242", dtype = "float32", shape = (8, 6, 2))#candidate|1242|(8, 6, 2)|var|float32
uop_1243 = relay.acos(var_1242.astype('float32')) # shape=(8, 6, 2)
output = uop_1243
output2 = uop_1243
func_1251 = relay.Function([var_1242,], output)
mod['func_1251'] = func_1251
mod = relay.transform.InferType()(mod)
mutated_mod['func_1251'] = func_1251
mutated_mod = relay.transform.InferType()(mutated_mod)
var_1252 = relay.var("var_1252", dtype = "float32", shape = (8, 6, 2))#candidate|1252|(8, 6, 2)|var|float32
func_1251_call = mutated_mod.get_global_var('func_1251')
call_1253 = func_1251_call(var_1252)
output = call_1253
func_1254 = relay.Function([var_1252], output)
mutated_mod['func_1254'] = func_1254
mutated_mod = relay.transform.InferType()(mutated_mod)
const_1296 = relay.const([[[-1.477409,6.230819,-9.837139,5.916886,9.524675,3.224446,-7.831301,-9.259874,-6.038673,-2.655423,0.086292,-2.751364],[-9.318037,-0.683361,-4.128112,0.111970,1.772266,-2.800954,-6.090439,2.537932,3.214634,5.336693,5.829818,-5.923764],[2.023949,7.821040,-4.797767,-8.137198,-2.501312,1.465992,-1.321042,-4.099362,8.875210,-2.472632,-2.578436,6.088162],[-4.265641,3.431554,-8.355306,0.929531,0.914327,9.247976,7.840132,-9.649384,-8.199224,-5.490748,6.367124,9.561289],[8.904379,-5.697611,3.690600,-0.241579,8.148773,1.553564,1.203167,5.928308,7.554388,-4.359651,-1.674768,6.037936],[-3.293059,-1.160756,-8.101287,5.366655,5.546789,1.237363,3.186912,-8.151510,-8.461470,3.136389,-6.365528,-7.542072],[3.079742,-0.706540,3.781833,-6.326896,9.862064,0.883718,-3.432971,-2.491335,6.965021,-1.511207,1.392182,7.253269],[-3.166606,2.177504,8.424571,7.098813,9.928392,-0.823559,5.546955,-3.833825,2.268654,-7.327473,-6.790156,9.192872],[-8.608948,0.216681,-0.267721,8.925246,0.067389,-5.259994,-3.828008,9.926749,4.582126,0.144864,-4.727582,-5.980469],[5.222564,-3.596568,9.954093,0.947748,4.694205,2.038873,0.849746,8.628536,7.970773,9.325878,3.611363,6.623730],[2.943071,0.757693,3.182121,8.927306,-8.305513,-7.996763,-8.393734,2.669908,-9.239479,7.191363,-2.060931,-9.211273],[-9.860776,9.021014,-5.124229,3.928667,9.922473,-6.988197,-6.750383,-1.088346,4.440454,-0.639420,-7.686005,1.203436]],[[-6.527911,2.520691,1.729405,-1.490018,0.501467,7.521736,0.745986,6.120325,9.176809,7.684256,-7.738991,-4.203661],[-4.700776,0.610820,1.872507,-6.641961,0.589819,-2.909097,3.435427,0.747473,-0.431550,6.148903,9.056349,0.760597],[-2.081955,-7.129475,-9.917620,-1.781602,9.014590,1.130999,-1.522742,-1.344278,5.429483,1.993918,5.365513,-5.249548],[6.314309,5.447347,-6.301947,-5.976033,4.287696,9.870127,0.744882,9.252844,0.588474,8.694891,-9.201022,-0.493121],[-6.870842,-6.685852,-7.235634,-4.105583,-7.374129,-2.299613,-9.944749,9.091872,2.231590,9.782292,-3.354214,2.852046],[0.842087,-9.037921,-2.521437,-0.419963,-3.361879,-5.438899,5.107359,-9.991278,7.852312,-9.476960,4.764833,5.691045],[6.319335,-7.205352,9.551427,7.714959,-8.463055,-9.907231,-8.850101,-9.540135,-7.387123,6.589845,4.462580,1.773902],[-0.285199,-2.358835,-1.833153,-5.885147,-6.302984,7.273667,-6.639925,-2.279092,-1.617497,2.867676,3.752317,1.432470],[0.611118,4.823536,1.389641,4.865505,8.889059,8.667205,0.721127,0.726255,-8.327026,-5.177980,8.972260,-4.357533],[8.649488,7.105825,9.922639,-2.030795,9.335018,2.416521,9.087833,7.190441,-9.290971,-3.313487,-9.254303,8.069916],[-2.343388,-8.453209,-7.886832,-6.040146,-7.245582,4.013119,-6.038059,-8.046415,5.107814,-6.031123,-2.682903,9.560581],[6.856875,8.747471,5.920403,-1.989344,-1.106233,-8.167869,5.388787,-5.090942,-8.712487,1.679193,-3.420158,-9.459751]],[[3.708804,-0.419575,-0.157655,-4.969398,0.742716,-0.568194,-5.598099,-0.944973,6.703575,-2.571681,1.199972,-6.496329],[-6.120199,4.676183,-9.325604,-5.084454,-2.396892,8.855694,3.258348,-4.683087,3.362383,7.735170,-1.542759,-0.843640],[-7.825782,-6.293402,-0.337292,3.630950,1.471642,6.673139,3.168930,0.373432,-7.266804,-4.428470,8.550988,-2.826674],[6.441218,-7.088225,8.987273,2.061176,0.181886,-5.485678,7.518067,-0.929451,-6.504832,-1.039394,-9.361971,5.955801],[-7.186934,-0.790203,4.098099,6.921877,-3.440790,-0.854112,-1.363617,-3.879919,4.644923,9.448186,-5.865200,8.323281],[4.813466,-8.318300,-6.458791,-7.771722,-4.088810,-7.379774,3.129593,-8.682936,8.757840,-3.770736,6.855355,-2.457367],[9.763601,5.479377,3.270338,-9.317303,-0.878663,-6.848518,-1.235177,9.310993,2.715945,-7.149829,9.487503,9.516220],[9.069081,6.574960,-0.224934,-0.346714,0.848886,1.807986,-0.840362,-9.051041,7.764321,7.881904,9.740834,-5.578040],[-6.025166,-4.461768,7.913440,7.248742,0.791979,9.670760,-4.711298,5.486434,9.739839,-0.270204,-9.287938,-3.064159],[-2.103663,0.856214,7.483551,-5.061829,5.758914,3.303256,-3.509026,8.952861,6.502508,6.683336,-3.790544,-7.714856],[-5.087363,-0.515136,6.712597,-3.149594,-0.871132,8.604241,1.489083,-6.423342,-3.836420,3.959831,-4.376724,-9.519027],[-0.075092,1.342010,-0.745813,-6.941345,-1.627203,2.966574,-0.692040,8.165042,-9.769354,-8.158715,9.925045,-7.728267]],[[-4.191443,-3.523494,-5.326120,4.706860,6.021498,-5.780928,-7.012291,-9.264216,8.383462,-5.293682,9.866101,-0.433522],[-5.801269,1.379678,8.272991,-2.875426,0.358540,-1.414016,1.652306,-4.661644,-6.842628,8.490851,-9.954393,-0.660574],[6.701222,0.411617,-8.929837,-3.120832,-7.950270,-2.839224,2.799721,3.096242,-5.891363,1.628238,2.854245,-1.586410],[-7.058764,-4.550356,0.916490,-1.754611,3.173335,8.801563,7.203336,0.323413,5.941807,-7.952161,-9.549512,7.174540],[1.974204,-8.690746,5.172485,4.048935,-0.587036,-8.401573,-1.424043,1.268432,-8.125773,5.717882,-1.707240,3.813509],[8.968485,9.337948,9.993362,-6.149857,9.018598,-7.219851,3.380225,-4.023888,0.737771,9.648607,2.435742,-6.025730],[5.850485,3.577781,-5.476019,5.566357,-0.641740,3.214398,1.470740,7.057565,-0.494377,7.350515,6.606830,-3.584066],[-2.020860,-4.069517,-1.740662,9.665865,-3.269502,4.458201,2.650864,-4.573724,8.096498,-8.532288,8.853710,9.708108],[5.905671,1.233062,-4.236767,1.773194,9.819204,-6.763204,-0.376201,4.845715,1.789658,5.312275,9.666046,-0.847878],[6.672880,-1.960136,-5.819123,6.880357,-2.590224,-9.989184,-6.915182,-1.841403,8.868634,5.720279,-3.480299,1.537127],[5.605915,3.900554,-6.277540,-7.294420,-1.963725,8.402725,-8.829407,-9.733193,0.914410,-0.147931,-1.659576,-1.073461],[3.009889,-6.497670,-9.549444,6.180947,-8.175943,4.423275,1.312327,5.220996,-9.349992,-2.619385,3.615819,5.963504]]], dtype = "float64")#candidate|1296|(4, 12, 12)|const|float64
uop_1297 = relay.atan(const_1296.astype('float64')) # shape=(4, 12, 12)
bop_1301 = relay.right_shift(uop_1297.astype('uint16'), relay.reshape(const_1296.astype('uint16'), relay.shape_of(uop_1297))) # shape=(4, 12, 12)
var_1307 = relay.var("var_1307", dtype = "float64", shape = (4, 12, 12))#candidate|1307|(4, 12, 12)|var|float64
bop_1308 = relay.floor_divide(const_1296.astype('float32'), relay.reshape(var_1307.astype('float32'), relay.shape_of(const_1296))) # shape=(4, 12, 12)
var_1313 = relay.var("var_1313", dtype = "uint16", shape = (4, 12, 12))#candidate|1313|(4, 12, 12)|var|uint16
bop_1314 = relay.left_shift(bop_1301.astype('uint32'), relay.reshape(var_1313.astype('uint32'), relay.shape_of(bop_1301))) # shape=(4, 12, 12)
func_1126_call = mod.get_global_var('func_1126')
func_1127_call = mutated_mod.get_global_var('func_1127')
call_1322 = func_1126_call()
call_1323 = func_1126_call()
func_915_call = mod.get_global_var('func_915')
func_918_call = mutated_mod.get_global_var('func_918')
const_1341 = relay.const([[-6.747378,-3.953800,4.550459,3.638854,-5.003368,-3.860120],[-5.036967,-2.592652,-6.396837,0.344511,3.921456,7.928018],[-5.658235,-3.424735,-2.596044,-0.107261,1.727305,1.375626],[-6.967754,3.181843,-2.435398,-0.854558,5.531254,0.872735],[-2.004853,4.464557,-9.842416,-9.223332,3.235897,8.295318],[7.034542,-7.651659,-1.378411,3.463628,2.585533,-0.063366],[-3.774050,-7.465248,2.292885,5.723211,-9.627268,1.723682],[-6.089763,-8.679050,-5.971682,0.289292,7.217845,-3.374947],[6.156344,-9.217880,-5.423082,8.900125,4.837214,3.422745],[1.924392,9.037161,0.956366,-9.229617,-9.602949,5.956107],[-5.648037,-7.804116,-9.943699,8.166855,-9.629093,-0.640702],[-7.447564,3.006405,7.693678,-8.552053,6.905198,5.533734],[-0.076887,-1.173823,-4.692475,4.881578,4.655695,-5.339721],[-9.888916,7.928531,-9.280518,-2.208976,8.940667,-9.334649],[-3.697959,6.331965,-7.648010,-8.818206,-8.908102,1.605203],[-6.075991,9.242532,-6.107549,2.019849,-0.874889,8.326984],[3.866917,7.793536,5.097961,9.535262,5.907210,-2.169205],[7.620232,-8.534808,1.044420,-7.186205,0.697573,7.910345],[-8.364387,-8.630328,-9.908484,7.119061,1.095792,-2.202918],[-8.519816,-5.391106,3.713019,-3.645799,4.923103,-1.129175],[-8.760454,-6.637335,5.150901,-0.142764,7.785438,-6.624949],[-6.560819,1.955941,-2.486496,1.161081,5.488973,-7.141361],[-7.016186,-3.084702,-4.140719,-7.539826,4.507212,-0.193950],[3.694435,-4.748521,8.555611,-5.639240,-9.031813,-6.624308],[5.013690,-1.714599,3.506639,2.319085,7.502691,-8.440775],[4.200670,-8.212442,6.273047,6.432451,4.154324,9.527562],[-7.472501,7.974493,5.895854,1.982442,3.100919,-3.482127],[1.285658,-7.717230,8.782972,-6.942480,3.222268,5.658548],[2.537552,7.648186,5.163057,3.545054,-6.311068,-1.831626],[-3.371482,9.053957,2.969993,9.406339,5.925843,4.527104],[-9.149114,7.663269,7.116230,-8.345436,2.115793,6.500921],[8.645316,-6.334247,8.827003,1.433405,5.379406,3.857296],[-0.581198,3.806110,-4.380974,-9.709383,-6.520063,9.035391],[7.895686,-2.390787,4.315809,9.275047,-7.681123,9.238599],[-9.051186,-7.783279,6.810817,1.645240,-0.502270,2.349483],[5.406863,8.593389,-4.651874,5.416721,-8.175552,-1.983315],[-7.970864,-6.269186,-9.581381,-4.431479,9.765516,-0.331780],[6.974858,-5.319229,-7.273850,-7.530466,-6.205099,4.862967],[-3.215503,-1.776633,-6.335621,2.568014,-0.963114,9.795298],[9.058824,3.994332,-2.572632,9.243742,2.040752,0.477418],[6.539399,-2.080006,3.119231,-3.266939,-7.969051,0.785985],[-8.911527,4.570665,-1.110928,5.825489,3.779323,-1.146427],[-9.439756,9.647010,-4.497647,7.527789,-8.217093,2.933899],[5.616899,-8.028788,-3.791351,-6.178022,-3.820658,5.459869],[-3.369766,-6.373203,1.420786,-4.339618,-7.034270,-6.318841],[-0.733862,-9.631199,5.533742,9.427429,-6.723239,-0.950223],[8.554422,0.105575,3.002360,-7.835987,8.844499,3.473669],[-8.261694,-3.569067,9.871286,0.895498,-4.947456,-6.630461],[4.083470,-9.436970,7.165404,-3.956282,6.815721,-0.654961],[-0.341472,-8.474973,7.712632,-3.028390,5.438550,-2.364988],[7.172217,0.812136,-2.434508,5.576110,4.261754,4.785644],[8.262848,1.991393,2.263422,3.376346,-6.124992,9.863244],[3.933263,4.411454,-9.301771,0.113283,8.293121,0.304064],[-2.919582,4.807048,-2.183840,5.513491,-6.177155,-3.186319],[-6.123999,1.422143,1.996663,4.303136,7.067432,-3.025542],[-7.864039,2.883923,-5.751682,6.351238,-2.402891,-6.411665],[0.267666,-3.927485,-3.697442,8.511506,-0.419340,6.277040],[7.311064,-6.104032,-8.473769,-2.915926,-4.547101,-0.306521],[-2.676319,3.436313,4.764765,7.674840,5.411814,-1.981655],[-9.315471,7.603243,6.013531,0.156402,4.474293,9.392269],[-7.666991,-6.797559,4.075267,9.697518,6.069687,-9.067650],[-5.836059,9.622920,7.246805,5.408767,-0.725574,-0.035410],[6.953746,-9.448553,2.047105,-6.466101,-0.309727,-4.999850],[-8.596843,2.005440,8.219604,-1.917544,-8.390039,7.218282],[7.021382,5.262771,3.823767,9.274897,6.112390,9.720966],[3.650456,-3.519427,0.143190,-3.552405,-3.143641,3.164900]], dtype = "float64")#candidate|1341|(66, 6)|const|float64
call_1340 = func_915_call(relay.reshape(const_1341.astype('float64'), [9, 11, 4]))
call_1342 = func_915_call(relay.reshape(const_1341.astype('float64'), [9, 11, 4]))
uop_1344 = relay.log(bop_1301.astype('float64')) # shape=(4, 12, 12)
uop_1351 = relay.tan(uop_1344.astype('float64')) # shape=(4, 12, 12)
output = relay.Tuple([bop_1308,bop_1314,call_1322,call_1340,const_1341,uop_1351,])
output2 = relay.Tuple([bop_1308,bop_1314,call_1323,call_1342,const_1341,uop_1351,])
func_1355 = relay.Function([var_1307,var_1313,], output)
mod['func_1355'] = func_1355
mod = relay.transform.InferType()(mod)
var_1356 = relay.var("var_1356", dtype = "float64", shape = (4, 12, 12))#candidate|1356|(4, 12, 12)|var|float64
var_1357 = relay.var("var_1357", dtype = "uint16", shape = (4, 12, 12))#candidate|1357|(4, 12, 12)|var|uint16
output = func_1355(var_1356,var_1357,)
func_1358 = relay.Function([var_1356,var_1357,], output)
mutated_mod['func_1358'] = func_1358
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1126_call = mod.get_global_var('func_1126')
func_1127_call = mutated_mod.get_global_var('func_1127')
call_1386 = func_1126_call()
call_1387 = func_1126_call()
output = relay.Tuple([call_1386,])
output2 = relay.Tuple([call_1387,])
func_1390 = relay.Function([], output)
mod['func_1390'] = func_1390
mod = relay.transform.InferType()(mod)
output = func_1390()
func_1391 = relay.Function([], output)
mutated_mod['func_1391'] = func_1391
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1390_call = mod.get_global_var('func_1390')
func_1391_call = mutated_mod.get_global_var('func_1391')
call_1462 = relay.TupleGetItem(func_1390_call(), 0)
call_1463 = relay.TupleGetItem(func_1391_call(), 0)
output = call_1462
output2 = call_1463
func_1494 = relay.Function([], output)
mod['func_1494'] = func_1494
mod = relay.transform.InferType()(mod)
output = func_1494()
func_1495 = relay.Function([], output)
mutated_mod['func_1495'] = func_1495
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1126_call = mod.get_global_var('func_1126')
func_1127_call = mutated_mod.get_global_var('func_1127')
call_1501 = func_1126_call()
call_1502 = func_1126_call()
func_1003_call = mod.get_global_var('func_1003')
func_1005_call = mutated_mod.get_global_var('func_1005')
call_1505 = relay.TupleGetItem(func_1003_call(), 0)
call_1506 = relay.TupleGetItem(func_1005_call(), 0)
output = relay.Tuple([call_1501,call_1505,])
output2 = relay.Tuple([call_1502,call_1506,])
func_1512 = relay.Function([], output)
mod['func_1512'] = func_1512
mod = relay.transform.InferType()(mod)
output = func_1512()
func_1513 = relay.Function([], output)
mutated_mod['func_1513'] = func_1513
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1166_call = mod.get_global_var('func_1166')
func_1168_call = mutated_mod.get_global_var('func_1168')
call_1595 = relay.TupleGetItem(func_1166_call(), 0)
call_1596 = relay.TupleGetItem(func_1168_call(), 0)
uop_1597 = relay.acosh(call_1595.astype('float64')) # shape=(14, 14, 16)
uop_1599 = relay.acosh(call_1596.astype('float64')) # shape=(14, 14, 16)
uop_1605 = relay.log2(call_1595.astype('float64')) # shape=(14, 14, 16)
uop_1607 = relay.log2(call_1596.astype('float64')) # shape=(14, 14, 16)
uop_1614 = relay.log10(uop_1597.astype('float32')) # shape=(14, 14, 16)
uop_1616 = relay.log10(uop_1599.astype('float32')) # shape=(14, 14, 16)
func_755_call = mod.get_global_var('func_755')
func_758_call = mutated_mod.get_global_var('func_758')
var_1643 = relay.var("var_1643", dtype = "uint16", shape = (1664,))#candidate|1643|(1664,)|var|uint16
call_1642 = func_755_call(relay.reshape(var_1643.astype('uint16'), [16, 13, 8]))
call_1644 = func_755_call(relay.reshape(var_1643.astype('uint16'), [16, 13, 8]))
output = relay.Tuple([uop_1605,uop_1614,call_1642,var_1643,])
output2 = relay.Tuple([uop_1607,uop_1616,call_1644,var_1643,])
func_1645 = relay.Function([var_1643,], output)
mod['func_1645'] = func_1645
mod = relay.transform.InferType()(mod)
var_1646 = relay.var("var_1646", dtype = "uint16", shape = (1664,))#candidate|1646|(1664,)|var|uint16
output = func_1645(var_1646)
func_1647 = relay.Function([var_1646], output)
mutated_mod['func_1647'] = func_1647
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1003_call = mod.get_global_var('func_1003')
func_1005_call = mutated_mod.get_global_var('func_1005')
call_1686 = relay.TupleGetItem(func_1003_call(), 0)
call_1687 = relay.TupleGetItem(func_1005_call(), 0)
func_1494_call = mod.get_global_var('func_1494')
func_1495_call = mutated_mod.get_global_var('func_1495')
call_1694 = func_1494_call()
call_1695 = func_1494_call()
uop_1696 = relay.rsqrt(call_1686.astype('float32')) # shape=(14, 14, 16)
uop_1698 = relay.rsqrt(call_1687.astype('float32')) # shape=(14, 14, 16)
output = relay.Tuple([call_1694,uop_1696,])
output2 = relay.Tuple([call_1695,uop_1698,])
func_1704 = relay.Function([], output)
mod['func_1704'] = func_1704
mod = relay.transform.InferType()(mod)
output = func_1704()
func_1705 = relay.Function([], output)
mutated_mod['func_1705'] = func_1705
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1166_call = mod.get_global_var('func_1166')
func_1168_call = mutated_mod.get_global_var('func_1168')
call_1709 = relay.TupleGetItem(func_1166_call(), 0)
call_1710 = relay.TupleGetItem(func_1168_call(), 0)
func_1034_call = mod.get_global_var('func_1034')
func_1036_call = mutated_mod.get_global_var('func_1036')
const_1714 = relay.const([7,-1,2,-7,-7,7,10,-1,5,7,4,3,-3,10,8,8,-7,-2,6,10,-6,9,7,2,-8,5,-4,-2,7,1,-9,5,-8,7,-6,7,-3,7,-6,4,-2,8,9,-3,1,-6,-4,10,-5,6,-5,-5,-1,10,3,-3,-3,1,10,10,9,-6,6,5,-3,5,5,-8,-2,6,-2,-10,-2,7,-8,-5,-5,-10,-9,10,-5,1,5,-6,8,2,-3,-5,5,6,10,-10,4,-4,4,-6,1,1,-7,-2,-9,4,-7,4,2,-7,3,7,-9,10,-9,2,-4,-7,-10,-7,-3,2,10,6,-7,-6,2,8,8,-5,-6,8,-2,2,-6,-2,10,1,-1,3,9,8,5,-3,8,10,4,6,5,-7,-9,-1,4,-2,-8,3,-4,-9,1,-2,9,-2,1,1,6,-6,9,-5,-9,8,-1,5,5,6,7,4,-1,-2,-4,8,-3,8,-4,-6,9,-10,-6,10,10,-9,6,-6,-2,1,3,10,6,9,1,2,-9,2,7,9,10,6,-3,-6,1,3,-7,-10,-10,-2,2,1,-6,9,9,-1,-5,-6,7,3,7,2,8,-8,8,-9,6,4,-7,5,8,-4,3,1,-1,-10,2,-6,-3,-1,6,3,-4,-6,-9,-8,9,2,-3,1,-1,4,-2,-6,-5,-6,-8,7,-8,-4,5,6,3,3,-4,10,7,9,-4,-4,3,-4,-3,-3,-3,9,-7,10,-4,-6,9,-6,-9,6,9,4,2,-2,-6,-5,4,-7,-9,-2,3,-3,-3,-9,-3,6,6,3,8,2,-4,5,1,8,-2,-4,10,7,8,6,2,-3,-3,-6,-6,5,5,8,3,-7,8,-7,-1,-10,2,-2,9,1,-4,3,5,-1,-7,8,5,-4,-9,9,-7,10,-8,-2,-8,9,9,-5,1,9,-3,9,-4,-10,3,-4,-10,-8,9,-5,2,-10,-9,9,8,-7,5,-8,-8,2,8,2,2,-8,9,-7,-1,-5,-3,10,10,-4,-5,4,1,-7,-5,10,-8,-10,2,-9,6,3,8,-1,-3,3,-7,3,4,10,-6,9,-7,-4,-6,-3,-7,-2,-10,-3,-7,-2,5,6,-3,1,5,7,6,-10,-4,-5,-9,-8,-1,3,9,-4,-1,6,-7,7,-8,3,-6,6,-5,-1,-1,7,-1,-10,8,-7,-6,-4,3,-4,-6,4,-9,-1,3,-1,2,6,10,6,-2,8,-7,3,-6,10,4,-3,4,9,6,4,10,3,-6,10,3,9,2,1,-9,-1,5,-7,-10,6,6,5,-10,8,7,-5,7,2,4,-9,-2,-9,6,6,10,-1,-4,4,5,9,1,-4,-7,-8,-8,5,9,9,-10,1,-8,8,-1,7,4,9,1,-4,10,9,-10,9,8,9,4,-8,4,-8,8,-10,3,-8,5,-1,3,-2,-6,-6,-3,-2,7,-3,8,6,7,8,9,4,-7,8,7,-7,-3,7,8,-4,1,-5,-9,5,-1,7,9,4,6,-6,-2,-6,-7,-2,2,1,-5,4,-1,1,-10,-2,10,4,5,-1,-4,3,-9,8,3,7,-6,-2,-10,9,-9,-10,4,-7,6,8,-4,-3,8,-6,-9,-8,4,3,3,5,-2,3,8,5,-7,-6,-3,-5,10,-1,4,5,-1,3,10,-8,-2,-8,-2,-6,7,-1,1,-3,-5,2,-6,-9,-7,1,-2,-2,1,-9,-5,3,7,4,7,-8,2,6,-7,4,-9,3,-5,10,-5,8,-1,1,4,7,3,-8,5,4,8,8,-5,3,-4,-6,1,10,-5,-2,-6,-10,4,5,-1,3,-9,1,2,1,-6,-6,3,8,6,-6,-7,-3,-6,10,1,9,4,1,-1,-1,-3,3,-2,-1,3,3,8,2,-6,1,6,7,-9,6,-3,10,-4,2,-6,-6,-2,8,5,-4,-2,8,7,10,4,-10,2,4,3,-4,9,-7,-7,3,-4,-2,-3,6,8,8,1,10,7,1,-10,-8,-5,1,9,5,-8,2,9,-3,-2,-8,10,6,2,9,2,-10,-2,2,-5,-5,-4,-6,4,2,2,-1,-8,2,-6,-3,-8,-7,5,2,-6,3,-3,-5,-8,-3,8,5,-2,-7,7,7,6,6,3,1,4,-9,3,-3,2,-1,1,8,2,10,-9,7,-10,7,2,3,2,-6,-8,7,-7,4,-4,-1,-10,-8,-7,4,-9,-3,9,-8,9,-9,4,-1,-4,-9,7,-7,-3,8,9,9,3,8,1,-6,-1,-9,10,-6,-7,3,6,-3,-4,-9,2,-10,4,-8,5,5,-8,-10,8,-3,10,-9,5,-5,2,3,-4,9,-10,-10,1,-2,2,7,10,5,5,8,7,-10,-7,-4,-5,-6,-10,-3,-4,1,-9,-7,6,10,-7,3,4,-4,-8,2,3,-2,6,5,-10,-7,-5,-9,8,4,10,1,5,-2,6,-8,-2,4,-4,10,-7,5,5,3,-3,-1,6,-6,-9,-4,2,6,4,6,10,4,-4,7,2,3,9,-8,-3,-6,3,-9,-5,1,-4,-7,-2,4,-9,5,3,7,-9,-4,9,7,1,-9,1,-6,-6,3,-6,-5,-8,-8,-8,10,10,-4,-8,-3,8,-5,-1,-8,-4,8,-6,4,-3,4,7,-3,-9,-10,-9,-6,-4,-8,4,3,-6,7,-3,-7,-5,-2,-6,3,-1,4,5,-6,3,-5,1,4,-10,9,-5,-2,7,5,6,-1,-1,6,5,7,10,-4,2,6,2,-5,-2,-7,8,4,-10,-2,8,-8,-4,2,9,-2,-5,-10,4,3,-2,-6,-4,8,-5,-8,-10,9,-1,7,6,-10,-10,7,-8,1,-3,-4,-9,-3,-3,-9,-7,-9,9,10,-7,-6,3,-10,-6,-4,-8,-7,1,3,-1,10,-1,10,-5,5,1,7,-5,-6,8,9,8,-4,6,-4,-10,-8,-3,10,7,2,-7,3,-7,-10,-8,-10,-4,5,2,8,-6,-2,5,1,-9,1,3,5,-4,7,-5,8,1,-1,5,-4,8,-1,8,-4,-6,-3,10,1,5,5,4,1,-7,10,-4,4,-8,4,9,-5,4,6,-7,7,2,4,-5,3,9,-3,-6,4,6,-4,-5,-1,-6,-2,-3,-7,-1,3,9,-6,-7,-1,10,1,-5,-10,-1,-9,10,-3,10,-10,-2,5,-8,10,-1,-2,-8,6,5,4,-9,-6,4,-1,-7,5,3,1,-2,1,-3,6,-4,-5,-8,-7,-3,5,-10,6,-9,-9,1,-6,-10,-6,-7,-4,-5,-10,-1,-2,-7,4,5,-7,10,-7,-5,-4,7,7,2,-7,-2,2,3,10,2,9,3,-2,-1,6,1,10,9,5,1,-10,8,-8,5,1,1,5,-6,-1,-5,3,-6,-7,4,-8,-2,2,10,1,8,-3,1,-7,4,-6,-4,8,-5,4,-4,4,3,-6,-6,10,-8,-4,-2,8,8,6,6,-1,6,-8,-10,-6,6,7,8,7,2,-5,-2,-10,-10,4,10,-4,-1,-7,-3,-5,5,-5,1,7,1,6,8,6,2,-1,-5,9,5,6,-10,-1,3,8,-5,-7,-10,4,1,-3,1,-7,6,2,-3,3,9,10,9,-8,-6,3,-10,-1,8,-5,-9,5,10,9,6,-9,-6,-1,-9,-1,5,-1,2,7,-8,-9,9,-2,-1,-4,-5,-4,-4,-7,-1,7,2,-3,10,4,-4,-4,-7,2,7,3,-1,-4,1,7,8,9,2,6,-2,1,-3,1,-1,-6,-8,-2,-7,3,6,9,4,5,10,7,2,-9,2,5,-2,-4,1,1,-10,5,2,1,-1,-1,10,2,7,8,-1,3,-3,6,-2,-1,9,10,9,-9,-10,1,10,3,-7,9,2,-1,-10,9,2,-6,-4,-4,8,5,-6,9,2,-7,2,6,9,-9,4,3,-7,-9,-5,-6,-8,4,-7,-4,-4,-7,7,10,-1,-5,8,5,8,8,8,-8,-7,4,5,5,7,6,5,9,7,-3,3,2,-1,-5,-6,-9,7,-9,9,4,3,-9,-7,6,-2,9,-8,-7,1,10,-4,2,-10,6,4,7,-1,8,7,-2,-5,-4,-1,-2,2,-2,10,-10,5,-2,-7,8,7,3,-10,-3,-5,-7,-10,9,-10,-10,4,-1,-7,10,1,-1,-2,2,-9,-8,-2,1,6,5,10,6,-7,-7,-9,-10,2,1,-6,-9,-10,1,4,5,1,-7,5,-9,10,1,-10,2,-4,8,-9,-7,6,10,-10,-1,3,4,-9,4,-6,1,-6,9,-7,10,-6,5,-4,1,8,-5,-9,-10,-1,-10,-9,-4,-3,5,-2,5,1,-9,3,-9,3,3,-10,-2,9,-9,-10,-3,7,-2,2,-6,-7,10,-6,-4,-10,3,-10,-2], dtype = "uint16")#candidate|1714|(1664,)|const|uint16
call_1713 = relay.TupleGetItem(func_1034_call(relay.reshape(const_1714.astype('uint16'), [1664,])), 2)
call_1715 = relay.TupleGetItem(func_1036_call(relay.reshape(const_1714.astype('uint16'), [1664,])), 2)
func_1390_call = mod.get_global_var('func_1390')
func_1391_call = mutated_mod.get_global_var('func_1391')
call_1718 = relay.TupleGetItem(func_1390_call(), 0)
call_1719 = relay.TupleGetItem(func_1391_call(), 0)
bop_1731 = relay.bitwise_xor(call_1713.astype('int32'), relay.reshape(const_1714.astype('int32'), relay.shape_of(call_1713))) # shape=(1664,)
bop_1734 = relay.bitwise_xor(call_1715.astype('int32'), relay.reshape(const_1714.astype('int32'), relay.shape_of(call_1715))) # shape=(1664,)
output = relay.Tuple([call_1709,call_1718,bop_1731,])
output2 = relay.Tuple([call_1710,call_1719,bop_1734,])
func_1736 = relay.Function([], output)
mod['func_1736'] = func_1736
mod = relay.transform.InferType()(mod)
output = func_1736()
func_1737 = relay.Function([], output)
mutated_mod['func_1737'] = func_1737
mutated_mod = relay.transform.InferType()(mutated_mod)
var_1794 = relay.var("var_1794", dtype = "uint8", shape = (6, 5, 4))#candidate|1794|(6, 5, 4)|var|uint8
const_1795 = relay.const([[[3,-8,1,-7],[1,-6,-6,8],[3,-8,-1,8],[-9,-4,-7,-2],[-4,1,8,2]],[[3,8,3,1],[-7,-4,10,-10],[6,7,6,-2],[-10,6,10,-9],[-6,-4,-4,4]],[[4,10,9,2],[5,9,-1,-10],[5,-8,5,-9],[8,-1,-10,4],[4,9,5,1]],[[3,9,-2,-4],[8,5,3,6],[9,4,2,-5],[-3,10,-6,-7],[-2,2,9,2]],[[-7,-1,-2,2],[2,-1,3,3],[-10,5,5,-2],[10,2,9,-7],[2,9,-4,-5]],[[6,-3,4,4],[-10,-8,10,-1],[-6,-2,-6,5],[6,9,-4,8],[-2,8,6,8]]], dtype = "uint8")#candidate|1795|(6, 5, 4)|const|uint8
bop_1796 = relay.multiply(var_1794.astype('uint8'), relay.reshape(const_1795.astype('uint8'), relay.shape_of(var_1794))) # shape=(6, 5, 4)
func_1736_call = mod.get_global_var('func_1736')
func_1737_call = mutated_mod.get_global_var('func_1737')
call_1799 = relay.TupleGetItem(func_1736_call(), 1)
call_1800 = relay.TupleGetItem(func_1737_call(), 1)
output = relay.Tuple([bop_1796,call_1799,])
output2 = relay.Tuple([bop_1796,call_1800,])
func_1806 = relay.Function([var_1794,], output)
mod['func_1806'] = func_1806
mod = relay.transform.InferType()(mod)
var_1807 = relay.var("var_1807", dtype = "uint8", shape = (6, 5, 4))#candidate|1807|(6, 5, 4)|var|uint8
output = func_1806(var_1807)
func_1808 = relay.Function([var_1807], output)
mutated_mod['func_1808'] = func_1808
mutated_mod = relay.transform.InferType()(mutated_mod)
var_1824 = relay.var("var_1824", dtype = "float32", shape = (9, 3, 9))#candidate|1824|(9, 3, 9)|var|float32
uop_1825 = relay.cosh(var_1824.astype('float32')) # shape=(9, 3, 9)
func_510_call = mod.get_global_var('func_510')
func_515_call = mutated_mod.get_global_var('func_515')
const_1828 = relay.const([True,True,True,False,True,False,True,False,False,True,False,False,True,False,True,False,True,True,True,False,True,False,True,True,False,True,False,True,False,False,False,True,True,False,False,False,False,True,True,False,False,True,False,True,True,True,True,False,True,False,True,False,False,False,True,False,True,True,False,True], dtype = "bool")#candidate|1828|(60,)|const|bool
const_1829 = relay.const([[-1,-10,5,8,10,4],[6,9,-7,-9,-10,4],[-5,-1,-1,9,-7,10],[-4,7,-4,5,4,-8],[-1,-3,10,-5,8,-2],[-2,-1,-9,-10,-7,-6],[-9,-1,-4,-3,-5,-8],[-4,2,8,1,4,-10],[10,3,-10,-8,-1,-1],[7,-2,10,9,-2,6],[-4,1,-6,8,-4,5],[1,10,-2,9,-2,-4],[-2,6,6,5,8,8],[8,2,-9,3,-10,-4],[-3,-4,7,-9,4,4],[-1,8,4,5,-1,3],[4,2,10,-8,2,-1],[-1,9,-8,-3,-1,-8],[8,8,-10,1,-10,10],[2,4,-10,-4,-7,-8],[5,6,6,-2,9,4],[-2,5,-10,3,-5,-8],[4,-7,5,8,9,-6],[9,-9,-10,10,-8,4],[-4,-1,-6,3,1,2],[7,5,-5,-3,1,-7],[-5,-2,3,-2,-5,-3],[4,-2,8,-2,-8,-5],[2,-9,7,3,-2,4],[3,2,3,-2,3,-3],[-9,-8,-5,-10,-10,-1],[7,-9,-1,4,-3,5],[-2,-2,-10,-6,3,8],[8,7,8,-4,-4,-4],[10,-2,-4,8,3,-9],[-8,-3,-10,10,-10,-3],[-7,-3,-2,7,-5,-6],[5,3,5,-2,-8,5],[-8,5,4,-6,4,5],[6,-9,-10,-10,-8,-4],[8,7,10,5,9,-6],[7,-5,1,9,1,-10],[5,-7,-6,10,-6,9],[9,4,3,2,-1,-1],[6,-4,9,9,8,9],[-6,8,-5,7,-3,3],[-2,6,-1,-8,6,-3],[7,-1,7,-9,-10,-4],[3,1,4,-2,1,10],[4,9,9,4,-4,-3],[4,2,6,-9,1,7],[-7,2,8,10,-9,9],[-10,5,8,5,-9,-8],[-4,6,-8,-1,-3,-5],[-4,-10,-5,-2,-3,-1],[5,5,-2,1,-9,-3],[1,3,6,4,4,-2],[4,-4,-1,8,-8,1],[5,7,-10,-2,-4,-4],[3,-2,-1,-6,8,-2],[2,8,2,-1,3,10],[8,-6,-6,-5,-10,8],[3,8,3,-2,-9,-6],[-10,-1,-2,-8,-2,-3],[5,-1,-6,6,-2,-1],[-4,1,-1,-8,3,6],[10,-8,-6,-3,10,8],[3,-3,8,-2,-7,8],[2,-1,-3,10,10,-6],[-8,9,-2,-6,-1,-4],[3,3,-10,9,7,5],[-6,-5,-3,-5,1,3],[-3,10,7,4,1,9],[-10,-3,8,-9,5,3],[5,10,-1,1,1,-7],[5,-8,9,-8,-8,6],[-1,2,-8,-3,-10,9],[8,-3,-1,-5,2,-5],[-3,-9,-5,8,-9,1],[5,10,-7,-7,9,3],[-2,8,-4,-6,7,-9],[-2,10,7,-1,-5,10],[-2,-8,8,-2,-10,6],[-3,-4,-10,7,-9,-5],[10,3,-7,-9,9,-9],[-9,-7,1,-6,8,9],[10,-9,-4,-9,2,-2],[-2,-9,10,-8,-1,9],[-10,6,-2,5,-2,-3],[1,-1,-4,4,-5,7],[-3,2,1,5,6,-7],[-8,-2,-7,7,9,-2],[2,-10,-1,10,-3,-7],[6,6,-5,2,-7,4],[-9,3,10,10,-3,8],[-9,-9,3,-7,-10,-10],[-7,-8,7,8,4,4],[9,5,6,8,-10,-8],[-5,-1,-9,1,3,10],[-3,6,2,-1,-7,4],[8,1,-1,2,-5,2],[-3,-9,2,8,8,1],[5,-4,8,6,-2,-5],[-5,10,9,-3,4,-1],[-3,-2,-5,2,6,-2],[6,2,6,-2,4,2],[-5,-6,-9,7,-7,3],[-3,2,3,-4,6,6],[3,5,-9,9,-4,-4],[3,6,-10,2,6,-1],[-9,-7,-2,9,10,-1],[10,4,6,-10,-9,10],[7,-1,5,-1,8,1],[10,5,3,10,7,-1],[4,-5,8,-2,-7,-10],[-4,1,1,-4,-2,-3],[-7,10,9,-1,3,-5],[1,-7,-10,-1,8,-10],[3,-1,5,2,9,7],[3,2,-4,-8,4,-1],[4,1,-5,-10,5,5],[-7,3,9,3,-10,10],[2,6,5,2,-3,-9],[4,-9,3,2,-3,6],[-6,3,-4,9,1,5],[7,3,-2,10,-4,-6],[5,6,2,-9,3,-4],[5,6,-9,9,-8,-5],[5,-6,-6,-7,-10,-8],[-9,3,-1,8,8,-9],[4,-4,2,-3,-5,-7],[1,2,1,8,-9,9],[-5,3,10,4,-1,6],[-8,-10,8,-3,-3,4],[5,1,10,1,8,3],[-9,2,5,-3,7,-5],[-3,3,1,10,-9,9],[3,-7,5,7,-6,4],[-6,-4,2,-7,-8,-1],[-8,-5,3,6,-4,-5],[4,-3,-2,2,3,3],[7,-10,-10,4,-1,-5],[-2,10,-6,7,10,10],[6,-2,-2,-6,-4,-4],[9,-2,-6,7,-10,6],[-4,7,2,8,3,-10],[-6,2,7,6,-3,-6],[-5,-8,2,2,8,1],[-9,9,2,7,-8,-10],[6,-10,-2,9,-1,-4],[-3,-10,8,-3,2,-10],[-3,-2,7,-5,8,1],[4,-9,7,10,2,2],[-3,10,9,10,9,3],[6,7,5,-3,-6,-4],[8,4,3,-1,-3,2],[10,-3,5,-3,6,-4],[7,-10,2,9,-5,1],[1,4,10,7,7,-9],[6,3,3,2,7,-5],[5,10,-7,10,2,3],[10,-1,1,-1,-3,10],[-4,-6,-6,1,-6,-5],[-1,-2,-1,-2,-8,9],[-5,6,-5,-4,9,-9],[2,8,8,-1,-8,-1],[-2,9,-7,7,7,2],[10,-10,-5,-5,6,4],[-9,-4,-10,6,-7,9],[-5,8,2,3,-7,10],[-9,-8,2,-10,7,-8],[6,-8,-10,9,-5,-7],[-8,-8,3,-8,7,-1],[9,8,3,4,1,-4],[-1,6,1,-5,-6,-5],[-3,3,-10,6,6,-9],[1,10,-5,3,-7,-2],[-4,7,-9,9,7,1],[8,9,5,-5,-1,-6],[-9,-2,10,7,10,2],[-8,3,-4,-3,4,-8],[-1,-5,6,-7,-2,3],[3,-4,4,4,8,5],[2,6,-1,-4,5,-5],[1,-8,-10,-5,-1,-8],[8,6,7,-9,1,-6],[-10,-7,10,-8,3,-3],[6,-8,10,3,7,-3],[-1,5,8,6,-10,2],[4,-10,-5,10,3,-10],[3,1,3,4,6,7],[1,-1,8,-2,5,-9],[-6,-4,8,-4,-9,1],[-8,-5,-6,-8,8,9],[-5,8,4,-2,8,-1],[-2,-7,9,1,5,-10],[10,8,-9,4,10,4],[3,4,2,10,-8,2],[-5,5,-1,-10,2,1],[-7,-5,-8,10,-7,-3],[-8,2,9,3,1,3],[2,-4,-3,8,-9,6],[-4,-9,1,-9,-4,-4],[6,-7,7,10,-5,-6],[9,-8,-6,6,-1,10],[-6,10,9,4,-3,-2],[-3,10,7,6,-9,-4],[1,7,-4,3,-6,-1],[6,2,-8,-10,9,1],[-7,1,3,2,-5,5],[8,1,-10,-2,-10,8],[1,1,7,5,10,9],[-3,-7,-4,8,-2,-7],[-3,-1,-3,1,4,-3],[5,-6,-8,-8,9,-1],[-10,4,-10,-4,-2,-4],[-1,-9,8,-9,-4,7],[1,-2,3,-1,2,6],[-8,5,-5,-5,5,-3],[-9,-5,7,-4,-7,7],[10,4,-5,6,-1,5],[1,2,7,-8,-8,-9],[4,3,8,1,10,-1],[-6,-2,9,2,-7,-5],[-10,1,5,4,1,-1],[9,-8,9,-8,8,1],[5,-7,-8,7,7,-7],[-5,-4,-10,7,6,8],[7,-2,6,-4,9,-5],[6,-8,-9,-7,-5,5],[5,5,-7,9,-1,-9],[-8,-9,-4,5,-6,5],[7,-2,-5,10,-8,3],[9,9,5,-6,3,-10],[-10,9,10,-1,-7,9],[-9,2,-3,-3,7,4],[-2,-6,8,1,3,-1],[-5,-7,-5,-6,7,-10],[-3,5,-6,3,-1,-2],[5,4,5,-10,-8,-5],[-7,-5,-9,7,1,1],[2,5,2,-2,-1,6],[2,8,-5,2,6,-6],[-6,6,-8,-3,2,6],[5,5,-4,4,7,5],[9,-3,7,-7,-6,-10],[-1,-7,-3,8,-10,-6],[4,-2,3,2,-7,6],[-8,-8,-5,9,1,10],[-10,2,9,-6,-7,3],[-8,-4,2,8,1,4],[-4,6,8,9,-2,10],[8,-6,4,7,-6,6],[8,-10,2,9,-9,-3],[-10,-7,-3,6,2,-8],[-5,10,-5,1,-2,4],[-7,2,-9,2,-7,-2],[3,4,3,-4,9,10],[-10,-7,2,-8,6,4],[5,5,-3,4,6,-3],[-2,-7,-1,-4,8,3],[3,-10,9,6,-9,8],[7,-2,-10,2,-2,-2],[8,3,-7,5,-8,-1],[-8,-3,-8,-1,-2,8],[7,-5,-2,3,-5,3],[5,-2,-4,9,9,-1],[2,-2,2,-6,3,-10],[-10,-3,1,7,-6,6],[3,2,-7,1,-4,4],[6,-6,1,1,9,6],[-10,6,1,5,-9,-10],[-9,-8,5,-10,-1,-9],[10,-4,4,1,-3,1],[8,2,5,6,2,-7],[-5,9,3,8,5,-4],[-4,-4,-1,2,3,9],[-5,-1,8,-7,7,8],[-1,-3,10,9,2,2],[-10,-5,10,10,8,4],[1,10,7,-8,-6,-9],[8,-10,-3,4,-7,-6],[-2,2,-10,-9,-10,-9],[-6,-7,7,9,-6,-6],[1,2,-10,5,-7,-3],[3,-7,10,10,-4,8],[-5,-9,-6,-7,6,5],[8,-7,6,3,1,-2],[8,6,-1,7,3,-4],[-2,8,-10,3,2,4],[-9,7,7,-10,-1,10],[5,5,-3,9,-2,3],[-1,-2,8,10,5,7],[7,8,8,-10,-5,-10],[-6,4,-5,1,-3,8],[-1,9,8,-7,-5,-2],[2,5,7,-6,4,8],[-6,7,2,-1,8,8],[-7,-10,1,-7,-4,-2],[10,1,-9,5,-9,-5],[2,5,-9,5,-9,10],[8,5,-2,2,-5,5],[-3,-9,7,-3,-1,8],[-1,-6,9,-10,-5,-7],[-2,-8,2,-2,6,-5],[-5,-1,-7,8,1,10],[-2,-6,-7,-4,2,7],[7,-8,1,5,4,-6],[-4,-10,-10,4,-1,1],[-3,-9,6,10,-7,8],[4,8,9,10,10,-10],[-10,-4,-5,1,9,7],[-7,-1,-5,-6,10,8],[8,5,-8,10,-9,1],[9,-6,-3,4,-9,-6],[-1,5,6,5,1,-2],[4,9,6,1,-1,4],[1,-3,2,-5,2,8],[-5,-2,2,-7,7,2],[-5,1,-2,-7,-2,3],[10,10,-10,-7,-9,3],[-4,8,6,5,4,7],[-2,7,7,-9,-8,8],[-7,-2,6,8,6,1],[7,-5,-3,-5,9,10],[-3,-2,8,-10,-6,1],[-8,2,-6,-7,-1,2],[-5,9,-10,-9,-8,6],[2,2,8,2,4,-7],[-10,-1,-7,5,1,-7],[2,6,8,7,7,1],[-3,-9,-10,-7,-3,9],[1,-3,9,5,-5,-3],[-4,4,-10,-7,10,1],[-4,-8,7,6,-3,-2],[8,-4,-10,-7,-7,-6],[-8,3,-8,-7,3,1],[5,9,8,-10,1,-9],[-1,9,-7,-7,7,2],[4,-10,-7,6,8,-9],[9,3,3,2,6,4],[-6,10,-2,-3,-4,-3],[3,2,-5,8,-10,3],[-2,-9,-8,-6,5,10],[-8,4,-5,4,8,-1],[-7,-6,-1,2,6,4],[8,8,3,3,-2,-7],[5,5,7,6,-7,5],[-3,-1,-10,-3,-4,2],[-3,-1,1,10,-9,-9],[2,-2,-8,-5,4,10],[-1,-4,7,2,-2,-3],[-3,1,9,-10,-5,-10],[-1,-4,10,-1,-8,-6],[3,-5,1,8,-2,-7],[8,3,-2,-8,9,10],[-7,-2,7,10,-6,-7],[-2,2,-5,-6,-8,8],[-2,-3,-10,10,-5,2],[10,4,-8,2,5,5],[-5,-2,-10,3,9,-2],[-2,-6,-5,-10,10,-1],[-4,-2,1,10,-8,8],[-5,9,10,2,-6,-8],[-7,-7,4,-7,3,7],[7,-9,-10,-3,10,10],[7,-4,10,-5,-2,-6],[-10,-3,2,-6,-9,-6],[-4,7,-4,5,-9,-4],[3,-8,4,9,6,-9],[-4,-9,-2,4,-5,1],[8,-9,-7,7,-4,4],[8,-2,-5,-5,7,-4],[1,6,-10,5,5,6],[9,-1,-10,-1,-8,5],[5,4,7,1,-7,6],[-4,-7,7,10,-9,-8],[-7,9,3,9,-3,-2],[-1,10,1,-7,-7,3],[-8,-9,-5,-7,-8,-8],[-8,1,-9,4,7,8],[-2,-5,9,-2,-3,5],[-7,-2,9,-8,-6,10],[3,5,-2,9,10,-2],[2,-6,-4,-4,-3,6],[6,-1,-2,-8,-9,-6],[-10,2,9,-6,7,-7],[-5,9,-7,2,-10,4],[3,8,8,2,1,5],[7,10,-7,2,7,-10],[8,-6,6,-10,-5,-1],[-4,-1,7,2,9,-6],[10,8,1,2,3,-10],[9,8,-8,-6,-1,5],[5,2,1,2,-9,-1],[-2,2,10,-2,1,4],[8,4,-9,7,-8,7],[10,3,2,10,6,7],[3,8,9,3,-3,9],[6,7,-7,-7,4,6],[5,-9,-7,10,8,-4],[-9,-6,-4,8,1,7],[-8,6,-4,1,8,2],[-8,3,-8,3,-4,4],[4,-1,5,-4,2,-8],[-2,-6,9,-6,-10,-1],[8,8,4,1,3,-4],[1,1,8,10,8,-10],[5,4,-5,-4,10,4],[-3,4,8,-4,8,2],[7,-7,9,-2,3,10],[2,2,5,7,-2,3],[9,-1,-3,2,-5,4],[6,8,3,-1,1,8],[1,3,-6,-7,4,-3],[-1,6,6,1,8,-5],[-9,-8,10,-6,1,8],[8,4,3,8,4,9],[-5,-4,-10,-6,5,-9],[1,-8,7,-2,3,-6],[5,10,9,1,-10,9],[-4,-10,2,-4,7,5],[-1,-8,5,1,-9,1],[-10,3,9,-1,8,4],[1,3,1,1,-5,6],[-2,-9,-6,8,-5,8],[-5,-1,-10,-3,2,-10],[-3,4,-9,-7,-5,-3],[-9,9,-4,-9,5,1],[4,8,-9,-8,-7,-10],[3,9,-4,-1,5,-6],[-6,-7,-5,-8,-10,5],[-5,2,3,10,9,-6],[-4,-3,-6,8,-4,-4],[-3,9,9,5,-7,5],[8,8,5,-10,8,9],[-4,5,-4,-8,1,10],[-1,1,-1,8,2,-9],[-7,-7,4,-10,-5,-6],[-3,-5,2,-4,10,1],[-2,5,6,-10,-4,-9],[-2,-7,-3,5,-9,-2],[-6,6,-4,1,9,-9],[-9,5,7,-4,-2,-8],[-5,-10,-3,-7,-9,-7],[1,8,-4,-2,-7,8],[2,4,2,10,-5,4],[-3,7,4,-6,1,-7],[-2,-10,8,4,10,8],[2,-1,-8,-2,-6,4],[4,6,-5,-2,2,7],[-10,3,-3,-3,-7,-9],[-1,-6,2,8,-2,-5],[9,-4,-1,-2,6,-2],[6,-1,10,-8,2,8],[5,-4,-10,4,6,10],[-10,8,-8,4,-4,7],[-6,-4,10,-4,8,10],[5,-9,3,-6,-4,9],[-3,-7,10,2,8,4],[-10,3,-4,-9,-8,-10],[8,3,2,-5,7,-3],[-6,2,-5,-4,-5,-4],[-9,-8,1,-7,5,2],[-2,-4,9,-7,-4,-10],[7,3,-10,-1,-8,-5],[8,-8,2,2,-7,4],[-4,10,9,-5,4,8],[-5,-3,1,-1,-2,4],[9,9,-2,1,-5,6],[-10,2,-8,-6,-1,-5],[-6,1,-7,3,3,-1],[6,-5,-2,-7,-1,-6],[1,-4,-10,-5,7,-6],[5,10,3,6,-5,2],[-9,2,10,-1,-2,3],[3,-8,-6,-5,-8,-10],[10,2,-5,5,-5,-6],[-8,6,-1,10,7,-6],[-6,5,-10,5,-8,-5],[3,-1,-10,-5,-5,6],[8,-1,8,9,8,6],[-6,8,-9,-1,5,-1],[8,-3,7,-10,-7,-1],[8,-7,-3,-6,5,4],[-9,6,-6,8,5,8],[3,8,-9,-5,8,-5],[6,-1,-7,6,-2,7],[1,4,1,9,-10,-3],[5,-9,-1,-7,8,-9],[5,-9,8,-4,5,7],[10,7,-3,2,-8,5],[5,-8,10,-8,-3,-1],[-4,1,3,-3,-6,-2],[3,-8,-4,2,-5,-2],[6,-7,6,-1,2,-8],[-2,7,-3,6,2,-7],[-7,8,7,-6,-2,3],[2,8,10,9,7,9],[-5,-4,-10,-5,-9,-10],[5,-1,-8,4,-2,6],[-6,-3,8,-5,-8,-2],[-1,7,10,-8,5,1],[-8,5,-5,10,-3,8],[-7,-6,1,5,-5,-2],[2,-9,1,-10,6,7],[-4,5,-1,1,-4,-5],[5,7,-2,4,-10,1],[-4,8,-6,-1,3,-10],[-9,-4,-9,9,7,-3],[-6,-5,1,-8,8,-7],[1,7,-6,-10,-1,1],[1,4,-8,9,6,-2],[9,-4,-8,-1,10,4],[-6,-2,-9,7,-3,-10],[-9,-6,-2,-4,10,7],[-6,6,-8,-2,7,3],[9,5,-2,4,3,-8],[2,-5,-9,-10,-1,-3],[-9,5,-10,-1,8,-2],[5,4,10,3,6,-4],[-2,-10,-3,4,-7,-9],[7,8,9,8,8,2],[-5,-9,4,-6,8,-1],[-8,-2,-4,-3,-2,-6],[1,-5,-5,-8,-1,-3],[-8,3,-4,4,9,-8],[10,4,4,-5,6,-5],[-6,-3,-8,3,-5,2],[1,1,4,1,-3,-6],[-6,2,-10,5,10,6],[-4,3,-5,9,1,-6],[-3,8,5,-3,-6,5],[3,-3,-9,10,8,-5],[8,-1,-7,-5,7,6],[-9,2,-5,-1,-8,3],[5,-1,9,-8,-1,8],[-7,8,-6,5,-3,-1],[6,9,8,9,5,6],[7,3,-4,-8,3,6],[-10,9,10,2,-3,7],[-2,7,-8,3,9,-5],[-6,6,9,-3,5,-2],[1,8,-6,-7,3,8],[-1,9,7,-4,1,4],[-2,-8,-8,-9,-6,-3],[5,-3,-8,-2,-3,10],[8,-5,-2,8,-6,10],[-7,-3,9,7,7,-4],[2,5,-8,-5,7,-5],[9,-4,10,-8,-4,-9],[-6,6,-6,-10,6,-4],[-10,-1,1,5,-7,-6],[2,3,-5,-10,-1,-6],[-7,-7,-2,7,2,-9],[4,-4,3,-8,-3,5],[-5,1,-1,7,3,-3],[5,-9,8,1,-1,4],[2,-1,5,5,10,8],[-4,9,8,-4,-2,1],[10,3,-4,7,9,5],[5,5,-7,-7,7,8],[-10,10,7,5,3,1],[6,-7,8,-8,1,8],[-6,9,-3,-3,-1,-6],[-6,8,-10,9,6,1],[-8,-7,-2,-7,10,-6],[-4,5,-1,6,3,-7],[2,6,-1,-2,-6,8],[-3,-8,4,3,4,5],[-10,-3,4,3,5,4],[6,7,-4,-2,3,-10],[-6,4,1,-5,10,-4],[-9,10,8,-2,-1,-8],[5,4,2,4,6,-9],[-9,10,4,6,10,-9],[-10,-5,-1,8,5,-5],[-5,-4,-1,8,9,1],[-1,-7,3,-1,9,5],[-9,8,-4,-10,6,-8],[8,8,3,1,6,-6],[5,1,-1,4,9,5],[-6,2,8,-10,-7,4],[-8,5,2,-3,7,9],[-4,2,-6,9,-2,6],[1,6,4,10,-4,6],[-6,-1,6,-1,-4,4],[-9,-1,-3,1,-3,-4],[9,-9,-8,-9,5,-7],[1,-1,-2,2,-9,-2],[-10,-6,4,-7,3,7],[10,-6,-7,8,-3,-4],[8,-6,-9,-9,3,-1],[5,-9,-6,2,4,5],[-2,-3,5,-10,3,10],[-4,2,-4,2,5,-10],[2,8,-1,-9,-5,-8],[10,-3,-5,5,-2,7],[-2,-7,-2,7,-8,-10],[-8,-4,3,-3,-1,6]], dtype = "int16")#candidate|1829|(600, 6)|const|int16
call_1827 = relay.TupleGetItem(func_510_call(relay.reshape(const_1828.astype('bool'), [6, 5, 2]), relay.reshape(const_1828.astype('bool'), [6, 5, 2]), relay.reshape(const_1829.astype('int16'), [3600,]), ), 1)
call_1830 = relay.TupleGetItem(func_515_call(relay.reshape(const_1828.astype('bool'), [6, 5, 2]), relay.reshape(const_1828.astype('bool'), [6, 5, 2]), relay.reshape(const_1829.astype('int16'), [3600,]), ), 1)
var_1833 = relay.var("var_1833", dtype = "int16", shape = (600, 6))#candidate|1833|(600, 6)|var|int16
bop_1834 = relay.subtract(const_1829.astype('float32'), relay.reshape(var_1833.astype('float32'), relay.shape_of(const_1829))) # shape=(600, 6)
func_755_call = mod.get_global_var('func_755')
func_758_call = mutated_mod.get_global_var('func_758')
var_1841 = relay.var("var_1841", dtype = "uint16", shape = (416, 4))#candidate|1841|(416, 4)|var|uint16
call_1840 = func_755_call(relay.reshape(var_1841.astype('uint16'), [16, 13, 8]))
call_1842 = func_755_call(relay.reshape(var_1841.astype('uint16'), [16, 13, 8]))
var_1854 = relay.var("var_1854", dtype = "int16", shape = (600, 6))#candidate|1854|(600, 6)|var|int16
bop_1855 = relay.add(var_1833.astype('uint32'), relay.reshape(var_1854.astype('uint32'), relay.shape_of(var_1833))) # shape=(600, 6)
func_510_call = mod.get_global_var('func_510')
func_515_call = mutated_mod.get_global_var('func_515')
call_1860 = relay.TupleGetItem(func_510_call(relay.reshape(const_1828.astype('bool'), [6, 5, 2]), relay.reshape(const_1828.astype('bool'), [6, 5, 2]), relay.reshape(bop_1855.astype('int16'), [3600,]), ), 2)
call_1861 = relay.TupleGetItem(func_515_call(relay.reshape(const_1828.astype('bool'), [6, 5, 2]), relay.reshape(const_1828.astype('bool'), [6, 5, 2]), relay.reshape(bop_1855.astype('int16'), [3600,]), ), 2)
output = relay.Tuple([uop_1825,call_1827,const_1828,bop_1834,call_1840,var_1841,bop_1855,call_1860,])
output2 = relay.Tuple([uop_1825,call_1830,const_1828,bop_1834,call_1842,var_1841,bop_1855,call_1861,])
func_1863 = relay.Function([var_1824,var_1833,var_1841,var_1854,], output)
mod['func_1863'] = func_1863
mod = relay.transform.InferType()(mod)
mutated_mod['func_1863'] = func_1863
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1863_call = mutated_mod.get_global_var('func_1863')
var_1865 = relay.var("var_1865", dtype = "float32", shape = (9, 3, 9))#candidate|1865|(9, 3, 9)|var|float32
var_1866 = relay.var("var_1866", dtype = "int16", shape = (600, 6))#candidate|1866|(600, 6)|var|int16
var_1867 = relay.var("var_1867", dtype = "uint16", shape = (416, 4))#candidate|1867|(416, 4)|var|uint16
var_1868 = relay.var("var_1868", dtype = "int16", shape = (600, 6))#candidate|1868|(600, 6)|var|int16
call_1864 = func_1863_call(var_1865,var_1866,var_1867,var_1868,)
output = call_1864
func_1869 = relay.Function([var_1865,var_1866,var_1867,var_1868,], output)
mutated_mod['func_1869'] = func_1869
mutated_mod = relay.transform.InferType()(mutated_mod)
const_1930 = relay.const([[[-4,2,10,2,7,-6,5,-7],[8,-10,9,5,7,-4,-2,9],[-7,-5,2,-8,3,5,10,10],[-4,-9,4,-4,9,6,-10,7],[-3,-4,-8,-3,6,9,-4,6],[-1,-10,10,4,5,1,4,-3],[-8,1,9,7,5,-3,-6,6],[3,2,3,-3,7,-6,-9,7],[7,-3,5,-4,-9,9,6,-5],[-5,-4,-5,9,-10,5,3,9]],[[2,-8,4,-7,-9,-10,-2,-5],[4,-7,6,-2,-10,-8,-1,-5],[-10,9,-5,9,-1,-10,-6,3],[-6,-8,4,-3,-1,7,9,-4],[-5,5,9,3,-2,6,1,7],[-8,4,-7,8,7,1,-7,6],[-9,-1,2,-10,-10,2,6,1],[-4,-9,1,2,-3,5,-7,-2],[-2,3,-9,-2,-1,-10,-6,4],[7,5,-1,7,8,-5,-5,-9]],[[2,-4,-7,9,1,-9,-4,6],[-6,-9,-8,10,8,-10,2,1],[3,4,2,-2,-7,-1,-3,10],[10,6,-6,3,-4,9,4,2],[7,-1,-1,3,3,-9,-3,-4],[10,10,-8,10,-5,8,10,9],[5,-8,5,6,-7,4,6,2],[8,2,4,8,4,1,3,3],[1,6,-5,4,9,-2,6,3],[-6,1,-8,9,2,-7,-1,-5]],[[-4,-8,3,-10,10,9,8,9],[6,3,-7,-9,-6,6,-9,-2],[9,-1,-4,9,7,-9,10,8],[-7,4,-7,5,-9,1,-9,10],[-2,4,-4,-9,9,-5,-5,-6],[5,-8,-3,8,-3,2,1,-4],[3,-1,1,7,6,-10,6,-5],[8,-5,-6,4,1,5,-6,-7],[7,7,5,-9,-5,-4,-8,3],[-2,-6,-1,-10,-6,4,-4,-4]],[[-8,2,-2,-6,1,-9,-1,-5],[-9,1,-3,4,-6,5,1,2],[8,-3,-4,-9,-3,3,1,4],[1,1,6,5,-4,-3,-10,4],[-8,2,8,-6,2,-4,9,4],[-5,4,-10,5,-9,-9,-1,1],[-10,1,4,8,1,8,9,-10],[7,-6,-2,1,7,-2,-2,10],[-6,9,-2,-6,6,3,-8,-8],[4,1,4,9,1,2,4,5]],[[-4,-10,9,9,1,-1,-2,3],[-4,4,-6,9,-4,-1,2,-10],[10,3,7,-5,4,7,-4,4],[5,-5,-2,-8,-5,7,-7,-6],[-9,6,-2,4,8,4,4,-1],[-7,-1,3,7,2,-7,-1,8],[3,5,7,-3,-3,-9,4,-9],[6,-2,-1,9,3,4,1,5],[6,-1,-1,7,9,2,-6,6],[3,3,7,9,9,5,3,-4]],[[-1,-1,-9,-6,-4,4,1,6],[-8,-10,-2,-6,-2,1,-2,-4],[9,-3,6,9,-10,-2,2,5],[-10,8,3,2,-6,3,-7,-3],[4,5,7,-2,6,6,-3,-10],[7,4,2,7,9,8,-9,-2],[-6,5,-2,10,10,-8,8,-5],[-7,-7,6,-9,-6,-1,-9,-1],[2,10,-2,6,6,-6,-5,1],[1,3,2,2,-10,-4,-6,3]],[[1,-5,-4,5,-6,-4,4,-5],[3,-2,-9,-6,7,-7,7,4],[5,-10,-2,-9,-8,1,10,6],[-1,10,-1,10,-8,-3,-7,2],[-6,-1,9,-7,4,-8,-4,-8],[3,7,-6,-3,4,-7,3,-4],[-4,-5,4,-2,2,3,-4,-10],[-8,-2,4,7,1,8,5,-3],[7,-2,2,9,3,7,-2,-6],[-4,5,2,-3,-9,-9,10,-5]],[[-9,-8,-10,2,-3,-3,-8,7],[7,-9,5,-4,-2,9,4,-9],[-1,-4,7,6,-7,-5,10,-4],[-4,-6,4,3,2,7,8,-8],[4,1,8,-1,10,7,-10,5],[-5,-2,10,4,-9,-9,-7,-5],[-9,-4,6,1,3,-4,-10,-6],[-1,-5,-4,-6,-1,10,-1,1],[-3,-6,-10,5,-4,8,-9,2],[-3,-4,7,-9,-2,-6,-4,-3]],[[-10,6,-4,5,9,4,8,-1],[-3,7,4,6,-5,-10,-7,-5],[-2,9,1,5,-9,-9,5,7],[4,7,10,-3,8,-1,6,4],[-7,5,-6,8,-9,4,9,-3],[-5,-1,6,7,7,8,6,-3],[-4,-2,9,8,9,6,-3,-2],[-1,-3,-7,10,-10,9,-2,-10],[-1,9,-4,-7,-8,2,-2,-10],[-7,2,3,6,-2,-1,7,3]]], dtype = "uint32")#candidate|1930|(10, 10, 8)|const|uint32
var_1931 = relay.var("var_1931", dtype = "uint32", shape = (10, 10, 8))#candidate|1931|(10, 10, 8)|var|uint32
bop_1932 = relay.bitwise_and(const_1930.astype('uint32'), relay.reshape(var_1931.astype('uint32'), relay.shape_of(const_1930))) # shape=(10, 10, 8)
output = bop_1932
output2 = bop_1932
func_1936 = relay.Function([var_1931,], output)
mod['func_1936'] = func_1936
mod = relay.transform.InferType()(mod)
var_1937 = relay.var("var_1937", dtype = "uint32", shape = (10, 10, 8))#candidate|1937|(10, 10, 8)|var|uint32
output = func_1936(var_1937)
func_1938 = relay.Function([var_1937], output)
mutated_mod['func_1938'] = func_1938
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1166_call = mod.get_global_var('func_1166')
func_1168_call = mutated_mod.get_global_var('func_1168')
call_1946 = relay.TupleGetItem(func_1166_call(), 1)
call_1947 = relay.TupleGetItem(func_1168_call(), 1)
output = relay.Tuple([call_1946,])
output2 = relay.Tuple([call_1947,])
func_1948 = relay.Function([], output)
mod['func_1948'] = func_1948
mod = relay.transform.InferType()(mod)
output = func_1948()
func_1949 = relay.Function([], output)
mutated_mod['func_1949'] = func_1949
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1512_call = mod.get_global_var('func_1512')
func_1513_call = mutated_mod.get_global_var('func_1513')
call_1981 = relay.TupleGetItem(func_1512_call(), 1)
call_1982 = relay.TupleGetItem(func_1513_call(), 1)
output = call_1981
output2 = call_1982
func_1987 = relay.Function([], output)
mod['func_1987'] = func_1987
mod = relay.transform.InferType()(mod)
mutated_mod['func_1987'] = func_1987
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1987_call = mutated_mod.get_global_var('func_1987')
call_1988 = func_1987_call()
output = call_1988
func_1989 = relay.Function([], output)
mutated_mod['func_1989'] = func_1989
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1390_call = mod.get_global_var('func_1390')
func_1391_call = mutated_mod.get_global_var('func_1391')
call_2084 = relay.TupleGetItem(func_1390_call(), 0)
call_2085 = relay.TupleGetItem(func_1391_call(), 0)
output = relay.Tuple([call_2084,])
output2 = relay.Tuple([call_2085,])
func_2086 = relay.Function([], output)
mod['func_2086'] = func_2086
mod = relay.transform.InferType()(mod)
mutated_mod['func_2086'] = func_2086
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2086_call = mutated_mod.get_global_var('func_2086')
call_2087 = func_2086_call()
output = call_2087
func_2088 = relay.Function([], output)
mutated_mod['func_2088'] = func_2088
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1704_call = mod.get_global_var('func_1704')
func_1705_call = mutated_mod.get_global_var('func_1705')
call_2125 = relay.TupleGetItem(func_1704_call(), 1)
call_2126 = relay.TupleGetItem(func_1705_call(), 1)
func_1948_call = mod.get_global_var('func_1948')
func_1949_call = mutated_mod.get_global_var('func_1949')
call_2129 = relay.TupleGetItem(func_1948_call(), 0)
call_2130 = relay.TupleGetItem(func_1949_call(), 0)
func_1355_call = mod.get_global_var('func_1355')
func_1358_call = mutated_mod.get_global_var('func_1358')
const_2132 = relay.const([[6.468974],[-3.228196],[-6.528784],[8.719622],[-8.112476],[-2.833350],[1.186124],[-4.593182],[-7.826966],[3.992832],[0.867232],[8.713661],[8.335909],[-8.973227],[-6.700079],[-1.577485],[-9.361124],[1.558022],[-0.327423],[2.328447],[-0.701746],[-8.467685],[0.789777],[2.728086],[-4.115030],[2.898276],[-4.579228],[8.960940],[1.130725],[8.408512],[-2.671313],[-7.179755],[-2.299437],[4.867054],[-2.639845],[-2.347226],[-7.393280],[-1.693797],[7.509644],[9.513730],[-1.514209],[9.580985],[1.764279],[-1.154155],[-2.926492],[9.972414],[1.186391],[6.543022],[5.103466],[3.761702],[1.401780],[-1.511466],[-8.024804],[-2.493173],[1.411421],[2.956610],[-5.297221],[-1.363992],[2.430089],[4.945688],[9.379445],[6.965404],[-0.900771],[-7.616592],[7.938617],[2.597144],[0.189591],[1.436722],[-3.596056],[6.775298],[0.838576],[0.581512],[-2.346197],[-1.635695],[-0.974894],[9.156259],[-3.646498],[-0.905579],[-7.705297],[-7.073408],[-3.568359],[-8.525105],[-1.087761],[4.860081],[9.752281],[-8.875347],[8.642259],[0.464088],[3.147445],[-4.437314],[6.264071],[1.481551],[-3.945588],[-6.243289],[0.448687],[-0.236006],[-7.281788],[1.031201],[-8.303872],[3.007932],[-3.721028],[7.494221],[9.655219],[7.329726],[-5.807477],[-3.413211],[9.116381],[9.207069],[0.470279],[-0.942049],[-7.868491],[7.173477],[-5.574236],[6.598838],[4.375666],[-1.758810],[-2.318135],[-6.823747],[-5.570215],[4.287414],[5.572754],[-8.747652],[5.116505],[-5.251743],[4.348445],[5.519057],[9.063055],[-8.989533],[-8.153484],[9.072322],[-7.924141],[4.251211],[2.424499],[-3.605406],[3.764204],[-2.685918],[5.635933],[3.126118],[-4.919160],[-0.945417],[0.723363],[4.587296],[-8.359625],[-4.300829],[-4.227958],[-7.805292],[1.752819],[5.470061],[2.191138],[6.524646],[9.084956],[1.904126],[-2.962401],[-6.501350],[-3.282646],[0.786193],[-0.249992],[5.702093],[-1.290511],[2.999986],[4.021573],[-9.916437],[5.172230],[9.747656],[5.562240],[0.998510],[-8.152473],[-6.519960],[-0.680366],[0.874101],[5.865339],[-1.323285],[1.226203],[-6.451166],[1.251190],[-1.324837],[6.885493],[4.669642],[0.069574],[-1.556995],[4.933262],[3.229869],[-1.273104],[3.610248],[-4.954337],[-0.264687],[5.815152],[-6.838614],[-8.219815],[-9.246075],[-2.429341],[-4.768668],[9.193179],[4.670685],[-9.182516],[-5.262562],[0.803252],[4.608531],[7.949013],[-8.923425],[9.468497],[8.448198],[5.634239],[5.739588],[-1.053121],[8.128688],[8.116736],[-3.166802],[-2.708665],[5.656472],[7.676487],[-5.425208],[8.314662],[6.732934],[-4.262187],[6.645257],[-7.468965],[-8.851777],[-7.888454],[1.892961],[-3.709300],[5.689287],[-2.176561],[-1.202362],[8.792601],[7.820079],[4.149883],[-4.516703],[8.716424],[1.508560],[4.809517],[4.738600],[2.353485],[-5.953590],[4.192712],[-7.073037],[-2.848227],[3.297395],[-9.970832],[6.594084],[6.769975],[-2.894416],[8.639499],[-0.822602],[-0.657172],[-5.273368],[-5.078099],[9.732503],[-6.692696],[0.198266],[6.782118],[6.056759],[3.756862],[-7.483733],[-3.243058],[-2.583986],[-4.310327],[0.430706],[6.917839],[-1.066489],[6.073733],[7.617314],[-2.525636],[-1.859793],[-1.078431],[6.006710],[8.944020],[-9.261039],[4.203107],[-5.894381],[-8.304592],[-1.139004],[-8.812238],[-5.149896],[0.872043],[0.363584],[-0.894142],[-2.133223],[-8.243520],[3.749945],[-5.801356],[-1.668159],[0.528491],[-2.125013],[-6.172438],[-0.790705],[8.889946],[3.096921],[-1.050794],[6.311312],[4.202711],[7.363386],[-4.576350],[-6.142105],[-0.503224],[4.271197],[-5.301932],[-5.658572],[-1.615717],[5.553523],[-3.822839],[-6.128809],[-1.312012],[5.341504],[3.817790],[-8.376386],[5.875214],[-5.446230],[6.910604],[-1.554712],[-3.468768],[-7.067742],[-4.109999],[-4.035397],[4.206557],[5.514563],[-7.870534],[-7.002670],[4.143082],[0.672128],[-6.004283],[7.032614],[4.417801],[2.061384],[9.827642],[-4.651771],[-1.270255],[-4.275510],[-0.821825],[4.932159],[-6.890550],[0.447878],[-0.617076],[5.901272],[7.608838],[9.259838],[-1.083713],[3.184336],[-9.913295],[-1.640215],[5.767322],[-8.333562],[8.373432],[-8.751783],[2.376341],[-2.288124],[-4.154899],[-7.338734],[3.510268],[-2.289010],[6.815774],[-3.810502],[3.691891],[4.180905],[4.303108],[8.851391],[7.165830],[-4.558559],[-5.936291],[-6.343810],[-7.688725],[-1.768745],[-9.425003],[-4.733469],[-7.597786],[-0.210389],[-7.907827],[-6.042007],[-1.149878],[2.466993],[3.251075],[-6.125640],[-8.026626],[-7.089235],[0.190885],[8.286229],[5.775221],[-6.105302],[-2.861248],[5.121487],[-5.792809],[-2.073064],[-6.382014],[-2.950031],[2.114271],[-7.718086],[-2.223320],[6.221323],[2.285018],[7.789785],[-8.645833],[0.915911],[-8.571262],[3.672492],[-6.171594],[-5.398520],[-1.754764],[6.368331],[6.489811],[5.977518],[2.934775],[5.386207],[9.878080],[6.838380],[-1.776343],[0.080840],[8.370445],[-0.538616],[3.191057],[-2.775042],[-1.863285],[-2.953815],[-6.066509],[-0.095876],[5.578216],[-1.448878],[7.186837],[-3.769522],[-5.227018],[-7.356557],[-3.202714],[8.463027],[-9.797658],[-8.483024],[4.179384],[0.598262],[3.717704],[-7.092102],[4.703194],[2.882802],[-3.599059],[7.527540],[2.138865],[-8.591323],[0.638730],[2.336198],[5.707213],[7.876886],[-3.237462],[4.187575],[2.394548],[-2.935827],[-8.452907],[-1.370540],[2.420823],[-6.239844],[1.227569],[4.120034],[7.924397],[-5.457880],[-1.789126],[-0.168424],[-5.977100],[8.495488],[4.324055],[-0.966490],[3.777978],[4.720369],[0.560210],[6.926243],[9.837578],[-0.320836],[-8.992106],[-4.591227],[-7.666243],[-3.301084],[-4.096761],[-0.021411],[6.530671],[3.607349],[-5.499232],[8.477660],[-8.437713],[5.265638],[-6.476647],[-7.412420],[-9.564332],[-6.269699],[1.458832],[-7.060821],[7.112395],[-1.585402],[0.671567],[-6.389506],[9.978582],[-8.406909],[7.542676],[2.606094],[-7.812885],[4.033262],[-5.322976],[8.673277],[-8.651395],[1.197973],[-9.264152],[0.605156],[-7.503862],[7.432333],[-0.543649],[-9.278175],[1.046572],[8.918175],[-5.524613],[6.236557],[7.761947],[2.905592],[-5.755640],[-2.522498],[-8.007125],[-6.887753],[4.618502],[-5.129439],[-1.121921],[-2.920708],[0.485114],[-7.934029],[7.356789],[5.587732],[-0.304502],[-0.475678],[0.761440],[1.009408],[-3.944645],[8.862827],[6.679862],[6.015658],[1.134998],[6.007302],[4.016113],[6.778991],[-5.754195],[-0.687577],[9.071009],[-2.374658],[-2.657978],[-4.245134],[-5.529847],[8.000510],[0.635420],[-0.619874],[1.589269],[-5.524729],[2.408104],[-4.725888],[0.890334],[-5.552123],[4.352341],[3.580589],[-9.408683],[-6.975113],[-6.038784],[1.623799],[7.073550],[-1.349455],[8.872209],[3.876272],[-3.449549],[6.967865],[6.930017],[7.047212],[4.469762],[3.719522],[-1.355164],[-0.728287],[-2.757442],[0.474412],[2.896839],[2.632529],[8.075398],[6.481561],[-1.298457],[9.995960],[-2.954858],[0.932488],[-3.560836],[-5.195841]], dtype = "float64")#candidate|2132|(576, 1)|const|float64
call_2131 = relay.TupleGetItem(func_1355_call(relay.reshape(const_2132.astype('float64'), [4, 12, 12]), relay.reshape(const_2132.astype('uint16'), [4, 12, 12]), ), 1)
call_2133 = relay.TupleGetItem(func_1358_call(relay.reshape(const_2132.astype('float64'), [4, 12, 12]), relay.reshape(const_2132.astype('uint16'), [4, 12, 12]), ), 1)
bop_2136 = relay.minimum(const_2132.astype('uint64'), relay.reshape(call_2131.astype('uint64'), relay.shape_of(const_2132))) # shape=(576, 1)
bop_2139 = relay.minimum(const_2132.astype('uint64'), relay.reshape(call_2133.astype('uint64'), relay.shape_of(const_2132))) # shape=(576, 1)
output = relay.Tuple([call_2125,call_2129,bop_2136,])
output2 = relay.Tuple([call_2126,call_2130,bop_2139,])
func_2140 = relay.Function([], output)
mod['func_2140'] = func_2140
mod = relay.transform.InferType()(mod)
mutated_mod['func_2140'] = func_2140
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2140_call = mutated_mod.get_global_var('func_2140')
call_2141 = func_2140_call()
output = call_2141
func_2142 = relay.Function([], output)
mutated_mod['func_2142'] = func_2142
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1166_call = mod.get_global_var('func_1166')
func_1168_call = mutated_mod.get_global_var('func_1168')
call_2174 = relay.TupleGetItem(func_1166_call(), 1)
call_2175 = relay.TupleGetItem(func_1168_call(), 1)
uop_2186 = relay.sinh(call_2174.astype('float32')) # shape=(14, 14, 16)
uop_2188 = relay.sinh(call_2175.astype('float32')) # shape=(14, 14, 16)
func_755_call = mod.get_global_var('func_755')
func_758_call = mutated_mod.get_global_var('func_758')
const_2190 = relay.const([-9,4,3,-10,-2,-9,-7,3,5,-1,1,-5,1,-1,9,2,-6,3,8,4,-10,-8,-4,-10,-9,10,-9,8,-10,-5,-2,4,7,-9,3,-2,-10,1,-1,3,-2,-9,-7,-2,-5,-6,6,-7,7,6,3,4,-10,5,8,1,-10,-2,9,-4,1,-3,9,-1,-10,-8,-7,-4,9,-6,9,6,10,-6,2,-7,-9,-3,2,7,-1,5,-7,-4,-10,5,10,7,-1,-2,3,7,10,2,-4,-4,-4,-2,7,9,-6,7,6,-9,6,-2,-1,-5,-1,-2,6,9,-6,2,8,-1,4,2,1,-10,3,8,-3,4,1,-8,-4,8,-1,-3,10,3,3,7,-9,1,-9,7,-5,5,-6,3,-1,10,-9,-8,9,4,-9,6,-10,-1,9,10,-8,7,7,4,1,7,-8,-1,-6,-9,-10,4,-3,8,2,5,4,-6,2,-6,-5,-4,-9,2,-2,2,-9,1,-3,5,8,9,-1,-10,4,-9,2,-6,8,8,-2,-1,9,2,-10,1,-8,-9,-3,4,-6,10,6,-9,-5,-6,7,5,-1,10,-5,-1,-1,-2,7,4,10,-1,2,-5,-7,2,-8,2,8,-3,6,8,4,2,9,-7,9,-7,10,-6,3,-2,8,2,-9,1,-1,-3,-10,-6,-8,-7,-1,-8,8,-9,-5,-4,9,1,3,3,2,6,-10,10,-5,5,-3,8,-8,-4,10,-5,6,-8,7,-4,9,8,4,7,5,7,4,3,4,4,7,-6,-3,-5,-6,-7,1,-4,3,6,3,10,-1,-9,10,1,-3,10,1,-4,4,-4,9,2,1,-4,1,2,-6,-7,4,-2,6,3,-9,6,10,-10,2,-3,-8,-5,-10,1,8,2,9,-9,8,-4,-10,-2,-4,9,4,7,10,5,9,-6,5,10,-2,10,-2,-8,-9,-1,5,-9,4,5,9,4,5,6,-7,-7,-7,10,-3,2,-1,7,4,8,-3,2,2,-2,7,10,-4,5,-4,-3,-5,3,7,-1,5,1,-2,-1,-2,-3,1,-4,-8,8,-4,-3,5,5,3,7,7,7,2,4,-1,4,10,-6,-7,-4,-5,-1,10,-4,-2,-2,-8,8,9,5,-3,-9,-7,3,9,-4,-4,-5,-1,-9,2,1,2,-2,-5,10,-8,-3,6,-6,5,9,6,-4,-7,-9,-4,-8,4,-9,9,-9,10,9,-7,-3,6,2,10,-9,6,-5,-8,9,3,1,9,8,-1,7,3,-2,2,2,-7,8,-9,-6,-5,9,2,9,-3,1,3,3,6,4,-7,-9,-7,8,9,5,8,2,-5,9,10,-1,6,9,-9,-1,3,-3,-8,-8,-6,2,6,-1,-7,-8,-2,1,5,1,5,2,-1,-8,-5,-7,7,4,5,6,-10,10,5,10,-9,4,1,4,1,5,8,1,-3,-1,-2,10,-1,-4,10,-8,2,-7,-10,-9,10,-10,-5,-6,-6,5,-3,-10,5,-3,-7,-6,-5,-4,-1,-5,-6,-3,-6,9,7,-7,-1,7,2,-3,-2,-8,1,1,6,6,3,-4,8,8,-9,6,-6,8,-4,7,-9,5,8,3,-2,-9,-8,-3,-8,2,7,-9,-2,1,7,3,2,7,4,7,3,-2,-10,-9,-7,8,-10,9,6,-7,-7,-1,10,2,-10,-1,-4,5,-9,4,5,2,-9,-7,-10,-7,7,-7,-6,3,7,-10,-9,6,-9,-6,2,-10,-8,7,-3,8,-2,7,5,7,-3,4,2,-2,10,-5,-5,-3,-4,-4,5,-5,8,-7,3,4,1,-10,7,5,-7,10,-5,-6,5,4,-1,-7,2,-1,-9,10,2,-4,1,8,10,-1,-3,4,6,-8,-8,7,10,-6,2,1,-8,-5,-6,7,5,3,-5,-5,-6,2,-9,-7,-5,-10,-10,1,9,5,2,-3,9,4,4,9,-4,3,7,2,2,-9,4,10,-7,-9,8,6,8,3,1,2,-10,7,-7,-9,1,-3,7,8,-8,-5,-9,-4,-4,8,7,-9,5,4,6,-2,9,-4,9,-2,-9,3,-9,4,4,-9,2,-9,7,-10,5,2,9,2,-9,5,1,-5,-9,-6,-3,-5,4,-3,-7,3,-6,6,2,3,2,1,-8,-8,9,9,10,8,-7,-6,-5,6,6,9,2,1,-2,1,-3,8,-4,4,2,-1,-3,5,4,1,5,-7,-4,5,3,7,-7,-7,-3,-7,1,5,-3,-1,-2,-8,-4,6,-5,3,8,-5,-4,-8,-3,1,-2,-9,-7,-3,-3,-7,-8,-5,5,5,10,8,6,3,10,-5,-2,-9,-3,7,-5,-4,-7,-10,-9,-6,6,-4,-2,2,-3,-4,1,2,-8,-1,3,-10,4,-1,-6,1,2,6,2,-6,7,10,5,-2,-2,10,8,-4,-1,-3,-3,-10,-8,9,-4,-7,-6,9,-10,6,5,5,-7,4,-5,4,-1,-3,1,-1,6,8,-4,3,9,5,-9,-5,-1,-4,-6,-6,-5,8,-10,2,6,8,-8,-5,4,1,10,10,9,-10,4,-3,-5,-6,-9,-3,-8,-6,-3,5,1,-1,-6,-4,4,-9,10,-7,3,1,2,9,-4,10,6,-7,3,-7,8,5,5,-10,6,-9,-3,-2,-4,-8,-8,6,-4,-2,-2,8,-10,3,7,-2,3,3,-2,2,10,4,6,1,-4,9,-1,5,-7,9,-2,-6,-2,2,8,2,3,3,8,1,8,-8,-6,10,-3,-7,10,1,-6,8,8,1,7,-5,9,-7,-8,6,1,-7,-7,-1,-10,8,5,10,-7,-7,5,9,7,-1,-4,9,2,-10,-10,3,3,-6,9,-2,-6,-1,10,-5,8,2,-10,7,-6,-1,8,-6,7,-9,-7,5,1,-4,-9,-8,4,9,2,8,-5,-2,-4,5,-10,10,-7,-3,-4,-7,-8,8,-6,10,4,-4,8,1,-8,-3,-1,8,-7,-6,9,-4,8,-3,-10,2,2,1,4,1,-10,-10,7,-1,-10,7,-8,-10,-2,3,-7,-4,-1,-10,10,-6,-6,-3,6,-9,-1,-8,5,7,3,9,-3,1,-9,8,4,10,-2,-5,7,9,-10,6,6,-5,3,9,7,9,-8,-7,-3,-4,-10,-5,3,-6,10,-10,-5,-3,9,4,9,5,-10,-2,9,-8,-5,9,-7,-10,-5,1,-3,8,-8,1,-6,7,-7,9,-6,-9,9,8,-1,3,7,7,2,-4,-10,8,-1,1,7,-6,-8,6,2,-5,10,-10,6,9,-3,-8,9,-8,-4,-10,1,-6,2,-8,5,9,5,-4,-5,9,-7,-10,5,-1,-8,-2,1,-10,7,9,-3,-7,6,-9,6,10,7,2,-7,-2,5,6,9,9,3,-10,-4,7,10,-2,6,-10,1,4,6,-5,-10,-7,4,-7,-3,5,5,9,8,10,3,-6,3,-4,-5,-9,9,-6,-1,-2,-9,4,-9,-9,-4,10,8,-4,5,7,-7,9,-4,1,-7,10,1,1,-6,-8,7,10,5,6,1,4,-4,6,-5,3,-1,9,8,-4,8,7,-4,-5,-2,-1,-8,3,-5,8,-9,3,6,3,-1,8,-1,-9,3,-3,4,-8,-8,-4,3,4,-5,-3,10,4,-3,5,9,-10,-7,-7,-7,-5,7,8,1,3,1,-8,-10,-4,-7,10,2,-10,10,-10,-2,2,4,1,-1,3,10,3,-4,-6,6,8,-3,7,-6,10,1,1,-1,-1,9,-4,-3,-1,-6,1,3,9,10,9,2,5,-3,-9,9,7,-3,-6,-8,5,-6,-5,6,2,2,1,3,9,2,-10,-7,-8,-6,7,3,-5,8,7,5,-9,1,1,6,9,6,-1,-4,3,5,-3,4,9,-9,-8,-6,-9,7,-2,-8,4,-10,-8,4,-6,3,-9,-7,-1,-5,-1,3,9,-8,6,-1,1,-5,-10,4,8,-5,-6,-5,1,3,-2,-9,-10,-3,-4,-9,8,8,3,-3,-9,7,-3,10,6,-5,2,1,-3,-8,-9,-6,1,4,-3,-2,-7,8,3,3,1,-10,-4,-5,-3,5,-10,-10,6,2,3,2,4,10,-7,-9,-3,-3,9,-3,1,-6,-1,-9,-10,-6,6,5,-9,-1,9,7,10,6,-8,-2,9,9,4,-8,-10,1,4,7,-2,2,-10,-1,10,8,8,-6,-9,8,-2,10,-1,-9,-9,-8,7,-10,10,-5,-1,-6,-4,8,7,7,-4,-3,-9,10,1,7,-8,4,10,-8,-2,-2,7,10,-7,5,-3,6,3,10,-4,1,-5,1,4,-8,4,-5,-1,-6,1,2,2,-7,-6,8,-5,-3,3,10,3,-4,-10,-7,3,3,-7,-7,5,-5,-3,2,-1,2,8,1,-10,8,5,10,9,1,10,-6,-2], dtype = "uint16")#candidate|2190|(1664,)|const|uint16
call_2189 = func_755_call(relay.reshape(const_2190.astype('uint16'), [16, 13, 8]))
call_2191 = func_755_call(relay.reshape(const_2190.astype('uint16'), [16, 13, 8]))
func_1003_call = mod.get_global_var('func_1003')
func_1005_call = mutated_mod.get_global_var('func_1005')
call_2194 = relay.TupleGetItem(func_1003_call(), 0)
call_2195 = relay.TupleGetItem(func_1005_call(), 0)
output = relay.Tuple([uop_2186,call_2189,const_2190,call_2194,])
output2 = relay.Tuple([uop_2188,call_2191,const_2190,call_2195,])
func_2199 = relay.Function([], output)
mod['func_2199'] = func_2199
mod = relay.transform.InferType()(mod)
mutated_mod['func_2199'] = func_2199
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2199_call = mutated_mod.get_global_var('func_2199')
call_2200 = func_2199_call()
output = call_2200
func_2201 = relay.Function([], output)
mutated_mod['func_2201'] = func_2201
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1512_call = mod.get_global_var('func_1512')
func_1513_call = mutated_mod.get_global_var('func_1513')
call_2238 = relay.TupleGetItem(func_1512_call(), 0)
call_2239 = relay.TupleGetItem(func_1513_call(), 0)
func_1251_call = mod.get_global_var('func_1251')
func_1254_call = mutated_mod.get_global_var('func_1254')
var_2253 = relay.var("var_2253", dtype = "float32", shape = (96,))#candidate|2253|(96,)|var|float32
call_2252 = func_1251_call(relay.reshape(var_2253.astype('float32'), [8, 6, 2]))
call_2254 = func_1251_call(relay.reshape(var_2253.astype('float32'), [8, 6, 2]))
func_958_call = mod.get_global_var('func_958')
func_960_call = mutated_mod.get_global_var('func_960')
var_2264 = relay.var("var_2264", dtype = "int64", shape = ())#candidate|2264|()|var|int64
call_2263 = relay.TupleGetItem(func_958_call(relay.reshape(var_2264.astype('int64'), [])), 0)
call_2265 = relay.TupleGetItem(func_960_call(relay.reshape(var_2264.astype('int64'), [])), 0)
output = relay.Tuple([call_2238,call_2252,var_2253,call_2263,var_2264,])
output2 = relay.Tuple([call_2239,call_2254,var_2253,call_2265,var_2264,])
func_2274 = relay.Function([var_2253,var_2264,], output)
mod['func_2274'] = func_2274
mod = relay.transform.InferType()(mod)
mutated_mod['func_2274'] = func_2274
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2274_call = mutated_mod.get_global_var('func_2274')
var_2276 = relay.var("var_2276", dtype = "float32", shape = (96,))#candidate|2276|(96,)|var|float32
var_2277 = relay.var("var_2277", dtype = "int64", shape = ())#candidate|2277|()|var|int64
call_2275 = func_2274_call(var_2276,var_2277,)
output = call_2275
func_2278 = relay.Function([var_2276,var_2277,], output)
mutated_mod['func_2278'] = func_2278
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1166_call = mod.get_global_var('func_1166')
func_1168_call = mutated_mod.get_global_var('func_1168')
call_2280 = relay.TupleGetItem(func_1166_call(), 0)
call_2281 = relay.TupleGetItem(func_1168_call(), 0)
output = call_2280
output2 = call_2281
func_2286 = relay.Function([], output)
mod['func_2286'] = func_2286
mod = relay.transform.InferType()(mod)
mutated_mod['func_2286'] = func_2286
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2286_call = mutated_mod.get_global_var('func_2286')
call_2287 = func_2286_call()
output = call_2287
func_2288 = relay.Function([], output)
mutated_mod['func_2288'] = func_2288
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1704_call = mod.get_global_var('func_1704')
func_1705_call = mutated_mod.get_global_var('func_1705')
call_2289 = relay.TupleGetItem(func_1704_call(), 0)
call_2290 = relay.TupleGetItem(func_1705_call(), 0)
output = relay.Tuple([call_2289,])
output2 = relay.Tuple([call_2290,])
func_2312 = relay.Function([], output)
mod['func_2312'] = func_2312
mod = relay.transform.InferType()(mod)
mutated_mod['func_2312'] = func_2312
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2312_call = mutated_mod.get_global_var('func_2312')
call_2313 = func_2312_call()
output = call_2313
func_2314 = relay.Function([], output)
mutated_mod['func_2314'] = func_2314
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1736_call = mod.get_global_var('func_1736')
func_1737_call = mutated_mod.get_global_var('func_1737')
call_2319 = relay.TupleGetItem(func_1736_call(), 0)
call_2320 = relay.TupleGetItem(func_1737_call(), 0)
func_2086_call = mod.get_global_var('func_2086')
func_2088_call = mutated_mod.get_global_var('func_2088')
call_2330 = relay.TupleGetItem(func_2086_call(), 0)
call_2331 = relay.TupleGetItem(func_2088_call(), 0)
output = relay.Tuple([call_2319,call_2330,])
output2 = relay.Tuple([call_2320,call_2331,])
func_2338 = relay.Function([], output)
mod['func_2338'] = func_2338
mod = relay.transform.InferType()(mod)
mutated_mod['func_2338'] = func_2338
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2338_call = mutated_mod.get_global_var('func_2338')
call_2339 = func_2338_call()
output = call_2339
func_2340 = relay.Function([], output)
mutated_mod['func_2340'] = func_2340
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1704_call = mod.get_global_var('func_1704')
func_1705_call = mutated_mod.get_global_var('func_1705')
call_2366 = relay.TupleGetItem(func_1704_call(), 1)
call_2367 = relay.TupleGetItem(func_1705_call(), 1)
output = call_2366
output2 = call_2367
func_2370 = relay.Function([], output)
mod['func_2370'] = func_2370
mod = relay.transform.InferType()(mod)
mutated_mod['func_2370'] = func_2370
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2370_call = mutated_mod.get_global_var('func_2370')
call_2371 = func_2370_call()
output = call_2371
func_2372 = relay.Function([], output)
mutated_mod['func_2372'] = func_2372
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1512_call = mod.get_global_var('func_1512')
func_1513_call = mutated_mod.get_global_var('func_1513')
call_2410 = relay.TupleGetItem(func_1512_call(), 0)
call_2411 = relay.TupleGetItem(func_1513_call(), 0)
output = relay.Tuple([call_2410,])
output2 = relay.Tuple([call_2411,])
func_2412 = relay.Function([], output)
mod['func_2412'] = func_2412
mod = relay.transform.InferType()(mod)
mutated_mod['func_2412'] = func_2412
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2412_call = mutated_mod.get_global_var('func_2412')
call_2413 = func_2412_call()
output = call_2413
func_2414 = relay.Function([], output)
mutated_mod['func_2414'] = func_2414
mutated_mod = relay.transform.InferType()(mutated_mod)
var_2454 = relay.var("var_2454", dtype = "float32", shape = (16, 16, 15))#candidate|2454|(16, 16, 15)|var|float32
uop_2455 = relay.sin(var_2454.astype('float32')) # shape=(16, 16, 15)
uop_2458 = relay.acos(uop_2455.astype('float64')) # shape=(16, 16, 15)
output = uop_2458
output2 = uop_2458
func_2462 = relay.Function([var_2454,], output)
mod['func_2462'] = func_2462
mod = relay.transform.InferType()(mod)
var_2463 = relay.var("var_2463", dtype = "float32", shape = (16, 16, 15))#candidate|2463|(16, 16, 15)|var|float32
output = func_2462(var_2463)
func_2464 = relay.Function([var_2463], output)
mutated_mod['func_2464'] = func_2464
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2086_call = mod.get_global_var('func_2086')
func_2088_call = mutated_mod.get_global_var('func_2088')
call_2477 = relay.TupleGetItem(func_2086_call(), 0)
call_2478 = relay.TupleGetItem(func_2088_call(), 0)
var_2488 = relay.var("var_2488", dtype = "uint64", shape = (14, 14, 16))#candidate|2488|(14, 14, 16)|var|uint64
bop_2489 = relay.divide(call_2477.astype('float32'), relay.reshape(var_2488.astype('float32'), relay.shape_of(call_2477))) # shape=(14, 14, 16)
bop_2492 = relay.divide(call_2478.astype('float32'), relay.reshape(var_2488.astype('float32'), relay.shape_of(call_2478))) # shape=(14, 14, 16)
output = relay.Tuple([bop_2489,])
output2 = relay.Tuple([bop_2492,])
func_2503 = relay.Function([var_2488,], output)
mod['func_2503'] = func_2503
mod = relay.transform.InferType()(mod)
var_2504 = relay.var("var_2504", dtype = "uint64", shape = (14, 14, 16))#candidate|2504|(14, 14, 16)|var|uint64
output = func_2503(var_2504)
func_2505 = relay.Function([var_2504], output)
mutated_mod['func_2505'] = func_2505
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1494_call = mod.get_global_var('func_1494')
func_1495_call = mutated_mod.get_global_var('func_1495')
call_2512 = func_1494_call()
call_2513 = func_1494_call()
uop_2514 = relay.sin(call_2512.astype('float64')) # shape=(14, 14, 16)
uop_2516 = relay.sin(call_2513.astype('float64')) # shape=(14, 14, 16)
const_2525 = relay.const([[[-0.622470,4.342431,1.556627,-4.755702,2.122080,0.335846,8.462851,5.615338,6.535393,-8.190485,-9.910259,-0.294145,5.983630,5.199623,-0.300154,4.962785],[-8.536593,-1.025766,-4.786973,-0.515767,3.811092,-2.807826,6.184922,4.495275,-1.790437,4.566072,-7.724022,7.679366,8.911783,1.630322,1.767491,-5.989470],[-8.721077,2.232850,4.629675,-4.610526,9.378704,8.210677,9.819921,-2.043012,7.394374,-5.522193,5.186077,8.261367,-8.826665,-1.233802,-2.826743,1.477655],[9.905142,0.368426,7.655819,7.201144,-3.092753,0.093604,8.049790,5.359576,8.634215,9.315215,0.415460,-8.325766,3.121128,8.181491,0.972771,-2.094971],[5.174368,-9.135954,-6.955268,-7.463404,-8.422845,-2.353216,7.698185,-0.950105,9.896338,3.913461,6.399768,-5.625059,0.856425,-7.770647,-5.037861,0.541527],[-0.040675,-4.330334,-5.392845,1.374822,-3.517220,-3.101634,2.068501,7.895603,-5.688682,-4.679658,-2.218796,5.579345,-4.912862,-0.612973,-8.051503,4.212183],[1.719913,8.611975,-0.220268,8.091658,-9.844184,-3.061611,-1.736728,-7.663667,-7.622080,-5.551137,4.209693,-3.764275,1.407412,5.060396,1.214475,-0.480431],[-7.342033,-9.849939,-9.212574,-2.021978,2.783647,7.338871,-2.623070,3.029787,-3.538678,0.171846,8.880557,7.268967,-3.298669,-1.209354,6.411899,4.933998],[2.795699,-5.490470,6.727697,-9.492506,1.853862,-6.694234,-5.160009,0.831199,-7.691631,-3.230939,-0.736878,-9.179543,-1.879758,-9.281185,-4.127035,-7.588251],[0.687373,6.433749,3.357336,-4.080953,6.239427,-5.452661,-7.606731,-9.033517,-7.873119,-7.483350,1.321497,4.853336,9.985792,6.286971,6.003149,3.865031],[3.405677,8.046462,8.494200,3.592257,8.878416,-9.626266,2.673126,-6.226511,6.072851,1.023210,3.670500,2.252070,-3.303735,-2.726973,-2.517499,6.057021],[7.566599,-2.490231,-7.632843,0.006650,3.413368,5.227987,8.446255,-9.082504,-1.570926,5.913608,-6.836778,-7.784748,6.903082,8.291347,0.409050,1.586140],[9.341194,5.459211,-4.669455,0.315858,-4.616277,-0.088719,-1.948037,-6.084810,-1.775132,0.392565,-5.184805,-5.501914,-9.701130,1.067464,-7.997584,-7.173800],[-0.235801,4.238194,1.201032,-3.227037,3.790786,8.434371,5.200566,-7.044527,0.126637,5.041737,3.651237,3.200620,4.353067,6.377435,-8.713889,0.161608]],[[5.130375,4.998287,-0.053298,-3.858426,-9.941227,1.400759,-1.086233,-8.180798,6.944971,9.173037,3.283930,7.903101,-2.971009,-1.568990,-1.885772,5.336370],[-7.576232,-5.218560,4.021867,-0.202883,-3.695406,3.964135,5.136283,-0.429317,3.644277,3.835464,7.286891,2.901049,-2.076491,-5.569718,-2.744388,-1.717614],[-8.768347,5.038673,-0.207208,2.198473,6.665608,2.577385,-8.582341,-4.531261,3.506728,-5.505424,-0.445219,-2.181680,3.685221,3.044006,2.481832,-9.737284],[2.235204,1.379855,0.511928,-7.754102,9.200250,8.646044,-3.690850,-9.856591,-9.769606,-9.275356,-1.187701,8.433853,7.419236,8.228687,-9.337185,-9.025015],[5.039077,4.447429,-4.142519,-0.938706,4.938649,-7.776364,3.629262,-9.229319,7.586025,-6.704361,1.174029,-5.910740,-7.407200,7.998081,6.772127,-9.625904],[3.560633,-6.221115,-4.836893,-9.849770,-3.992672,3.712677,9.072944,3.247271,-4.541806,-2.494687,5.800294,-6.446896,9.711672,2.915157,3.411936,2.674767],[5.169398,-4.232531,-7.442018,-3.326983,0.655170,-2.175387,6.516017,-8.105385,6.692905,0.391295,3.218906,5.832663,-0.518513,5.547743,-7.315906,-7.611988],[-8.862796,1.760169,6.202121,-9.065221,1.838891,2.198440,-9.146815,-8.573937,8.889922,3.815751,1.893571,2.545954,7.740852,6.974560,8.111889,5.607431],[9.724938,4.627237,-9.300135,0.140523,-3.714292,-9.395884,-3.828252,1.584769,3.861284,-3.239891,6.662883,-9.175662,8.776804,-9.086258,6.788148,-3.190820],[0.464726,-2.146868,1.512517,3.452181,-8.911617,3.940477,0.802967,-3.031560,3.449117,4.360639,-3.212380,6.986054,-9.074850,4.021666,0.307489,-0.631986],[3.305081,7.295674,-8.772275,-3.037373,-2.553125,-5.946688,-7.819653,-2.372452,8.039142,-1.708882,3.306205,7.787380,-0.929108,-2.185158,9.352127,-2.027642],[5.495547,1.062516,-8.399195,-5.778854,6.599572,-5.833383,-2.478975,4.246297,0.774098,2.431959,3.850132,-3.659830,4.973997,-2.506698,6.778521,6.359072],[-1.726107,-8.445313,5.903249,5.605763,5.426744,-1.778219,5.219488,-3.613355,-4.621779,9.545737,-9.515570,2.702381,-5.201700,-8.487711,-8.729472,-8.215316],[2.550512,4.913298,-6.779317,8.619543,0.627945,3.300014,-2.328109,7.708555,2.946436,-6.021198,-5.328339,-3.838094,1.087238,-8.137110,-9.365251,-6.427028]],[[5.034229,-8.905084,3.961206,-0.264329,-5.866748,6.987460,1.323172,4.809496,0.058252,-1.471622,2.480515,0.150106,-8.048676,-2.113637,-9.925702,-3.261995],[-7.001287,3.060433,-7.489818,-5.290528,8.115159,5.489532,-9.419074,-4.895606,3.324209,7.772474,5.818445,1.818800,-4.162338,-9.895834,4.704887,1.429481],[-2.877500,4.665225,-1.777752,6.642616,0.372629,-7.570177,2.042291,2.538465,3.127935,6.892730,5.624073,-1.052543,-2.990011,1.661636,7.704361,5.044800],[4.385698,6.168688,0.900176,-2.170831,4.941644,-4.548123,2.228429,5.121365,9.793894,8.522745,-9.979022,-4.658539,-1.657939,-5.978692,-6.415210,7.782131],[-1.770309,8.074975,7.510349,-2.902529,-4.614439,8.043490,-7.436346,0.934416,7.308959,0.973167,-9.866957,-1.516438,4.915632,5.471432,6.851205,7.929815],[7.373131,2.801675,-4.626160,7.410987,-1.467028,-9.527731,-3.931540,-1.774562,-4.240879,2.165968,-5.976411,-4.558167,-9.955734,8.060129,-1.714730,2.933922],[-2.361205,8.288270,-6.431552,7.515903,9.512680,7.365820,7.929009,-8.624158,6.064083,4.360967,9.841432,8.341236,2.925837,4.643419,-4.029100,2.972210],[9.586468,3.184108,9.344925,8.034347,4.568753,-0.945944,-4.746475,-5.392399,-0.454818,3.769898,7.073724,9.510113,-0.036962,2.108052,6.412294,0.510241],[2.549176,-5.747576,5.949708,9.876509,8.262647,-4.945713,-9.367074,5.898390,-2.448698,8.581515,-8.815230,-4.805155,6.862743,4.064803,-2.772457,-1.497303],[3.032553,-2.405930,-8.669956,3.540272,-8.854061,3.790798,3.879549,2.087993,-4.971231,1.684397,-8.088368,3.950674,7.311481,-0.591993,5.897668,9.366190],[-2.812148,4.878232,-3.668537,-9.072575,-1.201258,9.897467,-6.408593,2.720585,9.356509,1.236420,-7.471985,-2.667958,9.081235,9.761964,4.664968,-3.972880],[3.200215,-0.650199,-5.666340,-7.726082,-1.001164,-2.034057,-3.492261,9.151364,2.126230,2.105100,6.074684,0.067615,6.368504,8.560073,-9.904438,-9.491680],[-0.429766,9.757645,1.823682,2.989245,2.680942,-1.788145,-9.105307,-5.242453,4.436374,9.796848,5.814964,0.771751,-6.431437,1.891196,-2.769082,-4.549927],[-0.697181,-0.519147,9.620025,0.041759,2.189660,-9.960582,-2.177625,1.089773,2.752088,-9.215470,-0.375617,6.236545,5.697191,4.072956,-1.014413,-6.665071]],[[9.687622,-4.669048,-6.952172,9.636258,4.404875,4.789438,-4.183595,3.366828,-0.591445,-4.347426,-7.169047,0.967771,-7.866617,2.091463,-4.349009,4.992104],[-7.611708,-0.191747,-7.018684,7.429974,7.203519,5.400040,0.176739,8.265326,-2.866266,-6.132322,7.231961,-8.471710,-7.098411,-2.401705,8.015587,-6.756171],[2.138561,1.511126,2.907968,-1.408241,4.193494,-1.188007,-1.989153,-5.586129,-3.861220,6.345667,-2.355739,4.183920,-2.347796,3.893808,-7.798704,6.113269],[-9.607237,0.721709,3.223996,2.737562,9.096831,-3.041749,1.697206,-5.405091,3.496597,-3.475173,-3.201210,8.943051,6.962990,-5.703783,-3.720219,-3.937738],[-1.687717,-2.331496,3.763136,9.427222,-7.998487,-5.074670,-0.338964,6.973677,6.669774,-8.851712,4.417273,-9.219279,-7.913253,-0.009434,-6.604177,-9.805522],[-1.217999,1.524656,-0.757945,-2.773402,-2.342890,-1.054234,-0.597071,-2.024030,8.994828,7.530349,-7.141607,-5.381924,-1.655270,-0.802706,9.230808,-9.077555],[6.042015,9.161638,-8.716770,-0.534273,-2.413097,3.942264,-2.358346,-5.515255,-5.530488,8.341744,8.288092,-5.100447,-1.613144,6.369585,6.442335,-7.993533],[5.875923,-3.333019,8.239258,-2.881345,1.132571,-2.119347,7.228081,-9.712348,-9.272209,2.969743,3.145269,-1.886288,-7.469149,0.996044,8.704007,-1.087627],[5.265131,-1.427013,-4.332520,-6.610368,-9.362145,1.249626,-5.552109,-6.657397,1.480763,-3.528003,9.938653,8.181741,-0.116214,7.949395,-4.872916,-3.044438],[-5.151753,-4.624722,5.374517,-9.145362,-1.685437,-1.761050,5.346670,4.579177,-6.375037,7.837633,-3.875058,8.567814,0.976184,-8.698207,-0.790581,4.975504],[9.048330,9.950640,5.931733,7.017076,-7.475492,-4.807713,-6.561991,-4.886380,5.907088,-0.677079,-8.243984,1.667180,-1.628289,8.752042,-9.645762,6.056058],[9.430648,2.306407,-5.516936,-3.263601,-8.628694,9.781070,-5.495674,9.000995,3.535654,-1.177487,5.020171,-9.808243,3.463911,-6.082431,-2.578288,-2.262190],[8.846891,-4.391911,-1.199696,-7.724766,4.048746,6.417219,9.709478,-9.593938,-3.509546,5.085093,-2.740376,5.968798,9.828630,2.318770,2.600433,0.263932],[2.283561,-6.832081,-1.496038,-5.157086,-9.119497,-6.558588,-5.277275,1.965980,2.250651,-1.075304,-2.628520,6.550303,-1.268426,1.526636,-3.704740,-0.338402]],[[3.570862,5.332480,4.597334,4.748822,6.061604,3.516193,-4.549949,-1.973392,9.154976,5.296824,-9.111116,-9.743087,-0.993060,-2.662365,-2.774437,-4.818628],[-4.719212,-1.893431,-2.550350,2.494735,6.409440,2.681672,2.705764,9.042796,7.114066,-7.762556,6.669719,-3.918645,0.900981,9.570608,0.271157,5.994385],[4.313585,5.815133,8.011640,-3.457607,5.522492,1.162212,4.484975,-0.668511,0.461590,1.048085,2.102941,-5.356151,-5.651029,-3.430981,-1.178217,5.116095],[3.173591,6.069955,-9.618730,5.695739,0.203230,-5.023541,3.018785,3.633817,-2.373063,-9.376388,-1.446361,-3.758771,-8.634278,-6.080276,-4.756654,-2.301177],[-8.377529,-8.632502,6.254121,8.535621,-4.022648,-2.430420,-3.425611,0.725837,-5.211923,-2.196906,-5.617994,0.328078,9.095973,0.181132,-7.237033,-0.429787],[1.458434,6.656541,-0.422054,-1.402800,-2.562677,4.664013,-8.771779,2.874179,-5.244666,-9.443361,-6.467614,9.033285,5.267810,1.499401,-9.541982,2.666851],[0.422945,7.885134,6.922605,-6.202148,-5.030564,-5.924703,-2.505059,0.516659,2.852053,-1.786035,7.675428,5.178043,-3.529925,-7.780852,-5.806170,6.473168],[-5.513720,-8.399627,-4.865675,-1.838018,-4.035052,6.989435,-2.692536,1.299944,-9.591508,-8.983117,1.775666,2.974733,-8.738262,-6.216234,7.846655,-8.817760],[-1.742930,8.410273,-6.914013,2.078306,-8.587183,4.964429,8.037707,-4.719938,-4.926522,-3.548828,-1.060395,-1.263531,0.940529,-4.895984,-6.304174,6.993837],[5.122681,3.722450,-7.221469,-2.234277,2.740973,2.029924,-6.715600,5.721801,-0.077389,-5.410073,0.415735,-0.782957,1.172114,9.842479,6.160024,7.079374],[9.971972,-1.400544,3.483906,-3.865393,3.478595,-7.849230,0.338639,-4.039126,3.054808,-9.133059,1.138098,9.257502,0.343755,-6.552940,4.141278,2.327171],[-0.778482,-9.745277,-7.919436,9.534042,7.598243,2.273389,5.884173,-6.693428,-4.116261,7.701957,4.865115,0.247689,4.015223,-3.633704,3.407019,4.322212],[8.012292,8.467775,-5.369946,7.421997,-7.763992,-6.036323,1.721802,-0.530325,5.280285,3.770367,0.146787,-7.368874,9.594205,4.317333,-7.847642,-4.376455],[2.952856,-6.135227,-5.569278,1.458587,-1.271507,-4.989968,-7.935239,-1.147187,-0.705073,7.755702,-6.164252,-7.291756,-5.302834,-7.612605,-7.721689,-1.593904]],[[-9.079740,7.847980,9.903960,-5.465331,-8.363652,6.531650,2.914325,2.035547,1.226416,1.244775,-2.650172,7.976623,-7.974920,2.572973,1.688649,-4.893878],[-4.887330,-5.894102,-7.984683,-2.198419,-0.446558,7.538176,8.029912,6.966600,0.147854,-1.006188,1.584733,-6.068405,9.609424,-3.547975,-7.268476,-2.763911],[7.560574,-5.623957,4.097549,-1.925367,-3.870484,-3.298665,-3.652946,-0.231300,-5.661752,4.538381,5.005243,0.307752,-9.614391,1.929937,-0.129938,8.487475],[-7.589427,6.567701,-5.461602,2.081056,-1.700715,-9.814137,-4.136222,-0.858868,8.153409,-6.338425,-6.830237,3.227158,8.920257,5.612504,8.979950,5.388781],[-4.702687,1.023559,5.045183,0.624679,-1.311535,-7.817205,-5.805077,-4.499973,0.851610,-9.954305,-3.275194,-6.142929,-1.918277,-3.275824,-7.657509,-9.459065],[-7.777826,-7.502580,-3.391485,1.808457,3.101405,2.475266,5.055925,-3.414897,-3.651505,-6.750319,-9.259571,5.625482,-0.803542,-6.925228,8.358265,1.644202],[6.137014,8.514350,0.201076,-3.860074,2.269792,-2.573050,4.109727,1.599340,-8.192027,9.270173,-5.216691,7.812853,-6.222793,3.860601,-2.067109,6.995653],[-5.751319,-1.014648,-8.794695,2.756867,-7.727359,-9.210359,-4.761488,-9.619031,8.782318,3.336774,-4.343199,-7.079860,2.670324,-6.739057,-5.473365,0.911170],[4.820141,-3.570088,-2.092683,7.969544,8.392829,1.214620,0.037055,-4.993474,7.660113,-9.514178,8.124386,-7.368060,-8.669573,-7.965183,-8.021594,-1.031743],[8.388424,5.340808,-6.109060,2.983341,-1.269367,2.196047,-3.153101,-8.180624,5.424894,9.989291,7.716334,4.250816,-1.374358,-6.728818,2.579661,-7.594433],[6.314937,0.106004,-6.992431,-5.298503,6.948733,-6.031114,5.144508,6.963714,5.618670,9.429253,-8.324746,5.311529,3.903105,8.124868,-7.980618,6.474854],[-8.585098,2.381230,9.217489,8.818119,3.203463,-6.942143,1.041924,6.201497,-8.299831,0.771338,-4.609868,-2.073299,6.552079,-2.775292,4.265321,8.608503],[-0.097134,2.583559,-5.259137,-9.651785,-5.686388,3.249681,-6.868926,2.454470,5.471814,5.109431,8.841881,7.216098,-5.031723,-5.867328,-8.068143,9.295940],[-9.978763,-8.457191,3.976045,-5.606481,-7.279119,0.147385,-3.657733,5.766391,-8.761299,3.725418,-3.738193,-4.863581,3.443520,9.014293,-8.082026,-7.731936]],[[0.306999,-6.154914,-4.039043,-1.987951,-3.760907,4.292403,-2.526576,-7.809626,-4.355256,-4.303743,3.925417,8.503481,4.886572,-6.664618,2.308957,-8.239761],[0.820924,1.007911,0.798628,-7.412175,-5.690792,7.157203,6.767255,4.001205,4.839831,-6.590629,-0.476325,5.948440,-6.877269,6.319860,7.009128,-0.424247],[-6.281605,-2.368585,-9.658956,3.958195,-1.572947,1.113654,7.790075,7.437980,0.088103,4.139534,7.209059,8.635008,-5.010023,4.002300,0.263764,-2.381253],[-5.182200,0.556892,-9.297143,0.866547,9.739775,-3.133148,0.204246,-0.293329,0.968046,-1.810923,-1.544335,4.229852,-6.146580,-4.291180,-1.703793,-9.169343],[7.926396,3.856042,-3.797059,8.019814,-8.367976,-8.819443,3.641992,-5.344801,-9.836055,-9.844325,-7.352359,6.601795,-5.035910,-3.054956,7.656460,0.540015],[4.676554,-2.663216,6.446313,9.145385,8.867967,7.567927,-9.141251,2.328038,-8.796480,-7.322154,4.800517,-7.386158,9.128435,1.263512,1.378195,-3.660334],[0.608514,-1.876310,-8.962964,-8.417338,-4.856939,-0.264084,3.139123,9.216524,2.032463,7.944564,-5.327851,6.845398,-9.443471,-3.426799,8.781617,-1.125143],[4.570451,-2.507860,8.561041,7.372426,-3.924863,-3.178297,9.987971,-4.506220,0.048283,-5.811208,4.827608,-0.206638,-4.283523,3.999879,3.985593,-6.517874],[-2.383293,-9.234530,-8.193461,3.634948,8.607594,-8.568864,-7.932498,-4.132078,-1.276121,4.224710,-2.805127,-8.512405,-0.883285,-0.164548,1.446157,-1.121234],[9.862727,2.720848,-8.774229,7.643183,6.919069,-3.580435,-5.789424,1.284440,2.288351,-0.187976,-7.820874,-3.911074,-5.195479,-2.961956,-8.972462,3.363494],[2.684035,3.733369,-8.836591,-6.714427,-5.330388,5.977314,8.658693,-8.335437,1.839249,-4.318692,7.963646,-5.879739,2.922261,3.267895,4.711180,-7.226647],[-5.261174,-6.997788,-8.183275,-5.236487,8.416075,3.177088,-1.006226,-7.263328,-5.270286,-3.041293,0.747212,8.072514,3.340796,-1.080217,1.162800,-4.009493],[-5.642229,-6.873005,9.991761,-0.890402,-1.958468,1.827065,0.784853,-0.047615,-1.348176,7.816145,8.916118,-4.684553,4.191919,1.658051,3.411980,-0.680861],[-4.758706,-2.428937,4.773670,1.976677,-2.437425,7.756212,-7.580713,6.537704,-8.890837,-7.723452,8.615860,-1.906220,-9.313039,-3.523526,5.918221,9.826694]],[[9.935883,1.919118,-0.177765,7.429196,6.610729,-5.779642,-6.062253,-9.988016,-6.144226,0.142769,-6.232274,0.859190,0.577390,-8.378754,-8.666999,9.927078],[-9.512164,3.151133,2.219899,4.740314,0.879613,-0.597005,-4.008869,-7.792755,1.187195,-4.160841,0.737943,-9.371912,1.796383,-2.684599,0.289604,-5.877392],[-7.586598,-0.298961,-4.668072,9.604496,-7.891806,9.319652,-0.273138,2.851811,6.986363,2.611913,5.302357,-6.799089,5.153086,4.256034,-5.871716,-6.221468],[0.693037,-9.892324,-2.039438,8.112012,5.616108,4.033155,-8.703915,1.000712,3.768807,-6.039448,5.874586,5.900899,8.313587,7.655088,-5.497609,2.448487],[-5.939678,7.773603,1.223935,7.076233,-2.643690,-2.536179,-5.286631,-5.951040,5.198896,-3.002964,2.626975,8.186438,-2.837680,-7.332027,-0.099851,-9.123360],[5.787144,1.144786,-5.780816,3.188159,-4.715331,9.763924,-3.124778,-9.553042,0.211697,-6.244319,-3.870945,1.285653,-8.991896,-4.759610,4.570157,0.939855],[-3.942692,7.496569,-1.651860,9.446962,1.249713,2.139560,0.700750,2.740169,-7.707300,4.740824,7.491683,-5.158528,0.729678,-4.346063,9.513547,3.056653],[-8.381681,7.138978,-7.204433,0.914892,7.176220,1.162273,-7.744787,9.334532,-9.303471,-2.015317,-9.084308,7.264540,0.125074,-2.536306,5.999397,-1.513372],[8.994283,-7.101698,5.120427,8.639246,-8.278626,4.223945,2.414317,-5.933634,9.621076,8.765069,3.988674,6.566134,-1.879179,4.857827,-8.643012,8.247814],[4.088205,5.317811,-6.254741,-9.176989,1.778421,2.196896,-3.599764,-8.840361,-2.670550,3.690773,-7.561926,-0.936669,9.386525,-6.721528,-2.464029,6.640525],[-8.267220,-8.525706,5.313458,1.687693,-1.479417,2.030173,-5.825897,-8.828758,2.645534,-0.684579,9.848418,-2.526135,6.655940,-0.640611,-9.436552,0.722038],[-5.855507,5.024691,-9.360024,-1.899258,-2.223644,-9.408572,9.263506,9.464122,-1.937688,-1.039116,7.884102,-0.860176,2.996398,-2.919670,-7.011444,-8.315690],[6.470873,-7.333034,5.076381,-5.664566,-4.787413,-6.138705,8.868238,-8.743837,-4.117807,9.435056,1.964882,-8.852165,-2.314882,7.313809,-4.449840,0.439063],[8.835452,-4.418935,-7.087049,-6.066929,9.950669,-3.718721,9.111978,-6.677117,4.764168,5.700174,-3.387454,-7.749955,-0.194194,5.000424,3.287887,-2.695208]],[[2.192955,3.473925,5.503847,-7.778100,3.921822,4.832768,-6.335369,-2.488432,-8.886957,-9.240286,4.917152,8.081076,-4.123324,-1.310853,-0.577792,2.326726],[8.248638,6.042848,-0.817841,9.897253,9.131370,-5.875232,3.552786,6.687774,-8.678689,-7.032574,-6.140986,7.625235,-2.806424,3.119142,-3.349430,-2.524472],[9.676641,-1.996399,-1.380431,1.608000,5.933634,7.297275,-8.661065,-1.397919,-1.315819,-4.511096,-0.580605,-5.575785,-8.594803,4.637802,-0.947897,-3.550514],[-9.091019,3.758231,3.707635,-7.090944,9.247096,9.277380,-0.236025,-9.271830,-2.187575,-8.704853,7.761393,4.005646,-0.197678,-5.832877,9.165046,-5.687069],[-3.353238,-0.890591,8.061897,-0.156640,-4.782611,-0.466498,1.394879,6.096324,-3.969285,-8.772568,-1.966694,6.271054,8.502969,3.303524,-1.647318,-7.023098],[-7.449825,-0.008630,0.934131,-9.406057,-6.702287,-9.020919,4.432810,9.642697,5.798719,0.789294,-0.626199,-5.548249,9.267818,-3.225116,-1.637418,-9.293748],[8.920496,-7.996353,3.614345,-4.367325,6.785053,7.874390,-0.340248,-6.060190,-7.796610,-6.711508,-6.321231,-1.274458,-4.923369,-8.988480,0.773094,1.449385],[7.355131,3.515822,-1.911296,5.880955,4.319606,0.040513,1.644429,7.098547,0.068997,-3.809235,4.832017,9.417712,7.730679,-4.529839,-2.106041,9.993006],[2.236774,-3.700797,-8.049096,7.176438,-8.230597,-4.774735,9.458937,-3.262614,3.253919,-1.411262,9.815508,-1.593722,7.936164,-2.598397,0.643181,-9.395758],[-7.194021,-9.356065,-0.910887,-4.496480,-3.835473,-6.717357,9.977574,3.658351,-8.418065,7.993019,7.238559,-7.728050,-0.185027,1.873498,9.048564,-7.083212],[-8.178943,-9.065161,-3.981619,-2.768383,9.763254,-4.437471,8.673885,2.609247,-4.681088,8.773455,1.268121,-1.050608,-4.785524,0.201775,0.140032,-0.321738],[-4.254491,-4.401918,6.138665,-8.836375,-6.931313,7.973420,-3.658541,7.871698,1.898977,-1.644467,-2.957492,-1.786831,-3.775479,-5.968190,8.379179,-1.748562],[-2.021416,9.399191,4.986830,-4.970657,-8.561958,1.569631,4.786695,7.621770,7.805218,8.832887,4.782617,5.436460,1.525882,8.952412,-4.506041,-6.192519],[8.071385,-3.198733,8.697405,-2.650515,1.952571,-8.108359,-3.980629,2.375424,-2.090682,6.569597,3.462687,4.673489,0.072839,4.861021,-9.561990,-1.274857]],[[6.673017,-0.759662,8.174142,5.656563,-4.538780,9.862049,1.973022,4.106561,1.500390,2.163760,4.801338,2.035852,-7.954099,-4.013841,2.098253,-6.824562],[4.769917,2.831269,1.585000,0.523336,1.806943,-8.810418,-8.687907,-9.179575,-8.733672,-1.282700,-1.171921,-6.072440,-2.632450,-8.442342,1.719650,8.977195],[4.114452,-2.253157,8.965830,4.419016,-1.054192,1.969536,2.264992,7.186910,-4.898225,7.307107,4.531857,7.515838,-8.202213,1.765961,-9.068941,-3.652865],[-7.482488,-0.430516,9.619286,-7.931642,3.528459,-4.476606,1.649502,-0.047501,1.837409,-5.257718,-2.200745,-6.246801,4.805563,-9.399034,-7.233453,-9.666410],[7.366109,-6.775269,-8.102650,9.264355,1.021646,-0.589908,2.512283,-2.623455,-1.243988,0.753310,-1.421746,8.144919,-3.182988,3.332808,-4.307289,4.125973],[-3.365465,-2.221878,-4.793053,-6.056109,2.119352,-5.305114,9.501636,5.423912,1.200339,-4.103145,1.109193,-2.389917,-8.642214,-6.505013,8.588739,-2.839154],[-7.395123,-2.519632,-7.872053,-6.325283,9.591734,-6.491526,5.440396,-6.440892,0.917180,-7.475165,-3.731716,-7.397175,-2.231666,2.953502,-8.304179,2.621946],[4.979173,4.503207,-5.017524,2.785756,-9.271494,-4.116495,-1.484123,-7.804062,-6.169658,-7.969721,1.071284,3.203933,3.765200,1.324058,-3.922678,-7.101897],[-0.072455,-3.981587,8.652953,-8.977401,0.960868,0.789656,7.894317,2.754526,-2.874695,-2.548420,-8.398900,0.045660,3.713960,6.901557,9.219708,5.357813],[5.650746,-3.305262,0.322148,-1.770568,-9.135774,-7.378636,-7.686179,3.441799,3.728979,-7.060235,1.798115,-6.806851,8.527300,-5.193026,9.661246,-4.061641],[4.913866,-9.798954,-6.287184,-5.840617,-1.825262,-8.441178,-4.284607,-5.973351,-8.052519,-8.118593,-6.607454,-2.715910,-1.548400,2.725346,-2.275968,3.449381],[-4.923787,-8.217575,-2.115645,4.232111,-0.680510,1.870550,5.908001,-4.815946,8.173521,3.120715,1.015475,3.516894,0.007487,-3.691847,-2.077051,0.589277],[2.547699,1.377698,-8.519798,-6.295501,7.348970,-5.239462,8.745461,-3.624858,2.878952,6.966845,1.304106,-0.038024,7.818566,-8.116828,-7.438839,-8.794891],[5.722090,-5.348945,9.922268,-3.064289,-6.331900,5.940033,-9.346939,-8.920059,-2.782128,-9.459373,-6.747205,-5.450580,9.949621,-4.450086,-3.270388,5.163383]],[[-7.030547,-6.964430,9.850906,-7.599571,2.762412,9.413057,3.428806,7.404303,3.804453,3.726720,-2.748644,8.501365,-8.175745,-1.298968,2.012328,1.760229],[1.988051,9.210537,-0.540260,-8.928727,3.048633,5.011158,-8.639415,-4.108058,1.627204,3.507739,3.712467,8.968371,-6.912685,8.573271,-0.839873,-9.887930],[-8.078698,-5.152437,0.781474,-5.611064,-1.043551,-0.368650,-8.128644,7.304552,-3.183487,3.377896,4.807033,-8.993621,-0.942619,5.491163,-5.483801,-7.356583],[5.265761,8.539250,-7.535063,-2.959045,-9.266333,0.191749,6.886192,-0.931815,5.664759,-1.094010,-1.561312,6.804393,-7.458160,6.702285,-6.755088,8.342692],[-9.734867,-1.408505,-8.528545,-1.375985,2.201728,9.903362,-0.217033,9.253432,8.744633,-2.583989,-9.342730,3.917613,2.773250,1.316154,-1.028493,0.080123],[3.054409,8.290462,-0.624701,-4.591185,2.671552,8.182717,4.845159,-1.132042,-6.439194,0.463675,-7.055158,7.300891,6.897309,3.212120,6.513795,1.548813],[-3.208050,-5.921589,-5.281340,0.394085,-2.021784,2.672640,3.323242,-4.380015,-4.655634,-4.918975,-2.957644,-6.043088,-2.302510,-9.127205,3.325033,-6.256700],[-7.458618,-0.036084,-2.883540,3.390279,-0.726323,-1.382289,-4.938187,1.284739,-9.535078,7.633093,6.861148,2.575148,8.378439,0.156895,6.837491,-7.135741],[-4.400142,-7.357586,-7.605520,9.219823,-2.444746,-5.741170,1.003159,8.571957,6.756579,-6.528911,2.649765,-9.500937,9.806247,2.964910,-5.578222,2.123727],[-3.517387,1.588975,4.451940,-7.814915,-9.929774,-7.554377,-0.411058,-3.528096,-2.329905,9.286730,-2.708696,-1.914694,7.572551,-8.588560,8.417596,7.782543],[4.726279,4.555512,8.658499,-5.405408,-4.797107,7.873641,-7.000599,1.076020,0.685840,-1.646777,-4.563091,1.909596,-5.494928,5.119501,4.126806,-3.756952],[8.978651,6.833380,7.274738,7.978664,-1.800259,-8.032167,-3.620541,5.909097,-0.919846,8.818292,-6.043431,0.879196,-5.194019,9.839725,3.971531,-3.968013],[2.161857,6.288793,2.998394,-0.314177,-8.210140,-6.384351,-6.831918,-2.389222,-3.346072,-4.841763,-4.138705,5.529449,-4.367926,5.959623,-3.961630,7.881236],[8.244497,-3.824101,2.302535,9.235128,-5.938510,-6.900710,2.258883,6.488974,-5.485620,9.894532,6.210498,9.208924,8.167200,7.277774,-0.904894,5.073372]],[[-6.301368,-0.586251,-9.645841,3.138049,8.193144,-6.466008,-2.454474,-9.183392,5.934540,5.373035,0.626330,-1.909194,1.041605,-8.647826,-1.867113,-3.102892],[-0.920231,-9.366751,-4.724438,9.234332,5.885629,-6.956981,4.951409,-6.078007,-6.378956,-0.665498,-6.584932,-1.983019,-8.040121,2.971240,-1.235886,9.986674],[-4.908935,-6.924659,1.183436,7.788427,2.023841,-0.389787,-8.679720,2.983260,4.553095,-5.516466,-5.375815,7.112775,-1.408229,-3.023158,-3.382505,4.710126],[0.587600,0.247354,5.202075,-9.433010,5.473729,5.373791,7.789882,-2.928654,-1.966599,1.442031,-9.443633,-8.813079,2.722757,8.207906,-0.335672,1.669695],[-3.887742,3.045959,0.777439,-0.433030,-9.502193,-0.051237,-1.329756,-7.279773,-4.346909,-1.137932,5.365028,6.242305,2.916836,-0.914165,8.272577,7.359950],[9.724424,4.255149,-9.590930,0.094073,6.920944,6.439862,-3.489285,7.531468,3.441173,4.736343,-4.794872,7.204353,-1.224443,3.303396,8.780851,7.949286],[2.042139,9.079982,1.617957,6.451409,6.004290,-9.973354,-7.774131,-2.307964,2.552443,-2.690231,-7.882151,5.689890,-4.305566,-3.644941,-5.391160,-2.321612],[-0.322550,0.374449,-8.744722,-4.900646,2.780160,8.694719,-6.156899,7.441767,-3.177251,3.432393,-2.884572,9.032370,-4.913617,-7.918683,2.409539,-0.290255],[9.497145,3.382240,-0.376778,6.202494,5.505525,-8.586341,-3.055343,1.017315,2.521642,8.243190,-8.644754,-7.823367,-8.868940,4.012675,0.480695,3.489456],[5.079202,-7.984057,-8.870717,-8.114515,9.908967,-8.778186,-1.327487,-8.951568,-1.913035,3.082261,-4.546976,4.059227,7.697619,-8.991206,3.451336,3.987744],[2.354800,-5.023129,2.222395,0.782693,3.948635,-9.619430,4.735087,-3.491158,-1.548765,-8.619547,3.944909,1.951970,-7.985379,-9.691224,9.228038,5.681006],[6.028391,-1.044217,-0.389981,2.242208,3.248592,0.948089,-6.728300,9.938328,-3.944156,9.326720,8.979065,-7.873335,3.937005,6.908820,-7.088522,7.690875],[3.168211,-5.123490,4.213833,8.705679,7.510251,1.223933,-7.371176,-1.440878,3.627998,6.866289,-3.451231,-3.279534,-2.894919,-7.909342,-5.288053,-4.375730],[9.655944,4.834855,0.124415,-1.807161,-7.399371,-8.223847,-0.598401,9.251407,5.425038,-6.835953,-2.964059,3.059857,9.721662,2.889178,9.018120,7.111052]],[[-9.256082,1.687088,9.951183,-4.310249,1.948176,6.386217,8.158782,9.091337,3.341181,-1.174879,1.481133,-4.841355,6.016699,-1.484599,8.790952,9.425895],[1.553505,0.482412,-4.041467,-2.125580,9.764215,2.555297,-6.791309,4.065371,0.437184,1.509178,0.480160,9.959612,8.988889,2.678118,2.069880,-4.550346],[7.500355,7.941774,9.769707,2.182313,5.296841,9.021848,-5.038610,2.062181,-7.641963,-0.661478,-6.650923,-2.171325,9.470073,8.614077,-3.896385,9.893015],[6.169262,-4.994580,-1.909658,7.646254,-7.308734,5.859755,1.019327,-7.153804,0.941474,3.477405,-4.435407,9.604703,9.103560,-0.157607,-3.141394,3.001962],[4.204757,-9.126463,-3.598243,7.185675,-4.343783,1.413719,-2.807249,6.875768,-2.046289,5.147782,-9.070469,-7.214180,8.704164,-1.958358,1.643325,-5.657080],[9.295159,-2.516093,-6.505602,-6.979742,2.387302,3.982815,-1.203559,2.685643,3.720781,9.819652,-6.237080,-8.790949,0.925603,5.509892,-0.404813,6.016548],[3.110909,5.151169,9.693227,-5.206266,7.603036,-6.047265,0.499533,-0.500446,1.750851,-3.508324,-6.584393,6.439010,2.076483,-4.590310,-9.336548,4.255542],[0.679265,-9.925193,9.113349,7.187436,-1.404915,-1.723332,-3.543446,-2.430995,-6.236351,5.879945,9.236686,-0.831217,0.949845,2.231565,-7.087502,7.892999],[4.020437,5.602215,0.187403,-7.060509,-0.992846,4.123330,1.507312,-8.852886,-0.626855,-1.735623,6.292455,4.431255,8.803046,-4.266567,4.442322,-5.895445],[0.052606,6.034467,-4.357096,-9.645817,-0.907102,3.639329,-1.353853,-8.787542,8.275258,-9.050171,4.738953,-6.514130,-5.730382,3.471625,-1.450108,2.190207],[6.090985,-8.099820,-2.117106,-3.726639,-7.765070,-4.361988,-9.507254,-0.470066,-3.596839,-0.137410,-1.323256,-4.388320,0.512120,-4.895079,4.109399,-1.278488],[0.820674,2.056930,7.422698,-9.861481,2.491008,-3.261123,9.772059,-8.734122,-4.578665,-9.567096,8.370261,3.087344,-4.192170,-0.818399,5.184634,-0.459753],[-3.400377,-7.380474,8.828312,2.982382,-4.222988,-4.011438,-8.774952,7.627312,9.926803,4.731763,-6.965281,-5.621027,3.055959,2.977420,6.765778,5.230635],[1.213715,2.278510,-4.791425,8.484007,2.853118,6.838294,-3.022188,-2.472020,-6.873195,-9.946209,-2.239665,4.959163,-9.823985,1.088406,-8.503211,5.403895]],[[-3.905765,-7.563937,1.208710,8.267904,-1.086945,0.103019,4.470765,-2.921891,1.779701,6.510360,2.973855,4.149974,8.098974,9.882535,4.001758,4.460013],[-3.097712,8.393780,9.832419,-4.624724,5.764965,2.083784,4.792155,-4.095443,-1.305811,-6.094246,-5.642488,7.318698,-2.613028,1.777563,1.352405,-8.384401],[-6.357771,-8.351709,-9.367415,0.258353,-8.294540,3.757978,0.819655,-2.172408,3.848562,5.957788,6.535582,9.529446,-8.480088,1.746829,4.146393,7.740981],[1.263216,1.698828,-1.467350,2.438836,1.231916,-6.179931,-0.893884,7.277282,9.497209,3.865775,5.566211,0.100223,4.255633,-8.334004,-5.840003,1.051605],[0.389638,9.036487,8.752585,-1.432904,3.985406,2.521506,5.774720,5.860780,-6.381048,9.951938,2.983247,2.914679,-9.705500,3.516188,2.426240,-0.206716],[-4.506796,-0.482250,3.708251,-9.114237,1.628329,-2.235233,-2.349940,3.048287,2.403048,7.720581,2.426673,1.421770,-2.096352,-3.285041,1.560610,-0.990155],[4.408201,-9.427672,4.481201,7.836998,-5.304829,9.418363,-7.419306,0.898986,-0.650826,-8.761605,0.562178,1.975262,8.219059,4.547875,-2.497130,-5.115185],[-0.055068,-6.060595,4.915353,-5.407435,-2.445022,1.347536,9.051098,-6.677236,1.618984,6.667885,-1.824242,-9.582913,1.079249,7.424232,1.338002,7.959542],[-9.020641,9.149612,2.154133,4.633461,9.971430,-9.688261,-2.183784,-7.400490,-5.636552,-3.307759,-7.729949,-7.435060,4.780769,-9.677523,2.333713,-7.126193],[5.379420,8.061525,-1.420495,-8.349385,5.836035,-1.640922,7.507861,9.793567,-8.538426,1.698669,-0.465792,-9.845259,4.211854,-8.487968,-3.800523,-0.590653],[-7.597119,4.481741,-7.412886,5.390023,-9.325361,3.470631,-5.341859,5.472192,0.566373,-6.721482,-9.630356,6.790488,6.819639,-6.318091,-5.548227,2.476237],[6.076019,7.649096,6.885381,3.272077,-4.171791,1.728309,-1.186914,-2.258399,9.280506,5.488598,2.263722,7.877839,2.714684,0.133708,-1.429917,-9.804642],[8.221756,-3.510297,-8.808284,-2.139160,-7.763338,-2.663264,9.380229,-4.050440,7.703933,-1.816174,-4.666428,8.553393,-5.077019,-5.541357,6.338417,-7.313444],[-4.489506,5.886320,-2.325299,-7.561394,-4.256395,8.844992,7.905693,-7.802593,-8.880307,7.559555,5.386375,-3.589220,8.599606,-7.402850,9.878907,2.517183]]], dtype = "float64")#candidate|2525|(14, 14, 16)|const|float64
bop_2526 = relay.floor_mod(uop_2514.astype('float32'), relay.reshape(const_2525.astype('float32'), relay.shape_of(uop_2514))) # shape=(14, 14, 16)
bop_2529 = relay.floor_mod(uop_2516.astype('float32'), relay.reshape(const_2525.astype('float32'), relay.shape_of(uop_2516))) # shape=(14, 14, 16)
uop_2532 = relay.sigmoid(bop_2526.astype('float32')) # shape=(14, 14, 16)
uop_2534 = relay.sigmoid(bop_2529.astype('float32')) # shape=(14, 14, 16)
bop_2547 = relay.subtract(uop_2532.astype('uint64'), relay.reshape(bop_2526.astype('uint64'), relay.shape_of(uop_2532))) # shape=(14, 14, 16)
bop_2550 = relay.subtract(uop_2534.astype('uint64'), relay.reshape(bop_2529.astype('uint64'), relay.shape_of(uop_2534))) # shape=(14, 14, 16)
bop_2559 = relay.logical_and(uop_2514.astype('bool'), relay.reshape(bop_2526.astype('bool'), relay.shape_of(uop_2514))) # shape=(14, 14, 16)
bop_2562 = relay.logical_and(uop_2516.astype('bool'), relay.reshape(bop_2529.astype('bool'), relay.shape_of(uop_2516))) # shape=(14, 14, 16)
output = relay.Tuple([bop_2547,bop_2559,])
output2 = relay.Tuple([bop_2550,bop_2562,])
func_2571 = relay.Function([], output)
mod['func_2571'] = func_2571
mod = relay.transform.InferType()(mod)
mutated_mod['func_2571'] = func_2571
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2571_call = mutated_mod.get_global_var('func_2571')
call_2572 = func_2571_call()
output = call_2572
func_2573 = relay.Function([], output)
mutated_mod['func_2573'] = func_2573
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2412_call = mod.get_global_var('func_2412')
func_2414_call = mutated_mod.get_global_var('func_2414')
call_2661 = relay.TupleGetItem(func_2412_call(), 0)
call_2662 = relay.TupleGetItem(func_2414_call(), 0)
output = relay.Tuple([call_2661,])
output2 = relay.Tuple([call_2662,])
func_2675 = relay.Function([], output)
mod['func_2675'] = func_2675
mod = relay.transform.InferType()(mod)
output = func_2675()
func_2676 = relay.Function([], output)
mutated_mod['func_2676'] = func_2676
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1987_call = mod.get_global_var('func_1987')
func_1989_call = mutated_mod.get_global_var('func_1989')
call_2684 = func_1987_call()
call_2685 = func_1987_call()
var_2687 = relay.var("var_2687", dtype = "uint64", shape = (14, 14, 16))#candidate|2687|(14, 14, 16)|var|uint64
bop_2688 = relay.bitwise_and(call_2684.astype('int32'), relay.reshape(var_2687.astype('int32'), relay.shape_of(call_2684))) # shape=(14, 14, 16)
bop_2691 = relay.bitwise_and(call_2685.astype('int32'), relay.reshape(var_2687.astype('int32'), relay.shape_of(call_2685))) # shape=(14, 14, 16)
var_2705 = relay.var("var_2705", dtype = "uint64", shape = (14, 14, 16))#candidate|2705|(14, 14, 16)|var|uint64
bop_2706 = relay.less(call_2684.astype('bool'), relay.reshape(var_2705.astype('bool'), relay.shape_of(call_2684))) # shape=(14, 14, 16)
bop_2709 = relay.less(call_2685.astype('bool'), relay.reshape(var_2705.astype('bool'), relay.shape_of(call_2685))) # shape=(14, 14, 16)
output = relay.Tuple([bop_2688,bop_2706,])
output2 = relay.Tuple([bop_2691,bop_2709,])
func_2713 = relay.Function([var_2687,var_2705,], output)
mod['func_2713'] = func_2713
mod = relay.transform.InferType()(mod)
var_2714 = relay.var("var_2714", dtype = "uint64", shape = (14, 14, 16))#candidate|2714|(14, 14, 16)|var|uint64
var_2715 = relay.var("var_2715", dtype = "uint64", shape = (14, 14, 16))#candidate|2715|(14, 14, 16)|var|uint64
output = func_2713(var_2714,var_2715,)
func_2716 = relay.Function([var_2714,var_2715,], output)
mutated_mod['func_2716'] = func_2716
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1512_call = mod.get_global_var('func_1512')
func_1513_call = mutated_mod.get_global_var('func_1513')
call_2800 = relay.TupleGetItem(func_1512_call(), 0)
call_2801 = relay.TupleGetItem(func_1513_call(), 0)
output = call_2800
output2 = call_2801
func_2814 = relay.Function([], output)
mod['func_2814'] = func_2814
mod = relay.transform.InferType()(mod)
output = func_2814()
func_2815 = relay.Function([], output)
mutated_mod['func_2815'] = func_2815
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2086_call = mod.get_global_var('func_2086')
func_2088_call = mutated_mod.get_global_var('func_2088')
call_2821 = relay.TupleGetItem(func_2086_call(), 0)
call_2822 = relay.TupleGetItem(func_2088_call(), 0)
output = relay.Tuple([call_2821,])
output2 = relay.Tuple([call_2822,])
func_2823 = relay.Function([], output)
mod['func_2823'] = func_2823
mod = relay.transform.InferType()(mod)
mutated_mod['func_2823'] = func_2823
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2823_call = mutated_mod.get_global_var('func_2823')
call_2824 = func_2823_call()
output = call_2824
func_2825 = relay.Function([], output)
mutated_mod['func_2825'] = func_2825
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1987_call = mod.get_global_var('func_1987')
func_1989_call = mutated_mod.get_global_var('func_1989')
call_2834 = func_1987_call()
call_2835 = func_1987_call()
const_2836 = relay.const([[[1,-7,-5,10,1,-5,9,6,-10,6,-4,9,5,-10,5,-2],[-3,-5,5,10,-3,4,4,5,-7,-6,-10,-10,9,7,-6,-10],[9,9,-1,8,3,6,-4,-3,-6,3,-6,-4,1,-8,-10,7],[-6,-1,-5,-10,3,-8,-1,-9,2,2,2,-10,7,1,-8,7],[5,10,-9,8,10,-10,-7,-7,-10,6,5,7,5,9,4,-7],[4,-9,-2,4,5,3,4,2,7,7,3,5,-2,3,-10,7],[2,8,4,-5,5,-2,6,-2,1,6,-3,-4,-7,3,9,-3],[5,-2,3,-10,5,-9,6,-3,-3,3,-2,-3,5,-6,7,5],[3,2,5,6,4,1,7,8,-5,-7,9,-5,7,9,3,7],[1,1,1,-8,-3,4,-2,-9,5,-3,-6,-9,2,-9,1,-2],[-5,-10,2,-1,6,-4,-10,-3,-9,-9,7,-9,5,-3,-4,-9],[-9,5,-7,-6,-4,1,-5,10,3,10,5,-8,-9,-7,7,4],[-6,-7,7,-8,-6,-6,-3,5,-6,-7,-6,3,5,8,7,8],[-3,8,10,1,-5,7,5,-6,-4,-2,-6,-6,7,3,-8,-9]],[[5,10,-3,1,8,-8,7,4,6,4,2,-5,7,-3,6,-5],[1,-6,6,4,3,-7,-5,4,8,5,9,9,7,-1,5,-6],[3,1,-9,-5,7,7,-4,5,-10,-2,-10,4,-4,-2,3,5],[10,-7,-1,5,6,-1,-2,4,7,-8,-8,6,-7,1,6,8],[-2,-7,9,10,-2,8,7,4,8,5,-6,8,-1,5,-8,3],[10,-2,10,4,5,5,-4,8,-1,-7,-5,-2,7,4,-10,5],[5,-9,-1,8,-5,-10,10,-8,-4,-1,4,-5,-1,-4,4,-1],[7,5,-2,-8,5,-3,-7,-9,-8,9,-2,-2,-3,-3,6,-7],[5,4,4,2,9,4,8,8,4,9,4,-8,-8,4,-7,10],[3,-9,4,-8,-9,-1,-8,5,8,7,-7,-9,-5,2,3,6],[-4,7,-8,-2,-9,-6,-4,6,-6,6,-7,-10,-7,8,2,10],[-1,-5,1,-6,10,7,2,8,8,3,8,-2,8,8,4,-8],[-4,3,-10,-6,-10,6,8,-4,-5,-4,2,7,3,-2,3,3],[-2,-3,-7,5,-3,3,-3,10,4,1,7,6,5,-1,7,-6]],[[-2,5,9,1,1,5,-1,-3,8,-2,4,-9,7,7,-5,5],[1,1,2,-4,-5,8,-6,10,-5,-1,10,7,-1,1,7,-5],[8,8,7,-2,1,-6,-8,-2,-9,-3,-4,-8,5,1,7,-10],[-4,-4,2,-1,3,1,6,-6,6,-5,2,-5,3,8,-4,5],[-9,-8,3,6,-9,-1,10,-1,9,-5,1,7,-6,4,-5,9],[-7,7,-6,-8,-7,9,8,-4,-8,-7,8,3,-9,5,7,8],[-9,-4,7,10,-2,-3,-1,-7,-5,9,8,-7,-10,-1,-4,-9],[-5,10,6,7,-10,-6,5,-1,-10,4,-2,-5,5,7,6,-4],[10,4,-5,4,9,-8,5,-7,-10,1,3,-4,1,-8,1,7],[-8,-7,-1,-8,-1,5,6,1,4,-9,7,5,-7,4,-9,-9],[-3,9,5,2,-2,4,-2,3,6,-3,5,10,3,10,-6,-8],[-5,-2,-2,8,3,3,6,1,10,-4,2,-9,-9,-8,7,-5],[10,-3,-10,-8,5,-10,7,-1,-5,-2,-1,3,-9,7,4,-8],[-7,-7,-6,-4,6,9,5,-10,7,7,-4,-7,1,1,-6,-10]],[[-4,2,3,8,-9,-5,-9,3,9,-3,2,10,-6,9,-1,-6],[9,6,3,-3,3,5,3,9,9,8,5,-5,10,4,-2,-8],[-8,4,10,-4,-5,6,-8,-1,8,8,-9,6,-6,1,-1,-10],[-5,2,10,-8,-4,5,1,9,-7,-3,-2,6,-1,8,7,-1],[-10,8,9,-7,10,5,7,-1,4,3,-4,4,7,7,9,8],[3,1,4,2,-7,-5,2,-9,1,2,2,-3,9,-4,-10,-10],[-8,2,7,6,-3,-10,-9,3,2,9,3,-2,-2,3,-7,-2],[3,9,-9,6,9,9,7,-10,-7,-3,-1,-5,9,2,2,-5],[7,7,-2,-8,-10,-9,-8,8,-7,8,-5,-10,2,4,-5,10],[-4,2,1,7,6,2,4,-1,-2,1,-9,-6,3,6,-1,-4],[5,-1,5,-2,3,-6,4,9,4,3,-1,6,-9,1,-1,4],[-10,-4,4,-5,10,3,-9,-1,-4,-6,-5,8,7,3,6,-5],[4,-1,-9,-5,-10,-4,3,-9,10,-4,2,-9,3,8,-1,8],[-6,2,-7,-4,-5,3,-2,7,-10,8,-2,10,1,7,-2,-7]],[[-5,-4,8,-7,-6,3,5,-1,2,6,8,-1,7,-9,2,9],[-5,-10,-3,-7,7,9,9,-8,1,5,1,8,-4,9,3,5],[-5,2,-4,-6,-7,5,-9,9,7,9,1,-8,-4,-3,6,-6],[7,-8,-5,1,1,9,7,2,-3,-1,-10,-1,7,1,6,-4],[-5,1,9,1,-8,-2,10,6,-4,-8,-8,-9,5,-8,-9,-1],[5,2,3,-5,-6,3,-8,-7,-10,9,6,-10,-1,-9,1,5],[-1,1,2,5,1,-2,-1,-5,6,6,5,-2,-6,-7,10,-4],[-10,-4,-1,2,7,2,5,-6,3,-4,1,5,6,6,-5,-6],[7,9,9,9,7,3,-1,4,4,-10,-3,-4,-6,-4,5,8],[-8,-10,-8,2,-4,-7,5,-7,-7,-3,4,9,8,-3,-3,-4],[7,9,-7,-3,5,4,-1,-8,1,-1,9,-7,5,-1,-2,-9],[-3,6,-9,-10,1,6,-8,2,-8,-4,-7,7,2,8,4,-5],[-8,-8,-2,-3,4,-6,-4,10,3,10,-9,-2,4,7,9,-9],[-4,6,-5,10,-8,2,5,5,-9,10,1,-9,1,-7,7,-9]],[[-2,7,-4,9,-3,6,-4,-8,6,-1,9,6,-5,4,8,2],[-10,1,6,-6,2,7,-4,1,4,-9,-1,6,-7,-7,-4,6],[8,8,7,2,-7,-5,5,-1,7,5,4,-3,2,5,-9,-9],[-8,2,2,-7,5,10,-8,-3,2,5,9,-6,-10,-6,3,7],[-2,-9,4,-3,-7,-1,3,-2,-1,-10,6,9,8,6,-1,-3],[3,7,-7,8,-1,-1,-2,1,1,-2,-9,5,-6,-9,4,-10],[-5,4,-5,-5,3,5,10,-9,-9,-10,-3,6,-3,-8,8,-6],[5,4,-4,10,-7,-3,1,8,4,-8,2,-8,-10,4,4,-10],[1,1,-3,3,4,-6,9,-4,-5,-1,8,-4,6,6,-9,9],[8,-7,10,2,-7,2,-6,10,1,-8,1,-7,1,6,-8,2],[-6,-9,-1,4,-3,6,3,1,-7,10,1,4,-1,-4,5,6],[-4,-10,8,-3,-10,-10,-4,4,-10,-7,2,-4,2,-1,-5,10],[4,4,-6,4,-7,9,-5,-1,9,-7,1,-5,1,-10,5,-6],[2,10,9,3,8,5,5,8,6,-5,9,10,6,-4,1,-7]],[[-2,-2,10,-6,7,2,9,-6,-7,4,10,4,7,6,-10,3],[-1,2,8,10,1,-7,-3,-9,-1,4,8,-7,6,3,6,7],[-8,-9,-6,4,-4,-10,-2,-7,2,6,9,-7,9,-2,-5,-2],[-7,1,-3,-3,-4,4,-1,-2,-2,5,6,-10,-1,7,3,-8],[4,4,-4,4,9,7,1,-5,10,8,-3,8,-1,9,-8,-4],[8,-10,6,-2,4,-5,9,-9,1,4,6,-7,8,-10,-4,-9],[-4,-7,-2,5,8,-10,9,7,-7,-3,4,-9,-7,9,5,6],[-6,10,-3,6,5,10,7,6,-10,-6,-1,9,6,-1,-7,-10],[1,-2,3,8,4,-1,-7,5,-8,-4,-8,8,10,-2,-8,9],[-2,-6,7,-2,3,-1,2,10,7,-10,-6,8,10,2,-4,-9],[-9,3,10,8,1,-6,5,5,-1,-6,3,-2,6,3,6,-6],[1,-3,-7,6,8,2,-9,5,2,-6,7,-10,-3,-1,-6,-4],[-8,-8,7,4,-8,-1,5,-5,-9,-4,1,7,8,5,-9,-1],[-9,4,4,3,4,9,2,-6,6,-5,-5,-5,2,-7,10,-8]],[[8,4,1,4,-1,-5,-6,4,-3,1,3,1,5,-8,5,-3],[-9,-4,4,6,-2,10,3,10,-3,6,-6,-3,4,-3,9,-3],[-2,-7,-7,-2,5,5,-6,-4,7,-6,6,1,3,10,-9,-8],[-9,7,-9,3,1,-2,4,-7,-7,-3,6,-4,7,1,-6,-8],[8,-9,4,-3,-1,-3,10,-7,7,-1,-5,2,-8,9,-3,-6],[-10,-8,-8,-9,-5,-7,4,-3,5,2,6,1,8,-5,-5,-10],[8,9,-8,-7,3,-7,8,-6,1,-3,5,-2,-4,-1,-9,-5],[-10,5,7,10,-5,-6,6,-8,-1,5,-4,6,5,-8,10,-3],[10,-8,-9,-6,3,9,-4,-8,5,3,-2,9,8,-4,-3,-9],[-5,1,-3,-10,8,8,4,1,9,3,4,-1,-9,1,9,4],[-6,10,1,8,9,5,3,-7,9,6,-1,-6,-9,2,-8,4],[3,-5,-3,-6,-10,6,-7,8,10,-9,-10,-1,1,-8,2,-5],[5,-1,-3,-9,-10,-10,7,-2,1,-9,-6,1,6,8,-3,-4],[3,9,2,10,-4,-8,-8,9,2,2,8,9,7,3,8,-10]],[[-1,-6,-8,5,-9,-4,-3,-6,-1,-5,4,-5,1,10,-3,10],[-1,9,7,3,4,10,-10,-2,-7,-4,-3,1,-6,3,1,-7],[2,-4,-7,2,4,-1,-2,-9,-4,-9,1,8,1,9,5,-6],[2,-5,-7,-4,-2,-5,-2,3,-7,-2,10,-6,-3,5,-2,6],[-9,5,-9,6,4,6,-6,-1,-9,1,-2,2,-5,3,8,-1],[10,4,5,-3,-1,-4,-7,-10,-7,-8,10,-4,9,-10,7,-3],[-9,8,-4,4,9,-4,2,-5,-5,-8,6,-9,1,9,3,5],[-8,-8,6,-2,10,3,10,-3,-4,-9,4,3,-9,1,6,-6],[3,-1,-3,-5,-6,7,8,-10,-10,1,9,7,-8,-10,8,-3],[7,9,-6,5,3,-8,1,-1,9,4,8,5,-2,4,-8,-1],[10,7,4,-10,5,8,-7,10,3,-5,-7,-8,-3,1,1,8],[-3,9,-8,-4,6,2,1,1,-6,-6,5,6,-8,1,10,-1],[6,-10,-9,-9,6,-10,3,-2,6,-4,4,10,6,1,1,-8],[-4,-1,-3,-1,2,-6,1,-6,8,9,-9,-3,-10,-10,10,10]],[[-6,-10,3,-8,1,10,3,-10,-5,2,7,10,4,10,7,10],[1,2,9,9,-3,-3,-6,-7,1,-6,7,-6,5,4,6,-7],[4,-2,-1,-3,1,-1,9,9,-9,8,10,-6,-2,9,6,8],[9,-3,1,5,1,9,5,-8,3,-10,-2,10,-9,-3,-6,5],[10,-8,-3,5,10,-2,1,9,7,-9,-6,-4,-7,-9,9,2],[9,2,-2,6,2,9,9,9,7,-5,-6,-7,-8,-10,8,8],[-2,3,-9,6,-6,-5,2,1,2,2,6,5,-6,3,-6,3],[-3,-10,5,4,-2,8,-2,3,8,-6,-5,-10,-3,-6,8,-7],[-6,-5,-4,4,-9,1,-3,7,-10,-8,3,7,-3,-7,2,3],[-2,1,-7,-3,9,-10,-8,6,2,-4,-1,3,4,4,3,-8],[-4,-10,-5,-9,-6,-9,-6,10,-8,-2,-5,-3,-4,-7,-4,1],[-3,1,5,2,-1,-4,7,-6,10,4,-5,-6,-3,8,-9,5],[2,-10,8,-8,5,5,-10,7,-8,-7,7,4,8,5,-2,9],[-6,3,-1,2,-3,-9,9,4,6,-10,7,-3,7,2,10,-3]],[[10,-2,-7,10,3,-4,5,10,9,4,-6,-1,-7,-10,6,-3],[1,9,10,-7,-9,5,-9,5,5,-4,-8,-3,9,10,-9,2],[-8,8,-10,-3,6,-3,1,4,9,6,-4,10,2,-1,-5,-3],[-3,3,5,-6,-3,7,9,1,-1,5,6,1,9,1,2,-9],[4,-2,-9,2,-7,6,-10,6,-4,7,8,9,9,-1,5,-7],[1,10,10,-2,8,-5,-6,10,-1,1,-6,-7,4,5,6,-10],[3,-7,-3,10,-8,2,7,4,-10,7,7,8,-2,1,-4,6],[-5,10,3,-9,-8,-3,-2,3,1,-7,-6,10,-9,7,-5,1],[-8,-6,-5,-2,-6,8,-3,2,-2,4,6,-9,6,6,-9,-1],[-2,-7,-2,7,-5,7,-5,2,8,9,-2,6,-4,-9,-3,-9],[-7,-9,-7,-8,3,-10,2,10,-10,3,7,9,-6,-6,1,4],[-6,-1,-1,-5,4,-3,-7,-8,1,-10,3,-2,10,-7,-5,-2],[-4,-2,-2,9,2,4,-4,10,-4,-6,10,5,5,-4,3,-1],[-1,-3,-2,10,-6,-7,7,-8,8,7,3,9,-1,10,8,-2]],[[6,3,8,6,-8,-6,10,5,9,5,3,10,6,-10,3,5],[-5,-9,-10,7,-8,4,-7,6,-10,-8,5,-8,9,-5,-10,-2],[-7,-8,-6,6,9,1,-8,4,8,-4,1,1,-10,2,5,4],[7,-10,6,8,-5,-1,-6,4,6,-4,-9,-9,-1,8,-7,9],[-2,-8,6,-6,-2,5,-2,1,-6,7,2,-4,-8,-1,3,-8],[1,-5,-1,8,-8,3,-2,1,1,-3,5,8,-8,-8,-2,-7],[-4,10,3,-9,2,4,8,6,-5,-4,4,4,2,-4,8,-7],[-6,-8,-8,-4,8,-8,3,-6,1,-9,-2,1,-4,-10,8,7],[-6,-5,-1,-7,-6,5,-7,8,-3,-6,-9,-2,-2,7,10,8],[-8,-2,-3,-6,-4,-10,6,-10,6,-7,-3,-10,-1,-6,1,-7],[-8,-8,8,10,6,2,10,2,-7,3,-8,-4,-9,8,-6,-1],[-5,-5,-4,2,5,-4,5,-10,-5,-2,-5,-1,-9,-8,-7,-9],[-9,-5,9,3,-3,-10,-4,-1,-5,-1,-9,7,-5,-3,6,-3],[8,8,-7,-3,9,-9,8,-2,-2,3,9,-9,7,-5,6,7]],[[-7,-1,-9,3,10,3,-1,-10,9,-4,3,3,5,-2,7,5],[6,6,-2,5,10,-1,2,6,5,10,-3,-10,2,-1,3,2],[-4,7,9,10,-8,2,4,-1,-6,-9,-5,-1,-4,5,10,7],[4,-2,5,-2,-4,-3,2,7,7,9,6,-9,4,-8,-9,-10],[10,-8,5,10,-6,-6,-8,-8,-9,-7,9,-5,-9,-9,9,-3],[-1,-6,3,-6,8,9,4,-1,4,-10,-3,6,-10,-10,6,10],[6,-4,1,-8,-1,-6,-2,-10,6,-1,-4,3,-4,7,-8,-7],[-4,-1,-10,-5,-6,8,8,6,5,-5,6,7,10,-8,-2,1],[6,10,-3,-9,-5,-10,-2,-9,6,9,9,-10,1,-7,4,6],[2,-6,-10,7,-1,-10,-5,-3,2,-1,-10,-10,-2,4,7,-6],[6,5,8,-1,8,5,10,-2,-9,-3,-7,-2,2,-3,-5,-5],[2,7,1,-8,-9,2,-10,-2,-9,-10,10,5,7,8,-8,1],[4,-7,-5,-5,9,-6,4,-8,4,3,-9,3,-6,-5,5,-4],[5,-5,-8,5,-2,4,8,2,1,4,-4,5,-10,-6,-10,6]],[[-10,4,-5,-5,7,-4,-1,-6,2,2,9,-5,2,3,-2,5],[-2,-1,-7,4,4,-10,-4,9,8,-1,-3,-5,-10,6,9,-3],[2,8,8,5,1,1,6,3,-3,9,5,-10,-2,6,-8,2],[10,-9,-3,-4,-4,2,-5,3,1,4,6,10,8,1,4,-6],[-3,-5,-3,-3,-2,-6,9,-4,3,-6,-2,9,4,-8,5,-1],[10,7,4,2,-4,-4,-8,-3,6,2,-10,8,2,10,-1,-6],[-8,-6,-2,2,-7,-10,5,-9,-7,-9,-1,10,-6,-1,-3,1],[1,-6,8,-10,4,-3,3,2,-1,6,-1,-7,7,3,4,-1],[-1,-7,-7,-3,7,2,8,-10,6,-10,10,-1,5,7,9,-4],[7,9,-8,-8,10,3,-5,-6,-8,-5,6,-7,3,-10,-2,-3],[6,4,6,-7,4,-4,-4,8,-7,-2,3,5,3,-8,-10,3],[-3,-9,1,-5,7,-1,-10,-3,-6,-1,4,4,-1,-2,3,6],[4,-5,9,-7,-1,-7,1,-9,7,-5,6,-8,-2,-8,8,3],[9,-7,9,-7,4,1,-8,-10,10,5,5,-5,-8,3,10,5]]], dtype = "uint64")#candidate|2836|(14, 14, 16)|const|uint64
bop_2837 = relay.logical_xor(call_2834.astype('int32'), relay.reshape(const_2836.astype('int32'), relay.shape_of(call_2834))) # shape=(14, 14, 16)
bop_2840 = relay.logical_xor(call_2835.astype('int32'), relay.reshape(const_2836.astype('int32'), relay.shape_of(call_2835))) # shape=(14, 14, 16)
func_1863_call = mod.get_global_var('func_1863')
func_1869_call = mutated_mod.get_global_var('func_1869')
const_2843 = relay.const([-8.501282,9.618934,-4.982328,-7.473228,7.442648,0.454686,-1.107373,9.690196,1.243193,-9.051547,-7.617989,-1.104971,9.899520,-5.363141,-6.412123,6.676040,8.994368,-5.855623,8.267128,9.249418,8.984839,-9.807332,-0.721429,-1.869628,1.849871,-1.408926,-8.366507,-8.141332,1.055242,9.022605,0.006729,-2.028111,9.661015,-0.520221,3.291966,9.900828,-6.521943,9.890481,8.644227,-0.157431,-3.431615,-2.307213,9.525751,0.537583,4.690937,-7.561437,0.375479,2.275265,-1.280122,4.917150,-2.751414,-5.104183,-6.846150,3.267427,3.570135,-0.475823,9.036665,-5.516124,7.582232,1.125557,-5.018950,0.545639,-1.420765,-2.742649,1.809222,7.833741,-8.445469,-8.027024,4.991442,-9.409413,-5.593812,-6.391751,9.334487,-1.231000,-5.360417,-0.942499,-3.590820,-6.618982,-6.061996,1.871923,-7.027129,3.488864,-4.913758,2.052553,-3.152593,-4.071180,-9.147177,-4.526385,5.014235,8.903454,-8.975978,9.626492,6.013827,3.338742,-8.421866,5.397048,4.267677,-6.382160,3.893071,7.634801,0.435559,-3.552956,6.234960,-5.395727,1.865213,-1.392063,9.290568,-6.549025,-4.569511,-4.666383,-1.202413,6.541074,5.078204,3.046643,-2.543571,-1.543404,-7.129322,8.482868,7.598657,5.871044,4.075112,-0.953311,7.246982,-4.814740,-7.060895,-7.057744,-9.499547,5.690697,6.039645,-1.962167,0.236965,-0.809934,1.681028,0.705133,9.542808,-6.662641,8.631008,2.859061,0.451359,-5.090662,-7.369637,0.883738,-0.062522,-2.725117,7.554230,8.858024,2.673224,8.850515,-8.237429,6.107569,6.968313,-1.732243,-9.289857,3.599293,4.844645,-0.084469,-0.248277,8.305650,-8.412960,5.829389,-6.389435,-9.227239,-9.239937,9.083997,9.863783,-7.164184,-3.244814,4.331039,-9.446988,-3.644008,-8.307081,7.259404,-1.186965,5.825184,7.861569,9.693970,-1.974840,0.177636,6.663871,8.619127,-8.308504,9.596183,-7.022931,9.172815,5.532871,1.785959,-6.772439,-5.708948,9.527626,6.074431,-3.523592,-0.616268,5.825914,4.069576,-6.724734,4.470474,-5.295040,1.754716,4.384651,6.798470,4.149200,-2.150385,-2.308331,-9.193530,-5.797292,-6.847057,-8.797835,6.122257,-5.240292,-9.048367,4.938475,2.983572,-8.287337,4.537875,-2.306496,-2.547787,7.078741,1.754461,-3.543051,0.704946,-5.746499,2.315793,-7.754281,-0.309855,-7.067718,-8.460752,-2.915957,0.933246,-3.466330,-1.090302,-5.209957,-8.547606,8.827199,9.191558,-5.976763,-5.017124,-9.936304,9.474331,8.134550,1.118034,5.436896,1.241781,-8.649946], dtype = "float32")#candidate|2843|(243,)|const|float32
var_2844 = relay.var("var_2844", dtype = "int16", shape = (3600,))#candidate|2844|(3600,)|var|int16
const_2845 = relay.const([9,9,4,3,-8,2,3,4,-1,10,-7,3,4,-2,-10,-3,1,-3,1,3,-8,-9,-5,10,5,1,5,-1,2,7,2,-8,-3,-8,-8,4,-7,9,-5,2,-1,1,5,-4,7,8,3,-4,9,-1,-4,7,9,5,-4,-3,2,-10,-9,-3,-8,-6,8,-7,2,8,-2,-9,-10,6,-3,-1,-6,3,9,-10,8,-6,-7,-5,-1,-7,9,-6,10,7,1,-10,10,2,9,4,9,-6,-5,5,6,-10,6,6,-8,-1,10,7,7,9,1,-5,-7,7,2,7,4,4,5,-7,-10,5,-4,-2,-2,-4,6,5,10,5,-4,1,4,-9,3,2,-8,7,-9,-10,-10,8,-6,1,-7,-10,-1,-10,-4,3,-8,-5,4,-8,-9,-6,5,-6,8,-8,4,-5,-7,-1,5,10,-9,-10,5,5,-6,-2,6,-3,5,-9,-9,5,1,-7,-10,-2,10,-1,9,10,1,-6,1,-3,-1,5,-9,6,-6,10,9,-4,-5,-5,-5,10,8,2,7,6,-10,-10,1,10,-10,-3,4,10,-4,-4,2,4,-1,-9,-2,8,8,-2,5,-8,4,-4,9,-8,10,2,5,4,-10,6,-10,5,-4,6,-9,-4,6,-3,-3,5,-2,-5,-3,-7,-2,7,7,9,-9,1,-9,-2,5,7,-8,-1,-1,9,5,-7,9,10,-7,9,4,-5,7,8,-5,-9,-1,-3,-7,8,-10,-1,-8,7,10,3,-8,-6,8,-6,-1,5,-7,4,-5,-6,-7,6,-7,-3,10,10,-4,2,10,-4,5,3,-10,-4,1,-9,-10,-6,-9,6,4,-5,2,-10,-7,5,6,2,7,10,-9,-8,6,-5,-6,-4,7,-1,-9,3,-5,-6,6,-6,5,5,-5,-2,-1,-5,10,-7,9,5,-9,1,-5,-7,-6,-8,-9,6,5,4,-9,-3,6,-3,6,-2,6,-10,-10,-4,2,-9,4,-4,5,7,6,-2,-7,-9,3,-9,5,-10,10,3,-5,-10,8,-9,3,9,-5,-4,-6,-7,-4,-7,-10,4,-2,-10,9,-7,-4,-2,-4,8,3,-2,-5,-9,-5,-10,5,5,-10,6,4,6,2,7,-2,5,-5,4,6,-10,2,-8,-3,6,-5,-5,-6,7,1,-5,-6,-8,-7,-4,-10,4,4,10,-4,-3,1,-7,10,-6,-7,6,9,-6,-8,9,-5,-9,8,10,-8,-10,2,-7,-1,-5,-1,-4,5,-1,2,-1,5,-8,1,-5,-1,-9,2,5,-8,2,1,4,-5,3,4,-4,5,-4,-10,-9,-3,3,-6,-9,-1,6,8,-2,-4,10,-8,-9,-8,1,-1,10,1,-1,4,-3,-2,10,10,3,-6,4,-9,9,5,7,2,-3,-3,-2,-4,-5,-6,6,-7,-2,2,-7,8,-2,5,2,-7,4,9,8,-3,-2,5,4,9,-5,1,-3,7,1,-5,3,6,-3,-3,10,3,4,-2,-2,-4,1,10,-2,9,10,6,7,9,9,-2,-8,3,-5,-8,-3,7,-8,7,-3,-5,2,6,-5,1,7,-3,10,-6,-10,-5,9,-8,-8,-8,3,4,5,9,7,4,-5,10,2,2,10,-4,9,5,6,8,7,9,2,-1,-7,-2,1,-10,7,4,1,-6,9,10,5,7,10,3,1,10,1,2,5,3,-6,-9,5,9,-5,1,5,-3,3,8,1,4,3,2,-8,9,-3,10,4,-4,-6,-10,-3,9,-8,-10,6,-1,-9,-6,1,2,-6,4,2,8,2,-3,8,1,-9,-6,-4,-2,9,2,5,-4,6,8,5,-8,-3,-2,-2,-8,-3,-4,1,-9,-5,-10,7,-9,3,3,-3,-5,-1,-9,1,4,2,-8,-3,5,10,-8,1,-9,5,2,-4,-8,5,8,7,-7,-1,3,-6,3,4,-4,-9,9,7,-3,8,6,9,9,-7,6,-3,-1,5,-6,5,4,-3,7,-2,-2,4,-4,-3,10,9,-7,4,1,4,-10,7,3,7,-1,2,1,-1,-2,8,-4,9,1,-1,-5,-10,-4,-1,7,8,-6,1,-10,-2,5,-4,1,10,7,4,8,10,-3,10,-8,-9,-3,-2,5,3,8,-10,-1,10,-4,3,-10,-6,4,4,6,-8,6,-2,-6,2,2,-2,2,4,-6,-8,10,1,1,7,1,-6,5,-7,-3,-6,10,-2,10,10,3,-4,3,-8,-3,2,2,8,-8,-10,-5,-7,-6,9,5,6,7,-10,7,3,-6,-1,-4,8,7,2,6,-9,8,-10,7,-10,6,-5,9,5,4,6,7,10,1,6,-1,2,2,2,-8,6,-2,8,-2,9,-9,3,-8,-7,-7,8,7,9,2,3,-4,5,-1,-9,8,-8,-4,2,-6,-3,-6,-10,3,-4,-1,-6,-5,10,5,-8,9,1,-7,-7,6,5,-3,4,-4,-2,7,-9,8,-8,-1,8,-2,-3,-4,3,10,-1,-5,-2,3,-6,-1,-3,-4,-4,7,5,10,10,8,-3,3,5,9,9,-9,-2,-1,1,-6,-2,-6,-6,-5,-2,2,-1,-9,5,4,-2,10,-5,-9,-6,-9,9,5,2,4,3,9,-2,-10,8,2,9,4,-3,-10,7,9,-7,-5,-2,-4,6,-9,-4,7,7,2,1,1,8,-5,3,4,8,-10,8,-7,7,-3,9,3,-9,-1,10,6,-3,2,7,-5,-5,7,-9,6,-10,-5,8,4,-2,8,5,9,-7,4,-8,10,4,-7,-2,8,-3,-3,-2,8,10,-7,4,-4,8,-6,7,-2,-3,-3,-1,9,6,4,-6,2,-2,4,-7,-8,4,-3,-2,-1,1,2,-7,-5,4,10,6,8,3,6,10,-4,10,7,-2,10,4,-7,-4,3,4,10,7,9,-9,9,1,-6,-3,-6,1,10,8,10,10,2,9,5,9,6,-1,9,-8,-4,8,-6,3,-8,-1,-7,-2,-8,-10,-6,9,8,5,-3,-2,4,4,-1,-5,-2,-5,-9,7,-7,10,-7,-3,10,-2,-3,-7,-4,-6,-2,4,-9,-2,-6,-6,9,6,7,-10,-9,8,-7,-8,8,6,7,5,-8,4,9,9,-8,-1,-6,1,-3,9,6,1,-3,5,8,8,8,-2,-6,2,-7,10,-5,-1,2,8,-7,-5,7,-4,9,-1,-6,3,-7,7,-9,7,9,-2,-8,-10,-9,-7,4,-9,3,-1,6,-2,-10,-7,5,-3,-4,5,5,-6,2,-9,5,1,-2,1,-10,-3,2,-9,5,-1,-7,10,-6,6,-2,-6,7,-6,-4,8,-10,2,2,10,3,8,-2,2,7,-5,5,7,-3,-10,10,8,-1,-3,-4,-10,-6,7,-9,3,-8,-6,-4,-4,5,-3,-4,-6,-3,-9,2,4,-10,-4,-3,-4,9,-6,2,-9,6,2,3,6,-7,-5,-4,8,3,2,1,6,7,-5,2,6,8,-9,-5,8,-1,10,-3,1,10,-1,1,-5,1,-7,-5,-2,-10,5,9,-7,8,8,-8,9,-2,1,10,-2,-7,6,6,5,1,3,-5,10,8,9,5,-3,10,2,1,3,-7,-10,-6,-8,6,5,-2,7,3,7,5,6,-6,-9,2,-5,-10,-1,9,-1,1,-8,-1,4,-2,1,-2,5,5,7,6,6,8,-10,9,1,9,2,4,-5,8,6,-5,8,-4,7,8,4,3,10,-9,-1,-2,-8,2,5,-1,9,-1,-4,-1,-3,-8,-2,4,4,-7,-2,9,-9,3,-10,6,-10,6,2,-7,-6,-3,-8,4,-10,7,4,-2,-9,-7,-1,6,-10,5,2,6,-9,-8,-7,8,-5,-9,-3,2,-8,-8,-1,-10,9,-2,1,8,-6,6,-3,1,1,9,-1,-5,9,7,10,-3,-5,1,-3,-6,9,4,-6,10,-5,1,-9,4,-10,9,10,-10,-7,3,-1,-8,-10,-2,7,6,-2,-7,-3,-8,4,4,9,1,6,5,10,8,8,-8,4,7,1,7,-7,-9,-2,4,-7,-5,-6,2,6,8,2,8,-10,-9,1,6,-1,-8,10,-4,7,-1,2,9,-3,-1,-2,8,4,-4,-5,10,7,-1,-9,5,-8,9,8,-9,6,6,9,-2,5,-7,-10,10,-6,-4,8,1,6,6,-9,-6,5,2,10,-8,-2,9,5,-9,10,7,5,-4,9,6,6,-2,-8,6,10,4,10,-6,-1,-5,-10,-9,-10,7,-2,7,7,-9,-6,4,1,-10,3,6,-2,-7,5,1,-8,7,3,7,5,-6,1,9,-2,-2,6,9,1,2,1,-3,2,-8,-6,-5,-1,2,-3,-3,-1,-9,5,4,-5,3,-10,6,6,4,-9,3,-4,-1,7,3,10,-4,10,-4,6,3,-4,7,1,4,-2], dtype = "uint16")#candidate|2845|(1664,)|const|uint16
call_2842 = relay.TupleGetItem(func_1863_call(relay.reshape(const_2843.astype('float32'), [9, 3, 9]), relay.reshape(var_2844.astype('int16'), [600, 6]), relay.reshape(const_2845.astype('uint16'), [416, 4]), relay.reshape(var_2844.astype('int16'), [600, 6]), ), 2)
call_2846 = relay.TupleGetItem(func_1869_call(relay.reshape(const_2843.astype('float32'), [9, 3, 9]), relay.reshape(var_2844.astype('int16'), [600, 6]), relay.reshape(const_2845.astype('uint16'), [416, 4]), relay.reshape(var_2844.astype('int16'), [600, 6]), ), 2)
func_2412_call = mod.get_global_var('func_2412')
func_2414_call = mutated_mod.get_global_var('func_2414')
call_2850 = relay.TupleGetItem(func_2412_call(), 0)
call_2851 = relay.TupleGetItem(func_2414_call(), 0)
output = relay.Tuple([bop_2837,call_2842,const_2843,var_2844,const_2845,call_2850,])
output2 = relay.Tuple([bop_2840,call_2846,const_2843,var_2844,const_2845,call_2851,])
func_2864 = relay.Function([var_2844,], output)
mod['func_2864'] = func_2864
mod = relay.transform.InferType()(mod)
var_2865 = relay.var("var_2865", dtype = "int16", shape = (3600,))#candidate|2865|(3600,)|var|int16
output = func_2864(var_2865)
func_2866 = relay.Function([var_2865], output)
mutated_mod['func_2866'] = func_2866
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2571_call = mod.get_global_var('func_2571')
func_2573_call = mutated_mod.get_global_var('func_2573')
call_2876 = relay.TupleGetItem(func_2571_call(), 1)
call_2877 = relay.TupleGetItem(func_2573_call(), 1)
uop_2891 = relay.exp(call_2876.astype('float32')) # shape=(14, 14, 16)
uop_2893 = relay.exp(call_2877.astype('float32')) # shape=(14, 14, 16)
func_510_call = mod.get_global_var('func_510')
func_515_call = mutated_mod.get_global_var('func_515')
const_2898 = relay.const([[False,True,False,False,True,True,False,False,True,False,False,False,False,True,False,False,False,True,False,False,False,False,False,True,False,False,True,False,False,False,True,True,True,True,True,False,False,True,True,True,False,True,True,False,False,True,True,False,False,True,False,False,True,False,False,True,False,True,True,True]], dtype = "bool")#candidate|2898|(1, 60)|const|bool
const_2899 = relay.const([-1,-4,-6,7,-4,-6,1,7,-9,-6,-5,-4,9,-3,8,-6,4,3,8,7,-9,1,2,7,-1,2,4,-5,5,-7,-8,3,-4,-4,-8,-4,-8,6,5,9,-10,3,6,-6,-8,7,-9,7,-9,-4,4,2,3,9,-3,5,1,7,8,2,10,3,10,-1,-1,-5,-4,-6,-7,6,-5,-5,-9,-6,8,4,-7,-7,6,-5,-6,-3,-9,9,4,-6,-8,-5,-3,-5,-9,1,7,5,10,2,2,6,6,5,-5,-9,4,-2,-3,10,-10,-9,8,2,-4,4,2,7,-9,8,-5,-9,-10,-8,1,-6,6,8,9,-4,6,1,1,-8,2,6,-2,6,7,-5,-1,-9,-8,3,-7,-4,-8,-1,-3,-1,4,2,-4,7,4,2,-3,-2,-6,-10,-5,-5,9,4,-4,7,-4,-3,-9,4,2,-9,-4,8,6,-4,2,4,5,3,2,-7,-1,7,-9,-3,4,8,3,-10,5,9,-1,-1,10,-6,-6,-9,3,8,8,5,-3,1,-8,-4,3,10,-8,-2,5,-9,3,9,-7,-8,-10,6,-5,-1,6,-7,1,-6,-10,-5,8,-7,5,9,-5,-4,1,8,7,-10,-5,3,-6,-4,7,1,-5,-8,-6,-2,-3,6,6,-1,-5,7,8,7,7,10,1,9,2,8,-4,9,-9,-3,-10,10,-7,-5,-5,1,-4,-7,-2,2,-6,2,-3,9,-5,-6,9,10,3,1,10,3,10,-8,8,8,2,-6,-10,-8,-9,2,10,-4,-1,-2,-4,4,5,-10,-4,9,-8,-3,-9,-3,-5,6,9,10,-4,1,-9,4,7,-7,2,-8,-10,-7,4,-9,7,8,-7,7,3,7,-3,8,-5,-2,2,7,5,-2,6,-9,9,10,-6,-5,-7,4,5,1,-6,9,4,-9,10,7,-5,8,4,9,-4,-2,9,2,-6,6,-5,10,-8,6,4,-1,-10,2,6,-5,-6,-3,10,6,8,10,6,-3,-10,-2,4,3,4,-9,7,-3,10,-5,-1,10,5,-1,9,5,2,-4,-5,-10,10,-9,5,7,8,-8,7,6,-8,-2,2,-6,9,3,-5,-10,4,4,-3,-5,-5,10,2,3,-5,-9,-6,-3,5,8,-9,-6,10,-2,-1,4,3,7,1,7,8,-3,1,1,2,-5,-10,3,1,2,4,7,1,-5,7,-8,-10,-1,-7,-6,-2,9,3,1,-9,5,1,3,9,4,-1,-1,3,1,-6,8,-9,-9,9,8,5,1,7,-9,1,-2,-4,-3,-5,-7,-3,-1,10,-7,-2,-6,10,4,-1,-4,4,5,9,5,2,6,-6,10,-9,-6,-3,9,-10,-3,-5,3,4,-9,8,10,-7,7,-5,9,5,-4,-8,6,-5,-10,7,-10,-3,-6,5,3,2,5,-9,9,2,6,6,9,-8,-10,2,8,8,-10,-9,7,5,9,8,9,1,3,7,9,-1,-2,8,2,-3,-3,5,4,-1,3,-10,3,-10,-1,8,-4,-8,4,6,3,6,4,3,-9,-10,6,-9,-3,5,5,3,-2,8,4,10,5,-3,-7,-6,3,-1,6,-9,-8,-5,8,4,7,-6,6,-10,3,-2,4,-9,4,7,1,-10,-2,3,3,10,9,-2,-3,8,10,4,-7,-10,-4,-2,-4,-3,-9,6,4,-3,3,10,2,10,7,5,-9,-5,-1,-6,-9,-1,5,-10,3,-2,1,-10,9,2,-6,-9,3,5,-1,10,2,-8,-9,8,2,-10,-1,5,-2,5,3,2,8,-1,-10,8,-2,-1,-5,-5,-8,-1,7,8,-2,-7,10,2,-7,-6,-3,1,1,6,-10,6,-6,-6,4,2,10,4,9,6,10,-4,-8,-6,-6,8,3,-1,-4,2,2,5,-5,10,6,1,1,7,-10,-10,-7,-10,6,-1,-10,-8,1,4,4,-2,-1,-6,-10,-2,8,-7,-2,-9,-10,-9,-5,3,-2,-4,1,9,-8,-4,8,9,8,2,4,-10,-2,-5,8,5,-6,-8,-4,1,-10,2,-1,-5,-8,-10,-10,5,9,-1,9,-7,-6,4,-2,3,9,1,6,-8,-4,-5,9,8,-1,3,6,6,4,3,-4,9,10,3,5,10,-8,-6,4,-4,-3,-6,-8,-3,4,-10,10,2,-9,-8,6,4,1,-10,-3,2,1,7,2,-4,5,5,-5,-9,-1,9,-3,1,4,-10,6,-3,2,10,1,8,-10,-5,-9,-9,9,6,-10,7,10,1,1,-7,-5,5,-1,-3,-6,-7,-3,3,-4,-6,-8,10,-4,6,-6,-6,-9,8,6,2,2,-4,6,8,8,6,-9,-8,7,8,-6,-4,-5,-7,-8,2,-8,4,6,8,6,-4,8,9,5,-9,-10,-7,7,-8,3,-4,6,7,-10,8,8,-2,-3,2,-6,8,-3,-5,-9,7,2,-2,-1,-2,5,8,1,10,3,-9,-2,-7,4,-5,-4,2,6,-6,-5,8,8,3,-8,-1,-4,9,9,-3,9,-5,-2,9,-3,5,-5,9,-10,3,7,8,8,9,7,-2,10,7,6,-10,-5,8,7,-3,2,-5,-4,10,4,9,1,-6,-9,-3,-3,6,7,7,-3,-2,-8,4,2,2,-3,-5,-2,-3,6,-6,10,-6,-5,-2,-3,3,-1,-3,-1,9,8,6,9,-1,-7,3,-6,-6,-9,-1,-3,6,-3,9,6,6,3,3,1,-6,-10,8,7,-9,10,-1,-8,7,7,-3,-3,6,1,8,5,2,5,1,4,8,-4,7,5,-1,-1,5,3,1,-3,10,5,3,-2,9,6,1,6,2,-3,6,-7,-7,-6,-6,7,9,8,1,-6,-7,8,4,8,-9,-7,5,10,6,-10,5,10,9,-5,1,1,-6,8,6,4,-4,-10,8,-3,-6,-1,-10,6,-1,2,-2,10,3,-8,3,-2,-4,8,-4,8,-3,10,10,-5,-7,-2,9,7,-1,10,-8,1,-7,-5,1,1,-2,7,9,4,-6,-6,-10,6,-9,-5,9,8,8,-6,-7,-1,10,-3,-10,6,3,1,-5,7,3,9,-10,5,10,-7,8,8,-7,-8,7,-3,4,-4,-10,2,-2,3,-10,2,-2,9,-6,-10,7,8,-2,4,4,4,8,-9,-9,-4,3,-8,-4,8,1,1,-8,2,1,-5,-4,10,6,-4,-2,-1,4,-3,-6,10,-9,-5,-1,4,-3,-8,-9,-8,-10,10,-1,-10,-2,-5,3,6,-8,8,10,-3,2,-9,-2,6,9,5,-8,-9,7,9,-1,2,9,-7,4,3,3,-7,-1,6,-10,2,-7,8,-4,6,5,-3,1,-3,-1,-1,8,-9,2,9,-10,1,1,-3,-8,2,-10,8,-6,4,-7,4,-6,4,-10,-1,-5,8,-2,3,-4,5,-2,3,6,-7,-6,-8,-2,10,5,-2,4,8,-3,-7,-8,10,5,-5,-3,-4,3,-1,6,9,-3,-4,3,2,-3,-4,9,-8,-9,9,-7,-3,7,-5,5,4,7,4,8,-7,-3,1,-6,10,3,-7,2,-1,4,-2,2,-7,-4,8,-5,4,-7,-1,5,6,9,-10,-3,-10,9,-4,-7,-1,-9,2,5,3,-2,-4,-4,-7,-6,-3,-10,-4,4,1,10,-2,-4,-5,10,-2,10,9,8,6,5,-1,-4,-5,4,10,9,-2,-6,-3,-5,-9,10,-9,-6,-2,-6,-7,9,-9,-9,8,-10,-10,-9,3,7,-9,1,-5,2,-9,10,9,7,4,-6,5,-5,2,-9,8,-4,3,4,4,7,6,-1,-1,-10,6,7,4,6,6,9,-1,10,10,-4,-9,10,-2,-10,-9,8,-8,5,-9,-6,-6,8,9,1,-9,6,8,3,4,3,-6,9,7,4,6,-8,6,-10,-1,6,8,2,-7,7,8,7,2,8,3,-3,3,-1,-9,-7,2,2,7,-7,9,-10,-8,3,-4,-9,-4,-5,-6,-7,7,-7,7,-2,-5,1,-5,-5,7,-2,10,9,6,2,-10,8,4,10,-5,10,-1,6,-1,8,-10,2,-4,5,-4,-1,-7,-4,2,-6,4,1,-4,-1,9,-4,2,8,-6,-5,1,5,-2,-10,-2,-5,2,-2,-4,-3,4,1,-5,3,3,4,-1,3,7,-2,-2,5,-3,-2,10,10,-7,2,-10,-7,-1,9,9,9,-7,-5,8,-5,-5,-9,-4,-8,10,7,5,4,-3,1,-5,6,-1,-3,10,-3,-4,-9,3,-1,9,4,-10,-1,-1,4,1,10,-2,-3,8,7,-8,2,6,-6,-3,-9,1,7,10,-8,5,5,10,10,-3,1,3,-5,-9,4,-3,5,10,-6,5,-3,3,-8,3,-10,-6,10,-4,-10,7,-3,6,-4,1,-9,3,7,-10,-8,4,1,-7,-1,5,-4,-7,1,-4,-10,-5,1,2,6,2,5,10,-8,-5,9,-2,2,-9,-3,-10,-10,-3,-4,1,-7,4,1,-7,4,-9,4,6,-3,9,-8,10,-5,-10,-9,9,-4,-7,-10,5,10,4,7,8,-5,-5,-7,2,7,-10,-3,-2,3,-1,8,6,-1,-10,10,-8,6,-7,-10,4,3,6,5,2,-9,-3,-8,-3,-9,7,2,4,9,-10,2,-6,9,10,10,-2,-4,6,-3,-1,1,-2,3,8,9,3,-5,8,-3,-8,10,-3,-4,-4,-7,9,-5,8,9,4,-7,1,7,4,10,4,1,-2,-6,3,-5,9,7,10,5,-6,-10,-2,8,7,-9,8,8,-6,8,8,-4,-5,-4,7,-8,10,9,5,10,-7,-6,-9,-7,-1,-4,2,5,9,2,-7,-10,-8,-10,10,8,-9,4,-9,10,-10,8,-4,-7,10,-10,10,7,1,-1,-7,8,-3,1,5,-1,-8,5,10,5,-3,-1,5,9,5,-4,-10,8,5,5,-1,-5,3,-10,-3,-5,8,-7,3,-8,9,9,-6,-3,6,-1,6,7,5,4,-10,4,4,2,1,-4,-2,10,-1,9,2,-6,5,8,9,-7,3,-9,-5,4,1,-6,4,2,-10,-3,-10,-3,-2,-4,4,-2,-7,6,3,7,10,8,-9,9,1,4,-1,-6,-9,-4,6,-2,8,-4,-7,-7,-4,3,7,-5,-4,-10,7,7,-8,2,10,6,1,-1,3,-9,4,2,-4,10,7,4,-5,3,6,9,7,-4,-7,1,4,7,-10,9,-8,-3,-10,1,1,-1,7,-3,-9,-7,1,-8,-5,-2,4,10,-4,-6,-3,-10,-1,1,4,6,-8,-2,10,3,5,-2,-1,-2,7,-9,-7,5,1,7,10,9,-6,-9,8,-2,9,3,-6,9,3,6,-7,1,8,3,1,8,-10,-6,8,1,-1,9,9,3,-6,-5,3,-2,4,-1,-9,4,3,-10,-7,-8,7,-6,-7,-10,1,9,9,-6,-9,8,5,9,-4,-1,-10,-9,-8,3,5,2,9,1,5,3,-4,3,-4,1,1,-9,1,-8,-5,6,-6,-10,-2,-5,8,-8,-10,4,-3,-2,-5,5,-10,-4,-6,9,-1,-1,7,9,-5,-8,9,-8,8,-7,2,-8,-5,-1,7,6,-8,2,-4,-1,-7,3,4,8,-3,3,-7,10,-7,6,1,-3,-9,-4,-5,4,-5,-10,8,1,3,7,-6,3,-7,9,-10,-5,-7,-6,6,-6,4,-10,-4,-6,-4,6,-9,5,-7,-2,-7,10,7,-8,-3,-6,10,1,-8,10,9,3,-6,-4,5,2,4,-7,5,6,2,4,7,-8,4,6,-6,1,-9,5,-10,7,-6,-7,-4,10,4,-1,-1,7,-9,-9,3,-6,-5,-8,5,-1,4,5,-2,5,9,8,-5,5,9,8,4,-6,-5,5,4,5,3,-7,3,10,7,1,-6,-7,-2,9,-1,6,3,-9,7,-6,-2,-5,6,8,-7,7,-7,10,-3,7,6,-1,-7,6,4,6,7,-2,1,6,1,1,10,-9,-10,9,4,-5,-2,-6,-4,-2,-6,-4,4,-4,3,-3,7,-8,-10,3,8,-4,-10,5,-5,-5,-1,9,-8,2,-10,-6,9,-4,-10,-3,-6,9,7,1,2,4,-4,-1,-6,6,8,-3,-6,5,5,-6,-3,8,-8,-6,5,-6,-3,-3,-9,-2,-3,-3,-3,4,-4,-2,5,1,-9,6,4,-4,10,-5,10,-8,-4,1,9,7,6,-2,-9,8,9,3,7,-2,9,-8,7,-2,-4,10,8,7,-7,7,-4,-4,-9,8,-6,-5,-8,-4,8,7,8,-5,3,10,-5,-5,-4,-1,10,10,-10,3,-7,-4,-4,9,6,-8,-8,-10,7,-1,8,3,1,-4,-10,8,5,-4,-3,-10,-7,-10,9,7,9,7,9,-3,-5,9,5,3,-1,10,-10,-3,-9,1,4,5,5,9,2,-4,3,10,-3,10,2,8,-10,-6,-3,-8,6,-10,-3,-4,-5,2,4,-7,-7,-10,7,-8,6,-8,2,8,9,-8,9,9,-2,1,3,10,-5,6,8,-8,9,-3,-2,-8,9,5,-7,1,5,5,7,7,-8,5,10,-10,9,-9,-6,-2,-10,2,-1,-9,4,4,9,-5,-8,-3,-4,-7,-6,-4,3,7,4,3,2,-2,5,-8,-9,1,3,-6,-7,-10,7,-5,-1,-4,-2,10,10,-10,8,-9,-3,4,6,-3,-3,6,-6,-10,5,-1,4,3,-3,-9,3,10,10,-1,4,-9,-6,8,-8,-6,6,-10,-1,2,-7,7,-1,-7,-10,5,-2,-2,-1,-8,-1,-2,4,-5,4,-8,-2,-3,9,2,-8,-5,3,-7,-10,-5,-3,-5,-8,1,2,5,6,7,-7,7,5,-4,-1,-5,9,-9,-7,-9,-9,-9,2,6,-3,3,9,-3,-4,-5,1,-4,-1,3,9,3,2,10,-7,4,-9,-9,-9,-5,1,-7,-3,5,4,-10,-9,5,-6,-7,-3,-2,-10,-3,5,-1,9,1,9,-3,-3,9,9,-3,-9,9,-5,-6,-4,-3,6,-7,4,-6,3,5,6,8,-8,-10,5,-10,-10,3,-5,5,2,6,-2,-8,-4,3,-7,-5,3,-3,-5,-9,9,-1,10,-6,7,-10,-6,4,-3,10,-7,6,-8,-10,-2,-10,-1,-5,-6,-5,3,-4,6,-9,-6,-9,-1,6,-4,6,3,6,6,5,2,-7,-7,-6,-2,2,-3,4,5,-5,4,6,-7,1,6,5,8,-5,-6,8,5,7,-2,-1,-1,-6,8,-4,4,8,1,-10,-7,6,5,3,-5,-5,3,1,-2,3,-1,-7,-2,9,-10,4,1,3,3,5,10,2,5,9,4,-9,9,-4,-1,-4,-9,10,-6,5,1,-7,9,6,7,-1,-9,10,4,-9,-6,-8,1,6,-1,9,2,-4,-9,4,8,-9,-6,7,2,9,-8,4,4,-9,4,8,-7,-6,5,-6,-7,-1,5,-7,3,6,2,3,1,-1,-1,10,5,8,-8,-6,9,-10,-5,-3,2,10,-1,-9,4,-9,1,4,-5,-8,9,10,1,-4,8,3,-7,3,5,-2,2,-3,-1,10,1,1,-2,-8,2,9,9,9,6,-4,3,-9,7,7,1,6,-7,-2,9,-2,-3,-2,-5,-8,2,-4,-8,-2,-5,3,-8,7,-5,4,10,4,1,6,8,8,6,6,5,8,-7,-5,7,2,-3,-5,-4,-8,6,10,-10,3,2,-1,-9,6,-10,-3,-3,1,9,8,-7,-10,-10,7,1,-7,1,-8,7,-6,-3,3,2,-1,-10,-6,-5,9,7,9,-6,-8,2,-7,10,-5,-10,10,-6,5,-1,-2,7,6,-7,-1,1,2,-9,-4,10,-3,-2,4,-7,-4,10,-7,-9,-3,9,-3,-7,-6,4,5,-1,-6,-3,-1,-7,-9,2,6,-2,-10,-4,1,-8,6,-9,5,9,-3,10,-3,6,8,1,-9,-2,5,-2,7,-5,1,4,-2,-7,-7,8,8,3,3,-7,-8,3,-4,10,-6,-4,9,-3,3,7,-1,-2,-8,-2,-1,-3,-1,-2,1,8,-9,6,-2,-2,-1,7,-1,-10,5,1,-4,-7,-1,9,3,1,2,3,-8,-3,1,10,10,-2,-3,-1,7,1,-6,-2,-10,2,-2,-7,7,9,9,-1,-9,-2,-8,-9,-10,5,-1,-7,-1,10,-4,-2,-7,1,10,3,-7,-2,-9,-9,9,6,-10,10,10,3,-9,4,-5,9,7,5,-8,-10,-7,-7,3,-6,-4,6,-6,-9,5,-8,8,-6,-1,10,7,8,9,10,-9,-6,-3,-9,1,-4,1,7,-3,-4,-5,6,4,-7,9,6,-6,-3,5,9,-9,-4,-7,10,7,4,8,-5,-4,-5,2,3,6,-6,-9,8,-8,-8,5,-4,-2,4,8,2,4,9,1,-3,-9,7,-3,-5,9,-5,1,-7,-10,3,-2,4,-6,-3,4,-5,4,2,-9,6,2,4,-5,-8,-4,2,10,4,-8,5,1,-6,6,-2,-7,-4,-2,-6,-9,-1,-7,-9,-1,-5,9,1,-1,-5,-5,3,5,-2,-6,-5,3,8,-9,7,9,8,-3,8,-6,-3,1,-2,3,-5,-2,-8,6,-5,4,-6,-5,10,3,-1,2,9,-10,-2,-7,-6,7,6,-9,-10,-4,-5,-1,6,-5,-3,3,-2,3,7,-3,2,6,-5,10,7,4,-4,7,8,-1,2,-3,6,-8,-7,-6,1,9,-5,3,-3,-4,-9,1,4,8,-3,-10,-6,-1,-1,4,-7,10,-9,5,-10,-3,9,-8,-5,9,-7,6,-9,-8,4,-4,4,4,-9,-9,6,-7,5,10,-2,-7,-1,-4,-2,3,-6,-8,1,8,-8,6,-9,3,-10,4,-5,3,-4,6,-3,3,-4,-2,2,6,6,-6,-6,-9,-3,10,-1,-1,2,-2,-6,6,5,-6,7,9,-3,8,-3,6,9,-3,9,-7,1,7,6,7,9,-10,-5,-2,3,10,9,5,1,8,2,-2,7,-2,1,6,-3,10,7,-8,4,-10,3,-10,-3,-8,-4,-10,2,-5,1,4,-2,-4,8,1,2,-4,-9,3,5,-9,-2,1,10,6,9,-7,-8,-10,-7,-8,-6,-3,-9,9,8,4,-8,3,-10,1,-2,-10,3,7,-5,-6,9,6,-8,3,-2,5,3,9,-8,5,-1,10,-7,4,4,-2,1,-3,2,4,-5,5,-8,1,5,8,3,1,-7,-3,-5,3,5,-5,-2,-3,2,4,2,-8,1,4,7,5,8,-4,5,9,3,-4,-6,3,5,-8,3,6,3,10,-7,4,5,10,-7,-7,-4,-7,-10,-10,8,-3,-5,6,3,10,3,5,1,-7,4,-9,6,1,-6,2,1,4,-8,-4,6,-9,7,4,-9,8,-4,-2,-3,-8,-3,3,-8,10,7,7,7,10,-9,-3,7,2,8,-4,6,-2,-2,3,-3,-8,-6,-2,10,-8,-6,9,-10,-7,-4,1,-2,-9,9,-6,6,1,-8,6,4,-9,4,-6,-9,-3,3], dtype = "int16")#candidate|2899|(3600,)|const|int16
call_2897 = relay.TupleGetItem(func_510_call(relay.reshape(const_2898.astype('bool'), [6, 5, 2]), relay.reshape(const_2898.astype('bool'), [6, 5, 2]), relay.reshape(const_2899.astype('int16'), [3600,]), ), 0)
call_2900 = relay.TupleGetItem(func_515_call(relay.reshape(const_2898.astype('bool'), [6, 5, 2]), relay.reshape(const_2898.astype('bool'), [6, 5, 2]), relay.reshape(const_2899.astype('int16'), [3600,]), ), 0)
var_2902 = relay.var("var_2902", dtype = "int16", shape = (3600,))#candidate|2902|(3600,)|var|int16
bop_2903 = relay.floor_mod(const_2899.astype('float64'), relay.reshape(var_2902.astype('float64'), relay.shape_of(const_2899))) # shape=(3600,)
output = relay.Tuple([uop_2891,call_2897,const_2898,bop_2903,])
output2 = relay.Tuple([uop_2893,call_2900,const_2898,bop_2903,])
func_2906 = relay.Function([var_2902,], output)
mod['func_2906'] = func_2906
mod = relay.transform.InferType()(mod)
var_2907 = relay.var("var_2907", dtype = "int16", shape = (3600,))#candidate|2907|(3600,)|var|int16
output = func_2906(var_2907)
func_2908 = relay.Function([var_2907], output)
mutated_mod['func_2908'] = func_2908
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1494_call = mod.get_global_var('func_1494')
func_1495_call = mutated_mod.get_global_var('func_1495')
call_2947 = func_1494_call()
call_2948 = func_1494_call()
func_755_call = mod.get_global_var('func_755')
func_758_call = mutated_mod.get_global_var('func_758')
var_2951 = relay.var("var_2951", dtype = "uint16", shape = (1664,))#candidate|2951|(1664,)|var|uint16
call_2950 = func_755_call(relay.reshape(var_2951.astype('uint16'), [16, 13, 8]))
call_2952 = func_755_call(relay.reshape(var_2951.astype('uint16'), [16, 13, 8]))
uop_2971 = relay.acos(call_2947.astype('float64')) # shape=(14, 14, 16)
uop_2973 = relay.acos(call_2948.astype('float64')) # shape=(14, 14, 16)
func_2140_call = mod.get_global_var('func_2140')
func_2142_call = mutated_mod.get_global_var('func_2142')
call_2975 = relay.TupleGetItem(func_2140_call(), 2)
call_2976 = relay.TupleGetItem(func_2142_call(), 2)
output = relay.Tuple([call_2950,var_2951,uop_2971,call_2975,])
output2 = relay.Tuple([call_2952,var_2951,uop_2973,call_2976,])
func_2979 = relay.Function([var_2951,], output)
mod['func_2979'] = func_2979
mod = relay.transform.InferType()(mod)
mutated_mod['func_2979'] = func_2979
mutated_mod = relay.transform.InferType()(mutated_mod)
var_2980 = relay.var("var_2980", dtype = "uint16", shape = (1664,))#candidate|2980|(1664,)|var|uint16
func_2979_call = mutated_mod.get_global_var('func_2979')
call_2981 = func_2979_call(var_2980)
output = call_2981
func_2982 = relay.Function([var_2980], output)
mutated_mod['func_2982'] = func_2982
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2571_call = mod.get_global_var('func_2571')
func_2573_call = mutated_mod.get_global_var('func_2573')
call_2998 = relay.TupleGetItem(func_2571_call(), 0)
call_2999 = relay.TupleGetItem(func_2573_call(), 0)
output = relay.Tuple([call_2998,])
output2 = relay.Tuple([call_2999,])
func_3003 = relay.Function([], output)
mod['func_3003'] = func_3003
mod = relay.transform.InferType()(mod)
output = func_3003()
func_3004 = relay.Function([], output)
mutated_mod['func_3004'] = func_3004
mutated_mod = relay.transform.InferType()(mutated_mod)
var_3015 = relay.var("var_3015", dtype = "float32", shape = ())#candidate|3015|()|var|float32
var_3016 = relay.var("var_3016", dtype = "float32", shape = (12, 11, 13))#candidate|3016|(12, 11, 13)|var|float32
bop_3017 = relay.subtract(var_3015.astype('float32'), var_3016.astype('float32')) # shape=(12, 11, 13)
bop_3024 = relay.left_shift(var_3015.astype('int32'), var_3016.astype('int32')) # shape=(12, 11, 13)
bop_3027 = relay.multiply(var_3015.astype('uint64'), bop_3024.astype('uint64')) # shape=(12, 11, 13)
func_1494_call = mod.get_global_var('func_1494')
func_1495_call = mutated_mod.get_global_var('func_1495')
call_3031 = func_1494_call()
call_3032 = func_1494_call()
func_2199_call = mod.get_global_var('func_2199')
func_2201_call = mutated_mod.get_global_var('func_2201')
call_3033 = relay.TupleGetItem(func_2199_call(), 1)
call_3034 = relay.TupleGetItem(func_2201_call(), 1)
output = relay.Tuple([bop_3017,bop_3027,call_3031,call_3033,])
output2 = relay.Tuple([bop_3017,bop_3027,call_3032,call_3034,])
func_3043 = relay.Function([var_3015,var_3016,], output)
mod['func_3043'] = func_3043
mod = relay.transform.InferType()(mod)
mutated_mod['func_3043'] = func_3043
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3043_call = mutated_mod.get_global_var('func_3043')
var_3045 = relay.var("var_3045", dtype = "float32", shape = ())#candidate|3045|()|var|float32
var_3046 = relay.var("var_3046", dtype = "float32", shape = (12, 11, 13))#candidate|3046|(12, 11, 13)|var|float32
call_3044 = func_3043_call(var_3045,var_3046,)
output = call_3044
func_3047 = relay.Function([var_3045,var_3046,], output)
mutated_mod['func_3047'] = func_3047
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2312_call = mod.get_global_var('func_2312')
func_2314_call = mutated_mod.get_global_var('func_2314')
call_3107 = relay.TupleGetItem(func_2312_call(), 0)
call_3108 = relay.TupleGetItem(func_2314_call(), 0)
func_1251_call = mod.get_global_var('func_1251')
func_1254_call = mutated_mod.get_global_var('func_1254')
const_3111 = relay.const([[-3.455369],[-4.978798],[5.521770],[-3.926914],[5.319370],[7.198154],[7.070661],[5.269186],[-2.017758],[6.945335],[-0.141748],[-4.754302],[-3.612835],[-3.809379],[3.918351],[-0.980627],[7.806540],[1.479682],[5.419017],[-8.550808],[-6.780028],[0.936107],[5.691429],[-7.836013],[-3.513397],[2.547355],[3.269274],[6.713152],[8.786707],[-6.331717],[7.496959],[-5.351834],[-6.701287],[3.897014],[5.096353],[-5.169692],[2.999614],[3.100132],[-3.665820],[6.559312],[-7.110033],[2.751362],[-5.074317],[7.673541],[5.262213],[-5.450894],[-0.573274],[4.770316],[-4.187458],[3.576621],[2.505971],[-1.732114],[1.339122],[1.638794],[2.030155],[9.470552],[1.770946],[-7.219649],[6.352095],[-5.087853],[3.296232],[9.394086],[9.146716],[-7.607412],[8.981227],[-0.750050],[3.567688],[-1.172106],[-6.732487],[-8.257602],[-6.565892],[7.048067],[8.547636],[6.901583],[0.771298],[7.140565],[5.310432],[8.069922],[3.408183],[-6.803079],[3.188267],[1.288275],[8.500845],[4.991110],[-2.716285],[-5.925486],[6.109230],[-3.459366],[4.834761],[8.631014],[3.340000],[8.457033],[2.831548],[-1.041050],[0.642044],[-3.391807]], dtype = "float32")#candidate|3111|(96, 1)|const|float32
call_3110 = func_1251_call(relay.reshape(const_3111.astype('float32'), [8, 6, 2]))
call_3112 = func_1251_call(relay.reshape(const_3111.astype('float32'), [8, 6, 2]))
output = relay.Tuple([call_3107,call_3110,const_3111,])
output2 = relay.Tuple([call_3108,call_3112,const_3111,])
func_3116 = relay.Function([], output)
mod['func_3116'] = func_3116
mod = relay.transform.InferType()(mod)
mutated_mod['func_3116'] = func_3116
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3116_call = mutated_mod.get_global_var('func_3116')
call_3117 = func_3116_call()
output = call_3117
func_3118 = relay.Function([], output)
mutated_mod['func_3118'] = func_3118
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1736_call = mod.get_global_var('func_1736')
func_1737_call = mutated_mod.get_global_var('func_1737')
call_3119 = relay.TupleGetItem(func_1736_call(), 2)
call_3120 = relay.TupleGetItem(func_1737_call(), 2)
func_1948_call = mod.get_global_var('func_1948')
func_1949_call = mutated_mod.get_global_var('func_1949')
call_3133 = relay.TupleGetItem(func_1948_call(), 0)
call_3134 = relay.TupleGetItem(func_1949_call(), 0)
func_89_call = mod.get_global_var('func_89')
func_92_call = mutated_mod.get_global_var('func_92')
var_3144 = relay.var("var_3144", dtype = "int16", shape = (3600,))#candidate|3144|(3600,)|var|int16
call_3143 = func_89_call(relay.reshape(var_3144.astype('int16'), [15, 16, 15]), relay.reshape(var_3144.astype('int16'), [15, 16, 15]), )
call_3145 = func_89_call(relay.reshape(var_3144.astype('int16'), [15, 16, 15]), relay.reshape(var_3144.astype('int16'), [15, 16, 15]), )
func_1936_call = mod.get_global_var('func_1936')
func_1938_call = mutated_mod.get_global_var('func_1938')
const_3152 = relay.const([-1,8,8,-4,2,9,1,-3,-8,-7,-10,-1,-1,10,-5,9,-1,9,-9,-4,-6,-6,-4,-9,-5,-9,-5,-7,-3,4,-9,3,7,9,6,-8,8,-9,-2,-9,5,3,6,6,4,-9,-10,5,6,-5,9,5,7,4,-2,-8,8,-7,-9,6,-1,-8,-9,10,9,10,-7,7,-10,-3,1,9,1,6,9,5,10,2,-8,-7,-8,-5,1,-10,5,3,-7,7,-10,-9,-6,-10,-10,6,-9,-5,7,3,-3,8,6,-4,-6,10,4,7,-4,8,3,1,4,-8,-5,-2,-4,8,4,3,-3,-7,4,10,-3,1,-10,-8,8,9,5,-4,2,8,-4,-7,6,7,-8,-10,-5,4,3,2,-8,-7,-2,1,-4,1,2,6,-10,9,-2,-8,10,-2,6,6,-7,-6,-5,5,5,-7,4,4,8,3,-2,7,-4,7,-5,3,-8,-4,-3,-2,7,-5,5,-6,-5,-1,3,-9,8,-7,10,6,-9,5,-9,2,8,-6,9,6,-4,-10,-4,4,-6,-5,-2,-8,-1,-5,-10,8,-4,-1,-10,-6,-3,-1,-7,10,-9,4,8,-4,-5,-1,6,4,-6,3,-1,10,7,-10,-10,10,7,-3,-5,6,-4,4,-8,9,3,-2,5,8,-7,6,1,7,9,-3,-6,2,-7,1,-7,9,-4,-4,-5,1,-1,7,5,9,7,6,-2,5,-9,5,9,-5,5,4,-2,-1,-3,4,-6,2,9,-7,10,-10,-8,-4,9,2,9,-3,10,-3,-4,-3,-1,2,-4,-1,-10,-3,4,-5,-7,6,-2,8,-4,-7,7,9,-4,8,-9,-2,9,-7,-5,5,-1,9,-1,5,5,6,-1,-9,-5,3,-7,-2,2,-7,-4,-8,-5,-8,1,4,7,-9,-4,-1,7,-2,1,-9,3,-10,10,2,3,4,5,-2,-9,-1,9,-3,-8,-9,6,1,-5,6,9,1,-2,-7,-4,-1,10,-7,4,7,4,10,-5,-1,4,-6,-9,-6,-3,-8,-4,9,1,-4,7,-6,7,-2,8,1,-3,6,5,3,-7,-4,-1,4,10,-4,9,-5,-5,7,10,-7,8,-7,9,10,2,-6,6,5,-8,-10,-9,3,3,9,-1,-8,-2,-1,-4,7,-2,7,3,-3,-10,-9,-7,-5,4,4,2,4,7,-7,6,-5,8,-8,5,-3,-4,6,-7,-2,4,-8,-7,10,-10,3,10,-6,-1,9,-6,10,7,1,-6,-6,-10,5,-9,-1,2,4,-5,10,5,-1,6,-10,7,8,4,-4,-10,-2,-5,-7,1,1,-2,-2,-2,7,-6,10,8,-9,-4,7,-3,3,3,5,1,-10,8,-9,6,-8,-1,-6,-8,1,7,8,-8,7,2,7,-9,6,10,-8,9,7,-4,-9,7,4,10,5,2,-9,-6,-8,5,2,9,-2,-4,10,-3,8,-1,-5,4,-8,1,-1,-6,-4,4,8,4,4,10,-5,5,4,-8,6,10,8,-3,-10,9,2,8,7,-2,9,6,-5,-9,-6,8,1,-10,-9,10,-2,3,-2,-5,-2,-3,9,7,10,-2,5,10,8,-6,3,-8,5,-2,-2,-8,-4,-7,10,-8,4,-7,-10,6,9,8,-6,-8,8,9,-6,4,8,6,7,-10,-2,1,-6,-3,-7,-8,5,-5,5,-3,-1,-3,-10,8,-3,-10,5,-8,-8,-7,-9,-9,8,-9,8,-6,-1,-9,-9,8,-5,-6,2,3,-6,5,5,2,-8,6,5,4,-2,4,-9,-3,5,-9,7,4,-4,9,-5,-1,-3,10,3,-3,6,-6,2,-3,1,1,-4,1,8,-7,4,7,-7,5,-2,4,-6,6,2,-4,-1,-2,3,-5,5,3,10,-7,10,8,2,1,2,7,-5,6,-7,-3,4,-1,-7,-8,-6,-5,-1,-8,5,-3,7,1,-3,7,9,-10,7,-2,8,3,-7,2,-1,10,-10,-3,3,8,-4,5,7,6,9,-8,6,-10,-10,-10,3,-7,1,1,-7,-1,3,4,-3,4,8,6,-1,-8,1,4,-6,-8,-2,-2,-7,9,8,2,6,3,7,-10,8,-1,-4,4,5,-8,2,-5,-4,2,2,3,-9], dtype = "uint32")#candidate|3152|(800,)|const|uint32
call_3151 = func_1936_call(relay.reshape(const_3152.astype('uint32'), [10, 10, 8]))
call_3153 = func_1936_call(relay.reshape(const_3152.astype('uint32'), [10, 10, 8]))
output = relay.Tuple([call_3119,call_3133,call_3143,var_3144,call_3151,const_3152,])
output2 = relay.Tuple([call_3120,call_3134,call_3145,var_3144,call_3153,const_3152,])
func_3154 = relay.Function([var_3144,], output)
mod['func_3154'] = func_3154
mod = relay.transform.InferType()(mod)
var_3155 = relay.var("var_3155", dtype = "int16", shape = (3600,))#candidate|3155|(3600,)|var|int16
output = func_3154(var_3155)
func_3156 = relay.Function([var_3155], output)
mutated_mod['func_3156'] = func_3156
mutated_mod = relay.transform.InferType()(mutated_mod)
var_3178 = relay.var("var_3178", dtype = "float32", shape = (2, 16, 5))#candidate|3178|(2, 16, 5)|var|float32
uop_3179 = relay.acosh(var_3178.astype('float32')) # shape=(2, 16, 5)
output = relay.Tuple([uop_3179,])
output2 = relay.Tuple([uop_3179,])
func_3183 = relay.Function([var_3178,], output)
mod['func_3183'] = func_3183
mod = relay.transform.InferType()(mod)
mutated_mod['func_3183'] = func_3183
mutated_mod = relay.transform.InferType()(mutated_mod)
var_3184 = relay.var("var_3184", dtype = "float32", shape = (2, 16, 5))#candidate|3184|(2, 16, 5)|var|float32
func_3183_call = mutated_mod.get_global_var('func_3183')
call_3185 = func_3183_call(var_3184)
output = call_3185
func_3186 = relay.Function([var_3184], output)
mutated_mod['func_3186'] = func_3186
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2412_call = mod.get_global_var('func_2412')
func_2414_call = mutated_mod.get_global_var('func_2414')
call_3234 = relay.TupleGetItem(func_2412_call(), 0)
call_3235 = relay.TupleGetItem(func_2414_call(), 0)
output = call_3234
output2 = call_3235
func_3261 = relay.Function([], output)
mod['func_3261'] = func_3261
mod = relay.transform.InferType()(mod)
output = func_3261()
func_3262 = relay.Function([], output)
mutated_mod['func_3262'] = func_3262
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1126_call = mod.get_global_var('func_1126')
func_1127_call = mutated_mod.get_global_var('func_1127')
call_3270 = func_1126_call()
call_3271 = func_1126_call()
func_2823_call = mod.get_global_var('func_2823')
func_2825_call = mutated_mod.get_global_var('func_2825')
call_3272 = relay.TupleGetItem(func_2823_call(), 0)
call_3273 = relay.TupleGetItem(func_2825_call(), 0)
func_2338_call = mod.get_global_var('func_2338')
func_2340_call = mutated_mod.get_global_var('func_2340')
call_3277 = relay.TupleGetItem(func_2338_call(), 1)
call_3278 = relay.TupleGetItem(func_2340_call(), 1)
func_2274_call = mod.get_global_var('func_2274')
func_2278_call = mutated_mod.get_global_var('func_2278')
const_3281 = relay.const([[-5.621442,-4.802181,-0.791616,9.679483,-9.419073,6.852071],[5.278996,0.999018,2.578117,-4.255411,-5.592867,1.344663],[-1.511450,0.183463,8.701591,3.372258,-6.122882,-8.957838],[-4.003872,6.645131,-5.378849,0.115906,2.359112,0.361729],[-7.000629,4.743630,-8.773358,1.095901,5.005684,0.090552],[-1.658229,-2.387057,8.395365,9.726556,5.319422,-8.901090],[5.348026,1.623369,2.690181,8.851063,-7.560889,-3.507863],[-0.085788,-8.973904,-2.905923,-8.311592,-7.555686,3.677026],[7.500384,7.955954,-4.805174,-0.800736,-1.465866,-1.185537],[8.924649,4.376009,-7.169079,-9.795647,9.928979,7.246744],[-8.915276,-5.890696,-0.955785,-1.011443,-4.881811,-1.754006],[-8.812231,7.216406,4.061908,-4.915277,6.330817,-4.983958],[1.315111,-7.349534,9.338568,0.445357,2.669208,2.768766],[5.796617,6.374498,1.128299,-0.245263,0.416113,-3.138360],[-4.343304,1.438929,7.057661,0.827947,-8.625944,3.343449],[6.987072,0.833860,6.168459,0.325031,9.134702,-3.549506]], dtype = "float32")#candidate|3281|(16, 6)|const|float32
var_3282 = relay.var("var_3282", dtype = "int64", shape = ())#candidate|3282|()|var|int64
call_3280 = relay.TupleGetItem(func_2274_call(relay.reshape(const_3281.astype('float32'), [96,]), relay.reshape(var_3282.astype('int64'), []), ), 3)
call_3283 = relay.TupleGetItem(func_2278_call(relay.reshape(const_3281.astype('float32'), [96,]), relay.reshape(var_3282.astype('int64'), []), ), 3)
output = relay.Tuple([call_3270,call_3272,call_3277,call_3280,const_3281,var_3282,])
output2 = relay.Tuple([call_3271,call_3273,call_3278,call_3283,const_3281,var_3282,])
func_3287 = relay.Function([var_3282,], output)
mod['func_3287'] = func_3287
mod = relay.transform.InferType()(mod)
mutated_mod['func_3287'] = func_3287
mutated_mod = relay.transform.InferType()(mutated_mod)
var_3288 = relay.var("var_3288", dtype = "int64", shape = ())#candidate|3288|()|var|int64
func_3287_call = mutated_mod.get_global_var('func_3287')
call_3289 = func_3287_call(var_3288)
output = call_3289
func_3290 = relay.Function([var_3288], output)
mutated_mod['func_3290'] = func_3290
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2338_call = mod.get_global_var('func_2338')
func_2340_call = mutated_mod.get_global_var('func_2340')
call_3319 = relay.TupleGetItem(func_2338_call(), 0)
call_3320 = relay.TupleGetItem(func_2340_call(), 0)
func_3116_call = mod.get_global_var('func_3116')
func_3118_call = mutated_mod.get_global_var('func_3118')
call_3322 = relay.TupleGetItem(func_3116_call(), 2)
call_3323 = relay.TupleGetItem(func_3118_call(), 2)
uop_3339 = relay.acos(call_3322.astype('float64')) # shape=(96, 1)
uop_3341 = relay.acos(call_3323.astype('float64')) # shape=(96, 1)
output = relay.Tuple([call_3319,uop_3339,])
output2 = relay.Tuple([call_3320,uop_3341,])
func_3342 = relay.Function([], output)
mod['func_3342'] = func_3342
mod = relay.transform.InferType()(mod)
output = func_3342()
func_3343 = relay.Function([], output)
mutated_mod['func_3343'] = func_3343
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3116_call = mod.get_global_var('func_3116')
func_3118_call = mutated_mod.get_global_var('func_3118')
call_3476 = relay.TupleGetItem(func_3116_call(), 0)
call_3477 = relay.TupleGetItem(func_3118_call(), 0)
output = call_3476
output2 = call_3477
func_3480 = relay.Function([], output)
mod['func_3480'] = func_3480
mod = relay.transform.InferType()(mod)
mutated_mod['func_3480'] = func_3480
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3480_call = mutated_mod.get_global_var('func_3480')
call_3481 = func_3480_call()
output = call_3481
func_3482 = relay.Function([], output)
mutated_mod['func_3482'] = func_3482
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2370_call = mod.get_global_var('func_2370')
func_2372_call = mutated_mod.get_global_var('func_2372')
call_3494 = func_2370_call()
call_3495 = func_2370_call()
func_1166_call = mod.get_global_var('func_1166')
func_1168_call = mutated_mod.get_global_var('func_1168')
call_3523 = relay.TupleGetItem(func_1166_call(), 0)
call_3524 = relay.TupleGetItem(func_1168_call(), 0)
func_2338_call = mod.get_global_var('func_2338')
func_2340_call = mutated_mod.get_global_var('func_2340')
call_3529 = relay.TupleGetItem(func_2338_call(), 0)
call_3530 = relay.TupleGetItem(func_2340_call(), 0)
output = relay.Tuple([call_3494,call_3523,call_3529,])
output2 = relay.Tuple([call_3495,call_3524,call_3530,])
func_3549 = relay.Function([], output)
mod['func_3549'] = func_3549
mod = relay.transform.InferType()(mod)
output = func_3549()
func_3550 = relay.Function([], output)
mutated_mod['func_3550'] = func_3550
mutated_mod = relay.transform.InferType()(mutated_mod)
var_3551 = relay.var("var_3551", dtype = "int16", shape = (6, 16, 13))#candidate|3551|(6, 16, 13)|var|int16
var_3552 = relay.var("var_3552", dtype = "int16", shape = (6, 16, 13))#candidate|3552|(6, 16, 13)|var|int16
bop_3553 = relay.left_shift(var_3551.astype('int16'), relay.reshape(var_3552.astype('int16'), relay.shape_of(var_3551))) # shape=(6, 16, 13)
output = relay.Tuple([bop_3553,])
output2 = relay.Tuple([bop_3553,])
func_3558 = relay.Function([var_3551,var_3552,], output)
mod['func_3558'] = func_3558
mod = relay.transform.InferType()(mod)
mutated_mod['func_3558'] = func_3558
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3558_call = mutated_mod.get_global_var('func_3558')
var_3560 = relay.var("var_3560", dtype = "int16", shape = (6, 16, 13))#candidate|3560|(6, 16, 13)|var|int16
var_3561 = relay.var("var_3561", dtype = "int16", shape = (6, 16, 13))#candidate|3561|(6, 16, 13)|var|int16
call_3559 = func_3558_call(var_3560,var_3561,)
output = call_3559
func_3562 = relay.Function([var_3560,var_3561,], output)
mutated_mod['func_3562'] = func_3562
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2199_call = mod.get_global_var('func_2199')
func_2201_call = mutated_mod.get_global_var('func_2201')
call_3564 = relay.TupleGetItem(func_2199_call(), 3)
call_3565 = relay.TupleGetItem(func_2201_call(), 3)
output = relay.Tuple([call_3564,])
output2 = relay.Tuple([call_3565,])
func_3572 = relay.Function([], output)
mod['func_3572'] = func_3572
mod = relay.transform.InferType()(mod)
output = func_3572()
func_3573 = relay.Function([], output)
mutated_mod['func_3573'] = func_3573
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3572_call = mod.get_global_var('func_3572')
func_3573_call = mutated_mod.get_global_var('func_3573')
call_3589 = relay.TupleGetItem(func_3572_call(), 0)
call_3590 = relay.TupleGetItem(func_3573_call(), 0)
output = relay.Tuple([call_3589,])
output2 = relay.Tuple([call_3590,])
func_3601 = relay.Function([], output)
mod['func_3601'] = func_3601
mod = relay.transform.InferType()(mod)
mutated_mod['func_3601'] = func_3601
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3601_call = mutated_mod.get_global_var('func_3601')
call_3602 = func_3601_call()
output = call_3602
func_3603 = relay.Function([], output)
mutated_mod['func_3603'] = func_3603
mutated_mod = relay.transform.InferType()(mutated_mod)
var_3610 = relay.var("var_3610", dtype = "float32", shape = (12, 10, 1))#candidate|3610|(12, 10, 1)|var|float32
uop_3611 = relay.tan(var_3610.astype('float32')) # shape=(12, 10, 1)
uop_3618 = relay.cos(uop_3611.astype('float32')) # shape=(12, 10, 1)
output = relay.Tuple([uop_3618,])
output2 = relay.Tuple([uop_3618,])
func_3620 = relay.Function([var_3610,], output)
mod['func_3620'] = func_3620
mod = relay.transform.InferType()(mod)
mutated_mod['func_3620'] = func_3620
mutated_mod = relay.transform.InferType()(mutated_mod)
var_3621 = relay.var("var_3621", dtype = "float32", shape = (12, 10, 1))#candidate|3621|(12, 10, 1)|var|float32
func_3620_call = mutated_mod.get_global_var('func_3620')
call_3622 = func_3620_call(var_3621)
output = call_3622
func_3623 = relay.Function([var_3621], output)
mutated_mod['func_3623'] = func_3623
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1704_call = mod.get_global_var('func_1704')
func_1705_call = mutated_mod.get_global_var('func_1705')
call_3631 = relay.TupleGetItem(func_1704_call(), 1)
call_3632 = relay.TupleGetItem(func_1705_call(), 1)
output = call_3631
output2 = call_3632
func_3633 = relay.Function([], output)
mod['func_3633'] = func_3633
mod = relay.transform.InferType()(mod)
mutated_mod['func_3633'] = func_3633
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3633_call = mutated_mod.get_global_var('func_3633')
call_3634 = func_3633_call()
output = call_3634
func_3635 = relay.Function([], output)
mutated_mod['func_3635'] = func_3635
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2140_call = mod.get_global_var('func_2140')
func_2142_call = mutated_mod.get_global_var('func_2142')
call_3648 = relay.TupleGetItem(func_2140_call(), 1)
call_3649 = relay.TupleGetItem(func_2142_call(), 1)
output = call_3648
output2 = call_3649
func_3670 = relay.Function([], output)
mod['func_3670'] = func_3670
mod = relay.transform.InferType()(mod)
output = func_3670()
func_3671 = relay.Function([], output)
mutated_mod['func_3671'] = func_3671
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3480_call = mod.get_global_var('func_3480')
func_3482_call = mutated_mod.get_global_var('func_3482')
call_3684 = func_3480_call()
call_3685 = func_3480_call()
output = relay.Tuple([call_3684,])
output2 = relay.Tuple([call_3685,])
func_3707 = relay.Function([], output)
mod['func_3707'] = func_3707
mod = relay.transform.InferType()(mod)
output = func_3707()
func_3708 = relay.Function([], output)
mutated_mod['func_3708'] = func_3708
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3601_call = mod.get_global_var('func_3601')
func_3603_call = mutated_mod.get_global_var('func_3603')
call_3823 = relay.TupleGetItem(func_3601_call(), 0)
call_3824 = relay.TupleGetItem(func_3603_call(), 0)
output = relay.Tuple([call_3823,])
output2 = relay.Tuple([call_3824,])
func_3843 = relay.Function([], output)
mod['func_3843'] = func_3843
mod = relay.transform.InferType()(mod)
mutated_mod['func_3843'] = func_3843
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3843_call = mutated_mod.get_global_var('func_3843')
call_3844 = func_3843_call()
output = call_3844
func_3845 = relay.Function([], output)
mutated_mod['func_3845'] = func_3845
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2823_call = mod.get_global_var('func_2823')
func_2825_call = mutated_mod.get_global_var('func_2825')
call_3866 = relay.TupleGetItem(func_2823_call(), 0)
call_3867 = relay.TupleGetItem(func_2825_call(), 0)
func_1863_call = mod.get_global_var('func_1863')
func_1869_call = mutated_mod.get_global_var('func_1869')
var_3881 = relay.var("var_3881", dtype = "float32", shape = (243,))#candidate|3881|(243,)|var|float32
var_3882 = relay.var("var_3882", dtype = "int16", shape = (600, 6))#candidate|3882|(600, 6)|var|int16
var_3883 = relay.var("var_3883", dtype = "uint16", shape = (1664,))#candidate|3883|(1664,)|var|uint16
call_3880 = relay.TupleGetItem(func_1863_call(relay.reshape(var_3881.astype('float32'), [9, 3, 9]), relay.reshape(var_3882.astype('int16'), [600, 6]), relay.reshape(var_3883.astype('uint16'), [416, 4]), relay.reshape(var_3882.astype('int16'), [600, 6]), ), 2)
call_3884 = relay.TupleGetItem(func_1869_call(relay.reshape(var_3881.astype('float32'), [9, 3, 9]), relay.reshape(var_3882.astype('int16'), [600, 6]), relay.reshape(var_3883.astype('uint16'), [416, 4]), relay.reshape(var_3882.astype('int16'), [600, 6]), ), 2)
output = relay.Tuple([call_3866,call_3880,var_3881,var_3882,var_3883,])
output2 = relay.Tuple([call_3867,call_3884,var_3881,var_3882,var_3883,])
func_3885 = relay.Function([var_3881,var_3882,var_3883,], output)
mod['func_3885'] = func_3885
mod = relay.transform.InferType()(mod)
var_3886 = relay.var("var_3886", dtype = "float32", shape = (243,))#candidate|3886|(243,)|var|float32
var_3887 = relay.var("var_3887", dtype = "int16", shape = (600, 6))#candidate|3887|(600, 6)|var|int16
var_3888 = relay.var("var_3888", dtype = "uint16", shape = (1664,))#candidate|3888|(1664,)|var|uint16
output = func_3885(var_3886,var_3887,var_3888,)
func_3889 = relay.Function([var_3886,var_3887,var_3888,], output)
mutated_mod['func_3889'] = func_3889
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3549_call = mod.get_global_var('func_3549')
func_3550_call = mutated_mod.get_global_var('func_3550')
call_3902 = relay.TupleGetItem(func_3549_call(), 0)
call_3903 = relay.TupleGetItem(func_3550_call(), 0)
output = relay.Tuple([call_3902,])
output2 = relay.Tuple([call_3903,])
func_3906 = relay.Function([], output)
mod['func_3906'] = func_3906
mod = relay.transform.InferType()(mod)
output = func_3906()
func_3907 = relay.Function([], output)
mutated_mod['func_3907'] = func_3907
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2140_call = mod.get_global_var('func_2140')
func_2142_call = mutated_mod.get_global_var('func_2142')
call_4029 = relay.TupleGetItem(func_2140_call(), 0)
call_4030 = relay.TupleGetItem(func_2142_call(), 0)
var_4045 = relay.var("var_4045", dtype = "float32", shape = (14, 14, 16))#candidate|4045|(14, 14, 16)|var|float32
bop_4046 = relay.maximum(call_4029.astype('float64'), relay.reshape(var_4045.astype('float64'), relay.shape_of(call_4029))) # shape=(14, 14, 16)
bop_4049 = relay.maximum(call_4030.astype('float64'), relay.reshape(var_4045.astype('float64'), relay.shape_of(call_4030))) # shape=(14, 14, 16)
output = relay.Tuple([bop_4046,])
output2 = relay.Tuple([bop_4049,])
func_4057 = relay.Function([var_4045,], output)
mod['func_4057'] = func_4057
mod = relay.transform.InferType()(mod)
var_4058 = relay.var("var_4058", dtype = "float32", shape = (14, 14, 16))#candidate|4058|(14, 14, 16)|var|float32
output = func_4057(var_4058)
func_4059 = relay.Function([var_4058], output)
mutated_mod['func_4059'] = func_4059
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1736_call = mod.get_global_var('func_1736')
func_1737_call = mutated_mod.get_global_var('func_1737')
call_4064 = relay.TupleGetItem(func_1736_call(), 1)
call_4065 = relay.TupleGetItem(func_1737_call(), 1)
func_2086_call = mod.get_global_var('func_2086')
func_2088_call = mutated_mod.get_global_var('func_2088')
call_4081 = relay.TupleGetItem(func_2086_call(), 0)
call_4082 = relay.TupleGetItem(func_2088_call(), 0)
output = relay.Tuple([call_4064,call_4081,])
output2 = relay.Tuple([call_4065,call_4082,])
func_4088 = relay.Function([], output)
mod['func_4088'] = func_4088
mod = relay.transform.InferType()(mod)
mutated_mod['func_4088'] = func_4088
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4088_call = mutated_mod.get_global_var('func_4088')
call_4089 = func_4088_call()
output = call_4089
func_4090 = relay.Function([], output)
mutated_mod['func_4090'] = func_4090
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3572_call = mod.get_global_var('func_3572')
func_3573_call = mutated_mod.get_global_var('func_3573')
call_4101 = relay.TupleGetItem(func_3572_call(), 0)
call_4102 = relay.TupleGetItem(func_3573_call(), 0)
var_4106 = relay.var("var_4106", dtype = "uint64", shape = (14, 14, 16))#candidate|4106|(14, 14, 16)|var|uint64
bop_4107 = relay.bitwise_xor(call_4101.astype('uint64'), relay.reshape(var_4106.astype('uint64'), relay.shape_of(call_4101))) # shape=(14, 14, 16)
bop_4110 = relay.bitwise_xor(call_4102.astype('uint64'), relay.reshape(var_4106.astype('uint64'), relay.shape_of(call_4102))) # shape=(14, 14, 16)
func_3342_call = mod.get_global_var('func_3342')
func_3343_call = mutated_mod.get_global_var('func_3343')
call_4112 = relay.TupleGetItem(func_3342_call(), 0)
call_4113 = relay.TupleGetItem(func_3343_call(), 0)
output = relay.Tuple([bop_4107,call_4112,])
output2 = relay.Tuple([bop_4110,call_4113,])
func_4117 = relay.Function([var_4106,], output)
mod['func_4117'] = func_4117
mod = relay.transform.InferType()(mod)
var_4118 = relay.var("var_4118", dtype = "uint64", shape = (14, 14, 16))#candidate|4118|(14, 14, 16)|var|uint64
output = func_4117(var_4118)
func_4119 = relay.Function([var_4118], output)
mutated_mod['func_4119'] = func_4119
mutated_mod = relay.transform.InferType()(mutated_mod)
var_4134 = relay.var("var_4134", dtype = "uint64", shape = (5, 12, 8))#candidate|4134|(5, 12, 8)|var|uint64
const_4135 = relay.const([[[10,4,4,2,-5,6,6,-10],[-6,9,-6,1,-5,-6,9,1],[-9,-9,10,2,10,1,-2,4],[8,9,6,-4,3,10,-3,5],[-7,5,-6,7,7,-6,9,-6],[-5,-2,7,2,9,3,-4,-2],[-3,-8,-5,8,3,8,4,-10],[9,10,10,-7,3,-9,-10,-5],[9,3,2,-6,7,-8,10,-2],[2,6,-3,8,-2,-10,-1,5],[-2,-6,2,-9,5,-10,7,-3],[-3,10,-9,1,-9,-4,-7,10]],[[9,-6,-7,-10,6,7,-1,2],[-9,-9,5,2,10,-4,-4,10],[10,4,3,-10,-3,2,-9,-9],[1,7,-7,-7,4,8,8,3],[4,-7,-3,-5,6,-2,4,-1],[1,-8,-8,7,-8,2,-1,-4],[-6,1,8,6,3,-8,1,-9],[-9,1,4,9,-3,6,8,10],[-10,3,-6,3,9,6,1,2],[-4,7,-1,10,9,-9,-7,-1],[9,-9,3,6,-3,3,10,6],[-8,-2,3,-4,-9,9,3,4]],[[-4,-9,-3,10,-9,-2,8,-5],[-4,7,10,-8,-6,4,9,-3],[9,1,-1,9,-3,1,10,-8],[-2,2,8,-10,6,-8,-9,7],[5,1,-10,5,3,5,-1,-8],[1,4,9,-6,5,-2,-4,-6],[9,-6,10,-2,-7,-8,3,-1],[7,4,9,-3,-3,-3,-5,8],[6,3,-5,-9,-2,-1,5,7],[-7,-8,-10,-3,5,10,2,-4],[-9,-4,-9,-9,10,-8,-1,-6],[6,7,4,-9,-3,-9,-6,-3]],[[9,1,10,3,-9,-6,-5,-1],[6,-9,7,9,8,4,2,-8],[5,-3,7,-7,-6,-7,5,4],[-7,10,-2,1,-7,-3,-4,-2],[-10,4,-8,6,-3,-4,4,-10],[2,2,-10,-5,9,8,3,-2],[4,4,8,7,-4,2,1,-6],[3,-9,2,2,4,-7,-9,-1],[7,-4,-3,8,3,7,1,7],[3,9,-9,-7,10,-9,-2,-1],[-4,-4,7,8,2,-4,-9,9],[4,-5,8,6,-7,6,-5,-6]],[[5,10,2,1,-3,8,-5,-2],[-6,2,3,3,-2,7,9,8],[7,-3,-8,-4,-1,-3,-1,5],[-5,3,-4,-6,-7,-6,10,8],[4,6,-8,-2,-3,5,-1,-1],[-7,2,1,8,3,-4,-7,-10],[-6,4,-5,4,1,-1,-10,-9],[-5,8,1,3,7,-8,-10,7],[5,9,-8,-7,2,3,10,-9],[-5,2,1,3,-5,-4,1,10],[-3,-5,9,1,-10,3,8,-7],[-9,2,-6,-9,8,-5,-7,3]]], dtype = "uint64")#candidate|4135|(5, 12, 8)|const|uint64
bop_4136 = relay.less_equal(var_4134.astype('bool'), relay.reshape(const_4135.astype('bool'), relay.shape_of(var_4134))) # shape=(5, 12, 8)
var_4141 = relay.var("var_4141", dtype = "bool", shape = (5, 12, 8))#candidate|4141|(5, 12, 8)|var|bool
bop_4142 = relay.equal(bop_4136.astype('bool'), relay.reshape(var_4141.astype('bool'), relay.shape_of(bop_4136))) # shape=(5, 12, 8)
uop_4146 = relay.acosh(var_4134.astype('float32')) # shape=(5, 12, 8)
func_3885_call = mod.get_global_var('func_3885')
func_3889_call = mutated_mod.get_global_var('func_3889')
var_4157 = relay.var("var_4157", dtype = "float32", shape = (1, 243))#candidate|4157|(1, 243)|var|float32
const_4158 = relay.const([5,6,-8,6,8,-1,6,8,7,2,2,-5,4,5,-3,-2,4,8,-4,-5,4,3,-2,-6,10,7,5,-10,6,-3,-4,9,3,-2,-4,1,5,-10,2,-7,7,6,-4,4,-4,8,2,-9,-5,-3,-10,-8,6,-5,5,3,-6,5,9,-9,-4,2,6,-2,2,9,10,10,-7,-6,-7,-6,2,-4,-1,-2,1,3,-5,8,2,1,7,10,6,-10,-7,-5,-10,-7,-3,-7,5,2,7,-7,-9,3,-10,4,8,-9,2,3,-5,4,1,2,1,8,-6,-1,5,-1,-4,1,8,-7,5,2,-10,6,8,-9,-4,1,4,-4,-3,-4,-1,10,-6,-10,5,-1,-10,6,6,9,4,1,9,7,-10,10,7,-1,-5,3,6,-4,-2,-4,-10,10,2,-2,-7,-4,9,8,-4,-6,-1,10,5,-2,8,7,1,-10,9,6,10,-2,-6,4,9,-10,10,-6,7,2,-7,1,-4,-3,-4,8,-10,2,1,7,-5,10,8,10,5,-1,9,-10,-7,-8,3,5,-8,-1,-5,9,-5,7,5,1,7,4,-3,3,-9,-1,8,-8,-6,-5,7,-3,3,8,-5,-9,10,-2,-10,-5,5,3,-3,-8,-10,-10,-7,9,-10,9,5,-10,5,-10,-7,6,-8,-3,-10,9,-6,-6,9,4,-4,7,-4,6,8,-4,8,7,9,-10,1,-10,8,9,-5,9,7,-1,-2,10,-3,-7,4,-1,-3,3,-10,-10,-3,8,-5,7,2,5,-7,7,9,4,-9,-8,8,6,-6,-8,9,-7,10,8,-4,-7,-8,-2,10,10,-5,-2,10,2,-6,5,4,-2,5,-8,3,-9,-2,7,1,1,-6,10,3,-3,2,-6,7,-5,-10,-1,-10,3,3,6,-7,-1,-10,-2,3,-3,3,-3,1,-3,1,-1,6,3,-4,-5,-5,-6,7,9,-3,-5,4,-7,4,-6,-5,5,1,-3,8,5,-4,10,1,1,4,10,-2,4,6,10,-7,5,5,-2,-5,6,-10,-1,6,4,-6,9,-1,5,-1,1,1,5,-3,1,-5,-7,5,-9,10,10,-10,-5,10,-10,-6,-10,-6,-7,1,7,6,5,4,10,-7,-9,9,-8,5,-1,-7,-9,5,4,-3,4,-6,1,-2,3,1,-6,5,1,-10,-2,5,-1,-7,-6,7,2,-2,-5,-3,-4,10,9,4,7,4,10,-1,10,8,-2,10,2,6,4,6,8,-10,3,-6,-5,-10,-2,7,-10,-9,-2,8,-1,-1,-6,5,-5,10,6,-8,8,9,2,-3,-3,-5,-3,10,7,-9,8,-6,8,1,-4,8,-1,-4,-2,-5,1,-1,5,8,-3,-7,-2,6,-1,-5,-9,8,7,3,1,6,10,-6,-9,8,-5,4,10,-7,-10,5,-5,-7,7,4,8,7,7,4,2,-9,5,-2,7,5,4,-5,4,-3,-4,8,9,3,-1,-6,-6,-9,10,5,5,-5,1,7,-5,-8,-9,4,-2,-6,3,7,6,-10,9,6,-5,-2,4,-4,2,-2,6,1,-3,10,-10,5,5,6,1,8,6,6,1,-1,-2,6,-10,-6,7,-1,5,4,-1,3,-4,-2,1,2,-8,5,-7,7,-9,10,-1,4,5,5,10,-10,9,5,-9,-3,10,-4,10,-4,-6,-6,3,2,-8,6,7,2,-9,7,6,5,-10,2,-2,-3,-1,3,9,-2,6,-4,-5,8,-5,-3,7,-6,-7,-10,-7,5,-2,-9,-8,7,-2,-5,-9,-2,10,-3,3,3,-8,-9,6,2,-4,10,-4,6,-9,-3,-3,-1,2,9,3,-5,5,-7,-10,10,10,8,6,-9,4,-3,1,-10,-10,-8,1,6,-1,-8,2,7,-5,-7,8,7,-2,-8,4,5,9,7,-9,7,-7,-3,2,-4,-4,9,9,-3,-6,-3,3,4,-3,1,5,-4,-4,5,4,2,-2,-1,6,-1,6,-3,-4,-10,-10,-1,-10,9,-9,-7,-6,2,-1,9,8,2,-6,1,-3,-8,-2,8,-1,6,-3,-6,4,-7,2,6,7,-2,-4,4,-5,-10,1,-1,-7,4,-1,-1,8,-4,5,10,8,9,-8,1,7,-2,-9,1,-3,-8,-5,1,-8,-6,5,-8,-10,6,10,-1,7,5,10,6,1,8,-2,9,-6,-2,1,-3,-7,-8,4,-3,-7,-1,-2,-10,10,9,9,-1,-3,3,4,-4,4,-7,-5,3,9,-7,-10,6,-7,9,2,-8,-4,-8,10,7,-6,-4,5,3,1,6,8,-1,-6,-8,2,-1,10,5,3,-6,8,-10,-7,-8,-2,2,-6,-3,-5,1,1,-6,-3,-1,-4,-5,-6,5,9,-4,8,1,10,8,-6,-7,-3,8,-3,-4,5,-9,-6,6,10,6,-9,3,2,-7,2,-5,-6,-3,-3,7,-8,-1,-3,-10,1,2,-5,-9,8,-5,-9,-5,3,-3,-7,-6,-9,7,-6,-8,7,4,4,-6,9,-3,2,-3,-8,-3,1,7,-8,3,-5,10,-10,1,10,-8,-1,-9,-3,-9,-3,5,4,3,10,6,8,7,-2,5,10,-3,6,-5,6,-9,10,2,-10,6,4,7,-9,1,-7,-5,10,9,2,5,1,9,-2,5,-10,3,-4,6,-9,7,5,-6,-10,1,10,-1,1,-4,5,-6,4,-6,4,-4,-3,10,2,1,10,5,-9,2,-8,-7,-8,5,4,10,5,2,4,-6,-7,-10,10,-10,-2,10,-1,-1,10,2,-9,-4,8,-4,8,-1,-6,6,4,4,-10,-6,-1,-9,4,7,-4,10,6,4,-6,1,-6,8,2,-8,8,3,-2,2,-6,1,-7,3,7,-7,4,4,6,-2,8,3,3,-5,10,2,6,5,-4,-7,8,3,6,2,3,-2,-3,5,1,-2,9,7,7,9,10,4,1,-10,9,9,-5,1,6,-5,-9,-5,2,4,-4,3,-8,-4,6,-8,-5,7,7,-7,7,9,-10,4,6,1,8,6,1,-7,-5,4,-1,1,8,-1,1,-10,-4,-10,10,-10,5,6,-7,7,-7,3,9,-6,-3,3,-6,-2,-7,1,-6,-10,9,9,9,10,-4,-2,9,3,4,4,10,10,-10,7,-2,-7,2,-6,1,-7,-1,1,8,1,-9,-3,3,-6,-4,7,3,6,-1,8,-10,-8,-5,-2,2,-6,2,-9,5,-8,-10,5,-8,-9,-3,10,2,-8,-8,2,6,10,-9,3,-4,-3,5,-10,-8,3,-7,-7,-2,8,5,-9,-7,-9,5,10,-10,-8,8,-7,8,-8,-2,6,9,-3,3,3,8,-6,-3,-6,9,7,1,-6,3,-6,8,-10,-3,9,-4,5,6,7,-10,-2,7,8,5,-9,-5,-5,4,-10,-8,-4,-3,6,-4,1,-8,-3,-4,4,-3,10,-7,-5,-2,-1,-5,-5,-6,2,-8,4,-5,2,9,3,-1,4,-9,1,3,4,-7,-8,3,-4,2,6,6,9,4,-9,-4,-2,-1,6,3,4,10,2,4,4,-4,3,8,7,-5,-6,-9,-4,9,6,10,3,-4,5,1,-3,-2,6,2,2,10,-6,6,1,10,9,-7,-9,-7,8,6,4,-10,7,-4,9,5,-4,7,-6,5,4,8,-3,-10,5,-4,5,1,-10,-9,10,-6,4,-2,-10,-8,6,-2,2,-4,9,8,-4,3,4,4,-5,8,4,10,6,-10,3,-3,-5,4,5,-7,-10,4,2,8,8,7,-8,8,6,-8,2,-3,-8,-1,8,-5,-6,-2,7,-6,-10,7,-1,-1,4,5,1,-5,7,-4,-1,3,8,-8,7,-9,6,-6,2,-3,9,6,-5,10,4,7,3,-5,-7,-7,4,3,2,8,-7,4,-10,-5,-9,7,1,1,5,-6,-6,7,8,1,-9,6,3,-3,10,7,5,5,9,-1,-9,-5,1,-4,-3,-1,-7,2,8,-2,-7,8,-3,9,6,-6,-10,-9,-6,2,-9,6,1,-5,-5,-5,-5,6,7,-2,7,7,1,-10,10,-8,4,-6,-4,-2,-7,-3,4,-2,7,4,-4,-3,9,-3,3,10,7,-10,7,2,-1,-8,-4,-3,-6,5,10,-4,1,-9,-1,2,5,1,-4,-7,7,9,8,2,-1,-4,7,1,7,2,1,10,-4,1,1,4,-5,-1,6,-7,-2,-1,10,5,-4,-7,-1,-4,-7,2,2,8,-10,10,-2,-7,9,1,10,9,5,2,3,8,8,10,9,-7,6,-6,-4,1,9,-3,10,-4,7,10,1,-2,9,8,9,-8,3,-3,5,10,-8,4,4,2,5,3,-9,4,6,-7,-9,2,-6,-1,-9,-6,6,4,9,1,-5,9,-9,1,9,2,2,2,-9,1,-3,-4,9,9,1,2,-6,1,6,-3,-1,-4,9,2,-8,5,-4,-2,-6,-10,1,-4,-5,-4,-8,-7,-2,-1,-7,-8,-10,6,-3,-6,9,7,-10,-9,-7,-9,10,3,6,-2,8,6,4,-3,-2,5,7,-1,2,-5,3,-3,9,-4,9,-8,7,-7,7,9,9,1,5,-4,-2,-7,2,-5,-5,5,-4,-10,-6,3,9,3,5,3,-5,-10,-5,-9,8,-5,2,6,3,-8,-5,2,-4,-1,8,2,10,-10,8,1,5,10,7,5,4,-9,-6,-2,-6,1,6,7,3,4,-7,1,2,-9,-5,-9,2,7,-8,8,3,-6,-3,6,10,-9,-4,1,2,-7,6,6,-3,-6,4,-5,-5,6,3,4,-4,4,-3,-6,-5,-2,8,-1,-2,3,10,5,-6,1,-6,7,-8,-10,4,-8,8,1,9,-8,-8,-9,7,-6,-6,6,-4,4,4,4,7,-8,-1,2,3,-1,8,-9,-5,-10,2,6,9,-9,-1,2,5,4,10,-6,-5,2,-10,-8,8,7,-4,-5,1,5,-6,-4,6,9,-4,-7,-3,-2,-1,-7,10,8,-6,-4,-8,-3,-3,-5,4,5,8,-9,-2,-3,3,2,5,5,5,-10,-8,7,-7,2,-6,-1,8,7,-1,3,-10,5,-4,-7,-10,10,-2,-9,9,2,6,-2,-1,4,-9,4,-9,5,9,-2,10,7,1,1,-7,7,-6,10,8,-9,-1,6,-2,-7,4,-10,-3,8,-4,6,-4,7,-6,7,-2,-2,-9,-5,9,6,1,-10,4,10,7,-9,3,-10,2,-4,6,-9,2,8,8,-9,-9,-5,6,-10,3,5,5,6,7,-4,-6,7,-9,-1,8,-7,-8,-1,10,-1,-3,3,-4,-7,-9,-3,6,-2,5,-3,5,4,-4,10,-8,-9,7,-9,10,-3,5,-3,6,-7,1,5,-1,9,-6,9,10,-5,9,10,-7,10,1,-4,-1,7,2,9,-3,-9,7,-2,-8,-6,10,8,-10,-1,2,-7,10,-6,-8,-6,-3,-1,-4,9,-2,9,-10,-1,-5,-1,-10,9,-2,2,8,-2,-4,-3,-8,10,-7,3,-8,-10,-7,-10,-9,8,-2,3,10,-2,8,3,-10,-7,-4,6,3,4,7,8,3,-7,-8,-6,6,1,3,-2,-6,2,9,3,4,-3,-1,8,9,-8,6,5,2,-7,-1,10,10,-9,-7,-1,10,-3,7,7,-7,-2,9,-6,-5,-7,-4,4,-8,10,-7,-8,7,8,-3,7,-1,6,6,2,6,8,8,-1,6,10,4,-10,1,2,-4,5,-10,7,4,-9,-9,-8,8,-3,-1,-8,3,6,6,8,-7,-5,-6,4,2,-10,-8,-9,-8,-3,-5,5,-8,2,7,6,-4,2,3,-10,7,7,-8,4,-9,4,9,-4,10,-1,-5,-10,7,-9,-8,-7,-8,-2,1,10,-4,-5,-6,8,-4,-1,-7,8,-7,-8,5,-9,10,-9,7,2,-8,2,6,7,2,-9,-3,5,-3,4,-8,2,4,8,5,-3,-9,-6,-7,-4,-3,8,-1,7,-5,3,3,9,9,9,9,6,8,-2,-4,-4,1,-4,-4,-6,1,-2,5,10,-1,1,-2,10,8,5,-10,3,-2,4,10,-6,-9,3,-10,-1,3,-2,8,5,6,2,-8,9,-1,-7,-3,2,-1,-8,-10,-3,3,-10,-9,-9,-6,1,5,5,3,7,-4,9,-3,-8,10,-10,9,3,6,1,2,-5,1,3,1,-1,-8,-4,-9,-6,6,-1,-5,-2,-4,-2,-4,3,8,-1,-5,-7,5,6,4,5,7,4,8,-4,9,-9,6,10,8,-4,-8,-6,10,6,-3,3,-7,-5,-3,7,8,4,-10,7,-8,8,1,8,5,5,-7,1,7,8,4,9,3,-5,10,10,-2,3,-2,5,6,-9,-10,6,-4,-5,-2,-2,10,10,9,7,6,-5,4,10,-9,3,-7,9,5,-4,10,4,3,-9,1,4,-7,-8,8,-1,6,8,-4,7,-1,-8,6,1,3,-4,8,-2,6,8,-9,-10,-4,8,-7,7,7,9,7,-5,-1,-5,-6,4,8,-3,-10,1,5,-1,-8,10,-6,-1,8,3,4,8,4,1,3,-10,8,8,3,-6,10,6,-3,-8,2,2,-9,5,4,7,9,4,-1,3,-2,6,-2,-9,-1,8,10,9,-2,-3,2,8,9,1,4,7,10,1,8,-7,-7,-2,6,-6,-8,9,-9,3,8,-10,-7,-10,10,1,1,7,-4,7,-2,10,-2,-2,-7,10,1,8,7,-9,1,-7,7,-10,-2,-2,-10,6,3,-4,5,6,6,-7,3,-9,5,7,-9,4,-6,10,1,9,-4,-4,6,8,-1,-4,1,9,1,-10,2,4,2,-3,9,-7,-4,-3,-9,2,-8,-6,-10,-4,2,-1,-10,4,10,7,1,2,4,-6,10,5,-2,4,-8,3,6,4,-9,-10,-8,-8,-10,2,8,7,6,4,2,2,-10,-10,8,-2,4,6,10,1,-6,4,-1,-2,4,6,7,4,10,-4,7,5,-10,3,9,-10,7,9,-6,6,10,-3,-10,6,2,10,8,3,10,-7,-10,-2,-2,6,5,-7,-5,-3,1,7,-9,-7,2,-4,7,-9,-10,-3,-5,10,2,4,10,-2,-7,4,-4,5,-10,8,2,-4,2,5,-10,-7,2,10,3,3,-1,-7,10,2,-3,-9,10,7,3,-1,-7,-5,-4,-3,7,6,-4,2,7,6,-4,4,10,-8,-1,8,-9,-7,8,-7,-5,-2,8,-5,-9,4,7,9,-9,-4,8,-8,-5,-8,-6,-7,-10,10,-4,-4,7,6,7,-5,4,7,-1,9,-4,6,-5,-9,-3,-4,5,2,7,-9,-5,1,4,-3,6,9,-10,8,-2,-2,-7,4,4,5,3,-8,-10,10,-10,9,7,-6,6,4,-10,-3,-3,-10,-2,-2,10,-5,-10,6,-10,-4,4,-7,3,-6,-10,-3,-5,-1,9,-2,-5,1,4,3,-10,-2,-8,-5,-10,7,4,-2,2,-6,9,10,-6,9,-6,-3,-9,5,4,2,4,4,9,7,-1,4,4,4,-5,-2,-5,-1,2,4,7,9,-5,-7,9,8,8,2,6,-2,10,5,-8,2,4,5,-3,-3,7,5,-6,8,6,6,5,-4,1,-10,8,9,7,-5,8,9,10,3,-8,9,-10,-6,2,-10,3,-2,-2,-5,4,-9,8,10,-3,-3,2,5,-7,-7,-4,2,10,10,-6,3,5,-4,4,-10,-5,-8,-4,-10,-7,-10,7,8,-7,-9,3,4,-6,2,2,-6,4,-7,8,-9,-8,6,10,-5,2,1,8,5,4,5,-1,5,7,-4,-1,2,2,5,1,1,3,-1,5,-6,-5,-5,2,-2,3,-5,-10,4,-4,8,-8,-1,8,4,1,-4,-3,-3,-2,3,2,8,5,-8,10,4,-4,10,8,7,6,-6,-4,-3,5,-10,5,2,9,-9,-5,-10,10,1,6,9,-3,2,-7,2,2,-10,-9,7,4,10,10,10,-9,-2,-1,8,8,-1,-4,7,-4,-3,3,4,7,-9,-3,-1,-2,-9,3,-8,9,6,-2,-1,3,-9,3,6,-9,-1,3,-7,2,-9,5,-6,7,-8,-8,-3,-3,9,-8,-10,-9,-9,10,9,-2,-6,6,-1,-7,-9,-10,-6,-9,-10,10,-5,-8,3,-10,1,1,-9,1,-1,1,-3,-4,-3,-6,1,-3,-6,1,-1,2,-5,7,-3,5,7,3,6,-9,-2,2,-10,8,-5,7,-9,6,-3,9,-3,7,-10,-10,-10,5,-5,-3,-1,-2,1,-10,8,6,1,7,-10,6,7,-8,6,-6,10,5,-2,8,6,-4,8,-6,-5,-4,9,5,-5,-4,-8,-1,2,2,3,-7,-9,-3,-3,7,2,-3,9,-9,-2,-5,-3,-9,-2,-9,2,-4,-7,10,-6,7,8,10,-9,4,-2,-4,-7,10,-5,-6,4,-9,-9,-2,6,2,9,-1,-1,-2,4,-7,-10,-10,-7,1,8,-4,-7,-9,-6,-6,3,7,-2,6,-6,9,-10,-8,-7,8,-7,2,1,-8,4,-5,-3,2,1,3,1,-3,1,9,10,-5,4,-2,9,-1,6,-2,8,4,2,-9,7,5,3,8,-3,-2,-10,-9,6,2,8,1,-7,-7,10,1,8,-9,-8,-4,-2,8,-3,-1,-1,-1,8,-4,6,-2,-7,-6,-7,-6,2,9,-8,-5,6,-10,-8,3,-4,1,-10,6,5,2,7,-10,8,4,-6,7,-3,-6,-9,-9,10,10,-2,-7,10,-1,-7,-9,-10,-3,10,-8,-8,-7,5,-9,-5,-5,7,4,-1,-6,5,7,8,2,1,-2,4,7,5,-6,-7,7,-3,1,7,-4,5,-10,3,-1,-3,5,-2,9,-2,-8,-6,-1,10,-4,-1,1,-2,-9,4,9,-10,-5,1,-10,10,10,-6,6,-6,3,1,-3,7,-5,-9,10,-1,4,10,-4,5,-6,-6,-7,5,10,-5,8,-7,5,-9,7,-10,3,6,-8,-9,2,-9,10,8,-1,-4,-7,5,-9,6,6,9,-4,5,8,8,-3,-10,4,-2,-10,-5,-9,8,-5,-6,-10,10,-1,-8,1,10,5,-7,-7,4,-7,-6,-9,4,9,-7,-4,3,-4,-4,-6,-10,-4,2,6,-9,-6,9,9,3,5,7,7,-5,-10,7,-5,9,-2,1,10,10,6,3,-5,3,6,-9,3,-5,5,1,9,-1,2,10,3,7,-1,5,9,-8,-2,-8,-3,8,-5,9,-8,4,6,3,3,-1,4,-2,5,-8,9,2,10,-1,8,8,2,-9,7,-8,-1,5,-4,-8,7,8,3,7,1,-8,-7,8,-10,8,6,-8,-4,4,-9,8,10,3,9,5,-7,-10,1,6,2,1,-1,-7,-1,4,5,10,-2,-7,5,9,-8,6,7,-3,5,9,2,-10,8,6,8,9,1,10,-1,-7,10,-8,-5,-7,4,6,-1,2,-2,5,6,-9,3,2,8,2,-1,4,1,6,-7,-3,1,-2,-6,3], dtype = "int16")#candidate|4158|(3600,)|const|int16
var_4159 = relay.var("var_4159", dtype = "uint16", shape = (1664,))#candidate|4159|(1664,)|var|uint16
call_4156 = relay.TupleGetItem(func_3885_call(relay.reshape(var_4157.astype('float32'), [243,]), relay.reshape(const_4158.astype('int16'), [600, 6]), relay.reshape(var_4159.astype('uint16'), [1664,]), ), 3)
call_4160 = relay.TupleGetItem(func_3889_call(relay.reshape(var_4157.astype('float32'), [243,]), relay.reshape(const_4158.astype('int16'), [600, 6]), relay.reshape(var_4159.astype('uint16'), [1664,]), ), 3)
output = relay.Tuple([bop_4142,uop_4146,call_4156,var_4157,const_4158,var_4159,])
output2 = relay.Tuple([bop_4142,uop_4146,call_4160,var_4157,const_4158,var_4159,])
func_4161 = relay.Function([var_4134,var_4141,var_4157,var_4159,], output)
mod['func_4161'] = func_4161
mod = relay.transform.InferType()(mod)
var_4162 = relay.var("var_4162", dtype = "uint64", shape = (5, 12, 8))#candidate|4162|(5, 12, 8)|var|uint64
var_4163 = relay.var("var_4163", dtype = "bool", shape = (5, 12, 8))#candidate|4163|(5, 12, 8)|var|bool
var_4164 = relay.var("var_4164", dtype = "float32", shape = (1, 243))#candidate|4164|(1, 243)|var|float32
var_4165 = relay.var("var_4165", dtype = "uint16", shape = (1664,))#candidate|4165|(1664,)|var|uint16
output = func_4161(var_4162,var_4163,var_4164,var_4165,)
func_4166 = relay.Function([var_4162,var_4163,var_4164,var_4165,], output)
mutated_mod['func_4166'] = func_4166
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1948_call = mod.get_global_var('func_1948')
func_1949_call = mutated_mod.get_global_var('func_1949')
call_4179 = relay.TupleGetItem(func_1948_call(), 0)
call_4180 = relay.TupleGetItem(func_1949_call(), 0)
func_3620_call = mod.get_global_var('func_3620')
func_3623_call = mutated_mod.get_global_var('func_3623')
var_4187 = relay.var("var_4187", dtype = "float32", shape = (3, 40))#candidate|4187|(3, 40)|var|float32
call_4186 = relay.TupleGetItem(func_3620_call(relay.reshape(var_4187.astype('float32'), [12, 10, 1])), 0)
call_4188 = relay.TupleGetItem(func_3623_call(relay.reshape(var_4187.astype('float32'), [12, 10, 1])), 0)
const_4192 = relay.const([[[-2.999420,-7.873877,0.976343,0.319162,-1.762737,-0.764892,-4.448805],[2.771907,-2.039983,-0.302110,-5.358745,4.181808,-1.485162,3.120127],[8.968576,9.044817,-1.754122,3.744954,4.306494,-3.508512,-4.128736],[-1.027696,6.801908,-5.291531,2.938379,-8.360960,0.050744,-7.359609],[-6.261020,1.807723,-3.933235,-1.583631,-5.946698,-7.669604,-8.281407],[-2.615590,3.627876,-0.968519,-1.118303,5.887496,1.579449,-6.364829],[4.828987,-3.875873,-1.081950,6.836180,-9.502360,8.193487,-5.778061],[-6.958614,-6.175248,2.397810,7.515757,-3.956311,-9.505274,-9.415883],[1.650321,-4.193647,5.507055,1.257850,-7.740900,3.819440,-4.909148],[9.012187,-8.112876,9.942628,-0.444728,2.170941,-1.935895,-4.382509]],[[9.719768,-4.151019,2.507326,9.965759,4.067351,-5.946751,2.730054],[7.720368,3.639479,-9.811344,-3.488698,-4.501809,-4.710394,7.750982],[-3.279675,9.250205,-6.655604,-0.389307,-8.127176,-6.264434,-6.526892],[4.264610,-4.281382,9.675169,-7.924829,-2.329190,-4.944239,6.632377],[-3.208993,1.342331,-5.632568,-7.529729,4.650053,-7.042531,-5.282538],[0.146047,-9.407163,-4.383526,4.267893,-4.566771,-0.599688,6.479222],[2.406232,0.864940,9.027813,-9.485926,-3.228150,-7.615273,-3.502276],[9.091414,6.746744,1.354558,-1.306727,2.058062,-2.423088,2.263049],[-6.054210,6.385660,8.221580,9.756893,6.712242,5.341912,-0.163871],[4.565162,-5.157483,8.247995,-3.288130,0.072073,-9.809596,-9.581259]],[[-3.151778,7.801917,-0.659160,6.796306,-2.792164,-3.505647,-7.158543],[9.742127,0.808327,2.020848,4.938622,-5.192917,-7.035382,-1.477666],[-5.952615,8.406588,-5.679672,2.909149,7.572658,5.609824,7.929162],[4.523005,0.470045,-7.188894,-9.086586,-9.249270,-8.451735,7.515412],[6.166198,5.859617,-5.682870,-3.578839,-7.231781,-4.809050,-1.906629],[6.535702,4.295953,-0.707760,4.730343,-1.067364,-9.717386,1.310716],[7.155640,9.146455,1.813597,-8.683126,4.064056,-4.587015,-6.780676],[3.549509,-3.532976,-4.074856,-4.849363,-5.965546,5.666088,9.497157],[-7.000824,-6.860658,5.134023,-9.984729,-0.585181,-0.247717,4.453707],[6.173310,3.715659,3.952091,0.413339,-1.450076,-7.633950,8.317088]],[[9.834669,3.224221,-9.826419,1.009348,-6.137125,-6.890733,-2.066262],[-2.558731,0.659148,6.430501,0.859478,4.259866,-0.570541,-2.413351],[-9.341331,-1.756153,-6.046588,8.331109,7.674520,-0.622317,-8.407853],[-6.733981,0.945205,2.035391,1.891250,-1.207913,3.474037,6.534097],[9.990694,-1.780374,-8.508224,3.092290,-9.266433,0.390684,3.946986],[8.900172,-6.556085,-7.394126,2.904273,-8.365867,-4.814417,2.651542],[-9.078689,8.535865,-3.729666,-7.852748,-5.147527,7.716887,-9.954717],[-3.462785,-7.804258,-1.936858,2.870888,-1.481963,-9.618159,6.446939],[9.210121,-9.480654,-9.529875,2.174205,2.437585,6.275460,3.639103],[-3.335464,0.298738,9.592059,4.127464,-5.317825,-3.231993,7.527219]],[[4.561202,5.732192,0.282805,1.824575,0.574020,-6.989713,-0.459338],[-0.432477,-5.981719,6.464095,4.529447,6.280395,-2.220177,-4.704712],[-9.325149,5.905592,-3.410646,2.069110,-1.028215,2.989726,8.131934],[-9.029493,2.414060,-8.931834,-3.514184,4.708618,-1.929088,-8.504490],[-1.178966,-4.868210,-5.393797,1.559478,-3.174538,-9.234325,1.170234],[3.868555,5.428510,-5.968010,-4.234012,-5.531661,-8.705223,7.251705],[-0.184742,-0.592808,-7.262927,0.702070,-2.446075,2.158742,1.088424],[-3.917634,-7.497308,-8.500075,1.839842,-6.377065,5.714243,-4.932836],[2.724436,-3.077688,4.701042,-5.223839,1.176923,-8.171820,-8.600101],[3.107103,4.593629,-2.311378,3.917346,6.740197,9.802338,-3.275197]],[[-5.882261,5.911393,-0.609271,8.251707,-1.013907,2.237585,-6.135152],[6.512673,-2.609384,-0.750794,-6.568382,1.789014,9.956227,1.890299],[-5.747713,8.430738,-3.795261,-6.597496,0.788778,8.295489,-9.141344],[3.976232,-3.207544,1.204950,1.903905,4.755190,2.540231,9.485455],[4.571906,6.537255,8.724269,7.058847,8.760694,-0.988359,4.716747],[-6.659474,2.691053,-2.153867,7.969615,-2.150857,-2.386069,-6.754475],[-6.712131,-8.572231,-8.059539,4.422795,7.172346,-6.968644,5.015996],[9.307091,-9.960145,-7.367554,4.149900,9.798372,-8.900541,-0.930460],[1.849647,-4.402103,-6.248927,-9.068843,4.989815,-0.658468,-0.068144],[1.463406,-2.342463,-7.384653,2.937569,-6.727800,-1.786352,7.935301]],[[6.470110,4.582872,-4.421938,-4.106132,-1.758427,-8.343278,-5.971484],[-4.466387,7.608321,-1.977895,-9.309314,-2.371251,5.749413,3.594902],[-9.771351,4.432159,-6.616218,8.046917,-6.646235,2.259668,-4.052592],[-3.468559,3.678073,7.398353,7.157495,-7.791464,-4.346334,1.763166],[6.995849,4.068266,8.355646,5.886248,4.336992,-0.471467,-8.610113],[7.654277,1.739592,9.089244,-4.556017,9.221451,9.112291,-0.560673],[-1.812377,8.262743,-4.199435,-0.011663,6.666027,7.051801,-3.536985],[9.186384,8.734071,2.460593,-6.756892,1.832962,0.827089,-5.772680],[-6.740525,-3.377104,-0.332544,-6.351638,3.277989,-0.260976,-6.600779],[5.087064,-3.624281,4.896800,9.270284,-0.435589,-1.162796,1.034889]],[[4.439989,-3.282859,-0.261531,-5.765054,-0.605913,6.790768,6.263716],[0.789137,8.314702,-0.170728,8.321928,0.730129,-4.072998,-3.821687],[-0.518755,-8.137914,-3.768832,7.358278,-6.108939,1.814553,6.530063],[-8.051092,6.218839,-9.039370,-4.660562,-6.522611,1.050947,8.507660],[7.264068,-1.150899,7.952160,1.018262,9.765042,-9.571764,0.307290],[-3.529433,-2.845685,6.983972,-3.928027,-0.475322,1.987208,-0.976841],[-1.617730,-1.579535,-3.081257,7.489278,-2.619694,9.241403,-7.854981],[5.863151,5.585758,-2.552067,-1.389023,7.571854,1.872487,1.113983],[-8.590516,2.469194,9.881208,2.453295,-5.635146,3.786495,9.219992],[-3.007615,-4.131156,1.560491,-3.196568,9.716517,-2.210092,2.249465]],[[-1.874031,-2.190752,3.568137,-5.286195,3.022980,-9.074444,-6.101748],[-1.430136,-7.156346,7.816025,-0.758941,-0.670360,-4.235550,1.569899],[9.911809,2.295283,-1.137739,-4.446540,8.684358,-6.284299,-4.860662],[4.916892,6.529267,8.344829,-3.667108,-5.764431,8.115081,7.039977],[9.275169,-5.223240,-3.954423,-1.222101,8.852806,-0.906978,2.138448],[-7.061548,8.117624,9.587673,2.818185,-4.223402,0.980289,4.484401],[8.439262,7.080913,9.668048,2.358644,2.081068,-4.581606,9.509749],[8.823616,-7.558645,-9.278179,5.981504,-7.080857,-2.161886,2.941956],[5.757931,0.414757,8.341249,9.646455,-8.140913,-7.884909,7.072908],[5.275780,6.164876,3.506632,-2.239110,9.806014,7.883379,-7.916204]],[[-6.841956,-1.714511,-3.242090,7.891474,-5.036046,6.930361,1.513732],[-9.799559,-4.575395,9.337303,-6.359011,1.694331,4.975559,7.831161],[-4.422799,-4.607136,1.612460,1.795695,-0.665026,0.554470,3.933319],[-9.042231,3.609323,0.661074,-7.973200,0.123598,-1.823082,9.976079],[-6.587727,-8.895307,-4.068889,8.684198,0.116928,-6.636875,4.178227],[-7.525570,-0.121784,-5.871656,5.091077,6.727361,-2.159962,4.783322],[-2.028289,-6.671638,1.802533,0.958748,-4.717800,2.703444,7.349504],[9.264172,9.268448,-7.620257,-4.187203,6.427455,-0.309365,9.073853],[-5.410284,6.674998,0.894892,7.410372,0.399604,6.138288,4.038642],[6.381400,-0.741583,-6.236628,0.032461,3.788563,3.146826,6.196868]],[[0.068815,-2.455135,0.274394,-6.065107,-1.960585,5.211094,3.290124],[5.132170,0.485186,4.372607,6.652299,-9.790294,-8.432151,6.885655],[-8.929843,-5.114702,4.850937,3.029584,-5.893662,-2.813463,6.905054],[-4.558201,-7.261422,-9.065664,4.972593,4.335944,2.120970,6.969206],[2.719261,2.268178,2.706329,5.202794,-2.968745,-0.926157,1.956402],[1.140297,-4.357640,1.954168,0.348361,0.145131,3.047357,-1.098495],[-0.318060,0.942021,-2.237831,5.908466,-2.612618,-2.032540,-3.240079],[0.412975,6.281859,-9.856395,2.187020,-9.067617,8.379626,1.210658],[-5.407994,2.878160,7.450629,-7.125634,6.427366,3.388700,2.837642],[1.405577,-7.533584,4.386906,4.624468,-2.493601,2.697629,-4.675359]],[[-8.309955,2.238667,4.280021,9.205642,1.727926,-2.825910,1.446945],[-3.214111,2.703829,-2.454078,8.973144,-8.314788,-2.301939,1.976117],[2.535491,-7.491379,8.941932,9.878956,9.102960,8.699306,-0.701310],[4.993174,7.992025,-7.868318,8.517434,2.610285,-7.449455,-3.766302],[-8.346783,-5.146257,7.298071,1.218048,1.424955,0.510870,4.868823],[1.297345,-0.963344,3.873232,8.503687,-7.033822,4.008829,3.593073],[4.373638,-7.679471,5.984403,-7.931099,9.087799,3.601305,-7.225529],[0.596771,9.075440,8.649504,-1.544287,2.840040,1.314504,-0.999490],[5.752894,-4.640675,9.449945,-8.189399,-8.546158,6.817299,-0.994563],[-5.395239,2.077492,-2.080642,-6.598087,-5.753654,7.715269,-9.140201]]], dtype = "float32")#candidate|4192|(12, 10, 7)|const|float32
bop_4193 = relay.minimum(call_4186.astype('int32'), const_4192.astype('int32')) # shape=(12, 10, 7)
bop_4196 = relay.minimum(call_4188.astype('int32'), const_4192.astype('int32')) # shape=(12, 10, 7)
func_2086_call = mod.get_global_var('func_2086')
func_2088_call = mutated_mod.get_global_var('func_2088')
call_4197 = relay.TupleGetItem(func_2086_call(), 0)
call_4198 = relay.TupleGetItem(func_2088_call(), 0)
output = relay.Tuple([call_4179,var_4187,bop_4193,call_4197,])
output2 = relay.Tuple([call_4180,var_4187,bop_4196,call_4198,])
func_4204 = relay.Function([var_4187,], output)
mod['func_4204'] = func_4204
mod = relay.transform.InferType()(mod)
var_4205 = relay.var("var_4205", dtype = "float32", shape = (3, 40))#candidate|4205|(3, 40)|var|float32
output = func_4204(var_4205)
func_4206 = relay.Function([var_4205], output)
mutated_mod['func_4206'] = func_4206
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3707_call = mod.get_global_var('func_3707')
func_3708_call = mutated_mod.get_global_var('func_3708')
call_4221 = relay.TupleGetItem(func_3707_call(), 0)
call_4222 = relay.TupleGetItem(func_3708_call(), 0)
func_1355_call = mod.get_global_var('func_1355')
func_1358_call = mutated_mod.get_global_var('func_1358')
const_4248 = relay.const([7.798173,1.998858,-6.724669,-9.296294,6.417151,4.084957,6.199096,-0.008955,4.423864,7.473425,5.249148,8.864731,-0.202670,-5.629943,-3.661412,5.019849,5.201085,-7.247845,-2.943379,-8.075502,3.556887,4.707898,-3.107656,-3.214526,1.623136,-0.715756,-0.872617,3.559266,9.040822,-5.384914,-2.763732,7.206881,6.092806,7.627704,-0.169144,4.862562,4.028320,-4.556737,0.466930,1.473350,0.635263,8.711848,2.439223,-6.618647,-2.985471,-8.263837,-3.588757,-7.642018,7.000542,-4.952703,2.105833,3.775054,-8.394202,-3.724328,-1.028099,-0.475849,-5.713788,4.620678,-5.660809,-3.548221,0.262460,8.673043,7.958464,4.960476,5.599126,-8.169222,5.086239,5.955363,-4.854511,1.927189,5.112419,-2.795113,5.377561,-0.793651,0.088886,0.928427,4.577631,-2.135774,-7.515647,-9.307644,0.821839,8.339290,-6.268533,8.452494,-9.460854,-0.630429,-2.154133,5.813901,-5.884239,-0.260069,7.065723,-4.960748,-0.291946,3.206071,-5.566444,0.864187,-8.080475,8.615825,1.378248,9.427712,6.211588,-1.775538,-6.664393,-7.790423,0.217540,-2.514333,-2.143044,7.425409,-5.238385,6.273100,-3.038409,-6.519076,2.036455,-6.971788,-9.672832,1.666129,0.514246,-8.073667,7.779155,-1.458318,4.875047,9.109368,-5.071573,-4.350701,7.878006,0.949888,-2.383193,0.316172,3.404541,3.462764,8.008551,-1.385064,-0.686516,7.478185,6.322642,-1.023459,-9.484751,-9.281758,-4.082243,9.035988,-1.155454,-0.955770,1.747168,8.071198,3.887776,-4.083672,2.990822,0.481418,0.237551,5.950713,-5.303358,2.300623,-7.190682,8.004513,5.178374,-3.238036,-6.141493,-6.245578,-9.915509,-8.229914,-5.733739,2.130969,9.037967,5.103160,6.991122,5.186707,-9.712980,-6.856150,-9.328895,-9.259030,5.853164,-0.493388,7.711616,3.664584,-0.536931,8.562806,-0.572339,-4.597568,7.863211,5.579468,-0.376489,-6.364183,9.253721,8.837113,0.437726,2.489712,8.333403,-6.926114,5.964118,-6.824008,2.747052,-7.398530,-1.919141,-5.694537,0.331119,-3.907223,-7.197692,-6.006765,-4.686321,-0.420225,0.573819,-2.042715,8.717195,9.010825,-9.799462,-0.157363,5.344351,0.023642,8.140641,9.327264,6.150868,-1.840958,5.872656,-9.500741,9.353046,8.396612,-7.109204,8.205456,-4.937469,-3.738226,-1.648996,-4.922635,-7.001231,-6.635854,1.995831,-1.007190,9.754428,2.500282,3.178140,-1.350504,-5.407836,-6.486843,4.393024,-4.406582,-3.988511,-2.012306,9.487180,4.955110,7.437755,0.957204,3.541857,6.627871,-8.241126,3.654520,-4.989344,-7.135388,6.094632,-8.461560,-2.959654,-6.910333,4.614403,-8.717591,-5.071474,-1.963755,4.783561,-5.244607,0.337815,3.242507,-1.362537,-7.986003,5.721692,3.277670,7.748989,0.416737,-4.991470,-0.331922,9.663596,-1.007865,-2.196439,6.859984,-2.433109,6.093341,8.878920,-1.611263,0.109401,3.585621,7.613321,-5.267147,-2.082616,2.458258,6.002955,-8.839604,-3.217820,-3.111446,-8.407888,-1.403370,-8.518002,-5.973530,-9.049618,1.850911,5.456677,-4.085031,-5.552570,3.302531,1.375367,8.754786,7.163478,4.128148,8.961573,-2.865230,3.519484,-8.689506,-5.387994,4.870755,6.145219,7.785277,1.233554,-6.551354,-7.728483,-1.816989,-1.934531,-4.025354,-5.523057,6.174339,-8.540802,3.418947,-7.562248,4.212682,-9.550491,6.161528,8.645034,0.935436,8.419496,-2.159063,1.124123,0.525188,3.710222,4.818779,4.952663,8.332879,8.388184,9.147034,-3.470267,-1.493239,0.329780,1.695123,-8.375639,-5.115499,-7.421466,4.693613,1.953316,8.315468,3.600627,-5.311249,4.404182,-1.306643,-7.046158,-6.310871,-1.268486,-9.926828,-2.758811,-7.675097,-3.209163,-1.298984,-1.239063,-1.371352,-5.914111,-0.280342,0.264547,-0.032304,-4.166254,6.609785,-4.905941,5.332857,-2.185471,8.599252,6.735595,-1.289115,-5.656979,-3.858022,-6.755355,-1.072966,-8.607656,-7.648286,-7.182111,-6.446327,2.049199,1.790135,1.809332,-0.514214,-1.357892,5.795389,-2.341915,4.583287,-5.526730,7.947401,8.104088,-0.566018,-8.736866,5.227695,8.507965,7.663714,4.927121,2.781733,2.049945,-3.370745,5.309646,-1.529940,8.961600,-4.655339,2.941785,0.347631,5.779064,9.663351,-5.363482,-8.914133,-3.257120,0.149111,3.655453,2.537857,-5.891762,-7.981646,3.572574,7.894203,9.993121,-3.417689,3.253035,0.718104,8.112738,-9.198319,4.039744,-2.631245,-7.422951,2.357153,-4.213125,5.502826,-0.574357,-4.025933,-4.669548,5.939134,1.311428,-3.042515,1.788992,4.841142,-1.228462,-2.575731,4.530725,-6.357927,-1.796235,7.049837,-5.369277,-0.896368,-9.988671,-7.279472,-0.982265,-0.770328,5.934517,6.234114,-7.425323,-7.991680,-1.168173,-9.711027,7.814844,-6.379573,-9.803813,-6.017077,-9.026810,-7.453020,1.328092,8.831892,-3.584217,1.829431,-5.594604,-6.470823,2.165199,-4.297245,0.337793,0.842886,0.503741,7.530465,4.619658,-2.955371,-9.662311,7.398574,8.921393,0.596048,-6.289011,0.697756,6.203974,-9.886401,-1.980844,8.720783,7.262492,-1.129537,-0.838913,7.222516,1.860137,3.675320,-1.007385,6.273493,6.557437,4.971101,4.369771,-4.301782,-3.819542,-9.684287,4.368914,-1.429495,-7.067092,0.018093,-7.856908,2.619644,-7.917969,8.392035,2.459610,-5.553381,-8.518733,-1.403316,6.593411,-1.613193,9.459452,-7.972734,-7.700505,-2.838135,-1.598036,7.254968,-2.720799,-6.338535,5.712505,3.093442,5.917479,4.802966,9.724637,4.559380,4.998481,-4.513300,-5.297655,5.979749,6.595406,-2.227856,-0.951050,9.896108,-7.047128,9.288151,8.939241,-4.037135,9.308769,-8.290930,1.542431,4.533972,-6.545051,-9.917521,-5.261746,6.082217,6.911222,5.424322,-3.102128,-2.639227,3.760340,-5.388056,-5.224110,3.098069,4.194848,-5.225264,7.089916,7.959709,8.122764,5.657389,9.066123,9.169701,-7.667700,-5.383857,7.637905,3.274571,0.567825,-3.304663,-6.970952,0.174642,0.265194,-3.377630,3.920200,-5.688509,5.382607,-3.537127,3.386491,6.207021], dtype = "float64")#candidate|4248|(576,)|const|float64
call_4247 = relay.TupleGetItem(func_1355_call(relay.reshape(const_4248.astype('float64'), [4, 12, 12]), relay.reshape(const_4248.astype('uint16'), [4, 12, 12]), ), 3)
call_4249 = relay.TupleGetItem(func_1358_call(relay.reshape(const_4248.astype('float64'), [4, 12, 12]), relay.reshape(const_4248.astype('uint16'), [4, 12, 12]), ), 3)
var_4264 = relay.var("var_4264", dtype = "float64", shape = (576,))#candidate|4264|(576,)|var|float64
bop_4265 = relay.add(const_4248.astype('uint16'), relay.reshape(var_4264.astype('uint16'), relay.shape_of(const_4248))) # shape=(576,)
output = relay.Tuple([call_4221,call_4247,bop_4265,])
output2 = relay.Tuple([call_4222,call_4249,bop_4265,])
func_4272 = relay.Function([var_4264,], output)
mod['func_4272'] = func_4272
mod = relay.transform.InferType()(mod)
mutated_mod['func_4272'] = func_4272
mutated_mod = relay.transform.InferType()(mutated_mod)
var_4273 = relay.var("var_4273", dtype = "float64", shape = (576,))#candidate|4273|(576,)|var|float64
func_4272_call = mutated_mod.get_global_var('func_4272')
call_4274 = func_4272_call(var_4273)
output = call_4274
func_4275 = relay.Function([var_4273], output)
mutated_mod['func_4275'] = func_4275
mutated_mod = relay.transform.InferType()(mutated_mod)
var_4277 = relay.var("var_4277", dtype = "int8", shape = (16, 3, 5))#candidate|4277|(16, 3, 5)|var|int8
var_4278 = relay.var("var_4278", dtype = "int8", shape = (16, 3, 5))#candidate|4278|(16, 3, 5)|var|int8
bop_4279 = relay.right_shift(var_4277.astype('int8'), relay.reshape(var_4278.astype('int8'), relay.shape_of(var_4277))) # shape=(16, 3, 5)
output = relay.Tuple([bop_4279,])
output2 = relay.Tuple([bop_4279,])
func_4283 = relay.Function([var_4277,var_4278,], output)
mod['func_4283'] = func_4283
mod = relay.transform.InferType()(mod)
var_4284 = relay.var("var_4284", dtype = "int8", shape = (16, 3, 5))#candidate|4284|(16, 3, 5)|var|int8
var_4285 = relay.var("var_4285", dtype = "int8", shape = (16, 3, 5))#candidate|4285|(16, 3, 5)|var|int8
output = func_4283(var_4284,var_4285,)
func_4286 = relay.Function([var_4284,var_4285,], output)
mutated_mod['func_4286'] = func_4286
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2086_call = mod.get_global_var('func_2086')
func_2088_call = mutated_mod.get_global_var('func_2088')
call_4288 = relay.TupleGetItem(func_2086_call(), 0)
call_4289 = relay.TupleGetItem(func_2088_call(), 0)
func_3843_call = mod.get_global_var('func_3843')
func_3845_call = mutated_mod.get_global_var('func_3845')
call_4298 = relay.TupleGetItem(func_3843_call(), 0)
call_4299 = relay.TupleGetItem(func_3845_call(), 0)
func_510_call = mod.get_global_var('func_510')
func_515_call = mutated_mod.get_global_var('func_515')
const_4318 = relay.const([True,False,False,False,False,False,False,False,True,False,False,False,False,False,True,True,False,False,False,True,True,True,False,False,True,False,False,False,True,True,True,False,True,True,False,True,True,True,True,False,True,True,False,True,False,True,False,False,True,False,False,False,True,False,True,True,True,True,True,False], dtype = "bool")#candidate|4318|(60,)|const|bool
const_4319 = relay.const([-7,-6,7,4,10,3,7,-10,-6,8,-6,10,5,4,4,-6,8,7,-9,-1,-3,4,8,6,9,-9,-9,10,1,-6,7,5,5,3,3,4,8,3,6,-2,-3,9,-10,-6,2,5,3,5,1,1,-1,9,-6,7,-10,-4,-10,5,-1,2,-2,-3,8,-4,-7,3,1,-9,-4,9,-5,-9,8,-6,4,2,-4,4,4,-1,4,-9,7,3,4,5,5,-6,-9,-1,8,-10,10,-4,-1,-5,8,9,-2,7,4,-5,8,-3,-4,10,8,6,-6,-4,5,2,-3,-1,3,1,9,-6,9,-4,4,7,-5,-1,5,-8,5,8,-8,3,6,-9,-1,-4,4,3,3,9,-5,1,-6,-2,6,10,-8,7,8,1,-1,-10,-4,-1,3,6,-10,7,5,-8,-1,9,1,5,2,-9,-10,9,9,2,-10,1,-7,-8,10,-3,4,10,8,3,1,6,-10,-9,5,-3,10,-6,2,9,-2,3,-6,9,10,5,-5,-7,6,-4,-5,-5,-10,-4,-9,-4,-5,4,2,5,-7,-3,3,-7,-6,-9,7,8,7,10,6,6,1,-3,5,-2,10,7,7,-2,7,6,7,3,-7,-1,-7,4,-9,10,7,-6,-9,-2,-7,1,-8,-7,-10,-1,3,10,1,7,-3,1,9,10,-2,-6,1,-2,4,-5,10,-3,-10,-3,9,8,-7,5,-8,-3,9,9,9,-8,3,-9,-1,-7,9,9,-10,-1,8,2,-3,8,6,-10,9,8,-3,-6,-3,-5,-3,-10,3,-1,-9,1,-7,4,4,-8,5,-6,5,3,7,10,-2,4,-4,-10,-5,9,-8,5,8,-9,-9,9,9,4,10,5,-6,9,1,7,8,9,-8,10,-8,-6,3,3,-9,-7,2,-3,8,-8,-3,6,10,9,-10,1,7,-6,-7,4,7,7,3,8,5,-2,-3,-2,-4,9,2,-3,-1,1,10,-6,-9,6,4,-5,10,-9,-4,5,2,1,8,-4,2,7,-3,9,-5,-5,-1,-1,-6,5,1,-7,6,6,-9,-2,-8,-5,3,4,-2,-8,7,-3,10,-4,-10,4,6,-1,-2,10,-4,-10,10,7,-3,3,6,7,-6,7,-10,3,10,-5,-6,4,-9,-9,10,-8,-10,-7,1,-2,-4,2,-9,2,-8,6,1,4,-4,-8,8,9,9,4,-1,6,7,-9,-4,8,7,3,-1,7,-1,-2,-3,7,-9,1,-9,-3,-6,3,-3,-1,6,-10,3,4,2,-3,9,6,-4,7,-5,-10,-5,2,-7,-10,-7,9,8,5,9,7,-9,7,-2,-7,-7,2,3,9,9,2,-2,7,4,1,10,-3,-1,-2,-5,1,-7,3,7,9,-1,-3,2,4,1,-9,-3,2,5,6,5,1,2,-4,-5,-6,-4,1,6,1,-9,8,7,6,4,-1,1,2,5,2,-9,-6,7,10,-1,3,-5,3,-3,-3,3,7,-5,7,5,8,10,-8,1,4,-2,5,-10,-9,-7,9,6,4,-4,-9,-10,2,3,9,-9,8,-10,9,1,-2,-2,-8,8,8,-3,-1,-6,-5,5,2,6,7,5,7,-6,4,-9,-4,4,-9,1,-10,-4,-7,-8,5,1,4,-8,1,8,-1,10,6,-9,1,-8,10,-5,-3,8,-8,9,-6,-3,-2,4,9,-1,8,-1,-4,9,3,1,-8,3,9,-10,-1,-1,3,6,-9,-9,7,-7,1,4,-1,-7,5,7,-3,8,7,5,-7,1,8,-5,10,-7,-8,-4,-6,-10,-2,-5,-3,9,4,-1,6,7,2,10,-1,-4,8,10,8,6,-6,-4,-6,8,-8,-1,10,8,-7,7,-7,-1,-8,10,-10,7,9,-4,4,-5,10,7,-3,6,-7,-1,4,9,2,10,-6,-9,-8,-10,-4,7,2,-6,10,4,-4,2,-7,-10,10,3,6,-1,-5,-9,7,-5,-9,-1,-2,8,1,4,9,-7,3,-5,1,5,6,-5,7,1,10,7,-8,-7,-5,5,4,-4,-3,8,-4,8,-7,4,-2,2,-6,3,5,1,9,-3,1,2,8,-5,-2,-4,-7,-3,-5,10,-7,5,3,2,-3,4,4,-7,-5,5,-7,-6,-9,-5,5,6,-8,-4,9,2,-10,-8,-6,7,9,-9,-2,3,4,-8,5,1,-6,-6,-8,9,-9,-4,-1,-4,-2,-9,8,8,1,-10,-1,-2,3,-4,-6,-1,-1,10,6,2,-7,-4,4,6,9,4,7,1,-3,3,9,6,8,1,10,-4,6,-3,-2,-8,6,-5,7,3,2,-1,1,-10,-3,-7,-6,-1,10,7,-4,-5,6,-3,7,-4,3,1,-5,7,5,1,4,6,-8,6,-7,-2,2,-7,-3,-1,8,-2,-6,-1,2,2,5,-10,2,-7,-8,3,6,2,-3,-6,6,4,-7,-2,-8,-5,-4,-10,-2,5,-7,1,-8,-3,-5,-2,8,-2,2,6,-6,-6,7,-7,4,8,-10,-7,1,9,-10,6,6,5,-9,9,1,6,-3,6,6,-9,2,-7,5,-8,5,-4,-9,1,9,3,-5,-5,-5,6,-4,10,-10,-8,2,-1,-9,10,-6,-8,-10,5,4,-6,1,-2,4,1,-10,-10,-5,9,-9,-4,1,10,-2,7,-4,-5,-4,2,-9,-3,-1,1,-3,4,1,-7,-9,-4,-3,-7,5,-4,10,-6,-8,-8,-1,9,-1,-7,10,-7,-4,-9,3,4,1,6,3,-10,2,-1,7,10,-2,2,-3,-2,9,4,9,-7,-7,2,6,2,-10,-2,5,-4,-9,1,-5,-10,4,4,3,6,6,-1,-9,-10,-8,-5,4,-1,10,-4,-7,-9,8,6,7,-1,-1,-7,7,-1,-10,9,-10,7,-4,-2,7,2,7,9,2,-8,2,3,-3,-4,3,-6,-4,10,8,-9,-5,2,-8,5,1,-3,1,2,-10,-6,10,3,-7,-3,7,9,2,-4,-2,-2,-4,-6,1,-8,4,6,-8,-9,-4,-9,4,-2,1,1,-7,-4,8,-6,8,1,-10,8,-6,10,-9,10,8,2,-8,-3,-3,-5,-9,-1,-9,-10,9,-4,5,4,4,9,-6,3,1,-8,-5,7,-8,-2,1,5,-2,-3,-2,10,1,-9,-10,2,8,-8,-4,8,3,10,-4,2,-1,-10,1,10,1,10,2,3,-1,5,-5,-1,3,-10,6,2,6,2,-3,-1,10,8,-3,-1,1,2,-9,2,-4,-8,4,-8,3,8,-2,2,10,3,-10,-8,10,-7,-4,-2,3,7,-1,6,6,-10,2,-10,10,6,10,3,5,-9,-10,7,1,9,-2,-6,10,7,-5,-4,10,7,5,10,-1,-1,1,4,-4,6,9,-4,-5,1,-8,7,7,8,5,6,-8,-6,-6,3,-3,-8,8,-1,3,-4,-7,8,4,-7,-5,-6,-9,4,-3,7,-5,-8,7,7,-1,10,2,3,-6,-9,-5,-6,7,2,-6,-10,6,-5,9,-2,6,10,1,-6,-6,-8,9,-7,-1,-10,10,1,8,-6,9,-7,1,3,-3,-7,-3,9,-6,-10,-5,-7,8,8,3,5,3,8,-1,6,-1,10,7,-8,6,-3,8,-6,7,4,-8,-3,-3,5,-4,-8,3,1,-9,-4,-6,-6,6,-1,-5,-2,-6,-6,-7,-10,3,6,-6,-7,-5,-10,5,-7,9,3,-7,-9,-1,9,-9,7,-7,-7,1,9,-2,-8,8,-9,7,1,8,-6,-8,-6,-4,-6,-7,7,8,3,7,-8,-1,2,-10,2,6,8,3,-8,9,1,10,4,-5,7,-2,-9,-5,-3,-5,-6,4,-4,7,5,9,-2,5,-6,-4,-2,-9,9,1,10,6,-6,9,7,-3,2,10,10,9,-6,8,-9,-9,4,2,-8,1,1,6,-6,2,-3,-1,10,9,-4,3,6,4,4,6,-4,-7,-7,-5,-4,-10,-9,-9,4,4,5,-3,-9,-2,5,-6,5,6,-8,2,5,-10,6,5,7,7,-7,6,-7,3,-6,-1,-4,-10,7,6,-7,-8,8,-10,5,1,-8,-1,5,7,3,-4,-6,-1,8,4,-6,6,-10,-8,-4,8,-6,-6,-3,4,-2,4,3,-8,-3,-6,-9,-2,1,-3,-1,-8,1,7,7,-9,10,-7,-7,5,9,10,6,-6,-3,3,-9,-2,6,-4,3,-4,-7,7,7,-5,-3,-4,-8,-7,9,-7,-2,-1,-10,-3,-10,-7,9,-2,-6,-3,-3,-10,-7,-6,-9,-7,3,9,-4,-8,1,-3,1,-5,4,8,4,10,6,-8,-8,6,-4,5,-9,-4,10,3,3,-10,5,-4,-9,2,8,-10,6,10,-3,10,9,4,-1,3,-4,-9,-3,10,7,7,2,4,1,10,8,-6,5,-6,-7,-10,-2,-10,2,-6,9,-6,9,9,-3,-6,10,-10,3,1,7,-1,-10,5,-10,-3,-2,-10,-9,5,-1,-5,-4,-5,-2,-9,8,7,10,4,-3,-8,7,8,-8,-8,-5,-9,-9,-7,1,-8,-5,-10,7,4,-10,6,2,-3,-8,-1,-5,1,-7,5,-4,8,9,4,-2,7,3,-1,-7,7,-7,-8,1,8,-10,5,-5,-3,2,10,10,-8,-1,7,-5,-5,5,7,-5,-5,10,-8,4,9,3,-10,9,5,8,7,-8,-6,-6,-10,-7,-5,-4,2,-8,-4,2,-3,3,-8,10,4,8,3,-2,4,-10,8,3,2,3,-2,1,6,1,-4,-1,-9,8,-2,4,10,4,8,8,-9,-7,5,-4,3,-7,6,-7,9,-4,-6,9,-2,5,-2,-1,5,-2,9,3,3,1,8,-4,-5,-7,9,-8,1,-3,8,4,4,-4,-5,-5,7,-10,7,-1,4,-5,4,-4,-9,-7,-2,10,8,9,9,4,3,10,-5,4,10,2,5,10,4,-10,-10,-4,-2,-4,8,-8,9,3,-10,-5,4,-4,-5,2,-4,8,3,-4,5,-10,5,6,-10,10,-3,10,-4,8,-1,-7,-5,8,-6,-6,10,8,6,1,-2,-5,8,6,-2,-9,9,1,-2,-3,-1,3,-7,-9,4,6,-1,-5,-8,10,7,6,-9,9,6,-2,-5,10,-6,2,9,6,-10,-10,1,-10,-1,-4,1,-4,7,4,2,3,-3,6,2,-1,-4,-3,-10,3,9,-4,1,7,-5,-2,-7,3,-10,1,2,6,-2,10,4,-5,-1,3,-6,-1,-3,8,-8,1,9,-1,3,-6,8,7,9,3,9,-3,-8,8,9,-3,-6,-6,8,5,-5,-6,-8,3,3,9,-1,10,7,1,3,-3,-10,-3,6,-8,2,-2,-7,8,-8,-5,-9,8,-3,10,-3,-5,3,9,-8,8,3,10,4,3,7,1,-2,-10,8,-1,6,-1,-3,-8,-1,1,-8,-5,1,4,-7,1,-6,2,-2,4,-8,5,-9,-2,-1,4,4,-2,9,-10,-5,-6,2,4,1,-10,-6,10,-9,-4,5,-2,1,-3,-1,9,-6,6,2,-1,-9,4,9,-1,-8,1,-4,4,6,-6,-2,3,-9,-7,-9,6,3,-5,5,3,10,-7,-6,10,10,-10,-10,-2,2,-9,-8,-2,4,3,3,3,9,-8,10,-8,-3,-3,-3,-1,4,9,3,-3,9,6,-2,-5,-6,-8,10,-9,8,5,6,-8,4,-4,-1,3,3,-3,-6,-7,-9,1,3,-2,1,-2,-1,-9,2,-3,-2,-4,-4,1,-5,-4,-3,6,4,-7,-5,-4,-9,-3,-8,-3,-3,-5,-4,-8,-7,3,-5,8,-7,6,3,-10,5,-5,-2,-3,-7,-1,-7,10,-9,-5,-6,-6,7,-6,-2,-3,2,1,-6,8,-5,4,7,-7,9,-5,-3,7,-4,8,-9,-4,9,-4,10,-6,-2,6,-4,-8,-2,-9,3,-7,-1,5,-8,-1,-4,9,1,-8,6,2,6,-7,4,-7,2,-6,-9,-2,-9,1,2,-7,7,-5,9,5,9,6,-7,-2,5,3,8,10,-10,1,10,6,3,-2,-3,10,8,7,10,-6,7,10,5,-3,10,-1,-3,-10,10,-3,-9,-5,10,4,-9,-5,-10,-2,-3,-1,2,-5,-9,-3,5,10,-8,2,-6,6,-9,-4,5,5,2,3,8,-8,1,5,-7,1,-1,3,-3,5,-9,-10,-4,4,-1,-1,-5,5,2,3,5,7,8,3,9,3,6,4,-10,-7,7,3,9,-7,10,-4,-5,2,1,7,3,9,5,1,-2,-10,8,-1,1,-10,10,-5,5,8,-3,7,5,7,-9,-7,7,-2,-1,2,10,5,7,5,-9,9,8,-8,-10,-2,3,2,7,3,-6,1,8,-8,-8,-7,5,-9,-10,5,3,-2,7,4,-7,-5,3,-1,-4,6,-1,8,-10,9,5,-3,1,7,-7,-5,10,-9,6,4,8,-3,-6,7,10,-8,-9,-5,4,2,3,-10,-7,-7,-1,-4,-2,10,-6,4,10,-2,10,-3,9,10,3,6,8,-3,-4,-8,4,4,4,7,-9,4,6,6,3,9,5,-5,9,-2,7,-1,9,-2,-3,-6,5,4,9,7,7,9,-3,6,4,-7,9,3,-3,-8,1,-3,-6,-10,-8,-7,4,10,10,-9,4,-9,-4,-9,-7,-5,3,-9,-4,3,7,-8,6,8,4,2,3,-10,-4,-6,-10,-1,1,-1,8,-9,-2,6,5,-3,1,-8,5,-3,-1,-9,-10,-3,10,-5,5,-5,-1,4,5,8,3,2,3,8,-4,4,-7,4,10,8,-5,2,-6,-5,-6,-8,-8,8,6,7,2,4,8,-9,-1,-4,3,-4,4,9,10,-2,10,10,-5,5,-8,-9,1,7,-8,-6,-6,-8,-10,10,-8,8,4,3,-7,-9,1,3,9,-2,10,-7,-10,5,-4,2,1,10,-10,-5,3,-3,-3,4,8,-8,-8,5,10,10,8,5,-1,-3,8,-7,-1,7,1,-5,-9,-9,5,-7,-5,8,6,-5,10,8,-7,3,7,3,1,-9,10,-9,2,-2,10,4,-7,3,-6,-7,5,-10,-10,-2,-10,1,-9,-7,-4,-1,10,2,-2,-7,5,-3,4,5,-6,-4,6,-6,-6,7,1,6,-1,3,5,-6,-3,-3,2,-2,-2,5,-2,4,-4,-7,9,8,-4,-7,-10,9,4,10,-7,4,-9,-9,8,6,-6,-6,-6,9,7,9,1,-1,-8,-10,-5,6,1,-4,1,-10,-3,-4,-5,1,10,-1,5,-5,5,8,8,-6,9,10,2,-9,-8,-5,7,-5,5,-10,-10,-3,-10,6,7,9,-2,8,-8,-8,-3,9,9,6,2,4,1,-6,2,-9,2,7,-4,7,-3,8,7,5,-1,-2,9,4,5,2,-10,6,-8,7,9,6,8,-9,1,-3,-7,7,2,7,-1,-7,-2,4,-6,-6,4,7,7,-9,10,-3,8,4,-3,-9,1,-9,9,-3,-6,-9,10,-4,-2,5,6,8,2,-6,-2,-3,-1,4,-8,4,-5,-6,-9,-1,-5,2,8,5,-1,-5,6,-5,-10,6,7,10,4,-8,8,3,-10,5,4,-6,-9,-9,-8,-1,-3,-4,8,2,-2,3,2,5,1,-9,-10,-2,-5,3,5,-2,2,9,-2,1,3,-5,-2,-8,10,9,-2,8,-4,-3,-6,5,10,9,-7,5,-4,7,-1,-10,2,-9,-2,4,-10,3,1,-4,-2,-3,3,8,-10,-3,10,2,-3,-8,7,-9,10,-3,-1,-4,-1,-3,8,-2,-8,9,-8,-2,3,-6,-4,9,10,-5,-10,6,-9,-6,2,-5,-4,-8,7,-3,-8,3,5,-5,4,6,2,-5,-10,-8,-10,-3,-7,-7,1,-7,1,2,-1,-1,-9,-9,10,2,9,-4,-10,5,10,-4,-4,-1,-10,-2,-9,6,-1,-1,-2,-1,-10,10,-4,9,-7,-4,-5,-7,-7,8,4,-6,-10,8,-7,-3,-5,-8,7,10,2,6,-8,-4,2,3,-5,-2,5,7,8,8,2,-10,-3,5,-6,-3,-4,1,9,1,-2,-9,3,-8,7,-4,-4,-9,9,-2,-3,-1,-2,-2,-8,-2,-5,7,8,-1,-3,-5,-1,4,6,-7,9,-5,-2,-1,-1,-1,4,6,-3,-9,4,-3,-8,-5,3,5,-9,4,-9,-2,-5,-9,-10,5,4,10,-9,10,-2,-4,-6,6,1,-9,-4,-3,3,-10,-6,6,10,-5,3,-10,2,-7,-5,6,-4,6,-3,6,8,-8,-2,4,2,-5,-5,-9,9,5,-2,9,5,3,4,-5,5,9,-10,3,4,-9,3,6,-4,7,4,-2,-1,7,4,10,-5,-9,3,7,10,-6,1,-6,-7,-3,-6,9,9,5,-8,-3,5,6,-7,-7,6,-1,-7,6,-9,4,3,5,9,-5,4,-10,3,-8,8,7,-7,4,5,-10,6,-2,-9,-1,8,7,-4,-10,2,7,-3,5,3,6,7,2,3,-2,-2,3,9,-1,-9,-1,-1,3,3,4,7,-3,9,10,1,4,-7,5,-1,2,-1,2,-1,8,3,1,-3,6,2,-3,8,-8,6,-2,2,-6,-6,5,-3,5,-4,-8,1,-10,-8,5,10,-2,9,-5,7,-1,2,-4,10,3,-4,-4,6,9,5,-1,-7,3,-8,-6,2,2,5,10,-3,-3,5,3,9,7,-6,-3,3,1,-6,8,4,1,4,-7,6,6,-5,-5,3,-10,-10,3,9,-5,-1,-3,1,-4,-7,3,-1,9,2,-2,-5,5,5,9,4,-9,4,-9,7,-1,-4,-10,-3,-3,-4,-9,7,-6,-4,6,-8,-2,-6,9,-4,-8,3,5,8,1,3,2,-4,4,-3,5,-3,6,-7,3,-5,10,-10,6,-3,1,-6,7,1,-9,2,-8,2,4,-8,1,-7,-1,-5,6,-3,3,-10,-3,-2,7,-10,-8,-6,-2,-9,-8,-5,5,8,-6,-10,2,9,-3,10,4,-5,-2,5,7,-10,-4,6,3,-3,-4,-9,-3,4,1,5,3,8,-1,3,10,-3,-6,-4,-4,9,-9,6,7,7,-5,-1,-10,-6,-5,9,10,-8,2,7,-8,-5,3,9,3,-7,-6,-9,-9,-9,3,8,1,-2,-9,-10,5,3,7,9,-8,8,-3,2,1,-8,9,-8,3,3,10,10,9,3,-7,-7,7,7,-2,5,10,8,9,-10,-9,-6,-8,-2,2,-4,8,-2,-7,-6,-9,4,2,9,-1,6,3,7,-10,2,-6,1,-10,-10,1,7,7,-9,7,-4,8,8,-2,5,-8,4,-5,-10,7,3,-6,-9,-4,-5,6,-1,9,-6,-6,5,-9,-8,5,1,-7,-9,5,-9,-6,-1,-6,-5,-2,8,-1,4,3,6,1,7,2,-5,3,7,10,2,-2,9,-7,4,9,9,9,7,5,-9,1,5,6,5,-1,2,-3,9,-9,9,-2,-9,8,-2,3,1,5,-9,-7,9,-5,-3,-1,10,9,7,2,6,-3,4,-10,-9], dtype = "int16")#candidate|4319|(3600,)|const|int16
call_4317 = relay.TupleGetItem(func_510_call(relay.reshape(const_4318.astype('bool'), [6, 5, 2]), relay.reshape(const_4318.astype('bool'), [6, 5, 2]), relay.reshape(const_4319.astype('int16'), [3600,]), ), 0)
call_4320 = relay.TupleGetItem(func_515_call(relay.reshape(const_4318.astype('bool'), [6, 5, 2]), relay.reshape(const_4318.astype('bool'), [6, 5, 2]), relay.reshape(const_4319.astype('int16'), [3600,]), ), 0)
output = relay.Tuple([call_4288,call_4298,call_4317,const_4318,const_4319,])
output2 = relay.Tuple([call_4289,call_4299,call_4320,const_4318,const_4319,])
func_4328 = relay.Function([], output)
mod['func_4328'] = func_4328
mod = relay.transform.InferType()(mod)
mutated_mod['func_4328'] = func_4328
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4328_call = mutated_mod.get_global_var('func_4328')
call_4329 = func_4328_call()
output = call_4329
func_4330 = relay.Function([], output)
mutated_mod['func_4330'] = func_4330
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3572_call = mod.get_global_var('func_3572')
func_3573_call = mutated_mod.get_global_var('func_3573')
call_4401 = relay.TupleGetItem(func_3572_call(), 0)
call_4402 = relay.TupleGetItem(func_3573_call(), 0)
func_3572_call = mod.get_global_var('func_3572')
func_3573_call = mutated_mod.get_global_var('func_3573')
call_4410 = relay.TupleGetItem(func_3572_call(), 0)
call_4411 = relay.TupleGetItem(func_3573_call(), 0)
func_3043_call = mod.get_global_var('func_3043')
func_3047_call = mutated_mod.get_global_var('func_3047')
const_4417 = relay.const(5.022397, dtype = "float32")#candidate|4417|()|const|float32
const_4418 = relay.const([[5.005812,8.746435],[-8.931771,1.154705],[-2.121639,-2.043681],[-3.335365,9.681587],[8.235128,8.312850],[1.466066,-9.038185],[1.053973,-5.938311],[-3.776008,-9.561451],[9.749984,-3.058521],[-8.470469,-1.323415],[-4.979082,2.434102],[4.509708,-6.580443],[3.527005,-7.317234],[-0.679441,5.518995],[-7.011028,-4.906420],[-3.747637,7.349434],[-4.543009,8.522960],[7.190738,8.024628],[-0.739128,-7.759014],[7.099402,-2.718291],[-1.580106,-1.791387],[-8.886058,7.626062],[1.899343,3.672783],[-1.718044,6.004712],[-4.726974,8.492949],[1.677179,1.911517],[-6.319158,2.920751],[8.172425,-0.844682],[-1.871012,-2.483578],[-2.531071,0.564993],[4.266081,8.181713],[8.725560,-8.635849],[-8.047189,6.157919],[9.765518,0.253167],[-8.551732,9.962084],[5.412690,-0.293626],[-3.720341,-8.491757],[-6.702989,-9.845546],[-1.696679,7.040876],[5.098038,5.459938],[1.705746,2.753942],[4.776513,-3.683321],[5.116200,4.914421],[9.616645,-0.041131],[3.455566,0.856388],[-7.311881,9.192481],[9.737679,4.917524],[8.403209,-3.513788],[0.155609,0.078349],[1.113970,0.513466],[7.241874,2.441141],[-6.304298,2.854542],[-3.685135,9.623027],[-6.898249,2.352338],[6.542708,-8.268191],[6.459077,1.291069],[-1.285420,8.376127],[5.376115,-4.657112],[-2.225416,9.749565],[5.222994,-4.552321],[2.302206,8.694491],[-7.290095,-2.062963],[2.438784,-6.184990],[6.742209,1.225195],[-7.066214,6.612358],[0.162220,7.426221],[1.788695,-3.509406],[1.423392,-7.252447],[-0.248182,-4.910888],[-2.090528,-8.363725],[-1.750259,-1.800582],[3.670279,9.636531],[0.239124,1.019170],[3.309826,-9.936766],[0.260999,9.597181],[2.955052,-9.925822],[0.184916,-5.295083],[0.827922,9.191853],[-8.175815,5.466353],[-9.653739,4.589662],[-1.648863,-3.292603],[2.193599,-9.198256],[-5.185277,4.572676],[-9.804650,5.334754],[8.551501,2.817690],[4.397204,-0.197104],[5.482957,5.567882],[-9.838804,7.707712],[1.111285,-4.316918],[-5.266422,9.835764],[7.235286,-6.744580],[-6.900080,2.303392],[5.799493,-5.723245],[-6.339644,-1.357134],[8.651792,9.384145],[0.959091,-7.552642],[-1.355623,8.718708],[7.415586,5.435808],[-4.144646,-3.296348],[-7.920765,-2.857220],[3.249427,-0.852790],[9.802281,8.986123],[-9.478899,-0.410238],[3.017587,-1.963550],[-4.291959,-7.630065],[-8.053967,-3.725391],[3.484207,-5.312297],[-9.016377,7.321900],[5.206250,8.371201],[6.081200,4.619237],[9.787415,1.287356],[-7.026937,1.460127],[6.762044,2.898696],[7.542146,-2.633970],[-7.473033,-5.469289],[1.647658,-0.338311],[6.503866,9.028148],[-8.613101,-9.479853],[6.935807,-7.380959],[5.860172,-4.805559],[6.083168,4.533416],[3.907058,5.980223],[-0.591929,-0.971655],[-2.369961,-9.893411],[0.853960,-6.980413],[0.727666,4.895466],[-6.980313,-2.808819],[7.508487,-5.590394],[-5.712970,-3.042300],[-6.974039,-0.194269],[0.990628,-4.464713],[4.597483,-4.167287],[2.246112,5.966336],[7.925629,3.476454],[-5.921226,-3.864981],[-1.548718,7.985865],[-9.103838,-7.599971],[7.041968,2.053199],[8.250706,-8.203817],[-1.366138,0.412023],[8.466766,-7.129711],[-1.186312,-5.339574],[-6.869489,-4.173146],[-7.012629,6.898270],[7.789392,3.422415],[-3.166712,-8.813610],[-8.268994,6.380002],[9.768839,-1.746481],[8.249284,1.212674],[-2.227830,-7.746595],[-0.514856,7.675334],[-2.641778,5.217622],[-0.936795,5.036609],[5.558786,8.642342],[-2.643473,6.517176],[0.100615,8.564845],[-5.342864,-3.247499],[-2.522557,6.426752],[-6.220513,5.486802],[-6.946881,-0.274787],[7.164726,2.925568],[0.527194,0.767007],[1.953274,0.481532],[-4.266259,4.571000],[-1.582949,-4.299188],[6.230084,6.420727],[-6.599439,-7.441427],[-9.175303,-0.976366],[-1.750764,-4.891463],[-6.935861,-9.575615],[-1.767575,-9.819146],[-3.872324,-5.273628],[-1.282933,6.566716],[-6.453409,3.293379],[-3.564521,7.461673],[-6.896304,-4.541376],[-5.316760,7.654061],[-5.620543,-3.091292],[9.883919,-0.270223],[0.481919,-2.362614],[5.908100,1.966049],[2.990586,-1.483156],[-8.173198,-4.792912],[2.552087,-0.956059],[3.926014,-1.648553],[0.118076,9.508531],[-8.852831,-1.448399],[-6.900549,0.361560],[-5.395813,2.414731],[6.138343,4.769870],[-6.635140,-5.031536],[2.449091,0.070451],[-7.673289,-7.402020],[-7.849352,0.759267],[8.036083,-1.125532],[-6.143360,6.418995],[-0.993799,-7.840960],[6.402136,-7.410280],[0.118244,7.461715],[4.420094,-4.612219],[3.169132,2.170303],[-5.420887,-4.200602],[-3.452257,0.168088],[-1.986138,0.593714],[8.411977,-6.599859],[-6.104179,-9.964180],[3.092643,-7.916221],[-4.315304,6.043639],[2.465681,-3.336809],[0.932732,-6.441810],[6.781650,-7.303364],[-8.041227,7.306160],[-5.316480,-8.338582],[-2.385309,-7.944125],[6.284226,-3.397051],[1.935688,3.218596],[-6.521093,-9.651894],[-3.989062,9.685399],[-5.813804,3.331607],[9.871730,0.589498],[-9.481718,-1.439875],[-4.714025,-0.487463],[2.087258,-5.074662],[-5.594096,-3.282761],[8.503937,-4.615613],[4.107423,2.466843],[-7.662533,-7.018918],[6.185516,6.843569],[-9.194985,-6.868625],[-1.839685,-8.826977],[9.787990,3.101546],[-9.949743,-0.641931],[-4.428135,7.056842],[-7.330600,-8.481153],[0.494580,0.966486],[-7.266578,-4.823214],[-2.817084,3.724339],[3.239895,8.833198],[-6.070771,7.538812],[-1.128262,-4.907719],[-5.188308,-3.266344],[0.790405,3.507481],[9.161303,4.021292],[1.156209,-9.308291],[9.069198,5.960456],[5.923260,5.835164],[0.130511,-8.375014],[1.716511,-3.335178],[-7.392239,-4.971881],[5.125821,-6.411377],[-8.551103,-3.981918],[1.182644,-1.947715],[2.680877,-1.001096],[-0.460975,-7.704653],[-0.126115,4.430073],[-1.758944,4.034409],[-7.157728,-2.247342],[-5.926003,-5.027040],[-2.382124,-9.056694],[-2.791384,-4.659083],[-0.922227,-3.424041],[3.650028,-6.818551],[-3.211591,2.649263],[-2.367002,0.009978],[-2.115965,-8.368895],[2.503356,-2.984209],[-9.697453,3.469518],[1.098310,-5.599779],[-5.323741,-0.775271],[2.093620,6.859459],[-5.378090,-0.880634],[-4.366314,0.335048],[5.849063,9.223137],[-3.421103,7.546422],[-4.673779,0.330610],[-8.391663,-9.272695],[7.748949,-0.606025],[3.315573,-4.687976],[-3.296503,-9.730692],[-4.048340,-7.083321],[-8.287101,-1.695431],[3.873636,0.329916],[6.781773,9.716885],[-2.716882,-7.063972],[-3.085724,-8.486626],[2.245746,4.242485],[-5.302643,-6.644863],[0.411054,-5.660683],[-2.551843,-1.963997],[-4.511098,9.859786],[8.150454,-7.595474],[-7.141580,8.151852],[1.790544,1.053629],[-0.897723,3.060934],[-3.873113,8.035816],[-5.778144,2.755008],[2.694846,-3.505728],[1.810508,2.401337],[-3.786053,-0.779646],[-6.666453,4.635936],[-4.034419,-6.627439],[5.663446,3.323872],[8.464355,0.728264],[-2.175910,-5.163651],[-4.726405,-6.244045],[6.475136,-9.656021],[5.992879,-1.868993],[-0.444609,2.478682],[-3.310066,4.235399],[7.028209,-2.209507],[-6.632406,-4.321253],[-7.454924,-4.776903],[8.941691,8.003551],[-0.202776,-4.143698],[-6.512730,7.476807],[-2.053670,4.915848],[5.511480,-6.582407],[2.468377,5.557126],[-2.888099,2.144662],[7.914838,-9.730101],[-3.364235,1.717704],[9.453244,-7.081985],[-3.326358,8.215210],[-3.131985,-0.583569],[8.327369,0.655119],[1.773821,-0.985864],[-4.734817,-1.911999],[4.591918,7.600467],[-7.182768,-8.010152],[-8.583478,-9.715100],[4.471306,-5.161748],[-5.239267,4.706505],[6.639528,3.992093],[7.036054,5.438087],[8.209084,9.023211],[-8.034188,-4.470287],[2.496615,-6.524476],[9.824814,8.679481],[-6.260726,-2.004577],[-5.247914,9.351551],[-8.678935,-2.686799],[-7.820913,-8.120741],[6.766733,7.020785],[-6.972547,5.223962],[-0.371183,7.973856],[-3.154976,-3.034569],[-1.610533,6.665638],[-4.778026,1.356176],[0.774703,6.432064],[2.411475,3.748339],[5.326563,-1.853753],[-3.130850,-4.491246],[9.005197,-6.082594],[-9.806492,1.516933],[-7.533105,9.751874],[4.025790,4.347946],[-2.692749,-9.103734],[-1.913145,-6.517243],[-8.327134,5.598347],[-6.068925,-5.080827],[-6.293255,4.269993],[4.070972,8.732104],[-7.128848,7.474995],[9.215097,-5.122540],[3.855228,9.594500],[5.561518,7.667296],[-7.521875,-8.613818],[-3.569873,3.457008],[-9.485408,3.453197],[1.062769,0.280099],[5.806963,1.983464],[6.499851,-4.067089],[-7.848313,3.353891],[-7.900864,-8.995529],[5.631800,0.915115],[7.059686,-2.798954],[-0.925138,0.870205],[7.351318,0.334185],[6.241534,9.161977],[-7.294661,6.818701],[-5.343756,-5.478618],[-0.331582,4.596635],[-0.270349,0.819718],[0.952019,0.401026],[-5.682571,2.649604],[5.319071,-3.067800],[1.187584,0.422900],[-5.968500,7.365394],[1.241472,6.689238],[-2.639244,-6.299234],[4.136908,-8.722357],[9.041812,-5.450721],[-2.732059,4.564128],[-0.601328,7.511696],[-9.794847,-6.772231],[2.914028,1.108702],[0.122318,-8.572780],[7.591661,-6.992426],[6.153626,-0.736031],[-4.129393,-6.927907],[-9.151627,-0.744751],[3.966861,3.513653],[6.898985,-0.719408],[9.027953,6.746704],[-5.509036,-2.257526],[-1.559875,2.614963],[3.803586,1.831919],[-8.040729,-3.683491],[3.603310,-2.782854],[-8.708403,-5.877790],[2.484353,1.439532],[-5.658676,6.944937],[-5.663072,5.547250],[1.467019,-3.191485],[-1.440127,-8.576044],[9.477432,0.958013],[-4.585768,-4.177628],[7.830043,-8.382687],[5.191696,9.075541],[-0.511535,5.887801],[-3.384958,-0.596328],[9.335293,-8.958302],[-2.862396,-6.843615],[-0.119201,-4.898808],[4.802883,6.812100],[-5.675086,4.904458],[6.292102,4.897421],[-4.398609,0.614289],[4.592114,-0.975150],[-3.037202,-6.903107],[7.969651,4.246014],[3.394815,-3.454425],[-9.016231,2.540198],[7.944300,-3.971965],[-5.105958,9.537304],[-3.243603,0.224558],[-2.460990,-5.752541],[5.730022,0.584842],[-7.871123,-6.040184],[-8.077116,-1.853413],[-5.945636,3.532335],[3.672214,7.547570],[-8.598130,-9.329137],[3.713121,-5.185268],[0.550565,-7.794690],[-8.870725,6.012533],[-2.440696,-9.389876],[6.754093,3.727262],[-5.705148,0.360024],[4.471053,0.033573],[4.673753,-2.233189],[-7.212522,-3.143733],[-5.591908,-4.957692],[-7.663799,4.123338],[0.765707,-2.425510],[-5.229972,-3.194349],[-9.730512,-3.712346],[-2.169165,3.299684],[9.960935,-1.758619],[8.873614,0.694139],[-8.302134,-2.482926],[-5.790016,2.989740],[1.125302,-1.645590],[-1.536264,-3.718813],[-8.552462,-8.649279],[9.918874,1.671472],[4.466066,-8.105570],[-3.308900,-3.949070],[6.349936,-6.728198],[-7.406711,6.945486],[9.198407,-7.262930],[-3.442867,-7.791854],[6.339060,-5.503793],[5.826289,-9.346452],[0.017057,2.304408],[-6.835375,-1.554727],[-4.909378,8.953346],[4.935842,-2.499916],[-7.943212,-2.023229],[5.630330,-5.200059],[2.331536,3.120920],[-5.005967,5.257779],[-9.059708,1.044922],[5.485268,-2.980169],[-2.530926,-9.706723],[-4.560418,-7.812834],[6.855467,-6.346428],[-0.851907,-0.815456],[1.382612,-4.444053],[2.929798,0.007919],[-1.256722,-1.815815],[4.908761,5.919947],[7.699870,0.693454],[-4.208708,-4.247892],[-8.123714,-3.541017],[7.700773,-4.787496],[2.559476,-8.909733],[-7.629257,-9.338984],[2.410280,-0.048334],[-8.281194,-5.378424],[-3.086653,3.083324],[-1.539873,-8.810262],[-8.529003,8.542191],[9.992974,-3.327837],[-7.540972,5.455480],[7.381859,8.063059],[3.792248,0.502703],[6.400129,0.990731],[3.728235,-5.617396],[-5.341584,-1.864191],[2.702570,6.605407],[8.771889,1.180316],[-9.579220,-5.243832],[7.657172,-9.467991],[-8.708247,-3.726710],[-7.178722,0.262671],[-8.080536,7.061205],[-1.735288,-3.869931],[9.844335,7.506402],[8.183025,-2.872135],[8.895979,4.493713],[-4.350150,4.224513],[2.695253,-9.495179],[4.557175,1.227740],[2.477684,0.213448],[-6.221720,2.254290],[8.244453,-5.215245],[-5.254723,-9.533409],[-9.008956,-5.718711],[-0.399764,0.015487],[8.481545,5.381705],[0.878804,-9.878815],[2.988765,-5.901638],[0.917369,4.078785],[-2.475107,-0.187531],[-8.153443,3.173419],[-2.131751,7.825108],[0.304327,1.975071],[-9.315892,-1.160712],[8.729149,-0.627156],[-6.784902,0.203041],[-2.379420,-9.869447],[-7.757098,6.739274],[0.796147,0.210505],[-6.468562,-3.814445],[4.258676,-1.343976],[-2.089436,1.861955],[-1.440701,-5.103028],[1.616444,-1.580188],[-3.315033,-1.677818],[3.297127,9.283292],[-4.992022,4.243027],[8.378295,7.082211],[1.134162,-4.068937],[-2.336967,0.389512],[3.384069,8.639910],[1.184141,7.569618],[-1.666483,0.380043],[8.094252,-3.757273],[2.394420,6.466479],[-7.692984,-7.636387],[-4.581587,4.862482],[-4.943154,5.924001],[4.719459,-9.297137],[4.097282,-8.669851],[-4.407955,9.136824],[0.325631,2.629557],[8.960844,4.429752],[0.710381,9.008210],[9.148232,-0.040508],[-3.047548,0.601857],[-0.815328,-3.791438],[0.058532,8.580294],[-5.274480,-7.338554],[5.786476,2.568327],[-6.717553,-9.877253],[-4.679712,4.225487],[-7.540950,2.183357],[-5.630341,-1.064150],[9.321149,-2.342028],[-7.671266,-1.487741],[-7.528198,-8.746685],[-8.657396,5.798483],[-3.114433,7.267913],[1.689262,-2.893216],[-6.019218,-7.483072],[1.702333,-0.126340],[-9.769081,5.899670],[-2.775485,2.164046],[-8.404164,-3.315404],[3.493049,4.013034],[4.107045,-0.299466],[-6.780580,9.984396],[7.828959,0.414529],[-9.507751,5.565662],[-3.136982,5.900833],[-3.601062,8.337205],[-4.297348,8.399285],[0.523786,-2.536544],[5.289480,-9.615730],[1.766615,5.233114],[7.414530,6.212030],[-1.833347,-0.985943],[-3.991104,8.402446],[1.116188,7.399871],[3.243191,1.727148],[-5.573168,6.328059],[7.355181,4.508682],[7.483124,5.792632],[6.966500,7.244924],[4.477047,-2.897220],[4.538955,-9.348592],[-0.492061,9.982553],[-8.182948,6.815790],[-4.458370,8.558074],[-3.572131,-7.817715],[1.630273,-3.201804],[3.692270,-0.027873],[-6.728470,-3.249831],[-1.099422,-0.700396],[-5.106220,-5.050640],[-7.965347,1.365538],[4.985718,-0.319877],[0.627458,9.061587],[-5.658892,0.655141],[7.911509,-8.084440],[-2.477368,-6.674079],[9.882055,-5.674855],[-6.902545,1.507161],[-4.636025,0.716521],[1.547809,7.765996],[-7.973322,7.491142],[-8.143040,-3.045993],[-8.724405,4.946839],[1.828583,2.509636],[-0.423282,2.352664],[3.052458,-9.112609],[5.338081,5.964842],[4.530830,-7.316077],[8.277706,8.796607],[-4.638462,-8.824733],[-8.027105,-0.420508],[4.860043,8.459262],[8.930226,-6.541723],[0.886337,-9.072265],[-2.399969,2.593488],[-7.610264,7.015869],[5.414026,2.274125],[5.264331,-4.720904],[-3.240399,5.630716],[-4.374002,4.644735],[2.617977,-7.057126],[-3.574684,-5.100004],[-4.542723,8.707622],[0.830616,3.460206],[1.610770,-1.358482],[-3.027174,-0.225268],[7.011949,-7.173415],[-0.881346,6.828642],[8.940223,-6.968998],[-1.603193,-1.676315],[-5.484733,6.573224],[-5.884837,-5.338358],[-4.642985,-3.566918],[7.951550,1.346923],[8.468155,0.567326],[7.163113,0.955325],[-2.623842,9.112018],[-8.854977,-8.069004],[8.124692,-2.835365],[-9.718385,3.296036],[-8.122171,7.362659],[-7.610252,-3.461581],[-6.816331,-7.227025],[3.922367,-7.807995],[5.835971,-8.757283],[9.046924,1.569378],[6.018408,-7.284195],[-7.944375,-7.152995],[-6.649222,7.847394],[-3.501772,-8.427717],[0.317689,-1.897436],[-4.537480,-5.359549],[-9.895054,-5.828300],[5.222407,-5.047036],[9.467605,-6.223372],[-4.861934,-5.912786],[-2.103997,-2.228437],[-2.378255,0.010902],[2.448976,-5.721729],[-6.841078,8.984176],[5.436624,-5.096777],[4.591583,0.821193],[-4.872802,1.050961],[-2.465676,2.870354],[7.990773,9.302515],[-6.512814,6.849346],[6.347227,1.232126],[-4.153103,-1.228556],[-9.915553,3.017387],[-3.250175,9.034716],[-5.000528,6.632194],[-6.140198,-7.602980],[-9.849039,4.064055],[-5.473092,-1.508581],[-5.785706,-9.384931],[8.621142,0.531143],[5.594359,9.882787],[5.127659,-1.976210],[3.412646,7.799985],[-0.591209,6.801025],[4.082463,3.213309],[2.235410,7.030618],[-0.445399,8.879084],[1.816224,7.369704],[6.794348,-2.007362],[5.618846,-1.613385],[-6.245278,2.399342],[2.603504,-3.194076],[7.156890,5.215129],[7.255189,1.753835],[-4.014038,3.711795],[0.772180,-0.507256],[-8.664305,3.371036],[-0.188108,-7.267913],[4.824157,3.659100],[5.713565,-3.683048],[-5.281989,8.417689],[-4.197839,5.950186],[4.217366,-0.265015],[6.456621,8.913903],[0.217888,-1.191936],[2.990641,7.459515],[-0.496638,1.538276],[-9.268235,-5.933333],[4.759527,-6.244093],[-3.872729,-8.860856],[4.097422,-5.525191],[-3.058174,-2.859344],[1.927617,0.854756],[7.311105,8.857912],[5.787552,4.150708],[-9.136102,-8.508105],[-3.003552,-2.399283],[-2.372239,-0.911415],[0.139119,8.209998],[1.810296,-0.966705],[-5.876235,6.274519],[-3.045503,1.593709],[0.006188,0.708905],[-5.518720,-3.959283],[-6.405403,-4.994000],[9.654374,-0.400891],[8.677041,-6.812894],[4.404124,7.774744],[-3.134495,-3.989832],[-1.597457,6.950047],[-4.551416,7.861538],[-9.541854,1.512552],[-5.317816,-4.941308],[2.366519,5.852684],[-1.186208,1.175624],[-0.965312,5.889702],[9.639981,8.307504],[8.372107,2.691721],[5.206156,-4.562530],[-5.828988,-6.388239],[3.791065,7.592824],[-1.869032,-9.119692],[-6.468284,-4.857383],[-3.199582,-4.241658],[4.019065,9.022315],[-0.632151,1.295638],[-5.174841,4.907956],[5.711821,6.313472],[-9.472967,0.379069],[1.314670,6.774516],[4.084563,-3.886278],[1.383914,5.020893],[-7.227642,0.237091],[-0.960428,-6.738421],[3.176872,3.299452],[-5.240486,4.605579],[6.123992,4.388653],[-4.986429,3.638692],[-2.887976,-7.538503],[-7.997376,1.506861],[-1.258653,6.467423],[1.148467,5.816837],[5.094391,7.457497],[-3.080404,6.002741],[-9.347501,-2.665688],[6.566256,-0.297037],[-8.777879,-8.088252],[5.384460,6.022248],[-3.195661,-2.404938],[3.400463,-1.307179],[-2.571119,-2.095435],[8.035943,5.105790],[-2.333762,-3.086976],[3.627379,2.439086],[7.392774,-8.813584],[7.139563,1.758153],[-5.453338,2.018552],[8.767892,-2.700334],[-3.007025,-0.917416],[-4.343802,6.033367],[-2.619477,1.431248],[-9.277257,8.660498],[-4.378059,-4.655200],[0.447904,3.779435],[9.896821,7.916546],[3.945455,4.311245],[-3.380103,1.240838],[9.513270,9.709672],[-1.350956,9.439911],[-7.846862,2.207707],[-6.204624,-6.820966],[3.484769,9.059263],[3.900944,3.303766],[-6.453535,-3.645291],[6.817584,-0.712784],[-9.117734,-1.018396],[-4.937302,3.549283],[-5.148786,1.950074],[0.046689,-1.608720],[4.588211,6.995450],[9.339950,2.807079],[6.852667,-8.878164],[7.412280,9.988964],[1.932733,3.208439],[9.311561,-7.427803],[5.445072,-2.640552],[2.865976,2.867796],[-1.550668,4.615664],[4.411767,-7.052512],[-8.890934,7.419060],[5.066283,7.769116],[-8.628499,-1.659765],[-9.879768,2.835842],[-1.934633,-1.199929],[0.872834,-0.201320],[-4.503085,4.832184],[7.602258,0.637350],[-1.738203,4.251249],[9.592198,-1.832421],[8.399563,-6.839035],[9.307150,6.256566],[4.896341,-6.619582],[9.677940,0.465225],[-9.072749,-5.587630],[-2.929826,-6.160803],[-0.449025,-2.647407],[-5.046272,-5.922529],[0.933978,8.830135],[-0.506578,-2.896513],[-5.060098,-3.305665],[6.308617,-6.365153]], dtype = "float32")#candidate|4418|(858, 2)|const|float32
call_4416 = relay.TupleGetItem(func_3043_call(relay.reshape(const_4417.astype('float32'), []), relay.reshape(const_4418.astype('float32'), [12, 11, 13]), ), 1)
call_4419 = relay.TupleGetItem(func_3047_call(relay.reshape(const_4417.astype('float32'), []), relay.reshape(const_4418.astype('float32'), [12, 11, 13]), ), 1)
uop_4428 = relay.atan(const_4418.astype('float32')) # shape=(858, 2)
uop_4431 = relay.log(uop_4428.astype('float64')) # shape=(858, 2)
output = relay.Tuple([call_4401,call_4410,call_4416,const_4417,uop_4431,])
output2 = relay.Tuple([call_4402,call_4411,call_4419,const_4417,uop_4431,])
func_4433 = relay.Function([], output)
mod['func_4433'] = func_4433
mod = relay.transform.InferType()(mod)
output = func_4433()
func_4434 = relay.Function([], output)
mutated_mod['func_4434'] = func_4434
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1494_call = mod.get_global_var('func_1494')
func_1495_call = mutated_mod.get_global_var('func_1495')
call_4455 = func_1494_call()
call_4456 = func_1494_call()
output = relay.Tuple([call_4455,])
output2 = relay.Tuple([call_4456,])
func_4465 = relay.Function([], output)
mod['func_4465'] = func_4465
mod = relay.transform.InferType()(mod)
mutated_mod['func_4465'] = func_4465
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4465_call = mutated_mod.get_global_var('func_4465')
call_4466 = func_4465_call()
output = call_4466
func_4467 = relay.Function([], output)
mutated_mod['func_4467'] = func_4467
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2086_call = mod.get_global_var('func_2086')
func_2088_call = mutated_mod.get_global_var('func_2088')
call_4532 = relay.TupleGetItem(func_2086_call(), 0)
call_4533 = relay.TupleGetItem(func_2088_call(), 0)
func_3287_call = mod.get_global_var('func_3287')
func_3290_call = mutated_mod.get_global_var('func_3290')
const_4535 = relay.const(10, dtype = "int64")#candidate|4535|()|const|int64
call_4534 = relay.TupleGetItem(func_3287_call(relay.reshape(const_4535.astype('int64'), [])), 2)
call_4536 = relay.TupleGetItem(func_3290_call(relay.reshape(const_4535.astype('int64'), [])), 2)
func_2864_call = mod.get_global_var('func_2864')
func_2866_call = mutated_mod.get_global_var('func_2866')
const_4565 = relay.const([-7,-6,-5,9,4,-5,-10,-5,-7,-5,6,1,-8,2,8,-1,-8,-4,-7,9,8,6,-8,-10,-5,-9,2,9,-7,-8,-10,-4,5,-9,10,8,4,6,2,-7,1,-8,-8,-3,-1,3,-1,8,-2,2,7,-10,1,-2,-1,10,7,-5,8,-1,10,-10,1,-8,-7,9,-8,6,6,-2,1,9,3,-4,-5,-2,10,-7,-10,-8,-5,2,5,-3,-7,9,9,5,-3,5,-5,4,-6,8,6,-4,4,-4,-3,-1,-2,-8,8,2,-4,1,3,5,-6,7,1,-3,-7,-6,-4,3,-9,6,6,-1,9,8,-7,3,-7,9,4,-5,-1,-3,9,-10,7,-6,-5,3,-8,6,-5,-3,1,-10,-4,-6,-7,-9,-3,5,-4,-4,5,-5,-10,10,-9,-8,5,-5,-5,5,8,-8,-2,2,1,6,-5,1,-1,-9,-6,-3,4,-9,7,-1,-7,-7,-10,-4,6,7,1,5,8,6,-10,4,-7,3,8,-10,-10,3,-7,-1,7,2,-7,-9,10,1,-4,-6,-10,6,2,3,4,-6,-1,4,6,-5,3,-9,1,7,-5,-8,-1,-4,-2,-6,3,7,-8,1,7,8,3,-6,-7,10,5,8,-4,-8,-9,5,8,-5,3,2,-5,-1,-8,-1,-10,-9,-2,-1,-1,-5,3,2,1,10,5,-3,10,9,3,-5,2,7,2,2,-5,6,4,3,-7,-9,-3,-3,6,-5,1,-1,-3,-8,-6,-10,7,3,4,-7,9,3,6,-6,-9,3,-10,-4,-5,-8,3,6,-2,1,4,-8,2,4,-9,-4,1,8,-6,-2,5,3,-8,9,-7,9,-8,4,-8,10,9,6,3,-1,6,-1,-5,-10,3,-4,-10,4,8,8,6,-3,-3,-5,3,-7,-9,-10,3,9,9,-10,6,5,-2,2,-2,-1,6,-5,-1,-9,-1,5,9,3,7,5,5,-9,-4,5,8,2,1,4,-10,-10,-2,-6,-1,6,-2,3,-2,6,-3,-1,6,-6,3,-7,-3,-3,-6,-3,-9,6,2,1,-2,-10,-8,6,6,-9,2,-1,6,7,6,10,-10,7,6,8,4,10,10,-4,-10,7,-2,4,-4,-10,2,6,-6,6,10,9,1,-4,7,-9,-4,8,5,-3,-2,9,-5,-8,5,-3,7,9,-1,-10,2,7,6,-1,7,1,-7,5,-5,-2,-8,-5,7,4,-8,8,6,5,9,2,-8,-7,-3,-6,5,9,3,10,-10,9,1,-8,-3,8,9,-9,-4,3,-7,6,-6,-9,2,10,6,-2,7,3,-4,-1,2,9,6,-5,-8,-9,7,7,5,-1,-9,7,2,-5,2,9,-5,2,-8,-6,-8,-5,1,4,9,9,10,-3,8,1,3,-4,8,-2,2,5,3,7,-1,-1,10,-10,6,5,9,-3,-7,1,-2,-2,-10,-6,-6,-6,6,9,7,-6,-3,8,6,4,-8,-9,-9,7,-9,-2,-6,3,-8,-5,2,-10,2,-6,-7,2,-9,-6,-3,8,5,-6,-2,4,1,-5,-1,-7,2,3,-8,-5,-7,3,-5,9,-5,-5,-4,-7,8,-10,-8,4,-4,9,2,-7,8,-7,5,7,3,-6,-10,-3,-8,7,-4,8,-8,8,-5,-8,-6,-6,-1,10,-4,2,-3,2,10,9,-2,9,-4,-1,3,1,-2,-2,-9,-8,1,9,-7,-7,-2,-10,-1,-8,10,-5,-7,-4,-3,-6,1,9,6,-7,-1,-9,-9,1,1,-9,9,4,2,6,6,-2,-8,8,9,4,-2,-4,5,4,-3,5,-7,-7,-8,-6,7,-1,9,8,7,-9,-8,-1,-8,-6,-6,-4,-1,5,8,-4,-9,1,-4,-7,2,1,9,-10,5,-10,7,7,7,-9,-3,-9,6,10,8,3,3,7,-6,-9,-2,-5,2,-9,3,-3,1,-1,-1,-8,-8,8,-7,-1,1,5,10,-4,-3,3,-3,4,-10,2,6,2,-3,3,-5,-2,-6,-10,10,-9,9,10,-10,-7,-1,-2,8,-1,4,10,10,-6,2,1,1,4,-3,3,9,2,10,-7,9,1,3,1,-5,8,-2,-9,10,-5,8,-6,10,6,-3,-8,2,4,-1,7,-3,-3,-7,-9,6,1,2,10,7,-1,3,-3,-9,10,-3,5,-5,4,-3,-8,9,-2,7,4,-1,4,-4,-9,-3,2,10,-5,-8,-9,-2,-1,-8,-1,-6,-1,-9,3,2,-6,-2,3,10,1,7,-10,-6,-1,5,-1,6,-9,7,-8,-3,5,7,-9,8,-4,9,5,6,-2,-7,-1,5,9,2,-10,-4,-10,3,-7,-1,-7,6,10,9,2,-4,-10,-4,10,6,9,-5,10,-10,10,-7,-6,8,-6,5,-4,2,-8,2,-10,-8,-8,-10,2,5,-3,-8,5,2,-4,9,8,1,-8,5,-3,9,-9,-2,-8,2,9,-8,-7,-8,-9,-8,-10,6,4,-8,-6,10,3,-6,-1,2,-10,8,3,8,-5,-1,-9,-5,-8,-2,9,10,6,-4,-4,-10,-7,2,4,-1,8,6,-1,-10,3,3,-4,5,-9,-10,3,9,-6,-9,-1,-9,-6,-6,-5,4,-8,1,2,-5,-7,5,-3,-2,-5,9,-3,7,-3,-6,1,10,9,-5,-9,1,3,6,10,5,10,5,2,5,-7,8,1,9,-9,-10,-5,4,6,-4,-9,6,-10,-5,3,2,10,-7,-5,-10,5,3,-2,-7,-9,7,-7,7,3,2,1,5,-3,2,-3,4,-4,-5,6,-5,1,2,4,-7,-3,-3,4,-4,10,-7,-8,-8,-8,9,7,10,5,-7,-5,-7,3,1,-6,4,-2,-9,-2,5,2,-5,-7,6,-10,2,-7,-4,-9,-10,1,-2,-5,-3,8,6,-1,8,7,-3,-6,2,6,-6,2,-1,-9,6,-4,8,9,3,-4,-10,-6,8,10,7,-10,10,-8,7,-3,-9,3,10,-9,4,3,-6,6,3,6,3,-3,-9,3,-8,8,5,5,3,-8,9,10,-2,-1,-4,5,4,10,2,-7,2,-10,-7,2,-10,7,-2,7,3,9,5,-7,-5,-10,2,7,-3,1,-1,9,3,-3,1,9,7,5,1,3,-9,-2,2,-7,4,6,2,7,9,8,-9,8,-4,-2,-3,2,-7,4,-4,6,-8,-3,6,-6,1,9,-3,-8,7,6,4,-3,2,10,-10,-6,-9,-1,-1,1,2,-4,6,4,1,-5,-7,3,8,7,-2,-6,-6,-5,5,8,8,2,3,5,-7,-8,1,-6,-7,-6,-8,9,1,-10,3,-4,2,-3,4,-1,-10,-5,-2,-9,4,9,10,-5,-3,-7,-4,7,9,-3,10,3,-2,-1,9,-3,-5,-6,-2,6,-7,4,-6,-9,1,-9,5,2,-2,2,-3,8,-9,5,-5,-9,-5,-6,-3,7,7,6,-8,9,-3,3,6,-6,-6,-6,-1,5,-7,-9,6,-8,-10,4,5,9,-6,4,4,7,-10,-10,10,-6,-8,1,1,-6,-4,-8,-8,8,9,-6,-1,-4,-7,-1,2,6,-2,-2,6,3,-2,10,-10,-4,10,6,2,-2,4,6,1,-4,8,-6,-7,4,-2,9,-5,-2,10,8,-8,1,-4,-6,8,9,-7,10,-6,3,-3,1,-5,4,-3,-7,3,-10,4,3,9,10,9,-10,-6,-2,-5,-8,-5,6,-5,8,-3,-8,-8,1,-4,-1,-2,-7,-6,-9,1,-3,-2,-4,-4,-6,1,-5,6,4,8,-5,10,3,1,9,1,-8,-9,-1,-5,1,2,4,-4,10,-8,4,-8,-6,-1,1,-4,-7,1,7,5,-3,4,5,-10,9,3,-7,-4,-10,-5,7,1,-4,1,10,1,-3,3,-2,6,-10,-9,-9,-10,-8,-1,-6,-10,-9,-6,-9,4,-2,1,-9,-9,5,6,1,-3,4,-3,-10,-3,-3,8,5,-3,7,3,2,-5,-10,-1,8,7,1,4,-2,-8,5,-9,8,-9,6,10,-4,7,5,-2,-3,7,-10,5,8,-8,-1,-5,-9,-3,6,6,-8,3,-10,-8,-5,-9,4,6,-9,-6,3,1,-6,10,-8,4,-7,9,4,-10,-2,2,3,9,4,4,7,-1,10,6,8,-3,-9,-2,-10,9,-1,8,-1,-8,10,-4,9,-9,9,-8,7,1,2,10,6,-3,-4,-5,-6,2,8,5,3,8,-1,-6,6,6,-1,-1,8,7,7,-7,-4,-10,-4,10,9,7,4,8,-3,1,3,-2,-8,-4,-3,-7,-9,1,-2,-3,1,-10,-5,7,3,3,-2,8,6,-4,-3,5,-9,-7,7,1,10,-3,10,-5,7,-2,3,-8,1,5,4,8,-6,4,5,-1,9,-3,3,-5,-6,-1,4,-5,3,1,-1,1,-3,1,2,-4,6,-1,5,-9,-2,9,10,-3,5,-10,-2,-4,-8,3,-6,3,6,9,2,2,10,10,-5,-5,-8,9,-6,4,-7,-5,6,3,6,3,1,1,-7,5,5,-2,-5,-2,-3,6,-3,-3,1,-1,9,4,-9,3,-8,-8,8,-6,3,5,-4,6,-2,-8,-4,-7,-5,2,5,-2,6,8,1,7,3,10,1,-5,-4,5,4,-8,4,-2,7,-2,5,-5,3,2,3,3,7,-8,-5,-6,4,5,-6,-7,-5,6,-10,-6,-2,-10,10,1,-5,6,-2,6,-10,4,-2,-1,-1,-6,-7,-3,-1,-5,8,8,-5,-1,9,-2,2,7,6,-10,-4,-7,9,1,5,-10,-4,-8,3,7,-9,-10,-7,-5,-6,2,-1,10,-1,7,9,-10,-6,-5,10,-10,2,-9,9,-2,9,5,-2,-10,-8,-10,-6,1,1,-10,9,-9,2,-8,4,-5,3,-4,7,-10,1,-1,4,-9,-9,5,1,-8,4,3,5,2,2,-5,-10,-3,4,-9,7,3,-9,3,-6,2,-7,9,-4,2,-9,-2,-9,-1,8,-1,-10,-10,-5,-8,4,-1,4,4,3,4,2,-2,-3,-6,-4,6,3,2,1,-1,9,-7,-3,1,-9,-9,-4,-4,3,8,8,1,3,1,3,-8,-5,-5,10,-6,2,-1,-8,3,-4,-1,8,4,-5,-5,7,9,10,2,-2,10,6,10,6,-5,6,-5,-6,-6,-5,9,4,-6,4,8,-6,9,10,6,-5,-8,-5,-5,-3,-3,-2,10,10,4,-4,9,-9,-4,10,-4,-10,-7,-7,-7,-3,-7,-3,-3,-5,-9,9,10,8,6,-5,4,5,10,4,-2,-8,-4,-8,-5,3,-1,-2,10,-7,10,9,7,5,-7,5,-6,10,5,6,-10,-4,1,4,-5,-10,-4,1,4,-9,5,-4,-8,-10,4,-2,4,7,-9,-9,-3,1,9,-9,8,-7,3,-3,-6,5,-8,6,1,9,4,8,8,-5,1,-1,-3,1,10,10,-8,7,9,10,-5,-2,9,-6,-9,-4,-4,-1,-5,-6,10,-2,8,4,3,9,-1,6,-5,6,3,6,9,8,-4,9,-10,-10,-10,-8,-8,-2,-2,-10,-3,10,-8,-5,6,3,8,3,2,-8,8,7,7,-5,-10,-5,-1,8,5,-8,-7,-2,2,-4,-9,-9,10,-2,-7,-7,2,-9,9,4,-1,7,-5,4,4,-4,-2,-9,2,1,-6,6,10,-1,-5,5,9,-5,-10,-4,8,-7,-2,3,8,5,2,-4,-9,1,1,-9,7,5,-2,6,-8,10,-1,-5,-7,-3,-2,-1,-1,6,-10,2,-6,9,-7,-7,7,-4,10,-7,8,8,-6,-4,3,1,-2,3,10,-7,4,-10,3,9,-3,-2,6,-4,1,1,7,-7,5,-8,-9,-1,-3,4,-7,9,9,3,-1,6,-5,6,-9,1,-3,8,-6,-5,-2,-4,1,-10,-7,6,10,-2,10,-6,-10,-2,8,3,1,-2,8,-5,-1,1,-8,6,8,-6,5,-7,9,-8,-1,10,10,6,-1,-8,6,10,6,-3,-5,3,10,-7,-9,-7,-7,-4,-10,6,1,-4,5,10,-4,-6,-1,9,10,2,10,-2,6,-3,-6,10,2,2,-1,-9,-5,-4,-5,-8,8,4,1,4,-2,6,3,-5,3,4,-10,-7,-9,1,-3,-7,-1,10,9,-9,-10,-10,2,-9,3,-9,8,7,-8,-9,9,3,-1,2,-6,2,8,8,-9,7,2,-6,1,-8,-2,-1,5,1,-6,5,-5,-9,-10,7,7,1,9,2,1,-10,-6,-3,4,6,-10,5,9,10,-2,-9,2,-10,9,2,9,2,2,6,-3,5,3,-9,-3,-2,-8,4,2,3,-6,-1,7,-10,-1,5,7,7,2,-2,7,-2,4,-6,-1,-8,-4,-2,4,-9,8,-1,8,5,-6,-6,1,-9,-7,-1,-4,5,-8,8,-9,-9,3,-2,-7,-2,3,7,10,-9,3,-5,-9,-4,9,2,-10,-7,-8,5,-7,2,9,-4,-7,5,-4,-8,5,1,5,4,-4,-10,1,10,6,-7,-1,-5,-7,10,-3,4,2,1,-1,-7,-5,7,-4,-3,-9,5,-3,-10,-1,10,1,-3,1,4,-9,7,8,10,-3,2,1,-5,10,-7,-8,-8,-2,5,4,-7,8,7,-10,-8,9,-6,-1,-7,6,3,-10,4,1,7,-9,-10,-10,3,-3,-4,4,3,3,-6,3,-5,-2,6,10,-1,-10,6,-8,-10,3,-5,6,-10,-7,9,6,6,-5,-3,6,6,5,-5,-2,-5,-1,-1,8,7,8,7,10,-3,-6,1,-10,-1,10,9,-3,6,5,-2,-9,-10,2,10,-3,-8,1,2,-6,-8,8,-8,-2,-4,2,-1,4,-7,-9,10,-1,-10,8,6,6,10,-3,-5,-3,-3,-7,-7,6,-7,10,-8,6,7,-1,-7,9,10,-6,-7,4,-3,6,1,-3,-8,8,7,-3,7,7,10,-1,-8,-3,-3,6,-9,-7,6,-1,-4,10,4,-6,-9,4,9,-8,-2,1,-10,-5,-3,1,4,-4,2,2,1,-8,-10,-8,10,5,8,9,-5,9,7,-7,-2,1,-9,2,8,-10,4,7,-5,6,-8,-1,7,3,10,7,3,7,-9,-1,9,-5,-9,-7,-5,-8,-5,-10,-9,-8,-4,-10,-1,10,8,-6,5,1,6,-10,10,3,-7,10,5,6,1,6,-4,3,-8,-10,2,6,-9,8,4,-5,-4,8,10,-1,-9,6,-3,-7,8,5,9,8,8,5,9,5,-4,-5,5,7,2,9,-10,8,2,-10,5,-8,3,-6,-5,8,-4,-4,-8,6,2,-5,10,2,7,4,9,-8,7,-5,-7,-2,5,-1,-6,-2,2,1,-3,7,-3,3,-5,4,-6,-8,3,3,5,10,-3,-10,-2,-9,3,2,-7,10,7,-7,7,6,-5,-10,7,2,4,4,-4,-8,9,5,-6,-9,10,-6,9,-7,-2,-5,-6,-8,-10,4,-7,10,-4,-3,9,5,-10,-4,-4,-5,7,7,8,4,10,-1,2,-5,4,9,2,3,-9,-10,8,-1,-7,6,4,3,-10,10,-4,8,-5,-3,3,8,3,-4,5,-5,4,8,-3,-1,-5,-3,-8,-9,10,-1,-10,-2,8,3,1,-6,1,-2,-4,7,6,10,-3,-8,-3,-3,-5,-5,2,8,7,-8,-9,3,5,-3,-10,-4,2,-5,10,-9,4,10,3,1,2,-8,-10,-6,-1,-6,4,3,4,2,-7,-1,-4,-8,8,6,-9,-5,-5,5,-10,8,-5,-9,-10,-4,-1,-9,7,1,-7,7,1,-6,-3,-6,-6,-6,-5,1,-7,2,2,-4,-9,4,3,-1,-5,5,-1,-10,3,-7,2,-6,5,-10,9,7,10,1,5,10,-2,8,3,-10,4,9,-9,7,-2,2,1,-7,-1,4,4,-3,-8,10,9,-2,-1,-8,-5,-4,-4,-6,4,-5,6,10,-5,8,4,-5,-10,-5,-5,1,10,6,-10,10,-10,10,6,5,2,3,3,-10,-4,-6,-8,10,2,3,-10,7,-9,3,-8,-7,4,-8,-9,-2,3,-5,-6,-2,-10,-8,9,-8,4,-4,-4,5,-2,-6,3,-5,7,9,4,10,6,6,-7,4,8,4,-10,9,-3,-4,-3,1,10,3,-1,9,3,5,-10,1,-8,1,5,-9,-4,-5,1,-7,7,-4,-5,6,-10,9,-9,-9,7,-4,-7,3,5,10,-3,6,9,8,6,-3,4,-6,4,9,-5,-6,-5,6,6,-5,-3,10,-4,-7,4,-7,-3,3,-8,9,-7,-8,5,-4,7,9,-2,-3,7,9,9,-10,-10,-2,-7,-4,7,9,-3,2,-2,-2,-1,-3,5,2,9,-6,6,7,-8,-2,-2,-8,3,9,-2,10,-5,4,6,-4,7,-1,-10,10,1,5,-10,2,-3,-9,-1,-8,3,-8,5,3,4,7,-4,3,9,-9,-1,2,-2,-8,-1,1,6,4,-1,-5,9,-10,1,8,-1,10,-10,5,5,-4,10,4,-5,7,-3,5,-8,-7,-8,10,-4,1,-3,5,-10,6,-4,-5,-7,7,7,-6,-6,-6,9,-2,-4,-6,-9,-5,-10,8,1,5,6,-10,3,-9,-8,-3,-1,-10,10,-2,-9,-8,1,-4,-9,-2,2,-1,-9,-6,-7,6,6,5,-3,4,7,2,-10,-8,-7,8,-4,6,1,-10,3,-8,-1,-4,1,6,-2,4,5,2,4,-3,9,2,3,10,-8,-4,3,-3,8,10,10,-1,-8,8,3,2,3,3,6,2,4,-4,8,9,9,-5,5,-3,-8,-7,-4,-2,5,-3,-9,-6,4,7,-9,5,8,-8,-5,8,-4,2,-5,3,10,-10,2,9,6,-8,-2,3,-5,3,-2,3,5,3,10,10,3,-6,-4,1,-10,-6,-1,10,-10,6,-3,9,4,8,8,-5,-5,-6,-5,10,-3,8,5,-2,3,10,-8,-2,1,-8,7,9,-6,3,-1,9,-1,-10,4,-5,9,-3,-4,-9,6,-5,-3,-6,-9,-10,-2,-4,5,1,-7,8,-10,5,7,-1,3,5,2,5,-10,4,4,-7,4,-10,-4,7,9,-2,-5,-9,-8,-6,-8,2,6,2,-3,-10,-8,-8,-9,8,6,-4,2,-1,10,3,-8,5,-10,-5,7,2,6,-10,6,2,-10,4,10,4,-3,-5,1,-7,9,8,7,-1,-1,-7,1,-10,4,4,-1,3,5,-7,9,9,-5,-2,-6,-7,-6,-5,-4,9,-1,3,1,-6,-3,3,6,-8,7,-5,-4,2,-5,-10,-4,-8,-2,-6,4,-9,6,6,4,-3,5,5,-10,-1,6,3,-10,4,1,-9,2,1,2,10,-1,-6,-10,-6,-10,5,-10,-3,-1,-6,-6,7,-3,-8,6,-10,10,3,-8,2,8,1,8,-10,-2,-3,-1,8,1,-8,1,-3,-5,3,-7,-9,-4,5,-6,-3,1,-7,-10,-6,-1,5,-4,5,5,1,4,-9,4,-10,-8,1,3,-2,2,-2,-6,-5,5,8,-9,-4,-10,-1,4,7,6], dtype = "int16")#candidate|4565|(3600,)|const|int16
call_4564 = relay.TupleGetItem(func_2864_call(relay.reshape(const_4565.astype('int16'), [3600,])), 4)
call_4566 = relay.TupleGetItem(func_2866_call(relay.reshape(const_4565.astype('int16'), [3600,])), 4)
func_1166_call = mod.get_global_var('func_1166')
func_1168_call = mutated_mod.get_global_var('func_1168')
call_4573 = relay.TupleGetItem(func_1166_call(), 1)
call_4574 = relay.TupleGetItem(func_1168_call(), 1)
func_4465_call = mod.get_global_var('func_4465')
func_4467_call = mutated_mod.get_global_var('func_4467')
call_4580 = relay.TupleGetItem(func_4465_call(), 0)
call_4581 = relay.TupleGetItem(func_4467_call(), 0)
func_3287_call = mod.get_global_var('func_3287')
func_3290_call = mutated_mod.get_global_var('func_3290')
call_4582 = relay.TupleGetItem(func_3287_call(relay.reshape(const_4535.astype('int64'), [])), 3)
call_4583 = relay.TupleGetItem(func_3290_call(relay.reshape(const_4535.astype('int64'), [])), 3)
output = relay.Tuple([call_4532,call_4534,const_4535,call_4564,const_4565,call_4573,call_4580,call_4582,])
output2 = relay.Tuple([call_4533,call_4536,const_4535,call_4566,const_4565,call_4574,call_4581,call_4583,])
func_4588 = relay.Function([], output)
mod['func_4588'] = func_4588
mod = relay.transform.InferType()(mod)
mutated_mod['func_4588'] = func_4588
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4588_call = mutated_mod.get_global_var('func_4588')
call_4589 = func_4588_call()
output = call_4589
func_4590 = relay.Function([], output)
mutated_mod['func_4590'] = func_4590
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3342_call = mod.get_global_var('func_3342')
func_3343_call = mutated_mod.get_global_var('func_3343')
call_4604 = relay.TupleGetItem(func_3342_call(), 1)
call_4605 = relay.TupleGetItem(func_3343_call(), 1)
output = relay.Tuple([call_4604,])
output2 = relay.Tuple([call_4605,])
func_4606 = relay.Function([], output)
mod['func_4606'] = func_4606
mod = relay.transform.InferType()(mod)
mutated_mod['func_4606'] = func_4606
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4606_call = mutated_mod.get_global_var('func_4606')
call_4607 = func_4606_call()
output = call_4607
func_4608 = relay.Function([], output)
mutated_mod['func_4608'] = func_4608
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2312_call = mod.get_global_var('func_2312')
func_2314_call = mutated_mod.get_global_var('func_2314')
call_4622 = relay.TupleGetItem(func_2312_call(), 0)
call_4623 = relay.TupleGetItem(func_2314_call(), 0)
func_1355_call = mod.get_global_var('func_1355')
func_1358_call = mutated_mod.get_global_var('func_1358')
var_4628 = relay.var("var_4628", dtype = "float64", shape = (576,))#candidate|4628|(576,)|var|float64
call_4627 = relay.TupleGetItem(func_1355_call(relay.reshape(var_4628.astype('float64'), [4, 12, 12]), relay.reshape(var_4628.astype('uint16'), [4, 12, 12]), ), 1)
call_4629 = relay.TupleGetItem(func_1358_call(relay.reshape(var_4628.astype('float64'), [4, 12, 12]), relay.reshape(var_4628.astype('uint16'), [4, 12, 12]), ), 1)
output = relay.Tuple([call_4622,call_4627,var_4628,])
output2 = relay.Tuple([call_4623,call_4629,var_4628,])
func_4634 = relay.Function([var_4628,], output)
mod['func_4634'] = func_4634
mod = relay.transform.InferType()(mod)
mutated_mod['func_4634'] = func_4634
mutated_mod = relay.transform.InferType()(mutated_mod)
var_4635 = relay.var("var_4635", dtype = "float64", shape = (576,))#candidate|4635|(576,)|var|float64
func_4634_call = mutated_mod.get_global_var('func_4634')
call_4636 = func_4634_call(var_4635)
output = call_4636
func_4637 = relay.Function([var_4635], output)
mutated_mod['func_4637'] = func_4637
mutated_mod = relay.transform.InferType()(mutated_mod)
var_4657 = relay.var("var_4657", dtype = "float32", shape = (1, 8, 2))#candidate|4657|(1, 8, 2)|var|float32
uop_4658 = relay.sinh(var_4657.astype('float32')) # shape=(1, 8, 2)
uop_4662 = relay.cos(var_4657.astype('float32')) # shape=(1, 8, 2)
uop_4670 = relay.log10(uop_4662.astype('float32')) # shape=(1, 8, 2)
func_1806_call = mod.get_global_var('func_1806')
func_1808_call = mutated_mod.get_global_var('func_1808')
var_4679 = relay.var("var_4679", dtype = "uint8", shape = (120,))#candidate|4679|(120,)|var|uint8
call_4678 = relay.TupleGetItem(func_1806_call(relay.reshape(var_4679.astype('uint8'), [6, 5, 4])), 0)
call_4680 = relay.TupleGetItem(func_1808_call(relay.reshape(var_4679.astype('uint8'), [6, 5, 4])), 0)
bop_4684 = relay.bitwise_or(uop_4670.astype('uint64'), relay.reshape(uop_4658.astype('uint64'), relay.shape_of(uop_4670))) # shape=(1, 8, 2)
var_4697 = relay.var("var_4697", dtype = "float32", shape = (11, 8, 2))#candidate|4697|(11, 8, 2)|var|float32
bop_4698 = relay.minimum(var_4657.astype('float32'), var_4697.astype('float32')) # shape=(11, 8, 2)
func_3620_call = mod.get_global_var('func_3620')
func_3623_call = mutated_mod.get_global_var('func_3623')
call_4701 = relay.TupleGetItem(func_3620_call(relay.reshape(var_4679.astype('float32'), [12, 10, 1])), 0)
call_4702 = relay.TupleGetItem(func_3623_call(relay.reshape(var_4679.astype('float32'), [12, 10, 1])), 0)
output = relay.Tuple([call_4678,var_4679,bop_4684,bop_4698,call_4701,])
output2 = relay.Tuple([call_4680,var_4679,bop_4684,bop_4698,call_4702,])
func_4710 = relay.Function([var_4657,var_4679,var_4697,], output)
mod['func_4710'] = func_4710
mod = relay.transform.InferType()(mod)
var_4711 = relay.var("var_4711", dtype = "float32", shape = (1, 8, 2))#candidate|4711|(1, 8, 2)|var|float32
var_4712 = relay.var("var_4712", dtype = "uint8", shape = (120,))#candidate|4712|(120,)|var|uint8
var_4713 = relay.var("var_4713", dtype = "float32", shape = (11, 8, 2))#candidate|4713|(11, 8, 2)|var|float32
output = func_4710(var_4711,var_4712,var_4713,)
func_4714 = relay.Function([var_4711,var_4712,var_4713,], output)
mutated_mod['func_4714'] = func_4714
mutated_mod = relay.transform.InferType()(mutated_mod)
const_4744 = relay.const(-3, dtype = "uint32")#candidate|4744|()|const|uint32
var_4745 = relay.var("var_4745", dtype = "uint32", shape = (10, 3, 3))#candidate|4745|(10, 3, 3)|var|uint32
bop_4746 = relay.bitwise_xor(const_4744.astype('uint32'), var_4745.astype('uint32')) # shape=(10, 3, 3)
func_4328_call = mod.get_global_var('func_4328')
func_4330_call = mutated_mod.get_global_var('func_4330')
call_4750 = relay.TupleGetItem(func_4328_call(), 2)
call_4751 = relay.TupleGetItem(func_4330_call(), 2)
uop_4752 = relay.tan(call_4750.astype('float64')) # shape=(6, 5, 2)
uop_4754 = relay.tan(call_4751.astype('float64')) # shape=(6, 5, 2)
func_3342_call = mod.get_global_var('func_3342')
func_3343_call = mutated_mod.get_global_var('func_3343')
call_4755 = relay.TupleGetItem(func_3342_call(), 0)
call_4756 = relay.TupleGetItem(func_3343_call(), 0)
output = relay.Tuple([bop_4746,uop_4752,call_4755,])
output2 = relay.Tuple([bop_4746,uop_4754,call_4756,])
func_4763 = relay.Function([var_4745,], output)
mod['func_4763'] = func_4763
mod = relay.transform.InferType()(mod)
var_4764 = relay.var("var_4764", dtype = "uint32", shape = (10, 3, 3))#candidate|4764|(10, 3, 3)|var|uint32
output = func_4763(var_4764)
func_4765 = relay.Function([var_4764], output)
mutated_mod['func_4765'] = func_4765
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1948_call = mod.get_global_var('func_1948')
func_1949_call = mutated_mod.get_global_var('func_1949')
call_4790 = relay.TupleGetItem(func_1948_call(), 0)
call_4791 = relay.TupleGetItem(func_1949_call(), 0)
output = call_4790
output2 = call_4791
func_4799 = relay.Function([], output)
mod['func_4799'] = func_4799
mod = relay.transform.InferType()(mod)
mutated_mod['func_4799'] = func_4799
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4799_call = mutated_mod.get_global_var('func_4799')
call_4800 = func_4799_call()
output = call_4800
func_4801 = relay.Function([], output)
mutated_mod['func_4801'] = func_4801
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1948_call = mod.get_global_var('func_1948')
func_1949_call = mutated_mod.get_global_var('func_1949')
call_4827 = relay.TupleGetItem(func_1948_call(), 0)
call_4828 = relay.TupleGetItem(func_1949_call(), 0)
func_4283_call = mod.get_global_var('func_4283')
func_4286_call = mutated_mod.get_global_var('func_4286')
var_4837 = relay.var("var_4837", dtype = "int8", shape = (120, 2))#candidate|4837|(120, 2)|var|int8
call_4836 = relay.TupleGetItem(func_4283_call(relay.reshape(var_4837.astype('int8'), [16, 3, 5]), relay.reshape(var_4837.astype('int8'), [16, 3, 5]), ), 0)
call_4838 = relay.TupleGetItem(func_4286_call(relay.reshape(var_4837.astype('int8'), [16, 3, 5]), relay.reshape(var_4837.astype('int8'), [16, 3, 5]), ), 0)
func_2571_call = mod.get_global_var('func_2571')
func_2573_call = mutated_mod.get_global_var('func_2573')
call_4839 = relay.TupleGetItem(func_2571_call(), 0)
call_4840 = relay.TupleGetItem(func_2573_call(), 0)
func_4204_call = mod.get_global_var('func_4204')
func_4206_call = mutated_mod.get_global_var('func_4206')
var_4851 = relay.var("var_4851", dtype = "float32", shape = (120,))#candidate|4851|(120,)|var|float32
call_4850 = relay.TupleGetItem(func_4204_call(relay.reshape(var_4851.astype('float32'), [3, 40])), 3)
call_4852 = relay.TupleGetItem(func_4206_call(relay.reshape(var_4851.astype('float32'), [3, 40])), 3)
func_2814_call = mod.get_global_var('func_2814')
func_2815_call = mutated_mod.get_global_var('func_2815')
call_4853 = func_2814_call()
call_4854 = func_2814_call()
func_1736_call = mod.get_global_var('func_1736')
func_1737_call = mutated_mod.get_global_var('func_1737')
call_4857 = relay.TupleGetItem(func_1736_call(), 0)
call_4858 = relay.TupleGetItem(func_1737_call(), 0)
const_4872 = relay.const([[[7,-2,-4,-6,-3,-1,2,8,8,10,3,9,-9,5,-3,3],[-4,1,-7,-7,7,7,1,9,-7,1,6,-3,-2,-6,-3,-5],[3,-6,-4,-1,3,2,-3,5,9,-10,-5,-2,1,2,-5,4],[-4,10,-5,10,-1,4,-1,-4,3,5,-8,7,-5,7,7,-9],[2,-8,10,-7,-10,5,-7,4,-4,10,-6,-1,-5,10,-10,2],[8,-8,-9,9,5,-3,-4,4,3,-10,-10,-1,-1,-8,10,2],[-3,-6,7,-2,-3,5,-9,5,-3,-5,6,-10,7,-6,2,-4],[-10,7,-10,-8,-3,10,9,8,-10,7,-6,-3,-6,9,8,-3],[6,4,9,8,-4,-6,4,7,4,10,-2,5,3,-8,-7,-9],[-2,-8,-6,5,-5,-7,4,10,7,-9,2,-8,8,-8,-6,-10],[10,9,6,-8,-4,7,8,-5,-9,5,-8,8,9,-3,-1,-3],[-2,-8,6,-7,-2,6,4,-6,-6,4,-6,-10,-8,-9,-5,-1],[5,-5,-9,1,9,-1,1,-3,10,10,2,10,2,-1,2,-6],[-3,-5,-7,4,-6,-8,2,-3,-1,-10,-1,-2,-2,2,5,8]],[[-10,10,1,-3,9,-3,3,3,7,6,6,2,9,9,-3,1],[1,-3,5,1,-5,3,8,-1,-1,-6,-5,4,-4,5,1,-3],[7,-7,9,-6,-10,-6,7,7,6,-7,-2,2,-4,-5,5,7],[3,-4,-2,1,-9,2,6,-6,-3,-1,3,-2,2,-2,-7,-1],[-5,-7,7,-8,-4,-4,8,-1,2,5,-7,10,8,10,-3,8],[-8,-4,2,3,10,8,-5,10,-3,3,-6,3,7,9,-4,7],[-1,-7,2,-1,-7,-4,-8,-10,-1,-2,5,1,7,-1,5,5],[10,-9,3,-7,-8,3,-5,-6,-7,3,2,-6,-4,-3,7,-6],[-9,-1,6,-3,9,10,-8,-2,3,-8,1,-5,1,3,6,-8],[6,-9,9,7,-5,-4,1,9,3,-10,-9,9,-3,-9,4,3],[-9,4,-2,6,10,-2,7,-7,-7,7,2,-10,-10,1,6,-6],[8,-3,-3,-10,8,-3,3,7,7,-10,10,3,8,-4,9,1],[1,8,2,8,1,-7,3,6,8,10,-5,7,-6,8,-4,5],[-3,-1,2,-5,3,7,5,-8,9,-2,1,-8,2,-2,-6,-2]],[[-1,-4,-4,-6,-2,-7,-6,2,2,-2,3,10,9,-2,1,4],[8,-3,-6,3,1,6,4,-5,-2,-9,-10,-2,3,1,-7,5],[2,10,-6,7,3,-7,3,-1,-10,10,1,8,-6,-9,-4,10],[2,-8,-5,8,-10,2,6,8,6,-7,-2,3,1,-2,-4,-5],[-4,-5,-7,6,-7,-1,-2,10,-7,-8,-1,6,3,-9,2,-3],[6,-5,2,-10,-10,1,-8,-3,-9,3,-10,-2,-8,-9,-6,7],[2,-2,-5,-3,-1,-8,-9,-5,2,8,10,-6,-2,9,9,9],[9,-8,-6,-7,9,-8,-8,7,-3,-3,-5,-1,4,-5,5,-8],[7,-9,9,10,3,6,-2,-1,-6,-8,-3,-7,1,2,10,-2],[-6,-10,7,4,-1,-3,-1,-8,1,7,-6,-3,-8,5,-4,5],[-8,-8,-8,-8,1,1,-8,-9,6,-2,-2,-1,1,10,-5,-9],[1,-9,-8,-7,-8,10,-7,6,-7,-8,-5,-9,7,2,-4,4],[-6,4,1,2,-10,-5,3,10,2,-7,7,1,-5,5,-6,5],[-3,8,2,1,-4,7,-10,7,5,8,2,-3,4,6,-6,-4]],[[2,2,1,4,-2,5,9,5,-8,3,2,-6,-5,-6,5,-1],[1,-1,-7,-2,-9,2,-10,2,-9,7,3,8,8,-3,4,-2],[-7,9,-9,4,7,5,-4,5,-4,-5,-6,6,-6,8,3,5],[4,-6,5,10,10,9,-4,7,7,-6,-4,-8,1,10,-8,8],[9,5,-5,-5,-4,-9,9,6,-2,10,5,6,-5,-4,1,5],[5,5,-6,-5,7,9,-3,-5,-9,1,-4,-2,1,-4,-7,4],[10,3,2,-6,-3,-6,-4,-1,5,-7,-7,7,-6,-2,-1,-6],[-8,7,-7,8,2,8,6,-8,-3,1,5,-2,1,5,-2,3],[2,-7,-6,10,-10,3,2,-8,-8,7,-9,6,2,-3,4,4],[7,4,-8,-9,-7,-6,-6,3,5,9,8,-5,-9,-7,-4,9],[-2,-3,1,9,-6,6,1,-8,-9,2,2,-2,-6,4,-7,9],[9,-10,-6,8,-5,-4,2,-5,-8,-2,6,1,-10,2,-1,-9],[-3,-1,-9,10,1,-10,-7,8,4,4,-4,2,2,-5,4,-3],[4,-5,3,7,-1,-1,-2,4,10,5,-4,2,-10,-9,3,-3]],[[-8,-10,-6,-8,-1,-5,-9,10,6,-5,-4,-6,-4,-1,9,-1],[-4,9,-7,-7,6,-3,1,-2,1,-7,4,1,10,-2,8,7],[6,2,-3,-4,-10,-1,10,-10,-3,-8,-2,-5,-3,-3,-4,-2],[6,-6,2,-7,-6,-5,-4,-7,-2,3,4,-8,5,-7,-2,1],[-3,-7,4,-9,-2,7,9,-2,1,-7,-1,1,6,7,6,-8],[-5,-6,-8,-1,9,-6,-4,-3,2,-1,5,-3,9,-1,-9,4],[1,-7,4,1,8,4,-6,8,-7,4,-10,-4,-6,3,-1,1],[6,-3,6,6,3,-7,-8,-8,-3,-8,-7,3,7,-1,5,-2],[-10,3,-3,9,10,-5,-10,-5,5,-9,8,-8,-7,3,10,5],[4,-5,7,-1,1,-5,-10,7,6,8,5,-6,6,8,-9,-6],[-1,10,-9,4,8,3,2,3,-4,-9,-8,5,6,-10,6,-8],[10,-4,-8,1,10,3,-1,-7,9,8,-10,-1,-6,-3,-8,-9],[6,7,2,9,-1,-3,1,1,-5,-5,-2,3,-9,10,5,6],[-3,-7,-3,8,-1,8,10,-1,-6,9,-5,6,9,1,-5,7]],[[-10,-6,3,6,-4,7,2,6,6,-6,8,-5,7,-10,1,-2],[-4,-5,-2,-4,-5,-8,-8,-9,-10,5,6,-4,6,-5,1,-9],[6,3,-6,4,-7,10,-7,-2,-3,-4,7,-4,-9,-9,8,5],[-3,-4,5,-10,-8,-8,1,-1,-6,-5,-2,5,8,4,-3,2],[9,-5,-1,5,-7,-6,2,3,4,-1,5,-10,2,-8,6,3],[5,-10,-2,8,7,-8,-1,6,-8,-2,3,-5,9,-9,5,-8],[9,7,-2,-3,-6,9,3,-5,-2,-4,-10,-1,-4,1,2,2],[-9,7,3,-4,2,-8,-1,-5,-1,-10,-10,9,-1,5,-4,-9],[5,6,-7,-9,-4,-5,2,-7,-1,-4,-8,-2,5,-2,-4,2],[6,-7,8,1,3,-8,8,-5,-4,7,-2,-1,-8,-6,6,2],[-7,5,5,1,4,2,-5,-8,-8,1,5,8,8,6,3,-8],[-4,-8,-10,6,8,-5,-5,-2,-9,-2,8,6,6,-10,9,-1],[-10,4,8,6,-8,-9,-4,-5,-5,-7,-8,8,6,-3,7,-8],[3,-9,-1,-6,-3,-1,7,2,-6,-6,-2,8,-4,1,-5,8]],[[-10,-8,1,-10,-1,3,-9,-2,2,7,4,-3,8,-2,4,2],[7,5,-8,-2,5,6,8,7,8,7,-3,10,4,-6,-2,-4],[-10,6,-5,-6,-4,4,-4,6,-9,2,3,3,4,8,10,4],[1,10,2,6,-10,-10,3,4,8,4,-10,1,-8,9,-10,-2],[6,-9,-7,4,7,-2,1,4,4,3,7,-7,2,5,-2,3],[8,-6,-6,10,6,6,10,7,8,-7,3,-9,1,-6,-2,10],[-2,-3,-7,-4,7,-10,-7,-10,-6,-9,-10,-3,4,-1,-8,-4],[-7,1,-2,-7,-4,-7,-4,8,-1,-9,5,9,9,4,2,10],[-7,-5,5,-9,1,-9,-10,-4,-2,-1,3,6,3,-3,-8,-6],[3,7,5,4,1,-10,-10,5,7,1,-9,4,-7,-8,-10,-1],[8,-1,-3,1,-10,-8,-5,-4,-10,-2,2,-10,5,-3,4,7],[3,7,5,-3,-8,7,3,-6,8,1,-6,-10,-8,-3,8,-6],[-10,-6,-2,-3,-9,6,4,6,-1,-6,9,5,9,-2,10,8],[1,-8,-3,5,-1,-6,2,9,-1,8,10,-7,-3,-8,7,4]],[[9,2,1,8,8,-9,5,6,4,6,-9,-7,-10,-3,10,-4],[9,5,-3,4,-6,-2,2,7,-1,-3,3,-3,4,1,-5,-5],[3,6,2,7,-4,8,-6,3,-7,-10,-8,-7,-8,8,-5,8],[4,2,-4,3,8,4,-8,3,-5,8,-5,6,3,-7,-7,-6],[6,7,7,-8,3,8,8,9,-6,7,-1,-7,6,-5,-8,4],[-7,6,4,8,5,-1,1,10,-6,-1,1,3,1,-10,9,2],[6,-1,-3,8,-8,3,-10,7,10,-4,5,8,-7,4,4,-3],[6,-3,-4,-9,1,-2,-4,6,8,-7,-7,-10,5,2,1,-4],[-9,6,-7,6,6,8,8,6,-3,-8,9,-7,-1,8,4,9],[-6,-7,-1,-2,2,8,5,5,-8,10,-2,-6,6,4,-5,-1],[9,5,-4,6,-8,-5,8,-2,-4,6,9,-8,-5,5,9,-2],[-6,8,-5,-8,-1,-7,-5,-7,-1,-5,-6,-7,9,-2,8,7],[-10,-5,-1,9,6,-3,5,9,5,-10,9,4,9,-6,-10,10],[8,-7,8,1,2,-4,5,4,-7,1,-2,-6,10,8,3,-2]],[[-3,9,4,5,5,-2,-3,8,-1,-8,3,3,-5,3,-9,8],[5,3,-9,-5,10,-5,-4,-2,4,-9,5,-10,3,8,-10,5],[-4,-7,9,-7,9,-1,-5,-7,5,5,10,-10,-9,-6,-7,-6],[-1,3,-5,10,-10,-9,8,-5,-4,4,-6,-8,5,5,6,2],[-6,-9,3,7,4,2,1,-4,-8,8,3,10,-9,9,-10,-3],[3,-9,3,2,1,-7,9,-7,8,-2,1,-8,-9,-6,-5,5],[-2,4,10,3,10,-4,-1,-8,8,3,-4,-2,7,3,-8,2],[3,-5,4,4,8,-2,9,-2,-2,8,6,-2,-9,-7,-3,7],[6,9,-2,5,1,10,9,-10,-7,-8,10,7,3,8,-4,-4],[-9,-2,7,10,5,9,4,-7,-8,5,5,7,6,5,-2,-2],[-3,-3,-2,-8,5,-4,-7,-1,6,-4,7,-8,-9,-5,-4,-4],[-1,-7,10,-3,3,3,8,8,9,2,3,1,5,-3,-4,5],[-1,-10,8,-7,3,-4,5,5,-1,-2,-9,4,-10,2,-1,-1],[9,-7,-7,7,-4,10,-10,3,-2,-6,9,-4,9,5,2,4]],[[7,6,6,3,6,-9,-8,10,9,-10,7,9,9,6,2,-1],[-3,-3,2,-7,9,7,-10,9,4,-8,-5,-7,-3,-6,-4,3],[7,6,-2,-10,-1,-10,3,-10,1,7,7,10,8,-6,-6,10],[5,-3,-1,1,9,2,-3,8,-2,-1,9,-2,9,9,-9,9],[7,2,-6,-1,-4,-8,7,10,2,-2,-3,8,-2,-9,8,-6],[9,-4,-1,-1,-9,-2,6,-10,5,9,-6,-2,-4,9,9,8],[3,7,10,-1,-9,-7,-6,3,-7,-9,-9,-1,-4,-6,8,-2],[-9,-7,7,6,-10,10,10,-7,-6,-9,-9,-6,3,-5,8,-1],[6,-4,5,-8,-4,9,2,8,2,10,10,-4,10,3,7,-4],[4,-8,9,4,-4,7,10,-3,5,-4,1,-7,9,10,-5,-1],[-4,10,4,-7,8,4,9,2,1,10,-6,-5,-6,1,1,4],[2,7,9,-6,-7,-7,-8,-4,-5,-4,-9,5,6,-1,-1,-10],[-7,9,-4,5,5,-10,10,-5,6,5,-8,5,8,9,-8,-2],[-10,3,8,-5,-9,-8,-9,-4,-10,-4,-1,2,-2,-1,-2,5]],[[6,5,-5,8,5,5,-9,-3,-7,-9,4,10,-2,6,3,-5],[-1,-6,-1,2,-2,-2,-3,-2,-1,-1,-4,-3,-1,10,10,5],[-8,-8,5,6,5,8,4,10,-3,-10,-1,3,2,6,-3,-3],[-1,-1,-3,4,5,-7,4,-4,-10,3,-7,-5,-2,-1,3,-5],[9,1,-2,-9,8,6,5,8,2,9,8,10,-5,6,-7,2],[-6,7,1,5,-1,-1,8,-2,-1,-2,4,-10,3,9,-6,7],[8,-9,1,8,4,-10,7,5,-4,-8,8,-9,1,-4,-3,-8],[-6,-7,3,-1,-5,9,3,-1,-10,-5,-4,-3,6,-3,-10,-7],[-9,5,10,-7,5,8,-10,4,5,-2,8,5,3,-3,8,-1],[-6,7,10,-2,9,-4,-6,-1,-10,1,6,-1,3,-4,-6,6],[-9,10,6,-6,-2,4,-1,-1,7,8,-8,-4,7,-2,3,4],[10,5,6,10,4,-5,2,5,-8,3,-3,6,7,2,-5,-5],[-10,10,-4,1,-8,-10,-2,10,-7,5,1,2,1,-1,-2,-3],[9,-10,8,8,10,6,2,-2,-10,10,2,1,-10,2,-1,6]],[[-8,2,10,4,7,-3,-8,9,-6,9,-5,-3,-3,8,-10,3],[-3,-6,4,-4,-1,-3,4,7,2,-7,-6,-3,5,-4,-8,-7],[-3,-5,-2,-9,7,-2,-3,10,2,-4,10,-9,1,-4,-2,9],[3,-2,2,-7,-1,-10,7,10,1,-2,-3,8,4,-2,-10,-2],[2,7,5,-5,-7,1,-8,5,-8,10,8,7,7,-10,10,-1],[6,-8,-4,-7,9,4,10,-7,-6,10,-5,10,6,-1,4,9],[-10,2,2,-6,9,10,-9,8,4,-3,-4,-2,-3,-7,7,-8],[2,4,9,-7,-7,-6,4,6,-3,-8,2,-7,5,1,-9,2],[8,7,5,4,9,-10,5,2,5,-4,1,1,5,-9,-10,8],[-8,-5,-9,5,-10,-2,1,10,-3,2,-6,-10,-4,9,-2,3],[-2,-1,9,10,10,-4,-7,8,1,-3,-2,9,-4,1,-5,-7],[7,1,-5,5,4,-8,-6,-10,6,-3,8,4,2,9,-4,-6],[4,6,10,-3,-3,-5,7,5,1,-2,3,3,5,-5,-6,-9],[10,-8,-9,5,5,-10,-7,8,6,-9,7,-4,-3,3,-2,10]],[[10,-2,-2,-2,7,9,-8,4,-6,2,-6,-8,-5,-8,3,-9],[-5,-3,-8,-4,-6,10,8,7,8,9,-8,-3,-10,-2,-7,8],[-3,-3,-4,5,7,-6,-1,1,4,3,9,-5,-5,1,-7,7],[10,1,6,3,-3,-10,-4,4,-5,10,-5,2,-3,5,4,1],[2,7,10,-3,1,-9,-6,-4,2,-4,10,-8,-3,-2,4,2],[-5,-6,-10,-10,-2,-7,2,9,5,10,9,6,-10,8,4,-2],[8,-6,6,-1,-2,9,2,-7,-9,-2,-6,10,-9,-10,8,-1],[-9,-7,2,-5,8,10,10,-7,-8,-9,5,10,10,6,3,6],[-8,-9,1,-9,-8,9,8,-10,2,1,-9,-3,3,8,-1,-8],[-5,1,10,7,9,-7,9,-3,7,10,5,6,7,3,-6,6],[7,9,7,5,-1,5,2,-3,-2,-4,8,-6,-1,2,-2,-3],[8,-6,10,-3,6,1,3,-6,8,-3,-1,1,10,1,4,2],[-6,6,-10,6,-6,7,-2,-6,4,-9,2,6,5,-5,3,-10],[-4,4,-7,3,7,5,-2,2,-4,-10,2,8,7,-8,-1,-9]],[[7,2,-4,-7,4,4,5,-3,-8,-5,2,10,7,10,-8,-4],[2,9,10,9,-8,-1,1,-3,-8,1,-2,-9,-1,-6,6,4],[-5,-6,-8,8,-9,2,4,9,2,1,-3,2,9,-2,9,5],[-10,-8,7,6,-6,8,-4,1,6,-1,-4,2,-2,-8,-2,-4],[3,1,-9,-8,7,-6,-10,8,-10,-7,-1,-8,3,1,-9,6],[-6,-2,7,-9,-3,-5,1,2,-2,8,6,-4,1,4,2,-10],[8,5,-3,10,-1,-10,8,-6,1,-4,9,5,5,8,1,8],[-3,5,-7,-1,-1,3,-2,-2,2,-9,-3,-2,4,-8,9,4],[-10,7,5,-8,-10,-6,9,-7,-3,3,-1,-6,5,1,3,10],[-8,1,-7,-2,9,9,-7,10,-3,5,9,10,-9,-2,10,-4],[-8,-2,5,10,-1,3,-7,7,7,3,-5,-10,6,7,-3,-2],[9,4,7,7,6,5,2,-1,-6,-4,7,-5,5,1,-4,-9],[-9,4,-8,6,-2,5,-5,-4,-3,1,-2,5,8,-7,8,-5],[8,5,-4,-10,-3,10,-3,8,5,-8,-6,6,8,8,1,3]]], dtype = "uint64")#candidate|4872|(14, 14, 16)|const|uint64
bop_4873 = relay.greater_equal(call_4839.astype('bool'), relay.reshape(const_4872.astype('bool'), relay.shape_of(call_4839))) # shape=(14, 14, 16)
bop_4876 = relay.greater_equal(call_4840.astype('bool'), relay.reshape(const_4872.astype('bool'), relay.shape_of(call_4840))) # shape=(14, 14, 16)
output = relay.Tuple([call_4827,call_4836,var_4837,call_4850,var_4851,call_4853,call_4857,bop_4873,])
output2 = relay.Tuple([call_4828,call_4838,var_4837,call_4852,var_4851,call_4854,call_4858,bop_4876,])
func_4878 = relay.Function([var_4837,var_4851,], output)
mod['func_4878'] = func_4878
mod = relay.transform.InferType()(mod)
mutated_mod['func_4878'] = func_4878
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4878_call = mutated_mod.get_global_var('func_4878')
var_4880 = relay.var("var_4880", dtype = "int8", shape = (120, 2))#candidate|4880|(120, 2)|var|int8
var_4881 = relay.var("var_4881", dtype = "float32", shape = (120,))#candidate|4881|(120,)|var|float32
call_4879 = func_4878_call(var_4880,var_4881,)
output = call_4879
func_4882 = relay.Function([var_4880,var_4881,], output)
mutated_mod['func_4882'] = func_4882
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2412_call = mod.get_global_var('func_2412')
func_2414_call = mutated_mod.get_global_var('func_2414')
call_4928 = relay.TupleGetItem(func_2412_call(), 0)
call_4929 = relay.TupleGetItem(func_2414_call(), 0)
func_3601_call = mod.get_global_var('func_3601')
func_3603_call = mutated_mod.get_global_var('func_3603')
call_4936 = relay.TupleGetItem(func_3601_call(), 0)
call_4937 = relay.TupleGetItem(func_3603_call(), 0)
var_4962 = relay.var("var_4962", dtype = "uint64", shape = (14, 14, 16))#candidate|4962|(14, 14, 16)|var|uint64
bop_4963 = relay.power(call_4936.astype('float64'), relay.reshape(var_4962.astype('float64'), relay.shape_of(call_4936))) # shape=(14, 14, 16)
bop_4966 = relay.power(call_4937.astype('float64'), relay.reshape(var_4962.astype('float64'), relay.shape_of(call_4937))) # shape=(14, 14, 16)
output = relay.Tuple([call_4928,bop_4963,])
output2 = relay.Tuple([call_4929,bop_4966,])
func_4969 = relay.Function([var_4962,], output)
mod['func_4969'] = func_4969
mod = relay.transform.InferType()(mod)
var_4970 = relay.var("var_4970", dtype = "uint64", shape = (14, 14, 16))#candidate|4970|(14, 14, 16)|var|uint64
output = func_4969(var_4970)
func_4971 = relay.Function([var_4970], output)
mutated_mod['func_4971'] = func_4971
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2814_call = mod.get_global_var('func_2814')
func_2815_call = mutated_mod.get_global_var('func_2815')
call_5045 = func_2814_call()
call_5046 = func_2814_call()
output = relay.Tuple([call_5045,])
output2 = relay.Tuple([call_5046,])
func_5053 = relay.Function([], output)
mod['func_5053'] = func_5053
mod = relay.transform.InferType()(mod)
output = func_5053()
func_5054 = relay.Function([], output)
mutated_mod['func_5054'] = func_5054
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2338_call = mod.get_global_var('func_2338')
func_2340_call = mutated_mod.get_global_var('func_2340')
call_5098 = relay.TupleGetItem(func_2338_call(), 1)
call_5099 = relay.TupleGetItem(func_2340_call(), 1)
const_5111 = relay.const([[[-7,2,-7,-5,8,2,6,7,4,-2,-4,10,-10,-5,-6,-10],[-8,-3,9,-7,-6,3,8,-3,-7,-3,-10,10,-10,4,2,10],[-8,4,-3,-6,-1,-10,-10,1,-8,8,-7,-9,-7,-2,-8,-10],[5,6,6,-6,1,-8,-1,-8,-3,-8,-7,9,1,-3,-6,-7],[-7,-1,-5,2,5,8,-8,6,5,6,-4,-5,8,5,-3,7],[7,2,4,-9,3,6,6,-7,-7,-2,-9,7,-9,3,5,1],[-7,4,-9,4,-2,7,4,10,8,4,3,5,2,-3,8,-8],[8,-8,-7,-3,5,-9,-4,10,-1,7,4,5,10,2,3,-2],[-4,-10,-5,1,2,6,-9,8,-1,-3,9,-10,7,6,3,-10],[10,-7,-4,-6,-8,-2,1,8,-5,6,10,-2,9,6,-5,1],[8,-2,-8,-9,-1,3,1,3,-2,-9,-6,-9,6,-8,-2,6],[-7,-4,-7,1,-4,-7,8,10,-10,4,7,-10,1,-3,7,4],[-10,-8,1,-2,-6,7,-2,5,5,5,-5,4,2,-10,1,-4],[-2,7,-2,8,1,-1,4,2,-5,1,3,-5,-7,6,9,-8]],[[-2,8,-7,3,4,10,10,-5,-10,-5,4,-9,-5,6,7,-8],[-2,-3,1,-6,10,2,9,-6,-6,3,1,8,9,3,-1,-4],[-5,1,-5,-2,-2,-4,4,9,1,7,-5,1,2,-9,4,5],[2,-7,2,1,-6,4,-7,9,6,-3,4,5,7,-6,-9,10],[6,8,9,-3,-6,-4,-3,-2,-10,9,8,-9,-8,-6,7,-8],[-5,2,-6,8,3,5,-6,4,-2,9,7,-7,-2,-1,10,3],[-6,7,9,1,7,9,-3,-7,-6,-4,-6,-9,3,9,-9,-7],[7,-6,9,-8,5,8,-10,2,-3,10,-9,-10,-9,6,-1,-5],[-8,5,-8,2,2,-1,6,8,-2,-1,-7,3,-1,-6,-1,3],[9,5,-10,-1,8,7,-7,-3,3,-8,-6,8,10,-2,-2,10],[-10,1,3,-4,-5,-5,6,-1,-2,1,10,5,-3,10,-9,-1],[7,-1,-5,3,6,4,6,2,4,5,-7,3,7,-9,6,-5],[1,5,-1,-8,8,2,7,3,-9,5,-1,8,-4,4,7,4],[5,6,8,4,7,-2,-10,-8,-5,9,-3,-4,3,8,-7,-8]],[[2,8,-9,7,-8,2,4,-1,3,5,-6,-5,-8,7,-3,-6],[10,-6,8,-6,-2,6,-10,-7,6,1,2,9,6,3,-2,6],[-5,-10,6,9,6,-6,-4,-9,4,2,-5,7,-10,1,-1,3],[-9,-9,1,-5,-5,5,-1,-10,6,2,-5,-1,9,-7,2,6],[-5,8,-5,4,3,7,-4,10,9,1,1,8,-7,10,-5,1],[-5,5,-2,-8,-6,9,-4,-2,-9,8,5,1,1,9,10,-7],[9,-5,-10,-5,9,-8,1,7,-3,1,1,9,-3,-9,10,-10],[-5,-9,-9,3,6,-3,1,8,-3,1,-1,5,1,-9,-7,10],[-7,8,3,3,3,6,-6,-6,-3,2,-7,8,-8,-7,-7,8],[5,-9,9,8,10,4,8,4,8,3,-10,3,7,4,8,7],[9,-2,10,10,3,3,-5,3,10,9,9,9,-6,10,-4,-7],[-5,-1,10,2,-7,-7,3,-6,-9,4,-10,2,5,-8,-10,-3],[-8,9,-8,-3,7,5,-1,-4,9,6,2,-3,-3,5,-10,8],[5,-5,-8,7,-8,5,5,-10,9,2,-8,-6,8,4,-4,-5]],[[10,1,6,-3,-10,6,10,-10,5,-8,-8,4,10,5,10,2],[-8,8,-10,-10,3,-8,3,-2,9,-1,-6,5,3,-9,-8,5],[-3,3,5,-6,1,-1,-9,1,3,-6,-9,7,1,-6,-9,6],[-3,-7,-2,7,4,-8,-1,2,-2,-4,-1,2,-7,10,9,-7],[-7,-9,5,2,3,6,-10,-7,9,3,2,-2,4,-4,2,-5],[6,-5,1,-2,-9,10,9,2,-9,-7,-10,2,5,-9,7,-3],[10,-4,7,-7,6,-6,5,2,2,-6,10,-8,-4,-1,3,-2],[4,-3,-5,9,-8,-8,-4,-8,10,1,-4,7,10,-6,4,5],[7,-10,10,6,8,-2,4,9,8,6,-10,7,-4,2,-3,7],[7,-2,9,-9,-2,9,5,-2,9,2,-2,1,1,4,-10,-4],[10,-8,-6,6,-7,5,-5,4,6,7,-4,6,10,1,-2,-1],[-3,-9,-3,8,-2,-4,2,4,6,6,8,7,-1,-9,7,3],[-8,-10,1,-3,-5,-1,6,4,7,-2,-1,4,-1,-7,5,-10],[-4,4,-10,-8,7,-1,7,7,-5,-8,9,-2,-8,-1,-7,-6]],[[1,6,-10,-8,4,-9,5,4,4,8,-7,-8,-9,8,7,-9],[-3,-2,9,-9,9,5,-6,6,2,-7,-6,2,1,-1,3,1],[-3,10,-2,7,8,5,-3,-6,-5,-4,6,-4,5,7,3,7],[-10,-10,-5,-4,-2,-9,-10,-8,5,-5,7,8,-7,3,3,-8],[4,-7,-8,3,2,3,-6,8,-2,-2,6,-4,-5,3,-4,10],[10,8,-8,7,5,-3,-2,2,-6,6,4,-3,4,8,-6,7],[-8,5,8,-8,-4,5,10,2,6,7,6,1,-5,-10,-7,-10],[-2,1,-9,-4,-7,-8,10,4,8,4,-1,-7,-3,-9,2,3],[4,-3,-10,5,5,6,-3,-9,-2,-8,9,-1,-10,3,10,5],[10,7,4,9,3,-5,8,1,9,4,3,-2,-4,5,1,-9],[8,2,6,-1,9,-9,-10,-6,8,-10,-3,-3,5,2,2,6],[-7,-3,-10,-6,-10,5,-5,-2,-10,3,-3,2,-8,6,8,-9],[-2,10,7,-10,-10,9,-5,8,3,9,-10,8,7,-8,-7,10],[1,9,5,-7,4,8,-6,3,8,7,-4,7,-10,6,6,-7]],[[5,5,7,5,-9,-9,1,-6,5,-8,10,-10,-2,8,-2,5],[2,9,3,9,9,6,-3,9,-8,6,-2,-10,3,-2,-2,-4],[6,-4,-9,10,-2,-8,-1,-4,5,8,-8,-4,6,-10,3,-5],[-9,-10,1,-8,8,-9,-4,9,4,-9,-8,5,-8,-6,-9,10],[7,8,-9,10,-2,-8,3,8,-9,-2,-9,-4,-2,-8,9,-10],[-9,6,-5,-7,7,-3,-7,10,7,6,8,5,-10,4,-2,-8],[3,10,10,2,7,10,8,3,-1,-5,8,-3,-4,8,9,8],[-7,9,10,-7,-9,-4,-6,-4,5,-9,9,9,-7,1,10,8],[-2,7,10,-10,2,8,10,-6,-3,-5,-5,8,-3,7,-2,3],[6,5,-5,-5,-8,4,6,2,4,-4,4,-2,2,-2,-6,6],[6,-8,-6,-7,-5,-2,-2,-10,2,7,5,2,-1,-2,9,9],[-1,8,1,4,10,-6,-10,1,2,9,7,7,-6,-7,8,4],[-4,-7,-10,10,6,-2,-4,-10,1,6,-1,-8,-1,-5,10,8],[-10,6,7,9,1,2,2,-2,1,1,-10,-10,3,-9,3,-4]],[[4,4,-5,5,-4,-3,-8,9,2,1,10,-4,7,3,-5,-6],[8,-10,-4,-1,1,5,9,-7,8,5,-9,9,6,-7,-1,-8],[4,-4,-3,7,6,-3,9,-8,-10,-3,5,7,7,10,9,-9],[-8,-3,7,-6,3,-10,9,-7,2,-8,-5,-6,-10,-2,-8,4],[-3,8,-5,3,-4,-10,10,10,1,-8,-4,9,-3,-3,-2,-7],[-1,5,1,-6,2,8,5,-5,-7,-3,7,2,-4,3,1,-1],[6,8,3,-2,2,-8,-7,5,5,-4,-1,6,-1,-9,8,-5],[-5,4,9,-6,8,-9,-6,9,-2,8,9,-7,3,-5,8,-9],[-4,-3,-1,-5,-3,-3,9,-2,5,2,-4,-6,-7,-9,-10,-7],[3,7,-9,2,9,2,-7,6,-6,8,9,8,3,-10,8,-7],[-7,5,-9,7,10,5,-4,9,-1,-10,1,8,-7,-8,4,-6],[-2,-7,5,10,-5,-5,7,-9,-1,1,-8,7,-7,-10,2,2],[-6,6,4,9,2,8,-7,2,-7,1,1,-3,-3,-9,-1,-9],[-1,8,-3,-5,-10,8,2,-5,-2,6,-2,-4,-4,-10,-6,-9]],[[3,4,-6,-5,-4,2,-1,-6,-3,6,3,-4,3,-1,-2,7],[10,3,10,2,9,1,3,2,-10,-5,6,-2,-1,7,-5,-1],[6,3,-2,-2,-9,2,10,9,-2,-5,-2,-9,-1,-6,-3,-3],[3,-6,9,5,-3,-9,10,-5,10,3,8,-5,-10,-5,-2,-3],[4,-7,9,10,-10,7,9,-4,-1,-3,1,-9,-2,4,-5,-6],[-8,2,6,1,5,6,9,2,-9,10,4,-10,4,-10,-1,-7],[-9,6,3,1,-7,-9,-9,6,-10,7,-4,10,-3,8,-7,4],[-4,-1,-10,-4,-9,1,5,-7,4,9,-3,9,-1,9,-1,-6],[-5,-3,-3,-2,-9,-2,2,9,3,5,1,1,10,2,5,6],[8,5,-6,4,9,10,-5,-7,-1,4,8,-3,-7,10,4,-2],[-7,2,1,1,-1,-1,-3,5,-3,-5,-4,9,-3,3,-9,8],[1,3,7,4,-4,4,-5,1,-8,9,3,5,-1,5,-3,-9],[-4,-8,4,-9,-9,6,-4,2,-1,7,-2,-2,-1,4,10,8],[-4,7,8,-8,10,3,-9,9,-7,-6,7,4,6,1,1,-2]],[[-8,5,-6,5,5,2,-2,-5,-7,9,-10,-3,-1,4,6,7],[6,9,4,-10,1,-4,4,3,-10,-7,-7,9,-7,-10,-3,-6],[-10,3,-1,5,-6,9,8,-1,-6,1,1,1,-6,-10,9,-10],[-2,-7,5,-9,10,-10,9,1,2,-9,3,-10,1,10,7,-3],[2,-4,-1,-9,-10,-1,2,4,-3,8,3,9,-1,5,6,9],[-5,6,-5,-9,5,3,2,-5,8,-5,5,-6,10,4,-9,-5],[-5,2,-7,6,1,-3,-7,-9,2,-8,7,-3,3,-6,-10,7],[-3,9,10,-6,-5,3,7,-6,10,-8,-6,-6,10,-1,5,8],[-9,-10,2,-9,4,8,-5,-4,6,2,3,-1,1,5,-4,-6],[2,3,1,-3,-5,10,-3,7,-6,-1,10,-4,-8,9,-4,6],[-10,-1,2,-9,5,8,-2,7,-7,-9,-2,8,-1,-3,-1,-10],[7,-3,5,7,9,-6,-2,1,3,6,2,-7,-2,-6,9,-5],[5,-7,-10,-8,10,2,-1,3,4,1,-5,6,1,2,6,-6],[7,-3,8,8,9,1,-4,4,-4,-1,-5,6,-9,-8,8,-7]],[[-9,-4,2,-6,3,-1,-2,6,-1,-4,-3,4,9,-8,8,-3],[-6,4,2,-10,-9,-3,-7,-6,-5,-7,-1,2,-5,-8,-8,7],[-2,3,-3,7,8,-3,-9,3,9,4,-3,1,-7,-8,-2,8],[-10,-5,7,-2,-4,-10,-4,-6,-5,5,7,5,-5,-10,9,-8],[-10,-1,7,-4,10,3,-8,-9,1,10,-1,3,-7,-2,2,7],[-3,1,-2,10,-10,8,-5,-9,-2,-6,2,-9,-2,-7,-9,6],[-3,-3,-3,-8,9,9,4,10,-6,9,6,1,6,-4,-4,-10],[-9,-3,9,3,9,2,1,9,10,9,5,6,8,10,-10,1],[5,-2,-9,-2,9,2,-8,1,-9,4,10,7,1,2,-8,-1],[-8,7,9,6,1,-10,-8,-7,-1,3,4,-1,-9,-6,-7,10],[-1,-5,-4,10,10,6,-3,7,5,-7,-1,-4,3,-7,-1,10],[-4,4,-7,-5,4,-4,-6,1,2,2,6,6,-6,-2,2,8],[-6,-5,-7,-9,-4,8,-6,3,6,-3,-9,-4,4,3,7,-3],[6,-7,10,5,-10,4,-1,6,-2,2,10,8,1,1,7,-10]],[[-9,7,4,3,-5,10,6,5,-4,1,2,-9,5,2,1,-6],[-10,2,-4,-6,6,7,1,-1,-1,-9,4,-8,8,-10,2,3],[-8,4,4,3,5,3,3,10,-8,9,-9,-4,8,9,-1,-2],[9,-3,7,4,-7,9,-3,-4,-2,-7,-1,-9,5,9,-4,3],[8,-8,-3,10,-9,9,-1,-3,9,3,8,-9,2,7,10,1],[9,6,10,-1,6,-1,5,10,-3,-4,-5,-6,-2,4,4,-1],[-3,-4,-2,3,4,-6,9,5,-9,7,-1,-2,5,-4,-1,3],[-9,-10,1,-2,9,-6,-4,-2,-9,8,1,2,7,-4,-10,-4],[-3,1,-8,-9,-10,7,7,8,10,5,-5,-7,2,1,-10,10],[-1,-7,5,-8,-4,-1,-8,-6,-7,10,-7,-6,-10,-10,4,-6],[-2,-4,3,-2,-8,-8,3,5,-5,2,3,1,-5,-8,9,-3],[-6,-8,8,-6,4,-5,9,5,-4,-6,-4,-4,7,7,-3,9],[-7,2,6,6,-3,-6,-8,6,9,2,-8,2,6,1,2,-3],[-6,6,3,3,10,10,-2,3,8,-5,-10,4,-6,9,7,-7]],[[-7,9,5,-9,3,7,4,7,3,-10,8,-3,1,4,-6,-2],[-6,-4,-3,7,2,9,4,-8,9,4,-4,-2,8,2,7,-6],[3,5,5,-9,-8,3,-8,10,10,3,-8,-10,2,-2,-6,-3],[10,-4,-10,4,-3,9,-9,-9,3,-5,-8,9,7,-3,10,9],[-6,7,-7,-5,7,4,-4,-4,-4,8,-4,-5,8,1,4,10],[-6,-7,7,5,-5,-7,-1,-4,2,8,10,-6,-1,-8,10,6],[-4,-6,2,-2,-2,4,2,10,-1,-9,-4,-9,1,-2,5,6],[1,-8,-5,10,1,-9,-3,6,-9,-4,9,8,1,2,5,5],[10,-9,-6,-10,-4,-10,10,-10,1,2,7,2,7,6,-10,10],[-6,4,-7,-7,-5,-7,-2,-6,10,3,-5,7,-8,5,-6,9],[3,4,-10,-10,-9,-2,3,6,-5,1,5,-1,3,-5,1,2],[9,-4,8,-6,1,10,7,7,8,-3,8,-7,1,1,-6,-6],[9,-4,3,6,1,8,-5,-3,5,-3,1,5,2,4,10,-2],[9,8,7,6,1,9,10,-6,-7,9,10,10,1,9,5,2]],[[7,-5,-3,6,6,-9,-5,-1,-7,10,8,9,-3,3,-8,-3],[-3,1,9,2,-3,2,-8,-10,-7,2,10,5,10,3,-2,-4],[5,3,-3,1,-7,-3,10,-2,4,2,-5,-9,-6,-2,-9,3],[2,-7,-10,10,-3,-4,8,8,10,-8,-9,-10,1,1,-8,3],[-10,-4,1,8,9,-5,-8,9,-4,-2,3,-6,-4,4,3,2],[8,-6,4,-2,-5,-9,1,10,-4,8,4,2,3,2,3,-1],[-3,-1,10,7,-10,10,-4,-7,-5,-6,1,9,-5,-1,-6,-1],[-7,4,-8,3,-7,1,3,8,3,9,1,9,8,4,10,2],[10,5,9,7,-10,7,-6,-3,10,-4,-1,-9,-1,-4,-10,8],[-2,-9,-10,-7,5,-6,-1,-10,3,4,-5,5,-5,6,-5,9],[-9,10,-7,10,3,2,8,-4,4,-7,10,6,10,5,8,5],[-4,-7,-4,-4,-6,10,6,5,4,2,3,-3,2,8,-2,7],[8,9,-2,8,7,2,-3,-7,10,-3,9,-7,4,1,10,3],[4,1,-5,4,8,7,-6,10,-6,-10,-1,-6,-4,-2,-4,2]],[[9,4,4,-5,-5,-4,1,-8,1,1,-4,-8,1,3,-6,-3],[-10,-8,6,-5,-8,-3,-4,-5,8,-6,3,3,3,1,-2,-4],[-3,5,4,2,10,2,-6,-9,-2,-9,9,1,7,-1,10,9],[8,3,-3,-5,-10,-9,3,-1,4,-10,-1,7,4,-6,3,-8],[-9,-2,-7,7,3,6,-3,1,-8,-10,-3,-6,5,3,-7,-1],[-5,-3,2,-2,6,-1,8,8,-4,-4,5,7,-3,-8,-5,-1],[1,-3,-3,-10,-6,2,4,9,-6,8,-6,-1,-7,-3,9,-3],[7,-3,-2,3,-3,-1,3,-6,4,2,1,10,4,10,-7,-4],[-8,9,2,-9,7,4,1,-2,-8,-6,-10,6,-2,-9,-9,7],[2,9,-10,-10,10,8,6,8,-6,2,3,-10,-2,3,-2,9],[8,7,-8,-4,3,-10,4,2,2,-6,9,9,-4,5,7,-1],[3,1,-7,10,9,-6,9,10,1,8,1,5,2,-3,-5,-3],[2,-2,9,6,3,10,1,1,8,-4,-9,-6,9,1,4,4],[8,-3,-7,6,3,10,-5,-8,2,-4,2,-1,7,-7,-6,7]]], dtype = "uint64")#candidate|5111|(14, 14, 16)|const|uint64
bop_5112 = relay.floor_divide(call_5098.astype('float64'), relay.reshape(const_5111.astype('float64'), relay.shape_of(call_5098))) # shape=(14, 14, 16)
bop_5115 = relay.floor_divide(call_5099.astype('float64'), relay.reshape(const_5111.astype('float64'), relay.shape_of(call_5099))) # shape=(14, 14, 16)
output = relay.Tuple([bop_5112,])
output2 = relay.Tuple([bop_5115,])
func_5123 = relay.Function([], output)
mod['func_5123'] = func_5123
mod = relay.transform.InferType()(mod)
mutated_mod['func_5123'] = func_5123
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5123_call = mutated_mod.get_global_var('func_5123')
call_5124 = func_5123_call()
output = call_5124
func_5125 = relay.Function([], output)
mutated_mod['func_5125'] = func_5125
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2086_call = mod.get_global_var('func_2086')
func_2088_call = mutated_mod.get_global_var('func_2088')
call_5196 = relay.TupleGetItem(func_2086_call(), 0)
call_5197 = relay.TupleGetItem(func_2088_call(), 0)
uop_5200 = relay.asin(call_5196.astype('float32')) # shape=(14, 14, 16)
uop_5202 = relay.asin(call_5197.astype('float32')) # shape=(14, 14, 16)
output = relay.Tuple([uop_5200,])
output2 = relay.Tuple([uop_5202,])
func_5214 = relay.Function([], output)
mod['func_5214'] = func_5214
mod = relay.transform.InferType()(mod)
mutated_mod['func_5214'] = func_5214
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5214_call = mutated_mod.get_global_var('func_5214')
call_5215 = func_5214_call()
output = call_5215
func_5216 = relay.Function([], output)
mutated_mod['func_5216'] = func_5216
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2823_call = mod.get_global_var('func_2823')
func_2825_call = mutated_mod.get_global_var('func_2825')
call_5240 = relay.TupleGetItem(func_2823_call(), 0)
call_5241 = relay.TupleGetItem(func_2825_call(), 0)
func_89_call = mod.get_global_var('func_89')
func_92_call = mutated_mod.get_global_var('func_92')
var_5249 = relay.var("var_5249", dtype = "int16", shape = (3600,))#candidate|5249|(3600,)|var|int16
call_5248 = func_89_call(relay.reshape(var_5249.astype('int16'), [15, 16, 15]), relay.reshape(var_5249.astype('int16'), [15, 16, 15]), )
call_5250 = func_89_call(relay.reshape(var_5249.astype('int16'), [15, 16, 15]), relay.reshape(var_5249.astype('int16'), [15, 16, 15]), )
output = relay.Tuple([call_5240,call_5248,var_5249,])
output2 = relay.Tuple([call_5241,call_5250,var_5249,])
func_5258 = relay.Function([var_5249,], output)
mod['func_5258'] = func_5258
mod = relay.transform.InferType()(mod)
var_5259 = relay.var("var_5259", dtype = "int16", shape = (3600,))#candidate|5259|(3600,)|var|int16
output = func_5258(var_5259)
func_5260 = relay.Function([var_5259], output)
mutated_mod['func_5260'] = func_5260
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2140_call = mod.get_global_var('func_2140')
func_2142_call = mutated_mod.get_global_var('func_2142')
call_5406 = relay.TupleGetItem(func_2140_call(), 1)
call_5407 = relay.TupleGetItem(func_2142_call(), 1)
const_5413 = relay.const([[[6,-8,1,-4,5,9,1,8,9,-2,-9,-3,8,1,-4,7],[1,7,-9,8,-6,3,-2,3,-4,-6,10,7,3,-1,-3,9],[8,-5,-6,10,-8,1,5,-3,9,-1,9,4,-7,1,7,-3],[5,-1,-9,-4,5,8,1,10,-3,8,10,5,1,5,-5,3],[6,-10,-7,1,2,-4,3,3,-7,-7,5,2,8,-3,8,1],[-10,-9,7,-10,1,2,-8,-9,7,1,8,9,-3,-8,-10,6],[-10,-8,-7,6,2,4,-4,-4,9,-5,9,4,8,-4,1,-10],[-5,9,-7,-1,-4,9,-10,-3,8,-7,-3,10,2,-2,6,-3],[-10,-4,-9,8,-2,3,1,10,-3,-8,-7,-10,4,2,-1,10],[7,-10,1,-2,-6,4,1,7,-10,-2,5,5,-1,-9,2,-6],[5,7,-6,8,4,-9,3,-10,-3,1,-2,9,-3,-8,10,-6],[-1,-1,-4,1,9,4,8,-9,6,-10,4,2,8,4,5,2],[-5,-7,2,-6,7,-6,-3,7,3,-8,9,-6,-1,6,2,-5],[1,-5,-9,-5,-2,3,-4,-7,-10,-5,6,-9,-4,4,-6,-3]],[[1,1,3,-6,7,-2,-2,7,3,-2,-3,-7,-9,-3,10,-2],[-7,10,-9,5,-6,4,-6,-9,-4,10,-5,6,-10,8,6,2],[3,3,8,5,-3,-1,1,-9,-2,-4,-6,2,-9,7,-10,-1],[10,-4,-2,-2,9,5,3,7,-3,-4,-1,-6,-7,-10,-1,-10],[6,9,3,4,-5,4,-3,5,1,-4,8,-5,-4,-1,-7,-7],[-7,1,-10,-3,-4,-4,9,-2,1,-3,7,-3,4,-7,9,3],[2,7,1,-6,-1,3,-2,-8,-10,-9,2,7,7,6,7,1],[3,1,2,-10,-10,10,-7,-2,-1,3,6,-9,3,-9,5,8],[-2,4,8,4,9,9,-4,1,3,-1,4,-2,-5,7,-2,10],[6,7,-9,10,-7,-2,-10,-8,-8,4,9,1,8,4,3,-6],[-7,10,6,-4,1,-3,10,5,-10,-2,-6,1,-8,-6,8,-9],[6,2,1,6,3,-2,1,-1,-8,-10,-5,-6,5,-6,-5,9],[-6,5,9,1,3,5,5,-6,10,-5,6,-9,-5,-5,2,4],[-7,7,-2,-7,6,-8,-9,-1,-10,-3,-8,-7,-7,-7,-10,-7]],[[2,4,4,1,-3,-8,5,1,-8,2,-9,10,3,7,8,10],[-7,6,-6,-3,7,-3,-3,-6,1,6,6,7,5,5,-7,-7],[-9,-8,-1,-8,-4,-9,-5,9,-4,9,-3,1,10,3,-3,4],[3,-9,-4,-3,7,-7,-8,2,3,3,-8,4,-2,-5,-9,-7],[2,-9,4,-7,5,-7,2,6,-1,-9,-5,6,4,-2,-2,-5],[8,3,5,5,3,4,1,9,9,10,-3,-1,10,9,-4,-6],[-10,4,-8,7,1,7,9,4,5,2,-10,6,6,-10,2,3],[-7,-7,-6,-8,-4,-10,10,3,-6,5,9,6,9,-8,-3,10],[7,-7,-2,1,10,10,-5,-7,-1,-9,-8,-8,10,-7,-8,-5],[6,10,-8,3,2,10,-8,10,-3,-2,3,-5,7,-8,-1,-1],[-6,3,4,4,9,5,2,7,-4,6,8,-10,5,1,2,1],[3,-4,9,-2,1,-8,-3,-10,-3,-4,-8,-7,4,-7,1,6],[3,10,-7,2,2,-3,-6,-1,7,-1,4,6,-7,-4,-2,-4],[-10,6,-9,-5,10,-7,1,5,-5,-5,-6,7,-5,-4,5,1]],[[-2,-3,7,3,8,-4,-8,-10,-5,4,-5,5,-5,-8,-6,-4],[-8,-1,-6,4,6,6,-7,7,-1,-1,3,8,-6,-6,7,-3],[8,-2,10,-10,-6,-10,-3,2,7,10,-1,8,5,2,-4,9],[-8,-4,-8,5,-1,6,-2,-9,4,-1,-8,-4,2,6,-10,-6],[7,9,4,-1,8,10,6,3,9,-8,-2,3,-10,-10,4,-1],[3,6,3,-6,-5,-3,8,-2,1,-5,4,-6,6,7,1,-3],[-7,6,8,-10,-10,3,-10,-4,-9,-3,6,-7,7,-4,-1,3],[-6,5,10,-7,10,-6,-7,1,-1,8,6,-2,9,-1,3,-6],[4,-2,-9,-5,-7,3,-5,-1,-1,-6,6,1,-3,8,10,-4],[-7,1,3,9,8,7,6,-10,9,-3,-3,2,9,-4,6,-3],[4,1,7,9,-1,1,-4,-4,6,-8,4,-6,2,1,-8,10],[-6,9,-2,1,5,-3,-2,2,8,8,1,-4,6,8,-8,5],[-1,9,5,1,3,-6,2,-2,7,-4,-6,1,4,5,10,-7],[-6,-6,-8,8,-2,-4,-4,7,-10,2,-9,-5,2,8,2,3]],[[-2,9,-8,1,5,6,-4,3,-4,-10,-5,10,7,-9,3,-8],[-1,-5,6,-10,-3,-10,-9,-3,-7,-10,7,10,-7,-4,-1,5],[9,-4,8,-6,10,8,-1,6,3,2,7,-4,3,3,10,7],[-10,4,2,-8,6,-4,6,-4,-8,-9,-8,-7,4,-4,-10,4],[1,9,-8,8,3,-10,3,-10,-2,-6,-5,-3,7,-3,-8,8],[-5,-3,-3,6,4,-7,-1,8,9,6,-8,-2,8,-1,-2,-8],[-5,-9,-3,-4,-10,3,-1,7,-4,-3,5,7,-3,-2,9,-2],[-10,-3,-4,9,2,-7,1,-1,10,9,-1,9,-7,9,-10,10],[-1,-4,-4,3,2,-6,-6,2,-3,3,9,10,-4,4,1,5],[-9,-9,1,8,1,-10,3,7,5,1,-6,2,3,6,-1,8],[-2,-4,10,-10,-8,-2,-4,-6,-10,5,-2,-6,4,-9,-2,9],[-5,-9,-7,-5,-9,3,-5,4,-7,-1,-7,-4,-8,-8,-1,4],[-1,10,-2,-2,-4,-4,-3,-6,7,-1,-4,-7,-9,3,-3,-5],[-2,2,-4,4,-9,-8,-9,5,2,2,3,10,-6,2,-2,4]],[[4,7,-10,5,-1,2,-7,-8,4,-7,-1,9,-2,9,-9,-5],[10,-10,-2,10,10,-3,-8,6,-3,9,1,-1,6,-4,-4,-8],[2,-3,-7,-8,-4,1,-2,-3,1,-8,7,-5,1,10,2,-10],[-7,9,-5,-8,9,-2,-8,7,7,4,-7,9,-10,-5,-8,-7],[9,9,-4,-4,10,-6,-9,2,10,-1,6,-7,8,9,9,1],[1,-2,10,-9,-2,-1,-8,8,-6,7,7,-8,-7,3,2,-6],[5,-9,-3,-5,3,-5,-6,1,10,-6,3,5,3,-8,1,10],[-1,3,5,-1,4,1,1,-6,9,9,7,2,2,-7,-3,9],[5,-1,9,-1,8,-5,-2,-9,2,-3,-3,-1,6,-8,-6,-4],[-8,-1,7,-10,-4,3,5,-8,-1,5,7,-9,-5,-3,-3,-2],[-4,-9,-7,-5,3,8,1,4,9,7,7,-9,2,-5,-1,-7],[-4,-3,5,-3,-5,6,-6,-7,2,-1,10,3,-3,9,9,-8],[-4,3,8,-10,6,-10,-10,7,3,-1,7,-6,-6,6,-3,-8],[3,10,9,8,-8,8,-7,10,-1,2,-6,-2,-3,10,1,7]],[[-3,-7,7,-8,4,-2,8,-1,-2,-1,-1,-3,-9,4,-10,6],[-8,-6,10,1,-9,-5,5,-8,-10,7,3,-8,10,-4,5,-6],[3,-9,5,7,4,-10,9,-6,-10,10,3,-6,2,-5,-10,-1],[2,-5,1,-2,-3,4,4,-1,-4,-8,1,-10,-5,-9,8,7],[-1,9,-4,6,5,9,9,2,3,10,5,6,-7,-7,6,-6],[-8,-6,8,-2,-2,-10,3,6,-3,9,-10,-10,-9,-1,2,-1],[-4,5,-10,3,-7,5,-7,7,1,2,2,-8,10,7,9,-2],[-4,-3,1,-8,-10,-2,8,-9,-7,10,-2,10,10,-1,5,1],[10,6,3,4,7,-10,-5,-3,7,-2,2,10,9,-2,-7,-4],[9,10,3,5,2,-4,4,9,-1,-2,-3,6,6,-4,10,-1],[7,-3,7,-10,-3,6,-2,-3,-4,-5,-9,-8,-6,7,-10,7],[10,-8,7,-6,2,10,-6,6,-7,-8,-1,-1,-9,-7,9,-8],[3,7,-4,2,4,-2,4,10,-1,10,-5,3,3,10,-1,2],[4,3,2,-8,9,9,-9,7,-7,2,-1,-3,4,-6,-4,10]],[[-8,10,10,6,-7,3,4,-6,8,-5,4,3,5,-2,8,9],[-6,-5,6,-6,-8,10,8,5,3,-6,9,-2,9,-3,7,2],[-10,10,8,-10,-4,8,-4,1,-4,4,-8,-8,-4,5,-1,-7],[-4,9,-4,10,-7,1,3,1,-10,-1,-5,5,-7,1,7,-1],[4,5,-8,5,3,-1,9,-4,-8,7,-3,1,5,2,-9,-5],[4,10,-4,9,2,-6,1,1,-6,-3,5,2,5,1,8,6],[5,6,-10,1,-5,4,-8,5,7,6,1,1,-4,1,-10,8],[4,9,8,-7,-6,9,10,-9,-2,-9,4,1,4,-2,1,-10],[-1,-1,8,2,-1,-7,2,7,10,9,8,2,1,4,3,7],[4,2,5,5,4,-6,9,-2,-1,-5,-10,9,-2,-5,1,-10],[9,-9,8,2,-10,-8,-4,-10,-3,4,-3,-7,9,9,-4,-7],[2,1,1,-10,4,10,2,4,6,-9,2,5,5,-1,2,4],[-3,-4,8,5,-3,1,6,1,5,10,-3,9,8,9,-8,-6],[7,5,-3,9,-5,3,6,-3,3,8,-8,-6,-7,-8,9,5]],[[-1,3,-1,2,-5,-7,-9,3,4,10,10,-8,-10,-1,-8,4],[7,7,-4,-3,-4,-1,1,-6,5,6,-1,-2,9,-1,10,-10],[7,-2,-6,7,5,6,-1,-8,-10,4,9,6,9,-8,-5,5],[-6,10,-4,-6,6,-3,-4,-5,-7,8,7,5,1,7,2,5],[-3,-3,-3,-3,9,-6,-1,9,-2,-4,-1,8,-4,8,-9,5],[-10,-6,-5,4,9,9,2,7,-5,6,-2,9,-9,2,-2,9],[-3,-6,6,-4,-1,4,-9,9,4,1,10,-1,-7,-5,2,-2],[9,-5,8,-1,-10,-4,5,-6,-9,-6,5,5,2,10,6,-9],[9,-1,3,8,6,-4,-7,2,7,4,5,5,-3,-3,8,5],[6,-8,9,-2,-10,-6,9,3,-5,-10,-8,10,-2,10,5,-9],[1,-9,3,-5,-2,-8,-10,8,7,8,5,-5,-2,-6,2,9],[-3,6,-4,9,-4,8,9,1,-6,-1,10,-7,-3,-1,-10,-8],[1,-9,7,-10,6,-4,5,-10,8,-1,9,3,3,-7,-6,-6],[-1,3,-4,8,4,4,1,10,5,-10,-1,6,-8,-5,-10,-5]],[[-5,-8,3,10,7,-7,-7,-8,8,9,-10,1,8,4,8,-8],[8,-3,-1,6,-6,8,10,8,-3,-9,-1,-1,-8,-8,4,1],[-3,1,-9,4,2,9,-8,-1,-5,4,-3,-7,-9,9,-1,3],[7,10,3,-1,7,-8,-10,-6,9,1,2,-5,2,-4,6,-9],[-3,1,2,-2,4,6,9,1,1,-2,-9,-5,10,-4,-7,9],[1,-6,4,3,-8,-3,10,-6,5,3,-4,-5,-8,-1,3,4],[4,6,-10,5,10,6,4,-1,10,3,4,8,-8,-6,-3,-2],[10,4,-8,7,-8,8,-3,-9,4,-6,-9,-10,-7,7,-5,-6],[6,5,8,-2,3,8,-10,8,10,-4,-10,7,9,7,2,10],[-3,4,5,10,7,-3,-9,-2,-6,-10,-9,2,-3,-3,-2,3],[-8,-9,-2,-10,-8,-7,-3,-8,3,5,-6,-1,8,4,-9,-7],[5,-9,-6,-5,1,3,-10,4,8,-7,-10,7,-4,-10,-9,9],[3,-10,-4,-3,-8,-2,-7,4,-8,4,-9,4,2,-6,10,-7],[-3,2,-6,4,-3,-4,3,-8,1,8,2,5,5,7,9,10]],[[10,9,9,2,2,-4,4,-5,-1,4,5,7,3,9,7,3],[-1,5,-8,4,1,-6,-10,-1,-5,6,4,-2,-7,-8,10,4],[-4,3,-6,-3,-7,-5,9,7,10,-4,7,3,6,-10,5,-10],[-5,-2,-4,-1,3,7,1,-3,-7,7,-4,-10,4,-9,-6,-9],[-5,-3,7,9,1,1,10,-4,3,-3,-4,9,2,8,-8,10],[-9,2,8,-5,7,-2,-9,8,-8,9,5,-9,-6,7,-3,9],[10,7,3,1,-7,1,-9,-8,-1,10,-4,2,-5,8,-6,1],[8,-5,3,3,9,6,4,-7,-10,10,6,-8,1,-1,10,-2],[-4,-9,3,5,-7,-3,4,5,-7,-9,-9,3,10,-8,8,9],[6,-6,-10,-4,3,-8,-7,10,10,-6,6,-8,5,-7,5,-4],[-3,-4,3,-10,5,-3,10,6,-3,-8,2,-5,3,10,9,-1],[-4,7,-4,4,-4,-2,10,-6,-10,4,-10,1,-3,3,4,-6],[10,-8,10,-6,10,-1,-7,5,-1,1,8,-7,4,-4,-6,9],[-4,2,2,10,-7,-2,10,-2,-6,4,-7,-4,-3,-1,9,-6]],[[-8,8,-10,2,3,-10,3,6,6,-3,3,6,-6,-8,7,-9],[-4,-7,-7,-2,4,5,-5,-7,3,6,7,-5,-8,-9,4,-2],[-7,5,-9,-6,10,-10,-2,-5,-7,2,-4,-9,7,9,-8,-4],[-1,10,-5,-3,-8,9,10,-5,-9,-2,-2,-5,-9,-2,5,-3],[-4,-6,-1,-5,4,7,10,-2,8,9,-5,1,-9,2,-1,-2],[-9,-6,-7,-7,5,-6,7,3,2,-7,8,-10,3,3,-8,-8],[1,-9,-3,1,2,2,-5,-7,6,-3,-4,-1,6,2,9,3],[4,-10,8,-6,1,2,-2,5,2,4,3,-2,9,3,4,8],[7,6,1,6,9,-10,-6,10,-2,-4,10,-6,-2,7,-6,-3],[-4,6,10,-1,-1,-3,-5,5,-7,-4,6,8,-10,3,1,-9],[-6,4,9,8,-6,7,4,-9,-10,10,3,-2,-4,-1,3,-3],[2,-7,-3,-1,6,8,-1,-10,2,-6,9,-9,5,1,-7,6],[-2,-2,-10,3,2,-5,-2,3,7,8,7,3,7,-1,6,6],[2,4,5,-7,3,-10,-7,7,-4,1,2,5,-8,6,4,4]],[[1,10,-5,3,-7,1,7,9,4,-3,6,8,4,7,-7,6],[9,2,-2,-2,-9,2,-4,7,3,-4,2,2,-7,6,10,-2],[9,-4,10,-10,10,4,5,2,5,-6,10,-5,-6,3,-4,-8],[-2,3,-8,-10,5,4,9,-9,-2,1,2,2,-6,8,1,-4],[6,-4,10,-5,-10,-6,-5,-5,-7,-10,4,-9,-7,2,-10,-3],[-4,3,3,-9,-8,-3,-8,-9,-5,-6,-1,9,1,-7,8,9],[9,3,1,4,-5,-4,5,9,-2,-9,9,2,9,-3,1,8],[6,-1,-5,8,-2,-4,6,7,8,3,-5,-1,6,3,6,7],[-5,8,-3,-10,9,-4,-7,4,-8,-7,2,7,-10,5,-4,-9],[-1,6,5,1,-2,-10,-7,-6,-1,-9,-9,-1,7,-6,-10,-9],[-3,-5,3,-2,-2,-3,9,3,2,-3,8,-1,-3,7,3,-4],[-3,5,-6,10,-1,6,-4,-10,-3,-5,-10,-10,-5,-4,-5,5],[7,3,-8,3,9,1,-10,-8,-5,-6,1,-8,4,-5,10,6],[-1,-5,5,-2,7,6,6,2,6,8,5,4,-8,8,-10,-7]],[[5,-1,8,-3,-7,-4,-2,6,-8,7,-8,5,-1,-4,-9,-3],[-3,-7,10,-7,10,3,10,1,-2,3,1,-8,3,3,-2,-8],[-5,-7,-6,5,8,9,-5,-7,-1,9,-8,-4,8,3,-6,-7],[8,7,10,2,-9,-7,-3,1,7,-4,8,8,-7,-8,-3,-3],[10,-7,-3,-10,9,-5,6,-6,10,9,-10,-6,9,-10,-10,5],[5,2,-10,10,-2,4,3,-10,-4,2,8,-10,1,-1,-5,3],[-8,-9,9,-2,4,-10,7,-1,1,-4,-1,-7,-4,-5,7,-10],[7,7,-7,-9,-6,10,-9,4,-4,10,-5,-10,-7,10,5,1],[7,7,7,-7,-3,6,-7,3,-1,9,-1,-4,3,4,-4,-9],[-5,7,10,-6,-10,-6,-5,10,-1,-1,-9,-1,-1,-2,2,-7],[8,2,9,-5,-10,-8,10,-2,-9,3,10,-2,-1,-7,8,3],[-2,-5,10,-2,1,-9,9,1,-6,6,8,-8,-4,3,3,-9],[-8,-7,-4,-3,8,7,-5,3,-3,-7,1,-10,-4,-7,7,-1],[-10,-5,7,1,-10,-1,7,6,7,10,1,-2,-3,4,-5,-6]]], dtype = "uint64")#candidate|5413|(14, 14, 16)|const|uint64
bop_5414 = relay.less_equal(call_5406.astype('bool'), relay.reshape(const_5413.astype('bool'), relay.shape_of(call_5406))) # shape=(14, 14, 16)
bop_5417 = relay.less_equal(call_5407.astype('bool'), relay.reshape(const_5413.astype('bool'), relay.shape_of(call_5407))) # shape=(14, 14, 16)
output = bop_5414
output2 = bop_5417
func_5418 = relay.Function([], output)
mod['func_5418'] = func_5418
mod = relay.transform.InferType()(mod)
output = func_5418()
func_5419 = relay.Function([], output)
mutated_mod['func_5419'] = func_5419
mutated_mod = relay.transform.InferType()(mutated_mod)
var_5420 = relay.var("var_5420", dtype = "int32", shape = (8, 7, 12))#candidate|5420|(8, 7, 12)|var|int32
var_5421 = relay.var("var_5421", dtype = "int32", shape = (8, 7, 12))#candidate|5421|(8, 7, 12)|var|int32
bop_5422 = relay.add(var_5420.astype('int32'), relay.reshape(var_5421.astype('int32'), relay.shape_of(var_5420))) # shape=(8, 7, 12)
func_5053_call = mod.get_global_var('func_5053')
func_5054_call = mutated_mod.get_global_var('func_5054')
call_5432 = relay.TupleGetItem(func_5053_call(), 0)
call_5433 = relay.TupleGetItem(func_5054_call(), 0)
func_1645_call = mod.get_global_var('func_1645')
func_1647_call = mutated_mod.get_global_var('func_1647')
var_5443 = relay.var("var_5443", dtype = "uint16", shape = (52, 32))#candidate|5443|(52, 32)|var|uint16
call_5442 = relay.TupleGetItem(func_1645_call(relay.reshape(var_5443.astype('uint16'), [1664,])), 3)
call_5444 = relay.TupleGetItem(func_1647_call(relay.reshape(var_5443.astype('uint16'), [1664,])), 3)
bop_5456 = relay.floor_divide(call_5442.astype('float32'), relay.reshape(var_5443.astype('float32'), relay.shape_of(call_5442))) # shape=(1664,)
bop_5459 = relay.floor_divide(call_5444.astype('float32'), relay.reshape(var_5443.astype('float32'), relay.shape_of(call_5444))) # shape=(1664,)
bop_5462 = relay.less_equal(var_5420.astype('bool'), relay.reshape(bop_5422.astype('bool'), relay.shape_of(var_5420))) # shape=(8, 7, 12)
output = relay.Tuple([call_5432,bop_5456,bop_5462,])
output2 = relay.Tuple([call_5433,bop_5459,bop_5462,])
func_5466 = relay.Function([var_5420,var_5421,var_5443,], output)
mod['func_5466'] = func_5466
mod = relay.transform.InferType()(mod)
mutated_mod['func_5466'] = func_5466
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5466_call = mutated_mod.get_global_var('func_5466')
var_5468 = relay.var("var_5468", dtype = "int32", shape = (8, 7, 12))#candidate|5468|(8, 7, 12)|var|int32
var_5469 = relay.var("var_5469", dtype = "int32", shape = (8, 7, 12))#candidate|5469|(8, 7, 12)|var|int32
var_5470 = relay.var("var_5470", dtype = "uint16", shape = (52, 32))#candidate|5470|(52, 32)|var|uint16
call_5467 = func_5466_call(var_5468,var_5469,var_5470,)
output = call_5467
func_5471 = relay.Function([var_5468,var_5469,var_5470,], output)
mutated_mod['func_5471'] = func_5471
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1948_call = mod.get_global_var('func_1948')
func_1949_call = mutated_mod.get_global_var('func_1949')
call_5598 = relay.TupleGetItem(func_1948_call(), 0)
call_5599 = relay.TupleGetItem(func_1949_call(), 0)
output = call_5598
output2 = call_5599
func_5600 = relay.Function([], output)
mod['func_5600'] = func_5600
mod = relay.transform.InferType()(mod)
output = func_5600()
func_5601 = relay.Function([], output)
mutated_mod['func_5601'] = func_5601
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5053_call = mod.get_global_var('func_5053')
func_5054_call = mutated_mod.get_global_var('func_5054')
call_5607 = relay.TupleGetItem(func_5053_call(), 0)
call_5608 = relay.TupleGetItem(func_5054_call(), 0)
func_1166_call = mod.get_global_var('func_1166')
func_1168_call = mutated_mod.get_global_var('func_1168')
call_5613 = relay.TupleGetItem(func_1166_call(), 1)
call_5614 = relay.TupleGetItem(func_1168_call(), 1)
func_1003_call = mod.get_global_var('func_1003')
func_1005_call = mutated_mod.get_global_var('func_1005')
call_5619 = relay.TupleGetItem(func_1003_call(), 0)
call_5620 = relay.TupleGetItem(func_1005_call(), 0)
func_1390_call = mod.get_global_var('func_1390')
func_1391_call = mutated_mod.get_global_var('func_1391')
call_5621 = relay.TupleGetItem(func_1390_call(), 0)
call_5622 = relay.TupleGetItem(func_1391_call(), 0)
output = relay.Tuple([call_5607,call_5613,call_5619,call_5621,])
output2 = relay.Tuple([call_5608,call_5614,call_5620,call_5622,])
func_5623 = relay.Function([], output)
mod['func_5623'] = func_5623
mod = relay.transform.InferType()(mod)
output = func_5623()
func_5624 = relay.Function([], output)
mutated_mod['func_5624'] = func_5624
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1948_call = mod.get_global_var('func_1948')
func_1949_call = mutated_mod.get_global_var('func_1949')
call_5633 = relay.TupleGetItem(func_1948_call(), 0)
call_5634 = relay.TupleGetItem(func_1949_call(), 0)
func_4634_call = mod.get_global_var('func_4634')
func_4637_call = mutated_mod.get_global_var('func_4637')
var_5638 = relay.var("var_5638", dtype = "float64", shape = (288, 2))#candidate|5638|(288, 2)|var|float64
call_5637 = relay.TupleGetItem(func_4634_call(relay.reshape(var_5638.astype('float64'), [576,])), 0)
call_5639 = relay.TupleGetItem(func_4637_call(relay.reshape(var_5638.astype('float64'), [576,])), 0)
const_5656 = relay.const([[9.176901,-5.529650],[-1.676937,1.108124],[-2.476557,-7.952582],[-0.958741,-4.031208],[6.308725,0.275347],[3.780963,3.751993],[5.522279,-7.013410],[2.470209,4.453710],[-2.915269,3.358918],[0.407133,-6.492501],[7.901922,-9.094177],[-2.884840,4.002389],[-1.639385,5.938058],[-9.987991,6.794540],[9.656174,2.061273],[3.146617,3.096700],[-8.069804,5.102911],[9.686272,4.333381],[-6.026904,0.992391],[-9.393231,-0.700263],[8.485492,2.306432],[-4.353072,3.685812],[-8.852290,-3.374457],[-5.320660,0.985749],[2.127409,-1.792944],[-4.124240,2.343990],[8.338716,-5.735019],[2.441804,-5.699315],[-9.306797,-7.229995],[-5.536569,-9.636514],[-1.763200,9.681825],[-6.173708,2.483005],[9.381313,-2.515245],[1.107254,-4.480462],[-7.241543,-6.799643],[-0.197325,-6.577562],[-7.467481,3.117505],[7.621759,-5.375973],[8.850247,-5.052980],[-3.004147,8.276505],[6.164882,-2.455950],[6.564327,-1.990611],[9.795196,8.283439],[9.989081,-2.547265],[-4.327269,1.199399],[8.539418,7.202848],[9.213400,-6.196664],[6.090777,3.213514],[6.470961,3.722254],[-2.864131,7.813302],[-0.762797,2.742537],[-4.060935,-2.509421],[-1.080008,-3.034722],[6.488467,-0.843986],[8.360305,-2.002342],[-9.048552,-8.894782],[2.681653,-6.703060],[1.092317,9.619484],[-1.044600,0.030411],[-2.193207,1.502243],[3.579476,-0.567533],[6.191942,1.415320],[5.185337,4.733639],[6.670592,-9.694266],[9.266617,4.866723],[-8.730666,-7.957396],[6.746109,0.593361],[3.421526,-6.545475],[3.790481,9.047873],[6.039969,1.238482],[4.737855,-3.035162],[-2.508292,1.556939],[7.857939,-1.278251],[-7.618296,-6.674342],[4.255383,8.721612],[-6.352579,9.646442],[6.421131,-6.962316],[-7.781971,5.800664],[-6.763164,-0.912868],[-8.131407,-9.676582],[-9.165448,0.680535],[-7.408577,6.561437],[-7.145118,-6.844213],[-6.631824,-6.408768],[5.222982,6.518028],[-2.369347,3.804361],[-0.730515,-9.276065],[7.940604,7.760247],[9.381541,-0.017388],[-0.696021,5.829666],[7.104665,-1.133733],[-3.187710,8.857364],[3.347781,3.675944],[6.411192,9.499087],[-7.895946,2.526340],[-3.324398,-2.482921],[7.897515,9.739733],[-5.669290,-6.237085],[9.440713,9.503712],[4.359955,4.143521],[8.070860,2.897254],[2.924778,7.043485],[-9.284167,4.220373],[1.970022,-1.832951],[4.032230,-8.739091],[9.946349,4.670153],[0.523190,-0.053146],[9.385567,-2.419162],[-7.100546,6.013964],[-6.631988,0.096050],[1.667428,9.414005],[-6.896459,-1.983108],[-8.763888,1.069812],[5.192750,-7.195243],[-1.888694,-9.591560],[-9.011861,-5.771263],[-4.859888,-8.218155],[-4.576227,1.465159],[-7.754258,-7.853929],[-1.443855,-1.215752],[-6.537056,-3.418408],[-7.240877,-8.684342],[9.182435,-9.537955],[8.785379,-9.782030],[2.302569,-1.205131],[0.574807,1.755308],[3.077802,-7.792281],[-3.206058,-8.622128],[7.503361,6.740684],[5.326658,-8.533721],[-1.430153,-9.174120],[6.035398,7.366003],[7.243358,4.989209],[5.581441,-8.460503],[-2.690771,-6.693108],[-0.838469,6.623489],[-2.646885,7.051208],[1.426292,-8.836660],[1.851162,3.286390],[-7.544097,4.469517],[2.325050,-5.744839],[0.479186,4.701388],[9.667545,5.563115],[-7.397379,7.607347],[2.227727,-6.430210],[-2.377116,-1.757821],[2.197563,7.691553],[-2.888401,5.577086],[1.270731,-8.489997],[-0.663594,-4.049546],[8.394153,4.250374],[0.528057,-8.599768],[-4.258513,7.767624],[-0.687153,-0.246439],[9.832182,3.281994],[-5.616035,9.331484],[-1.357801,-8.946438],[0.678634,-6.505754],[-7.029245,-4.805830],[8.603256,-8.004894],[9.244180,-2.856760],[9.470045,1.919647],[-7.679224,-6.506356],[9.052089,-9.388252],[5.785676,6.093766],[-0.604014,-7.269304],[3.665748,-6.780863],[5.321447,-2.392494],[-8.940832,-5.624141],[8.965427,-2.384297],[-5.349473,-4.382332],[5.323182,6.541571],[-9.392264,2.872213],[7.769886,8.054750],[5.376949,8.543113],[6.280717,7.519462],[-2.755511,7.265062],[-2.631284,-3.590130],[1.168368,-2.577479],[9.333178,1.479013],[-9.401403,-9.819173],[-0.481023,6.597887],[6.700694,0.178025],[-6.643885,-2.914875],[-8.609033,6.624180],[-1.339509,-1.367986],[-3.578918,-6.533616],[-6.136378,3.814656],[-0.035442,-8.269944],[-3.708092,-2.749675],[-7.899576,-6.897206],[0.320080,-0.911166],[-4.045090,-4.270139],[1.372022,-5.367939],[3.350769,0.484998],[8.056955,7.636045],[9.687503,-7.446583],[7.485222,7.868259],[-9.790787,-7.730680],[8.688271,-8.529498],[-4.476981,-6.965498],[2.844322,-9.320649],[6.977045,-4.056502],[-3.044005,-9.413002],[-1.387536,3.111643],[-0.019951,8.302276],[-9.597180,-4.332501],[-0.685948,-1.513856],[2.112632,-0.353485],[2.497903,1.993261],[2.620378,3.005925],[9.772068,4.754192],[3.630728,9.921771],[7.175820,-7.114448],[6.966124,1.188356],[4.084944,-2.705377],[-1.896880,3.228484],[9.383709,-5.590497],[7.159338,0.274871],[-6.672571,-1.693932],[0.188225,4.039811],[-9.065490,7.480694],[-2.991445,-4.977474],[-6.453529,-9.693127],[4.868992,-3.617432],[-0.940386,4.207691],[9.977208,5.435880],[2.275612,7.112385],[7.923624,-2.346633],[-1.297129,5.160555],[-4.184900,2.355918],[7.452489,-4.801229],[5.736236,1.688804],[3.481622,8.082841],[0.926079,-9.617378],[-0.495628,-2.118873],[-5.420515,-9.830347],[-4.921456,7.054322],[1.844460,8.518179],[-5.374284,5.674238],[-4.696786,-6.656975],[-8.469268,-0.143197],[-9.733500,-3.274732],[-5.503550,-8.503586],[2.188465,-2.602691],[1.280077,6.653085],[-5.210590,7.041392],[-9.486334,-0.832596],[6.007951,-4.690008],[6.981334,-2.704661],[-9.571048,-0.665789],[5.925268,6.068391],[9.615446,-0.430826],[-8.079758,6.178832],[-7.033382,2.383192],[-9.036436,4.587010],[-4.084471,1.226095],[1.481593,4.998326],[-7.217022,-1.549150],[0.944643,0.594157],[8.299201,9.323810],[7.735391,-7.515677],[6.600643,-0.347130],[-0.286183,8.619346],[9.519686,-7.697783],[-4.249072,-9.636231],[4.545322,-7.765096],[9.606958,-2.672466],[8.769013,-2.319565],[-4.428294,-8.185815],[-9.622111,0.513238],[4.412712,-8.150323],[8.214206,9.838354],[-2.667628,5.987311],[-9.748371,-7.045995],[4.518141,2.179504],[-3.851607,5.920122],[-4.585283,-5.693495],[-4.231580,9.136869],[1.794060,-8.797571],[-1.683029,-9.264031],[-8.301187,3.327059],[-8.093970,-8.116862],[-7.277267,-0.692128],[1.003623,7.491747],[-9.196778,-8.332065],[-7.854921,-8.483825],[1.842497,-8.439461]], dtype = "float64")#candidate|5656|(288, 2)|const|float64
bop_5657 = relay.mod(var_5638.astype('float32'), relay.reshape(const_5656.astype('float32'), relay.shape_of(var_5638))) # shape=(288, 2)
func_3287_call = mod.get_global_var('func_3287')
func_3290_call = mutated_mod.get_global_var('func_3290')
const_5662 = relay.const(1, dtype = "int64")#candidate|5662|()|const|int64
call_5661 = relay.TupleGetItem(func_3287_call(relay.reshape(const_5662.astype('int64'), [])), 0)
call_5663 = relay.TupleGetItem(func_3290_call(relay.reshape(const_5662.astype('int64'), [])), 0)
var_5666 = relay.var("var_5666", dtype = "int64", shape = (9, 13, 7))#candidate|5666|(9, 13, 7)|var|int64
bop_5667 = relay.bitwise_xor(const_5662.astype('int32'), var_5666.astype('int32')) # shape=(9, 13, 7)
output = relay.Tuple([call_5633,call_5637,bop_5657,call_5661,bop_5667,])
output2 = relay.Tuple([call_5634,call_5639,bop_5657,call_5663,bop_5667,])
func_5670 = relay.Function([var_5638,var_5666,], output)
mod['func_5670'] = func_5670
mod = relay.transform.InferType()(mod)
var_5671 = relay.var("var_5671", dtype = "float64", shape = (288, 2))#candidate|5671|(288, 2)|var|float64
var_5672 = relay.var("var_5672", dtype = "int64", shape = (9, 13, 7))#candidate|5672|(9, 13, 7)|var|int64
output = func_5670(var_5671,var_5672,)
func_5673 = relay.Function([var_5671,var_5672,], output)
mutated_mod['func_5673'] = func_5673
mutated_mod = relay.transform.InferType()(mutated_mod)
var_5675 = relay.var("var_5675", dtype = "uint64", shape = (9, 13, 3))#candidate|5675|(9, 13, 3)|var|uint64
var_5676 = relay.var("var_5676", dtype = "uint64", shape = (9, 13, 3))#candidate|5676|(9, 13, 3)|var|uint64
bop_5677 = relay.right_shift(var_5675.astype('uint64'), relay.reshape(var_5676.astype('uint64'), relay.shape_of(var_5675))) # shape=(9, 13, 3)
uop_5691 = relay.log(var_5675.astype('float64')) # shape=(9, 13, 3)
uop_5695 = relay.log10(var_5676.astype('float64')) # shape=(9, 13, 3)
output = relay.Tuple([bop_5677,uop_5691,uop_5695,])
output2 = relay.Tuple([bop_5677,uop_5691,uop_5695,])
func_5697 = relay.Function([var_5675,var_5676,], output)
mod['func_5697'] = func_5697
mod = relay.transform.InferType()(mod)
mutated_mod['func_5697'] = func_5697
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5697_call = mutated_mod.get_global_var('func_5697')
var_5699 = relay.var("var_5699", dtype = "uint64", shape = (9, 13, 3))#candidate|5699|(9, 13, 3)|var|uint64
var_5700 = relay.var("var_5700", dtype = "uint64", shape = (9, 13, 3))#candidate|5700|(9, 13, 3)|var|uint64
call_5698 = func_5697_call(var_5699,var_5700,)
output = call_5698
func_5701 = relay.Function([var_5699,var_5700,], output)
mutated_mod['func_5701'] = func_5701
mutated_mod = relay.transform.InferType()(mutated_mod)
const_5742 = relay.const([[[-1.585242,-1.171598,9.766770,-6.550125],[4.815288,-3.509941,-9.748102,5.525959],[-3.846662,8.653064,7.736558,-0.872573],[-0.799293,1.270842,-5.265844,5.303800],[-1.738858,1.764518,-4.057372,-5.870166]],[[-3.540811,-0.500959,-0.835237,-4.650960],[7.975501,-7.311499,4.911920,2.869277],[-0.117965,-2.782056,8.403869,8.195768],[7.705236,5.280353,-2.126004,5.286015],[-2.541263,9.950892,-2.047287,4.894092]],[[-7.051039,-5.670653,-9.594072,5.255356],[7.191933,2.204474,7.907130,-8.928805],[-6.882535,-3.305984,-9.804916,7.158702],[0.504051,5.509025,-1.874719,5.330803],[-1.172943,-8.194219,7.529274,1.074869]],[[0.396485,2.347590,-0.428760,-2.687432],[9.483802,3.008638,-5.017104,-5.987678],[-8.618114,8.355587,-6.566525,8.880478],[1.004529,3.546075,6.619934,1.181995],[6.235039,4.614300,-2.088023,-0.435370]],[[-6.912202,7.495187,7.556262,-8.275690],[4.306817,-9.634995,-7.992694,-4.315394],[-0.315712,-7.115981,8.366565,-2.183285],[-4.765692,-4.520053,8.101668,-2.900849],[-8.930574,5.253063,4.933644,9.083968]],[[5.478548,-3.013253,4.281139,0.420660],[-3.415685,3.814036,4.948065,-3.322505],[8.826630,6.546131,-3.196779,-7.766588],[9.089126,-3.306296,1.769933,-2.996567],[5.182469,-8.053611,0.011181,-7.155974]],[[2.630738,8.232991,-7.151217,-3.191174],[-8.233199,-1.750093,0.053807,-3.045049],[-6.918630,1.549366,-3.051362,7.892803],[-9.731628,3.928471,0.618134,2.254297],[0.745217,-7.695862,4.071555,-8.874301]],[[-8.718214,-8.515676,3.700386,-4.203252],[4.017916,-9.771874,4.892867,0.588440],[2.385130,-8.047683,1.898665,-6.652177],[-1.615374,-3.383140,1.361049,-6.696433],[6.676837,-9.065618,6.570001,5.689520]],[[-8.254832,-3.257504,9.465960,-6.919335],[-8.941235,2.622287,-5.324466,4.613687],[-4.524368,-7.336887,-3.229767,4.087704],[7.350279,-7.595864,2.546447,2.151012],[9.802454,7.204997,-0.584185,-6.803181]],[[-0.176823,-3.588875,2.686411,-1.691311],[8.727545,0.559008,1.069192,2.871651],[-7.160610,0.763593,6.949721,-2.733316],[-8.197160,0.518778,0.078959,-6.760785],[-4.297244,-7.513870,-8.573644,9.969481]],[[-7.005784,2.280848,-2.685217,-1.041640],[-5.546150,-5.243988,6.764241,8.361929],[-5.274555,-4.954414,-9.752916,-2.156555],[7.640186,-4.681915,7.822913,7.356579],[-3.884354,9.340664,4.162000,-0.758143]],[[9.038790,-4.462322,9.277437,-4.985494],[-7.110236,7.700712,5.357057,0.132781],[-4.091340,-4.210115,-5.418394,8.573032],[-0.281040,8.272215,3.557538,-3.684620],[-2.761294,3.877438,-4.429381,5.836461]],[[-0.248748,5.419492,-9.567845,-0.657927],[-5.797395,-3.057801,-6.495424,6.299338],[-6.636135,-6.017064,-4.066599,-8.377813],[0.575405,-2.495944,-9.451770,7.463446],[-6.696451,-3.983097,5.152214,-3.814996]]], dtype = "float64")#candidate|5742|(13, 5, 4)|const|float64
uop_5743 = relay.acos(const_5742.astype('float64')) # shape=(13, 5, 4)
output = relay.Tuple([uop_5743,])
output2 = relay.Tuple([uop_5743,])
func_5745 = relay.Function([], output)
mod['func_5745'] = func_5745
mod = relay.transform.InferType()(mod)
mutated_mod['func_5745'] = func_5745
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5745_call = mutated_mod.get_global_var('func_5745')
call_5746 = func_5745_call()
output = call_5746
func_5747 = relay.Function([], output)
mutated_mod['func_5747'] = func_5747
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1003_call = mod.get_global_var('func_1003')
func_1005_call = mutated_mod.get_global_var('func_1005')
call_5764 = relay.TupleGetItem(func_1003_call(), 0)
call_5765 = relay.TupleGetItem(func_1005_call(), 0)
output = call_5764
output2 = call_5765
func_5773 = relay.Function([], output)
mod['func_5773'] = func_5773
mod = relay.transform.InferType()(mod)
output = func_5773()
func_5774 = relay.Function([], output)
mutated_mod['func_5774'] = func_5774
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3342_call = mod.get_global_var('func_3342')
func_3343_call = mutated_mod.get_global_var('func_3343')
call_5797 = relay.TupleGetItem(func_3342_call(), 0)
call_5798 = relay.TupleGetItem(func_3343_call(), 0)
func_3154_call = mod.get_global_var('func_3154')
func_3156_call = mutated_mod.get_global_var('func_3156')
const_5813 = relay.const([[-10,-1,2,-3,-3,4],[2,-3,6,7,8,3],[8,-2,-6,6,-5,-5],[4,-1,7,-6,7,-6],[-9,-9,2,4,4,6],[2,-7,8,-8,-2,-7],[6,7,-3,4,-7,-10],[7,-10,1,2,-7,2],[3,-8,-1,-3,10,-8],[-5,6,9,1,-7,-6],[9,4,9,3,-8,-6],[-6,3,10,-1,-8,-9],[1,1,-2,-8,7,7],[8,7,-1,-4,-5,-4],[-2,2,-2,-5,2,2],[-4,-5,4,6,-1,9],[-7,2,-2,9,-1,-4],[-1,-7,4,6,-2,9],[-2,10,-10,-9,4,1],[8,-9,-10,-4,-1,-5],[-2,5,4,2,8,1],[-2,5,2,1,-5,-10],[5,-9,7,-5,6,5],[-3,8,-8,9,1,-6],[-1,4,-1,-4,-10,-5],[6,-8,-8,-4,9,-2],[1,8,7,-7,-3,6],[-7,10,-1,6,5,-2],[6,-3,8,-3,9,2],[-7,4,-10,-4,1,6],[-9,1,-6,-6,-9,-9],[-6,-7,-6,-9,-8,1],[-3,6,-8,-6,-5,-10],[10,-5,-5,-9,9,-4],[-4,5,5,-3,2,-2],[4,-7,5,-9,-3,5],[1,1,-9,-2,-9,5],[5,-4,-9,-7,-2,-9],[-4,-1,5,9,1,5],[-2,-3,5,4,-7,-9],[5,-9,-2,6,-9,7],[5,9,3,-6,-10,-7],[-8,-7,1,1,-1,3],[-1,1,7,5,1,10],[9,-8,-6,5,6,-10],[5,-1,4,-10,-4,-4],[-7,3,-4,-2,8,1],[5,-7,-8,-7,10,1],[-5,-8,4,-8,-2,10],[3,-8,-4,-4,-7,-1],[9,1,-8,-3,7,-10],[3,3,10,-1,9,-5],[-10,-1,3,5,-10,1],[-1,8,6,-9,7,-4],[9,-1,7,-9,-4,-8],[-2,9,9,7,6,8],[-3,-1,-10,9,-2,-6],[-4,-8,7,7,6,1],[-8,7,-6,-8,-1,1],[-5,1,-9,-6,3,-5],[-9,2,-2,3,3,-6],[5,10,-2,-9,1,4],[-8,5,6,4,6,-5],[8,8,9,10,9,-2],[-9,8,3,-2,-4,-4],[8,-10,-3,3,-4,-3],[-7,7,-3,7,-1,3],[-8,-5,-1,7,-9,6],[-1,-5,1,7,3,6],[-4,9,9,-9,9,1],[5,1,-6,-5,-5,-3],[-10,-6,6,-10,-6,-4],[-5,4,-9,3,-5,-7],[1,-10,-4,-5,-5,1],[5,-10,2,-6,8,-10],[6,-10,-6,-4,9,-3],[8,1,-1,5,-2,6],[10,3,-3,7,-4,10],[4,-9,7,7,-2,-9],[9,-8,10,6,-6,-9],[2,8,-3,-8,-2,9],[2,7,4,-6,1,-5],[10,10,-2,6,-5,2],[3,-4,-8,8,-8,-4],[10,-5,-6,1,-4,3],[-10,-10,3,10,1,-3],[-6,8,6,8,4,9],[4,7,3,-3,-6,5],[-4,-5,10,3,1,-1],[3,-4,-3,-6,-5,6],[-10,-10,-4,6,-1,-3],[1,10,-7,-10,10,-5],[9,1,-4,-1,-8,1],[-7,9,9,2,6,-3],[-2,-3,-9,7,-10,1],[7,-8,-6,-6,7,-10],[7,-6,3,-8,-4,-9],[-9,-10,-5,5,-6,9],[-4,-2,10,9,5,2],[7,-3,9,4,8,-9],[5,-7,8,1,-10,-5],[7,10,9,10,-10,-9],[-2,-8,-6,-3,2,-4],[-7,4,-9,10,3,10],[3,-10,-10,3,1,-4],[2,-8,7,-7,-8,-4],[2,-5,-5,6,2,3],[4,-5,9,2,7,8],[-3,-10,7,-9,9,3],[8,4,-7,3,-2,8],[8,-5,-1,10,-9,6],[4,7,9,7,-9,-7],[-5,10,9,-1,8,-3],[-10,-3,-3,8,-4,1],[3,1,9,10,10,-3],[6,7,9,-10,-3,1],[4,1,2,-3,10,-7],[-4,4,7,-5,1,-4],[2,-1,-1,-8,2,2],[3,-9,1,-3,4,-9],[5,1,-5,-6,3,1],[2,8,1,5,7,-1],[1,3,3,4,5,-2],[4,-5,-7,-10,6,-10],[10,-4,-1,-5,-1,8],[2,10,9,6,-3,-10],[-7,-9,8,3,7,7],[2,-10,2,-7,-10,-10],[2,-2,-8,5,-1,-10],[4,-9,1,-8,-7,8],[-6,4,3,-5,-1,-9],[-7,2,-7,-9,8,-1],[-1,3,-7,7,-7,1],[6,-6,3,4,8,-10],[-10,5,6,-8,4,6],[4,7,6,-5,4,-7],[-5,-8,7,-9,8,5],[-9,-2,-4,-6,-4,4],[-1,-10,8,-3,-8,-7],[3,-2,-7,7,-1,1],[-9,-8,10,-1,-8,-5],[8,-1,-2,-1,-2,6],[-3,-7,3,-2,3,-5],[1,-3,9,-7,-9,-3],[-7,-4,9,-10,4,-9],[-5,9,-2,-2,-2,-3],[-4,-8,-1,4,9,-8],[-9,-3,8,-9,-4,5],[-3,-10,-4,6,5,3],[-8,7,6,-8,-4,9],[4,6,-4,-3,-10,4],[5,-3,5,-10,2,2],[3,-4,-2,10,1,-3],[9,-4,8,4,-7,8],[3,-6,-5,5,-8,-6],[4,-6,4,-1,-7,3],[-2,-3,-3,4,-8,3],[9,-3,10,7,5,-10],[5,3,6,-7,4,1],[10,-5,6,-4,-7,1],[-6,3,2,-10,5,-6],[9,1,-3,1,8,4],[2,-8,-4,-8,7,-2],[5,5,5,-10,7,6],[-8,5,-10,1,-6,-3],[-7,-5,-2,-1,-8,6],[-8,-8,2,6,10,5],[10,-6,-4,-1,1,5],[-2,10,-5,-5,-5,-9],[-8,4,-6,-10,4,7],[6,-10,3,-8,-2,-6],[7,9,6,-6,2,-4],[10,5,1,-5,-9,2],[8,8,10,-8,-5,8],[4,-8,5,-5,8,-2],[-3,6,10,5,-9,2],[4,6,-7,-5,-10,7],[6,2,-3,3,-1,-7],[8,-1,-2,-6,-2,-10],[-9,-10,-9,-4,-1,9],[3,8,-10,5,7,-4],[-2,7,-5,5,-1,2],[-3,5,7,6,5,-3],[10,-2,5,-6,-8,-3],[10,-6,-2,-3,7,9],[-9,3,2,8,4,-9],[-7,10,-7,-10,-8,8],[-7,6,-8,-9,1,-10],[7,-7,9,4,8,-3],[4,2,10,-3,-10,10],[-4,-4,10,-2,-1,10],[2,5,-7,-4,2,4],[-5,-8,5,-2,8,8],[1,6,6,9,-1,7],[-5,-8,5,10,10,7],[-9,-6,7,6,3,-10],[-8,-6,-5,7,-4,-8],[9,-10,-7,6,-6,-4],[6,10,2,8,-9,8],[-9,-6,2,-3,4,-1],[10,7,-10,10,-1,-7],[10,-2,2,-7,-7,-4],[-6,1,8,-1,9,-6],[-10,-7,9,-3,-9,-10],[-7,2,9,-4,-2,-7],[8,1,-9,-6,-5,10],[-7,3,-6,-7,-1,6],[6,6,-6,8,-10,-3],[8,-8,2,-7,10,5],[2,-10,2,2,7,-5],[1,-9,2,2,1,3],[9,-4,-9,-5,-2,5],[-1,1,-6,-3,10,2],[5,-4,-5,2,8,-10],[-7,-9,10,-3,2,10],[-2,7,-6,6,2,-10],[8,10,9,4,-7,-5],[6,9,-3,5,2,7],[-8,1,-2,8,2,7],[-10,-7,3,-3,1,-4],[10,8,-1,2,-8,1],[4,4,-7,-7,-4,-1],[6,6,5,2,1,-7],[-6,2,-2,8,2,9],[-4,6,3,-5,-3,-6],[4,6,-9,6,2,9],[-2,-7,8,-4,4,-10],[-9,-6,9,3,-2,-7],[-1,-6,2,6,-2,-8],[1,-3,-4,-4,2,-7],[3,-2,-8,8,3,-10],[-9,3,-1,2,-5,-1],[-9,-3,-6,-2,2,-6],[5,8,7,-7,6,6],[10,-1,4,-5,-6,4],[1,-1,-9,3,-2,-4],[-1,-3,-8,8,8,3],[3,7,-8,-1,8,-4],[-2,3,-8,-1,7,-7],[5,-2,-7,7,5,-9],[-6,2,6,-10,-2,10],[-9,10,9,10,-5,8],[-9,9,-10,7,-1,-7],[4,3,10,8,6,-5],[5,8,-8,-9,-5,1],[9,1,-6,4,8,7],[-3,-9,-3,4,10,8],[-10,4,-7,3,2,5],[4,7,-9,4,-1,10],[7,-2,8,4,-8,5],[5,3,-2,5,-2,-2],[1,2,6,6,8,10],[-9,-5,-5,4,10,9],[-8,10,9,10,7,-1],[-5,-6,-6,-8,1,2],[6,7,-3,-10,9,2],[1,9,5,-10,-9,-5],[5,10,9,-3,9,-2],[4,-5,9,4,-1,-7],[5,9,6,-8,7,8],[-1,-10,-10,-5,4,1],[9,-5,-8,-9,2,6],[-1,-8,4,4,-8,8],[-9,-4,2,8,1,-2],[-8,2,8,-9,-4,-9],[4,8,10,-9,10,3],[1,5,-9,-10,9,-8],[-4,8,-3,-8,10,8],[-3,-10,2,-7,7,6],[-3,2,10,1,-6,-2],[7,5,-8,-9,1,6],[-5,8,-6,-9,-1,-3],[2,7,-4,-6,-10,8],[7,9,-9,3,9,-9],[8,-6,-8,1,2,9],[-8,-4,-7,4,-4,-1],[-9,8,-8,3,-4,4],[-7,-3,5,-2,6,-9],[10,8,-10,8,5,-5],[2,8,6,-7,1,9],[-1,-8,9,-1,-5,-5],[-8,-2,1,-6,7,9],[10,-8,8,-8,10,-10],[-3,10,-10,3,-9,2],[4,3,4,9,-1,-6],[4,-2,9,-5,-2,2],[-1,-1,10,10,-1,-7],[8,10,1,-10,1,-3],[-1,5,-3,-5,-10,3],[-10,-5,-10,8,8,-7],[8,-8,-7,-1,7,-4],[-1,-5,7,-4,-2,8],[1,10,-7,-10,4,4],[-9,10,9,8,-4,4],[10,-8,4,4,3,-7],[-1,-5,-7,6,2,-3],[1,2,2,-5,-3,-5],[-9,6,-5,2,2,-10],[-6,6,-2,10,10,-9],[9,7,8,-3,-2,-1],[-2,2,-2,-4,9,-6],[-10,-6,-10,7,10,-3],[7,-5,5,-6,1,-10],[10,-9,5,-10,4,7],[1,-3,-7,1,-4,-3],[-2,-3,-6,-6,-8,-5],[-10,8,-3,8,-9,6],[9,10,-4,2,3,-1],[-8,-7,-1,9,-9,7],[-2,-5,8,-6,1,-10],[-2,-4,-8,2,-1,-4],[1,-8,-8,2,10,10],[-3,6,-6,-10,1,-1],[-9,6,-4,-4,2,7],[7,-10,9,6,10,-5],[-10,-5,8,-7,1,-9],[-4,3,-7,5,-10,-2],[7,-2,-1,5,3,-10],[6,-8,-3,-5,9,10],[-6,9,-2,-8,2,9],[-8,-5,-2,10,6,-8],[-4,-5,-9,-1,2,5],[-3,-6,-5,-8,-7,4],[10,1,3,-5,2,-3],[5,-10,-4,-2,9,3],[2,7,-8,1,6,-4],[-9,7,10,-4,4,3],[-8,6,-2,-9,4,-4],[-8,10,4,2,-6,-9],[-9,-1,-7,-10,9,2],[6,-8,9,5,-6,9],[3,-7,10,-3,-9,9],[-9,10,-4,-1,-4,-3],[10,10,4,-10,-3,-6],[-3,2,-5,7,-10,2],[-9,-8,-2,8,10,-2],[9,1,-8,-5,-8,-2],[-9,-7,-8,-7,-3,-2],[6,1,-7,-2,4,8],[-2,1,-3,-3,2,3],[10,-6,5,-10,-7,-10],[-3,-1,-6,6,-6,-10],[-2,1,-4,5,-6,-8],[9,5,8,-10,-8,7],[2,1,-2,6,3,-7],[4,2,-5,5,6,-1],[5,-5,-2,6,8,1],[10,2,-5,-2,-3,10],[-3,-1,7,5,-3,5],[-5,-1,-2,-10,2,-6],[5,7,-10,-5,4,-4],[-9,-2,-1,10,-10,8],[-7,-2,2,-7,6,4],[-3,-1,-6,5,-3,-10],[4,10,-4,5,7,-10],[7,-8,1,3,1,-10],[-8,-6,2,7,7,9],[6,-3,-3,-1,-2,5],[1,9,3,-2,-6,4],[-4,3,8,3,8,-6],[2,-3,-8,-10,-8,2],[-10,-2,3,-4,9,-10],[-9,-1,-10,-10,-6,-7],[-3,5,7,5,-4,-4],[5,5,5,-10,-8,-3],[-10,3,8,-2,10,-4],[-5,-6,6,-3,10,-6],[3,9,-9,-2,-7,-4],[-6,6,4,-2,-1,-5],[8,9,-7,-3,10,-2],[6,7,8,8,8,9],[-6,-10,-9,3,2,-5],[6,9,-2,3,4,1],[1,-7,5,-2,7,7],[4,3,-3,-5,8,3],[5,-8,-7,-1,10,1],[4,-8,5,6,5,-7],[10,7,6,-10,9,-9],[8,-5,8,6,9,-4],[9,-4,-1,-5,3,-1],[-4,-1,10,7,10,8],[10,-1,-8,-5,-4,1],[2,-8,-10,5,1,-4],[5,-1,-7,-2,-3,-8],[-7,7,-2,9,-6,8],[-8,-9,8,-4,-7,8],[3,3,-3,8,1,-5],[6,4,1,-10,-4,1],[-4,-3,-7,-7,10,-8],[-8,-7,2,2,6,-1],[-8,9,10,4,-3,9],[7,-4,-5,-4,-9,-3],[-2,10,-3,-8,-2,2],[5,7,2,-9,1,10],[6,-10,4,7,-10,-8],[7,-3,1,10,1,5],[5,-2,7,-4,-5,-1],[8,9,-4,9,2,-10],[-7,-10,-2,-10,9,3],[6,-1,2,4,-10,7],[1,-7,8,-6,10,1],[-1,10,7,-5,3,-5],[-10,4,-1,7,-7,-5],[-2,9,-8,-7,-5,8],[10,-4,3,-7,-8,4],[2,-1,6,5,10,-3],[6,9,4,-3,3,5],[-7,-1,-3,-4,8,5],[3,3,2,2,-3,1],[-8,-2,-2,-9,1,-3],[6,-1,-3,8,4,1],[-5,-6,-6,8,1,-7],[6,1,-7,-4,-10,-7],[9,2,7,1,-6,2],[6,-6,-9,2,-10,-5],[-5,-7,-3,-1,10,-8],[-7,-10,-8,7,-2,4],[7,-7,7,1,10,-1],[4,7,-5,2,-6,5],[5,-1,-4,-6,-9,5],[4,9,3,9,4,-3],[3,-9,8,-4,-3,-9],[7,7,10,-1,-7,10],[-2,7,-7,5,6,8],[7,6,-4,-8,-2,-5],[6,-9,-10,-2,10,-8],[-10,6,6,-9,-5,-2],[1,9,4,8,-2,10],[-9,-4,-2,7,-7,9],[8,-6,-4,-1,-8,-2],[4,2,-8,8,7,-6],[6,2,-8,-7,-8,1],[-9,8,-3,-2,10,-3],[-8,-8,4,-5,-9,4],[-7,-6,-1,-8,-1,2],[9,-1,7,9,-6,2],[1,2,2,9,-6,4],[-4,-2,1,9,5,8],[3,-9,2,-2,-9,-3],[10,-10,-9,-8,9,7],[3,1,-5,1,-6,-10],[-4,-1,7,-3,8,-5],[-10,-9,4,-10,-4,-6],[7,9,-10,2,-1,6],[-1,-5,2,7,5,-10],[3,-8,10,8,-1,-3],[-5,-6,9,4,-3,-10],[-1,7,-2,6,7,-2],[6,-6,-6,10,3,-10],[10,-4,-5,5,1,1],[-9,9,-9,-4,-1,-3],[-9,-2,9,-7,-10,-1],[7,-10,-10,-2,-7,8],[1,4,2,3,-10,-4],[-9,-9,3,-3,-8,9],[-3,10,1,10,7,6],[-1,1,-3,2,7,10],[-3,-10,-5,2,1,10],[7,-4,3,-6,-8,-8],[3,3,-1,-9,6,-7],[10,9,-1,-1,-2,-3],[-4,1,-7,3,9,9],[8,6,7,7,3,9],[6,2,-7,-2,5,3],[2,-1,3,-1,-10,-7],[10,-6,-9,-7,-7,2],[6,-6,-9,5,6,-2],[-6,10,-10,2,-10,-3],[5,3,-10,5,2,9],[10,-5,-9,-5,-2,2],[-1,-1,5,9,5,2],[-10,-3,8,-6,-5,-7],[9,-1,7,2,10,-9],[7,-4,10,2,-3,-2],[9,1,8,10,10,-8],[-7,-4,-4,-9,-1,-7],[-1,2,-4,-6,4,-10],[-7,-2,4,-1,10,7],[8,-7,10,-9,3,-4],[-6,3,-8,-2,3,-2],[-6,9,10,-10,-1,5],[-2,-10,-6,5,5,-1],[9,7,-9,-1,4,1],[-6,-2,1,-6,-6,10],[-1,3,3,8,-1,-5],[8,7,8,7,10,-8],[-9,-6,3,6,-10,-1],[-4,4,7,-6,-7,-6],[1,-8,-3,4,1,8],[5,-9,4,8,8,-3],[-1,-10,4,-5,7,7],[-10,-5,-8,-6,-6,8],[4,8,-7,-8,2,9],[2,-10,-7,-1,6,9],[-9,-1,-1,-7,-4,-6],[-7,-1,10,6,8,-3],[3,-4,-1,6,-10,-7],[5,-4,10,-2,-6,-10],[7,-10,-4,-1,-8,9],[-8,9,2,-8,1,-8],[4,10,6,-6,-7,-9],[-9,7,5,-7,1,-2],[-4,-9,-2,8,8,-8],[7,9,-10,5,7,9],[8,-5,-3,-1,7,4],[9,-7,-9,3,-9,-1],[1,10,-6,1,6,2],[-5,6,4,-1,-1,2],[-3,7,-9,1,-2,9],[-2,3,-6,-7,9,3],[5,-8,4,8,7,9],[4,8,-1,-8,-7,2],[10,-6,-5,2,-5,-8],[-10,-6,4,5,-5,7],[-9,-2,-8,2,2,-6],[-9,8,-1,-4,-5,-10],[-8,-10,-7,1,-2,4],[7,-9,-6,-7,5,10],[2,-7,-4,7,-9,7],[3,-3,2,6,-3,-8],[2,-5,-9,-3,9,-7],[4,-7,10,-8,-3,-8],[8,4,-3,-2,8,-1],[2,-9,1,-4,-9,-7],[-6,-1,-8,3,5,7],[10,2,-7,-4,-9,10],[8,-5,8,7,9,-10],[-7,2,10,1,-1,5],[-9,6,3,-6,-1,-9],[4,-2,2,-1,7,-2],[-3,7,7,1,-3,2],[5,7,2,7,-10,1],[3,2,5,6,-6,-3],[7,10,3,7,3,-5],[2,3,3,5,-5,-5],[-10,2,8,-2,9,6],[-6,-1,-7,-4,-8,-2],[-10,-8,-3,-7,6,2],[5,10,5,-8,-8,-10],[5,5,-10,6,-3,4],[7,-10,3,10,5,-1],[-3,1,-10,-6,4,8],[-8,5,1,9,3,3],[-1,-3,3,7,5,-7],[9,-9,5,-9,4,-4],[3,2,-3,1,10,-2],[-2,-8,9,3,1,2],[-9,-10,-3,9,8,-4],[-10,6,-1,-4,-9,9],[10,-5,3,-6,8,-7],[-10,9,-10,10,-9,10],[5,2,-6,2,-2,6],[6,-10,-10,7,3,-8],[10,1,-4,-9,2,-5],[-2,-4,-3,2,4,4],[-8,4,9,-4,-9,6],[5,4,-7,-8,5,-5],[-4,-10,10,-2,6,-10],[7,-2,7,4,3,1],[-7,7,3,-2,1,-7],[5,9,-7,-6,1,3],[-6,-1,-4,-7,3,3],[-7,7,5,1,5,-3],[7,7,7,-7,6,2],[-4,9,4,-7,6,-1],[8,-3,1,5,3,-7],[1,-3,-4,5,3,-7],[-7,-8,-8,4,-2,-1],[2,1,8,-8,-2,8],[-6,-7,-8,-6,9,-7],[-4,5,9,8,-9,-9],[-9,-10,7,-10,-2,4],[1,6,-5,-9,6,-4],[7,8,-3,7,-5,-4],[4,7,-8,5,-2,-1],[5,-3,-1,8,3,6],[-5,9,-1,-2,6,2],[-2,-5,-9,1,-4,5],[-5,5,-10,-3,5,7],[-4,2,10,-6,-10,-1],[7,1,6,9,10,9],[-7,7,4,-10,2,-2],[6,9,9,3,1,9],[1,-9,2,-2,-10,-2],[2,-5,-6,1,5,7],[9,1,-5,7,8,8],[-6,10,-7,10,-6,6],[-4,-5,-6,-2,-2,6],[3,5,1,-1,2,-5],[-6,10,2,6,-10,4],[3,2,-10,5,4,-7],[3,-4,-1,-4,3,-1],[-8,10,7,-6,9,8],[-6,5,2,7,-1,-8],[9,9,8,9,-6,5],[-3,6,1,-3,6,9],[1,-3,6,-5,5,-8],[-4,8,6,-5,-6,-2],[4,6,-7,-8,-10,1],[4,2,9,-2,-9,-7]], dtype = "int16")#candidate|5813|(600, 6)|const|int16
call_5812 = relay.TupleGetItem(func_3154_call(relay.reshape(const_5813.astype('int16'), [3600,])), 2)
call_5814 = relay.TupleGetItem(func_3156_call(relay.reshape(const_5813.astype('int16'), [3600,])), 2)
uop_5820 = relay.rsqrt(const_5813.astype('float64')) # shape=(600, 6)
output = relay.Tuple([call_5797,call_5812,uop_5820,])
output2 = relay.Tuple([call_5798,call_5814,uop_5820,])
func_5823 = relay.Function([], output)
mod['func_5823'] = func_5823
mod = relay.transform.InferType()(mod)
output = func_5823()
func_5824 = relay.Function([], output)
mutated_mod['func_5824'] = func_5824
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2412_call = mod.get_global_var('func_2412')
func_2414_call = mutated_mod.get_global_var('func_2414')
call_5831 = relay.TupleGetItem(func_2412_call(), 0)
call_5832 = relay.TupleGetItem(func_2414_call(), 0)
output = call_5831
output2 = call_5832
func_5840 = relay.Function([], output)
mod['func_5840'] = func_5840
mod = relay.transform.InferType()(mod)
mutated_mod['func_5840'] = func_5840
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5840_call = mutated_mod.get_global_var('func_5840')
call_5841 = func_5840_call()
output = call_5841
func_5842 = relay.Function([], output)
mutated_mod['func_5842'] = func_5842
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5418_call = mod.get_global_var('func_5418')
func_5419_call = mutated_mod.get_global_var('func_5419')
call_5851 = func_5418_call()
call_5852 = func_5418_call()
output = call_5851
output2 = call_5852
func_5865 = relay.Function([], output)
mod['func_5865'] = func_5865
mod = relay.transform.InferType()(mod)
output = func_5865()
func_5866 = relay.Function([], output)
mutated_mod['func_5866'] = func_5866
mutated_mod = relay.transform.InferType()(mutated_mod)
var_5898 = relay.var("var_5898", dtype = "float32", shape = (8, 14, 3))#candidate|5898|(8, 14, 3)|var|float32
uop_5899 = relay.tan(var_5898.astype('float32')) # shape=(8, 14, 3)
output = relay.Tuple([uop_5899,])
output2 = relay.Tuple([uop_5899,])
func_5907 = relay.Function([var_5898,], output)
mod['func_5907'] = func_5907
mod = relay.transform.InferType()(mod)
mutated_mod['func_5907'] = func_5907
mutated_mod = relay.transform.InferType()(mutated_mod)
var_5908 = relay.var("var_5908", dtype = "float32", shape = (8, 14, 3))#candidate|5908|(8, 14, 3)|var|float32
func_5907_call = mutated_mod.get_global_var('func_5907')
call_5909 = func_5907_call(var_5908)
output = call_5909
func_5910 = relay.Function([var_5908], output)
mutated_mod['func_5910'] = func_5910
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3707_call = mod.get_global_var('func_3707')
func_3708_call = mutated_mod.get_global_var('func_3708')
call_5926 = relay.TupleGetItem(func_3707_call(), 0)
call_5927 = relay.TupleGetItem(func_3708_call(), 0)
func_5466_call = mod.get_global_var('func_5466')
func_5471_call = mutated_mod.get_global_var('func_5471')
var_5947 = relay.var("var_5947", dtype = "int32", shape = (672,))#candidate|5947|(672,)|var|int32
const_5948 = relay.const([[10,-10,5,1,10,-5,1,-1,-8,6,5,-9,-10,5,-8,-3,2,-9,1,-8,-2,-1,-8,1,-5,3,7,-6,-4,-2,8,9,9,9,-10,4,-8,4,-7,-2,-2,-2,-7,-5,-1,-3,4,-9,2,6,2,5,-5,6,7,-2,-2,-7,5,8,-9,-5,5,-6,9,-10,-2,-1,-7,8,-4,3,7,3,-10,-9,3,1,-5,6,9,-7,2,-7,-4,5,7,1,7,-9,-6,7,-10,7,5,1,1,6,-5,-4,-10,-6,6,5,3,10,2,-9,4,-8,-1,-7,-9,8,8,5,-1,-8,-10,8,-9,-3,6,3,-9,-10,-2,-5,-2,6,-2,-1,-10,10,4,-3,8,3,-7,-3,7,-9,2,9,4,3,6,1,-3,-8,-10,-9,7,2,6,10,-9,-2,2,5,9,-4,-4,-1,-9,-5,9,7,5,8,7,5,-9,-8,-10,-9,-5,-2,-1,7,3,8,5,6,7,9,3,1,-1,-5,4,-10,10,-7,8,-10,5,10,3,7,-9,-5,2,-8,-5,-6,8,7,1,-8,5,7,-4,-9,3,9,2,-8,-10,-9,-9,3,2,-5,1,9,1,-7,5,4,-1,3,6,10,-8,-10,-4,6,10,-9,7,10,-6,-5,-2,10,-3,-1,-6,5,-9,-1,-8,1,8,-3,-7,-3,10,3,-8,-7,10,9,8,8,-3,-2,-5,10,-10,8,-6,10,10,7,-10,6,2,-4,3,8,2,-6,-3,-2,-9,-10,-3,2,6,9,6,6,3,8,3,-2,8,-1,6,1,6,-2,-4,2,4,5,-9,7,10,-9,-3,-7,-1,-1,-6,2,-6,10,-9,-9,4,-10,-7,-4,-2,2,-6,-6,9,-3,10,6,-8,-5,9,-9,-9,5,-5,3,-5,-5,-5,-7,-10,1,4,5,6,-10,-5,-9,7,10,-4,-1,9,-10,-9,-9,7,-9,9,-4,8,-9,4,-7,3,-5,2,8,4,-6,-6,1,8,4,-8,10,4,-8,9,-7,5,-1,-10,10,6,-8,-4,-6,1,-8,8,-4,1,-9,7,5,2,1,-5,-5,-9,-3,-3,5,-9,-2,3,9,8,-6,-6,7,7,9,8,-2,8,-10,-4,-5,-10,-10,-5,-8,-9,-5,5,2,-9,1,6,4,9,-2,-1,-8,6,-3,-10,-1,7,-3,-10,-4,7,-6,-9,8,-6,-4,9,-7,3,3,3,10,2,2,-10,2,-2,-2,-1,-10,3,4,-10,-7,1,4,-6,1,10,1,-8,9,3,2,4,-3,-7,-8,-7,10,7,-1,-10,2,-8,10,-7,-7,-4,8,-10,-4,-7,-4,1,6,7,10,2,7,-6,7,8,8,10,10,7,8,10,10,-7,-7,4,2,-1,7,8,5,-5,-7,-8,-6,1,-9,-8,-2,7,-9,-9,10,-10,1,8,-3,8,-9,-5,1,1,-8,-1,3,-10,-1,-3,-10,6,2,-7,9,3,2,-5,5,-3,6,-3,-1,3,-3,3,-1,7,4,-8,-9,-3,2,-4,-5,-2,-8,-9,-10,-1,9,8,-2,5,9,1,6,-9,-9,7,-9,-4,-4,7,7,6,-3,-8,-9,3,8,-6,-5,5,9,9,-1,-6,-7,-10,1,10,2,1,5,-7,-7,9,9,7,8,-5,-8,-5,-2,-9,4,-8,-1,6,-10,-9,10,-10,-2,7,2,10,-1,-5,1,-7,-5,-1,-4,2,-2,3,-9,-10,-8,4,7,10,-8,-2,-10,5,-5,-4,5,-3,9,8,-8,2,5,8,9,-9,-4,9,3,-1,-2,7,3,4,-7,3,-1,5,-10,-8,-2,7,10,-8,-9,1,-4,-7,-8,10,-3,5,7,-10,3,-7,4,9,-7,9,7,-7,8,-9,-7,4,-1,6,6,-6,-3,-4,-4,-3,3,9,1,1,2,-6,1,8,6,10,9,5,-9,-9,3,4,-3,3,8,3,-8,-8,-6,10,2,8,-8,-3,1,9,-5,9,5,4,-10,5,4,4,4,6,8,7,-4,-2,-4,10,-4,-9,-10,4,10,5,-5,-5,-7,-4,4,10,2,4,2,7,-10,-3,-1,-10,6,-6,8,-7,4,-9,-3,-8,-10,-4,6,-6,-10,-9,-8,4,6,-7,3,9,-7,6,5,6,-6,-8,2,1,7,-4,2,-10,-10,-3,3,10,10,8,10,1,-4,10,-6,-9,4,-9,3,-5,6,-8,9,7,-4,5,10,-3,6,2,6,-5,7,7,3,5,-9,10,-10,7,3,1,-9,-10,8,9,1,6,-7,-8,-4,-2,7,-3,9,3,4,-7,-6,2,-9,10,4,-8,9,-5,-2,-8,-9,5,2,1,-2,3,-7,4,5,-6,7,3,-1,-9,-5,1,9,-3,-2,9,5,3,-6,-8,8,1,7,1,2,10,-6,-1,-4,6,-1,1,-8,9,-1,6,-8,-3,10,-2,4,2,-2,-7,-9,6,9,-7,-4,-2,3,2,-4,8,-1,-10,2,-8,-5,5,-9,6,-10,6,3,-9,-5,-10,8,-7,-6,-5,-7,5,10,-7,-10,-9,-8,-4,-3,7,-4,7,3,-10,-10,-9,1,-8,3,10,-10,4,1,9,1,-2,-3,6,4,6,2,-1,-1,-4,6,-10,10,-6,-1,7,-1,6,9,-3,-7,-8,-6,2,10,2,9,-4,-5,3,3,10,8,-1,6,-1,3,-4,8,8,3,4,1,2,-6,4,5,-7,-9,-2,-4,-2,4,-8,3,10,6,-9,-2,7,-7,1,-6,-7,-9,-2,3,10,9,2,5,-7,8,10,-8,-9,-7,-7,9,7,-2,-2,2,-2,1,-10,-6,5,-2,3,1,5,2,-8,3,-2,-4,-9,6,5,5,-2,-2,-4,-4,-6,-1,-1,-10,-8,6,-7,-2,-7,8,-4,7,6,6,6,9,5,3,-4,6,-6,-10,3,9,-10,9,-10,1,8,7,7,7,5,7,3,-1,-6,-1,-5,-6,-5,-9,3,-10,9,-8,3,-10,7,10,-3,-8,4,-7,-10,-3,9,-2,4,-7,9,-1,1,5,-1,8,7,-4,-5,-9,-5,2,4,10,5,-3,3,9,7,3,-8,-3,-9,6,-7,1,-7,6,4,-1,3,5,10,-9,-9,-7,5,4,5,8,-4,4,1,-5,5,-3,-10,4,4,6,-6,-10,3,5,-3,9,-1,3,2,6,-1,-8,9,10,-5,-9,-9,4,-5,1,-1,7,3,3,-5,-5,-9,-9,4,4,-6,-2,1,7,4,-4,-8,6,-3,9,9,-6,8,7,-5,-3,5,5,1,4,10,8,-10,-1,5,-3,-7,-3,6,-9,2,-1,-7,-2,8,4,5,8,-8,8,-9,8,-2,1,2,9,3,-10,4,-9,-10,-2,6,-10,-7,10,1,-3,10,1,5,-5,-9,9,8,10,2,1,-10,-4,9,-4,-3,-3,1,6,-7,-2,-7,2,10,1,3,-2,5,9,-10,-6,10,-8,7,-6,-7,9,-3,9,-4,-5,-4,-10,-3,-5,-4,5,-2,6,9,2,-2,9,-5,-9,9,-5,-3,4,-4,6,-1,1,-6,-1,-10,-10,-5,10,-7,8,-4,-9,-8,10,3,1,9,-5,10,9,-10,-4,7,-4,2,-8,-5,-1,3,6,-9,8,-2,2,-3,-3,9,-8,9,1,-2,-8,-10,-1,-2,7,-7,-1,1,10,-6,5,-10,4,-4,3,-5,-4,-7,6,-3,3,9,8,9,2,-3,-3,-3,-4,-1,5,-5,-1,-6,-4,-9,9,-10,7,-5,5,9,2,-4,-9,1,-2,-6,1,-9,1,5,-7,-8,-6,-7,-2,-8,10,-9,6,-4,-10,-1,-2,-7,10,4,-7,-6,-5,4,1,2,-4,10,-2,-10,7,-3,-2,4,4,-3,-10,4,4,-3,-1,-4,-5,-5,-3,1,-6,10,7,-4,-4,2,6,9,5,4,-8,-1,7,4,-2,-1,-7,8,7,-5,-1,-2,2,-8,7,2,-2,-10,8,-8,-7,1,-10,-10,-3,5,-9,-2,10,9,-1,5,-4,10,-9,4,-7,-1,-6,-3,5,2,7,-6,-1,4,-6,3,4,-3,2,-8,-4,6,-2,-6,7,1,-1,10,-4,4,-3,-1,2,9,-3,5,-10,7,9,8,-3,-9,6,6,4,-9,1,-6,-3,-9,6,6,-4,-7,-6,1,2,4,9,-9,4,-2,9,7,4,10,1,-7,9,-10,-7,-4,10,8,-2,2,6,-8,-3,8,-3,9,-4,-9,-10,-8,9,-5,-2,8,-1,-9,-6,3,3,9,8,10,-6,-5,-9,3,-6,6,-1,-3,7,-1,-8,2,-4,7,-3,-5,7,5,-4,-5,7,8,8,-2,3,7,10,5,2,-7,1,4,-6,6,-9,10,-4,4,2,-6,3]], dtype = "uint16")#candidate|5948|(1, 1664)|const|uint16
call_5946 = relay.TupleGetItem(func_5466_call(relay.reshape(var_5947.astype('int32'), [8, 7, 12]), relay.reshape(var_5947.astype('int32'), [8, 7, 12]), relay.reshape(const_5948.astype('uint16'), [52, 32]), ), 0)
call_5949 = relay.TupleGetItem(func_5471_call(relay.reshape(var_5947.astype('int32'), [8, 7, 12]), relay.reshape(var_5947.astype('int32'), [8, 7, 12]), relay.reshape(const_5948.astype('uint16'), [52, 32]), ), 0)
var_5970 = relay.var("var_5970", dtype = "uint16", shape = (12, 1664))#candidate|5970|(12, 1664)|var|uint16
bop_5971 = relay.greater_equal(const_5948.astype('bool'), var_5970.astype('bool')) # shape=(12, 1664)
func_3707_call = mod.get_global_var('func_3707')
func_3708_call = mutated_mod.get_global_var('func_3708')
call_5992 = relay.TupleGetItem(func_3707_call(), 0)
call_5993 = relay.TupleGetItem(func_3708_call(), 0)
var_6029 = relay.var("var_6029", dtype = "uint16", shape = (12, 1664))#candidate|6029|(12, 1664)|var|uint16
bop_6030 = relay.left_shift(var_5970.astype('int16'), relay.reshape(var_6029.astype('int16'), relay.shape_of(var_5970))) # shape=(12, 1664)
func_4433_call = mod.get_global_var('func_4433')
func_4434_call = mutated_mod.get_global_var('func_4434')
call_6043 = relay.TupleGetItem(func_4433_call(), 0)
call_6044 = relay.TupleGetItem(func_4434_call(), 0)
uop_6045 = relay.acosh(const_5948.astype('float64')) # shape=(1, 1664)
output = relay.Tuple([call_5926,call_5946,var_5947,bop_5971,call_5992,bop_6030,call_6043,uop_6045,])
output2 = relay.Tuple([call_5927,call_5949,var_5947,bop_5971,call_5993,bop_6030,call_6044,uop_6045,])
func_6049 = relay.Function([var_5947,var_5970,var_6029,], output)
mod['func_6049'] = func_6049
mod = relay.transform.InferType()(mod)
mutated_mod['func_6049'] = func_6049
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6049_call = mutated_mod.get_global_var('func_6049')
var_6051 = relay.var("var_6051", dtype = "int32", shape = (672,))#candidate|6051|(672,)|var|int32
var_6052 = relay.var("var_6052", dtype = "uint16", shape = (12, 1664))#candidate|6052|(12, 1664)|var|uint16
var_6053 = relay.var("var_6053", dtype = "uint16", shape = (12, 1664))#candidate|6053|(12, 1664)|var|uint16
call_6050 = func_6049_call(var_6051,var_6052,var_6053,)
output = call_6050
func_6054 = relay.Function([var_6051,var_6052,var_6053,], output)
mutated_mod['func_6054'] = func_6054
mutated_mod = relay.transform.InferType()(mutated_mod)
const_6065 = relay.const([[[4.917332,-6.231624],[-1.148463,8.424897],[4.379522,5.531716],[-4.690696,-0.445702],[-9.292304,-6.931241]],[[-0.545771,9.151052],[-2.657219,-4.290686],[8.815474,-3.577825],[-6.980318,-2.679167],[-0.076840,-6.601122]],[[1.475700,1.145394],[-0.695862,1.980465],[4.286362,0.983946],[-3.794153,2.810602],[4.038819,2.234261]],[[7.876861,-0.260925],[6.775225,1.275891],[-6.683993,3.874006],[5.889335,9.103859],[4.300193,-6.490463]],[[1.338578,-7.473057],[-8.240161,-7.182144],[7.167665,-3.061426],[5.283768,-7.901517],[-2.569299,-1.654841]],[[0.456115,-9.078879],[5.479493,2.012102],[-1.068460,7.158396],[8.405504,8.416783],[-2.086835,7.110188]],[[-8.221955,-4.024355],[-3.330174,-9.699477],[-5.924184,0.156774],[-6.322871,1.115125],[-3.128244,-6.935801]],[[-0.493627,-0.563926],[0.929703,-5.431527],[2.200988,8.238395],[9.302796,-1.559940],[5.459742,-8.362832]],[[3.466237,2.909700],[-0.019251,1.333310],[8.580128,1.805028],[-7.438424,3.081620],[-1.748849,0.562071]],[[-4.259102,6.307260],[-3.030865,9.647937],[-0.801201,-6.850877],[-0.435029,6.535650],[-4.732588,4.016630]],[[1.778177,2.542559],[-2.338523,9.469672],[-4.589147,-2.649433],[-7.763193,2.759608],[1.053246,-4.268811]],[[-9.363959,-5.742972],[-1.940036,4.874050],[-4.925641,2.029419],[-3.090459,7.553557],[9.945609,9.158046]],[[3.073848,-1.505910],[4.012447,5.320575],[3.251148,-2.552094],[-6.752629,-2.508132],[-1.756473,2.636888]],[[-5.319854,-7.204386],[4.085400,4.953744],[6.936406,2.006696],[-6.358637,-2.265813],[2.390621,2.634677]],[[3.708243,-9.535199],[-1.741496,-8.198273],[2.533629,1.098366],[-5.342602,-0.964544],[-8.857006,8.147363]]], dtype = "float64")#candidate|6065|(15, 5, 2)|const|float64
uop_6066 = relay.log2(const_6065.astype('float64')) # shape=(15, 5, 2)
bop_6071 = relay.maximum(const_6065.astype('int16'), relay.reshape(uop_6066.astype('int16'), relay.shape_of(const_6065))) # shape=(15, 5, 2)
output = relay.Tuple([bop_6071,])
output2 = relay.Tuple([bop_6071,])
F = relay.Function([], output)
mod['main'] = F
mod = relay.transform.InferType()(mod)
print('==========mod==========')
print(mod.astext(show_meta_data=False))
print('===================================')
F = relay.Function([], output2)
mutated_mod['main'] = F
mutated_mod = relay.transform.InferType()(mutated_mod)
print('==========mutated_mod==========')
print(mutated_mod.astext(show_meta_data=False))
print('===================================')
graph, lib, params = relay.build(mod, target='llvm')
module1 = graph_runtime.create(graph, lib, tvm.device('llvm',0))
intrp2 = relay.build_module.create_executor('graph', mod, tvm.device('llvm',0),'llvm')
intrp3 = relay.build_module.create_executor('debug', mod, tvm.device('llvm',0),'llvm')
intrp4 = relay.build_module.create_executor('vm', mod, tvm.device('llvm',0),'llvm')
graph, lib, params = relay.build(mod, target='cuda')
module5 = graph_runtime.create(graph, lib, tvm.device('cuda',0))
intrp6 = relay.build_module.create_executor('graph', mod, tvm.device('cuda',0),'cuda')
intrp7 = relay.build_module.create_executor('debug', mod, tvm.device('cuda',0),'cuda')
intrp8 = relay.build_module.create_executor('vm', mod, tvm.device('cuda',0),'cuda')
seq = Sequential([
	relay.transform.AlterOpLayout(),
	relay.transform.AnnotateSpans(),
	relay.transform.BatchingOps(),
	relay.transform.CanonicalizeCast(),
])
mod = seq(mod)
print(mod.astext(show_meta_data=False))
graph, lib, params = relay.build(mod, target='llvm')
module9 = graph_runtime.create(graph, lib, tvm.device('llvm',0))
intrp10 = relay.build_module.create_executor('graph', mod, tvm.device('llvm',0),'llvm')
intrp11 = relay.build_module.create_executor('debug', mod, tvm.device('llvm',0),'llvm')
intrp12 = relay.build_module.create_executor('vm', mod, tvm.device('llvm',0),'llvm')
graph, lib, params = relay.build(mod, target='cuda')
module13 = graph_runtime.create(graph, lib, tvm.device('cuda',0))
intrp14 = relay.build_module.create_executor('graph', mod, tvm.device('cuda',0),'cuda')
intrp15 = relay.build_module.create_executor('debug', mod, tvm.device('cuda',0),'cuda')
intrp16 = relay.build_module.create_executor('vm', mod, tvm.device('cuda',0),'cuda')
graph, lib, params = relay.build(mutated_mod, target='llvm')
module17 = graph_runtime.create(graph, lib, tvm.device('llvm',0))
intrp18 = relay.build_module.create_executor('graph', mutated_mod, tvm.device('llvm',0),'llvm')
intrp19 = relay.build_module.create_executor('debug', mutated_mod, tvm.device('llvm',0),'llvm')
intrp20 = relay.build_module.create_executor('vm', mutated_mod, tvm.device('llvm',0),'llvm')
graph, lib, params = relay.build(mutated_mod, target='cuda')
module21 = graph_runtime.create(graph, lib, tvm.device('cuda',0))
intrp22 = relay.build_module.create_executor('graph', mutated_mod, tvm.device('cuda',0),'cuda')
intrp23 = relay.build_module.create_executor('debug', mutated_mod, tvm.device('cuda',0),'cuda')
intrp24 = relay.build_module.create_executor('vm', mutated_mod, tvm.device('cuda',0),'cuda')

==========mod==========
#[version = "0.0.5"]
def @func_3267(%var_3263: Tensor[(45), float64]) -> (Tensor[(12, 3, 10), float32], Tensor[(12, 3, 10), float32], Tensor[(5, 7, 9), float32], Tensor[(45), float64]) {
  %0 = @func_2660() /* ty=(Tensor[(12, 3, 10), float32], Tensor[(12, 3, 10), float32], Tensor[(12, 3, 10), float32], Tensor[(512), int32]) */;
  %1 = cast(%var_3263, dtype="float64") /* ty=Tensor[(45), float64] */;
  %2 = reshape(%1, newshape=[1, 45]) /* ty=Tensor[(1, 45), float64] */;
  %3 = @func_1323(%2) /* ty=(Tensor[(5, 7, 9), float32], Tensor[(5, 7, 9), bool], Tensor[(45, 1), float64], Tensor[(120), uint32], Tensor[(1, 45), float64], Tensor[(5, 7, 9), int8], Tensor[(21, 4), bool], Tensor[(320), float32], Tensor[(2, 14, 3), float64]) */;
  %4 = %0.0;
  %5 = @func_807() /* ty=Tensor[(12, 3, 10), float32] */;
  %6 = %3.0;
  (%4, %5, %6, %var_3263)
}

def @func_644() -> (Tensor[(5, 7, 9), bool], Tensor[(12, 3, 10), int8], Tensor[(360), float32], Tensor[(5, 7, 9), bool], Tensor[(5, 7, 9), bool], Tensor[(45), float64], Tensor[(12, 3, 10), int8]) {
  %7 = @func_385() /* ty=(Tensor[(45), float64], Tensor[(5, 7, 9), bool]) */;
  %8 = cast(meta[relay.Constant][0] /* ty=Tensor[(360), float32] */, dtype="float32") /* ty=Tensor[(360), float32] */;
  %9 = reshape(%8, newshape=[12, 3, 10]) /* ty=Tensor[(12, 3, 10), float32] */;
  %10 = @func_385() /* ty=(Tensor[(45), float64], Tensor[(5, 7, 9), bool]) */;
  %11 = @func_271() /* ty=(Tensor[(12, 3, 10), float32], Tensor[(5, 7, 9), bool], Tensor[(45), float64]) */;
  %12 = @func_385() /* ty=(Tensor[(45), float64], Tensor[(5, 7, 9), bool]) */;
  %13 = cast(meta[relay.Constant][0] /* ty=Tensor[(360), float32] */, dtype="float32") /* ty=Tensor[(360), float32] */;
  %14 = reshape(%13, newshape=[12, 3, 10]) /* ty=Tensor[(12, 3, 10), float32] */;
  %15 = %7.1;
  %16 = @func_480(%9) /* ty=Tensor[(12, 3, 10), int8] */;
  %17 = %10.1;
  %18 = %11.1;
  %19 = %12.0;
  %20 = @func_480(%14) /* ty=Tensor[(12, 3, 10), int8] */;
  (%15, %16, meta[relay.Constant][0] /* ty=Tensor[(360), float32] */, %17, %18, %19, %20)
}

def @func_7677() -> (Tensor[(12, 3, 10), float32],) {
  %21 = @func_5158() /* ty=Tensor[(12, 3, 10), float32] */;
  (%21,)
}

def @func_3278() -> Tensor[(12, 3, 10), float32] {
  @func_459() /* ty=Tensor[(12, 3, 10), float32] */
}

def @func_892(%var_876: Tensor[(12, 3, 10), float64]) -> (Tensor[(12, 3, 10), int32], Tensor[(12, 3, 10), float32]) {
  %22 = @func_739() /* ty=Tensor[(12, 3, 10), float32] */;
  %23 = cast(%22, dtype="float64") /* ty=Tensor[(12, 3, 10), float64] */;
  %24 = sin(%23) /* ty=Tensor[(12, 3, 10), float64] */;
  %25 = cast(%var_876, dtype="int32") /* ty=Tensor[(12, 3, 10), int32] */;
  %26 = shape_of(%24, dtype="int32") /* ty=Tensor[(3), int32] */;
  %27 = cast(%24, dtype="int32") /* ty=Tensor[(12, 3, 10), int32] */;
  %28 = dyn.reshape(%25, %26, newshape=[]) /* ty=Tensor[(?, ?, ?), int32] */;
  %29 = @func_583() /* ty=(Tensor[(12, 3, 10), float32],) */;
  %30 = right_shift(%27, %28) /* ty=Tensor[(12, 3, 10), int32] */;
  %31 = %29.0;
  (%30, %31)
}

def @func_7647() -> Tensor[(5, 7, 9), bool] {
  %32 = @func_4119() /* ty=(Tensor[(5, 7, 9), bool],) */;
  %32.0
}

def @func_8546() -> (Tensor[(12, 3, 10), float32], Tensor[(12, 3, 10), float32]) {
  %33 = @func_721() /* ty=(Tensor[(12, 3, 10), float32],) */;
  %34 = @func_3882() /* ty=(Tensor[(12, 3, 10), float32], Tensor[(12, 3, 10), float32]) */;
  %35 = %33.0;
  %36 = %34.1;
  (%35, %36)
}

def @func_5000(%var_4994: Tensor[(13, 4, 11), float32]) -> Tensor[(13, 4, 11), float32] {
  %37 = cast(%var_4994, dtype="float32") /* ty=Tensor[(13, 4, 11), float32] */;
  asin(%37) /* ty=Tensor[(13, 4, 11), float32] */
}

def @func_3413() -> (Tensor[(45), float64],) {
  %38 = @func_2833() /* ty=Tensor[(45), float64] */;
  (%38,)
}

def @func_4037() -> (Tensor[(45), float64], Tensor[(12, 3, 10), float32]) {
  %39 = @func_1658() /* ty=Tensor[(45), float64] */;
  %40 = cast(%39, dtype="float64") /* ty=Tensor[(45), float64] */;
  %41 = @func_1137() /* ty=(Tensor[(12, 3, 10), float32],) */;
  %42 = cos(%40) /* ty=Tensor[(45), float64] */;
  %43 = %41.0;
  (%42, %43)
}

def @func_176(%var_171: Tensor[(5, 1, 9), float64]) -> Tensor[(5, 7, 9), bool] {
  %44 = cast(%var_171, dtype="bool") /* ty=Tensor[(5, 1, 9), bool] */;
  %45 = cast(meta[relay.Constant][1] /* ty=Tensor[(5, 7, 9), float64] */, dtype="bool") /* ty=Tensor[(5, 7, 9), bool] */;
  less_equal(%44, %45) /* ty=Tensor[(5, 7, 9), bool] */
}

def @func_5048() -> (Tensor[(12, 3, 10), float32],) {
  %46 = @func_459() /* ty=Tensor[(12, 3, 10), float32] */;
  (%46,)
}

def @func_5337(%var_5307: Tensor[(12, 3, 10), float32], %var_5321: Tensor[(45), float64]) -> (Tensor[(12, 3, 10), uint32], Tensor[(45), float64], Tensor[(45), float64], Tensor[(12, 3, 10), float32]) {
  %47 = @func_459() /* ty=Tensor[(12, 3, 10), float32] */;
  %48 = cast(%var_5307, dtype="uint32") /* ty=Tensor[(12, 3, 10), uint32] */;
  %49 = shape_of(%47, dtype="int32") /* ty=Tensor[(3), int32] */;
  %50 = cast(%47, dtype="uint32") /* ty=Tensor[(12, 3, 10), uint32] */;
  %51 = dyn.reshape(%48, %49, newshape=[]) /* ty=Tensor[(?, ?, ?), uint32] */;
  %52 = cast(%var_5321, dtype="float64") /* ty=Tensor[(45), float64] */;
  %53 = reshape(%52, newshape=[45]) /* ty=Tensor[(45), float64] */;
  %54 = @func_3267(%53) /* ty=(Tensor[(12, 3, 10), float32], Tensor[(12, 3, 10), float32], Tensor[(5, 7, 9), float32], Tensor[(45), float64]) */;
  %55 = cast(%47, dtype="float32") /* ty=Tensor[(12, 3, 10), float32] */;
  %56 = shape_of(%var_5307, dtype="int32") /* ty=Tensor[(3), int32] */;
  %57 = cast(%var_5307, dtype="float32") /* ty=Tensor[(12, 3, 10), float32] */;
  %58 = dyn.reshape(%55, %56, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %59 = subtract(%50, %51) /* ty=Tensor[(12, 3, 10), uint32] */;
  %60 = %54.3;
  %61 = mod(%57, %58) /* ty=Tensor[(12, 3, 10), float32] */;
  (%59, %60, %var_5321, %61)
}

def @func_5728() -> Tensor[(45), float64] {
  %62 = @func_4934() /* ty=(Tensor[(45), float64],) */;
  %63 = %62.0;
  %64 = cast(%63, dtype="float64") /* ty=Tensor[(45), float64] */;
  sqrt(%64) /* ty=Tensor[(45), float64] */
}

def @func_8620() -> (Tensor[(12, 3, 10), float32], Tensor[(5, 7, 9), bool]) {
  %65 = @func_4133() /* ty=Tensor[(12, 3, 10), float32] */;
  %66 = @func_6072() /* ty=Tensor[(5, 7, 9), bool] */;
  (%65, %66)
}

def @func_1996() -> (Tensor[(12, 3, 10), float32], Tensor[(12, 3, 10), float32]) {
  %67 = @func_1479() /* ty=(Tensor[(12, 3, 10), float32], Tensor[(12, 3, 10), int8], Tensor[(5, 7, 9), bool], Tensor[(12, 3, 10), float32], Tensor[(12, 3, 10), float64], Tensor[(12, 3, 10), float32], Tensor[(12, 3, 10), float32], Tensor[(12, 3, 10), float32]) */;
  %68 = @func_739() /* ty=Tensor[(12, 3, 10), float32] */;
  %69 = %67.6;
  (%68, %69)
}

def @func_1867(%var_1860: Tensor[(5, 5, 6), int64], %var_1861: Tensor[(5, 5, 6), int64]) -> (Tensor[(5, 5, 6), int64],) {
  %70 = cast(%var_1861, dtype="int64") /* ty=Tensor[(5, 5, 6), int64] */;
  %71 = shape_of(%var_1860, dtype="int32") /* ty=Tensor[(3), int32] */;
  %72 = cast(%var_1860, dtype="int64") /* ty=Tensor[(5, 5, 6), int64] */;
  %73 = dyn.reshape(%70, %71, newshape=[]) /* ty=Tensor[(?, ?, ?), int64] */;
  %74 = bitwise_xor(%72, %73) /* ty=Tensor[(5, 5, 6), int64] */;
  (%74,)
}

def @func_4266() -> (Tensor[(12, 3, 10), float32], Tensor[(12, 3, 10), float32], Tensor[(5, 7, 9), bool]) {
  %75 = @func_4050() /* ty=(Tensor[(12, 3, 10), float32], Tensor[(12, 3, 10), float32]) */;
  %76 = @func_3998() /* ty=(Tensor[(5, 7, 9), bool],) */;
  %77 = %75.1;
  %78 = @func_2884() /* ty=Tensor[(12, 3, 10), float32] */;
  %79 = %76.0;
  (%77, %78, %79)
}

def @func_7390() -> Tensor[(12, 3, 10), float32] {
  @func_5687() /* ty=Tensor[(12, 3, 10), float32] */
}

def @func_9376() -> (Tensor[(16, 16, 16), float64],) {
  %80 = @func_8404() /* ty=(Tensor[(16, 16, 16), float32],) */;
  %81 = %80.0;
  %82 = cast(%81, dtype="float64") /* ty=Tensor[(16, 16, 16), float64] */;
  %83 = cos(%82) /* ty=Tensor[(16, 16, 16), float64] */;
  (%83,)
}

def @func_1927(%var_1906: Tensor[(12, 15, 5), float32], %var_1922: Tensor[(360), float32]) -> (Tensor[(12, 15, 5), float32], Tensor[(5, 7, 9), bool], Tensor[(12, 3, 10), int8], Tensor[(360), float32], Tensor[(12, 3, 10), float32]) {
  %84 = cast(%var_1906, dtype="float32") /* ty=Tensor[(12, 15, 5), float32] */;
  %85 = @func_1182() /* ty=(Tensor[(5, 7, 9), bool],) */;
  %86 = cast(%var_1922, dtype="float32") /* ty=Tensor[(360), float32] */;
  %87 = reshape(%86, newshape=[12, 3, 10]) /* ty=Tensor[(12, 3, 10), float32] */;
  %88 = @func_271() /* ty=(Tensor[(12, 3, 10), float32], Tensor[(5, 7, 9), bool], Tensor[(45), float64]) */;
  %89 = tan(%84) /* ty=Tensor[(12, 15, 5), float32] */;
  %90 = %85.0;
  %91 = @func_480(%87) /* ty=Tensor[(12, 3, 10), int8] */;
  %92 = %88.0;
  (%89, %90, %91, %var_1922, %92)
}

def @func_9142() -> (Tensor[(5, 5, 6), float64],) {
  %93 = @func_8776() /* ty=(Tensor[(5, 5, 6), float64],) */;
  %94 = %93.0;
  (%94,)
}

def @func_2833() -> Tensor[(45), float64] {
  @func_1658() /* ty=Tensor[(45), float64] */
}

def @func_5895() -> (Tensor[(5, 5, 6), int64],) {
  %95 = @func_4694() /* ty=(Tensor[(12, 3, 10), float32], Tensor[(45), float64], Tensor[(5, 5, 6), int64], Tensor[(150), int64], Tensor[(12, 3, 10), float32], Tensor[(45), float64]) */;
  %96 = %95.2;
  (%96,)
}

def @func_6744(%var_6733: Tensor[(120), float32]) -> (Tensor[(12, 3, 10), float32], Tensor[(5, 3, 8), float32], Tensor[(120), float32]) {
  %97 = cast(%var_6733, dtype="float32") /* ty=Tensor[(120), float32] */;
  %98 = cast(%var_6733, dtype="float32") /* ty=Tensor[(120), float32] */;
  %99 = reshape(%97, newshape=[5, 3, 8]) /* ty=Tensor[(5, 3, 8), float32] */;
  %100 = reshape(%98, newshape=[5, 3, 8]) /* ty=Tensor[(5, 3, 8), float32] */;
  %101 = @func_4657(%99, %100) /* ty=(Tensor[(5, 3, 8), float32], Tensor[(5, 3, 8), float64]) */;
  %102 = @func_459() /* ty=Tensor[(12, 3, 10), float32] */;
  %103 = %101.0;
  (%102, %103, %var_6733)
}

def @func_6779() -> (Tensor[(12, 3, 10), float32], Tensor[(12, 3, 10), float32], Tensor[(10, 10, 15), float64]) {
  %104 = @func_1779() /* ty=(Tensor[(12, 3, 10), float32],) */;
  %105 = @func_5139() /* ty=(Tensor[(12, 3, 10), float32], Tensor[(12, 3, 10), float32], Tensor[(10, 10, 15), float64], Tensor[(750, 2), float64], Tensor[(120), uint32]) */;
  %106 = @func_4133() /* ty=Tensor[(12, 3, 10), float32] */;
  %107 = %104.0;
  %108 = %105.2;
  (%106, %107, %108)
}

def @func_1611(%var_1587: Tensor[(4, 8, 16), int32], %var_1588: Tensor[(4, 8, 16), int32]) -> (Tensor[(4, 8, 16), int32], Tensor[(5, 7, 9), bool]) {
  %109 = cast(%var_1588, dtype="int32") /* ty=Tensor[(4, 8, 16), int32] */;
  %110 = shape_of(%var_1587, dtype="int32") /* ty=Tensor[(3), int32] */;
  %111 = cast(%var_1587, dtype="int32") /* ty=Tensor[(4, 8, 16), int32] */;
  %112 = dyn.reshape(%109, %110, newshape=[]) /* ty=Tensor[(?, ?, ?), int32] */;
  %113 = @func_1479() /* ty=(Tensor[(12, 3, 10), float32], Tensor[(12, 3, 10), int8], Tensor[(5, 7, 9), bool], Tensor[(12, 3, 10), float32], Tensor[(12, 3, 10), float64], Tensor[(12, 3, 10), float32], Tensor[(12, 3, 10), float32], Tensor[(12, 3, 10), float32]) */;
  %114 = bitwise_xor(%111, %112) /* ty=Tensor[(4, 8, 16), int32] */;
  %115 = %113.2;
  (%114, %115)
}

def @func_5180() -> (Tensor[(5, 7, 9), float64],) {
  %116 = @func_3998() /* ty=(Tensor[(5, 7, 9), bool],) */;
  %117 = %116.0;
  %118 = cast(%117, dtype="float64") /* ty=Tensor[(5, 7, 9), float64] */;
  %119 = log(%118) /* ty=Tensor[(5, 7, 9), float64] */;
  (%119,)
}

def @func_7964() -> (Tensor[(5, 7, 9), bool], Tensor[(12, 3, 10), float32]) {
  %120 = @func_3371() /* ty=Tensor[(5, 7, 9), bool] */;
  %121 = @func_7390() /* ty=Tensor[(12, 3, 10), float32] */;
  (%120, %121)
}

def @func_2660() -> (Tensor[(12, 3, 10), float32], Tensor[(12, 3, 10), float32], Tensor[(12, 3, 10), float32], Tensor[(512), int32]) {
  %122 = @func_583() /* ty=(Tensor[(12, 3, 10), float32],) */;
  %123 = @func_331() /* ty=(Tensor[(12, 3, 10), float32],) */;
  %124 = cast(meta[relay.Constant][2] /* ty=Tensor[(512), int32] */, dtype="int32") /* ty=Tensor[(512), int32] */;
  %125 = cast(meta[relay.Constant][2] /* ty=Tensor[(512), int32] */, dtype="float32") /* ty=Tensor[(512), float32] */;
  %126 = reshape(%124, newshape=[2, 256]) /* ty=Tensor[(2, 256), int32] */;
  %127 = reshape(%125, newshape=[2, 256]) /* ty=Tensor[(2, 256), float32] */;
  %128 = @func_1764(%126, %127) /* ty=(Tensor[(12, 3, 10), float32], Tensor[(5, 7, 9), bool], Tensor[(5, 7, 9), bool], Tensor[(2, 256), uint8]) */;
  %129 = %122.0;
  %130 = %123.0;
  %131 = %128.0;
  (%129, %130, %131, meta[relay.Constant][2] /* ty=Tensor[(512), int32] */)
}

def @func_8001() -> Tensor[(5, 7, 9), bool] {
  %132 = @func_5588() /* ty=(Tensor[(12, 3, 10), float32], Tensor[(5, 7, 9), bool]) */;
  %132.1
}

def @func_777(%var_760: Tensor[(3, 8, 5), uint32]) -> (Tensor[(3, 8, 5), uint32], Tensor[(3, 8, 5), bool]) {
  %133 = cast(%var_760, dtype="uint32") /* ty=Tensor[(3, 8, 5), uint32] */;
  %134 = shape_of(meta[relay.Constant][3] /* ty=Tensor[(3, 8, 5), uint32] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %135 = cast(meta[relay.Constant][3] /* ty=Tensor[(3, 8, 5), uint32] */, dtype="uint32") /* ty=Tensor[(3, 8, 5), uint32] */;
  %136 = dyn.reshape(%133, %134, newshape=[]) /* ty=Tensor[(?, ?, ?), uint32] */;
  %137 = cast(meta[relay.Constant][3] /* ty=Tensor[(3, 8, 5), uint32] */, dtype="bool") /* ty=Tensor[(3, 8, 5), bool] */;
  %138 = shape_of(%var_760, dtype="int32") /* ty=Tensor[(3), int32] */;
  %139 = cast(%var_760, dtype="bool") /* ty=Tensor[(3, 8, 5), bool] */;
  %140 = dyn.reshape(%137, %138, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %141 = multiply(%135, %136) /* ty=Tensor[(3, 8, 5), uint32] */;
  %142 = not_equal(%139, %140) /* ty=Tensor[(3, 8, 5), bool] */;
  (%141, %142)
}

def @func_8057() -> (Tensor[(45), float64],) {
  %143 = @func_4636() /* ty=(Tensor[(45), float64],) */;
  %144 = %143.0;
  (%144,)
}

def @func_3371() -> Tensor[(5, 7, 9), bool] {
  @func_1150() /* ty=Tensor[(5, 7, 9), bool] */
}

def @func_9334() -> (Tensor[(5, 7, 9), float32], Tensor[(512), float64]) {
  %145 = @func_8175() /* ty=(Tensor[(5, 7, 9), float32], Tensor[(5, 7, 9), bool], Tensor[(45), float64]) */;
  %146 = @func_2660() /* ty=(Tensor[(12, 3, 10), float32], Tensor[(12, 3, 10), float32], Tensor[(12, 3, 10), float32], Tensor[(512), int32]) */;
  %147 = %146.3;
  %148 = cast(%147, dtype="float64") /* ty=Tensor[(512), float64] */;
  %149 = %145.0;
  %150 = cos(%148) /* ty=Tensor[(512), float64] */;
  (%149, %150)
}

def @func_4050() -> (Tensor[(12, 3, 10), float32], Tensor[(12, 3, 10), float32]) {
  %151 = @func_791() /* ty=Tensor[(12, 3, 10), float32] */;
  %152 = @func_807() /* ty=Tensor[(12, 3, 10), float32] */;
  (%151, %152)
}

def @func_4694() -> (Tensor[(12, 3, 10), float32], Tensor[(45), float64], Tensor[(5, 5, 6), int64], Tensor[(150), int64], Tensor[(12, 3, 10), float32], Tensor[(45), float64]) {
  %153 = @func_1137() /* ty=(Tensor[(12, 3, 10), float32],) */;
  %154 = cast(meta[relay.Constant][4] /* ty=Tensor[(150), int64] */, dtype="int64") /* ty=Tensor[(150), int64] */;
  %155 = cast(meta[relay.Constant][4] /* ty=Tensor[(150), int64] */, dtype="int64") /* ty=Tensor[(150), int64] */;
  %156 = reshape(%154, newshape=[5, 5, 6]) /* ty=Tensor[(5, 5, 6), int64] */;
  %157 = reshape(%155, newshape=[5, 5, 6]) /* ty=Tensor[(5, 5, 6), int64] */;
  %158 = @func_1867(%156, %157) /* ty=(Tensor[(5, 5, 6), int64],) */;
  %159 = @func_3882() /* ty=(Tensor[(12, 3, 10), float32], Tensor[(12, 3, 10), float32]) */;
  %160 = %153.0;
  %161 = @func_2796() /* ty=Tensor[(45), float64] */;
  %162 = %158.0;
  %163 = %159.0;
  %164 = @func_3532() /* ty=Tensor[(45), float64] */;
  (%160, %161, %162, meta[relay.Constant][4] /* ty=Tensor[(150), int64] */, %163, %164)
}

def @func_1764(%var_1708: Tensor[(2, 256), int32], %var_1757: Tensor[(2, 256), float32]) -> (Tensor[(12, 3, 10), float32], Tensor[(5, 7, 9), bool], Tensor[(5, 7, 9), bool], Tensor[(2, 256), uint8]) {
  %165 = @func_1561() /* ty=(Tensor[(12, 3, 10), float32], Tensor[(12, 3, 10), float32], Tensor[(12, 3, 10), float32], Tensor[(12, 3, 10), float32], Tensor[(45), float64]) */;
  %166 = cast(%var_1708, dtype="int32") /* ty=Tensor[(2, 256), int32] */;
  %167 = cast(%var_1708, dtype="int32") /* ty=Tensor[(2, 256), int32] */;
  %168 = reshape(%166, newshape=[4, 8, 16]) /* ty=Tensor[(4, 8, 16), int32] */;
  %169 = reshape(%167, newshape=[4, 8, 16]) /* ty=Tensor[(4, 8, 16), int32] */;
  %170 = @func_1611(%168, %169) /* ty=(Tensor[(4, 8, 16), int32], Tensor[(5, 7, 9), bool]) */;
  %171 = @func_644() /* ty=(Tensor[(5, 7, 9), bool], Tensor[(12, 3, 10), int8], Tensor[(360), float32], Tensor[(5, 7, 9), bool], Tensor[(5, 7, 9), bool], Tensor[(45), float64], Tensor[(12, 3, 10), int8]) */;
  %172 = cast(%var_1708, dtype="float32") /* ty=Tensor[(2, 256), float32] */;
  %173 = acosh(%172) /* ty=Tensor[(2, 256), float32] */;
  %174 = cast(%var_1757, dtype="uint8") /* ty=Tensor[(2, 256), uint8] */;
  %175 = shape_of(%173, dtype="int32") /* ty=Tensor[(2), int32] */;
  %176 = cast(%173, dtype="uint8") /* ty=Tensor[(2, 256), uint8] */;
  %177 = dyn.reshape(%174, %175, newshape=[]) /* ty=Tensor[(?, ?), uint8] */;
  %178 = %165.1;
  %179 = %170.1;
  %180 = %171.4;
  %181 = maximum(%176, %177) /* ty=Tensor[(2, 256), uint8] */;
  (%178, %179, %180, %181)
}

def @func_2578() -> (Tensor[(5, 7, 9), bool], Tensor[(12, 3, 10), float64]) {
  %182 = @func_1849() /* ty=(Tensor[(12, 3, 10), float32],) */;
  %183 = %182.0;
  %184 = cast(%183, dtype="float64") /* ty=Tensor[(12, 3, 10), float64] */;
  %185 = @func_1150() /* ty=Tensor[(5, 7, 9), bool] */;
  %186 = log10(%184) /* ty=Tensor[(12, 3, 10), float64] */;
  (%185, %186)
}

def @func_3938() -> (Tensor[(12, 3, 10), float32], Tensor[(45), float64]) {
  %187 = @func_1561() /* ty=(Tensor[(12, 3, 10), float32], Tensor[(12, 3, 10), float32], Tensor[(12, 3, 10), float32], Tensor[(12, 3, 10), float32], Tensor[(45), float64]) */;
  %188 = %187.0;
  %189 = @func_3532() /* ty=Tensor[(45), float64] */;
  (%188, %189)
}

def @func_5943(%var_5920: Tensor[(13, 16, 15), int32], %var_5921: Tensor[(13, 16, 15), int32]) -> (Tensor[(13, 16, 15), bool], Tensor[(13, 16, 15), float32]) {
  %190 = cast(%var_5921, dtype="bool") /* ty=Tensor[(13, 16, 15), bool] */;
  %191 = shape_of(%var_5920, dtype="int32") /* ty=Tensor[(3), int32] */;
  %192 = cast(%var_5920, dtype="bool") /* ty=Tensor[(13, 16, 15), bool] */;
  %193 = dyn.reshape(%190, %191, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %194 = cast(%var_5920, dtype="float32") /* ty=Tensor[(13, 16, 15), float32] */;
  %195 = not_equal(%192, %193) /* ty=Tensor[(13, 16, 15), bool] */;
  %196 = log(%194) /* ty=Tensor[(13, 16, 15), float32] */;
  (%195, %196)
}

def @func_8175() -> (Tensor[(5, 7, 9), float32], Tensor[(5, 7, 9), bool], Tensor[(45), float64]) {
  %197 = @func_7346() /* ty=(Tensor[(5, 7, 9), float32],) */;
  %198 = cast(meta[relay.Constant][5] /* ty=Tensor[(45), float64] */, dtype="float64") /* ty=Tensor[(45), float64] */;
  %199 = reshape(%198, newshape=[5, 1, 9]) /* ty=Tensor[(5, 1, 9), float64] */;
  %200 = %197.0;
  %201 = @func_176(%199) /* ty=Tensor[(5, 7, 9), bool] */;
  (%200, %201, meta[relay.Constant][5] /* ty=Tensor[(45), float64] */)
}

def @func_5280() -> (Tensor[(10, 10, 15), float64], Tensor[(12, 3, 10), float32], Tensor[(13, 33), float64], Tensor[(45), float64], Tensor[(5, 14, 9), int64], Tensor[(630), uint64], Tensor[(3, 13, 11), float64], Tensor[(3, 13, 11), float64]) {
  %202 = @func_5139() /* ty=(Tensor[(12, 3, 10), float32], Tensor[(12, 3, 10), float32], Tensor[(10, 10, 15), float64], Tensor[(750, 2), float64], Tensor[(120), uint32]) */;
  %203 = @func_3349() /* ty=(Tensor[(12, 3, 10), float32],) */;
  %204 = cast(meta[relay.Constant][7] /* ty=Tensor[(630), uint64] */, dtype="uint64") /* ty=Tensor[(630), uint64] */;
  %205 = @func_3532() /* ty=Tensor[(45), float64] */;
  %206 = cast(%205, dtype="float64") /* ty=Tensor[(45), float64] */;
  %207 = reshape(%204, newshape=[5, 14, 9]) /* ty=Tensor[(5, 14, 9), uint64] */;
  %208 = reshape(%206, newshape=[45]) /* ty=Tensor[(45), float64] */;
  %209 = @func_3525(%207, %208) /* ty=(Tensor[(12, 3, 10), float32], Tensor[(5, 7, 9), bool], Tensor[(45), float64], Tensor[(12, 3, 10), float32], Tensor[(5, 14, 9), int64], Tensor[(12, 3, 10), float32]) */;
  %210 = cast(meta[relay.Constant][6] /* ty=Tensor[(13, 33), float64] */, dtype="float64") /* ty=Tensor[(13, 33), float64] */;
  %211 = reshape(%210, newshape=[3, 13, 11]) /* ty=Tensor[(3, 13, 11), float64] */;
  %212 = @func_4990(%211) /* ty=(Tensor[(3, 13, 11), float64], Tensor[(3, 13, 11), uint64]) */;
  %213 = %212.0;
  %214 = cast(%213, dtype="float64") /* ty=Tensor[(3, 13, 11), float64] */;
  %215 = log(%214) /* ty=Tensor[(3, 13, 11), float64] */;
  %216 = cast(%215, dtype="float64") /* ty=Tensor[(3, 13, 11), float64] */;
  %217 = cast(%215, dtype="float64") /* ty=Tensor[(3, 13, 11), float64] */;
  %218 = %202.2;
  %219 = %203.0;
  %220 = %209.4;
  %221 = erf(%216) /* ty=Tensor[(3, 13, 11), float64] */;
  %222 = asinh(%217) /* ty=Tensor[(3, 13, 11), float64] */;
  (%218, %219, meta[relay.Constant][6] /* ty=Tensor[(13, 33), float64] */, %205, %220, meta[relay.Constant][7] /* ty=Tensor[(630), uint64] */, %221, %222)
}

def @func_3981(%var_3956: Tensor[(7, 16, 5), uint8], %var_3957: Tensor[(7, 16, 5), uint8]) -> (Tensor[(7, 16, 5), bool], Tensor[(12, 3, 10), float32], Tensor[(5, 7, 9), bool]) {
  %223 = cast(%var_3957, dtype="bool") /* ty=Tensor[(7, 16, 5), bool] */;
  %224 = shape_of(%var_3956, dtype="int32") /* ty=Tensor[(3), int32] */;
  %225 = cast(%var_3956, dtype="bool") /* ty=Tensor[(7, 16, 5), bool] */;
  %226 = dyn.reshape(%223, %224, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %227 = @func_2953() /* ty=(Tensor[(12, 3, 10), float32],) */;
  %228 = less_equal(%225, %226) /* ty=Tensor[(7, 16, 5), bool] */;
  %229 = %227.0;
  %230 = @func_1150() /* ty=Tensor[(5, 7, 9), bool] */;
  (%228, %229, %230)
}

def @func_4636() -> (Tensor[(45), float64],) {
  %231 = @func_3938() /* ty=(Tensor[(12, 3, 10), float32], Tensor[(45), float64]) */;
  %232 = %231.1;
  (%232,)
}

def @func_7809(%var_7785: Tensor[(4, 780), int32]) -> (Tensor[(45), float64], Tensor[(4, 780), float32]) {
  %233 = cast(%var_7785, dtype="int32") /* ty=Tensor[(4, 780), int32] */;
  %234 = cast(%var_7785, dtype="int32") /* ty=Tensor[(4, 780), int32] */;
  %235 = reshape(%233, newshape=[13, 16, 15]) /* ty=Tensor[(13, 16, 15), int32] */;
  %236 = reshape(%234, newshape=[13, 16, 15]) /* ty=Tensor[(13, 16, 15), int32] */;
  %237 = @func_5943(%235, %236) /* ty=(Tensor[(13, 16, 15), bool], Tensor[(13, 16, 15), float32]) */;
  %238 = %237.1;
  %239 = cast(%238, dtype="float32") /* ty=Tensor[(13, 16, 15), float32] */;
  %240 = shape_of(%var_7785, dtype="int32") /* ty=Tensor[(2), int32] */;
  %241 = cast(%var_7785, dtype="float32") /* ty=Tensor[(4, 780), float32] */;
  %242 = dyn.reshape(%239, %240, newshape=[]) /* ty=Tensor[(?, ?), float32] */;
  %243 = @func_3532() /* ty=Tensor[(45), float64] */;
  %244 = power(%241, %242) /* ty=Tensor[(4, 780), float32] */;
  (%243, %244)
}

def @func_1849() -> (Tensor[(12, 3, 10), float32],) {
  %245 = @func_721() /* ty=(Tensor[(12, 3, 10), float32],) */;
  %246 = %245.0;
  (%246,)
}

def @func_4990(%var_4964: Tensor[(3, 13, 11), float64]) -> (Tensor[(3, 13, 11), float64], Tensor[(3, 13, 11), uint64]) {
  %247 = cast(%var_4964, dtype="float64") /* ty=Tensor[(3, 13, 11), float64] */;
  %248 = cast(%var_4964, dtype="float64") /* ty=Tensor[(3, 13, 11), float64] */;
  %249 = sinh(%248) /* ty=Tensor[(3, 13, 11), float64] */;
  %250 = cast(%var_4964, dtype="uint64") /* ty=Tensor[(3, 13, 11), uint64] */;
  %251 = shape_of(%249, dtype="int32") /* ty=Tensor[(3), int32] */;
  %252 = cast(%249, dtype="uint64") /* ty=Tensor[(3, 13, 11), uint64] */;
  %253 = dyn.reshape(%250, %251, newshape=[]) /* ty=Tensor[(?, ?, ?), uint64] */;
  %254 = acosh(%247) /* ty=Tensor[(3, 13, 11), float64] */;
  %255 = right_shift(%252, %253) /* ty=Tensor[(3, 13, 11), uint64] */;
  (%254, %255)
}

def @func_9268() -> (Tensor[(16, 16, 16), float32], Tensor[(5, 9), float64]) {
  %256 = @func_8404() /* ty=(Tensor[(16, 16, 16), float32],) */;
  %257 = @func_9122() /* ty=(Tensor[(16, 16, 16), float32], Tensor[(12, 3, 10), int8], Tensor[(45), uint32], Tensor[(5, 9), float64], Tensor[(12, 3, 10), float32]) */;
  %258 = %256.0;
  %259 = %257.3;
  (%258, %259)
}

def @func_6284() -> (Tensor[(12, 3, 10), float32], Tensor[(5, 7, 9), bool]) {
  %260 = @func_1779() /* ty=(Tensor[(12, 3, 10), float32],) */;
  %261 = %260.0;
  %262 = @func_4706() /* ty=Tensor[(5, 7, 9), bool] */;
  (%261, %262)
}

def @func_4071(%var_4053: Tensor[(12, 2, 15), float32]) -> (Tensor[(12, 2, 15), float32], Tensor[(5, 7, 9), bool]) {
  %263 = cast(%var_4053, dtype="float32") /* ty=Tensor[(12, 2, 15), float32] */;
  %264 = @func_3998() /* ty=(Tensor[(5, 7, 9), bool],) */;
  %265 = log10(%263) /* ty=Tensor[(12, 2, 15), float32] */;
  %266 = %264.0;
  (%265, %266)
}

def @func_2953() -> (Tensor[(12, 3, 10), float32],) {
  %267 = @func_791() /* ty=Tensor[(12, 3, 10), float32] */;
  (%267,)
}

def @func_6840() -> (Tensor[(12, 3, 10), int8], Tensor[(12, 3, 10), float32], Tensor[(5, 5, 6), int64], Tensor[(4, 8, 10), float32], Tensor[(2, 160), float32]) {
  %268 = @func_2149() /* ty=(Tensor[(12, 3, 10), float32], Tensor[(12, 3, 10), float32], Tensor[(5, 7, 9), bool], Tensor[(5, 7, 9), bool], Tensor[(12, 3, 10), int8]) */;
  %269 = @func_6648() /* ty=(Tensor[(12, 3, 10), float32],) */;
  %270 = @func_5895() /* ty=(Tensor[(5, 5, 6), int64],) */;
  %271 = cast(meta[relay.Constant][8] /* ty=Tensor[(2, 160), float32] */, dtype="float32") /* ty=Tensor[(2, 160), float32] */;
  %272 = cast(meta[relay.Constant][8] /* ty=Tensor[(2, 160), float32] */, dtype="float32") /* ty=Tensor[(2, 160), float32] */;
  %273 = reshape(%271, newshape=[4, 8, 10]) /* ty=Tensor[(4, 8, 10), float32] */;
  %274 = reshape(%272, newshape=[4, 8, 10]) /* ty=Tensor[(4, 8, 10), float32] */;
  %275 = %268.4;
  %276 = %269.0;
  %277 = %270.0;
  %278 = @func_308(%273, %274) /* ty=Tensor[(4, 8, 10), float32] */;
  (%275, %276, %277, %278, meta[relay.Constant][8] /* ty=Tensor[(2, 160), float32] */)
}

def @func_791() -> Tensor[(12, 3, 10), float32] {
  @func_459() /* ty=Tensor[(12, 3, 10), float32] */
}

def @func_4657(%var_4641: Tensor[(5, 3, 8), float32], %var_4642: Tensor[(5, 3, 8), float32]) -> (Tensor[(5, 3, 8), float32], Tensor[(5, 3, 8), float64]) {
  %279 = cast(%var_4642, dtype="float32") /* ty=Tensor[(5, 3, 8), float32] */;
  %280 = shape_of(%var_4641, dtype="int32") /* ty=Tensor[(3), int32] */;
  %281 = cast(%var_4641, dtype="float32") /* ty=Tensor[(5, 3, 8), float32] */;
  %282 = dyn.reshape(%279, %280, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %283 = cast(%var_4641, dtype="float64") /* ty=Tensor[(5, 3, 8), float64] */;
  %284 = floor_mod(%281, %282) /* ty=Tensor[(5, 3, 8), float32] */;
  %285 = cosh(%283) /* ty=Tensor[(5, 3, 8), float64] */;
  (%284, %285)
}

def @func_8404() -> (Tensor[(16, 16, 16), float32],) {
  %286 = cast(meta[relay.Constant][9] /* ty=Tensor[(16, 16, 16), float32] */, dtype="float32") /* ty=Tensor[(16, 16, 16), float32] */;
  %287 = log10(%286) /* ty=Tensor[(16, 16, 16), float32] */;
  (%287,)
}

def @func_7304() -> (Tensor[(12, 3, 10), float32], Tensor[(5, 7, 9), bool]) {
  %288 = @func_2149() /* ty=(Tensor[(12, 3, 10), float32], Tensor[(12, 3, 10), float32], Tensor[(5, 7, 9), bool], Tensor[(5, 7, 9), bool], Tensor[(12, 3, 10), int8]) */;
  %289 = %288.1;
  %290 = @func_6072() /* ty=Tensor[(5, 7, 9), bool] */;
  (%289, %290)
}

def @func_3532() -> Tensor[(45), float64] {
  %291 = @func_385() /* ty=(Tensor[(45), float64], Tensor[(5, 7, 9), bool]) */;
  %291.0
}

def @func_807() -> Tensor[(12, 3, 10), float32] {
  %292 = @func_721() /* ty=(Tensor[(12, 3, 10), float32],) */;
  %292.0
}

def @func_1561() -> (Tensor[(12, 3, 10), float32], Tensor[(12, 3, 10), float32], Tensor[(12, 3, 10), float32], Tensor[(12, 3, 10), float32], Tensor[(45), float64]) {
  %293 = @func_331() /* ty=(Tensor[(12, 3, 10), float32],) */;
  %294 = @func_1137() /* ty=(Tensor[(12, 3, 10), float32],) */;
  %295 = @func_271() /* ty=(Tensor[(12, 3, 10), float32], Tensor[(5, 7, 9), bool], Tensor[(45), float64]) */;
  %296 = %293.0;
  %297 = @func_791() /* ty=Tensor[(12, 3, 10), float32] */;
  %298 = %294.0;
  %299 = @func_739() /* ty=Tensor[(12, 3, 10), float32] */;
  %300 = %295.2;
  (%296, %297, %298, %299, %300)
}

def @func_2812(%var_2798: Tensor[(11, 13, 2), float64]) -> (Tensor[(11, 13, 2), float64],) {
  %301 = cast(%var_2798, dtype="float64") /* ty=Tensor[(11, 13, 2), float64] */;
  %302 = erf(%301) /* ty=Tensor[(11, 13, 2), float64] */;
  (%302,)
}

def @func_271() -> (Tensor[(12, 3, 10), float32], Tensor[(5, 7, 9), bool], Tensor[(45), float64]) {
  %303 = cast(meta[relay.Constant][10] /* ty=Tensor[(12, 3, 10), float32] */, dtype="float32") /* ty=Tensor[(12, 3, 10), float32] */;
  %304 = cast(meta[relay.Constant][11] /* ty=Tensor[(45), float64] */, dtype="float64") /* ty=Tensor[(45), float64] */;
  %305 = reshape(%304, newshape=[5, 1, 9]) /* ty=Tensor[(5, 1, 9), float64] */;
  %306 = atanh(%303) /* ty=Tensor[(12, 3, 10), float32] */;
  %307 = @func_176(%305) /* ty=Tensor[(5, 7, 9), bool] */;
  (%306, %307, meta[relay.Constant][11] /* ty=Tensor[(45), float64] */)
}

def @func_9228(%var_9210: Tensor[(5, 16, 7), uint64]) -> (Tensor[(5, 16, 7), uint64], Tensor[(5, 16, 7), float64]) {
  %308 = cast(meta[relay.Constant][12] /* ty=Tensor[(5, 16, 7), uint64] */, dtype="uint64") /* ty=Tensor[(5, 16, 7), uint64] */;
  %309 = shape_of(%var_9210, dtype="int32") /* ty=Tensor[(3), int32] */;
  %310 = cast(%var_9210, dtype="uint64") /* ty=Tensor[(5, 16, 7), uint64] */;
  %311 = dyn.reshape(%308, %309, newshape=[]) /* ty=Tensor[(?, ?, ?), uint64] */;
  %312 = cast(%var_9210, dtype="float64") /* ty=Tensor[(5, 16, 7), float64] */;
  %313 = bitwise_and(%310, %311) /* ty=Tensor[(5, 16, 7), uint64] */;
  %314 = atanh(%312) /* ty=Tensor[(5, 16, 7), float64] */;
  (%313, %314)
}

def @func_2796() -> Tensor[(45), float64] {
  %315 = @func_385() /* ty=(Tensor[(45), float64], Tensor[(5, 7, 9), bool]) */;
  %315.0
}

def @func_3998() -> (Tensor[(5, 7, 9), bool],) {
  %316 = @func_3371() /* ty=Tensor[(5, 7, 9), bool] */;
  (%316,)
}

def @func_4220(%var_4213: Tensor[(2, 15, 13), float32]) -> Tensor[(2, 15, 13), float32] {
  %317 = cast(4.21898f /* ty=float32 */, dtype="float32") /* ty=float32 */;
  %318 = cast(%var_4213, dtype="float32") /* ty=Tensor[(2, 15, 13), float32] */;
  power(%317, %318) /* ty=Tensor[(2, 15, 13), float32] */
}

def @func_6868() -> (Tensor[(12, 3, 10), float32], Tensor[(12, 2, 15), float32], Tensor[(12, 3, 10), float32], Tensor[(45), float64]) {
  %319 = @func_3576() /* ty=Tensor[(12, 3, 10), float32] */;
  %320 = cast(%319, dtype="float32") /* ty=Tensor[(12, 3, 10), float32] */;
  %321 = reshape(%320, newshape=[12, 2, 15]) /* ty=Tensor[(12, 2, 15), float32] */;
  %322 = @func_4071(%321) /* ty=(Tensor[(12, 2, 15), float32], Tensor[(5, 7, 9), bool]) */;
  %323 = %322.0;
  %324 = @func_5158() /* ty=Tensor[(12, 3, 10), float32] */;
  %325 = @func_5728() /* ty=Tensor[(45), float64] */;
  (%319, %323, %324, %325)
}

def @func_5510() -> (Tensor[(12, 3, 10), float32],) {
  %326 = @func_4157() /* ty=(Tensor[(12, 3, 10), float32],) */;
  %327 = %326.0;
  (%327,)
}

def @func_8681() -> (Tensor[(5, 7, 9), bool], Tensor[(5, 7, 9), bool]) {
  %328 = @func_6284() /* ty=(Tensor[(12, 3, 10), float32], Tensor[(5, 7, 9), bool]) */;
  %329 = %328.1;
  %330 = @func_6176() /* ty=Tensor[(5, 7, 9), bool] */;
  (%329, %330)
}

def @func_4548() -> (Tensor[(12, 3, 10), float32], Tensor[(5, 7, 9), float32]) {
  %331 = @func_2149() /* ty=(Tensor[(12, 3, 10), float32], Tensor[(12, 3, 10), float32], Tensor[(5, 7, 9), bool], Tensor[(5, 7, 9), bool], Tensor[(12, 3, 10), int8]) */;
  %332 = @func_3717() /* ty=(Tensor[(5, 7, 9), float32], Tensor[(12, 3, 10), float32]) */;
  %333 = %331.1;
  %334 = %332.0;
  (%333, %334)
}

def @func_4955() -> (Tensor[(12, 3, 10), float32],) {
  %335 = @func_4050() /* ty=(Tensor[(12, 3, 10), float32], Tensor[(12, 3, 10), float32]) */;
  %336 = %335.0;
  (%336,)
}

def @func_6648() -> (Tensor[(12, 3, 10), float32],) {
  %337 = @func_6458() /* ty=(Tensor[(12, 3, 10), float32], Tensor[(12, 3, 10), float32]) */;
  %338 = %337.0;
  (%338,)
}

def @func_5755() -> (Tensor[(5, 7, 9), bool],) {
  %339 = @func_5147() /* ty=(Tensor[(12, 3, 10), float32], Tensor[(5, 7, 9), bool]) */;
  %340 = %339.1;
  (%340,)
}

def @func_480(%var_464: Tensor[(12, 3, 10), float32]) -> Tensor[(12, 3, 10), int8] {
  %341 = @func_459() /* ty=Tensor[(12, 3, 10), float32] */;
  %342 = cast(%var_464, dtype="int8") /* ty=Tensor[(12, 3, 10), int8] */;
  %343 = shape_of(%341, dtype="int32") /* ty=Tensor[(3), int32] */;
  %344 = cast(%341, dtype="int8") /* ty=Tensor[(12, 3, 10), int8] */;
  %345 = dyn.reshape(%342, %343, newshape=[]) /* ty=Tensor[(?, ?, ?), int8] */;
  multiply(%344, %345) /* ty=Tensor[(12, 3, 10), int8] */
}

def @func_1182() -> (Tensor[(5, 7, 9), bool],) {
  %346 = @func_1150() /* ty=Tensor[(5, 7, 9), bool] */;
  (%346,)
}

def @func_3717() -> (Tensor[(5, 7, 9), float32], Tensor[(12, 3, 10), float32]) {
  %347 = @func_2908() /* ty=(Tensor[(5, 7, 9), bool],) */;
  %348 = %347.0;
  %349 = cast(%348, dtype="float32") /* ty=Tensor[(5, 7, 9), float32] */;
  %350 = @func_3240() /* ty=(Tensor[(12, 3, 10), float32], Tensor[(12, 3, 10), float32]) */;
  %351 = log10(%349) /* ty=Tensor[(5, 7, 9), float32] */;
  %352 = %350.0;
  (%351, %352)
}

def @func_3576() -> Tensor[(12, 3, 10), float32] {
  @func_459() /* ty=Tensor[(12, 3, 10), float32] */
}

def @func_4119() -> (Tensor[(5, 7, 9), bool],) {
  %353 = @func_1182() /* ty=(Tensor[(5, 7, 9), bool],) */;
  %354 = %353.0;
  (%354,)
}

def @func_2280() -> (Tensor[(12, 3, 10), float32],) {
  %355 = @func_807() /* ty=Tensor[(12, 3, 10), float32] */;
  (%355,)
}

def @func_834(%var_825: Tensor[(12, 3, 10), float32]) -> Tensor[(12, 3, 10), uint64] {
  %356 = @func_739() /* ty=Tensor[(12, 3, 10), float32] */;
  %357 = cast(%var_825, dtype="uint64") /* ty=Tensor[(12, 3, 10), uint64] */;
  %358 = shape_of(%356, dtype="int32") /* ty=Tensor[(3), int32] */;
  %359 = cast(%356, dtype="uint64") /* ty=Tensor[(12, 3, 10), uint64] */;
  %360 = dyn.reshape(%357, %358, newshape=[]) /* ty=Tensor[(?, ?, ?), uint64] */;
  bitwise_or(%359, %360) /* ty=Tensor[(12, 3, 10), uint64] */
}

def @func_3860(%var_3848: Tensor[(286), float64]) -> (Tensor[(12, 3, 10), float32], Tensor[(12, 3, 10), float32], Tensor[(12, 3, 10), float32], Tensor[(12, 3, 10), float32], Tensor[(12, 3, 10), float32], Tensor[(12, 3, 10), float32], Tensor[(12, 3, 10), float32], Tensor[(12, 3, 10), int8], Tensor[(5, 7, 9), bool], Tensor[(45), float64], Tensor[(11, 13, 2), float64], Tensor[(286), float64], Tensor[(12, 3, 10), float32]) {
  %361 = @func_1996() /* ty=(Tensor[(12, 3, 10), float32], Tensor[(12, 3, 10), float32]) */;
  %362 = @func_583() /* ty=(Tensor[(12, 3, 10), float32],) */;
  %363 = @func_739() /* ty=Tensor[(12, 3, 10), float32] */;
  %364 = cast(%363, dtype="float32") /* ty=Tensor[(12, 3, 10), float32] */;
  %365 = @func_1579() /* ty=(Tensor[(12, 3, 10), float32], Tensor[(12, 3, 10), float32]) */;
  %366 = %362.0;
  %367 = cast(%366, dtype="float32") /* ty=Tensor[(12, 3, 10), float32] */;
  %368 = reshape(%367, newshape=[12, 3, 10]) /* ty=Tensor[(12, 3, 10), float32] */;
  %369 = cast(meta[relay.Constant][13] /* ty=Tensor[(45), float64] */, dtype="float64") /* ty=Tensor[(45), float64] */;
  %370 = reshape(%369, newshape=[5, 1, 9]) /* ty=Tensor[(5, 1, 9), float64] */;
  %371 = cast(%var_3848, dtype="float64") /* ty=Tensor[(286), float64] */;
  %372 = reshape(%371, newshape=[11, 13, 2]) /* ty=Tensor[(11, 13, 2), float64] */;
  %373 = @func_2812(%372) /* ty=(Tensor[(11, 13, 2), float64],) */;
  %374 = %361.0;
  %375 = @func_791() /* ty=Tensor[(12, 3, 10), float32] */;
  %376 = @func_2043() /* ty=Tensor[(12, 3, 10), float32] */;
  %377 = @func_807() /* ty=Tensor[(12, 3, 10), float32] */;
  %378 = cosh(%364) /* ty=Tensor[(12, 3, 10), float32] */;
  %379 = %365.1;
  %380 = @func_480(%368) /* ty=Tensor[(12, 3, 10), int8] */;
  %381 = @func_176(%370) /* ty=Tensor[(5, 7, 9), bool] */;
  %382 = %373.0;
  %383 = @func_3576() /* ty=Tensor[(12, 3, 10), float32] */;
  (%374, %366, %375, %376, %377, %378, %379, %380, %381, meta[relay.Constant][13] /* ty=Tensor[(45), float64] */, %382, %var_3848, %383)
}

def @func_5147() -> (Tensor[(12, 3, 10), float32], Tensor[(5, 7, 9), bool]) {
  %384 = @func_4119() /* ty=(Tensor[(5, 7, 9), bool],) */;
  %385 = @func_3278() /* ty=Tensor[(12, 3, 10), float32] */;
  %386 = %384.0;
  (%385, %386)
}

def @func_1150() -> Tensor[(5, 7, 9), bool] {
  %387 = @func_385() /* ty=(Tensor[(45), float64], Tensor[(5, 7, 9), bool]) */;
  %387.1
}

def @func_6930() -> (Tensor[(12, 3, 10), float32],) {
  %388 = @func_419() /* ty=Tensor[(12, 3, 10), float32] */;
  (%388,)
}

def @func_6072() -> Tensor[(5, 7, 9), bool] {
  %389 = @func_644() /* ty=(Tensor[(5, 7, 9), bool], Tensor[(12, 3, 10), int8], Tensor[(360), float32], Tensor[(5, 7, 9), bool], Tensor[(5, 7, 9), bool], Tensor[(45), float64], Tensor[(12, 3, 10), int8]) */;
  %389.3
}

def @func_3651(%var_3646: Tensor[(320), float32]) -> (Tensor[(360), float32], Tensor[(12, 3, 10), float64], Tensor[(2, 14, 3), bool], Tensor[(84), bool], Tensor[(320), float32], Tensor[(12, 3, 10), float32]) {
  %390 = @func_3028() /* ty=(Tensor[(45), float64], Tensor[(12, 3, 10), uint64], Tensor[(360), float32], Tensor[(5, 7, 9), bool], Tensor[(5, 7, 9), float64], Tensor[(2, 14, 3), float64]) */;
  %391 = @func_3278() /* ty=Tensor[(12, 3, 10), float32] */;
  %392 = cast(%391, dtype="float64") /* ty=Tensor[(12, 3, 10), float64] */;
  %393 = cast(meta[relay.Constant][14] /* ty=Tensor[(84), bool] */, dtype="bool") /* ty=Tensor[(84), bool] */;
  %394 = cast(meta[relay.Constant][14] /* ty=Tensor[(84), bool] */, dtype="bool") /* ty=Tensor[(84), bool] */;
  %395 = cast(%var_3646, dtype="float32") /* ty=Tensor[(320), float32] */;
  %396 = reshape(%393, newshape=[2, 14, 3]) /* ty=Tensor[(2, 14, 3), bool] */;
  %397 = reshape(%394, newshape=[2, 14, 3]) /* ty=Tensor[(2, 14, 3), bool] */;
  %398 = reshape(%395, newshape=[320]) /* ty=Tensor[(320), float32] */;
  %399 = @func_541(%396, %397, %398) /* ty=(Tensor[(2, 14, 3), bool], Tensor[(4, 8, 10), float32], Tensor[(320), float32], Tensor[(12, 3, 10), float32]) */;
  %400 = cast(%391, dtype="float64") /* ty=Tensor[(12, 3, 10), float64] */;
  %401 = reshape(%400, newshape=[12, 3, 10]) /* ty=Tensor[(12, 3, 10), float64] */;
  %402 = @func_892(%401) /* ty=(Tensor[(12, 3, 10), int32], Tensor[(12, 3, 10), float32]) */;
  %403 = %390.2;
  %404 = atan(%392) /* ty=Tensor[(12, 3, 10), float64] */;
  %405 = %399.0;
  %406 = %402.1;
  (%403, %404, %405, meta[relay.Constant][14] /* ty=Tensor[(84), bool] */, %var_3646, %406)
}

def @func_2908() -> (Tensor[(5, 7, 9), bool],) {
  %407 = @func_271() /* ty=(Tensor[(12, 3, 10), float32], Tensor[(5, 7, 9), bool], Tensor[(45), float64]) */;
  %408 = %407.1;
  (%408,)
}

def @func_2884() -> Tensor[(12, 3, 10), float32] {
  %409 = @func_1137() /* ty=(Tensor[(12, 3, 10), float32],) */;
  %409.0
}

def @func_385() -> (Tensor[(45), float64], Tensor[(5, 7, 9), bool]) {
  %410 = @func_271() /* ty=(Tensor[(12, 3, 10), float32], Tensor[(5, 7, 9), bool], Tensor[(45), float64]) */;
  %411 = %410.2;
  %412 = cast(%411, dtype="float64") /* ty=Tensor[(45), float64] */;
  %413 = reshape(%412, newshape=[5, 1, 9]) /* ty=Tensor[(5, 1, 9), float64] */;
  %414 = @func_176(%413) /* ty=Tensor[(5, 7, 9), bool] */;
  (%411, %414)
}

def @func_4619(%var_4596: Tensor[(120), uint32], %var_4605: Tensor[(5, 9), float64]) -> (Tensor[(3, 8, 5), uint32], Tensor[(120), uint32], Tensor[(45, 1), float64], Tensor[(5, 9), float64], Tensor[(315), float64], Tensor[(13, 3, ?), bool]) {
  %415 = cast(%var_4596, dtype="uint32") /* ty=Tensor[(120), uint32] */;
  %416 = reshape(%415, newshape=[3, 8, 5]) /* ty=Tensor[(3, 8, 5), uint32] */;
  %417 = @func_777(%416) /* ty=(Tensor[(3, 8, 5), uint32], Tensor[(3, 8, 5), bool]) */;
  %418 = %417.0;
  %419 = cast(%418, dtype="uint32") /* ty=Tensor[(3, 8, 5), uint32] */;
  %420 = cast(%var_4605, dtype="float64") /* ty=Tensor[(5, 9), float64] */;
  %421 = cast(meta[relay.Constant][15] /* ty=Tensor[(315), float64] */, dtype="float64") /* ty=Tensor[(315), float64] */;
  %422 = reshape(%419, newshape=[120]) /* ty=Tensor[(120), uint32] */;
  %423 = reshape(%420, newshape=[45, 1]) /* ty=Tensor[(45, 1), float64] */;
  %424 = reshape(%421, newshape=[5, 7, 9]) /* ty=Tensor[(5, 7, 9), float64] */;
  %425 = @func_1008(%422, %423, %424) /* ty=(Tensor[(12, 3, 10), float32], Tensor[(3, 8, 5), uint32], Tensor[(120), uint32], Tensor[(45, 1), float64], Tensor[(12, 3, 10), float32], Tensor[(5, 7, 9), int16]) */;
  %426 = cast(meta[relay.Constant][16] /* ty=Tensor[(13, 3, 1), float32] */, dtype="float32") /* ty=Tensor[(13, 3, 1), float32] */;
  %427 = atanh(%426) /* ty=Tensor[(13, 3, 1), float32] */;
  %428 = cast(meta[relay.Constant][16] /* ty=Tensor[(13, 3, 1), float32] */, dtype="bool") /* ty=Tensor[(13, 3, 1), bool] */;
  %429 = shape_of(%427, dtype="int32") /* ty=Tensor[(3), int32] */;
  %430 = cast(%427, dtype="bool") /* ty=Tensor[(13, 3, 1), bool] */;
  %431 = dyn.reshape(%428, %429, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %432 = %425.3;
  %433 = less_equal(%430, %431) /* ty=Tensor[(13, 3, ?), bool] */;
  (%418, %var_4596, %432, %var_4605, meta[relay.Constant][15] /* ty=Tensor[(315), float64] */, %433)
}

def @func_3158(%var_3151: Tensor[(12, 3, 10), float32]) -> Tensor[(12, 3, 10), bool] {
  %434 = @func_331() /* ty=(Tensor[(12, 3, 10), float32],) */;
  %435 = %434.0;
  %436 = cast(%var_3151, dtype="bool") /* ty=Tensor[(12, 3, 10), bool] */;
  %437 = shape_of(%435, dtype="int32") /* ty=Tensor[(3), int32] */;
  %438 = cast(%435, dtype="bool") /* ty=Tensor[(12, 3, 10), bool] */;
  %439 = dyn.reshape(%436, %437, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  logical_or(%438, %439) /* ty=Tensor[(12, 3, 10), bool] */
}

def @func_5531() -> (Tensor[(5, 7, 9), bool],) {
  %440 = @func_3330() /* ty=(Tensor[(5, 7, 9), bool], Tensor[(5, 7, 9), bool]) */;
  %441 = %440.1;
  (%441,)
}

def @func_2636() -> (Tensor[(12, 3, 10), float32], Tensor[(12, 3, 10), float32], Tensor[(12, 3, 10), float32]) {
  %442 = @func_807() /* ty=Tensor[(12, 3, 10), float32] */;
  %443 = cast(%442, dtype="float32") /* ty=Tensor[(12, 3, 10), float32] */;
  %444 = @func_459() /* ty=Tensor[(12, 3, 10), float32] */;
  %445 = sinh(%443) /* ty=Tensor[(12, 3, 10), float32] */;
  %446 = @func_459() /* ty=Tensor[(12, 3, 10), float32] */;
  (%444, %445, %446)
}

def @func_1372(%var_1355: Tensor[(10, 10, 15), float64], %var_1367: Tensor[(120), uint32]) -> (Tensor[(10, 10, 15), float64], Tensor[(3, 8, 5), uint32], Tensor[(120), uint32]) {
  %447 = cast(%var_1355, dtype="float64") /* ty=Tensor[(10, 10, 15), float64] */;
  %448 = cast(%var_1367, dtype="uint32") /* ty=Tensor[(120), uint32] */;
  %449 = reshape(%448, newshape=[3, 8, 5]) /* ty=Tensor[(3, 8, 5), uint32] */;
  %450 = @func_777(%449) /* ty=(Tensor[(3, 8, 5), uint32], Tensor[(3, 8, 5), bool]) */;
  %451 = tan(%447) /* ty=Tensor[(10, 10, 15), float64] */;
  %452 = %450.0;
  (%451, %452, %var_1367)
}

def @func_5769() -> Tensor[(12, 3, 10), int8] {
  %453 = @func_644() /* ty=(Tensor[(5, 7, 9), bool], Tensor[(12, 3, 10), int8], Tensor[(360), float32], Tensor[(5, 7, 9), bool], Tensor[(5, 7, 9), bool], Tensor[(45), float64], Tensor[(12, 3, 10), int8]) */;
  %453.6
}

def @func_6525() -> (Tensor[(12, 3, 10), float32], Tensor[(12, 3, 10), float32]) {
  %454 = @func_419() /* ty=Tensor[(12, 3, 10), float32] */;
  %455 = @func_4133() /* ty=Tensor[(12, 3, 10), float32] */;
  (%454, %455)
}

def @func_5976() -> (Tensor[(12, 3, 10), float32],) {
  %456 = @func_4133() /* ty=Tensor[(12, 3, 10), float32] */;
  (%456,)
}

def @func_5799() -> (Tensor[(12, 3, 10), float32],) {
  %457 = @func_459() /* ty=Tensor[(12, 3, 10), float32] */;
  (%457,)
}

def @func_7903(%var_7822: Tensor[(8, 9, 2), float64], %var_7823: Tensor[(8, 9, 2), float64], %var_7829: Tensor[(8, 9, 2), bool]) -> (Tensor[(8, 9, 2), float32], Tensor[(8, 9, 2), float64], Tensor[(8, 9, 2), bool], Tensor[(8, 9, 2), uint32], Tensor[(12, 3, 10), float32], Tensor[(8, 9, 2), float64], Tensor[(4, 8, 10), float32], Tensor[(320), float32], Tensor[(12, 3, 10), float32]) {
  %458 = cast(%var_7823, dtype="bool") /* ty=Tensor[(8, 9, 2), bool] */;
  %459 = shape_of(%var_7822, dtype="int32") /* ty=Tensor[(3), int32] */;
  %460 = cast(%var_7822, dtype="bool") /* ty=Tensor[(8, 9, 2), bool] */;
  %461 = dyn.reshape(%458, %459, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %462 = not_equal(%460, %461) /* ty=Tensor[(8, 9, 2), bool] */;
  %463 = cast(%var_7829, dtype="float32") /* ty=Tensor[(8, 9, 2), float32] */;
  %464 = shape_of(%462, dtype="int32") /* ty=Tensor[(3), int32] */;
  %465 = cast(%462, dtype="float32") /* ty=Tensor[(8, 9, 2), float32] */;
  %466 = dyn.reshape(%463, %464, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %467 = cast(%var_7822, dtype="float64") /* ty=Tensor[(8, 9, 2), float64] */;
  %468 = cast(%462, dtype="bool") /* ty=Tensor[(8, 9, 2), bool] */;
  %469 = shape_of(%var_7829, dtype="int32") /* ty=Tensor[(3), int32] */;
  %470 = cast(%var_7829, dtype="bool") /* ty=Tensor[(8, 9, 2), bool] */;
  %471 = dyn.reshape(%468, %469, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %472 = cast(%462, dtype="float64") /* ty=Tensor[(8, 9, 2), float64] */;
  %473 = asinh(%472) /* ty=Tensor[(8, 9, 2), float64] */;
  %474 = cast(%462, dtype="uint32") /* ty=Tensor[(8, 9, 2), uint32] */;
  %475 = shape_of(%473, dtype="int32") /* ty=Tensor[(3), int32] */;
  %476 = cast(%473, dtype="uint32") /* ty=Tensor[(8, 9, 2), uint32] */;
  %477 = dyn.reshape(%474, %475, newshape=[]) /* ty=Tensor[(?, ?, ?), uint32] */;
  %478 = cast(%462, dtype="float32") /* ty=Tensor[(8, 9, 2), float32] */;
  %479 = shape_of(%473, dtype="int32") /* ty=Tensor[(3), int32] */;
  %480 = cast(%473, dtype="float32") /* ty=Tensor[(8, 9, 2), float32] */;
  %481 = dyn.reshape(%478, %479, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %482 = multiply(%480, %481) /* ty=Tensor[(8, 9, 2), float32] */;
  %483 = cast(%482, dtype="float64") /* ty=Tensor[(8, 9, 2), float64] */;
  %484 = cast(meta[relay.Constant][17] /* ty=Tensor[(320), float32] */, dtype="float32") /* ty=Tensor[(320), float32] */;
  %485 = reshape(%484, newshape=[320]) /* ty=Tensor[(320), float32] */;
  %486 = @func_2246(%485) /* ty=(Tensor[(12, 3, 10), float32], Tensor[(12, 3, 10), int8], Tensor[(12, 3, 10), float32], Tensor[(12, 3, 10), float32], Tensor[(4, 8, 10), float32], Tensor[(320), float32], Tensor[(12, 3, 10), float32], Tensor[(12, 3, 10), uint64]) */;
  %487 = add(%465, %466) /* ty=Tensor[(8, 9, 2), float32] */;
  %488 = acos(%467) /* ty=Tensor[(8, 9, 2), float64] */;
  %489 = less(%470, %471) /* ty=Tensor[(8, 9, 2), bool] */;
  %490 = bitwise_xor(%476, %477) /* ty=Tensor[(8, 9, 2), uint32] */;
  %491 = @func_7390() /* ty=Tensor[(12, 3, 10), float32] */;
  %492 = acosh(%483) /* ty=Tensor[(8, 9, 2), float64] */;
  %493 = %486.4;
  %494 = @func_807() /* ty=Tensor[(12, 3, 10), float32] */;
  (%487, %488, %489, %490, %491, %492, %493, meta[relay.Constant][17] /* ty=Tensor[(320), float32] */, %494)
}

def @func_7466(%var_7453: Tensor[(180, 2), float32]) -> (Tensor[(45), float64], Tensor[(12, 3, 10), uint32], Tensor[(180, 2), float32], Tensor[(12, 3, 10), float32], Tensor[(120), float32], Tensor[(120), float32]) {
  %495 = @func_2796() /* ty=Tensor[(45), float64] */;
  %496 = cast(meta[relay.Constant][18] /* ty=Tensor[(45), float64] */, dtype="float64") /* ty=Tensor[(45), float64] */;
  %497 = shape_of(%495, dtype="int32") /* ty=Tensor[(1), int32] */;
  %498 = cast(%495, dtype="float64") /* ty=Tensor[(45), float64] */;
  %499 = dyn.reshape(%496, %497, newshape=[]) /* ty=Tensor[(?), float64] */;
  %500 = cast(%var_7453, dtype="float32") /* ty=Tensor[(180, 2), float32] */;
  %501 = divide(%498, %499) /* ty=Tensor[(45), float64] */;
  %502 = cast(%501, dtype="float64") /* ty=Tensor[(45), float64] */;
  %503 = reshape(%500, newshape=[12, 3, 10]) /* ty=Tensor[(12, 3, 10), float32] */;
  %504 = reshape(%502, newshape=[45]) /* ty=Tensor[(45), float64] */;
  %505 = @func_5337(%503, %504) /* ty=(Tensor[(12, 3, 10), uint32], Tensor[(45), float64], Tensor[(45), float64], Tensor[(12, 3, 10), float32]) */;
  %506 = cast(meta[relay.Constant][19] /* ty=Tensor[(120), float32] */, dtype="float32") /* ty=Tensor[(120), float32] */;
  %507 = reshape(%506, newshape=[120]) /* ty=Tensor[(120), float32] */;
  %508 = @func_6744(%507) /* ty=(Tensor[(12, 3, 10), float32], Tensor[(5, 3, 8), float32], Tensor[(120), float32]) */;
  %509 = %505.0;
  %510 = @func_739() /* ty=Tensor[(12, 3, 10), float32] */;
  %511 = %508.2;
  (%501, %509, %var_7453, %510, %511, meta[relay.Constant][19] /* ty=Tensor[(120), float32] */)
}

def @func_5139() -> (Tensor[(12, 3, 10), float32], Tensor[(12, 3, 10), float32], Tensor[(10, 10, 15), float64], Tensor[(750, 2), float64], Tensor[(120), uint32]) {
  %512 = cast(meta[relay.Constant][20] /* ty=Tensor[(750, 2), float64] */, dtype="float64") /* ty=Tensor[(750, 2), float64] */;
  %513 = cast(meta[relay.Constant][21] /* ty=Tensor[(120), uint32] */, dtype="uint32") /* ty=Tensor[(120), uint32] */;
  %514 = reshape(%512, newshape=[10, 10, 15]) /* ty=Tensor[(10, 10, 15), float64] */;
  %515 = reshape(%513, newshape=[120]) /* ty=Tensor[(120), uint32] */;
  %516 = @func_1372(%514, %515) /* ty=(Tensor[(10, 10, 15), float64], Tensor[(3, 8, 5), uint32], Tensor[(120), uint32]) */;
  %517 = @func_3576() /* ty=Tensor[(12, 3, 10), float32] */;
  %518 = @func_739() /* ty=Tensor[(12, 3, 10), float32] */;
  %519 = %516.0;
  (%517, %518, %519, meta[relay.Constant][20] /* ty=Tensor[(750, 2), float64] */, meta[relay.Constant][21] /* ty=Tensor[(120), uint32] */)
}

def @func_7010() -> (Tensor[(45), float64],) {
  %520 = @func_4636() /* ty=(Tensor[(45), float64],) */;
  %521 = %520.0;
  (%521,)
}

def @func_6014(%var_6003: Tensor[(13, 14, 13), float32]) -> Tensor[(13, 14, 13), bool] {
  %522 = cast(%var_6003, dtype="bool") /* ty=Tensor[(13, 14, 13), bool] */;
  %523 = shape_of(meta[relay.Constant][22] /* ty=Tensor[(13, 14, 13), float32] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %524 = cast(meta[relay.Constant][22] /* ty=Tensor[(13, 14, 13), float32] */, dtype="bool") /* ty=Tensor[(13, 14, 13), bool] */;
  %525 = dyn.reshape(%522, %523, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  equal(%524, %525) /* ty=Tensor[(13, 14, 13), bool] */
}

def @func_1658() -> Tensor[(45), float64] {
  %526 = @func_1561() /* ty=(Tensor[(12, 3, 10), float32], Tensor[(12, 3, 10), float32], Tensor[(12, 3, 10), float32], Tensor[(12, 3, 10), float32], Tensor[(45), float64]) */;
  %526.4
}

def @func_8750() -> (Tensor[(45), float64], Tensor[(12, 3, 10), float32], Tensor[(12, 3, 10), float32]) {
  %527 = @func_4636() /* ty=(Tensor[(45), float64],) */;
  %528 = @func_6525() /* ty=(Tensor[(12, 3, 10), float32], Tensor[(12, 3, 10), float32]) */;
  %529 = @func_3240() /* ty=(Tensor[(12, 3, 10), float32], Tensor[(12, 3, 10), float32]) */;
  %530 = %527.0;
  %531 = %528.1;
  %532 = %529.0;
  (%530, %531, %532)
}

def @func_9008() -> Tensor[(12, 3, 10), float32] {
  %533 = @func_8349() /* ty=(Tensor[(12, 3, 10), float32],) */;
  %533.0
}

def @func_8835(%var_8792: Tensor[(9, 13, 3), int32]) -> (Tensor[(9, 13, 3), bool], Tensor[(5, 7, 9), bool], Tensor[(10, 10, 15), float64], Tensor[(12, 3, 10), float32], Tensor[(286), float64]) {
  %534 = cast(%var_8792, dtype="bool") /* ty=Tensor[(9, 13, 3), bool] */;
  %535 = shape_of(meta[relay.Constant][23] /* ty=Tensor[(9, 13, 3), int32] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %536 = cast(meta[relay.Constant][23] /* ty=Tensor[(9, 13, 3), int32] */, dtype="bool") /* ty=Tensor[(9, 13, 3), bool] */;
  %537 = dyn.reshape(%534, %535, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %538 = @func_6779() /* ty=(Tensor[(12, 3, 10), float32], Tensor[(12, 3, 10), float32], Tensor[(10, 10, 15), float64]) */;
  %539 = cast(meta[relay.Constant][24] /* ty=Tensor[(286), float64] */, dtype="float64") /* ty=Tensor[(286), float64] */;
  %540 = reshape(%539, newshape=[286]) /* ty=Tensor[(286), float64] */;
  %541 = @func_3860(%540) /* ty=(Tensor[(12, 3, 10), float32], Tensor[(12, 3, 10), float32], Tensor[(12, 3, 10), float32], Tensor[(12, 3, 10), float32], Tensor[(12, 3, 10), float32], Tensor[(12, 3, 10), float32], Tensor[(12, 3, 10), float32], Tensor[(12, 3, 10), int8], Tensor[(5, 7, 9), bool], Tensor[(45), float64], Tensor[(11, 13, 2), float64], Tensor[(286), float64], Tensor[(12, 3, 10), float32]) */;
  %542 = greater_equal(%536, %537) /* ty=Tensor[(9, 13, 3), bool] */;
  %543 = @func_7647() /* ty=Tensor[(5, 7, 9), bool] */;
  %544 = %538.2;
  %545 = %541.1;
  (%542, %543, %544, %545, meta[relay.Constant][24] /* ty=Tensor[(286), float64] */)
}

def @func_9066() -> (Tensor[(45), float64], Tensor[(12, 3, 10), float32]) {
  %546 = @func_3532() /* ty=Tensor[(45), float64] */;
  %547 = cast(%546, dtype="float64") /* ty=Tensor[(45), float64] */;
  %548 = atan(%547) /* ty=Tensor[(45), float64] */;
  %549 = @func_5875() /* ty=Tensor[(12, 3, 10), float32] */;
  (%548, %549)
}

def @func_8716(%var_8689: Tensor[(15, 4, 3), float64]) -> (Tensor[(15, 4, 3), float32], Tensor[(45), float64], Tensor[(12, 3, 10), float32]) {
  %550 = cast(%var_8689, dtype="float64") /* ty=Tensor[(15, 4, 3), float64] */;
  %551 = sin(%550) /* ty=Tensor[(15, 4, 3), float64] */;
  %552 = cast(%var_8689, dtype="float32") /* ty=Tensor[(15, 4, 3), float32] */;
  %553 = shape_of(%551, dtype="int32") /* ty=Tensor[(3), int32] */;
  %554 = cast(%551, dtype="float32") /* ty=Tensor[(15, 4, 3), float32] */;
  %555 = dyn.reshape(%552, %553, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %556 = @func_3882() /* ty=(Tensor[(12, 3, 10), float32], Tensor[(12, 3, 10), float32]) */;
  %557 = divide(%554, %555) /* ty=Tensor[(15, 4, 3), float32] */;
  %558 = @func_5728() /* ty=Tensor[(45), float64] */;
  %559 = %556.1;
  (%557, %558, %559)
}

def @func_8881() -> (Tensor[(12, 3, 10), float32], Tensor[(12, 3, 10), float32], Tensor[(45), float64]) {
  %560 = @func_6458() /* ty=(Tensor[(12, 3, 10), float32], Tensor[(12, 3, 10), float32]) */;
  %561 = @func_6284() /* ty=(Tensor[(12, 3, 10), float32], Tensor[(5, 7, 9), bool]) */;
  %562 = %560.0;
  %563 = %561.0;
  %564 = @func_1658() /* ty=Tensor[(45), float64] */;
  (%562, %563, %564)
}

def @func_5158() -> Tensor[(12, 3, 10), float32] {
  %565 = @func_3882() /* ty=(Tensor[(12, 3, 10), float32], Tensor[(12, 3, 10), float32]) */;
  %565.1
}

def @func_9172(%var_9160: Tensor[(585), float64]) -> (Tensor[(12, 3, 10), float32], Tensor[(3, 15, 13), float64], Tensor[(585), float64], Tensor[(3, 15, 13), float64]) {
  %566 = @func_8247() /* ty=(Tensor[(12, 3, 10), float32], Tensor[(5, 7, 9), bool], Tensor[(12, 3, 10), float32]) */;
  %567 = cast(%var_9160, dtype="float64") /* ty=Tensor[(585), float64] */;
  %568 = reshape(%567, newshape=[3, 15, 13]) /* ty=Tensor[(3, 15, 13), float64] */;
  %569 = cast(%var_9160, dtype="float64") /* ty=Tensor[(585), float64] */;
  %570 = reshape(%569, newshape=[3, 15, 13]) /* ty=Tensor[(3, 15, 13), float64] */;
  %571 = %566.0;
  %572 = @func_8637(%568) /* ty=Tensor[(3, 15, 13), float64] */;
  %573 = @func_8637(%570) /* ty=Tensor[(3, 15, 13), float64] */;
  (%571, %572, %var_9160, %573)
}

def @func_4531() -> (Tensor[(12, 3, 10), float32], Tensor[(5, 7, 9), bool], Tensor[(12, 3, 10), float32]) {
  %574 = @func_1182() /* ty=(Tensor[(5, 7, 9), bool],) */;
  %575 = @func_1779() /* ty=(Tensor[(12, 3, 10), float32],) */;
  %576 = @func_791() /* ty=Tensor[(12, 3, 10), float32] */;
  %577 = %574.0;
  %578 = %575.0;
  (%576, %577, %578)
}

def @func_3138(%var_3030: Tensor[(4, 4, 6), float32]) -> (Tensor[(4, 4, 6), float32], Tensor[(12, 3, 10), float32], Tensor[(5, 5, 6), int64], Tensor[(12, 3, 10), float32], Tensor[(12, 3, 10), float32], Tensor[(12, 3, 10), float32], Tensor[(9, 150), bool]) {
  %579 = cast(%var_3030, dtype="float32") /* ty=Tensor[(4, 4, 6), float32] */;
  %580 = @func_2953() /* ty=(Tensor[(12, 3, 10), float32],) */;
  %581 = cast(meta[relay.Constant][25] /* ty=Tensor[(1, 150), int64] */, dtype="int64") /* ty=Tensor[(1, 150), int64] */;
  %582 = cast(meta[relay.Constant][25] /* ty=Tensor[(1, 150), int64] */, dtype="int64") /* ty=Tensor[(1, 150), int64] */;
  %583 = reshape(%581, newshape=[5, 5, 6]) /* ty=Tensor[(5, 5, 6), int64] */;
  %584 = reshape(%582, newshape=[5, 5, 6]) /* ty=Tensor[(5, 5, 6), int64] */;
  %585 = @func_1867(%583, %584) /* ty=(Tensor[(5, 5, 6), int64],) */;
  %586 = @func_1561() /* ty=(Tensor[(12, 3, 10), float32], Tensor[(12, 3, 10), float32], Tensor[(12, 3, 10), float32], Tensor[(12, 3, 10), float32], Tensor[(45), float64]) */;
  %587 = @func_1137() /* ty=(Tensor[(12, 3, 10), float32],) */;
  %588 = cast(meta[relay.Constant][25] /* ty=Tensor[(1, 150), int64] */, dtype="bool") /* ty=Tensor[(1, 150), bool] */;
  %589 = cast(meta[relay.Constant][26] /* ty=Tensor[(9, 150), int64] */, dtype="bool") /* ty=Tensor[(9, 150), bool] */;
  %590 = equal(%588, %589) /* ty=Tensor[(9, 150), bool] */;
  %591 = cast(%590, dtype="bool") /* ty=Tensor[(9, 150), bool] */;
  %592 = cast(meta[relay.Constant][25] /* ty=Tensor[(1, 150), int64] */, dtype="bool") /* ty=Tensor[(1, 150), bool] */;
  %593 = exp(%579) /* ty=Tensor[(4, 4, 6), float32] */;
  %594 = %580.0;
  %595 = %585.0;
  %596 = %586.3;
  %597 = @func_739() /* ty=Tensor[(12, 3, 10), float32] */;
  %598 = %587.0;
  %599 = less(%591, %592) /* ty=Tensor[(9, 150), bool] */;
  (%593, %594, %595, %596, %597, %598, %599)
}

def @main(%var_9421: uint32) -> (Tensor[(6, 7, 2), uint32], Tensor[(5, 7, 9), bool], Tensor[(6, 7, 2), float64]) {
  %600 = cast(%var_9421, dtype="uint32") /* ty=uint32 */;
  %601 = cast(meta[relay.Constant][27] /* ty=Tensor[(6, 7, 2), uint32] */, dtype="uint32") /* ty=Tensor[(6, 7, 2), uint32] */;
  %602 = @func_2578() /* ty=(Tensor[(5, 7, 9), bool], Tensor[(12, 3, 10), float64]) */;
  %603 = cast(meta[relay.Constant][27] /* ty=Tensor[(6, 7, 2), uint32] */, dtype="bool") /* ty=Tensor[(6, 7, 2), bool] */;
  %604 = cast(%var_9421, dtype="bool") /* ty=bool */;
  %605 = greater(%603, %604) /* ty=Tensor[(6, 7, 2), bool] */;
  %606 = cast(%605, dtype="float64") /* ty=Tensor[(6, 7, 2), float64] */;
  %607 = minimum(%600, %601) /* ty=Tensor[(6, 7, 2), uint32] */;
  %608 = %602.0;
  %609 = sigmoid(%606) /* ty=Tensor[(6, 7, 2), float64] */;
  (%607, %608, %609)
}

def @func_9122() -> (Tensor[(16, 16, 16), float32], Tensor[(12, 3, 10), int8], Tensor[(45), uint32], Tensor[(5, 9), float64], Tensor[(12, 3, 10), float32]) {
  %610 = @func_8404() /* ty=(Tensor[(16, 16, 16), float32],) */;
  %611 = %610.0;
  %612 = cast(%611, dtype="float32") /* ty=Tensor[(16, 16, 16), float32] */;
  %613 = @func_644() /* ty=(Tensor[(5, 7, 9), bool], Tensor[(12, 3, 10), int8], Tensor[(360), float32], Tensor[(5, 7, 9), bool], Tensor[(5, 7, 9), bool], Tensor[(45), float64], Tensor[(12, 3, 10), int8]) */;
  %614 = cast(meta[relay.Constant][28] /* ty=Tensor[(5, 9), float64] */, dtype="float64") /* ty=Tensor[(5, 9), float64] */;
  %615 = reshape(%614, newshape=[45]) /* ty=Tensor[(45), float64] */;
  %616 = @func_2759(%615) /* ty=(Tensor[(45), uint32], Tensor[(12, 3, 10), float32]) */;
  %617 = asinh(%612) /* ty=Tensor[(16, 16, 16), float32] */;
  %618 = %613.6;
  %619 = %616.0;
  %620 = @func_791() /* ty=Tensor[(12, 3, 10), float32] */;
  (%617, %618, %619, meta[relay.Constant][28] /* ty=Tensor[(5, 9), float64] */, %620)
}

def @func_7229() -> Tensor[(12, 3, 10), float32] {
  @func_5370() /* ty=Tensor[(12, 3, 10), float32] */
}

def @func_4934() -> (Tensor[(45), float64],) {
  %621 = @func_2833() /* ty=Tensor[(45), float64] */;
  (%621,)
}

def @func_8247() -> (Tensor[(12, 3, 10), float32], Tensor[(5, 7, 9), bool], Tensor[(12, 3, 10), float32]) {
  %622 = @func_2636() /* ty=(Tensor[(12, 3, 10), float32], Tensor[(12, 3, 10), float32], Tensor[(12, 3, 10), float32]) */;
  %623 = @func_4955() /* ty=(Tensor[(12, 3, 10), float32],) */;
  %624 = %622.0;
  %625 = @func_4706() /* ty=Tensor[(5, 7, 9), bool] */;
  %626 = %623.0;
  (%624, %625, %626)
}

def @func_1830(%var_1824: Tensor[(6, 12, 16), float64]) -> (Tensor[(6, 12, 16), float64],) {
  %627 = cast(%var_1824, dtype="float64") /* ty=Tensor[(6, 12, 16), float64] */;
  %628 = acosh(%627) /* ty=Tensor[(6, 12, 16), float64] */;
  (%628,)
}

def @func_4157() -> (Tensor[(12, 3, 10), float32],) {
  %629 = @func_2043() /* ty=Tensor[(12, 3, 10), float32] */;
  %630 = cast(%629, dtype="float32") /* ty=Tensor[(12, 3, 10), float32] */;
  %631 = acosh(%630) /* ty=Tensor[(12, 3, 10), float32] */;
  (%631,)
}

def @func_2246(%var_2236: Tensor[(320), float32]) -> (Tensor[(12, 3, 10), float32], Tensor[(12, 3, 10), int8], Tensor[(12, 3, 10), float32], Tensor[(12, 3, 10), float32], Tensor[(4, 8, 10), float32], Tensor[(320), float32], Tensor[(12, 3, 10), float32], Tensor[(12, 3, 10), uint64]) {
  %632 = @func_1137() /* ty=(Tensor[(12, 3, 10), float32],) */;
  %633 = @func_1479() /* ty=(Tensor[(12, 3, 10), float32], Tensor[(12, 3, 10), int8], Tensor[(5, 7, 9), bool], Tensor[(12, 3, 10), float32], Tensor[(12, 3, 10), float64], Tensor[(12, 3, 10), float32], Tensor[(12, 3, 10), float32], Tensor[(12, 3, 10), float32]) */;
  %634 = @func_1849() /* ty=(Tensor[(12, 3, 10), float32],) */;
  %635 = cast(%var_2236, dtype="float32") /* ty=Tensor[(320), float32] */;
  %636 = cast(%var_2236, dtype="float32") /* ty=Tensor[(320), float32] */;
  %637 = reshape(%635, newshape=[4, 8, 10]) /* ty=Tensor[(4, 8, 10), float32] */;
  %638 = reshape(%636, newshape=[4, 8, 10]) /* ty=Tensor[(4, 8, 10), float32] */;
  %639 = @func_807() /* ty=Tensor[(12, 3, 10), float32] */;
  %640 = cast(%639, dtype="float32") /* ty=Tensor[(12, 3, 10), float32] */;
  %641 = reshape(%640, newshape=[12, 3, 10]) /* ty=Tensor[(12, 3, 10), float32] */;
  %642 = %632.0;
  %643 = %633.1;
  %644 = %634.0;
  %645 = @func_308(%637, %638) /* ty=Tensor[(4, 8, 10), float32] */;
  %646 = @func_791() /* ty=Tensor[(12, 3, 10), float32] */;
  %647 = @func_834(%641) /* ty=Tensor[(12, 3, 10), uint64] */;
  (%642, %643, %644, %639, %645, %var_2236, %646, %647)
}

def @func_5687() -> Tensor[(12, 3, 10), float32] {
  @func_2884() /* ty=Tensor[(12, 3, 10), float32] */
}

def @func_5991() -> Tensor[(12, 3, 10), float32] {
  %648 = @func_5976() /* ty=(Tensor[(12, 3, 10), float32],) */;
  %648.0
}

def @func_4706() -> Tensor[(5, 7, 9), bool] {
  %649 = @func_2578() /* ty=(Tensor[(5, 7, 9), bool], Tensor[(12, 3, 10), float64]) */;
  %649.0
}

def @func_739() -> Tensor[(12, 3, 10), float32] {
  @func_459() /* ty=Tensor[(12, 3, 10), float32] */
}

def @func_1579() -> (Tensor[(12, 3, 10), float32], Tensor[(12, 3, 10), float32]) {
  %650 = @func_791() /* ty=Tensor[(12, 3, 10), float32] */;
  %651 = @func_459() /* ty=Tensor[(12, 3, 10), float32] */;
  (%650, %651)
}

def @func_3525(%var_3438: Tensor[(5, 14, 9), uint64], %var_3478: Tensor[(45), float64]) -> (Tensor[(12, 3, 10), float32], Tensor[(5, 7, 9), bool], Tensor[(45), float64], Tensor[(12, 3, 10), float32], Tensor[(5, 14, 9), int64], Tensor[(12, 3, 10), float32]) {
  %652 = cast(%var_3478, dtype="float64") /* ty=Tensor[(45), float64] */;
  %653 = reshape(%652, newshape=[5, 1, 9]) /* ty=Tensor[(5, 1, 9), float64] */;
  %654 = @func_1849() /* ty=(Tensor[(12, 3, 10), float32],) */;
  %655 = cast(%var_3438, dtype="bool") /* ty=Tensor[(5, 14, 9), bool] */;
  %656 = shape_of(meta[relay.Constant][29] /* ty=Tensor[(5, 14, 9), uint64] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %657 = cast(meta[relay.Constant][29] /* ty=Tensor[(5, 14, 9), uint64] */, dtype="bool") /* ty=Tensor[(5, 14, 9), bool] */;
  %658 = dyn.reshape(%655, %656, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %659 = less_equal(%657, %658) /* ty=Tensor[(5, 14, 9), bool] */;
  %660 = cast(%659, dtype="float32") /* ty=Tensor[(5, 14, 9), float32] */;
  %661 = tan(%660) /* ty=Tensor[(5, 14, 9), float32] */;
  %662 = cast(%661, dtype="float64") /* ty=Tensor[(5, 14, 9), float64] */;
  %663 = erf(%662) /* ty=Tensor[(5, 14, 9), float64] */;
  %664 = cast(%661, dtype="int64") /* ty=Tensor[(5, 14, 9), int64] */;
  %665 = shape_of(%663, dtype="int32") /* ty=Tensor[(3), int32] */;
  %666 = cast(%663, dtype="int64") /* ty=Tensor[(5, 14, 9), int64] */;
  %667 = dyn.reshape(%664, %665, newshape=[]) /* ty=Tensor[(?, ?, ?), int64] */;
  %668 = @func_2591() /* ty=Tensor[(12, 3, 10), float32] */;
  %669 = @func_176(%653) /* ty=Tensor[(5, 7, 9), bool] */;
  %670 = %654.0;
  %671 = subtract(%666, %667) /* ty=Tensor[(5, 14, 9), int64] */;
  %672 = @func_2043() /* ty=Tensor[(12, 3, 10), float32] */;
  (%668, %669, %var_3478, %670, %671, %672)
}

def @func_7346() -> (Tensor[(5, 7, 9), float32],) {
  %673 = @func_3717() /* ty=(Tensor[(5, 7, 9), float32], Tensor[(12, 3, 10), float32]) */;
  %674 = %673.0;
  (%674,)
}

def @func_7705() -> Tensor[(12, 3, 10), float32] {
  %675 = @func_3717() /* ty=(Tensor[(5, 7, 9), float32], Tensor[(12, 3, 10), float32]) */;
  %675.1
}

def @func_6246() -> (Tensor[(12, 3, 10), float32], Tensor[(5, 7, 9), bool]) {
  %676 = @func_5147() /* ty=(Tensor[(12, 3, 10), float32], Tensor[(5, 7, 9), bool]) */;
  %677 = @func_2578() /* ty=(Tensor[(5, 7, 9), bool], Tensor[(12, 3, 10), float64]) */;
  %678 = %676.0;
  %679 = %677.0;
  (%678, %679)
}

def @func_419() -> Tensor[(12, 3, 10), float32] {
  %680 = @func_331() /* ty=(Tensor[(12, 3, 10), float32],) */;
  %680.0
}

def @func_6332() -> (Tensor[(12, 3, 10), float32], Tensor[(12, 3, 10), float32], Tensor[(12, 3, 10), float32], Tensor[(630), uint64], Tensor[(45), float64]) {
  %681 = @func_4157() /* ty=(Tensor[(12, 3, 10), float32],) */;
  %682 = cast(meta[relay.Constant][30] /* ty=Tensor[(630), uint64] */, dtype="uint64") /* ty=Tensor[(630), uint64] */;
  %683 = cast(meta[relay.Constant][31] /* ty=Tensor[(45), float64] */, dtype="float64") /* ty=Tensor[(45), float64] */;
  %684 = reshape(%682, newshape=[5, 14, 9]) /* ty=Tensor[(5, 14, 9), uint64] */;
  %685 = reshape(%683, newshape=[45]) /* ty=Tensor[(45), float64] */;
  %686 = @func_3525(%684, %685) /* ty=(Tensor[(12, 3, 10), float32], Tensor[(5, 7, 9), bool], Tensor[(45), float64], Tensor[(12, 3, 10), float32], Tensor[(5, 14, 9), int64], Tensor[(12, 3, 10), float32]) */;
  %687 = @func_3576() /* ty=Tensor[(12, 3, 10), float32] */;
  %688 = %681.0;
  %689 = %686.0;
  (%687, %688, %689, meta[relay.Constant][30] /* ty=Tensor[(630), uint64] */, meta[relay.Constant][31] /* ty=Tensor[(45), float64] */)
}

def @func_5875() -> Tensor[(12, 3, 10), float32] {
  %690 = @func_1561() /* ty=(Tensor[(12, 3, 10), float32], Tensor[(12, 3, 10), float32], Tensor[(12, 3, 10), float32], Tensor[(12, 3, 10), float32], Tensor[(45), float64]) */;
  %690.0
}

def @func_8349() -> (Tensor[(12, 3, 10), float32],) {
  %691 = @func_5048() /* ty=(Tensor[(12, 3, 10), float32],) */;
  %692 = %691.0;
  (%692,)
}

def @func_1008(%var_954: Tensor[(120), uint32], %var_966: Tensor[(45, 1), float64], %var_1001: Tensor[(5, 7, 9), float64]) -> (Tensor[(12, 3, 10), float32], Tensor[(3, 8, 5), uint32], Tensor[(120), uint32], Tensor[(45, 1), float64], Tensor[(12, 3, 10), float32], Tensor[(5, 7, 9), int16]) {
  %693 = @func_583() /* ty=(Tensor[(12, 3, 10), float32],) */;
  %694 = cast(%var_954, dtype="uint32") /* ty=Tensor[(120), uint32] */;
  %695 = reshape(%694, newshape=[3, 8, 5]) /* ty=Tensor[(3, 8, 5), uint32] */;
  %696 = @func_777(%695) /* ty=(Tensor[(3, 8, 5), uint32], Tensor[(3, 8, 5), bool]) */;
  %697 = @func_721() /* ty=(Tensor[(12, 3, 10), float32],) */;
  %698 = cast(%var_966, dtype="float64") /* ty=Tensor[(45, 1), float64] */;
  %699 = reshape(%698, newshape=[5, 1, 9]) /* ty=Tensor[(5, 1, 9), float64] */;
  %700 = @func_176(%699) /* ty=Tensor[(5, 7, 9), bool] */;
  %701 = cast(%700, dtype="float64") /* ty=Tensor[(5, 7, 9), float64] */;
  %702 = sin(%701) /* ty=Tensor[(5, 7, 9), float64] */;
  %703 = cast(%var_1001, dtype="int16") /* ty=Tensor[(5, 7, 9), int16] */;
  %704 = shape_of(%702, dtype="int32") /* ty=Tensor[(3), int32] */;
  %705 = cast(%702, dtype="int16") /* ty=Tensor[(5, 7, 9), int16] */;
  %706 = dyn.reshape(%703, %704, newshape=[]) /* ty=Tensor[(?, ?, ?), int16] */;
  %707 = %693.0;
  %708 = %696.0;
  %709 = %697.0;
  %710 = multiply(%705, %706) /* ty=Tensor[(5, 7, 9), int16] */;
  (%707, %708, %var_954, %var_966, %709, %710)
}

def @func_6176() -> Tensor[(5, 7, 9), bool] {
  %711 = @func_2578() /* ty=(Tensor[(5, 7, 9), bool], Tensor[(12, 3, 10), float64]) */;
  %711.0
}

def @func_459() -> Tensor[(12, 3, 10), float32] {
  @func_419() /* ty=Tensor[(12, 3, 10), float32] */
}

def @func_721() -> (Tensor[(12, 3, 10), float32],) {
  %712 = @func_583() /* ty=(Tensor[(12, 3, 10), float32],) */;
  %713 = %712.0;
  (%713,)
}

def @func_3028() -> (Tensor[(45), float64], Tensor[(12, 3, 10), uint64], Tensor[(360), float32], Tensor[(5, 7, 9), bool], Tensor[(5, 7, 9), float64], Tensor[(2, 14, 3), float64]) {
  %714 = @func_271() /* ty=(Tensor[(12, 3, 10), float32], Tensor[(5, 7, 9), bool], Tensor[(45), float64]) */;
  %715 = cast(meta[relay.Constant][32] /* ty=Tensor[(360), float32] */, dtype="float32") /* ty=Tensor[(360), float32] */;
  %716 = reshape(%715, newshape=[12, 3, 10]) /* ty=Tensor[(12, 3, 10), float32] */;
  %717 = @func_2149() /* ty=(Tensor[(12, 3, 10), float32], Tensor[(12, 3, 10), float32], Tensor[(5, 7, 9), bool], Tensor[(5, 7, 9), bool], Tensor[(12, 3, 10), int8]) */;
  %718 = @func_2149() /* ty=(Tensor[(12, 3, 10), float32], Tensor[(12, 3, 10), float32], Tensor[(5, 7, 9), bool], Tensor[(5, 7, 9), bool], Tensor[(12, 3, 10), int8]) */;
  %719 = %718.3;
  %720 = cast(%719, dtype="float64") /* ty=Tensor[(5, 7, 9), float64] */;
  %721 = %714.2;
  %722 = cast(%721, dtype="float64") /* ty=Tensor[(45), float64] */;
  %723 = reshape(%722, newshape=[1, 45]) /* ty=Tensor[(1, 45), float64] */;
  %724 = @func_1323(%723) /* ty=(Tensor[(5, 7, 9), float32], Tensor[(5, 7, 9), bool], Tensor[(45, 1), float64], Tensor[(120), uint32], Tensor[(1, 45), float64], Tensor[(5, 7, 9), int8], Tensor[(21, 4), bool], Tensor[(320), float32], Tensor[(2, 14, 3), float64]) */;
  %725 = @func_834(%716) /* ty=Tensor[(12, 3, 10), uint64] */;
  %726 = %717.3;
  %727 = rsqrt(%720) /* ty=Tensor[(5, 7, 9), float64] */;
  %728 = %724.8;
  (%721, %725, meta[relay.Constant][32] /* ty=Tensor[(360), float32] */, %726, %727, %728)
}

def @func_4716() -> (Tensor[(12, 3, 10), float32],) {
  %729 = @func_1779() /* ty=(Tensor[(12, 3, 10), float32],) */;
  %730 = %729.0;
  (%730,)
}

def @func_8637(%var_8629: Tensor[(3, 15, 13), float64]) -> Tensor[(3, 15, 13), float64] {
  %731 = cast(%var_8629, dtype="float64") /* ty=Tensor[(3, 15, 13), float64] */;
  asin(%731) /* ty=Tensor[(3, 15, 13), float64] */
}

def @func_4879() -> Tensor[(12, 3, 10), float32] {
  %732 = @func_2280() /* ty=(Tensor[(12, 3, 10), float32],) */;
  %732.0
}

def @func_1323(%var_1266: Tensor[(1, 45), float64]) -> (Tensor[(5, 7, 9), float32], Tensor[(5, 7, 9), bool], Tensor[(45, 1), float64], Tensor[(120), uint32], Tensor[(1, 45), float64], Tensor[(5, 7, 9), int8], Tensor[(21, 4), bool], Tensor[(320), float32], Tensor[(2, 14, 3), float64]) {
  %733 = @func_1150() /* ty=Tensor[(5, 7, 9), bool] */;
  %734 = cast(meta[relay.Constant][33] /* ty=Tensor[(5, 7, 9), bool] */, dtype="bool") /* ty=Tensor[(5, 7, 9), bool] */;
  %735 = shape_of(%733, dtype="int32") /* ty=Tensor[(3), int32] */;
  %736 = cast(%733, dtype="bool") /* ty=Tensor[(5, 7, 9), bool] */;
  %737 = dyn.reshape(%734, %735, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %738 = greater(%736, %737) /* ty=Tensor[(5, 7, 9), bool] */;
  %739 = cast(%733, dtype="float32") /* ty=Tensor[(5, 7, 9), float32] */;
  %740 = shape_of(%738, dtype="int32") /* ty=Tensor[(3), int32] */;
  %741 = cast(%738, dtype="float32") /* ty=Tensor[(5, 7, 9), float32] */;
  %742 = dyn.reshape(%739, %740, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %743 = cast(meta[relay.Constant][34] /* ty=Tensor[(120), uint32] */, dtype="uint32") /* ty=Tensor[(120), uint32] */;
  %744 = cast(%var_1266, dtype="float64") /* ty=Tensor[(1, 45), float64] */;
  %745 = @func_1150() /* ty=Tensor[(5, 7, 9), bool] */;
  %746 = cast(%745, dtype="float64") /* ty=Tensor[(5, 7, 9), float64] */;
  %747 = reshape(%743, newshape=[120]) /* ty=Tensor[(120), uint32] */;
  %748 = reshape(%744, newshape=[45, 1]) /* ty=Tensor[(45, 1), float64] */;
  %749 = reshape(%746, newshape=[5, 7, 9]) /* ty=Tensor[(5, 7, 9), float64] */;
  %750 = @func_1008(%747, %748, %749) /* ty=(Tensor[(12, 3, 10), float32], Tensor[(3, 8, 5), uint32], Tensor[(120), uint32], Tensor[(45, 1), float64], Tensor[(12, 3, 10), float32], Tensor[(5, 7, 9), int16]) */;
  %751 = cast(%733, dtype="int8") /* ty=Tensor[(5, 7, 9), int8] */;
  %752 = shape_of(%738, dtype="int32") /* ty=Tensor[(3), int32] */;
  %753 = cast(%738, dtype="int8") /* ty=Tensor[(5, 7, 9), int8] */;
  %754 = dyn.reshape(%751, %752, newshape=[]) /* ty=Tensor[(?, ?, ?), int8] */;
  %755 = cast(meta[relay.Constant][35] /* ty=Tensor[(21, 4), bool] */, dtype="bool") /* ty=Tensor[(21, 4), bool] */;
  %756 = cast(meta[relay.Constant][35] /* ty=Tensor[(21, 4), bool] */, dtype="bool") /* ty=Tensor[(21, 4), bool] */;
  %757 = cast(meta[relay.Constant][36] /* ty=Tensor[(320), float32] */, dtype="float32") /* ty=Tensor[(320), float32] */;
  %758 = reshape(%755, newshape=[2, 14, 3]) /* ty=Tensor[(2, 14, 3), bool] */;
  %759 = reshape(%756, newshape=[2, 14, 3]) /* ty=Tensor[(2, 14, 3), bool] */;
  %760 = reshape(%757, newshape=[320]) /* ty=Tensor[(320), float32] */;
  %761 = @func_541(%758, %759, %760) /* ty=(Tensor[(2, 14, 3), bool], Tensor[(4, 8, 10), float32], Tensor[(320), float32], Tensor[(12, 3, 10), float32]) */;
  %762 = %761.0;
  %763 = cast(%762, dtype="float64") /* ty=Tensor[(2, 14, 3), float64] */;
  %764 = divide(%741, %742) /* ty=Tensor[(5, 7, 9), float32] */;
  %765 = %750.3;
  %766 = bitwise_and(%753, %754) /* ty=Tensor[(5, 7, 9), int8] */;
  %767 = atan(%763) /* ty=Tensor[(2, 14, 3), float64] */;
  (%764, %745, %765, meta[relay.Constant][34] /* ty=Tensor[(120), uint32] */, %var_1266, %766, meta[relay.Constant][35] /* ty=Tensor[(21, 4), bool] */, meta[relay.Constant][36] /* ty=Tensor[(320), float32] */, %767)
}

def @func_541(%var_490: Tensor[(2, 14, 3), bool], %var_491: Tensor[(2, 14, 3), bool], %var_531: Tensor[(320), float32]) -> (Tensor[(2, 14, 3), bool], Tensor[(4, 8, 10), float32], Tensor[(320), float32], Tensor[(12, 3, 10), float32]) {
  %768 = cast(%var_491, dtype="bool") /* ty=Tensor[(2, 14, 3), bool] */;
  %769 = shape_of(%var_490, dtype="int32") /* ty=Tensor[(3), int32] */;
  %770 = cast(%var_490, dtype="bool") /* ty=Tensor[(2, 14, 3), bool] */;
  %771 = dyn.reshape(%768, %769, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %772 = logical_or(%770, %771) /* ty=Tensor[(2, 14, 3), bool] */;
  %773 = cast(%var_490, dtype="bool") /* ty=Tensor[(2, 14, 3), bool] */;
  %774 = shape_of(%772, dtype="int32") /* ty=Tensor[(3), int32] */;
  %775 = cast(%772, dtype="bool") /* ty=Tensor[(2, 14, 3), bool] */;
  %776 = dyn.reshape(%773, %774, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %777 = cast(%var_531, dtype="float32") /* ty=Tensor[(320), float32] */;
  %778 = cast(%var_531, dtype="float32") /* ty=Tensor[(320), float32] */;
  %779 = reshape(%777, newshape=[4, 8, 10]) /* ty=Tensor[(4, 8, 10), float32] */;
  %780 = reshape(%778, newshape=[4, 8, 10]) /* ty=Tensor[(4, 8, 10), float32] */;
  %781 = equal(%775, %776) /* ty=Tensor[(2, 14, 3), bool] */;
  %782 = @func_308(%779, %780) /* ty=Tensor[(4, 8, 10), float32] */;
  %783 = @func_459() /* ty=Tensor[(12, 3, 10), float32] */;
  (%781, %782, %var_531, %783)
}

def @func_1779() -> (Tensor[(12, 3, 10), float32],) {
  %784 = @func_1579() /* ty=(Tensor[(12, 3, 10), float32], Tensor[(12, 3, 10), float32]) */;
  %785 = %784.0;
  (%785,)
}

def @func_6712() -> (Tensor[(5, 7, 9), bool], Tensor[(12, 3, 10), float32], Tensor[(2, 256), uint8], Tensor[(512), int32]) {
  %786 = @func_5588() /* ty=(Tensor[(12, 3, 10), float32], Tensor[(5, 7, 9), bool]) */;
  %787 = @func_1996() /* ty=(Tensor[(12, 3, 10), float32], Tensor[(12, 3, 10), float32]) */;
  %788 = cast(meta[relay.Constant][37] /* ty=Tensor[(512), int32] */, dtype="int32") /* ty=Tensor[(512), int32] */;
  %789 = cast(meta[relay.Constant][37] /* ty=Tensor[(512), int32] */, dtype="float32") /* ty=Tensor[(512), float32] */;
  %790 = reshape(%788, newshape=[2, 256]) /* ty=Tensor[(2, 256), int32] */;
  %791 = reshape(%789, newshape=[2, 256]) /* ty=Tensor[(2, 256), float32] */;
  %792 = @func_1764(%790, %791) /* ty=(Tensor[(12, 3, 10), float32], Tensor[(5, 7, 9), bool], Tensor[(5, 7, 9), bool], Tensor[(2, 256), uint8]) */;
  %793 = %786.1;
  %794 = %787.0;
  %795 = %792.3;
  (%793, %794, %795, meta[relay.Constant][37] /* ty=Tensor[(512), int32] */)
}

def @func_2149() -> (Tensor[(12, 3, 10), float32], Tensor[(12, 3, 10), float32], Tensor[(5, 7, 9), bool], Tensor[(5, 7, 9), bool], Tensor[(12, 3, 10), int8]) {
  %796 = @func_271() /* ty=(Tensor[(12, 3, 10), float32], Tensor[(5, 7, 9), bool], Tensor[(45), float64]) */;
  %797 = @func_1182() /* ty=(Tensor[(5, 7, 9), bool],) */;
  %798 = @func_2043() /* ty=Tensor[(12, 3, 10), float32] */;
  %799 = cast(%798, dtype="float32") /* ty=Tensor[(12, 3, 10), float32] */;
  %800 = reshape(%799, newshape=[12, 3, 10]) /* ty=Tensor[(12, 3, 10), float32] */;
  %801 = @func_2043() /* ty=Tensor[(12, 3, 10), float32] */;
  %802 = %796.1;
  %803 = %797.0;
  %804 = @func_480(%800) /* ty=Tensor[(12, 3, 10), int8] */;
  (%801, %798, %802, %803, %804)
}

def @func_308(%var_301: Tensor[(4, 8, 10), float32], %var_302: Tensor[(4, 8, 10), float32]) -> Tensor[(4, 8, 10), float32] {
  %805 = cast(%var_302, dtype="float32") /* ty=Tensor[(4, 8, 10), float32] */;
  %806 = shape_of(%var_301, dtype="int32") /* ty=Tensor[(3), int32] */;
  %807 = cast(%var_301, dtype="float32") /* ty=Tensor[(4, 8, 10), float32] */;
  %808 = dyn.reshape(%805, %806, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  power(%807, %808) /* ty=Tensor[(4, 8, 10), float32] */
}

def @func_2043() -> Tensor[(12, 3, 10), float32] {
  %809 = @func_1996() /* ty=(Tensor[(12, 3, 10), float32], Tensor[(12, 3, 10), float32]) */;
  %809.0
}

def @func_6458() -> (Tensor[(12, 3, 10), float32], Tensor[(12, 3, 10), float32]) {
  %810 = @func_3240() /* ty=(Tensor[(12, 3, 10), float32], Tensor[(12, 3, 10), float32]) */;
  %811 = %810.1;
  %812 = @func_2591() /* ty=Tensor[(12, 3, 10), float32] */;
  (%811, %812)
}

def @func_8158(%var_8130: Tensor[(45), float64]) -> (Tensor[(630), uint64], Tensor[(12, 3, 10), float32], Tensor[(45), uint32], Tensor[(45), float64], Tensor[(12, 3, 10), float32], Tensor[(12, 3, 10), float32]) {
  %813 = @func_6332() /* ty=(Tensor[(12, 3, 10), float32], Tensor[(12, 3, 10), float32], Tensor[(12, 3, 10), float32], Tensor[(630), uint64], Tensor[(45), float64]) */;
  %814 = @func_583() /* ty=(Tensor[(12, 3, 10), float32],) */;
  %815 = cast(%var_8130, dtype="float64") /* ty=Tensor[(45), float64] */;
  %816 = reshape(%815, newshape=[45]) /* ty=Tensor[(45), float64] */;
  %817 = @func_2759(%816) /* ty=(Tensor[(45), uint32], Tensor[(12, 3, 10), float32]) */;
  %818 = @func_7304() /* ty=(Tensor[(12, 3, 10), float32], Tensor[(5, 7, 9), bool]) */;
  %819 = @func_5799() /* ty=(Tensor[(12, 3, 10), float32],) */;
  %820 = %813.3;
  %821 = %814.0;
  %822 = %817.0;
  %823 = %818.0;
  %824 = %819.0;
  (%820, %821, %822, %var_8130, %823, %824)
}

def @func_3240() -> (Tensor[(12, 3, 10), float32], Tensor[(12, 3, 10), float32]) {
  %825 = @func_721() /* ty=(Tensor[(12, 3, 10), float32],) */;
  %826 = %825.0;
  %827 = @func_419() /* ty=Tensor[(12, 3, 10), float32] */;
  (%826, %827)
}

def @func_4133() -> Tensor[(12, 3, 10), float32] {
  %828 = @func_4050() /* ty=(Tensor[(12, 3, 10), float32], Tensor[(12, 3, 10), float32]) */;
  %828.1
}

def @func_3349() -> (Tensor[(12, 3, 10), float32],) {
  %829 = @func_583() /* ty=(Tensor[(12, 3, 10), float32],) */;
  %830 = %829.0;
  (%830,)
}

def @func_3330() -> (Tensor[(5, 7, 9), bool], Tensor[(5, 7, 9), bool]) {
  %831 = @func_2578() /* ty=(Tensor[(5, 7, 9), bool], Tensor[(12, 3, 10), float64]) */;
  %832 = @func_2578() /* ty=(Tensor[(5, 7, 9), bool], Tensor[(12, 3, 10), float64]) */;
  %833 = %831.0;
  %834 = %832.0;
  (%833, %834)
}

def @func_2712() -> (Tensor[(12, 3, 10), float32], Tensor[(12, 3, 10), float32], Tensor[(320), float32], Tensor[(1500), float64], Tensor[(320), float32]) {
  %835 = @func_1137() /* ty=(Tensor[(12, 3, 10), float32],) */;
  %836 = @func_331() /* ty=(Tensor[(12, 3, 10), float32],) */;
  %837 = cast(meta[relay.Constant][38] /* ty=Tensor[(1500), float64] */, dtype="float64") /* ty=Tensor[(1500), float64] */;
  %838 = cast(meta[relay.Constant][39] /* ty=Tensor[(320), float32] */, dtype="float32") /* ty=Tensor[(320), float32] */;
  %839 = reshape(%837, newshape=[1500]) /* ty=Tensor[(1500), float64] */;
  %840 = reshape(%838, newshape=[320]) /* ty=Tensor[(320), float32] */;
  %841 = @func_2463(%839, %840) /* ty=(Tensor[(10, 10, 5), uint8], Tensor[(10, 10, 15), float64], Tensor[(1500), float64], Tensor[(120), uint32], Tensor[(2, 14, 3), bool], Tensor[(84), bool], Tensor[(320), float32], Tensor[(10, 10, 5), float64]) */;
  %842 = %835.0;
  %843 = %836.0;
  %844 = %841.6;
  (%842, %843, %844, meta[relay.Constant][38] /* ty=Tensor[(1500), float64] */, meta[relay.Constant][39] /* ty=Tensor[(320), float32] */)
}

def @func_5588() -> (Tensor[(12, 3, 10), float32], Tensor[(5, 7, 9), bool]) {
  %845 = @func_4157() /* ty=(Tensor[(12, 3, 10), float32],) */;
  %846 = @func_5147() /* ty=(Tensor[(12, 3, 10), float32], Tensor[(5, 7, 9), bool]) */;
  %847 = %845.0;
  %848 = %846.1;
  (%847, %848)
}

def @func_5831(%var_5826: Tensor[(120), float32]) -> (Tensor[(45), float64], Tensor[(5, 7, 9), bool], Tensor[(5, 3, 8), float32], Tensor[(120), float32]) {
  %849 = @func_5531() /* ty=(Tensor[(5, 7, 9), bool],) */;
  %850 = cast(%var_5826, dtype="float32") /* ty=Tensor[(120), float32] */;
  %851 = cast(%var_5826, dtype="float32") /* ty=Tensor[(120), float32] */;
  %852 = reshape(%850, newshape=[5, 3, 8]) /* ty=Tensor[(5, 3, 8), float32] */;
  %853 = reshape(%851, newshape=[5, 3, 8]) /* ty=Tensor[(5, 3, 8), float32] */;
  %854 = @func_4657(%852, %853) /* ty=(Tensor[(5, 3, 8), float32], Tensor[(5, 3, 8), float64]) */;
  %855 = @func_1658() /* ty=Tensor[(45), float64] */;
  %856 = %849.0;
  %857 = %854.0;
  (%855, %856, %857, %var_5826)
}

def @func_5107(%var_5070: Tensor[(360), float32]) -> (Tensor[(5, 7, 9), bool], Tensor[(12, 2, 15), float32], Tensor[(360), float32], Tensor[(12, 3, 10), float32]) {
  %858 = @func_3330() /* ty=(Tensor[(5, 7, 9), bool], Tensor[(5, 7, 9), bool]) */;
  %859 = cast(%var_5070, dtype="float32") /* ty=Tensor[(360), float32] */;
  %860 = reshape(%859, newshape=[12, 2, 15]) /* ty=Tensor[(12, 2, 15), float32] */;
  %861 = @func_4071(%860) /* ty=(Tensor[(12, 2, 15), float32], Tensor[(5, 7, 9), bool]) */;
  %862 = @func_3349() /* ty=(Tensor[(12, 3, 10), float32],) */;
  %863 = %858.1;
  %864 = %861.0;
  %865 = %862.0;
  (%863, %864, %var_5070, %865)
}

def @func_331() -> (Tensor[(12, 3, 10), float32],) {
  %866 = @func_271() /* ty=(Tensor[(12, 3, 10), float32], Tensor[(5, 7, 9), bool], Tensor[(45), float64]) */;
  %867 = %866.0;
  (%867,)
}

def @func_2591() -> Tensor[(12, 3, 10), float32] {
  @func_419() /* ty=Tensor[(12, 3, 10), float32] */
}

def @func_8985(%var_8961: Tensor[(5, 9, 9), bool]) -> Tensor[(5, 9, 9), bool] {
  %868 = cast(meta[relay.Constant][40] /* ty=Tensor[(5, 9, 9), bool] */, dtype="bool") /* ty=Tensor[(5, 9, 9), bool] */;
  %869 = shape_of(%var_8961, dtype="int32") /* ty=Tensor[(3), int32] */;
  %870 = cast(%var_8961, dtype="bool") /* ty=Tensor[(5, 9, 9), bool] */;
  %871 = dyn.reshape(%868, %869, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  logical_and(%870, %871) /* ty=Tensor[(5, 9, 9), bool] */
}

def @func_5495() -> (Tensor[(12, 3, 10), float32], Tensor[(12, 3, 10), float32]) {
  %872 = @func_4157() /* ty=(Tensor[(12, 3, 10), float32],) */;
  %873 = @func_3349() /* ty=(Tensor[(12, 3, 10), float32],) */;
  %874 = %872.0;
  %875 = %873.0;
  (%874, %875)
}

def @func_5370() -> Tensor[(12, 3, 10), float32] {
  %876 = @func_1579() /* ty=(Tensor[(12, 3, 10), float32], Tensor[(12, 3, 10), float32]) */;
  %876.1
}

def @func_2463(%var_2436: Tensor[(1500), float64], %var_2450: Tensor[(320), float32]) -> (Tensor[(10, 10, 5), uint8], Tensor[(10, 10, 15), float64], Tensor[(1500), float64], Tensor[(120), uint32], Tensor[(2, 14, 3), bool], Tensor[(84), bool], Tensor[(320), float32], Tensor[(10, 10, 5), float64]) {
  %877 = cast(meta[relay.Constant][41] /* ty=Tensor[(10, 10, 5), float64] */, dtype="float64") /* ty=Tensor[(10, 10, 5), float64] */;
  %878 = rsqrt(%877) /* ty=Tensor[(10, 10, 5), float64] */;
  %879 = cast(meta[relay.Constant][41] /* ty=Tensor[(10, 10, 5), float64] */, dtype="uint8") /* ty=Tensor[(10, 10, 5), uint8] */;
  %880 = shape_of(%878, dtype="int32") /* ty=Tensor[(3), int32] */;
  %881 = cast(%878, dtype="uint8") /* ty=Tensor[(10, 10, 5), uint8] */;
  %882 = dyn.reshape(%879, %880, newshape=[]) /* ty=Tensor[(?, ?, ?), uint8] */;
  %883 = cast(%var_2436, dtype="float64") /* ty=Tensor[(1500), float64] */;
  %884 = cast(meta[relay.Constant][42] /* ty=Tensor[(120), uint32] */, dtype="uint32") /* ty=Tensor[(120), uint32] */;
  %885 = reshape(%883, newshape=[10, 10, 15]) /* ty=Tensor[(10, 10, 15), float64] */;
  %886 = reshape(%884, newshape=[120]) /* ty=Tensor[(120), uint32] */;
  %887 = @func_1372(%885, %886) /* ty=(Tensor[(10, 10, 15), float64], Tensor[(3, 8, 5), uint32], Tensor[(120), uint32]) */;
  %888 = cast(meta[relay.Constant][43] /* ty=Tensor[(84), bool] */, dtype="bool") /* ty=Tensor[(84), bool] */;
  %889 = cast(meta[relay.Constant][43] /* ty=Tensor[(84), bool] */, dtype="bool") /* ty=Tensor[(84), bool] */;
  %890 = cast(%var_2450, dtype="float32") /* ty=Tensor[(320), float32] */;
  %891 = reshape(%888, newshape=[2, 14, 3]) /* ty=Tensor[(2, 14, 3), bool] */;
  %892 = reshape(%889, newshape=[2, 14, 3]) /* ty=Tensor[(2, 14, 3), bool] */;
  %893 = reshape(%890, newshape=[320]) /* ty=Tensor[(320), float32] */;
  %894 = @func_541(%891, %892, %893) /* ty=(Tensor[(2, 14, 3), bool], Tensor[(4, 8, 10), float32], Tensor[(320), float32], Tensor[(12, 3, 10), float32]) */;
  %895 = cast(%878, dtype="float64") /* ty=Tensor[(10, 10, 5), float64] */;
  %896 = multiply(%881, %882) /* ty=Tensor[(10, 10, 5), uint8] */;
  %897 = %887.0;
  %898 = %894.0;
  %899 = acosh(%895) /* ty=Tensor[(10, 10, 5), float64] */;
  (%896, %897, %var_2436, meta[relay.Constant][42] /* ty=Tensor[(120), uint32] */, %898, meta[relay.Constant][43] /* ty=Tensor[(84), bool] */, %var_2450, %899)
}

def @func_7519() -> Tensor[(12, 3, 10), float32] {
  %900 = @func_6458() /* ty=(Tensor[(12, 3, 10), float32], Tensor[(12, 3, 10), float32]) */;
  %900.0
}

def @func_3882() -> (Tensor[(12, 3, 10), float32], Tensor[(12, 3, 10), float32]) {
  %901 = @func_3717() /* ty=(Tensor[(5, 7, 9), float32], Tensor[(12, 3, 10), float32]) */;
  %902 = %901.1;
  %903 = @func_791() /* ty=Tensor[(12, 3, 10), float32] */;
  (%902, %903)
}

def @func_6680() -> (Tensor[(3, 3, 4), int64], Tensor[(12, 3, 10), float32]) {
  %904 = cast(meta[relay.Constant][45] /* ty=Tensor[(3, 3, 4), int64] */, dtype="int64") /* ty=Tensor[(3, 3, 4), int64] */;
  %905 = shape_of(meta[relay.Constant][44] /* ty=Tensor[(3, 3, 4), int64] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %906 = cast(meta[relay.Constant][44] /* ty=Tensor[(3, 3, 4), int64] */, dtype="int64") /* ty=Tensor[(3, 3, 4), int64] */;
  %907 = dyn.reshape(%904, %905, newshape=[]) /* ty=Tensor[(?, ?, ?), int64] */;
  %908 = bitwise_or(%906, %907) /* ty=Tensor[(3, 3, 4), int64] */;
  %909 = cast(meta[relay.Constant][44] /* ty=Tensor[(3, 3, 4), int64] */, dtype="int64") /* ty=Tensor[(3, 3, 4), int64] */;
  %910 = shape_of(%908, dtype="int32") /* ty=Tensor[(3), int32] */;
  %911 = cast(%908, dtype="int64") /* ty=Tensor[(3, 3, 4), int64] */;
  %912 = dyn.reshape(%909, %910, newshape=[]) /* ty=Tensor[(?, ?, ?), int64] */;
  %913 = @func_1137() /* ty=(Tensor[(12, 3, 10), float32],) */;
  %914 = left_shift(%911, %912) /* ty=Tensor[(3, 3, 4), int64] */;
  %915 = %913.0;
  (%914, %915)
}

def @func_8577(%var_8571: Tensor[(360), float32]) -> (Tensor[(5, 7, 9), bool], Tensor[(12, 3, 10), bool], Tensor[(360), float32]) {
  %916 = @func_5147() /* ty=(Tensor[(12, 3, 10), float32], Tensor[(5, 7, 9), bool]) */;
  %917 = cast(%var_8571, dtype="float32") /* ty=Tensor[(360), float32] */;
  %918 = reshape(%917, newshape=[12, 3, 10]) /* ty=Tensor[(12, 3, 10), float32] */;
  %919 = %916.1;
  %920 = @func_3158(%918) /* ty=Tensor[(12, 3, 10), bool] */;
  (%919, %920, %var_8571)
}

def @func_8776() -> (Tensor[(5, 5, 6), float64],) {
  %921 = @func_5895() /* ty=(Tensor[(5, 5, 6), int64],) */;
  %922 = %921.0;
  %923 = cast(%922, dtype="float64") /* ty=Tensor[(5, 5, 6), float64] */;
  %924 = sqrt(%923) /* ty=Tensor[(5, 5, 6), float64] */;
  (%924,)
}

def @func_1479() -> (Tensor[(12, 3, 10), float32], Tensor[(12, 3, 10), int8], Tensor[(5, 7, 9), bool], Tensor[(12, 3, 10), float32], Tensor[(12, 3, 10), float64], Tensor[(12, 3, 10), float32], Tensor[(12, 3, 10), float32], Tensor[(12, 3, 10), float32]) {
  %925 = @func_331() /* ty=(Tensor[(12, 3, 10), float32],) */;
  %926 = %925.0;
  %927 = cast(%926, dtype="float32") /* ty=Tensor[(12, 3, 10), float32] */;
  %928 = reshape(%927, newshape=[12, 3, 10]) /* ty=Tensor[(12, 3, 10), float32] */;
  %929 = @func_644() /* ty=(Tensor[(5, 7, 9), bool], Tensor[(12, 3, 10), int8], Tensor[(360), float32], Tensor[(5, 7, 9), bool], Tensor[(5, 7, 9), bool], Tensor[(45), float64], Tensor[(12, 3, 10), int8]) */;
  %930 = @func_721() /* ty=(Tensor[(12, 3, 10), float32],) */;
  %931 = @func_331() /* ty=(Tensor[(12, 3, 10), float32],) */;
  %932 = %931.0;
  %933 = cast(%932, dtype="float64") /* ty=Tensor[(12, 3, 10), float64] */;
  %934 = @func_480(%928) /* ty=Tensor[(12, 3, 10), int8] */;
  %935 = %929.4;
  %936 = %930.0;
  %937 = sigmoid(%933) /* ty=Tensor[(12, 3, 10), float64] */;
  %938 = @func_419() /* ty=Tensor[(12, 3, 10), float32] */;
  %939 = @func_459() /* ty=Tensor[(12, 3, 10), float32] */;
  %940 = @func_807() /* ty=Tensor[(12, 3, 10), float32] */;
  (%926, %934, %935, %936, %937, %938, %939, %940)
}

def @func_583() -> (Tensor[(12, 3, 10), float32],) {
  %941 = @func_331() /* ty=(Tensor[(12, 3, 10), float32],) */;
  %942 = %941.0;
  (%942,)
}

def @func_4841(%var_4774: Tensor[(6, 12, 16), float64]) -> (Tensor[(5, 7, 9), bool], Tensor[(2, 15, 13), float32], Tensor[(390), float32], Tensor[(6, 12, 16), float32], Tensor[(6, 12, 16), bool], Tensor[(12, 3, 10), float32], Tensor[(6, 12, 16), float64], Tensor[(6, 12, 16), int16], Tensor[(45), float64], Tensor[(12, 3, 10), int8], Tensor[(45), float64]) {
  %943 = cast(meta[relay.Constant][46] /* ty=Tensor[(390), float32] */, dtype="float32") /* ty=Tensor[(390), float32] */;
  %944 = reshape(%943, newshape=[2, 15, 13]) /* ty=Tensor[(2, 15, 13), float32] */;
  %945 = cast(meta[relay.Constant][47] /* ty=Tensor[(1152), float64] */, dtype="float64") /* ty=Tensor[(1152), float64] */;
  %946 = reshape(%945, newshape=[6, 12, 16]) /* ty=Tensor[(6, 12, 16), float64] */;
  %947 = @func_1830(%946) /* ty=(Tensor[(6, 12, 16), float64],) */;
  %948 = %947.0;
  %949 = cast(%948, dtype="float32") /* ty=Tensor[(6, 12, 16), float32] */;
  %950 = cos(%949) /* ty=Tensor[(6, 12, 16), float32] */;
  %951 = cast(%950, dtype="float32") /* ty=Tensor[(6, 12, 16), float32] */;
  %952 = cast(%var_4774, dtype="bool") /* ty=Tensor[(6, 12, 16), bool] */;
  %953 = shape_of(%948, dtype="int32") /* ty=Tensor[(3), int32] */;
  %954 = cast(%948, dtype="bool") /* ty=Tensor[(6, 12, 16), bool] */;
  %955 = dyn.reshape(%952, %953, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %956 = @func_4716() /* ty=(Tensor[(12, 3, 10), float32],) */;
  %957 = cast(%950, dtype="float64") /* ty=Tensor[(6, 12, 16), float64] */;
  %958 = cast(meta[relay.Constant][47] /* ty=Tensor[(1152), float64] */, dtype="int16") /* ty=Tensor[(1152), int16] */;
  %959 = shape_of(%950, dtype="int32") /* ty=Tensor[(3), int32] */;
  %960 = cast(%950, dtype="int16") /* ty=Tensor[(6, 12, 16), int16] */;
  %961 = dyn.reshape(%958, %959, newshape=[]) /* ty=Tensor[(?, ?, ?), int16] */;
  %962 = @func_4694() /* ty=(Tensor[(12, 3, 10), float32], Tensor[(45), float64], Tensor[(5, 5, 6), int64], Tensor[(150), int64], Tensor[(12, 3, 10), float32], Tensor[(45), float64]) */;
  %963 = %956.0;
  %964 = cast(%963, dtype="float32") /* ty=Tensor[(12, 3, 10), float32] */;
  %965 = reshape(%964, newshape=[12, 3, 10]) /* ty=Tensor[(12, 3, 10), float32] */;
  %966 = @func_4636() /* ty=(Tensor[(45), float64],) */;
  %967 = @func_1150() /* ty=Tensor[(5, 7, 9), bool] */;
  %968 = @func_4220(%944) /* ty=Tensor[(2, 15, 13), float32] */;
  %969 = sinh(%951) /* ty=Tensor[(6, 12, 16), float32] */;
  %970 = greater_equal(%954, %955) /* ty=Tensor[(6, 12, 16), bool] */;
  %971 = log10(%957) /* ty=Tensor[(6, 12, 16), float64] */;
  %972 = right_shift(%960, %961) /* ty=Tensor[(6, 12, 16), int16] */;
  %973 = %962.5;
  %974 = @func_480(%965) /* ty=Tensor[(12, 3, 10), int8] */;
  %975 = %966.0;
  (%967, %968, meta[relay.Constant][46] /* ty=Tensor[(390), float32] */, %969, %970, %963, %971, %972, %973, %974, %975)
}

def @func_6091() -> (Tensor[(12, 3, 10), float32], Tensor[(5, 7, 9), bool]) {
  %976 = @func_5495() /* ty=(Tensor[(12, 3, 10), float32], Tensor[(12, 3, 10), float32]) */;
  %977 = %976.1;
  %978 = cast(%977, dtype="float32") /* ty=Tensor[(12, 3, 10), float32] */;
  %979 = reshape(%978, newshape=[12, 2, 15]) /* ty=Tensor[(12, 2, 15), float32] */;
  %980 = @func_4071(%979) /* ty=(Tensor[(12, 2, 15), float32], Tensor[(5, 7, 9), bool]) */;
  %981 = %980.1;
  (%977, %981)
}

def @func_1137() -> (Tensor[(12, 3, 10), float32],) {
  %982 = @func_739() /* ty=Tensor[(12, 3, 10), float32] */;
  (%982,)
}

def @func_9390() -> Tensor[(5, 7, 9), bool] {
  %983 = @func_8681() /* ty=(Tensor[(5, 7, 9), bool], Tensor[(5, 7, 9), bool]) */;
  %983.0
}

def @func_2759(%var_2746: Tensor[(45), float64]) -> (Tensor[(45), uint32], Tensor[(12, 3, 10), float32]) {
  %984 = @func_1658() /* ty=Tensor[(45), float64] */;
  %985 = cast(%var_2746, dtype="uint32") /* ty=Tensor[(45), uint32] */;
  %986 = shape_of(%984, dtype="int32") /* ty=Tensor[(1), int32] */;
  %987 = cast(%984, dtype="uint32") /* ty=Tensor[(45), uint32] */;
  %988 = dyn.reshape(%985, %986, newshape=[]) /* ty=Tensor[(?), uint32] */;
  %989 = @func_331() /* ty=(Tensor[(12, 3, 10), float32],) */;
  %990 = right_shift(%987, %988) /* ty=Tensor[(45), uint32] */;
  %991 = %989.0;
  (%990, %991)
}

/* For debugging purposes the metadata section has been omitted.
 * If you would like to see the full metadata section you can set the 
 * option to `True` when invoking `astext`. 
 */
===================================
==========mutated_mod==========
#[version = "0.0.5"]
def @func_2955() -> (Tensor[(12, 3, 10), float32],) {
  @func_2953() /* ty=(Tensor[(12, 3, 10), float32],) */
}

def @func_4696() -> (Tensor[(12, 3, 10), float32], Tensor[(45), float64], Tensor[(5, 5, 6), int64], Tensor[(150), int64], Tensor[(12, 3, 10), float32], Tensor[(45), float64]) {
  @func_4694() /* ty=(Tensor[(12, 3, 10), float32], Tensor[(45), float64], Tensor[(5, 5, 6), int64], Tensor[(150), int64], Tensor[(12, 3, 10), float32], Tensor[(45), float64]) */
}

def @func_7010() -> (Tensor[(45), float64],) {
  %0 = @func_4636() /* ty=(Tensor[(45), float64],) */;
  %1 = %0.0;
  (%1,)
}

def @func_3415() -> (Tensor[(45), float64],) {
  @func_3413() /* ty=(Tensor[(45), float64],) */
}

def @func_1152() -> Tensor[(5, 7, 9), bool] {
  @func_1150() /* ty=Tensor[(5, 7, 9), bool] */
}

def @func_792() -> Tensor[(12, 3, 10), float32] {
  %2 = fn () -> Tensor[(12, 3, 10), float32] {
    @func_459() /* ty=Tensor[(12, 3, 10), float32] */
  };
  %2() /* ty=Tensor[(12, 3, 10), float32] */
}

def @func_5993() -> Tensor[(12, 3, 10), float32] {
  @func_5991() /* ty=Tensor[(12, 3, 10), float32] */
}

def @func_5943(%var_5920: Tensor[(13, 16, 15), int32], %var_5921: Tensor[(13, 16, 15), int32]) -> (Tensor[(13, 16, 15), bool], Tensor[(13, 16, 15), float32]) {
  %3 = cast(%var_5921, dtype="bool") /* ty=Tensor[(13, 16, 15), bool] */;
  %4 = shape_of(%var_5920, dtype="int32") /* ty=Tensor[(3), int32] */;
  %5 = cast(%var_5920, dtype="bool") /* ty=Tensor[(13, 16, 15), bool] */;
  %6 = dyn.reshape(%3, %4, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %7 = cast(%var_5920, dtype="float32") /* ty=Tensor[(13, 16, 15), float32] */;
  %8 = not_equal(%5, %6) /* ty=Tensor[(13, 16, 15), bool] */;
  %9 = log(%7) /* ty=Tensor[(13, 16, 15), float32] */;
  (%8, %9)
}

def @func_6747(%var_6745: Tensor[(120), float32]) -> (Tensor[(12, 3, 10), float32], Tensor[(5, 3, 8), float32], Tensor[(120), float32]) {
  @func_6744(%var_6745) /* ty=(Tensor[(12, 3, 10), float32], Tensor[(5, 3, 8), float32], Tensor[(120), float32]) */
}

def @func_2593() -> Tensor[(12, 3, 10), float32] {
  @func_2591() /* ty=Tensor[(12, 3, 10), float32] */
}

def @func_892(%var_876: Tensor[(12, 3, 10), float64]) -> (Tensor[(12, 3, 10), int32], Tensor[(12, 3, 10), float32]) {
  %10 = @func_739() /* ty=Tensor[(12, 3, 10), float32] */;
  %11 = cast(%10, dtype="float64") /* ty=Tensor[(12, 3, 10), float64] */;
  %12 = sin(%11) /* ty=Tensor[(12, 3, 10), float64] */;
  %13 = cast(%var_876, dtype="int32") /* ty=Tensor[(12, 3, 10), int32] */;
  %14 = shape_of(%12, dtype="int32") /* ty=Tensor[(3), int32] */;
  %15 = cast(%12, dtype="int32") /* ty=Tensor[(12, 3, 10), int32] */;
  %16 = dyn.reshape(%13, %14, newshape=[]) /* ty=Tensor[(?, ?, ?), int32] */;
  %17 = @func_583() /* ty=(Tensor[(12, 3, 10), float32],) */;
  %18 = right_shift(%15, %16) /* ty=Tensor[(12, 3, 10), int32] */;
  %19 = %17.0;
  (%18, %19)
}

def @func_3577() -> Tensor[(12, 3, 10), float32] {
  %20 = fn () -> Tensor[(12, 3, 10), float32] {
    @func_459() /* ty=Tensor[(12, 3, 10), float32] */
  };
  %20() /* ty=Tensor[(12, 3, 10), float32] */
}

def @func_5589() -> (Tensor[(12, 3, 10), float32], Tensor[(5, 7, 9), bool]) {
  %25 = fn () -> (Tensor[(12, 3, 10), float32], Tensor[(5, 7, 9), bool]) {
    %21 = @func_4157() /* ty=(Tensor[(12, 3, 10), float32],) */;
    %22 = @func_5147() /* ty=(Tensor[(12, 3, 10), float32], Tensor[(5, 7, 9), bool]) */;
    %23 = %21.0;
    %24 = %22.1;
    (%23, %24)
  };
  %25() /* ty=(Tensor[(12, 3, 10), float32], Tensor[(5, 7, 9), bool]) */
}

def @func_8987(%var_8986: Tensor[(5, 9, 9), bool]) -> Tensor[(5, 9, 9), bool] {
  %30 = fn (%var_8961: Tensor[(5, 9, 9), bool]) -> Tensor[(5, 9, 9), bool] {
    %26 = cast(meta[relay.Constant][0] /* ty=Tensor[(5, 9, 9), bool] */, dtype="bool") /* ty=Tensor[(5, 9, 9), bool] */;
    %27 = shape_of(%var_8961, dtype="int32") /* ty=Tensor[(3), int32] */;
    %28 = cast(%var_8961, dtype="bool") /* ty=Tensor[(5, 9, 9), bool] */;
    %29 = dyn.reshape(%26, %27, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    logical_and(%28, %29) /* ty=Tensor[(5, 9, 9), bool] */
  };
  %30(%var_8986) /* ty=Tensor[(5, 9, 9), bool] */
}

def @func_4694() -> (Tensor[(12, 3, 10), float32], Tensor[(45), float64], Tensor[(5, 5, 6), int64], Tensor[(150), int64], Tensor[(12, 3, 10), float32], Tensor[(45), float64]) {
  %31 = @func_1137() /* ty=(Tensor[(12, 3, 10), float32],) */;
  %32 = cast(meta[relay.Constant][1] /* ty=Tensor[(150), int64] */, dtype="int64") /* ty=Tensor[(150), int64] */;
  %33 = cast(meta[relay.Constant][1] /* ty=Tensor[(150), int64] */, dtype="int64") /* ty=Tensor[(150), int64] */;
  %34 = reshape(%32, newshape=[5, 5, 6]) /* ty=Tensor[(5, 5, 6), int64] */;
  %35 = reshape(%33, newshape=[5, 5, 6]) /* ty=Tensor[(5, 5, 6), int64] */;
  %36 = @func_1867(%34, %35) /* ty=(Tensor[(5, 5, 6), int64],) */;
  %37 = @func_3882() /* ty=(Tensor[(12, 3, 10), float32], Tensor[(12, 3, 10), float32]) */;
  %38 = %31.0;
  %39 = @func_2796() /* ty=Tensor[(45), float64] */;
  %40 = %36.0;
  %41 = %37.0;
  %42 = @func_3532() /* ty=Tensor[(45), float64] */;
  (%38, %39, %40, meta[relay.Constant][1] /* ty=Tensor[(150), int64] */, %41, %42)
}

def @func_385() -> (Tensor[(45), float64], Tensor[(5, 7, 9), bool]) {
  %43 = @func_271() /* ty=(Tensor[(12, 3, 10), float32], Tensor[(5, 7, 9), bool], Tensor[(45), float64]) */;
  %44 = %43.2;
  %45 = cast(%44, dtype="float64") /* ty=Tensor[(45), float64] */;
  %46 = reshape(%45, newshape=[5, 1, 9]) /* ty=Tensor[(5, 1, 9), float64] */;
  %47 = @func_176(%46) /* ty=Tensor[(5, 7, 9), bool] */;
  (%44, %47)
}

def @func_5687() -> Tensor[(12, 3, 10), float32] {
  @func_2884() /* ty=Tensor[(12, 3, 10), float32] */
}

def @func_8349() -> (Tensor[(12, 3, 10), float32],) {
  %48 = @func_5048() /* ty=(Tensor[(12, 3, 10), float32],) */;
  %49 = %48.0;
  (%49,)
}

def @func_1325(%var_1324: Tensor[(1, 45), float64]) -> (Tensor[(5, 7, 9), float32], Tensor[(5, 7, 9), bool], Tensor[(45, 1), float64], Tensor[(120), uint32], Tensor[(1, 45), float64], Tensor[(5, 7, 9), int8], Tensor[(21, 4), bool], Tensor[(320), float32], Tensor[(2, 14, 3), float64]) {
  %85 = fn (%var_1266: Tensor[(1, 45), float64]) -> (Tensor[(5, 7, 9), float32], Tensor[(5, 7, 9), bool], Tensor[(45, 1), float64], Tensor[(120), uint32], Tensor[(1, 45), float64], Tensor[(5, 7, 9), int8], Tensor[(21, 4), bool], Tensor[(320), float32], Tensor[(2, 14, 3), float64]) {
    %50 = @func_1150() /* ty=Tensor[(5, 7, 9), bool] */;
    %51 = cast(meta[relay.Constant][2] /* ty=Tensor[(5, 7, 9), bool] */, dtype="bool") /* ty=Tensor[(5, 7, 9), bool] */;
    %52 = shape_of(%50, dtype="int32") /* ty=Tensor[(3), int32] */;
    %53 = cast(%50, dtype="bool") /* ty=Tensor[(5, 7, 9), bool] */;
    %54 = dyn.reshape(%51, %52, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    %55 = greater(%53, %54) /* ty=Tensor[(5, 7, 9), bool] */;
    %56 = cast(%50, dtype="float32") /* ty=Tensor[(5, 7, 9), float32] */;
    %57 = shape_of(%55, dtype="int32") /* ty=Tensor[(3), int32] */;
    %58 = cast(%55, dtype="float32") /* ty=Tensor[(5, 7, 9), float32] */;
    %59 = dyn.reshape(%56, %57, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
    %60 = cast(meta[relay.Constant][3] /* ty=Tensor[(120), uint32] */, dtype="uint32") /* ty=Tensor[(120), uint32] */;
    %61 = cast(%var_1266, dtype="float64") /* ty=Tensor[(1, 45), float64] */;
    %62 = @func_1150() /* ty=Tensor[(5, 7, 9), bool] */;
    %63 = cast(%62, dtype="float64") /* ty=Tensor[(5, 7, 9), float64] */;
    %64 = reshape(%60, newshape=[120]) /* ty=Tensor[(120), uint32] */;
    %65 = reshape(%61, newshape=[45, 1]) /* ty=Tensor[(45, 1), float64] */;
    %66 = reshape(%63, newshape=[5, 7, 9]) /* ty=Tensor[(5, 7, 9), float64] */;
    %67 = @func_1008(%64, %65, %66) /* ty=(Tensor[(12, 3, 10), float32], Tensor[(3, 8, 5), uint32], Tensor[(120), uint32], Tensor[(45, 1), float64], Tensor[(12, 3, 10), float32], Tensor[(5, 7, 9), int16]) */;
    %68 = cast(%50, dtype="int8") /* ty=Tensor[(5, 7, 9), int8] */;
    %69 = shape_of(%55, dtype="int32") /* ty=Tensor[(3), int32] */;
    %70 = cast(%55, dtype="int8") /* ty=Tensor[(5, 7, 9), int8] */;
    %71 = dyn.reshape(%68, %69, newshape=[]) /* ty=Tensor[(?, ?, ?), int8] */;
    %72 = cast(meta[relay.Constant][4] /* ty=Tensor[(21, 4), bool] */, dtype="bool") /* ty=Tensor[(21, 4), bool] */;
    %73 = cast(meta[relay.Constant][4] /* ty=Tensor[(21, 4), bool] */, dtype="bool") /* ty=Tensor[(21, 4), bool] */;
    %74 = cast(meta[relay.Constant][5] /* ty=Tensor[(320), float32] */, dtype="float32") /* ty=Tensor[(320), float32] */;
    %75 = reshape(%72, newshape=[2, 14, 3]) /* ty=Tensor[(2, 14, 3), bool] */;
    %76 = reshape(%73, newshape=[2, 14, 3]) /* ty=Tensor[(2, 14, 3), bool] */;
    %77 = reshape(%74, newshape=[320]) /* ty=Tensor[(320), float32] */;
    %78 = @func_541(%75, %76, %77) /* ty=(Tensor[(2, 14, 3), bool], Tensor[(4, 8, 10), float32], Tensor[(320), float32], Tensor[(12, 3, 10), float32]) */;
    %79 = %78.0;
    %80 = cast(%79, dtype="float64") /* ty=Tensor[(2, 14, 3), float64] */;
    %81 = divide(%58, %59) /* ty=Tensor[(5, 7, 9), float32] */;
    %82 = %67.3;
    %83 = bitwise_and(%70, %71) /* ty=Tensor[(5, 7, 9), int8] */;
    %84 = atan(%80) /* ty=Tensor[(2, 14, 3), float64] */;
    (%81, %62, %82, meta[relay.Constant][3] /* ty=Tensor[(120), uint32] */, %var_1266, %83, meta[relay.Constant][4] /* ty=Tensor[(21, 4), bool] */, meta[relay.Constant][5] /* ty=Tensor[(320), float32] */, %84)
  };
  %85(%var_1324) /* ty=(Tensor[(5, 7, 9), float32], Tensor[(5, 7, 9), bool], Tensor[(45, 1), float64], Tensor[(120), uint32], Tensor[(1, 45), float64], Tensor[(5, 7, 9), int8], Tensor[(21, 4), bool], Tensor[(320), float32], Tensor[(2, 14, 3), float64]) */
}

def @func_1931(%var_1929: Tensor[(12, 15, 5), float32], %var_1930: Tensor[(360), float32]) -> (Tensor[(12, 15, 5), float32], Tensor[(5, 7, 9), bool], Tensor[(12, 3, 10), int8], Tensor[(360), float32], Tensor[(12, 3, 10), float32]) {
  @func_1927(%var_1929, %var_1930) /* ty=(Tensor[(12, 15, 5), float32], Tensor[(5, 7, 9), bool], Tensor[(12, 3, 10), int8], Tensor[(360), float32], Tensor[(12, 3, 10), float32]) */
}

def @func_541(%var_490: Tensor[(2, 14, 3), bool], %var_491: Tensor[(2, 14, 3), bool], %var_531: Tensor[(320), float32]) -> (Tensor[(2, 14, 3), bool], Tensor[(4, 8, 10), float32], Tensor[(320), float32], Tensor[(12, 3, 10), float32]) {
  %86 = cast(%var_491, dtype="bool") /* ty=Tensor[(2, 14, 3), bool] */;
  %87 = shape_of(%var_490, dtype="int32") /* ty=Tensor[(3), int32] */;
  %88 = cast(%var_490, dtype="bool") /* ty=Tensor[(2, 14, 3), bool] */;
  %89 = dyn.reshape(%86, %87, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %90 = logical_or(%88, %89) /* ty=Tensor[(2, 14, 3), bool] */;
  %91 = cast(%var_490, dtype="bool") /* ty=Tensor[(2, 14, 3), bool] */;
  %92 = shape_of(%90, dtype="int32") /* ty=Tensor[(3), int32] */;
  %93 = cast(%90, dtype="bool") /* ty=Tensor[(2, 14, 3), bool] */;
  %94 = dyn.reshape(%91, %92, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %95 = cast(%var_531, dtype="float32") /* ty=Tensor[(320), float32] */;
  %96 = cast(%var_531, dtype="float32") /* ty=Tensor[(320), float32] */;
  %97 = reshape(%95, newshape=[4, 8, 10]) /* ty=Tensor[(4, 8, 10), float32] */;
  %98 = reshape(%96, newshape=[4, 8, 10]) /* ty=Tensor[(4, 8, 10), float32] */;
  %99 = equal(%93, %94) /* ty=Tensor[(2, 14, 3), bool] */;
  %100 = @func_308(%97, %98) /* ty=Tensor[(4, 8, 10), float32] */;
  %101 = @func_459() /* ty=Tensor[(12, 3, 10), float32] */;
  (%99, %100, %var_531, %101)
}

def @func_4661(%var_4659: Tensor[(5, 3, 8), float32], %var_4660: Tensor[(5, 3, 8), float32]) -> (Tensor[(5, 3, 8), float32], Tensor[(5, 3, 8), float64]) {
  @func_4657(%var_4659, %var_4660) /* ty=(Tensor[(5, 3, 8), float32], Tensor[(5, 3, 8), float64]) */
}

def @func_5282() -> (Tensor[(10, 10, 15), float64], Tensor[(12, 3, 10), float32], Tensor[(13, 33), float64], Tensor[(45), float64], Tensor[(5, 14, 9), int64], Tensor[(630), uint64], Tensor[(3, 13, 11), float64], Tensor[(3, 13, 11), float64]) {
  @func_5280() /* ty=(Tensor[(10, 10, 15), float64], Tensor[(12, 3, 10), float32], Tensor[(13, 33), float64], Tensor[(45), float64], Tensor[(5, 14, 9), int64], Tensor[(630), uint64], Tensor[(3, 13, 11), float64], Tensor[(3, 13, 11), float64]) */
}

def @func_6286() -> (Tensor[(12, 3, 10), float32], Tensor[(5, 7, 9), bool]) {
  @func_6284() /* ty=(Tensor[(12, 3, 10), float32], Tensor[(5, 7, 9), bool]) */
}

def @func_8752() -> (Tensor[(45), float64], Tensor[(12, 3, 10), float32], Tensor[(12, 3, 10), float32]) {
  @func_8750() /* ty=(Tensor[(45), float64], Tensor[(12, 3, 10), float32], Tensor[(12, 3, 10), float32]) */
}

def @func_2712() -> (Tensor[(12, 3, 10), float32], Tensor[(12, 3, 10), float32], Tensor[(320), float32], Tensor[(1500), float64], Tensor[(320), float32]) {
  %102 = @func_1137() /* ty=(Tensor[(12, 3, 10), float32],) */;
  %103 = @func_331() /* ty=(Tensor[(12, 3, 10), float32],) */;
  %104 = cast(meta[relay.Constant][6] /* ty=Tensor[(1500), float64] */, dtype="float64") /* ty=Tensor[(1500), float64] */;
  %105 = cast(meta[relay.Constant][7] /* ty=Tensor[(320), float32] */, dtype="float32") /* ty=Tensor[(320), float32] */;
  %106 = reshape(%104, newshape=[1500]) /* ty=Tensor[(1500), float64] */;
  %107 = reshape(%105, newshape=[320]) /* ty=Tensor[(320), float32] */;
  %108 = @func_2463(%106, %107) /* ty=(Tensor[(10, 10, 5), uint8], Tensor[(10, 10, 15), float64], Tensor[(1500), float64], Tensor[(120), uint32], Tensor[(2, 14, 3), bool], Tensor[(84), bool], Tensor[(320), float32], Tensor[(10, 10, 5), float64]) */;
  %109 = %102.0;
  %110 = %103.0;
  %111 = %108.6;
  (%109, %110, %111, meta[relay.Constant][6] /* ty=Tensor[(1500), float64] */, meta[relay.Constant][7] /* ty=Tensor[(320), float32] */)
}

def @func_421() -> Tensor[(12, 3, 10), float32] {
  @func_419() /* ty=Tensor[(12, 3, 10), float32] */
}

def @func_8683() -> (Tensor[(5, 7, 9), bool], Tensor[(5, 7, 9), bool]) {
  @func_8681() /* ty=(Tensor[(5, 7, 9), bool], Tensor[(5, 7, 9), bool]) */
}

def @func_7348() -> (Tensor[(5, 7, 9), float32],) {
  @func_7346() /* ty=(Tensor[(5, 7, 9), float32],) */
}

def @func_1997() -> (Tensor[(12, 3, 10), float32], Tensor[(12, 3, 10), float32]) {
  %115 = fn () -> (Tensor[(12, 3, 10), float32], Tensor[(12, 3, 10), float32]) {
    %112 = @func_1479() /* ty=(Tensor[(12, 3, 10), float32], Tensor[(12, 3, 10), int8], Tensor[(5, 7, 9), bool], Tensor[(12, 3, 10), float32], Tensor[(12, 3, 10), float64], Tensor[(12, 3, 10), float32], Tensor[(12, 3, 10), float32], Tensor[(12, 3, 10), float32]) */;
    %113 = @func_739() /* ty=Tensor[(12, 3, 10), float32] */;
    %114 = %112.6;
    (%113, %114)
  };
  %115() /* ty=(Tensor[(12, 3, 10), float32], Tensor[(12, 3, 10), float32]) */
}

def @func_5109(%var_5108: Tensor[(360), float32]) -> (Tensor[(5, 7, 9), bool], Tensor[(12, 2, 15), float32], Tensor[(360), float32], Tensor[(12, 3, 10), float32]) {
  %124 = fn (%var_5070: Tensor[(360), float32]) -> (Tensor[(5, 7, 9), bool], Tensor[(12, 2, 15), float32], Tensor[(360), float32], Tensor[(12, 3, 10), float32]) {
    %116 = @func_3330() /* ty=(Tensor[(5, 7, 9), bool], Tensor[(5, 7, 9), bool]) */;
    %117 = cast(%var_5070, dtype="float32") /* ty=Tensor[(360), float32] */;
    %118 = reshape(%117, newshape=[12, 2, 15]) /* ty=Tensor[(12, 2, 15), float32] */;
    %119 = @func_4071(%118) /* ty=(Tensor[(12, 2, 15), float32], Tensor[(5, 7, 9), bool]) */;
    %120 = @func_3349() /* ty=(Tensor[(12, 3, 10), float32],) */;
    %121 = %116.1;
    %122 = %119.0;
    %123 = %120.0;
    (%121, %122, %var_5070, %123)
  };
  %124(%var_5108) /* ty=(Tensor[(5, 7, 9), bool], Tensor[(12, 2, 15), float32], Tensor[(360), float32], Tensor[(12, 3, 10), float32]) */
}

def @func_6093() -> (Tensor[(12, 3, 10), float32], Tensor[(5, 7, 9), bool]) {
  @func_6091() /* ty=(Tensor[(12, 3, 10), float32], Tensor[(5, 7, 9), bool]) */
}

def @func_9270() -> (Tensor[(16, 16, 16), float32], Tensor[(5, 9), float64]) {
  @func_9268() /* ty=(Tensor[(16, 16, 16), float32], Tensor[(5, 9), float64]) */
}

def @func_4550() -> (Tensor[(12, 3, 10), float32], Tensor[(5, 7, 9), float32]) {
  @func_4548() /* ty=(Tensor[(12, 3, 10), float32], Tensor[(5, 7, 9), float32]) */
}

def @func_3528(%var_3526: Tensor[(5, 14, 9), uint64], %var_3527: Tensor[(45), float64]) -> (Tensor[(12, 3, 10), float32], Tensor[(5, 7, 9), bool], Tensor[(45), float64], Tensor[(12, 3, 10), float32], Tensor[(5, 14, 9), int64], Tensor[(12, 3, 10), float32]) {
  %146 = fn (%var_3438: Tensor[(5, 14, 9), uint64], %var_3478: Tensor[(45), float64]) -> (Tensor[(12, 3, 10), float32], Tensor[(5, 7, 9), bool], Tensor[(45), float64], Tensor[(12, 3, 10), float32], Tensor[(5, 14, 9), int64], Tensor[(12, 3, 10), float32]) {
    %125 = cast(%var_3478, dtype="float64") /* ty=Tensor[(45), float64] */;
    %126 = reshape(%125, newshape=[5, 1, 9]) /* ty=Tensor[(5, 1, 9), float64] */;
    %127 = @func_1849() /* ty=(Tensor[(12, 3, 10), float32],) */;
    %128 = cast(%var_3438, dtype="bool") /* ty=Tensor[(5, 14, 9), bool] */;
    %129 = shape_of(meta[relay.Constant][8] /* ty=Tensor[(5, 14, 9), uint64] */, dtype="int32") /* ty=Tensor[(3), int32] */;
    %130 = cast(meta[relay.Constant][8] /* ty=Tensor[(5, 14, 9), uint64] */, dtype="bool") /* ty=Tensor[(5, 14, 9), bool] */;
    %131 = dyn.reshape(%128, %129, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    %132 = less_equal(%130, %131) /* ty=Tensor[(5, 14, 9), bool] */;
    %133 = cast(%132, dtype="float32") /* ty=Tensor[(5, 14, 9), float32] */;
    %134 = tan(%133) /* ty=Tensor[(5, 14, 9), float32] */;
    %135 = cast(%134, dtype="float64") /* ty=Tensor[(5, 14, 9), float64] */;
    %136 = erf(%135) /* ty=Tensor[(5, 14, 9), float64] */;
    %137 = cast(%134, dtype="int64") /* ty=Tensor[(5, 14, 9), int64] */;
    %138 = shape_of(%136, dtype="int32") /* ty=Tensor[(3), int32] */;
    %139 = cast(%136, dtype="int64") /* ty=Tensor[(5, 14, 9), int64] */;
    %140 = dyn.reshape(%137, %138, newshape=[]) /* ty=Tensor[(?, ?, ?), int64] */;
    %141 = @func_2591() /* ty=Tensor[(12, 3, 10), float32] */;
    %142 = @func_176(%126) /* ty=Tensor[(5, 7, 9), bool] */;
    %143 = %127.0;
    %144 = subtract(%139, %140) /* ty=Tensor[(5, 14, 9), int64] */;
    %145 = @func_2043() /* ty=Tensor[(12, 3, 10), float32] */;
    (%141, %142, %var_3478, %143, %144, %145)
  };
  %146(%var_3526, %var_3527) /* ty=(Tensor[(12, 3, 10), float32], Tensor[(5, 7, 9), bool], Tensor[(45), float64], Tensor[(12, 3, 10), float32], Tensor[(5, 14, 9), int64], Tensor[(12, 3, 10), float32]) */
}

def @func_332() -> (Tensor[(12, 3, 10), float32],) {
  %149 = fn () -> (Tensor[(12, 3, 10), float32],) {
    %147 = @func_271() /* ty=(Tensor[(12, 3, 10), float32], Tensor[(5, 7, 9), bool], Tensor[(45), float64]) */;
    %148 = %147.0;
    (%148,)
  };
  %149() /* ty=(Tensor[(12, 3, 10), float32],) */
}

def @func_2044() -> Tensor[(12, 3, 10), float32] {
  %151 = fn () -> Tensor[(12, 3, 10), float32] {
    %150 = @func_1996() /* ty=(Tensor[(12, 3, 10), float32], Tensor[(12, 3, 10), float32]) */;
    %150.0
  };
  %151() /* ty=Tensor[(12, 3, 10), float32] */
}

def @func_1372(%var_1355: Tensor[(10, 10, 15), float64], %var_1367: Tensor[(120), uint32]) -> (Tensor[(10, 10, 15), float64], Tensor[(3, 8, 5), uint32], Tensor[(120), uint32]) {
  %152 = cast(%var_1355, dtype="float64") /* ty=Tensor[(10, 10, 15), float64] */;
  %153 = cast(%var_1367, dtype="uint32") /* ty=Tensor[(120), uint32] */;
  %154 = reshape(%153, newshape=[3, 8, 5]) /* ty=Tensor[(3, 8, 5), uint32] */;
  %155 = @func_777(%154) /* ty=(Tensor[(3, 8, 5), uint32], Tensor[(3, 8, 5), bool]) */;
  %156 = tan(%152) /* ty=Tensor[(10, 10, 15), float64] */;
  %157 = %155.0;
  (%156, %157, %var_1367)
}

def @func_3938() -> (Tensor[(12, 3, 10), float32], Tensor[(45), float64]) {
  %158 = @func_1561() /* ty=(Tensor[(12, 3, 10), float32], Tensor[(12, 3, 10), float32], Tensor[(12, 3, 10), float32], Tensor[(12, 3, 10), float32], Tensor[(45), float64]) */;
  %159 = %158.0;
  %160 = @func_3532() /* ty=Tensor[(45), float64] */;
  (%159, %160)
}

def @func_419() -> Tensor[(12, 3, 10), float32] {
  %161 = @func_331() /* ty=(Tensor[(12, 3, 10), float32],) */;
  %161.0
}

def @func_7647() -> Tensor[(5, 7, 9), bool] {
  %162 = @func_4119() /* ty=(Tensor[(5, 7, 9), bool],) */;
  %162.0
}

def @func_1150() -> Tensor[(5, 7, 9), bool] {
  %163 = @func_385() /* ty=(Tensor[(45), float64], Tensor[(5, 7, 9), bool]) */;
  %163.1
}

def @func_2814(%var_2813: Tensor[(11, 13, 2), float64]) -> (Tensor[(11, 13, 2), float64],) {
  %166 = fn (%var_2798: Tensor[(11, 13, 2), float64]) -> (Tensor[(11, 13, 2), float64],) {
    %164 = cast(%var_2798, dtype="float64") /* ty=Tensor[(11, 13, 2), float64] */;
    %165 = erf(%164) /* ty=Tensor[(11, 13, 2), float64] */;
    (%165,)
  };
  %166(%var_2813) /* ty=(Tensor[(11, 13, 2), float64],) */
}

def @func_9068() -> (Tensor[(45), float64], Tensor[(12, 3, 10), float32]) {
  @func_9066() /* ty=(Tensor[(45), float64], Tensor[(12, 3, 10), float32]) */
}

def @func_2714() -> (Tensor[(12, 3, 10), float32], Tensor[(12, 3, 10), float32], Tensor[(320), float32], Tensor[(1500), float64], Tensor[(320), float32]) {
  @func_2712() /* ty=(Tensor[(12, 3, 10), float32], Tensor[(12, 3, 10), float32], Tensor[(320), float32], Tensor[(1500), float64], Tensor[(320), float32]) */
}

def @func_6248() -> (Tensor[(12, 3, 10), float32], Tensor[(5, 7, 9), bool]) {
  @func_6246() /* ty=(Tensor[(12, 3, 10), float32], Tensor[(5, 7, 9), bool]) */
}

def @func_2591() -> Tensor[(12, 3, 10), float32] {
  @func_419() /* ty=Tensor[(12, 3, 10), float32] */
}

def @func_4657(%var_4641: Tensor[(5, 3, 8), float32], %var_4642: Tensor[(5, 3, 8), float32]) -> (Tensor[(5, 3, 8), float32], Tensor[(5, 3, 8), float64]) {
  %167 = cast(%var_4642, dtype="float32") /* ty=Tensor[(5, 3, 8), float32] */;
  %168 = shape_of(%var_4641, dtype="int32") /* ty=Tensor[(3), int32] */;
  %169 = cast(%var_4641, dtype="float32") /* ty=Tensor[(5, 3, 8), float32] */;
  %170 = dyn.reshape(%167, %168, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %171 = cast(%var_4641, dtype="float64") /* ty=Tensor[(5, 3, 8), float64] */;
  %172 = floor_mod(%169, %170) /* ty=Tensor[(5, 3, 8), float32] */;
  %173 = cosh(%171) /* ty=Tensor[(5, 3, 8), float64] */;
  (%172, %173)
}

def @func_4268() -> (Tensor[(12, 3, 10), float32], Tensor[(12, 3, 10), float32], Tensor[(5, 7, 9), bool]) {
  @func_4266() /* ty=(Tensor[(12, 3, 10), float32], Tensor[(12, 3, 10), float32], Tensor[(5, 7, 9), bool]) */
}

def @func_2463(%var_2436: Tensor[(1500), float64], %var_2450: Tensor[(320), float32]) -> (Tensor[(10, 10, 5), uint8], Tensor[(10, 10, 15), float64], Tensor[(1500), float64], Tensor[(120), uint32], Tensor[(2, 14, 3), bool], Tensor[(84), bool], Tensor[(320), float32], Tensor[(10, 10, 5), float64]) {
  %174 = cast(meta[relay.Constant][9] /* ty=Tensor[(10, 10, 5), float64] */, dtype="float64") /* ty=Tensor[(10, 10, 5), float64] */;
  %175 = rsqrt(%174) /* ty=Tensor[(10, 10, 5), float64] */;
  %176 = cast(meta[relay.Constant][9] /* ty=Tensor[(10, 10, 5), float64] */, dtype="uint8") /* ty=Tensor[(10, 10, 5), uint8] */;
  %177 = shape_of(%175, dtype="int32") /* ty=Tensor[(3), int32] */;
  %178 = cast(%175, dtype="uint8") /* ty=Tensor[(10, 10, 5), uint8] */;
  %179 = dyn.reshape(%176, %177, newshape=[]) /* ty=Tensor[(?, ?, ?), uint8] */;
  %180 = cast(%var_2436, dtype="float64") /* ty=Tensor[(1500), float64] */;
  %181 = cast(meta[relay.Constant][10] /* ty=Tensor[(120), uint32] */, dtype="uint32") /* ty=Tensor[(120), uint32] */;
  %182 = reshape(%180, newshape=[10, 10, 15]) /* ty=Tensor[(10, 10, 15), float64] */;
  %183 = reshape(%181, newshape=[120]) /* ty=Tensor[(120), uint32] */;
  %184 = @func_1372(%182, %183) /* ty=(Tensor[(10, 10, 15), float64], Tensor[(3, 8, 5), uint32], Tensor[(120), uint32]) */;
  %185 = cast(meta[relay.Constant][11] /* ty=Tensor[(84), bool] */, dtype="bool") /* ty=Tensor[(84), bool] */;
  %186 = cast(meta[relay.Constant][11] /* ty=Tensor[(84), bool] */, dtype="bool") /* ty=Tensor[(84), bool] */;
  %187 = cast(%var_2450, dtype="float32") /* ty=Tensor[(320), float32] */;
  %188 = reshape(%185, newshape=[2, 14, 3]) /* ty=Tensor[(2, 14, 3), bool] */;
  %189 = reshape(%186, newshape=[2, 14, 3]) /* ty=Tensor[(2, 14, 3), bool] */;
  %190 = reshape(%187, newshape=[320]) /* ty=Tensor[(320), float32] */;
  %191 = @func_541(%188, %189, %190) /* ty=(Tensor[(2, 14, 3), bool], Tensor[(4, 8, 10), float32], Tensor[(320), float32], Tensor[(12, 3, 10), float32]) */;
  %192 = cast(%175, dtype="float64") /* ty=Tensor[(10, 10, 5), float64] */;
  %193 = multiply(%178, %179) /* ty=Tensor[(10, 10, 5), uint8] */;
  %194 = %184.0;
  %195 = %191.0;
  %196 = acosh(%192) /* ty=Tensor[(10, 10, 5), float64] */;
  (%193, %194, %var_2436, meta[relay.Constant][10] /* ty=Tensor[(120), uint32] */, %195, meta[relay.Constant][11] /* ty=Tensor[(84), bool] */, %var_2450, %196)
}

def @func_8835(%var_8792: Tensor[(9, 13, 3), int32]) -> (Tensor[(9, 13, 3), bool], Tensor[(5, 7, 9), bool], Tensor[(10, 10, 15), float64], Tensor[(12, 3, 10), float32], Tensor[(286), float64]) {
  %197 = cast(%var_8792, dtype="bool") /* ty=Tensor[(9, 13, 3), bool] */;
  %198 = shape_of(meta[relay.Constant][12] /* ty=Tensor[(9, 13, 3), int32] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %199 = cast(meta[relay.Constant][12] /* ty=Tensor[(9, 13, 3), int32] */, dtype="bool") /* ty=Tensor[(9, 13, 3), bool] */;
  %200 = dyn.reshape(%197, %198, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %201 = @func_6779() /* ty=(Tensor[(12, 3, 10), float32], Tensor[(12, 3, 10), float32], Tensor[(10, 10, 15), float64]) */;
  %202 = cast(meta[relay.Constant][13] /* ty=Tensor[(286), float64] */, dtype="float64") /* ty=Tensor[(286), float64] */;
  %203 = reshape(%202, newshape=[286]) /* ty=Tensor[(286), float64] */;
  %204 = @func_3860(%203) /* ty=(Tensor[(12, 3, 10), float32], Tensor[(12, 3, 10), float32], Tensor[(12, 3, 10), float32], Tensor[(12, 3, 10), float32], Tensor[(12, 3, 10), float32], Tensor[(12, 3, 10), float32], Tensor[(12, 3, 10), float32], Tensor[(12, 3, 10), int8], Tensor[(5, 7, 9), bool], Tensor[(45), float64], Tensor[(11, 13, 2), float64], Tensor[(286), float64], Tensor[(12, 3, 10), float32]) */;
  %205 = greater_equal(%199, %200) /* ty=Tensor[(9, 13, 3), bool] */;
  %206 = @func_7647() /* ty=Tensor[(5, 7, 9), bool] */;
  %207 = %201.2;
  %208 = %204.1;
  (%205, %206, %207, %208, meta[relay.Constant][13] /* ty=Tensor[(286), float64] */)
}

def @func_546(%var_543: Tensor[(2, 14, 3), bool], %var_544: Tensor[(2, 14, 3), bool], %var_545: Tensor[(320), float32]) -> (Tensor[(2, 14, 3), bool], Tensor[(4, 8, 10), float32], Tensor[(320), float32], Tensor[(12, 3, 10), float32]) {
  @func_541(%var_543, %var_544, %var_545) /* ty=(Tensor[(2, 14, 3), bool], Tensor[(4, 8, 10), float32], Tensor[(320), float32], Tensor[(12, 3, 10), float32]) */
}

def @func_1580() -> (Tensor[(12, 3, 10), float32], Tensor[(12, 3, 10), float32]) {
  %211 = fn () -> (Tensor[(12, 3, 10), float32], Tensor[(12, 3, 10), float32]) {
    %209 = @func_791() /* ty=Tensor[(12, 3, 10), float32] */;
    %210 = @func_459() /* ty=Tensor[(12, 3, 10), float32] */;
    (%209, %210)
  };
  %211() /* ty=(Tensor[(12, 3, 10), float32], Tensor[(12, 3, 10), float32]) */
}

def @func_9378() -> (Tensor[(16, 16, 16), float64],) {
  @func_9376() /* ty=(Tensor[(16, 16, 16), float64],) */
}

def @func_6178() -> Tensor[(5, 7, 9), bool] {
  @func_6176() /* ty=Tensor[(5, 7, 9), bool] */
}

def @func_5048() -> (Tensor[(12, 3, 10), float32],) {
  %212 = @func_459() /* ty=Tensor[(12, 3, 10), float32] */;
  (%212,)
}

def @func_2884() -> Tensor[(12, 3, 10), float32] {
  %213 = @func_1137() /* ty=(Tensor[(12, 3, 10), float32],) */;
  %213.0
}

def @func_4074(%var_4072: Tensor[(12, 2, 15), float32]) -> (Tensor[(12, 2, 15), float32], Tensor[(5, 7, 9), bool]) {
  @func_4071(%var_4072) /* ty=(Tensor[(12, 2, 15), float32], Tensor[(5, 7, 9), bool]) */
}

def @func_5877() -> Tensor[(12, 3, 10), float32] {
  @func_5875() /* ty=Tensor[(12, 3, 10), float32] */
}

def @func_5280() -> (Tensor[(10, 10, 15), float64], Tensor[(12, 3, 10), float32], Tensor[(13, 33), float64], Tensor[(45), float64], Tensor[(5, 14, 9), int64], Tensor[(630), uint64], Tensor[(3, 13, 11), float64], Tensor[(3, 13, 11), float64]) {
  %214 = @func_5139() /* ty=(Tensor[(12, 3, 10), float32], Tensor[(12, 3, 10), float32], Tensor[(10, 10, 15), float64], Tensor[(750, 2), float64], Tensor[(120), uint32]) */;
  %215 = @func_3349() /* ty=(Tensor[(12, 3, 10), float32],) */;
  %216 = cast(meta[relay.Constant][15] /* ty=Tensor[(630), uint64] */, dtype="uint64") /* ty=Tensor[(630), uint64] */;
  %217 = @func_3532() /* ty=Tensor[(45), float64] */;
  %218 = cast(%217, dtype="float64") /* ty=Tensor[(45), float64] */;
  %219 = reshape(%216, newshape=[5, 14, 9]) /* ty=Tensor[(5, 14, 9), uint64] */;
  %220 = reshape(%218, newshape=[45]) /* ty=Tensor[(45), float64] */;
  %221 = @func_3525(%219, %220) /* ty=(Tensor[(12, 3, 10), float32], Tensor[(5, 7, 9), bool], Tensor[(45), float64], Tensor[(12, 3, 10), float32], Tensor[(5, 14, 9), int64], Tensor[(12, 3, 10), float32]) */;
  %222 = cast(meta[relay.Constant][14] /* ty=Tensor[(13, 33), float64] */, dtype="float64") /* ty=Tensor[(13, 33), float64] */;
  %223 = reshape(%222, newshape=[3, 13, 11]) /* ty=Tensor[(3, 13, 11), float64] */;
  %224 = @func_4990(%223) /* ty=(Tensor[(3, 13, 11), float64], Tensor[(3, 13, 11), uint64]) */;
  %225 = %224.0;
  %226 = cast(%225, dtype="float64") /* ty=Tensor[(3, 13, 11), float64] */;
  %227 = log(%226) /* ty=Tensor[(3, 13, 11), float64] */;
  %228 = cast(%227, dtype="float64") /* ty=Tensor[(3, 13, 11), float64] */;
  %229 = cast(%227, dtype="float64") /* ty=Tensor[(3, 13, 11), float64] */;
  %230 = %214.2;
  %231 = %215.0;
  %232 = %221.4;
  %233 = erf(%228) /* ty=Tensor[(3, 13, 11), float64] */;
  %234 = asinh(%229) /* ty=Tensor[(3, 13, 11), float64] */;
  (%230, %231, meta[relay.Constant][14] /* ty=Tensor[(13, 33), float64] */, %217, %232, meta[relay.Constant][15] /* ty=Tensor[(630), uint64] */, %233, %234)
}

def @func_7229() -> Tensor[(12, 3, 10), float32] {
  @func_5370() /* ty=Tensor[(12, 3, 10), float32] */
}

def @func_646() -> (Tensor[(5, 7, 9), bool], Tensor[(12, 3, 10), int8], Tensor[(360), float32], Tensor[(5, 7, 9), bool], Tensor[(5, 7, 9), bool], Tensor[(45), float64], Tensor[(12, 3, 10), int8]) {
  @func_644() /* ty=(Tensor[(5, 7, 9), bool], Tensor[(12, 3, 10), int8], Tensor[(360), float32], Tensor[(5, 7, 9), bool], Tensor[(5, 7, 9), bool], Tensor[(45), float64], Tensor[(12, 3, 10), int8]) */
}

def @func_2281() -> (Tensor[(12, 3, 10), float32],) {
  %236 = fn () -> (Tensor[(12, 3, 10), float32],) {
    %235 = @func_807() /* ty=Tensor[(12, 3, 10), float32] */;
    (%235,)
  };
  %236() /* ty=(Tensor[(12, 3, 10), float32],) */
}

def @func_6870() -> (Tensor[(12, 3, 10), float32], Tensor[(12, 2, 15), float32], Tensor[(12, 3, 10), float32], Tensor[(45), float64]) {
  @func_6868() /* ty=(Tensor[(12, 3, 10), float32], Tensor[(12, 2, 15), float32], Tensor[(12, 3, 10), float32], Tensor[(45), float64]) */
}

def @func_585() -> (Tensor[(12, 3, 10), float32],) {
  @func_583() /* ty=(Tensor[(12, 3, 10), float32],) */
}

def @func_6074() -> Tensor[(5, 7, 9), bool] {
  @func_6072() /* ty=Tensor[(5, 7, 9), bool] */
}

def @func_741() -> Tensor[(12, 3, 10), float32] {
  @func_739() /* ty=Tensor[(12, 3, 10), float32] */
}

def @func_8621() -> (Tensor[(12, 3, 10), float32], Tensor[(5, 7, 9), bool]) {
  %239 = fn () -> (Tensor[(12, 3, 10), float32], Tensor[(5, 7, 9), bool]) {
    %237 = @func_4133() /* ty=Tensor[(12, 3, 10), float32] */;
    %238 = @func_6072() /* ty=Tensor[(5, 7, 9), bool] */;
    (%237, %238)
  };
  %239() /* ty=(Tensor[(12, 3, 10), float32], Tensor[(5, 7, 9), bool]) */
}

def @func_4052() -> (Tensor[(12, 3, 10), float32], Tensor[(12, 3, 10), float32]) {
  @func_4050() /* ty=(Tensor[(12, 3, 10), float32], Tensor[(12, 3, 10), float32]) */
}

def @func_5769() -> Tensor[(12, 3, 10), int8] {
  %240 = @func_644() /* ty=(Tensor[(5, 7, 9), bool], Tensor[(12, 3, 10), int8], Tensor[(360), float32], Tensor[(5, 7, 9), bool], Tensor[(5, 7, 9), bool], Tensor[(45), float64], Tensor[(12, 3, 10), int8]) */;
  %240.6
}

def @func_4956() -> (Tensor[(12, 3, 10), float32],) {
  %243 = fn () -> (Tensor[(12, 3, 10), float32],) {
    %241 = @func_4050() /* ty=(Tensor[(12, 3, 10), float32], Tensor[(12, 3, 10), float32]) */;
    %242 = %241.0;
    (%242,)
  };
  %243() /* ty=(Tensor[(12, 3, 10), float32],) */
}

def @func_5801() -> (Tensor[(12, 3, 10), float32],) {
  @func_5799() /* ty=(Tensor[(12, 3, 10), float32],) */
}

def @func_5875() -> Tensor[(12, 3, 10), float32] {
  %244 = @func_1561() /* ty=(Tensor[(12, 3, 10), float32], Tensor[(12, 3, 10), float32], Tensor[(12, 3, 10), float32], Tensor[(12, 3, 10), float32], Tensor[(45), float64]) */;
  %244.0
}

def @func_5991() -> Tensor[(12, 3, 10), float32] {
  %245 = @func_5976() /* ty=(Tensor[(12, 3, 10), float32],) */;
  %245.0
}

def @func_6525() -> (Tensor[(12, 3, 10), float32], Tensor[(12, 3, 10), float32]) {
  %246 = @func_419() /* ty=Tensor[(12, 3, 10), float32] */;
  %247 = @func_4133() /* ty=Tensor[(12, 3, 10), float32] */;
  (%246, %247)
}

def @func_3332() -> (Tensor[(5, 7, 9), bool], Tensor[(5, 7, 9), bool]) {
  @func_3330() /* ty=(Tensor[(5, 7, 9), bool], Tensor[(5, 7, 9), bool]) */
}

def @func_8681() -> (Tensor[(5, 7, 9), bool], Tensor[(5, 7, 9), bool]) {
  %248 = @func_6284() /* ty=(Tensor[(12, 3, 10), float32], Tensor[(5, 7, 9), bool]) */;
  %249 = %248.1;
  %250 = @func_6176() /* ty=Tensor[(5, 7, 9), bool] */;
  (%249, %250)
}

def @func_5755() -> (Tensor[(5, 7, 9), bool],) {
  %251 = @func_5147() /* ty=(Tensor[(12, 3, 10), float32], Tensor[(5, 7, 9), bool]) */;
  %252 = %251.1;
  (%252,)
}

def @func_722() -> (Tensor[(12, 3, 10), float32],) {
  %255 = fn () -> (Tensor[(12, 3, 10), float32],) {
    %253 = @func_583() /* ty=(Tensor[(12, 3, 10), float32],) */;
    %254 = %253.0;
    (%254,)
  };
  %255() /* ty=(Tensor[(12, 3, 10), float32],) */
}

def @func_834(%var_825: Tensor[(12, 3, 10), float32]) -> Tensor[(12, 3, 10), uint64] {
  %256 = @func_739() /* ty=Tensor[(12, 3, 10), float32] */;
  %257 = cast(%var_825, dtype="uint64") /* ty=Tensor[(12, 3, 10), uint64] */;
  %258 = shape_of(%256, dtype="int32") /* ty=Tensor[(3), int32] */;
  %259 = cast(%256, dtype="uint64") /* ty=Tensor[(12, 3, 10), uint64] */;
  %260 = dyn.reshape(%257, %258, newshape=[]) /* ty=Tensor[(?, ?, ?), uint64] */;
  bitwise_or(%259, %260) /* ty=Tensor[(12, 3, 10), uint64] */
}

def @func_837(%var_835: Tensor[(12, 3, 10), float32]) -> Tensor[(12, 3, 10), uint64] {
  @func_834(%var_835) /* ty=Tensor[(12, 3, 10), uint64] */
}

def @func_9334() -> (Tensor[(5, 7, 9), float32], Tensor[(512), float64]) {
  %261 = @func_8175() /* ty=(Tensor[(5, 7, 9), float32], Tensor[(5, 7, 9), bool], Tensor[(45), float64]) */;
  %262 = @func_2660() /* ty=(Tensor[(12, 3, 10), float32], Tensor[(12, 3, 10), float32], Tensor[(12, 3, 10), float32], Tensor[(512), int32]) */;
  %263 = %262.3;
  %264 = cast(%263, dtype="float64") /* ty=Tensor[(512), float64] */;
  %265 = %261.0;
  %266 = cos(%264) /* ty=Tensor[(512), float64] */;
  (%265, %266)
}

def @func_6072() -> Tensor[(5, 7, 9), bool] {
  %267 = @func_644() /* ty=(Tensor[(5, 7, 9), bool], Tensor[(12, 3, 10), int8], Tensor[(360), float32], Tensor[(5, 7, 9), bool], Tensor[(5, 7, 9), bool], Tensor[(45), float64], Tensor[(12, 3, 10), int8]) */;
  %267.3
}

def @func_8002() -> Tensor[(5, 7, 9), bool] {
  %269 = fn () -> Tensor[(5, 7, 9), bool] {
    %268 = @func_5588() /* ty=(Tensor[(12, 3, 10), float32], Tensor[(5, 7, 9), bool]) */;
    %268.1
  };
  %269() /* ty=Tensor[(5, 7, 9), bool] */
}

def @func_5730() -> Tensor[(45), float64] {
  @func_5728() /* ty=Tensor[(45), float64] */
}

def @func_6527() -> (Tensor[(12, 3, 10), float32], Tensor[(12, 3, 10), float32]) {
  @func_6525() /* ty=(Tensor[(12, 3, 10), float32], Tensor[(12, 3, 10), float32]) */
}

def @func_5511() -> (Tensor[(12, 3, 10), float32],) {
  %272 = fn () -> (Tensor[(12, 3, 10), float32],) {
    %270 = @func_4157() /* ty=(Tensor[(12, 3, 10), float32],) */;
    %271 = %270.0;
    (%271,)
  };
  %272() /* ty=(Tensor[(12, 3, 10), float32],) */
}

def @func_6840() -> (Tensor[(12, 3, 10), int8], Tensor[(12, 3, 10), float32], Tensor[(5, 5, 6), int64], Tensor[(4, 8, 10), float32], Tensor[(2, 160), float32]) {
  %273 = @func_2149() /* ty=(Tensor[(12, 3, 10), float32], Tensor[(12, 3, 10), float32], Tensor[(5, 7, 9), bool], Tensor[(5, 7, 9), bool], Tensor[(12, 3, 10), int8]) */;
  %274 = @func_6648() /* ty=(Tensor[(12, 3, 10), float32],) */;
  %275 = @func_5895() /* ty=(Tensor[(5, 5, 6), int64],) */;
  %276 = cast(meta[relay.Constant][16] /* ty=Tensor[(2, 160), float32] */, dtype="float32") /* ty=Tensor[(2, 160), float32] */;
  %277 = cast(meta[relay.Constant][16] /* ty=Tensor[(2, 160), float32] */, dtype="float32") /* ty=Tensor[(2, 160), float32] */;
  %278 = reshape(%276, newshape=[4, 8, 10]) /* ty=Tensor[(4, 8, 10), float32] */;
  %279 = reshape(%277, newshape=[4, 8, 10]) /* ty=Tensor[(4, 8, 10), float32] */;
  %280 = %273.4;
  %281 = %274.0;
  %282 = %275.0;
  %283 = @func_308(%278, %279) /* ty=Tensor[(4, 8, 10), float32] */;
  (%280, %281, %282, %283, meta[relay.Constant][16] /* ty=Tensor[(2, 160), float32] */)
}

def @func_7649() -> Tensor[(5, 7, 9), bool] {
  @func_7647() /* ty=Tensor[(5, 7, 9), bool] */
}

def @func_5728() -> Tensor[(45), float64] {
  %284 = @func_4934() /* ty=(Tensor[(45), float64],) */;
  %285 = %284.0;
  %286 = cast(%285, dtype="float64") /* ty=Tensor[(45), float64] */;
  sqrt(%286) /* ty=Tensor[(45), float64] */
}

def @func_6458() -> (Tensor[(12, 3, 10), float32], Tensor[(12, 3, 10), float32]) {
  %287 = @func_3240() /* ty=(Tensor[(12, 3, 10), float32], Tensor[(12, 3, 10), float32]) */;
  %288 = %287.1;
  %289 = @func_2591() /* ty=Tensor[(12, 3, 10), float32] */;
  (%288, %289)
}

def @func_6780() -> (Tensor[(12, 3, 10), float32], Tensor[(12, 3, 10), float32], Tensor[(10, 10, 15), float64]) {
  %295 = fn () -> (Tensor[(12, 3, 10), float32], Tensor[(12, 3, 10), float32], Tensor[(10, 10, 15), float64]) {
    %290 = @func_1779() /* ty=(Tensor[(12, 3, 10), float32],) */;
    %291 = @func_5139() /* ty=(Tensor[(12, 3, 10), float32], Tensor[(12, 3, 10), float32], Tensor[(10, 10, 15), float64], Tensor[(750, 2), float64], Tensor[(120), uint32]) */;
    %292 = @func_4133() /* ty=Tensor[(12, 3, 10), float32] */;
    %293 = %290.0;
    %294 = %291.2;
    (%292, %293, %294)
  };
  %295() /* ty=(Tensor[(12, 3, 10), float32], Tensor[(12, 3, 10), float32], Tensor[(10, 10, 15), float64]) */
}

def @func_6460() -> (Tensor[(12, 3, 10), float32], Tensor[(12, 3, 10), float32]) {
  @func_6458() /* ty=(Tensor[(12, 3, 10), float32], Tensor[(12, 3, 10), float32]) */
}

def @func_7231() -> Tensor[(12, 3, 10), float32] {
  @func_7229() /* ty=Tensor[(12, 3, 10), float32] */
}

def @func_4050() -> (Tensor[(12, 3, 10), float32], Tensor[(12, 3, 10), float32]) {
  %296 = @func_791() /* ty=Tensor[(12, 3, 10), float32] */;
  %297 = @func_807() /* ty=Tensor[(12, 3, 10), float32] */;
  (%296, %297)
}

def @main(%var_9421: uint32) -> (Tensor[(6, 7, 2), uint32], Tensor[(5, 7, 9), bool], Tensor[(6, 7, 2), float64]) {
  %298 = cast(%var_9421, dtype="uint32") /* ty=uint32 */;
  %299 = cast(meta[relay.Constant][17] /* ty=Tensor[(6, 7, 2), uint32] */, dtype="uint32") /* ty=Tensor[(6, 7, 2), uint32] */;
  %300 = @func_2579() /* ty=(Tensor[(5, 7, 9), bool], Tensor[(12, 3, 10), float64]) */;
  %301 = cast(meta[relay.Constant][17] /* ty=Tensor[(6, 7, 2), uint32] */, dtype="bool") /* ty=Tensor[(6, 7, 2), bool] */;
  %302 = cast(%var_9421, dtype="bool") /* ty=bool */;
  %303 = greater(%301, %302) /* ty=Tensor[(6, 7, 2), bool] */;
  %304 = cast(%303, dtype="float64") /* ty=Tensor[(6, 7, 2), float64] */;
  %305 = minimum(%298, %299) /* ty=Tensor[(6, 7, 2), uint32] */;
  %306 = %300.0;
  %307 = sigmoid(%304) /* ty=Tensor[(6, 7, 2), float64] */;
  (%305, %306, %307)
}

def @func_6713() -> (Tensor[(5, 7, 9), bool], Tensor[(12, 3, 10), float32], Tensor[(2, 256), uint8], Tensor[(512), int32]) {
  %318 = fn () -> (Tensor[(5, 7, 9), bool], Tensor[(12, 3, 10), float32], Tensor[(2, 256), uint8], Tensor[(512), int32]) {
    %308 = @func_5588() /* ty=(Tensor[(12, 3, 10), float32], Tensor[(5, 7, 9), bool]) */;
    %309 = @func_1996() /* ty=(Tensor[(12, 3, 10), float32], Tensor[(12, 3, 10), float32]) */;
    %310 = cast(meta[relay.Constant][18] /* ty=Tensor[(512), int32] */, dtype="int32") /* ty=Tensor[(512), int32] */;
    %311 = cast(meta[relay.Constant][18] /* ty=Tensor[(512), int32] */, dtype="float32") /* ty=Tensor[(512), float32] */;
    %312 = reshape(%310, newshape=[2, 256]) /* ty=Tensor[(2, 256), int32] */;
    %313 = reshape(%311, newshape=[2, 256]) /* ty=Tensor[(2, 256), float32] */;
    %314 = @func_1764(%312, %313) /* ty=(Tensor[(12, 3, 10), float32], Tensor[(5, 7, 9), bool], Tensor[(5, 7, 9), bool], Tensor[(2, 256), uint8]) */;
    %315 = %308.1;
    %316 = %309.0;
    %317 = %314.3;
    (%315, %316, %317, meta[relay.Constant][18] /* ty=Tensor[(512), int32] */)
  };
  %318() /* ty=(Tensor[(5, 7, 9), bool], Tensor[(12, 3, 10), float32], Tensor[(2, 256), uint8], Tensor[(512), int32]) */
}

def @func_1012(%var_1009: Tensor[(120), uint32], %var_1010: Tensor[(45, 1), float64], %var_1011: Tensor[(5, 7, 9), float64]) -> (Tensor[(12, 3, 10), float32], Tensor[(3, 8, 5), uint32], Tensor[(120), uint32], Tensor[(45, 1), float64], Tensor[(12, 3, 10), float32], Tensor[(5, 7, 9), int16]) {
  %337 = fn (%var_954: Tensor[(120), uint32], %var_966: Tensor[(45, 1), float64], %var_1001: Tensor[(5, 7, 9), float64]) -> (Tensor[(12, 3, 10), float32], Tensor[(3, 8, 5), uint32], Tensor[(120), uint32], Tensor[(45, 1), float64], Tensor[(12, 3, 10), float32], Tensor[(5, 7, 9), int16]) {
    %319 = @func_583() /* ty=(Tensor[(12, 3, 10), float32],) */;
    %320 = cast(%var_954, dtype="uint32") /* ty=Tensor[(120), uint32] */;
    %321 = reshape(%320, newshape=[3, 8, 5]) /* ty=Tensor[(3, 8, 5), uint32] */;
    %322 = @func_777(%321) /* ty=(Tensor[(3, 8, 5), uint32], Tensor[(3, 8, 5), bool]) */;
    %323 = @func_721() /* ty=(Tensor[(12, 3, 10), float32],) */;
    %324 = cast(%var_966, dtype="float64") /* ty=Tensor[(45, 1), float64] */;
    %325 = reshape(%324, newshape=[5, 1, 9]) /* ty=Tensor[(5, 1, 9), float64] */;
    %326 = @func_176(%325) /* ty=Tensor[(5, 7, 9), bool] */;
    %327 = cast(%326, dtype="float64") /* ty=Tensor[(5, 7, 9), float64] */;
    %328 = sin(%327) /* ty=Tensor[(5, 7, 9), float64] */;
    %329 = cast(%var_1001, dtype="int16") /* ty=Tensor[(5, 7, 9), int16] */;
    %330 = shape_of(%328, dtype="int32") /* ty=Tensor[(3), int32] */;
    %331 = cast(%328, dtype="int16") /* ty=Tensor[(5, 7, 9), int16] */;
    %332 = dyn.reshape(%329, %330, newshape=[]) /* ty=Tensor[(?, ?, ?), int16] */;
    %333 = %319.0;
    %334 = %322.0;
    %335 = %323.0;
    %336 = multiply(%331, %332) /* ty=Tensor[(5, 7, 9), int16] */;
    (%333, %334, %var_954, %var_966, %335, %336)
  };
  %337(%var_1009, %var_1010, %var_1011) /* ty=(Tensor[(12, 3, 10), float32], Tensor[(3, 8, 5), uint32], Tensor[(120), uint32], Tensor[(45, 1), float64], Tensor[(12, 3, 10), float32], Tensor[(5, 7, 9), int16]) */
}

def @func_9391() -> Tensor[(5, 7, 9), bool] {
  %339 = fn () -> Tensor[(5, 7, 9), bool] {
    %338 = @func_8681() /* ty=(Tensor[(5, 7, 9), bool], Tensor[(5, 7, 9), bool]) */;
    %338.0
  };
  %339() /* ty=Tensor[(5, 7, 9), bool] */
}

def @func_9336() -> (Tensor[(5, 7, 9), float32], Tensor[(512), float64]) {
  @func_9334() /* ty=(Tensor[(5, 7, 9), float32], Tensor[(512), float64]) */
}

def @func_1927(%var_1906: Tensor[(12, 15, 5), float32], %var_1922: Tensor[(360), float32]) -> (Tensor[(12, 15, 5), float32], Tensor[(5, 7, 9), bool], Tensor[(12, 3, 10), int8], Tensor[(360), float32], Tensor[(12, 3, 10), float32]) {
  %340 = cast(%var_1906, dtype="float32") /* ty=Tensor[(12, 15, 5), float32] */;
  %341 = @func_1182() /* ty=(Tensor[(5, 7, 9), bool],) */;
  %342 = cast(%var_1922, dtype="float32") /* ty=Tensor[(360), float32] */;
  %343 = reshape(%342, newshape=[12, 3, 10]) /* ty=Tensor[(12, 3, 10), float32] */;
  %344 = @func_271() /* ty=(Tensor[(12, 3, 10), float32], Tensor[(5, 7, 9), bool], Tensor[(45), float64]) */;
  %345 = tan(%340) /* ty=Tensor[(12, 15, 5), float32] */;
  %346 = %341.0;
  %347 = @func_480(%343) /* ty=Tensor[(12, 3, 10), int8] */;
  %348 = %344.0;
  (%345, %346, %347, %var_1922, %348)
}

def @func_2762(%var_2760: Tensor[(45), float64]) -> (Tensor[(45), uint32], Tensor[(12, 3, 10), float32]) {
  @func_2759(%var_2760) /* ty=(Tensor[(45), uint32], Tensor[(12, 3, 10), float32]) */
}

def @func_583() -> (Tensor[(12, 3, 10), float32],) {
  %349 = @func_331() /* ty=(Tensor[(12, 3, 10), float32],) */;
  %350 = %349.0;
  (%350,)
}

def @func_8548() -> (Tensor[(12, 3, 10), float32], Tensor[(12, 3, 10), float32]) {
  @func_8546() /* ty=(Tensor[(12, 3, 10), float32], Tensor[(12, 3, 10), float32]) */
}

def @func_7705() -> Tensor[(12, 3, 10), float32] {
  %351 = @func_3717() /* ty=(Tensor[(5, 7, 9), float32], Tensor[(12, 3, 10), float32]) */;
  %351.1
}

def @func_4071(%var_4053: Tensor[(12, 2, 15), float32]) -> (Tensor[(12, 2, 15), float32], Tensor[(5, 7, 9), bool]) {
  %352 = cast(%var_4053, dtype="float32") /* ty=Tensor[(12, 2, 15), float32] */;
  %353 = @func_3998() /* ty=(Tensor[(5, 7, 9), bool],) */;
  %354 = log10(%352) /* ty=Tensor[(12, 2, 15), float32] */;
  %355 = %353.0;
  (%354, %355)
}

def @func_9175(%var_9173: Tensor[(585), float64]) -> (Tensor[(12, 3, 10), float32], Tensor[(3, 15, 13), float64], Tensor[(585), float64], Tensor[(3, 15, 13), float64]) {
  @func_9172(%var_9173) /* ty=(Tensor[(12, 3, 10), float32], Tensor[(3, 15, 13), float64], Tensor[(585), float64], Tensor[(3, 15, 13), float64]) */
}

def @func_3717() -> (Tensor[(5, 7, 9), float32], Tensor[(12, 3, 10), float32]) {
  %356 = @func_2908() /* ty=(Tensor[(5, 7, 9), bool],) */;
  %357 = %356.0;
  %358 = cast(%357, dtype="float32") /* ty=Tensor[(5, 7, 9), float32] */;
  %359 = @func_3240() /* ty=(Tensor[(12, 3, 10), float32], Tensor[(12, 3, 10), float32]) */;
  %360 = log10(%358) /* ty=Tensor[(5, 7, 9), float32] */;
  %361 = %359.0;
  (%360, %361)
}

def @func_3140(%var_3139: Tensor[(4, 4, 6), float32]) -> (Tensor[(4, 4, 6), float32], Tensor[(12, 3, 10), float32], Tensor[(5, 5, 6), int64], Tensor[(12, 3, 10), float32], Tensor[(12, 3, 10), float32], Tensor[(12, 3, 10), float32], Tensor[(9, 150), bool]) {
  %383 = fn (%var_3030: Tensor[(4, 4, 6), float32]) -> (Tensor[(4, 4, 6), float32], Tensor[(12, 3, 10), float32], Tensor[(5, 5, 6), int64], Tensor[(12, 3, 10), float32], Tensor[(12, 3, 10), float32], Tensor[(12, 3, 10), float32], Tensor[(9, 150), bool]) {
    %362 = cast(%var_3030, dtype="float32") /* ty=Tensor[(4, 4, 6), float32] */;
    %363 = @func_2953() /* ty=(Tensor[(12, 3, 10), float32],) */;
    %364 = cast(meta[relay.Constant][19] /* ty=Tensor[(1, 150), int64] */, dtype="int64") /* ty=Tensor[(1, 150), int64] */;
    %365 = cast(meta[relay.Constant][19] /* ty=Tensor[(1, 150), int64] */, dtype="int64") /* ty=Tensor[(1, 150), int64] */;
    %366 = reshape(%364, newshape=[5, 5, 6]) /* ty=Tensor[(5, 5, 6), int64] */;
    %367 = reshape(%365, newshape=[5, 5, 6]) /* ty=Tensor[(5, 5, 6), int64] */;
    %368 = @func_1867(%366, %367) /* ty=(Tensor[(5, 5, 6), int64],) */;
    %369 = @func_1561() /* ty=(Tensor[(12, 3, 10), float32], Tensor[(12, 3, 10), float32], Tensor[(12, 3, 10), float32], Tensor[(12, 3, 10), float32], Tensor[(45), float64]) */;
    %370 = @func_1137() /* ty=(Tensor[(12, 3, 10), float32],) */;
    %371 = cast(meta[relay.Constant][19] /* ty=Tensor[(1, 150), int64] */, dtype="bool") /* ty=Tensor[(1, 150), bool] */;
    %372 = cast(meta[relay.Constant][20] /* ty=Tensor[(9, 150), int64] */, dtype="bool") /* ty=Tensor[(9, 150), bool] */;
    %373 = equal(%371, %372) /* ty=Tensor[(9, 150), bool] */;
    %374 = cast(%373, dtype="bool") /* ty=Tensor[(9, 150), bool] */;
    %375 = cast(meta[relay.Constant][19] /* ty=Tensor[(1, 150), int64] */, dtype="bool") /* ty=Tensor[(1, 150), bool] */;
    %376 = exp(%362) /* ty=Tensor[(4, 4, 6), float32] */;
    %377 = %363.0;
    %378 = %368.0;
    %379 = %369.3;
    %380 = @func_739() /* ty=Tensor[(12, 3, 10), float32] */;
    %381 = %370.0;
    %382 = less(%374, %375) /* ty=Tensor[(9, 150), bool] */;
    (%376, %377, %378, %379, %380, %381, %382)
  };
  %383(%var_3139) /* ty=(Tensor[(4, 4, 6), float32], Tensor[(12, 3, 10), float32], Tensor[(5, 5, 6), int64], Tensor[(12, 3, 10), float32], Tensor[(12, 3, 10), float32], Tensor[(12, 3, 10), float32], Tensor[(9, 150), bool]) */
}

def @func_8248() -> (Tensor[(12, 3, 10), float32], Tensor[(5, 7, 9), bool], Tensor[(12, 3, 10), float32]) {
  %389 = fn () -> (Tensor[(12, 3, 10), float32], Tensor[(5, 7, 9), bool], Tensor[(12, 3, 10), float32]) {
    %384 = @func_2636() /* ty=(Tensor[(12, 3, 10), float32], Tensor[(12, 3, 10), float32], Tensor[(12, 3, 10), float32]) */;
    %385 = @func_4955() /* ty=(Tensor[(12, 3, 10), float32],) */;
    %386 = %384.0;
    %387 = @func_4706() /* ty=Tensor[(5, 7, 9), bool] */;
    %388 = %385.0;
    (%386, %387, %388)
  };
  %389() /* ty=(Tensor[(12, 3, 10), float32], Tensor[(5, 7, 9), bool], Tensor[(12, 3, 10), float32]) */
}

def @func_2637() -> (Tensor[(12, 3, 10), float32], Tensor[(12, 3, 10), float32], Tensor[(12, 3, 10), float32]) {
  %395 = fn () -> (Tensor[(12, 3, 10), float32], Tensor[(12, 3, 10), float32], Tensor[(12, 3, 10), float32]) {
    %390 = @func_807() /* ty=Tensor[(12, 3, 10), float32] */;
    %391 = cast(%390, dtype="float32") /* ty=Tensor[(12, 3, 10), float32] */;
    %392 = @func_459() /* ty=Tensor[(12, 3, 10), float32] */;
    %393 = sinh(%391) /* ty=Tensor[(12, 3, 10), float32] */;
    %394 = @func_459() /* ty=Tensor[(12, 3, 10), float32] */;
    (%392, %393, %394)
  };
  %395() /* ty=(Tensor[(12, 3, 10), float32], Tensor[(12, 3, 10), float32], Tensor[(12, 3, 10), float32]) */
}

def @func_5371() -> Tensor[(12, 3, 10), float32] {
  %397 = fn () -> Tensor[(12, 3, 10), float32] {
    %396 = @func_1579() /* ty=(Tensor[(12, 3, 10), float32], Tensor[(12, 3, 10), float32]) */;
    %396.1
  };
  %397() /* ty=Tensor[(12, 3, 10), float32] */
}

def @func_8778() -> (Tensor[(5, 5, 6), float64],) {
  @func_8776() /* ty=(Tensor[(5, 5, 6), float64],) */
}

def @func_7468(%var_7467: Tensor[(180, 2), float32]) -> (Tensor[(45), float64], Tensor[(12, 3, 10), uint32], Tensor[(180, 2), float32], Tensor[(12, 3, 10), float32], Tensor[(120), float32], Tensor[(120), float32]) {
  %415 = fn (%var_7453: Tensor[(180, 2), float32]) -> (Tensor[(45), float64], Tensor[(12, 3, 10), uint32], Tensor[(180, 2), float32], Tensor[(12, 3, 10), float32], Tensor[(120), float32], Tensor[(120), float32]) {
    %398 = @func_2796() /* ty=Tensor[(45), float64] */;
    %399 = cast(meta[relay.Constant][21] /* ty=Tensor[(45), float64] */, dtype="float64") /* ty=Tensor[(45), float64] */;
    %400 = shape_of(%398, dtype="int32") /* ty=Tensor[(1), int32] */;
    %401 = cast(%398, dtype="float64") /* ty=Tensor[(45), float64] */;
    %402 = dyn.reshape(%399, %400, newshape=[]) /* ty=Tensor[(?), float64] */;
    %403 = cast(%var_7453, dtype="float32") /* ty=Tensor[(180, 2), float32] */;
    %404 = divide(%401, %402) /* ty=Tensor[(45), float64] */;
    %405 = cast(%404, dtype="float64") /* ty=Tensor[(45), float64] */;
    %406 = reshape(%403, newshape=[12, 3, 10]) /* ty=Tensor[(12, 3, 10), float32] */;
    %407 = reshape(%405, newshape=[45]) /* ty=Tensor[(45), float64] */;
    %408 = @func_5337(%406, %407) /* ty=(Tensor[(12, 3, 10), uint32], Tensor[(45), float64], Tensor[(45), float64], Tensor[(12, 3, 10), float32]) */;
    %409 = cast(meta[relay.Constant][22] /* ty=Tensor[(120), float32] */, dtype="float32") /* ty=Tensor[(120), float32] */;
    %410 = reshape(%409, newshape=[120]) /* ty=Tensor[(120), float32] */;
    %411 = @func_6744(%410) /* ty=(Tensor[(12, 3, 10), float32], Tensor[(5, 3, 8), float32], Tensor[(120), float32]) */;
    %412 = %408.0;
    %413 = @func_739() /* ty=Tensor[(12, 3, 10), float32] */;
    %414 = %411.2;
    (%404, %412, %var_7453, %413, %414, meta[relay.Constant][22] /* ty=Tensor[(120), float32] */)
  };
  %415(%var_7467) /* ty=(Tensor[(45), float64], Tensor[(12, 3, 10), uint32], Tensor[(180, 2), float32], Tensor[(12, 3, 10), float32], Tensor[(120), float32], Tensor[(120), float32]) */
}

def @func_5977() -> (Tensor[(12, 3, 10), float32],) {
  %417 = fn () -> (Tensor[(12, 3, 10), float32],) {
    %416 = @func_4133() /* ty=Tensor[(12, 3, 10), float32] */;
    (%416,)
  };
  %417() /* ty=(Tensor[(12, 3, 10), float32],) */
}

def @func_2248(%var_2247: Tensor[(320), float32]) -> (Tensor[(12, 3, 10), float32], Tensor[(12, 3, 10), int8], Tensor[(12, 3, 10), float32], Tensor[(12, 3, 10), float32], Tensor[(4, 8, 10), float32], Tensor[(320), float32], Tensor[(12, 3, 10), float32], Tensor[(12, 3, 10), uint64]) {
  %434 = fn (%var_2236: Tensor[(320), float32]) -> (Tensor[(12, 3, 10), float32], Tensor[(12, 3, 10), int8], Tensor[(12, 3, 10), float32], Tensor[(12, 3, 10), float32], Tensor[(4, 8, 10), float32], Tensor[(320), float32], Tensor[(12, 3, 10), float32], Tensor[(12, 3, 10), uint64]) {
    %418 = @func_1137() /* ty=(Tensor[(12, 3, 10), float32],) */;
    %419 = @func_1479() /* ty=(Tensor[(12, 3, 10), float32], Tensor[(12, 3, 10), int8], Tensor[(5, 7, 9), bool], Tensor[(12, 3, 10), float32], Tensor[(12, 3, 10), float64], Tensor[(12, 3, 10), float32], Tensor[(12, 3, 10), float32], Tensor[(12, 3, 10), float32]) */;
    %420 = @func_1849() /* ty=(Tensor[(12, 3, 10), float32],) */;
    %421 = cast(%var_2236, dtype="float32") /* ty=Tensor[(320), float32] */;
    %422 = cast(%var_2236, dtype="float32") /* ty=Tensor[(320), float32] */;
    %423 = reshape(%421, newshape=[4, 8, 10]) /* ty=Tensor[(4, 8, 10), float32] */;
    %424 = reshape(%422, newshape=[4, 8, 10]) /* ty=Tensor[(4, 8, 10), float32] */;
    %425 = @func_807() /* ty=Tensor[(12, 3, 10), float32] */;
    %426 = cast(%425, dtype="float32") /* ty=Tensor[(12, 3, 10), float32] */;
    %427 = reshape(%426, newshape=[12, 3, 10]) /* ty=Tensor[(12, 3, 10), float32] */;
    %428 = %418.0;
    %429 = %419.1;
    %430 = %420.0;
    %431 = @func_308(%423, %424) /* ty=Tensor[(4, 8, 10), float32] */;
    %432 = @func_791() /* ty=Tensor[(12, 3, 10), float32] */;
    %433 = @func_834(%427) /* ty=Tensor[(12, 3, 10), uint64] */;
    (%428, %429, %430, %425, %431, %var_2236, %432, %433)
  };
  %434(%var_2247) /* ty=(Tensor[(12, 3, 10), float32], Tensor[(12, 3, 10), int8], Tensor[(12, 3, 10), float32], Tensor[(12, 3, 10), float32], Tensor[(4, 8, 10), float32], Tensor[(320), float32], Tensor[(12, 3, 10), float32], Tensor[(12, 3, 10), uint64]) */
}

def @func_4843(%var_4842: Tensor[(6, 12, 16), float64]) -> (Tensor[(5, 7, 9), bool], Tensor[(2, 15, 13), float32], Tensor[(390), float32], Tensor[(6, 12, 16), float32], Tensor[(6, 12, 16), bool], Tensor[(12, 3, 10), float32], Tensor[(6, 12, 16), float64], Tensor[(6, 12, 16), int16], Tensor[(45), float64], Tensor[(12, 3, 10), int8], Tensor[(45), float64]) {
  %468 = fn (%var_4774: Tensor[(6, 12, 16), float64]) -> (Tensor[(5, 7, 9), bool], Tensor[(2, 15, 13), float32], Tensor[(390), float32], Tensor[(6, 12, 16), float32], Tensor[(6, 12, 16), bool], Tensor[(12, 3, 10), float32], Tensor[(6, 12, 16), float64], Tensor[(6, 12, 16), int16], Tensor[(45), float64], Tensor[(12, 3, 10), int8], Tensor[(45), float64]) {
    %435 = cast(meta[relay.Constant][23] /* ty=Tensor[(390), float32] */, dtype="float32") /* ty=Tensor[(390), float32] */;
    %436 = reshape(%435, newshape=[2, 15, 13]) /* ty=Tensor[(2, 15, 13), float32] */;
    %437 = cast(meta[relay.Constant][24] /* ty=Tensor[(1152), float64] */, dtype="float64") /* ty=Tensor[(1152), float64] */;
    %438 = reshape(%437, newshape=[6, 12, 16]) /* ty=Tensor[(6, 12, 16), float64] */;
    %439 = @func_1830(%438) /* ty=(Tensor[(6, 12, 16), float64],) */;
    %440 = %439.0;
    %441 = cast(%440, dtype="float32") /* ty=Tensor[(6, 12, 16), float32] */;
    %442 = cos(%441) /* ty=Tensor[(6, 12, 16), float32] */;
    %443 = cast(%442, dtype="float32") /* ty=Tensor[(6, 12, 16), float32] */;
    %444 = cast(%var_4774, dtype="bool") /* ty=Tensor[(6, 12, 16), bool] */;
    %445 = shape_of(%440, dtype="int32") /* ty=Tensor[(3), int32] */;
    %446 = cast(%440, dtype="bool") /* ty=Tensor[(6, 12, 16), bool] */;
    %447 = dyn.reshape(%444, %445, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    %448 = @func_4716() /* ty=(Tensor[(12, 3, 10), float32],) */;
    %449 = cast(%442, dtype="float64") /* ty=Tensor[(6, 12, 16), float64] */;
    %450 = cast(meta[relay.Constant][24] /* ty=Tensor[(1152), float64] */, dtype="int16") /* ty=Tensor[(1152), int16] */;
    %451 = shape_of(%442, dtype="int32") /* ty=Tensor[(3), int32] */;
    %452 = cast(%442, dtype="int16") /* ty=Tensor[(6, 12, 16), int16] */;
    %453 = dyn.reshape(%450, %451, newshape=[]) /* ty=Tensor[(?, ?, ?), int16] */;
    %454 = @func_4694() /* ty=(Tensor[(12, 3, 10), float32], Tensor[(45), float64], Tensor[(5, 5, 6), int64], Tensor[(150), int64], Tensor[(12, 3, 10), float32], Tensor[(45), float64]) */;
    %455 = %448.0;
    %456 = cast(%455, dtype="float32") /* ty=Tensor[(12, 3, 10), float32] */;
    %457 = reshape(%456, newshape=[12, 3, 10]) /* ty=Tensor[(12, 3, 10), float32] */;
    %458 = @func_4636() /* ty=(Tensor[(45), float64],) */;
    %459 = @func_1150() /* ty=Tensor[(5, 7, 9), bool] */;
    %460 = @func_4220(%436) /* ty=Tensor[(2, 15, 13), float32] */;
    %461 = sinh(%443) /* ty=Tensor[(6, 12, 16), float32] */;
    %462 = greater_equal(%446, %447) /* ty=Tensor[(6, 12, 16), bool] */;
    %463 = log10(%449) /* ty=Tensor[(6, 12, 16), float64] */;
    %464 = right_shift(%452, %453) /* ty=Tensor[(6, 12, 16), int16] */;
    %465 = %454.5;
    %466 = @func_480(%457) /* ty=Tensor[(12, 3, 10), int8] */;
    %467 = %458.0;
    (%459, %460, meta[relay.Constant][23] /* ty=Tensor[(390), float32] */, %461, %462, %455, %463, %464, %465, %466, %467)
  };
  %468(%var_4842) /* ty=(Tensor[(5, 7, 9), bool], Tensor[(2, 15, 13), float32], Tensor[(390), float32], Tensor[(6, 12, 16), float32], Tensor[(6, 12, 16), bool], Tensor[(12, 3, 10), float32], Tensor[(6, 12, 16), float64], Tensor[(6, 12, 16), int16], Tensor[(45), float64], Tensor[(12, 3, 10), int8], Tensor[(45), float64]) */
}

def @func_5497() -> (Tensor[(12, 3, 10), float32], Tensor[(12, 3, 10), float32]) {
  @func_5495() /* ty=(Tensor[(12, 3, 10), float32], Tensor[(12, 3, 10), float32]) */
}

def @func_1870(%var_1868: Tensor[(5, 5, 6), int64], %var_1869: Tensor[(5, 5, 6), int64]) -> (Tensor[(5, 5, 6), int64],) {
  %474 = fn (%var_1860: Tensor[(5, 5, 6), int64], %var_1861: Tensor[(5, 5, 6), int64]) -> (Tensor[(5, 5, 6), int64],) {
    %469 = cast(%var_1861, dtype="int64") /* ty=Tensor[(5, 5, 6), int64] */;
    %470 = shape_of(%var_1860, dtype="int32") /* ty=Tensor[(3), int32] */;
    %471 = cast(%var_1860, dtype="int64") /* ty=Tensor[(5, 5, 6), int64] */;
    %472 = dyn.reshape(%469, %470, newshape=[]) /* ty=Tensor[(?, ?, ?), int64] */;
    %473 = bitwise_xor(%471, %472) /* ty=Tensor[(5, 5, 6), int64] */;
    (%473,)
  };
  %474(%var_1868, %var_1869) /* ty=(Tensor[(5, 5, 6), int64],) */
}

def @func_5050() -> (Tensor[(12, 3, 10), float32],) {
  @func_5048() /* ty=(Tensor[(12, 3, 10), float32],) */
}

def @func_8750() -> (Tensor[(45), float64], Tensor[(12, 3, 10), float32], Tensor[(12, 3, 10), float32]) {
  %475 = @func_4636() /* ty=(Tensor[(45), float64],) */;
  %476 = @func_6525() /* ty=(Tensor[(12, 3, 10), float32], Tensor[(12, 3, 10), float32]) */;
  %477 = @func_3240() /* ty=(Tensor[(12, 3, 10), float32], Tensor[(12, 3, 10), float32]) */;
  %478 = %475.0;
  %479 = %476.1;
  %480 = %477.0;
  (%478, %479, %480)
}

def @func_1614(%var_1612: Tensor[(4, 8, 16), int32], %var_1613: Tensor[(4, 8, 16), int32]) -> (Tensor[(4, 8, 16), int32], Tensor[(5, 7, 9), bool]) {
  %488 = fn (%var_1587: Tensor[(4, 8, 16), int32], %var_1588: Tensor[(4, 8, 16), int32]) -> (Tensor[(4, 8, 16), int32], Tensor[(5, 7, 9), bool]) {
    %481 = cast(%var_1588, dtype="int32") /* ty=Tensor[(4, 8, 16), int32] */;
    %482 = shape_of(%var_1587, dtype="int32") /* ty=Tensor[(3), int32] */;
    %483 = cast(%var_1587, dtype="int32") /* ty=Tensor[(4, 8, 16), int32] */;
    %484 = dyn.reshape(%481, %482, newshape=[]) /* ty=Tensor[(?, ?, ?), int32] */;
    %485 = @func_1479() /* ty=(Tensor[(12, 3, 10), float32], Tensor[(12, 3, 10), int8], Tensor[(5, 7, 9), bool], Tensor[(12, 3, 10), float32], Tensor[(12, 3, 10), float64], Tensor[(12, 3, 10), float32], Tensor[(12, 3, 10), float32], Tensor[(12, 3, 10), float32]) */;
    %486 = bitwise_xor(%483, %484) /* ty=Tensor[(4, 8, 16), int32] */;
    %487 = %485.2;
    (%486, %487)
  };
  %488(%var_1612, %var_1613) /* ty=(Tensor[(4, 8, 16), int32], Tensor[(5, 7, 9), bool]) */
}

def @func_3279() -> Tensor[(12, 3, 10), float32] {
  %489 = fn () -> Tensor[(12, 3, 10), float32] {
    @func_459() /* ty=Tensor[(12, 3, 10), float32] */
  };
  %489() /* ty=Tensor[(12, 3, 10), float32] */
}

def @func_4619(%var_4596: Tensor[(120), uint32], %var_4605: Tensor[(5, 9), float64]) -> (Tensor[(3, 8, 5), uint32], Tensor[(120), uint32], Tensor[(45, 1), float64], Tensor[(5, 9), float64], Tensor[(315), float64], Tensor[(13, 3, ?), bool]) {
  %490 = cast(%var_4596, dtype="uint32") /* ty=Tensor[(120), uint32] */;
  %491 = reshape(%490, newshape=[3, 8, 5]) /* ty=Tensor[(3, 8, 5), uint32] */;
  %492 = @func_777(%491) /* ty=(Tensor[(3, 8, 5), uint32], Tensor[(3, 8, 5), bool]) */;
  %493 = %492.0;
  %494 = cast(%493, dtype="uint32") /* ty=Tensor[(3, 8, 5), uint32] */;
  %495 = cast(%var_4605, dtype="float64") /* ty=Tensor[(5, 9), float64] */;
  %496 = cast(meta[relay.Constant][25] /* ty=Tensor[(315), float64] */, dtype="float64") /* ty=Tensor[(315), float64] */;
  %497 = reshape(%494, newshape=[120]) /* ty=Tensor[(120), uint32] */;
  %498 = reshape(%495, newshape=[45, 1]) /* ty=Tensor[(45, 1), float64] */;
  %499 = reshape(%496, newshape=[5, 7, 9]) /* ty=Tensor[(5, 7, 9), float64] */;
  %500 = @func_1008(%497, %498, %499) /* ty=(Tensor[(12, 3, 10), float32], Tensor[(3, 8, 5), uint32], Tensor[(120), uint32], Tensor[(45, 1), float64], Tensor[(12, 3, 10), float32], Tensor[(5, 7, 9), int16]) */;
  %501 = cast(meta[relay.Constant][26] /* ty=Tensor[(13, 3, 1), float32] */, dtype="float32") /* ty=Tensor[(13, 3, 1), float32] */;
  %502 = atanh(%501) /* ty=Tensor[(13, 3, 1), float32] */;
  %503 = cast(meta[relay.Constant][26] /* ty=Tensor[(13, 3, 1), float32] */, dtype="bool") /* ty=Tensor[(13, 3, 1), bool] */;
  %504 = shape_of(%502, dtype="int32") /* ty=Tensor[(3), int32] */;
  %505 = cast(%502, dtype="bool") /* ty=Tensor[(13, 3, 1), bool] */;
  %506 = dyn.reshape(%503, %504, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %507 = %500.3;
  %508 = less_equal(%505, %506) /* ty=Tensor[(13, 3, ?), bool] */;
  (%493, %var_4596, %507, %var_4605, meta[relay.Constant][25] /* ty=Tensor[(315), float64] */, %508)
}

def @func_5495() -> (Tensor[(12, 3, 10), float32], Tensor[(12, 3, 10), float32]) {
  %509 = @func_4157() /* ty=(Tensor[(12, 3, 10), float32],) */;
  %510 = @func_3349() /* ty=(Tensor[(12, 3, 10), float32],) */;
  %511 = %509.0;
  %512 = %510.0;
  (%511, %512)
}

def @func_6868() -> (Tensor[(12, 3, 10), float32], Tensor[(12, 2, 15), float32], Tensor[(12, 3, 10), float32], Tensor[(45), float64]) {
  %513 = @func_3576() /* ty=Tensor[(12, 3, 10), float32] */;
  %514 = cast(%513, dtype="float32") /* ty=Tensor[(12, 3, 10), float32] */;
  %515 = reshape(%514, newshape=[12, 2, 15]) /* ty=Tensor[(12, 2, 15), float32] */;
  %516 = @func_4071(%515) /* ty=(Tensor[(12, 2, 15), float32], Tensor[(5, 7, 9), bool]) */;
  %517 = %516.0;
  %518 = @func_5158() /* ty=Tensor[(12, 3, 10), float32] */;
  %519 = @func_5728() /* ty=Tensor[(45), float64] */;
  (%513, %517, %518, %519)
}

def @func_1767(%var_1765: Tensor[(2, 256), int32], %var_1766: Tensor[(2, 256), float32]) -> (Tensor[(12, 3, 10), float32], Tensor[(5, 7, 9), bool], Tensor[(5, 7, 9), bool], Tensor[(2, 256), uint8]) {
  %537 = fn (%var_1708: Tensor[(2, 256), int32], %var_1757: Tensor[(2, 256), float32]) -> (Tensor[(12, 3, 10), float32], Tensor[(5, 7, 9), bool], Tensor[(5, 7, 9), bool], Tensor[(2, 256), uint8]) {
    %520 = @func_1561() /* ty=(Tensor[(12, 3, 10), float32], Tensor[(12, 3, 10), float32], Tensor[(12, 3, 10), float32], Tensor[(12, 3, 10), float32], Tensor[(45), float64]) */;
    %521 = cast(%var_1708, dtype="int32") /* ty=Tensor[(2, 256), int32] */;
    %522 = cast(%var_1708, dtype="int32") /* ty=Tensor[(2, 256), int32] */;
    %523 = reshape(%521, newshape=[4, 8, 16]) /* ty=Tensor[(4, 8, 16), int32] */;
    %524 = reshape(%522, newshape=[4, 8, 16]) /* ty=Tensor[(4, 8, 16), int32] */;
    %525 = @func_1611(%523, %524) /* ty=(Tensor[(4, 8, 16), int32], Tensor[(5, 7, 9), bool]) */;
    %526 = @func_644() /* ty=(Tensor[(5, 7, 9), bool], Tensor[(12, 3, 10), int8], Tensor[(360), float32], Tensor[(5, 7, 9), bool], Tensor[(5, 7, 9), bool], Tensor[(45), float64], Tensor[(12, 3, 10), int8]) */;
    %527 = cast(%var_1708, dtype="float32") /* ty=Tensor[(2, 256), float32] */;
    %528 = acosh(%527) /* ty=Tensor[(2, 256), float32] */;
    %529 = cast(%var_1757, dtype="uint8") /* ty=Tensor[(2, 256), uint8] */;
    %530 = shape_of(%528, dtype="int32") /* ty=Tensor[(2), int32] */;
    %531 = cast(%528, dtype="uint8") /* ty=Tensor[(2, 256), uint8] */;
    %532 = dyn.reshape(%529, %530, newshape=[]) /* ty=Tensor[(?, ?), uint8] */;
    %533 = %520.1;
    %534 = %525.1;
    %535 = %526.4;
    %536 = maximum(%531, %532) /* ty=Tensor[(2, 256), uint8] */;
    (%533, %534, %535, %536)
  };
  %537(%var_1765, %var_1766) /* ty=(Tensor[(12, 3, 10), float32], Tensor[(5, 7, 9), bool], Tensor[(5, 7, 9), bool], Tensor[(2, 256), uint8]) */
}

def @func_7392() -> Tensor[(12, 3, 10), float32] {
  @func_7390() /* ty=Tensor[(12, 3, 10), float32] */
}

def @func_4266() -> (Tensor[(12, 3, 10), float32], Tensor[(12, 3, 10), float32], Tensor[(5, 7, 9), bool]) {
  %538 = @func_4050() /* ty=(Tensor[(12, 3, 10), float32], Tensor[(12, 3, 10), float32]) */;
  %539 = @func_3998() /* ty=(Tensor[(5, 7, 9), bool],) */;
  %540 = %538.1;
  %541 = @func_2884() /* ty=Tensor[(12, 3, 10), float32] */;
  %542 = %539.0;
  (%540, %541, %542)
}

def @func_3029() -> (Tensor[(45), float64], Tensor[(12, 3, 10), uint64], Tensor[(360), float32], Tensor[(5, 7, 9), bool], Tensor[(5, 7, 9), float64], Tensor[(2, 14, 3), float64]) {
  %558 = fn () -> (Tensor[(45), float64], Tensor[(12, 3, 10), uint64], Tensor[(360), float32], Tensor[(5, 7, 9), bool], Tensor[(5, 7, 9), float64], Tensor[(2, 14, 3), float64]) {
    %543 = @func_271() /* ty=(Tensor[(12, 3, 10), float32], Tensor[(5, 7, 9), bool], Tensor[(45), float64]) */;
    %544 = cast(meta[relay.Constant][27] /* ty=Tensor[(360), float32] */, dtype="float32") /* ty=Tensor[(360), float32] */;
    %545 = reshape(%544, newshape=[12, 3, 10]) /* ty=Tensor[(12, 3, 10), float32] */;
    %546 = @func_2149() /* ty=(Tensor[(12, 3, 10), float32], Tensor[(12, 3, 10), float32], Tensor[(5, 7, 9), bool], Tensor[(5, 7, 9), bool], Tensor[(12, 3, 10), int8]) */;
    %547 = @func_2149() /* ty=(Tensor[(12, 3, 10), float32], Tensor[(12, 3, 10), float32], Tensor[(5, 7, 9), bool], Tensor[(5, 7, 9), bool], Tensor[(12, 3, 10), int8]) */;
    %548 = %547.3;
    %549 = cast(%548, dtype="float64") /* ty=Tensor[(5, 7, 9), float64] */;
    %550 = %543.2;
    %551 = cast(%550, dtype="float64") /* ty=Tensor[(45), float64] */;
    %552 = reshape(%551, newshape=[1, 45]) /* ty=Tensor[(1, 45), float64] */;
    %553 = @func_1323(%552) /* ty=(Tensor[(5, 7, 9), float32], Tensor[(5, 7, 9), bool], Tensor[(45, 1), float64], Tensor[(120), uint32], Tensor[(1, 45), float64], Tensor[(5, 7, 9), int8], Tensor[(21, 4), bool], Tensor[(320), float32], Tensor[(2, 14, 3), float64]) */;
    %554 = @func_834(%545) /* ty=Tensor[(12, 3, 10), uint64] */;
    %555 = %546.3;
    %556 = rsqrt(%549) /* ty=Tensor[(5, 7, 9), float64] */;
    %557 = %553.8;
    (%550, %554, meta[relay.Constant][27] /* ty=Tensor[(360), float32] */, %555, %556, %557)
  };
  %558() /* ty=(Tensor[(45), float64], Tensor[(12, 3, 10), uint64], Tensor[(360), float32], Tensor[(5, 7, 9), bool], Tensor[(5, 7, 9), float64], Tensor[(2, 14, 3), float64]) */
}

def @func_3330() -> (Tensor[(5, 7, 9), bool], Tensor[(5, 7, 9), bool]) {
  %559 = @func_2578() /* ty=(Tensor[(5, 7, 9), bool], Tensor[(12, 3, 10), float64]) */;
  %560 = @func_2578() /* ty=(Tensor[(5, 7, 9), bool], Tensor[(12, 3, 10), float64]) */;
  %561 = %559.0;
  %562 = %560.0;
  (%561, %562)
}

def @func_4936() -> (Tensor[(45), float64],) {
  @func_4934() /* ty=(Tensor[(45), float64],) */
}

def @func_2910() -> (Tensor[(5, 7, 9), bool],) {
  @func_2908() /* ty=(Tensor[(5, 7, 9), bool],) */
}

def @func_9010() -> Tensor[(12, 3, 10), float32] {
  @func_9008() /* ty=Tensor[(12, 3, 10), float32] */
}

def @func_4718() -> (Tensor[(12, 3, 10), float32],) {
  @func_4716() /* ty=(Tensor[(12, 3, 10), float32],) */
}

def @func_8160(%var_8159: Tensor[(45), float64]) -> (Tensor[(630), uint64], Tensor[(12, 3, 10), float32], Tensor[(45), uint32], Tensor[(45), float64], Tensor[(12, 3, 10), float32], Tensor[(12, 3, 10), float32]) {
  %575 = fn (%var_8130: Tensor[(45), float64]) -> (Tensor[(630), uint64], Tensor[(12, 3, 10), float32], Tensor[(45), uint32], Tensor[(45), float64], Tensor[(12, 3, 10), float32], Tensor[(12, 3, 10), float32]) {
    %563 = @func_6332() /* ty=(Tensor[(12, 3, 10), float32], Tensor[(12, 3, 10), float32], Tensor[(12, 3, 10), float32], Tensor[(630), uint64], Tensor[(45), float64]) */;
    %564 = @func_583() /* ty=(Tensor[(12, 3, 10), float32],) */;
    %565 = cast(%var_8130, dtype="float64") /* ty=Tensor[(45), float64] */;
    %566 = reshape(%565, newshape=[45]) /* ty=Tensor[(45), float64] */;
    %567 = @func_2759(%566) /* ty=(Tensor[(45), uint32], Tensor[(12, 3, 10), float32]) */;
    %568 = @func_7304() /* ty=(Tensor[(12, 3, 10), float32], Tensor[(5, 7, 9), bool]) */;
    %569 = @func_5799() /* ty=(Tensor[(12, 3, 10), float32],) */;
    %570 = %563.3;
    %571 = %564.0;
    %572 = %567.0;
    %573 = %568.0;
    %574 = %569.0;
    (%570, %571, %572, %var_8130, %573, %574)
  };
  %575(%var_8159) /* ty=(Tensor[(630), uint64], Tensor[(12, 3, 10), float32], Tensor[(45), uint32], Tensor[(45), float64], Tensor[(12, 3, 10), float32], Tensor[(12, 3, 10), float32]) */
}

def @func_7707() -> Tensor[(12, 3, 10), float32] {
  @func_7705() /* ty=Tensor[(12, 3, 10), float32] */
}

def @func_483(%var_481: Tensor[(12, 3, 10), float32]) -> Tensor[(12, 3, 10), int8] {
  @func_480(%var_481) /* ty=Tensor[(12, 3, 10), int8] */
}

def @func_272() -> (Tensor[(12, 3, 10), float32], Tensor[(5, 7, 9), bool], Tensor[(45), float64]) {
  %581 = fn () -> (Tensor[(12, 3, 10), float32], Tensor[(5, 7, 9), bool], Tensor[(45), float64]) {
    %576 = cast(meta[relay.Constant][28] /* ty=Tensor[(12, 3, 10), float32] */, dtype="float32") /* ty=Tensor[(12, 3, 10), float32] */;
    %577 = cast(meta[relay.Constant][29] /* ty=Tensor[(45), float64] */, dtype="float64") /* ty=Tensor[(45), float64] */;
    %578 = reshape(%577, newshape=[5, 1, 9]) /* ty=Tensor[(5, 1, 9), float64] */;
    %579 = atanh(%576) /* ty=Tensor[(12, 3, 10), float32] */;
    %580 = @func_176(%578) /* ty=Tensor[(5, 7, 9), bool] */;
    (%579, %580, meta[relay.Constant][29] /* ty=Tensor[(45), float64] */)
  };
  %581() /* ty=(Tensor[(12, 3, 10), float32], Tensor[(5, 7, 9), bool], Tensor[(45), float64]) */
}

def @func_7908(%var_7905: Tensor[(8, 9, 2), float64], %var_7906: Tensor[(8, 9, 2), float64], %var_7907: Tensor[(8, 9, 2), bool]) -> (Tensor[(8, 9, 2), float32], Tensor[(8, 9, 2), float64], Tensor[(8, 9, 2), bool], Tensor[(8, 9, 2), uint32], Tensor[(12, 3, 10), float32], Tensor[(8, 9, 2), float64], Tensor[(4, 8, 10), float32], Tensor[(320), float32], Tensor[(12, 3, 10), float32]) {
  @func_7903(%var_7905, %var_7906, %var_7907) /* ty=(Tensor[(8, 9, 2), float32], Tensor[(8, 9, 2), float64], Tensor[(8, 9, 2), bool], Tensor[(8, 9, 2), uint32], Tensor[(12, 3, 10), float32], Tensor[(8, 9, 2), float64], Tensor[(4, 8, 10), float32], Tensor[(320), float32], Tensor[(12, 3, 10), float32]) */
}

def @func_8405() -> (Tensor[(16, 16, 16), float32],) {
  %584 = fn () -> (Tensor[(16, 16, 16), float32],) {
    %582 = cast(meta[relay.Constant][30] /* ty=Tensor[(16, 16, 16), float32] */, dtype="float32") /* ty=Tensor[(16, 16, 16), float32] */;
    %583 = log10(%582) /* ty=Tensor[(16, 16, 16), float32] */;
    (%583,)
  };
  %584() /* ty=(Tensor[(16, 16, 16), float32],) */
}

def @func_1481() -> (Tensor[(12, 3, 10), float32], Tensor[(12, 3, 10), int8], Tensor[(5, 7, 9), bool], Tensor[(12, 3, 10), float32], Tensor[(12, 3, 10), float64], Tensor[(12, 3, 10), float32], Tensor[(12, 3, 10), float32], Tensor[(12, 3, 10), float32]) {
  @func_1479() /* ty=(Tensor[(12, 3, 10), float32], Tensor[(12, 3, 10), int8], Tensor[(5, 7, 9), bool], Tensor[(12, 3, 10), float32], Tensor[(12, 3, 10), float64], Tensor[(12, 3, 10), float32], Tensor[(12, 3, 10), float32], Tensor[(12, 3, 10), float32]) */
}

def @func_8175() -> (Tensor[(5, 7, 9), float32], Tensor[(5, 7, 9), bool], Tensor[(45), float64]) {
  %585 = @func_7346() /* ty=(Tensor[(5, 7, 9), float32],) */;
  %586 = cast(meta[relay.Constant][31] /* ty=Tensor[(45), float64] */, dtype="float64") /* ty=Tensor[(45), float64] */;
  %587 = reshape(%586, newshape=[5, 1, 9]) /* ty=Tensor[(5, 1, 9), float64] */;
  %588 = %585.0;
  %589 = @func_176(%587) /* ty=Tensor[(5, 7, 9), bool] */;
  (%588, %589, meta[relay.Constant][31] /* ty=Tensor[(45), float64] */)
}

def @func_3883() -> (Tensor[(12, 3, 10), float32], Tensor[(12, 3, 10), float32]) {
  %593 = fn () -> (Tensor[(12, 3, 10), float32], Tensor[(12, 3, 10), float32]) {
    %590 = @func_3717() /* ty=(Tensor[(5, 7, 9), float32], Tensor[(12, 3, 10), float32]) */;
    %591 = %590.1;
    %592 = @func_791() /* ty=Tensor[(12, 3, 10), float32] */;
    (%591, %592)
  };
  %593() /* ty=(Tensor[(12, 3, 10), float32], Tensor[(12, 3, 10), float32]) */
}

def @func_3413() -> (Tensor[(45), float64],) {
  %594 = @func_2833() /* ty=Tensor[(45), float64] */;
  (%594,)
}

def @func_7520() -> Tensor[(12, 3, 10), float32] {
  %596 = fn () -> Tensor[(12, 3, 10), float32] {
    %595 = @func_6458() /* ty=(Tensor[(12, 3, 10), float32], Tensor[(12, 3, 10), float32]) */;
    %595.0
  };
  %596() /* ty=Tensor[(12, 3, 10), float32] */
}

def @func_7305() -> (Tensor[(12, 3, 10), float32], Tensor[(5, 7, 9), bool]) {
  %600 = fn () -> (Tensor[(12, 3, 10), float32], Tensor[(5, 7, 9), bool]) {
    %597 = @func_2149() /* ty=(Tensor[(12, 3, 10), float32], Tensor[(12, 3, 10), float32], Tensor[(5, 7, 9), bool], Tensor[(5, 7, 9), bool], Tensor[(12, 3, 10), int8]) */;
    %598 = %597.1;
    %599 = @func_6072() /* ty=Tensor[(5, 7, 9), bool] */;
    (%598, %599)
  };
  %600() /* ty=(Tensor[(12, 3, 10), float32], Tensor[(5, 7, 9), bool]) */
}

def @func_9066() -> (Tensor[(45), float64], Tensor[(12, 3, 10), float32]) {
  %601 = @func_3532() /* ty=Tensor[(45), float64] */;
  %602 = cast(%601, dtype="float64") /* ty=Tensor[(45), float64] */;
  %603 = atan(%602) /* ty=Tensor[(45), float64] */;
  %604 = @func_5875() /* ty=Tensor[(12, 3, 10), float32] */;
  (%603, %604)
}

def @func_480(%var_464: Tensor[(12, 3, 10), float32]) -> Tensor[(12, 3, 10), int8] {
  %605 = @func_459() /* ty=Tensor[(12, 3, 10), float32] */;
  %606 = cast(%var_464, dtype="int8") /* ty=Tensor[(12, 3, 10), int8] */;
  %607 = shape_of(%605, dtype="int32") /* ty=Tensor[(3), int32] */;
  %608 = cast(%605, dtype="int8") /* ty=Tensor[(12, 3, 10), int8] */;
  %609 = dyn.reshape(%606, %607, newshape=[]) /* ty=Tensor[(?, ?, ?), int8] */;
  multiply(%608, %609) /* ty=Tensor[(12, 3, 10), int8] */
}

def @func_5799() -> (Tensor[(12, 3, 10), float32],) {
  %610 = @func_459() /* ty=Tensor[(12, 3, 10), float32] */;
  (%610,)
}

def @func_6333() -> (Tensor[(12, 3, 10), float32], Tensor[(12, 3, 10), float32], Tensor[(12, 3, 10), float32], Tensor[(630), uint64], Tensor[(45), float64]) {
  %620 = fn () -> (Tensor[(12, 3, 10), float32], Tensor[(12, 3, 10), float32], Tensor[(12, 3, 10), float32], Tensor[(630), uint64], Tensor[(45), float64]) {
    %611 = @func_4157() /* ty=(Tensor[(12, 3, 10), float32],) */;
    %612 = cast(meta[relay.Constant][32] /* ty=Tensor[(630), uint64] */, dtype="uint64") /* ty=Tensor[(630), uint64] */;
    %613 = cast(meta[relay.Constant][33] /* ty=Tensor[(45), float64] */, dtype="float64") /* ty=Tensor[(45), float64] */;
    %614 = reshape(%612, newshape=[5, 14, 9]) /* ty=Tensor[(5, 14, 9), uint64] */;
    %615 = reshape(%613, newshape=[45]) /* ty=Tensor[(45), float64] */;
    %616 = @func_3525(%614, %615) /* ty=(Tensor[(12, 3, 10), float32], Tensor[(5, 7, 9), bool], Tensor[(45), float64], Tensor[(12, 3, 10), float32], Tensor[(5, 14, 9), int64], Tensor[(12, 3, 10), float32]) */;
    %617 = @func_3576() /* ty=Tensor[(12, 3, 10), float32] */;
    %618 = %611.0;
    %619 = %616.0;
    (%617, %618, %619, meta[relay.Constant][32] /* ty=Tensor[(630), uint64] */, meta[relay.Constant][33] /* ty=Tensor[(45), float64] */)
  };
  %620() /* ty=(Tensor[(12, 3, 10), float32], Tensor[(12, 3, 10), float32], Tensor[(12, 3, 10), float32], Tensor[(630), uint64], Tensor[(45), float64]) */
}

def @func_8579(%var_8578: Tensor[(360), float32]) -> (Tensor[(5, 7, 9), bool], Tensor[(12, 3, 10), bool], Tensor[(360), float32]) {
  %626 = fn (%var_8571: Tensor[(360), float32]) -> (Tensor[(5, 7, 9), bool], Tensor[(12, 3, 10), bool], Tensor[(360), float32]) {
    %621 = @func_5147() /* ty=(Tensor[(12, 3, 10), float32], Tensor[(5, 7, 9), bool]) */;
    %622 = cast(%var_8571, dtype="float32") /* ty=Tensor[(360), float32] */;
    %623 = reshape(%622, newshape=[12, 3, 10]) /* ty=Tensor[(12, 3, 10), float32] */;
    %624 = %621.1;
    %625 = @func_3158(%623) /* ty=Tensor[(12, 3, 10), bool] */;
    (%624, %625, %var_8571)
  };
  %626(%var_8578) /* ty=(Tensor[(5, 7, 9), bool], Tensor[(12, 3, 10), bool], Tensor[(360), float32]) */
}

def @func_3940() -> (Tensor[(12, 3, 10), float32], Tensor[(45), float64]) {
  @func_3938() /* ty=(Tensor[(12, 3, 10), float32], Tensor[(45), float64]) */
}

def @func_5896() -> (Tensor[(5, 5, 6), int64],) {
  %629 = fn () -> (Tensor[(5, 5, 6), int64],) {
    %627 = @func_4694() /* ty=(Tensor[(12, 3, 10), float32], Tensor[(45), float64], Tensor[(5, 5, 6), int64], Tensor[(150), int64], Tensor[(12, 3, 10), float32], Tensor[(45), float64]) */;
    %628 = %627.2;
    (%628,)
  };
  %629() /* ty=(Tensor[(5, 5, 6), int64],) */
}

def @func_8838(%var_8836: Tensor[(9, 13, 3), int32]) -> (Tensor[(9, 13, 3), bool], Tensor[(5, 7, 9), bool], Tensor[(10, 10, 15), float64], Tensor[(12, 3, 10), float32], Tensor[(286), float64]) {
  @func_8835(%var_8836) /* ty=(Tensor[(9, 13, 3), bool], Tensor[(5, 7, 9), bool], Tensor[(10, 10, 15), float64], Tensor[(12, 3, 10), float32], Tensor[(286), float64]) */
}

def @func_6932() -> (Tensor[(12, 3, 10), float32],) {
  @func_6930() /* ty=(Tensor[(12, 3, 10), float32],) */
}

def @func_7811(%var_7810: Tensor[(4, 780), int32]) -> (Tensor[(45), float64], Tensor[(4, 780), float32]) {
  %642 = fn (%var_7785: Tensor[(4, 780), int32]) -> (Tensor[(45), float64], Tensor[(4, 780), float32]) {
    %630 = cast(%var_7785, dtype="int32") /* ty=Tensor[(4, 780), int32] */;
    %631 = cast(%var_7785, dtype="int32") /* ty=Tensor[(4, 780), int32] */;
    %632 = reshape(%630, newshape=[13, 16, 15]) /* ty=Tensor[(13, 16, 15), int32] */;
    %633 = reshape(%631, newshape=[13, 16, 15]) /* ty=Tensor[(13, 16, 15), int32] */;
    %634 = @func_5943(%632, %633) /* ty=(Tensor[(13, 16, 15), bool], Tensor[(13, 16, 15), float32]) */;
    %635 = %634.1;
    %636 = cast(%635, dtype="float32") /* ty=Tensor[(13, 16, 15), float32] */;
    %637 = shape_of(%var_7785, dtype="int32") /* ty=Tensor[(2), int32] */;
    %638 = cast(%var_7785, dtype="float32") /* ty=Tensor[(4, 780), float32] */;
    %639 = dyn.reshape(%636, %637, newshape=[]) /* ty=Tensor[(?, ?), float32] */;
    %640 = @func_3532() /* ty=Tensor[(45), float64] */;
    %641 = power(%638, %639) /* ty=Tensor[(4, 780), float32] */;
    (%640, %641)
  };
  %642(%var_7810) /* ty=(Tensor[(45), float64], Tensor[(4, 780), float32]) */
}

def @func_1479() -> (Tensor[(12, 3, 10), float32], Tensor[(12, 3, 10), int8], Tensor[(5, 7, 9), bool], Tensor[(12, 3, 10), float32], Tensor[(12, 3, 10), float64], Tensor[(12, 3, 10), float32], Tensor[(12, 3, 10), float32], Tensor[(12, 3, 10), float32]) {
  %643 = @func_331() /* ty=(Tensor[(12, 3, 10), float32],) */;
  %644 = %643.0;
  %645 = cast(%644, dtype="float32") /* ty=Tensor[(12, 3, 10), float32] */;
  %646 = reshape(%645, newshape=[12, 3, 10]) /* ty=Tensor[(12, 3, 10), float32] */;
  %647 = @func_644() /* ty=(Tensor[(5, 7, 9), bool], Tensor[(12, 3, 10), int8], Tensor[(360), float32], Tensor[(5, 7, 9), bool], Tensor[(5, 7, 9), bool], Tensor[(45), float64], Tensor[(12, 3, 10), int8]) */;
  %648 = @func_721() /* ty=(Tensor[(12, 3, 10), float32],) */;
  %649 = @func_331() /* ty=(Tensor[(12, 3, 10), float32],) */;
  %650 = %649.0;
  %651 = cast(%650, dtype="float64") /* ty=Tensor[(12, 3, 10), float64] */;
  %652 = @func_480(%646) /* ty=Tensor[(12, 3, 10), int8] */;
  %653 = %647.4;
  %654 = %648.0;
  %655 = sigmoid(%651) /* ty=Tensor[(12, 3, 10), float64] */;
  %656 = @func_419() /* ty=Tensor[(12, 3, 10), float32] */;
  %657 = @func_459() /* ty=Tensor[(12, 3, 10), float32] */;
  %658 = @func_807() /* ty=Tensor[(12, 3, 10), float32] */;
  (%644, %652, %653, %654, %655, %656, %657, %658)
}

def @func_1562() -> (Tensor[(12, 3, 10), float32], Tensor[(12, 3, 10), float32], Tensor[(12, 3, 10), float32], Tensor[(12, 3, 10), float32], Tensor[(45), float64]) {
  %667 = fn () -> (Tensor[(12, 3, 10), float32], Tensor[(12, 3, 10), float32], Tensor[(12, 3, 10), float32], Tensor[(12, 3, 10), float32], Tensor[(45), float64]) {
    %659 = @func_331() /* ty=(Tensor[(12, 3, 10), float32],) */;
    %660 = @func_1137() /* ty=(Tensor[(12, 3, 10), float32],) */;
    %661 = @func_271() /* ty=(Tensor[(12, 3, 10), float32], Tensor[(5, 7, 9), bool], Tensor[(45), float64]) */;
    %662 = %659.0;
    %663 = @func_791() /* ty=Tensor[(12, 3, 10), float32] */;
    %664 = %660.0;
    %665 = @func_739() /* ty=Tensor[(12, 3, 10), float32] */;
    %666 = %661.2;
    (%662, %663, %664, %665, %666)
  };
  %667() /* ty=(Tensor[(12, 3, 10), float32], Tensor[(12, 3, 10), float32], Tensor[(12, 3, 10), float32], Tensor[(12, 3, 10), float32], Tensor[(45), float64]) */
}

def @func_1184() -> (Tensor[(5, 7, 9), bool],) {
  @func_1182() /* ty=(Tensor[(5, 7, 9), bool],) */
}

def @func_4532() -> (Tensor[(12, 3, 10), float32], Tensor[(5, 7, 9), bool], Tensor[(12, 3, 10), float32]) {
  %673 = fn () -> (Tensor[(12, 3, 10), float32], Tensor[(5, 7, 9), bool], Tensor[(12, 3, 10), float32]) {
    %668 = @func_1182() /* ty=(Tensor[(5, 7, 9), bool],) */;
    %669 = @func_1779() /* ty=(Tensor[(12, 3, 10), float32],) */;
    %670 = @func_791() /* ty=Tensor[(12, 3, 10), float32] */;
    %671 = %668.0;
    %672 = %669.0;
    (%670, %671, %672)
  };
  %673() /* ty=(Tensor[(12, 3, 10), float32], Tensor[(5, 7, 9), bool], Tensor[(12, 3, 10), float32]) */
}

def @func_3651(%var_3646: Tensor[(320), float32]) -> (Tensor[(360), float32], Tensor[(12, 3, 10), float64], Tensor[(2, 14, 3), bool], Tensor[(84), bool], Tensor[(320), float32], Tensor[(12, 3, 10), float32]) {
  %674 = @func_3028() /* ty=(Tensor[(45), float64], Tensor[(12, 3, 10), uint64], Tensor[(360), float32], Tensor[(5, 7, 9), bool], Tensor[(5, 7, 9), float64], Tensor[(2, 14, 3), float64]) */;
  %675 = @func_3278() /* ty=Tensor[(12, 3, 10), float32] */;
  %676 = cast(%675, dtype="float64") /* ty=Tensor[(12, 3, 10), float64] */;
  %677 = cast(meta[relay.Constant][34] /* ty=Tensor[(84), bool] */, dtype="bool") /* ty=Tensor[(84), bool] */;
  %678 = cast(meta[relay.Constant][34] /* ty=Tensor[(84), bool] */, dtype="bool") /* ty=Tensor[(84), bool] */;
  %679 = cast(%var_3646, dtype="float32") /* ty=Tensor[(320), float32] */;
  %680 = reshape(%677, newshape=[2, 14, 3]) /* ty=Tensor[(2, 14, 3), bool] */;
  %681 = reshape(%678, newshape=[2, 14, 3]) /* ty=Tensor[(2, 14, 3), bool] */;
  %682 = reshape(%679, newshape=[320]) /* ty=Tensor[(320), float32] */;
  %683 = @func_541(%680, %681, %682) /* ty=(Tensor[(2, 14, 3), bool], Tensor[(4, 8, 10), float32], Tensor[(320), float32], Tensor[(12, 3, 10), float32]) */;
  %684 = cast(%675, dtype="float64") /* ty=Tensor[(12, 3, 10), float64] */;
  %685 = reshape(%684, newshape=[12, 3, 10]) /* ty=Tensor[(12, 3, 10), float64] */;
  %686 = @func_892(%685) /* ty=(Tensor[(12, 3, 10), int32], Tensor[(12, 3, 10), float32]) */;
  %687 = %674.2;
  %688 = atan(%676) /* ty=Tensor[(12, 3, 10), float64] */;
  %689 = %683.0;
  %690 = %686.1;
  (%687, %688, %689, meta[relay.Constant][34] /* ty=Tensor[(84), bool] */, %var_3646, %690)
}

def @func_807() -> Tensor[(12, 3, 10), float32] {
  %691 = @func_721() /* ty=(Tensor[(12, 3, 10), float32],) */;
  %691.0
}

def @func_2151() -> (Tensor[(12, 3, 10), float32], Tensor[(12, 3, 10), float32], Tensor[(5, 7, 9), bool], Tensor[(5, 7, 9), bool], Tensor[(12, 3, 10), int8]) {
  @func_2149() /* ty=(Tensor[(12, 3, 10), float32], Tensor[(12, 3, 10), float32], Tensor[(5, 7, 9), bool], Tensor[(5, 7, 9), bool], Tensor[(12, 3, 10), int8]) */
}

def @func_8351() -> (Tensor[(12, 3, 10), float32],) {
  @func_8349() /* ty=(Tensor[(12, 3, 10), float32],) */
}

def @func_6176() -> Tensor[(5, 7, 9), bool] {
  %692 = @func_2578() /* ty=(Tensor[(5, 7, 9), bool], Tensor[(12, 3, 10), float64]) */;
  %692.0
}

def @func_4134() -> Tensor[(12, 3, 10), float32] {
  %694 = fn () -> Tensor[(12, 3, 10), float32] {
    %693 = @func_4050() /* ty=(Tensor[(12, 3, 10), float32], Tensor[(12, 3, 10), float32]) */;
    %693.1
  };
  %694() /* ty=Tensor[(12, 3, 10), float32] */
}

def @func_5689() -> Tensor[(12, 3, 10), float32] {
  @func_5687() /* ty=Tensor[(12, 3, 10), float32] */
}

def @func_7678() -> (Tensor[(12, 3, 10), float32],) {
  %696 = fn () -> (Tensor[(12, 3, 10), float32],) {
    %695 = @func_5158() /* ty=Tensor[(12, 3, 10), float32] */;
    (%695,)
  };
  %696() /* ty=(Tensor[(12, 3, 10), float32],) */
}

def @func_5140() -> (Tensor[(12, 3, 10), float32], Tensor[(12, 3, 10), float32], Tensor[(10, 10, 15), float64], Tensor[(750, 2), float64], Tensor[(120), uint32]) {
  %705 = fn () -> (Tensor[(12, 3, 10), float32], Tensor[(12, 3, 10), float32], Tensor[(10, 10, 15), float64], Tensor[(750, 2), float64], Tensor[(120), uint32]) {
    %697 = cast(meta[relay.Constant][35] /* ty=Tensor[(750, 2), float64] */, dtype="float64") /* ty=Tensor[(750, 2), float64] */;
    %698 = cast(meta[relay.Constant][36] /* ty=Tensor[(120), uint32] */, dtype="uint32") /* ty=Tensor[(120), uint32] */;
    %699 = reshape(%697, newshape=[10, 10, 15]) /* ty=Tensor[(10, 10, 15), float64] */;
    %700 = reshape(%698, newshape=[120]) /* ty=Tensor[(120), uint32] */;
    %701 = @func_1372(%699, %700) /* ty=(Tensor[(10, 10, 15), float64], Tensor[(3, 8, 5), uint32], Tensor[(120), uint32]) */;
    %702 = @func_3576() /* ty=Tensor[(12, 3, 10), float32] */;
    %703 = @func_739() /* ty=Tensor[(12, 3, 10), float32] */;
    %704 = %701.0;
    (%702, %703, %704, meta[relay.Constant][35] /* ty=Tensor[(750, 2), float64] */, meta[relay.Constant][36] /* ty=Tensor[(120), uint32] */)
  };
  %705() /* ty=(Tensor[(12, 3, 10), float32], Tensor[(12, 3, 10), float32], Tensor[(10, 10, 15), float64], Tensor[(750, 2), float64], Tensor[(120), uint32]) */
}

def @func_4222(%var_4221: Tensor[(2, 15, 13), float32]) -> Tensor[(2, 15, 13), float32] {
  %708 = fn (%var_4213: Tensor[(2, 15, 13), float32]) -> Tensor[(2, 15, 13), float32] {
    %706 = cast(4.21898f /* ty=float32 */, dtype="float32") /* ty=float32 */;
    %707 = cast(%var_4213, dtype="float32") /* ty=Tensor[(2, 15, 13), float32] */;
    power(%706, %707) /* ty=Tensor[(2, 15, 13), float32] */
  };
  %708(%var_4221) /* ty=Tensor[(2, 15, 13), float32] */
}

def @func_5757() -> (Tensor[(5, 7, 9), bool],) {
  @func_5755() /* ty=(Tensor[(5, 7, 9), bool],) */
}

def @func_6650() -> (Tensor[(12, 3, 10), float32],) {
  @func_6648() /* ty=(Tensor[(12, 3, 10), float32],) */
}

def @func_7390() -> Tensor[(12, 3, 10), float32] {
  @func_5687() /* ty=Tensor[(12, 3, 10), float32] */
}

def @func_7966() -> (Tensor[(5, 7, 9), bool], Tensor[(12, 3, 10), float32]) {
  @func_7964() /* ty=(Tensor[(5, 7, 9), bool], Tensor[(12, 3, 10), float32]) */
}

def @func_5000(%var_4994: Tensor[(13, 4, 11), float32]) -> Tensor[(13, 4, 11), float32] {
  %709 = cast(%var_4994, dtype="float32") /* ty=Tensor[(13, 4, 11), float32] */;
  asin(%709) /* ty=Tensor[(13, 4, 11), float32] */
}

def @func_8058() -> (Tensor[(45), float64],) {
  %712 = fn () -> (Tensor[(45), float64],) {
    %710 = @func_4636() /* ty=(Tensor[(45), float64],) */;
    %711 = %710.0;
    (%711,)
  };
  %712() /* ty=(Tensor[(45), float64],) */
}

def @func_2835() -> Tensor[(45), float64] {
  @func_2833() /* ty=Tensor[(45), float64] */
}

def @func_779(%var_778: Tensor[(3, 8, 5), uint32]) -> (Tensor[(3, 8, 5), uint32], Tensor[(3, 8, 5), bool]) {
  %723 = fn (%var_760: Tensor[(3, 8, 5), uint32]) -> (Tensor[(3, 8, 5), uint32], Tensor[(3, 8, 5), bool]) {
    %713 = cast(%var_760, dtype="uint32") /* ty=Tensor[(3, 8, 5), uint32] */;
    %714 = shape_of(meta[relay.Constant][37] /* ty=Tensor[(3, 8, 5), uint32] */, dtype="int32") /* ty=Tensor[(3), int32] */;
    %715 = cast(meta[relay.Constant][37] /* ty=Tensor[(3, 8, 5), uint32] */, dtype="uint32") /* ty=Tensor[(3, 8, 5), uint32] */;
    %716 = dyn.reshape(%713, %714, newshape=[]) /* ty=Tensor[(?, ?, ?), uint32] */;
    %717 = cast(meta[relay.Constant][37] /* ty=Tensor[(3, 8, 5), uint32] */, dtype="bool") /* ty=Tensor[(3, 8, 5), bool] */;
    %718 = shape_of(%var_760, dtype="int32") /* ty=Tensor[(3), int32] */;
    %719 = cast(%var_760, dtype="bool") /* ty=Tensor[(3, 8, 5), bool] */;
    %720 = dyn.reshape(%717, %718, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    %721 = multiply(%715, %716) /* ty=Tensor[(3, 8, 5), uint32] */;
    %722 = not_equal(%719, %720) /* ty=Tensor[(3, 8, 5), bool] */;
    (%721, %722)
  };
  %723(%var_778) /* ty=(Tensor[(3, 8, 5), uint32], Tensor[(3, 8, 5), bool]) */
}

def @func_2467(%var_2465: Tensor[(1500), float64], %var_2466: Tensor[(320), float32]) -> (Tensor[(10, 10, 5), uint8], Tensor[(10, 10, 15), float64], Tensor[(1500), float64], Tensor[(120), uint32], Tensor[(2, 14, 3), bool], Tensor[(84), bool], Tensor[(320), float32], Tensor[(10, 10, 5), float64]) {
  @func_2463(%var_2465, %var_2466) /* ty=(Tensor[(10, 10, 5), uint8], Tensor[(10, 10, 15), float64], Tensor[(1500), float64], Tensor[(120), uint32], Tensor[(2, 14, 3), bool], Tensor[(84), bool], Tensor[(320), float32], Tensor[(10, 10, 5), float64]) */
}

def @func_2579() -> (Tensor[(5, 7, 9), bool], Tensor[(12, 3, 10), float64]) {
  %729 = fn () -> (Tensor[(5, 7, 9), bool], Tensor[(12, 3, 10), float64]) {
    %724 = @func_1849() /* ty=(Tensor[(12, 3, 10), float32],) */;
    %725 = %724.0;
    %726 = cast(%725, dtype="float64") /* ty=Tensor[(12, 3, 10), float64] */;
    %727 = @func_1150() /* ty=Tensor[(5, 7, 9), bool] */;
    %728 = log10(%726) /* ty=Tensor[(12, 3, 10), float64] */;
    (%727, %728)
  };
  %729() /* ty=(Tensor[(5, 7, 9), bool], Tensor[(12, 3, 10), float64]) */
}

def @func_2908() -> (Tensor[(5, 7, 9), bool],) {
  %730 = @func_271() /* ty=(Tensor[(12, 3, 10), float32], Tensor[(5, 7, 9), bool], Tensor[(45), float64]) */;
  %731 = %730.1;
  (%731,)
}

def @func_4716() -> (Tensor[(12, 3, 10), float32],) {
  %732 = @func_1779() /* ty=(Tensor[(12, 3, 10), float32],) */;
  %733 = %732.0;
  (%733,)
}

def @func_9268() -> (Tensor[(16, 16, 16), float32], Tensor[(5, 9), float64]) {
  %734 = @func_8404() /* ty=(Tensor[(16, 16, 16), float32],) */;
  %735 = @func_9122() /* ty=(Tensor[(16, 16, 16), float32], Tensor[(12, 3, 10), int8], Tensor[(45), uint32], Tensor[(5, 9), float64], Tensor[(12, 3, 10), float32]) */;
  %736 = %734.0;
  %737 = %735.3;
  (%736, %737)
}

def @func_311(%var_309: Tensor[(4, 8, 10), float32], %var_310: Tensor[(4, 8, 10), float32]) -> Tensor[(4, 8, 10), float32] {
  %742 = fn (%var_301: Tensor[(4, 8, 10), float32], %var_302: Tensor[(4, 8, 10), float32]) -> Tensor[(4, 8, 10), float32] {
    %738 = cast(%var_302, dtype="float32") /* ty=Tensor[(4, 8, 10), float32] */;
    %739 = shape_of(%var_301, dtype="int32") /* ty=Tensor[(3), int32] */;
    %740 = cast(%var_301, dtype="float32") /* ty=Tensor[(4, 8, 10), float32] */;
    %741 = dyn.reshape(%738, %739, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
    power(%740, %741) /* ty=Tensor[(4, 8, 10), float32] */
  };
  %742(%var_309, %var_310) /* ty=Tensor[(4, 8, 10), float32] */
}

def @func_2797() -> Tensor[(45), float64] {
  %744 = fn () -> Tensor[(45), float64] {
    %743 = @func_385() /* ty=(Tensor[(45), float64], Tensor[(5, 7, 9), bool]) */;
    %743.0
  };
  %744() /* ty=Tensor[(45), float64] */
}

def @func_6930() -> (Tensor[(12, 3, 10), float32],) {
  %745 = @func_419() /* ty=Tensor[(12, 3, 10), float32] */;
  (%745,)
}

def @func_8177() -> (Tensor[(5, 7, 9), float32], Tensor[(5, 7, 9), bool], Tensor[(45), float64]) {
  @func_8175() /* ty=(Tensor[(5, 7, 9), float32], Tensor[(5, 7, 9), bool], Tensor[(45), float64]) */
}

def @func_8882() -> (Tensor[(12, 3, 10), float32], Tensor[(12, 3, 10), float32], Tensor[(45), float64]) {
  %751 = fn () -> (Tensor[(12, 3, 10), float32], Tensor[(12, 3, 10), float32], Tensor[(45), float64]) {
    %746 = @func_6458() /* ty=(Tensor[(12, 3, 10), float32], Tensor[(12, 3, 10), float32]) */;
    %747 = @func_6284() /* ty=(Tensor[(12, 3, 10), float32], Tensor[(5, 7, 9), bool]) */;
    %748 = %746.0;
    %749 = %747.0;
    %750 = @func_1658() /* ty=Tensor[(45), float64] */;
    (%748, %749, %750)
  };
  %751() /* ty=(Tensor[(12, 3, 10), float32], Tensor[(12, 3, 10), float32], Tensor[(45), float64]) */
}

def @func_1376(%var_1374: Tensor[(10, 10, 15), float64], %var_1375: Tensor[(120), uint32]) -> (Tensor[(10, 10, 15), float64], Tensor[(3, 8, 5), uint32], Tensor[(120), uint32]) {
  @func_1372(%var_1374, %var_1375) /* ty=(Tensor[(10, 10, 15), float64], Tensor[(3, 8, 5), uint32], Tensor[(120), uint32]) */
}

def @func_9142() -> (Tensor[(5, 5, 6), float64],) {
  %752 = @func_8776() /* ty=(Tensor[(5, 5, 6), float64],) */;
  %753 = %752.0;
  (%753,)
}

def @func_4120() -> (Tensor[(5, 7, 9), bool],) {
  %756 = fn () -> (Tensor[(5, 7, 9), bool],) {
    %754 = @func_1182() /* ty=(Tensor[(5, 7, 9), bool],) */;
    %755 = %754.0;
    (%755,)
  };
  %756() /* ty=(Tensor[(5, 7, 9), bool],) */
}

def @func_6091() -> (Tensor[(12, 3, 10), float32], Tensor[(5, 7, 9), bool]) {
  %757 = @func_5495() /* ty=(Tensor[(12, 3, 10), float32], Tensor[(12, 3, 10), float32]) */;
  %758 = %757.1;
  %759 = cast(%758, dtype="float32") /* ty=Tensor[(12, 3, 10), float32] */;
  %760 = reshape(%759, newshape=[12, 2, 15]) /* ty=Tensor[(12, 2, 15), float32] */;
  %761 = @func_4071(%760) /* ty=(Tensor[(12, 2, 15), float32], Tensor[(5, 7, 9), bool]) */;
  %762 = %761.1;
  (%758, %762)
}

def @func_7903(%var_7822: Tensor[(8, 9, 2), float64], %var_7823: Tensor[(8, 9, 2), float64], %var_7829: Tensor[(8, 9, 2), bool]) -> (Tensor[(8, 9, 2), float32], Tensor[(8, 9, 2), float64], Tensor[(8, 9, 2), bool], Tensor[(8, 9, 2), uint32], Tensor[(12, 3, 10), float32], Tensor[(8, 9, 2), float64], Tensor[(4, 8, 10), float32], Tensor[(320), float32], Tensor[(12, 3, 10), float32]) {
  %763 = cast(%var_7823, dtype="bool") /* ty=Tensor[(8, 9, 2), bool] */;
  %764 = shape_of(%var_7822, dtype="int32") /* ty=Tensor[(3), int32] */;
  %765 = cast(%var_7822, dtype="bool") /* ty=Tensor[(8, 9, 2), bool] */;
  %766 = dyn.reshape(%763, %764, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %767 = not_equal(%765, %766) /* ty=Tensor[(8, 9, 2), bool] */;
  %768 = cast(%var_7829, dtype="float32") /* ty=Tensor[(8, 9, 2), float32] */;
  %769 = shape_of(%767, dtype="int32") /* ty=Tensor[(3), int32] */;
  %770 = cast(%767, dtype="float32") /* ty=Tensor[(8, 9, 2), float32] */;
  %771 = dyn.reshape(%768, %769, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %772 = cast(%var_7822, dtype="float64") /* ty=Tensor[(8, 9, 2), float64] */;
  %773 = cast(%767, dtype="bool") /* ty=Tensor[(8, 9, 2), bool] */;
  %774 = shape_of(%var_7829, dtype="int32") /* ty=Tensor[(3), int32] */;
  %775 = cast(%var_7829, dtype="bool") /* ty=Tensor[(8, 9, 2), bool] */;
  %776 = dyn.reshape(%773, %774, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %777 = cast(%767, dtype="float64") /* ty=Tensor[(8, 9, 2), float64] */;
  %778 = asinh(%777) /* ty=Tensor[(8, 9, 2), float64] */;
  %779 = cast(%767, dtype="uint32") /* ty=Tensor[(8, 9, 2), uint32] */;
  %780 = shape_of(%778, dtype="int32") /* ty=Tensor[(3), int32] */;
  %781 = cast(%778, dtype="uint32") /* ty=Tensor[(8, 9, 2), uint32] */;
  %782 = dyn.reshape(%779, %780, newshape=[]) /* ty=Tensor[(?, ?, ?), uint32] */;
  %783 = cast(%767, dtype="float32") /* ty=Tensor[(8, 9, 2), float32] */;
  %784 = shape_of(%778, dtype="int32") /* ty=Tensor[(3), int32] */;
  %785 = cast(%778, dtype="float32") /* ty=Tensor[(8, 9, 2), float32] */;
  %786 = dyn.reshape(%783, %784, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %787 = multiply(%785, %786) /* ty=Tensor[(8, 9, 2), float32] */;
  %788 = cast(%787, dtype="float64") /* ty=Tensor[(8, 9, 2), float64] */;
  %789 = cast(meta[relay.Constant][38] /* ty=Tensor[(320), float32] */, dtype="float32") /* ty=Tensor[(320), float32] */;
  %790 = reshape(%789, newshape=[320]) /* ty=Tensor[(320), float32] */;
  %791 = @func_2246(%790) /* ty=(Tensor[(12, 3, 10), float32], Tensor[(12, 3, 10), int8], Tensor[(12, 3, 10), float32], Tensor[(12, 3, 10), float32], Tensor[(4, 8, 10), float32], Tensor[(320), float32], Tensor[(12, 3, 10), float32], Tensor[(12, 3, 10), uint64]) */;
  %792 = add(%770, %771) /* ty=Tensor[(8, 9, 2), float32] */;
  %793 = acos(%772) /* ty=Tensor[(8, 9, 2), float64] */;
  %794 = less(%775, %776) /* ty=Tensor[(8, 9, 2), bool] */;
  %795 = bitwise_xor(%781, %782) /* ty=Tensor[(8, 9, 2), uint32] */;
  %796 = @func_7390() /* ty=Tensor[(12, 3, 10), float32] */;
  %797 = acosh(%788) /* ty=Tensor[(8, 9, 2), float64] */;
  %798 = %791.4;
  %799 = @func_807() /* ty=Tensor[(12, 3, 10), float32] */;
  (%792, %793, %794, %795, %796, %797, %798, meta[relay.Constant][38] /* ty=Tensor[(320), float32] */, %799)
}

def @func_6842() -> (Tensor[(12, 3, 10), int8], Tensor[(12, 3, 10), float32], Tensor[(5, 5, 6), int64], Tensor[(4, 8, 10), float32], Tensor[(2, 160), float32]) {
  @func_6840() /* ty=(Tensor[(12, 3, 10), int8], Tensor[(12, 3, 10), float32], Tensor[(5, 5, 6), int64], Tensor[(4, 8, 10), float32], Tensor[(2, 160), float32]) */
}

def @func_3160(%var_3159: Tensor[(12, 3, 10), float32]) -> Tensor[(12, 3, 10), bool] {
  %806 = fn (%var_3151: Tensor[(12, 3, 10), float32]) -> Tensor[(12, 3, 10), bool] {
    %800 = @func_331() /* ty=(Tensor[(12, 3, 10), float32],) */;
    %801 = %800.0;
    %802 = cast(%var_3151, dtype="bool") /* ty=Tensor[(12, 3, 10), bool] */;
    %803 = shape_of(%801, dtype="int32") /* ty=Tensor[(3), int32] */;
    %804 = cast(%801, dtype="bool") /* ty=Tensor[(12, 3, 10), bool] */;
    %805 = dyn.reshape(%802, %803, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    logical_or(%804, %805) /* ty=Tensor[(12, 3, 10), bool] */
  };
  %806(%var_3159) /* ty=Tensor[(12, 3, 10), bool] */
}

def @func_6744(%var_6733: Tensor[(120), float32]) -> (Tensor[(12, 3, 10), float32], Tensor[(5, 3, 8), float32], Tensor[(120), float32]) {
  %807 = cast(%var_6733, dtype="float32") /* ty=Tensor[(120), float32] */;
  %808 = cast(%var_6733, dtype="float32") /* ty=Tensor[(120), float32] */;
  %809 = reshape(%807, newshape=[5, 3, 8]) /* ty=Tensor[(5, 3, 8), float32] */;
  %810 = reshape(%808, newshape=[5, 3, 8]) /* ty=Tensor[(5, 3, 8), float32] */;
  %811 = @func_4657(%809, %810) /* ty=(Tensor[(5, 3, 8), float32], Tensor[(5, 3, 8), float64]) */;
  %812 = @func_459() /* ty=Tensor[(12, 3, 10), float32] */;
  %813 = %811.0;
  (%812, %813, %var_6733)
}

def @func_8639(%var_8638: Tensor[(3, 15, 13), float64]) -> Tensor[(3, 15, 13), float64] {
  %815 = fn (%var_8629: Tensor[(3, 15, 13), float64]) -> Tensor[(3, 15, 13), float64] {
    %814 = cast(%var_8629, dtype="float64") /* ty=Tensor[(3, 15, 13), float64] */;
    asin(%814) /* ty=Tensor[(3, 15, 13), float64] */
  };
  %815(%var_8638) /* ty=Tensor[(3, 15, 13), float64] */
}

def @func_9008() -> Tensor[(12, 3, 10), float32] {
  %816 = @func_8349() /* ty=(Tensor[(12, 3, 10), float32],) */;
  %816.0
}

def @func_9376() -> (Tensor[(16, 16, 16), float64],) {
  %817 = @func_8404() /* ty=(Tensor[(16, 16, 16), float32],) */;
  %818 = %817.0;
  %819 = cast(%818, dtype="float64") /* ty=Tensor[(16, 16, 16), float64] */;
  %820 = cos(%819) /* ty=Tensor[(16, 16, 16), float64] */;
  (%820,)
}

def @func_1139() -> (Tensor[(12, 3, 10), float32],) {
  @func_1137() /* ty=(Tensor[(12, 3, 10), float32],) */
}

def @func_5149() -> (Tensor[(12, 3, 10), float32], Tensor[(5, 7, 9), bool]) {
  @func_5147() /* ty=(Tensor[(12, 3, 10), float32], Tensor[(5, 7, 9), bool]) */
}

def @func_3719() -> (Tensor[(5, 7, 9), float32], Tensor[(12, 3, 10), float32]) {
  @func_3717() /* ty=(Tensor[(5, 7, 9), float32], Tensor[(12, 3, 10), float32]) */
}

def @func_4623(%var_4621: Tensor[(120), uint32], %var_4622: Tensor[(5, 9), float64]) -> (Tensor[(3, 8, 5), uint32], Tensor[(120), uint32], Tensor[(45, 1), float64], Tensor[(5, 9), float64], Tensor[(315), float64], Tensor[(13, 3, ?), bool]) {
  @func_4619(%var_4621, %var_4622) /* ty=(Tensor[(3, 8, 5), uint32], Tensor[(120), uint32], Tensor[(45, 1), float64], Tensor[(5, 9), float64], Tensor[(315), float64], Tensor[(13, 3, ?), bool]) */
}

def @func_9172(%var_9160: Tensor[(585), float64]) -> (Tensor[(12, 3, 10), float32], Tensor[(3, 15, 13), float64], Tensor[(585), float64], Tensor[(3, 15, 13), float64]) {
  %821 = @func_8247() /* ty=(Tensor[(12, 3, 10), float32], Tensor[(5, 7, 9), bool], Tensor[(12, 3, 10), float32]) */;
  %822 = cast(%var_9160, dtype="float64") /* ty=Tensor[(585), float64] */;
  %823 = reshape(%822, newshape=[3, 15, 13]) /* ty=Tensor[(3, 15, 13), float64] */;
  %824 = cast(%var_9160, dtype="float64") /* ty=Tensor[(585), float64] */;
  %825 = reshape(%824, newshape=[3, 15, 13]) /* ty=Tensor[(3, 15, 13), float64] */;
  %826 = %821.0;
  %827 = @func_8637(%823) /* ty=Tensor[(3, 15, 13), float64] */;
  %828 = @func_8637(%825) /* ty=Tensor[(3, 15, 13), float64] */;
  (%826, %827, %var_9160, %828)
}

def @func_3373() -> Tensor[(5, 7, 9), bool] {
  @func_3371() /* ty=Tensor[(5, 7, 9), bool] */
}

def @func_5181() -> (Tensor[(5, 7, 9), float64],) {
  %833 = fn () -> (Tensor[(5, 7, 9), float64],) {
    %829 = @func_3998() /* ty=(Tensor[(5, 7, 9), bool],) */;
    %830 = %829.0;
    %831 = cast(%830, dtype="float64") /* ty=Tensor[(5, 7, 9), float64] */;
    %832 = log(%831) /* ty=Tensor[(5, 7, 9), float64] */;
    (%832,)
  };
  %833() /* ty=(Tensor[(5, 7, 9), float64],) */
}

def @func_1137() -> (Tensor[(12, 3, 10), float32],) {
  %834 = @func_739() /* ty=Tensor[(12, 3, 10), float32] */;
  (%834,)
}

def @func_4934() -> (Tensor[(45), float64],) {
  %835 = @func_2833() /* ty=Tensor[(45), float64] */;
  (%835,)
}

def @func_460() -> Tensor[(12, 3, 10), float32] {
  %836 = fn () -> Tensor[(12, 3, 10), float32] {
    @func_419() /* ty=Tensor[(12, 3, 10), float32] */
  };
  %836() /* ty=Tensor[(12, 3, 10), float32] */
}

def @func_6016(%var_6015: Tensor[(13, 14, 13), float32]) -> Tensor[(13, 14, 13), bool] {
  %841 = fn (%var_6003: Tensor[(13, 14, 13), float32]) -> Tensor[(13, 14, 13), bool] {
    %837 = cast(%var_6003, dtype="bool") /* ty=Tensor[(13, 14, 13), bool] */;
    %838 = shape_of(meta[relay.Constant][39] /* ty=Tensor[(13, 14, 13), float32] */, dtype="int32") /* ty=Tensor[(3), int32] */;
    %839 = cast(meta[relay.Constant][39] /* ty=Tensor[(13, 14, 13), float32] */, dtype="bool") /* ty=Tensor[(13, 14, 13), bool] */;
    %840 = dyn.reshape(%837, %838, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    equal(%839, %840) /* ty=Tensor[(13, 14, 13), bool] */
  };
  %841(%var_6015) /* ty=Tensor[(13, 14, 13), bool] */
}

def @func_4039() -> (Tensor[(45), float64], Tensor[(12, 3, 10), float32]) {
  @func_4037() /* ty=(Tensor[(45), float64], Tensor[(12, 3, 10), float32]) */
}

def @func_4158() -> (Tensor[(12, 3, 10), float32],) {
  %845 = fn () -> (Tensor[(12, 3, 10), float32],) {
    %842 = @func_2043() /* ty=Tensor[(12, 3, 10), float32] */;
    %843 = cast(%842, dtype="float32") /* ty=Tensor[(12, 3, 10), float32] */;
    %844 = acosh(%843) /* ty=Tensor[(12, 3, 10), float32] */;
    (%844,)
  };
  %845() /* ty=(Tensor[(12, 3, 10), float32],) */
}

def @func_1832(%var_1831: Tensor[(6, 12, 16), float64]) -> (Tensor[(6, 12, 16), float64],) {
  %848 = fn (%var_1824: Tensor[(6, 12, 16), float64]) -> (Tensor[(6, 12, 16), float64],) {
    %846 = cast(%var_1824, dtype="float64") /* ty=Tensor[(6, 12, 16), float64] */;
    %847 = acosh(%846) /* ty=Tensor[(6, 12, 16), float64] */;
    (%847,)
  };
  %848(%var_1831) /* ty=(Tensor[(6, 12, 16), float64],) */
}

def @func_5834(%var_5832: Tensor[(120), float32]) -> (Tensor[(45), float64], Tensor[(5, 7, 9), bool], Tensor[(5, 3, 8), float32], Tensor[(120), float32]) {
  @func_5831(%var_5832) /* ty=(Tensor[(45), float64], Tensor[(5, 7, 9), bool], Tensor[(5, 3, 8), float32], Tensor[(120), float32]) */
}

def @func_6681() -> (Tensor[(3, 3, 4), int64], Tensor[(12, 3, 10), float32]) {
  %861 = fn () -> (Tensor[(3, 3, 4), int64], Tensor[(12, 3, 10), float32]) {
    %849 = cast(meta[relay.Constant][41] /* ty=Tensor[(3, 3, 4), int64] */, dtype="int64") /* ty=Tensor[(3, 3, 4), int64] */;
    %850 = shape_of(meta[relay.Constant][40] /* ty=Tensor[(3, 3, 4), int64] */, dtype="int32") /* ty=Tensor[(3), int32] */;
    %851 = cast(meta[relay.Constant][40] /* ty=Tensor[(3, 3, 4), int64] */, dtype="int64") /* ty=Tensor[(3, 3, 4), int64] */;
    %852 = dyn.reshape(%849, %850, newshape=[]) /* ty=Tensor[(?, ?, ?), int64] */;
    %853 = bitwise_or(%851, %852) /* ty=Tensor[(3, 3, 4), int64] */;
    %854 = cast(meta[relay.Constant][40] /* ty=Tensor[(3, 3, 4), int64] */, dtype="int64") /* ty=Tensor[(3, 3, 4), int64] */;
    %855 = shape_of(%853, dtype="int32") /* ty=Tensor[(3), int32] */;
    %856 = cast(%853, dtype="int64") /* ty=Tensor[(3, 3, 4), int64] */;
    %857 = dyn.reshape(%854, %855, newshape=[]) /* ty=Tensor[(?, ?, ?), int64] */;
    %858 = @func_1137() /* ty=(Tensor[(12, 3, 10), float32],) */;
    %859 = left_shift(%856, %857) /* ty=Tensor[(3, 3, 4), int64] */;
    %860 = %858.0;
    (%859, %860)
  };
  %861() /* ty=(Tensor[(3, 3, 4), int64], Tensor[(12, 3, 10), float32]) */
}

def @func_7012() -> (Tensor[(45), float64],) {
  @func_7010() /* ty=(Tensor[(45), float64],) */
}

def @func_2661() -> (Tensor[(12, 3, 10), float32], Tensor[(12, 3, 10), float32], Tensor[(12, 3, 10), float32], Tensor[(512), int32]) {
  %872 = fn () -> (Tensor[(12, 3, 10), float32], Tensor[(12, 3, 10), float32], Tensor[(12, 3, 10), float32], Tensor[(512), int32]) {
    %862 = @func_583() /* ty=(Tensor[(12, 3, 10), float32],) */;
    %863 = @func_331() /* ty=(Tensor[(12, 3, 10), float32],) */;
    %864 = cast(meta[relay.Constant][42] /* ty=Tensor[(512), int32] */, dtype="int32") /* ty=Tensor[(512), int32] */;
    %865 = cast(meta[relay.Constant][42] /* ty=Tensor[(512), int32] */, dtype="float32") /* ty=Tensor[(512), float32] */;
    %866 = reshape(%864, newshape=[2, 256]) /* ty=Tensor[(2, 256), int32] */;
    %867 = reshape(%865, newshape=[2, 256]) /* ty=Tensor[(2, 256), float32] */;
    %868 = @func_1764(%866, %867) /* ty=(Tensor[(12, 3, 10), float32], Tensor[(5, 7, 9), bool], Tensor[(5, 7, 9), bool], Tensor[(2, 256), uint8]) */;
    %869 = %862.0;
    %870 = %863.0;
    %871 = %868.0;
    (%869, %870, %871, meta[relay.Constant][42] /* ty=Tensor[(512), int32] */)
  };
  %872() /* ty=(Tensor[(12, 3, 10), float32], Tensor[(12, 3, 10), float32], Tensor[(12, 3, 10), float32], Tensor[(512), int32]) */
}

def @func_9124() -> (Tensor[(16, 16, 16), float32], Tensor[(12, 3, 10), int8], Tensor[(45), uint32], Tensor[(5, 9), float64], Tensor[(12, 3, 10), float32]) {
  @func_9122() /* ty=(Tensor[(16, 16, 16), float32], Tensor[(12, 3, 10), int8], Tensor[(45), uint32], Tensor[(5, 9), float64], Tensor[(12, 3, 10), float32]) */
}

def @func_4037() -> (Tensor[(45), float64], Tensor[(12, 3, 10), float32]) {
  %873 = @func_1658() /* ty=Tensor[(45), float64] */;
  %874 = cast(%873, dtype="float64") /* ty=Tensor[(45), float64] */;
  %875 = @func_1137() /* ty=(Tensor[(12, 3, 10), float32],) */;
  %876 = cos(%874) /* ty=Tensor[(45), float64] */;
  %877 = %875.0;
  (%876, %877)
}

def @func_3269(%var_3268: Tensor[(45), float64]) -> (Tensor[(12, 3, 10), float32], Tensor[(12, 3, 10), float32], Tensor[(5, 7, 9), float32], Tensor[(45), float64]) {
  %885 = fn (%var_3263: Tensor[(45), float64]) -> (Tensor[(12, 3, 10), float32], Tensor[(12, 3, 10), float32], Tensor[(5, 7, 9), float32], Tensor[(45), float64]) {
    %878 = @func_2660() /* ty=(Tensor[(12, 3, 10), float32], Tensor[(12, 3, 10), float32], Tensor[(12, 3, 10), float32], Tensor[(512), int32]) */;
    %879 = cast(%var_3263, dtype="float64") /* ty=Tensor[(45), float64] */;
    %880 = reshape(%879, newshape=[1, 45]) /* ty=Tensor[(1, 45), float64] */;
    %881 = @func_1323(%880) /* ty=(Tensor[(5, 7, 9), float32], Tensor[(5, 7, 9), bool], Tensor[(45, 1), float64], Tensor[(120), uint32], Tensor[(1, 45), float64], Tensor[(5, 7, 9), int8], Tensor[(21, 4), bool], Tensor[(320), float32], Tensor[(2, 14, 3), float64]) */;
    %882 = %878.0;
    %883 = @func_807() /* ty=Tensor[(12, 3, 10), float32] */;
    %884 = %881.0;
    (%882, %883, %884, %var_3263)
  };
  %885(%var_3268) /* ty=(Tensor[(12, 3, 10), float32], Tensor[(12, 3, 10), float32], Tensor[(5, 7, 9), float32], Tensor[(45), float64]) */
}

def @func_2759(%var_2746: Tensor[(45), float64]) -> (Tensor[(45), uint32], Tensor[(12, 3, 10), float32]) {
  %886 = @func_1658() /* ty=Tensor[(45), float64] */;
  %887 = cast(%var_2746, dtype="uint32") /* ty=Tensor[(45), uint32] */;
  %888 = shape_of(%886, dtype="int32") /* ty=Tensor[(1), int32] */;
  %889 = cast(%886, dtype="uint32") /* ty=Tensor[(45), uint32] */;
  %890 = dyn.reshape(%887, %888, newshape=[]) /* ty=Tensor[(?), uint32] */;
  %891 = @func_331() /* ty=(Tensor[(12, 3, 10), float32],) */;
  %892 = right_shift(%889, %890) /* ty=Tensor[(45), uint32] */;
  %893 = %891.0;
  (%892, %893)
}

def @func_3240() -> (Tensor[(12, 3, 10), float32], Tensor[(12, 3, 10), float32]) {
  %894 = @func_721() /* ty=(Tensor[(12, 3, 10), float32],) */;
  %895 = %894.0;
  %896 = @func_419() /* ty=Tensor[(12, 3, 10), float32] */;
  (%895, %896)
}

def @func_1850() -> (Tensor[(12, 3, 10), float32],) {
  %899 = fn () -> (Tensor[(12, 3, 10), float32],) {
    %897 = @func_721() /* ty=(Tensor[(12, 3, 10), float32],) */;
    %898 = %897.0;
    (%898,)
  };
  %899() /* ty=(Tensor[(12, 3, 10), float32],) */
}

def @func_9122() -> (Tensor[(16, 16, 16), float32], Tensor[(12, 3, 10), int8], Tensor[(45), uint32], Tensor[(5, 9), float64], Tensor[(12, 3, 10), float32]) {
  %900 = @func_8404() /* ty=(Tensor[(16, 16, 16), float32],) */;
  %901 = %900.0;
  %902 = cast(%901, dtype="float32") /* ty=Tensor[(16, 16, 16), float32] */;
  %903 = @func_644() /* ty=(Tensor[(5, 7, 9), bool], Tensor[(12, 3, 10), int8], Tensor[(360), float32], Tensor[(5, 7, 9), bool], Tensor[(5, 7, 9), bool], Tensor[(45), float64], Tensor[(12, 3, 10), int8]) */;
  %904 = cast(meta[relay.Constant][43] /* ty=Tensor[(5, 9), float64] */, dtype="float64") /* ty=Tensor[(5, 9), float64] */;
  %905 = reshape(%904, newshape=[45]) /* ty=Tensor[(45), float64] */;
  %906 = @func_2759(%905) /* ty=(Tensor[(45), uint32], Tensor[(12, 3, 10), float32]) */;
  %907 = asinh(%902) /* ty=Tensor[(16, 16, 16), float32] */;
  %908 = %903.6;
  %909 = %906.0;
  %910 = @func_791() /* ty=Tensor[(12, 3, 10), float32] */;
  (%907, %908, %909, meta[relay.Constant][43] /* ty=Tensor[(5, 9), float64] */, %910)
}

def @func_9144() -> (Tensor[(5, 5, 6), float64],) {
  @func_9142() /* ty=(Tensor[(5, 5, 6), float64],) */
}

def @func_644() -> (Tensor[(5, 7, 9), bool], Tensor[(12, 3, 10), int8], Tensor[(360), float32], Tensor[(5, 7, 9), bool], Tensor[(5, 7, 9), bool], Tensor[(45), float64], Tensor[(12, 3, 10), int8]) {
  %911 = @func_385() /* ty=(Tensor[(45), float64], Tensor[(5, 7, 9), bool]) */;
  %912 = cast(meta[relay.Constant][44] /* ty=Tensor[(360), float32] */, dtype="float32") /* ty=Tensor[(360), float32] */;
  %913 = reshape(%912, newshape=[12, 3, 10]) /* ty=Tensor[(12, 3, 10), float32] */;
  %914 = @func_385() /* ty=(Tensor[(45), float64], Tensor[(5, 7, 9), bool]) */;
  %915 = @func_271() /* ty=(Tensor[(12, 3, 10), float32], Tensor[(5, 7, 9), bool], Tensor[(45), float64]) */;
  %916 = @func_385() /* ty=(Tensor[(45), float64], Tensor[(5, 7, 9), bool]) */;
  %917 = cast(meta[relay.Constant][44] /* ty=Tensor[(360), float32] */, dtype="float32") /* ty=Tensor[(360), float32] */;
  %918 = reshape(%917, newshape=[12, 3, 10]) /* ty=Tensor[(12, 3, 10), float32] */;
  %919 = %911.1;
  %920 = @func_480(%913) /* ty=Tensor[(12, 3, 10), int8] */;
  %921 = %914.1;
  %922 = %915.1;
  %923 = %916.0;
  %924 = @func_480(%918) /* ty=Tensor[(12, 3, 10), int8] */;
  (%919, %920, meta[relay.Constant][44] /* ty=Tensor[(360), float32] */, %921, %922, %923, %924)
}

def @func_2953() -> (Tensor[(12, 3, 10), float32],) {
  %925 = @func_791() /* ty=Tensor[(12, 3, 10), float32] */;
  (%925,)
}

def @func_2833() -> Tensor[(45), float64] {
  @func_1658() /* ty=Tensor[(45), float64] */
}

def @func_895(%var_893: Tensor[(12, 3, 10), float64]) -> (Tensor[(12, 3, 10), int32], Tensor[(12, 3, 10), float32]) {
  @func_892(%var_893) /* ty=(Tensor[(12, 3, 10), int32], Tensor[(12, 3, 10), float32]) */
}

def @func_4992(%var_4991: Tensor[(3, 13, 11), float64]) -> (Tensor[(3, 13, 11), float64], Tensor[(3, 13, 11), uint64]) {
  %935 = fn (%var_4964: Tensor[(3, 13, 11), float64]) -> (Tensor[(3, 13, 11), float64], Tensor[(3, 13, 11), uint64]) {
    %926 = cast(%var_4964, dtype="float64") /* ty=Tensor[(3, 13, 11), float64] */;
    %927 = cast(%var_4964, dtype="float64") /* ty=Tensor[(3, 13, 11), float64] */;
    %928 = sinh(%927) /* ty=Tensor[(3, 13, 11), float64] */;
    %929 = cast(%var_4964, dtype="uint64") /* ty=Tensor[(3, 13, 11), uint64] */;
    %930 = shape_of(%928, dtype="int32") /* ty=Tensor[(3), int32] */;
    %931 = cast(%928, dtype="uint64") /* ty=Tensor[(3, 13, 11), uint64] */;
    %932 = dyn.reshape(%929, %930, newshape=[]) /* ty=Tensor[(?, ?, ?), uint64] */;
    %933 = acosh(%926) /* ty=Tensor[(3, 13, 11), float64] */;
    %934 = right_shift(%931, %932) /* ty=Tensor[(3, 13, 11), uint64] */;
    (%933, %934)
  };
  %935(%var_4991) /* ty=(Tensor[(3, 13, 11), float64], Tensor[(3, 13, 11), uint64]) */
}

def @func_3350() -> (Tensor[(12, 3, 10), float32],) {
  %938 = fn () -> (Tensor[(12, 3, 10), float32],) {
    %936 = @func_583() /* ty=(Tensor[(12, 3, 10), float32],) */;
    %937 = %936.0;
    (%937,)
  };
  %938() /* ty=(Tensor[(12, 3, 10), float32],) */
}

def @func_9230(%var_9229: Tensor[(5, 16, 7), uint64]) -> (Tensor[(5, 16, 7), uint64], Tensor[(5, 16, 7), float64]) {
  %946 = fn (%var_9210: Tensor[(5, 16, 7), uint64]) -> (Tensor[(5, 16, 7), uint64], Tensor[(5, 16, 7), float64]) {
    %939 = cast(meta[relay.Constant][45] /* ty=Tensor[(5, 16, 7), uint64] */, dtype="uint64") /* ty=Tensor[(5, 16, 7), uint64] */;
    %940 = shape_of(%var_9210, dtype="int32") /* ty=Tensor[(3), int32] */;
    %941 = cast(%var_9210, dtype="uint64") /* ty=Tensor[(5, 16, 7), uint64] */;
    %942 = dyn.reshape(%939, %940, newshape=[]) /* ty=Tensor[(?, ?, ?), uint64] */;
    %943 = cast(%var_9210, dtype="float64") /* ty=Tensor[(5, 16, 7), float64] */;
    %944 = bitwise_and(%941, %942) /* ty=Tensor[(5, 16, 7), uint64] */;
    %945 = atanh(%943) /* ty=Tensor[(5, 16, 7), float64] */;
    (%944, %945)
  };
  %946(%var_9229) /* ty=(Tensor[(5, 16, 7), uint64], Tensor[(5, 16, 7), float64]) */
}

def @func_5003(%var_5001: Tensor[(13, 4, 11), float32]) -> Tensor[(13, 4, 11), float32] {
  @func_5000(%var_5001) /* ty=Tensor[(13, 4, 11), float32] */
}

def @func_1780() -> (Tensor[(12, 3, 10), float32],) {
  %949 = fn () -> (Tensor[(12, 3, 10), float32],) {
    %947 = @func_1579() /* ty=(Tensor[(12, 3, 10), float32], Tensor[(12, 3, 10), float32]) */;
    %948 = %947.0;
    (%948,)
  };
  %949() /* ty=(Tensor[(12, 3, 10), float32],) */
}

def @func_3242() -> (Tensor[(12, 3, 10), float32], Tensor[(12, 3, 10), float32]) {
  @func_3240() /* ty=(Tensor[(12, 3, 10), float32], Tensor[(12, 3, 10), float32]) */
}

def @func_809() -> Tensor[(12, 3, 10), float32] {
  @func_807() /* ty=Tensor[(12, 3, 10), float32] */
}

def @func_5337(%var_5307: Tensor[(12, 3, 10), float32], %var_5321: Tensor[(45), float64]) -> (Tensor[(12, 3, 10), uint32], Tensor[(45), float64], Tensor[(45), float64], Tensor[(12, 3, 10), float32]) {
  %950 = @func_459() /* ty=Tensor[(12, 3, 10), float32] */;
  %951 = cast(%var_5307, dtype="uint32") /* ty=Tensor[(12, 3, 10), uint32] */;
  %952 = shape_of(%950, dtype="int32") /* ty=Tensor[(3), int32] */;
  %953 = cast(%950, dtype="uint32") /* ty=Tensor[(12, 3, 10), uint32] */;
  %954 = dyn.reshape(%951, %952, newshape=[]) /* ty=Tensor[(?, ?, ?), uint32] */;
  %955 = cast(%var_5321, dtype="float64") /* ty=Tensor[(45), float64] */;
  %956 = reshape(%955, newshape=[45]) /* ty=Tensor[(45), float64] */;
  %957 = @func_3267(%956) /* ty=(Tensor[(12, 3, 10), float32], Tensor[(12, 3, 10), float32], Tensor[(5, 7, 9), float32], Tensor[(45), float64]) */;
  %958 = cast(%950, dtype="float32") /* ty=Tensor[(12, 3, 10), float32] */;
  %959 = shape_of(%var_5307, dtype="int32") /* ty=Tensor[(3), int32] */;
  %960 = cast(%var_5307, dtype="float32") /* ty=Tensor[(12, 3, 10), float32] */;
  %961 = dyn.reshape(%958, %959, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %962 = subtract(%953, %954) /* ty=Tensor[(12, 3, 10), uint32] */;
  %963 = %957.3;
  %964 = mod(%960, %961) /* ty=Tensor[(12, 3, 10), float32] */;
  (%962, %963, %var_5321, %964)
}

def @func_1182() -> (Tensor[(5, 7, 9), bool],) {
  %965 = @func_1150() /* ty=Tensor[(5, 7, 9), bool] */;
  (%965,)
}

def @func_1659() -> Tensor[(45), float64] {
  %967 = fn () -> Tensor[(45), float64] {
    %966 = @func_1561() /* ty=(Tensor[(12, 3, 10), float32], Tensor[(12, 3, 10), float32], Tensor[(12, 3, 10), float32], Tensor[(12, 3, 10), float32], Tensor[(45), float64]) */;
    %966.4
  };
  %967() /* ty=Tensor[(45), float64] */
}

def @func_5341(%var_5339: Tensor[(12, 3, 10), float32], %var_5340: Tensor[(45), float64]) -> (Tensor[(12, 3, 10), uint32], Tensor[(45), float64], Tensor[(45), float64], Tensor[(12, 3, 10), float32]) {
  @func_5337(%var_5339, %var_5340) /* ty=(Tensor[(12, 3, 10), uint32], Tensor[(45), float64], Tensor[(45), float64], Tensor[(12, 3, 10), float32]) */
}

def @func_3999() -> (Tensor[(5, 7, 9), bool],) {
  %969 = fn () -> (Tensor[(5, 7, 9), bool],) {
    %968 = @func_3371() /* ty=Tensor[(5, 7, 9), bool] */;
    (%968,)
  };
  %969() /* ty=(Tensor[(5, 7, 9), bool],) */
}

def @func_7964() -> (Tensor[(5, 7, 9), bool], Tensor[(12, 3, 10), float32]) {
  %970 = @func_3371() /* ty=Tensor[(5, 7, 9), bool] */;
  %971 = @func_7390() /* ty=Tensor[(12, 3, 10), float32] */;
  (%970, %971)
}

def @func_4707() -> Tensor[(5, 7, 9), bool] {
  %973 = fn () -> Tensor[(5, 7, 9), bool] {
    %972 = @func_2578() /* ty=(Tensor[(5, 7, 9), bool], Tensor[(12, 3, 10), float64]) */;
    %972.0
  };
  %973() /* ty=Tensor[(5, 7, 9), bool] */
}

def @func_8546() -> (Tensor[(12, 3, 10), float32], Tensor[(12, 3, 10), float32]) {
  %974 = @func_721() /* ty=(Tensor[(12, 3, 10), float32],) */;
  %975 = @func_3882() /* ty=(Tensor[(12, 3, 10), float32], Tensor[(12, 3, 10), float32]) */;
  %976 = %974.0;
  %977 = %975.1;
  (%976, %977)
}

def @func_3654(%var_3652: Tensor[(320), float32]) -> (Tensor[(360), float32], Tensor[(12, 3, 10), float64], Tensor[(2, 14, 3), bool], Tensor[(84), bool], Tensor[(320), float32], Tensor[(12, 3, 10), float32]) {
  @func_3651(%var_3652) /* ty=(Tensor[(360), float32], Tensor[(12, 3, 10), float64], Tensor[(2, 14, 3), bool], Tensor[(84), bool], Tensor[(320), float32], Tensor[(12, 3, 10), float32]) */
}

def @func_3984(%var_3982: Tensor[(7, 16, 5), uint8], %var_3983: Tensor[(7, 16, 5), uint8]) -> (Tensor[(7, 16, 5), bool], Tensor[(12, 3, 10), float32], Tensor[(5, 7, 9), bool]) {
  %986 = fn (%var_3956: Tensor[(7, 16, 5), uint8], %var_3957: Tensor[(7, 16, 5), uint8]) -> (Tensor[(7, 16, 5), bool], Tensor[(12, 3, 10), float32], Tensor[(5, 7, 9), bool]) {
    %978 = cast(%var_3957, dtype="bool") /* ty=Tensor[(7, 16, 5), bool] */;
    %979 = shape_of(%var_3956, dtype="int32") /* ty=Tensor[(3), int32] */;
    %980 = cast(%var_3956, dtype="bool") /* ty=Tensor[(7, 16, 5), bool] */;
    %981 = dyn.reshape(%978, %979, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    %982 = @func_2953() /* ty=(Tensor[(12, 3, 10), float32],) */;
    %983 = less_equal(%980, %981) /* ty=Tensor[(7, 16, 5), bool] */;
    %984 = %982.0;
    %985 = @func_1150() /* ty=Tensor[(5, 7, 9), bool] */;
    (%983, %984, %985)
  };
  %986(%var_3982, %var_3983) /* ty=(Tensor[(7, 16, 5), bool], Tensor[(12, 3, 10), float32], Tensor[(5, 7, 9), bool]) */
}

def @func_4548() -> (Tensor[(12, 3, 10), float32], Tensor[(5, 7, 9), float32]) {
  %987 = @func_2149() /* ty=(Tensor[(12, 3, 10), float32], Tensor[(12, 3, 10), float32], Tensor[(5, 7, 9), bool], Tensor[(5, 7, 9), bool], Tensor[(12, 3, 10), int8]) */;
  %988 = @func_3717() /* ty=(Tensor[(5, 7, 9), float32], Tensor[(12, 3, 10), float32]) */;
  %989 = %987.1;
  %990 = %988.0;
  (%989, %990)
}

def @func_5771() -> Tensor[(12, 3, 10), int8] {
  @func_5769() /* ty=Tensor[(12, 3, 10), int8] */
}

def @func_4880() -> Tensor[(12, 3, 10), float32] {
  %992 = fn () -> Tensor[(12, 3, 10), float32] {
    %991 = @func_2280() /* ty=(Tensor[(12, 3, 10), float32],) */;
    %991.0
  };
  %992() /* ty=Tensor[(12, 3, 10), float32] */
}

def @func_2886() -> Tensor[(12, 3, 10), float32] {
  @func_2884() /* ty=Tensor[(12, 3, 10), float32] */
}

def @func_6648() -> (Tensor[(12, 3, 10), float32],) {
  %993 = @func_6458() /* ty=(Tensor[(12, 3, 10), float32], Tensor[(12, 3, 10), float32]) */;
  %994 = %993.0;
  (%994,)
}

def @func_387() -> (Tensor[(45), float64], Tensor[(5, 7, 9), bool]) {
  @func_385() /* ty=(Tensor[(45), float64], Tensor[(5, 7, 9), bool]) */
}

def @func_3862(%var_3861: Tensor[(286), float64]) -> (Tensor[(12, 3, 10), float32], Tensor[(12, 3, 10), float32], Tensor[(12, 3, 10), float32], Tensor[(12, 3, 10), float32], Tensor[(12, 3, 10), float32], Tensor[(12, 3, 10), float32], Tensor[(12, 3, 10), float32], Tensor[(12, 3, 10), int8], Tensor[(5, 7, 9), bool], Tensor[(45), float64], Tensor[(11, 13, 2), float64], Tensor[(286), float64], Tensor[(12, 3, 10), float32]) {
  %1018 = fn (%var_3848: Tensor[(286), float64]) -> (Tensor[(12, 3, 10), float32], Tensor[(12, 3, 10), float32], Tensor[(12, 3, 10), float32], Tensor[(12, 3, 10), float32], Tensor[(12, 3, 10), float32], Tensor[(12, 3, 10), float32], Tensor[(12, 3, 10), float32], Tensor[(12, 3, 10), int8], Tensor[(5, 7, 9), bool], Tensor[(45), float64], Tensor[(11, 13, 2), float64], Tensor[(286), float64], Tensor[(12, 3, 10), float32]) {
    %995 = @func_1996() /* ty=(Tensor[(12, 3, 10), float32], Tensor[(12, 3, 10), float32]) */;
    %996 = @func_583() /* ty=(Tensor[(12, 3, 10), float32],) */;
    %997 = @func_739() /* ty=Tensor[(12, 3, 10), float32] */;
    %998 = cast(%997, dtype="float32") /* ty=Tensor[(12, 3, 10), float32] */;
    %999 = @func_1579() /* ty=(Tensor[(12, 3, 10), float32], Tensor[(12, 3, 10), float32]) */;
    %1000 = %996.0;
    %1001 = cast(%1000, dtype="float32") /* ty=Tensor[(12, 3, 10), float32] */;
    %1002 = reshape(%1001, newshape=[12, 3, 10]) /* ty=Tensor[(12, 3, 10), float32] */;
    %1003 = cast(meta[relay.Constant][46] /* ty=Tensor[(45), float64] */, dtype="float64") /* ty=Tensor[(45), float64] */;
    %1004 = reshape(%1003, newshape=[5, 1, 9]) /* ty=Tensor[(5, 1, 9), float64] */;
    %1005 = cast(%var_3848, dtype="float64") /* ty=Tensor[(286), float64] */;
    %1006 = reshape(%1005, newshape=[11, 13, 2]) /* ty=Tensor[(11, 13, 2), float64] */;
    %1007 = @func_2812(%1006) /* ty=(Tensor[(11, 13, 2), float64],) */;
    %1008 = %995.0;
    %1009 = @func_791() /* ty=Tensor[(12, 3, 10), float32] */;
    %1010 = @func_2043() /* ty=Tensor[(12, 3, 10), float32] */;
    %1011 = @func_807() /* ty=Tensor[(12, 3, 10), float32] */;
    %1012 = cosh(%998) /* ty=Tensor[(12, 3, 10), float32] */;
    %1013 = %999.1;
    %1014 = @func_480(%1002) /* ty=Tensor[(12, 3, 10), int8] */;
    %1015 = @func_176(%1004) /* ty=Tensor[(5, 7, 9), bool] */;
    %1016 = %1007.0;
    %1017 = @func_3576() /* ty=Tensor[(12, 3, 10), float32] */;
    (%1008, %1000, %1009, %1010, %1011, %1012, %1013, %1014, %1015, meta[relay.Constant][46] /* ty=Tensor[(45), float64] */, %1016, %var_3848, %1017)
  };
  %1018(%var_3861) /* ty=(Tensor[(12, 3, 10), float32], Tensor[(12, 3, 10), float32], Tensor[(12, 3, 10), float32], Tensor[(12, 3, 10), float32], Tensor[(12, 3, 10), float32], Tensor[(12, 3, 10), float32], Tensor[(12, 3, 10), float32], Tensor[(12, 3, 10), int8], Tensor[(5, 7, 9), bool], Tensor[(45), float64], Tensor[(11, 13, 2), float64], Tensor[(286), float64], Tensor[(12, 3, 10), float32]) */
}

def @func_739() -> Tensor[(12, 3, 10), float32] {
  @func_459() /* ty=Tensor[(12, 3, 10), float32] */
}

def @func_6246() -> (Tensor[(12, 3, 10), float32], Tensor[(5, 7, 9), bool]) {
  %1019 = @func_5147() /* ty=(Tensor[(12, 3, 10), float32], Tensor[(5, 7, 9), bool]) */;
  %1020 = @func_2578() /* ty=(Tensor[(5, 7, 9), bool], Tensor[(12, 3, 10), float64]) */;
  %1021 = %1019.0;
  %1022 = %1020.0;
  (%1021, %1022)
}

def @func_4637() -> (Tensor[(45), float64],) {
  %1025 = fn () -> (Tensor[(45), float64],) {
    %1023 = @func_3938() /* ty=(Tensor[(12, 3, 10), float32], Tensor[(45), float64]) */;
    %1024 = %1023.1;
    (%1024,)
  };
  %1025() /* ty=(Tensor[(45), float64],) */
}

def @func_5159() -> Tensor[(12, 3, 10), float32] {
  %1027 = fn () -> Tensor[(12, 3, 10), float32] {
    %1026 = @func_3882() /* ty=(Tensor[(12, 3, 10), float32], Tensor[(12, 3, 10), float32]) */;
    %1026.1
  };
  %1027() /* ty=Tensor[(12, 3, 10), float32] */
}

def @func_5147() -> (Tensor[(12, 3, 10), float32], Tensor[(5, 7, 9), bool]) {
  %1028 = @func_4119() /* ty=(Tensor[(5, 7, 9), bool],) */;
  %1029 = @func_3278() /* ty=Tensor[(12, 3, 10), float32] */;
  %1030 = %1028.0;
  (%1029, %1030)
}

def @func_3533() -> Tensor[(45), float64] {
  %1032 = fn () -> Tensor[(45), float64] {
    %1031 = @func_385() /* ty=(Tensor[(45), float64], Tensor[(5, 7, 9), bool]) */;
    %1031.0
  };
  %1032() /* ty=Tensor[(45), float64] */
}

def @func_8776() -> (Tensor[(5, 5, 6), float64],) {
  %1033 = @func_5895() /* ty=(Tensor[(5, 5, 6), int64],) */;
  %1034 = %1033.0;
  %1035 = cast(%1034, dtype="float64") /* ty=Tensor[(5, 5, 6), float64] */;
  %1036 = sqrt(%1035) /* ty=Tensor[(5, 5, 6), float64] */;
  (%1036,)
}

def @func_3371() -> Tensor[(5, 7, 9), bool] {
  @func_1150() /* ty=Tensor[(5, 7, 9), bool] */
}

def @func_5831(%var_5826: Tensor[(120), float32]) -> (Tensor[(45), float64], Tensor[(5, 7, 9), bool], Tensor[(5, 3, 8), float32], Tensor[(120), float32]) {
  %1037 = @func_5531() /* ty=(Tensor[(5, 7, 9), bool],) */;
  %1038 = cast(%var_5826, dtype="float32") /* ty=Tensor[(120), float32] */;
  %1039 = cast(%var_5826, dtype="float32") /* ty=Tensor[(120), float32] */;
  %1040 = reshape(%1038, newshape=[5, 3, 8]) /* ty=Tensor[(5, 3, 8), float32] */;
  %1041 = reshape(%1039, newshape=[5, 3, 8]) /* ty=Tensor[(5, 3, 8), float32] */;
  %1042 = @func_4657(%1040, %1041) /* ty=(Tensor[(5, 3, 8), float32], Tensor[(5, 3, 8), float64]) */;
  %1043 = @func_1658() /* ty=Tensor[(45), float64] */;
  %1044 = %1037.0;
  %1045 = %1042.0;
  (%1043, %1044, %1045, %var_5826)
}

def @func_5947(%var_5945: Tensor[(13, 16, 15), int32], %var_5946: Tensor[(13, 16, 15), int32]) -> (Tensor[(13, 16, 15), bool], Tensor[(13, 16, 15), float32]) {
  @func_5943(%var_5945, %var_5946) /* ty=(Tensor[(13, 16, 15), bool], Tensor[(13, 16, 15), float32]) */
}

def @func_178(%var_177: Tensor[(5, 1, 9), float64]) -> Tensor[(5, 7, 9), bool] {
  %1048 = fn (%var_171: Tensor[(5, 1, 9), float64]) -> Tensor[(5, 7, 9), bool] {
    %1046 = cast(%var_171, dtype="bool") /* ty=Tensor[(5, 1, 9), bool] */;
    %1047 = cast(meta[relay.Constant][47] /* ty=Tensor[(5, 7, 9), float64] */, dtype="bool") /* ty=Tensor[(5, 7, 9), bool] */;
    less_equal(%1046, %1047) /* ty=Tensor[(5, 7, 9), bool] */
  };
  %1048(%var_177) /* ty=Tensor[(5, 7, 9), bool] */
}

def @func_7346() -> (Tensor[(5, 7, 9), float32],) {
  %1049 = @func_3717() /* ty=(Tensor[(5, 7, 9), float32], Tensor[(12, 3, 10), float32]) */;
  %1050 = %1049.0;
  (%1050,)
}

def @func_6284() -> (Tensor[(12, 3, 10), float32], Tensor[(5, 7, 9), bool]) {
  %1051 = @func_1779() /* ty=(Tensor[(12, 3, 10), float32],) */;
  %1052 = %1051.0;
  %1053 = @func_4706() /* ty=Tensor[(5, 7, 9), bool] */;
  (%1052, %1053)
}

def @func_5532() -> (Tensor[(5, 7, 9), bool],) {
  %1056 = fn () -> (Tensor[(5, 7, 9), bool],) {
    %1054 = @func_3330() /* ty=(Tensor[(5, 7, 9), bool], Tensor[(5, 7, 9), bool]) */;
    %1055 = %1054.1;
    (%1055,)
  };
  %1056() /* ty=(Tensor[(5, 7, 9), bool],) */
}

def @func_2149() -> (Tensor[(12, 3, 10), float32], Tensor[(12, 3, 10), float32], Tensor[(5, 7, 9), bool], Tensor[(5, 7, 9), bool], Tensor[(12, 3, 10), int8]) {
  %1057 = @func_271() /* ty=(Tensor[(12, 3, 10), float32], Tensor[(5, 7, 9), bool], Tensor[(45), float64]) */;
  %1058 = @func_1182() /* ty=(Tensor[(5, 7, 9), bool],) */;
  %1059 = @func_2043() /* ty=Tensor[(12, 3, 10), float32] */;
  %1060 = cast(%1059, dtype="float32") /* ty=Tensor[(12, 3, 10), float32] */;
  %1061 = reshape(%1060, newshape=[12, 3, 10]) /* ty=Tensor[(12, 3, 10), float32] */;
  %1062 = @func_2043() /* ty=Tensor[(12, 3, 10), float32] */;
  %1063 = %1057.1;
  %1064 = %1058.0;
  %1065 = @func_480(%1061) /* ty=Tensor[(12, 3, 10), int8] */;
  (%1062, %1059, %1063, %1064, %1065)
}

def @func_8718(%var_8717: Tensor[(15, 4, 3), float64]) -> (Tensor[(15, 4, 3), float32], Tensor[(45), float64], Tensor[(12, 3, 10), float32]) {
  %1076 = fn (%var_8689: Tensor[(15, 4, 3), float64]) -> (Tensor[(15, 4, 3), float32], Tensor[(45), float64], Tensor[(12, 3, 10), float32]) {
    %1066 = cast(%var_8689, dtype="float64") /* ty=Tensor[(15, 4, 3), float64] */;
    %1067 = sin(%1066) /* ty=Tensor[(15, 4, 3), float64] */;
    %1068 = cast(%var_8689, dtype="float32") /* ty=Tensor[(15, 4, 3), float32] */;
    %1069 = shape_of(%1067, dtype="int32") /* ty=Tensor[(3), int32] */;
    %1070 = cast(%1067, dtype="float32") /* ty=Tensor[(15, 4, 3), float32] */;
    %1071 = dyn.reshape(%1068, %1069, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
    %1072 = @func_3882() /* ty=(Tensor[(12, 3, 10), float32], Tensor[(12, 3, 10), float32]) */;
    %1073 = divide(%1070, %1071) /* ty=Tensor[(15, 4, 3), float32] */;
    %1074 = @func_5728() /* ty=Tensor[(45), float64] */;
    %1075 = %1072.1;
    (%1073, %1074, %1075)
  };
  %1076(%var_8717) /* ty=(Tensor[(15, 4, 3), float32], Tensor[(45), float64], Tensor[(12, 3, 10), float32]) */
}

/* For debugging purposes the metadata section has been omitted.
 * If you would like to see the full metadata section you can set the 
 * option to `True` when invoking `astext`. 
 */The type inference pass was unable to infer a type for this expression.
This usually occurs when an operator call is under constrained in some way, check other reported errors for hints of what may of happened.

===================================
note: run with `TVM_BACKTRACE=1` environment variable to display a backtrace.

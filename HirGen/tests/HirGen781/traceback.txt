==========mod==========
#[version = "0.0.5"]
def @func_11566(%var_11537: Tensor[(9, 14, 5), float32], %var_11552: Tensor[(6, 96), float64], %var_11553: Tensor[(1, 780), float32]) -> (Tensor[(780), float32], Tensor[(6, 96), float64], Tensor[(1, 780), float32], Tensor[(9, 14, 5), uint32]) {
  %0 = cast(%var_11552, dtype="float64") /* ty=Tensor[(6, 96), float64] */;
  %1 = cast(%var_11553, dtype="float32") /* ty=Tensor[(1, 780), float32] */;
  %2 = reshape(%0, newshape=[4, 9, 16]) /* ty=Tensor[(4, 9, 16), float64] */;
  %3 = reshape(%1, newshape=[780]) /* ty=Tensor[(780), float32] */;
  %4 = @func_4498(%2, %3) /* ty=(Tensor[(4, 9, 16), float64], Tensor[(5, 13, 12), float32], Tensor[(780), float32]) */;
  %5 = cast(%var_11537, dtype="float32") /* ty=Tensor[(9, 14, 5), float32] */;
  %6 = acos(%5) /* ty=Tensor[(9, 14, 5), float32] */;
  %7 = cast(%var_11537, dtype="uint32") /* ty=Tensor[(9, 14, 5), uint32] */;
  %8 = shape_of(%6, dtype="int32") /* ty=Tensor[(3), int32] */;
  %9 = cast(%6, dtype="uint32") /* ty=Tensor[(9, 14, 5), uint32] */;
  %10 = dyn.reshape(%7, %8, newshape=[]) /* ty=Tensor[(?, ?, ?), uint32] */;
  %11 = %4.2;
  %12 = bitwise_xor(%9, %10) /* ty=Tensor[(9, 14, 5), uint32] */;
  (%11, %var_11552, %var_11553, %12)
}

def @func_7248(%var_7245: Tensor[(10, 16, 1), float64]) -> Tensor[(10, 16, 1), float64] {
  %13 = cast(%var_7245, dtype="float64") /* ty=Tensor[(10, 16, 1), float64] */;
  asinh(%13) /* ty=Tensor[(10, 16, 1), float64] */
}

def @func_12956(%var_12945: Tensor[(512), float64], %var_12949: Tensor[(1050), int64], %var_12950: Tensor[(528), int32], %var_12953: Tensor[(160), float64]) -> (Tensor[(12, 14, 7), float32], Tensor[(16, 7, 5), bool], Tensor[(512), float64], Tensor[(11, 16, 3), float32], Tensor[(1050), int64], Tensor[(528), int32], Tensor[(10, 16, 1), float64], Tensor[(160), float64]) {
  %14 = @func_12884() /* ty=(Tensor[(12, 14, 7), float32],) */;
  %15 = cast(%var_12945, dtype="float64") /* ty=Tensor[(512), float64] */;
  %16 = reshape(%15, newshape=[16, 8, 4]) /* ty=Tensor[(16, 8, 4), float64] */;
  %17 = @func_6376(%16) /* ty=(Tensor[(16, 8, 4), uint8], Tensor[(16, 7, 5), bool], Tensor[(560), float64], Tensor[(154), float32]) */;
  %18 = cast(%var_12949, dtype="int64") /* ty=Tensor[(1050), int64] */;
  %19 = cast(%var_12949, dtype="int64") /* ty=Tensor[(1050), int64] */;
  %20 = cast(%var_12950, dtype="int32") /* ty=Tensor[(528), int32] */;
  %21 = reshape(%18, newshape=[15, 7, 10]) /* ty=Tensor[(15, 7, 10), int64] */;
  %22 = reshape(%19, newshape=[15, 7, 10]) /* ty=Tensor[(15, 7, 10), int64] */;
  %23 = reshape(%20, newshape=[528, 1]) /* ty=Tensor[(528, 1), int32] */;
  %24 = @func_3172(%21, %22, %23) /* ty=(Tensor[(15, 7, 10), bool], Tensor[(11, 16, 3), float32], Tensor[(528, 1), int32]) */;
  %25 = cast(%var_12953, dtype="float64") /* ty=Tensor[(160), float64] */;
  %26 = reshape(%25, newshape=[10, 16, 1]) /* ty=Tensor[(10, 16, 1), float64] */;
  %27 = %14.0;
  %28 = %17.1;
  %29 = %24.1;
  %30 = @func_7248(%26) /* ty=Tensor[(10, 16, 1), float64] */;
  (%27, %28, %var_12945, %29, %var_12949, %var_12950, %30, %var_12953)
}

def @func_7916(%var_7889: Tensor[(2, 12, 7), float64], %var_7896: Tensor[(300), uint8]) -> (Tensor[(4, 5, 15), float32], Tensor[(300), uint8], Tensor[(2, 12, 7), int64], Tensor[(2, 12, 7), float32]) {
  %31 = cast(%var_7896, dtype="uint8") /* ty=Tensor[(300), uint8] */;
  %32 = cast(%var_7896, dtype="uint8") /* ty=Tensor[(300), uint8] */;
  %33 = reshape(%31, newshape=[4, 5, 15]) /* ty=Tensor[(4, 5, 15), uint8] */;
  %34 = reshape(%32, newshape=[4, 5, 15]) /* ty=Tensor[(4, 5, 15), uint8] */;
  %35 = cast(%var_7889, dtype="float64") /* ty=Tensor[(2, 12, 7), float64] */;
  %36 = sinh(%35) /* ty=Tensor[(2, 12, 7), float64] */;
  %37 = cast(%36, dtype="float64") /* ty=Tensor[(2, 12, 7), float64] */;
  %38 = exp(%37) /* ty=Tensor[(2, 12, 7), float64] */;
  %39 = cast(%36, dtype="bool") /* ty=Tensor[(2, 12, 7), bool] */;
  %40 = shape_of(%38, dtype="int32") /* ty=Tensor[(3), int32] */;
  %41 = cast(%38, dtype="bool") /* ty=Tensor[(2, 12, 7), bool] */;
  %42 = dyn.reshape(%39, %40, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %43 = equal(%41, %42) /* ty=Tensor[(2, 12, 7), bool] */;
  %44 = cast(%43, dtype="float64") /* ty=Tensor[(2, 12, 7), float64] */;
  %45 = tan(%44) /* ty=Tensor[(2, 12, 7), float64] */;
  %46 = cast(%36, dtype="int64") /* ty=Tensor[(2, 12, 7), int64] */;
  %47 = shape_of(%45, dtype="int32") /* ty=Tensor[(3), int32] */;
  %48 = cast(%45, dtype="int64") /* ty=Tensor[(2, 12, 7), int64] */;
  %49 = dyn.reshape(%46, %47, newshape=[]) /* ty=Tensor[(?, ?, ?), int64] */;
  %50 = cast(%45, dtype="float32") /* ty=Tensor[(2, 12, 7), float32] */;
  %51 = @func_2566(%33, %34) /* ty=Tensor[(4, 5, 15), float32] */;
  %52 = left_shift(%48, %49) /* ty=Tensor[(2, 12, 7), int64] */;
  %53 = log2(%50) /* ty=Tensor[(2, 12, 7), float32] */;
  (%51, %var_7896, %52, %53)
}

def @main(%var_14035: float32, %var_14036: Tensor[(180), float32], %var_14045: Tensor[(36, 16), float32]) -> (Tensor[(12, 14, 7), float32], Tensor[(780), float32], Tensor[(14, 5, 5), float64], Tensor[(350), float64], Tensor[(12, 14, 7), float32], Tensor[(180), float32], Tensor[(36, 16), int16], Tensor[(5, 13, 12), float32]) {
  %54 = @func_13439() /* ty=(Tensor[(12, 14, 7), float32],) */;
  %55 = cast(meta[relay.Constant][1] /* ty=Tensor[(350), float64] */, dtype="float64") /* ty=Tensor[(350), float64] */;
  %56 = cast(meta[relay.Constant][1] /* ty=Tensor[(350), float64] */, dtype="float64") /* ty=Tensor[(350), float64] */;
  %57 = reshape(%55, newshape=[14, 5, 5]) /* ty=Tensor[(14, 5, 5), float64] */;
  %58 = reshape(%56, newshape=[14, 5, 5]) /* ty=Tensor[(14, 5, 5), float64] */;
  %59 = cast(%var_14035, dtype="float32") /* ty=float32 */;
  %60 = cast(%var_14036, dtype="float32") /* ty=Tensor[(180), float32] */;
  %61 = reshape(%59, newshape=[]) /* ty=float32 */;
  %62 = reshape(%60, newshape=[180]) /* ty=Tensor[(180), float32] */;
  %63 = @func_13376(%61, %62) /* ty=(Tensor[(13, 8, 1), float64], Tensor[(104), float64], Tensor[(15, 2, 6), bool], Tensor[(180), float32], Tensor[(12, 14, 7), float32]) */;
  %64 = cast(meta[relay.Constant][2] /* ty=Tensor[(36, 16), float64] */, dtype="float32") /* ty=Tensor[(36, 16), float32] */;
  %65 = atanh(%64) /* ty=Tensor[(36, 16), float32] */;
  %66 = cast(%var_14045, dtype="int16") /* ty=Tensor[(36, 16), int16] */;
  %67 = shape_of(%65, dtype="int32") /* ty=Tensor[(2), int32] */;
  %68 = cast(%65, dtype="int16") /* ty=Tensor[(36, 16), int16] */;
  %69 = dyn.reshape(%66, %67, newshape=[]) /* ty=Tensor[(?, ?), int16] */;
  %70 = cast(meta[relay.Constant][2] /* ty=Tensor[(36, 16), float64] */, dtype="float64") /* ty=Tensor[(36, 16), float64] */;
  %71 = cast(meta[relay.Constant][0] /* ty=Tensor[(780), float32] */, dtype="float32") /* ty=Tensor[(780), float32] */;
  %72 = reshape(%70, newshape=[4, 9, 16]) /* ty=Tensor[(4, 9, 16), float64] */;
  %73 = reshape(%71, newshape=[780]) /* ty=Tensor[(780), float32] */;
  %74 = @func_4498(%72, %73) /* ty=(Tensor[(4, 9, 16), float64], Tensor[(5, 13, 12), float32], Tensor[(780), float32]) */;
  %75 = %74.1;
  %76 = cast(%75, dtype="float32") /* ty=Tensor[(5, 13, 12), float32] */;
  %77 = cast(%var_14035, dtype="float32") /* ty=float32 */;
  %78 = %54.0;
  %79 = @func_6467(%57, %58) /* ty=Tensor[(14, 5, 5), float64] */;
  %80 = %63.4;
  %81 = multiply(%68, %69) /* ty=Tensor[(36, 16), int16] */;
  %82 = subtract(%76, %77) /* ty=Tensor[(5, 13, 12), float32] */;
  (%78, meta[relay.Constant][0] /* ty=Tensor[(780), float32] */, %79, meta[relay.Constant][1] /* ty=Tensor[(350), float64] */, %80, %var_14036, %81, %82)
}

def @func_12810() -> Tensor[(12, 14, 7), float32] {
  %83 = @func_12628() /* ty=(Tensor[(12, 14, 7), float32],) */;
  %83.0
}

def @func_12007() -> (Tensor[(12, 14, 7), uint64],) {
  %84 = @func_11639() /* ty=Tensor[(12, 14, 7), float32] */;
  %85 = cast(meta[relay.Constant][3] /* ty=Tensor[(12, 14, 7), float32] */, dtype="uint64") /* ty=Tensor[(12, 14, 7), uint64] */;
  %86 = shape_of(%84, dtype="int32") /* ty=Tensor[(3), int32] */;
  %87 = cast(%84, dtype="uint64") /* ty=Tensor[(12, 14, 7), uint64] */;
  %88 = dyn.reshape(%85, %86, newshape=[]) /* ty=Tensor[(?, ?, ?), uint64] */;
  %89 = bitwise_xor(%87, %88) /* ty=Tensor[(12, 14, 7), uint64] */;
  (%89,)
}

def @func_12534() -> Tensor[(12, 14, 7), float32] {
  %90 = @func_11595() /* ty=(Tensor[(12, 14, 7), float32],) */;
  %90.0
}

def @func_13720(%var_13697: Tensor[(1050), int64], %var_13698: Tensor[(528), int32]) -> (Tensor[(12, 15, 10), float64], Tensor[(12, 14, 7), float32], Tensor[(528, 1), int32], Tensor[(1050), int64], Tensor[(528), int32]) {
  %91 = @func_12987() /* ty=(Tensor[(12, 15, 10), float64],) */;
  %92 = @func_11595() /* ty=(Tensor[(12, 14, 7), float32],) */;
  %93 = cast(%var_13697, dtype="int64") /* ty=Tensor[(1050), int64] */;
  %94 = cast(%var_13697, dtype="int64") /* ty=Tensor[(1050), int64] */;
  %95 = cast(%var_13698, dtype="int32") /* ty=Tensor[(528), int32] */;
  %96 = reshape(%93, newshape=[15, 7, 10]) /* ty=Tensor[(15, 7, 10), int64] */;
  %97 = reshape(%94, newshape=[15, 7, 10]) /* ty=Tensor[(15, 7, 10), int64] */;
  %98 = reshape(%95, newshape=[528, 1]) /* ty=Tensor[(528, 1), int32] */;
  %99 = @func_3172(%96, %97, %98) /* ty=(Tensor[(15, 7, 10), bool], Tensor[(11, 16, 3), float32], Tensor[(528, 1), int32]) */;
  %100 = %91.0;
  %101 = %92.0;
  %102 = %99.2;
  (%100, %101, %102, %var_13697, %var_13698)
}

def @func_3680(%var_3617: Tensor[(7, 11, 7), float32], %var_3640: Tensor[(528), int32]) -> (Tensor[(7, 11, 7), float32], Tensor[(528), int32], Tensor[(4, 5, 15), float32], Tensor[(5, 60), uint8], Tensor[(11, 16, 3), float32]) {
  %103 = cast(meta[relay.Constant][4] /* ty=Tensor[(7, 11, 7), float32] */, dtype="float32") /* ty=Tensor[(7, 11, 7), float32] */;
  %104 = shape_of(%var_3617, dtype="int32") /* ty=Tensor[(3), int32] */;
  %105 = cast(%var_3617, dtype="float32") /* ty=Tensor[(7, 11, 7), float32] */;
  %106 = dyn.reshape(%103, %104, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %107 = cast(meta[relay.Constant][5] /* ty=Tensor[(5, 60), uint8] */, dtype="uint8") /* ty=Tensor[(5, 60), uint8] */;
  %108 = cast(meta[relay.Constant][5] /* ty=Tensor[(5, 60), uint8] */, dtype="uint8") /* ty=Tensor[(5, 60), uint8] */;
  %109 = reshape(%107, newshape=[4, 5, 15]) /* ty=Tensor[(4, 5, 15), uint8] */;
  %110 = reshape(%108, newshape=[4, 5, 15]) /* ty=Tensor[(4, 5, 15), uint8] */;
  %111 = cast(%var_3640, dtype="int32") /* ty=Tensor[(528), int32] */;
  %112 = cast(%var_3640, dtype="int32") /* ty=Tensor[(528), int32] */;
  %113 = reshape(%111, newshape=[11, 16, 3]) /* ty=Tensor[(11, 16, 3), int32] */;
  %114 = reshape(%112, newshape=[11, 16, 3]) /* ty=Tensor[(11, 16, 3), int32] */;
  %115 = @func_2900(%113, %114) /* ty=(Tensor[(11, 16, 3), int32], Tensor[(11, 16, 3), float32]) */;
  %116 = %115.1;
  %117 = cast(%116, dtype="float32") /* ty=Tensor[(11, 16, 3), float32] */;
  %118 = atanh(%117) /* ty=Tensor[(11, 16, 3), float32] */;
  %119 = cast(%116, dtype="float32") /* ty=Tensor[(11, 16, 3), float32] */;
  %120 = shape_of(%118, dtype="int32") /* ty=Tensor[(3), int32] */;
  %121 = cast(%118, dtype="float32") /* ty=Tensor[(11, 16, 3), float32] */;
  %122 = dyn.reshape(%119, %120, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %123 = floor_divide(%105, %106) /* ty=Tensor[(7, 11, 7), float32] */;
  %124 = @func_2566(%109, %110) /* ty=Tensor[(4, 5, 15), float32] */;
  %125 = power(%121, %122) /* ty=Tensor[(11, 16, 3), float32] */;
  (%123, %var_3640, %124, meta[relay.Constant][5] /* ty=Tensor[(5, 60), uint8] */, %125)
}

def @func_11838(%var_11830: Tensor[(6, 7, 5), float64], %var_11831: Tensor[(6, 7, 5), float64]) -> (Tensor[(6, 7, 5), bool],) {
  %126 = cast(%var_11831, dtype="bool") /* ty=Tensor[(6, 7, 5), bool] */;
  %127 = shape_of(%var_11830, dtype="int32") /* ty=Tensor[(3), int32] */;
  %128 = cast(%var_11830, dtype="bool") /* ty=Tensor[(6, 7, 5), bool] */;
  %129 = dyn.reshape(%126, %127, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %130 = equal(%128, %129) /* ty=Tensor[(6, 7, 5), bool] */;
  (%130,)
}

def @func_5146(%var_5045: Tensor[(14, 3, 9), int32], %var_5070: Tensor[(960), uint32], %var_5075: Tensor[(154), float32], %var_5112: Tensor[(385), float64], %var_5113: Tensor[(539), float32]) -> (Tensor[(14, 3, 9), bool], Tensor[(14, 3, 9), float64], Tensor[(12, 5, 16), bool], Tensor[(960), uint32], Tensor[(16, 14, 6), bool], Tensor[(1344), int64], Tensor[(154), float32], Tensor[(11, 5, 7), float64], Tensor[(385), float64], Tensor[(539), float32], Tensor[(15, 2, 6), bool], float32, Tensor[(180), float32]) {
  %131 = cast(meta[relay.Constant][6] /* ty=Tensor[(14, 3, 9), int32] */, dtype="bool") /* ty=Tensor[(14, 3, 9), bool] */;
  %132 = shape_of(%var_5045, dtype="int32") /* ty=Tensor[(3), int32] */;
  %133 = cast(%var_5045, dtype="bool") /* ty=Tensor[(14, 3, 9), bool] */;
  %134 = dyn.reshape(%131, %132, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %135 = cast(meta[relay.Constant][6] /* ty=Tensor[(14, 3, 9), int32] */, dtype="float64") /* ty=Tensor[(14, 3, 9), float64] */;
  %136 = shape_of(%var_5045, dtype="int32") /* ty=Tensor[(3), int32] */;
  %137 = cast(%var_5045, dtype="float64") /* ty=Tensor[(14, 3, 9), float64] */;
  %138 = dyn.reshape(%135, %136, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %139 = cast(%var_5070, dtype="uint32") /* ty=Tensor[(960), uint32] */;
  %140 = cast(%var_5070, dtype="uint32") /* ty=Tensor[(960), uint32] */;
  %141 = reshape(%139, newshape=[12, 5, 16]) /* ty=Tensor[(12, 5, 16), uint32] */;
  %142 = reshape(%140, newshape=[12, 5, 16]) /* ty=Tensor[(12, 5, 16), uint32] */;
  %143 = @func_4589(%141, %142) /* ty=(Tensor[(12, 5, 16), bool],) */;
  %144 = cast(meta[relay.Constant][7] /* ty=Tensor[(1344), int64] */, dtype="int64") /* ty=Tensor[(1344), int64] */;
  %145 = cast(meta[relay.Constant][7] /* ty=Tensor[(1344), int64] */, dtype="int64") /* ty=Tensor[(1344), int64] */;
  %146 = cast(%var_5075, dtype="float32") /* ty=Tensor[(154), float32] */;
  %147 = reshape(%144, newshape=[16, 14, 6]) /* ty=Tensor[(16, 14, 6), int64] */;
  %148 = reshape(%145, newshape=[16, 14, 6]) /* ty=Tensor[(16, 14, 6), int64] */;
  %149 = reshape(%146, newshape=[1, 154]) /* ty=Tensor[(1, 154), float32] */;
  %150 = @func_4631(%147, %148, %149) /* ty=(Tensor[(16, 14, 6), bool], Tensor[(?, 11, 14), int32], Tensor[(1, 154), float32]) */;
  %151 = cast(%var_5112, dtype="float64") /* ty=Tensor[(385), float64] */;
  %152 = cast(%var_5113, dtype="float32") /* ty=Tensor[(539), float32] */;
  %153 = reshape(%151, newshape=[11, 5, 7]) /* ty=Tensor[(11, 5, 7), float64] */;
  %154 = reshape(%152, newshape=[539]) /* ty=Tensor[(539), float32] */;
  %155 = @func_4688(%153, %154) /* ty=(Tensor[(11, 5, 7), float64], Tensor[(4, 5, 15), float32], Tensor[(539), float32], Tensor[(528), int32]) */;
  %156 = cast(-9.99336f /* ty=float32 */, dtype="float32") /* ty=float32 */;
  %157 = cast(meta[relay.Constant][8] /* ty=Tensor[(180), float32] */, dtype="float32") /* ty=Tensor[(180), float32] */;
  %158 = reshape(%156, newshape=[]) /* ty=float32 */;
  %159 = reshape(%157, newshape=[15, 2, 6]) /* ty=Tensor[(15, 2, 6), float32] */;
  %160 = @func_3369(%158, %159) /* ty=(Tensor[(15, 2, 6), bool],) */;
  %161 = less_equal(%133, %134) /* ty=Tensor[(14, 3, 9), bool] */;
  %162 = mod(%137, %138) /* ty=Tensor[(14, 3, 9), float64] */;
  %163 = %143.0;
  %164 = %150.0;
  %165 = %155.0;
  %166 = %160.0;
  (%161, %162, %163, %var_5070, %164, meta[relay.Constant][7] /* ty=Tensor[(1344), int64] */, %var_5075, %165, %var_5112, %var_5113, %166, -9.99336f /* ty=float32 */, meta[relay.Constant][8] /* ty=Tensor[(180), float32] */)
}

def @func_12202() -> Tensor[(12, 14, 7), float32] {
  @func_11639() /* ty=Tensor[(12, 14, 7), float32] */
}

def @func_5345(%var_5336: Tensor[(9, 15, 13), uint16]) -> Tensor[(9, 15, 13), uint16] {
  %167 = cast(%var_5336, dtype="uint16") /* ty=Tensor[(9, 15, 13), uint16] */;
  %168 = shape_of(meta[relay.Constant][9] /* ty=Tensor[(9, 15, 13), uint16] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %169 = cast(meta[relay.Constant][9] /* ty=Tensor[(9, 15, 13), uint16] */, dtype="uint16") /* ty=Tensor[(9, 15, 13), uint16] */;
  %170 = dyn.reshape(%167, %168, newshape=[]) /* ty=Tensor[(?, ?, ?), uint16] */;
  minimum(%169, %170) /* ty=Tensor[(9, 15, 13), uint16] */
}

def @func_12283() -> (Tensor[(12, 14, 7), float32],) {
  %171 = @func_12165() /* ty=Tensor[(12, 14, 7), float32] */;
  (%171,)
}

def @func_13220(%var_13181: Tensor[(385), float64], %var_13182: Tensor[(539), float32]) -> (Tensor[(12, 14, 7), float32], Tensor[(12, 14, 7), float32], Tensor[(539), float32], Tensor[(385), float64], Tensor[(539), float32], Tensor[(4, 6, 16), bool], Tensor[(384), uint64], Tensor[(12, 14, 7), float32]) {
  %172 = @func_11498() /* ty=(Tensor[(12, 14, 7), float32],) */;
  %173 = cast(%var_13181, dtype="float64") /* ty=Tensor[(385), float64] */;
  %174 = cast(%var_13182, dtype="float32") /* ty=Tensor[(539), float32] */;
  %175 = reshape(%173, newshape=[11, 5, 7]) /* ty=Tensor[(11, 5, 7), float64] */;
  %176 = reshape(%174, newshape=[539]) /* ty=Tensor[(539), float32] */;
  %177 = @func_4688(%175, %176) /* ty=(Tensor[(11, 5, 7), float64], Tensor[(4, 5, 15), float32], Tensor[(539), float32], Tensor[(528), int32]) */;
  %178 = cast(meta[relay.Constant][10] /* ty=Tensor[(384), uint64] */, dtype="uint64") /* ty=Tensor[(384), uint64] */;
  %179 = reshape(%178, newshape=[4, 6, 16]) /* ty=Tensor[(4, 6, 16), uint64] */;
  %180 = @func_12534() /* ty=Tensor[(12, 14, 7), float32] */;
  %181 = %172.0;
  %182 = %177.2;
  %183 = @func_3871(%179) /* ty=Tensor[(4, 6, 16), bool] */;
  %184 = @func_11639() /* ty=Tensor[(12, 14, 7), float32] */;
  (%180, %181, %182, %var_13181, %var_13182, %183, meta[relay.Constant][10] /* ty=Tensor[(384), uint64] */, %184)
}

def @func_12884() -> (Tensor[(12, 14, 7), float32],) {
  %185 = @func_12866() /* ty=Tensor[(12, 14, 7), float32] */;
  (%185,)
}

def @func_12766() -> Tensor[(12, 14, 7), float32] {
  %186 = @func_12628() /* ty=(Tensor[(12, 14, 7), float32],) */;
  %186.0
}

def @func_12628() -> (Tensor[(12, 14, 7), float32],) {
  %187 = @func_12534() /* ty=Tensor[(12, 14, 7), float32] */;
  (%187,)
}

def @func_4688(%var_4662: Tensor[(11, 5, 7), float64], %var_4666: Tensor[(539), float32]) -> (Tensor[(11, 5, 7), float64], Tensor[(4, 5, 15), float32], Tensor[(539), float32], Tensor[(528), int32]) {
  %188 = cast(%var_4662, dtype="float64") /* ty=Tensor[(11, 5, 7), float64] */;
  %189 = cast(%var_4666, dtype="float32") /* ty=Tensor[(539), float32] */;
  %190 = cast(meta[relay.Constant][11] /* ty=Tensor[(528), int32] */, dtype="int32") /* ty=Tensor[(528), int32] */;
  %191 = reshape(%189, newshape=[7, 11, 7]) /* ty=Tensor[(7, 11, 7), float32] */;
  %192 = reshape(%190, newshape=[528]) /* ty=Tensor[(528), int32] */;
  %193 = @func_3680(%191, %192) /* ty=(Tensor[(7, 11, 7), float32], Tensor[(528), int32], Tensor[(4, 5, 15), float32], Tensor[(5, 60), uint8], Tensor[(11, 16, 3), float32]) */;
  %194 = erf(%188) /* ty=Tensor[(11, 5, 7), float64] */;
  %195 = %193.2;
  (%194, %195, %var_4666, meta[relay.Constant][11] /* ty=Tensor[(528), int32] */)
}

def @func_5567(%var_5562: Tensor[(6, 4, 8), int32]) -> (Tensor[(6, 4, 8), int32],) {
  %196 = cast(%var_5562, dtype="int32") /* ty=Tensor[(6, 4, 8), int32] */;
  %197 = shape_of(meta[relay.Constant][12] /* ty=Tensor[(6, 4, 8), int32] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %198 = cast(meta[relay.Constant][12] /* ty=Tensor[(6, 4, 8), int32] */, dtype="int32") /* ty=Tensor[(6, 4, 8), int32] */;
  %199 = dyn.reshape(%196, %197, newshape=[]) /* ty=Tensor[(?, ?, ?), int32] */;
  %200 = bitwise_and(%198, %199) /* ty=Tensor[(6, 4, 8), int32] */;
  (%200,)
}

def @func_12530() -> Tensor[(12, 15, 10), float64] {
  %201 = @func_11724() /* ty=(Tensor[(12, 14, 7), float32], Tensor[(960), uint32], Tensor[(140), uint8], Tensor[(3, 600), float32], Tensor[(12, 15, 10), float64]) */;
  %201.4
}

def @func_6294(%var_6279: Tensor[(4, 5, 13), uint32], %var_6280: Tensor[(4, 5, 13), uint32], %var_6291: Tensor[(60, 16), uint32]) -> (Tensor[(4, 5, 13), uint32], Tensor[(12, 5, 16), bool], Tensor[(60, 16), uint32]) {
  %202 = cast(%var_6280, dtype="uint32") /* ty=Tensor[(4, 5, 13), uint32] */;
  %203 = shape_of(%var_6279, dtype="int32") /* ty=Tensor[(3), int32] */;
  %204 = cast(%var_6279, dtype="uint32") /* ty=Tensor[(4, 5, 13), uint32] */;
  %205 = dyn.reshape(%202, %203, newshape=[]) /* ty=Tensor[(?, ?, ?), uint32] */;
  %206 = cast(%var_6291, dtype="uint32") /* ty=Tensor[(60, 16), uint32] */;
  %207 = cast(%var_6291, dtype="uint32") /* ty=Tensor[(60, 16), uint32] */;
  %208 = reshape(%206, newshape=[12, 5, 16]) /* ty=Tensor[(12, 5, 16), uint32] */;
  %209 = reshape(%207, newshape=[12, 5, 16]) /* ty=Tensor[(12, 5, 16), uint32] */;
  %210 = @func_4589(%208, %209) /* ty=(Tensor[(12, 5, 16), bool],) */;
  %211 = minimum(%204, %205) /* ty=Tensor[(4, 5, 13), uint32] */;
  %212 = %210.0;
  (%211, %212, %var_6291)
}

def @func_13869() -> (Tensor[(12, 14, 7), float32],) {
  %213 = @func_13648() /* ty=Tensor[(12, 14, 7), float32] */;
  (%213,)
}

def @func_6467(%var_6458: Tensor[(14, 5, 5), float64], %var_6459: Tensor[(14, 5, 5), float64]) -> Tensor[(14, 5, 5), float64] {
  %214 = cast(%var_6459, dtype="float64") /* ty=Tensor[(14, 5, 5), float64] */;
  %215 = shape_of(%var_6458, dtype="int32") /* ty=Tensor[(3), int32] */;
  %216 = cast(%var_6458, dtype="float64") /* ty=Tensor[(14, 5, 5), float64] */;
  %217 = dyn.reshape(%214, %215, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  floor_divide(%216, %217) /* ty=Tensor[(14, 5, 5), float64] */
}

def @func_12594(%var_12581: Tensor[(7, 10, 16), int32], %var_12582: Tensor[(7, 10, 16), int32]) -> (Tensor[(7, 10, 16), bool],) {
  %218 = cast(%var_12582, dtype="bool") /* ty=Tensor[(7, 10, 16), bool] */;
  %219 = shape_of(%var_12581, dtype="int32") /* ty=Tensor[(3), int32] */;
  %220 = cast(%var_12581, dtype="bool") /* ty=Tensor[(7, 10, 16), bool] */;
  %221 = dyn.reshape(%218, %219, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %222 = greater(%220, %221) /* ty=Tensor[(7, 10, 16), bool] */;
  (%222,)
}

def @func_4631(%var_4614: Tensor[(16, 14, 6), int64], %var_4615: Tensor[(16, 14, 6), int64], %var_4622: Tensor[(1, 154), float32]) -> (Tensor[(16, 14, 6), bool], Tensor[(?, 11, 14), int32], Tensor[(1, 154), float32]) {
  %223 = cast(%var_4615, dtype="bool") /* ty=Tensor[(16, 14, 6), bool] */;
  %224 = shape_of(%var_4614, dtype="int32") /* ty=Tensor[(3), int32] */;
  %225 = cast(%var_4614, dtype="bool") /* ty=Tensor[(16, 14, 6), bool] */;
  %226 = dyn.reshape(%223, %224, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %227 = cast(%var_4622, dtype="float32") /* ty=Tensor[(1, 154), float32] */;
  %228 = reshape(%227, newshape=[1, 11, 14]) /* ty=Tensor[(1, 11, 14), float32] */;
  %229 = not_equal(%225, %226) /* ty=Tensor[(16, 14, 6), bool] */;
  %230 = @func_421(%228) /* ty=Tensor[(?, 11, 14), int32] */;
  (%229, %230, %var_4622)
}

def @func_10915(%var_10863: Tensor[(10, 12, 5), float32], %var_10876: int16, %var_10878: Tensor[(378), int32], %var_10879: Tensor[(385), float64], %var_10892: Tensor[(810), float64], %var_10912: Tensor[(4, 128), float64]) -> (Tensor[(10, 12, 5), float32], Tensor[(180), float32], int16, Tensor[(3, 45), int16], Tensor[(378), int32], Tensor[(385), float64], Tensor[(15, 6, 9), float64], Tensor[(810), float64], Tensor[(16, 8, 4), uint8], Tensor[(4, 128), float64]) {
  %231 = cast(%var_10863, dtype="float32") /* ty=Tensor[(10, 12, 5), float32] */;
  %232 = cast(%var_10876, dtype="int16") /* ty=int16 */;
  %233 = cast(meta[relay.Constant][13] /* ty=Tensor[(3, 45), int16] */, dtype="int16") /* ty=Tensor[(3, 45), int16] */;
  %234 = cast(%var_10878, dtype="int32") /* ty=Tensor[(378), int32] */;
  %235 = cast(%var_10879, dtype="float64") /* ty=Tensor[(385), float64] */;
  %236 = reshape(%232, newshape=[]) /* ty=int16 */;
  %237 = reshape(%233, newshape=[1, 9, 15]) /* ty=Tensor[(1, 9, 15), int16] */;
  %238 = reshape(%234, newshape=[378]) /* ty=Tensor[(378), int32] */;
  %239 = reshape(%235, newshape=[55, 7]) /* ty=Tensor[(55, 7), float64] */;
  %240 = @func_6604(%236, %237, %238, %239) /* ty=(Tensor[(1, 9, 15), int16], Tensor[(180), float32], Tensor[(378), int32], Tensor[(960, 1), uint32], Tensor[(22, 7), float32], Tensor[(55, 7), float64], Tensor[(539), float32], Tensor[(528), int32]) */;
  %241 = cast(%var_10892, dtype="float64") /* ty=Tensor[(810), float64] */;
  %242 = reshape(%241, newshape=[15, 6, 9]) /* ty=Tensor[(15, 6, 9), float64] */;
  %243 = cast(%var_10912, dtype="float64") /* ty=Tensor[(4, 128), float64] */;
  %244 = reshape(%243, newshape=[16, 8, 4]) /* ty=Tensor[(16, 8, 4), float64] */;
  %245 = @func_6376(%244) /* ty=(Tensor[(16, 8, 4), uint8], Tensor[(16, 7, 5), bool], Tensor[(560), float64], Tensor[(154), float32]) */;
  %246 = erf(%231) /* ty=Tensor[(10, 12, 5), float32] */;
  %247 = %240.1;
  %248 = @func_7164(%242) /* ty=Tensor[(15, 6, 9), float64] */;
  %249 = %245.0;
  (%246, %247, %var_10876, meta[relay.Constant][13] /* ty=Tensor[(3, 45), int16] */, %var_10878, %var_10879, %248, %var_10892, %249, %var_10912)
}

def @func_12165() -> Tensor[(12, 14, 7), float32] {
  %250 = @func_11595() /* ty=(Tensor[(12, 14, 7), float32],) */;
  %250.0
}

def @func_11498() -> (Tensor[(12, 14, 7), float32],) {
  %251 = @func_11411() /* ty=(Tensor[(12, 14, 7), float32],) */;
  %252 = %251.0;
  (%252,)
}

def @func_3871(%var_3863: Tensor[(4, 6, 16), uint64]) -> Tensor[(4, 6, 16), bool] {
  %253 = cast(meta[relay.Constant][14] /* ty=Tensor[(4, 6, 16), uint64] */, dtype="bool") /* ty=Tensor[(4, 6, 16), bool] */;
  %254 = shape_of(%var_3863, dtype="int32") /* ty=Tensor[(3), int32] */;
  %255 = cast(%var_3863, dtype="bool") /* ty=Tensor[(4, 6, 16), bool] */;
  %256 = dyn.reshape(%253, %254, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  not_equal(%255, %256) /* ty=Tensor[(4, 6, 16), bool] */
}

def @func_7164(%var_7154: Tensor[(15, 6, 9), float64]) -> Tensor[(15, 6, 9), float64] {
  %257 = cast(meta[relay.Constant][15] /* ty=Tensor[(15, 6, 9), float64] */, dtype="float64") /* ty=Tensor[(15, 6, 9), float64] */;
  %258 = shape_of(%var_7154, dtype="int32") /* ty=Tensor[(3), int32] */;
  %259 = cast(%var_7154, dtype="float64") /* ty=Tensor[(15, 6, 9), float64] */;
  %260 = dyn.reshape(%257, %258, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  floor_mod(%259, %260) /* ty=Tensor[(15, 6, 9), float64] */
}

def @func_11976() -> Tensor[(12, 14, 7), float32] {
  @func_11639() /* ty=Tensor[(12, 14, 7), float32] */
}

def @func_13343() -> Tensor[(12, 14, 7), float32] {
  %261 = @func_11411() /* ty=(Tensor[(12, 14, 7), float32],) */;
  %261.0
}

def @func_11802(%var_11790: Tensor[(66), int64]) -> (Tensor[(12, 14, 7), float32], Tensor[(15, 8, 16), int16], Tensor[(1920), int16], Tensor[(300), uint8], Tensor[(2, 3, 11), float32], Tensor[(66), int64]) {
  %262 = @func_11595() /* ty=(Tensor[(12, 14, 7), float32],) */;
  %263 = cast(meta[relay.Constant][16] /* ty=Tensor[(1920), int16] */, dtype="int16") /* ty=Tensor[(1920), int16] */;
  %264 = cast(meta[relay.Constant][16] /* ty=Tensor[(1920), int16] */, dtype="int16") /* ty=Tensor[(1920), int16] */;
  %265 = cast(meta[relay.Constant][17] /* ty=Tensor[(300), uint8] */, dtype="uint8") /* ty=Tensor[(300), uint8] */;
  %266 = reshape(%263, newshape=[15, 8, 16]) /* ty=Tensor[(15, 8, 16), int16] */;
  %267 = reshape(%264, newshape=[15, 8, 16]) /* ty=Tensor[(15, 8, 16), int16] */;
  %268 = reshape(%265, newshape=[300]) /* ty=Tensor[(300), uint8] */;
  %269 = @func_8486(%266, %267, %268) /* ty=(Tensor[(15, 8, 16), int16], Tensor[(4, 5, 15), float32], Tensor[(300), uint8]) */;
  %270 = cast(%var_11790, dtype="int64") /* ty=Tensor[(66), int64] */;
  %271 = cast(%var_11790, dtype="int64") /* ty=Tensor[(66), int64] */;
  %272 = reshape(%270, newshape=[2, 3, 11]) /* ty=Tensor[(2, 3, 11), int64] */;
  %273 = reshape(%271, newshape=[2, 3, 11]) /* ty=Tensor[(2, 3, 11), int64] */;
  %274 = %262.0;
  %275 = %269.0;
  %276 = @func_10993(%272, %273) /* ty=Tensor[(2, 3, 11), float32] */;
  (%274, %275, meta[relay.Constant][16] /* ty=Tensor[(1920), int16] */, meta[relay.Constant][17] /* ty=Tensor[(300), uint8] */, %276, %var_11790)
}

def @func_13280() -> (Tensor[(12, 15, 10), float64],) {
  %277 = @func_12530() /* ty=Tensor[(12, 15, 10), float64] */;
  (%277,)
}

def @func_9089(%var_9044: Tensor[(10, 6, 6), float64], %var_9070: Tensor[(1800), float32]) -> (Tensor[(10, 6, 6), float64], Tensor[(4, 5, 15), float32], Tensor[(300), uint8], Tensor[(12, ?), float64], Tensor[(12), float64], Tensor[(104), float64], Tensor[(6, 140), float32], Tensor[(1800), float32]) {
  %278 = cast(%var_9044, dtype="float64") /* ty=Tensor[(10, 6, 6), float64] */;
  %279 = cast(meta[relay.Constant][18] /* ty=Tensor[(300), uint8] */, dtype="uint8") /* ty=Tensor[(300), uint8] */;
  %280 = cast(meta[relay.Constant][18] /* ty=Tensor[(300), uint8] */, dtype="uint8") /* ty=Tensor[(300), uint8] */;
  %281 = reshape(%279, newshape=[4, 5, 15]) /* ty=Tensor[(4, 5, 15), uint8] */;
  %282 = reshape(%280, newshape=[4, 5, 15]) /* ty=Tensor[(4, 5, 15), uint8] */;
  %283 = cast(meta[relay.Constant][19] /* ty=Tensor[(12), float64] */, dtype="float64") /* ty=Tensor[(12), float64] */;
  %284 = cast(meta[relay.Constant][19] /* ty=Tensor[(12), float64] */, dtype="float64") /* ty=Tensor[(12), float64] */;
  %285 = reshape(%283, newshape=[12, 1]) /* ty=Tensor[(12, 1), float64] */;
  %286 = reshape(%284, newshape=[12, 1]) /* ty=Tensor[(12, 1), float64] */;
  %287 = @func_7968(%285, %286) /* ty=(Tensor[(12, ?), float64],) */;
  %288 = cast(meta[relay.Constant][20] /* ty=Tensor[(6, 140), float32] */, dtype="float32") /* ty=Tensor[(6, 140), float32] */;
  %289 = cast(%var_9070, dtype="float32") /* ty=Tensor[(1800), float32] */;
  %290 = reshape(%288, newshape=[15, 8, 7]) /* ty=Tensor[(15, 8, 7), float32] */;
  %291 = reshape(%289, newshape=[1800]) /* ty=Tensor[(1800), float32] */;
  %292 = @func_7302(%290, %291) /* ty=(Tensor[(12, 15, 10), float32], Tensor[(1800), float32], Tensor[(4, 5, 15), float32], Tensor[(104), float64], Tensor[(11, 5, 7), float64], Tensor[(385), float64], Tensor[(539), float32], Tensor[(15, 8, 7), int16]) */;
  %293 = sqrt(%278) /* ty=Tensor[(10, 6, 6), float64] */;
  %294 = @func_2566(%281, %282) /* ty=Tensor[(4, 5, 15), float32] */;
  %295 = %287.0;
  %296 = %292.3;
  (%293, %294, meta[relay.Constant][18] /* ty=Tensor[(300), uint8] */, %295, meta[relay.Constant][19] /* ty=Tensor[(12), float64] */, %296, meta[relay.Constant][20] /* ty=Tensor[(6, 140), float32] */, %var_9070)
}

def @func_12067(%var_12060: Tensor[(50, 6), uint8], %var_12063: Tensor[(70, 2), uint8]) -> (Tensor[(12, 14, 7), float32], Tensor[(4, 5, 15), float32], Tensor[(50, 6), uint8], Tensor[(960), uint32], Tensor[(70, 2), uint8]) {
  %297 = @func_11595() /* ty=(Tensor[(12, 14, 7), float32],) */;
  %298 = cast(%var_12060, dtype="uint8") /* ty=Tensor[(50, 6), uint8] */;
  %299 = cast(%var_12060, dtype="uint8") /* ty=Tensor[(50, 6), uint8] */;
  %300 = reshape(%298, newshape=[4, 5, 15]) /* ty=Tensor[(4, 5, 15), uint8] */;
  %301 = reshape(%299, newshape=[4, 5, 15]) /* ty=Tensor[(4, 5, 15), uint8] */;
  %302 = cast(%var_12063, dtype="uint8") /* ty=Tensor[(70, 2), uint8] */;
  %303 = reshape(%302, newshape=[5, 14, 2]) /* ty=Tensor[(5, 14, 2), uint8] */;
  %304 = @func_6871(%303) /* ty=(Tensor[(12, 5, 16), bool], Tensor[(960), uint32], Tensor[(5, 14, 2), float32]) */;
  %305 = %297.0;
  %306 = @func_2566(%300, %301) /* ty=Tensor[(4, 5, 15), float32] */;
  %307 = %304.1;
  (%305, %306, %var_12060, %307, %var_12063)
}

def @func_6871(%var_6829: Tensor[(5, 14, 2), uint8]) -> (Tensor[(12, 5, 16), bool], Tensor[(960), uint32], Tensor[(5, 14, 2), float32]) {
  %308 = cast(meta[relay.Constant][21] /* ty=Tensor[(960), uint32] */, dtype="uint32") /* ty=Tensor[(960), uint32] */;
  %309 = cast(meta[relay.Constant][21] /* ty=Tensor[(960), uint32] */, dtype="uint32") /* ty=Tensor[(960), uint32] */;
  %310 = reshape(%308, newshape=[12, 5, 16]) /* ty=Tensor[(12, 5, 16), uint32] */;
  %311 = reshape(%309, newshape=[12, 5, 16]) /* ty=Tensor[(12, 5, 16), uint32] */;
  %312 = @func_4589(%310, %311) /* ty=(Tensor[(12, 5, 16), bool],) */;
  %313 = cast(%var_6829, dtype="float32") /* ty=Tensor[(5, 14, 2), float32] */;
  %314 = tan(%313) /* ty=Tensor[(5, 14, 2), float32] */;
  %315 = cast(%var_6829, dtype="uint8") /* ty=Tensor[(5, 14, 2), uint8] */;
  %316 = shape_of(meta[relay.Constant][22] /* ty=Tensor[(5, 14, 2), uint8] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %317 = cast(meta[relay.Constant][22] /* ty=Tensor[(5, 14, 2), uint8] */, dtype="uint8") /* ty=Tensor[(5, 14, 2), uint8] */;
  %318 = dyn.reshape(%315, %316, newshape=[]) /* ty=Tensor[(?, ?, ?), uint8] */;
  %319 = logical_xor(%317, %318) /* ty=Tensor[(5, 14, 2), uint8] */;
  %320 = cast(%319, dtype="uint16") /* ty=Tensor[(5, 14, 2), uint16] */;
  %321 = shape_of(%var_6829, dtype="int32") /* ty=Tensor[(3), int32] */;
  %322 = cast(%var_6829, dtype="uint16") /* ty=Tensor[(5, 14, 2), uint16] */;
  %323 = dyn.reshape(%320, %321, newshape=[]) /* ty=Tensor[(?, ?, ?), uint16] */;
  %324 = minimum(%322, %323) /* ty=Tensor[(5, 14, 2), uint16] */;
  %325 = cast(%324, dtype="float32") /* ty=Tensor[(5, 14, 2), float32] */;
  %326 = shape_of(%314, dtype="int32") /* ty=Tensor[(3), int32] */;
  %327 = cast(%314, dtype="float32") /* ty=Tensor[(5, 14, 2), float32] */;
  %328 = dyn.reshape(%325, %326, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %329 = %312.0;
  %330 = power(%327, %328) /* ty=Tensor[(5, 14, 2), float32] */;
  (%329, meta[relay.Constant][21] /* ty=Tensor[(960), uint32] */, %330)
}

def @func_8726(%var_8714: Tensor[(8, 66), int32]) -> (Tensor[(12, 4, 6), float32], Tensor[(7, 11, 7), float32], Tensor[(539, 1), float32], Tensor[(8, 66), int32]) {
  %331 = cast(meta[relay.Constant][23] /* ty=Tensor[(12, 4, 6), float32] */, dtype="float32") /* ty=Tensor[(12, 4, 6), float32] */;
  %332 = cast(meta[relay.Constant][24] /* ty=Tensor[(539, 1), float32] */, dtype="float32") /* ty=Tensor[(539, 1), float32] */;
  %333 = cast(%var_8714, dtype="int32") /* ty=Tensor[(8, 66), int32] */;
  %334 = reshape(%332, newshape=[7, 11, 7]) /* ty=Tensor[(7, 11, 7), float32] */;
  %335 = reshape(%333, newshape=[528]) /* ty=Tensor[(528), int32] */;
  %336 = @func_3680(%334, %335) /* ty=(Tensor[(7, 11, 7), float32], Tensor[(528), int32], Tensor[(4, 5, 15), float32], Tensor[(5, 60), uint8], Tensor[(11, 16, 3), float32]) */;
  %337 = sigmoid(%331) /* ty=Tensor[(12, 4, 6), float32] */;
  %338 = %336.0;
  (%337, %338, meta[relay.Constant][24] /* ty=Tensor[(539, 1), float32] */, %var_8714)
}

def @func_8442(%var_8413: Tensor[(8, 8, 10), float64]) -> (Tensor[(8, 8, 10), float64],) {
  %339 = cast(%var_8413, dtype="float64") /* ty=Tensor[(8, 8, 10), float64] */;
  %340 = log(%339) /* ty=Tensor[(8, 8, 10), float64] */;
  (%340,)
}

def @func_13304() -> (Tensor[(12, 14, 7), float64],) {
  %341 = @func_12352() /* ty=(Tensor[(12, 14, 7), uint64], Tensor[(12, 14, 7), float32]) */;
  %342 = %341.1;
  %343 = cast(%342, dtype="float64") /* ty=Tensor[(12, 14, 7), float64] */;
  %344 = cosh(%343) /* ty=Tensor[(12, 14, 7), float64] */;
  (%344,)
}

def @func_13928() -> (Tensor[(12, 14, 7), float32], Tensor[(12, 14, 7), float32]) {
  %345 = @func_13343() /* ty=Tensor[(12, 14, 7), float32] */;
  %346 = @func_11976() /* ty=Tensor[(12, 14, 7), float32] */;
  (%345, %346)
}

def @func_2758(%var_2732: Tensor[(12, 15, 10), float32]) -> Tensor[(12, 15, 10), float32] {
  %347 = cast(%var_2732, dtype="float32") /* ty=Tensor[(12, 15, 10), float32] */;
  acosh(%347) /* ty=Tensor[(12, 15, 10), float32] */
}

def @func_8378(%var_8349: Tensor[(16, 11, 8), float32]) -> (Tensor[(12, 5, 16), bool], Tensor[(140), uint8], Tensor[(16, 11, 8), int64]) {
  %348 = cast(meta[relay.Constant][25] /* ty=Tensor[(140), uint8] */, dtype="uint8") /* ty=Tensor[(140), uint8] */;
  %349 = reshape(%348, newshape=[5, 14, 2]) /* ty=Tensor[(5, 14, 2), uint8] */;
  %350 = @func_6871(%349) /* ty=(Tensor[(12, 5, 16), bool], Tensor[(960), uint32], Tensor[(5, 14, 2), float32]) */;
  %351 = cast(%var_8349, dtype="float32") /* ty=Tensor[(16, 11, 8), float32] */;
  %352 = asinh(%351) /* ty=Tensor[(16, 11, 8), float32] */;
  %353 = cast(%352, dtype="float32") /* ty=Tensor[(16, 11, 8), float32] */;
  %354 = acosh(%353) /* ty=Tensor[(16, 11, 8), float32] */;
  %355 = cast(%var_8349, dtype="int64") /* ty=Tensor[(16, 11, 8), int64] */;
  %356 = shape_of(%354, dtype="int32") /* ty=Tensor[(3), int32] */;
  %357 = cast(%354, dtype="int64") /* ty=Tensor[(16, 11, 8), int64] */;
  %358 = dyn.reshape(%355, %356, newshape=[]) /* ty=Tensor[(?, ?, ?), int64] */;
  %359 = %350.0;
  %360 = minimum(%357, %358) /* ty=Tensor[(16, 11, 8), int64] */;
  (%359, meta[relay.Constant][25] /* ty=Tensor[(140), uint8] */, %360)
}

def @func_4498(%var_4491: Tensor[(4, 9, 16), float64], %var_4495: Tensor[(780), float32]) -> (Tensor[(4, 9, 16), float64], Tensor[(5, 13, 12), float32], Tensor[(780), float32]) {
  %361 = cast(%var_4491, dtype="float64") /* ty=Tensor[(4, 9, 16), float64] */;
  %362 = cast(%var_4495, dtype="float32") /* ty=Tensor[(780), float32] */;
  %363 = reshape(%362, newshape=[5, 13, 12]) /* ty=Tensor[(5, 13, 12), float32] */;
  %364 = @func_1599(%363) /* ty=(Tensor[(5, 13, 12), float32],) */;
  %365 = log(%361) /* ty=Tensor[(4, 9, 16), float64] */;
  %366 = %364.0;
  (%365, %366, %var_4495)
}

def @func_13648() -> Tensor[(12, 14, 7), float32] {
  %367 = @func_11724() /* ty=(Tensor[(12, 14, 7), float32], Tensor[(960), uint32], Tensor[(140), uint8], Tensor[(3, 600), float32], Tensor[(12, 15, 10), float64]) */;
  %367.0
}

def @func_13053(%var_13042: Tensor[(330), float32]) -> (Tensor[(3, 11, 10), float32], Tensor[(330), float32], Tensor[(12, 14, 7), int64]) {
  %368 = cast(%var_13042, dtype="float32") /* ty=Tensor[(330), float32] */;
  %369 = reshape(%368, newshape=[3, 11, 10]) /* ty=Tensor[(3, 11, 10), float32] */;
  %370 = @func_12810() /* ty=Tensor[(12, 14, 7), float32] */;
  %371 = cast(%370, dtype="float32") /* ty=Tensor[(12, 14, 7), float32] */;
  %372 = sinh(%371) /* ty=Tensor[(12, 14, 7), float32] */;
  %373 = cast(%372, dtype="int64") /* ty=Tensor[(12, 14, 7), int64] */;
  %374 = shape_of(%370, dtype="int32") /* ty=Tensor[(3), int32] */;
  %375 = cast(%370, dtype="int64") /* ty=Tensor[(12, 14, 7), int64] */;
  %376 = dyn.reshape(%373, %374, newshape=[]) /* ty=Tensor[(?, ?, ?), int64] */;
  %377 = @func_10679(%369) /* ty=Tensor[(3, 11, 10), float32] */;
  %378 = maximum(%375, %376) /* ty=Tensor[(12, 14, 7), int64] */;
  (%377, %var_13042, %378)
}

def @func_13759() -> (Tensor[(12, 14, 7), float32], Tensor[(3, 16, 4), float32], Tensor[(2, 96), float32], Tensor[(15, 7, 10), bool], Tensor[(1050), int64], Tensor[(528), int32]) {
  %379 = @func_11498() /* ty=(Tensor[(12, 14, 7), float32],) */;
  %380 = %379.0;
  %381 = cast(%380, dtype="float32") /* ty=Tensor[(12, 14, 7), float32] */;
  %382 = cast(meta[relay.Constant][26] /* ty=Tensor[(2, 96), float32] */, dtype="float32") /* ty=Tensor[(2, 96), float32] */;
  %383 = cast(meta[relay.Constant][26] /* ty=Tensor[(2, 96), float32] */, dtype="float32") /* ty=Tensor[(2, 96), float32] */;
  %384 = reshape(%382, newshape=[3, 16, 4]) /* ty=Tensor[(3, 16, 4), float32] */;
  %385 = reshape(%383, newshape=[3, 16, 4]) /* ty=Tensor[(3, 16, 4), float32] */;
  %386 = @func_8115(%384, %385) /* ty=(Tensor[(3, 16, 4), float32],) */;
  %387 = cast(meta[relay.Constant][27] /* ty=Tensor[(1050), int64] */, dtype="int64") /* ty=Tensor[(1050), int64] */;
  %388 = cast(meta[relay.Constant][27] /* ty=Tensor[(1050), int64] */, dtype="int64") /* ty=Tensor[(1050), int64] */;
  %389 = cast(meta[relay.Constant][28] /* ty=Tensor[(528), int32] */, dtype="int32") /* ty=Tensor[(528), int32] */;
  %390 = reshape(%387, newshape=[15, 7, 10]) /* ty=Tensor[(15, 7, 10), int64] */;
  %391 = reshape(%388, newshape=[15, 7, 10]) /* ty=Tensor[(15, 7, 10), int64] */;
  %392 = reshape(%389, newshape=[528, 1]) /* ty=Tensor[(528, 1), int32] */;
  %393 = @func_3172(%390, %391, %392) /* ty=(Tensor[(15, 7, 10), bool], Tensor[(11, 16, 3), float32], Tensor[(528, 1), int32]) */;
  %394 = asin(%381) /* ty=Tensor[(12, 14, 7), float32] */;
  %395 = %386.0;
  %396 = %393.0;
  (%394, %395, meta[relay.Constant][26] /* ty=Tensor[(2, 96), float32] */, %396, meta[relay.Constant][27] /* ty=Tensor[(1050), int64] */, meta[relay.Constant][28] /* ty=Tensor[(528), int32] */)
}

def @func_2921(%var_2914: Tensor[(300), uint8]) -> (Tensor[(9, 5, 2), float32], Tensor[(4, 5, 15), float32], Tensor[(300), uint8]) {
  %397 = cast(meta[relay.Constant][29] /* ty=Tensor[(9, 5, 2), float32] */, dtype="float32") /* ty=Tensor[(9, 5, 2), float32] */;
  %398 = cast(%var_2914, dtype="uint8") /* ty=Tensor[(300), uint8] */;
  %399 = cast(%var_2914, dtype="uint8") /* ty=Tensor[(300), uint8] */;
  %400 = reshape(%398, newshape=[4, 5, 15]) /* ty=Tensor[(4, 5, 15), uint8] */;
  %401 = reshape(%399, newshape=[4, 5, 15]) /* ty=Tensor[(4, 5, 15), uint8] */;
  %402 = sinh(%397) /* ty=Tensor[(9, 5, 2), float32] */;
  %403 = @func_2566(%400, %401) /* ty=Tensor[(4, 5, 15), float32] */;
  (%402, %403, %var_2914)
}

def @func_10679(%var_10676: Tensor[(3, 11, 10), float32]) -> Tensor[(3, 11, 10), float32] {
  %404 = cast(%var_10676, dtype="float32") /* ty=Tensor[(3, 11, 10), float32] */;
  log2(%404) /* ty=Tensor[(3, 11, 10), float32] */
}

def @func_7549(%var_7521: float32) -> (Tensor[(11, 5, 1), float64], Tensor[(15, 2, 6), bool], Tensor[(180), float32], Tensor[(11, 5, 1), int8]) {
  %405 = cast(meta[relay.Constant][30] /* ty=Tensor[(11, 5, 1), float64] */, dtype="float64") /* ty=Tensor[(11, 5, 1), float64] */;
  %406 = cast(%var_7521, dtype="float32") /* ty=float32 */;
  %407 = cast(meta[relay.Constant][31] /* ty=Tensor[(180), float32] */, dtype="float32") /* ty=Tensor[(180), float32] */;
  %408 = reshape(%406, newshape=[]) /* ty=float32 */;
  %409 = reshape(%407, newshape=[15, 2, 6]) /* ty=Tensor[(15, 2, 6), float32] */;
  %410 = @func_3369(%408, %409) /* ty=(Tensor[(15, 2, 6), bool],) */;
  %411 = cast(meta[relay.Constant][30] /* ty=Tensor[(11, 5, 1), float64] */, dtype="float32") /* ty=Tensor[(11, 5, 1), float32] */;
  %412 = tan(%411) /* ty=Tensor[(11, 5, 1), float32] */;
  %413 = cast(%412, dtype="int8") /* ty=Tensor[(11, 5, 1), int8] */;
  %414 = cast(%var_7521, dtype="int8") /* ty=int8 */;
  %415 = sinh(%405) /* ty=Tensor[(11, 5, 1), float64] */;
  %416 = %410.0;
  %417 = logical_xor(%413, %414) /* ty=Tensor[(11, 5, 1), int8] */;
  (%415, %416, meta[relay.Constant][31] /* ty=Tensor[(180), float32] */, %417)
}

def @func_12140(%var_12101: Tensor[(1344), int64], %var_12102: Tensor[(154), float32]) -> (Tensor[(15, 6, 9), float64], Tensor[(810), float64], Tensor[(?, 11, 14), int32], Tensor[(1344), int64], Tensor[(154), float32], Tensor[(12, 14, 7), float64], Tensor[(11, 5, 1), float64], float32) {
  %418 = cast(meta[relay.Constant][32] /* ty=Tensor[(810), float64] */, dtype="float64") /* ty=Tensor[(810), float64] */;
  %419 = reshape(%418, newshape=[15, 6, 9]) /* ty=Tensor[(15, 6, 9), float64] */;
  %420 = cast(%var_12101, dtype="int64") /* ty=Tensor[(1344), int64] */;
  %421 = cast(%var_12101, dtype="int64") /* ty=Tensor[(1344), int64] */;
  %422 = cast(%var_12102, dtype="float32") /* ty=Tensor[(154), float32] */;
  %423 = reshape(%420, newshape=[16, 14, 6]) /* ty=Tensor[(16, 14, 6), int64] */;
  %424 = reshape(%421, newshape=[16, 14, 6]) /* ty=Tensor[(16, 14, 6), int64] */;
  %425 = reshape(%422, newshape=[1, 154]) /* ty=Tensor[(1, 154), float32] */;
  %426 = @func_4631(%423, %424, %425) /* ty=(Tensor[(16, 14, 6), bool], Tensor[(?, 11, 14), int32], Tensor[(1, 154), float32]) */;
  %427 = @func_11595() /* ty=(Tensor[(12, 14, 7), float32],) */;
  %428 = %427.0;
  %429 = cast(%428, dtype="float64") /* ty=Tensor[(12, 14, 7), float64] */;
  %430 = cast(4.6719f /* ty=float32 */, dtype="float32") /* ty=float32 */;
  %431 = reshape(%430, newshape=[]) /* ty=float32 */;
  %432 = @func_7549(%431) /* ty=(Tensor[(11, 5, 1), float64], Tensor[(15, 2, 6), bool], Tensor[(180), float32], Tensor[(11, 5, 1), int8]) */;
  %433 = @func_7164(%419) /* ty=Tensor[(15, 6, 9), float64] */;
  %434 = %426.1;
  %435 = atan(%429) /* ty=Tensor[(12, 14, 7), float64] */;
  %436 = %432.0;
  (%433, meta[relay.Constant][32] /* ty=Tensor[(810), float64] */, %434, %var_12101, %var_12102, %435, %436, 4.6719f /* ty=float32 */)
}

def @func_12442(%var_12433: Tensor[(7, 10, 4), float64]) -> Tensor[(7, 10, 4), float64] {
  %437 = cast(%var_12433, dtype="float64") /* ty=Tensor[(7, 10, 4), float64] */;
  sinh(%437) /* ty=Tensor[(7, 10, 4), float64] */
}

def @func_13518(%var_13468: Tensor[(780), float32], %var_13511: int16) -> (Tensor[(12, 14, 7), float32], Tensor[(576), float64], Tensor[(1, 576), float64], Tensor[(780), float32], Tensor[(385), float64], Tensor[(600), float32], int16, Tensor[(378), int32], Tensor[(55, 7), float64], Tensor[(810), float64], Tensor[(512), float64]) {
  %438 = cast(meta[relay.Constant][33] /* ty=Tensor[(1, 576), float64] */, dtype="float64") /* ty=Tensor[(1, 576), float64] */;
  %439 = cast(%var_13468, dtype="float32") /* ty=Tensor[(780), float32] */;
  %440 = reshape(%438, newshape=[576]) /* ty=Tensor[(576), float64] */;
  %441 = reshape(%439, newshape=[10, 78]) /* ty=Tensor[(10, 78), float32] */;
  %442 = @func_11948(%440, %441) /* ty=(Tensor[(140), uint8], Tensor[(12, 14, 7), float32], Tensor[(12, 14, 7), bool], Tensor[(12, 14, 7), float32], Tensor[(300), uint8], Tensor[(22, 3), int64], Tensor[(4, 9, 16), float64], Tensor[(576), float64], Tensor[(10, 78), float64]) */;
  %443 = cast(meta[relay.Constant][34] /* ty=Tensor[(600), float32] */, dtype="float32") /* ty=Tensor[(600), float32] */;
  %444 = cast(%var_13511, dtype="int16") /* ty=int16 */;
  %445 = cast(meta[relay.Constant][35] /* ty=Tensor[(378), int32] */, dtype="int32") /* ty=Tensor[(378), int32] */;
  %446 = cast(meta[relay.Constant][36] /* ty=Tensor[(55, 7), float64] */, dtype="float64") /* ty=Tensor[(55, 7), float64] */;
  %447 = cast(meta[relay.Constant][37] /* ty=Tensor[(810), float64] */, dtype="float64") /* ty=Tensor[(810), float64] */;
  %448 = cast(meta[relay.Constant][38] /* ty=Tensor[(512), float64] */, dtype="float64") /* ty=Tensor[(512), float64] */;
  %449 = reshape(%443, newshape=[10, 12, 5]) /* ty=Tensor[(10, 12, 5), float32] */;
  %450 = reshape(%444, newshape=[]) /* ty=int16 */;
  %451 = reshape(%445, newshape=[378]) /* ty=Tensor[(378), int32] */;
  %452 = reshape(%446, newshape=[385]) /* ty=Tensor[(385), float64] */;
  %453 = reshape(%447, newshape=[810]) /* ty=Tensor[(810), float64] */;
  %454 = reshape(%448, newshape=[4, 128]) /* ty=Tensor[(4, 128), float64] */;
  %455 = @func_10915(%449, %450, %451, %452, %453, %454) /* ty=(Tensor[(10, 12, 5), float32], Tensor[(180), float32], int16, Tensor[(3, 45), int16], Tensor[(378), int32], Tensor[(385), float64], Tensor[(15, 6, 9), float64], Tensor[(810), float64], Tensor[(16, 8, 4), uint8], Tensor[(4, 128), float64]) */;
  %456 = @func_12182() /* ty=Tensor[(12, 14, 7), float32] */;
  %457 = %442.7;
  %458 = %455.5;
  (%456, %457, meta[relay.Constant][33] /* ty=Tensor[(1, 576), float64] */, %var_13468, %458, meta[relay.Constant][34] /* ty=Tensor[(600), float32] */, %var_13511, meta[relay.Constant][35] /* ty=Tensor[(378), int32] */, meta[relay.Constant][36] /* ty=Tensor[(55, 7), float64] */, meta[relay.Constant][37] /* ty=Tensor[(810), float64] */, meta[relay.Constant][38] /* ty=Tensor[(512), float64] */)
}

def @func_10993(%var_10976: Tensor[(2, 3, 11), int64], %var_10977: Tensor[(2, 3, 11), int64]) -> Tensor[(2, 3, 11), float32] {
  %459 = cast(%var_10977, dtype="bool") /* ty=Tensor[(2, 3, 11), bool] */;
  %460 = shape_of(%var_10976, dtype="int32") /* ty=Tensor[(3), int32] */;
  %461 = cast(%var_10976, dtype="bool") /* ty=Tensor[(2, 3, 11), bool] */;
  %462 = dyn.reshape(%459, %460, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %463 = less(%461, %462) /* ty=Tensor[(2, 3, 11), bool] */;
  %464 = cast(%463, dtype="float32") /* ty=Tensor[(2, 3, 11), float32] */;
  %465 = atan(%464) /* ty=Tensor[(2, 3, 11), float32] */;
  %466 = cast(%465, dtype="float32") /* ty=Tensor[(2, 3, 11), float32] */;
  rsqrt(%466) /* ty=Tensor[(2, 3, 11), float32] */
}

def @func_7689(%var_7678: Tensor[(10, 15, 16), int16]) -> Tensor[(10, 15, 16), int16] {
  %467 = cast(meta[relay.Constant][39] /* ty=Tensor[(10, 15, 16), int16] */, dtype="int16") /* ty=Tensor[(10, 15, 16), int16] */;
  %468 = shape_of(%var_7678, dtype="int32") /* ty=Tensor[(3), int32] */;
  %469 = cast(%var_7678, dtype="int16") /* ty=Tensor[(10, 15, 16), int16] */;
  %470 = dyn.reshape(%467, %468, newshape=[]) /* ty=Tensor[(?, ?, ?), int16] */;
  subtract(%469, %470) /* ty=Tensor[(10, 15, 16), int16] */
}

def @func_11948(%var_11940: Tensor[(576), float64], %var_11941: Tensor[(10, 78), float32]) -> (Tensor[(140), uint8], Tensor[(12, 14, 7), float32], Tensor[(12, 14, 7), bool], Tensor[(12, 14, 7), float32], Tensor[(300), uint8], Tensor[(22, 3), int64], Tensor[(4, 9, 16), float64], Tensor[(576), float64], Tensor[(10, 78), float64]) {
  %471 = @func_11639() /* ty=Tensor[(12, 14, 7), float32] */;
  %472 = cast(%471, dtype="float32") /* ty=Tensor[(12, 14, 7), float32] */;
  %473 = reshape(%472, newshape=[12, 14, 7]) /* ty=Tensor[(12, 14, 7), float32] */;
  %474 = @func_11664(%473) /* ty=(Tensor[(12, 14, 7), float32], Tensor[(12, 14, 7), bool]) */;
  %475 = @func_11498() /* ty=(Tensor[(12, 14, 7), float32],) */;
  %476 = cast(meta[relay.Constant][40] /* ty=Tensor[(22, 3), int64] */, dtype="int64") /* ty=Tensor[(22, 3), int64] */;
  %477 = reshape(%476, newshape=[66]) /* ty=Tensor[(66), int64] */;
  %478 = @func_11802(%477) /* ty=(Tensor[(12, 14, 7), float32], Tensor[(15, 8, 16), int16], Tensor[(1920), int16], Tensor[(300), uint8], Tensor[(2, 3, 11), float32], Tensor[(66), int64]) */;
  %479 = cast(%var_11940, dtype="float64") /* ty=Tensor[(576), float64] */;
  %480 = cast(%var_11941, dtype="float32") /* ty=Tensor[(10, 78), float32] */;
  %481 = reshape(%479, newshape=[4, 9, 16]) /* ty=Tensor[(4, 9, 16), float64] */;
  %482 = reshape(%480, newshape=[780]) /* ty=Tensor[(780), float32] */;
  %483 = @func_4498(%481, %482) /* ty=(Tensor[(4, 9, 16), float64], Tensor[(5, 13, 12), float32], Tensor[(780), float32]) */;
  %484 = cast(%var_11941, dtype="float64") /* ty=Tensor[(10, 78), float64] */;
  %485 = @func_11828() /* ty=Tensor[(140), uint8] */;
  %486 = %474.1;
  %487 = %475.0;
  %488 = %478.3;
  %489 = %483.0;
  %490 = sinh(%484) /* ty=Tensor[(10, 78), float64] */;
  (%485, %471, %486, %487, %488, meta[relay.Constant][40] /* ty=Tensor[(22, 3), int64] */, %489, %var_11940, %490)
}

def @func_11639() -> Tensor[(12, 14, 7), float32] {
  %491 = @func_11595() /* ty=(Tensor[(12, 14, 7), float32],) */;
  %491.0
}

def @func_4262(%var_4246: Tensor[(16, 1, 14), int32]) -> (Tensor[(16, 4, 14), int32],) {
  %492 = cast(%var_4246, dtype="int32") /* ty=Tensor[(16, 1, 14), int32] */;
  %493 = cast(meta[relay.Constant][41] /* ty=Tensor[(16, 4, 14), int32] */, dtype="int32") /* ty=Tensor[(16, 4, 14), int32] */;
  %494 = add(%492, %493) /* ty=Tensor[(16, 4, 14), int32] */;
  (%494,)
}

def @func_2900(%var_2889: Tensor[(11, 16, 3), int32], %var_2890: Tensor[(11, 16, 3), int32]) -> (Tensor[(11, 16, 3), int32], Tensor[(11, 16, 3), float32]) {
  %495 = cast(%var_2890, dtype="int32") /* ty=Tensor[(11, 16, 3), int32] */;
  %496 = shape_of(%var_2889, dtype="int32") /* ty=Tensor[(3), int32] */;
  %497 = cast(%var_2889, dtype="int32") /* ty=Tensor[(11, 16, 3), int32] */;
  %498 = dyn.reshape(%495, %496, newshape=[]) /* ty=Tensor[(?, ?, ?), int32] */;
  %499 = cast(%var_2889, dtype="float32") /* ty=Tensor[(11, 16, 3), float32] */;
  %500 = logical_xor(%497, %498) /* ty=Tensor[(11, 16, 3), int32] */;
  %501 = acos(%499) /* ty=Tensor[(11, 16, 3), float32] */;
  (%500, %501)
}

def @func_12316(%var_12305: Tensor[(2, 9, 15), int16]) -> Tensor[(2, 9, 15), int16] {
  %502 = cast(meta[relay.Constant][42] /* ty=int16 */, dtype="int16") /* ty=int16 */;
  %503 = cast(%var_12305, dtype="int16") /* ty=Tensor[(2, 9, 15), int16] */;
  right_shift(%502, %503) /* ty=Tensor[(2, 9, 15), int16] */
}

def @func_2648(%var_2599: Tensor[(7, 3, 8), float32]) -> (Tensor[(7, 3, 8), bool], Tensor[(780), float32], Tensor[(5, 13, 12), float32], Tensor[(5, 13, 12), float32]) {
  %504 = cast(%var_2599, dtype="bool") /* ty=Tensor[(7, 3, 8), bool] */;
  %505 = shape_of(meta[relay.Constant][43] /* ty=Tensor[(7, 3, 8), float32] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %506 = cast(meta[relay.Constant][43] /* ty=Tensor[(7, 3, 8), float32] */, dtype="bool") /* ty=Tensor[(7, 3, 8), bool] */;
  %507 = dyn.reshape(%504, %505, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %508 = cast(meta[relay.Constant][44] /* ty=Tensor[(780), float32] */, dtype="float32") /* ty=Tensor[(780), float32] */;
  %509 = reshape(%508, newshape=[5, 13, 12]) /* ty=Tensor[(5, 13, 12), float32] */;
  %510 = @func_1599(%509) /* ty=(Tensor[(5, 13, 12), float32],) */;
  %511 = %510.0;
  %512 = cast(%511, dtype="float32") /* ty=Tensor[(5, 13, 12), float32] */;
  %513 = cast(meta[relay.Constant][44] /* ty=Tensor[(780), float32] */, dtype="float32") /* ty=Tensor[(780), float32] */;
  %514 = reshape(%513, newshape=[5, 13, 12]) /* ty=Tensor[(5, 13, 12), float32] */;
  %515 = @func_1599(%514) /* ty=(Tensor[(5, 13, 12), float32],) */;
  %516 = less(%506, %507) /* ty=Tensor[(7, 3, 8), bool] */;
  %517 = cosh(%512) /* ty=Tensor[(5, 13, 12), float32] */;
  %518 = %515.0;
  (%516, meta[relay.Constant][44] /* ty=Tensor[(780), float32] */, %517, %518)
}

def @func_12514(%var_12511: Tensor[(300), uint8], %var_12512: Tensor[(140), uint8]) -> (Tensor[(12, 14, 7), float32], Tensor[(50, 6), uint8], Tensor[(300), uint8], Tensor[(140), uint8]) {
  %519 = cast(%var_12511, dtype="uint8") /* ty=Tensor[(300), uint8] */;
  %520 = cast(%var_12512, dtype="uint8") /* ty=Tensor[(140), uint8] */;
  %521 = reshape(%519, newshape=[50, 6]) /* ty=Tensor[(50, 6), uint8] */;
  %522 = reshape(%520, newshape=[70, 2]) /* ty=Tensor[(70, 2), uint8] */;
  %523 = @func_12067(%521, %522) /* ty=(Tensor[(12, 14, 7), float32], Tensor[(4, 5, 15), float32], Tensor[(50, 6), uint8], Tensor[(960), uint32], Tensor[(70, 2), uint8]) */;
  %524 = @func_12182() /* ty=Tensor[(12, 14, 7), float32] */;
  %525 = %523.2;
  (%524, %525, %var_12511, %var_12512)
}

def @func_6376(%var_6350: Tensor[(16, 8, 4), float64]) -> (Tensor[(16, 8, 4), uint8], Tensor[(16, 7, 5), bool], Tensor[(560), float64], Tensor[(154), float32]) {
  %526 = cast(meta[relay.Constant][45] /* ty=Tensor[(16, 8, 4), float64] */, dtype="float64") /* ty=Tensor[(16, 8, 4), float64] */;
  %527 = erf(%526) /* ty=Tensor[(16, 8, 4), float64] */;
  %528 = cast(%var_6350, dtype="uint8") /* ty=Tensor[(16, 8, 4), uint8] */;
  %529 = shape_of(%527, dtype="int32") /* ty=Tensor[(3), int32] */;
  %530 = cast(%527, dtype="uint8") /* ty=Tensor[(16, 8, 4), uint8] */;
  %531 = dyn.reshape(%528, %529, newshape=[]) /* ty=Tensor[(?, ?, ?), uint8] */;
  %532 = cast(meta[relay.Constant][46] /* ty=Tensor[(560), float64] */, dtype="float64") /* ty=Tensor[(560), float64] */;
  %533 = cast(meta[relay.Constant][47] /* ty=Tensor[(154), float32] */, dtype="float32") /* ty=Tensor[(154), float32] */;
  %534 = cast(meta[relay.Constant][46] /* ty=Tensor[(560), float64] */, dtype="float64") /* ty=Tensor[(560), float64] */;
  %535 = reshape(%532, newshape=[16, 7, 5]) /* ty=Tensor[(16, 7, 5), float64] */;
  %536 = reshape(%533, newshape=[154]) /* ty=Tensor[(154), float32] */;
  %537 = reshape(%534, newshape=[16, 7, 5]) /* ty=Tensor[(16, 7, 5), float64] */;
  %538 = @func_1917(%535, %536, %537) /* ty=(Tensor[(16, 7, 5), float64], Tensor[(?, 11, 14), int32], Tensor[(154), float32], Tensor[(16, 7, 5), bool]) */;
  %539 = subtract(%530, %531) /* ty=Tensor[(16, 8, 4), uint8] */;
  %540 = %538.3;
  (%539, %540, meta[relay.Constant][46] /* ty=Tensor[(560), float64] */, meta[relay.Constant][47] /* ty=Tensor[(154), float32] */)
}

def @func_3172(%var_3158: Tensor[(15, 7, 10), int64], %var_3159: Tensor[(15, 7, 10), int64], %var_3166: Tensor[(528, 1), int32]) -> (Tensor[(15, 7, 10), bool], Tensor[(11, 16, 3), float32], Tensor[(528, 1), int32]) {
  %541 = cast(%var_3159, dtype="bool") /* ty=Tensor[(15, 7, 10), bool] */;
  %542 = shape_of(%var_3158, dtype="int32") /* ty=Tensor[(3), int32] */;
  %543 = cast(%var_3158, dtype="bool") /* ty=Tensor[(15, 7, 10), bool] */;
  %544 = dyn.reshape(%541, %542, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %545 = cast(%var_3166, dtype="int32") /* ty=Tensor[(528, 1), int32] */;
  %546 = cast(%var_3166, dtype="int32") /* ty=Tensor[(528, 1), int32] */;
  %547 = reshape(%545, newshape=[11, 16, 3]) /* ty=Tensor[(11, 16, 3), int32] */;
  %548 = reshape(%546, newshape=[11, 16, 3]) /* ty=Tensor[(11, 16, 3), int32] */;
  %549 = @func_2900(%547, %548) /* ty=(Tensor[(11, 16, 3), int32], Tensor[(11, 16, 3), float32]) */;
  %550 = not_equal(%543, %544) /* ty=Tensor[(15, 7, 10), bool] */;
  %551 = %549.1;
  (%550, %551, %var_3166)
}

def @func_8486(%var_8467: Tensor[(15, 8, 16), int16], %var_8468: Tensor[(15, 8, 16), int16], %var_8477: Tensor[(300), uint8]) -> (Tensor[(15, 8, 16), int16], Tensor[(4, 5, 15), float32], Tensor[(300), uint8]) {
  %552 = cast(%var_8468, dtype="int16") /* ty=Tensor[(15, 8, 16), int16] */;
  %553 = shape_of(%var_8467, dtype="int32") /* ty=Tensor[(3), int32] */;
  %554 = cast(%var_8467, dtype="int16") /* ty=Tensor[(15, 8, 16), int16] */;
  %555 = dyn.reshape(%552, %553, newshape=[]) /* ty=Tensor[(?, ?, ?), int16] */;
  %556 = cast(%var_8477, dtype="uint8") /* ty=Tensor[(300), uint8] */;
  %557 = cast(%var_8477, dtype="uint8") /* ty=Tensor[(300), uint8] */;
  %558 = reshape(%556, newshape=[4, 5, 15]) /* ty=Tensor[(4, 5, 15), uint8] */;
  %559 = reshape(%557, newshape=[4, 5, 15]) /* ty=Tensor[(4, 5, 15), uint8] */;
  %560 = bitwise_or(%554, %555) /* ty=Tensor[(15, 8, 16), int16] */;
  %561 = @func_2566(%558, %559) /* ty=Tensor[(4, 5, 15), float32] */;
  (%560, %561, %var_8477)
}

def @func_12725() -> (Tensor[(12, 14, 7), float32],) {
  %562 = @func_12338() /* ty=Tensor[(12, 14, 7), float32] */;
  %563 = cast(%562, dtype="float32") /* ty=Tensor[(12, 14, 7), float32] */;
  %564 = tan(%563) /* ty=Tensor[(12, 14, 7), float32] */;
  (%564,)
}

def @func_4589(%var_4571: Tensor[(12, 5, 16), uint32], %var_4572: Tensor[(12, 5, 16), uint32]) -> (Tensor[(12, 5, 16), bool],) {
  %565 = cast(%var_4572, dtype="bool") /* ty=Tensor[(12, 5, 16), bool] */;
  %566 = shape_of(%var_4571, dtype="int32") /* ty=Tensor[(3), int32] */;
  %567 = cast(%var_4571, dtype="bool") /* ty=Tensor[(12, 5, 16), bool] */;
  %568 = dyn.reshape(%565, %566, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %569 = less_equal(%567, %568) /* ty=Tensor[(12, 5, 16), bool] */;
  (%569,)
}

def @func_11595() -> (Tensor[(12, 14, 7), float32],) {
  %570 = @func_11411() /* ty=(Tensor[(12, 14, 7), float32],) */;
  %571 = %570.0;
  (%571,)
}

def @func_9574(%var_9558: Tensor[(8, 3, 4), float64], %var_9559: Tensor[(8, 3, 4), float64], %var_9572: Tensor[(224), int32]) -> (Tensor[(8, 3, 4), float64], Tensor[(16, 4, 14), int32], Tensor[(224), int32]) {
  %572 = cast(%var_9559, dtype="float64") /* ty=Tensor[(8, 3, 4), float64] */;
  %573 = shape_of(%var_9558, dtype="int32") /* ty=Tensor[(3), int32] */;
  %574 = cast(%var_9558, dtype="float64") /* ty=Tensor[(8, 3, 4), float64] */;
  %575 = dyn.reshape(%572, %573, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %576 = cast(%var_9572, dtype="int32") /* ty=Tensor[(224), int32] */;
  %577 = reshape(%576, newshape=[16, 1, 14]) /* ty=Tensor[(16, 1, 14), int32] */;
  %578 = @func_4262(%577) /* ty=(Tensor[(16, 4, 14), int32],) */;
  %579 = floor_mod(%574, %575) /* ty=Tensor[(8, 3, 4), float64] */;
  %580 = %578.0;
  (%579, %580, %var_9572)
}

def @func_7968(%var_7958: Tensor[(12, 1), float64], %var_7959: Tensor[(12, 1), float64]) -> (Tensor[(12, ?), float64],) {
  %581 = cast(%var_7959, dtype="float64") /* ty=Tensor[(12, 1), float64] */;
  %582 = shape_of(%var_7958, dtype="int32") /* ty=Tensor[(2), int32] */;
  %583 = cast(%var_7958, dtype="float64") /* ty=Tensor[(12, 1), float64] */;
  %584 = dyn.reshape(%581, %582, newshape=[]) /* ty=Tensor[(?, ?), float64] */;
  %585 = mod(%583, %584) /* ty=Tensor[(12, ?), float64] */;
  (%585,)
}

def @func_12050() -> (Tensor[(12, 14, 7), float32],) {
  %586 = @func_11976() /* ty=Tensor[(12, 14, 7), float32] */;
  (%586,)
}

def @func_11664(%var_11659: Tensor[(12, 14, 7), float32]) -> (Tensor[(12, 14, 7), float32], Tensor[(12, 14, 7), bool]) {
  %587 = @func_11411() /* ty=(Tensor[(12, 14, 7), float32],) */;
  %588 = %587.0;
  %589 = cast(%var_11659, dtype="bool") /* ty=Tensor[(12, 14, 7), bool] */;
  %590 = shape_of(%588, dtype="int32") /* ty=Tensor[(3), int32] */;
  %591 = cast(%588, dtype="bool") /* ty=Tensor[(12, 14, 7), bool] */;
  %592 = dyn.reshape(%589, %590, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %593 = @func_11639() /* ty=Tensor[(12, 14, 7), float32] */;
  %594 = greater(%591, %592) /* ty=Tensor[(12, 14, 7), bool] */;
  (%593, %594)
}

def @func_11724() -> (Tensor[(12, 14, 7), float32], Tensor[(960), uint32], Tensor[(140), uint8], Tensor[(3, 600), float32], Tensor[(12, 15, 10), float64]) {
  %595 = @func_11411() /* ty=(Tensor[(12, 14, 7), float32],) */;
  %596 = cast(meta[relay.Constant][48] /* ty=Tensor[(140), uint8] */, dtype="uint8") /* ty=Tensor[(140), uint8] */;
  %597 = reshape(%596, newshape=[5, 14, 2]) /* ty=Tensor[(5, 14, 2), uint8] */;
  %598 = @func_6871(%597) /* ty=(Tensor[(12, 5, 16), bool], Tensor[(960), uint32], Tensor[(5, 14, 2), float32]) */;
  %599 = cast(meta[relay.Constant][49] /* ty=Tensor[(3, 600), float32] */, dtype="float32") /* ty=Tensor[(3, 600), float32] */;
  %600 = reshape(%599, newshape=[12, 15, 10]) /* ty=Tensor[(12, 15, 10), float32] */;
  %601 = @func_2758(%600) /* ty=Tensor[(12, 15, 10), float32] */;
  %602 = cast(%601, dtype="float64") /* ty=Tensor[(12, 15, 10), float64] */;
  %603 = %595.0;
  %604 = %598.1;
  %605 = acos(%602) /* ty=Tensor[(12, 15, 10), float64] */;
  (%603, %604, meta[relay.Constant][48] /* ty=Tensor[(140), uint8] */, meta[relay.Constant][49] /* ty=Tensor[(3, 600), float32] */, %605)
}

def @func_421(%var_394: Tensor[(1, 11, 14), float32]) -> Tensor[(?, 11, 14), int32] {
  %606 = cast(%var_394, dtype="float32") /* ty=Tensor[(1, 11, 14), float32] */;
  %607 = atan(%606) /* ty=Tensor[(1, 11, 14), float32] */;
  %608 = cast(%607, dtype="float64") /* ty=Tensor[(1, 11, 14), float64] */;
  %609 = cos(%608) /* ty=Tensor[(1, 11, 14), float64] */;
  %610 = cast(%var_394, dtype="int32") /* ty=Tensor[(1, 11, 14), int32] */;
  %611 = shape_of(%609, dtype="int32") /* ty=Tensor[(3), int32] */;
  %612 = cast(%609, dtype="int32") /* ty=Tensor[(1, 11, 14), int32] */;
  %613 = dyn.reshape(%610, %611, newshape=[]) /* ty=Tensor[(?, ?, ?), int32] */;
  maximum(%612, %613) /* ty=Tensor[(?, 11, 14), int32] */
}

def @func_6604(%var_6589: int16, %var_6590: Tensor[(1, 9, 15), int16], %var_6595: Tensor[(378), int32], %var_6598: Tensor[(55, 7), float64]) -> (Tensor[(1, 9, 15), int16], Tensor[(180), float32], Tensor[(378), int32], Tensor[(960, 1), uint32], Tensor[(22, 7), float32], Tensor[(55, 7), float64], Tensor[(539), float32], Tensor[(528), int32]) {
  %614 = cast(%var_6589, dtype="int16") /* ty=int16 */;
  %615 = cast(%var_6590, dtype="int16") /* ty=Tensor[(1, 9, 15), int16] */;
  %616 = cast(%var_6595, dtype="int32") /* ty=Tensor[(378), int32] */;
  %617 = cast(meta[relay.Constant][50] /* ty=Tensor[(960, 1), uint32] */, dtype="uint32") /* ty=Tensor[(960, 1), uint32] */;
  %618 = cast(meta[relay.Constant][51] /* ty=Tensor[(22, 7), float32] */, dtype="float32") /* ty=Tensor[(22, 7), float32] */;
  %619 = cast(%var_6598, dtype="float64") /* ty=Tensor[(55, 7), float64] */;
  %620 = cast(meta[relay.Constant][52] /* ty=Tensor[(539), float32] */, dtype="float32") /* ty=Tensor[(539), float32] */;
  %621 = reshape(%616, newshape=[14, 3, 9]) /* ty=Tensor[(14, 3, 9), int32] */;
  %622 = reshape(%617, newshape=[960]) /* ty=Tensor[(960), uint32] */;
  %623 = reshape(%618, newshape=[154]) /* ty=Tensor[(154), float32] */;
  %624 = reshape(%619, newshape=[385]) /* ty=Tensor[(385), float64] */;
  %625 = reshape(%620, newshape=[539]) /* ty=Tensor[(539), float32] */;
  %626 = @func_5146(%621, %622, %623, %624, %625) /* ty=(Tensor[(14, 3, 9), bool], Tensor[(14, 3, 9), float64], Tensor[(12, 5, 16), bool], Tensor[(960), uint32], Tensor[(16, 14, 6), bool], Tensor[(1344), int64], Tensor[(154), float32], Tensor[(11, 5, 7), float64], Tensor[(385), float64], Tensor[(539), float32], Tensor[(15, 2, 6), bool], float32, Tensor[(180), float32]) */;
  %627 = cast(%var_6598, dtype="float64") /* ty=Tensor[(55, 7), float64] */;
  %628 = cast(meta[relay.Constant][52] /* ty=Tensor[(539), float32] */, dtype="float32") /* ty=Tensor[(539), float32] */;
  %629 = reshape(%627, newshape=[11, 5, 7]) /* ty=Tensor[(11, 5, 7), float64] */;
  %630 = reshape(%628, newshape=[539]) /* ty=Tensor[(539), float32] */;
  %631 = @func_4688(%629, %630) /* ty=(Tensor[(11, 5, 7), float64], Tensor[(4, 5, 15), float32], Tensor[(539), float32], Tensor[(528), int32]) */;
  %632 = bitwise_xor(%614, %615) /* ty=Tensor[(1, 9, 15), int16] */;
  %633 = %626.12;
  %634 = %631.3;
  (%632, %633, %var_6595, meta[relay.Constant][50] /* ty=Tensor[(960, 1), uint32] */, meta[relay.Constant][51] /* ty=Tensor[(22, 7), float32] */, %var_6598, meta[relay.Constant][52] /* ty=Tensor[(539), float32] */, %634)
}

def @func_11367(%var_11332: Tensor[(15, 10, 13), float32], %var_11336: Tensor[(15, 10, 13), float32], %var_11344: int16, %var_11345: Tensor[(135), int16], %var_11346: Tensor[(378), int32], %var_11347: Tensor[(55, 7), float64], %var_11365: Tensor[(300), uint8]) -> (Tensor[(180), float32], int16, Tensor[(135), int16], Tensor[(378), int32], Tensor[(55, 7), float64], Tensor[(15, 10, 13), float32], Tensor[(4, 5, 15), float32], Tensor[(300), uint8]) {
  %635 = cast(%var_11344, dtype="int16") /* ty=int16 */;
  %636 = cast(%var_11345, dtype="int16") /* ty=Tensor[(135), int16] */;
  %637 = cast(%var_11346, dtype="int32") /* ty=Tensor[(378), int32] */;
  %638 = cast(%var_11347, dtype="float64") /* ty=Tensor[(55, 7), float64] */;
  %639 = reshape(%635, newshape=[]) /* ty=int16 */;
  %640 = reshape(%636, newshape=[1, 9, 15]) /* ty=Tensor[(1, 9, 15), int16] */;
  %641 = reshape(%637, newshape=[378]) /* ty=Tensor[(378), int32] */;
  %642 = reshape(%638, newshape=[55, 7]) /* ty=Tensor[(55, 7), float64] */;
  %643 = @func_6604(%639, %640, %641, %642) /* ty=(Tensor[(1, 9, 15), int16], Tensor[(180), float32], Tensor[(378), int32], Tensor[(960, 1), uint32], Tensor[(22, 7), float32], Tensor[(55, 7), float64], Tensor[(539), float32], Tensor[(528), int32]) */;
  %644 = cast(%var_11332, dtype="float32") /* ty=Tensor[(15, 10, 13), float32] */;
  %645 = exp(%644) /* ty=Tensor[(15, 10, 13), float32] */;
  %646 = cast(%645, dtype="float64") /* ty=Tensor[(15, 10, 13), float64] */;
  %647 = log2(%646) /* ty=Tensor[(15, 10, 13), float64] */;
  %648 = cast(%var_11336, dtype="bool") /* ty=Tensor[(15, 10, 13), bool] */;
  %649 = shape_of(%var_11332, dtype="int32") /* ty=Tensor[(3), int32] */;
  %650 = cast(%var_11332, dtype="bool") /* ty=Tensor[(15, 10, 13), bool] */;
  %651 = dyn.reshape(%648, %649, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %652 = greater(%650, %651) /* ty=Tensor[(15, 10, 13), bool] */;
  %653 = cast(%652, dtype="bool") /* ty=Tensor[(15, 10, 13), bool] */;
  %654 = shape_of(%647, dtype="int32") /* ty=Tensor[(3), int32] */;
  %655 = cast(%647, dtype="bool") /* ty=Tensor[(15, 10, 13), bool] */;
  %656 = dyn.reshape(%653, %654, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %657 = equal(%655, %656) /* ty=Tensor[(15, 10, 13), bool] */;
  %658 = cast(%657, dtype="float32") /* ty=Tensor[(15, 10, 13), float32] */;
  %659 = cast(%var_11365, dtype="uint8") /* ty=Tensor[(300), uint8] */;
  %660 = cast(%var_11365, dtype="uint8") /* ty=Tensor[(300), uint8] */;
  %661 = reshape(%659, newshape=[4, 5, 15]) /* ty=Tensor[(4, 5, 15), uint8] */;
  %662 = reshape(%660, newshape=[4, 5, 15]) /* ty=Tensor[(4, 5, 15), uint8] */;
  %663 = %643.1;
  %664 = acosh(%658) /* ty=Tensor[(15, 10, 13), float32] */;
  %665 = @func_2566(%661, %662) /* ty=Tensor[(4, 5, 15), float32] */;
  (%663, %var_11344, %var_11345, %var_11346, %var_11347, %664, %665, %var_11365)
}

def @func_4724(%var_4703: Tensor[(13, 8, 1), float64]) -> (Tensor[(13, 8, 1), float64], Tensor[(4, 5, 15), float32], Tensor[(300), uint8]) {
  %666 = cast(%var_4703, dtype="float64") /* ty=Tensor[(13, 8, 1), float64] */;
  %667 = cast(meta[relay.Constant][53] /* ty=Tensor[(300), uint8] */, dtype="uint8") /* ty=Tensor[(300), uint8] */;
  %668 = cast(meta[relay.Constant][53] /* ty=Tensor[(300), uint8] */, dtype="uint8") /* ty=Tensor[(300), uint8] */;
  %669 = reshape(%667, newshape=[4, 5, 15]) /* ty=Tensor[(4, 5, 15), uint8] */;
  %670 = reshape(%668, newshape=[4, 5, 15]) /* ty=Tensor[(4, 5, 15), uint8] */;
  %671 = sinh(%666) /* ty=Tensor[(13, 8, 1), float64] */;
  %672 = @func_2566(%669, %670) /* ty=Tensor[(4, 5, 15), float32] */;
  (%671, %672, meta[relay.Constant][53] /* ty=Tensor[(300), uint8] */)
}

def @func_2566(%var_2552: Tensor[(4, 5, 15), uint8], %var_2553: Tensor[(4, 5, 15), uint8]) -> Tensor[(4, 5, 15), float32] {
  %673 = cast(%var_2553, dtype="uint8") /* ty=Tensor[(4, 5, 15), uint8] */;
  %674 = shape_of(%var_2552, dtype="int32") /* ty=Tensor[(3), int32] */;
  %675 = cast(%var_2552, dtype="uint8") /* ty=Tensor[(4, 5, 15), uint8] */;
  %676 = dyn.reshape(%673, %674, newshape=[]) /* ty=Tensor[(?, ?, ?), uint8] */;
  %677 = multiply(%675, %676) /* ty=Tensor[(4, 5, 15), uint8] */;
  %678 = cast(%677, dtype="float32") /* ty=Tensor[(4, 5, 15), float32] */;
  log2(%678) /* ty=Tensor[(4, 5, 15), float32] */
}

def @func_1917(%var_1895: Tensor[(16, 7, 5), float64], %var_1899: Tensor[(154), float32], %var_1912: Tensor[(16, 7, 5), float64]) -> (Tensor[(16, 7, 5), float64], Tensor[(?, 11, 14), int32], Tensor[(154), float32], Tensor[(16, 7, 5), bool]) {
  %679 = cast(%var_1895, dtype="float64") /* ty=Tensor[(16, 7, 5), float64] */;
  %680 = cast(%var_1899, dtype="float32") /* ty=Tensor[(154), float32] */;
  %681 = reshape(%680, newshape=[1, 11, 14]) /* ty=Tensor[(1, 11, 14), float32] */;
  %682 = cast(%var_1912, dtype="bool") /* ty=Tensor[(16, 7, 5), bool] */;
  %683 = shape_of(%var_1895, dtype="int32") /* ty=Tensor[(3), int32] */;
  %684 = cast(%var_1895, dtype="bool") /* ty=Tensor[(16, 7, 5), bool] */;
  %685 = dyn.reshape(%682, %683, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %686 = log10(%679) /* ty=Tensor[(16, 7, 5), float64] */;
  %687 = @func_421(%681) /* ty=Tensor[(?, 11, 14), int32] */;
  %688 = less(%684, %685) /* ty=Tensor[(16, 7, 5), bool] */;
  (%686, %687, %var_1899, %688)
}

def @func_11828() -> Tensor[(140), uint8] {
  %689 = @func_11724() /* ty=(Tensor[(12, 14, 7), float32], Tensor[(960), uint32], Tensor[(140), uint8], Tensor[(3, 600), float32], Tensor[(12, 15, 10), float64]) */;
  %689.2
}

def @func_7302(%var_7268: Tensor[(15, 8, 7), float32], %var_7282: Tensor[(1800), float32]) -> (Tensor[(12, 15, 10), float32], Tensor[(1800), float32], Tensor[(4, 5, 15), float32], Tensor[(104), float64], Tensor[(11, 5, 7), float64], Tensor[(385), float64], Tensor[(539), float32], Tensor[(15, 8, 7), int16]) {
  %690 = cast(%var_7282, dtype="float32") /* ty=Tensor[(1800), float32] */;
  %691 = reshape(%690, newshape=[12, 15, 10]) /* ty=Tensor[(12, 15, 10), float32] */;
  %692 = cast(meta[relay.Constant][54] /* ty=Tensor[(104), float64] */, dtype="float64") /* ty=Tensor[(104), float64] */;
  %693 = reshape(%692, newshape=[13, 8, 1]) /* ty=Tensor[(13, 8, 1), float64] */;
  %694 = @func_4724(%693) /* ty=(Tensor[(13, 8, 1), float64], Tensor[(4, 5, 15), float32], Tensor[(300), uint8]) */;
  %695 = cast(meta[relay.Constant][55] /* ty=Tensor[(385), float64] */, dtype="float64") /* ty=Tensor[(385), float64] */;
  %696 = cast(meta[relay.Constant][56] /* ty=Tensor[(539), float32] */, dtype="float32") /* ty=Tensor[(539), float32] */;
  %697 = reshape(%695, newshape=[11, 5, 7]) /* ty=Tensor[(11, 5, 7), float64] */;
  %698 = reshape(%696, newshape=[539]) /* ty=Tensor[(539), float32] */;
  %699 = @func_4688(%697, %698) /* ty=(Tensor[(11, 5, 7), float64], Tensor[(4, 5, 15), float32], Tensor[(539), float32], Tensor[(528), int32]) */;
  %700 = cast(%var_7268, dtype="float32") /* ty=Tensor[(15, 8, 7), float32] */;
  %701 = sin(%700) /* ty=Tensor[(15, 8, 7), float32] */;
  %702 = cast(%var_7268, dtype="int16") /* ty=Tensor[(15, 8, 7), int16] */;
  %703 = shape_of(%701, dtype="int32") /* ty=Tensor[(3), int32] */;
  %704 = cast(%701, dtype="int16") /* ty=Tensor[(15, 8, 7), int16] */;
  %705 = dyn.reshape(%702, %703, newshape=[]) /* ty=Tensor[(?, ?, ?), int16] */;
  %706 = @func_2758(%691) /* ty=Tensor[(12, 15, 10), float32] */;
  %707 = %694.1;
  %708 = %699.0;
  %709 = subtract(%704, %705) /* ty=Tensor[(15, 8, 7), int16] */;
  (%706, %var_7282, %707, meta[relay.Constant][54] /* ty=Tensor[(104), float64] */, %708, meta[relay.Constant][55] /* ty=Tensor[(385), float64] */, meta[relay.Constant][56] /* ty=Tensor[(539), float32] */, %709)
}

def @func_4317(%var_4296: Tensor[(14, 12, 15), float64], %var_4305: float32, %var_4306: Tensor[(180), float32], %var_4313: Tensor[(224), int32]) -> (Tensor[(14, 12, 15), float64], Tensor[(14, 12, 15), float64], Tensor[(15, 2, 6), bool], float32, Tensor[(180), float32], Tensor[(16, 4, 14), int32], Tensor[(224), int32]) {
  %710 = cast(%var_4296, dtype="float64") /* ty=Tensor[(14, 12, 15), float64] */;
  %711 = cast(%var_4296, dtype="float64") /* ty=Tensor[(14, 12, 15), float64] */;
  %712 = cast(%var_4305, dtype="float32") /* ty=float32 */;
  %713 = cast(%var_4306, dtype="float32") /* ty=Tensor[(180), float32] */;
  %714 = reshape(%712, newshape=[]) /* ty=float32 */;
  %715 = reshape(%713, newshape=[15, 2, 6]) /* ty=Tensor[(15, 2, 6), float32] */;
  %716 = @func_3369(%714, %715) /* ty=(Tensor[(15, 2, 6), bool],) */;
  %717 = cast(%var_4313, dtype="int32") /* ty=Tensor[(224), int32] */;
  %718 = reshape(%717, newshape=[16, 1, 14]) /* ty=Tensor[(16, 1, 14), int32] */;
  %719 = @func_4262(%718) /* ty=(Tensor[(16, 4, 14), int32],) */;
  %720 = acos(%710) /* ty=Tensor[(14, 12, 15), float64] */;
  %721 = acosh(%711) /* ty=Tensor[(14, 12, 15), float64] */;
  %722 = %716.0;
  %723 = %719.0;
  (%720, %721, %722, %var_4305, %var_4306, %723, %var_4313)
}

def @func_12352() -> (Tensor[(12, 14, 7), uint64], Tensor[(12, 14, 7), float32]) {
  %724 = @func_12007() /* ty=(Tensor[(12, 14, 7), uint64],) */;
  %725 = %724.0;
  %726 = @func_11639() /* ty=Tensor[(12, 14, 7), float32] */;
  (%725, %726)
}

def @func_1599(%var_1593: Tensor[(5, 13, 12), float32]) -> (Tensor[(5, 13, 12), float32],) {
  %727 = cast(%var_1593, dtype="float32") /* ty=Tensor[(5, 13, 12), float32] */;
  %728 = sinh(%727) /* ty=Tensor[(5, 13, 12), float32] */;
  (%728,)
}

def @func_12987() -> (Tensor[(12, 15, 10), float64],) {
  %729 = @func_12530() /* ty=Tensor[(12, 15, 10), float64] */;
  (%729,)
}

def @func_12338() -> Tensor[(12, 14, 7), float32] {
  @func_11976() /* ty=Tensor[(12, 14, 7), float32] */
}

def @func_8115(%var_8110: Tensor[(3, 16, 4), float32], %var_8111: Tensor[(3, 16, 4), float32]) -> (Tensor[(3, 16, 4), float32],) {
  %730 = cast(%var_8111, dtype="float32") /* ty=Tensor[(3, 16, 4), float32] */;
  %731 = shape_of(%var_8110, dtype="int32") /* ty=Tensor[(3), int32] */;
  %732 = cast(%var_8110, dtype="float32") /* ty=Tensor[(3, 16, 4), float32] */;
  %733 = dyn.reshape(%730, %731, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %734 = power(%732, %733) /* ty=Tensor[(3, 16, 4), float32] */;
  (%734,)
}

def @func_12866() -> Tensor[(12, 14, 7), float32] {
  @func_12810() /* ty=Tensor[(12, 14, 7), float32] */
}

def @func_11436(%var_11429: Tensor[(11, 14), float32]) -> (Tensor[(12, 14, 7), float32], Tensor[(4, 5, 15), float32], Tensor[(360), float64], Tensor[(1800, 1), float32], Tensor[(12, 4, 6), float32], Tensor[(528), int32], Tensor[(?, 11, 14), int32], Tensor[(11, 14), float32]) {
  %735 = @func_11411() /* ty=(Tensor[(12, 14, 7), float32],) */;
  %736 = cast(meta[relay.Constant][57] /* ty=Tensor[(360), float64] */, dtype="float64") /* ty=Tensor[(360), float64] */;
  %737 = cast(meta[relay.Constant][58] /* ty=Tensor[(1800, 1), float32] */, dtype="float32") /* ty=Tensor[(1800, 1), float32] */;
  %738 = reshape(%736, newshape=[10, 6, 6]) /* ty=Tensor[(10, 6, 6), float64] */;
  %739 = reshape(%737, newshape=[1800]) /* ty=Tensor[(1800), float32] */;
  %740 = @func_9089(%738, %739) /* ty=(Tensor[(10, 6, 6), float64], Tensor[(4, 5, 15), float32], Tensor[(300), uint8], Tensor[(12, ?), float64], Tensor[(12), float64], Tensor[(104), float64], Tensor[(6, 140), float32], Tensor[(1800), float32]) */;
  %741 = cast(meta[relay.Constant][59] /* ty=Tensor[(528), int32] */, dtype="int32") /* ty=Tensor[(528), int32] */;
  %742 = reshape(%741, newshape=[8, 66]) /* ty=Tensor[(8, 66), int32] */;
  %743 = @func_8726(%742) /* ty=(Tensor[(12, 4, 6), float32], Tensor[(7, 11, 7), float32], Tensor[(539, 1), float32], Tensor[(8, 66), int32]) */;
  %744 = cast(%var_11429, dtype="float32") /* ty=Tensor[(11, 14), float32] */;
  %745 = reshape(%744, newshape=[1, 11, 14]) /* ty=Tensor[(1, 11, 14), float32] */;
  %746 = %735.0;
  %747 = %740.1;
  %748 = %743.0;
  %749 = @func_421(%745) /* ty=Tensor[(?, 11, 14), int32] */;
  (%746, %747, meta[relay.Constant][57] /* ty=Tensor[(360), float64] */, meta[relay.Constant][58] /* ty=Tensor[(1800, 1), float32] */, %748, meta[relay.Constant][59] /* ty=Tensor[(528), int32] */, %749, %var_11429)
}

def @func_11411() -> (Tensor[(12, 14, 7), float32],) {
  %750 = cast(meta[relay.Constant][60] /* ty=Tensor[(12, 14, 7), float32] */, dtype="float32") /* ty=Tensor[(12, 14, 7), float32] */;
  %751 = asinh(%750) /* ty=Tensor[(12, 14, 7), float32] */;
  (%751,)
}

def @func_13791() -> (Tensor[(12, 14, 7), float32],) {
  %752 = @func_12866() /* ty=Tensor[(12, 14, 7), float32] */;
  (%752,)
}

def @func_13376(%var_13357: float32, %var_13358: Tensor[(180), float32]) -> (Tensor[(13, 8, 1), float64], Tensor[(104), float64], Tensor[(15, 2, 6), bool], Tensor[(180), float32], Tensor[(12, 14, 7), float32]) {
  %753 = cast(meta[relay.Constant][61] /* ty=Tensor[(104), float64] */, dtype="float64") /* ty=Tensor[(104), float64] */;
  %754 = reshape(%753, newshape=[13, 8, 1]) /* ty=Tensor[(13, 8, 1), float64] */;
  %755 = @func_4724(%754) /* ty=(Tensor[(13, 8, 1), float64], Tensor[(4, 5, 15), float32], Tensor[(300), uint8]) */;
  %756 = cast(%var_13357, dtype="float32") /* ty=float32 */;
  %757 = cast(%var_13358, dtype="float32") /* ty=Tensor[(180), float32] */;
  %758 = reshape(%756, newshape=[]) /* ty=float32 */;
  %759 = reshape(%757, newshape=[15, 2, 6]) /* ty=Tensor[(15, 2, 6), float32] */;
  %760 = @func_3369(%758, %759) /* ty=(Tensor[(15, 2, 6), bool],) */;
  %761 = @func_12202() /* ty=Tensor[(12, 14, 7), float32] */;
  %762 = cast(%761, dtype="float32") /* ty=Tensor[(12, 14, 7), float32] */;
  %763 = cast(%var_13357, dtype="float32") /* ty=float32 */;
  %764 = %755.0;
  %765 = %760.0;
  %766 = power(%762, %763) /* ty=Tensor[(12, 14, 7), float32] */;
  (%764, meta[relay.Constant][61] /* ty=Tensor[(104), float64] */, %765, %var_13358, %766)
}

def @func_9431(%var_9419: Tensor[(3, 14, 13), float32]) -> (Tensor[(3, 14, 13), float32],) {
  %767 = cast(-8.92872f /* ty=float32 */, dtype="float32") /* ty=float32 */;
  %768 = cast(%var_9419, dtype="float32") /* ty=Tensor[(3, 14, 13), float32] */;
  %769 = floor_divide(%767, %768) /* ty=Tensor[(3, 14, 13), float32] */;
  (%769,)
}

def @func_13115(%var_13082: Tensor[(1950), float32], %var_13084: Tensor[(45, 3), int16], %var_13085: Tensor[(378), int32]) -> (Tensor[(140), uint8], Tensor[(55, 7), float64], Tensor[(1950), float32], int16, Tensor[(45, 3), int16], Tensor[(385), float64], Tensor[(300), uint8], Tensor[(?, 11, 14), int32], Tensor[(154, ?), uint32], Tensor[(154, 378), float32]) {
  %770 = cast(%var_13082, dtype="float32") /* ty=Tensor[(1950), float32] */;
  %771 = cast(%var_13082, dtype="float32") /* ty=Tensor[(1950), float32] */;
  %772 = cast(meta[relay.Constant][62] /* ty=int16 */, dtype="int16") /* ty=int16 */;
  %773 = cast(%var_13084, dtype="int16") /* ty=Tensor[(45, 3), int16] */;
  %774 = cast(%var_13085, dtype="int32") /* ty=Tensor[(378), int32] */;
  %775 = cast(meta[relay.Constant][63] /* ty=Tensor[(385), float64] */, dtype="float64") /* ty=Tensor[(385), float64] */;
  %776 = cast(meta[relay.Constant][64] /* ty=Tensor[(300), uint8] */, dtype="uint8") /* ty=Tensor[(300), uint8] */;
  %777 = reshape(%770, newshape=[15, 10, 13]) /* ty=Tensor[(15, 10, 13), float32] */;
  %778 = reshape(%771, newshape=[15, 10, 13]) /* ty=Tensor[(15, 10, 13), float32] */;
  %779 = reshape(%772, newshape=[]) /* ty=int16 */;
  %780 = reshape(%773, newshape=[135]) /* ty=Tensor[(135), int16] */;
  %781 = reshape(%774, newshape=[378]) /* ty=Tensor[(378), int32] */;
  %782 = reshape(%775, newshape=[55, 7]) /* ty=Tensor[(55, 7), float64] */;
  %783 = reshape(%776, newshape=[300]) /* ty=Tensor[(300), uint8] */;
  %784 = @func_11367(%777, %778, %779, %780, %781, %782, %783) /* ty=(Tensor[(180), float32], int16, Tensor[(135), int16], Tensor[(378), int32], Tensor[(55, 7), float64], Tensor[(15, 10, 13), float32], Tensor[(4, 5, 15), float32], Tensor[(300), uint8]) */;
  %785 = cast(meta[relay.Constant][65] /* ty=Tensor[(154, 1), float32] */, dtype="float32") /* ty=Tensor[(154, 1), float32] */;
  %786 = reshape(%785, newshape=[1, 11, 14]) /* ty=Tensor[(1, 11, 14), float32] */;
  %787 = cast(meta[relay.Constant][65] /* ty=Tensor[(154, 1), float32] */, dtype="float32") /* ty=Tensor[(154, 1), float32] */;
  %788 = sinh(%787) /* ty=Tensor[(154, 1), float32] */;
  %789 = cast(meta[relay.Constant][65] /* ty=Tensor[(154, 1), float32] */, dtype="uint32") /* ty=Tensor[(154, 1), uint32] */;
  %790 = shape_of(%788, dtype="int32") /* ty=Tensor[(2), int32] */;
  %791 = cast(%788, dtype="uint32") /* ty=Tensor[(154, 1), uint32] */;
  %792 = dyn.reshape(%789, %790, newshape=[]) /* ty=Tensor[(?, ?), uint32] */;
  %793 = cast(%788, dtype="float32") /* ty=Tensor[(154, 1), float32] */;
  %794 = cast(%var_13085, dtype="float32") /* ty=Tensor[(378), float32] */;
  %795 = @func_11828() /* ty=Tensor[(140), uint8] */;
  %796 = %784.4;
  %797 = @func_421(%786) /* ty=Tensor[(?, 11, 14), int32] */;
  %798 = add(%791, %792) /* ty=Tensor[(154, ?), uint32] */;
  %799 = floor_mod(%793, %794) /* ty=Tensor[(154, 378), float32] */;
  (%795, %796, %var_13082, meta[relay.Constant][62] /* ty=int16 */, %var_13084, meta[relay.Constant][63] /* ty=Tensor[(385), float64] */, meta[relay.Constant][64] /* ty=Tensor[(300), uint8] */, %797, %798, %799)
}

def @func_13439() -> (Tensor[(12, 14, 7), float32],) {
  %800 = @func_12766() /* ty=Tensor[(12, 14, 7), float32] */;
  (%800,)
}

def @func_12474(%var_12462: Tensor[(576), float64], %var_12463: Tensor[(780), float32], %var_12471: Tensor[(378), int32], %var_12472: Tensor[(385), float64]) -> (Tensor[(12, 14, 7), float32], Tensor[(4, 9, 16), float64], Tensor[(576), float64], Tensor[(780), float32], Tensor[(1, 9, 15), int16], int16, Tensor[(135), int16], Tensor[(378), int32], Tensor[(385), float64]) {
  %801 = @func_11411() /* ty=(Tensor[(12, 14, 7), float32],) */;
  %802 = cast(%var_12462, dtype="float64") /* ty=Tensor[(576), float64] */;
  %803 = cast(%var_12463, dtype="float32") /* ty=Tensor[(780), float32] */;
  %804 = reshape(%802, newshape=[4, 9, 16]) /* ty=Tensor[(4, 9, 16), float64] */;
  %805 = reshape(%803, newshape=[780]) /* ty=Tensor[(780), float32] */;
  %806 = @func_4498(%804, %805) /* ty=(Tensor[(4, 9, 16), float64], Tensor[(5, 13, 12), float32], Tensor[(780), float32]) */;
  %807 = cast(meta[relay.Constant][66] /* ty=int16 */, dtype="int16") /* ty=int16 */;
  %808 = cast(meta[relay.Constant][67] /* ty=Tensor[(135), int16] */, dtype="int16") /* ty=Tensor[(135), int16] */;
  %809 = cast(%var_12471, dtype="int32") /* ty=Tensor[(378), int32] */;
  %810 = cast(%var_12472, dtype="float64") /* ty=Tensor[(385), float64] */;
  %811 = reshape(%807, newshape=[]) /* ty=int16 */;
  %812 = reshape(%808, newshape=[1, 9, 15]) /* ty=Tensor[(1, 9, 15), int16] */;
  %813 = reshape(%809, newshape=[378]) /* ty=Tensor[(378), int32] */;
  %814 = reshape(%810, newshape=[55, 7]) /* ty=Tensor[(55, 7), float64] */;
  %815 = @func_6604(%811, %812, %813, %814) /* ty=(Tensor[(1, 9, 15), int16], Tensor[(180), float32], Tensor[(378), int32], Tensor[(960, 1), uint32], Tensor[(22, 7), float32], Tensor[(55, 7), float64], Tensor[(539), float32], Tensor[(528), int32]) */;
  %816 = %801.0;
  %817 = %806.0;
  %818 = %815.0;
  (%816, %817, %var_12462, %var_12463, %818, meta[relay.Constant][66] /* ty=int16 */, meta[relay.Constant][67] /* ty=Tensor[(135), int16] */, %var_12471, %var_12472)
}

def @func_3369(%var_3361: float32, %var_3362: Tensor[(15, 2, 6), float32]) -> (Tensor[(15, 2, 6), bool],) {
  %819 = cast(%var_3361, dtype="bool") /* ty=bool */;
  %820 = cast(%var_3362, dtype="bool") /* ty=Tensor[(15, 2, 6), bool] */;
  %821 = greater(%819, %820) /* ty=Tensor[(15, 2, 6), bool] */;
  (%821,)
}

def @func_12182() -> Tensor[(12, 14, 7), float32] {
  @func_11639() /* ty=Tensor[(12, 14, 7), float32] */
}

/* For debugging purposes the metadata section has been omitted.
 * If you would like to see the full metadata section you can set the 
 * option to `True` when invoking `astext`. 
 */
===================================
==========mutated_mod==========
#[version = "0.0.5"]
def @func_13792() -> (Tensor[(12, 14, 7), float32],) {
  %1 = fn () -> (Tensor[(12, 14, 7), float32],) {
    %0 = @func_12866() /* ty=Tensor[(12, 14, 7), float32] */;
    (%0,)
  };
  %1() /* ty=(Tensor[(12, 14, 7), float32],) */
}

def @func_5569(%var_5568: Tensor[(6, 4, 8), int32]) -> (Tensor[(6, 4, 8), int32],) {
  %7 = fn (%var_5562: Tensor[(6, 4, 8), int32]) -> (Tensor[(6, 4, 8), int32],) {
    %2 = cast(%var_5562, dtype="int32") /* ty=Tensor[(6, 4, 8), int32] */;
    %3 = shape_of(meta[relay.Constant][0] /* ty=Tensor[(6, 4, 8), int32] */, dtype="int32") /* ty=Tensor[(3), int32] */;
    %4 = cast(meta[relay.Constant][0] /* ty=Tensor[(6, 4, 8), int32] */, dtype="int32") /* ty=Tensor[(6, 4, 8), int32] */;
    %5 = dyn.reshape(%2, %3, newshape=[]) /* ty=Tensor[(?, ?, ?), int32] */;
    %6 = bitwise_and(%4, %5) /* ty=Tensor[(6, 4, 8), int32] */;
    (%6,)
  };
  %7(%var_5568) /* ty=(Tensor[(6, 4, 8), int32],) */
}

def @func_12340() -> Tensor[(12, 14, 7), float32] {
  @func_12338() /* ty=Tensor[(12, 14, 7), float32] */
}

def @func_11666(%var_11665: Tensor[(12, 14, 7), float32]) -> (Tensor[(12, 14, 7), float32], Tensor[(12, 14, 7), bool]) {
  %16 = fn (%var_11659: Tensor[(12, 14, 7), float32]) -> (Tensor[(12, 14, 7), float32], Tensor[(12, 14, 7), bool]) {
    %8 = @func_11411() /* ty=(Tensor[(12, 14, 7), float32],) */;
    %9 = %8.0;
    %10 = cast(%var_11659, dtype="bool") /* ty=Tensor[(12, 14, 7), bool] */;
    %11 = shape_of(%9, dtype="int32") /* ty=Tensor[(3), int32] */;
    %12 = cast(%9, dtype="bool") /* ty=Tensor[(12, 14, 7), bool] */;
    %13 = dyn.reshape(%10, %11, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    %14 = @func_11639() /* ty=Tensor[(12, 14, 7), float32] */;
    %15 = greater(%12, %13) /* ty=Tensor[(12, 14, 7), bool] */;
    (%14, %15)
  };
  %16(%var_11665) /* ty=(Tensor[(12, 14, 7), float32], Tensor[(12, 14, 7), bool]) */
}

def @func_8118(%var_8116: Tensor[(3, 16, 4), float32], %var_8117: Tensor[(3, 16, 4), float32]) -> (Tensor[(3, 16, 4), float32],) {
  %22 = fn (%var_8110: Tensor[(3, 16, 4), float32], %var_8111: Tensor[(3, 16, 4), float32]) -> (Tensor[(3, 16, 4), float32],) {
    %17 = cast(%var_8111, dtype="float32") /* ty=Tensor[(3, 16, 4), float32] */;
    %18 = shape_of(%var_8110, dtype="int32") /* ty=Tensor[(3), int32] */;
    %19 = cast(%var_8110, dtype="float32") /* ty=Tensor[(3, 16, 4), float32] */;
    %20 = dyn.reshape(%17, %18, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
    %21 = power(%19, %20) /* ty=Tensor[(3, 16, 4), float32] */;
    (%21,)
  };
  %22(%var_8116, %var_8117) /* ty=(Tensor[(3, 16, 4), float32],) */
}

def @func_11829() -> Tensor[(140), uint8] {
  %24 = fn () -> Tensor[(140), uint8] {
    %23 = @func_11724() /* ty=(Tensor[(12, 14, 7), float32], Tensor[(960), uint32], Tensor[(140), uint8], Tensor[(3, 600), float32], Tensor[(12, 15, 10), float64]) */;
    %23.2
  };
  %24() /* ty=Tensor[(140), uint8] */
}

def @func_12598(%var_12596: Tensor[(7, 10, 16), int32], %var_12597: Tensor[(7, 10, 16), int32]) -> (Tensor[(7, 10, 16), bool],) {
  @func_12594(%var_12596, %var_12597) /* ty=(Tensor[(7, 10, 16), bool],) */
}

def @func_9578(%var_9575: Tensor[(8, 3, 4), float64], %var_9576: Tensor[(8, 3, 4), float64], %var_9577: Tensor[(224), int32]) -> (Tensor[(8, 3, 4), float64], Tensor[(16, 4, 14), int32], Tensor[(224), int32]) {
  %34 = fn (%var_9558: Tensor[(8, 3, 4), float64], %var_9559: Tensor[(8, 3, 4), float64], %var_9572: Tensor[(224), int32]) -> (Tensor[(8, 3, 4), float64], Tensor[(16, 4, 14), int32], Tensor[(224), int32]) {
    %25 = cast(%var_9559, dtype="float64") /* ty=Tensor[(8, 3, 4), float64] */;
    %26 = shape_of(%var_9558, dtype="int32") /* ty=Tensor[(3), int32] */;
    %27 = cast(%var_9558, dtype="float64") /* ty=Tensor[(8, 3, 4), float64] */;
    %28 = dyn.reshape(%25, %26, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
    %29 = cast(%var_9572, dtype="int32") /* ty=Tensor[(224), int32] */;
    %30 = reshape(%29, newshape=[16, 1, 14]) /* ty=Tensor[(16, 1, 14), int32] */;
    %31 = @func_4262(%30) /* ty=(Tensor[(16, 4, 14), int32],) */;
    %32 = floor_mod(%27, %28) /* ty=Tensor[(8, 3, 4), float64] */;
    %33 = %31.0;
    (%32, %33, %var_9572)
  };
  %34(%var_9575, %var_9576, %var_9577) /* ty=(Tensor[(8, 3, 4), float64], Tensor[(16, 4, 14), int32], Tensor[(224), int32]) */
}

def @func_12962(%var_12958: Tensor[(512), float64], %var_12959: Tensor[(1050), int64], %var_12960: Tensor[(528), int32], %var_12961: Tensor[(160), float64]) -> (Tensor[(12, 14, 7), float32], Tensor[(16, 7, 5), bool], Tensor[(512), float64], Tensor[(11, 16, 3), float32], Tensor[(1050), int64], Tensor[(528), int32], Tensor[(10, 16, 1), float64], Tensor[(160), float64]) {
  @func_12956(%var_12958, %var_12959, %var_12960, %var_12961) /* ty=(Tensor[(12, 14, 7), float32], Tensor[(16, 7, 5), bool], Tensor[(512), float64], Tensor[(11, 16, 3), float32], Tensor[(1050), int64], Tensor[(528), int32], Tensor[(10, 16, 1), float64], Tensor[(160), float64]) */
}

def @func_13343() -> Tensor[(12, 14, 7), float32] {
  %35 = @func_11411() /* ty=(Tensor[(12, 14, 7), float32],) */;
  %35.0
}

def @func_12143(%var_12141: Tensor[(1344), int64], %var_12142: Tensor[(154), float32]) -> (Tensor[(15, 6, 9), float64], Tensor[(810), float64], Tensor[(?, 11, 14), int32], Tensor[(1344), int64], Tensor[(154), float32], Tensor[(12, 14, 7), float64], Tensor[(11, 5, 1), float64], float32) {
  %55 = fn (%var_12101: Tensor[(1344), int64], %var_12102: Tensor[(154), float32]) -> (Tensor[(15, 6, 9), float64], Tensor[(810), float64], Tensor[(?, 11, 14), int32], Tensor[(1344), int64], Tensor[(154), float32], Tensor[(12, 14, 7), float64], Tensor[(11, 5, 1), float64], float32) {
    %36 = cast(meta[relay.Constant][1] /* ty=Tensor[(810), float64] */, dtype="float64") /* ty=Tensor[(810), float64] */;
    %37 = reshape(%36, newshape=[15, 6, 9]) /* ty=Tensor[(15, 6, 9), float64] */;
    %38 = cast(%var_12101, dtype="int64") /* ty=Tensor[(1344), int64] */;
    %39 = cast(%var_12101, dtype="int64") /* ty=Tensor[(1344), int64] */;
    %40 = cast(%var_12102, dtype="float32") /* ty=Tensor[(154), float32] */;
    %41 = reshape(%38, newshape=[16, 14, 6]) /* ty=Tensor[(16, 14, 6), int64] */;
    %42 = reshape(%39, newshape=[16, 14, 6]) /* ty=Tensor[(16, 14, 6), int64] */;
    %43 = reshape(%40, newshape=[1, 154]) /* ty=Tensor[(1, 154), float32] */;
    %44 = @func_4631(%41, %42, %43) /* ty=(Tensor[(16, 14, 6), bool], Tensor[(?, 11, 14), int32], Tensor[(1, 154), float32]) */;
    %45 = @func_11595() /* ty=(Tensor[(12, 14, 7), float32],) */;
    %46 = %45.0;
    %47 = cast(%46, dtype="float64") /* ty=Tensor[(12, 14, 7), float64] */;
    %48 = cast(4.6719f /* ty=float32 */, dtype="float32") /* ty=float32 */;
    %49 = reshape(%48, newshape=[]) /* ty=float32 */;
    %50 = @func_7549(%49) /* ty=(Tensor[(11, 5, 1), float64], Tensor[(15, 2, 6), bool], Tensor[(180), float32], Tensor[(11, 5, 1), int8]) */;
    %51 = @func_7164(%37) /* ty=Tensor[(15, 6, 9), float64] */;
    %52 = %44.1;
    %53 = atan(%47) /* ty=Tensor[(12, 14, 7), float64] */;
    %54 = %50.0;
    (%51, meta[relay.Constant][1] /* ty=Tensor[(810), float64] */, %52, %var_12101, %var_12102, %53, %54, 4.6719f /* ty=float32 */)
  };
  %55(%var_12141, %var_12142) /* ty=(Tensor[(15, 6, 9), float64], Tensor[(810), float64], Tensor[(?, 11, 14), int32], Tensor[(1344), int64], Tensor[(154), float32], Tensor[(12, 14, 7), float64], Tensor[(11, 5, 1), float64], float32) */
}

def @func_12989() -> (Tensor[(12, 15, 10), float64],) {
  @func_12987() /* ty=(Tensor[(12, 15, 10), float64],) */
}

def @func_8380(%var_8379: Tensor[(16, 11, 8), float32]) -> (Tensor[(12, 5, 16), bool], Tensor[(140), uint8], Tensor[(16, 11, 8), int64]) {
  %69 = fn (%var_8349: Tensor[(16, 11, 8), float32]) -> (Tensor[(12, 5, 16), bool], Tensor[(140), uint8], Tensor[(16, 11, 8), int64]) {
    %56 = cast(meta[relay.Constant][2] /* ty=Tensor[(140), uint8] */, dtype="uint8") /* ty=Tensor[(140), uint8] */;
    %57 = reshape(%56, newshape=[5, 14, 2]) /* ty=Tensor[(5, 14, 2), uint8] */;
    %58 = @func_6871(%57) /* ty=(Tensor[(12, 5, 16), bool], Tensor[(960), uint32], Tensor[(5, 14, 2), float32]) */;
    %59 = cast(%var_8349, dtype="float32") /* ty=Tensor[(16, 11, 8), float32] */;
    %60 = asinh(%59) /* ty=Tensor[(16, 11, 8), float32] */;
    %61 = cast(%60, dtype="float32") /* ty=Tensor[(16, 11, 8), float32] */;
    %62 = acosh(%61) /* ty=Tensor[(16, 11, 8), float32] */;
    %63 = cast(%var_8349, dtype="int64") /* ty=Tensor[(16, 11, 8), int64] */;
    %64 = shape_of(%62, dtype="int32") /* ty=Tensor[(3), int32] */;
    %65 = cast(%62, dtype="int64") /* ty=Tensor[(16, 11, 8), int64] */;
    %66 = dyn.reshape(%63, %64, newshape=[]) /* ty=Tensor[(?, ?, ?), int64] */;
    %67 = %58.0;
    %68 = minimum(%65, %66) /* ty=Tensor[(16, 11, 8), int64] */;
    (%67, meta[relay.Constant][2] /* ty=Tensor[(140), uint8] */, %68)
  };
  %69(%var_8379) /* ty=(Tensor[(12, 5, 16), bool], Tensor[(140), uint8], Tensor[(16, 11, 8), int64]) */
}

def @func_11952(%var_11950: Tensor[(576), float64], %var_11951: Tensor[(10, 78), float32]) -> (Tensor[(140), uint8], Tensor[(12, 14, 7), float32], Tensor[(12, 14, 7), bool], Tensor[(12, 14, 7), float32], Tensor[(300), uint8], Tensor[(22, 3), int64], Tensor[(4, 9, 16), float64], Tensor[(576), float64], Tensor[(10, 78), float64]) {
  @func_11948(%var_11950, %var_11951) /* ty=(Tensor[(140), uint8], Tensor[(12, 14, 7), float32], Tensor[(12, 14, 7), bool], Tensor[(12, 14, 7), float32], Tensor[(300), uint8], Tensor[(22, 3), int64], Tensor[(4, 9, 16), float64], Tensor[(576), float64], Tensor[(10, 78), float64]) */
}

def @func_4501(%var_4499: Tensor[(4, 9, 16), float64], %var_4500: Tensor[(780), float32]) -> (Tensor[(4, 9, 16), float64], Tensor[(5, 13, 12), float32], Tensor[(780), float32]) {
  %76 = fn (%var_4491: Tensor[(4, 9, 16), float64], %var_4495: Tensor[(780), float32]) -> (Tensor[(4, 9, 16), float64], Tensor[(5, 13, 12), float32], Tensor[(780), float32]) {
    %70 = cast(%var_4491, dtype="float64") /* ty=Tensor[(4, 9, 16), float64] */;
    %71 = cast(%var_4495, dtype="float32") /* ty=Tensor[(780), float32] */;
    %72 = reshape(%71, newshape=[5, 13, 12]) /* ty=Tensor[(5, 13, 12), float32] */;
    %73 = @func_1599(%72) /* ty=(Tensor[(5, 13, 12), float32],) */;
    %74 = log(%70) /* ty=Tensor[(4, 9, 16), float64] */;
    %75 = %73.0;
    (%74, %75, %var_4495)
  };
  %76(%var_4499, %var_4500) /* ty=(Tensor[(4, 9, 16), float64], Tensor[(5, 13, 12), float32], Tensor[(780), float32]) */
}

def @func_12726() -> (Tensor[(12, 14, 7), float32],) {
  %80 = fn () -> (Tensor[(12, 14, 7), float32],) {
    %77 = @func_12338() /* ty=Tensor[(12, 14, 7), float32] */;
    %78 = cast(%77, dtype="float32") /* ty=Tensor[(12, 14, 7), float32] */;
    %79 = tan(%78) /* ty=Tensor[(12, 14, 7), float32] */;
    (%79,)
  };
  %80() /* ty=(Tensor[(12, 14, 7), float32],) */
}

def @func_9433(%var_9432: Tensor[(3, 14, 13), float32]) -> (Tensor[(3, 14, 13), float32],) {
  %84 = fn (%var_9419: Tensor[(3, 14, 13), float32]) -> (Tensor[(3, 14, 13), float32],) {
    %81 = cast(-8.92872f /* ty=float32 */, dtype="float32") /* ty=float32 */;
    %82 = cast(%var_9419, dtype="float32") /* ty=Tensor[(3, 14, 13), float32] */;
    %83 = floor_divide(%81, %82) /* ty=Tensor[(3, 14, 13), float32] */;
    (%83,)
  };
  %84(%var_9432) /* ty=(Tensor[(3, 14, 13), float32],) */
}

def @func_8728(%var_8727: Tensor[(8, 66), int32]) -> (Tensor[(12, 4, 6), float32], Tensor[(7, 11, 7), float32], Tensor[(539, 1), float32], Tensor[(8, 66), int32]) {
  %93 = fn (%var_8714: Tensor[(8, 66), int32]) -> (Tensor[(12, 4, 6), float32], Tensor[(7, 11, 7), float32], Tensor[(539, 1), float32], Tensor[(8, 66), int32]) {
    %85 = cast(meta[relay.Constant][3] /* ty=Tensor[(12, 4, 6), float32] */, dtype="float32") /* ty=Tensor[(12, 4, 6), float32] */;
    %86 = cast(meta[relay.Constant][4] /* ty=Tensor[(539, 1), float32] */, dtype="float32") /* ty=Tensor[(539, 1), float32] */;
    %87 = cast(%var_8714, dtype="int32") /* ty=Tensor[(8, 66), int32] */;
    %88 = reshape(%86, newshape=[7, 11, 7]) /* ty=Tensor[(7, 11, 7), float32] */;
    %89 = reshape(%87, newshape=[528]) /* ty=Tensor[(528), int32] */;
    %90 = @func_3680(%88, %89) /* ty=(Tensor[(7, 11, 7), float32], Tensor[(528), int32], Tensor[(4, 5, 15), float32], Tensor[(5, 60), uint8], Tensor[(11, 16, 3), float32]) */;
    %91 = sigmoid(%85) /* ty=Tensor[(12, 4, 6), float32] */;
    %92 = %90.0;
    (%91, %92, meta[relay.Constant][4] /* ty=Tensor[(539, 1), float32] */, %var_8714)
  };
  %93(%var_8727) /* ty=(Tensor[(12, 4, 6), float32], Tensor[(7, 11, 7), float32], Tensor[(539, 1), float32], Tensor[(8, 66), int32]) */
}

def @func_13869() -> (Tensor[(12, 14, 7), float32],) {
  %94 = @func_13648() /* ty=Tensor[(12, 14, 7), float32] */;
  (%94,)
}

def @func_4265(%var_4263: Tensor[(16, 1, 14), int32]) -> (Tensor[(16, 4, 14), int32],) {
  @func_4262(%var_4263) /* ty=(Tensor[(16, 4, 14), int32],) */
}

def @func_12318(%var_12317: Tensor[(2, 9, 15), int16]) -> Tensor[(2, 9, 15), int16] {
  %97 = fn (%var_12305: Tensor[(2, 9, 15), int16]) -> Tensor[(2, 9, 15), int16] {
    %95 = cast(meta[relay.Constant][5] /* ty=int16 */, dtype="int16") /* ty=int16 */;
    %96 = cast(%var_12305, dtype="int16") /* ty=Tensor[(2, 9, 15), int16] */;
    right_shift(%95, %96) /* ty=Tensor[(2, 9, 15), int16] */
  };
  %97(%var_12317) /* ty=Tensor[(2, 9, 15), int16] */
}

def @func_11948(%var_11940: Tensor[(576), float64], %var_11941: Tensor[(10, 78), float32]) -> (Tensor[(140), uint8], Tensor[(12, 14, 7), float32], Tensor[(12, 14, 7), bool], Tensor[(12, 14, 7), float32], Tensor[(300), uint8], Tensor[(22, 3), int64], Tensor[(4, 9, 16), float64], Tensor[(576), float64], Tensor[(10, 78), float64]) {
  %98 = @func_11639() /* ty=Tensor[(12, 14, 7), float32] */;
  %99 = cast(%98, dtype="float32") /* ty=Tensor[(12, 14, 7), float32] */;
  %100 = reshape(%99, newshape=[12, 14, 7]) /* ty=Tensor[(12, 14, 7), float32] */;
  %101 = @func_11664(%100) /* ty=(Tensor[(12, 14, 7), float32], Tensor[(12, 14, 7), bool]) */;
  %102 = @func_11498() /* ty=(Tensor[(12, 14, 7), float32],) */;
  %103 = cast(meta[relay.Constant][6] /* ty=Tensor[(22, 3), int64] */, dtype="int64") /* ty=Tensor[(22, 3), int64] */;
  %104 = reshape(%103, newshape=[66]) /* ty=Tensor[(66), int64] */;
  %105 = @func_11802(%104) /* ty=(Tensor[(12, 14, 7), float32], Tensor[(15, 8, 16), int16], Tensor[(1920), int16], Tensor[(300), uint8], Tensor[(2, 3, 11), float32], Tensor[(66), int64]) */;
  %106 = cast(%var_11940, dtype="float64") /* ty=Tensor[(576), float64] */;
  %107 = cast(%var_11941, dtype="float32") /* ty=Tensor[(10, 78), float32] */;
  %108 = reshape(%106, newshape=[4, 9, 16]) /* ty=Tensor[(4, 9, 16), float64] */;
  %109 = reshape(%107, newshape=[780]) /* ty=Tensor[(780), float32] */;
  %110 = @func_4498(%108, %109) /* ty=(Tensor[(4, 9, 16), float64], Tensor[(5, 13, 12), float32], Tensor[(780), float32]) */;
  %111 = cast(%var_11941, dtype="float64") /* ty=Tensor[(10, 78), float64] */;
  %112 = @func_11828() /* ty=Tensor[(140), uint8] */;
  %113 = %101.1;
  %114 = %102.0;
  %115 = %105.3;
  %116 = %110.0;
  %117 = sinh(%111) /* ty=Tensor[(10, 78), float64] */;
  (%112, %98, %113, %114, %115, meta[relay.Constant][6] /* ty=Tensor[(22, 3), int64] */, %116, %var_11940, %117)
}

def @func_6604(%var_6589: int16, %var_6590: Tensor[(1, 9, 15), int16], %var_6595: Tensor[(378), int32], %var_6598: Tensor[(55, 7), float64]) -> (Tensor[(1, 9, 15), int16], Tensor[(180), float32], Tensor[(378), int32], Tensor[(960, 1), uint32], Tensor[(22, 7), float32], Tensor[(55, 7), float64], Tensor[(539), float32], Tensor[(528), int32]) {
  %118 = cast(%var_6589, dtype="int16") /* ty=int16 */;
  %119 = cast(%var_6590, dtype="int16") /* ty=Tensor[(1, 9, 15), int16] */;
  %120 = cast(%var_6595, dtype="int32") /* ty=Tensor[(378), int32] */;
  %121 = cast(meta[relay.Constant][7] /* ty=Tensor[(960, 1), uint32] */, dtype="uint32") /* ty=Tensor[(960, 1), uint32] */;
  %122 = cast(meta[relay.Constant][8] /* ty=Tensor[(22, 7), float32] */, dtype="float32") /* ty=Tensor[(22, 7), float32] */;
  %123 = cast(%var_6598, dtype="float64") /* ty=Tensor[(55, 7), float64] */;
  %124 = cast(meta[relay.Constant][9] /* ty=Tensor[(539), float32] */, dtype="float32") /* ty=Tensor[(539), float32] */;
  %125 = reshape(%120, newshape=[14, 3, 9]) /* ty=Tensor[(14, 3, 9), int32] */;
  %126 = reshape(%121, newshape=[960]) /* ty=Tensor[(960), uint32] */;
  %127 = reshape(%122, newshape=[154]) /* ty=Tensor[(154), float32] */;
  %128 = reshape(%123, newshape=[385]) /* ty=Tensor[(385), float64] */;
  %129 = reshape(%124, newshape=[539]) /* ty=Tensor[(539), float32] */;
  %130 = @func_5146(%125, %126, %127, %128, %129) /* ty=(Tensor[(14, 3, 9), bool], Tensor[(14, 3, 9), float64], Tensor[(12, 5, 16), bool], Tensor[(960), uint32], Tensor[(16, 14, 6), bool], Tensor[(1344), int64], Tensor[(154), float32], Tensor[(11, 5, 7), float64], Tensor[(385), float64], Tensor[(539), float32], Tensor[(15, 2, 6), bool], float32, Tensor[(180), float32]) */;
  %131 = cast(%var_6598, dtype="float64") /* ty=Tensor[(55, 7), float64] */;
  %132 = cast(meta[relay.Constant][9] /* ty=Tensor[(539), float32] */, dtype="float32") /* ty=Tensor[(539), float32] */;
  %133 = reshape(%131, newshape=[11, 5, 7]) /* ty=Tensor[(11, 5, 7), float64] */;
  %134 = reshape(%132, newshape=[539]) /* ty=Tensor[(539), float32] */;
  %135 = @func_4688(%133, %134) /* ty=(Tensor[(11, 5, 7), float64], Tensor[(4, 5, 15), float32], Tensor[(539), float32], Tensor[(528), int32]) */;
  %136 = bitwise_xor(%118, %119) /* ty=Tensor[(1, 9, 15), int16] */;
  %137 = %130.12;
  %138 = %135.3;
  (%136, %137, %var_6595, meta[relay.Constant][7] /* ty=Tensor[(960, 1), uint32] */, meta[relay.Constant][8] /* ty=Tensor[(22, 7), float32] */, %var_6598, meta[relay.Constant][9] /* ty=Tensor[(539), float32] */, %138)
}

def @func_4593(%var_4591: Tensor[(12, 5, 16), uint32], %var_4592: Tensor[(12, 5, 16), uint32]) -> (Tensor[(12, 5, 16), bool],) {
  @func_4589(%var_4591, %var_4592) /* ty=(Tensor[(12, 5, 16), bool],) */
}

def @func_4692(%var_4690: Tensor[(11, 5, 7), float64], %var_4691: Tensor[(539), float32]) -> (Tensor[(11, 5, 7), float64], Tensor[(4, 5, 15), float32], Tensor[(539), float32], Tensor[(528), int32]) {
  @func_4688(%var_4690, %var_4691) /* ty=(Tensor[(11, 5, 7), float64], Tensor[(4, 5, 15), float32], Tensor[(539), float32], Tensor[(528), int32]) */
}

def @func_12444(%var_12443: Tensor[(7, 10, 4), float64]) -> Tensor[(7, 10, 4), float64] {
  %140 = fn (%var_12433: Tensor[(7, 10, 4), float64]) -> Tensor[(7, 10, 4), float64] {
    %139 = cast(%var_12433, dtype="float64") /* ty=Tensor[(7, 10, 4), float64] */;
    sinh(%139) /* ty=Tensor[(7, 10, 4), float64] */
  };
  %140(%var_12443) /* ty=Tensor[(7, 10, 4), float64] */
}

def @func_13930() -> (Tensor[(12, 14, 7), float32], Tensor[(12, 14, 7), float32]) {
  @func_13928() /* ty=(Tensor[(12, 14, 7), float32], Tensor[(12, 14, 7), float32]) */
}

def @func_11375(%var_11368: Tensor[(15, 10, 13), float32], %var_11369: Tensor[(15, 10, 13), float32], %var_11370: int16, %var_11371: Tensor[(135), int16], %var_11372: Tensor[(378), int32], %var_11373: Tensor[(55, 7), float64], %var_11374: Tensor[(300), uint8]) -> (Tensor[(180), float32], int16, Tensor[(135), int16], Tensor[(378), int32], Tensor[(55, 7), float64], Tensor[(15, 10, 13), float32], Tensor[(4, 5, 15), float32], Tensor[(300), uint8]) {
  %172 = fn (%var_11332: Tensor[(15, 10, 13), float32], %var_11336: Tensor[(15, 10, 13), float32], %var_11344: int16, %var_11345: Tensor[(135), int16], %var_11346: Tensor[(378), int32], %var_11347: Tensor[(55, 7), float64], %var_11365: Tensor[(300), uint8]) -> (Tensor[(180), float32], int16, Tensor[(135), int16], Tensor[(378), int32], Tensor[(55, 7), float64], Tensor[(15, 10, 13), float32], Tensor[(4, 5, 15), float32], Tensor[(300), uint8]) {
    %141 = cast(%var_11344, dtype="int16") /* ty=int16 */;
    %142 = cast(%var_11345, dtype="int16") /* ty=Tensor[(135), int16] */;
    %143 = cast(%var_11346, dtype="int32") /* ty=Tensor[(378), int32] */;
    %144 = cast(%var_11347, dtype="float64") /* ty=Tensor[(55, 7), float64] */;
    %145 = reshape(%141, newshape=[]) /* ty=int16 */;
    %146 = reshape(%142, newshape=[1, 9, 15]) /* ty=Tensor[(1, 9, 15), int16] */;
    %147 = reshape(%143, newshape=[378]) /* ty=Tensor[(378), int32] */;
    %148 = reshape(%144, newshape=[55, 7]) /* ty=Tensor[(55, 7), float64] */;
    %149 = @func_6604(%145, %146, %147, %148) /* ty=(Tensor[(1, 9, 15), int16], Tensor[(180), float32], Tensor[(378), int32], Tensor[(960, 1), uint32], Tensor[(22, 7), float32], Tensor[(55, 7), float64], Tensor[(539), float32], Tensor[(528), int32]) */;
    %150 = cast(%var_11332, dtype="float32") /* ty=Tensor[(15, 10, 13), float32] */;
    %151 = exp(%150) /* ty=Tensor[(15, 10, 13), float32] */;
    %152 = cast(%151, dtype="float64") /* ty=Tensor[(15, 10, 13), float64] */;
    %153 = log2(%152) /* ty=Tensor[(15, 10, 13), float64] */;
    %154 = cast(%var_11336, dtype="bool") /* ty=Tensor[(15, 10, 13), bool] */;
    %155 = shape_of(%var_11332, dtype="int32") /* ty=Tensor[(3), int32] */;
    %156 = cast(%var_11332, dtype="bool") /* ty=Tensor[(15, 10, 13), bool] */;
    %157 = dyn.reshape(%154, %155, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    %158 = greater(%156, %157) /* ty=Tensor[(15, 10, 13), bool] */;
    %159 = cast(%158, dtype="bool") /* ty=Tensor[(15, 10, 13), bool] */;
    %160 = shape_of(%153, dtype="int32") /* ty=Tensor[(3), int32] */;
    %161 = cast(%153, dtype="bool") /* ty=Tensor[(15, 10, 13), bool] */;
    %162 = dyn.reshape(%159, %160, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    %163 = equal(%161, %162) /* ty=Tensor[(15, 10, 13), bool] */;
    %164 = cast(%163, dtype="float32") /* ty=Tensor[(15, 10, 13), float32] */;
    %165 = cast(%var_11365, dtype="uint8") /* ty=Tensor[(300), uint8] */;
    %166 = cast(%var_11365, dtype="uint8") /* ty=Tensor[(300), uint8] */;
    %167 = reshape(%165, newshape=[4, 5, 15]) /* ty=Tensor[(4, 5, 15), uint8] */;
    %168 = reshape(%166, newshape=[4, 5, 15]) /* ty=Tensor[(4, 5, 15), uint8] */;
    %169 = %149.1;
    %170 = acosh(%164) /* ty=Tensor[(15, 10, 13), float32] */;
    %171 = @func_2566(%167, %168) /* ty=Tensor[(4, 5, 15), float32] */;
    (%169, %var_11344, %var_11345, %var_11346, %var_11347, %170, %171, %var_11365)
  };
  %172(%var_11368, %var_11369, %var_11370, %var_11371, %var_11372, %var_11373, %var_11374) /* ty=(Tensor[(180), float32], int16, Tensor[(135), int16], Tensor[(378), int32], Tensor[(55, 7), float64], Tensor[(15, 10, 13), float32], Tensor[(4, 5, 15), float32], Tensor[(300), uint8]) */
}

def @func_4589(%var_4571: Tensor[(12, 5, 16), uint32], %var_4572: Tensor[(12, 5, 16), uint32]) -> (Tensor[(12, 5, 16), bool],) {
  %173 = cast(%var_4572, dtype="bool") /* ty=Tensor[(12, 5, 16), bool] */;
  %174 = shape_of(%var_4571, dtype="int32") /* ty=Tensor[(3), int32] */;
  %175 = cast(%var_4571, dtype="bool") /* ty=Tensor[(12, 5, 16), bool] */;
  %176 = dyn.reshape(%173, %174, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %177 = less_equal(%175, %176) /* ty=Tensor[(12, 5, 16), bool] */;
  (%177,)
}

def @func_13928() -> (Tensor[(12, 14, 7), float32], Tensor[(12, 14, 7), float32]) {
  %178 = @func_13343() /* ty=Tensor[(12, 14, 7), float32] */;
  %179 = @func_11976() /* ty=Tensor[(12, 14, 7), float32] */;
  (%178, %179)
}

def @func_12886() -> (Tensor[(12, 14, 7), float32],) {
  @func_12884() /* ty=(Tensor[(12, 14, 7), float32],) */
}

def @func_11597() -> (Tensor[(12, 14, 7), float32],) {
  @func_11595() /* ty=(Tensor[(12, 14, 7), float32],) */
}

def @func_12534() -> Tensor[(12, 14, 7), float32] {
  %180 = @func_11595() /* ty=(Tensor[(12, 14, 7), float32],) */;
  %180.0
}

def @func_2570(%var_2568: Tensor[(4, 5, 15), uint8], %var_2569: Tensor[(4, 5, 15), uint8]) -> Tensor[(4, 5, 15), float32] {
  @func_2566(%var_2568, %var_2569) /* ty=Tensor[(4, 5, 15), float32] */
}

def @func_9093(%var_9091: Tensor[(10, 6, 6), float64], %var_9092: Tensor[(1800), float32]) -> (Tensor[(10, 6, 6), float64], Tensor[(4, 5, 15), float32], Tensor[(300), uint8], Tensor[(12, ?), float64], Tensor[(12), float64], Tensor[(104), float64], Tensor[(6, 140), float32], Tensor[(1800), float32]) {
  @func_9089(%var_9091, %var_9092) /* ty=(Tensor[(10, 6, 6), float64], Tensor[(4, 5, 15), float32], Tensor[(300), uint8], Tensor[(12, ?), float64], Tensor[(12), float64], Tensor[(104), float64], Tensor[(6, 140), float32], Tensor[(1800), float32]) */
}

def @func_11412() -> (Tensor[(12, 14, 7), float32],) {
  %183 = fn () -> (Tensor[(12, 14, 7), float32],) {
    %181 = cast(meta[relay.Constant][10] /* ty=Tensor[(12, 14, 7), float32] */, dtype="float32") /* ty=Tensor[(12, 14, 7), float32] */;
    %182 = asinh(%181) /* ty=Tensor[(12, 14, 7), float32] */;
    (%182,)
  };
  %183() /* ty=(Tensor[(12, 14, 7), float32],) */
}

def @func_6610(%var_6606: int16, %var_6607: Tensor[(1, 9, 15), int16], %var_6608: Tensor[(378), int32], %var_6609: Tensor[(55, 7), float64]) -> (Tensor[(1, 9, 15), int16], Tensor[(180), float32], Tensor[(378), int32], Tensor[(960, 1), uint32], Tensor[(22, 7), float32], Tensor[(55, 7), float64], Tensor[(539), float32], Tensor[(528), int32]) {
  @func_6604(%var_6606, %var_6607, %var_6608, %var_6609) /* ty=(Tensor[(1, 9, 15), int16], Tensor[(180), float32], Tensor[(378), int32], Tensor[(960, 1), uint32], Tensor[(22, 7), float32], Tensor[(55, 7), float64], Tensor[(539), float32], Tensor[(528), int32]) */
}

def @func_2760(%var_2759: Tensor[(12, 15, 10), float32]) -> Tensor[(12, 15, 10), float32] {
  %185 = fn (%var_2732: Tensor[(12, 15, 10), float32]) -> Tensor[(12, 15, 10), float32] {
    %184 = cast(%var_2732, dtype="float32") /* ty=Tensor[(12, 15, 10), float32] */;
    acosh(%184) /* ty=Tensor[(12, 15, 10), float32] */
  };
  %185(%var_2759) /* ty=Tensor[(12, 15, 10), float32] */
}

def @func_12956(%var_12945: Tensor[(512), float64], %var_12949: Tensor[(1050), int64], %var_12950: Tensor[(528), int32], %var_12953: Tensor[(160), float64]) -> (Tensor[(12, 14, 7), float32], Tensor[(16, 7, 5), bool], Tensor[(512), float64], Tensor[(11, 16, 3), float32], Tensor[(1050), int64], Tensor[(528), int32], Tensor[(10, 16, 1), float64], Tensor[(160), float64]) {
  %186 = @func_12884() /* ty=(Tensor[(12, 14, 7), float32],) */;
  %187 = cast(%var_12945, dtype="float64") /* ty=Tensor[(512), float64] */;
  %188 = reshape(%187, newshape=[16, 8, 4]) /* ty=Tensor[(16, 8, 4), float64] */;
  %189 = @func_6376(%188) /* ty=(Tensor[(16, 8, 4), uint8], Tensor[(16, 7, 5), bool], Tensor[(560), float64], Tensor[(154), float32]) */;
  %190 = cast(%var_12949, dtype="int64") /* ty=Tensor[(1050), int64] */;
  %191 = cast(%var_12949, dtype="int64") /* ty=Tensor[(1050), int64] */;
  %192 = cast(%var_12950, dtype="int32") /* ty=Tensor[(528), int32] */;
  %193 = reshape(%190, newshape=[15, 7, 10]) /* ty=Tensor[(15, 7, 10), int64] */;
  %194 = reshape(%191, newshape=[15, 7, 10]) /* ty=Tensor[(15, 7, 10), int64] */;
  %195 = reshape(%192, newshape=[528, 1]) /* ty=Tensor[(528, 1), int32] */;
  %196 = @func_3172(%193, %194, %195) /* ty=(Tensor[(15, 7, 10), bool], Tensor[(11, 16, 3), float32], Tensor[(528, 1), int32]) */;
  %197 = cast(%var_12953, dtype="float64") /* ty=Tensor[(160), float64] */;
  %198 = reshape(%197, newshape=[10, 16, 1]) /* ty=Tensor[(10, 16, 1), float64] */;
  %199 = %186.0;
  %200 = %189.1;
  %201 = %196.1;
  %202 = @func_7248(%198) /* ty=Tensor[(10, 16, 1), float64] */;
  (%199, %200, %var_12945, %201, %var_12949, %var_12950, %202, %var_12953)
}

def @func_3172(%var_3158: Tensor[(15, 7, 10), int64], %var_3159: Tensor[(15, 7, 10), int64], %var_3166: Tensor[(528, 1), int32]) -> (Tensor[(15, 7, 10), bool], Tensor[(11, 16, 3), float32], Tensor[(528, 1), int32]) {
  %203 = cast(%var_3159, dtype="bool") /* ty=Tensor[(15, 7, 10), bool] */;
  %204 = shape_of(%var_3158, dtype="int32") /* ty=Tensor[(3), int32] */;
  %205 = cast(%var_3158, dtype="bool") /* ty=Tensor[(15, 7, 10), bool] */;
  %206 = dyn.reshape(%203, %204, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %207 = cast(%var_3166, dtype="int32") /* ty=Tensor[(528, 1), int32] */;
  %208 = cast(%var_3166, dtype="int32") /* ty=Tensor[(528, 1), int32] */;
  %209 = reshape(%207, newshape=[11, 16, 3]) /* ty=Tensor[(11, 16, 3), int32] */;
  %210 = reshape(%208, newshape=[11, 16, 3]) /* ty=Tensor[(11, 16, 3), int32] */;
  %211 = @func_2900(%209, %210) /* ty=(Tensor[(11, 16, 3), int32], Tensor[(11, 16, 3), float32]) */;
  %212 = not_equal(%205, %206) /* ty=Tensor[(15, 7, 10), bool] */;
  %213 = %211.1;
  (%212, %213, %var_3166)
}

def @func_12868() -> Tensor[(12, 14, 7), float32] {
  @func_12866() /* ty=Tensor[(12, 14, 7), float32] */
}

def @func_12183() -> Tensor[(12, 14, 7), float32] {
  %214 = fn () -> Tensor[(12, 14, 7), float32] {
    @func_11639() /* ty=Tensor[(12, 14, 7), float32] */
  };
  %214() /* ty=Tensor[(12, 14, 7), float32] */
}

def @func_4322(%var_4318: Tensor[(14, 12, 15), float64], %var_4319: float32, %var_4320: Tensor[(180), float32], %var_4321: Tensor[(224), int32]) -> (Tensor[(14, 12, 15), float64], Tensor[(14, 12, 15), float64], Tensor[(15, 2, 6), bool], float32, Tensor[(180), float32], Tensor[(16, 4, 14), int32], Tensor[(224), int32]) {
  %229 = fn (%var_4296: Tensor[(14, 12, 15), float64], %var_4305: float32, %var_4306: Tensor[(180), float32], %var_4313: Tensor[(224), int32]) -> (Tensor[(14, 12, 15), float64], Tensor[(14, 12, 15), float64], Tensor[(15, 2, 6), bool], float32, Tensor[(180), float32], Tensor[(16, 4, 14), int32], Tensor[(224), int32]) {
    %215 = cast(%var_4296, dtype="float64") /* ty=Tensor[(14, 12, 15), float64] */;
    %216 = cast(%var_4296, dtype="float64") /* ty=Tensor[(14, 12, 15), float64] */;
    %217 = cast(%var_4305, dtype="float32") /* ty=float32 */;
    %218 = cast(%var_4306, dtype="float32") /* ty=Tensor[(180), float32] */;
    %219 = reshape(%217, newshape=[]) /* ty=float32 */;
    %220 = reshape(%218, newshape=[15, 2, 6]) /* ty=Tensor[(15, 2, 6), float32] */;
    %221 = @func_3369(%219, %220) /* ty=(Tensor[(15, 2, 6), bool],) */;
    %222 = cast(%var_4313, dtype="int32") /* ty=Tensor[(224), int32] */;
    %223 = reshape(%222, newshape=[16, 1, 14]) /* ty=Tensor[(16, 1, 14), int32] */;
    %224 = @func_4262(%223) /* ty=(Tensor[(16, 4, 14), int32],) */;
    %225 = acos(%215) /* ty=Tensor[(14, 12, 15), float64] */;
    %226 = acosh(%216) /* ty=Tensor[(14, 12, 15), float64] */;
    %227 = %221.0;
    %228 = %224.0;
    (%225, %226, %227, %var_4305, %var_4306, %228, %var_4313)
  };
  %229(%var_4318, %var_4319, %var_4320, %var_4321) /* ty=(Tensor[(14, 12, 15), float64], Tensor[(14, 12, 15), float64], Tensor[(15, 2, 6), bool], float32, Tensor[(180), float32], Tensor[(16, 4, 14), int32], Tensor[(224), int32]) */
}

def @func_12167() -> Tensor[(12, 14, 7), float32] {
  @func_12165() /* ty=Tensor[(12, 14, 7), float32] */
}

def @func_6470(%var_6468: Tensor[(14, 5, 5), float64], %var_6469: Tensor[(14, 5, 5), float64]) -> Tensor[(14, 5, 5), float64] {
  %234 = fn (%var_6458: Tensor[(14, 5, 5), float64], %var_6459: Tensor[(14, 5, 5), float64]) -> Tensor[(14, 5, 5), float64] {
    %230 = cast(%var_6459, dtype="float64") /* ty=Tensor[(14, 5, 5), float64] */;
    %231 = shape_of(%var_6458, dtype="int32") /* ty=Tensor[(3), int32] */;
    %232 = cast(%var_6458, dtype="float64") /* ty=Tensor[(14, 5, 5), float64] */;
    %233 = dyn.reshape(%230, %231, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
    floor_divide(%232, %233) /* ty=Tensor[(14, 5, 5), float64] */
  };
  %234(%var_6468, %var_6469) /* ty=Tensor[(14, 5, 5), float64] */
}

def @func_7250(%var_7249: Tensor[(10, 16, 1), float64]) -> Tensor[(10, 16, 1), float64] {
  %236 = fn (%var_7245: Tensor[(10, 16, 1), float64]) -> Tensor[(10, 16, 1), float64] {
    %235 = cast(%var_7245, dtype="float64") /* ty=Tensor[(10, 16, 1), float64] */;
    asinh(%235) /* ty=Tensor[(10, 16, 1), float64] */
  };
  %236(%var_7249) /* ty=Tensor[(10, 16, 1), float64] */
}

def @func_11566(%var_11537: Tensor[(9, 14, 5), float32], %var_11552: Tensor[(6, 96), float64], %var_11553: Tensor[(1, 780), float32]) -> (Tensor[(780), float32], Tensor[(6, 96), float64], Tensor[(1, 780), float32], Tensor[(9, 14, 5), uint32]) {
  %237 = cast(%var_11552, dtype="float64") /* ty=Tensor[(6, 96), float64] */;
  %238 = cast(%var_11553, dtype="float32") /* ty=Tensor[(1, 780), float32] */;
  %239 = reshape(%237, newshape=[4, 9, 16]) /* ty=Tensor[(4, 9, 16), float64] */;
  %240 = reshape(%238, newshape=[780]) /* ty=Tensor[(780), float32] */;
  %241 = @func_4498(%239, %240) /* ty=(Tensor[(4, 9, 16), float64], Tensor[(5, 13, 12), float32], Tensor[(780), float32]) */;
  %242 = cast(%var_11537, dtype="float32") /* ty=Tensor[(9, 14, 5), float32] */;
  %243 = acos(%242) /* ty=Tensor[(9, 14, 5), float32] */;
  %244 = cast(%var_11537, dtype="uint32") /* ty=Tensor[(9, 14, 5), uint32] */;
  %245 = shape_of(%243, dtype="int32") /* ty=Tensor[(3), int32] */;
  %246 = cast(%243, dtype="uint32") /* ty=Tensor[(9, 14, 5), uint32] */;
  %247 = dyn.reshape(%244, %245, newshape=[]) /* ty=Tensor[(?, ?, ?), uint32] */;
  %248 = %241.2;
  %249 = bitwise_xor(%246, %247) /* ty=Tensor[(9, 14, 5), uint32] */;
  (%248, %var_11552, %var_11553, %249)
}

def @func_11804(%var_11803: Tensor[(66), int64]) -> (Tensor[(12, 14, 7), float32], Tensor[(15, 8, 16), int16], Tensor[(1920), int16], Tensor[(300), uint8], Tensor[(2, 3, 11), float32], Tensor[(66), int64]) {
  %265 = fn (%var_11790: Tensor[(66), int64]) -> (Tensor[(12, 14, 7), float32], Tensor[(15, 8, 16), int16], Tensor[(1920), int16], Tensor[(300), uint8], Tensor[(2, 3, 11), float32], Tensor[(66), int64]) {
    %250 = @func_11595() /* ty=(Tensor[(12, 14, 7), float32],) */;
    %251 = cast(meta[relay.Constant][11] /* ty=Tensor[(1920), int16] */, dtype="int16") /* ty=Tensor[(1920), int16] */;
    %252 = cast(meta[relay.Constant][11] /* ty=Tensor[(1920), int16] */, dtype="int16") /* ty=Tensor[(1920), int16] */;
    %253 = cast(meta[relay.Constant][12] /* ty=Tensor[(300), uint8] */, dtype="uint8") /* ty=Tensor[(300), uint8] */;
    %254 = reshape(%251, newshape=[15, 8, 16]) /* ty=Tensor[(15, 8, 16), int16] */;
    %255 = reshape(%252, newshape=[15, 8, 16]) /* ty=Tensor[(15, 8, 16), int16] */;
    %256 = reshape(%253, newshape=[300]) /* ty=Tensor[(300), uint8] */;
    %257 = @func_8486(%254, %255, %256) /* ty=(Tensor[(15, 8, 16), int16], Tensor[(4, 5, 15), float32], Tensor[(300), uint8]) */;
    %258 = cast(%var_11790, dtype="int64") /* ty=Tensor[(66), int64] */;
    %259 = cast(%var_11790, dtype="int64") /* ty=Tensor[(66), int64] */;
    %260 = reshape(%258, newshape=[2, 3, 11]) /* ty=Tensor[(2, 3, 11), int64] */;
    %261 = reshape(%259, newshape=[2, 3, 11]) /* ty=Tensor[(2, 3, 11), int64] */;
    %262 = %250.0;
    %263 = %257.0;
    %264 = @func_10993(%260, %261) /* ty=Tensor[(2, 3, 11), float32] */;
    (%262, %263, meta[relay.Constant][11] /* ty=Tensor[(1920), int16] */, meta[relay.Constant][12] /* ty=Tensor[(300), uint8] */, %264, %var_11790)
  };
  %265(%var_11803) /* ty=(Tensor[(12, 14, 7), float32], Tensor[(15, 8, 16), int16], Tensor[(1920), int16], Tensor[(300), uint8], Tensor[(2, 3, 11), float32], Tensor[(66), int64]) */
}

def @func_5152(%var_5147: Tensor[(14, 3, 9), int32], %var_5148: Tensor[(960), uint32], %var_5149: Tensor[(154), float32], %var_5150: Tensor[(385), float64], %var_5151: Tensor[(539), float32]) -> (Tensor[(14, 3, 9), bool], Tensor[(14, 3, 9), float64], Tensor[(12, 5, 16), bool], Tensor[(960), uint32], Tensor[(16, 14, 6), bool], Tensor[(1344), int64], Tensor[(154), float32], Tensor[(11, 5, 7), float64], Tensor[(385), float64], Tensor[(539), float32], Tensor[(15, 2, 6), bool], float32, Tensor[(180), float32]) {
  %302 = fn (%var_5045: Tensor[(14, 3, 9), int32], %var_5070: Tensor[(960), uint32], %var_5075: Tensor[(154), float32], %var_5112: Tensor[(385), float64], %var_5113: Tensor[(539), float32]) -> (Tensor[(14, 3, 9), bool], Tensor[(14, 3, 9), float64], Tensor[(12, 5, 16), bool], Tensor[(960), uint32], Tensor[(16, 14, 6), bool], Tensor[(1344), int64], Tensor[(154), float32], Tensor[(11, 5, 7), float64], Tensor[(385), float64], Tensor[(539), float32], Tensor[(15, 2, 6), bool], float32, Tensor[(180), float32]) {
    %266 = cast(meta[relay.Constant][13] /* ty=Tensor[(14, 3, 9), int32] */, dtype="bool") /* ty=Tensor[(14, 3, 9), bool] */;
    %267 = shape_of(%var_5045, dtype="int32") /* ty=Tensor[(3), int32] */;
    %268 = cast(%var_5045, dtype="bool") /* ty=Tensor[(14, 3, 9), bool] */;
    %269 = dyn.reshape(%266, %267, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    %270 = cast(meta[relay.Constant][13] /* ty=Tensor[(14, 3, 9), int32] */, dtype="float64") /* ty=Tensor[(14, 3, 9), float64] */;
    %271 = shape_of(%var_5045, dtype="int32") /* ty=Tensor[(3), int32] */;
    %272 = cast(%var_5045, dtype="float64") /* ty=Tensor[(14, 3, 9), float64] */;
    %273 = dyn.reshape(%270, %271, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
    %274 = cast(%var_5070, dtype="uint32") /* ty=Tensor[(960), uint32] */;
    %275 = cast(%var_5070, dtype="uint32") /* ty=Tensor[(960), uint32] */;
    %276 = reshape(%274, newshape=[12, 5, 16]) /* ty=Tensor[(12, 5, 16), uint32] */;
    %277 = reshape(%275, newshape=[12, 5, 16]) /* ty=Tensor[(12, 5, 16), uint32] */;
    %278 = @func_4589(%276, %277) /* ty=(Tensor[(12, 5, 16), bool],) */;
    %279 = cast(meta[relay.Constant][14] /* ty=Tensor[(1344), int64] */, dtype="int64") /* ty=Tensor[(1344), int64] */;
    %280 = cast(meta[relay.Constant][14] /* ty=Tensor[(1344), int64] */, dtype="int64") /* ty=Tensor[(1344), int64] */;
    %281 = cast(%var_5075, dtype="float32") /* ty=Tensor[(154), float32] */;
    %282 = reshape(%279, newshape=[16, 14, 6]) /* ty=Tensor[(16, 14, 6), int64] */;
    %283 = reshape(%280, newshape=[16, 14, 6]) /* ty=Tensor[(16, 14, 6), int64] */;
    %284 = reshape(%281, newshape=[1, 154]) /* ty=Tensor[(1, 154), float32] */;
    %285 = @func_4631(%282, %283, %284) /* ty=(Tensor[(16, 14, 6), bool], Tensor[(?, 11, 14), int32], Tensor[(1, 154), float32]) */;
    %286 = cast(%var_5112, dtype="float64") /* ty=Tensor[(385), float64] */;
    %287 = cast(%var_5113, dtype="float32") /* ty=Tensor[(539), float32] */;
    %288 = reshape(%286, newshape=[11, 5, 7]) /* ty=Tensor[(11, 5, 7), float64] */;
    %289 = reshape(%287, newshape=[539]) /* ty=Tensor[(539), float32] */;
    %290 = @func_4688(%288, %289) /* ty=(Tensor[(11, 5, 7), float64], Tensor[(4, 5, 15), float32], Tensor[(539), float32], Tensor[(528), int32]) */;
    %291 = cast(-9.99336f /* ty=float32 */, dtype="float32") /* ty=float32 */;
    %292 = cast(meta[relay.Constant][15] /* ty=Tensor[(180), float32] */, dtype="float32") /* ty=Tensor[(180), float32] */;
    %293 = reshape(%291, newshape=[]) /* ty=float32 */;
    %294 = reshape(%292, newshape=[15, 2, 6]) /* ty=Tensor[(15, 2, 6), float32] */;
    %295 = @func_3369(%293, %294) /* ty=(Tensor[(15, 2, 6), bool],) */;
    %296 = less_equal(%268, %269) /* ty=Tensor[(14, 3, 9), bool] */;
    %297 = mod(%272, %273) /* ty=Tensor[(14, 3, 9), float64] */;
    %298 = %278.0;
    %299 = %285.0;
    %300 = %290.0;
    %301 = %295.0;
    (%296, %297, %298, %var_5070, %299, meta[relay.Constant][14] /* ty=Tensor[(1344), int64] */, %var_5075, %300, %var_5112, %var_5113, %301, -9.99336f /* ty=float32 */, meta[relay.Constant][15] /* ty=Tensor[(180), float32] */)
  };
  %302(%var_5147, %var_5148, %var_5149, %var_5150, %var_5151) /* ty=(Tensor[(14, 3, 9), bool], Tensor[(14, 3, 9), float64], Tensor[(12, 5, 16), bool], Tensor[(960), uint32], Tensor[(16, 14, 6), bool], Tensor[(1344), int64], Tensor[(154), float32], Tensor[(11, 5, 7), float64], Tensor[(385), float64], Tensor[(539), float32], Tensor[(15, 2, 6), bool], float32, Tensor[(180), float32]) */
}

def @func_12203() -> Tensor[(12, 14, 7), float32] {
  %303 = fn () -> Tensor[(12, 14, 7), float32] {
    @func_11639() /* ty=Tensor[(12, 14, 7), float32] */
  };
  %303() /* ty=Tensor[(12, 14, 7), float32] */
}

def @func_10997(%var_10995: Tensor[(2, 3, 11), int64], %var_10996: Tensor[(2, 3, 11), int64]) -> Tensor[(2, 3, 11), float32] {
  @func_10993(%var_10995, %var_10996) /* ty=Tensor[(2, 3, 11), float32] */
}

def @func_13345() -> Tensor[(12, 14, 7), float32] {
  @func_13343() /* ty=Tensor[(12, 14, 7), float32] */
}

def @func_12050() -> (Tensor[(12, 14, 7), float32],) {
  %304 = @func_11976() /* ty=Tensor[(12, 14, 7), float32] */;
  (%304,)
}

def @func_12536() -> Tensor[(12, 14, 7), float32] {
  @func_12534() /* ty=Tensor[(12, 14, 7), float32] */
}

def @func_7306(%var_7304: Tensor[(15, 8, 7), float32], %var_7305: Tensor[(1800), float32]) -> (Tensor[(12, 15, 10), float32], Tensor[(1800), float32], Tensor[(4, 5, 15), float32], Tensor[(104), float64], Tensor[(11, 5, 7), float64], Tensor[(385), float64], Tensor[(539), float32], Tensor[(15, 8, 7), int16]) {
  @func_7302(%var_7304, %var_7305) /* ty=(Tensor[(12, 15, 10), float32], Tensor[(1800), float32], Tensor[(4, 5, 15), float32], Tensor[(104), float64], Tensor[(11, 5, 7), float64], Tensor[(385), float64], Tensor[(539), float32], Tensor[(15, 8, 7), int16]) */
}

def @func_12767() -> Tensor[(12, 14, 7), float32] {
  %306 = fn () -> Tensor[(12, 14, 7), float32] {
    %305 = @func_12628() /* ty=(Tensor[(12, 14, 7), float32],) */;
    %305.0
  };
  %306() /* ty=Tensor[(12, 14, 7), float32] */
}

def @func_13305() -> (Tensor[(12, 14, 7), float64],) {
  %311 = fn () -> (Tensor[(12, 14, 7), float64],) {
    %307 = @func_12352() /* ty=(Tensor[(12, 14, 7), uint64], Tensor[(12, 14, 7), float32]) */;
    %308 = %307.1;
    %309 = cast(%308, dtype="float64") /* ty=Tensor[(12, 14, 7), float64] */;
    %310 = cosh(%309) /* ty=Tensor[(12, 14, 7), float64] */;
    (%310,)
  };
  %311() /* ty=(Tensor[(12, 14, 7), float64],) */
}

def @func_12630() -> (Tensor[(12, 14, 7), float32],) {
  @func_12628() /* ty=(Tensor[(12, 14, 7), float32],) */
}

def @func_13871() -> (Tensor[(12, 14, 7), float32],) {
  @func_13869() /* ty=(Tensor[(12, 14, 7), float32],) */
}

def @func_11571(%var_11568: Tensor[(9, 14, 5), float32], %var_11569: Tensor[(6, 96), float64], %var_11570: Tensor[(1, 780), float32]) -> (Tensor[(780), float32], Tensor[(6, 96), float64], Tensor[(1, 780), float32], Tensor[(9, 14, 5), uint32]) {
  @func_11566(%var_11568, %var_11569, %var_11570) /* ty=(Tensor[(780), float32], Tensor[(6, 96), float64], Tensor[(1, 780), float32], Tensor[(9, 14, 5), uint32]) */
}

def @func_11595() -> (Tensor[(12, 14, 7), float32],) {
  %312 = @func_11411() /* ty=(Tensor[(12, 14, 7), float32],) */;
  %313 = %312.0;
  (%313,)
}

def @func_2648(%var_2599: Tensor[(7, 3, 8), float32]) -> (Tensor[(7, 3, 8), bool], Tensor[(780), float32], Tensor[(5, 13, 12), float32], Tensor[(5, 13, 12), float32]) {
  %314 = cast(%var_2599, dtype="bool") /* ty=Tensor[(7, 3, 8), bool] */;
  %315 = shape_of(meta[relay.Constant][16] /* ty=Tensor[(7, 3, 8), float32] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %316 = cast(meta[relay.Constant][16] /* ty=Tensor[(7, 3, 8), float32] */, dtype="bool") /* ty=Tensor[(7, 3, 8), bool] */;
  %317 = dyn.reshape(%314, %315, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %318 = cast(meta[relay.Constant][17] /* ty=Tensor[(780), float32] */, dtype="float32") /* ty=Tensor[(780), float32] */;
  %319 = reshape(%318, newshape=[5, 13, 12]) /* ty=Tensor[(5, 13, 12), float32] */;
  %320 = @func_1599(%319) /* ty=(Tensor[(5, 13, 12), float32],) */;
  %321 = %320.0;
  %322 = cast(%321, dtype="float32") /* ty=Tensor[(5, 13, 12), float32] */;
  %323 = cast(meta[relay.Constant][17] /* ty=Tensor[(780), float32] */, dtype="float32") /* ty=Tensor[(780), float32] */;
  %324 = reshape(%323, newshape=[5, 13, 12]) /* ty=Tensor[(5, 13, 12), float32] */;
  %325 = @func_1599(%324) /* ty=(Tensor[(5, 13, 12), float32],) */;
  %326 = less(%316, %317) /* ty=Tensor[(7, 3, 8), bool] */;
  %327 = cosh(%322) /* ty=Tensor[(5, 13, 12), float32] */;
  %328 = %325.0;
  (%326, meta[relay.Constant][17] /* ty=Tensor[(780), float32] */, %327, %328)
}

def @func_9089(%var_9044: Tensor[(10, 6, 6), float64], %var_9070: Tensor[(1800), float32]) -> (Tensor[(10, 6, 6), float64], Tensor[(4, 5, 15), float32], Tensor[(300), uint8], Tensor[(12, ?), float64], Tensor[(12), float64], Tensor[(104), float64], Tensor[(6, 140), float32], Tensor[(1800), float32]) {
  %329 = cast(%var_9044, dtype="float64") /* ty=Tensor[(10, 6, 6), float64] */;
  %330 = cast(meta[relay.Constant][18] /* ty=Tensor[(300), uint8] */, dtype="uint8") /* ty=Tensor[(300), uint8] */;
  %331 = cast(meta[relay.Constant][18] /* ty=Tensor[(300), uint8] */, dtype="uint8") /* ty=Tensor[(300), uint8] */;
  %332 = reshape(%330, newshape=[4, 5, 15]) /* ty=Tensor[(4, 5, 15), uint8] */;
  %333 = reshape(%331, newshape=[4, 5, 15]) /* ty=Tensor[(4, 5, 15), uint8] */;
  %334 = cast(meta[relay.Constant][19] /* ty=Tensor[(12), float64] */, dtype="float64") /* ty=Tensor[(12), float64] */;
  %335 = cast(meta[relay.Constant][19] /* ty=Tensor[(12), float64] */, dtype="float64") /* ty=Tensor[(12), float64] */;
  %336 = reshape(%334, newshape=[12, 1]) /* ty=Tensor[(12, 1), float64] */;
  %337 = reshape(%335, newshape=[12, 1]) /* ty=Tensor[(12, 1), float64] */;
  %338 = @func_7968(%336, %337) /* ty=(Tensor[(12, ?), float64],) */;
  %339 = cast(meta[relay.Constant][20] /* ty=Tensor[(6, 140), float32] */, dtype="float32") /* ty=Tensor[(6, 140), float32] */;
  %340 = cast(%var_9070, dtype="float32") /* ty=Tensor[(1800), float32] */;
  %341 = reshape(%339, newshape=[15, 8, 7]) /* ty=Tensor[(15, 8, 7), float32] */;
  %342 = reshape(%340, newshape=[1800]) /* ty=Tensor[(1800), float32] */;
  %343 = @func_7302(%341, %342) /* ty=(Tensor[(12, 15, 10), float32], Tensor[(1800), float32], Tensor[(4, 5, 15), float32], Tensor[(104), float64], Tensor[(11, 5, 7), float64], Tensor[(385), float64], Tensor[(539), float32], Tensor[(15, 8, 7), int16]) */;
  %344 = sqrt(%329) /* ty=Tensor[(10, 6, 6), float64] */;
  %345 = @func_2566(%332, %333) /* ty=Tensor[(4, 5, 15), float32] */;
  %346 = %338.0;
  %347 = %343.3;
  (%344, %345, meta[relay.Constant][18] /* ty=Tensor[(300), uint8] */, %346, meta[relay.Constant][19] /* ty=Tensor[(12), float64] */, %347, meta[relay.Constant][20] /* ty=Tensor[(6, 140), float32] */, %var_9070)
}

def @func_12866() -> Tensor[(12, 14, 7), float32] {
  @func_12810() /* ty=Tensor[(12, 14, 7), float32] */
}

def @func_13649() -> Tensor[(12, 14, 7), float32] {
  %349 = fn () -> Tensor[(12, 14, 7), float32] {
    %348 = @func_11724() /* ty=(Tensor[(12, 14, 7), float32], Tensor[(960), uint32], Tensor[(140), uint8], Tensor[(3, 600), float32], Tensor[(12, 15, 10), float64]) */;
    %348.0
  };
  %349() /* ty=Tensor[(12, 14, 7), float32] */
}

def @func_6378(%var_6377: Tensor[(16, 8, 4), float64]) -> (Tensor[(16, 8, 4), uint8], Tensor[(16, 7, 5), bool], Tensor[(560), float64], Tensor[(154), float32]) {
  %365 = fn (%var_6350: Tensor[(16, 8, 4), float64]) -> (Tensor[(16, 8, 4), uint8], Tensor[(16, 7, 5), bool], Tensor[(560), float64], Tensor[(154), float32]) {
    %350 = cast(meta[relay.Constant][21] /* ty=Tensor[(16, 8, 4), float64] */, dtype="float64") /* ty=Tensor[(16, 8, 4), float64] */;
    %351 = erf(%350) /* ty=Tensor[(16, 8, 4), float64] */;
    %352 = cast(%var_6350, dtype="uint8") /* ty=Tensor[(16, 8, 4), uint8] */;
    %353 = shape_of(%351, dtype="int32") /* ty=Tensor[(3), int32] */;
    %354 = cast(%351, dtype="uint8") /* ty=Tensor[(16, 8, 4), uint8] */;
    %355 = dyn.reshape(%352, %353, newshape=[]) /* ty=Tensor[(?, ?, ?), uint8] */;
    %356 = cast(meta[relay.Constant][22] /* ty=Tensor[(560), float64] */, dtype="float64") /* ty=Tensor[(560), float64] */;
    %357 = cast(meta[relay.Constant][23] /* ty=Tensor[(154), float32] */, dtype="float32") /* ty=Tensor[(154), float32] */;
    %358 = cast(meta[relay.Constant][22] /* ty=Tensor[(560), float64] */, dtype="float64") /* ty=Tensor[(560), float64] */;
    %359 = reshape(%356, newshape=[16, 7, 5]) /* ty=Tensor[(16, 7, 5), float64] */;
    %360 = reshape(%357, newshape=[154]) /* ty=Tensor[(154), float32] */;
    %361 = reshape(%358, newshape=[16, 7, 5]) /* ty=Tensor[(16, 7, 5), float64] */;
    %362 = @func_1917(%359, %360, %361) /* ty=(Tensor[(16, 7, 5), float64], Tensor[(?, 11, 14), int32], Tensor[(154), float32], Tensor[(16, 7, 5), bool]) */;
    %363 = subtract(%354, %355) /* ty=Tensor[(16, 8, 4), uint8] */;
    %364 = %362.3;
    (%363, %364, meta[relay.Constant][22] /* ty=Tensor[(560), float64] */, meta[relay.Constant][23] /* ty=Tensor[(154), float32] */)
  };
  %365(%var_6377) /* ty=(Tensor[(16, 8, 4), uint8], Tensor[(16, 7, 5), bool], Tensor[(560), float64], Tensor[(154), float32]) */
}

def @func_11842(%var_11840: Tensor[(6, 7, 5), float64], %var_11841: Tensor[(6, 7, 5), float64]) -> (Tensor[(6, 7, 5), bool],) {
  @func_11838(%var_11840, %var_11841) /* ty=(Tensor[(6, 7, 5), bool],) */
}

def @func_12007() -> (Tensor[(12, 14, 7), uint64],) {
  %366 = @func_11639() /* ty=Tensor[(12, 14, 7), float32] */;
  %367 = cast(meta[relay.Constant][24] /* ty=Tensor[(12, 14, 7), float32] */, dtype="uint64") /* ty=Tensor[(12, 14, 7), uint64] */;
  %368 = shape_of(%366, dtype="int32") /* ty=Tensor[(3), int32] */;
  %369 = cast(%366, dtype="uint64") /* ty=Tensor[(12, 14, 7), uint64] */;
  %370 = dyn.reshape(%367, %368, newshape=[]) /* ty=Tensor[(?, ?, ?), uint64] */;
  %371 = bitwise_xor(%369, %370) /* ty=Tensor[(12, 14, 7), uint64] */;
  (%371,)
}

def @func_11976() -> Tensor[(12, 14, 7), float32] {
  @func_11639() /* ty=Tensor[(12, 14, 7), float32] */
}

def @func_12884() -> (Tensor[(12, 14, 7), float32],) {
  %372 = @func_12866() /* ty=Tensor[(12, 14, 7), float32] */;
  (%372,)
}

def @func_12987() -> (Tensor[(12, 15, 10), float64],) {
  %373 = @func_12530() /* ty=Tensor[(12, 15, 10), float64] */;
  (%373,)
}

def @func_11499() -> (Tensor[(12, 14, 7), float32],) {
  %376 = fn () -> (Tensor[(12, 14, 7), float32],) {
    %374 = @func_11411() /* ty=(Tensor[(12, 14, 7), float32],) */;
    %375 = %374.0;
    (%375,)
  };
  %376() /* ty=(Tensor[(12, 14, 7), float32],) */
}

def @func_13379(%var_13377: float32, %var_13378: Tensor[(180), float32]) -> (Tensor[(13, 8, 1), float64], Tensor[(104), float64], Tensor[(15, 2, 6), bool], Tensor[(180), float32], Tensor[(12, 14, 7), float32]) {
  %391 = fn (%var_13357: float32, %var_13358: Tensor[(180), float32]) -> (Tensor[(13, 8, 1), float64], Tensor[(104), float64], Tensor[(15, 2, 6), bool], Tensor[(180), float32], Tensor[(12, 14, 7), float32]) {
    %377 = cast(meta[relay.Constant][25] /* ty=Tensor[(104), float64] */, dtype="float64") /* ty=Tensor[(104), float64] */;
    %378 = reshape(%377, newshape=[13, 8, 1]) /* ty=Tensor[(13, 8, 1), float64] */;
    %379 = @func_4724(%378) /* ty=(Tensor[(13, 8, 1), float64], Tensor[(4, 5, 15), float32], Tensor[(300), uint8]) */;
    %380 = cast(%var_13357, dtype="float32") /* ty=float32 */;
    %381 = cast(%var_13358, dtype="float32") /* ty=Tensor[(180), float32] */;
    %382 = reshape(%380, newshape=[]) /* ty=float32 */;
    %383 = reshape(%381, newshape=[15, 2, 6]) /* ty=Tensor[(15, 2, 6), float32] */;
    %384 = @func_3369(%382, %383) /* ty=(Tensor[(15, 2, 6), bool],) */;
    %385 = @func_12202() /* ty=Tensor[(12, 14, 7), float32] */;
    %386 = cast(%385, dtype="float32") /* ty=Tensor[(12, 14, 7), float32] */;
    %387 = cast(%var_13357, dtype="float32") /* ty=float32 */;
    %388 = %379.0;
    %389 = %384.0;
    %390 = power(%386, %387) /* ty=Tensor[(12, 14, 7), float32] */;
    (%388, meta[relay.Constant][25] /* ty=Tensor[(104), float64] */, %389, %var_13358, %390)
  };
  %391(%var_13377, %var_13378) /* ty=(Tensor[(13, 8, 1), float64], Tensor[(104), float64], Tensor[(15, 2, 6), bool], Tensor[(180), float32], Tensor[(12, 14, 7), float32]) */
}

def @func_11838(%var_11830: Tensor[(6, 7, 5), float64], %var_11831: Tensor[(6, 7, 5), float64]) -> (Tensor[(6, 7, 5), bool],) {
  %392 = cast(%var_11831, dtype="bool") /* ty=Tensor[(6, 7, 5), bool] */;
  %393 = shape_of(%var_11830, dtype="int32") /* ty=Tensor[(3), int32] */;
  %394 = cast(%var_11830, dtype="bool") /* ty=Tensor[(6, 7, 5), bool] */;
  %395 = dyn.reshape(%392, %393, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %396 = equal(%394, %395) /* ty=Tensor[(6, 7, 5), bool] */;
  (%396,)
}

def @func_13056(%var_13054: Tensor[(330), float32]) -> (Tensor[(3, 11, 10), float32], Tensor[(330), float32], Tensor[(12, 14, 7), int64]) {
  @func_13053(%var_13054) /* ty=(Tensor[(3, 11, 10), float32], Tensor[(330), float32], Tensor[(12, 14, 7), int64]) */
}

def @func_1601(%var_1600: Tensor[(5, 13, 12), float32]) -> (Tensor[(5, 13, 12), float32],) {
  %399 = fn (%var_1593: Tensor[(5, 13, 12), float32]) -> (Tensor[(5, 13, 12), float32],) {
    %397 = cast(%var_1593, dtype="float32") /* ty=Tensor[(5, 13, 12), float32] */;
    %398 = sinh(%397) /* ty=Tensor[(5, 13, 12), float32] */;
    (%398,)
  };
  %399(%var_1600) /* ty=(Tensor[(5, 13, 12), float32],) */
}

def @func_13281() -> (Tensor[(12, 15, 10), float64],) {
  %401 = fn () -> (Tensor[(12, 15, 10), float64],) {
    %400 = @func_12530() /* ty=Tensor[(12, 15, 10), float64] */;
    (%400,)
  };
  %401() /* ty=(Tensor[(12, 15, 10), float64],) */
}

def @func_7971(%var_7969: Tensor[(12, 1), float64], %var_7970: Tensor[(12, 1), float64]) -> (Tensor[(12, ?), float64],) {
  %407 = fn (%var_7958: Tensor[(12, 1), float64], %var_7959: Tensor[(12, 1), float64]) -> (Tensor[(12, ?), float64],) {
    %402 = cast(%var_7959, dtype="float64") /* ty=Tensor[(12, 1), float64] */;
    %403 = shape_of(%var_7958, dtype="int32") /* ty=Tensor[(2), int32] */;
    %404 = cast(%var_7958, dtype="float64") /* ty=Tensor[(12, 1), float64] */;
    %405 = dyn.reshape(%402, %403, newshape=[]) /* ty=Tensor[(?, ?), float64] */;
    %406 = mod(%404, %405) /* ty=Tensor[(12, ?), float64] */;
    (%406,)
  };
  %407(%var_7969, %var_7970) /* ty=(Tensor[(12, ?), float64],) */
}

def @func_12009() -> (Tensor[(12, 14, 7), uint64],) {
  @func_12007() /* ty=(Tensor[(12, 14, 7), uint64],) */
}

def @func_7551(%var_7550: float32) -> (Tensor[(11, 5, 1), float64], Tensor[(15, 2, 6), bool], Tensor[(180), float32], Tensor[(11, 5, 1), int8]) {
  %421 = fn (%var_7521: float32) -> (Tensor[(11, 5, 1), float64], Tensor[(15, 2, 6), bool], Tensor[(180), float32], Tensor[(11, 5, 1), int8]) {
    %408 = cast(meta[relay.Constant][26] /* ty=Tensor[(11, 5, 1), float64] */, dtype="float64") /* ty=Tensor[(11, 5, 1), float64] */;
    %409 = cast(%var_7521, dtype="float32") /* ty=float32 */;
    %410 = cast(meta[relay.Constant][27] /* ty=Tensor[(180), float32] */, dtype="float32") /* ty=Tensor[(180), float32] */;
    %411 = reshape(%409, newshape=[]) /* ty=float32 */;
    %412 = reshape(%410, newshape=[15, 2, 6]) /* ty=Tensor[(15, 2, 6), float32] */;
    %413 = @func_3369(%411, %412) /* ty=(Tensor[(15, 2, 6), bool],) */;
    %414 = cast(meta[relay.Constant][26] /* ty=Tensor[(11, 5, 1), float64] */, dtype="float32") /* ty=Tensor[(11, 5, 1), float32] */;
    %415 = tan(%414) /* ty=Tensor[(11, 5, 1), float32] */;
    %416 = cast(%415, dtype="int8") /* ty=Tensor[(11, 5, 1), int8] */;
    %417 = cast(%var_7521, dtype="int8") /* ty=int8 */;
    %418 = sinh(%408) /* ty=Tensor[(11, 5, 1), float64] */;
    %419 = %413.0;
    %420 = logical_xor(%416, %417) /* ty=Tensor[(11, 5, 1), int8] */;
    (%418, %419, meta[relay.Constant][27] /* ty=Tensor[(180), float32] */, %420)
  };
  %421(%var_7550) /* ty=(Tensor[(11, 5, 1), float64], Tensor[(15, 2, 6), bool], Tensor[(180), float32], Tensor[(11, 5, 1), int8]) */
}

def @func_2923(%var_2922: Tensor[(300), uint8]) -> (Tensor[(9, 5, 2), float32], Tensor[(4, 5, 15), float32], Tensor[(300), uint8]) {
  %429 = fn (%var_2914: Tensor[(300), uint8]) -> (Tensor[(9, 5, 2), float32], Tensor[(4, 5, 15), float32], Tensor[(300), uint8]) {
    %422 = cast(meta[relay.Constant][28] /* ty=Tensor[(9, 5, 2), float32] */, dtype="float32") /* ty=Tensor[(9, 5, 2), float32] */;
    %423 = cast(%var_2914, dtype="uint8") /* ty=Tensor[(300), uint8] */;
    %424 = cast(%var_2914, dtype="uint8") /* ty=Tensor[(300), uint8] */;
    %425 = reshape(%423, newshape=[4, 5, 15]) /* ty=Tensor[(4, 5, 15), uint8] */;
    %426 = reshape(%424, newshape=[4, 5, 15]) /* ty=Tensor[(4, 5, 15), uint8] */;
    %427 = sinh(%422) /* ty=Tensor[(9, 5, 2), float32] */;
    %428 = @func_2566(%425, %426) /* ty=Tensor[(4, 5, 15), float32] */;
    (%427, %428, %var_2914)
  };
  %429(%var_2922) /* ty=(Tensor[(9, 5, 2), float32], Tensor[(4, 5, 15), float32], Tensor[(300), uint8]) */
}

def @func_10679(%var_10676: Tensor[(3, 11, 10), float32]) -> Tensor[(3, 11, 10), float32] {
  %430 = cast(%var_10676, dtype="float32") /* ty=Tensor[(3, 11, 10), float32] */;
  log2(%430) /* ty=Tensor[(3, 11, 10), float32] */
}

def @func_11725() -> (Tensor[(12, 14, 7), float32], Tensor[(960), uint32], Tensor[(140), uint8], Tensor[(3, 600), float32], Tensor[(12, 15, 10), float64]) {
  %442 = fn () -> (Tensor[(12, 14, 7), float32], Tensor[(960), uint32], Tensor[(140), uint8], Tensor[(3, 600), float32], Tensor[(12, 15, 10), float64]) {
    %431 = @func_11411() /* ty=(Tensor[(12, 14, 7), float32],) */;
    %432 = cast(meta[relay.Constant][29] /* ty=Tensor[(140), uint8] */, dtype="uint8") /* ty=Tensor[(140), uint8] */;
    %433 = reshape(%432, newshape=[5, 14, 2]) /* ty=Tensor[(5, 14, 2), uint8] */;
    %434 = @func_6871(%433) /* ty=(Tensor[(12, 5, 16), bool], Tensor[(960), uint32], Tensor[(5, 14, 2), float32]) */;
    %435 = cast(meta[relay.Constant][30] /* ty=Tensor[(3, 600), float32] */, dtype="float32") /* ty=Tensor[(3, 600), float32] */;
    %436 = reshape(%435, newshape=[12, 15, 10]) /* ty=Tensor[(12, 15, 10), float32] */;
    %437 = @func_2758(%436) /* ty=Tensor[(12, 15, 10), float32] */;
    %438 = cast(%437, dtype="float64") /* ty=Tensor[(12, 15, 10), float64] */;
    %439 = %431.0;
    %440 = %434.1;
    %441 = acos(%438) /* ty=Tensor[(12, 15, 10), float64] */;
    (%439, %440, meta[relay.Constant][29] /* ty=Tensor[(140), uint8] */, meta[relay.Constant][30] /* ty=Tensor[(3, 600), float32] */, %441)
  };
  %442() /* ty=(Tensor[(12, 14, 7), float32], Tensor[(960), uint32], Tensor[(140), uint8], Tensor[(3, 600), float32], Tensor[(12, 15, 10), float64]) */
}

def @func_8444(%var_8443: Tensor[(8, 8, 10), float64]) -> (Tensor[(8, 8, 10), float64],) {
  %445 = fn (%var_8413: Tensor[(8, 8, 10), float64]) -> (Tensor[(8, 8, 10), float64],) {
    %443 = cast(%var_8413, dtype="float64") /* ty=Tensor[(8, 8, 10), float64] */;
    %444 = log(%443) /* ty=Tensor[(8, 8, 10), float64] */;
    (%444,)
  };
  %445(%var_8443) /* ty=(Tensor[(8, 8, 10), float64],) */
}

def @func_3177(%var_3174: Tensor[(15, 7, 10), int64], %var_3175: Tensor[(15, 7, 10), int64], %var_3176: Tensor[(528, 1), int32]) -> (Tensor[(15, 7, 10), bool], Tensor[(11, 16, 3), float32], Tensor[(528, 1), int32]) {
  @func_3172(%var_3174, %var_3175, %var_3176) /* ty=(Tensor[(15, 7, 10), bool], Tensor[(11, 16, 3), float32], Tensor[(528, 1), int32]) */
}

def @func_13723(%var_13721: Tensor[(1050), int64], %var_13722: Tensor[(528), int32]) -> (Tensor[(12, 15, 10), float64], Tensor[(12, 14, 7), float32], Tensor[(528, 1), int32], Tensor[(1050), int64], Tensor[(528), int32]) {
  %458 = fn (%var_13697: Tensor[(1050), int64], %var_13698: Tensor[(528), int32]) -> (Tensor[(12, 15, 10), float64], Tensor[(12, 14, 7), float32], Tensor[(528, 1), int32], Tensor[(1050), int64], Tensor[(528), int32]) {
    %446 = @func_12987() /* ty=(Tensor[(12, 15, 10), float64],) */;
    %447 = @func_11595() /* ty=(Tensor[(12, 14, 7), float32],) */;
    %448 = cast(%var_13697, dtype="int64") /* ty=Tensor[(1050), int64] */;
    %449 = cast(%var_13697, dtype="int64") /* ty=Tensor[(1050), int64] */;
    %450 = cast(%var_13698, dtype="int32") /* ty=Tensor[(528), int32] */;
    %451 = reshape(%448, newshape=[15, 7, 10]) /* ty=Tensor[(15, 7, 10), int64] */;
    %452 = reshape(%449, newshape=[15, 7, 10]) /* ty=Tensor[(15, 7, 10), int64] */;
    %453 = reshape(%450, newshape=[528, 1]) /* ty=Tensor[(528, 1), int32] */;
    %454 = @func_3172(%451, %452, %453) /* ty=(Tensor[(15, 7, 10), bool], Tensor[(11, 16, 3), float32], Tensor[(528, 1), int32]) */;
    %455 = %446.0;
    %456 = %447.0;
    %457 = %454.2;
    (%455, %456, %457, %var_13697, %var_13698)
  };
  %458(%var_13721, %var_13722) /* ty=(Tensor[(12, 15, 10), float64], Tensor[(12, 14, 7), float32], Tensor[(528, 1), int32], Tensor[(1050), int64], Tensor[(528), int32]) */
}

def @func_4262(%var_4246: Tensor[(16, 1, 14), int32]) -> (Tensor[(16, 4, 14), int32],) {
  %459 = cast(%var_4246, dtype="int32") /* ty=Tensor[(16, 1, 14), int32] */;
  %460 = cast(meta[relay.Constant][31] /* ty=Tensor[(16, 4, 14), int32] */, dtype="int32") /* ty=Tensor[(16, 4, 14), int32] */;
  %461 = add(%459, %460) /* ty=Tensor[(16, 4, 14), int32] */;
  (%461,)
}

def @func_12628() -> (Tensor[(12, 14, 7), float32],) {
  %462 = @func_12534() /* ty=Tensor[(12, 14, 7), float32] */;
  (%462,)
}

def @func_7302(%var_7268: Tensor[(15, 8, 7), float32], %var_7282: Tensor[(1800), float32]) -> (Tensor[(12, 15, 10), float32], Tensor[(1800), float32], Tensor[(4, 5, 15), float32], Tensor[(104), float64], Tensor[(11, 5, 7), float64], Tensor[(385), float64], Tensor[(539), float32], Tensor[(15, 8, 7), int16]) {
  %463 = cast(%var_7282, dtype="float32") /* ty=Tensor[(1800), float32] */;
  %464 = reshape(%463, newshape=[12, 15, 10]) /* ty=Tensor[(12, 15, 10), float32] */;
  %465 = cast(meta[relay.Constant][32] /* ty=Tensor[(104), float64] */, dtype="float64") /* ty=Tensor[(104), float64] */;
  %466 = reshape(%465, newshape=[13, 8, 1]) /* ty=Tensor[(13, 8, 1), float64] */;
  %467 = @func_4724(%466) /* ty=(Tensor[(13, 8, 1), float64], Tensor[(4, 5, 15), float32], Tensor[(300), uint8]) */;
  %468 = cast(meta[relay.Constant][33] /* ty=Tensor[(385), float64] */, dtype="float64") /* ty=Tensor[(385), float64] */;
  %469 = cast(meta[relay.Constant][34] /* ty=Tensor[(539), float32] */, dtype="float32") /* ty=Tensor[(539), float32] */;
  %470 = reshape(%468, newshape=[11, 5, 7]) /* ty=Tensor[(11, 5, 7), float64] */;
  %471 = reshape(%469, newshape=[539]) /* ty=Tensor[(539), float32] */;
  %472 = @func_4688(%470, %471) /* ty=(Tensor[(11, 5, 7), float64], Tensor[(4, 5, 15), float32], Tensor[(539), float32], Tensor[(528), int32]) */;
  %473 = cast(%var_7268, dtype="float32") /* ty=Tensor[(15, 8, 7), float32] */;
  %474 = sin(%473) /* ty=Tensor[(15, 8, 7), float32] */;
  %475 = cast(%var_7268, dtype="int16") /* ty=Tensor[(15, 8, 7), int16] */;
  %476 = shape_of(%474, dtype="int32") /* ty=Tensor[(3), int32] */;
  %477 = cast(%474, dtype="int16") /* ty=Tensor[(15, 8, 7), int16] */;
  %478 = dyn.reshape(%475, %476, newshape=[]) /* ty=Tensor[(?, ?, ?), int16] */;
  %479 = @func_2758(%464) /* ty=Tensor[(12, 15, 10), float32] */;
  %480 = %467.1;
  %481 = %472.0;
  %482 = subtract(%477, %478) /* ty=Tensor[(15, 8, 7), int16] */;
  (%479, %var_7282, %480, meta[relay.Constant][32] /* ty=Tensor[(104), float64] */, %481, meta[relay.Constant][33] /* ty=Tensor[(385), float64] */, meta[relay.Constant][34] /* ty=Tensor[(539), float32] */, %482)
}

def @func_3372(%var_3370: float32, %var_3371: Tensor[(15, 2, 6), float32]) -> (Tensor[(15, 2, 6), bool],) {
  %486 = fn (%var_3361: float32, %var_3362: Tensor[(15, 2, 6), float32]) -> (Tensor[(15, 2, 6), bool],) {
    %483 = cast(%var_3361, dtype="bool") /* ty=bool */;
    %484 = cast(%var_3362, dtype="bool") /* ty=Tensor[(15, 2, 6), bool] */;
    %485 = greater(%483, %484) /* ty=Tensor[(15, 2, 6), bool] */;
    (%485,)
  };
  %486(%var_3370, %var_3371) /* ty=(Tensor[(15, 2, 6), bool],) */
}

def @func_4688(%var_4662: Tensor[(11, 5, 7), float64], %var_4666: Tensor[(539), float32]) -> (Tensor[(11, 5, 7), float64], Tensor[(4, 5, 15), float32], Tensor[(539), float32], Tensor[(528), int32]) {
  %487 = cast(%var_4662, dtype="float64") /* ty=Tensor[(11, 5, 7), float64] */;
  %488 = cast(%var_4666, dtype="float32") /* ty=Tensor[(539), float32] */;
  %489 = cast(meta[relay.Constant][35] /* ty=Tensor[(528), int32] */, dtype="int32") /* ty=Tensor[(528), int32] */;
  %490 = reshape(%488, newshape=[7, 11, 7]) /* ty=Tensor[(7, 11, 7), float32] */;
  %491 = reshape(%489, newshape=[528]) /* ty=Tensor[(528), int32] */;
  %492 = @func_3680(%490, %491) /* ty=(Tensor[(7, 11, 7), float32], Tensor[(528), int32], Tensor[(4, 5, 15), float32], Tensor[(5, 60), uint8], Tensor[(11, 16, 3), float32]) */;
  %493 = erf(%487) /* ty=Tensor[(11, 5, 7), float64] */;
  %494 = %492.2;
  (%493, %494, %var_4666, meta[relay.Constant][35] /* ty=Tensor[(528), int32] */)
}

def @func_7689(%var_7678: Tensor[(10, 15, 16), int16]) -> Tensor[(10, 15, 16), int16] {
  %495 = cast(meta[relay.Constant][36] /* ty=Tensor[(10, 15, 16), int16] */, dtype="int16") /* ty=Tensor[(10, 15, 16), int16] */;
  %496 = shape_of(%var_7678, dtype="int32") /* ty=Tensor[(3), int32] */;
  %497 = cast(%var_7678, dtype="int16") /* ty=Tensor[(10, 15, 16), int16] */;
  %498 = dyn.reshape(%495, %496, newshape=[]) /* ty=Tensor[(?, ?, ?), int16] */;
  subtract(%497, %498) /* ty=Tensor[(10, 15, 16), int16] */
}

def @func_5347(%var_5346: Tensor[(9, 15, 13), uint16]) -> Tensor[(9, 15, 13), uint16] {
  %503 = fn (%var_5336: Tensor[(9, 15, 13), uint16]) -> Tensor[(9, 15, 13), uint16] {
    %499 = cast(%var_5336, dtype="uint16") /* ty=Tensor[(9, 15, 13), uint16] */;
    %500 = shape_of(meta[relay.Constant][37] /* ty=Tensor[(9, 15, 13), uint16] */, dtype="int32") /* ty=Tensor[(3), int32] */;
    %501 = cast(meta[relay.Constant][37] /* ty=Tensor[(9, 15, 13), uint16] */, dtype="uint16") /* ty=Tensor[(9, 15, 13), uint16] */;
    %502 = dyn.reshape(%499, %500, newshape=[]) /* ty=Tensor[(?, ?, ?), uint16] */;
    minimum(%501, %502) /* ty=Tensor[(9, 15, 13), uint16] */
  };
  %503(%var_5346) /* ty=Tensor[(9, 15, 13), uint16] */
}

def @func_12070(%var_12068: Tensor[(50, 6), uint8], %var_12069: Tensor[(70, 2), uint8]) -> (Tensor[(12, 14, 7), float32], Tensor[(4, 5, 15), float32], Tensor[(50, 6), uint8], Tensor[(960), uint32], Tensor[(70, 2), uint8]) {
  %515 = fn (%var_12060: Tensor[(50, 6), uint8], %var_12063: Tensor[(70, 2), uint8]) -> (Tensor[(12, 14, 7), float32], Tensor[(4, 5, 15), float32], Tensor[(50, 6), uint8], Tensor[(960), uint32], Tensor[(70, 2), uint8]) {
    %504 = @func_11595() /* ty=(Tensor[(12, 14, 7), float32],) */;
    %505 = cast(%var_12060, dtype="uint8") /* ty=Tensor[(50, 6), uint8] */;
    %506 = cast(%var_12060, dtype="uint8") /* ty=Tensor[(50, 6), uint8] */;
    %507 = reshape(%505, newshape=[4, 5, 15]) /* ty=Tensor[(4, 5, 15), uint8] */;
    %508 = reshape(%506, newshape=[4, 5, 15]) /* ty=Tensor[(4, 5, 15), uint8] */;
    %509 = cast(%var_12063, dtype="uint8") /* ty=Tensor[(70, 2), uint8] */;
    %510 = reshape(%509, newshape=[5, 14, 2]) /* ty=Tensor[(5, 14, 2), uint8] */;
    %511 = @func_6871(%510) /* ty=(Tensor[(12, 5, 16), bool], Tensor[(960), uint32], Tensor[(5, 14, 2), float32]) */;
    %512 = %504.0;
    %513 = @func_2566(%507, %508) /* ty=Tensor[(4, 5, 15), float32] */;
    %514 = %511.1;
    (%512, %513, %var_12060, %514, %var_12063)
  };
  %515(%var_12068, %var_12069) /* ty=(Tensor[(12, 14, 7), float32], Tensor[(4, 5, 15), float32], Tensor[(50, 6), uint8], Tensor[(960), uint32], Tensor[(70, 2), uint8]) */
}

def @func_6873(%var_6872: Tensor[(5, 14, 2), uint8]) -> (Tensor[(12, 5, 16), bool], Tensor[(960), uint32], Tensor[(5, 14, 2), float32]) {
  %539 = fn (%var_6829: Tensor[(5, 14, 2), uint8]) -> (Tensor[(12, 5, 16), bool], Tensor[(960), uint32], Tensor[(5, 14, 2), float32]) {
    %516 = cast(meta[relay.Constant][38] /* ty=Tensor[(960), uint32] */, dtype="uint32") /* ty=Tensor[(960), uint32] */;
    %517 = cast(meta[relay.Constant][38] /* ty=Tensor[(960), uint32] */, dtype="uint32") /* ty=Tensor[(960), uint32] */;
    %518 = reshape(%516, newshape=[12, 5, 16]) /* ty=Tensor[(12, 5, 16), uint32] */;
    %519 = reshape(%517, newshape=[12, 5, 16]) /* ty=Tensor[(12, 5, 16), uint32] */;
    %520 = @func_4589(%518, %519) /* ty=(Tensor[(12, 5, 16), bool],) */;
    %521 = cast(%var_6829, dtype="float32") /* ty=Tensor[(5, 14, 2), float32] */;
    %522 = tan(%521) /* ty=Tensor[(5, 14, 2), float32] */;
    %523 = cast(%var_6829, dtype="uint8") /* ty=Tensor[(5, 14, 2), uint8] */;
    %524 = shape_of(meta[relay.Constant][39] /* ty=Tensor[(5, 14, 2), uint8] */, dtype="int32") /* ty=Tensor[(3), int32] */;
    %525 = cast(meta[relay.Constant][39] /* ty=Tensor[(5, 14, 2), uint8] */, dtype="uint8") /* ty=Tensor[(5, 14, 2), uint8] */;
    %526 = dyn.reshape(%523, %524, newshape=[]) /* ty=Tensor[(?, ?, ?), uint8] */;
    %527 = logical_xor(%525, %526) /* ty=Tensor[(5, 14, 2), uint8] */;
    %528 = cast(%527, dtype="uint16") /* ty=Tensor[(5, 14, 2), uint16] */;
    %529 = shape_of(%var_6829, dtype="int32") /* ty=Tensor[(3), int32] */;
    %530 = cast(%var_6829, dtype="uint16") /* ty=Tensor[(5, 14, 2), uint16] */;
    %531 = dyn.reshape(%528, %529, newshape=[]) /* ty=Tensor[(?, ?, ?), uint16] */;
    %532 = minimum(%530, %531) /* ty=Tensor[(5, 14, 2), uint16] */;
    %533 = cast(%532, dtype="float32") /* ty=Tensor[(5, 14, 2), float32] */;
    %534 = shape_of(%522, dtype="int32") /* ty=Tensor[(3), int32] */;
    %535 = cast(%522, dtype="float32") /* ty=Tensor[(5, 14, 2), float32] */;
    %536 = dyn.reshape(%533, %534, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
    %537 = %520.0;
    %538 = power(%535, %536) /* ty=Tensor[(5, 14, 2), float32] */;
    (%537, meta[relay.Constant][38] /* ty=Tensor[(960), uint32] */, %538)
  };
  %539(%var_6872) /* ty=(Tensor[(12, 5, 16), bool], Tensor[(960), uint32], Tensor[(5, 14, 2), float32]) */
}

def @main(%var_14035: float32, %var_14036: Tensor[(180), float32], %var_14045: Tensor[(36, 16), float32]) -> (Tensor[(12, 14, 7), float32], Tensor[(780), float32], Tensor[(14, 5, 5), float64], Tensor[(350), float64], Tensor[(12, 14, 7), float32], Tensor[(180), float32], Tensor[(36, 16), int16], Tensor[(5, 13, 12), float32]) {
  %540 = @func_13440() /* ty=(Tensor[(12, 14, 7), float32],) */;
  %541 = cast(meta[relay.Constant][41] /* ty=Tensor[(350), float64] */, dtype="float64") /* ty=Tensor[(350), float64] */;
  %542 = cast(meta[relay.Constant][41] /* ty=Tensor[(350), float64] */, dtype="float64") /* ty=Tensor[(350), float64] */;
  %543 = reshape(%541, newshape=[14, 5, 5]) /* ty=Tensor[(14, 5, 5), float64] */;
  %544 = reshape(%542, newshape=[14, 5, 5]) /* ty=Tensor[(14, 5, 5), float64] */;
  %545 = cast(%var_14035, dtype="float32") /* ty=float32 */;
  %546 = cast(%var_14036, dtype="float32") /* ty=Tensor[(180), float32] */;
  %547 = reshape(%545, newshape=[]) /* ty=float32 */;
  %548 = reshape(%546, newshape=[180]) /* ty=Tensor[(180), float32] */;
  %549 = @func_13379(%547, %548) /* ty=(Tensor[(13, 8, 1), float64], Tensor[(104), float64], Tensor[(15, 2, 6), bool], Tensor[(180), float32], Tensor[(12, 14, 7), float32]) */;
  %550 = cast(meta[relay.Constant][42] /* ty=Tensor[(36, 16), float64] */, dtype="float32") /* ty=Tensor[(36, 16), float32] */;
  %551 = atanh(%550) /* ty=Tensor[(36, 16), float32] */;
  %552 = cast(%var_14045, dtype="int16") /* ty=Tensor[(36, 16), int16] */;
  %553 = shape_of(%551, dtype="int32") /* ty=Tensor[(2), int32] */;
  %554 = cast(%551, dtype="int16") /* ty=Tensor[(36, 16), int16] */;
  %555 = dyn.reshape(%552, %553, newshape=[]) /* ty=Tensor[(?, ?), int16] */;
  %556 = cast(meta[relay.Constant][42] /* ty=Tensor[(36, 16), float64] */, dtype="float64") /* ty=Tensor[(36, 16), float64] */;
  %557 = cast(meta[relay.Constant][40] /* ty=Tensor[(780), float32] */, dtype="float32") /* ty=Tensor[(780), float32] */;
  %558 = reshape(%556, newshape=[4, 9, 16]) /* ty=Tensor[(4, 9, 16), float64] */;
  %559 = reshape(%557, newshape=[780]) /* ty=Tensor[(780), float32] */;
  %560 = @func_4501(%558, %559) /* ty=(Tensor[(4, 9, 16), float64], Tensor[(5, 13, 12), float32], Tensor[(780), float32]) */;
  %561 = %560.1;
  %562 = cast(%561, dtype="float32") /* ty=Tensor[(5, 13, 12), float32] */;
  %563 = cast(%var_14035, dtype="float32") /* ty=float32 */;
  %564 = %540.0;
  %565 = @func_6467(%543, %544) /* ty=Tensor[(14, 5, 5), float64] */;
  %566 = %549.4;
  %567 = multiply(%554, %555) /* ty=Tensor[(36, 16), int16] */;
  %568 = subtract(%562, %563) /* ty=Tensor[(5, 13, 12), float32] */;
  (%564, meta[relay.Constant][40] /* ty=Tensor[(780), float32] */, %565, meta[relay.Constant][41] /* ty=Tensor[(350), float64] */, %566, %var_14036, %567, %568)
}

def @func_3683(%var_3681: Tensor[(7, 11, 7), float32], %var_3682: Tensor[(528), int32]) -> (Tensor[(7, 11, 7), float32], Tensor[(528), int32], Tensor[(4, 5, 15), float32], Tensor[(5, 60), uint8], Tensor[(11, 16, 3), float32]) {
  %592 = fn (%var_3617: Tensor[(7, 11, 7), float32], %var_3640: Tensor[(528), int32]) -> (Tensor[(7, 11, 7), float32], Tensor[(528), int32], Tensor[(4, 5, 15), float32], Tensor[(5, 60), uint8], Tensor[(11, 16, 3), float32]) {
    %569 = cast(meta[relay.Constant][43] /* ty=Tensor[(7, 11, 7), float32] */, dtype="float32") /* ty=Tensor[(7, 11, 7), float32] */;
    %570 = shape_of(%var_3617, dtype="int32") /* ty=Tensor[(3), int32] */;
    %571 = cast(%var_3617, dtype="float32") /* ty=Tensor[(7, 11, 7), float32] */;
    %572 = dyn.reshape(%569, %570, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
    %573 = cast(meta[relay.Constant][44] /* ty=Tensor[(5, 60), uint8] */, dtype="uint8") /* ty=Tensor[(5, 60), uint8] */;
    %574 = cast(meta[relay.Constant][44] /* ty=Tensor[(5, 60), uint8] */, dtype="uint8") /* ty=Tensor[(5, 60), uint8] */;
    %575 = reshape(%573, newshape=[4, 5, 15]) /* ty=Tensor[(4, 5, 15), uint8] */;
    %576 = reshape(%574, newshape=[4, 5, 15]) /* ty=Tensor[(4, 5, 15), uint8] */;
    %577 = cast(%var_3640, dtype="int32") /* ty=Tensor[(528), int32] */;
    %578 = cast(%var_3640, dtype="int32") /* ty=Tensor[(528), int32] */;
    %579 = reshape(%577, newshape=[11, 16, 3]) /* ty=Tensor[(11, 16, 3), int32] */;
    %580 = reshape(%578, newshape=[11, 16, 3]) /* ty=Tensor[(11, 16, 3), int32] */;
    %581 = @func_2900(%579, %580) /* ty=(Tensor[(11, 16, 3), int32], Tensor[(11, 16, 3), float32]) */;
    %582 = %581.1;
    %583 = cast(%582, dtype="float32") /* ty=Tensor[(11, 16, 3), float32] */;
    %584 = atanh(%583) /* ty=Tensor[(11, 16, 3), float32] */;
    %585 = cast(%582, dtype="float32") /* ty=Tensor[(11, 16, 3), float32] */;
    %586 = shape_of(%584, dtype="int32") /* ty=Tensor[(3), int32] */;
    %587 = cast(%584, dtype="float32") /* ty=Tensor[(11, 16, 3), float32] */;
    %588 = dyn.reshape(%585, %586, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
    %589 = floor_divide(%571, %572) /* ty=Tensor[(7, 11, 7), float32] */;
    %590 = @func_2566(%575, %576) /* ty=Tensor[(4, 5, 15), float32] */;
    %591 = power(%587, %588) /* ty=Tensor[(11, 16, 3), float32] */;
    (%589, %var_3640, %590, meta[relay.Constant][44] /* ty=Tensor[(5, 60), uint8] */, %591)
  };
  %592(%var_3681, %var_3682) /* ty=(Tensor[(7, 11, 7), float32], Tensor[(528), int32], Tensor[(4, 5, 15), float32], Tensor[(5, 60), uint8], Tensor[(11, 16, 3), float32]) */
}

def @func_11439(%var_11437: Tensor[(11, 14), float32]) -> (Tensor[(12, 14, 7), float32], Tensor[(4, 5, 15), float32], Tensor[(360), float64], Tensor[(1800, 1), float32], Tensor[(12, 4, 6), float32], Tensor[(528), int32], Tensor[(?, 11, 14), int32], Tensor[(11, 14), float32]) {
  @func_11436(%var_11437) /* ty=(Tensor[(12, 14, 7), float32], Tensor[(4, 5, 15), float32], Tensor[(360), float64], Tensor[(1800, 1), float32], Tensor[(12, 4, 6), float32], Tensor[(528), int32], Tensor[(?, 11, 14), int32], Tensor[(11, 14), float32]) */
}

def @func_4635(%var_4632: Tensor[(16, 14, 6), int64], %var_4633: Tensor[(16, 14, 6), int64], %var_4634: Tensor[(1, 154), float32]) -> (Tensor[(16, 14, 6), bool], Tensor[(?, 11, 14), int32], Tensor[(1, 154), float32]) {
  %601 = fn (%var_4614: Tensor[(16, 14, 6), int64], %var_4615: Tensor[(16, 14, 6), int64], %var_4622: Tensor[(1, 154), float32]) -> (Tensor[(16, 14, 6), bool], Tensor[(?, 11, 14), int32], Tensor[(1, 154), float32]) {
    %593 = cast(%var_4615, dtype="bool") /* ty=Tensor[(16, 14, 6), bool] */;
    %594 = shape_of(%var_4614, dtype="int32") /* ty=Tensor[(3), int32] */;
    %595 = cast(%var_4614, dtype="bool") /* ty=Tensor[(16, 14, 6), bool] */;
    %596 = dyn.reshape(%593, %594, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    %597 = cast(%var_4622, dtype="float32") /* ty=Tensor[(1, 154), float32] */;
    %598 = reshape(%597, newshape=[1, 11, 14]) /* ty=Tensor[(1, 11, 14), float32] */;
    %599 = not_equal(%595, %596) /* ty=Tensor[(16, 14, 6), bool] */;
    %600 = @func_421(%598) /* ty=Tensor[(?, 11, 14), int32] */;
    (%599, %600, %var_4622)
  };
  %601(%var_4632, %var_4633, %var_4634) /* ty=(Tensor[(16, 14, 6), bool], Tensor[(?, 11, 14), int32], Tensor[(1, 154), float32]) */
}

def @func_10682(%var_10680: Tensor[(3, 11, 10), float32]) -> Tensor[(3, 11, 10), float32] {
  @func_10679(%var_10680) /* ty=Tensor[(3, 11, 10), float32] */
}

def @func_12165() -> Tensor[(12, 14, 7), float32] {
  %602 = @func_11595() /* ty=(Tensor[(12, 14, 7), float32],) */;
  %602.0
}

def @func_11978() -> Tensor[(12, 14, 7), float32] {
  @func_11976() /* ty=Tensor[(12, 14, 7), float32] */
}

def @func_10922(%var_10916: Tensor[(10, 12, 5), float32], %var_10917: int16, %var_10918: Tensor[(378), int32], %var_10919: Tensor[(385), float64], %var_10920: Tensor[(810), float64], %var_10921: Tensor[(4, 128), float64]) -> (Tensor[(10, 12, 5), float32], Tensor[(180), float32], int16, Tensor[(3, 45), int16], Tensor[(378), int32], Tensor[(385), float64], Tensor[(15, 6, 9), float64], Tensor[(810), float64], Tensor[(16, 8, 4), uint8], Tensor[(4, 128), float64]) {
  %622 = fn (%var_10863: Tensor[(10, 12, 5), float32], %var_10876: int16, %var_10878: Tensor[(378), int32], %var_10879: Tensor[(385), float64], %var_10892: Tensor[(810), float64], %var_10912: Tensor[(4, 128), float64]) -> (Tensor[(10, 12, 5), float32], Tensor[(180), float32], int16, Tensor[(3, 45), int16], Tensor[(378), int32], Tensor[(385), float64], Tensor[(15, 6, 9), float64], Tensor[(810), float64], Tensor[(16, 8, 4), uint8], Tensor[(4, 128), float64]) {
    %603 = cast(%var_10863, dtype="float32") /* ty=Tensor[(10, 12, 5), float32] */;
    %604 = cast(%var_10876, dtype="int16") /* ty=int16 */;
    %605 = cast(meta[relay.Constant][45] /* ty=Tensor[(3, 45), int16] */, dtype="int16") /* ty=Tensor[(3, 45), int16] */;
    %606 = cast(%var_10878, dtype="int32") /* ty=Tensor[(378), int32] */;
    %607 = cast(%var_10879, dtype="float64") /* ty=Tensor[(385), float64] */;
    %608 = reshape(%604, newshape=[]) /* ty=int16 */;
    %609 = reshape(%605, newshape=[1, 9, 15]) /* ty=Tensor[(1, 9, 15), int16] */;
    %610 = reshape(%606, newshape=[378]) /* ty=Tensor[(378), int32] */;
    %611 = reshape(%607, newshape=[55, 7]) /* ty=Tensor[(55, 7), float64] */;
    %612 = @func_6604(%608, %609, %610, %611) /* ty=(Tensor[(1, 9, 15), int16], Tensor[(180), float32], Tensor[(378), int32], Tensor[(960, 1), uint32], Tensor[(22, 7), float32], Tensor[(55, 7), float64], Tensor[(539), float32], Tensor[(528), int32]) */;
    %613 = cast(%var_10892, dtype="float64") /* ty=Tensor[(810), float64] */;
    %614 = reshape(%613, newshape=[15, 6, 9]) /* ty=Tensor[(15, 6, 9), float64] */;
    %615 = cast(%var_10912, dtype="float64") /* ty=Tensor[(4, 128), float64] */;
    %616 = reshape(%615, newshape=[16, 8, 4]) /* ty=Tensor[(16, 8, 4), float64] */;
    %617 = @func_6376(%616) /* ty=(Tensor[(16, 8, 4), uint8], Tensor[(16, 7, 5), bool], Tensor[(560), float64], Tensor[(154), float32]) */;
    %618 = erf(%603) /* ty=Tensor[(10, 12, 5), float32] */;
    %619 = %612.1;
    %620 = @func_7164(%614) /* ty=Tensor[(15, 6, 9), float64] */;
    %621 = %617.0;
    (%618, %619, %var_10876, meta[relay.Constant][45] /* ty=Tensor[(3, 45), int16] */, %var_10878, %var_10879, %620, %var_10892, %621, %var_10912)
  };
  %622(%var_10916, %var_10917, %var_10918, %var_10919, %var_10920, %var_10921) /* ty=(Tensor[(10, 12, 5), float32], Tensor[(180), float32], int16, Tensor[(3, 45), int16], Tensor[(378), int32], Tensor[(385), float64], Tensor[(15, 6, 9), float64], Tensor[(810), float64], Tensor[(16, 8, 4), uint8], Tensor[(4, 128), float64]) */
}

def @func_11436(%var_11429: Tensor[(11, 14), float32]) -> (Tensor[(12, 14, 7), float32], Tensor[(4, 5, 15), float32], Tensor[(360), float64], Tensor[(1800, 1), float32], Tensor[(12, 4, 6), float32], Tensor[(528), int32], Tensor[(?, 11, 14), int32], Tensor[(11, 14), float32]) {
  %623 = @func_11411() /* ty=(Tensor[(12, 14, 7), float32],) */;
  %624 = cast(meta[relay.Constant][46] /* ty=Tensor[(360), float64] */, dtype="float64") /* ty=Tensor[(360), float64] */;
  %625 = cast(meta[relay.Constant][47] /* ty=Tensor[(1800, 1), float32] */, dtype="float32") /* ty=Tensor[(1800, 1), float32] */;
  %626 = reshape(%624, newshape=[10, 6, 6]) /* ty=Tensor[(10, 6, 6), float64] */;
  %627 = reshape(%625, newshape=[1800]) /* ty=Tensor[(1800), float32] */;
  %628 = @func_9089(%626, %627) /* ty=(Tensor[(10, 6, 6), float64], Tensor[(4, 5, 15), float32], Tensor[(300), uint8], Tensor[(12, ?), float64], Tensor[(12), float64], Tensor[(104), float64], Tensor[(6, 140), float32], Tensor[(1800), float32]) */;
  %629 = cast(meta[relay.Constant][48] /* ty=Tensor[(528), int32] */, dtype="int32") /* ty=Tensor[(528), int32] */;
  %630 = reshape(%629, newshape=[8, 66]) /* ty=Tensor[(8, 66), int32] */;
  %631 = @func_8726(%630) /* ty=(Tensor[(12, 4, 6), float32], Tensor[(7, 11, 7), float32], Tensor[(539, 1), float32], Tensor[(8, 66), int32]) */;
  %632 = cast(%var_11429, dtype="float32") /* ty=Tensor[(11, 14), float32] */;
  %633 = reshape(%632, newshape=[1, 11, 14]) /* ty=Tensor[(1, 11, 14), float32] */;
  %634 = %623.0;
  %635 = %628.1;
  %636 = %631.0;
  %637 = @func_421(%633) /* ty=Tensor[(?, 11, 14), int32] */;
  (%634, %635, meta[relay.Constant][46] /* ty=Tensor[(360), float64] */, meta[relay.Constant][47] /* ty=Tensor[(1800, 1), float32] */, %636, meta[relay.Constant][48] /* ty=Tensor[(528), int32] */, %637, %var_11429)
}

def @func_13053(%var_13042: Tensor[(330), float32]) -> (Tensor[(3, 11, 10), float32], Tensor[(330), float32], Tensor[(12, 14, 7), int64]) {
  %638 = cast(%var_13042, dtype="float32") /* ty=Tensor[(330), float32] */;
  %639 = reshape(%638, newshape=[3, 11, 10]) /* ty=Tensor[(3, 11, 10), float32] */;
  %640 = @func_12810() /* ty=Tensor[(12, 14, 7), float32] */;
  %641 = cast(%640, dtype="float32") /* ty=Tensor[(12, 14, 7), float32] */;
  %642 = sinh(%641) /* ty=Tensor[(12, 14, 7), float32] */;
  %643 = cast(%642, dtype="int64") /* ty=Tensor[(12, 14, 7), int64] */;
  %644 = shape_of(%640, dtype="int32") /* ty=Tensor[(3), int32] */;
  %645 = cast(%640, dtype="int64") /* ty=Tensor[(12, 14, 7), int64] */;
  %646 = dyn.reshape(%643, %644, newshape=[]) /* ty=Tensor[(?, ?, ?), int64] */;
  %647 = @func_10679(%639) /* ty=Tensor[(3, 11, 10), float32] */;
  %648 = maximum(%645, %646) /* ty=Tensor[(12, 14, 7), int64] */;
  (%647, %var_13042, %648)
}

def @func_12352() -> (Tensor[(12, 14, 7), uint64], Tensor[(12, 14, 7), float32]) {
  %649 = @func_12007() /* ty=(Tensor[(12, 14, 7), uint64],) */;
  %650 = %649.0;
  %651 = @func_11639() /* ty=Tensor[(12, 14, 7), float32] */;
  (%650, %651)
}

def @func_13760() -> (Tensor[(12, 14, 7), float32], Tensor[(3, 16, 4), float32], Tensor[(2, 96), float32], Tensor[(15, 7, 10), bool], Tensor[(1050), int64], Tensor[(528), int32]) {
  %670 = fn () -> (Tensor[(12, 14, 7), float32], Tensor[(3, 16, 4), float32], Tensor[(2, 96), float32], Tensor[(15, 7, 10), bool], Tensor[(1050), int64], Tensor[(528), int32]) {
    %652 = @func_11498() /* ty=(Tensor[(12, 14, 7), float32],) */;
    %653 = %652.0;
    %654 = cast(%653, dtype="float32") /* ty=Tensor[(12, 14, 7), float32] */;
    %655 = cast(meta[relay.Constant][49] /* ty=Tensor[(2, 96), float32] */, dtype="float32") /* ty=Tensor[(2, 96), float32] */;
    %656 = cast(meta[relay.Constant][49] /* ty=Tensor[(2, 96), float32] */, dtype="float32") /* ty=Tensor[(2, 96), float32] */;
    %657 = reshape(%655, newshape=[3, 16, 4]) /* ty=Tensor[(3, 16, 4), float32] */;
    %658 = reshape(%656, newshape=[3, 16, 4]) /* ty=Tensor[(3, 16, 4), float32] */;
    %659 = @func_8115(%657, %658) /* ty=(Tensor[(3, 16, 4), float32],) */;
    %660 = cast(meta[relay.Constant][50] /* ty=Tensor[(1050), int64] */, dtype="int64") /* ty=Tensor[(1050), int64] */;
    %661 = cast(meta[relay.Constant][50] /* ty=Tensor[(1050), int64] */, dtype="int64") /* ty=Tensor[(1050), int64] */;
    %662 = cast(meta[relay.Constant][51] /* ty=Tensor[(528), int32] */, dtype="int32") /* ty=Tensor[(528), int32] */;
    %663 = reshape(%660, newshape=[15, 7, 10]) /* ty=Tensor[(15, 7, 10), int64] */;
    %664 = reshape(%661, newshape=[15, 7, 10]) /* ty=Tensor[(15, 7, 10), int64] */;
    %665 = reshape(%662, newshape=[528, 1]) /* ty=Tensor[(528, 1), int32] */;
    %666 = @func_3172(%663, %664, %665) /* ty=(Tensor[(15, 7, 10), bool], Tensor[(11, 16, 3), float32], Tensor[(528, 1), int32]) */;
    %667 = asin(%654) /* ty=Tensor[(12, 14, 7), float32] */;
    %668 = %659.0;
    %669 = %666.0;
    (%667, %668, meta[relay.Constant][49] /* ty=Tensor[(2, 96), float32] */, %669, meta[relay.Constant][50] /* ty=Tensor[(1050), int64] */, meta[relay.Constant][51] /* ty=Tensor[(528), int32] */)
  };
  %670() /* ty=(Tensor[(12, 14, 7), float32], Tensor[(3, 16, 4), float32], Tensor[(2, 96), float32], Tensor[(15, 7, 10), bool], Tensor[(1050), int64], Tensor[(528), int32]) */
}

def @func_12354() -> (Tensor[(12, 14, 7), uint64], Tensor[(12, 14, 7), float32]) {
  @func_12352() /* ty=(Tensor[(12, 14, 7), uint64], Tensor[(12, 14, 7), float32]) */
}

def @func_2566(%var_2552: Tensor[(4, 5, 15), uint8], %var_2553: Tensor[(4, 5, 15), uint8]) -> Tensor[(4, 5, 15), float32] {
  %671 = cast(%var_2553, dtype="uint8") /* ty=Tensor[(4, 5, 15), uint8] */;
  %672 = shape_of(%var_2552, dtype="int32") /* ty=Tensor[(3), int32] */;
  %673 = cast(%var_2552, dtype="uint8") /* ty=Tensor[(4, 5, 15), uint8] */;
  %674 = dyn.reshape(%671, %672, newshape=[]) /* ty=Tensor[(?, ?, ?), uint8] */;
  %675 = multiply(%673, %674) /* ty=Tensor[(4, 5, 15), uint8] */;
  %676 = cast(%675, dtype="float32") /* ty=Tensor[(4, 5, 15), float32] */;
  log2(%676) /* ty=Tensor[(4, 5, 15), float32] */
}

def @func_1921(%var_1918: Tensor[(16, 7, 5), float64], %var_1919: Tensor[(154), float32], %var_1920: Tensor[(16, 7, 5), float64]) -> (Tensor[(16, 7, 5), float64], Tensor[(?, 11, 14), int32], Tensor[(154), float32], Tensor[(16, 7, 5), bool]) {
  %687 = fn (%var_1895: Tensor[(16, 7, 5), float64], %var_1899: Tensor[(154), float32], %var_1912: Tensor[(16, 7, 5), float64]) -> (Tensor[(16, 7, 5), float64], Tensor[(?, 11, 14), int32], Tensor[(154), float32], Tensor[(16, 7, 5), bool]) {
    %677 = cast(%var_1895, dtype="float64") /* ty=Tensor[(16, 7, 5), float64] */;
    %678 = cast(%var_1899, dtype="float32") /* ty=Tensor[(154), float32] */;
    %679 = reshape(%678, newshape=[1, 11, 14]) /* ty=Tensor[(1, 11, 14), float32] */;
    %680 = cast(%var_1912, dtype="bool") /* ty=Tensor[(16, 7, 5), bool] */;
    %681 = shape_of(%var_1895, dtype="int32") /* ty=Tensor[(3), int32] */;
    %682 = cast(%var_1895, dtype="bool") /* ty=Tensor[(16, 7, 5), bool] */;
    %683 = dyn.reshape(%680, %681, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    %684 = log10(%677) /* ty=Tensor[(16, 7, 5), float64] */;
    %685 = @func_421(%679) /* ty=Tensor[(?, 11, 14), int32] */;
    %686 = less(%682, %683) /* ty=Tensor[(16, 7, 5), bool] */;
    (%684, %685, %var_1899, %686)
  };
  %687(%var_1918, %var_1919, %var_1920) /* ty=(Tensor[(16, 7, 5), float64], Tensor[(?, 11, 14), int32], Tensor[(154), float32], Tensor[(16, 7, 5), bool]) */
}

def @func_12338() -> Tensor[(12, 14, 7), float32] {
  @func_11976() /* ty=Tensor[(12, 14, 7), float32] */
}

def @func_12517(%var_12515: Tensor[(300), uint8], %var_12516: Tensor[(140), uint8]) -> (Tensor[(12, 14, 7), float32], Tensor[(50, 6), uint8], Tensor[(300), uint8], Tensor[(140), uint8]) {
  %695 = fn (%var_12511: Tensor[(300), uint8], %var_12512: Tensor[(140), uint8]) -> (Tensor[(12, 14, 7), float32], Tensor[(50, 6), uint8], Tensor[(300), uint8], Tensor[(140), uint8]) {
    %688 = cast(%var_12511, dtype="uint8") /* ty=Tensor[(300), uint8] */;
    %689 = cast(%var_12512, dtype="uint8") /* ty=Tensor[(140), uint8] */;
    %690 = reshape(%688, newshape=[50, 6]) /* ty=Tensor[(50, 6), uint8] */;
    %691 = reshape(%689, newshape=[70, 2]) /* ty=Tensor[(70, 2), uint8] */;
    %692 = @func_12067(%690, %691) /* ty=(Tensor[(12, 14, 7), float32], Tensor[(4, 5, 15), float32], Tensor[(50, 6), uint8], Tensor[(960), uint32], Tensor[(70, 2), uint8]) */;
    %693 = @func_12182() /* ty=Tensor[(12, 14, 7), float32] */;
    %694 = %692.2;
    (%693, %694, %var_12511, %var_12512)
  };
  %695(%var_12515, %var_12516) /* ty=(Tensor[(12, 14, 7), float32], Tensor[(50, 6), uint8], Tensor[(300), uint8], Tensor[(140), uint8]) */
}

def @func_13521(%var_13519: Tensor[(780), float32], %var_13520: int16) -> (Tensor[(12, 14, 7), float32], Tensor[(576), float64], Tensor[(1, 576), float64], Tensor[(780), float32], Tensor[(385), float64], Tensor[(600), float32], int16, Tensor[(378), int32], Tensor[(55, 7), float64], Tensor[(810), float64], Tensor[(512), float64]) {
  %717 = fn (%var_13468: Tensor[(780), float32], %var_13511: int16) -> (Tensor[(12, 14, 7), float32], Tensor[(576), float64], Tensor[(1, 576), float64], Tensor[(780), float32], Tensor[(385), float64], Tensor[(600), float32], int16, Tensor[(378), int32], Tensor[(55, 7), float64], Tensor[(810), float64], Tensor[(512), float64]) {
    %696 = cast(meta[relay.Constant][52] /* ty=Tensor[(1, 576), float64] */, dtype="float64") /* ty=Tensor[(1, 576), float64] */;
    %697 = cast(%var_13468, dtype="float32") /* ty=Tensor[(780), float32] */;
    %698 = reshape(%696, newshape=[576]) /* ty=Tensor[(576), float64] */;
    %699 = reshape(%697, newshape=[10, 78]) /* ty=Tensor[(10, 78), float32] */;
    %700 = @func_11948(%698, %699) /* ty=(Tensor[(140), uint8], Tensor[(12, 14, 7), float32], Tensor[(12, 14, 7), bool], Tensor[(12, 14, 7), float32], Tensor[(300), uint8], Tensor[(22, 3), int64], Tensor[(4, 9, 16), float64], Tensor[(576), float64], Tensor[(10, 78), float64]) */;
    %701 = cast(meta[relay.Constant][53] /* ty=Tensor[(600), float32] */, dtype="float32") /* ty=Tensor[(600), float32] */;
    %702 = cast(%var_13511, dtype="int16") /* ty=int16 */;
    %703 = cast(meta[relay.Constant][54] /* ty=Tensor[(378), int32] */, dtype="int32") /* ty=Tensor[(378), int32] */;
    %704 = cast(meta[relay.Constant][55] /* ty=Tensor[(55, 7), float64] */, dtype="float64") /* ty=Tensor[(55, 7), float64] */;
    %705 = cast(meta[relay.Constant][56] /* ty=Tensor[(810), float64] */, dtype="float64") /* ty=Tensor[(810), float64] */;
    %706 = cast(meta[relay.Constant][57] /* ty=Tensor[(512), float64] */, dtype="float64") /* ty=Tensor[(512), float64] */;
    %707 = reshape(%701, newshape=[10, 12, 5]) /* ty=Tensor[(10, 12, 5), float32] */;
    %708 = reshape(%702, newshape=[]) /* ty=int16 */;
    %709 = reshape(%703, newshape=[378]) /* ty=Tensor[(378), int32] */;
    %710 = reshape(%704, newshape=[385]) /* ty=Tensor[(385), float64] */;
    %711 = reshape(%705, newshape=[810]) /* ty=Tensor[(810), float64] */;
    %712 = reshape(%706, newshape=[4, 128]) /* ty=Tensor[(4, 128), float64] */;
    %713 = @func_10915(%707, %708, %709, %710, %711, %712) /* ty=(Tensor[(10, 12, 5), float32], Tensor[(180), float32], int16, Tensor[(3, 45), int16], Tensor[(378), int32], Tensor[(385), float64], Tensor[(15, 6, 9), float64], Tensor[(810), float64], Tensor[(16, 8, 4), uint8], Tensor[(4, 128), float64]) */;
    %714 = @func_12182() /* ty=Tensor[(12, 14, 7), float32] */;
    %715 = %700.7;
    %716 = %713.5;
    (%714, %715, meta[relay.Constant][52] /* ty=Tensor[(1, 576), float64] */, %var_13468, %716, meta[relay.Constant][53] /* ty=Tensor[(600), float32] */, %var_13511, meta[relay.Constant][54] /* ty=Tensor[(378), int32] */, meta[relay.Constant][55] /* ty=Tensor[(55, 7), float64] */, meta[relay.Constant][56] /* ty=Tensor[(810), float64] */, meta[relay.Constant][57] /* ty=Tensor[(512), float64] */)
  };
  %717(%var_13519, %var_13520) /* ty=(Tensor[(12, 14, 7), float32], Tensor[(576), float64], Tensor[(1, 576), float64], Tensor[(780), float32], Tensor[(385), float64], Tensor[(600), float32], int16, Tensor[(378), int32], Tensor[(55, 7), float64], Tensor[(810), float64], Tensor[(512), float64]) */
}

def @func_7692(%var_7690: Tensor[(10, 15, 16), int16]) -> Tensor[(10, 15, 16), int16] {
  @func_7689(%var_7690) /* ty=Tensor[(10, 15, 16), int16] */
}

def @func_2903(%var_2901: Tensor[(11, 16, 3), int32], %var_2902: Tensor[(11, 16, 3), int32]) -> (Tensor[(11, 16, 3), int32], Tensor[(11, 16, 3), float32]) {
  %725 = fn (%var_2889: Tensor[(11, 16, 3), int32], %var_2890: Tensor[(11, 16, 3), int32]) -> (Tensor[(11, 16, 3), int32], Tensor[(11, 16, 3), float32]) {
    %718 = cast(%var_2890, dtype="int32") /* ty=Tensor[(11, 16, 3), int32] */;
    %719 = shape_of(%var_2889, dtype="int32") /* ty=Tensor[(3), int32] */;
    %720 = cast(%var_2889, dtype="int32") /* ty=Tensor[(11, 16, 3), int32] */;
    %721 = dyn.reshape(%718, %719, newshape=[]) /* ty=Tensor[(?, ?, ?), int32] */;
    %722 = cast(%var_2889, dtype="float32") /* ty=Tensor[(11, 16, 3), float32] */;
    %723 = logical_xor(%720, %721) /* ty=Tensor[(11, 16, 3), int32] */;
    %724 = acos(%722) /* ty=Tensor[(11, 16, 3), float32] */;
    (%723, %724)
  };
  %725(%var_2901, %var_2902) /* ty=(Tensor[(11, 16, 3), int32], Tensor[(11, 16, 3), float32]) */
}

def @func_13119(%var_13116: Tensor[(1950), float32], %var_13117: Tensor[(45, 3), int16], %var_13118: Tensor[(378), int32]) -> (Tensor[(140), uint8], Tensor[(55, 7), float64], Tensor[(1950), float32], int16, Tensor[(45, 3), int16], Tensor[(385), float64], Tensor[(300), uint8], Tensor[(?, 11, 14), int32], Tensor[(154, ?), uint32], Tensor[(154, 378), float32]) {
  %756 = fn (%var_13082: Tensor[(1950), float32], %var_13084: Tensor[(45, 3), int16], %var_13085: Tensor[(378), int32]) -> (Tensor[(140), uint8], Tensor[(55, 7), float64], Tensor[(1950), float32], int16, Tensor[(45, 3), int16], Tensor[(385), float64], Tensor[(300), uint8], Tensor[(?, 11, 14), int32], Tensor[(154, ?), uint32], Tensor[(154, 378), float32]) {
    %726 = cast(%var_13082, dtype="float32") /* ty=Tensor[(1950), float32] */;
    %727 = cast(%var_13082, dtype="float32") /* ty=Tensor[(1950), float32] */;
    %728 = cast(meta[relay.Constant][58] /* ty=int16 */, dtype="int16") /* ty=int16 */;
    %729 = cast(%var_13084, dtype="int16") /* ty=Tensor[(45, 3), int16] */;
    %730 = cast(%var_13085, dtype="int32") /* ty=Tensor[(378), int32] */;
    %731 = cast(meta[relay.Constant][59] /* ty=Tensor[(385), float64] */, dtype="float64") /* ty=Tensor[(385), float64] */;
    %732 = cast(meta[relay.Constant][60] /* ty=Tensor[(300), uint8] */, dtype="uint8") /* ty=Tensor[(300), uint8] */;
    %733 = reshape(%726, newshape=[15, 10, 13]) /* ty=Tensor[(15, 10, 13), float32] */;
    %734 = reshape(%727, newshape=[15, 10, 13]) /* ty=Tensor[(15, 10, 13), float32] */;
    %735 = reshape(%728, newshape=[]) /* ty=int16 */;
    %736 = reshape(%729, newshape=[135]) /* ty=Tensor[(135), int16] */;
    %737 = reshape(%730, newshape=[378]) /* ty=Tensor[(378), int32] */;
    %738 = reshape(%731, newshape=[55, 7]) /* ty=Tensor[(55, 7), float64] */;
    %739 = reshape(%732, newshape=[300]) /* ty=Tensor[(300), uint8] */;
    %740 = @func_11367(%733, %734, %735, %736, %737, %738, %739) /* ty=(Tensor[(180), float32], int16, Tensor[(135), int16], Tensor[(378), int32], Tensor[(55, 7), float64], Tensor[(15, 10, 13), float32], Tensor[(4, 5, 15), float32], Tensor[(300), uint8]) */;
    %741 = cast(meta[relay.Constant][61] /* ty=Tensor[(154, 1), float32] */, dtype="float32") /* ty=Tensor[(154, 1), float32] */;
    %742 = reshape(%741, newshape=[1, 11, 14]) /* ty=Tensor[(1, 11, 14), float32] */;
    %743 = cast(meta[relay.Constant][61] /* ty=Tensor[(154, 1), float32] */, dtype="float32") /* ty=Tensor[(154, 1), float32] */;
    %744 = sinh(%743) /* ty=Tensor[(154, 1), float32] */;
    %745 = cast(meta[relay.Constant][61] /* ty=Tensor[(154, 1), float32] */, dtype="uint32") /* ty=Tensor[(154, 1), uint32] */;
    %746 = shape_of(%744, dtype="int32") /* ty=Tensor[(2), int32] */;
    %747 = cast(%744, dtype="uint32") /* ty=Tensor[(154, 1), uint32] */;
    %748 = dyn.reshape(%745, %746, newshape=[]) /* ty=Tensor[(?, ?), uint32] */;
    %749 = cast(%744, dtype="float32") /* ty=Tensor[(154, 1), float32] */;
    %750 = cast(%var_13085, dtype="float32") /* ty=Tensor[(378), float32] */;
    %751 = @func_11828() /* ty=Tensor[(140), uint8] */;
    %752 = %740.4;
    %753 = @func_421(%742) /* ty=Tensor[(?, 11, 14), int32] */;
    %754 = add(%747, %748) /* ty=Tensor[(154, ?), uint32] */;
    %755 = floor_mod(%749, %750) /* ty=Tensor[(154, 378), float32] */;
    (%751, %752, %var_13082, meta[relay.Constant][58] /* ty=int16 */, %var_13084, meta[relay.Constant][59] /* ty=Tensor[(385), float64] */, meta[relay.Constant][60] /* ty=Tensor[(300), uint8] */, %753, %754, %755)
  };
  %756(%var_13116, %var_13117, %var_13118) /* ty=(Tensor[(140), uint8], Tensor[(55, 7), float64], Tensor[(1950), float32], int16, Tensor[(45, 3), int16], Tensor[(385), float64], Tensor[(300), uint8], Tensor[(?, 11, 14), int32], Tensor[(154, ?), uint32], Tensor[(154, 378), float32]) */
}

def @func_7920(%var_7918: Tensor[(2, 12, 7), float64], %var_7919: Tensor[(300), uint8]) -> (Tensor[(4, 5, 15), float32], Tensor[(300), uint8], Tensor[(2, 12, 7), int64], Tensor[(2, 12, 7), float32]) {
  @func_7916(%var_7918, %var_7919) /* ty=(Tensor[(4, 5, 15), float32], Tensor[(300), uint8], Tensor[(2, 12, 7), int64], Tensor[(2, 12, 7), float32]) */
}

def @func_3873(%var_3872: Tensor[(4, 6, 16), uint64]) -> Tensor[(4, 6, 16), bool] {
  %761 = fn (%var_3863: Tensor[(4, 6, 16), uint64]) -> Tensor[(4, 6, 16), bool] {
    %757 = cast(meta[relay.Constant][62] /* ty=Tensor[(4, 6, 16), uint64] */, dtype="bool") /* ty=Tensor[(4, 6, 16), bool] */;
    %758 = shape_of(%var_3863, dtype="int32") /* ty=Tensor[(3), int32] */;
    %759 = cast(%var_3863, dtype="bool") /* ty=Tensor[(4, 6, 16), bool] */;
    %760 = dyn.reshape(%757, %758, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    not_equal(%759, %760) /* ty=Tensor[(4, 6, 16), bool] */
  };
  %761(%var_3872) /* ty=Tensor[(4, 6, 16), bool] */
}

def @func_12052() -> (Tensor[(12, 14, 7), float32],) {
  @func_12050() /* ty=(Tensor[(12, 14, 7), float32],) */
}

def @func_11640() -> Tensor[(12, 14, 7), float32] {
  %763 = fn () -> Tensor[(12, 14, 7), float32] {
    %762 = @func_11595() /* ty=(Tensor[(12, 14, 7), float32],) */;
    %762.0
  };
  %763() /* ty=Tensor[(12, 14, 7), float32] */
}

def @func_13440() -> (Tensor[(12, 14, 7), float32],) {
  %765 = fn () -> (Tensor[(12, 14, 7), float32],) {
    %764 = @func_12766() /* ty=Tensor[(12, 14, 7), float32] */;
    (%764,)
  };
  %765() /* ty=(Tensor[(12, 14, 7), float32],) */
}

def @func_12594(%var_12581: Tensor[(7, 10, 16), int32], %var_12582: Tensor[(7, 10, 16), int32]) -> (Tensor[(7, 10, 16), bool],) {
  %766 = cast(%var_12582, dtype="bool") /* ty=Tensor[(7, 10, 16), bool] */;
  %767 = shape_of(%var_12581, dtype="int32") /* ty=Tensor[(3), int32] */;
  %768 = cast(%var_12581, dtype="bool") /* ty=Tensor[(7, 10, 16), bool] */;
  %769 = dyn.reshape(%766, %767, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %770 = greater(%768, %769) /* ty=Tensor[(7, 10, 16), bool] */;
  (%770,)
}

def @func_423(%var_422: Tensor[(1, 11, 14), float32]) -> Tensor[(?, 11, 14), int32] {
  %779 = fn (%var_394: Tensor[(1, 11, 14), float32]) -> Tensor[(?, 11, 14), int32] {
    %771 = cast(%var_394, dtype="float32") /* ty=Tensor[(1, 11, 14), float32] */;
    %772 = atan(%771) /* ty=Tensor[(1, 11, 14), float32] */;
    %773 = cast(%772, dtype="float64") /* ty=Tensor[(1, 11, 14), float64] */;
    %774 = cos(%773) /* ty=Tensor[(1, 11, 14), float64] */;
    %775 = cast(%var_394, dtype="int32") /* ty=Tensor[(1, 11, 14), int32] */;
    %776 = shape_of(%774, dtype="int32") /* ty=Tensor[(3), int32] */;
    %777 = cast(%774, dtype="int32") /* ty=Tensor[(1, 11, 14), int32] */;
    %778 = dyn.reshape(%775, %776, newshape=[]) /* ty=Tensor[(?, ?, ?), int32] */;
    maximum(%777, %778) /* ty=Tensor[(?, 11, 14), int32] */
  };
  %779(%var_422) /* ty=Tensor[(?, 11, 14), int32] */
}

def @func_7164(%var_7154: Tensor[(15, 6, 9), float64]) -> Tensor[(15, 6, 9), float64] {
  %780 = cast(meta[relay.Constant][63] /* ty=Tensor[(15, 6, 9), float64] */, dtype="float64") /* ty=Tensor[(15, 6, 9), float64] */;
  %781 = shape_of(%var_7154, dtype="int32") /* ty=Tensor[(3), int32] */;
  %782 = cast(%var_7154, dtype="float64") /* ty=Tensor[(15, 6, 9), float64] */;
  %783 = dyn.reshape(%780, %781, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  floor_mod(%782, %783) /* ty=Tensor[(15, 6, 9), float64] */
}

def @func_7916(%var_7889: Tensor[(2, 12, 7), float64], %var_7896: Tensor[(300), uint8]) -> (Tensor[(4, 5, 15), float32], Tensor[(300), uint8], Tensor[(2, 12, 7), int64], Tensor[(2, 12, 7), float32]) {
  %784 = cast(%var_7896, dtype="uint8") /* ty=Tensor[(300), uint8] */;
  %785 = cast(%var_7896, dtype="uint8") /* ty=Tensor[(300), uint8] */;
  %786 = reshape(%784, newshape=[4, 5, 15]) /* ty=Tensor[(4, 5, 15), uint8] */;
  %787 = reshape(%785, newshape=[4, 5, 15]) /* ty=Tensor[(4, 5, 15), uint8] */;
  %788 = cast(%var_7889, dtype="float64") /* ty=Tensor[(2, 12, 7), float64] */;
  %789 = sinh(%788) /* ty=Tensor[(2, 12, 7), float64] */;
  %790 = cast(%789, dtype="float64") /* ty=Tensor[(2, 12, 7), float64] */;
  %791 = exp(%790) /* ty=Tensor[(2, 12, 7), float64] */;
  %792 = cast(%789, dtype="bool") /* ty=Tensor[(2, 12, 7), bool] */;
  %793 = shape_of(%791, dtype="int32") /* ty=Tensor[(3), int32] */;
  %794 = cast(%791, dtype="bool") /* ty=Tensor[(2, 12, 7), bool] */;
  %795 = dyn.reshape(%792, %793, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %796 = equal(%794, %795) /* ty=Tensor[(2, 12, 7), bool] */;
  %797 = cast(%796, dtype="float64") /* ty=Tensor[(2, 12, 7), float64] */;
  %798 = tan(%797) /* ty=Tensor[(2, 12, 7), float64] */;
  %799 = cast(%789, dtype="int64") /* ty=Tensor[(2, 12, 7), int64] */;
  %800 = shape_of(%798, dtype="int32") /* ty=Tensor[(3), int32] */;
  %801 = cast(%798, dtype="int64") /* ty=Tensor[(2, 12, 7), int64] */;
  %802 = dyn.reshape(%799, %800, newshape=[]) /* ty=Tensor[(?, ?, ?), int64] */;
  %803 = cast(%798, dtype="float32") /* ty=Tensor[(2, 12, 7), float32] */;
  %804 = @func_2566(%786, %787) /* ty=Tensor[(4, 5, 15), float32] */;
  %805 = left_shift(%801, %802) /* ty=Tensor[(2, 12, 7), int64] */;
  %806 = log2(%803) /* ty=Tensor[(2, 12, 7), float32] */;
  (%804, %var_7896, %805, %806)
}

def @func_7167(%var_7165: Tensor[(15, 6, 9), float64]) -> Tensor[(15, 6, 9), float64] {
  @func_7164(%var_7165) /* ty=Tensor[(15, 6, 9), float64] */
}

def @func_6298(%var_6295: Tensor[(4, 5, 13), uint32], %var_6296: Tensor[(4, 5, 13), uint32], %var_6297: Tensor[(60, 16), uint32]) -> (Tensor[(4, 5, 13), uint32], Tensor[(12, 5, 16), bool], Tensor[(60, 16), uint32]) {
  %818 = fn (%var_6279: Tensor[(4, 5, 13), uint32], %var_6280: Tensor[(4, 5, 13), uint32], %var_6291: Tensor[(60, 16), uint32]) -> (Tensor[(4, 5, 13), uint32], Tensor[(12, 5, 16), bool], Tensor[(60, 16), uint32]) {
    %807 = cast(%var_6280, dtype="uint32") /* ty=Tensor[(4, 5, 13), uint32] */;
    %808 = shape_of(%var_6279, dtype="int32") /* ty=Tensor[(3), int32] */;
    %809 = cast(%var_6279, dtype="uint32") /* ty=Tensor[(4, 5, 13), uint32] */;
    %810 = dyn.reshape(%807, %808, newshape=[]) /* ty=Tensor[(?, ?, ?), uint32] */;
    %811 = cast(%var_6291, dtype="uint32") /* ty=Tensor[(60, 16), uint32] */;
    %812 = cast(%var_6291, dtype="uint32") /* ty=Tensor[(60, 16), uint32] */;
    %813 = reshape(%811, newshape=[12, 5, 16]) /* ty=Tensor[(12, 5, 16), uint32] */;
    %814 = reshape(%812, newshape=[12, 5, 16]) /* ty=Tensor[(12, 5, 16), uint32] */;
    %815 = @func_4589(%813, %814) /* ty=(Tensor[(12, 5, 16), bool],) */;
    %816 = minimum(%809, %810) /* ty=Tensor[(4, 5, 13), uint32] */;
    %817 = %815.0;
    (%816, %817, %var_6291)
  };
  %818(%var_6295, %var_6296, %var_6297) /* ty=(Tensor[(4, 5, 13), uint32], Tensor[(12, 5, 16), bool], Tensor[(60, 16), uint32]) */
}

def @func_10993(%var_10976: Tensor[(2, 3, 11), int64], %var_10977: Tensor[(2, 3, 11), int64]) -> Tensor[(2, 3, 11), float32] {
  %819 = cast(%var_10977, dtype="bool") /* ty=Tensor[(2, 3, 11), bool] */;
  %820 = shape_of(%var_10976, dtype="int32") /* ty=Tensor[(3), int32] */;
  %821 = cast(%var_10976, dtype="bool") /* ty=Tensor[(2, 3, 11), bool] */;
  %822 = dyn.reshape(%819, %820, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %823 = less(%821, %822) /* ty=Tensor[(2, 3, 11), bool] */;
  %824 = cast(%823, dtype="float32") /* ty=Tensor[(2, 3, 11), float32] */;
  %825 = atan(%824) /* ty=Tensor[(2, 3, 11), float32] */;
  %826 = cast(%825, dtype="float32") /* ty=Tensor[(2, 3, 11), float32] */;
  rsqrt(%826) /* ty=Tensor[(2, 3, 11), float32] */
}

def @func_4727(%var_4725: Tensor[(13, 8, 1), float64]) -> (Tensor[(13, 8, 1), float64], Tensor[(4, 5, 15), float32], Tensor[(300), uint8]) {
  @func_4724(%var_4725) /* ty=(Tensor[(13, 8, 1), float64], Tensor[(4, 5, 15), float32], Tensor[(300), uint8]) */
}

def @func_12811() -> Tensor[(12, 14, 7), float32] {
  %828 = fn () -> Tensor[(12, 14, 7), float32] {
    %827 = @func_12628() /* ty=(Tensor[(12, 14, 7), float32],) */;
    %827.0
  };
  %828() /* ty=Tensor[(12, 14, 7), float32] */
}

def @func_8490(%var_8487: Tensor[(15, 8, 16), int16], %var_8488: Tensor[(15, 8, 16), int16], %var_8489: Tensor[(300), uint8]) -> (Tensor[(15, 8, 16), int16], Tensor[(4, 5, 15), float32], Tensor[(300), uint8]) {
  %839 = fn (%var_8467: Tensor[(15, 8, 16), int16], %var_8468: Tensor[(15, 8, 16), int16], %var_8477: Tensor[(300), uint8]) -> (Tensor[(15, 8, 16), int16], Tensor[(4, 5, 15), float32], Tensor[(300), uint8]) {
    %829 = cast(%var_8468, dtype="int16") /* ty=Tensor[(15, 8, 16), int16] */;
    %830 = shape_of(%var_8467, dtype="int32") /* ty=Tensor[(3), int32] */;
    %831 = cast(%var_8467, dtype="int16") /* ty=Tensor[(15, 8, 16), int16] */;
    %832 = dyn.reshape(%829, %830, newshape=[]) /* ty=Tensor[(?, ?, ?), int16] */;
    %833 = cast(%var_8477, dtype="uint8") /* ty=Tensor[(300), uint8] */;
    %834 = cast(%var_8477, dtype="uint8") /* ty=Tensor[(300), uint8] */;
    %835 = reshape(%833, newshape=[4, 5, 15]) /* ty=Tensor[(4, 5, 15), uint8] */;
    %836 = reshape(%834, newshape=[4, 5, 15]) /* ty=Tensor[(4, 5, 15), uint8] */;
    %837 = bitwise_or(%831, %832) /* ty=Tensor[(15, 8, 16), int16] */;
    %838 = @func_2566(%835, %836) /* ty=Tensor[(4, 5, 15), float32] */;
    (%837, %838, %var_8477)
  };
  %839(%var_8487, %var_8488, %var_8489) /* ty=(Tensor[(15, 8, 16), int16], Tensor[(4, 5, 15), float32], Tensor[(300), uint8]) */
}

def @func_12479(%var_12475: Tensor[(576), float64], %var_12476: Tensor[(780), float32], %var_12477: Tensor[(378), int32], %var_12478: Tensor[(385), float64]) -> (Tensor[(12, 14, 7), float32], Tensor[(4, 9, 16), float64], Tensor[(576), float64], Tensor[(780), float32], Tensor[(1, 9, 15), int16], int16, Tensor[(135), int16], Tensor[(378), int32], Tensor[(385), float64]) {
  %858 = fn (%var_12462: Tensor[(576), float64], %var_12463: Tensor[(780), float32], %var_12471: Tensor[(378), int32], %var_12472: Tensor[(385), float64]) -> (Tensor[(12, 14, 7), float32], Tensor[(4, 9, 16), float64], Tensor[(576), float64], Tensor[(780), float32], Tensor[(1, 9, 15), int16], int16, Tensor[(135), int16], Tensor[(378), int32], Tensor[(385), float64]) {
    %840 = @func_11411() /* ty=(Tensor[(12, 14, 7), float32],) */;
    %841 = cast(%var_12462, dtype="float64") /* ty=Tensor[(576), float64] */;
    %842 = cast(%var_12463, dtype="float32") /* ty=Tensor[(780), float32] */;
    %843 = reshape(%841, newshape=[4, 9, 16]) /* ty=Tensor[(4, 9, 16), float64] */;
    %844 = reshape(%842, newshape=[780]) /* ty=Tensor[(780), float32] */;
    %845 = @func_4498(%843, %844) /* ty=(Tensor[(4, 9, 16), float64], Tensor[(5, 13, 12), float32], Tensor[(780), float32]) */;
    %846 = cast(meta[relay.Constant][64] /* ty=int16 */, dtype="int16") /* ty=int16 */;
    %847 = cast(meta[relay.Constant][65] /* ty=Tensor[(135), int16] */, dtype="int16") /* ty=Tensor[(135), int16] */;
    %848 = cast(%var_12471, dtype="int32") /* ty=Tensor[(378), int32] */;
    %849 = cast(%var_12472, dtype="float64") /* ty=Tensor[(385), float64] */;
    %850 = reshape(%846, newshape=[]) /* ty=int16 */;
    %851 = reshape(%847, newshape=[1, 9, 15]) /* ty=Tensor[(1, 9, 15), int16] */;
    %852 = reshape(%848, newshape=[378]) /* ty=Tensor[(378), int32] */;
    %853 = reshape(%849, newshape=[55, 7]) /* ty=Tensor[(55, 7), float64] */;
    %854 = @func_6604(%850, %851, %852, %853) /* ty=(Tensor[(1, 9, 15), int16], Tensor[(180), float32], Tensor[(378), int32], Tensor[(960, 1), uint32], Tensor[(22, 7), float32], Tensor[(55, 7), float64], Tensor[(539), float32], Tensor[(528), int32]) */;
    %855 = %840.0;
    %856 = %845.0;
    %857 = %854.0;
    (%855, %856, %var_12462, %var_12463, %857, meta[relay.Constant][64] /* ty=int16 */, meta[relay.Constant][65] /* ty=Tensor[(135), int16] */, %var_12471, %var_12472)
  };
  %858(%var_12475, %var_12476, %var_12477, %var_12478) /* ty=(Tensor[(12, 14, 7), float32], Tensor[(4, 9, 16), float64], Tensor[(576), float64], Tensor[(780), float32], Tensor[(1, 9, 15), int16], int16, Tensor[(135), int16], Tensor[(378), int32], Tensor[(385), float64]) */
}

def @func_2651(%var_2649: Tensor[(7, 3, 8), float32]) -> (Tensor[(7, 3, 8), bool], Tensor[(780), float32], Tensor[(5, 13, 12), float32], Tensor[(5, 13, 12), float32]) {
  @func_2648(%var_2649) /* ty=(Tensor[(7, 3, 8), bool], Tensor[(780), float32], Tensor[(5, 13, 12), float32], Tensor[(5, 13, 12), float32]) */
}

def @func_13223(%var_13221: Tensor[(385), float64], %var_13222: Tensor[(539), float32]) -> (Tensor[(12, 14, 7), float32], Tensor[(12, 14, 7), float32], Tensor[(539), float32], Tensor[(385), float64], Tensor[(539), float32], Tensor[(4, 6, 16), bool], Tensor[(384), uint64], Tensor[(12, 14, 7), float32]) {
  %872 = fn (%var_13181: Tensor[(385), float64], %var_13182: Tensor[(539), float32]) -> (Tensor[(12, 14, 7), float32], Tensor[(12, 14, 7), float32], Tensor[(539), float32], Tensor[(385), float64], Tensor[(539), float32], Tensor[(4, 6, 16), bool], Tensor[(384), uint64], Tensor[(12, 14, 7), float32]) {
    %859 = @func_11498() /* ty=(Tensor[(12, 14, 7), float32],) */;
    %860 = cast(%var_13181, dtype="float64") /* ty=Tensor[(385), float64] */;
    %861 = cast(%var_13182, dtype="float32") /* ty=Tensor[(539), float32] */;
    %862 = reshape(%860, newshape=[11, 5, 7]) /* ty=Tensor[(11, 5, 7), float64] */;
    %863 = reshape(%861, newshape=[539]) /* ty=Tensor[(539), float32] */;
    %864 = @func_4688(%862, %863) /* ty=(Tensor[(11, 5, 7), float64], Tensor[(4, 5, 15), float32], Tensor[(539), float32], Tensor[(528), int32]) */;
    %865 = cast(meta[relay.Constant][66] /* ty=Tensor[(384), uint64] */, dtype="uint64") /* ty=Tensor[(384), uint64] */;
    %866 = reshape(%865, newshape=[4, 6, 16]) /* ty=Tensor[(4, 6, 16), uint64] */;
    %867 = @func_12534() /* ty=Tensor[(12, 14, 7), float32] */;
    %868 = %859.0;
    %869 = %864.2;
    %870 = @func_3871(%866) /* ty=Tensor[(4, 6, 16), bool] */;
    %871 = @func_11639() /* ty=Tensor[(12, 14, 7), float32] */;
    (%867, %868, %869, %var_13181, %var_13182, %870, meta[relay.Constant][66] /* ty=Tensor[(384), uint64] */, %871)
  };
  %872(%var_13221, %var_13222) /* ty=(Tensor[(12, 14, 7), float32], Tensor[(12, 14, 7), float32], Tensor[(539), float32], Tensor[(385), float64], Tensor[(539), float32], Tensor[(4, 6, 16), bool], Tensor[(384), uint64], Tensor[(12, 14, 7), float32]) */
}

def @func_12284() -> (Tensor[(12, 14, 7), float32],) {
  %874 = fn () -> (Tensor[(12, 14, 7), float32],) {
    %873 = @func_12165() /* ty=Tensor[(12, 14, 7), float32] */;
    (%873,)
  };
  %874() /* ty=(Tensor[(12, 14, 7), float32],) */
}

def @func_4724(%var_4703: Tensor[(13, 8, 1), float64]) -> (Tensor[(13, 8, 1), float64], Tensor[(4, 5, 15), float32], Tensor[(300), uint8]) {
  %875 = cast(%var_4703, dtype="float64") /* ty=Tensor[(13, 8, 1), float64] */;
  %876 = cast(meta[relay.Constant][67] /* ty=Tensor[(300), uint8] */, dtype="uint8") /* ty=Tensor[(300), uint8] */;
  %877 = cast(meta[relay.Constant][67] /* ty=Tensor[(300), uint8] */, dtype="uint8") /* ty=Tensor[(300), uint8] */;
  %878 = reshape(%876, newshape=[4, 5, 15]) /* ty=Tensor[(4, 5, 15), uint8] */;
  %879 = reshape(%877, newshape=[4, 5, 15]) /* ty=Tensor[(4, 5, 15), uint8] */;
  %880 = sinh(%875) /* ty=Tensor[(13, 8, 1), float64] */;
  %881 = @func_2566(%878, %879) /* ty=Tensor[(4, 5, 15), float32] */;
  (%880, %881, meta[relay.Constant][67] /* ty=Tensor[(300), uint8] */)
}

def @func_12531() -> Tensor[(12, 15, 10), float64] {
  %883 = fn () -> Tensor[(12, 15, 10), float64] {
    %882 = @func_11724() /* ty=(Tensor[(12, 14, 7), float32], Tensor[(960), uint32], Tensor[(140), uint8], Tensor[(3, 600), float32], Tensor[(12, 15, 10), float64]) */;
    %882.4
  };
  %883() /* ty=Tensor[(12, 15, 10), float64] */
}

/* For debugging purposes the metadata section has been omitted.
 * If you would like to see the full metadata section you can set the 
 * option to `True` when invoking `astext`. 
 */The type inference pass was unable to infer a type for this expression.
This usually occurs when an operator call is under constrained in some way, check other reported errors for hints of what may of happened.

===================================
note: run with `TVM_BACKTRACE=1` environment variable to display a backtrace.

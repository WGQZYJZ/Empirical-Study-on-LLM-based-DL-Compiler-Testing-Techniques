import tvm
from tvm import relay
from tvm.ir.transform import Sequential
from tvm.contrib import graph_runtime
import numpy as np
mod = tvm.IRModule()
mutated_mod = tvm.IRModule()
var_394 = relay.var("var_394", dtype = "float32", shape = (1, 11, 14))#candidate|394|(1, 11, 14)|var|float32
uop_395 = relay.atan(var_394.astype('float32')) # shape=(1, 11, 14)
uop_400 = relay.cos(uop_395.astype('float64')) # shape=(1, 11, 14)
bop_418 = relay.maximum(uop_400.astype('int32'), relay.reshape(var_394.astype('int32'), relay.shape_of(uop_400))) # shape=(1, 11, 14)
output = bop_418
output2 = bop_418
func_421 = relay.Function([var_394,], output)
mod['func_421'] = func_421
mod = relay.transform.InferType()(mod)
var_422 = relay.var("var_422", dtype = "float32", shape = (1, 11, 14))#candidate|422|(1, 11, 14)|var|float32
output = func_421(var_422)
func_423 = relay.Function([var_422], output)
mutated_mod['func_423'] = func_423
mutated_mod = relay.transform.InferType()(mutated_mod)
var_1593 = relay.var("var_1593", dtype = "float32", shape = (5, 13, 12))#candidate|1593|(5, 13, 12)|var|float32
uop_1594 = relay.sinh(var_1593.astype('float32')) # shape=(5, 13, 12)
output = relay.Tuple([uop_1594,])
output2 = relay.Tuple([uop_1594,])
func_1599 = relay.Function([var_1593,], output)
mod['func_1599'] = func_1599
mod = relay.transform.InferType()(mod)
var_1600 = relay.var("var_1600", dtype = "float32", shape = (5, 13, 12))#candidate|1600|(5, 13, 12)|var|float32
output = func_1599(var_1600)
func_1601 = relay.Function([var_1600], output)
mutated_mod['func_1601'] = func_1601
mutated_mod = relay.transform.InferType()(mutated_mod)
var_1895 = relay.var("var_1895", dtype = "float64", shape = (16, 7, 5))#candidate|1895|(16, 7, 5)|var|float64
uop_1896 = relay.log10(var_1895.astype('float64')) # shape=(16, 7, 5)
func_421_call = mod.get_global_var('func_421')
func_423_call = mutated_mod.get_global_var('func_423')
var_1899 = relay.var("var_1899", dtype = "float32", shape = (154,))#candidate|1899|(154,)|var|float32
call_1898 = func_421_call(relay.reshape(var_1899.astype('float32'), [1, 11, 14]))
call_1900 = func_421_call(relay.reshape(var_1899.astype('float32'), [1, 11, 14]))
var_1912 = relay.var("var_1912", dtype = "float64", shape = (16, 7, 5))#candidate|1912|(16, 7, 5)|var|float64
bop_1913 = relay.less(var_1895.astype('bool'), relay.reshape(var_1912.astype('bool'), relay.shape_of(var_1895))) # shape=(16, 7, 5)
output = relay.Tuple([uop_1896,call_1898,var_1899,bop_1913,])
output2 = relay.Tuple([uop_1896,call_1900,var_1899,bop_1913,])
func_1917 = relay.Function([var_1895,var_1899,var_1912,], output)
mod['func_1917'] = func_1917
mod = relay.transform.InferType()(mod)
var_1918 = relay.var("var_1918", dtype = "float64", shape = (16, 7, 5))#candidate|1918|(16, 7, 5)|var|float64
var_1919 = relay.var("var_1919", dtype = "float32", shape = (154,))#candidate|1919|(154,)|var|float32
var_1920 = relay.var("var_1920", dtype = "float64", shape = (16, 7, 5))#candidate|1920|(16, 7, 5)|var|float64
output = func_1917(var_1918,var_1919,var_1920,)
func_1921 = relay.Function([var_1918,var_1919,var_1920,], output)
mutated_mod['func_1921'] = func_1921
mutated_mod = relay.transform.InferType()(mutated_mod)
var_2552 = relay.var("var_2552", dtype = "uint8", shape = (4, 5, 15))#candidate|2552|(4, 5, 15)|var|uint8
var_2553 = relay.var("var_2553", dtype = "uint8", shape = (4, 5, 15))#candidate|2553|(4, 5, 15)|var|uint8
bop_2554 = relay.multiply(var_2552.astype('uint8'), relay.reshape(var_2553.astype('uint8'), relay.shape_of(var_2552))) # shape=(4, 5, 15)
uop_2562 = relay.log2(bop_2554.astype('float32')) # shape=(4, 5, 15)
output = uop_2562
output2 = uop_2562
func_2566 = relay.Function([var_2552,var_2553,], output)
mod['func_2566'] = func_2566
mod = relay.transform.InferType()(mod)
mutated_mod['func_2566'] = func_2566
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2566_call = mutated_mod.get_global_var('func_2566')
var_2568 = relay.var("var_2568", dtype = "uint8", shape = (4, 5, 15))#candidate|2568|(4, 5, 15)|var|uint8
var_2569 = relay.var("var_2569", dtype = "uint8", shape = (4, 5, 15))#candidate|2569|(4, 5, 15)|var|uint8
call_2567 = func_2566_call(var_2568,var_2569,)
output = call_2567
func_2570 = relay.Function([var_2568,var_2569,], output)
mutated_mod['func_2570'] = func_2570
mutated_mod = relay.transform.InferType()(mutated_mod)
const_2598 = relay.const([[[-4.457337,2.141185,-6.764618,-5.285530,-4.597612,2.426320,-9.346181,-5.372449],[-8.891318,9.538548,-5.426713,-4.386432,3.138180,6.911160,-4.907473,-0.883419],[-9.606166,1.730102,6.093154,-6.748959,-2.298073,-8.150103,-3.760184,-5.957121]],[[-5.111684,3.810498,4.289362,-2.724598,9.338814,-7.740587,2.047124,-2.446686],[8.318704,-6.225956,2.712885,-2.186734,9.420999,-1.362433,6.258316,-9.099475],[0.126675,-0.896235,8.037285,0.930294,4.367603,-1.083233,-8.467375,-7.921776]],[[-0.276022,-2.626842,1.289970,-2.131336,4.031234,-5.960714,8.830246,-6.491040],[-6.551961,8.912115,-2.627571,-3.101943,-9.393143,-1.778635,9.334320,-5.122268],[2.662347,0.962435,6.150305,0.792675,2.009431,-8.994119,2.575781,8.988731]],[[2.488238,3.121402,5.639670,4.487153,1.978077,-4.262009,3.221535,-1.856170],[2.124958,9.999703,5.418224,-4.070172,9.622722,4.602322,3.197416,-2.973445],[6.753687,-2.184141,-9.619505,0.415948,3.398717,-6.079006,-2.336091,-8.248240]],[[4.286219,7.658964,-7.488350,8.916991,-8.987228,-1.949440,9.159802,-5.856578],[9.320643,8.315289,1.179216,6.390801,-7.215612,8.879831,-9.243540,-6.448070],[3.371914,1.133054,0.244648,6.293605,8.473234,-2.105133,5.869481,-3.625361]],[[9.881570,-1.564163,-3.409580,-8.452275,0.356704,3.275566,4.634862,4.792761],[7.829424,-3.549794,8.339702,-0.884043,-9.204165,1.450094,-9.889466,-4.651283],[6.542079,-7.863932,-4.042452,-7.257317,-2.659102,6.268117,-2.446951,-0.971559]],[[0.326288,-1.262658,5.171005,-8.143789,0.692551,0.304643,2.232774,-1.643353],[-6.888360,-1.670724,2.787937,-2.010787,-7.639809,7.890618,6.783012,4.489324],[-7.100501,6.888865,-3.030866,9.641339,-0.364419,9.205684,-4.245340,-0.380012]]], dtype = "float32")#candidate|2598|(7, 3, 8)|const|float32
var_2599 = relay.var("var_2599", dtype = "float32", shape = (7, 3, 8))#candidate|2599|(7, 3, 8)|var|float32
bop_2600 = relay.less(const_2598.astype('bool'), relay.reshape(var_2599.astype('bool'), relay.shape_of(const_2598))) # shape=(7, 3, 8)
func_1599_call = mod.get_global_var('func_1599')
func_1601_call = mutated_mod.get_global_var('func_1601')
const_2614 = relay.const([-5.919389,1.588177,-1.667082,0.817112,2.564791,-9.124651,8.281704,-5.650637,7.615756,4.873231,5.582725,9.232682,-6.858890,-5.806832,-4.043225,3.215046,-8.852467,3.413944,9.976384,5.609894,3.722642,-0.334184,-3.080373,-1.857644,2.906512,3.878265,7.172416,-4.046426,3.236274,0.806952,5.771562,-4.545853,2.751411,-7.604130,-2.397840,1.269714,2.277295,5.278897,-7.840486,7.780798,5.107257,-6.458784,5.962223,-7.941742,8.894376,-1.277151,-4.090972,9.033740,-0.522192,-9.505894,0.770457,-2.263060,-5.052937,-3.022954,-9.596744,-6.541305,-4.568885,-5.082204,7.557946,-9.011836,-7.744169,5.303291,-0.388235,5.094800,-7.843581,0.042050,8.864727,-0.021551,3.319322,9.183566,-7.515586,7.855168,-9.657929,-1.525885,-1.735445,8.885370,-4.648273,8.662650,0.394000,1.526808,2.405573,9.836586,7.259282,-6.159869,0.401897,-0.425450,4.365169,-9.538752,2.133334,7.246819,-8.245484,-5.504444,5.460129,8.795295,-1.394249,-1.438399,1.330403,8.805199,2.529535,-2.441896,2.242343,-0.174945,-2.339331,-6.809803,6.923848,-7.088431,-3.451578,-6.561728,-8.395765,-2.943538,4.437420,-7.712057,0.154811,9.700068,9.774266,3.595478,-8.694355,9.969984,-6.167213,-7.330664,8.725476,1.003804,8.385861,1.778955,2.742516,8.140026,-3.412660,-6.375159,0.542558,-7.921941,0.777766,4.944039,2.253882,-2.753561,-2.385670,-9.423560,3.450265,-2.447876,8.687743,4.489534,6.426775,3.793579,-7.012415,6.719376,1.696988,0.956925,0.620769,-9.458972,0.955827,8.688477,0.384220,-3.810046,9.799426,-6.657239,-1.573755,-0.526005,-9.517671,-7.264000,8.680473,-1.500113,9.338760,8.002528,-7.373312,-6.207188,-8.393420,3.012793,4.725119,4.788397,-1.785445,6.797564,2.760235,6.933738,-7.702729,-0.387060,3.754441,-7.528095,-4.940182,-9.971008,-3.828183,6.289448,-3.348408,-4.708594,-7.107397,-6.688626,9.752775,2.529082,2.964658,-9.677648,-4.240656,7.178346,5.576272,5.567354,5.422340,-0.990238,-6.544959,8.229588,6.192736,-5.110930,0.636222,-5.796444,-2.777550,3.230615,-8.365086,7.952947,-2.285251,1.082418,8.617804,-5.466679,-1.810882,-0.933737,-2.220704,9.652033,6.461092,3.515050,-5.011214,-0.178012,9.776380,6.896810,5.549019,2.717825,5.784484,-7.751809,5.114455,-8.868754,0.162677,-5.212300,-1.475428,6.072124,6.160683,-1.052840,9.357238,-8.293650,-0.357917,-4.965571,5.018215,6.968710,-8.759116,1.273575,-6.166039,8.947751,-0.004201,7.535650,1.959552,-0.776546,3.545302,6.813669,9.325973,-9.147055,4.519293,-0.274630,-9.752004,0.663163,5.748372,-3.602523,-4.349540,8.011329,5.135499,8.317059,-6.129010,2.197726,-7.347707,-0.050529,-3.752339,2.525807,1.403295,-9.652965,-4.883387,8.838674,-5.117334,9.173509,3.281656,9.034493,-8.715870,-4.904099,9.651011,-7.630953,-1.526645,1.733543,6.146067,-4.308688,-9.579287,-2.119761,-6.856685,-8.049800,8.787021,-1.359635,5.347662,7.194285,-3.888006,-1.737830,5.968224,-2.392469,3.696227,0.335109,-3.152891,2.948457,-3.181539,9.452396,1.343712,-5.167008,-0.247695,-9.072603,-0.444854,1.163522,0.828444,-2.101652,-0.151447,-7.408364,0.069013,7.554862,4.401927,-1.743814,-6.182248,-6.567248,-3.779330,1.509509,7.719054,-0.126422,5.688261,5.350684,1.031398,-0.589609,-2.668188,5.088453,-3.786604,1.082031,9.258107,4.088407,-1.517266,-0.983753,-5.223526,7.472953,4.160101,-2.242263,0.804153,3.983526,4.662477,-5.139996,-8.038516,6.819472,-0.651819,-7.982372,8.088416,-3.414480,9.822974,-1.817575,-2.913584,-7.947686,8.762854,-2.162693,-2.629050,5.634421,1.695589,5.522751,2.080985,-2.485588,0.810006,3.409502,0.001349,-4.809024,-1.284888,-4.376839,-9.935990,-7.063813,8.240920,-8.556521,-5.476599,-8.433468,-6.798318,6.550381,-6.185204,9.158348,-1.341028,-4.045826,-4.603239,9.051731,1.620230,7.936961,-0.168261,8.054272,5.782462,0.070165,6.667309,1.081521,2.105111,4.878982,7.130715,5.379784,-8.756283,9.414151,7.023229,4.490910,-1.591076,-5.225899,6.206830,0.243615,-7.328363,-2.905980,-4.974159,8.403347,4.180269,2.162681,3.424901,-6.676642,6.411979,8.741888,-0.893025,4.838419,4.501790,9.067025,-7.280652,8.482080,0.929006,-9.381824,-8.643746,2.439787,7.892529,-3.526650,-6.094970,-2.589942,-9.152940,-0.982985,-5.745375,3.204606,2.005021,-3.151717,6.334291,-5.715481,-3.454428,-3.586055,-5.729240,-9.092613,6.403103,7.913876,9.230320,1.689659,6.669549,4.698533,1.258079,9.377633,2.104964,-6.198842,-6.808190,-7.375492,-3.679800,2.631093,-3.615218,-4.118273,-9.796535,6.828376,7.603808,7.470211,-0.645629,-0.203384,0.847801,5.353030,-7.588611,-0.382422,-5.346157,4.214930,0.442571,-5.722210,-7.091497,9.663272,-2.111819,-9.472136,4.308181,-0.629659,-9.390520,-2.595961,-7.458879,3.188482,9.971309,3.206155,-5.290063,-0.360363,4.554429,3.502008,4.388626,-9.748881,-2.453482,5.552244,-8.272020,5.000874,8.946688,7.417260,9.625047,-0.511659,-2.231296,6.950972,-6.874482,-8.477905,-4.717504,5.587718,2.292538,2.664550,-5.719902,5.026398,-1.735281,-6.787829,-7.095028,7.223242,-6.507618,0.664263,-3.761540,6.562623,-5.382682,-5.263223,6.326144,0.512686,-8.293079,-7.077008,0.800962,5.754699,8.350548,9.077065,9.065980,7.887276,-3.835321,-4.332213,0.536739,6.940052,-2.081919,-5.078410,3.983935,-8.912089,-7.715487,0.340052,-2.691341,8.206658,-3.810934,-4.445933,-7.006439,1.556664,-9.894661,7.767316,9.571719,0.874432,-8.276310,5.908065,7.469549,5.046794,4.368099,-7.129054,-1.872493,1.687729,-4.780181,-5.419501,1.882624,-6.441139,-0.343167,-5.154840,-5.376812,2.729360,6.210245,2.136096,-8.075103,5.258864,7.676076,7.205981,1.050515,-7.650879,-5.969808,-3.046457,-8.828213,8.895747,-9.304833,-6.439743,-2.757814,-2.889581,-8.693522,-5.532797,-0.430270,-1.624983,5.340019,6.784544,-3.304325,9.076498,0.732976,5.833065,-4.606664,-6.568842,-4.746373,9.310852,-1.345889,-0.980306,2.307346,4.450850,-1.458409,2.965835,2.062358,6.831553,-6.457669,2.220737,-5.925757,1.217917,2.491971,-5.201302,-8.154485,-1.021077,0.119313,-6.833519,-0.880521,-1.092365,4.227093,-5.849373,9.025012,3.517882,-9.411277,4.330547,4.613374,2.327557,-6.161424,-0.219132,-5.829825,9.070103,6.140003,-3.987035,2.954423,0.576306,9.022852,1.541236,5.682212,-7.854941,8.001820,-0.614110,0.128995,-3.691767,6.130129,-2.727221,7.936078,9.699459,2.568908,-3.680258,9.594545,-8.918159,-5.361697,0.551147,-7.848271,0.247363,9.801278,-1.851696,-9.439959,-0.450488,4.348223,6.832946,-4.922471,6.549412,-9.449103,-2.216174,3.526824,-9.464359,-8.919427,4.184212,-7.930063,6.378022,4.297010,-8.649734,-9.461804,8.122265,4.962024,-7.084536,-1.028532,-4.853576,-6.630439,-2.546034,7.271371,3.870342,-3.127542,-1.630534,0.705668,-9.072370,3.896176,-3.717899,6.782067,3.902017,-7.777201,-1.882745,2.034528,-2.928155,0.350688,-1.416620,6.581204,-7.551363,-5.427981,-3.320422,-0.618807,-8.754109,2.918891,7.034817,7.060919,-1.455861,5.472963,-0.694084,3.446666,-5.260482,8.906239,6.229866,-3.861410,-2.071255,-3.878874,-9.585653,8.594491,-8.073697,-3.240386,0.889085,-0.900518,8.887128,-6.835211,-4.097768,-5.752242,-3.262733,2.225259,6.508806,9.865059,5.290234,-4.743108,6.627496,-7.702428,2.540975,8.464298,-2.540045,-6.528103,9.978122,1.824205,-7.193004,-3.453664,1.421533,-0.478022,7.763550,-9.699623,4.429140,1.652296,-6.861370,-5.408534,-3.222192,-3.096837,7.113710,-4.733794,3.073467,-7.898659,-0.335677,-2.076652,0.881832,-7.165040,5.874169,6.566500,9.339297,2.611562,-5.242782,4.917074,7.987623,-4.998098,-1.190993,-8.444831,-3.607130,4.466106,2.514744,7.899108,-8.018093,-5.182475,-4.191028,-6.599901,-8.218421,-4.797474,3.347448,4.875588,6.804288,7.478763,-1.053995,-3.819811,2.416438,5.126813,0.975917,9.285041,-0.074712,0.056967,8.578332,4.964615,6.108842], dtype = "float32")#candidate|2614|(780,)|const|float32
call_2613 = relay.TupleGetItem(func_1599_call(relay.reshape(const_2614.astype('float32'), [5, 13, 12])), 0)
call_2615 = relay.TupleGetItem(func_1601_call(relay.reshape(const_2614.astype('float32'), [5, 13, 12])), 0)
uop_2638 = relay.cosh(call_2613.astype('float32')) # shape=(5, 13, 12)
uop_2640 = relay.cosh(call_2615.astype('float32')) # shape=(5, 13, 12)
func_1599_call = mod.get_global_var('func_1599')
func_1601_call = mutated_mod.get_global_var('func_1601')
call_2644 = relay.TupleGetItem(func_1599_call(relay.reshape(const_2614.astype('float32'), [5, 13, 12])), 0)
call_2645 = relay.TupleGetItem(func_1601_call(relay.reshape(const_2614.astype('float32'), [5, 13, 12])), 0)
output = relay.Tuple([bop_2600,const_2614,uop_2638,call_2644,])
output2 = relay.Tuple([bop_2600,const_2614,uop_2640,call_2645,])
func_2648 = relay.Function([var_2599,], output)
mod['func_2648'] = func_2648
mod = relay.transform.InferType()(mod)
mutated_mod['func_2648'] = func_2648
mutated_mod = relay.transform.InferType()(mutated_mod)
var_2649 = relay.var("var_2649", dtype = "float32", shape = (7, 3, 8))#candidate|2649|(7, 3, 8)|var|float32
func_2648_call = mutated_mod.get_global_var('func_2648')
call_2650 = func_2648_call(var_2649)
output = call_2650
func_2651 = relay.Function([var_2649], output)
mutated_mod['func_2651'] = func_2651
mutated_mod = relay.transform.InferType()(mutated_mod)
var_2732 = relay.var("var_2732", dtype = "float32", shape = (12, 15, 10))#candidate|2732|(12, 15, 10)|var|float32
uop_2733 = relay.acosh(var_2732.astype('float32')) # shape=(12, 15, 10)
output = uop_2733
output2 = uop_2733
func_2758 = relay.Function([var_2732,], output)
mod['func_2758'] = func_2758
mod = relay.transform.InferType()(mod)
var_2759 = relay.var("var_2759", dtype = "float32", shape = (12, 15, 10))#candidate|2759|(12, 15, 10)|var|float32
output = func_2758(var_2759)
func_2760 = relay.Function([var_2759], output)
mutated_mod['func_2760'] = func_2760
mutated_mod = relay.transform.InferType()(mutated_mod)
var_2889 = relay.var("var_2889", dtype = "int32", shape = (11, 16, 3))#candidate|2889|(11, 16, 3)|var|int32
var_2890 = relay.var("var_2890", dtype = "int32", shape = (11, 16, 3))#candidate|2890|(11, 16, 3)|var|int32
bop_2891 = relay.logical_xor(var_2889.astype('int32'), relay.reshape(var_2890.astype('int32'), relay.shape_of(var_2889))) # shape=(11, 16, 3)
uop_2897 = relay.acos(var_2889.astype('float32')) # shape=(11, 16, 3)
output = relay.Tuple([bop_2891,uop_2897,])
output2 = relay.Tuple([bop_2891,uop_2897,])
func_2900 = relay.Function([var_2889,var_2890,], output)
mod['func_2900'] = func_2900
mod = relay.transform.InferType()(mod)
var_2901 = relay.var("var_2901", dtype = "int32", shape = (11, 16, 3))#candidate|2901|(11, 16, 3)|var|int32
var_2902 = relay.var("var_2902", dtype = "int32", shape = (11, 16, 3))#candidate|2902|(11, 16, 3)|var|int32
output = func_2900(var_2901,var_2902,)
func_2903 = relay.Function([var_2901,var_2902,], output)
mutated_mod['func_2903'] = func_2903
mutated_mod = relay.transform.InferType()(mutated_mod)
const_2907 = relay.const([[[5.303493,-1.229232],[6.528735,-5.698962],[4.936441,-6.788153],[-2.391421,5.428529],[-5.377200,7.106243]],[[7.003813,-9.074161],[-0.594008,-1.878585],[5.600706,-9.889392],[2.914409,0.377169],[1.304171,-0.946346]],[[8.911949,-1.712478],[8.656557,-5.935238],[1.017555,-3.690369],[-7.308604,-7.410111],[-7.620619,5.239960]],[[-8.115907,-9.231484],[-1.772376,-4.514868],[5.957115,-0.451493],[-0.834099,-8.341938],[-3.003017,8.424930]],[[-2.991860,9.949006],[4.491814,-6.247204],[-7.748204,5.025786],[9.485978,-6.488730],[-8.149043,1.329023]],[[5.090028,-5.747364],[-2.600286,6.208677],[7.629947,-0.633203],[-1.932083,-5.942594],[9.360831,5.766142]],[[-2.490630,-2.581111],[-5.913941,1.336348],[-3.343386,8.751241],[-4.182339,5.327751],[-3.481306,-3.065565]],[[4.814306,-9.279586],[-5.764554,7.088931],[2.872389,2.984779],[-7.135559,9.493123],[-2.598662,9.918910]],[[8.031881,-7.794604],[-0.525646,-9.830302],[7.808376,-0.883631],[2.739597,-9.128392],[-9.087424,-0.697535]]], dtype = "float32")#candidate|2907|(9, 5, 2)|const|float32
uop_2908 = relay.sinh(const_2907.astype('float32')) # shape=(9, 5, 2)
func_2566_call = mod.get_global_var('func_2566')
func_2570_call = mutated_mod.get_global_var('func_2570')
var_2914 = relay.var("var_2914", dtype = "uint8", shape = (300,))#candidate|2914|(300,)|var|uint8
call_2913 = func_2566_call(relay.reshape(var_2914.astype('uint8'), [4, 5, 15]), relay.reshape(var_2914.astype('uint8'), [4, 5, 15]), )
call_2915 = func_2566_call(relay.reshape(var_2914.astype('uint8'), [4, 5, 15]), relay.reshape(var_2914.astype('uint8'), [4, 5, 15]), )
output = relay.Tuple([uop_2908,call_2913,var_2914,])
output2 = relay.Tuple([uop_2908,call_2915,var_2914,])
func_2921 = relay.Function([var_2914,], output)
mod['func_2921'] = func_2921
mod = relay.transform.InferType()(mod)
var_2922 = relay.var("var_2922", dtype = "uint8", shape = (300,))#candidate|2922|(300,)|var|uint8
output = func_2921(var_2922)
func_2923 = relay.Function([var_2922], output)
mutated_mod['func_2923'] = func_2923
mutated_mod = relay.transform.InferType()(mutated_mod)
var_3158 = relay.var("var_3158", dtype = "int64", shape = (15, 7, 10))#candidate|3158|(15, 7, 10)|var|int64
var_3159 = relay.var("var_3159", dtype = "int64", shape = (15, 7, 10))#candidate|3159|(15, 7, 10)|var|int64
bop_3160 = relay.not_equal(var_3158.astype('bool'), relay.reshape(var_3159.astype('bool'), relay.shape_of(var_3158))) # shape=(15, 7, 10)
func_2900_call = mod.get_global_var('func_2900')
func_2903_call = mutated_mod.get_global_var('func_2903')
var_3166 = relay.var("var_3166", dtype = "int32", shape = (528, 1))#candidate|3166|(528, 1)|var|int32
call_3165 = relay.TupleGetItem(func_2900_call(relay.reshape(var_3166.astype('int32'), [11, 16, 3]), relay.reshape(var_3166.astype('int32'), [11, 16, 3]), ), 1)
call_3167 = relay.TupleGetItem(func_2903_call(relay.reshape(var_3166.astype('int32'), [11, 16, 3]), relay.reshape(var_3166.astype('int32'), [11, 16, 3]), ), 1)
output = relay.Tuple([bop_3160,call_3165,var_3166,])
output2 = relay.Tuple([bop_3160,call_3167,var_3166,])
func_3172 = relay.Function([var_3158,var_3159,var_3166,], output)
mod['func_3172'] = func_3172
mod = relay.transform.InferType()(mod)
mutated_mod['func_3172'] = func_3172
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3172_call = mutated_mod.get_global_var('func_3172')
var_3174 = relay.var("var_3174", dtype = "int64", shape = (15, 7, 10))#candidate|3174|(15, 7, 10)|var|int64
var_3175 = relay.var("var_3175", dtype = "int64", shape = (15, 7, 10))#candidate|3175|(15, 7, 10)|var|int64
var_3176 = relay.var("var_3176", dtype = "int32", shape = (528, 1))#candidate|3176|(528, 1)|var|int32
call_3173 = func_3172_call(var_3174,var_3175,var_3176,)
output = call_3173
func_3177 = relay.Function([var_3174,var_3175,var_3176,], output)
mutated_mod['func_3177'] = func_3177
mutated_mod = relay.transform.InferType()(mutated_mod)
var_3361 = relay.var("var_3361", dtype = "float32", shape = ())#candidate|3361|()|var|float32
var_3362 = relay.var("var_3362", dtype = "float32", shape = (15, 2, 6))#candidate|3362|(15, 2, 6)|var|float32
bop_3363 = relay.greater(var_3361.astype('bool'), var_3362.astype('bool')) # shape=(15, 2, 6)
output = relay.Tuple([bop_3363,])
output2 = relay.Tuple([bop_3363,])
func_3369 = relay.Function([var_3361,var_3362,], output)
mod['func_3369'] = func_3369
mod = relay.transform.InferType()(mod)
var_3370 = relay.var("var_3370", dtype = "float32", shape = ())#candidate|3370|()|var|float32
var_3371 = relay.var("var_3371", dtype = "float32", shape = (15, 2, 6))#candidate|3371|(15, 2, 6)|var|float32
output = func_3369(var_3370,var_3371,)
func_3372 = relay.Function([var_3370,var_3371,], output)
mutated_mod['func_3372'] = func_3372
mutated_mod = relay.transform.InferType()(mutated_mod)
var_3617 = relay.var("var_3617", dtype = "float32", shape = (7, 11, 7))#candidate|3617|(7, 11, 7)|var|float32
const_3618 = relay.const([[[0.690806,-4.626973,-0.370722,-8.788822,7.007620,7.387324,8.565989],[-6.265608,0.654822,-8.123413,-2.506811,3.593083,-4.292056,-4.020308],[0.275777,-9.963189,3.450265,-0.429724,6.354243,4.101043,-5.234986],[-9.579661,3.993881,5.670143,-0.774829,2.196613,3.812260,-9.447949],[2.777989,-0.302192,-8.524128,-3.754636,6.114024,-1.690480,3.022105],[6.124824,-3.458785,2.840830,-5.686272,-1.873644,0.456742,2.785629],[-0.169959,-5.406528,-9.074233,-0.743273,2.340720,-2.498790,9.089720],[7.568793,6.364443,-0.261659,5.862809,9.219900,-9.483171,-8.820912],[0.769060,-2.889641,2.626587,-3.439654,6.368390,-0.257811,2.944278],[1.821129,0.110225,2.365947,2.097933,-9.575898,5.918420,4.932143],[2.510051,3.919614,4.236193,-4.675828,-9.219193,0.753441,3.726800]],[[-0.341305,-4.275189,3.125223,9.880952,-5.794316,9.753919,8.624711],[3.820583,-4.544995,-0.463587,0.603062,-9.845542,-1.149191,-9.691098],[-4.218140,6.620335,-4.789425,9.002829,-9.516598,-7.521725,9.490624],[1.268447,0.695101,3.102454,-2.999164,4.759784,-7.802738,9.445801],[7.199603,-9.678996,-9.271796,-8.415677,9.600961,-3.840438,-0.550198],[5.324197,-5.715291,-0.566220,6.681084,-5.279714,0.893582,0.012038],[2.683119,-9.898774,8.335232,-0.330939,8.507772,-1.193184,-5.985334],[-9.231764,-0.526362,5.660970,-6.841722,-1.669833,8.026819,8.123422],[-2.582546,-5.187365,-5.221271,-5.448088,0.433054,3.004503,-8.397129],[-6.089995,-7.591306,5.853102,-7.657757,-3.927728,6.311603,-2.078243],[0.234783,9.166065,-1.897231,1.544196,2.902852,-3.116717,-2.389424]],[[4.544757,-5.747820,-1.858826,-4.946663,0.653913,-1.460022,5.030391],[-3.011678,-0.717183,-1.068279,0.539587,-8.017353,0.940872,5.325009],[-8.853771,6.739418,-2.323133,8.118107,-5.095264,-7.522750,-3.332231],[4.157221,-0.145435,9.690646,6.268940,6.685217,6.934934,1.815017],[1.131250,-9.883300,6.573848,3.856049,6.321033,-7.883302,-8.115111],[9.981911,3.640991,-5.744486,-2.616706,-5.377244,4.533449,3.037903],[0.676408,0.257291,0.505071,6.982724,5.476047,-8.987335,7.074334],[3.297649,1.798702,1.849248,7.341463,6.652179,7.555642,-5.092248],[8.443667,8.072780,-7.770612,0.462758,5.400340,-5.818083,1.321934],[1.442143,4.697823,-0.779812,-4.608231,9.285375,9.086655,0.817869],[0.563984,-0.771578,7.520264,1.918449,-2.620613,5.270011,7.865228]],[[4.076922,-7.478312,-4.272713,8.435467,6.558345,-2.412796,7.422253],[4.502818,-0.069763,-0.396450,1.287082,9.984515,-8.374380,0.228427],[8.782161,4.940708,0.880807,4.032427,-5.329543,-8.338373,-7.308706],[-4.407435,-2.787293,4.955967,-8.341979,4.675926,7.100486,2.018738],[1.961846,-5.225252,2.587067,1.319790,7.611377,-5.595204,6.317553],[7.353897,6.588675,2.960788,4.454458,1.339697,5.010145,4.585078],[1.741446,-8.373281,2.811262,9.018240,-9.129857,3.428855,4.146172],[0.862294,-0.470560,4.839713,3.885760,-6.274612,5.338126,-7.345175],[-4.971397,5.285656,-9.135234,-2.701870,-9.869631,7.238785,-4.832951],[0.820185,-8.907447,-2.118530,8.129764,1.214765,7.415968,-7.171264],[9.250445,1.410988,-5.661356,6.056692,-6.696372,4.578959,4.768069]],[[9.492835,5.594851,9.262710,-5.084225,9.073442,8.463830,-5.476678],[-3.097328,2.801291,9.889346,8.512774,-7.641360,7.064958,6.145666],[7.419968,6.134882,-1.321150,0.462064,-9.351439,-7.087948,-7.835892],[-5.968374,-7.335822,7.600447,-0.350398,-8.348379,-6.128022,-2.869705],[5.148939,-9.821649,-2.513114,4.498200,7.260746,3.326526,-4.798902],[9.101405,3.956450,8.925495,-8.134362,-2.696477,-1.944227,-1.223717],[5.864606,-9.335241,-1.562049,3.404557,-7.743732,-7.956569,-8.970923],[1.269389,7.246826,3.776875,8.317465,-7.432086,4.361730,-9.986564],[8.568723,-2.611059,-4.816347,8.261678,-8.867662,0.578440,5.807594],[-5.645817,5.681587,5.156968,-4.244766,-9.563639,0.363457,8.225197],[6.334966,-3.840533,-1.857640,1.529457,1.783854,-5.917598,8.613679]],[[-4.207979,7.486872,-0.208658,0.239068,4.188852,-2.941379,3.663731],[-4.821199,-3.676380,-4.542910,-0.577140,-6.054644,2.472534,-1.104508],[2.813737,-3.537446,-2.342293,-0.900836,-9.294770,-4.873573,0.201596],[9.431906,6.595656,7.785140,7.035126,-0.876079,-1.853198,9.843063],[9.153510,5.665498,-9.258458,-2.915721,8.096426,8.669965,-3.176711],[7.723323,0.581055,-9.133441,-4.799445,-1.842672,-7.083173,0.331320],[5.231834,-1.717297,-5.142234,1.901247,6.253065,-0.935019,-9.340998],[4.702531,2.762078,-6.178905,9.251080,5.606876,-6.162362,-2.510092],[4.713812,-8.177233,-1.450621,3.978126,-2.944568,1.418998,-5.910945],[3.327582,-3.569032,-7.468646,6.590100,-5.339657,8.842363,9.290724],[7.069298,-7.212281,9.121690,-1.046502,-1.814936,0.201988,-3.494581]],[[-6.926521,-0.133393,-5.793078,-7.044783,-9.398129,8.533308,7.886750],[2.397209,4.253703,-8.181810,5.513558,-3.812481,7.341863,2.108024],[3.841453,-2.023937,-7.784074,0.873782,0.265309,3.609427,-4.870466],[-8.424405,-6.797941,-3.934585,-8.963911,7.570292,-8.433706,4.049023],[-9.114546,-7.365201,1.255416,-5.130635,5.460000,-2.101796,1.521424],[3.787888,-1.875169,0.425471,6.999282,-0.081510,-9.098860,2.282784],[7.497373,3.709542,2.208035,-7.158148,-7.515841,-2.639631,-2.889738],[-1.590301,8.998730,8.792647,3.812872,-8.255951,-7.762480,-4.238254],[-3.528511,-6.855066,4.261671,-7.311133,4.869229,7.129526,9.894234],[-7.650100,-0.735022,2.683220,-4.224312,3.070696,-7.657662,-7.788214],[4.522577,5.232149,-8.403667,5.168021,0.338558,-6.714877,-5.043685]]], dtype = "float32")#candidate|3618|(7, 11, 7)|const|float32
bop_3619 = relay.floor_divide(var_3617.astype('float32'), relay.reshape(const_3618.astype('float32'), relay.shape_of(var_3617))) # shape=(7, 11, 7)
func_2900_call = mod.get_global_var('func_2900')
func_2903_call = mutated_mod.get_global_var('func_2903')
var_3640 = relay.var("var_3640", dtype = "int32", shape = (528,))#candidate|3640|(528,)|var|int32
call_3639 = relay.TupleGetItem(func_2900_call(relay.reshape(var_3640.astype('int32'), [11, 16, 3]), relay.reshape(var_3640.astype('int32'), [11, 16, 3]), ), 1)
call_3641 = relay.TupleGetItem(func_2903_call(relay.reshape(var_3640.astype('int32'), [11, 16, 3]), relay.reshape(var_3640.astype('int32'), [11, 16, 3]), ), 1)
uop_3651 = relay.atanh(call_3639.astype('float32')) # shape=(11, 16, 3)
uop_3653 = relay.atanh(call_3641.astype('float32')) # shape=(11, 16, 3)
func_2566_call = mod.get_global_var('func_2566')
func_2570_call = mutated_mod.get_global_var('func_2570')
const_3662 = relay.const([[-10,1,9,8,2,9,-4,-9,-6,-8,-8,-2,9,-1,-9,7,-8,-1,4,-9,1,-8,-1,-2,9,3,-8,-4,6,10,-8,5,7,3,7,10,1,3,-6,1,6,7,-9,-3,-8,-2,-1,-4,-7,2,8,2,-1,-3,9,-2,-8,-10,-10,3],[7,-4,-6,-9,-5,5,-2,-5,1,9,2,6,2,10,-1,10,10,-8,-4,9,7,-3,10,-3,-7,-2,6,2,8,-10,5,-8,-5,1,-3,-9,4,-3,-1,9,9,-9,-1,-10,1,7,9,-2,2,-6,-6,9,-8,-6,7,8,-7,2,6,-9],[4,-4,3,-9,-1,-2,-7,-7,-1,5,10,-7,-8,9,1,-4,5,-7,-6,-5,-9,-2,-8,-3,-3,1,2,2,-7,8,8,2,-2,6,-5,-2,10,5,6,8,-8,5,-7,2,8,3,-1,-1,-3,-10,-8,5,10,-5,-9,6,-2,-9,-7,-4],[-10,3,1,6,-3,-4,-9,-8,-10,5,-7,-9,1,-9,-9,-5,1,2,-2,-8,5,7,-1,-4,7,10,-10,3,7,10,-9,4,-3,-4,5,1,1,3,-10,-3,-6,-2,-2,-8,1,4,2,-9,-6,-9,2,10,-7,-5,2,7,1,-2,6,-3],[-7,4,6,-4,6,-5,5,-2,-10,1,-5,8,8,8,-2,-9,-7,-10,-8,-7,-2,-3,-10,9,-1,2,9,-9,-1,-10,-7,6,2,9,2,4,-10,9,1,-8,10,-8,9,7,6,7,-6,9,6,-10,4,10,-1,2,1,-2,-9,4,-10,9]], dtype = "uint8")#candidate|3662|(5, 60)|const|uint8
call_3661 = func_2566_call(relay.reshape(const_3662.astype('uint8'), [4, 5, 15]), relay.reshape(const_3662.astype('uint8'), [4, 5, 15]), )
call_3663 = func_2566_call(relay.reshape(const_3662.astype('uint8'), [4, 5, 15]), relay.reshape(const_3662.astype('uint8'), [4, 5, 15]), )
bop_3665 = relay.power(uop_3651.astype('float32'), relay.reshape(call_3639.astype('float32'), relay.shape_of(uop_3651))) # shape=(11, 16, 3)
bop_3668 = relay.power(uop_3653.astype('float32'), relay.reshape(call_3641.astype('float32'), relay.shape_of(uop_3653))) # shape=(11, 16, 3)
output = relay.Tuple([bop_3619,var_3640,call_3661,const_3662,bop_3665,])
output2 = relay.Tuple([bop_3619,var_3640,call_3663,const_3662,bop_3668,])
func_3680 = relay.Function([var_3617,var_3640,], output)
mod['func_3680'] = func_3680
mod = relay.transform.InferType()(mod)
var_3681 = relay.var("var_3681", dtype = "float32", shape = (7, 11, 7))#candidate|3681|(7, 11, 7)|var|float32
var_3682 = relay.var("var_3682", dtype = "int32", shape = (528,))#candidate|3682|(528,)|var|int32
output = func_3680(var_3681,var_3682,)
func_3683 = relay.Function([var_3681,var_3682,], output)
mutated_mod['func_3683'] = func_3683
mutated_mod = relay.transform.InferType()(mutated_mod)
var_3863 = relay.var("var_3863", dtype = "uint64", shape = (4, 6, 16))#candidate|3863|(4, 6, 16)|var|uint64
const_3864 = relay.const([[[4,2,3,-6,-9,-6,9,-6,3,-9,-4,5,5,-7,-2,7],[-1,1,10,-6,4,-4,5,-1,-7,-5,3,-7,3,7,10,-3],[-4,-6,2,1,-6,-10,7,1,2,-5,6,-3,-5,-6,4,-8],[4,3,6,3,-1,2,6,1,7,-5,9,4,8,-9,-9,-3],[10,8,-9,5,6,7,-1,10,-6,3,-10,-7,8,3,4,-10],[-1,8,1,-10,-3,9,-5,1,1,-7,2,-1,2,8,1,10]],[[-10,4,4,-8,-2,10,-5,1,5,-9,1,-7,-4,-1,-3,-7],[-9,-4,-4,9,-1,-3,10,-10,-1,-3,-9,-7,5,9,7,3],[-6,9,1,-8,-7,-7,-7,5,8,-2,8,1,9,3,8,2],[-3,6,10,-4,-8,-5,2,5,-8,6,-8,1,-8,3,-2,-10],[7,9,-1,-4,6,4,-9,-7,-7,3,1,-3,10,-3,-3,7],[10,-9,9,-1,-3,2,-5,-9,1,8,-7,10,-8,-2,-7,-5]],[[7,9,-7,10,7,-4,-10,-5,-4,-2,5,-10,5,6,-3,1],[4,5,-2,1,-6,2,-7,-8,9,2,1,6,6,-10,-10,-8],[-2,-6,-7,-2,4,-10,10,-10,7,2,5,-6,8,9,-10,4],[7,6,9,-8,3,-3,-5,1,-6,2,9,-2,7,-8,-6,6],[-4,-9,2,7,-7,-6,5,4,10,-3,-5,7,4,-6,-10,6],[-7,-9,6,4,-8,4,10,3,6,-9,10,-1,-3,-5,-1,9]],[[9,9,-7,7,-3,-7,2,1,7,-7,7,-1,6,5,8,7],[3,-5,7,6,-4,3,4,-4,-3,7,-10,10,6,-5,-9,-4],[-10,-5,-2,7,5,-3,-3,9,9,-5,6,-7,1,9,-8,-2],[-1,-3,7,10,-1,10,-10,-9,-9,-8,-2,-9,8,-2,-10,-5],[3,-3,-10,-4,-6,5,5,2,10,1,6,-6,-8,3,3,9],[5,-8,-7,-6,-7,8,6,-8,-2,10,-10,4,-5,6,-4,5]]], dtype = "uint64")#candidate|3864|(4, 6, 16)|const|uint64
bop_3865 = relay.not_equal(var_3863.astype('bool'), relay.reshape(const_3864.astype('bool'), relay.shape_of(var_3863))) # shape=(4, 6, 16)
output = bop_3865
output2 = bop_3865
func_3871 = relay.Function([var_3863,], output)
mod['func_3871'] = func_3871
mod = relay.transform.InferType()(mod)
var_3872 = relay.var("var_3872", dtype = "uint64", shape = (4, 6, 16))#candidate|3872|(4, 6, 16)|var|uint64
output = func_3871(var_3872)
func_3873 = relay.Function([var_3872], output)
mutated_mod['func_3873'] = func_3873
mutated_mod = relay.transform.InferType()(mutated_mod)
var_4246 = relay.var("var_4246", dtype = "int32", shape = (16, 1, 14))#candidate|4246|(16, 1, 14)|var|int32
const_4247 = relay.const([[[6,-1,-2,-4,4,-4,-10,6,-1,-3,-5,1,1,7],[-3,5,3,-2,7,-4,8,7,-2,4,-2,-4,2,-6],[7,2,8,-9,-5,8,7,-5,1,-4,5,-6,-7,-3],[10,-3,3,-6,5,6,8,-4,-7,1,10,-10,-5,3]],[[-1,-4,6,-7,-5,1,-2,-9,-10,-5,-1,4,-4,-8],[3,3,-8,6,-4,-2,-7,8,10,10,-2,9,-3,-7],[-1,6,-8,9,-5,1,-7,-10,-8,6,8,1,2,5],[5,10,1,-2,-6,7,6,-3,-5,-1,-3,-2,-4,-3]],[[3,10,2,-5,-10,1,8,7,10,-10,5,7,-10,-9],[9,1,-9,-9,-4,3,-1,-8,-6,4,-7,10,-8,7],[3,-2,-7,-6,3,7,-2,-9,-9,-2,4,-1,-2,2],[-8,-6,5,5,9,10,9,-1,-10,-1,-9,-3,1,-5]],[[-7,-3,-6,-5,-6,-4,-4,-9,2,1,2,2,-7,6],[1,2,-8,2,-3,4,-9,-4,-3,-3,5,-6,8,-10],[-2,-4,2,10,9,4,9,1,8,-9,10,-3,-8,6],[6,-10,4,1,9,6,1,10,-1,8,-8,-10,8,7]],[[-4,-1,-9,-9,4,1,-3,-1,-10,-6,4,10,-10,-2],[4,4,10,-8,-6,-4,-1,4,-1,-8,-6,1,6,-1],[2,5,-3,-3,6,-4,10,-3,-2,-5,-1,-5,5,6],[7,-10,-1,4,5,8,9,-4,-9,-2,-3,3,7,-1]],[[-4,-8,4,-10,2,-10,-9,8,2,9,-8,-10,7,7],[3,-10,4,-8,5,-5,1,-4,8,10,-4,9,9,5],[7,2,9,-7,-10,-1,-2,-2,6,5,9,-3,-4,5],[4,-1,-1,10,-5,-10,1,-9,-2,8,-6,1,8,-8]],[[-6,8,-2,-2,-4,-10,-7,-3,6,1,-3,-5,2,4],[-9,4,5,7,3,-8,-2,-7,1,-9,-1,4,-1,-5],[-6,-5,-1,-2,1,4,1,-10,-2,-3,-8,-9,-5,5],[3,-1,8,4,2,-8,7,6,3,10,4,10,6,-3]],[[2,8,-9,-4,2,-8,8,-9,5,-3,-3,6,8,1],[5,6,-3,5,-3,9,-9,-10,-3,1,4,10,9,-7],[4,-5,-4,-8,-5,-1,2,-2,8,-7,2,-1,-2,-8],[-7,-1,4,9,5,7,10,8,9,-2,-5,8,-7,-6]],[[9,1,8,8,6,-2,-7,-2,-6,-1,-10,3,-2,-3],[-1,-9,4,10,-3,-5,-8,-1,5,-3,6,7,-7,-3],[3,-1,8,7,-1,5,-5,-3,7,-7,-1,-5,-6,-5],[5,3,4,2,-3,4,-6,-8,-9,-2,-6,1,1,4]],[[-10,-10,7,-5,-9,-2,6,6,7,2,6,-4,-5,2],[3,-3,7,8,-9,6,9,-10,-6,-8,-2,-10,-4,-3],[-1,3,2,-5,-1,4,7,10,8,3,-6,-8,1,9],[4,2,-6,9,5,1,-10,-8,5,-3,7,8,6,4]],[[-5,3,-4,7,10,-1,2,10,7,7,7,-6,5,-10],[1,10,-6,7,6,1,10,2,4,-1,2,-4,9,3],[-5,9,-6,1,-10,3,2,5,-6,3,-8,2,6,1],[7,1,7,-9,9,-7,8,-8,-4,4,9,-1,-2,9]],[[2,-3,-5,2,-6,-9,10,-5,-5,-1,-5,8,-10,1],[3,-2,-3,5,-3,2,-7,4,6,-6,-2,10,1,1],[9,7,-3,9,8,-6,9,8,-8,3,-4,4,9,-3],[-2,-4,-6,2,-10,5,-5,8,-8,9,-1,-1,5,-10]],[[9,-3,-6,3,7,-1,-8,-6,-9,6,3,7,-10,-8],[6,-7,1,-8,-8,1,8,-6,-10,9,7,9,1,-5],[-4,5,-10,5,-4,-10,-5,10,5,-10,-8,-4,-6,-6],[-1,-7,-3,5,7,-7,-4,-5,-10,-4,1,-9,5,-6]],[[10,-8,-3,6,-9,1,2,9,7,-6,-9,3,4,-8],[9,10,6,-10,2,6,8,1,5,7,4,-10,-4,4],[7,9,-6,5,6,2,1,1,-5,-9,-2,2,-2,10],[7,5,6,10,-2,5,-8,6,-4,9,1,10,6,1]],[[6,3,-7,-7,-2,-6,-10,4,9,9,9,5,-8,5],[-8,-10,-10,-8,-3,10,10,2,1,1,-6,-5,8,6],[4,-10,10,7,-6,6,9,-7,-4,-10,6,4,2,8],[-9,6,8,8,-7,-7,-1,2,-9,-7,-9,7,-8,7]],[[10,10,4,5,-3,1,9,2,-10,-7,5,-1,3,-8],[-9,-1,-4,8,-6,-1,5,10,1,1,-8,10,2,-6],[9,6,-10,-7,-7,-4,6,-5,-9,-3,6,-2,4,-8],[3,-3,-7,-10,-7,3,2,10,-5,8,-9,4,7,-10]]], dtype = "int32")#candidate|4247|(16, 4, 14)|const|int32
bop_4248 = relay.add(var_4246.astype('int32'), const_4247.astype('int32')) # shape=(16, 4, 14)
output = relay.Tuple([bop_4248,])
output2 = relay.Tuple([bop_4248,])
func_4262 = relay.Function([var_4246,], output)
mod['func_4262'] = func_4262
mod = relay.transform.InferType()(mod)
mutated_mod['func_4262'] = func_4262
mutated_mod = relay.transform.InferType()(mutated_mod)
var_4263 = relay.var("var_4263", dtype = "int32", shape = (16, 1, 14))#candidate|4263|(16, 1, 14)|var|int32
func_4262_call = mutated_mod.get_global_var('func_4262')
call_4264 = func_4262_call(var_4263)
output = call_4264
func_4265 = relay.Function([var_4263], output)
mutated_mod['func_4265'] = func_4265
mutated_mod = relay.transform.InferType()(mutated_mod)
var_4296 = relay.var("var_4296", dtype = "float64", shape = (14, 12, 15))#candidate|4296|(14, 12, 15)|var|float64
uop_4297 = relay.acos(var_4296.astype('float64')) # shape=(14, 12, 15)
uop_4301 = relay.acosh(var_4296.astype('float64')) # shape=(14, 12, 15)
func_3369_call = mod.get_global_var('func_3369')
func_3372_call = mutated_mod.get_global_var('func_3372')
var_4305 = relay.var("var_4305", dtype = "float32", shape = ())#candidate|4305|()|var|float32
var_4306 = relay.var("var_4306", dtype = "float32", shape = (180,))#candidate|4306|(180,)|var|float32
call_4304 = relay.TupleGetItem(func_3369_call(relay.reshape(var_4305.astype('float32'), []), relay.reshape(var_4306.astype('float32'), [15, 2, 6]), ), 0)
call_4307 = relay.TupleGetItem(func_3372_call(relay.reshape(var_4305.astype('float32'), []), relay.reshape(var_4306.astype('float32'), [15, 2, 6]), ), 0)
func_4262_call = mod.get_global_var('func_4262')
func_4265_call = mutated_mod.get_global_var('func_4265')
var_4313 = relay.var("var_4313", dtype = "int32", shape = (224,))#candidate|4313|(224,)|var|int32
call_4312 = relay.TupleGetItem(func_4262_call(relay.reshape(var_4313.astype('int32'), [16, 1, 14])), 0)
call_4314 = relay.TupleGetItem(func_4265_call(relay.reshape(var_4313.astype('int32'), [16, 1, 14])), 0)
output = relay.Tuple([uop_4297,uop_4301,call_4304,var_4305,var_4306,call_4312,var_4313,])
output2 = relay.Tuple([uop_4297,uop_4301,call_4307,var_4305,var_4306,call_4314,var_4313,])
func_4317 = relay.Function([var_4296,var_4305,var_4306,var_4313,], output)
mod['func_4317'] = func_4317
mod = relay.transform.InferType()(mod)
var_4318 = relay.var("var_4318", dtype = "float64", shape = (14, 12, 15))#candidate|4318|(14, 12, 15)|var|float64
var_4319 = relay.var("var_4319", dtype = "float32", shape = ())#candidate|4319|()|var|float32
var_4320 = relay.var("var_4320", dtype = "float32", shape = (180,))#candidate|4320|(180,)|var|float32
var_4321 = relay.var("var_4321", dtype = "int32", shape = (224,))#candidate|4321|(224,)|var|int32
output = func_4317(var_4318,var_4319,var_4320,var_4321,)
func_4322 = relay.Function([var_4318,var_4319,var_4320,var_4321,], output)
mutated_mod['func_4322'] = func_4322
mutated_mod = relay.transform.InferType()(mutated_mod)
var_4491 = relay.var("var_4491", dtype = "float64", shape = (4, 9, 16))#candidate|4491|(4, 9, 16)|var|float64
uop_4492 = relay.log(var_4491.astype('float64')) # shape=(4, 9, 16)
func_1599_call = mod.get_global_var('func_1599')
func_1601_call = mutated_mod.get_global_var('func_1601')
var_4495 = relay.var("var_4495", dtype = "float32", shape = (780,))#candidate|4495|(780,)|var|float32
call_4494 = relay.TupleGetItem(func_1599_call(relay.reshape(var_4495.astype('float32'), [5, 13, 12])), 0)
call_4496 = relay.TupleGetItem(func_1601_call(relay.reshape(var_4495.astype('float32'), [5, 13, 12])), 0)
output = relay.Tuple([uop_4492,call_4494,var_4495,])
output2 = relay.Tuple([uop_4492,call_4496,var_4495,])
func_4498 = relay.Function([var_4491,var_4495,], output)
mod['func_4498'] = func_4498
mod = relay.transform.InferType()(mod)
var_4499 = relay.var("var_4499", dtype = "float64", shape = (4, 9, 16))#candidate|4499|(4, 9, 16)|var|float64
var_4500 = relay.var("var_4500", dtype = "float32", shape = (780,))#candidate|4500|(780,)|var|float32
output = func_4498(var_4499,var_4500,)
func_4501 = relay.Function([var_4499,var_4500,], output)
mutated_mod['func_4501'] = func_4501
mutated_mod = relay.transform.InferType()(mutated_mod)
var_4571 = relay.var("var_4571", dtype = "uint32", shape = (12, 5, 16))#candidate|4571|(12, 5, 16)|var|uint32
var_4572 = relay.var("var_4572", dtype = "uint32", shape = (12, 5, 16))#candidate|4572|(12, 5, 16)|var|uint32
bop_4573 = relay.less_equal(var_4571.astype('bool'), relay.reshape(var_4572.astype('bool'), relay.shape_of(var_4571))) # shape=(12, 5, 16)
output = relay.Tuple([bop_4573,])
output2 = relay.Tuple([bop_4573,])
func_4589 = relay.Function([var_4571,var_4572,], output)
mod['func_4589'] = func_4589
mod = relay.transform.InferType()(mod)
mutated_mod['func_4589'] = func_4589
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4589_call = mutated_mod.get_global_var('func_4589')
var_4591 = relay.var("var_4591", dtype = "uint32", shape = (12, 5, 16))#candidate|4591|(12, 5, 16)|var|uint32
var_4592 = relay.var("var_4592", dtype = "uint32", shape = (12, 5, 16))#candidate|4592|(12, 5, 16)|var|uint32
call_4590 = func_4589_call(var_4591,var_4592,)
output = call_4590
func_4593 = relay.Function([var_4591,var_4592,], output)
mutated_mod['func_4593'] = func_4593
mutated_mod = relay.transform.InferType()(mutated_mod)
var_4614 = relay.var("var_4614", dtype = "int64", shape = (16, 14, 6))#candidate|4614|(16, 14, 6)|var|int64
var_4615 = relay.var("var_4615", dtype = "int64", shape = (16, 14, 6))#candidate|4615|(16, 14, 6)|var|int64
bop_4616 = relay.not_equal(var_4614.astype('bool'), relay.reshape(var_4615.astype('bool'), relay.shape_of(var_4614))) # shape=(16, 14, 6)
func_421_call = mod.get_global_var('func_421')
func_423_call = mutated_mod.get_global_var('func_423')
var_4622 = relay.var("var_4622", dtype = "float32", shape = (1, 154))#candidate|4622|(1, 154)|var|float32
call_4621 = func_421_call(relay.reshape(var_4622.astype('float32'), [1, 11, 14]))
call_4623 = func_421_call(relay.reshape(var_4622.astype('float32'), [1, 11, 14]))
output = relay.Tuple([bop_4616,call_4621,var_4622,])
output2 = relay.Tuple([bop_4616,call_4623,var_4622,])
func_4631 = relay.Function([var_4614,var_4615,var_4622,], output)
mod['func_4631'] = func_4631
mod = relay.transform.InferType()(mod)
var_4632 = relay.var("var_4632", dtype = "int64", shape = (16, 14, 6))#candidate|4632|(16, 14, 6)|var|int64
var_4633 = relay.var("var_4633", dtype = "int64", shape = (16, 14, 6))#candidate|4633|(16, 14, 6)|var|int64
var_4634 = relay.var("var_4634", dtype = "float32", shape = (1, 154))#candidate|4634|(1, 154)|var|float32
output = func_4631(var_4632,var_4633,var_4634,)
func_4635 = relay.Function([var_4632,var_4633,var_4634,], output)
mutated_mod['func_4635'] = func_4635
mutated_mod = relay.transform.InferType()(mutated_mod)
var_4662 = relay.var("var_4662", dtype = "float64", shape = (11, 5, 7))#candidate|4662|(11, 5, 7)|var|float64
uop_4663 = relay.erf(var_4662.astype('float64')) # shape=(11, 5, 7)
func_3680_call = mod.get_global_var('func_3680')
func_3683_call = mutated_mod.get_global_var('func_3683')
var_4666 = relay.var("var_4666", dtype = "float32", shape = (539,))#candidate|4666|(539,)|var|float32
const_4667 = relay.const([-2,-5,-6,5,-10,8,5,-9,-3,-8,-10,5,10,4,-1,-7,8,3,5,-3,-3,3,4,6,2,-2,-5,-8,-6,-10,5,-1,1,7,3,3,9,-5,7,10,5,10,10,6,-10,4,-4,-8,-10,1,3,1,-9,6,-8,-3,-2,-7,-3,-10,-9,-8,-1,8,-3,7,4,-1,4,8,6,9,6,-2,-8,4,9,2,10,1,8,1,-6,4,-10,6,-6,5,10,3,-2,-5,8,-8,7,4,-5,-9,7,-3,-6,2,3,-5,7,-10,4,-9,-5,5,-6,9,-3,-6,-2,7,7,1,9,4,-4,6,-2,-2,-3,8,5,-5,-4,9,10,-5,7,9,-9,-5,-7,-1,-7,-7,8,-2,-1,-1,7,-2,-8,-4,-2,-3,5,-4,-9,3,-5,-8,4,-6,-8,3,-9,-2,3,-3,6,5,-4,-4,-1,-2,-7,-1,-4,-7,6,-10,4,-3,6,1,-4,5,-3,-4,6,-1,6,-4,-1,-3,-1,-3,4,4,-3,-4,-1,-6,10,9,4,10,3,2,-5,10,-9,2,8,5,-9,10,-8,4,-4,3,-4,10,7,1,1,9,-4,-3,-5,6,7,-5,10,-2,-4,-4,10,-6,-10,-10,-8,-8,7,7,-2,-7,-8,-4,4,7,-3,-6,7,-1,-1,-5,-9,3,6,10,-4,-7,-1,-5,8,-3,-2,-5,1,3,6,-10,3,-3,-5,7,9,-6,-6,5,10,5,5,1,6,9,-2,-9,4,3,4,-3,-7,-3,-7,-5,6,-8,-1,-8,-3,-1,6,1,9,-1,6,-5,-2,-6,-7,-5,2,-4,4,-10,-9,-3,10,-6,8,3,3,8,6,-4,6,6,7,-1,-1,8,-3,-6,-5,-1,2,-8,1,2,-2,10,8,-6,-5,-5,-1,8,-6,-4,-7,-3,-8,-3,8,6,-2,8,2,4,-2,-4,4,4,4,-10,-4,9,-3,-10,-8,1,-1,-1,-2,10,3,-6,6,6,9,-1,8,-4,4,4,-10,-3,5,-6,8,2,2,10,-9,7,2,-10,10,1,-9,6,-9,2,5,-10,6,6,-9,3,3,-5,-8,5,-10,1,-1,-9,-8,-6,-1,-7,10,4,-10,-9,-8,7,-9,3,-9,9,3,-4,-10,-5,-1,-9,-8,2,1,10,-4,-5,-9,2,-7,2,8,-3,8,-9,-2,10,1,-7,-1,-2,-4,-10,7,1,-5,-4,-8,-3,-6,-3,-3,10,5,6,4,5,-7,9,8,-8,4,10,-2,8,7,8,-6,-4,8,9,8,-8,-10,8,10,3,-1,-7,5,-1,-1,-2,1,-10,-4,1,-4,8,7,-3,4,-2,-8,8,-6,-8,9,-6,6,9,6,3,-8,-5,6,5,-4,7,-6,7,-5,9,-7,-6], dtype = "int32")#candidate|4667|(528,)|const|int32
call_4665 = relay.TupleGetItem(func_3680_call(relay.reshape(var_4666.astype('float32'), [7, 11, 7]), relay.reshape(const_4667.astype('int32'), [528,]), ), 2)
call_4668 = relay.TupleGetItem(func_3683_call(relay.reshape(var_4666.astype('float32'), [7, 11, 7]), relay.reshape(const_4667.astype('int32'), [528,]), ), 2)
output = relay.Tuple([uop_4663,call_4665,var_4666,const_4667,])
output2 = relay.Tuple([uop_4663,call_4668,var_4666,const_4667,])
func_4688 = relay.Function([var_4662,var_4666,], output)
mod['func_4688'] = func_4688
mod = relay.transform.InferType()(mod)
mutated_mod['func_4688'] = func_4688
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4688_call = mutated_mod.get_global_var('func_4688')
var_4690 = relay.var("var_4690", dtype = "float64", shape = (11, 5, 7))#candidate|4690|(11, 5, 7)|var|float64
var_4691 = relay.var("var_4691", dtype = "float32", shape = (539,))#candidate|4691|(539,)|var|float32
call_4689 = func_4688_call(var_4690,var_4691,)
output = call_4689
func_4692 = relay.Function([var_4690,var_4691,], output)
mutated_mod['func_4692'] = func_4692
mutated_mod = relay.transform.InferType()(mutated_mod)
var_4703 = relay.var("var_4703", dtype = "float64", shape = (13, 8, 1))#candidate|4703|(13, 8, 1)|var|float64
uop_4704 = relay.sinh(var_4703.astype('float64')) # shape=(13, 8, 1)
func_2566_call = mod.get_global_var('func_2566')
func_2570_call = mutated_mod.get_global_var('func_2570')
const_4718 = relay.const([-1,10,-1,4,10,4,3,3,8,3,8,-4,-4,5,5,4,-4,4,3,7,-10,-5,8,2,-2,8,10,-9,6,-2,9,9,-10,9,2,9,8,4,-3,-3,-1,5,1,-8,5,10,-7,7,5,-3,3,-9,-5,8,9,-3,2,-2,1,2,3,9,-4,-7,2,5,9,6,-9,4,-4,8,4,-9,-3,10,-4,4,-5,6,-1,1,-7,6,1,-3,6,1,3,-6,2,10,4,5,-7,7,1,7,-6,5,-2,4,-10,-1,-6,9,4,-5,5,10,-10,7,-6,1,-7,1,5,-1,-10,-9,-1,6,8,-4,1,5,10,5,8,9,-4,-9,8,5,-2,6,-1,-7,-4,-1,4,6,-2,1,9,-5,2,2,-4,8,9,9,6,8,10,5,-9,-9,4,-9,10,5,-10,2,2,-1,-5,1,-10,-1,10,4,9,-8,-3,-7,5,-7,-7,-10,-2,-9,3,8,9,-2,5,6,-9,-8,-3,5,5,4,2,2,-7,9,-1,3,-6,6,-3,7,1,2,8,-4,9,6,2,-5,9,10,3,-9,-10,-10,1,3,-3,-6,2,6,7,-5,2,-9,6,-2,-5,-5,7,-6,-5,10,5,8,5,-9,6,3,-3,-10,4,-7,-4,-1,-10,-9,7,-2,7,-10,-2,5,4,-9,-2,6,-2,2,5,-4,2,1,-5,2,1,-6,-10,4,-1,-10,3,-9,-1,8,4,-3,7,6,7,6,7,-4,3,2,2,-6,-10,-7,-6,8,-6,6,5,7,-7,3], dtype = "uint8")#candidate|4718|(300,)|const|uint8
call_4717 = func_2566_call(relay.reshape(const_4718.astype('uint8'), [4, 5, 15]), relay.reshape(const_4718.astype('uint8'), [4, 5, 15]), )
call_4719 = func_2566_call(relay.reshape(const_4718.astype('uint8'), [4, 5, 15]), relay.reshape(const_4718.astype('uint8'), [4, 5, 15]), )
output = relay.Tuple([uop_4704,call_4717,const_4718,])
output2 = relay.Tuple([uop_4704,call_4719,const_4718,])
func_4724 = relay.Function([var_4703,], output)
mod['func_4724'] = func_4724
mod = relay.transform.InferType()(mod)
mutated_mod['func_4724'] = func_4724
mutated_mod = relay.transform.InferType()(mutated_mod)
var_4725 = relay.var("var_4725", dtype = "float64", shape = (13, 8, 1))#candidate|4725|(13, 8, 1)|var|float64
func_4724_call = mutated_mod.get_global_var('func_4724')
call_4726 = func_4724_call(var_4725)
output = call_4726
func_4727 = relay.Function([var_4725], output)
mutated_mod['func_4727'] = func_4727
mutated_mod = relay.transform.InferType()(mutated_mod)
var_5045 = relay.var("var_5045", dtype = "int32", shape = (14, 3, 9))#candidate|5045|(14, 3, 9)|var|int32
const_5046 = relay.const([[[3,-2,5,9,6,-2,-7,-2,-9],[-6,5,3,-6,-4,-10,5,-10,-6],[-7,-10,2,-1,8,-9,2,-8,-9]],[[4,1,-6,-10,6,-6,-4,7,5],[7,-8,9,-4,5,7,-2,-1,8],[5,10,9,-4,-10,-10,-10,-1,2]],[[8,-3,5,-8,1,-9,9,-9,5],[-5,-5,-10,10,-2,10,2,-9,2],[-7,2,-8,-8,-4,5,7,10,5]],[[-8,2,7,-3,10,6,-5,-2,10],[7,8,5,5,-3,5,-5,-2,-5],[8,10,8,-2,8,2,-4,5,4]],[[-3,-3,4,-4,-3,7,-9,-5,-3],[-4,8,8,9,-10,-4,-4,3,-5],[5,7,10,-7,-9,6,5,-10,4]],[[-2,-10,7,9,10,9,1,5,-4],[-4,-1,-3,-8,9,-9,5,-5,-8],[-6,-4,-10,-2,-10,1,-3,7,9]],[[-3,6,6,-6,-9,-4,5,-5,-6],[3,6,-6,-7,1,5,2,10,1],[-5,4,7,-2,-8,1,-10,6,10]],[[-2,-3,1,-4,3,2,9,-10,-1],[1,-1,-8,4,9,-3,-2,-5,7],[-10,-10,-4,-8,8,-6,-8,2,-5]],[[-4,-8,9,-3,6,7,-4,4,-1],[-6,3,-8,5,-7,5,-7,3,3],[9,-6,-6,8,-9,5,5,10,7]],[[1,3,-9,2,-1,-3,8,2,9],[-6,-7,-1,6,4,-6,-3,3,4],[8,9,-10,4,6,-1,-4,-2,-5]],[[-3,-9,-6,-8,-1,-7,-4,-9,-6],[9,7,8,2,7,2,7,3,-4],[2,-10,-4,5,3,3,3,9,-9]],[[7,8,-5,8,-8,9,-9,-6,3],[-7,-10,-2,-10,-6,4,6,7,7],[-6,4,-5,-10,6,-3,-5,-7,1]],[[-9,4,-1,-1,10,-5,-9,-2,-9],[-8,1,-2,-2,5,4,-7,-10,-8],[-9,-10,-6,6,7,10,2,2,1]],[[8,-3,-3,2,1,2,2,10,-10],[6,2,1,7,10,-1,-3,8,-3],[-6,2,-6,9,-4,8,5,-10,-7]]], dtype = "int32")#candidate|5046|(14, 3, 9)|const|int32
bop_5047 = relay.less_equal(var_5045.astype('bool'), relay.reshape(const_5046.astype('bool'), relay.shape_of(var_5045))) # shape=(14, 3, 9)
bop_5061 = relay.mod(var_5045.astype('float64'), relay.reshape(const_5046.astype('float64'), relay.shape_of(var_5045))) # shape=(14, 3, 9)
func_4589_call = mod.get_global_var('func_4589')
func_4593_call = mutated_mod.get_global_var('func_4593')
var_5070 = relay.var("var_5070", dtype = "uint32", shape = (960,))#candidate|5070|(960,)|var|uint32
call_5069 = relay.TupleGetItem(func_4589_call(relay.reshape(var_5070.astype('uint32'), [12, 5, 16]), relay.reshape(var_5070.astype('uint32'), [12, 5, 16]), ), 0)
call_5071 = relay.TupleGetItem(func_4593_call(relay.reshape(var_5070.astype('uint32'), [12, 5, 16]), relay.reshape(var_5070.astype('uint32'), [12, 5, 16]), ), 0)
func_4631_call = mod.get_global_var('func_4631')
func_4635_call = mutated_mod.get_global_var('func_4635')
const_5074 = relay.const([-10,7,4,-3,-3,-7,-2,-4,-10,-8,2,4,-9,6,-9,-4,-5,-2,9,1,-6,-4,9,-1,6,7,-5,3,-7,10,3,7,-6,-9,4,-6,-10,-3,6,-10,-3,-2,6,-10,6,1,5,9,4,-6,-8,3,5,-9,-9,-5,3,-1,-3,-4,-3,10,10,1,9,-4,-4,-7,2,9,-2,-6,-2,-4,9,3,10,4,-3,5,4,1,6,-6,1,-10,10,7,-4,-6,-8,7,-2,-9,-5,9,4,9,7,8,9,-10,-5,-10,10,2,-4,-6,-9,1,1,-5,-9,5,-8,-3,-1,9,-4,5,-4,9,-5,2,4,-9,-7,-10,-9,-4,7,7,2,6,-2,9,-7,3,5,-7,3,4,10,-6,-10,-5,8,9,-7,-8,-3,4,5,-3,5,9,-5,5,10,2,2,9,3,-9,-2,-9,4,-6,-3,7,-8,-5,3,8,-3,-5,2,-4,3,-3,-10,1,-8,-3,7,-10,-10,10,6,7,8,2,-8,-5,10,6,-2,6,-4,-4,10,-6,10,-4,-3,6,4,3,6,3,-10,10,5,-4,6,2,4,4,5,10,10,-9,-6,4,-4,8,7,-6,3,-3,-9,-4,-2,-7,-8,-5,3,-1,-8,-10,4,-6,7,5,-3,-10,-3,7,5,-2,-1,1,3,-2,1,-5,2,-7,-5,-3,-9,3,9,7,2,-9,8,-6,4,-2,-1,-1,10,4,-8,-6,-9,-9,6,2,-7,4,3,-6,9,-3,7,-5,-1,2,5,-6,-6,-5,-1,4,-10,-3,8,1,7,6,-7,1,-2,-7,3,-3,8,-3,7,-7,6,9,9,-9,-1,10,-8,7,-6,-6,8,7,-9,5,8,10,-1,-7,-6,-7,-3,-8,8,10,-10,2,-8,-1,1,-3,-7,-4,2,9,8,-7,-4,4,10,7,-2,5,-2,-9,10,4,4,6,-9,-4,-4,10,3,4,-9,3,-4,3,3,-8,5,2,2,-3,-6,2,7,-10,5,6,-4,5,-5,1,2,5,-5,-5,7,-10,7,3,-3,4,4,1,-7,6,-7,-2,-10,6,-3,2,1,1,5,9,6,7,-3,1,-5,4,6,10,-4,-3,7,5,9,-5,-3,-4,10,-10,-8,-7,-8,6,8,1,-4,8,-2,-3,-10,-7,5,-1,-1,-1,4,3,-8,7,8,-9,4,8,-10,-7,9,5,-3,8,9,-4,-7,4,-7,3,-1,-10,2,1,8,6,3,-9,8,-2,-7,10,3,-9,-5,6,9,-10,-5,-6,-10,8,4,10,5,10,6,7,-4,-10,1,4,3,4,7,-10,-2,2,6,-9,4,4,-9,-1,-9,1,-8,-1,-3,8,-5,-8,-7,-3,2,5,-1,-8,-1,-3,-10,10,3,9,-6,-5,5,8,-6,6,-2,4,9,-4,-10,1,-5,-6,-2,-4,1,-1,-7,-10,-9,8,7,-5,-3,9,7,-3,-10,-9,-3,-3,6,-3,-1,3,1,-1,5,-9,4,4,-7,-2,-4,-1,5,3,6,-2,1,8,9,2,-5,2,8,-1,-3,-4,-5,5,-9,-1,6,-1,-3,9,-10,5,10,5,3,5,-8,-2,3,2,8,6,-9,9,8,3,8,3,5,-8,-3,-6,-3,3,8,10,9,9,5,-1,9,4,1,-7,-5,-7,-9,9,-3,-10,8,-10,7,6,-9,-8,-10,-6,-10,-7,10,-3,-9,1,-7,-7,-2,-9,-6,3,-1,-4,3,-1,-4,8,-4,-3,5,7,6,6,-10,-8,-9,2,2,-2,7,-8,2,5,8,1,1,-5,3,-4,6,7,-3,-7,6,-3,-3,-6,-8,-2,-8,-8,-10,-5,-4,-6,-2,-8,-2,3,-6,-1,-9,3,9,-2,6,-5,4,-1,-2,1,-8,3,5,7,4,8,6,-9,-7,-1,2,1,-9,-8,-9,-7,9,-8,7,6,5,3,7,8,4,7,7,-5,10,7,2,6,-5,-8,2,-4,-9,-2,-2,10,-10,-3,5,-3,-1,4,-8,7,-9,-6,8,-9,10,3,10,7,10,-8,9,-2,4,6,-10,-7,-9,-7,-4,5,-8,5,4,7,-3,-1,-6,1,-2,-4,-1,9,-4,6,-5,-4,-1,-10,-1,9,1,6,-6,9,-5,10,4,5,-8,-7,-4,-7,-10,-8,-3,6,-10,3,-9,-5,7,-10,5,-8,8,7,6,5,-10,-6,-3,-8,5,10,-6,-10,-10,-4,8,7,9,8,-7,-3,7,1,4,-4,3,-4,-10,-3,-7,-5,-1,10,6,9,-10,-2,4,6,5,8,5,10,-6,-4,-10,-7,1,2,3,3,-4,10,-10,-7,-6,4,6,-7,-5,-7,-9,-5,-2,-10,-8,10,-9,9,7,-4,-10,-6,-2,-1,3,-3,2,5,-7,-1,-7,9,1,5,6,5,-8,4,-4,-9,5,-1,2,-3,10,-5,4,5,4,7,9,-7,5,-9,8,-5,-1,-2,-2,-3,-8,3,4,1,-10,-1,-10,-8,-2,3,-4,-5,-7,-6,-3,-5,-9,4,8,3,-4,7,-3,-1,1,-6,-4,-7,-9,2,-4,-4,-5,4,6,3,2,-5,4,-9,-10,7,-8,-5,-9,-9,-3,-4,3,-6,-7,-6,7,-3,7,-8,-9,-1,1,-3,4,-1,-7,7,-7,7,-2,-5,6,1,-2,-2,-4,-7,10,5,-2,-1,5,8,-3,-8,-10,3,2,1,3,-6,-8,-3,-3,-2,-7,5,-3,4,10,10,-6,5,-6,-4,10,7,-3,8,-1,4,-7,9,-3,-5,-6,10,7,10,2,2,1,3,10,-1,-6,-8,-5,-3,2,1,5,10,9,-3,3,6,-5,-2,-2,3,-10,-9,7,-3,-1,9,-6,-6,-10,-5,-4,-8,9,3,5,-9,8,7,-1,-6,-5,-8,3,-5,3,-5,2,-8,-5,4,7,-2,1,-10,-4,-7,-1,-9,9,9,-7,-2,10,-3,9,5,-1,10,-10,6,-9,2,-8,-6,6,-10,10,5,-10,-6,-6,-6,2,10,-8,-6,9,-9,-1,-3,-2,2,-5,-3,5,-5,-4,7,8,-10,4,-5,3,2,-1,-3,-10,-5,1,-9,9,7,-6,1,-2,10,6,8,9,5,5,-1,2,9,5,-2,-3,-10,-3,-2,-2,10,-6,-9,-8,-5,10,-9,3,8,7,4,8,10,-7,-6,-5,-8,5,-7,10,8,-7,4,5,10,9,6,10,-9,-10,-9,-1,7,-4,9,-6,8,3,7,-4,-4,3,-2,-7,1,6,-4,8,-3,8,8,10,-9,-10,3,-3,8,-4,-8,-1,-10,-10,-6,-8,3,-2,9,-9,-6,-5,2,3,-4,10,10,3,-8,4,5,2,7,-1,7,5,10,10,7,-1,2,5,1,-2,2,3,-8,-5,1,3,5,-3,7,-6,9,-7,7,3,-9,10,-8,9,10,-3,8,-10,4,-8,9,9,-9,6,-8,7,1,1,10,9,1,-2,-10,2,8,-6,3,-2,4,10,7,1,5,-1,-9,-5,-4,1,-9,-7,4,3,-1,-10,3,6,7,9,-7,-7,3], dtype = "int64")#candidate|5074|(1344,)|const|int64
var_5075 = relay.var("var_5075", dtype = "float32", shape = (154,))#candidate|5075|(154,)|var|float32
call_5073 = relay.TupleGetItem(func_4631_call(relay.reshape(const_5074.astype('int64'), [16, 14, 6]), relay.reshape(const_5074.astype('int64'), [16, 14, 6]), relay.reshape(var_5075.astype('float32'), [1, 154]), ), 0)
call_5076 = relay.TupleGetItem(func_4635_call(relay.reshape(const_5074.astype('int64'), [16, 14, 6]), relay.reshape(const_5074.astype('int64'), [16, 14, 6]), relay.reshape(var_5075.astype('float32'), [1, 154]), ), 0)
func_4688_call = mod.get_global_var('func_4688')
func_4692_call = mutated_mod.get_global_var('func_4692')
var_5112 = relay.var("var_5112", dtype = "float64", shape = (385,))#candidate|5112|(385,)|var|float64
var_5113 = relay.var("var_5113", dtype = "float32", shape = (539,))#candidate|5113|(539,)|var|float32
call_5111 = relay.TupleGetItem(func_4688_call(relay.reshape(var_5112.astype('float64'), [11, 5, 7]), relay.reshape(var_5113.astype('float32'), [539,]), ), 0)
call_5114 = relay.TupleGetItem(func_4692_call(relay.reshape(var_5112.astype('float64'), [11, 5, 7]), relay.reshape(var_5113.astype('float32'), [539,]), ), 0)
func_3369_call = mod.get_global_var('func_3369')
func_3372_call = mutated_mod.get_global_var('func_3372')
const_5134 = relay.const(-9.993359, dtype = "float32")#candidate|5134|()|const|float32
const_5135 = relay.const([6.542289,-0.764711,9.668443,2.728419,-1.759407,6.271782,-4.050712,-5.079841,5.860884,-8.807143,0.872690,-9.259961,5.585178,5.903067,8.390182,-2.524452,-1.293826,8.383669,-6.520356,-9.483231,8.308502,-7.107594,4.977275,-0.022361,2.979969,-6.373058,-9.621552,8.761194,4.695076,-3.160873,-7.543963,9.763872,8.735253,-2.876426,4.581616,-8.941508,8.836964,-6.005709,-3.257238,0.952645,9.178843,-5.798141,4.921788,1.869746,-0.320661,3.798808,2.432150,8.042354,6.440932,-9.364137,-5.924379,4.012184,5.176776,-3.513355,4.495569,9.046020,7.995292,-4.417940,0.037750,4.827197,-3.370775,-3.107752,-4.413831,-8.994421,-3.440660,-7.198971,-6.155164,-5.573091,-2.304617,6.581139,-4.654129,-2.272776,-2.458696,-1.552321,1.119988,-4.922322,-9.647088,1.863518,-6.186200,-9.523782,-0.682317,-9.537670,0.692099,4.183828,2.655864,1.130260,5.937287,-5.529806,-6.021461,-2.426664,-7.404456,7.524494,9.497527,4.731507,9.564838,-1.570840,4.879927,-6.803938,1.147422,-6.472523,-7.552857,1.617202,0.461103,1.366686,-2.116024,7.664417,-1.476782,-2.837800,5.111448,-4.124666,8.419898,0.233436,8.126336,3.325680,4.088919,8.412627,5.493585,0.197331,-4.028274,3.308596,-1.207981,-1.361100,2.936454,2.428058,-4.526810,0.307076,-4.688294,-1.823016,-9.723498,3.773806,9.073274,6.373293,4.576286,-9.803244,-6.599627,-6.502777,-6.672437,8.097051,0.909155,5.964007,-4.427521,-3.451790,3.206272,-2.023295,-7.603984,3.047467,6.085430,0.269283,4.815571,-3.865071,4.620887,3.535590,0.133389,5.355774,8.984990,6.656876,-1.923069,-6.637042,-3.245846,9.563586,-0.034002,2.683448,-9.300952,-3.770415,-9.342210,8.782618,-6.438329,3.108870,9.895067,-0.950886,0.809205,1.020010,2.211850,7.600630,-2.266145,6.686746,3.983114,-6.411987,0.222060,-8.972262], dtype = "float32")#candidate|5135|(180,)|const|float32
call_5133 = relay.TupleGetItem(func_3369_call(relay.reshape(const_5134.astype('float32'), []), relay.reshape(const_5135.astype('float32'), [15, 2, 6]), ), 0)
call_5136 = relay.TupleGetItem(func_3372_call(relay.reshape(const_5134.astype('float32'), []), relay.reshape(const_5135.astype('float32'), [15, 2, 6]), ), 0)
output = relay.Tuple([bop_5047,bop_5061,call_5069,var_5070,call_5073,const_5074,var_5075,call_5111,var_5112,var_5113,call_5133,const_5134,const_5135,])
output2 = relay.Tuple([bop_5047,bop_5061,call_5071,var_5070,call_5076,const_5074,var_5075,call_5114,var_5112,var_5113,call_5136,const_5134,const_5135,])
func_5146 = relay.Function([var_5045,var_5070,var_5075,var_5112,var_5113,], output)
mod['func_5146'] = func_5146
mod = relay.transform.InferType()(mod)
var_5147 = relay.var("var_5147", dtype = "int32", shape = (14, 3, 9))#candidate|5147|(14, 3, 9)|var|int32
var_5148 = relay.var("var_5148", dtype = "uint32", shape = (960,))#candidate|5148|(960,)|var|uint32
var_5149 = relay.var("var_5149", dtype = "float32", shape = (154,))#candidate|5149|(154,)|var|float32
var_5150 = relay.var("var_5150", dtype = "float64", shape = (385,))#candidate|5150|(385,)|var|float64
var_5151 = relay.var("var_5151", dtype = "float32", shape = (539,))#candidate|5151|(539,)|var|float32
output = func_5146(var_5147,var_5148,var_5149,var_5150,var_5151,)
func_5152 = relay.Function([var_5147,var_5148,var_5149,var_5150,var_5151,], output)
mutated_mod['func_5152'] = func_5152
mutated_mod = relay.transform.InferType()(mutated_mod)
const_5335 = relay.const([[[10,-6,-2,5,2,-1,-3,-6,8,-1,-8,-8,-1],[-3,4,4,6,8,-4,1,3,5,-1,-4,-9,-6],[1,-1,10,5,-9,-10,10,4,1,1,7,1,-9],[7,-10,-4,-8,-3,10,-4,6,8,4,-3,-9,-10],[-2,-4,-5,-8,7,8,-8,4,1,-9,-2,7,8],[10,4,-4,10,-5,1,4,7,3,-4,-3,7,-4],[-6,-6,8,-2,7,-7,5,3,-9,-6,-8,-10,-8],[-7,-5,-5,-9,7,-8,-2,-6,1,2,1,-3,-6],[8,5,-10,-2,-3,-6,-7,-2,2,9,2,1,-5],[5,-1,-9,8,-6,6,5,-4,-4,4,7,1,-7],[-5,-6,3,6,-4,-3,-1,-3,7,-8,9,-4,-7],[10,-7,10,-5,10,-10,2,-5,8,-3,5,-1,3],[-5,2,7,10,10,8,8,5,-6,2,1,-9,3],[4,-9,3,-5,-5,-10,8,5,-5,-4,1,-7,-3],[-4,-3,-8,-2,-6,-10,1,-3,10,-1,7,-10,-8]],[[3,3,-4,-2,-8,5,-7,5,4,-3,-9,10,2],[7,10,-2,-9,-3,-3,-9,5,-1,7,-10,-3,7],[9,-1,-5,-2,4,-10,-8,5,7,-2,-9,5,-8],[4,9,3,-9,1,-3,-2,5,-9,4,6,-7,4],[-3,2,3,3,9,1,10,-5,3,7,7,2,-9],[5,-9,4,5,1,3,-1,10,2,4,-3,3,6],[8,-5,8,-7,-6,-7,8,-10,-4,5,3,-5,5],[3,-10,1,-10,-8,-6,-5,7,-7,2,8,-8,-1],[10,-7,6,6,10,-7,-6,9,10,-8,8,2,3],[-7,2,-2,-5,-9,9,-10,-7,-1,10,6,-6,6],[2,-5,5,5,-9,10,-6,-7,-8,-5,-4,9,6],[5,-2,5,9,8,-1,1,-4,4,-4,6,-9,-7],[5,6,-3,-5,-4,-8,10,4,1,-1,-8,4,7],[-4,-10,9,6,9,8,4,-4,-2,-8,-8,-6,3],[-6,-6,8,-9,-10,4,-6,7,8,-6,4,9,-6]],[[3,7,-6,5,-6,-3,-1,-5,-10,9,5,-1,-10],[-8,-6,-7,8,5,7,-9,2,9,-4,-8,5,4],[-5,-10,-9,-7,5,-4,-9,9,10,2,10,7,8],[-10,5,5,-10,-6,-5,6,8,-5,2,5,-3,-5],[-8,9,-10,-1,7,-4,10,8,2,7,5,-8,-9],[-8,-8,7,7,-4,-7,9,-10,10,2,7,-1,5],[8,2,6,2,-5,2,5,7,2,5,-1,-3,-3],[9,5,-10,7,2,2,-7,-3,8,-6,3,3,9],[-2,-4,-1,1,-7,2,-10,7,-10,-8,-5,2,-1],[9,-4,-7,9,3,6,-9,-4,-9,5,8,-2,10],[-5,1,9,2,-8,-10,-10,-8,-7,-1,6,-5,6],[8,-10,-7,1,2,10,1,-1,-5,-4,-9,-8,9],[-10,6,-8,8,-3,4,5,-1,-10,-2,-5,-3,-10],[7,-5,-3,-1,-5,-5,8,7,9,-9,-6,-7,9],[-7,-9,9,6,-4,-2,-10,-5,-7,-3,6,8,-6]],[[-4,5,3,8,-9,-9,2,6,10,1,10,-2,-2],[-5,-6,5,4,-5,-1,8,-1,-7,-2,-9,8,10],[5,1,10,10,-8,6,-4,-8,4,-9,5,-10,-10],[1,-6,-3,3,-10,1,9,-4,9,5,-7,5,6],[3,-7,4,8,-1,2,-7,6,-4,-7,-1,-8,-6],[-9,-10,-9,10,5,-7,5,8,-1,2,2,4,2],[-6,6,-5,10,-10,10,8,6,-2,1,-8,2,-2],[4,6,3,-8,3,-6,3,-6,5,-2,-9,-2,2],[-5,-10,3,-2,3,10,-6,7,9,-7,-4,-1,3],[-1,-2,-7,-9,3,2,-8,3,-8,-2,1,6,-6],[-2,9,7,-2,-10,8,-7,-1,8,-8,7,2,-3],[-1,-2,-1,6,-10,7,3,-3,7,2,3,-7,-3],[-6,-6,-7,-8,-7,-3,-7,7,-7,1,3,-1,8],[-7,6,-3,-4,-1,-7,-1,-6,-9,-9,8,9,7],[-9,-7,4,-4,-5,-3,6,-1,3,-9,-8,5,-5]],[[5,-2,5,1,-10,7,7,3,-2,-6,-5,-5,-9],[3,2,6,-3,10,-2,2,-7,-10,-3,-8,3,8],[-2,-4,-7,8,-6,-7,-5,-9,-9,10,3,2,-2],[-1,-4,-3,-3,1,6,1,4,-5,4,-5,-6,-9],[-3,-5,1,10,-6,-4,-1,-10,2,1,9,4,-9],[-6,-2,-3,8,-9,-3,-6,3,-9,5,-3,3,5],[-9,7,8,2,10,4,-3,-9,-4,-7,-5,3,-10],[-6,-8,4,10,5,7,-7,-5,7,5,-6,10,-6],[-2,4,-5,4,1,-3,1,8,-7,9,5,-2,1],[-9,-3,-6,6,-6,10,4,-10,-4,-5,1,5,-6],[5,1,5,-6,9,-1,4,5,9,-9,8,-10,-4],[-7,-10,-1,10,-10,4,-1,-2,7,2,-3,-3,10],[6,6,-2,10,5,-6,5,-10,-5,-3,3,-4,4],[-8,10,10,-9,-5,-9,-2,8,1,-5,4,10,-9],[-9,-10,10,10,7,5,8,4,7,-4,-5,10,-6]],[[1,2,-2,3,-4,1,5,5,1,-4,-1,-2,-5],[1,-6,2,4,-9,4,10,7,3,-7,-3,-10,-7],[7,-5,6,-10,5,-2,-5,-7,1,9,7,9,8],[6,1,10,-1,-2,3,9,-3,6,10,-9,9,10],[-9,1,4,-7,9,3,-2,-6,7,2,-6,8,-10],[-10,4,-4,-2,-10,2,-1,7,-10,-7,6,2,3],[-4,8,5,-2,8,2,1,-6,3,4,1,1,-10],[1,-4,-2,3,-2,-7,-9,-10,-7,-7,6,10,10],[-5,9,-9,-9,-5,9,2,8,6,6,-2,-9,-8],[9,-4,-9,-1,6,1,10,8,-5,1,-10,3,-2],[-1,-4,-7,-6,1,2,6,-1,-1,6,-2,-10,6],[-9,7,6,4,6,-2,-2,8,6,-2,-4,7,4],[10,-2,5,-5,-5,-10,-8,2,-9,-4,10,2,6],[5,-7,-3,-5,1,-8,-2,-5,4,1,5,10,-6],[9,2,-5,7,8,-6,6,-2,-4,-9,-9,6,9]],[[-7,-1,1,10,-3,2,8,3,2,-3,-6,-9,8],[8,-5,7,7,-4,8,-2,2,5,6,3,-9,-2],[-3,-10,10,-7,6,-8,2,3,-9,-2,-1,-10,7],[4,-10,-1,-1,6,-10,8,-6,10,10,9,8,-10],[-10,-5,6,3,8,-10,4,10,-10,-1,-7,-6,4],[-6,-9,-3,-1,-6,-10,2,4,8,-10,3,9,10],[-6,-2,-4,-7,9,1,-8,4,7,-9,9,-8,-8],[-1,-6,-2,7,-7,4,-1,-1,10,1,-1,-9,-9],[8,7,2,-2,7,3,7,5,3,4,-10,7,-8],[10,-9,-8,-10,-2,1,1,7,3,5,9,4,1],[-8,3,-7,3,-4,2,6,-6,-9,6,-10,-3,-7],[-2,4,4,4,-7,-2,8,1,-2,5,3,-5,-1],[2,-2,4,9,-9,-9,-2,-5,-7,4,2,-5,4],[-10,-1,-5,-5,-1,1,7,4,-3,2,-3,-1,-7],[3,-10,3,7,3,6,-9,4,-6,-9,9,-9,2]],[[-2,-10,-5,-2,-3,9,9,-2,-7,-2,10,-4,-10],[-1,-5,-2,-5,5,-9,-7,2,-2,7,5,-4,6],[7,-5,4,8,8,-4,4,4,-6,6,8,-10,2],[8,-2,-2,-4,-6,2,8,5,4,3,3,-1,-9],[4,4,7,-4,4,-10,4,7,-1,7,-6,3,10],[-1,4,-2,1,8,7,7,-9,-10,-4,-10,-3,-8],[9,8,-9,2,1,6,1,-10,-6,-10,5,-2,8],[-1,-1,9,2,3,8,-7,-1,-1,-4,9,-9,7],[-8,2,-10,-6,-1,5,2,-5,3,-1,4,5,4],[-10,-10,6,5,-5,-10,10,-5,5,10,10,-3,-6],[-3,-4,4,2,10,-3,8,2,8,-9,4,10,7],[7,-9,6,-5,-10,4,-2,-2,1,-2,7,-4,3],[-2,4,-3,9,6,-5,-8,8,7,-6,7,-8,-10],[-1,1,4,8,-5,9,-2,-1,-5,-4,-1,-5,1],[-6,-10,-3,-3,-6,-10,-5,5,10,10,-8,10,-8]],[[-2,-10,2,1,-6,-5,-9,-6,-5,-3,-6,2,4],[-10,10,7,-10,7,7,-8,-10,-2,5,-7,2,3],[-3,-5,-4,3,-3,-8,-9,9,-2,-9,-1,3,-10],[8,-8,-9,7,10,-8,-5,-3,-8,-9,2,-5,6],[-3,-1,7,4,-10,8,6,-7,1,7,-7,10,-1],[7,-3,-1,-2,-7,10,6,-6,-7,4,-7,10,-1],[-9,2,1,-6,-4,9,9,-5,-9,1,7,10,-4],[8,-2,-10,10,-1,-5,5,5,-5,4,-3,3,10],[4,3,6,-3,-8,9,8,9,8,3,2,6,-8],[-8,-5,-10,8,-6,-5,-5,3,-1,6,2,-7,-7],[-3,-4,-4,-1,-3,-5,-6,-7,9,4,-6,10,-6],[-5,-9,2,5,-2,-10,-5,6,6,-2,-3,-7,-2],[-1,-6,-7,1,-3,-8,1,-9,-3,-4,6,-2,-2],[-9,1,3,-8,-8,10,-2,4,-3,-10,-6,7,-3],[-9,-1,-10,-2,-6,3,-4,8,2,-6,10,9,-10]]], dtype = "uint16")#candidate|5335|(9, 15, 13)|const|uint16
var_5336 = relay.var("var_5336", dtype = "uint16", shape = (9, 15, 13))#candidate|5336|(9, 15, 13)|var|uint16
bop_5337 = relay.minimum(const_5335.astype('uint16'), relay.reshape(var_5336.astype('uint16'), relay.shape_of(const_5335))) # shape=(9, 15, 13)
output = bop_5337
output2 = bop_5337
func_5345 = relay.Function([var_5336,], output)
mod['func_5345'] = func_5345
mod = relay.transform.InferType()(mod)
var_5346 = relay.var("var_5346", dtype = "uint16", shape = (9, 15, 13))#candidate|5346|(9, 15, 13)|var|uint16
output = func_5345(var_5346)
func_5347 = relay.Function([var_5346], output)
mutated_mod['func_5347'] = func_5347
mutated_mod = relay.transform.InferType()(mutated_mod)
const_5561 = relay.const([[[-1,6,-2,6,10,-3,-2,7],[5,-4,8,-6,-1,-1,3,6],[2,1,8,4,-5,-3,7,-6],[5,-1,-10,-5,-7,-2,2,4]],[[2,8,5,10,-8,-7,-2,9],[7,-2,6,7,-6,6,9,-1],[-7,2,2,2,-4,-7,5,4],[6,8,5,-5,-8,-10,1,9]],[[2,-10,5,4,-2,-6,5,-9],[-9,-2,4,-7,10,-9,-9,-1],[-2,-5,4,6,8,-2,-3,-5],[10,7,7,-8,1,10,-8,1]],[[1,-6,-5,10,4,6,5,-2],[-9,10,-4,4,6,5,6,-5],[-4,-1,-3,10,-5,7,-10,-4],[7,-8,2,6,6,3,9,-1]],[[9,10,5,1,8,9,-6,-8],[6,-4,8,8,3,-7,1,3],[-10,-4,-5,-4,-1,-3,-5,-10],[9,-7,5,-2,-9,1,9,-10]],[[7,3,-6,-4,-9,4,10,-2],[9,5,-7,2,-7,3,-7,2],[-6,-5,-3,1,-8,5,10,-6],[-9,3,-7,1,8,-8,9,-8]]], dtype = "int32")#candidate|5561|(6, 4, 8)|const|int32
var_5562 = relay.var("var_5562", dtype = "int32", shape = (6, 4, 8))#candidate|5562|(6, 4, 8)|var|int32
bop_5563 = relay.bitwise_and(const_5561.astype('int32'), relay.reshape(var_5562.astype('int32'), relay.shape_of(const_5561))) # shape=(6, 4, 8)
output = relay.Tuple([bop_5563,])
output2 = relay.Tuple([bop_5563,])
func_5567 = relay.Function([var_5562,], output)
mod['func_5567'] = func_5567
mod = relay.transform.InferType()(mod)
var_5568 = relay.var("var_5568", dtype = "int32", shape = (6, 4, 8))#candidate|5568|(6, 4, 8)|var|int32
output = func_5567(var_5568)
func_5569 = relay.Function([var_5568], output)
mutated_mod['func_5569'] = func_5569
mutated_mod = relay.transform.InferType()(mutated_mod)
var_6279 = relay.var("var_6279", dtype = "uint32", shape = (4, 5, 13))#candidate|6279|(4, 5, 13)|var|uint32
var_6280 = relay.var("var_6280", dtype = "uint32", shape = (4, 5, 13))#candidate|6280|(4, 5, 13)|var|uint32
bop_6281 = relay.minimum(var_6279.astype('uint32'), relay.reshape(var_6280.astype('uint32'), relay.shape_of(var_6279))) # shape=(4, 5, 13)
func_4589_call = mod.get_global_var('func_4589')
func_4593_call = mutated_mod.get_global_var('func_4593')
var_6291 = relay.var("var_6291", dtype = "uint32", shape = (60, 16))#candidate|6291|(60, 16)|var|uint32
call_6290 = relay.TupleGetItem(func_4589_call(relay.reshape(var_6291.astype('uint32'), [12, 5, 16]), relay.reshape(var_6291.astype('uint32'), [12, 5, 16]), ), 0)
call_6292 = relay.TupleGetItem(func_4593_call(relay.reshape(var_6291.astype('uint32'), [12, 5, 16]), relay.reshape(var_6291.astype('uint32'), [12, 5, 16]), ), 0)
output = relay.Tuple([bop_6281,call_6290,var_6291,])
output2 = relay.Tuple([bop_6281,call_6292,var_6291,])
func_6294 = relay.Function([var_6279,var_6280,var_6291,], output)
mod['func_6294'] = func_6294
mod = relay.transform.InferType()(mod)
var_6295 = relay.var("var_6295", dtype = "uint32", shape = (4, 5, 13))#candidate|6295|(4, 5, 13)|var|uint32
var_6296 = relay.var("var_6296", dtype = "uint32", shape = (4, 5, 13))#candidate|6296|(4, 5, 13)|var|uint32
var_6297 = relay.var("var_6297", dtype = "uint32", shape = (60, 16))#candidate|6297|(60, 16)|var|uint32
output = func_6294(var_6295,var_6296,var_6297,)
func_6298 = relay.Function([var_6295,var_6296,var_6297,], output)
mutated_mod['func_6298'] = func_6298
mutated_mod = relay.transform.InferType()(mutated_mod)
const_6345 = relay.const([[[-2.733346,-4.805714,9.829325,-3.534023],[-2.222687,0.126879,9.195727,0.755177],[6.780199,8.369797,9.653560,8.116427],[0.852027,-8.576142,2.353565,1.122353],[2.231587,-1.718854,-5.343473,-8.501279],[-1.389177,-4.820202,6.341525,2.669353],[-2.436560,0.967171,-9.656621,8.394637],[-8.927911,-9.638218,5.932488,-0.196172]],[[3.138093,3.800321,3.710010,8.193383],[9.637753,8.326848,7.565158,0.976854],[2.366957,-8.259365,6.813679,5.372756],[6.569310,-9.725940,3.991134,-7.468268],[7.166411,-3.960913,2.221757,-3.584975],[9.570493,1.990837,-6.026770,-5.613156],[-6.685392,-3.376833,-9.913572,0.432572],[8.144029,-3.923943,-3.574005,6.118170]],[[-1.722859,-4.911824,6.452592,1.086545],[-0.322466,-6.502833,2.902156,3.810463],[3.063997,-8.326936,4.615662,9.477769],[7.910396,-5.805152,-6.115145,8.102052],[2.968929,-3.617328,-3.307184,-5.814631],[7.011610,-3.577861,2.696487,-6.548769],[9.605707,5.712375,-4.159655,3.095117],[-5.770849,-8.589138,7.894588,-0.185641]],[[0.942116,-3.879760,-7.563983,6.001221],[0.272097,-3.472902,8.673546,0.334238],[5.587936,1.336117,6.579480,4.207073],[-2.579660,4.633569,7.178110,0.171506],[-8.706180,7.497808,-3.995581,-7.801475],[-8.296130,-5.501039,0.524992,-7.279053],[-8.723169,0.188578,-5.925430,-4.966396],[-1.496892,-4.503518,9.604462,-3.652687]],[[2.008857,-9.683564,-0.892883,6.449986],[2.495093,-1.722886,1.991764,-9.255171],[0.439116,-4.773257,-3.205709,-0.239341],[-2.833983,1.103517,-4.709305,6.818302],[5.069723,9.790727,0.187939,-1.402469],[6.965798,9.724928,4.479964,-1.528054],[2.697756,-3.350780,3.868812,-7.685423],[9.310315,4.997292,-5.414035,-9.085598]],[[-1.435273,3.447611,-4.682436,9.892227],[0.955893,7.967936,-9.397476,3.423134],[-9.255826,6.542960,-4.881245,0.855334],[3.400785,-8.241664,4.525590,7.230655],[-9.024510,1.680716,-8.462138,-1.614686],[-4.159221,-4.706635,-1.402330,-6.475940],[7.889147,-0.260565,-1.666969,-8.049012],[4.120088,7.398490,6.152050,-9.285163]],[[0.301222,-6.082550,-7.583435,8.738112],[-1.297250,7.013373,9.478427,5.391495],[-0.798531,7.257716,2.803152,-7.220222],[-4.412347,-6.243920,6.045510,2.791452],[-4.028397,-8.063234,3.750885,9.698281],[-4.058152,-2.906584,2.569940,-7.761802],[1.849598,-1.520285,4.312710,6.136234],[-7.438981,2.199441,9.983236,-1.945613]],[[5.298599,-2.656364,5.452550,-1.656139],[6.446838,3.928948,9.237954,-8.168547],[9.829950,5.799995,1.802414,-9.546996],[-5.709500,6.396920,6.973895,-5.896899],[0.963797,5.820686,-8.605554,-0.293221],[-9.450335,-9.201608,9.089640,-3.289288],[3.932339,-9.368322,9.040500,-8.105874],[-2.206721,9.667630,-5.893385,-8.240012]],[[-6.995892,-5.601601,-3.653677,-9.669109],[-2.973629,-1.387594,6.455759,9.898611],[-6.091483,-5.348483,-9.130113,-8.264638],[-2.500808,-6.780511,2.737990,-1.132742],[-4.977709,-4.647558,0.251088,3.435363],[-5.095677,-3.994347,3.384728,-4.541566],[4.805800,4.613635,-2.073796,-6.311037],[0.912843,2.266976,-6.159458,-8.030761]],[[-6.779553,3.645341,-1.897679,5.954380],[-6.604553,-7.985014,6.425837,3.781857],[3.199388,2.044390,-1.535912,5.173210],[-3.728408,-1.913826,-6.102989,-2.069097],[-2.428595,7.129281,-7.777675,1.602889],[-3.769639,-2.001460,-2.612724,-5.137042],[-2.546396,7.090957,4.986958,-5.853918],[2.220198,-3.915794,-1.853671,-1.754897]],[[-1.274443,0.186686,7.535225,2.990084],[-4.980403,3.477529,-6.483295,6.821332],[7.033821,1.445923,3.079574,8.305380],[6.094436,-3.921599,-2.925717,-5.630905],[-1.916031,1.174001,-1.028224,9.145740],[8.282156,6.386562,-4.239844,-6.266327],[-2.434619,3.022648,-5.599545,-7.245569],[-3.564215,5.152472,-7.291054,-3.859910]],[[3.014224,-0.921036,-4.161524,-5.734887],[-2.169608,6.410648,-8.549439,2.378366],[-3.460585,-3.545036,9.071192,-7.207425],[-5.324686,-3.341395,9.243017,2.774255],[-3.036441,-9.402830,-6.318923,-2.026832],[-0.011999,1.719568,-4.627391,2.245449],[9.758746,3.454575,2.153225,6.266797],[5.114977,-8.776047,-0.033136,3.914143]],[[9.712084,6.871461,-0.201495,-0.083945],[-8.624671,-1.181447,-0.294440,1.538926],[9.539994,-5.439423,-8.264636,-7.196819],[5.358773,-5.294047,6.246929,6.770512],[3.107709,-9.840128,-7.264431,-7.511920],[-9.357010,2.449522,2.761145,4.643038],[2.452799,0.344394,3.522668,8.233982],[-1.653999,-0.279188,5.798972,-1.846267]],[[-4.476258,3.179440,4.418248,2.931472],[-0.094930,5.487595,3.547990,-6.875908],[-0.977518,-2.868518,-2.008338,5.548841],[8.510001,-7.138589,8.530375,5.811788],[7.996701,-5.065448,9.733477,-6.181912],[1.902005,2.195711,-5.030857,7.410783],[4.548942,-4.922148,-9.061519,-7.246567],[1.010233,-5.257479,0.670900,6.913639]],[[-2.607207,2.739163,4.408812,1.124178],[4.774807,-0.311580,3.260305,0.042687],[1.074629,-5.003410,2.744648,-0.148282],[0.880511,6.584512,-5.839267,5.435443],[-6.283748,-4.673179,-3.044253,-2.936416],[-5.144469,-5.173927,9.971783,-1.866693],[8.796911,-4.280214,7.706425,-4.021756],[2.836187,7.746464,-5.830539,7.881963]],[[-7.442833,-0.427909,4.857096,-0.516259],[1.580520,0.599228,-8.706199,-0.274677],[-1.115873,-1.370361,7.261414,-5.589389],[-0.687342,-0.299344,-7.180239,-0.833440],[-3.818827,-5.139871,2.938455,9.505113],[3.423802,0.391861,0.800019,2.240957],[-2.923222,8.933740,-7.398729,0.472350],[-5.163913,2.012185,0.867351,7.782353]]], dtype = "float64")#candidate|6345|(16, 8, 4)|const|float64
uop_6346 = relay.erf(const_6345.astype('float64')) # shape=(16, 8, 4)
var_6350 = relay.var("var_6350", dtype = "float64", shape = (16, 8, 4))#candidate|6350|(16, 8, 4)|var|float64
bop_6351 = relay.subtract(uop_6346.astype('uint8'), relay.reshape(var_6350.astype('uint8'), relay.shape_of(uop_6346))) # shape=(16, 8, 4)
func_1917_call = mod.get_global_var('func_1917')
func_1921_call = mutated_mod.get_global_var('func_1921')
const_6373 = relay.const([0.273098,-5.458943,6.710936,-8.295661,-7.515094,7.508581,-3.377701,-8.648405,4.631526,-8.311878,6.443121,-2.816256,4.998462,6.412625,9.479615,-2.009777,-9.001521,-7.118533,-4.604791,-6.557380,-1.857398,-4.394860,3.944656,6.428197,-1.213681,-6.059138,-3.988172,7.012954,1.166491,-0.408943,-0.817960,4.724347,0.840544,8.934119,-6.443034,-8.940882,9.733621,7.504912,-7.562869,5.777139,-5.517108,-9.254857,-7.768456,5.311404,-4.374756,6.484607,-8.743841,-5.069301,-5.252700,0.953755,6.211671,1.183656,-6.000020,9.584223,8.792993,-2.397474,-3.719132,-4.790104,-4.356367,5.347751,8.107821,2.035835,5.997319,-5.365146,3.699877,8.289898,9.872637,2.357682,1.398501,-6.466344,-3.696927,5.308620,-4.808509,5.415441,0.360652,5.358158,0.414061,-2.625540,-3.658041,0.203405,4.314175,8.471493,6.399568,-5.217369,5.014806,-7.104117,5.543299,3.234238,0.982576,-8.080374,1.023183,-7.243546,6.222826,8.787772,1.499291,2.365200,4.459481,4.714797,-2.692089,-5.262694,1.592935,8.571956,-8.251099,-7.090237,6.748549,-4.591678,-0.304258,-4.202647,8.670293,-7.597911,-2.199078,6.072901,-9.349753,-5.363433,6.192445,-6.266311,7.359354,1.693750,-8.088319,-9.409790,9.129437,-0.959229,0.309834,6.470740,9.270591,3.086268,1.347654,4.751061,6.512479,-4.008009,-4.352166,7.031483,-9.890132,6.072995,-1.412962,3.741584,-5.785626,-1.768390,-3.628931,9.054483,8.599974,9.788491,3.230491,-7.140813,-9.873777,0.027023,5.101118,8.330719,-4.579012,8.879189,-5.677004,-1.607797,-6.703600,-2.091305,-2.314946,-7.721547,-7.442765,-7.617890,6.857929,-1.372429,-6.931142,-3.072380,7.617085,7.929279,4.875561,-7.974806,5.557942,-3.775796,7.054471,-8.074211,-8.176706,6.004978,-2.735023,0.025791,-2.182687,-8.039979,9.404536,5.659827,-4.790937,-5.197645,6.728345,6.646614,6.938912,-4.080906,-0.241370,-6.470484,-2.791593,6.555574,-2.258380,-5.107397,-5.882314,9.372085,0.788675,-1.988496,6.646569,8.380857,-6.750679,-5.481252,8.048615,-7.212895,1.435257,-2.992219,0.506024,4.151270,-3.780985,-4.530121,-4.390262,1.424552,-7.747484,9.424242,-3.858655,-1.475220,8.790974,0.615159,-6.433164,-3.622686,-8.066626,4.137755,-7.739919,0.221605,-0.283350,1.351386,4.177847,-4.078319,8.807963,-4.320965,2.069272,-3.209814,7.277179,0.604856,5.337572,1.582996,-0.699538,6.692203,7.788109,-7.821202,0.144626,-3.228303,-1.312885,-4.222766,-7.647923,9.371770,-4.298790,-7.411050,0.650134,7.224070,0.576350,5.162219,2.199661,-4.149397,0.183329,-0.291770,4.858125,-3.336666,9.723860,6.742641,8.796768,0.954181,-8.907318,1.736314,5.870452,-0.679123,6.630645,6.917531,1.720994,-0.136416,-6.414313,6.070661,4.650755,2.594356,-0.546335,7.298226,0.995369,9.184274,-6.594517,-7.190137,0.738222,0.864112,-1.633365,8.638835,-3.592986,-7.315355,-6.033750,-5.982707,9.428759,1.915653,-0.934911,8.259444,3.927048,4.950922,6.029065,-9.098637,7.339091,-0.092244,-0.745988,5.866124,8.142103,2.054066,2.279643,1.177060,3.108055,-6.784173,6.643483,6.422689,9.808565,9.394179,-6.606854,4.795473,0.980827,2.162300,-1.224640,-2.711365,4.496208,2.767609,-2.827888,6.594710,0.361421,2.198593,-1.322258,-6.567189,-9.592722,-6.841150,9.045304,-7.817386,6.274347,-4.412353,-8.742259,7.810823,-1.543389,-0.686613,-5.562990,-3.026250,8.618579,-8.564279,-0.966685,6.577515,-2.894944,-4.362311,-2.833932,-1.640058,-2.701699,0.348344,-9.882206,-6.128486,4.401217,0.618393,4.759433,-9.119003,1.037714,-5.263269,8.291868,-8.703879,6.581567,8.239195,1.935523,-3.435629,-1.926252,-5.402646,-9.674531,3.919636,5.777590,9.702162,-0.381306,-6.506898,9.637499,9.310579,-0.573641,-6.365728,-7.900661,5.709615,-7.610450,-4.519569,5.376482,4.080310,2.144937,-8.531104,0.798677,6.814437,5.407371,9.930272,-1.271947,5.240072,6.635030,8.331379,3.076769,0.985277,-2.716691,-8.751066,6.486981,9.847643,-4.361230,1.217216,-4.907358,0.104924,-1.342341,-2.435549,5.489060,-7.567465,8.823960,5.140010,-6.534955,-1.718347,-1.516874,9.079396,-7.744752,-4.775696,-1.588626,-5.794683,7.574925,-5.931037,8.662903,-4.538239,-3.484338,7.140059,-1.453277,-9.515396,9.259713,2.139742,3.858988,7.940370,-6.192889,-8.829147,-8.436114,3.670649,-4.182107,7.684483,-7.810037,-1.752820,-5.750895,-4.883842,-9.537522,-3.669934,-2.412438,6.240000,-8.174547,4.178164,0.082993,1.526067,9.035376,0.629200,-4.650529,2.337365,-2.773727,6.903704,1.968522,-4.864871,-1.500320,3.133904,-7.620387,-7.518324,-1.378133,4.772708,2.554595,4.103086,7.151083,-9.555517,6.748444,-6.613371,4.384308,5.827449,-8.823623,9.474674,-1.111703,5.664369,9.262747,6.067879,0.132717,8.224577,6.392188,7.827524,9.257554,-6.740996,0.715035,7.702354,-5.653757,1.286898,-0.564738,6.285470,-7.090781,3.240354,-4.241908,0.892522,-1.595966,-9.086934,9.965672,-9.293103,2.972903,3.694723,-9.057639,7.543377,8.493527,8.906137,1.225556,-0.970605,9.528408,-6.396290,-8.413288,8.966637,-1.587141,-7.331116,-4.141412,7.818844,1.720691,-0.382385,6.460691,-9.292331,5.211523,-6.772688,-0.988188,-0.263924,-9.543990,9.768922,-1.474587,2.727076,-3.089975,-1.812402,6.483316,-6.003280,-8.278235,-3.873575,4.730995,7.891988,-2.111260,5.075805,-5.641843,-7.543926,-9.592024,-5.822849,-6.979829,-7.708061,2.694046,7.009045,-0.062815,-8.294103,9.157180,-2.718180,5.645654,0.981798,6.450417,0.660904,-6.719222,-8.434227,6.305107,8.322766,7.173011,1.669864,-9.227580,8.464196,-8.234290,5.604799,-0.796795,-5.450457,3.185980,3.252784,1.502803,8.608821,-0.771463,-1.052687,-8.870931,4.673757], dtype = "float64")#candidate|6373|(560,)|const|float64
const_6374 = relay.const([-6.185375,-5.618043,8.500948,-3.112150,8.541795,-9.301890,-4.087689,7.884542,-6.620795,7.058836,8.292953,-8.279489,4.053997,6.164511,-8.327815,-6.584690,3.258454,-5.484044,-7.550627,-6.657078,9.005174,8.380593,-4.009630,5.774740,2.192268,1.050459,1.991982,-2.177034,3.701765,6.012237,5.743312,-4.294632,9.007860,-8.884650,1.534828,6.992833,8.224252,-4.224994,-9.323564,-3.448947,-0.307381,-4.584950,8.508524,-8.654879,-7.377277,6.192835,2.860789,-3.408149,-7.288731,9.868530,9.033914,-7.635778,1.452658,-6.257456,7.848373,8.235609,-5.833589,0.734054,-5.774935,-1.444934,9.829878,-6.888926,-6.309780,3.252556,4.698170,-9.324919,-4.156256,1.276256,-9.411439,5.426455,-8.590266,7.829418,-9.195724,8.380146,5.044219,5.428018,4.634966,5.059265,-0.325452,-1.101811,6.266377,-4.429956,1.569242,6.513265,8.561473,0.813779,6.274393,-5.890395,8.414316,-3.436183,5.411238,-0.218941,-9.516898,-2.500537,-6.792349,-4.675418,-6.979074,0.273200,0.356994,1.226150,8.920610,-6.365806,2.676551,-6.962132,-6.697520,7.722667,-5.914556,-9.729485,-5.427017,8.949506,6.313873,-2.605915,-2.836840,-4.463891,7.027219,-4.055195,-1.326066,3.459384,8.658506,3.227950,6.894057,-3.904699,-3.642765,-0.056221,6.853751,9.049856,3.028425,-9.694053,-9.559372,9.937225,-3.700559,-6.052671,7.044193,1.615962,-8.090633,-2.716625,7.037380,4.976630,-2.824451,-3.927045,-1.495060,-3.754889,-5.610752,5.615024,1.512178,-7.049231,8.978830,4.004386,-8.213339,8.494540,1.263480,-8.558542,-7.834323,-1.675845], dtype = "float32")#candidate|6374|(154,)|const|float32
call_6372 = relay.TupleGetItem(func_1917_call(relay.reshape(const_6373.astype('float64'), [16, 7, 5]), relay.reshape(const_6374.astype('float32'), [154,]), relay.reshape(const_6373.astype('float64'), [16, 7, 5]), ), 3)
call_6375 = relay.TupleGetItem(func_1921_call(relay.reshape(const_6373.astype('float64'), [16, 7, 5]), relay.reshape(const_6374.astype('float32'), [154,]), relay.reshape(const_6373.astype('float64'), [16, 7, 5]), ), 3)
output = relay.Tuple([bop_6351,call_6372,const_6373,const_6374,])
output2 = relay.Tuple([bop_6351,call_6375,const_6373,const_6374,])
func_6376 = relay.Function([var_6350,], output)
mod['func_6376'] = func_6376
mod = relay.transform.InferType()(mod)
var_6377 = relay.var("var_6377", dtype = "float64", shape = (16, 8, 4))#candidate|6377|(16, 8, 4)|var|float64
output = func_6376(var_6377)
func_6378 = relay.Function([var_6377], output)
mutated_mod['func_6378'] = func_6378
mutated_mod = relay.transform.InferType()(mutated_mod)
var_6458 = relay.var("var_6458", dtype = "float64", shape = (14, 5, 5))#candidate|6458|(14, 5, 5)|var|float64
var_6459 = relay.var("var_6459", dtype = "float64", shape = (14, 5, 5))#candidate|6459|(14, 5, 5)|var|float64
bop_6460 = relay.floor_divide(var_6458.astype('float64'), relay.reshape(var_6459.astype('float64'), relay.shape_of(var_6458))) # shape=(14, 5, 5)
output = bop_6460
output2 = bop_6460
func_6467 = relay.Function([var_6458,var_6459,], output)
mod['func_6467'] = func_6467
mod = relay.transform.InferType()(mod)
var_6468 = relay.var("var_6468", dtype = "float64", shape = (14, 5, 5))#candidate|6468|(14, 5, 5)|var|float64
var_6469 = relay.var("var_6469", dtype = "float64", shape = (14, 5, 5))#candidate|6469|(14, 5, 5)|var|float64
output = func_6467(var_6468,var_6469,)
func_6470 = relay.Function([var_6468,var_6469,], output)
mutated_mod['func_6470'] = func_6470
mutated_mod = relay.transform.InferType()(mutated_mod)
var_6589 = relay.var("var_6589", dtype = "int16", shape = ())#candidate|6589|()|var|int16
var_6590 = relay.var("var_6590", dtype = "int16", shape = (1, 9, 15))#candidate|6590|(1, 9, 15)|var|int16
bop_6591 = relay.bitwise_xor(var_6589.astype('int16'), var_6590.astype('int16')) # shape=(1, 9, 15)
func_5146_call = mod.get_global_var('func_5146')
func_5152_call = mutated_mod.get_global_var('func_5152')
var_6595 = relay.var("var_6595", dtype = "int32", shape = (378,))#candidate|6595|(378,)|var|int32
const_6596 = relay.const([[-8],[-4],[9],[4],[-8],[-1],[8],[-6],[10],[-3],[5],[6],[6],[-8],[-7],[5],[-5],[2],[8],[1],[-8],[6],[2],[-5],[7],[7],[-3],[5],[4],[8],[-6],[-7],[-9],[-3],[5],[-4],[10],[-9],[1],[5],[1],[9],[7],[-5],[-1],[-4],[-3],[8],[-10],[-10],[6],[-7],[3],[9],[7],[3],[7],[2],[-10],[-7],[-10],[-8],[4],[7],[-6],[10],[-3],[8],[-3],[2],[-10],[10],[9],[-5],[10],[7],[-5],[-5],[10],[2],[2],[-8],[8],[-3],[-3],[-3],[-3],[2],[6],[10],[1],[8],[-4],[-6],[6],[10],[1],[5],[2],[-2],[-6],[-9],[7],[-1],[-1],[9],[-8],[-10],[9],[-9],[-4],[-4],[-7],[-6],[-8],[5],[3],[-3],[3],[5],[4],[-6],[2],[-7],[1],[-7],[4],[-2],[2],[-9],[6],[4],[-6],[-2],[-10],[-5],[-3],[-9],[8],[-8],[-1],[-4],[8],[-4],[-3],[3],[-5],[-1],[-6],[9],[1],[2],[-4],[1],[-6],[-1],[-3],[10],[2],[-4],[-4],[-6],[-3],[-9],[-1],[-7],[-2],[-8],[-10],[10],[-5],[-3],[-5],[-2],[4],[4],[2],[-9],[7],[6],[-8],[-10],[-3],[-9],[-7],[-1],[8],[-3],[-4],[10],[10],[9],[3],[8],[6],[10],[6],[4],[-10],[4],[-10],[2],[-6],[2],[1],[-1],[-5],[-4],[6],[2],[4],[8],[4],[1],[3],[-1],[-10],[-2],[7],[8],[6],[-10],[10],[1],[4],[10],[5],[-1],[-9],[3],[8],[6],[9],[4],[-10],[6],[2],[6],[10],[9],[-3],[3],[6],[5],[6],[7],[3],[10],[9],[-10],[6],[6],[-3],[-1],[-2],[-6],[-9],[2],[-5],[-1],[6],[3],[-1],[-3],[-8],[-1],[10],[4],[2],[6],[-4],[-10],[3],[8],[-9],[-9],[7],[6],[6],[8],[2],[-8],[-7],[-8],[6],[4],[8],[4],[-5],[1],[3],[9],[-3],[-8],[4],[-1],[-7],[1],[-9],[-4],[6],[-6],[-1],[-8],[-5],[10],[-9],[8],[4],[1],[1],[-6],[-10],[2],[-9],[8],[-6],[10],[5],[6],[6],[-5],[-7],[-9],[8],[10],[-1],[-8],[5],[-4],[-8],[-8],[5],[4],[5],[-1],[7],[8],[-9],[-6],[-6],[-8],[5],[9],[8],[4],[6],[-2],[1],[2],[-5],[-7],[-8],[-6],[-3],[-6],[9],[7],[10],[5],[1],[-3],[3],[-9],[-1],[-10],[-5],[9],[-5],[4],[9],[6],[-6],[3],[-9],[3],[10],[-9],[3],[-7],[1],[3],[6],[1],[10],[9],[7],[-7],[-8],[-8],[-1],[-9],[1],[1],[-7],[10],[-8],[4],[-8],[-7],[-2],[6],[-2],[2],[-5],[9],[5],[4],[7],[10],[6],[10],[7],[-9],[-2],[-3],[-3],[-6],[4],[-6],[-10],[7],[-2],[-9],[-8],[1],[-3],[9],[-8],[4],[7],[4],[6],[6],[8],[1],[7],[-3],[-8],[-8],[-3],[2],[3],[-5],[2],[-10],[-7],[-8],[4],[5],[3],[10],[-3],[-9],[-5],[-9],[7],[6],[3],[-10],[3],[3],[-4],[-2],[-2],[-10],[10],[-5],[3],[6],[-2],[-8],[-4],[-10],[8],[-3],[9],[10],[6],[4],[7],[-5],[4],[-2],[7],[-4],[-2],[-7],[-7],[-5],[-6],[-5],[-6],[-10],[4],[-2],[-10],[10],[10],[-10],[1],[-5],[6],[-9],[-8],[9],[5],[-1],[-8],[-5],[7],[-5],[-8],[-8],[10],[-7],[-3],[4],[-4],[-4],[9],[6],[-7],[7],[8],[-10],[-3],[9],[-2],[2],[-8],[-3],[-9],[10],[-1],[-6],[8],[-4],[-9],[-2],[5],[1],[9],[-9],[-8],[4],[-10],[-6],[-5],[-2],[1],[-7],[-10],[-3],[4],[-3],[7],[8],[3],[-6],[-10],[6],[9],[-9],[-8],[-1],[7],[-7],[-8],[3],[6],[-10],[-1],[9],[-6],[6],[5],[-6],[-5],[9],[3],[2],[5],[-8],[-10],[5],[-8],[-8],[-3],[-2],[4],[-7],[-1],[-3],[5],[10],[3],[10],[3],[-1],[9],[-8],[-10],[8],[5],[-4],[-10],[-8],[-1],[7],[-7],[6],[9],[8],[-5],[5],[-4],[5],[-1],[-9],[4],[7],[-2],[7],[10],[-1],[-1],[4],[4],[1],[10],[5],[1],[2],[-2],[-2],[4],[-2],[-6],[2],[-3],[10],[-2],[3],[8],[-7],[-10],[-6],[4],[-4],[-9],[-3],[-6],[1],[-4],[-6],[10],[10],[-2],[-9],[-6],[3],[-3],[-8],[-7],[3],[9],[-2],[1],[-4],[8],[1],[-8],[1],[-3],[-4],[-9],[5],[-6],[-8],[3],[10],[7],[6],[-5],[4],[-2],[3],[-7],[2],[5],[9],[1],[-5],[-4],[1],[-4],[1],[10],[1],[10],[1],[2],[2],[8],[-1],[9],[6],[-1],[8],[-6],[7],[7],[3],[-7],[-7],[2],[9],[-1],[5],[-6],[-10],[-6],[5],[-7],[-7],[2],[-5],[1],[-10],[-4],[5],[4],[2],[-6],[3],[-5],[7],[1],[-1],[6],[3],[1],[9],[-8],[10],[8],[2],[1],[5],[2],[9],[3],[1],[7],[2],[9],[3],[5],[-1],[3],[-7],[-9],[10],[4],[7],[-5],[5],[4],[2],[7],[7],[1],[-7],[-2],[-9],[10],[-7],[-6],[8],[4],[6],[-4],[7],[-7],[9],[3],[2],[-6],[8],[7],[-4],[-7],[5],[7],[3],[-9],[-1],[10],[-10],[7],[2],[7],[-3],[5],[2],[3],[9],[6],[3],[-7],[7],[5],[-10],[-7],[1],[2],[-5],[-7],[4],[4],[-4],[-2],[6],[6],[3],[8],[-1],[9],[-8],[-2],[2],[2],[4],[8],[1],[-4],[10],[7],[5],[-7],[-1],[10],[8],[3],[-6],[4],[-10],[-7],[-8],[-2],[8],[4],[-3],[-6],[-6],[-9],[-8],[9],[8],[1],[-7],[-4],[-5],[-1],[6],[10],[9],[-4],[6],[-3],[4],[9],[10],[-9],[10],[-6],[9],[3],[-1],[-5],[-8],[-2],[10],[1],[9],[8],[5],[7],[-3],[-6],[8],[-1],[-2],[-9],[1],[-1],[-10],[7],[-1],[7],[2],[3],[-5],[3],[-5],[-3],[2],[10],[-8],[-8],[-4],[7],[-2],[-7],[5],[-2],[1],[4],[-6],[-4],[-9],[5],[-10],[-7],[5],[-5],[-4],[4],[-1],[10],[-7],[2],[-8],[6],[5],[-4],[-6],[6],[-6],[-4],[10],[-10],[4],[-4],[-5],[2],[7],[-1],[-2],[8],[6],[2],[2],[10],[4],[-9],[-3],[-3],[-2]], dtype = "uint32")#candidate|6596|(960, 1)|const|uint32
const_6597 = relay.const([[-5.798045,-3.031374,1.352371,8.326336,3.401903,-0.682711,-9.832512],[-0.334964,2.729257,-5.590934,-9.820787,6.091600,1.266326,-4.382792],[4.576939,8.687641,8.530550,6.344621,5.908036,-6.610733,9.780708],[-0.830731,-4.965466,-1.269678,-3.212370,-4.166275,-8.053663,8.126353],[-2.449014,4.650963,-6.567138,-7.236899,2.133010,-3.296550,-5.925533],[5.765317,-1.400815,8.551003,-0.587965,-2.117386,9.091359,9.532719],[2.714938,8.352859,7.010942,2.589681,-7.548573,0.301505,9.778773],[-4.277301,-4.191011,-0.516643,0.146865,-4.497247,9.406543,-9.472289],[8.977054,-6.810131,-0.903034,-9.735385,6.364034,2.395118,2.798470],[6.148425,6.932583,-6.080350,2.268993,-9.462610,4.240153,-5.861037],[2.301081,5.486150,4.998672,3.479440,0.142865,6.817848,9.727508],[-6.252745,4.803195,-2.160981,2.429773,2.270119,7.512333,8.784554],[-5.033914,9.507134,-7.817418,-9.023149,4.790167,-4.658765,0.227632],[4.260450,-8.551031,-1.714435,0.999442,-3.811113,0.209912,3.052218],[0.674351,1.155070,-2.790517,-1.678697,6.568085,-4.419761,-0.839247],[-6.073806,-6.154440,3.683440,9.521543,9.102553,-1.983397,-9.329759],[8.954468,-2.414937,-2.725724,-0.768455,-3.781858,-7.302610,7.923630],[-7.908762,7.982352,6.835645,-5.051918,-3.505273,-9.987999,-1.508857],[-4.954748,8.199731,-5.880550,-9.415835,6.959537,-0.664413,0.698429],[-7.904439,3.484148,8.452387,5.897036,2.083793,3.982070,6.810888],[7.082134,-0.648044,-2.122664,4.492101,2.015902,-6.797642,-8.529464],[-6.485224,4.855181,-7.677253,-0.708535,9.597960,-4.089575,8.548488]], dtype = "float32")#candidate|6597|(22, 7)|const|float32
var_6598 = relay.var("var_6598", dtype = "float64", shape = (55, 7))#candidate|6598|(55, 7)|var|float64
const_6599 = relay.const([-0.991405,8.470755,-8.099304,6.911183,2.363850,7.384947,-8.294401,4.239894,6.866507,-7.306438,1.635918,-2.222267,-1.293813,-9.509909,0.068704,-1.317553,-8.815274,-2.205174,9.377446,-9.587808,-2.013993,-2.091572,3.321541,-9.831055,8.277152,5.721323,-7.774415,-1.202773,2.160147,-0.309992,3.485893,0.435800,-4.565960,3.643285,9.128608,6.656520,9.862757,-5.112004,6.825456,-2.015880,8.282805,-5.368773,4.020969,-7.537449,9.208794,3.723659,4.380791,2.728571,7.523814,1.952945,-4.947693,-6.600074,-8.555174,-0.216976,-5.681940,4.505691,-3.261633,8.278374,-1.521935,8.447290,-8.360308,0.995088,5.668994,-6.178913,1.777961,9.609616,-6.732445,1.870944,9.982132,-1.908568,-4.765006,5.708774,2.357416,-6.958601,4.276539,-2.227784,8.911773,6.585088,-9.378232,7.123520,-2.945704,0.045197,-0.036354,6.318234,-3.521478,4.860041,5.532468,9.801132,5.656925,4.957544,6.089163,7.603070,8.316749,9.669920,-4.974861,0.026637,-9.753780,0.387272,1.578822,-8.313344,-1.209404,4.855164,-4.527591,9.682349,-0.663354,-5.337254,-0.828822,-1.650707,8.054581,8.462721,-1.506233,-5.175180,8.343834,-8.562329,-4.523064,-0.544325,-2.916539,4.818754,-0.604270,6.370356,7.041912,7.289426,8.531095,7.703831,8.166645,-7.946658,1.905921,-3.547137,-3.979001,5.278151,2.844497,2.336372,3.971358,8.535080,2.028747,3.260673,-1.104813,-0.926396,-3.386923,-8.362219,-8.744467,-3.390610,9.643242,-5.742413,3.113653,8.513250,7.488291,-1.197445,7.527594,4.616781,-3.782515,6.427693,7.934367,-6.906758,3.344503,9.709475,3.892632,4.223546,5.005094,-9.334780,1.352218,9.245819,8.234768,-7.714191,9.663904,8.446162,-4.049720,4.664775,3.424200,0.893387,-3.740148,-6.070720,-8.814694,6.933474,-3.347711,-7.372601,3.749595,-2.177065,-9.433641,8.603181,-4.571293,5.607011,4.218923,-2.948424,3.181521,2.525744,3.076619,5.734862,7.578003,3.852929,2.820910,4.785614,9.042215,3.415413,-3.112843,-8.335294,3.725631,1.820702,-1.549910,2.395946,-3.507282,0.169044,6.811807,6.182983,9.684942,-1.086539,9.730190,5.806795,8.520731,-3.147619,3.248732,7.843306,-2.027283,3.789190,-0.824853,-7.576380,7.713236,-9.785052,9.531472,7.563938,-6.318287,6.874660,-5.529077,6.462144,2.137404,3.787197,-5.817591,2.930672,-3.591589,2.558492,-5.583207,1.698753,0.328661,-4.284602,1.358865,-7.660941,3.166846,3.473638,-2.810417,9.319083,-8.923900,8.401950,3.723506,-4.622865,6.571612,4.277258,4.841658,-3.891168,-9.126194,6.638196,-5.800125,-6.373975,1.662141,6.784087,-1.321981,2.478175,-5.968850,2.582926,-6.773572,2.922495,3.318762,9.229383,7.270005,6.892553,-4.056237,5.866639,-5.293392,-6.804511,-8.244214,-9.660520,-2.848719,3.462517,-9.512217,8.227468,-5.591039,-0.185498,6.483544,6.357674,0.562283,-7.650677,4.118295,3.780120,7.636010,-1.397369,0.729642,-2.823097,-2.391487,-8.385467,-3.067531,1.594012,-5.079981,-1.474131,2.904857,-5.764827,8.997036,-0.739106,0.003929,-8.848643,3.048375,-8.125712,7.703854,2.462609,-2.192819,-4.993510,8.034792,-0.826255,-2.556338,5.592075,-6.055753,-2.186779,-9.271947,-9.021095,-9.389100,1.719296,5.163570,2.999841,-8.647529,4.109795,-2.527320,-2.481569,5.385290,-6.173769,5.618948,-2.765369,4.685582,7.433387,7.547565,6.042809,3.077777,-0.292685,-2.825118,0.095778,-9.068177,-4.883031,5.977374,-0.705443,9.053453,-5.786069,-7.588979,-4.264387,8.170600,5.738507,8.503261,1.561304,7.939173,-3.025292,8.336138,8.291275,-9.936766,-5.681561,-9.937082,-5.496035,3.615012,-3.734780,9.273459,-4.281047,9.058162,-3.936097,-2.153252,4.407202,7.839841,-3.734626,1.871555,-3.780051,5.665143,2.073327,8.766242,9.571070,-6.210724,-2.701368,-1.570746,8.224772,-2.069796,-3.271344,8.299418,0.787208,2.151081,5.539979,5.813483,-0.675671,-0.133759,-5.712693,-7.049352,9.844902,1.821942,-2.680179,-1.730922,8.022826,8.687903,5.141907,9.986924,6.433771,-6.608436,-5.840275,-3.259182,-8.152581,-5.170447,-9.904011,-6.934290,-4.856570,6.786118,5.548015,-3.552759,9.682179,9.476815,-0.363429,7.703582,9.781062,-0.434265,1.578344,3.279747,1.655249,-7.510953,-6.384309,0.975903,-7.876336,1.244850,-4.691643,0.447323,-8.952842,6.874545,4.974955,-6.104699,-4.238157,-6.888530,-6.771128,-0.636413,-8.265112,0.598031,7.965810,8.265856,-8.179506,-0.001226,-0.055109,-2.756833,-4.662705,4.901446,-5.376173,-4.013627,-3.390139,-2.438120,-8.957206,-7.631496,1.962979,6.881421,5.833040,-8.780066,-6.651310,-0.734519,-8.482000,3.351303,-1.532955,5.357429,-6.721535,-0.861048,-9.405782,8.691412,0.155685,3.959876,-8.232773,6.159568,7.750988,1.423410,-7.379801,-6.789376,-4.849220,5.546187,-9.332135,8.811541,5.265768,5.396500,-1.289512,-7.233518,5.387879,-6.684253,9.806875,5.030724,0.846332,-6.259429,-2.922266,7.498802,-9.226321,-1.417761,4.320696,8.690327,9.838265,-0.704042,-7.001269,4.339211,8.076644,1.709477,4.688984,3.620399,8.469222,8.527959,8.428953,-7.597799,1.712978,-8.749634,-5.473770,2.102202,0.656326,6.888017,8.748436,7.650974,-1.516626,9.060641,2.541508,-6.384123,-2.798714,-2.988647,-3.424916,2.951059,8.325364,-4.176918,2.692051,7.842915,-2.756761,-8.013605,7.772478,-0.930261,-8.751278,-1.532436,-0.338967,-8.822535,-7.502242,-0.891691,8.866227,-5.125320,-6.257017,-2.060221,0.490257,-9.551464,-8.006649,5.532573,-5.591130,0.677398,8.086242,-6.201271], dtype = "float32")#candidate|6599|(539,)|const|float32
call_6594 = relay.TupleGetItem(func_5146_call(relay.reshape(var_6595.astype('int32'), [14, 3, 9]), relay.reshape(const_6596.astype('uint32'), [960,]), relay.reshape(const_6597.astype('float32'), [154,]), relay.reshape(var_6598.astype('float64'), [385,]), relay.reshape(const_6599.astype('float32'), [539,]), ), 12)
call_6600 = relay.TupleGetItem(func_5152_call(relay.reshape(var_6595.astype('int32'), [14, 3, 9]), relay.reshape(const_6596.astype('uint32'), [960,]), relay.reshape(const_6597.astype('float32'), [154,]), relay.reshape(var_6598.astype('float64'), [385,]), relay.reshape(const_6599.astype('float32'), [539,]), ), 12)
func_4688_call = mod.get_global_var('func_4688')
func_4692_call = mutated_mod.get_global_var('func_4692')
call_6602 = relay.TupleGetItem(func_4688_call(relay.reshape(var_6598.astype('float64'), [11, 5, 7]), relay.reshape(const_6599.astype('float32'), [539,]), ), 3)
call_6603 = relay.TupleGetItem(func_4692_call(relay.reshape(var_6598.astype('float64'), [11, 5, 7]), relay.reshape(const_6599.astype('float32'), [539,]), ), 3)
output = relay.Tuple([bop_6591,call_6594,var_6595,const_6596,const_6597,var_6598,const_6599,call_6602,])
output2 = relay.Tuple([bop_6591,call_6600,var_6595,const_6596,const_6597,var_6598,const_6599,call_6603,])
func_6604 = relay.Function([var_6589,var_6590,var_6595,var_6598,], output)
mod['func_6604'] = func_6604
mod = relay.transform.InferType()(mod)
mutated_mod['func_6604'] = func_6604
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6604_call = mutated_mod.get_global_var('func_6604')
var_6606 = relay.var("var_6606", dtype = "int16", shape = ())#candidate|6606|()|var|int16
var_6607 = relay.var("var_6607", dtype = "int16", shape = (1, 9, 15))#candidate|6607|(1, 9, 15)|var|int16
var_6608 = relay.var("var_6608", dtype = "int32", shape = (378,))#candidate|6608|(378,)|var|int32
var_6609 = relay.var("var_6609", dtype = "float64", shape = (55, 7))#candidate|6609|(55, 7)|var|float64
call_6605 = func_6604_call(var_6606,var_6607,var_6608,var_6609,)
output = call_6605
func_6610 = relay.Function([var_6606,var_6607,var_6608,var_6609,], output)
mutated_mod['func_6610'] = func_6610
mutated_mod = relay.transform.InferType()(mutated_mod)
const_6828 = relay.const([[[10,-9],[-1,5],[3,5],[-3,2],[-2,-4],[4,-4],[1,7],[-3,-7],[-9,7],[-1,-2],[-2,-8],[8,2],[-8,8],[-6,-6]],[[2,-1],[8,-9],[-6,7],[-1,-2],[9,-7],[9,7],[-6,1],[9,10],[-1,-8],[9,-6],[-6,-2],[3,9],[5,-9],[7,-4]],[[-4,6],[-2,-7],[-7,2],[4,3],[-10,-6],[-1,6],[-3,2],[4,-1],[-3,-4],[-3,-8],[7,10],[-9,-1],[8,-3],[-4,-6]],[[-6,5],[6,-8],[4,6],[4,10],[5,5],[3,-2],[-5,1],[-5,-4],[-5,1],[-6,-2],[1,-8],[1,8],[-7,9],[-9,10]],[[-5,-3],[6,-1],[8,-6],[-1,3],[-8,8],[-8,-7],[-9,5],[-5,-2],[-4,3],[4,-2],[-4,-5],[9,-8],[10,6],[2,6]]], dtype = "uint8")#candidate|6828|(5, 14, 2)|const|uint8
var_6829 = relay.var("var_6829", dtype = "uint8", shape = (5, 14, 2))#candidate|6829|(5, 14, 2)|var|uint8
bop_6830 = relay.logical_xor(const_6828.astype('uint8'), relay.reshape(var_6829.astype('uint8'), relay.shape_of(const_6828))) # shape=(5, 14, 2)
bop_6846 = relay.minimum(var_6829.astype('uint16'), relay.reshape(bop_6830.astype('uint16'), relay.shape_of(var_6829))) # shape=(5, 14, 2)
uop_6853 = relay.tan(var_6829.astype('float32')) # shape=(5, 14, 2)
func_4589_call = mod.get_global_var('func_4589')
func_4593_call = mutated_mod.get_global_var('func_4593')
const_6863 = relay.const([4,-4,-10,3,-3,-3,9,8,6,2,-1,-9,-6,7,-9,-4,6,10,-6,-6,-7,10,2,-6,5,4,2,6,6,-10,6,8,5,-5,-2,1,-2,7,-9,10,-1,-2,2,3,-5,-2,8,-10,7,5,8,9,9,4,9,1,-2,2,-3,1,7,-7,-5,-7,4,-4,-10,-2,8,-6,-2,6,-10,-8,-1,-10,-4,3,-4,2,4,10,-8,2,10,5,-5,-6,7,-9,-4,-7,8,8,10,-1,5,-10,-8,8,-10,-2,4,-1,3,-1,3,-7,-8,4,-4,-4,-8,9,7,-6,2,2,-7,9,7,8,8,10,8,-5,10,-1,-6,-4,10,9,-7,10,-6,-3,8,2,5,-3,-7,-7,-8,5,1,-6,-9,-6,6,8,6,-6,3,10,1,4,2,6,2,-5,-1,3,-5,-6,-5,-6,8,-5,1,8,1,-1,3,-4,-9,7,9,9,1,7,-2,8,5,10,1,10,-9,-4,8,-9,-6,-6,8,-8,-3,-6,-8,-4,8,-10,3,2,3,-8,5,-10,6,5,-3,5,-10,4,5,-2,3,3,-2,-8,2,-7,-3,-9,3,5,9,-6,10,8,8,-2,1,-7,-2,-1,-10,3,-3,2,-8,-6,6,-7,-3,-4,4,4,-1,2,5,-8,-10,-8,-3,3,-7,8,4,-10,10,-8,9,-4,2,-6,9,-9,6,6,-8,-3,-1,-8,8,-9,-1,-7,-8,5,-6,4,6,8,3,-3,4,-7,9,-7,-3,-7,5,9,4,-3,4,10,3,3,-4,10,-6,-3,2,4,-8,2,-7,-7,4,5,-7,9,5,-9,-10,-6,-6,1,-1,-3,-8,-2,-5,-5,-9,6,-5,8,-9,-8,-8,5,-3,1,-1,-5,-9,-3,-6,-5,9,2,8,-6,9,-6,-10,10,-7,-7,5,-9,-9,-3,9,1,-9,5,-5,6,7,-2,5,10,10,4,9,2,-4,-4,-2,2,-10,-3,-10,-10,3,3,3,-1,3,10,7,-2,8,-5,-3,-4,-3,-9,-5,1,-10,-7,-8,-7,4,-4,9,3,2,-10,4,-7,8,-4,-4,1,9,-8,-6,9,2,2,-9,-1,-6,5,2,9,-9,-2,-7,-8,1,-3,-1,-7,-6,-4,-8,6,-3,-4,-5,6,-7,7,-1,10,1,9,6,2,-6,6,1,-8,3,1,6,-9,6,-6,-1,9,10,3,-3,-7,-1,-3,-5,1,4,3,1,-4,8,-4,-8,8,-10,-5,5,-1,5,3,6,7,5,-1,-1,-1,-7,-5,-9,-5,5,-1,-2,-9,8,-6,-5,6,2,-4,4,-10,-4,8,-2,-2,10,7,8,8,9,10,-8,2,4,3,-3,9,-1,-1,-9,-8,-6,3,-3,10,9,-6,6,9,3,-10,-6,-6,-7,8,9,6,-2,-9,-2,-9,-9,-9,2,-7,-9,-5,-5,10,7,-7,-5,-4,-2,4,-4,-6,-9,-9,1,7,-10,-5,-3,-6,-4,-9,-6,5,-7,-1,-5,3,-9,4,6,-2,-2,-3,1,-5,4,3,6,7,1,4,6,10,10,7,-3,-4,5,2,-1,-10,-5,-7,1,6,-6,7,-8,7,-9,5,5,-1,-9,6,-3,6,-7,9,-9,-9,-5,-6,3,2,10,-4,-9,5,9,9,-8,-10,-10,-5,3,-5,-2,3,4,5,-3,9,7,1,5,-8,6,8,-6,-6,-6,-7,-2,4,-4,-10,-10,-10,-2,3,-10,8,8,4,8,-2,1,-5,-8,8,9,-10,6,-6,-2,4,1,-9,-10,4,5,4,-3,-8,9,-6,6,7,-7,-8,3,2,6,4,4,-3,2,-4,8,10,2,6,-2,-7,8,-8,9,-5,-3,10,5,-6,-1,-3,-6,6,9,-5,-5,-9,-10,-3,9,4,7,9,7,10,-10,7,-8,-6,-7,7,3,-4,-5,10,5,5,-7,-3,-4,2,-7,-9,-4,-1,6,-10,4,-2,10,-2,-7,4,-3,-8,-3,-10,9,-7,-6,3,-6,3,-8,-10,8,-1,1,10,-6,1,-9,10,-10,-5,5,10,-3,-3,9,-9,-5,1,8,10,-10,-3,-1,10,-10,-10,3,6,5,4,3,1,6,4,5,-9,-2,-5,7,-4,10,-2,6,-6,-7,4,-8,8,7,9,3,-9,2,9,1,8,9,-4,-8,-5,5,-5,-4,-6,-4,-5,4,-5,7,-8,9,-2,6,5,-10,-8,-10,7,-5,-7,9,9,5,10,10,-2,3,-7,-2,10,-5,-7,1,-10,-7,9,-8,-9,-2,5,-6,1,1,-8,-2,-4,-9,1,5,8,8,-9,-6,7,9,10,-9,7,-10,-4,5,7,-1,6,10,9,1,-4,8,7,-5,5,9,-5,-10,1,-1,1,-7,-9,1,4,-7,1,2,-5,6,-1,5,-5,-9,10,5,3,8,-10,9,1,4,5,1,-3,1,3,1,1,-6,-9,2,-4,3,9,8,2,-3,10,-7,10,-6,-4,-5,-9,5,2,2,-8,-8,1,-1,1,-9,8,3,-2,5,10], dtype = "uint32")#candidate|6863|(960,)|const|uint32
call_6862 = relay.TupleGetItem(func_4589_call(relay.reshape(const_6863.astype('uint32'), [12, 5, 16]), relay.reshape(const_6863.astype('uint32'), [12, 5, 16]), ), 0)
call_6864 = relay.TupleGetItem(func_4593_call(relay.reshape(const_6863.astype('uint32'), [12, 5, 16]), relay.reshape(const_6863.astype('uint32'), [12, 5, 16]), ), 0)
bop_6865 = relay.power(uop_6853.astype('float32'), relay.reshape(bop_6846.astype('float32'), relay.shape_of(uop_6853))) # shape=(5, 14, 2)
output = relay.Tuple([call_6862,const_6863,bop_6865,])
output2 = relay.Tuple([call_6864,const_6863,bop_6865,])
func_6871 = relay.Function([var_6829,], output)
mod['func_6871'] = func_6871
mod = relay.transform.InferType()(mod)
var_6872 = relay.var("var_6872", dtype = "uint8", shape = (5, 14, 2))#candidate|6872|(5, 14, 2)|var|uint8
output = func_6871(var_6872)
func_6873 = relay.Function([var_6872], output)
mutated_mod['func_6873'] = func_6873
mutated_mod = relay.transform.InferType()(mutated_mod)
var_7154 = relay.var("var_7154", dtype = "float64", shape = (15, 6, 9))#candidate|7154|(15, 6, 9)|var|float64
const_7155 = relay.const([[[1.396093,4.122284,-0.339062,5.322548,-2.499663,-0.473841,1.942790,2.804016,-5.178380],[-2.897161,-4.146072,-9.787864,2.123573,8.091234,-4.246444,-2.229105,-8.030344,-1.194961],[3.805758,-0.997819,-1.750296,7.287859,5.653861,-6.385917,-4.977230,-4.414934,2.618692],[9.113255,-3.971640,-2.780915,-6.455167,-7.525821,-3.833817,4.558284,-6.510473,9.794113],[1.279464,-8.695442,7.721397,-9.742894,-6.573423,-4.395586,-2.885384,-8.750545,-2.690715],[1.319903,3.533082,6.962959,7.335205,-4.728437,1.212139,-4.157900,-1.460430,0.257947]],[[-6.795776,9.972485,-6.783469,-5.575076,-0.444107,-5.561874,8.033516,3.123601,2.434619],[-4.318235,7.302579,2.293322,-9.285993,4.471447,-7.523097,-7.068616,5.963693,8.111939],[3.530416,-1.483159,-9.669415,8.954291,-7.672527,6.837810,8.309299,-3.245094,-8.230635],[6.955034,-4.184720,7.522836,2.390491,2.506682,-4.418687,9.606204,-8.367974,6.622630],[-6.124121,-1.225571,7.431863,-4.381507,7.076810,5.489624,-9.775893,-0.148569,-5.381400],[-3.964326,2.949728,-5.233535,-4.460346,6.210125,5.321848,-0.319496,5.607447,-4.683946]],[[-8.355328,-3.975317,-5.084258,0.221910,-1.818482,5.239812,3.592436,7.567759,8.455940],[-6.318564,9.588735,-4.180301,-2.871962,-8.290192,2.841701,-4.942366,4.986532,3.943820],[9.062755,4.668383,-5.204236,-4.915098,-0.664040,-4.102253,3.060722,5.068284,-6.100240],[2.563156,-1.419549,6.998521,-3.315260,5.416006,-9.732534,3.184410,4.104629,3.982463],[0.246050,-2.886608,2.634685,5.876691,3.636400,8.922188,-3.759530,4.803431,-2.051333],[-5.566755,-0.676778,8.452677,-2.900983,-9.289202,4.212140,9.165897,8.598289,-6.649480]],[[-9.492594,3.342008,-6.352543,-0.018210,8.249410,-5.831786,-6.726080,2.938198,-1.018966],[5.587521,6.182712,3.246983,0.809157,-0.226819,-8.800782,-9.089251,-5.166318,-9.283714],[-4.532392,-0.425647,-5.072647,-5.958848,4.699271,-4.476669,-9.549867,0.162418,6.808778],[-8.142811,1.081655,-8.949971,5.868321,6.824951,-1.955969,-7.396517,-0.817226,1.148914],[8.294604,2.477033,6.494144,2.776550,0.690844,5.994593,4.987353,6.430971,-6.637394],[-2.666852,-5.194105,-4.199368,0.699296,-4.500309,3.360474,8.978234,9.435928,6.896712]],[[-1.248563,-9.267511,3.547325,-4.108106,3.480194,-0.872136,3.227916,0.104744,-8.939447],[9.762990,-1.151339,2.697357,2.705174,4.250465,7.883741,6.516651,9.445215,4.983788],[4.239553,7.226158,7.121450,6.642725,-5.932029,1.652953,-1.594067,-6.347576,-5.560626],[-1.242850,-8.506644,-8.352715,-1.597368,2.588720,2.732559,7.086557,4.793648,6.618113],[-0.857754,1.235772,1.839595,3.969319,6.598486,-6.003670,3.327623,9.425364,-4.480545],[9.320259,7.164237,-1.233248,0.303175,-3.563879,-0.705775,6.515987,-3.091673,8.106504]],[[2.273235,3.746382,6.398827,-0.196085,-0.217089,-8.573691,5.458949,8.363002,9.525830],[1.286663,6.671857,4.055631,6.983600,-1.558782,4.337038,5.229133,-8.689788,-6.145447],[1.379479,-5.524447,-8.067830,-5.388095,-1.883380,3.187345,-9.624086,-2.728494,-7.227838],[0.230431,2.191727,3.576587,-6.680404,7.950628,2.287048,-2.565538,2.568929,-8.106909],[8.723603,4.941035,-9.884825,7.687591,-5.182649,2.213010,7.047544,-5.956325,-8.262193],[-1.183007,9.980804,-1.640441,5.754308,6.930358,0.913422,-6.293732,-8.750580,4.229511]],[[-9.937513,2.182107,-2.899347,8.129517,-2.230138,-1.027657,7.633401,9.380341,6.540199],[3.340615,-4.439841,9.949767,-1.277537,-7.407394,3.102168,-8.696771,8.734774,-7.723068],[-1.724452,7.537518,-2.329160,9.584996,-1.091282,-8.993665,-1.103636,-9.138270,-0.451598],[4.098346,-9.679317,6.012707,8.187215,6.773206,-0.819743,-7.286962,-6.864846,2.059419],[-7.359902,-6.563601,3.925793,-9.839697,6.329723,-8.179632,-6.468621,-0.654478,7.119739],[-5.717211,7.840523,2.145917,-1.633844,-7.228620,-5.704543,7.175445,8.158692,3.648047]],[[-3.092180,-0.460032,7.771907,8.433150,-9.504071,-1.194190,2.337622,-8.808789,-9.462874],[-2.191056,-9.042699,4.287326,-5.833045,6.024078,2.640124,-9.607115,-0.238776,1.943581],[6.336368,6.510723,-9.166112,-9.674145,-0.104451,7.331656,-7.157548,2.503774,-7.173120],[3.342269,7.553665,-0.941630,-6.507999,-4.748625,-1.310889,-4.412001,-9.724172,8.228962],[0.690991,3.559915,7.243359,-4.050857,-6.812983,-1.469698,5.936277,-1.467469,-2.640407],[6.085536,6.399071,8.181607,4.346069,-1.536001,0.162388,-8.218113,5.435807,-7.280817]],[[-7.264280,-0.429277,3.619283,-3.514300,2.562524,0.216006,0.441491,-4.854081,0.893657],[-1.382553,6.255071,-7.983915,6.433348,5.290695,-0.544752,7.982677,-0.068971,-7.583009],[-3.315901,-9.309813,6.468754,7.356406,-1.344809,9.074054,6.171283,-8.296235,-7.013291],[9.293309,-7.072775,-5.520366,-8.163956,5.683182,-7.018164,-1.976162,-9.834240,-8.196028],[1.198591,8.952844,4.834687,7.771613,-5.108264,2.710983,-8.441491,-4.301451,0.276240],[-7.321931,-7.425723,-8.360825,8.511640,6.246988,-0.292275,4.691489,9.454144,7.863793]],[[1.925367,3.541508,6.869338,9.740041,9.902402,-1.353309,-2.152347,9.458416,-3.982541],[6.492339,-5.603337,-8.754359,-9.663165,-6.269997,-3.691802,-7.518086,-1.046308,2.725184],[-7.151550,-2.094705,0.399071,-4.872078,1.489099,-9.612931,-1.726959,5.618345,9.632611],[9.100617,7.897293,7.684338,1.989225,4.898027,-9.756546,6.827624,7.273810,-5.629737],[-8.197257,6.939244,-1.804521,-1.121275,7.414205,-1.934956,0.858981,4.144969,5.622282],[-8.202977,-1.709179,0.912502,-4.332978,-1.276761,-0.451306,-2.847909,7.054294,-9.746367]],[[-1.473186,-2.664566,-0.753377,-9.600596,-9.285213,-0.597747,-6.471168,0.537202,-7.175546],[2.319510,5.056106,3.617678,0.448579,0.251775,2.917111,-6.843926,-1.508864,0.767014],[4.657168,-7.512848,4.540227,-4.993178,8.076199,9.118425,-3.232599,-9.633488,-9.214740],[5.198459,-2.673785,-2.506920,-6.399688,9.621525,-0.524302,7.402451,-5.625911,0.554768],[-9.117622,3.603264,0.449207,0.616137,-0.922418,-5.444154,7.831570,-1.045471,-5.043203],[8.203878,5.782197,5.308970,-2.480777,-7.877296,-9.162012,-7.986238,4.890734,-9.448977]],[[-7.005648,-5.564435,4.906457,2.710263,-4.222275,-9.767387,9.426652,9.115582,-7.310784],[-4.273832,1.316254,5.960979,-8.950581,-0.457660,-1.946602,9.985083,-0.325010,1.372971],[-7.149150,2.666924,-9.483008,0.198051,3.412599,-7.501577,9.955220,-3.866786,9.030892],[-1.234122,-7.493728,6.543939,8.988598,6.946502,-4.457945,0.869985,-8.668157,6.594584],[4.547236,-2.815695,1.605248,-9.824975,2.536993,2.188756,0.860175,-8.936238,-9.287218],[-8.531357,-0.646918,-8.765455,-7.483986,4.664376,-8.478183,7.852847,4.363054,-3.487135]],[[-0.011097,3.782291,-5.885596,3.772658,-4.368728,7.785423,4.537750,-4.749873,4.025910],[5.984116,2.188003,-9.859290,7.631456,7.039455,0.284282,-9.978283,-5.991981,7.240037],[-4.941524,-1.392416,2.068566,-9.849431,1.968747,-1.812079,9.814973,-7.854157,8.976327],[-2.981965,-6.644544,8.796307,8.524435,-5.206584,-6.131601,-1.845067,-7.381541,2.622285],[-3.496417,-9.051707,8.646333,9.368823,-6.129223,1.304594,-4.673070,6.265936,9.279407],[2.241534,-8.281428,-7.626104,8.168436,1.584531,-1.520537,5.607716,-0.054180,-4.910921]],[[0.367446,-9.707366,-0.262280,5.938556,5.484499,9.615968,5.644051,-2.123173,-2.048455],[-4.071249,4.868035,4.377419,5.395133,4.262575,7.322111,6.159966,2.901544,-5.766197],[2.748867,-5.834886,-8.452217,9.840080,-8.865132,8.546205,-7.352617,2.210510,-5.381777],[0.954088,7.886380,7.236903,6.538491,7.735439,3.731239,-0.995970,2.406170,9.286058],[-9.605303,-1.539201,-2.641885,-4.879339,3.758123,0.930002,-9.709689,5.884301,5.561321],[-0.072519,2.584353,6.564422,-2.697116,3.604727,-9.157403,7.736602,8.144218,-8.423600]],[[-9.949028,1.951944,-1.718298,8.087915,8.546177,-8.006414,8.559481,9.522417,8.628271],[3.306285,-2.806000,2.647904,-7.650223,-5.803175,-3.315777,5.577079,6.128875,5.206943],[6.364432,-8.907235,3.619006,8.978676,-7.802186,-7.264263,2.121607,6.803590,-1.400972],[8.132370,0.061617,0.760432,-0.415506,-8.835908,4.724034,6.327823,-2.324769,6.680817],[-0.030114,9.259653,-7.921605,-0.795172,0.650738,5.412769,5.409311,-8.647910,-1.546781],[-0.309164,5.780419,-1.206365,-5.173903,9.688152,-1.084001,6.151833,-1.665010,2.526255]]], dtype = "float64")#candidate|7155|(15, 6, 9)|const|float64
bop_7156 = relay.floor_mod(var_7154.astype('float64'), relay.reshape(const_7155.astype('float64'), relay.shape_of(var_7154))) # shape=(15, 6, 9)
output = bop_7156
output2 = bop_7156
func_7164 = relay.Function([var_7154,], output)
mod['func_7164'] = func_7164
mod = relay.transform.InferType()(mod)
mutated_mod['func_7164'] = func_7164
mutated_mod = relay.transform.InferType()(mutated_mod)
var_7165 = relay.var("var_7165", dtype = "float64", shape = (15, 6, 9))#candidate|7165|(15, 6, 9)|var|float64
func_7164_call = mutated_mod.get_global_var('func_7164')
call_7166 = func_7164_call(var_7165)
output = call_7166
func_7167 = relay.Function([var_7165], output)
mutated_mod['func_7167'] = func_7167
mutated_mod = relay.transform.InferType()(mutated_mod)
var_7245 = relay.var("var_7245", dtype = "float64", shape = (10, 16, 1))#candidate|7245|(10, 16, 1)|var|float64
uop_7246 = relay.asinh(var_7245.astype('float64')) # shape=(10, 16, 1)
output = uop_7246
output2 = uop_7246
func_7248 = relay.Function([var_7245,], output)
mod['func_7248'] = func_7248
mod = relay.transform.InferType()(mod)
var_7249 = relay.var("var_7249", dtype = "float64", shape = (10, 16, 1))#candidate|7249|(10, 16, 1)|var|float64
output = func_7248(var_7249)
func_7250 = relay.Function([var_7249], output)
mutated_mod['func_7250'] = func_7250
mutated_mod = relay.transform.InferType()(mutated_mod)
var_7268 = relay.var("var_7268", dtype = "float32", shape = (15, 8, 7))#candidate|7268|(15, 8, 7)|var|float32
uop_7269 = relay.sin(var_7268.astype('float32')) # shape=(15, 8, 7)
func_2758_call = mod.get_global_var('func_2758')
func_2760_call = mutated_mod.get_global_var('func_2760')
var_7282 = relay.var("var_7282", dtype = "float32", shape = (1800,))#candidate|7282|(1800,)|var|float32
call_7281 = func_2758_call(relay.reshape(var_7282.astype('float32'), [12, 15, 10]))
call_7283 = func_2758_call(relay.reshape(var_7282.astype('float32'), [12, 15, 10]))
func_4724_call = mod.get_global_var('func_4724')
func_4727_call = mutated_mod.get_global_var('func_4727')
const_7285 = relay.const([-0.369703,6.448522,3.784182,7.774275,-4.092944,1.276477,-9.336980,-3.034525,-5.468261,5.439803,-4.484189,-3.400194,1.351225,-6.212931,-5.638475,-3.233843,5.592372,1.237248,4.566025,4.767247,1.034698,6.100056,-5.894496,-3.368272,3.891055,9.277056,2.687051,2.671647,-6.617348,9.836701,1.466333,2.161287,4.259896,1.140501,6.812390,-0.715520,9.333198,0.412987,5.558550,4.972618,6.053497,7.404857,-5.921169,4.321753,-4.095100,2.332545,-9.219094,-6.172020,4.562802,-4.044854,-0.383429,-1.073466,5.914336,3.400365,9.960632,9.434636,1.037099,6.168552,9.773671,-1.313704,5.085998,1.472840,3.698368,5.460165,0.251329,9.697569,9.487517,5.394654,3.077023,5.590619,8.998735,0.840292,3.548473,6.912003,-6.473130,-2.526239,6.641473,1.389740,5.444120,-1.233522,3.620832,-9.518269,3.095414,4.720593,-2.939608,6.741912,8.325376,3.836851,-2.609669,4.429271,-4.931449,-8.185683,1.788686,-6.446765,8.640285,8.093670,5.427923,7.999866,8.532259,9.491741,3.355719,-4.266354,-7.134796,-4.340036], dtype = "float64")#candidate|7285|(104,)|const|float64
call_7284 = relay.TupleGetItem(func_4724_call(relay.reshape(const_7285.astype('float64'), [13, 8, 1])), 1)
call_7286 = relay.TupleGetItem(func_4727_call(relay.reshape(const_7285.astype('float64'), [13, 8, 1])), 1)
func_4688_call = mod.get_global_var('func_4688')
func_4692_call = mutated_mod.get_global_var('func_4692')
const_7289 = relay.const([9.535984,-1.162522,9.297545,3.154700,6.846875,7.917429,-9.312630,-1.173198,4.062451,-4.454805,-1.303026,3.259274,-4.096562,-4.380804,-9.386940,-0.081717,3.652606,7.885150,0.683056,-6.996197,-0.228744,0.362963,-0.540906,5.613010,-7.506829,9.176305,-8.619888,-1.128865,-0.511108,-4.746314,5.023126,-8.101590,4.789586,0.224145,-3.432603,7.790422,-1.358785,9.786814,9.542325,-2.647045,-8.150798,-0.283607,3.588462,8.794738,-3.150281,-1.493820,6.379240,-2.394116,-4.882094,6.491192,2.985281,8.986767,-3.133041,-8.399664,9.947833,5.629623,8.871298,-1.564785,-1.944678,-4.274586,-2.519835,-3.685167,5.408556,-9.836637,2.299589,-4.812603,3.168945,-3.971300,-1.778799,1.145641,7.071946,-9.962785,-7.642380,9.509919,-6.197511,2.950921,-5.688688,-2.618529,-6.545470,7.132921,8.492558,-0.197256,3.834438,-3.398879,-3.132299,-6.826443,-3.070239,-8.622349,2.286630,5.676504,5.275111,-0.802514,5.147206,4.537208,-3.071146,3.843849,-9.412490,-8.441873,-0.868258,6.797461,-6.951518,-1.767544,-7.697428,2.619996,6.755177,-5.883476,-0.661383,-1.044110,6.115359,9.857231,3.285421,0.770134,8.243277,4.091869,-7.075784,-8.993040,-1.213218,0.275539,7.049220,2.193433,-0.602190,5.042503,-8.729082,-2.195987,2.352717,0.917369,-5.857917,-0.824141,-0.519747,9.038609,-7.574504,7.237273,-5.884350,-1.932851,-7.364624,-6.100736,1.261831,3.715487,-1.519656,0.480997,3.760368,-7.319915,-2.054541,1.241698,-7.965118,5.428067,-6.093499,-2.582665,-4.253633,-0.878157,-6.904352,4.014195,-9.160377,7.062318,-0.346044,-5.884052,-9.540667,5.153362,3.605781,0.348566,6.222027,7.619093,-3.807166,-0.907562,-5.653579,7.306443,-9.551248,-6.581249,2.293743,5.373523,-6.169387,2.716809,-5.657905,3.845807,-5.015165,5.410877,-9.593477,5.156177,-8.062342,3.030200,0.720863,1.431342,1.794243,-8.072135,-8.983582,-2.837721,-1.307203,8.557950,-5.287899,-4.191163,7.763560,-2.344785,-4.041716,-1.399702,6.090377,3.609361,-9.837746,-1.777839,-6.200766,-4.295368,-8.395903,-2.673809,5.761598,5.048942,-2.918976,-2.135748,-5.148863,4.355839,-0.644702,2.341396,8.092512,-5.561286,-7.782628,7.021375,-9.544376,2.115965,-3.064907,6.002055,5.965192,2.073324,-1.205012,9.893904,-1.875892,-8.473600,4.359390,3.427770,-8.972687,-5.049562,-2.359734,-7.588124,-8.803999,-6.058607,9.838357,-5.830361,-4.257869,-2.687561,4.946524,0.521577,6.045226,-4.084998,-6.510439,9.193391,-9.367790,6.942271,-2.639063,0.379536,4.252181,8.687441,1.879168,4.265854,-9.178897,-3.298102,1.217708,7.031508,4.596190,9.958833,2.924403,7.499966,5.793248,3.360828,-7.177256,-0.096379,-2.817144,-3.716855,8.252649,4.952699,4.999871,1.416710,-9.136062,3.560797,-8.814334,4.942210,-3.377595,7.998572,2.576961,9.806715,7.088294,5.184572,2.140877,6.176589,8.801640,-1.528371,4.420763,4.040339,0.834862,6.273821,-4.861081,3.613818,4.708322,-3.315762,3.873661,-5.930545,0.831356,-7.742252,0.117166,9.561364,7.563533,-6.787134,4.978586,-7.449196,-7.078162,-0.479937,-0.894331,1.878922,6.675163,-3.274344,1.741844,9.416656,-6.115346,-9.471497,-8.766843,-8.523022,7.561965,-0.257194,-2.824312,0.995162,-5.832245,0.867987,-5.553006,3.953454,-7.932037,-8.763535,-2.061233,-4.435720,-9.229229,4.946595,-5.152983,-7.808420,-6.234312,-7.494012,4.647156,9.586048,-3.269330,-3.460722,-0.826560,-4.979905,5.849473,-2.664002,-8.194688,-4.378677,7.564468,0.411669,9.835855,-0.614398,-0.919852,-2.335853,-1.764215,-2.638805,7.782242,5.779151,-9.376251,-9.114239,6.514898,5.620124,-6.061164,-9.926560,5.788335,2.870291,2.555552,-1.520614,5.873969,6.052666,6.157205,-6.480401,-7.839009,-0.725717,5.172296,-1.702159,1.398319,-4.932195,3.088633,-7.826707,9.986242,3.163544,1.445128,-8.137416,-1.299028,-3.700559,7.602798,-1.752754,6.658008,-0.984224,-7.081075,5.170979,8.337018], dtype = "float64")#candidate|7289|(385,)|const|float64
const_7290 = relay.const([6.328272,6.471690,-2.276825,0.627397,7.772683,-3.168717,2.021067,-2.121998,2.813972,-0.009200,-0.660365,-8.105077,-4.687587,-7.360873,-0.791649,2.974203,-8.927528,-5.459637,7.485557,5.191342,9.668145,0.039197,-3.027479,1.709005,3.903787,4.851745,-6.444883,4.641026,2.324723,-1.878019,-2.245469,-6.909592,-3.525286,7.255928,-6.801411,4.970943,-4.575713,-1.405583,-9.892662,-0.169348,9.087374,-5.927087,2.998927,-9.540011,5.760016,-0.228803,1.085040,-9.858762,0.414319,1.710113,-3.964849,2.305437,6.031657,8.120949,4.312538,6.805897,-0.757146,-2.609579,0.386309,-8.747909,3.240290,-0.363479,1.317014,2.914778,-3.947619,-9.511129,0.387104,1.341236,0.311185,-5.666075,-4.207015,2.716679,4.937276,-2.557422,3.259233,5.915700,3.425792,2.112572,-9.344244,6.888896,3.282849,-6.511932,-8.926631,-4.965016,-2.152058,-6.955323,-9.199503,5.934284,-1.862355,0.412202,9.212134,-7.300390,-4.578633,4.391123,-3.903615,-4.009409,1.534462,-1.325883,-8.545015,8.458289,-2.346583,-6.050775,-1.619891,-4.861868,2.312836,-1.538085,8.195193,-7.588610,-1.222974,-9.723011,-3.267656,-9.740589,3.156699,8.694893,2.158983,1.126352,9.010623,6.632114,5.803856,-0.411615,1.193673,4.074965,9.981170,-4.921005,-6.584817,9.148151,5.772814,-9.029992,-7.876660,9.501861,-6.614344,1.410766,-5.698803,1.960752,4.662280,-7.063961,-2.190200,9.613140,8.346418,5.468393,-9.394237,8.845520,4.512109,1.817632,3.269027,3.028194,7.346046,0.323934,4.513336,4.565658,-5.389222,8.686853,-6.710391,9.338015,2.474499,1.232418,2.413133,8.935122,-9.661619,-3.712764,4.603623,2.195962,1.471273,-1.757833,-0.439240,5.764349,-2.338339,5.935189,6.428584,-1.315565,-9.134611,-1.232818,-9.550381,-6.886816,-5.401952,8.311693,-4.444774,-3.755189,4.041279,4.845423,5.357131,1.474730,2.549112,-3.684935,5.697569,6.897253,-4.766692,7.830013,-5.834496,8.453579,-8.765154,-4.523831,6.591063,-7.716286,-3.229895,-6.324779,-2.755098,5.865021,7.848279,-4.384676,-4.598762,-7.142417,-9.481196,-8.545241,6.600669,5.281526,-2.057458,-6.644508,8.897567,-5.264673,-0.007495,9.214582,-2.644792,2.597416,-3.207980,-8.832661,4.548282,3.489939,-5.631806,-2.148346,6.933905,-3.229572,-1.320135,2.884466,1.740141,6.849854,6.402585,9.531673,6.774230,1.358172,-1.118608,-4.859952,-3.938807,9.208277,4.856432,-9.200087,-9.784513,-4.102912,3.313508,-2.939379,-5.279742,5.969578,-8.000323,0.206848,4.202491,2.012785,3.381430,1.633843,9.885027,-3.362819,5.095203,7.723493,5.082173,-8.162530,0.935943,-2.459618,-2.965769,2.713955,-3.590707,-7.268032,0.229850,7.623039,3.257415,-8.900034,-1.337883,-6.481136,4.420788,1.205847,6.233563,-6.997648,-1.235095,-3.739417,-3.119690,2.841162,4.585708,-3.998656,4.363220,9.770298,-5.437717,0.107891,-8.255418,-1.837637,1.718071,4.550311,9.694235,3.712918,-6.476272,-8.257688,-0.195581,5.408012,1.193544,-9.948330,6.470518,-9.503826,-8.062694,-8.697660,1.330208,-2.929111,-9.051397,4.747756,1.018779,7.941936,4.597323,-3.357268,9.714526,7.596170,4.867307,6.896913,9.228419,1.060809,2.213798,-1.367863,-9.476868,7.407348,-3.933133,9.092963,-4.734819,4.952501,-8.759215,6.866083,4.974862,6.974311,-7.828969,-8.096972,-9.353300,2.505766,6.083631,-6.920150,8.222718,9.126749,-1.570764,3.482394,8.042940,-3.994391,4.248189,-9.479797,-8.678241,3.534184,-8.437342,-0.682770,2.276479,0.365619,-8.571171,7.091505,6.593801,5.065823,6.417870,-2.193778,-9.136664,-1.280211,-9.014068,-7.003170,-5.485084,-3.072335,9.265251,1.504535,-9.381972,-8.351011,-7.786270,-0.742918,-9.211396,-2.132280,1.217587,-1.928019,6.344300,4.882676,2.493271,7.500666,9.369962,3.287008,-9.466566,-3.558337,5.164491,2.649192,-7.787180,3.926683,-8.041556,-6.942884,0.488884,5.338413,5.887126,-9.665040,-8.813075,8.667617,6.942913,6.222333,8.291268,5.531989,-4.077579,9.174011,-3.723778,8.288630,-2.442696,-5.481615,-8.139630,-1.078685,-1.314767,5.362877,-5.145175,3.465502,5.281667,-7.204662,-6.509948,7.189453,-7.990627,4.076590,8.942118,7.145773,-3.940162,9.779797,8.604210,-0.096102,6.330772,8.943905,-6.799759,0.885335,5.015967,8.712222,1.807341,-2.960734,7.948784,9.466210,-4.748252,-3.551351,-0.533212,1.900791,1.768324,-1.934475,5.298674,4.748512,-1.319998,7.036290,-0.473472,3.401690,9.179193,3.592416,5.374226,-0.988193,-7.885705,-9.558373,-6.550330,-3.851594,3.033081,-6.258552,-2.564357,4.294512,2.414961,-4.215740,6.431488,0.448001,7.581887,6.333127,3.037378,-1.193716,-8.965553,1.004877,9.730428,-2.945639,-6.393015,0.064475,-2.210316,8.909780,-3.558712,3.518155,4.054360,-6.421308,-0.698685,1.365421,2.056308,8.722739,-0.457643,4.204568,-9.739833,-8.699789,-5.382343,-1.505207,-4.595947,-0.454484,9.746993,-6.405644,9.839838,-5.927149,-2.539911,4.923836,3.344020,3.170266,8.398452,9.321518,7.505708,-4.978435,-3.506909,-5.609726,-5.008495,5.638524,3.669869,-9.821022,-7.866992,-5.654218,-8.343847,9.294442,-3.023459,4.606746,3.450459,7.814332,4.150319,-4.980168,-9.362062,-7.662634,-3.027010,5.881090,-4.920845,-1.378540,-7.040529,6.247736,-5.183605,-4.683026,-8.241647,8.040336,4.324842,-4.697703,-1.192865,-8.125325,6.902838,-1.603543,-9.264936,3.167192,5.032071,6.752743,-8.749210,1.374406,0.633172,9.958517,8.815694,1.966970,-7.075498,0.318881,6.288184,3.898455,3.682340], dtype = "float32")#candidate|7290|(539,)|const|float32
call_7288 = relay.TupleGetItem(func_4688_call(relay.reshape(const_7289.astype('float64'), [11, 5, 7]), relay.reshape(const_7290.astype('float32'), [539,]), ), 0)
call_7291 = relay.TupleGetItem(func_4692_call(relay.reshape(const_7289.astype('float64'), [11, 5, 7]), relay.reshape(const_7290.astype('float32'), [539,]), ), 0)
bop_7292 = relay.subtract(uop_7269.astype('int16'), relay.reshape(var_7268.astype('int16'), relay.shape_of(uop_7269))) # shape=(15, 8, 7)
output = relay.Tuple([call_7281,var_7282,call_7284,const_7285,call_7288,const_7289,const_7290,bop_7292,])
output2 = relay.Tuple([call_7283,var_7282,call_7286,const_7285,call_7291,const_7289,const_7290,bop_7292,])
func_7302 = relay.Function([var_7268,var_7282,], output)
mod['func_7302'] = func_7302
mod = relay.transform.InferType()(mod)
mutated_mod['func_7302'] = func_7302
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7302_call = mutated_mod.get_global_var('func_7302')
var_7304 = relay.var("var_7304", dtype = "float32", shape = (15, 8, 7))#candidate|7304|(15, 8, 7)|var|float32
var_7305 = relay.var("var_7305", dtype = "float32", shape = (1800,))#candidate|7305|(1800,)|var|float32
call_7303 = func_7302_call(var_7304,var_7305,)
output = call_7303
func_7306 = relay.Function([var_7304,var_7305,], output)
mutated_mod['func_7306'] = func_7306
mutated_mod = relay.transform.InferType()(mutated_mod)
const_7515 = relay.const([[[1.989245],[5.095342],[-2.013196],[-8.904939],[3.288944]],[[-9.923488],[1.039563],[-9.129116],[9.227924],[0.876335]],[[-0.391667],[9.815250],[-3.914864],[3.642180],[9.283922]],[[3.621823],[-1.129692],[2.826923],[1.322796],[-9.942745]],[[6.890701],[-4.437645],[9.870315],[2.458654],[-0.498085]],[[-0.172585],[6.068035],[-1.794459],[-5.962930],[7.621428]],[[-4.994133],[7.607995],[1.342154],[4.195633],[-4.541637]],[[0.424079],[-5.679560],[-1.261473],[-3.530676],[-1.576848]],[[-4.373870],[-2.715499],[-1.918241],[-9.363504],[-0.293725]],[[9.411255],[-0.900603],[1.226481],[4.390225],[-6.903302]],[[7.761592],[6.343553],[3.505543],[0.788370],[-2.341113]]], dtype = "float64")#candidate|7515|(11, 5, 1)|const|float64
uop_7516 = relay.sinh(const_7515.astype('float64')) # shape=(11, 5, 1)
uop_7518 = relay.tan(const_7515.astype('float32')) # shape=(11, 5, 1)
func_3369_call = mod.get_global_var('func_3369')
func_3372_call = mutated_mod.get_global_var('func_3372')
var_7521 = relay.var("var_7521", dtype = "float32", shape = ())#candidate|7521|()|var|float32
const_7522 = relay.const([1.881700,-0.370993,4.287410,3.428723,-9.488969,-5.661529,-5.554190,2.854107,-4.279622,-3.441925,-7.412508,-6.039700,5.102936,4.683265,-5.033086,5.394871,2.084279,9.346608,-0.439162,1.803826,-9.085158,4.425400,-0.061320,0.163031,-7.696616,-9.213880,-1.507131,6.356927,9.774857,-0.703104,-9.603151,-7.979573,-8.841025,4.821945,-6.558040,2.181656,-5.409727,4.913909,4.958226,8.756581,9.671766,-8.634185,5.583162,0.386262,-7.905507,-8.242615,8.735970,-2.741788,-8.958745,5.401060,-5.576454,-3.327193,1.739790,9.066542,-4.787148,5.031817,2.073532,-3.904731,4.886234,1.136855,7.271417,8.996273,-4.311782,-5.291487,3.638187,7.602436,-5.957352,-9.122807,-6.987573,-2.114014,8.179365,-4.638653,9.643536,2.651536,-6.125306,-5.912367,-9.852180,-8.155317,-8.879252,-1.454468,-2.516161,7.938507,3.767609,3.918900,-6.170755,-2.373400,4.899940,-7.082198,4.744745,1.746907,-6.175945,-5.586601,8.884425,-4.714962,9.308957,9.386685,-4.256769,8.098962,0.309592,4.399902,-0.594424,9.119045,-2.580483,1.876768,3.714881,8.843801,-5.479385,-7.604798,6.558196,5.308688,5.624912,-0.265950,-3.196248,8.782002,-6.634119,9.885523,9.762720,-1.862151,-7.744590,2.574686,4.779804,1.243461,-8.119360,3.953069,-9.475053,2.008630,-2.977801,-3.384144,1.185790,-0.525571,-9.253670,-5.402527,-3.217240,-3.549907,-7.558248,-7.473142,-4.364194,-2.755670,2.341155,-1.033876,-8.254228,-9.499730,-2.089144,5.035164,-8.293735,9.946135,7.204890,-6.219333,8.490425,-2.000180,1.443116,2.434006,3.860369,-1.755476,2.102830,-6.750171,-4.471700,-8.584945,1.296987,-2.623012,4.490163,9.072534,-7.853896,-5.858673,-9.015183,8.390965,0.919635,6.484267,-8.501189,-3.366377,3.228574,-1.397859,1.427876,-1.988322,-4.069274,-0.431177,-9.223661,2.576156,-7.776977,-8.763472], dtype = "float32")#candidate|7522|(180,)|const|float32
call_7520 = relay.TupleGetItem(func_3369_call(relay.reshape(var_7521.astype('float32'), []), relay.reshape(const_7522.astype('float32'), [15, 2, 6]), ), 0)
call_7523 = relay.TupleGetItem(func_3372_call(relay.reshape(var_7521.astype('float32'), []), relay.reshape(const_7522.astype('float32'), [15, 2, 6]), ), 0)
bop_7542 = relay.logical_xor(uop_7518.astype('int8'), var_7521.astype('int8')) # shape=(11, 5, 1)
output = relay.Tuple([uop_7516,call_7520,const_7522,bop_7542,])
output2 = relay.Tuple([uop_7516,call_7523,const_7522,bop_7542,])
func_7549 = relay.Function([var_7521,], output)
mod['func_7549'] = func_7549
mod = relay.transform.InferType()(mod)
var_7550 = relay.var("var_7550", dtype = "float32", shape = ())#candidate|7550|()|var|float32
output = func_7549(var_7550)
func_7551 = relay.Function([var_7550], output)
mutated_mod['func_7551'] = func_7551
mutated_mod = relay.transform.InferType()(mutated_mod)
var_7678 = relay.var("var_7678", dtype = "int16", shape = (10, 15, 16))#candidate|7678|(10, 15, 16)|var|int16
const_7679 = relay.const([[[-8,-4,4,-4,6,1,1,-4,-2,8,5,-9,-6,-7,-7,-10],[9,-10,1,-9,-8,-8,8,-8,1,4,-6,4,-5,-4,7,-9],[-9,3,-5,-6,1,-1,-7,9,7,-1,-8,4,9,-8,-1,5],[8,-9,-8,-7,8,-10,-7,3,4,-6,1,10,7,6,-6,7],[1,-8,-10,10,1,2,-8,-1,-9,9,-6,-9,6,8,-6,-6],[10,6,7,9,-5,-5,6,-9,4,4,-4,10,8,-10,6,1],[-9,7,6,-3,6,6,-7,-6,1,-8,3,-5,-9,-5,-2,-10],[-5,7,10,-2,10,-8,-5,6,6,-2,-4,-10,-3,-8,1,-6],[-5,-8,4,3,10,-1,-8,10,2,3,-1,1,-5,-1,-8,-3],[-1,-8,-4,9,4,8,6,6,-2,-6,-1,8,-5,-2,-7,6],[7,5,8,-5,3,-4,5,-6,10,-1,8,-7,-8,8,6,-5],[1,-6,3,9,7,4,-7,1,2,-8,-1,7,-4,7,10,-2],[-2,-8,-10,-1,-2,10,-7,9,-3,2,-4,7,4,7,-8,3],[-9,-6,-7,9,2,-1,2,-10,6,1,1,-7,2,8,-7,9],[-1,-9,2,2,-7,4,-2,6,-8,-8,-7,-5,3,10,-6,7]],[[5,-8,2,-2,-2,2,-5,-3,-7,2,-8,-4,10,-10,-2,6],[1,-6,-5,-5,7,2,-6,-4,6,7,-3,-6,3,-1,-2,-4],[-10,-7,-9,1,-2,9,-6,10,-9,7,-6,-6,8,5,4,-5],[8,-9,-6,4,-3,-5,7,2,-10,9,3,-6,5,-3,1,-3],[-9,7,-5,5,-5,9,-4,8,-2,-2,2,-8,-9,6,-8,-8],[-3,4,5,8,-10,10,9,-9,-4,-8,9,3,-6,8,10,-10],[-1,5,-4,4,1,7,3,-3,-9,3,-8,7,-7,-9,-3,4],[-5,-9,-3,4,-8,-5,9,8,-10,7,9,-3,9,5,-5,5],[7,1,-9,-3,-10,-10,6,-8,-8,6,8,-4,-5,8,-6,-10],[-7,3,7,-2,4,-7,-9,7,-9,5,-4,4,-5,-7,-3,8],[-7,-7,6,-3,-3,-9,5,-10,-10,-4,3,4,-8,3,-10,-5],[-9,-3,-2,-5,7,7,-1,10,1,6,2,4,-2,3,-5,1],[1,-10,10,-7,-1,-3,-1,-6,7,-8,3,-8,8,-9,4,-8],[-1,7,6,-10,-10,1,-6,-6,10,-1,-8,10,-4,3,-6,-2],[-1,-2,-7,-6,-5,-10,4,5,2,7,-9,-9,3,-1,-3,9]],[[4,-1,-2,-9,1,-10,-5,-9,3,8,10,-4,-9,3,10,6],[-3,-6,-3,4,4,1,10,-8,-7,-4,-6,-1,3,-7,-5,-10],[1,3,-1,-9,2,-6,-1,3,1,-4,-6,-1,8,6,2,-2],[-2,-8,4,9,9,-6,8,-10,-9,-3,9,7,-4,3,-7,-1],[-1,-1,8,1,-3,-10,8,-9,4,5,-8,3,3,7,10,-8],[-7,-6,-9,4,3,5,6,2,8,5,8,-5,1,-1,-10,-2],[6,-3,4,-6,-5,-2,-7,-1,10,8,-4,-8,-4,6,8,2],[7,-10,7,9,9,3,6,8,1,-5,-10,10,4,2,7,7],[-1,6,-2,-2,-6,6,2,-7,1,-8,5,-9,-7,2,-2,9],[-3,-5,-9,6,3,-5,-8,-6,4,-2,-3,9,-9,-5,7,8],[6,-7,-8,10,4,6,10,3,-7,5,3,1,5,4,-9,-6],[-6,10,5,-7,5,-3,5,-9,10,-2,7,6,1,-8,4,5],[-6,-4,-3,1,2,3,1,-10,5,3,-9,-8,3,-9,1,-7],[-9,7,1,9,4,-3,-3,6,-8,2,10,-8,-7,9,10,-4],[-4,2,10,1,3,-9,-8,8,3,-3,-1,7,-7,3,-10,-10]],[[-7,2,-2,-1,8,5,6,1,-3,-4,5,-10,6,4,10,4],[4,5,10,5,8,3,-5,-3,1,3,-9,-2,10,-4,-10,10],[-6,-2,-2,4,8,6,-6,-2,-6,-4,-9,1,2,10,4,8],[4,6,-6,8,10,7,-10,-4,1,-3,-4,-8,10,10,7,-1],[7,-6,10,7,5,7,-1,4,-8,-4,3,-3,-1,6,1,6],[-7,-1,6,6,-3,9,-3,-8,3,-5,6,-9,9,5,-5,7],[5,6,7,-5,4,-4,8,-7,-6,5,-10,-10,-2,-10,8,-6],[7,-4,-5,-7,-2,7,5,-1,8,-4,2,9,9,-10,9,9],[9,2,-6,-6,-10,-10,-9,-7,-9,-5,-6,-5,-4,-3,-1,8],[-10,8,9,-4,-7,3,5,2,10,-5,2,1,-4,-8,9,-7],[-6,2,-10,-4,1,2,-5,8,-4,2,-4,1,-9,3,4,-4],[-8,8,3,5,-9,-9,-3,-2,1,-2,-8,3,9,7,9,-6],[10,-4,-7,-6,-8,-3,-4,-8,8,10,-3,7,-8,-7,-6,3],[-8,8,4,2,-8,4,7,-7,-2,-4,7,-6,4,3,6,-3],[-10,8,4,7,2,-6,-3,-7,-7,9,10,2,-9,-5,8,9]],[[-10,2,-6,8,10,10,-6,-8,8,8,3,4,-4,4,9,-9],[-10,-3,-2,8,-6,3,5,-6,9,3,-5,-1,-7,10,-10,-5],[10,1,-10,3,-9,-9,-10,-9,10,-10,-8,3,-7,1,1,-2],[-3,-4,1,-2,-8,7,5,-6,8,1,8,-1,-8,4,8,2],[-8,4,-8,2,-7,-3,-6,9,-4,2,-6,-8,-5,4,10,-5],[-4,2,7,-7,4,9,8,6,10,-5,10,9,-8,9,8,-10],[4,6,5,-4,-3,1,-2,-5,-2,9,6,7,10,3,1,2],[-5,-5,-4,-9,3,-10,6,7,8,10,-3,-7,7,1,-5,-3],[1,-1,8,-4,10,8,-1,-4,3,10,-4,-9,9,9,2,4],[-10,8,5,-1,-6,-2,5,4,1,4,-5,6,-2,9,9,-5],[8,-8,-5,-9,7,-10,9,-10,9,8,6,9,-3,10,-10,10],[10,3,5,10,5,-4,-3,-7,-8,-8,10,-2,4,4,9,-3],[10,-8,-10,-8,-8,9,9,-6,10,-3,9,-5,9,8,3,-9],[-9,-9,5,4,-2,-7,-9,-9,-6,3,-8,-10,-8,-5,2,-4],[-2,10,10,3,6,-4,2,6,-6,3,7,-2,-4,6,10,-6]],[[4,-2,-1,8,-4,4,6,3,-9,5,-2,1,-4,3,-8,8],[7,8,-4,7,7,-3,-1,4,-5,-8,-7,-4,-7,-7,-5,8],[-5,-2,-1,5,10,2,4,-3,-6,-7,-9,4,-5,-4,-5,4],[9,7,7,-1,-9,10,8,4,6,4,2,5,8,10,2,-3],[2,-2,-1,-5,5,-8,1,-4,3,4,8,5,-9,-1,-6,3],[-6,6,9,2,9,6,1,-8,-1,-2,-4,-7,9,-3,4,-5],[-10,-10,2,-2,9,2,-9,6,5,-9,6,-1,5,4,-1,-10],[9,1,-1,4,-2,-1,7,10,-7,10,-4,10,6,-9,-2,9],[8,-5,-4,10,-7,6,8,7,-7,-1,-7,-10,-5,-9,9,-10],[-9,-7,-6,-8,6,9,10,-3,3,9,7,3,10,10,-2,-6],[5,-2,8,6,-4,2,-2,-2,-1,5,10,-1,-9,-8,9,-10],[7,3,-3,-3,-5,2,10,-2,-5,-10,-4,5,-9,-4,9,1],[7,-3,-5,9,1,-9,7,3,-6,-9,3,-4,9,1,4,-7],[-7,3,-7,4,-4,-1,4,-3,7,3,-5,2,-4,5,-4,9],[3,3,-4,9,10,9,6,-4,-3,2,-3,6,-7,5,5,3]],[[6,9,-3,-8,-10,8,-10,-8,-9,-4,7,2,-3,7,1,-8],[-6,-8,7,5,-6,5,5,-10,-4,-9,-6,-8,7,9,-5,-8],[-5,-3,2,-4,-1,4,-10,4,-1,-6,-5,-8,-10,-2,-5,8],[-7,-4,1,9,7,-1,10,-3,-8,7,-5,-8,1,2,2,-6],[2,-10,-10,-6,2,3,1,-2,7,4,4,9,-6,3,-10,7],[-3,-5,-7,9,6,-1,10,-10,3,-10,-8,4,9,-1,8,-1],[8,3,8,-3,4,5,-7,2,9,-7,-1,2,-8,-7,5,-7],[-7,-6,-2,9,-5,9,-9,10,-3,8,9,1,5,6,-9,4],[-3,9,1,1,-4,8,3,1,6,-9,-9,2,10,7,9,5],[2,-7,-6,9,-9,3,-4,8,-4,-2,-7,1,2,-9,7,-5],[10,10,-10,-5,-5,-1,-3,-6,7,-1,2,-4,-8,-5,8,4],[2,3,-4,-1,9,5,-4,-8,-10,-5,-1,-7,3,5,-2,1],[-4,5,5,6,-1,-5,-3,4,-3,6,-2,-4,4,6,10,-1],[-2,-4,-6,10,-3,-10,7,10,7,-4,8,1,9,10,-7,-4],[1,5,-6,3,-1,6,9,7,-1,-2,-9,10,2,-5,-3,7]],[[7,-1,8,-4,7,6,5,3,-4,-2,-9,1,4,-2,7,1],[1,8,-6,-10,-2,2,-10,3,9,7,10,1,5,1,1,5],[5,-3,6,7,-10,5,-3,3,6,10,-7,-1,4,-4,5,-9],[7,-5,-7,-10,9,-6,6,4,9,-9,7,-1,-4,-8,-6,-1],[-10,5,9,4,-3,-10,-2,-2,-2,-9,2,10,7,-5,4,8],[-4,-1,10,-1,-8,3,-7,4,7,8,5,5,7,-5,-8,3],[5,5,9,-10,6,8,-10,5,-8,-9,3,3,6,1,10,-7],[9,-10,-7,7,4,9,10,1,6,-8,-6,9,8,7,3,3],[-6,-10,3,-6,-3,-1,8,-8,4,1,7,-1,9,5,1,-4],[10,10,9,2,-3,-4,7,-3,-8,-10,-6,1,10,-7,-3,8],[5,9,-7,6,2,-1,2,9,-2,-6,-1,-6,-3,1,-6,-1],[8,4,9,-5,10,1,10,3,-8,-10,7,9,9,-10,-9,-5],[-9,2,9,-10,-1,-2,-10,3,-5,8,-9,6,6,-4,-4,-4],[7,2,3,-2,2,7,8,-1,-5,7,-7,3,-8,10,5,5],[-10,-6,9,-9,-4,5,8,-7,9,6,-8,9,3,7,3,-10]],[[1,6,-5,-2,-3,3,7,6,-7,-9,-9,-10,-8,-2,1,4],[9,-1,-6,7,4,-3,-1,6,-9,-2,5,-5,-9,6,1,1],[9,-8,8,4,-5,-2,6,-4,-5,5,8,-7,-7,6,-2,-1],[10,-7,5,10,-10,8,-2,-1,9,-9,6,-4,8,2,-7,-2],[-2,-3,2,-9,-6,8,-1,5,5,-9,-1,-3,-2,-10,5,6],[-2,-6,-2,9,-4,-6,-6,-7,6,-1,8,7,-6,-9,-10,2],[-1,8,-3,-3,-4,2,-1,-10,-4,5,4,1,10,4,-2,2],[3,9,7,-5,-3,10,7,-1,2,4,-10,7,-5,-10,5,2],[-3,8,-5,10,1,1,3,-2,8,10,-10,-7,-8,-4,8,3],[-1,1,5,5,5,-5,-8,3,4,5,2,1,-1,-3,4,-10],[8,-2,-7,10,-3,-10,3,-10,-1,-2,-8,-3,9,8,3,-8],[-1,7,-7,2,3,2,7,4,8,-1,9,5,-1,1,1,6],[-2,-2,9,9,-7,-9,-3,-4,-8,-7,-10,-5,5,4,7,-2],[4,-6,-9,6,-7,2,-7,3,3,2,-4,2,-5,7,-8,-1],[-4,-7,3,9,-10,4,-7,-3,-8,-4,6,-4,-4,-2,-2,5]],[[9,9,7,6,10,5,6,10,4,8,9,10,-5,-6,-5,-2],[-4,10,2,-7,5,-2,9,-7,-5,3,-7,7,-5,-8,3,7],[-3,-7,3,7,-7,9,10,-10,-10,-9,8,-10,9,5,8,-9],[1,5,-1,1,1,3,7,6,-6,6,-9,9,4,9,-8,-4],[4,4,-4,-5,-7,8,-4,3,7,6,-8,5,-8,6,3,-6],[1,-4,5,2,10,5,-2,3,-10,7,-3,1,-7,9,7,6],[-3,3,-2,9,-4,-3,5,-8,-7,4,-9,1,-2,-5,6,-8],[-2,7,5,5,10,-8,3,1,-2,10,-10,5,-3,-4,2,8],[-3,9,8,-9,-1,3,-2,-6,9,-6,-6,4,3,-8,10,-10],[-10,-10,2,-7,4,-7,-6,3,-8,6,-3,-5,8,3,1,10],[-4,-10,-10,9,8,-4,-8,10,7,-2,-8,-7,2,6,-3,5],[-7,-4,-1,-2,-1,-3,-3,-7,-1,-1,5,5,5,-3,6,-6],[2,-3,-2,-1,-1,-2,-9,9,7,7,7,1,3,-10,1,-5],[7,3,-3,2,3,2,-4,-2,-8,-3,2,7,-10,-4,7,2],[-7,3,3,4,1,8,5,-6,-8,10,-5,-5,7,3,-1,8]]], dtype = "int16")#candidate|7679|(10, 15, 16)|const|int16
bop_7680 = relay.subtract(var_7678.astype('int16'), relay.reshape(const_7679.astype('int16'), relay.shape_of(var_7678))) # shape=(10, 15, 16)
output = bop_7680
output2 = bop_7680
func_7689 = relay.Function([var_7678,], output)
mod['func_7689'] = func_7689
mod = relay.transform.InferType()(mod)
mutated_mod['func_7689'] = func_7689
mutated_mod = relay.transform.InferType()(mutated_mod)
var_7690 = relay.var("var_7690", dtype = "int16", shape = (10, 15, 16))#candidate|7690|(10, 15, 16)|var|int16
func_7689_call = mutated_mod.get_global_var('func_7689')
call_7691 = func_7689_call(var_7690)
output = call_7691
func_7692 = relay.Function([var_7690], output)
mutated_mod['func_7692'] = func_7692
mutated_mod = relay.transform.InferType()(mutated_mod)
var_7889 = relay.var("var_7889", dtype = "float64", shape = (2, 12, 7))#candidate|7889|(2, 12, 7)|var|float64
uop_7890 = relay.sinh(var_7889.astype('float64')) # shape=(2, 12, 7)
uop_7893 = relay.exp(uop_7890.astype('float64')) # shape=(2, 12, 7)
func_2566_call = mod.get_global_var('func_2566')
func_2570_call = mutated_mod.get_global_var('func_2570')
var_7896 = relay.var("var_7896", dtype = "uint8", shape = (300,))#candidate|7896|(300,)|var|uint8
call_7895 = func_2566_call(relay.reshape(var_7896.astype('uint8'), [4, 5, 15]), relay.reshape(var_7896.astype('uint8'), [4, 5, 15]), )
call_7897 = func_2566_call(relay.reshape(var_7896.astype('uint8'), [4, 5, 15]), relay.reshape(var_7896.astype('uint8'), [4, 5, 15]), )
bop_7898 = relay.equal(uop_7893.astype('bool'), relay.reshape(uop_7890.astype('bool'), relay.shape_of(uop_7893))) # shape=(2, 12, 7)
uop_7905 = relay.tan(bop_7898.astype('float64')) # shape=(2, 12, 7)
bop_7910 = relay.left_shift(uop_7905.astype('int64'), relay.reshape(uop_7890.astype('int64'), relay.shape_of(uop_7905))) # shape=(2, 12, 7)
uop_7914 = relay.log2(uop_7905.astype('float32')) # shape=(2, 12, 7)
output = relay.Tuple([call_7895,var_7896,bop_7910,uop_7914,])
output2 = relay.Tuple([call_7897,var_7896,bop_7910,uop_7914,])
func_7916 = relay.Function([var_7889,var_7896,], output)
mod['func_7916'] = func_7916
mod = relay.transform.InferType()(mod)
mutated_mod['func_7916'] = func_7916
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7916_call = mutated_mod.get_global_var('func_7916')
var_7918 = relay.var("var_7918", dtype = "float64", shape = (2, 12, 7))#candidate|7918|(2, 12, 7)|var|float64
var_7919 = relay.var("var_7919", dtype = "uint8", shape = (300,))#candidate|7919|(300,)|var|uint8
call_7917 = func_7916_call(var_7918,var_7919,)
output = call_7917
func_7920 = relay.Function([var_7918,var_7919,], output)
mutated_mod['func_7920'] = func_7920
mutated_mod = relay.transform.InferType()(mutated_mod)
var_7958 = relay.var("var_7958", dtype = "float64", shape = (12, 1))#candidate|7958|(12, 1)|var|float64
var_7959 = relay.var("var_7959", dtype = "float64", shape = (12, 1))#candidate|7959|(12, 1)|var|float64
bop_7960 = relay.mod(var_7958.astype('float64'), relay.reshape(var_7959.astype('float64'), relay.shape_of(var_7958))) # shape=(12, 1)
output = relay.Tuple([bop_7960,])
output2 = relay.Tuple([bop_7960,])
func_7968 = relay.Function([var_7958,var_7959,], output)
mod['func_7968'] = func_7968
mod = relay.transform.InferType()(mod)
var_7969 = relay.var("var_7969", dtype = "float64", shape = (12, 1))#candidate|7969|(12, 1)|var|float64
var_7970 = relay.var("var_7970", dtype = "float64", shape = (12, 1))#candidate|7970|(12, 1)|var|float64
output = func_7968(var_7969,var_7970,)
func_7971 = relay.Function([var_7969,var_7970,], output)
mutated_mod['func_7971'] = func_7971
mutated_mod = relay.transform.InferType()(mutated_mod)
var_8110 = relay.var("var_8110", dtype = "float32", shape = (3, 16, 4))#candidate|8110|(3, 16, 4)|var|float32
var_8111 = relay.var("var_8111", dtype = "float32", shape = (3, 16, 4))#candidate|8111|(3, 16, 4)|var|float32
bop_8112 = relay.power(var_8110.astype('float32'), relay.reshape(var_8111.astype('float32'), relay.shape_of(var_8110))) # shape=(3, 16, 4)
output = relay.Tuple([bop_8112,])
output2 = relay.Tuple([bop_8112,])
func_8115 = relay.Function([var_8110,var_8111,], output)
mod['func_8115'] = func_8115
mod = relay.transform.InferType()(mod)
var_8116 = relay.var("var_8116", dtype = "float32", shape = (3, 16, 4))#candidate|8116|(3, 16, 4)|var|float32
var_8117 = relay.var("var_8117", dtype = "float32", shape = (3, 16, 4))#candidate|8117|(3, 16, 4)|var|float32
output = func_8115(var_8116,var_8117,)
func_8118 = relay.Function([var_8116,var_8117,], output)
mutated_mod['func_8118'] = func_8118
mutated_mod = relay.transform.InferType()(mutated_mod)
var_8349 = relay.var("var_8349", dtype = "float32", shape = (16, 11, 8))#candidate|8349|(16, 11, 8)|var|float32
uop_8350 = relay.asinh(var_8349.astype('float32')) # shape=(16, 11, 8)
func_6871_call = mod.get_global_var('func_6871')
func_6873_call = mutated_mod.get_global_var('func_6873')
const_8368 = relay.const([-5,2,1,-7,-2,-8,-2,8,-6,-6,-9,-1,-1,4,-5,-8,4,-10,7,3,10,-8,-6,6,7,9,8,6,2,3,-3,-8,10,-1,7,6,-7,4,3,7,10,5,-7,9,1,7,-2,10,-2,9,-6,9,-1,7,2,3,10,-2,-9,6,-3,-1,-7,7,1,-9,2,8,-10,5,-9,-4,6,-7,6,-2,-8,4,-3,3,8,1,-9,-3,-6,-10,7,-5,1,8,5,6,5,7,2,4,-1,10,-5,-10,1,5,4,-3,-2,-2,-2,-10,-2,-7,-10,-4,7,2,9,7,2,10,-2,2,-5,-2,-5,-4,-3,1,5,4,-1,7,8,10,6,5,4,-3,-4,-3,-9,-7], dtype = "uint8")#candidate|8368|(140,)|const|uint8
call_8367 = relay.TupleGetItem(func_6871_call(relay.reshape(const_8368.astype('uint8'), [5, 14, 2])), 0)
call_8369 = relay.TupleGetItem(func_6873_call(relay.reshape(const_8368.astype('uint8'), [5, 14, 2])), 0)
uop_8370 = relay.acosh(uop_8350.astype('float32')) # shape=(16, 11, 8)
bop_8375 = relay.minimum(uop_8370.astype('int64'), relay.reshape(var_8349.astype('int64'), relay.shape_of(uop_8370))) # shape=(16, 11, 8)
output = relay.Tuple([call_8367,const_8368,bop_8375,])
output2 = relay.Tuple([call_8369,const_8368,bop_8375,])
func_8378 = relay.Function([var_8349,], output)
mod['func_8378'] = func_8378
mod = relay.transform.InferType()(mod)
var_8379 = relay.var("var_8379", dtype = "float32", shape = (16, 11, 8))#candidate|8379|(16, 11, 8)|var|float32
output = func_8378(var_8379)
func_8380 = relay.Function([var_8379], output)
mutated_mod['func_8380'] = func_8380
mutated_mod = relay.transform.InferType()(mutated_mod)
var_8413 = relay.var("var_8413", dtype = "float64", shape = (8, 8, 10))#candidate|8413|(8, 8, 10)|var|float64
uop_8414 = relay.log(var_8413.astype('float64')) # shape=(8, 8, 10)
output = relay.Tuple([uop_8414,])
output2 = relay.Tuple([uop_8414,])
func_8442 = relay.Function([var_8413,], output)
mod['func_8442'] = func_8442
mod = relay.transform.InferType()(mod)
var_8443 = relay.var("var_8443", dtype = "float64", shape = (8, 8, 10))#candidate|8443|(8, 8, 10)|var|float64
output = func_8442(var_8443)
func_8444 = relay.Function([var_8443], output)
mutated_mod['func_8444'] = func_8444
mutated_mod = relay.transform.InferType()(mutated_mod)
var_8467 = relay.var("var_8467", dtype = "int16", shape = (15, 8, 16))#candidate|8467|(15, 8, 16)|var|int16
var_8468 = relay.var("var_8468", dtype = "int16", shape = (15, 8, 16))#candidate|8468|(15, 8, 16)|var|int16
bop_8469 = relay.bitwise_or(var_8467.astype('int16'), relay.reshape(var_8468.astype('int16'), relay.shape_of(var_8467))) # shape=(15, 8, 16)
func_2566_call = mod.get_global_var('func_2566')
func_2570_call = mutated_mod.get_global_var('func_2570')
var_8477 = relay.var("var_8477", dtype = "uint8", shape = (300,))#candidate|8477|(300,)|var|uint8
call_8476 = func_2566_call(relay.reshape(var_8477.astype('uint8'), [4, 5, 15]), relay.reshape(var_8477.astype('uint8'), [4, 5, 15]), )
call_8478 = func_2566_call(relay.reshape(var_8477.astype('uint8'), [4, 5, 15]), relay.reshape(var_8477.astype('uint8'), [4, 5, 15]), )
output = relay.Tuple([bop_8469,call_8476,var_8477,])
output2 = relay.Tuple([bop_8469,call_8478,var_8477,])
func_8486 = relay.Function([var_8467,var_8468,var_8477,], output)
mod['func_8486'] = func_8486
mod = relay.transform.InferType()(mod)
var_8487 = relay.var("var_8487", dtype = "int16", shape = (15, 8, 16))#candidate|8487|(15, 8, 16)|var|int16
var_8488 = relay.var("var_8488", dtype = "int16", shape = (15, 8, 16))#candidate|8488|(15, 8, 16)|var|int16
var_8489 = relay.var("var_8489", dtype = "uint8", shape = (300,))#candidate|8489|(300,)|var|uint8
output = func_8486(var_8487,var_8488,var_8489,)
func_8490 = relay.Function([var_8487,var_8488,var_8489,], output)
mutated_mod['func_8490'] = func_8490
mutated_mod = relay.transform.InferType()(mutated_mod)
const_8685 = relay.const([[[9.318673,1.935708,5.803747,5.777090,-5.410568,-6.381482],[7.183085,-7.455912,2.454050,7.540655,-8.435247,3.648337],[-0.434618,9.475418,-8.103081,2.342740,6.199975,5.569735],[-4.976175,-2.649443,6.397703,9.430759,-9.693273,3.741119]],[[-2.841786,7.237952,-2.188073,-0.406319,-2.292078,0.906290],[-2.533150,3.875592,-1.175477,-7.312448,2.516665,4.436190],[-1.683592,3.106180,-1.050713,-5.132390,-8.111674,-3.814574],[-7.342114,9.314828,-3.296025,-0.576451,1.486563,0.367401]],[[-5.965486,-1.882628,-7.719840,-3.121674,-6.822907,9.404184],[-4.105143,-4.691895,9.895836,-9.381438,4.199181,6.784262],[-2.219901,-4.205629,9.049775,2.968288,9.407687,0.744108],[-0.318446,-2.268457,-9.758236,8.004182,-4.264242,5.822599]],[[-3.743048,6.507704,2.680139,-6.066798,-5.418128,9.541748],[-5.824580,7.612943,-8.599439,0.616605,9.149310,-6.568011],[-8.935979,-1.877221,4.974204,-6.426879,9.944138,9.882936],[-5.805190,9.119814,-2.392366,-2.230109,9.989666,-0.128809]],[[0.839415,-2.978155,-0.283846,-0.796051,9.400026,6.959498],[-5.030313,-7.493774,0.735501,-1.112276,6.844967,7.158190],[-1.308527,-7.665998,1.120523,5.536995,4.545048,7.502906],[-8.705383,-0.841362,2.207639,-9.288650,0.785815,1.686001]],[[-2.143432,3.645946,4.366564,5.363194,-2.586080,-4.804376],[5.244512,-7.654622,9.317620,-3.997336,5.819796,5.235577],[-0.790081,-6.832151,3.990134,-1.006875,5.007105,2.597680],[-9.596591,-4.435661,6.371539,1.685970,0.571633,8.023478]],[[4.046836,-3.856443,-9.172015,9.272012,-4.695588,-6.641331],[-1.651630,4.485159,-6.775309,-9.052362,-4.761935,-2.461471],[7.586171,-1.824746,7.504253,-0.018916,1.207902,-2.533382],[-9.654939,-7.664603,7.772721,-3.988708,4.884039,-6.078698]],[[1.050541,6.933866,8.024693,3.239669,8.557784,3.751066],[0.233817,7.111528,7.043495,-0.046983,-9.789007,-2.465362],[3.325054,4.345981,-9.264434,4.307226,-7.686247,5.112262],[-9.820505,9.876103,-5.139284,-0.071107,-6.480487,-2.428546]],[[8.738655,2.155733,3.176618,-1.408899,1.437455,-9.380585],[6.795395,2.423680,-2.765712,3.680114,4.105299,-6.736372],[-4.354495,7.587822,-8.940426,-9.743481,-3.625810,9.381826],[3.661674,-4.748158,5.468245,-9.367420,-5.526488,8.367863]],[[1.873453,2.941261,7.858176,-2.434599,3.797446,-0.731392],[-9.292045,5.552070,-4.389657,-9.875520,-3.843035,-4.804106],[2.001387,-9.445453,-0.625428,-5.433416,0.573621,-2.500289],[0.399802,-4.627947,-7.825383,3.437007,2.871243,2.886142]],[[0.790609,3.483953,2.057052,-1.763272,-7.627141,-1.023841],[-0.430172,-5.878502,4.841725,-6.709980,-1.658934,1.665359],[3.199692,7.120654,3.262019,-1.720061,-7.988987,3.262286],[-5.949529,1.897239,-0.874574,3.241330,-8.727411,-8.848132]],[[3.440719,8.409143,6.218885,-8.354474,7.620915,0.123313],[6.578026,8.879806,7.939029,1.208027,-2.005970,4.410959],[-2.841325,3.431305,-3.098536,-4.085620,-2.280509,4.697364],[-3.794665,-2.996598,3.355689,0.521757,-6.062935,2.184993]]], dtype = "float32")#candidate|8685|(12, 4, 6)|const|float32
uop_8686 = relay.sigmoid(const_8685.astype('float32')) # shape=(12, 4, 6)
func_3680_call = mod.get_global_var('func_3680')
func_3683_call = mutated_mod.get_global_var('func_3683')
const_8713 = relay.const([[-9.152306],[6.314885],[-1.635604],[7.157144],[2.191801],[0.788763],[7.336875],[-0.900664],[2.859837],[-5.751198],[3.594372],[-8.566264],[-3.051319],[3.929284],[-0.997340],[-4.615721],[-0.841466],[1.100829],[-9.571571],[6.785214],[1.325206],[8.537296],[-7.352888],[4.991538],[-4.942054],[-0.569158],[8.415291],[-8.638644],[-0.446774],[8.218456],[1.812300],[2.744948],[9.556715],[5.666068],[-0.752978],[-0.005439],[4.865951],[-8.319413],[7.599391],[-3.180263],[7.622504],[1.436050],[3.029044],[-0.255003],[5.386725],[5.577990],[1.057485],[-3.054252],[7.199236],[4.757204],[8.024403],[5.726895],[7.594021],[-2.946364],[6.768984],[-7.161817],[-0.063712],[6.463073],[2.401123],[8.327304],[5.246045],[-7.838190],[-4.776916],[-8.889759],[-0.836460],[7.365313],[5.042746],[-4.516519],[-1.376390],[8.544976],[8.857825],[-5.743040],[3.939802],[-2.983636],[9.400736],[5.619659],[-9.043843],[-2.817509],[-8.030750],[-1.148097],[-9.641707],[-8.741273],[-4.806346],[-6.737178],[-9.593901],[-2.959497],[-2.592780],[7.064636],[-6.345897],[-7.041222],[5.232130],[6.792420],[9.574204],[-0.602920],[-7.360332],[-7.554722],[-0.343529],[-4.003499],[-3.351481],[9.811458],[-1.876167],[-0.458708],[-7.704761],[-7.176297],[1.531515],[9.506464],[-2.953783],[-8.852232],[-0.379520],[7.480005],[7.154100],[1.258577],[8.815617],[-8.340814],[-3.604642],[-0.254581],[5.864452],[8.038034],[-5.495298],[6.281020],[6.573951],[-0.090735],[9.519650],[8.175827],[-8.481415],[-8.859727],[8.889299],[4.536271],[0.667670],[-8.464504],[-5.956667],[-7.578149],[9.789950],[9.999902],[5.369304],[-1.511364],[3.080422],[-5.378619],[8.110596],[-3.831952],[-0.211205],[-5.145339],[-9.281185],[-5.908592],[4.592270],[-4.315852],[6.979161],[-3.988269],[-7.444914],[-9.841207],[-2.467807],[-0.897557],[-0.995757],[-3.500729],[7.571298],[8.294318],[8.970355],[3.000778],[1.839685],[4.243225],[-8.201531],[-9.415429],[-8.673680],[-3.914581],[4.116178],[-0.842682],[5.716253],[8.049304],[9.963647],[-3.356443],[0.941334],[-9.641065],[2.096251],[-4.648817],[-2.077189],[5.878898],[5.213417],[-5.468788],[-8.618755],[4.644559],[-6.669344],[8.453367],[-8.556608],[9.890947],[-4.529000],[-7.074411],[5.559050],[-6.288010],[-4.489179],[7.020276],[-1.963101],[8.242261],[4.493147],[6.163961],[5.660630],[2.500621],[-0.664077],[3.995398],[3.826925],[-6.747513],[-6.624328],[3.579476],[-1.158701],[-3.479727],[7.707577],[2.214972],[6.575356],[9.002777],[-9.034562],[-9.497523],[1.384065],[3.810479],[6.302774],[0.710159],[7.940390],[-7.669450],[-1.381160],[1.601269],[-6.743202],[-3.229316],[-1.044168],[3.685668],[-6.159751],[-6.362927],[-3.529437],[-3.162538],[-9.502480],[8.030241],[5.888626],[-0.091293],[4.939706],[-0.973496],[4.177781],[-8.498355],[-1.128729],[0.457406],[-4.651939],[-6.527548],[0.557629],[4.437779],[2.938138],[-6.988830],[-5.543666],[9.801672],[-2.099496],[-1.296768],[6.113422],[0.299274],[3.722238],[-1.315873],[-9.491776],[-6.853784],[-2.799511],[-3.539609],[7.748820],[4.723507],[5.059152],[-9.701016],[-8.098149],[7.584324],[1.662955],[-6.402890],[1.841481],[4.130434],[5.745022],[-8.264640],[2.864041],[-1.715417],[8.943220],[-2.672402],[-0.023897],[6.038254],[5.615835],[1.873673],[-0.748190],[-6.317676],[5.995579],[-6.390556],[-7.761001],[8.037926],[8.060926],[-5.385918],[-8.522880],[-8.739943],[3.897642],[-9.948672],[5.122892],[2.211487],[6.770299],[-4.530838],[-3.897890],[2.682206],[0.030573],[-2.135857],[-5.792030],[0.730265],[1.910385],[-4.926656],[-6.260220],[0.578560],[3.054042],[8.304064],[4.452616],[1.695913],[-2.609634],[-3.549080],[-5.648912],[-1.462419],[4.299316],[-1.116963],[-5.989979],[0.344594],[9.208779],[4.098831],[8.180703],[7.666664],[-9.447696],[6.177811],[7.934095],[-4.226178],[-3.586509],[-4.715553],[-1.047604],[-9.189828],[3.792439],[4.238411],[-0.490517],[6.078311],[0.383781],[8.695843],[1.175770],[1.146811],[1.167627],[-4.372488],[-7.578851],[-1.648045],[3.446607],[5.856188],[4.869460],[-0.739250],[-8.780180],[-7.045712],[-6.712925],[-8.977042],[-1.939900],[-8.230035],[-0.869822],[2.696719],[-2.493826],[1.253705],[-7.570897],[9.302760],[-1.182222],[-9.467697],[-9.255608],[5.303050],[-4.947950],[3.730660],[0.734550],[-2.039377],[8.362279],[-3.490273],[7.342922],[-0.869360],[9.537629],[-2.767310],[5.114775],[7.594578],[-4.390375],[-4.338961],[-9.064474],[-5.278420],[1.617151],[-4.115574],[4.000366],[6.378692],[0.669626],[9.912552],[8.065813],[1.805752],[2.439686],[8.791206],[8.575364],[-0.823637],[-7.266044],[9.588769],[-5.304659],[4.164627],[1.160368],[1.257951],[2.440358],[-1.311512],[-5.764176],[7.041081],[9.901304],[-3.799707],[-6.031770],[2.417632],[-4.779902],[4.455548],[-6.512079],[-4.550201],[-0.512889],[4.862929],[0.930994],[0.273660],[5.972592],[0.939728],[1.239454],[5.017699],[1.546093],[0.399690],[1.321536],[-1.077439],[-4.656201],[-4.115316],[-5.858306],[-1.009711],[2.045369],[-7.437401],[-9.547108],[0.162906],[5.571553],[4.586348],[4.859207],[7.412235],[-3.893210],[-3.006807],[-6.638214],[0.800534],[-0.932016],[8.103535],[-0.853332],[-6.260920],[9.354079],[-2.655154],[-1.622385],[2.151120],[3.162956],[-1.338851],[-8.540299],[0.930550],[-8.890200],[-1.176358],[-4.345560],[1.454555],[-1.701610],[3.192629],[-6.343535],[-8.918375],[1.847567],[6.672950],[-0.433334],[9.548691],[5.488202],[-7.617226],[-0.514469],[-1.140238],[7.424771],[7.029117],[4.322375],[-7.829782],[2.728458],[-9.882554],[9.315504],[-7.624821],[-2.370808],[-2.723679],[-7.738138],[-7.079926],[8.298318],[8.837049],[-0.212717],[-0.425255],[3.174924],[-4.366983],[1.429851],[-5.816544],[-3.832830],[-8.413057],[8.040504],[-7.821851],[0.192053],[-5.392123],[7.184010],[7.061812],[9.311676],[-2.675443],[8.049028],[5.816026],[-5.226644],[9.471434],[-9.882778],[-0.984772],[-2.336239],[7.003943],[3.320288],[5.797708],[-6.246134],[1.428428],[-2.255228],[7.708255],[3.197221],[-0.231014],[-5.339606],[1.890751],[4.246670],[-4.559204],[-0.808884],[-7.893758],[-6.648125],[-2.890815],[-7.825693],[-0.048177],[9.717612],[-0.438367],[-2.477145],[6.841786],[5.026921],[-9.235295],[1.294546],[-3.057666],[-2.868888],[3.489481],[4.760598],[-6.559848],[2.250672],[-1.100190],[-5.051566],[-2.796072],[-1.880832],[-9.878588],[-7.275433],[-9.705730],[3.744703],[-6.108411],[2.863185],[9.278475],[4.225259]], dtype = "float32")#candidate|8713|(539, 1)|const|float32
var_8714 = relay.var("var_8714", dtype = "int32", shape = (8, 66))#candidate|8714|(8, 66)|var|int32
call_8712 = relay.TupleGetItem(func_3680_call(relay.reshape(const_8713.astype('float32'), [7, 11, 7]), relay.reshape(var_8714.astype('int32'), [528,]), ), 0)
call_8715 = relay.TupleGetItem(func_3683_call(relay.reshape(const_8713.astype('float32'), [7, 11, 7]), relay.reshape(var_8714.astype('int32'), [528,]), ), 0)
output = relay.Tuple([uop_8686,call_8712,const_8713,var_8714,])
output2 = relay.Tuple([uop_8686,call_8715,const_8713,var_8714,])
func_8726 = relay.Function([var_8714,], output)
mod['func_8726'] = func_8726
mod = relay.transform.InferType()(mod)
var_8727 = relay.var("var_8727", dtype = "int32", shape = (8, 66))#candidate|8727|(8, 66)|var|int32
output = func_8726(var_8727)
func_8728 = relay.Function([var_8727], output)
mutated_mod['func_8728'] = func_8728
mutated_mod = relay.transform.InferType()(mutated_mod)
var_9044 = relay.var("var_9044", dtype = "float64", shape = (10, 6, 6))#candidate|9044|(10, 6, 6)|var|float64
uop_9045 = relay.sqrt(var_9044.astype('float64')) # shape=(10, 6, 6)
func_2566_call = mod.get_global_var('func_2566')
func_2570_call = mutated_mod.get_global_var('func_2570')
const_9055 = relay.const([-4,7,9,10,-5,-7,-7,-1,6,-10,-2,-10,9,3,6,9,1,5,7,9,2,-4,-4,-5,6,-9,-2,-5,-2,-10,-10,-10,6,-10,1,-6,-5,3,5,8,-5,10,-7,-8,-5,7,9,6,-3,8,-8,-10,-5,2,2,3,-8,-7,-10,-6,-3,-10,-10,-10,5,-10,4,-7,2,-1,3,4,-7,-8,3,-1,7,-3,-8,-4,10,-9,6,3,9,-4,10,-6,6,3,10,-8,-7,-5,-3,-9,5,-7,-6,-8,-6,9,-8,-4,-1,-6,3,7,4,-5,3,9,-4,8,9,-6,8,-3,-10,-5,-4,-3,2,6,-4,-4,-7,-4,1,2,7,9,5,6,-8,8,9,-8,-1,-10,5,1,-8,4,6,1,6,-3,-1,8,-9,9,10,-2,4,-6,-5,-3,-2,4,5,-1,5,-3,2,-4,-10,10,2,2,3,5,5,-1,-4,-2,10,1,-9,2,6,2,-2,-9,-4,2,-9,5,6,-10,3,-1,-7,-8,7,-8,9,2,-4,-6,9,6,-7,-3,-9,5,-5,4,-9,8,6,8,6,7,-8,-8,2,-9,7,2,-3,9,-1,9,9,5,-3,-1,2,9,-2,1,3,1,-9,9,9,-9,-4,2,8,-1,10,-2,-1,-4,-1,4,-4,5,1,-7,-3,3,-7,-3,2,-7,-5,9,-1,-8,10,6,1,7,-7,-2,-1,8,-8,4,-4,-6,-10,-6,8,3,9,1,-3,2,3,2,9,-3,-2,8,-7,-6,7,-8,-7,-10,4,-6,10,-9,-2,-10], dtype = "uint8")#candidate|9055|(300,)|const|uint8
call_9054 = func_2566_call(relay.reshape(const_9055.astype('uint8'), [4, 5, 15]), relay.reshape(const_9055.astype('uint8'), [4, 5, 15]), )
call_9056 = func_2566_call(relay.reshape(const_9055.astype('uint8'), [4, 5, 15]), relay.reshape(const_9055.astype('uint8'), [4, 5, 15]), )
func_7968_call = mod.get_global_var('func_7968')
func_7971_call = mutated_mod.get_global_var('func_7971')
const_9060 = relay.const([-4.381497,9.688736,-2.198623,-3.963500,5.094636,-7.939971,-7.564001,0.391321,-2.127995,2.706396,4.048280,-7.857017], dtype = "float64")#candidate|9060|(12,)|const|float64
call_9059 = relay.TupleGetItem(func_7968_call(relay.reshape(const_9060.astype('float64'), [12, 1]), relay.reshape(const_9060.astype('float64'), [12, 1]), ), 0)
call_9061 = relay.TupleGetItem(func_7971_call(relay.reshape(const_9060.astype('float64'), [12, 1]), relay.reshape(const_9060.astype('float64'), [12, 1]), ), 0)
func_7302_call = mod.get_global_var('func_7302')
func_7306_call = mutated_mod.get_global_var('func_7306')
const_9069 = relay.const([[-1.687108,-2.856030,2.509353,-9.793742,-6.710229,-0.401905,7.032448,4.549405,4.551718,9.238248,4.312037,-8.221055,9.209755,-4.005702,0.143233,2.913860,-0.914610,6.343410,8.878773,-4.585740,-3.745447,9.573529,-9.528583,9.701860,1.030174,0.243702,1.847858,-1.238629,2.372246,9.914912,-0.126187,-3.860666,-1.155540,-0.483024,-8.030189,9.866046,4.456720,-3.190556,-5.496354,0.778905,-0.728055,-4.053783,-8.456533,4.479352,-2.016048,2.886760,9.806980,9.530034,5.404490,0.220112,-8.502575,-1.697992,-0.226400,5.042357,-3.005434,-5.812492,-3.331825,0.302265,3.376956,-7.430998,7.359383,-2.388551,-8.122787,-8.696955,-3.642046,5.144480,-1.007934,-2.611867,-1.452901,7.175494,4.801076,6.834894,4.028418,-9.148635,4.915770,-5.915715,-8.314955,3.614186,-4.886504,2.859609,-2.220376,-6.655168,-2.745518,7.463192,-1.495577,-5.987026,-5.266762,3.328999,-2.370851,-2.842527,4.291918,-7.933748,2.451243,-2.928475,5.400439,-2.810324,-2.261405,-8.238098,-3.650596,9.899754,6.171923,-3.360941,1.828189,9.135261,2.406565,-6.535304,-2.957966,0.403067,-2.238705,3.374455,5.862502,3.162179,-3.475116,-9.357681,5.474432,-7.100804,9.398079,-2.444657,-3.386218,-4.797350,6.365811,-6.660139,1.737242,-9.042602,3.848819,1.746974,8.435074,-4.717747,9.808753,-7.145291,-6.851049,9.759695,2.669508,7.981694,4.930687,-2.335886,-5.860440,-0.921349,-1.431943,3.901082],[-6.047322,-9.415555,-9.490074,-6.387426,9.474003,-6.152217,1.103599,-7.992142,-8.444664,-9.774709,5.060663,-6.422550,-1.169833,-1.124259,2.305769,-5.784651,-5.292371,-7.617955,-0.350497,-1.058464,8.988947,2.372845,-9.418960,-8.593647,0.848984,-5.625042,7.281017,-9.346176,9.200613,-9.593111,1.608990,1.345322,2.468203,-8.690237,-2.303806,4.920149,9.802078,-3.332029,-3.415301,-2.804434,4.599632,7.768348,-6.003069,-1.621140,-3.890434,-3.464095,-4.640338,5.603013,1.012045,9.974660,1.269862,-2.264191,7.996714,-8.458492,3.033536,-3.379539,-8.288841,1.798858,4.210627,-9.954021,-1.837202,0.280664,-1.638980,-6.914947,-8.197029,8.327957,-5.373888,8.078234,-2.118511,-4.627960,-0.362333,8.866305,-2.856404,4.584715,-8.393921,5.119631,0.722730,8.484845,3.602487,2.137401,0.334662,7.152312,-7.676863,-7.075417,3.063530,-8.309002,2.667134,-4.582508,-4.924940,6.609781,8.957814,4.709890,-8.212899,0.559996,-1.488646,6.420752,8.382637,-6.711458,0.146539,0.505860,3.120211,4.252094,1.341341,-7.221036,7.938461,-7.185013,-0.653016,2.633149,7.154277,-7.858821,-5.223399,1.762990,3.362895,5.279467,-3.943638,6.074625,8.266232,-5.117192,-3.262298,-8.520856,9.529956,-8.295320,0.471485,-0.888451,-2.752281,-0.705374,-5.460250,1.274707,5.210842,4.034804,0.224059,4.500644,7.040628,7.159443,-5.208767,6.795011,-0.810418,2.308915,-6.795840,-2.137899],[9.204299,3.003410,3.639532,2.254172,1.627509,-0.420746,2.386099,6.589413,-4.924907,-6.443364,1.162203,-2.373010,5.280137,8.450950,5.366460,6.660307,-6.230989,-6.427535,0.370169,3.052520,-1.022854,6.183876,9.109509,-3.975886,7.999738,6.189626,2.910474,-7.175580,1.070216,-7.192784,-5.594353,2.857516,-5.266547,-7.519581,1.378476,-9.220730,1.262365,1.296002,2.627905,-9.495657,-9.781605,0.080049,5.460653,5.279080,2.563330,0.753540,8.230253,-7.207846,3.374282,3.341732,-7.435465,-4.209608,5.779976,9.783016,-5.734126,1.895452,9.124550,-4.035476,-8.238182,0.191080,3.080310,2.368847,-1.321704,-1.322594,-4.215532,-7.576841,6.028178,1.527265,7.030189,3.224202,-1.101721,-3.986919,2.363920,3.950147,-6.393307,7.064011,3.649148,-9.637597,3.181042,0.306132,-4.696736,-1.585392,0.974655,-9.143864,-0.496641,-0.061137,-0.458959,-6.258837,5.493212,-8.643514,1.568873,3.438674,-1.332836,-1.941225,-8.528912,-0.449003,0.329997,-4.672066,-5.827674,0.574798,7.852931,5.622150,0.104462,7.229015,6.399314,-2.002765,-9.558324,-9.222777,-8.456892,-1.785635,-6.801643,7.113659,5.490803,-1.194150,6.202660,7.941279,0.819777,-5.191001,-0.656971,4.301356,6.476937,-0.425640,6.448445,9.634844,1.166798,-4.970975,-0.752688,-3.352042,-1.544751,4.517052,-7.495100,-8.815070,6.480445,-7.755041,-2.635136,-7.241520,-6.300861,0.917075,2.550587,0.261763],[-7.493670,-4.478584,4.671909,9.969029,-1.677359,4.793812,2.363637,-6.223877,0.530190,-7.828051,2.163920,0.473870,-3.752629,6.575347,7.383598,-3.380687,1.305462,-2.259688,5.300905,-5.299748,-2.414600,3.417075,7.815873,8.371901,-8.369143,-4.780617,-5.325726,9.091931,8.621749,-6.041188,5.545880,-4.075504,7.445666,-3.822440,-7.668361,-8.972108,-4.245498,-0.437156,-5.360601,-3.663389,-2.634052,-4.136558,9.362939,3.754059,-0.693172,9.842600,-3.451035,-2.307935,4.426532,6.389883,1.746580,-4.753105,0.045799,5.956475,-0.327792,-7.630533,7.629141,0.193280,8.141937,1.790893,-4.270916,6.474219,-8.646433,2.479729,-4.489029,-5.487555,-8.094600,-0.391358,4.600576,4.811434,2.719550,-3.815187,-8.303929,5.113341,-9.112871,-0.599645,-3.969740,-1.163908,8.952293,-3.542448,-5.770700,-8.281832,7.401779,-7.952509,-0.210880,4.200547,5.425674,-1.453945,6.007180,9.928109,-5.253080,3.504998,-8.929735,-3.234761,8.796381,5.841730,0.003617,-5.220131,-7.440264,3.246935,4.911470,6.914877,1.319199,-8.848334,6.584842,-0.421058,8.791518,-0.583804,7.112512,-6.913795,2.519488,-6.967633,5.328477,-1.071238,5.820695,-1.662275,-3.603537,-9.279834,-6.720766,-5.731157,-5.897922,0.769704,-6.596464,0.826229,-4.339422,-6.467108,-3.904823,-4.289500,-1.124972,2.144398,2.923849,-8.746421,4.332178,9.675920,7.304215,-5.176858,-6.496374,-3.802304,5.083159,2.155039],[4.483991,-2.400888,-6.106350,8.391762,3.701390,6.322834,-2.960176,-1.141239,-4.674562,1.298790,8.269180,0.235208,-2.523147,4.460717,-7.548858,6.145043,-8.260346,2.656357,7.714820,7.962292,3.751777,5.367920,-2.326230,-3.905053,9.612847,4.361041,3.208863,-9.887627,-7.963334,2.496365,-0.620886,-3.424304,-0.238310,-4.103508,-5.979825,-7.726214,-3.607761,9.370398,7.282197,5.479675,-1.475741,-1.121171,5.313109,1.237428,-6.490593,-1.327056,7.048673,7.036519,-2.148311,9.535088,-9.609503,3.907048,3.402566,3.073350,-5.505931,9.569861,9.314566,-0.492579,8.385106,-2.812846,-7.689109,-9.391477,0.583179,-9.177958,2.724543,-7.994601,4.692788,-6.062586,7.189927,-4.070332,-9.008663,-1.338237,5.400350,3.669500,-3.364843,-6.386616,-3.318538,-1.381731,-0.487973,-7.547564,6.945844,3.868641,-7.038743,8.635933,-1.537221,3.758392,-3.292613,-1.397694,-8.620714,-8.511807,-7.561160,8.900719,4.899428,-3.516748,-3.213196,-6.766103,-9.281556,9.222001,7.993946,-0.252201,-8.913156,2.986380,2.267613,-5.976424,5.573668,-6.503269,4.610814,-5.775460,6.042055,-2.985830,5.205037,8.541053,1.554453,-0.245830,-1.302443,-2.755483,-8.130503,6.871528,7.168511,5.627269,-6.400944,-6.052245,-2.445232,-6.901530,-2.180074,5.471793,1.520998,7.695093,2.773532,-3.624194,-5.373402,-7.583673,-1.388676,-2.278004,7.134804,-1.879228,0.262889,5.212803,9.369820,1.203075],[7.671792,-6.210039,-1.600508,1.483836,1.693999,4.107713,-3.061964,5.862919,2.459411,-4.291180,9.959628,-6.530230,-3.421132,-8.483164,3.525279,4.198807,8.471594,-3.805276,0.058280,2.545966,8.777130,-2.264521,2.563472,-5.159014,2.408453,2.683420,9.378599,1.503081,-8.267479,7.703996,8.442045,-4.539569,-6.882500,-9.391359,-7.268919,4.787171,-0.771915,3.552804,8.350404,-1.488766,-2.414771,0.701404,9.090548,6.595112,2.108822,-4.229675,1.844637,5.469904,2.021442,0.560542,7.866328,0.863094,-5.658523,4.577343,-4.458309,-2.396368,-0.919629,-8.712195,-5.522059,1.242572,-5.024926,3.738384,-5.912890,-2.963231,-0.840388,8.950689,-4.247964,-4.941793,5.755200,-3.583889,3.619824,-1.664541,-8.642812,-2.413558,2.181175,-4.110335,0.255683,1.646480,-8.268356,8.492260,-7.230462,1.411108,7.681098,5.879788,3.504955,-1.835204,5.814506,-6.610556,7.488937,-0.306163,-0.887660,-4.186051,-8.431888,1.501783,0.979374,-2.426402,7.759539,-0.806659,2.653293,6.552535,5.781524,3.841867,5.730420,3.527396,-7.672015,5.098695,-8.109279,-4.574210,0.045806,-2.978442,-2.220393,-3.658812,-2.218475,-6.728767,2.496710,-0.289649,3.903370,2.741888,-7.116268,0.543967,-6.285025,3.033340,3.594175,-3.297353,-2.701676,8.549973,2.046605,-2.271269,4.809160,4.284869,0.100368,8.485300,4.524019,6.189745,4.437605,7.015676,9.661702,2.079434,-4.120786,0.214428]], dtype = "float32")#candidate|9069|(6, 140)|const|float32
var_9070 = relay.var("var_9070", dtype = "float32", shape = (1800,))#candidate|9070|(1800,)|var|float32
call_9068 = relay.TupleGetItem(func_7302_call(relay.reshape(const_9069.astype('float32'), [15, 8, 7]), relay.reshape(var_9070.astype('float32'), [1800,]), ), 3)
call_9071 = relay.TupleGetItem(func_7306_call(relay.reshape(const_9069.astype('float32'), [15, 8, 7]), relay.reshape(var_9070.astype('float32'), [1800,]), ), 3)
output = relay.Tuple([uop_9045,call_9054,const_9055,call_9059,const_9060,call_9068,const_9069,var_9070,])
output2 = relay.Tuple([uop_9045,call_9056,const_9055,call_9061,const_9060,call_9071,const_9069,var_9070,])
func_9089 = relay.Function([var_9044,var_9070,], output)
mod['func_9089'] = func_9089
mod = relay.transform.InferType()(mod)
mutated_mod['func_9089'] = func_9089
mutated_mod = relay.transform.InferType()(mutated_mod)
func_9089_call = mutated_mod.get_global_var('func_9089')
var_9091 = relay.var("var_9091", dtype = "float64", shape = (10, 6, 6))#candidate|9091|(10, 6, 6)|var|float64
var_9092 = relay.var("var_9092", dtype = "float32", shape = (1800,))#candidate|9092|(1800,)|var|float32
call_9090 = func_9089_call(var_9091,var_9092,)
output = call_9090
func_9093 = relay.Function([var_9091,var_9092,], output)
mutated_mod['func_9093'] = func_9093
mutated_mod = relay.transform.InferType()(mutated_mod)
const_9418 = relay.const(-8.928718, dtype = "float32")#candidate|9418|()|const|float32
var_9419 = relay.var("var_9419", dtype = "float32", shape = (3, 14, 13))#candidate|9419|(3, 14, 13)|var|float32
bop_9420 = relay.floor_divide(const_9418.astype('float32'), var_9419.astype('float32')) # shape=(3, 14, 13)
output = relay.Tuple([bop_9420,])
output2 = relay.Tuple([bop_9420,])
func_9431 = relay.Function([var_9419,], output)
mod['func_9431'] = func_9431
mod = relay.transform.InferType()(mod)
var_9432 = relay.var("var_9432", dtype = "float32", shape = (3, 14, 13))#candidate|9432|(3, 14, 13)|var|float32
output = func_9431(var_9432)
func_9433 = relay.Function([var_9432], output)
mutated_mod['func_9433'] = func_9433
mutated_mod = relay.transform.InferType()(mutated_mod)
var_9558 = relay.var("var_9558", dtype = "float64", shape = (8, 3, 4))#candidate|9558|(8, 3, 4)|var|float64
var_9559 = relay.var("var_9559", dtype = "float64", shape = (8, 3, 4))#candidate|9559|(8, 3, 4)|var|float64
bop_9560 = relay.floor_mod(var_9558.astype('float64'), relay.reshape(var_9559.astype('float64'), relay.shape_of(var_9558))) # shape=(8, 3, 4)
func_4262_call = mod.get_global_var('func_4262')
func_4265_call = mutated_mod.get_global_var('func_4265')
var_9572 = relay.var("var_9572", dtype = "int32", shape = (224,))#candidate|9572|(224,)|var|int32
call_9571 = relay.TupleGetItem(func_4262_call(relay.reshape(var_9572.astype('int32'), [16, 1, 14])), 0)
call_9573 = relay.TupleGetItem(func_4265_call(relay.reshape(var_9572.astype('int32'), [16, 1, 14])), 0)
output = relay.Tuple([bop_9560,call_9571,var_9572,])
output2 = relay.Tuple([bop_9560,call_9573,var_9572,])
func_9574 = relay.Function([var_9558,var_9559,var_9572,], output)
mod['func_9574'] = func_9574
mod = relay.transform.InferType()(mod)
var_9575 = relay.var("var_9575", dtype = "float64", shape = (8, 3, 4))#candidate|9575|(8, 3, 4)|var|float64
var_9576 = relay.var("var_9576", dtype = "float64", shape = (8, 3, 4))#candidate|9576|(8, 3, 4)|var|float64
var_9577 = relay.var("var_9577", dtype = "int32", shape = (224,))#candidate|9577|(224,)|var|int32
output = func_9574(var_9575,var_9576,var_9577,)
func_9578 = relay.Function([var_9575,var_9576,var_9577,], output)
mutated_mod['func_9578'] = func_9578
mutated_mod = relay.transform.InferType()(mutated_mod)
var_10676 = relay.var("var_10676", dtype = "float32", shape = (3, 11, 10))#candidate|10676|(3, 11, 10)|var|float32
uop_10677 = relay.log2(var_10676.astype('float32')) # shape=(3, 11, 10)
output = uop_10677
output2 = uop_10677
func_10679 = relay.Function([var_10676,], output)
mod['func_10679'] = func_10679
mod = relay.transform.InferType()(mod)
mutated_mod['func_10679'] = func_10679
mutated_mod = relay.transform.InferType()(mutated_mod)
var_10680 = relay.var("var_10680", dtype = "float32", shape = (3, 11, 10))#candidate|10680|(3, 11, 10)|var|float32
func_10679_call = mutated_mod.get_global_var('func_10679')
call_10681 = func_10679_call(var_10680)
output = call_10681
func_10682 = relay.Function([var_10680], output)
mutated_mod['func_10682'] = func_10682
mutated_mod = relay.transform.InferType()(mutated_mod)
var_10863 = relay.var("var_10863", dtype = "float32", shape = (10, 12, 5))#candidate|10863|(10, 12, 5)|var|float32
uop_10864 = relay.erf(var_10863.astype('float32')) # shape=(10, 12, 5)
func_6604_call = mod.get_global_var('func_6604')
func_6610_call = mutated_mod.get_global_var('func_6610')
var_10876 = relay.var("var_10876", dtype = "int16", shape = ())#candidate|10876|()|var|int16
const_10877 = relay.const([[-3,7,-4,-3,-7,2,2,-10,-3,-6,1,-7,3,5,9,9,8,9,-10,-4,-1,-2,-6,-7,5,4,-3,10,8,-9,3,-9,3,3,-10,2,-3,-4,7,6,7,9,2,-5,-5],[7,2,8,-4,1,-10,-7,7,2,5,7,-9,-3,6,-9,-2,-8,4,10,-9,-6,-3,-1,-6,-6,10,-4,-10,8,-5,-6,7,1,-1,9,-1,-10,8,7,-6,-7,-8,5,-8,-5],[-4,-1,-6,2,3,-1,8,1,5,-10,-2,-7,-7,-10,9,-9,-6,-4,3,2,-9,2,-4,-3,-2,-10,-9,-7,-3,-1,-2,-5,-9,5,-7,7,1,1,-2,-6,7,-1,5,3,6]], dtype = "int16")#candidate|10877|(3, 45)|const|int16
var_10878 = relay.var("var_10878", dtype = "int32", shape = (378,))#candidate|10878|(378,)|var|int32
var_10879 = relay.var("var_10879", dtype = "float64", shape = (385,))#candidate|10879|(385,)|var|float64
call_10875 = relay.TupleGetItem(func_6604_call(relay.reshape(var_10876.astype('int16'), []), relay.reshape(const_10877.astype('int16'), [1, 9, 15]), relay.reshape(var_10878.astype('int32'), [378,]), relay.reshape(var_10879.astype('float64'), [55, 7]), ), 1)
call_10880 = relay.TupleGetItem(func_6610_call(relay.reshape(var_10876.astype('int16'), []), relay.reshape(const_10877.astype('int16'), [1, 9, 15]), relay.reshape(var_10878.astype('int32'), [378,]), relay.reshape(var_10879.astype('float64'), [55, 7]), ), 1)
func_7164_call = mod.get_global_var('func_7164')
func_7167_call = mutated_mod.get_global_var('func_7167')
var_10892 = relay.var("var_10892", dtype = "float64", shape = (810,))#candidate|10892|(810,)|var|float64
call_10891 = func_7164_call(relay.reshape(var_10892.astype('float64'), [15, 6, 9]))
call_10893 = func_7164_call(relay.reshape(var_10892.astype('float64'), [15, 6, 9]))
func_6376_call = mod.get_global_var('func_6376')
func_6378_call = mutated_mod.get_global_var('func_6378')
var_10912 = relay.var("var_10912", dtype = "float64", shape = (4, 128))#candidate|10912|(4, 128)|var|float64
call_10911 = relay.TupleGetItem(func_6376_call(relay.reshape(var_10912.astype('float64'), [16, 8, 4])), 0)
call_10913 = relay.TupleGetItem(func_6378_call(relay.reshape(var_10912.astype('float64'), [16, 8, 4])), 0)
output = relay.Tuple([uop_10864,call_10875,var_10876,const_10877,var_10878,var_10879,call_10891,var_10892,call_10911,var_10912,])
output2 = relay.Tuple([uop_10864,call_10880,var_10876,const_10877,var_10878,var_10879,call_10893,var_10892,call_10913,var_10912,])
func_10915 = relay.Function([var_10863,var_10876,var_10878,var_10879,var_10892,var_10912,], output)
mod['func_10915'] = func_10915
mod = relay.transform.InferType()(mod)
var_10916 = relay.var("var_10916", dtype = "float32", shape = (10, 12, 5))#candidate|10916|(10, 12, 5)|var|float32
var_10917 = relay.var("var_10917", dtype = "int16", shape = ())#candidate|10917|()|var|int16
var_10918 = relay.var("var_10918", dtype = "int32", shape = (378,))#candidate|10918|(378,)|var|int32
var_10919 = relay.var("var_10919", dtype = "float64", shape = (385,))#candidate|10919|(385,)|var|float64
var_10920 = relay.var("var_10920", dtype = "float64", shape = (810,))#candidate|10920|(810,)|var|float64
var_10921 = relay.var("var_10921", dtype = "float64", shape = (4, 128))#candidate|10921|(4, 128)|var|float64
output = func_10915(var_10916,var_10917,var_10918,var_10919,var_10920,var_10921,)
func_10922 = relay.Function([var_10916,var_10917,var_10918,var_10919,var_10920,var_10921,], output)
mutated_mod['func_10922'] = func_10922
mutated_mod = relay.transform.InferType()(mutated_mod)
var_10976 = relay.var("var_10976", dtype = "int64", shape = (2, 3, 11))#candidate|10976|(2, 3, 11)|var|int64
var_10977 = relay.var("var_10977", dtype = "int64", shape = (2, 3, 11))#candidate|10977|(2, 3, 11)|var|int64
bop_10978 = relay.less(var_10976.astype('bool'), relay.reshape(var_10977.astype('bool'), relay.shape_of(var_10976))) # shape=(2, 3, 11)
uop_10988 = relay.atan(bop_10978.astype('float32')) # shape=(2, 3, 11)
uop_10990 = relay.rsqrt(uop_10988.astype('float32')) # shape=(2, 3, 11)
output = uop_10990
output2 = uop_10990
func_10993 = relay.Function([var_10976,var_10977,], output)
mod['func_10993'] = func_10993
mod = relay.transform.InferType()(mod)
mutated_mod['func_10993'] = func_10993
mutated_mod = relay.transform.InferType()(mutated_mod)
func_10993_call = mutated_mod.get_global_var('func_10993')
var_10995 = relay.var("var_10995", dtype = "int64", shape = (2, 3, 11))#candidate|10995|(2, 3, 11)|var|int64
var_10996 = relay.var("var_10996", dtype = "int64", shape = (2, 3, 11))#candidate|10996|(2, 3, 11)|var|int64
call_10994 = func_10993_call(var_10995,var_10996,)
output = call_10994
func_10997 = relay.Function([var_10995,var_10996,], output)
mutated_mod['func_10997'] = func_10997
mutated_mod = relay.transform.InferType()(mutated_mod)
var_11332 = relay.var("var_11332", dtype = "float32", shape = (15, 10, 13))#candidate|11332|(15, 10, 13)|var|float32
uop_11333 = relay.exp(var_11332.astype('float32')) # shape=(15, 10, 13)
var_11336 = relay.var("var_11336", dtype = "float32", shape = (15, 10, 13))#candidate|11336|(15, 10, 13)|var|float32
bop_11337 = relay.greater(var_11332.astype('bool'), relay.reshape(var_11336.astype('bool'), relay.shape_of(var_11332))) # shape=(15, 10, 13)
func_6604_call = mod.get_global_var('func_6604')
func_6610_call = mutated_mod.get_global_var('func_6610')
var_11344 = relay.var("var_11344", dtype = "int16", shape = ())#candidate|11344|()|var|int16
var_11345 = relay.var("var_11345", dtype = "int16", shape = (135,))#candidate|11345|(135,)|var|int16
var_11346 = relay.var("var_11346", dtype = "int32", shape = (378,))#candidate|11346|(378,)|var|int32
var_11347 = relay.var("var_11347", dtype = "float64", shape = (55, 7))#candidate|11347|(55, 7)|var|float64
call_11343 = relay.TupleGetItem(func_6604_call(relay.reshape(var_11344.astype('int16'), []), relay.reshape(var_11345.astype('int16'), [1, 9, 15]), relay.reshape(var_11346.astype('int32'), [378,]), relay.reshape(var_11347.astype('float64'), [55, 7]), ), 1)
call_11348 = relay.TupleGetItem(func_6610_call(relay.reshape(var_11344.astype('int16'), []), relay.reshape(var_11345.astype('int16'), [1, 9, 15]), relay.reshape(var_11346.astype('int32'), [378,]), relay.reshape(var_11347.astype('float64'), [55, 7]), ), 1)
uop_11349 = relay.log2(uop_11333.astype('float64')) # shape=(15, 10, 13)
bop_11356 = relay.equal(uop_11349.astype('bool'), relay.reshape(bop_11337.astype('bool'), relay.shape_of(uop_11349))) # shape=(15, 10, 13)
uop_11360 = relay.acosh(bop_11356.astype('float32')) # shape=(15, 10, 13)
func_2566_call = mod.get_global_var('func_2566')
func_2570_call = mutated_mod.get_global_var('func_2570')
var_11365 = relay.var("var_11365", dtype = "uint8", shape = (300,))#candidate|11365|(300,)|var|uint8
call_11364 = func_2566_call(relay.reshape(var_11365.astype('uint8'), [4, 5, 15]), relay.reshape(var_11365.astype('uint8'), [4, 5, 15]), )
call_11366 = func_2566_call(relay.reshape(var_11365.astype('uint8'), [4, 5, 15]), relay.reshape(var_11365.astype('uint8'), [4, 5, 15]), )
output = relay.Tuple([call_11343,var_11344,var_11345,var_11346,var_11347,uop_11360,call_11364,var_11365,])
output2 = relay.Tuple([call_11348,var_11344,var_11345,var_11346,var_11347,uop_11360,call_11366,var_11365,])
func_11367 = relay.Function([var_11332,var_11336,var_11344,var_11345,var_11346,var_11347,var_11365,], output)
mod['func_11367'] = func_11367
mod = relay.transform.InferType()(mod)
var_11368 = relay.var("var_11368", dtype = "float32", shape = (15, 10, 13))#candidate|11368|(15, 10, 13)|var|float32
var_11369 = relay.var("var_11369", dtype = "float32", shape = (15, 10, 13))#candidate|11369|(15, 10, 13)|var|float32
var_11370 = relay.var("var_11370", dtype = "int16", shape = ())#candidate|11370|()|var|int16
var_11371 = relay.var("var_11371", dtype = "int16", shape = (135,))#candidate|11371|(135,)|var|int16
var_11372 = relay.var("var_11372", dtype = "int32", shape = (378,))#candidate|11372|(378,)|var|int32
var_11373 = relay.var("var_11373", dtype = "float64", shape = (55, 7))#candidate|11373|(55, 7)|var|float64
var_11374 = relay.var("var_11374", dtype = "uint8", shape = (300,))#candidate|11374|(300,)|var|uint8
output = func_11367(var_11368,var_11369,var_11370,var_11371,var_11372,var_11373,var_11374,)
func_11375 = relay.Function([var_11368,var_11369,var_11370,var_11371,var_11372,var_11373,var_11374,], output)
mutated_mod['func_11375'] = func_11375
mutated_mod = relay.transform.InferType()(mutated_mod)
const_11398 = relay.const([[[-2.011782,4.453239,-6.172208,2.747083,7.378270,4.203653,-2.721261],[-9.553184,-2.921620,7.735461,7.446116,9.664356,-0.971216,-9.178028],[2.541133,-3.612312,-0.520013,3.492752,-4.389495,-5.193627,6.229432],[3.495999,0.498528,3.706050,1.377625,-9.952141,-6.313621,-8.508710],[1.378010,4.297128,-6.716224,-2.936352,2.020299,3.388869,-9.713312],[1.979190,5.640642,-3.251184,0.355684,-7.287925,-4.548450,3.129782],[-7.472686,-3.163262,-1.818486,-6.075370,4.866374,6.365847,1.359520],[-6.014073,-8.581379,6.583714,-2.794859,-2.089584,6.754691,-9.841965],[1.471026,8.096163,6.731168,8.580678,0.567832,7.450670,-5.273815],[0.745835,0.713431,-9.672812,-2.544536,-3.325196,8.549532,-1.622474],[4.943782,-8.030981,-9.867179,4.221055,5.935001,-5.841504,-2.219390],[1.015072,-0.142504,-1.998702,-7.816537,-5.181110,1.433257,-5.334210],[9.559330,5.379483,1.957939,-0.676603,9.305755,-0.767518,-4.122498],[3.054866,-3.054945,-7.410309,-9.427634,-6.901083,4.320481,3.067858]],[[3.936708,4.272030,-9.709632,-3.084853,-6.320444,5.575629,-1.892535],[2.196648,-4.592106,3.094149,9.629106,-6.160807,5.401893,2.047958],[3.158109,6.743764,-6.548016,0.245296,0.050056,-7.590529,-0.893887],[-0.676041,4.692247,-5.434781,-1.947508,-8.059336,5.215683,1.681703],[-2.311668,0.634086,3.451734,-5.713704,6.884944,-2.887631,6.126714],[-6.758461,4.347756,-9.072808,-0.387727,-4.292147,2.438137,9.593588],[3.431542,1.704518,6.325852,2.199014,4.103013,-5.393828,-2.479086],[4.146973,4.316610,2.732233,-9.898798,-9.940755,-1.450552,-5.932769],[6.497112,-7.749914,-3.120620,-5.252575,-5.431636,5.985377,-6.558337],[-0.895483,-9.764424,-6.331975,-7.555171,-2.952888,-2.599523,1.517148],[-8.696112,-3.690668,3.174674,-0.756167,-4.880861,9.306174,0.845997],[-5.701827,-3.010183,-3.692527,-2.324119,3.803100,-7.805588,-9.265151],[-6.998941,-7.839482,8.535497,-1.914806,7.476252,-2.629332,-8.398628],[6.443290,-4.549774,2.088287,-4.607435,-7.115646,-8.133966,4.586618]],[[2.322621,2.588417,-2.103213,-9.032472,-9.838643,-9.499929,-6.952513],[9.036054,6.781904,-9.714933,-0.815633,-7.741663,1.232744,-7.241937],[-5.153628,-4.278195,6.638904,8.556214,2.992730,0.822022,6.565563],[-2.449066,-8.750339,-8.993434,-8.376937,-0.969917,-6.318021,8.684683],[7.088186,9.504923,-0.553679,0.553875,-5.018640,6.045203,4.202396],[1.861191,-4.833037,-1.913876,-3.439018,-5.141609,1.379179,8.739066],[-5.497625,3.485819,-4.984257,2.304312,-2.888709,-2.450185,-7.402276],[8.697515,-3.376746,-5.323473,-6.941419,-4.911108,7.390376,6.972232],[1.239747,-5.148985,7.862133,6.568828,-5.249361,-0.877078,7.056369],[9.537969,-1.469744,4.589602,-8.065788,-0.802705,-1.629726,9.639171],[8.795215,-0.911901,3.312414,-3.362871,-9.437555,5.303160,1.040525],[-1.015402,-7.396546,-5.918949,-6.168704,-7.382616,3.553872,0.338191],[9.298187,9.676818,8.617958,6.801403,-6.574145,2.697079,3.862972],[7.865939,8.965773,9.529478,-7.190696,-4.250878,-2.760568,3.365712]],[[6.328201,4.784748,7.017497,-1.398848,4.159324,2.797124,8.052955],[-5.592137,9.695902,1.760412,4.792390,5.420315,-9.241478,-8.225440],[-9.698884,-2.646121,-2.320281,-9.299969,-4.353450,-8.482208,-1.131872],[8.316844,2.748975,-1.091620,-4.096812,7.616894,-3.495093,2.387949],[-1.237671,4.290428,9.575849,2.176478,-6.763602,1.920279,-0.588007],[-3.795867,5.913371,-9.372031,3.482803,-8.488363,4.360605,-3.122546],[-4.672864,-8.129498,5.606199,1.005873,-7.692234,9.547955,-4.629333],[5.945028,-0.278209,4.815245,-4.000863,-0.233777,-4.590496,2.032213],[-5.058035,8.631036,7.119602,-0.608021,-9.212329,8.201138,-6.310978],[7.266086,0.322623,1.309955,-6.177143,8.638305,-9.973127,-7.917434],[-8.896877,-5.497343,7.519730,8.514529,-4.493592,-9.424784,6.641510],[0.752018,-7.022228,-1.456599,4.838919,6.476307,-3.026315,-0.201735],[0.411049,9.904558,-6.730855,-1.658016,-8.616465,-7.414875,8.842395],[2.831939,-8.591152,-4.825448,8.385613,-7.439848,-9.996019,-9.828372]],[[4.854716,-9.707786,3.180392,-7.299592,8.971983,-0.518088,7.867860],[-7.103935,1.713382,6.103043,-2.680014,-1.977150,4.448145,2.215727],[-6.568001,-3.980604,-1.835758,-7.658211,6.763311,-7.146243,-6.525781],[-3.696730,4.502274,-5.352276,-2.330526,0.547638,-4.308013,-7.702338],[-5.334752,5.398493,8.421432,-1.264393,-7.522390,0.587210,-2.974721],[6.561836,-8.685628,-3.865621,-4.610534,-7.415327,-0.749267,-5.707699],[2.000355,-3.865075,-0.542345,8.610848,-7.532412,2.326225,-2.536790],[-6.978357,-3.332512,2.782472,6.851225,1.828396,3.676072,-4.079567],[3.376339,-3.246611,8.991931,-7.330911,-0.585783,5.292097,-1.610041],[-1.536580,3.035819,6.614010,-9.615824,8.834582,-3.383486,6.895149],[-7.243394,0.101625,-3.186456,1.755467,2.042443,4.373284,0.195351],[-4.671589,-3.388600,-5.271467,9.072571,7.229206,7.662868,7.702224],[3.278682,1.050906,-4.273051,0.513754,-9.886302,-5.184374,3.780319],[7.279058,-9.353586,-2.017761,-6.294312,-8.384898,-3.261889,1.546243]],[[-1.405980,3.985027,-3.481988,-6.059549,9.411874,4.659586,-1.795915],[0.917744,-9.044574,-9.270981,-6.220765,6.012417,2.534869,-7.767745],[9.477054,2.507604,-0.908468,-5.941119,8.613753,3.370003,-9.177282],[-4.000186,-8.098205,-5.908369,7.545563,3.533880,8.419071,-0.707600],[2.669958,-1.797102,7.284653,-7.879300,-0.471134,-5.437264,4.499932],[5.911460,-9.497238,-6.650785,9.168187,0.113974,6.332006,7.777473],[0.325040,-6.604259,-0.169396,-0.262393,-2.849165,-5.894723,5.968880],[3.038657,-0.500004,-6.328652,-3.370321,-0.625946,-8.984556,-0.531541],[-8.265239,-0.375041,-6.230201,-0.905558,-0.996014,-8.306163,-2.803704],[7.484381,0.878490,-9.996657,4.678602,-5.864625,-9.943082,-6.419534],[7.513688,-4.354344,-1.345620,9.922460,7.963253,7.262173,-2.725786],[5.238806,-3.265653,-2.393278,9.233234,-8.387342,-3.428175,-4.425684],[5.280355,3.563392,-1.434522,-8.258733,-9.916034,8.979582,-5.319499],[2.391165,-4.851510,3.298892,-0.744347,-0.300742,-5.395901,-1.680600]],[[4.325502,7.783878,1.291192,2.012791,4.137748,-5.369698,-8.316276],[4.891183,6.589832,2.501877,3.994151,-7.249158,1.522471,2.335994],[2.763866,-3.443671,5.131490,4.893321,-3.917124,-9.493825,6.229008],[0.230048,-2.490623,-8.747815,-2.549123,7.700680,-6.569747,4.165317],[-5.572662,1.749720,-7.618513,-7.230631,-3.205661,9.480605,7.648445],[-7.169912,-9.858632,-7.800797,-8.127555,-2.723050,-1.460081,3.541155],[-4.755125,-8.064456,6.695078,-2.234395,3.887924,6.835597,6.901324],[-7.161668,-7.526044,0.418514,5.000411,0.664774,-2.156916,-6.818421],[5.278762,1.521154,-2.382403,-7.085806,0.220528,1.901769,-5.936862],[-1.557717,0.409971,-8.274577,9.942203,2.460821,7.375338,5.285633],[-6.602136,-8.126236,7.203354,5.701354,-4.869495,6.839061,6.007779],[-4.862108,-8.179159,6.298960,-5.060777,9.159463,4.007825,-5.416330],[-3.528860,-0.148324,0.365761,-0.244585,-9.556766,-8.013387,-0.809214],[-5.201925,-6.843873,7.917074,-6.983658,3.933601,-3.231244,-5.180048]],[[5.464358,-4.360074,-7.741020,-8.418865,5.081866,-6.657242,9.505347],[-2.968554,3.938241,3.901187,-8.163309,-7.923014,8.339803,2.545931],[-3.325752,8.975309,-8.290956,4.332277,-7.211480,-9.893799,3.112731],[9.219682,5.073338,-7.744571,-1.520319,-3.648809,-7.236405,5.898943],[-8.651535,1.339513,2.589963,-0.875202,-2.633711,-2.595814,-3.388740],[-5.965926,-9.910714,-8.267412,-5.644893,-0.765170,-4.385218,2.907974],[0.510216,-8.297853,0.761130,-9.076051,-2.752029,-6.087303,0.294518],[7.294195,3.147747,3.912933,5.039588,5.881129,-6.934752,-1.769342],[-7.998241,8.925352,0.201375,-1.583677,6.990936,3.519926,7.320413],[-1.787735,-6.698589,-6.155255,9.561270,6.427533,8.924258,-0.963285],[-8.648024,-2.192310,-8.094743,-5.593830,5.773569,-8.456849,-2.067791],[-1.787815,5.596075,-8.818693,-0.510098,8.356094,-5.617179,-9.355356],[6.374672,9.929783,-1.180946,8.823880,8.974366,-6.989226,-1.732188],[0.790573,-4.086601,-7.345795,-5.998281,6.287811,-7.670335,-1.930341]],[[-9.445960,-9.907628,-0.995651,9.704437,-6.806173,6.578699,6.867451],[-8.696464,7.506823,-5.333379,-6.531726,0.458806,9.135243,1.042234],[-6.506833,-8.554751,7.164265,-3.507437,-7.997192,-9.249129,-4.069537],[-5.001207,6.691898,2.158797,-4.978209,-4.103410,6.211431,2.846022],[-3.402179,-7.095575,-2.990945,9.119559,5.954674,0.173171,-2.013503],[-6.324173,-5.571691,-3.157843,-8.984427,-3.063624,2.675895,6.464624],[-0.486293,8.703442,9.754662,9.925408,-3.906037,3.581672,2.554350],[4.937643,-6.280799,-5.794467,-1.772103,-8.589987,7.762500,6.192337],[0.562148,5.955786,0.705505,0.215317,-7.743888,-4.768067,1.810476],[-7.270594,5.371876,-7.477169,-5.610470,-7.295096,2.643474,2.765037],[6.548430,9.686542,9.016117,-3.853246,1.790265,3.992137,1.430495],[-7.865002,-1.308977,5.224355,-8.155984,9.539840,-8.353591,0.927081],[5.634473,-3.613352,5.764300,0.022343,-7.822474,7.911402,2.647191],[9.836923,4.797916,-8.948616,6.289476,6.756718,1.885468,-9.925822]],[[-2.460520,-6.090684,-5.538794,-0.035277,-4.338537,-2.215910,1.519480],[8.866800,-3.382282,7.732660,-3.465008,1.177629,5.814065,-7.148158],[-9.376379,2.544446,-6.316977,-6.380632,-0.154255,7.494466,-5.203788],[-7.212884,9.760155,0.966332,-4.556664,7.656671,-1.465785,-2.658400],[8.069494,-0.161200,6.479887,-9.069694,4.252596,-3.667473,9.035328],[9.198941,5.307166,-8.713918,7.596729,9.777612,-4.284821,-6.044156],[0.853316,4.056016,3.341754,-2.780635,6.909900,2.134225,7.998094],[-7.059510,5.696297,9.488608,9.925026,2.377852,3.955430,5.894808],[-7.505615,-9.517189,-7.346708,-5.254616,0.341206,5.609953,-9.682548],[-5.077361,-9.544104,-2.759307,-7.910673,3.777915,9.978584,-9.550543],[6.913498,6.837600,7.222337,5.359483,1.586853,-4.892171,4.166266],[6.171993,-7.249064,6.696662,-3.136693,-7.204946,7.602122,5.448762],[-7.911772,3.899515,4.469449,3.276191,-8.291107,-6.323912,3.449134],[8.924242,-8.897351,-4.505531,-9.209592,-3.548697,9.096639,3.076201]],[[-6.573368,-4.494648,-4.158086,-2.229646,-3.132764,-1.142638,-3.559215],[-3.143364,2.164293,-8.108022,-2.068285,-5.184525,7.155773,3.974710],[6.674072,9.446312,0.507683,2.778266,-5.191437,5.282008,5.772016],[7.217003,6.561215,6.292528,6.314455,-7.891055,-9.002069,-0.745780],[2.483641,0.729850,-2.693351,-1.944685,-8.346841,9.571024,4.445412],[3.003372,5.301186,0.465289,-5.289963,5.791606,-8.424986,7.132713],[4.767341,-1.066666,2.187865,6.576946,2.801438,-5.054360,0.547722],[-4.556482,-2.974168,-0.357340,-8.693675,-0.918945,-2.838494,7.796222],[-0.470571,-8.285046,-9.610198,-0.895619,-2.955142,-1.910055,-6.432748],[1.240959,-6.695179,-7.310121,5.781552,-6.574715,-1.909685,-6.413394],[2.612241,-6.722422,-1.943897,5.866882,8.714889,-9.414078,5.703150],[2.958485,6.572539,-7.952648,-5.347414,3.637555,4.868069,-6.905018],[-5.252852,-1.050791,-0.862369,2.962564,6.704760,0.050918,8.551452],[-5.453210,-2.530683,-4.252285,-7.651221,-6.474675,9.911804,-2.542898]],[[4.918931,3.373757,4.454628,5.283740,-1.677968,-9.847060,7.653227],[-9.638246,-5.759372,-1.712951,2.511971,-4.821088,1.081481,-6.306255],[-3.092233,6.261849,5.543143,-3.911035,-4.341618,-4.754467,-0.160555],[1.303024,7.444062,-2.664322,-1.755219,-3.328306,1.056064,-4.451053],[9.930775,-7.866457,3.340585,-9.212522,-4.952161,-7.075297,-3.482890],[3.382983,1.034939,7.723266,-1.373303,-8.386872,-8.499094,-8.259670],[-5.519500,-8.944726,-3.630256,6.100363,-1.732606,-1.731547,-6.452961],[2.285694,-7.610504,-3.070663,2.096280,-5.051592,5.244166,5.354892],[4.201064,-9.620128,-3.675697,-4.829076,2.347980,-2.128382,6.910215],[-3.116136,9.355238,-5.330627,-3.811588,-0.996243,-5.825639,0.749955],[5.322905,7.735427,5.809448,-4.590717,-7.333066,-6.410670,6.061136],[1.851213,6.864813,-5.113722,-9.870289,-1.252837,1.405630,-0.936470],[2.696713,-9.664378,-0.192211,-1.666843,0.500840,6.698100,2.316127],[4.841574,7.984876,9.257868,-0.903978,5.438035,-9.104707,1.043684]]], dtype = "float32")#candidate|11398|(12, 14, 7)|const|float32
uop_11399 = relay.asinh(const_11398.astype('float32')) # shape=(12, 14, 7)
output = relay.Tuple([uop_11399,])
output2 = relay.Tuple([uop_11399,])
func_11411 = relay.Function([], output)
mod['func_11411'] = func_11411
mod = relay.transform.InferType()(mod)
output = func_11411()
func_11412 = relay.Function([], output)
mutated_mod['func_11412'] = func_11412
mutated_mod = relay.transform.InferType()(mutated_mod)
func_11411_call = mod.get_global_var('func_11411')
func_11412_call = mutated_mod.get_global_var('func_11412')
call_11413 = relay.TupleGetItem(func_11411_call(), 0)
call_11414 = relay.TupleGetItem(func_11412_call(), 0)
func_9089_call = mod.get_global_var('func_9089')
func_9093_call = mutated_mod.get_global_var('func_9093')
const_11418 = relay.const([-6.046304,-9.722737,-2.919538,-0.293407,3.879408,-5.616504,1.801296,-7.318760,-5.142368,8.478880,-5.822758,2.396988,-2.458872,3.173678,-5.037613,8.899700,-7.256612,1.668649,-9.993872,-7.665411,0.839568,7.591569,7.804452,-0.803226,4.356533,-2.597623,-6.526354,4.989725,0.544346,-2.253966,5.000244,-7.981770,4.218017,0.593377,-8.300331,5.890769,-6.530290,-2.371894,5.027600,3.601924,-4.935371,-8.487591,8.236846,2.888865,-3.833483,-8.558264,-4.466518,3.736317,-1.591241,2.287418,-9.488775,9.452317,6.189510,-7.938572,-4.809998,6.650298,-9.886669,8.798240,5.701467,-8.366182,-1.158260,8.797794,-6.401902,1.865641,0.122090,1.697478,6.937703,-7.826332,-3.928000,1.642436,-5.825003,-3.480200,-2.299653,5.690234,-4.978773,9.214943,-9.736166,4.000308,5.598551,-6.598043,8.686957,1.428471,-0.833958,6.966277,-0.434023,8.706758,0.345241,2.667644,-0.566409,8.398601,4.638071,8.351125,-7.612831,-0.820634,1.707301,-0.484535,-4.232346,-4.485228,-8.916952,9.414947,-0.968945,0.477654,-1.354787,-0.762888,1.636002,-7.864131,-3.680110,1.146430,-4.750778,5.527334,-1.203363,8.299528,7.778081,6.379383,9.443726,-9.857553,8.809070,-5.319056,2.640024,-5.863656,-4.517983,6.614196,2.018676,8.343989,-5.796956,8.455805,2.493206,8.955439,-0.937692,-5.523756,3.395020,-6.264235,-9.390566,8.914205,2.567882,8.919577,-1.988823,-6.228765,6.067362,9.011797,-5.101745,-2.694075,1.371020,-3.776957,-6.651420,-6.711410,-3.460137,-4.614914,4.673799,-3.481242,-2.517012,-1.790757,-4.456824,-8.856960,9.526395,6.216131,-0.660434,0.674702,2.520972,-1.617724,-3.004573,2.690107,8.905925,3.751341,9.329462,7.496475,2.390608,-3.560083,-2.899981,9.941422,7.297464,-7.560904,-0.299520,5.942012,4.886319,3.112819,-7.110481,-9.260005,3.559156,-7.998786,5.077066,-8.870607,-6.633292,-1.931849,6.030693,-7.119832,-9.238064,-4.111680,-8.232227,-1.543647,2.175257,9.271376,2.017690,8.172827,8.073565,7.534866,7.844304,-5.234786,6.505264,8.294522,-0.653510,7.082164,-8.999876,-4.982826,3.170605,-0.721412,-9.577574,1.076791,-3.056409,-4.482399,-8.207454,-3.479240,9.304514,3.188627,-3.183575,3.262666,-1.024698,1.942256,6.359379,8.823045,7.181760,5.914540,6.947008,1.947456,-9.181066,-9.518208,8.799078,-7.001784,0.206191,5.282364,-9.516756,-9.503458,4.138934,6.417980,5.273544,-2.839163,1.825399,8.749972,-6.614908,-6.027644,-8.036130,6.862517,7.431920,2.693364,-5.685774,-8.695645,2.375770,1.265913,7.941509,9.522900,-1.718208,1.805363,-6.998277,-2.203048,7.743859,6.571157,0.098630,6.182759,-0.815276,9.628473,-5.169530,-4.941192,7.384628,-2.788069,-0.739714,3.368879,5.330482,-7.258287,3.810188,-8.907954,0.016692,3.113709,5.565835,-4.976221,4.665647,-4.518083,8.765033,1.970375,-5.215899,1.286128,-3.829951,9.887676,6.014673,8.835867,1.014719,8.543441,9.831328,8.581208,-6.013257,-7.397344,-6.377004,6.383351,6.679256,-1.109105,-4.439604,8.978921,-5.230136,4.442600,-1.698125,7.186691,-6.249692,7.400351,0.999154,-5.159329,-9.674695,1.409074,1.639388,-7.583245,5.805144,1.544174,0.889649,-8.930699,5.328876,1.455121,-6.765668,4.560233,-6.566431,-1.747862,-7.916663,4.525545,-3.702696,6.881620,1.584510,-7.756452,-6.408229,-0.840400,-3.438811,3.172145,-5.963985,-7.156998,5.841729,-1.976700,-2.138641,5.946861,0.920524,8.447166,3.763867,-1.962596,-4.839956,-1.206117,-5.906006,-6.335556,3.165929,-3.464486,2.290833,4.224448,2.888683,-9.132001,-4.820758,-9.743580,-2.133025,2.829927,-6.307249,-8.611693,5.517573,6.383958,8.183753,-1.753209,7.016097,8.280784], dtype = "float64")#candidate|11418|(360,)|const|float64
const_11419 = relay.const([[-3.542679],[-2.667658],[-1.540336],[-5.138992],[7.821643],[1.223281],[-9.210876],[-4.922109],[-7.742731],[5.333677],[-2.340743],[-7.016872],[1.223566],[-4.733850],[-4.092318],[-9.723149],[-4.210908],[8.447936],[9.678352],[-2.824384],[-1.703714],[-3.720633],[-9.751579],[-0.295298],[4.006982],[-8.987069],[-2.799996],[8.515169],[-8.178931],[9.602921],[-8.089819],[-1.429051],[9.766670],[1.240409],[6.637618],[2.647396],[-1.940722],[-0.403641],[-6.352104],[4.191394],[7.068974],[4.386689],[-7.135022],[0.529117],[0.194457],[5.783780],[2.455213],[-8.357791],[1.189157],[6.800742],[4.923445],[-3.726352],[3.691983],[0.429341],[7.054861],[3.794225],[-9.625666],[2.526270],[9.730112],[2.721170],[4.216094],[-6.463484],[-7.495631],[4.220888],[-3.887931],[3.584754],[7.164211],[0.759026],[-8.381886],[-7.169371],[-5.329293],[-5.976912],[6.494945],[7.352895],[0.598801],[9.875030],[-6.268105],[8.111376],[-4.917322],[-5.203340],[9.454949],[-6.384436],[-9.037402],[4.723507],[-6.211824],[-0.292928],[4.677363],[1.538609],[-1.060028],[5.589747],[-1.266940],[3.412172],[-5.684838],[8.026676],[6.771407],[-3.045916],[6.944421],[-3.585886],[-5.876394],[5.958804],[4.144317],[5.299354],[-1.043119],[9.493479],[-3.282909],[-5.462278],[3.578026],[4.330700],[-1.349229],[-9.874762],[-5.077568],[9.413193],[-1.448032],[8.885289],[0.259979],[8.589027],[5.047671],[-7.150258],[-6.382127],[-2.460396],[-9.994969],[7.700887],[-0.256031],[-6.501213],[2.932480],[1.633749],[3.084753],[-1.937671],[-9.916711],[-5.076386],[-5.496730],[-0.004510],[8.346467],[9.824700],[9.416179],[-8.850121],[2.522759],[4.955578],[-3.583066],[-7.461808],[0.697854],[3.151554],[-9.567809],[-8.195240],[-4.689655],[0.346730],[-1.006437],[-8.006283],[-3.266296],[6.771643],[9.033058],[3.132153],[5.264953],[8.280940],[-3.210450],[-8.295071],[9.414955],[-0.343556],[6.520282],[-6.822573],[-3.220444],[-2.955034],[1.852745],[-9.767552],[-3.955051],[6.016350],[8.815190],[-4.050550],[-5.883914],[-0.909649],[-4.017536],[-9.875660],[-6.852612],[9.676421],[9.894887],[2.715332],[4.564179],[-0.784670],[-1.624795],[-5.497800],[0.624351],[5.594065],[9.462624],[9.313299],[7.184604],[-1.216853],[-2.181303],[4.689104],[-7.294506],[-6.963140],[-4.404373],[8.267436],[0.628323],[-5.936500],[-5.651058],[4.153693],[3.412870],[-2.244686],[-4.350984],[-1.474417],[2.945153],[2.502163],[0.143277],[-1.337566],[-2.040040],[6.639821],[4.023912],[-8.466773],[-0.638864],[-8.316086],[-5.964753],[-0.731639],[-2.916049],[-3.407910],[6.046621],[-5.883801],[2.889836],[-8.757696],[-3.088862],[-3.255485],[-5.161679],[5.959994],[-2.745412],[-3.097576],[2.267645],[1.450572],[-6.278685],[7.393252],[-7.533427],[-5.579839],[-8.922002],[-8.330563],[-7.765240],[-6.831534],[-8.114923],[1.445470],[-3.375268],[-5.827520],[5.862006],[0.978822],[5.635958],[-0.599927],[7.250198],[1.508213],[3.871776],[2.475812],[-4.583217],[3.821736],[-5.608978],[-8.470175],[1.369759],[1.607148],[-8.406392],[-6.479289],[5.067508],[-5.741143],[7.785158],[-6.421546],[-6.655311],[-3.573430],[9.704680],[6.701669],[-5.674258],[1.890797],[-5.164328],[4.241431],[5.588296],[2.369845],[-4.218658],[1.362095],[-0.373375],[-2.462229],[-8.532076],[-4.131953],[-6.242916],[-0.174041],[-7.675114],[-1.433450],[2.200484],[5.845725],[2.475921],[8.130208],[-3.123397],[-6.412865],[-2.952805],[-3.505240],[-0.306955],[-3.027265],[9.140253],[1.870373],[-8.656327],[-8.579242],[-0.250824],[3.755879],[-7.069358],[7.440071],[5.029078],[-8.218668],[-1.297467],[-8.620664],[9.780359],[3.053655],[7.287028],[-3.599048],[-3.237838],[0.470766],[-9.569963],[4.069453],[-1.698502],[-3.012883],[3.620254],[-6.678553],[-9.099889],[-7.009769],[9.639211],[1.592840],[4.109228],[-8.925246],[6.987503],[-3.499351],[0.578075],[-4.355970],[1.494122],[-5.875507],[-8.122334],[-6.328395],[-3.713268],[-0.713773],[9.626684],[0.248089],[1.643325],[0.038583],[7.315958],[2.079756],[5.820781],[-9.784964],[0.453943],[-4.605128],[-0.673893],[-0.914754],[5.293265],[1.640508],[5.938264],[-2.245932],[-6.261919],[-5.081441],[-8.194995],[4.986704],[7.333755],[-8.521800],[-4.638175],[8.992911],[7.306722],[-0.373476],[-8.609664],[-1.941516],[1.517456],[-7.522176],[9.084399],[1.580625],[-4.977648],[1.682268],[-9.837863],[7.552451],[-5.674399],[-1.637922],[-4.714181],[-1.852095],[9.093260],[-8.334933],[-4.733848],[8.485376],[-3.013701],[-3.365319],[-4.027476],[5.424833],[0.426382],[1.117183],[1.796891],[-7.136899],[9.346778],[-5.577115],[-7.571284],[7.413243],[6.537017],[-6.155708],[0.229464],[5.975444],[3.283492],[0.850361],[-4.675329],[-5.723678],[-2.928664],[0.007743],[-8.769296],[0.915672],[-8.469452],[-1.720966],[-1.836868],[-6.041891],[7.669010],[8.916120],[-5.158978],[-3.654025],[2.279463],[9.835130],[-5.670722],[0.333067],[3.516268],[9.244607],[-2.140114],[8.331446],[-3.227162],[-7.524282],[-2.064253],[1.800462],[1.419614],[-3.289600],[0.094898],[0.543773],[-4.260496],[-7.589562],[-7.510795],[4.020154],[-1.011791],[-6.844770],[3.363665],[9.304602],[6.145759],[8.657572],[-6.430506],[3.874528],[5.965187],[1.089070],[-5.353548],[8.995643],[8.288447],[4.154702],[-0.174316],[-2.581627],[1.498674],[0.517678],[-8.166920],[3.706598],[-6.422632],[0.500319],[3.191156],[-5.018956],[-5.567658],[5.656677],[-8.874939],[-2.861674],[8.800717],[-6.854903],[-7.514183],[-9.433869],[2.849875],[9.033119],[7.639461],[7.896178],[2.520309],[-3.455330],[7.642614],[6.878407],[7.973898],[-1.929912],[-9.773444],[1.458260],[-0.537079],[8.659002],[-0.788834],[8.768428],[7.334117],[-5.227957],[7.963280],[8.122264],[-8.686780],[2.382575],[-9.691172],[-4.872081],[5.067276],[-0.426572],[8.738161],[5.894898],[3.602616],[-7.039990],[8.936577],[9.391752],[-1.579631],[5.243106],[9.939010],[-1.114411],[-0.983339],[4.050156],[6.293592],[-7.110999],[-0.613565],[-8.361342],[2.439352],[1.461264],[-9.063852],[-8.473994],[8.610378],[-1.819904],[8.562921],[1.427890],[-1.185425],[7.002259],[4.783386],[-4.874171],[-9.649288],[-0.614323],[3.293591],[-9.860060],[-0.397581],[1.631778],[9.054140],[-8.522262],[3.458070],[0.032300],[-4.568711],[3.412293],[-7.610370],[-0.294333],[7.287096],[-7.198470],[8.252732],[-7.253260],[3.790191],[2.274611],[-0.359309],[-7.299569],[6.640198],[1.582532],[-3.481535],[2.205648],[4.338056],[6.197961],[2.824910],[-6.514884],[-9.353276],[-9.568145],[0.141825],[-8.449981],[1.467251],[-7.405305],[-8.436929],[-8.304427],[-5.976614],[-6.111453],[-3.670041],[3.668919],[-6.468038],[7.698151],[-5.798938],[-4.925103],[0.704851],[3.180747],[8.856752],[6.390390],[0.774271],[0.540444],[2.726373],[4.858064],[6.015245],[-7.528497],[-4.721872],[1.889690],[-0.608651],[-3.671885],[-1.276875],[-3.608661],[-4.048533],[-9.139775],[2.992038],[-4.269796],[-4.357289],[5.573900],[8.886238],[0.343642],[-5.703193],[-1.402488],[7.896765],[-6.215602],[5.766849],[1.449922],[3.517620],[4.901152],[9.601068],[-1.678022],[2.943955],[7.686884],[-1.070802],[4.891127],[-6.914196],[-1.008107],[-9.209878],[2.581636],[-5.898117],[-7.466658],[-5.261503],[-8.717874],[2.657158],[0.278915],[0.769575],[8.695644],[9.403902],[-3.903244],[4.717884],[7.125718],[-4.338072],[6.262153],[2.867511],[8.319118],[-7.599695],[5.879412],[1.972803],[-2.676231],[1.268125],[5.417553],[4.925793],[5.376800],[9.178440],[-2.272699],[-8.966488],[-2.290779],[1.547149],[8.063914],[-2.664896],[2.724400],[-7.974769],[-0.583376],[-5.344496],[-6.945591],[-5.425615],[-4.013011],[4.434121],[-4.160512],[-7.165672],[3.227491],[4.075028],[9.289029],[7.859031],[1.621122],[4.701280],[-9.895767],[5.987436],[0.717042],[-6.877943],[6.920726],[6.135348],[-2.522160],[6.831893],[-5.004131],[-2.088240],[-7.663806],[8.316910],[-2.982478],[4.694486],[1.546637],[-4.489975],[-9.843001],[-4.586166],[1.992118],[-3.564133],[7.090807],[6.598013],[-4.898594],[6.961504],[-0.705270],[-5.149464],[6.200358],[-2.901668],[2.337305],[4.189368],[7.017072],[-0.169877],[4.083734],[1.474073],[0.549996],[5.031278],[-7.281873],[3.627592],[5.849025],[9.708571],[-7.422821],[7.874235],[8.119512],[1.885014],[3.115640],[2.539762],[8.812029],[-3.150383],[-8.386921],[7.077165],[3.793536],[7.766493],[1.137851],[-5.519939],[8.176497],[-1.485135],[-4.389791],[1.039179],[-1.933689],[-6.188063],[1.682753],[-6.012079],[3.807247],[8.261874],[-2.333886],[-3.350691],[0.433841],[6.073988],[-9.807288],[7.152503],[6.074155],[2.920381],[3.730715],[-3.718660],[1.572552],[6.554912],[-5.028255],[6.219895],[8.469458],[-8.961661],[-8.519589],[9.650219],[-3.572322],[-7.271367],[2.751015],[-8.505648],[-4.025258],[-9.206355],[-8.102274],[3.282843],[6.067470],[-9.927082],[-9.685383],[5.298706],[-1.449021],[7.683226],[-2.085030],[-4.705889],[-5.597093],[2.825240],[-6.171411],[-5.194630],[9.102362],[9.416919],[8.036352],[-6.282322],[5.694819],[1.664820],[-8.447856],[4.683137],[-1.327631],[5.506423],[-0.171813],[2.704183],[9.807705],[-2.550109],[-3.285378],[-6.686811],[0.693133],[0.800560],[-6.039965],[4.800959],[-1.705278],[4.933519],[4.421134],[1.365966],[2.799980],[2.809917],[-3.531000],[-2.072765],[7.225300],[4.908090],[-3.985828],[-5.359282],[4.820997],[-0.760494],[5.538072],[-7.440488],[-7.997035],[-7.182980],[-0.286604],[9.799993],[5.436986],[2.391665],[9.882629],[3.093566],[-4.584973],[-0.435064],[-0.872740],[-1.184499],[-1.452464],[6.333753],[-0.750024],[3.575548],[1.752083],[4.320818],[4.956985],[4.236263],[8.333248],[-2.436061],[5.542867],[9.245680],[2.131596],[-6.571773],[-4.407613],[4.421084],[1.688453],[-7.206677],[-5.464664],[0.720281],[-5.796455],[-4.443981],[1.143026],[-7.427685],[-9.448527],[-2.585426],[-0.815307],[-6.865925],[2.055032],[1.844978],[8.522113],[6.097491],[7.507539],[9.852623],[4.370659],[9.863531],[8.892276],[-6.880405],[4.357756],[6.551204],[3.436236],[0.090015],[8.620295],[3.290426],[-6.688182],[9.191031],[-1.086320],[0.379704],[-9.235686],[6.218594],[5.409512],[7.139562],[-2.657525],[5.740914],[-2.524009],[-4.602062],[-3.903532],[0.205861],[9.069630],[8.873030],[5.937869],[9.853621],[1.487921],[5.241163],[1.876384],[8.473076],[3.359989],[7.146896],[-7.527435],[-1.824448],[7.492202],[4.401342],[-8.428637],[-3.062520],[4.329235],[-0.255649],[-3.780772],[-6.206217],[-6.117382],[8.785056],[5.237529],[-5.381573],[-6.184130],[-2.649837],[-4.421517],[0.367392],[5.330925],[-8.103352],[-7.429924],[7.813588],[-8.208742],[-2.101385],[-8.718815],[-1.049123],[3.780075],[-1.485252],[-4.034131],[1.384840],[2.347467],[-6.390177],[-7.607131],[5.569663],[-2.515101],[-1.002603],[-0.564715],[-5.284505],[1.389248],[9.317511],[-9.586513],[-7.814771],[-8.703510],[-9.907158],[9.555941],[0.466809],[2.930238],[-1.702052],[0.542155],[-4.002696],[2.982345],[-7.260410],[-1.983316],[-5.079585],[-7.760493],[4.933402],[9.078523],[-7.212486],[0.361209],[5.810805],[-1.098059],[0.409725],[-3.061810],[-5.083542],[4.049471],[3.960297],[4.957567],[0.789834],[-2.637529],[7.149191],[4.079021],[7.904463],[-2.429577],[-5.999261],[-6.892028],[-2.907131],[-9.064303],[2.853940],[3.469870],[9.299249],[-6.472789],[-9.578869],[-6.161154],[0.032729],[5.366975],[7.068646],[-0.962417],[-2.592646],[-2.448576],[-6.131286],[-8.212165],[-3.907746],[-4.398586],[9.944615],[5.472844],[-8.270992],[1.838665],[6.594440],[-3.672332],[-6.858109],[3.584258],[5.857402],[7.641977],[-2.384278],[-4.779740],[-6.497401],[8.422779],[-8.324658],[-3.056521],[6.971736],[-2.358567],[9.404313],[-0.165638],[3.488596],[-6.892884],[8.704690],[-0.662146],[8.155185],[-9.472526],[1.224760],[-5.113303],[4.622293],[-7.564156],[6.408687],[9.449242],[-4.904873],[-8.697966],[0.041618],[-1.891127],[-9.837819],[-2.854733],[-5.805124],[-3.561264],[-4.486415],[7.001417],[1.130427],[-3.105856],[0.176030],[-3.200492],[3.626202],[-5.504488],[2.435994],[-8.130069],[6.055472],[-4.865437],[2.309636],[0.047001],[8.654382],[2.366233],[-4.963995],[3.047881],[-1.157625],[-6.089837],[3.563269],[-8.329909],[-8.634929],[-6.506255],[9.572818],[-7.434354],[-8.780233],[-6.100916],[-0.754952],[0.477760],[7.702304],[7.708004],[-2.104006],[-6.893171],[-5.870587],[-6.501567],[2.962616],[3.818099],[8.724416],[-0.009641],[-2.760402],[-9.837536],[3.848570],[-8.855149],[-5.395309],[1.566431],[-0.747827],[-9.655110],[1.582632],[6.686378],[1.062153],[9.719408],[-6.515894],[2.926913],[7.378871],[-2.737950],[-8.607926],[-2.300785],[-4.126970],[8.551724],[-9.447611],[-2.208508],[-0.038232],[7.832724],[0.803001],[7.651618],[3.780793],[-5.987238],[3.973946],[3.579932],[0.068125],[-1.103821],[-8.322831],[5.442015],[4.119669],[-1.235471],[4.881004],[-4.456402],[1.012808],[6.247215],[-6.628579],[5.519457],[-7.228600],[1.630864],[9.480849],[-7.229897],[1.364683],[2.945194],[4.498161],[-3.477694],[0.137671],[-4.365570],[5.731270],[-3.815657],[0.309101],[-1.478583],[1.830132],[4.814761],[1.362831],[9.329746],[9.411933],[5.141821],[7.909413],[4.123037],[4.811825],[5.882852],[-1.179360],[2.167743],[4.790035],[-2.790273],[7.635051],[-8.165663],[-7.007555],[-2.627913],[5.553041],[4.746098],[6.113862],[4.584622],[9.783394],[8.100950],[-1.404652],[5.760005],[8.694541],[-1.960241],[1.596766],[1.879083],[6.980943],[5.757946],[4.313127],[3.363641],[5.546269],[7.918103],[2.848878],[8.150836],[3.158627],[6.074999],[-8.753365],[-4.674198],[3.027078],[-7.596736],[0.579905],[-5.742824],[4.671572],[3.293492],[1.525133],[9.147018],[8.863439],[-4.058332],[5.358500],[6.481456],[-1.763945],[-5.538770],[1.598965],[-1.811990],[-2.851055],[1.996201],[-4.924140],[-3.564497],[7.625552],[-5.226415],[4.205727],[-9.702981],[0.386647],[5.773729],[-8.308948],[5.367223],[-3.070641],[4.912613],[9.100415],[-8.463237],[-5.134826],[9.780207],[7.008671],[6.757115],[8.774451],[-7.513243],[0.275896],[7.939370],[5.578731],[-8.211897],[6.007469],[-3.191616],[0.654025],[-6.500008],[-1.030177],[-7.263503],[-8.074507],[7.855706],[-5.092368],[8.665085],[1.825576],[-9.983782],[-2.378398],[8.146723],[-8.058175],[7.335361],[7.683496],[0.614826],[-7.009404],[7.041236],[3.866441],[2.450747],[-2.959875],[3.758021],[6.023589],[-7.368782],[-3.176267],[-7.753616],[3.069527],[-6.392455],[0.409337],[4.359288],[-1.464726],[0.639998],[-2.450315],[4.240576],[5.511022],[-4.818600],[4.404539],[-7.635828],[-7.232330],[3.941840],[3.932315],[9.739711],[6.491694],[-2.269483],[9.760508],[-0.102033],[9.758129],[-8.441495],[-2.486551],[2.851489],[4.514455],[7.423842],[5.836716],[0.667751],[8.329445],[7.889712],[-3.271168],[6.671800],[-9.403258],[-9.690222],[3.533734],[8.131573],[9.116973],[2.177896],[0.078411],[9.858380],[-8.440514],[-0.638835],[-8.810995],[7.130873],[-3.934124],[-2.333984],[2.464980],[9.104507],[9.832074],[0.259411],[-0.570773],[6.077498],[8.887654],[1.663099],[3.279477],[5.655587],[-1.828833],[-8.834378],[2.500790],[-4.261103],[-0.671182],[7.083015],[-4.737865],[5.830583],[-3.913263],[-4.150713],[-6.692036],[-9.692744],[-5.246178],[-4.275007],[-5.256693],[4.258838],[0.567109],[6.346893],[3.316149],[1.530535],[-3.511412],[8.806705],[5.914499],[8.608642],[-8.632275],[-2.834307],[7.070037],[-7.971009],[-8.517867],[-8.664423],[-2.864417],[1.011431],[8.076906],[-8.130134],[-3.157345],[-0.336849],[-0.569648],[5.726125],[-6.218761],[-5.882304],[3.842184],[7.619757],[2.952825],[-5.719903],[5.467030],[9.671960],[1.671769],[7.674260],[1.621055],[9.726341],[5.640551],[2.758786],[-7.497443],[6.532649],[2.951868],[4.908806],[-8.690381],[3.262695],[-7.632181],[-2.001233],[-5.049802],[5.756357],[-7.298475],[-4.711856],[-1.811465],[-7.408922],[5.302678],[-7.204721],[-2.623868],[6.987236],[5.850638],[-0.200388],[7.344555],[3.886384],[-7.042609],[2.273603],[7.953361],[-9.295506],[-5.644306],[-5.011819],[-6.634534],[-3.684825],[-2.059451],[3.907547],[5.217372],[-4.010295],[9.220117],[-8.454267],[-7.818151],[-7.367415],[6.653455],[-9.346148],[-8.131347],[5.971906],[0.410506],[-0.837465],[-9.108177],[-6.113401],[4.703453],[9.436539],[-3.411503],[1.345340],[1.721939],[-2.185156],[8.666679],[-8.364247],[5.650861],[-0.707772],[3.085992],[-3.799159],[6.446255],[-7.121390],[8.239401],[-6.395758],[3.787848],[5.097165],[5.394202],[3.640316],[5.684790],[-8.092876],[1.491810],[4.501208],[9.553390],[-5.138370],[3.916922],[-2.642520],[4.186925],[-7.015747],[5.382818],[9.431092],[8.642533],[-8.182190],[6.527231],[1.799432],[7.395753],[-5.450249],[-8.070193],[9.654198],[2.799036],[-6.558439],[-8.225663],[8.326746],[3.422411],[5.277052],[-2.507203],[9.690952],[4.556961],[-9.219613],[-8.439003],[9.576153],[7.830554],[-4.417693],[-6.046716],[-9.013411],[6.489209],[-1.010447],[2.163055],[-0.568199],[-3.668444],[1.086905],[-6.548846],[-0.275661],[-3.310434],[1.332208],[-2.095964],[-5.775155],[-9.049901],[2.266697],[0.589159],[-2.201343],[-5.308784],[-3.938231],[-6.890940],[-4.174580],[-9.546934],[9.835741],[3.359015],[0.132553],[-3.306617],[-7.198736],[7.347933],[-7.659243],[7.472167],[-3.518205],[0.526233],[5.560192],[-2.198594],[7.356837],[-9.274898],[8.467751],[8.618900],[-1.708339],[-6.204727],[-8.838370],[-6.594730],[3.555129],[-3.909559],[7.643530],[0.207631],[-2.675658],[-2.074967],[-6.215005],[7.191047],[4.323543],[3.594018],[3.847001],[5.034477],[6.435661],[6.917906],[-3.446440],[-4.184310],[8.139747],[1.893071],[-4.473084],[7.742943],[-8.191069],[8.430485],[-1.077755],[-0.556574],[-2.533863],[-1.193315],[4.896650],[9.882929],[9.855510],[-7.340330],[-4.890807],[7.168582],[3.252602],[-3.074571],[3.257004],[-0.360867],[5.533689],[-0.551910],[4.032805],[9.446245],[-5.323547],[6.063643],[2.009625],[1.893139],[5.262784],[-5.346591],[-3.099166],[4.928356],[3.967894],[-7.553425],[2.228664],[-4.745330],[-2.024163],[-7.437799],[0.079702],[9.818918],[9.593545],[5.616382],[-8.246596],[6.317099],[1.871147],[8.414317],[0.945467],[0.503282],[7.221327],[1.050394],[0.104932],[4.067669],[-4.477062],[5.875342],[-1.033921],[-9.116865],[3.669357],[-7.964933],[-7.946383],[3.609926],[-7.235515],[5.550299],[3.645907],[-9.311336],[-9.557196],[-1.253600],[4.680629],[3.093205],[0.396666],[5.422963],[-4.033612],[-8.644609],[-5.654134],[5.217793],[-6.706654],[-9.326852],[2.229644],[1.125271],[-4.854741],[7.605361],[1.772027],[-2.394181],[-5.483846],[0.666550],[-8.377093],[5.371701],[-5.401667],[-3.143084],[-5.431341],[8.285775],[-5.393862],[0.117283],[0.254339],[0.177131],[-7.509448],[8.107815],[-1.649133],[-8.761412],[8.580800],[-8.309570],[0.776197],[-2.572175],[3.827949],[-4.682896],[-3.932936],[9.796841],[9.275899],[8.870930],[7.364576],[-4.572709],[5.657537],[9.125191],[-7.692764],[-5.426054],[2.994850],[1.850351],[-1.013558],[-7.184850],[2.759183],[-0.785476],[-6.119590],[-2.736903],[-2.637044],[3.530475],[-5.423728],[-8.649495],[2.498820],[2.601692],[7.838769],[9.020814],[7.135056],[5.886727],[7.668044],[3.015197],[-7.501979],[-3.942217],[4.801373],[-1.525228],[-9.100785],[8.145045],[-2.064207],[9.623742],[-2.250217],[0.947549],[-1.869028],[-0.328089],[5.619550],[-7.681469],[-6.021824],[8.633036],[2.972397],[1.072106],[9.462803],[-6.963756],[8.139885],[-1.141462],[7.099378],[2.195932],[1.575946],[-6.908703],[-4.825767],[5.217578],[-3.801328],[-6.821009],[4.835883],[-6.892320],[2.588530],[-1.579506],[3.231195],[2.709834],[-9.834186],[-8.952604],[9.441992],[8.003648],[-6.055587],[-3.871625],[8.144221],[1.001011],[9.424958],[-2.145712],[9.470829],[1.819596],[-0.230948],[7.402364],[8.489155],[4.129414],[2.144745],[2.365933],[6.995530],[4.061242],[-8.495856],[-8.399557],[9.864545],[-9.147008],[8.252031],[3.698820],[5.479223],[-0.491727],[-8.600569],[7.030255],[-5.175280],[-1.490024],[5.278177],[-2.826308],[-4.677862],[-3.425886],[0.760906],[-8.909605],[-6.362313],[-6.110733],[7.314835],[6.527599],[-8.170933],[4.113889],[6.212063],[-3.945850],[8.062641],[8.537697],[6.489036],[7.930258],[5.777844],[-9.572728],[8.238063],[6.090855],[1.082419],[9.679271],[-2.712281],[5.791934],[-6.026667],[1.883613],[-5.839840],[5.671816],[-4.814701],[-6.946882],[-1.646757],[-3.173154],[1.893377],[6.237812],[3.912074],[9.395628],[-4.925839],[-0.564328],[2.429252],[0.665262],[-8.064884],[3.167324],[5.632726],[-8.569776],[-1.808205],[1.161621],[-9.998334],[-5.455460],[-9.039163],[-1.095460],[3.043455],[3.308748],[3.707522],[-4.143911],[8.137107],[-8.020452],[-9.445181],[-0.638683],[4.774305],[-8.970735],[1.608370],[-5.475908],[9.958623],[-3.066398],[-2.731716],[2.802955],[-6.177984],[4.051912],[-7.627187],[-7.293508],[-0.108808],[3.171367],[-1.271401],[-2.129583],[-2.643755],[6.058950],[-9.213650],[-7.972832],[4.848596],[3.962796],[9.872691],[2.289823],[4.376823],[7.097541],[-7.030716],[-4.519375],[8.700922],[3.734998],[3.598663],[7.749384],[-1.815119],[-6.137512],[-3.769282],[-1.482944],[2.836041],[-0.311449],[4.174291],[-3.791365],[-2.020349],[-9.942358],[9.675431],[2.810469],[0.669146],[-4.650352],[-0.174684],[-7.288436],[0.949148],[1.666093],[4.724302],[1.429113],[-0.150128],[-9.929019],[5.421949],[-6.396240],[-9.747869],[-9.222888],[5.433379],[-2.389310],[-9.196633],[-0.525528],[-5.278467],[-5.588924],[5.030555],[-9.685965],[1.735331]], dtype = "float32")#candidate|11419|(1800, 1)|const|float32
call_11417 = relay.TupleGetItem(func_9089_call(relay.reshape(const_11418.astype('float64'), [10, 6, 6]), relay.reshape(const_11419.astype('float32'), [1800,]), ), 1)
call_11420 = relay.TupleGetItem(func_9093_call(relay.reshape(const_11418.astype('float64'), [10, 6, 6]), relay.reshape(const_11419.astype('float32'), [1800,]), ), 1)
func_8726_call = mod.get_global_var('func_8726')
func_8728_call = mutated_mod.get_global_var('func_8728')
const_11424 = relay.const([4,3,-2,-3,-1,9,1,9,-10,-1,9,10,2,-4,-5,-7,-9,-9,9,5,8,5,4,1,10,-10,5,10,3,-8,9,7,6,-8,5,4,-7,-3,4,4,8,-4,3,-2,-8,-5,6,4,6,-6,7,-6,-8,7,5,-5,-5,-7,10,7,10,4,1,-7,-4,-10,10,7,-5,9,6,-4,-2,3,10,2,1,-7,8,1,-6,2,7,5,4,3,-7,-2,7,3,-5,-7,-2,1,8,-9,5,2,5,-5,1,-10,4,-9,7,-6,6,-1,10,8,5,4,-1,1,2,-4,3,-3,-5,-8,6,-7,9,-1,-1,9,-6,-8,-9,-4,7,4,-3,-9,-1,1,2,10,-7,2,-1,7,-4,-8,-6,-4,2,4,-6,4,-1,5,-6,-5,-7,2,-10,5,4,6,6,4,9,3,-3,5,5,-9,6,-3,-1,-10,6,4,1,-1,-2,-6,4,-10,-8,1,6,2,4,-4,-2,7,-4,-9,4,1,-6,-9,-6,-5,4,8,8,2,7,8,-2,7,-7,-10,-8,-9,8,3,6,8,6,2,6,-7,-1,2,1,1,6,10,-2,8,-6,-2,9,-4,6,8,-7,-4,-1,2,-6,1,-4,-7,10,4,6,-8,-8,9,-6,5,-3,4,5,-7,8,-4,9,-9,-7,-6,-3,-8,-9,-4,-4,-10,7,-3,9,1,8,-4,-9,7,-7,8,9,2,3,-3,-4,5,7,2,-8,5,-10,-2,-1,-4,-1,-10,-8,-8,-8,-9,-2,-2,4,6,8,-9,-2,7,9,-4,6,3,-8,-7,2,9,-2,-2,6,10,1,2,10,7,-3,-4,-6,-2,-9,-3,7,-4,6,5,6,-7,5,-8,-1,6,5,2,6,10,-5,6,-6,8,6,5,1,9,-1,10,-4,-5,-6,-2,3,10,6,9,-4,-5,4,-4,-10,-10,-2,5,9,-6,-9,9,-2,-1,5,-10,8,-3,5,-7,2,8,-10,-1,4,-7,-8,6,-7,8,-8,-3,6,-9,3,6,3,-1,-8,5,-10,5,-7,7,8,6,-6,2,-4,2,7,5,3,-7,8,5,2,-7,-10,5,-10,4,1,-7,-7,6,-9,7,7,-7,6,5,9,-7,6,7,-4,-3,6,-3,3,8,10,-5,9,-6,-3,1,2,-1,3,-8,10,3,3,9,-5,9,-4,6,6,8,-10,-3,8,-3,-3,-7,2,7,8,-3,-4,-10,-7,-2,6,-4,1,-3,3,-2,-8,-7,1,-8,-3,3,5,8,2,7,-1,6,-2,3,-6,-10,-3,5,-5,4,5,-7,-1,-4,-6,2,-6,1,7,1,-8,8,-2,-9,7,4,1,4,-8,-6,1,-4,-4,3,9,-7,-9,-2,9,7,-3,7], dtype = "int32")#candidate|11424|(528,)|const|int32
call_11423 = relay.TupleGetItem(func_8726_call(relay.reshape(const_11424.astype('int32'), [8, 66])), 0)
call_11425 = relay.TupleGetItem(func_8728_call(relay.reshape(const_11424.astype('int32'), [8, 66])), 0)
func_421_call = mod.get_global_var('func_421')
func_423_call = mutated_mod.get_global_var('func_423')
var_11429 = relay.var("var_11429", dtype = "float32", shape = (11, 14))#candidate|11429|(11, 14)|var|float32
call_11428 = func_421_call(relay.reshape(var_11429.astype('float32'), [1, 11, 14]))
call_11430 = func_421_call(relay.reshape(var_11429.astype('float32'), [1, 11, 14]))
output = relay.Tuple([call_11413,call_11417,const_11418,const_11419,call_11423,const_11424,call_11428,var_11429,])
output2 = relay.Tuple([call_11414,call_11420,const_11418,const_11419,call_11425,const_11424,call_11430,var_11429,])
func_11436 = relay.Function([var_11429,], output)
mod['func_11436'] = func_11436
mod = relay.transform.InferType()(mod)
mutated_mod['func_11436'] = func_11436
mutated_mod = relay.transform.InferType()(mutated_mod)
var_11437 = relay.var("var_11437", dtype = "float32", shape = (11, 14))#candidate|11437|(11, 14)|var|float32
func_11436_call = mutated_mod.get_global_var('func_11436')
call_11438 = func_11436_call(var_11437)
output = call_11438
func_11439 = relay.Function([var_11437], output)
mutated_mod['func_11439'] = func_11439
mutated_mod = relay.transform.InferType()(mutated_mod)
func_11411_call = mod.get_global_var('func_11411')
func_11412_call = mutated_mod.get_global_var('func_11412')
call_11494 = relay.TupleGetItem(func_11411_call(), 0)
call_11495 = relay.TupleGetItem(func_11412_call(), 0)
output = relay.Tuple([call_11494,])
output2 = relay.Tuple([call_11495,])
func_11498 = relay.Function([], output)
mod['func_11498'] = func_11498
mod = relay.transform.InferType()(mod)
output = func_11498()
func_11499 = relay.Function([], output)
mutated_mod['func_11499'] = func_11499
mutated_mod = relay.transform.InferType()(mutated_mod)
var_11537 = relay.var("var_11537", dtype = "float32", shape = (9, 14, 5))#candidate|11537|(9, 14, 5)|var|float32
uop_11538 = relay.acos(var_11537.astype('float32')) # shape=(9, 14, 5)
func_4498_call = mod.get_global_var('func_4498')
func_4501_call = mutated_mod.get_global_var('func_4501')
var_11552 = relay.var("var_11552", dtype = "float64", shape = (6, 96))#candidate|11552|(6, 96)|var|float64
var_11553 = relay.var("var_11553", dtype = "float32", shape = (1, 780))#candidate|11553|(1, 780)|var|float32
call_11551 = relay.TupleGetItem(func_4498_call(relay.reshape(var_11552.astype('float64'), [4, 9, 16]), relay.reshape(var_11553.astype('float32'), [780,]), ), 2)
call_11554 = relay.TupleGetItem(func_4501_call(relay.reshape(var_11552.astype('float64'), [4, 9, 16]), relay.reshape(var_11553.astype('float32'), [780,]), ), 2)
bop_11557 = relay.bitwise_xor(uop_11538.astype('uint32'), relay.reshape(var_11537.astype('uint32'), relay.shape_of(uop_11538))) # shape=(9, 14, 5)
output = relay.Tuple([call_11551,var_11552,var_11553,bop_11557,])
output2 = relay.Tuple([call_11554,var_11552,var_11553,bop_11557,])
func_11566 = relay.Function([var_11537,var_11552,var_11553,], output)
mod['func_11566'] = func_11566
mod = relay.transform.InferType()(mod)
mutated_mod['func_11566'] = func_11566
mutated_mod = relay.transform.InferType()(mutated_mod)
func_11566_call = mutated_mod.get_global_var('func_11566')
var_11568 = relay.var("var_11568", dtype = "float32", shape = (9, 14, 5))#candidate|11568|(9, 14, 5)|var|float32
var_11569 = relay.var("var_11569", dtype = "float64", shape = (6, 96))#candidate|11569|(6, 96)|var|float64
var_11570 = relay.var("var_11570", dtype = "float32", shape = (1, 780))#candidate|11570|(1, 780)|var|float32
call_11567 = func_11566_call(var_11568,var_11569,var_11570,)
output = call_11567
func_11571 = relay.Function([var_11568,var_11569,var_11570,], output)
mutated_mod['func_11571'] = func_11571
mutated_mod = relay.transform.InferType()(mutated_mod)
func_11411_call = mod.get_global_var('func_11411')
func_11412_call = mutated_mod.get_global_var('func_11412')
call_11579 = relay.TupleGetItem(func_11411_call(), 0)
call_11580 = relay.TupleGetItem(func_11412_call(), 0)
output = relay.Tuple([call_11579,])
output2 = relay.Tuple([call_11580,])
func_11595 = relay.Function([], output)
mod['func_11595'] = func_11595
mod = relay.transform.InferType()(mod)
mutated_mod['func_11595'] = func_11595
mutated_mod = relay.transform.InferType()(mutated_mod)
func_11595_call = mutated_mod.get_global_var('func_11595')
call_11596 = func_11595_call()
output = call_11596
func_11597 = relay.Function([], output)
mutated_mod['func_11597'] = func_11597
mutated_mod = relay.transform.InferType()(mutated_mod)
func_11595_call = mod.get_global_var('func_11595')
func_11597_call = mutated_mod.get_global_var('func_11597')
call_11608 = relay.TupleGetItem(func_11595_call(), 0)
call_11609 = relay.TupleGetItem(func_11597_call(), 0)
output = call_11608
output2 = call_11609
func_11639 = relay.Function([], output)
mod['func_11639'] = func_11639
mod = relay.transform.InferType()(mod)
output = func_11639()
func_11640 = relay.Function([], output)
mutated_mod['func_11640'] = func_11640
mutated_mod = relay.transform.InferType()(mutated_mod)
func_11411_call = mod.get_global_var('func_11411')
func_11412_call = mutated_mod.get_global_var('func_11412')
call_11654 = relay.TupleGetItem(func_11411_call(), 0)
call_11655 = relay.TupleGetItem(func_11412_call(), 0)
func_11639_call = mod.get_global_var('func_11639')
func_11640_call = mutated_mod.get_global_var('func_11640')
call_11656 = func_11639_call()
call_11657 = func_11639_call()
var_11659 = relay.var("var_11659", dtype = "float32", shape = (12, 14, 7))#candidate|11659|(12, 14, 7)|var|float32
bop_11660 = relay.greater(call_11654.astype('bool'), relay.reshape(var_11659.astype('bool'), relay.shape_of(call_11654))) # shape=(12, 14, 7)
bop_11663 = relay.greater(call_11655.astype('bool'), relay.reshape(var_11659.astype('bool'), relay.shape_of(call_11655))) # shape=(12, 14, 7)
output = relay.Tuple([call_11656,bop_11660,])
output2 = relay.Tuple([call_11657,bop_11663,])
func_11664 = relay.Function([var_11659,], output)
mod['func_11664'] = func_11664
mod = relay.transform.InferType()(mod)
var_11665 = relay.var("var_11665", dtype = "float32", shape = (12, 14, 7))#candidate|11665|(12, 14, 7)|var|float32
output = func_11664(var_11665)
func_11666 = relay.Function([var_11665], output)
mutated_mod['func_11666'] = func_11666
mutated_mod = relay.transform.InferType()(mutated_mod)
func_11411_call = mod.get_global_var('func_11411')
func_11412_call = mutated_mod.get_global_var('func_11412')
call_11673 = relay.TupleGetItem(func_11411_call(), 0)
call_11674 = relay.TupleGetItem(func_11412_call(), 0)
func_6871_call = mod.get_global_var('func_6871')
func_6873_call = mutated_mod.get_global_var('func_6873')
const_11682 = relay.const([-5,10,-1,-3,-8,4,-6,1,2,-4,3,9,-6,-2,-2,-6,7,8,-5,-9,-1,8,-9,-7,-6,-9,10,4,2,6,-10,10,8,-7,1,7,-10,-1,1,-1,-8,8,10,-4,10,6,-4,-7,-4,-7,-10,-7,7,-1,-6,9,-5,-4,1,-9,9,8,10,8,-10,9,9,-10,3,-7,4,-7,-5,3,-8,-4,8,2,7,-1,7,7,-5,-4,-6,1,9,8,6,7,-6,1,-4,9,5,8,-2,-1,10,7,-8,-8,4,-2,-9,-6,-1,6,-2,-5,-7,-2,-6,5,-8,-3,-1,-5,5,7,6,9,-10,1,10,-2,8,7,7,-9,-4,-1,-3,10,-2,4,-10,-3,7,-6], dtype = "uint8")#candidate|11682|(140,)|const|uint8
call_11681 = relay.TupleGetItem(func_6871_call(relay.reshape(const_11682.astype('uint8'), [5, 14, 2])), 1)
call_11683 = relay.TupleGetItem(func_6873_call(relay.reshape(const_11682.astype('uint8'), [5, 14, 2])), 1)
func_2758_call = mod.get_global_var('func_2758')
func_2760_call = mutated_mod.get_global_var('func_2760')
const_11696 = relay.const([[-3.818894,-8.502089,-2.172836,-0.854932,-3.475135,-6.743253,-2.841268,2.081767,4.695154,-6.874559,-2.442418,1.385466,-6.882696,-3.039528,-2.365394,-0.105824,5.516955,-5.163377,8.499064,2.384005,2.957232,7.636129,8.905758,-8.431951,-9.232235,-8.680827,-2.742268,-2.671393,-6.905177,1.394589,4.034513,-8.341238,9.545481,-7.705054,2.897888,-3.968437,-2.978263,-0.481389,4.538268,-8.897485,1.323483,-1.505193,3.620854,-9.377052,1.514028,-4.100918,-4.261146,6.955324,6.848303,-9.769713,5.067129,3.971542,-3.080368,6.935165,7.745601,-6.303098,-8.499519,-6.546064,5.219110,-6.958287,1.318088,-1.414713,2.718974,1.579104,8.044687,7.759642,-7.907416,-7.450719,-7.088825,-2.934500,-4.685814,2.765038,6.413462,-7.071003,-7.350672,5.545921,7.037117,6.835191,0.662460,-0.590804,7.081269,-1.600912,-8.188881,-0.994274,-0.851571,-4.157731,3.535334,-5.933929,-5.310398,-3.636771,0.292279,-8.607926,9.633345,0.742216,-8.633566,7.300242,3.655075,8.622196,0.930136,-8.831704,6.273285,-7.677834,-1.533623,6.879692,9.343723,-4.433752,-5.834566,2.253627,-0.679126,-1.255186,-2.430838,-3.233735,2.928384,-9.861115,-7.803779,8.442441,2.349414,-8.420131,-8.049257,-2.470848,4.802995,-3.011619,1.248025,1.585789,-8.571191,-1.486827,-4.313419,-9.888690,1.716182,-3.135624,3.801100,5.279503,9.999048,6.662406,3.948998,6.043156,-2.052502,-6.857354,5.758811,1.359493,-4.314219,5.299774,1.815383,-1.964013,-5.073703,-1.765487,-8.634790,-0.744732,1.494631,6.647159,-6.543773,-1.871682,-7.977934,-8.053206,-3.157960,0.351556,-1.736450,5.959975,-8.361253,-7.609897,-0.501803,4.271427,-9.521422,-4.703920,8.236241,-2.410371,-5.858865,-4.357391,-8.063944,6.932155,-5.864540,8.068563,6.020021,-0.134094,-6.241187,-4.564358,9.658130,-4.210366,0.910002,-6.944683,-8.590542,-2.841816,9.132580,-8.668762,-4.763105,-4.912369,-1.735398,2.414930,3.993445,-9.639381,-0.393395,-9.388893,-3.633859,0.063197,-5.727167,-9.067416,-1.569498,4.636688,4.503770,3.575650,0.392288,-8.216156,8.100501,9.226181,-6.342177,7.888305,-9.834702,-3.764343,-5.434209,4.874169,0.307741,9.906598,-7.798399,4.123204,-6.397214,5.913156,5.334471,-2.667738,7.801460,9.928362,7.884993,-9.791105,-8.678831,-1.279094,-1.816476,5.110086,1.500565,-4.874014,-6.177311,7.927857,-6.396378,-6.388036,-7.422047,8.807444,5.093368,1.584048,0.135206,-1.255696,9.579062,-8.086561,-3.514514,6.938457,-0.015334,-6.276985,-3.775424,-3.848115,-6.408359,-1.183015,6.948878,5.178045,-9.409901,4.042239,-3.842046,3.671868,-5.883951,-9.464064,-3.414482,-6.188359,9.769020,2.777029,-1.564643,-3.122731,-2.201975,4.496779,-1.692755,-3.366493,-2.312806,-1.799150,-5.685982,-8.955814,9.066713,1.846847,-7.484397,2.497922,-9.381344,1.775879,-2.256987,-7.233521,-9.470103,-4.067674,-0.820751,2.277848,-4.043462,5.532196,-2.563512,7.493923,-8.476122,1.637407,-6.366289,-8.871618,2.670631,4.574282,-5.322338,-7.121189,7.324332,3.034293,-8.667458,-1.347110,0.203755,5.838347,6.379735,3.824445,8.387512,5.505894,0.816084,0.508810,6.607099,-8.594165,-6.659826,7.638029,0.150183,3.772383,3.904622,-2.099077,2.426856,-7.241215,-4.135667,7.473346,-4.305056,7.249873,-4.085569,-8.321950,0.893178,9.654665,-3.167869,-9.037694,-7.455145,1.361841,2.782678,-5.776763,5.338687,-1.981228,-5.339690,5.492608,-8.728641,1.245373,7.905394,-6.809496,-5.872374,-0.411943,-1.159309,4.674957,-7.892419,0.475166,-1.339167,2.889235,-3.734825,-5.678979,7.061476,-8.471472,-7.448734,-5.612960,8.022096,2.236682,2.925224,-0.059125,-7.338668,-0.298079,-4.594802,-6.999817,6.784751,-7.297741,2.463762,-8.779032,1.218017,-3.981621,-5.599642,4.366432,-6.734191,-5.681008,6.262622,5.084827,-4.395604,-8.360240,5.577069,0.988059,-7.819483,4.116554,-2.459342,-8.961025,-0.034465,-6.384875,-7.387947,-7.344147,-3.356316,-7.088276,-8.331497,2.163751,2.769328,6.493637,-6.537574,9.056806,3.304952,4.801171,-8.425878,1.654393,-5.879147,-8.670030,1.483280,0.821170,2.157127,0.979770,-9.913032,-2.778818,2.667899,-9.870218,-8.822126,-1.761574,-9.069451,-4.645152,-8.199594,5.164358,9.813610,3.505628,1.413724,-3.472907,-7.589319,-9.983593,-4.043268,-5.433853,-7.298882,0.095894,-7.062709,-3.754284,9.495570,7.948684,-8.178393,8.930687,-6.909013,9.657315,2.194061,-8.246590,7.434008,-6.954825,6.221896,2.007123,-9.786958,5.101483,9.025664,4.099110,-8.714541,-1.316180,-8.193731,-1.113466,-1.547686,-8.840119,0.701370,5.845377,8.000413,-2.839328,-2.299450,-0.504882,-8.853600,6.979779,-8.986737,3.100003,5.937970,5.219891,8.344048,6.171775,2.466347,1.292374,-6.292556,-4.571906,5.341713,9.337878,-1.934779,-8.378371,2.166638,-2.880457,-9.818241,-2.232072,4.287797,9.708989,2.277357,-0.399268,-6.470573,5.767816,-4.721532,-8.271811,-4.981483,1.258560,-7.471404,5.867388,8.665319,9.221354,1.926108,-2.202202,3.470933,9.017407,-8.568873,-6.068999,-0.879866,7.658074,7.988306,-1.241632,2.075009,-4.587665,0.586487,2.458494,-8.038893,-0.434860,-7.360065,-3.414404,8.168590,-6.373132,-8.105766,-1.812883,-0.884043,1.800043,-0.708894,5.638854,-8.514870,2.475326,-9.834423,-4.929041,2.247991,-4.204067,1.603076,2.569199,8.807785,-0.470024,-2.355013,-6.127710,3.140488,-2.771333,6.086631,9.249332,-8.153564,5.732833,-2.425687,2.225053,-2.941964,9.429174,-7.561906,-9.360981,1.765329,6.932667,-7.211055,-2.921978,-3.696752,6.529529,6.585692,1.449283,1.350672,-9.275590,-8.563068,3.491790,7.938918,2.892938,7.799186,4.323429,-8.244979,3.534139,-9.267035,-8.074875,-3.195054,-7.821611,4.631626,4.355289,-7.237325,-8.644819,9.250435,-7.267727,-5.812033,7.292777,8.194202,-7.742001,5.929862,-9.065202,-1.498275,-8.426911,-6.094720,-1.475962,-7.304057,-2.093600,3.600678,-2.251558,-2.824776,9.360202,-4.759206,1.484009,-2.137984,4.493216,4.011381,7.261298,0.825352,-3.820408,1.408262,4.402034,0.789759,-4.405746,-2.399458,2.578249,8.567832,2.214934,5.600507,-5.471567,9.438843,-5.351382],[5.172300,-5.676346,4.245755,6.307900,5.733020,6.273109,-9.573018,9.010931,-4.726192,-9.212846,6.857878,6.683012,-2.533025,-5.026915,5.367000,-7.888277,3.840810,1.364799,7.651711,9.283219,4.102729,5.241726,-1.640195,-6.850937,-3.202581,5.931146,8.445924,-2.568168,-8.452927,4.989006,3.332292,-2.621069,-8.877171,-5.342820,-7.508770,-1.755266,-0.794666,-2.345373,-3.557348,6.288765,7.952990,-4.892295,4.984573,-4.641366,-4.206193,9.630946,4.341213,-9.445068,-4.163646,1.330218,-9.554165,-0.806874,-2.009364,3.788767,-9.471042,7.711058,8.203140,-4.013898,-9.519461,-1.414568,-5.613335,1.542100,-6.112604,4.369631,-1.694967,0.720039,-8.620159,5.710759,-7.276763,5.165300,8.066682,-9.273248,-0.504587,9.592618,2.146328,0.490937,0.174290,7.737902,-9.587643,-6.131190,-4.557025,1.167370,-8.305225,4.861839,-2.576003,3.202458,1.892328,-6.533540,-0.484402,-3.800061,-0.359684,9.378160,-6.899533,9.917328,2.262714,6.795811,6.877112,-7.281220,0.403558,6.958752,-4.221219,7.022879,-2.519599,6.449449,2.715012,1.704188,-7.643285,-3.756182,6.525503,2.156851,8.210523,-9.116218,-9.716356,-5.853296,-4.022187,3.019563,-1.718079,-7.546649,-5.263702,2.070206,-7.110059,7.018967,2.633044,1.204109,6.316852,5.870970,-6.551294,-8.775818,-8.404144,-1.827888,-4.123942,6.638565,4.717260,7.885611,-4.340020,5.030994,5.144878,9.347868,-8.339784,-7.362332,6.617445,5.160563,1.067056,-6.533033,-1.731066,2.177815,-5.397928,-2.251725,-2.387201,-8.214569,-0.657372,6.201180,-9.737649,9.983773,-1.456687,8.298497,9.836686,5.818079,-1.804509,3.709902,-6.361185,7.757498,8.892556,-3.616175,0.367756,-0.780316,1.770221,-7.776670,-0.783327,-6.817797,0.284721,9.381506,-6.771511,2.938019,-1.013169,-4.913025,7.384342,-8.941074,3.673419,6.866282,4.358192,-5.245982,1.261741,-2.447952,-9.024528,-3.237691,-5.618527,7.871580,-4.661023,5.539644,7.339188,-1.644620,1.430499,1.781902,8.917083,-9.233254,6.347237,3.883381,6.051123,-4.545770,2.264621,2.544416,-4.403796,-4.170182,1.190579,-8.657817,2.856415,-8.225563,9.213900,9.562821,-5.335988,5.265035,5.583962,-3.791248,-6.400382,-3.644725,-9.878218,-7.655698,-6.401206,8.538212,-8.151328,-9.946172,-8.839572,5.806313,0.880376,5.499504,-6.685325,3.056625,0.864472,-1.710574,-9.488054,7.011482,-9.340739,-3.442967,5.691584,-6.501065,8.448839,1.484521,6.643571,6.234114,-1.135302,-8.050270,9.191798,-4.019283,-7.136075,-8.220538,4.795185,5.368530,7.109221,1.197976,0.923379,6.748671,-5.776216,2.754364,3.549197,-1.563489,6.864924,-3.496245,-6.994864,4.353843,6.238630,-0.290247,-2.937504,-2.805970,4.109318,-5.913738,1.567556,8.885531,-6.007502,-4.617095,8.439878,8.212340,1.531110,1.505080,-1.486645,-1.412393,-3.446466,5.280721,-6.222612,8.118509,8.417453,3.067398,7.559926,-2.344374,3.283816,0.481425,-0.986141,5.998733,-0.974873,8.846954,4.407560,-6.209821,-6.787156,-2.304737,0.072052,-0.069452,8.765473,5.855033,-7.693512,5.640067,-5.671050,-4.355539,5.874861,5.706476,-1.027877,2.397785,-3.252189,-2.887106,8.698383,-8.430425,-8.231203,3.178918,-8.722895,-4.128152,-5.765922,-1.599524,-0.495456,7.440995,-4.960001,3.370793,-4.345575,-1.903147,-8.636928,1.688103,-6.136055,-8.576618,7.393574,-2.366683,-9.896974,-1.935367,-7.003522,-0.229167,-5.639539,7.636197,-1.606619,1.335644,0.007877,8.282699,-9.251166,5.123863,-8.606769,6.064800,9.132986,3.807010,-3.579839,-3.655451,-4.027948,0.111854,7.534292,5.375368,9.978354,-2.155825,1.038073,-1.019032,-1.131215,-6.389236,2.821815,-3.066240,5.455396,7.897009,-9.460004,2.683113,-2.199204,8.231684,0.473597,6.423660,8.729110,3.774866,1.019007,2.031033,6.425781,5.794459,8.987646,0.879757,5.025545,3.498793,-4.848264,7.403164,4.837281,-3.228326,2.543766,-2.826067,0.707778,0.739277,7.654465,8.844369,-2.693518,-9.132739,-3.239706,2.086618,-7.916380,6.197361,0.878335,0.081117,6.916392,1.024437,2.230891,-9.534588,1.140764,8.616212,-4.282367,2.991168,7.801619,-4.812451,3.688060,-1.373655,-2.341027,-7.961873,-2.685912,5.658864,-7.431729,-9.350312,-7.465334,-6.866226,3.979579,-8.340630,-1.234263,-7.862125,2.155859,-6.120132,-1.801770,-7.812627,-2.801557,-2.068930,-1.975985,1.609253,-2.658659,-9.078393,-9.860473,-4.963187,5.314782,8.352797,-3.858306,6.579367,-6.417975,-4.258954,-4.789365,-2.741903,-7.088611,4.451287,-8.260819,1.129390,5.469518,9.612849,-1.002512,8.995012,-5.749094,-9.602118,-8.798891,9.994352,3.738000,-1.557376,-8.547544,-5.058113,1.375024,-6.129981,-9.229666,0.803689,3.117265,4.018008,-0.607127,6.257794,1.464807,-0.858905,-7.449694,7.857628,9.587594,9.616031,-2.899857,-5.210834,-5.945986,8.652217,-4.783165,-1.289810,1.040904,-8.825261,-8.507858,-9.798500,4.949697,3.243781,-5.105261,9.637285,-0.788059,-6.044951,-5.395582,7.372951,3.557463,-5.551134,8.177816,5.022211,-4.342304,-0.922981,-6.060250,8.829798,3.184148,9.001640,7.683305,-2.481886,1.671180,-1.091035,1.268894,-8.453756,-3.100943,8.821878,1.746740,-7.950131,-7.093570,-0.815525,9.511394,-0.109429,3.615058,2.050962,-6.710462,-4.295824,-2.285240,4.288650,-4.010135,-6.400594,-8.960229,-2.960660,-7.803291,-1.459634,-4.823787,0.877684,-5.472871,-3.172881,8.037255,-3.727352,2.441488,-0.737760,9.613317,-7.552908,7.757581,-2.950554,-7.252957,-4.777440,3.983876,9.028554,3.590273,7.997458,-9.355335,0.488592,9.458201,1.736762,9.041802,-3.031772,1.462641,-6.742937,0.481204,0.058877,-8.702521,1.172367,-2.629857,0.039431,7.658569,4.356750,-4.270680,-9.033039,-8.435205,6.696385,8.690744,-0.881742,-5.972446,7.515397,8.235845,3.583721,-7.446443,5.934946,4.657409,2.988438,5.520443,-5.470310,8.476342,-7.461207,-6.633880,1.626334,6.938726,-1.205605,4.538672,-4.336724,-9.868069,-9.093346,-7.077487,2.924752,-7.012555,-4.900433,9.596926,1.106292,1.502404,-6.064326,9.086239,6.237635,6.812849,-5.188017,-6.852205,5.958880,-4.992530,6.208963,0.219778,-8.462224],[2.796850,-1.181591,5.148826,-1.717864,3.423010,-3.603859,-7.999890,2.745882,-6.423502,-2.081401,-0.867259,2.969929,9.323009,9.175624,-7.862648,-3.141783,0.334603,-9.325422,6.401099,7.170938,-2.584606,1.312457,-3.743209,-4.602527,4.550240,3.718013,0.139564,-0.451614,7.089637,8.034418,-5.084733,-0.264242,-8.222595,-6.058325,5.988072,-0.600332,-9.545239,-4.205273,6.812860,5.584855,-5.618467,-1.784580,5.444115,-8.073690,3.680040,-4.307057,-5.661313,6.111200,-3.339634,-5.181650,7.834156,1.905884,-0.874381,-5.304718,-3.137381,-2.376542,-4.061876,-6.126542,-5.522024,6.564923,2.529542,6.731544,-5.574250,-9.879237,-0.341386,-7.633263,-0.069132,6.461487,5.473095,-5.235030,1.246218,-6.799270,1.187646,-3.210307,-6.589338,7.588887,5.725989,3.545289,2.990430,-9.278888,-7.660901,-3.868233,-2.242508,7.648344,0.855197,-3.556970,0.703982,7.256163,0.661582,-6.065176,3.509215,9.691855,-9.122825,-2.320257,0.500064,8.284932,0.775727,-7.136272,-8.527858,0.451298,1.642670,-4.780109,4.378757,5.293650,1.650379,-6.266199,-8.241729,-1.518546,-8.358545,-3.024738,6.784505,6.257293,8.111286,9.102963,3.571702,-6.517025,-3.527961,3.745540,-0.625071,-3.808727,-0.189720,-9.628258,9.920715,3.153750,5.413697,6.006479,-4.692413,8.091750,-3.331966,2.650331,4.092936,-8.161077,-0.324602,5.320165,-9.669639,3.977479,-2.877455,9.110268,-7.774009,0.588852,9.282623,-2.693440,3.504368,0.421007,-9.254580,-9.356056,-5.998315,6.441688,-1.926845,3.162076,2.634774,-7.506236,-4.249723,0.180349,-4.135635,-0.674186,9.675786,2.524051,-5.388368,-8.436000,3.856970,1.458094,5.101203,4.065197,5.520502,-4.268050,3.311136,6.421284,9.900164,-9.254517,5.120561,5.617336,9.907747,-6.983314,5.304239,6.036298,7.539895,8.853548,8.173275,-4.109046,0.963796,6.821312,4.672578,5.501367,5.505489,6.342265,-9.019467,5.144517,3.757581,-6.973644,-1.285912,-3.275448,-6.910188,-9.079089,-7.459963,-5.667963,-8.058259,-3.889875,-0.094218,-7.604146,9.136849,0.687834,-7.837991,3.456689,-1.500663,-6.805807,6.238567,-0.490597,-4.115323,-1.172436,6.503132,5.477174,-9.433569,-7.829960,7.755052,3.219762,-1.837784,-1.084246,2.012808,-6.274861,5.376162,8.306969,9.276481,-3.921001,-2.115139,-0.970571,-7.128793,4.454664,5.008761,4.987990,-5.691102,8.784924,2.707068,6.830426,-7.952119,-3.726829,3.683684,-9.997500,8.944087,-4.564958,6.112866,-7.474501,-7.756375,1.625943,4.880476,-5.430756,2.574452,-5.918245,-9.389321,7.844695,9.497022,-8.785472,7.804446,-0.834524,-1.184006,3.877738,4.937502,7.478368,0.678525,-7.847010,2.184261,9.701566,-2.001556,-8.917218,0.299210,1.305010,5.932730,6.105817,4.649516,-1.082827,8.233191,9.766714,7.772813,-6.784090,0.366944,8.692318,-2.556546,6.067514,-1.814374,0.348654,-1.183283,-5.247501,-2.694978,-4.871214,6.297804,0.824752,-3.473780,-6.450203,4.740792,0.807466,6.644925,-2.788896,1.712287,-3.213869,9.430640,9.125868,2.262772,1.096598,-8.517007,4.693507,-0.100574,-7.655894,2.263723,-3.681836,8.529674,-3.960832,-7.038756,-3.148495,-3.494954,7.740960,-5.770057,3.992502,9.970959,-2.693291,6.147298,5.709348,-9.118753,-6.831424,-3.536624,1.420978,-5.424944,-9.824667,-3.288783,-4.404883,-7.542983,-3.704481,2.311536,-2.301846,-2.885969,-8.149470,-6.738488,-4.703749,6.186491,-8.585582,9.514684,1.345038,0.898206,2.228161,1.404314,1.852391,5.875964,-9.211010,9.193124,3.777114,6.298508,1.621384,-9.476913,4.308266,1.047349,8.752313,7.782793,-9.993411,1.751101,-0.413944,-2.224320,-4.941044,6.671005,-1.367743,5.397485,-8.393023,9.112217,-6.597122,6.874670,7.832135,4.467285,-0.860639,2.929177,-2.531283,-0.664954,3.214294,-6.681585,-5.914930,6.070972,-7.824049,5.660003,7.873002,2.131937,-9.613615,2.980178,3.861237,-1.660987,2.077559,-7.040655,-0.394715,-5.130811,1.727180,4.336902,-7.703743,-5.781727,6.723041,-6.526319,-5.954896,-5.521689,-2.036335,-1.166925,3.823492,6.918527,6.570493,-6.740094,-2.389011,1.910124,3.043584,-8.980478,0.971172,-4.420686,-1.025128,-4.476806,-9.699403,0.499390,-7.846734,-6.916784,-2.290810,7.459589,-8.130066,-0.366584,-1.977463,-6.431671,-3.937493,-1.425803,-8.881496,9.841459,1.434974,2.583716,-1.585270,-9.816415,5.201083,-3.250921,9.673317,8.392061,3.448321,-5.586846,5.840159,0.331202,3.373557,-5.105992,8.970721,-0.499769,4.870591,-9.366123,-7.927791,-0.090538,-1.427731,-7.757082,-7.743187,1.051041,1.027021,-3.043762,-6.070822,-4.949144,6.934313,1.190517,-8.641597,7.453459,-5.152229,-7.738943,-7.218531,-5.949582,7.585765,-3.491921,-7.935541,-4.196870,-0.747910,-7.540514,-9.177884,-5.319483,1.184601,-5.061751,-9.919068,5.566171,-4.752816,7.225782,0.389111,2.788994,-2.436444,-0.390610,1.530059,-7.532673,1.334081,-7.716841,-0.943574,1.445422,5.369454,7.618542,1.676659,-7.831448,-2.009088,0.975154,1.880982,3.041358,-6.338962,-1.530748,-3.246998,8.508855,5.475325,4.113964,8.550603,-9.832648,3.410022,-9.524609,-0.242291,-9.531685,-6.843109,-5.797310,-8.058023,-6.893001,-9.511668,-5.518771,8.631415,-5.709232,2.007800,-9.084121,5.080474,1.454822,0.419409,8.725846,-5.476159,-4.756352,6.522218,-6.692955,-5.657961,5.754495,9.774561,0.002769,4.500919,-5.793575,-7.910070,8.909659,1.653052,-6.100871,-0.482609,-1.906552,5.755641,-0.992743,-3.949411,-0.873394,3.364480,2.472058,1.770409,2.913722,-4.086142,4.708884,5.388063,-9.307315,-0.903305,8.722938,9.671067,0.610169,-9.155632,5.316919,6.344825,-5.391915,4.490176,7.358415,-8.946814,-4.192861,-9.729955,6.361561,-5.175774,-4.736980,-3.419553,-9.554784,-6.766863,-2.238403,7.373033,0.774303,7.556960,7.132109,9.482902,1.946768,6.265831,-1.171124,-6.955695,3.410671,-4.852864,1.039294,0.869648,-7.258283,2.297094,3.351002,-2.140277,5.590966,-9.398065,7.820210,-0.656862,0.104538,-6.611659,4.988499,-6.187127,1.197566,7.372251,5.905432,-2.093649,-5.143809,2.598133,-3.535398,-2.488277,5.094360,-4.780430,-9.649433,-6.642883]], dtype = "float32")#candidate|11696|(3, 600)|const|float32
call_11695 = func_2758_call(relay.reshape(const_11696.astype('float32'), [12, 15, 10]))
call_11697 = func_2758_call(relay.reshape(const_11696.astype('float32'), [12, 15, 10]))
uop_11701 = relay.acos(call_11695.astype('float64')) # shape=(12, 15, 10)
uop_11703 = relay.acos(call_11697.astype('float64')) # shape=(12, 15, 10)
output = relay.Tuple([call_11673,call_11681,const_11682,const_11696,uop_11701,])
output2 = relay.Tuple([call_11674,call_11683,const_11682,const_11696,uop_11703,])
func_11724 = relay.Function([], output)
mod['func_11724'] = func_11724
mod = relay.transform.InferType()(mod)
output = func_11724()
func_11725 = relay.Function([], output)
mutated_mod['func_11725'] = func_11725
mutated_mod = relay.transform.InferType()(mutated_mod)
func_11595_call = mod.get_global_var('func_11595')
func_11597_call = mutated_mod.get_global_var('func_11597')
call_11777 = relay.TupleGetItem(func_11595_call(), 0)
call_11778 = relay.TupleGetItem(func_11597_call(), 0)
func_8486_call = mod.get_global_var('func_8486')
func_8490_call = mutated_mod.get_global_var('func_8490')
const_11782 = relay.const([-3,5,1,5,1,-10,-1,-5,-3,9,5,-5,8,8,-10,8,-1,-1,-8,8,2,-4,4,5,-6,-9,2,7,-7,5,-3,1,7,6,8,7,-4,2,2,5,4,10,-8,-4,-1,4,-6,-8,7,-10,-10,5,-8,1,-6,8,10,4,7,5,-8,4,6,-7,-5,-9,4,8,3,-1,-6,9,-9,6,-2,5,-3,-4,-8,1,-9,-8,-6,-6,8,8,-8,-3,-1,-4,1,-2,6,-3,-8,10,7,-2,-6,2,8,1,-10,-5,-3,-1,-6,-1,1,-9,-2,-6,-6,-4,7,-10,7,-10,-4,-7,4,3,2,-6,-8,2,3,9,-6,-6,8,-9,5,-3,6,8,-1,-2,3,-6,3,2,-5,5,-5,-6,7,1,7,-3,-5,3,-9,9,-2,-6,-2,-1,1,-8,-7,1,-2,-5,4,1,6,5,10,-9,8,7,4,-5,-4,-1,-9,-4,-3,-1,-5,-10,8,-8,1,1,5,-9,8,5,-9,2,1,1,4,-4,-4,-2,10,-9,1,8,9,-6,3,8,10,-10,-5,6,2,-8,2,7,2,-3,-7,9,-8,5,-6,3,-3,8,5,7,2,2,-7,-6,-6,-4,-9,10,-9,9,10,-3,7,2,3,-7,-5,9,-9,-1,-3,7,9,9,6,3,-2,-8,-8,-2,10,-6,-10,6,-9,6,3,1,-3,-8,-2,5,-7,-4,-3,-4,6,7,4,-7,10,4,-7,3,-7,10,-2,-3,8,-2,4,4,-7,-7,-4,-3,-8,-8,-3,-6,4,10,-1,-2,2,9,-1,7,-6,8,-9,-4,7,-3,-3,-1,-6,-2,7,5,-10,-5,-7,-9,-7,3,-10,-4,-9,9,7,-10,2,10,-5,-9,9,-8,-6,-1,7,-2,1,4,-4,-3,-5,-6,4,-6,-10,8,1,-8,-4,-2,5,8,10,5,6,-5,-2,8,6,6,1,7,-9,-8,8,-6,4,8,-5,-9,2,10,6,9,-1,2,-9,3,8,3,-1,-6,10,-2,8,5,-7,3,4,7,-8,-9,-10,7,2,-1,-6,10,2,10,-3,-9,4,6,-7,-5,-4,4,-5,-9,8,1,-10,9,-3,1,5,-6,3,7,5,-6,6,-10,-8,9,-2,1,9,1,8,8,3,4,-4,-7,-5,-5,-1,-2,-5,-7,9,-8,-6,2,2,-1,2,10,-10,-4,-9,6,5,9,8,8,3,-8,4,7,8,2,5,7,-10,-2,1,9,5,5,-5,1,-8,7,6,9,-1,-7,4,4,6,-2,-4,-2,-8,-10,-1,-1,9,10,-3,1,-1,-4,4,-8,-4,9,1,6,-10,4,-9,-8,-4,-4,-9,-1,-5,5,5,-2,-4,-8,2,-6,-2,4,5,10,2,6,-2,2,-4,-9,-2,7,-1,1,-8,-8,7,-2,5,2,9,-1,-5,-8,-1,7,7,-7,8,4,7,6,5,8,3,9,8,-3,-2,3,8,-5,3,-5,-2,-8,-2,-4,-4,9,2,9,10,2,-3,-3,6,-5,-2,1,9,4,4,10,-10,-5,-9,-2,-6,-10,1,9,-3,-8,5,10,9,-7,4,2,6,-8,-2,3,7,9,9,7,4,-7,-5,5,3,-8,9,2,-7,-2,3,9,1,9,-7,1,2,-10,-5,2,7,4,1,-3,8,-9,1,2,7,-1,8,4,10,-8,9,4,1,3,-5,10,2,-6,-7,-6,-10,9,-10,9,-6,-6,8,-4,7,-8,-6,8,8,-2,2,1,8,1,4,-8,6,7,4,-10,-1,-3,-9,-6,7,-5,-9,-1,8,-4,2,3,8,2,1,10,4,-10,8,-1,-7,2,-3,-2,-6,1,8,8,4,-5,5,1,-3,-2,9,4,2,-10,2,7,-8,-6,4,2,5,5,7,9,6,-10,7,-9,-3,-5,10,-1,-10,-5,-2,-2,-6,-6,2,-4,-7,1,10,4,-8,-6,-10,-9,7,-5,-4,-7,4,5,1,2,4,3,-5,5,5,-4,-10,7,10,8,1,-4,1,10,-9,-1,8,-6,10,-6,5,-1,-6,6,-10,-8,10,-5,3,4,-10,6,-8,2,-6,-4,-2,-7,5,4,8,6,6,-10,9,-1,-6,10,9,-1,-4,-5,-1,-5,-8,2,1,-3,-1,5,6,2,3,5,6,7,2,-8,-6,9,-2,-7,1,9,4,4,10,-1,10,6,-3,-7,5,-10,-6,3,4,-10,-2,8,3,-6,-10,7,-3,5,6,-1,-5,9,3,-1,4,1,10,-3,-1,-7,6,-10,-7,-2,-7,1,7,-7,-6,9,-10,7,10,-7,1,-4,8,-5,-9,7,2,-1,-1,-1,-5,-6,-1,-8,-5,1,-7,-4,-9,1,5,-5,7,8,-4,-5,-9,5,4,-10,8,-6,8,-1,8,-6,-9,10,9,-4,-6,2,-9,-7,2,-3,-9,-5,-10,4,8,1,-3,5,-10,4,7,-3,-7,-9,-8,-9,-3,5,-1,-3,1,8,6,5,-2,4,-7,4,-9,-10,5,-5,-4,-4,-9,5,3,-3,7,-7,-9,6,9,-7,-5,7,-8,10,3,6,3,4,-5,4,-7,10,-3,-1,10,-5,6,-5,-6,-4,-9,1,-4,-7,-1,4,4,-5,4,-3,3,7,10,4,7,5,10,7,10,-6,4,3,6,7,4,-2,8,6,3,3,10,5,3,-6,5,8,-4,9,6,9,8,9,-3,5,7,-4,-8,-6,1,8,6,7,-4,1,4,2,-1,9,7,10,4,10,-4,-6,8,1,7,-5,4,-3,-6,-10,9,3,-5,-2,6,2,-8,-3,10,2,3,10,-5,-6,9,10,-7,-4,3,-1,7,6,-10,2,6,7,3,-9,-2,9,-2,9,-9,4,-10,10,-8,3,-9,8,-10,7,4,-10,-10,8,-8,-3,-2,1,-2,9,9,-6,6,-6,-10,-10,6,3,-10,9,-9,-7,9,-3,8,9,-4,8,10,8,4,6,-9,7,1,-9,8,1,1,6,-8,9,-9,-3,8,9,-1,-5,6,-4,-7,7,-9,3,-2,1,4,-3,-6,10,-10,-7,5,-5,-3,-6,-2,-6,-1,2,7,-5,-3,4,7,-5,-4,-9,-2,10,5,-6,8,9,10,-5,5,8,10,-9,-5,-3,-7,-9,-9,6,4,-1,5,-4,-9,4,10,-6,-3,7,-1,8,-3,9,-4,3,9,2,2,-9,-4,-9,-4,-7,1,-4,2,-10,-8,4,4,-2,1,-4,-10,8,-5,-10,-1,5,-9,-4,-2,-6,3,-4,9,-9,10,5,-8,3,9,2,10,-2,6,-10,2,1,-5,-2,3,-5,5,-4,-1,4,-2,-10,6,1,-9,2,-6,7,-8,-6,-10,-5,-10,-6,7,3,-8,2,-6,-8,4,8,-1,-9,-4,1,7,9,-4,-10,-6,-10,7,-10,7,-10,6,-8,3,-7,4,2,-3,-1,-5,9,6,-8,3,6,6,8,-5,10,-6,6,-4,-3,1,-5,7,-10,3,-5,-5,-4,-8,2,9,-3,8,6,10,-10,-3,5,-9,2,2,6,-2,-8,-3,6,-2,-8,8,4,-1,-7,9,6,-9,-8,10,10,-6,-2,1,-2,7,-5,2,-1,4,-1,1,9,-8,1,-4,-7,1,9,7,7,1,-9,3,-10,-9,8,-8,10,-7,-1,-3,-1,-2,-6,-4,-5,5,2,3,3,-10,-9,-1,4,1,-10,6,7,-4,8,-6,-4,4,-8,-7,8,3,8,10,3,7,-4,-5,-2,-3,-8,3,9,10,-6,-8,6,6,7,-6,-5,-6,-8,9,-1,-2,1,-10,3,-8,9,-5,-7,-9,-5,7,-7,-9,5,7,-2,2,2,-6,4,-6,-9,-5,2,-3,10,6,-4,-4,-7,-4,10,4,9,-1,-5,-5,-7,-3,6,-5,9,-6,8,-3,-3,-6,6,-8,-2,-10,-5,-3,5,9,-5,10,8,8,-7,1,-1,-4,-6,2,3,-7,4,1,6,-3,-6,7,-8,-10,-8,-5,-9,-4,3,-5,7,-5,9,-4,-5,8,-7,-5,-9,-10,-7,4,5,-3,5,7,9,4,-7,5,-5,-5,-7,9,-7,-3,-3,-4,-4,-7,4,-2,5,3,6,5,-2,-4,-3,4,-2,-8,-3,-1,9,9,-1,8,-9,-7,-8,6,5,8,-3,-9,1,-9,-8,-3,-8,10,-3,5,-9,5,-5,7,1,7,10,-10,-3,-7,-9,10,3,7,8,6,-4,-5,3,10,-7,-9,-5,10,-10,-9,-7,6,-8,-6,7,-4,-4,-4,10,3,3,6,3,-3,3,1,2,-10,4,-9,-7,-6,1,-1,3,8,-8,-3,-10,-5,10,-3,-5,3,6,-2,4,-7,7,-5,2,6,8,10,-6,1,10,8,-6,7,-2,6,-7,10,10,4,-7,-1,-10,4,-5,3,10,5,2,-7,-2,-10,-5,5,-4,-7,-9,-7,-1,-6,8,4,-1,-2,-2,7,2,-3,8,4,6,4,-2,-6,-3,-9,-4,-9,-1,-9,-1,-7,6,2,9,-7,-7,-2,-1,10,-5,-5,4,-5,6,-10,-2,10,8,-1,7,-1,8,-3,-4,-5,4,7,5,-2,5,7,-8,5,-8,2,4,-8,-7,-3,4,7,9,5,-5,4,9,-7,-8,-3,-7,-2,6,-3,-10,3,4,3,3,9,5,8,-7,-10,-7,1,-6,7,2,-7,8,-10,2,-8,-3,3,-2,-3,7,-6,-6,8,-10,4,-7,-8,-10,9,-4,-7,4,7,4,-7,-3,5,7,-1,-8,-3,-7,10,-1,-1,6,6,-9,-7,4,4,-4,7,2,-2,-5,7,-8,-9,-8,8,8,5,8,10,6,7,5,-5,4,-9,-2,8,7,-3,-8,10,-4,3,9,-3,-9,8,6,1,9,-8,-10,5,4,2,-8,7,-1,5,8,-6,-8,-1,6,-4,-5,7,1,-3,-9,-8,-1,-10,-7,-10,-5,-2,-1,-9,8,-3,8,-8,-4,-3,-8,-10,5,-1,9,9,-10,-6,5,-9,9,-8,1,-5,9,-8,8,-5,-9,7,-10,1,9,-10,-3,9,-10,-10,-3,6,2], dtype = "int16")#candidate|11782|(1920,)|const|int16
const_11783 = relay.const([-4,1,-9,-2,-2,-6,1,-4,-4,9,7,-5,6,-3,4,-2,-3,2,-5,10,5,-8,-2,5,-1,-5,-6,1,-8,-4,6,-3,-10,2,9,-3,-2,1,7,-9,2,9,6,-1,-4,-7,2,-9,6,8,-7,-10,-3,-2,-8,-9,5,-10,7,5,8,-2,-3,3,-4,5,-3,10,-7,-8,-3,5,4,9,7,-3,-6,-5,5,8,-8,-3,-7,9,-7,-7,4,8,-9,9,1,-1,4,7,6,3,8,7,10,7,2,8,10,-2,-3,5,3,-2,-3,-8,-4,-3,6,-8,-5,-4,1,-3,-5,7,5,1,-7,-5,-2,1,4,8,5,6,1,7,1,-2,-4,-4,3,7,8,2,6,6,7,-10,10,-2,-6,-2,10,5,4,-5,7,-7,-5,-7,-2,1,-8,2,8,8,7,-3,7,5,7,6,-3,9,4,10,-10,5,-3,6,3,7,8,-8,-8,-4,-2,-1,5,-4,-7,-5,7,-2,7,2,-4,9,-1,-6,-8,7,3,5,-7,9,1,-10,-3,9,-2,7,1,9,3,-4,8,-10,-7,-10,-2,-10,-2,3,3,-5,-4,5,10,-9,1,-3,5,9,6,8,-8,-3,9,8,-8,10,-7,9,-9,10,4,-9,5,-2,-9,1,1,10,1,-5,-2,3,10,-9,-2,10,-10,-8,-9,8,-3,5,-6,-5,4,-6,-6,10,-2,-4,-5,2,-5,4,1,10,-2,9,10,5,-5,-2,1,-7,-10,9,5,-3,-4,-4,9,-8,-9,-1,2,-4,-6,-7], dtype = "uint8")#candidate|11783|(300,)|const|uint8
call_11781 = relay.TupleGetItem(func_8486_call(relay.reshape(const_11782.astype('int16'), [15, 8, 16]), relay.reshape(const_11782.astype('int16'), [15, 8, 16]), relay.reshape(const_11783.astype('uint8'), [300,]), ), 0)
call_11784 = relay.TupleGetItem(func_8490_call(relay.reshape(const_11782.astype('int16'), [15, 8, 16]), relay.reshape(const_11782.astype('int16'), [15, 8, 16]), relay.reshape(const_11783.astype('uint8'), [300,]), ), 0)
func_10993_call = mod.get_global_var('func_10993')
func_10997_call = mutated_mod.get_global_var('func_10997')
var_11790 = relay.var("var_11790", dtype = "int64", shape = (66,))#candidate|11790|(66,)|var|int64
call_11789 = func_10993_call(relay.reshape(var_11790.astype('int64'), [2, 3, 11]), relay.reshape(var_11790.astype('int64'), [2, 3, 11]), )
call_11791 = func_10993_call(relay.reshape(var_11790.astype('int64'), [2, 3, 11]), relay.reshape(var_11790.astype('int64'), [2, 3, 11]), )
output = relay.Tuple([call_11777,call_11781,const_11782,const_11783,call_11789,var_11790,])
output2 = relay.Tuple([call_11778,call_11784,const_11782,const_11783,call_11791,var_11790,])
func_11802 = relay.Function([var_11790,], output)
mod['func_11802'] = func_11802
mod = relay.transform.InferType()(mod)
var_11803 = relay.var("var_11803", dtype = "int64", shape = (66,))#candidate|11803|(66,)|var|int64
output = func_11802(var_11803)
func_11804 = relay.Function([var_11803], output)
mutated_mod['func_11804'] = func_11804
mutated_mod = relay.transform.InferType()(mutated_mod)
func_11724_call = mod.get_global_var('func_11724')
func_11725_call = mutated_mod.get_global_var('func_11725')
call_11809 = relay.TupleGetItem(func_11724_call(), 2)
call_11810 = relay.TupleGetItem(func_11725_call(), 2)
output = call_11809
output2 = call_11810
func_11828 = relay.Function([], output)
mod['func_11828'] = func_11828
mod = relay.transform.InferType()(mod)
output = func_11828()
func_11829 = relay.Function([], output)
mutated_mod['func_11829'] = func_11829
mutated_mod = relay.transform.InferType()(mutated_mod)
var_11830 = relay.var("var_11830", dtype = "float64", shape = (6, 7, 5))#candidate|11830|(6, 7, 5)|var|float64
var_11831 = relay.var("var_11831", dtype = "float64", shape = (6, 7, 5))#candidate|11831|(6, 7, 5)|var|float64
bop_11832 = relay.equal(var_11830.astype('bool'), relay.reshape(var_11831.astype('bool'), relay.shape_of(var_11830))) # shape=(6, 7, 5)
output = relay.Tuple([bop_11832,])
output2 = relay.Tuple([bop_11832,])
func_11838 = relay.Function([var_11830,var_11831,], output)
mod['func_11838'] = func_11838
mod = relay.transform.InferType()(mod)
mutated_mod['func_11838'] = func_11838
mutated_mod = relay.transform.InferType()(mutated_mod)
func_11838_call = mutated_mod.get_global_var('func_11838')
var_11840 = relay.var("var_11840", dtype = "float64", shape = (6, 7, 5))#candidate|11840|(6, 7, 5)|var|float64
var_11841 = relay.var("var_11841", dtype = "float64", shape = (6, 7, 5))#candidate|11841|(6, 7, 5)|var|float64
call_11839 = func_11838_call(var_11840,var_11841,)
output = call_11839
func_11842 = relay.Function([var_11840,var_11841,], output)
mutated_mod['func_11842'] = func_11842
mutated_mod = relay.transform.InferType()(mutated_mod)
func_11828_call = mod.get_global_var('func_11828')
func_11829_call = mutated_mod.get_global_var('func_11829')
call_11857 = func_11828_call()
call_11858 = func_11828_call()
func_11639_call = mod.get_global_var('func_11639')
func_11640_call = mutated_mod.get_global_var('func_11640')
call_11877 = func_11639_call()
call_11878 = func_11639_call()
func_11664_call = mod.get_global_var('func_11664')
func_11666_call = mutated_mod.get_global_var('func_11666')
call_11879 = relay.TupleGetItem(func_11664_call(relay.reshape(call_11877.astype('float32'), [12, 14, 7])), 1)
call_11880 = relay.TupleGetItem(func_11666_call(relay.reshape(call_11877.astype('float32'), [12, 14, 7])), 1)
func_11498_call = mod.get_global_var('func_11498')
func_11499_call = mutated_mod.get_global_var('func_11499')
call_11899 = relay.TupleGetItem(func_11498_call(), 0)
call_11900 = relay.TupleGetItem(func_11499_call(), 0)
func_11802_call = mod.get_global_var('func_11802')
func_11804_call = mutated_mod.get_global_var('func_11804')
const_11911 = relay.const([[6,6,-4],[-9,-6,-7],[-8,1,-8],[10,7,-2],[-7,-8,2],[6,-8,4],[-9,-4,-5],[-7,-7,-9],[-1,-8,7],[7,-1,-7],[-3,-1,-5],[-2,5,1],[-6,-5,7],[1,-4,-8],[8,-7,10],[-2,-6,3],[-7,8,-10],[5,9,2],[-5,4,1],[2,-9,8],[4,-2,4],[-2,8,-4]], dtype = "int64")#candidate|11911|(22, 3)|const|int64
call_11910 = relay.TupleGetItem(func_11802_call(relay.reshape(const_11911.astype('int64'), [66,])), 3)
call_11912 = relay.TupleGetItem(func_11804_call(relay.reshape(const_11911.astype('int64'), [66,])), 3)
func_4498_call = mod.get_global_var('func_4498')
func_4501_call = mutated_mod.get_global_var('func_4501')
var_11940 = relay.var("var_11940", dtype = "float64", shape = (576,))#candidate|11940|(576,)|var|float64
var_11941 = relay.var("var_11941", dtype = "float32", shape = (10, 78))#candidate|11941|(10, 78)|var|float32
call_11939 = relay.TupleGetItem(func_4498_call(relay.reshape(var_11940.astype('float64'), [4, 9, 16]), relay.reshape(var_11941.astype('float32'), [780,]), ), 0)
call_11942 = relay.TupleGetItem(func_4501_call(relay.reshape(var_11940.astype('float64'), [4, 9, 16]), relay.reshape(var_11941.astype('float32'), [780,]), ), 0)
uop_11944 = relay.sinh(var_11941.astype('float64')) # shape=(10, 78)
output = relay.Tuple([call_11857,call_11877,call_11879,call_11899,call_11910,const_11911,call_11939,var_11940,uop_11944,])
output2 = relay.Tuple([call_11858,call_11878,call_11880,call_11900,call_11912,const_11911,call_11942,var_11940,uop_11944,])
func_11948 = relay.Function([var_11940,var_11941,], output)
mod['func_11948'] = func_11948
mod = relay.transform.InferType()(mod)
mutated_mod['func_11948'] = func_11948
mutated_mod = relay.transform.InferType()(mutated_mod)
func_11948_call = mutated_mod.get_global_var('func_11948')
var_11950 = relay.var("var_11950", dtype = "float64", shape = (576,))#candidate|11950|(576,)|var|float64
var_11951 = relay.var("var_11951", dtype = "float32", shape = (10, 78))#candidate|11951|(10, 78)|var|float32
call_11949 = func_11948_call(var_11950,var_11951,)
output = call_11949
func_11952 = relay.Function([var_11950,var_11951,], output)
mutated_mod['func_11952'] = func_11952
mutated_mod = relay.transform.InferType()(mutated_mod)
func_11639_call = mod.get_global_var('func_11639')
func_11640_call = mutated_mod.get_global_var('func_11640')
call_11967 = func_11639_call()
call_11968 = func_11639_call()
output = call_11967
output2 = call_11968
func_11976 = relay.Function([], output)
mod['func_11976'] = func_11976
mod = relay.transform.InferType()(mod)
mutated_mod['func_11976'] = func_11976
mutated_mod = relay.transform.InferType()(mutated_mod)
func_11976_call = mutated_mod.get_global_var('func_11976')
call_11977 = func_11976_call()
output = call_11977
func_11978 = relay.Function([], output)
mutated_mod['func_11978'] = func_11978
mutated_mod = relay.transform.InferType()(mutated_mod)
func_11639_call = mod.get_global_var('func_11639')
func_11640_call = mutated_mod.get_global_var('func_11640')
call_11986 = func_11639_call()
call_11987 = func_11639_call()
const_11992 = relay.const([[[1.891820,-6.738949,6.676567,6.030339,-6.912951,5.830571,-9.195093],[-3.109682,9.774049,-3.260916,-8.103888,7.891062,-3.038481,7.780853],[2.649781,3.456663,7.487048,-0.643447,-8.754571,9.813745,-8.935304],[4.814498,-7.372442,5.975299,3.327148,-0.671656,8.499773,-2.479079],[-4.855579,-2.128372,-2.944361,0.540738,5.339883,3.306659,8.680186],[-9.686326,8.075901,-3.720635,-1.460716,2.857775,6.093899,8.806733],[5.055839,-5.471662,1.433016,5.162012,6.797102,3.466020,-5.683661],[-3.892641,-2.244241,-3.583048,7.972606,9.137636,-1.260721,6.319677],[-4.762680,-5.541399,-9.031114,1.108174,-4.306452,-5.012748,5.011662],[-7.058185,-1.109162,9.452673,-4.175285,-7.984669,-7.097734,2.984229],[-4.799622,3.523348,0.180206,-5.407612,-9.962783,8.154457,-7.866513],[-0.109989,0.926219,8.304075,-6.129946,-0.446830,-6.238565,-0.147853],[-0.045577,-7.318186,-2.096598,4.695926,8.978113,-0.425785,-0.121530],[-7.614896,8.772472,-6.477814,-8.242067,-6.029905,1.263776,7.565816]],[[4.338629,-9.190067,3.565599,-4.882830,-9.526006,5.281538,4.431953],[-2.651544,9.853982,-9.920371,2.051428,7.453797,-9.538345,-1.753623],[9.941172,-6.298808,9.006646,-8.776827,4.806582,1.680579,3.007178],[3.489497,-8.501726,-3.058290,3.959820,-4.070809,8.682665,-9.109424],[8.049801,5.923875,-1.850119,2.965479,6.895728,-0.386424,-6.957048],[-0.099964,-0.718265,-9.015485,0.945474,-0.528758,8.865437,-0.116433],[-5.477730,-4.243140,7.943598,-9.517462,7.167609,-4.017385,-8.824237],[1.785756,-3.464346,-1.304372,-3.165250,1.755650,9.677783,-9.247042],[-4.034430,3.460815,4.417582,-7.659750,-2.852370,-8.154242,-3.508252],[-7.687231,9.331850,7.353008,6.309583,-7.712956,-5.835661,-6.772569],[9.838552,-6.756720,3.323833,-6.359445,4.463337,8.509010,-8.267648],[-2.016898,-1.999528,2.709743,-1.358738,6.267857,-8.541566,5.934057],[0.287444,-1.355190,-0.423238,-2.745113,-5.997261,-9.478177,6.650980],[9.264818,1.004975,-0.690197,-4.411496,5.567121,-6.808978,9.997548]],[[-5.871994,0.347969,-8.504939,-4.266160,-6.207460,-1.609049,-4.701814],[6.936574,-8.237293,7.284981,-5.895973,-1.482319,9.127563,3.173764],[-0.703872,-8.372648,-4.323371,8.666321,5.058993,9.015856,-0.129017],[-5.503446,9.275682,5.566820,5.122049,9.760326,-8.438172,-4.991171],[-0.284696,-7.303880,-8.863945,8.820424,-8.178736,4.036640,9.037377],[-2.536527,-3.014910,-0.348023,-6.175019,-4.432210,-8.719450,1.927876],[5.287841,-1.160265,0.645674,-3.445855,4.307820,-5.841435,-3.779049],[0.201244,4.796265,-9.832794,-5.269642,4.247496,-9.009101,-5.583916],[1.967941,3.653741,-8.028395,-1.398268,-9.058574,0.562578,1.229219],[-2.017459,-8.981507,1.653800,3.989011,6.831294,-7.173112,-7.251883],[-0.675086,6.247236,-7.307280,-1.981054,-4.116060,-4.909891,-1.962666],[-0.099835,-5.374453,7.995595,-7.812537,-4.343528,-4.778733,9.759499],[-5.117441,3.410832,1.605270,-2.149694,-6.641823,-3.108381,-1.472955],[1.248616,-4.649080,-6.327130,-3.868579,7.586330,-6.550904,-1.890111]],[[-9.487751,4.443315,2.787909,5.158723,7.327135,-8.342976,6.522722],[-9.661538,-2.765394,-4.769236,8.582272,4.846557,-6.673115,-3.078895],[-8.464330,-7.168455,-0.886957,6.569221,-8.352535,-6.613272,-6.688143],[3.921091,6.915963,8.433491,-0.274101,1.953981,-5.159960,2.867224],[6.417562,7.826654,4.162645,-8.849321,3.849392,3.836926,3.366265],[8.745360,9.325653,9.281436,-7.207409,-8.205296,-0.943077,-2.525657],[-9.749591,6.708969,0.632243,1.024050,-6.928296,5.282478,0.631482],[-9.726514,-7.430612,-0.874748,-1.289520,5.753656,3.734065,8.740412],[7.062112,-5.159595,-6.957162,1.296195,5.926057,-3.919029,3.641407],[8.550478,-8.307393,5.213137,-6.887562,-4.572525,6.889941,3.933448],[9.851108,-3.247418,4.061019,-1.603435,-4.528234,1.610357,-3.872066],[-8.483068,7.939428,-1.620552,7.288713,4.244049,-7.981884,-4.408046],[2.996155,-2.785599,5.282840,1.927248,1.753900,-6.911594,8.947499],[8.361764,0.749122,9.712916,-8.155620,-2.177217,8.741332,4.423298]],[[-7.242857,9.535621,7.912147,-8.767097,-0.255624,2.552873,-3.074449],[-8.326045,-3.561212,4.285142,3.865633,-5.707222,7.101440,3.548437],[-8.764522,-7.100279,-2.369807,-1.429985,8.583548,-7.658623,-6.884992],[5.340025,2.873550,0.318249,-0.445836,4.078184,9.484937,5.264451],[6.097709,-1.528945,9.302655,-6.854673,-1.633869,6.564142,3.862249],[-8.883199,-8.918563,-3.908100,8.296411,2.364885,8.853637,5.912584],[-3.753791,0.717793,4.766613,-3.587247,-6.973382,-3.217894,8.685676],[-4.363841,-8.103283,3.919099,-8.983564,-4.524061,1.383129,5.245640],[1.509426,5.566742,8.057395,8.554751,-3.984344,3.182747,-3.507369],[-8.279905,-6.852330,-5.622413,5.751267,4.062277,-9.532351,9.058378],[7.664438,-7.750785,4.347653,-7.058790,-9.968105,5.426498,0.551296],[7.694605,-0.800169,-4.302755,-1.656676,3.510757,-1.928868,5.559294],[8.252144,-8.295443,-2.990030,4.740215,-7.194004,-3.618760,9.047145],[-0.142311,4.374867,-3.346577,2.211997,-4.825461,0.208391,4.135369]],[[-8.931149,-0.220562,0.621094,-0.599657,2.418248,1.032718,6.689361],[-7.706849,0.048488,-3.349804,-8.943515,-6.140513,9.173691,8.986831],[9.773807,-0.463595,-8.954082,4.877862,3.310532,0.084941,7.940608],[-8.692463,-4.897016,8.348677,0.087919,-9.843439,-2.076909,8.584709],[3.123071,-1.360116,4.302948,-1.439514,-2.370116,9.434070,5.894559],[-9.793239,8.852870,-3.697821,-2.148725,9.903487,6.641128,5.325131],[0.204295,8.134842,-2.229871,1.791830,-2.128871,7.487215,7.046867],[-3.612135,3.690342,9.797065,1.428239,-1.971121,5.242249,-6.859350],[-9.229804,-4.635461,-2.543752,-8.610890,4.052487,2.628545,-2.071761],[-9.633169,5.336734,-1.157603,-2.059431,-9.996739,7.629140,1.906340],[-5.699774,1.408165,2.855644,-5.357734,2.701073,-6.342520,-7.467063],[-8.428664,-2.978258,-4.525676,7.543152,-6.832396,-1.892938,-2.374526],[-0.911416,-3.095030,5.394697,6.434148,7.281045,-1.689672,-5.309567],[-4.112617,-2.099650,9.173682,6.762196,5.606033,0.636190,-9.057418]],[[-2.447419,3.220072,-2.562684,1.991326,-8.238626,6.216004,0.863438],[-6.711488,-8.790139,-2.192401,-8.762727,-9.100909,-5.487366,-6.368428],[1.856647,7.899332,3.279083,-5.477925,7.270706,2.570090,-7.537720],[6.954421,8.650557,-2.480447,-3.653713,-9.941229,-9.346388,8.842630],[-2.439689,-9.128679,-8.517263,0.669114,5.337106,-2.869766,-8.575308],[-3.436030,-6.582876,-4.226057,1.241748,5.810405,1.691249,-1.468228],[-5.758787,-1.383030,-0.432675,3.212884,4.050327,-3.205331,-7.071212],[7.555474,2.493020,-1.147089,4.095715,0.516071,7.600529,5.833707],[-1.309461,-6.019848,7.227441,-3.234489,-6.220341,-0.932855,-3.711525],[-4.233772,3.522784,5.359108,4.728364,-8.568464,-6.727793,8.917003],[6.661784,3.445881,8.239988,-6.016806,-4.482887,-6.486346,-9.562234],[-4.659781,8.133650,-9.902707,-0.244004,4.236256,3.486723,6.834525],[5.371022,0.013959,4.223184,6.320214,-2.306113,8.707120,-0.548530],[2.657416,-2.009417,6.066661,-6.816920,6.824674,-6.170464,-8.481167]],[[-5.518859,4.831867,8.473475,-7.783188,7.044857,2.050520,-8.855747],[0.916979,-5.685305,3.728102,-5.145130,-1.309473,-0.146940,-0.070225],[5.061253,-7.995327,-2.931005,6.664804,-6.866003,-4.502973,1.798623],[-5.684362,-3.929341,-9.522656,-1.054590,7.240554,1.698002,-5.836577],[9.174295,-5.692706,9.800013,1.588163,-0.550573,3.033848,-7.095110],[8.892006,8.147286,9.768096,5.065899,-3.645668,-4.633049,-4.796139],[-6.851978,9.914660,4.563388,-1.889638,3.912826,-6.000324,-8.734153],[-6.272883,6.954291,7.013751,8.194155,-8.149401,-8.676197,6.033430],[1.681719,-1.503310,-2.939620,0.298705,8.615082,-5.945480,8.291257],[9.039916,6.206451,6.870494,7.765312,1.372501,9.386074,7.554799],[1.151740,-8.752352,-1.336178,-3.809918,2.730747,3.956049,9.495173],[5.119467,-3.152570,-8.326974,-3.079731,5.292924,-8.251348,1.313825],[-9.612034,-9.926077,5.178123,-4.934816,4.166636,-1.483632,7.278144],[-5.747575,9.213104,7.076689,-6.378795,3.037900,9.177399,-3.302897]],[[-8.061664,-1.639726,-8.625420,-6.875077,7.070523,7.838449,3.041222],[6.508441,8.262658,4.272151,3.615354,3.692829,-3.424842,1.053155],[1.398898,-3.223172,4.098858,-6.303070,7.798606,9.472502,-5.671472],[3.580940,-4.163431,-8.192921,-7.726604,-0.507999,-2.712104,9.877174],[9.534199,0.830970,-8.201707,-0.130652,-9.213669,7.185108,7.295707],[-8.665711,-5.869226,0.712145,8.963425,-5.274659,1.885764,3.220111],[-3.115829,-2.835712,4.118783,-8.080762,6.374613,5.750861,-6.527981],[9.986074,8.288289,3.476253,-6.976971,-6.470031,-5.919598,8.674004],[-5.378092,7.790559,-0.906906,-5.261775,8.178234,7.983182,9.527544],[-5.024600,-7.398615,1.904005,-7.829016,3.993914,7.622738,-3.029843],[-4.747092,6.056303,-2.960125,-7.241837,-1.573687,8.361496,0.546153],[8.072486,7.136396,-0.596783,1.456801,-0.805837,-8.994464,-7.946419],[5.304315,6.874078,6.325851,-9.220413,-5.341718,-1.587507,1.864725],[-1.834013,-8.864676,5.620707,-5.883185,5.032490,9.060522,3.455547]],[[2.561667,2.527436,-1.268924,8.661984,8.310800,8.496048,-7.125998],[1.134317,5.138721,-5.824988,8.225281,-2.836595,-4.214834,1.978038],[3.788690,8.837503,3.728666,4.528145,-2.056278,4.609633,5.223152],[2.073197,-6.891452,8.632317,-4.718519,4.386456,-0.112071,8.877160],[-0.049217,-4.481420,5.851816,-3.821277,9.814003,-2.004726,-1.795664],[2.426612,9.062318,5.875572,0.019695,5.101424,9.118516,0.826562],[-2.154917,-7.555902,-4.768045,-1.281986,-4.460787,-5.025509,4.173152],[5.555668,-3.279299,2.473425,2.694950,5.419189,0.128762,2.356731],[3.094795,-9.233760,8.511694,-5.039844,-2.267937,-6.384264,-2.454813],[-8.862496,6.112356,6.781804,-5.030097,5.128405,-1.786821,2.813851],[-4.389211,-7.608342,0.935812,1.516822,8.854265,-6.436355,7.877460],[-1.770179,9.878910,2.512362,3.025245,-4.204948,8.643962,9.634809],[-5.385511,7.380298,4.114911,8.460466,9.421948,-9.611525,-1.311208],[-8.048325,6.561631,9.321048,6.230995,9.367669,-3.210168,-3.022542]],[[-7.815908,3.446921,-7.085441,7.989094,-7.356537,6.688286,5.163682],[-8.626588,-5.671530,7.477572,1.163907,1.016735,2.740508,5.614783],[-2.905100,1.447796,-3.790696,-9.222327,-4.562990,-9.931711,-9.637719],[-7.874424,1.684702,8.770947,8.671941,0.508581,-0.892945,1.905856],[-2.878597,3.921374,-2.424620,4.948921,0.357851,-4.007013,2.087780],[-3.067419,-0.888599,2.809466,3.636605,5.137465,-1.590240,4.031576],[0.937160,-3.413291,-2.666468,5.915556,3.044615,3.753420,-1.248349],[-5.931585,-5.494327,6.454314,1.178092,1.573875,4.885970,4.190184],[3.423831,-4.556152,9.123056,-0.664868,-8.881076,-9.219737,-7.246934],[-0.887797,9.825878,-4.873886,8.142249,-0.684868,5.161521,2.190076],[8.361345,-3.321682,-9.483310,9.101421,3.495891,2.725573,9.513428],[7.741863,5.840673,-0.678219,-1.409774,-0.429821,-5.367529,-1.665372],[-5.879390,8.621989,-7.861856,7.311866,-6.372354,-9.451650,-7.785420],[-5.103472,-1.596232,-6.150689,0.617276,-0.199347,4.379257,-4.603276]],[[-1.238040,6.256341,-5.487469,-7.474905,-0.011331,0.228693,-3.806923],[7.907384,9.986920,8.485067,7.075613,1.188641,-4.887576,4.349167],[2.974724,-8.093078,-9.745969,-7.890661,-6.755336,-6.276414,-4.164847],[8.793089,8.926126,-4.475322,-5.868541,-0.067647,2.483448,2.047012],[-6.659695,8.504465,-5.659737,2.737494,-5.542330,1.936937,-1.709246],[2.817310,-8.064882,9.342941,4.477546,-4.179696,3.933970,-1.852441],[4.914575,6.389615,-8.096156,3.373154,-5.479647,0.883068,-4.896217],[4.489901,-7.636999,-1.713484,9.215459,5.172089,6.530417,7.801042],[-0.463656,1.902005,0.853853,5.898328,2.604780,-6.204241,6.593740],[-2.236794,-5.555346,-6.005912,1.643914,7.269224,5.365312,3.637256],[3.461029,2.306195,-3.276115,1.756630,7.596006,6.286814,9.909526],[-3.232911,-5.272397,-6.463265,-4.882725,3.563162,9.617055,9.601358],[3.198413,4.689641,2.479211,2.286635,9.896597,5.980962,0.949552],[-2.389837,-8.960038,-6.431635,6.843980,4.174331,7.334879,3.599423]]], dtype = "float32")#candidate|11992|(12, 14, 7)|const|float32
bop_11993 = relay.bitwise_xor(call_11986.astype('uint64'), relay.reshape(const_11992.astype('uint64'), relay.shape_of(call_11986))) # shape=(12, 14, 7)
bop_11996 = relay.bitwise_xor(call_11987.astype('uint64'), relay.reshape(const_11992.astype('uint64'), relay.shape_of(call_11987))) # shape=(12, 14, 7)
output = relay.Tuple([bop_11993,])
output2 = relay.Tuple([bop_11996,])
func_12007 = relay.Function([], output)
mod['func_12007'] = func_12007
mod = relay.transform.InferType()(mod)
mutated_mod['func_12007'] = func_12007
mutated_mod = relay.transform.InferType()(mutated_mod)
func_12007_call = mutated_mod.get_global_var('func_12007')
call_12008 = func_12007_call()
output = call_12008
func_12009 = relay.Function([], output)
mutated_mod['func_12009'] = func_12009
mutated_mod = relay.transform.InferType()(mutated_mod)
func_11976_call = mod.get_global_var('func_11976')
func_11978_call = mutated_mod.get_global_var('func_11978')
call_12042 = func_11976_call()
call_12043 = func_11976_call()
output = relay.Tuple([call_12042,])
output2 = relay.Tuple([call_12043,])
func_12050 = relay.Function([], output)
mod['func_12050'] = func_12050
mod = relay.transform.InferType()(mod)
mutated_mod['func_12050'] = func_12050
mutated_mod = relay.transform.InferType()(mutated_mod)
func_12050_call = mutated_mod.get_global_var('func_12050')
call_12051 = func_12050_call()
output = call_12051
func_12052 = relay.Function([], output)
mutated_mod['func_12052'] = func_12052
mutated_mod = relay.transform.InferType()(mutated_mod)
func_11595_call = mod.get_global_var('func_11595')
func_11597_call = mutated_mod.get_global_var('func_11597')
call_12053 = relay.TupleGetItem(func_11595_call(), 0)
call_12054 = relay.TupleGetItem(func_11597_call(), 0)
func_2566_call = mod.get_global_var('func_2566')
func_2570_call = mutated_mod.get_global_var('func_2570')
var_12060 = relay.var("var_12060", dtype = "uint8", shape = (50, 6))#candidate|12060|(50, 6)|var|uint8
call_12059 = func_2566_call(relay.reshape(var_12060.astype('uint8'), [4, 5, 15]), relay.reshape(var_12060.astype('uint8'), [4, 5, 15]), )
call_12061 = func_2566_call(relay.reshape(var_12060.astype('uint8'), [4, 5, 15]), relay.reshape(var_12060.astype('uint8'), [4, 5, 15]), )
func_6871_call = mod.get_global_var('func_6871')
func_6873_call = mutated_mod.get_global_var('func_6873')
var_12063 = relay.var("var_12063", dtype = "uint8", shape = (70, 2))#candidate|12063|(70, 2)|var|uint8
call_12062 = relay.TupleGetItem(func_6871_call(relay.reshape(var_12063.astype('uint8'), [5, 14, 2])), 1)
call_12064 = relay.TupleGetItem(func_6873_call(relay.reshape(var_12063.astype('uint8'), [5, 14, 2])), 1)
output = relay.Tuple([call_12053,call_12059,var_12060,call_12062,var_12063,])
output2 = relay.Tuple([call_12054,call_12061,var_12060,call_12064,var_12063,])
func_12067 = relay.Function([var_12060,var_12063,], output)
mod['func_12067'] = func_12067
mod = relay.transform.InferType()(mod)
var_12068 = relay.var("var_12068", dtype = "uint8", shape = (50, 6))#candidate|12068|(50, 6)|var|uint8
var_12069 = relay.var("var_12069", dtype = "uint8", shape = (70, 2))#candidate|12069|(70, 2)|var|uint8
output = func_12067(var_12068,var_12069,)
func_12070 = relay.Function([var_12068,var_12069,], output)
mutated_mod['func_12070'] = func_12070
mutated_mod = relay.transform.InferType()(mutated_mod)
func_11595_call = mod.get_global_var('func_11595')
func_11597_call = mutated_mod.get_global_var('func_11597')
call_12080 = relay.TupleGetItem(func_11595_call(), 0)
call_12081 = relay.TupleGetItem(func_11597_call(), 0)
func_7164_call = mod.get_global_var('func_7164')
func_7167_call = mutated_mod.get_global_var('func_7167')
const_12097 = relay.const([-6.029061,2.481591,3.794700,-5.412652,5.120015,-1.420196,-4.698795,-7.441046,-0.935669,-4.974045,2.501396,5.175242,-3.020720,1.256302,0.121932,6.399091,-6.377585,9.551666,-2.724024,4.394892,-8.966148,5.654982,3.629324,4.356556,-9.768528,-2.576017,-9.297379,8.621241,0.492589,-0.541988,2.826361,-6.217094,-1.385092,-3.252233,-5.955531,8.347368,6.788078,0.312963,-8.520962,6.897555,8.601099,-4.568143,2.151961,-2.288294,1.669770,0.509051,-3.496137,-6.061364,-1.206318,1.253048,-0.354483,0.111635,-9.802193,0.572539,9.215138,4.543822,-4.386315,-6.494216,-1.963425,-5.895834,-0.752180,-2.266778,-8.468380,6.764153,2.414470,1.514584,0.239643,-2.310677,1.892117,9.333321,-7.829005,5.805959,-6.487514,-7.655293,2.204957,-4.587949,-6.271116,-0.477991,-6.284325,3.441592,6.161692,8.985954,5.869972,-5.179656,4.844828,-6.656849,-2.459859,-5.890589,5.958849,0.525484,-2.199327,-9.622741,7.543443,1.700673,9.599098,2.132979,5.914047,9.244565,-6.098140,2.499316,5.850361,8.561928,-2.382487,3.630800,-4.713572,-2.672024,-9.311824,-6.639352,1.387852,3.298474,-2.969591,4.714799,-2.989346,1.598685,-6.618630,-1.741873,-6.662049,-2.656958,-7.002813,-6.768588,-8.153734,6.845228,-6.758755,-5.267855,1.283273,-9.745160,6.063762,2.272605,-5.324182,-2.060267,1.836053,0.448841,4.311000,-8.298793,7.583168,-1.363248,2.949358,-9.128450,4.546725,-1.934427,5.155186,6.788395,-5.843213,-1.527472,3.579997,-7.535806,7.464002,-4.162594,0.924343,-3.362708,5.226652,-0.828931,-7.711515,-5.407106,-1.383154,-6.952226,8.832772,-0.758442,-4.064253,3.803989,3.614014,7.471262,8.973005,5.236365,-3.336944,2.526703,6.818029,9.453773,-7.222292,4.562626,-0.398790,-5.927314,9.353308,5.687039,5.983163,8.764853,-0.781817,-0.903097,-7.486496,-1.927215,1.649736,6.144262,-3.144262,9.600839,-8.619252,4.646929,-3.161867,7.100981,-1.358862,-8.358576,3.239627,-1.308632,-4.491374,4.430958,3.548732,6.388986,0.243609,1.333521,6.878200,-2.454886,2.378842,-6.001068,-3.274106,-9.525632,0.846382,-3.409185,-5.985823,-0.608082,8.115161,-5.136897,-8.262840,-6.947698,-3.325528,9.323801,-0.813493,3.864851,6.776655,8.188252,8.954952,-7.000388,-7.872654,4.541535,4.392480,6.395688,2.520093,7.279630,-5.466647,5.254707,8.838033,-4.275538,8.265326,-4.559316,-2.817472,-8.132699,5.860398,-0.283470,3.609597,-6.807278,4.807496,-6.556666,0.523700,-9.869536,5.665816,-6.588085,-3.540242,-9.368201,3.694506,-1.885580,-2.284644,3.336406,1.147250,-4.841015,-2.312361,-4.507173,-0.861320,-2.564933,-7.627643,7.686270,3.218689,5.301310,3.966592,0.158242,-5.600037,-1.307436,-9.288533,-9.631009,8.148843,-4.985363,5.985123,2.798163,9.536607,-9.230651,6.358074,7.756833,5.152719,-2.277476,-4.008693,5.378921,-8.987655,-4.569357,-0.045559,-9.021248,2.729279,6.310835,8.579635,-9.630869,-9.221696,2.535792,3.499493,-9.752344,3.722041,4.248693,-7.866198,-2.025346,-5.798723,9.249173,3.902375,-7.055854,7.726469,9.656833,-4.207949,1.718686,-2.433709,-4.129717,-5.223116,9.878570,-4.847494,9.228795,7.878159,9.341995,-0.273862,-6.720653,-1.733987,-1.526009,-2.051761,9.202565,-2.516324,-6.518707,0.620783,-1.800076,6.634027,3.497623,-9.214791,4.527755,-3.681459,3.311802,7.359950,-3.144900,-3.432518,8.918960,-8.936977,2.060559,-3.976976,-6.609435,7.155053,5.219003,-2.751273,-2.452456,1.932196,-3.441767,-1.659344,3.756102,-8.114245,6.874745,-9.842724,1.958397,6.808275,2.328166,-2.607814,4.180825,-3.476914,4.058593,6.287418,8.515801,8.101984,-7.553606,2.591659,3.633958,1.001973,-1.644074,-4.454775,7.861967,5.342566,4.516200,-4.580760,0.385680,1.045864,9.071286,-8.733816,1.636937,-4.926851,0.300505,7.506440,8.556280,6.856902,7.361543,-7.029970,-7.630085,4.725422,1.493119,-4.007045,5.035388,4.609234,8.071348,2.242869,2.057087,-2.838869,-0.365136,-7.068471,1.383925,3.885117,4.220323,1.765307,6.755156,4.195593,-5.503428,9.172357,8.666479,-3.449593,-6.674182,8.280292,4.857133,-4.096068,-0.865119,-0.161511,5.328556,-2.208119,6.907034,-7.602238,-0.666260,8.198602,6.437353,-6.273611,-0.205169,5.033661,2.422370,-7.041852,0.640152,-9.637986,0.915926,4.268742,-4.756544,4.297340,1.741892,9.600019,0.242661,-1.305102,3.536520,4.605104,6.444300,5.967133,-0.248784,6.888797,-5.125043,2.469417,-1.720042,-0.379363,-6.663829,-0.102809,3.638518,4.867994,0.561583,-4.707289,3.123502,-6.417141,-6.759512,3.656833,5.936870,-7.585765,-1.786126,-8.628722,-7.796152,1.904239,-0.764706,-9.729176,1.499902,3.398090,8.085749,-2.781073,0.995461,3.337244,-1.833392,-2.427777,-3.648858,7.118380,-6.233484,8.241567,8.529499,0.373757,6.974516,0.200331,-7.817674,6.228022,-4.018633,-3.564955,-4.771752,-5.583383,-2.361857,-2.938851,0.005361,9.109902,6.126627,9.990800,5.439292,7.329712,-4.851017,-7.165074,7.544538,6.970756,9.750339,9.436565,1.476237,-7.149611,4.378272,-0.031236,-7.632357,-8.255775,3.741775,-4.622677,7.396128,1.217518,0.618702,-2.088566,1.384622,-1.235064,2.512823,-2.547766,4.368795,-9.739236,5.783877,-4.234827,-0.285448,-9.468526,-1.170697,-2.964549,-1.919149,9.430717,3.042267,-7.205396,4.223888,0.996409,-5.136463,-6.196884,-3.117497,-3.398785,5.103831,-0.105731,-5.541577,5.494387,5.401341,-0.274282,8.563714,1.391401,8.688355,7.640722,6.848402,3.009911,-2.434044,8.316780,-9.590781,4.539628,-4.214116,2.598419,-1.879715,4.415984,-3.278782,2.565060,-0.398538,7.970382,-2.105415,-4.746313,6.205191,8.871701,8.946238,0.328293,6.404258,-4.186155,-5.267960,-6.059094,-3.411211,-8.819305,7.520016,5.688928,5.413384,2.671878,7.889248,5.868110,5.719413,2.139415,3.009038,-4.681864,0.119459,2.572901,-3.205223,-3.244371,7.376922,7.467350,-4.042785,-9.385545,6.273411,3.790449,-8.009260,-7.048502,6.677807,-9.463983,-9.418825,8.983567,9.042974,4.528284,-1.190583,2.297802,-3.053542,-3.839003,5.152281,-2.238520,-8.858621,8.884197,-3.685276,-5.884419,0.878759,0.912994,2.458976,0.759242,7.512014,-5.426366,-7.422124,9.508537,0.811378,8.412481,5.804807,2.177907,0.285632,-4.763008,-5.727198,-9.427671,8.623764,0.852164,-8.800856,-7.037422,0.082309,-2.158055,-7.049501,5.936702,7.179364,-9.972453,-2.276092,5.633748,-0.348974,-0.963469,-3.526244,3.981969,-6.045917,1.979848,2.323614,-7.543600,-1.318712,6.072522,-8.544217,-2.468096,6.162629,-6.855989,1.433790,-4.198325,1.113559,-0.325907,5.857640,-4.407950,8.580285,-8.007292,1.043145,7.822099,0.770036,-6.212413,5.439138,-5.216210,0.700244,6.771422,-1.797880,-4.977773,-3.410422,8.765366,-8.747607,5.030071,7.884873,6.610445,-4.565466,4.125451,6.301880,8.614934,-8.217784,7.199181,2.938545,-3.885236,-2.652951,1.057274,-3.061160,-2.119197,-7.304295,-3.740073,-1.791355,-6.309831,-7.275344,-4.852900,9.343299,1.283221,1.090451,6.529556,0.020032,-1.614155,9.407614,-8.826963,8.939951,-9.217362,-0.884915,7.726745,-3.672878,3.903722,5.799420,-2.713835,2.263608,9.309484,4.902618,1.568166,-5.080283,-1.101535,-9.737740,5.091883,-3.794743,8.924757,-1.987486,0.978865,7.344718,-7.225182,-8.435056,5.203538,-6.379047,5.149692,-2.159454,-8.839741,-7.688421,-2.616229,5.979490,-6.142434,8.733892,-9.896409,9.660918,1.942909,-8.548892,2.121136,-2.309556,-5.530170,7.619648,-9.491790,8.749682,1.809132,-4.476022,-5.053149,8.766649,8.052424,-6.579948,0.077472,4.934100,-0.758866,-6.884421,-1.585989,4.829246,8.112412,-8.742304,-0.867561,-9.175186,-7.133268,7.385781,-6.120645,8.912228,7.636785,6.222549,8.964332,0.633902,-6.495048,-2.384724,2.285400,3.658145,-0.907132,-6.738204,9.401222,-1.220814,8.355453,-7.027628,8.050059,3.536948,-0.766839,5.513004,3.592913,1.119954,-2.577029,4.556975,7.062002,-6.983569,-8.948377,-5.858987,5.271832,3.798192,-9.380136,-7.370573,-2.370126,1.072863,-3.136337,-9.708425,3.839288,7.650306,4.218866,6.518142,1.045426,1.938510,3.306691,-0.764603,-7.834517,5.806900,3.916529,-1.698119,-1.545093,-3.500437,-0.532521,-8.786233,9.872709,4.947289,-0.457591,6.216864,-6.687659,-5.145445], dtype = "float64")#candidate|12097|(810,)|const|float64
call_12096 = func_7164_call(relay.reshape(const_12097.astype('float64'), [15, 6, 9]))
call_12098 = func_7164_call(relay.reshape(const_12097.astype('float64'), [15, 6, 9]))
func_4631_call = mod.get_global_var('func_4631')
func_4635_call = mutated_mod.get_global_var('func_4635')
var_12101 = relay.var("var_12101", dtype = "int64", shape = (1344,))#candidate|12101|(1344,)|var|int64
var_12102 = relay.var("var_12102", dtype = "float32", shape = (154,))#candidate|12102|(154,)|var|float32
call_12100 = relay.TupleGetItem(func_4631_call(relay.reshape(var_12101.astype('int64'), [16, 14, 6]), relay.reshape(var_12101.astype('int64'), [16, 14, 6]), relay.reshape(var_12102.astype('float32'), [1, 154]), ), 1)
call_12103 = relay.TupleGetItem(func_4635_call(relay.reshape(var_12101.astype('int64'), [16, 14, 6]), relay.reshape(var_12101.astype('int64'), [16, 14, 6]), relay.reshape(var_12102.astype('float32'), [1, 154]), ), 1)
uop_12119 = relay.atan(call_12080.astype('float64')) # shape=(12, 14, 7)
uop_12121 = relay.atan(call_12081.astype('float64')) # shape=(12, 14, 7)
func_7549_call = mod.get_global_var('func_7549')
func_7551_call = mutated_mod.get_global_var('func_7551')
const_12135 = relay.const(4.671901, dtype = "float32")#candidate|12135|()|const|float32
call_12134 = relay.TupleGetItem(func_7549_call(relay.reshape(const_12135.astype('float32'), [])), 0)
call_12136 = relay.TupleGetItem(func_7551_call(relay.reshape(const_12135.astype('float32'), [])), 0)
output = relay.Tuple([call_12096,const_12097,call_12100,var_12101,var_12102,uop_12119,call_12134,const_12135,])
output2 = relay.Tuple([call_12098,const_12097,call_12103,var_12101,var_12102,uop_12121,call_12136,const_12135,])
func_12140 = relay.Function([var_12101,var_12102,], output)
mod['func_12140'] = func_12140
mod = relay.transform.InferType()(mod)
var_12141 = relay.var("var_12141", dtype = "int64", shape = (1344,))#candidate|12141|(1344,)|var|int64
var_12142 = relay.var("var_12142", dtype = "float32", shape = (154,))#candidate|12142|(154,)|var|float32
output = func_12140(var_12141,var_12142,)
func_12143 = relay.Function([var_12141,var_12142,], output)
mutated_mod['func_12143'] = func_12143
mutated_mod = relay.transform.InferType()(mutated_mod)
func_11595_call = mod.get_global_var('func_11595')
func_11597_call = mutated_mod.get_global_var('func_11597')
call_12154 = relay.TupleGetItem(func_11595_call(), 0)
call_12155 = relay.TupleGetItem(func_11597_call(), 0)
output = call_12154
output2 = call_12155
func_12165 = relay.Function([], output)
mod['func_12165'] = func_12165
mod = relay.transform.InferType()(mod)
mutated_mod['func_12165'] = func_12165
mutated_mod = relay.transform.InferType()(mutated_mod)
func_12165_call = mutated_mod.get_global_var('func_12165')
call_12166 = func_12165_call()
output = call_12166
func_12167 = relay.Function([], output)
mutated_mod['func_12167'] = func_12167
mutated_mod = relay.transform.InferType()(mutated_mod)
func_11639_call = mod.get_global_var('func_11639')
func_11640_call = mutated_mod.get_global_var('func_11640')
call_12173 = func_11639_call()
call_12174 = func_11639_call()
output = call_12173
output2 = call_12174
func_12182 = relay.Function([], output)
mod['func_12182'] = func_12182
mod = relay.transform.InferType()(mod)
output = func_12182()
func_12183 = relay.Function([], output)
mutated_mod['func_12183'] = func_12183
mutated_mod = relay.transform.InferType()(mutated_mod)
func_11639_call = mod.get_global_var('func_11639')
func_11640_call = mutated_mod.get_global_var('func_11640')
call_12198 = func_11639_call()
call_12199 = func_11639_call()
output = call_12198
output2 = call_12199
func_12202 = relay.Function([], output)
mod['func_12202'] = func_12202
mod = relay.transform.InferType()(mod)
output = func_12202()
func_12203 = relay.Function([], output)
mutated_mod['func_12203'] = func_12203
mutated_mod = relay.transform.InferType()(mutated_mod)
func_12165_call = mod.get_global_var('func_12165')
func_12167_call = mutated_mod.get_global_var('func_12167')
call_12277 = func_12165_call()
call_12278 = func_12165_call()
output = relay.Tuple([call_12277,])
output2 = relay.Tuple([call_12278,])
func_12283 = relay.Function([], output)
mod['func_12283'] = func_12283
mod = relay.transform.InferType()(mod)
output = func_12283()
func_12284 = relay.Function([], output)
mutated_mod['func_12284'] = func_12284
mutated_mod = relay.transform.InferType()(mutated_mod)
const_12304 = relay.const(10, dtype = "int16")#candidate|12304|()|const|int16
var_12305 = relay.var("var_12305", dtype = "int16", shape = (2, 9, 15))#candidate|12305|(2, 9, 15)|var|int16
bop_12306 = relay.right_shift(const_12304.astype('int16'), var_12305.astype('int16')) # shape=(2, 9, 15)
output = bop_12306
output2 = bop_12306
func_12316 = relay.Function([var_12305,], output)
mod['func_12316'] = func_12316
mod = relay.transform.InferType()(mod)
var_12317 = relay.var("var_12317", dtype = "int16", shape = (2, 9, 15))#candidate|12317|(2, 9, 15)|var|int16
output = func_12316(var_12317)
func_12318 = relay.Function([var_12317], output)
mutated_mod['func_12318'] = func_12318
mutated_mod = relay.transform.InferType()(mutated_mod)
func_11976_call = mod.get_global_var('func_11976')
func_11978_call = mutated_mod.get_global_var('func_11978')
call_12325 = func_11976_call()
call_12326 = func_11976_call()
output = call_12325
output2 = call_12326
func_12338 = relay.Function([], output)
mod['func_12338'] = func_12338
mod = relay.transform.InferType()(mod)
mutated_mod['func_12338'] = func_12338
mutated_mod = relay.transform.InferType()(mutated_mod)
func_12338_call = mutated_mod.get_global_var('func_12338')
call_12339 = func_12338_call()
output = call_12339
func_12340 = relay.Function([], output)
mutated_mod['func_12340'] = func_12340
mutated_mod = relay.transform.InferType()(mutated_mod)
func_12007_call = mod.get_global_var('func_12007')
func_12009_call = mutated_mod.get_global_var('func_12009')
call_12343 = relay.TupleGetItem(func_12007_call(), 0)
call_12344 = relay.TupleGetItem(func_12009_call(), 0)
func_11639_call = mod.get_global_var('func_11639')
func_11640_call = mutated_mod.get_global_var('func_11640')
call_12345 = func_11639_call()
call_12346 = func_11639_call()
output = relay.Tuple([call_12343,call_12345,])
output2 = relay.Tuple([call_12344,call_12346,])
func_12352 = relay.Function([], output)
mod['func_12352'] = func_12352
mod = relay.transform.InferType()(mod)
mutated_mod['func_12352'] = func_12352
mutated_mod = relay.transform.InferType()(mutated_mod)
func_12352_call = mutated_mod.get_global_var('func_12352')
call_12353 = func_12352_call()
output = call_12353
func_12354 = relay.Function([], output)
mutated_mod['func_12354'] = func_12354
mutated_mod = relay.transform.InferType()(mutated_mod)
var_12433 = relay.var("var_12433", dtype = "float64", shape = (7, 10, 4))#candidate|12433|(7, 10, 4)|var|float64
uop_12434 = relay.sinh(var_12433.astype('float64')) # shape=(7, 10, 4)
output = uop_12434
output2 = uop_12434
func_12442 = relay.Function([var_12433,], output)
mod['func_12442'] = func_12442
mod = relay.transform.InferType()(mod)
var_12443 = relay.var("var_12443", dtype = "float64", shape = (7, 10, 4))#candidate|12443|(7, 10, 4)|var|float64
output = func_12442(var_12443)
func_12444 = relay.Function([var_12443], output)
mutated_mod['func_12444'] = func_12444
mutated_mod = relay.transform.InferType()(mutated_mod)
func_11411_call = mod.get_global_var('func_11411')
func_11412_call = mutated_mod.get_global_var('func_11412')
call_12453 = relay.TupleGetItem(func_11411_call(), 0)
call_12454 = relay.TupleGetItem(func_11412_call(), 0)
func_4498_call = mod.get_global_var('func_4498')
func_4501_call = mutated_mod.get_global_var('func_4501')
var_12462 = relay.var("var_12462", dtype = "float64", shape = (576,))#candidate|12462|(576,)|var|float64
var_12463 = relay.var("var_12463", dtype = "float32", shape = (780,))#candidate|12463|(780,)|var|float32
call_12461 = relay.TupleGetItem(func_4498_call(relay.reshape(var_12462.astype('float64'), [4, 9, 16]), relay.reshape(var_12463.astype('float32'), [780,]), ), 0)
call_12464 = relay.TupleGetItem(func_4501_call(relay.reshape(var_12462.astype('float64'), [4, 9, 16]), relay.reshape(var_12463.astype('float32'), [780,]), ), 0)
func_6604_call = mod.get_global_var('func_6604')
func_6610_call = mutated_mod.get_global_var('func_6610')
const_12469 = relay.const(7, dtype = "int16")#candidate|12469|()|const|int16
const_12470 = relay.const([7,-4,9,-1,-4,1,-4,8,8,-7,-8,-9,2,4,7,5,-5,4,-10,4,-2,3,-6,4,-8,1,1,-2,-2,-4,-4,-3,-10,4,4,6,-6,3,-8,8,-9,4,10,3,-2,1,6,4,4,5,-7,5,-10,5,-5,-5,-1,4,-5,-5,4,3,-3,7,7,5,-3,-9,-1,2,-9,-10,-6,-4,-3,-7,5,8,-9,5,-7,1,-3,4,7,9,2,6,6,-6,9,8,3,3,-1,7,-1,7,-1,7,6,5,5,-6,1,4,5,-5,-7,10,9,5,8,-1,4,8,-3,-10,4,1,-5,-7,-6,1,-3,1,-10,9,8,-6,9,4,7,-10,7], dtype = "int16")#candidate|12470|(135,)|const|int16
var_12471 = relay.var("var_12471", dtype = "int32", shape = (378,))#candidate|12471|(378,)|var|int32
var_12472 = relay.var("var_12472", dtype = "float64", shape = (385,))#candidate|12472|(385,)|var|float64
call_12468 = relay.TupleGetItem(func_6604_call(relay.reshape(const_12469.astype('int16'), []), relay.reshape(const_12470.astype('int16'), [1, 9, 15]), relay.reshape(var_12471.astype('int32'), [378,]), relay.reshape(var_12472.astype('float64'), [55, 7]), ), 0)
call_12473 = relay.TupleGetItem(func_6610_call(relay.reshape(const_12469.astype('int16'), []), relay.reshape(const_12470.astype('int16'), [1, 9, 15]), relay.reshape(var_12471.astype('int32'), [378,]), relay.reshape(var_12472.astype('float64'), [55, 7]), ), 0)
output = relay.Tuple([call_12453,call_12461,var_12462,var_12463,call_12468,const_12469,const_12470,var_12471,var_12472,])
output2 = relay.Tuple([call_12454,call_12464,var_12462,var_12463,call_12473,const_12469,const_12470,var_12471,var_12472,])
func_12474 = relay.Function([var_12462,var_12463,var_12471,var_12472,], output)
mod['func_12474'] = func_12474
mod = relay.transform.InferType()(mod)
var_12475 = relay.var("var_12475", dtype = "float64", shape = (576,))#candidate|12475|(576,)|var|float64
var_12476 = relay.var("var_12476", dtype = "float32", shape = (780,))#candidate|12476|(780,)|var|float32
var_12477 = relay.var("var_12477", dtype = "int32", shape = (378,))#candidate|12477|(378,)|var|int32
var_12478 = relay.var("var_12478", dtype = "float64", shape = (385,))#candidate|12478|(385,)|var|float64
output = func_12474(var_12475,var_12476,var_12477,var_12478,)
func_12479 = relay.Function([var_12475,var_12476,var_12477,var_12478,], output)
mutated_mod['func_12479'] = func_12479
mutated_mod = relay.transform.InferType()(mutated_mod)
func_12182_call = mod.get_global_var('func_12182')
func_12183_call = mutated_mod.get_global_var('func_12183')
call_12508 = func_12182_call()
call_12509 = func_12182_call()
func_12067_call = mod.get_global_var('func_12067')
func_12070_call = mutated_mod.get_global_var('func_12070')
var_12511 = relay.var("var_12511", dtype = "uint8", shape = (300,))#candidate|12511|(300,)|var|uint8
var_12512 = relay.var("var_12512", dtype = "uint8", shape = (140,))#candidate|12512|(140,)|var|uint8
call_12510 = relay.TupleGetItem(func_12067_call(relay.reshape(var_12511.astype('uint8'), [50, 6]), relay.reshape(var_12512.astype('uint8'), [70, 2]), ), 2)
call_12513 = relay.TupleGetItem(func_12070_call(relay.reshape(var_12511.astype('uint8'), [50, 6]), relay.reshape(var_12512.astype('uint8'), [70, 2]), ), 2)
output = relay.Tuple([call_12508,call_12510,var_12511,var_12512,])
output2 = relay.Tuple([call_12509,call_12513,var_12511,var_12512,])
func_12514 = relay.Function([var_12511,var_12512,], output)
mod['func_12514'] = func_12514
mod = relay.transform.InferType()(mod)
var_12515 = relay.var("var_12515", dtype = "uint8", shape = (300,))#candidate|12515|(300,)|var|uint8
var_12516 = relay.var("var_12516", dtype = "uint8", shape = (140,))#candidate|12516|(140,)|var|uint8
output = func_12514(var_12515,var_12516,)
func_12517 = relay.Function([var_12515,var_12516,], output)
mutated_mod['func_12517'] = func_12517
mutated_mod = relay.transform.InferType()(mutated_mod)
func_11724_call = mod.get_global_var('func_11724')
func_11725_call = mutated_mod.get_global_var('func_11725')
call_12524 = relay.TupleGetItem(func_11724_call(), 4)
call_12525 = relay.TupleGetItem(func_11725_call(), 4)
output = call_12524
output2 = call_12525
func_12530 = relay.Function([], output)
mod['func_12530'] = func_12530
mod = relay.transform.InferType()(mod)
output = func_12530()
func_12531 = relay.Function([], output)
mutated_mod['func_12531'] = func_12531
mutated_mod = relay.transform.InferType()(mutated_mod)
func_11595_call = mod.get_global_var('func_11595')
func_11597_call = mutated_mod.get_global_var('func_11597')
call_12532 = relay.TupleGetItem(func_11595_call(), 0)
call_12533 = relay.TupleGetItem(func_11597_call(), 0)
output = call_12532
output2 = call_12533
func_12534 = relay.Function([], output)
mod['func_12534'] = func_12534
mod = relay.transform.InferType()(mod)
mutated_mod['func_12534'] = func_12534
mutated_mod = relay.transform.InferType()(mutated_mod)
func_12534_call = mutated_mod.get_global_var('func_12534')
call_12535 = func_12534_call()
output = call_12535
func_12536 = relay.Function([], output)
mutated_mod['func_12536'] = func_12536
mutated_mod = relay.transform.InferType()(mutated_mod)
var_12581 = relay.var("var_12581", dtype = "int32", shape = (7, 10, 16))#candidate|12581|(7, 10, 16)|var|int32
var_12582 = relay.var("var_12582", dtype = "int32", shape = (7, 10, 16))#candidate|12582|(7, 10, 16)|var|int32
bop_12583 = relay.greater(var_12581.astype('bool'), relay.reshape(var_12582.astype('bool'), relay.shape_of(var_12581))) # shape=(7, 10, 16)
output = relay.Tuple([bop_12583,])
output2 = relay.Tuple([bop_12583,])
func_12594 = relay.Function([var_12581,var_12582,], output)
mod['func_12594'] = func_12594
mod = relay.transform.InferType()(mod)
mutated_mod['func_12594'] = func_12594
mutated_mod = relay.transform.InferType()(mutated_mod)
func_12594_call = mutated_mod.get_global_var('func_12594')
var_12596 = relay.var("var_12596", dtype = "int32", shape = (7, 10, 16))#candidate|12596|(7, 10, 16)|var|int32
var_12597 = relay.var("var_12597", dtype = "int32", shape = (7, 10, 16))#candidate|12597|(7, 10, 16)|var|int32
call_12595 = func_12594_call(var_12596,var_12597,)
output = call_12595
func_12598 = relay.Function([var_12596,var_12597,], output)
mutated_mod['func_12598'] = func_12598
mutated_mod = relay.transform.InferType()(mutated_mod)
func_12534_call = mod.get_global_var('func_12534')
func_12536_call = mutated_mod.get_global_var('func_12536')
call_12610 = func_12534_call()
call_12611 = func_12534_call()
output = relay.Tuple([call_12610,])
output2 = relay.Tuple([call_12611,])
func_12628 = relay.Function([], output)
mod['func_12628'] = func_12628
mod = relay.transform.InferType()(mod)
mutated_mod['func_12628'] = func_12628
mutated_mod = relay.transform.InferType()(mutated_mod)
func_12628_call = mutated_mod.get_global_var('func_12628')
call_12629 = func_12628_call()
output = call_12629
func_12630 = relay.Function([], output)
mutated_mod['func_12630'] = func_12630
mutated_mod = relay.transform.InferType()(mutated_mod)
func_12338_call = mod.get_global_var('func_12338')
func_12340_call = mutated_mod.get_global_var('func_12340')
call_12716 = func_12338_call()
call_12717 = func_12338_call()
uop_12719 = relay.tan(call_12716.astype('float32')) # shape=(12, 14, 7)
uop_12721 = relay.tan(call_12717.astype('float32')) # shape=(12, 14, 7)
output = relay.Tuple([uop_12719,])
output2 = relay.Tuple([uop_12721,])
func_12725 = relay.Function([], output)
mod['func_12725'] = func_12725
mod = relay.transform.InferType()(mod)
output = func_12725()
func_12726 = relay.Function([], output)
mutated_mod['func_12726'] = func_12726
mutated_mod = relay.transform.InferType()(mutated_mod)
func_12628_call = mod.get_global_var('func_12628')
func_12630_call = mutated_mod.get_global_var('func_12630')
call_12752 = relay.TupleGetItem(func_12628_call(), 0)
call_12753 = relay.TupleGetItem(func_12630_call(), 0)
output = call_12752
output2 = call_12753
func_12766 = relay.Function([], output)
mod['func_12766'] = func_12766
mod = relay.transform.InferType()(mod)
output = func_12766()
func_12767 = relay.Function([], output)
mutated_mod['func_12767'] = func_12767
mutated_mod = relay.transform.InferType()(mutated_mod)
func_12628_call = mod.get_global_var('func_12628')
func_12630_call = mutated_mod.get_global_var('func_12630')
call_12806 = relay.TupleGetItem(func_12628_call(), 0)
call_12807 = relay.TupleGetItem(func_12630_call(), 0)
output = call_12806
output2 = call_12807
func_12810 = relay.Function([], output)
mod['func_12810'] = func_12810
mod = relay.transform.InferType()(mod)
output = func_12810()
func_12811 = relay.Function([], output)
mutated_mod['func_12811'] = func_12811
mutated_mod = relay.transform.InferType()(mutated_mod)
func_12810_call = mod.get_global_var('func_12810')
func_12811_call = mutated_mod.get_global_var('func_12811')
call_12864 = func_12810_call()
call_12865 = func_12810_call()
output = call_12864
output2 = call_12865
func_12866 = relay.Function([], output)
mod['func_12866'] = func_12866
mod = relay.transform.InferType()(mod)
mutated_mod['func_12866'] = func_12866
mutated_mod = relay.transform.InferType()(mutated_mod)
func_12866_call = mutated_mod.get_global_var('func_12866')
call_12867 = func_12866_call()
output = call_12867
func_12868 = relay.Function([], output)
mutated_mod['func_12868'] = func_12868
mutated_mod = relay.transform.InferType()(mutated_mod)
func_12866_call = mod.get_global_var('func_12866')
func_12868_call = mutated_mod.get_global_var('func_12868')
call_12878 = func_12866_call()
call_12879 = func_12866_call()
output = relay.Tuple([call_12878,])
output2 = relay.Tuple([call_12879,])
func_12884 = relay.Function([], output)
mod['func_12884'] = func_12884
mod = relay.transform.InferType()(mod)
mutated_mod['func_12884'] = func_12884
mutated_mod = relay.transform.InferType()(mutated_mod)
func_12884_call = mutated_mod.get_global_var('func_12884')
call_12885 = func_12884_call()
output = call_12885
func_12886 = relay.Function([], output)
mutated_mod['func_12886'] = func_12886
mutated_mod = relay.transform.InferType()(mutated_mod)
func_12884_call = mod.get_global_var('func_12884')
func_12886_call = mutated_mod.get_global_var('func_12886')
call_12901 = relay.TupleGetItem(func_12884_call(), 0)
call_12902 = relay.TupleGetItem(func_12886_call(), 0)
func_6376_call = mod.get_global_var('func_6376')
func_6378_call = mutated_mod.get_global_var('func_6378')
var_12945 = relay.var("var_12945", dtype = "float64", shape = (512,))#candidate|12945|(512,)|var|float64
call_12944 = relay.TupleGetItem(func_6376_call(relay.reshape(var_12945.astype('float64'), [16, 8, 4])), 1)
call_12946 = relay.TupleGetItem(func_6378_call(relay.reshape(var_12945.astype('float64'), [16, 8, 4])), 1)
func_3172_call = mod.get_global_var('func_3172')
func_3177_call = mutated_mod.get_global_var('func_3177')
var_12949 = relay.var("var_12949", dtype = "int64", shape = (1050,))#candidate|12949|(1050,)|var|int64
var_12950 = relay.var("var_12950", dtype = "int32", shape = (528,))#candidate|12950|(528,)|var|int32
call_12948 = relay.TupleGetItem(func_3172_call(relay.reshape(var_12949.astype('int64'), [15, 7, 10]), relay.reshape(var_12949.astype('int64'), [15, 7, 10]), relay.reshape(var_12950.astype('int32'), [528, 1]), ), 1)
call_12951 = relay.TupleGetItem(func_3177_call(relay.reshape(var_12949.astype('int64'), [15, 7, 10]), relay.reshape(var_12949.astype('int64'), [15, 7, 10]), relay.reshape(var_12950.astype('int32'), [528, 1]), ), 1)
func_7248_call = mod.get_global_var('func_7248')
func_7250_call = mutated_mod.get_global_var('func_7250')
var_12953 = relay.var("var_12953", dtype = "float64", shape = (160,))#candidate|12953|(160,)|var|float64
call_12952 = func_7248_call(relay.reshape(var_12953.astype('float64'), [10, 16, 1]))
call_12954 = func_7248_call(relay.reshape(var_12953.astype('float64'), [10, 16, 1]))
output = relay.Tuple([call_12901,call_12944,var_12945,call_12948,var_12949,var_12950,call_12952,var_12953,])
output2 = relay.Tuple([call_12902,call_12946,var_12945,call_12951,var_12949,var_12950,call_12954,var_12953,])
func_12956 = relay.Function([var_12945,var_12949,var_12950,var_12953,], output)
mod['func_12956'] = func_12956
mod = relay.transform.InferType()(mod)
mutated_mod['func_12956'] = func_12956
mutated_mod = relay.transform.InferType()(mutated_mod)
func_12956_call = mutated_mod.get_global_var('func_12956')
var_12958 = relay.var("var_12958", dtype = "float64", shape = (512,))#candidate|12958|(512,)|var|float64
var_12959 = relay.var("var_12959", dtype = "int64", shape = (1050,))#candidate|12959|(1050,)|var|int64
var_12960 = relay.var("var_12960", dtype = "int32", shape = (528,))#candidate|12960|(528,)|var|int32
var_12961 = relay.var("var_12961", dtype = "float64", shape = (160,))#candidate|12961|(160,)|var|float64
call_12957 = func_12956_call(var_12958,var_12959,var_12960,var_12961,)
output = call_12957
func_12962 = relay.Function([var_12958,var_12959,var_12960,var_12961,], output)
mutated_mod['func_12962'] = func_12962
mutated_mod = relay.transform.InferType()(mutated_mod)
func_12530_call = mod.get_global_var('func_12530')
func_12531_call = mutated_mod.get_global_var('func_12531')
call_12982 = func_12530_call()
call_12983 = func_12530_call()
output = relay.Tuple([call_12982,])
output2 = relay.Tuple([call_12983,])
func_12987 = relay.Function([], output)
mod['func_12987'] = func_12987
mod = relay.transform.InferType()(mod)
mutated_mod['func_12987'] = func_12987
mutated_mod = relay.transform.InferType()(mutated_mod)
func_12987_call = mutated_mod.get_global_var('func_12987')
call_12988 = func_12987_call()
output = call_12988
func_12989 = relay.Function([], output)
mutated_mod['func_12989'] = func_12989
mutated_mod = relay.transform.InferType()(mutated_mod)
func_12810_call = mod.get_global_var('func_12810')
func_12811_call = mutated_mod.get_global_var('func_12811')
call_13008 = func_12810_call()
call_13009 = func_12810_call()
uop_13023 = relay.sinh(call_13008.astype('float32')) # shape=(12, 14, 7)
uop_13025 = relay.sinh(call_13009.astype('float32')) # shape=(12, 14, 7)
func_10679_call = mod.get_global_var('func_10679')
func_10682_call = mutated_mod.get_global_var('func_10682')
var_13042 = relay.var("var_13042", dtype = "float32", shape = (330,))#candidate|13042|(330,)|var|float32
call_13041 = func_10679_call(relay.reshape(var_13042.astype('float32'), [3, 11, 10]))
call_13043 = func_10679_call(relay.reshape(var_13042.astype('float32'), [3, 11, 10]))
bop_13046 = relay.maximum(call_13008.astype('int64'), relay.reshape(uop_13023.astype('int64'), relay.shape_of(call_13008))) # shape=(12, 14, 7)
bop_13049 = relay.maximum(call_13009.astype('int64'), relay.reshape(uop_13025.astype('int64'), relay.shape_of(call_13009))) # shape=(12, 14, 7)
output = relay.Tuple([call_13041,var_13042,bop_13046,])
output2 = relay.Tuple([call_13043,var_13042,bop_13049,])
func_13053 = relay.Function([var_13042,], output)
mod['func_13053'] = func_13053
mod = relay.transform.InferType()(mod)
mutated_mod['func_13053'] = func_13053
mutated_mod = relay.transform.InferType()(mutated_mod)
var_13054 = relay.var("var_13054", dtype = "float32", shape = (330,))#candidate|13054|(330,)|var|float32
func_13053_call = mutated_mod.get_global_var('func_13053')
call_13055 = func_13053_call(var_13054)
output = call_13055
func_13056 = relay.Function([var_13054], output)
mutated_mod['func_13056'] = func_13056
mutated_mod = relay.transform.InferType()(mutated_mod)
func_11828_call = mod.get_global_var('func_11828')
func_11829_call = mutated_mod.get_global_var('func_11829')
call_13078 = func_11828_call()
call_13079 = func_11828_call()
func_11367_call = mod.get_global_var('func_11367')
func_11375_call = mutated_mod.get_global_var('func_11375')
var_13082 = relay.var("var_13082", dtype = "float32", shape = (1950,))#candidate|13082|(1950,)|var|float32
const_13083 = relay.const(-3, dtype = "int16")#candidate|13083|()|const|int16
var_13084 = relay.var("var_13084", dtype = "int16", shape = (45, 3))#candidate|13084|(45, 3)|var|int16
var_13085 = relay.var("var_13085", dtype = "int32", shape = (378,))#candidate|13085|(378,)|var|int32
const_13086 = relay.const([-8.768273,-1.330202,2.911616,-7.069544,-3.936676,-5.336885,-7.349689,-1.024044,9.820348,7.851821,5.786297,8.281876,-3.551543,-4.628910,6.626944,-0.203130,-0.835313,9.348666,0.845124,7.015747,9.566054,6.318744,0.498219,-4.729360,0.037469,7.652579,4.845821,-7.428730,0.169962,-3.456648,1.463164,-8.294051,8.975308,8.080679,6.203025,0.394287,-0.193996,8.000596,-8.158484,-5.609377,9.795340,-2.652240,-4.638411,-3.578778,0.127192,8.634697,-1.611576,-5.014106,3.552849,-9.833569,-8.733381,2.213971,1.809642,6.731346,7.104605,0.776842,3.572228,5.501278,-6.913978,5.429769,-0.221761,-9.005018,-1.979303,1.546558,4.383789,7.501777,6.840971,-8.031361,1.363332,-9.524589,-0.325014,7.313663,7.856864,0.152311,-5.749429,-8.921051,1.298727,6.076159,3.707362,-9.316730,3.092922,8.842365,-8.632694,2.283605,1.467618,-9.453747,7.314649,5.664004,4.099983,-7.802098,7.806876,-2.486668,3.891537,-9.627593,-0.472806,6.130824,-0.870503,-4.617977,9.085960,-7.778012,6.414898,-6.022215,-2.099450,-3.587757,-2.031004,-4.322687,5.930364,7.926736,-4.045050,5.148429,-9.614354,-2.241450,1.314795,4.001383,-8.825913,7.219325,2.153149,-9.144450,8.775184,1.520115,1.154855,7.103356,-2.624252,-8.599894,2.732179,-8.067657,-2.071741,-3.329001,7.188607,-5.645431,-3.745178,-5.234543,4.758894,5.173629,1.949327,3.563865,-7.253560,4.260575,5.815058,-8.188433,8.410205,-1.187445,6.832066,-5.447868,-1.893116,5.055188,-3.737130,-1.251855,-6.866631,4.867416,-0.358714,9.628943,7.552400,-4.293639,-5.579682,8.070547,8.745861,7.903787,8.035616,9.799457,9.879792,-2.111980,-7.297247,1.140881,-4.873031,-6.935471,7.945427,-3.205904,-8.904477,5.076624,2.553426,8.962241,-3.431986,1.159205,-6.088532,-0.017068,5.555463,8.441491,0.777066,3.079488,9.824400,1.845354,4.152658,-4.626857,-7.738115,-2.447973,-6.686737,-9.038145,-6.406342,-3.234224,-4.112669,-6.791529,2.205510,-4.238108,2.830309,6.432396,5.430931,8.122391,-7.635456,7.171813,-1.666973,-5.589365,9.350834,3.563064,-6.053151,-9.625958,-5.954629,2.870791,-7.096292,9.972447,3.025180,4.900281,6.904983,6.064272,-2.738637,-4.395498,-2.838806,6.955157,0.725143,4.382208,4.824433,-2.062179,2.183775,5.744159,8.194352,4.851140,0.107399,-9.335436,3.877103,-0.979993,-9.584278,-2.338136,7.514030,-4.258168,5.007732,7.847875,2.612166,-1.755326,9.212470,-9.185408,-6.674636,3.906842,-7.255854,-2.686788,9.241561,8.649977,6.712317,-6.367249,-0.181596,7.371677,-7.642114,-2.649701,0.694807,-3.296437,-8.520579,8.712417,-2.496650,0.136389,-7.423192,2.501075,-3.056645,1.405338,-1.094800,7.426468,-2.038447,-5.338792,3.612255,-0.617978,-5.237253,2.261409,-4.369739,5.637724,5.586078,8.675511,8.949550,3.580519,-3.074864,7.231529,-7.938297,0.503103,-0.962529,9.788387,-7.308959,-2.580700,6.570095,3.377909,-5.493481,-0.272217,6.802766,-0.164040,-1.969664,6.639148,-2.628415,-8.478943,4.011231,-4.162565,9.330871,3.251822,4.451082,-5.094263,2.197756,-8.059255,4.026658,8.120818,4.137935,1.503089,3.588526,-9.019395,4.263636,-7.699999,-8.636208,-1.853891,-3.646490,2.919846,2.947220,-7.073596,9.366469,3.064348,-4.273988,-3.881086,-4.677297,1.740707,-1.411190,0.905910,-4.880972,-3.954916,-3.966786,8.151880,-0.080782,2.788144,-2.171192,-1.407961,-9.740529,-3.082328,-5.207743,-9.422145,-2.466797,-3.694440,6.095796,7.710501,5.543882,-2.969607,-7.696984,-8.285260,-4.768478,5.120233,-1.632761,0.491479,6.525347,3.940543,-4.205919,-9.919561,4.944327,6.533602,-1.077126,6.515847,-2.724906,-6.791276,0.404953,8.830709,-7.174887,-5.288071,-4.812238,3.242909,-3.955700,5.264522,2.469584,5.761589,-3.479514,9.718361,8.833873,-9.314470,8.904720,9.247337,4.595306,-7.714297,6.362472,-5.770734,-3.821369,7.192464,-6.175665,7.940853,-2.627740,8.160928,2.267685], dtype = "float64")#candidate|13086|(385,)|const|float64
const_13087 = relay.const([-4,-9,-1,-7,5,-8,-10,8,-10,-2,2,-9,-3,1,-6,-3,3,-7,-2,3,-6,-2,5,4,9,-6,-6,-2,-7,10,-9,-8,-4,7,1,5,-2,-2,9,10,4,8,1,10,5,3,-2,6,-8,-3,-6,4,9,3,-4,5,1,9,-5,1,-8,6,7,-7,7,-4,10,9,4,7,-6,-9,8,-8,6,3,-6,-3,10,-10,9,8,-1,-9,10,4,-10,1,-10,9,10,7,10,1,-9,-7,-4,-10,-3,-10,6,-6,-7,-4,-10,1,8,6,-10,-10,-9,-9,-3,7,-9,8,9,4,5,-2,-5,-2,1,-1,-8,-1,-7,9,-1,-3,-3,10,6,-9,3,5,4,-9,9,7,-10,-4,3,4,-2,-6,9,-9,1,-8,-9,10,-2,8,10,9,-8,-6,8,4,-8,-5,8,6,1,-2,8,-4,5,-2,-1,-7,-5,7,5,-5,2,2,5,-7,-1,-9,-5,9,-8,4,-3,-8,4,-4,-9,-1,-9,2,8,-2,-10,-8,-5,4,-10,-5,-9,-3,-10,-3,-6,-1,7,8,-3,-4,1,-8,1,-2,-2,5,-9,8,5,-8,4,-5,3,6,-4,-8,6,-5,-10,7,-3,-5,3,4,3,-7,3,9,5,-9,8,6,-5,-1,10,-5,2,-5,-3,1,3,2,1,-2,-7,-7,-10,8,-6,8,-9,-6,5,6,-4,-4,6,-5,-9,3,-9,2,-3,-5,-1,4,-10,-1,-4,4,3,-5,6,-7,-6,-5,-3,4,-9,-5,-4,10,-9,-10,9,3,2,2], dtype = "uint8")#candidate|13087|(300,)|const|uint8
call_13081 = relay.TupleGetItem(func_11367_call(relay.reshape(var_13082.astype('float32'), [15, 10, 13]), relay.reshape(var_13082.astype('float32'), [15, 10, 13]), relay.reshape(const_13083.astype('int16'), []), relay.reshape(var_13084.astype('int16'), [135,]), relay.reshape(var_13085.astype('int32'), [378,]), relay.reshape(const_13086.astype('float64'), [55, 7]), relay.reshape(const_13087.astype('uint8'), [300,]), ), 4)
call_13088 = relay.TupleGetItem(func_11375_call(relay.reshape(var_13082.astype('float32'), [15, 10, 13]), relay.reshape(var_13082.astype('float32'), [15, 10, 13]), relay.reshape(const_13083.astype('int16'), []), relay.reshape(var_13084.astype('int16'), [135,]), relay.reshape(var_13085.astype('int32'), [378,]), relay.reshape(const_13086.astype('float64'), [55, 7]), relay.reshape(const_13087.astype('uint8'), [300,]), ), 4)
func_421_call = mod.get_global_var('func_421')
func_423_call = mutated_mod.get_global_var('func_423')
const_13091 = relay.const([[-2.364939],[-7.179046],[6.338043],[0.825587],[-7.259249],[5.444981],[6.674775],[-8.457280],[-1.347694],[-0.532759],[-7.579804],[1.232130],[8.015541],[-9.135297],[7.290085],[-8.088359],[-2.776526],[8.326422],[-6.123770],[-1.609443],[9.916105],[3.526952],[0.528505],[-1.004589],[0.089045],[3.562415],[1.003487],[-2.633607],[2.750749],[-6.445075],[3.246828],[4.070431],[-6.527580],[-9.794205],[2.367555],[5.224361],[-4.827319],[-5.952482],[-3.600604],[0.474911],[0.036285],[9.259633],[1.544990],[6.230718],[-8.745777],[-4.872203],[-0.858044],[3.345375],[-5.043370],[9.601108],[-9.950398],[-0.059145],[-5.738165],[-1.911018],[5.551016],[-3.455963],[6.532192],[6.533889],[9.418674],[9.328565],[-5.274833],[8.017786],[1.778241],[2.671232],[-3.793331],[-9.423329],[5.541560],[2.242421],[4.750356],[7.924938],[-6.836901],[2.097092],[2.776281],[-4.065785],[-8.948006],[8.043654],[5.349711],[3.679036],[0.620546],[-4.866687],[-5.879539],[6.014527],[5.950736],[9.140650],[-2.403679],[6.021135],[-9.681402],[-7.114035],[9.905891],[-5.534461],[9.289774],[9.224668],[-1.758690],[5.834659],[7.785103],[-8.455988],[-6.053087],[-5.364215],[-2.818602],[-1.614487],[-3.213075],[4.586633],[0.620440],[-9.302277],[1.091719],[-1.102655],[-6.172789],[9.133451],[-8.290234],[8.400162],[1.677399],[4.562924],[6.950291],[4.309519],[6.740985],[-1.317578],[-1.948409],[-0.209404],[-7.193805],[-2.412283],[8.255686],[-7.183287],[-5.641199],[6.357794],[-0.788205],[3.848063],[-1.970931],[-6.135959],[-4.535609],[1.012963],[7.219666],[0.030732],[-6.816170],[8.767742],[-1.922602],[-8.533841],[-5.431661],[-2.342043],[-5.350766],[-0.361967],[-3.077772],[-2.655390],[-0.554451],[-6.241940],[0.238006],[0.905862],[4.286870],[-4.688282],[-2.610518],[-4.592401],[9.016644],[5.198537],[5.941448],[0.799319]], dtype = "float32")#candidate|13091|(154, 1)|const|float32
call_13090 = func_421_call(relay.reshape(const_13091.astype('float32'), [1, 11, 14]))
call_13092 = func_421_call(relay.reshape(const_13091.astype('float32'), [1, 11, 14]))
uop_13099 = relay.sinh(const_13091.astype('float32')) # shape=(154, 1)
bop_13103 = relay.add(uop_13099.astype('uint32'), relay.reshape(const_13091.astype('uint32'), relay.shape_of(uop_13099))) # shape=(154, 1)
bop_13111 = relay.floor_mod(uop_13099.astype('float32'), var_13085.astype('float32')) # shape=(154, 378)
output = relay.Tuple([call_13078,call_13081,var_13082,const_13083,var_13084,const_13086,const_13087,call_13090,bop_13103,bop_13111,])
output2 = relay.Tuple([call_13079,call_13088,var_13082,const_13083,var_13084,const_13086,const_13087,call_13092,bop_13103,bop_13111,])
func_13115 = relay.Function([var_13082,var_13084,var_13085,], output)
mod['func_13115'] = func_13115
mod = relay.transform.InferType()(mod)
var_13116 = relay.var("var_13116", dtype = "float32", shape = (1950,))#candidate|13116|(1950,)|var|float32
var_13117 = relay.var("var_13117", dtype = "int16", shape = (45, 3))#candidate|13117|(45, 3)|var|int16
var_13118 = relay.var("var_13118", dtype = "int32", shape = (378,))#candidate|13118|(378,)|var|int32
output = func_13115(var_13116,var_13117,var_13118,)
func_13119 = relay.Function([var_13116,var_13117,var_13118,], output)
mutated_mod['func_13119'] = func_13119
mutated_mod = relay.transform.InferType()(mutated_mod)
func_12534_call = mod.get_global_var('func_12534')
func_12536_call = mutated_mod.get_global_var('func_12536')
call_13159 = func_12534_call()
call_13160 = func_12534_call()
func_11498_call = mod.get_global_var('func_11498')
func_11499_call = mutated_mod.get_global_var('func_11499')
call_13169 = relay.TupleGetItem(func_11498_call(), 0)
call_13170 = relay.TupleGetItem(func_11499_call(), 0)
func_4688_call = mod.get_global_var('func_4688')
func_4692_call = mutated_mod.get_global_var('func_4692')
var_13181 = relay.var("var_13181", dtype = "float64", shape = (385,))#candidate|13181|(385,)|var|float64
var_13182 = relay.var("var_13182", dtype = "float32", shape = (539,))#candidate|13182|(539,)|var|float32
call_13180 = relay.TupleGetItem(func_4688_call(relay.reshape(var_13181.astype('float64'), [11, 5, 7]), relay.reshape(var_13182.astype('float32'), [539,]), ), 2)
call_13183 = relay.TupleGetItem(func_4692_call(relay.reshape(var_13181.astype('float64'), [11, 5, 7]), relay.reshape(var_13182.astype('float32'), [539,]), ), 2)
func_3871_call = mod.get_global_var('func_3871')
func_3873_call = mutated_mod.get_global_var('func_3873')
const_13186 = relay.const([-8,7,-3,10,1,-8,-2,-5,3,9,-3,-2,-3,-7,1,-5,8,-1,-4,8,-8,-2,7,1,3,3,-6,-5,3,-9,10,5,8,9,-10,-7,3,9,7,9,9,-6,-9,5,4,6,7,-4,-9,9,9,-6,-5,4,6,-10,7,1,8,10,7,8,7,-1,4,-6,5,-7,8,2,5,10,-9,-10,6,-1,-7,-10,-10,3,-10,6,10,6,5,3,-10,-3,-5,-6,-4,5,-5,-8,-8,8,9,-3,-7,8,-9,-3,-3,9,-1,8,-3,1,-9,-2,9,5,4,-6,9,5,4,-8,-6,4,2,-7,6,-3,-6,-2,-7,-2,6,-3,3,-2,10,3,-7,-7,10,3,1,-2,3,1,-10,-2,-10,-1,7,-1,5,2,2,10,3,-9,9,1,-5,3,-3,2,-10,-10,8,3,-5,5,4,1,-9,2,-2,-4,-3,-2,10,4,7,-6,-3,-6,3,8,-7,7,-9,-5,-1,-8,4,3,-4,-5,-8,3,9,2,1,9,10,3,4,2,7,-2,-10,6,-1,-4,-1,2,4,-3,-5,2,-10,-5,-5,2,7,-4,8,-2,10,-9,10,-2,-7,-1,9,8,-10,-4,1,8,9,-6,9,-5,3,1,-7,-2,-10,-1,-8,-8,3,5,7,4,3,-2,-10,-5,-5,8,1,-8,-3,-2,9,1,-4,-8,2,-9,-1,-9,-2,-4,3,8,-4,-7,-7,-9,-10,8,9,-7,7,-5,-8,9,-1,6,-7,-7,3,7,4,-6,-6,-10,-10,5,-4,-6,-7,4,-8,-1,5,3,4,7,5,4,-8,6,5,5,-4,-4,4,10,-10,-6,-10,4,8,-4,5,-4,-6,10,2,3,-6,8,8,-3,-10,5,7,-8,1,8,3,8,2,3,3,9,-4,9,-6,8,1,-8,3,5,-9,9,-5,-1,2,1,9,-5,9,-5,-8,3,-6,-10,-6,-4,-8,-6,7,1,1,-5,6,-3,3,1,1,-1,-4,8,5,-4], dtype = "uint64")#candidate|13186|(384,)|const|uint64
call_13185 = func_3871_call(relay.reshape(const_13186.astype('uint64'), [4, 6, 16]))
call_13187 = func_3871_call(relay.reshape(const_13186.astype('uint64'), [4, 6, 16]))
func_11639_call = mod.get_global_var('func_11639')
func_11640_call = mutated_mod.get_global_var('func_11640')
call_13218 = func_11639_call()
call_13219 = func_11639_call()
output = relay.Tuple([call_13159,call_13169,call_13180,var_13181,var_13182,call_13185,const_13186,call_13218,])
output2 = relay.Tuple([call_13160,call_13170,call_13183,var_13181,var_13182,call_13187,const_13186,call_13219,])
func_13220 = relay.Function([var_13181,var_13182,], output)
mod['func_13220'] = func_13220
mod = relay.transform.InferType()(mod)
var_13221 = relay.var("var_13221", dtype = "float64", shape = (385,))#candidate|13221|(385,)|var|float64
var_13222 = relay.var("var_13222", dtype = "float32", shape = (539,))#candidate|13222|(539,)|var|float32
output = func_13220(var_13221,var_13222,)
func_13223 = relay.Function([var_13221,var_13222,], output)
mutated_mod['func_13223'] = func_13223
mutated_mod = relay.transform.InferType()(mutated_mod)
func_12530_call = mod.get_global_var('func_12530')
func_12531_call = mutated_mod.get_global_var('func_12531')
call_13270 = func_12530_call()
call_13271 = func_12530_call()
output = relay.Tuple([call_13270,])
output2 = relay.Tuple([call_13271,])
func_13280 = relay.Function([], output)
mod['func_13280'] = func_13280
mod = relay.transform.InferType()(mod)
output = func_13280()
func_13281 = relay.Function([], output)
mutated_mod['func_13281'] = func_13281
mutated_mod = relay.transform.InferType()(mutated_mod)
func_12352_call = mod.get_global_var('func_12352')
func_12354_call = mutated_mod.get_global_var('func_12354')
call_13282 = relay.TupleGetItem(func_12352_call(), 1)
call_13283 = relay.TupleGetItem(func_12354_call(), 1)
uop_13299 = relay.cosh(call_13282.astype('float64')) # shape=(12, 14, 7)
uop_13301 = relay.cosh(call_13283.astype('float64')) # shape=(12, 14, 7)
output = relay.Tuple([uop_13299,])
output2 = relay.Tuple([uop_13301,])
func_13304 = relay.Function([], output)
mod['func_13304'] = func_13304
mod = relay.transform.InferType()(mod)
output = func_13304()
func_13305 = relay.Function([], output)
mutated_mod['func_13305'] = func_13305
mutated_mod = relay.transform.InferType()(mutated_mod)
func_11411_call = mod.get_global_var('func_11411')
func_11412_call = mutated_mod.get_global_var('func_11412')
call_13341 = relay.TupleGetItem(func_11411_call(), 0)
call_13342 = relay.TupleGetItem(func_11412_call(), 0)
output = call_13341
output2 = call_13342
func_13343 = relay.Function([], output)
mod['func_13343'] = func_13343
mod = relay.transform.InferType()(mod)
mutated_mod['func_13343'] = func_13343
mutated_mod = relay.transform.InferType()(mutated_mod)
func_13343_call = mutated_mod.get_global_var('func_13343')
call_13344 = func_13343_call()
output = call_13344
func_13345 = relay.Function([], output)
mutated_mod['func_13345'] = func_13345
mutated_mod = relay.transform.InferType()(mutated_mod)
func_12202_call = mod.get_global_var('func_12202')
func_12203_call = mutated_mod.get_global_var('func_12203')
call_13351 = func_12202_call()
call_13352 = func_12202_call()
func_4724_call = mod.get_global_var('func_4724')
func_4727_call = mutated_mod.get_global_var('func_4727')
const_13354 = relay.const([0.353117,-0.086950,-6.753777,-4.053160,-5.571248,9.890812,-2.104752,-2.471639,2.079103,-8.509433,-2.932060,3.322751,9.951003,5.589934,-5.815164,8.938739,6.873148,9.229181,-7.843946,-0.979593,5.593950,7.779691,-1.719386,1.563651,7.678479,-9.205129,0.946418,2.912364,-1.068634,1.606110,3.294100,-8.698043,-8.843317,-3.537711,-1.708348,0.943720,-3.638682,4.321938,-7.515997,-4.751859,5.184401,0.155148,7.512142,4.233693,6.139092,-1.369747,9.889796,5.190478,3.905429,-7.050760,7.628243,6.713666,-2.020396,-8.647009,1.663699,-0.463527,7.306117,3.962208,4.721683,-1.339408,7.601285,9.363777,8.237517,-9.803597,8.261378,-6.595748,9.817506,-1.465475,2.029867,-5.994199,-9.617313,2.766024,8.352264,-5.479189,2.198746,0.773564,6.883402,3.065103,-6.670999,8.203805,9.584814,-9.417344,0.788498,-5.469769,5.425155,1.999140,-6.954029,6.104710,1.385286,-4.470188,-7.855565,5.412875,-6.822337,-8.414954,4.102251,-6.908927,-1.228671,7.050608,-1.867988,-3.763163,-2.208575,6.496775,-4.104043,-9.334256], dtype = "float64")#candidate|13354|(104,)|const|float64
call_13353 = relay.TupleGetItem(func_4724_call(relay.reshape(const_13354.astype('float64'), [13, 8, 1])), 0)
call_13355 = relay.TupleGetItem(func_4727_call(relay.reshape(const_13354.astype('float64'), [13, 8, 1])), 0)
func_3369_call = mod.get_global_var('func_3369')
func_3372_call = mutated_mod.get_global_var('func_3372')
var_13357 = relay.var("var_13357", dtype = "float32", shape = ())#candidate|13357|()|var|float32
var_13358 = relay.var("var_13358", dtype = "float32", shape = (180,))#candidate|13358|(180,)|var|float32
call_13356 = relay.TupleGetItem(func_3369_call(relay.reshape(var_13357.astype('float32'), []), relay.reshape(var_13358.astype('float32'), [15, 2, 6]), ), 0)
call_13359 = relay.TupleGetItem(func_3372_call(relay.reshape(var_13357.astype('float32'), []), relay.reshape(var_13358.astype('float32'), [15, 2, 6]), ), 0)
bop_13371 = relay.power(call_13351.astype('float32'), var_13357.astype('float32')) # shape=(12, 14, 7)
bop_13374 = relay.power(call_13352.astype('float32'), var_13357.astype('float32')) # shape=(12, 14, 7)
output = relay.Tuple([call_13353,const_13354,call_13356,var_13358,bop_13371,])
output2 = relay.Tuple([call_13355,const_13354,call_13359,var_13358,bop_13374,])
func_13376 = relay.Function([var_13357,var_13358,], output)
mod['func_13376'] = func_13376
mod = relay.transform.InferType()(mod)
var_13377 = relay.var("var_13377", dtype = "float32", shape = ())#candidate|13377|()|var|float32
var_13378 = relay.var("var_13378", dtype = "float32", shape = (180,))#candidate|13378|(180,)|var|float32
output = func_13376(var_13377,var_13378,)
func_13379 = relay.Function([var_13377,var_13378,], output)
mutated_mod['func_13379'] = func_13379
mutated_mod = relay.transform.InferType()(mutated_mod)
func_12766_call = mod.get_global_var('func_12766')
func_12767_call = mutated_mod.get_global_var('func_12767')
call_13414 = func_12766_call()
call_13415 = func_12766_call()
output = relay.Tuple([call_13414,])
output2 = relay.Tuple([call_13415,])
func_13439 = relay.Function([], output)
mod['func_13439'] = func_13439
mod = relay.transform.InferType()(mod)
output = func_13439()
func_13440 = relay.Function([], output)
mutated_mod['func_13440'] = func_13440
mutated_mod = relay.transform.InferType()(mutated_mod)
func_12182_call = mod.get_global_var('func_12182')
func_12183_call = mutated_mod.get_global_var('func_12183')
call_13461 = func_12182_call()
call_13462 = func_12182_call()
func_11948_call = mod.get_global_var('func_11948')
func_11952_call = mutated_mod.get_global_var('func_11952')
const_13467 = relay.const([[-9.064144,5.926237,9.805682,5.446454,2.653156,-2.409429,8.496846,8.605887,4.231484,2.073709,-4.126358,3.081229,-4.675754,6.489711,3.042304,8.519579,7.121318,7.661898,-2.908966,3.948137,-5.871252,1.108002,0.894126,4.580428,6.148484,9.132039,-3.403272,5.611494,5.440242,-3.835065,-8.988748,-8.697765,-4.962869,-7.502268,1.605892,-8.999118,-2.815910,4.892715,-5.429115,-3.604937,-6.989071,4.039246,6.589963,5.500317,2.291040,9.154057,1.576855,9.776542,3.352035,7.948732,7.441514,-7.179568,5.644139,-9.670387,9.353193,4.039713,-0.677709,-4.079165,-1.938387,4.445693,7.508382,6.494817,-7.262410,-3.109311,2.594510,-5.617558,1.529195,-1.503550,6.273135,0.443587,3.497399,-3.968271,1.946377,1.669120,-5.295058,-1.794721,-5.015484,-3.976405,-1.502543,-5.275068,-5.798306,8.029518,-2.856161,0.734692,-0.699793,-3.169773,3.392827,4.809295,4.803174,-4.847029,0.424992,-6.796930,3.681111,8.457444,4.331876,2.870120,-8.360161,-9.656562,-5.353728,-0.047902,-8.681200,-6.478258,0.810004,-5.566583,9.250267,-6.868705,3.521854,-1.111941,-0.366353,6.529106,4.079094,8.731082,0.696675,-1.988599,7.729395,-4.948361,0.047728,-9.282250,-2.658980,-2.180539,8.401954,4.079706,5.413390,0.402645,4.908250,1.063881,1.347257,-0.487596,-9.582795,-1.098935,-9.944336,7.582515,-8.127508,-2.145378,1.453180,-5.778478,-3.365358,1.013274,2.728385,7.690198,4.014567,3.216681,1.656096,4.827626,2.237853,-6.832630,-3.994595,5.800663,0.914585,-9.068204,-0.355696,2.034157,-7.354011,-4.890076,-7.382319,-3.971782,1.719424,-3.524173,0.454512,-1.322381,-6.402126,-5.792946,9.600452,7.256421,-3.532864,2.947633,-7.945363,2.599276,9.695243,-0.727096,5.379254,-7.332111,-4.255336,6.195963,-3.448144,-7.671176,-9.138909,-0.589728,9.744560,-3.965091,8.700644,-9.642122,6.915795,-2.534598,-8.913395,-1.047071,1.747069,-2.331704,8.216787,0.290985,0.991540,-5.030207,8.992994,0.676670,-6.570145,-0.751142,3.211346,8.256673,-6.805095,-5.211628,-0.472785,-1.334082,9.785801,-0.875100,-5.359526,-1.816728,1.267566,-6.325322,0.068237,2.363430,7.567251,6.309950,1.706821,4.276204,-1.820542,-7.971383,-9.044458,-9.323204,1.900033,7.755422,3.820503,0.953393,-1.825297,0.587256,-4.980159,-0.306103,-3.438710,-9.040256,-4.278138,5.312119,7.799635,-9.385646,-9.865481,8.779380,9.313392,2.453316,1.278434,8.549788,-2.249608,3.453369,-8.522507,2.493499,-4.231947,-6.258520,0.142519,9.457719,6.642132,7.235017,3.513101,9.193943,0.382114,2.079192,7.332169,-6.798424,2.488779,-2.181943,0.981036,-5.855552,-6.900644,5.167062,-9.848387,-4.921725,-3.062116,6.987034,1.858935,-8.865300,7.351549,9.149908,-5.175515,1.502063,2.187207,8.560051,3.993150,-3.126458,-7.330383,9.391440,9.494059,-8.716821,9.182165,6.877963,-5.913278,0.311949,3.748526,7.174960,5.409972,0.360395,-8.873298,4.982679,-4.942140,1.998035,7.666915,8.584885,5.367245,-2.792679,1.871138,5.128813,0.004998,7.385891,4.983781,7.691415,6.841208,4.168319,8.059669,2.788402,3.781855,5.622278,-0.868315,8.106856,-3.009857,-6.848092,1.540062,-9.968851,2.850297,5.919752,-5.563831,3.415918,9.243777,5.868472,1.271049,-3.040399,-7.768932,-9.172481,-2.301678,-2.176629,8.666810,-7.438092,-5.053211,-3.995117,-2.196289,-2.880263,-5.583327,3.557887,-6.397874,-1.110778,9.410065,-9.064275,-7.263668,-6.780925,-5.301712,-4.988756,-2.918913,-2.057021,5.030328,-4.058598,-9.147028,-8.933734,-4.076393,-8.837583,-7.461464,-0.533048,1.950569,0.604700,0.304425,-1.086347,-3.171454,-9.696559,5.432296,2.398062,8.894095,3.831091,-3.776605,-8.262757,5.982190,-7.800088,6.229924,9.730669,3.033600,3.012433,0.842782,9.267277,-1.800187,-1.688876,-7.468889,-4.692864,5.907267,-0.622346,0.660797,-9.557698,9.713938,-7.296687,4.463959,-2.406072,7.239784,-5.188161,2.923759,-5.858504,5.135843,-9.384938,8.867895,8.515675,-2.748998,-0.662643,-2.718124,-9.279156,5.445606,-7.701673,-8.238448,-8.285925,-1.966949,-5.164863,-9.635298,2.501432,0.883199,4.616585,-1.155732,5.669224,-3.671218,-0.153987,-3.049544,4.608493,-4.324560,8.151908,-7.148814,-5.222038,-2.944658,-0.545326,2.228941,-4.500117,0.260791,9.891341,-2.383525,-9.784599,5.834990,3.460820,6.112188,6.540243,-7.985620,3.764576,-0.490734,-6.091201,-1.222612,1.771274,-1.709407,3.140692,-1.570872,-4.342909,0.905247,2.366108,7.332647,9.930706,7.623625,-8.073023,1.416883,-7.072462,8.015623,-6.924482,-8.363902,-0.037550,5.444267,-8.841219,-6.986833,-4.725028,-6.472616,-9.432437,-7.598419,-7.596706,7.968236,8.035794,-2.150305,-7.051300,-4.293146,-2.192062,3.342093,-8.138793,-8.227226,-6.454069,2.148757,-5.870635,-4.640337,1.601656,-3.398655,2.199340,7.273888,-4.329286,-2.937565,4.396508,8.017360,1.205942,-5.924741,0.360554,6.314312,-0.436122,-0.745635,-2.512792,8.960352,8.703667,5.716126,0.508888,-2.024023,7.389417,1.353958,9.067023,-8.416822,6.410666,-7.907258,4.698217,-3.895863,-3.462929,-7.921715,0.513149,1.554135,-4.650513,6.412330,0.315851,2.450863,7.778702,6.967690,-6.445333,6.529308,1.757851,-1.522977,9.924168,-1.014314,-4.016055,-4.969184,-0.841412,-6.486127,3.891022,7.872797,4.529788,5.549127,0.224008,-4.040937,-0.389550,9.747576,6.688811,-3.183905,-1.884368,1.697131,0.403294,-2.754051,8.272636,-7.051404,2.434494,0.267678,6.426379,4.496738,8.335392,-5.282747,0.882044,8.050775,6.987261,-8.038661,-5.841436,-4.197324,6.554029,-7.784783,-2.030215,5.841715,-6.114154,-8.359699,7.225553,-4.294219,2.545178,-5.381489,-2.278293,-3.213104,5.863176,7.537905,-9.054769,-3.577822,-8.791059,-4.539106,0.184391,-1.501182,-7.271877,4.241548,-9.861584,-0.410714,-0.182733,8.756247,0.113343,7.140170,-0.976230,-8.243074,-7.448739]], dtype = "float64")#candidate|13467|(1, 576)|const|float64
var_13468 = relay.var("var_13468", dtype = "float32", shape = (780,))#candidate|13468|(780,)|var|float32
call_13466 = relay.TupleGetItem(func_11948_call(relay.reshape(const_13467.astype('float64'), [576,]), relay.reshape(var_13468.astype('float32'), [10, 78]), ), 7)
call_13469 = relay.TupleGetItem(func_11952_call(relay.reshape(const_13467.astype('float64'), [576,]), relay.reshape(var_13468.astype('float32'), [10, 78]), ), 7)
func_10915_call = mod.get_global_var('func_10915')
func_10922_call = mutated_mod.get_global_var('func_10922')
const_13510 = relay.const([-8.215395,-2.266621,2.445438,-2.935748,-4.103762,3.068631,7.112438,5.554508,-6.736192,-9.765152,6.789156,2.302195,3.941877,6.349918,-6.105219,5.281612,-0.347601,-2.439799,-4.862686,9.238874,-7.847510,3.821387,-5.195171,-8.947735,8.068355,8.477676,4.096197,-2.610149,7.211376,5.156995,4.643190,-7.719199,-4.845961,-5.583093,-4.290264,7.260424,-7.060255,-9.287187,4.827307,1.196904,-1.903559,-7.399844,-7.414248,-9.116626,-6.479683,9.738109,-1.945064,8.892106,-4.042894,7.612732,3.644917,5.116676,4.275264,1.500190,1.797992,2.159809,7.053384,1.741883,8.006533,5.589690,2.802461,5.644764,6.189157,-1.963208,-9.190788,-3.111907,-8.025385,-7.229800,9.084562,9.719314,-2.947381,-5.259580,-5.804646,3.270429,-7.784173,6.552170,1.180985,1.554430,-0.159982,-7.985445,-1.383097,-6.449981,1.377770,-6.171609,-6.807355,8.957505,2.555999,9.724389,7.811901,5.416950,1.694369,0.628691,3.366669,1.937544,-5.685761,1.568761,-7.964977,9.206716,-2.200383,8.653116,3.459325,2.466948,-6.699110,-7.425498,-6.650866,0.023518,2.255199,-1.481176,-0.228556,-4.098271,-4.278754,2.258784,5.039316,-5.450288,-2.946941,4.244220,-9.027283,-5.975895,5.251769,-9.579952,-5.057217,1.505243,-3.996693,6.063384,-7.334780,1.628548,2.144136,2.131848,8.344283,-3.974893,1.750401,-0.806254,-5.755050,2.928877,9.174849,1.597369,8.080012,4.089560,6.746436,-3.199778,-0.368947,-6.191864,-4.029770,7.415640,5.659781,-1.780736,7.541369,-0.592210,4.502721,3.966909,4.922526,9.551270,3.505163,-7.976716,3.579329,-8.466008,-0.526235,1.862636,2.378794,-2.735241,-0.335166,4.819278,4.050391,8.743129,9.013992,-0.197110,-6.962902,-5.714198,-2.910550,-9.185935,1.742662,-8.387187,6.161685,9.646147,-9.969382,1.658838,-3.153454,-9.413643,-2.088450,-9.308065,-9.464107,-9.891923,-6.117834,-1.127259,3.878712,-6.173515,-9.466426,-0.299934,-3.291349,-5.670393,4.555565,4.528649,-4.402272,-3.866280,-5.933838,6.405218,5.612179,4.250184,-5.195329,-6.078021,-4.148461,-4.548848,3.623017,-4.730322,-1.986895,-0.969283,-6.416838,6.731796,9.818335,8.757238,0.044544,-1.019926,-7.064654,-0.947224,-4.761085,-4.720769,-8.154300,9.121385,9.211922,7.156953,-5.421901,4.732145,-6.014713,6.121610,-4.516746,0.276644,8.247987,-9.343110,3.878486,-3.765454,-6.290921,-0.495684,-9.510345,-3.675685,6.835638,2.189458,-1.824931,-0.851211,-8.680776,-3.795412,-4.344395,-1.842432,-5.425304,0.252113,3.270975,7.584935,-0.596283,-0.934505,7.527382,-9.574463,6.455415,-5.295367,-5.094511,-7.648698,-4.495419,-6.540557,-2.846853,2.719738,0.403790,-5.772057,-7.544944,-9.466736,1.630681,4.253590,-7.045389,1.359509,-5.078906,9.196428,-3.513921,6.517612,-2.525917,7.049907,-3.572238,4.997468,4.870866,-8.240769,5.085219,-9.610703,-6.280211,3.321151,3.074397,-1.684831,-7.857046,-8.965698,0.058693,-1.450474,2.694243,-8.215167,-3.809213,-4.163550,6.389327,6.166083,2.681261,0.119105,-4.776443,-1.655841,6.485937,6.600318,-0.620169,-3.157863,1.515768,-3.143002,-1.863618,-5.687368,-9.723693,-6.828214,0.426172,6.481210,1.234967,-8.725038,3.269630,7.790044,3.826824,9.194871,-1.563126,3.006981,-5.537644,8.726803,-3.712620,7.442805,-1.685815,-0.767950,1.503530,-1.606653,-2.334535,-9.869890,-6.038918,-8.296698,-3.526724,0.101458,0.206962,-3.965499,-2.358848,-1.725565,6.364147,-4.061147,8.299140,-6.288498,-9.011448,2.182461,4.829789,-3.599874,3.392915,-5.513386,-1.333983,3.603446,-6.122119,3.405102,7.793104,-6.128906,0.897617,-6.092692,1.004398,-2.171723,4.172710,2.571222,3.218371,-1.681206,-4.149259,4.570600,5.937328,7.697316,-6.008971,-5.366976,-2.933114,6.640041,6.861719,8.647786,-6.124088,-1.196338,8.625676,-1.260800,-5.132231,-4.557723,7.753830,5.133913,-4.483660,7.127014,-3.741281,-0.704743,-5.568542,-9.569362,0.997655,-4.320543,0.400676,1.200668,-1.382217,-8.083621,5.842124,-8.291083,-8.998978,8.242580,-7.333102,5.351781,-7.027189,4.975567,4.557481,5.210167,8.866263,-9.025039,-5.822926,-7.249690,-4.592436,6.449688,0.589669,-1.718401,-6.984710,-5.529835,-3.254785,7.044598,7.238808,4.768440,-0.056707,2.109330,2.112089,4.076101,8.713661,-8.030222,-4.391383,6.455540,8.803700,9.224604,4.994347,-5.165451,5.890032,9.812656,6.159549,-7.692405,2.509888,1.909707,3.719881,-7.558251,-6.521432,-5.917099,9.658339,-0.358001,-8.931923,-2.481188,9.514459,0.683544,-7.938916,7.996268,-1.758722,6.715318,5.333751,-8.552944,5.940168,-7.448586,0.209317,-9.763987,-6.360910,-1.766652,-0.112005,6.190965,3.842796,7.043418,6.150687,2.086286,-6.078956,4.916689,-7.394164,-1.481649,-1.792040,1.449418,-2.135502,-0.993088,0.065583,8.844378,1.254642,9.344750,0.330906,-2.421123,-4.924676,-2.016101,8.702438,-8.778205,8.847163,2.794246,5.844252,-6.391329,3.720334,6.354086,7.620830,-4.406514,8.739883,6.882101,-7.155454,7.671067,-4.548381,8.567742,3.452067,9.281660,8.665600,-7.114919,5.001855,-3.912538,-0.367591,6.076822,-5.775569,-1.739809,-6.219431,-2.657099,-2.678578,2.342667,-4.685207,-9.281031,-7.415029,-6.768587,-9.698028,1.177756,0.008142,-4.376630,0.289528,3.352961,-2.868433,3.627050,-3.945624,9.564023,7.760808,6.730820,-3.162153,1.206328,0.855648,-7.522646,-3.016548,3.084998,7.793314,7.965780,-5.543043,-1.650880,5.888096,9.692501,0.980247,-4.684642,1.909498,-9.319989,5.528214,-7.179686,-8.279125,-8.691859,-6.683552,-5.773859,-7.543827,-3.916022,6.730462,7.942224,-2.136963,-2.605677,9.498087,-7.636989,-3.611630,-8.249805,-1.362211,-4.444742,0.271465,-5.266105,-2.058201,8.647665,-0.325399,6.713141,-3.896923,-8.783996,3.411253,0.671392,1.969518,1.243892,-2.518873,4.856154,9.749421,3.224928,9.671096,-0.089504,9.491109,-1.097365,-7.351633,5.797697,-0.340664,3.316365,-8.095244,-1.345587,8.323870,5.928894,-9.726738,-1.393244,-9.643824,-7.193968,5.118562,3.017341,2.745867,9.633837,-4.166957,-8.708178,-8.545724,-5.200263,-2.989332,6.164868,4.345170,-4.547553,0.148923,3.414364], dtype = "float32")#candidate|13510|(600,)|const|float32
var_13511 = relay.var("var_13511", dtype = "int16", shape = ())#candidate|13511|()|var|int16
const_13512 = relay.const([-10,-5,-1,9,2,2,8,2,-9,8,9,10,3,4,-7,-5,8,-8,-8,2,9,-8,4,-8,10,-10,-2,-1,-10,-5,5,-6,1,2,2,-9,-10,8,8,8,-4,9,1,-10,-4,-10,6,4,9,-1,9,-2,9,-2,-5,-7,9,4,-7,-2,1,1,-7,9,10,9,-9,6,-10,-7,1,4,1,9,-2,8,-5,3,6,10,-1,5,7,-8,-2,-1,-8,-2,-3,-6,3,10,-6,10,6,-8,-8,-7,-6,3,1,-10,9,9,-4,8,-2,5,-1,10,4,6,-2,-6,-1,6,-3,2,-10,-5,-7,-2,-9,-7,-4,10,6,10,1,6,-5,2,1,-9,5,5,-4,1,6,6,4,7,-1,7,3,2,6,-5,9,9,-7,-8,-1,-8,6,6,9,-9,10,-2,9,-10,-1,-3,-8,-6,5,10,4,5,-2,-1,6,-3,6,-9,1,-10,-4,-5,-3,1,-7,-8,-9,-3,5,3,-6,8,-2,-6,6,-7,9,5,5,2,7,4,-2,-8,-3,-8,5,-10,1,-10,-2,-7,9,4,8,-5,-5,-10,8,-4,6,1,-8,-6,6,7,-3,10,-8,3,10,10,6,4,7,4,-10,5,-5,8,-7,3,1,1,8,7,1,-5,7,-3,-9,-6,-2,-8,1,8,3,9,5,-5,-3,2,10,-5,9,9,-2,9,-5,-1,-3,6,2,-1,-5,-1,1,-6,-3,7,-6,-1,1,-4,-7,5,-6,7,6,5,4,-10,9,5,-7,-7,-9,5,8,-6,-4,6,-2,8,-9,-7,-6,10,-5,9,-9,6,5,-8,9,-10,7,-5,-7,6,5,-2,2,-6,9,10,-2,-8,6,-3,-9,1,9,6,-8,-3,-6,4,9,7,-7,-7,-3,-9,-10,7,-5,7,4,-9,6,7,-9,3,3,7,9,3,9,-3,4,10,8,-1,-3,-9,4,-2,-9,10,-5,5,1,5,10,10,-10,1,-10,-2], dtype = "int32")#candidate|13512|(378,)|const|int32
const_13513 = relay.const([[-8.662783,8.475405,-3.347654,-2.518683,8.691202,5.947964,8.698450],[8.462184,1.807588,2.394750,4.909462,7.156751,5.338661,-2.962492],[-1.186689,2.783056,0.694842,-2.978908,-8.628390,2.733515,8.123417],[6.309198,-5.639926,-1.029654,-8.797317,8.443180,6.592235,8.435671],[7.793075,5.098222,2.511853,-2.219924,2.670913,-3.160718,9.313647],[1.028633,7.641592,-5.486213,5.002031,1.562474,-8.563154,7.024517],[-8.839287,-1.521525,-1.988787,8.046754,-0.145668,-1.527889,-1.530934],[4.412493,1.426232,4.144999,-2.818605,-1.864528,-0.259240,4.725469],[-3.232445,-7.372753,-4.392266,-1.097684,-8.346818,-5.056094,8.130966],[-4.111211,-2.614849,-9.414462,-6.615091,-1.688267,3.875095,-8.225059],[-3.762203,-8.822201,5.930960,1.361223,9.847799,-3.602565,9.774394],[-8.083439,-1.874903,8.587175,-0.151001,-8.685690,9.385240,0.349038],[4.216094,-1.765517,-3.617530,-6.972486,5.723795,2.021468,5.787196],[2.296013,-1.730316,1.007625,-7.063607,6.993431,-6.794425,-3.321557],[-2.091035,-7.802287,2.398639,-8.092846,7.397875,3.899163,-4.176414],[4.258348,8.937698,7.424614,-5.888087,-6.873387,0.552572,-3.719255],[4.136057,2.139827,-0.700344,5.653381,-3.850948,1.389447,-3.291996],[-3.309543,1.150012,-4.009476,-3.349967,7.734220,-1.127116,-7.756932],[7.559630,-3.094203,9.038955,6.079395,4.402155,1.746433,-9.908480],[-3.278040,-1.794540,4.649865,-2.622137,-2.226252,4.561727,-1.009715],[1.659994,8.554533,3.332135,3.946223,4.805663,-7.966152,0.526311],[-5.481550,6.675275,-9.973392,-7.165050,8.303758,9.992043,9.416066],[5.846221,-4.992499,-3.951520,-0.626740,7.801391,-5.428428,-0.554803],[-1.538244,8.509422,3.155590,4.328616,-8.270764,7.938085,-0.066149],[0.579284,-9.970296,6.620478,6.923222,-0.870606,7.337700,4.509022],[9.634727,2.114621,4.502189,-9.077230,9.892613,-8.288475,4.336312],[2.845912,-6.459134,-1.285899,-4.259184,4.017274,2.110627,9.555196],[-7.072677,3.226156,-4.056791,8.027274,8.821982,-2.080285,3.249966],[-4.024723,-6.812043,-7.562145,-0.406617,3.349718,7.913533,-9.305118],[9.374306,8.204104,-8.080007,3.068542,4.000133,-8.521269,-3.823775],[2.565942,3.222344,6.216292,-8.603703,-4.882266,-3.726859,8.150627],[-8.193864,-5.201385,8.126208,6.501624,-7.426851,-1.785443,3.004065],[-2.399134,8.517225,4.941512,4.076699,-2.743962,5.388594,-9.102658],[8.555863,3.346668,6.681563,6.152067,0.314440,-3.161501,3.853566],[-5.239559,5.818464,-3.565651,-5.337548,0.250613,-3.880212,4.023529],[-7.394521,3.644055,6.439303,-7.797539,2.169095,2.962330,-7.591221],[-1.432830,-4.984471,4.480908,-9.128167,-2.487135,1.228263,-7.763987],[-0.335353,6.749170,-6.598728,-4.087402,6.623486,-0.350164,-4.557285],[-8.654725,-2.224799,-7.132219,8.042370,-6.939477,5.294402,-2.011458],[0.720005,5.510824,1.887826,-4.405320,1.190821,6.932110,7.607960],[5.583648,-2.276277,3.057615,1.590376,0.166220,1.177011,-9.403782],[2.768027,1.081416,8.352998,-1.606124,-0.715716,-8.303178,5.085939],[-1.041279,-0.057042,-6.886844,6.928494,4.127950,6.024264,4.390636],[-3.914471,9.593633,0.750065,-6.672844,2.477534,4.480488,-1.042838],[-6.709539,6.527987,-4.590425,-7.251940,-8.465395,-4.648032,-0.212862],[9.491945,-5.121177,1.213327,1.363462,1.969040,-7.840876,-1.745782],[-3.312152,9.545972,-4.217612,2.718186,-3.303748,0.183367,-9.256420],[-4.912582,0.650451,-4.591868,-7.582673,2.288631,-0.150874,4.585188],[-1.505577,-4.757837,-6.578974,2.113672,4.360211,-8.142039,-7.223925],[-6.145083,5.792708,-7.819275,-7.974004,3.657312,-8.232126,-7.296783],[0.103871,1.669425,3.840258,-4.466729,-4.836758,-3.749777,-9.407026],[9.812445,-4.581860,9.075563,5.465922,-1.053629,1.379560,-8.807539],[6.858649,-0.291427,-4.952212,-6.473284,-0.961969,-9.486634,-9.733270],[-7.253838,5.238128,7.343303,5.738794,1.600590,-8.122672,0.563166],[8.580442,-5.409677,-8.999000,5.200160,-5.201725,6.273353,-1.801583]], dtype = "float64")#candidate|13513|(55, 7)|const|float64
const_13514 = relay.const([-7.196296,-8.263982,-3.159901,-3.144175,-1.536385,1.713508,-8.573201,7.891039,2.027463,-1.339252,-2.706087,-2.833398,2.778214,8.380828,5.909997,-5.240300,2.490826,-2.051444,-9.408816,-9.425060,1.818888,-2.186954,-0.167616,-5.688594,-8.358811,0.260727,-3.942879,-2.860420,-7.959321,-8.146394,8.675177,7.501753,7.547050,-1.863319,8.080711,-7.402609,9.666603,-0.021942,-4.222195,6.414819,4.844999,-4.207957,1.625736,6.381904,-2.772129,0.027470,-6.942352,8.964206,-2.311121,-5.199939,-9.541813,7.230649,1.577132,0.793690,-5.973982,-2.658833,6.349101,2.246067,2.656230,1.085089,4.841261,-9.745354,7.189918,9.850879,2.776555,6.854124,1.483314,0.690108,7.907016,-0.332809,-0.325457,7.459959,4.079041,-2.033526,-9.186580,0.229787,-6.475877,6.937420,9.492642,-4.642903,-7.868311,-5.740323,-8.487805,3.100826,-5.060482,4.075159,-8.178868,1.855461,-2.514789,5.189577,8.482204,-9.777547,-7.599545,3.937047,-1.789488,-2.239306,-4.386976,-7.001915,9.717596,-4.862070,-0.986633,-9.977419,-4.874953,-2.905058,6.789720,1.490463,-7.971487,-7.537735,-2.483860,-7.432181,1.281910,7.035365,5.900027,-6.314443,5.700816,3.556767,0.792960,6.636427,2.666888,-8.182359,6.978165,5.295499,9.392847,-1.489038,4.248965,-2.526759,8.816996,-3.746808,-6.755753,0.631101,0.808214,1.150125,-1.631928,1.281873,-7.469527,-3.247733,7.860541,-7.837101,-7.329404,-0.313910,0.130728,-0.399292,5.405417,-5.477530,-0.396514,3.041390,-8.607610,-9.989584,5.192233,-0.220272,2.699401,0.578809,-5.490751,3.541025,-5.178367,-2.242280,-4.806498,0.972476,-8.858616,4.201570,1.880947,-4.991237,7.612324,4.977904,-2.960594,4.601974,-1.825535,1.132265,-6.473289,7.793371,-9.245297,-3.651851,7.636129,-4.212651,3.516808,-6.808427,3.294118,-0.234075,1.272560,9.872239,3.907732,6.668993,-6.838813,-2.700796,1.581653,4.258296,-4.586572,-6.965292,6.337919,9.970414,9.838243,-6.022645,-6.440676,1.927775,-2.992219,-4.282705,1.689175,3.480552,-2.353628,-6.252171,-8.293298,7.094342,-0.396646,-9.392457,0.184228,-0.244607,5.247889,4.571302,-6.698384,3.473014,8.310718,-2.960153,3.465870,-9.443726,-0.349334,4.308493,0.942751,0.384440,-0.310104,8.010494,6.304438,-9.091408,-5.897239,-0.411481,1.884898,3.616756,2.989095,0.055521,-6.613653,-7.492532,4.993086,8.287879,2.280474,-6.899683,-7.706873,5.850203,9.408525,-3.703047,3.033102,-4.025385,-9.841430,0.232448,-0.953674,-8.158642,0.029913,9.482843,-6.841801,0.368512,8.374528,5.323560,0.559416,2.127357,4.960003,1.757842,-2.668894,8.671938,1.813462,2.357444,1.796020,-3.994216,-2.808753,0.292106,-2.101914,-7.865158,-0.980417,7.691471,-2.697989,4.367360,-4.872405,-9.389773,-6.762778,1.596895,9.673919,9.066942,-9.109463,8.681909,1.647110,4.799881,9.779611,7.437875,-1.022777,9.365187,5.181502,-6.769823,1.561309,6.164059,-9.865901,-2.083781,2.429524,-9.933013,1.364516,-9.141462,1.499719,1.301042,-5.063317,-7.512532,3.944611,2.679302,-9.485602,1.656092,9.859021,-2.592974,8.681707,0.342229,-9.164295,6.857299,4.424745,0.795746,9.046732,9.358953,3.165032,-9.500737,5.101866,-4.232600,9.498019,-7.041641,-4.557112,-2.745621,0.091426,-1.897580,-0.952592,4.486788,5.464261,-9.315887,6.303699,-8.413280,4.882942,-4.225303,3.355353,4.140893,-4.385004,5.605989,-1.777067,-5.333646,1.990481,2.595326,-1.666358,8.960744,9.023900,9.177922,8.552727,-4.298217,-2.505594,5.937128,8.068043,6.410150,-8.043113,-8.683494,-4.654758,-9.903789,4.224891,9.469458,9.456725,6.744634,-1.603779,8.394725,2.487630,7.714732,-5.371594,2.214188,1.387222,2.232476,3.349145,-7.508225,4.648432,8.902111,-8.983707,-7.482976,4.089762,8.152452,-1.263686,1.635028,-9.561311,-3.053103,8.220531,-3.561755,-8.953438,1.894541,1.829566,0.536155,-4.761227,6.515822,-4.547818,-4.442882,4.700550,9.528218,5.531214,3.895636,9.114527,-5.734080,4.733008,9.404170,6.342500,1.034590,-6.729659,1.315385,5.094782,-6.941448,-5.000366,6.140107,-8.378837,-3.522278,2.457172,0.215433,1.725155,-3.834221,-8.538070,-5.425637,-1.185135,-7.570937,-2.978446,5.167109,-0.812720,0.828748,5.783040,-9.740262,-1.307280,0.229121,5.789968,-0.091441,-9.500987,6.006141,1.561365,-0.902871,-0.028778,-9.537106,-4.489623,-9.238825,4.604089,-0.306324,6.815932,-5.088788,9.237208,2.418205,-1.716293,4.635380,-8.171520,5.786987,-6.737194,6.015614,-7.996966,5.195688,-7.195315,3.324756,-3.154005,-1.744302,3.719048,4.447017,-5.074020,6.778023,-9.458819,9.370859,7.306618,-4.720848,6.067358,-8.034315,-7.947526,-2.585925,-3.307190,-7.713619,5.348849,-0.259309,-1.123952,8.794926,-9.718261,3.903017,4.304608,-3.079867,-3.114699,-5.632898,-7.387473,6.624303,5.303922,0.869692,-7.269592,-2.162194,-6.900332,-8.618623,-7.236930,6.956583,-4.718488,9.272219,-4.823416,-4.123147,0.764780,-9.085731,-6.479398,-0.425437,7.578122,6.688271,0.435044,-1.999648,-4.104768,-8.809279,-4.316277,5.419123,7.457441,8.780460,-1.303891,-7.320614,-1.493398,-4.181866,-5.676739,-6.539820,-9.213533,5.880415,3.651325,-1.603576,-1.046814,-3.670335,-6.800850,9.418309,7.151561,4.832310,1.425913,8.512802,-4.568257,-0.051691,-3.736894,4.670632,-2.187867,-2.523609,-0.773873,2.158295,-5.798372,5.735007,3.205601,-5.145618,1.590979,0.677502,0.480967,0.541444,-3.438933,-9.025718,-2.769189,0.825918,3.818464,6.272592,-7.148305,-9.406671,-2.279171,-2.119109,2.868017,-0.872121,-4.839475,6.232085,-6.274406,-5.199232,-6.897454,5.431341,-8.090374,1.048960,5.514729,9.703357,3.265972,-1.495565,0.539764,6.380327,9.041038,-6.459989,4.606841,4.134466,-2.840408,-6.759711,-9.817703,1.678269,5.725425,-3.819048,6.629248,-1.935204,-0.520257,1.158167,3.308044,-0.285101,-4.671786,9.840468,-4.216040,-6.841833,-1.633421,5.400099,-5.848421,1.596893,7.410834,-2.120043,4.397028,4.412929,2.051166,3.745468,6.025195,9.794368,-1.895170,-5.696336,2.711425,1.063369,1.032816,7.168808,-7.896724,4.524400,-6.919629,-8.496039,6.510312,0.107524,-8.594617,8.374672,-5.883234,-2.253955,2.970218,7.851825,7.886370,-4.751688,7.037523,-1.334301,-0.396810,6.100107,-5.689220,-0.622877,1.462569,-5.076772,5.314061,-0.503877,1.023775,-5.449726,6.962118,9.049907,3.852910,9.958525,1.497638,-3.673309,-2.860342,1.216412,5.410507,-6.220218,1.401303,7.326275,-1.072417,2.000400,-5.440505,8.539589,5.455443,-3.815180,-5.828999,-5.672868,0.752481,-7.951470,-3.689691,-8.784669,5.758568,6.608848,-2.154115,3.950638,-9.773180,-8.422566,9.266032,-1.100921,-7.181010,1.581620,-2.512266,9.708770,-9.247275,9.400360,9.736644,-8.226284,-8.508410,2.419870,-2.045576,-8.859494,6.860310,7.758401,-3.925330,-5.378088,-6.442249,5.290207,7.900280,4.784753,-2.100244,-8.421866,-4.939257,2.010407,-0.107218,1.451178,7.736557,9.576100,-9.180006,4.644003,-7.096809,-1.584824,8.286030,-0.702153,-7.379818,-9.628062,-7.731444,-6.409000,-9.021554,-3.727530,-5.875949,3.258056,2.099478,3.180193,-5.027083,-5.572902,-6.769367,7.814486,-0.100152,-7.119250,1.036883,-9.029973,8.950043,4.969641,-4.193903,7.196691,2.309317,-3.914065,7.967862,5.215769,4.837412,4.804364,-2.391174,5.247717,-6.397746,9.550566,2.661017,8.553738,-4.247112,-4.694832,-9.720481,3.773388,-9.516762,-9.542132,4.294453,7.286166,7.578899,-7.917234,-2.375487,1.537405,4.948117,-2.462338,-2.955513,-7.452423,-1.838268,1.853272,-5.236586,4.324590,-9.788309,-1.061105,5.527540,-5.339706,-4.385178,-4.875196,5.078275,4.603675,-4.989020,4.189081,-9.905434,5.603514,-1.080081,5.946882,5.157173,1.365816,6.420662,-1.207890,-8.878623,9.031060,9.116868,2.590372,2.707576,-4.882048,-5.122012,-9.352812,9.293048,-5.574366,-6.501272,-9.804541,-4.002900,-2.193893,9.095861,-8.456568,0.361624,7.840329,5.050781,7.613181,6.662909,-8.895995,9.882378,-1.092375,-8.280983,-3.055546,8.663642,-9.892838,1.121876,8.606429,5.887141,-5.254617,3.909814,-9.155212,-7.894415,-9.541634,3.620555,8.366570,8.407866,0.287299,-8.647069,6.279004,-2.972205,1.569426,-9.378766,-1.612095,-6.428575,-9.902574,-5.693953,-8.136656], dtype = "float64")#candidate|13514|(810,)|const|float64
const_13515 = relay.const([6.223174,3.195230,-8.566608,-0.936267,1.567459,-4.859148,-4.726993,2.160192,-7.585499,-4.277703,-7.358697,1.807863,6.327281,0.767858,-7.345334,8.561429,3.970124,-7.014943,6.199472,9.184424,-7.730875,-5.959005,7.208798,4.984955,-0.697377,9.793364,6.549252,8.633177,-9.978785,6.578329,4.634033,3.415378,4.704903,2.643104,-7.944970,8.104006,-5.428194,8.389719,5.629142,-0.898202,0.779488,-2.594697,-6.943365,0.142922,-8.183253,4.533776,-6.941809,6.540917,-4.891304,-5.677240,0.592669,-5.954009,-9.399781,2.546991,-5.937008,4.086738,2.784823,-6.816319,7.337167,9.587962,-0.248339,-8.265872,5.069550,2.819814,-2.503570,-1.383038,9.149343,2.538892,7.231992,-5.987829,-2.114553,5.683172,4.635938,5.790880,6.897142,8.670790,7.341388,-4.143488,5.036629,0.224858,-3.219102,2.629295,-4.765455,1.610139,6.557971,2.084716,3.740081,-9.064447,8.479662,7.167979,-8.874203,-5.409067,-6.764257,-5.470875,-8.050834,6.190072,6.703985,0.782399,-9.526389,3.951679,-6.776852,1.006815,2.115129,-7.245258,-1.637858,-0.114708,-3.028971,-1.060753,3.005978,-2.059417,-5.356896,-9.118392,-0.119857,2.793003,-0.753463,3.393705,-2.768123,-7.831104,-2.504464,-2.030187,5.696755,1.246853,7.272520,-9.258010,-6.765683,4.737309,1.087597,-0.865351,2.292258,-7.474055,4.013295,-1.779368,-0.503064,4.622602,4.970913,9.289490,-6.755806,1.548980,0.298498,7.617676,-8.796132,-3.112122,-4.853936,-3.633033,9.942621,-2.754842,-8.512562,-6.594833,2.909139,5.809569,8.993262,1.734998,7.309868,7.138387,9.581119,-8.064151,5.605678,6.341434,8.227867,8.130425,-6.821438,2.700931,-0.251866,3.206247,-6.991636,4.003040,-1.205278,4.421355,2.159621,-9.584585,6.348601,-0.713887,0.851729,2.425211,9.597331,9.449881,-8.264945,-1.930388,-2.461131,-2.570369,-7.680074,-9.330443,4.709444,-4.726030,0.703069,5.781352,6.628902,6.248389,0.289899,-9.391281,-9.149729,-1.350200,-7.152171,5.596748,-6.883573,6.397313,0.574756,5.201622,-6.605139,2.126591,-5.142266,-1.515358,5.608287,5.253050,-8.083715,1.210110,5.310449,0.041019,1.420557,8.564523,1.311255,-2.575595,-5.337770,7.846636,-7.900171,-5.680597,5.596011,-3.554067,5.191757,5.256355,1.333692,-8.790434,-9.134627,7.029331,-8.042877,7.487133,8.790532,0.458497,-0.516585,-4.764418,1.661151,7.451174,-8.834878,5.061040,0.681511,9.814754,-1.284639,-6.433080,-3.410134,-9.149677,-0.078567,-7.218163,7.539109,0.478253,-7.308002,-0.886307,0.293795,-6.123400,-9.465837,1.074001,-6.236560,-1.393900,-2.305651,0.876816,-0.452197,6.706923,8.026598,8.973252,6.430257,-7.544530,-3.929349,-6.630638,0.833611,5.469206,-9.217333,1.470488,-6.092355,9.031576,-8.151081,3.754984,-1.457711,1.586524,-1.867241,6.081514,-2.668896,4.490981,-7.801864,-0.270361,-1.778755,3.466415,-5.344287,0.257360,3.767352,1.927667,6.317994,-8.955359,5.327922,0.694798,-8.675135,-9.012771,5.512547,-6.593182,4.436878,6.412399,-1.698295,-6.431165,5.451501,4.471739,2.895984,5.646272,8.666128,-6.318834,8.239771,-3.766103,-1.602069,-6.463537,-4.871630,-6.827696,4.383701,7.977688,-7.493887,-5.770598,8.912995,-1.533709,-2.726430,2.550651,-7.146486,5.004902,-9.202830,1.317362,-0.191824,-8.268154,-9.042469,-5.466637,-5.930935,-7.989959,4.372436,-1.651060,-1.286169,4.738270,-1.862307,0.705002,6.053206,2.370535,-8.090943,-9.258955,-1.966800,-8.273629,4.498779,8.330346,-6.566878,4.521662,-9.972101,7.050843,-4.093192,-8.271013,0.004831,9.050093,-9.469424,-4.392686,-7.337307,1.000870,6.338031,2.272677,-2.009132,-6.904937,-6.331377,-9.664061,-5.178235,-9.624549,2.757236,6.432281,-5.030989,0.417630,3.449016,3.445455,-9.668373,6.614629,-4.175156,7.651428,7.246130,-4.764806,2.790763,-8.937817,-0.337899,-5.943461,7.934737,-4.257983,2.105805,-3.389874,-4.394206,-2.711518,-8.452532,-7.666975,-7.352496,7.375549,-7.045045,-7.727869,4.254190,2.789545,1.628060,7.992857,7.856929,-0.474473,1.836997,-3.317680,-1.792810,-2.808800,-2.478906,-5.639126,-5.266911,-6.803066,2.293950,-5.848333,3.227238,-4.135028,-6.291268,-0.240358,3.277303,-7.174032,7.453720,-5.973612,3.057727,2.173650,-7.240323,-2.321672,1.178877,1.002558,7.552904,4.112218,2.711806,3.693627,9.410910,8.500270,-6.094949,3.431866,-5.069096,-2.077661,0.273780,7.584235,2.517573,-0.102406,-3.923294,4.964657,-1.998491,6.383673,-8.008052,7.406288,-2.889380,-0.554079,-7.379622,-7.849563,-6.062266,-8.536058,-5.830663,0.118808,7.051356,3.908927,8.263119,-8.624347,5.829602,4.254727,-0.740423,-8.158889,5.626240,-5.306141,-8.094544,2.752489,4.114767,-8.579147,5.335825,2.921724,-3.812926,2.008669,7.936032,4.055010,9.892050,-5.319552,2.607798,-1.986141,6.195822,-4.565874,7.744410,-8.531906,5.959228,2.048021,-2.050149,8.694802,9.397167,-5.421467,-0.316706,3.950100,-5.029214,-8.878892,-3.751643,6.594071,1.681619,-8.872707,7.012801,2.721943,1.225483,8.330355,8.947290,-8.924972,1.079409,4.636606,-5.209768,5.469957,-5.318398,-4.487848,-4.236770,-2.334998,2.623806,2.355002,-4.011846,9.113900,8.378031,0.655271,-8.335029,7.319219,6.784514,4.739110], dtype = "float64")#candidate|13515|(512,)|const|float64
call_13509 = relay.TupleGetItem(func_10915_call(relay.reshape(const_13510.astype('float32'), [10, 12, 5]), relay.reshape(var_13511.astype('int16'), []), relay.reshape(const_13512.astype('int32'), [378,]), relay.reshape(const_13513.astype('float64'), [385,]), relay.reshape(const_13514.astype('float64'), [810,]), relay.reshape(const_13515.astype('float64'), [4, 128]), ), 5)
call_13516 = relay.TupleGetItem(func_10922_call(relay.reshape(const_13510.astype('float32'), [10, 12, 5]), relay.reshape(var_13511.astype('int16'), []), relay.reshape(const_13512.astype('int32'), [378,]), relay.reshape(const_13513.astype('float64'), [385,]), relay.reshape(const_13514.astype('float64'), [810,]), relay.reshape(const_13515.astype('float64'), [4, 128]), ), 5)
output = relay.Tuple([call_13461,call_13466,const_13467,var_13468,call_13509,const_13510,var_13511,const_13512,const_13513,const_13514,const_13515,])
output2 = relay.Tuple([call_13462,call_13469,const_13467,var_13468,call_13516,const_13510,var_13511,const_13512,const_13513,const_13514,const_13515,])
func_13518 = relay.Function([var_13468,var_13511,], output)
mod['func_13518'] = func_13518
mod = relay.transform.InferType()(mod)
var_13519 = relay.var("var_13519", dtype = "float32", shape = (780,))#candidate|13519|(780,)|var|float32
var_13520 = relay.var("var_13520", dtype = "int16", shape = ())#candidate|13520|()|var|int16
output = func_13518(var_13519,var_13520,)
func_13521 = relay.Function([var_13519,var_13520,], output)
mutated_mod['func_13521'] = func_13521
mutated_mod = relay.transform.InferType()(mutated_mod)
func_11724_call = mod.get_global_var('func_11724')
func_11725_call = mutated_mod.get_global_var('func_11725')
call_13643 = relay.TupleGetItem(func_11724_call(), 0)
call_13644 = relay.TupleGetItem(func_11725_call(), 0)
output = call_13643
output2 = call_13644
func_13648 = relay.Function([], output)
mod['func_13648'] = func_13648
mod = relay.transform.InferType()(mod)
output = func_13648()
func_13649 = relay.Function([], output)
mutated_mod['func_13649'] = func_13649
mutated_mod = relay.transform.InferType()(mutated_mod)
func_12987_call = mod.get_global_var('func_12987')
func_12989_call = mutated_mod.get_global_var('func_12989')
call_13660 = relay.TupleGetItem(func_12987_call(), 0)
call_13661 = relay.TupleGetItem(func_12989_call(), 0)
func_11595_call = mod.get_global_var('func_11595')
func_11597_call = mutated_mod.get_global_var('func_11597')
call_13686 = relay.TupleGetItem(func_11595_call(), 0)
call_13687 = relay.TupleGetItem(func_11597_call(), 0)
func_3172_call = mod.get_global_var('func_3172')
func_3177_call = mutated_mod.get_global_var('func_3177')
var_13697 = relay.var("var_13697", dtype = "int64", shape = (1050,))#candidate|13697|(1050,)|var|int64
var_13698 = relay.var("var_13698", dtype = "int32", shape = (528,))#candidate|13698|(528,)|var|int32
call_13696 = relay.TupleGetItem(func_3172_call(relay.reshape(var_13697.astype('int64'), [15, 7, 10]), relay.reshape(var_13697.astype('int64'), [15, 7, 10]), relay.reshape(var_13698.astype('int32'), [528, 1]), ), 2)
call_13699 = relay.TupleGetItem(func_3177_call(relay.reshape(var_13697.astype('int64'), [15, 7, 10]), relay.reshape(var_13697.astype('int64'), [15, 7, 10]), relay.reshape(var_13698.astype('int32'), [528, 1]), ), 2)
output = relay.Tuple([call_13660,call_13686,call_13696,var_13697,var_13698,])
output2 = relay.Tuple([call_13661,call_13687,call_13699,var_13697,var_13698,])
func_13720 = relay.Function([var_13697,var_13698,], output)
mod['func_13720'] = func_13720
mod = relay.transform.InferType()(mod)
var_13721 = relay.var("var_13721", dtype = "int64", shape = (1050,))#candidate|13721|(1050,)|var|int64
var_13722 = relay.var("var_13722", dtype = "int32", shape = (528,))#candidate|13722|(528,)|var|int32
output = func_13720(var_13721,var_13722,)
func_13723 = relay.Function([var_13721,var_13722,], output)
mutated_mod['func_13723'] = func_13723
mutated_mod = relay.transform.InferType()(mutated_mod)
func_11498_call = mod.get_global_var('func_11498')
func_11499_call = mutated_mod.get_global_var('func_11499')
call_13725 = relay.TupleGetItem(func_11498_call(), 0)
call_13726 = relay.TupleGetItem(func_11499_call(), 0)
uop_13731 = relay.asin(call_13725.astype('float32')) # shape=(12, 14, 7)
uop_13733 = relay.asin(call_13726.astype('float32')) # shape=(12, 14, 7)
func_8115_call = mod.get_global_var('func_8115')
func_8118_call = mutated_mod.get_global_var('func_8118')
const_13741 = relay.const([[-5.049478,5.534840,-6.178285,7.622196,-5.898797,0.146207,-4.138505,0.994976,5.864242,1.640737,9.601259,8.203411,-4.834489,-2.368981,7.346649,-0.376630,-6.155012,6.057892,8.760991,0.284001,-3.677497,-3.700541,7.618397,-9.066906,-5.522674,-1.959970,2.217248,-7.598923,5.335789,-2.925132,1.597113,-8.291838,-8.749707,-2.559164,-5.047294,-6.627580,-9.099892,9.950932,-0.482647,-2.682780,-8.900338,-2.491106,6.867793,5.273766,3.892871,3.335820,-5.600617,-8.091838,4.743450,-8.292517,-5.060081,8.628223,-6.090725,-9.862947,-2.088529,3.991524,-8.913965,-5.368708,-3.329467,-3.793205,-8.220350,8.728881,9.883496,0.503605,-6.420536,-1.027788,-2.253946,-1.407009,-8.295976,9.700175,0.508096,8.073907,-3.529022,0.552830,3.518751,-4.800358,9.769432,5.562266,8.255010,-0.228068,-8.754081,3.082531,-5.429489,9.268550,-2.462182,1.592485,3.231194,9.564731,-9.446647,2.286758,-1.477106,8.645179,5.566391,-3.710051,-8.908353,-9.462808],[8.626422,3.034532,6.596546,3.268145,-0.070925,-1.346886,6.910861,7.439386,-5.410267,-8.807572,0.506353,6.007273,-5.681697,7.951729,-6.699841,5.199308,6.515650,2.168187,-0.974629,4.518857,5.975711,-4.459662,6.331240,-9.414213,-6.022265,6.543847,6.784894,-6.753448,-6.653056,-1.156877,-6.332156,7.653220,-6.519510,-6.137776,3.356167,9.290326,7.352615,5.925004,-2.867196,4.062522,-4.291136,-0.501134,2.350381,0.971012,-0.379592,-0.197753,-6.449438,6.930082,-7.639643,1.765669,5.148722,-5.688103,-0.695139,6.633134,1.454793,-9.336396,3.990117,0.318061,3.158609,3.607657,-9.316506,-3.719525,8.457362,-2.237625,-3.247966,1.822750,-8.145591,-5.100995,0.402883,7.095932,-6.092454,1.562719,-4.836367,-2.776434,6.234234,-7.418649,1.386035,-4.338357,-7.196707,-7.889316,-3.924343,-2.665379,5.573664,-6.836733,-5.319310,-7.839297,6.477195,4.383153,-9.190610,5.767329,9.031829,-8.462363,1.590301,2.411306,8.616262,-5.264122]], dtype = "float32")#candidate|13741|(2, 96)|const|float32
call_13740 = relay.TupleGetItem(func_8115_call(relay.reshape(const_13741.astype('float32'), [3, 16, 4]), relay.reshape(const_13741.astype('float32'), [3, 16, 4]), ), 0)
call_13742 = relay.TupleGetItem(func_8118_call(relay.reshape(const_13741.astype('float32'), [3, 16, 4]), relay.reshape(const_13741.astype('float32'), [3, 16, 4]), ), 0)
func_3172_call = mod.get_global_var('func_3172')
func_3177_call = mutated_mod.get_global_var('func_3177')
const_13753 = relay.const([-5,-2,-1,8,-10,-8,5,-10,-10,9,-9,3,-5,4,-2,-6,6,-9,-10,8,-3,-4,2,3,-5,1,1,2,10,3,10,8,-9,3,-8,-1,9,-9,-9,2,-5,8,9,-5,7,-9,-9,-1,6,10,-4,4,4,4,-6,-7,-9,6,-4,-5,8,8,-2,8,4,3,6,-5,1,-4,-6,-7,-6,3,3,-5,-5,-2,3,-9,5,6,9,4,1,-6,-8,3,5,8,-7,3,-5,9,3,4,9,-1,-3,8,-2,-2,5,-8,3,-10,-8,-10,-6,-10,8,10,8,-6,6,-7,-6,1,-6,4,5,-8,5,-4,1,-3,-10,6,2,-10,-6,7,8,5,-6,-3,-1,2,3,10,-1,-10,-5,10,-10,8,-7,-8,-4,9,2,-1,-7,2,2,-1,-6,-6,1,10,6,5,-4,8,-8,8,-1,6,5,-7,1,-1,-10,7,5,-3,3,4,-5,-5,-1,4,5,1,9,6,7,4,-6,-1,6,4,1,9,2,10,9,5,-5,4,4,1,-9,1,6,8,3,3,10,2,6,-3,-6,-8,7,-3,4,-4,-1,-10,-4,-8,10,5,-3,-10,-10,5,5,7,7,-5,-5,6,6,2,-6,-9,4,-4,2,8,-9,10,-4,6,-8,-4,1,-1,-8,9,5,-8,-3,-6,8,-8,4,-1,-4,4,9,7,10,9,2,1,7,6,4,6,5,9,2,10,6,-10,-1,-6,-4,8,4,-3,1,-10,1,-6,-2,6,4,1,-3,4,-7,-5,-7,9,2,-2,-1,-7,10,9,-8,-7,-4,-2,-1,-10,-1,1,8,1,4,-5,8,7,9,2,-4,10,1,-4,-2,-1,9,-1,4,1,5,-2,1,-3,-7,8,5,-9,1,9,10,-6,-1,-8,-9,4,-4,-9,8,-5,-6,-8,10,7,3,-5,-5,-1,-10,-3,7,-2,-4,8,-2,6,-4,9,4,-7,2,-9,5,-5,-9,1,-6,9,-6,3,-9,-4,-5,-9,10,5,8,-1,4,-7,6,10,-2,3,5,-4,7,9,4,3,4,8,-2,6,-6,-10,10,6,7,10,7,8,3,-10,-9,-10,10,6,6,-1,-4,5,-9,6,2,9,9,5,-9,6,7,1,-4,3,-9,-4,-3,5,-2,7,-6,-3,-8,-6,1,-2,-7,-8,-10,-1,-5,-9,6,10,6,9,-8,8,9,10,5,-2,7,-3,1,3,1,-6,-10,2,-6,10,3,9,-10,-4,2,-7,-6,-3,6,-4,-2,3,-7,-7,-6,-8,-5,-3,-5,-1,-4,6,-9,-8,-9,-4,-5,10,-2,6,4,-6,-10,-5,7,1,-2,-9,10,-8,2,-9,-8,8,5,-5,7,-9,2,1,8,1,3,-3,-9,-1,4,7,-8,-10,-10,-6,-10,-5,9,-4,-8,-8,-4,3,3,-4,3,-9,-10,-3,-5,9,-4,-8,10,1,-4,8,-10,-1,4,-10,-1,-7,-7,3,-1,-7,-9,-9,4,7,-7,-8,-6,1,-6,-7,1,8,-4,2,-5,2,2,1,9,6,2,6,4,-10,-10,9,-2,-1,-10,-4,10,9,7,-9,-7,-4,-10,-1,-8,7,1,-1,-5,-1,-5,-9,3,8,7,6,-4,-5,3,-1,6,-10,5,9,-2,-4,7,2,1,-10,7,10,-8,-6,-10,3,8,-2,3,-5,-2,-3,-2,1,-5,10,8,-3,-7,-9,-9,-3,-4,-10,-8,1,3,1,9,1,-2,5,-2,-6,9,-8,-6,5,-7,6,-9,-7,10,-2,-1,-4,3,-5,-10,-8,8,9,-8,-5,-1,-2,9,5,-1,-10,-9,7,6,10,5,-6,3,-7,2,-8,5,3,1,-5,4,-7,2,4,-6,-3,-2,3,8,8,4,-3,8,-2,6,3,5,-3,-4,2,-3,10,-7,3,-3,-5,9,-5,-6,5,-6,-9,8,7,-1,1,-7,-1,4,-8,-7,3,1,-10,-6,-6,-5,5,-9,7,-3,-5,-9,-3,-10,-7,3,2,9,10,9,10,-5,1,-9,-5,7,1,6,-9,6,-3,8,-3,-9,4,1,6,-9,9,5,10,-3,8,-6,6,-4,1,6,1,-10,-5,-7,8,-6,-5,10,3,-6,-3,-7,-4,-7,3,2,-7,8,-5,3,-2,10,-1,1,-4,-4,-9,5,4,-2,-5,2,9,6,-5,-7,9,2,-8,4,2,-10,-1,-8,-6,1,-7,5,-2,-1,-9,2,6,8,9,-7,-9,3,3,-6,-2,-10,1,6,-6,8,5,-1,-8,-4,-10,9,9,1,3,-1,-4,3,-6,-7,-4,-8,-9,-10,8,3,7,7,-3,-6,-6,9,-7,5,9,-8,1,4,6,4,-7,2,-8,-10,9,-7,-4,-7,9,8,6,-3,-3,6,10,-1,-8,1,-4,-8,8,10,-2,-4,-10,10,-8,4,1,-9,1,-8,-5,-6,-3,-3,-2,2,1,6,8,-1,1,6,-5,-3,-6,-5,3,1,-10,6,9,-7,-5,6,-2,-8,2,7,10,4,-2,-9,2,10,6,5,5,10,8,-1,-2,-3,2,10,9,-8,-2,-7,-8,-10,2,-2,9,7,7,-8,-7,-1,-3,1,-4,-5,7,-5,-9,-1,-10,10,-4,-9,-2,-8,-1,8,-2,6,-9,6,-2,-4,6,2,6,-7,8,1,-4,9,-10,9,-7,9,7,5,-6,10,2,-8,-5,-1,3,-1,5,-2,8,-8,-8,2,-2,-5,-3,10,9,8,-5,5,2,-4,-7,-1,-10,9,-6,5,7], dtype = "int64")#candidate|13753|(1050,)|const|int64
const_13754 = relay.const([8,-3,4,2,-1,7,-6,5,-5,-4,-10,1,-7,7,-7,-3,6,-4,4,-6,-7,-3,8,-8,7,-7,-4,-7,9,1,4,-1,-10,3,-2,-8,-2,1,-9,4,-10,-4,-1,9,7,-6,-4,1,3,-7,-3,-4,-6,-6,6,2,2,2,7,5,-1,-6,9,8,-3,9,-2,4,7,-4,1,1,-3,9,6,5,5,4,-9,8,-9,-10,7,8,4,-1,9,-8,-6,-4,1,2,9,9,-10,1,-3,8,-3,-8,-10,1,10,4,8,-10,7,4,10,5,-10,9,7,5,-6,8,1,-7,-1,-9,-1,8,5,-6,-5,6,9,-1,3,-8,-1,6,8,-7,6,-7,-6,-7,-7,7,5,-9,9,1,-10,-10,5,-4,-1,1,-8,-8,-5,7,-7,-8,-8,-7,9,-8,6,1,-5,-6,8,6,10,-2,9,9,-2,10,-5,6,4,-4,-1,2,2,2,7,-7,2,-2,-7,-8,-9,10,5,10,9,8,1,-5,1,-4,-7,-7,-10,-1,1,9,-10,-8,6,-4,3,4,5,-6,7,5,3,-7,1,2,-9,-6,2,4,9,3,-2,-6,4,-1,6,-9,8,-1,-3,-2,8,3,-1,9,7,-4,7,-5,-3,-6,-4,5,-10,-2,-3,-5,-2,2,7,3,-1,10,6,3,-2,8,5,-10,4,-9,-6,-10,5,2,-3,-4,4,6,-1,-1,9,1,-3,-8,2,-3,-4,-7,-7,8,7,-4,-8,-3,9,-4,-3,2,-5,-2,10,5,2,-2,2,7,-2,2,-3,-10,9,5,-10,-8,9,-4,-9,2,1,-8,-4,2,-10,-7,-9,7,3,-10,9,10,7,-9,-10,-6,7,-4,1,-8,-10,3,-5,7,-4,-3,-4,5,6,8,6,-9,-9,3,-2,-10,7,-4,-8,10,-8,7,7,-3,-5,-3,6,4,-6,7,10,-10,3,-9,5,-4,-6,4,4,-6,-10,-10,10,2,-2,6,6,-9,2,-1,1,1,-8,-9,-4,-3,-6,9,-6,-4,9,8,-5,-4,9,3,3,-7,9,-5,-3,-7,1,6,6,6,9,-1,-5,3,-2,-1,-2,-8,-6,-4,-3,-7,7,-4,3,-8,-5,9,4,1,-10,-3,-3,-3,-7,-8,-10,-7,-10,1,10,-8,-10,3,10,-2,-10,-3,9,2,5,-6,-6,-3,3,-2,3,6,-10,7,-6,-2,-5,9,-3,8,2,-2,-9,7,-8,5,-10,5,1,-1,3,3,-10,-2,5,10,5,6,-6,-8,-1,-8,-3,2,-6,-4,6,-7,-2,-9,10,-4,1,1,-4,-4,1,7,-4,9,-2,9,10,6,6,9,-5,2,-7,-5,-1,6,-10,7,2,4,-9,-1,10,3,3,3,-8,-5,-8,-6], dtype = "int32")#candidate|13754|(528,)|const|int32
call_13752 = relay.TupleGetItem(func_3172_call(relay.reshape(const_13753.astype('int64'), [15, 7, 10]), relay.reshape(const_13753.astype('int64'), [15, 7, 10]), relay.reshape(const_13754.astype('int32'), [528, 1]), ), 0)
call_13755 = relay.TupleGetItem(func_3177_call(relay.reshape(const_13753.astype('int64'), [15, 7, 10]), relay.reshape(const_13753.astype('int64'), [15, 7, 10]), relay.reshape(const_13754.astype('int32'), [528, 1]), ), 0)
output = relay.Tuple([uop_13731,call_13740,const_13741,call_13752,const_13753,const_13754,])
output2 = relay.Tuple([uop_13733,call_13742,const_13741,call_13755,const_13753,const_13754,])
func_13759 = relay.Function([], output)
mod['func_13759'] = func_13759
mod = relay.transform.InferType()(mod)
output = func_13759()
func_13760 = relay.Function([], output)
mutated_mod['func_13760'] = func_13760
mutated_mod = relay.transform.InferType()(mutated_mod)
func_12866_call = mod.get_global_var('func_12866')
func_12868_call = mutated_mod.get_global_var('func_12868')
call_13783 = func_12866_call()
call_13784 = func_12866_call()
output = relay.Tuple([call_13783,])
output2 = relay.Tuple([call_13784,])
func_13791 = relay.Function([], output)
mod['func_13791'] = func_13791
mod = relay.transform.InferType()(mod)
output = func_13791()
func_13792 = relay.Function([], output)
mutated_mod['func_13792'] = func_13792
mutated_mod = relay.transform.InferType()(mutated_mod)
func_13648_call = mod.get_global_var('func_13648')
func_13649_call = mutated_mod.get_global_var('func_13649')
call_13867 = func_13648_call()
call_13868 = func_13648_call()
output = relay.Tuple([call_13867,])
output2 = relay.Tuple([call_13868,])
func_13869 = relay.Function([], output)
mod['func_13869'] = func_13869
mod = relay.transform.InferType()(mod)
mutated_mod['func_13869'] = func_13869
mutated_mod = relay.transform.InferType()(mutated_mod)
func_13869_call = mutated_mod.get_global_var('func_13869')
call_13870 = func_13869_call()
output = call_13870
func_13871 = relay.Function([], output)
mutated_mod['func_13871'] = func_13871
mutated_mod = relay.transform.InferType()(mutated_mod)
func_13343_call = mod.get_global_var('func_13343')
func_13345_call = mutated_mod.get_global_var('func_13345')
call_13877 = func_13343_call()
call_13878 = func_13343_call()
func_11976_call = mod.get_global_var('func_11976')
func_11978_call = mutated_mod.get_global_var('func_11978')
call_13902 = func_11976_call()
call_13903 = func_11976_call()
output = relay.Tuple([call_13877,call_13902,])
output2 = relay.Tuple([call_13878,call_13903,])
func_13928 = relay.Function([], output)
mod['func_13928'] = func_13928
mod = relay.transform.InferType()(mod)
mutated_mod['func_13928'] = func_13928
mutated_mod = relay.transform.InferType()(mutated_mod)
func_13928_call = mutated_mod.get_global_var('func_13928')
call_13929 = func_13928_call()
output = call_13929
func_13930 = relay.Function([], output)
mutated_mod['func_13930'] = func_13930
mutated_mod = relay.transform.InferType()(mutated_mod)
func_13439_call = mod.get_global_var('func_13439')
func_13440_call = mutated_mod.get_global_var('func_13440')
call_14001 = relay.TupleGetItem(func_13439_call(), 0)
call_14002 = relay.TupleGetItem(func_13440_call(), 0)
func_4498_call = mod.get_global_var('func_4498')
func_4501_call = mutated_mod.get_global_var('func_4501')
const_14004 = relay.const([[-5.818264,8.214327,-6.072878,0.852070,-0.622720,-9.833458,9.525436,5.736301,-5.795942,2.129653,-0.866091,-5.244763,8.812238,9.977037,4.293840,-2.156170],[1.761147,-9.079728,-5.162616,-6.766703,-4.367963,9.210995,1.049550,9.656693,9.519429,2.038489,2.927679,0.770705,0.851217,-4.302628,5.956315,-7.447235],[0.996050,-2.751773,-3.382972,-1.609077,-3.729897,-7.455396,-8.517835,0.853311,-3.880627,-7.355695,-1.838977,-7.104318,-5.312213,-3.544901,-6.706003,-4.772285],[1.559807,5.527513,3.548841,5.473287,0.437522,1.706670,0.741492,7.393291,-2.355528,-9.480665,4.211596,-1.305664,8.720339,6.403397,-9.543327,9.140389],[2.095174,2.959546,-2.228719,-3.412982,4.794411,-1.253244,-3.776682,-2.728817,7.568210,4.614774,-7.603268,-0.090419,-8.512784,2.453321,3.974673,4.746904],[9.140309,1.107607,8.979666,4.903467,-0.608907,0.320878,3.844045,3.934663,-4.918011,-9.312817,-6.623441,8.724928,-4.791417,8.893450,9.703027,-1.407080],[-3.504383,5.253233,6.987226,-7.003141,-8.060936,-6.314615,0.760601,-7.609293,-3.890574,-3.743633,7.612984,-4.163833,-8.683513,7.482731,-3.746197,-6.006786],[6.646630,-6.071884,-0.854641,-0.696538,-2.327709,5.116398,-4.850142,-1.085914,-8.533748,-1.413925,-9.385368,3.610537,-8.470674,-0.815730,5.156259,4.623099],[-7.378606,2.305489,-1.027769,1.579356,6.434663,0.302850,-2.020168,-4.781405,-8.824122,-1.074837,9.532878,-7.277195,-1.711346,-6.749162,7.846732,2.962930],[5.052182,6.223904,-9.961462,1.750836,0.050659,-4.167262,-4.162009,-4.620005,5.666230,4.131299,-8.671600,-1.762277,-3.792818,-5.655845,5.389078,-4.820672],[5.521941,-2.519841,-9.825521,7.654927,-1.929523,-7.765472,-7.055760,-4.744397,7.193744,5.884797,9.547437,1.426611,-6.618214,0.399856,0.780482,6.591681],[3.708365,-1.831601,1.760133,7.764631,3.975902,-1.247019,-6.605697,4.284548,-8.769066,-0.957881,2.081067,8.596396,0.639526,1.904658,-2.384408,0.507936],[-0.719252,-7.255418,9.553586,-0.640354,8.426797,6.760914,6.012391,0.240188,5.414673,7.333743,4.469433,-7.842592,1.724604,8.421856,-0.361470,-3.137973],[6.590835,-5.781880,-9.953672,8.513794,5.479733,-4.033084,-9.803356,-8.690659,1.483051,-2.600345,8.457086,1.133348,-1.334207,-4.500326,-4.086505,7.109981],[4.297486,-5.613686,-8.993393,9.003160,-8.896894,-7.181191,-3.881187,-1.465955,-5.353487,-6.035687,-3.398931,1.151912,3.321881,3.169130,-4.968305,0.170236],[2.483362,9.162718,5.796029,7.408566,-2.995332,-3.351302,6.442622,-8.960861,8.428272,8.204437,2.082936,-6.723813,-7.991638,-6.750882,2.697751,7.579739],[2.543812,-1.433060,4.077954,2.102402,-6.654213,-3.336372,-7.421100,1.007114,-0.701207,6.758549,5.069644,-2.874432,-7.176469,-6.808869,-4.828356,-7.390345],[2.341046,-8.467459,-7.363792,-8.703264,-6.503791,-3.159191,-3.340639,-7.935134,-4.287453,-6.231375,-7.175214,-5.448548,1.015086,-2.551363,-8.137018,3.677171],[1.487579,-1.325348,2.184163,-7.345240,-9.464360,4.928235,6.569357,3.001642,5.440087,1.667868,-9.503414,-5.591291,0.068034,4.986261,8.563969,3.792018],[-1.537944,7.629474,-4.987249,7.919213,-3.427108,3.431707,1.724768,-4.759166,-6.340675,-2.431359,6.380860,-3.989262,7.909896,-5.964856,8.237368,3.804675],[4.871911,1.045192,9.759116,-3.579311,8.694207,3.161466,-1.507315,-6.406790,8.308680,8.973643,2.592629,2.698453,6.523016,-7.120367,7.345439,3.288766],[-4.365283,9.747106,4.586458,6.051992,3.902051,8.525548,-7.968396,5.782726,-5.916582,-3.675559,-2.670463,-0.962126,7.811255,-0.809270,1.172257,-7.214052],[2.458830,7.130373,6.898620,4.100244,6.199946,2.765687,-9.899890,9.085291,9.993192,6.936349,-9.957608,-7.479467,-3.775887,-1.868151,-5.836380,3.924496],[-9.382757,-3.812139,6.338291,5.501207,5.430640,4.976841,0.547039,-7.177463,-6.943838,-0.940913,-2.107827,9.869206,-5.320362,-9.992485,-6.523368,-6.901869],[-5.456080,-4.918795,-9.350309,-8.484798,-2.157295,-4.581065,-8.874872,4.681068,-0.538692,0.964293,-1.635170,2.550106,7.106695,6.982022,1.466690,-5.098154],[-4.437330,2.064506,-2.020119,-6.043206,5.850211,-6.705434,-4.138117,2.349374,-0.998043,9.773798,4.777376,6.047165,-5.388272,-4.817465,-2.427845,3.447618],[4.147818,4.025687,-6.869234,9.710247,-3.826992,3.656215,3.829245,2.179039,-6.835228,-1.987064,7.431887,-8.329413,-4.524120,7.957368,1.714197,7.649018],[-1.065319,1.255598,4.714230,-0.859288,-9.748848,-2.166136,-4.666008,7.174717,-8.595829,-7.425429,8.614687,3.432433,6.697476,-1.152265,5.556631,-6.363724],[5.663860,-7.438874,-8.449367,-3.651829,-1.974887,-6.575573,1.792260,7.319614,1.377978,7.466180,-4.465816,-0.641690,-0.053546,9.554031,-8.705477,5.057878],[0.282048,-9.986126,-5.890699,-1.922175,5.712162,-9.620693,9.966771,-4.268588,3.882800,7.578928,-6.567170,-1.055455,6.973526,-9.304655,8.450265,2.477582],[7.562831,-8.691048,-3.706306,6.703115,2.641813,-8.702114,1.122527,9.851305,4.422142,4.854459,-3.961108,-5.524282,7.499386,9.912928,-6.204136,4.215776],[8.491778,6.037672,-5.154650,8.144935,-8.082636,-0.414269,1.086449,8.677226,4.665067,-7.985408,-3.635857,5.250817,-7.285623,-8.119535,5.389937,-9.184294],[8.641251,-8.418319,-4.106645,7.694447,-7.132483,4.266734,1.564637,-9.974788,2.263132,-5.299268,9.432508,3.260715,-3.190936,-4.084908,0.463463,-4.011649],[-6.468078,-4.607051,6.754355,-4.689457,-0.962470,0.312338,-2.518193,-1.806705,-8.867318,2.765707,-2.820508,0.187023,-5.313142,-0.759538,6.466860,-1.750993],[4.345396,-7.166145,-6.855177,-8.456983,-7.394311,-6.235749,0.711356,-2.514067,7.655222,0.749774,-3.219109,-9.718498,-5.337932,-1.788670,-3.936003,-5.193749],[-4.746740,-2.116119,0.941448,9.120959,-4.445081,-4.749239,-8.464857,9.178983,-3.471864,7.948419,-0.745353,0.905963,-3.119530,-8.748505,-5.002241,-2.805878]], dtype = "float64")#candidate|14004|(36, 16)|const|float64
const_14005 = relay.const([-6.374315,3.200097,-7.523806,-1.905490,-0.943908,-4.023082,6.387502,-6.058174,9.583357,-6.096858,5.812339,-9.300326,0.699919,-4.433129,8.451731,4.753128,-3.401520,-9.983841,-0.660456,3.494515,4.481582,0.575402,8.525375,-1.088927,3.696374,-7.017534,4.843517,-2.529182,-6.915586,9.032761,-6.225268,6.824612,4.932105,3.553976,-6.404368,3.821058,-0.259313,-0.350673,-1.706848,3.205709,-5.928758,-7.707226,-0.338979,-2.467779,-0.280129,6.048802,2.916380,5.831657,-9.997758,-8.909909,-5.674002,-9.327939,4.850135,-1.021000,6.883248,0.574730,-2.775992,8.201381,5.823528,3.796380,-7.189887,-7.420174,3.609803,-8.653055,6.717160,-4.601467,-8.945089,-7.305556,-2.845659,2.991602,-9.372160,0.172750,8.313001,-3.481039,-5.759958,-1.286112,-9.370648,-3.855067,-3.262385,5.689485,-1.555416,6.804341,0.860120,-0.538611,2.248700,7.157658,-0.162278,-3.508776,-3.990894,-7.210473,-0.605472,5.531046,-5.346856,-1.418412,-1.748031,-0.756341,7.174396,-4.453054,1.162789,-5.718000,-9.234238,1.994237,-6.701160,-4.680856,-5.703242,-3.118601,2.572794,5.533916,4.205699,5.328775,9.659943,-5.564957,2.059613,2.472697,4.508624,1.105140,-6.558273,8.338238,-6.459860,4.223498,-2.092176,7.538714,1.236187,5.482840,-7.803877,-0.800877,-1.307092,7.933751,8.666102,3.055709,-8.754785,1.184203,2.360400,-2.404865,-3.955891,-9.269607,3.000658,3.588036,-0.215926,1.762387,0.912014,-0.810121,7.991117,7.245858,9.288001,7.999623,-3.266811,-9.960125,6.575937,0.592241,-7.673092,5.310795,-9.857549,-0.134786,8.385349,4.978531,1.604222,0.948211,3.163694,-5.616937,7.095271,5.800527,-7.266718,1.338203,-0.852730,3.237373,-2.542076,-6.053570,7.374644,5.341859,-1.202388,4.447886,-1.605253,-6.565660,-1.793081,-8.697647,3.069953,3.928613,0.290884,3.443851,7.683134,-3.924780,0.535696,-5.350583,9.905053,-4.130723,0.444131,-2.993067,-0.056249,6.735807,3.961087,-9.659686,6.602285,-3.498415,-5.210665,-9.320488,-8.222037,9.889168,3.556783,1.925278,5.429934,5.631989,5.361396,-3.875226,-6.820838,-2.517625,-8.928214,-0.102644,-8.636517,-6.158218,4.063443,2.126613,-6.995565,6.359270,-5.163251,-5.835699,-4.928977,-1.800069,5.644617,6.517080,3.908230,5.466607,-5.273413,4.336069,-9.096138,1.346445,0.868875,-6.126550,6.258746,3.855315,-9.695622,7.145382,7.931404,-3.013602,7.452684,7.758150,-2.686780,-9.939232,-7.339672,3.056910,5.476826,-2.960640,7.484192,-4.667528,9.707564,7.281518,-5.137156,-4.690837,-9.504350,-0.534717,9.657392,-9.361184,4.110327,-1.059598,9.093245,-2.420022,4.861249,7.880322,6.051053,7.407537,4.608963,-7.654482,-4.039505,-5.069222,-4.785986,-7.228979,-1.688845,9.477170,0.431757,2.956923,6.634948,5.067765,8.879229,-6.182015,5.040004,0.987775,-1.667452,-7.309776,-9.715010,8.318236,0.020933,-9.265512,6.663950,4.396848,-6.868894,3.925464,7.412686,-8.377311,1.552288,9.546637,-9.528161,3.376190,1.738157,9.194870,-6.828776,-7.455384,-3.404308,7.788711,-5.257937,-7.180524,-8.987398,-5.131351,5.329372,-5.827291,5.379556,0.614839,-9.956808,-0.477868,-8.116661,5.579084,4.805250,-3.220205,1.668715,0.205526,9.253440,-0.929051,8.305944,5.411478,9.632348,4.697271,3.885400,-9.772831,0.911958,4.037254,7.798425,6.426537,-0.054601,-7.172983,3.144156,5.790926,-4.664093,-1.981810,1.448632,-9.739350,2.865833,5.603799,-2.791338,-0.237078,8.479763,3.431414,4.244237,3.271918,-7.073229,7.809707,8.686003,-9.009618,-0.520831,7.979692,-7.037724,-1.605791,4.913865,2.968517,4.760470,1.651564,0.360504,7.807632,1.378666,0.281268,0.913152,-3.711117,4.797958,-4.609078,2.004468,1.821878,5.202644,-5.755725,-5.814549,-9.125389,0.153321,-0.290584,-1.729617,8.066120,-9.789030,9.462020,9.628863,-0.965511,3.073242,-2.785564,-0.451655,-4.976789,9.957182,-1.114127,-9.880718,-6.616249,-6.476630,5.485613,-1.974568,3.407340,9.100392,-7.244891,-8.481354,6.662374,8.483405,-6.743431,-7.901402,5.364485,1.960365,2.812155,-1.452886,-9.853321,-1.544886,1.998234,-5.052280,4.324767,-4.397626,3.760606,-9.327463,-3.441758,-7.179979,7.223042,1.382471,1.972048,-8.394474,0.425527,-0.911655,4.302799,8.403110,6.895856,6.772892,0.528161,7.115436,-8.035691,0.661108,3.967817,-2.936874,-6.557281,-4.221185,-0.582744,-9.898448,4.759000,7.697112,3.964094,-9.632950,7.637745,9.258899,4.628547,5.318799,-4.119491,-9.705039,-0.470536,-1.877027,-9.111230,-7.350516,2.976726,-2.105669,0.688362,-7.067592,-9.063717,-4.817306,-6.515250,-2.190673,-7.630539,-0.745621,9.093622,-5.615276,6.054133,-8.359449,8.208419,-9.389250,-8.691274,-4.097501,7.744874,-5.072706,5.794904,1.932625,5.424714,8.332815,5.043287,-7.992342,-8.387341,-7.620133,-3.157556,1.993805,-4.501960,-8.928864,9.372780,-5.983644,6.493987,-9.856421,5.297532,8.582541,-0.613297,-5.271738,-7.535842,-1.186894,-2.965767,-2.807582,1.852679,-7.000878,6.799992,-9.930603,6.137518,5.814616,-2.215055,3.845369,1.529185,-6.954812,5.309031,6.964328,6.950794,-1.782970,1.396148,-2.123218,4.298155,-7.471967,-8.612375,7.424088,0.757122,-9.917866,-8.956683,-4.368280,-3.664580,9.023375,9.031823,6.469620,-9.241557,-7.493031,-6.483620,4.519823,-3.186312,7.618508,-4.814009,-0.256883,2.879112,4.718091,1.789846,-5.742690,-2.320836,6.182676,-2.929830,7.623997,4.649032,-3.359076,-6.919667,5.468676,0.138879,2.023554,0.371980,-1.841388,5.933133,-3.026773,0.267894,-2.751215,8.428120,1.248190,5.250610,-3.614810,1.248882,-9.585637,-9.670249,-8.189598,-0.505690,-3.329694,8.333317,2.324630,-7.378541,8.414981,-3.934609,-4.387797,-8.227254,1.684351,-0.586580,-6.495359,0.091568,6.670442,-8.931747,9.431848,-3.205692,-1.527864,-0.457351,-8.987700,1.286911,-4.284708,3.937408,6.528483,7.356264,0.474394,8.432041,6.126448,3.440554,-0.577119,-7.085088,-8.215246,3.716226,-0.759062,-3.410081,2.310538,1.750707,3.408615,-9.056170,-4.624685,-3.890953,4.706707,9.643179,-3.576245,1.329370,-1.568600,-1.815445,-9.876745,6.722697,-7.825684,2.937476,3.074754,2.351863,-3.531066,-2.504164,6.707965,-1.394553,-9.066841,4.786442,-5.239665,9.856662,-5.325553,-7.141070,-1.717769,-5.364988,6.443778,-2.862284,-2.620832,-4.538431,7.791281,3.480814,1.241698,4.062498,0.646579,-2.616678,3.260846,-8.637458,0.859006,8.018704,-5.201308,-2.047749,6.418206,-5.828524,3.914391,-3.280341,0.899262,2.868795,-9.470329,-5.250746,-8.902077,0.863490,2.211747,6.871007,-3.517010,-5.388594,-6.190258,6.640727,0.593570,2.398090,-7.854683,5.268171,6.842153,-0.977948,0.738042,3.116469,9.114937,5.532020,-0.503527,8.635707,8.192995,2.569638,1.434072,-0.167345,0.270258,0.340735,8.542552,7.055001,5.323401,-9.381350,8.993348,-4.539020,8.500980,8.561275,7.957501,-7.274335,-8.329259,-3.554863,-2.851980,-2.938587,4.958617,0.270988,-9.006707,5.109847,-9.569142,-1.002339,-6.228041,-7.504039,-1.135530,7.395018,0.220922,4.705648,-8.869395,2.199769,-9.180439,-5.586338,5.032896,-7.212985,-8.977028,9.040908,-0.192993,-2.485572,4.510250,-6.277259,-6.107263,5.510862,6.724467,8.810004,-5.240602,3.842213,-8.319999,-8.299833,0.370134,6.838213,8.177080,1.524399,-3.979927,-7.651022,-9.166059,-2.420866,-6.473643,-1.902297,-6.815130,8.012865,-9.177241,6.349817,-3.728570,-2.863563,-5.932368,-5.650168,1.873790,9.903788,0.892428,2.882936,-6.700145,9.712280,4.628570,3.655162,7.209524,-8.450546,9.531798,9.080933,-0.163631,7.550753,6.629322,-2.568930,8.393409,6.826607,4.519017,7.202910,-0.154532,-6.308855,-2.185379,4.066656,9.992555,-3.610136,4.223491,-2.538224,6.581182,-5.481082,9.621314,0.184970,8.114481,-4.881776,7.949859,-6.285571,-3.145019,9.832068,-3.182173,-7.592257,0.549049,-9.553099,-7.679392,-1.282858,3.245570,6.183956,0.028967,8.008997,8.696525,7.076812], dtype = "float32")#candidate|14005|(780,)|const|float32
call_14003 = relay.TupleGetItem(func_4498_call(relay.reshape(const_14004.astype('float64'), [4, 9, 16]), relay.reshape(const_14005.astype('float32'), [780,]), ), 1)
call_14006 = relay.TupleGetItem(func_4501_call(relay.reshape(const_14004.astype('float64'), [4, 9, 16]), relay.reshape(const_14005.astype('float32'), [780,]), ), 1)
uop_14021 = relay.atanh(const_14004.astype('float32')) # shape=(36, 16)
func_6467_call = mod.get_global_var('func_6467')
func_6470_call = mutated_mod.get_global_var('func_6470')
const_14029 = relay.const([7.592956,2.045281,6.288564,-4.998088,-6.275439,-6.834558,3.989177,0.287623,-9.659091,-6.301739,-6.037105,-4.818148,-0.275788,2.869583,3.026899,-4.226129,-3.465001,7.918847,-5.882110,7.682317,2.208940,7.390935,9.016149,-1.163112,0.997969,-3.725418,-3.874213,5.931232,2.448267,-0.025759,2.534098,7.110622,8.025317,-5.225921,-7.867139,-0.087312,1.238335,-6.754283,2.879871,9.067102,-3.185002,-6.924928,-0.512827,8.214990,9.164681,-2.588827,-4.243299,-9.146202,-2.299721,4.997290,-7.458230,5.539658,-6.515292,-0.981219,-4.213419,-2.143190,2.689936,7.590866,-7.806286,0.303754,5.571514,-3.679596,-5.707698,5.697772,8.903276,5.134965,-1.833258,-1.898180,7.704547,-6.766775,-6.124392,-3.539939,-5.097625,6.956091,-7.515560,-7.553833,-4.032290,-1.777734,1.584837,-6.042870,-8.928360,-8.346706,-4.358918,0.159138,-3.227728,5.942398,-6.298753,-6.233187,-6.107692,3.816507,0.725864,-2.455716,6.946076,-3.568259,-4.164762,5.567450,-6.341932,6.213583,-9.862622,-5.412711,6.333067,4.594923,3.443909,-6.102273,9.154178,7.034873,8.540920,9.263338,-4.922548,3.761900,-3.551670,6.985760,-2.194261,8.823688,-5.706050,9.710562,2.737580,4.367319,7.664644,-8.039979,-7.572509,4.385226,9.242951,-0.556406,-0.781015,-5.441604,-7.026856,5.764003,7.391458,-1.697824,2.975071,7.782363,-3.976685,1.048551,-2.069716,1.924970,5.335872,-3.073833,3.370352,-7.767975,-0.090484,-1.026780,6.240401,7.490354,-2.046114,-8.633521,-8.741972,-7.565412,-6.480414,-4.815712,-2.459475,0.443723,-5.466911,-0.361407,-8.913821,4.837217,-6.846997,-9.054525,0.513325,-7.503400,5.624591,4.015637,-7.588283,-5.085871,-8.778547,4.859046,-9.913088,-1.130179,-2.004734,-0.766173,-1.567791,9.344664,9.780576,-3.265963,7.376003,-7.691521,9.854855,-6.346061,-1.912933,-7.239415,3.995725,1.228188,7.961171,-7.720244,-6.745494,-1.801635,-3.650520,7.678835,6.614747,1.537598,-0.354924,8.144359,3.959931,6.422963,1.722895,-3.642878,5.506063,-8.199098,-0.655517,-1.512781,-0.589231,8.778601,-9.510364,-1.845306,-0.252435,4.546073,-6.787038,-7.431590,-3.357394,5.174208,9.513957,1.518537,7.923934,4.687748,-1.752409,-8.525990,6.925521,-2.198479,7.688860,5.710471,-5.653579,-9.175646,-0.309551,-3.568030,1.985836,-4.391454,-7.182693,3.093389,5.546137,4.717244,2.658375,-9.478902,7.049695,-2.291306,-7.284465,-5.592245,-1.204605,6.880872,1.913972,-5.025178,2.529071,8.461028,-5.225653,6.893318,-6.017254,7.655489,-3.725358,-8.758848,-8.450648,-7.402390,-3.415805,6.382860,-6.103611,2.055260,8.393877,-9.220158,-5.112094,-5.451679,-9.291560,6.097043,-2.879275,-8.710596,-5.697624,-7.808497,-6.537734,3.856638,8.554504,6.659730,2.054459,6.491746,-1.799694,7.633338,4.497797,0.557329,0.016363,-8.004330,-2.399757,1.269068,1.751767,4.025617,-0.624927,7.934755,-8.308878,2.204735,5.749947,-0.645499,-4.394357,4.379975,3.872854,-9.805542,1.924551,-8.581324,0.711478,-5.403735,0.587585,-7.302847,2.385468,4.264055,8.300735,6.983243,5.666090,-1.101564,-1.909985,6.426688,7.484100,-0.308854,6.986381,-8.593398,-3.054301,4.153368,-7.790149,-4.044687,0.323128,3.740585,-6.182089,-0.547372,-3.454720,-7.459312,-3.553521,-6.761156,3.818879,-6.537136,6.220328,2.380866,3.117162,9.096503,2.083791,3.760073,9.943626,2.717991,-6.364072,7.727468,-2.297324,4.266639,-4.072592,-5.430402,-5.597198,-7.800595,5.377548,-6.982523,-1.837154,4.923550,6.971317,3.839949,5.182052,-4.827655,-6.836390,1.298394,5.735760,1.652580], dtype = "float64")#candidate|14029|(350,)|const|float64
call_14028 = func_6467_call(relay.reshape(const_14029.astype('float64'), [14, 5, 5]), relay.reshape(const_14029.astype('float64'), [14, 5, 5]), )
call_14030 = func_6467_call(relay.reshape(const_14029.astype('float64'), [14, 5, 5]), relay.reshape(const_14029.astype('float64'), [14, 5, 5]), )
func_13376_call = mod.get_global_var('func_13376')
func_13379_call = mutated_mod.get_global_var('func_13379')
var_14035 = relay.var("var_14035", dtype = "float32", shape = ())#candidate|14035|()|var|float32
var_14036 = relay.var("var_14036", dtype = "float32", shape = (180,))#candidate|14036|(180,)|var|float32
call_14034 = relay.TupleGetItem(func_13376_call(relay.reshape(var_14035.astype('float32'), []), relay.reshape(var_14036.astype('float32'), [180,]), ), 4)
call_14037 = relay.TupleGetItem(func_13379_call(relay.reshape(var_14035.astype('float32'), []), relay.reshape(var_14036.astype('float32'), [180,]), ), 4)
var_14045 = relay.var("var_14045", dtype = "float32", shape = (36, 16))#candidate|14045|(36, 16)|var|float32
bop_14046 = relay.multiply(uop_14021.astype('int16'), relay.reshape(var_14045.astype('int16'), relay.shape_of(uop_14021))) # shape=(36, 16)
bop_14054 = relay.subtract(call_14003.astype('float32'), var_14035.astype('float32')) # shape=(5, 13, 12)
bop_14057 = relay.subtract(call_14006.astype('float32'), var_14035.astype('float32')) # shape=(5, 13, 12)
output = relay.Tuple([call_14001,const_14005,call_14028,const_14029,call_14034,var_14036,bop_14046,bop_14054,])
output2 = relay.Tuple([call_14002,const_14005,call_14030,const_14029,call_14037,var_14036,bop_14046,bop_14057,])
F = relay.Function([var_14035,var_14036,var_14045,], output)
mod['main'] = F
mod = relay.transform.InferType()(mod)
print('==========mod==========')
print(mod.astext(show_meta_data=False))
print('===================================')
F = relay.Function([var_14035,var_14036,var_14045,], output2)
mutated_mod['main'] = F
mutated_mod = relay.transform.InferType()(mutated_mod)
print('==========mutated_mod==========')
print(mutated_mod.astext(show_meta_data=False))
print('===================================')
graph, lib, params = relay.build(mod, target='llvm')
module1 = graph_runtime.create(graph, lib, tvm.device('llvm',0))
intrp2 = relay.build_module.create_executor('graph', mod, tvm.device('llvm',0),'llvm')
intrp3 = relay.build_module.create_executor('debug', mod, tvm.device('llvm',0),'llvm')
intrp4 = relay.build_module.create_executor('vm', mod, tvm.device('llvm',0),'llvm')
graph, lib, params = relay.build(mod, target='cuda')
module5 = graph_runtime.create(graph, lib, tvm.device('cuda',0))
intrp6 = relay.build_module.create_executor('graph', mod, tvm.device('cuda',0),'cuda')
intrp7 = relay.build_module.create_executor('debug', mod, tvm.device('cuda',0),'cuda')
intrp8 = relay.build_module.create_executor('vm', mod, tvm.device('cuda',0),'cuda')
seq = Sequential([
	relay.transform.AlterOpLayout(),
	relay.transform.AnnotateSpans(),
	relay.transform.BatchingOps(),
	relay.transform.CanonicalizeCast(),
	relay.transform.CanonicalizeOps(),
	relay.transform.DeadCodeElimination(),
	relay.transform.DynamicToStatic(),
	relay.transform.FastMath(),
	relay.transform.FirstOrderGradient(),
	relay.transform.EliminateCommonSubexpr(),
	relay.transform.MergeCompilerRegions(),
	relay.transform.Inline(),
])
mod = seq(mod)
print(mod.astext(show_meta_data=False))
graph, lib, params = relay.build(mod, target='llvm')
module9 = graph_runtime.create(graph, lib, tvm.device('llvm',0))
intrp10 = relay.build_module.create_executor('graph', mod, tvm.device('llvm',0),'llvm')
intrp11 = relay.build_module.create_executor('debug', mod, tvm.device('llvm',0),'llvm')
intrp12 = relay.build_module.create_executor('vm', mod, tvm.device('llvm',0),'llvm')
graph, lib, params = relay.build(mod, target='cuda')
module13 = graph_runtime.create(graph, lib, tvm.device('cuda',0))
intrp14 = relay.build_module.create_executor('graph', mod, tvm.device('cuda',0),'cuda')
intrp15 = relay.build_module.create_executor('debug', mod, tvm.device('cuda',0),'cuda')
intrp16 = relay.build_module.create_executor('vm', mod, tvm.device('cuda',0),'cuda')
graph, lib, params = relay.build(mutated_mod, target='llvm')
module17 = graph_runtime.create(graph, lib, tvm.device('llvm',0))
intrp18 = relay.build_module.create_executor('graph', mutated_mod, tvm.device('llvm',0),'llvm')
intrp19 = relay.build_module.create_executor('debug', mutated_mod, tvm.device('llvm',0),'llvm')
intrp20 = relay.build_module.create_executor('vm', mutated_mod, tvm.device('llvm',0),'llvm')
graph, lib, params = relay.build(mutated_mod, target='cuda')
module21 = graph_runtime.create(graph, lib, tvm.device('cuda',0))
intrp22 = relay.build_module.create_executor('graph', mutated_mod, tvm.device('cuda',0),'cuda')
intrp23 = relay.build_module.create_executor('debug', mutated_mod, tvm.device('cuda',0),'cuda')
intrp24 = relay.build_module.create_executor('vm', mutated_mod, tvm.device('cuda',0),'cuda')

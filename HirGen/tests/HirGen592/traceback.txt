==========mod==========
#[version = "0.0.5"]
def @func_1117() -> Tensor[(12, 8, 11), float64] {
  %0 = cast(meta[relay.Constant][0] /* ty=Tensor[(12, 8, 11), float64] */, dtype="float64") /* ty=Tensor[(12, 8, 11), float64] */;
  tan(%0) /* ty=Tensor[(12, 8, 11), float64] */
}

def @func_3929(%var_3912: Tensor[(275, 3), uint32]) -> (Tensor[(12, 8, 11), float64], Tensor[(12, 8, 11), float64], Tensor[(12, 8, 11), float64], Tensor[(12, 8, 11), float64], Tensor[(12, 8, 11), float64], Tensor[(11, 15, 5), uint32], Tensor[(275, 3), uint32]) {
  %1 = @func_1400() /* ty=Tensor[(12, 8, 11), float32] */;
  %2 = cast(%1, dtype="float64") /* ty=Tensor[(12, 8, 11), float64] */;
  %3 = @func_2774() /* ty=(Tensor[(12, 8, 11), float64],) */;
  %4 = @func_2045() /* ty=(Tensor[(12, 8, 11), float64], Tensor[(12, 8, 11), float64]) */;
  %5 = cast(%var_3912, dtype="uint32") /* ty=Tensor[(275, 3), uint32] */;
  %6 = reshape(%5, newshape=[11, 15, 5]) /* ty=Tensor[(11, 15, 5), uint32] */;
  %7 = atanh(%2) /* ty=Tensor[(12, 8, 11), float64] */;
  %8 = @func_2380() /* ty=Tensor[(12, 8, 11), float64] */;
  %9 = @func_2808() /* ty=Tensor[(12, 8, 11), float64] */;
  %10 = %3.0;
  %11 = %4.1;
  %12 = @func_1996(%6) /* ty=Tensor[(11, 15, 5), uint32] */;
  (%7, %8, %9, %10, %11, %12, %var_3912)
}

def @func_1235() -> (Tensor[(12, 8, 11), float64], Tensor[(12, 8, 11), float32], Tensor[(12, 8, 11), float32]) {
  %13 = @func_1117() /* ty=Tensor[(12, 8, 11), float64] */;
  %14 = cast(%13, dtype="float32") /* ty=Tensor[(12, 8, 11), float32] */;
  %15 = cast(%13, dtype="float32") /* ty=Tensor[(12, 8, 11), float32] */;
  %16 = @func_1117() /* ty=Tensor[(12, 8, 11), float64] */;
  %17 = acosh(%14) /* ty=Tensor[(12, 8, 11), float32] */;
  %18 = sigmoid(%15) /* ty=Tensor[(12, 8, 11), float32] */;
  (%16, %17, %18)
}

def @func_3373() -> (Tensor[(12, 8, 11), float32], Tensor[(12, 8, 11), float64]) {
  %19 = @func_2973() /* ty=(Tensor[(12, 8, 11), float64],) */;
  %20 = @func_1400() /* ty=Tensor[(12, 8, 11), float32] */;
  %21 = %19.0;
  (%20, %21)
}

def @func_12685(%var_12673: Tensor[(2, 7, 16), float64]) -> Tensor[(2, 7, 16), float64] {
  %22 = cast(%var_12673, dtype="float64") /* ty=Tensor[(2, 7, 16), float64] */;
  acosh(%22) /* ty=Tensor[(2, 7, 16), float64] */
}

def @func_13279() -> (Tensor[(352), float32],) {
  %23 = @func_11497() /* ty=Tensor[(352), float32] */;
  (%23,)
}

def @func_14347() -> (Tensor[(12, 8, 11), float32], Tensor[(13, 16, 5), int16], Tensor[(352), float32], Tensor[(12, 8, 11), float64], Tensor[(12, 8, 11), float64], Tensor[(12, 8, 11), float64]) {
  %24 = cast(meta[relay.Constant][1] /* ty=Tensor[(13, 16, 5), float32] */, dtype="float32") /* ty=Tensor[(13, 16, 5), float32] */;
  %25 = log(%24) /* ty=Tensor[(13, 16, 5), float32] */;
  %26 = cast(meta[relay.Constant][2] /* ty=Tensor[(13, 16, 5), float32] */, dtype="int16") /* ty=Tensor[(13, 16, 5), int16] */;
  %27 = shape_of(%25, dtype="int32") /* ty=Tensor[(3), int32] */;
  %28 = cast(%25, dtype="int16") /* ty=Tensor[(13, 16, 5), int16] */;
  %29 = dyn.reshape(%26, %27, newshape=[]) /* ty=Tensor[(?, ?, ?), int16] */;
  %30 = @func_9943() /* ty=(Tensor[(352), float32],) */;
  %31 = @func_8453() /* ty=(Tensor[(12, 8, 11), float64], Tensor[(8, 11, 4), float32]) */;
  %32 = @func_3644() /* ty=Tensor[(12, 8, 11), float32] */;
  %33 = subtract(%28, %29) /* ty=Tensor[(13, 16, 5), int16] */;
  %34 = %30.0;
  %35 = @func_2955() /* ty=Tensor[(12, 8, 11), float64] */;
  %36 = @func_9038() /* ty=Tensor[(12, 8, 11), float64] */;
  %37 = %31.0;
  (%32, %33, %34, %35, %36, %37)
}

def @func_6224(%var_6144: Tensor[(352), float32], %var_6199: Tensor[(352), float32]) -> (Tensor[(12, 8, 11), float32], Tensor[(990), uint32], Tensor[(5, 198), uint32], Tensor[(12, 8, 11), float64], Tensor[(12, 8, 11), float64], Tensor[(12, 8, 11), float32], Tensor[(352), float64], Tensor[(12, 8, 11), float64], Tensor[(12, 8, 11), float64], Tensor[(990), uint32], Tensor[(352), int8]) {
  %38 = cast(%var_6144, dtype="float32") /* ty=Tensor[(352), float32] */;
  %39 = cast(meta[relay.Constant][3] /* ty=Tensor[(5, 198), uint32] */, dtype="uint32") /* ty=Tensor[(5, 198), uint32] */;
  %40 = reshape(%38, newshape=[352]) /* ty=Tensor[(352), float32] */;
  %41 = reshape(%39, newshape=[990]) /* ty=Tensor[(990), uint32] */;
  %42 = @func_1580(%40, %41) /* ty=(Tensor[(352), int8], Tensor[(12, 8, 11), float64], Tensor[(990), uint32]) */;
  %43 = @func_2774() /* ty=(Tensor[(12, 8, 11), float64],) */;
  %44 = @func_2737() /* ty=(Tensor[(990), uint32], Tensor[(12, 8, 11), float64], Tensor[(12, 8, 11), float64], Tensor[(12, 8, 11), float64], Tensor[(12, 8, 11), int64]) */;
  %45 = @func_5701() /* ty=(Tensor[(12, 8, 11), float32], Tensor[(8, 11, 4), float64]) */;
  %46 = cast(%var_6199, dtype="float64") /* ty=Tensor[(352), float64] */;
  %47 = shape_of(%var_6144, dtype="int32") /* ty=Tensor[(1), int32] */;
  %48 = cast(%var_6144, dtype="float64") /* ty=Tensor[(352), float64] */;
  %49 = dyn.reshape(%46, %47, newshape=[]) /* ty=Tensor[(?), float64] */;
  %50 = @func_5379() /* ty=(Tensor[(12, 8, 11), float64],) */;
  %51 = floor_mod(%48, %49) /* ty=Tensor[(352), float64] */;
  %52 = cast(%51, dtype="float32") /* ty=Tensor[(352), float32] */;
  %53 = reshape(%52, newshape=[352]) /* ty=Tensor[(352), float32] */;
  %54 = @func_5866(%53) /* ty=(Tensor[(12, 8, 11), float64], Tensor[(12, 8, 11), float64], Tensor[(352), int8], Tensor[(352), float32], Tensor[(990), uint32], Tensor[(12, 8, 11), float64]) */;
  %55 = @func_1918() /* ty=Tensor[(12, 8, 11), float32] */;
  %56 = %42.2;
  %57 = %43.0;
  %58 = %44.2;
  %59 = %45.0;
  %60 = %50.0;
  %61 = @func_3522() /* ty=Tensor[(12, 8, 11), float64] */;
  %62 = @func_6054() /* ty=Tensor[(990), uint32] */;
  %63 = %54.2;
  (%55, %56, meta[relay.Constant][3] /* ty=Tensor[(5, 198), uint32] */, %57, %58, %59, %51, %60, %61, %62, %63)
}

def @func_7240() -> (Tensor[(16, 16, 13), float64],) {
  %64 = @func_4110() /* ty=(Tensor[(16, 16, 13), float64], Tensor[(12, 8, 11), float32]) */;
  %65 = %64.0;
  (%65,)
}

def @func_10160() -> (Tensor[(12, 8, 11), float64],) {
  %66 = @func_9161() /* ty=(Tensor[(12, 8, 11), float32], Tensor[(12, 8, 11), float64]) */;
  %67 = %66.1;
  (%67,)
}

def @func_9482() -> (Tensor[(352), float32],) {
  %68 = @func_2306() /* ty=(Tensor[(352), float32], Tensor[(352), float32]) */;
  %69 = %68.1;
  (%69,)
}

def @func_10296() -> Tensor[(12, 8, 11), float64] {
  %70 = @func_1971() /* ty=(Tensor[(12, 8, 11), float64], Tensor[(12, 8, 11), float32]) */;
  %70.0
}

def @func_6803() -> Tensor[(8, 11, 4), float32] {
  %71 = @func_4190() /* ty=(Tensor[(8, 11, 4), float32], Tensor[(12, 8, 11), float64], Tensor[(12, 8, 11), int64]) */;
  %71.0
}

def @func_10816() -> Tensor[(990), uint32] {
  %72 = @func_3605() /* ty=(Tensor[(12, 8, 11), float64], Tensor[(12, 8, 11), float64], Tensor[(990), uint32], Tensor[(990), uint32], Tensor[(12, 8, 11), float64], Tensor[(12, 8, 11), int64], Tensor[(12, 8, 11), float64], Tensor[(8, 11, 4), float64]) */;
  %72.2
}

def @func_11652() -> Tensor[(12, 8, 11), float64] {
  %73 = @func_10103() /* ty=(Tensor[(12, 8, 11), float64],) */;
  %73.0
}

def @func_2955() -> Tensor[(12, 8, 11), float64] {
  %74 = @func_1971() /* ty=(Tensor[(12, 8, 11), float64], Tensor[(12, 8, 11), float32]) */;
  %74.0
}

def @func_7851() -> (Tensor[(12, 8, 11), float32], Tensor[(12, 8, 11), float32]) {
  %75 = @func_6871() /* ty=(Tensor[(12, 8, 11), float32],) */;
  %76 = @func_4052() /* ty=(Tensor[(12, 8, 11), float32], Tensor[(12, 8, 11), float32]) */;
  %77 = %76.0;
  %78 = cast(%77, dtype="float32") /* ty=Tensor[(12, 8, 11), float32] */;
  %79 = %75.0;
  %80 = exp(%78) /* ty=Tensor[(12, 8, 11), float32] */;
  (%79, %80)
}

def @func_3796() -> (Tensor[(352), float32],) {
  %81 = @func_3234() /* ty=(Tensor[(12, 8, 11), int64], Tensor[(12, 8, 11), float32], Tensor[(352), float32]) */;
  %82 = %81.2;
  (%82,)
}

def @func_1625(%var_1613: Tensor[(990), uint32]) -> (Tensor[(12, 8, 11), float64], Tensor[(352), int8], Tensor[(352), float32], Tensor[(990), uint32]) {
  %83 = @func_1358() /* ty=(Tensor[(12, 8, 11), float64],) */;
  %84 = cast(meta[relay.Constant][4] /* ty=Tensor[(352), float32] */, dtype="float32") /* ty=Tensor[(352), float32] */;
  %85 = cast(%var_1613, dtype="uint32") /* ty=Tensor[(990), uint32] */;
  %86 = reshape(%84, newshape=[352]) /* ty=Tensor[(352), float32] */;
  %87 = reshape(%85, newshape=[990]) /* ty=Tensor[(990), uint32] */;
  %88 = @func_1580(%86, %87) /* ty=(Tensor[(352), int8], Tensor[(12, 8, 11), float64], Tensor[(990), uint32]) */;
  %89 = %83.0;
  %90 = %88.0;
  (%89, %90, meta[relay.Constant][4] /* ty=Tensor[(352), float32] */, %var_1613)
}

def @func_11455() -> (Tensor[(12, 8, 11), float64], Tensor[(352), uint64]) {
  %91 = @func_1971() /* ty=(Tensor[(12, 8, 11), float64], Tensor[(12, 8, 11), float32]) */;
  %92 = @func_8214() /* ty=(Tensor[(352), uint64], Tensor[(352), float32], Tensor[(12, 8, 11), float32]) */;
  %93 = %91.0;
  %94 = %92.0;
  (%93, %94)
}

def @func_1463() -> (Tensor[(12, 8, 11), float64], Tensor[(12, 8, 11), float64]) {
  %95 = @func_1358() /* ty=(Tensor[(12, 8, 11), float64],) */;
  %96 = @func_1358() /* ty=(Tensor[(12, 8, 11), float64],) */;
  %97 = %95.0;
  %98 = %96.0;
  (%97, %98)
}

def @func_6615() -> (Tensor[(352), float32], Tensor[(12, 8, 11), float32]) {
  %99 = @func_1559() /* ty=(Tensor[(12, 8, 11), uint16], Tensor[(8, 11, 4), float64], Tensor[(352), float32], Tensor[(8, 11, 4), bool]) */;
  %100 = %99.2;
  %101 = cast(%100, dtype="float32") /* ty=Tensor[(352), float32] */;
  %102 = reshape(%101, newshape=[8, 44]) /* ty=Tensor[(8, 44), float32] */;
  %103 = @func_1779(%102) /* ty=(Tensor[(12, 8, 11), float64], Tensor[(12, 8, 11), float32], Tensor[(8, 11, 4), bool], Tensor[(8, 44), float32]) */;
  %104 = %103.1;
  (%100, %104)
}

def @func_10483() -> (Tensor[(12, 8, 11), float64],) {
  %105 = @func_2955() /* ty=Tensor[(12, 8, 11), float64] */;
  (%105,)
}

def @func_11497() -> Tensor[(352), float32] {
  %106 = @func_10258() /* ty=(Tensor[(352), float32], Tensor[(12, 8, 11), float64]) */;
  %106.0
}

def @func_10579(%var_10572: Tensor[(8, 11, 4), float64]) -> Tensor[(8, 11, 4), bool] {
  %107 = @func_5577() /* ty=(Tensor[(8, 11, 4), float64],) */;
  %108 = %107.0;
  %109 = cast(%var_10572, dtype="bool") /* ty=Tensor[(8, 11, 4), bool] */;
  %110 = shape_of(%108, dtype="int32") /* ty=Tensor[(3), int32] */;
  %111 = cast(%108, dtype="bool") /* ty=Tensor[(8, 11, 4), bool] */;
  %112 = dyn.reshape(%109, %110, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  logical_and(%111, %112) /* ty=Tensor[(8, 11, 4), bool] */
}

def @func_13065() -> (Tensor[(16, 13, 15), bool], Tensor[(12, 8, 11), int8], Tensor[(1056), float64]) {
  %113 = cast(meta[relay.Constant][6] /* ty=Tensor[(16, 13, 15), int8] */, dtype="bool") /* ty=Tensor[(16, 13, 15), bool] */;
  %114 = shape_of(meta[relay.Constant][5] /* ty=Tensor[(16, 13, 15), int8] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %115 = cast(meta[relay.Constant][5] /* ty=Tensor[(16, 13, 15), int8] */, dtype="bool") /* ty=Tensor[(16, 13, 15), bool] */;
  %116 = dyn.reshape(%113, %114, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %117 = cast(meta[relay.Constant][7] /* ty=Tensor[(1056), float64] */, dtype="float64") /* ty=Tensor[(1056), float64] */;
  %118 = reshape(%117, newshape=[12, 8, 11]) /* ty=Tensor[(12, 8, 11), float64] */;
  %119 = less_equal(%115, %116) /* ty=Tensor[(16, 13, 15), bool] */;
  %120 = @func_7687(%118) /* ty=Tensor[(12, 8, 11), int8] */;
  (%119, %120, meta[relay.Constant][7] /* ty=Tensor[(1056), float64] */)
}

def @func_14825(%var_14797: Tensor[(3, 16, 8), float32], %var_14802: Tensor[(3, 16, 8), float32]) -> (Tensor[(3, 16, 8), bool], Tensor[(3, 16, 8), float64]) {
  %121 = cast(%var_14797, dtype="float32") /* ty=Tensor[(3, 16, 8), float32] */;
  %122 = acosh(%121) /* ty=Tensor[(3, 16, 8), float32] */;
  %123 = cast(%var_14802, dtype="bool") /* ty=Tensor[(3, 16, 8), bool] */;
  %124 = shape_of(%122, dtype="int32") /* ty=Tensor[(3), int32] */;
  %125 = cast(%122, dtype="bool") /* ty=Tensor[(3, 16, 8), bool] */;
  %126 = dyn.reshape(%123, %124, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %127 = cast(%var_14802, dtype="float64") /* ty=Tensor[(3, 16, 8), float64] */;
  %128 = not_equal(%125, %126) /* ty=Tensor[(3, 16, 8), bool] */;
  %129 = log10(%127) /* ty=Tensor[(3, 16, 8), float64] */;
  (%128, %129)
}

def @func_8522() -> (Tensor[(990), uint32], Tensor[(12, 8, 11), float64]) {
  %130 = @func_6054() /* ty=Tensor[(990), uint32] */;
  %131 = @func_6069() /* ty=Tensor[(12, 8, 11), float64] */;
  (%130, %131)
}

def @func_15219() -> (Tensor[(825), uint32], Tensor[(12, 8, 11), float64], Tensor[(12, 8, 11), float64], Tensor[(12, 8, 11), float64], Tensor[(12, 8, 11), float64], Tensor[(990), uint32], Tensor[(12, 8, 11), float64], Tensor[(352), bool]) {
  %132 = @func_8691() /* ty=(Tensor[(352), float32], Tensor[(11, 15, 5), uint32], Tensor[(825), uint32], Tensor[(16, 16, 13), float64]) */;
  %133 = @func_13437() /* ty=(Tensor[(12, 8, 11), float64], Tensor[(12, 8, 11), float64]) */;
  %134 = @func_2622() /* ty=(Tensor[(12, 8, 11), float64], Tensor[(12, 8, 11), float64]) */;
  %135 = @func_10483() /* ty=(Tensor[(12, 8, 11), float64],) */;
  %136 = @func_9903() /* ty=(Tensor[(990), uint32], Tensor[(990), uint32]) */;
  %137 = cast(meta[relay.Constant][8] /* ty=Tensor[(352), bool] */, dtype="bool") /* ty=Tensor[(352), bool] */;
  %138 = reshape(%137, newshape=[8, 11, 4]) /* ty=Tensor[(8, 11, 4), bool] */;
  %139 = @func_2492(%138) /* ty=(Tensor[(12, 8, 11), float64], Tensor[(12, 8, 11), float32], Tensor[(8, 11, 4), float32]) */;
  %140 = %132.2;
  %141 = %133.0;
  %142 = %134.1;
  %143 = %135.0;
  %144 = @func_2955() /* ty=Tensor[(12, 8, 11), float64] */;
  %145 = %136.1;
  %146 = %139.0;
  (%140, %141, %142, %143, %144, %145, %146, meta[relay.Constant][8] /* ty=Tensor[(352), bool] */)
}

def @func_9321() -> (Tensor[(8, 11, 4), float64], Tensor[(12, 8, 11), float64]) {
  %147 = @func_3508() /* ty=(Tensor[(8, 11, 4), float64],) */;
  %148 = @func_6483() /* ty=(Tensor[(12, 8, 11), float64], Tensor[(12, 8, 11), float64], Tensor[(12, 8, 11), float32]) */;
  %149 = %147.0;
  %150 = %148.1;
  (%149, %150)
}

def @func_14600() -> (Tensor[(12, 8, 11), float64], Tensor[(352), int32]) {
  %151 = @func_14032() /* ty=(Tensor[(12, 8, 11), float64], Tensor[(352), float32]) */;
  %152 = %151.1;
  %153 = @func_6697() /* ty=(Tensor[(12, 8, 11), float64], Tensor[(352), int8], Tensor[(352), float32]) */;
  %154 = %153.2;
  %155 = cast(%154, dtype="int32") /* ty=Tensor[(352), int32] */;
  %156 = shape_of(%152, dtype="int32") /* ty=Tensor[(1), int32] */;
  %157 = cast(%152, dtype="int32") /* ty=Tensor[(352), int32] */;
  %158 = dyn.reshape(%155, %156, newshape=[]) /* ty=Tensor[(?), int32] */;
  %159 = @func_5533() /* ty=Tensor[(12, 8, 11), float64] */;
  %160 = logical_xor(%157, %158) /* ty=Tensor[(352), int32] */;
  (%159, %160)
}

def @func_14880() -> (Tensor[(1056), float64],) {
  %161 = @func_13065() /* ty=(Tensor[(16, 13, 15), bool], Tensor[(12, 8, 11), int8], Tensor[(1056), float64]) */;
  %162 = %161.2;
  (%162,)
}

def @func_15093() -> (Tensor[(12, 8, 11), float64], Tensor[(12, 8, 11), float32]) {
  %163 = @func_2380() /* ty=Tensor[(12, 8, 11), float64] */;
  %164 = @func_12773() /* ty=Tensor[(12, 8, 11), float32] */;
  (%163, %164)
}

def @func_4766() -> Tensor[(16, 16, 13), float64] {
  %165 = @func_4110() /* ty=(Tensor[(16, 16, 13), float64], Tensor[(12, 8, 11), float32]) */;
  %165.0
}

def @func_9161() -> (Tensor[(12, 8, 11), float32], Tensor[(12, 8, 11), float64]) {
  %166 = @func_9062() /* ty=(Tensor[(12, 8, 11), float32],) */;
  %167 = @func_7160() /* ty=(Tensor[(12, 8, 11), float64], Tensor[(8, 11, 4), float64], Tensor[(5, 198), uint32], Tensor[(12, 8, 11), float64]) */;
  %168 = %166.0;
  %169 = %167.0;
  (%168, %169)
}

def @func_11011() -> (Tensor[(12, 8, 11), float64], Tensor[(12, 8, 11), float64], Tensor[(8, 11, 4), float64]) {
  %170 = @func_2774() /* ty=(Tensor[(12, 8, 11), float64],) */;
  %171 = @func_10156() /* ty=(Tensor[(12, 8, 11), float64], Tensor[(12, 8, 11), float64]) */;
  %172 = @func_1559() /* ty=(Tensor[(12, 8, 11), uint16], Tensor[(8, 11, 4), float64], Tensor[(352), float32], Tensor[(8, 11, 4), bool]) */;
  %173 = %170.0;
  %174 = %171.0;
  %175 = %172.1;
  (%173, %174, %175)
}

def @func_4084() -> (Tensor[(12, 8, 11), float32],) {
  %176 = @func_2205() /* ty=(Tensor[(12, 8, 11), float32], Tensor[(12, 8, 11), float64], Tensor[(12, 8, 11), float64]) */;
  %177 = %176.0;
  (%177,)
}

def @func_10156() -> (Tensor[(12, 8, 11), float64], Tensor[(12, 8, 11), float64]) {
  %178 = @func_10103() /* ty=(Tensor[(12, 8, 11), float64],) */;
  %179 = @func_1117() /* ty=Tensor[(12, 8, 11), float64] */;
  %180 = %178.0;
  (%179, %180)
}

def @func_12134() -> (Tensor[(8, 11, 4), float64],) {
  %181 = @func_1559() /* ty=(Tensor[(12, 8, 11), uint16], Tensor[(8, 11, 4), float64], Tensor[(352), float32], Tensor[(8, 11, 4), bool]) */;
  %182 = %181.1;
  %183 = cast(%182, dtype="float64") /* ty=Tensor[(8, 11, 4), float64] */;
  %184 = erf(%183) /* ty=Tensor[(8, 11, 4), float64] */;
  (%184,)
}

def @func_9620() -> Tensor[(12, 8, 11), float64] {
  %185 = @func_2045() /* ty=(Tensor[(12, 8, 11), float64], Tensor[(12, 8, 11), float64]) */;
  %185.1
}

def @func_262(%var_189: float32, %var_190: Tensor[(8, 11, 4), float32]) -> (Tensor[(8, 11, 4), float32],) {
  %186 = cast(%var_189, dtype="float32") /* ty=float32 */;
  %187 = cast(%var_190, dtype="float32") /* ty=Tensor[(8, 11, 4), float32] */;
  %188 = mod(%186, %187) /* ty=Tensor[(8, 11, 4), float32] */;
  (%188,)
}

def @func_1201(%var_1143: Tensor[(352), float32], %var_1148: Tensor[(8, 11, 4), float32]) -> (Tensor[(12, 8, 11), float64], Tensor[(12, 8, 11), float64], Tensor[(8, 11, 4), float64], Tensor[(8, 11, 4), uint8], Tensor[(8, 11, 4), bool], Tensor[(8, 11, 4), float32]) {
  %189 = cast(-0.544357f /* ty=float32 */, dtype="float32") /* ty=float32 */;
  %190 = cast(%var_1143, dtype="float32") /* ty=Tensor[(352), float32] */;
  %191 = reshape(%189, newshape=[]) /* ty=float32 */;
  %192 = reshape(%190, newshape=[8, 11, 4]) /* ty=Tensor[(8, 11, 4), float32] */;
  %193 = @func_262(%191, %192) /* ty=(Tensor[(8, 11, 4), float32],) */;
  %194 = %193.0;
  %195 = cast(%var_1148, dtype="float64") /* ty=Tensor[(8, 11, 4), float64] */;
  %196 = shape_of(%194, dtype="int32") /* ty=Tensor[(3), int32] */;
  %197 = cast(%194, dtype="float64") /* ty=Tensor[(8, 11, 4), float64] */;
  %198 = dyn.reshape(%195, %196, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %199 = cast(-0.544357f /* ty=float32 */, dtype="float32") /* ty=float32 */;
  %200 = cast(%var_1143, dtype="float32") /* ty=Tensor[(352), float32] */;
  %201 = reshape(%199, newshape=[]) /* ty=float32 */;
  %202 = reshape(%200, newshape=[8, 11, 4]) /* ty=Tensor[(8, 11, 4), float32] */;
  %203 = @func_262(%201, %202) /* ty=(Tensor[(8, 11, 4), float32],) */;
  %204 = %203.0;
  %205 = cast(-0.544357f /* ty=float32 */, dtype="uint8") /* ty=uint8 */;
  %206 = cast(%204, dtype="uint8") /* ty=Tensor[(8, 11, 4), uint8] */;
  %207 = cast(%var_1143, dtype="bool") /* ty=Tensor[(352), bool] */;
  %208 = shape_of(%194, dtype="int32") /* ty=Tensor[(3), int32] */;
  %209 = cast(%194, dtype="bool") /* ty=Tensor[(8, 11, 4), bool] */;
  %210 = dyn.reshape(%207, %208, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %211 = cast(-0.544357f /* ty=float32 */, dtype="float32") /* ty=float32 */;
  %212 = cast(%204, dtype="float32") /* ty=Tensor[(8, 11, 4), float32] */;
  %213 = reshape(%211, newshape=[]) /* ty=float32 */;
  %214 = reshape(%212, newshape=[8, 11, 4]) /* ty=Tensor[(8, 11, 4), float32] */;
  %215 = @func_262(%213, %214) /* ty=(Tensor[(8, 11, 4), float32],) */;
  %216 = @func_1117() /* ty=Tensor[(12, 8, 11), float64] */;
  %217 = @func_1117() /* ty=Tensor[(12, 8, 11), float64] */;
  %218 = minimum(%197, %198) /* ty=Tensor[(8, 11, 4), float64] */;
  %219 = bitwise_and(%205, %206) /* ty=Tensor[(8, 11, 4), uint8] */;
  %220 = less(%209, %210) /* ty=Tensor[(8, 11, 4), bool] */;
  %221 = %215.0;
  (%216, %217, %218, %219, %220, %221)
}

def @func_1741() -> (Tensor[(12, 8, 11), float32],) {
  %222 = @func_1400() /* ty=Tensor[(12, 8, 11), float32] */;
  (%222,)
}

def @func_2973() -> (Tensor[(12, 8, 11), float64],) {
  %223 = @func_2380() /* ty=Tensor[(12, 8, 11), float64] */;
  (%223,)
}

def @func_12358() -> (Tensor[(12, 8, 11), float32], Tensor[(8, 11, 4), float32]) {
  %224 = @func_5577() /* ty=(Tensor[(8, 11, 4), float64],) */;
  %225 = %224.0;
  %226 = cast(meta[relay.Constant][9] /* ty=Tensor[(8, 11, 4), float64] */, dtype="float32") /* ty=Tensor[(8, 11, 4), float32] */;
  %227 = shape_of(%225, dtype="int32") /* ty=Tensor[(3), int32] */;
  %228 = cast(%225, dtype="float32") /* ty=Tensor[(8, 11, 4), float32] */;
  %229 = dyn.reshape(%226, %227, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %230 = @func_4304() /* ty=Tensor[(12, 8, 11), float32] */;
  %231 = floor_mod(%228, %229) /* ty=Tensor[(8, 11, 4), float32] */;
  (%230, %231)
}

def @func_9781() -> Tensor[(12, 8, 11), float32] {
  %232 = @func_1741() /* ty=(Tensor[(12, 8, 11), float32],) */;
  %232.0
}

def @func_3735() -> Tensor[(12, 8, 11), float32] {
  %233 = @func_2062() /* ty=(Tensor[(12, 8, 11), float64],) */;
  %234 = %233.0;
  %235 = cast(%234, dtype="float32") /* ty=Tensor[(12, 8, 11), float32] */;
  asinh(%235) /* ty=Tensor[(12, 8, 11), float32] */
}

def @func_8870(%var_8835: Tensor[(5, 15, 1), float32], %var_8854: Tensor[(5, 15, 7), int32]) -> (Tensor[(5, 15, 7), int32],) {
  %236 = cast(%var_8835, dtype="float32") /* ty=Tensor[(5, 15, 1), float32] */;
  %237 = sigmoid(%236) /* ty=Tensor[(5, 15, 1), float32] */;
  %238 = cast(%var_8835, dtype="int32") /* ty=Tensor[(5, 15, 1), int32] */;
  %239 = shape_of(%237, dtype="int32") /* ty=Tensor[(3), int32] */;
  %240 = cast(%237, dtype="int32") /* ty=Tensor[(5, 15, 1), int32] */;
  %241 = dyn.reshape(%238, %239, newshape=[]) /* ty=Tensor[(?, ?, ?), int32] */;
  %242 = multiply(%240, %241) /* ty=Tensor[(5, 15, ?), int32] */;
  %243 = cast(%242, dtype="int32") /* ty=Tensor[(5, 15, ?), int32] */;
  %244 = cast(%var_8854, dtype="int32") /* ty=Tensor[(5, 15, 7), int32] */;
  %245 = multiply(%243, %244) /* ty=Tensor[(5, 15, 7), int32] */;
  (%245,)
}

def @func_7160() -> (Tensor[(12, 8, 11), float64], Tensor[(8, 11, 4), float64], Tensor[(5, 198), uint32], Tensor[(12, 8, 11), float64]) {
  %246 = @func_3508() /* ty=(Tensor[(8, 11, 4), float64],) */;
  %247 = %246.0;
  %248 = cast(%247, dtype="float32") /* ty=Tensor[(8, 11, 4), float32] */;
  %249 = cast(%247, dtype="float32") /* ty=Tensor[(8, 11, 4), float32] */;
  %250 = reshape(%248, newshape=[352]) /* ty=Tensor[(352), float32] */;
  %251 = reshape(%249, newshape=[352]) /* ty=Tensor[(352), float32] */;
  %252 = @func_6224(%250, %251) /* ty=(Tensor[(12, 8, 11), float32], Tensor[(990), uint32], Tensor[(5, 198), uint32], Tensor[(12, 8, 11), float64], Tensor[(12, 8, 11), float64], Tensor[(12, 8, 11), float32], Tensor[(352), float64], Tensor[(12, 8, 11), float64], Tensor[(12, 8, 11), float64], Tensor[(990), uint32], Tensor[(352), int8]) */;
  %253 = %252.2;
  %254 = cast(%253, dtype="uint32") /* ty=Tensor[(5, 198), uint32] */;
  %255 = reshape(%254, newshape=[330, 3]) /* ty=Tensor[(330, 3), uint32] */;
  %256 = @func_5361(%255) /* ty=(Tensor[(16, 16, 13), float64], Tensor[(12, 8, 11), float64], Tensor[(330, 3), uint32]) */;
  %257 = @func_2380() /* ty=Tensor[(12, 8, 11), float64] */;
  %258 = %256.1;
  (%257, %247, %253, %258)
}

def @func_4984(%var_4982: Tensor[(990), uint32]) -> (Tensor[(12, 8, 11), float64], Tensor[(12, 8, 11), float64], Tensor[(990), uint32]) {
  %259 = @func_1235() /* ty=(Tensor[(12, 8, 11), float64], Tensor[(12, 8, 11), float32], Tensor[(12, 8, 11), float32]) */;
  %260 = cast(%var_4982, dtype="uint32") /* ty=Tensor[(990), uint32] */;
  %261 = reshape(%260, newshape=[15, 6, 11]) /* ty=Tensor[(15, 6, 11), uint32] */;
  %262 = @func_1342(%261) /* ty=(Tensor[(15, 6, 11), uint32], Tensor[(12, 8, 11), float64]) */;
  %263 = %259.0;
  %264 = %262.1;
  (%263, %264, %var_4982)
}

def @func_2756() -> Tensor[(12, 8, 11), float64] {
  %265 = @func_1358() /* ty=(Tensor[(12, 8, 11), float64],) */;
  %265.0
}

def @func_13115(%var_13087: Tensor[(208), float64]) -> (Tensor[(12, 8, 11), float64], Tensor[(52, 4), float64], Tensor[(208), float64]) {
  %266 = @func_8453() /* ty=(Tensor[(12, 8, 11), float64], Tensor[(8, 11, 4), float32]) */;
  %267 = cast(%var_13087, dtype="float64") /* ty=Tensor[(208), float64] */;
  %268 = reshape(%267, newshape=[52, 4]) /* ty=Tensor[(52, 4), float64] */;
  %269 = @func_7508(%268) /* ty=(Tensor[(990), uint32], Tensor[(8, 11, 4), float64], Tensor[(8, 2, 13), bool], Tensor[(52, 4), float64]) */;
  %270 = %266.0;
  %271 = %269.3;
  (%270, %271, %var_13087)
}

def @func_6787() -> Tensor[(12, 8, 11), float32] {
  @func_3735() /* ty=Tensor[(12, 8, 11), float32] */
}

def @func_5981() -> (Tensor[(12, 8, 11), float64],) {
  %272 = @func_1358() /* ty=(Tensor[(12, 8, 11), float64],) */;
  %273 = %272.0;
  (%273,)
}

def @func_5563(%var_5536: Tensor[(8, 2, 13), float64], %var_5537: Tensor[(8, 2, 13), float64]) -> (Tensor[(8, 2, 13), bool], Tensor[(12, 7, 6), float32]) {
  %274 = cast(%var_5537, dtype="bool") /* ty=Tensor[(8, 2, 13), bool] */;
  %275 = shape_of(%var_5536, dtype="int32") /* ty=Tensor[(3), int32] */;
  %276 = cast(%var_5536, dtype="bool") /* ty=Tensor[(8, 2, 13), bool] */;
  %277 = dyn.reshape(%274, %275, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %278 = @func_2121() /* ty=(Tensor[(12, 7, 6), float32], Tensor[(15, 6, 11), uint32], Tensor[(990), uint32]) */;
  %279 = less_equal(%276, %277) /* ty=Tensor[(8, 2, 13), bool] */;
  %280 = %278.0;
  (%279, %280)
}

def @func_14463() -> Tensor[(352), float32] {
  %281 = @func_12417() /* ty=(Tensor[(12, 8, 11), float64], Tensor[(15, 6, 11), uint32], Tensor[(352), float32]) */;
  %281.2
}

def @func_13437() -> (Tensor[(12, 8, 11), float64], Tensor[(12, 8, 11), float64]) {
  %282 = @func_9858() /* ty=(Tensor[(12, 8, 11), float64], Tensor[(8, 11, 4), float64]) */;
  %283 = @func_2973() /* ty=(Tensor[(12, 8, 11), float64],) */;
  %284 = %282.0;
  %285 = %283.0;
  (%284, %285)
}

def @func_8376() -> (Tensor[(8, 11, 4), uint64],) {
  %286 = @func_3508() /* ty=(Tensor[(8, 11, 4), float64],) */;
  %287 = %286.0;
  %288 = cast(meta[relay.Constant][10] /* ty=Tensor[(8, 11, 4), float64] */, dtype="uint64") /* ty=Tensor[(8, 11, 4), uint64] */;
  %289 = shape_of(%287, dtype="int32") /* ty=Tensor[(3), int32] */;
  %290 = cast(%287, dtype="uint64") /* ty=Tensor[(8, 11, 4), uint64] */;
  %291 = dyn.reshape(%288, %289, newshape=[]) /* ty=Tensor[(?, ?, ?), uint64] */;
  %292 = add(%290, %291) /* ty=Tensor[(8, 11, 4), uint64] */;
  (%292,)
}

def @func_6483() -> (Tensor[(12, 8, 11), float64], Tensor[(12, 8, 11), float64], Tensor[(12, 8, 11), float32]) {
  %293 = @func_3489() /* ty=(Tensor[(12, 8, 11), float32], Tensor[(12, 8, 11), float64], Tensor[(12, 8, 11), float64], Tensor[(12, 8, 11), float32], Tensor[(990), uint32]) */;
  %294 = @func_5050() /* ty=(Tensor[(12, 8, 11), float32], Tensor[(12, 8, 11), float32]) */;
  %295 = @func_1117() /* ty=Tensor[(12, 8, 11), float64] */;
  %296 = %293.2;
  %297 = %294.1;
  (%295, %296, %297)
}

def @func_14155() -> (Tensor[(990), uint32], Tensor[(12, 8, 11), float64], Tensor[(990), uint32], Tensor[(352), float32]) {
  %298 = @func_2121() /* ty=(Tensor[(12, 7, 6), float32], Tensor[(15, 6, 11), uint32], Tensor[(990), uint32]) */;
  %299 = @func_5140() /* ty=(Tensor[(12, 8, 11), float32], Tensor[(12, 8, 11), float64]) */;
  %300 = @func_7310() /* ty=(Tensor[(12, 8, 11), float64], Tensor[(352), float32], Tensor[(990), uint32]) */;
  %301 = %298.2;
  %302 = %299.1;
  %303 = @func_6054() /* ty=Tensor[(990), uint32] */;
  %304 = %300.1;
  (%301, %302, %303, %304)
}

def @func_10517() -> (Tensor[(8, 11, 4), float64], Tensor[(12, 8, 11), float32]) {
  %305 = @func_2107() /* ty=(Tensor[(8, 11, 4), float64], Tensor[(12, 8, 11), float32]) */;
  %306 = @func_5050() /* ty=(Tensor[(12, 8, 11), float32], Tensor[(12, 8, 11), float32]) */;
  %307 = %305.0;
  %308 = %306.0;
  (%307, %308)
}

def @func_2062() -> (Tensor[(12, 8, 11), float64],) {
  %309 = @func_1235() /* ty=(Tensor[(12, 8, 11), float64], Tensor[(12, 8, 11), float32], Tensor[(12, 8, 11), float32]) */;
  %310 = %309.0;
  (%310,)
}

def @func_8330() -> (Tensor[(16, 16, 13), float64],) {
  %311 = @func_4766() /* ty=Tensor[(16, 16, 13), float64] */;
  (%311,)
}

def @func_14645() -> Tensor[(352), float32] {
  %312 = @func_9482() /* ty=(Tensor[(352), float32],) */;
  %312.0
}

def @func_15359(%var_15342: Tensor[(8, 5, 13), float32]) -> Tensor[(8, 5, 13), float32] {
  %313 = cast(%var_15342, dtype="float32") /* ty=Tensor[(8, 5, 13), float32] */;
  cosh(%313) /* ty=Tensor[(8, 5, 13), float32] */
}

def @func_15372() -> Tensor[(12, 8, 11), float64] {
  %314 = @func_2973() /* ty=(Tensor[(12, 8, 11), float64],) */;
  %314.0
}

def @func_1342(%var_1309: Tensor[(15, 6, 11), uint32]) -> (Tensor[(15, 6, 11), uint32], Tensor[(12, 8, 11), float64]) {
  %315 = cast(meta[relay.Constant][11] /* ty=Tensor[(15, 6, 11), uint32] */, dtype="uint32") /* ty=Tensor[(15, 6, 11), uint32] */;
  %316 = shape_of(%var_1309, dtype="int32") /* ty=Tensor[(3), int32] */;
  %317 = cast(%var_1309, dtype="uint32") /* ty=Tensor[(15, 6, 11), uint32] */;
  %318 = dyn.reshape(%315, %316, newshape=[]) /* ty=Tensor[(?, ?, ?), uint32] */;
  %319 = add(%317, %318) /* ty=Tensor[(15, 6, 11), uint32] */;
  %320 = @func_1117() /* ty=Tensor[(12, 8, 11), float64] */;
  (%319, %320)
}

def @func_6996() -> (Tensor[(8, 11, 4), float64], Tensor[(352), float32]) {
  %321 = @func_5701() /* ty=(Tensor[(12, 8, 11), float32], Tensor[(8, 11, 4), float64]) */;
  %322 = @func_3234() /* ty=(Tensor[(12, 8, 11), int64], Tensor[(12, 8, 11), float32], Tensor[(352), float32]) */;
  %323 = %321.1;
  %324 = %322.2;
  (%323, %324)
}

def @func_3508() -> (Tensor[(8, 11, 4), float64],) {
  %325 = @func_2107() /* ty=(Tensor[(8, 11, 4), float64], Tensor[(12, 8, 11), float32]) */;
  %326 = %325.0;
  (%326,)
}

def @func_10678() -> (Tensor[(352), bool],) {
  %327 = @func_10317() /* ty=(Tensor[(352), bool],) */;
  %328 = %327.0;
  (%328,)
}

def @func_9038() -> Tensor[(12, 8, 11), float64] {
  %329 = @func_7437() /* ty=(Tensor[(12, 8, 11), float64],) */;
  %329.0
}

def @func_11510() -> Tensor[(8, 11, 4), float64] {
  %330 = @func_11011() /* ty=(Tensor[(12, 8, 11), float64], Tensor[(12, 8, 11), float64], Tensor[(8, 11, 4), float64]) */;
  %330.2
}

def @func_5361(%var_5359: Tensor[(330, 3), uint32]) -> (Tensor[(16, 16, 13), float64], Tensor[(12, 8, 11), float64], Tensor[(330, 3), uint32]) {
  %331 = @func_4110() /* ty=(Tensor[(16, 16, 13), float64], Tensor[(12, 8, 11), float32]) */;
  %332 = cast(%var_5359, dtype="uint32") /* ty=Tensor[(330, 3), uint32] */;
  %333 = reshape(%332, newshape=[15, 6, 11]) /* ty=Tensor[(15, 6, 11), uint32] */;
  %334 = @func_1342(%333) /* ty=(Tensor[(15, 6, 11), uint32], Tensor[(12, 8, 11), float64]) */;
  %335 = %331.0;
  %336 = %334.1;
  (%335, %336, %var_5359)
}

def @func_10258() -> (Tensor[(352), float32], Tensor[(12, 8, 11), float64]) {
  %337 = @func_2306() /* ty=(Tensor[(352), float32], Tensor[(352), float32]) */;
  %338 = @func_2574() /* ty=(Tensor[(352), float32], Tensor[(12, 8, 11), float64], Tensor[(990), uint32], Tensor[(12, 8, 11), float64], Tensor[(12, 8, 11), int64]) */;
  %339 = %337.0;
  %340 = %338.3;
  (%339, %340)
}

def @func_4619(%var_4571: Tensor[(825), uint32]) -> (Tensor[(12, 8, 11), float64], Tensor[(12, 8, 11), float64], Tensor[(15, 6, 11), uint32], Tensor[(5, 198), uint32], Tensor[(825), bool], Tensor[(12, 8, 11), float64], Tensor[(8, 11, 4), float32], Tensor[(12, 8, 11), float64], Tensor[(8, 11, 4), float32], Tensor[(12, 8, 11), int64]) {
  %341 = @func_1463() /* ty=(Tensor[(12, 8, 11), float64], Tensor[(12, 8, 11), float64]) */;
  %342 = cast(meta[relay.Constant][12] /* ty=Tensor[(825), uint32] */, dtype="uint32") /* ty=Tensor[(825), uint32] */;
  %343 = reshape(%342, newshape=[275, 3]) /* ty=Tensor[(275, 3), uint32] */;
  %344 = @func_3929(%343) /* ty=(Tensor[(12, 8, 11), float64], Tensor[(12, 8, 11), float64], Tensor[(12, 8, 11), float64], Tensor[(12, 8, 11), float64], Tensor[(12, 8, 11), float64], Tensor[(11, 15, 5), uint32], Tensor[(275, 3), uint32]) */;
  %345 = cast(meta[relay.Constant][13] /* ty=Tensor[(5, 198), uint32] */, dtype="uint32") /* ty=Tensor[(5, 198), uint32] */;
  %346 = reshape(%345, newshape=[15, 6, 11]) /* ty=Tensor[(15, 6, 11), uint32] */;
  %347 = @func_1342(%346) /* ty=(Tensor[(15, 6, 11), uint32], Tensor[(12, 8, 11), float64]) */;
  %348 = cast(%var_4571, dtype="bool") /* ty=Tensor[(825), bool] */;
  %349 = shape_of(meta[relay.Constant][12] /* ty=Tensor[(825), uint32] */, dtype="int32") /* ty=Tensor[(1), int32] */;
  %350 = cast(meta[relay.Constant][12] /* ty=Tensor[(825), uint32] */, dtype="bool") /* ty=Tensor[(825), bool] */;
  %351 = dyn.reshape(%348, %349, newshape=[]) /* ty=Tensor[(?), bool] */;
  %352 = @func_4328() /* ty=(Tensor[(12, 8, 11), float64],) */;
  %353 = @func_2107() /* ty=(Tensor[(8, 11, 4), float64], Tensor[(12, 8, 11), float32]) */;
  %354 = %353.0;
  %355 = cast(%354, dtype="float32") /* ty=Tensor[(8, 11, 4), float32] */;
  %356 = @func_2774() /* ty=(Tensor[(12, 8, 11), float64],) */;
  %357 = @func_4190() /* ty=(Tensor[(8, 11, 4), float32], Tensor[(12, 8, 11), float64], Tensor[(12, 8, 11), int64]) */;
  %358 = @func_2238() /* ty=(Tensor[(12, 8, 11), int64],) */;
  %359 = %341.0;
  %360 = %344.0;
  %361 = %347.0;
  %362 = logical_or(%350, %351) /* ty=Tensor[(825), bool] */;
  %363 = %352.0;
  %364 = atanh(%355) /* ty=Tensor[(8, 11, 4), float32] */;
  %365 = %356.0;
  %366 = %357.0;
  %367 = %358.0;
  (%359, %360, %361, meta[relay.Constant][13] /* ty=Tensor[(5, 198), uint32] */, %362, %363, %364, %365, %366, %367)
}

def @func_8539() -> (Tensor[(990), float64],) {
  %368 = @func_8293() /* ty=(Tensor[(990), uint32],) */;
  %369 = %368.0;
  %370 = cast(%369, dtype="float64") /* ty=Tensor[(990), float64] */;
  %371 = acos(%370) /* ty=Tensor[(990), float64] */;
  (%371,)
}

def @func_4932() -> (Tensor[(12, 8, 11), float64], Tensor[(12, 8, 11), float32], Tensor[(12, 8, 11), int64]) {
  %372 = @func_4190() /* ty=(Tensor[(8, 11, 4), float32], Tensor[(12, 8, 11), float64], Tensor[(12, 8, 11), int64]) */;
  %373 = @func_2238() /* ty=(Tensor[(12, 8, 11), int64],) */;
  %374 = %372.1;
  %375 = @func_3644() /* ty=Tensor[(12, 8, 11), float32] */;
  %376 = %373.0;
  (%374, %375, %376)
}

def @func_2774() -> (Tensor[(12, 8, 11), float64],) {
  %377 = @func_2622() /* ty=(Tensor[(12, 8, 11), float64], Tensor[(12, 8, 11), float64]) */;
  %378 = %377.1;
  (%378,)
}

def @func_6343() -> (Tensor[(12, 8, 11), float64], Tensor[(12, 8, 11), float64], Tensor[(12, 8, 11), float64]) {
  %379 = @func_4637() /* ty=(Tensor[(12, 8, 11), float64], Tensor[(12, 8, 11), float32]) */;
  %380 = @func_4932() /* ty=(Tensor[(12, 8, 11), float64], Tensor[(12, 8, 11), float32], Tensor[(12, 8, 11), int64]) */;
  %381 = %379.0;
  %382 = @func_5533() /* ty=Tensor[(12, 8, 11), float64] */;
  %383 = %380.0;
  (%381, %382, %383)
}

def @func_6748() -> (Tensor[(15, 6, 11), float64], Tensor[(15, 6, 11), float64], Tensor[(352), float32], Tensor[(12, 8, 11), int64]) {
  %384 = @func_5221() /* ty=(Tensor[(15, 6, 11), uint32],) */;
  %385 = %384.0;
  %386 = cast(%385, dtype="float64") /* ty=Tensor[(15, 6, 11), float64] */;
  %387 = cast(%385, dtype="float64") /* ty=Tensor[(15, 6, 11), float64] */;
  %388 = @func_3234() /* ty=(Tensor[(12, 8, 11), int64], Tensor[(12, 8, 11), float32], Tensor[(352), float32]) */;
  %389 = sin(%386) /* ty=Tensor[(15, 6, 11), float64] */;
  %390 = sinh(%387) /* ty=Tensor[(15, 6, 11), float64] */;
  %391 = %388.2;
  %392 = @func_3349() /* ty=Tensor[(12, 8, 11), int64] */;
  (%389, %390, %391, %392)
}

def @func_8900() -> (Tensor[(990), uint32],) {
  %393 = @func_2737() /* ty=(Tensor[(990), uint32], Tensor[(12, 8, 11), float64], Tensor[(12, 8, 11), float64], Tensor[(12, 8, 11), float64], Tensor[(12, 8, 11), int64]) */;
  %394 = %393.0;
  (%394,)
}

def @func_5140() -> (Tensor[(12, 8, 11), float32], Tensor[(12, 8, 11), float64]) {
  %395 = @func_3234() /* ty=(Tensor[(12, 8, 11), int64], Tensor[(12, 8, 11), float32], Tensor[(352), float32]) */;
  %396 = %395.1;
  %397 = @func_2955() /* ty=Tensor[(12, 8, 11), float64] */;
  (%396, %397)
}

def @func_2121() -> (Tensor[(12, 7, 6), float32], Tensor[(15, 6, 11), uint32], Tensor[(990), uint32]) {
  %398 = cast(meta[relay.Constant][14] /* ty=Tensor[(12, 7, 6), float32] */, dtype="float32") /* ty=Tensor[(12, 7, 6), float32] */;
  %399 = cast(meta[relay.Constant][15] /* ty=Tensor[(990), uint32] */, dtype="uint32") /* ty=Tensor[(990), uint32] */;
  %400 = reshape(%399, newshape=[15, 6, 11]) /* ty=Tensor[(15, 6, 11), uint32] */;
  %401 = @func_1342(%400) /* ty=(Tensor[(15, 6, 11), uint32], Tensor[(12, 8, 11), float64]) */;
  %402 = sigmoid(%398) /* ty=Tensor[(12, 7, 6), float32] */;
  %403 = %401.0;
  (%402, %403, meta[relay.Constant][15] /* ty=Tensor[(990), uint32] */)
}

def @func_10031(%var_9983: Tensor[(1056), float64], %var_10003: Tensor[(352), float32]) -> (Tensor[(1056), float64], Tensor[(15, 6, 11), int16], Tensor[(8, 11, 4), float32], float32, Tensor[(352), float32], Tensor[(352), int8], Tensor[(15, 6, 11), uint64]) {
  %404 = cast(%var_9983, dtype="float64") /* ty=Tensor[(1056), float64] */;
  %405 = reshape(%404, newshape=[12, 8, 11]) /* ty=Tensor[(12, 8, 11), float64] */;
  %406 = @func_6966(%405) /* ty=(Tensor[(12, 8, 11), uint32], Tensor[(15, 6, 11), uint32]) */;
  %407 = %406.1;
  %408 = cast(%407, dtype="float32") /* ty=Tensor[(15, 6, 11), float32] */;
  %409 = cos(%408) /* ty=Tensor[(15, 6, 11), float32] */;
  %410 = @func_2121() /* ty=(Tensor[(12, 7, 6), float32], Tensor[(15, 6, 11), uint32], Tensor[(990), uint32]) */;
  %411 = %410.1;
  %412 = cast(%411, dtype="int16") /* ty=Tensor[(15, 6, 11), int16] */;
  %413 = shape_of(%409, dtype="int32") /* ty=Tensor[(3), int32] */;
  %414 = cast(%409, dtype="int16") /* ty=Tensor[(15, 6, 11), int16] */;
  %415 = dyn.reshape(%412, %413, newshape=[]) /* ty=Tensor[(?, ?, ?), int16] */;
  %416 = cast(8.58734f /* ty=float32 */, dtype="float32") /* ty=float32 */;
  %417 = cast(%var_10003, dtype="float32") /* ty=Tensor[(352), float32] */;
  %418 = reshape(%416, newshape=[]) /* ty=float32 */;
  %419 = reshape(%417, newshape=[8, 11, 4]) /* ty=Tensor[(8, 11, 4), float32] */;
  %420 = @func_262(%418, %419) /* ty=(Tensor[(8, 11, 4), float32],) */;
  %421 = @func_6697() /* ty=(Tensor[(12, 8, 11), float64], Tensor[(352), int8], Tensor[(352), float32]) */;
  %422 = cast(%411, dtype="uint64") /* ty=Tensor[(15, 6, 11), uint64] */;
  %423 = shape_of(%409, dtype="int32") /* ty=Tensor[(3), int32] */;
  %424 = cast(%409, dtype="uint64") /* ty=Tensor[(15, 6, 11), uint64] */;
  %425 = dyn.reshape(%422, %423, newshape=[]) /* ty=Tensor[(?, ?, ?), uint64] */;
  %426 = minimum(%414, %415) /* ty=Tensor[(15, 6, 11), int16] */;
  %427 = %420.0;
  %428 = %421.1;
  %429 = bitwise_or(%424, %425) /* ty=Tensor[(15, 6, 11), uint64] */;
  (%var_9983, %426, %427, 8.58734f /* ty=float32 */, %var_10003, %428, %429)
}

def @func_12568() -> (Tensor[(12, 8, 11), float64],) {
  %430 = @func_7600() /* ty=(Tensor[(12, 8, 11), float64],) */;
  %431 = %430.0;
  (%431,)
}

def @func_14385() -> (Tensor[(8, 11, 4), float32],) {
  %432 = @func_6803() /* ty=Tensor[(8, 11, 4), float32] */;
  (%432,)
}

def @func_13837() -> Tensor[(12, 8, 11), float32] {
  %433 = @func_13198() /* ty=(Tensor[(12, 8, 11), float64], Tensor[(12, 8, 11), float32], Tensor[(12, 8, 11), float64], Tensor[(12, 8, 11), float64], Tensor[(8, 11, 4), uint32]) */;
  %433.1
}

def @func_5577() -> (Tensor[(8, 11, 4), float64],) {
  %434 = @func_2107() /* ty=(Tensor[(8, 11, 4), float64], Tensor[(12, 8, 11), float32]) */;
  %435 = %434.0;
  (%435,)
}

def @func_7310() -> (Tensor[(12, 8, 11), float64], Tensor[(352), float32], Tensor[(990), uint32]) {
  %436 = @func_4932() /* ty=(Tensor[(12, 8, 11), float64], Tensor[(12, 8, 11), float32], Tensor[(12, 8, 11), int64]) */;
  %437 = @func_6996() /* ty=(Tensor[(8, 11, 4), float64], Tensor[(352), float32]) */;
  %438 = %436.0;
  %439 = %437.1;
  %440 = @func_5318() /* ty=Tensor[(990), uint32] */;
  (%438, %439, %440)
}

def @func_10541() -> (Tensor[(12, 8, 11), int64], Tensor[(12, 8, 11), float64]) {
  %441 = @func_7078() /* ty=(Tensor[(12, 8, 11), float64], Tensor[(12, 8, 11), float64]) */;
  %442 = @func_3349() /* ty=Tensor[(12, 8, 11), int64] */;
  %443 = %441.0;
  (%442, %443)
}

def @func_15427(%var_15421: Tensor[(15, 11, 2), bool], %var_15422: Tensor[(15, 11, 2), bool]) -> (Tensor[(15, 11, 2), bool],) {
  %444 = cast(%var_15422, dtype="bool") /* ty=Tensor[(15, 11, 2), bool] */;
  %445 = shape_of(%var_15421, dtype="int32") /* ty=Tensor[(3), int32] */;
  %446 = cast(%var_15421, dtype="bool") /* ty=Tensor[(15, 11, 2), bool] */;
  %447 = dyn.reshape(%444, %445, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %448 = logical_and(%446, %447) /* ty=Tensor[(15, 11, 2), bool] */;
  (%448,)
}

def @func_2306() -> (Tensor[(352), float32], Tensor[(352), float32]) {
  %449 = @func_1559() /* ty=(Tensor[(12, 8, 11), uint16], Tensor[(8, 11, 4), float64], Tensor[(352), float32], Tensor[(8, 11, 4), bool]) */;
  %450 = @func_1559() /* ty=(Tensor[(12, 8, 11), uint16], Tensor[(8, 11, 4), float64], Tensor[(352), float32], Tensor[(8, 11, 4), bool]) */;
  %451 = %450.2;
  %452 = cast(%451, dtype="float32") /* ty=Tensor[(352), float32] */;
  %453 = reshape(%452, newshape=[352]) /* ty=Tensor[(352), float32] */;
  %454 = @func_1300(%453) /* ty=(Tensor[(8, 11, 4), bool], Tensor[(352), float32], Tensor[(12, 8, 11), float64], Tensor[(8, 11, 4), float64]) */;
  %455 = %454.1;
  %456 = cast(%455, dtype="float32") /* ty=Tensor[(352), float32] */;
  %457 = shape_of(%451, dtype="int32") /* ty=Tensor[(1), int32] */;
  %458 = cast(%451, dtype="float32") /* ty=Tensor[(352), float32] */;
  %459 = dyn.reshape(%456, %457, newshape=[]) /* ty=Tensor[(?), float32] */;
  %460 = %449.2;
  %461 = divide(%458, %459) /* ty=Tensor[(352), float32] */;
  (%460, %461)
}

def @func_7508(%var_7495: Tensor[(52, 4), float64]) -> (Tensor[(990), uint32], Tensor[(8, 11, 4), float64], Tensor[(8, 2, 13), bool], Tensor[(52, 4), float64]) {
  %462 = @func_6996() /* ty=(Tensor[(8, 11, 4), float64], Tensor[(352), float32]) */;
  %463 = cast(%var_7495, dtype="float64") /* ty=Tensor[(52, 4), float64] */;
  %464 = cast(%var_7495, dtype="float64") /* ty=Tensor[(52, 4), float64] */;
  %465 = reshape(%463, newshape=[8, 2, 13]) /* ty=Tensor[(8, 2, 13), float64] */;
  %466 = reshape(%464, newshape=[8, 2, 13]) /* ty=Tensor[(8, 2, 13), float64] */;
  %467 = @func_5563(%465, %466) /* ty=(Tensor[(8, 2, 13), bool], Tensor[(12, 7, 6), float32]) */;
  %468 = @func_5318() /* ty=Tensor[(990), uint32] */;
  %469 = %462.0;
  %470 = %467.0;
  (%468, %469, %470, %var_7495)
}

def @func_8453() -> (Tensor[(12, 8, 11), float64], Tensor[(8, 11, 4), float32]) {
  %471 = @func_2045() /* ty=(Tensor[(12, 8, 11), float64], Tensor[(12, 8, 11), float64]) */;
  %472 = %471.0;
  %473 = @func_6803() /* ty=Tensor[(8, 11, 4), float32] */;
  (%472, %473)
}

def @func_2380() -> Tensor[(12, 8, 11), float64] {
  %474 = @func_1971() /* ty=(Tensor[(12, 8, 11), float64], Tensor[(12, 8, 11), float32]) */;
  %474.0
}

def @func_8755(%var_8739: Tensor[(9, 8, 2), float32]) -> (Tensor[(9, 8, 2), float32], Tensor[(12, 8, 11), float64]) {
  %475 = cast(%var_8739, dtype="float32") /* ty=Tensor[(9, 8, 2), float32] */;
  %476 = @func_4502() /* ty=(Tensor[(12, 8, 11), float64], Tensor[(16, 16, 13), float64], Tensor[(12, 8, 11), float64]) */;
  %477 = rsqrt(%475) /* ty=Tensor[(9, 8, 2), float32] */;
  %478 = %476.0;
  (%477, %478)
}

def @func_2153() -> (Tensor[(12, 8, 11), float32], Tensor[(12, 8, 11), float64], Tensor[(352), float32], Tensor[(8, 11, 4), float64]) {
  %479 = cast(meta[relay.Constant][16] /* ty=Tensor[(352), float32] */, dtype="float32") /* ty=Tensor[(352), float32] */;
  %480 = reshape(%479, newshape=[352]) /* ty=Tensor[(352), float32] */;
  %481 = @func_1300(%480) /* ty=(Tensor[(8, 11, 4), bool], Tensor[(352), float32], Tensor[(12, 8, 11), float64], Tensor[(8, 11, 4), float64]) */;
  %482 = @func_2107() /* ty=(Tensor[(8, 11, 4), float64], Tensor[(12, 8, 11), float32]) */;
  %483 = @func_1400() /* ty=Tensor[(12, 8, 11), float32] */;
  %484 = %481.2;
  %485 = %482.0;
  (%483, %484, meta[relay.Constant][16] /* ty=Tensor[(352), float32] */, %485)
}

def @func_2492(%var_2483: Tensor[(8, 11, 4), bool]) -> (Tensor[(12, 8, 11), float64], Tensor[(12, 8, 11), float32], Tensor[(8, 11, 4), float32]) {
  %486 = @func_1463() /* ty=(Tensor[(12, 8, 11), float64], Tensor[(12, 8, 11), float64]) */;
  %487 = @func_2107() /* ty=(Tensor[(8, 11, 4), float64], Tensor[(12, 8, 11), float32]) */;
  %488 = @func_1559() /* ty=(Tensor[(12, 8, 11), uint16], Tensor[(8, 11, 4), float64], Tensor[(352), float32], Tensor[(8, 11, 4), bool]) */;
  %489 = %488.3;
  %490 = cast(%var_2483, dtype="int8") /* ty=Tensor[(8, 11, 4), int8] */;
  %491 = shape_of(%489, dtype="int32") /* ty=Tensor[(3), int32] */;
  %492 = cast(%489, dtype="int8") /* ty=Tensor[(8, 11, 4), int8] */;
  %493 = dyn.reshape(%490, %491, newshape=[]) /* ty=Tensor[(?, ?, ?), int8] */;
  %494 = maximum(%492, %493) /* ty=Tensor[(8, 11, 4), int8] */;
  %495 = cast(%494, dtype="float32") /* ty=Tensor[(8, 11, 4), float32] */;
  %496 = %486.0;
  %497 = %487.1;
  %498 = asin(%495) /* ty=Tensor[(8, 11, 4), float32] */;
  (%496, %497, %498)
}

def @func_4846() -> Tensor[(12, 8, 11), float64] {
  %499 = @func_2153() /* ty=(Tensor[(12, 8, 11), float32], Tensor[(12, 8, 11), float64], Tensor[(352), float32], Tensor[(8, 11, 4), float64]) */;
  %499.1
}

def @func_14523() -> Tensor[(825), float32] {
  %500 = @func_8691() /* ty=(Tensor[(352), float32], Tensor[(11, 15, 5), uint32], Tensor[(825), uint32], Tensor[(16, 16, 13), float64]) */;
  %501 = %500.2;
  %502 = cast(%501, dtype="float32") /* ty=Tensor[(825), float32] */;
  sqrt(%502) /* ty=Tensor[(825), float32] */
}

def @func_6377(%var_6369: Tensor[(990), uint32]) -> (Tensor[(12, 8, 11), int64], Tensor[(15, 6, 11), uint32], Tensor[(990), uint32]) {
  %503 = @func_4932() /* ty=(Tensor[(12, 8, 11), float64], Tensor[(12, 8, 11), float32], Tensor[(12, 8, 11), int64]) */;
  %504 = cast(%var_6369, dtype="uint32") /* ty=Tensor[(990), uint32] */;
  %505 = reshape(%504, newshape=[990]) /* ty=Tensor[(990), uint32] */;
  %506 = @func_4749(%505) /* ty=(Tensor[(12, 8, 11), uint16], Tensor[(15, 6, 11), uint32], Tensor[(990), uint32], Tensor[(12, 8, 11), float32]) */;
  %507 = %503.2;
  %508 = %506.1;
  (%507, %508, %var_6369)
}

def @func_11319() -> Tensor[(12, 8, 11), float64] {
  %509 = @func_1235() /* ty=(Tensor[(12, 8, 11), float64], Tensor[(12, 8, 11), float32], Tensor[(12, 8, 11), float32]) */;
  %509.0
}

def @func_5866(%var_5849: Tensor[(352), float32]) -> (Tensor[(12, 8, 11), float64], Tensor[(12, 8, 11), float64], Tensor[(352), int8], Tensor[(352), float32], Tensor[(990), uint32], Tensor[(12, 8, 11), float64]) {
  %510 = @func_5772() /* ty=(Tensor[(12, 8, 11), float64], Tensor[(12, 8, 11), float64], Tensor[(12, 8, 11), float64], Tensor[(990), uint32], Tensor[(15, 6, 11), uint32], Tensor[(8, 11, 4), float32]) */;
  %511 = cast(%var_5849, dtype="float32") /* ty=Tensor[(352), float32] */;
  %512 = cast(meta[relay.Constant][17] /* ty=Tensor[(990), uint32] */, dtype="uint32") /* ty=Tensor[(990), uint32] */;
  %513 = reshape(%511, newshape=[352]) /* ty=Tensor[(352), float32] */;
  %514 = reshape(%512, newshape=[990]) /* ty=Tensor[(990), uint32] */;
  %515 = @func_1580(%513, %514) /* ty=(Tensor[(352), int8], Tensor[(12, 8, 11), float64], Tensor[(990), uint32]) */;
  %516 = @func_2808() /* ty=Tensor[(12, 8, 11), float64] */;
  %517 = %510.2;
  %518 = %515.0;
  %519 = @func_2756() /* ty=Tensor[(12, 8, 11), float64] */;
  (%516, %517, %518, %var_5849, meta[relay.Constant][17] /* ty=Tensor[(990), uint32] */, %519)
}

def @func_5772() -> (Tensor[(12, 8, 11), float64], Tensor[(12, 8, 11), float64], Tensor[(12, 8, 11), float64], Tensor[(990), uint32], Tensor[(15, 6, 11), uint32], Tensor[(8, 11, 4), float32]) {
  %520 = @func_5379() /* ty=(Tensor[(12, 8, 11), float64],) */;
  %521 = @func_1559() /* ty=(Tensor[(12, 8, 11), uint16], Tensor[(8, 11, 4), float64], Tensor[(352), float32], Tensor[(8, 11, 4), bool]) */;
  %522 = %521.1;
  %523 = cast(%522, dtype="float32") /* ty=Tensor[(8, 11, 4), float32] */;
  %524 = cast(meta[relay.Constant][18] /* ty=Tensor[(990), uint32] */, dtype="uint32") /* ty=Tensor[(990), uint32] */;
  %525 = reshape(%523, newshape=[352]) /* ty=Tensor[(352), float32] */;
  %526 = reshape(%524, newshape=[990]) /* ty=Tensor[(990), uint32] */;
  %527 = @func_1580(%525, %526) /* ty=(Tensor[(352), int8], Tensor[(12, 8, 11), float64], Tensor[(990), uint32]) */;
  %528 = cast(meta[relay.Constant][18] /* ty=Tensor[(990), uint32] */, dtype="uint32") /* ty=Tensor[(990), uint32] */;
  %529 = reshape(%528, newshape=[15, 6, 11]) /* ty=Tensor[(15, 6, 11), uint32] */;
  %530 = @func_1342(%529) /* ty=(Tensor[(15, 6, 11), uint32], Tensor[(12, 8, 11), float64]) */;
  %531 = cast(%522, dtype="float32") /* ty=Tensor[(8, 11, 4), float32] */;
  %532 = %520.0;
  %533 = @func_2808() /* ty=Tensor[(12, 8, 11), float64] */;
  %534 = %527.1;
  %535 = %530.0;
  %536 = cos(%531) /* ty=Tensor[(8, 11, 4), float32] */;
  (%532, %533, %534, meta[relay.Constant][18] /* ty=Tensor[(990), uint32] */, %535, %536)
}

def @func_11850(%var_11835: Tensor[(6, 16, 1), uint16]) -> (Tensor[(6, 16, 1), uint16], Tensor[(12, 8, 11), float64]) {
  %537 = cast(meta[relay.Constant][19] /* ty=uint16 */, dtype="uint16") /* ty=uint16 */;
  %538 = cast(%var_11835, dtype="uint16") /* ty=Tensor[(6, 16, 1), uint16] */;
  %539 = @func_1463() /* ty=(Tensor[(12, 8, 11), float64], Tensor[(12, 8, 11), float64]) */;
  %540 = multiply(%537, %538) /* ty=Tensor[(6, 16, 1), uint16] */;
  %541 = %539.1;
  (%540, %541)
}

def @func_9062() -> (Tensor[(12, 8, 11), float32],) {
  %542 = @func_6615() /* ty=(Tensor[(352), float32], Tensor[(12, 8, 11), float32]) */;
  %543 = %542.1;
  (%543,)
}

def @func_7600() -> (Tensor[(12, 8, 11), float64],) {
  %544 = @func_2045() /* ty=(Tensor[(12, 8, 11), float64], Tensor[(12, 8, 11), float64]) */;
  %545 = %544.0;
  (%545,)
}

def @func_3234() -> (Tensor[(12, 8, 11), int64], Tensor[(12, 8, 11), float32], Tensor[(352), float32]) {
  %546 = @func_2737() /* ty=(Tensor[(990), uint32], Tensor[(12, 8, 11), float64], Tensor[(12, 8, 11), float64], Tensor[(12, 8, 11), float64], Tensor[(12, 8, 11), int64]) */;
  %547 = @func_2306() /* ty=(Tensor[(352), float32], Tensor[(352), float32]) */;
  %548 = %546.4;
  %549 = @func_1918() /* ty=Tensor[(12, 8, 11), float32] */;
  %550 = %547.1;
  (%548, %549, %550)
}

def @func_6871() -> (Tensor[(12, 8, 11), float32],) {
  %551 = @func_5701() /* ty=(Tensor[(12, 8, 11), float32], Tensor[(8, 11, 4), float64]) */;
  %552 = %551.0;
  (%552,)
}

def @func_7286() -> (Tensor[(12, 8, 11), int64], Tensor[(990), uint32]) {
  %553 = @func_2238() /* ty=(Tensor[(12, 8, 11), int64],) */;
  %554 = @func_2121() /* ty=(Tensor[(12, 7, 6), float32], Tensor[(15, 6, 11), uint32], Tensor[(990), uint32]) */;
  %555 = %553.0;
  %556 = %554.2;
  (%555, %556)
}

def @func_5533() -> Tensor[(12, 8, 11), float64] {
  @func_2955() /* ty=Tensor[(12, 8, 11), float64] */
}

def @func_15314() -> (Tensor[(12, 8, 11), float64], Tensor[(12, 8, 11), float64]) {
  %557 = @func_13437() /* ty=(Tensor[(12, 8, 11), float64], Tensor[(12, 8, 11), float64]) */;
  %558 = @func_6557() /* ty=Tensor[(12, 8, 11), float64] */;
  %559 = %557.1;
  (%558, %559)
}

def @func_15272() -> Tensor[(12, 8, 11), float32] {
  %560 = @func_8214() /* ty=(Tensor[(352), uint64], Tensor[(352), float32], Tensor[(12, 8, 11), float32]) */;
  %560.2
}

def @func_11163() -> (Tensor[(12, 8, 11), float64], Tensor[(12, 8, 11), float32], Tensor[(352), float32], Tensor[(8, 11, 4), float64]) {
  %561 = @func_6615() /* ty=(Tensor[(352), float32], Tensor[(12, 8, 11), float32]) */;
  %562 = @func_5508() /* ty=(Tensor[(15, 6, 11), uint32], Tensor[(352), float32], Tensor[(12, 8, 11), float64]) */;
  %563 = @func_7710() /* ty=(Tensor[(8, 11, 4), float64],) */;
  %564 = @func_9038() /* ty=Tensor[(12, 8, 11), float64] */;
  %565 = %561.1;
  %566 = %562.1;
  %567 = %563.0;
  (%564, %565, %566, %567)
}

def @func_5203(%var_5194: Tensor[(825), uint32]) -> (Tensor[(15, 6, ?), bool], Tensor[(825), uint32], Tensor[(11, 15, 5), float64]) {
  %568 = @func_3145() /* ty=(Tensor[(12, 8, 11), float64], Tensor[(15, 6, ?), bool], Tensor[(12, 8, 11), float32], Tensor[(990), uint32], Tensor[(8, 11, 4), float64], Tensor[(15, 6, ?), float32], Tensor[(12, 8, 11), float64], Tensor[(12, 8, 11), float64], Tensor[(12, 8, 11), float32], Tensor[(15, 6, 11), bool]) */;
  %569 = cast(%var_5194, dtype="uint32") /* ty=Tensor[(825), uint32] */;
  %570 = reshape(%569, newshape=[11, 15, 5]) /* ty=Tensor[(11, 15, 5), uint32] */;
  %571 = @func_1996(%570) /* ty=Tensor[(11, 15, 5), uint32] */;
  %572 = cast(%571, dtype="float64") /* ty=Tensor[(11, 15, 5), float64] */;
  %573 = %568.1;
  %574 = sinh(%572) /* ty=Tensor[(11, 15, 5), float64] */;
  (%573, %var_5194, %574)
}

def @func_14954() -> (Tensor[(12, 8, 11), float64], Tensor[(8, 11, 4), float32]) {
  %575 = @func_4190() /* ty=(Tensor[(8, 11, 4), float32], Tensor[(12, 8, 11), float64], Tensor[(12, 8, 11), int64]) */;
  %576 = @func_5533() /* ty=Tensor[(12, 8, 11), float64] */;
  %577 = %575.0;
  (%576, %577)
}

def @func_7078() -> (Tensor[(12, 8, 11), float64], Tensor[(12, 8, 11), float64]) {
  %578 = @func_3522() /* ty=Tensor[(12, 8, 11), float64] */;
  %579 = @func_2380() /* ty=Tensor[(12, 8, 11), float64] */;
  (%578, %579)
}

def @func_12007(%var_12001: float32, %var_12002: Tensor[(5, 16, 2), float32]) -> (Tensor[(5, 16, 2), float32],) {
  %580 = cast(%var_12001, dtype="float32") /* ty=float32 */;
  %581 = cast(%var_12002, dtype="float32") /* ty=Tensor[(5, 16, 2), float32] */;
  %582 = divide(%580, %581) /* ty=Tensor[(5, 16, 2), float32] */;
  (%582,)
}

def @func_5445() -> (Tensor[(12, 8, 11), float64], Tensor[(12, 8, 11), float64], Tensor[(15, 6, 11), uint32], Tensor[(352), float32]) {
  %583 = @func_3605() /* ty=(Tensor[(12, 8, 11), float64], Tensor[(12, 8, 11), float64], Tensor[(990), uint32], Tensor[(990), uint32], Tensor[(12, 8, 11), float64], Tensor[(12, 8, 11), int64], Tensor[(12, 8, 11), float64], Tensor[(8, 11, 4), float64]) */;
  %584 = @func_4502() /* ty=(Tensor[(12, 8, 11), float64], Tensor[(16, 16, 13), float64], Tensor[(12, 8, 11), float64]) */;
  %585 = @func_5221() /* ty=(Tensor[(15, 6, 11), uint32],) */;
  %586 = @func_3796() /* ty=(Tensor[(352), float32],) */;
  %587 = %583.1;
  %588 = %584.0;
  %589 = %585.0;
  %590 = %586.0;
  (%587, %588, %589, %590)
}

def @func_8214() -> (Tensor[(352), uint64], Tensor[(352), float32], Tensor[(12, 8, 11), float32]) {
  %591 = @func_2306() /* ty=(Tensor[(352), float32], Tensor[(352), float32]) */;
  %592 = %591.1;
  %593 = cast(meta[relay.Constant][20] /* ty=Tensor[(352), float32] */, dtype="uint64") /* ty=Tensor[(352), uint64] */;
  %594 = shape_of(%592, dtype="int32") /* ty=Tensor[(1), int32] */;
  %595 = cast(%592, dtype="uint64") /* ty=Tensor[(352), uint64] */;
  %596 = dyn.reshape(%593, %594, newshape=[]) /* ty=Tensor[(?), uint64] */;
  %597 = @func_6615() /* ty=(Tensor[(352), float32], Tensor[(12, 8, 11), float32]) */;
  %598 = @func_4637() /* ty=(Tensor[(12, 8, 11), float64], Tensor[(12, 8, 11), float32]) */;
  %599 = bitwise_and(%595, %596) /* ty=Tensor[(352), uint64] */;
  %600 = %597.0;
  %601 = %598.1;
  (%599, %600, %601)
}

def @func_5379() -> (Tensor[(12, 8, 11), float64],) {
  %602 = @func_2045() /* ty=(Tensor[(12, 8, 11), float64], Tensor[(12, 8, 11), float64]) */;
  %603 = %602.0;
  (%603,)
}

def @func_9074() -> Tensor[(8, 11, 4), uint64] {
  %604 = @func_8376() /* ty=(Tensor[(8, 11, 4), uint64],) */;
  %604.0
}

def @func_7654(%var_7651: Tensor[(1, 390), bool]) -> (Tensor[(12, 8, 11), float64], Tensor[(352), float32], Tensor[(12, 8, 11), float64], Tensor[(3, 10, 13), bool], Tensor[(1, 390), bool]) {
  %605 = @func_6697() /* ty=(Tensor[(12, 8, 11), float64], Tensor[(352), int8], Tensor[(352), float32]) */;
  %606 = @func_6615() /* ty=(Tensor[(352), float32], Tensor[(12, 8, 11), float32]) */;
  %607 = @func_6132() /* ty=(Tensor[(12, 8, 11), float64], Tensor[(12, 8, 11), float64], Tensor[(990), uint32], Tensor[(352), int8], Tensor[(352), float32]) */;
  %608 = cast(%var_7651, dtype="bool") /* ty=Tensor[(1, 390), bool] */;
  %609 = reshape(%608, newshape=[3, 10, 13]) /* ty=Tensor[(3, 10, 13), bool] */;
  %610 = %605.0;
  %611 = %606.0;
  %612 = %607.1;
  %613 = @func_4151(%609) /* ty=Tensor[(3, 10, 13), bool] */;
  (%610, %611, %612, %613, %var_7651)
}

def @func_12205() -> (Tensor[(12, 8, 11), float32], Tensor[(352), float32], Tensor[(352), float32], Tensor[(12, 8, 11), float32], Tensor[(15, 6, 11), uint32], Tensor[(12, 8, 11), float64]) {
  %614 = @func_10878() /* ty=(Tensor[(12, 8, 11), float32], Tensor[(12, 8, 11), float32]) */;
  %615 = %614.1;
  %616 = cast(%615, dtype="float64") /* ty=Tensor[(12, 8, 11), float64] */;
  %617 = cast(meta[relay.Constant][21] /* ty=Tensor[(352), float32] */, dtype="float32") /* ty=Tensor[(352), float32] */;
  %618 = reshape(%616, newshape=[1056]) /* ty=Tensor[(1056), float64] */;
  %619 = reshape(%617, newshape=[352]) /* ty=Tensor[(352), float32] */;
  %620 = @func_10031(%618, %619) /* ty=(Tensor[(1056), float64], Tensor[(15, 6, 11), int16], Tensor[(8, 11, 4), float32], float32, Tensor[(352), float32], Tensor[(352), int8], Tensor[(15, 6, 11), uint64]) */;
  %621 = @func_1741() /* ty=(Tensor[(12, 8, 11), float32],) */;
  %622 = @func_8102() /* ty=(Tensor[(15, 6, 11), uint32],) */;
  %623 = %620.4;
  %624 = %621.0;
  %625 = %622.0;
  %626 = @func_6069() /* ty=Tensor[(12, 8, 11), float64] */;
  (%615, %623, meta[relay.Constant][21] /* ty=Tensor[(352), float32] */, %624, %625, %626)
}

def @func_3489() -> (Tensor[(12, 8, 11), float32], Tensor[(12, 8, 11), float64], Tensor[(12, 8, 11), float64], Tensor[(12, 8, 11), float32], Tensor[(990), uint32]) {
  %627 = @func_2973() /* ty=(Tensor[(12, 8, 11), float64],) */;
  %628 = @func_2973() /* ty=(Tensor[(12, 8, 11), float64],) */;
  %629 = @func_2622() /* ty=(Tensor[(12, 8, 11), float64], Tensor[(12, 8, 11), float64]) */;
  %630 = %629.1;
  %631 = cast(%630, dtype="float32") /* ty=Tensor[(12, 8, 11), float32] */;
  %632 = @func_3145() /* ty=(Tensor[(12, 8, 11), float64], Tensor[(15, 6, ?), bool], Tensor[(12, 8, 11), float32], Tensor[(990), uint32], Tensor[(8, 11, 4), float64], Tensor[(15, 6, ?), float32], Tensor[(12, 8, 11), float64], Tensor[(12, 8, 11), float64], Tensor[(12, 8, 11), float32], Tensor[(15, 6, 11), bool]) */;
  %633 = @func_1918() /* ty=Tensor[(12, 8, 11), float32] */;
  %634 = %627.0;
  %635 = %628.0;
  %636 = sin(%631) /* ty=Tensor[(12, 8, 11), float32] */;
  %637 = %632.3;
  (%633, %634, %635, %636, %637)
}

def @func_13226() -> (Tensor[(12, 8, 11), float32], Tensor[(990), uint32], Tensor[(12, 8, 11), float32]) {
  %638 = @func_2107() /* ty=(Tensor[(8, 11, 4), float64], Tensor[(12, 8, 11), float32]) */;
  %639 = @func_6528() /* ty=(Tensor[(12, 8, 11), float32], Tensor[(12, 8, 11), float32]) */;
  %640 = %638.1;
  %641 = @func_10816() /* ty=Tensor[(990), uint32] */;
  %642 = %639.0;
  (%640, %641, %642)
}

def @func_12792() -> Tensor[(8, 11, 4), float64] {
  %643 = @func_11011() /* ty=(Tensor[(12, 8, 11), float64], Tensor[(12, 8, 11), float64], Tensor[(8, 11, 4), float64]) */;
  %643.2
}

def @func_5318() -> Tensor[(990), uint32] {
  %644 = @func_3489() /* ty=(Tensor[(12, 8, 11), float32], Tensor[(12, 8, 11), float64], Tensor[(12, 8, 11), float64], Tensor[(12, 8, 11), float32], Tensor[(990), uint32]) */;
  %644.4
}

def @func_1400() -> Tensor[(12, 8, 11), float32] {
  %645 = @func_1235() /* ty=(Tensor[(12, 8, 11), float64], Tensor[(12, 8, 11), float32], Tensor[(12, 8, 11), float32]) */;
  %645.2
}

def @func_9858() -> (Tensor[(12, 8, 11), float64], Tensor[(8, 11, 4), float64]) {
  %646 = @func_5008() /* ty=(Tensor[(8, 11, 4), float64],) */;
  %647 = @func_8255() /* ty=Tensor[(12, 8, 11), float64] */;
  %648 = %646.0;
  (%647, %648)
}

def @func_11593() -> (Tensor[(12, 8, 11), float64], Tensor[(352), float32], Tensor[(12, 8, 11), float32], Tensor[(12, 8, 11), float32], Tensor[(12, 8, 11), float64]) {
  %649 = @func_9858() /* ty=(Tensor[(12, 8, 11), float64], Tensor[(8, 11, 4), float64]) */;
  %650 = @func_10678() /* ty=(Tensor[(352), bool],) */;
  %651 = %650.0;
  %652 = cast(%651, dtype="float32") /* ty=Tensor[(352), float32] */;
  %653 = rsqrt(%652) /* ty=Tensor[(352), float32] */;
  %654 = cast(%653, dtype="float32") /* ty=Tensor[(352), float32] */;
  %655 = reshape(%654, newshape=[8, 44]) /* ty=Tensor[(8, 44), float32] */;
  %656 = @func_1779(%655) /* ty=(Tensor[(12, 8, 11), float64], Tensor[(12, 8, 11), float32], Tensor[(8, 11, 4), bool], Tensor[(8, 44), float32]) */;
  %657 = @func_6615() /* ty=(Tensor[(352), float32], Tensor[(12, 8, 11), float32]) */;
  %658 = @func_7078() /* ty=(Tensor[(12, 8, 11), float64], Tensor[(12, 8, 11), float64]) */;
  %659 = %649.0;
  %660 = %656.1;
  %661 = %657.1;
  %662 = %658.0;
  (%659, %653, %660, %661, %662)
}

def @func_7687(%var_7679: Tensor[(12, 8, 11), float64]) -> Tensor[(12, 8, 11), int8] {
  %663 = @func_1117() /* ty=Tensor[(12, 8, 11), float64] */;
  %664 = cast(%var_7679, dtype="int8") /* ty=Tensor[(12, 8, 11), int8] */;
  %665 = shape_of(%663, dtype="int32") /* ty=Tensor[(3), int32] */;
  %666 = cast(%663, dtype="int8") /* ty=Tensor[(12, 8, 11), int8] */;
  %667 = dyn.reshape(%664, %665, newshape=[]) /* ty=Tensor[(?, ?, ?), int8] */;
  right_shift(%666, %667) /* ty=Tensor[(12, 8, 11), int8] */
}

def @func_13962() -> (Tensor[(12, 8, 11), float32],) {
  %668 = @func_4903() /* ty=(Tensor[(12, 8, 11), float32], Tensor[(12, 8, 11), float64]) */;
  %669 = %668.0;
  (%669,)
}

def @func_1580(%var_1567: Tensor[(352), float32], %var_1576: Tensor[(990), uint32]) -> (Tensor[(352), int8], Tensor[(12, 8, 11), float64], Tensor[(990), uint32]) {
  %670 = @func_1559() /* ty=(Tensor[(12, 8, 11), uint16], Tensor[(8, 11, 4), float64], Tensor[(352), float32], Tensor[(8, 11, 4), bool]) */;
  %671 = %670.2;
  %672 = cast(%var_1567, dtype="int8") /* ty=Tensor[(352), int8] */;
  %673 = shape_of(%671, dtype="int32") /* ty=Tensor[(1), int32] */;
  %674 = cast(%671, dtype="int8") /* ty=Tensor[(352), int8] */;
  %675 = dyn.reshape(%672, %673, newshape=[]) /* ty=Tensor[(?), int8] */;
  %676 = cast(%var_1576, dtype="uint32") /* ty=Tensor[(990), uint32] */;
  %677 = reshape(%676, newshape=[15, 6, 11]) /* ty=Tensor[(15, 6, 11), uint32] */;
  %678 = @func_1342(%677) /* ty=(Tensor[(15, 6, 11), uint32], Tensor[(12, 8, 11), float64]) */;
  %679 = minimum(%674, %675) /* ty=Tensor[(352), int8] */;
  %680 = %678.1;
  (%679, %680, %var_1576)
}

def @func_7456(%var_7441: bool, %var_7442: Tensor[(2, 16, 5), bool]) -> Tensor[(2, 16, 5), bool] {
  %681 = cast(%var_7441, dtype="bool") /* ty=bool */;
  %682 = cast(%var_7442, dtype="bool") /* ty=Tensor[(2, 16, 5), bool] */;
  logical_and(%681, %682) /* ty=Tensor[(2, 16, 5), bool] */
}

def @func_6966(%var_6948: Tensor[(12, 8, 11), float64]) -> (Tensor[(12, 8, 11), uint32], Tensor[(15, 6, 11), uint32]) {
  %683 = @func_1358() /* ty=(Tensor[(12, 8, 11), float64],) */;
  %684 = %683.0;
  %685 = cast(%var_6948, dtype="uint32") /* ty=Tensor[(12, 8, 11), uint32] */;
  %686 = shape_of(%684, dtype="int32") /* ty=Tensor[(3), int32] */;
  %687 = cast(%684, dtype="uint32") /* ty=Tensor[(12, 8, 11), uint32] */;
  %688 = dyn.reshape(%685, %686, newshape=[]) /* ty=Tensor[(?, ?, ?), uint32] */;
  %689 = @func_5221() /* ty=(Tensor[(15, 6, 11), uint32],) */;
  %690 = bitwise_or(%687, %688) /* ty=Tensor[(12, 8, 11), uint32] */;
  %691 = %689.0;
  (%690, %691)
}

def @func_14783() -> (Tensor[(12, 8, 11), float64], Tensor[(8, 11, 4), uint64]) {
  %692 = @func_5981() /* ty=(Tensor[(12, 8, 11), float64],) */;
  %693 = %692.0;
  %694 = @func_13520() /* ty=Tensor[(8, 11, 4), uint64] */;
  (%693, %694)
}

def @func_2737() -> (Tensor[(990), uint32], Tensor[(12, 8, 11), float64], Tensor[(12, 8, 11), float64], Tensor[(12, 8, 11), float64], Tensor[(12, 8, 11), int64]) {
  %695 = @func_2121() /* ty=(Tensor[(12, 7, 6), float32], Tensor[(15, 6, 11), uint32], Tensor[(990), uint32]) */;
  %696 = @func_2045() /* ty=(Tensor[(12, 8, 11), float64], Tensor[(12, 8, 11), float64]) */;
  %697 = @func_2574() /* ty=(Tensor[(352), float32], Tensor[(12, 8, 11), float64], Tensor[(990), uint32], Tensor[(12, 8, 11), float64], Tensor[(12, 8, 11), int64]) */;
  %698 = %695.2;
  %699 = @func_2380() /* ty=Tensor[(12, 8, 11), float64] */;
  %700 = @func_2380() /* ty=Tensor[(12, 8, 11), float64] */;
  %701 = %696.1;
  %702 = %697.4;
  (%698, %699, %700, %701, %702)
}

def @func_11965() -> Tensor[(12, 8, 11), float64] {
  %703 = @func_4502() /* ty=(Tensor[(12, 8, 11), float64], Tensor[(16, 16, 13), float64], Tensor[(12, 8, 11), float64]) */;
  %703.0
}

def @func_8255() -> Tensor[(12, 8, 11), float64] {
  %704 = @func_1235() /* ty=(Tensor[(12, 8, 11), float64], Tensor[(12, 8, 11), float32], Tensor[(12, 8, 11), float32]) */;
  %704.0
}

def @func_9679() -> (Tensor[(8, 11, 4), float64], Tensor[(12, 8, 11), float64], Tensor[(8, 11, 4), float32], Tensor[(12, 8, 11), float64]) {
  %705 = @func_9321() /* ty=(Tensor[(8, 11, 4), float64], Tensor[(12, 8, 11), float64]) */;
  %706 = @func_1358() /* ty=(Tensor[(12, 8, 11), float64],) */;
  %707 = %705.0;
  %708 = cast(%707, dtype="bool") /* ty=Tensor[(8, 11, 4), bool] */;
  %709 = reshape(%708, newshape=[8, 11, 4]) /* ty=Tensor[(8, 11, 4), bool] */;
  %710 = @func_2492(%709) /* ty=(Tensor[(12, 8, 11), float64], Tensor[(12, 8, 11), float32], Tensor[(8, 11, 4), float32]) */;
  %711 = @func_2973() /* ty=(Tensor[(12, 8, 11), float64],) */;
  %712 = %706.0;
  %713 = %710.2;
  %714 = %711.0;
  (%707, %712, %713, %714)
}

def @func_10317() -> (Tensor[(352), bool],) {
  %715 = @func_6615() /* ty=(Tensor[(352), float32], Tensor[(12, 8, 11), float32]) */;
  %716 = %715.0;
  %717 = cast(meta[relay.Constant][22] /* ty=Tensor[(352), float32] */, dtype="bool") /* ty=Tensor[(352), bool] */;
  %718 = shape_of(%716, dtype="int32") /* ty=Tensor[(1), int32] */;
  %719 = cast(%716, dtype="bool") /* ty=Tensor[(352), bool] */;
  %720 = dyn.reshape(%717, %718, newshape=[]) /* ty=Tensor[(?), bool] */;
  %721 = not_equal(%719, %720) /* ty=Tensor[(352), bool] */;
  (%721,)
}

def @func_10878() -> (Tensor[(12, 8, 11), float32], Tensor[(12, 8, 11), float32]) {
  %722 = @func_6483() /* ty=(Tensor[(12, 8, 11), float64], Tensor[(12, 8, 11), float64], Tensor[(12, 8, 11), float32]) */;
  %723 = @func_4637() /* ty=(Tensor[(12, 8, 11), float64], Tensor[(12, 8, 11), float32]) */;
  %724 = %722.2;
  %725 = %723.1;
  (%724, %725)
}

def @func_6697() -> (Tensor[(12, 8, 11), float64], Tensor[(352), int8], Tensor[(352), float32]) {
  %726 = @func_2574() /* ty=(Tensor[(352), float32], Tensor[(12, 8, 11), float64], Tensor[(990), uint32], Tensor[(12, 8, 11), float64], Tensor[(12, 8, 11), int64]) */;
  %727 = cast(meta[relay.Constant][23] /* ty=Tensor[(352), float32] */, dtype="float32") /* ty=Tensor[(352), float32] */;
  %728 = reshape(%727, newshape=[352]) /* ty=Tensor[(352), float32] */;
  %729 = @func_5866(%728) /* ty=(Tensor[(12, 8, 11), float64], Tensor[(12, 8, 11), float64], Tensor[(352), int8], Tensor[(352), float32], Tensor[(990), uint32], Tensor[(12, 8, 11), float64]) */;
  %730 = %726.3;
  %731 = %729.2;
  (%730, %731, meta[relay.Constant][23] /* ty=Tensor[(352), float32] */)
}

def @func_6268(%var_6249: uint16, %var_6250: Tensor[(9, 5, 5), uint16]) -> Tensor[(9, 5, 5), bool] {
  %732 = cast(%var_6249, dtype="bool") /* ty=bool */;
  %733 = cast(%var_6250, dtype="bool") /* ty=Tensor[(9, 5, 5), bool] */;
  not_equal(%732, %733) /* ty=Tensor[(9, 5, 5), bool] */
}

def @func_12761() -> (Tensor[(8, 11, 4), float64], Tensor[(12, 8, 11), float64]) {
  %734 = @func_3508() /* ty=(Tensor[(8, 11, 4), float64],) */;
  %735 = @func_4932() /* ty=(Tensor[(12, 8, 11), float64], Tensor[(12, 8, 11), float32], Tensor[(12, 8, 11), int64]) */;
  %736 = %734.0;
  %737 = %735.0;
  (%736, %737)
}

def @func_7892() -> Tensor[(12, 8, 11), float64] {
  @func_2808() /* ty=Tensor[(12, 8, 11), float64] */
}

def @func_3145() -> (Tensor[(12, 8, 11), float64], Tensor[(15, 6, ?), bool], Tensor[(12, 8, 11), float32], Tensor[(990), uint32], Tensor[(8, 11, 4), float64], Tensor[(15, 6, ?), float32], Tensor[(12, 8, 11), float64], Tensor[(12, 8, 11), float64], Tensor[(12, 8, 11), float32], Tensor[(15, 6, 11), bool]) {
  %738 = @func_1358() /* ty=(Tensor[(12, 8, 11), float64],) */;
  %739 = cast(meta[relay.Constant][24] /* ty=Tensor[(15, 6, 1), float32] */, dtype="float64") /* ty=Tensor[(15, 6, 1), float64] */;
  %740 = sin(%739) /* ty=Tensor[(15, 6, 1), float64] */;
  %741 = cast(meta[relay.Constant][25] /* ty=Tensor[(15, 6, 1), float32] */, dtype="float32") /* ty=Tensor[(15, 6, 1), float32] */;
  %742 = shape_of(meta[relay.Constant][24] /* ty=Tensor[(15, 6, 1), float32] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %743 = cast(meta[relay.Constant][24] /* ty=Tensor[(15, 6, 1), float32] */, dtype="float32") /* ty=Tensor[(15, 6, 1), float32] */;
  %744 = dyn.reshape(%741, %742, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %745 = power(%743, %744) /* ty=Tensor[(15, 6, ?), float32] */;
  %746 = cast(%745, dtype="bool") /* ty=Tensor[(15, 6, ?), bool] */;
  %747 = shape_of(%740, dtype="int32") /* ty=Tensor[(3), int32] */;
  %748 = cast(%740, dtype="bool") /* ty=Tensor[(15, 6, 1), bool] */;
  %749 = dyn.reshape(%746, %747, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %750 = @func_2062() /* ty=(Tensor[(12, 8, 11), float64],) */;
  %751 = %750.0;
  %752 = @func_2756() /* ty=Tensor[(12, 8, 11), float64] */;
  %753 = cast(%752, dtype="float32") /* ty=Tensor[(12, 8, 11), float32] */;
  %754 = shape_of(%751, dtype="int32") /* ty=Tensor[(3), int32] */;
  %755 = cast(%751, dtype="float32") /* ty=Tensor[(12, 8, 11), float32] */;
  %756 = dyn.reshape(%753, %754, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %757 = @func_2121() /* ty=(Tensor[(12, 7, 6), float32], Tensor[(15, 6, 11), uint32], Tensor[(990), uint32]) */;
  %758 = %757.1;
  %759 = cast(%758, dtype="uint32") /* ty=Tensor[(15, 6, 11), uint32] */;
  %760 = reshape(%759, newshape=[990]) /* ty=Tensor[(990), uint32] */;
  %761 = @func_1625(%760) /* ty=(Tensor[(12, 8, 11), float64], Tensor[(352), int8], Tensor[(352), float32], Tensor[(990), uint32]) */;
  %762 = @func_1559() /* ty=(Tensor[(12, 8, 11), uint16], Tensor[(8, 11, 4), float64], Tensor[(352), float32], Tensor[(8, 11, 4), bool]) */;
  %763 = cast(meta[relay.Constant][25] /* ty=Tensor[(15, 6, 1), float32] */, dtype="float32") /* ty=Tensor[(15, 6, 1), float32] */;
  %764 = shape_of(%740, dtype="int32") /* ty=Tensor[(3), int32] */;
  %765 = cast(%740, dtype="float32") /* ty=Tensor[(15, 6, 1), float32] */;
  %766 = dyn.reshape(%763, %764, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %767 = divide(%765, %766) /* ty=Tensor[(15, 6, ?), float32] */;
  %768 = cast(%745, dtype="float32") /* ty=Tensor[(15, 6, ?), float32] */;
  %769 = shape_of(%767, dtype="int32") /* ty=Tensor[(3), int32] */;
  %770 = cast(%767, dtype="float32") /* ty=Tensor[(15, 6, ?), float32] */;
  %771 = dyn.reshape(%768, %769, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %772 = cast(%758, dtype="uint32") /* ty=Tensor[(15, 6, 11), uint32] */;
  %773 = reshape(%772, newshape=[15, 6, 11]) /* ty=Tensor[(15, 6, 11), uint32] */;
  %774 = @func_1342(%773) /* ty=(Tensor[(15, 6, 11), uint32], Tensor[(12, 8, 11), float64]) */;
  %775 = @func_2205() /* ty=(Tensor[(12, 8, 11), float32], Tensor[(12, 8, 11), float64], Tensor[(12, 8, 11), float64]) */;
  %776 = cast(%745, dtype="bool") /* ty=Tensor[(15, 6, ?), bool] */;
  %777 = cast(%758, dtype="bool") /* ty=Tensor[(15, 6, 11), bool] */;
  %778 = %738.0;
  %779 = logical_and(%748, %749) /* ty=Tensor[(15, 6, ?), bool] */;
  %780 = power(%755, %756) /* ty=Tensor[(12, 8, 11), float32] */;
  %781 = %761.3;
  %782 = %762.1;
  %783 = subtract(%770, %771) /* ty=Tensor[(15, 6, ?), float32] */;
  %784 = %774.1;
  %785 = %775.2;
  %786 = @func_1918() /* ty=Tensor[(12, 8, 11), float32] */;
  %787 = equal(%776, %777) /* ty=Tensor[(15, 6, 11), bool] */;
  (%778, %779, %780, %781, %782, %783, %784, %785, %786, %787)
}

def @func_4190() -> (Tensor[(8, 11, 4), float32], Tensor[(12, 8, 11), float64], Tensor[(12, 8, 11), int64]) {
  %788 = @func_3508() /* ty=(Tensor[(8, 11, 4), float64],) */;
  %789 = %788.0;
  %790 = cast(%789, dtype="float32") /* ty=Tensor[(8, 11, 4), float32] */;
  %791 = @func_2045() /* ty=(Tensor[(12, 8, 11), float64], Tensor[(12, 8, 11), float64]) */;
  %792 = @func_2737() /* ty=(Tensor[(990), uint32], Tensor[(12, 8, 11), float64], Tensor[(12, 8, 11), float64], Tensor[(12, 8, 11), float64], Tensor[(12, 8, 11), int64]) */;
  %793 = rsqrt(%790) /* ty=Tensor[(8, 11, 4), float32] */;
  %794 = %791.1;
  %795 = %792.4;
  (%793, %794, %795)
}

def @func_1358() -> (Tensor[(12, 8, 11), float64],) {
  %796 = @func_1117() /* ty=Tensor[(12, 8, 11), float64] */;
  (%796,)
}

def @func_4502() -> (Tensor[(12, 8, 11), float64], Tensor[(16, 16, 13), float64], Tensor[(12, 8, 11), float64]) {
  %797 = @func_4190() /* ty=(Tensor[(8, 11, 4), float32], Tensor[(12, 8, 11), float64], Tensor[(12, 8, 11), int64]) */;
  %798 = @func_4110() /* ty=(Tensor[(16, 16, 13), float64], Tensor[(12, 8, 11), float32]) */;
  %799 = %797.1;
  %800 = %798.0;
  %801 = @func_3522() /* ty=Tensor[(12, 8, 11), float64] */;
  (%799, %800, %801)
}

def @func_14011() -> (Tensor[(990), uint32], Tensor[(12, 8, 11), float32]) {
  %802 = @func_7246() /* ty=(Tensor[(990), uint32],) */;
  %803 = %802.0;
  %804 = @func_3735() /* ty=Tensor[(12, 8, 11), float32] */;
  (%803, %804)
}

def @func_7556() -> Tensor[(12, 8, 11), float32] {
  @func_4304() /* ty=Tensor[(12, 8, 11), float32] */
}

def @func_4749(%var_4734: Tensor[(990), uint32]) -> (Tensor[(12, 8, 11), uint16], Tensor[(15, 6, 11), uint32], Tensor[(990), uint32], Tensor[(12, 8, 11), float32]) {
  %805 = @func_1559() /* ty=(Tensor[(12, 8, 11), uint16], Tensor[(8, 11, 4), float64], Tensor[(352), float32], Tensor[(8, 11, 4), bool]) */;
  %806 = cast(%var_4734, dtype="uint32") /* ty=Tensor[(990), uint32] */;
  %807 = reshape(%806, newshape=[15, 6, 11]) /* ty=Tensor[(15, 6, 11), uint32] */;
  %808 = @func_1342(%807) /* ty=(Tensor[(15, 6, 11), uint32], Tensor[(12, 8, 11), float64]) */;
  %809 = %805.0;
  %810 = %808.0;
  %811 = @func_1400() /* ty=Tensor[(12, 8, 11), float32] */;
  (%809, %810, %var_4734, %811)
}

def @func_12441(%var_12428: Tensor[(1, 5, 9), int16], %var_12429: Tensor[(5, 5, 9), int16]) -> Tensor[(5, 5, 9), int16] {
  %812 = cast(%var_12428, dtype="int16") /* ty=Tensor[(1, 5, 9), int16] */;
  %813 = cast(%var_12429, dtype="int16") /* ty=Tensor[(5, 5, 9), int16] */;
  subtract(%812, %813) /* ty=Tensor[(5, 5, 9), int16] */
}

def @func_11235() -> (Tensor[(12, 8, 11), int64], Tensor[(12, 8, 11), float32], Tensor[(12, 8, 11), float64], Tensor[(12, 8, 11), int64], Tensor[(12, 8, 11), float64]) {
  %814 = @func_2107() /* ty=(Tensor[(8, 11, 4), float64], Tensor[(12, 8, 11), float32]) */;
  %815 = @func_2238() /* ty=(Tensor[(12, 8, 11), int64],) */;
  %816 = @func_5772() /* ty=(Tensor[(12, 8, 11), float64], Tensor[(12, 8, 11), float64], Tensor[(12, 8, 11), float64], Tensor[(990), uint32], Tensor[(15, 6, 11), uint32], Tensor[(8, 11, 4), float32]) */;
  %817 = @func_3349() /* ty=Tensor[(12, 8, 11), int64] */;
  %818 = %814.1;
  %819 = @func_9620() /* ty=Tensor[(12, 8, 11), float64] */;
  %820 = %815.0;
  %821 = %816.1;
  (%817, %818, %819, %820, %821)
}

def @func_8770() -> (Tensor[(352), float32],) {
  %822 = @func_6996() /* ty=(Tensor[(8, 11, 4), float64], Tensor[(352), float32]) */;
  %823 = %822.1;
  (%823,)
}

def @func_6054() -> Tensor[(990), uint32] {
  %824 = @func_2121() /* ty=(Tensor[(12, 7, 6), float32], Tensor[(15, 6, 11), uint32], Tensor[(990), uint32]) */;
  %824.2
}

def @func_3522() -> Tensor[(12, 8, 11), float64] {
  %825 = @func_2774() /* ty=(Tensor[(12, 8, 11), float64],) */;
  %825.0
}

def @func_10103() -> (Tensor[(12, 8, 11), float64],) {
  %826 = @func_6343() /* ty=(Tensor[(12, 8, 11), float64], Tensor[(12, 8, 11), float64], Tensor[(12, 8, 11), float64]) */;
  %827 = %826.1;
  (%827,)
}

def @func_6528() -> (Tensor[(12, 8, 11), float32], Tensor[(12, 8, 11), float32]) {
  %828 = @func_6483() /* ty=(Tensor[(12, 8, 11), float64], Tensor[(12, 8, 11), float64], Tensor[(12, 8, 11), float32]) */;
  %829 = @func_1741() /* ty=(Tensor[(12, 8, 11), float32],) */;
  %830 = %828.2;
  %831 = %829.0;
  (%830, %831)
}

def @func_5508() -> (Tensor[(15, 6, 11), uint32], Tensor[(352), float32], Tensor[(12, 8, 11), float64]) {
  %832 = @func_5221() /* ty=(Tensor[(15, 6, 11), uint32],) */;
  %833 = @func_3796() /* ty=(Tensor[(352), float32],) */;
  %834 = %832.0;
  %835 = %833.0;
  %836 = @func_1117() /* ty=Tensor[(12, 8, 11), float64] */;
  (%834, %835, %836)
}

def @func_13198() -> (Tensor[(12, 8, 11), float64], Tensor[(12, 8, 11), float32], Tensor[(12, 8, 11), float64], Tensor[(12, 8, 11), float64], Tensor[(8, 11, 4), uint32]) {
  %837 = @func_12479() /* ty=(Tensor[(12, 8, 11), float32],) */;
  %838 = @func_6803() /* ty=Tensor[(8, 11, 4), float32] */;
  %839 = @func_8453() /* ty=(Tensor[(12, 8, 11), float64], Tensor[(8, 11, 4), float32]) */;
  %840 = %839.1;
  %841 = cast(%840, dtype="uint32") /* ty=Tensor[(8, 11, 4), uint32] */;
  %842 = shape_of(%838, dtype="int32") /* ty=Tensor[(3), int32] */;
  %843 = cast(%838, dtype="uint32") /* ty=Tensor[(8, 11, 4), uint32] */;
  %844 = dyn.reshape(%841, %842, newshape=[]) /* ty=Tensor[(?, ?, ?), uint32] */;
  %845 = @func_2756() /* ty=Tensor[(12, 8, 11), float64] */;
  %846 = %837.0;
  %847 = @func_11319() /* ty=Tensor[(12, 8, 11), float64] */;
  %848 = @func_11965() /* ty=Tensor[(12, 8, 11), float64] */;
  %849 = bitwise_or(%843, %844) /* ty=Tensor[(8, 11, 4), uint32] */;
  (%845, %846, %847, %848, %849)
}

def @func_5008() -> (Tensor[(8, 11, 4), float64],) {
  %850 = @func_2153() /* ty=(Tensor[(12, 8, 11), float32], Tensor[(12, 8, 11), float64], Tensor[(352), float32], Tensor[(8, 11, 4), float64]) */;
  %851 = %850.3;
  (%851,)
}

def @func_11761() -> (Tensor[(16, 16, 13), float64],) {
  %852 = @func_8691() /* ty=(Tensor[(352), float32], Tensor[(11, 15, 5), uint32], Tensor[(825), uint32], Tensor[(16, 16, 13), float64]) */;
  %853 = %852.3;
  (%853,)
}

def @func_5947(%var_5922: Tensor[(9, 10, 1), float64]) -> Tensor[(9, 10, 1), float64] {
  %854 = cast(%var_5922, dtype="float64") /* ty=Tensor[(9, 10, 1), float64] */;
  cos(%854) /* ty=Tensor[(9, 10, 1), float64] */
}

def @func_10463(%var_10432: Tensor[(8, 11, 4), uint64]) -> Tensor[(8, 11, 4), float32] {
  %855 = @func_8376() /* ty=(Tensor[(8, 11, 4), uint64],) */;
  %856 = %855.0;
  %857 = cast(%var_10432, dtype="float32") /* ty=Tensor[(8, 11, 4), float32] */;
  %858 = shape_of(%856, dtype="int32") /* ty=Tensor[(3), int32] */;
  %859 = cast(%856, dtype="float32") /* ty=Tensor[(8, 11, 4), float32] */;
  %860 = dyn.reshape(%857, %858, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  power(%859, %860) /* ty=Tensor[(8, 11, 4), float32] */
}

def @func_9943() -> (Tensor[(352), float32],) {
  %861 = @func_2306() /* ty=(Tensor[(352), float32], Tensor[(352), float32]) */;
  %862 = %861.1;
  (%862,)
}

def @func_7975() -> Tensor[(12, 8, 11), float32] {
  %863 = @func_4110() /* ty=(Tensor[(16, 16, 13), float64], Tensor[(12, 8, 11), float32]) */;
  %863.1
}

def @func_12738(%var_12725: Tensor[(352), float32]) -> (Tensor[(12, 8, 11), float64], Tensor[(12, 8, 11), int8], Tensor[(8, 11, 4), float32], Tensor[(352), float32], Tensor[(12, 8, 11), float64]) {
  %864 = @func_5351() /* ty=Tensor[(12, 8, 11), float64] */;
  %865 = cast(%864, dtype="float64") /* ty=Tensor[(12, 8, 11), float64] */;
  %866 = reshape(%865, newshape=[12, 8, 11]) /* ty=Tensor[(12, 8, 11), float64] */;
  %867 = cast(%var_12725, dtype="float32") /* ty=Tensor[(352), float32] */;
  %868 = reshape(%867, newshape=[352]) /* ty=Tensor[(352), float32] */;
  %869 = @func_9289(%868) /* ty=(Tensor[(352), int16], Tensor[(8, 11, 4), float32]) */;
  %870 = cast(%var_12725, dtype="float32") /* ty=Tensor[(352), float32] */;
  %871 = %869.1;
  %872 = cast(%871, dtype="float32") /* ty=Tensor[(8, 11, 4), float32] */;
  %873 = reshape(%870, newshape=[352]) /* ty=Tensor[(352), float32] */;
  %874 = reshape(%872, newshape=[8, 11, 4]) /* ty=Tensor[(8, 11, 4), float32] */;
  %875 = @func_1201(%873, %874) /* ty=(Tensor[(12, 8, 11), float64], Tensor[(12, 8, 11), float64], Tensor[(8, 11, 4), float64], Tensor[(8, 11, 4), uint8], Tensor[(8, 11, 4), bool], Tensor[(8, 11, 4), float32]) */;
  %876 = @func_7687(%866) /* ty=Tensor[(12, 8, 11), int8] */;
  %877 = %875.0;
  (%864, %876, %871, %var_12725, %877)
}

def @func_3644() -> Tensor[(12, 8, 11), float32] {
  %878 = @func_1235() /* ty=(Tensor[(12, 8, 11), float64], Tensor[(12, 8, 11), float32], Tensor[(12, 8, 11), float32]) */;
  %878.1
}

def @func_14032() -> (Tensor[(12, 8, 11), float64], Tensor[(352), float32]) {
  %879 = @func_7600() /* ty=(Tensor[(12, 8, 11), float64],) */;
  %880 = @func_8770() /* ty=(Tensor[(352), float32],) */;
  %881 = %879.0;
  %882 = %880.0;
  (%881, %882)
}

def @func_5050() -> (Tensor[(12, 8, 11), float32], Tensor[(12, 8, 11), float32]) {
  %883 = @func_4084() /* ty=(Tensor[(12, 8, 11), float32],) */;
  %884 = %883.0;
  %885 = @func_3644() /* ty=Tensor[(12, 8, 11), float32] */;
  (%884, %885)
}

def @func_10148() -> Tensor[(352), float32] {
  %886 = @func_2306() /* ty=(Tensor[(352), float32], Tensor[(352), float32]) */;
  %886.0
}

def @func_11806() -> (Tensor[(12, 8, 11), float32], Tensor[(15, 6, 11), uint32]) {
  %887 = @func_2107() /* ty=(Tensor[(8, 11, 4), float64], Tensor[(12, 8, 11), float32]) */;
  %888 = @func_8102() /* ty=(Tensor[(15, 6, 11), uint32],) */;
  %889 = %887.1;
  %890 = %888.0;
  (%889, %890)
}

def @func_1779(%var_1770: Tensor[(8, 44), float32]) -> (Tensor[(12, 8, 11), float64], Tensor[(12, 8, 11), float32], Tensor[(8, 11, 4), bool], Tensor[(8, 44), float32]) {
  %891 = @func_1358() /* ty=(Tensor[(12, 8, 11), float64],) */;
  %892 = cast(%var_1770, dtype="float32") /* ty=Tensor[(8, 44), float32] */;
  %893 = reshape(%892, newshape=[352]) /* ty=Tensor[(352), float32] */;
  %894 = @func_1300(%893) /* ty=(Tensor[(8, 11, 4), bool], Tensor[(352), float32], Tensor[(12, 8, 11), float64], Tensor[(8, 11, 4), float64]) */;
  %895 = %891.0;
  %896 = @func_1400() /* ty=Tensor[(12, 8, 11), float32] */;
  %897 = %894.0;
  (%895, %896, %897, %var_1770)
}

def @func_15407() -> Tensor[(12, 8, 11), float32] {
  @func_15272() /* ty=Tensor[(12, 8, 11), float32] */
}

def @main(%var_15529: Tensor[(8, 6, 9), bool]) -> Tensor[(8, 6, 9), bool] {
  %898 = cast(%var_15529, dtype="bool") /* ty=Tensor[(8, 6, 9), bool] */;
  %899 = shape_of(meta[relay.Constant][26] /* ty=Tensor[(8, 6, 9), bool] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %900 = cast(meta[relay.Constant][26] /* ty=Tensor[(8, 6, 9), bool] */, dtype="bool") /* ty=Tensor[(8, 6, 9), bool] */;
  %901 = dyn.reshape(%898, %899, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  logical_or(%900, %901) /* ty=Tensor[(8, 6, 9), bool] */
}

def @func_4903() -> (Tensor[(12, 8, 11), float32], Tensor[(12, 8, 11), float64]) {
  %902 = @func_4190() /* ty=(Tensor[(8, 11, 4), float32], Tensor[(12, 8, 11), float64], Tensor[(12, 8, 11), int64]) */;
  %903 = @func_4304() /* ty=Tensor[(12, 8, 11), float32] */;
  %904 = %902.1;
  (%903, %904)
}

def @func_1848(%var_1796: Tensor[(2, 16, 15), uint32], %var_1797: Tensor[(2, 16, 15), uint32], %var_1808: Tensor[(2, 16, 15), uint32]) -> (Tensor[(12, 8, 11), float32], Tensor[(2, 16, 15), uint16], Tensor[(352), float32], Tensor[(2, 16, 15), float32]) {
  %905 = @func_1741() /* ty=(Tensor[(12, 8, 11), float32],) */;
  %906 = cast(%var_1797, dtype="uint32") /* ty=Tensor[(2, 16, 15), uint32] */;
  %907 = shape_of(%var_1796, dtype="int32") /* ty=Tensor[(3), int32] */;
  %908 = cast(%var_1796, dtype="uint32") /* ty=Tensor[(2, 16, 15), uint32] */;
  %909 = dyn.reshape(%906, %907, newshape=[]) /* ty=Tensor[(?, ?, ?), uint32] */;
  %910 = left_shift(%908, %909) /* ty=Tensor[(2, 16, 15), uint32] */;
  %911 = cast(%var_1797, dtype="uint16") /* ty=Tensor[(2, 16, 15), uint16] */;
  %912 = shape_of(%910, dtype="int32") /* ty=Tensor[(3), int32] */;
  %913 = cast(%910, dtype="uint16") /* ty=Tensor[(2, 16, 15), uint16] */;
  %914 = dyn.reshape(%911, %912, newshape=[]) /* ty=Tensor[(?, ?, ?), uint16] */;
  %915 = @func_1559() /* ty=(Tensor[(12, 8, 11), uint16], Tensor[(8, 11, 4), float64], Tensor[(352), float32], Tensor[(8, 11, 4), bool]) */;
  %916 = cast(%var_1808, dtype="int8") /* ty=Tensor[(2, 16, 15), int8] */;
  %917 = shape_of(%var_1797, dtype="int32") /* ty=Tensor[(3), int32] */;
  %918 = cast(%var_1797, dtype="int8") /* ty=Tensor[(2, 16, 15), int8] */;
  %919 = dyn.reshape(%916, %917, newshape=[]) /* ty=Tensor[(?, ?, ?), int8] */;
  %920 = maximum(%918, %919) /* ty=Tensor[(2, 16, 15), int8] */;
  %921 = cast(%920, dtype="float32") /* ty=Tensor[(2, 16, 15), float32] */;
  %922 = %905.0;
  %923 = logical_xor(%913, %914) /* ty=Tensor[(2, 16, 15), uint16] */;
  %924 = %915.2;
  %925 = asinh(%921) /* ty=Tensor[(2, 16, 15), float32] */;
  (%922, %923, %924, %925)
}

def @func_4151(%var_4144: Tensor[(3, 10, 13), bool]) -> Tensor[(3, 10, 13), bool] {
  %926 = cast(True /* ty=bool */, dtype="bool") /* ty=bool */;
  %927 = cast(%var_4144, dtype="bool") /* ty=Tensor[(3, 10, 13), bool] */;
  logical_and(%926, %927) /* ty=Tensor[(3, 10, 13), bool] */
}

def @func_13520() -> Tensor[(8, 11, 4), uint64] {
  @func_9074() /* ty=Tensor[(8, 11, 4), uint64] */
}

def @func_7710() -> (Tensor[(8, 11, 4), float64],) {
  %928 = @func_3145() /* ty=(Tensor[(12, 8, 11), float64], Tensor[(15, 6, ?), bool], Tensor[(12, 8, 11), float32], Tensor[(990), uint32], Tensor[(8, 11, 4), float64], Tensor[(15, 6, ?), float32], Tensor[(12, 8, 11), float64], Tensor[(12, 8, 11), float64], Tensor[(12, 8, 11), float32], Tensor[(15, 6, 11), bool]) */;
  %929 = %928.4;
  (%929,)
}

def @func_8102() -> (Tensor[(15, 6, 11), uint32],) {
  %930 = @func_5221() /* ty=(Tensor[(15, 6, 11), uint32],) */;
  %931 = %930.0;
  (%931,)
}

def @func_2622() -> (Tensor[(12, 8, 11), float64], Tensor[(12, 8, 11), float64]) {
  %932 = @func_2045() /* ty=(Tensor[(12, 8, 11), float64], Tensor[(12, 8, 11), float64]) */;
  %933 = @func_1358() /* ty=(Tensor[(12, 8, 11), float64],) */;
  %934 = %932.1;
  %935 = %933.0;
  (%934, %935)
}

def @func_13538(%var_13527: Tensor[(3, 2, 15), uint8]) -> Tensor[(3, 2, 15), bool] {
  %936 = cast(%var_13527, dtype="bool") /* ty=Tensor[(3, 2, 15), bool] */;
  %937 = shape_of(meta[relay.Constant][27] /* ty=Tensor[(3, 2, 15), uint8] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %938 = cast(meta[relay.Constant][27] /* ty=Tensor[(3, 2, 15), uint8] */, dtype="bool") /* ty=Tensor[(3, 2, 15), bool] */;
  %939 = dyn.reshape(%936, %937, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  less(%938, %939) /* ty=Tensor[(3, 2, 15), bool] */
}

def @func_1996(%var_1989: Tensor[(11, 15, 5), uint32]) -> Tensor[(11, 15, 5), uint32] {
  %940 = cast(meta[relay.Constant][28] /* ty=Tensor[(11, 15, 5), uint32] */, dtype="uint32") /* ty=Tensor[(11, 15, 5), uint32] */;
  %941 = shape_of(%var_1989, dtype="int32") /* ty=Tensor[(3), int32] */;
  %942 = cast(%var_1989, dtype="uint32") /* ty=Tensor[(11, 15, 5), uint32] */;
  %943 = dyn.reshape(%940, %941, newshape=[]) /* ty=Tensor[(?, ?, ?), uint32] */;
  right_shift(%942, %943) /* ty=Tensor[(11, 15, 5), uint32] */
}

def @func_1300(%var_1273: Tensor[(352), float32]) -> (Tensor[(8, 11, 4), bool], Tensor[(352), float32], Tensor[(12, 8, 11), float64], Tensor[(8, 11, 4), float64]) {
  %944 = cast(%var_1273, dtype="float32") /* ty=Tensor[(352), float32] */;
  %945 = cast(%var_1273, dtype="float32") /* ty=Tensor[(352), float32] */;
  %946 = reshape(%944, newshape=[352]) /* ty=Tensor[(352), float32] */;
  %947 = reshape(%945, newshape=[8, 11, 4]) /* ty=Tensor[(8, 11, 4), float32] */;
  %948 = @func_1201(%946, %947) /* ty=(Tensor[(12, 8, 11), float64], Tensor[(12, 8, 11), float64], Tensor[(8, 11, 4), float64], Tensor[(8, 11, 4), uint8], Tensor[(8, 11, 4), bool], Tensor[(8, 11, 4), float32]) */;
  %949 = @func_1235() /* ty=(Tensor[(12, 8, 11), float64], Tensor[(12, 8, 11), float32], Tensor[(12, 8, 11), float32]) */;
  %950 = %949.2;
  %951 = cast(%950, dtype="float32") /* ty=Tensor[(12, 8, 11), float32] */;
  %952 = cosh(%951) /* ty=Tensor[(12, 8, 11), float32] */;
  %953 = cast(%952, dtype="float64") /* ty=Tensor[(12, 8, 11), float64] */;
  %954 = %948.4;
  %955 = cast(%954, dtype="float32") /* ty=Tensor[(8, 11, 4), float32] */;
  %956 = cast(%var_1273, dtype="float32") /* ty=Tensor[(352), float32] */;
  %957 = reshape(%955, newshape=[352]) /* ty=Tensor[(352), float32] */;
  %958 = reshape(%956, newshape=[8, 11, 4]) /* ty=Tensor[(8, 11, 4), float32] */;
  %959 = @func_1201(%957, %958) /* ty=(Tensor[(12, 8, 11), float64], Tensor[(12, 8, 11), float64], Tensor[(8, 11, 4), float64], Tensor[(8, 11, 4), uint8], Tensor[(8, 11, 4), bool], Tensor[(8, 11, 4), float32]) */;
  %960 = log(%953) /* ty=Tensor[(12, 8, 11), float64] */;
  %961 = %959.2;
  (%954, %var_1273, %960, %961)
}

def @func_2808() -> Tensor[(12, 8, 11), float64] {
  %962 = @func_2774() /* ty=(Tensor[(12, 8, 11), float64],) */;
  %963 = %962.0;
  %964 = cast(%963, dtype="float64") /* ty=Tensor[(12, 8, 11), float64] */;
  sqrt(%964) /* ty=Tensor[(12, 8, 11), float64] */
}

def @func_10138() -> (Tensor[(352), float32], Tensor[(12, 8, 11), float32]) {
  %965 = @func_9943() /* ty=(Tensor[(352), float32],) */;
  %966 = %965.0;
  %967 = @func_3644() /* ty=Tensor[(12, 8, 11), float32] */;
  (%966, %967)
}

def @func_13653() -> (Tensor[(990), uint32], Tensor[(352), float32], Tensor[(12, 8, 11), float32]) {
  %968 = @func_8522() /* ty=(Tensor[(990), uint32], Tensor[(12, 8, 11), float64]) */;
  %969 = @func_6748() /* ty=(Tensor[(15, 6, 11), float64], Tensor[(15, 6, 11), float64], Tensor[(352), float32], Tensor[(12, 8, 11), int64]) */;
  %970 = @func_4110() /* ty=(Tensor[(16, 16, 13), float64], Tensor[(12, 8, 11), float32]) */;
  %971 = %968.0;
  %972 = %969.2;
  %973 = %970.1;
  (%971, %972, %973)
}

def @func_3605() -> (Tensor[(12, 8, 11), float64], Tensor[(12, 8, 11), float64], Tensor[(990), uint32], Tensor[(990), uint32], Tensor[(12, 8, 11), float64], Tensor[(12, 8, 11), int64], Tensor[(12, 8, 11), float64], Tensor[(8, 11, 4), float64]) {
  %974 = @func_2973() /* ty=(Tensor[(12, 8, 11), float64],) */;
  %975 = cast(meta[relay.Constant][29] /* ty=Tensor[(990), uint32] */, dtype="uint32") /* ty=Tensor[(990), uint32] */;
  %976 = reshape(%975, newshape=[990]) /* ty=Tensor[(990), uint32] */;
  %977 = @func_1625(%976) /* ty=(Tensor[(12, 8, 11), float64], Tensor[(352), int8], Tensor[(352), float32], Tensor[(990), uint32]) */;
  %978 = @func_2205() /* ty=(Tensor[(12, 8, 11), float32], Tensor[(12, 8, 11), float64], Tensor[(12, 8, 11), float64]) */;
  %979 = @func_2574() /* ty=(Tensor[(352), float32], Tensor[(12, 8, 11), float64], Tensor[(990), uint32], Tensor[(12, 8, 11), float64], Tensor[(12, 8, 11), int64]) */;
  %980 = @func_3508() /* ty=(Tensor[(8, 11, 4), float64],) */;
  %981 = %974.0;
  %982 = @func_3522() /* ty=Tensor[(12, 8, 11), float64] */;
  %983 = %977.3;
  %984 = %978.2;
  %985 = %979.4;
  %986 = @func_2808() /* ty=Tensor[(12, 8, 11), float64] */;
  %987 = %980.0;
  (%981, %982, %983, meta[relay.Constant][29] /* ty=Tensor[(990), uint32] */, %984, %985, %986, %987)
}

def @func_11720(%var_11702: Tensor[(8, 1, 3), uint16], %var_11703: Tensor[(8, 5, 3), uint16], %var_11709: Tensor[(8, 5, 3), bool]) -> (Tensor[(8, 5, 3), int16], Tensor[(990), uint32], Tensor[(208), float64]) {
  %988 = cast(%var_11702, dtype="bool") /* ty=Tensor[(8, 1, 3), bool] */;
  %989 = cast(%var_11703, dtype="bool") /* ty=Tensor[(8, 5, 3), bool] */;
  %990 = less(%988, %989) /* ty=Tensor[(8, 5, 3), bool] */;
  %991 = cast(%var_11709, dtype="int16") /* ty=Tensor[(8, 5, 3), int16] */;
  %992 = shape_of(%990, dtype="int32") /* ty=Tensor[(3), int32] */;
  %993 = cast(%990, dtype="int16") /* ty=Tensor[(8, 5, 3), int16] */;
  %994 = dyn.reshape(%991, %992, newshape=[]) /* ty=Tensor[(?, ?, ?), int16] */;
  %995 = cast(meta[relay.Constant][30] /* ty=Tensor[(208), float64] */, dtype="float64") /* ty=Tensor[(208), float64] */;
  %996 = reshape(%995, newshape=[52, 4]) /* ty=Tensor[(52, 4), float64] */;
  %997 = @func_7508(%996) /* ty=(Tensor[(990), uint32], Tensor[(8, 11, 4), float64], Tensor[(8, 2, 13), bool], Tensor[(52, 4), float64]) */;
  %998 = minimum(%993, %994) /* ty=Tensor[(8, 5, 3), int16] */;
  %999 = %997.0;
  (%998, %999, meta[relay.Constant][30] /* ty=Tensor[(208), float64] */)
}

def @func_15337(%var_15321: Tensor[(10, 2, 3), uint8], %var_15322: Tensor[(10, 2, 3), uint8]) -> (Tensor[(10, 2, 3), uint8], Tensor[(825), bool]) {
  %1000 = cast(%var_15322, dtype="uint8") /* ty=Tensor[(10, 2, 3), uint8] */;
  %1001 = shape_of(%var_15321, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1002 = cast(%var_15321, dtype="uint8") /* ty=Tensor[(10, 2, 3), uint8] */;
  %1003 = dyn.reshape(%1000, %1001, newshape=[]) /* ty=Tensor[(?, ?, ?), uint8] */;
  %1004 = @func_8691() /* ty=(Tensor[(352), float32], Tensor[(11, 15, 5), uint32], Tensor[(825), uint32], Tensor[(16, 16, 13), float64]) */;
  %1005 = %1004.2;
  %1006 = cast(meta[relay.Constant][31] /* ty=Tensor[(825), uint32] */, dtype="bool") /* ty=Tensor[(825), bool] */;
  %1007 = shape_of(%1005, dtype="int32") /* ty=Tensor[(1), int32] */;
  %1008 = cast(%1005, dtype="bool") /* ty=Tensor[(825), bool] */;
  %1009 = dyn.reshape(%1006, %1007, newshape=[]) /* ty=Tensor[(?), bool] */;
  %1010 = maximum(%1002, %1003) /* ty=Tensor[(10, 2, 3), uint8] */;
  %1011 = greater(%1008, %1009) /* ty=Tensor[(825), bool] */;
  (%1010, %1011)
}

def @func_12863() -> Tensor[(12, 8, 11), float64] {
  @func_1117() /* ty=Tensor[(12, 8, 11), float64] */
}

def @func_4802(%var_4788: Tensor[(352), float32], %var_4789: Tensor[(110, 9), uint32]) -> (Tensor[(12, 8, 11), float32], Tensor[(352), int8], Tensor[(352), float32], Tensor[(110, 9), uint32]) {
  %1012 = @func_1971() /* ty=(Tensor[(12, 8, 11), float64], Tensor[(12, 8, 11), float32]) */;
  %1013 = cast(%var_4788, dtype="float32") /* ty=Tensor[(352), float32] */;
  %1014 = cast(%var_4789, dtype="uint32") /* ty=Tensor[(110, 9), uint32] */;
  %1015 = reshape(%1013, newshape=[352]) /* ty=Tensor[(352), float32] */;
  %1016 = reshape(%1014, newshape=[990]) /* ty=Tensor[(990), uint32] */;
  %1017 = @func_1580(%1015, %1016) /* ty=(Tensor[(352), int8], Tensor[(12, 8, 11), float64], Tensor[(990), uint32]) */;
  %1018 = %1012.1;
  %1019 = %1017.0;
  (%1018, %1019, %var_4788, %var_4789)
}

def @func_15053(%var_15019: Tensor[(14, 16, 4), int32], %var_15020: Tensor[(14, 16, 4), int32]) -> (Tensor[(14, 16, 4), int32], Tensor[(15, 6, 11), uint32], Tensor[(14, 16, 4), float64], Tensor[(990), uint32], Tensor[(352), float32], Tensor[(8, 11, 4), float64]) {
  %1020 = cast(%var_15020, dtype="int32") /* ty=Tensor[(14, 16, 4), int32] */;
  %1021 = shape_of(%var_15019, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1022 = cast(%var_15019, dtype="int32") /* ty=Tensor[(14, 16, 4), int32] */;
  %1023 = dyn.reshape(%1020, %1021, newshape=[]) /* ty=Tensor[(?, ?, ?), int32] */;
  %1024 = @func_2121() /* ty=(Tensor[(12, 7, 6), float32], Tensor[(15, 6, 11), uint32], Tensor[(990), uint32]) */;
  %1025 = cast(%var_15020, dtype="float64") /* ty=Tensor[(14, 16, 4), float64] */;
  %1026 = @func_9903() /* ty=(Tensor[(990), uint32], Tensor[(990), uint32]) */;
  %1027 = @func_7384() /* ty=(Tensor[(352), float32],) */;
  %1028 = @func_2107() /* ty=(Tensor[(8, 11, 4), float64], Tensor[(12, 8, 11), float32]) */;
  %1029 = bitwise_xor(%1022, %1023) /* ty=Tensor[(14, 16, 4), int32] */;
  %1030 = %1024.1;
  %1031 = rsqrt(%1025) /* ty=Tensor[(14, 16, 4), float64] */;
  %1032 = %1026.0;
  %1033 = %1027.0;
  %1034 = %1028.0;
  (%1029, %1030, %1031, %1032, %1033, %1034)
}

def @func_4110() -> (Tensor[(16, 16, 13), float64], Tensor[(12, 8, 11), float32]) {
  %1035 = cast(meta[relay.Constant][32] /* ty=Tensor[(16, 16, 13), float64] */, dtype="float64") /* ty=Tensor[(16, 16, 13), float64] */;
  %1036 = @func_2153() /* ty=(Tensor[(12, 8, 11), float32], Tensor[(12, 8, 11), float64], Tensor[(352), float32], Tensor[(8, 11, 4), float64]) */;
  %1037 = sinh(%1035) /* ty=Tensor[(16, 16, 13), float64] */;
  %1038 = %1036.0;
  (%1037, %1038)
}

def @func_5701() -> (Tensor[(12, 8, 11), float32], Tensor[(8, 11, 4), float64]) {
  %1039 = @func_5008() /* ty=(Tensor[(8, 11, 4), float64],) */;
  %1040 = @func_4304() /* ty=Tensor[(12, 8, 11), float32] */;
  %1041 = %1039.0;
  (%1040, %1041)
}

def @func_13621() -> Tensor[(8, 11, 4), float64] {
  %1042 = @func_9321() /* ty=(Tensor[(8, 11, 4), float64], Tensor[(12, 8, 11), float64]) */;
  %1042.0
}

def @func_2238() -> (Tensor[(12, 8, 11), int64],) {
  %1043 = @func_1971() /* ty=(Tensor[(12, 8, 11), float64], Tensor[(12, 8, 11), float32]) */;
  %1044 = %1043.1;
  %1045 = @func_1741() /* ty=(Tensor[(12, 8, 11), float32],) */;
  %1046 = %1045.0;
  %1047 = cast(%1046, dtype="int64") /* ty=Tensor[(12, 8, 11), int64] */;
  %1048 = shape_of(%1044, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1049 = cast(%1044, dtype="int64") /* ty=Tensor[(12, 8, 11), int64] */;
  %1050 = dyn.reshape(%1047, %1048, newshape=[]) /* ty=Tensor[(?, ?, ?), int64] */;
  %1051 = left_shift(%1049, %1050) /* ty=Tensor[(12, 8, 11), int64] */;
  (%1051,)
}

def @func_6557() -> Tensor[(12, 8, 11), float64] {
  %1052 = @func_2973() /* ty=(Tensor[(12, 8, 11), float64],) */;
  %1052.0
}

def @func_4706(%var_4662: Tensor[(10, 15, 13), float32]) -> (Tensor[(10, 15, 13), float32], Tensor[(10, 15, 13), uint16], Tensor[(12, 8, 11), float64]) {
  %1053 = cast(%var_4662, dtype="float32") /* ty=Tensor[(10, 15, 13), float32] */;
  %1054 = log10(%1053) /* ty=Tensor[(10, 15, 13), float32] */;
  %1055 = cast(%var_4662, dtype="float64") /* ty=Tensor[(10, 15, 13), float64] */;
  %1056 = shape_of(%1054, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1057 = cast(%1054, dtype="float64") /* ty=Tensor[(10, 15, 13), float64] */;
  %1058 = dyn.reshape(%1055, %1056, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %1059 = floor_mod(%1057, %1058) /* ty=Tensor[(10, 15, 13), float64] */;
  %1060 = cast(%1059, dtype="float32") /* ty=Tensor[(10, 15, 13), float32] */;
  %1061 = cast(%1054, dtype="float64") /* ty=Tensor[(10, 15, 13), float64] */;
  %1062 = rsqrt(%1061) /* ty=Tensor[(10, 15, 13), float64] */;
  %1063 = cast(%1062, dtype="uint16") /* ty=Tensor[(10, 15, 13), uint16] */;
  %1064 = shape_of(%1059, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1065 = cast(%1059, dtype="uint16") /* ty=Tensor[(10, 15, 13), uint16] */;
  %1066 = dyn.reshape(%1063, %1064, newshape=[]) /* ty=Tensor[(?, ?, ?), uint16] */;
  %1067 = atan(%1060) /* ty=Tensor[(10, 15, 13), float32] */;
  %1068 = left_shift(%1065, %1066) /* ty=Tensor[(10, 15, 13), uint16] */;
  %1069 = @func_2808() /* ty=Tensor[(12, 8, 11), float64] */;
  (%1067, %1068, %1069)
}

def @func_9407(%var_9387: Tensor[(90), float64]) -> (Tensor[(12, 8, 11), float64], Tensor[(12, 8, 11), float64], Tensor[(9, 10, 1), float64], Tensor[(90), float64], Tensor[(12, 8, 11), float64]) {
  %1070 = @func_3373() /* ty=(Tensor[(12, 8, 11), float32], Tensor[(12, 8, 11), float64]) */;
  %1071 = cast(%var_9387, dtype="float64") /* ty=Tensor[(90), float64] */;
  %1072 = reshape(%1071, newshape=[9, 10, 1]) /* ty=Tensor[(9, 10, 1), float64] */;
  %1073 = %1070.1;
  %1074 = @func_9203() /* ty=Tensor[(12, 8, 11), float64] */;
  %1075 = @func_5947(%1072) /* ty=Tensor[(9, 10, 1), float64] */;
  %1076 = @func_2756() /* ty=Tensor[(12, 8, 11), float64] */;
  (%1073, %1074, %1075, %var_9387, %1076)
}

def @func_2574() -> (Tensor[(352), float32], Tensor[(12, 8, 11), float64], Tensor[(990), uint32], Tensor[(12, 8, 11), float64], Tensor[(12, 8, 11), int64]) {
  %1077 = @func_1559() /* ty=(Tensor[(12, 8, 11), uint16], Tensor[(8, 11, 4), float64], Tensor[(352), float32], Tensor[(8, 11, 4), bool]) */;
  %1078 = cast(meta[relay.Constant][33] /* ty=Tensor[(990), uint32] */, dtype="uint32") /* ty=Tensor[(990), uint32] */;
  %1079 = reshape(%1078, newshape=[990]) /* ty=Tensor[(990), uint32] */;
  %1080 = @func_1625(%1079) /* ty=(Tensor[(12, 8, 11), float64], Tensor[(352), int8], Tensor[(352), float32], Tensor[(990), uint32]) */;
  %1081 = @func_1463() /* ty=(Tensor[(12, 8, 11), float64], Tensor[(12, 8, 11), float64]) */;
  %1082 = @func_2238() /* ty=(Tensor[(12, 8, 11), int64],) */;
  %1083 = %1077.2;
  %1084 = %1080.0;
  %1085 = %1081.0;
  %1086 = %1082.0;
  (%1083, %1084, meta[relay.Constant][33] /* ty=Tensor[(990), uint32] */, %1085, %1086)
}

def @func_9289(%var_9266: Tensor[(352), float32]) -> (Tensor[(352), int16], Tensor[(8, 11, 4), float32]) {
  %1087 = @func_6615() /* ty=(Tensor[(352), float32], Tensor[(12, 8, 11), float32]) */;
  %1088 = %1087.0;
  %1089 = cast(%var_9266, dtype="int16") /* ty=Tensor[(352), int16] */;
  %1090 = shape_of(%1088, dtype="int32") /* ty=Tensor[(1), int32] */;
  %1091 = cast(%1088, dtype="int16") /* ty=Tensor[(352), int16] */;
  %1092 = dyn.reshape(%1089, %1090, newshape=[]) /* ty=Tensor[(?), int16] */;
  %1093 = right_shift(%1091, %1092) /* ty=Tensor[(352), int16] */;
  %1094 = @func_6803() /* ty=Tensor[(8, 11, 4), float32] */;
  (%1093, %1094)
}

def @func_4637() -> (Tensor[(12, 8, 11), float64], Tensor[(12, 8, 11), float32]) {
  %1095 = @func_2045() /* ty=(Tensor[(12, 8, 11), float64], Tensor[(12, 8, 11), float64]) */;
  %1096 = %1095.0;
  %1097 = @func_3644() /* ty=Tensor[(12, 8, 11), float32] */;
  (%1096, %1097)
}

def @func_4304() -> Tensor[(12, 8, 11), float32] {
  @func_3644() /* ty=Tensor[(12, 8, 11), float32] */
}

def @func_5351() -> Tensor[(12, 8, 11), float64] {
  %1098 = @func_2205() /* ty=(Tensor[(12, 8, 11), float32], Tensor[(12, 8, 11), float64], Tensor[(12, 8, 11), float64]) */;
  %1098.1
}

def @func_10748() -> Tensor[(12, 8, 11), float64] {
  %1099 = @func_10160() /* ty=(Tensor[(12, 8, 11), float64],) */;
  %1099.0
}

def @func_6132() -> (Tensor[(12, 8, 11), float64], Tensor[(12, 8, 11), float64], Tensor[(990), uint32], Tensor[(352), int8], Tensor[(352), float32]) {
  %1100 = @func_4328() /* ty=(Tensor[(12, 8, 11), float64],) */;
  %1101 = cast(meta[relay.Constant][34] /* ty=Tensor[(352), float32] */, dtype="float32") /* ty=Tensor[(352), float32] */;
  %1102 = reshape(%1101, newshape=[352]) /* ty=Tensor[(352), float32] */;
  %1103 = @func_5866(%1102) /* ty=(Tensor[(12, 8, 11), float64], Tensor[(12, 8, 11), float64], Tensor[(352), int8], Tensor[(352), float32], Tensor[(990), uint32], Tensor[(12, 8, 11), float64]) */;
  %1104 = @func_2955() /* ty=Tensor[(12, 8, 11), float64] */;
  %1105 = %1100.0;
  %1106 = @func_6054() /* ty=Tensor[(990), uint32] */;
  %1107 = %1103.2;
  (%1104, %1105, %1106, %1107, meta[relay.Constant][34] /* ty=Tensor[(352), float32] */)
}

def @func_4355(%var_4349: Tensor[(352), float32]) -> (Tensor[(12, 8, 11), float32], Tensor[(8, 11, 4), bool], Tensor[(352), float32]) {
  %1108 = @func_4052() /* ty=(Tensor[(12, 8, 11), float32], Tensor[(12, 8, 11), float32]) */;
  %1109 = cast(%var_4349, dtype="float32") /* ty=Tensor[(352), float32] */;
  %1110 = reshape(%1109, newshape=[352]) /* ty=Tensor[(352), float32] */;
  %1111 = @func_1300(%1110) /* ty=(Tensor[(8, 11, 4), bool], Tensor[(352), float32], Tensor[(12, 8, 11), float64], Tensor[(8, 11, 4), float64]) */;
  %1112 = %1108.0;
  %1113 = %1111.0;
  (%1112, %1113, %var_4349)
}

def @func_9203() -> Tensor[(12, 8, 11), float64] {
  %1114 = @func_4637() /* ty=(Tensor[(12, 8, 11), float64], Tensor[(12, 8, 11), float32]) */;
  %1114.0
}

def @func_7384() -> (Tensor[(352), float32],) {
  %1115 = @func_3796() /* ty=(Tensor[(352), float32],) */;
  %1116 = %1115.0;
  (%1116,)
}

def @func_9543() -> (Tensor[(15, 6, 11), uint32], Tensor[(12, 8, 11), float64]) {
  %1117 = @func_5221() /* ty=(Tensor[(15, 6, 11), uint32],) */;
  %1118 = @func_2774() /* ty=(Tensor[(12, 8, 11), float64],) */;
  %1119 = %1117.0;
  %1120 = %1118.0;
  (%1119, %1120)
}

def @func_7246() -> (Tensor[(990), uint32],) {
  %1121 = @func_5772() /* ty=(Tensor[(12, 8, 11), float64], Tensor[(12, 8, 11), float64], Tensor[(12, 8, 11), float64], Tensor[(990), uint32], Tensor[(15, 6, 11), uint32], Tensor[(8, 11, 4), float32]) */;
  %1122 = %1121.3;
  (%1122,)
}

def @func_9006(%var_8994: Tensor[(825), uint32]) -> (Tensor[(12, 8, 11), float64], Tensor[(8, 11, 4), float64], Tensor[(208), float64], Tensor[(12, 8, 11), float64], Tensor[(12, 8, 11), float64], Tensor[(12, 8, 11), float32], Tensor[(8, 11, 4), float64], Tensor[(990), float64], Tensor[(8, 11, 4), float64], Tensor[(15, 6, 11), uint32], Tensor[(825), uint32]) {
  %1123 = @func_4328() /* ty=(Tensor[(12, 8, 11), float64],) */;
  %1124 = cast(meta[relay.Constant][35] /* ty=Tensor[(208), float64] */, dtype="float64") /* ty=Tensor[(208), float64] */;
  %1125 = reshape(%1124, newshape=[52, 4]) /* ty=Tensor[(52, 4), float64] */;
  %1126 = @func_7508(%1125) /* ty=(Tensor[(990), uint32], Tensor[(8, 11, 4), float64], Tensor[(8, 2, 13), bool], Tensor[(52, 4), float64]) */;
  %1127 = @func_3373() /* ty=(Tensor[(12, 8, 11), float32], Tensor[(12, 8, 11), float64]) */;
  %1128 = @func_5379() /* ty=(Tensor[(12, 8, 11), float64],) */;
  %1129 = @func_4084() /* ty=(Tensor[(12, 8, 11), float32],) */;
  %1130 = @func_7710() /* ty=(Tensor[(8, 11, 4), float64],) */;
  %1131 = @func_8539() /* ty=(Tensor[(990), float64],) */;
  %1132 = @func_5577() /* ty=(Tensor[(8, 11, 4), float64],) */;
  %1133 = cast(%var_8994, dtype="uint32") /* ty=Tensor[(825), uint32] */;
  %1134 = reshape(%1133, newshape=[825]) /* ty=Tensor[(825), uint32] */;
  %1135 = @func_4619(%1134) /* ty=(Tensor[(12, 8, 11), float64], Tensor[(12, 8, 11), float64], Tensor[(15, 6, 11), uint32], Tensor[(5, 198), uint32], Tensor[(825), bool], Tensor[(12, 8, 11), float64], Tensor[(8, 11, 4), float32], Tensor[(12, 8, 11), float64], Tensor[(8, 11, 4), float32], Tensor[(12, 8, 11), int64]) */;
  %1136 = %1123.0;
  %1137 = %1126.1;
  %1138 = %1127.1;
  %1139 = %1128.0;
  %1140 = %1129.0;
  %1141 = %1130.0;
  %1142 = %1131.0;
  %1143 = %1132.0;
  %1144 = %1135.2;
  (%1136, %1137, meta[relay.Constant][35] /* ty=Tensor[(208), float64] */, %1138, %1139, %1140, %1141, %1142, %1143, %1144, %var_8994)
}

def @func_12944(%var_12928: Tensor[(990), uint32]) -> (Tensor[(12, 8, 11), float64], Tensor[(16, 16, 13), float64], Tensor[(990), uint32], Tensor[(12, 8, 11), float64]) {
  %1145 = @func_11235() /* ty=(Tensor[(12, 8, 11), int64], Tensor[(12, 8, 11), float32], Tensor[(12, 8, 11), float64], Tensor[(12, 8, 11), int64], Tensor[(12, 8, 11), float64]) */;
  %1146 = cast(%var_12928, dtype="uint32") /* ty=Tensor[(990), uint32] */;
  %1147 = reshape(%1146, newshape=[330, 3]) /* ty=Tensor[(330, 3), uint32] */;
  %1148 = @func_5361(%1147) /* ty=(Tensor[(16, 16, 13), float64], Tensor[(12, 8, 11), float64], Tensor[(330, 3), uint32]) */;
  %1149 = @func_2973() /* ty=(Tensor[(12, 8, 11), float64],) */;
  %1150 = %1145.2;
  %1151 = %1148.0;
  %1152 = %1149.0;
  (%1150, %1151, %var_12928, %1152)
}

def @func_8293() -> (Tensor[(990), uint32],) {
  %1153 = @func_7310() /* ty=(Tensor[(12, 8, 11), float64], Tensor[(352), float32], Tensor[(990), uint32]) */;
  %1154 = %1153.2;
  (%1154,)
}

def @func_12417() -> (Tensor[(12, 8, 11), float64], Tensor[(15, 6, 11), uint32], Tensor[(352), float32]) {
  %1155 = @func_11011() /* ty=(Tensor[(12, 8, 11), float64], Tensor[(12, 8, 11), float64], Tensor[(8, 11, 4), float64]) */;
  %1156 = @func_5445() /* ty=(Tensor[(12, 8, 11), float64], Tensor[(12, 8, 11), float64], Tensor[(15, 6, 11), uint32], Tensor[(352), float32]) */;
  %1157 = @func_5445() /* ty=(Tensor[(12, 8, 11), float64], Tensor[(12, 8, 11), float64], Tensor[(15, 6, 11), uint32], Tensor[(352), float32]) */;
  %1158 = %1155.1;
  %1159 = %1156.2;
  %1160 = %1157.3;
  (%1158, %1159, %1160)
}

def @func_2107() -> (Tensor[(8, 11, 4), float64], Tensor[(12, 8, 11), float32]) {
  %1161 = @func_1559() /* ty=(Tensor[(12, 8, 11), uint16], Tensor[(8, 11, 4), float64], Tensor[(352), float32], Tensor[(8, 11, 4), bool]) */;
  %1162 = @func_1741() /* ty=(Tensor[(12, 8, 11), float32],) */;
  %1163 = %1161.1;
  %1164 = %1162.0;
  (%1163, %1164)
}

def @func_14211(%var_14185: Tensor[(6, 2, 15), float32]) -> (Tensor[(352), float32], Tensor[(6, 2, 15), float32]) {
  %1165 = @func_2306() /* ty=(Tensor[(352), float32], Tensor[(352), float32]) */;
  %1166 = cast(%var_14185, dtype="float32") /* ty=Tensor[(6, 2, 15), float32] */;
  %1167 = asin(%1166) /* ty=Tensor[(6, 2, 15), float32] */;
  %1168 = cast(%1167, dtype="float32") /* ty=Tensor[(6, 2, 15), float32] */;
  %1169 = %1165.1;
  %1170 = cos(%1168) /* ty=Tensor[(6, 2, 15), float32] */;
  (%1169, %1170)
}

def @func_12810() -> Tensor[(8, 11, 4), float64] {
  %1171 = @func_6996() /* ty=(Tensor[(8, 11, 4), float64], Tensor[(352), float32]) */;
  %1171.0
}

def @func_2205() -> (Tensor[(12, 8, 11), float32], Tensor[(12, 8, 11), float64], Tensor[(12, 8, 11), float64]) {
  %1172 = @func_1971() /* ty=(Tensor[(12, 8, 11), float64], Tensor[(12, 8, 11), float32]) */;
  %1173 = @func_1971() /* ty=(Tensor[(12, 8, 11), float64], Tensor[(12, 8, 11), float32]) */;
  %1174 = @func_2062() /* ty=(Tensor[(12, 8, 11), float64],) */;
  %1175 = %1172.1;
  %1176 = %1173.0;
  %1177 = %1174.0;
  (%1175, %1176, %1177)
}

def @func_3349() -> Tensor[(12, 8, 11), int64] {
  %1178 = @func_2238() /* ty=(Tensor[(12, 8, 11), int64],) */;
  %1178.0
}

def @func_12479() -> (Tensor[(12, 8, 11), float32],) {
  %1179 = @func_3644() /* ty=Tensor[(12, 8, 11), float32] */;
  (%1179,)
}

def @func_13360(%var_13319: Tensor[(352), float32]) -> (Tensor[(12, 8, 11), float64], Tensor[(8, 11, 4), bool], Tensor[(352), float32], Tensor[(16, 16, 13), float64]) {
  %1180 = @func_4502() /* ty=(Tensor[(12, 8, 11), float64], Tensor[(16, 16, 13), float64], Tensor[(12, 8, 11), float64]) */;
  %1181 = cast(%var_13319, dtype="float32") /* ty=Tensor[(352), float32] */;
  %1182 = cast(%var_13319, dtype="float32") /* ty=Tensor[(352), float32] */;
  %1183 = reshape(%1181, newshape=[352]) /* ty=Tensor[(352), float32] */;
  %1184 = reshape(%1182, newshape=[8, 11, 4]) /* ty=Tensor[(8, 11, 4), float32] */;
  %1185 = @func_1201(%1183, %1184) /* ty=(Tensor[(12, 8, 11), float64], Tensor[(12, 8, 11), float64], Tensor[(8, 11, 4), float64], Tensor[(8, 11, 4), uint8], Tensor[(8, 11, 4), bool], Tensor[(8, 11, 4), float32]) */;
  %1186 = @func_11761() /* ty=(Tensor[(16, 16, 13), float64],) */;
  %1187 = %1180.0;
  %1188 = %1185.4;
  %1189 = %1186.0;
  (%1187, %1188, %var_13319, %1189)
}

def @func_1559() -> (Tensor[(12, 8, 11), uint16], Tensor[(8, 11, 4), float64], Tensor[(352), float32], Tensor[(8, 11, 4), bool]) {
  %1190 = @func_1358() /* ty=(Tensor[(12, 8, 11), float64],) */;
  %1191 = %1190.0;
  %1192 = @func_1117() /* ty=Tensor[(12, 8, 11), float64] */;
  %1193 = cast(%1192, dtype="uint16") /* ty=Tensor[(12, 8, 11), uint16] */;
  %1194 = shape_of(%1191, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1195 = cast(%1191, dtype="uint16") /* ty=Tensor[(12, 8, 11), uint16] */;
  %1196 = dyn.reshape(%1193, %1194, newshape=[]) /* ty=Tensor[(?, ?, ?), uint16] */;
  %1197 = cast(meta[relay.Constant][36] /* ty=Tensor[(352), float32] */, dtype="float32") /* ty=Tensor[(352), float32] */;
  %1198 = reshape(%1197, newshape=[352]) /* ty=Tensor[(352), float32] */;
  %1199 = @func_1300(%1198) /* ty=(Tensor[(8, 11, 4), bool], Tensor[(352), float32], Tensor[(12, 8, 11), float64], Tensor[(8, 11, 4), float64]) */;
  %1200 = %1199.3;
  %1201 = cast(%1200, dtype="float32") /* ty=Tensor[(8, 11, 4), float32] */;
  %1202 = cast(%1200, dtype="float32") /* ty=Tensor[(8, 11, 4), float32] */;
  %1203 = reshape(%1201, newshape=[352]) /* ty=Tensor[(352), float32] */;
  %1204 = reshape(%1202, newshape=[8, 11, 4]) /* ty=Tensor[(8, 11, 4), float32] */;
  %1205 = @func_1201(%1203, %1204) /* ty=(Tensor[(12, 8, 11), float64], Tensor[(12, 8, 11), float64], Tensor[(8, 11, 4), float64], Tensor[(8, 11, 4), uint8], Tensor[(8, 11, 4), bool], Tensor[(8, 11, 4), float32]) */;
  %1206 = bitwise_xor(%1195, %1196) /* ty=Tensor[(12, 8, 11), uint16] */;
  %1207 = %1205.4;
  (%1206, %1200, meta[relay.Constant][36] /* ty=Tensor[(352), float32] */, %1207)
}

def @func_14175() -> (Tensor[(12, 8, 11), float64],) {
  %1208 = @func_5351() /* ty=Tensor[(12, 8, 11), float64] */;
  (%1208,)
}

def @func_12773() -> Tensor[(12, 8, 11), float32] {
  %1209 = @func_6871() /* ty=(Tensor[(12, 8, 11), float32],) */;
  %1209.0
}

def @func_2880(%var_2841: Tensor[(15, 2, 16), float32], %var_2856: Tensor[(990), uint32]) -> (Tensor[(15, 2, 16), float32], Tensor[(8, 11, 4), float64], Tensor[(352), float32], Tensor[(352), int8], Tensor[(990), uint32], Tensor[(12, 8, 11), float32], Tensor[(12, 8, 11), float32]) {
  %1210 = cast(%var_2841, dtype="float32") /* ty=Tensor[(15, 2, 16), float32] */;
  %1211 = cast(meta[relay.Constant][37] /* ty=Tensor[(352), float32] */, dtype="float32") /* ty=Tensor[(352), float32] */;
  %1212 = reshape(%1211, newshape=[352]) /* ty=Tensor[(352), float32] */;
  %1213 = @func_1300(%1212) /* ty=(Tensor[(8, 11, 4), bool], Tensor[(352), float32], Tensor[(12, 8, 11), float64], Tensor[(8, 11, 4), float64]) */;
  %1214 = cast(meta[relay.Constant][37] /* ty=Tensor[(352), float32] */, dtype="float32") /* ty=Tensor[(352), float32] */;
  %1215 = cast(%var_2856, dtype="uint32") /* ty=Tensor[(990), uint32] */;
  %1216 = reshape(%1214, newshape=[352]) /* ty=Tensor[(352), float32] */;
  %1217 = reshape(%1215, newshape=[990]) /* ty=Tensor[(990), uint32] */;
  %1218 = @func_1580(%1216, %1217) /* ty=(Tensor[(352), int8], Tensor[(12, 8, 11), float64], Tensor[(990), uint32]) */;
  %1219 = @func_1971() /* ty=(Tensor[(12, 8, 11), float64], Tensor[(12, 8, 11), float32]) */;
  %1220 = @func_1235() /* ty=(Tensor[(12, 8, 11), float64], Tensor[(12, 8, 11), float32], Tensor[(12, 8, 11), float32]) */;
  %1221 = tan(%1210) /* ty=Tensor[(15, 2, 16), float32] */;
  %1222 = %1213.3;
  %1223 = %1218.0;
  %1224 = %1219.1;
  %1225 = %1220.1;
  (%1221, %1222, meta[relay.Constant][37] /* ty=Tensor[(352), float32] */, %1223, %var_2856, %1224, %1225)
}

def @func_9903() -> (Tensor[(990), uint32], Tensor[(990), uint32]) {
  %1226 = @func_8900() /* ty=(Tensor[(990), uint32],) */;
  %1227 = %1226.0;
  %1228 = cast(%1227, dtype="uint32") /* ty=Tensor[(990), uint32] */;
  %1229 = reshape(%1228, newshape=[990]) /* ty=Tensor[(990), uint32] */;
  %1230 = @func_6377(%1229) /* ty=(Tensor[(12, 8, 11), int64], Tensor[(15, 6, 11), uint32], Tensor[(990), uint32]) */;
  %1231 = %1230.2;
  (%1227, %1231)
}

def @func_1918() -> Tensor[(12, 8, 11), float32] {
  @func_1400() /* ty=Tensor[(12, 8, 11), float32] */
}

def @func_8691() -> (Tensor[(352), float32], Tensor[(11, 15, 5), uint32], Tensor[(825), uint32], Tensor[(16, 16, 13), float64]) {
  %1232 = @func_8214() /* ty=(Tensor[(352), uint64], Tensor[(352), float32], Tensor[(12, 8, 11), float32]) */;
  %1233 = cast(meta[relay.Constant][38] /* ty=Tensor[(825), uint32] */, dtype="uint32") /* ty=Tensor[(825), uint32] */;
  %1234 = reshape(%1233, newshape=[11, 15, 5]) /* ty=Tensor[(11, 15, 5), uint32] */;
  %1235 = @func_8330() /* ty=(Tensor[(16, 16, 13), float64],) */;
  %1236 = %1232.1;
  %1237 = @func_1996(%1234) /* ty=Tensor[(11, 15, 5), uint32] */;
  %1238 = %1235.0;
  (%1236, %1237, meta[relay.Constant][38] /* ty=Tensor[(825), uint32] */, %1238)
}

def @func_14733() -> Tensor[(12, 8, 11), float64] {
  @func_4846() /* ty=Tensor[(12, 8, 11), float64] */
}

def @func_4328() -> (Tensor[(12, 8, 11), float64],) {
  %1239 = @func_2380() /* ty=Tensor[(12, 8, 11), float64] */;
  (%1239,)
}

def @func_1971() -> (Tensor[(12, 8, 11), float64], Tensor[(12, 8, 11), float32]) {
  %1240 = @func_1358() /* ty=(Tensor[(12, 8, 11), float64],) */;
  %1241 = %1240.0;
  %1242 = cast(%1241, dtype="float32") /* ty=Tensor[(12, 8, 11), float32] */;
  %1243 = @func_1117() /* ty=Tensor[(12, 8, 11), float64] */;
  %1244 = log2(%1242) /* ty=Tensor[(12, 8, 11), float32] */;
  (%1243, %1244)
}

def @func_14703() -> (Tensor[(8, 11, 4), float64], Tensor[(16, 16, 13), float32], Tensor[(12, 8, 11), float64]) {
  %1245 = @func_3508() /* ty=(Tensor[(8, 11, 4), float64],) */;
  %1246 = @func_4766() /* ty=Tensor[(16, 16, 13), float64] */;
  %1247 = cast(%1246, dtype="float32") /* ty=Tensor[(16, 16, 13), float32] */;
  %1248 = @func_7600() /* ty=(Tensor[(12, 8, 11), float64],) */;
  %1249 = %1245.0;
  %1250 = atan(%1247) /* ty=Tensor[(16, 16, 13), float32] */;
  %1251 = %1248.0;
  (%1249, %1250, %1251)
}

def @func_10379() -> Tensor[(12, 8, 11), float64] {
  %1252 = @func_10156() /* ty=(Tensor[(12, 8, 11), float64], Tensor[(12, 8, 11), float64]) */;
  %1252.0
}

def @func_10790() -> (Tensor[(12, 8, 11), float32], Tensor[(8, 11, 4), float32]) {
  %1253 = @func_6528() /* ty=(Tensor[(12, 8, 11), float32], Tensor[(12, 8, 11), float32]) */;
  %1254 = @func_4190() /* ty=(Tensor[(8, 11, 4), float32], Tensor[(12, 8, 11), float64], Tensor[(12, 8, 11), int64]) */;
  %1255 = %1253.0;
  %1256 = %1254.0;
  (%1255, %1256)
}

def @func_12646() -> (Tensor[(352), bool], Tensor[(990), uint32]) {
  %1257 = @func_10678() /* ty=(Tensor[(352), bool],) */;
  %1258 = @func_8522() /* ty=(Tensor[(990), uint32], Tensor[(12, 8, 11), float64]) */;
  %1259 = %1257.0;
  %1260 = %1258.0;
  (%1259, %1260)
}

def @func_5221() -> (Tensor[(15, 6, 11), uint32],) {
  %1261 = @func_2121() /* ty=(Tensor[(12, 7, 6), float32], Tensor[(15, 6, 11), uint32], Tensor[(990), uint32]) */;
  %1262 = %1261.1;
  (%1262,)
}

def @func_6069() -> Tensor[(12, 8, 11), float64] {
  @func_2955() /* ty=Tensor[(12, 8, 11), float64] */
}

def @func_13559() -> (Tensor[(12, 8, 11), float64],) {
  %1263 = @func_3145() /* ty=(Tensor[(12, 8, 11), float64], Tensor[(15, 6, ?), bool], Tensor[(12, 8, 11), float32], Tensor[(990), uint32], Tensor[(8, 11, 4), float64], Tensor[(15, 6, ?), float32], Tensor[(12, 8, 11), float64], Tensor[(12, 8, 11), float64], Tensor[(12, 8, 11), float32], Tensor[(15, 6, 11), bool]) */;
  %1264 = %1263.6;
  (%1264,)
}

def @func_2045() -> (Tensor[(12, 8, 11), float64], Tensor[(12, 8, 11), float64]) {
  %1265 = @func_1358() /* ty=(Tensor[(12, 8, 11), float64],) */;
  %1266 = @func_1463() /* ty=(Tensor[(12, 8, 11), float64], Tensor[(12, 8, 11), float64]) */;
  %1267 = %1265.0;
  %1268 = %1266.0;
  (%1267, %1268)
}

def @func_4052() -> (Tensor[(12, 8, 11), float32], Tensor[(12, 8, 11), float32]) {
  %1269 = @func_1400() /* ty=Tensor[(12, 8, 11), float32] */;
  %1270 = @func_1400() /* ty=Tensor[(12, 8, 11), float32] */;
  (%1269, %1270)
}

def @func_9090() -> (Tensor[(12, 8, 11), float64], Tensor[(12, 8, 11), float64]) {
  %1271 = @func_8522() /* ty=(Tensor[(990), uint32], Tensor[(12, 8, 11), float64]) */;
  %1272 = @func_8522() /* ty=(Tensor[(990), uint32], Tensor[(12, 8, 11), float64]) */;
  %1273 = %1271.1;
  %1274 = %1272.1;
  (%1273, %1274)
}

def @func_7437() -> (Tensor[(12, 8, 11), float64],) {
  %1275 = @func_2622() /* ty=(Tensor[(12, 8, 11), float64], Tensor[(12, 8, 11), float64]) */;
  %1276 = %1275.0;
  (%1276,)
}

/* For debugging purposes the metadata section has been omitted.
 * If you would like to see the full metadata section you can set the 
 * option to `True` when invoking `astext`. 
 */
===================================
==========mutated_mod==========
#[version = "0.0.5"]
def @func_4749(%var_4734: Tensor[(990), uint32]) -> (Tensor[(12, 8, 11), uint16], Tensor[(15, 6, 11), uint32], Tensor[(990), uint32], Tensor[(12, 8, 11), float32]) {
  %0 = @func_1559() /* ty=(Tensor[(12, 8, 11), uint16], Tensor[(8, 11, 4), float64], Tensor[(352), float32], Tensor[(8, 11, 4), bool]) */;
  %1 = cast(%var_4734, dtype="uint32") /* ty=Tensor[(990), uint32] */;
  %2 = reshape(%1, newshape=[15, 6, 11]) /* ty=Tensor[(15, 6, 11), uint32] */;
  %3 = @func_1342(%2) /* ty=(Tensor[(15, 6, 11), uint32], Tensor[(12, 8, 11), float64]) */;
  %4 = %0.0;
  %5 = %3.0;
  %6 = @func_1400() /* ty=Tensor[(12, 8, 11), float32] */;
  (%4, %5, %var_4734, %6)
}

def @func_4767() -> Tensor[(16, 16, 13), float64] {
  %8 = fn () -> Tensor[(16, 16, 13), float64] {
    %7 = @func_4110() /* ty=(Tensor[(16, 16, 13), float64], Tensor[(12, 8, 11), float32]) */;
    %7.0
  };
  %8() /* ty=Tensor[(16, 16, 13), float64] */
}

def @func_4903() -> (Tensor[(12, 8, 11), float32], Tensor[(12, 8, 11), float64]) {
  %9 = @func_4190() /* ty=(Tensor[(8, 11, 4), float32], Tensor[(12, 8, 11), float64], Tensor[(12, 8, 11), int64]) */;
  %10 = @func_4304() /* ty=Tensor[(12, 8, 11), float32] */;
  %11 = %9.1;
  (%10, %11)
}

def @func_5982() -> (Tensor[(12, 8, 11), float64],) {
  %14 = fn () -> (Tensor[(12, 8, 11), float64],) {
    %12 = @func_1358() /* ty=(Tensor[(12, 8, 11), float64],) */;
    %13 = %12.0;
    (%13,)
  };
  %14() /* ty=(Tensor[(12, 8, 11), float64],) */
}

def @func_6557() -> Tensor[(12, 8, 11), float64] {
  %15 = @func_2973() /* ty=(Tensor[(12, 8, 11), float64],) */;
  %15.0
}

def @func_1584(%var_1582: Tensor[(352), float32], %var_1583: Tensor[(990), uint32]) -> (Tensor[(352), int8], Tensor[(12, 8, 11), float64], Tensor[(990), uint32]) {
  @func_1580(%var_1582, %var_1583) /* ty=(Tensor[(352), int8], Tensor[(12, 8, 11), float64], Tensor[(990), uint32]) */
}

def @func_12568() -> (Tensor[(12, 8, 11), float64],) {
  %16 = @func_7600() /* ty=(Tensor[(12, 8, 11), float64],) */;
  %17 = %16.0;
  (%17,)
}

def @func_6697() -> (Tensor[(12, 8, 11), float64], Tensor[(352), int8], Tensor[(352), float32]) {
  %18 = @func_2574() /* ty=(Tensor[(352), float32], Tensor[(12, 8, 11), float64], Tensor[(990), uint32], Tensor[(12, 8, 11), float64], Tensor[(12, 8, 11), int64]) */;
  %19 = cast(meta[relay.Constant][0] /* ty=Tensor[(352), float32] */, dtype="float32") /* ty=Tensor[(352), float32] */;
  %20 = reshape(%19, newshape=[352]) /* ty=Tensor[(352), float32] */;
  %21 = @func_5866(%20) /* ty=(Tensor[(12, 8, 11), float64], Tensor[(12, 8, 11), float64], Tensor[(352), int8], Tensor[(352), float32], Tensor[(990), uint32], Tensor[(12, 8, 11), float64]) */;
  %22 = %18.3;
  %23 = %21.2;
  (%22, %23, meta[relay.Constant][0] /* ty=Tensor[(352), float32] */)
}

def @func_4153(%var_4152: Tensor[(3, 10, 13), bool]) -> Tensor[(3, 10, 13), bool] {
  %26 = fn (%var_4144: Tensor[(3, 10, 13), bool]) -> Tensor[(3, 10, 13), bool] {
    %24 = cast(True /* ty=bool */, dtype="bool") /* ty=bool */;
    %25 = cast(%var_4144, dtype="bool") /* ty=Tensor[(3, 10, 13), bool] */;
    logical_and(%24, %25) /* ty=Tensor[(3, 10, 13), bool] */
  };
  %26(%var_4152) /* ty=Tensor[(3, 10, 13), bool] */
}

def @func_14155() -> (Tensor[(990), uint32], Tensor[(12, 8, 11), float64], Tensor[(990), uint32], Tensor[(352), float32]) {
  %27 = @func_2121() /* ty=(Tensor[(12, 7, 6), float32], Tensor[(15, 6, 11), uint32], Tensor[(990), uint32]) */;
  %28 = @func_5140() /* ty=(Tensor[(12, 8, 11), float32], Tensor[(12, 8, 11), float64]) */;
  %29 = @func_7310() /* ty=(Tensor[(12, 8, 11), float64], Tensor[(352), float32], Tensor[(990), uint32]) */;
  %30 = %27.2;
  %31 = %28.1;
  %32 = @func_6054() /* ty=Tensor[(990), uint32] */;
  %33 = %29.1;
  (%30, %31, %32, %33)
}

def @func_7654(%var_7651: Tensor[(1, 390), bool]) -> (Tensor[(12, 8, 11), float64], Tensor[(352), float32], Tensor[(12, 8, 11), float64], Tensor[(3, 10, 13), bool], Tensor[(1, 390), bool]) {
  %34 = @func_6697() /* ty=(Tensor[(12, 8, 11), float64], Tensor[(352), int8], Tensor[(352), float32]) */;
  %35 = @func_6615() /* ty=(Tensor[(352), float32], Tensor[(12, 8, 11), float32]) */;
  %36 = @func_6132() /* ty=(Tensor[(12, 8, 11), float64], Tensor[(12, 8, 11), float64], Tensor[(990), uint32], Tensor[(352), int8], Tensor[(352), float32]) */;
  %37 = cast(%var_7651, dtype="bool") /* ty=Tensor[(1, 390), bool] */;
  %38 = reshape(%37, newshape=[3, 10, 13]) /* ty=Tensor[(3, 10, 13), bool] */;
  %39 = %34.0;
  %40 = %35.0;
  %41 = %36.1;
  %42 = @func_4151(%38) /* ty=Tensor[(3, 10, 13), bool] */;
  (%39, %40, %41, %42, %var_7651)
}

def @func_15373() -> Tensor[(12, 8, 11), float64] {
  %44 = fn () -> Tensor[(12, 8, 11), float64] {
    %43 = @func_2973() /* ty=(Tensor[(12, 8, 11), float64],) */;
    %43.0
  };
  %44() /* ty=Tensor[(12, 8, 11), float64] */
}

def @func_8755(%var_8739: Tensor[(9, 8, 2), float32]) -> (Tensor[(9, 8, 2), float32], Tensor[(12, 8, 11), float64]) {
  %45 = cast(%var_8739, dtype="float32") /* ty=Tensor[(9, 8, 2), float32] */;
  %46 = @func_4502() /* ty=(Tensor[(12, 8, 11), float64], Tensor[(16, 16, 13), float64], Tensor[(12, 8, 11), float64]) */;
  %47 = rsqrt(%45) /* ty=Tensor[(9, 8, 2), float32] */;
  %48 = %46.0;
  (%47, %48)
}

def @func_6749() -> (Tensor[(15, 6, 11), float64], Tensor[(15, 6, 11), float64], Tensor[(352), float32], Tensor[(12, 8, 11), int64]) {
  %58 = fn () -> (Tensor[(15, 6, 11), float64], Tensor[(15, 6, 11), float64], Tensor[(352), float32], Tensor[(12, 8, 11), int64]) {
    %49 = @func_5221() /* ty=(Tensor[(15, 6, 11), uint32],) */;
    %50 = %49.0;
    %51 = cast(%50, dtype="float64") /* ty=Tensor[(15, 6, 11), float64] */;
    %52 = cast(%50, dtype="float64") /* ty=Tensor[(15, 6, 11), float64] */;
    %53 = @func_3234() /* ty=(Tensor[(12, 8, 11), int64], Tensor[(12, 8, 11), float32], Tensor[(352), float32]) */;
    %54 = sin(%51) /* ty=Tensor[(15, 6, 11), float64] */;
    %55 = sinh(%52) /* ty=Tensor[(15, 6, 11), float64] */;
    %56 = %53.2;
    %57 = @func_3349() /* ty=Tensor[(12, 8, 11), int64] */;
    (%54, %55, %56, %57)
  };
  %58() /* ty=(Tensor[(15, 6, 11), float64], Tensor[(15, 6, 11), float64], Tensor[(352), float32], Tensor[(12, 8, 11), int64]) */
}

def @func_9063() -> (Tensor[(12, 8, 11), float32],) {
  %61 = fn () -> (Tensor[(12, 8, 11), float32],) {
    %59 = @func_6615() /* ty=(Tensor[(352), float32], Tensor[(12, 8, 11), float32]) */;
    %60 = %59.1;
    (%60,)
  };
  %61() /* ty=(Tensor[(12, 8, 11), float32],) */
}

def @func_3147() -> (Tensor[(12, 8, 11), float64], Tensor[(15, 6, ?), bool], Tensor[(12, 8, 11), float32], Tensor[(990), uint32], Tensor[(8, 11, 4), float64], Tensor[(15, 6, ?), float32], Tensor[(12, 8, 11), float64], Tensor[(12, 8, 11), float64], Tensor[(12, 8, 11), float32], Tensor[(15, 6, 11), bool]) {
  @func_3145() /* ty=(Tensor[(12, 8, 11), float64], Tensor[(15, 6, ?), bool], Tensor[(12, 8, 11), float32], Tensor[(990), uint32], Tensor[(8, 11, 4), float64], Tensor[(15, 6, ?), float32], Tensor[(12, 8, 11), float64], Tensor[(12, 8, 11), float64], Tensor[(12, 8, 11), float32], Tensor[(15, 6, 11), bool]) */
}

def @func_8541() -> (Tensor[(990), float64],) {
  @func_8539() /* ty=(Tensor[(990), float64],) */
}

def @func_10161() -> (Tensor[(12, 8, 11), float64],) {
  %64 = fn () -> (Tensor[(12, 8, 11), float64],) {
    %62 = @func_9161() /* ty=(Tensor[(12, 8, 11), float32], Tensor[(12, 8, 11), float64]) */;
    %63 = %62.1;
    (%63,)
  };
  %64() /* ty=(Tensor[(12, 8, 11), float64],) */
}

def @func_6699() -> (Tensor[(12, 8, 11), float64], Tensor[(352), int8], Tensor[(352), float32]) {
  @func_6697() /* ty=(Tensor[(12, 8, 11), float64], Tensor[(352), int8], Tensor[(352), float32]) */
}

def @func_13559() -> (Tensor[(12, 8, 11), float64],) {
  %65 = @func_3145() /* ty=(Tensor[(12, 8, 11), float64], Tensor[(15, 6, ?), bool], Tensor[(12, 8, 11), float32], Tensor[(990), uint32], Tensor[(8, 11, 4), float64], Tensor[(15, 6, ?), float32], Tensor[(12, 8, 11), float64], Tensor[(12, 8, 11), float64], Tensor[(12, 8, 11), float32], Tensor[(15, 6, 11), bool]) */;
  %66 = %65.6;
  (%66,)
}

def @func_8771() -> (Tensor[(352), float32],) {
  %69 = fn () -> (Tensor[(352), float32],) {
    %67 = @func_6996() /* ty=(Tensor[(8, 11, 4), float64], Tensor[(352), float32]) */;
    %68 = %67.1;
    (%68,)
  };
  %69() /* ty=(Tensor[(352), float32],) */
}

def @func_3490() -> (Tensor[(12, 8, 11), float32], Tensor[(12, 8, 11), float64], Tensor[(12, 8, 11), float64], Tensor[(12, 8, 11), float32], Tensor[(990), uint32]) {
  %81 = fn () -> (Tensor[(12, 8, 11), float32], Tensor[(12, 8, 11), float64], Tensor[(12, 8, 11), float64], Tensor[(12, 8, 11), float32], Tensor[(990), uint32]) {
    %70 = @func_2973() /* ty=(Tensor[(12, 8, 11), float64],) */;
    %71 = @func_2973() /* ty=(Tensor[(12, 8, 11), float64],) */;
    %72 = @func_2622() /* ty=(Tensor[(12, 8, 11), float64], Tensor[(12, 8, 11), float64]) */;
    %73 = %72.1;
    %74 = cast(%73, dtype="float32") /* ty=Tensor[(12, 8, 11), float32] */;
    %75 = @func_3145() /* ty=(Tensor[(12, 8, 11), float64], Tensor[(15, 6, ?), bool], Tensor[(12, 8, 11), float32], Tensor[(990), uint32], Tensor[(8, 11, 4), float64], Tensor[(15, 6, ?), float32], Tensor[(12, 8, 11), float64], Tensor[(12, 8, 11), float64], Tensor[(12, 8, 11), float32], Tensor[(15, 6, 11), bool]) */;
    %76 = @func_1918() /* ty=Tensor[(12, 8, 11), float32] */;
    %77 = %70.0;
    %78 = %71.0;
    %79 = sin(%74) /* ty=Tensor[(12, 8, 11), float32] */;
    %80 = %75.3;
    (%76, %77, %78, %79, %80)
  };
  %81() /* ty=(Tensor[(12, 8, 11), float32], Tensor[(12, 8, 11), float64], Tensor[(12, 8, 11), float64], Tensor[(12, 8, 11), float32], Tensor[(990), uint32]) */
}

def @func_3145() -> (Tensor[(12, 8, 11), float64], Tensor[(15, 6, ?), bool], Tensor[(12, 8, 11), float32], Tensor[(990), uint32], Tensor[(8, 11, 4), float64], Tensor[(15, 6, ?), float32], Tensor[(12, 8, 11), float64], Tensor[(12, 8, 11), float64], Tensor[(12, 8, 11), float32], Tensor[(15, 6, 11), bool]) {
  %82 = @func_1358() /* ty=(Tensor[(12, 8, 11), float64],) */;
  %83 = cast(meta[relay.Constant][1] /* ty=Tensor[(15, 6, 1), float32] */, dtype="float64") /* ty=Tensor[(15, 6, 1), float64] */;
  %84 = sin(%83) /* ty=Tensor[(15, 6, 1), float64] */;
  %85 = cast(meta[relay.Constant][2] /* ty=Tensor[(15, 6, 1), float32] */, dtype="float32") /* ty=Tensor[(15, 6, 1), float32] */;
  %86 = shape_of(meta[relay.Constant][1] /* ty=Tensor[(15, 6, 1), float32] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %87 = cast(meta[relay.Constant][1] /* ty=Tensor[(15, 6, 1), float32] */, dtype="float32") /* ty=Tensor[(15, 6, 1), float32] */;
  %88 = dyn.reshape(%85, %86, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %89 = power(%87, %88) /* ty=Tensor[(15, 6, ?), float32] */;
  %90 = cast(%89, dtype="bool") /* ty=Tensor[(15, 6, ?), bool] */;
  %91 = shape_of(%84, dtype="int32") /* ty=Tensor[(3), int32] */;
  %92 = cast(%84, dtype="bool") /* ty=Tensor[(15, 6, 1), bool] */;
  %93 = dyn.reshape(%90, %91, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %94 = @func_2062() /* ty=(Tensor[(12, 8, 11), float64],) */;
  %95 = %94.0;
  %96 = @func_2756() /* ty=Tensor[(12, 8, 11), float64] */;
  %97 = cast(%96, dtype="float32") /* ty=Tensor[(12, 8, 11), float32] */;
  %98 = shape_of(%95, dtype="int32") /* ty=Tensor[(3), int32] */;
  %99 = cast(%95, dtype="float32") /* ty=Tensor[(12, 8, 11), float32] */;
  %100 = dyn.reshape(%97, %98, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %101 = @func_2121() /* ty=(Tensor[(12, 7, 6), float32], Tensor[(15, 6, 11), uint32], Tensor[(990), uint32]) */;
  %102 = %101.1;
  %103 = cast(%102, dtype="uint32") /* ty=Tensor[(15, 6, 11), uint32] */;
  %104 = reshape(%103, newshape=[990]) /* ty=Tensor[(990), uint32] */;
  %105 = @func_1625(%104) /* ty=(Tensor[(12, 8, 11), float64], Tensor[(352), int8], Tensor[(352), float32], Tensor[(990), uint32]) */;
  %106 = @func_1559() /* ty=(Tensor[(12, 8, 11), uint16], Tensor[(8, 11, 4), float64], Tensor[(352), float32], Tensor[(8, 11, 4), bool]) */;
  %107 = cast(meta[relay.Constant][2] /* ty=Tensor[(15, 6, 1), float32] */, dtype="float32") /* ty=Tensor[(15, 6, 1), float32] */;
  %108 = shape_of(%84, dtype="int32") /* ty=Tensor[(3), int32] */;
  %109 = cast(%84, dtype="float32") /* ty=Tensor[(15, 6, 1), float32] */;
  %110 = dyn.reshape(%107, %108, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %111 = divide(%109, %110) /* ty=Tensor[(15, 6, ?), float32] */;
  %112 = cast(%89, dtype="float32") /* ty=Tensor[(15, 6, ?), float32] */;
  %113 = shape_of(%111, dtype="int32") /* ty=Tensor[(3), int32] */;
  %114 = cast(%111, dtype="float32") /* ty=Tensor[(15, 6, ?), float32] */;
  %115 = dyn.reshape(%112, %113, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %116 = cast(%102, dtype="uint32") /* ty=Tensor[(15, 6, 11), uint32] */;
  %117 = reshape(%116, newshape=[15, 6, 11]) /* ty=Tensor[(15, 6, 11), uint32] */;
  %118 = @func_1342(%117) /* ty=(Tensor[(15, 6, 11), uint32], Tensor[(12, 8, 11), float64]) */;
  %119 = @func_2205() /* ty=(Tensor[(12, 8, 11), float32], Tensor[(12, 8, 11), float64], Tensor[(12, 8, 11), float64]) */;
  %120 = cast(%89, dtype="bool") /* ty=Tensor[(15, 6, ?), bool] */;
  %121 = cast(%102, dtype="bool") /* ty=Tensor[(15, 6, 11), bool] */;
  %122 = %82.0;
  %123 = logical_and(%92, %93) /* ty=Tensor[(15, 6, ?), bool] */;
  %124 = power(%99, %100) /* ty=Tensor[(12, 8, 11), float32] */;
  %125 = %105.3;
  %126 = %106.1;
  %127 = subtract(%114, %115) /* ty=Tensor[(15, 6, ?), float32] */;
  %128 = %118.1;
  %129 = %119.2;
  %130 = @func_1918() /* ty=Tensor[(12, 8, 11), float32] */;
  %131 = equal(%120, %121) /* ty=Tensor[(15, 6, 11), bool] */;
  (%122, %123, %124, %125, %126, %127, %128, %129, %130, %131)
}

def @func_9162() -> (Tensor[(12, 8, 11), float32], Tensor[(12, 8, 11), float64]) {
  %136 = fn () -> (Tensor[(12, 8, 11), float32], Tensor[(12, 8, 11), float64]) {
    %132 = @func_9062() /* ty=(Tensor[(12, 8, 11), float32],) */;
    %133 = @func_7160() /* ty=(Tensor[(12, 8, 11), float64], Tensor[(8, 11, 4), float64], Tensor[(5, 198), uint32], Tensor[(12, 8, 11), float64]) */;
    %134 = %132.0;
    %135 = %133.0;
    (%134, %135)
  };
  %136() /* ty=(Tensor[(12, 8, 11), float32], Tensor[(12, 8, 11), float64]) */
}

def @func_8376() -> (Tensor[(8, 11, 4), uint64],) {
  %137 = @func_3508() /* ty=(Tensor[(8, 11, 4), float64],) */;
  %138 = %137.0;
  %139 = cast(meta[relay.Constant][3] /* ty=Tensor[(8, 11, 4), float64] */, dtype="uint64") /* ty=Tensor[(8, 11, 4), uint64] */;
  %140 = shape_of(%138, dtype="int32") /* ty=Tensor[(3), int32] */;
  %141 = cast(%138, dtype="uint64") /* ty=Tensor[(8, 11, 4), uint64] */;
  %142 = dyn.reshape(%139, %140, newshape=[]) /* ty=Tensor[(?, ?, ?), uint64] */;
  %143 = add(%141, %142) /* ty=Tensor[(8, 11, 4), uint64] */;
  (%143,)
}

def @func_14783() -> (Tensor[(12, 8, 11), float64], Tensor[(8, 11, 4), uint64]) {
  %144 = @func_5981() /* ty=(Tensor[(12, 8, 11), float64],) */;
  %145 = %144.0;
  %146 = @func_13520() /* ty=Tensor[(8, 11, 4), uint64] */;
  (%145, %146)
}

def @func_12359() -> (Tensor[(12, 8, 11), float32], Tensor[(8, 11, 4), float32]) {
  %155 = fn () -> (Tensor[(12, 8, 11), float32], Tensor[(8, 11, 4), float32]) {
    %147 = @func_5577() /* ty=(Tensor[(8, 11, 4), float64],) */;
    %148 = %147.0;
    %149 = cast(meta[relay.Constant][4] /* ty=Tensor[(8, 11, 4), float64] */, dtype="float32") /* ty=Tensor[(8, 11, 4), float32] */;
    %150 = shape_of(%148, dtype="int32") /* ty=Tensor[(3), int32] */;
    %151 = cast(%148, dtype="float32") /* ty=Tensor[(8, 11, 4), float32] */;
    %152 = dyn.reshape(%149, %150, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
    %153 = @func_4304() /* ty=Tensor[(12, 8, 11), float32] */;
    %154 = floor_mod(%151, %152) /* ty=Tensor[(8, 11, 4), float32] */;
    (%153, %154)
  };
  %155() /* ty=(Tensor[(12, 8, 11), float32], Tensor[(8, 11, 4), float32]) */
}

def @func_9291(%var_9290: Tensor[(352), float32]) -> (Tensor[(352), int16], Tensor[(8, 11, 4), float32]) {
  %164 = fn (%var_9266: Tensor[(352), float32]) -> (Tensor[(352), int16], Tensor[(8, 11, 4), float32]) {
    %156 = @func_6615() /* ty=(Tensor[(352), float32], Tensor[(12, 8, 11), float32]) */;
    %157 = %156.0;
    %158 = cast(%var_9266, dtype="int16") /* ty=Tensor[(352), int16] */;
    %159 = shape_of(%157, dtype="int32") /* ty=Tensor[(1), int32] */;
    %160 = cast(%157, dtype="int16") /* ty=Tensor[(352), int16] */;
    %161 = dyn.reshape(%158, %159, newshape=[]) /* ty=Tensor[(?), int16] */;
    %162 = right_shift(%160, %161) /* ty=Tensor[(352), int16] */;
    %163 = @func_6803() /* ty=Tensor[(8, 11, 4), float32] */;
    (%162, %163)
  };
  %164(%var_9290) /* ty=(Tensor[(352), int16], Tensor[(8, 11, 4), float32]) */
}

def @func_6380(%var_6378: Tensor[(990), uint32]) -> (Tensor[(12, 8, 11), int64], Tensor[(15, 6, 11), uint32], Tensor[(990), uint32]) {
  @func_6377(%var_6378) /* ty=(Tensor[(12, 8, 11), int64], Tensor[(15, 6, 11), uint32], Tensor[(990), uint32]) */
}

def @func_12812() -> Tensor[(8, 11, 4), float64] {
  @func_12810() /* ty=Tensor[(8, 11, 4), float64] */
}

def @func_6069() -> Tensor[(12, 8, 11), float64] {
  @func_2955() /* ty=Tensor[(12, 8, 11), float64] */
}

def @func_13118(%var_13116: Tensor[(208), float64]) -> (Tensor[(12, 8, 11), float64], Tensor[(52, 4), float64], Tensor[(208), float64]) {
  @func_13115(%var_13116) /* ty=(Tensor[(12, 8, 11), float64], Tensor[(52, 4), float64], Tensor[(208), float64]) */
}

def @func_5447() -> (Tensor[(12, 8, 11), float64], Tensor[(12, 8, 11), float64], Tensor[(15, 6, 11), uint32], Tensor[(352), float32]) {
  @func_5445() /* ty=(Tensor[(12, 8, 11), float64], Tensor[(12, 8, 11), float64], Tensor[(15, 6, 11), uint32], Tensor[(352), float32]) */
}

def @func_7286() -> (Tensor[(12, 8, 11), int64], Tensor[(990), uint32]) {
  %165 = @func_2238() /* ty=(Tensor[(12, 8, 11), int64],) */;
  %166 = @func_2121() /* ty=(Tensor[(12, 7, 6), float32], Tensor[(15, 6, 11), uint32], Tensor[(990), uint32]) */;
  %167 = %165.0;
  %168 = %166.2;
  (%167, %168)
}

def @func_11456() -> (Tensor[(12, 8, 11), float64], Tensor[(352), uint64]) {
  %173 = fn () -> (Tensor[(12, 8, 11), float64], Tensor[(352), uint64]) {
    %169 = @func_1971() /* ty=(Tensor[(12, 8, 11), float64], Tensor[(12, 8, 11), float32]) */;
    %170 = @func_8214() /* ty=(Tensor[(352), uint64], Tensor[(352), float32], Tensor[(12, 8, 11), float32]) */;
    %171 = %169.0;
    %172 = %170.0;
    (%171, %172)
  };
  %173() /* ty=(Tensor[(12, 8, 11), float64], Tensor[(352), uint64]) */
}

def @func_10519() -> (Tensor[(8, 11, 4), float64], Tensor[(12, 8, 11), float32]) {
  @func_10517() /* ty=(Tensor[(8, 11, 4), float64], Tensor[(12, 8, 11), float32]) */
}

def @func_7438() -> (Tensor[(12, 8, 11), float64],) {
  %176 = fn () -> (Tensor[(12, 8, 11), float64],) {
    %174 = @func_2622() /* ty=(Tensor[(12, 8, 11), float64], Tensor[(12, 8, 11), float64]) */;
    %175 = %174.0;
    (%175,)
  };
  %176() /* ty=(Tensor[(12, 8, 11), float64],) */
}

def @func_1117() -> Tensor[(12, 8, 11), float64] {
  %177 = cast(meta[relay.Constant][5] /* ty=Tensor[(12, 8, 11), float64] */, dtype="float64") /* ty=Tensor[(12, 8, 11), float64] */;
  tan(%177) /* ty=Tensor[(12, 8, 11), float64] */
}

def @func_3932(%var_3930: Tensor[(275, 3), uint32]) -> (Tensor[(12, 8, 11), float64], Tensor[(12, 8, 11), float64], Tensor[(12, 8, 11), float64], Tensor[(12, 8, 11), float64], Tensor[(12, 8, 11), float64], Tensor[(11, 15, 5), uint32], Tensor[(275, 3), uint32]) {
  @func_3929(%var_3930) /* ty=(Tensor[(12, 8, 11), float64], Tensor[(12, 8, 11), float64], Tensor[(12, 8, 11), float64], Tensor[(12, 8, 11), float64], Tensor[(12, 8, 11), float64], Tensor[(11, 15, 5), uint32], Tensor[(275, 3), uint32]) */
}

def @func_6227(%var_6225: Tensor[(352), float32], %var_6226: Tensor[(352), float32]) -> (Tensor[(12, 8, 11), float32], Tensor[(990), uint32], Tensor[(5, 198), uint32], Tensor[(12, 8, 11), float64], Tensor[(12, 8, 11), float64], Tensor[(12, 8, 11), float32], Tensor[(352), float64], Tensor[(12, 8, 11), float64], Tensor[(12, 8, 11), float64], Tensor[(990), uint32], Tensor[(352), int8]) {
  %204 = fn (%var_6144: Tensor[(352), float32], %var_6199: Tensor[(352), float32]) -> (Tensor[(12, 8, 11), float32], Tensor[(990), uint32], Tensor[(5, 198), uint32], Tensor[(12, 8, 11), float64], Tensor[(12, 8, 11), float64], Tensor[(12, 8, 11), float32], Tensor[(352), float64], Tensor[(12, 8, 11), float64], Tensor[(12, 8, 11), float64], Tensor[(990), uint32], Tensor[(352), int8]) {
    %178 = cast(%var_6144, dtype="float32") /* ty=Tensor[(352), float32] */;
    %179 = cast(meta[relay.Constant][6] /* ty=Tensor[(5, 198), uint32] */, dtype="uint32") /* ty=Tensor[(5, 198), uint32] */;
    %180 = reshape(%178, newshape=[352]) /* ty=Tensor[(352), float32] */;
    %181 = reshape(%179, newshape=[990]) /* ty=Tensor[(990), uint32] */;
    %182 = @func_1580(%180, %181) /* ty=(Tensor[(352), int8], Tensor[(12, 8, 11), float64], Tensor[(990), uint32]) */;
    %183 = @func_2774() /* ty=(Tensor[(12, 8, 11), float64],) */;
    %184 = @func_2737() /* ty=(Tensor[(990), uint32], Tensor[(12, 8, 11), float64], Tensor[(12, 8, 11), float64], Tensor[(12, 8, 11), float64], Tensor[(12, 8, 11), int64]) */;
    %185 = @func_5701() /* ty=(Tensor[(12, 8, 11), float32], Tensor[(8, 11, 4), float64]) */;
    %186 = cast(%var_6199, dtype="float64") /* ty=Tensor[(352), float64] */;
    %187 = shape_of(%var_6144, dtype="int32") /* ty=Tensor[(1), int32] */;
    %188 = cast(%var_6144, dtype="float64") /* ty=Tensor[(352), float64] */;
    %189 = dyn.reshape(%186, %187, newshape=[]) /* ty=Tensor[(?), float64] */;
    %190 = @func_5379() /* ty=(Tensor[(12, 8, 11), float64],) */;
    %191 = floor_mod(%188, %189) /* ty=Tensor[(352), float64] */;
    %192 = cast(%191, dtype="float32") /* ty=Tensor[(352), float32] */;
    %193 = reshape(%192, newshape=[352]) /* ty=Tensor[(352), float32] */;
    %194 = @func_5866(%193) /* ty=(Tensor[(12, 8, 11), float64], Tensor[(12, 8, 11), float64], Tensor[(352), int8], Tensor[(352), float32], Tensor[(990), uint32], Tensor[(12, 8, 11), float64]) */;
    %195 = @func_1918() /* ty=Tensor[(12, 8, 11), float32] */;
    %196 = %182.2;
    %197 = %183.0;
    %198 = %184.2;
    %199 = %185.0;
    %200 = %190.0;
    %201 = @func_3522() /* ty=Tensor[(12, 8, 11), float64] */;
    %202 = @func_6054() /* ty=Tensor[(990), uint32] */;
    %203 = %194.2;
    (%195, %196, meta[relay.Constant][6] /* ty=Tensor[(5, 198), uint32] */, %197, %198, %199, %191, %200, %201, %202, %203)
  };
  %204(%var_6225, %var_6226) /* ty=(Tensor[(12, 8, 11), float32], Tensor[(990), uint32], Tensor[(5, 198), uint32], Tensor[(12, 8, 11), float64], Tensor[(12, 8, 11), float64], Tensor[(12, 8, 11), float32], Tensor[(352), float64], Tensor[(12, 8, 11), float64], Tensor[(12, 8, 11), float64], Tensor[(990), uint32], Tensor[(352), int8]) */
}

def @func_4708(%var_4707: Tensor[(10, 15, 13), float32]) -> (Tensor[(10, 15, 13), float32], Tensor[(10, 15, 13), uint16], Tensor[(12, 8, 11), float64]) {
  %222 = fn (%var_4662: Tensor[(10, 15, 13), float32]) -> (Tensor[(10, 15, 13), float32], Tensor[(10, 15, 13), uint16], Tensor[(12, 8, 11), float64]) {
    %205 = cast(%var_4662, dtype="float32") /* ty=Tensor[(10, 15, 13), float32] */;
    %206 = log10(%205) /* ty=Tensor[(10, 15, 13), float32] */;
    %207 = cast(%var_4662, dtype="float64") /* ty=Tensor[(10, 15, 13), float64] */;
    %208 = shape_of(%206, dtype="int32") /* ty=Tensor[(3), int32] */;
    %209 = cast(%206, dtype="float64") /* ty=Tensor[(10, 15, 13), float64] */;
    %210 = dyn.reshape(%207, %208, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
    %211 = floor_mod(%209, %210) /* ty=Tensor[(10, 15, 13), float64] */;
    %212 = cast(%211, dtype="float32") /* ty=Tensor[(10, 15, 13), float32] */;
    %213 = cast(%206, dtype="float64") /* ty=Tensor[(10, 15, 13), float64] */;
    %214 = rsqrt(%213) /* ty=Tensor[(10, 15, 13), float64] */;
    %215 = cast(%214, dtype="uint16") /* ty=Tensor[(10, 15, 13), uint16] */;
    %216 = shape_of(%211, dtype="int32") /* ty=Tensor[(3), int32] */;
    %217 = cast(%211, dtype="uint16") /* ty=Tensor[(10, 15, 13), uint16] */;
    %218 = dyn.reshape(%215, %216, newshape=[]) /* ty=Tensor[(?, ?, ?), uint16] */;
    %219 = atan(%212) /* ty=Tensor[(10, 15, 13), float32] */;
    %220 = left_shift(%217, %218) /* ty=Tensor[(10, 15, 13), uint16] */;
    %221 = @func_2808() /* ty=Tensor[(12, 8, 11), float64] */;
    (%219, %220, %221)
  };
  %222(%var_4707) /* ty=(Tensor[(10, 15, 13), float32], Tensor[(10, 15, 13), uint16], Tensor[(12, 8, 11), float64]) */
}

def @func_13437() -> (Tensor[(12, 8, 11), float64], Tensor[(12, 8, 11), float64]) {
  %223 = @func_9858() /* ty=(Tensor[(12, 8, 11), float64], Tensor[(8, 11, 4), float64]) */;
  %224 = @func_2973() /* ty=(Tensor[(12, 8, 11), float64],) */;
  %225 = %223.0;
  %226 = %224.0;
  (%225, %226)
}

def @func_7853() -> (Tensor[(12, 8, 11), float32], Tensor[(12, 8, 11), float32]) {
  @func_7851() /* ty=(Tensor[(12, 8, 11), float32], Tensor[(12, 8, 11), float32]) */
}

def @func_9038() -> Tensor[(12, 8, 11), float64] {
  %227 = @func_7437() /* ty=(Tensor[(12, 8, 11), float64],) */;
  %227.0
}

def @func_10031(%var_9983: Tensor[(1056), float64], %var_10003: Tensor[(352), float32]) -> (Tensor[(1056), float64], Tensor[(15, 6, 11), int16], Tensor[(8, 11, 4), float32], float32, Tensor[(352), float32], Tensor[(352), int8], Tensor[(15, 6, 11), uint64]) {
  %228 = cast(%var_9983, dtype="float64") /* ty=Tensor[(1056), float64] */;
  %229 = reshape(%228, newshape=[12, 8, 11]) /* ty=Tensor[(12, 8, 11), float64] */;
  %230 = @func_6966(%229) /* ty=(Tensor[(12, 8, 11), uint32], Tensor[(15, 6, 11), uint32]) */;
  %231 = %230.1;
  %232 = cast(%231, dtype="float32") /* ty=Tensor[(15, 6, 11), float32] */;
  %233 = cos(%232) /* ty=Tensor[(15, 6, 11), float32] */;
  %234 = @func_2121() /* ty=(Tensor[(12, 7, 6), float32], Tensor[(15, 6, 11), uint32], Tensor[(990), uint32]) */;
  %235 = %234.1;
  %236 = cast(%235, dtype="int16") /* ty=Tensor[(15, 6, 11), int16] */;
  %237 = shape_of(%233, dtype="int32") /* ty=Tensor[(3), int32] */;
  %238 = cast(%233, dtype="int16") /* ty=Tensor[(15, 6, 11), int16] */;
  %239 = dyn.reshape(%236, %237, newshape=[]) /* ty=Tensor[(?, ?, ?), int16] */;
  %240 = cast(8.58734f /* ty=float32 */, dtype="float32") /* ty=float32 */;
  %241 = cast(%var_10003, dtype="float32") /* ty=Tensor[(352), float32] */;
  %242 = reshape(%240, newshape=[]) /* ty=float32 */;
  %243 = reshape(%241, newshape=[8, 11, 4]) /* ty=Tensor[(8, 11, 4), float32] */;
  %244 = @func_262(%242, %243) /* ty=(Tensor[(8, 11, 4), float32],) */;
  %245 = @func_6697() /* ty=(Tensor[(12, 8, 11), float64], Tensor[(352), int8], Tensor[(352), float32]) */;
  %246 = cast(%235, dtype="uint64") /* ty=Tensor[(15, 6, 11), uint64] */;
  %247 = shape_of(%233, dtype="int32") /* ty=Tensor[(3), int32] */;
  %248 = cast(%233, dtype="uint64") /* ty=Tensor[(15, 6, 11), uint64] */;
  %249 = dyn.reshape(%246, %247, newshape=[]) /* ty=Tensor[(?, ?, ?), uint64] */;
  %250 = minimum(%238, %239) /* ty=Tensor[(15, 6, 11), int16] */;
  %251 = %244.0;
  %252 = %245.1;
  %253 = bitwise_or(%248, %249) /* ty=Tensor[(15, 6, 11), uint64] */;
  (%var_9983, %250, %251, 8.58734f /* ty=float32 */, %var_10003, %252, %253)
}

def @func_7711() -> (Tensor[(8, 11, 4), float64],) {
  %256 = fn () -> (Tensor[(8, 11, 4), float64],) {
    %254 = @func_3145() /* ty=(Tensor[(12, 8, 11), float64], Tensor[(15, 6, ?), bool], Tensor[(12, 8, 11), float32], Tensor[(990), uint32], Tensor[(8, 11, 4), float64], Tensor[(15, 6, ?), float32], Tensor[(12, 8, 11), float64], Tensor[(12, 8, 11), float64], Tensor[(12, 8, 11), float32], Tensor[(15, 6, 11), bool]) */;
    %255 = %254.4;
    (%255,)
  };
  %256() /* ty=(Tensor[(8, 11, 4), float64],) */
}

def @func_13964() -> (Tensor[(12, 8, 11), float32],) {
  @func_13962() /* ty=(Tensor[(12, 8, 11), float32],) */
}

def @func_7557() -> Tensor[(12, 8, 11), float32] {
  %257 = fn () -> Tensor[(12, 8, 11), float32] {
    @func_4304() /* ty=Tensor[(12, 8, 11), float32] */
  };
  %257() /* ty=Tensor[(12, 8, 11), float32] */
}

def @func_8455() -> (Tensor[(12, 8, 11), float64], Tensor[(8, 11, 4), float32]) {
  @func_8453() /* ty=(Tensor[(12, 8, 11), float64], Tensor[(8, 11, 4), float32]) */
}

def @func_14601() -> (Tensor[(12, 8, 11), float64], Tensor[(352), int32]) {
  %268 = fn () -> (Tensor[(12, 8, 11), float64], Tensor[(352), int32]) {
    %258 = @func_14032() /* ty=(Tensor[(12, 8, 11), float64], Tensor[(352), float32]) */;
    %259 = %258.1;
    %260 = @func_6697() /* ty=(Tensor[(12, 8, 11), float64], Tensor[(352), int8], Tensor[(352), float32]) */;
    %261 = %260.2;
    %262 = cast(%261, dtype="int32") /* ty=Tensor[(352), int32] */;
    %263 = shape_of(%259, dtype="int32") /* ty=Tensor[(1), int32] */;
    %264 = cast(%259, dtype="int32") /* ty=Tensor[(352), int32] */;
    %265 = dyn.reshape(%262, %263, newshape=[]) /* ty=Tensor[(?), int32] */;
    %266 = @func_5533() /* ty=Tensor[(12, 8, 11), float64] */;
    %267 = logical_xor(%264, %265) /* ty=Tensor[(352), int32] */;
    (%266, %267)
  };
  %268() /* ty=(Tensor[(12, 8, 11), float64], Tensor[(352), int32]) */
}

def @func_4752(%var_4750: Tensor[(990), uint32]) -> (Tensor[(12, 8, 11), uint16], Tensor[(15, 6, 11), uint32], Tensor[(990), uint32], Tensor[(12, 8, 11), float32]) {
  @func_4749(%var_4750) /* ty=(Tensor[(12, 8, 11), uint16], Tensor[(15, 6, 11), uint32], Tensor[(990), uint32], Tensor[(12, 8, 11), float32]) */
}

def @func_11497() -> Tensor[(352), float32] {
  %269 = @func_10258() /* ty=(Tensor[(352), float32], Tensor[(12, 8, 11), float64]) */;
  %269.0
}

def @func_11320() -> Tensor[(12, 8, 11), float64] {
  %271 = fn () -> Tensor[(12, 8, 11), float64] {
    %270 = @func_1235() /* ty=(Tensor[(12, 8, 11), float64], Tensor[(12, 8, 11), float32], Tensor[(12, 8, 11), float32]) */;
    %270.0
  };
  %271() /* ty=Tensor[(12, 8, 11), float64] */
}

def @func_12740(%var_12739: Tensor[(352), float32]) -> (Tensor[(12, 8, 11), float64], Tensor[(12, 8, 11), int8], Tensor[(8, 11, 4), float32], Tensor[(352), float32], Tensor[(12, 8, 11), float64]) {
  %286 = fn (%var_12725: Tensor[(352), float32]) -> (Tensor[(12, 8, 11), float64], Tensor[(12, 8, 11), int8], Tensor[(8, 11, 4), float32], Tensor[(352), float32], Tensor[(12, 8, 11), float64]) {
    %272 = @func_5351() /* ty=Tensor[(12, 8, 11), float64] */;
    %273 = cast(%272, dtype="float64") /* ty=Tensor[(12, 8, 11), float64] */;
    %274 = reshape(%273, newshape=[12, 8, 11]) /* ty=Tensor[(12, 8, 11), float64] */;
    %275 = cast(%var_12725, dtype="float32") /* ty=Tensor[(352), float32] */;
    %276 = reshape(%275, newshape=[352]) /* ty=Tensor[(352), float32] */;
    %277 = @func_9289(%276) /* ty=(Tensor[(352), int16], Tensor[(8, 11, 4), float32]) */;
    %278 = cast(%var_12725, dtype="float32") /* ty=Tensor[(352), float32] */;
    %279 = %277.1;
    %280 = cast(%279, dtype="float32") /* ty=Tensor[(8, 11, 4), float32] */;
    %281 = reshape(%278, newshape=[352]) /* ty=Tensor[(352), float32] */;
    %282 = reshape(%280, newshape=[8, 11, 4]) /* ty=Tensor[(8, 11, 4), float32] */;
    %283 = @func_1201(%281, %282) /* ty=(Tensor[(12, 8, 11), float64], Tensor[(12, 8, 11), float64], Tensor[(8, 11, 4), float64], Tensor[(8, 11, 4), uint8], Tensor[(8, 11, 4), bool], Tensor[(8, 11, 4), float32]) */;
    %284 = @func_7687(%274) /* ty=Tensor[(12, 8, 11), int8] */;
    %285 = %283.0;
    (%272, %284, %279, %var_12725, %285)
  };
  %286(%var_12739) /* ty=(Tensor[(12, 8, 11), float64], Tensor[(12, 8, 11), int8], Tensor[(8, 11, 4), float32], Tensor[(352), float32], Tensor[(12, 8, 11), float64]) */
}

def @func_8378() -> (Tensor[(8, 11, 4), uint64],) {
  @func_8376() /* ty=(Tensor[(8, 11, 4), uint64],) */
}

def @func_1625(%var_1613: Tensor[(990), uint32]) -> (Tensor[(12, 8, 11), float64], Tensor[(352), int8], Tensor[(352), float32], Tensor[(990), uint32]) {
  %287 = @func_1358() /* ty=(Tensor[(12, 8, 11), float64],) */;
  %288 = cast(meta[relay.Constant][7] /* ty=Tensor[(352), float32] */, dtype="float32") /* ty=Tensor[(352), float32] */;
  %289 = cast(%var_1613, dtype="uint32") /* ty=Tensor[(990), uint32] */;
  %290 = reshape(%288, newshape=[352]) /* ty=Tensor[(352), float32] */;
  %291 = reshape(%289, newshape=[990]) /* ty=Tensor[(990), uint32] */;
  %292 = @func_1580(%290, %291) /* ty=(Tensor[(352), int8], Tensor[(12, 8, 11), float64], Tensor[(990), uint32]) */;
  %293 = %287.0;
  %294 = %292.0;
  (%293, %294, meta[relay.Constant][7] /* ty=Tensor[(352), float32] */, %var_1613)
}

def @func_4637() -> (Tensor[(12, 8, 11), float64], Tensor[(12, 8, 11), float32]) {
  %295 = @func_2045() /* ty=(Tensor[(12, 8, 11), float64], Tensor[(12, 8, 11), float64]) */;
  %296 = %295.0;
  %297 = @func_3644() /* ty=Tensor[(12, 8, 11), float32] */;
  (%296, %297)
}

def @func_3736() -> Tensor[(12, 8, 11), float32] {
  %301 = fn () -> Tensor[(12, 8, 11), float32] {
    %298 = @func_2062() /* ty=(Tensor[(12, 8, 11), float64],) */;
    %299 = %298.0;
    %300 = cast(%299, dtype="float32") /* ty=Tensor[(12, 8, 11), float32] */;
    asinh(%300) /* ty=Tensor[(12, 8, 11), float32] */
  };
  %301() /* ty=Tensor[(12, 8, 11), float32] */
}

def @func_12011(%var_12009: float32, %var_12010: Tensor[(5, 16, 2), float32]) -> (Tensor[(5, 16, 2), float32],) {
  @func_12007(%var_12009, %var_12010) /* ty=(Tensor[(5, 16, 2), float32],) */
}

def @func_12762() -> (Tensor[(8, 11, 4), float64], Tensor[(12, 8, 11), float64]) {
  %306 = fn () -> (Tensor[(8, 11, 4), float64], Tensor[(12, 8, 11), float64]) {
    %302 = @func_3508() /* ty=(Tensor[(8, 11, 4), float64],) */;
    %303 = @func_4932() /* ty=(Tensor[(12, 8, 11), float64], Tensor[(12, 8, 11), float32], Tensor[(12, 8, 11), int64]) */;
    %304 = %302.0;
    %305 = %303.0;
    (%304, %305)
  };
  %306() /* ty=(Tensor[(8, 11, 4), float64], Tensor[(12, 8, 11), float64]) */
}

def @func_14882() -> (Tensor[(1056), float64],) {
  @func_14880() /* ty=(Tensor[(1056), float64],) */
}

def @func_14033() -> (Tensor[(12, 8, 11), float64], Tensor[(352), float32]) {
  %311 = fn () -> (Tensor[(12, 8, 11), float64], Tensor[(352), float32]) {
    %307 = @func_7600() /* ty=(Tensor[(12, 8, 11), float64],) */;
    %308 = @func_8770() /* ty=(Tensor[(352), float32],) */;
    %309 = %307.0;
    %310 = %308.0;
    (%309, %310)
  };
  %311() /* ty=(Tensor[(12, 8, 11), float64], Tensor[(352), float32]) */
}

def @func_9944() -> (Tensor[(352), float32],) {
  %314 = fn () -> (Tensor[(352), float32],) {
    %312 = @func_2306() /* ty=(Tensor[(352), float32], Tensor[(352), float32]) */;
    %313 = %312.1;
    (%313,)
  };
  %314() /* ty=(Tensor[(352), float32],) */
}

def @func_14880() -> (Tensor[(1056), float64],) {
  %315 = @func_13065() /* ty=(Tensor[(16, 13, 15), bool], Tensor[(12, 8, 11), int8], Tensor[(1056), float64]) */;
  %316 = %315.2;
  (%316,)
}

def @func_15095() -> (Tensor[(12, 8, 11), float64], Tensor[(12, 8, 11), float32]) {
  @func_15093() /* ty=(Tensor[(12, 8, 11), float64], Tensor[(12, 8, 11), float32]) */
}

def @func_2064() -> (Tensor[(12, 8, 11), float64],) {
  @func_2062() /* ty=(Tensor[(12, 8, 11), float64],) */
}

def @func_8103() -> (Tensor[(15, 6, 11), uint32],) {
  %319 = fn () -> (Tensor[(15, 6, 11), uint32],) {
    %317 = @func_5221() /* ty=(Tensor[(15, 6, 11), uint32],) */;
    %318 = %317.0;
    (%318,)
  };
  %319() /* ty=(Tensor[(15, 6, 11), uint32],) */
}

def @func_10463(%var_10432: Tensor[(8, 11, 4), uint64]) -> Tensor[(8, 11, 4), float32] {
  %320 = @func_8376() /* ty=(Tensor[(8, 11, 4), uint64],) */;
  %321 = %320.0;
  %322 = cast(%var_10432, dtype="float32") /* ty=Tensor[(8, 11, 4), float32] */;
  %323 = shape_of(%321, dtype="int32") /* ty=Tensor[(3), int32] */;
  %324 = cast(%321, dtype="float32") /* ty=Tensor[(8, 11, 4), float32] */;
  %325 = dyn.reshape(%322, %323, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  power(%324, %325) /* ty=Tensor[(8, 11, 4), float32] */
}

def @func_9859() -> (Tensor[(12, 8, 11), float64], Tensor[(8, 11, 4), float64]) {
  %329 = fn () -> (Tensor[(12, 8, 11), float64], Tensor[(8, 11, 4), float64]) {
    %326 = @func_5008() /* ty=(Tensor[(8, 11, 4), float64],) */;
    %327 = @func_8255() /* ty=Tensor[(12, 8, 11), float64] */;
    %328 = %326.0;
    (%327, %328)
  };
  %329() /* ty=(Tensor[(12, 8, 11), float64], Tensor[(8, 11, 4), float64]) */
}

def @func_13520() -> Tensor[(8, 11, 4), uint64] {
  @func_9074() /* ty=Tensor[(8, 11, 4), uint64] */
}

def @func_1741() -> (Tensor[(12, 8, 11), float32],) {
  %330 = @func_1400() /* ty=Tensor[(12, 8, 11), float32] */;
  (%330,)
}

def @func_14175() -> (Tensor[(12, 8, 11), float64],) {
  %331 = @func_5351() /* ty=Tensor[(12, 8, 11), float64] */;
  (%331,)
}

def @func_3350() -> Tensor[(12, 8, 11), int64] {
  %333 = fn () -> Tensor[(12, 8, 11), int64] {
    %332 = @func_2238() /* ty=(Tensor[(12, 8, 11), int64],) */;
    %332.0
  };
  %333() /* ty=Tensor[(12, 8, 11), int64] */
}

def @func_14828(%var_14826: Tensor[(3, 16, 8), float32], %var_14827: Tensor[(3, 16, 8), float32]) -> (Tensor[(3, 16, 8), bool], Tensor[(3, 16, 8), float64]) {
  %343 = fn (%var_14797: Tensor[(3, 16, 8), float32], %var_14802: Tensor[(3, 16, 8), float32]) -> (Tensor[(3, 16, 8), bool], Tensor[(3, 16, 8), float64]) {
    %334 = cast(%var_14797, dtype="float32") /* ty=Tensor[(3, 16, 8), float32] */;
    %335 = acosh(%334) /* ty=Tensor[(3, 16, 8), float32] */;
    %336 = cast(%var_14802, dtype="bool") /* ty=Tensor[(3, 16, 8), bool] */;
    %337 = shape_of(%335, dtype="int32") /* ty=Tensor[(3), int32] */;
    %338 = cast(%335, dtype="bool") /* ty=Tensor[(3, 16, 8), bool] */;
    %339 = dyn.reshape(%336, %337, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    %340 = cast(%var_14802, dtype="float64") /* ty=Tensor[(3, 16, 8), float64] */;
    %341 = not_equal(%338, %339) /* ty=Tensor[(3, 16, 8), bool] */;
    %342 = log10(%340) /* ty=Tensor[(3, 16, 8), float64] */;
    (%341, %342)
  };
  %343(%var_14826, %var_14827) /* ty=(Tensor[(3, 16, 8), bool], Tensor[(3, 16, 8), float64]) */
}

def @func_15221() -> (Tensor[(825), uint32], Tensor[(12, 8, 11), float64], Tensor[(12, 8, 11), float64], Tensor[(12, 8, 11), float64], Tensor[(12, 8, 11), float64], Tensor[(990), uint32], Tensor[(12, 8, 11), float64], Tensor[(352), bool]) {
  @func_15219() /* ty=(Tensor[(825), uint32], Tensor[(12, 8, 11), float64], Tensor[(12, 8, 11), float64], Tensor[(12, 8, 11), float64], Tensor[(12, 8, 11), float64], Tensor[(990), uint32], Tensor[(12, 8, 11), float64], Tensor[(352), bool]) */
}

def @func_10517() -> (Tensor[(8, 11, 4), float64], Tensor[(12, 8, 11), float32]) {
  %344 = @func_2107() /* ty=(Tensor[(8, 11, 4), float64], Tensor[(12, 8, 11), float32]) */;
  %345 = @func_5050() /* ty=(Tensor[(12, 8, 11), float32], Tensor[(12, 8, 11), float32]) */;
  %346 = %344.0;
  %347 = %345.0;
  (%346, %347)
}

def @func_8295() -> (Tensor[(990), uint32],) {
  @func_8293() /* ty=(Tensor[(990), uint32],) */
}

def @func_5353() -> Tensor[(12, 8, 11), float64] {
  @func_5351() /* ty=Tensor[(12, 8, 11), float64] */
}

def @func_1464() -> (Tensor[(12, 8, 11), float64], Tensor[(12, 8, 11), float64]) {
  %352 = fn () -> (Tensor[(12, 8, 11), float64], Tensor[(12, 8, 11), float64]) {
    %348 = @func_1358() /* ty=(Tensor[(12, 8, 11), float64],) */;
    %349 = @func_1358() /* ty=(Tensor[(12, 8, 11), float64],) */;
    %350 = %348.0;
    %351 = %349.0;
    (%350, %351)
  };
  %352() /* ty=(Tensor[(12, 8, 11), float64], Tensor[(12, 8, 11), float64]) */
}

def @func_5050() -> (Tensor[(12, 8, 11), float32], Tensor[(12, 8, 11), float32]) {
  %353 = @func_4084() /* ty=(Tensor[(12, 8, 11), float32],) */;
  %354 = %353.0;
  %355 = @func_3644() /* ty=Tensor[(12, 8, 11), float32] */;
  (%354, %355)
}

def @func_11762() -> (Tensor[(16, 16, 13), float64],) {
  %358 = fn () -> (Tensor[(16, 16, 13), float64],) {
    %356 = @func_8691() /* ty=(Tensor[(352), float32], Tensor[(11, 15, 5), uint32], Tensor[(825), uint32], Tensor[(16, 16, 13), float64]) */;
    %357 = %356.3;
    (%357,)
  };
  %358() /* ty=(Tensor[(16, 16, 13), float64],) */
}

def @func_13199() -> (Tensor[(12, 8, 11), float64], Tensor[(12, 8, 11), float32], Tensor[(12, 8, 11), float64], Tensor[(12, 8, 11), float64], Tensor[(8, 11, 4), uint32]) {
  %372 = fn () -> (Tensor[(12, 8, 11), float64], Tensor[(12, 8, 11), float32], Tensor[(12, 8, 11), float64], Tensor[(12, 8, 11), float64], Tensor[(8, 11, 4), uint32]) {
    %359 = @func_12479() /* ty=(Tensor[(12, 8, 11), float32],) */;
    %360 = @func_6803() /* ty=Tensor[(8, 11, 4), float32] */;
    %361 = @func_8453() /* ty=(Tensor[(12, 8, 11), float64], Tensor[(8, 11, 4), float32]) */;
    %362 = %361.1;
    %363 = cast(%362, dtype="uint32") /* ty=Tensor[(8, 11, 4), uint32] */;
    %364 = shape_of(%360, dtype="int32") /* ty=Tensor[(3), int32] */;
    %365 = cast(%360, dtype="uint32") /* ty=Tensor[(8, 11, 4), uint32] */;
    %366 = dyn.reshape(%363, %364, newshape=[]) /* ty=Tensor[(?, ?, ?), uint32] */;
    %367 = @func_2756() /* ty=Tensor[(12, 8, 11), float64] */;
    %368 = %359.0;
    %369 = @func_11319() /* ty=Tensor[(12, 8, 11), float64] */;
    %370 = @func_11965() /* ty=Tensor[(12, 8, 11), float64] */;
    %371 = bitwise_or(%365, %366) /* ty=Tensor[(8, 11, 4), uint32] */;
    (%367, %368, %369, %370, %371)
  };
  %372() /* ty=(Tensor[(12, 8, 11), float64], Tensor[(12, 8, 11), float32], Tensor[(12, 8, 11), float64], Tensor[(12, 8, 11), float64], Tensor[(8, 11, 4), uint32]) */
}

def @func_4329() -> (Tensor[(12, 8, 11), float64],) {
  %374 = fn () -> (Tensor[(12, 8, 11), float64],) {
    %373 = @func_2380() /* ty=Tensor[(12, 8, 11), float64] */;
    (%373,)
  };
  %374() /* ty=(Tensor[(12, 8, 11), float64],) */
}

def @func_1560() -> (Tensor[(12, 8, 11), uint16], Tensor[(8, 11, 4), float64], Tensor[(352), float32], Tensor[(8, 11, 4), bool]) {
  %393 = fn () -> (Tensor[(12, 8, 11), uint16], Tensor[(8, 11, 4), float64], Tensor[(352), float32], Tensor[(8, 11, 4), bool]) {
    %375 = @func_1358() /* ty=(Tensor[(12, 8, 11), float64],) */;
    %376 = %375.0;
    %377 = @func_1117() /* ty=Tensor[(12, 8, 11), float64] */;
    %378 = cast(%377, dtype="uint16") /* ty=Tensor[(12, 8, 11), uint16] */;
    %379 = shape_of(%376, dtype="int32") /* ty=Tensor[(3), int32] */;
    %380 = cast(%376, dtype="uint16") /* ty=Tensor[(12, 8, 11), uint16] */;
    %381 = dyn.reshape(%378, %379, newshape=[]) /* ty=Tensor[(?, ?, ?), uint16] */;
    %382 = cast(meta[relay.Constant][8] /* ty=Tensor[(352), float32] */, dtype="float32") /* ty=Tensor[(352), float32] */;
    %383 = reshape(%382, newshape=[352]) /* ty=Tensor[(352), float32] */;
    %384 = @func_1300(%383) /* ty=(Tensor[(8, 11, 4), bool], Tensor[(352), float32], Tensor[(12, 8, 11), float64], Tensor[(8, 11, 4), float64]) */;
    %385 = %384.3;
    %386 = cast(%385, dtype="float32") /* ty=Tensor[(8, 11, 4), float32] */;
    %387 = cast(%385, dtype="float32") /* ty=Tensor[(8, 11, 4), float32] */;
    %388 = reshape(%386, newshape=[352]) /* ty=Tensor[(352), float32] */;
    %389 = reshape(%387, newshape=[8, 11, 4]) /* ty=Tensor[(8, 11, 4), float32] */;
    %390 = @func_1201(%388, %389) /* ty=(Tensor[(12, 8, 11), float64], Tensor[(12, 8, 11), float64], Tensor[(8, 11, 4), float64], Tensor[(8, 11, 4), uint8], Tensor[(8, 11, 4), bool], Tensor[(8, 11, 4), float32]) */;
    %391 = bitwise_xor(%380, %381) /* ty=Tensor[(12, 8, 11), uint16] */;
    %392 = %390.4;
    (%391, %385, meta[relay.Constant][8] /* ty=Tensor[(352), float32] */, %392)
  };
  %393() /* ty=(Tensor[(12, 8, 11), uint16], Tensor[(8, 11, 4), float64], Tensor[(352), float32], Tensor[(8, 11, 4), bool]) */
}

def @func_3510() -> (Tensor[(8, 11, 4), float64],) {
  @func_3508() /* ty=(Tensor[(8, 11, 4), float64],) */
}

def @func_9204() -> Tensor[(12, 8, 11), float64] {
  %395 = fn () -> Tensor[(12, 8, 11), float64] {
    %394 = @func_4637() /* ty=(Tensor[(12, 8, 11), float64], Tensor[(12, 8, 11), float32]) */;
    %394.0
  };
  %395() /* ty=Tensor[(12, 8, 11), float64] */
}

def @func_10139() -> (Tensor[(352), float32], Tensor[(12, 8, 11), float32]) {
  %399 = fn () -> (Tensor[(352), float32], Tensor[(12, 8, 11), float32]) {
    %396 = @func_9943() /* ty=(Tensor[(352), float32],) */;
    %397 = %396.0;
    %398 = @func_3644() /* ty=Tensor[(12, 8, 11), float32] */;
    (%397, %398)
  };
  %399() /* ty=(Tensor[(352), float32], Tensor[(12, 8, 11), float32]) */
}

def @func_8522() -> (Tensor[(990), uint32], Tensor[(12, 8, 11), float64]) {
  %400 = @func_6054() /* ty=Tensor[(990), uint32] */;
  %401 = @func_6069() /* ty=Tensor[(12, 8, 11), float64] */;
  (%400, %401)
}

def @func_7080() -> (Tensor[(12, 8, 11), float64], Tensor[(12, 8, 11), float64]) {
  @func_7078() /* ty=(Tensor[(12, 8, 11), float64], Tensor[(12, 8, 11), float64]) */
}

def @func_10818() -> Tensor[(990), uint32] {
  @func_10816() /* ty=Tensor[(990), uint32] */
}

def @func_6484() -> (Tensor[(12, 8, 11), float64], Tensor[(12, 8, 11), float64], Tensor[(12, 8, 11), float32]) {
  %407 = fn () -> (Tensor[(12, 8, 11), float64], Tensor[(12, 8, 11), float64], Tensor[(12, 8, 11), float32]) {
    %402 = @func_3489() /* ty=(Tensor[(12, 8, 11), float32], Tensor[(12, 8, 11), float64], Tensor[(12, 8, 11), float64], Tensor[(12, 8, 11), float32], Tensor[(990), uint32]) */;
    %403 = @func_5050() /* ty=(Tensor[(12, 8, 11), float32], Tensor[(12, 8, 11), float32]) */;
    %404 = @func_1117() /* ty=Tensor[(12, 8, 11), float64] */;
    %405 = %402.2;
    %406 = %403.1;
    (%404, %405, %406)
  };
  %407() /* ty=(Tensor[(12, 8, 11), float64], Tensor[(12, 8, 11), float64], Tensor[(12, 8, 11), float32]) */
}

def @func_1360() -> (Tensor[(12, 8, 11), float64],) {
  @func_1358() /* ty=(Tensor[(12, 8, 11), float64],) */
}

def @func_2774() -> (Tensor[(12, 8, 11), float64],) {
  %408 = @func_2622() /* ty=(Tensor[(12, 8, 11), float64], Tensor[(12, 8, 11), float64]) */;
  %409 = %408.1;
  (%409,)
}

def @func_12810() -> Tensor[(8, 11, 4), float64] {
  %410 = @func_6996() /* ty=(Tensor[(8, 11, 4), float64], Tensor[(352), float32]) */;
  %410.0
}

def @func_1580(%var_1567: Tensor[(352), float32], %var_1576: Tensor[(990), uint32]) -> (Tensor[(352), int8], Tensor[(12, 8, 11), float64], Tensor[(990), uint32]) {
  %411 = @func_1559() /* ty=(Tensor[(12, 8, 11), uint16], Tensor[(8, 11, 4), float64], Tensor[(352), float32], Tensor[(8, 11, 4), bool]) */;
  %412 = %411.2;
  %413 = cast(%var_1567, dtype="int8") /* ty=Tensor[(352), int8] */;
  %414 = shape_of(%412, dtype="int32") /* ty=Tensor[(1), int32] */;
  %415 = cast(%412, dtype="int8") /* ty=Tensor[(352), int8] */;
  %416 = dyn.reshape(%413, %414, newshape=[]) /* ty=Tensor[(?), int8] */;
  %417 = cast(%var_1576, dtype="uint32") /* ty=Tensor[(990), uint32] */;
  %418 = reshape(%417, newshape=[15, 6, 11]) /* ty=Tensor[(15, 6, 11), uint32] */;
  %419 = @func_1342(%418) /* ty=(Tensor[(15, 6, 11), uint32], Tensor[(12, 8, 11), float64]) */;
  %420 = minimum(%415, %416) /* ty=Tensor[(352), int8] */;
  %421 = %419.1;
  (%420, %421, %var_1576)
}

def @func_10381() -> Tensor[(12, 8, 11), float64] {
  @func_10379() /* ty=Tensor[(12, 8, 11), float64] */
}

def @func_11165() -> (Tensor[(12, 8, 11), float64], Tensor[(12, 8, 11), float32], Tensor[(352), float32], Tensor[(8, 11, 4), float64]) {
  @func_11163() /* ty=(Tensor[(12, 8, 11), float64], Tensor[(12, 8, 11), float32], Tensor[(352), float32], Tensor[(8, 11, 4), float64]) */
}

def @func_13962() -> (Tensor[(12, 8, 11), float32],) {
  %422 = @func_4903() /* ty=(Tensor[(12, 8, 11), float32], Tensor[(12, 8, 11), float64]) */;
  %423 = %422.0;
  (%423,)
}

def @func_10157() -> (Tensor[(12, 8, 11), float64], Tensor[(12, 8, 11), float64]) {
  %427 = fn () -> (Tensor[(12, 8, 11), float64], Tensor[(12, 8, 11), float64]) {
    %424 = @func_10103() /* ty=(Tensor[(12, 8, 11), float64],) */;
    %425 = @func_1117() /* ty=Tensor[(12, 8, 11), float64] */;
    %426 = %424.0;
    (%425, %426)
  };
  %427() /* ty=(Tensor[(12, 8, 11), float64], Tensor[(12, 8, 11), float64]) */
}

def @func_7384() -> (Tensor[(352), float32],) {
  %428 = @func_3796() /* ty=(Tensor[(352), float32],) */;
  %429 = %428.0;
  (%429,)
}

def @func_11499() -> Tensor[(352), float32] {
  @func_11497() /* ty=Tensor[(352), float32] */
}

def @func_9681() -> (Tensor[(8, 11, 4), float64], Tensor[(12, 8, 11), float64], Tensor[(8, 11, 4), float32], Tensor[(12, 8, 11), float64]) {
  @func_9679() /* ty=(Tensor[(8, 11, 4), float64], Tensor[(12, 8, 11), float64], Tensor[(8, 11, 4), float32], Tensor[(12, 8, 11), float64]) */
}

def @func_10878() -> (Tensor[(12, 8, 11), float32], Tensor[(12, 8, 11), float32]) {
  %430 = @func_6483() /* ty=(Tensor[(12, 8, 11), float64], Tensor[(12, 8, 11), float64], Tensor[(12, 8, 11), float32]) */;
  %431 = @func_4637() /* ty=(Tensor[(12, 8, 11), float64], Tensor[(12, 8, 11), float32]) */;
  %432 = %430.2;
  %433 = %431.1;
  (%432, %433)
}

def @func_7657(%var_7655: Tensor[(1, 390), bool]) -> (Tensor[(12, 8, 11), float64], Tensor[(352), float32], Tensor[(12, 8, 11), float64], Tensor[(3, 10, 13), bool], Tensor[(1, 390), bool]) {
  @func_7654(%var_7655) /* ty=(Tensor[(12, 8, 11), float64], Tensor[(352), float32], Tensor[(12, 8, 11), float64], Tensor[(3, 10, 13), bool], Tensor[(1, 390), bool]) */
}

def @func_1119() -> Tensor[(12, 8, 11), float64] {
  @func_1117() /* ty=Tensor[(12, 8, 11), float64] */
}

def @func_13360(%var_13319: Tensor[(352), float32]) -> (Tensor[(12, 8, 11), float64], Tensor[(8, 11, 4), bool], Tensor[(352), float32], Tensor[(16, 16, 13), float64]) {
  %434 = @func_4502() /* ty=(Tensor[(12, 8, 11), float64], Tensor[(16, 16, 13), float64], Tensor[(12, 8, 11), float64]) */;
  %435 = cast(%var_13319, dtype="float32") /* ty=Tensor[(352), float32] */;
  %436 = cast(%var_13319, dtype="float32") /* ty=Tensor[(352), float32] */;
  %437 = reshape(%435, newshape=[352]) /* ty=Tensor[(352), float32] */;
  %438 = reshape(%436, newshape=[8, 11, 4]) /* ty=Tensor[(8, 11, 4), float32] */;
  %439 = @func_1201(%437, %438) /* ty=(Tensor[(12, 8, 11), float64], Tensor[(12, 8, 11), float64], Tensor[(8, 11, 4), float64], Tensor[(8, 11, 4), uint8], Tensor[(8, 11, 4), bool], Tensor[(8, 11, 4), float32]) */;
  %440 = @func_11761() /* ty=(Tensor[(16, 16, 13), float64],) */;
  %441 = %434.0;
  %442 = %439.4;
  %443 = %440.0;
  (%441, %442, %var_13319, %443)
}

def @func_13363(%var_13361: Tensor[(352), float32]) -> (Tensor[(12, 8, 11), float64], Tensor[(8, 11, 4), bool], Tensor[(352), float32], Tensor[(16, 16, 13), float64]) {
  @func_13360(%var_13361) /* ty=(Tensor[(12, 8, 11), float64], Tensor[(8, 11, 4), bool], Tensor[(352), float32], Tensor[(16, 16, 13), float64]) */
}

def @func_15274() -> Tensor[(12, 8, 11), float32] {
  @func_15272() /* ty=Tensor[(12, 8, 11), float32] */
}

def @func_7246() -> (Tensor[(990), uint32],) {
  %444 = @func_5772() /* ty=(Tensor[(12, 8, 11), float64], Tensor[(12, 8, 11), float64], Tensor[(12, 8, 11), float64], Tensor[(990), uint32], Tensor[(15, 6, 11), uint32], Tensor[(8, 11, 4), float32]) */;
  %445 = %444.3;
  (%445,)
}

def @func_14157() -> (Tensor[(990), uint32], Tensor[(12, 8, 11), float64], Tensor[(990), uint32], Tensor[(352), float32]) {
  @func_14155() /* ty=(Tensor[(990), uint32], Tensor[(12, 8, 11), float64], Tensor[(990), uint32], Tensor[(352), float32]) */
}

def @func_6056() -> Tensor[(990), uint32] {
  @func_6054() /* ty=Tensor[(990), uint32] */
}

def @func_5320() -> Tensor[(990), uint32] {
  @func_5318() /* ty=Tensor[(990), uint32] */
}

def @func_7851() -> (Tensor[(12, 8, 11), float32], Tensor[(12, 8, 11), float32]) {
  %446 = @func_6871() /* ty=(Tensor[(12, 8, 11), float32],) */;
  %447 = @func_4052() /* ty=(Tensor[(12, 8, 11), float32], Tensor[(12, 8, 11), float32]) */;
  %448 = %447.0;
  %449 = cast(%448, dtype="float32") /* ty=Tensor[(12, 8, 11), float32] */;
  %450 = %446.0;
  %451 = exp(%449) /* ty=Tensor[(12, 8, 11), float32] */;
  (%450, %451)
}

def @func_2884(%var_2882: Tensor[(15, 2, 16), float32], %var_2883: Tensor[(990), uint32]) -> (Tensor[(15, 2, 16), float32], Tensor[(8, 11, 4), float64], Tensor[(352), float32], Tensor[(352), int8], Tensor[(990), uint32], Tensor[(12, 8, 11), float32], Tensor[(12, 8, 11), float32]) {
  @func_2880(%var_2882, %var_2883) /* ty=(Tensor[(15, 2, 16), float32], Tensor[(8, 11, 4), float64], Tensor[(352), float32], Tensor[(352), int8], Tensor[(990), uint32], Tensor[(12, 8, 11), float32], Tensor[(12, 8, 11), float32]) */
}

def @func_6133() -> (Tensor[(12, 8, 11), float64], Tensor[(12, 8, 11), float64], Tensor[(990), uint32], Tensor[(352), int8], Tensor[(352), float32]) {
  %460 = fn () -> (Tensor[(12, 8, 11), float64], Tensor[(12, 8, 11), float64], Tensor[(990), uint32], Tensor[(352), int8], Tensor[(352), float32]) {
    %452 = @func_4328() /* ty=(Tensor[(12, 8, 11), float64],) */;
    %453 = cast(meta[relay.Constant][9] /* ty=Tensor[(352), float32] */, dtype="float32") /* ty=Tensor[(352), float32] */;
    %454 = reshape(%453, newshape=[352]) /* ty=Tensor[(352), float32] */;
    %455 = @func_5866(%454) /* ty=(Tensor[(12, 8, 11), float64], Tensor[(12, 8, 11), float64], Tensor[(352), int8], Tensor[(352), float32], Tensor[(990), uint32], Tensor[(12, 8, 11), float64]) */;
    %456 = @func_2955() /* ty=Tensor[(12, 8, 11), float64] */;
    %457 = %452.0;
    %458 = @func_6054() /* ty=Tensor[(990), uint32] */;
    %459 = %455.2;
    (%456, %457, %458, %459, meta[relay.Constant][9] /* ty=Tensor[(352), float32] */)
  };
  %460() /* ty=(Tensor[(12, 8, 11), float64], Tensor[(12, 8, 11), float64], Tensor[(990), uint32], Tensor[(352), int8], Tensor[(352), float32]) */
}

def @func_6873() -> (Tensor[(12, 8, 11), float32],) {
  @func_6871() /* ty=(Tensor[(12, 8, 11), float32],) */
}

def @func_5578() -> (Tensor[(8, 11, 4), float64],) {
  %463 = fn () -> (Tensor[(8, 11, 4), float64],) {
    %461 = @func_2107() /* ty=(Tensor[(8, 11, 4), float64], Tensor[(12, 8, 11), float32]) */;
    %462 = %461.0;
    (%462,)
  };
  %463() /* ty=(Tensor[(8, 11, 4), float64],) */
}

def @func_12646() -> (Tensor[(352), bool], Tensor[(990), uint32]) {
  %464 = @func_10678() /* ty=(Tensor[(352), bool],) */;
  %465 = @func_8522() /* ty=(Tensor[(990), uint32], Tensor[(12, 8, 11), float64]) */;
  %466 = %464.0;
  %467 = %465.0;
  (%466, %467)
}

def @func_8293() -> (Tensor[(990), uint32],) {
  %468 = @func_7310() /* ty=(Tensor[(12, 8, 11), float64], Tensor[(352), float32], Tensor[(990), uint32]) */;
  %469 = %468.2;
  (%469,)
}

def @func_14955() -> (Tensor[(12, 8, 11), float64], Tensor[(8, 11, 4), float32]) {
  %473 = fn () -> (Tensor[(12, 8, 11), float64], Tensor[(8, 11, 4), float32]) {
    %470 = @func_4190() /* ty=(Tensor[(8, 11, 4), float32], Tensor[(12, 8, 11), float64], Tensor[(12, 8, 11), int64]) */;
    %471 = @func_5533() /* ty=Tensor[(12, 8, 11), float64] */;
    %472 = %470.0;
    (%471, %472)
  };
  %473() /* ty=(Tensor[(12, 8, 11), float64], Tensor[(8, 11, 4), float32]) */
}

def @func_7241() -> (Tensor[(16, 16, 13), float64],) {
  %476 = fn () -> (Tensor[(16, 16, 13), float64],) {
    %474 = @func_4110() /* ty=(Tensor[(16, 16, 13), float64], Tensor[(12, 8, 11), float32]) */;
    %475 = %474.0;
    (%475,)
  };
  %476() /* ty=(Tensor[(16, 16, 13), float64],) */
}

def @func_1358() -> (Tensor[(12, 8, 11), float64],) {
  %477 = @func_1117() /* ty=Tensor[(12, 8, 11), float64] */;
  (%477,)
}

def @func_8256() -> Tensor[(12, 8, 11), float64] {
  %479 = fn () -> Tensor[(12, 8, 11), float64] {
    %478 = @func_1235() /* ty=(Tensor[(12, 8, 11), float64], Tensor[(12, 8, 11), float32], Tensor[(12, 8, 11), float32]) */;
    %478.0
  };
  %479() /* ty=Tensor[(12, 8, 11), float64] */
}

def @func_2205() -> (Tensor[(12, 8, 11), float32], Tensor[(12, 8, 11), float64], Tensor[(12, 8, 11), float64]) {
  %480 = @func_1971() /* ty=(Tensor[(12, 8, 11), float64], Tensor[(12, 8, 11), float32]) */;
  %481 = @func_1971() /* ty=(Tensor[(12, 8, 11), float64], Tensor[(12, 8, 11), float32]) */;
  %482 = @func_2062() /* ty=(Tensor[(12, 8, 11), float64],) */;
  %483 = %480.1;
  %484 = %481.0;
  %485 = %482.0;
  (%483, %484, %485)
}

def @func_10104() -> (Tensor[(12, 8, 11), float64],) {
  %488 = fn () -> (Tensor[(12, 8, 11), float64],) {
    %486 = @func_6343() /* ty=(Tensor[(12, 8, 11), float64], Tensor[(12, 8, 11), float64], Tensor[(12, 8, 11), float64]) */;
    %487 = %486.1;
    (%487,)
  };
  %488() /* ty=(Tensor[(12, 8, 11), float64],) */
}

def @func_6789() -> Tensor[(12, 8, 11), float32] {
  @func_6787() /* ty=Tensor[(12, 8, 11), float32] */
}

def @func_2776() -> (Tensor[(12, 8, 11), float64],) {
  @func_2774() /* ty=(Tensor[(12, 8, 11), float64],) */
}

def @func_7311() -> (Tensor[(12, 8, 11), float64], Tensor[(352), float32], Tensor[(990), uint32]) {
  %494 = fn () -> (Tensor[(12, 8, 11), float64], Tensor[(352), float32], Tensor[(990), uint32]) {
    %489 = @func_4932() /* ty=(Tensor[(12, 8, 11), float64], Tensor[(12, 8, 11), float32], Tensor[(12, 8, 11), int64]) */;
    %490 = @func_6996() /* ty=(Tensor[(8, 11, 4), float64], Tensor[(352), float32]) */;
    %491 = %489.0;
    %492 = %490.1;
    %493 = @func_5318() /* ty=Tensor[(990), uint32] */;
    (%491, %492, %493)
  };
  %494() /* ty=(Tensor[(12, 8, 11), float64], Tensor[(352), float32], Tensor[(990), uint32]) */
}

def @func_14703() -> (Tensor[(8, 11, 4), float64], Tensor[(16, 16, 13), float32], Tensor[(12, 8, 11), float64]) {
  %495 = @func_3508() /* ty=(Tensor[(8, 11, 4), float64],) */;
  %496 = @func_4766() /* ty=Tensor[(16, 16, 13), float64] */;
  %497 = cast(%496, dtype="float32") /* ty=Tensor[(16, 16, 13), float32] */;
  %498 = @func_7600() /* ty=(Tensor[(12, 8, 11), float64],) */;
  %499 = %495.0;
  %500 = atan(%497) /* ty=Tensor[(16, 16, 13), float32] */;
  %501 = %498.0;
  (%499, %500, %501)
}

def @func_1402() -> Tensor[(12, 8, 11), float32] {
  @func_1400() /* ty=Tensor[(12, 8, 11), float32] */
}

def @func_12419() -> (Tensor[(12, 8, 11), float64], Tensor[(15, 6, 11), uint32], Tensor[(352), float32]) {
  @func_12417() /* ty=(Tensor[(12, 8, 11), float64], Tensor[(15, 6, 11), uint32], Tensor[(352), float32]) */
}

def @func_9543() -> (Tensor[(15, 6, 11), uint32], Tensor[(12, 8, 11), float64]) {
  %502 = @func_5221() /* ty=(Tensor[(15, 6, 11), uint32],) */;
  %503 = @func_2774() /* ty=(Tensor[(12, 8, 11), float64],) */;
  %504 = %502.0;
  %505 = %503.0;
  (%504, %505)
}

def @func_10791() -> (Tensor[(12, 8, 11), float32], Tensor[(8, 11, 4), float32]) {
  %510 = fn () -> (Tensor[(12, 8, 11), float32], Tensor[(8, 11, 4), float32]) {
    %506 = @func_6528() /* ty=(Tensor[(12, 8, 11), float32], Tensor[(12, 8, 11), float32]) */;
    %507 = @func_4190() /* ty=(Tensor[(8, 11, 4), float32], Tensor[(12, 8, 11), float64], Tensor[(12, 8, 11), int64]) */;
    %508 = %506.0;
    %509 = %507.0;
    (%508, %509)
  };
  %510() /* ty=(Tensor[(12, 8, 11), float32], Tensor[(8, 11, 4), float32]) */
}

def @func_2062() -> (Tensor[(12, 8, 11), float64],) {
  %511 = @func_1235() /* ty=(Tensor[(12, 8, 11), float64], Tensor[(12, 8, 11), float32], Tensor[(12, 8, 11), float32]) */;
  %512 = %511.0;
  (%512,)
}

def @func_6272(%var_6270: uint16, %var_6271: Tensor[(9, 5, 5), uint16]) -> Tensor[(9, 5, 5), bool] {
  @func_6268(%var_6270, %var_6271) /* ty=Tensor[(9, 5, 5), bool] */
}

def @func_15409() -> Tensor[(12, 8, 11), float32] {
  @func_15407() /* ty=Tensor[(12, 8, 11), float32] */
}

def @func_262(%var_189: float32, %var_190: Tensor[(8, 11, 4), float32]) -> (Tensor[(8, 11, 4), float32],) {
  %513 = cast(%var_189, dtype="float32") /* ty=float32 */;
  %514 = cast(%var_190, dtype="float32") /* ty=Tensor[(8, 11, 4), float32] */;
  %515 = mod(%513, %514) /* ty=Tensor[(8, 11, 4), float32] */;
  (%515,)
}

def @func_15272() -> Tensor[(12, 8, 11), float32] {
  %516 = @func_8214() /* ty=(Tensor[(352), uint64], Tensor[(352), float32], Tensor[(12, 8, 11), float32]) */;
  %516.2
}

def @func_1628(%var_1626: Tensor[(990), uint32]) -> (Tensor[(12, 8, 11), float64], Tensor[(352), int8], Tensor[(352), float32], Tensor[(990), uint32]) {
  @func_1625(%var_1626) /* ty=(Tensor[(12, 8, 11), float64], Tensor[(352), int8], Tensor[(352), float32], Tensor[(990), uint32]) */
}

def @func_10679() -> (Tensor[(352), bool],) {
  %519 = fn () -> (Tensor[(352), bool],) {
    %517 = @func_10317() /* ty=(Tensor[(352), bool],) */;
    %518 = %517.0;
    (%518,)
  };
  %519() /* ty=(Tensor[(352), bool],) */
}

def @func_15431(%var_15429: Tensor[(15, 11, 2), bool], %var_15430: Tensor[(15, 11, 2), bool]) -> (Tensor[(15, 11, 2), bool],) {
  @func_15427(%var_15429, %var_15430) /* ty=(Tensor[(15, 11, 2), bool],) */
}

def @func_2239() -> (Tensor[(12, 8, 11), int64],) {
  %529 = fn () -> (Tensor[(12, 8, 11), int64],) {
    %520 = @func_1971() /* ty=(Tensor[(12, 8, 11), float64], Tensor[(12, 8, 11), float32]) */;
    %521 = %520.1;
    %522 = @func_1741() /* ty=(Tensor[(12, 8, 11), float32],) */;
    %523 = %522.0;
    %524 = cast(%523, dtype="int64") /* ty=Tensor[(12, 8, 11), int64] */;
    %525 = shape_of(%521, dtype="int32") /* ty=Tensor[(3), int32] */;
    %526 = cast(%521, dtype="int64") /* ty=Tensor[(12, 8, 11), int64] */;
    %527 = dyn.reshape(%524, %525, newshape=[]) /* ty=Tensor[(?, ?, ?), int64] */;
    %528 = left_shift(%526, %527) /* ty=Tensor[(12, 8, 11), int64] */;
    (%528,)
  };
  %529() /* ty=(Tensor[(12, 8, 11), int64],) */
}

def @func_1919() -> Tensor[(12, 8, 11), float32] {
  %530 = fn () -> Tensor[(12, 8, 11), float32] {
    @func_1400() /* ty=Tensor[(12, 8, 11), float32] */
  };
  %530() /* ty=Tensor[(12, 8, 11), float32] */
}

def @func_10260() -> (Tensor[(352), float32], Tensor[(12, 8, 11), float64]) {
  @func_10258() /* ty=(Tensor[(352), float32], Tensor[(12, 8, 11), float64]) */
}

def @func_11511() -> Tensor[(8, 11, 4), float64] {
  %532 = fn () -> Tensor[(8, 11, 4), float64] {
    %531 = @func_11011() /* ty=(Tensor[(12, 8, 11), float64], Tensor[(12, 8, 11), float64], Tensor[(8, 11, 4), float64]) */;
    %531.2
  };
  %532() /* ty=Tensor[(8, 11, 4), float64] */
}

def @func_10379() -> Tensor[(12, 8, 11), float64] {
  %533 = @func_10156() /* ty=(Tensor[(12, 8, 11), float64], Tensor[(12, 8, 11), float64]) */;
  %533.0
}

def @func_5351() -> Tensor[(12, 8, 11), float64] {
  %534 = @func_2205() /* ty=(Tensor[(12, 8, 11), float32], Tensor[(12, 8, 11), float64], Tensor[(12, 8, 11), float64]) */;
  %534.1
}

def @func_9410(%var_9408: Tensor[(90), float64]) -> (Tensor[(12, 8, 11), float64], Tensor[(12, 8, 11), float64], Tensor[(9, 10, 1), float64], Tensor[(90), float64], Tensor[(12, 8, 11), float64]) {
  @func_9407(%var_9408) /* ty=(Tensor[(12, 8, 11), float64], Tensor[(12, 8, 11), float64], Tensor[(9, 10, 1), float64], Tensor[(90), float64], Tensor[(12, 8, 11), float64]) */
}

def @func_5363(%var_5362: Tensor[(330, 3), uint32]) -> (Tensor[(16, 16, 13), float64], Tensor[(12, 8, 11), float64], Tensor[(330, 3), uint32]) {
  %541 = fn (%var_5359: Tensor[(330, 3), uint32]) -> (Tensor[(16, 16, 13), float64], Tensor[(12, 8, 11), float64], Tensor[(330, 3), uint32]) {
    %535 = @func_4110() /* ty=(Tensor[(16, 16, 13), float64], Tensor[(12, 8, 11), float32]) */;
    %536 = cast(%var_5359, dtype="uint32") /* ty=Tensor[(330, 3), uint32] */;
    %537 = reshape(%536, newshape=[15, 6, 11]) /* ty=Tensor[(15, 6, 11), uint32] */;
    %538 = @func_1342(%537) /* ty=(Tensor[(15, 6, 11), uint32], Tensor[(12, 8, 11), float64]) */;
    %539 = %535.0;
    %540 = %538.1;
    (%539, %540, %var_5359)
  };
  %541(%var_5362) /* ty=(Tensor[(16, 16, 13), float64], Tensor[(12, 8, 11), float64], Tensor[(330, 3), uint32]) */
}

def @func_10318() -> (Tensor[(352), bool],) {
  %549 = fn () -> (Tensor[(352), bool],) {
    %542 = @func_6615() /* ty=(Tensor[(352), float32], Tensor[(12, 8, 11), float32]) */;
    %543 = %542.0;
    %544 = cast(meta[relay.Constant][10] /* ty=Tensor[(352), float32] */, dtype="bool") /* ty=Tensor[(352), bool] */;
    %545 = shape_of(%543, dtype="int32") /* ty=Tensor[(1), int32] */;
    %546 = cast(%543, dtype="bool") /* ty=Tensor[(352), bool] */;
    %547 = dyn.reshape(%544, %545, newshape=[]) /* ty=Tensor[(?), bool] */;
    %548 = not_equal(%546, %547) /* ty=Tensor[(352), bool] */;
    (%548,)
  };
  %549() /* ty=(Tensor[(352), bool],) */
}

def @func_8539() -> (Tensor[(990), float64],) {
  %550 = @func_8293() /* ty=(Tensor[(990), uint32],) */;
  %551 = %550.0;
  %552 = cast(%551, dtype="float64") /* ty=Tensor[(990), float64] */;
  %553 = acos(%552) /* ty=Tensor[(990), float64] */;
  (%553,)
}

def @func_4905() -> (Tensor[(12, 8, 11), float32], Tensor[(12, 8, 11), float64]) {
  @func_4903() /* ty=(Tensor[(12, 8, 11), float32], Tensor[(12, 8, 11), float64]) */
}

def @func_12773() -> Tensor[(12, 8, 11), float32] {
  %554 = @func_6871() /* ty=(Tensor[(12, 8, 11), float32],) */;
  %554.0
}

def @func_9545() -> (Tensor[(15, 6, 11), uint32], Tensor[(12, 8, 11), float64]) {
  @func_9543() /* ty=(Tensor[(15, 6, 11), uint32], Tensor[(12, 8, 11), float64]) */
}

def @func_3797() -> (Tensor[(352), float32],) {
  %557 = fn () -> (Tensor[(352), float32],) {
    %555 = @func_3234() /* ty=(Tensor[(12, 8, 11), int64], Tensor[(12, 8, 11), float32], Tensor[(352), float32]) */;
    %556 = %555.2;
    (%556,)
  };
  %557() /* ty=(Tensor[(352), float32],) */
}

def @func_8691() -> (Tensor[(352), float32], Tensor[(11, 15, 5), uint32], Tensor[(825), uint32], Tensor[(16, 16, 13), float64]) {
  %558 = @func_8214() /* ty=(Tensor[(352), uint64], Tensor[(352), float32], Tensor[(12, 8, 11), float32]) */;
  %559 = cast(meta[relay.Constant][11] /* ty=Tensor[(825), uint32] */, dtype="uint32") /* ty=Tensor[(825), uint32] */;
  %560 = reshape(%559, newshape=[11, 15, 5]) /* ty=Tensor[(11, 15, 5), uint32] */;
  %561 = @func_8330() /* ty=(Tensor[(16, 16, 13), float64],) */;
  %562 = %558.1;
  %563 = @func_1996(%560) /* ty=Tensor[(11, 15, 5), uint32] */;
  %564 = %561.0;
  (%562, %563, meta[relay.Constant][11] /* ty=Tensor[(825), uint32] */, %564)
}

def @func_4622(%var_4620: Tensor[(825), uint32]) -> (Tensor[(12, 8, 11), float64], Tensor[(12, 8, 11), float64], Tensor[(15, 6, 11), uint32], Tensor[(5, 198), uint32], Tensor[(825), bool], Tensor[(12, 8, 11), float64], Tensor[(8, 11, 4), float32], Tensor[(12, 8, 11), float64], Tensor[(8, 11, 4), float32], Tensor[(12, 8, 11), int64]) {
  @func_4619(%var_4620) /* ty=(Tensor[(12, 8, 11), float64], Tensor[(12, 8, 11), float64], Tensor[(15, 6, 11), uint32], Tensor[(5, 198), uint32], Tensor[(825), bool], Tensor[(12, 8, 11), float64], Tensor[(8, 11, 4), float32], Tensor[(12, 8, 11), float64], Tensor[(8, 11, 4), float32], Tensor[(12, 8, 11), int64]) */
}

def @func_7248() -> (Tensor[(990), uint32],) {
  @func_7246() /* ty=(Tensor[(990), uint32],) */
}

def @func_5008() -> (Tensor[(8, 11, 4), float64],) {
  %565 = @func_2153() /* ty=(Tensor[(12, 8, 11), float32], Tensor[(12, 8, 11), float64], Tensor[(352), float32], Tensor[(8, 11, 4), float64]) */;
  %566 = %565.3;
  (%566,)
}

def @func_2307() -> (Tensor[(352), float32], Tensor[(352), float32]) {
  %580 = fn () -> (Tensor[(352), float32], Tensor[(352), float32]) {
    %567 = @func_1559() /* ty=(Tensor[(12, 8, 11), uint16], Tensor[(8, 11, 4), float64], Tensor[(352), float32], Tensor[(8, 11, 4), bool]) */;
    %568 = @func_1559() /* ty=(Tensor[(12, 8, 11), uint16], Tensor[(8, 11, 4), float64], Tensor[(352), float32], Tensor[(8, 11, 4), bool]) */;
    %569 = %568.2;
    %570 = cast(%569, dtype="float32") /* ty=Tensor[(352), float32] */;
    %571 = reshape(%570, newshape=[352]) /* ty=Tensor[(352), float32] */;
    %572 = @func_1300(%571) /* ty=(Tensor[(8, 11, 4), bool], Tensor[(352), float32], Tensor[(12, 8, 11), float64], Tensor[(8, 11, 4), float64]) */;
    %573 = %572.1;
    %574 = cast(%573, dtype="float32") /* ty=Tensor[(352), float32] */;
    %575 = shape_of(%569, dtype="int32") /* ty=Tensor[(1), int32] */;
    %576 = cast(%569, dtype="float32") /* ty=Tensor[(352), float32] */;
    %577 = dyn.reshape(%574, %575, newshape=[]) /* ty=Tensor[(?), float32] */;
    %578 = %567.2;
    %579 = divide(%576, %577) /* ty=Tensor[(352), float32] */;
    (%578, %579)
  };
  %580() /* ty=(Tensor[(352), float32], Tensor[(352), float32]) */
}

def @func_14785() -> (Tensor[(12, 8, 11), float64], Tensor[(8, 11, 4), uint64]) {
  @func_14783() /* ty=(Tensor[(12, 8, 11), float64], Tensor[(8, 11, 4), uint64]) */
}

def @func_13621() -> Tensor[(8, 11, 4), float64] {
  %581 = @func_9321() /* ty=(Tensor[(8, 11, 4), float64], Tensor[(12, 8, 11), float64]) */;
  %581.0
}

def @func_2808() -> Tensor[(12, 8, 11), float64] {
  %582 = @func_2774() /* ty=(Tensor[(12, 8, 11), float64],) */;
  %583 = %582.0;
  %584 = cast(%583, dtype="float64") /* ty=Tensor[(12, 8, 11), float64] */;
  sqrt(%584) /* ty=Tensor[(12, 8, 11), float64] */
}

def @func_7893() -> Tensor[(12, 8, 11), float64] {
  %585 = fn () -> Tensor[(12, 8, 11), float64] {
    @func_2808() /* ty=Tensor[(12, 8, 11), float64] */
  };
  %585() /* ty=Tensor[(12, 8, 11), float64] */
}

def @func_9091() -> (Tensor[(12, 8, 11), float64], Tensor[(12, 8, 11), float64]) {
  %590 = fn () -> (Tensor[(12, 8, 11), float64], Tensor[(12, 8, 11), float64]) {
    %586 = @func_8522() /* ty=(Tensor[(990), uint32], Tensor[(12, 8, 11), float64]) */;
    %587 = @func_8522() /* ty=(Tensor[(990), uint32], Tensor[(12, 8, 11), float64]) */;
    %588 = %586.1;
    %589 = %587.1;
    (%588, %589)
  };
  %590() /* ty=(Tensor[(12, 8, 11), float64], Tensor[(12, 8, 11), float64]) */
}

def @func_13623() -> Tensor[(8, 11, 4), float64] {
  @func_13621() /* ty=Tensor[(8, 11, 4), float64] */
}

def @func_12007(%var_12001: float32, %var_12002: Tensor[(5, 16, 2), float32]) -> (Tensor[(5, 16, 2), float32],) {
  %591 = cast(%var_12001, dtype="float32") /* ty=float32 */;
  %592 = cast(%var_12002, dtype="float32") /* ty=Tensor[(5, 16, 2), float32] */;
  %593 = divide(%591, %592) /* ty=Tensor[(5, 16, 2), float32] */;
  (%593,)
}

def @func_5141() -> (Tensor[(12, 8, 11), float32], Tensor[(12, 8, 11), float64]) {
  %597 = fn () -> (Tensor[(12, 8, 11), float32], Tensor[(12, 8, 11), float64]) {
    %594 = @func_3234() /* ty=(Tensor[(12, 8, 11), int64], Tensor[(12, 8, 11), float32], Tensor[(352), float32]) */;
    %595 = %594.1;
    %596 = @func_2955() /* ty=Tensor[(12, 8, 11), float64] */;
    (%595, %596)
  };
  %597() /* ty=(Tensor[(12, 8, 11), float32], Tensor[(12, 8, 11), float64]) */
}

def @func_2974() -> (Tensor[(12, 8, 11), float64],) {
  %599 = fn () -> (Tensor[(12, 8, 11), float64],) {
    %598 = @func_2380() /* ty=Tensor[(12, 8, 11), float64] */;
    (%598,)
  };
  %599() /* ty=(Tensor[(12, 8, 11), float64],) */
}

def @func_14524() -> Tensor[(825), float32] {
  %603 = fn () -> Tensor[(825), float32] {
    %600 = @func_8691() /* ty=(Tensor[(352), float32], Tensor[(11, 15, 5), uint32], Tensor[(825), uint32], Tensor[(16, 16, 13), float64]) */;
    %601 = %600.2;
    %602 = cast(%601, dtype="float32") /* ty=Tensor[(825), float32] */;
    sqrt(%602) /* ty=Tensor[(825), float32] */
  };
  %603() /* ty=Tensor[(825), float32] */
}

def @func_14012() -> (Tensor[(990), uint32], Tensor[(12, 8, 11), float32]) {
  %607 = fn () -> (Tensor[(990), uint32], Tensor[(12, 8, 11), float32]) {
    %604 = @func_7246() /* ty=(Tensor[(990), uint32],) */;
    %605 = %604.0;
    %606 = @func_3735() /* ty=Tensor[(12, 8, 11), float32] */;
    (%605, %606)
  };
  %607() /* ty=(Tensor[(990), uint32], Tensor[(12, 8, 11), float32]) */
}

def @func_4054() -> (Tensor[(12, 8, 11), float32], Tensor[(12, 8, 11), float32]) {
  @func_4052() /* ty=(Tensor[(12, 8, 11), float32], Tensor[(12, 8, 11), float32]) */
}

def @func_7687(%var_7679: Tensor[(12, 8, 11), float64]) -> Tensor[(12, 8, 11), int8] {
  %608 = @func_1117() /* ty=Tensor[(12, 8, 11), float64] */;
  %609 = cast(%var_7679, dtype="int8") /* ty=Tensor[(12, 8, 11), int8] */;
  %610 = shape_of(%608, dtype="int32") /* ty=Tensor[(3), int32] */;
  %611 = cast(%608, dtype="int8") /* ty=Tensor[(12, 8, 11), int8] */;
  %612 = dyn.reshape(%609, %610, newshape=[]) /* ty=Tensor[(?, ?, ?), int8] */;
  right_shift(%611, %612) /* ty=Tensor[(12, 8, 11), int8] */
}

def @func_12648() -> (Tensor[(352), bool], Tensor[(990), uint32]) {
  @func_12646() /* ty=(Tensor[(352), bool], Tensor[(990), uint32]) */
}

def @func_13654() -> (Tensor[(990), uint32], Tensor[(352), float32], Tensor[(12, 8, 11), float32]) {
  %619 = fn () -> (Tensor[(990), uint32], Tensor[(352), float32], Tensor[(12, 8, 11), float32]) {
    %613 = @func_8522() /* ty=(Tensor[(990), uint32], Tensor[(12, 8, 11), float64]) */;
    %614 = @func_6748() /* ty=(Tensor[(15, 6, 11), float64], Tensor[(15, 6, 11), float64], Tensor[(352), float32], Tensor[(12, 8, 11), int64]) */;
    %615 = @func_4110() /* ty=(Tensor[(16, 16, 13), float64], Tensor[(12, 8, 11), float32]) */;
    %616 = %613.0;
    %617 = %614.2;
    %618 = %615.1;
    (%616, %617, %618)
  };
  %619() /* ty=(Tensor[(990), uint32], Tensor[(352), float32], Tensor[(12, 8, 11), float32]) */
}

def @func_3522() -> Tensor[(12, 8, 11), float64] {
  %620 = @func_2774() /* ty=(Tensor[(12, 8, 11), float64],) */;
  %620.0
}

def @func_12775() -> Tensor[(12, 8, 11), float32] {
  @func_12773() /* ty=Tensor[(12, 8, 11), float32] */
}

def @func_13522() -> Tensor[(8, 11, 4), uint64] {
  @func_13520() /* ty=Tensor[(8, 11, 4), uint64] */
}

def @func_6559() -> Tensor[(12, 8, 11), float64] {
  @func_6557() /* ty=Tensor[(12, 8, 11), float64] */
}

def @func_14349() -> (Tensor[(12, 8, 11), float32], Tensor[(13, 16, 5), int16], Tensor[(352), float32], Tensor[(12, 8, 11), float64], Tensor[(12, 8, 11), float64], Tensor[(12, 8, 11), float64]) {
  @func_14347() /* ty=(Tensor[(12, 8, 11), float32], Tensor[(13, 16, 5), int16], Tensor[(352), float32], Tensor[(12, 8, 11), float64], Tensor[(12, 8, 11), float64], Tensor[(12, 8, 11), float64]) */
}

def @func_1781(%var_1780: Tensor[(8, 44), float32]) -> (Tensor[(12, 8, 11), float64], Tensor[(12, 8, 11), float32], Tensor[(8, 11, 4), bool], Tensor[(8, 44), float32]) {
  %628 = fn (%var_1770: Tensor[(8, 44), float32]) -> (Tensor[(12, 8, 11), float64], Tensor[(12, 8, 11), float32], Tensor[(8, 11, 4), bool], Tensor[(8, 44), float32]) {
    %621 = @func_1358() /* ty=(Tensor[(12, 8, 11), float64],) */;
    %622 = cast(%var_1770, dtype="float32") /* ty=Tensor[(8, 44), float32] */;
    %623 = reshape(%622, newshape=[352]) /* ty=Tensor[(352), float32] */;
    %624 = @func_1300(%623) /* ty=(Tensor[(8, 11, 4), bool], Tensor[(352), float32], Tensor[(12, 8, 11), float64], Tensor[(8, 11, 4), float64]) */;
    %625 = %621.0;
    %626 = @func_1400() /* ty=Tensor[(12, 8, 11), float32] */;
    %627 = %624.0;
    (%625, %626, %627, %var_1770)
  };
  %628(%var_1780) /* ty=(Tensor[(12, 8, 11), float64], Tensor[(12, 8, 11), float32], Tensor[(8, 11, 4), bool], Tensor[(8, 44), float32]) */
}

def @func_6268(%var_6249: uint16, %var_6250: Tensor[(9, 5, 5), uint16]) -> Tensor[(9, 5, 5), bool] {
  %629 = cast(%var_6249, dtype="bool") /* ty=bool */;
  %630 = cast(%var_6250, dtype="bool") /* ty=Tensor[(9, 5, 5), bool] */;
  not_equal(%629, %630) /* ty=Tensor[(9, 5, 5), bool] */
}

def @func_4932() -> (Tensor[(12, 8, 11), float64], Tensor[(12, 8, 11), float32], Tensor[(12, 8, 11), int64]) {
  %631 = @func_4190() /* ty=(Tensor[(8, 11, 4), float32], Tensor[(12, 8, 11), float64], Tensor[(12, 8, 11), int64]) */;
  %632 = @func_2238() /* ty=(Tensor[(12, 8, 11), int64],) */;
  %633 = %631.1;
  %634 = @func_3644() /* ty=Tensor[(12, 8, 11), float32] */;
  %635 = %632.0;
  (%633, %634, %635)
}

def @func_5010() -> (Tensor[(8, 11, 4), float64],) {
  @func_5008() /* ty=(Tensor[(8, 11, 4), float64],) */
}

def @func_9483() -> (Tensor[(352), float32],) {
  %638 = fn () -> (Tensor[(352), float32],) {
    %636 = @func_2306() /* ty=(Tensor[(352), float32], Tensor[(352), float32]) */;
    %637 = %636.1;
    (%637,)
  };
  %638() /* ty=(Tensor[(352), float32],) */
}

def @func_13538(%var_13527: Tensor[(3, 2, 15), uint8]) -> Tensor[(3, 2, 15), bool] {
  %639 = cast(%var_13527, dtype="bool") /* ty=Tensor[(3, 2, 15), bool] */;
  %640 = shape_of(meta[relay.Constant][12] /* ty=Tensor[(3, 2, 15), uint8] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %641 = cast(meta[relay.Constant][12] /* ty=Tensor[(3, 2, 15), uint8] */, dtype="bool") /* ty=Tensor[(3, 2, 15), bool] */;
  %642 = dyn.reshape(%639, %640, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  less(%641, %642) /* ty=Tensor[(3, 2, 15), bool] */
}

def @func_2155() -> (Tensor[(12, 8, 11), float32], Tensor[(12, 8, 11), float64], Tensor[(352), float32], Tensor[(8, 11, 4), float64]) {
  @func_2153() /* ty=(Tensor[(12, 8, 11), float32], Tensor[(12, 8, 11), float64], Tensor[(352), float32], Tensor[(8, 11, 4), float64]) */
}

def @func_12944(%var_12928: Tensor[(990), uint32]) -> (Tensor[(12, 8, 11), float64], Tensor[(16, 16, 13), float64], Tensor[(990), uint32], Tensor[(12, 8, 11), float64]) {
  %643 = @func_11235() /* ty=(Tensor[(12, 8, 11), int64], Tensor[(12, 8, 11), float32], Tensor[(12, 8, 11), float64], Tensor[(12, 8, 11), int64], Tensor[(12, 8, 11), float64]) */;
  %644 = cast(%var_12928, dtype="uint32") /* ty=Tensor[(990), uint32] */;
  %645 = reshape(%644, newshape=[330, 3]) /* ty=Tensor[(330, 3), uint32] */;
  %646 = @func_5361(%645) /* ty=(Tensor[(16, 16, 13), float64], Tensor[(12, 8, 11), float64], Tensor[(330, 3), uint32]) */;
  %647 = @func_2973() /* ty=(Tensor[(12, 8, 11), float64],) */;
  %648 = %643.2;
  %649 = %646.0;
  %650 = %647.0;
  (%648, %649, %var_12928, %650)
}

def @func_8873(%var_8871: Tensor[(5, 15, 1), float32], %var_8872: Tensor[(5, 15, 7), int32]) -> (Tensor[(5, 15, 7), int32],) {
  %661 = fn (%var_8835: Tensor[(5, 15, 1), float32], %var_8854: Tensor[(5, 15, 7), int32]) -> (Tensor[(5, 15, 7), int32],) {
    %651 = cast(%var_8835, dtype="float32") /* ty=Tensor[(5, 15, 1), float32] */;
    %652 = sigmoid(%651) /* ty=Tensor[(5, 15, 1), float32] */;
    %653 = cast(%var_8835, dtype="int32") /* ty=Tensor[(5, 15, 1), int32] */;
    %654 = shape_of(%652, dtype="int32") /* ty=Tensor[(3), int32] */;
    %655 = cast(%652, dtype="int32") /* ty=Tensor[(5, 15, 1), int32] */;
    %656 = dyn.reshape(%653, %654, newshape=[]) /* ty=Tensor[(?, ?, ?), int32] */;
    %657 = multiply(%655, %656) /* ty=Tensor[(5, 15, ?), int32] */;
    %658 = cast(%657, dtype="int32") /* ty=Tensor[(5, 15, ?), int32] */;
    %659 = cast(%var_8854, dtype="int32") /* ty=Tensor[(5, 15, 7), int32] */;
    %660 = multiply(%658, %659) /* ty=Tensor[(5, 15, 7), int32] */;
    (%660,)
  };
  %661(%var_8871, %var_8872) /* ty=(Tensor[(5, 15, 7), int32],) */
}

def @func_4639() -> (Tensor[(12, 8, 11), float64], Tensor[(12, 8, 11), float32]) {
  @func_4637() /* ty=(Tensor[(12, 8, 11), float64], Tensor[(12, 8, 11), float32]) */
}

def @func_5702() -> (Tensor[(12, 8, 11), float32], Tensor[(8, 11, 4), float64]) {
  %665 = fn () -> (Tensor[(12, 8, 11), float32], Tensor[(8, 11, 4), float64]) {
    %662 = @func_5008() /* ty=(Tensor[(8, 11, 4), float64],) */;
    %663 = @func_4304() /* ty=Tensor[(12, 8, 11), float32] */;
    %664 = %662.0;
    (%663, %664)
  };
  %665() /* ty=(Tensor[(12, 8, 11), float32], Tensor[(8, 11, 4), float64]) */
}

def @func_12570() -> (Tensor[(12, 8, 11), float64],) {
  @func_12568() /* ty=(Tensor[(12, 8, 11), float64],) */
}

def @func_11724(%var_11721: Tensor[(8, 1, 3), uint16], %var_11722: Tensor[(8, 5, 3), uint16], %var_11723: Tensor[(8, 5, 3), bool]) -> (Tensor[(8, 5, 3), int16], Tensor[(990), uint32], Tensor[(208), float64]) {
  %678 = fn (%var_11702: Tensor[(8, 1, 3), uint16], %var_11703: Tensor[(8, 5, 3), uint16], %var_11709: Tensor[(8, 5, 3), bool]) -> (Tensor[(8, 5, 3), int16], Tensor[(990), uint32], Tensor[(208), float64]) {
    %666 = cast(%var_11702, dtype="bool") /* ty=Tensor[(8, 1, 3), bool] */;
    %667 = cast(%var_11703, dtype="bool") /* ty=Tensor[(8, 5, 3), bool] */;
    %668 = less(%666, %667) /* ty=Tensor[(8, 5, 3), bool] */;
    %669 = cast(%var_11709, dtype="int16") /* ty=Tensor[(8, 5, 3), int16] */;
    %670 = shape_of(%668, dtype="int32") /* ty=Tensor[(3), int32] */;
    %671 = cast(%668, dtype="int16") /* ty=Tensor[(8, 5, 3), int16] */;
    %672 = dyn.reshape(%669, %670, newshape=[]) /* ty=Tensor[(?, ?, ?), int16] */;
    %673 = cast(meta[relay.Constant][13] /* ty=Tensor[(208), float64] */, dtype="float64") /* ty=Tensor[(208), float64] */;
    %674 = reshape(%673, newshape=[52, 4]) /* ty=Tensor[(52, 4), float64] */;
    %675 = @func_7508(%674) /* ty=(Tensor[(990), uint32], Tensor[(8, 11, 4), float64], Tensor[(8, 2, 13), bool], Tensor[(52, 4), float64]) */;
    %676 = minimum(%671, %672) /* ty=Tensor[(8, 5, 3), int16] */;
    %677 = %675.0;
    (%676, %677, meta[relay.Constant][13] /* ty=Tensor[(208), float64] */)
  };
  %678(%var_11721, %var_11722, %var_11723) /* ty=(Tensor[(8, 5, 3), int16], Tensor[(990), uint32], Tensor[(208), float64]) */
}

def @func_7690(%var_7688: Tensor[(12, 8, 11), float64]) -> Tensor[(12, 8, 11), int8] {
  @func_7687(%var_7688) /* ty=Tensor[(12, 8, 11), int8] */
}

def @func_8453() -> (Tensor[(12, 8, 11), float64], Tensor[(8, 11, 4), float32]) {
  %679 = @func_2045() /* ty=(Tensor[(12, 8, 11), float64], Tensor[(12, 8, 11), float64]) */;
  %680 = %679.0;
  %681 = @func_6803() /* ty=Tensor[(8, 11, 4), float32] */;
  (%680, %681)
}

def @func_3606() -> (Tensor[(12, 8, 11), float64], Tensor[(12, 8, 11), float64], Tensor[(990), uint32], Tensor[(990), uint32], Tensor[(12, 8, 11), float64], Tensor[(12, 8, 11), int64], Tensor[(12, 8, 11), float64], Tensor[(8, 11, 4), float64]) {
  %696 = fn () -> (Tensor[(12, 8, 11), float64], Tensor[(12, 8, 11), float64], Tensor[(990), uint32], Tensor[(990), uint32], Tensor[(12, 8, 11), float64], Tensor[(12, 8, 11), int64], Tensor[(12, 8, 11), float64], Tensor[(8, 11, 4), float64]) {
    %682 = @func_2973() /* ty=(Tensor[(12, 8, 11), float64],) */;
    %683 = cast(meta[relay.Constant][14] /* ty=Tensor[(990), uint32] */, dtype="uint32") /* ty=Tensor[(990), uint32] */;
    %684 = reshape(%683, newshape=[990]) /* ty=Tensor[(990), uint32] */;
    %685 = @func_1625(%684) /* ty=(Tensor[(12, 8, 11), float64], Tensor[(352), int8], Tensor[(352), float32], Tensor[(990), uint32]) */;
    %686 = @func_2205() /* ty=(Tensor[(12, 8, 11), float32], Tensor[(12, 8, 11), float64], Tensor[(12, 8, 11), float64]) */;
    %687 = @func_2574() /* ty=(Tensor[(352), float32], Tensor[(12, 8, 11), float64], Tensor[(990), uint32], Tensor[(12, 8, 11), float64], Tensor[(12, 8, 11), int64]) */;
    %688 = @func_3508() /* ty=(Tensor[(8, 11, 4), float64],) */;
    %689 = %682.0;
    %690 = @func_3522() /* ty=Tensor[(12, 8, 11), float64] */;
    %691 = %685.3;
    %692 = %686.2;
    %693 = %687.4;
    %694 = @func_2808() /* ty=Tensor[(12, 8, 11), float64] */;
    %695 = %688.0;
    (%689, %690, %691, meta[relay.Constant][14] /* ty=Tensor[(990), uint32] */, %692, %693, %694, %695)
  };
  %696() /* ty=(Tensor[(12, 8, 11), float64], Tensor[(12, 8, 11), float64], Tensor[(990), uint32], Tensor[(990), uint32], Tensor[(12, 8, 11), float64], Tensor[(12, 8, 11), int64], Tensor[(12, 8, 11), float64], Tensor[(8, 11, 4), float64]) */
}

def @func_14464() -> Tensor[(352), float32] {
  %698 = fn () -> Tensor[(352), float32] {
    %697 = @func_12417() /* ty=(Tensor[(12, 8, 11), float64], Tensor[(15, 6, 11), uint32], Tensor[(352), float32]) */;
    %697.2
  };
  %698() /* ty=Tensor[(352), float32] */
}

def @func_13228() -> (Tensor[(12, 8, 11), float32], Tensor[(990), uint32], Tensor[(12, 8, 11), float32]) {
  @func_13226() /* ty=(Tensor[(12, 8, 11), float32], Tensor[(990), uint32], Tensor[(12, 8, 11), float32]) */
}

def @func_2758() -> Tensor[(12, 8, 11), float64] {
  @func_2756() /* ty=Tensor[(12, 8, 11), float64] */
}

def @func_5533() -> Tensor[(12, 8, 11), float64] {
  @func_2955() /* ty=Tensor[(12, 8, 11), float64] */
}

def @func_2380() -> Tensor[(12, 8, 11), float64] {
  %699 = @func_1971() /* ty=(Tensor[(12, 8, 11), float64], Tensor[(12, 8, 11), float32]) */;
  %699.0
}

def @func_7601() -> (Tensor[(12, 8, 11), float64],) {
  %702 = fn () -> (Tensor[(12, 8, 11), float64],) {
    %700 = @func_2045() /* ty=(Tensor[(12, 8, 11), float64], Tensor[(12, 8, 11), float64]) */;
    %701 = %700.0;
    (%701,)
  };
  %702() /* ty=(Tensor[(12, 8, 11), float64],) */
}

def @func_4192() -> (Tensor[(8, 11, 4), float32], Tensor[(12, 8, 11), float64], Tensor[(12, 8, 11), int64]) {
  @func_4190() /* ty=(Tensor[(8, 11, 4), float32], Tensor[(12, 8, 11), float64], Tensor[(12, 8, 11), int64]) */
}

def @func_13561() -> (Tensor[(12, 8, 11), float64],) {
  @func_13559() /* ty=(Tensor[(12, 8, 11), float64],) */
}

def @func_10035(%var_10033: Tensor[(1056), float64], %var_10034: Tensor[(352), float32]) -> (Tensor[(1056), float64], Tensor[(15, 6, 11), int16], Tensor[(8, 11, 4), float32], float32, Tensor[(352), float32], Tensor[(352), int8], Tensor[(15, 6, 11), uint64]) {
  @func_10031(%var_10033, %var_10034) /* ty=(Tensor[(1056), float64], Tensor[(15, 6, 11), int16], Tensor[(8, 11, 4), float32], float32, Tensor[(352), float32], Tensor[(352), int8], Tensor[(15, 6, 11), uint64]) */
}

def @func_6617() -> (Tensor[(352), float32], Tensor[(12, 8, 11), float32]) {
  @func_6615() /* ty=(Tensor[(352), float32], Tensor[(12, 8, 11), float32]) */
}

def @func_4304() -> Tensor[(12, 8, 11), float32] {
  @func_3644() /* ty=Tensor[(12, 8, 11), float32] */
}

def @func_7386() -> (Tensor[(352), float32],) {
  @func_7384() /* ty=(Tensor[(352), float32],) */
}

def @func_9040() -> Tensor[(12, 8, 11), float64] {
  @func_9038() /* ty=Tensor[(12, 8, 11), float64] */
}

def @func_11850(%var_11835: Tensor[(6, 16, 1), uint16]) -> (Tensor[(6, 16, 1), uint16], Tensor[(12, 8, 11), float64]) {
  %703 = cast(meta[relay.Constant][15] /* ty=uint16 */, dtype="uint16") /* ty=uint16 */;
  %704 = cast(%var_11835, dtype="uint16") /* ty=Tensor[(6, 16, 1), uint16] */;
  %705 = @func_1463() /* ty=(Tensor[(12, 8, 11), float64], Tensor[(12, 8, 11), float64]) */;
  %706 = multiply(%703, %704) /* ty=Tensor[(6, 16, 1), uint16] */;
  %707 = %705.1;
  (%706, %707)
}

def @func_14347() -> (Tensor[(12, 8, 11), float32], Tensor[(13, 16, 5), int16], Tensor[(352), float32], Tensor[(12, 8, 11), float64], Tensor[(12, 8, 11), float64], Tensor[(12, 8, 11), float64]) {
  %708 = cast(meta[relay.Constant][16] /* ty=Tensor[(13, 16, 5), float32] */, dtype="float32") /* ty=Tensor[(13, 16, 5), float32] */;
  %709 = log(%708) /* ty=Tensor[(13, 16, 5), float32] */;
  %710 = cast(meta[relay.Constant][17] /* ty=Tensor[(13, 16, 5), float32] */, dtype="int16") /* ty=Tensor[(13, 16, 5), int16] */;
  %711 = shape_of(%709, dtype="int32") /* ty=Tensor[(3), int32] */;
  %712 = cast(%709, dtype="int16") /* ty=Tensor[(13, 16, 5), int16] */;
  %713 = dyn.reshape(%710, %711, newshape=[]) /* ty=Tensor[(?, ?, ?), int16] */;
  %714 = @func_9943() /* ty=(Tensor[(352), float32],) */;
  %715 = @func_8453() /* ty=(Tensor[(12, 8, 11), float64], Tensor[(8, 11, 4), float32]) */;
  %716 = @func_3644() /* ty=Tensor[(12, 8, 11), float32] */;
  %717 = subtract(%712, %713) /* ty=Tensor[(13, 16, 5), int16] */;
  %718 = %714.0;
  %719 = @func_2955() /* ty=Tensor[(12, 8, 11), float64] */;
  %720 = @func_9038() /* ty=Tensor[(12, 8, 11), float64] */;
  %721 = %715.0;
  (%716, %717, %718, %719, %720, %721)
}

def @func_10750() -> Tensor[(12, 8, 11), float64] {
  @func_10748() /* ty=Tensor[(12, 8, 11), float64] */
}

def @func_9075() -> Tensor[(8, 11, 4), uint64] {
  %723 = fn () -> Tensor[(8, 11, 4), uint64] {
    %722 = @func_8376() /* ty=(Tensor[(8, 11, 4), uint64],) */;
    %722.0
  };
  %723() /* ty=Tensor[(8, 11, 4), uint64] */
}

def @func_14734() -> Tensor[(12, 8, 11), float64] {
  %724 = fn () -> Tensor[(12, 8, 11), float64] {
    @func_4846() /* ty=Tensor[(12, 8, 11), float64] */
  };
  %724() /* ty=Tensor[(12, 8, 11), float64] */
}

def @func_1743() -> (Tensor[(12, 8, 11), float32],) {
  @func_1741() /* ty=(Tensor[(12, 8, 11), float32],) */
}

def @func_2956() -> Tensor[(12, 8, 11), float64] {
  %726 = fn () -> Tensor[(12, 8, 11), float64] {
    %725 = @func_1971() /* ty=(Tensor[(12, 8, 11), float64], Tensor[(12, 8, 11), float32]) */;
    %725.0
  };
  %726() /* ty=Tensor[(12, 8, 11), float64] */
}

def @func_14646() -> Tensor[(352), float32] {
  %728 = fn () -> Tensor[(352), float32] {
    %727 = @func_9482() /* ty=(Tensor[(352), float32],) */;
    %727.0
  };
  %728() /* ty=Tensor[(352), float32] */
}

def @func_7975() -> Tensor[(12, 8, 11), float32] {
  %729 = @func_4110() /* ty=(Tensor[(16, 16, 13), float64], Tensor[(12, 8, 11), float32]) */;
  %729.1
}

def @func_12479() -> (Tensor[(12, 8, 11), float32],) {
  %730 = @func_3644() /* ty=Tensor[(12, 8, 11), float32] */;
  (%730,)
}

def @func_2122() -> (Tensor[(12, 7, 6), float32], Tensor[(15, 6, 11), uint32], Tensor[(990), uint32]) {
  %737 = fn () -> (Tensor[(12, 7, 6), float32], Tensor[(15, 6, 11), uint32], Tensor[(990), uint32]) {
    %731 = cast(meta[relay.Constant][18] /* ty=Tensor[(12, 7, 6), float32] */, dtype="float32") /* ty=Tensor[(12, 7, 6), float32] */;
    %732 = cast(meta[relay.Constant][19] /* ty=Tensor[(990), uint32] */, dtype="uint32") /* ty=Tensor[(990), uint32] */;
    %733 = reshape(%732, newshape=[15, 6, 11]) /* ty=Tensor[(15, 6, 11), uint32] */;
    %734 = @func_1342(%733) /* ty=(Tensor[(15, 6, 11), uint32], Tensor[(12, 8, 11), float64]) */;
    %735 = sigmoid(%731) /* ty=Tensor[(12, 7, 6), float32] */;
    %736 = %734.0;
    (%735, %736, meta[relay.Constant][19] /* ty=Tensor[(990), uint32] */)
  };
  %737() /* ty=(Tensor[(12, 7, 6), float32], Tensor[(15, 6, 11), uint32], Tensor[(990), uint32]) */
}

def @func_12863() -> Tensor[(12, 8, 11), float64] {
  @func_1117() /* ty=Tensor[(12, 8, 11), float64] */
}

def @func_15219() -> (Tensor[(825), uint32], Tensor[(12, 8, 11), float64], Tensor[(12, 8, 11), float64], Tensor[(12, 8, 11), float64], Tensor[(12, 8, 11), float64], Tensor[(990), uint32], Tensor[(12, 8, 11), float64], Tensor[(352), bool]) {
  %738 = @func_8691() /* ty=(Tensor[(352), float32], Tensor[(11, 15, 5), uint32], Tensor[(825), uint32], Tensor[(16, 16, 13), float64]) */;
  %739 = @func_13437() /* ty=(Tensor[(12, 8, 11), float64], Tensor[(12, 8, 11), float64]) */;
  %740 = @func_2622() /* ty=(Tensor[(12, 8, 11), float64], Tensor[(12, 8, 11), float64]) */;
  %741 = @func_10483() /* ty=(Tensor[(12, 8, 11), float64],) */;
  %742 = @func_9903() /* ty=(Tensor[(990), uint32], Tensor[(990), uint32]) */;
  %743 = cast(meta[relay.Constant][20] /* ty=Tensor[(352), bool] */, dtype="bool") /* ty=Tensor[(352), bool] */;
  %744 = reshape(%743, newshape=[8, 11, 4]) /* ty=Tensor[(8, 11, 4), bool] */;
  %745 = @func_2492(%744) /* ty=(Tensor[(12, 8, 11), float64], Tensor[(12, 8, 11), float32], Tensor[(8, 11, 4), float32]) */;
  %746 = %738.2;
  %747 = %739.0;
  %748 = %740.1;
  %749 = %741.0;
  %750 = @func_2955() /* ty=Tensor[(12, 8, 11), float64] */;
  %751 = %742.1;
  %752 = %745.0;
  (%746, %747, %748, %749, %750, %751, %752, meta[relay.Constant][20] /* ty=Tensor[(352), bool] */)
}

def @func_6054() -> Tensor[(990), uint32] {
  %753 = @func_2121() /* ty=(Tensor[(12, 7, 6), float32], Tensor[(15, 6, 11), uint32], Tensor[(990), uint32]) */;
  %753.2
}

def @func_10297() -> Tensor[(12, 8, 11), float64] {
  %755 = fn () -> Tensor[(12, 8, 11), float64] {
    %754 = @func_1971() /* ty=(Tensor[(12, 8, 11), float64], Tensor[(12, 8, 11), float32]) */;
    %754.0
  };
  %755() /* ty=Tensor[(12, 8, 11), float64] */
}

def @func_13838() -> Tensor[(12, 8, 11), float32] {
  %757 = fn () -> Tensor[(12, 8, 11), float32] {
    %756 = @func_13198() /* ty=(Tensor[(12, 8, 11), float64], Tensor[(12, 8, 11), float32], Tensor[(12, 8, 11), float64], Tensor[(12, 8, 11), float64], Tensor[(8, 11, 4), uint32]) */;
    %756.1
  };
  %757() /* ty=Tensor[(12, 8, 11), float32] */
}

def @func_10258() -> (Tensor[(352), float32], Tensor[(12, 8, 11), float64]) {
  %758 = @func_2306() /* ty=(Tensor[(352), float32], Tensor[(352), float32]) */;
  %759 = @func_2574() /* ty=(Tensor[(352), float32], Tensor[(12, 8, 11), float64], Tensor[(990), uint32], Tensor[(12, 8, 11), float64], Tensor[(12, 8, 11), int64]) */;
  %760 = %758.0;
  %761 = %759.3;
  (%760, %761)
}

def @func_15340(%var_15338: Tensor[(10, 2, 3), uint8], %var_15339: Tensor[(10, 2, 3), uint8]) -> (Tensor[(10, 2, 3), uint8], Tensor[(825), bool]) {
  %774 = fn (%var_15321: Tensor[(10, 2, 3), uint8], %var_15322: Tensor[(10, 2, 3), uint8]) -> (Tensor[(10, 2, 3), uint8], Tensor[(825), bool]) {
    %762 = cast(%var_15322, dtype="uint8") /* ty=Tensor[(10, 2, 3), uint8] */;
    %763 = shape_of(%var_15321, dtype="int32") /* ty=Tensor[(3), int32] */;
    %764 = cast(%var_15321, dtype="uint8") /* ty=Tensor[(10, 2, 3), uint8] */;
    %765 = dyn.reshape(%762, %763, newshape=[]) /* ty=Tensor[(?, ?, ?), uint8] */;
    %766 = @func_8691() /* ty=(Tensor[(352), float32], Tensor[(11, 15, 5), uint32], Tensor[(825), uint32], Tensor[(16, 16, 13), float64]) */;
    %767 = %766.2;
    %768 = cast(meta[relay.Constant][21] /* ty=Tensor[(825), uint32] */, dtype="bool") /* ty=Tensor[(825), bool] */;
    %769 = shape_of(%767, dtype="int32") /* ty=Tensor[(1), int32] */;
    %770 = cast(%767, dtype="bool") /* ty=Tensor[(825), bool] */;
    %771 = dyn.reshape(%768, %769, newshape=[]) /* ty=Tensor[(?), bool] */;
    %772 = maximum(%764, %765) /* ty=Tensor[(10, 2, 3), uint8] */;
    %773 = greater(%770, %771) /* ty=Tensor[(825), bool] */;
    (%772, %773)
  };
  %774(%var_15338, %var_15339) /* ty=(Tensor[(10, 2, 3), uint8], Tensor[(825), bool]) */
}

def @func_2810() -> Tensor[(12, 8, 11), float64] {
  @func_2808() /* ty=Tensor[(12, 8, 11), float64] */
}

def @func_3373() -> (Tensor[(12, 8, 11), float32], Tensor[(12, 8, 11), float64]) {
  %775 = @func_2973() /* ty=(Tensor[(12, 8, 11), float64],) */;
  %776 = @func_1400() /* ty=Tensor[(12, 8, 11), float32] */;
  %777 = %775.0;
  (%776, %777)
}

def @func_8693() -> (Tensor[(352), float32], Tensor[(11, 15, 5), uint32], Tensor[(825), uint32], Tensor[(16, 16, 13), float64]) {
  @func_8691() /* ty=(Tensor[(352), float32], Tensor[(11, 15, 5), uint32], Tensor[(825), uint32], Tensor[(16, 16, 13), float64]) */
}

def @func_6804() -> Tensor[(8, 11, 4), float32] {
  %779 = fn () -> Tensor[(8, 11, 4), float32] {
    %778 = @func_4190() /* ty=(Tensor[(8, 11, 4), float32], Tensor[(12, 8, 11), float64], Tensor[(12, 8, 11), int64]) */;
    %778.0
  };
  %779() /* ty=Tensor[(8, 11, 4), float32] */
}

def @func_4306() -> Tensor[(12, 8, 11), float32] {
  @func_4304() /* ty=Tensor[(12, 8, 11), float32] */
}

def @func_3375() -> (Tensor[(12, 8, 11), float32], Tensor[(12, 8, 11), float64]) {
  @func_3373() /* ty=(Tensor[(12, 8, 11), float32], Tensor[(12, 8, 11), float64]) */
}

def @func_8216() -> (Tensor[(352), uint64], Tensor[(352), float32], Tensor[(12, 8, 11), float32]) {
  @func_8214() /* ty=(Tensor[(352), uint64], Tensor[(352), float32], Tensor[(12, 8, 11), float32]) */
}

def @func_10581(%var_10580: Tensor[(8, 11, 4), float64]) -> Tensor[(8, 11, 4), bool] {
  %786 = fn (%var_10572: Tensor[(8, 11, 4), float64]) -> Tensor[(8, 11, 4), bool] {
    %780 = @func_5577() /* ty=(Tensor[(8, 11, 4), float64],) */;
    %781 = %780.0;
    %782 = cast(%var_10572, dtype="bool") /* ty=Tensor[(8, 11, 4), bool] */;
    %783 = shape_of(%781, dtype="int32") /* ty=Tensor[(3), int32] */;
    %784 = cast(%781, dtype="bool") /* ty=Tensor[(8, 11, 4), bool] */;
    %785 = dyn.reshape(%782, %783, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    logical_and(%784, %785) /* ty=Tensor[(8, 11, 4), bool] */
  };
  %786(%var_10580) /* ty=Tensor[(8, 11, 4), bool] */
}

def @func_2153() -> (Tensor[(12, 8, 11), float32], Tensor[(12, 8, 11), float64], Tensor[(352), float32], Tensor[(8, 11, 4), float64]) {
  %787 = cast(meta[relay.Constant][22] /* ty=Tensor[(352), float32] */, dtype="float32") /* ty=Tensor[(352), float32] */;
  %788 = reshape(%787, newshape=[352]) /* ty=Tensor[(352), float32] */;
  %789 = @func_1300(%788) /* ty=(Tensor[(8, 11, 4), bool], Tensor[(352), float32], Tensor[(12, 8, 11), float64], Tensor[(8, 11, 4), float64]) */;
  %790 = @func_2107() /* ty=(Tensor[(8, 11, 4), float64], Tensor[(12, 8, 11), float32]) */;
  %791 = @func_1400() /* ty=Tensor[(12, 8, 11), float32] */;
  %792 = %789.2;
  %793 = %790.0;
  (%791, %792, meta[relay.Constant][22] /* ty=Tensor[(352), float32] */, %793)
}

def @func_7288() -> (Tensor[(12, 8, 11), int64], Tensor[(990), uint32]) {
  @func_7286() /* ty=(Tensor[(12, 8, 11), int64], Tensor[(990), uint32]) */
}

def @func_10542() -> (Tensor[(12, 8, 11), int64], Tensor[(12, 8, 11), float64]) {
  %797 = fn () -> (Tensor[(12, 8, 11), int64], Tensor[(12, 8, 11), float64]) {
    %794 = @func_7078() /* ty=(Tensor[(12, 8, 11), float64], Tensor[(12, 8, 11), float64]) */;
    %795 = @func_3349() /* ty=Tensor[(12, 8, 11), int64] */;
    %796 = %794.0;
    (%795, %796)
  };
  %797() /* ty=(Tensor[(12, 8, 11), int64], Tensor[(12, 8, 11), float64]) */
}

def @func_6529() -> (Tensor[(12, 8, 11), float32], Tensor[(12, 8, 11), float32]) {
  %802 = fn () -> (Tensor[(12, 8, 11), float32], Tensor[(12, 8, 11), float32]) {
    %798 = @func_6483() /* ty=(Tensor[(12, 8, 11), float64], Tensor[(12, 8, 11), float64], Tensor[(12, 8, 11), float32]) */;
    %799 = @func_1741() /* ty=(Tensor[(12, 8, 11), float32],) */;
    %800 = %798.2;
    %801 = %799.0;
    (%800, %801)
  };
  %802() /* ty=(Tensor[(12, 8, 11), float32], Tensor[(12, 8, 11), float32]) */
}

def @func_3508() -> (Tensor[(8, 11, 4), float64],) {
  %803 = @func_2107() /* ty=(Tensor[(8, 11, 4), float64], Tensor[(12, 8, 11), float32]) */;
  %804 = %803.0;
  (%804,)
}

def @func_4986(%var_4985: Tensor[(990), uint32]) -> (Tensor[(12, 8, 11), float64], Tensor[(12, 8, 11), float64], Tensor[(990), uint32]) {
  %811 = fn (%var_4982: Tensor[(990), uint32]) -> (Tensor[(12, 8, 11), float64], Tensor[(12, 8, 11), float64], Tensor[(990), uint32]) {
    %805 = @func_1235() /* ty=(Tensor[(12, 8, 11), float64], Tensor[(12, 8, 11), float32], Tensor[(12, 8, 11), float32]) */;
    %806 = cast(%var_4982, dtype="uint32") /* ty=Tensor[(990), uint32] */;
    %807 = reshape(%806, newshape=[15, 6, 11]) /* ty=Tensor[(15, 6, 11), uint32] */;
    %808 = @func_1342(%807) /* ty=(Tensor[(15, 6, 11), uint32], Tensor[(12, 8, 11), float64]) */;
    %809 = %805.0;
    %810 = %808.1;
    (%809, %810, %var_4982)
  };
  %811(%var_4985) /* ty=(Tensor[(12, 8, 11), float64], Tensor[(12, 8, 11), float64], Tensor[(990), uint32]) */
}

def @func_11011() -> (Tensor[(12, 8, 11), float64], Tensor[(12, 8, 11), float64], Tensor[(8, 11, 4), float64]) {
  %812 = @func_2774() /* ty=(Tensor[(12, 8, 11), float64],) */;
  %813 = @func_10156() /* ty=(Tensor[(12, 8, 11), float64], Tensor[(12, 8, 11), float64]) */;
  %814 = @func_1559() /* ty=(Tensor[(12, 8, 11), uint16], Tensor[(8, 11, 4), float64], Tensor[(352), float32], Tensor[(8, 11, 4), bool]) */;
  %815 = %812.0;
  %816 = %813.0;
  %817 = %814.1;
  (%815, %816, %817)
}

def @func_5868(%var_5867: Tensor[(352), float32]) -> (Tensor[(12, 8, 11), float64], Tensor[(12, 8, 11), float64], Tensor[(352), int8], Tensor[(352), float32], Tensor[(990), uint32], Tensor[(12, 8, 11), float64]) {
  %828 = fn (%var_5849: Tensor[(352), float32]) -> (Tensor[(12, 8, 11), float64], Tensor[(12, 8, 11), float64], Tensor[(352), int8], Tensor[(352), float32], Tensor[(990), uint32], Tensor[(12, 8, 11), float64]) {
    %818 = @func_5772() /* ty=(Tensor[(12, 8, 11), float64], Tensor[(12, 8, 11), float64], Tensor[(12, 8, 11), float64], Tensor[(990), uint32], Tensor[(15, 6, 11), uint32], Tensor[(8, 11, 4), float32]) */;
    %819 = cast(%var_5849, dtype="float32") /* ty=Tensor[(352), float32] */;
    %820 = cast(meta[relay.Constant][23] /* ty=Tensor[(990), uint32] */, dtype="uint32") /* ty=Tensor[(990), uint32] */;
    %821 = reshape(%819, newshape=[352]) /* ty=Tensor[(352), float32] */;
    %822 = reshape(%820, newshape=[990]) /* ty=Tensor[(990), uint32] */;
    %823 = @func_1580(%821, %822) /* ty=(Tensor[(352), int8], Tensor[(12, 8, 11), float64], Tensor[(990), uint32]) */;
    %824 = @func_2808() /* ty=Tensor[(12, 8, 11), float64] */;
    %825 = %818.2;
    %826 = %823.0;
    %827 = @func_2756() /* ty=Tensor[(12, 8, 11), float64] */;
    (%824, %825, %826, %var_5849, meta[relay.Constant][23] /* ty=Tensor[(990), uint32] */, %827)
  };
  %828(%var_5867) /* ty=(Tensor[(12, 8, 11), float64], Tensor[(12, 8, 11), float64], Tensor[(352), int8], Tensor[(352), float32], Tensor[(990), uint32], Tensor[(12, 8, 11), float64]) */
}

def @func_5445() -> (Tensor[(12, 8, 11), float64], Tensor[(12, 8, 11), float64], Tensor[(15, 6, 11), uint32], Tensor[(352), float32]) {
  %829 = @func_3605() /* ty=(Tensor[(12, 8, 11), float64], Tensor[(12, 8, 11), float64], Tensor[(990), uint32], Tensor[(990), uint32], Tensor[(12, 8, 11), float64], Tensor[(12, 8, 11), int64], Tensor[(12, 8, 11), float64], Tensor[(8, 11, 4), float64]) */;
  %830 = @func_4502() /* ty=(Tensor[(12, 8, 11), float64], Tensor[(16, 16, 13), float64], Tensor[(12, 8, 11), float64]) */;
  %831 = @func_5221() /* ty=(Tensor[(15, 6, 11), uint32],) */;
  %832 = @func_3796() /* ty=(Tensor[(352), float32],) */;
  %833 = %829.1;
  %834 = %830.0;
  %835 = %831.0;
  %836 = %832.0;
  (%833, %834, %835, %836)
}

def @func_9323() -> (Tensor[(8, 11, 4), float64], Tensor[(12, 8, 11), float64]) {
  @func_9321() /* ty=(Tensor[(8, 11, 4), float64], Tensor[(12, 8, 11), float64]) */
}

def @func_2494(%var_2493: Tensor[(8, 11, 4), bool]) -> (Tensor[(12, 8, 11), float64], Tensor[(12, 8, 11), float32], Tensor[(8, 11, 4), float32]) {
  %850 = fn (%var_2483: Tensor[(8, 11, 4), bool]) -> (Tensor[(12, 8, 11), float64], Tensor[(12, 8, 11), float32], Tensor[(8, 11, 4), float32]) {
    %837 = @func_1463() /* ty=(Tensor[(12, 8, 11), float64], Tensor[(12, 8, 11), float64]) */;
    %838 = @func_2107() /* ty=(Tensor[(8, 11, 4), float64], Tensor[(12, 8, 11), float32]) */;
    %839 = @func_1559() /* ty=(Tensor[(12, 8, 11), uint16], Tensor[(8, 11, 4), float64], Tensor[(352), float32], Tensor[(8, 11, 4), bool]) */;
    %840 = %839.3;
    %841 = cast(%var_2483, dtype="int8") /* ty=Tensor[(8, 11, 4), int8] */;
    %842 = shape_of(%840, dtype="int32") /* ty=Tensor[(3), int32] */;
    %843 = cast(%840, dtype="int8") /* ty=Tensor[(8, 11, 4), int8] */;
    %844 = dyn.reshape(%841, %842, newshape=[]) /* ty=Tensor[(?, ?, ?), int8] */;
    %845 = maximum(%843, %844) /* ty=Tensor[(8, 11, 4), int8] */;
    %846 = cast(%845, dtype="float32") /* ty=Tensor[(8, 11, 4), float32] */;
    %847 = %837.0;
    %848 = %838.1;
    %849 = asin(%846) /* ty=Tensor[(8, 11, 4), float32] */;
    (%847, %848, %849)
  };
  %850(%var_2493) /* ty=(Tensor[(12, 8, 11), float64], Tensor[(12, 8, 11), float32], Tensor[(8, 11, 4), float32]) */
}

def @func_11853(%var_11851: Tensor[(6, 16, 1), uint16]) -> (Tensor[(6, 16, 1), uint16], Tensor[(12, 8, 11), float64]) {
  @func_11850(%var_11851) /* ty=(Tensor[(6, 16, 1), uint16], Tensor[(12, 8, 11), float64]) */
}

def @func_1998(%var_1997: Tensor[(11, 15, 5), uint32]) -> Tensor[(11, 15, 5), uint32] {
  %855 = fn (%var_1989: Tensor[(11, 15, 5), uint32]) -> Tensor[(11, 15, 5), uint32] {
    %851 = cast(meta[relay.Constant][24] /* ty=Tensor[(11, 15, 5), uint32] */, dtype="uint32") /* ty=Tensor[(11, 15, 5), uint32] */;
    %852 = shape_of(%var_1989, dtype="int32") /* ty=Tensor[(3), int32] */;
    %853 = cast(%var_1989, dtype="uint32") /* ty=Tensor[(11, 15, 5), uint32] */;
    %854 = dyn.reshape(%851, %852, newshape=[]) /* ty=Tensor[(?, ?, ?), uint32] */;
    right_shift(%853, %854) /* ty=Tensor[(11, 15, 5), uint32] */
  };
  %855(%var_1997) /* ty=Tensor[(11, 15, 5), uint32] */
}

def @func_11966() -> Tensor[(12, 8, 11), float64] {
  %857 = fn () -> Tensor[(12, 8, 11), float64] {
    %856 = @func_4502() /* ty=(Tensor[(12, 8, 11), float64], Tensor[(16, 16, 13), float64], Tensor[(12, 8, 11), float64]) */;
    %856.0
  };
  %857() /* ty=Tensor[(12, 8, 11), float64] */
}

def @func_6969(%var_6967: Tensor[(12, 8, 11), float64]) -> (Tensor[(12, 8, 11), uint32], Tensor[(15, 6, 11), uint32]) {
  @func_6966(%var_6967) /* ty=(Tensor[(12, 8, 11), uint32], Tensor[(15, 6, 11), uint32]) */
}

def @func_7977() -> Tensor[(12, 8, 11), float32] {
  @func_7975() /* ty=Tensor[(12, 8, 11), float32] */
}

def @func_1344(%var_1343: Tensor[(15, 6, 11), uint32]) -> (Tensor[(15, 6, 11), uint32], Tensor[(12, 8, 11), float64]) {
  %864 = fn (%var_1309: Tensor[(15, 6, 11), uint32]) -> (Tensor[(15, 6, 11), uint32], Tensor[(12, 8, 11), float64]) {
    %858 = cast(meta[relay.Constant][25] /* ty=Tensor[(15, 6, 11), uint32] */, dtype="uint32") /* ty=Tensor[(15, 6, 11), uint32] */;
    %859 = shape_of(%var_1309, dtype="int32") /* ty=Tensor[(3), int32] */;
    %860 = cast(%var_1309, dtype="uint32") /* ty=Tensor[(15, 6, 11), uint32] */;
    %861 = dyn.reshape(%858, %859, newshape=[]) /* ty=Tensor[(?, ?, ?), uint32] */;
    %862 = add(%860, %861) /* ty=Tensor[(15, 6, 11), uint32] */;
    %863 = @func_1117() /* ty=Tensor[(12, 8, 11), float64] */;
    (%862, %863)
  };
  %864(%var_1343) /* ty=(Tensor[(15, 6, 11), uint32], Tensor[(12, 8, 11), float64]) */
}

def @func_10816() -> Tensor[(990), uint32] {
  %865 = @func_3605() /* ty=(Tensor[(12, 8, 11), float64], Tensor[(12, 8, 11), float64], Tensor[(990), uint32], Tensor[(990), uint32], Tensor[(12, 8, 11), float64], Tensor[(12, 8, 11), int64], Tensor[(12, 8, 11), float64], Tensor[(8, 11, 4), float64]) */;
  %865.2
}

def @func_8900() -> (Tensor[(990), uint32],) {
  %866 = @func_2737() /* ty=(Tensor[(990), uint32], Tensor[(12, 8, 11), float64], Tensor[(12, 8, 11), float64], Tensor[(12, 8, 11), float64], Tensor[(12, 8, 11), int64]) */;
  %867 = %866.0;
  (%867,)
}

def @func_15315() -> (Tensor[(12, 8, 11), float64], Tensor[(12, 8, 11), float64]) {
  %871 = fn () -> (Tensor[(12, 8, 11), float64], Tensor[(12, 8, 11), float64]) {
    %868 = @func_13437() /* ty=(Tensor[(12, 8, 11), float64], Tensor[(12, 8, 11), float64]) */;
    %869 = @func_6557() /* ty=Tensor[(12, 8, 11), float64] */;
    %870 = %868.1;
    (%869, %870)
  };
  %871() /* ty=(Tensor[(12, 8, 11), float64], Tensor[(12, 8, 11), float64]) */
}

def @func_10880() -> (Tensor[(12, 8, 11), float32], Tensor[(12, 8, 11), float32]) {
  @func_10878() /* ty=(Tensor[(12, 8, 11), float32], Tensor[(12, 8, 11), float32]) */
}

def @func_6871() -> (Tensor[(12, 8, 11), float32],) {
  %872 = @func_5701() /* ty=(Tensor[(12, 8, 11), float32], Tensor[(8, 11, 4), float64]) */;
  %873 = %872.0;
  (%873,)
}

def @func_4111() -> (Tensor[(16, 16, 13), float64], Tensor[(12, 8, 11), float32]) {
  %878 = fn () -> (Tensor[(16, 16, 13), float64], Tensor[(12, 8, 11), float32]) {
    %874 = cast(meta[relay.Constant][26] /* ty=Tensor[(16, 16, 13), float64] */, dtype="float64") /* ty=Tensor[(16, 16, 13), float64] */;
    %875 = @func_2153() /* ty=(Tensor[(12, 8, 11), float32], Tensor[(12, 8, 11), float64], Tensor[(352), float32], Tensor[(8, 11, 4), float64]) */;
    %876 = sinh(%874) /* ty=Tensor[(16, 16, 13), float64] */;
    %877 = %875.0;
    (%876, %877)
  };
  %878() /* ty=(Tensor[(16, 16, 13), float64], Tensor[(12, 8, 11), float32]) */
}

def @func_4619(%var_4571: Tensor[(825), uint32]) -> (Tensor[(12, 8, 11), float64], Tensor[(12, 8, 11), float64], Tensor[(15, 6, 11), uint32], Tensor[(5, 198), uint32], Tensor[(825), bool], Tensor[(12, 8, 11), float64], Tensor[(8, 11, 4), float32], Tensor[(12, 8, 11), float64], Tensor[(8, 11, 4), float32], Tensor[(12, 8, 11), int64]) {
  %879 = @func_1463() /* ty=(Tensor[(12, 8, 11), float64], Tensor[(12, 8, 11), float64]) */;
  %880 = cast(meta[relay.Constant][27] /* ty=Tensor[(825), uint32] */, dtype="uint32") /* ty=Tensor[(825), uint32] */;
  %881 = reshape(%880, newshape=[275, 3]) /* ty=Tensor[(275, 3), uint32] */;
  %882 = @func_3929(%881) /* ty=(Tensor[(12, 8, 11), float64], Tensor[(12, 8, 11), float64], Tensor[(12, 8, 11), float64], Tensor[(12, 8, 11), float64], Tensor[(12, 8, 11), float64], Tensor[(11, 15, 5), uint32], Tensor[(275, 3), uint32]) */;
  %883 = cast(meta[relay.Constant][28] /* ty=Tensor[(5, 198), uint32] */, dtype="uint32") /* ty=Tensor[(5, 198), uint32] */;
  %884 = reshape(%883, newshape=[15, 6, 11]) /* ty=Tensor[(15, 6, 11), uint32] */;
  %885 = @func_1342(%884) /* ty=(Tensor[(15, 6, 11), uint32], Tensor[(12, 8, 11), float64]) */;
  %886 = cast(%var_4571, dtype="bool") /* ty=Tensor[(825), bool] */;
  %887 = shape_of(meta[relay.Constant][27] /* ty=Tensor[(825), uint32] */, dtype="int32") /* ty=Tensor[(1), int32] */;
  %888 = cast(meta[relay.Constant][27] /* ty=Tensor[(825), uint32] */, dtype="bool") /* ty=Tensor[(825), bool] */;
  %889 = dyn.reshape(%886, %887, newshape=[]) /* ty=Tensor[(?), bool] */;
  %890 = @func_4328() /* ty=(Tensor[(12, 8, 11), float64],) */;
  %891 = @func_2107() /* ty=(Tensor[(8, 11, 4), float64], Tensor[(12, 8, 11), float32]) */;
  %892 = %891.0;
  %893 = cast(%892, dtype="float32") /* ty=Tensor[(8, 11, 4), float32] */;
  %894 = @func_2774() /* ty=(Tensor[(12, 8, 11), float64],) */;
  %895 = @func_4190() /* ty=(Tensor[(8, 11, 4), float32], Tensor[(12, 8, 11), float64], Tensor[(12, 8, 11), int64]) */;
  %896 = @func_2238() /* ty=(Tensor[(12, 8, 11), int64],) */;
  %897 = %879.0;
  %898 = %882.0;
  %899 = %885.0;
  %900 = logical_or(%888, %889) /* ty=Tensor[(825), bool] */;
  %901 = %890.0;
  %902 = atanh(%893) /* ty=Tensor[(8, 11, 4), float32] */;
  %903 = %894.0;
  %904 = %895.0;
  %905 = %896.0;
  (%897, %898, %899, meta[relay.Constant][28] /* ty=Tensor[(5, 198), uint32] */, %900, %901, %902, %903, %904, %905)
}

def @func_6787() -> Tensor[(12, 8, 11), float32] {
  @func_3735() /* ty=Tensor[(12, 8, 11), float32] */
}

def @func_2207() -> (Tensor[(12, 8, 11), float32], Tensor[(12, 8, 11), float64], Tensor[(12, 8, 11), float64]) {
  @func_2205() /* ty=(Tensor[(12, 8, 11), float32], Tensor[(12, 8, 11), float64], Tensor[(12, 8, 11), float64]) */
}

def @func_2739() -> (Tensor[(990), uint32], Tensor[(12, 8, 11), float64], Tensor[(12, 8, 11), float64], Tensor[(12, 8, 11), float64], Tensor[(12, 8, 11), int64]) {
  @func_2737() /* ty=(Tensor[(990), uint32], Tensor[(12, 8, 11), float64], Tensor[(12, 8, 11), float64], Tensor[(12, 8, 11), float64], Tensor[(12, 8, 11), int64]) */
}

def @func_5947(%var_5922: Tensor[(9, 10, 1), float64]) -> Tensor[(9, 10, 1), float64] {
  %906 = cast(%var_5922, dtype="float64") /* ty=Tensor[(9, 10, 1), float64] */;
  cos(%906) /* ty=Tensor[(9, 10, 1), float64] */
}

def @func_6996() -> (Tensor[(8, 11, 4), float64], Tensor[(352), float32]) {
  %907 = @func_5701() /* ty=(Tensor[(12, 8, 11), float32], Tensor[(8, 11, 4), float64]) */;
  %908 = @func_3234() /* ty=(Tensor[(12, 8, 11), int64], Tensor[(12, 8, 11), float32], Tensor[(352), float32]) */;
  %909 = %907.1;
  %910 = %908.2;
  (%909, %910)
}

def @func_8214() -> (Tensor[(352), uint64], Tensor[(352), float32], Tensor[(12, 8, 11), float32]) {
  %911 = @func_2306() /* ty=(Tensor[(352), float32], Tensor[(352), float32]) */;
  %912 = %911.1;
  %913 = cast(meta[relay.Constant][29] /* ty=Tensor[(352), float32] */, dtype="uint64") /* ty=Tensor[(352), uint64] */;
  %914 = shape_of(%912, dtype="int32") /* ty=Tensor[(1), int32] */;
  %915 = cast(%912, dtype="uint64") /* ty=Tensor[(352), uint64] */;
  %916 = dyn.reshape(%913, %914, newshape=[]) /* ty=Tensor[(?), uint64] */;
  %917 = @func_6615() /* ty=(Tensor[(352), float32], Tensor[(12, 8, 11), float32]) */;
  %918 = @func_4637() /* ty=(Tensor[(12, 8, 11), float64], Tensor[(12, 8, 11), float32]) */;
  %919 = bitwise_and(%915, %916) /* ty=Tensor[(352), uint64] */;
  %920 = %917.0;
  %921 = %918.1;
  (%919, %920, %921)
}

def @func_9622() -> Tensor[(12, 8, 11), float64] {
  @func_9620() /* ty=Tensor[(12, 8, 11), float64] */
}

def @func_14213(%var_14212: Tensor[(6, 2, 15), float32]) -> (Tensor[(352), float32], Tensor[(6, 2, 15), float32]) {
  %928 = fn (%var_14185: Tensor[(6, 2, 15), float32]) -> (Tensor[(352), float32], Tensor[(6, 2, 15), float32]) {
    %922 = @func_2306() /* ty=(Tensor[(352), float32], Tensor[(352), float32]) */;
    %923 = cast(%var_14185, dtype="float32") /* ty=Tensor[(6, 2, 15), float32] */;
    %924 = asin(%923) /* ty=Tensor[(6, 2, 15), float32] */;
    %925 = cast(%924, dtype="float32") /* ty=Tensor[(6, 2, 15), float32] */;
    %926 = %922.1;
    %927 = cos(%925) /* ty=Tensor[(6, 2, 15), float32] */;
    (%926, %927)
  };
  %928(%var_14212) /* ty=(Tensor[(352), float32], Tensor[(6, 2, 15), float32]) */
}

def @func_8902() -> (Tensor[(990), uint32],) {
  @func_8900() /* ty=(Tensor[(990), uint32],) */
}

def @func_4805(%var_4803: Tensor[(352), float32], %var_4804: Tensor[(110, 9), uint32]) -> (Tensor[(12, 8, 11), float32], Tensor[(352), int8], Tensor[(352), float32], Tensor[(110, 9), uint32]) {
  %937 = fn (%var_4788: Tensor[(352), float32], %var_4789: Tensor[(110, 9), uint32]) -> (Tensor[(12, 8, 11), float32], Tensor[(352), int8], Tensor[(352), float32], Tensor[(110, 9), uint32]) {
    %929 = @func_1971() /* ty=(Tensor[(12, 8, 11), float64], Tensor[(12, 8, 11), float32]) */;
    %930 = cast(%var_4788, dtype="float32") /* ty=Tensor[(352), float32] */;
    %931 = cast(%var_4789, dtype="uint32") /* ty=Tensor[(110, 9), uint32] */;
    %932 = reshape(%930, newshape=[352]) /* ty=Tensor[(352), float32] */;
    %933 = reshape(%931, newshape=[990]) /* ty=Tensor[(990), uint32] */;
    %934 = @func_1580(%932, %933) /* ty=(Tensor[(352), int8], Tensor[(12, 8, 11), float64], Tensor[(990), uint32]) */;
    %935 = %929.1;
    %936 = %934.0;
    (%935, %936, %var_4788, %var_4789)
  };
  %937(%var_4803, %var_4804) /* ty=(Tensor[(12, 8, 11), float32], Tensor[(352), int8], Tensor[(352), float32], Tensor[(110, 9), uint32]) */
}

def @func_4052() -> (Tensor[(12, 8, 11), float32], Tensor[(12, 8, 11), float32]) {
  %938 = @func_1400() /* ty=Tensor[(12, 8, 11), float32] */;
  %939 = @func_1400() /* ty=Tensor[(12, 8, 11), float32] */;
  (%938, %939)
}

def @func_5381() -> (Tensor[(12, 8, 11), float64],) {
  @func_5379() /* ty=(Tensor[(12, 8, 11), float64],) */
}

def @func_6615() -> (Tensor[(352), float32], Tensor[(12, 8, 11), float32]) {
  %940 = @func_1559() /* ty=(Tensor[(12, 8, 11), uint16], Tensor[(8, 11, 4), float64], Tensor[(352), float32], Tensor[(8, 11, 4), bool]) */;
  %941 = %940.2;
  %942 = cast(%941, dtype="float32") /* ty=Tensor[(352), float32] */;
  %943 = reshape(%942, newshape=[8, 44]) /* ty=Tensor[(8, 44), float32] */;
  %944 = @func_1779(%943) /* ty=(Tensor[(12, 8, 11), float64], Tensor[(12, 8, 11), float32], Tensor[(8, 11, 4), bool], Tensor[(8, 44), float32]) */;
  %945 = %944.1;
  (%941, %945)
}

def @func_3524() -> Tensor[(12, 8, 11), float64] {
  @func_3522() /* ty=Tensor[(12, 8, 11), float64] */
}

def @func_9407(%var_9387: Tensor[(90), float64]) -> (Tensor[(12, 8, 11), float64], Tensor[(12, 8, 11), float64], Tensor[(9, 10, 1), float64], Tensor[(90), float64], Tensor[(12, 8, 11), float64]) {
  %946 = @func_3373() /* ty=(Tensor[(12, 8, 11), float32], Tensor[(12, 8, 11), float64]) */;
  %947 = cast(%var_9387, dtype="float64") /* ty=Tensor[(90), float64] */;
  %948 = reshape(%947, newshape=[9, 10, 1]) /* ty=Tensor[(9, 10, 1), float64] */;
  %949 = %946.1;
  %950 = @func_9203() /* ty=Tensor[(12, 8, 11), float64] */;
  %951 = @func_5947(%948) /* ty=Tensor[(9, 10, 1), float64] */;
  %952 = @func_2756() /* ty=Tensor[(12, 8, 11), float64] */;
  (%949, %950, %951, %var_9387, %952)
}

def @func_11594() -> (Tensor[(12, 8, 11), float64], Tensor[(352), float32], Tensor[(12, 8, 11), float32], Tensor[(12, 8, 11), float32], Tensor[(12, 8, 11), float64]) {
  %967 = fn () -> (Tensor[(12, 8, 11), float64], Tensor[(352), float32], Tensor[(12, 8, 11), float32], Tensor[(12, 8, 11), float32], Tensor[(12, 8, 11), float64]) {
    %953 = @func_9858() /* ty=(Tensor[(12, 8, 11), float64], Tensor[(8, 11, 4), float64]) */;
    %954 = @func_10678() /* ty=(Tensor[(352), bool],) */;
    %955 = %954.0;
    %956 = cast(%955, dtype="float32") /* ty=Tensor[(352), float32] */;
    %957 = rsqrt(%956) /* ty=Tensor[(352), float32] */;
    %958 = cast(%957, dtype="float32") /* ty=Tensor[(352), float32] */;
    %959 = reshape(%958, newshape=[8, 44]) /* ty=Tensor[(8, 44), float32] */;
    %960 = @func_1779(%959) /* ty=(Tensor[(12, 8, 11), float64], Tensor[(12, 8, 11), float32], Tensor[(8, 11, 4), bool], Tensor[(8, 44), float32]) */;
    %961 = @func_6615() /* ty=(Tensor[(352), float32], Tensor[(12, 8, 11), float32]) */;
    %962 = @func_7078() /* ty=(Tensor[(12, 8, 11), float64], Tensor[(12, 8, 11), float64]) */;
    %963 = %953.0;
    %964 = %960.1;
    %965 = %961.1;
    %966 = %962.0;
    (%963, %957, %964, %965, %966)
  };
  %967() /* ty=(Tensor[(12, 8, 11), float64], Tensor[(352), float32], Tensor[(12, 8, 11), float32], Tensor[(12, 8, 11), float32], Tensor[(12, 8, 11), float64]) */
}

def @func_4503() -> (Tensor[(12, 8, 11), float64], Tensor[(16, 16, 13), float64], Tensor[(12, 8, 11), float64]) {
  %973 = fn () -> (Tensor[(12, 8, 11), float64], Tensor[(16, 16, 13), float64], Tensor[(12, 8, 11), float64]) {
    %968 = @func_4190() /* ty=(Tensor[(8, 11, 4), float32], Tensor[(12, 8, 11), float64], Tensor[(12, 8, 11), int64]) */;
    %969 = @func_4110() /* ty=(Tensor[(16, 16, 13), float64], Tensor[(12, 8, 11), float32]) */;
    %970 = %968.1;
    %971 = %969.0;
    %972 = @func_3522() /* ty=Tensor[(12, 8, 11), float64] */;
    (%970, %971, %972)
  };
  %973() /* ty=(Tensor[(12, 8, 11), float64], Tensor[(16, 16, 13), float64], Tensor[(12, 8, 11), float64]) */
}

def @func_4085() -> (Tensor[(12, 8, 11), float32],) {
  %976 = fn () -> (Tensor[(12, 8, 11), float32],) {
    %974 = @func_2205() /* ty=(Tensor[(12, 8, 11), float32], Tensor[(12, 8, 11), float64], Tensor[(12, 8, 11), float64]) */;
    %975 = %974.0;
    (%975,)
  };
  %976() /* ty=(Tensor[(12, 8, 11), float32],) */
}

def @func_3645() -> Tensor[(12, 8, 11), float32] {
  %978 = fn () -> Tensor[(12, 8, 11), float32] {
    %977 = @func_1235() /* ty=(Tensor[(12, 8, 11), float64], Tensor[(12, 8, 11), float32], Tensor[(12, 8, 11), float32]) */;
    %977.1
  };
  %978() /* ty=Tensor[(12, 8, 11), float32] */
}

def @func_6343() -> (Tensor[(12, 8, 11), float64], Tensor[(12, 8, 11), float64], Tensor[(12, 8, 11), float64]) {
  %979 = @func_4637() /* ty=(Tensor[(12, 8, 11), float64], Tensor[(12, 8, 11), float32]) */;
  %980 = @func_4932() /* ty=(Tensor[(12, 8, 11), float64], Tensor[(12, 8, 11), float32], Tensor[(12, 8, 11), int64]) */;
  %981 = %979.0;
  %982 = @func_5533() /* ty=Tensor[(12, 8, 11), float64] */;
  %983 = %980.0;
  (%981, %982, %983)
}

def @func_2382() -> Tensor[(12, 8, 11), float64] {
  @func_2380() /* ty=Tensor[(12, 8, 11), float64] */
}

def @func_1204(%var_1202: Tensor[(352), float32], %var_1203: Tensor[(8, 11, 4), float32]) -> (Tensor[(12, 8, 11), float64], Tensor[(12, 8, 11), float64], Tensor[(8, 11, 4), float64], Tensor[(8, 11, 4), uint8], Tensor[(8, 11, 4), bool], Tensor[(8, 11, 4), float32]) {
  %1017 = fn (%var_1143: Tensor[(352), float32], %var_1148: Tensor[(8, 11, 4), float32]) -> (Tensor[(12, 8, 11), float64], Tensor[(12, 8, 11), float64], Tensor[(8, 11, 4), float64], Tensor[(8, 11, 4), uint8], Tensor[(8, 11, 4), bool], Tensor[(8, 11, 4), float32]) {
    %984 = cast(-0.544357f /* ty=float32 */, dtype="float32") /* ty=float32 */;
    %985 = cast(%var_1143, dtype="float32") /* ty=Tensor[(352), float32] */;
    %986 = reshape(%984, newshape=[]) /* ty=float32 */;
    %987 = reshape(%985, newshape=[8, 11, 4]) /* ty=Tensor[(8, 11, 4), float32] */;
    %988 = @func_262(%986, %987) /* ty=(Tensor[(8, 11, 4), float32],) */;
    %989 = %988.0;
    %990 = cast(%var_1148, dtype="float64") /* ty=Tensor[(8, 11, 4), float64] */;
    %991 = shape_of(%989, dtype="int32") /* ty=Tensor[(3), int32] */;
    %992 = cast(%989, dtype="float64") /* ty=Tensor[(8, 11, 4), float64] */;
    %993 = dyn.reshape(%990, %991, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
    %994 = cast(-0.544357f /* ty=float32 */, dtype="float32") /* ty=float32 */;
    %995 = cast(%var_1143, dtype="float32") /* ty=Tensor[(352), float32] */;
    %996 = reshape(%994, newshape=[]) /* ty=float32 */;
    %997 = reshape(%995, newshape=[8, 11, 4]) /* ty=Tensor[(8, 11, 4), float32] */;
    %998 = @func_262(%996, %997) /* ty=(Tensor[(8, 11, 4), float32],) */;
    %999 = %998.0;
    %1000 = cast(-0.544357f /* ty=float32 */, dtype="uint8") /* ty=uint8 */;
    %1001 = cast(%999, dtype="uint8") /* ty=Tensor[(8, 11, 4), uint8] */;
    %1002 = cast(%var_1143, dtype="bool") /* ty=Tensor[(352), bool] */;
    %1003 = shape_of(%989, dtype="int32") /* ty=Tensor[(3), int32] */;
    %1004 = cast(%989, dtype="bool") /* ty=Tensor[(8, 11, 4), bool] */;
    %1005 = dyn.reshape(%1002, %1003, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    %1006 = cast(-0.544357f /* ty=float32 */, dtype="float32") /* ty=float32 */;
    %1007 = cast(%999, dtype="float32") /* ty=Tensor[(8, 11, 4), float32] */;
    %1008 = reshape(%1006, newshape=[]) /* ty=float32 */;
    %1009 = reshape(%1007, newshape=[8, 11, 4]) /* ty=Tensor[(8, 11, 4), float32] */;
    %1010 = @func_262(%1008, %1009) /* ty=(Tensor[(8, 11, 4), float32],) */;
    %1011 = @func_1117() /* ty=Tensor[(12, 8, 11), float64] */;
    %1012 = @func_1117() /* ty=Tensor[(12, 8, 11), float64] */;
    %1013 = minimum(%992, %993) /* ty=Tensor[(8, 11, 4), float64] */;
    %1014 = bitwise_and(%1000, %1001) /* ty=Tensor[(8, 11, 4), uint8] */;
    %1015 = less(%1004, %1005) /* ty=Tensor[(8, 11, 4), bool] */;
    %1016 = %1010.0;
    (%1011, %1012, %1013, %1014, %1015, %1016)
  };
  %1017(%var_1202, %var_1203) /* ty=(Tensor[(12, 8, 11), float64], Tensor[(12, 8, 11), float64], Tensor[(8, 11, 4), float64], Tensor[(8, 11, 4), uint8], Tensor[(8, 11, 4), bool], Tensor[(8, 11, 4), float32]) */
}

def @func_266(%var_264: float32, %var_265: Tensor[(8, 11, 4), float32]) -> (Tensor[(8, 11, 4), float32],) {
  @func_262(%var_264, %var_265) /* ty=(Tensor[(8, 11, 4), float32],) */
}

def @func_13439() -> (Tensor[(12, 8, 11), float64], Tensor[(12, 8, 11), float64]) {
  @func_13437() /* ty=(Tensor[(12, 8, 11), float64], Tensor[(12, 8, 11), float64]) */
}

def @func_10748() -> Tensor[(12, 8, 11), float64] {
  %1018 = @func_10160() /* ty=(Tensor[(12, 8, 11), float64],) */;
  %1018.0
}

def @func_15056(%var_15054: Tensor[(14, 16, 4), int32], %var_15055: Tensor[(14, 16, 4), int32]) -> (Tensor[(14, 16, 4), int32], Tensor[(15, 6, 11), uint32], Tensor[(14, 16, 4), float64], Tensor[(990), uint32], Tensor[(352), float32], Tensor[(8, 11, 4), float64]) {
  %1034 = fn (%var_15019: Tensor[(14, 16, 4), int32], %var_15020: Tensor[(14, 16, 4), int32]) -> (Tensor[(14, 16, 4), int32], Tensor[(15, 6, 11), uint32], Tensor[(14, 16, 4), float64], Tensor[(990), uint32], Tensor[(352), float32], Tensor[(8, 11, 4), float64]) {
    %1019 = cast(%var_15020, dtype="int32") /* ty=Tensor[(14, 16, 4), int32] */;
    %1020 = shape_of(%var_15019, dtype="int32") /* ty=Tensor[(3), int32] */;
    %1021 = cast(%var_15019, dtype="int32") /* ty=Tensor[(14, 16, 4), int32] */;
    %1022 = dyn.reshape(%1019, %1020, newshape=[]) /* ty=Tensor[(?, ?, ?), int32] */;
    %1023 = @func_2121() /* ty=(Tensor[(12, 7, 6), float32], Tensor[(15, 6, 11), uint32], Tensor[(990), uint32]) */;
    %1024 = cast(%var_15020, dtype="float64") /* ty=Tensor[(14, 16, 4), float64] */;
    %1025 = @func_9903() /* ty=(Tensor[(990), uint32], Tensor[(990), uint32]) */;
    %1026 = @func_7384() /* ty=(Tensor[(352), float32],) */;
    %1027 = @func_2107() /* ty=(Tensor[(8, 11, 4), float64], Tensor[(12, 8, 11), float32]) */;
    %1028 = bitwise_xor(%1021, %1022) /* ty=Tensor[(14, 16, 4), int32] */;
    %1029 = %1023.1;
    %1030 = rsqrt(%1024) /* ty=Tensor[(14, 16, 4), float64] */;
    %1031 = %1025.0;
    %1032 = %1026.0;
    %1033 = %1027.0;
    (%1028, %1029, %1030, %1031, %1032, %1033)
  };
  %1034(%var_15054, %var_15055) /* ty=(Tensor[(14, 16, 4), int32], Tensor[(15, 6, 11), uint32], Tensor[(14, 16, 4), float64], Tensor[(990), uint32], Tensor[(352), float32], Tensor[(8, 11, 4), float64]) */
}

def @func_11807() -> (Tensor[(12, 8, 11), float32], Tensor[(15, 6, 11), uint32]) {
  %1039 = fn () -> (Tensor[(12, 8, 11), float32], Tensor[(15, 6, 11), uint32]) {
    %1035 = @func_2107() /* ty=(Tensor[(8, 11, 4), float64], Tensor[(12, 8, 11), float32]) */;
    %1036 = @func_8102() /* ty=(Tensor[(15, 6, 11), uint32],) */;
    %1037 = %1035.1;
    %1038 = %1036.0;
    (%1037, %1038)
  };
  %1039() /* ty=(Tensor[(12, 8, 11), float32], Tensor[(15, 6, 11), uint32]) */
}

def @func_1400() -> Tensor[(12, 8, 11), float32] {
  %1040 = @func_1235() /* ty=(Tensor[(12, 8, 11), float64], Tensor[(12, 8, 11), float32], Tensor[(12, 8, 11), float32]) */;
  %1040.2
}

def @func_8524() -> (Tensor[(990), uint32], Tensor[(12, 8, 11), float64]) {
  @func_8522() /* ty=(Tensor[(990), uint32], Tensor[(12, 8, 11), float64]) */
}

def @func_7078() -> (Tensor[(12, 8, 11), float64], Tensor[(12, 8, 11), float64]) {
  %1041 = @func_3522() /* ty=Tensor[(12, 8, 11), float64] */;
  %1042 = @func_2380() /* ty=Tensor[(12, 8, 11), float64] */;
  (%1041, %1042)
}

def @func_9782() -> Tensor[(12, 8, 11), float32] {
  %1044 = fn () -> Tensor[(12, 8, 11), float32] {
    %1043 = @func_1741() /* ty=(Tensor[(12, 8, 11), float32],) */;
    %1043.0
  };
  %1044() /* ty=Tensor[(12, 8, 11), float32] */
}

def @func_7459(%var_7457: bool, %var_7458: Tensor[(2, 16, 5), bool]) -> Tensor[(2, 16, 5), bool] {
  %1047 = fn (%var_7441: bool, %var_7442: Tensor[(2, 16, 5), bool]) -> Tensor[(2, 16, 5), bool] {
    %1045 = cast(%var_7441, dtype="bool") /* ty=bool */;
    %1046 = cast(%var_7442, dtype="bool") /* ty=Tensor[(2, 16, 5), bool] */;
    logical_and(%1045, %1046) /* ty=Tensor[(2, 16, 5), bool] */
  };
  %1047(%var_7457, %var_7458) /* ty=Tensor[(2, 16, 5), bool] */
}

def @func_10466(%var_10464: Tensor[(8, 11, 4), uint64]) -> Tensor[(8, 11, 4), float32] {
  @func_10463(%var_10464) /* ty=Tensor[(8, 11, 4), float32] */
}

def @func_1302(%var_1301: Tensor[(352), float32]) -> (Tensor[(8, 11, 4), bool], Tensor[(352), float32], Tensor[(12, 8, 11), float64], Tensor[(8, 11, 4), float64]) {
  %1066 = fn (%var_1273: Tensor[(352), float32]) -> (Tensor[(8, 11, 4), bool], Tensor[(352), float32], Tensor[(12, 8, 11), float64], Tensor[(8, 11, 4), float64]) {
    %1048 = cast(%var_1273, dtype="float32") /* ty=Tensor[(352), float32] */;
    %1049 = cast(%var_1273, dtype="float32") /* ty=Tensor[(352), float32] */;
    %1050 = reshape(%1048, newshape=[352]) /* ty=Tensor[(352), float32] */;
    %1051 = reshape(%1049, newshape=[8, 11, 4]) /* ty=Tensor[(8, 11, 4), float32] */;
    %1052 = @func_1201(%1050, %1051) /* ty=(Tensor[(12, 8, 11), float64], Tensor[(12, 8, 11), float64], Tensor[(8, 11, 4), float64], Tensor[(8, 11, 4), uint8], Tensor[(8, 11, 4), bool], Tensor[(8, 11, 4), float32]) */;
    %1053 = @func_1235() /* ty=(Tensor[(12, 8, 11), float64], Tensor[(12, 8, 11), float32], Tensor[(12, 8, 11), float32]) */;
    %1054 = %1053.2;
    %1055 = cast(%1054, dtype="float32") /* ty=Tensor[(12, 8, 11), float32] */;
    %1056 = cosh(%1055) /* ty=Tensor[(12, 8, 11), float32] */;
    %1057 = cast(%1056, dtype="float64") /* ty=Tensor[(12, 8, 11), float64] */;
    %1058 = %1052.4;
    %1059 = cast(%1058, dtype="float32") /* ty=Tensor[(8, 11, 4), float32] */;
    %1060 = cast(%var_1273, dtype="float32") /* ty=Tensor[(352), float32] */;
    %1061 = reshape(%1059, newshape=[352]) /* ty=Tensor[(352), float32] */;
    %1062 = reshape(%1060, newshape=[8, 11, 4]) /* ty=Tensor[(8, 11, 4), float32] */;
    %1063 = @func_1201(%1061, %1062) /* ty=(Tensor[(12, 8, 11), float64], Tensor[(12, 8, 11), float64], Tensor[(8, 11, 4), float64], Tensor[(8, 11, 4), uint8], Tensor[(8, 11, 4), bool], Tensor[(8, 11, 4), float32]) */;
    %1064 = log(%1057) /* ty=Tensor[(12, 8, 11), float64] */;
    %1065 = %1063.2;
    (%1058, %var_1273, %1064, %1065)
  };
  %1066(%var_1301) /* ty=(Tensor[(8, 11, 4), bool], Tensor[(352), float32], Tensor[(12, 8, 11), float64], Tensor[(8, 11, 4), float64]) */
}

def @func_5509() -> (Tensor[(15, 6, 11), uint32], Tensor[(352), float32], Tensor[(12, 8, 11), float64]) {
  %1072 = fn () -> (Tensor[(15, 6, 11), uint32], Tensor[(352), float32], Tensor[(12, 8, 11), float64]) {
    %1067 = @func_5221() /* ty=(Tensor[(15, 6, 11), uint32],) */;
    %1068 = @func_3796() /* ty=(Tensor[(352), float32],) */;
    %1069 = %1067.0;
    %1070 = %1068.0;
    %1071 = @func_1117() /* ty=Tensor[(12, 8, 11), float64] */;
    (%1069, %1070, %1071)
  };
  %1072() /* ty=(Tensor[(15, 6, 11), uint32], Tensor[(352), float32], Tensor[(12, 8, 11), float64]) */
}

def @func_12444(%var_12442: Tensor[(1, 5, 9), int16], %var_12443: Tensor[(5, 5, 9), int16]) -> Tensor[(5, 5, 9), int16] {
  %1075 = fn (%var_12428: Tensor[(1, 5, 9), int16], %var_12429: Tensor[(5, 5, 9), int16]) -> Tensor[(5, 5, 9), int16] {
    %1073 = cast(%var_12428, dtype="int16") /* ty=Tensor[(1, 5, 9), int16] */;
    %1074 = cast(%var_12429, dtype="int16") /* ty=Tensor[(5, 5, 9), int16] */;
    subtract(%1073, %1074) /* ty=Tensor[(5, 5, 9), int16] */
  };
  %1075(%var_12442, %var_12443) /* ty=Tensor[(5, 5, 9), int16] */
}

def @func_12481() -> (Tensor[(12, 8, 11), float32],) {
  @func_12479() /* ty=(Tensor[(12, 8, 11), float32],) */
}

def @func_2109() -> (Tensor[(8, 11, 4), float64], Tensor[(12, 8, 11), float32]) {
  @func_2107() /* ty=(Tensor[(8, 11, 4), float64], Tensor[(12, 8, 11), float32]) */
}

def @func_2575() -> (Tensor[(352), float32], Tensor[(12, 8, 11), float64], Tensor[(990), uint32], Tensor[(12, 8, 11), float64], Tensor[(12, 8, 11), int64]) {
  %1086 = fn () -> (Tensor[(352), float32], Tensor[(12, 8, 11), float64], Tensor[(990), uint32], Tensor[(12, 8, 11), float64], Tensor[(12, 8, 11), int64]) {
    %1076 = @func_1559() /* ty=(Tensor[(12, 8, 11), uint16], Tensor[(8, 11, 4), float64], Tensor[(352), float32], Tensor[(8, 11, 4), bool]) */;
    %1077 = cast(meta[relay.Constant][30] /* ty=Tensor[(990), uint32] */, dtype="uint32") /* ty=Tensor[(990), uint32] */;
    %1078 = reshape(%1077, newshape=[990]) /* ty=Tensor[(990), uint32] */;
    %1079 = @func_1625(%1078) /* ty=(Tensor[(12, 8, 11), float64], Tensor[(352), int8], Tensor[(352), float32], Tensor[(990), uint32]) */;
    %1080 = @func_1463() /* ty=(Tensor[(12, 8, 11), float64], Tensor[(12, 8, 11), float64]) */;
    %1081 = @func_2238() /* ty=(Tensor[(12, 8, 11), int64],) */;
    %1082 = %1076.2;
    %1083 = %1079.0;
    %1084 = %1080.0;
    %1085 = %1081.0;
    (%1082, %1083, meta[relay.Constant][30] /* ty=Tensor[(990), uint32] */, %1084, %1085)
  };
  %1086() /* ty=(Tensor[(352), float32], Tensor[(12, 8, 11), float64], Tensor[(990), uint32], Tensor[(12, 8, 11), float64], Tensor[(12, 8, 11), int64]) */
}

def @func_15407() -> Tensor[(12, 8, 11), float32] {
  @func_15272() /* ty=Tensor[(12, 8, 11), float32] */
}

def @func_5379() -> (Tensor[(12, 8, 11), float64],) {
  %1087 = @func_2045() /* ty=(Tensor[(12, 8, 11), float64], Tensor[(12, 8, 11), float64]) */;
  %1088 = %1087.0;
  (%1088,)
}

def @func_5052() -> (Tensor[(12, 8, 11), float32], Tensor[(12, 8, 11), float32]) {
  @func_5050() /* ty=(Tensor[(12, 8, 11), float32], Tensor[(12, 8, 11), float32]) */
}

def @func_12205() -> (Tensor[(12, 8, 11), float32], Tensor[(352), float32], Tensor[(352), float32], Tensor[(12, 8, 11), float32], Tensor[(15, 6, 11), uint32], Tensor[(12, 8, 11), float64]) {
  %1089 = @func_10878() /* ty=(Tensor[(12, 8, 11), float32], Tensor[(12, 8, 11), float32]) */;
  %1090 = %1089.1;
  %1091 = cast(%1090, dtype="float64") /* ty=Tensor[(12, 8, 11), float64] */;
  %1092 = cast(meta[relay.Constant][31] /* ty=Tensor[(352), float32] */, dtype="float32") /* ty=Tensor[(352), float32] */;
  %1093 = reshape(%1091, newshape=[1056]) /* ty=Tensor[(1056), float64] */;
  %1094 = reshape(%1092, newshape=[352]) /* ty=Tensor[(352), float32] */;
  %1095 = @func_10031(%1093, %1094) /* ty=(Tensor[(1056), float64], Tensor[(15, 6, 11), int16], Tensor[(8, 11, 4), float32], float32, Tensor[(352), float32], Tensor[(352), int8], Tensor[(15, 6, 11), uint64]) */;
  %1096 = @func_1741() /* ty=(Tensor[(12, 8, 11), float32],) */;
  %1097 = @func_8102() /* ty=(Tensor[(15, 6, 11), uint32],) */;
  %1098 = %1095.4;
  %1099 = %1096.0;
  %1100 = %1097.0;
  %1101 = @func_6069() /* ty=Tensor[(12, 8, 11), float64] */;
  (%1090, %1098, meta[relay.Constant][31] /* ty=Tensor[(352), float32] */, %1099, %1100, %1101)
}

def @func_12135() -> (Tensor[(8, 11, 4), float64],) {
  %1106 = fn () -> (Tensor[(8, 11, 4), float64],) {
    %1102 = @func_1559() /* ty=(Tensor[(12, 8, 11), uint16], Tensor[(8, 11, 4), float64], Tensor[(352), float32], Tensor[(8, 11, 4), bool]) */;
    %1103 = %1102.1;
    %1104 = cast(%1103, dtype="float64") /* ty=Tensor[(8, 11, 4), float64] */;
    %1105 = erf(%1104) /* ty=Tensor[(8, 11, 4), float64] */;
    (%1105,)
  };
  %1106() /* ty=(Tensor[(8, 11, 4), float64],) */
}

def @func_2623() -> (Tensor[(12, 8, 11), float64], Tensor[(12, 8, 11), float64]) {
  %1111 = fn () -> (Tensor[(12, 8, 11), float64], Tensor[(12, 8, 11), float64]) {
    %1107 = @func_2045() /* ty=(Tensor[(12, 8, 11), float64], Tensor[(12, 8, 11), float64]) */;
    %1108 = @func_1358() /* ty=(Tensor[(12, 8, 11), float64],) */;
    %1109 = %1107.1;
    %1110 = %1108.0;
    (%1109, %1110)
  };
  %1111() /* ty=(Tensor[(12, 8, 11), float64], Tensor[(12, 8, 11), float64]) */
}

def @func_7510(%var_7509: Tensor[(52, 4), float64]) -> (Tensor[(990), uint32], Tensor[(8, 11, 4), float64], Tensor[(8, 2, 13), bool], Tensor[(52, 4), float64]) {
  %1121 = fn (%var_7495: Tensor[(52, 4), float64]) -> (Tensor[(990), uint32], Tensor[(8, 11, 4), float64], Tensor[(8, 2, 13), bool], Tensor[(52, 4), float64]) {
    %1112 = @func_6996() /* ty=(Tensor[(8, 11, 4), float64], Tensor[(352), float32]) */;
    %1113 = cast(%var_7495, dtype="float64") /* ty=Tensor[(52, 4), float64] */;
    %1114 = cast(%var_7495, dtype="float64") /* ty=Tensor[(52, 4), float64] */;
    %1115 = reshape(%1113, newshape=[8, 2, 13]) /* ty=Tensor[(8, 2, 13), float64] */;
    %1116 = reshape(%1114, newshape=[8, 2, 13]) /* ty=Tensor[(8, 2, 13), float64] */;
    %1117 = @func_5563(%1115, %1116) /* ty=(Tensor[(8, 2, 13), bool], Tensor[(12, 7, 6), float32]) */;
    %1118 = @func_5318() /* ty=Tensor[(990), uint32] */;
    %1119 = %1112.0;
    %1120 = %1117.0;
    (%1118, %1119, %1120, %var_7495)
  };
  %1121(%var_7509) /* ty=(Tensor[(990), uint32], Tensor[(8, 11, 4), float64], Tensor[(8, 2, 13), bool], Tensor[(52, 4), float64]) */
}

def @func_12687(%var_12686: Tensor[(2, 7, 16), float64]) -> Tensor[(2, 7, 16), float64] {
  %1123 = fn (%var_12673: Tensor[(2, 7, 16), float64]) -> Tensor[(2, 7, 16), float64] {
    %1122 = cast(%var_12673, dtype="float64") /* ty=Tensor[(2, 7, 16), float64] */;
    acosh(%1122) /* ty=Tensor[(2, 7, 16), float64] */
  };
  %1123(%var_12686) /* ty=Tensor[(2, 7, 16), float64] */
}

def @func_12947(%var_12945: Tensor[(990), uint32]) -> (Tensor[(12, 8, 11), float64], Tensor[(16, 16, 13), float64], Tensor[(990), uint32], Tensor[(12, 8, 11), float64]) {
  @func_12944(%var_12945) /* ty=(Tensor[(12, 8, 11), float64], Tensor[(16, 16, 13), float64], Tensor[(990), uint32], Tensor[(12, 8, 11), float64]) */
}

def @func_4358(%var_4356: Tensor[(352), float32]) -> (Tensor[(12, 8, 11), float32], Tensor[(8, 11, 4), bool], Tensor[(352), float32]) {
  @func_4355(%var_4356) /* ty=(Tensor[(12, 8, 11), float32], Tensor[(8, 11, 4), bool], Tensor[(352), float32]) */
}

def @func_5318() -> Tensor[(990), uint32] {
  %1124 = @func_3489() /* ty=(Tensor[(12, 8, 11), float32], Tensor[(12, 8, 11), float64], Tensor[(12, 8, 11), float64], Tensor[(12, 8, 11), float32], Tensor[(990), uint32]) */;
  %1124.4
}

def @func_13541(%var_13539: Tensor[(3, 2, 15), uint8]) -> Tensor[(3, 2, 15), bool] {
  @func_13538(%var_13539) /* ty=Tensor[(3, 2, 15), bool] */
}

def @main(%var_15529: Tensor[(8, 6, 9), bool]) -> Tensor[(8, 6, 9), bool] {
  %1125 = cast(%var_15529, dtype="bool") /* ty=Tensor[(8, 6, 9), bool] */;
  %1126 = shape_of(meta[relay.Constant][32] /* ty=Tensor[(8, 6, 9), bool] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1127 = cast(meta[relay.Constant][32] /* ty=Tensor[(8, 6, 9), bool] */, dtype="bool") /* ty=Tensor[(8, 6, 9), bool] */;
  %1128 = dyn.reshape(%1125, %1126, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  logical_or(%1127, %1128) /* ty=Tensor[(8, 6, 9), bool] */
}

def @func_5773() -> (Tensor[(12, 8, 11), float64], Tensor[(12, 8, 11), float64], Tensor[(12, 8, 11), float64], Tensor[(990), uint32], Tensor[(15, 6, 11), uint32], Tensor[(8, 11, 4), float32]) {
  %1146 = fn () -> (Tensor[(12, 8, 11), float64], Tensor[(12, 8, 11), float64], Tensor[(12, 8, 11), float64], Tensor[(990), uint32], Tensor[(15, 6, 11), uint32], Tensor[(8, 11, 4), float32]) {
    %1129 = @func_5379() /* ty=(Tensor[(12, 8, 11), float64],) */;
    %1130 = @func_1559() /* ty=(Tensor[(12, 8, 11), uint16], Tensor[(8, 11, 4), float64], Tensor[(352), float32], Tensor[(8, 11, 4), bool]) */;
    %1131 = %1130.1;
    %1132 = cast(%1131, dtype="float32") /* ty=Tensor[(8, 11, 4), float32] */;
    %1133 = cast(meta[relay.Constant][33] /* ty=Tensor[(990), uint32] */, dtype="uint32") /* ty=Tensor[(990), uint32] */;
    %1134 = reshape(%1132, newshape=[352]) /* ty=Tensor[(352), float32] */;
    %1135 = reshape(%1133, newshape=[990]) /* ty=Tensor[(990), uint32] */;
    %1136 = @func_1580(%1134, %1135) /* ty=(Tensor[(352), int8], Tensor[(12, 8, 11), float64], Tensor[(990), uint32]) */;
    %1137 = cast(meta[relay.Constant][33] /* ty=Tensor[(990), uint32] */, dtype="uint32") /* ty=Tensor[(990), uint32] */;
    %1138 = reshape(%1137, newshape=[15, 6, 11]) /* ty=Tensor[(15, 6, 11), uint32] */;
    %1139 = @func_1342(%1138) /* ty=(Tensor[(15, 6, 11), uint32], Tensor[(12, 8, 11), float64]) */;
    %1140 = cast(%1131, dtype="float32") /* ty=Tensor[(8, 11, 4), float32] */;
    %1141 = %1129.0;
    %1142 = @func_2808() /* ty=Tensor[(12, 8, 11), float64] */;
    %1143 = %1136.1;
    %1144 = %1139.0;
    %1145 = cos(%1140) /* ty=Tensor[(8, 11, 4), float32] */;
    (%1141, %1142, %1143, meta[relay.Constant][33] /* ty=Tensor[(990), uint32] */, %1144, %1145)
  };
  %1146() /* ty=(Tensor[(12, 8, 11), float64], Tensor[(12, 8, 11), float64], Tensor[(12, 8, 11), float64], Tensor[(990), uint32], Tensor[(15, 6, 11), uint32], Tensor[(8, 11, 4), float32]) */
}

def @func_2046() -> (Tensor[(12, 8, 11), float64], Tensor[(12, 8, 11), float64]) {
  %1151 = fn () -> (Tensor[(12, 8, 11), float64], Tensor[(12, 8, 11), float64]) {
    %1147 = @func_1358() /* ty=(Tensor[(12, 8, 11), float64],) */;
    %1148 = @func_1463() /* ty=(Tensor[(12, 8, 11), float64], Tensor[(12, 8, 11), float64]) */;
    %1149 = %1147.0;
    %1150 = %1148.0;
    (%1149, %1150)
  };
  %1151() /* ty=(Tensor[(12, 8, 11), float64], Tensor[(12, 8, 11), float64]) */
}

def @func_5535() -> Tensor[(12, 8, 11), float64] {
  @func_5533() /* ty=Tensor[(12, 8, 11), float64] */
}

def @func_9620() -> Tensor[(12, 8, 11), float64] {
  %1152 = @func_2045() /* ty=(Tensor[(12, 8, 11), float64], Tensor[(12, 8, 11), float64]) */;
  %1152.1
}

def @func_3929(%var_3912: Tensor[(275, 3), uint32]) -> (Tensor[(12, 8, 11), float64], Tensor[(12, 8, 11), float64], Tensor[(12, 8, 11), float64], Tensor[(12, 8, 11), float64], Tensor[(12, 8, 11), float64], Tensor[(11, 15, 5), uint32], Tensor[(275, 3), uint32]) {
  %1153 = @func_1400() /* ty=Tensor[(12, 8, 11), float32] */;
  %1154 = cast(%1153, dtype="float64") /* ty=Tensor[(12, 8, 11), float64] */;
  %1155 = @func_2774() /* ty=(Tensor[(12, 8, 11), float64],) */;
  %1156 = @func_2045() /* ty=(Tensor[(12, 8, 11), float64], Tensor[(12, 8, 11), float64]) */;
  %1157 = cast(%var_3912, dtype="uint32") /* ty=Tensor[(275, 3), uint32] */;
  %1158 = reshape(%1157, newshape=[11, 15, 5]) /* ty=Tensor[(11, 15, 5), uint32] */;
  %1159 = atanh(%1154) /* ty=Tensor[(12, 8, 11), float64] */;
  %1160 = @func_2380() /* ty=Tensor[(12, 8, 11), float64] */;
  %1161 = @func_2808() /* ty=Tensor[(12, 8, 11), float64] */;
  %1162 = %1155.0;
  %1163 = %1156.1;
  %1164 = @func_1996(%1158) /* ty=Tensor[(11, 15, 5), uint32] */;
  (%1159, %1160, %1161, %1162, %1163, %1164, %var_3912)
}

def @func_11653() -> Tensor[(12, 8, 11), float64] {
  %1166 = fn () -> Tensor[(12, 8, 11), float64] {
    %1165 = @func_10103() /* ty=(Tensor[(12, 8, 11), float64],) */;
    %1165.0
  };
  %1166() /* ty=Tensor[(12, 8, 11), float64] */
}

def @func_6345() -> (Tensor[(12, 8, 11), float64], Tensor[(12, 8, 11), float64], Tensor[(12, 8, 11), float64]) {
  @func_6343() /* ty=(Tensor[(12, 8, 11), float64], Tensor[(12, 8, 11), float64], Tensor[(12, 8, 11), float64]) */
}

def @func_14177() -> (Tensor[(12, 8, 11), float64],) {
  @func_14175() /* ty=(Tensor[(12, 8, 11), float64],) */
}

def @func_3236() -> (Tensor[(12, 8, 11), int64], Tensor[(12, 8, 11), float32], Tensor[(352), float32]) {
  @func_3234() /* ty=(Tensor[(12, 8, 11), int64], Tensor[(12, 8, 11), float32], Tensor[(352), float32]) */
}

def @func_8758(%var_8756: Tensor[(9, 8, 2), float32]) -> (Tensor[(9, 8, 2), float32], Tensor[(12, 8, 11), float64]) {
  @func_8755(%var_8756) /* ty=(Tensor[(9, 8, 2), float32], Tensor[(12, 8, 11), float64]) */
}

def @func_13281() -> (Tensor[(352), float32],) {
  @func_13279() /* ty=(Tensor[(352), float32],) */
}

def @func_2107() -> (Tensor[(8, 11, 4), float64], Tensor[(12, 8, 11), float32]) {
  %1167 = @func_1559() /* ty=(Tensor[(12, 8, 11), uint16], Tensor[(8, 11, 4), float64], Tensor[(352), float32], Tensor[(8, 11, 4), bool]) */;
  %1168 = @func_1741() /* ty=(Tensor[(12, 8, 11), float32],) */;
  %1169 = %1167.1;
  %1170 = %1168.0;
  (%1169, %1170)
}

def @func_9321() -> (Tensor[(8, 11, 4), float64], Tensor[(12, 8, 11), float64]) {
  %1171 = @func_3508() /* ty=(Tensor[(8, 11, 4), float64],) */;
  %1172 = @func_6483() /* ty=(Tensor[(12, 8, 11), float64], Tensor[(12, 8, 11), float64], Tensor[(12, 8, 11), float32]) */;
  %1173 = %1171.0;
  %1174 = %1172.1;
  (%1173, %1174)
}

def @func_15427(%var_15421: Tensor[(15, 11, 2), bool], %var_15422: Tensor[(15, 11, 2), bool]) -> (Tensor[(15, 11, 2), bool],) {
  %1175 = cast(%var_15422, dtype="bool") /* ty=Tensor[(15, 11, 2), bool] */;
  %1176 = shape_of(%var_15421, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1177 = cast(%var_15421, dtype="bool") /* ty=Tensor[(15, 11, 2), bool] */;
  %1178 = dyn.reshape(%1175, %1176, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %1179 = logical_and(%1177, %1178) /* ty=Tensor[(15, 11, 2), bool] */;
  (%1179,)
}

def @func_9904() -> (Tensor[(990), uint32], Tensor[(990), uint32]) {
  %1186 = fn () -> (Tensor[(990), uint32], Tensor[(990), uint32]) {
    %1180 = @func_8900() /* ty=(Tensor[(990), uint32],) */;
    %1181 = %1180.0;
    %1182 = cast(%1181, dtype="uint32") /* ty=Tensor[(990), uint32] */;
    %1183 = reshape(%1182, newshape=[990]) /* ty=Tensor[(990), uint32] */;
    %1184 = @func_6377(%1183) /* ty=(Tensor[(12, 8, 11), int64], Tensor[(15, 6, 11), uint32], Tensor[(990), uint32]) */;
    %1185 = %1184.2;
    (%1181, %1185)
  };
  %1186() /* ty=(Tensor[(990), uint32], Tensor[(990), uint32]) */
}

def @func_6966(%var_6948: Tensor[(12, 8, 11), float64]) -> (Tensor[(12, 8, 11), uint32], Tensor[(15, 6, 11), uint32]) {
  %1187 = @func_1358() /* ty=(Tensor[(12, 8, 11), float64],) */;
  %1188 = %1187.0;
  %1189 = cast(%var_6948, dtype="uint32") /* ty=Tensor[(12, 8, 11), uint32] */;
  %1190 = shape_of(%1188, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1191 = cast(%1188, dtype="uint32") /* ty=Tensor[(12, 8, 11), uint32] */;
  %1192 = dyn.reshape(%1189, %1190, newshape=[]) /* ty=Tensor[(?, ?, ?), uint32] */;
  %1193 = @func_5221() /* ty=(Tensor[(15, 6, 11), uint32],) */;
  %1194 = bitwise_or(%1191, %1192) /* ty=Tensor[(12, 8, 11), uint32] */;
  %1195 = %1193.0;
  (%1194, %1195)
}

def @func_12793() -> Tensor[(8, 11, 4), float64] {
  %1197 = fn () -> Tensor[(8, 11, 4), float64] {
    %1196 = @func_11011() /* ty=(Tensor[(12, 8, 11), float64], Tensor[(12, 8, 11), float64], Tensor[(8, 11, 4), float64]) */;
    %1196.2
  };
  %1197() /* ty=Tensor[(8, 11, 4), float64] */
}

def @func_8331() -> (Tensor[(16, 16, 13), float64],) {
  %1199 = fn () -> (Tensor[(16, 16, 13), float64],) {
    %1198 = @func_4766() /* ty=Tensor[(16, 16, 13), float64] */;
    (%1198,)
  };
  %1199() /* ty=(Tensor[(16, 16, 13), float64],) */
}

def @func_5205(%var_5204: Tensor[(825), uint32]) -> (Tensor[(15, 6, ?), bool], Tensor[(825), uint32], Tensor[(11, 15, 5), float64]) {
  %1207 = fn (%var_5194: Tensor[(825), uint32]) -> (Tensor[(15, 6, ?), bool], Tensor[(825), uint32], Tensor[(11, 15, 5), float64]) {
    %1200 = @func_3145() /* ty=(Tensor[(12, 8, 11), float64], Tensor[(15, 6, ?), bool], Tensor[(12, 8, 11), float32], Tensor[(990), uint32], Tensor[(8, 11, 4), float64], Tensor[(15, 6, ?), float32], Tensor[(12, 8, 11), float64], Tensor[(12, 8, 11), float64], Tensor[(12, 8, 11), float32], Tensor[(15, 6, 11), bool]) */;
    %1201 = cast(%var_5194, dtype="uint32") /* ty=Tensor[(825), uint32] */;
    %1202 = reshape(%1201, newshape=[11, 15, 5]) /* ty=Tensor[(11, 15, 5), uint32] */;
    %1203 = @func_1996(%1202) /* ty=Tensor[(11, 15, 5), uint32] */;
    %1204 = cast(%1203, dtype="float64") /* ty=Tensor[(11, 15, 5), float64] */;
    %1205 = %1200.1;
    %1206 = sinh(%1204) /* ty=Tensor[(11, 15, 5), float64] */;
    (%1205, %var_5194, %1206)
  };
  %1207(%var_5204) /* ty=(Tensor[(15, 6, ?), bool], Tensor[(825), uint32], Tensor[(11, 15, 5), float64]) */
}

def @func_12417() -> (Tensor[(12, 8, 11), float64], Tensor[(15, 6, 11), uint32], Tensor[(352), float32]) {
  %1208 = @func_11011() /* ty=(Tensor[(12, 8, 11), float64], Tensor[(12, 8, 11), float64], Tensor[(8, 11, 4), float64]) */;
  %1209 = @func_5445() /* ty=(Tensor[(12, 8, 11), float64], Tensor[(12, 8, 11), float64], Tensor[(15, 6, 11), uint32], Tensor[(352), float32]) */;
  %1210 = @func_5445() /* ty=(Tensor[(12, 8, 11), float64], Tensor[(12, 8, 11), float64], Tensor[(15, 6, 11), uint32], Tensor[(352), float32]) */;
  %1211 = %1208.1;
  %1212 = %1209.2;
  %1213 = %1210.3;
  (%1211, %1212, %1213)
}

def @func_13279() -> (Tensor[(352), float32],) {
  %1214 = @func_11497() /* ty=Tensor[(352), float32] */;
  (%1214,)
}

def @func_15093() -> (Tensor[(12, 8, 11), float64], Tensor[(12, 8, 11), float32]) {
  %1215 = @func_2380() /* ty=Tensor[(12, 8, 11), float64] */;
  %1216 = @func_12773() /* ty=Tensor[(12, 8, 11), float32] */;
  (%1215, %1216)
}

def @func_13115(%var_13087: Tensor[(208), float64]) -> (Tensor[(12, 8, 11), float64], Tensor[(52, 4), float64], Tensor[(208), float64]) {
  %1217 = @func_8453() /* ty=(Tensor[(12, 8, 11), float64], Tensor[(8, 11, 4), float32]) */;
  %1218 = cast(%var_13087, dtype="float64") /* ty=Tensor[(208), float64] */;
  %1219 = reshape(%1218, newshape=[52, 4]) /* ty=Tensor[(52, 4), float64] */;
  %1220 = @func_7508(%1219) /* ty=(Tensor[(990), uint32], Tensor[(8, 11, 4), float64], Tensor[(8, 2, 13), bool], Tensor[(52, 4), float64]) */;
  %1221 = %1217.0;
  %1222 = %1220.3;
  (%1221, %1222, %var_13087)
}

def @func_4355(%var_4349: Tensor[(352), float32]) -> (Tensor[(12, 8, 11), float32], Tensor[(8, 11, 4), bool], Tensor[(352), float32]) {
  %1223 = @func_4052() /* ty=(Tensor[(12, 8, 11), float32], Tensor[(12, 8, 11), float32]) */;
  %1224 = cast(%var_4349, dtype="float32") /* ty=Tensor[(352), float32] */;
  %1225 = reshape(%1224, newshape=[352]) /* ty=Tensor[(352), float32] */;
  %1226 = @func_1300(%1225) /* ty=(Tensor[(8, 11, 4), bool], Tensor[(352), float32], Tensor[(12, 8, 11), float64], Tensor[(8, 11, 4), float64]) */;
  %1227 = %1223.0;
  %1228 = %1226.0;
  (%1227, %1228, %var_4349)
}

def @func_6998() -> (Tensor[(8, 11, 4), float64], Tensor[(352), float32]) {
  @func_6996() /* ty=(Tensor[(8, 11, 4), float64], Tensor[(352), float32]) */
}

def @func_11236() -> (Tensor[(12, 8, 11), int64], Tensor[(12, 8, 11), float32], Tensor[(12, 8, 11), float64], Tensor[(12, 8, 11), int64], Tensor[(12, 8, 11), float64]) {
  %1237 = fn () -> (Tensor[(12, 8, 11), int64], Tensor[(12, 8, 11), float32], Tensor[(12, 8, 11), float64], Tensor[(12, 8, 11), int64], Tensor[(12, 8, 11), float64]) {
    %1229 = @func_2107() /* ty=(Tensor[(8, 11, 4), float64], Tensor[(12, 8, 11), float32]) */;
    %1230 = @func_2238() /* ty=(Tensor[(12, 8, 11), int64],) */;
    %1231 = @func_5772() /* ty=(Tensor[(12, 8, 11), float64], Tensor[(12, 8, 11), float64], Tensor[(12, 8, 11), float64], Tensor[(990), uint32], Tensor[(15, 6, 11), uint32], Tensor[(8, 11, 4), float32]) */;
    %1232 = @func_3349() /* ty=Tensor[(12, 8, 11), int64] */;
    %1233 = %1229.1;
    %1234 = @func_9620() /* ty=Tensor[(12, 8, 11), float64] */;
    %1235 = %1230.0;
    %1236 = %1231.1;
    (%1232, %1233, %1234, %1235, %1236)
  };
  %1237() /* ty=(Tensor[(12, 8, 11), int64], Tensor[(12, 8, 11), float32], Tensor[(12, 8, 11), float64], Tensor[(12, 8, 11), int64], Tensor[(12, 8, 11), float64]) */
}

def @func_5566(%var_5564: Tensor[(8, 2, 13), float64], %var_5565: Tensor[(8, 2, 13), float64]) -> (Tensor[(8, 2, 13), bool], Tensor[(12, 7, 6), float32]) {
  %1245 = fn (%var_5536: Tensor[(8, 2, 13), float64], %var_5537: Tensor[(8, 2, 13), float64]) -> (Tensor[(8, 2, 13), bool], Tensor[(12, 7, 6), float32]) {
    %1238 = cast(%var_5537, dtype="bool") /* ty=Tensor[(8, 2, 13), bool] */;
    %1239 = shape_of(%var_5536, dtype="int32") /* ty=Tensor[(3), int32] */;
    %1240 = cast(%var_5536, dtype="bool") /* ty=Tensor[(8, 2, 13), bool] */;
    %1241 = dyn.reshape(%1238, %1239, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    %1242 = @func_2121() /* ty=(Tensor[(12, 7, 6), float32], Tensor[(15, 6, 11), uint32], Tensor[(990), uint32]) */;
    %1243 = less_equal(%1240, %1241) /* ty=Tensor[(8, 2, 13), bool] */;
    %1244 = %1242.0;
    (%1243, %1244)
  };
  %1245(%var_5564, %var_5565) /* ty=(Tensor[(8, 2, 13), bool], Tensor[(12, 7, 6), float32]) */
}

def @func_10484() -> (Tensor[(12, 8, 11), float64],) {
  %1247 = fn () -> (Tensor[(12, 8, 11), float64],) {
    %1246 = @func_2955() /* ty=Tensor[(12, 8, 11), float64] */;
    (%1246,)
  };
  %1247() /* ty=(Tensor[(12, 8, 11), float64],) */
}

def @func_15361(%var_15360: Tensor[(8, 5, 13), float32]) -> Tensor[(8, 5, 13), float32] {
  %1249 = fn (%var_15342: Tensor[(8, 5, 13), float32]) -> Tensor[(8, 5, 13), float32] {
    %1248 = cast(%var_15342, dtype="float32") /* ty=Tensor[(8, 5, 13), float32] */;
    cosh(%1248) /* ty=Tensor[(8, 5, 13), float32] */
  };
  %1249(%var_15360) /* ty=Tensor[(8, 5, 13), float32] */
}

def @func_6377(%var_6369: Tensor[(990), uint32]) -> (Tensor[(12, 8, 11), int64], Tensor[(15, 6, 11), uint32], Tensor[(990), uint32]) {
  %1250 = @func_4932() /* ty=(Tensor[(12, 8, 11), float64], Tensor[(12, 8, 11), float32], Tensor[(12, 8, 11), int64]) */;
  %1251 = cast(%var_6369, dtype="uint32") /* ty=Tensor[(990), uint32] */;
  %1252 = reshape(%1251, newshape=[990]) /* ty=Tensor[(990), uint32] */;
  %1253 = @func_4749(%1252) /* ty=(Tensor[(12, 8, 11), uint16], Tensor[(15, 6, 11), uint32], Tensor[(990), uint32], Tensor[(12, 8, 11), float32]) */;
  %1254 = %1250.2;
  %1255 = %1253.1;
  (%1254, %1255, %var_6369)
}

def @func_3234() -> (Tensor[(12, 8, 11), int64], Tensor[(12, 8, 11), float32], Tensor[(352), float32]) {
  %1256 = @func_2737() /* ty=(Tensor[(990), uint32], Tensor[(12, 8, 11), float64], Tensor[(12, 8, 11), float64], Tensor[(12, 8, 11), float64], Tensor[(12, 8, 11), int64]) */;
  %1257 = @func_2306() /* ty=(Tensor[(352), float32], Tensor[(352), float32]) */;
  %1258 = %1256.4;
  %1259 = @func_1918() /* ty=Tensor[(12, 8, 11), float32] */;
  %1260 = %1257.1;
  (%1258, %1259, %1260)
}

def @func_5950(%var_5948: Tensor[(9, 10, 1), float64]) -> Tensor[(9, 10, 1), float64] {
  @func_5947(%var_5948) /* ty=Tensor[(9, 10, 1), float64] */
}

def @func_9008(%var_9007: Tensor[(825), uint32]) -> (Tensor[(12, 8, 11), float64], Tensor[(8, 11, 4), float64], Tensor[(208), float64], Tensor[(12, 8, 11), float64], Tensor[(12, 8, 11), float64], Tensor[(12, 8, 11), float32], Tensor[(8, 11, 4), float64], Tensor[(990), float64], Tensor[(8, 11, 4), float64], Tensor[(15, 6, 11), uint32], Tensor[(825), uint32]) {
  %1283 = fn (%var_8994: Tensor[(825), uint32]) -> (Tensor[(12, 8, 11), float64], Tensor[(8, 11, 4), float64], Tensor[(208), float64], Tensor[(12, 8, 11), float64], Tensor[(12, 8, 11), float64], Tensor[(12, 8, 11), float32], Tensor[(8, 11, 4), float64], Tensor[(990), float64], Tensor[(8, 11, 4), float64], Tensor[(15, 6, 11), uint32], Tensor[(825), uint32]) {
    %1261 = @func_4328() /* ty=(Tensor[(12, 8, 11), float64],) */;
    %1262 = cast(meta[relay.Constant][34] /* ty=Tensor[(208), float64] */, dtype="float64") /* ty=Tensor[(208), float64] */;
    %1263 = reshape(%1262, newshape=[52, 4]) /* ty=Tensor[(52, 4), float64] */;
    %1264 = @func_7508(%1263) /* ty=(Tensor[(990), uint32], Tensor[(8, 11, 4), float64], Tensor[(8, 2, 13), bool], Tensor[(52, 4), float64]) */;
    %1265 = @func_3373() /* ty=(Tensor[(12, 8, 11), float32], Tensor[(12, 8, 11), float64]) */;
    %1266 = @func_5379() /* ty=(Tensor[(12, 8, 11), float64],) */;
    %1267 = @func_4084() /* ty=(Tensor[(12, 8, 11), float32],) */;
    %1268 = @func_7710() /* ty=(Tensor[(8, 11, 4), float64],) */;
    %1269 = @func_8539() /* ty=(Tensor[(990), float64],) */;
    %1270 = @func_5577() /* ty=(Tensor[(8, 11, 4), float64],) */;
    %1271 = cast(%var_8994, dtype="uint32") /* ty=Tensor[(825), uint32] */;
    %1272 = reshape(%1271, newshape=[825]) /* ty=Tensor[(825), uint32] */;
    %1273 = @func_4619(%1272) /* ty=(Tensor[(12, 8, 11), float64], Tensor[(12, 8, 11), float64], Tensor[(15, 6, 11), uint32], Tensor[(5, 198), uint32], Tensor[(825), bool], Tensor[(12, 8, 11), float64], Tensor[(8, 11, 4), float32], Tensor[(12, 8, 11), float64], Tensor[(8, 11, 4), float32], Tensor[(12, 8, 11), int64]) */;
    %1274 = %1261.0;
    %1275 = %1264.1;
    %1276 = %1265.1;
    %1277 = %1266.0;
    %1278 = %1267.0;
    %1279 = %1268.0;
    %1280 = %1269.0;
    %1281 = %1270.0;
    %1282 = %1273.2;
    (%1274, %1275, meta[relay.Constant][34] /* ty=Tensor[(208), float64] */, %1276, %1277, %1278, %1279, %1280, %1281, %1282, %var_8994)
  };
  %1283(%var_9007) /* ty=(Tensor[(12, 8, 11), float64], Tensor[(8, 11, 4), float64], Tensor[(208), float64], Tensor[(12, 8, 11), float64], Tensor[(12, 8, 11), float64], Tensor[(12, 8, 11), float32], Tensor[(8, 11, 4), float64], Tensor[(990), float64], Tensor[(8, 11, 4), float64], Tensor[(15, 6, 11), uint32], Tensor[(825), uint32]) */
}

def @func_14705() -> (Tensor[(8, 11, 4), float64], Tensor[(16, 16, 13), float32], Tensor[(12, 8, 11), float64]) {
  @func_14703() /* ty=(Tensor[(8, 11, 4), float64], Tensor[(16, 16, 13), float32], Tensor[(12, 8, 11), float64]) */
}

def @func_11163() -> (Tensor[(12, 8, 11), float64], Tensor[(12, 8, 11), float32], Tensor[(352), float32], Tensor[(8, 11, 4), float64]) {
  %1284 = @func_6615() /* ty=(Tensor[(352), float32], Tensor[(12, 8, 11), float32]) */;
  %1285 = @func_5508() /* ty=(Tensor[(15, 6, 11), uint32], Tensor[(352), float32], Tensor[(12, 8, 11), float64]) */;
  %1286 = @func_7710() /* ty=(Tensor[(8, 11, 4), float64],) */;
  %1287 = @func_9038() /* ty=Tensor[(12, 8, 11), float64] */;
  %1288 = %1284.1;
  %1289 = %1285.1;
  %1290 = %1286.0;
  (%1287, %1288, %1289, %1290)
}

def @func_14386() -> (Tensor[(8, 11, 4), float32],) {
  %1292 = fn () -> (Tensor[(8, 11, 4), float32],) {
    %1291 = @func_6803() /* ty=Tensor[(8, 11, 4), float32] */;
    (%1291,)
  };
  %1292() /* ty=(Tensor[(8, 11, 4), float32],) */
}

def @func_1972() -> (Tensor[(12, 8, 11), float64], Tensor[(12, 8, 11), float32]) {
  %1298 = fn () -> (Tensor[(12, 8, 11), float64], Tensor[(12, 8, 11), float32]) {
    %1293 = @func_1358() /* ty=(Tensor[(12, 8, 11), float64],) */;
    %1294 = %1293.0;
    %1295 = cast(%1294, dtype="float32") /* ty=Tensor[(12, 8, 11), float32] */;
    %1296 = @func_1117() /* ty=Tensor[(12, 8, 11), float64] */;
    %1297 = log2(%1295) /* ty=Tensor[(12, 8, 11), float32] */;
    (%1296, %1297)
  };
  %1298() /* ty=(Tensor[(12, 8, 11), float64], Tensor[(12, 8, 11), float32]) */
}

def @func_4934() -> (Tensor[(12, 8, 11), float64], Tensor[(12, 8, 11), float32], Tensor[(12, 8, 11), int64]) {
  @func_4932() /* ty=(Tensor[(12, 8, 11), float64], Tensor[(12, 8, 11), float32], Tensor[(12, 8, 11), int64]) */
}

def @func_1236() -> (Tensor[(12, 8, 11), float64], Tensor[(12, 8, 11), float32], Tensor[(12, 8, 11), float32]) {
  %1305 = fn () -> (Tensor[(12, 8, 11), float64], Tensor[(12, 8, 11), float32], Tensor[(12, 8, 11), float32]) {
    %1299 = @func_1117() /* ty=Tensor[(12, 8, 11), float64] */;
    %1300 = cast(%1299, dtype="float32") /* ty=Tensor[(12, 8, 11), float32] */;
    %1301 = cast(%1299, dtype="float32") /* ty=Tensor[(12, 8, 11), float32] */;
    %1302 = @func_1117() /* ty=Tensor[(12, 8, 11), float64] */;
    %1303 = acosh(%1300) /* ty=Tensor[(12, 8, 11), float32] */;
    %1304 = sigmoid(%1301) /* ty=Tensor[(12, 8, 11), float32] */;
    (%1302, %1303, %1304)
  };
  %1305() /* ty=(Tensor[(12, 8, 11), float64], Tensor[(12, 8, 11), float32], Tensor[(12, 8, 11), float32]) */
}

def @func_1852(%var_1849: Tensor[(2, 16, 15), uint32], %var_1850: Tensor[(2, 16, 15), uint32], %var_1851: Tensor[(2, 16, 15), uint32]) -> (Tensor[(12, 8, 11), float32], Tensor[(2, 16, 15), uint16], Tensor[(352), float32], Tensor[(2, 16, 15), float32]) {
  %1327 = fn (%var_1796: Tensor[(2, 16, 15), uint32], %var_1797: Tensor[(2, 16, 15), uint32], %var_1808: Tensor[(2, 16, 15), uint32]) -> (Tensor[(12, 8, 11), float32], Tensor[(2, 16, 15), uint16], Tensor[(352), float32], Tensor[(2, 16, 15), float32]) {
    %1306 = @func_1741() /* ty=(Tensor[(12, 8, 11), float32],) */;
    %1307 = cast(%var_1797, dtype="uint32") /* ty=Tensor[(2, 16, 15), uint32] */;
    %1308 = shape_of(%var_1796, dtype="int32") /* ty=Tensor[(3), int32] */;
    %1309 = cast(%var_1796, dtype="uint32") /* ty=Tensor[(2, 16, 15), uint32] */;
    %1310 = dyn.reshape(%1307, %1308, newshape=[]) /* ty=Tensor[(?, ?, ?), uint32] */;
    %1311 = left_shift(%1309, %1310) /* ty=Tensor[(2, 16, 15), uint32] */;
    %1312 = cast(%var_1797, dtype="uint16") /* ty=Tensor[(2, 16, 15), uint16] */;
    %1313 = shape_of(%1311, dtype="int32") /* ty=Tensor[(3), int32] */;
    %1314 = cast(%1311, dtype="uint16") /* ty=Tensor[(2, 16, 15), uint16] */;
    %1315 = dyn.reshape(%1312, %1313, newshape=[]) /* ty=Tensor[(?, ?, ?), uint16] */;
    %1316 = @func_1559() /* ty=(Tensor[(12, 8, 11), uint16], Tensor[(8, 11, 4), float64], Tensor[(352), float32], Tensor[(8, 11, 4), bool]) */;
    %1317 = cast(%var_1808, dtype="int8") /* ty=Tensor[(2, 16, 15), int8] */;
    %1318 = shape_of(%var_1797, dtype="int32") /* ty=Tensor[(3), int32] */;
    %1319 = cast(%var_1797, dtype="int8") /* ty=Tensor[(2, 16, 15), int8] */;
    %1320 = dyn.reshape(%1317, %1318, newshape=[]) /* ty=Tensor[(?, ?, ?), int8] */;
    %1321 = maximum(%1319, %1320) /* ty=Tensor[(2, 16, 15), int8] */;
    %1322 = cast(%1321, dtype="float32") /* ty=Tensor[(2, 16, 15), float32] */;
    %1323 = %1306.0;
    %1324 = logical_xor(%1314, %1315) /* ty=Tensor[(2, 16, 15), uint16] */;
    %1325 = %1316.2;
    %1326 = asinh(%1322) /* ty=Tensor[(2, 16, 15), float32] */;
    (%1323, %1324, %1325, %1326)
  };
  %1327(%var_1849, %var_1850, %var_1851) /* ty=(Tensor[(12, 8, 11), float32], Tensor[(2, 16, 15), uint16], Tensor[(352), float32], Tensor[(2, 16, 15), float32]) */
}

def @func_6071() -> Tensor[(12, 8, 11), float64] {
  @func_6069() /* ty=Tensor[(12, 8, 11), float64] */
}

def @func_12207() -> (Tensor[(12, 8, 11), float32], Tensor[(352), float32], Tensor[(352), float32], Tensor[(12, 8, 11), float32], Tensor[(15, 6, 11), uint32], Tensor[(12, 8, 11), float64]) {
  @func_12205() /* ty=(Tensor[(12, 8, 11), float32], Tensor[(352), float32], Tensor[(352), float32], Tensor[(12, 8, 11), float32], Tensor[(15, 6, 11), uint32], Tensor[(12, 8, 11), float64]) */
}

def @func_4847() -> Tensor[(12, 8, 11), float64] {
  %1329 = fn () -> Tensor[(12, 8, 11), float64] {
    %1328 = @func_2153() /* ty=(Tensor[(12, 8, 11), float32], Tensor[(12, 8, 11), float64], Tensor[(352), float32], Tensor[(8, 11, 4), float64]) */;
    %1328.1
  };
  %1329() /* ty=Tensor[(12, 8, 11), float64] */
}

def @func_12865() -> Tensor[(12, 8, 11), float64] {
  @func_12863() /* ty=Tensor[(12, 8, 11), float64] */
}

def @func_11013() -> (Tensor[(12, 8, 11), float64], Tensor[(12, 8, 11), float64], Tensor[(8, 11, 4), float64]) {
  @func_11011() /* ty=(Tensor[(12, 8, 11), float64], Tensor[(12, 8, 11), float64], Tensor[(8, 11, 4), float64]) */
}

def @func_5223() -> (Tensor[(15, 6, 11), uint32],) {
  @func_5221() /* ty=(Tensor[(15, 6, 11), uint32],) */
}

def @func_13066() -> (Tensor[(16, 13, 15), bool], Tensor[(12, 8, 11), int8], Tensor[(1056), float64]) {
  %1338 = fn () -> (Tensor[(16, 13, 15), bool], Tensor[(12, 8, 11), int8], Tensor[(1056), float64]) {
    %1330 = cast(meta[relay.Constant][36] /* ty=Tensor[(16, 13, 15), int8] */, dtype="bool") /* ty=Tensor[(16, 13, 15), bool] */;
    %1331 = shape_of(meta[relay.Constant][35] /* ty=Tensor[(16, 13, 15), int8] */, dtype="int32") /* ty=Tensor[(3), int32] */;
    %1332 = cast(meta[relay.Constant][35] /* ty=Tensor[(16, 13, 15), int8] */, dtype="bool") /* ty=Tensor[(16, 13, 15), bool] */;
    %1333 = dyn.reshape(%1330, %1331, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    %1334 = cast(meta[relay.Constant][37] /* ty=Tensor[(1056), float64] */, dtype="float64") /* ty=Tensor[(1056), float64] */;
    %1335 = reshape(%1334, newshape=[12, 8, 11]) /* ty=Tensor[(12, 8, 11), float64] */;
    %1336 = less_equal(%1332, %1333) /* ty=Tensor[(16, 13, 15), bool] */;
    %1337 = @func_7687(%1335) /* ty=Tensor[(12, 8, 11), int8] */;
    (%1336, %1337, meta[relay.Constant][37] /* ty=Tensor[(1056), float64] */)
  };
  %1338() /* ty=(Tensor[(16, 13, 15), bool], Tensor[(12, 8, 11), int8], Tensor[(1056), float64]) */
}

def @func_5221() -> (Tensor[(15, 6, 11), uint32],) {
  %1339 = @func_2121() /* ty=(Tensor[(12, 7, 6), float32], Tensor[(15, 6, 11), uint32], Tensor[(990), uint32]) */;
  %1340 = %1339.1;
  (%1340,)
}

def @func_10149() -> Tensor[(352), float32] {
  %1342 = fn () -> Tensor[(352), float32] {
    %1341 = @func_2306() /* ty=(Tensor[(352), float32], Tensor[(352), float32]) */;
    %1341.0
  };
  %1342() /* ty=Tensor[(352), float32] */
}

def @func_2880(%var_2841: Tensor[(15, 2, 16), float32], %var_2856: Tensor[(990), uint32]) -> (Tensor[(15, 2, 16), float32], Tensor[(8, 11, 4), float64], Tensor[(352), float32], Tensor[(352), int8], Tensor[(990), uint32], Tensor[(12, 8, 11), float32], Tensor[(12, 8, 11), float32]) {
  %1343 = cast(%var_2841, dtype="float32") /* ty=Tensor[(15, 2, 16), float32] */;
  %1344 = cast(meta[relay.Constant][38] /* ty=Tensor[(352), float32] */, dtype="float32") /* ty=Tensor[(352), float32] */;
  %1345 = reshape(%1344, newshape=[352]) /* ty=Tensor[(352), float32] */;
  %1346 = @func_1300(%1345) /* ty=(Tensor[(8, 11, 4), bool], Tensor[(352), float32], Tensor[(12, 8, 11), float64], Tensor[(8, 11, 4), float64]) */;
  %1347 = cast(meta[relay.Constant][38] /* ty=Tensor[(352), float32] */, dtype="float32") /* ty=Tensor[(352), float32] */;
  %1348 = cast(%var_2856, dtype="uint32") /* ty=Tensor[(990), uint32] */;
  %1349 = reshape(%1347, newshape=[352]) /* ty=Tensor[(352), float32] */;
  %1350 = reshape(%1348, newshape=[990]) /* ty=Tensor[(990), uint32] */;
  %1351 = @func_1580(%1349, %1350) /* ty=(Tensor[(352), int8], Tensor[(12, 8, 11), float64], Tensor[(990), uint32]) */;
  %1352 = @func_1971() /* ty=(Tensor[(12, 8, 11), float64], Tensor[(12, 8, 11), float32]) */;
  %1353 = @func_1235() /* ty=(Tensor[(12, 8, 11), float64], Tensor[(12, 8, 11), float32], Tensor[(12, 8, 11), float32]) */;
  %1354 = tan(%1343) /* ty=Tensor[(15, 2, 16), float32] */;
  %1355 = %1346.3;
  %1356 = %1351.0;
  %1357 = %1352.1;
  %1358 = %1353.1;
  (%1354, %1355, meta[relay.Constant][38] /* ty=Tensor[(352), float32] */, %1356, %var_2856, %1357, %1358)
}

def @func_7161() -> (Tensor[(12, 8, 11), float64], Tensor[(8, 11, 4), float64], Tensor[(5, 198), uint32], Tensor[(12, 8, 11), float64]) {
  %1372 = fn () -> (Tensor[(12, 8, 11), float64], Tensor[(8, 11, 4), float64], Tensor[(5, 198), uint32], Tensor[(12, 8, 11), float64]) {
    %1359 = @func_3508() /* ty=(Tensor[(8, 11, 4), float64],) */;
    %1360 = %1359.0;
    %1361 = cast(%1360, dtype="float32") /* ty=Tensor[(8, 11, 4), float32] */;
    %1362 = cast(%1360, dtype="float32") /* ty=Tensor[(8, 11, 4), float32] */;
    %1363 = reshape(%1361, newshape=[352]) /* ty=Tensor[(352), float32] */;
    %1364 = reshape(%1362, newshape=[352]) /* ty=Tensor[(352), float32] */;
    %1365 = @func_6224(%1363, %1364) /* ty=(Tensor[(12, 8, 11), float32], Tensor[(990), uint32], Tensor[(5, 198), uint32], Tensor[(12, 8, 11), float64], Tensor[(12, 8, 11), float64], Tensor[(12, 8, 11), float32], Tensor[(352), float64], Tensor[(12, 8, 11), float64], Tensor[(12, 8, 11), float64], Tensor[(990), uint32], Tensor[(352), int8]) */;
    %1366 = %1365.2;
    %1367 = cast(%1366, dtype="uint32") /* ty=Tensor[(5, 198), uint32] */;
    %1368 = reshape(%1367, newshape=[330, 3]) /* ty=Tensor[(330, 3), uint32] */;
    %1369 = @func_5361(%1368) /* ty=(Tensor[(16, 16, 13), float64], Tensor[(12, 8, 11), float64], Tensor[(330, 3), uint32]) */;
    %1370 = @func_2380() /* ty=Tensor[(12, 8, 11), float64] */;
    %1371 = %1369.1;
    (%1370, %1360, %1366, %1371)
  };
  %1372() /* ty=(Tensor[(12, 8, 11), float64], Tensor[(8, 11, 4), float64], Tensor[(5, 198), uint32], Tensor[(12, 8, 11), float64]) */
}

def @func_2737() -> (Tensor[(990), uint32], Tensor[(12, 8, 11), float64], Tensor[(12, 8, 11), float64], Tensor[(12, 8, 11), float64], Tensor[(12, 8, 11), int64]) {
  %1373 = @func_2121() /* ty=(Tensor[(12, 7, 6), float32], Tensor[(15, 6, 11), uint32], Tensor[(990), uint32]) */;
  %1374 = @func_2045() /* ty=(Tensor[(12, 8, 11), float64], Tensor[(12, 8, 11), float64]) */;
  %1375 = @func_2574() /* ty=(Tensor[(352), float32], Tensor[(12, 8, 11), float64], Tensor[(990), uint32], Tensor[(12, 8, 11), float64], Tensor[(12, 8, 11), int64]) */;
  %1376 = %1373.2;
  %1377 = @func_2380() /* ty=Tensor[(12, 8, 11), float64] */;
  %1378 = @func_2380() /* ty=Tensor[(12, 8, 11), float64] */;
  %1379 = %1374.1;
  %1380 = %1375.4;
  (%1376, %1377, %1378, %1379, %1380)
}

def @func_9679() -> (Tensor[(8, 11, 4), float64], Tensor[(12, 8, 11), float64], Tensor[(8, 11, 4), float32], Tensor[(12, 8, 11), float64]) {
  %1381 = @func_9321() /* ty=(Tensor[(8, 11, 4), float64], Tensor[(12, 8, 11), float64]) */;
  %1382 = @func_1358() /* ty=(Tensor[(12, 8, 11), float64],) */;
  %1383 = %1381.0;
  %1384 = cast(%1383, dtype="bool") /* ty=Tensor[(8, 11, 4), bool] */;
  %1385 = reshape(%1384, newshape=[8, 11, 4]) /* ty=Tensor[(8, 11, 4), bool] */;
  %1386 = @func_2492(%1385) /* ty=(Tensor[(12, 8, 11), float64], Tensor[(12, 8, 11), float32], Tensor[(8, 11, 4), float32]) */;
  %1387 = @func_2973() /* ty=(Tensor[(12, 8, 11), float64],) */;
  %1388 = %1382.0;
  %1389 = %1386.2;
  %1390 = %1387.0;
  (%1383, %1388, %1389, %1390)
}

def @func_13226() -> (Tensor[(12, 8, 11), float32], Tensor[(990), uint32], Tensor[(12, 8, 11), float32]) {
  %1391 = @func_2107() /* ty=(Tensor[(8, 11, 4), float64], Tensor[(12, 8, 11), float32]) */;
  %1392 = @func_6528() /* ty=(Tensor[(12, 8, 11), float32], Tensor[(12, 8, 11), float32]) */;
  %1393 = %1391.1;
  %1394 = @func_10816() /* ty=Tensor[(990), uint32] */;
  %1395 = %1392.0;
  (%1393, %1394, %1395)
}

def @func_4190() -> (Tensor[(8, 11, 4), float32], Tensor[(12, 8, 11), float64], Tensor[(12, 8, 11), int64]) {
  %1396 = @func_3508() /* ty=(Tensor[(8, 11, 4), float64],) */;
  %1397 = %1396.0;
  %1398 = cast(%1397, dtype="float32") /* ty=Tensor[(8, 11, 4), float32] */;
  %1399 = @func_2045() /* ty=(Tensor[(12, 8, 11), float64], Tensor[(12, 8, 11), float64]) */;
  %1400 = @func_2737() /* ty=(Tensor[(990), uint32], Tensor[(12, 8, 11), float64], Tensor[(12, 8, 11), float64], Tensor[(12, 8, 11), float64], Tensor[(12, 8, 11), int64]) */;
  %1401 = rsqrt(%1398) /* ty=Tensor[(8, 11, 4), float32] */;
  %1402 = %1399.1;
  %1403 = %1400.4;
  (%1401, %1402, %1403)
}

def @func_2756() -> Tensor[(12, 8, 11), float64] {
  %1404 = @func_1358() /* ty=(Tensor[(12, 8, 11), float64],) */;
  %1404.0
}

/* For debugging purposes the metadata section has been omitted.
 * If you would like to see the full metadata section you can set the 
 * option to `True` when invoking `astext`. 
 *//home/yujunzhe/Hirgen_generated/tvm0.8_test/HirGen592/build/output.py:4969: DeprecationWarning: legacy graph executor behavior of producing json / lib / params will be removed in the next release. Please see documents of tvm.contrib.graph_executor.GraphModule for the  new recommended usage.
  graph, lib, params = relay.build(mod, target='llvm')
/home/yujunzhe/tvm/python/tvm/contrib/graph_runtime.py:25: UserWarning: This function has been moved to tvm.contrib.graph_executor and will be removed in the next TVM release
  warnings.warn(

===================================
Traceback (most recent call last):
  File "/home/yujunzhe/Hirgen_generated/tvm0.8_test/HirGen592/build/output.py", line 4974, in <module>
    graph, lib, params = relay.build(mod, target='cuda')
  File "/home/yujunzhe/tvm/python/tvm/relay/build_module.py", line 369, in build
    executor_config, runtime_mod, params = bld_mod.build(
  File "/home/yujunzhe/tvm/python/tvm/relay/build_module.py", line 177, in build
    self._build(mod, target, target_host, executor, mod_name)
  File "/home/yujunzhe/tvm/python/tvm/_ffi/_ctypes/packed_func.py", line 237, in __call__
    raise get_last_ffi_error()
tvm._ffi.base.TVMError: Traceback (most recent call last):
  7: TVMFuncCall
  6: std::_Function_handler<void (tvm::runtime::TVMArgs, tvm::runtime::TVMRetValue*), tvm::relay::backend::RelayBuildModule::GetFunction(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, tvm::runtime::ObjectPtr<tvm::runtime::Object> const&)::{lambda(tvm::runtime::TVMArgs, tvm::runtime::TVMRetValue*)#3}>::_M_invoke(std::_Any_data const&, tvm::runtime::TVMArgs&&, tvm::runtime::TVMRetValue*&&)
  5: tvm::relay::backend::RelayBuildModule::BuildRelay(tvm::IRModule, std::unordered_map<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, tvm::runtime::NDArray, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, tvm::runtime::NDArray> > > const&, tvm::runtime::String)
  4: tvm::build(tvm::runtime::Map<tvm::Target, tvm::IRModule, void, void> const&, tvm::Target const&)
  3: tvm::codegen::Build(tvm::IRModule, tvm::Target)
  2: tvm::runtime::TypedPackedFunc<tvm::runtime::Module (tvm::IRModule, tvm::Target)>::AssignTypedLambda<tvm::runtime::Module (*)(tvm::IRModule, tvm::Target)>(tvm::runtime::Module (*)(tvm::IRModule, tvm::Target), std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >)::{lambda(tvm::runtime::TVMArgs const&, tvm::runtime::TVMRetValue*)#1}::operator()(tvm::runtime::TVMArgs const&, tvm::runtime::TVMRetValue*) const
  1: tvm::codegen::BuildCUDA(tvm::IRModule, tvm::Target)
  0: std::_Function_handler<void (tvm::runtime::TVMArgs, tvm::runtime::TVMRetValue*), TVMFuncCreateFromCFunc::{lambda(tvm::runtime::TVMArgs, tvm::runtime::TVMRetValue*)#2}>::_M_invoke(std::_Any_data const&, tvm::runtime::TVMArgs&&, tvm::runtime::TVMRetValue*&&) [clone .cold]
  File "/home/yujunzhe/tvm/python/tvm/_ffi/_ctypes/packed_func.py", line 81, in cfun
    rv = local_pyfunc(*pyargs)
  File "/home/yujunzhe/tvm/python/tvm/autotvm/measure/measure_methods.py", line 789, in tvm_callback_cuda_compile
    ptx = nvcc.compile_cuda(code, target=target, arch=AutotvmGlobalScope.current.cuda_target_arch)
  File "/home/yujunzhe/tvm/python/tvm/contrib/nvcc.py", line 108, in compile_cuda
    raise RuntimeError(msg)
RuntimeError: 
#ifdef _WIN32
  using uint = unsigned int;
  using uchar = unsigned char;
  using ushort = unsigned short;
  using int64_t = long long;
  using uint64_t = unsigned long long;
#else
  #define uint unsigned int
  #define uchar unsigned char
  #define ushort unsigned short
  #define int64_t long long
  #define uint64_t unsigned long long
#endif
extern "C" __global__ void __launch_bounds__(432) tvmgen_default_fused_reshape_logical_or_kernel0(signed char* __restrict__ T_logical_or, signed char* __restrict__ placeholder, signed char* __restrict__ placeholder1) {
  T_logical_or[(((int)threadIdx.x))] = ((signed char)(((bool)placeholder[(((int)threadIdx.x))]) || ((bool)placeholder1[(((int)threadIdx.x))])));
}


Compilation error:
In file included from /usr/local/cuda/bin/../targets/x86_64-linux/include/cuda_runtime.h:82,
                 from <command-line>:
/usr/local/cuda/bin/../targets/x86_64-linux/include/crt/host_config.h:143:2: error: #error -- unsupported GNU version! gcc versions later than 12 are not supported! The nvcc flag '-allow-unsupported-compiler' can be used to override this version check; however, using an unsupported host compiler may cause compilation failure or incorrect run time execution. Use at your own risk.
  143 | #error -- unsupported GNU version! gcc versions later than 12 are not supported! The nvcc flag '-allow-unsupported-compiler' can be used to override this version check; however, using an unsupported host compiler may cause compilation failure or incorrect run time execution. Use at your own risk.
      |  ^~~~~


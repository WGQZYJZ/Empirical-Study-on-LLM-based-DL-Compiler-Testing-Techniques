==========mod==========
#[version = "0.0.5"]
def @func_3053(%var_3039: Tensor[(16, 14, 6), float64]) -> (Tensor[(16, 14, 6), float64], Tensor[(7, 8, 14), float32]) {
  %0 = @func_2535() /* ty=(Tensor[(1, 14, 6), float64],) */;
  %1 = %0.0;
  %2 = cast(%1, dtype="float32") /* ty=Tensor[(1, 14, 6), float32] */;
  %3 = cast(%var_3039, dtype="float32") /* ty=Tensor[(16, 14, 6), float32] */;
  %4 = power(%2, %3) /* ty=Tensor[(16, 14, 6), float32] */;
  %5 = cast(%4, dtype="float64") /* ty=Tensor[(16, 14, 6), float64] */;
  %6 = atanh(%5) /* ty=Tensor[(16, 14, 6), float64] */;
  %7 = @func_2010() /* ty=Tensor[(7, 8, 14), float32] */;
  (%6, %7)
}

def @func_8767() -> (Tensor[(7, 8, 14), float64],) {
  %8 = @func_5832() /* ty=Tensor[(7, 8, 14), float64] */;
  (%8,)
}

def @func_4389() -> Tensor[(7, 8, 14), float64] {
  %9 = @func_2804() /* ty=(Tensor[(7, 8, 14), float64], Tensor[(7, 8, 14), float32]) */;
  %9.0
}

def @func_3176(%var_3173: Tensor[(7, 9, 4), float64]) -> (Tensor[(7, 9, 4), float64],) {
  %10 = cast(%var_3173, dtype="float64") /* ty=Tensor[(7, 9, 4), float64] */;
  %11 = cosh(%10) /* ty=Tensor[(7, 9, 4), float64] */;
  (%11,)
}

def @func_3200(%var_3194: Tensor[(13, 3, 14), float64]) -> (Tensor[(13, 3, 14), float64],) {
  %12 = cast(%var_3194, dtype="float64") /* ty=Tensor[(13, 3, 14), float64] */;
  %13 = erf(%12) /* ty=Tensor[(13, 3, 14), float64] */;
  (%13,)
}

def @func_12028() -> (Tensor[(7, 8, 14), float32], Tensor[(7, 8, 14), float32]) {
  %14 = @func_7466() /* ty=Tensor[(7, 8, 14), float32] */;
  %15 = @func_2072() /* ty=Tensor[(7, 8, 14), float32] */;
  (%14, %15)
}

def @func_77(%var_53: Tensor[(16, 1, 6), float32]) -> (Tensor[(16, 1, 6), float32],) {
  %16 = cast(%var_53, dtype="float32") /* ty=Tensor[(16, 1, 6), float32] */;
  %17 = cosh(%16) /* ty=Tensor[(16, 1, 6), float32] */;
  (%17,)
}

def @func_7395() -> (Tensor[(7, 8, 14), float32], Tensor[(7, 8, 14), float32]) {
  %18 = @func_4760() /* ty=(Tensor[(7, 8, 14), float32], Tensor[(7, 8, 14), float32], Tensor[(7, 8, 14), uint32]) */;
  %19 = %18.0;
  %20 = @func_6046() /* ty=Tensor[(7, 8, 14), float32] */;
  (%19, %20)
}

def @func_12588(%var_12585: Tensor[(4, 3, 6), float64]) -> (Tensor[(4, 3, 6), float64],) {
  %21 = cast(%var_12585, dtype="float64") /* ty=Tensor[(4, 3, 6), float64] */;
  %22 = asin(%21) /* ty=Tensor[(4, 3, 6), float64] */;
  (%22,)
}

def @func_7466() -> Tensor[(7, 8, 14), float32] {
  %23 = @func_3871() /* ty=(Tensor[(7, 8, 14), float64], Tensor[(7, 8, 14), float32]) */;
  %23.1
}

def @func_10025(%var_10020: uint16) -> (Tensor[(7, 8, 14), float64], Tensor[(7, 8, 14), float32], uint16, Tensor[(7, 8, 14), float64]) {
  %24 = @func_2487() /* ty=(Tensor[(7, 8, 14), float64],) */;
  %25 = cast(%var_10020, dtype="uint16") /* ty=uint16 */;
  %26 = reshape(%25, newshape=[]) /* ty=uint16 */;
  %27 = @func_7361(%26) /* ty=(Tensor[(13, 8, 12), uint16], Tensor[(7, 8, 14), float32]) */;
  %28 = @func_5461() /* ty=(Tensor[(7, 8, 14), float64], Tensor[(7, 8, 14), float32]) */;
  %29 = %24.0;
  %30 = %27.1;
  %31 = %28.0;
  (%29, %30, %var_10020, %31)
}

def @func_6903() -> (Tensor[(7, 8, 14), float32],) {
  %32 = @func_5870() /* ty=(Tensor[(7, 8, 14), float32],) */;
  %33 = %32.0;
  (%33,)
}

def @func_11975() -> (Tensor[(7, 8, 14), float32],) {
  %34 = @func_10959() /* ty=(Tensor[(7, 8, 14), float32], Tensor[(9, 4, 16), float64], Tensor[(576), float64], Tensor[(7, 8, 14), float32], Tensor[(7, 8, 14), float32]) */;
  %35 = %34.0;
  (%35,)
}

def @func_10544() -> Tensor[(7, 8, 14), float64] {
  %36 = @func_7740() /* ty=(Tensor[(7, 8, 14), float64],) */;
  %36.0
}

def @func_2092() -> Tensor[(7, 8, 14), float32] {
  @func_1279() /* ty=Tensor[(7, 8, 14), float32] */
}

def @func_9677() -> (Tensor[(7, 8, 14), float32],) {
  %37 = @func_4611() /* ty=(Tensor[(7, 8, 14), float32], Tensor[(48), float64], Tensor[(48), float64]) */;
  %38 = %37.0;
  (%38,)
}

def @func_7285(%var_7278: Tensor[(16, 1, 16), int32]) -> Tensor[(16, 16, 16), float32] {
  %39 = cast(%var_7278, dtype="int32") /* ty=Tensor[(16, 1, 16), int32] */;
  %40 = cast(meta[relay.Constant][0] /* ty=Tensor[(16, 16, 16), int32] */, dtype="int32") /* ty=Tensor[(16, 16, 16), int32] */;
  %41 = left_shift(%39, %40) /* ty=Tensor[(16, 16, 16), int32] */;
  %42 = cast(%41, dtype="float32") /* ty=Tensor[(16, 16, 16), float32] */;
  acos(%42) /* ty=Tensor[(16, 16, 16), float32] */
}

def @func_4360() -> (Tensor[(7, 8, 14), float32],) {
  %43 = @func_2092() /* ty=Tensor[(7, 8, 14), float32] */;
  (%43,)
}

def @func_6261() -> (Tensor[(7, 8, 14), float64], Tensor[(7, 8, 14), float64], Tensor[(7, 8, 14), float64], Tensor[(7, 8, 14), float32], Tensor[(5, ?, 15), uint64], Tensor[(75, 1), uint64], Tensor[(7, 8, 14), float32]) {
  %44 = @func_2487() /* ty=(Tensor[(7, 8, 14), float64],) */;
  %45 = @func_3413() /* ty=(Tensor[(7, 8, 14), float32], Tensor[(7, 8, 14), float64]) */;
  %46 = @func_3871() /* ty=(Tensor[(7, 8, 14), float64], Tensor[(7, 8, 14), float32]) */;
  %47 = cast(meta[relay.Constant][1] /* ty=Tensor[(75, 1), uint64] */, dtype="uint64") /* ty=Tensor[(75, 1), uint64] */;
  %48 = cast(meta[relay.Constant][1] /* ty=Tensor[(75, 1), uint64] */, dtype="uint64") /* ty=Tensor[(75, 1), uint64] */;
  %49 = %46.1;
  %50 = cast(%49, dtype="float64") /* ty=Tensor[(7, 8, 14), float64] */;
  %51 = reshape(%47, newshape=[5, 1, 15]) /* ty=Tensor[(5, 1, 15), uint64] */;
  %52 = reshape(%48, newshape=[5, 1, 15]) /* ty=Tensor[(5, 1, 15), uint64] */;
  %53 = reshape(%50, newshape=[56, 14]) /* ty=Tensor[(56, 14), float64] */;
  %54 = @func_5895(%51, %52, %53) /* ty=(Tensor[(5, ?, 15), uint64], Tensor[(5, 1, 15), float64], Tensor[(7, 8, 14), int8], Tensor[(56, 14), float64], Tensor[(7, 8, 14), float32]) */;
  %55 = @func_3871() /* ty=(Tensor[(7, 8, 14), float64], Tensor[(7, 8, 14), float32]) */;
  %56 = %44.0;
  %57 = @func_1291() /* ty=Tensor[(7, 8, 14), float64] */;
  %58 = %45.1;
  %59 = %54.0;
  %60 = %55.1;
  (%56, %57, %58, %49, %59, meta[relay.Constant][1] /* ty=Tensor[(75, 1), uint64] */, %60)
}

def @func_11336() -> (Tensor[(7, 8, 14), float32], Tensor[(7, 8, 14), float32], Tensor[(7, 8, 14), float32], Tensor[(7, 8, 14), float32]) {
  %61 = @func_10748() /* ty=(Tensor[(7, 8, 14), float32], Tensor[(7, 8, 14), float64]) */;
  %62 = @func_3674() /* ty=Tensor[(7, 8, 14), float32] */;
  %63 = %61.0;
  %64 = @func_2038() /* ty=Tensor[(7, 8, 14), float32] */;
  %65 = @func_2010() /* ty=Tensor[(7, 8, 14), float32] */;
  (%62, %63, %64, %65)
}

def @func_2402(%var_2399: Tensor[(48), float64]) -> (Tensor[(7, 8, 14), float32], Tensor[(3, 8, 2), float64], Tensor[(48), float64]) {
  %66 = @func_2060() /* ty=(Tensor[(7, 8, 14), float32],) */;
  %67 = cast(%var_2399, dtype="float64") /* ty=Tensor[(48), float64] */;
  %68 = cast(%var_2399, dtype="float64") /* ty=Tensor[(48), float64] */;
  %69 = reshape(%67, newshape=[3, 8, 2]) /* ty=Tensor[(3, 8, 2), float64] */;
  %70 = reshape(%68, newshape=[3, 8, 2]) /* ty=Tensor[(3, 8, 2), float64] */;
  %71 = %66.0;
  %72 = @func_2172(%69, %70) /* ty=Tensor[(3, 8, 2), float64] */;
  (%71, %72, %var_2399)
}

def @func_2705() -> (Tensor[(7, 8, 14), float64],) {
  %73 = @func_1251() /* ty=Tensor[(7, 8, 14), float64] */;
  %74 = cast(%73, dtype="float64") /* ty=Tensor[(7, 8, 14), float64] */;
  %75 = sigmoid(%74) /* ty=Tensor[(7, 8, 14), float64] */;
  (%75,)
}

def @func_6025(%var_6017: Tensor[(616), uint32]) -> (Tensor[(7, 8, 14), float32], Tensor[(7, 8, 14), float32], Tensor[(7, 8, 14), float64], Tensor[(280), uint16], Tensor[(420), uint64], Tensor[(405), int32], Tensor[(616), uint32]) {
  %76 = @func_2060() /* ty=(Tensor[(7, 8, 14), float32],) */;
  %77 = cast(meta[relay.Constant][2] /* ty=Tensor[(280), uint16] */, dtype="uint16") /* ty=Tensor[(280), uint16] */;
  %78 = cast(meta[relay.Constant][2] /* ty=Tensor[(280), uint16] */, dtype="uint16") /* ty=Tensor[(280), uint16] */;
  %79 = cast(meta[relay.Constant][3] /* ty=Tensor[(420), uint64] */, dtype="uint64") /* ty=Tensor[(420), uint64] */;
  %80 = cast(meta[relay.Constant][4] /* ty=Tensor[(405), int32] */, dtype="int32") /* ty=Tensor[(405), int32] */;
  %81 = cast(%var_6017, dtype="uint32") /* ty=Tensor[(616), uint32] */;
  %82 = cast(meta[relay.Constant][2] /* ty=Tensor[(280), uint16] */, dtype="float32") /* ty=Tensor[(280), float32] */;
  %83 = reshape(%77, newshape=[10, 4, 7]) /* ty=Tensor[(10, 4, 7), uint16] */;
  %84 = reshape(%78, newshape=[10, 4, 7]) /* ty=Tensor[(10, 4, 7), uint16] */;
  %85 = reshape(%79, newshape=[14, 2, 15]) /* ty=Tensor[(14, 2, 15), uint64] */;
  %86 = reshape(%80, newshape=[405]) /* ty=Tensor[(405), int32] */;
  %87 = reshape(%81, newshape=[1, 616]) /* ty=Tensor[(1, 616), uint32] */;
  %88 = reshape(%82, newshape=[10, 4, 7]) /* ty=Tensor[(10, 4, 7), float32] */;
  %89 = @func_1856(%83, %84, %85, %86, %87, %88) /* ty=(Tensor[(10, 4, 7), bool], Tensor[(7, 8, 14), float64], Tensor[(420), uint64], Tensor[(14, 2, 15), float64], Tensor[(7, 8, 14), float64], Tensor[(2, 48), float32], Tensor[(405), int32], Tensor[(1, 616), uint32], Tensor[(96), float32], Tensor[(10, 4, 7), int32], Tensor[(10, 4, 7), bool]) */;
  %90 = @func_2092() /* ty=Tensor[(7, 8, 14), float32] */;
  %91 = %76.0;
  %92 = %89.4;
  (%90, %91, %92, meta[relay.Constant][2] /* ty=Tensor[(280), uint16] */, meta[relay.Constant][3] /* ty=Tensor[(420), uint64] */, meta[relay.Constant][4] /* ty=Tensor[(405), int32] */, %var_6017)
}

def @func_10212() -> (Tensor[(7, 8, 14), float32], Tensor[(7, 8, 14), float64]) {
  %93 = @func_3754() /* ty=(Tensor[(7, 8, 14), float32],) */;
  %94 = @func_6976() /* ty=(Tensor[(7, 8, 14), float64], Tensor[(7, 8, 14), float32]) */;
  %95 = %93.0;
  %96 = %94.0;
  (%95, %96)
}

def @func_8570() -> Tensor[(7, 8, 14), float32] {
  @func_1279() /* ty=Tensor[(7, 8, 14), float32] */
}

def @func_2416() -> Tensor[(7, 8, 14), float32] {
  @func_2038() /* ty=Tensor[(7, 8, 14), float32] */
}

def @func_5895(%var_5875: Tensor[(5, 1, 15), uint64], %var_5876: Tensor[(5, 1, 15), uint64], %var_5887: Tensor[(56, 14), float64]) -> (Tensor[(5, ?, 15), uint64], Tensor[(5, 1, 15), float64], Tensor[(7, 8, 14), int8], Tensor[(56, 14), float64], Tensor[(7, 8, 14), float32]) {
  %97 = cast(%var_5876, dtype="uint64") /* ty=Tensor[(5, 1, 15), uint64] */;
  %98 = shape_of(%var_5875, dtype="int32") /* ty=Tensor[(3), int32] */;
  %99 = cast(%var_5875, dtype="uint64") /* ty=Tensor[(5, 1, 15), uint64] */;
  %100 = dyn.reshape(%97, %98, newshape=[]) /* ty=Tensor[(?, ?, ?), uint64] */;
  %101 = cast(%var_5875, dtype="float64") /* ty=Tensor[(5, 1, 15), float64] */;
  %102 = cast(%var_5887, dtype="float64") /* ty=Tensor[(56, 14), float64] */;
  %103 = reshape(%102, newshape=[7, 8, 14]) /* ty=Tensor[(7, 8, 14), float64] */;
  %104 = @func_3139(%103) /* ty=(Tensor[(7, 8, 14), int8], Tensor[(5, 7), float32], Tensor[(35), float32]) */;
  %105 = bitwise_xor(%99, %100) /* ty=Tensor[(5, ?, 15), uint64] */;
  %106 = cosh(%101) /* ty=Tensor[(5, 1, 15), float64] */;
  %107 = %104.0;
  %108 = @func_1357() /* ty=Tensor[(7, 8, 14), float32] */;
  (%105, %106, %107, %var_5887, %108)
}

def @func_1856(%var_1762: Tensor[(10, 4, 7), uint16], %var_1763: Tensor[(10, 4, 7), uint16], %var_1798: Tensor[(14, 2, 15), uint64], %var_1826: Tensor[(405), int32], %var_1827: Tensor[(1, 616), uint32], %var_1844: Tensor[(10, 4, 7), float32]) -> (Tensor[(10, 4, 7), bool], Tensor[(7, 8, 14), float64], Tensor[(420), uint64], Tensor[(14, 2, 15), float64], Tensor[(7, 8, 14), float64], Tensor[(2, 48), float32], Tensor[(405), int32], Tensor[(1, 616), uint32], Tensor[(96), float32], Tensor[(10, 4, 7), int32], Tensor[(10, 4, 7), bool]) {
  %109 = cast(%var_1763, dtype="bool") /* ty=Tensor[(10, 4, 7), bool] */;
  %110 = shape_of(%var_1762, dtype="int32") /* ty=Tensor[(3), int32] */;
  %111 = cast(%var_1762, dtype="bool") /* ty=Tensor[(10, 4, 7), bool] */;
  %112 = dyn.reshape(%109, %110, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %113 = cast(meta[relay.Constant][5] /* ty=Tensor[(420), uint64] */, dtype="uint64") /* ty=Tensor[(420), uint64] */;
  %114 = cast(meta[relay.Constant][5] /* ty=Tensor[(420), uint64] */, dtype="uint64") /* ty=Tensor[(420), uint64] */;
  %115 = reshape(%113, newshape=[14, 2, 15]) /* ty=Tensor[(14, 2, 15), uint64] */;
  %116 = reshape(%114, newshape=[14, 2, 15]) /* ty=Tensor[(14, 2, 15), uint64] */;
  %117 = @func_1036(%115, %116) /* ty=Tensor[(14, 2, 15), uint64] */;
  %118 = cast(%var_1798, dtype="float64") /* ty=Tensor[(14, 2, 15), float64] */;
  %119 = shape_of(%117, dtype="int32") /* ty=Tensor[(3), int32] */;
  %120 = cast(%117, dtype="float64") /* ty=Tensor[(14, 2, 15), float64] */;
  %121 = dyn.reshape(%118, %119, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %122 = cast(%var_1826, dtype="int32") /* ty=Tensor[(405), int32] */;
  %123 = cast(%var_1827, dtype="uint32") /* ty=Tensor[(1, 616), uint32] */;
  %124 = cast(meta[relay.Constant][6] /* ty=Tensor[(96), float32] */, dtype="float32") /* ty=Tensor[(96), float32] */;
  %125 = reshape(%122, newshape=[9, 15, 3]) /* ty=Tensor[(9, 15, 3), int32] */;
  %126 = reshape(%123, newshape=[616]) /* ty=Tensor[(616), uint32] */;
  %127 = reshape(%124, newshape=[2, 48]) /* ty=Tensor[(2, 48), float32] */;
  %128 = @func_1076(%125, %126, %127) /* ty=(Tensor[(9, 15, 3), int32], Tensor[(616), uint32], Tensor[(2, 48), bool], Tensor[(2, 48), float32]) */;
  %129 = cast(%var_1763, dtype="float32") /* ty=Tensor[(10, 4, 7), float32] */;
  %130 = rsqrt(%129) /* ty=Tensor[(10, 4, 7), float32] */;
  %131 = cast(%var_1844, dtype="int32") /* ty=Tensor[(10, 4, 7), int32] */;
  %132 = shape_of(%130, dtype="int32") /* ty=Tensor[(3), int32] */;
  %133 = cast(%130, dtype="int32") /* ty=Tensor[(10, 4, 7), int32] */;
  %134 = dyn.reshape(%131, %132, newshape=[]) /* ty=Tensor[(?, ?, ?), int32] */;
  %135 = cast(%var_1844, dtype="bool") /* ty=Tensor[(10, 4, 7), bool] */;
  %136 = shape_of(%130, dtype="int32") /* ty=Tensor[(3), int32] */;
  %137 = cast(%130, dtype="bool") /* ty=Tensor[(10, 4, 7), bool] */;
  %138 = dyn.reshape(%135, %136, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %139 = less(%111, %112) /* ty=Tensor[(10, 4, 7), bool] */;
  %140 = @func_1172() /* ty=Tensor[(7, 8, 14), float64] */;
  %141 = divide(%120, %121) /* ty=Tensor[(14, 2, 15), float64] */;
  %142 = @func_1291() /* ty=Tensor[(7, 8, 14), float64] */;
  %143 = %128.3;
  %144 = right_shift(%133, %134) /* ty=Tensor[(10, 4, 7), int32] */;
  %145 = equal(%137, %138) /* ty=Tensor[(10, 4, 7), bool] */;
  (%139, %140, meta[relay.Constant][5] /* ty=Tensor[(420), uint64] */, %141, %142, %143, %var_1826, %var_1827, meta[relay.Constant][6] /* ty=Tensor[(96), float32] */, %144, %145)
}

def @func_3162() -> Tensor[(7, 8, 14), float32] {
  %146 = @func_2060() /* ty=(Tensor[(7, 8, 14), float32],) */;
  %146.0
}

def @func_7829() -> (Tensor[(7, 8, 14), float64],) {
  %147 = @func_3861() /* ty=(Tensor[(7, 8, 14), float64],) */;
  %148 = %147.0;
  (%148,)
}

def @func_5687() -> (Tensor[(7, 8, 14), float32], Tensor[(7, 8, 14), float64], Tensor[(7, 8, 14), float64]) {
  %149 = @func_3754() /* ty=(Tensor[(7, 8, 14), float32],) */;
  %150 = @func_5461() /* ty=(Tensor[(7, 8, 14), float64], Tensor[(7, 8, 14), float32]) */;
  %151 = %149.0;
  %152 = %150.0;
  %153 = @func_1291() /* ty=Tensor[(7, 8, 14), float64] */;
  (%151, %152, %153)
}

def @func_4833(%var_4818: Tensor[(3, 8, 15), int64], %var_4819: Tensor[(3, 8, 15), int64]) -> (Tensor[(3, 8, 15), bool],) {
  %154 = cast(%var_4819, dtype="bool") /* ty=Tensor[(3, 8, 15), bool] */;
  %155 = shape_of(%var_4818, dtype="int32") /* ty=Tensor[(3), int32] */;
  %156 = cast(%var_4818, dtype="bool") /* ty=Tensor[(3, 8, 15), bool] */;
  %157 = dyn.reshape(%154, %155, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %158 = greater(%156, %157) /* ty=Tensor[(3, 8, 15), bool] */;
  (%158,)
}

def @func_11779() -> (Tensor[(7, 8, 14), float32], Tensor[(7, 8, 14), float64]) {
  %159 = @func_7829() /* ty=(Tensor[(7, 8, 14), float64],) */;
  %160 = @func_2010() /* ty=Tensor[(7, 8, 14), float32] */;
  %161 = %159.0;
  (%160, %161)
}

def @func_5097(%var_5092: Tensor[(280), uint16], %var_5093: Tensor[(420), uint64], %var_5094: Tensor[(9, 45), int32]) -> (Tensor[(7, 8, 14), float32], Tensor[(7, 8, 14), float64], Tensor[(7, 8, 14), float32], Tensor[(96), float32], Tensor[(280), uint16], Tensor[(420), uint64], Tensor[(9, 45), int32], Tensor[(14, 44), uint32]) {
  %162 = cast(%var_5092, dtype="uint16") /* ty=Tensor[(280), uint16] */;
  %163 = cast(%var_5092, dtype="uint16") /* ty=Tensor[(280), uint16] */;
  %164 = cast(%var_5093, dtype="uint64") /* ty=Tensor[(420), uint64] */;
  %165 = cast(%var_5094, dtype="int32") /* ty=Tensor[(9, 45), int32] */;
  %166 = cast(meta[relay.Constant][7] /* ty=Tensor[(14, 44), uint32] */, dtype="uint32") /* ty=Tensor[(14, 44), uint32] */;
  %167 = cast(%var_5092, dtype="float32") /* ty=Tensor[(280), float32] */;
  %168 = reshape(%162, newshape=[10, 4, 7]) /* ty=Tensor[(10, 4, 7), uint16] */;
  %169 = reshape(%163, newshape=[10, 4, 7]) /* ty=Tensor[(10, 4, 7), uint16] */;
  %170 = reshape(%164, newshape=[14, 2, 15]) /* ty=Tensor[(14, 2, 15), uint64] */;
  %171 = reshape(%165, newshape=[405]) /* ty=Tensor[(405), int32] */;
  %172 = reshape(%166, newshape=[1, 616]) /* ty=Tensor[(1, 616), uint32] */;
  %173 = reshape(%167, newshape=[10, 4, 7]) /* ty=Tensor[(10, 4, 7), float32] */;
  %174 = @func_1856(%168, %169, %170, %171, %172, %173) /* ty=(Tensor[(10, 4, 7), bool], Tensor[(7, 8, 14), float64], Tensor[(420), uint64], Tensor[(14, 2, 15), float64], Tensor[(7, 8, 14), float64], Tensor[(2, 48), float32], Tensor[(405), int32], Tensor[(1, 616), uint32], Tensor[(96), float32], Tensor[(10, 4, 7), int32], Tensor[(10, 4, 7), bool]) */;
  %175 = @func_3162() /* ty=Tensor[(7, 8, 14), float32] */;
  %176 = @func_4389() /* ty=Tensor[(7, 8, 14), float64] */;
  %177 = @func_3162() /* ty=Tensor[(7, 8, 14), float32] */;
  %178 = %174.8;
  (%175, %176, %177, %178, %var_5092, %var_5093, %var_5094, meta[relay.Constant][7] /* ty=Tensor[(14, 44), uint32] */)
}

def @func_11044() -> (Tensor[(7, 8, 14), float32], Tensor[(7, 8, 14), bool], Tensor[(48), float64]) {
  %179 = @func_3240() /* ty=(Tensor[(7, 8, 14), float64], Tensor[(7, 8, 14), float32]) */;
  %180 = @func_4611() /* ty=(Tensor[(7, 8, 14), float32], Tensor[(48), float64], Tensor[(48), float64]) */;
  %181 = %179.1;
  %182 = @func_9642() /* ty=Tensor[(7, 8, 14), bool] */;
  %183 = %180.2;
  (%181, %182, %183)
}

def @func_9642() -> Tensor[(7, 8, 14), bool] {
  %184 = @func_9449() /* ty=(Tensor[(7, 8, 14), bool],) */;
  %184.0
}

def @func_11565(%var_11557: Tensor[(16, 11, 6), float32]) -> (Tensor[(16, 11, 6), float64], Tensor[(7, 8, 14), float64]) {
  %185 = @func_11532() /* ty=(Tensor[(16, 1, 6), float32],) */;
  %186 = %185.0;
  %187 = cast(%186, dtype="float32") /* ty=Tensor[(16, 1, 6), float32] */;
  %188 = tan(%187) /* ty=Tensor[(16, 1, 6), float32] */;
  %189 = cast(%188, dtype="float64") /* ty=Tensor[(16, 1, 6), float64] */;
  %190 = cast(%var_11557, dtype="float64") /* ty=Tensor[(16, 11, 6), float64] */;
  %191 = floor_mod(%189, %190) /* ty=Tensor[(16, 11, 6), float64] */;
  %192 = @func_9242() /* ty=Tensor[(7, 8, 14), float64] */;
  (%191, %192)
}

def @func_1291() -> Tensor[(7, 8, 14), float64] {
  @func_1172() /* ty=Tensor[(7, 8, 14), float64] */
}

def @func_5461() -> (Tensor[(7, 8, 14), float64], Tensor[(7, 8, 14), float32]) {
  %193 = @func_3546() /* ty=(Tensor[(7, 8, 14), float32], Tensor[(7, 8, 14), float64]) */;
  %194 = @func_2060() /* ty=(Tensor[(7, 8, 14), float32],) */;
  %195 = %193.1;
  %196 = %194.0;
  (%195, %196)
}

def @func_8399() -> (Tensor[(7, 8, 14), float64], Tensor[(96), float32]) {
  %197 = @func_3546() /* ty=(Tensor[(7, 8, 14), float32], Tensor[(7, 8, 14), float64]) */;
  %198 = %197.1;
  %199 = @func_5744() /* ty=Tensor[(96), float32] */;
  (%198, %199)
}

def @func_11915() -> Tensor[(7, 8, 14), float64] {
  %200 = @func_2487() /* ty=(Tensor[(7, 8, 14), float64],) */;
  %200.0
}

def @func_2987(%var_2958: Tensor[(7, 8, 14), float32], %var_2978: Tensor[(7, 8, 14), float32]) -> (Tensor[(7, 8, 14), uint16], Tensor[(7, 8, 14), float64]) {
  %201 = @func_1554() /* ty=(Tensor[(7, 8, 14), float32],) */;
  %202 = %201.0;
  %203 = cast(%var_2958, dtype="int64") /* ty=Tensor[(7, 8, 14), int64] */;
  %204 = shape_of(%202, dtype="int32") /* ty=Tensor[(3), int32] */;
  %205 = cast(%202, dtype="int64") /* ty=Tensor[(7, 8, 14), int64] */;
  %206 = dyn.reshape(%203, %204, newshape=[]) /* ty=Tensor[(?, ?, ?), int64] */;
  %207 = bitwise_or(%205, %206) /* ty=Tensor[(7, 8, 14), int64] */;
  %208 = cast(%207, dtype="uint16") /* ty=Tensor[(7, 8, 14), uint16] */;
  %209 = shape_of(%var_2958, dtype="int32") /* ty=Tensor[(3), int32] */;
  %210 = cast(%var_2958, dtype="uint16") /* ty=Tensor[(7, 8, 14), uint16] */;
  %211 = dyn.reshape(%208, %209, newshape=[]) /* ty=Tensor[(?, ?, ?), uint16] */;
  %212 = cast(%var_2978, dtype="float64") /* ty=Tensor[(7, 8, 14), float64] */;
  %213 = shape_of(%var_2958, dtype="int32") /* ty=Tensor[(3), int32] */;
  %214 = cast(%var_2958, dtype="float64") /* ty=Tensor[(7, 8, 14), float64] */;
  %215 = dyn.reshape(%212, %213, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %216 = logical_xor(%210, %211) /* ty=Tensor[(7, 8, 14), uint16] */;
  %217 = power(%214, %215) /* ty=Tensor[(7, 8, 14), float64] */;
  (%216, %217)
}

def @func_2060() -> (Tensor[(7, 8, 14), float32],) {
  %218 = @func_1279() /* ty=Tensor[(7, 8, 14), float32] */;
  (%218,)
}

def @func_11809() -> Tensor[(48), float64] {
  %219 = @func_11044() /* ty=(Tensor[(7, 8, 14), float32], Tensor[(7, 8, 14), bool], Tensor[(48), float64]) */;
  %219.2
}

def @func_12533() -> (Tensor[(7, 8, 14), float32], Tensor[(7, 8, 14), float32], Tensor[(7, 8, 14), float64]) {
  %220 = @func_3754() /* ty=(Tensor[(7, 8, 14), float32],) */;
  %221 = @func_7395() /* ty=(Tensor[(7, 8, 14), float32], Tensor[(7, 8, 14), float32]) */;
  %222 = %220.0;
  %223 = %221.1;
  %224 = @func_9242() /* ty=Tensor[(7, 8, 14), float64] */;
  (%222, %223, %224)
}

def @func_4491(%var_4464: Tensor[(280), uint16], %var_4465: Tensor[(420), uint64], %var_4467: Tensor[(616), uint32], %var_4484: Tensor[(3584), float32]) -> (Tensor[(7, 8, 14), float32], Tensor[(10, 4, 7), bool], Tensor[(280), uint16], Tensor[(420), uint64], Tensor[(405), int32], Tensor[(616), uint32], Tensor[(14, 16, 16), float32], Tensor[(3584), float32]) {
  %225 = cast(%var_4464, dtype="uint16") /* ty=Tensor[(280), uint16] */;
  %226 = cast(%var_4464, dtype="uint16") /* ty=Tensor[(280), uint16] */;
  %227 = cast(%var_4465, dtype="uint64") /* ty=Tensor[(420), uint64] */;
  %228 = cast(meta[relay.Constant][8] /* ty=Tensor[(405), int32] */, dtype="int32") /* ty=Tensor[(405), int32] */;
  %229 = cast(%var_4467, dtype="uint32") /* ty=Tensor[(616), uint32] */;
  %230 = cast(%var_4464, dtype="float32") /* ty=Tensor[(280), float32] */;
  %231 = reshape(%225, newshape=[10, 4, 7]) /* ty=Tensor[(10, 4, 7), uint16] */;
  %232 = reshape(%226, newshape=[10, 4, 7]) /* ty=Tensor[(10, 4, 7), uint16] */;
  %233 = reshape(%227, newshape=[14, 2, 15]) /* ty=Tensor[(14, 2, 15), uint64] */;
  %234 = reshape(%228, newshape=[405]) /* ty=Tensor[(405), int32] */;
  %235 = reshape(%229, newshape=[1, 616]) /* ty=Tensor[(1, 616), uint32] */;
  %236 = reshape(%230, newshape=[10, 4, 7]) /* ty=Tensor[(10, 4, 7), float32] */;
  %237 = @func_1856(%231, %232, %233, %234, %235, %236) /* ty=(Tensor[(10, 4, 7), bool], Tensor[(7, 8, 14), float64], Tensor[(420), uint64], Tensor[(14, 2, 15), float64], Tensor[(7, 8, 14), float64], Tensor[(2, 48), float32], Tensor[(405), int32], Tensor[(1, 616), uint32], Tensor[(96), float32], Tensor[(10, 4, 7), int32], Tensor[(10, 4, 7), bool]) */;
  %238 = cast(%var_4484, dtype="float32") /* ty=Tensor[(3584), float32] */;
  %239 = reshape(%238, newshape=[14, 16, 16]) /* ty=Tensor[(14, 16, 16), float32] */;
  %240 = @func_1475(%239) /* ty=(Tensor[(14, 16, 16), float32],) */;
  %241 = @func_4066() /* ty=Tensor[(7, 8, 14), float32] */;
  %242 = %237.10;
  %243 = %240.0;
  (%241, %242, %var_4464, %var_4465, meta[relay.Constant][8] /* ty=Tensor[(405), int32] */, %var_4467, %243, %var_4484)
}

def @func_8091() -> (Tensor[(7, 8, 14), float64], Tensor[(7, 8, 14), float64]) {
  %244 = @func_2487() /* ty=(Tensor[(7, 8, 14), float64],) */;
  %245 = %244.0;
  %246 = @func_6754() /* ty=Tensor[(7, 8, 14), float64] */;
  (%245, %246)
}

def @func_1748() -> Tensor[(7, 8, 14), float64] {
  @func_1172() /* ty=Tensor[(7, 8, 14), float64] */
}

def @func_3109() -> (Tensor[(7, 8, 14), float32],) {
  %247 = @func_2072() /* ty=Tensor[(7, 8, 14), float32] */;
  (%247,)
}

def @func_9449() -> (Tensor[(7, 8, 14), bool],) {
  %248 = @func_5585() /* ty=(Tensor[(7, 8, 14), float64], Tensor[(7, 8, 14), bool]) */;
  %249 = %248.1;
  (%249,)
}

def @func_6947() -> (Tensor[(7, 8, 14), float64],) {
  %250 = @func_6058() /* ty=(Tensor[(7, 8, 14), float64],) */;
  %251 = %250.0;
  (%251,)
}

def @func_3662(%var_3609: Tensor[(96), float32]) -> (Tensor[(7, 8, 14), float32], Tensor[(616), uint32], Tensor[(405), int32], Tensor[(616), uint32], Tensor[(96), float32], Tensor[(7, 8, 14), float32]) {
  %252 = cast(meta[relay.Constant][9] /* ty=Tensor[(405), int32] */, dtype="int32") /* ty=Tensor[(405), int32] */;
  %253 = cast(meta[relay.Constant][10] /* ty=Tensor[(616), uint32] */, dtype="uint32") /* ty=Tensor[(616), uint32] */;
  %254 = cast(%var_3609, dtype="float32") /* ty=Tensor[(96), float32] */;
  %255 = reshape(%252, newshape=[9, 15, 3]) /* ty=Tensor[(9, 15, 3), int32] */;
  %256 = reshape(%253, newshape=[616]) /* ty=Tensor[(616), uint32] */;
  %257 = reshape(%254, newshape=[2, 48]) /* ty=Tensor[(2, 48), float32] */;
  %258 = @func_1076(%255, %256, %257) /* ty=(Tensor[(9, 15, 3), int32], Tensor[(616), uint32], Tensor[(2, 48), bool], Tensor[(2, 48), float32]) */;
  %259 = @func_2060() /* ty=(Tensor[(7, 8, 14), float32],) */;
  %260 = @func_2416() /* ty=Tensor[(7, 8, 14), float32] */;
  %261 = %258.1;
  %262 = %259.0;
  (%260, %261, meta[relay.Constant][9] /* ty=Tensor[(405), int32] */, meta[relay.Constant][10] /* ty=Tensor[(616), uint32] */, %var_3609, %262)
}

def @func_2535() -> (Tensor[(1, 14, 6), float64],) {
  %263 = cast(meta[relay.Constant][11] /* ty=Tensor[(1, 14, 6), float64] */, dtype="float64") /* ty=Tensor[(1, 14, 6), float64] */;
  %264 = sigmoid(%263) /* ty=Tensor[(1, 14, 6), float64] */;
  (%264,)
}

def @func_9183() -> Tensor[(16, 1, 6), float32] {
  %265 = @func_8436() /* ty=(Tensor[(16, 1, 6), float32],) */;
  %265.0
}

def @func_9858(%var_9851: Tensor[(7, 15, 4), float64]) -> (Tensor[(7, 15, 4), float32],) {
  %266 = cast(%var_9851, dtype="float64") /* ty=Tensor[(7, 15, 4), float64] */;
  %267 = sqrt(%266) /* ty=Tensor[(7, 15, 4), float64] */;
  %268 = cast(%267, dtype="float32") /* ty=Tensor[(7, 15, 4), float32] */;
  %269 = asin(%268) /* ty=Tensor[(7, 15, 4), float32] */;
  (%269,)
}

def @func_1233(%var_1202: Tensor[(2, 15, 1), float64]) -> (Tensor[(2, 15, 1), float32], Tensor[(2, 15, ?), int8]) {
  %270 = cast(%var_1202, dtype="float64") /* ty=Tensor[(2, 15, 1), float64] */;
  %271 = sigmoid(%270) /* ty=Tensor[(2, 15, 1), float64] */;
  %272 = cast(%271, dtype="float32") /* ty=Tensor[(2, 15, 1), float32] */;
  %273 = cast(%var_1202, dtype="float32") /* ty=Tensor[(2, 15, 1), float32] */;
  %274 = log2(%273) /* ty=Tensor[(2, 15, 1), float32] */;
  %275 = cast(%274, dtype="int8") /* ty=Tensor[(2, 15, 1), int8] */;
  %276 = shape_of(%271, dtype="int32") /* ty=Tensor[(3), int32] */;
  %277 = cast(%271, dtype="int8") /* ty=Tensor[(2, 15, 1), int8] */;
  %278 = dyn.reshape(%275, %276, newshape=[]) /* ty=Tensor[(?, ?, ?), int8] */;
  %279 = sqrt(%272) /* ty=Tensor[(2, 15, 1), float32] */;
  %280 = maximum(%277, %278) /* ty=Tensor[(2, 15, ?), int8] */;
  (%279, %280)
}

def @func_11519() -> Tensor[(7, 8, 14), float64] {
  @func_10492() /* ty=Tensor[(7, 8, 14), float64] */
}

def @func_11624() -> (Tensor[(7, 8, 14), float64], Tensor[(16, 1, 6), float64]) {
  %281 = @func_3861() /* ty=(Tensor[(7, 8, 14), float64],) */;
  %282 = @func_11532() /* ty=(Tensor[(16, 1, 6), float32],) */;
  %283 = %282.0;
  %284 = cast(%283, dtype="float32") /* ty=Tensor[(16, 1, 6), float32] */;
  %285 = rsqrt(%284) /* ty=Tensor[(16, 1, 6), float32] */;
  %286 = cast(%285, dtype="float64") /* ty=Tensor[(16, 1, 6), float64] */;
  %287 = %281.0;
  %288 = sin(%286) /* ty=Tensor[(16, 1, 6), float64] */;
  (%287, %288)
}

def @func_2434(%var_2424: Tensor[(420), uint64]) -> (Tensor[(7, 8, 14), float32], Tensor[(7, 8, 14), float32], Tensor[(420), uint64], Tensor[(15, 6, 10), bool], Tensor[(900), float32]) {
  %289 = cast(%var_2424, dtype="uint64") /* ty=Tensor[(420), uint64] */;
  %290 = reshape(%289, newshape=[420]) /* ty=Tensor[(420), uint64] */;
  %291 = @func_1964(%290) /* ty=(Tensor[(7, 8, 14), float32], Tensor[(7, 8, 14), float32], Tensor[(14, 2, 15), uint64], Tensor[(420), uint64]) */;
  %292 = cast(meta[relay.Constant][12] /* ty=Tensor[(900), float32] */, dtype="float32") /* ty=Tensor[(900), float32] */;
  %293 = reshape(%292, newshape=[15, 6, 10]) /* ty=Tensor[(15, 6, 10), float32] */;
  %294 = @func_2010() /* ty=Tensor[(7, 8, 14), float32] */;
  %295 = %291.1;
  %296 = @func_669(%293) /* ty=Tensor[(15, 6, 10), bool] */;
  (%294, %295, %var_2424, %296, meta[relay.Constant][12] /* ty=Tensor[(900), float32] */)
}

def @func_9242() -> Tensor[(7, 8, 14), float64] {
  %297 = @func_7829() /* ty=(Tensor[(7, 8, 14), float64],) */;
  %297.0
}

def @func_10118() -> (Tensor[(7, 8, 14), float32], Tensor[(7, 8, 14), float32], Tensor[(616), uint32], Tensor[(96), float32], Tensor[(7, 8, 14), float64], Tensor[(7, 8, 14), float32], Tensor[(96), float32], Tensor[(16, 1, 6), float32], Tensor[(7, 8, 14), float64]) {
  %298 = @func_8540() /* ty=(Tensor[(7, 8, 14), float32],) */;
  %299 = cast(meta[relay.Constant][13] /* ty=Tensor[(616), uint32] */, dtype="uint32") /* ty=Tensor[(616), uint32] */;
  %300 = cast(meta[relay.Constant][14] /* ty=Tensor[(96), float32] */, dtype="float32") /* ty=Tensor[(96), float32] */;
  %301 = reshape(%299, newshape=[616]) /* ty=Tensor[(616), uint32] */;
  %302 = reshape(%300, newshape=[48, 2]) /* ty=Tensor[(48, 2), float32] */;
  %303 = @func_5177(%301, %302) /* ty=(Tensor[(7, 8, 14), float32], Tensor[(4, 24), float32], Tensor[(616), uint32], Tensor[(48, 2), float32], Tensor[(7, 8, 14), float32]) */;
  %304 = @func_3240() /* ty=(Tensor[(7, 8, 14), float64], Tensor[(7, 8, 14), float32]) */;
  %305 = %298.0;
  %306 = %303.4;
  %307 = %304.0;
  %308 = @func_9977() /* ty=Tensor[(7, 8, 14), float32] */;
  %309 = @func_5744() /* ty=Tensor[(96), float32] */;
  %310 = @func_7127() /* ty=Tensor[(16, 1, 6), float32] */;
  %311 = @func_10002() /* ty=Tensor[(7, 8, 14), float64] */;
  (%305, %306, meta[relay.Constant][13] /* ty=Tensor[(616), uint32] */, meta[relay.Constant][14] /* ty=Tensor[(96), float32] */, %307, %308, %309, %310, %311)
}

def @func_3568() -> (Tensor[(7, 8, 14), float32],) {
  %312 = @func_1554() /* ty=(Tensor[(7, 8, 14), float32],) */;
  %313 = %312.0;
  (%313,)
}

def @func_669(%var_665: Tensor[(15, 6, 10), float32]) -> Tensor[(15, 6, 10), bool] {
  %314 = cast(%var_665, dtype="bool") /* ty=Tensor[(15, 6, 10), bool] */;
  %315 = shape_of(meta[relay.Constant][15] /* ty=Tensor[(15, 6, 10), float32] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %316 = cast(meta[relay.Constant][15] /* ty=Tensor[(15, 6, 10), float32] */, dtype="bool") /* ty=Tensor[(15, 6, 10), bool] */;
  %317 = dyn.reshape(%314, %315, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  less_equal(%316, %317) /* ty=Tensor[(15, 6, 10), bool] */
}

def @func_4340(%var_4328: Tensor[(35), float32]) -> (Tensor[(7, 8, 14), float32], Tensor[(1, 14, 6), float64], Tensor[(7, 8, 14), float64], Tensor[(5, 7), float32], Tensor[(35), float32]) {
  %318 = @func_3109() /* ty=(Tensor[(7, 8, 14), float32],) */;
  %319 = @func_2535() /* ty=(Tensor[(1, 14, 6), float64],) */;
  %320 = @func_2487() /* ty=(Tensor[(7, 8, 14), float64],) */;
  %321 = cast(%var_4328, dtype="float32") /* ty=Tensor[(35), float32] */;
  %322 = reshape(%321, newshape=[5, 7]) /* ty=Tensor[(5, 7), float32] */;
  %323 = @func_162(%322) /* ty=(Tensor[(5, 7), float32], Tensor[(16, 1, 6), float32], Tensor[(96), float32], Tensor[(16, 1, 6), float32]) */;
  %324 = %318.0;
  %325 = %319.0;
  %326 = %320.0;
  %327 = %323.0;
  (%324, %325, %326, %327, %var_4328)
}

def @func_2363(%var_2305: Tensor[(7, 8, 14), float64]) -> (Tensor[(7, 8, 14), uint8], Tensor[(15, 6, 10), bool], Tensor[(900), float32], Tensor[(14, 2, 15), uint64], Tensor[(420), uint64], Tensor[(7, 8, 14), float64], Tensor[(7, 8, 14), float32]) {
  %328 = @func_2196() /* ty=Tensor[(7, 8, 14), float32] */;
  %329 = cast(%328, dtype="float64") /* ty=Tensor[(7, 8, 14), float64] */;
  %330 = tan(%329) /* ty=Tensor[(7, 8, 14), float64] */;
  %331 = cast(%var_2305, dtype="uint8") /* ty=Tensor[(7, 8, 14), uint8] */;
  %332 = shape_of(%330, dtype="int32") /* ty=Tensor[(3), int32] */;
  %333 = cast(%330, dtype="uint8") /* ty=Tensor[(7, 8, 14), uint8] */;
  %334 = dyn.reshape(%331, %332, newshape=[]) /* ty=Tensor[(?, ?, ?), uint8] */;
  %335 = cast(meta[relay.Constant][16] /* ty=Tensor[(900), float32] */, dtype="float32") /* ty=Tensor[(900), float32] */;
  %336 = reshape(%335, newshape=[15, 6, 10]) /* ty=Tensor[(15, 6, 10), float32] */;
  %337 = cast(meta[relay.Constant][17] /* ty=Tensor[(420), uint64] */, dtype="uint64") /* ty=Tensor[(420), uint64] */;
  %338 = reshape(%337, newshape=[420]) /* ty=Tensor[(420), uint64] */;
  %339 = @func_1964(%338) /* ty=(Tensor[(7, 8, 14), float32], Tensor[(7, 8, 14), float32], Tensor[(14, 2, 15), uint64], Tensor[(420), uint64]) */;
  %340 = multiply(%333, %334) /* ty=Tensor[(7, 8, 14), uint8] */;
  %341 = @func_669(%336) /* ty=Tensor[(15, 6, 10), bool] */;
  %342 = %339.2;
  %343 = @func_1291() /* ty=Tensor[(7, 8, 14), float64] */;
  %344 = @func_2092() /* ty=Tensor[(7, 8, 14), float32] */;
  (%340, %341, meta[relay.Constant][16] /* ty=Tensor[(900), float32] */, %342, meta[relay.Constant][17] /* ty=Tensor[(420), uint64] */, %343, %344)
}

def @func_6601(%var_6590: Tensor[(7, 8, 14), float64]) -> (Tensor[(3584, 1), float32], Tensor[(7, 8, 14), bool]) {
  %345 = @func_4287() /* ty=(Tensor[(7, 8, 14), float64], Tensor[(7, 8, 14), float32], Tensor[(3584, 1), float32], Tensor[(7, 8, 14), float64]) */;
  %346 = %345.2;
  %347 = cast(%346, dtype="float32") /* ty=Tensor[(3584, 1), float32] */;
  %348 = @func_2137() /* ty=(Tensor[(7, 8, 14), float64], Tensor[(7, 8, 14), float64]) */;
  %349 = %348.0;
  %350 = cast(%var_6590, dtype="bool") /* ty=Tensor[(7, 8, 14), bool] */;
  %351 = shape_of(%349, dtype="int32") /* ty=Tensor[(3), int32] */;
  %352 = cast(%349, dtype="bool") /* ty=Tensor[(7, 8, 14), bool] */;
  %353 = dyn.reshape(%350, %351, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %354 = log2(%347) /* ty=Tensor[(3584, 1), float32] */;
  %355 = equal(%352, %353) /* ty=Tensor[(7, 8, 14), bool] */;
  (%354, %355)
}

def @func_10959() -> (Tensor[(7, 8, 14), float32], Tensor[(9, 4, 16), float64], Tensor[(576), float64], Tensor[(7, 8, 14), float32], Tensor[(7, 8, 14), float32]) {
  %356 = @func_6814() /* ty=(Tensor[(7, 8, 14), float32],) */;
  %357 = cast(meta[relay.Constant][18] /* ty=Tensor[(576), float64] */, dtype="float64") /* ty=Tensor[(576), float64] */;
  %358 = reshape(%357, newshape=[9, 4, 16]) /* ty=Tensor[(9, 4, 16), float64] */;
  %359 = @func_2871(%358) /* ty=(Tensor[(9, 4, 16), float64],) */;
  %360 = @func_6814() /* ty=(Tensor[(7, 8, 14), float32],) */;
  %361 = %356.0;
  %362 = %359.0;
  %363 = %360.0;
  %364 = @func_9977() /* ty=Tensor[(7, 8, 14), float32] */;
  (%361, %362, meta[relay.Constant][18] /* ty=Tensor[(576), float64] */, %363, %364)
}

def @func_6814() -> (Tensor[(7, 8, 14), float32],) {
  %365 = @func_2196() /* ty=Tensor[(7, 8, 14), float32] */;
  (%365,)
}

def @func_3597() -> Tensor[(7, 8, 14), float64] {
  %366 = @func_2804() /* ty=(Tensor[(7, 8, 14), float64], Tensor[(7, 8, 14), float32]) */;
  %366.0
}

def @func_5023() -> Tensor[(7, 8, 14), float64] {
  %367 = @func_3455() /* ty=(Tensor[(7, 8, 14), float64],) */;
  %367.0
}

def @func_6976() -> (Tensor[(7, 8, 14), float64], Tensor[(7, 8, 14), float32]) {
  %368 = @func_3109() /* ty=(Tensor[(7, 8, 14), float32],) */;
  %369 = @func_2159() /* ty=Tensor[(7, 8, 14), float64] */;
  %370 = %368.0;
  (%369, %370)
}

def @func_7521() -> (Tensor[(7, 8, 14), float32],) {
  %371 = @func_3754() /* ty=(Tensor[(7, 8, 14), float32],) */;
  %372 = %371.0;
  (%372,)
}

def @func_1475(%var_1469: Tensor[(14, 16, 16), float32]) -> (Tensor[(14, 16, 16), float32],) {
  %373 = cast(%var_1469, dtype="float32") /* ty=Tensor[(14, 16, 16), float32] */;
  %374 = asin(%373) /* ty=Tensor[(14, 16, 16), float32] */;
  (%374,)
}

def @func_9269() -> (Tensor[(7, 8, 14), float32], Tensor[(14, 2, 15), uint64], Tensor[(5, 84), uint64]) {
  %375 = @func_8142() /* ty=(Tensor[(7, 8, 14), float32],) */;
  %376 = cast(meta[relay.Constant][19] /* ty=Tensor[(5, 84), uint64] */, dtype="uint64") /* ty=Tensor[(5, 84), uint64] */;
  %377 = cast(meta[relay.Constant][19] /* ty=Tensor[(5, 84), uint64] */, dtype="uint64") /* ty=Tensor[(5, 84), uint64] */;
  %378 = reshape(%376, newshape=[14, 2, 15]) /* ty=Tensor[(14, 2, 15), uint64] */;
  %379 = reshape(%377, newshape=[14, 2, 15]) /* ty=Tensor[(14, 2, 15), uint64] */;
  %380 = %375.0;
  %381 = @func_1036(%378, %379) /* ty=Tensor[(14, 2, 15), uint64] */;
  (%380, %381, meta[relay.Constant][19] /* ty=Tensor[(5, 84), uint64] */)
}

def @func_5705() -> (Tensor[(7, 8, 14), float64],) {
  %382 = @func_1748() /* ty=Tensor[(7, 8, 14), float64] */;
  (%382,)
}

def @func_3286(%var_3271: Tensor[(7, 8, 14), float32]) -> (Tensor[(15, 6, 10), bool], Tensor[(1, 900), float32], Tensor[(7, 8, 14), int8]) {
  %383 = cast(meta[relay.Constant][20] /* ty=Tensor[(1, 900), float32] */, dtype="float32") /* ty=Tensor[(1, 900), float32] */;
  %384 = reshape(%383, newshape=[15, 6, 10]) /* ty=Tensor[(15, 6, 10), float32] */;
  %385 = @func_3162() /* ty=Tensor[(7, 8, 14), float32] */;
  %386 = cast(%var_3271, dtype="int8") /* ty=Tensor[(7, 8, 14), int8] */;
  %387 = shape_of(%385, dtype="int32") /* ty=Tensor[(3), int32] */;
  %388 = cast(%385, dtype="int8") /* ty=Tensor[(7, 8, 14), int8] */;
  %389 = dyn.reshape(%386, %387, newshape=[]) /* ty=Tensor[(?, ?, ?), int8] */;
  %390 = @func_669(%384) /* ty=Tensor[(15, 6, 10), bool] */;
  %391 = maximum(%388, %389) /* ty=Tensor[(7, 8, 14), int8] */;
  (%390, meta[relay.Constant][20] /* ty=Tensor[(1, 900), float32] */, %391)
}

def @func_2010() -> Tensor[(7, 8, 14), float32] {
  @func_1357() /* ty=Tensor[(7, 8, 14), float32] */
}

def @func_11645() -> (Tensor[(7, 8, 14), float64], Tensor[(7, 8, 14), float32]) {
  %392 = @func_3597() /* ty=Tensor[(7, 8, 14), float64] */;
  %393 = @func_8570() /* ty=Tensor[(7, 8, 14), float32] */;
  (%392, %393)
}

def @func_3754() -> (Tensor[(7, 8, 14), float32],) {
  %394 = @func_2092() /* ty=Tensor[(7, 8, 14), float32] */;
  (%394,)
}

def @func_4066() -> Tensor[(7, 8, 14), float32] {
  %395 = @func_3546() /* ty=(Tensor[(7, 8, 14), float32], Tensor[(7, 8, 14), float64]) */;
  %396 = %395.0;
  %397 = cast(%396, dtype="float32") /* ty=Tensor[(7, 8, 14), float32] */;
  sqrt(%397) /* ty=Tensor[(7, 8, 14), float32] */
}

def @func_1279() -> Tensor[(7, 8, 14), float32] {
  %398 = @func_1172() /* ty=Tensor[(7, 8, 14), float64] */;
  %399 = cast(%398, dtype="float32") /* ty=Tensor[(7, 8, 14), float32] */;
  acos(%399) /* ty=Tensor[(7, 8, 14), float32] */
}

def @func_2487() -> (Tensor[(7, 8, 14), float64],) {
  %400 = @func_1251() /* ty=Tensor[(7, 8, 14), float64] */;
  (%400,)
}

def @func_5832() -> Tensor[(7, 8, 14), float64] {
  @func_3771() /* ty=Tensor[(7, 8, 14), float64] */
}

def @func_10492() -> Tensor[(7, 8, 14), float64] {
  %401 = @func_8893() /* ty=(Tensor[(7, 8, 14), float64],) */;
  %401.0
}

def @func_4041() -> (Tensor[(7, 8, 14), float32], Tensor[(16, 1, 6), float32], Tensor[(96), float32]) {
  %402 = cast(meta[relay.Constant][21] /* ty=Tensor[(96), float32] */, dtype="float32") /* ty=Tensor[(96), float32] */;
  %403 = reshape(%402, newshape=[16, 1, 6]) /* ty=Tensor[(16, 1, 6), float32] */;
  %404 = @func_77(%403) /* ty=(Tensor[(16, 1, 6), float32],) */;
  %405 = @func_1279() /* ty=Tensor[(7, 8, 14), float32] */;
  %406 = %404.0;
  (%405, %406, meta[relay.Constant][21] /* ty=Tensor[(96), float32] */)
}

def @func_6372(%var_6367: Tensor[(30), float64]) -> (Tensor[(7, 8, 14), float32], Tensor[(7, 8, 14), float32], Tensor[(7, 8, 14), float64], Tensor[(7, 8, 14), float32], Tensor[(2, 15, 1), float32], Tensor[(30), float64], Tensor[(7, 8, 14), float32]) {
  %407 = @func_3546() /* ty=(Tensor[(7, 8, 14), float32], Tensor[(7, 8, 14), float64]) */;
  %408 = @func_3109() /* ty=(Tensor[(7, 8, 14), float32],) */;
  %409 = cast(%var_6367, dtype="float64") /* ty=Tensor[(30), float64] */;
  %410 = reshape(%409, newshape=[2, 15, 1]) /* ty=Tensor[(2, 15, 1), float64] */;
  %411 = @func_1233(%410) /* ty=(Tensor[(2, 15, 1), float32], Tensor[(2, 15, ?), int8]) */;
  %412 = @func_3871() /* ty=(Tensor[(7, 8, 14), float64], Tensor[(7, 8, 14), float32]) */;
  %413 = @func_1357() /* ty=Tensor[(7, 8, 14), float32] */;
  %414 = @func_3507() /* ty=Tensor[(7, 8, 14), float32] */;
  %415 = %407.1;
  %416 = %408.0;
  %417 = %411.0;
  %418 = %412.1;
  (%413, %414, %415, %416, %417, %var_6367, %418)
}

def @func_5177(%var_5164: Tensor[(616), uint32], %var_5165: Tensor[(48, 2), float32]) -> (Tensor[(7, 8, 14), float32], Tensor[(4, 24), float32], Tensor[(616), uint32], Tensor[(48, 2), float32], Tensor[(7, 8, 14), float32]) {
  %419 = cast(%var_5164, dtype="uint32") /* ty=Tensor[(616), uint32] */;
  %420 = cast(%var_5164, dtype="uint32") /* ty=Tensor[(616), uint32] */;
  %421 = cast(%var_5165, dtype="float32") /* ty=Tensor[(48, 2), float32] */;
  %422 = reshape(%419, newshape=[11, 14, 4]) /* ty=Tensor[(11, 14, 4), uint32] */;
  %423 = reshape(%420, newshape=[11, 14, 4]) /* ty=Tensor[(11, 14, 4), uint32] */;
  %424 = reshape(%421, newshape=[4, 24]) /* ty=Tensor[(4, 24), float32] */;
  %425 = @func_317(%422, %423, %424) /* ty=(Tensor[(11, 14, 4), uint32], Tensor[(16, 1, 6), float32], Tensor[(4, 24), float32]) */;
  %426 = cast(%var_5165, dtype="float32") /* ty=Tensor[(48, 2), float32] */;
  %427 = @func_4798() /* ty=Tensor[(7, 8, 14), float32] */;
  %428 = %425.2;
  %429 = log10(%426) /* ty=Tensor[(48, 2), float32] */;
  %430 = @func_2010() /* ty=Tensor[(7, 8, 14), float32] */;
  (%427, %428, %var_5164, %429, %430)
}

def @func_9500() -> (Tensor[(7, 8, 14), float32], Tensor[(7, 8, 14), float64], Tensor[(7, 8, 14), float32]) {
  %431 = @func_7534() /* ty=(Tensor[(7, 8, 14), float32],) */;
  %432 = @func_7395() /* ty=(Tensor[(7, 8, 14), float32], Tensor[(7, 8, 14), float32]) */;
  %433 = %431.0;
  %434 = @func_1172() /* ty=Tensor[(7, 8, 14), float64] */;
  %435 = %432.0;
  (%433, %434, %435)
}

def @func_9575(%var_9526: Tensor[(1, 13, 7), float64]) -> (Tensor[(1, 13, 7), float64], Tensor[(7, 8, 14), float64], Tensor[(?, 13, 7), float64], Tensor[(?, 13, 7), bool], Tensor[(7, 8, 14), int32]) {
  %436 = cast(%var_9526, dtype="float64") /* ty=Tensor[(1, 13, 7), float64] */;
  %437 = @func_3546() /* ty=(Tensor[(7, 8, 14), float32], Tensor[(7, 8, 14), float64]) */;
  %438 = cast(%var_9526, dtype="float32") /* ty=Tensor[(1, 13, 7), float32] */;
  %439 = log10(%438) /* ty=Tensor[(1, 13, 7), float32] */;
  %440 = cast(%var_9526, dtype="bool") /* ty=Tensor[(1, 13, 7), bool] */;
  %441 = shape_of(%439, dtype="int32") /* ty=Tensor[(3), int32] */;
  %442 = cast(%439, dtype="bool") /* ty=Tensor[(1, 13, 7), bool] */;
  %443 = dyn.reshape(%440, %441, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %444 = less(%442, %443) /* ty=Tensor[(?, 13, 7), bool] */;
  %445 = cast(%439, dtype="float64") /* ty=Tensor[(1, 13, 7), float64] */;
  %446 = shape_of(%444, dtype="int32") /* ty=Tensor[(3), int32] */;
  %447 = cast(%444, dtype="float64") /* ty=Tensor[(?, 13, 7), float64] */;
  %448 = dyn.reshape(%445, %446, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %449 = cast(%444, dtype="bool") /* ty=Tensor[(?, 13, 7), bool] */;
  %450 = shape_of(%439, dtype="int32") /* ty=Tensor[(3), int32] */;
  %451 = cast(%439, dtype="bool") /* ty=Tensor[(1, 13, 7), bool] */;
  %452 = dyn.reshape(%449, %450, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %453 = %437.1;
  %454 = cast(%453, dtype="float32") /* ty=Tensor[(7, 8, 14), float32] */;
  %455 = reshape(%454, newshape=[7, 8, 14]) /* ty=Tensor[(7, 8, 14), float32] */;
  %456 = @func_3823(%455) /* ty=(Tensor[(7, 8, 14), int32],) */;
  %457 = exp(%436) /* ty=Tensor[(1, 13, 7), float64] */;
  %458 = multiply(%447, %448) /* ty=Tensor[(?, 13, 7), float64] */;
  %459 = less_equal(%451, %452) /* ty=Tensor[(?, 13, 7), bool] */;
  %460 = %456.0;
  (%457, %453, %458, %459, %460)
}

def @func_10290() -> Tensor[(7, 8, 14), float64] {
  @func_5832() /* ty=Tensor[(7, 8, 14), float64] */
}

def @func_1251() -> Tensor[(7, 8, 14), float64] {
  @func_1172() /* ty=Tensor[(7, 8, 14), float64] */
}

def @func_3413() -> (Tensor[(7, 8, 14), float32], Tensor[(7, 8, 14), float64]) {
  %461 = @func_2137() /* ty=(Tensor[(7, 8, 14), float64], Tensor[(7, 8, 14), float64]) */;
  %462 = %461.0;
  %463 = cast(%462, dtype="float32") /* ty=Tensor[(7, 8, 14), float32] */;
  %464 = @func_3240() /* ty=(Tensor[(7, 8, 14), float64], Tensor[(7, 8, 14), float32]) */;
  %465 = asin(%463) /* ty=Tensor[(7, 8, 14), float32] */;
  %466 = %464.0;
  (%465, %466)
}

def @func_10819() -> (Tensor[(96), float32], Tensor[(7, 8, 14), float32], Tensor[(7, 8, 14), float32]) {
  %467 = @func_7940() /* ty=(Tensor[(7, 8, 14), float32],) */;
  %468 = @func_5744() /* ty=Tensor[(96), float32] */;
  %469 = %467.0;
  %470 = @func_8570() /* ty=Tensor[(7, 8, 14), float32] */;
  (%468, %469, %470)
}

def @func_8347(%var_8298: Tensor[(280, 1), uint16], %var_8299: Tensor[(420), uint64], %var_8300: Tensor[(405), int32], %var_8335: Tensor[(280, 6), float64]) -> (Tensor[(7, 8, 14), float64], Tensor[(96), float32], Tensor[(420), uint64], Tensor[(405), int32], Tensor[(616, 1), uint32], Tensor[(280, ?), float32], Tensor[(280, 6), uint64]) {
  %471 = cast(%var_8298, dtype="uint16") /* ty=Tensor[(280, 1), uint16] */;
  %472 = cast(%var_8298, dtype="uint16") /* ty=Tensor[(280, 1), uint16] */;
  %473 = cast(%var_8299, dtype="uint64") /* ty=Tensor[(420), uint64] */;
  %474 = cast(%var_8300, dtype="int32") /* ty=Tensor[(405), int32] */;
  %475 = cast(meta[relay.Constant][22] /* ty=Tensor[(616, 1), uint32] */, dtype="uint32") /* ty=Tensor[(616, 1), uint32] */;
  %476 = cast(%var_8298, dtype="float32") /* ty=Tensor[(280, 1), float32] */;
  %477 = reshape(%471, newshape=[10, 4, 7]) /* ty=Tensor[(10, 4, 7), uint16] */;
  %478 = reshape(%472, newshape=[10, 4, 7]) /* ty=Tensor[(10, 4, 7), uint16] */;
  %479 = reshape(%473, newshape=[14, 2, 15]) /* ty=Tensor[(14, 2, 15), uint64] */;
  %480 = reshape(%474, newshape=[405]) /* ty=Tensor[(405), int32] */;
  %481 = reshape(%475, newshape=[1, 616]) /* ty=Tensor[(1, 616), uint32] */;
  %482 = reshape(%476, newshape=[10, 4, 7]) /* ty=Tensor[(10, 4, 7), float32] */;
  %483 = @func_1856(%477, %478, %479, %480, %481, %482) /* ty=(Tensor[(10, 4, 7), bool], Tensor[(7, 8, 14), float64], Tensor[(420), uint64], Tensor[(14, 2, 15), float64], Tensor[(7, 8, 14), float64], Tensor[(2, 48), float32], Tensor[(405), int32], Tensor[(1, 616), uint32], Tensor[(96), float32], Tensor[(10, 4, 7), int32], Tensor[(10, 4, 7), bool]) */;
  %484 = cast(%var_8298, dtype="float64") /* ty=Tensor[(280, 1), float64] */;
  %485 = sqrt(%484) /* ty=Tensor[(280, 1), float64] */;
  %486 = cast(%var_8298, dtype="float32") /* ty=Tensor[(280, 1), float32] */;
  %487 = shape_of(%485, dtype="int32") /* ty=Tensor[(2), int32] */;
  %488 = cast(%485, dtype="float32") /* ty=Tensor[(280, 1), float32] */;
  %489 = dyn.reshape(%486, %487, newshape=[]) /* ty=Tensor[(?, ?), float32] */;
  %490 = cast(%485, dtype="uint64") /* ty=Tensor[(280, 1), uint64] */;
  %491 = cast(%var_8335, dtype="uint64") /* ty=Tensor[(280, 6), uint64] */;
  %492 = @func_3771() /* ty=Tensor[(7, 8, 14), float64] */;
  %493 = %483.8;
  %494 = floor_mod(%488, %489) /* ty=Tensor[(280, ?), float32] */;
  %495 = multiply(%490, %491) /* ty=Tensor[(280, 6), uint64] */;
  (%492, %493, %var_8299, %var_8300, meta[relay.Constant][22] /* ty=Tensor[(616, 1), uint32] */, %494, %495)
}

def @func_3871() -> (Tensor[(7, 8, 14), float64], Tensor[(7, 8, 14), float32]) {
  %496 = @func_2159() /* ty=Tensor[(7, 8, 14), float64] */;
  %497 = @func_2416() /* ty=Tensor[(7, 8, 14), float32] */;
  (%496, %497)
}

def @func_8502() -> Tensor[(96), float32] {
  @func_5744() /* ty=Tensor[(96), float32] */
}

def @func_1554() -> (Tensor[(7, 8, 14), float32],) {
  %498 = @func_1279() /* ty=Tensor[(7, 8, 14), float32] */;
  %499 = cast(%498, dtype="float32") /* ty=Tensor[(7, 8, 14), float32] */;
  %500 = cos(%499) /* ty=Tensor[(7, 8, 14), float32] */;
  (%500,)
}

def @func_8231() -> Tensor[(7, 8, 14), float32] {
  %501 = @func_7521() /* ty=(Tensor[(7, 8, 14), float32],) */;
  %501.0
}

def @func_10178(%var_10154: Tensor[(75), uint64], %var_10170: Tensor[(24, 2), float64]) -> (Tensor[(7, 8, 14), float32], Tensor[(7, 8, 14), float64], Tensor[(7, 8, 14), float32], Tensor[(75), uint64], Tensor[(35), float32], Tensor[(7, 8, 14), float32], Tensor[(7, 8, 14), float32], Tensor[(24, 2), float64]) {
  %502 = @func_7534() /* ty=(Tensor[(7, 8, 14), float32],) */;
  %503 = @func_7052() /* ty=(Tensor[(7, 8, 14), float64],) */;
  %504 = cast(%var_10154, dtype="uint64") /* ty=Tensor[(75), uint64] */;
  %505 = cast(%var_10154, dtype="uint64") /* ty=Tensor[(75), uint64] */;
  %506 = %503.0;
  %507 = cast(%506, dtype="float64") /* ty=Tensor[(7, 8, 14), float64] */;
  %508 = reshape(%504, newshape=[5, 1, 15]) /* ty=Tensor[(5, 1, 15), uint64] */;
  %509 = reshape(%505, newshape=[5, 1, 15]) /* ty=Tensor[(5, 1, 15), uint64] */;
  %510 = reshape(%507, newshape=[56, 14]) /* ty=Tensor[(56, 14), float64] */;
  %511 = @func_5895(%508, %509, %510) /* ty=(Tensor[(5, ?, 15), uint64], Tensor[(5, 1, 15), float64], Tensor[(7, 8, 14), int8], Tensor[(56, 14), float64], Tensor[(7, 8, 14), float32]) */;
  %512 = %502.0;
  %513 = cast(%512, dtype="float64") /* ty=Tensor[(7, 8, 14), float64] */;
  %514 = reshape(%513, newshape=[7, 8, 14]) /* ty=Tensor[(7, 8, 14), float64] */;
  %515 = @func_3139(%514) /* ty=(Tensor[(7, 8, 14), int8], Tensor[(5, 7), float32], Tensor[(35), float32]) */;
  %516 = cast(%var_10170, dtype="float64") /* ty=Tensor[(24, 2), float64] */;
  %517 = reshape(%516, newshape=[48]) /* ty=Tensor[(48), float64] */;
  %518 = @func_2402(%517) /* ty=(Tensor[(7, 8, 14), float32], Tensor[(3, 8, 2), float64], Tensor[(48), float64]) */;
  %519 = %511.4;
  %520 = %515.2;
  %521 = @func_8231() /* ty=Tensor[(7, 8, 14), float32] */;
  %522 = %518.0;
  (%512, %506, %519, %var_10154, %520, %521, %522, %var_10170)
}

def @func_6046() -> Tensor[(7, 8, 14), float32] {
  @func_2416() /* ty=Tensor[(7, 8, 14), float32] */
}

def @func_12600() -> Tensor[(16, 1, 6), float32] {
  %523 = @func_8436() /* ty=(Tensor[(16, 1, 6), float32],) */;
  %523.0
}

def @func_10397() -> Tensor[(7, 8, 14), float32] {
  %524 = @func_3413() /* ty=(Tensor[(7, 8, 14), float32], Tensor[(7, 8, 14), float64]) */;
  %524.0
}

def @func_7052() -> (Tensor[(7, 8, 14), float64],) {
  %525 = @func_2804() /* ty=(Tensor[(7, 8, 14), float64], Tensor[(7, 8, 14), float32]) */;
  %526 = %525.0;
  (%526,)
}

def @func_5262() -> Tensor[(7, 8, 14), float64] {
  @func_4389() /* ty=Tensor[(7, 8, 14), float64] */
}

def @func_6162() -> (Tensor[(7, 8, 14), float64],) {
  %527 = @func_4181() /* ty=(Tensor[(7, 8, 14), float64],) */;
  %528 = %527.0;
  (%528,)
}

def @func_4611() -> (Tensor[(7, 8, 14), float32], Tensor[(48), float64], Tensor[(48), float64]) {
  %529 = @func_1554() /* ty=(Tensor[(7, 8, 14), float32],) */;
  %530 = cast(meta[relay.Constant][23] /* ty=Tensor[(48), float64] */, dtype="float64") /* ty=Tensor[(48), float64] */;
  %531 = reshape(%530, newshape=[48]) /* ty=Tensor[(48), float64] */;
  %532 = @func_4587(%531) /* ty=(Tensor[(7, 8, 14), float32], Tensor[(3, 8, 2), float64], Tensor[(48), float64]) */;
  %533 = %529.0;
  %534 = %532.2;
  (%533, %534, meta[relay.Constant][23] /* ty=Tensor[(48), float64] */)
}

def @func_8540() -> (Tensor[(7, 8, 14), float32],) {
  %535 = @func_2092() /* ty=Tensor[(7, 8, 14), float32] */;
  (%535,)
}

def @func_8676() -> (Tensor[(7, 8, 14), float64], Tensor[(7, 8, 14), float32]) {
  %536 = @func_2159() /* ty=Tensor[(7, 8, 14), float64] */;
  %537 = @func_3435() /* ty=Tensor[(7, 8, 14), float32] */;
  (%536, %537)
}

def @func_7740() -> (Tensor[(7, 8, 14), float64],) {
  %538 = @func_2137() /* ty=(Tensor[(7, 8, 14), float64], Tensor[(7, 8, 14), float64]) */;
  %539 = %538.0;
  (%539,)
}

def @func_11287() -> (Tensor[(48), float64], Tensor[(7, 15, 4), float32], Tensor[(420), float64], Tensor[(16, 1, 6), float32]) {
  %540 = @func_11044() /* ty=(Tensor[(7, 8, 14), float32], Tensor[(7, 8, 14), bool], Tensor[(48), float64]) */;
  %541 = cast(meta[relay.Constant][24] /* ty=Tensor[(420), float64] */, dtype="float64") /* ty=Tensor[(420), float64] */;
  %542 = reshape(%541, newshape=[7, 15, 4]) /* ty=Tensor[(7, 15, 4), float64] */;
  %543 = @func_9858(%542) /* ty=(Tensor[(7, 15, 4), float32],) */;
  %544 = %540.2;
  %545 = %543.0;
  %546 = @func_9183() /* ty=Tensor[(16, 1, 6), float32] */;
  (%544, %545, meta[relay.Constant][24] /* ty=Tensor[(420), float64] */, %546)
}

def @func_10379(%var_10339: Tensor[(2, 7, 5), float64]) -> (Tensor[(2, 7, 5), float64], Tensor[(7, 8, 14), float32], Tensor[(784), float32], Tensor[(7, 8, 14), float64], Tensor[(7, 8, 14), float32], uint16) {
  %547 = cast(%var_10339, dtype="float64") /* ty=Tensor[(2, 7, 5), float64] */;
  %548 = cast(meta[relay.Constant][25] /* ty=Tensor[(784), float32] */, dtype="float32") /* ty=Tensor[(784), float32] */;
  %549 = reshape(%548, newshape=[7, 8, 14]) /* ty=Tensor[(7, 8, 14), float32] */;
  %550 = @func_4009(%549) /* ty=(Tensor[(14, 16, 16), float32], Tensor[(3584, 1), float32], Tensor[(7, 8, 14), bool], Tensor[(7, 8, 14), float64], Tensor[(7, 8, 14), float32], Tensor[(7, 8, 14), float32], Tensor[(7, 8, 14), float32]) */;
  %551 = @func_6261() /* ty=(Tensor[(7, 8, 14), float64], Tensor[(7, 8, 14), float64], Tensor[(7, 8, 14), float64], Tensor[(7, 8, 14), float32], Tensor[(5, ?, 15), uint64], Tensor[(75, 1), uint64], Tensor[(7, 8, 14), float32]) */;
  %552 = cast(meta[relay.Constant][26] /* ty=uint16 */, dtype="uint16") /* ty=uint16 */;
  %553 = reshape(%552, newshape=[]) /* ty=uint16 */;
  %554 = @func_9121(%553) /* ty=(Tensor[(7, 8, 14), float32], Tensor[(7, 8, 14), float32], uint16) */;
  %555 = log2(%547) /* ty=Tensor[(2, 7, 5), float64] */;
  %556 = %550.5;
  %557 = %551.1;
  %558 = %554.0;
  (%555, %556, meta[relay.Constant][25] /* ty=Tensor[(784), float32] */, %557, %558, meta[relay.Constant][26] /* ty=uint16 */)
}

def @func_6754() -> Tensor[(7, 8, 14), float64] {
  @func_5023() /* ty=Tensor[(7, 8, 14), float64] */
}

def @func_7534() -> (Tensor[(7, 8, 14), float32],) {
  %559 = @func_3568() /* ty=(Tensor[(7, 8, 14), float32],) */;
  %560 = %559.0;
  (%560,)
}

def @func_4287() -> (Tensor[(7, 8, 14), float64], Tensor[(7, 8, 14), float32], Tensor[(3584, 1), float32], Tensor[(7, 8, 14), float64]) {
  %561 = @func_3455() /* ty=(Tensor[(7, 8, 14), float64],) */;
  %562 = %561.0;
  %563 = cast(%562, dtype="float32") /* ty=Tensor[(7, 8, 14), float32] */;
  %564 = reshape(%563, newshape=[7, 8, 14]) /* ty=Tensor[(7, 8, 14), float32] */;
  %565 = @func_4009(%564) /* ty=(Tensor[(14, 16, 16), float32], Tensor[(3584, 1), float32], Tensor[(7, 8, 14), bool], Tensor[(7, 8, 14), float64], Tensor[(7, 8, 14), float32], Tensor[(7, 8, 14), float32], Tensor[(7, 8, 14), float32]) */;
  %566 = @func_3582() /* ty=(Tensor[(7, 8, 14), float64],) */;
  %567 = @func_2416() /* ty=Tensor[(7, 8, 14), float32] */;
  %568 = %565.1;
  %569 = %566.0;
  (%562, %567, %568, %569)
}

def @func_9225() -> (Tensor[(7, 8, 14), float64], Tensor[(96), float32]) {
  %570 = @func_1172() /* ty=Tensor[(7, 8, 14), float64] */;
  %571 = @func_5744() /* ty=Tensor[(96), float32] */;
  (%570, %571)
}

def @func_2172(%var_2161: Tensor[(3, 8, 2), float64], %var_2162: Tensor[(3, 8, 2), float64]) -> Tensor[(3, 8, 2), float64] {
  %572 = cast(%var_2162, dtype="float64") /* ty=Tensor[(3, 8, 2), float64] */;
  %573 = shape_of(%var_2161, dtype="int32") /* ty=Tensor[(3), int32] */;
  %574 = cast(%var_2161, dtype="float64") /* ty=Tensor[(3, 8, 2), float64] */;
  %575 = dyn.reshape(%572, %573, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  floor_mod(%574, %575) /* ty=Tensor[(3, 8, 2), float64] */
}

def @func_3771() -> Tensor[(7, 8, 14), float64] {
  %576 = @func_2487() /* ty=(Tensor[(7, 8, 14), float64],) */;
  %576.0
}

def @func_3582() -> (Tensor[(7, 8, 14), float64],) {
  %577 = @func_2487() /* ty=(Tensor[(7, 8, 14), float64],) */;
  %578 = %577.0;
  (%578,)
}

def @func_5552() -> Tensor[(7, 8, 14), float64] {
  @func_1291() /* ty=Tensor[(7, 8, 14), float64] */
}

def @func_1964(%var_1954: Tensor[(420), uint64]) -> (Tensor[(7, 8, 14), float32], Tensor[(7, 8, 14), float32], Tensor[(14, 2, 15), uint64], Tensor[(420), uint64]) {
  %579 = cast(%var_1954, dtype="uint64") /* ty=Tensor[(420), uint64] */;
  %580 = cast(%var_1954, dtype="uint64") /* ty=Tensor[(420), uint64] */;
  %581 = reshape(%579, newshape=[14, 2, 15]) /* ty=Tensor[(14, 2, 15), uint64] */;
  %582 = reshape(%580, newshape=[14, 2, 15]) /* ty=Tensor[(14, 2, 15), uint64] */;
  %583 = @func_1357() /* ty=Tensor[(7, 8, 14), float32] */;
  %584 = @func_1279() /* ty=Tensor[(7, 8, 14), float32] */;
  %585 = @func_1036(%581, %582) /* ty=Tensor[(14, 2, 15), uint64] */;
  (%583, %584, %585, %var_1954)
}

def @func_3240() -> (Tensor[(7, 8, 14), float64], Tensor[(7, 8, 14), float32]) {
  %586 = @func_1172() /* ty=Tensor[(7, 8, 14), float64] */;
  %587 = @func_2416() /* ty=Tensor[(7, 8, 14), float32] */;
  (%586, %587)
}

def @func_4181() -> (Tensor[(7, 8, 14), float64],) {
  %588 = @func_2705() /* ty=(Tensor[(7, 8, 14), float64],) */;
  %589 = %588.0;
  (%589,)
}

def @func_8811() -> (Tensor[(7, 8, 14), float64], Tensor[(7, 8, 14), float32], Tensor[(1344), bool]) {
  %590 = @func_2705() /* ty=(Tensor[(7, 8, 14), float64],) */;
  %591 = cast(meta[relay.Constant][27] /* ty=Tensor[(1344), float64] */, dtype="float64") /* ty=Tensor[(1344), float64] */;
  %592 = reshape(%591, newshape=[16, 14, 6]) /* ty=Tensor[(16, 14, 6), float64] */;
  %593 = @func_3053(%592) /* ty=(Tensor[(16, 14, 6), float64], Tensor[(7, 8, 14), float32]) */;
  %594 = cast(meta[relay.Constant][28] /* ty=Tensor[(1344), float64] */, dtype="bool") /* ty=Tensor[(1344), bool] */;
  %595 = shape_of(meta[relay.Constant][27] /* ty=Tensor[(1344), float64] */, dtype="int32") /* ty=Tensor[(1), int32] */;
  %596 = cast(meta[relay.Constant][27] /* ty=Tensor[(1344), float64] */, dtype="bool") /* ty=Tensor[(1344), bool] */;
  %597 = dyn.reshape(%594, %595, newshape=[]) /* ty=Tensor[(?), bool] */;
  %598 = %590.0;
  %599 = %593.1;
  %600 = not_equal(%596, %597) /* ty=Tensor[(1344), bool] */;
  (%598, %599, %600)
}

def @func_1036(%var_1021: Tensor[(14, 2, 15), uint64], %var_1022: Tensor[(14, 2, 15), uint64]) -> Tensor[(14, 2, 15), uint64] {
  %601 = cast(%var_1022, dtype="uint64") /* ty=Tensor[(14, 2, 15), uint64] */;
  %602 = shape_of(%var_1021, dtype="int32") /* ty=Tensor[(3), int32] */;
  %603 = cast(%var_1021, dtype="uint64") /* ty=Tensor[(14, 2, 15), uint64] */;
  %604 = dyn.reshape(%601, %602, newshape=[]) /* ty=Tensor[(?, ?, ?), uint64] */;
  right_shift(%603, %604) /* ty=Tensor[(14, 2, 15), uint64] */
}

def @func_3435() -> Tensor[(7, 8, 14), float32] {
  %605 = @func_3413() /* ty=(Tensor[(7, 8, 14), float32], Tensor[(7, 8, 14), float64]) */;
  %605.0
}

def @func_5474() -> Tensor[(96), float32] {
  %606 = @func_4041() /* ty=(Tensor[(7, 8, 14), float32], Tensor[(16, 1, 6), float32], Tensor[(96), float32]) */;
  %606.2
}

def @func_4798() -> Tensor[(7, 8, 14), float32] {
  %607 = @func_4041() /* ty=(Tensor[(7, 8, 14), float32], Tensor[(16, 1, 6), float32], Tensor[(96), float32]) */;
  %607.0
}

def @func_12138() -> (Tensor[(7, 8, 14), float32],) {
  %608 = @func_9615() /* ty=(Tensor[(7, 8, 14), float32],) */;
  %609 = %608.0;
  (%609,)
}

def @func_1357() -> Tensor[(7, 8, 14), float32] {
  %610 = @func_1172() /* ty=Tensor[(7, 8, 14), float64] */;
  %611 = cast(%610, dtype="float32") /* ty=Tensor[(7, 8, 14), float32] */;
  log10(%611) /* ty=Tensor[(7, 8, 14), float32] */
}

def @func_3139(%var_3128: Tensor[(7, 8, 14), float64]) -> (Tensor[(7, 8, 14), int8], Tensor[(5, 7), float32], Tensor[(35), float32]) {
  %612 = @func_1748() /* ty=Tensor[(7, 8, 14), float64] */;
  %613 = cast(%var_3128, dtype="int8") /* ty=Tensor[(7, 8, 14), int8] */;
  %614 = shape_of(%612, dtype="int32") /* ty=Tensor[(3), int32] */;
  %615 = cast(%612, dtype="int8") /* ty=Tensor[(7, 8, 14), int8] */;
  %616 = dyn.reshape(%613, %614, newshape=[]) /* ty=Tensor[(?, ?, ?), int8] */;
  %617 = cast(meta[relay.Constant][29] /* ty=Tensor[(35), float32] */, dtype="float32") /* ty=Tensor[(35), float32] */;
  %618 = reshape(%617, newshape=[5, 7]) /* ty=Tensor[(5, 7), float32] */;
  %619 = @func_162(%618) /* ty=(Tensor[(5, 7), float32], Tensor[(16, 1, 6), float32], Tensor[(96), float32], Tensor[(16, 1, 6), float32]) */;
  %620 = bitwise_xor(%615, %616) /* ty=Tensor[(7, 8, 14), int8] */;
  %621 = %619.0;
  (%620, %621, meta[relay.Constant][29] /* ty=Tensor[(35), float32] */)
}

def @func_12385() -> (Tensor[(7, 8, 14), float32],) {
  %622 = @func_5870() /* ty=(Tensor[(7, 8, 14), float32],) */;
  %623 = %622.0;
  (%623,)
}

def @func_3507() -> Tensor[(7, 8, 14), float32] {
  %624 = @func_2060() /* ty=(Tensor[(7, 8, 14), float32],) */;
  %624.0
}

def @func_3674() -> Tensor[(7, 8, 14), float32] {
  %625 = @func_3109() /* ty=(Tensor[(7, 8, 14), float32],) */;
  %625.0
}

def @func_8142() -> (Tensor[(7, 8, 14), float32],) {
  %626 = @func_7562() /* ty=Tensor[(7, 8, 14), float32] */;
  (%626,)
}

def @func_7562() -> Tensor[(7, 8, 14), float32] {
  %627 = @func_5870() /* ty=(Tensor[(7, 8, 14), float32],) */;
  %627.0
}

def @func_2277(%var_2268: Tensor[(7, 8, 14), float32]) -> (Tensor[(420), uint64], Tensor[(70, 6), uint64], Tensor[(7, 8, 14), bool]) {
  %628 = cast(meta[relay.Constant][30] /* ty=Tensor[(70, 6), uint64] */, dtype="uint64") /* ty=Tensor[(70, 6), uint64] */;
  %629 = reshape(%628, newshape=[420]) /* ty=Tensor[(420), uint64] */;
  %630 = @func_1707(%629) /* ty=(Tensor[(7, 8, 14), float32], Tensor[(420), uint64], Tensor[(420), uint64]) */;
  %631 = @func_1554() /* ty=(Tensor[(7, 8, 14), float32],) */;
  %632 = %631.0;
  %633 = cast(%var_2268, dtype="bool") /* ty=Tensor[(7, 8, 14), bool] */;
  %634 = shape_of(%632, dtype="int32") /* ty=Tensor[(3), int32] */;
  %635 = cast(%632, dtype="bool") /* ty=Tensor[(7, 8, 14), bool] */;
  %636 = dyn.reshape(%633, %634, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %637 = %630.1;
  %638 = less(%635, %636) /* ty=Tensor[(7, 8, 14), bool] */;
  (%637, meta[relay.Constant][30] /* ty=Tensor[(70, 6), uint64] */, %638)
}

def @func_2137() -> (Tensor[(7, 8, 14), float64], Tensor[(7, 8, 14), float64]) {
  %639 = @func_1748() /* ty=Tensor[(7, 8, 14), float64] */;
  %640 = @func_1251() /* ty=Tensor[(7, 8, 14), float64] */;
  (%639, %640)
}

def @func_5525() -> Tensor[(7, 8, 14), float64] {
  @func_1291() /* ty=Tensor[(7, 8, 14), float64] */
}

def @func_2804() -> (Tensor[(7, 8, 14), float64], Tensor[(7, 8, 14), float32]) {
  %641 = @func_1251() /* ty=Tensor[(7, 8, 14), float64] */;
  %642 = @func_2416() /* ty=Tensor[(7, 8, 14), float32] */;
  (%641, %642)
}

def @func_162(%var_126: Tensor[(5, 7), float32]) -> (Tensor[(5, 7), float32], Tensor[(16, 1, 6), float32], Tensor[(96), float32], Tensor[(16, 1, 6), float32]) {
  %643 = cast(%var_126, dtype="float32") /* ty=Tensor[(5, 7), float32] */;
  %644 = cast(meta[relay.Constant][31] /* ty=Tensor[(96), float32] */, dtype="float32") /* ty=Tensor[(96), float32] */;
  %645 = reshape(%644, newshape=[16, 1, 6]) /* ty=Tensor[(16, 1, 6), float32] */;
  %646 = @func_77(%645) /* ty=(Tensor[(16, 1, 6), float32],) */;
  %647 = %646.0;
  %648 = cast(%647, dtype="float32") /* ty=Tensor[(16, 1, 6), float32] */;
  %649 = reshape(%648, newshape=[16, 1, 6]) /* ty=Tensor[(16, 1, 6), float32] */;
  %650 = @func_77(%649) /* ty=(Tensor[(16, 1, 6), float32],) */;
  %651 = log10(%643) /* ty=Tensor[(5, 7), float32] */;
  %652 = %650.0;
  (%651, %647, meta[relay.Constant][31] /* ty=Tensor[(96), float32] */, %652)
}

def @func_3546() -> (Tensor[(7, 8, 14), float32], Tensor[(7, 8, 14), float64]) {
  %653 = @func_2705() /* ty=(Tensor[(7, 8, 14), float64],) */;
  %654 = @func_3162() /* ty=Tensor[(7, 8, 14), float32] */;
  %655 = %653.0;
  (%654, %655)
}

def @func_8436() -> (Tensor[(16, 1, 6), float32],) {
  %656 = @func_7127() /* ty=Tensor[(16, 1, 6), float32] */;
  (%656,)
}

def @func_9372(%var_9320: Tensor[(15, 10, 16), float32], %var_9343: Tensor[(15, 10, 16), float32]) -> (Tensor[(16, 1, 6), float32], Tensor[(15, 10, 16), int64], Tensor[(7, 8, 14), uint32], Tensor[(2, 392), float64], Tensor[(13, 3, 14), float64], Tensor[(546), float64]) {
  %657 = @func_8436() /* ty=(Tensor[(16, 1, 6), float32],) */;
  %658 = cast(%var_9320, dtype="float32") /* ty=Tensor[(15, 10, 16), float32] */;
  %659 = erf(%658) /* ty=Tensor[(15, 10, 16), float32] */;
  %660 = cast(%var_9343, dtype="int64") /* ty=Tensor[(15, 10, 16), int64] */;
  %661 = shape_of(%659, dtype="int32") /* ty=Tensor[(3), int32] */;
  %662 = cast(%659, dtype="int64") /* ty=Tensor[(15, 10, 16), int64] */;
  %663 = dyn.reshape(%660, %661, newshape=[]) /* ty=Tensor[(?, ?, ?), int64] */;
  %664 = cast(meta[relay.Constant][32] /* ty=Tensor[(2, 392), float64] */, dtype="float64") /* ty=Tensor[(2, 392), float64] */;
  %665 = reshape(%664, newshape=[7, 8, 14]) /* ty=Tensor[(7, 8, 14), float64] */;
  %666 = cast(meta[relay.Constant][33] /* ty=Tensor[(546), float64] */, dtype="float64") /* ty=Tensor[(546), float64] */;
  %667 = reshape(%666, newshape=[13, 3, 14]) /* ty=Tensor[(13, 3, 14), float64] */;
  %668 = @func_3200(%667) /* ty=(Tensor[(13, 3, 14), float64],) */;
  %669 = %657.0;
  %670 = subtract(%662, %663) /* ty=Tensor[(15, 10, 16), int64] */;
  %671 = @func_2785(%665) /* ty=Tensor[(7, 8, 14), uint32] */;
  %672 = %668.0;
  (%669, %670, %671, meta[relay.Constant][32] /* ty=Tensor[(2, 392), float64] */, %672, meta[relay.Constant][33] /* ty=Tensor[(546), float64] */)
}

def @func_10267(%var_10261: Tensor[(7, 8, 14), float64]) -> (Tensor[(7, 8, 14), bool],) {
  %673 = @func_3413() /* ty=(Tensor[(7, 8, 14), float32], Tensor[(7, 8, 14), float64]) */;
  %674 = %673.1;
  %675 = cast(%var_10261, dtype="bool") /* ty=Tensor[(7, 8, 14), bool] */;
  %676 = shape_of(%674, dtype="int32") /* ty=Tensor[(3), int32] */;
  %677 = cast(%674, dtype="bool") /* ty=Tensor[(7, 8, 14), bool] */;
  %678 = dyn.reshape(%675, %676, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %679 = logical_or(%677, %678) /* ty=Tensor[(7, 8, 14), bool] */;
  (%679,)
}

def @func_1076(%var_1046: Tensor[(9, 15, 3), int32], %var_1060: Tensor[(616), uint32], %var_1061: Tensor[(2, 48), float32]) -> (Tensor[(9, 15, 3), int32], Tensor[(616), uint32], Tensor[(2, 48), bool], Tensor[(2, 48), float32]) {
  %680 = cast(meta[relay.Constant][34] /* ty=Tensor[(9, 15, 3), int32] */, dtype="int32") /* ty=Tensor[(9, 15, 3), int32] */;
  %681 = shape_of(%var_1046, dtype="int32") /* ty=Tensor[(3), int32] */;
  %682 = cast(%var_1046, dtype="int32") /* ty=Tensor[(9, 15, 3), int32] */;
  %683 = dyn.reshape(%680, %681, newshape=[]) /* ty=Tensor[(?, ?, ?), int32] */;
  %684 = cast(%var_1060, dtype="uint32") /* ty=Tensor[(616), uint32] */;
  %685 = cast(%var_1060, dtype="uint32") /* ty=Tensor[(616), uint32] */;
  %686 = cast(%var_1061, dtype="float32") /* ty=Tensor[(2, 48), float32] */;
  %687 = reshape(%684, newshape=[11, 14, 4]) /* ty=Tensor[(11, 14, 4), uint32] */;
  %688 = reshape(%685, newshape=[11, 14, 4]) /* ty=Tensor[(11, 14, 4), uint32] */;
  %689 = reshape(%686, newshape=[4, 24]) /* ty=Tensor[(4, 24), float32] */;
  %690 = @func_317(%687, %688, %689) /* ty=(Tensor[(11, 14, 4), uint32], Tensor[(16, 1, 6), float32], Tensor[(4, 24), float32]) */;
  %691 = %690.1;
  %692 = cast(%691, dtype="bool") /* ty=Tensor[(16, 1, 6), bool] */;
  %693 = shape_of(%var_1061, dtype="int32") /* ty=Tensor[(2), int32] */;
  %694 = cast(%var_1061, dtype="bool") /* ty=Tensor[(2, 48), bool] */;
  %695 = dyn.reshape(%692, %693, newshape=[]) /* ty=Tensor[(?, ?), bool] */;
  %696 = cast(meta[relay.Constant][35] /* ty=Tensor[(2, 48), float32] */, dtype="float32") /* ty=Tensor[(2, 48), float32] */;
  %697 = shape_of(%var_1061, dtype="int32") /* ty=Tensor[(2), int32] */;
  %698 = cast(%var_1061, dtype="float32") /* ty=Tensor[(2, 48), float32] */;
  %699 = dyn.reshape(%696, %697, newshape=[]) /* ty=Tensor[(?, ?), float32] */;
  %700 = maximum(%682, %683) /* ty=Tensor[(9, 15, 3), int32] */;
  %701 = greater_equal(%694, %695) /* ty=Tensor[(2, 48), bool] */;
  %702 = divide(%698, %699) /* ty=Tensor[(2, 48), float32] */;
  (%700, %var_1060, %701, %702)
}

def @func_9977() -> Tensor[(7, 8, 14), float32] {
  %703 = @func_1554() /* ty=(Tensor[(7, 8, 14), float32],) */;
  %703.0
}

def @func_11486() -> (Tensor[(7, 8, 14), float64], Tensor[(7, 15, 4), float32], Tensor[(7, 8, 14), float32]) {
  %704 = @func_7829() /* ty=(Tensor[(7, 8, 14), float64],) */;
  %705 = @func_10619() /* ty=(Tensor[(7, 8, 14), float32], Tensor[(96), float32], Tensor[(420), float64], Tensor[(7, 15, 4), float32]) */;
  %706 = %704.0;
  %707 = %705.3;
  %708 = @func_10397() /* ty=Tensor[(7, 8, 14), float32] */;
  (%706, %707, %708)
}

def @func_7940() -> (Tensor[(7, 8, 14), float32],) {
  %709 = @func_7715() /* ty=(Tensor[(7, 8, 14), float32], Tensor[(96), float32]) */;
  %710 = %709.0;
  (%710,)
}

def @func_8023(%var_7964: Tensor[(3584), float32]) -> (Tensor[(7, 8, 14), float64], Tensor[(3584), float32], Tensor[(7, 8, 14), float64], Tensor[(14, 16, 16), float32], Tensor[(3584), float32]) {
  %711 = cast(%var_7964, dtype="float32") /* ty=Tensor[(3584), float32] */;
  %712 = reshape(%711, newshape=[14, 16, 16]) /* ty=Tensor[(14, 16, 16), float32] */;
  %713 = @func_1475(%712) /* ty=(Tensor[(14, 16, 16), float32],) */;
  %714 = %713.0;
  %715 = cast(%714, dtype="float32") /* ty=Tensor[(14, 16, 16), float32] */;
  %716 = shape_of(%var_7964, dtype="int32") /* ty=Tensor[(1), int32] */;
  %717 = cast(%var_7964, dtype="float32") /* ty=Tensor[(3584), float32] */;
  %718 = dyn.reshape(%715, %716, newshape=[]) /* ty=Tensor[(?), float32] */;
  %719 = @func_6947() /* ty=(Tensor[(7, 8, 14), float64],) */;
  %720 = cast(%714, dtype="float64") /* ty=Tensor[(14, 16, 16), float64] */;
  %721 = log(%720) /* ty=Tensor[(14, 16, 16), float64] */;
  %722 = cast(%721, dtype="float32") /* ty=Tensor[(14, 16, 16), float32] */;
  %723 = cast(%var_7964, dtype="float32") /* ty=Tensor[(3584), float32] */;
  %724 = erf(%723) /* ty=Tensor[(3584), float32] */;
  %725 = cast(%724, dtype="bool") /* ty=Tensor[(3584), bool] */;
  %726 = shape_of(%var_7964, dtype="int32") /* ty=Tensor[(1), int32] */;
  %727 = cast(%var_7964, dtype="bool") /* ty=Tensor[(3584), bool] */;
  %728 = dyn.reshape(%725, %726, newshape=[]) /* ty=Tensor[(?), bool] */;
  %729 = logical_and(%727, %728) /* ty=Tensor[(3584), bool] */;
  %730 = cast(%729, dtype="float32") /* ty=Tensor[(3584), float32] */;
  %731 = shape_of(%724, dtype="int32") /* ty=Tensor[(1), int32] */;
  %732 = cast(%724, dtype="float32") /* ty=Tensor[(3584), float32] */;
  %733 = dyn.reshape(%730, %731, newshape=[]) /* ty=Tensor[(?), float32] */;
  %734 = @func_5023() /* ty=Tensor[(7, 8, 14), float64] */;
  %735 = divide(%717, %718) /* ty=Tensor[(3584), float32] */;
  %736 = %719.0;
  %737 = sin(%722) /* ty=Tensor[(14, 16, 16), float32] */;
  %738 = floor_divide(%732, %733) /* ty=Tensor[(3584), float32] */;
  (%734, %735, %736, %737, %738)
}

def @func_9615() -> (Tensor[(7, 8, 14), float32],) {
  %739 = @func_8231() /* ty=Tensor[(7, 8, 14), float32] */;
  (%739,)
}

def @func_6469(%var_6390: Tensor[(11, 4, 15), float64]) -> (Tensor[(11, 4, 15), float64], Tensor[(7, 8, 14), float32], Tensor[(7, 8, 14), float64], Tensor[(3, 8, 2), float64], Tensor[(48), float64], Tensor[(7, 8, 14), float32]) {
  %740 = cast(meta[relay.Constant][36] /* ty=Tensor[(11, 4, 15), float64] */, dtype="float64") /* ty=Tensor[(11, 4, 15), float64] */;
  %741 = shape_of(%var_6390, dtype="int32") /* ty=Tensor[(3), int32] */;
  %742 = cast(%var_6390, dtype="float64") /* ty=Tensor[(11, 4, 15), float64] */;
  %743 = dyn.reshape(%740, %741, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %744 = cast(meta[relay.Constant][37] /* ty=Tensor[(48), float64] */, dtype="float64") /* ty=Tensor[(48), float64] */;
  %745 = reshape(%744, newshape=[48]) /* ty=Tensor[(48), float64] */;
  %746 = @func_4587(%745) /* ty=(Tensor[(7, 8, 14), float32], Tensor[(3, 8, 2), float64], Tensor[(48), float64]) */;
  %747 = @func_6034() /* ty=(Tensor[(7, 8, 14), float32],) */;
  %748 = mod(%742, %743) /* ty=Tensor[(11, 4, 15), float64] */;
  %749 = @func_3674() /* ty=Tensor[(7, 8, 14), float32] */;
  %750 = @func_5832() /* ty=Tensor[(7, 8, 14), float64] */;
  %751 = %746.1;
  %752 = %747.0;
  (%748, %749, %750, %751, meta[relay.Constant][37] /* ty=Tensor[(48), float64] */, %752)
}

def @func_7127() -> Tensor[(16, 1, 6), float32] {
  %753 = @func_4041() /* ty=(Tensor[(7, 8, 14), float32], Tensor[(16, 1, 6), float32], Tensor[(96), float32]) */;
  %753.1
}

def @func_6540(%var_6511: Tensor[(420), uint64]) -> (Tensor[(7, 8, 14), float64], Tensor[(420), uint64], Tensor[(420), uint64], Tensor[(96), float32]) {
  %754 = cast(%var_6511, dtype="uint64") /* ty=Tensor[(420), uint64] */;
  %755 = reshape(%754, newshape=[420]) /* ty=Tensor[(420), uint64] */;
  %756 = @func_1707(%755) /* ty=(Tensor[(7, 8, 14), float32], Tensor[(420), uint64], Tensor[(420), uint64]) */;
  %757 = @func_2159() /* ty=Tensor[(7, 8, 14), float64] */;
  %758 = %756.1;
  %759 = @func_5744() /* ty=Tensor[(96), float32] */;
  (%757, %758, %var_6511, %759)
}

def @func_10982() -> (Tensor[(7, 8, 14), float64], Tensor[(7, 8, 14), float64], Tensor[(7, 8, 14), float64]) {
  %760 = @func_5461() /* ty=(Tensor[(7, 8, 14), float64], Tensor[(7, 8, 14), float32]) */;
  %761 = @func_9242() /* ty=Tensor[(7, 8, 14), float64] */;
  %762 = %760.0;
  %763 = @func_6754() /* ty=Tensor[(7, 8, 14), float64] */;
  (%761, %762, %763)
}

def @func_12344() -> (Tensor[(7, 8, 14), float32],) {
  %764 = @func_8540() /* ty=(Tensor[(7, 8, 14), float32],) */;
  %765 = %764.0;
  (%765,)
}

def @func_1331(%var_1317: Tensor[(420), uint64]) -> (Tensor[(7, 8, 14), float64], Tensor[(14, 2, 15), uint64], Tensor[(420), uint64]) {
  %766 = cast(%var_1317, dtype="uint64") /* ty=Tensor[(420), uint64] */;
  %767 = cast(%var_1317, dtype="uint64") /* ty=Tensor[(420), uint64] */;
  %768 = reshape(%766, newshape=[14, 2, 15]) /* ty=Tensor[(14, 2, 15), uint64] */;
  %769 = reshape(%767, newshape=[14, 2, 15]) /* ty=Tensor[(14, 2, 15), uint64] */;
  %770 = @func_1291() /* ty=Tensor[(7, 8, 14), float64] */;
  %771 = @func_1036(%768, %769) /* ty=Tensor[(14, 2, 15), uint64] */;
  (%770, %771, %var_1317)
}

def @func_6034() -> (Tensor[(7, 8, 14), float32],) {
  %772 = @func_2060() /* ty=(Tensor[(7, 8, 14), float32],) */;
  %773 = %772.0;
  (%773,)
}

def @func_3386(%var_3313: Tensor[(13, 3, 2), uint64]) -> (Tensor[(13, 3, 2), uint64], Tensor[(13, 3, 2), float64], Tensor[(13, 3, 2), float32], Tensor[(7, 8, 14), float32], Tensor[(7, 8, 14), float32], Tensor[(7, 8, 14), float32], Tensor[(7, 8, 14), float32], Tensor[(1344), float64], Tensor[(7, 8, 14), float32]) {
  %774 = cast(meta[relay.Constant][38] /* ty=Tensor[(13, 3, 2), uint64] */, dtype="uint64") /* ty=Tensor[(13, 3, 2), uint64] */;
  %775 = shape_of(%var_3313, dtype="int32") /* ty=Tensor[(3), int32] */;
  %776 = cast(%var_3313, dtype="uint64") /* ty=Tensor[(13, 3, 2), uint64] */;
  %777 = dyn.reshape(%774, %775, newshape=[]) /* ty=Tensor[(?, ?, ?), uint64] */;
  %778 = cast(%var_3313, dtype="float64") /* ty=Tensor[(13, 3, 2), float64] */;
  %779 = cast(%var_3313, dtype="float32") /* ty=Tensor[(13, 3, 2), float32] */;
  %780 = cast(meta[relay.Constant][39] /* ty=Tensor[(1344), float64] */, dtype="float64") /* ty=Tensor[(1344), float64] */;
  %781 = reshape(%780, newshape=[16, 14, 6]) /* ty=Tensor[(16, 14, 6), float64] */;
  %782 = @func_3053(%781) /* ty=(Tensor[(16, 14, 6), float64], Tensor[(7, 8, 14), float32]) */;
  %783 = @func_1357() /* ty=Tensor[(7, 8, 14), float32] */;
  %784 = cast(%783, dtype="float32") /* ty=Tensor[(7, 8, 14), float32] */;
  %785 = right_shift(%776, %777) /* ty=Tensor[(13, 3, 2), uint64] */;
  %786 = tan(%778) /* ty=Tensor[(13, 3, 2), float64] */;
  %787 = log2(%779) /* ty=Tensor[(13, 3, 2), float32] */;
  %788 = @func_1279() /* ty=Tensor[(7, 8, 14), float32] */;
  %789 = @func_3162() /* ty=Tensor[(7, 8, 14), float32] */;
  %790 = @func_1357() /* ty=Tensor[(7, 8, 14), float32] */;
  %791 = %782.1;
  %792 = acosh(%784) /* ty=Tensor[(7, 8, 14), float32] */;
  (%785, %786, %787, %788, %789, %790, %791, meta[relay.Constant][39] /* ty=Tensor[(1344), float64] */, %792)
}

def @func_2871(%var_2866: Tensor[(9, 4, 16), float64]) -> (Tensor[(9, 4, 16), float64],) {
  %793 = cast(meta[relay.Constant][40] /* ty=Tensor[(9, 4, 16), float64] */, dtype="float64") /* ty=Tensor[(9, 4, 16), float64] */;
  %794 = shape_of(%var_2866, dtype="int32") /* ty=Tensor[(3), int32] */;
  %795 = cast(%var_2866, dtype="float64") /* ty=Tensor[(9, 4, 16), float64] */;
  %796 = dyn.reshape(%793, %794, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %797 = power(%795, %796) /* ty=Tensor[(9, 4, 16), float64] */;
  (%797,)
}

def @func_5585() -> (Tensor[(7, 8, 14), float64], Tensor[(7, 8, 14), bool]) {
  %798 = @func_2804() /* ty=(Tensor[(7, 8, 14), float64], Tensor[(7, 8, 14), float32]) */;
  %799 = %798.0;
  %800 = cast(%799, dtype="float32") /* ty=Tensor[(7, 8, 14), float32] */;
  %801 = reshape(%800, newshape=[7, 8, 14]) /* ty=Tensor[(7, 8, 14), float32] */;
  %802 = @func_2277(%801) /* ty=(Tensor[(420), uint64], Tensor[(70, 6), uint64], Tensor[(7, 8, 14), bool]) */;
  %803 = %802.2;
  (%799, %803)
}

def @func_7361(%var_7345: uint16) -> (Tensor[(13, 8, 12), uint16], Tensor[(7, 8, 14), float32]) {
  %804 = cast(%var_7345, dtype="uint16") /* ty=uint16 */;
  %805 = cast(meta[relay.Constant][41] /* ty=Tensor[(13, 8, 12), uint16] */, dtype="uint16") /* ty=Tensor[(13, 8, 12), uint16] */;
  %806 = @func_6814() /* ty=(Tensor[(7, 8, 14), float32],) */;
  %807 = minimum(%804, %805) /* ty=Tensor[(13, 8, 12), uint16] */;
  %808 = %806.0;
  (%807, %808)
}

def @func_4522() -> (Tensor[(7, 8, 14), float64],) {
  %809 = @func_2137() /* ty=(Tensor[(7, 8, 14), float64], Tensor[(7, 8, 14), float64]) */;
  %810 = %809.1;
  (%810,)
}

def @func_2159() -> Tensor[(7, 8, 14), float64] {
  %811 = @func_2137() /* ty=(Tensor[(7, 8, 14), float64], Tensor[(7, 8, 14), float64]) */;
  %811.1
}

def @func_2196() -> Tensor[(7, 8, 14), float32] {
  @func_1279() /* ty=Tensor[(7, 8, 14), float32] */
}

def @main(%var_12608: uint16, %var_12609: Tensor[(11, 13, 10), uint16]) -> Tensor[(11, 13, 10), uint16] {
  %812 = cast(%var_12608, dtype="uint16") /* ty=uint16 */;
  %813 = cast(%var_12609, dtype="uint16") /* ty=Tensor[(11, 13, 10), uint16] */;
  maximum(%812, %813) /* ty=Tensor[(11, 13, 10), uint16] */
}

def @func_9121(%var_9090: uint16) -> (Tensor[(7, 8, 14), float32], Tensor[(7, 8, 14), float32], uint16) {
  %814 = cast(%var_9090, dtype="uint16") /* ty=uint16 */;
  %815 = reshape(%814, newshape=[]) /* ty=uint16 */;
  %816 = @func_7361(%815) /* ty=(Tensor[(13, 8, 12), uint16], Tensor[(7, 8, 14), float32]) */;
  %817 = @func_2416() /* ty=Tensor[(7, 8, 14), float32] */;
  %818 = %816.1;
  (%817, %818, %var_9090)
}

def @func_10748() -> (Tensor[(7, 8, 14), float32], Tensor[(7, 8, 14), float64]) {
  %819 = @func_9225() /* ty=(Tensor[(7, 8, 14), float64], Tensor[(96), float32]) */;
  %820 = @func_3162() /* ty=Tensor[(7, 8, 14), float32] */;
  %821 = %819.0;
  (%820, %821)
}

def @func_11941(%var_11924: Tensor[(9, 5, 14), float64]) -> (Tensor[(9, 5, 14), float64], Tensor[(7, 8, 14), float64]) {
  %822 = cast(%var_11924, dtype="float64") /* ty=Tensor[(9, 5, 14), float64] */;
  %823 = @func_2137() /* ty=(Tensor[(7, 8, 14), float64], Tensor[(7, 8, 14), float64]) */;
  %824 = sqrt(%822) /* ty=Tensor[(9, 5, 14), float64] */;
  %825 = %823.0;
  (%824, %825)
}

def @func_10909() -> Tensor[(7, 8, 14), float32] {
  %826 = @func_3546() /* ty=(Tensor[(7, 8, 14), float32], Tensor[(7, 8, 14), float64]) */;
  %826.0
}

def @func_11532() -> (Tensor[(16, 1, 6), float32],) {
  %827 = @func_8436() /* ty=(Tensor[(16, 1, 6), float32],) */;
  %828 = %827.0;
  (%828,)
}

def @func_12106(%var_12078: Tensor[(6, 6, 8), float64], %var_12103: Tensor[(660), float64]) -> (Tensor[(7, 8, 14), float32], Tensor[(72, 4), float64], Tensor[(6, 6, 8), float32], Tensor[(7, 8, 14), float32], Tensor[(660), float64]) {
  %829 = cast(meta[relay.Constant][42] /* ty=Tensor[(72, 4), float64] */, dtype="float64") /* ty=Tensor[(72, 4), float64] */;
  %830 = reshape(%829, newshape=[6, 6, 8]) /* ty=Tensor[(6, 6, 8), float64] */;
  %831 = @func_6636(%830) /* ty=(Tensor[(6, 6, 8), float64],) */;
  %832 = %831.0;
  %833 = cast(%var_12078, dtype="bool") /* ty=Tensor[(6, 6, 8), bool] */;
  %834 = shape_of(%832, dtype="int32") /* ty=Tensor[(3), int32] */;
  %835 = cast(%832, dtype="bool") /* ty=Tensor[(6, 6, 8), bool] */;
  %836 = dyn.reshape(%833, %834, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %837 = logical_and(%835, %836) /* ty=Tensor[(6, 6, 8), bool] */;
  %838 = cast(%var_12078, dtype="float32") /* ty=Tensor[(6, 6, 8), float32] */;
  %839 = shape_of(%837, dtype="int32") /* ty=Tensor[(3), int32] */;
  %840 = cast(%837, dtype="float32") /* ty=Tensor[(6, 6, 8), float32] */;
  %841 = dyn.reshape(%838, %839, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %842 = cast(%var_12103, dtype="float64") /* ty=Tensor[(660), float64] */;
  %843 = reshape(%842, newshape=[11, 4, 15]) /* ty=Tensor[(11, 4, 15), float64] */;
  %844 = @func_6469(%843) /* ty=(Tensor[(11, 4, 15), float64], Tensor[(7, 8, 14), float32], Tensor[(7, 8, 14), float64], Tensor[(3, 8, 2), float64], Tensor[(48), float64], Tensor[(7, 8, 14), float32]) */;
  %845 = @func_10397() /* ty=Tensor[(7, 8, 14), float32] */;
  %846 = power(%840, %841) /* ty=Tensor[(6, 6, 8), float32] */;
  %847 = %844.5;
  (%845, meta[relay.Constant][42] /* ty=Tensor[(72, 4), float64] */, %846, %847, %var_12103)
}

def @func_2785(%var_2780: Tensor[(7, 8, 14), float64]) -> Tensor[(7, 8, 14), uint32] {
  %848 = @func_1291() /* ty=Tensor[(7, 8, 14), float64] */;
  %849 = cast(%var_2780, dtype="uint32") /* ty=Tensor[(7, 8, 14), uint32] */;
  %850 = shape_of(%848, dtype="int32") /* ty=Tensor[(3), int32] */;
  %851 = cast(%848, dtype="uint32") /* ty=Tensor[(7, 8, 14), uint32] */;
  %852 = dyn.reshape(%849, %850, newshape=[]) /* ty=Tensor[(?, ?, ?), uint32] */;
  add(%851, %852) /* ty=Tensor[(7, 8, 14), uint32] */
}

def @func_3823(%var_3805: Tensor[(7, 8, 14), float32]) -> (Tensor[(7, 8, 14), int32],) {
  %853 = @func_2060() /* ty=(Tensor[(7, 8, 14), float32],) */;
  %854 = %853.0;
  %855 = cast(%var_3805, dtype="int32") /* ty=Tensor[(7, 8, 14), int32] */;
  %856 = shape_of(%854, dtype="int32") /* ty=Tensor[(3), int32] */;
  %857 = cast(%854, dtype="int32") /* ty=Tensor[(7, 8, 14), int32] */;
  %858 = dyn.reshape(%855, %856, newshape=[]) /* ty=Tensor[(?, ?, ?), int32] */;
  %859 = right_shift(%857, %858) /* ty=Tensor[(7, 8, 14), int32] */;
  (%859,)
}

def @func_6636(%var_6633: Tensor[(6, 6, 8), float64]) -> (Tensor[(6, 6, 8), float64],) {
  %860 = cast(%var_6633, dtype="float64") /* ty=Tensor[(6, 6, 8), float64] */;
  %861 = acosh(%860) /* ty=Tensor[(6, 6, 8), float64] */;
  (%861,)
}

def @func_4760() -> (Tensor[(7, 8, 14), float32], Tensor[(7, 8, 14), float32], Tensor[(7, 8, 14), uint32]) {
  %862 = @func_2416() /* ty=Tensor[(7, 8, 14), float32] */;
  %863 = cast(%862, dtype="float64") /* ty=Tensor[(7, 8, 14), float64] */;
  %864 = reshape(%863, newshape=[7, 8, 14]) /* ty=Tensor[(7, 8, 14), float64] */;
  %865 = @func_2038() /* ty=Tensor[(7, 8, 14), float32] */;
  %866 = @func_2785(%864) /* ty=Tensor[(7, 8, 14), uint32] */;
  (%865, %862, %866)
}

def @func_9877() -> (Tensor[(7, 8, 14), float32],) {
  %867 = @func_8570() /* ty=Tensor[(7, 8, 14), float32] */;
  (%867,)
}

def @func_8893() -> (Tensor[(7, 8, 14), float64],) {
  %868 = @func_4287() /* ty=(Tensor[(7, 8, 14), float64], Tensor[(7, 8, 14), float32], Tensor[(3584, 1), float32], Tensor[(7, 8, 14), float64]) */;
  %869 = %868.0;
  (%869,)
}

def @func_5333(%var_5287: Tensor[(7, 88), uint32]) -> (Tensor[(7, 8, 14), float32], Tensor[(96), float32], Tensor[(7, 8, 14), int32], Tensor[(616), uint32], Tensor[(7, 88), uint8]) {
  %870 = @func_3754() /* ty=(Tensor[(7, 8, 14), float32],) */;
  %871 = %870.0;
  %872 = cast(%871, dtype="float32") /* ty=Tensor[(7, 8, 14), float32] */;
  %873 = reshape(%872, newshape=[7, 8, 14]) /* ty=Tensor[(7, 8, 14), float32] */;
  %874 = @func_3823(%873) /* ty=(Tensor[(7, 8, 14), int32],) */;
  %875 = cast(%var_5287, dtype="uint32") /* ty=Tensor[(7, 88), uint32] */;
  %876 = cast(%var_5287, dtype="uint32") /* ty=Tensor[(7, 88), uint32] */;
  %877 = cast(meta[relay.Constant][43] /* ty=Tensor[(96), float32] */, dtype="float32") /* ty=Tensor[(96), float32] */;
  %878 = reshape(%875, newshape=[11, 14, 4]) /* ty=Tensor[(11, 14, 4), uint32] */;
  %879 = reshape(%876, newshape=[11, 14, 4]) /* ty=Tensor[(11, 14, 4), uint32] */;
  %880 = reshape(%877, newshape=[4, 24]) /* ty=Tensor[(4, 24), float32] */;
  %881 = @func_317(%878, %879, %880) /* ty=(Tensor[(11, 14, 4), uint32], Tensor[(16, 1, 6), float32], Tensor[(4, 24), float32]) */;
  %882 = %881.0;
  %883 = cast(%882, dtype="uint32") /* ty=Tensor[(11, 14, 4), uint32] */;
  %884 = cast(meta[relay.Constant][43] /* ty=Tensor[(96), float32] */, dtype="float32") /* ty=Tensor[(96), float32] */;
  %885 = reshape(%883, newshape=[616]) /* ty=Tensor[(616), uint32] */;
  %886 = reshape(%884, newshape=[48, 2]) /* ty=Tensor[(48, 2), float32] */;
  %887 = @func_5177(%885, %886) /* ty=(Tensor[(7, 8, 14), float32], Tensor[(4, 24), float32], Tensor[(616), uint32], Tensor[(48, 2), float32], Tensor[(7, 8, 14), float32]) */;
  %888 = cast(%882, dtype="uint8") /* ty=Tensor[(11, 14, 4), uint8] */;
  %889 = shape_of(%var_5287, dtype="int32") /* ty=Tensor[(2), int32] */;
  %890 = cast(%var_5287, dtype="uint8") /* ty=Tensor[(7, 88), uint8] */;
  %891 = dyn.reshape(%888, %889, newshape=[]) /* ty=Tensor[(?, ?), uint8] */;
  %892 = %874.0;
  %893 = %887.2;
  %894 = subtract(%890, %891) /* ty=Tensor[(7, 88), uint8] */;
  (%871, meta[relay.Constant][43] /* ty=Tensor[(96), float32] */, %892, %893, %894)
}

def @func_1578(%var_1562: Tensor[(7, 8, 14), float64]) -> Tensor[(7, 8, 14), int8] {
  %895 = @func_1251() /* ty=Tensor[(7, 8, 14), float64] */;
  %896 = cast(%var_1562, dtype="float64") /* ty=Tensor[(7, 8, 14), float64] */;
  %897 = shape_of(%895, dtype="int32") /* ty=Tensor[(3), int32] */;
  %898 = cast(%895, dtype="float64") /* ty=Tensor[(7, 8, 14), float64] */;
  %899 = dyn.reshape(%896, %897, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %900 = mod(%898, %899) /* ty=Tensor[(7, 8, 14), float64] */;
  %901 = cast(%895, dtype="int8") /* ty=Tensor[(7, 8, 14), int8] */;
  %902 = shape_of(%900, dtype="int32") /* ty=Tensor[(3), int32] */;
  %903 = cast(%900, dtype="int8") /* ty=Tensor[(7, 8, 14), int8] */;
  %904 = dyn.reshape(%901, %902, newshape=[]) /* ty=Tensor[(?, ?, ?), int8] */;
  minimum(%903, %904) /* ty=Tensor[(7, 8, 14), int8] */
}

def @func_3455() -> (Tensor[(7, 8, 14), float64],) {
  %905 = @func_2804() /* ty=(Tensor[(7, 8, 14), float64], Tensor[(7, 8, 14), float32]) */;
  %906 = %905.0;
  (%906,)
}

def @func_6144(%var_6077: Tensor[(48, 1), float64]) -> (Tensor[(7, 8, 14), float32], Tensor[(7, 8, 14), float32], Tensor[(7, 8, 14), float64], Tensor[(48, 10), int32], Tensor[(56, 14), float64], Tensor[(75), uint64]) {
  %907 = cast(%var_6077, dtype="float64") /* ty=Tensor[(48, 1), float64] */;
  %908 = reshape(%907, newshape=[48]) /* ty=Tensor[(48), float64] */;
  %909 = @func_4587(%908) /* ty=(Tensor[(7, 8, 14), float32], Tensor[(3, 8, 2), float64], Tensor[(48), float64]) */;
  %910 = @func_2705() /* ty=(Tensor[(7, 8, 14), float64],) */;
  %911 = cast(%var_6077, dtype="float64") /* ty=Tensor[(48, 1), float64] */;
  %912 = sin(%911) /* ty=Tensor[(48, 1), float64] */;
  %913 = cast(%912, dtype="int32") /* ty=Tensor[(48, 1), int32] */;
  %914 = cast(meta[relay.Constant][44] /* ty=Tensor[(48, 10), float64] */, dtype="int32") /* ty=Tensor[(48, 10), int32] */;
  %915 = cast(meta[relay.Constant][45] /* ty=Tensor[(75), uint64] */, dtype="uint64") /* ty=Tensor[(75), uint64] */;
  %916 = cast(meta[relay.Constant][45] /* ty=Tensor[(75), uint64] */, dtype="uint64") /* ty=Tensor[(75), uint64] */;
  %917 = %909.0;
  %918 = cast(%917, dtype="float64") /* ty=Tensor[(7, 8, 14), float64] */;
  %919 = reshape(%915, newshape=[5, 1, 15]) /* ty=Tensor[(5, 1, 15), uint64] */;
  %920 = reshape(%916, newshape=[5, 1, 15]) /* ty=Tensor[(5, 1, 15), uint64] */;
  %921 = reshape(%918, newshape=[56, 14]) /* ty=Tensor[(56, 14), float64] */;
  %922 = @func_5895(%919, %920, %921) /* ty=(Tensor[(5, ?, 15), uint64], Tensor[(5, 1, 15), float64], Tensor[(7, 8, 14), int8], Tensor[(56, 14), float64], Tensor[(7, 8, 14), float32]) */;
  %923 = @func_3435() /* ty=Tensor[(7, 8, 14), float32] */;
  %924 = %910.0;
  %925 = maximum(%913, %914) /* ty=Tensor[(48, 10), int32] */;
  %926 = %922.3;
  (%923, %917, %924, %925, %926, meta[relay.Constant][45] /* ty=Tensor[(75), uint64] */)
}

def @func_3861() -> (Tensor[(7, 8, 14), float64],) {
  %927 = @func_2137() /* ty=(Tensor[(7, 8, 14), float64], Tensor[(7, 8, 14), float64]) */;
  %928 = %927.0;
  (%928,)
}

def @func_12206() -> Tensor[(7, 8, 14), float64] {
  @func_4940() /* ty=Tensor[(7, 8, 14), float64] */
}

def @func_7900() -> (Tensor[(7, 8, 14), float32],) {
  %929 = @func_6814() /* ty=(Tensor[(7, 8, 14), float32],) */;
  %930 = %929.0;
  (%930,)
}

def @func_6058() -> (Tensor[(7, 8, 14), float64],) {
  %931 = @func_5687() /* ty=(Tensor[(7, 8, 14), float32], Tensor[(7, 8, 14), float64], Tensor[(7, 8, 14), float64]) */;
  %932 = %931.2;
  (%932,)
}

def @func_10619() -> (Tensor[(7, 8, 14), float32], Tensor[(96), float32], Tensor[(420), float64], Tensor[(7, 15, 4), float32]) {
  %933 = cast(meta[relay.Constant][46] /* ty=Tensor[(420), float64] */, dtype="float64") /* ty=Tensor[(420), float64] */;
  %934 = reshape(%933, newshape=[7, 15, 4]) /* ty=Tensor[(7, 15, 4), float64] */;
  %935 = @func_9858(%934) /* ty=(Tensor[(7, 15, 4), float32],) */;
  %936 = %935.0;
  %937 = cast(%936, dtype="float32") /* ty=Tensor[(7, 15, 4), float32] */;
  %938 = @func_7466() /* ty=Tensor[(7, 8, 14), float32] */;
  %939 = @func_5474() /* ty=Tensor[(96), float32] */;
  %940 = log2(%937) /* ty=Tensor[(7, 15, 4), float32] */;
  (%938, %939, meta[relay.Constant][46] /* ty=Tensor[(420), float64] */, %940)
}

def @func_317(%var_306: Tensor[(11, 14, 4), uint32], %var_307: Tensor[(11, 14, 4), uint32], %var_315: Tensor[(4, 24), float32]) -> (Tensor[(11, 14, 4), uint32], Tensor[(16, 1, 6), float32], Tensor[(4, 24), float32]) {
  %941 = cast(%var_307, dtype="uint32") /* ty=Tensor[(11, 14, 4), uint32] */;
  %942 = shape_of(%var_306, dtype="int32") /* ty=Tensor[(3), int32] */;
  %943 = cast(%var_306, dtype="uint32") /* ty=Tensor[(11, 14, 4), uint32] */;
  %944 = dyn.reshape(%941, %942, newshape=[]) /* ty=Tensor[(?, ?, ?), uint32] */;
  %945 = cast(%var_315, dtype="float32") /* ty=Tensor[(4, 24), float32] */;
  %946 = reshape(%945, newshape=[16, 1, 6]) /* ty=Tensor[(16, 1, 6), float32] */;
  %947 = @func_77(%946) /* ty=(Tensor[(16, 1, 6), float32],) */;
  %948 = bitwise_xor(%943, %944) /* ty=Tensor[(11, 14, 4), uint32] */;
  %949 = %947.0;
  (%948, %949, %var_315)
}

def @func_5870() -> (Tensor[(7, 8, 14), float32],) {
  %950 = @func_4066() /* ty=Tensor[(7, 8, 14), float32] */;
  (%950,)
}

def @func_8965() -> (Tensor[(7, 8, 14), float32], Tensor[(7, 8, 14), float32]) {
  %951 = @func_5870() /* ty=(Tensor[(7, 8, 14), float32],) */;
  %952 = @func_2804() /* ty=(Tensor[(7, 8, 14), float64], Tensor[(7, 8, 14), float32]) */;
  %953 = %951.0;
  %954 = %952.1;
  (%953, %954)
}

def @func_11220() -> (Tensor[(7, 8, 14), float64], Tensor[(7, 8, 14), float32]) {
  %955 = @func_8676() /* ty=(Tensor[(7, 8, 14), float64], Tensor[(7, 8, 14), float32]) */;
  %956 = @func_4389() /* ty=Tensor[(7, 8, 14), float64] */;
  %957 = %955.1;
  (%956, %957)
}

def @func_12332() -> (Tensor[(7, 8, 14), float32], Tensor[(7, 8, 14), float64], Tensor[(7, 8, 14), float32], Tensor[(7, 8, 14), float32], Tensor[(7, 8, 14), bool]) {
  %958 = @func_7521() /* ty=(Tensor[(7, 8, 14), float32],) */;
  %959 = @func_2705() /* ty=(Tensor[(7, 8, 14), float64],) */;
  %960 = @func_2060() /* ty=(Tensor[(7, 8, 14), float32],) */;
  %961 = @func_11336() /* ty=(Tensor[(7, 8, 14), float32], Tensor[(7, 8, 14), float32], Tensor[(7, 8, 14), float32], Tensor[(7, 8, 14), float32]) */;
  %962 = %960.0;
  %963 = cast(%962, dtype="float64") /* ty=Tensor[(7, 8, 14), float64] */;
  %964 = reshape(%963, newshape=[7, 8, 14]) /* ty=Tensor[(7, 8, 14), float64] */;
  %965 = @func_10267(%964) /* ty=(Tensor[(7, 8, 14), bool],) */;
  %966 = %958.0;
  %967 = %959.0;
  %968 = %961.1;
  %969 = %965.0;
  (%966, %967, %962, %968, %969)
}

def @func_7715() -> (Tensor[(7, 8, 14), float32], Tensor[(96), float32]) {
  %970 = @func_3413() /* ty=(Tensor[(7, 8, 14), float32], Tensor[(7, 8, 14), float64]) */;
  %971 = %970.0;
  %972 = @func_5474() /* ty=Tensor[(96), float32] */;
  (%971, %972)
}

def @func_9810() -> Tensor[(7, 8, 14), float32] {
  @func_2092() /* ty=Tensor[(7, 8, 14), float32] */
}

def @func_7948() -> Tensor[(7, 8, 14), float32] {
  %973 = @func_2060() /* ty=(Tensor[(7, 8, 14), float32],) */;
  %973.0
}

def @func_10002() -> Tensor[(7, 8, 14), float64] {
  %974 = @func_3546() /* ty=(Tensor[(7, 8, 14), float32], Tensor[(7, 8, 14), float64]) */;
  %974.1
}

def @func_11148(%var_11120: Tensor[(14, 11, 15), int8], %var_11132: Tensor[(48), float64], %var_11136: Tensor[(784), float64]) -> (Tensor[(48), float64], Tensor[(48), float64], Tensor[(7, 8, 14), uint32], Tensor[(784), float64], Tensor[(14, 11, 15), uint64]) {
  %975 = cast(%var_11132, dtype="float64") /* ty=Tensor[(48), float64] */;
  %976 = reshape(%975, newshape=[48]) /* ty=Tensor[(48), float64] */;
  %977 = @func_4587(%976) /* ty=(Tensor[(7, 8, 14), float32], Tensor[(3, 8, 2), float64], Tensor[(48), float64]) */;
  %978 = cast(%var_11136, dtype="float64") /* ty=Tensor[(784), float64] */;
  %979 = reshape(%978, newshape=[7, 8, 14]) /* ty=Tensor[(7, 8, 14), float64] */;
  %980 = cast(meta[relay.Constant][47] /* ty=Tensor[(14, 11, 15), int8] */, dtype="int8") /* ty=Tensor[(14, 11, 15), int8] */;
  %981 = shape_of(%var_11120, dtype="int32") /* ty=Tensor[(3), int32] */;
  %982 = cast(%var_11120, dtype="int8") /* ty=Tensor[(14, 11, 15), int8] */;
  %983 = dyn.reshape(%980, %981, newshape=[]) /* ty=Tensor[(?, ?, ?), int8] */;
  %984 = minimum(%982, %983) /* ty=Tensor[(14, 11, 15), int8] */;
  %985 = cast(meta[relay.Constant][47] /* ty=Tensor[(14, 11, 15), int8] */, dtype="float64") /* ty=Tensor[(14, 11, 15), float64] */;
  %986 = shape_of(%984, dtype="int32") /* ty=Tensor[(3), int32] */;
  %987 = cast(%984, dtype="float64") /* ty=Tensor[(14, 11, 15), float64] */;
  %988 = dyn.reshape(%985, %986, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %989 = power(%987, %988) /* ty=Tensor[(14, 11, 15), float64] */;
  %990 = cast(%989, dtype="uint64") /* ty=Tensor[(14, 11, 15), uint64] */;
  %991 = shape_of(%var_11120, dtype="int32") /* ty=Tensor[(3), int32] */;
  %992 = cast(%var_11120, dtype="uint64") /* ty=Tensor[(14, 11, 15), uint64] */;
  %993 = dyn.reshape(%990, %991, newshape=[]) /* ty=Tensor[(?, ?, ?), uint64] */;
  %994 = %977.2;
  %995 = @func_2785(%979) /* ty=Tensor[(7, 8, 14), uint32] */;
  %996 = logical_xor(%992, %993) /* ty=Tensor[(14, 11, 15), uint64] */;
  (%994, %var_11132, %995, %var_11136, %996)
}

def @func_2072() -> Tensor[(7, 8, 14), float32] {
  %997 = @func_1554() /* ty=(Tensor[(7, 8, 14), float32],) */;
  %998 = %997.0;
  %999 = cast(%998, dtype="float32") /* ty=Tensor[(7, 8, 14), float32] */;
  log(%999) /* ty=Tensor[(7, 8, 14), float32] */
}

def @func_4009(%var_3914: Tensor[(7, 8, 14), float32]) -> (Tensor[(14, 16, 16), float32], Tensor[(3584, 1), float32], Tensor[(7, 8, 14), bool], Tensor[(7, 8, 14), float64], Tensor[(7, 8, 14), float32], Tensor[(7, 8, 14), float32], Tensor[(7, 8, 14), float32]) {
  %1000 = cast(meta[relay.Constant][48] /* ty=Tensor[(3584, 1), float32] */, dtype="float32") /* ty=Tensor[(3584, 1), float32] */;
  %1001 = reshape(%1000, newshape=[14, 16, 16]) /* ty=Tensor[(14, 16, 16), float32] */;
  %1002 = @func_1475(%1001) /* ty=(Tensor[(14, 16, 16), float32],) */;
  %1003 = @func_2038() /* ty=Tensor[(7, 8, 14), float32] */;
  %1004 = cast(%var_3914, dtype="bool") /* ty=Tensor[(7, 8, 14), bool] */;
  %1005 = shape_of(%1003, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1006 = cast(%1003, dtype="bool") /* ty=Tensor[(7, 8, 14), bool] */;
  %1007 = dyn.reshape(%1004, %1005, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %1008 = @func_2804() /* ty=(Tensor[(7, 8, 14), float64], Tensor[(7, 8, 14), float32]) */;
  %1009 = cast(meta[relay.Constant][49] /* ty=Tensor[(7, 8, 14), float32] */, dtype="bool") /* ty=Tensor[(7, 8, 14), bool] */;
  %1010 = shape_of(%1003, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1011 = cast(%1003, dtype="bool") /* ty=Tensor[(7, 8, 14), bool] */;
  %1012 = dyn.reshape(%1009, %1010, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %1013 = not_equal(%1011, %1012) /* ty=Tensor[(7, 8, 14), bool] */;
  %1014 = cast(meta[relay.Constant][49] /* ty=Tensor[(7, 8, 14), float32] */, dtype="float32") /* ty=Tensor[(7, 8, 14), float32] */;
  %1015 = shape_of(%1013, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1016 = cast(%1013, dtype="float32") /* ty=Tensor[(7, 8, 14), float32] */;
  %1017 = dyn.reshape(%1014, %1015, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %1018 = @func_2060() /* ty=(Tensor[(7, 8, 14), float32],) */;
  %1019 = @func_3568() /* ty=(Tensor[(7, 8, 14), float32],) */;
  %1020 = %1002.0;
  %1021 = logical_and(%1006, %1007) /* ty=Tensor[(7, 8, 14), bool] */;
  %1022 = %1008.0;
  %1023 = floor_divide(%1016, %1017) /* ty=Tensor[(7, 8, 14), float32] */;
  %1024 = %1018.0;
  %1025 = %1019.0;
  (%1020, meta[relay.Constant][48] /* ty=Tensor[(3584, 1), float32] */, %1021, %1022, %1023, %1024, %1025)
}

def @func_1172() -> Tensor[(7, 8, 14), float64] {
  %1026 = cast(meta[relay.Constant][50] /* ty=Tensor[(7, 8, 14), float64] */, dtype="float64") /* ty=Tensor[(7, 8, 14), float64] */;
  erf(%1026) /* ty=Tensor[(7, 8, 14), float64] */
}

def @func_10655() -> (Tensor[(7, 8, 14), float64],) {
  %1027 = @func_6261() /* ty=(Tensor[(7, 8, 14), float64], Tensor[(7, 8, 14), float64], Tensor[(7, 8, 14), float64], Tensor[(7, 8, 14), float32], Tensor[(5, ?, 15), uint64], Tensor[(75, 1), uint64], Tensor[(7, 8, 14), float32]) */;
  %1028 = %1027.0;
  (%1028,)
}

def @func_11202() -> (Tensor[(7, 8, 14), float64],) {
  %1029 = @func_8676() /* ty=(Tensor[(7, 8, 14), float64], Tensor[(7, 8, 14), float32]) */;
  %1030 = %1029.0;
  (%1030,)
}

def @func_4587(%var_4570: Tensor[(48), float64]) -> (Tensor[(7, 8, 14), float32], Tensor[(3, 8, 2), float64], Tensor[(48), float64]) {
  %1031 = cast(%var_4570, dtype="float64") /* ty=Tensor[(48), float64] */;
  %1032 = reshape(%1031, newshape=[48]) /* ty=Tensor[(48), float64] */;
  %1033 = @func_2402(%1032) /* ty=(Tensor[(7, 8, 14), float32], Tensor[(3, 8, 2), float64], Tensor[(48), float64]) */;
  %1034 = @func_3674() /* ty=Tensor[(7, 8, 14), float32] */;
  %1035 = %1033.1;
  (%1034, %1035, %var_4570)
}

def @func_1707(%var_1691: Tensor[(420), uint64]) -> (Tensor[(7, 8, 14), float32], Tensor[(420), uint64], Tensor[(420), uint64]) {
  %1036 = @func_1554() /* ty=(Tensor[(7, 8, 14), float32],) */;
  %1037 = cast(%var_1691, dtype="uint64") /* ty=Tensor[(420), uint64] */;
  %1038 = reshape(%1037, newshape=[420]) /* ty=Tensor[(420), uint64] */;
  %1039 = @func_1331(%1038) /* ty=(Tensor[(7, 8, 14), float64], Tensor[(14, 2, 15), uint64], Tensor[(420), uint64]) */;
  %1040 = %1036.0;
  %1041 = %1039.2;
  (%1040, %1041, %var_1691)
}

def @func_2038() -> Tensor[(7, 8, 14), float32] {
  @func_1357() /* ty=Tensor[(7, 8, 14), float32] */
}

def @func_2740(%var_2726: Tensor[(420), uint64]) -> (Tensor[(7, 8, 14), float64], Tensor[(7, 8, 14), float32], Tensor[(420), uint64], Tensor[(7, 8, 14), float64]) {
  %1042 = cast(%var_2726, dtype="uint64") /* ty=Tensor[(420), uint64] */;
  %1043 = reshape(%1042, newshape=[420]) /* ty=Tensor[(420), uint64] */;
  %1044 = @func_1964(%1043) /* ty=(Tensor[(7, 8, 14), float32], Tensor[(7, 8, 14), float32], Tensor[(14, 2, 15), uint64], Tensor[(420), uint64]) */;
  %1045 = @func_1251() /* ty=Tensor[(7, 8, 14), float64] */;
  %1046 = %1044.0;
  %1047 = @func_1748() /* ty=Tensor[(7, 8, 14), float64] */;
  (%1045, %1046, %var_2726, %1047)
}

def @func_5744() -> Tensor[(96), float32] {
  %1048 = @func_4041() /* ty=(Tensor[(7, 8, 14), float32], Tensor[(16, 1, 6), float32], Tensor[(96), float32]) */;
  %1048.2
}

def @func_4940() -> Tensor[(7, 8, 14), float64] {
  @func_1291() /* ty=Tensor[(7, 8, 14), float64] */
}

/* For debugging purposes the metadata section has been omitted.
 * If you would like to see the full metadata section you can set the 
 * option to `True` when invoking `astext`. 
 */
===================================
==========mutated_mod==========
#[version = "0.0.5"]
def @func_8091() -> (Tensor[(7, 8, 14), float64], Tensor[(7, 8, 14), float64]) {
  %0 = @func_2487() /* ty=(Tensor[(7, 8, 14), float64],) */;
  %1 = %0.0;
  %2 = @func_6754() /* ty=Tensor[(7, 8, 14), float64] */;
  (%1, %2)
}

def @func_9227() -> (Tensor[(7, 8, 14), float64], Tensor[(96), float32]) {
  @func_9225() /* ty=(Tensor[(7, 8, 14), float64], Tensor[(96), float32]) */
}

def @func_12206() -> Tensor[(7, 8, 14), float64] {
  @func_4940() /* ty=Tensor[(7, 8, 14), float64] */
}

def @func_10119() -> (Tensor[(7, 8, 14), float32], Tensor[(7, 8, 14), float32], Tensor[(616), uint32], Tensor[(96), float32], Tensor[(7, 8, 14), float64], Tensor[(7, 8, 14), float32], Tensor[(96), float32], Tensor[(16, 1, 6), float32], Tensor[(7, 8, 14), float64]) {
  %17 = fn () -> (Tensor[(7, 8, 14), float32], Tensor[(7, 8, 14), float32], Tensor[(616), uint32], Tensor[(96), float32], Tensor[(7, 8, 14), float64], Tensor[(7, 8, 14), float32], Tensor[(96), float32], Tensor[(16, 1, 6), float32], Tensor[(7, 8, 14), float64]) {
    %3 = @func_8540() /* ty=(Tensor[(7, 8, 14), float32],) */;
    %4 = cast(meta[relay.Constant][0] /* ty=Tensor[(616), uint32] */, dtype="uint32") /* ty=Tensor[(616), uint32] */;
    %5 = cast(meta[relay.Constant][1] /* ty=Tensor[(96), float32] */, dtype="float32") /* ty=Tensor[(96), float32] */;
    %6 = reshape(%4, newshape=[616]) /* ty=Tensor[(616), uint32] */;
    %7 = reshape(%5, newshape=[48, 2]) /* ty=Tensor[(48, 2), float32] */;
    %8 = @func_5177(%6, %7) /* ty=(Tensor[(7, 8, 14), float32], Tensor[(4, 24), float32], Tensor[(616), uint32], Tensor[(48, 2), float32], Tensor[(7, 8, 14), float32]) */;
    %9 = @func_3240() /* ty=(Tensor[(7, 8, 14), float64], Tensor[(7, 8, 14), float32]) */;
    %10 = %3.0;
    %11 = %8.4;
    %12 = %9.0;
    %13 = @func_9977() /* ty=Tensor[(7, 8, 14), float32] */;
    %14 = @func_5744() /* ty=Tensor[(96), float32] */;
    %15 = @func_7127() /* ty=Tensor[(16, 1, 6), float32] */;
    %16 = @func_10002() /* ty=Tensor[(7, 8, 14), float64] */;
    (%10, %11, meta[relay.Constant][0] /* ty=Tensor[(616), uint32] */, meta[relay.Constant][1] /* ty=Tensor[(96), float32] */, %12, %13, %14, %15, %16)
  };
  %17() /* ty=(Tensor[(7, 8, 14), float32], Tensor[(7, 8, 14), float32], Tensor[(616), uint32], Tensor[(96), float32], Tensor[(7, 8, 14), float64], Tensor[(7, 8, 14), float32], Tensor[(96), float32], Tensor[(16, 1, 6), float32], Tensor[(7, 8, 14), float64]) */
}

def @func_8438() -> (Tensor[(16, 1, 6), float32],) {
  @func_8436() /* ty=(Tensor[(16, 1, 6), float32],) */
}

def @func_1172() -> Tensor[(7, 8, 14), float64] {
  %18 = cast(meta[relay.Constant][2] /* ty=Tensor[(7, 8, 14), float64] */, dtype="float64") /* ty=Tensor[(7, 8, 14), float64] */;
  erf(%18) /* ty=Tensor[(7, 8, 14), float64] */
}

def @func_5586() -> (Tensor[(7, 8, 14), float64], Tensor[(7, 8, 14), bool]) {
  %25 = fn () -> (Tensor[(7, 8, 14), float64], Tensor[(7, 8, 14), bool]) {
    %19 = @func_2804() /* ty=(Tensor[(7, 8, 14), float64], Tensor[(7, 8, 14), float32]) */;
    %20 = %19.0;
    %21 = cast(%20, dtype="float32") /* ty=Tensor[(7, 8, 14), float32] */;
    %22 = reshape(%21, newshape=[7, 8, 14]) /* ty=Tensor[(7, 8, 14), float32] */;
    %23 = @func_2277(%22) /* ty=(Tensor[(420), uint64], Tensor[(70, 6), uint64], Tensor[(7, 8, 14), bool]) */;
    %24 = %23.2;
    (%20, %24)
  };
  %25() /* ty=(Tensor[(7, 8, 14), float64], Tensor[(7, 8, 14), bool]) */
}

def @func_12601() -> Tensor[(16, 1, 6), float32] {
  %27 = fn () -> Tensor[(16, 1, 6), float32] {
    %26 = @func_8436() /* ty=(Tensor[(16, 1, 6), float32],) */;
    %26.0
  };
  %27() /* ty=Tensor[(16, 1, 6), float32] */
}

def @func_4343(%var_4341: Tensor[(35), float32]) -> (Tensor[(7, 8, 14), float32], Tensor[(1, 14, 6), float64], Tensor[(7, 8, 14), float64], Tensor[(5, 7), float32], Tensor[(35), float32]) {
  @func_4340(%var_4341) /* ty=(Tensor[(7, 8, 14), float32], Tensor[(1, 14, 6), float64], Tensor[(7, 8, 14), float64], Tensor[(5, 7), float32], Tensor[(35), float32]) */
}

def @func_7562() -> Tensor[(7, 8, 14), float32] {
  %28 = @func_5870() /* ty=(Tensor[(7, 8, 14), float32],) */;
  %28.0
}

def @func_3055(%var_3054: Tensor[(16, 14, 6), float64]) -> (Tensor[(16, 14, 6), float64], Tensor[(7, 8, 14), float32]) {
  %37 = fn (%var_3039: Tensor[(16, 14, 6), float64]) -> (Tensor[(16, 14, 6), float64], Tensor[(7, 8, 14), float32]) {
    %29 = @func_2535() /* ty=(Tensor[(1, 14, 6), float64],) */;
    %30 = %29.0;
    %31 = cast(%30, dtype="float32") /* ty=Tensor[(1, 14, 6), float32] */;
    %32 = cast(%var_3039, dtype="float32") /* ty=Tensor[(16, 14, 6), float32] */;
    %33 = power(%31, %32) /* ty=Tensor[(16, 14, 6), float32] */;
    %34 = cast(%33, dtype="float64") /* ty=Tensor[(16, 14, 6), float64] */;
    %35 = atanh(%34) /* ty=Tensor[(16, 14, 6), float64] */;
    %36 = @func_2010() /* ty=Tensor[(7, 8, 14), float32] */;
    (%35, %36)
  };
  %37(%var_3054) /* ty=(Tensor[(16, 14, 6), float64], Tensor[(7, 8, 14), float32]) */
}

def @func_1856(%var_1762: Tensor[(10, 4, 7), uint16], %var_1763: Tensor[(10, 4, 7), uint16], %var_1798: Tensor[(14, 2, 15), uint64], %var_1826: Tensor[(405), int32], %var_1827: Tensor[(1, 616), uint32], %var_1844: Tensor[(10, 4, 7), float32]) -> (Tensor[(10, 4, 7), bool], Tensor[(7, 8, 14), float64], Tensor[(420), uint64], Tensor[(14, 2, 15), float64], Tensor[(7, 8, 14), float64], Tensor[(2, 48), float32], Tensor[(405), int32], Tensor[(1, 616), uint32], Tensor[(96), float32], Tensor[(10, 4, 7), int32], Tensor[(10, 4, 7), bool]) {
  %38 = cast(%var_1763, dtype="bool") /* ty=Tensor[(10, 4, 7), bool] */;
  %39 = shape_of(%var_1762, dtype="int32") /* ty=Tensor[(3), int32] */;
  %40 = cast(%var_1762, dtype="bool") /* ty=Tensor[(10, 4, 7), bool] */;
  %41 = dyn.reshape(%38, %39, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %42 = cast(meta[relay.Constant][3] /* ty=Tensor[(420), uint64] */, dtype="uint64") /* ty=Tensor[(420), uint64] */;
  %43 = cast(meta[relay.Constant][3] /* ty=Tensor[(420), uint64] */, dtype="uint64") /* ty=Tensor[(420), uint64] */;
  %44 = reshape(%42, newshape=[14, 2, 15]) /* ty=Tensor[(14, 2, 15), uint64] */;
  %45 = reshape(%43, newshape=[14, 2, 15]) /* ty=Tensor[(14, 2, 15), uint64] */;
  %46 = @func_1036(%44, %45) /* ty=Tensor[(14, 2, 15), uint64] */;
  %47 = cast(%var_1798, dtype="float64") /* ty=Tensor[(14, 2, 15), float64] */;
  %48 = shape_of(%46, dtype="int32") /* ty=Tensor[(3), int32] */;
  %49 = cast(%46, dtype="float64") /* ty=Tensor[(14, 2, 15), float64] */;
  %50 = dyn.reshape(%47, %48, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %51 = cast(%var_1826, dtype="int32") /* ty=Tensor[(405), int32] */;
  %52 = cast(%var_1827, dtype="uint32") /* ty=Tensor[(1, 616), uint32] */;
  %53 = cast(meta[relay.Constant][4] /* ty=Tensor[(96), float32] */, dtype="float32") /* ty=Tensor[(96), float32] */;
  %54 = reshape(%51, newshape=[9, 15, 3]) /* ty=Tensor[(9, 15, 3), int32] */;
  %55 = reshape(%52, newshape=[616]) /* ty=Tensor[(616), uint32] */;
  %56 = reshape(%53, newshape=[2, 48]) /* ty=Tensor[(2, 48), float32] */;
  %57 = @func_1076(%54, %55, %56) /* ty=(Tensor[(9, 15, 3), int32], Tensor[(616), uint32], Tensor[(2, 48), bool], Tensor[(2, 48), float32]) */;
  %58 = cast(%var_1763, dtype="float32") /* ty=Tensor[(10, 4, 7), float32] */;
  %59 = rsqrt(%58) /* ty=Tensor[(10, 4, 7), float32] */;
  %60 = cast(%var_1844, dtype="int32") /* ty=Tensor[(10, 4, 7), int32] */;
  %61 = shape_of(%59, dtype="int32") /* ty=Tensor[(3), int32] */;
  %62 = cast(%59, dtype="int32") /* ty=Tensor[(10, 4, 7), int32] */;
  %63 = dyn.reshape(%60, %61, newshape=[]) /* ty=Tensor[(?, ?, ?), int32] */;
  %64 = cast(%var_1844, dtype="bool") /* ty=Tensor[(10, 4, 7), bool] */;
  %65 = shape_of(%59, dtype="int32") /* ty=Tensor[(3), int32] */;
  %66 = cast(%59, dtype="bool") /* ty=Tensor[(10, 4, 7), bool] */;
  %67 = dyn.reshape(%64, %65, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %68 = less(%40, %41) /* ty=Tensor[(10, 4, 7), bool] */;
  %69 = @func_1172() /* ty=Tensor[(7, 8, 14), float64] */;
  %70 = divide(%49, %50) /* ty=Tensor[(14, 2, 15), float64] */;
  %71 = @func_1291() /* ty=Tensor[(7, 8, 14), float64] */;
  %72 = %57.3;
  %73 = right_shift(%62, %63) /* ty=Tensor[(10, 4, 7), int32] */;
  %74 = equal(%66, %67) /* ty=Tensor[(10, 4, 7), bool] */;
  (%68, %69, meta[relay.Constant][3] /* ty=Tensor[(420), uint64] */, %70, %71, %72, %var_1826, %var_1827, meta[relay.Constant][4] /* ty=Tensor[(96), float32] */, %73, %74)
}

def @func_8233() -> Tensor[(7, 8, 14), float32] {
  @func_8231() /* ty=Tensor[(7, 8, 14), float32] */
}

def @func_11289() -> (Tensor[(48), float64], Tensor[(7, 15, 4), float32], Tensor[(420), float64], Tensor[(16, 1, 6), float32]) {
  @func_11287() /* ty=(Tensor[(48), float64], Tensor[(7, 15, 4), float32], Tensor[(420), float64], Tensor[(16, 1, 6), float32]) */
}

def @func_9375(%var_9373: Tensor[(15, 10, 16), float32], %var_9374: Tensor[(15, 10, 16), float32]) -> (Tensor[(16, 1, 6), float32], Tensor[(15, 10, 16), int64], Tensor[(7, 8, 14), uint32], Tensor[(2, 392), float64], Tensor[(13, 3, 14), float64], Tensor[(546), float64]) {
  %91 = fn (%var_9320: Tensor[(15, 10, 16), float32], %var_9343: Tensor[(15, 10, 16), float32]) -> (Tensor[(16, 1, 6), float32], Tensor[(15, 10, 16), int64], Tensor[(7, 8, 14), uint32], Tensor[(2, 392), float64], Tensor[(13, 3, 14), float64], Tensor[(546), float64]) {
    %75 = @func_8436() /* ty=(Tensor[(16, 1, 6), float32],) */;
    %76 = cast(%var_9320, dtype="float32") /* ty=Tensor[(15, 10, 16), float32] */;
    %77 = erf(%76) /* ty=Tensor[(15, 10, 16), float32] */;
    %78 = cast(%var_9343, dtype="int64") /* ty=Tensor[(15, 10, 16), int64] */;
    %79 = shape_of(%77, dtype="int32") /* ty=Tensor[(3), int32] */;
    %80 = cast(%77, dtype="int64") /* ty=Tensor[(15, 10, 16), int64] */;
    %81 = dyn.reshape(%78, %79, newshape=[]) /* ty=Tensor[(?, ?, ?), int64] */;
    %82 = cast(meta[relay.Constant][5] /* ty=Tensor[(2, 392), float64] */, dtype="float64") /* ty=Tensor[(2, 392), float64] */;
    %83 = reshape(%82, newshape=[7, 8, 14]) /* ty=Tensor[(7, 8, 14), float64] */;
    %84 = cast(meta[relay.Constant][6] /* ty=Tensor[(546), float64] */, dtype="float64") /* ty=Tensor[(546), float64] */;
    %85 = reshape(%84, newshape=[13, 3, 14]) /* ty=Tensor[(13, 3, 14), float64] */;
    %86 = @func_3200(%85) /* ty=(Tensor[(13, 3, 14), float64],) */;
    %87 = %75.0;
    %88 = subtract(%80, %81) /* ty=Tensor[(15, 10, 16), int64] */;
    %89 = @func_2785(%83) /* ty=Tensor[(7, 8, 14), uint32] */;
    %90 = %86.0;
    (%87, %88, %89, meta[relay.Constant][5] /* ty=Tensor[(2, 392), float64] */, %90, meta[relay.Constant][6] /* ty=Tensor[(546), float64] */)
  };
  %91(%var_9373, %var_9374) /* ty=(Tensor[(16, 1, 6), float32], Tensor[(15, 10, 16), int64], Tensor[(7, 8, 14), uint32], Tensor[(2, 392), float64], Tensor[(13, 3, 14), float64], Tensor[(546), float64]) */
}

def @func_10181(%var_10179: Tensor[(75), uint64], %var_10180: Tensor[(24, 2), float64]) -> (Tensor[(7, 8, 14), float32], Tensor[(7, 8, 14), float64], Tensor[(7, 8, 14), float32], Tensor[(75), uint64], Tensor[(35), float32], Tensor[(7, 8, 14), float32], Tensor[(7, 8, 14), float32], Tensor[(24, 2), float64]) {
  %113 = fn (%var_10154: Tensor[(75), uint64], %var_10170: Tensor[(24, 2), float64]) -> (Tensor[(7, 8, 14), float32], Tensor[(7, 8, 14), float64], Tensor[(7, 8, 14), float32], Tensor[(75), uint64], Tensor[(35), float32], Tensor[(7, 8, 14), float32], Tensor[(7, 8, 14), float32], Tensor[(24, 2), float64]) {
    %92 = @func_7534() /* ty=(Tensor[(7, 8, 14), float32],) */;
    %93 = @func_7052() /* ty=(Tensor[(7, 8, 14), float64],) */;
    %94 = cast(%var_10154, dtype="uint64") /* ty=Tensor[(75), uint64] */;
    %95 = cast(%var_10154, dtype="uint64") /* ty=Tensor[(75), uint64] */;
    %96 = %93.0;
    %97 = cast(%96, dtype="float64") /* ty=Tensor[(7, 8, 14), float64] */;
    %98 = reshape(%94, newshape=[5, 1, 15]) /* ty=Tensor[(5, 1, 15), uint64] */;
    %99 = reshape(%95, newshape=[5, 1, 15]) /* ty=Tensor[(5, 1, 15), uint64] */;
    %100 = reshape(%97, newshape=[56, 14]) /* ty=Tensor[(56, 14), float64] */;
    %101 = @func_5895(%98, %99, %100) /* ty=(Tensor[(5, ?, 15), uint64], Tensor[(5, 1, 15), float64], Tensor[(7, 8, 14), int8], Tensor[(56, 14), float64], Tensor[(7, 8, 14), float32]) */;
    %102 = %92.0;
    %103 = cast(%102, dtype="float64") /* ty=Tensor[(7, 8, 14), float64] */;
    %104 = reshape(%103, newshape=[7, 8, 14]) /* ty=Tensor[(7, 8, 14), float64] */;
    %105 = @func_3139(%104) /* ty=(Tensor[(7, 8, 14), int8], Tensor[(5, 7), float32], Tensor[(35), float32]) */;
    %106 = cast(%var_10170, dtype="float64") /* ty=Tensor[(24, 2), float64] */;
    %107 = reshape(%106, newshape=[48]) /* ty=Tensor[(48), float64] */;
    %108 = @func_2402(%107) /* ty=(Tensor[(7, 8, 14), float32], Tensor[(3, 8, 2), float64], Tensor[(48), float64]) */;
    %109 = %101.4;
    %110 = %105.2;
    %111 = @func_8231() /* ty=Tensor[(7, 8, 14), float32] */;
    %112 = %108.0;
    (%102, %96, %109, %var_10154, %110, %111, %112, %var_10170)
  };
  %113(%var_10179, %var_10180) /* ty=(Tensor[(7, 8, 14), float32], Tensor[(7, 8, 14), float64], Tensor[(7, 8, 14), float32], Tensor[(75), uint64], Tensor[(35), float32], Tensor[(7, 8, 14), float32], Tensor[(7, 8, 14), float32], Tensor[(24, 2), float64]) */
}

def @func_10212() -> (Tensor[(7, 8, 14), float32], Tensor[(7, 8, 14), float64]) {
  %114 = @func_3754() /* ty=(Tensor[(7, 8, 14), float32],) */;
  %115 = @func_6976() /* ty=(Tensor[(7, 8, 14), float64], Tensor[(7, 8, 14), float32]) */;
  %116 = %114.0;
  %117 = %115.0;
  (%116, %117)
}

def @func_9861(%var_9859: Tensor[(7, 15, 4), float64]) -> (Tensor[(7, 15, 4), float32],) {
  @func_9858(%var_9859) /* ty=(Tensor[(7, 15, 4), float32],) */
}

def @func_2198() -> Tensor[(7, 8, 14), float32] {
  @func_2196() /* ty=Tensor[(7, 8, 14), float32] */
}

def @func_6162() -> (Tensor[(7, 8, 14), float64],) {
  %118 = @func_4181() /* ty=(Tensor[(7, 8, 14), float64],) */;
  %119 = %118.0;
  (%119,)
}

def @func_5554() -> Tensor[(7, 8, 14), float64] {
  @func_5552() /* ty=Tensor[(7, 8, 14), float64] */
}

def @func_6164() -> (Tensor[(7, 8, 14), float64],) {
  @func_6162() /* ty=(Tensor[(7, 8, 14), float64],) */
}

def @func_10267(%var_10261: Tensor[(7, 8, 14), float64]) -> (Tensor[(7, 8, 14), bool],) {
  %120 = @func_3413() /* ty=(Tensor[(7, 8, 14), float32], Tensor[(7, 8, 14), float64]) */;
  %121 = %120.1;
  %122 = cast(%var_10261, dtype="bool") /* ty=Tensor[(7, 8, 14), bool] */;
  %123 = shape_of(%121, dtype="int32") /* ty=Tensor[(3), int32] */;
  %124 = cast(%121, dtype="bool") /* ty=Tensor[(7, 8, 14), bool] */;
  %125 = dyn.reshape(%122, %123, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %126 = logical_or(%124, %125) /* ty=Tensor[(7, 8, 14), bool] */;
  (%126,)
}

def @func_11287() -> (Tensor[(48), float64], Tensor[(7, 15, 4), float32], Tensor[(420), float64], Tensor[(16, 1, 6), float32]) {
  %127 = @func_11044() /* ty=(Tensor[(7, 8, 14), float32], Tensor[(7, 8, 14), bool], Tensor[(48), float64]) */;
  %128 = cast(meta[relay.Constant][7] /* ty=Tensor[(420), float64] */, dtype="float64") /* ty=Tensor[(420), float64] */;
  %129 = reshape(%128, newshape=[7, 15, 4]) /* ty=Tensor[(7, 15, 4), float64] */;
  %130 = @func_9858(%129) /* ty=(Tensor[(7, 15, 4), float32],) */;
  %131 = %127.2;
  %132 = %130.0;
  %133 = @func_9183() /* ty=Tensor[(16, 1, 6), float32] */;
  (%131, %132, meta[relay.Constant][7] /* ty=Tensor[(420), float64] */, %133)
}

def @func_2787(%var_2786: Tensor[(7, 8, 14), float64]) -> Tensor[(7, 8, 14), uint32] {
  %139 = fn (%var_2780: Tensor[(7, 8, 14), float64]) -> Tensor[(7, 8, 14), uint32] {
    %134 = @func_1291() /* ty=Tensor[(7, 8, 14), float64] */;
    %135 = cast(%var_2780, dtype="uint32") /* ty=Tensor[(7, 8, 14), uint32] */;
    %136 = shape_of(%134, dtype="int32") /* ty=Tensor[(3), int32] */;
    %137 = cast(%134, dtype="uint32") /* ty=Tensor[(7, 8, 14), uint32] */;
    %138 = dyn.reshape(%135, %136, newshape=[]) /* ty=Tensor[(?, ?, ?), uint32] */;
    add(%137, %138) /* ty=Tensor[(7, 8, 14), uint32] */
  };
  %139(%var_2786) /* ty=Tensor[(7, 8, 14), uint32] */
}

def @func_5871() -> (Tensor[(7, 8, 14), float32],) {
  %141 = fn () -> (Tensor[(7, 8, 14), float32],) {
    %140 = @func_4066() /* ty=Tensor[(7, 8, 14), float32] */;
    (%140,)
  };
  %141() /* ty=(Tensor[(7, 8, 14), float32],) */
}

def @func_2418() -> Tensor[(7, 8, 14), float32] {
  @func_2416() /* ty=Tensor[(7, 8, 14), float32] */
}

def @func_8540() -> (Tensor[(7, 8, 14), float32],) {
  %142 = @func_2092() /* ty=Tensor[(7, 8, 14), float32] */;
  (%142,)
}

def @func_8767() -> (Tensor[(7, 8, 14), float64],) {
  %143 = @func_5832() /* ty=Tensor[(7, 8, 14), float64] */;
  (%143,)
}

def @func_5462() -> (Tensor[(7, 8, 14), float64], Tensor[(7, 8, 14), float32]) {
  %148 = fn () -> (Tensor[(7, 8, 14), float64], Tensor[(7, 8, 14), float32]) {
    %144 = @func_3546() /* ty=(Tensor[(7, 8, 14), float32], Tensor[(7, 8, 14), float64]) */;
    %145 = @func_2060() /* ty=(Tensor[(7, 8, 14), float32],) */;
    %146 = %144.1;
    %147 = %145.0;
    (%146, %147)
  };
  %148() /* ty=(Tensor[(7, 8, 14), float64], Tensor[(7, 8, 14), float32]) */
}

def @func_4760() -> (Tensor[(7, 8, 14), float32], Tensor[(7, 8, 14), float32], Tensor[(7, 8, 14), uint32]) {
  %149 = @func_2416() /* ty=Tensor[(7, 8, 14), float32] */;
  %150 = cast(%149, dtype="float64") /* ty=Tensor[(7, 8, 14), float64] */;
  %151 = reshape(%150, newshape=[7, 8, 14]) /* ty=Tensor[(7, 8, 14), float64] */;
  %152 = @func_2038() /* ty=Tensor[(7, 8, 14), float32] */;
  %153 = @func_2785(%151) /* ty=Tensor[(7, 8, 14), uint32] */;
  (%152, %149, %153)
}

def @func_4011(%var_4010: Tensor[(7, 8, 14), float32]) -> (Tensor[(14, 16, 16), float32], Tensor[(3584, 1), float32], Tensor[(7, 8, 14), bool], Tensor[(7, 8, 14), float64], Tensor[(7, 8, 14), float32], Tensor[(7, 8, 14), float32], Tensor[(7, 8, 14), float32]) {
  %180 = fn (%var_3914: Tensor[(7, 8, 14), float32]) -> (Tensor[(14, 16, 16), float32], Tensor[(3584, 1), float32], Tensor[(7, 8, 14), bool], Tensor[(7, 8, 14), float64], Tensor[(7, 8, 14), float32], Tensor[(7, 8, 14), float32], Tensor[(7, 8, 14), float32]) {
    %154 = cast(meta[relay.Constant][8] /* ty=Tensor[(3584, 1), float32] */, dtype="float32") /* ty=Tensor[(3584, 1), float32] */;
    %155 = reshape(%154, newshape=[14, 16, 16]) /* ty=Tensor[(14, 16, 16), float32] */;
    %156 = @func_1475(%155) /* ty=(Tensor[(14, 16, 16), float32],) */;
    %157 = @func_2038() /* ty=Tensor[(7, 8, 14), float32] */;
    %158 = cast(%var_3914, dtype="bool") /* ty=Tensor[(7, 8, 14), bool] */;
    %159 = shape_of(%157, dtype="int32") /* ty=Tensor[(3), int32] */;
    %160 = cast(%157, dtype="bool") /* ty=Tensor[(7, 8, 14), bool] */;
    %161 = dyn.reshape(%158, %159, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    %162 = @func_2804() /* ty=(Tensor[(7, 8, 14), float64], Tensor[(7, 8, 14), float32]) */;
    %163 = cast(meta[relay.Constant][9] /* ty=Tensor[(7, 8, 14), float32] */, dtype="bool") /* ty=Tensor[(7, 8, 14), bool] */;
    %164 = shape_of(%157, dtype="int32") /* ty=Tensor[(3), int32] */;
    %165 = cast(%157, dtype="bool") /* ty=Tensor[(7, 8, 14), bool] */;
    %166 = dyn.reshape(%163, %164, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    %167 = not_equal(%165, %166) /* ty=Tensor[(7, 8, 14), bool] */;
    %168 = cast(meta[relay.Constant][9] /* ty=Tensor[(7, 8, 14), float32] */, dtype="float32") /* ty=Tensor[(7, 8, 14), float32] */;
    %169 = shape_of(%167, dtype="int32") /* ty=Tensor[(3), int32] */;
    %170 = cast(%167, dtype="float32") /* ty=Tensor[(7, 8, 14), float32] */;
    %171 = dyn.reshape(%168, %169, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
    %172 = @func_2060() /* ty=(Tensor[(7, 8, 14), float32],) */;
    %173 = @func_3568() /* ty=(Tensor[(7, 8, 14), float32],) */;
    %174 = %156.0;
    %175 = logical_and(%160, %161) /* ty=Tensor[(7, 8, 14), bool] */;
    %176 = %162.0;
    %177 = floor_divide(%170, %171) /* ty=Tensor[(7, 8, 14), float32] */;
    %178 = %172.0;
    %179 = %173.0;
    (%174, meta[relay.Constant][8] /* ty=Tensor[(3584, 1), float32] */, %175, %176, %177, %178, %179)
  };
  %180(%var_4010) /* ty=(Tensor[(14, 16, 16), float32], Tensor[(3584, 1), float32], Tensor[(7, 8, 14), bool], Tensor[(7, 8, 14), float64], Tensor[(7, 8, 14), float32], Tensor[(7, 8, 14), float32], Tensor[(7, 8, 14), float32]) */
}

def @func_162(%var_126: Tensor[(5, 7), float32]) -> (Tensor[(5, 7), float32], Tensor[(16, 1, 6), float32], Tensor[(96), float32], Tensor[(16, 1, 6), float32]) {
  %181 = cast(%var_126, dtype="float32") /* ty=Tensor[(5, 7), float32] */;
  %182 = cast(meta[relay.Constant][10] /* ty=Tensor[(96), float32] */, dtype="float32") /* ty=Tensor[(96), float32] */;
  %183 = reshape(%182, newshape=[16, 1, 6]) /* ty=Tensor[(16, 1, 6), float32] */;
  %184 = @func_77(%183) /* ty=(Tensor[(16, 1, 6), float32],) */;
  %185 = %184.0;
  %186 = cast(%185, dtype="float32") /* ty=Tensor[(16, 1, 6), float32] */;
  %187 = reshape(%186, newshape=[16, 1, 6]) /* ty=Tensor[(16, 1, 6), float32] */;
  %188 = @func_77(%187) /* ty=(Tensor[(16, 1, 6), float32],) */;
  %189 = log10(%181) /* ty=Tensor[(5, 7), float32] */;
  %190 = %188.0;
  (%189, %185, meta[relay.Constant][10] /* ty=Tensor[(96), float32] */, %190)
}

def @func_7535() -> (Tensor[(7, 8, 14), float32],) {
  %193 = fn () -> (Tensor[(7, 8, 14), float32],) {
    %191 = @func_3568() /* ty=(Tensor[(7, 8, 14), float32],) */;
    %192 = %191.0;
    (%192,)
  };
  %193() /* ty=(Tensor[(7, 8, 14), float32],) */
}

def @func_8894() -> (Tensor[(7, 8, 14), float64],) {
  %196 = fn () -> (Tensor[(7, 8, 14), float64],) {
    %194 = @func_4287() /* ty=(Tensor[(7, 8, 14), float64], Tensor[(7, 8, 14), float32], Tensor[(3584, 1), float32], Tensor[(7, 8, 14), float64]) */;
    %195 = %194.0;
    (%195,)
  };
  %196() /* ty=(Tensor[(7, 8, 14), float64],) */
}

def @func_6262() -> (Tensor[(7, 8, 14), float64], Tensor[(7, 8, 14), float64], Tensor[(7, 8, 14), float64], Tensor[(7, 8, 14), float32], Tensor[(5, ?, 15), uint64], Tensor[(75, 1), uint64], Tensor[(7, 8, 14), float32]) {
  %214 = fn () -> (Tensor[(7, 8, 14), float64], Tensor[(7, 8, 14), float64], Tensor[(7, 8, 14), float64], Tensor[(7, 8, 14), float32], Tensor[(5, ?, 15), uint64], Tensor[(75, 1), uint64], Tensor[(7, 8, 14), float32]) {
    %197 = @func_2487() /* ty=(Tensor[(7, 8, 14), float64],) */;
    %198 = @func_3413() /* ty=(Tensor[(7, 8, 14), float32], Tensor[(7, 8, 14), float64]) */;
    %199 = @func_3871() /* ty=(Tensor[(7, 8, 14), float64], Tensor[(7, 8, 14), float32]) */;
    %200 = cast(meta[relay.Constant][11] /* ty=Tensor[(75, 1), uint64] */, dtype="uint64") /* ty=Tensor[(75, 1), uint64] */;
    %201 = cast(meta[relay.Constant][11] /* ty=Tensor[(75, 1), uint64] */, dtype="uint64") /* ty=Tensor[(75, 1), uint64] */;
    %202 = %199.1;
    %203 = cast(%202, dtype="float64") /* ty=Tensor[(7, 8, 14), float64] */;
    %204 = reshape(%200, newshape=[5, 1, 15]) /* ty=Tensor[(5, 1, 15), uint64] */;
    %205 = reshape(%201, newshape=[5, 1, 15]) /* ty=Tensor[(5, 1, 15), uint64] */;
    %206 = reshape(%203, newshape=[56, 14]) /* ty=Tensor[(56, 14), float64] */;
    %207 = @func_5895(%204, %205, %206) /* ty=(Tensor[(5, ?, 15), uint64], Tensor[(5, 1, 15), float64], Tensor[(7, 8, 14), int8], Tensor[(56, 14), float64], Tensor[(7, 8, 14), float32]) */;
    %208 = @func_3871() /* ty=(Tensor[(7, 8, 14), float64], Tensor[(7, 8, 14), float32]) */;
    %209 = %197.0;
    %210 = @func_1291() /* ty=Tensor[(7, 8, 14), float64] */;
    %211 = %198.1;
    %212 = %207.0;
    %213 = %208.1;
    (%209, %210, %211, %202, %212, meta[relay.Constant][11] /* ty=Tensor[(75, 1), uint64] */, %213)
  };
  %214() /* ty=(Tensor[(7, 8, 14), float64], Tensor[(7, 8, 14), float64], Tensor[(7, 8, 14), float64], Tensor[(7, 8, 14), float32], Tensor[(5, ?, 15), uint64], Tensor[(75, 1), uint64], Tensor[(7, 8, 14), float32]) */
}

def @func_2706() -> (Tensor[(7, 8, 14), float64],) {
  %218 = fn () -> (Tensor[(7, 8, 14), float64],) {
    %215 = @func_1251() /* ty=Tensor[(7, 8, 14), float64] */;
    %216 = cast(%215, dtype="float64") /* ty=Tensor[(7, 8, 14), float64] */;
    %217 = sigmoid(%216) /* ty=Tensor[(7, 8, 14), float64] */;
    (%217,)
  };
  %218() /* ty=(Tensor[(7, 8, 14), float64],) */
}

def @func_5552() -> Tensor[(7, 8, 14), float64] {
  @func_1291() /* ty=Tensor[(7, 8, 14), float64] */
}

def @func_3436() -> Tensor[(7, 8, 14), float32] {
  %220 = fn () -> Tensor[(7, 8, 14), float32] {
    %219 = @func_3413() /* ty=(Tensor[(7, 8, 14), float32], Tensor[(7, 8, 14), float64]) */;
    %219.0
  };
  %220() /* ty=Tensor[(7, 8, 14), float32] */
}

def @func_11567(%var_11566: Tensor[(16, 11, 6), float32]) -> (Tensor[(16, 11, 6), float64], Tensor[(7, 8, 14), float64]) {
  %229 = fn (%var_11557: Tensor[(16, 11, 6), float32]) -> (Tensor[(16, 11, 6), float64], Tensor[(7, 8, 14), float64]) {
    %221 = @func_11532() /* ty=(Tensor[(16, 1, 6), float32],) */;
    %222 = %221.0;
    %223 = cast(%222, dtype="float32") /* ty=Tensor[(16, 1, 6), float32] */;
    %224 = tan(%223) /* ty=Tensor[(16, 1, 6), float32] */;
    %225 = cast(%224, dtype="float64") /* ty=Tensor[(16, 1, 6), float64] */;
    %226 = cast(%var_11557, dtype="float64") /* ty=Tensor[(16, 11, 6), float64] */;
    %227 = floor_mod(%225, %226) /* ty=Tensor[(16, 11, 6), float64] */;
    %228 = @func_9242() /* ty=Tensor[(7, 8, 14), float64] */;
    (%227, %228)
  };
  %229(%var_11566) /* ty=(Tensor[(16, 11, 6), float64], Tensor[(7, 8, 14), float64]) */
}

def @main(%var_12608: uint16, %var_12609: Tensor[(11, 13, 10), uint16]) -> Tensor[(11, 13, 10), uint16] {
  %230 = cast(%var_12608, dtype="uint16") /* ty=uint16 */;
  %231 = cast(%var_12609, dtype="uint16") /* ty=Tensor[(11, 13, 10), uint16] */;
  maximum(%230, %231) /* ty=Tensor[(11, 13, 10), uint16] */
}

def @func_9244() -> Tensor[(7, 8, 14), float64] {
  @func_9242() /* ty=Tensor[(7, 8, 14), float64] */
}

def @func_4289() -> (Tensor[(7, 8, 14), float64], Tensor[(7, 8, 14), float32], Tensor[(3584, 1), float32], Tensor[(7, 8, 14), float64]) {
  @func_4287() /* ty=(Tensor[(7, 8, 14), float64], Tensor[(7, 8, 14), float32], Tensor[(3584, 1), float32], Tensor[(7, 8, 14), float64]) */
}

def @func_8676() -> (Tensor[(7, 8, 14), float64], Tensor[(7, 8, 14), float32]) {
  %232 = @func_2159() /* ty=Tensor[(7, 8, 14), float64] */;
  %233 = @func_3435() /* ty=Tensor[(7, 8, 14), float32] */;
  (%232, %233)
}

def @func_7129() -> Tensor[(16, 1, 6), float32] {
  @func_7127() /* ty=Tensor[(16, 1, 6), float32] */
}

def @func_3202(%var_3201: Tensor[(13, 3, 14), float64]) -> (Tensor[(13, 3, 14), float64],) {
  %236 = fn (%var_3194: Tensor[(13, 3, 14), float64]) -> (Tensor[(13, 3, 14), float64],) {
    %234 = cast(%var_3194, dtype="float64") /* ty=Tensor[(13, 3, 14), float64] */;
    %235 = erf(%234) /* ty=Tensor[(13, 3, 14), float64] */;
    (%235,)
  };
  %236(%var_3201) /* ty=(Tensor[(13, 3, 14), float64],) */
}

def @func_2039() -> Tensor[(7, 8, 14), float32] {
  %237 = fn () -> Tensor[(7, 8, 14), float32] {
    @func_1357() /* ty=Tensor[(7, 8, 14), float32] */
  };
  %237() /* ty=Tensor[(7, 8, 14), float32] */
}

def @func_7287(%var_7286: Tensor[(16, 1, 16), int32]) -> Tensor[(16, 16, 16), float32] {
  %242 = fn (%var_7278: Tensor[(16, 1, 16), int32]) -> Tensor[(16, 16, 16), float32] {
    %238 = cast(%var_7278, dtype="int32") /* ty=Tensor[(16, 1, 16), int32] */;
    %239 = cast(meta[relay.Constant][12] /* ty=Tensor[(16, 16, 16), int32] */, dtype="int32") /* ty=Tensor[(16, 16, 16), int32] */;
    %240 = left_shift(%238, %239) /* ty=Tensor[(16, 16, 16), int32] */;
    %241 = cast(%240, dtype="float32") /* ty=Tensor[(16, 16, 16), float32] */;
    acos(%241) /* ty=Tensor[(16, 16, 16), float32] */
  };
  %242(%var_7286) /* ty=Tensor[(16, 16, 16), float32] */
}

def @func_2536() -> (Tensor[(1, 14, 6), float64],) {
  %245 = fn () -> (Tensor[(1, 14, 6), float64],) {
    %243 = cast(meta[relay.Constant][13] /* ty=Tensor[(1, 14, 6), float64] */, dtype="float64") /* ty=Tensor[(1, 14, 6), float64] */;
    %244 = sigmoid(%243) /* ty=Tensor[(1, 14, 6), float64] */;
    (%244,)
  };
  %245() /* ty=(Tensor[(1, 14, 6), float64],) */
}

def @func_10292() -> Tensor[(7, 8, 14), float64] {
  @func_10290() /* ty=Tensor[(7, 8, 14), float64] */
}

def @func_12534() -> (Tensor[(7, 8, 14), float32], Tensor[(7, 8, 14), float32], Tensor[(7, 8, 14), float64]) {
  %251 = fn () -> (Tensor[(7, 8, 14), float32], Tensor[(7, 8, 14), float32], Tensor[(7, 8, 14), float64]) {
    %246 = @func_3754() /* ty=(Tensor[(7, 8, 14), float32],) */;
    %247 = @func_7395() /* ty=(Tensor[(7, 8, 14), float32], Tensor[(7, 8, 14), float32]) */;
    %248 = %246.0;
    %249 = %247.1;
    %250 = @func_9242() /* ty=Tensor[(7, 8, 14), float64] */;
    (%248, %249, %250)
  };
  %251() /* ty=(Tensor[(7, 8, 14), float32], Tensor[(7, 8, 14), float32], Tensor[(7, 8, 14), float64]) */
}

def @func_10003() -> Tensor[(7, 8, 14), float64] {
  %253 = fn () -> Tensor[(7, 8, 14), float64] {
    %252 = @func_3546() /* ty=(Tensor[(7, 8, 14), float32], Tensor[(7, 8, 14), float64]) */;
    %252.1
  };
  %253() /* ty=Tensor[(7, 8, 14), float64] */
}

def @func_5899(%var_5896: Tensor[(5, 1, 15), uint64], %var_5897: Tensor[(5, 1, 15), uint64], %var_5898: Tensor[(56, 14), float64]) -> (Tensor[(5, ?, 15), uint64], Tensor[(5, 1, 15), float64], Tensor[(7, 8, 14), int8], Tensor[(56, 14), float64], Tensor[(7, 8, 14), float32]) {
  %266 = fn (%var_5875: Tensor[(5, 1, 15), uint64], %var_5876: Tensor[(5, 1, 15), uint64], %var_5887: Tensor[(56, 14), float64]) -> (Tensor[(5, ?, 15), uint64], Tensor[(5, 1, 15), float64], Tensor[(7, 8, 14), int8], Tensor[(56, 14), float64], Tensor[(7, 8, 14), float32]) {
    %254 = cast(%var_5876, dtype="uint64") /* ty=Tensor[(5, 1, 15), uint64] */;
    %255 = shape_of(%var_5875, dtype="int32") /* ty=Tensor[(3), int32] */;
    %256 = cast(%var_5875, dtype="uint64") /* ty=Tensor[(5, 1, 15), uint64] */;
    %257 = dyn.reshape(%254, %255, newshape=[]) /* ty=Tensor[(?, ?, ?), uint64] */;
    %258 = cast(%var_5875, dtype="float64") /* ty=Tensor[(5, 1, 15), float64] */;
    %259 = cast(%var_5887, dtype="float64") /* ty=Tensor[(56, 14), float64] */;
    %260 = reshape(%259, newshape=[7, 8, 14]) /* ty=Tensor[(7, 8, 14), float64] */;
    %261 = @func_3139(%260) /* ty=(Tensor[(7, 8, 14), int8], Tensor[(5, 7), float32], Tensor[(35), float32]) */;
    %262 = bitwise_xor(%256, %257) /* ty=Tensor[(5, ?, 15), uint64] */;
    %263 = cosh(%258) /* ty=Tensor[(5, 1, 15), float64] */;
    %264 = %261.0;
    %265 = @func_1357() /* ty=Tensor[(7, 8, 14), float32] */;
    (%262, %263, %264, %var_5887, %265)
  };
  %266(%var_5896, %var_5897, %var_5898) /* ty=(Tensor[(5, ?, 15), uint64], Tensor[(5, 1, 15), float64], Tensor[(7, 8, 14), int8], Tensor[(56, 14), float64], Tensor[(7, 8, 14), float32]) */
}

def @func_8813() -> (Tensor[(7, 8, 14), float64], Tensor[(7, 8, 14), float32], Tensor[(1344), bool]) {
  @func_8811() /* ty=(Tensor[(7, 8, 14), float64], Tensor[(7, 8, 14), float32], Tensor[(1344), bool]) */
}

def @func_8436() -> (Tensor[(16, 1, 6), float32],) {
  %267 = @func_7127() /* ty=Tensor[(16, 1, 6), float32] */;
  (%267,)
}

def @func_6147(%var_6145: Tensor[(48, 1), float64]) -> (Tensor[(7, 8, 14), float32], Tensor[(7, 8, 14), float32], Tensor[(7, 8, 14), float64], Tensor[(48, 10), int32], Tensor[(56, 14), float64], Tensor[(75), uint64]) {
  @func_6144(%var_6145) /* ty=(Tensor[(7, 8, 14), float32], Tensor[(7, 8, 14), float32], Tensor[(7, 8, 14), float64], Tensor[(48, 10), int32], Tensor[(56, 14), float64], Tensor[(75), uint64]) */
}

def @func_6904() -> (Tensor[(7, 8, 14), float32],) {
  %270 = fn () -> (Tensor[(7, 8, 14), float32],) {
    %268 = @func_5870() /* ty=(Tensor[(7, 8, 14), float32],) */;
    %269 = %268.0;
    (%269,)
  };
  %270() /* ty=(Tensor[(7, 8, 14), float32],) */
}

def @func_12345() -> (Tensor[(7, 8, 14), float32],) {
  %273 = fn () -> (Tensor[(7, 8, 14), float32],) {
    %271 = @func_8540() /* ty=(Tensor[(7, 8, 14), float32],) */;
    %272 = %271.0;
    (%272,)
  };
  %273() /* ty=(Tensor[(7, 8, 14), float32],) */
}

def @func_12028() -> (Tensor[(7, 8, 14), float32], Tensor[(7, 8, 14), float32]) {
  %274 = @func_7466() /* ty=Tensor[(7, 8, 14), float32] */;
  %275 = @func_2072() /* ty=Tensor[(7, 8, 14), float32] */;
  (%274, %275)
}

def @func_5474() -> Tensor[(96), float32] {
  %276 = @func_4041() /* ty=(Tensor[(7, 8, 14), float32], Tensor[(16, 1, 6), float32], Tensor[(96), float32]) */;
  %276.2
}

def @func_7829() -> (Tensor[(7, 8, 14), float64],) {
  %277 = @func_3861() /* ty=(Tensor[(7, 8, 14), float64],) */;
  %278 = %277.0;
  (%278,)
}

def @func_12385() -> (Tensor[(7, 8, 14), float32],) {
  %279 = @func_5870() /* ty=(Tensor[(7, 8, 14), float32],) */;
  %280 = %279.0;
  (%280,)
}

def @func_1174() -> Tensor[(7, 8, 14), float64] {
  @func_1172() /* ty=Tensor[(7, 8, 14), float64] */
}

def @func_10960() -> (Tensor[(7, 8, 14), float32], Tensor[(9, 4, 16), float64], Tensor[(576), float64], Tensor[(7, 8, 14), float32], Tensor[(7, 8, 14), float32]) {
  %290 = fn () -> (Tensor[(7, 8, 14), float32], Tensor[(9, 4, 16), float64], Tensor[(576), float64], Tensor[(7, 8, 14), float32], Tensor[(7, 8, 14), float32]) {
    %281 = @func_6814() /* ty=(Tensor[(7, 8, 14), float32],) */;
    %282 = cast(meta[relay.Constant][14] /* ty=Tensor[(576), float64] */, dtype="float64") /* ty=Tensor[(576), float64] */;
    %283 = reshape(%282, newshape=[9, 4, 16]) /* ty=Tensor[(9, 4, 16), float64] */;
    %284 = @func_2871(%283) /* ty=(Tensor[(9, 4, 16), float64],) */;
    %285 = @func_6814() /* ty=(Tensor[(7, 8, 14), float32],) */;
    %286 = %281.0;
    %287 = %284.0;
    %288 = %285.0;
    %289 = @func_9977() /* ty=Tensor[(7, 8, 14), float32] */;
    (%286, %287, meta[relay.Constant][14] /* ty=Tensor[(576), float64] */, %288, %289)
  };
  %290() /* ty=(Tensor[(7, 8, 14), float32], Tensor[(9, 4, 16), float64], Tensor[(576), float64], Tensor[(7, 8, 14), float32], Tensor[(7, 8, 14), float32]) */
}

def @func_4340(%var_4328: Tensor[(35), float32]) -> (Tensor[(7, 8, 14), float32], Tensor[(1, 14, 6), float64], Tensor[(7, 8, 14), float64], Tensor[(5, 7), float32], Tensor[(35), float32]) {
  %291 = @func_3109() /* ty=(Tensor[(7, 8, 14), float32],) */;
  %292 = @func_2535() /* ty=(Tensor[(1, 14, 6), float64],) */;
  %293 = @func_2487() /* ty=(Tensor[(7, 8, 14), float64],) */;
  %294 = cast(%var_4328, dtype="float32") /* ty=Tensor[(35), float32] */;
  %295 = reshape(%294, newshape=[5, 7]) /* ty=Tensor[(5, 7), float32] */;
  %296 = @func_162(%295) /* ty=(Tensor[(5, 7), float32], Tensor[(16, 1, 6), float32], Tensor[(96), float32], Tensor[(16, 1, 6), float32]) */;
  %297 = %291.0;
  %298 = %292.0;
  %299 = %293.0;
  %300 = %296.0;
  (%297, %298, %299, %300, %var_4328)
}

def @func_672(%var_670: Tensor[(15, 6, 10), float32]) -> Tensor[(15, 6, 10), bool] {
  @func_669(%var_670) /* ty=Tensor[(15, 6, 10), bool] */
}

def @func_8966() -> (Tensor[(7, 8, 14), float32], Tensor[(7, 8, 14), float32]) {
  %305 = fn () -> (Tensor[(7, 8, 14), float32], Tensor[(7, 8, 14), float32]) {
    %301 = @func_5870() /* ty=(Tensor[(7, 8, 14), float32],) */;
    %302 = @func_2804() /* ty=(Tensor[(7, 8, 14), float64], Tensor[(7, 8, 14), float32]) */;
    %303 = %301.0;
    %304 = %302.1;
    (%303, %304)
  };
  %305() /* ty=(Tensor[(7, 8, 14), float32], Tensor[(7, 8, 14), float32]) */
}

def @func_2012() -> Tensor[(7, 8, 14), float32] {
  @func_2010() /* ty=Tensor[(7, 8, 14), float32] */
}

def @func_2093() -> Tensor[(7, 8, 14), float32] {
  %306 = fn () -> Tensor[(7, 8, 14), float32] {
    @func_1279() /* ty=Tensor[(7, 8, 14), float32] */
  };
  %306() /* ty=Tensor[(7, 8, 14), float32] */
}

def @func_9185() -> Tensor[(16, 1, 6), float32] {
  @func_9183() /* ty=Tensor[(16, 1, 6), float32] */
}

def @func_6978() -> (Tensor[(7, 8, 14), float64], Tensor[(7, 8, 14), float32]) {
  @func_6976() /* ty=(Tensor[(7, 8, 14), float64], Tensor[(7, 8, 14), float32]) */
}

def @func_10494() -> Tensor[(7, 8, 14), float64] {
  @func_10492() /* ty=Tensor[(7, 8, 14), float64] */
}

def @func_1251() -> Tensor[(7, 8, 14), float64] {
  @func_1172() /* ty=Tensor[(7, 8, 14), float64] */
}

def @func_11809() -> Tensor[(48), float64] {
  %307 = @func_11044() /* ty=(Tensor[(7, 8, 14), float32], Tensor[(7, 8, 14), bool], Tensor[(48), float64]) */;
  %307.2
}

def @func_5476() -> Tensor[(96), float32] {
  @func_5474() /* ty=Tensor[(96), float32] */
}

def @func_11625() -> (Tensor[(7, 8, 14), float64], Tensor[(16, 1, 6), float64]) {
  %316 = fn () -> (Tensor[(7, 8, 14), float64], Tensor[(16, 1, 6), float64]) {
    %308 = @func_3861() /* ty=(Tensor[(7, 8, 14), float64],) */;
    %309 = @func_11532() /* ty=(Tensor[(16, 1, 6), float32],) */;
    %310 = %309.0;
    %311 = cast(%310, dtype="float32") /* ty=Tensor[(16, 1, 6), float32] */;
    %312 = rsqrt(%311) /* ty=Tensor[(16, 1, 6), float32] */;
    %313 = cast(%312, dtype="float64") /* ty=Tensor[(16, 1, 6), float64] */;
    %314 = %308.0;
    %315 = sin(%313) /* ty=Tensor[(16, 1, 6), float64] */;
    (%314, %315)
  };
  %316() /* ty=(Tensor[(7, 8, 14), float64], Tensor[(16, 1, 6), float64]) */
}

def @func_3164() -> Tensor[(7, 8, 14), float32] {
  @func_3162() /* ty=Tensor[(7, 8, 14), float32] */
}

def @func_3139(%var_3128: Tensor[(7, 8, 14), float64]) -> (Tensor[(7, 8, 14), int8], Tensor[(5, 7), float32], Tensor[(35), float32]) {
  %317 = @func_1748() /* ty=Tensor[(7, 8, 14), float64] */;
  %318 = cast(%var_3128, dtype="int8") /* ty=Tensor[(7, 8, 14), int8] */;
  %319 = shape_of(%317, dtype="int32") /* ty=Tensor[(3), int32] */;
  %320 = cast(%317, dtype="int8") /* ty=Tensor[(7, 8, 14), int8] */;
  %321 = dyn.reshape(%318, %319, newshape=[]) /* ty=Tensor[(?, ?, ?), int8] */;
  %322 = cast(meta[relay.Constant][15] /* ty=Tensor[(35), float32] */, dtype="float32") /* ty=Tensor[(35), float32] */;
  %323 = reshape(%322, newshape=[5, 7]) /* ty=Tensor[(5, 7), float32] */;
  %324 = @func_162(%323) /* ty=(Tensor[(5, 7), float32], Tensor[(16, 1, 6), float32], Tensor[(96), float32], Tensor[(16, 1, 6), float32]) */;
  %325 = bitwise_xor(%320, %321) /* ty=Tensor[(7, 8, 14), int8] */;
  %326 = %324.0;
  (%325, %326, meta[relay.Constant][15] /* ty=Tensor[(35), float32] */)
}

def @func_4942() -> Tensor[(7, 8, 14), float64] {
  @func_4940() /* ty=Tensor[(7, 8, 14), float64] */
}

def @func_1358() -> Tensor[(7, 8, 14), float32] {
  %329 = fn () -> Tensor[(7, 8, 14), float32] {
    %327 = @func_1172() /* ty=Tensor[(7, 8, 14), float64] */;
    %328 = cast(%327, dtype="float32") /* ty=Tensor[(7, 8, 14), float32] */;
    log10(%328) /* ty=Tensor[(7, 8, 14), float32] */
  };
  %329() /* ty=Tensor[(7, 8, 14), float32] */
}

def @func_6639(%var_6637: Tensor[(6, 6, 8), float64]) -> (Tensor[(6, 6, 8), float64],) {
  @func_6636(%var_6637) /* ty=(Tensor[(6, 6, 8), float64],) */
}

def @func_4183() -> (Tensor[(7, 8, 14), float64],) {
  @func_4181() /* ty=(Tensor[(7, 8, 14), float64],) */
}

def @func_9810() -> Tensor[(7, 8, 14), float32] {
  @func_2092() /* ty=Tensor[(7, 8, 14), float32] */
}

def @func_8352(%var_8348: Tensor[(280, 1), uint16], %var_8349: Tensor[(420), uint64], %var_8350: Tensor[(405), int32], %var_8351: Tensor[(280, 6), float64]) -> (Tensor[(7, 8, 14), float64], Tensor[(96), float32], Tensor[(420), uint64], Tensor[(405), int32], Tensor[(616, 1), uint32], Tensor[(280, ?), float32], Tensor[(280, 6), uint64]) {
  %355 = fn (%var_8298: Tensor[(280, 1), uint16], %var_8299: Tensor[(420), uint64], %var_8300: Tensor[(405), int32], %var_8335: Tensor[(280, 6), float64]) -> (Tensor[(7, 8, 14), float64], Tensor[(96), float32], Tensor[(420), uint64], Tensor[(405), int32], Tensor[(616, 1), uint32], Tensor[(280, ?), float32], Tensor[(280, 6), uint64]) {
    %330 = cast(%var_8298, dtype="uint16") /* ty=Tensor[(280, 1), uint16] */;
    %331 = cast(%var_8298, dtype="uint16") /* ty=Tensor[(280, 1), uint16] */;
    %332 = cast(%var_8299, dtype="uint64") /* ty=Tensor[(420), uint64] */;
    %333 = cast(%var_8300, dtype="int32") /* ty=Tensor[(405), int32] */;
    %334 = cast(meta[relay.Constant][16] /* ty=Tensor[(616, 1), uint32] */, dtype="uint32") /* ty=Tensor[(616, 1), uint32] */;
    %335 = cast(%var_8298, dtype="float32") /* ty=Tensor[(280, 1), float32] */;
    %336 = reshape(%330, newshape=[10, 4, 7]) /* ty=Tensor[(10, 4, 7), uint16] */;
    %337 = reshape(%331, newshape=[10, 4, 7]) /* ty=Tensor[(10, 4, 7), uint16] */;
    %338 = reshape(%332, newshape=[14, 2, 15]) /* ty=Tensor[(14, 2, 15), uint64] */;
    %339 = reshape(%333, newshape=[405]) /* ty=Tensor[(405), int32] */;
    %340 = reshape(%334, newshape=[1, 616]) /* ty=Tensor[(1, 616), uint32] */;
    %341 = reshape(%335, newshape=[10, 4, 7]) /* ty=Tensor[(10, 4, 7), float32] */;
    %342 = @func_1856(%336, %337, %338, %339, %340, %341) /* ty=(Tensor[(10, 4, 7), bool], Tensor[(7, 8, 14), float64], Tensor[(420), uint64], Tensor[(14, 2, 15), float64], Tensor[(7, 8, 14), float64], Tensor[(2, 48), float32], Tensor[(405), int32], Tensor[(1, 616), uint32], Tensor[(96), float32], Tensor[(10, 4, 7), int32], Tensor[(10, 4, 7), bool]) */;
    %343 = cast(%var_8298, dtype="float64") /* ty=Tensor[(280, 1), float64] */;
    %344 = sqrt(%343) /* ty=Tensor[(280, 1), float64] */;
    %345 = cast(%var_8298, dtype="float32") /* ty=Tensor[(280, 1), float32] */;
    %346 = shape_of(%344, dtype="int32") /* ty=Tensor[(2), int32] */;
    %347 = cast(%344, dtype="float32") /* ty=Tensor[(280, 1), float32] */;
    %348 = dyn.reshape(%345, %346, newshape=[]) /* ty=Tensor[(?, ?), float32] */;
    %349 = cast(%344, dtype="uint64") /* ty=Tensor[(280, 1), uint64] */;
    %350 = cast(%var_8335, dtype="uint64") /* ty=Tensor[(280, 6), uint64] */;
    %351 = @func_3771() /* ty=Tensor[(7, 8, 14), float64] */;
    %352 = %342.8;
    %353 = floor_mod(%347, %348) /* ty=Tensor[(280, ?), float32] */;
    %354 = multiply(%349, %350) /* ty=Tensor[(280, 6), uint64] */;
    (%351, %352, %var_8299, %var_8300, meta[relay.Constant][16] /* ty=Tensor[(616, 1), uint32] */, %353, %354)
  };
  %355(%var_8348, %var_8349, %var_8350, %var_8351) /* ty=(Tensor[(7, 8, 14), float64], Tensor[(96), float32], Tensor[(420), uint64], Tensor[(405), int32], Tensor[(616, 1), uint32], Tensor[(280, ?), float32], Tensor[(280, 6), uint64]) */
}

def @func_3111() -> (Tensor[(7, 8, 14), float32],) {
  @func_3109() /* ty=(Tensor[(7, 8, 14), float32],) */
}

def @func_10270(%var_10268: Tensor[(7, 8, 14), float64]) -> (Tensor[(7, 8, 14), bool],) {
  @func_10267(%var_10268) /* ty=(Tensor[(7, 8, 14), bool],) */
}

def @func_12030() -> (Tensor[(7, 8, 14), float32], Tensor[(7, 8, 14), float32]) {
  @func_12028() /* ty=(Tensor[(7, 8, 14), float32], Tensor[(7, 8, 14), float32]) */
}

def @func_9978() -> Tensor[(7, 8, 14), float32] {
  %357 = fn () -> Tensor[(7, 8, 14), float32] {
    %356 = @func_1554() /* ty=(Tensor[(7, 8, 14), float32],) */;
    %356.0
  };
  %357() /* ty=Tensor[(7, 8, 14), float32] */
}

def @func_8769() -> (Tensor[(7, 8, 14), float64],) {
  @func_8767() /* ty=(Tensor[(7, 8, 14), float64],) */
}

def @func_3872() -> (Tensor[(7, 8, 14), float64], Tensor[(7, 8, 14), float32]) {
  %360 = fn () -> (Tensor[(7, 8, 14), float64], Tensor[(7, 8, 14), float32]) {
    %358 = @func_2159() /* ty=Tensor[(7, 8, 14), float64] */;
    %359 = @func_2416() /* ty=Tensor[(7, 8, 14), float32] */;
    (%358, %359)
  };
  %360() /* ty=(Tensor[(7, 8, 14), float64], Tensor[(7, 8, 14), float32]) */
}

def @func_165(%var_163: Tensor[(5, 7), float32]) -> (Tensor[(5, 7), float32], Tensor[(16, 1, 6), float32], Tensor[(96), float32], Tensor[(16, 1, 6), float32]) {
  @func_162(%var_163) /* ty=(Tensor[(5, 7), float32], Tensor[(16, 1, 6), float32], Tensor[(96), float32], Tensor[(16, 1, 6), float32]) */
}

def @func_11520() -> Tensor[(7, 8, 14), float64] {
  %361 = fn () -> Tensor[(7, 8, 14), float64] {
    @func_10492() /* ty=Tensor[(7, 8, 14), float64] */
  };
  %361() /* ty=Tensor[(7, 8, 14), float64] */
}

def @func_11915() -> Tensor[(7, 8, 14), float64] {
  %362 = @func_2487() /* ty=(Tensor[(7, 8, 14), float64],) */;
  %362.0
}

def @func_2160() -> Tensor[(7, 8, 14), float64] {
  %364 = fn () -> Tensor[(7, 8, 14), float64] {
    %363 = @func_2137() /* ty=(Tensor[(7, 8, 14), float64], Tensor[(7, 8, 14), float64]) */;
    %363.1
  };
  %364() /* ty=Tensor[(7, 8, 14), float64] */
}

def @func_80(%var_78: Tensor[(16, 1, 6), float32]) -> (Tensor[(16, 1, 6), float32],) {
  @func_77(%var_78) /* ty=(Tensor[(16, 1, 6), float32],) */
}

def @func_2404(%var_2403: Tensor[(48), float64]) -> (Tensor[(7, 8, 14), float32], Tensor[(3, 8, 2), float64], Tensor[(48), float64]) {
  %372 = fn (%var_2399: Tensor[(48), float64]) -> (Tensor[(7, 8, 14), float32], Tensor[(3, 8, 2), float64], Tensor[(48), float64]) {
    %365 = @func_2060() /* ty=(Tensor[(7, 8, 14), float32],) */;
    %366 = cast(%var_2399, dtype="float64") /* ty=Tensor[(48), float64] */;
    %367 = cast(%var_2399, dtype="float64") /* ty=Tensor[(48), float64] */;
    %368 = reshape(%366, newshape=[3, 8, 2]) /* ty=Tensor[(3, 8, 2), float64] */;
    %369 = reshape(%367, newshape=[3, 8, 2]) /* ty=Tensor[(3, 8, 2), float64] */;
    %370 = %365.0;
    %371 = @func_2172(%368, %369) /* ty=Tensor[(3, 8, 2), float64] */;
    (%370, %371, %var_2399)
  };
  %372(%var_2403) /* ty=(Tensor[(7, 8, 14), float32], Tensor[(3, 8, 2), float64], Tensor[(48), float64]) */
}

def @func_12333() -> (Tensor[(7, 8, 14), float32], Tensor[(7, 8, 14), float64], Tensor[(7, 8, 14), float32], Tensor[(7, 8, 14), float32], Tensor[(7, 8, 14), bool]) {
  %385 = fn () -> (Tensor[(7, 8, 14), float32], Tensor[(7, 8, 14), float64], Tensor[(7, 8, 14), float32], Tensor[(7, 8, 14), float32], Tensor[(7, 8, 14), bool]) {
    %373 = @func_7521() /* ty=(Tensor[(7, 8, 14), float32],) */;
    %374 = @func_2705() /* ty=(Tensor[(7, 8, 14), float64],) */;
    %375 = @func_2060() /* ty=(Tensor[(7, 8, 14), float32],) */;
    %376 = @func_11336() /* ty=(Tensor[(7, 8, 14), float32], Tensor[(7, 8, 14), float32], Tensor[(7, 8, 14), float32], Tensor[(7, 8, 14), float32]) */;
    %377 = %375.0;
    %378 = cast(%377, dtype="float64") /* ty=Tensor[(7, 8, 14), float64] */;
    %379 = reshape(%378, newshape=[7, 8, 14]) /* ty=Tensor[(7, 8, 14), float64] */;
    %380 = @func_10267(%379) /* ty=(Tensor[(7, 8, 14), bool],) */;
    %381 = %373.0;
    %382 = %374.0;
    %383 = %376.1;
    %384 = %380.0;
    (%381, %382, %377, %383, %384)
  };
  %385() /* ty=(Tensor[(7, 8, 14), float32], Tensor[(7, 8, 14), float64], Tensor[(7, 8, 14), float32], Tensor[(7, 8, 14), float32], Tensor[(7, 8, 14), bool]) */
}

def @func_1556() -> (Tensor[(7, 8, 14), float32],) {
  @func_1554() /* ty=(Tensor[(7, 8, 14), float32],) */
}

def @func_3388(%var_3387: Tensor[(13, 3, 2), uint64]) -> (Tensor[(13, 3, 2), uint64], Tensor[(13, 3, 2), float64], Tensor[(13, 3, 2), float32], Tensor[(7, 8, 14), float32], Tensor[(7, 8, 14), float32], Tensor[(7, 8, 14), float32], Tensor[(7, 8, 14), float32], Tensor[(1344), float64], Tensor[(7, 8, 14), float32]) {
  %405 = fn (%var_3313: Tensor[(13, 3, 2), uint64]) -> (Tensor[(13, 3, 2), uint64], Tensor[(13, 3, 2), float64], Tensor[(13, 3, 2), float32], Tensor[(7, 8, 14), float32], Tensor[(7, 8, 14), float32], Tensor[(7, 8, 14), float32], Tensor[(7, 8, 14), float32], Tensor[(1344), float64], Tensor[(7, 8, 14), float32]) {
    %386 = cast(meta[relay.Constant][17] /* ty=Tensor[(13, 3, 2), uint64] */, dtype="uint64") /* ty=Tensor[(13, 3, 2), uint64] */;
    %387 = shape_of(%var_3313, dtype="int32") /* ty=Tensor[(3), int32] */;
    %388 = cast(%var_3313, dtype="uint64") /* ty=Tensor[(13, 3, 2), uint64] */;
    %389 = dyn.reshape(%386, %387, newshape=[]) /* ty=Tensor[(?, ?, ?), uint64] */;
    %390 = cast(%var_3313, dtype="float64") /* ty=Tensor[(13, 3, 2), float64] */;
    %391 = cast(%var_3313, dtype="float32") /* ty=Tensor[(13, 3, 2), float32] */;
    %392 = cast(meta[relay.Constant][18] /* ty=Tensor[(1344), float64] */, dtype="float64") /* ty=Tensor[(1344), float64] */;
    %393 = reshape(%392, newshape=[16, 14, 6]) /* ty=Tensor[(16, 14, 6), float64] */;
    %394 = @func_3053(%393) /* ty=(Tensor[(16, 14, 6), float64], Tensor[(7, 8, 14), float32]) */;
    %395 = @func_1357() /* ty=Tensor[(7, 8, 14), float32] */;
    %396 = cast(%395, dtype="float32") /* ty=Tensor[(7, 8, 14), float32] */;
    %397 = right_shift(%388, %389) /* ty=Tensor[(13, 3, 2), uint64] */;
    %398 = tan(%390) /* ty=Tensor[(13, 3, 2), float64] */;
    %399 = log2(%391) /* ty=Tensor[(13, 3, 2), float32] */;
    %400 = @func_1279() /* ty=Tensor[(7, 8, 14), float32] */;
    %401 = @func_3162() /* ty=Tensor[(7, 8, 14), float32] */;
    %402 = @func_1357() /* ty=Tensor[(7, 8, 14), float32] */;
    %403 = %394.1;
    %404 = acosh(%396) /* ty=Tensor[(7, 8, 14), float32] */;
    (%397, %398, %399, %400, %401, %402, %403, meta[relay.Constant][18] /* ty=Tensor[(1344), float64] */, %404)
  };
  %405(%var_3387) /* ty=(Tensor[(13, 3, 2), uint64], Tensor[(13, 3, 2), float64], Tensor[(13, 3, 2), float32], Tensor[(7, 8, 14), float32], Tensor[(7, 8, 14), float32], Tensor[(7, 8, 14), float32], Tensor[(7, 8, 14), float32], Tensor[(1344), float64], Tensor[(7, 8, 14), float32]) */
}

def @func_77(%var_53: Tensor[(16, 1, 6), float32]) -> (Tensor[(16, 1, 6), float32],) {
  %406 = cast(%var_53, dtype="float32") /* ty=Tensor[(16, 1, 6), float32] */;
  %407 = cosh(%406) /* ty=Tensor[(16, 1, 6), float32] */;
  (%407,)
}

def @func_5102(%var_5099: Tensor[(280), uint16], %var_5100: Tensor[(420), uint64], %var_5101: Tensor[(9, 45), int32]) -> (Tensor[(7, 8, 14), float32], Tensor[(7, 8, 14), float64], Tensor[(7, 8, 14), float32], Tensor[(96), float32], Tensor[(280), uint16], Tensor[(420), uint64], Tensor[(9, 45), int32], Tensor[(14, 44), uint32]) {
  @func_5097(%var_5099, %var_5100, %var_5101) /* ty=(Tensor[(7, 8, 14), float32], Tensor[(7, 8, 14), float64], Tensor[(7, 8, 14), float32], Tensor[(96), float32], Tensor[(280), uint16], Tensor[(420), uint64], Tensor[(9, 45), int32], Tensor[(14, 44), uint32]) */
}

def @func_2437(%var_2435: Tensor[(420), uint64]) -> (Tensor[(7, 8, 14), float32], Tensor[(7, 8, 14), float32], Tensor[(420), uint64], Tensor[(15, 6, 10), bool], Tensor[(900), float32]) {
  @func_2434(%var_2435) /* ty=(Tensor[(7, 8, 14), float32], Tensor[(7, 8, 14), float32], Tensor[(420), uint64], Tensor[(15, 6, 10), bool], Tensor[(900), float32]) */
}

def @func_10655() -> (Tensor[(7, 8, 14), float64],) {
  %408 = @func_6261() /* ty=(Tensor[(7, 8, 14), float64], Tensor[(7, 8, 14), float64], Tensor[(7, 8, 14), float64], Tensor[(7, 8, 14), float32], Tensor[(5, ?, 15), uint64], Tensor[(75, 1), uint64], Tensor[(7, 8, 14), float32]) */;
  %409 = %408.0;
  (%409,)
}

def @func_3568() -> (Tensor[(7, 8, 14), float32],) {
  %410 = @func_1554() /* ty=(Tensor[(7, 8, 14), float32],) */;
  %411 = %410.0;
  (%411,)
}

def @func_7363(%var_7362: uint16) -> (Tensor[(13, 8, 12), uint16], Tensor[(7, 8, 14), float32]) {
  %417 = fn (%var_7345: uint16) -> (Tensor[(13, 8, 12), uint16], Tensor[(7, 8, 14), float32]) {
    %412 = cast(%var_7345, dtype="uint16") /* ty=uint16 */;
    %413 = cast(meta[relay.Constant][19] /* ty=Tensor[(13, 8, 12), uint16] */, dtype="uint16") /* ty=Tensor[(13, 8, 12), uint16] */;
    %414 = @func_6814() /* ty=(Tensor[(7, 8, 14), float32],) */;
    %415 = minimum(%412, %413) /* ty=Tensor[(13, 8, 12), uint16] */;
    %416 = %414.0;
    (%415, %416)
  };
  %417(%var_7362) /* ty=(Tensor[(13, 8, 12), uint16], Tensor[(7, 8, 14), float32]) */
}

def @func_8144() -> (Tensor[(7, 8, 14), float32],) {
  @func_8142() /* ty=(Tensor[(7, 8, 14), float32],) */
}

def @func_3570() -> (Tensor[(7, 8, 14), float32],) {
  @func_3568() /* ty=(Tensor[(7, 8, 14), float32],) */
}

def @func_10027(%var_10026: uint16) -> (Tensor[(7, 8, 14), float64], Tensor[(7, 8, 14), float32], uint16, Tensor[(7, 8, 14), float64]) {
  %426 = fn (%var_10020: uint16) -> (Tensor[(7, 8, 14), float64], Tensor[(7, 8, 14), float32], uint16, Tensor[(7, 8, 14), float64]) {
    %418 = @func_2487() /* ty=(Tensor[(7, 8, 14), float64],) */;
    %419 = cast(%var_10020, dtype="uint16") /* ty=uint16 */;
    %420 = reshape(%419, newshape=[]) /* ty=uint16 */;
    %421 = @func_7361(%420) /* ty=(Tensor[(13, 8, 12), uint16], Tensor[(7, 8, 14), float32]) */;
    %422 = @func_5461() /* ty=(Tensor[(7, 8, 14), float64], Tensor[(7, 8, 14), float32]) */;
    %423 = %418.0;
    %424 = %421.1;
    %425 = %422.0;
    (%423, %424, %var_10020, %425)
  };
  %426(%var_10026) /* ty=(Tensor[(7, 8, 14), float64], Tensor[(7, 8, 14), float32], uint16, Tensor[(7, 8, 14), float64]) */
}

def @func_9449() -> (Tensor[(7, 8, 14), bool],) {
  %427 = @func_5585() /* ty=(Tensor[(7, 8, 14), float64], Tensor[(7, 8, 14), bool]) */;
  %428 = %427.1;
  (%428,)
}

def @func_5264() -> Tensor[(7, 8, 14), float64] {
  @func_5262() /* ty=Tensor[(7, 8, 14), float64] */
}

def @func_9678() -> (Tensor[(7, 8, 14), float32],) {
  %431 = fn () -> (Tensor[(7, 8, 14), float32],) {
    %429 = @func_4611() /* ty=(Tensor[(7, 8, 14), float32], Tensor[(48), float64], Tensor[(48), float64]) */;
    %430 = %429.0;
    (%430,)
  };
  %431() /* ty=(Tensor[(7, 8, 14), float32],) */
}

def @func_7831() -> (Tensor[(7, 8, 14), float64],) {
  @func_7829() /* ty=(Tensor[(7, 8, 14), float64],) */
}

def @func_7950() -> Tensor[(7, 8, 14), float32] {
  @func_7948() /* ty=Tensor[(7, 8, 14), float32] */
}

def @func_7948() -> Tensor[(7, 8, 14), float32] {
  %432 = @func_2060() /* ty=(Tensor[(7, 8, 14), float32],) */;
  %432.0
}

def @func_317(%var_306: Tensor[(11, 14, 4), uint32], %var_307: Tensor[(11, 14, 4), uint32], %var_315: Tensor[(4, 24), float32]) -> (Tensor[(11, 14, 4), uint32], Tensor[(16, 1, 6), float32], Tensor[(4, 24), float32]) {
  %433 = cast(%var_307, dtype="uint32") /* ty=Tensor[(11, 14, 4), uint32] */;
  %434 = shape_of(%var_306, dtype="int32") /* ty=Tensor[(3), int32] */;
  %435 = cast(%var_306, dtype="uint32") /* ty=Tensor[(11, 14, 4), uint32] */;
  %436 = dyn.reshape(%433, %434, newshape=[]) /* ty=Tensor[(?, ?, ?), uint32] */;
  %437 = cast(%var_315, dtype="float32") /* ty=Tensor[(4, 24), float32] */;
  %438 = reshape(%437, newshape=[16, 1, 6]) /* ty=Tensor[(16, 1, 6), float32] */;
  %439 = @func_77(%438) /* ty=(Tensor[(16, 1, 6), float32],) */;
  %440 = bitwise_xor(%435, %436) /* ty=Tensor[(11, 14, 4), uint32] */;
  %441 = %439.0;
  (%440, %441, %var_315)
}

def @func_1477(%var_1476: Tensor[(14, 16, 16), float32]) -> (Tensor[(14, 16, 16), float32],) {
  %444 = fn (%var_1469: Tensor[(14, 16, 16), float32]) -> (Tensor[(14, 16, 16), float32],) {
    %442 = cast(%var_1469, dtype="float32") /* ty=Tensor[(14, 16, 16), float32] */;
    %443 = asin(%442) /* ty=Tensor[(14, 16, 16), float32] */;
    (%443,)
  };
  %444(%var_1476) /* ty=(Tensor[(14, 16, 16), float32],) */
}

def @func_7522() -> (Tensor[(7, 8, 14), float32],) {
  %447 = fn () -> (Tensor[(7, 8, 14), float32],) {
    %445 = @func_3754() /* ty=(Tensor[(7, 8, 14), float32],) */;
    %446 = %445.0;
    (%446,)
  };
  %447() /* ty=(Tensor[(7, 8, 14), float32],) */
}

def @func_10214() -> (Tensor[(7, 8, 14), float32], Tensor[(7, 8, 14), float64]) {
  @func_10212() /* ty=(Tensor[(7, 8, 14), float32], Tensor[(7, 8, 14), float64]) */
}

def @func_4940() -> Tensor[(7, 8, 14), float64] {
  @func_1291() /* ty=Tensor[(7, 8, 14), float64] */
}

def @func_10821() -> (Tensor[(96), float32], Tensor[(7, 8, 14), float32], Tensor[(7, 8, 14), float32]) {
  @func_10819() /* ty=(Tensor[(96), float32], Tensor[(7, 8, 14), float32], Tensor[(7, 8, 14), float32]) */
}

def @func_6754() -> Tensor[(7, 8, 14), float64] {
  @func_5023() /* ty=Tensor[(7, 8, 14), float64] */
}

def @func_5745() -> Tensor[(96), float32] {
  %449 = fn () -> Tensor[(96), float32] {
    %448 = @func_4041() /* ty=(Tensor[(7, 8, 14), float32], Tensor[(16, 1, 6), float32], Tensor[(96), float32]) */;
    %448.2
  };
  %449() /* ty=Tensor[(96), float32] */
}

def @func_3825(%var_3824: Tensor[(7, 8, 14), float32]) -> (Tensor[(7, 8, 14), int32],) {
  %457 = fn (%var_3805: Tensor[(7, 8, 14), float32]) -> (Tensor[(7, 8, 14), int32],) {
    %450 = @func_2060() /* ty=(Tensor[(7, 8, 14), float32],) */;
    %451 = %450.0;
    %452 = cast(%var_3805, dtype="int32") /* ty=Tensor[(7, 8, 14), int32] */;
    %453 = shape_of(%451, dtype="int32") /* ty=Tensor[(3), int32] */;
    %454 = cast(%451, dtype="int32") /* ty=Tensor[(7, 8, 14), int32] */;
    %455 = dyn.reshape(%452, %453, newshape=[]) /* ty=Tensor[(?, ?, ?), int32] */;
    %456 = right_shift(%454, %455) /* ty=Tensor[(7, 8, 14), int32] */;
    (%456,)
  };
  %457(%var_3824) /* ty=(Tensor[(7, 8, 14), int32],) */
}

def @func_8026(%var_8024: Tensor[(3584), float32]) -> (Tensor[(7, 8, 14), float64], Tensor[(3584), float32], Tensor[(7, 8, 14), float64], Tensor[(14, 16, 16), float32], Tensor[(3584), float32]) {
  @func_8023(%var_8024) /* ty=(Tensor[(7, 8, 14), float64], Tensor[(3584), float32], Tensor[(7, 8, 14), float64], Tensor[(14, 16, 16), float32], Tensor[(3584), float32]) */
}

def @func_10545() -> Tensor[(7, 8, 14), float64] {
  %459 = fn () -> Tensor[(7, 8, 14), float64] {
    %458 = @func_7740() /* ty=(Tensor[(7, 8, 14), float64],) */;
    %458.0
  };
  %459() /* ty=Tensor[(7, 8, 14), float64] */
}

def @func_1966(%var_1965: Tensor[(420), uint64]) -> (Tensor[(7, 8, 14), float32], Tensor[(7, 8, 14), float32], Tensor[(14, 2, 15), uint64], Tensor[(420), uint64]) {
  %467 = fn (%var_1954: Tensor[(420), uint64]) -> (Tensor[(7, 8, 14), float32], Tensor[(7, 8, 14), float32], Tensor[(14, 2, 15), uint64], Tensor[(420), uint64]) {
    %460 = cast(%var_1954, dtype="uint64") /* ty=Tensor[(420), uint64] */;
    %461 = cast(%var_1954, dtype="uint64") /* ty=Tensor[(420), uint64] */;
    %462 = reshape(%460, newshape=[14, 2, 15]) /* ty=Tensor[(14, 2, 15), uint64] */;
    %463 = reshape(%461, newshape=[14, 2, 15]) /* ty=Tensor[(14, 2, 15), uint64] */;
    %464 = @func_1357() /* ty=Tensor[(7, 8, 14), float32] */;
    %465 = @func_1279() /* ty=Tensor[(7, 8, 14), float32] */;
    %466 = @func_1036(%462, %463) /* ty=Tensor[(14, 2, 15), uint64] */;
    (%464, %465, %466, %var_1954)
  };
  %467(%var_1965) /* ty=(Tensor[(7, 8, 14), float32], Tensor[(7, 8, 14), float32], Tensor[(14, 2, 15), uint64], Tensor[(420), uint64]) */
}

def @func_12109(%var_12107: Tensor[(6, 6, 8), float64], %var_12108: Tensor[(660), float64]) -> (Tensor[(7, 8, 14), float32], Tensor[(72, 4), float64], Tensor[(6, 6, 8), float32], Tensor[(7, 8, 14), float32], Tensor[(660), float64]) {
  %487 = fn (%var_12078: Tensor[(6, 6, 8), float64], %var_12103: Tensor[(660), float64]) -> (Tensor[(7, 8, 14), float32], Tensor[(72, 4), float64], Tensor[(6, 6, 8), float32], Tensor[(7, 8, 14), float32], Tensor[(660), float64]) {
    %468 = cast(meta[relay.Constant][20] /* ty=Tensor[(72, 4), float64] */, dtype="float64") /* ty=Tensor[(72, 4), float64] */;
    %469 = reshape(%468, newshape=[6, 6, 8]) /* ty=Tensor[(6, 6, 8), float64] */;
    %470 = @func_6636(%469) /* ty=(Tensor[(6, 6, 8), float64],) */;
    %471 = %470.0;
    %472 = cast(%var_12078, dtype="bool") /* ty=Tensor[(6, 6, 8), bool] */;
    %473 = shape_of(%471, dtype="int32") /* ty=Tensor[(3), int32] */;
    %474 = cast(%471, dtype="bool") /* ty=Tensor[(6, 6, 8), bool] */;
    %475 = dyn.reshape(%472, %473, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    %476 = logical_and(%474, %475) /* ty=Tensor[(6, 6, 8), bool] */;
    %477 = cast(%var_12078, dtype="float32") /* ty=Tensor[(6, 6, 8), float32] */;
    %478 = shape_of(%476, dtype="int32") /* ty=Tensor[(3), int32] */;
    %479 = cast(%476, dtype="float32") /* ty=Tensor[(6, 6, 8), float32] */;
    %480 = dyn.reshape(%477, %478, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
    %481 = cast(%var_12103, dtype="float64") /* ty=Tensor[(660), float64] */;
    %482 = reshape(%481, newshape=[11, 4, 15]) /* ty=Tensor[(11, 4, 15), float64] */;
    %483 = @func_6469(%482) /* ty=(Tensor[(11, 4, 15), float64], Tensor[(7, 8, 14), float32], Tensor[(7, 8, 14), float64], Tensor[(3, 8, 2), float64], Tensor[(48), float64], Tensor[(7, 8, 14), float32]) */;
    %484 = @func_10397() /* ty=Tensor[(7, 8, 14), float32] */;
    %485 = power(%479, %480) /* ty=Tensor[(6, 6, 8), float32] */;
    %486 = %483.5;
    (%484, meta[relay.Constant][20] /* ty=Tensor[(72, 4), float64] */, %485, %486, %var_12103)
  };
  %487(%var_12107, %var_12108) /* ty=(Tensor[(7, 8, 14), float32], Tensor[(72, 4), float64], Tensor[(6, 6, 8), float32], Tensor[(7, 8, 14), float32], Tensor[(660), float64]) */
}

def @func_3142(%var_3140: Tensor[(7, 8, 14), float64]) -> (Tensor[(7, 8, 14), int8], Tensor[(5, 7), float32], Tensor[(35), float32]) {
  @func_3139(%var_3140) /* ty=(Tensor[(7, 8, 14), int8], Tensor[(5, 7), float32], Tensor[(35), float32]) */
}

def @func_1707(%var_1691: Tensor[(420), uint64]) -> (Tensor[(7, 8, 14), float32], Tensor[(420), uint64], Tensor[(420), uint64]) {
  %488 = @func_1554() /* ty=(Tensor[(7, 8, 14), float32],) */;
  %489 = cast(%var_1691, dtype="uint64") /* ty=Tensor[(420), uint64] */;
  %490 = reshape(%489, newshape=[420]) /* ty=Tensor[(420), uint64] */;
  %491 = @func_1331(%490) /* ty=(Tensor[(7, 8, 14), float64], Tensor[(14, 2, 15), uint64], Tensor[(420), uint64]) */;
  %492 = %488.0;
  %493 = %491.2;
  (%492, %493, %var_1691)
}

def @func_4524() -> (Tensor[(7, 8, 14), float64],) {
  @func_4522() /* ty=(Tensor[(7, 8, 14), float64],) */
}

def @func_4837(%var_4835: Tensor[(3, 8, 15), int64], %var_4836: Tensor[(3, 8, 15), int64]) -> (Tensor[(3, 8, 15), bool],) {
  @func_4833(%var_4835, %var_4836) /* ty=(Tensor[(3, 8, 15), bool],) */
}

def @func_3109() -> (Tensor[(7, 8, 14), float32],) {
  %494 = @func_2072() /* ty=Tensor[(7, 8, 14), float32] */;
  (%494,)
}

def @func_4612() -> (Tensor[(7, 8, 14), float32], Tensor[(48), float64], Tensor[(48), float64]) {
  %501 = fn () -> (Tensor[(7, 8, 14), float32], Tensor[(48), float64], Tensor[(48), float64]) {
    %495 = @func_1554() /* ty=(Tensor[(7, 8, 14), float32],) */;
    %496 = cast(meta[relay.Constant][21] /* ty=Tensor[(48), float64] */, dtype="float64") /* ty=Tensor[(48), float64] */;
    %497 = reshape(%496, newshape=[48]) /* ty=Tensor[(48), float64] */;
    %498 = @func_4587(%497) /* ty=(Tensor[(7, 8, 14), float32], Tensor[(3, 8, 2), float64], Tensor[(48), float64]) */;
    %499 = %495.0;
    %500 = %498.2;
    (%499, %500, meta[relay.Constant][21] /* ty=Tensor[(48), float64] */)
  };
  %501() /* ty=(Tensor[(7, 8, 14), float32], Tensor[(48), float64], Tensor[(48), float64]) */
}

def @func_4496(%var_4492: Tensor[(280), uint16], %var_4493: Tensor[(420), uint64], %var_4494: Tensor[(616), uint32], %var_4495: Tensor[(3584), float32]) -> (Tensor[(7, 8, 14), float32], Tensor[(10, 4, 7), bool], Tensor[(280), uint16], Tensor[(420), uint64], Tensor[(405), int32], Tensor[(616), uint32], Tensor[(14, 16, 16), float32], Tensor[(3584), float32]) {
  %521 = fn (%var_4464: Tensor[(280), uint16], %var_4465: Tensor[(420), uint64], %var_4467: Tensor[(616), uint32], %var_4484: Tensor[(3584), float32]) -> (Tensor[(7, 8, 14), float32], Tensor[(10, 4, 7), bool], Tensor[(280), uint16], Tensor[(420), uint64], Tensor[(405), int32], Tensor[(616), uint32], Tensor[(14, 16, 16), float32], Tensor[(3584), float32]) {
    %502 = cast(%var_4464, dtype="uint16") /* ty=Tensor[(280), uint16] */;
    %503 = cast(%var_4464, dtype="uint16") /* ty=Tensor[(280), uint16] */;
    %504 = cast(%var_4465, dtype="uint64") /* ty=Tensor[(420), uint64] */;
    %505 = cast(meta[relay.Constant][22] /* ty=Tensor[(405), int32] */, dtype="int32") /* ty=Tensor[(405), int32] */;
    %506 = cast(%var_4467, dtype="uint32") /* ty=Tensor[(616), uint32] */;
    %507 = cast(%var_4464, dtype="float32") /* ty=Tensor[(280), float32] */;
    %508 = reshape(%502, newshape=[10, 4, 7]) /* ty=Tensor[(10, 4, 7), uint16] */;
    %509 = reshape(%503, newshape=[10, 4, 7]) /* ty=Tensor[(10, 4, 7), uint16] */;
    %510 = reshape(%504, newshape=[14, 2, 15]) /* ty=Tensor[(14, 2, 15), uint64] */;
    %511 = reshape(%505, newshape=[405]) /* ty=Tensor[(405), int32] */;
    %512 = reshape(%506, newshape=[1, 616]) /* ty=Tensor[(1, 616), uint32] */;
    %513 = reshape(%507, newshape=[10, 4, 7]) /* ty=Tensor[(10, 4, 7), float32] */;
    %514 = @func_1856(%508, %509, %510, %511, %512, %513) /* ty=(Tensor[(10, 4, 7), bool], Tensor[(7, 8, 14), float64], Tensor[(420), uint64], Tensor[(14, 2, 15), float64], Tensor[(7, 8, 14), float64], Tensor[(2, 48), float32], Tensor[(405), int32], Tensor[(1, 616), uint32], Tensor[(96), float32], Tensor[(10, 4, 7), int32], Tensor[(10, 4, 7), bool]) */;
    %515 = cast(%var_4484, dtype="float32") /* ty=Tensor[(3584), float32] */;
    %516 = reshape(%515, newshape=[14, 16, 16]) /* ty=Tensor[(14, 16, 16), float32] */;
    %517 = @func_1475(%516) /* ty=(Tensor[(14, 16, 16), float32],) */;
    %518 = @func_4066() /* ty=Tensor[(7, 8, 14), float32] */;
    %519 = %514.10;
    %520 = %517.0;
    (%518, %519, %var_4464, %var_4465, meta[relay.Constant][22] /* ty=Tensor[(405), int32] */, %var_4467, %520, %var_4484)
  };
  %521(%var_4492, %var_4493, %var_4494, %var_4495) /* ty=(Tensor[(7, 8, 14), float32], Tensor[(10, 4, 7), bool], Tensor[(280), uint16], Tensor[(420), uint64], Tensor[(405), int32], Tensor[(616), uint32], Tensor[(14, 16, 16), float32], Tensor[(3584), float32]) */
}

def @func_11153(%var_11150: Tensor[(14, 11, 15), int8], %var_11151: Tensor[(48), float64], %var_11152: Tensor[(784), float64]) -> (Tensor[(48), float64], Tensor[(48), float64], Tensor[(7, 8, 14), uint32], Tensor[(784), float64], Tensor[(14, 11, 15), uint64]) {
  @func_11148(%var_11150, %var_11151, %var_11152) /* ty=(Tensor[(48), float64], Tensor[(48), float64], Tensor[(7, 8, 14), uint32], Tensor[(784), float64], Tensor[(14, 11, 15), uint64]) */
}

def @func_2434(%var_2424: Tensor[(420), uint64]) -> (Tensor[(7, 8, 14), float32], Tensor[(7, 8, 14), float32], Tensor[(420), uint64], Tensor[(15, 6, 10), bool], Tensor[(900), float32]) {
  %522 = cast(%var_2424, dtype="uint64") /* ty=Tensor[(420), uint64] */;
  %523 = reshape(%522, newshape=[420]) /* ty=Tensor[(420), uint64] */;
  %524 = @func_1964(%523) /* ty=(Tensor[(7, 8, 14), float32], Tensor[(7, 8, 14), float32], Tensor[(14, 2, 15), uint64], Tensor[(420), uint64]) */;
  %525 = cast(meta[relay.Constant][23] /* ty=Tensor[(900), float32] */, dtype="float32") /* ty=Tensor[(900), float32] */;
  %526 = reshape(%525, newshape=[15, 6, 10]) /* ty=Tensor[(15, 6, 10), float32] */;
  %527 = @func_2010() /* ty=Tensor[(7, 8, 14), float32] */;
  %528 = %524.1;
  %529 = @func_669(%526) /* ty=Tensor[(15, 6, 10), bool] */;
  (%527, %528, %var_2424, %529, meta[relay.Constant][23] /* ty=Tensor[(900), float32] */)
}

def @func_4362() -> (Tensor[(7, 8, 14), float32],) {
  @func_4360() /* ty=(Tensor[(7, 8, 14), float32],) */
}

def @func_2873(%var_2872: Tensor[(9, 4, 16), float64]) -> (Tensor[(9, 4, 16), float64],) {
  %535 = fn (%var_2866: Tensor[(9, 4, 16), float64]) -> (Tensor[(9, 4, 16), float64],) {
    %530 = cast(meta[relay.Constant][24] /* ty=Tensor[(9, 4, 16), float64] */, dtype="float64") /* ty=Tensor[(9, 4, 16), float64] */;
    %531 = shape_of(%var_2866, dtype="int32") /* ty=Tensor[(3), int32] */;
    %532 = cast(%var_2866, dtype="float64") /* ty=Tensor[(9, 4, 16), float64] */;
    %533 = dyn.reshape(%530, %531, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
    %534 = power(%532, %533) /* ty=Tensor[(9, 4, 16), float64] */;
    (%534,)
  };
  %535(%var_2872) /* ty=(Tensor[(9, 4, 16), float64],) */
}

def @func_6374(%var_6373: Tensor[(30), float64]) -> (Tensor[(7, 8, 14), float32], Tensor[(7, 8, 14), float32], Tensor[(7, 8, 14), float64], Tensor[(7, 8, 14), float32], Tensor[(2, 15, 1), float32], Tensor[(30), float64], Tensor[(7, 8, 14), float32]) {
  %548 = fn (%var_6367: Tensor[(30), float64]) -> (Tensor[(7, 8, 14), float32], Tensor[(7, 8, 14), float32], Tensor[(7, 8, 14), float64], Tensor[(7, 8, 14), float32], Tensor[(2, 15, 1), float32], Tensor[(30), float64], Tensor[(7, 8, 14), float32]) {
    %536 = @func_3546() /* ty=(Tensor[(7, 8, 14), float32], Tensor[(7, 8, 14), float64]) */;
    %537 = @func_3109() /* ty=(Tensor[(7, 8, 14), float32],) */;
    %538 = cast(%var_6367, dtype="float64") /* ty=Tensor[(30), float64] */;
    %539 = reshape(%538, newshape=[2, 15, 1]) /* ty=Tensor[(2, 15, 1), float64] */;
    %540 = @func_1233(%539) /* ty=(Tensor[(2, 15, 1), float32], Tensor[(2, 15, ?), int8]) */;
    %541 = @func_3871() /* ty=(Tensor[(7, 8, 14), float64], Tensor[(7, 8, 14), float32]) */;
    %542 = @func_1357() /* ty=Tensor[(7, 8, 14), float32] */;
    %543 = @func_3507() /* ty=Tensor[(7, 8, 14), float32] */;
    %544 = %536.1;
    %545 = %537.0;
    %546 = %540.0;
    %547 = %541.1;
    (%542, %543, %544, %545, %546, %var_6367, %547)
  };
  %548(%var_6373) /* ty=(Tensor[(7, 8, 14), float32], Tensor[(7, 8, 14), float32], Tensor[(7, 8, 14), float64], Tensor[(7, 8, 14), float32], Tensor[(2, 15, 1), float32], Tensor[(30), float64], Tensor[(7, 8, 14), float32]) */
}

def @func_6144(%var_6077: Tensor[(48, 1), float64]) -> (Tensor[(7, 8, 14), float32], Tensor[(7, 8, 14), float32], Tensor[(7, 8, 14), float64], Tensor[(48, 10), int32], Tensor[(56, 14), float64], Tensor[(75), uint64]) {
  %549 = cast(%var_6077, dtype="float64") /* ty=Tensor[(48, 1), float64] */;
  %550 = reshape(%549, newshape=[48]) /* ty=Tensor[(48), float64] */;
  %551 = @func_4587(%550) /* ty=(Tensor[(7, 8, 14), float32], Tensor[(3, 8, 2), float64], Tensor[(48), float64]) */;
  %552 = @func_2705() /* ty=(Tensor[(7, 8, 14), float64],) */;
  %553 = cast(%var_6077, dtype="float64") /* ty=Tensor[(48, 1), float64] */;
  %554 = sin(%553) /* ty=Tensor[(48, 1), float64] */;
  %555 = cast(%554, dtype="int32") /* ty=Tensor[(48, 1), int32] */;
  %556 = cast(meta[relay.Constant][25] /* ty=Tensor[(48, 10), float64] */, dtype="int32") /* ty=Tensor[(48, 10), int32] */;
  %557 = cast(meta[relay.Constant][26] /* ty=Tensor[(75), uint64] */, dtype="uint64") /* ty=Tensor[(75), uint64] */;
  %558 = cast(meta[relay.Constant][26] /* ty=Tensor[(75), uint64] */, dtype="uint64") /* ty=Tensor[(75), uint64] */;
  %559 = %551.0;
  %560 = cast(%559, dtype="float64") /* ty=Tensor[(7, 8, 14), float64] */;
  %561 = reshape(%557, newshape=[5, 1, 15]) /* ty=Tensor[(5, 1, 15), uint64] */;
  %562 = reshape(%558, newshape=[5, 1, 15]) /* ty=Tensor[(5, 1, 15), uint64] */;
  %563 = reshape(%560, newshape=[56, 14]) /* ty=Tensor[(56, 14), float64] */;
  %564 = @func_5895(%561, %562, %563) /* ty=(Tensor[(5, ?, 15), uint64], Tensor[(5, 1, 15), float64], Tensor[(7, 8, 14), int8], Tensor[(56, 14), float64], Tensor[(7, 8, 14), float32]) */;
  %565 = @func_3435() /* ty=Tensor[(7, 8, 14), float32] */;
  %566 = %552.0;
  %567 = maximum(%555, %556) /* ty=Tensor[(48, 10), int32] */;
  %568 = %564.3;
  (%565, %559, %566, %567, %568, meta[relay.Constant][26] /* ty=Tensor[(75), uint64] */)
}

def @func_6636(%var_6633: Tensor[(6, 6, 8), float64]) -> (Tensor[(6, 6, 8), float64],) {
  %569 = cast(%var_6633, dtype="float64") /* ty=Tensor[(6, 6, 8), float64] */;
  %570 = acosh(%569) /* ty=Tensor[(6, 6, 8), float64] */;
  (%570,)
}

def @func_8142() -> (Tensor[(7, 8, 14), float32],) {
  %571 = @func_7562() /* ty=Tensor[(7, 8, 14), float32] */;
  (%571,)
}

def @func_2805() -> (Tensor[(7, 8, 14), float64], Tensor[(7, 8, 14), float32]) {
  %574 = fn () -> (Tensor[(7, 8, 14), float64], Tensor[(7, 8, 14), float32]) {
    %572 = @func_1251() /* ty=Tensor[(7, 8, 14), float64] */;
    %573 = @func_2416() /* ty=Tensor[(7, 8, 14), float32] */;
    (%572, %573)
  };
  %574() /* ty=(Tensor[(7, 8, 14), float64], Tensor[(7, 8, 14), float32]) */
}

def @func_12590(%var_12589: Tensor[(4, 3, 6), float64]) -> (Tensor[(4, 3, 6), float64],) {
  %577 = fn (%var_12585: Tensor[(4, 3, 6), float64]) -> (Tensor[(4, 3, 6), float64],) {
    %575 = cast(%var_12585, dtype="float64") /* ty=Tensor[(4, 3, 6), float64] */;
    %576 = asin(%575) /* ty=Tensor[(4, 3, 6), float64] */;
    (%576,)
  };
  %577(%var_12589) /* ty=(Tensor[(4, 3, 6), float64],) */
}

def @func_3665(%var_3663: Tensor[(96), float32]) -> (Tensor[(7, 8, 14), float32], Tensor[(616), uint32], Tensor[(405), int32], Tensor[(616), uint32], Tensor[(96), float32], Tensor[(7, 8, 14), float32]) {
  @func_3662(%var_3663) /* ty=(Tensor[(7, 8, 14), float32], Tensor[(616), uint32], Tensor[(405), int32], Tensor[(616), uint32], Tensor[(96), float32], Tensor[(7, 8, 14), float32]) */
}

def @func_11148(%var_11120: Tensor[(14, 11, 15), int8], %var_11132: Tensor[(48), float64], %var_11136: Tensor[(784), float64]) -> (Tensor[(48), float64], Tensor[(48), float64], Tensor[(7, 8, 14), uint32], Tensor[(784), float64], Tensor[(14, 11, 15), uint64]) {
  %578 = cast(%var_11132, dtype="float64") /* ty=Tensor[(48), float64] */;
  %579 = reshape(%578, newshape=[48]) /* ty=Tensor[(48), float64] */;
  %580 = @func_4587(%579) /* ty=(Tensor[(7, 8, 14), float32], Tensor[(3, 8, 2), float64], Tensor[(48), float64]) */;
  %581 = cast(%var_11136, dtype="float64") /* ty=Tensor[(784), float64] */;
  %582 = reshape(%581, newshape=[7, 8, 14]) /* ty=Tensor[(7, 8, 14), float64] */;
  %583 = cast(meta[relay.Constant][27] /* ty=Tensor[(14, 11, 15), int8] */, dtype="int8") /* ty=Tensor[(14, 11, 15), int8] */;
  %584 = shape_of(%var_11120, dtype="int32") /* ty=Tensor[(3), int32] */;
  %585 = cast(%var_11120, dtype="int8") /* ty=Tensor[(14, 11, 15), int8] */;
  %586 = dyn.reshape(%583, %584, newshape=[]) /* ty=Tensor[(?, ?, ?), int8] */;
  %587 = minimum(%585, %586) /* ty=Tensor[(14, 11, 15), int8] */;
  %588 = cast(meta[relay.Constant][27] /* ty=Tensor[(14, 11, 15), int8] */, dtype="float64") /* ty=Tensor[(14, 11, 15), float64] */;
  %589 = shape_of(%587, dtype="int32") /* ty=Tensor[(3), int32] */;
  %590 = cast(%587, dtype="float64") /* ty=Tensor[(14, 11, 15), float64] */;
  %591 = dyn.reshape(%588, %589, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %592 = power(%590, %591) /* ty=Tensor[(14, 11, 15), float64] */;
  %593 = cast(%592, dtype="uint64") /* ty=Tensor[(14, 11, 15), uint64] */;
  %594 = shape_of(%var_11120, dtype="int32") /* ty=Tensor[(3), int32] */;
  %595 = cast(%var_11120, dtype="uint64") /* ty=Tensor[(14, 11, 15), uint64] */;
  %596 = dyn.reshape(%593, %594, newshape=[]) /* ty=Tensor[(?, ?, ?), uint64] */;
  %597 = %580.2;
  %598 = @func_2785(%582) /* ty=Tensor[(7, 8, 14), uint32] */;
  %599 = logical_xor(%595, %596) /* ty=Tensor[(14, 11, 15), uint64] */;
  (%597, %var_11132, %598, %var_11136, %599)
}

def @func_8678() -> (Tensor[(7, 8, 14), float64], Tensor[(7, 8, 14), float32]) {
  @func_8676() /* ty=(Tensor[(7, 8, 14), float64], Tensor[(7, 8, 14), float32]) */
}

def @func_9123(%var_9122: uint16) -> (Tensor[(7, 8, 14), float32], Tensor[(7, 8, 14), float32], uint16) {
  %605 = fn (%var_9090: uint16) -> (Tensor[(7, 8, 14), float32], Tensor[(7, 8, 14), float32], uint16) {
    %600 = cast(%var_9090, dtype="uint16") /* ty=uint16 */;
    %601 = reshape(%600, newshape=[]) /* ty=uint16 */;
    %602 = @func_7361(%601) /* ty=(Tensor[(13, 8, 12), uint16], Tensor[(7, 8, 14), float32]) */;
    %603 = @func_2416() /* ty=Tensor[(7, 8, 14), float32] */;
    %604 = %602.1;
    (%603, %604, %var_9090)
  };
  %605(%var_9122) /* ty=(Tensor[(7, 8, 14), float32], Tensor[(7, 8, 14), float32], uint16) */
}

def @func_3674() -> Tensor[(7, 8, 14), float32] {
  %606 = @func_3109() /* ty=(Tensor[(7, 8, 14), float32],) */;
  %606.0
}

def @func_7127() -> Tensor[(16, 1, 6), float32] {
  %607 = @func_4041() /* ty=(Tensor[(7, 8, 14), float32], Tensor[(16, 1, 6), float32], Tensor[(96), float32]) */;
  %607.1
}

def @func_4798() -> Tensor[(7, 8, 14), float32] {
  %608 = @func_4041() /* ty=(Tensor[(7, 8, 14), float32], Tensor[(16, 1, 6), float32], Tensor[(96), float32]) */;
  %608.0
}

def @func_3548() -> (Tensor[(7, 8, 14), float32], Tensor[(7, 8, 14), float64]) {
  @func_3546() /* ty=(Tensor[(7, 8, 14), float32], Tensor[(7, 8, 14), float64]) */
}

def @func_11203() -> (Tensor[(7, 8, 14), float64],) {
  %611 = fn () -> (Tensor[(7, 8, 14), float64],) {
    %609 = @func_8676() /* ty=(Tensor[(7, 8, 14), float64], Tensor[(7, 8, 14), float32]) */;
    %610 = %609.0;
    (%610,)
  };
  %611() /* ty=(Tensor[(7, 8, 14), float64],) */
}

def @func_9812() -> Tensor[(7, 8, 14), float32] {
  @func_9810() /* ty=Tensor[(7, 8, 14), float32] */
}

def @func_1279() -> Tensor[(7, 8, 14), float32] {
  %612 = @func_1172() /* ty=Tensor[(7, 8, 14), float64] */;
  %613 = cast(%612, dtype="float32") /* ty=Tensor[(7, 8, 14), float32] */;
  acos(%613) /* ty=Tensor[(7, 8, 14), float32] */
}

def @func_3546() -> (Tensor[(7, 8, 14), float32], Tensor[(7, 8, 14), float64]) {
  %614 = @func_2705() /* ty=(Tensor[(7, 8, 14), float64],) */;
  %615 = @func_3162() /* ty=Tensor[(7, 8, 14), float32] */;
  %616 = %614.0;
  (%615, %616)
}

def @func_2279(%var_2278: Tensor[(7, 8, 14), float32]) -> (Tensor[(420), uint64], Tensor[(70, 6), uint64], Tensor[(7, 8, 14), bool]) {
  %628 = fn (%var_2268: Tensor[(7, 8, 14), float32]) -> (Tensor[(420), uint64], Tensor[(70, 6), uint64], Tensor[(7, 8, 14), bool]) {
    %617 = cast(meta[relay.Constant][28] /* ty=Tensor[(70, 6), uint64] */, dtype="uint64") /* ty=Tensor[(70, 6), uint64] */;
    %618 = reshape(%617, newshape=[420]) /* ty=Tensor[(420), uint64] */;
    %619 = @func_1707(%618) /* ty=(Tensor[(7, 8, 14), float32], Tensor[(420), uint64], Tensor[(420), uint64]) */;
    %620 = @func_1554() /* ty=(Tensor[(7, 8, 14), float32],) */;
    %621 = %620.0;
    %622 = cast(%var_2268, dtype="bool") /* ty=Tensor[(7, 8, 14), bool] */;
    %623 = shape_of(%621, dtype="int32") /* ty=Tensor[(3), int32] */;
    %624 = cast(%621, dtype="bool") /* ty=Tensor[(7, 8, 14), bool] */;
    %625 = dyn.reshape(%622, %623, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    %626 = %619.1;
    %627 = less(%624, %625) /* ty=Tensor[(7, 8, 14), bool] */;
    (%626, meta[relay.Constant][28] /* ty=Tensor[(70, 6), uint64] */, %627)
  };
  %628(%var_2278) /* ty=(Tensor[(420), uint64], Tensor[(70, 6), uint64], Tensor[(7, 8, 14), bool]) */
}

def @func_3755() -> (Tensor[(7, 8, 14), float32],) {
  %630 = fn () -> (Tensor[(7, 8, 14), float32],) {
    %629 = @func_2092() /* ty=Tensor[(7, 8, 14), float32] */;
    (%629,)
  };
  %630() /* ty=(Tensor[(7, 8, 14), float32],) */
}

def @func_9501() -> (Tensor[(7, 8, 14), float32], Tensor[(7, 8, 14), float64], Tensor[(7, 8, 14), float32]) {
  %636 = fn () -> (Tensor[(7, 8, 14), float32], Tensor[(7, 8, 14), float64], Tensor[(7, 8, 14), float32]) {
    %631 = @func_7534() /* ty=(Tensor[(7, 8, 14), float32],) */;
    %632 = @func_7395() /* ty=(Tensor[(7, 8, 14), float32], Tensor[(7, 8, 14), float32]) */;
    %633 = %631.0;
    %634 = @func_1172() /* ty=Tensor[(7, 8, 14), float64] */;
    %635 = %632.0;
    (%633, %634, %635)
  };
  %636() /* ty=(Tensor[(7, 8, 14), float32], Tensor[(7, 8, 14), float64], Tensor[(7, 8, 14), float32]) */
}

def @func_6046() -> Tensor[(7, 8, 14), float32] {
  @func_2416() /* ty=Tensor[(7, 8, 14), float32] */
}

def @func_8400() -> (Tensor[(7, 8, 14), float64], Tensor[(96), float32]) {
  %640 = fn () -> (Tensor[(7, 8, 14), float64], Tensor[(96), float32]) {
    %637 = @func_3546() /* ty=(Tensor[(7, 8, 14), float32], Tensor[(7, 8, 14), float64]) */;
    %638 = %637.1;
    %639 = @func_5744() /* ty=Tensor[(96), float32] */;
    (%638, %639)
  };
  %640() /* ty=(Tensor[(7, 8, 14), float64], Tensor[(96), float32]) */
}

def @func_5024() -> Tensor[(7, 8, 14), float64] {
  %642 = fn () -> Tensor[(7, 8, 14), float64] {
    %641 = @func_3455() /* ty=(Tensor[(7, 8, 14), float64],) */;
    %641.0
  };
  %642() /* ty=Tensor[(7, 8, 14), float64] */
}

def @func_3598() -> Tensor[(7, 8, 14), float64] {
  %644 = fn () -> Tensor[(7, 8, 14), float64] {
    %643 = @func_2804() /* ty=(Tensor[(7, 8, 14), float64], Tensor[(7, 8, 14), float32]) */;
    %643.0
  };
  %644() /* ty=Tensor[(7, 8, 14), float64] */
}

def @func_3676() -> Tensor[(7, 8, 14), float32] {
  @func_3674() /* ty=Tensor[(7, 8, 14), float32] */
}

def @func_2196() -> Tensor[(7, 8, 14), float32] {
  @func_1279() /* ty=Tensor[(7, 8, 14), float32] */
}

def @func_5262() -> Tensor[(7, 8, 14), float64] {
  @func_4389() /* ty=Tensor[(7, 8, 14), float64] */
}

def @func_3241() -> (Tensor[(7, 8, 14), float64], Tensor[(7, 8, 14), float32]) {
  %647 = fn () -> (Tensor[(7, 8, 14), float64], Tensor[(7, 8, 14), float32]) {
    %645 = @func_1172() /* ty=Tensor[(7, 8, 14), float64] */;
    %646 = @func_2416() /* ty=Tensor[(7, 8, 14), float32] */;
    (%645, %646)
  };
  %647() /* ty=(Tensor[(7, 8, 14), float64], Tensor[(7, 8, 14), float32]) */
}

def @func_5833() -> Tensor[(7, 8, 14), float64] {
  %648 = fn () -> Tensor[(7, 8, 14), float64] {
    @func_3771() /* ty=Tensor[(7, 8, 14), float64] */
  };
  %648() /* ty=Tensor[(7, 8, 14), float64] */
}

def @func_3415() -> (Tensor[(7, 8, 14), float32], Tensor[(7, 8, 14), float64]) {
  @func_3413() /* ty=(Tensor[(7, 8, 14), float32], Tensor[(7, 8, 14), float64]) */
}

def @func_2010() -> Tensor[(7, 8, 14), float32] {
  @func_1357() /* ty=Tensor[(7, 8, 14), float32] */
}

def @func_2488() -> (Tensor[(7, 8, 14), float64],) {
  %650 = fn () -> (Tensor[(7, 8, 14), float64],) {
    %649 = @func_1251() /* ty=Tensor[(7, 8, 14), float64] */;
    (%649,)
  };
  %650() /* ty=(Tensor[(7, 8, 14), float64],) */
}

def @func_4360() -> (Tensor[(7, 8, 14), float32],) {
  %651 = @func_2092() /* ty=Tensor[(7, 8, 14), float32] */;
  (%651,)
}

def @func_10381(%var_10380: Tensor[(2, 7, 5), float64]) -> (Tensor[(2, 7, 5), float64], Tensor[(7, 8, 14), float32], Tensor[(784), float32], Tensor[(7, 8, 14), float64], Tensor[(7, 8, 14), float32], uint16) {
  %664 = fn (%var_10339: Tensor[(2, 7, 5), float64]) -> (Tensor[(2, 7, 5), float64], Tensor[(7, 8, 14), float32], Tensor[(784), float32], Tensor[(7, 8, 14), float64], Tensor[(7, 8, 14), float32], uint16) {
    %652 = cast(%var_10339, dtype="float64") /* ty=Tensor[(2, 7, 5), float64] */;
    %653 = cast(meta[relay.Constant][29] /* ty=Tensor[(784), float32] */, dtype="float32") /* ty=Tensor[(784), float32] */;
    %654 = reshape(%653, newshape=[7, 8, 14]) /* ty=Tensor[(7, 8, 14), float32] */;
    %655 = @func_4009(%654) /* ty=(Tensor[(14, 16, 16), float32], Tensor[(3584, 1), float32], Tensor[(7, 8, 14), bool], Tensor[(7, 8, 14), float64], Tensor[(7, 8, 14), float32], Tensor[(7, 8, 14), float32], Tensor[(7, 8, 14), float32]) */;
    %656 = @func_6261() /* ty=(Tensor[(7, 8, 14), float64], Tensor[(7, 8, 14), float64], Tensor[(7, 8, 14), float64], Tensor[(7, 8, 14), float32], Tensor[(5, ?, 15), uint64], Tensor[(75, 1), uint64], Tensor[(7, 8, 14), float32]) */;
    %657 = cast(meta[relay.Constant][30] /* ty=uint16 */, dtype="uint16") /* ty=uint16 */;
    %658 = reshape(%657, newshape=[]) /* ty=uint16 */;
    %659 = @func_9121(%658) /* ty=(Tensor[(7, 8, 14), float32], Tensor[(7, 8, 14), float32], uint16) */;
    %660 = log2(%652) /* ty=Tensor[(2, 7, 5), float64] */;
    %661 = %655.5;
    %662 = %656.1;
    %663 = %659.0;
    (%660, %661, meta[relay.Constant][29] /* ty=Tensor[(784), float32] */, %662, %663, meta[relay.Constant][30] /* ty=uint16 */)
  };
  %664(%var_10380) /* ty=(Tensor[(2, 7, 5), float64], Tensor[(7, 8, 14), float32], Tensor[(784), float32], Tensor[(7, 8, 14), float64], Tensor[(7, 8, 14), float32], uint16) */
}

def @func_4181() -> (Tensor[(7, 8, 14), float64],) {
  %665 = @func_2705() /* ty=(Tensor[(7, 8, 14), float64],) */;
  %666 = %665.0;
  (%666,)
}

def @func_4800() -> Tensor[(7, 8, 14), float32] {
  @func_4798() /* ty=Tensor[(7, 8, 14), float32] */
}

def @func_9575(%var_9526: Tensor[(1, 13, 7), float64]) -> (Tensor[(1, 13, 7), float64], Tensor[(7, 8, 14), float64], Tensor[(?, 13, 7), float64], Tensor[(?, 13, 7), bool], Tensor[(7, 8, 14), int32]) {
  %667 = cast(%var_9526, dtype="float64") /* ty=Tensor[(1, 13, 7), float64] */;
  %668 = @func_3546() /* ty=(Tensor[(7, 8, 14), float32], Tensor[(7, 8, 14), float64]) */;
  %669 = cast(%var_9526, dtype="float32") /* ty=Tensor[(1, 13, 7), float32] */;
  %670 = log10(%669) /* ty=Tensor[(1, 13, 7), float32] */;
  %671 = cast(%var_9526, dtype="bool") /* ty=Tensor[(1, 13, 7), bool] */;
  %672 = shape_of(%670, dtype="int32") /* ty=Tensor[(3), int32] */;
  %673 = cast(%670, dtype="bool") /* ty=Tensor[(1, 13, 7), bool] */;
  %674 = dyn.reshape(%671, %672, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %675 = less(%673, %674) /* ty=Tensor[(?, 13, 7), bool] */;
  %676 = cast(%670, dtype="float64") /* ty=Tensor[(1, 13, 7), float64] */;
  %677 = shape_of(%675, dtype="int32") /* ty=Tensor[(3), int32] */;
  %678 = cast(%675, dtype="float64") /* ty=Tensor[(?, 13, 7), float64] */;
  %679 = dyn.reshape(%676, %677, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %680 = cast(%675, dtype="bool") /* ty=Tensor[(?, 13, 7), bool] */;
  %681 = shape_of(%670, dtype="int32") /* ty=Tensor[(3), int32] */;
  %682 = cast(%670, dtype="bool") /* ty=Tensor[(1, 13, 7), bool] */;
  %683 = dyn.reshape(%680, %681, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %684 = %668.1;
  %685 = cast(%684, dtype="float32") /* ty=Tensor[(7, 8, 14), float32] */;
  %686 = reshape(%685, newshape=[7, 8, 14]) /* ty=Tensor[(7, 8, 14), float32] */;
  %687 = @func_3823(%686) /* ty=(Tensor[(7, 8, 14), int32],) */;
  %688 = exp(%667) /* ty=Tensor[(1, 13, 7), float64] */;
  %689 = multiply(%678, %679) /* ty=Tensor[(?, 13, 7), float64] */;
  %690 = less_equal(%682, %683) /* ty=Tensor[(?, 13, 7), bool] */;
  %691 = %687.0;
  (%688, %684, %689, %690, %691)
}

def @func_6036() -> (Tensor[(7, 8, 14), float32],) {
  @func_6034() /* ty=(Tensor[(7, 8, 14), float32],) */
}

def @func_11975() -> (Tensor[(7, 8, 14), float32],) {
  %692 = @func_10959() /* ty=(Tensor[(7, 8, 14), float32], Tensor[(9, 4, 16), float64], Tensor[(576), float64], Tensor[(7, 8, 14), float32], Tensor[(7, 8, 14), float32]) */;
  %693 = %692.0;
  (%693,)
}

def @func_10657() -> (Tensor[(7, 8, 14), float64],) {
  @func_10655() /* ty=(Tensor[(7, 8, 14), float64],) */
}

def @func_11337() -> (Tensor[(7, 8, 14), float32], Tensor[(7, 8, 14), float32], Tensor[(7, 8, 14), float32], Tensor[(7, 8, 14), float32]) {
  %699 = fn () -> (Tensor[(7, 8, 14), float32], Tensor[(7, 8, 14), float32], Tensor[(7, 8, 14), float32], Tensor[(7, 8, 14), float32]) {
    %694 = @func_10748() /* ty=(Tensor[(7, 8, 14), float32], Tensor[(7, 8, 14), float64]) */;
    %695 = @func_3674() /* ty=Tensor[(7, 8, 14), float32] */;
    %696 = %694.0;
    %697 = @func_2038() /* ty=Tensor[(7, 8, 14), float32] */;
    %698 = @func_2010() /* ty=Tensor[(7, 8, 14), float32] */;
    (%695, %696, %697, %698)
  };
  %699() /* ty=(Tensor[(7, 8, 14), float32], Tensor[(7, 8, 14), float32], Tensor[(7, 8, 14), float32], Tensor[(7, 8, 14), float32]) */
}

def @func_7742() -> (Tensor[(7, 8, 14), float64],) {
  @func_7740() /* ty=(Tensor[(7, 8, 14), float64],) */
}

def @func_2175(%var_2173: Tensor[(3, 8, 2), float64], %var_2174: Tensor[(3, 8, 2), float64]) -> Tensor[(3, 8, 2), float64] {
  %704 = fn (%var_2161: Tensor[(3, 8, 2), float64], %var_2162: Tensor[(3, 8, 2), float64]) -> Tensor[(3, 8, 2), float64] {
    %700 = cast(%var_2162, dtype="float64") /* ty=Tensor[(3, 8, 2), float64] */;
    %701 = shape_of(%var_2161, dtype="int32") /* ty=Tensor[(3), int32] */;
    %702 = cast(%var_2161, dtype="float64") /* ty=Tensor[(3, 8, 2), float64] */;
    %703 = dyn.reshape(%700, %701, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
    floor_mod(%702, %703) /* ty=Tensor[(3, 8, 2), float64] */
  };
  %704(%var_2173, %var_2174) /* ty=Tensor[(3, 8, 2), float64] */
}

def @func_6059() -> (Tensor[(7, 8, 14), float64],) {
  %707 = fn () -> (Tensor[(7, 8, 14), float64],) {
    %705 = @func_5687() /* ty=(Tensor[(7, 8, 14), float32], Tensor[(7, 8, 14), float64], Tensor[(7, 8, 14), float64]) */;
    %706 = %705.2;
    (%706,)
  };
  %707() /* ty=(Tensor[(7, 8, 14), float64],) */
}

def @func_1864(%var_1858: Tensor[(10, 4, 7), uint16], %var_1859: Tensor[(10, 4, 7), uint16], %var_1860: Tensor[(14, 2, 15), uint64], %var_1861: Tensor[(405), int32], %var_1862: Tensor[(1, 616), uint32], %var_1863: Tensor[(10, 4, 7), float32]) -> (Tensor[(10, 4, 7), bool], Tensor[(7, 8, 14), float64], Tensor[(420), uint64], Tensor[(14, 2, 15), float64], Tensor[(7, 8, 14), float64], Tensor[(2, 48), float32], Tensor[(405), int32], Tensor[(1, 616), uint32], Tensor[(96), float32], Tensor[(10, 4, 7), int32], Tensor[(10, 4, 7), bool]) {
  @func_1856(%var_1858, %var_1859, %var_1860, %var_1861, %var_1862, %var_1863) /* ty=(Tensor[(10, 4, 7), bool], Tensor[(7, 8, 14), float64], Tensor[(420), uint64], Tensor[(14, 2, 15), float64], Tensor[(7, 8, 14), float64], Tensor[(2, 48), float32], Tensor[(405), int32], Tensor[(1, 616), uint32], Tensor[(96), float32], Tensor[(10, 4, 7), int32], Tensor[(10, 4, 7), bool]) */
}

def @func_6027(%var_6026: Tensor[(616), uint32]) -> (Tensor[(7, 8, 14), float32], Tensor[(7, 8, 14), float32], Tensor[(7, 8, 14), float64], Tensor[(280), uint16], Tensor[(420), uint64], Tensor[(405), int32], Tensor[(616), uint32]) {
  %725 = fn (%var_6017: Tensor[(616), uint32]) -> (Tensor[(7, 8, 14), float32], Tensor[(7, 8, 14), float32], Tensor[(7, 8, 14), float64], Tensor[(280), uint16], Tensor[(420), uint64], Tensor[(405), int32], Tensor[(616), uint32]) {
    %708 = @func_2060() /* ty=(Tensor[(7, 8, 14), float32],) */;
    %709 = cast(meta[relay.Constant][31] /* ty=Tensor[(280), uint16] */, dtype="uint16") /* ty=Tensor[(280), uint16] */;
    %710 = cast(meta[relay.Constant][31] /* ty=Tensor[(280), uint16] */, dtype="uint16") /* ty=Tensor[(280), uint16] */;
    %711 = cast(meta[relay.Constant][32] /* ty=Tensor[(420), uint64] */, dtype="uint64") /* ty=Tensor[(420), uint64] */;
    %712 = cast(meta[relay.Constant][33] /* ty=Tensor[(405), int32] */, dtype="int32") /* ty=Tensor[(405), int32] */;
    %713 = cast(%var_6017, dtype="uint32") /* ty=Tensor[(616), uint32] */;
    %714 = cast(meta[relay.Constant][31] /* ty=Tensor[(280), uint16] */, dtype="float32") /* ty=Tensor[(280), float32] */;
    %715 = reshape(%709, newshape=[10, 4, 7]) /* ty=Tensor[(10, 4, 7), uint16] */;
    %716 = reshape(%710, newshape=[10, 4, 7]) /* ty=Tensor[(10, 4, 7), uint16] */;
    %717 = reshape(%711, newshape=[14, 2, 15]) /* ty=Tensor[(14, 2, 15), uint64] */;
    %718 = reshape(%712, newshape=[405]) /* ty=Tensor[(405), int32] */;
    %719 = reshape(%713, newshape=[1, 616]) /* ty=Tensor[(1, 616), uint32] */;
    %720 = reshape(%714, newshape=[10, 4, 7]) /* ty=Tensor[(10, 4, 7), float32] */;
    %721 = @func_1856(%715, %716, %717, %718, %719, %720) /* ty=(Tensor[(10, 4, 7), bool], Tensor[(7, 8, 14), float64], Tensor[(420), uint64], Tensor[(14, 2, 15), float64], Tensor[(7, 8, 14), float64], Tensor[(2, 48), float32], Tensor[(405), int32], Tensor[(1, 616), uint32], Tensor[(96), float32], Tensor[(10, 4, 7), int32], Tensor[(10, 4, 7), bool]) */;
    %722 = @func_2092() /* ty=Tensor[(7, 8, 14), float32] */;
    %723 = %708.0;
    %724 = %721.4;
    (%722, %723, %724, meta[relay.Constant][31] /* ty=Tensor[(280), uint16] */, meta[relay.Constant][32] /* ty=Tensor[(420), uint64] */, meta[relay.Constant][33] /* ty=Tensor[(405), int32] */, %var_6017)
  };
  %725(%var_6026) /* ty=(Tensor[(7, 8, 14), float32], Tensor[(7, 8, 14), float32], Tensor[(7, 8, 14), float64], Tensor[(280), uint16], Tensor[(420), uint64], Tensor[(405), int32], Tensor[(616), uint32]) */
}

def @func_11917() -> Tensor[(7, 8, 14), float64] {
  @func_11915() /* ty=Tensor[(7, 8, 14), float64] */
}

def @func_2742(%var_2741: Tensor[(420), uint64]) -> (Tensor[(7, 8, 14), float64], Tensor[(7, 8, 14), float32], Tensor[(420), uint64], Tensor[(7, 8, 14), float64]) {
  %732 = fn (%var_2726: Tensor[(420), uint64]) -> (Tensor[(7, 8, 14), float64], Tensor[(7, 8, 14), float32], Tensor[(420), uint64], Tensor[(7, 8, 14), float64]) {
    %726 = cast(%var_2726, dtype="uint64") /* ty=Tensor[(420), uint64] */;
    %727 = reshape(%726, newshape=[420]) /* ty=Tensor[(420), uint64] */;
    %728 = @func_1964(%727) /* ty=(Tensor[(7, 8, 14), float32], Tensor[(7, 8, 14), float32], Tensor[(14, 2, 15), uint64], Tensor[(420), uint64]) */;
    %729 = @func_1251() /* ty=Tensor[(7, 8, 14), float64] */;
    %730 = %728.0;
    %731 = @func_1748() /* ty=Tensor[(7, 8, 14), float64] */;
    (%729, %730, %var_2726, %731)
  };
  %732(%var_2741) /* ty=(Tensor[(7, 8, 14), float64], Tensor[(7, 8, 14), float32], Tensor[(420), uint64], Tensor[(7, 8, 14), float64]) */
}

def @func_2137() -> (Tensor[(7, 8, 14), float64], Tensor[(7, 8, 14), float64]) {
  %733 = @func_1748() /* ty=Tensor[(7, 8, 14), float64] */;
  %734 = @func_1251() /* ty=Tensor[(7, 8, 14), float64] */;
  (%733, %734)
}

def @func_3162() -> Tensor[(7, 8, 14), float32] {
  %735 = @func_2060() /* ty=(Tensor[(7, 8, 14), float32],) */;
  %735.0
}

def @func_5097(%var_5092: Tensor[(280), uint16], %var_5093: Tensor[(420), uint64], %var_5094: Tensor[(9, 45), int32]) -> (Tensor[(7, 8, 14), float32], Tensor[(7, 8, 14), float64], Tensor[(7, 8, 14), float32], Tensor[(96), float32], Tensor[(280), uint16], Tensor[(420), uint64], Tensor[(9, 45), int32], Tensor[(14, 44), uint32]) {
  %736 = cast(%var_5092, dtype="uint16") /* ty=Tensor[(280), uint16] */;
  %737 = cast(%var_5092, dtype="uint16") /* ty=Tensor[(280), uint16] */;
  %738 = cast(%var_5093, dtype="uint64") /* ty=Tensor[(420), uint64] */;
  %739 = cast(%var_5094, dtype="int32") /* ty=Tensor[(9, 45), int32] */;
  %740 = cast(meta[relay.Constant][34] /* ty=Tensor[(14, 44), uint32] */, dtype="uint32") /* ty=Tensor[(14, 44), uint32] */;
  %741 = cast(%var_5092, dtype="float32") /* ty=Tensor[(280), float32] */;
  %742 = reshape(%736, newshape=[10, 4, 7]) /* ty=Tensor[(10, 4, 7), uint16] */;
  %743 = reshape(%737, newshape=[10, 4, 7]) /* ty=Tensor[(10, 4, 7), uint16] */;
  %744 = reshape(%738, newshape=[14, 2, 15]) /* ty=Tensor[(14, 2, 15), uint64] */;
  %745 = reshape(%739, newshape=[405]) /* ty=Tensor[(405), int32] */;
  %746 = reshape(%740, newshape=[1, 616]) /* ty=Tensor[(1, 616), uint32] */;
  %747 = reshape(%741, newshape=[10, 4, 7]) /* ty=Tensor[(10, 4, 7), float32] */;
  %748 = @func_1856(%742, %743, %744, %745, %746, %747) /* ty=(Tensor[(10, 4, 7), bool], Tensor[(7, 8, 14), float64], Tensor[(420), uint64], Tensor[(14, 2, 15), float64], Tensor[(7, 8, 14), float64], Tensor[(2, 48), float32], Tensor[(405), int32], Tensor[(1, 616), uint32], Tensor[(96), float32], Tensor[(10, 4, 7), int32], Tensor[(10, 4, 7), bool]) */;
  %749 = @func_3162() /* ty=Tensor[(7, 8, 14), float32] */;
  %750 = @func_4389() /* ty=Tensor[(7, 8, 14), float64] */;
  %751 = @func_3162() /* ty=Tensor[(7, 8, 14), float32] */;
  %752 = %748.8;
  (%749, %750, %751, %752, %var_5092, %var_5093, %var_5094, meta[relay.Constant][34] /* ty=Tensor[(14, 44), uint32] */)
}

def @func_11045() -> (Tensor[(7, 8, 14), float32], Tensor[(7, 8, 14), bool], Tensor[(48), float64]) {
  %758 = fn () -> (Tensor[(7, 8, 14), float32], Tensor[(7, 8, 14), bool], Tensor[(48), float64]) {
    %753 = @func_3240() /* ty=(Tensor[(7, 8, 14), float64], Tensor[(7, 8, 14), float32]) */;
    %754 = @func_4611() /* ty=(Tensor[(7, 8, 14), float32], Tensor[(48), float64], Tensor[(48), float64]) */;
    %755 = %753.1;
    %756 = @func_9642() /* ty=Tensor[(7, 8, 14), bool] */;
    %757 = %754.2;
    (%755, %756, %757)
  };
  %758() /* ty=(Tensor[(7, 8, 14), float32], Tensor[(7, 8, 14), bool], Tensor[(48), float64]) */
}

def @func_7941() -> (Tensor[(7, 8, 14), float32],) {
  %761 = fn () -> (Tensor[(7, 8, 14), float32],) {
    %759 = @func_7715() /* ty=(Tensor[(7, 8, 14), float32], Tensor[(96), float32]) */;
    %760 = %759.0;
    (%760,)
  };
  %761() /* ty=(Tensor[(7, 8, 14), float32],) */
}

def @func_8231() -> Tensor[(7, 8, 14), float32] {
  %762 = @func_7521() /* ty=(Tensor[(7, 8, 14), float32],) */;
  %762.0
}

def @func_6976() -> (Tensor[(7, 8, 14), float64], Tensor[(7, 8, 14), float32]) {
  %763 = @func_3109() /* ty=(Tensor[(7, 8, 14), float32],) */;
  %764 = @func_2159() /* ty=Tensor[(7, 8, 14), float64] */;
  %765 = %763.0;
  (%764, %765)
}

def @func_1750() -> Tensor[(7, 8, 14), float64] {
  @func_1748() /* ty=Tensor[(7, 8, 14), float64] */
}

def @func_10910() -> Tensor[(7, 8, 14), float32] {
  %767 = fn () -> Tensor[(7, 8, 14), float32] {
    %766 = @func_3546() /* ty=(Tensor[(7, 8, 14), float32], Tensor[(7, 8, 14), float64]) */;
    %766.0
  };
  %767() /* ty=Tensor[(7, 8, 14), float32] */
}

def @func_8811() -> (Tensor[(7, 8, 14), float64], Tensor[(7, 8, 14), float32], Tensor[(1344), bool]) {
  %768 = @func_2705() /* ty=(Tensor[(7, 8, 14), float64],) */;
  %769 = cast(meta[relay.Constant][35] /* ty=Tensor[(1344), float64] */, dtype="float64") /* ty=Tensor[(1344), float64] */;
  %770 = reshape(%769, newshape=[16, 14, 6]) /* ty=Tensor[(16, 14, 6), float64] */;
  %771 = @func_3053(%770) /* ty=(Tensor[(16, 14, 6), float64], Tensor[(7, 8, 14), float32]) */;
  %772 = cast(meta[relay.Constant][36] /* ty=Tensor[(1344), float64] */, dtype="bool") /* ty=Tensor[(1344), bool] */;
  %773 = shape_of(meta[relay.Constant][35] /* ty=Tensor[(1344), float64] */, dtype="int32") /* ty=Tensor[(1), int32] */;
  %774 = cast(meta[relay.Constant][35] /* ty=Tensor[(1344), float64] */, dtype="bool") /* ty=Tensor[(1344), bool] */;
  %775 = dyn.reshape(%772, %773, newshape=[]) /* ty=Tensor[(?), bool] */;
  %776 = %768.0;
  %777 = %771.1;
  %778 = not_equal(%774, %775) /* ty=Tensor[(1344), bool] */;
  (%776, %777, %778)
}

def @func_10492() -> Tensor[(7, 8, 14), float64] {
  %779 = @func_8893() /* ty=(Tensor[(7, 8, 14), float64],) */;
  %779.0
}

def @func_6948() -> (Tensor[(7, 8, 14), float64],) {
  %782 = fn () -> (Tensor[(7, 8, 14), float64],) {
    %780 = @func_6058() /* ty=(Tensor[(7, 8, 14), float64],) */;
    %781 = %780.0;
    (%781,)
  };
  %782() /* ty=(Tensor[(7, 8, 14), float64],) */
}

def @func_11943(%var_11942: Tensor[(9, 5, 14), float64]) -> (Tensor[(9, 5, 14), float64], Tensor[(7, 8, 14), float64]) {
  %787 = fn (%var_11924: Tensor[(9, 5, 14), float64]) -> (Tensor[(9, 5, 14), float64], Tensor[(7, 8, 14), float64]) {
    %783 = cast(%var_11924, dtype="float64") /* ty=Tensor[(9, 5, 14), float64] */;
    %784 = @func_2137() /* ty=(Tensor[(7, 8, 14), float64], Tensor[(7, 8, 14), float64]) */;
    %785 = sqrt(%783) /* ty=Tensor[(9, 5, 14), float64] */;
    %786 = %784.0;
    (%785, %786)
  };
  %787(%var_11942) /* ty=(Tensor[(9, 5, 14), float64], Tensor[(7, 8, 14), float64]) */
}

def @func_11780() -> (Tensor[(7, 8, 14), float32], Tensor[(7, 8, 14), float64]) {
  %791 = fn () -> (Tensor[(7, 8, 14), float32], Tensor[(7, 8, 14), float64]) {
    %788 = @func_7829() /* ty=(Tensor[(7, 8, 14), float64],) */;
    %789 = @func_2010() /* ty=Tensor[(7, 8, 14), float32] */;
    %790 = %788.0;
    (%789, %790)
  };
  %791() /* ty=(Tensor[(7, 8, 14), float32], Tensor[(7, 8, 14), float64]) */
}

def @func_7467() -> Tensor[(7, 8, 14), float32] {
  %793 = fn () -> Tensor[(7, 8, 14), float32] {
    %792 = @func_3871() /* ty=(Tensor[(7, 8, 14), float64], Tensor[(7, 8, 14), float32]) */;
    %792.1
  };
  %793() /* ty=Tensor[(7, 8, 14), float32] */
}

def @func_9877() -> (Tensor[(7, 8, 14), float32],) {
  %794 = @func_8570() /* ty=Tensor[(7, 8, 14), float32] */;
  (%794,)
}

def @func_7053() -> (Tensor[(7, 8, 14), float64],) {
  %797 = fn () -> (Tensor[(7, 8, 14), float64],) {
    %795 = @func_2804() /* ty=(Tensor[(7, 8, 14), float64], Tensor[(7, 8, 14), float32]) */;
    %796 = %795.0;
    (%796,)
  };
  %797() /* ty=(Tensor[(7, 8, 14), float64],) */
}

def @func_1039(%var_1037: Tensor[(14, 2, 15), uint64], %var_1038: Tensor[(14, 2, 15), uint64]) -> Tensor[(14, 2, 15), uint64] {
  %802 = fn (%var_1021: Tensor[(14, 2, 15), uint64], %var_1022: Tensor[(14, 2, 15), uint64]) -> Tensor[(14, 2, 15), uint64] {
    %798 = cast(%var_1022, dtype="uint64") /* ty=Tensor[(14, 2, 15), uint64] */;
    %799 = shape_of(%var_1021, dtype="int32") /* ty=Tensor[(3), int32] */;
    %800 = cast(%var_1021, dtype="uint64") /* ty=Tensor[(14, 2, 15), uint64] */;
    %801 = dyn.reshape(%798, %799, newshape=[]) /* ty=Tensor[(?, ?, ?), uint64] */;
    right_shift(%800, %801) /* ty=Tensor[(14, 2, 15), uint64] */
  };
  %802(%var_1037, %var_1038) /* ty=Tensor[(14, 2, 15), uint64] */
}

def @func_9858(%var_9851: Tensor[(7, 15, 4), float64]) -> (Tensor[(7, 15, 4), float32],) {
  %803 = cast(%var_9851, dtype="float64") /* ty=Tensor[(7, 15, 4), float64] */;
  %804 = sqrt(%803) /* ty=Tensor[(7, 15, 4), float64] */;
  %805 = cast(%804, dtype="float32") /* ty=Tensor[(7, 15, 4), float32] */;
  %806 = asin(%805) /* ty=Tensor[(7, 15, 4), float32] */;
  (%806,)
}

def @func_4590(%var_4588: Tensor[(48), float64]) -> (Tensor[(7, 8, 14), float32], Tensor[(3, 8, 2), float64], Tensor[(48), float64]) {
  @func_4587(%var_4588) /* ty=(Tensor[(7, 8, 14), float32], Tensor[(3, 8, 2), float64], Tensor[(48), float64]) */
}

def @func_11646() -> (Tensor[(7, 8, 14), float64], Tensor[(7, 8, 14), float32]) {
  %809 = fn () -> (Tensor[(7, 8, 14), float64], Tensor[(7, 8, 14), float32]) {
    %807 = @func_3597() /* ty=Tensor[(7, 8, 14), float64] */;
    %808 = @func_8570() /* ty=Tensor[(7, 8, 14), float32] */;
    (%807, %808)
  };
  %809() /* ty=(Tensor[(7, 8, 14), float64], Tensor[(7, 8, 14), float32]) */
}

def @func_7564() -> Tensor[(7, 8, 14), float32] {
  @func_7562() /* ty=Tensor[(7, 8, 14), float32] */
}

def @func_2366(%var_2364: Tensor[(7, 8, 14), float64]) -> (Tensor[(7, 8, 14), uint8], Tensor[(15, 6, 10), bool], Tensor[(900), float32], Tensor[(14, 2, 15), uint64], Tensor[(420), uint64], Tensor[(7, 8, 14), float64], Tensor[(7, 8, 14), float32]) {
  @func_2363(%var_2364) /* ty=(Tensor[(7, 8, 14), uint8], Tensor[(15, 6, 10), bool], Tensor[(900), float32], Tensor[(14, 2, 15), uint64], Tensor[(420), uint64], Tensor[(7, 8, 14), float64], Tensor[(7, 8, 14), float32]) */
}

def @func_3288(%var_3287: Tensor[(7, 8, 14), float32]) -> (Tensor[(15, 6, 10), bool], Tensor[(1, 900), float32], Tensor[(7, 8, 14), int8]) {
  %819 = fn (%var_3271: Tensor[(7, 8, 14), float32]) -> (Tensor[(15, 6, 10), bool], Tensor[(1, 900), float32], Tensor[(7, 8, 14), int8]) {
    %810 = cast(meta[relay.Constant][37] /* ty=Tensor[(1, 900), float32] */, dtype="float32") /* ty=Tensor[(1, 900), float32] */;
    %811 = reshape(%810, newshape=[15, 6, 10]) /* ty=Tensor[(15, 6, 10), float32] */;
    %812 = @func_3162() /* ty=Tensor[(7, 8, 14), float32] */;
    %813 = cast(%var_3271, dtype="int8") /* ty=Tensor[(7, 8, 14), int8] */;
    %814 = shape_of(%812, dtype="int32") /* ty=Tensor[(3), int32] */;
    %815 = cast(%812, dtype="int8") /* ty=Tensor[(7, 8, 14), int8] */;
    %816 = dyn.reshape(%813, %814, newshape=[]) /* ty=Tensor[(?, ?, ?), int8] */;
    %817 = @func_669(%811) /* ty=Tensor[(15, 6, 10), bool] */;
    %818 = maximum(%815, %816) /* ty=Tensor[(7, 8, 14), int8] */;
    (%817, meta[relay.Constant][37] /* ty=Tensor[(1, 900), float32] */, %818)
  };
  %819(%var_3287) /* ty=(Tensor[(15, 6, 10), bool], Tensor[(1, 900), float32], Tensor[(7, 8, 14), int8]) */
}

def @func_6756() -> Tensor[(7, 8, 14), float64] {
  @func_6754() /* ty=Tensor[(7, 8, 14), float64] */
}

def @func_3176(%var_3173: Tensor[(7, 9, 4), float64]) -> (Tensor[(7, 9, 4), float64],) {
  %820 = cast(%var_3173, dtype="float64") /* ty=Tensor[(7, 9, 4), float64] */;
  %821 = cosh(%820) /* ty=Tensor[(7, 9, 4), float64] */;
  (%821,)
}

def @func_3413() -> (Tensor[(7, 8, 14), float32], Tensor[(7, 8, 14), float64]) {
  %822 = @func_2137() /* ty=(Tensor[(7, 8, 14), float64], Tensor[(7, 8, 14), float64]) */;
  %823 = %822.0;
  %824 = cast(%823, dtype="float32") /* ty=Tensor[(7, 8, 14), float32] */;
  %825 = @func_3240() /* ty=(Tensor[(7, 8, 14), float64], Tensor[(7, 8, 14), float32]) */;
  %826 = asin(%824) /* ty=Tensor[(7, 8, 14), float32] */;
  %827 = %825.0;
  (%826, %827)
}

def @func_2990(%var_2988: Tensor[(7, 8, 14), float32], %var_2989: Tensor[(7, 8, 14), float32]) -> (Tensor[(7, 8, 14), uint16], Tensor[(7, 8, 14), float64]) {
  %845 = fn (%var_2958: Tensor[(7, 8, 14), float32], %var_2978: Tensor[(7, 8, 14), float32]) -> (Tensor[(7, 8, 14), uint16], Tensor[(7, 8, 14), float64]) {
    %828 = @func_1554() /* ty=(Tensor[(7, 8, 14), float32],) */;
    %829 = %828.0;
    %830 = cast(%var_2958, dtype="int64") /* ty=Tensor[(7, 8, 14), int64] */;
    %831 = shape_of(%829, dtype="int32") /* ty=Tensor[(3), int32] */;
    %832 = cast(%829, dtype="int64") /* ty=Tensor[(7, 8, 14), int64] */;
    %833 = dyn.reshape(%830, %831, newshape=[]) /* ty=Tensor[(?, ?, ?), int64] */;
    %834 = bitwise_or(%832, %833) /* ty=Tensor[(7, 8, 14), int64] */;
    %835 = cast(%834, dtype="uint16") /* ty=Tensor[(7, 8, 14), uint16] */;
    %836 = shape_of(%var_2958, dtype="int32") /* ty=Tensor[(3), int32] */;
    %837 = cast(%var_2958, dtype="uint16") /* ty=Tensor[(7, 8, 14), uint16] */;
    %838 = dyn.reshape(%835, %836, newshape=[]) /* ty=Tensor[(?, ?, ?), uint16] */;
    %839 = cast(%var_2978, dtype="float64") /* ty=Tensor[(7, 8, 14), float64] */;
    %840 = shape_of(%var_2958, dtype="int32") /* ty=Tensor[(3), int32] */;
    %841 = cast(%var_2958, dtype="float64") /* ty=Tensor[(7, 8, 14), float64] */;
    %842 = dyn.reshape(%839, %840, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
    %843 = logical_xor(%837, %838) /* ty=Tensor[(7, 8, 14), uint16] */;
    %844 = power(%841, %842) /* ty=Tensor[(7, 8, 14), float64] */;
    (%843, %844)
  };
  %845(%var_2988, %var_2989) /* ty=(Tensor[(7, 8, 14), uint16], Tensor[(7, 8, 14), float64]) */
}

def @func_3773() -> Tensor[(7, 8, 14), float64] {
  @func_3771() /* ty=Tensor[(7, 8, 14), float64] */
}

def @func_9269() -> (Tensor[(7, 8, 14), float32], Tensor[(14, 2, 15), uint64], Tensor[(5, 84), uint64]) {
  %846 = @func_8142() /* ty=(Tensor[(7, 8, 14), float32],) */;
  %847 = cast(meta[relay.Constant][38] /* ty=Tensor[(5, 84), uint64] */, dtype="uint64") /* ty=Tensor[(5, 84), uint64] */;
  %848 = cast(meta[relay.Constant][38] /* ty=Tensor[(5, 84), uint64] */, dtype="uint64") /* ty=Tensor[(5, 84), uint64] */;
  %849 = reshape(%847, newshape=[14, 2, 15]) /* ty=Tensor[(14, 2, 15), uint64] */;
  %850 = reshape(%848, newshape=[14, 2, 15]) /* ty=Tensor[(14, 2, 15), uint64] */;
  %851 = %846.0;
  %852 = @func_1036(%849, %850) /* ty=Tensor[(14, 2, 15), uint64] */;
  (%851, %852, meta[relay.Constant][38] /* ty=Tensor[(5, 84), uint64] */)
}

def @func_9271() -> (Tensor[(7, 8, 14), float32], Tensor[(14, 2, 15), uint64], Tensor[(5, 84), uint64]) {
  @func_9269() /* ty=(Tensor[(7, 8, 14), float32], Tensor[(14, 2, 15), uint64], Tensor[(5, 84), uint64]) */
}

def @func_12208() -> Tensor[(7, 8, 14), float64] {
  @func_12206() /* ty=Tensor[(7, 8, 14), float64] */
}

def @func_10983() -> (Tensor[(7, 8, 14), float64], Tensor[(7, 8, 14), float64], Tensor[(7, 8, 14), float64]) {
  %857 = fn () -> (Tensor[(7, 8, 14), float64], Tensor[(7, 8, 14), float64], Tensor[(7, 8, 14), float64]) {
    %853 = @func_5461() /* ty=(Tensor[(7, 8, 14), float64], Tensor[(7, 8, 14), float32]) */;
    %854 = @func_9242() /* ty=Tensor[(7, 8, 14), float64] */;
    %855 = %853.0;
    %856 = @func_6754() /* ty=Tensor[(7, 8, 14), float64] */;
    (%854, %855, %856)
  };
  %857() /* ty=(Tensor[(7, 8, 14), float64], Tensor[(7, 8, 14), float64], Tensor[(7, 8, 14), float64]) */
}

def @func_5688() -> (Tensor[(7, 8, 14), float32], Tensor[(7, 8, 14), float64], Tensor[(7, 8, 14), float64]) {
  %863 = fn () -> (Tensor[(7, 8, 14), float32], Tensor[(7, 8, 14), float64], Tensor[(7, 8, 14), float64]) {
    %858 = @func_3754() /* ty=(Tensor[(7, 8, 14), float32],) */;
    %859 = @func_5461() /* ty=(Tensor[(7, 8, 14), float64], Tensor[(7, 8, 14), float32]) */;
    %860 = %858.0;
    %861 = %859.0;
    %862 = @func_1291() /* ty=Tensor[(7, 8, 14), float64] */;
    (%860, %861, %862)
  };
  %863() /* ty=(Tensor[(7, 8, 14), float32], Tensor[(7, 8, 14), float64], Tensor[(7, 8, 14), float64]) */
}

def @func_3584() -> (Tensor[(7, 8, 14), float64],) {
  @func_3582() /* ty=(Tensor[(7, 8, 14), float64],) */
}

def @func_3862() -> (Tensor[(7, 8, 14), float64],) {
  %866 = fn () -> (Tensor[(7, 8, 14), float64],) {
    %864 = @func_2137() /* ty=(Tensor[(7, 8, 14), float64], Tensor[(7, 8, 14), float64]) */;
    %865 = %864.0;
    (%865,)
  };
  %866() /* ty=(Tensor[(7, 8, 14), float64],) */
}

def @func_3508() -> Tensor[(7, 8, 14), float32] {
  %868 = fn () -> Tensor[(7, 8, 14), float32] {
    %867 = @func_2060() /* ty=(Tensor[(7, 8, 14), float32],) */;
    %867.0
  };
  %868() /* ty=Tensor[(7, 8, 14), float32] */
}

def @func_3771() -> Tensor[(7, 8, 14), float64] {
  %869 = @func_2487() /* ty=(Tensor[(7, 8, 14), float64],) */;
  %869.0
}

def @func_9451() -> (Tensor[(7, 8, 14), bool],) {
  @func_9449() /* ty=(Tensor[(7, 8, 14), bool],) */
}

def @func_8503() -> Tensor[(96), float32] {
  %870 = fn () -> Tensor[(96), float32] {
    @func_5744() /* ty=Tensor[(96), float32] */
  };
  %870() /* ty=Tensor[(96), float32] */
}

def @func_6048() -> Tensor[(7, 8, 14), float32] {
  @func_6046() /* ty=Tensor[(7, 8, 14), float32] */
}

def @func_11222() -> (Tensor[(7, 8, 14), float64], Tensor[(7, 8, 14), float32]) {
  @func_11220() /* ty=(Tensor[(7, 8, 14), float64], Tensor[(7, 8, 14), float32]) */
}

def @func_11533() -> (Tensor[(16, 1, 6), float32],) {
  %873 = fn () -> (Tensor[(16, 1, 6), float32],) {
    %871 = @func_8436() /* ty=(Tensor[(16, 1, 6), float32],) */;
    %872 = %871.0;
    (%872,)
  };
  %873() /* ty=(Tensor[(16, 1, 6), float32],) */
}

def @func_11486() -> (Tensor[(7, 8, 14), float64], Tensor[(7, 15, 4), float32], Tensor[(7, 8, 14), float32]) {
  %874 = @func_7829() /* ty=(Tensor[(7, 8, 14), float64],) */;
  %875 = @func_10619() /* ty=(Tensor[(7, 8, 14), float32], Tensor[(96), float32], Tensor[(420), float64], Tensor[(7, 15, 4), float32]) */;
  %876 = %874.0;
  %877 = %875.3;
  %878 = @func_10397() /* ty=Tensor[(7, 8, 14), float32] */;
  (%876, %877, %878)
}

def @func_12387() -> (Tensor[(7, 8, 14), float32],) {
  @func_12385() /* ty=(Tensor[(7, 8, 14), float32],) */
}

def @func_3456() -> (Tensor[(7, 8, 14), float64],) {
  %881 = fn () -> (Tensor[(7, 8, 14), float64],) {
    %879 = @func_2804() /* ty=(Tensor[(7, 8, 14), float64], Tensor[(7, 8, 14), float32]) */;
    %880 = %879.0;
    (%880,)
  };
  %881() /* ty=(Tensor[(7, 8, 14), float64],) */
}

def @func_6815() -> (Tensor[(7, 8, 14), float32],) {
  %883 = fn () -> (Tensor[(7, 8, 14), float32],) {
    %882 = @func_2196() /* ty=Tensor[(7, 8, 14), float32] */;
    (%882,)
  };
  %883() /* ty=(Tensor[(7, 8, 14), float32],) */
}

def @func_1334(%var_1332: Tensor[(420), uint64]) -> (Tensor[(7, 8, 14), float64], Tensor[(14, 2, 15), uint64], Tensor[(420), uint64]) {
  @func_1331(%var_1332) /* ty=(Tensor[(7, 8, 14), float64], Tensor[(14, 2, 15), uint64], Tensor[(420), uint64]) */
}

def @func_10819() -> (Tensor[(96), float32], Tensor[(7, 8, 14), float32], Tensor[(7, 8, 14), float32]) {
  %884 = @func_7940() /* ty=(Tensor[(7, 8, 14), float32],) */;
  %885 = @func_5744() /* ty=Tensor[(96), float32] */;
  %886 = %884.0;
  %887 = @func_8570() /* ty=Tensor[(7, 8, 14), float32] */;
  (%885, %886, %887)
}

def @func_2139() -> (Tensor[(7, 8, 14), float64], Tensor[(7, 8, 14), float64]) {
  @func_2137() /* ty=(Tensor[(7, 8, 14), float64], Tensor[(7, 8, 14), float64]) */
}

def @func_9578(%var_9576: Tensor[(1, 13, 7), float64]) -> (Tensor[(1, 13, 7), float64], Tensor[(7, 8, 14), float64], Tensor[(?, 13, 7), float64], Tensor[(?, 13, 7), bool], Tensor[(7, 8, 14), int32]) {
  @func_9575(%var_9576) /* ty=(Tensor[(1, 13, 7), float64], Tensor[(7, 8, 14), float64], Tensor[(?, 13, 7), float64], Tensor[(?, 13, 7), bool], Tensor[(7, 8, 14), int32]) */
}

def @func_4390() -> Tensor[(7, 8, 14), float64] {
  %889 = fn () -> Tensor[(7, 8, 14), float64] {
    %888 = @func_2804() /* ty=(Tensor[(7, 8, 14), float64], Tensor[(7, 8, 14), float32]) */;
    %888.0
  };
  %889() /* ty=Tensor[(7, 8, 14), float64] */
}

def @func_1281() -> Tensor[(7, 8, 14), float32] {
  @func_1279() /* ty=Tensor[(7, 8, 14), float32] */
}

def @func_1554() -> (Tensor[(7, 8, 14), float32],) {
  %890 = @func_1279() /* ty=Tensor[(7, 8, 14), float32] */;
  %891 = cast(%890, dtype="float32") /* ty=Tensor[(7, 8, 14), float32] */;
  %892 = cos(%891) /* ty=Tensor[(7, 8, 14), float32] */;
  (%892,)
}

def @func_4522() -> (Tensor[(7, 8, 14), float64],) {
  %893 = @func_2137() /* ty=(Tensor[(7, 8, 14), float64], Tensor[(7, 8, 14), float64]) */;
  %894 = %893.1;
  (%894,)
}

def @func_11220() -> (Tensor[(7, 8, 14), float64], Tensor[(7, 8, 14), float32]) {
  %895 = @func_8676() /* ty=(Tensor[(7, 8, 14), float64], Tensor[(7, 8, 14), float32]) */;
  %896 = @func_4389() /* ty=Tensor[(7, 8, 14), float64] */;
  %897 = %895.1;
  (%896, %897)
}

def @func_9183() -> Tensor[(16, 1, 6), float32] {
  %898 = @func_8436() /* ty=(Tensor[(16, 1, 6), float32],) */;
  %898.0
}

def @func_8572() -> Tensor[(7, 8, 14), float32] {
  @func_8570() /* ty=Tensor[(7, 8, 14), float32] */
}

def @func_2073() -> Tensor[(7, 8, 14), float32] {
  %902 = fn () -> Tensor[(7, 8, 14), float32] {
    %899 = @func_1554() /* ty=(Tensor[(7, 8, 14), float32],) */;
    %900 = %899.0;
    %901 = cast(%900, dtype="float32") /* ty=Tensor[(7, 8, 14), float32] */;
    log(%901) /* ty=Tensor[(7, 8, 14), float32] */
  };
  %902() /* ty=Tensor[(7, 8, 14), float32] */
}

def @func_10749() -> (Tensor[(7, 8, 14), float32], Tensor[(7, 8, 14), float64]) {
  %906 = fn () -> (Tensor[(7, 8, 14), float32], Tensor[(7, 8, 14), float64]) {
    %903 = @func_9225() /* ty=(Tensor[(7, 8, 14), float64], Tensor[(96), float32]) */;
    %904 = @func_3162() /* ty=Tensor[(7, 8, 14), float32] */;
    %905 = %903.0;
    (%904, %905)
  };
  %906() /* ty=(Tensor[(7, 8, 14), float32], Tensor[(7, 8, 14), float64]) */
}

def @func_1748() -> Tensor[(7, 8, 14), float64] {
  @func_1172() /* ty=Tensor[(7, 8, 14), float64] */
}

def @func_5526() -> Tensor[(7, 8, 14), float64] {
  %907 = fn () -> Tensor[(7, 8, 14), float64] {
    @func_1291() /* ty=Tensor[(7, 8, 14), float64] */
  };
  %907() /* ty=Tensor[(7, 8, 14), float64] */
}

def @func_7902() -> (Tensor[(7, 8, 14), float32],) {
  @func_7900() /* ty=(Tensor[(7, 8, 14), float32],) */
}

def @func_1292() -> Tensor[(7, 8, 14), float64] {
  %908 = fn () -> Tensor[(7, 8, 14), float64] {
    @func_1172() /* ty=Tensor[(7, 8, 14), float64] */
  };
  %908() /* ty=Tensor[(7, 8, 14), float64] */
}

def @func_11488() -> (Tensor[(7, 8, 14), float64], Tensor[(7, 15, 4), float32], Tensor[(7, 8, 14), float32]) {
  @func_11486() /* ty=(Tensor[(7, 8, 14), float64], Tensor[(7, 15, 4), float32], Tensor[(7, 8, 14), float32]) */
}

def @func_4587(%var_4570: Tensor[(48), float64]) -> (Tensor[(7, 8, 14), float32], Tensor[(3, 8, 2), float64], Tensor[(48), float64]) {
  %909 = cast(%var_4570, dtype="float64") /* ty=Tensor[(48), float64] */;
  %910 = reshape(%909, newshape=[48]) /* ty=Tensor[(48), float64] */;
  %911 = @func_2402(%910) /* ty=(Tensor[(7, 8, 14), float32], Tensor[(3, 8, 2), float64], Tensor[(48), float64]) */;
  %912 = @func_3674() /* ty=Tensor[(7, 8, 14), float32] */;
  %913 = %911.1;
  (%912, %913, %var_4570)
}

def @func_2363(%var_2305: Tensor[(7, 8, 14), float64]) -> (Tensor[(7, 8, 14), uint8], Tensor[(15, 6, 10), bool], Tensor[(900), float32], Tensor[(14, 2, 15), uint64], Tensor[(420), uint64], Tensor[(7, 8, 14), float64], Tensor[(7, 8, 14), float32]) {
  %914 = @func_2196() /* ty=Tensor[(7, 8, 14), float32] */;
  %915 = cast(%914, dtype="float64") /* ty=Tensor[(7, 8, 14), float64] */;
  %916 = tan(%915) /* ty=Tensor[(7, 8, 14), float64] */;
  %917 = cast(%var_2305, dtype="uint8") /* ty=Tensor[(7, 8, 14), uint8] */;
  %918 = shape_of(%916, dtype="int32") /* ty=Tensor[(3), int32] */;
  %919 = cast(%916, dtype="uint8") /* ty=Tensor[(7, 8, 14), uint8] */;
  %920 = dyn.reshape(%917, %918, newshape=[]) /* ty=Tensor[(?, ?, ?), uint8] */;
  %921 = cast(meta[relay.Constant][39] /* ty=Tensor[(900), float32] */, dtype="float32") /* ty=Tensor[(900), float32] */;
  %922 = reshape(%921, newshape=[15, 6, 10]) /* ty=Tensor[(15, 6, 10), float32] */;
  %923 = cast(meta[relay.Constant][40] /* ty=Tensor[(420), uint64] */, dtype="uint64") /* ty=Tensor[(420), uint64] */;
  %924 = reshape(%923, newshape=[420]) /* ty=Tensor[(420), uint64] */;
  %925 = @func_1964(%924) /* ty=(Tensor[(7, 8, 14), float32], Tensor[(7, 8, 14), float32], Tensor[(14, 2, 15), uint64], Tensor[(420), uint64]) */;
  %926 = multiply(%919, %920) /* ty=Tensor[(7, 8, 14), uint8] */;
  %927 = @func_669(%922) /* ty=Tensor[(15, 6, 10), bool] */;
  %928 = %925.2;
  %929 = @func_1291() /* ty=Tensor[(7, 8, 14), float64] */;
  %930 = @func_2092() /* ty=Tensor[(7, 8, 14), float32] */;
  (%926, %927, meta[relay.Constant][39] /* ty=Tensor[(900), float32] */, %928, meta[relay.Constant][40] /* ty=Tensor[(420), uint64] */, %929, %930)
}

def @func_11811() -> Tensor[(48), float64] {
  @func_11809() /* ty=Tensor[(48), float64] */
}

def @func_1710(%var_1708: Tensor[(420), uint64]) -> (Tensor[(7, 8, 14), float32], Tensor[(420), uint64], Tensor[(420), uint64]) {
  @func_1707(%var_1708) /* ty=(Tensor[(7, 8, 14), float32], Tensor[(420), uint64], Tensor[(420), uint64]) */
}

def @func_4833(%var_4818: Tensor[(3, 8, 15), int64], %var_4819: Tensor[(3, 8, 15), int64]) -> (Tensor[(3, 8, 15), bool],) {
  %931 = cast(%var_4819, dtype="bool") /* ty=Tensor[(3, 8, 15), bool] */;
  %932 = shape_of(%var_4818, dtype="int32") /* ty=Tensor[(3), int32] */;
  %933 = cast(%var_4818, dtype="bool") /* ty=Tensor[(3, 8, 15), bool] */;
  %934 = dyn.reshape(%931, %932, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %935 = greater(%933, %934) /* ty=Tensor[(3, 8, 15), bool] */;
  (%935,)
}

def @func_2416() -> Tensor[(7, 8, 14), float32] {
  @func_2038() /* ty=Tensor[(7, 8, 14), float32] */
}

def @func_3179(%var_3177: Tensor[(7, 9, 4), float64]) -> (Tensor[(7, 9, 4), float64],) {
  @func_3176(%var_3177) /* ty=(Tensor[(7, 9, 4), float64],) */
}

def @func_9643() -> Tensor[(7, 8, 14), bool] {
  %937 = fn () -> Tensor[(7, 8, 14), bool] {
    %936 = @func_9449() /* ty=(Tensor[(7, 8, 14), bool],) */;
    %936.0
  };
  %937() /* ty=Tensor[(7, 8, 14), bool] */
}

def @func_5335(%var_5334: Tensor[(7, 88), uint32]) -> (Tensor[(7, 8, 14), float32], Tensor[(96), float32], Tensor[(7, 8, 14), int32], Tensor[(616), uint32], Tensor[(7, 88), uint8]) {
  %963 = fn (%var_5287: Tensor[(7, 88), uint32]) -> (Tensor[(7, 8, 14), float32], Tensor[(96), float32], Tensor[(7, 8, 14), int32], Tensor[(616), uint32], Tensor[(7, 88), uint8]) {
    %938 = @func_3754() /* ty=(Tensor[(7, 8, 14), float32],) */;
    %939 = %938.0;
    %940 = cast(%939, dtype="float32") /* ty=Tensor[(7, 8, 14), float32] */;
    %941 = reshape(%940, newshape=[7, 8, 14]) /* ty=Tensor[(7, 8, 14), float32] */;
    %942 = @func_3823(%941) /* ty=(Tensor[(7, 8, 14), int32],) */;
    %943 = cast(%var_5287, dtype="uint32") /* ty=Tensor[(7, 88), uint32] */;
    %944 = cast(%var_5287, dtype="uint32") /* ty=Tensor[(7, 88), uint32] */;
    %945 = cast(meta[relay.Constant][41] /* ty=Tensor[(96), float32] */, dtype="float32") /* ty=Tensor[(96), float32] */;
    %946 = reshape(%943, newshape=[11, 14, 4]) /* ty=Tensor[(11, 14, 4), uint32] */;
    %947 = reshape(%944, newshape=[11, 14, 4]) /* ty=Tensor[(11, 14, 4), uint32] */;
    %948 = reshape(%945, newshape=[4, 24]) /* ty=Tensor[(4, 24), float32] */;
    %949 = @func_317(%946, %947, %948) /* ty=(Tensor[(11, 14, 4), uint32], Tensor[(16, 1, 6), float32], Tensor[(4, 24), float32]) */;
    %950 = %949.0;
    %951 = cast(%950, dtype="uint32") /* ty=Tensor[(11, 14, 4), uint32] */;
    %952 = cast(meta[relay.Constant][41] /* ty=Tensor[(96), float32] */, dtype="float32") /* ty=Tensor[(96), float32] */;
    %953 = reshape(%951, newshape=[616]) /* ty=Tensor[(616), uint32] */;
    %954 = reshape(%952, newshape=[48, 2]) /* ty=Tensor[(48, 2), float32] */;
    %955 = @func_5177(%953, %954) /* ty=(Tensor[(7, 8, 14), float32], Tensor[(4, 24), float32], Tensor[(616), uint32], Tensor[(48, 2), float32], Tensor[(7, 8, 14), float32]) */;
    %956 = cast(%950, dtype="uint8") /* ty=Tensor[(11, 14, 4), uint8] */;
    %957 = shape_of(%var_5287, dtype="int32") /* ty=Tensor[(2), int32] */;
    %958 = cast(%var_5287, dtype="uint8") /* ty=Tensor[(7, 88), uint8] */;
    %959 = dyn.reshape(%956, %957, newshape=[]) /* ty=Tensor[(?, ?), uint8] */;
    %960 = %942.0;
    %961 = %955.2;
    %962 = subtract(%958, %959) /* ty=Tensor[(7, 88), uint8] */;
    (%939, meta[relay.Constant][41] /* ty=Tensor[(96), float32] */, %960, %961, %962)
  };
  %963(%var_5334) /* ty=(Tensor[(7, 8, 14), float32], Tensor[(96), float32], Tensor[(7, 8, 14), int32], Tensor[(616), uint32], Tensor[(7, 88), uint8]) */
}

def @func_4042() -> (Tensor[(7, 8, 14), float32], Tensor[(16, 1, 6), float32], Tensor[(96), float32]) {
  %969 = fn () -> (Tensor[(7, 8, 14), float32], Tensor[(16, 1, 6), float32], Tensor[(96), float32]) {
    %964 = cast(meta[relay.Constant][42] /* ty=Tensor[(96), float32] */, dtype="float32") /* ty=Tensor[(96), float32] */;
    %965 = reshape(%964, newshape=[16, 1, 6]) /* ty=Tensor[(16, 1, 6), float32] */;
    %966 = @func_77(%965) /* ty=(Tensor[(16, 1, 6), float32],) */;
    %967 = @func_1279() /* ty=Tensor[(7, 8, 14), float32] */;
    %968 = %966.0;
    (%967, %968, meta[relay.Constant][42] /* ty=Tensor[(96), float32] */)
  };
  %969() /* ty=(Tensor[(7, 8, 14), float32], Tensor[(16, 1, 6), float32], Tensor[(96), float32]) */
}

def @func_10620() -> (Tensor[(7, 8, 14), float32], Tensor[(96), float32], Tensor[(420), float64], Tensor[(7, 15, 4), float32]) {
  %978 = fn () -> (Tensor[(7, 8, 14), float32], Tensor[(96), float32], Tensor[(420), float64], Tensor[(7, 15, 4), float32]) {
    %970 = cast(meta[relay.Constant][43] /* ty=Tensor[(420), float64] */, dtype="float64") /* ty=Tensor[(420), float64] */;
    %971 = reshape(%970, newshape=[7, 15, 4]) /* ty=Tensor[(7, 15, 4), float64] */;
    %972 = @func_9858(%971) /* ty=(Tensor[(7, 15, 4), float32],) */;
    %973 = %972.0;
    %974 = cast(%973, dtype="float32") /* ty=Tensor[(7, 15, 4), float32] */;
    %975 = @func_7466() /* ty=Tensor[(7, 8, 14), float32] */;
    %976 = @func_5474() /* ty=Tensor[(96), float32] */;
    %977 = log2(%974) /* ty=Tensor[(7, 15, 4), float32] */;
    (%975, %976, meta[relay.Constant][43] /* ty=Tensor[(420), float64] */, %977)
  };
  %978() /* ty=(Tensor[(7, 8, 14), float32], Tensor[(96), float32], Tensor[(420), float64], Tensor[(7, 15, 4), float32]) */
}

def @func_10290() -> Tensor[(7, 8, 14), float64] {
  @func_5832() /* ty=Tensor[(7, 8, 14), float64] */
}

def @func_8542() -> (Tensor[(7, 8, 14), float32],) {
  @func_8540() /* ty=(Tensor[(7, 8, 14), float32],) */
}

def @func_8570() -> Tensor[(7, 8, 14), float32] {
  @func_1279() /* ty=Tensor[(7, 8, 14), float32] */
}

def @func_11977() -> (Tensor[(7, 8, 14), float32],) {
  @func_11975() /* ty=(Tensor[(7, 8, 14), float32],) */
}

def @func_9242() -> Tensor[(7, 8, 14), float64] {
  %979 = @func_7829() /* ty=(Tensor[(7, 8, 14), float64],) */;
  %979.0
}

def @func_1081(%var_1078: Tensor[(9, 15, 3), int32], %var_1079: Tensor[(616), uint32], %var_1080: Tensor[(2, 48), float32]) -> (Tensor[(9, 15, 3), int32], Tensor[(616), uint32], Tensor[(2, 48), bool], Tensor[(2, 48), float32]) {
  @func_1076(%var_1078, %var_1079, %var_1080) /* ty=(Tensor[(9, 15, 3), int32], Tensor[(616), uint32], Tensor[(2, 48), bool], Tensor[(2, 48), float32]) */
}

def @func_669(%var_665: Tensor[(15, 6, 10), float32]) -> Tensor[(15, 6, 10), bool] {
  %980 = cast(%var_665, dtype="bool") /* ty=Tensor[(15, 6, 10), bool] */;
  %981 = shape_of(meta[relay.Constant][44] /* ty=Tensor[(15, 6, 10), float32] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %982 = cast(meta[relay.Constant][44] /* ty=Tensor[(15, 6, 10), float32] */, dtype="bool") /* ty=Tensor[(15, 6, 10), bool] */;
  %983 = dyn.reshape(%980, %981, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  less_equal(%982, %983) /* ty=Tensor[(15, 6, 10), bool] */
}

def @func_8093() -> (Tensor[(7, 8, 14), float64], Tensor[(7, 8, 14), float64]) {
  @func_8091() /* ty=(Tensor[(7, 8, 14), float64], Tensor[(7, 8, 14), float64]) */
}

def @func_6603(%var_6602: Tensor[(7, 8, 14), float64]) -> (Tensor[(3584, 1), float32], Tensor[(7, 8, 14), bool]) {
  %995 = fn (%var_6590: Tensor[(7, 8, 14), float64]) -> (Tensor[(3584, 1), float32], Tensor[(7, 8, 14), bool]) {
    %984 = @func_4287() /* ty=(Tensor[(7, 8, 14), float64], Tensor[(7, 8, 14), float32], Tensor[(3584, 1), float32], Tensor[(7, 8, 14), float64]) */;
    %985 = %984.2;
    %986 = cast(%985, dtype="float32") /* ty=Tensor[(3584, 1), float32] */;
    %987 = @func_2137() /* ty=(Tensor[(7, 8, 14), float64], Tensor[(7, 8, 14), float64]) */;
    %988 = %987.0;
    %989 = cast(%var_6590, dtype="bool") /* ty=Tensor[(7, 8, 14), bool] */;
    %990 = shape_of(%988, dtype="int32") /* ty=Tensor[(3), int32] */;
    %991 = cast(%988, dtype="bool") /* ty=Tensor[(7, 8, 14), bool] */;
    %992 = dyn.reshape(%989, %990, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    %993 = log2(%986) /* ty=Tensor[(3584, 1), float32] */;
    %994 = equal(%991, %992) /* ty=Tensor[(7, 8, 14), bool] */;
    (%993, %994)
  };
  %995(%var_6602) /* ty=(Tensor[(3584, 1), float32], Tensor[(7, 8, 14), bool]) */
}

def @func_6034() -> (Tensor[(7, 8, 14), float32],) {
  %996 = @func_2060() /* ty=(Tensor[(7, 8, 14), float32],) */;
  %997 = %996.0;
  (%997,)
}

def @func_6542(%var_6541: Tensor[(420), uint64]) -> (Tensor[(7, 8, 14), float64], Tensor[(420), uint64], Tensor[(420), uint64], Tensor[(96), float32]) {
  %1004 = fn (%var_6511: Tensor[(420), uint64]) -> (Tensor[(7, 8, 14), float64], Tensor[(420), uint64], Tensor[(420), uint64], Tensor[(96), float32]) {
    %998 = cast(%var_6511, dtype="uint64") /* ty=Tensor[(420), uint64] */;
    %999 = reshape(%998, newshape=[420]) /* ty=Tensor[(420), uint64] */;
    %1000 = @func_1707(%999) /* ty=(Tensor[(7, 8, 14), float32], Tensor[(420), uint64], Tensor[(420), uint64]) */;
    %1001 = @func_2159() /* ty=Tensor[(7, 8, 14), float64] */;
    %1002 = %1000.1;
    %1003 = @func_5744() /* ty=Tensor[(96), float32] */;
    (%1001, %1002, %var_6511, %1003)
  };
  %1004(%var_6541) /* ty=(Tensor[(7, 8, 14), float64], Tensor[(420), uint64], Tensor[(420), uint64], Tensor[(96), float32]) */
}

def @func_7396() -> (Tensor[(7, 8, 14), float32], Tensor[(7, 8, 14), float32]) {
  %1008 = fn () -> (Tensor[(7, 8, 14), float32], Tensor[(7, 8, 14), float32]) {
    %1005 = @func_4760() /* ty=(Tensor[(7, 8, 14), float32], Tensor[(7, 8, 14), float32], Tensor[(7, 8, 14), uint32]) */;
    %1006 = %1005.0;
    %1007 = @func_6046() /* ty=Tensor[(7, 8, 14), float32] */;
    (%1006, %1007)
  };
  %1008() /* ty=(Tensor[(7, 8, 14), float32], Tensor[(7, 8, 14), float32]) */
}

def @func_9617() -> (Tensor[(7, 8, 14), float32],) {
  @func_9615() /* ty=(Tensor[(7, 8, 14), float32],) */
}

def @func_9879() -> (Tensor[(7, 8, 14), float32],) {
  @func_9877() /* ty=(Tensor[(7, 8, 14), float32],) */
}

def @func_1076(%var_1046: Tensor[(9, 15, 3), int32], %var_1060: Tensor[(616), uint32], %var_1061: Tensor[(2, 48), float32]) -> (Tensor[(9, 15, 3), int32], Tensor[(616), uint32], Tensor[(2, 48), bool], Tensor[(2, 48), float32]) {
  %1009 = cast(meta[relay.Constant][45] /* ty=Tensor[(9, 15, 3), int32] */, dtype="int32") /* ty=Tensor[(9, 15, 3), int32] */;
  %1010 = shape_of(%var_1046, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1011 = cast(%var_1046, dtype="int32") /* ty=Tensor[(9, 15, 3), int32] */;
  %1012 = dyn.reshape(%1009, %1010, newshape=[]) /* ty=Tensor[(?, ?, ?), int32] */;
  %1013 = cast(%var_1060, dtype="uint32") /* ty=Tensor[(616), uint32] */;
  %1014 = cast(%var_1060, dtype="uint32") /* ty=Tensor[(616), uint32] */;
  %1015 = cast(%var_1061, dtype="float32") /* ty=Tensor[(2, 48), float32] */;
  %1016 = reshape(%1013, newshape=[11, 14, 4]) /* ty=Tensor[(11, 14, 4), uint32] */;
  %1017 = reshape(%1014, newshape=[11, 14, 4]) /* ty=Tensor[(11, 14, 4), uint32] */;
  %1018 = reshape(%1015, newshape=[4, 24]) /* ty=Tensor[(4, 24), float32] */;
  %1019 = @func_317(%1016, %1017, %1018) /* ty=(Tensor[(11, 14, 4), uint32], Tensor[(16, 1, 6), float32], Tensor[(4, 24), float32]) */;
  %1020 = %1019.1;
  %1021 = cast(%1020, dtype="bool") /* ty=Tensor[(16, 1, 6), bool] */;
  %1022 = shape_of(%var_1061, dtype="int32") /* ty=Tensor[(2), int32] */;
  %1023 = cast(%var_1061, dtype="bool") /* ty=Tensor[(2, 48), bool] */;
  %1024 = dyn.reshape(%1021, %1022, newshape=[]) /* ty=Tensor[(?, ?), bool] */;
  %1025 = cast(meta[relay.Constant][46] /* ty=Tensor[(2, 48), float32] */, dtype="float32") /* ty=Tensor[(2, 48), float32] */;
  %1026 = shape_of(%var_1061, dtype="int32") /* ty=Tensor[(2), int32] */;
  %1027 = cast(%var_1061, dtype="float32") /* ty=Tensor[(2, 48), float32] */;
  %1028 = dyn.reshape(%1025, %1026, newshape=[]) /* ty=Tensor[(?, ?), float32] */;
  %1029 = maximum(%1011, %1012) /* ty=Tensor[(9, 15, 3), int32] */;
  %1030 = greater_equal(%1023, %1024) /* ty=Tensor[(2, 48), bool] */;
  %1031 = divide(%1027, %1028) /* ty=Tensor[(2, 48), float32] */;
  (%1029, %var_1060, %1030, %1031)
}

def @func_5706() -> (Tensor[(7, 8, 14), float64],) {
  %1033 = fn () -> (Tensor[(7, 8, 14), float64],) {
    %1032 = @func_1748() /* ty=Tensor[(7, 8, 14), float64] */;
    (%1032,)
  };
  %1033() /* ty=(Tensor[(7, 8, 14), float64],) */
}

def @func_2061() -> (Tensor[(7, 8, 14), float32],) {
  %1035 = fn () -> (Tensor[(7, 8, 14), float32],) {
    %1034 = @func_1279() /* ty=Tensor[(7, 8, 14), float32] */;
    (%1034,)
  };
  %1035() /* ty=(Tensor[(7, 8, 14), float32],) */
}

def @func_12139() -> (Tensor[(7, 8, 14), float32],) {
  %1038 = fn () -> (Tensor[(7, 8, 14), float32],) {
    %1036 = @func_9615() /* ty=(Tensor[(7, 8, 14), float32],) */;
    %1037 = %1036.0;
    (%1037,)
  };
  %1038() /* ty=(Tensor[(7, 8, 14), float32],) */
}

def @func_1235(%var_1234: Tensor[(2, 15, 1), float64]) -> (Tensor[(2, 15, 1), float32], Tensor[(2, 15, ?), int8]) {
  %1050 = fn (%var_1202: Tensor[(2, 15, 1), float64]) -> (Tensor[(2, 15, 1), float32], Tensor[(2, 15, ?), int8]) {
    %1039 = cast(%var_1202, dtype="float64") /* ty=Tensor[(2, 15, 1), float64] */;
    %1040 = sigmoid(%1039) /* ty=Tensor[(2, 15, 1), float64] */;
    %1041 = cast(%1040, dtype="float32") /* ty=Tensor[(2, 15, 1), float32] */;
    %1042 = cast(%var_1202, dtype="float32") /* ty=Tensor[(2, 15, 1), float32] */;
    %1043 = log2(%1042) /* ty=Tensor[(2, 15, 1), float32] */;
    %1044 = cast(%1043, dtype="int8") /* ty=Tensor[(2, 15, 1), int8] */;
    %1045 = shape_of(%1040, dtype="int32") /* ty=Tensor[(3), int32] */;
    %1046 = cast(%1040, dtype="int8") /* ty=Tensor[(2, 15, 1), int8] */;
    %1047 = dyn.reshape(%1044, %1045, newshape=[]) /* ty=Tensor[(?, ?, ?), int8] */;
    %1048 = sqrt(%1041) /* ty=Tensor[(2, 15, 1), float32] */;
    %1049 = maximum(%1046, %1047) /* ty=Tensor[(2, 15, ?), int8] */;
    (%1048, %1049)
  };
  %1050(%var_1234) /* ty=(Tensor[(2, 15, 1), float32], Tensor[(2, 15, ?), int8]) */
}

def @func_7900() -> (Tensor[(7, 8, 14), float32],) {
  %1051 = @func_6814() /* ty=(Tensor[(7, 8, 14), float32],) */;
  %1052 = %1051.0;
  (%1052,)
}

def @func_5180(%var_5178: Tensor[(616), uint32], %var_5179: Tensor[(48, 2), float32]) -> (Tensor[(7, 8, 14), float32], Tensor[(4, 24), float32], Tensor[(616), uint32], Tensor[(48, 2), float32], Tensor[(7, 8, 14), float32]) {
  %1065 = fn (%var_5164: Tensor[(616), uint32], %var_5165: Tensor[(48, 2), float32]) -> (Tensor[(7, 8, 14), float32], Tensor[(4, 24), float32], Tensor[(616), uint32], Tensor[(48, 2), float32], Tensor[(7, 8, 14), float32]) {
    %1053 = cast(%var_5164, dtype="uint32") /* ty=Tensor[(616), uint32] */;
    %1054 = cast(%var_5164, dtype="uint32") /* ty=Tensor[(616), uint32] */;
    %1055 = cast(%var_5165, dtype="float32") /* ty=Tensor[(48, 2), float32] */;
    %1056 = reshape(%1053, newshape=[11, 14, 4]) /* ty=Tensor[(11, 14, 4), uint32] */;
    %1057 = reshape(%1054, newshape=[11, 14, 4]) /* ty=Tensor[(11, 14, 4), uint32] */;
    %1058 = reshape(%1055, newshape=[4, 24]) /* ty=Tensor[(4, 24), float32] */;
    %1059 = @func_317(%1056, %1057, %1058) /* ty=(Tensor[(11, 14, 4), uint32], Tensor[(16, 1, 6), float32], Tensor[(4, 24), float32]) */;
    %1060 = cast(%var_5165, dtype="float32") /* ty=Tensor[(48, 2), float32] */;
    %1061 = @func_4798() /* ty=Tensor[(7, 8, 14), float32] */;
    %1062 = %1059.2;
    %1063 = log10(%1060) /* ty=Tensor[(48, 2), float32] */;
    %1064 = @func_2010() /* ty=Tensor[(7, 8, 14), float32] */;
    (%1061, %1062, %var_5164, %1063, %1064)
  };
  %1065(%var_5178, %var_5179) /* ty=(Tensor[(7, 8, 14), float32], Tensor[(4, 24), float32], Tensor[(616), uint32], Tensor[(48, 2), float32], Tensor[(7, 8, 14), float32]) */
}

def @func_1253() -> Tensor[(7, 8, 14), float64] {
  @func_1251() /* ty=Tensor[(7, 8, 14), float64] */
}

def @func_7740() -> (Tensor[(7, 8, 14), float64],) {
  %1066 = @func_2137() /* ty=(Tensor[(7, 8, 14), float64], Tensor[(7, 8, 14), float64]) */;
  %1067 = %1066.0;
  (%1067,)
}

def @func_8023(%var_7964: Tensor[(3584), float32]) -> (Tensor[(7, 8, 14), float64], Tensor[(3584), float32], Tensor[(7, 8, 14), float64], Tensor[(14, 16, 16), float32], Tensor[(3584), float32]) {
  %1068 = cast(%var_7964, dtype="float32") /* ty=Tensor[(3584), float32] */;
  %1069 = reshape(%1068, newshape=[14, 16, 16]) /* ty=Tensor[(14, 16, 16), float32] */;
  %1070 = @func_1475(%1069) /* ty=(Tensor[(14, 16, 16), float32],) */;
  %1071 = %1070.0;
  %1072 = cast(%1071, dtype="float32") /* ty=Tensor[(14, 16, 16), float32] */;
  %1073 = shape_of(%var_7964, dtype="int32") /* ty=Tensor[(1), int32] */;
  %1074 = cast(%var_7964, dtype="float32") /* ty=Tensor[(3584), float32] */;
  %1075 = dyn.reshape(%1072, %1073, newshape=[]) /* ty=Tensor[(?), float32] */;
  %1076 = @func_6947() /* ty=(Tensor[(7, 8, 14), float64],) */;
  %1077 = cast(%1071, dtype="float64") /* ty=Tensor[(14, 16, 16), float64] */;
  %1078 = log(%1077) /* ty=Tensor[(14, 16, 16), float64] */;
  %1079 = cast(%1078, dtype="float32") /* ty=Tensor[(14, 16, 16), float32] */;
  %1080 = cast(%var_7964, dtype="float32") /* ty=Tensor[(3584), float32] */;
  %1081 = erf(%1080) /* ty=Tensor[(3584), float32] */;
  %1082 = cast(%1081, dtype="bool") /* ty=Tensor[(3584), bool] */;
  %1083 = shape_of(%var_7964, dtype="int32") /* ty=Tensor[(1), int32] */;
  %1084 = cast(%var_7964, dtype="bool") /* ty=Tensor[(3584), bool] */;
  %1085 = dyn.reshape(%1082, %1083, newshape=[]) /* ty=Tensor[(?), bool] */;
  %1086 = logical_and(%1084, %1085) /* ty=Tensor[(3584), bool] */;
  %1087 = cast(%1086, dtype="float32") /* ty=Tensor[(3584), float32] */;
  %1088 = shape_of(%1081, dtype="int32") /* ty=Tensor[(1), int32] */;
  %1089 = cast(%1081, dtype="float32") /* ty=Tensor[(3584), float32] */;
  %1090 = dyn.reshape(%1087, %1088, newshape=[]) /* ty=Tensor[(?), float32] */;
  %1091 = @func_5023() /* ty=Tensor[(7, 8, 14), float64] */;
  %1092 = divide(%1074, %1075) /* ty=Tensor[(3584), float32] */;
  %1093 = %1076.0;
  %1094 = sin(%1079) /* ty=Tensor[(14, 16, 16), float32] */;
  %1095 = floor_divide(%1089, %1090) /* ty=Tensor[(3584), float32] */;
  (%1091, %1092, %1093, %1094, %1095)
}

def @func_322(%var_319: Tensor[(11, 14, 4), uint32], %var_320: Tensor[(11, 14, 4), uint32], %var_321: Tensor[(4, 24), float32]) -> (Tensor[(11, 14, 4), uint32], Tensor[(16, 1, 6), float32], Tensor[(4, 24), float32]) {
  @func_317(%var_319, %var_320, %var_321) /* ty=(Tensor[(11, 14, 4), uint32], Tensor[(16, 1, 6), float32], Tensor[(4, 24), float32]) */
}

def @func_4287() -> (Tensor[(7, 8, 14), float64], Tensor[(7, 8, 14), float32], Tensor[(3584, 1), float32], Tensor[(7, 8, 14), float64]) {
  %1096 = @func_3455() /* ty=(Tensor[(7, 8, 14), float64],) */;
  %1097 = %1096.0;
  %1098 = cast(%1097, dtype="float32") /* ty=Tensor[(7, 8, 14), float32] */;
  %1099 = reshape(%1098, newshape=[7, 8, 14]) /* ty=Tensor[(7, 8, 14), float32] */;
  %1100 = @func_4009(%1099) /* ty=(Tensor[(14, 16, 16), float32], Tensor[(3584, 1), float32], Tensor[(7, 8, 14), bool], Tensor[(7, 8, 14), float64], Tensor[(7, 8, 14), float32], Tensor[(7, 8, 14), float32], Tensor[(7, 8, 14), float32]) */;
  %1101 = @func_3582() /* ty=(Tensor[(7, 8, 14), float64],) */;
  %1102 = @func_2416() /* ty=Tensor[(7, 8, 14), float32] */;
  %1103 = %1100.1;
  %1104 = %1101.0;
  (%1097, %1102, %1103, %1104)
}

def @func_4762() -> (Tensor[(7, 8, 14), float32], Tensor[(7, 8, 14), float32], Tensor[(7, 8, 14), uint32]) {
  @func_4760() /* ty=(Tensor[(7, 8, 14), float32], Tensor[(7, 8, 14), float32], Tensor[(7, 8, 14), uint32]) */
}

def @func_1331(%var_1317: Tensor[(420), uint64]) -> (Tensor[(7, 8, 14), float64], Tensor[(14, 2, 15), uint64], Tensor[(420), uint64]) {
  %1105 = cast(%var_1317, dtype="uint64") /* ty=Tensor[(420), uint64] */;
  %1106 = cast(%var_1317, dtype="uint64") /* ty=Tensor[(420), uint64] */;
  %1107 = reshape(%1105, newshape=[14, 2, 15]) /* ty=Tensor[(14, 2, 15), uint64] */;
  %1108 = reshape(%1106, newshape=[14, 2, 15]) /* ty=Tensor[(14, 2, 15), uint64] */;
  %1109 = @func_1291() /* ty=Tensor[(7, 8, 14), float64] */;
  %1110 = @func_1036(%1107, %1108) /* ty=Tensor[(14, 2, 15), uint64] */;
  (%1109, %1110, %var_1317)
}

def @func_1580(%var_1579: Tensor[(7, 8, 14), float64]) -> Tensor[(7, 8, 14), int8] {
  %1121 = fn (%var_1562: Tensor[(7, 8, 14), float64]) -> Tensor[(7, 8, 14), int8] {
    %1111 = @func_1251() /* ty=Tensor[(7, 8, 14), float64] */;
    %1112 = cast(%var_1562, dtype="float64") /* ty=Tensor[(7, 8, 14), float64] */;
    %1113 = shape_of(%1111, dtype="int32") /* ty=Tensor[(3), int32] */;
    %1114 = cast(%1111, dtype="float64") /* ty=Tensor[(7, 8, 14), float64] */;
    %1115 = dyn.reshape(%1112, %1113, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
    %1116 = mod(%1114, %1115) /* ty=Tensor[(7, 8, 14), float64] */;
    %1117 = cast(%1111, dtype="int8") /* ty=Tensor[(7, 8, 14), int8] */;
    %1118 = shape_of(%1116, dtype="int32") /* ty=Tensor[(3), int32] */;
    %1119 = cast(%1116, dtype="int8") /* ty=Tensor[(7, 8, 14), int8] */;
    %1120 = dyn.reshape(%1117, %1118, newshape=[]) /* ty=Tensor[(?, ?, ?), int8] */;
    minimum(%1119, %1120) /* ty=Tensor[(7, 8, 14), int8] */
  };
  %1121(%var_1579) /* ty=Tensor[(7, 8, 14), int8] */
}

def @func_3662(%var_3609: Tensor[(96), float32]) -> (Tensor[(7, 8, 14), float32], Tensor[(616), uint32], Tensor[(405), int32], Tensor[(616), uint32], Tensor[(96), float32], Tensor[(7, 8, 14), float32]) {
  %1122 = cast(meta[relay.Constant][47] /* ty=Tensor[(405), int32] */, dtype="int32") /* ty=Tensor[(405), int32] */;
  %1123 = cast(meta[relay.Constant][48] /* ty=Tensor[(616), uint32] */, dtype="uint32") /* ty=Tensor[(616), uint32] */;
  %1124 = cast(%var_3609, dtype="float32") /* ty=Tensor[(96), float32] */;
  %1125 = reshape(%1122, newshape=[9, 15, 3]) /* ty=Tensor[(9, 15, 3), int32] */;
  %1126 = reshape(%1123, newshape=[616]) /* ty=Tensor[(616), uint32] */;
  %1127 = reshape(%1124, newshape=[2, 48]) /* ty=Tensor[(2, 48), float32] */;
  %1128 = @func_1076(%1125, %1126, %1127) /* ty=(Tensor[(9, 15, 3), int32], Tensor[(616), uint32], Tensor[(2, 48), bool], Tensor[(2, 48), float32]) */;
  %1129 = @func_2060() /* ty=(Tensor[(7, 8, 14), float32],) */;
  %1130 = @func_2416() /* ty=Tensor[(7, 8, 14), float32] */;
  %1131 = %1128.1;
  %1132 = %1129.0;
  (%1130, %1131, meta[relay.Constant][47] /* ty=Tensor[(405), int32] */, meta[relay.Constant][48] /* ty=Tensor[(616), uint32] */, %var_3609, %1132)
}

def @func_7716() -> (Tensor[(7, 8, 14), float32], Tensor[(96), float32]) {
  %1136 = fn () -> (Tensor[(7, 8, 14), float32], Tensor[(96), float32]) {
    %1133 = @func_3413() /* ty=(Tensor[(7, 8, 14), float32], Tensor[(7, 8, 14), float64]) */;
    %1134 = %1133.0;
    %1135 = @func_5474() /* ty=Tensor[(96), float32] */;
    (%1134, %1135)
  };
  %1136() /* ty=(Tensor[(7, 8, 14), float32], Tensor[(96), float32]) */
}

def @func_9225() -> (Tensor[(7, 8, 14), float64], Tensor[(96), float32]) {
  %1137 = @func_1172() /* ty=Tensor[(7, 8, 14), float64] */;
  %1138 = @func_5744() /* ty=Tensor[(96), float32] */;
  (%1137, %1138)
}

def @func_9615() -> (Tensor[(7, 8, 14), float32],) {
  %1139 = @func_8231() /* ty=Tensor[(7, 8, 14), float32] */;
  (%1139,)
}

def @func_10398() -> Tensor[(7, 8, 14), float32] {
  %1141 = fn () -> Tensor[(7, 8, 14), float32] {
    %1140 = @func_3413() /* ty=(Tensor[(7, 8, 14), float32], Tensor[(7, 8, 14), float64]) */;
    %1140.0
  };
  %1141() /* ty=Tensor[(7, 8, 14), float32] */
}

def @func_3582() -> (Tensor[(7, 8, 14), float64],) {
  %1142 = @func_2487() /* ty=(Tensor[(7, 8, 14), float64],) */;
  %1143 = %1142.0;
  (%1143,)
}

def @func_4067() -> Tensor[(7, 8, 14), float32] {
  %1147 = fn () -> Tensor[(7, 8, 14), float32] {
    %1144 = @func_3546() /* ty=(Tensor[(7, 8, 14), float32], Tensor[(7, 8, 14), float64]) */;
    %1145 = %1144.0;
    %1146 = cast(%1145, dtype="float32") /* ty=Tensor[(7, 8, 14), float32] */;
    sqrt(%1146) /* ty=Tensor[(7, 8, 14), float32] */
  };
  %1147() /* ty=Tensor[(7, 8, 14), float32] */
}

def @func_6471(%var_6470: Tensor[(11, 4, 15), float64]) -> (Tensor[(11, 4, 15), float64], Tensor[(7, 8, 14), float32], Tensor[(7, 8, 14), float64], Tensor[(3, 8, 2), float64], Tensor[(48), float64], Tensor[(7, 8, 14), float32]) {
  %1161 = fn (%var_6390: Tensor[(11, 4, 15), float64]) -> (Tensor[(11, 4, 15), float64], Tensor[(7, 8, 14), float32], Tensor[(7, 8, 14), float64], Tensor[(3, 8, 2), float64], Tensor[(48), float64], Tensor[(7, 8, 14), float32]) {
    %1148 = cast(meta[relay.Constant][49] /* ty=Tensor[(11, 4, 15), float64] */, dtype="float64") /* ty=Tensor[(11, 4, 15), float64] */;
    %1149 = shape_of(%var_6390, dtype="int32") /* ty=Tensor[(3), int32] */;
    %1150 = cast(%var_6390, dtype="float64") /* ty=Tensor[(11, 4, 15), float64] */;
    %1151 = dyn.reshape(%1148, %1149, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
    %1152 = cast(meta[relay.Constant][50] /* ty=Tensor[(48), float64] */, dtype="float64") /* ty=Tensor[(48), float64] */;
    %1153 = reshape(%1152, newshape=[48]) /* ty=Tensor[(48), float64] */;
    %1154 = @func_4587(%1153) /* ty=(Tensor[(7, 8, 14), float32], Tensor[(3, 8, 2), float64], Tensor[(48), float64]) */;
    %1155 = @func_6034() /* ty=(Tensor[(7, 8, 14), float32],) */;
    %1156 = mod(%1150, %1151) /* ty=Tensor[(11, 4, 15), float64] */;
    %1157 = @func_3674() /* ty=Tensor[(7, 8, 14), float32] */;
    %1158 = @func_5832() /* ty=Tensor[(7, 8, 14), float64] */;
    %1159 = %1154.1;
    %1160 = %1155.0;
    (%1156, %1157, %1158, %1159, meta[relay.Constant][50] /* ty=Tensor[(48), float64] */, %1160)
  };
  %1161(%var_6470) /* ty=(Tensor[(11, 4, 15), float64], Tensor[(7, 8, 14), float32], Tensor[(7, 8, 14), float64], Tensor[(3, 8, 2), float64], Tensor[(48), float64], Tensor[(7, 8, 14), float32]) */
}

/* For debugging purposes the metadata section has been omitted.
 * If you would like to see the full metadata section you can set the 
 * option to `True` when invoking `astext`. 
 *//home/yujunzhe/Hirgen_generated/tvm0.8_test/HirGen128/build/output.py:3997: DeprecationWarning: legacy graph executor behavior of producing json / lib / params will be removed in the next release. Please see documents of tvm.contrib.graph_executor.GraphModule for the  new recommended usage.
  graph, lib, params = relay.build(mod, target='llvm')
/home/yujunzhe/tvm/python/tvm/contrib/graph_runtime.py:25: UserWarning: This function has been moved to tvm.contrib.graph_executor and will be removed in the next TVM release
  warnings.warn(

===================================
Traceback (most recent call last):
  File "/home/yujunzhe/Hirgen_generated/tvm0.8_test/HirGen128/build/output.py", line 4002, in <module>
    graph, lib, params = relay.build(mod, target='cuda')
  File "/home/yujunzhe/tvm/python/tvm/relay/build_module.py", line 369, in build
    executor_config, runtime_mod, params = bld_mod.build(
  File "/home/yujunzhe/tvm/python/tvm/relay/build_module.py", line 177, in build
    self._build(mod, target, target_host, executor, mod_name)
  File "/home/yujunzhe/tvm/python/tvm/_ffi/_ctypes/packed_func.py", line 237, in __call__
    raise get_last_ffi_error()
tvm._ffi.base.TVMError: Traceback (most recent call last):
  7: TVMFuncCall
  6: std::_Function_handler<void (tvm::runtime::TVMArgs, tvm::runtime::TVMRetValue*), tvm::relay::backend::RelayBuildModule::GetFunction(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, tvm::runtime::ObjectPtr<tvm::runtime::Object> const&)::{lambda(tvm::runtime::TVMArgs, tvm::runtime::TVMRetValue*)#3}>::_M_invoke(std::_Any_data const&, tvm::runtime::TVMArgs&&, tvm::runtime::TVMRetValue*&&)
  5: tvm::relay::backend::RelayBuildModule::BuildRelay(tvm::IRModule, std::unordered_map<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, tvm::runtime::NDArray, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, tvm::runtime::NDArray> > > const&, tvm::runtime::String)
  4: tvm::build(tvm::runtime::Map<tvm::Target, tvm::IRModule, void, void> const&, tvm::Target const&)
  3: tvm::codegen::Build(tvm::IRModule, tvm::Target)
  2: tvm::runtime::TypedPackedFunc<tvm::runtime::Module (tvm::IRModule, tvm::Target)>::AssignTypedLambda<tvm::runtime::Module (*)(tvm::IRModule, tvm::Target)>(tvm::runtime::Module (*)(tvm::IRModule, tvm::Target), std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >)::{lambda(tvm::runtime::TVMArgs const&, tvm::runtime::TVMRetValue*)#1}::operator()(tvm::runtime::TVMArgs const&, tvm::runtime::TVMRetValue*) const
  1: tvm::codegen::BuildCUDA(tvm::IRModule, tvm::Target)
  0: std::_Function_handler<void (tvm::runtime::TVMArgs, tvm::runtime::TVMRetValue*), TVMFuncCreateFromCFunc::{lambda(tvm::runtime::TVMArgs, tvm::runtime::TVMRetValue*)#2}>::_M_invoke(std::_Any_data const&, tvm::runtime::TVMArgs&&, tvm::runtime::TVMRetValue*&&) [clone .cold]
  File "/home/yujunzhe/tvm/python/tvm/_ffi/_ctypes/packed_func.py", line 81, in cfun
    rv = local_pyfunc(*pyargs)
  File "/home/yujunzhe/tvm/python/tvm/autotvm/measure/measure_methods.py", line 789, in tvm_callback_cuda_compile
    ptx = nvcc.compile_cuda(code, target=target, arch=AutotvmGlobalScope.current.cuda_target_arch)
  File "/home/yujunzhe/tvm/python/tvm/contrib/nvcc.py", line 108, in compile_cuda
    raise RuntimeError(msg)
RuntimeError: 
#ifdef _WIN32
  using uint = unsigned int;
  using uchar = unsigned char;
  using ushort = unsigned short;
  using int64_t = long long;
  using uint64_t = unsigned long long;
#else
  #define uint unsigned int
  #define uchar unsigned char
  #define ushort unsigned short
  #define int64_t long long
  #define uint64_t unsigned long long
#endif
extern "C" __global__ void __launch_bounds__(1024) tvmgen_default_fused_maximum_kernel0(ushort* __restrict__ T_maximum, ushort* __restrict__ placeholder, ushort* __restrict__ placeholder1) {
  if (((((int)blockIdx.x) * 1024) + ((int)threadIdx.x)) < 1430) {
    T_maximum[(((((int)blockIdx.x) * 1024) + ((int)threadIdx.x)))] = max(placeholder[(0)], placeholder1[(((((int)blockIdx.x) * 1024) + ((int)threadIdx.x)))]);
  }
}


Compilation error:
In file included from /usr/local/cuda/bin/../targets/x86_64-linux/include/cuda_runtime.h:82,
                 from <command-line>:
/usr/local/cuda/bin/../targets/x86_64-linux/include/crt/host_config.h:143:2: error: #error -- unsupported GNU version! gcc versions later than 12 are not supported! The nvcc flag '-allow-unsupported-compiler' can be used to override this version check; however, using an unsupported host compiler may cause compilation failure or incorrect run time execution. Use at your own risk.
  143 | #error -- unsupported GNU version! gcc versions later than 12 are not supported! The nvcc flag '-allow-unsupported-compiler' can be used to override this version check; however, using an unsupported host compiler may cause compilation failure or incorrect run time execution. Use at your own risk.
      |  ^~~~~


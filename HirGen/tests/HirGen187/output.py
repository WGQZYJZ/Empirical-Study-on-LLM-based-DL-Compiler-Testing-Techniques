import tvm
from tvm import relay
from tvm.ir.transform import Sequential
from tvm.contrib import graph_runtime
import numpy as np
mod = tvm.IRModule()
mutated_mod = tvm.IRModule()
var_304 = relay.var("var_304", dtype = "float32", shape = (3, 4, 12))#candidate|304|(3, 4, 12)|var|float32
uop_305 = relay.sqrt(var_304.astype('float32')) # shape=(3, 4, 12)
uop_324 = relay.cosh(uop_305.astype('float32')) # shape=(3, 4, 12)
bop_327 = relay.greater_equal(uop_324.astype('bool'), relay.reshape(uop_305.astype('bool'), relay.shape_of(uop_324))) # shape=(3, 4, 12)
output = relay.Tuple([bop_327,])
output2 = relay.Tuple([bop_327,])
func_356 = relay.Function([var_304,], output)
mod['func_356'] = func_356
mod = relay.transform.InferType()(mod)
mutated_mod['func_356'] = func_356
mutated_mod = relay.transform.InferType()(mutated_mod)
var_357 = relay.var("var_357", dtype = "float32", shape = (3, 4, 12))#candidate|357|(3, 4, 12)|var|float32
func_356_call = mutated_mod.get_global_var('func_356')
call_358 = func_356_call(var_357)
output = call_358
func_359 = relay.Function([var_357], output)
mutated_mod['func_359'] = func_359
mutated_mod = relay.transform.InferType()(mutated_mod)
const_437 = relay.const([[[0.754925,1.903666,-7.289626,0.483398,5.642679,3.577120,-6.840265,-1.429915],[-3.188505,2.985366,-3.696749,1.298889,-4.444140,0.688613,-1.385780,0.405270],[-8.991734,-2.150481,-4.695937,0.119574,1.571953,9.252021,-9.887715,-7.382976],[-7.874056,-2.612363,8.252254,0.803828,2.388165,8.819615,6.122383,8.175881],[8.004687,-5.109640,4.903216,6.508712,-5.850815,0.341823,-2.423262,9.314554],[8.769454,9.904327,2.956680,-1.765222,-2.540546,0.125745,9.568702,2.096994],[-6.024428,-2.389360,0.202420,-7.838625,-5.697637,-6.571038,8.333555,0.147258],[0.027236,8.834177,1.767259,4.704227,4.414643,9.897661,3.149237,1.789759],[-1.205242,-1.630830,2.089003,1.145794,-1.056110,3.349007,-5.508153,-3.342591],[8.827978,-0.539930,7.399209,-7.301341,-3.575192,4.757067,-4.402800,0.470590],[4.569120,-9.723649,-9.412505,-0.350763,9.039615,-1.500531,8.361592,9.820831],[2.673061,8.020856,9.876176,4.760308,-5.202949,-4.275248,-0.449544,1.290865],[2.026370,-4.858185,-9.304449,-9.215813,-8.901411,4.144671,4.469449,9.414275],[-1.635393,8.506763,-4.135757,-4.957202,-3.916886,-0.384809,-6.977030,-1.534275],[7.459342,-3.191128,2.847915,-2.148775,0.821931,4.605959,-2.967645,3.353697],[-8.310919,4.221413,-4.251579,1.337098,-7.062460,9.544993,3.796842,-9.187882]],[[-3.987722,-1.909231,1.685190,-4.022366,-2.261565,7.314944,-3.890595,-2.650683],[6.669585,5.465441,8.209709,-9.781600,-6.296459,-6.597495,6.922455,2.543835],[7.811054,-0.039890,-8.474474,-9.660374,-3.087355,5.034360,-0.529256,2.401109],[9.104368,6.944345,6.183124,-6.955249,3.139545,-3.006925,6.033324,1.578879],[8.869535,3.822553,-4.261958,3.385130,4.062974,4.167924,-4.135616,-5.451679],[9.492930,-4.070431,3.990412,3.698470,3.159083,-3.928032,6.838961,-1.236908],[4.114285,-7.565962,1.034148,-0.715653,-9.055625,-6.478525,7.666902,8.617481],[3.455987,5.396018,-8.797551,5.177236,-6.315294,4.950830,5.090305,2.790065],[8.435083,-6.290508,8.573636,-8.951308,-3.124454,-1.433621,0.433247,8.838215],[9.672922,2.990429,8.460645,0.095300,-8.840956,3.749437,-6.906599,-5.398426],[-8.576632,-4.716190,-0.165027,4.628606,-1.336568,-1.581342,5.209290,-1.901646],[-6.876006,8.172704,-8.609078,-4.354186,8.834561,2.388715,-2.052964,6.579486],[-2.463856,-5.194414,-1.589483,-1.001816,0.922404,-5.776249,-4.639812,3.628606],[0.724073,-4.873832,5.533916,-0.110859,-8.908754,4.527380,-6.162871,1.012084],[-2.442670,6.714512,5.065958,1.792362,-8.851903,-5.447048,-6.549010,6.250551],[-4.370293,-2.983687,-1.303495,-6.547139,-1.771456,2.168265,-9.347993,1.683402]],[[-7.415243,-5.666212,-4.177262,-5.568101,1.261065,9.862232,-9.907418,1.840679],[-5.383365,5.457203,1.695128,8.360961,2.857641,-9.315359,5.549657,-0.155474],[-8.917550,-7.200940,8.833063,7.661759,3.094512,-9.682314,8.980342,-6.096013],[7.082654,9.682568,1.529504,-7.675864,6.621747,-6.694718,7.114266,0.941761],[2.229116,-4.365108,-1.963031,-5.264966,6.574981,-0.457989,-6.560862,-9.013989],[-7.086481,-8.265923,1.265990,-7.655504,9.069923,6.057718,6.083794,-7.047927],[-7.382661,2.732191,-5.254263,-7.823057,0.457600,4.337446,7.159314,1.235392],[7.949495,6.471100,4.984353,7.274530,0.621540,7.286336,9.807746,7.303356],[-7.163090,0.138758,-5.613582,-0.062574,-2.778995,-0.489760,-9.647027,7.966631],[3.739489,-3.463831,-2.269249,-7.902357,-7.458115,-5.885382,6.174022,-2.383705],[1.918648,9.236823,7.211808,2.333425,2.107106,-6.338110,5.241736,9.241137],[-3.463834,0.584319,9.423181,-2.952477,4.737162,-3.754675,2.466593,5.696929],[-4.539405,-4.958044,-9.186660,8.396374,0.533166,6.698948,3.697816,-9.590938],[-3.356001,-0.915653,5.658662,-0.792643,0.489160,9.739838,3.228246,1.575192],[8.730397,7.960170,6.470006,4.548460,-9.095988,-4.983561,8.369311,-3.816803],[-0.456435,-9.265559,7.132683,2.897102,8.101052,8.668491,3.522787,-8.731532]],[[2.030571,-4.458232,-6.327260,0.473687,7.247310,-3.716486,-6.202884,-7.026868],[7.931946,-8.209085,3.119646,8.380898,5.202598,0.875889,-2.535293,4.612565],[-1.959968,-2.412871,-7.252286,3.768854,1.864784,-5.369579,-6.212393,6.186984],[4.445444,8.094348,6.773217,1.446943,3.767169,1.037941,-7.787185,7.588911],[-1.738093,0.314656,-5.940854,-7.858760,-4.273915,4.482590,-4.431247,-9.286784],[6.564705,-3.696434,7.311061,5.433608,1.306434,-4.725910,9.251111,-2.959098],[1.992922,-4.600929,-0.109631,-1.815170,-6.076592,-3.411445,-0.838631,-1.158202],[-9.969452,-9.103935,4.148259,-8.249939,-0.769727,-9.278884,2.074913,2.891882],[4.222109,-9.989291,7.834279,-8.803003,-7.793547,-7.650951,-8.566718,-2.552782],[5.520362,-9.792141,-8.010930,5.551168,6.108260,4.447197,-3.435477,5.444980],[-4.580644,-2.517009,-5.424938,6.734880,8.495851,5.232895,2.553409,-1.320738],[-8.296716,7.636572,6.273370,6.127324,-1.523397,5.232555,-8.259143,-6.293181],[-7.157624,-5.736495,-1.681604,-9.488085,7.398846,9.033085,5.523446,5.039367],[-6.795998,4.830885,-7.502377,-7.912737,0.576459,9.926676,-4.485125,-9.697742],[-2.493266,-6.625209,1.457398,-3.970946,-9.354038,8.354408,6.280415,-8.580372],[1.932985,-4.759002,-0.798835,-1.758523,-2.966031,7.808690,-7.547925,-0.705303]],[[-6.666755,0.624028,5.596119,-3.043987,1.258593,3.547013,0.846406,-4.539452],[3.498277,-3.304655,8.883246,2.097907,-5.996106,-7.803278,6.788657,-4.448231],[6.944319,3.761049,0.648839,2.028744,9.500358,-1.594627,-4.171070,9.299858],[1.417126,4.990314,-0.152426,-9.411206,-4.298706,3.920515,2.476569,4.309785],[4.435712,2.979767,8.320019,5.804579,-5.259762,5.588644,-4.413510,-9.178239],[-4.049823,-0.548842,0.581835,5.033731,-3.271127,4.606682,-2.636770,-5.071718],[1.162902,9.372143,-4.059895,8.723184,-8.609174,8.230290,8.479115,-0.066346],[-4.105665,-2.709725,1.651379,3.974834,2.251937,-2.026273,6.105792,2.747733],[-5.717029,5.023595,-6.348747,4.137841,9.876523,8.382232,1.204949,-1.325179],[1.967616,2.445288,4.946955,-5.614080,2.402557,-7.092920,0.659475,8.821305],[-5.408684,3.700929,1.618505,3.715056,3.066372,8.853331,-6.433497,-6.565225],[-6.822951,7.229779,-2.769411,-1.174255,-4.136942,1.912414,7.564962,5.363771],[5.166379,-4.482466,-6.957630,-7.874364,-7.070132,-0.411624,4.162462,-2.235426],[-4.871890,8.341387,7.760702,-0.007232,1.999898,-9.790861,-0.212794,-3.445521],[-1.112224,-6.796181,8.490370,-2.463219,-2.718533,-9.245284,-5.210476,8.951108],[-6.990913,2.326925,5.768719,5.722127,2.344498,9.015395,-2.443030,-3.589137]],[[-3.252545,3.543403,2.050832,3.718480,-9.624878,4.183943,4.278714,7.216719],[-8.857438,0.051696,-1.748918,-5.838466,-9.993623,7.287206,6.709317,6.760659],[-7.676560,9.297787,2.359618,3.271368,8.368071,-3.875607,2.883866,-5.265787],[-4.674506,0.149326,4.760008,4.975469,9.656954,-0.785506,-7.225292,-8.468423],[-2.656603,-7.212398,4.581533,7.407961,-0.444515,0.582346,9.642720,5.358998],[7.293132,-4.319929,-4.699149,2.112378,-0.368478,6.376091,3.562217,0.330176],[4.005540,7.656643,2.365244,5.447719,-2.208982,7.777736,2.350248,-3.059534],[-8.465389,9.012764,-3.753512,-6.069846,-9.263325,6.237590,-4.415030,3.223770],[-8.484881,-2.892130,4.959488,6.781795,-6.197606,5.994656,-1.575491,-7.511070],[-4.446903,6.638815,-1.682300,5.622423,4.845387,1.475395,3.101182,-8.734840],[0.475202,6.521902,-5.731052,3.166071,6.875766,-7.744745,-6.143018,-2.172938],[-2.701000,3.153467,-6.753350,7.427679,8.759159,1.495350,0.315360,-7.714925],[-7.522439,3.210531,-3.000702,0.266918,2.096571,6.550611,-4.067796,-6.538764],[-4.320106,-2.115267,-1.111302,-8.074546,-0.979431,-2.339338,9.601936,-7.216118],[-5.549765,5.334067,-2.369610,4.127844,-5.826679,9.387130,-0.402345,-4.822280],[6.770752,3.374529,-4.197748,6.092777,6.749757,7.371997,-2.764421,-8.851312]],[[4.302815,-9.663651,-4.565968,-6.502647,-5.407696,-7.386887,2.845288,7.322387],[7.749008,9.121122,1.148225,-6.141086,-2.450473,0.028512,2.539904,-8.933018],[7.895371,6.310340,-2.235959,5.852078,3.411029,4.719090,-4.275508,-2.495100],[-5.426217,5.516973,-4.323030,-9.672189,0.130357,-4.106457,-5.199419,-3.934269],[8.677901,4.027586,1.612304,-4.738714,-8.808271,2.620725,8.401954,-4.283126],[7.603040,2.979989,1.050578,9.895289,7.408494,-3.454303,-8.492953,-9.687454],[-8.409164,2.350862,-0.985586,-9.340099,4.581168,5.126942,8.254041,-9.171513],[1.416276,3.066606,-2.111713,-5.917954,-1.103939,2.797450,9.657519,-6.936928],[5.750687,5.155883,8.202129,9.369561,5.321374,4.823405,-3.916978,-2.587781],[2.139350,1.908906,-3.031596,-9.290831,-1.486744,2.302343,2.703313,1.694608],[5.891487,-2.396729,-1.971801,4.511106,-7.753760,2.004458,3.147521,-6.547153],[0.327790,-9.634638,7.927657,-3.631939,-5.999261,2.860603,8.200201,-7.862417],[2.844138,4.329996,-8.432172,-9.170282,-6.183137,-2.693130,3.351920,-7.180739],[-1.338760,-4.318896,0.267414,1.437956,-9.249938,3.180779,6.868390,-8.177449],[-5.876761,-2.465561,-9.117873,3.306145,-1.909358,-4.136384,4.451449,-0.426618],[9.012459,6.565320,9.400814,-6.814062,-9.716283,5.061738,-7.437199,-3.662957]],[[-4.287876,0.047966,4.270884,3.654334,-0.437047,9.613095,-1.532681,4.203654],[-9.601203,4.062504,0.686165,2.293386,7.353598,3.001023,-8.023796,6.653864],[2.768639,-1.217563,7.990060,-4.791193,1.089621,3.923309,-4.039746,-4.514211],[-3.495762,-6.349306,5.406659,6.621930,3.405126,-1.960172,-7.111514,-6.484744],[3.935546,0.057583,-3.608869,-3.740278,7.792521,2.647260,3.736204,4.379754],[2.767694,0.793499,3.048956,-1.187961,-5.392422,7.690564,-5.883711,-6.661338],[-5.460695,-4.907133,6.622053,-9.962319,2.355875,-7.991499,9.828975,-5.133576],[-5.782374,-2.952152,-8.774625,-5.808502,8.798899,7.928824,8.487606,6.171701],[7.813844,-3.953611,7.760724,-7.114265,-8.416853,1.899443,-7.641947,7.696400],[1.949128,-3.304631,-5.798553,-5.033429,-6.704234,4.537069,0.007571,4.505428],[-6.661638,-6.806558,6.465423,-4.199092,4.036193,5.173483,1.715756,-7.083086],[-9.799574,-7.417490,8.322395,4.352688,5.798245,2.963145,6.684056,9.281099],[-2.192016,6.945396,-9.717757,-0.084514,2.651979,1.925140,-7.649737,-8.197537],[3.829229,4.332322,1.853931,-6.435762,4.190259,-8.671684,1.727794,-8.410448],[5.806560,4.209031,-1.001133,5.659865,0.404331,-8.497367,5.033794,7.182128],[-8.173950,4.510248,4.624902,-2.591870,-7.981660,3.189772,-7.764201,5.622461]]], dtype = "float64")#candidate|437|(8, 16, 8)|const|float64
uop_438 = relay.acos(const_437.astype('float64')) # shape=(8, 16, 8)
uop_440 = relay.cosh(uop_438.astype('float32')) # shape=(8, 16, 8)
func_356_call = mod.get_global_var('func_356')
func_359_call = mutated_mod.get_global_var('func_359')
const_456 = relay.const([0.602072,-4.200941,8.566118,-5.107893,-2.410762,-3.689725,-9.740265,9.558645,0.941118,-1.027212,2.492565,-5.157032,9.208933,4.111784,-0.218180,7.616771,-5.562752,-0.026754,-9.358406,-5.944337,4.119295,-0.250217,-4.465892,-1.281280,-6.978399,-0.019242,-0.523387,6.869243,-9.010666,-2.614548,-4.952525,7.914357,5.040561,5.420817,-5.627756,-9.899565,-2.336639,-1.947673,4.196235,-9.974560,1.645034,3.801683,9.310218,7.816451,7.468261,-6.557770,-3.580901,8.541742,8.562319,4.784379,-3.114414,0.487781,6.642975,-3.961703,5.377300,-3.492431,2.653171,-8.102484,-8.390708,3.435140,0.733601,4.946226,1.416728,-0.480653,0.351559,-9.179735,5.141257,-9.110825,5.004958,4.692018,6.412434,-2.144814,7.025512,9.511452,-4.925183,-7.787860,-2.754969,7.002360,-6.938016,2.666261,-7.933526,7.892361,3.724273,-8.352509,-2.733363,1.598136,2.666044,3.048278,-8.610325,-4.404278,8.349754,2.910764,-7.618820,6.113509,-9.062348,3.922171,-3.723303,-6.122338,-1.398694,8.934906,7.190571,8.445267,-6.629359,9.574112,6.528477,3.869511,-1.480366,8.709362,-0.316676,1.600306,7.593471,1.167380,-3.448184,9.877621,-6.834424,5.689393,-8.869841,-1.160473,8.783893,1.897342,7.457676,2.658379,9.895369,-6.093167,2.323261,-4.353203,-2.199245,3.958728,-4.085053,-9.013951,3.428108,-8.937933,-3.787406,-9.274341,-3.547091,-4.818628,-9.342974,-2.740440,-4.069742,4.927313,-5.160228,-8.600328,1.502615,0.165583], dtype = "float32")#candidate|456|(144,)|const|float32
call_455 = relay.TupleGetItem(func_356_call(relay.reshape(const_456.astype('float32'), [3, 4, 12])), 0)
call_457 = relay.TupleGetItem(func_359_call(relay.reshape(const_456.astype('float32'), [3, 4, 12])), 0)
bop_460 = relay.equal(uop_440.astype('bool'), relay.reshape(const_437.astype('bool'), relay.shape_of(uop_440))) # shape=(8, 16, 8)
func_356_call = mod.get_global_var('func_356')
func_359_call = mutated_mod.get_global_var('func_359')
call_463 = relay.TupleGetItem(func_356_call(relay.reshape(call_455.astype('float32'), [3, 4, 12])), 0)
call_464 = relay.TupleGetItem(func_359_call(relay.reshape(call_455.astype('float32'), [3, 4, 12])), 0)
bop_468 = relay.minimum(uop_440.astype('int32'), relay.reshape(bop_460.astype('int32'), relay.shape_of(uop_440))) # shape=(8, 16, 8)
output = relay.Tuple([call_455,const_456,call_463,bop_468,])
output2 = relay.Tuple([call_457,const_456,call_464,bop_468,])
func_475 = relay.Function([], output)
mod['func_475'] = func_475
mod = relay.transform.InferType()(mod)
mutated_mod['func_475'] = func_475
mutated_mod = relay.transform.InferType()(mutated_mod)
func_475_call = mutated_mod.get_global_var('func_475')
call_476 = func_475_call()
output = call_476
func_477 = relay.Function([], output)
mutated_mod['func_477'] = func_477
mutated_mod = relay.transform.InferType()(mutated_mod)
func_475_call = mod.get_global_var('func_475')
func_477_call = mutated_mod.get_global_var('func_477')
call_527 = relay.TupleGetItem(func_475_call(), 0)
call_528 = relay.TupleGetItem(func_477_call(), 0)
func_475_call = mod.get_global_var('func_475')
func_477_call = mutated_mod.get_global_var('func_477')
call_529 = relay.TupleGetItem(func_475_call(), 2)
call_530 = relay.TupleGetItem(func_477_call(), 2)
func_356_call = mod.get_global_var('func_356')
func_359_call = mutated_mod.get_global_var('func_359')
call_532 = relay.TupleGetItem(func_356_call(relay.reshape(call_529.astype('float32'), [3, 4, 12])), 0)
call_533 = relay.TupleGetItem(func_359_call(relay.reshape(call_529.astype('float32'), [3, 4, 12])), 0)
func_475_call = mod.get_global_var('func_475')
func_477_call = mutated_mod.get_global_var('func_477')
call_542 = relay.TupleGetItem(func_475_call(), 1)
call_543 = relay.TupleGetItem(func_477_call(), 1)
output = relay.Tuple([call_527,call_529,call_532,call_542,])
output2 = relay.Tuple([call_528,call_530,call_533,call_543,])
func_546 = relay.Function([], output)
mod['func_546'] = func_546
mod = relay.transform.InferType()(mod)
output = func_546()
func_547 = relay.Function([], output)
mutated_mod['func_547'] = func_547
mutated_mod = relay.transform.InferType()(mutated_mod)
var_553 = relay.var("var_553", dtype = "float64", shape = (5, 11, 5))#candidate|553|(5, 11, 5)|var|float64
uop_554 = relay.cosh(var_553.astype('float64')) # shape=(5, 11, 5)
func_546_call = mod.get_global_var('func_546')
func_547_call = mutated_mod.get_global_var('func_547')
call_562 = relay.TupleGetItem(func_546_call(), 1)
call_563 = relay.TupleGetItem(func_547_call(), 1)
func_546_call = mod.get_global_var('func_546')
func_547_call = mutated_mod.get_global_var('func_547')
call_566 = relay.TupleGetItem(func_546_call(), 0)
call_567 = relay.TupleGetItem(func_547_call(), 0)
func_546_call = mod.get_global_var('func_546')
func_547_call = mutated_mod.get_global_var('func_547')
call_578 = relay.TupleGetItem(func_546_call(), 0)
call_579 = relay.TupleGetItem(func_547_call(), 0)
func_475_call = mod.get_global_var('func_475')
func_477_call = mutated_mod.get_global_var('func_477')
call_584 = relay.TupleGetItem(func_475_call(), 3)
call_585 = relay.TupleGetItem(func_477_call(), 3)
bop_591 = relay.less(uop_554.astype('bool'), relay.reshape(var_553.astype('bool'), relay.shape_of(uop_554))) # shape=(5, 11, 5)
func_475_call = mod.get_global_var('func_475')
func_477_call = mutated_mod.get_global_var('func_477')
call_594 = relay.TupleGetItem(func_475_call(), 1)
call_595 = relay.TupleGetItem(func_477_call(), 1)
func_356_call = mod.get_global_var('func_356')
func_359_call = mutated_mod.get_global_var('func_359')
call_607 = relay.TupleGetItem(func_356_call(relay.reshape(call_594.astype('float32'), [3, 4, 12])), 0)
call_608 = relay.TupleGetItem(func_359_call(relay.reshape(call_594.astype('float32'), [3, 4, 12])), 0)
output = relay.Tuple([call_562,call_566,call_578,call_584,bop_591,call_594,call_607,])
output2 = relay.Tuple([call_563,call_567,call_579,call_585,bop_591,call_595,call_608,])
func_613 = relay.Function([var_553,], output)
mod['func_613'] = func_613
mod = relay.transform.InferType()(mod)
var_614 = relay.var("var_614", dtype = "float64", shape = (5, 11, 5))#candidate|614|(5, 11, 5)|var|float64
output = func_613(var_614)
func_615 = relay.Function([var_614], output)
mutated_mod['func_615'] = func_615
mutated_mod = relay.transform.InferType()(mutated_mod)
func_475_call = mod.get_global_var('func_475')
func_477_call = mutated_mod.get_global_var('func_477')
call_687 = relay.TupleGetItem(func_475_call(), 0)
call_688 = relay.TupleGetItem(func_477_call(), 0)
func_613_call = mod.get_global_var('func_613')
func_615_call = mutated_mod.get_global_var('func_615')
var_690 = relay.var("var_690", dtype = "float64", shape = (275,))#candidate|690|(275,)|var|float64
call_689 = relay.TupleGetItem(func_613_call(relay.reshape(var_690.astype('float64'), [5, 11, 5])), 3)
call_691 = relay.TupleGetItem(func_615_call(relay.reshape(var_690.astype('float64'), [5, 11, 5])), 3)
uop_705 = relay.acos(var_690.astype('float32')) # shape=(275,)
output = relay.Tuple([call_687,call_689,uop_705,])
output2 = relay.Tuple([call_688,call_691,uop_705,])
func_712 = relay.Function([var_690,], output)
mod['func_712'] = func_712
mod = relay.transform.InferType()(mod)
mutated_mod['func_712'] = func_712
mutated_mod = relay.transform.InferType()(mutated_mod)
var_713 = relay.var("var_713", dtype = "float64", shape = (275,))#candidate|713|(275,)|var|float64
func_712_call = mutated_mod.get_global_var('func_712')
call_714 = func_712_call(var_713)
output = call_714
func_715 = relay.Function([var_713], output)
mutated_mod['func_715'] = func_715
mutated_mod = relay.transform.InferType()(mutated_mod)
func_475_call = mod.get_global_var('func_475')
func_477_call = mutated_mod.get_global_var('func_477')
call_717 = relay.TupleGetItem(func_475_call(), 1)
call_718 = relay.TupleGetItem(func_477_call(), 1)
func_712_call = mod.get_global_var('func_712')
func_715_call = mutated_mod.get_global_var('func_715')
var_723 = relay.var("var_723", dtype = "float64", shape = (55, 5))#candidate|723|(55, 5)|var|float64
call_722 = relay.TupleGetItem(func_712_call(relay.reshape(var_723.astype('float64'), [275,])), 1)
call_724 = relay.TupleGetItem(func_715_call(relay.reshape(var_723.astype('float64'), [275,])), 1)
output = relay.Tuple([call_717,call_722,var_723,])
output2 = relay.Tuple([call_718,call_724,var_723,])
func_733 = relay.Function([var_723,], output)
mod['func_733'] = func_733
mod = relay.transform.InferType()(mod)
mutated_mod['func_733'] = func_733
mutated_mod = relay.transform.InferType()(mutated_mod)
var_734 = relay.var("var_734", dtype = "float64", shape = (55, 5))#candidate|734|(55, 5)|var|float64
func_733_call = mutated_mod.get_global_var('func_733')
call_735 = func_733_call(var_734)
output = call_735
func_736 = relay.Function([var_734], output)
mutated_mod['func_736'] = func_736
mutated_mod = relay.transform.InferType()(mutated_mod)
const_748 = relay.const(6, dtype = "int8")#candidate|748|()|const|int8
var_749 = relay.var("var_749", dtype = "int8", shape = (15, 9, 11))#candidate|749|(15, 9, 11)|var|int8
bop_750 = relay.minimum(const_748.astype('int8'), var_749.astype('int8')) # shape=(15, 9, 11)
func_733_call = mod.get_global_var('func_733')
func_736_call = mutated_mod.get_global_var('func_736')
const_761 = relay.const([[2.599194,2.688356,5.780878,-4.338192,-1.806088,-3.487606,9.441345,1.829929,-8.933682,-2.971192,0.562294,6.385630,4.471292,-8.306066,-4.612029,6.020633,-6.995684,-8.497643,-8.352812,-4.623267,-2.809655,6.802958,5.410201,6.252284,-0.307105],[6.788710,-2.372714,-4.777999,5.418878,1.112186,9.749137,-2.275078,-5.236953,0.428763,2.835659,1.697989,7.137056,-2.322131,3.297545,-6.416478,7.775992,-1.772157,-5.144095,8.594847,9.027108,-2.297151,-0.569128,-2.664950,9.579720,1.246234],[9.548565,9.057360,6.126377,-1.684433,1.606843,6.258319,-3.236518,-4.058956,-8.594641,-9.195068,7.496611,-7.043856,0.310074,-8.155776,4.007088,-0.971805,-9.903720,4.360303,5.515595,3.232709,-6.831612,4.080801,-4.658702,-4.287873,-8.243011],[-3.834277,1.600758,9.611295,-1.503544,2.488825,7.875158,-4.668389,1.150238,-2.422796,4.425497,1.095253,-2.123462,-6.971643,1.765416,6.653091,-8.954668,6.235865,-5.147470,-6.628418,-6.853063,-8.455674,5.522827,5.559499,-5.931565,2.326945],[7.724692,-9.055687,-4.676510,-6.733153,0.930629,1.745899,-9.275859,3.165767,3.942239,6.224460,7.635227,4.935625,-2.023167,-3.126695,-9.789611,1.770416,-5.027402,0.073181,-8.973978,-5.659886,1.529294,9.493463,-4.385301,7.369381,3.614017],[6.635689,-1.273445,7.887462,-8.037628,-3.531350,-9.477795,-2.275285,0.105546,6.415612,-7.777661,5.320440,4.053450,3.515551,7.763126,9.494469,4.828862,0.598727,3.575090,-7.290245,-7.149822,9.463397,-8.090721,-5.964747,2.790899,-8.504217],[8.818271,-2.740746,-4.434391,8.611727,-8.173478,-8.556989,3.457838,5.366005,7.944597,-9.494149,-6.121948,-9.577265,-7.616417,-9.124562,-3.947783,7.733917,-3.746893,-5.732126,2.770599,-6.467954,-8.643629,2.684039,1.737095,-3.339080,-6.058154],[-2.576240,-1.101356,-8.726063,5.016947,6.311085,3.424256,-9.294170,-6.328781,-4.084634,-9.533612,2.683053,-0.837806,-2.254083,9.305375,-6.492334,-7.138872,7.903194,4.684637,7.419570,-4.243400,-5.302801,2.014458,-9.285914,8.047178,2.469124],[1.144215,-9.878533,5.085072,2.288999,7.785780,-1.200697,2.611443,6.912982,5.281575,6.365203,9.575441,0.694361,-0.493860,-4.914034,7.616231,1.237914,-9.731713,-9.172991,1.677168,-8.698702,9.967116,-3.845523,-8.986031,8.425037,-9.611598],[-1.395046,-6.209914,-5.470257,7.800700,-3.799774,-6.231546,2.959383,7.565249,-2.494077,-4.090728,2.095972,4.601823,-5.028315,8.055721,-8.155109,-7.788037,6.931041,-0.346801,-8.311969,-2.953339,-3.952939,-9.590613,0.802668,0.979221,-9.354914],[5.037157,7.986359,4.387770,-0.402302,2.736250,-9.430985,5.327043,-8.737182,8.282547,5.810336,6.880249,-5.260111,-7.269256,9.628411,6.022701,2.085578,-4.821142,-7.876172,-4.942967,-1.749854,5.771295,9.288192,5.902028,-2.455399,-8.923330]], dtype = "float64")#candidate|761|(11, 25)|const|float64
call_760 = relay.TupleGetItem(func_733_call(relay.reshape(const_761.astype('float64'), [55, 5])), 1)
call_762 = relay.TupleGetItem(func_736_call(relay.reshape(const_761.astype('float64'), [55, 5])), 1)
output = relay.Tuple([bop_750,call_760,const_761,])
output2 = relay.Tuple([bop_750,call_762,const_761,])
func_767 = relay.Function([var_749,], output)
mod['func_767'] = func_767
mod = relay.transform.InferType()(mod)
mutated_mod['func_767'] = func_767
mutated_mod = relay.transform.InferType()(mutated_mod)
var_768 = relay.var("var_768", dtype = "int8", shape = (15, 9, 11))#candidate|768|(15, 9, 11)|var|int8
func_767_call = mutated_mod.get_global_var('func_767')
call_769 = func_767_call(var_768)
output = call_769
func_770 = relay.Function([var_768], output)
mutated_mod['func_770'] = func_770
mutated_mod = relay.transform.InferType()(mutated_mod)
func_546_call = mod.get_global_var('func_546')
func_547_call = mutated_mod.get_global_var('func_547')
call_811 = relay.TupleGetItem(func_546_call(), 1)
call_812 = relay.TupleGetItem(func_547_call(), 1)
func_733_call = mod.get_global_var('func_733')
func_736_call = mutated_mod.get_global_var('func_736')
var_824 = relay.var("var_824", dtype = "float64", shape = (275,))#candidate|824|(275,)|var|float64
call_823 = relay.TupleGetItem(func_733_call(relay.reshape(var_824.astype('float64'), [55, 5])), 1)
call_825 = relay.TupleGetItem(func_736_call(relay.reshape(var_824.astype('float64'), [55, 5])), 1)
output = relay.Tuple([call_811,call_823,var_824,])
output2 = relay.Tuple([call_812,call_825,var_824,])
func_841 = relay.Function([var_824,], output)
mod['func_841'] = func_841
mod = relay.transform.InferType()(mod)
var_842 = relay.var("var_842", dtype = "float64", shape = (275,))#candidate|842|(275,)|var|float64
output = func_841(var_842)
func_843 = relay.Function([var_842], output)
mutated_mod['func_843'] = func_843
mutated_mod = relay.transform.InferType()(mutated_mod)
func_546_call = mod.get_global_var('func_546')
func_547_call = mutated_mod.get_global_var('func_547')
call_854 = relay.TupleGetItem(func_546_call(), 0)
call_855 = relay.TupleGetItem(func_547_call(), 0)
output = call_854
output2 = call_855
func_859 = relay.Function([], output)
mod['func_859'] = func_859
mod = relay.transform.InferType()(mod)
mutated_mod['func_859'] = func_859
mutated_mod = relay.transform.InferType()(mutated_mod)
func_859_call = mutated_mod.get_global_var('func_859')
call_860 = func_859_call()
output = call_860
func_861 = relay.Function([], output)
mutated_mod['func_861'] = func_861
mutated_mod = relay.transform.InferType()(mutated_mod)
func_546_call = mod.get_global_var('func_546')
func_547_call = mutated_mod.get_global_var('func_547')
call_864 = relay.TupleGetItem(func_546_call(), 2)
call_865 = relay.TupleGetItem(func_547_call(), 2)
func_475_call = mod.get_global_var('func_475')
func_477_call = mutated_mod.get_global_var('func_477')
call_884 = relay.TupleGetItem(func_475_call(), 2)
call_885 = relay.TupleGetItem(func_477_call(), 2)
func_712_call = mod.get_global_var('func_712')
func_715_call = mutated_mod.get_global_var('func_715')
const_887 = relay.const([-2.537124,-8.482128,6.113455,4.405980,9.382095,1.773076,-9.870739,-2.271775,-4.346269,-9.023593,7.824814,3.083726,-0.817541,5.075324,4.913803,-8.539598,8.485021,7.264047,5.246472,1.905380,8.889578,9.852094,1.341976,-6.568503,-8.190376,-2.336220,6.678687,-2.268304,-7.055957,1.707894,-7.488822,2.995976,-4.790882,9.831349,2.428296,-5.043667,7.387238,0.431313,1.869568,-6.625861,-4.522928,-3.572671,-0.577571,2.368659,-2.390433,5.854811,4.344488,-8.168600,4.409444,0.703043,-1.465317,7.781467,0.097555,-2.027247,-8.035791,2.258585,9.737369,-6.833172,-0.751696,-4.759852,-5.469840,-2.079199,-0.867508,-8.978139,-8.130030,3.534163,8.756399,-2.144097,9.489382,-9.006521,-3.746610,-8.727811,4.086384,3.297225,1.951413,-0.772459,9.783576,4.002558,2.735427,7.785052,2.304722,-3.943813,2.074495,-8.916008,2.938468,-2.701845,-6.161049,-5.671936,3.857265,6.922577,0.051979,8.007496,-9.808968,8.097036,-4.636126,5.160288,5.015629,-7.984661,6.846587,3.248882,6.889299,-6.026243,-2.722021,8.734673,-2.331782,-9.501957,-8.831840,0.594117,-2.435258,-0.177811,1.145313,3.756090,1.267774,-1.438223,-5.718124,-5.172987,8.592757,7.294211,1.069517,-7.961004,2.551310,1.922162,-8.855158,0.393707,7.960142,6.708329,7.856233,7.173181,-0.951078,8.714841,5.728942,0.996790,-6.573983,6.317513,0.807144,-3.583959,-4.434888,9.450525,-9.374612,-0.799727,-6.932994,-6.365453,-0.523650,4.839690,7.823032,7.932959,-3.258093,-4.290013,4.759383,-9.480273,6.365822,5.102324,-2.001294,-9.318928,2.011955,5.095916,-0.455741,-6.408633,1.557735,8.651604,-8.712924,-8.854954,6.709657,-1.124915,-4.678283,-5.042556,5.281761,0.204419,-8.360741,-0.980463,-6.864760,4.574056,4.898099,7.295669,9.451033,-2.533500,3.735213,-9.917596,5.972333,3.101045,0.295537,9.382255,-8.634515,2.091103,-9.858239,-0.889975,6.482411,6.427158,6.516970,2.917190,3.692586,8.549583,-6.790570,-6.331271,-8.309162,7.864170,7.756970,-3.835113,-3.241263,-8.995033,1.701442,4.957989,-8.903721,9.603127,-7.347570,6.359856,-5.373738,-6.464890,-9.478105,-1.773491,0.722870,2.688783,-6.255685,-1.673907,8.991655,0.359961,4.557019,4.557375,9.674113,-2.087949,1.071894,-4.273063,-8.209530,8.545054,8.215382,0.883738,3.691674,4.559060,-4.452535,-9.287330,-0.861148,-7.134090,8.006302,9.062443,-8.033850,-2.739948,3.521330,-6.808609,1.329364,6.560602,6.331163,0.431302,4.817734,2.107957,-6.769334,2.160734,5.395671,1.304914,2.748755,-1.041624,-3.125015,8.209954,7.702833,1.773820,9.104510,9.555610,7.271299,-7.590123,8.413501,-1.399013,6.929551,-6.436131,3.931059,4.411463,-0.169753,-9.084339,-1.459722,6.328784,4.359872,5.188069,6.434542,-9.327609,1.304639,2.333412,-7.493058], dtype = "float64")#candidate|887|(275,)|const|float64
call_886 = relay.TupleGetItem(func_712_call(relay.reshape(const_887.astype('float64'), [275,])), 2)
call_888 = relay.TupleGetItem(func_715_call(relay.reshape(const_887.astype('float64'), [275,])), 2)
output = relay.Tuple([call_864,call_884,call_886,const_887,])
output2 = relay.Tuple([call_865,call_885,call_888,const_887,])
func_903 = relay.Function([], output)
mod['func_903'] = func_903
mod = relay.transform.InferType()(mod)
output = func_903()
func_904 = relay.Function([], output)
mutated_mod['func_904'] = func_904
mutated_mod = relay.transform.InferType()(mutated_mod)
func_546_call = mod.get_global_var('func_546')
func_547_call = mutated_mod.get_global_var('func_547')
call_924 = relay.TupleGetItem(func_546_call(), 0)
call_925 = relay.TupleGetItem(func_547_call(), 0)
func_767_call = mod.get_global_var('func_767')
func_770_call = mutated_mod.get_global_var('func_770')
const_929 = relay.const([5,9,-9,-5,10,-8,2,-9,4,8,-10,10,-10,7,-5,4,-6,-3,-7,10,10,8,1,10,-3,-1,1,2,-6,-9,-7,-9,7,-10,2,2,7,5,9,5,-2,-4,2,4,-7,7,9,-9,-1,1,-10,-5,-2,4,4,3,10,10,-3,7,1,-6,-1,-7,5,-6,-10,1,-1,-5,-6,2,-6,-7,-9,1,-8,10,-3,2,4,2,-8,10,-9,4,-5,-1,-9,10,-1,-7,7,10,6,-7,-1,6,3,9,-5,7,-9,3,-7,7,-5,8,-4,1,2,2,-10,-5,6,-4,6,1,2,-5,-6,-6,9,-2,-4,-2,-2,2,-3,-6,10,2,-3,-3,-6,1,-3,4,3,-4,10,5,-10,-5,-5,-2,10,3,6,8,8,-7,-8,-10,8,8,-10,1,2,-3,-6,4,-10,1,6,-9,1,-3,6,2,9,-3,6,9,9,-5,-8,2,9,-5,5,7,-1,-8,8,-2,-1,6,-8,-5,8,3,-10,-5,2,-4,-3,2,-3,-2,10,8,8,9,8,4,-6,3,5,5,-7,2,-9,-5,-7,-3,-10,10,-4,3,-5,-9,5,8,-1,7,3,-9,8,-7,10,3,1,-7,4,-9,10,-1,2,-5,4,3,3,-2,-6,5,-10,-8,-2,8,-7,-7,6,2,-1,3,10,5,-5,-6,7,-9,-10,8,1,9,4,7,-8,-10,-7,-4,-8,-2,-5,6,-2,9,-3,5,2,4,-4,7,-1,10,-9,-4,-3,-2,7,-2,-4,-2,-7,-2,2,6,8,-7,2,4,-2,-10,9,7,1,-6,10,1,4,8,-9,10,-10,4,-4,5,1,3,7,-5,-9,5,-8,7,-10,-7,-1,-8,-6,5,3,6,-7,-3,6,5,10,5,6,3,8,7,-7,-2,-7,2,9,7,4,-10,-9,-8,-3,-10,-4,5,1,1,6,2,10,-7,-2,3,-4,10,8,-2,-10,9,3,6,-7,5,-10,-9,3,-9,8,-4,-7,-6,2,-7,10,6,2,-1,-9,-2,-5,1,-5,-4,-4,-7,-3,-9,3,-7,2,8,5,2,-8,-3,5,1,-6,-5,3,3,-5,1,8,10,-1,-7,10,10,-4,-2,-9,-9,10,-5,-5,1,3,-7,9,-5,8,9,-1,-9,-6,-6,-4,9,-8,-6,-5,5,8,10,-1,-10,-5,10,-9,-1,-8,9,-1,-5,-5,3,8,7,-10,-3,-2,-10,3,-2,-7,-9,-1,8,-7,2,5,-1,3,-9,6,2,7,4,-1,4,3,-4,2,-6,-8,2,-6,-6,-10,2,9,4,7,7,6,6,5,-4,6,7,-10,7,1,-5,-10,-8,10,-8,2,4,7,9,-2,2,-5,-9,-9,3,10,2,4,3,-2,10,4,-3,-2,6,7,1,8,-7,8,4,5,-10,-6,2,3,5,3,-10,-2,2,-6,-9,5,-9,5,3,-1,-10,7,8,-3,-7,1,-5,8,10,10,-8,5,-8,-5,2,-3,5,-4,9,-4,-6,-6,7,8,-7,7,3,-5,6,-1,7,1,-3,-3,-4,1,-3,1,-10,-7,9,-4,-10,5,-10,4,-10,9,10,8,-10,-2,-5,-3,5,-3,6,7,8,-9,8,-8,-8,6,1,-10,2,-6,-6,-3,8,5,3,9,-6,4,2,6,10,-8,5,-6,7,-5,10,5,-6,-4,-4,2,1,-6,9,5,-2,-2,8,-6,-9,-1,1,-9,-6,-5,5,-2,3,-3,10,4,2,2,4,-8,-9,2,-5,-6,-5,5,8,10,7,-6,3,2,-5,-5,10,-2,2,-10,6,-2,-5,-2,-4,4,6,-8,-9,-2,5,-3,-1,-6,8,4,2,-6,-10,-9,1,-6,3,-3,6,-7,3,6,5,-10,9,-9,-7,7,-3,4,2,-8,5,7,7,2,6,-7,-1,-3,3,9,-5,9,-5,-2,2,1,-3,7,-4,3,7,10,9,6,3,1,-6,-8,3,7,1,-1,8,-6,8,-4,-9,5,-8,-1,-10,9,-3,6,-6,-1,3,-1,3,5,7,8,-6,8,-6,2,-1,10,9,-10,-1,4,-5,4,2,-9,1,-7,-2,8,3,-4,5,8,9,1,-1,3,9,3,-9,2,-4,6,5,-4,7,3,-1,6,-9,2,-1,7,6,-3,6,4,6,8,5,-8,-9,2,1,3,-6,-3,2,7,2,3,-3,8,7,1,-7,4,-1,7,6,-4,-5,-9,7,-6,-4,-6,8,-8,-7,6,-1,1,9,-6,8,-7,-6,-3,-2,3,10,5,-3,-2,4,-6,10,-7,-5,-4,-2,7,9,5,9,-7,7,-6,7,-1,-7,5,4,6,4,2,5,8,-1,5,-10,10,6,-6,-5,-3,-3,2,2,-7,-10,-6,10,8,6,-3,8,4,1,-9,8,-1,-2,-8,-10,5,-6,4,-7,-7,-8,1,-6,-1,4,3,4,3,-6,-4,-6,8,-2,-7,-7,-1,-7,-2,-7,9,-5,-3,8,-6,-5,-3,-1,-2,-5,1,-3,8,7,2,5,5,-6,10,2,-2,-8,9,-8,-2,8,-3,-8,-1,-3,8,6,9,-10,8,8,-1,7,-8,1,-5,5,-3,1,7,9,-3,7,-7,-2,10,-6,-8,3,9,-8,-6,-4,-8,-3,10,-2,-6,-6,7,9,10,2,-10,6,2,4,8,7,5,-3,-3,-10,6,-10,-4,2,-6,-3,-9,6,4,-9,7,10,-7,9,-10,7,-4,6,-7,3,-3,8,5,3,-3,2,8,4,-7,-3,1,-2,8,5,8,-9,-4,3,10,-9,-6,-4,4,-8,-8,-7,-3,-4,-7,-6,-8,-6,-1,-4,-2,-5,5,-5,-5,2,-5,4,8,-9,-8,-1,-10,-1,-3,4,-7,6,-6,2,5,7,-3,-8,-9,-7,3,-5,3,4,8,-3,-6,-8,-1,6,-6,-6,5,9,2,-3,2,-10,4,10,3,-9,-6,1,-9,3,-1,-4,4,2,-7,-3,-5,-5,6,-2,-1,-5,-10,-6,7,-4,-10,-7,-2,-2,-4,-10,-7,-7,-2,-1,-10,2,7,8,-9,2,-1,-8,8,3,-7,10,-10,9,5,-7,-6,-4,-8,7,-5,9,-8,10,-6,-7,-8,7,5,1,5,5,-6,-4,-1,2,-2,3,-7,-5,6,4,-2,-3,6,-6,-2,2,-10,-4,1,-7,8,-2,-3,-6,10,4,-2,6,-2,10,-5,-2,3,8,-2,5,-6,-5,-4,9,-10,4,1,3,-4,7,-7,6,5,-2,-2,-8,-3,-7,-3,-1,-1,-8,-8,-8,-4,-4,2,-9,-6,7,-9,6,8,-1,2,-6,8,7,-5,-8,8,7,4,10,-10,-9,1,-3,9,-2,7,-5,-1,10,-7,-4,4,8,1,9,-4,10,-4,-8,6,-3,7,-7,2,8,-10,6,-6,-2,-4,-8,-9,-8,1,5,6,-10,8,3,7,-1,4,10,4,6,-3,8,3,5,2,1,10,10,9,9,-7,-4,8,10,4,-1,2,-8,-7,-7,5,-8,-9,2,-4,-5,-1,-3,-1,-2,10,-3,-5,7,6,-3,-10,-5,-1,-9,9,-7,3,1,4,-2,-9,9,7,-7,8,3,3,10,-6,9,3,8,-8,1,-4,-8,-7,6,3,-5,5,2,8,2,-9,1,-8,9,8,10,10,-7,-7,10,-6,2,5,-9,-5,8,1,7,8,7,-5,-10,-7,3,9,5,-8,-9,2,-5,9,3,3,-1,-8,-9,-7,10,-7,7,4,-3,8,5,-2,-9,6,-2,3,-1,4,-6,10,-3,6,-3,2,5,10,4,-2,2,6,-10,9,-2,3,4,-1,-10,-8,9,3,-2,4,4,8,8,1,-4,7,-5,-1,6,5,3,3,5,-6,6,4,9,-7,7,3,2,5,-2,6,2,-6], dtype = "int8")#candidate|929|(1485,)|const|int8
call_928 = relay.TupleGetItem(func_767_call(relay.reshape(const_929.astype('int8'), [15, 9, 11])), 1)
call_930 = relay.TupleGetItem(func_770_call(relay.reshape(const_929.astype('int8'), [15, 9, 11])), 1)
uop_933 = relay.sigmoid(call_924.astype('float32')) # shape=(3, 4, 12)
uop_935 = relay.sigmoid(call_925.astype('float32')) # shape=(3, 4, 12)
func_712_call = mod.get_global_var('func_712')
func_715_call = mutated_mod.get_global_var('func_715')
const_937 = relay.const([-4.917956,8.704726,1.437815,-2.212855,-5.933983,4.637006,-0.546010,9.831154,-5.596685,-4.021823,-1.279909,-1.150681,3.885027,-6.266317,-3.873377,-2.115881,-5.538126,1.215604,1.543139,1.727648,1.713019,4.848482,-7.831682,-9.933157,4.910705,1.014380,-6.890990,9.001179,-9.302737,2.672097,-0.899136,8.512316,9.123668,-5.956367,2.030085,-4.318757,-9.656098,-5.275555,-2.098078,5.399822,6.223416,-0.711190,8.875371,-7.131718,7.237662,-1.631558,4.439360,-4.678564,-2.233867,-6.654329,-3.938147,-2.722316,-9.506705,4.532274,-3.883173,6.510278,0.302495,3.037536,1.916375,1.948769,3.783038,-5.372772,5.025172,-1.031274,2.411438,1.937541,7.489124,-5.758589,-7.441492,6.999575,7.604409,0.786508,-5.238914,0.952134,-9.391078,-5.521314,-4.380210,-3.133593,8.904911,-4.895777,9.091936,-5.511901,4.204024,7.454946,-1.323750,-5.453387,1.950003,-0.348164,2.451653,5.470058,-8.854606,2.923427,9.117802,2.824736,-0.143945,4.870293,1.400408,0.036011,8.983556,3.544132,9.640758,4.087851,5.976574,-8.214795,5.950012,-2.051839,0.604369,-7.112505,3.358519,8.685644,6.449396,-9.000554,-9.199492,-2.412204,-0.221192,0.043850,3.697182,-5.842284,-8.461048,2.927579,-5.268338,-3.831434,-5.983437,-8.873245,-8.140905,7.268986,1.842022,-4.976901,9.424538,8.073744,-5.410102,0.992729,0.525115,-6.250826,-6.975003,2.696882,2.892169,-0.940000,-7.011905,-2.669041,-0.157192,1.934997,3.374586,5.168842,-7.208730,-5.049104,7.464895,-0.917196,5.075807,0.823215,0.028497,-6.399011,-3.923214,-3.400737,-0.822685,1.741604,-3.143367,-2.514558,-5.047368,6.988315,-2.814366,-4.227483,9.464623,-7.053636,0.911059,8.448081,-2.332858,-3.049070,-9.292483,3.925210,0.100003,-4.345385,8.937712,0.177598,-6.575456,-1.532466,-3.424969,9.222788,-2.246918,-8.398964,3.186700,-4.613263,6.344447,-9.243179,9.169437,-0.263209,-5.756727,-7.170099,6.859928,9.205364,-1.018148,-8.429870,-5.742398,1.786304,4.628419,8.696514,6.152784,-6.550868,-6.984906,-0.297811,8.218899,-1.826610,6.729425,6.692111,-3.394120,4.675161,6.388761,9.675825,8.549226,-3.171379,-3.990983,2.069683,2.977092,-2.448480,-2.482479,0.325826,-2.618844,3.882206,-9.558719,-2.624819,1.118550,-3.304368,-4.818906,5.757854,-6.477256,-4.941576,6.522019,-1.689075,-6.621927,-0.396559,3.624664,-4.565799,5.575657,-1.309416,-5.910327,-4.064274,-2.473633,-3.454735,-8.020560,-1.576969,0.256502,0.756392,-2.860286,8.338843,-2.378116,9.628857,9.541113,7.451862,0.157609,3.141833,3.698860,7.217725,-2.883298,-8.534956,3.333574,2.748297,3.461479,3.904825,-2.515579,-8.980544,-2.064595,-4.763035,1.668860,-5.026385,0.681907,4.768441,7.328755,-2.124799,-3.592023,-5.770188,5.041755,8.038345,-8.773294,-8.400715,9.097080], dtype = "float64")#candidate|937|(275,)|const|float64
call_936 = relay.TupleGetItem(func_712_call(relay.reshape(const_937.astype('float64'), [275,])), 1)
call_938 = relay.TupleGetItem(func_715_call(relay.reshape(const_937.astype('float64'), [275,])), 1)
uop_939 = relay.acosh(uop_933.astype('float32')) # shape=(3, 4, 12)
uop_941 = relay.acosh(uop_935.astype('float32')) # shape=(3, 4, 12)
output = relay.Tuple([call_928,const_929,call_936,const_937,uop_939,])
output2 = relay.Tuple([call_930,const_929,call_938,const_937,uop_941,])
func_942 = relay.Function([], output)
mod['func_942'] = func_942
mod = relay.transform.InferType()(mod)
output = func_942()
func_943 = relay.Function([], output)
mutated_mod['func_943'] = func_943
mutated_mod = relay.transform.InferType()(mutated_mod)
var_958 = relay.var("var_958", dtype = "uint8", shape = ())#candidate|958|()|var|uint8
var_959 = relay.var("var_959", dtype = "uint8", shape = (10, 1, 3))#candidate|959|(10, 1, 3)|var|uint8
bop_960 = relay.equal(var_958.astype('bool'), var_959.astype('bool')) # shape=(10, 1, 3)
uop_967 = relay.sinh(var_959.astype('float64')) # shape=(10, 1, 3)
output = relay.Tuple([bop_960,uop_967,])
output2 = relay.Tuple([bop_960,uop_967,])
func_978 = relay.Function([var_958,var_959,], output)
mod['func_978'] = func_978
mod = relay.transform.InferType()(mod)
mutated_mod['func_978'] = func_978
mutated_mod = relay.transform.InferType()(mutated_mod)
func_978_call = mutated_mod.get_global_var('func_978')
var_980 = relay.var("var_980", dtype = "uint8", shape = ())#candidate|980|()|var|uint8
var_981 = relay.var("var_981", dtype = "uint8", shape = (10, 1, 3))#candidate|981|(10, 1, 3)|var|uint8
call_979 = func_978_call(var_980,var_981,)
output = call_979
func_982 = relay.Function([var_980,var_981,], output)
mutated_mod['func_982'] = func_982
mutated_mod = relay.transform.InferType()(mutated_mod)
var_1034 = relay.var("var_1034", dtype = "float64", shape = (3, 7, 11))#candidate|1034|(3, 7, 11)|var|float64
uop_1035 = relay.sinh(var_1034.astype('float64')) # shape=(3, 7, 11)
func_613_call = mod.get_global_var('func_613')
func_615_call = mutated_mod.get_global_var('func_615')
var_1039 = relay.var("var_1039", dtype = "float64", shape = (275,))#candidate|1039|(275,)|var|float64
call_1038 = relay.TupleGetItem(func_613_call(relay.reshape(var_1039.astype('float64'), [5, 11, 5])), 6)
call_1040 = relay.TupleGetItem(func_615_call(relay.reshape(var_1039.astype('float64'), [5, 11, 5])), 6)
output = relay.Tuple([uop_1035,call_1038,var_1039,])
output2 = relay.Tuple([uop_1035,call_1040,var_1039,])
func_1054 = relay.Function([var_1034,var_1039,], output)
mod['func_1054'] = func_1054
mod = relay.transform.InferType()(mod)
var_1055 = relay.var("var_1055", dtype = "float64", shape = (3, 7, 11))#candidate|1055|(3, 7, 11)|var|float64
var_1056 = relay.var("var_1056", dtype = "float64", shape = (275,))#candidate|1056|(275,)|var|float64
output = func_1054(var_1055,var_1056,)
func_1057 = relay.Function([var_1055,var_1056,], output)
mutated_mod['func_1057'] = func_1057
mutated_mod = relay.transform.InferType()(mutated_mod)
func_475_call = mod.get_global_var('func_475')
func_477_call = mutated_mod.get_global_var('func_477')
call_1084 = relay.TupleGetItem(func_475_call(), 3)
call_1085 = relay.TupleGetItem(func_477_call(), 3)
output = relay.Tuple([call_1084,])
output2 = relay.Tuple([call_1085,])
func_1103 = relay.Function([], output)
mod['func_1103'] = func_1103
mod = relay.transform.InferType()(mod)
output = func_1103()
func_1104 = relay.Function([], output)
mutated_mod['func_1104'] = func_1104
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1103_call = mod.get_global_var('func_1103')
func_1104_call = mutated_mod.get_global_var('func_1104')
call_1112 = relay.TupleGetItem(func_1103_call(), 0)
call_1113 = relay.TupleGetItem(func_1104_call(), 0)
output = call_1112
output2 = call_1113
func_1114 = relay.Function([], output)
mod['func_1114'] = func_1114
mod = relay.transform.InferType()(mod)
mutated_mod['func_1114'] = func_1114
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1114_call = mutated_mod.get_global_var('func_1114')
call_1115 = func_1114_call()
output = call_1115
func_1116 = relay.Function([], output)
mutated_mod['func_1116'] = func_1116
mutated_mod = relay.transform.InferType()(mutated_mod)
func_942_call = mod.get_global_var('func_942')
func_943_call = mutated_mod.get_global_var('func_943')
call_1117 = relay.TupleGetItem(func_942_call(), 2)
call_1118 = relay.TupleGetItem(func_943_call(), 2)
func_475_call = mod.get_global_var('func_475')
func_477_call = mutated_mod.get_global_var('func_477')
call_1119 = relay.TupleGetItem(func_475_call(), 0)
call_1120 = relay.TupleGetItem(func_477_call(), 0)
output = relay.Tuple([call_1117,call_1119,])
output2 = relay.Tuple([call_1118,call_1120,])
func_1123 = relay.Function([], output)
mod['func_1123'] = func_1123
mod = relay.transform.InferType()(mod)
mutated_mod['func_1123'] = func_1123
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1123_call = mutated_mod.get_global_var('func_1123')
call_1124 = func_1123_call()
output = call_1124
func_1125 = relay.Function([], output)
mutated_mod['func_1125'] = func_1125
mutated_mod = relay.transform.InferType()(mutated_mod)
func_942_call = mod.get_global_var('func_942')
func_943_call = mutated_mod.get_global_var('func_943')
call_1134 = relay.TupleGetItem(func_942_call(), 4)
call_1135 = relay.TupleGetItem(func_943_call(), 4)
func_859_call = mod.get_global_var('func_859')
func_861_call = mutated_mod.get_global_var('func_861')
call_1149 = func_859_call()
call_1150 = func_859_call()
output = relay.Tuple([call_1134,call_1149,])
output2 = relay.Tuple([call_1135,call_1150,])
func_1153 = relay.Function([], output)
mod['func_1153'] = func_1153
mod = relay.transform.InferType()(mod)
output = func_1153()
func_1154 = relay.Function([], output)
mutated_mod['func_1154'] = func_1154
mutated_mod = relay.transform.InferType()(mutated_mod)
var_1198 = relay.var("var_1198", dtype = "float32", shape = (3, 12, 12))#candidate|1198|(3, 12, 12)|var|float32
uop_1199 = relay.sigmoid(var_1198.astype('float32')) # shape=(3, 12, 12)
output = uop_1199
output2 = uop_1199
func_1208 = relay.Function([var_1198,], output)
mod['func_1208'] = func_1208
mod = relay.transform.InferType()(mod)
var_1209 = relay.var("var_1209", dtype = "float32", shape = (3, 12, 12))#candidate|1209|(3, 12, 12)|var|float32
output = func_1208(var_1209)
func_1210 = relay.Function([var_1209], output)
mutated_mod['func_1210'] = func_1210
mutated_mod = relay.transform.InferType()(mutated_mod)
func_859_call = mod.get_global_var('func_859')
func_861_call = mutated_mod.get_global_var('func_861')
call_1235 = func_859_call()
call_1236 = func_859_call()
output = call_1235
output2 = call_1236
func_1266 = relay.Function([], output)
mod['func_1266'] = func_1266
mod = relay.transform.InferType()(mod)
output = func_1266()
func_1267 = relay.Function([], output)
mutated_mod['func_1267'] = func_1267
mutated_mod = relay.transform.InferType()(mutated_mod)
func_903_call = mod.get_global_var('func_903')
func_904_call = mutated_mod.get_global_var('func_904')
call_1276 = relay.TupleGetItem(func_903_call(), 0)
call_1277 = relay.TupleGetItem(func_904_call(), 0)
output = call_1276
output2 = call_1277
func_1283 = relay.Function([], output)
mod['func_1283'] = func_1283
mod = relay.transform.InferType()(mod)
mutated_mod['func_1283'] = func_1283
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1283_call = mutated_mod.get_global_var('func_1283')
call_1284 = func_1283_call()
output = call_1284
func_1285 = relay.Function([], output)
mutated_mod['func_1285'] = func_1285
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1153_call = mod.get_global_var('func_1153')
func_1154_call = mutated_mod.get_global_var('func_1154')
call_1310 = relay.TupleGetItem(func_1153_call(), 0)
call_1311 = relay.TupleGetItem(func_1154_call(), 0)
var_1344 = relay.var("var_1344", dtype = "float32", shape = (3, 4, 12))#candidate|1344|(3, 4, 12)|var|float32
bop_1345 = relay.bitwise_xor(call_1310.astype('uint64'), relay.reshape(var_1344.astype('uint64'), relay.shape_of(call_1310))) # shape=(3, 4, 12)
bop_1348 = relay.bitwise_xor(call_1311.astype('uint64'), relay.reshape(var_1344.astype('uint64'), relay.shape_of(call_1311))) # shape=(3, 4, 12)
output = relay.Tuple([bop_1345,])
output2 = relay.Tuple([bop_1348,])
func_1352 = relay.Function([var_1344,], output)
mod['func_1352'] = func_1352
mod = relay.transform.InferType()(mod)
mutated_mod['func_1352'] = func_1352
mutated_mod = relay.transform.InferType()(mutated_mod)
var_1353 = relay.var("var_1353", dtype = "float32", shape = (3, 4, 12))#candidate|1353|(3, 4, 12)|var|float32
func_1352_call = mutated_mod.get_global_var('func_1352')
call_1354 = func_1352_call(var_1353)
output = call_1354
func_1355 = relay.Function([var_1353], output)
mutated_mod['func_1355'] = func_1355
mutated_mod = relay.transform.InferType()(mutated_mod)
var_1399 = relay.var("var_1399", dtype = "float64", shape = (14, 14, 1))#candidate|1399|(14, 14, 1)|var|float64
uop_1400 = relay.atan(var_1399.astype('float64')) # shape=(14, 14, 1)
output = relay.Tuple([uop_1400,])
output2 = relay.Tuple([uop_1400,])
func_1402 = relay.Function([var_1399,], output)
mod['func_1402'] = func_1402
mod = relay.transform.InferType()(mod)
var_1403 = relay.var("var_1403", dtype = "float64", shape = (14, 14, 1))#candidate|1403|(14, 14, 1)|var|float64
output = func_1402(var_1403)
func_1404 = relay.Function([var_1403], output)
mutated_mod['func_1404'] = func_1404
mutated_mod = relay.transform.InferType()(mutated_mod)
func_942_call = mod.get_global_var('func_942')
func_943_call = mutated_mod.get_global_var('func_943')
call_1413 = relay.TupleGetItem(func_942_call(), 3)
call_1414 = relay.TupleGetItem(func_943_call(), 3)
var_1428 = relay.var("var_1428", dtype = "float64", shape = (275,))#candidate|1428|(275,)|var|float64
bop_1429 = relay.greater(call_1413.astype('bool'), relay.reshape(var_1428.astype('bool'), relay.shape_of(call_1413))) # shape=(275,)
bop_1432 = relay.greater(call_1414.astype('bool'), relay.reshape(var_1428.astype('bool'), relay.shape_of(call_1414))) # shape=(275,)
func_841_call = mod.get_global_var('func_841')
func_843_call = mutated_mod.get_global_var('func_843')
call_1434 = relay.TupleGetItem(func_841_call(relay.reshape(call_1413.astype('float64'), [275,])), 0)
call_1435 = relay.TupleGetItem(func_843_call(relay.reshape(call_1413.astype('float64'), [275,])), 0)
output = relay.Tuple([bop_1429,call_1434,])
output2 = relay.Tuple([bop_1432,call_1435,])
func_1448 = relay.Function([var_1428,], output)
mod['func_1448'] = func_1448
mod = relay.transform.InferType()(mod)
var_1449 = relay.var("var_1449", dtype = "float64", shape = (275,))#candidate|1449|(275,)|var|float64
output = func_1448(var_1449)
func_1450 = relay.Function([var_1449], output)
mutated_mod['func_1450'] = func_1450
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1266_call = mod.get_global_var('func_1266')
func_1267_call = mutated_mod.get_global_var('func_1267')
call_1479 = func_1266_call()
call_1480 = func_1266_call()
func_733_call = mod.get_global_var('func_733')
func_736_call = mutated_mod.get_global_var('func_736')
var_1503 = relay.var("var_1503", dtype = "float64", shape = (55, 5))#candidate|1503|(55, 5)|var|float64
call_1502 = relay.TupleGetItem(func_733_call(relay.reshape(var_1503.astype('float64'), [55, 5])), 0)
call_1504 = relay.TupleGetItem(func_736_call(relay.reshape(var_1503.astype('float64'), [55, 5])), 0)
func_859_call = mod.get_global_var('func_859')
func_861_call = mutated_mod.get_global_var('func_861')
call_1506 = func_859_call()
call_1507 = func_859_call()
var_1514 = relay.var("var_1514", dtype = "float64", shape = (55, 5))#candidate|1514|(55, 5)|var|float64
bop_1515 = relay.subtract(var_1503.astype('uint8'), relay.reshape(var_1514.astype('uint8'), relay.shape_of(var_1503))) # shape=(55, 5)
bop_1519 = relay.bitwise_and(bop_1515.astype('uint16'), relay.reshape(var_1514.astype('uint16'), relay.shape_of(bop_1515))) # shape=(55, 5)
func_613_call = mod.get_global_var('func_613')
func_615_call = mutated_mod.get_global_var('func_615')
call_1524 = relay.TupleGetItem(func_613_call(relay.reshape(bop_1515.astype('float64'), [5, 11, 5])), 2)
call_1525 = relay.TupleGetItem(func_615_call(relay.reshape(bop_1515.astype('float64'), [5, 11, 5])), 2)
func_613_call = mod.get_global_var('func_613')
func_615_call = mutated_mod.get_global_var('func_615')
call_1527 = relay.TupleGetItem(func_613_call(relay.reshape(var_1514.astype('float64'), [5, 11, 5])), 0)
call_1528 = relay.TupleGetItem(func_615_call(relay.reshape(var_1514.astype('float64'), [5, 11, 5])), 0)
func_903_call = mod.get_global_var('func_903')
func_904_call = mutated_mod.get_global_var('func_904')
call_1531 = relay.TupleGetItem(func_903_call(), 1)
call_1532 = relay.TupleGetItem(func_904_call(), 1)
func_613_call = mod.get_global_var('func_613')
func_615_call = mutated_mod.get_global_var('func_615')
call_1543 = relay.TupleGetItem(func_613_call(relay.reshape(var_1514.astype('float64'), [5, 11, 5])), 1)
call_1544 = relay.TupleGetItem(func_615_call(relay.reshape(var_1514.astype('float64'), [5, 11, 5])), 1)
func_1123_call = mod.get_global_var('func_1123')
func_1125_call = mutated_mod.get_global_var('func_1125')
call_1554 = relay.TupleGetItem(func_1123_call(), 1)
call_1555 = relay.TupleGetItem(func_1125_call(), 1)
func_841_call = mod.get_global_var('func_841')
func_843_call = mutated_mod.get_global_var('func_843')
call_1564 = relay.TupleGetItem(func_841_call(relay.reshape(var_1503.astype('float64'), [275,])), 1)
call_1565 = relay.TupleGetItem(func_843_call(relay.reshape(var_1503.astype('float64'), [275,])), 1)
func_903_call = mod.get_global_var('func_903')
func_904_call = mutated_mod.get_global_var('func_904')
call_1566 = relay.TupleGetItem(func_903_call(), 3)
call_1567 = relay.TupleGetItem(func_904_call(), 3)
bop_1568 = relay.add(call_1502.astype('uint16'), relay.reshape(call_1543.astype('uint16'), relay.shape_of(call_1502))) # shape=(144,)
bop_1571 = relay.add(call_1504.astype('uint16'), relay.reshape(call_1544.astype('uint16'), relay.shape_of(call_1504))) # shape=(144,)
func_613_call = mod.get_global_var('func_613')
func_615_call = mutated_mod.get_global_var('func_615')
call_1588 = relay.TupleGetItem(func_613_call(relay.reshape(var_1503.astype('float64'), [5, 11, 5])), 3)
call_1589 = relay.TupleGetItem(func_615_call(relay.reshape(var_1503.astype('float64'), [5, 11, 5])), 3)
func_356_call = mod.get_global_var('func_356')
func_359_call = mutated_mod.get_global_var('func_359')
call_1604 = relay.TupleGetItem(func_356_call(relay.reshape(bop_1568.astype('float32'), [3, 4, 12])), 0)
call_1605 = relay.TupleGetItem(func_359_call(relay.reshape(bop_1568.astype('float32'), [3, 4, 12])), 0)
func_942_call = mod.get_global_var('func_942')
func_943_call = mutated_mod.get_global_var('func_943')
call_1623 = relay.TupleGetItem(func_942_call(), 1)
call_1624 = relay.TupleGetItem(func_943_call(), 1)
bop_1639 = relay.right_shift(bop_1519.astype('uint32'), relay.reshape(var_1503.astype('uint32'), relay.shape_of(bop_1519))) # shape=(55, 5)
output = relay.Tuple([call_1479,call_1506,call_1524,call_1527,call_1531,call_1554,call_1564,call_1566,bop_1568,call_1588,call_1604,call_1623,bop_1639,])
output2 = relay.Tuple([call_1480,call_1507,call_1525,call_1528,call_1532,call_1555,call_1565,call_1567,bop_1571,call_1589,call_1605,call_1624,bop_1639,])
func_1642 = relay.Function([var_1503,var_1514,], output)
mod['func_1642'] = func_1642
mod = relay.transform.InferType()(mod)
var_1643 = relay.var("var_1643", dtype = "float64", shape = (55, 5))#candidate|1643|(55, 5)|var|float64
var_1644 = relay.var("var_1644", dtype = "float64", shape = (55, 5))#candidate|1644|(55, 5)|var|float64
output = func_1642(var_1643,var_1644,)
func_1645 = relay.Function([var_1643,var_1644,], output)
mutated_mod['func_1645'] = func_1645
mutated_mod = relay.transform.InferType()(mutated_mod)
var_1672 = relay.var("var_1672", dtype = "float64", shape = (1, 9, 3))#candidate|1672|(1, 9, 3)|var|float64
uop_1673 = relay.log10(var_1672.astype('float64')) # shape=(1, 9, 3)
func_356_call = mod.get_global_var('func_356')
func_359_call = mutated_mod.get_global_var('func_359')
const_1676 = relay.const([[-4.808564,-3.084706,-1.487009,-8.219275,-4.730129,-4.966571,-9.285717,5.753776,-2.468565,-1.189293,-2.413896,-7.132292,-0.774022,-8.449691,4.060045,-2.524810,0.462772,0.144757,-4.169206,7.101306,-5.651769,-3.089615,0.853503,-1.861202,-1.186150,4.663292,-4.943368,-2.544071,6.754970,-5.121442,1.886570,-3.485168,4.264458,0.743979,3.494754,-3.500466,-3.882884,-6.546261,-0.008488,-9.166263,2.967692,-5.178538,7.976372,8.123979,8.051493,4.404147,-4.016530,-5.649538,-7.255846,9.218335,-1.288518,9.826533,9.575749,-7.383380,-3.050503,-1.406838,-8.526157,-0.073237,3.071175,-7.951731,5.549921,7.268657,-5.035970,5.766147,2.300396,-2.090532,-3.571546,0.371863,-9.406619,-0.141842,-0.895239,-3.711689,9.308765,-1.479355,-5.630096,4.611530,4.806788,1.507633,-1.859885,-5.646972,-4.171522,2.514090,-1.570538,-4.075261,1.007534,5.085592,7.455927,-4.349457,-6.200470,3.380443,-5.993144,-6.565180,4.849684,4.856095,-4.551243,-3.884167,-0.999533,-3.551986,-1.633527,6.250360,8.842686,4.347830,3.739485,9.857329,-0.231731,-2.676955,1.348439,-1.064995,9.436775,2.499465,8.793197,-2.030823,3.089818,-5.689700,9.540290,6.637325,4.255821,0.826426,7.060690,-6.752341,8.375961,-8.218906,-9.387216,4.515100,-2.178675,1.742671,-7.663599,9.403355,-7.064994,9.186880,-2.573189,-1.721287,7.658025,-8.471325,-9.343998,7.398684,0.879956,3.916018,-4.658038,3.188651,6.391019,6.512162,-8.334169,3.045921]], dtype = "float32")#candidate|1676|(1, 144)|const|float32
call_1675 = relay.TupleGetItem(func_356_call(relay.reshape(const_1676.astype('float32'), [3, 4, 12])), 0)
call_1677 = relay.TupleGetItem(func_359_call(relay.reshape(const_1676.astype('float32'), [3, 4, 12])), 0)
func_1402_call = mod.get_global_var('func_1402')
func_1404_call = mutated_mod.get_global_var('func_1404')
const_1685 = relay.const([-4.807745,-5.026562,0.415426,3.360477,-7.507799,3.298444,3.415718,3.824886,4.399522,5.575877,1.398673,6.151764,9.970071,4.049863,2.912623,4.496964,7.680394,-1.915501,-8.069804,8.547516,1.261302,-5.514083,7.057058,-5.572448,-8.084120,3.279557,5.128962,9.259435,0.794938,-5.888185,-0.309315,-8.308520,8.848097,-3.944227,-5.274431,0.788153,-0.300864,7.553433,5.999984,3.415270,7.123930,3.772838,5.688890,9.561319,-3.955497,3.414536,5.784443,-3.612280,-0.212748,-6.710159,-0.171186,-9.205534,1.357380,-6.061271,6.896437,-7.379984,9.237839,-9.968121,1.942533,8.448418,9.541488,-6.286840,-4.091937,5.739229,-3.015247,0.167278,8.628209,9.670830,9.004449,-9.858640,3.794520,6.224199,-6.676231,-8.183847,9.106603,6.685168,-7.603629,-8.487878,-5.817299,-0.456605,6.286932,9.936894,3.298716,-6.831397,2.298557,-4.951754,7.543196,9.055557,8.115661,9.717866,4.016843,7.543492,1.290653,-7.225476,6.028350,-6.956097,-1.653931,-9.539978,-6.174967,3.891376,2.642181,9.660723,0.652474,-4.748517,-5.711696,-1.259366,7.238658,3.729716,4.069004,-1.732314,-5.954831,9.658597,0.233760,9.209032,-7.255466,4.687941,-0.845598,8.364567,7.868988,-4.637061,8.214533,9.502714,-3.231424,4.282201,-2.276766,-3.396156,-0.631029,0.301995,9.177390,-2.731834,9.604767,6.337527,-2.252832,-8.927751,1.906941,6.945145,4.297861,7.892139,7.409025,2.207727,-6.403418,7.845826,9.955845,-5.105959,3.680232,1.659762,-1.270464,-4.251176,0.968353,-7.487683,7.048322,2.365174,-5.293682,-8.656893,-3.353036,1.623650,4.364183,6.839967,-5.341097,-1.091307,-5.713768,-7.323457,-0.167454,8.406244,0.333381,-3.665243,4.749834,6.796973,-5.295228,-2.484598,2.263069,-9.987907,-9.128375,-7.728865,4.057592,-5.209916,-8.304808,5.593949,7.404569,-8.880772,-3.498383,5.457359,-8.161628,-2.316375,-8.830564,2.404659,-4.101276,-9.382653,-1.854418,7.728201,7.658395,3.461771,8.526568,3.169358,-8.936279,5.396217], dtype = "float64")#candidate|1685|(196,)|const|float64
call_1684 = relay.TupleGetItem(func_1402_call(relay.reshape(const_1685.astype('float64'), [14, 14, 1])), 0)
call_1686 = relay.TupleGetItem(func_1404_call(relay.reshape(const_1685.astype('float64'), [14, 14, 1])), 0)
bop_1688 = relay.floor_mod(uop_1673.astype('float64'), relay.reshape(var_1672.astype('float64'), relay.shape_of(uop_1673))) # shape=(1, 9, 3)
output = relay.Tuple([call_1675,const_1676,call_1684,const_1685,bop_1688,])
output2 = relay.Tuple([call_1677,const_1676,call_1686,const_1685,bop_1688,])
func_1702 = relay.Function([var_1672,], output)
mod['func_1702'] = func_1702
mod = relay.transform.InferType()(mod)
mutated_mod['func_1702'] = func_1702
mutated_mod = relay.transform.InferType()(mutated_mod)
var_1703 = relay.var("var_1703", dtype = "float64", shape = (1, 9, 3))#candidate|1703|(1, 9, 3)|var|float64
func_1702_call = mutated_mod.get_global_var('func_1702')
call_1704 = func_1702_call(var_1703)
output = call_1704
func_1705 = relay.Function([var_1703], output)
mutated_mod['func_1705'] = func_1705
mutated_mod = relay.transform.InferType()(mutated_mod)
func_546_call = mod.get_global_var('func_546')
func_547_call = mutated_mod.get_global_var('func_547')
call_1709 = relay.TupleGetItem(func_546_call(), 2)
call_1710 = relay.TupleGetItem(func_547_call(), 2)
func_942_call = mod.get_global_var('func_942')
func_943_call = mutated_mod.get_global_var('func_943')
call_1714 = relay.TupleGetItem(func_942_call(), 1)
call_1715 = relay.TupleGetItem(func_943_call(), 1)
output = relay.Tuple([call_1709,call_1714,])
output2 = relay.Tuple([call_1710,call_1715,])
func_1716 = relay.Function([], output)
mod['func_1716'] = func_1716
mod = relay.transform.InferType()(mod)
mutated_mod['func_1716'] = func_1716
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1716_call = mutated_mod.get_global_var('func_1716')
call_1717 = func_1716_call()
output = call_1717
func_1718 = relay.Function([], output)
mutated_mod['func_1718'] = func_1718
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1716_call = mod.get_global_var('func_1716')
func_1718_call = mutated_mod.get_global_var('func_1718')
call_1721 = relay.TupleGetItem(func_1716_call(), 1)
call_1722 = relay.TupleGetItem(func_1718_call(), 1)
func_546_call = mod.get_global_var('func_546')
func_547_call = mutated_mod.get_global_var('func_547')
call_1727 = relay.TupleGetItem(func_546_call(), 2)
call_1728 = relay.TupleGetItem(func_547_call(), 2)
func_1448_call = mod.get_global_var('func_1448')
func_1450_call = mutated_mod.get_global_var('func_1450')
var_1730 = relay.var("var_1730", dtype = "float64", shape = (275,))#candidate|1730|(275,)|var|float64
call_1729 = relay.TupleGetItem(func_1448_call(relay.reshape(var_1730.astype('float64'), [275,])), 1)
call_1731 = relay.TupleGetItem(func_1450_call(relay.reshape(var_1730.astype('float64'), [275,])), 1)
func_1114_call = mod.get_global_var('func_1114')
func_1116_call = mutated_mod.get_global_var('func_1116')
call_1733 = func_1114_call()
call_1734 = func_1114_call()
output = relay.Tuple([call_1721,call_1727,call_1729,var_1730,call_1733,])
output2 = relay.Tuple([call_1722,call_1728,call_1731,var_1730,call_1734,])
func_1735 = relay.Function([var_1730,], output)
mod['func_1735'] = func_1735
mod = relay.transform.InferType()(mod)
mutated_mod['func_1735'] = func_1735
mutated_mod = relay.transform.InferType()(mutated_mod)
var_1736 = relay.var("var_1736", dtype = "float64", shape = (275,))#candidate|1736|(275,)|var|float64
func_1735_call = mutated_mod.get_global_var('func_1735')
call_1737 = func_1735_call(var_1736)
output = call_1737
func_1738 = relay.Function([var_1736], output)
mutated_mod['func_1738'] = func_1738
mutated_mod = relay.transform.InferType()(mutated_mod)
const_1747 = relay.const([[[7.770297,-6.620892],[7.645667,2.404368],[-8.948588,-5.478549],[-6.651249,-4.290527],[-4.421766,-7.750961],[-0.961927,4.238915],[7.444804,-3.520021],[0.696740,6.034348],[-2.111964,-7.331592],[-2.876498,-7.532004],[-6.358267,-8.476477],[3.973516,0.448106],[7.584292,8.714375],[-8.627133,-5.991094],[-0.036674,-2.650039],[-8.192457,7.055272]],[[5.706494,-7.743476],[5.241833,-8.922871],[2.692096,1.701538],[-2.457448,-4.624092],[-9.890684,5.820628],[4.676722,-9.370890],[-8.139441,9.593167],[0.465125,-2.269567],[-0.461909,-4.920524],[3.297747,8.198667],[8.932223,-7.710303],[-3.564196,4.696585],[-1.561814,0.883803],[-1.627848,-3.432326],[-5.798476,4.665313],[-6.872139,2.091342]],[[-9.968900,-8.843277],[-8.342867,-7.084325],[-3.032921,7.150165],[-0.801053,7.813420],[6.666771,-1.652098],[9.945534,8.374858],[-5.544384,8.609202],[-6.047255,9.782884],[-8.252599,-3.448087],[0.194281,-8.252029],[6.469896,-1.485842],[-3.898767,7.655765],[7.132245,5.027968],[-5.671712,-8.476348],[0.803309,5.907397],[-5.901196,-2.277165]],[[-7.267602,-8.149726],[3.075874,-9.021546],[-4.700935,-5.341836],[-9.963918,2.733147],[2.399327,-9.132135],[1.309261,-7.067968],[-3.241510,-9.808832],[-4.236307,6.607528],[1.842055,1.621049],[-6.629545,-9.161701],[-4.119715,3.275099],[-2.970498,-5.624357],[5.607054,3.070684],[-1.565797,4.836749],[5.476378,5.442965],[-3.219769,-5.017848]],[[-2.644519,6.458426],[5.347976,-1.794180],[-0.241727,1.299604],[-0.175360,6.529935],[-6.474128,-8.593235],[-2.629218,-1.860913],[3.242200,-0.891072],[-6.106684,7.937931],[-7.351494,-1.648985],[-4.668379,2.172071],[-7.867772,9.142828],[6.489277,8.604802],[1.461253,-8.055812],[2.529687,9.933948],[-9.812325,5.401788],[9.495616,-5.203978]],[[3.312509,1.740485],[6.607648,-9.841980],[0.933237,-5.661096],[-0.918892,0.736278],[9.928463,-5.890831],[-1.301058,2.926479],[6.040391,9.679877],[6.969169,-2.614022],[-1.092449,7.745785],[-4.877793,-8.378713],[2.798023,-5.715613],[-6.206933,-7.606577],[7.641004,-3.611676],[-5.399191,3.899418],[-7.682621,-1.928141],[-0.212423,-0.752959]],[[5.947277,-1.747933],[-0.951245,4.129879],[0.808069,0.893700],[8.341537,2.327048],[-3.830106,-2.890881],[2.376361,-1.116811],[3.954628,7.050245],[8.764388,-2.871646],[6.188475,4.482018],[3.059151,-3.848093],[-5.013234,-6.057500],[3.542395,1.350137],[-2.626854,-9.664816],[8.757874,3.566663],[-9.366933,-8.473663],[8.926201,-3.053826]],[[5.752543,-8.862826],[-9.707427,4.638087],[-7.388125,5.134302],[4.658583,-8.906131],[-0.816599,2.152836],[3.201004,-7.772942],[2.541577,-8.430448],[-8.639008,-4.426732],[-7.026255,-9.725701],[9.306986,0.897695],[-6.249132,0.384164],[7.940791,9.267110],[-2.270274,1.812783],[3.159965,1.492069],[-6.678620,4.309198],[-7.147622,-2.983472]],[[-2.722364,-9.542389],[-0.929870,-6.394292],[-9.153164,-7.549943],[3.509474,4.343876],[-6.684055,1.539849],[1.672367,0.593794],[-2.792197,-6.304357],[-8.715866,1.353233],[1.540352,-4.376740],[-7.832075,-3.251904],[-5.277231,-7.333969],[-5.110519,0.219880],[8.584592,8.500266],[-0.780097,-7.827552],[9.300990,7.692125],[-4.463962,5.877379]],[[-7.839831,0.778310],[-6.979076,7.157673],[3.609983,-3.459903],[-5.380175,-6.073655],[-7.061815,-0.716660],[-1.516604,-3.518226],[7.788512,6.020350],[-2.344520,3.276732],[-1.339882,6.056106],[2.270782,1.567407],[6.190329,-8.031091],[-5.545284,4.205068],[-9.040030,3.024734],[-0.842929,4.850373],[0.646597,6.018014],[8.433760,0.748747]]], dtype = "float64")#candidate|1747|(10, 16, 2)|const|float64
var_1748 = relay.var("var_1748", dtype = "float64", shape = (10, 16, 2))#candidate|1748|(10, 16, 2)|var|float64
bop_1749 = relay.power(const_1747.astype('float64'), relay.reshape(var_1748.astype('float64'), relay.shape_of(const_1747))) # shape=(10, 16, 2)
func_1103_call = mod.get_global_var('func_1103')
func_1104_call = mutated_mod.get_global_var('func_1104')
call_1764 = relay.TupleGetItem(func_1103_call(), 0)
call_1765 = relay.TupleGetItem(func_1104_call(), 0)
output = relay.Tuple([bop_1749,call_1764,])
output2 = relay.Tuple([bop_1749,call_1765,])
func_1770 = relay.Function([var_1748,], output)
mod['func_1770'] = func_1770
mod = relay.transform.InferType()(mod)
mutated_mod['func_1770'] = func_1770
mutated_mod = relay.transform.InferType()(mutated_mod)
var_1771 = relay.var("var_1771", dtype = "float64", shape = (10, 16, 2))#candidate|1771|(10, 16, 2)|var|float64
func_1770_call = mutated_mod.get_global_var('func_1770')
call_1772 = func_1770_call(var_1771)
output = call_1772
func_1773 = relay.Function([var_1771], output)
mutated_mod['func_1773'] = func_1773
mutated_mod = relay.transform.InferType()(mutated_mod)
func_942_call = mod.get_global_var('func_942')
func_943_call = mutated_mod.get_global_var('func_943')
call_1780 = relay.TupleGetItem(func_942_call(), 0)
call_1781 = relay.TupleGetItem(func_943_call(), 0)
uop_1791 = relay.cos(call_1780.astype('float32')) # shape=(8, 16, 8)
uop_1793 = relay.cos(call_1781.astype('float32')) # shape=(8, 16, 8)
func_1448_call = mod.get_global_var('func_1448')
func_1450_call = mutated_mod.get_global_var('func_1450')
var_1795 = relay.var("var_1795", dtype = "float64", shape = (11, 25))#candidate|1795|(11, 25)|var|float64
call_1794 = relay.TupleGetItem(func_1448_call(relay.reshape(var_1795.astype('float64'), [275,])), 1)
call_1796 = relay.TupleGetItem(func_1450_call(relay.reshape(var_1795.astype('float64'), [275,])), 1)
output = relay.Tuple([uop_1791,call_1794,var_1795,])
output2 = relay.Tuple([uop_1793,call_1796,var_1795,])
func_1800 = relay.Function([var_1795,], output)
mod['func_1800'] = func_1800
mod = relay.transform.InferType()(mod)
mutated_mod['func_1800'] = func_1800
mutated_mod = relay.transform.InferType()(mutated_mod)
var_1801 = relay.var("var_1801", dtype = "float64", shape = (11, 25))#candidate|1801|(11, 25)|var|float64
func_1800_call = mutated_mod.get_global_var('func_1800')
call_1802 = func_1800_call(var_1801)
output = call_1802
func_1803 = relay.Function([var_1801], output)
mutated_mod['func_1803'] = func_1803
mutated_mod = relay.transform.InferType()(mutated_mod)
const_1818 = relay.const([[[-7.037385,1.391761,-8.294241],[-1.605081,6.313300,-6.105178]],[[3.258549,-5.245321,0.437761],[-4.186099,-1.465558,4.185953]],[[3.547231,-3.507265,-9.390406],[-0.696511,-7.229759,4.257134]],[[-9.947257,6.408551,-0.689564],[8.289815,7.134481,4.140919]],[[-6.130346,1.720514,-5.901698],[-6.307351,6.975029,-5.478788]],[[-0.496520,-5.760202,9.427788],[3.329274,3.417059,5.058454]],[[-7.967757,9.851360,-2.422012],[-8.533994,-3.492772,-7.120402]],[[-1.862561,0.496392,8.310873],[9.537805,-0.076005,-8.891324]],[[3.022369,-9.742998,-0.017890],[-8.551197,-3.843300,-0.385647]]], dtype = "float64")#candidate|1818|(9, 2, 3)|const|float64
uop_1819 = relay.asinh(const_1818.astype('float64')) # shape=(9, 2, 3)
uop_1826 = relay.log(const_1818.astype('float32')) # shape=(9, 2, 3)
bop_1830 = relay.divide(uop_1826.astype('float64'), relay.reshape(const_1818.astype('float64'), relay.shape_of(uop_1826))) # shape=(9, 2, 3)
uop_1838 = relay.acosh(uop_1819.astype('float32')) # shape=(9, 2, 3)
bop_1850 = relay.bitwise_or(bop_1830.astype('uint64'), relay.reshape(uop_1838.astype('uint64'), relay.shape_of(bop_1830))) # shape=(9, 2, 3)
bop_1862 = relay.floor_divide(bop_1850.astype('float32'), relay.reshape(uop_1826.astype('float32'), relay.shape_of(bop_1850))) # shape=(9, 2, 3)
func_1402_call = mod.get_global_var('func_1402')
func_1404_call = mutated_mod.get_global_var('func_1404')
const_1871 = relay.const([[-0.653983,0.228957,2.612755,9.532120,9.590111,-1.485784,-6.661242,8.439331,-9.049252,-0.937190,3.716802,-4.222274,0.410101,-1.259900,-2.388563,2.212991,-5.304363,-8.684498,1.010649,1.761155,-8.704786,-2.338327,6.897667,5.232653,8.861623,-2.354183,-4.576778,2.882975,3.991862,1.304220,-7.139635,-7.642866,7.078180,6.676869,-3.081408,8.311626,-9.774717,-2.702526,2.276075,-3.178920,9.051227,8.526712,8.871672,1.294942,9.515503,-4.872944,-3.066944,-4.565610,3.728230,-8.323751,-4.709512,-3.492744,3.008314,-2.925073,2.293903,2.262136,3.154190,-0.740343,2.671742,4.713960,-9.519399,3.908426,-8.595285,-3.746498,9.544348,-1.382036,3.341066,-0.804525,1.172702,6.264422,7.208450,9.272300,-4.323225,-5.160569,2.074365,-1.406038,5.799308,-7.327750,9.702898,-5.119288,7.512964,-8.170240,8.408334,-1.922151,1.063219,0.534625,-6.564536,9.299845,-1.762253,1.428643,-4.241971,6.522381,2.447555,2.640621,3.850164,9.832379,-0.687849,7.498565,-5.441715,-8.695706,7.860145,7.711435,-4.639465,-1.676913,-4.148235,3.195510,3.967078,-0.025176,-7.864652,6.896683,8.941236,6.458241,-0.011306,-3.572461,-4.143085,-7.350496,-0.335533,5.015800,0.028798,-0.094221,5.469933,-1.042295,-5.189119,3.242377,-8.891738,-5.133936,4.572053,-6.246134,-5.939142,6.182173,4.463831,9.063538,1.496811,9.674380,-0.647055,-3.025627,6.602148,3.155804,2.240757,-3.811731,5.574154,-5.875241,-4.588878,7.230217,6.284756,5.361708,-7.816851,-6.571448,-5.643645,-6.084236,9.240998,-4.342498,7.578449,2.084023,6.073010,3.535171,-9.210075,3.537475,-4.274142,-1.216353,0.258347,-8.209889,-7.002611,3.367139,-9.390802,7.568798,-2.164632,-3.254112,3.312122,6.052440,-0.720213,-1.779375,-4.097073,8.569112,-3.255654,-3.238880,-6.245899,3.707028,2.173708,7.314202,7.571318,-9.958480,-4.811453,7.433548,-8.388895,-0.072746,3.084985,4.371592,7.414968,-2.603077,-8.712222,7.882886,-8.478966,6.319610,-2.933448,5.873717]], dtype = "float64")#candidate|1871|(1, 196)|const|float64
call_1870 = relay.TupleGetItem(func_1402_call(relay.reshape(const_1871.astype('float64'), [14, 14, 1])), 0)
call_1872 = relay.TupleGetItem(func_1404_call(relay.reshape(const_1871.astype('float64'), [14, 14, 1])), 0)
output = relay.Tuple([bop_1862,call_1870,const_1871,])
output2 = relay.Tuple([bop_1862,call_1872,const_1871,])
func_1874 = relay.Function([], output)
mod['func_1874'] = func_1874
mod = relay.transform.InferType()(mod)
output = func_1874()
func_1875 = relay.Function([], output)
mutated_mod['func_1875'] = func_1875
mutated_mod = relay.transform.InferType()(mutated_mod)
var_1932 = relay.var("var_1932", dtype = "float64", shape = (3, 1, 14))#candidate|1932|(3, 1, 14)|var|float64
var_1933 = relay.var("var_1933", dtype = "float64", shape = (3, 2, 14))#candidate|1933|(3, 2, 14)|var|float64
bop_1934 = relay.divide(var_1932.astype('float64'), var_1933.astype('float64')) # shape=(3, 2, 14)
func_546_call = mod.get_global_var('func_546')
func_547_call = mutated_mod.get_global_var('func_547')
call_1941 = relay.TupleGetItem(func_546_call(), 3)
call_1942 = relay.TupleGetItem(func_547_call(), 3)
func_1153_call = mod.get_global_var('func_1153')
func_1154_call = mutated_mod.get_global_var('func_1154')
call_1965 = relay.TupleGetItem(func_1153_call(), 1)
call_1966 = relay.TupleGetItem(func_1154_call(), 1)
bop_1969 = relay.subtract(bop_1934.astype('uint16'), var_1932.astype('uint16')) # shape=(3, 2, 14)
output = relay.Tuple([call_1941,call_1965,bop_1969,])
output2 = relay.Tuple([call_1942,call_1966,bop_1969,])
func_1983 = relay.Function([var_1932,var_1933,], output)
mod['func_1983'] = func_1983
mod = relay.transform.InferType()(mod)
mutated_mod['func_1983'] = func_1983
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1983_call = mutated_mod.get_global_var('func_1983')
var_1985 = relay.var("var_1985", dtype = "float64", shape = (3, 1, 14))#candidate|1985|(3, 1, 14)|var|float64
var_1986 = relay.var("var_1986", dtype = "float64", shape = (3, 2, 14))#candidate|1986|(3, 2, 14)|var|float64
call_1984 = func_1983_call(var_1985,var_1986,)
output = call_1984
func_1987 = relay.Function([var_1985,var_1986,], output)
mutated_mod['func_1987'] = func_1987
mutated_mod = relay.transform.InferType()(mutated_mod)
func_475_call = mod.get_global_var('func_475')
func_477_call = mutated_mod.get_global_var('func_477')
call_1994 = relay.TupleGetItem(func_475_call(), 1)
call_1995 = relay.TupleGetItem(func_477_call(), 1)
output = call_1994
output2 = call_1995
func_2011 = relay.Function([], output)
mod['func_2011'] = func_2011
mod = relay.transform.InferType()(mod)
output = func_2011()
func_2012 = relay.Function([], output)
mutated_mod['func_2012'] = func_2012
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1103_call = mod.get_global_var('func_1103')
func_1104_call = mutated_mod.get_global_var('func_1104')
call_2070 = relay.TupleGetItem(func_1103_call(), 0)
call_2071 = relay.TupleGetItem(func_1104_call(), 0)
output = relay.Tuple([call_2070,])
output2 = relay.Tuple([call_2071,])
func_2091 = relay.Function([], output)
mod['func_2091'] = func_2091
mod = relay.transform.InferType()(mod)
output = func_2091()
func_2092 = relay.Function([], output)
mutated_mod['func_2092'] = func_2092
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1283_call = mod.get_global_var('func_1283')
func_1285_call = mutated_mod.get_global_var('func_1285')
call_2118 = func_1283_call()
call_2119 = func_1283_call()
output = call_2118
output2 = call_2119
func_2125 = relay.Function([], output)
mod['func_2125'] = func_2125
mod = relay.transform.InferType()(mod)
mutated_mod['func_2125'] = func_2125
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2125_call = mutated_mod.get_global_var('func_2125')
call_2126 = func_2125_call()
output = call_2126
func_2127 = relay.Function([], output)
mutated_mod['func_2127'] = func_2127
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1716_call = mod.get_global_var('func_1716')
func_1718_call = mutated_mod.get_global_var('func_1718')
call_2128 = relay.TupleGetItem(func_1716_call(), 0)
call_2129 = relay.TupleGetItem(func_1718_call(), 0)
output = relay.Tuple([call_2128,])
output2 = relay.Tuple([call_2129,])
func_2133 = relay.Function([], output)
mod['func_2133'] = func_2133
mod = relay.transform.InferType()(mod)
output = func_2133()
func_2134 = relay.Function([], output)
mutated_mod['func_2134'] = func_2134
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2125_call = mod.get_global_var('func_2125')
func_2127_call = mutated_mod.get_global_var('func_2127')
call_2177 = func_2125_call()
call_2178 = func_2125_call()
output = relay.Tuple([call_2177,])
output2 = relay.Tuple([call_2178,])
func_2187 = relay.Function([], output)
mod['func_2187'] = func_2187
mod = relay.transform.InferType()(mod)
mutated_mod['func_2187'] = func_2187
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2187_call = mutated_mod.get_global_var('func_2187')
call_2188 = func_2187_call()
output = call_2188
func_2189 = relay.Function([], output)
mutated_mod['func_2189'] = func_2189
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2011_call = mod.get_global_var('func_2011')
func_2012_call = mutated_mod.get_global_var('func_2012')
call_2193 = func_2011_call()
call_2194 = func_2011_call()
func_356_call = mod.get_global_var('func_356')
func_359_call = mutated_mod.get_global_var('func_359')
call_2217 = relay.TupleGetItem(func_356_call(relay.reshape(call_2193.astype('float32'), [3, 4, 12])), 0)
call_2218 = relay.TupleGetItem(func_359_call(relay.reshape(call_2193.astype('float32'), [3, 4, 12])), 0)
func_613_call = mod.get_global_var('func_613')
func_615_call = mutated_mod.get_global_var('func_615')
var_2221 = relay.var("var_2221", dtype = "float64", shape = (275,))#candidate|2221|(275,)|var|float64
call_2220 = relay.TupleGetItem(func_613_call(relay.reshape(var_2221.astype('float64'), [5, 11, 5])), 1)
call_2222 = relay.TupleGetItem(func_615_call(relay.reshape(var_2221.astype('float64'), [5, 11, 5])), 1)
func_1800_call = mod.get_global_var('func_1800')
func_1803_call = mutated_mod.get_global_var('func_1803')
call_2231 = relay.TupleGetItem(func_1800_call(relay.reshape(var_2221.astype('float64'), [11, 25])), 1)
call_2232 = relay.TupleGetItem(func_1803_call(relay.reshape(var_2221.astype('float64'), [11, 25])), 1)
uop_2238 = relay.erf(call_2220.astype('float32')) # shape=(3, 4, 12)
uop_2240 = relay.erf(call_2222.astype('float32')) # shape=(3, 4, 12)
func_1800_call = mod.get_global_var('func_1800')
func_1803_call = mutated_mod.get_global_var('func_1803')
call_2241 = relay.TupleGetItem(func_1800_call(relay.reshape(var_2221.astype('float64'), [11, 25])), 1)
call_2242 = relay.TupleGetItem(func_1803_call(relay.reshape(var_2221.astype('float64'), [11, 25])), 1)
uop_2243 = relay.sinh(uop_2238.astype('float64')) # shape=(3, 4, 12)
uop_2245 = relay.sinh(uop_2240.astype('float64')) # shape=(3, 4, 12)
func_767_call = mod.get_global_var('func_767')
func_770_call = mutated_mod.get_global_var('func_770')
var_2253 = relay.var("var_2253", dtype = "int8", shape = (1485,))#candidate|2253|(1485,)|var|int8
call_2252 = relay.TupleGetItem(func_767_call(relay.reshape(var_2253.astype('int8'), [15, 9, 11])), 0)
call_2254 = relay.TupleGetItem(func_770_call(relay.reshape(var_2253.astype('int8'), [15, 9, 11])), 0)
func_1874_call = mod.get_global_var('func_1874')
func_1875_call = mutated_mod.get_global_var('func_1875')
call_2255 = relay.TupleGetItem(func_1874_call(), 2)
call_2256 = relay.TupleGetItem(func_1875_call(), 2)
output = relay.Tuple([call_2193,call_2217,var_2221,call_2231,call_2241,uop_2243,call_2252,var_2253,call_2255,])
output2 = relay.Tuple([call_2194,call_2218,var_2221,call_2232,call_2242,uop_2245,call_2254,var_2253,call_2256,])
func_2268 = relay.Function([var_2221,var_2253,], output)
mod['func_2268'] = func_2268
mod = relay.transform.InferType()(mod)
var_2269 = relay.var("var_2269", dtype = "float64", shape = (275,))#candidate|2269|(275,)|var|float64
var_2270 = relay.var("var_2270", dtype = "int8", shape = (1485,))#candidate|2270|(1485,)|var|int8
output = func_2268(var_2269,var_2270,)
func_2271 = relay.Function([var_2269,var_2270,], output)
mutated_mod['func_2271'] = func_2271
mutated_mod = relay.transform.InferType()(mutated_mod)
func_903_call = mod.get_global_var('func_903')
func_904_call = mutated_mod.get_global_var('func_904')
call_2283 = relay.TupleGetItem(func_903_call(), 0)
call_2284 = relay.TupleGetItem(func_904_call(), 0)
const_2285 = relay.const([[[False,True,True,False,True,False,True,True,True,True,False,True],[False,False,True,False,True,False,True,True,True,True,True,False],[True,True,False,True,False,False,True,True,False,True,True,True],[True,False,False,False,False,True,True,False,True,False,False,False]],[[False,True,False,True,False,True,False,True,False,False,False,True],[False,False,False,False,True,True,True,False,False,False,False,False],[True,True,False,False,True,False,False,False,True,False,True,True],[True,True,False,False,True,False,True,False,False,True,False,True]],[[False,False,True,False,False,True,False,True,False,False,True,False],[False,True,False,True,False,True,False,True,True,False,True,False],[True,False,False,True,True,True,True,False,True,False,False,True],[False,True,False,False,True,True,False,False,False,False,True,False]]], dtype = "bool")#candidate|2285|(3, 4, 12)|const|bool
bop_2286 = relay.minimum(call_2283.astype('uint8'), relay.reshape(const_2285.astype('uint8'), relay.shape_of(call_2283))) # shape=(3, 4, 12)
bop_2289 = relay.minimum(call_2284.astype('uint8'), relay.reshape(const_2285.astype('uint8'), relay.shape_of(call_2284))) # shape=(3, 4, 12)
uop_2294 = relay.atan(bop_2286.astype('float64')) # shape=(3, 4, 12)
uop_2296 = relay.atan(bop_2289.astype('float64')) # shape=(3, 4, 12)
output = relay.Tuple([uop_2294,])
output2 = relay.Tuple([uop_2296,])
func_2298 = relay.Function([], output)
mod['func_2298'] = func_2298
mod = relay.transform.InferType()(mod)
output = func_2298()
func_2299 = relay.Function([], output)
mutated_mod['func_2299'] = func_2299
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2298_call = mod.get_global_var('func_2298')
func_2299_call = mutated_mod.get_global_var('func_2299')
call_2349 = relay.TupleGetItem(func_2298_call(), 0)
call_2350 = relay.TupleGetItem(func_2299_call(), 0)
output = call_2349
output2 = call_2350
func_2351 = relay.Function([], output)
mod['func_2351'] = func_2351
mod = relay.transform.InferType()(mod)
output = func_2351()
func_2352 = relay.Function([], output)
mutated_mod['func_2352'] = func_2352
mutated_mod = relay.transform.InferType()(mutated_mod)
func_903_call = mod.get_global_var('func_903')
func_904_call = mutated_mod.get_global_var('func_904')
call_2362 = relay.TupleGetItem(func_903_call(), 3)
call_2363 = relay.TupleGetItem(func_904_call(), 3)
func_1114_call = mod.get_global_var('func_1114')
func_1116_call = mutated_mod.get_global_var('func_1116')
call_2369 = func_1114_call()
call_2370 = func_1114_call()
func_1208_call = mod.get_global_var('func_1208')
func_1210_call = mutated_mod.get_global_var('func_1210')
const_2374 = relay.const([[-0.146309,5.866773,2.008316,-7.263993,-5.326996,-2.323284,4.061586,-4.092229,6.702656,-3.995849,0.413966,-4.225611,5.645225,2.559735,6.700403,0.179957,-8.207633,-9.542156,-7.962464,0.357800,-3.324646,9.624537,4.394711,-5.175258,5.486616,8.492159,-4.825736,-8.855515,8.927337,5.822729,6.426316,6.079782,-6.215337,2.385663,-1.460395,0.466327,-9.186569,3.650284,5.291289,-5.385565,-4.671012,7.195721,7.660150,4.509763,9.919452,-8.927255,2.616582,6.755958,2.103948,7.644320,7.962293,-7.244288,8.402890,8.451253,8.981063,6.776640,-5.851431,5.042943,-9.119404,-6.845963,7.371419,-5.483169,-7.868564,-6.408255,-0.267567,-4.210484,2.279402,-7.496148,-0.462453,6.098080,2.715074,8.723581,4.233400,-3.212089,5.463824,2.223564,2.107008,-2.842971,8.451074,2.467837,-2.048707,-4.535734,-6.707470,-7.087474,-8.436360,1.012651,6.690565,0.355020,8.500829,-8.224066,7.485987,6.681893,-7.299346,-2.398435,7.346331,9.709979,8.094932,6.309375,-2.488237,-0.695589,1.537402,4.072181,9.254304,0.942203,-8.109022,6.331341,3.808938,-9.284908,-4.067077,-6.734083,-5.981956,8.181220,1.079789,2.413829,0.520871,-5.926086,7.310521,7.195612,5.457218,1.077567,-6.350473,8.719075,-4.115867,4.199545,-1.332219,-5.091162,-4.998496,8.216502,-5.159684,0.599885,-6.086660,-9.423172,8.915141,-3.320908,-5.370839,-6.653672,9.600257,-4.495396,0.324174,-0.209912,6.183093,-0.561708,8.172132,9.405028,6.654198,3.814082,6.535064,0.856404,9.288311,9.173003,-3.083575,-8.532021,0.528588,1.519426,2.990677,-6.191909,-1.396879,-0.182589,-0.363430,4.445392,-7.471284,-6.965870,-4.069937,5.884255,5.694288,2.032276,-6.009409,8.130225,-3.772605,7.122139,5.524093,7.808679,-7.326957,3.872635,6.394429,-8.648732,8.568760,4.645288,4.327601,9.981901,9.767081,-6.991638,-7.759143,2.509412,-7.594751,-1.488117,3.667979,8.677104,0.469398,-3.995211,8.068837,0.251672,1.982837,-4.440764,3.697138,-9.750509,-0.325485,-0.872592,-0.287282,5.077669,-6.490332,-7.693497,8.144683,-5.904398,-2.431966,-1.674969,6.535978,-3.045485,-4.012961,6.374446,-8.309530,2.452623,-4.465355,-2.082541,2.881390,5.087011],[5.814790,8.937550,5.010230,-4.640326,2.163751,0.515319,-3.971733,1.515702,-5.859964,-5.395783,-4.771736,6.770657,6.463160,-2.276760,-2.242702,6.863466,4.743101,-1.342074,-1.708416,1.867447,1.623883,-6.419861,-9.634281,5.675112,3.560688,-5.128116,7.490880,-6.648011,0.183869,6.227758,2.013821,5.692806,-9.850417,6.630172,-5.573451,-9.034936,-0.921083,1.662313,-7.202475,5.400870,-8.585894,-9.768909,-0.224511,4.895464,0.904119,2.650594,3.757419,3.437421,-3.615254,-9.019846,0.376660,2.776008,7.808464,5.690614,0.820117,2.719738,-2.391004,1.770129,2.166270,-0.403229,6.310515,9.757590,-3.910263,-8.944175,5.994227,-0.676995,4.086288,-3.953766,-2.248671,5.724675,1.492029,-5.532895,-9.144191,-1.717368,-3.396298,-3.315623,-6.946201,-9.970309,-5.118822,6.885916,8.370506,9.897714,1.877359,1.637696,8.920795,7.357934,-1.028210,-5.917550,2.115510,-3.372248,9.759101,-6.811194,-0.469767,-0.793749,9.697881,-4.231879,5.820473,-0.944348,-5.404294,2.270866,-3.061875,-1.586030,-8.771274,5.387472,8.647549,7.773546,-0.249064,-1.080577,-0.543023,1.677049,-6.150949,-4.101357,2.176849,8.859500,-3.411968,3.047530,9.503650,3.670642,-5.481320,-7.198954,-0.542560,-0.093516,7.555450,0.201192,-4.346366,2.232796,5.886817,-6.570503,-8.450402,-8.304032,-0.007388,0.290304,3.571772,1.296720,9.761830,4.532710,7.058977,-1.667755,-2.453544,-9.711483,7.974261,8.955252,6.883466,3.939527,9.211363,2.875571,-9.297259,-8.630174,0.275183,4.767360,0.943140,9.619539,0.800975,7.099839,4.884875,-4.969263,2.274300,3.666922,1.577134,6.383764,-6.277337,2.213193,4.273076,-9.890783,3.514171,-9.393100,-1.004846,-9.586470,9.811845,8.758906,7.840695,0.963664,-7.618682,-1.955583,-6.200638,-4.120858,-4.702927,7.125468,2.274204,-9.382151,6.362482,7.240502,-9.997054,0.502539,7.261280,3.898496,-5.742967,-7.005069,2.217519,4.143885,-7.794225,2.258271,8.781040,-3.868100,-9.086867,7.800088,1.349039,-5.681485,-7.339345,-9.465539,-4.099847,5.800103,-6.002614,6.178462,-3.687903,2.483364,7.868060,8.472547,2.223636,4.497650,-2.598632,-5.994856,-2.032692,-3.386310,-7.206517,-8.239628]], dtype = "float32")#candidate|2374|(2, 216)|const|float32
call_2373 = func_1208_call(relay.reshape(const_2374.astype('float32'), [3, 12, 12]))
call_2375 = func_1208_call(relay.reshape(const_2374.astype('float32'), [3, 12, 12]))
func_1266_call = mod.get_global_var('func_1266')
func_1267_call = mutated_mod.get_global_var('func_1267')
call_2377 = func_1266_call()
call_2378 = func_1266_call()
func_1054_call = mod.get_global_var('func_1054')
func_1057_call = mutated_mod.get_global_var('func_1057')
const_2396 = relay.const([7.316183,9.456546,-3.558641,7.238029,4.461207,8.890704,4.750985,-5.103640,-9.848171,5.051784,7.255165,-9.280012,-2.394430,2.912839,-0.962611,6.107266,-8.683427,-1.780954,-8.968124,2.591348,1.509445,-7.338891,0.556247,2.536604,-0.975831,9.295709,9.491872,7.839567,-9.020077,6.183313,6.699391,-9.224991,2.260793,-0.325011,5.971606,9.051625,2.415320,8.912773,5.988494,-9.994894,9.780321,1.795121,-5.398978,-3.568861,7.708797,3.779496,-8.919582,-4.240015,-9.363172,7.676965,0.627978,-8.070548,3.552022,2.209818,-3.935661,-8.943778,5.762386,-9.951103,4.190501,-5.333462,-5.032088,4.318749,-5.038531,4.060048,1.114268,-5.999548,5.965491,1.623337,-8.322042,3.462928,-7.403896,-8.941388,-3.414160,6.621497,0.077589,-1.017337,7.943200,9.940452,-7.659992,0.823162,0.760019,-8.222230,-6.158204,2.354014,-9.004417,-3.150538,7.150311,-3.535382,6.399654,3.513894,-9.650271,7.955439,1.291876,0.583038,2.936867,8.410332,-2.150574,6.061679,6.421196,2.050526,-9.568968,0.696999,-1.030792,3.049931,1.653876,-7.208215,-7.724198,-0.737354,-4.867450,4.942543,-1.631673,6.686869,-8.623634,2.979886,9.411862,8.080537,-9.766964,5.332095,1.872339,3.559520,8.130462,-3.497433,8.155535,-7.034893,-1.047613,2.107611,-6.772921,5.066217,7.249095,6.579409,3.689865,-7.135949,5.613104,-6.958193,-1.844376,1.848268,4.947049,-4.233038,-2.944293,1.427671,-4.248856,9.099943,1.284113,-5.877032,-5.560784,6.329016,-4.101080,0.070418,-1.925045,-4.214477,6.337444,-5.323234,3.394263,1.224678,3.238887,-3.831200,4.802294,0.798057,-5.563638,-8.822370,6.480267,-0.572762,5.046590,6.808106,7.231510,3.616913,0.934965,-0.571858,-6.141584,5.688315,-3.682892,1.854308,6.757102,-0.665211,-3.688257,-9.936763,-5.770404,-2.216254,5.677285,6.601541,1.092425,8.808730,9.603863,-9.187177,-2.334655,8.757047,6.773284,-7.546564,1.813160,1.721636,9.886073,0.792473,-0.768254,-5.533018,1.439234,1.801479,-5.177024,-0.687748,-0.991212,4.153278,-9.004309,3.126142,2.316785,-1.483046,-6.678999,1.560692,-9.001516,5.418717,-0.379909,-5.920831,-4.438931,-5.476979,-1.537802,-6.933009,3.351859,4.010019,-0.558978,-6.751031,7.872323,0.955779,-7.974816,2.456015,3.545032,9.324570,-8.673357,-9.720313,1.600583,8.207697,5.376252,-4.623337,9.060593], dtype = "float64")#candidate|2396|(231,)|const|float64
call_2395 = relay.TupleGetItem(func_1054_call(relay.reshape(const_2396.astype('float64'), [3, 7, 11]), relay.reshape(call_2362.astype('float64'), [275,]), ), 2)
call_2397 = relay.TupleGetItem(func_1057_call(relay.reshape(const_2396.astype('float64'), [3, 7, 11]), relay.reshape(call_2362.astype('float64'), [275,]), ), 2)
func_1266_call = mod.get_global_var('func_1266')
func_1267_call = mutated_mod.get_global_var('func_1267')
call_2398 = func_1266_call()
call_2399 = func_1266_call()
func_1266_call = mod.get_global_var('func_1266')
func_1267_call = mutated_mod.get_global_var('func_1267')
call_2417 = func_1266_call()
call_2418 = func_1266_call()
output = relay.Tuple([call_2362,call_2369,call_2373,const_2374,call_2377,call_2395,const_2396,call_2398,call_2417,])
output2 = relay.Tuple([call_2363,call_2370,call_2375,const_2374,call_2378,call_2397,const_2396,call_2399,call_2418,])
func_2419 = relay.Function([], output)
mod['func_2419'] = func_2419
mod = relay.transform.InferType()(mod)
output = func_2419()
func_2420 = relay.Function([], output)
mutated_mod['func_2420'] = func_2420
mutated_mod = relay.transform.InferType()(mutated_mod)
func_942_call = mod.get_global_var('func_942')
func_943_call = mutated_mod.get_global_var('func_943')
call_2451 = relay.TupleGetItem(func_942_call(), 4)
call_2452 = relay.TupleGetItem(func_943_call(), 4)
func_1114_call = mod.get_global_var('func_1114')
func_1116_call = mutated_mod.get_global_var('func_1116')
call_2453 = func_1114_call()
call_2454 = func_1114_call()
func_2091_call = mod.get_global_var('func_2091')
func_2092_call = mutated_mod.get_global_var('func_2092')
call_2471 = relay.TupleGetItem(func_2091_call(), 0)
call_2472 = relay.TupleGetItem(func_2092_call(), 0)
output = relay.Tuple([call_2451,call_2453,call_2471,])
output2 = relay.Tuple([call_2452,call_2454,call_2472,])
func_2481 = relay.Function([], output)
mod['func_2481'] = func_2481
mod = relay.transform.InferType()(mod)
mutated_mod['func_2481'] = func_2481
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2481_call = mutated_mod.get_global_var('func_2481')
call_2482 = func_2481_call()
output = call_2482
func_2483 = relay.Function([], output)
mutated_mod['func_2483'] = func_2483
mutated_mod = relay.transform.InferType()(mutated_mod)
func_546_call = mod.get_global_var('func_546')
func_547_call = mutated_mod.get_global_var('func_547')
call_2538 = relay.TupleGetItem(func_546_call(), 0)
call_2539 = relay.TupleGetItem(func_547_call(), 0)
const_2545 = relay.const([[[True,True,True,False,True,False,False,False,True,True,True,False],[True,True,True,False,False,False,True,True,False,True,False,True],[False,True,False,True,True,True,False,True,True,True,True,False],[False,True,False,True,False,False,True,False,True,False,False,True]],[[False,True,True,False,False,True,True,False,True,True,False,False],[True,False,True,False,True,True,False,True,False,True,False,True],[True,True,True,False,True,True,True,True,False,False,False,False],[False,True,False,True,True,False,True,False,False,True,False,False]],[[False,False,True,False,True,False,True,False,True,False,False,True],[True,False,False,True,False,False,True,False,False,False,True,True],[False,True,True,True,False,True,True,False,True,False,False,True],[False,False,True,False,False,False,True,False,False,True,True,False]]], dtype = "bool")#candidate|2545|(3, 4, 12)|const|bool
bop_2546 = relay.maximum(call_2538.astype('uint8'), relay.reshape(const_2545.astype('uint8'), relay.shape_of(call_2538))) # shape=(3, 4, 12)
bop_2549 = relay.maximum(call_2539.astype('uint8'), relay.reshape(const_2545.astype('uint8'), relay.shape_of(call_2539))) # shape=(3, 4, 12)
func_2125_call = mod.get_global_var('func_2125')
func_2127_call = mutated_mod.get_global_var('func_2127')
call_2573 = func_2125_call()
call_2574 = func_2125_call()
bop_2579 = relay.greater(bop_2546.astype('bool'), relay.reshape(const_2545.astype('bool'), relay.shape_of(bop_2546))) # shape=(3, 4, 12)
bop_2582 = relay.greater(bop_2549.astype('bool'), relay.reshape(const_2545.astype('bool'), relay.shape_of(bop_2549))) # shape=(3, 4, 12)
output = relay.Tuple([call_2573,bop_2579,])
output2 = relay.Tuple([call_2574,bop_2582,])
func_2586 = relay.Function([], output)
mod['func_2586'] = func_2586
mod = relay.transform.InferType()(mod)
mutated_mod['func_2586'] = func_2586
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2586_call = mutated_mod.get_global_var('func_2586')
call_2587 = func_2586_call()
output = call_2587
func_2588 = relay.Function([], output)
mutated_mod['func_2588'] = func_2588
mutated_mod = relay.transform.InferType()(mutated_mod)
func_546_call = mod.get_global_var('func_546')
func_547_call = mutated_mod.get_global_var('func_547')
call_2597 = relay.TupleGetItem(func_546_call(), 3)
call_2598 = relay.TupleGetItem(func_547_call(), 3)
func_1266_call = mod.get_global_var('func_1266')
func_1267_call = mutated_mod.get_global_var('func_1267')
call_2613 = func_1266_call()
call_2614 = func_1266_call()
func_1642_call = mod.get_global_var('func_1642')
func_1645_call = mutated_mod.get_global_var('func_1645')
var_2620 = relay.var("var_2620", dtype = "float64", shape = (275,))#candidate|2620|(275,)|var|float64
call_2619 = relay.TupleGetItem(func_1642_call(relay.reshape(var_2620.astype('float64'), [55, 5]), relay.reshape(var_2620.astype('float64'), [55, 5]), ), 7)
call_2621 = relay.TupleGetItem(func_1645_call(relay.reshape(var_2620.astype('float64'), [55, 5]), relay.reshape(var_2620.astype('float64'), [55, 5]), ), 7)
output = relay.Tuple([call_2597,call_2613,call_2619,var_2620,])
output2 = relay.Tuple([call_2598,call_2614,call_2621,var_2620,])
func_2622 = relay.Function([var_2620,], output)
mod['func_2622'] = func_2622
mod = relay.transform.InferType()(mod)
mutated_mod['func_2622'] = func_2622
mutated_mod = relay.transform.InferType()(mutated_mod)
var_2623 = relay.var("var_2623", dtype = "float64", shape = (275,))#candidate|2623|(275,)|var|float64
func_2622_call = mutated_mod.get_global_var('func_2622')
call_2624 = func_2622_call(var_2623)
output = call_2624
func_2625 = relay.Function([var_2623], output)
mutated_mod['func_2625'] = func_2625
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2351_call = mod.get_global_var('func_2351')
func_2352_call = mutated_mod.get_global_var('func_2352')
call_2667 = func_2351_call()
call_2668 = func_2351_call()
func_1702_call = mod.get_global_var('func_1702')
func_1705_call = mutated_mod.get_global_var('func_1705')
const_2686 = relay.const([[5.317588,3.521834,0.133551],[6.313951,4.045452,1.551236],[-5.111719,8.914001,1.339313],[2.663981,9.088830,-7.146394],[8.311001,7.420439,4.648484],[3.129512,6.472829,8.176179],[6.731281,-1.322565,4.099652],[5.075471,3.317393,6.109425],[-6.900185,7.513817,-8.739528]], dtype = "float64")#candidate|2686|(9, 3)|const|float64
call_2685 = relay.TupleGetItem(func_1702_call(relay.reshape(const_2686.astype('float64'), [1, 9, 3])), 0)
call_2687 = relay.TupleGetItem(func_1705_call(relay.reshape(const_2686.astype('float64'), [1, 9, 3])), 0)
const_2694 = relay.const([[[-5.592323,-3.877789,-5.283116,-4.476578,7.121914,8.572735,-6.991209,-7.304811,-9.177433,6.046608,-5.123426,-6.820148],[9.081786,-4.753076,5.345475,8.942614,-1.255091,-2.808872,6.009372,9.212154,8.024692,1.982210,0.196410,4.331682],[4.093300,8.787332,0.358469,2.557342,-4.278032,-8.588454,5.647977,-7.302266,-8.010849,-0.662866,0.394074,-5.090733],[-2.837114,4.579622,4.032777,-4.749727,6.375459,-1.941520,4.305477,7.994497,4.914183,7.271481,7.999102,-6.904296]],[[-3.742334,0.566750,7.583511,-5.705331,4.959682,1.025925,-3.000295,1.839446,4.901676,5.284767,-5.255967,-4.908466],[-3.079321,-8.518007,8.020579,5.781712,-0.101871,-6.213159,-6.603411,8.595973,-1.503277,-7.566100,-7.687552,-8.784975],[9.120629,3.845732,-3.877966,3.362809,5.412403,8.951259,3.012881,1.279850,7.721061,2.908831,-9.601085,-4.246824],[8.638368,-4.456344,-6.500780,3.791528,-2.773134,8.786830,-1.061745,2.898442,6.341095,2.406508,-1.694335,-6.891258]],[[-6.318705,9.402443,-1.544731,1.878678,1.363554,-1.574626,-1.449699,5.350537,-1.069702,9.783271,-8.765190,-0.560236],[3.096877,-4.829486,-1.998722,-7.087586,-9.473881,-4.016386,7.980747,-3.403829,9.426494,-9.695355,-4.223469,-5.493122],[6.037763,2.852884,-2.236691,3.892273,9.730206,3.875003,-9.357512,-1.182938,-9.082376,6.990788,-2.751146,-7.932747],[-4.078779,0.192689,-9.005053,8.164826,-8.715701,7.107315,5.184223,-5.297075,-3.855425,-6.327878,8.304403,5.361229]]], dtype = "float64")#candidate|2694|(3, 4, 12)|const|float64
bop_2695 = relay.multiply(call_2667.astype('uint32'), relay.reshape(const_2694.astype('uint32'), relay.shape_of(call_2667))) # shape=(3, 4, 12)
bop_2698 = relay.multiply(call_2668.astype('uint32'), relay.reshape(const_2694.astype('uint32'), relay.shape_of(call_2668))) # shape=(3, 4, 12)
output = relay.Tuple([call_2685,const_2686,bop_2695,])
output2 = relay.Tuple([call_2687,const_2686,bop_2698,])
func_2703 = relay.Function([], output)
mod['func_2703'] = func_2703
mod = relay.transform.InferType()(mod)
output = func_2703()
func_2704 = relay.Function([], output)
mutated_mod['func_2704'] = func_2704
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1266_call = mod.get_global_var('func_1266')
func_1267_call = mutated_mod.get_global_var('func_1267')
call_2707 = func_1266_call()
call_2708 = func_1266_call()
func_1352_call = mod.get_global_var('func_1352')
func_1355_call = mutated_mod.get_global_var('func_1355')
call_2737 = relay.TupleGetItem(func_1352_call(relay.reshape(call_2707.astype('float32'), [3, 4, 12])), 0)
call_2738 = relay.TupleGetItem(func_1355_call(relay.reshape(call_2707.astype('float32'), [3, 4, 12])), 0)
func_1800_call = mod.get_global_var('func_1800')
func_1803_call = mutated_mod.get_global_var('func_1803')
const_2751 = relay.const([-3.833023,0.309042,4.017296,-2.152526,-2.805999,-7.113352,5.459523,-8.445159,8.999478,-0.315037,-7.323023,6.254216,4.347860,-4.787729,-5.312809,-6.317355,1.802724,0.113097,-6.664915,-3.723728,-3.401351,-2.932712,4.624459,-7.434565,8.121001,0.927560,7.440971,-9.673855,8.109395,3.823954,0.975405,5.585678,7.420009,7.443330,-0.603205,-9.355649,-9.272057,-5.550782,-6.137392,-4.511895,3.190422,6.049670,0.288623,2.148958,8.382491,-4.373489,-3.165229,2.693433,8.679693,2.156648,-3.075099,-6.548183,-2.387252,-3.811177,1.253734,1.612998,8.690554,8.699171,-1.438664,1.301193,1.072732,-7.932899,5.375108,4.383038,-2.335558,-6.924720,9.687193,7.557155,4.378361,-7.671600,3.734932,6.266196,-5.313484,7.188608,4.135730,-7.910496,-7.276557,-2.885903,7.044456,-2.497385,3.376907,-9.760770,-4.143166,-3.544645,-0.404054,-6.027629,-0.569278,-3.386130,2.041668,1.358884,-3.550897,5.398606,-9.953860,7.396843,-8.572438,1.354685,-4.422422,-8.342991,-9.797904,6.558505,6.607820,-8.669185,2.124432,-8.843405,-2.278328,-3.081269,-7.020791,4.641395,9.294468,-4.993372,2.945887,2.379256,4.203986,-8.255891,2.196655,-0.275003,1.187249,-3.955995,6.959810,3.144328,6.256805,2.930484,-8.816482,-6.227515,2.090178,3.892357,0.128898,-1.027542,-5.722311,-8.651653,-1.698635,-8.360563,1.897535,6.037084,1.740385,-2.107255,-7.647209,-1.979188,-6.952403,-6.200646,5.055234,-5.019670,9.159137,-5.651849,9.012958,2.821365,9.563542,-5.829998,-8.443827,-3.389479,-1.001017,-1.530519,-7.786709,8.171774,-2.125887,-7.909569,6.438345,-0.554709,1.763911,-2.065965,4.760600,9.020245,8.402810,2.379317,3.772061,-8.341830,-1.207710,-4.385418,8.858688,3.266314,3.513099,-9.201506,8.334158,1.577890,3.633221,6.862957,6.867427,6.702119,-4.902883,4.492099,-1.592819,-1.653883,-1.813047,7.568266,-7.764393,0.983229,-8.424134,8.987547,-9.574118,8.499395,-6.219886,-2.818802,5.672682,3.613776,-8.277288,6.087655,-9.869289,9.331088,-7.141406,-6.501489,-6.031828,-3.135766,5.563009,-4.828225,5.312964,7.400472,-0.741751,1.418183,-0.286730,-3.365685,1.103940,3.672862,6.985549,3.664936,-6.690917,-3.211781,3.581540,0.207857,-3.877609,3.634483,2.887623,-1.288772,-1.302979,2.670000,-5.587936,-6.593966,0.762720,0.983058,-0.586074,-6.428452,-8.163741,1.222403,-5.562252,6.906361,-5.461299,-9.002543,3.923893,-5.286240,-4.528556,-5.821595,6.751052,3.671383,2.588321,5.433326,8.173694,-0.474422,-8.715627,9.502453,-4.972041,-1.342564,7.432582,5.098496,3.064182,0.685279,9.129106,-1.714816,-8.867424,-0.325058,-3.915571,6.655687,7.970002,1.009209,-7.949377,-3.114285,1.985759,6.028343,4.224044,-3.415596,-2.441229,2.287570,1.140942,-3.970964,5.021862,6.086392,-3.187739], dtype = "float64")#candidate|2751|(275,)|const|float64
call_2750 = relay.TupleGetItem(func_1800_call(relay.reshape(const_2751.astype('float64'), [11, 25])), 2)
call_2752 = relay.TupleGetItem(func_1803_call(relay.reshape(const_2751.astype('float64'), [11, 25])), 2)
output = relay.Tuple([call_2707,call_2737,call_2750,const_2751,])
output2 = relay.Tuple([call_2708,call_2738,call_2752,const_2751,])
func_2753 = relay.Function([], output)
mod['func_2753'] = func_2753
mod = relay.transform.InferType()(mod)
output = func_2753()
func_2754 = relay.Function([], output)
mutated_mod['func_2754'] = func_2754
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1874_call = mod.get_global_var('func_1874')
func_1875_call = mutated_mod.get_global_var('func_1875')
call_2771 = relay.TupleGetItem(func_1874_call(), 1)
call_2772 = relay.TupleGetItem(func_1875_call(), 1)
uop_2775 = relay.log2(call_2771.astype('float64')) # shape=(14, 14, 1)
uop_2777 = relay.log2(call_2772.astype('float64')) # shape=(14, 14, 1)
output = relay.Tuple([uop_2775,])
output2 = relay.Tuple([uop_2777,])
func_2778 = relay.Function([], output)
mod['func_2778'] = func_2778
mod = relay.transform.InferType()(mod)
output = func_2778()
func_2779 = relay.Function([], output)
mutated_mod['func_2779'] = func_2779
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2481_call = mod.get_global_var('func_2481')
func_2483_call = mutated_mod.get_global_var('func_2483')
call_2878 = relay.TupleGetItem(func_2481_call(), 0)
call_2879 = relay.TupleGetItem(func_2483_call(), 0)
func_903_call = mod.get_global_var('func_903')
func_904_call = mutated_mod.get_global_var('func_904')
call_2880 = relay.TupleGetItem(func_903_call(), 3)
call_2881 = relay.TupleGetItem(func_904_call(), 3)
func_733_call = mod.get_global_var('func_733')
func_736_call = mutated_mod.get_global_var('func_736')
call_2885 = relay.TupleGetItem(func_733_call(relay.reshape(call_2880.astype('float64'), [55, 5])), 0)
call_2886 = relay.TupleGetItem(func_736_call(relay.reshape(call_2880.astype('float64'), [55, 5])), 0)
var_2890 = relay.var("var_2890", dtype = "float64", shape = (275,))#candidate|2890|(275,)|var|float64
bop_2891 = relay.maximum(call_2880.astype('int8'), relay.reshape(var_2890.astype('int8'), relay.shape_of(call_2880))) # shape=(275,)
bop_2894 = relay.maximum(call_2881.astype('int8'), relay.reshape(var_2890.astype('int8'), relay.shape_of(call_2881))) # shape=(275,)
output = relay.Tuple([call_2878,call_2885,bop_2891,])
output2 = relay.Tuple([call_2879,call_2886,bop_2894,])
func_2901 = relay.Function([var_2890,], output)
mod['func_2901'] = func_2901
mod = relay.transform.InferType()(mod)
var_2902 = relay.var("var_2902", dtype = "float64", shape = (275,))#candidate|2902|(275,)|var|float64
output = func_2901(var_2902)
func_2903 = relay.Function([var_2902], output)
mutated_mod['func_2903'] = func_2903
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1103_call = mod.get_global_var('func_1103')
func_1104_call = mutated_mod.get_global_var('func_1104')
call_2929 = relay.TupleGetItem(func_1103_call(), 0)
call_2930 = relay.TupleGetItem(func_1104_call(), 0)
output = call_2929
output2 = call_2930
func_2940 = relay.Function([], output)
mod['func_2940'] = func_2940
mod = relay.transform.InferType()(mod)
output = func_2940()
func_2941 = relay.Function([], output)
mutated_mod['func_2941'] = func_2941
mutated_mod = relay.transform.InferType()(mutated_mod)
func_903_call = mod.get_global_var('func_903')
func_904_call = mutated_mod.get_global_var('func_904')
call_2945 = relay.TupleGetItem(func_903_call(), 1)
call_2946 = relay.TupleGetItem(func_904_call(), 1)
func_1800_call = mod.get_global_var('func_1800')
func_1803_call = mutated_mod.get_global_var('func_1803')
const_2967 = relay.const([6.416536,-5.419116,-9.280159,0.007747,-6.377072,9.712371,-9.419836,-9.627850,3.476551,1.093312,-2.861034,-2.611596,-2.449696,-6.585175,-3.568434,3.722673,-4.196004,-8.507513,1.171878,1.116431,-4.280513,1.055299,-6.552933,2.098352,-8.854007,6.212104,-4.371673,-6.689379,5.997582,4.637015,9.308454,8.005046,-1.775579,8.517612,-8.660326,2.775855,7.833926,2.791775,0.391392,5.218808,-9.753065,-2.707990,8.682700,5.645872,4.260588,-9.444877,1.731028,-0.744566,-2.818124,-0.743606,2.413299,9.815677,-4.025529,-8.602901,3.447486,3.002811,-5.911932,-1.806905,-0.070361,-6.527745,-9.168700,9.697834,3.016254,-4.629423,6.095921,-5.428083,-0.725937,0.068373,-9.121350,-4.454760,3.570434,7.174017,-3.737222,1.738281,-1.258417,-6.046680,9.741821,-8.057454,-1.671390,-3.074619,5.413024,-5.992753,-4.200613,6.806817,9.194127,-8.370599,2.405487,0.220606,2.389919,6.764777,-7.536376,9.960018,0.789189,-5.750273,-2.730361,3.066039,9.578277,4.062778,4.969164,3.349106,2.399646,6.608499,1.108170,-1.625051,-6.410683,-1.199997,6.293870,-6.209672,-6.130615,-6.327445,8.221158,-2.653835,4.784288,-8.644716,-7.452371,-2.926279,0.836816,9.400338,-6.522112,3.026750,1.765601,0.014588,3.365172,6.285320,0.883536,-7.813369,1.654310,2.331520,7.175633,3.315891,0.119051,5.267351,7.044982,-3.941759,-8.217652,-2.392058,4.403663,-4.356344,1.890756,-9.270544,-4.639132,7.312116,-3.702045,-4.390792,-2.574045,5.324405,4.551277,-2.109600,4.582751,-2.493269,2.174125,8.514177,2.621669,2.915330,9.339959,8.501421,0.397769,0.494881,6.909595,8.940785,2.170269,-4.047288,1.322693,-6.841521,2.773099,-3.290627,1.249665,4.365862,0.931359,-3.789210,5.678758,-6.040672,-6.665443,-6.930961,-7.111925,-3.749201,-9.905367,-6.932503,8.478478,3.878904,-4.121838,9.282098,8.606308,-5.490189,-5.974510,-1.564372,-2.544297,-3.801185,-6.824974,-9.378964,-3.518295,8.589589,4.455979,-0.649094,-3.187484,0.523038,9.454999,-4.624671,-5.901503,6.831168,5.989924,-1.622813,6.134522,6.010241,7.259448,-2.992485,-6.051191,-9.188507,5.146358,-5.529730,-0.078953,-1.269535,4.208726,1.819094,2.395040,-7.972643,-6.542504,-7.247863,9.892284,0.150316,-0.409451,-9.125472,9.284826,-6.662834,7.419851,-2.172892,3.928096,7.250847,-9.412229,-8.217542,8.807477,-3.179572,6.274353,4.584682,-7.169331,5.042307,-5.657613,1.789154,-7.107756,8.496222,6.350806,-7.771311,-5.800363,4.188395,-0.717275,1.415731,-6.203645,5.483889,-2.117748,-6.273333,5.144923,4.752511,9.617650,-5.558996,0.809056,7.050139,8.273252,2.103998,0.583033,-6.542487,-8.608325,5.786337,-8.277173,-8.178017,-4.946283,3.104240,-1.221950,2.193877,-9.688353,5.319736,7.803925,-8.665957,-7.351118,4.746287,-4.928372], dtype = "float64")#candidate|2967|(275,)|const|float64
call_2966 = relay.TupleGetItem(func_1800_call(relay.reshape(const_2967.astype('float64'), [11, 25])), 0)
call_2968 = relay.TupleGetItem(func_1803_call(relay.reshape(const_2967.astype('float64'), [11, 25])), 0)
var_2969 = relay.var("var_2969", dtype = "float64", shape = (275,))#candidate|2969|(275,)|var|float64
bop_2970 = relay.greater_equal(const_2967.astype('bool'), relay.reshape(var_2969.astype('bool'), relay.shape_of(const_2967))) # shape=(275,)
uop_2981 = relay.exp(call_2945.astype('float64')) # shape=(3, 4, 12)
uop_2983 = relay.exp(call_2946.astype('float64')) # shape=(3, 4, 12)
func_1054_call = mod.get_global_var('func_1054')
func_1057_call = mutated_mod.get_global_var('func_1057')
var_2985 = relay.var("var_2985", dtype = "float64", shape = (231,))#candidate|2985|(231,)|var|float64
call_2984 = relay.TupleGetItem(func_1054_call(relay.reshape(var_2985.astype('float64'), [3, 7, 11]), relay.reshape(const_2967.astype('float64'), [275,]), ), 2)
call_2986 = relay.TupleGetItem(func_1057_call(relay.reshape(var_2985.astype('float64'), [3, 7, 11]), relay.reshape(const_2967.astype('float64'), [275,]), ), 2)
func_1770_call = mod.get_global_var('func_1770')
func_1773_call = mutated_mod.get_global_var('func_1773')
var_2990 = relay.var("var_2990", dtype = "float64", shape = (320,))#candidate|2990|(320,)|var|float64
call_2989 = relay.TupleGetItem(func_1770_call(relay.reshape(var_2990.astype('float64'), [10, 16, 2])), 1)
call_2991 = relay.TupleGetItem(func_1773_call(relay.reshape(var_2990.astype('float64'), [10, 16, 2])), 1)
output = relay.Tuple([call_2966,bop_2970,uop_2981,call_2984,var_2985,call_2989,var_2990,])
output2 = relay.Tuple([call_2968,bop_2970,uop_2983,call_2986,var_2985,call_2991,var_2990,])
func_3009 = relay.Function([var_2969,var_2985,var_2990,], output)
mod['func_3009'] = func_3009
mod = relay.transform.InferType()(mod)
var_3010 = relay.var("var_3010", dtype = "float64", shape = (275,))#candidate|3010|(275,)|var|float64
var_3011 = relay.var("var_3011", dtype = "float64", shape = (231,))#candidate|3011|(231,)|var|float64
var_3012 = relay.var("var_3012", dtype = "float64", shape = (320,))#candidate|3012|(320,)|var|float64
output = func_3009(var_3010,var_3011,var_3012,)
func_3013 = relay.Function([var_3010,var_3011,var_3012,], output)
mutated_mod['func_3013'] = func_3013
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1716_call = mod.get_global_var('func_1716')
func_1718_call = mutated_mod.get_global_var('func_1718')
call_3027 = relay.TupleGetItem(func_1716_call(), 0)
call_3028 = relay.TupleGetItem(func_1718_call(), 0)
func_2011_call = mod.get_global_var('func_2011')
func_2012_call = mutated_mod.get_global_var('func_2012')
call_3031 = func_2011_call()
call_3032 = func_2011_call()
var_3036 = relay.var("var_3036", dtype = "bool", shape = (3, 4, 12))#candidate|3036|(3, 4, 12)|var|bool
bop_3037 = relay.power(call_3027.astype('float32'), relay.reshape(var_3036.astype('float32'), relay.shape_of(call_3027))) # shape=(3, 4, 12)
bop_3040 = relay.power(call_3028.astype('float32'), relay.reshape(var_3036.astype('float32'), relay.shape_of(call_3028))) # shape=(3, 4, 12)
output = relay.Tuple([call_3031,bop_3037,])
output2 = relay.Tuple([call_3032,bop_3040,])
func_3041 = relay.Function([var_3036,], output)
mod['func_3041'] = func_3041
mod = relay.transform.InferType()(mod)
var_3042 = relay.var("var_3042", dtype = "bool", shape = (3, 4, 12))#candidate|3042|(3, 4, 12)|var|bool
output = func_3041(var_3042)
func_3043 = relay.Function([var_3042], output)
mutated_mod['func_3043'] = func_3043
mutated_mod = relay.transform.InferType()(mutated_mod)
func_942_call = mod.get_global_var('func_942')
func_943_call = mutated_mod.get_global_var('func_943')
call_3067 = relay.TupleGetItem(func_942_call(), 2)
call_3068 = relay.TupleGetItem(func_943_call(), 2)
output = call_3067
output2 = call_3068
func_3070 = relay.Function([], output)
mod['func_3070'] = func_3070
mod = relay.transform.InferType()(mod)
output = func_3070()
func_3071 = relay.Function([], output)
mutated_mod['func_3071'] = func_3071
mutated_mod = relay.transform.InferType()(mutated_mod)
func_546_call = mod.get_global_var('func_546')
func_547_call = mutated_mod.get_global_var('func_547')
call_3107 = relay.TupleGetItem(func_546_call(), 2)
call_3108 = relay.TupleGetItem(func_547_call(), 2)
output = relay.Tuple([call_3107,])
output2 = relay.Tuple([call_3108,])
func_3114 = relay.Function([], output)
mod['func_3114'] = func_3114
mod = relay.transform.InferType()(mod)
mutated_mod['func_3114'] = func_3114
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3114_call = mutated_mod.get_global_var('func_3114')
call_3115 = func_3114_call()
output = call_3115
func_3116 = relay.Function([], output)
mutated_mod['func_3116'] = func_3116
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2940_call = mod.get_global_var('func_2940')
func_2941_call = mutated_mod.get_global_var('func_2941')
call_3126 = func_2940_call()
call_3127 = func_2940_call()
var_3143 = relay.var("var_3143", dtype = "int32", shape = (8, 16, 8))#candidate|3143|(8, 16, 8)|var|int32
bop_3144 = relay.floor_divide(call_3126.astype('float64'), relay.reshape(var_3143.astype('float64'), relay.shape_of(call_3126))) # shape=(8, 16, 8)
bop_3147 = relay.floor_divide(call_3127.astype('float64'), relay.reshape(var_3143.astype('float64'), relay.shape_of(call_3127))) # shape=(8, 16, 8)
func_2419_call = mod.get_global_var('func_2419')
func_2420_call = mutated_mod.get_global_var('func_2420')
call_3152 = relay.TupleGetItem(func_2419_call(), 8)
call_3153 = relay.TupleGetItem(func_2420_call(), 8)
output = relay.Tuple([bop_3144,call_3152,])
output2 = relay.Tuple([bop_3147,call_3153,])
func_3159 = relay.Function([var_3143,], output)
mod['func_3159'] = func_3159
mod = relay.transform.InferType()(mod)
mutated_mod['func_3159'] = func_3159
mutated_mod = relay.transform.InferType()(mutated_mod)
var_3160 = relay.var("var_3160", dtype = "int32", shape = (8, 16, 8))#candidate|3160|(8, 16, 8)|var|int32
func_3159_call = mutated_mod.get_global_var('func_3159')
call_3161 = func_3159_call(var_3160)
output = call_3161
func_3162 = relay.Function([var_3160], output)
mutated_mod['func_3162'] = func_3162
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1114_call = mod.get_global_var('func_1114')
func_1116_call = mutated_mod.get_global_var('func_1116')
call_3175 = func_1114_call()
call_3176 = func_1114_call()
func_767_call = mod.get_global_var('func_767')
func_770_call = mutated_mod.get_global_var('func_770')
const_3181 = relay.const([[5,1,2,-3,-10,10,5,-5,-3],[5,-4,9,2,-3,-3,3,2,9],[8,1,-10,2,-8,-8,-1,-2,-10],[10,-2,-6,-7,-4,5,-2,-3,10],[8,9,-10,-7,-4,7,-10,5,7],[7,-2,-4,-2,9,1,-1,5,5],[8,6,8,5,-10,10,-4,3,7],[5,4,-7,5,-6,-9,-6,10,7],[7,8,4,3,6,-4,-3,-2,-2],[4,8,-10,10,4,-9,-9,-4,-2],[-6,6,2,5,-8,-2,8,10,7],[-5,-5,8,1,-10,6,-3,8,-6],[-9,6,8,8,6,-5,5,8,10],[-5,3,6,-7,4,10,6,9,-7],[-1,-6,-10,-8,3,-4,-3,-4,4],[8,2,-7,-9,2,-8,-8,1,-6],[5,3,-1,8,5,2,3,3,1],[-8,4,10,-6,-2,2,-5,1,4],[-6,-8,6,2,-10,-7,-6,3,2],[3,4,4,-1,-5,-8,6,3,6],[-6,1,5,8,10,1,-5,-1,-10],[-8,-3,-5,4,-6,5,-6,-4,6],[-4,3,6,-5,10,1,-10,-1,2],[5,-7,-10,-7,-3,5,2,-4,3],[-1,-10,-6,-1,1,-1,-9,-6,-9],[1,7,9,-5,-1,-6,-8,3,-7],[2,5,-1,-4,-5,9,1,2,-1],[-9,-9,-5,5,3,-5,6,8,1],[-8,-2,-7,8,8,-7,-8,7,-7],[6,10,-1,-8,2,-8,7,-8,-10],[-9,-5,8,-10,-8,-8,1,-8,-1],[-8,4,9,3,-2,5,7,2,-5],[-6,9,-3,-9,-10,7,-6,2,-7],[5,-7,2,-9,-9,5,-3,8,2],[-8,-8,-10,10,2,-7,5,8,9],[5,2,-10,10,5,5,1,-2,10],[6,9,5,6,8,-1,5,-6,4],[4,-9,-1,-8,-8,1,-2,9,6],[7,-4,-7,3,-3,-1,-7,10,-5],[2,3,-4,7,3,7,-10,3,-1],[-8,-4,-3,9,-1,-6,10,-2,8],[-7,-1,-1,-2,-5,2,7,10,3],[8,5,-9,-10,1,-1,-7,1,3],[-8,-2,1,-9,-6,-2,6,8,-1],[-2,-7,-2,-9,-9,7,-4,-6,-8],[-4,5,-7,8,-7,5,-5,-1,-10],[-9,2,-3,9,-3,-6,1,-9,-10],[1,2,-4,8,-3,-2,-1,-4,-8],[-3,-4,1,7,-2,8,5,-1,9],[-1,5,-5,-9,-9,-1,-7,5,1],[3,-7,6,-6,5,5,3,9,4],[-6,-10,3,1,6,-3,-9,6,-9],[1,1,-3,8,-4,3,-2,-10,-3],[6,5,7,8,6,3,-4,3,10],[4,9,6,-8,2,-1,-1,8,-8],[5,2,-1,7,1,3,-3,3,4],[7,-10,-10,-3,-9,-6,-7,-4,-2],[-5,-10,-8,-2,-7,6,-6,5,-1],[6,-5,-6,-1,-2,1,-10,3,-3],[-1,4,9,3,-1,9,5,-10,2],[1,-9,8,7,6,-6,-2,5,-8],[4,-10,-10,-8,6,-5,-4,-2,9],[2,-8,7,7,-4,5,-7,-1,-3],[7,8,-9,-2,7,-7,5,-4,8],[-8,3,7,4,-5,2,10,1,-3],[-10,7,-10,-6,2,8,3,4,10],[4,-9,10,8,1,7,4,-10,5],[-3,-2,2,6,-8,1,-6,-1,-3],[6,-1,3,-2,5,7,-9,2,-7],[3,-10,-4,6,-4,-4,-10,-8,-9],[10,7,-3,-7,5,6,-2,5,-8],[2,8,-3,-5,-3,3,-4,-3,-8],[7,1,-5,-2,-5,-8,6,7,8],[-6,-2,-5,-3,7,4,-6,-1,1],[-3,-2,1,-1,1,-3,-9,-1,-10],[-5,-7,-10,-6,-10,-3,-2,5,5],[3,5,4,-3,6,2,-10,10,-9],[-6,9,3,-8,-8,-6,-9,7,-3],[1,-3,-9,3,-4,-7,-3,8,-1],[-4,6,4,-5,3,6,-2,-3,3],[2,1,9,6,3,6,7,-4,1],[8,-10,9,-8,-4,8,3,5,3],[-2,-8,5,8,3,8,10,2,-9],[-8,2,10,-1,-9,6,2,10,-2],[3,8,6,4,2,-7,-6,7,-9],[9,9,8,-1,3,10,8,-9,-1],[-2,10,2,-6,2,-10,10,1,-9],[-5,9,2,7,-3,8,-1,1,-6],[-9,-3,6,2,-3,7,3,-4,2],[-2,-8,5,-10,-8,-8,-6,-9,-7],[-2,-2,5,-1,-1,-1,-1,-4,-7],[-6,-9,-10,1,3,-4,-4,3,-5],[5,-7,1,3,-2,-4,10,-7,-6],[-6,-2,-6,1,-5,8,-5,6,-9],[-1,-10,1,-1,3,8,5,-6,-2],[5,4,2,-10,3,8,-6,8,9],[1,8,7,3,9,9,2,9,-4],[8,-7,-3,-6,-1,6,-2,1,10],[8,-2,-3,-10,-6,2,1,5,2],[-2,-8,1,-4,-8,-4,5,-2,-9],[-9,-1,-10,-5,5,-9,-10,5,4],[2,10,-5,10,4,-8,-6,-2,9],[4,-4,-6,7,-4,3,-8,-9,5],[-3,-5,-7,-10,9,-4,5,-2,6],[-4,3,-5,7,1,4,-2,-3,3],[-10,-2,4,-7,3,-10,9,-4,-1],[1,6,3,-10,-6,2,2,4,-2],[2,-9,-1,6,2,-4,-8,-10,9],[-6,-10,3,-4,5,10,6,7,7],[-4,-7,2,9,6,-6,-3,-3,5],[-5,2,-6,-9,2,-8,3,-3,-10],[2,5,-7,3,1,2,-4,4,-9],[6,-5,-6,-1,-6,-9,-7,6,-9],[3,2,7,-10,3,7,-8,-1,-3],[-7,4,-7,2,4,-6,-8,4,-2],[3,4,-10,7,-3,-1,3,-1,1],[-2,1,-8,10,5,7,-6,1,-4],[10,9,10,-8,-5,-2,6,-1,1],[-6,-7,-6,10,5,-2,2,-2,5],[-10,5,-1,-4,-2,-6,6,5,-2],[-10,-4,4,3,8,-7,-7,8,-2],[10,8,3,-6,-7,-2,1,1,-4],[1,-3,3,4,6,-4,2,4,-6],[3,6,5,9,10,3,-7,3,5],[-9,-8,2,-3,5,-2,4,5,7],[10,5,-8,-3,-3,6,-4,9,-9],[-3,-5,10,7,7,8,1,-2,5],[7,6,6,-9,6,-2,1,7,-2],[-5,5,-3,6,8,-2,-7,-2,-8],[4,9,-5,4,4,4,-2,-5,1],[-9,-1,4,-1,10,-5,-2,-4,-10],[9,7,-7,9,7,6,9,-4,4],[4,10,-9,-10,5,-3,7,1,5],[-4,-9,8,1,-3,-10,5,-2,-5],[4,-3,3,4,-8,-3,-4,9,8],[-9,5,-5,8,-6,-7,-3,-10,9],[-2,3,-7,5,3,-5,1,1,-5],[-10,8,-5,-9,-5,-5,-4,9,-1],[6,-10,-9,-2,-8,-6,-9,7,-4],[-4,1,4,6,-4,-5,-3,-10,8],[5,-4,4,5,-8,-1,-5,5,-6],[1,-5,7,2,9,-1,5,-8,9],[9,-5,8,-7,-3,-8,-9,1,6],[4,-7,1,-1,-6,-3,2,10,-9],[7,3,6,1,2,1,-9,5,-7],[4,3,8,-4,10,-10,-4,4,-7],[9,-8,-9,9,4,-3,-2,-1,-6],[3,-1,-6,3,-10,-7,7,-6,-7],[6,2,-1,2,-2,8,-4,-10,7],[10,5,-7,6,10,-1,-6,4,6],[2,7,-3,-4,8,-3,-9,5,2],[8,-5,9,-7,2,4,-5,6,-2],[6,5,1,1,3,-6,5,5,4],[6,1,-1,6,1,7,-2,-1,-9],[6,-4,5,4,-4,9,-4,-9,3],[-10,-5,10,6,7,10,2,7,5],[-4,1,9,-7,-9,8,8,10,8],[-7,3,-2,1,8,-7,-9,3,2],[4,-5,-8,4,10,9,-5,2,10],[10,7,-1,-3,9,4,8,-3,-10],[7,-6,9,4,-2,1,-10,3,-1],[6,-7,-9,-8,-9,-3,1,3,6],[-3,-6,-7,-6,10,-8,6,-6,-1],[-1,4,-10,-9,7,-10,-3,-5,9],[8,1,-5,-10,5,3,10,2,2]], dtype = "int8")#candidate|3181|(165, 9)|const|int8
call_3180 = relay.TupleGetItem(func_767_call(relay.reshape(const_3181.astype('int8'), [15, 9, 11])), 1)
call_3182 = relay.TupleGetItem(func_770_call(relay.reshape(const_3181.astype('int8'), [15, 9, 11])), 1)
func_3159_call = mod.get_global_var('func_3159')
func_3162_call = mutated_mod.get_global_var('func_3162')
call_3186 = relay.TupleGetItem(func_3159_call(relay.reshape(call_3175.astype('int32'), [8, 16, 8])), 1)
call_3187 = relay.TupleGetItem(func_3162_call(relay.reshape(call_3175.astype('int32'), [8, 16, 8])), 1)
func_2703_call = mod.get_global_var('func_2703')
func_2704_call = mutated_mod.get_global_var('func_2704')
call_3192 = relay.TupleGetItem(func_2703_call(), 0)
call_3193 = relay.TupleGetItem(func_2704_call(), 0)
func_1266_call = mod.get_global_var('func_1266')
func_1267_call = mutated_mod.get_global_var('func_1267')
call_3212 = func_1266_call()
call_3213 = func_1266_call()
func_2351_call = mod.get_global_var('func_2351')
func_2352_call = mutated_mod.get_global_var('func_2352')
call_3219 = func_2351_call()
call_3220 = func_2351_call()
output = relay.Tuple([call_3175,call_3180,const_3181,call_3186,call_3192,call_3212,call_3219,])
output2 = relay.Tuple([call_3176,call_3182,const_3181,call_3187,call_3193,call_3213,call_3220,])
func_3227 = relay.Function([], output)
mod['func_3227'] = func_3227
mod = relay.transform.InferType()(mod)
output = func_3227()
func_3228 = relay.Function([], output)
mutated_mod['func_3228'] = func_3228
mutated_mod = relay.transform.InferType()(mutated_mod)
var_3245 = relay.var("var_3245", dtype = "int64", shape = (4, 3, 6))#candidate|3245|(4, 3, 6)|var|int64
const_3246 = relay.const([[[6,7,-7,8,-4,3],[-3,3,2,4,5,-10],[10,-8,7,-5,3,6]],[[8,-3,7,8,-9,-2],[10,6,6,2,8,-6],[-5,9,4,-8,-9,5]],[[-9,6,1,-10,7,-10],[-2,8,-2,4,-5,5],[-8,2,-6,-5,-7,4]],[[2,2,-1,-10,-5,-2],[3,4,7,-9,-4,4],[7,8,2,-3,7,-2]]], dtype = "int64")#candidate|3246|(4, 3, 6)|const|int64
bop_3247 = relay.multiply(var_3245.astype('int64'), relay.reshape(const_3246.astype('int64'), relay.shape_of(var_3245))) # shape=(4, 3, 6)
output = bop_3247
output2 = bop_3247
func_3257 = relay.Function([var_3245,], output)
mod['func_3257'] = func_3257
mod = relay.transform.InferType()(mod)
mutated_mod['func_3257'] = func_3257
mutated_mod = relay.transform.InferType()(mutated_mod)
var_3258 = relay.var("var_3258", dtype = "int64", shape = (4, 3, 6))#candidate|3258|(4, 3, 6)|var|int64
func_3257_call = mutated_mod.get_global_var('func_3257')
call_3259 = func_3257_call(var_3258)
output = call_3259
func_3260 = relay.Function([var_3258], output)
mutated_mod['func_3260'] = func_3260
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2703_call = mod.get_global_var('func_2703')
func_2704_call = mutated_mod.get_global_var('func_2704')
call_3281 = relay.TupleGetItem(func_2703_call(), 2)
call_3282 = relay.TupleGetItem(func_2704_call(), 2)
func_1448_call = mod.get_global_var('func_1448')
func_1450_call = mutated_mod.get_global_var('func_1450')
var_3320 = relay.var("var_3320", dtype = "float64", shape = (275,))#candidate|3320|(275,)|var|float64
call_3319 = relay.TupleGetItem(func_1448_call(relay.reshape(var_3320.astype('float64'), [275,])), 1)
call_3321 = relay.TupleGetItem(func_1450_call(relay.reshape(var_3320.astype('float64'), [275,])), 1)
output = relay.Tuple([call_3281,call_3319,var_3320,])
output2 = relay.Tuple([call_3282,call_3321,var_3320,])
func_3322 = relay.Function([var_3320,], output)
mod['func_3322'] = func_3322
mod = relay.transform.InferType()(mod)
mutated_mod['func_3322'] = func_3322
mutated_mod = relay.transform.InferType()(mutated_mod)
var_3323 = relay.var("var_3323", dtype = "float64", shape = (275,))#candidate|3323|(275,)|var|float64
func_3322_call = mutated_mod.get_global_var('func_3322')
call_3324 = func_3322_call(var_3323)
output = call_3324
func_3325 = relay.Function([var_3323], output)
mutated_mod['func_3325'] = func_3325
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2586_call = mod.get_global_var('func_2586')
func_2588_call = mutated_mod.get_global_var('func_2588')
call_3332 = relay.TupleGetItem(func_2586_call(), 0)
call_3333 = relay.TupleGetItem(func_2588_call(), 0)
func_2298_call = mod.get_global_var('func_2298')
func_2299_call = mutated_mod.get_global_var('func_2299')
call_3335 = relay.TupleGetItem(func_2298_call(), 0)
call_3336 = relay.TupleGetItem(func_2299_call(), 0)
func_942_call = mod.get_global_var('func_942')
func_943_call = mutated_mod.get_global_var('func_943')
call_3338 = relay.TupleGetItem(func_942_call(), 1)
call_3339 = relay.TupleGetItem(func_943_call(), 1)
func_1874_call = mod.get_global_var('func_1874')
func_1875_call = mutated_mod.get_global_var('func_1875')
call_3348 = relay.TupleGetItem(func_1874_call(), 2)
call_3349 = relay.TupleGetItem(func_1875_call(), 2)
output = relay.Tuple([call_3332,call_3335,call_3338,call_3348,])
output2 = relay.Tuple([call_3333,call_3336,call_3339,call_3349,])
func_3350 = relay.Function([], output)
mod['func_3350'] = func_3350
mod = relay.transform.InferType()(mod)
output = func_3350()
func_3351 = relay.Function([], output)
mutated_mod['func_3351'] = func_3351
mutated_mod = relay.transform.InferType()(mutated_mod)
func_859_call = mod.get_global_var('func_859')
func_861_call = mutated_mod.get_global_var('func_861')
call_3379 = func_859_call()
call_3380 = func_859_call()
func_942_call = mod.get_global_var('func_942')
func_943_call = mutated_mod.get_global_var('func_943')
call_3381 = relay.TupleGetItem(func_942_call(), 4)
call_3382 = relay.TupleGetItem(func_943_call(), 4)
func_1642_call = mod.get_global_var('func_1642')
func_1645_call = mutated_mod.get_global_var('func_1645')
const_3392 = relay.const([-6.759821,3.570285,-3.282322,4.484753,-9.251887,-1.044902,-3.281362,2.338401,-1.657501,-9.462828,5.309691,8.854013,-9.720696,-2.383386,4.391143,1.513142,4.900390,9.999084,-5.109572,2.649340,0.092287,-3.535060,1.127791,3.754026,-3.735670,5.013513,-3.755304,-6.829009,-3.348009,-3.006574,9.884081,-2.359374,-6.799095,-7.627525,-6.304650,1.907341,7.539687,2.959891,7.961970,-1.672445,6.875173,2.685246,-7.702781,-3.185595,8.525859,-3.680168,-6.545659,8.513616,5.123260,7.049578,6.326697,0.183739,-6.471615,5.086006,9.139200,8.522473,-9.522788,-4.552110,2.493463,3.752204,9.440292,2.760580,-4.969230,-4.579915,-9.420968,-4.220037,-3.022290,-6.518499,-2.995809,-5.089724,3.201639,-0.184033,4.710978,-3.714202,6.774330,3.653437,-3.595283,-6.490822,1.413800,-3.572746,7.902140,-9.864599,-9.426713,-5.877901,-2.154698,-1.887361,9.178719,7.390816,-0.760499,0.592026,-8.915731,-2.379140,2.111790,7.473226,-0.356161,-2.917871,-6.378789,5.917226,9.362808,-4.267918,7.850487,1.274614,0.568983,6.140964,-8.401928,-8.454591,2.746944,6.139964,2.637648,4.316511,-4.204105,1.037011,-7.040162,2.936465,6.020235,-3.343844,2.872808,5.406331,-4.972888,-6.223656,5.478922,6.811863,0.732766,0.576347,-3.468122,-1.572824,-1.313921,4.900311,6.611606,-1.714993,-3.776592,6.753779,-8.489888,4.224115,5.701456,8.552730,-2.876462,4.619523,-8.517585,-7.540471,0.981591,6.040503,9.215454,7.841598,-7.763123,5.656516,-2.608193,-6.363308,5.218902,2.658951,3.114278,8.921736,-7.808135,8.832685,3.516804,4.470902,3.884312,-3.809308,9.527220,0.596623,2.628169,7.341054,9.075969,-1.611244,1.872726,8.388461,-7.100441,-8.209983,0.002437,7.224748,2.571085,7.370583,-0.746589,6.235494,3.554057,3.689380,5.692388,-8.035539,-3.783898,1.164447,8.899393,-0.185545,6.219612,-0.365415,-5.883748,1.000469,-6.989460,-8.267147,-4.804865,-5.644830,-8.000375,-1.097578,-2.502207,-0.057427,0.888897,-2.066786,-2.772274,9.021956,3.855327,-9.422095,3.637054,-1.705233,2.023787,-2.431657,-6.960353,3.933201,-0.893033,0.598260,6.335163,8.148592,5.070326,5.509697,-9.199024,-5.489879,-3.637288,-9.540989,-5.360558,3.723109,7.411468,-0.601593,-4.476890,2.419774,2.545133,-6.733218,-3.489497,-1.060620,9.990867,-2.787243,-4.134246,-9.527990,2.498024,-9.021033,6.581490,6.124791,-1.080480,-8.246071,-7.509286,6.163703,-5.859350,-3.866934,-9.501843,6.155230,-2.770687,9.225644,-1.973766,3.988534,-3.096508,7.319801,9.268629,3.156217,-6.765246,-5.958690,5.509745,4.713847,7.308495,-2.064325,-9.458266,-2.125415,2.084846,1.223147,7.662575,-4.865199,-7.938057,6.016362,-0.009230,3.067979,-2.766568,9.224062,-4.672631,-9.732866,-2.128181,5.019921,-7.748686,1.703197,7.604168], dtype = "float64")#candidate|3392|(275,)|const|float64
call_3391 = relay.TupleGetItem(func_1642_call(relay.reshape(const_3392.astype('float64'), [55, 5]), relay.reshape(const_3392.astype('float64'), [55, 5]), ), 6)
call_3393 = relay.TupleGetItem(func_1645_call(relay.reshape(const_3392.astype('float64'), [55, 5]), relay.reshape(const_3392.astype('float64'), [55, 5]), ), 6)
var_3395 = relay.var("var_3395", dtype = "float64", shape = (275,))#candidate|3395|(275,)|var|float64
bop_3396 = relay.less_equal(const_3392.astype('bool'), relay.reshape(var_3395.astype('bool'), relay.shape_of(const_3392))) # shape=(275,)
uop_3401 = relay.exp(bop_3396.astype('float64')) # shape=(275,)
func_3322_call = mod.get_global_var('func_3322')
func_3325_call = mutated_mod.get_global_var('func_3325')
call_3405 = relay.TupleGetItem(func_3322_call(relay.reshape(bop_3396.astype('float64'), [275,])), 0)
call_3406 = relay.TupleGetItem(func_3325_call(relay.reshape(bop_3396.astype('float64'), [275,])), 0)
uop_3412 = relay.sin(uop_3401.astype('float64')) # shape=(275,)
output = relay.Tuple([call_3379,call_3381,call_3391,call_3405,uop_3412,])
output2 = relay.Tuple([call_3380,call_3382,call_3393,call_3406,uop_3412,])
func_3421 = relay.Function([var_3395,], output)
mod['func_3421'] = func_3421
mod = relay.transform.InferType()(mod)
mutated_mod['func_3421'] = func_3421
mutated_mod = relay.transform.InferType()(mutated_mod)
var_3422 = relay.var("var_3422", dtype = "float64", shape = (275,))#candidate|3422|(275,)|var|float64
func_3421_call = mutated_mod.get_global_var('func_3421')
call_3423 = func_3421_call(var_3422)
output = call_3423
func_3424 = relay.Function([var_3422], output)
mutated_mod['func_3424'] = func_3424
mutated_mod = relay.transform.InferType()(mutated_mod)
func_475_call = mod.get_global_var('func_475')
func_477_call = mutated_mod.get_global_var('func_477')
call_3439 = relay.TupleGetItem(func_475_call(), 3)
call_3440 = relay.TupleGetItem(func_477_call(), 3)
output = relay.Tuple([call_3439,])
output2 = relay.Tuple([call_3440,])
func_3443 = relay.Function([], output)
mod['func_3443'] = func_3443
mod = relay.transform.InferType()(mod)
mutated_mod['func_3443'] = func_3443
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3443_call = mutated_mod.get_global_var('func_3443')
call_3444 = func_3443_call()
output = call_3444
func_3445 = relay.Function([], output)
mutated_mod['func_3445'] = func_3445
mutated_mod = relay.transform.InferType()(mutated_mod)
var_3479 = relay.var("var_3479", dtype = "float32", shape = (4, 12, 2))#candidate|3479|(4, 12, 2)|var|float32
uop_3480 = relay.log(var_3479.astype('float32')) # shape=(4, 12, 2)
output = uop_3480
output2 = uop_3480
func_3484 = relay.Function([var_3479,], output)
mod['func_3484'] = func_3484
mod = relay.transform.InferType()(mod)
mutated_mod['func_3484'] = func_3484
mutated_mod = relay.transform.InferType()(mutated_mod)
var_3485 = relay.var("var_3485", dtype = "float32", shape = (4, 12, 2))#candidate|3485|(4, 12, 2)|var|float32
func_3484_call = mutated_mod.get_global_var('func_3484')
call_3486 = func_3484_call(var_3485)
output = call_3486
func_3487 = relay.Function([var_3485], output)
mutated_mod['func_3487'] = func_3487
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1123_call = mod.get_global_var('func_1123')
func_1125_call = mutated_mod.get_global_var('func_1125')
call_3563 = relay.TupleGetItem(func_1123_call(), 0)
call_3564 = relay.TupleGetItem(func_1125_call(), 0)
var_3582 = relay.var("var_3582", dtype = "int32", shape = (8, 16, 8))#candidate|3582|(8, 16, 8)|var|int32
bop_3583 = relay.subtract(call_3563.astype('int8'), relay.reshape(var_3582.astype('int8'), relay.shape_of(call_3563))) # shape=(8, 16, 8)
bop_3586 = relay.subtract(call_3564.astype('int8'), relay.reshape(var_3582.astype('int8'), relay.shape_of(call_3564))) # shape=(8, 16, 8)
bop_3596 = relay.mod(var_3582.astype('float32'), relay.reshape(call_3563.astype('float32'), relay.shape_of(var_3582))) # shape=(8, 16, 8)
bop_3599 = relay.mod(var_3582.astype('float32'), relay.reshape(call_3564.astype('float32'), relay.shape_of(var_3582))) # shape=(8, 16, 8)
func_1642_call = mod.get_global_var('func_1642')
func_1645_call = mutated_mod.get_global_var('func_1645')
var_3602 = relay.var("var_3602", dtype = "float64", shape = (11, 25))#candidate|3602|(11, 25)|var|float64
call_3601 = relay.TupleGetItem(func_1642_call(relay.reshape(var_3602.astype('float64'), [55, 5]), relay.reshape(var_3602.astype('float64'), [55, 5]), ), 7)
call_3603 = relay.TupleGetItem(func_1645_call(relay.reshape(var_3602.astype('float64'), [55, 5]), relay.reshape(var_3602.astype('float64'), [55, 5]), ), 7)
func_1716_call = mod.get_global_var('func_1716')
func_1718_call = mutated_mod.get_global_var('func_1718')
call_3611 = relay.TupleGetItem(func_1716_call(), 0)
call_3612 = relay.TupleGetItem(func_1718_call(), 0)
const_3617 = relay.const([[[-3,9,8,2,-2,5,3,1],[2,-8,9,5,5,-8,5,8],[-9,-5,-2,6,2,-7,-1,6],[-4,-8,-2,-1,-10,-1,-8,-5],[5,-4,9,-10,-3,-5,5,8],[6,2,-6,6,-5,4,-7,10],[9,6,6,-10,-2,3,-6,7],[-6,9,-4,-9,3,2,-2,-9],[-10,10,2,-7,5,-4,-1,-3],[1,-9,9,4,3,2,-2,-8],[-10,10,-10,-8,7,4,-4,4],[-8,-10,5,9,-2,5,3,-8],[-2,5,-5,7,-7,-9,9,-4],[-10,-6,-8,3,7,6,1,-3],[2,7,10,-9,-6,-8,4,1],[-6,-1,3,4,3,-2,-6,7]],[[2,5,-7,-1,-5,-7,-8,-4],[-9,-9,-8,4,5,-6,-2,8],[9,6,-10,-1,5,-3,-10,7],[4,2,9,5,-6,4,4,-10],[7,-10,-4,-9,1,-1,-1,-8],[6,-8,10,10,4,1,-6,-2],[-10,10,-3,2,3,3,-4,2],[3,-5,-3,8,-1,-5,2,1],[-8,-6,10,-3,5,-10,8,-9],[1,-5,-10,-10,-2,7,-10,7],[-9,-1,5,5,-1,-7,6,2],[-1,-10,10,4,-4,-7,1,-2],[-9,1,-6,-3,1,8,7,3],[-4,3,-2,5,7,-10,-8,-9],[7,10,-6,2,5,5,9,2],[-2,7,-9,1,6,6,-6,-10]],[[7,-8,-5,10,-2,1,-4,5],[5,9,-6,-4,4,4,-5,2],[-4,-4,-3,-8,1,4,-10,9],[-3,-3,-3,-1,7,6,10,5],[-8,-5,-3,-6,2,-10,-1,10],[-9,2,10,-6,1,-10,-10,6],[-3,-1,-6,3,-8,-10,9,-4],[-5,-10,-2,-3,-10,3,-9,2],[-2,8,-9,-3,1,-8,5,1],[-10,4,-1,6,-1,3,-8,2],[7,7,1,5,-5,-6,-6,-10],[-10,-10,-5,-6,5,-8,6,4],[-10,-1,3,6,-10,-10,-9,-5],[-9,4,3,-2,-9,5,10,9],[2,-4,-6,5,-3,2,-9,3],[-4,-4,6,7,-8,-1,2,10]],[[-7,-1,7,9,-2,3,8,9],[-2,-8,1,-6,-10,7,4,-7],[4,-4,-3,2,-3,-7,1,-2],[-1,3,-8,10,3,-9,7,-10],[4,-5,-6,-10,-9,10,5,3],[4,9,-5,9,8,-7,-6,7],[8,6,-8,4,3,9,6,5],[10,-4,-3,-2,-5,-6,-3,-10],[5,-8,-2,2,6,5,-3,-4],[4,-7,2,-8,8,7,-6,-6],[-3,-6,7,-2,1,-7,-10,9],[-10,1,-8,1,2,9,7,3],[-10,-4,-8,9,6,6,-8,9],[3,-4,-2,7,2,-4,-1,-8],[-5,-7,-1,-4,4,-4,-7,2],[7,-1,10,-3,-5,-9,3,9]],[[-2,-4,-5,-1,-2,-3,9,9],[1,5,9,2,-4,-2,2,8],[10,-6,-2,-5,-3,-3,4,-6],[-3,4,8,6,1,-2,9,-7],[-4,5,-2,-10,9,-5,7,-7],[4,-2,1,8,-6,-7,10,4],[-6,2,9,3,5,-10,3,3],[-1,4,1,-4,-2,-1,-2,8],[6,-10,-4,-3,-4,1,2,-7],[-9,3,-4,-8,-7,-1,-6,10],[1,-8,-2,-3,-6,4,-10,-3],[3,-10,4,-3,9,-1,-5,10],[1,-10,-9,-1,-9,4,-9,8],[-2,9,10,-6,-8,-5,-10,-10],[3,5,-4,8,3,-3,-1,-4],[-1,9,-7,-10,6,9,-2,-6]],[[-10,6,7,-5,6,-3,-1,9],[2,-3,7,-5,1,-8,6,8],[4,7,-6,4,-2,-8,-5,-5],[7,5,3,4,7,-9,-5,-6],[10,10,10,7,-2,5,4,-2],[7,-2,1,-6,-9,1,1,2],[-3,-7,-10,-4,-3,-8,6,5],[-1,-6,4,-1,7,8,-1,1],[-7,-6,-5,7,-1,5,9,3],[-1,-2,-10,-10,5,7,10,-10],[8,-4,-8,3,8,-7,9,6],[-8,5,-1,7,2,-4,1,1],[-1,4,-8,9,4,4,7,-3],[8,4,-2,-7,-4,1,4,7],[-7,-5,6,2,1,3,-5,2],[4,-3,7,-3,1,-10,-5,10]],[[-6,6,10,-3,-3,-8,3,-10],[-8,-3,4,-7,1,-4,4,10],[-1,-3,-6,10,3,8,8,2],[2,10,-5,-5,-6,-3,-2,-10],[1,4,8,-7,-1,-6,2,4],[5,-1,5,-7,4,-9,2,1],[-3,-1,8,1,-10,10,-4,5],[10,-8,-4,6,-4,6,4,-1],[2,-7,1,-10,4,-2,-6,-6],[7,-3,-10,8,-4,1,-2,5],[6,4,10,8,-6,2,1,10],[5,-6,-2,6,1,-4,-2,8],[-2,5,8,8,4,-10,10,-3],[-3,10,5,1,-5,-10,-5,5],[1,-9,-1,-7,-9,-2,-6,5],[-3,-5,1,6,-3,3,5,3]],[[-5,-6,-1,5,-9,2,1,-7],[10,-5,-9,9,5,8,-9,7],[7,-2,8,10,-4,5,10,10],[-3,3,5,-4,3,2,6,5],[3,-2,7,-10,-6,8,4,-8],[-4,9,-2,-10,6,6,-1,3],[-2,-7,-1,-2,10,5,-10,3],[1,-1,-4,9,-3,1,-5,8],[-1,6,1,-1,10,9,6,-3],[-3,-1,5,8,-4,-2,3,-8],[-4,-8,-4,10,-2,3,-8,-6],[-1,9,-6,6,3,-9,-7,-1],[-1,7,-8,1,-3,-10,1,3],[5,-9,-8,1,2,-8,-8,9],[-9,-9,5,-7,-4,-3,-2,-8],[8,-8,-2,-8,2,3,-6,-1]]], dtype = "int32")#candidate|3617|(8, 16, 8)|const|int32
bop_3618 = relay.not_equal(call_3563.astype('bool'), relay.reshape(const_3617.astype('bool'), relay.shape_of(call_3563))) # shape=(8, 16, 8)
bop_3621 = relay.not_equal(call_3564.astype('bool'), relay.reshape(const_3617.astype('bool'), relay.shape_of(call_3564))) # shape=(8, 16, 8)
uop_3622 = relay.exp(bop_3596.astype('float32')) # shape=(8, 16, 8)
uop_3624 = relay.exp(bop_3599.astype('float32')) # shape=(8, 16, 8)
output = relay.Tuple([bop_3583,call_3601,var_3602,call_3611,bop_3618,uop_3622,])
output2 = relay.Tuple([bop_3586,call_3603,var_3602,call_3612,bop_3621,uop_3624,])
func_3627 = relay.Function([var_3582,var_3602,], output)
mod['func_3627'] = func_3627
mod = relay.transform.InferType()(mod)
mutated_mod['func_3627'] = func_3627
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3627_call = mutated_mod.get_global_var('func_3627')
var_3629 = relay.var("var_3629", dtype = "int32", shape = (8, 16, 8))#candidate|3629|(8, 16, 8)|var|int32
var_3630 = relay.var("var_3630", dtype = "float64", shape = (11, 25))#candidate|3630|(11, 25)|var|float64
call_3628 = func_3627_call(var_3629,var_3630,)
output = call_3628
func_3631 = relay.Function([var_3629,var_3630,], output)
mutated_mod['func_3631'] = func_3631
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2125_call = mod.get_global_var('func_2125')
func_2127_call = mutated_mod.get_global_var('func_2127')
call_3720 = func_2125_call()
call_3721 = func_2125_call()
func_2753_call = mod.get_global_var('func_2753')
func_2754_call = mutated_mod.get_global_var('func_2754')
call_3741 = relay.TupleGetItem(func_2753_call(), 1)
call_3742 = relay.TupleGetItem(func_2754_call(), 1)
func_3041_call = mod.get_global_var('func_3041')
func_3043_call = mutated_mod.get_global_var('func_3043')
call_3748 = relay.TupleGetItem(func_3041_call(relay.reshape(call_3720.astype('bool'), [3, 4, 12])), 0)
call_3749 = relay.TupleGetItem(func_3043_call(relay.reshape(call_3720.astype('bool'), [3, 4, 12])), 0)
func_2622_call = mod.get_global_var('func_2622')
func_2625_call = mutated_mod.get_global_var('func_2625')
const_3762 = relay.const([[-1.704872,7.164497,2.632894,-9.480411,-0.352000,3.790440,2.885500,1.244229,7.016181,8.702327,8.012136,2.514728,-9.686860,-3.860979,-0.832850,-8.178458,-7.232521,7.546671,-5.615092,6.987219,-4.200559,-5.002127,-9.561305,5.012160,-0.963178],[-3.711588,-1.302917,-3.996327,-7.574162,8.525909,8.578019,1.527970,5.186872,2.981166,-3.779683,-9.118185,1.231166,9.239167,1.168547,-5.048821,5.501931,0.984468,-1.891099,-5.272496,-3.967836,-2.980144,-7.088185,5.412182,-8.914899,3.322929],[7.715130,2.831903,-5.018027,1.135204,-0.187033,-5.981408,-2.135330,8.996413,5.944062,2.738038,9.024526,8.398192,4.593301,7.931505,7.684044,-2.279041,-4.213182,-8.873771,-7.513003,-9.947328,6.217854,2.060881,-8.710413,-0.416156,-3.938901],[-4.274310,1.316454,5.459393,-2.482575,2.095014,-6.207598,8.922811,5.708325,9.956910,4.844964,-5.858266,-8.726617,-8.340391,-4.054177,-6.715017,-4.804771,-3.913159,-4.869181,-1.551496,-0.805959,7.892810,4.317107,-8.650603,-5.065102,1.868812],[0.596296,-4.613120,8.582012,8.197554,5.937511,-3.276843,-7.544145,-5.026569,3.085110,9.891864,-3.994623,-2.740637,1.365292,-6.807526,-9.912123,2.104010,-2.493279,-6.606682,-8.884081,3.181270,5.576168,9.810026,7.716449,8.096267,-1.429991],[-0.172244,6.039794,4.134880,5.920560,-5.372975,2.106198,-5.459925,3.932732,9.593765,-0.101824,1.616940,-7.105341,2.383613,-3.669603,-3.217130,6.454506,8.869089,9.328066,-5.419893,3.802624,6.641777,-4.379538,-4.909135,-7.218700,-9.989895],[-5.304680,-1.343998,-3.602329,-6.853650,-8.129599,-2.868900,-1.788169,-7.021888,-3.779173,-3.633498,4.479458,-8.979565,7.159555,1.276670,-7.898540,-3.361966,-3.837703,8.626528,-5.133948,2.763433,0.900793,7.355606,-9.427629,4.334163,-9.155913],[-6.985401,3.203086,2.288292,7.936522,-2.971980,-4.143118,-7.585268,-1.210206,-6.652964,-0.883329,6.988131,1.760839,9.142631,7.871765,-8.518321,-4.578477,8.988458,5.694145,0.091298,-7.268240,-2.293035,-2.396629,4.043044,-5.763978,-5.031387],[8.331171,-3.218652,-2.381649,-6.725015,3.865631,6.684543,9.306857,8.303868,6.211932,0.601410,8.757368,8.792681,1.923442,-1.443733,-9.086909,-2.389503,-5.811283,-6.071480,-0.052709,-4.945092,5.468219,0.476237,4.272660,4.923010,7.251003],[-1.305623,-8.536596,4.536463,-6.849284,1.606829,-5.291783,-1.643393,4.306047,9.801926,-1.676332,0.747052,4.833391,-1.049899,1.951111,5.536801,8.733242,5.482078,1.381029,6.235125,-2.472666,-3.764865,-2.918275,-4.825203,3.001951,4.753797],[5.893365,0.814353,9.614006,9.591777,1.075287,-3.764051,-9.769060,-0.788743,-9.483226,6.981103,1.328162,9.394781,5.890451,1.753855,3.158972,-0.579652,9.408615,7.326253,9.715060,6.572070,1.766097,7.657488,-5.690919,-1.005781,6.888751]], dtype = "float64")#candidate|3762|(11, 25)|const|float64
call_3761 = relay.TupleGetItem(func_2622_call(relay.reshape(const_3762.astype('float64'), [275,])), 1)
call_3763 = relay.TupleGetItem(func_2625_call(relay.reshape(const_3762.astype('float64'), [275,])), 1)
func_859_call = mod.get_global_var('func_859')
func_861_call = mutated_mod.get_global_var('func_861')
call_3764 = func_859_call()
call_3765 = func_859_call()
func_3421_call = mod.get_global_var('func_3421')
func_3424_call = mutated_mod.get_global_var('func_3424')
call_3777 = relay.TupleGetItem(func_3421_call(relay.reshape(const_3762.astype('float64'), [275,])), 1)
call_3778 = relay.TupleGetItem(func_3424_call(relay.reshape(const_3762.astype('float64'), [275,])), 1)
output = relay.Tuple([call_3720,call_3741,call_3748,call_3761,const_3762,call_3764,call_3777,])
output2 = relay.Tuple([call_3721,call_3742,call_3749,call_3763,const_3762,call_3765,call_3778,])
func_3786 = relay.Function([], output)
mod['func_3786'] = func_3786
mod = relay.transform.InferType()(mod)
mutated_mod['func_3786'] = func_3786
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3786_call = mutated_mod.get_global_var('func_3786')
call_3787 = func_3786_call()
output = call_3787
func_3788 = relay.Function([], output)
mutated_mod['func_3788'] = func_3788
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2586_call = mod.get_global_var('func_2586')
func_2588_call = mutated_mod.get_global_var('func_2588')
call_3825 = relay.TupleGetItem(func_2586_call(), 0)
call_3826 = relay.TupleGetItem(func_2588_call(), 0)
func_1770_call = mod.get_global_var('func_1770')
func_1773_call = mutated_mod.get_global_var('func_1773')
const_3830 = relay.const([9.468682,7.783049,0.844915,0.405513,9.830618,0.140298,1.866798,-8.418136,1.673207,9.959719,3.170269,-7.458409,-8.944441,-3.851615,-3.530444,-1.951616,-4.675549,0.506070,-8.538428,-5.292999,-2.907128,-3.302156,-6.523266,3.500802,0.470475,8.372781,5.422841,8.961227,7.298370,6.952333,3.693378,1.632350,8.671275,5.681594,-9.624037,-3.990800,-6.342247,-4.965126,3.716664,-0.218045,7.006234,-2.580799,8.556411,-4.534336,2.951403,-1.468073,-6.642267,-2.588450,-9.784111,9.566495,-9.214848,-9.475020,-5.610843,4.632074,-2.578520,4.185746,0.170458,8.741164,2.693667,4.141415,7.653139,1.787920,-0.025883,-4.524110,-8.817523,3.226063,2.286303,1.352365,-2.668548,2.394018,-2.531527,-1.776267,-9.443116,4.746342,-0.099676,2.437416,-8.881067,1.128561,-7.621017,-0.474038,4.141139,2.141051,3.995339,7.015867,-4.091251,-8.118771,3.766455,-3.334482,-1.616862,4.402334,0.602590,2.463492,0.646190,-8.357142,-3.985594,-6.746703,-1.020430,-3.253795,-1.091314,5.071024,-4.508850,-3.696743,1.757184,-5.458114,-4.626379,-2.631419,-9.876800,3.164585,-0.483878,4.792443,-8.835683,-2.773813,-6.444038,-4.731305,-7.346885,3.233327,-2.060656,-1.213891,-3.373784,3.776856,-4.201755,-9.272460,5.585772,4.875702,4.677328,-5.518532,-7.120375,-0.518966,9.996413,-3.369909,2.622367,4.401002,2.208595,3.102415,-8.675556,-0.329785,-5.110474,6.643072,-9.883460,0.372257,5.947015,-1.417345,-8.226220,-3.590015,9.583163,-2.670029,-5.238474,-5.030793,4.752349,-1.733884,2.865492,4.140658,1.903459,4.217133,4.379552,-7.111448,2.206779,-4.545511,4.632933,8.021386,5.680287,9.010547,7.656373,4.745031,1.349354,-5.570862,-8.809655,-3.954210,-1.126318,-7.192847,-0.413502,3.606780,9.728628,-2.506093,-1.996942,2.636985,7.460095,-0.682832,7.430113,7.859611,3.305273,2.835033,0.081035,5.108933,3.971982,0.275555,-6.637144,7.934488,3.717665,8.809111,-2.962146,3.223571,3.557400,-5.185641,-4.917998,-8.778443,-6.175057,1.650023,6.224230,6.650330,-0.581132,7.891005,8.091805,-8.091029,-1.758385,1.247857,5.643627,-7.318984,-3.463739,1.499686,-6.848742,-4.052307,0.891663,5.825564,-5.145797,0.294102,7.170013,-6.638555,-4.985338,5.239840,-4.197122,7.934786,-0.389990,-8.335461,-4.061388,8.613195,7.356785,5.738094,3.568558,-1.547353,-1.872512,0.902705,-9.761047,-4.707998,-1.252580,5.010131,-6.102678,-2.907004,-8.795388,1.066561,-8.997648,0.039410,-8.316201,-7.039439,7.032983,-9.112692,3.806438,-3.888424,4.179905,-5.724986,-4.204745,-3.795988,-9.846003,9.169286,6.088942,4.727654,6.784701,-1.853624,-5.338109,-6.812964,7.571134,6.211969,-0.019415,-8.383393,-0.846314,7.018283,-1.384917,-2.202962,5.193554,8.279594,-7.363631,-5.418078,2.161517,-0.457783,-5.950937,-5.972174,6.771137,-8.044174,1.368114,5.137457,0.060621,-9.991502,-7.318791,-7.741994,7.312053,-6.819017,-7.406987,7.529454,5.585835,4.815828,-6.531104,5.937503,2.036360,5.971896,-1.825145,7.673186,-8.853939,1.312728,-7.882941,-7.947225,7.667119,2.564102,2.673874,-8.414070,-9.899984,-7.205910,6.057639,-3.633490,4.585689,8.436129,-3.820219,2.533566,-1.472614,8.677002,-8.427076,-8.406307,2.399596,-8.281837,8.118862,5.346728], dtype = "float64")#candidate|3830|(320,)|const|float64
call_3829 = relay.TupleGetItem(func_1770_call(relay.reshape(const_3830.astype('float64'), [10, 16, 2])), 0)
call_3831 = relay.TupleGetItem(func_1773_call(relay.reshape(const_3830.astype('float64'), [10, 16, 2])), 0)
func_841_call = mod.get_global_var('func_841')
func_843_call = mutated_mod.get_global_var('func_843')
var_3841 = relay.var("var_3841", dtype = "float64", shape = (275,))#candidate|3841|(275,)|var|float64
call_3840 = relay.TupleGetItem(func_841_call(relay.reshape(var_3841.astype('float64'), [275,])), 2)
call_3842 = relay.TupleGetItem(func_843_call(relay.reshape(var_3841.astype('float64'), [275,])), 2)
func_1716_call = mod.get_global_var('func_1716')
func_1718_call = mutated_mod.get_global_var('func_1718')
call_3853 = relay.TupleGetItem(func_1716_call(), 1)
call_3854 = relay.TupleGetItem(func_1718_call(), 1)
func_1103_call = mod.get_global_var('func_1103')
func_1104_call = mutated_mod.get_global_var('func_1104')
call_3863 = relay.TupleGetItem(func_1103_call(), 0)
call_3864 = relay.TupleGetItem(func_1104_call(), 0)
func_767_call = mod.get_global_var('func_767')
func_770_call = mutated_mod.get_global_var('func_770')
call_3865 = relay.TupleGetItem(func_767_call(relay.reshape(call_3853.astype('int8'), [15, 9, 11])), 0)
call_3866 = relay.TupleGetItem(func_770_call(relay.reshape(call_3853.astype('int8'), [15, 9, 11])), 0)
const_3867 = relay.const([[[True,False,False,False,True,False,True,True,False,False,False,True],[True,False,True,True,True,True,True,False,False,True,True,False],[False,False,False,True,False,True,True,True,True,True,False,False],[True,True,False,True,True,False,False,True,False,False,False,False]],[[True,True,False,False,True,True,False,True,False,False,False,False],[True,False,False,False,True,False,True,True,True,True,False,False],[True,True,True,True,True,False,True,False,True,False,False,False],[True,False,False,True,True,False,False,False,False,False,True,False]],[[False,False,True,True,True,True,True,False,False,True,True,True],[True,True,False,False,True,False,True,False,True,True,False,False],[True,False,False,False,False,True,False,False,True,True,True,False],[False,False,False,True,True,False,False,False,True,False,True,False]]], dtype = "bool")#candidate|3867|(3, 4, 12)|const|bool
bop_3868 = relay.mod(call_3825.astype('float64'), relay.reshape(const_3867.astype('float64'), relay.shape_of(call_3825))) # shape=(3, 4, 12)
bop_3871 = relay.mod(call_3826.astype('float64'), relay.reshape(const_3867.astype('float64'), relay.shape_of(call_3826))) # shape=(3, 4, 12)
output = relay.Tuple([call_3829,const_3830,call_3840,var_3841,call_3853,call_3863,call_3865,bop_3868,])
output2 = relay.Tuple([call_3831,const_3830,call_3842,var_3841,call_3854,call_3864,call_3866,bop_3871,])
func_3879 = relay.Function([var_3841,], output)
mod['func_3879'] = func_3879
mod = relay.transform.InferType()(mod)
mutated_mod['func_3879'] = func_3879
mutated_mod = relay.transform.InferType()(mutated_mod)
var_3880 = relay.var("var_3880", dtype = "float64", shape = (275,))#candidate|3880|(275,)|var|float64
func_3879_call = mutated_mod.get_global_var('func_3879')
call_3881 = func_3879_call(var_3880)
output = call_3881
func_3882 = relay.Function([var_3880], output)
mutated_mod['func_3882'] = func_3882
mutated_mod = relay.transform.InferType()(mutated_mod)
const_3898 = relay.const([[[False,False,True,False,False,True,True,True,True,True,True,True,False,False,True,True]],[[True,False,True,True,True,True,False,True,True,True,False,False,True,True,False,True]],[[True,True,True,False,True,True,True,False,False,False,True,False,False,False,True,False]],[[False,False,True,True,False,True,True,True,False,True,True,True,True,True,True,False]],[[False,False,False,True,True,True,True,False,True,False,False,False,False,False,False,False]],[[False,True,False,False,False,True,True,True,False,False,False,True,True,True,False,False]],[[False,False,True,True,False,True,True,True,True,False,True,False,False,True,False,False]],[[False,False,True,True,True,False,False,False,True,False,True,False,False,True,False,False]],[[False,False,True,False,True,True,True,False,True,True,False,True,False,True,True,True]],[[True,False,False,True,True,False,True,False,False,False,False,False,False,True,False,False]],[[True,False,False,False,True,True,False,False,False,True,True,True,False,False,False,True]],[[True,False,False,False,False,True,False,False,False,False,True,False,True,True,False,False]],[[True,False,False,False,True,True,False,False,False,True,True,False,False,True,True,True]],[[True,False,True,True,True,True,True,True,True,False,True,True,False,True,True,True]],[[True,False,False,True,True,False,True,True,False,False,True,False,True,False,True,False]],[[False,False,True,False,True,False,True,False,True,True,True,True,False,True,False,False]]], dtype = "bool")#candidate|3898|(16, 1, 16)|const|bool
const_3899 = relay.const([[[True,False,True,False,True,True,False,False,True,True,False,False,True,True,False,False],[True,True,False,False,True,True,True,True,False,False,False,True,False,True,True,True],[True,False,True,False,True,True,False,False,False,False,False,True,True,False,True,False],[True,True,True,True,True,False,False,True,False,False,False,False,True,False,True,False],[False,False,False,False,True,False,False,True,False,True,False,False,True,True,False,True],[True,True,False,False,False,False,True,False,False,False,True,True,False,False,True,False],[True,True,False,False,True,True,False,True,False,False,True,True,False,False,False,True],[True,False,True,True,False,False,False,False,False,True,True,False,True,False,True,False],[True,True,True,False,False,True,False,False,True,True,False,True,True,False,False,True],[True,True,False,True,False,False,False,False,True,True,True,True,False,False,True,True],[True,False,False,False,True,False,False,True,True,False,False,True,True,True,False,False],[False,False,True,False,True,True,True,False,True,False,True,True,False,True,False,True]],[[True,False,True,True,False,False,False,False,False,False,True,True,True,True,True,False],[True,True,False,False,False,True,True,True,True,False,False,True,True,True,True,True],[True,False,False,False,False,False,False,True,False,True,False,False,False,False,False,True],[True,False,False,True,False,True,True,True,True,True,True,True,False,False,False,False],[False,False,False,True,False,False,False,False,True,False,False,True,False,False,False,True],[True,False,True,True,True,False,False,True,True,True,False,False,True,False,False,False],[False,False,True,False,False,True,False,True,True,True,False,False,True,False,True,False],[True,False,True,False,False,False,True,False,True,True,False,True,True,False,True,True],[False,False,True,False,True,False,True,False,True,True,False,False,True,False,True,False],[False,False,True,True,False,False,True,False,False,True,True,True,True,False,True,True],[False,False,True,True,False,False,True,True,True,False,False,False,False,True,True,False],[True,False,True,False,False,False,False,False,True,True,False,False,True,True,True,True]],[[True,False,False,False,False,True,True,True,True,True,False,True,False,True,False,False],[True,True,False,True,False,False,False,True,True,False,False,False,True,True,True,False],[False,True,False,False,False,False,False,False,True,False,True,False,True,True,False,False],[True,False,True,True,False,True,False,True,True,False,True,False,False,False,True,False],[True,True,False,True,True,False,True,True,False,True,True,True,False,True,True,True],[True,True,False,True,False,True,False,False,True,True,False,True,True,True,True,False],[True,False,True,False,False,True,True,True,False,False,False,False,True,False,False,False],[True,False,True,True,True,True,True,True,False,False,False,True,True,False,True,False],[False,True,True,False,False,False,True,False,True,False,False,False,False,False,True,True],[True,False,False,False,False,False,True,False,False,False,False,True,False,True,False,False],[False,True,False,False,True,False,False,False,False,True,True,False,True,False,True,False],[False,True,True,False,True,False,True,True,False,True,True,False,False,True,False,True]],[[False,True,True,True,True,False,False,True,True,True,True,False,True,False,True,True],[True,False,False,True,False,True,False,True,False,True,True,False,False,False,True,False],[True,True,False,False,True,False,True,False,True,False,False,False,False,True,True,True],[True,True,False,False,False,True,True,False,False,False,True,True,False,False,True,True],[True,True,True,False,True,False,False,False,False,True,False,False,False,False,False,False],[True,False,False,False,True,True,False,False,True,True,True,False,False,False,True,True],[False,True,False,True,True,False,False,False,True,False,False,False,False,False,False,False],[True,False,False,False,True,False,False,False,False,True,False,False,False,False,True,False],[True,True,True,False,False,True,False,True,False,True,True,False,True,True,False,False],[True,False,True,False,True,True,True,True,True,True,True,True,True,False,True,False],[False,False,True,False,False,True,True,False,False,True,False,False,False,True,False,False],[True,True,False,False,True,True,True,False,True,False,True,False,True,False,True,True]],[[False,False,True,False,True,False,False,False,True,True,False,False,False,False,False,True],[False,False,False,True,False,True,True,True,False,False,True,True,False,False,False,False],[False,True,True,False,True,True,False,True,False,False,True,False,False,True,False,False],[True,False,True,True,True,False,False,True,False,False,False,False,False,False,True,True],[True,False,True,True,True,True,False,False,True,True,False,True,False,False,False,True],[False,True,True,False,False,True,True,False,True,False,True,False,False,False,True,False],[False,False,True,True,True,True,True,False,False,False,True,False,False,True,True,True],[True,False,True,True,False,False,True,True,False,False,True,True,False,False,True,False],[False,False,False,True,True,True,True,True,True,True,True,False,False,False,True,True],[True,False,False,True,False,False,False,True,False,False,False,True,False,True,True,True],[True,True,False,False,True,False,True,False,True,False,False,True,False,True,True,True],[True,True,False,False,True,True,True,False,True,True,True,True,False,False,False,True]],[[False,True,True,True,True,False,True,False,False,False,True,False,True,False,False,True],[False,False,True,True,True,False,True,False,True,False,False,True,True,False,False,True],[True,True,False,False,True,True,False,True,True,False,True,True,False,True,False,False],[False,True,False,True,True,True,False,False,False,False,True,True,False,True,False,False],[False,False,False,True,True,True,False,True,True,True,False,True,True,False,False,True],[True,False,False,False,True,False,False,True,False,True,False,True,False,False,True,False],[False,True,True,False,False,True,True,True,False,True,True,True,True,True,False,False],[True,True,False,False,True,False,False,False,True,False,True,True,True,False,True,True],[True,False,True,False,True,False,True,True,True,False,True,False,True,True,False,False],[False,False,True,False,False,True,False,True,True,True,False,False,True,True,False,False],[True,True,False,False,False,False,False,True,False,True,False,False,False,False,False,True],[True,True,True,True,False,True,True,False,False,True,False,True,True,False,True,False]],[[False,False,True,False,False,True,True,False,False,True,False,False,False,True,True,True],[False,False,False,True,True,True,True,True,True,True,False,False,False,False,False,False],[False,True,False,False,False,True,False,False,True,True,True,True,False,False,False,False],[True,False,True,False,False,False,False,True,False,False,True,False,False,True,False,False],[True,False,False,True,True,True,False,False,False,True,True,False,True,True,False,False],[False,False,True,False,False,True,True,False,True,False,False,False,True,False,False,False],[False,True,False,False,False,False,False,False,True,False,False,False,True,False,True,True],[False,False,True,True,True,False,True,False,False,False,False,False,False,True,False,True],[False,False,True,False,False,True,False,True,True,False,False,True,False,True,False,True],[True,False,False,False,False,True,False,True,True,True,True,False,False,True,True,False],[False,False,False,False,True,False,False,True,False,False,False,False,True,False,True,False],[False,True,False,True,True,False,False,False,True,True,False,True,False,True,True,False]],[[True,True,True,True,True,True,False,True,True,False,False,False,False,True,False,True],[True,False,False,False,False,False,False,False,True,True,True,True,False,True,False,False],[False,True,True,False,False,True,True,True,True,True,True,True,True,True,False,False],[True,False,False,True,False,False,True,True,True,True,True,False,False,True,False,False],[False,True,False,False,False,False,True,True,True,False,False,False,True,True,False,False],[True,False,True,False,True,True,True,False,False,False,False,False,True,False,False,True],[True,True,True,True,True,False,False,False,False,True,True,True,False,True,True,True],[False,True,True,True,False,True,True,False,True,False,False,True,False,False,False,False],[True,False,True,False,False,False,True,True,True,False,False,True,True,False,False,True],[True,False,False,True,True,False,True,False,False,True,True,False,True,False,False,True],[False,False,True,False,False,False,True,True,False,False,False,False,False,False,True,True],[False,False,False,True,False,True,False,False,False,True,False,True,True,True,False,True]],[[True,False,False,True,False,True,False,True,True,False,True,True,False,False,False,True],[False,False,False,False,True,False,False,True,False,True,True,True,False,True,True,True],[True,True,False,False,False,False,True,False,False,False,True,False,False,False,True,True],[False,False,True,False,False,False,True,False,True,False,False,True,False,True,False,True],[False,False,True,False,False,False,False,False,False,False,False,True,False,False,False,False],[False,True,False,False,True,False,True,False,False,True,True,False,False,True,False,False],[True,True,False,True,False,True,True,False,True,False,True,True,False,True,True,False],[True,False,False,False,False,True,True,False,False,False,True,False,False,True,False,True],[False,True,True,False,False,False,True,True,False,False,False,False,False,True,False,True],[True,True,True,True,False,False,False,True,True,True,True,True,False,False,False,False],[True,True,True,True,False,False,False,False,False,False,True,False,True,True,True,True],[False,True,False,True,True,False,False,False,True,True,True,True,True,False,False,False]],[[True,True,True,True,True,True,False,True,True,True,False,True,False,True,False,True],[False,False,False,False,True,False,False,False,True,False,False,True,False,False,True,True],[True,True,True,False,False,True,True,False,False,True,True,False,True,True,True,True],[True,True,True,False,True,False,True,True,False,True,False,False,True,True,True,False],[False,False,False,True,True,True,True,True,True,False,False,False,True,True,True,False],[True,True,True,False,True,False,True,True,True,True,True,False,True,False,False,True],[True,False,False,False,True,True,False,False,True,False,False,False,True,False,True,False],[True,False,True,False,False,False,True,True,False,False,True,True,False,True,False,True],[True,True,False,False,False,False,True,False,False,True,False,True,True,True,False,False],[True,True,False,True,True,True,False,True,True,True,False,False,False,True,True,True],[False,True,False,False,True,True,False,True,False,True,True,False,False,True,False,False],[False,True,True,True,False,False,True,False,True,True,False,False,False,True,True,False]],[[True,True,True,False,False,True,False,True,False,True,True,True,False,True,True,False],[False,False,True,True,False,False,True,False,False,True,False,False,False,True,True,True],[True,False,False,True,True,False,False,False,True,True,True,True,True,False,True,True],[False,False,False,True,True,True,True,True,False,True,True,True,False,False,False,True],[False,False,True,False,False,True,False,True,True,True,False,False,True,True,True,True],[False,False,False,True,True,True,False,False,False,True,True,True,False,True,False,False],[False,True,False,False,True,False,False,False,True,False,False,False,False,True,False,False],[True,False,True,True,False,True,True,False,False,False,True,False,True,False,True,True],[True,True,False,False,False,False,False,True,False,False,False,False,False,False,False,True],[False,True,False,False,False,True,True,True,True,False,True,True,False,False,False,False],[False,False,False,False,False,True,True,True,True,True,True,True,True,False,True,False],[True,True,False,False,True,True,True,False,False,False,True,False,True,False,False,True]],[[False,True,True,True,False,False,False,True,False,True,True,True,True,False,True,True],[True,False,True,False,True,False,True,True,False,False,False,True,False,False,False,True],[True,True,False,True,False,False,True,False,True,False,True,True,False,True,False,True],[True,True,False,False,True,True,False,True,True,False,True,False,False,True,True,False],[True,True,True,True,True,False,True,False,False,False,True,False,True,True,False,False],[False,False,True,True,True,True,True,False,True,False,False,True,True,True,True,False],[False,True,True,True,True,False,False,False,True,True,False,False,True,False,True,True],[False,False,True,True,True,False,False,False,False,False,True,True,False,True,False,False],[False,True,False,True,False,False,True,True,True,False,True,False,False,False,False,True],[False,True,False,True,True,False,True,True,True,True,False,True,False,False,True,False],[False,True,True,False,True,True,True,True,True,False,True,True,True,True,False,True],[False,True,True,True,True,False,False,False,True,True,True,True,True,True,True,True]],[[False,True,True,False,False,False,True,True,True,False,False,False,False,True,True,False],[False,False,False,True,True,False,False,False,True,True,False,True,False,True,False,True],[False,False,True,False,False,False,True,True,False,False,True,False,True,True,True,True],[True,True,False,False,True,False,True,True,False,True,False,False,False,False,True,True],[False,False,True,True,False,True,False,True,True,False,True,False,True,False,True,False],[True,True,True,True,False,False,False,False,True,False,False,True,False,False,False,True],[False,False,False,True,True,False,False,False,False,True,False,True,False,True,False,True],[False,True,False,False,True,False,False,False,False,True,True,True,True,False,False,True],[False,False,False,True,False,False,True,True,False,True,False,False,False,False,True,False],[True,False,True,False,False,True,False,True,False,False,False,True,False,False,True,False],[False,True,True,False,False,False,True,False,True,False,False,True,False,True,True,False],[True,False,False,False,False,True,True,False,True,True,False,True,True,True,True,True]],[[False,False,True,False,False,True,False,True,True,False,False,True,False,True,True,True],[False,False,True,False,True,False,False,False,True,False,True,False,True,False,True,False],[False,True,False,False,False,True,True,True,True,True,False,True,False,False,True,False],[False,False,False,True,True,True,True,False,True,False,True,True,False,False,True,False],[True,True,False,True,False,True,False,False,False,True,True,False,True,False,True,True],[True,True,False,False,False,True,False,False,True,True,True,True,False,False,True,True],[True,True,True,False,False,True,False,False,False,True,False,True,False,True,False,True],[True,False,True,True,True,True,True,False,True,False,True,True,False,False,False,False],[True,True,False,True,True,False,True,True,True,False,True,True,True,True,False,False],[False,True,False,True,True,True,False,False,False,True,True,False,False,True,False,True],[True,False,True,False,False,False,True,False,False,False,True,False,False,False,False,False],[True,False,True,False,False,True,False,False,True,True,False,True,True,True,False,False]],[[True,True,False,False,False,True,False,False,False,True,False,False,True,True,False,True],[True,True,True,True,True,False,True,False,True,False,True,False,True,True,False,False],[True,False,False,True,False,False,True,False,False,False,False,True,True,False,False,False],[True,False,False,False,False,True,False,True,True,True,False,False,True,False,True,False],[True,True,True,True,False,False,True,False,False,True,True,True,True,False,False,False],[False,False,True,False,True,True,True,True,True,True,True,False,False,False,False,True],[False,True,False,False,True,True,False,False,False,True,True,True,True,True,True,True],[True,False,True,True,False,True,False,True,False,True,True,False,False,True,True,False],[False,True,False,True,False,False,True,False,True,True,True,True,False,True,False,False],[True,False,True,True,True,True,False,True,False,True,False,False,False,True,False,False],[True,False,False,True,False,True,False,False,False,True,True,True,False,True,True,False],[True,False,True,False,True,False,False,True,True,False,False,False,True,False,False,False]],[[True,False,False,True,False,False,True,False,True,False,True,False,False,False,False,True],[False,True,False,True,True,False,True,True,False,True,True,True,True,True,False,False],[False,False,False,False,False,True,False,True,False,False,True,False,False,True,True,True],[True,True,False,False,True,True,True,True,False,False,True,False,False,True,False,False],[True,False,False,True,False,False,False,False,False,False,False,True,True,True,False,False],[True,False,True,False,False,False,False,False,True,True,False,True,False,True,True,True],[True,True,False,True,True,False,True,False,False,True,True,False,True,True,False,False],[True,True,False,True,False,False,False,True,True,False,False,True,True,True,False,True],[False,False,False,True,True,False,True,True,True,False,True,False,True,False,False,True],[True,True,False,True,True,False,False,True,True,False,False,False,True,True,True,True],[True,False,True,False,False,False,False,True,True,True,False,False,True,False,True,True],[True,False,False,True,False,True,False,True,True,False,False,True,True,True,False,True]]], dtype = "bool")#candidate|3899|(16, 12, 16)|const|bool
bop_3900 = relay.logical_or(const_3898.astype('bool'), const_3899.astype('bool')) # shape=(16, 12, 16)
output = relay.Tuple([bop_3900,])
output2 = relay.Tuple([bop_3900,])
func_3903 = relay.Function([], output)
mod['func_3903'] = func_3903
mod = relay.transform.InferType()(mod)
output = func_3903()
func_3904 = relay.Function([], output)
mutated_mod['func_3904'] = func_3904
mutated_mod = relay.transform.InferType()(mutated_mod)
var_3936 = relay.var("var_3936", dtype = "float64", shape = ())#candidate|3936|()|var|float64
var_3937 = relay.var("var_3937", dtype = "float64", shape = (14, 1))#candidate|3937|(14, 1)|var|float64
bop_3938 = relay.floor_divide(var_3936.astype('float64'), var_3937.astype('float64')) # shape=(14, 1)
func_2298_call = mod.get_global_var('func_2298')
func_2299_call = mutated_mod.get_global_var('func_2299')
call_3950 = relay.TupleGetItem(func_2298_call(), 0)
call_3951 = relay.TupleGetItem(func_2299_call(), 0)
func_3627_call = mod.get_global_var('func_3627')
func_3631_call = mutated_mod.get_global_var('func_3631')
const_3953 = relay.const([1,-6,2,10,3,9,6,8,-4,3,-6,-4,-8,-2,-1,2,-5,-5,-10,4,2,1,-7,-10,-2,8,9,-2,-2,-7,3,7,8,7,-6,1,-4,-5,-1,-4,5,-1,-4,3,-7,-9,10,2,-7,-5,-10,10,-1,7,-10,-7,2,9,-2,2,-3,-2,8,-2,-3,-7,-7,6,-3,-2,-3,6,-6,1,-9,9,-3,-6,7,5,7,2,10,2,3,6,4,1,-9,9,-3,-2,1,9,-8,-7,-8,-10,1,4,7,-9,-4,-10,3,2,8,-6,6,7,10,10,5,8,4,-7,4,4,10,-10,5,-1,-10,4,-2,7,-4,-2,8,2,-2,5,-9,-3,-4,2,-6,4,1,9,10,-7,-6,-3,9,-6,-6,-8,-3,4,3,-1,-2,-7,5,-8,6,7,-2,-4,-6,1,-5,-9,-9,8,-2,3,3,6,-7,-3,10,3,-2,3,1,-2,-3,5,-5,-4,-3,2,8,-6,-2,8,-8,-4,-9,-8,10,-7,10,-5,-8,-3,-7,-6,3,-1,-8,-9,-1,-7,-9,-1,5,-2,-1,-2,-5,9,-10,-8,-9,-7,8,-5,8,-9,7,8,9,8,4,-2,-5,-2,8,-5,6,5,-10,3,2,-7,-6,-2,-4,7,-2,-8,10,1,7,-4,-10,9,9,9,7,-2,-10,6,-9,-1,-3,-6,-8,-2,5,-10,-7,6,-4,-7,3,-2,6,-7,2,-5,-9,-8,10,-4,8,-9,-4,8,9,6,7,-7,7,-9,3,4,7,-9,-3,-1,6,5,4,-7,-1,7,1,4,-7,7,-8,-2,-6,-1,3,-2,-9,-8,-2,-10,-7,2,2,-8,-8,-8,7,-1,-10,-1,-2,3,-10,6,5,-5,-4,4,3,-4,-6,-7,-4,-3,-1,-9,-9,-6,-3,-1,10,-5,-2,-2,-1,-6,-1,-8,-5,1,-5,-9,-5,3,9,10,-1,6,4,-8,4,-9,-1,8,-10,-2,-1,1,-5,-4,10,6,9,-3,-9,7,7,6,5,-3,-5,9,-5,-2,5,-7,-1,4,-4,-2,-2,-6,-5,8,-10,-4,-6,-3,-5,3,2,-5,-4,1,-8,3,-2,-8,3,8,6,8,-6,5,5,-1,10,8,-7,-4,-3,-4,5,-3,-9,-2,6,-9,1,6,-5,-3,-3,9,-1,4,9,9,1,2,7,-4,-6,-5,-10,4,-8,-10,-7,10,1,2,-3,4,4,-3,-2,2,-2,8,8,9,9,6,8,6,1,9,-8,7,9,-3,-6,10,1,-4,-9,6,2,-6,9,2,-9,-5,6,-8,-1,7,-5,-7,-4,-7,4,3,-7,-10,10,-6,5,-5,-3,-7,6,-2,-10,7,-2,8,-10,-3,9,-3,7,9,1,4,-9,-8,2,5,-1,-5,9,-10,-4,5,-8,6,8,-9,1,4,-4,-6,4,-10,6,-9,-1,-5,2,10,-8,5,-2,-6,-8,5,-3,-8,-2,4,-6,-10,-2,3,5,-3,-2,1,-5,-6,-9,4,-10,9,-3,-10,5,-7,7,10,5,-6,-6,-8,-6,-1,-5,-7,7,9,-10,-10,-8,-4,7,6,-1,-9,-3,-5,3,-6,-1,7,10,10,4,-4,7,7,4,-5,8,-10,-3,10,3,8,8,3,-9,7,-3,8,-1,-5,10,1,-6,-1,-8,-6,-8,6,-10,-3,2,-4,2,-6,-7,-9,-10,5,1,-6,-6,1,-9,-9,6,7,1,-4,1,8,-2,5,7,-10,3,-9,-10,-2,-7,-5,-2,-2,6,-7,-7,-7,2,-9,-1,9,-4,-4,1,3,-8,3,-3,-2,-1,5,4,5,3,4,4,7,-4,-4,8,4,-6,-5,-4,-9,8,2,-8,-7,-4,5,4,10,5,-4,-1,-9,9,-9,3,-7,4,2,-10,-2,-9,4,3,3,8,-2,-8,-10,-7,10,-7,-10,10,-2,8,-5,-3,2,3,-3,-3,-3,-6,-9,-2,-2,10,9,-1,-10,-2,-7,6,-2,-5,3,10,10,-9,-10,2,7,3,3,6,4,-8,5,-2,-4,-2,4,1,9,-7,-10,-10,-2,-2,6,8,-7,4,-2,-9,-3,1,2,-5,3,-9,-10,9,-9,-7,-10,8,1,9,8,10,-8,1,5,2,-8,1,7,10,-3,-4,1,-2,4,6,9,7,6,-1,4,1,2,1,-3,7,9,-1,-3,-3,-4,3,6,5,8,5,7,5,9,1,7,8,-1,-6,-3,5,9,-5,8,7,5,-9,9,4,-9,7,-4,10,7,-2,-7,10,-5,-1,4,-8,-1,1,-10,-5,1,5,-1,1,-2,-8,9,5,2,6,3,3,2,3,1,3,3,7,2,2,2,3,10,5,3,6,-7,1,4,-1,3,9,1,-10,4,7,3,-7,-7,5,-4,-5,1,-2,1,4,-7,-9,-8,3,2,8,-1,10,-9,-9,5,6,1,3,-1,-5,-7,-9,3,9,-4,-5,-3,-5,10,-5,-8,-3,9,1,2,-8,-10,5,1,-3,10,9,10,4,-8,7,10,-6,-3,-8,-5,-5,5,10,-4,2,10,-7,-5,-2,-10,10,-6,-8,7,5,2,9,-2,5,2,9,-9,4,-7,-1,-3,6,9,-10,8,8,-7,-7,-6,6,10,-3,2,-6,-2,-6,8,-6,-4,5,4,-1,-2,10,1,-9,-1,-1,-8,4,4,6,-1,-2,1,-8,3,-5,-8,-3,3], dtype = "int32")#candidate|3953|(1024,)|const|int32
const_3954 = relay.const([-0.962380,5.021858,5.558851,3.298075,-8.611544,-9.264483,2.358894,8.146434,-7.062921,3.061983,2.008637,-2.431622,-0.402933,6.587003,-7.536425,-7.089311,3.436289,5.611904,8.890419,7.930622,0.556683,7.159176,-6.588025,-8.884836,2.152305,-9.188393,4.643394,8.162152,0.074245,0.472044,1.744365,-5.826098,0.066915,5.701264,5.554061,2.303355,-3.246486,1.240196,7.651400,2.861475,1.589865,-0.141775,2.490139,-2.107229,-9.256706,-3.097471,3.854161,-8.164552,-9.602439,2.322108,-4.505177,8.997582,-5.008976,8.800346,-3.515066,-4.894917,9.780076,9.966436,-6.842869,5.013874,0.917842,-0.781488,-8.529206,-9.460924,6.407678,-3.513014,-6.377900,-9.818742,7.321170,-7.863582,9.831115,3.490463,9.035144,3.461098,5.121120,-7.107430,-1.187346,1.682935,7.207006,4.555644,-1.618981,-0.413795,0.250839,1.951918,0.290338,3.576512,-0.003953,7.623362,1.148391,6.143979,5.238196,0.030315,-2.947460,-8.653983,-1.999106,-4.227695,-8.581758,1.427764,-0.342832,-6.449707,9.266827,-8.391747,-9.695615,7.004883,-4.918175,-2.584138,0.551761,3.186763,3.716587,2.600201,4.999884,-0.585615,5.499486,-3.223870,-4.993917,9.871475,-4.424050,8.372914,2.402305,-9.752540,8.215234,7.685786,-2.418519,-2.612979,-1.229002,-4.752180,-5.246741,3.901476,-8.452091,5.679315,-7.335010,-5.191478,-0.741735,-6.797788,3.466256,8.424946,3.209260,5.580050,7.569428,1.990905,8.413945,1.626582,-7.304129,2.051096,-7.825345,8.800193,3.201161,7.224132,5.670473,6.036406,-0.944612,7.932815,1.767016,-8.868323,6.198993,3.800228,0.342590,-7.472756,2.356651,-9.666992,-9.326706,6.286587,-7.739922,7.947408,-8.530503,-0.752757,9.442552,-0.598054,-9.161928,5.469831,8.965858,-2.873012,3.870772,-5.637397,1.209003,9.487320,0.548453,0.630495,8.134937,4.110841,-0.331959,3.090855,-3.323793,-7.188727,-8.624973,-9.375362,-5.634606,-7.758723,0.997776,1.987810,4.047826,-3.857285,1.975362,-0.179162,-8.357736,-9.968184,7.244218,-2.641049,8.727642,-8.142951,-3.116087,8.547003,-1.657170,-9.576539,9.538278,-4.971324,-5.073644,7.353503,-6.892886,9.543510,9.293775,0.272977,8.997639,-0.753969,8.099845,-6.452889,8.595542,-1.465786,2.294643,6.916033,-0.325737,8.939905,-7.914087,-5.831608,1.263906,2.523576,6.223233,2.692857,-7.641944,-7.664671,4.347938,6.129590,-5.730909,-4.434786,8.477191,-5.649053,6.916588,-2.364446,-0.790758,-1.613174,-0.837830,7.818132,8.233111,-5.011331,-2.635736,6.482286,9.508580,7.976873,-6.917235,0.669290,3.341771,-1.997031,-4.733070,6.305764,5.638295,-5.096236,2.161646,-6.071717,-0.136745,1.779414,5.409706,-8.492784,1.370237,-2.142542,5.858772,3.935102,-2.299414,6.277508,0.590885,3.994684,0.192518,-0.254970,9.882868,7.570417,-3.667860], dtype = "float64")#candidate|3954|(275,)|const|float64
call_3952 = relay.TupleGetItem(func_3627_call(relay.reshape(const_3953.astype('int32'), [8, 16, 8]), relay.reshape(const_3954.astype('float64'), [11, 25]), ), 5)
call_3955 = relay.TupleGetItem(func_3631_call(relay.reshape(const_3953.astype('int32'), [8, 16, 8]), relay.reshape(const_3954.astype('float64'), [11, 25]), ), 5)
func_859_call = mod.get_global_var('func_859')
func_861_call = mutated_mod.get_global_var('func_861')
call_3961 = func_859_call()
call_3962 = func_859_call()
func_546_call = mod.get_global_var('func_546')
func_547_call = mutated_mod.get_global_var('func_547')
call_3970 = relay.TupleGetItem(func_546_call(), 1)
call_3971 = relay.TupleGetItem(func_547_call(), 1)
func_613_call = mod.get_global_var('func_613')
func_615_call = mutated_mod.get_global_var('func_615')
call_3980 = relay.TupleGetItem(func_613_call(relay.reshape(const_3954.astype('float64'), [5, 11, 5])), 2)
call_3981 = relay.TupleGetItem(func_615_call(relay.reshape(const_3954.astype('float64'), [5, 11, 5])), 2)
output = relay.Tuple([bop_3938,call_3950,call_3952,const_3953,const_3954,call_3961,call_3970,call_3980,])
output2 = relay.Tuple([bop_3938,call_3951,call_3955,const_3953,const_3954,call_3962,call_3971,call_3981,])
func_3983 = relay.Function([var_3936,var_3937,], output)
mod['func_3983'] = func_3983
mod = relay.transform.InferType()(mod)
var_3984 = relay.var("var_3984", dtype = "float64", shape = ())#candidate|3984|()|var|float64
var_3985 = relay.var("var_3985", dtype = "float64", shape = (14, 1))#candidate|3985|(14, 1)|var|float64
output = func_3983(var_3984,var_3985,)
func_3986 = relay.Function([var_3984,var_3985,], output)
mutated_mod['func_3986'] = func_3986
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2481_call = mod.get_global_var('func_2481')
func_2483_call = mutated_mod.get_global_var('func_2483')
call_4017 = relay.TupleGetItem(func_2481_call(), 1)
call_4018 = relay.TupleGetItem(func_2483_call(), 1)
output = relay.Tuple([call_4017,])
output2 = relay.Tuple([call_4018,])
func_4019 = relay.Function([], output)
mod['func_4019'] = func_4019
mod = relay.transform.InferType()(mod)
output = func_4019()
func_4020 = relay.Function([], output)
mutated_mod['func_4020'] = func_4020
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1874_call = mod.get_global_var('func_1874')
func_1875_call = mutated_mod.get_global_var('func_1875')
call_4021 = relay.TupleGetItem(func_1874_call(), 2)
call_4022 = relay.TupleGetItem(func_1875_call(), 2)
output = relay.Tuple([call_4021,])
output2 = relay.Tuple([call_4022,])
func_4025 = relay.Function([], output)
mod['func_4025'] = func_4025
mod = relay.transform.InferType()(mod)
mutated_mod['func_4025'] = func_4025
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4025_call = mutated_mod.get_global_var('func_4025')
call_4026 = func_4025_call()
output = call_4026
func_4027 = relay.Function([], output)
mutated_mod['func_4027'] = func_4027
mutated_mod = relay.transform.InferType()(mutated_mod)
func_546_call = mod.get_global_var('func_546')
func_547_call = mutated_mod.get_global_var('func_547')
call_4097 = relay.TupleGetItem(func_546_call(), 0)
call_4098 = relay.TupleGetItem(func_547_call(), 0)
func_2091_call = mod.get_global_var('func_2091')
func_2092_call = mutated_mod.get_global_var('func_2092')
call_4112 = relay.TupleGetItem(func_2091_call(), 0)
call_4113 = relay.TupleGetItem(func_2092_call(), 0)
output = relay.Tuple([call_4097,call_4112,])
output2 = relay.Tuple([call_4098,call_4113,])
func_4114 = relay.Function([], output)
mod['func_4114'] = func_4114
mod = relay.transform.InferType()(mod)
mutated_mod['func_4114'] = func_4114
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4114_call = mutated_mod.get_global_var('func_4114')
call_4115 = func_4114_call()
output = call_4115
func_4116 = relay.Function([], output)
mutated_mod['func_4116'] = func_4116
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1266_call = mod.get_global_var('func_1266')
func_1267_call = mutated_mod.get_global_var('func_1267')
call_4130 = func_1266_call()
call_4131 = func_1266_call()
var_4134 = relay.var("var_4134", dtype = "bool", shape = (3, 4, 12))#candidate|4134|(3, 4, 12)|var|bool
bop_4135 = relay.logical_xor(call_4130.astype('uint32'), relay.reshape(var_4134.astype('uint32'), relay.shape_of(call_4130))) # shape=(3, 4, 12)
bop_4138 = relay.logical_xor(call_4131.astype('uint32'), relay.reshape(var_4134.astype('uint32'), relay.shape_of(call_4131))) # shape=(3, 4, 12)
output = bop_4135
output2 = bop_4138
func_4141 = relay.Function([var_4134,], output)
mod['func_4141'] = func_4141
mod = relay.transform.InferType()(mod)
mutated_mod['func_4141'] = func_4141
mutated_mod = relay.transform.InferType()(mutated_mod)
var_4142 = relay.var("var_4142", dtype = "bool", shape = (3, 4, 12))#candidate|4142|(3, 4, 12)|var|bool
func_4141_call = mutated_mod.get_global_var('func_4141')
call_4143 = func_4141_call(var_4142)
output = call_4143
func_4144 = relay.Function([var_4142], output)
mutated_mod['func_4144'] = func_4144
mutated_mod = relay.transform.InferType()(mutated_mod)
var_4207 = relay.var("var_4207", dtype = "float32", shape = (14, 12))#candidate|4207|(14, 12)|var|float32
uop_4208 = relay.asinh(var_4207.astype('float32')) # shape=(14, 12)
func_1123_call = mod.get_global_var('func_1123')
func_1125_call = mutated_mod.get_global_var('func_1125')
call_4213 = relay.TupleGetItem(func_1123_call(), 1)
call_4214 = relay.TupleGetItem(func_1125_call(), 1)
func_3114_call = mod.get_global_var('func_3114')
func_3116_call = mutated_mod.get_global_var('func_3116')
call_4216 = relay.TupleGetItem(func_3114_call(), 0)
call_4217 = relay.TupleGetItem(func_3116_call(), 0)
output = relay.Tuple([uop_4208,call_4213,call_4216,])
output2 = relay.Tuple([uop_4208,call_4214,call_4217,])
func_4223 = relay.Function([var_4207,], output)
mod['func_4223'] = func_4223
mod = relay.transform.InferType()(mod)
var_4224 = relay.var("var_4224", dtype = "float32", shape = (14, 12))#candidate|4224|(14, 12)|var|float32
output = func_4223(var_4224)
func_4225 = relay.Function([var_4224], output)
mutated_mod['func_4225'] = func_4225
mutated_mod = relay.transform.InferType()(mutated_mod)
var_4237 = relay.var("var_4237", dtype = "float32", shape = (4, 3))#candidate|4237|(4, 3)|var|float32
var_4238 = relay.var("var_4238", dtype = "float32", shape = (4, 3))#candidate|4238|(4, 3)|var|float32
bop_4239 = relay.multiply(var_4237.astype('float32'), relay.reshape(var_4238.astype('float32'), relay.shape_of(var_4237))) # shape=(4, 3)
output = bop_4239
output2 = bop_4239
func_4247 = relay.Function([var_4237,var_4238,], output)
mod['func_4247'] = func_4247
mod = relay.transform.InferType()(mod)
var_4248 = relay.var("var_4248", dtype = "float32", shape = (4, 3))#candidate|4248|(4, 3)|var|float32
var_4249 = relay.var("var_4249", dtype = "float32", shape = (4, 3))#candidate|4249|(4, 3)|var|float32
output = func_4247(var_4248,var_4249,)
func_4250 = relay.Function([var_4248,var_4249,], output)
mutated_mod['func_4250'] = func_4250
mutated_mod = relay.transform.InferType()(mutated_mod)
var_4270 = relay.var("var_4270", dtype = "uint64", shape = (3, 16, 12))#candidate|4270|(3, 16, 12)|var|uint64
const_4271 = relay.const([[[5,-10,1,-10,1,-1,-4,1,-4,6,2,-1],[-2,-5,-5,4,10,2,3,2,-3,-3,3,-1],[-8,6,-8,-8,-1,9,-1,7,-8,-5,-5,6],[-9,9,2,1,-6,3,6,-6,-6,5,9,-9],[5,7,10,-9,4,-10,-5,-8,8,7,-3,-2],[-10,-6,-3,6,-10,9,10,-10,-6,-3,-3,-4],[-2,-6,-5,-6,7,4,1,-9,4,-3,-6,9],[3,-4,2,-7,10,3,-2,-2,3,1,7,4],[-8,4,-8,-5,-4,7,-7,-10,8,4,-2,-2],[-4,8,-5,-1,-9,-6,-9,-10,-7,8,-1,-3],[-2,10,-3,1,-7,9,3,-4,6,-9,-8,7],[-6,-1,3,-8,1,3,2,1,4,1,9,-8],[-3,1,6,1,3,8,8,-5,4,4,1,-7],[-7,-2,2,-3,-9,-10,-4,-6,3,-7,2,9],[-9,3,-2,4,-7,-6,-6,-7,7,9,-8,-10],[-9,-1,8,-6,-7,-6,-9,6,5,-6,5,6]],[[-3,-3,8,-2,-2,-9,-7,7,5,-10,-2,-2],[-2,-7,-4,-9,6,7,-7,4,-4,-10,-9,4],[8,8,-2,-8,1,-9,8,5,2,-9,-3,-8],[5,9,-5,-8,6,-5,-8,-1,8,-7,2,2],[4,-2,-6,5,8,-5,-4,6,-1,-6,-3,10],[-1,-10,9,-4,5,1,6,-5,7,-5,-5,10],[-1,-4,5,6,3,6,9,-6,-8,8,-10,-8],[4,-7,-4,2,-3,-2,2,-4,-5,6,4,10],[6,6,10,-4,-7,3,6,-9,-6,9,10,-3],[-6,8,-1,-10,6,-5,-9,-5,10,10,-5,-6],[1,-9,9,-5,-8,-2,1,8,-9,-8,-3,-5],[-10,8,-5,6,-10,-6,-4,-3,-3,-3,-7,4],[5,-4,-4,1,5,9,4,5,-10,-2,-1,-9],[7,9,-7,2,6,10,5,5,-1,-2,-2,6],[8,-8,-2,-1,1,5,-2,9,2,-9,-3,9],[-1,-6,7,-4,-1,-6,-9,3,9,-7,-4,-1]],[[6,-3,4,-2,2,7,1,4,6,-6,-9,7],[7,-8,-2,7,-9,-6,2,-10,-7,4,10,1],[-10,-5,6,-4,7,1,-3,7,9,-6,5,-5],[-5,-10,7,-3,8,5,-1,6,2,-7,-6,-8],[-2,-5,-2,-9,7,4,-1,-10,-4,-5,-5,10],[8,4,-6,8,1,-2,4,-2,1,7,-2,2],[-4,-8,8,8,-7,-2,9,10,-3,-4,4,-8],[-1,-8,1,-6,9,-6,4,-6,8,-6,8,-6],[-8,8,6,10,10,-2,-10,-8,4,9,-7,1],[-1,-10,-2,-9,-7,-4,-2,2,-4,5,-3,-4],[-6,-5,8,-8,-4,9,5,8,-5,-4,-9,-1],[1,9,-10,10,-6,10,-2,4,-7,4,2,-3],[-8,-8,-3,2,-8,7,1,-5,-2,-2,3,2],[2,-1,10,3,-9,7,-1,-8,-7,6,-10,-7],[-8,-9,-9,-1,9,-5,-4,-6,-3,-8,1,5],[1,-8,-4,5,7,3,7,5,7,-4,2,7]]], dtype = "uint64")#candidate|4271|(3, 16, 12)|const|uint64
bop_4272 = relay.greater(var_4270.astype('bool'), relay.reshape(const_4271.astype('bool'), relay.shape_of(var_4270))) # shape=(3, 16, 12)
func_2133_call = mod.get_global_var('func_2133')
func_2134_call = mutated_mod.get_global_var('func_2134')
call_4275 = relay.TupleGetItem(func_2133_call(), 0)
call_4276 = relay.TupleGetItem(func_2134_call(), 0)
func_1114_call = mod.get_global_var('func_1114')
func_1116_call = mutated_mod.get_global_var('func_1116')
call_4281 = func_1114_call()
call_4282 = func_1114_call()
func_1114_call = mod.get_global_var('func_1114')
func_1116_call = mutated_mod.get_global_var('func_1116')
call_4284 = func_1114_call()
call_4285 = func_1114_call()
uop_4288 = relay.exp(var_4270.astype('float32')) # shape=(3, 16, 12)
const_4294 = relay.const([[[5.660271,0.962324,8.427299,8.350932,-1.085672,-8.761479,-1.824923,-5.350250,2.967698,7.800203,-7.419166,2.121871],[4.377256,-5.920313,-4.606664,-1.112562,-7.374270,-4.106600,3.144206,2.877391,5.146614,-3.192652,-1.619762,-8.554324],[2.603013,6.103014,2.706259,7.229053,-8.838603,-5.561245,4.878755,-1.797057,8.729481,-2.546964,6.667661,-7.708702],[4.223379,-5.175462,2.443681,3.628012,-7.040486,3.434409,5.736649,2.176859,-5.947674,5.671390,-7.638408,7.799399],[-2.776100,-7.263342,9.107394,-4.245757,3.250794,-8.243475,8.031734,7.516293,8.120207,4.057031,0.816375,-1.550118],[-3.008201,8.713735,9.317391,-0.097522,-6.300130,9.426692,-6.797804,1.984150,3.198960,-1.083614,1.299972,-6.801663],[-4.063877,-4.098992,-9.190290,9.264309,-3.061136,9.791713,-8.896566,5.241387,-6.897307,-2.499509,-1.476619,-2.178788],[-1.038875,-4.259736,-3.496575,-9.210588,-0.812570,-2.301777,6.764707,1.701147,1.486538,2.459243,5.939726,-7.771080],[-2.648871,-9.404607,-3.948138,-5.601126,3.603387,7.247894,3.541015,5.080630,-8.180954,5.032017,3.471972,1.777914],[5.612081,-3.230606,5.917478,7.168795,-5.271555,-3.308824,-1.432258,3.975405,3.502562,-5.966031,-8.238679,-1.532360],[9.236049,-5.142859,-4.649547,7.504405,-1.708212,-2.368059,7.906678,5.212059,1.153073,-9.844151,-2.426570,-0.960497],[-1.315484,9.473748,-0.448302,3.689016,9.137293,-7.283065,4.041599,3.788622,-8.714279,3.529729,9.732244,0.470531],[-7.421974,6.732728,7.138369,-3.120954,-0.621872,-8.006873,9.662216,-1.476795,8.470762,7.026994,9.557763,-4.444571],[-6.927162,3.244288,6.545786,2.043068,-7.726862,-6.122331,-0.857174,-1.491511,-5.000645,8.176010,-9.335477,-7.654565],[-2.360934,0.255197,6.255397,8.890955,6.232122,4.649154,4.262428,6.299481,9.714749,9.359110,-1.250903,-4.690979],[-7.247005,2.481738,-4.274077,-1.786713,3.663332,-5.145724,-4.058960,-0.567666,-1.345649,-4.546255,-0.671387,4.213380]],[[0.669301,4.658011,-0.297061,9.593497,3.605189,-9.284010,-9.938268,6.596952,-5.713873,-5.425669,0.772575,-9.968563],[7.699738,-5.844717,-8.895164,3.034137,-5.621142,-1.152003,5.043270,-4.992783,-6.350316,-9.669930,4.958330,-4.475521],[6.140215,-7.930942,6.150389,-6.533701,2.257673,9.204195,-7.124794,-8.144980,5.930129,-0.027565,-8.636922,-7.544946],[7.996656,5.387318,-7.067426,-9.200575,4.643722,-0.764798,7.795250,3.597386,2.009945,5.833732,4.567275,5.128202],[-1.084156,4.152439,-4.454482,0.706827,-8.959637,-7.394022,-4.173532,-5.079499,-9.764930,-5.678387,4.880589,-9.700749],[-7.771734,4.120397,8.283301,6.452190,-3.228473,-3.911906,-8.306702,-3.527509,3.488980,9.199910,8.027502,9.120091],[-9.785892,7.509450,9.840054,0.790734,3.531853,2.971264,4.663776,-3.720662,-0.803320,-7.749234,-4.464620,2.745494],[7.249802,3.309936,4.057280,-8.612842,6.823126,1.088137,-7.141730,-5.582177,2.484580,-0.912658,-8.260131,-8.190962],[-3.349017,3.619938,2.220588,-0.005748,0.870063,7.143971,-1.792952,2.254090,-0.577989,-6.200813,8.960626,-3.556526],[-3.874103,3.949221,-3.734021,5.364043,-3.372473,0.598490,-5.562675,-1.380996,-1.833947,-6.562326,-4.742945,-3.195584],[-4.507590,3.249714,5.919080,4.659730,-0.359817,3.704578,-9.600076,2.824538,8.654350,3.401757,-6.856915,-4.220689],[8.786213,4.570090,-4.257429,-5.842336,-0.812331,-9.116209,-7.332584,-0.187459,-7.631088,1.381217,-1.135050,6.789595],[9.434258,7.412746,-6.003874,-2.405492,-3.435169,6.024000,9.314293,-9.179963,3.068111,-8.395064,-0.338928,8.999520],[-3.040436,3.158182,7.253588,-8.045328,9.625292,0.698103,9.621376,-6.479036,6.269701,-6.598374,0.328504,4.687332],[1.379662,-4.581856,-8.831201,-4.242320,-9.938195,6.774951,-5.758555,7.191088,-2.654304,-5.985886,-7.083096,3.592624],[-7.242662,9.292468,-9.462432,5.544860,-8.764150,2.089061,8.061873,9.951031,-4.170035,0.993430,-1.815708,-3.371734]],[[6.448812,9.949340,1.442573,-7.452953,-1.283434,-1.931554,-7.389329,9.089192,2.229741,8.324455,-5.262621,7.040520],[6.178050,-5.847139,1.850030,-6.124761,8.824260,-8.949298,0.690604,-9.017710,-6.815715,-2.783647,-8.784900,2.037395],[9.743848,-8.327502,3.992568,-6.813564,4.806564,9.707634,9.625561,5.551464,8.802747,-7.512875,-1.047213,-6.086367],[3.699405,4.182490,-9.378941,4.402016,3.586686,-9.698442,0.024006,-0.186567,1.860665,3.297621,4.740650,6.015300],[2.708886,8.542461,-0.487774,-0.971790,3.364012,-6.686799,5.674969,6.217391,2.138578,3.055819,-9.928130,2.335943],[5.907308,-3.512818,-3.032060,0.454191,4.315907,0.203593,1.217789,3.974411,-1.636178,-9.726369,-6.767475,-6.122655],[8.455845,-4.908112,8.307668,1.802970,3.264286,-5.216004,3.639153,2.592536,-2.334336,9.162198,-2.659423,-0.017850],[-2.903719,-7.734676,-9.659497,-1.528795,4.919656,4.189816,6.350936,7.028188,4.869597,-3.399019,-0.059042,7.665956],[-5.163632,-9.163815,-3.090181,9.356626,1.297049,9.645661,4.340197,-2.202019,-9.398614,9.261925,-7.362833,-4.929709],[-3.028618,7.073779,-9.406081,-9.134125,0.601950,-0.645105,1.901964,-4.259928,3.942132,2.360109,6.470186,4.208758],[8.071628,9.242843,-3.186192,8.618028,-7.467759,0.976108,-0.173135,-9.210743,-3.828642,2.957177,-8.590977,-6.645681],[6.809745,-1.072425,2.315446,-7.051942,1.622221,2.998237,-3.563220,-5.623710,0.838277,2.226107,0.858587,1.036240],[-4.957090,-6.630572,-3.266696,8.689018,-2.603323,-5.580161,0.590435,-6.052474,8.447683,-1.318253,1.912186,-9.805177],[-5.281983,-4.939398,9.316539,4.946797,-5.667349,3.742602,7.668107,-5.897207,-6.812853,8.244309,1.641738,-0.942722],[0.900102,-5.304892,-2.749885,1.559475,1.549391,-6.180219,9.536647,-3.121022,9.042977,-0.846251,-0.943484,-0.784652],[-6.580135,7.920947,-8.840770,-3.616356,-0.498292,-6.054980,8.210027,-3.741162,0.178337,-0.337618,-2.209240,-5.950421]]], dtype = "float32")#candidate|4294|(3, 16, 12)|const|float32
bop_4295 = relay.minimum(uop_4288.astype('uint16'), relay.reshape(const_4294.astype('uint16'), relay.shape_of(uop_4288))) # shape=(3, 16, 12)
func_859_call = mod.get_global_var('func_859')
func_861_call = mutated_mod.get_global_var('func_861')
call_4308 = func_859_call()
call_4309 = func_859_call()
bop_4315 = relay.less(const_4294.astype('bool'), relay.reshape(uop_4288.astype('bool'), relay.shape_of(const_4294))) # shape=(3, 16, 12)
output = relay.Tuple([bop_4272,call_4275,call_4281,call_4284,bop_4295,call_4308,bop_4315,])
output2 = relay.Tuple([bop_4272,call_4276,call_4282,call_4285,bop_4295,call_4309,bop_4315,])
func_4334 = relay.Function([var_4270,], output)
mod['func_4334'] = func_4334
mod = relay.transform.InferType()(mod)
var_4335 = relay.var("var_4335", dtype = "uint64", shape = (3, 16, 12))#candidate|4335|(3, 16, 12)|var|uint64
output = func_4334(var_4335)
func_4336 = relay.Function([var_4335], output)
mutated_mod['func_4336'] = func_4336
mutated_mod = relay.transform.InferType()(mutated_mod)
func_903_call = mod.get_global_var('func_903')
func_904_call = mutated_mod.get_global_var('func_904')
call_4338 = relay.TupleGetItem(func_903_call(), 3)
call_4339 = relay.TupleGetItem(func_904_call(), 3)
uop_4345 = relay.sqrt(call_4338.astype('float64')) # shape=(275,)
uop_4347 = relay.sqrt(call_4339.astype('float64')) # shape=(275,)
bop_4352 = relay.mod(uop_4345.astype('float64'), relay.reshape(call_4338.astype('float64'), relay.shape_of(uop_4345))) # shape=(275,)
bop_4355 = relay.mod(uop_4347.astype('float64'), relay.reshape(call_4339.astype('float64'), relay.shape_of(uop_4347))) # shape=(275,)
func_1153_call = mod.get_global_var('func_1153')
func_1154_call = mutated_mod.get_global_var('func_1154')
call_4357 = relay.TupleGetItem(func_1153_call(), 1)
call_4358 = relay.TupleGetItem(func_1154_call(), 1)
func_3879_call = mod.get_global_var('func_3879')
func_3882_call = mutated_mod.get_global_var('func_3882')
call_4373 = relay.TupleGetItem(func_3879_call(relay.reshape(call_4338.astype('float64'), [275,])), 2)
call_4374 = relay.TupleGetItem(func_3882_call(relay.reshape(call_4338.astype('float64'), [275,])), 2)
bop_4383 = relay.minimum(bop_4352.astype('uint16'), relay.reshape(call_4338.astype('uint16'), relay.shape_of(bop_4352))) # shape=(275,)
bop_4386 = relay.minimum(bop_4355.astype('uint16'), relay.reshape(call_4339.astype('uint16'), relay.shape_of(bop_4355))) # shape=(275,)
func_1114_call = mod.get_global_var('func_1114')
func_1116_call = mutated_mod.get_global_var('func_1116')
call_4387 = func_1114_call()
call_4388 = func_1114_call()
output = relay.Tuple([call_4357,call_4373,bop_4383,call_4387,])
output2 = relay.Tuple([call_4358,call_4374,bop_4386,call_4388,])
func_4394 = relay.Function([], output)
mod['func_4394'] = func_4394
mod = relay.transform.InferType()(mod)
output = func_4394()
func_4395 = relay.Function([], output)
mutated_mod['func_4395'] = func_4395
mutated_mod = relay.transform.InferType()(mutated_mod)
var_4424 = relay.var("var_4424", dtype = "float64", shape = (5, 11, 8))#candidate|4424|(5, 11, 8)|var|float64
uop_4425 = relay.sinh(var_4424.astype('float64')) # shape=(5, 11, 8)
output = relay.Tuple([uop_4425,])
output2 = relay.Tuple([uop_4425,])
func_4431 = relay.Function([var_4424,], output)
mod['func_4431'] = func_4431
mod = relay.transform.InferType()(mod)
var_4432 = relay.var("var_4432", dtype = "float64", shape = (5, 11, 8))#candidate|4432|(5, 11, 8)|var|float64
output = func_4431(var_4432)
func_4433 = relay.Function([var_4432], output)
mutated_mod['func_4433'] = func_4433
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1114_call = mod.get_global_var('func_1114')
func_1116_call = mutated_mod.get_global_var('func_1116')
call_4552 = func_1114_call()
call_4553 = func_1114_call()
output = call_4552
output2 = call_4553
func_4554 = relay.Function([], output)
mod['func_4554'] = func_4554
mod = relay.transform.InferType()(mod)
mutated_mod['func_4554'] = func_4554
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4554_call = mutated_mod.get_global_var('func_4554')
call_4555 = func_4554_call()
output = call_4555
func_4556 = relay.Function([], output)
mutated_mod['func_4556'] = func_4556
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2703_call = mod.get_global_var('func_2703')
func_2704_call = mutated_mod.get_global_var('func_2704')
call_4557 = relay.TupleGetItem(func_2703_call(), 2)
call_4558 = relay.TupleGetItem(func_2704_call(), 2)
output = call_4557
output2 = call_4558
func_4589 = relay.Function([], output)
mod['func_4589'] = func_4589
mod = relay.transform.InferType()(mod)
mutated_mod['func_4589'] = func_4589
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4589_call = mutated_mod.get_global_var('func_4589')
call_4590 = func_4589_call()
output = call_4590
func_4591 = relay.Function([], output)
mutated_mod['func_4591'] = func_4591
mutated_mod = relay.transform.InferType()(mutated_mod)
var_4647 = relay.var("var_4647", dtype = "int32", shape = (12, 16, 16))#candidate|4647|(12, 16, 16)|var|int32
var_4648 = relay.var("var_4648", dtype = "int32", shape = (12, 16, 16))#candidate|4648|(12, 16, 16)|var|int32
bop_4649 = relay.add(var_4647.astype('int32'), relay.reshape(var_4648.astype('int32'), relay.shape_of(var_4647))) # shape=(12, 16, 16)
func_767_call = mod.get_global_var('func_767')
func_770_call = mutated_mod.get_global_var('func_770')
const_4663 = relay.const([[-10],[-2],[10],[9],[-9],[-8],[7],[-4],[-4],[-4],[-9],[-4],[2],[-4],[-2],[1],[3],[-6],[9],[10],[-10],[6],[10],[2],[3],[2],[5],[-4],[8],[9],[10],[-1],[-5],[7],[2],[-3],[6],[10],[7],[2],[10],[-1],[-10],[9],[3],[-9],[9],[-8],[-6],[-10],[2],[1],[-1],[4],[2],[2],[-1],[-4],[-8],[-10],[-2],[7],[-6],[-8],[2],[3],[9],[2],[6],[2],[3],[10],[6],[5],[-9],[-8],[4],[6],[10],[4],[-2],[-6],[10],[5],[-5],[4],[10],[1],[9],[2],[3],[-1],[-3],[8],[-1],[-7],[-7],[5],[10],[-5],[-6],[4],[2],[2],[3],[9],[5],[-4],[-5],[4],[-3],[8],[-4],[1],[-3],[-9],[-5],[3],[-8],[9],[2],[-1],[6],[-7],[-8],[-8],[4],[4],[10],[-1],[2],[-10],[-3],[-4],[-9],[-6],[1],[-9],[-5],[-9],[-7],[-5],[-4],[8],[4],[5],[-9],[5],[-7],[5],[-4],[-8],[-10],[-1],[5],[-5],[6],[5],[9],[-3],[1],[1],[2],[-2],[-6],[6],[9],[2],[-3],[2],[2],[10],[9],[9],[-9],[5],[10],[-1],[-3],[-9],[1],[-7],[-1],[10],[2],[2],[1],[-4],[-9],[2],[-3],[9],[-4],[-6],[-5],[-4],[-2],[7],[-9],[-7],[-10],[5],[-3],[6],[9],[-2],[-7],[-8],[9],[-6],[8],[-1],[10],[-2],[-8],[8],[-10],[-3],[-1],[6],[9],[2],[7],[6],[3],[2],[-3],[-2],[4],[2],[4],[2],[-4],[-8],[-4],[-2],[-2],[-10],[6],[9],[-10],[-3],[-6],[6],[8],[2],[9],[-8],[8],[7],[-2],[-6],[5],[5],[4],[3],[7],[-8],[10],[4],[3],[1],[-1],[4],[-7],[-3],[10],[-5],[-9],[-8],[-6],[-6],[-8],[7],[8],[7],[-7],[-5],[9],[10],[-2],[7],[6],[9],[-2],[-6],[-10],[3],[-9],[-8],[-10],[-10],[5],[-9],[-7],[-10],[-2],[1],[9],[-3],[8],[1],[-4],[-6],[5],[-1],[10],[5],[-7],[10],[1],[-2],[-7],[3],[2],[-8],[7],[-8],[4],[-3],[-9],[5],[6],[-7],[-4],[4],[6],[-10],[-9],[-8],[-1],[1],[6],[9],[5],[-10],[-6],[6],[-6],[-2],[7],[-6],[4],[-6],[1],[5],[-10],[9],[8],[-5],[-10],[9],[-9],[8],[7],[6],[8],[9],[-7],[6],[-10],[-9],[-1],[-6],[6],[4],[-6],[4],[10],[-3],[-1],[-5],[10],[-4],[10],[5],[3],[2],[-2],[-3],[-2],[6],[1],[-5],[3],[-10],[-8],[5],[10],[7],[9],[1],[5],[6],[-4],[8],[9],[3],[-6],[-3],[-8],[-3],[-9],[-6],[-10],[-8],[-4],[1],[-4],[7],[-9],[3],[-8],[7],[5],[-5],[2],[-1],[8],[7],[-2],[-7],[6],[6],[-8],[-10],[-7],[-2],[-9],[1],[9],[-9],[3],[10],[-9],[1],[4],[10],[9],[-9],[-10],[-3],[-2],[-3],[6],[-5],[9],[-5],[-5],[-8],[-4],[10],[9],[7],[7],[-7],[7],[-3],[9],[-9],[10],[-1],[1],[-5],[-1],[-3],[-2],[-4],[-2],[-2],[-6],[-5],[1],[3],[-3],[-4],[-8],[4],[-10],[-6],[-2],[7],[-1],[-8],[1],[1],[9],[2],[5],[9],[-8],[3],[-7],[-5],[-7],[-10],[-9],[4],[10],[-4],[-4],[-10],[-2],[-2],[-8],[7],[3],[3],[-6],[-8],[1],[-4],[7],[-2],[-2],[9],[3],[8],[2],[2],[-10],[-7],[8],[4],[10],[7],[-8],[-2],[10],[3],[10],[7],[-9],[-9],[-6],[4],[-10],[10],[3],[-2],[-4],[4],[1],[-8],[-10],[3],[10],[5],[7],[-4],[-5],[-1],[-1],[2],[5],[-9],[-4],[-2],[9],[-6],[-10],[10],[10],[-1],[9],[2],[-6],[-8],[-5],[3],[4],[-8],[4],[-3],[-1],[-3],[9],[1],[1],[8],[9],[-2],[4],[2],[-2],[-1],[6],[7],[1],[-5],[1],[1],[1],[9],[4],[-2],[9],[8],[5],[5],[6],[4],[-5],[-1],[10],[-1],[4],[-1],[4],[9],[-9],[-2],[4],[-4],[-1],[-4],[4],[6],[6],[-8],[-5],[-7],[10],[6],[-10],[-5],[5],[-9],[-9],[-5],[1],[5],[5],[5],[-3],[10],[-3],[-9],[-7],[-9],[1],[7],[-3],[-4],[-9],[-3],[8],[6],[-9],[7],[-3],[10],[-5],[8],[-5],[10],[3],[3],[-6],[-10],[-3],[7],[-9],[5],[1],[2],[10],[-1],[2],[-9],[-8],[-6],[-8],[9],[-3],[1],[2],[-7],[9],[10],[7],[-8],[-5],[-2],[-10],[-7],[-9],[1],[9],[1],[1],[-8],[-10],[-5],[-9],[10],[9],[3],[-9],[-3],[7],[7],[-1],[5],[-10],[-4],[8],[5],[8],[-6],[-5],[5],[6],[-7],[4],[-4],[-10],[-10],[1],[2],[2],[4],[7],[10],[7],[2],[-4],[-5],[-6],[7],[-10],[2],[-4],[-2],[-10],[8],[-10],[3],[-2],[-3],[-9],[-1],[4],[3],[-8],[-2],[1],[-10],[-8],[2],[7],[-9],[-2],[4],[-3],[3],[4],[5],[1],[9],[-6],[10],[5],[-4],[2],[-1],[4],[6],[2],[8],[-7],[-9],[6],[-8],[-2],[6],[6],[-7],[4],[5],[5],[-5],[-8],[5],[-8],[-9],[-5],[-5],[-4],[7],[10],[4],[-9],[-8],[-2],[1],[1],[-8],[-6],[2],[7],[1],[10],[4],[9],[-10],[7],[4],[6],[-9],[6],[-8],[7],[-7],[1],[8],[-1],[-2],[5],[4],[9],[2],[9],[2],[-9],[-8],[10],[-4],[-1],[9],[-10],[-2],[6],[-1],[1],[-6],[3],[-8],[5],[10],[10],[10],[3],[8],[-5],[-8],[6],[8],[-3],[2],[6],[8],[-7],[2],[6],[-7],[-9],[8],[-1],[7],[-5],[-10],[4],[-2],[7],[-5],[-1],[2],[9],[9],[7],[4],[3],[1],[-8],[9],[-3],[4],[-7],[6],[-10],[8],[-2],[-1],[-6],[8],[6],[-3],[-4],[10],[-3],[7],[8],[-3],[8],[10],[8],[1],[-8],[-5],[-1],[-10],[-5],[-6],[7],[2],[7],[-6],[-1],[-1],[-6],[-6],[6],[-6],[-8],[-1],[-4],[-7],[-5],[-9],[-1],[4],[10],[-4],[-9],[-9],[5],[-1],[3],[-7],[8],[1],[8],[2],[-3],[8],[10],[3],[-2],[-1],[1],[9],[-5],[6],[8],[8],[-1],[10],[1],[7],[-3],[-9],[6],[4],[-8],[-2],[3],[6],[2],[6],[5],[-7],[-5],[10],[-1],[1],[1],[-8],[1],[-9],[-5],[1],[-10],[7],[-8],[3],[-7],[2],[9],[9],[10],[-5],[-9],[7],[3],[2],[-7],[-7],[7],[-1],[9],[10],[2],[9],[5],[-3],[-7],[5],[-9],[7],[-8],[-1],[1],[4],[-4],[-4],[-6],[-10],[-6],[2],[-8],[-6],[3],[-2],[-4],[6],[9],[7],[-7],[-9],[-5],[-5],[-7],[1],[-3],[-5],[-2],[-7],[-2],[9],[9],[6],[-3],[9],[5],[1],[3],[2],[3],[5],[10],[9],[3],[-7],[5],[9],[-9],[2],[-9],[2],[-9],[7],[-2],[-1],[-4],[-1],[8],[-6],[-3],[4],[-9],[10],[7],[2],[2],[-3],[10],[10],[10],[-5],[10],[1],[-3],[9],[-2],[-6],[3],[10],[7],[-9],[5],[-10],[1],[-7],[3],[-7],[7],[3],[7],[-7],[-2],[-9],[-8],[-8],[-1],[4],[8],[-3],[5],[-1],[-9],[3],[6],[-7],[5],[-1],[9],[-5],[-9],[2],[7],[-5],[1],[5],[-5],[4],[3],[-1],[3],[-4],[-4],[-7],[-5],[9],[-5],[-1],[8],[-7],[-2],[-7],[-9],[3],[10],[2],[4],[4],[-1],[2],[-5],[-9],[2],[5],[5],[-3],[4],[-6],[-2],[-6],[-4],[8],[4],[-7],[-4],[10],[-2],[2],[-8],[5],[8],[-10],[9],[7],[6],[-4],[2],[8],[3],[-3],[-8],[8],[2],[3],[-6],[-5],[8],[9],[3],[9],[-9],[-8],[2],[-7],[5],[1],[4],[3],[-9],[8],[-9],[-4],[-8],[6],[-8],[1],[-5],[-10],[-6],[1],[-8],[-7],[2],[-8],[10],[-8],[9],[-8],[4],[-10],[-7],[4],[9],[1],[1],[-1],[4],[9],[1],[7],[-5],[10],[7],[-3],[-2],[-5],[-6],[-2],[-1],[2],[-5],[-10],[2],[5],[9],[7],[-8],[-10],[-5],[-6],[-7],[-5],[-10],[-8],[2],[-4],[5],[-7],[7],[2],[-5],[2],[6],[-6],[2],[-9],[5],[-2],[2],[9],[-9],[2],[8],[5],[-1],[-3],[-6],[10],[4],[4],[-10],[-7],[-6],[1],[8],[-4],[4],[3],[5],[-9],[-4],[3],[-7],[3],[-8],[9],[9],[-4],[-4],[5],[-4],[9],[4],[10],[-9],[-6],[-1],[-3],[3],[-10],[-3],[9],[-7],[-9],[8],[1],[4],[10],[1],[9],[-10],[2],[-5],[2],[1],[9],[2],[-7],[2],[8],[-1],[-4],[10],[-5],[5],[-2],[1],[6],[9],[4],[-9],[5],[2],[10],[8],[-4],[8],[4],[-1],[10],[4],[-10],[-4],[-3],[-4],[4],[-3],[-7],[-8],[8],[7],[-5],[-9],[5],[-9],[-7],[5],[-10],[-4],[3],[-1],[5],[3],[-8],[9],[9],[10],[-2],[-4],[-1],[10],[-7],[-3],[-3],[1],[7],[2],[-7],[-4],[-7],[3],[-2],[3],[-1],[1],[-1],[-8],[-5],[7],[-10],[-5],[-4],[10],[1],[8],[-10],[8],[-3],[-6],[-8],[-6],[7],[9],[-7],[-3],[7],[-7],[-4],[-4],[-5],[-4],[5],[-7],[-3],[-5],[-9],[9],[-7],[7],[5],[2],[-7],[-4],[-9],[7],[-3],[9],[5],[8],[-8],[-8],[-4],[-10],[-3],[2],[8],[-3],[6],[-5],[8],[-9],[6],[-10],[-3],[-8],[9],[-7],[-1],[1],[-5],[-6],[-10],[7],[6],[1],[5],[-4],[-5],[2],[1],[10],[-4],[-5],[5],[2],[1],[-4],[-7],[-7],[4],[-5],[-7],[9],[-3],[1],[-1],[-8],[-7],[3],[-10],[-3],[-3],[4],[-7],[-10],[-10],[-9]], dtype = "int8")#candidate|4663|(1485, 1)|const|int8
call_4662 = relay.TupleGetItem(func_767_call(relay.reshape(const_4663.astype('int8'), [15, 9, 11])), 0)
call_4664 = relay.TupleGetItem(func_770_call(relay.reshape(const_4663.astype('int8'), [15, 9, 11])), 0)
output = relay.Tuple([bop_4649,call_4662,const_4663,])
output2 = relay.Tuple([bop_4649,call_4664,const_4663,])
func_4665 = relay.Function([var_4647,var_4648,], output)
mod['func_4665'] = func_4665
mod = relay.transform.InferType()(mod)
mutated_mod['func_4665'] = func_4665
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4665_call = mutated_mod.get_global_var('func_4665')
var_4667 = relay.var("var_4667", dtype = "int32", shape = (12, 16, 16))#candidate|4667|(12, 16, 16)|var|int32
var_4668 = relay.var("var_4668", dtype = "int32", shape = (12, 16, 16))#candidate|4668|(12, 16, 16)|var|int32
call_4666 = func_4665_call(var_4667,var_4668,)
output = call_4666
func_4669 = relay.Function([var_4667,var_4668,], output)
mutated_mod['func_4669'] = func_4669
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2011_call = mod.get_global_var('func_2011')
func_2012_call = mutated_mod.get_global_var('func_2012')
call_4701 = func_2011_call()
call_4702 = func_2011_call()
func_1983_call = mod.get_global_var('func_1983')
func_1987_call = mutated_mod.get_global_var('func_1987')
const_4721 = relay.const([9.683391,8.956208,-6.187702,-4.516655,0.804479,1.170653,-4.982487,-9.332568,-9.442007,-4.517130,6.685498,2.230267,3.017606,-8.414734,-7.113896,3.398618,1.156474,-5.049619,5.941145,8.235914,6.428826,-8.189248,7.473779,-8.073980,7.848575,-5.560298,1.344968,1.736728,7.409707,-6.086260,-0.172608,5.038348,-6.907418,2.226860,-1.084101,7.256960,9.194613,4.487025,-2.628620,-2.985302,-3.617198,-6.828918], dtype = "float64")#candidate|4721|(42,)|const|float64
const_4722 = relay.const([7.692050,-7.519525,7.910725,-0.072063,0.556625,3.600444,-9.353710,7.624904,-7.967737,-1.083709,7.254089,-0.509311,-8.696575,8.426034,9.828247,-1.773848,-9.727357,-5.748936,-4.032369,-1.198668,-9.698029,8.881452,-6.679486,-4.060782,-1.898955,2.523607,7.350364,9.307018,-4.093694,2.433665,4.314705,5.535541,7.815538,4.439629,-5.114002,4.719486,6.486637,0.916242,-2.249694,3.443960,-5.384818,-0.241350,-0.141611,8.985505,-4.810860,-6.464124,-5.584993,-6.457629,5.634662,2.312706,5.630628,-9.593728,-8.544958,-7.016413,3.573424,2.434485,-6.313730,-8.551508,8.294258,9.025383,-2.155169,-2.868550,5.537534,-2.527768,-6.845064,-2.857646,6.406949,0.443390,-1.469619,-5.644829,1.097322,-8.839157,1.304496,-8.396543,-5.115339,-4.670804,-6.769165,-4.493394,7.969739,-7.888811,-7.942660,7.115206,-5.641638,1.366438], dtype = "float64")#candidate|4722|(84,)|const|float64
call_4720 = relay.TupleGetItem(func_1983_call(relay.reshape(const_4721.astype('float64'), [3, 1, 14]), relay.reshape(const_4722.astype('float64'), [3, 2, 14]), ), 2)
call_4723 = relay.TupleGetItem(func_1987_call(relay.reshape(const_4721.astype('float64'), [3, 1, 14]), relay.reshape(const_4722.astype('float64'), [3, 2, 14]), ), 2)
output = relay.Tuple([call_4701,call_4720,const_4721,const_4722,])
output2 = relay.Tuple([call_4702,call_4723,const_4721,const_4722,])
func_4726 = relay.Function([], output)
mod['func_4726'] = func_4726
mod = relay.transform.InferType()(mod)
mutated_mod['func_4726'] = func_4726
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4726_call = mutated_mod.get_global_var('func_4726')
call_4727 = func_4726_call()
output = call_4727
func_4728 = relay.Function([], output)
mutated_mod['func_4728'] = func_4728
mutated_mod = relay.transform.InferType()(mutated_mod)
func_859_call = mod.get_global_var('func_859')
func_861_call = mutated_mod.get_global_var('func_861')
call_4729 = func_859_call()
call_4730 = func_859_call()
output = relay.Tuple([call_4729,])
output2 = relay.Tuple([call_4730,])
func_4731 = relay.Function([], output)
mod['func_4731'] = func_4731
mod = relay.transform.InferType()(mod)
output = func_4731()
func_4732 = relay.Function([], output)
mutated_mod['func_4732'] = func_4732
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4394_call = mod.get_global_var('func_4394')
func_4395_call = mutated_mod.get_global_var('func_4395')
call_4736 = relay.TupleGetItem(func_4394_call(), 2)
call_4737 = relay.TupleGetItem(func_4395_call(), 2)
output = call_4736
output2 = call_4737
func_4743 = relay.Function([], output)
mod['func_4743'] = func_4743
mod = relay.transform.InferType()(mod)
output = func_4743()
func_4744 = relay.Function([], output)
mutated_mod['func_4744'] = func_4744
mutated_mod = relay.transform.InferType()(mutated_mod)
const_4762 = relay.const(7, dtype = "int16")#candidate|4762|()|const|int16
const_4763 = relay.const([[[9,3,-10,7,6,8,-10,-5,-10],[-2,10,-10,-7,1,6,-3,9,4],[-1,-3,10,4,-8,10,-1,4,-4],[-8,3,-6,-3,-3,-8,-4,-7,5],[-8,-9,9,-6,-2,2,7,8,3],[-9,6,9,-7,3,9,3,-9,6],[2,8,4,-1,-2,-1,4,9,9],[3,10,2,-4,-7,-7,-10,-6,-4]],[[-8,1,5,-3,9,-10,4,4,1],[-3,1,9,6,-9,-10,3,8,-6],[-6,-4,4,5,9,-2,-7,7,-7],[-8,-8,5,1,-5,-2,4,1,6],[1,-3,-3,1,10,-10,6,9,-6],[-3,-2,8,9,-5,7,6,-3,10],[-4,7,-1,-2,-8,3,5,3,-2],[5,-10,-2,10,-6,-8,10,-9,7]],[[-8,7,10,-2,-5,6,3,-1,-10],[3,-2,4,7,-2,-4,6,-8,8],[4,6,-2,-1,2,1,4,3,-4],[3,-4,8,6,10,7,-3,-7,-2],[-1,-7,4,6,-1,-1,-5,-6,1],[-7,-6,-10,-4,-5,4,-9,2,-10],[3,4,3,8,-10,-7,6,6,10],[8,1,-2,-5,-1,-6,-3,5,4]],[[3,-7,6,-1,-9,-8,-5,2,10],[-2,-4,1,-6,-2,2,-10,-8,7],[5,10,-9,3,-3,-1,-9,-9,7],[-7,-4,3,-5,-2,-2,-10,-1,8],[-7,3,8,-4,-6,-1,2,-6,-7],[4,-2,6,7,8,4,-5,1,-4],[9,-3,10,-10,2,-9,-4,10,9],[-9,-1,4,5,8,-5,-4,-10,-1]],[[-2,5,4,-2,8,4,7,-6,2],[-6,7,-4,8,-9,6,-3,3,-2],[-3,-7,6,2,5,-4,8,-6,5],[1,8,2,-2,-2,-2,-1,-9,-7],[10,-2,7,-3,-5,-2,-9,-4,5],[-10,-10,1,7,6,-10,4,-4,6],[2,10,8,-10,7,1,9,-8,-4],[-8,10,-10,10,-10,-10,-8,6,2]],[[10,-9,7,8,5,-2,2,1,-7],[-4,-5,-1,-3,-9,-9,-2,-4,-5],[-5,6,8,9,1,5,1,5,4],[-2,9,7,-2,-6,-4,-9,5,-10],[-5,-6,-1,4,-10,9,-9,2,-2],[-5,-10,5,1,4,1,-10,3,3],[-6,-5,8,-10,-4,-4,-3,-3,9],[8,1,-7,-8,-9,4,2,-10,8]],[[-2,6,3,4,-10,-1,-4,8,-3],[-8,-3,-1,-10,9,-1,-8,5,10],[-6,6,-9,5,-7,1,-10,-2,-7],[-2,-7,6,7,-2,-10,2,5,1],[4,9,1,-3,8,-7,-8,3,1],[-5,7,-5,-10,-2,5,-10,3,2],[9,6,3,-6,4,8,1,8,-3],[-5,-9,9,-2,7,-8,9,6,-7]],[[-1,-2,2,-4,5,1,4,10,-2],[-1,8,10,-7,-5,8,-4,5,-6],[5,-10,-4,10,-6,5,-9,-2,2],[-3,3,-2,10,-2,1,3,-9,-8],[-5,-3,9,7,-4,-5,3,5,-5],[-8,4,-1,-7,-3,-9,-1,1,3],[2,10,-1,2,4,-9,-6,-6,-7],[9,1,-2,5,3,7,-6,10,-7]],[[-10,6,-8,-2,1,9,5,4,10],[-4,-9,-10,7,-7,3,-9,-5,-8],[-9,9,8,-10,6,7,-9,-10,2],[-5,6,-7,8,-4,8,-7,-10,-8],[6,1,3,-7,-3,-9,5,-5,5],[-1,-5,-7,-5,-1,-1,-5,-1,1],[8,-4,-5,5,8,2,-9,8,8],[-10,-8,-1,-4,-9,5,-6,-6,-4]],[[-5,2,9,9,-8,6,2,10,7],[-10,10,-3,-9,-7,-1,-7,-2,-2],[-4,-8,9,8,-10,-1,2,9,3],[6,-2,7,6,4,5,-8,8,-1],[2,6,10,8,-9,5,-10,3,7],[-7,-8,-10,6,1,-4,9,-2,7],[-4,-5,3,-4,2,-4,9,-10,10],[-9,-10,10,-1,-1,6,4,-4,-3]],[[-8,1,-8,6,6,-6,8,3,-6],[-1,4,1,-9,-1,3,-1,3,-10],[6,-10,-2,9,2,5,6,6,-7],[1,-3,8,-6,-8,10,2,3,-10],[-8,4,-4,-7,-6,-2,3,8,4],[3,-8,1,-8,6,4,-4,-7,-2],[9,1,4,8,-7,-5,-6,-2,-9],[2,5,9,-6,-2,3,-3,-3,6]],[[10,-7,2,-7,-10,3,-2,-9,7],[-8,2,7,6,-8,6,8,-9,10],[-1,-2,-6,2,-1,8,-8,-2,-8],[6,7,-3,-9,9,-10,-1,-6,1],[9,-1,-4,-10,-5,3,-9,7,4],[-1,5,-10,6,7,4,5,3,4],[5,10,-4,3,-5,-1,4,-1,-9],[7,2,-1,-4,-8,10,-4,3,5]],[[8,-3,2,-3,6,-9,-5,-4,10],[1,-10,9,-10,7,7,-3,1,2],[-9,-2,-9,2,7,10,9,-9,10],[-1,3,4,-9,8,4,-5,-5,2],[10,-7,-7,-4,8,-7,3,1,-5],[7,3,-6,-7,3,-10,5,8,6],[-3,-4,-4,-1,1,5,6,-2,1],[-9,-10,10,7,1,1,1,-8,5]],[[7,10,-8,6,1,5,7,-8,-6],[9,6,-7,9,-9,4,-2,-9,-9],[-9,1,2,-2,1,7,10,1,8],[-1,7,-6,3,1,2,1,6,3],[-9,10,7,-7,3,-1,5,8,3],[4,3,9,7,7,1,5,7,2],[-3,8,-7,5,-4,-6,8,-4,7],[-6,-3,-2,-5,6,2,-3,-7,9]],[[4,5,-8,7,-3,8,-4,4,9],[6,3,-7,10,-10,-3,-10,-6,6],[-8,-1,-4,10,-5,-9,-10,-10,7],[-10,7,3,-10,10,-9,-9,1,-7],[10,5,4,2,7,9,-9,-10,-8],[10,-5,1,7,3,1,-3,9,-4],[9,9,8,-1,-4,5,3,7,6],[-4,-9,10,-6,10,-10,10,-10,9]]], dtype = "int16")#candidate|4763|(15, 8, 9)|const|int16
bop_4764 = relay.add(const_4762.astype('int16'), const_4763.astype('int16')) # shape=(15, 8, 9)
func_4726_call = mod.get_global_var('func_4726')
func_4728_call = mutated_mod.get_global_var('func_4728')
call_4778 = relay.TupleGetItem(func_4726_call(), 3)
call_4779 = relay.TupleGetItem(func_4728_call(), 3)
bop_4780 = relay.bitwise_or(const_4763.astype('uint32'), relay.reshape(bop_4764.astype('uint32'), relay.shape_of(const_4763))) # shape=(15, 8, 9)
var_4799 = relay.var("var_4799", dtype = "int16", shape = (15, 8, 9))#candidate|4799|(15, 8, 9)|var|int16
bop_4800 = relay.multiply(const_4763.astype('int64'), relay.reshape(var_4799.astype('int64'), relay.shape_of(const_4763))) # shape=(15, 8, 9)
uop_4814 = relay.log(bop_4764.astype('float64')) # shape=(15, 8, 9)
output = relay.Tuple([call_4778,bop_4780,bop_4800,uop_4814,])
output2 = relay.Tuple([call_4779,bop_4780,bop_4800,uop_4814,])
func_4823 = relay.Function([var_4799,], output)
mod['func_4823'] = func_4823
mod = relay.transform.InferType()(mod)
mutated_mod['func_4823'] = func_4823
mutated_mod = relay.transform.InferType()(mutated_mod)
var_4824 = relay.var("var_4824", dtype = "int16", shape = (15, 8, 9))#candidate|4824|(15, 8, 9)|var|int16
func_4823_call = mutated_mod.get_global_var('func_4823')
call_4825 = func_4823_call(var_4824)
output = call_4825
func_4826 = relay.Function([var_4824], output)
mutated_mod['func_4826'] = func_4826
mutated_mod = relay.transform.InferType()(mutated_mod)
var_4930 = relay.var("var_4930", dtype = "int64", shape = (8, 12, 10))#candidate|4930|(8, 12, 10)|var|int64
var_4931 = relay.var("var_4931", dtype = "int64", shape = (8, 12, 10))#candidate|4931|(8, 12, 10)|var|int64
bop_4932 = relay.minimum(var_4930.astype('int64'), relay.reshape(var_4931.astype('int64'), relay.shape_of(var_4930))) # shape=(8, 12, 10)
output = bop_4932
output2 = bop_4932
func_4935 = relay.Function([var_4930,var_4931,], output)
mod['func_4935'] = func_4935
mod = relay.transform.InferType()(mod)
var_4936 = relay.var("var_4936", dtype = "int64", shape = (8, 12, 10))#candidate|4936|(8, 12, 10)|var|int64
var_4937 = relay.var("var_4937", dtype = "int64", shape = (8, 12, 10))#candidate|4937|(8, 12, 10)|var|int64
output = func_4935(var_4936,var_4937,)
func_4938 = relay.Function([var_4936,var_4937,], output)
mutated_mod['func_4938'] = func_4938
mutated_mod = relay.transform.InferType()(mutated_mod)
const_4947 = relay.const([[[8.093274,0.524724,-7.427578,1.798313,-0.606485,8.636479,-2.574985,4.593138],[-8.553761,-6.144149,-3.435518,-4.142773,4.411528,-0.487893,2.183369,-1.593814],[0.259664,-0.536355,4.794138,6.070262,3.346424,-8.868328,-2.681093,-9.393767],[-0.925283,4.143614,3.893795,7.564119,-8.156615,-8.762851,-5.963950,8.514037],[-6.768950,6.416452,3.494080,8.488756,9.127467,-9.510842,4.337666,-8.616779],[8.273622,9.877029,-6.921012,2.855969,-0.155466,-5.817021,-2.666413,0.398480]],[[-3.039701,-2.392673,6.923748,-8.738659,-5.376677,-4.034217,6.692250,8.662103],[-2.905237,-4.013423,0.001501,-9.361865,6.082425,-1.675762,-6.196780,5.643752],[0.580513,-9.750630,9.565235,7.416627,5.533198,-0.049940,3.796498,2.376774],[-2.715721,-2.944476,9.429367,9.240600,7.104106,1.602655,4.009440,-4.238505],[-9.264733,1.339734,-0.417282,2.037202,8.901721,-7.233541,3.541650,-3.072045],[2.568915,-4.457847,5.758111,-9.578747,2.905360,-5.110970,-8.992001,6.484496]]], dtype = "float64")#candidate|4947|(2, 6, 8)|const|float64
uop_4948 = relay.tan(const_4947.astype('float64')) # shape=(2, 6, 8)
output = relay.Tuple([uop_4948,])
output2 = relay.Tuple([uop_4948,])
func_4955 = relay.Function([], output)
mod['func_4955'] = func_4955
mod = relay.transform.InferType()(mod)
mutated_mod['func_4955'] = func_4955
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4955_call = mutated_mod.get_global_var('func_4955')
call_4956 = func_4955_call()
output = call_4956
func_4957 = relay.Function([], output)
mutated_mod['func_4957'] = func_4957
mutated_mod = relay.transform.InferType()(mutated_mod)
var_4983 = relay.var("var_4983", dtype = "bool", shape = (5, 6, 1))#candidate|4983|(5, 6, 1)|var|bool
var_4984 = relay.var("var_4984", dtype = "bool", shape = (5, 6, 1))#candidate|4984|(5, 6, 1)|var|bool
bop_4985 = relay.logical_and(var_4983.astype('bool'), relay.reshape(var_4984.astype('bool'), relay.shape_of(var_4983))) # shape=(5, 6, 1)
func_3421_call = mod.get_global_var('func_3421')
func_3424_call = mutated_mod.get_global_var('func_3424')
var_4997 = relay.var("var_4997", dtype = "float64", shape = (275,))#candidate|4997|(275,)|var|float64
call_4996 = relay.TupleGetItem(func_3421_call(relay.reshape(var_4997.astype('float64'), [275,])), 4)
call_4998 = relay.TupleGetItem(func_3424_call(relay.reshape(var_4997.astype('float64'), [275,])), 4)
func_4431_call = mod.get_global_var('func_4431')
func_4433_call = mutated_mod.get_global_var('func_4433')
var_5002 = relay.var("var_5002", dtype = "float64", shape = (440,))#candidate|5002|(440,)|var|float64
call_5001 = relay.TupleGetItem(func_4431_call(relay.reshape(var_5002.astype('float64'), [5, 11, 8])), 0)
call_5003 = relay.TupleGetItem(func_4433_call(relay.reshape(var_5002.astype('float64'), [5, 11, 8])), 0)
output = relay.Tuple([bop_4985,call_4996,var_4997,call_5001,var_5002,])
output2 = relay.Tuple([bop_4985,call_4998,var_4997,call_5003,var_5002,])
func_5007 = relay.Function([var_4983,var_4984,var_4997,var_5002,], output)
mod['func_5007'] = func_5007
mod = relay.transform.InferType()(mod)
var_5008 = relay.var("var_5008", dtype = "bool", shape = (5, 6, 1))#candidate|5008|(5, 6, 1)|var|bool
var_5009 = relay.var("var_5009", dtype = "bool", shape = (5, 6, 1))#candidate|5009|(5, 6, 1)|var|bool
var_5010 = relay.var("var_5010", dtype = "float64", shape = (275,))#candidate|5010|(275,)|var|float64
var_5011 = relay.var("var_5011", dtype = "float64", shape = (440,))#candidate|5011|(440,)|var|float64
output = func_5007(var_5008,var_5009,var_5010,var_5011,)
func_5012 = relay.Function([var_5008,var_5009,var_5010,var_5011,], output)
mutated_mod['func_5012'] = func_5012
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4394_call = mod.get_global_var('func_4394')
func_4395_call = mutated_mod.get_global_var('func_4395')
call_5018 = relay.TupleGetItem(func_4394_call(), 0)
call_5019 = relay.TupleGetItem(func_4395_call(), 0)
output = call_5018
output2 = call_5019
func_5024 = relay.Function([], output)
mod['func_5024'] = func_5024
mod = relay.transform.InferType()(mod)
output = func_5024()
func_5025 = relay.Function([], output)
mutated_mod['func_5025'] = func_5025
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2753_call = mod.get_global_var('func_2753')
func_2754_call = mutated_mod.get_global_var('func_2754')
call_5031 = relay.TupleGetItem(func_2753_call(), 2)
call_5032 = relay.TupleGetItem(func_2754_call(), 2)
const_5036 = relay.const([[-9.708389,-6.569004,-8.128094,-1.113269,8.592844,5.706803,2.818165,-2.827471,-5.572263,2.945857,8.226571,-1.785550,-3.868385,5.929645,-0.771283,-2.465435,-2.066646,-0.955381,0.930191,3.024163,6.129186,-4.672086,3.597947,8.301941,1.318701],[-9.205895,1.080483,-1.354907,-2.944290,7.994931,8.041710,0.907689,-1.252911,-8.231983,5.224585,8.237582,-0.205621,9.003246,-5.614756,7.778161,0.261761,-4.582508,8.305851,-3.714200,-4.712620,-9.865992,-3.883558,-7.250219,4.231188,-1.378780],[-9.914980,7.717729,3.653063,-3.080449,5.268492,4.298422,4.904823,1.739257,6.133062,4.423834,7.938171,3.642283,4.336697,5.320428,-5.756595,8.698318,5.101825,2.077731,7.314400,-2.689319,1.437017,6.968613,0.168396,9.327279,5.992553],[-0.091765,-1.882839,-1.363119,3.299811,-2.660706,1.215545,5.172373,8.436064,4.909131,-3.954333,0.408084,-8.879436,4.206495,-5.038940,-7.104032,9.870543,-6.513441,-5.298946,5.143072,-3.348998,3.405814,-3.025384,-7.004636,2.515962,-8.541803],[9.529587,5.676142,4.111631,5.177939,-7.440210,0.763597,7.460655,7.436255,-9.728057,7.160640,0.860525,-3.066985,1.673767,8.547384,-9.777247,4.071856,8.279814,5.068172,3.792692,-2.824033,-8.962650,5.336217,-2.556171,6.987814,4.940571],[4.719333,1.628743,-5.235717,7.673453,1.535069,-0.169633,9.017609,-7.310072,-5.901684,-4.274990,1.527749,-1.939058,-8.708103,3.219286,0.080454,-8.996006,0.477034,-9.953316,7.505493,6.769449,0.810519,9.960625,-1.984233,-0.032480,2.513661],[2.638637,7.240296,8.210402,-4.463196,-7.537214,5.980184,6.462273,-3.969396,4.870729,4.444706,3.491623,-6.233639,2.865908,-5.879192,4.028447,-6.559329,-7.840926,-0.498725,7.754699,-8.428700,-5.158463,2.341899,0.877132,1.717611,5.126280],[4.728515,2.701065,0.169738,-5.227220,-9.808254,5.715466,6.007996,1.225807,2.046588,-2.377823,-7.316767,7.429140,-2.112044,1.868359,1.864771,-6.903116,6.818149,-4.763501,2.118994,-7.818875,-3.842427,-6.872948,8.175547,2.846661,2.884757],[6.538733,-5.983436,6.179898,3.177778,-3.061694,2.237787,9.049579,8.006381,3.558420,5.851076,-7.001522,7.219521,5.188776,-9.860697,6.685901,-4.739400,7.408412,9.931577,-8.833356,-9.855049,-0.542844,3.661247,-9.763868,7.911875,2.359115],[-7.468063,8.770746,7.517317,-7.640367,4.794876,4.555508,-2.271979,4.422651,8.875812,-8.911178,-9.723094,0.558682,1.794032,-6.737740,4.950853,3.493978,-8.235841,9.050711,8.480311,3.388827,6.326540,-0.939405,-1.821654,3.317552,3.538748],[9.958709,-1.385950,-0.109719,-9.596453,9.868259,-4.941892,8.380526,9.230720,-5.083362,2.235233,9.614574,-6.334392,-5.396202,3.299611,-6.766318,-2.482438,4.475300,-1.372718,-9.262061,-7.350410,-2.148057,-4.152159,8.687356,-9.425704,-8.821172]], dtype = "float64")#candidate|5036|(11, 25)|const|float64
bop_5037 = relay.logical_and(call_5031.astype('bool'), relay.reshape(const_5036.astype('bool'), relay.shape_of(call_5031))) # shape=(11, 25)
bop_5040 = relay.logical_and(call_5032.astype('bool'), relay.reshape(const_5036.astype('bool'), relay.shape_of(call_5032))) # shape=(11, 25)
uop_5054 = relay.sigmoid(call_5031.astype('float32')) # shape=(11, 25)
uop_5056 = relay.sigmoid(call_5032.astype('float32')) # shape=(11, 25)
func_1103_call = mod.get_global_var('func_1103')
func_1104_call = mutated_mod.get_global_var('func_1104')
call_5057 = relay.TupleGetItem(func_1103_call(), 0)
call_5058 = relay.TupleGetItem(func_1104_call(), 0)
bop_5065 = relay.subtract(const_5036.astype('uint8'), relay.reshape(uop_5054.astype('uint8'), relay.shape_of(const_5036))) # shape=(11, 25)
bop_5068 = relay.subtract(const_5036.astype('uint8'), relay.reshape(uop_5056.astype('uint8'), relay.shape_of(const_5036))) # shape=(11, 25)
bop_5085 = relay.less_equal(uop_5054.astype('bool'), relay.reshape(bop_5065.astype('bool'), relay.shape_of(uop_5054))) # shape=(11, 25)
bop_5088 = relay.less_equal(uop_5056.astype('bool'), relay.reshape(bop_5068.astype('bool'), relay.shape_of(uop_5056))) # shape=(11, 25)
const_5100 = relay.const([[-9.384155,-7.962355,-5.583482,3.433563,6.512466,5.905970,-9.663250,-6.288534,-5.185510,-3.001139,-6.280202,4.223491,1.369629,-2.782211,9.383011,-7.407180,-6.449530,-3.305505,1.867517,5.011090,7.404089,0.972148,9.086318,-8.676768,-9.307335],[2.394450,-3.963210,-8.561809,-0.849235,4.525187,1.241920,8.991774,0.587571,-3.835084,-3.563145,1.885518,-5.432981,2.330628,-1.305476,-6.576413,-5.782158,-5.315432,-1.007690,-5.370349,8.626143,-5.400023,-8.748414,-6.750733,2.835966,-2.362837],[7.011455,6.551741,7.532364,3.700444,-6.534401,-1.191932,5.370160,6.340586,-9.371199,-7.681730,-3.131411,-5.178580,0.008526,-9.783839,0.893818,-5.127610,-2.950301,-7.592633,-2.176290,0.363388,6.399409,9.529865,-0.628295,-7.848454,-7.831439],[4.702838,3.245060,9.430286,-6.188834,7.743163,1.238946,-9.713457,2.276967,9.168816,-3.879049,-7.203925,-1.236046,2.994799,1.788671,4.505099,-8.106297,-2.256931,-2.014355,-9.168554,3.423609,-3.117325,3.018773,-9.514258,-5.048770,-7.717540],[-4.267915,-2.888253,-2.152208,-5.682742,-2.397942,-1.457536,-5.692168,-2.208342,-2.926553,0.108006,6.513516,-0.771259,5.904913,8.508323,-1.606715,-3.141575,6.855407,-4.086743,-5.578960,7.867429,-8.505566,-1.343704,-4.206408,-3.065921,7.660191],[-8.975299,5.995162,-9.144667,1.027925,-6.885412,6.243009,-3.927810,-9.290196,5.351510,9.599567,4.127898,-6.761623,-4.139884,-7.793304,0.520299,0.467081,-7.930191,5.895407,1.616330,8.764128,-0.772555,-2.673784,1.335553,2.005594,-7.116477],[4.694232,9.189411,6.415700,-4.088703,-2.098828,8.041599,5.198001,-6.352715,-1.617433,0.218082,-1.175780,2.870192,-3.012126,5.518676,7.710010,4.950979,2.273697,-7.035415,-0.605655,-3.320067,-8.811517,-0.619338,-9.575136,-5.794710,-3.245088],[-9.974445,-3.572990,-0.735867,-4.199327,-7.379760,4.280079,-0.075423,-0.020005,4.898298,0.643181,8.962096,0.226834,8.010174,3.391148,6.701222,0.479018,-8.328571,1.995233,-5.396729,-3.502050,2.217803,-7.058850,-3.884012,-2.349613,-8.636956],[2.490716,0.601230,7.419896,-2.081285,9.917091,3.363678,4.275197,-0.352852,-8.809352,-9.594826,8.523373,-4.353635,4.272922,1.312637,-5.735423,9.877644,0.553271,-7.632076,1.623863,9.321988,-9.060565,7.748623,-4.964203,-9.039477,6.367681],[1.094178,-2.654293,-6.349665,-2.266424,9.436460,1.503382,2.371734,-0.727408,-5.794164,-4.555249,-9.489333,-5.486674,2.573312,0.343399,9.065201,-4.207397,7.836978,-9.868324,9.664157,8.201603,0.223332,5.367185,-2.946744,-3.467704,-1.553129],[-6.906478,-7.745833,-7.524403,-8.595753,7.614134,-8.840505,-7.111326,7.447232,-4.999790,-8.139949,9.285021,-9.383218,-5.143446,-7.643457,5.003237,8.760492,0.013903,-6.620608,9.968174,0.619340,-8.645176,5.023089,-7.506566,7.396454,5.116121]], dtype = "float64")#candidate|5100|(11, 25)|const|float64
bop_5101 = relay.left_shift(call_5031.astype('int16'), relay.reshape(const_5100.astype('int16'), relay.shape_of(call_5031))) # shape=(11, 25)
bop_5104 = relay.left_shift(call_5032.astype('int16'), relay.reshape(const_5100.astype('int16'), relay.shape_of(call_5032))) # shape=(11, 25)
output = relay.Tuple([bop_5037,call_5057,bop_5085,bop_5101,])
output2 = relay.Tuple([bop_5040,call_5058,bop_5088,bop_5104,])
func_5106 = relay.Function([], output)
mod['func_5106'] = func_5106
mod = relay.transform.InferType()(mod)
output = func_5106()
func_5107 = relay.Function([], output)
mutated_mod['func_5107'] = func_5107
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3903_call = mod.get_global_var('func_3903')
func_3904_call = mutated_mod.get_global_var('func_3904')
call_5110 = relay.TupleGetItem(func_3903_call(), 0)
call_5111 = relay.TupleGetItem(func_3904_call(), 0)
var_5112 = relay.var("var_5112", dtype = "bool", shape = (16, 12, 16))#candidate|5112|(16, 12, 16)|var|bool
bop_5113 = relay.subtract(call_5110.astype('int32'), relay.reshape(var_5112.astype('int32'), relay.shape_of(call_5110))) # shape=(16, 12, 16)
bop_5116 = relay.subtract(call_5111.astype('int32'), relay.reshape(var_5112.astype('int32'), relay.shape_of(call_5111))) # shape=(16, 12, 16)
output = relay.Tuple([bop_5113,])
output2 = relay.Tuple([bop_5116,])
func_5123 = relay.Function([var_5112,], output)
mod['func_5123'] = func_5123
mod = relay.transform.InferType()(mod)
mutated_mod['func_5123'] = func_5123
mutated_mod = relay.transform.InferType()(mutated_mod)
var_5124 = relay.var("var_5124", dtype = "bool", shape = (16, 12, 16))#candidate|5124|(16, 12, 16)|var|bool
func_5123_call = mutated_mod.get_global_var('func_5123')
call_5125 = func_5123_call(var_5124)
output = call_5125
func_5126 = relay.Function([var_5124], output)
mutated_mod['func_5126'] = func_5126
mutated_mod = relay.transform.InferType()(mutated_mod)
var_5138 = relay.var("var_5138", dtype = "uint32", shape = ())#candidate|5138|()|var|uint32
var_5139 = relay.var("var_5139", dtype = "uint32", shape = (1, 9, 11))#candidate|5139|(1, 9, 11)|var|uint32
bop_5140 = relay.right_shift(var_5138.astype('uint32'), var_5139.astype('uint32')) # shape=(1, 9, 11)
func_5024_call = mod.get_global_var('func_5024')
func_5025_call = mutated_mod.get_global_var('func_5025')
call_5145 = func_5024_call()
call_5146 = func_5024_call()
func_4823_call = mod.get_global_var('func_4823')
func_4826_call = mutated_mod.get_global_var('func_4826')
const_5151 = relay.const([-3,-5,-3,5,8,6,8,-3,-5,4,10,-10,8,8,-3,-7,3,-1,10,-4,5,-4,8,-8,8,-6,7,-1,-8,-2,-10,-9,1,-9,-7,-1,3,-7,-5,-5,8,-1,-5,-1,1,-6,-4,-4,-5,8,-8,-6,4,-3,8,-4,-9,-3,-9,-7,-8,1,-8,-7,-2,6,-5,2,-6,10,2,2,1,8,-2,10,8,3,8,10,6,9,-10,1,-5,4,5,1,-3,-3,1,-4,7,-6,7,7,4,5,7,2,4,-1,1,-4,8,9,3,2,-1,4,-4,3,7,2,3,7,-9,6,-10,-6,8,-2,9,10,10,-9,-5,2,10,7,9,1,-4,-10,9,-5,-1,9,-10,-9,-3,5,-1,-1,5,4,-5,4,4,-6,-1,-2,-9,-2,10,-9,10,-10,-3,3,10,-3,-2,4,4,1,-2,-10,3,-10,-3,-5,-5,7,-5,-7,8,2,9,-8,-8,8,5,3,-10,-3,3,8,-3,5,5,-5,-2,-5,-2,5,3,2,-1,-7,1,6,6,-2,-8,8,-1,-8,-9,5,5,3,-3,-7,-3,9,-2,8,8,-10,-8,-2,1,-3,1,4,-10,-6,-4,-9,-7,9,-3,9,8,10,8,-7,1,1,-8,2,10,10,8,10,-10,-5,7,-6,5,-3,7,-4,-7,-4,10,4,-1,3,-6,7,4,-2,-9,-6,-4,1,-6,-2,2,10,2,-1,8,6,-6,3,6,1,-2,2,-7,-9,-8,7,-7,-9,1,-5,3,-5,4,-1,1,-8,10,-1,2,9,1,9,3,10,-9,2,-4,-3,5,3,-7,-1,10,5,3,4,-1,3,-3,7,6,6,-8,-2,-6,-9,5,-1,3,7,-9,10,-5,4,-6,2,4,-5,8,3,2,6,-1,10,-2,-10,9,-10,4,2,7,-3,-3,-3,-6,6,8,3,10,3,-4,4,-2,-8,10,-8,6,-10,-2,2,9,7,-2,9,6,6,7,-3,-4,-7,3,-3,-7,-9,-8,-8,-9,-8,-7,-2,1,3,8,6,9,6,7,2,-4,6,10,-1,-8,9,-6,-8,-1,-2,1,8,-1,3,-8,5,-3,-6,-2,-3,5,-8,7,7,-9,6,9,9,10,10,-6,-2,4,6,-4,-8,5,2,-4,-9,-10,-2,-8,-8,4,8,3,-2,7,-2,-7,10,8,3,10,4,6,6,-10,4,-2,-5,4,1,5,10,6,3,1,8,9,-1,10,9,-4,4,-7,3,8,3,-7,-7,-5,1,-8,7,-10,10,-6,2,4,-7,6,-4,-4,-10,-10,-6,-7,10,5,-3,-6,9,-4,3,6,2,-8,8,3,-2,5,7,6,-9,5,-10,-7,-4,-7,-2,6,4,-10,7,10,-4,9,9,9,8,2,-6,6,-1,-6,5,6,-8,-2,8,4,7,7,9,-5,-9,-7,-7,6,4,-2,-6,8,5,-8,-2,-8,6,-6,-9,-3,10,-7,1,-7,-5,-5,7,6,-3,-6,-7,-3,-8,-7,10,9,-8,-6,-10,-5,2,-8,3,-3,-8,-9,-1,-7,1,-10,-2,10,-5,-10,-1,-10,4,4,-3,4,-5,-6,7,-7,-5,-9,6,-10,8,-4,4,-4,5,8,4,-7,6,5,-7,2,-1,-1,-2,8,1,-1,-7,5,-2,7,-2,-4,10,-2,6,-10,-6,-4,4,-2,-3,1,-7,-1,7,4,-4,10,10,2,-7,-2,5,-3,5,5,-8,7,1,6,-6,9,-1,-8,2,-8,4,2,-6,-10,4,-1,10,-10,6,10,6,-3,-10,-9,-1,-1,-9,-6,-10,7,2,6,4,4,2,1,5,7,5,8,-3,2,-2,6,-5,-7,9,-10,1,-2,-9,-1,6,-2,3,8,-10,7,-1,5,-6,-2,8,-7,-7,4,-9,-2,4,-8,7,3,8,-9,-5,-4,1,-5,9,9,-10,-2,9,-5,-10,-10,-9,-4,4,-6,2,-9,8,-1,5,-3,-5,3,-8,7,-1,5,-1,-9,-4,4,-6,8,-7,1,3,5,8,3,6,4,-8,-9,1,4,2,-3,10,-2,-2,-9,6,4,3,10,9,9,4,-6,6,2,7,6,-5,-4,-9,4,10,9,-5,-5,2,2,1,-3,-10,-5,-10,-4,-9,-4,5,6,-5,-7,4,5,-5,6,-6,3,3,3,-8,8,7,-6,1,-6,-6,7,6,-6,8,6,-10,-10,-6,-8,-9,-2,2,9,-7,-8,-9,-3,-6,7,-2,7,-4,8,-1,-4,5,-7,3,10,10,-5,10,5,8,9,-4,3,-7,-8,9,9,10,-3,-1,-3,9,-1,5,-7,7,-4,-6,1,-7,-2,-10,2,-8,-3,6,-9,5,7,7,4,4,6,-4,-5,-5,9,7,-7,6,3,7,10,5,1,-3,-5,4,9,10,1,1,3,5,5,10,-7,2,-9,7,7,7,-9,7,9,9,3,3,-8,-7,-2,-10,6,-6,-7,6,-1,9,-4,-7,4,-6,-6,4,-7,-6,8,8,8,-8,5,2,-7,-7,7,-3,-9,-9,-7,-10,4,5,-2,7,-7,4,8,-9,6,5,1,6,6,7,-10,10,-3,-7,8,-4,6,-8,-5,-9,-4,-6,-2,-6,-10,4,10,-4,-10,7,-5,-4,10,-7,-10,5,3,-8,-4,5,-9,-3,-4,-3,10,-4,-2,5,-2,-6,9,4,-3,-6,9,2,-2,-7,4,3,-10,8,-7,2,5,10,9,5,10,-10,5,-7,1,-5,3,-8,5,5,-8,1,-6,7,-7,-9,6,-6,-3,7,-8,-8,10,-6,-3,9,9,-7,1,10,6,6,1,10,6,10,2,5,-6,-9,1,2], dtype = "int16")#candidate|5151|(1080,)|const|int16
call_5150 = relay.TupleGetItem(func_4823_call(relay.reshape(const_5151.astype('int16'), [15, 8, 9])), 2)
call_5152 = relay.TupleGetItem(func_4826_call(relay.reshape(const_5151.astype('int16'), [15, 8, 9])), 2)
output = relay.Tuple([bop_5140,call_5145,call_5150,const_5151,])
output2 = relay.Tuple([bop_5140,call_5146,call_5152,const_5151,])
func_5154 = relay.Function([var_5138,var_5139,], output)
mod['func_5154'] = func_5154
mod = relay.transform.InferType()(mod)
var_5155 = relay.var("var_5155", dtype = "uint32", shape = ())#candidate|5155|()|var|uint32
var_5156 = relay.var("var_5156", dtype = "uint32", shape = (1, 9, 11))#candidate|5156|(1, 9, 11)|var|uint32
output = func_5154(var_5155,var_5156,)
func_5157 = relay.Function([var_5155,var_5156,], output)
mutated_mod['func_5157'] = func_5157
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1153_call = mod.get_global_var('func_1153')
func_1154_call = mutated_mod.get_global_var('func_1154')
call_5232 = relay.TupleGetItem(func_1153_call(), 1)
call_5233 = relay.TupleGetItem(func_1154_call(), 1)
func_4247_call = mod.get_global_var('func_4247')
func_4250_call = mutated_mod.get_global_var('func_4250')
var_5263 = relay.var("var_5263", dtype = "float32", shape = (12,))#candidate|5263|(12,)|var|float32
call_5262 = func_4247_call(relay.reshape(var_5263.astype('float32'), [4, 3]), relay.reshape(var_5263.astype('float32'), [4, 3]), )
call_5264 = func_4247_call(relay.reshape(var_5263.astype('float32'), [4, 3]), relay.reshape(var_5263.astype('float32'), [4, 3]), )
output = relay.Tuple([call_5232,call_5262,var_5263,])
output2 = relay.Tuple([call_5233,call_5264,var_5263,])
func_5269 = relay.Function([var_5263,], output)
mod['func_5269'] = func_5269
mod = relay.transform.InferType()(mod)
var_5270 = relay.var("var_5270", dtype = "float32", shape = (12,))#candidate|5270|(12,)|var|float32
output = func_5269(var_5270)
func_5271 = relay.Function([var_5270], output)
mutated_mod['func_5271'] = func_5271
mutated_mod = relay.transform.InferType()(mutated_mod)
var_5275 = relay.var("var_5275", dtype = "float32", shape = (10, 7, 14))#candidate|5275|(10, 7, 14)|var|float32
uop_5276 = relay.log10(var_5275.astype('float32')) # shape=(10, 7, 14)
uop_5280 = relay.cos(var_5275.astype('float64')) # shape=(10, 7, 14)
func_3627_call = mod.get_global_var('func_3627')
func_3631_call = mutated_mod.get_global_var('func_3631')
const_5291 = relay.const([6,3,3,-10,-6,-5,-10,-4,8,8,-3,-9,-3,-3,1,5,10,-5,-1,-6,-5,-9,-6,5,-6,7,4,-6,-7,1,7,-7,5,7,-8,-2,-4,1,6,5,1,-3,9,1,-10,-6,-10,3,-7,-3,3,-10,-8,8,-7,8,-6,4,-10,-3,-9,7,-4,-7,1,5,-5,1,-6,-7,-2,2,6,3,-10,6,5,-1,6,-1,-7,-10,-1,-8,-10,9,-10,7,-6,-1,5,6,-3,-3,6,-5,-8,7,-8,6,10,7,6,-7,4,-9,-7,3,1,-8,-9,9,-2,9,-1,-5,10,-10,-7,7,5,2,-10,-2,10,9,7,-9,6,8,-2,-8,-6,-7,7,6,-1,-6,3,3,9,3,3,6,9,-7,-10,1,5,-1,-3,4,5,-6,-7,-2,-2,6,-6,-5,8,-5,-8,4,-6,4,2,-5,8,-5,-2,-3,1,-10,-2,3,-8,10,-5,-7,-9,-10,1,-10,-7,-3,-4,-3,-6,6,-9,-9,5,3,4,-1,-3,8,6,-2,-4,2,-3,-5,-10,-8,9,-8,-9,-6,-2,-7,-8,8,2,-9,-7,6,-7,-1,-3,-8,8,-9,-6,9,-2,3,-1,5,3,2,6,1,1,10,1,-8,-3,-8,-2,7,7,-5,2,-4,8,4,3,7,7,10,7,-1,-5,-1,9,-10,-9,5,-8,6,-2,-8,-8,-3,-4,7,10,-2,-10,-1,-3,3,7,3,6,9,-4,7,4,8,-2,7,-4,9,4,-3,1,8,6,3,-3,-2,-1,-6,8,3,3,-3,1,-3,10,-1,-3,-8,10,-1,-4,-7,-3,-2,-9,2,-6,-10,-5,-5,8,7,-5,-8,-6,8,-5,7,-8,-8,3,-10,5,10,-3,-4,-1,10,-5,2,9,-1,3,-2,-4,-1,-10,-10,10,-4,6,-4,10,4,-2,7,4,-8,4,1,2,-7,-2,-9,8,7,-3,3,-7,-9,3,4,3,-8,2,5,1,6,10,8,-9,3,10,-7,5,7,3,-9,1,-3,9,9,-9,-3,-10,-8,10,5,9,8,-10,-6,-4,9,-4,-2,-10,1,6,8,-9,-9,10,-10,7,-7,-2,-2,-7,6,3,4,-9,-3,-3,2,-9,-10,4,10,-9,-8,9,7,-1,7,1,9,8,-4,5,2,5,-3,-3,2,-9,3,8,-3,-5,5,4,5,-6,-3,-2,-4,-9,8,3,6,-10,-9,-10,-9,5,-10,-8,2,-3,6,2,-6,9,2,6,4,-6,-6,7,1,9,-10,-8,2,9,-1,-8,-1,3,-10,1,4,-9,4,-6,-8,8,-6,2,2,-6,10,9,2,5,2,-6,-3,-7,-10,4,9,-6,10,5,-9,4,6,3,7,1,-5,-6,-3,7,-7,1,-3,-1,7,5,-8,7,4,3,7,-3,-3,1,3,1,-9,5,3,4,-3,-6,-10,4,-3,7,3,2,-10,-5,-1,4,1,1,-7,-4,6,1,4,-9,-4,-9,-8,-4,6,-5,6,-8,-9,10,3,-8,5,2,7,-8,-10,8,10,10,1,-4,5,5,8,-1,1,-10,7,8,7,-6,5,-7,-8,-10,4,-8,-5,-4,8,5,-3,6,1,5,-3,5,5,-2,2,-3,-7,7,2,6,7,9,-10,-1,2,9,6,-3,9,-5,-1,-9,-9,-2,-10,-3,2,8,-9,-5,6,4,9,5,3,10,8,2,-8,8,-5,-6,3,10,-4,10,-8,-1,2,-4,-8,10,-6,3,9,3,-2,-2,4,4,-7,-9,1,-4,10,9,-4,1,-1,5,6,5,-8,3,-9,1,3,4,4,6,-6,9,2,-2,-6,5,3,-2,-7,3,3,-5,-6,2,-7,-1,1,-2,1,8,-9,9,-4,-4,-7,-10,-3,-1,-6,-10,-9,-5,-4,-5,-1,10,9,3,-4,6,-6,-4,-5,-1,-7,-3,5,-9,5,1,9,7,5,-3,8,10,8,-4,-2,6,-5,6,-7,8,8,-9,1,7,5,-6,-9,-9,-2,-2,8,-4,6,-3,-4,4,-10,-1,8,-8,-5,-8,-1,-1,-9,-9,-10,-10,-2,9,3,8,-8,-6,-4,-3,-9,3,-7,-4,1,3,-8,-10,-5,-6,4,-4,2,1,6,-7,5,6,-8,8,6,1,-4,4,-9,10,6,-6,-7,6,-8,-10,-7,-5,-1,-4,-6,-2,-7,-2,9,-10,9,3,2,9,4,-5,8,-8,4,-5,-9,1,-3,4,6,-5,1,-10,9,7,1,-6,1,-9,6,-3,10,10,-10,5,10,2,-10,-6,-4,-4,-2,-7,2,6,-7,-2,-5,-2,9,-1,-9,-10,-7,-8,9,7,2,-4,9,4,-9,5,-3,10,-4,2,-6,-2,1,6,-4,1,9,2,-3,4,-7,9,7,3,-4,7,-9,3,-1,-10,-3,4,-6,10,5,5,-4,-1,6,4,-8,10,-10,-7,-3,9,-10,8,9,7,-1,-7,9,-7,1,2,2,7,6,-4,-3,-5,-8,-10,2,-5,2,-9,10,-3,-7,8,-9,-1,9,4,-2,6,3,-9,5,-7,3,-5,1,-2,7,8,-7,10,8,-9,-4,-10,-10,1,10,10,3,-8,7,3,-2,-9,1,6,-5,8,7,-8,7,-2,-5,-4,-10,-3,2,1,8,-4,9,-8,4,-6,6,-10,3,-1,4,9,6,3,9,-6,1,-7,2,9,-3], dtype = "int32")#candidate|5291|(1024,)|const|int32
const_5292 = relay.const([[-1.381099],[5.726921],[6.618302],[-5.797314],[-6.044368],[-7.781231],[-5.297977],[-9.377023],[-8.339561],[-6.715859],[1.968106],[-0.308998],[-3.167210],[6.048316],[-0.503448],[-4.881626],[-7.243757],[9.026755],[8.680662],[9.293750],[3.995280],[-8.611309],[-2.144481],[8.205740],[-7.750457],[-5.805961],[-2.229202],[8.258129],[-9.935582],[6.071051],[-6.215725],[1.035820],[-8.642208],[-8.234174],[3.526937],[7.271016],[2.915572],[-0.861749],[-4.211575],[-6.754114],[0.284544],[-8.690195],[3.350899],[9.146644],[-8.991317],[-6.705565],[-3.160927],[-0.840619],[-0.953958],[-7.136719],[-3.815994],[9.115643],[9.894588],[5.164392],[4.903110],[-2.015857],[-8.403873],[-5.280918],[-0.479990],[-7.969884],[0.202585],[-0.022692],[-6.569699],[-5.899961],[8.366073],[-9.104120],[-4.002649],[-9.589618],[1.596127],[2.412010],[0.004907],[-9.689526],[-1.990528],[-5.586952],[-2.801474],[5.236674],[0.225369],[2.400080],[-7.608861],[0.788401],[5.030693],[0.233553],[6.861992],[8.805915],[1.827269],[7.106254],[6.824415],[4.549051],[5.525674],[-7.035271],[-2.698816],[3.352164],[6.488229],[3.043405],[-1.125964],[-4.584118],[6.906047],[3.558144],[5.120054],[6.552153],[1.328400],[6.566717],[-4.570116],[-2.534646],[-0.348874],[9.213994],[-7.711279],[0.787110],[-8.373584],[-6.341634],[8.412397],[-8.776277],[-9.261551],[2.213242],[-2.453485],[6.635327],[0.443247],[-6.850282],[2.693462],[3.188959],[-4.724996],[-7.155702],[9.617379],[-9.019634],[-8.232038],[-9.662316],[4.146645],[-4.631352],[-2.462311],[2.983277],[2.773206],[-6.383759],[-9.616315],[-7.464000],[8.336174],[0.875012],[9.238535],[1.509793],[4.133131],[-3.335493],[-5.231975],[9.005903],[3.936967],[9.477819],[7.445123],[-3.990187],[7.824864],[-7.704309],[-7.001182],[0.029938],[-1.333933],[9.580551],[-9.242804],[5.540992],[-3.690901],[-4.390619],[-0.569041],[8.274055],[6.292679],[-3.040143],[9.803237],[4.224128],[3.732853],[-2.980451],[9.780829],[-4.957892],[7.486463],[5.688367],[-1.530271],[0.960601],[-8.412013],[3.782651],[-1.360581],[-2.767065],[0.387635],[-2.660030],[0.903372],[-2.319515],[0.739762],[-5.890566],[-7.688515],[2.832178],[-0.103585],[-7.501775],[6.575718],[-2.378417],[6.818115],[-6.042233],[-0.952757],[1.316358],[5.773960],[-8.755476],[-6.490552],[-4.112211],[-2.784018],[-2.108910],[8.957955],[-8.353129],[-2.412269],[-2.237294],[-0.193916],[8.285774],[-7.017457],[9.144514],[-8.831262],[-7.543153],[9.849205],[-6.040897],[3.706525],[2.070099],[-3.705371],[9.913536],[0.565074],[9.071074],[-4.503518],[1.402074],[-9.973441],[-7.215961],[3.239186],[5.139827],[-5.491141],[9.926153],[0.478207],[6.568759],[-6.026361],[-2.002440],[-1.106215],[-7.715128],[5.100178],[5.937479],[5.605977],[-8.543416],[4.431860],[-7.626938],[8.248740],[-7.386528],[-6.696837],[6.965732],[-0.744492],[-4.181498],[8.602726],[6.863883],[-6.239903],[-1.983524],[6.729913],[4.775459],[-5.783134],[8.926954],[-0.757119],[-8.490468],[1.864628],[-3.515370],[0.389841],[1.737346],[-5.542670],[-5.692800],[-6.325208],[-9.380331],[-8.045663],[-7.467713],[-9.250594],[-6.474660],[-3.283952],[5.126353],[-8.456380],[-9.681656],[-6.514662],[3.254508],[-9.210584],[6.984089],[-7.674595],[-3.170152],[9.387015],[-3.725653],[1.324525]], dtype = "float64")#candidate|5292|(275, 1)|const|float64
call_5290 = relay.TupleGetItem(func_3627_call(relay.reshape(const_5291.astype('int32'), [8, 16, 8]), relay.reshape(const_5292.astype('float64'), [11, 25]), ), 5)
call_5293 = relay.TupleGetItem(func_3631_call(relay.reshape(const_5291.astype('int32'), [8, 16, 8]), relay.reshape(const_5292.astype('float64'), [11, 25]), ), 5)
output = relay.Tuple([uop_5276,uop_5280,call_5290,const_5291,const_5292,])
output2 = relay.Tuple([uop_5276,uop_5280,call_5293,const_5291,const_5292,])
func_5297 = relay.Function([var_5275,], output)
mod['func_5297'] = func_5297
mod = relay.transform.InferType()(mod)
mutated_mod['func_5297'] = func_5297
mutated_mod = relay.transform.InferType()(mutated_mod)
var_5298 = relay.var("var_5298", dtype = "float32", shape = (10, 7, 14))#candidate|5298|(10, 7, 14)|var|float32
func_5297_call = mutated_mod.get_global_var('func_5297')
call_5299 = func_5297_call(var_5298)
output = call_5299
func_5300 = relay.Function([var_5298], output)
mutated_mod['func_5300'] = func_5300
mutated_mod = relay.transform.InferType()(mutated_mod)
func_475_call = mod.get_global_var('func_475')
func_477_call = mutated_mod.get_global_var('func_477')
call_5350 = relay.TupleGetItem(func_475_call(), 2)
call_5351 = relay.TupleGetItem(func_477_call(), 2)
output = call_5350
output2 = call_5351
func_5375 = relay.Function([], output)
mod['func_5375'] = func_5375
mod = relay.transform.InferType()(mod)
mutated_mod['func_5375'] = func_5375
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5375_call = mutated_mod.get_global_var('func_5375')
call_5376 = func_5375_call()
output = call_5376
func_5377 = relay.Function([], output)
mutated_mod['func_5377'] = func_5377
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2703_call = mod.get_global_var('func_2703')
func_2704_call = mutated_mod.get_global_var('func_2704')
call_5575 = relay.TupleGetItem(func_2703_call(), 1)
call_5576 = relay.TupleGetItem(func_2704_call(), 1)
output = call_5575
output2 = call_5576
func_5592 = relay.Function([], output)
mod['func_5592'] = func_5592
mod = relay.transform.InferType()(mod)
output = func_5592()
func_5593 = relay.Function([], output)
mutated_mod['func_5593'] = func_5593
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2125_call = mod.get_global_var('func_2125')
func_2127_call = mutated_mod.get_global_var('func_2127')
call_5671 = func_2125_call()
call_5672 = func_2125_call()
output = relay.Tuple([call_5671,])
output2 = relay.Tuple([call_5672,])
func_5673 = relay.Function([], output)
mod['func_5673'] = func_5673
mod = relay.transform.InferType()(mod)
mutated_mod['func_5673'] = func_5673
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5673_call = mutated_mod.get_global_var('func_5673')
call_5674 = func_5673_call()
output = call_5674
func_5675 = relay.Function([], output)
mutated_mod['func_5675'] = func_5675
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5592_call = mod.get_global_var('func_5592')
func_5593_call = mutated_mod.get_global_var('func_5593')
call_5729 = func_5592_call()
call_5730 = func_5592_call()
output = relay.Tuple([call_5729,])
output2 = relay.Tuple([call_5730,])
func_5731 = relay.Function([], output)
mod['func_5731'] = func_5731
mod = relay.transform.InferType()(mod)
output = func_5731()
func_5732 = relay.Function([], output)
mutated_mod['func_5732'] = func_5732
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4394_call = mod.get_global_var('func_4394')
func_4395_call = mutated_mod.get_global_var('func_4395')
call_5764 = relay.TupleGetItem(func_4394_call(), 0)
call_5765 = relay.TupleGetItem(func_4395_call(), 0)
uop_5791 = relay.log2(call_5764.astype('float64')) # shape=(3, 4, 12)
uop_5793 = relay.log2(call_5765.astype('float64')) # shape=(3, 4, 12)
func_1800_call = mod.get_global_var('func_1800')
func_1803_call = mutated_mod.get_global_var('func_1803')
const_5795 = relay.const([[6.733795],[6.748486],[4.155134],[1.186925],[-5.506743],[-1.228215],[-7.069199],[-4.081640],[-7.842496],[-0.162784],[4.127405],[-9.647598],[4.548423],[-0.176457],[-3.167470],[-9.601858],[8.477853],[4.099009],[-8.914683],[7.003977],[-9.115725],[-0.097532],[-2.921805],[-3.249899],[4.943215],[2.407488],[-7.673795],[1.480958],[1.636184],[-3.366650],[1.194930],[5.858503],[-9.116382],[5.803673],[-6.975165],[3.202569],[-8.502341],[0.193278],[-5.317028],[-1.518008],[4.336797],[5.305085],[3.612503],[3.594405],[-7.670529],[9.772088],[-6.804160],[-2.999736],[1.345127],[4.357061],[-2.449651],[-6.218348],[4.538731],[-6.036006],[-6.328417],[4.865305],[-8.627827],[0.910055],[-9.592330],[-2.878647],[-1.424793],[-8.795886],[4.932889],[2.411522],[-2.888929],[-9.167044],[2.219236],[3.278816],[-0.550450],[5.107786],[-9.678344],[-1.178488],[1.515026],[2.203664],[-3.862362],[-3.762568],[2.740757],[-4.558006],[-1.662230],[8.790175],[-6.824749],[0.544098],[8.286399],[-5.220862],[-1.649306],[-9.515026],[6.877291],[5.654109],[-6.740989],[-7.875293],[7.145556],[-8.432420],[5.207260],[1.848041],[-9.281636],[-0.215872],[-7.575754],[5.783708],[-3.180361],[0.478132],[2.310858],[-8.778495],[8.051171],[6.961920],[-3.424891],[-0.299237],[-2.222276],[-3.199804],[3.449376],[3.793865],[-6.669546],[3.470568],[-5.913154],[-2.518197],[-5.837278],[8.092570],[0.448006],[-2.493308],[-4.639765],[0.076181],[5.278023],[-2.133767],[-8.862419],[3.634389],[-1.294992],[5.126825],[-9.329263],[0.166372],[7.138521],[-1.222550],[9.659629],[0.745700],[7.161623],[0.754913],[6.737431],[-1.524479],[1.794309],[3.858373],[1.457252],[8.374414],[6.497195],[-3.643327],[7.182495],[-9.604772],[-5.705278],[7.918579],[5.064333],[-9.436679],[-1.881563],[-6.390969],[-4.737715],[7.862209],[4.492461],[1.410293],[6.241596],[-5.400881],[-1.590841],[0.601826],[-2.420160],[-2.349351],[-5.711178],[-2.546159],[0.496650],[-7.663677],[9.701057],[0.993587],[6.722443],[6.975101],[3.913427],[9.392566],[3.120147],[-0.322834],[-7.609253],[-3.780735],[2.192047],[7.353812],[-4.967125],[6.867083],[2.649273],[0.190271],[-2.887919],[-8.288559],[8.074334],[-0.927456],[5.997383],[-6.465257],[6.700939],[-8.499453],[-3.746330],[-0.126875],[1.088258],[4.766054],[-7.602676],[8.175135],[-9.839509],[-6.828316],[-6.128533],[-4.232087],[-9.849448],[-6.662982],[-7.008681],[-5.379996],[9.596944],[6.581630],[9.217087],[-7.169613],[-8.181049],[-5.127162],[-0.914546],[-3.202241],[7.467133],[-5.638269],[2.834610],[3.637494],[3.171214],[7.673124],[-2.816665],[-3.215483],[-5.486718],[7.996118],[1.053220],[2.588434],[0.641786],[-4.562320],[8.981626],[-1.656496],[7.116099],[-9.755950],[8.743566],[-0.688833],[-5.423083],[-6.033050],[-7.861262],[-8.198299],[1.114364],[-6.737078],[8.181049],[-5.997991],[-7.734101],[7.796166],[6.882694],[-6.542077],[-9.783736],[3.231005],[-8.337955],[-0.817805],[-2.625954],[-0.609533],[0.065038],[1.345255],[-5.326529],[-5.635001],[9.494093],[2.566748],[2.178921],[-0.846927],[-6.217347],[-6.711452],[4.945164],[5.122264],[6.036115],[-8.943591],[-3.410715],[-9.003463],[-2.159131],[-3.929254],[-8.804301],[-6.485434],[8.966733],[3.042530],[-1.935718],[8.338349],[-5.313744],[0.376433],[-6.075315]], dtype = "float64")#candidate|5795|(275, 1)|const|float64
call_5794 = relay.TupleGetItem(func_1800_call(relay.reshape(const_5795.astype('float64'), [11, 25])), 2)
call_5796 = relay.TupleGetItem(func_1803_call(relay.reshape(const_5795.astype('float64'), [11, 25])), 2)
output = relay.Tuple([uop_5791,call_5794,const_5795,])
output2 = relay.Tuple([uop_5793,call_5796,const_5795,])
func_5799 = relay.Function([], output)
mod['func_5799'] = func_5799
mod = relay.transform.InferType()(mod)
output = func_5799()
func_5800 = relay.Function([], output)
mutated_mod['func_5800'] = func_5800
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4025_call = mod.get_global_var('func_4025')
func_4027_call = mutated_mod.get_global_var('func_4027')
call_5819 = relay.TupleGetItem(func_4025_call(), 0)
call_5820 = relay.TupleGetItem(func_4027_call(), 0)
func_356_call = mod.get_global_var('func_356')
func_359_call = mutated_mod.get_global_var('func_359')
const_5825 = relay.const([2.445640,-6.409721,2.085869,-0.739864,-6.678345,-7.969502,3.367917,3.264902,-0.247478,-1.162590,1.074699,-9.513343,-5.072365,-5.405297,-4.309261,3.633752,-7.554543,9.035250,1.744896,2.433115,5.337457,-7.593750,-4.787308,-0.111596,9.750466,-7.152597,-6.680416,2.774662,-6.997695,-2.114775,3.902438,-6.378437,-2.137135,1.993799,-0.728078,4.000057,-8.399861,-0.465454,2.747499,-4.803502,2.164683,9.587243,2.478356,3.209713,8.586661,-6.400414,4.691186,-0.882176,2.341256,5.678335,-0.288185,4.939411,-5.475239,5.992335,-6.378527,5.117448,5.521528,6.845233,1.185234,-7.517180,7.131552,5.548021,9.486290,-4.381485,-3.519129,-8.603657,-5.498927,6.013100,-4.166608,5.101069,-9.976296,-3.481972,2.788909,-7.442347,-6.635677,4.722557,-0.939750,-0.905188,-4.880224,-0.667591,-8.841266,-4.450502,-8.758998,-9.020325,-3.098668,-4.901468,-1.608647,-2.885900,-1.479074,-8.138115,7.688098,-5.109543,-6.728385,-7.590143,9.222559,3.795035,9.591639,2.723829,-1.884342,-2.241948,5.365270,9.506103,-6.149068,1.318880,3.115745,6.585758,-6.279710,-8.065797,1.177824,2.783012,9.902170,-8.364756,-9.509981,-3.182979,3.496302,-5.880372,6.075260,-9.044365,3.088891,5.463707,2.516372,-4.132089,-2.498055,9.801194,5.650493,1.923844,0.800136,8.840133,0.525845,-4.613444,0.248702,8.523210,6.071743,-8.209432,4.606984,8.744889,-0.383996,-9.313429,-5.273227,-6.047217,3.725307,-9.007602,-4.950475,-8.936678], dtype = "float32")#candidate|5825|(144,)|const|float32
call_5824 = relay.TupleGetItem(func_356_call(relay.reshape(const_5825.astype('float32'), [3, 4, 12])), 0)
call_5826 = relay.TupleGetItem(func_359_call(relay.reshape(const_5825.astype('float32'), [3, 4, 12])), 0)
output = relay.Tuple([call_5819,call_5824,const_5825,])
output2 = relay.Tuple([call_5820,call_5826,const_5825,])
func_5854 = relay.Function([], output)
mod['func_5854'] = func_5854
mod = relay.transform.InferType()(mod)
output = func_5854()
func_5855 = relay.Function([], output)
mutated_mod['func_5855'] = func_5855
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4554_call = mod.get_global_var('func_4554')
func_4556_call = mutated_mod.get_global_var('func_4556')
call_5962 = func_4554_call()
call_5963 = func_4554_call()
const_5968 = relay.const([[[-4,-9,-3,-3,7,8,-1,-5],[-7,8,-6,4,-4,-4,3,-4],[-1,1,-5,9,-8,-4,-9,6],[6,10,3,-1,8,-7,-9,8],[-4,-4,-3,-3,-1,2,5,-5],[-1,5,10,10,-1,-1,-8,2],[9,-4,-8,-3,-3,-10,10,1],[2,-5,2,-2,-2,7,3,-3],[5,3,6,6,-1,-10,-2,4],[7,-6,-7,-3,-1,-1,10,-5],[3,2,-5,9,-3,-9,-9,8],[-2,-4,3,10,-8,8,-6,4],[-2,9,5,3,8,-4,5,-1],[-6,-6,2,5,-6,9,6,3],[2,-7,-1,-4,4,-6,-1,6],[1,8,-1,-5,-6,10,8,1]],[[-5,-6,1,-7,-9,4,9,-7],[5,4,-8,2,3,-5,-5,-2],[5,9,7,10,9,6,-5,8],[8,-5,-3,10,9,9,-4,-6],[-7,6,3,10,10,-7,8,-7],[9,5,-9,6,-10,1,5,4],[2,-8,4,4,5,-2,-9,9],[9,10,9,-5,2,-5,-1,1],[-7,-8,-8,-8,6,-5,-7,4],[10,-5,1,-2,-5,-10,-5,10],[9,-4,2,1,2,-6,-2,-8],[-6,3,-2,-10,9,-3,-8,-8],[-5,-5,4,7,-2,8,5,6],[10,9,-2,9,7,-8,9,6],[-8,-10,-9,-2,-10,-4,-8,-6],[-10,10,-2,-7,-5,5,-3,-7]],[[-2,-7,6,1,-10,2,-5,-6],[-5,-1,5,7,-3,3,3,-8],[1,-7,5,-4,3,4,-8,5],[5,8,1,2,-8,-1,7,8],[-5,4,3,4,7,3,6,-7],[-3,-5,-2,2,1,1,-3,3],[-3,7,-4,1,-8,-7,2,9],[8,-2,8,10,-7,7,-1,-1],[7,2,10,-5,8,7,3,-7],[-10,1,5,9,-2,4,-5,10],[5,-5,5,-5,9,3,8,5],[1,7,-7,7,-3,5,-8,-1],[-8,7,-4,6,-6,7,1,3],[-10,-7,7,8,-5,-7,9,7],[2,-1,-8,-4,-6,-10,5,-10],[-4,-1,8,-10,-10,7,4,-7]],[[8,7,-2,10,-1,8,6,10],[2,-2,9,-5,-10,10,-6,2],[-4,-10,9,-8,-2,8,-2,-7],[-10,-5,10,1,2,-6,10,-2],[9,3,-4,10,-7,4,-7,-4],[-2,7,10,-4,1,1,-9,6],[-5,-8,1,-4,6,-8,9,-9],[4,4,6,-6,-7,-8,10,-8],[6,3,-4,6,5,3,7,-6],[2,2,-8,-4,-5,-5,10,-1],[9,-4,3,5,3,5,-1,-8],[2,10,-10,7,9,-4,5,-5],[-1,9,6,-3,1,-8,10,-5],[8,4,-2,-5,5,1,-5,8],[5,2,-9,-2,-5,-5,8,9],[7,-4,-6,-9,-10,-3,-9,1]],[[-8,9,9,10,-4,1,4,8],[3,10,2,-2,-2,-7,8,6],[2,5,-7,-7,9,10,10,-7],[-1,4,-6,6,-1,-10,-3,-7],[10,-6,9,7,-3,-3,7,6],[7,-1,-6,1,-10,-8,-7,-7],[9,3,9,5,-9,5,-10,-1],[-10,-10,-9,-4,3,-1,-9,7],[-2,-5,2,-2,-2,-6,7,9],[-2,-2,1,-2,-9,5,1,-5],[4,-5,2,9,4,6,3,-9],[-4,5,-6,-2,-10,-3,10,-6],[-8,5,10,-3,9,6,-5,-8],[5,-6,2,5,6,-5,-6,5],[3,5,3,-8,1,4,-10,-7],[-8,7,3,-4,-2,7,1,3]],[[9,-7,-9,-5,-2,6,-3,-8],[-10,-1,-7,-3,-3,6,-2,7],[-10,-6,-3,9,1,-7,10,5],[10,-2,2,-3,-6,8,9,-1],[-2,-8,-7,-10,4,-3,5,-6],[-6,2,-6,3,-4,-1,-8,4],[9,-7,-8,-5,6,-1,-7,-6],[7,-3,2,6,8,-3,-10,-8],[-6,7,4,10,-1,-3,-8,-1],[8,10,1,8,-3,-8,7,-6],[-3,-10,-7,8,-1,-4,3,-4],[1,-1,-1,-4,1,1,-9,2],[10,-2,-2,2,-3,-2,6,-7],[1,-1,-10,-7,8,10,5,-3],[4,1,-8,-9,3,-7,-9,-6],[-4,-3,4,7,9,3,-1,-8]],[[-2,1,4,-10,3,-6,4,3],[10,2,7,10,-9,10,7,-3],[9,-8,-7,-9,-8,3,6,-9],[1,4,3,1,-5,9,1,3],[-9,-2,-1,-7,8,10,3,2],[-3,9,8,-5,3,7,8,-3],[-2,3,7,-2,-7,9,-2,-3],[7,10,-6,-10,-10,2,-6,-7],[9,2,10,-1,6,9,10,2],[6,5,-8,-10,2,8,-4,-8],[3,-10,-6,1,10,-2,2,10],[-8,1,-9,-2,-2,1,-5,10],[1,-2,1,-8,3,-1,-4,6],[-7,-5,9,-7,10,-8,9,3],[-8,-6,8,9,-2,8,-5,-5],[1,-9,9,-3,6,-2,-9,-6]],[[9,7,-5,-1,-9,2,-1,-6],[-9,5,1,-7,-9,-3,-5,9],[-10,-3,5,2,3,9,5,8],[-8,-3,3,5,10,-4,6,1],[2,-1,-10,-2,-8,-6,-4,-8],[1,1,-1,8,4,-8,-7,-6],[-3,-7,-9,5,-10,2,-9,-8],[2,-4,8,6,-6,-2,-3,4],[-3,-10,-10,4,10,-5,8,9],[5,-5,-9,-4,-5,-10,5,8],[-4,4,7,-3,-4,6,-2,-2],[-10,1,-5,-4,3,1,-7,8],[9,-3,-10,1,-5,-5,-4,7],[1,-5,4,9,5,-7,-10,4],[-9,-6,-5,2,-8,8,-4,-7],[-2,-3,2,-4,-5,9,-8,-7]]], dtype = "int32")#candidate|5968|(8, 16, 8)|const|int32
bop_5969 = relay.logical_and(call_5962.astype('bool'), relay.reshape(const_5968.astype('bool'), relay.shape_of(call_5962))) # shape=(8, 16, 8)
bop_5972 = relay.logical_and(call_5963.astype('bool'), relay.reshape(const_5968.astype('bool'), relay.shape_of(call_5963))) # shape=(8, 16, 8)
uop_5975 = relay.tan(const_5968.astype('float32')) # shape=(8, 16, 8)
output = relay.Tuple([bop_5969,uop_5975,])
output2 = relay.Tuple([bop_5972,uop_5975,])
func_5978 = relay.Function([], output)
mod['func_5978'] = func_5978
mod = relay.transform.InferType()(mod)
mutated_mod['func_5978'] = func_5978
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5978_call = mutated_mod.get_global_var('func_5978')
call_5979 = func_5978_call()
output = call_5979
func_5980 = relay.Function([], output)
mutated_mod['func_5980'] = func_5980
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1266_call = mod.get_global_var('func_1266')
func_1267_call = mutated_mod.get_global_var('func_1267')
call_6100 = func_1266_call()
call_6101 = func_1266_call()
func_5269_call = mod.get_global_var('func_5269')
func_5271_call = mutated_mod.get_global_var('func_5271')
const_6110 = relay.const([-2.407631,-0.769268,-1.841924,6.949006,-3.978158,6.563514,0.206760,7.085405,6.148085,-8.947305,-9.812562,-1.973597], dtype = "float32")#candidate|6110|(12,)|const|float32
call_6109 = relay.TupleGetItem(func_5269_call(relay.reshape(const_6110.astype('float32'), [12,])), 2)
call_6111 = relay.TupleGetItem(func_5271_call(relay.reshape(const_6110.astype('float32'), [12,])), 2)
output = relay.Tuple([call_6100,call_6109,const_6110,])
output2 = relay.Tuple([call_6101,call_6111,const_6110,])
func_6114 = relay.Function([], output)
mod['func_6114'] = func_6114
mod = relay.transform.InferType()(mod)
mutated_mod['func_6114'] = func_6114
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6114_call = mutated_mod.get_global_var('func_6114')
call_6115 = func_6114_call()
output = call_6115
func_6116 = relay.Function([], output)
mutated_mod['func_6116'] = func_6116
mutated_mod = relay.transform.InferType()(mutated_mod)
func_942_call = mod.get_global_var('func_942')
func_943_call = mutated_mod.get_global_var('func_943')
call_6190 = relay.TupleGetItem(func_942_call(), 0)
call_6191 = relay.TupleGetItem(func_943_call(), 0)
func_5123_call = mod.get_global_var('func_5123')
func_5126_call = mutated_mod.get_global_var('func_5126')
const_6198 = relay.const([False,True,True,True,False,True,True,False,True,True,False,False,False,True,False,False,True,True,False,True,False,False,False,True,False,False,True,False,False,False,True,False,True,False,True,True,True,False,True,False,True,False,False,False,True,True,False,False,False,False,True,False,False,True,False,False,True,True,True,True,True,False,True,False,True,False,False,False,True,True,True,False,True,True,False,True,False,True,True,False,True,True,True,False,False,True,False,False,False,True,True,False,False,True,False,True,True,False,True,False,False,False,True,True,False,True,False,False,False,False,True,False,True,False,False,True,True,False,True,True,False,True,True,False,False,False,True,True,False,False,False,False,True,True,False,True,False,False,True,True,False,False,True,True,False,True,True,True,True,False,True,True,True,False,True,True,False,False,True,True,True,True,True,False,False,True,True,False,False,False,True,False,True,False,False,True,True,True,True,True,True,False,False,True,False,False,False,True,False,True,False,True,False,True,True,False,True,False,True,True,True,False,True,False,True,True,True,False,False,False,True,False,False,False,True,True,False,True,False,False,True,False,False,True,True,True,False,False,False,True,True,True,True,True,True,False,False,False,True,True,True,False,True,True,False,False,False,False,True,False,True,False,False,True,False,False,False,False,False,False,True,False,True,False,True,False,True,True,True,False,False,False,False,True,True,True,True,False,True,True,False,False,True,True,True,True,True,False,True,True,False,False,True,False,True,False,False,False,False,True,False,False,True,False,False,True,True,True,True,True,False,True,True,False,False,True,True,True,True,True,True,True,True,False,True,False,True,False,False,True,True,False,True,True,True,True,False,False,True,True,True,True,False,True,True,True,False,True,False,True,False,True,False,True,False,False,False,True,False,False,False,True,True,True,False,False,True,False,False,False,True,False,True,False,True,True,True,True,False,True,False,False,True,False,True,True,False,True,False,False,False,False,False,True,True,False,True,False,True,True,False,False,True,False,False,False,True,True,True,True,True,True,True,False,False,False,True,False,False,True,True,False,True,True,True,False,True,False,True,False,True,True,True,True,True,True,True,False,True,True,True,False,False,False,False,False,True,True,True,True,False,False,True,True,True,False,True,False,False,False,True,True,False,False,False,True,True,False,False,False,True,True,False,True,False,False,False,True,True,True,False,True,True,True,False,False,True,False,False,True,False,True,False,False,True,True,False,True,True,False,True,False,True,False,True,True,False,True,False,False,False,False,True,True,True,False,True,False,False,False,True,False,True,False,True,True,True,True,False,False,True,True,False,False,True,True,False,False,True,False,False,True,True,True,True,False,True,False,True,True,False,False,False,False,False,True,True,True,False,True,True,True,False,True,True,False,True,True,False,False,False,False,True,True,True,False,True,True,True,False,False,True,True,False,True,True,True,False,True,True,True,False,False,False,False,False,False,True,True,False,True,True,False,False,False,True,True,False,False,False,False,True,True,True,True,True,True,True,True,False,False,True,False,True,True,False,True,True,True,False,True,False,False,True,True,False,False,False,False,True,False,True,False,True,False,True,False,True,False,False,True,True,True,False,False,False,False,True,True,False,True,False,False,True,True,True,False,True,True,False,False,True,True,False,True,False,False,True,True,False,True,True,True,False,True,True,False,True,False,True,True,False,True,False,True,False,True,True,False,True,False,False,False,True,True,True,True,True,True,True,True,False,False,True,True,True,False,True,False,True,True,False,True,False,False,False,True,True,False,True,False,False,True,True,True,False,False,True,True,True,False,True,False,False,False,True,True,False,False,True,True,True,True,False,False,True,True,True,True,True,False,True,True,True,False,False,False,True,True,True,False,True,False,False,True,False,True,False,True,False,False,False,True,True,True,True,True,False,False,False,True,False,True,False,False,False,False,False,True,False,True,True,True,False,False,True,False,True,True,True,True,True,False,True,True,True,False,False,True,True,False,False,True,True,False,True,True,False,True,False,False,True,False,False,True,False,True,True,True,False,True,True,False,True,False,True,False,False,True,True,True,True,True,True,False,True,False,False,True,False,False,False,True,False,False,False,False,True,True,False,True,False,True,True,True,True,False,True,True,True,False,True,False,True,False,True,False,False,True,False,False,True,False,True,False,False,True,False,True,True,False,False,True,True,False,True,False,False,False,False,False,True,True,False,False,True,True,True,True,False,True,False,False,True,True,False,True,True,False,False,False,True,False,True,False,False,False,True,True,True,True,True,False,False,True,False,True,True,True,False,True,False,False,True,True,False,True,False,True,False,False,True,True,True,False,True,True,True,False,False,False,True,True,False,True,True,False,False,False,False,True,True,False,True,True,False,True,False,False,False,False,True,True,True,False,False,True,True,True,True,False,True,True,True,True,False,False,True,True,False,True,False,False,False,True,True,False,True,True,False,True,False,True,True,True,True,True,False,True,False,False,True,True,True,False,False,True,True,True,False,True,True,False,True,True,False,False,True,True,False,True,False,False,True,True,True,False,False,False,True,False,False,False,True,True,True,True,False,False,True,True,True,False,True,True,True,True,True,False,False,True,True,True,True,False,False,True,True,True,True,False,True,True,True,True,False,False,False,False,False,True,True,True,True,True,False,False,False,False,False,True,True,False,False,True,False,False,False,True,True,True,False,True,False,True,False,False,True,False,False,True,False,False,False,True,True,True,False,True,True,False,False,False,False,False,True,True,True,True,False,False,False,False,True,False,True,True,False,False,False,True,True,False,True,False,True,False,True,True,True,False,False,False,False,False,False,False,True,True,True,False,False,False,False,True,False,False,True,True,False,True,False,False,True,True,False,False,True,True,False,False,True,False,False,True,False,True,True,False,False,True,False,False,True,False,False,True,False,True,False,True,False,False,True,True,True,True,True,False,False,True,True,True,True,True,False,False,False,False,False,True,True,False,True,False,False,True,True,True,False,False,False,False,False,True,True,False,False,True,False,False,False,True,True,False,True,True,False,True,True,False,False,False,False,False,False,False,True,False,True,False,False,True,False,False,False,False,False,False,True,True,False,True,False,True,True,True,True,True,True,False,True,True,True,True,True,True,False,True,True,True,True,True,True,True,False,True,True,False,False,False,True,False,False,False,False,True,True,True,True,False,True,False,False,False,False,True,False,False,False,True,True,True,True,False,True,True,False,False,True,False,True,True,False,True,True,False,False,False,True,True,True,True,False,True,True,False,False,True,False,True,True,True,False,False,False,True,True,False,False,False,False,True,True,False,False,False,True,False,True,False,False,False,True,False,True,True,False,True,False,False,False,True,True,True,True,True,False,False,True,False,True,True,True,False,False,True,True,True,False,False,True,False,False,True,False,True,False,False,False,False,False,True,False,True,False,True,True,False,False,False,True,True,False,False,True,False,False,False,True,False,False,False,False,False,True,False,True,True,False,False,False,False,True,False,True,True,True,False,True,True,True,False,False,True,True,False,True,True,False,False,True,True,False,True,True,False,True,True,True,True,True,True,True,False,True,False,True,True,True,False,False,False,True,True,True,False,True,False,True,True,False,False,False,False,True,False,False,False,True,False,True,False,True,False,False,True,False,True,False,True,True,False,True,False,True,False,False,False,False,True,False,False,True,False,True,False,False,True,False,True,True,True,True,True,True,True,False,False,False,False,True,False,False,True,False,False,True,True,False,False,False,False,False,False,True,True,False,True,True,True,True,False,False,False,True,False,False,True,False,False,True,True,False,False,False,True,False,False,False,False,False,False,True,False,False,False,False,True,True,True,False,False,True,False,True,True,False,True,False,False,True,False,False,False,False,False,True,False,False,True,False,False,True,True,True,False,True,True,True,True,False,True,True,True,True,False,False,False,True,True,False,True,True,False,True,True,True,False,True,True,True,True,False,False,True,True,False,False,False,True,True,False,False,True,True,False,True,False,False,True,True,False,False,False,True,True,True,False,True,False,True,False,True,True,False,False,False,True,True,False,False,False,False,True,True,False,True,True,False,True,False,True,True,False,True,False,True,False,False,False,False,False,False,True,True,False,False,False,True,True,False,False,True,True,True,True,True,False,False,True,True,False,False,False,False,True,True,True,True,True,True,True,True,True,False,True,True,False,True,True,True,True,True,True,False,False,False,True,False,False,False,True,False,False,True,False,True,False,True,False,False,False,True,True,True,False,False,False,False,True,True,False,True,False,True,True,False,True,True,False,True,True,True,True,False,True,True,True,True,False,False,True,False,True,True,True,True,True,True,False,True,True,False,False,True,True,True,False,False,False,False,True,False,False,False,False,True,True,True,False,True,True,False,True,True,True,False,False,False,True,False,True,False,False,True,False,True,True,False,True,True,False,False,True,False,False,True,True,True,True,False,False,False,False,True,True,True,True,False,True,True,False,True,True,True,False,True,False,True,True,False,True,False,False,False,False,True,False,False,False,True,False,True,True,False,False,True,True,False,True,False,True,True,True,False,False,False,False,True,True,True,True,False,True,True,True,False,False,True,False,True,False,False,False,True,False,False,False,True,False,True,True,True,True,True,False,True,True,False,False,False,True,True,True,True,True,False,True,True,True,True,False,True,True,False,False,True,True,True,False,True,False,True,True,True,False,True,True,True,True,True,False,False,True,True,True,False,True,False,True,False,True,False,True,False,False,True,True,True,False,True,True,True,True,False,False,True,True,True,True,False,True,True,False,False,False,False,False,True,False,True,True,False,True,False,False,False,True,False,True,False,True,False,True,False,False,True,False,True,True,True,True,False,False,False,False,False,False,False,True,False,True,False,False,True,False,True,True,True,True,False,True,False,True,False,True,True,False,True,True,True,False,False,True,False,False,True,False,False,True,True,True,False,True,True,True,True,False,False,False,True,True,False,False,False,False,True,True,False,False,False,True,False,True,False,False,True,True,False,False,False,True,True,True,False,False,False,True,True,True,True,False,False,True,False,False,False,True,True,False,True,False,False,True,True,False,True,False,False,True,False,False,False,True,True,False,False,False,True,True,True,True,True,True,False,False,True,False,True,False,True,True,False,True,False,True,True,False,False,True,True,False,False,False,False,True,False,False,True,False,True,False,True,False,True,True,False,False,False,False,True,True,True,True,False,True,True,True,True,True,True,True,True,True,True,True,False,True,True,False,True,False,False,False,True,False,False,True,False,False,True,True,True,False,True,True,False,False,False,True,True,True,False,False,False,True,False,True,True,True,True,False,False,True,True,True,True,True,False,False,True,False,True,False,False,False,True,False,False,True,False,True,True,False,False,True,False,False,False,True,True,True,True,True,True,False,False,False,True,True,False,False,True,False,False,True,False,True,False,True,True,False,False,False,False,False,True,False,False,False,True,False,True,True,True,False,True,False,True,True,True,True,True,False,True,False,True,False,True,True,True,False,True,True,False,False,False,False,False,False,False,False,False,True,True,False,False,False,False,True,True,True,False,True,True,False,True,False,False,False,False,True,True,True,False,True,True,False,True,False,True,True,False,True,True,True,True,True,True,True,False,True,False,False,False,True,False,True,False,False,True,False,True,False,True,False,False,True,False,True,True,True,True,True,True,False,False,False,True,True,False,True,False,False,True,False,False,False,True,False,False,True,False,False,True,True,False,True,False,False,True,True,False,False,False,True,False,False,True,True,False,True,False,False,False,True,True,False,True,False,False,False,True,False,False,True,True,False,False,False,False,True,True,False,True,False,True,True,False,True,False,False,False,False,True,False,False,False,False,True,False,False,True,False,False,True,True,False,True,True,False,False,True,True,False,False,True,False,False,False,True,False,False,True,True,True,False,True,True,False,False,False,True,False,False,True,True,True,True,True,False,True,True,True,True,True,False,False,True,False,False,False,False,True,False,True,False,False,False,False,False,True,False,True,True,False,True,False,True,False,True,True,False,False,True,True,False,True,True,True,True,False,False,True,True,False,True,True,False,True,True,False,False,True,False,True,True,True,False,False,True,True,False,True,False,True,False,False,False,False,True,True,False,True,False,True,True,True,False,True,True,False,False,True,True,False,True,True,True,True,True,False,False,True,False,False,False,False,False,False,False,False,True,False,True,False,True,True,True,False,False,False,False,False,False,True,False,True,False,True,False,False,False,False,True,False,True,False,False,True,False,True,True,False,True,True,False,True,False,True,True,False,False,True,True,False,False,True,True,True,True,True,True,True,True,False,True,False,False,True,False,True,False,True,True,False,False,True,True,False,False,False,True,False,True,False,False,True,True,True,False,False,False,True,True,False,False,False,False,False,False,False,True,False,False,False,False,False,True,True,True,False,True,False,False,False,False,True,False,True,False,False,False,True,False,True,True,False,False,True,False,False,False,False,False,False,False,True,False,False,False,True,False,False,True,False,False,True,True,False,True,False,True,True,True,True,False,False,True,False,True,True,False,True,True,True,True,False,False,False,False,False,True,False,False,True,False,True,False,False,True,True,False,False,False,True,True,True,True,False,True,False,False,False,False,True,True,True,True,True,True,True,True,True,True,False,False,False,True,False,False,False,False,False,True,False,True,False,True,False,True,True,False,True,True,False,False,False,False,False,True,True,True,False,False,True,False,False,True,True,True,True,False,True,True,True,True,False,True,True,False,False,False,False,True,True,True,False,True,True,False,False,False,True,False,True,False,True,True,True,False,False,False,False,True,True,True,True,True,True,False,True,True,False,False,True,True,True,True,False,False,True,False,False,False,False,True,True,True,True,False,False,True,True,False,True,False,False,False,False,True,False,True,False,False,True,True,True,False,False,True,False,True,True,True,False,True,False,True,True,True,True,True,True,False,True,False,True,True,False,True,False,False,False,True,False,False,False,True,False,True,False,True,False,True,False,False,False,False,True,True,False,True,False,True,True,False,True,False,True,True,True,False,True,False,True,True,False,True,False,False,False,False,True,True,True,True,True,True,False,True,True,False,False,True,True,True,True,False,False,True,True,True,True,False,True,False,True,True,True,True,False,False,True,True,True,False,True,False,True,True,True,False,True,True,False,False,True,True,False,True,False,True,False,True,True,False,True,False,True,True,True,True,True,False,True,False,False,False,False,True,True,False,False,False,True,False,False,False,True,False,True,False,True,False,True,False,False,True,False,True], dtype = "bool")#candidate|6198|(3072,)|const|bool
call_6197 = relay.TupleGetItem(func_5123_call(relay.reshape(const_6198.astype('bool'), [16, 12, 16])), 0)
call_6199 = relay.TupleGetItem(func_5126_call(relay.reshape(const_6198.astype('bool'), [16, 12, 16])), 0)
uop_6220 = relay.acosh(call_6197.astype('float64')) # shape=(16, 12, 16)
uop_6222 = relay.acosh(call_6199.astype('float64')) # shape=(16, 12, 16)
bop_6238 = relay.maximum(uop_6220.astype('uint16'), relay.reshape(call_6197.astype('uint16'), relay.shape_of(uop_6220))) # shape=(16, 12, 16)
bop_6241 = relay.maximum(uop_6222.astype('uint16'), relay.reshape(call_6199.astype('uint16'), relay.shape_of(uop_6222))) # shape=(16, 12, 16)
func_1702_call = mod.get_global_var('func_1702')
func_1705_call = mutated_mod.get_global_var('func_1705')
const_6256 = relay.const([3.489391,6.515515,-1.585190,4.847189,0.310137,-5.750353,-1.768981,-4.543444,-7.779330,-8.049325,-6.569889,6.992189,1.134513,8.322531,9.850893,6.311276,0.114666,-3.055620,0.869499,-1.114976,5.505825,-0.723414,3.455589,7.884032,3.789344,-3.959911,1.372624], dtype = "float64")#candidate|6256|(27,)|const|float64
call_6255 = relay.TupleGetItem(func_1702_call(relay.reshape(const_6256.astype('float64'), [1, 9, 3])), 2)
call_6257 = relay.TupleGetItem(func_1705_call(relay.reshape(const_6256.astype('float64'), [1, 9, 3])), 2)
uop_6262 = relay.log2(bop_6238.astype('float32')) # shape=(16, 12, 16)
uop_6264 = relay.log2(bop_6241.astype('float32')) # shape=(16, 12, 16)
output = relay.Tuple([call_6190,const_6198,call_6255,const_6256,uop_6262,])
output2 = relay.Tuple([call_6191,const_6198,call_6257,const_6256,uop_6264,])
func_6265 = relay.Function([], output)
mod['func_6265'] = func_6265
mod = relay.transform.InferType()(mod)
output = func_6265()
func_6266 = relay.Function([], output)
mutated_mod['func_6266'] = func_6266
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2753_call = mod.get_global_var('func_2753')
func_2754_call = mutated_mod.get_global_var('func_2754')
call_6270 = relay.TupleGetItem(func_2753_call(), 3)
call_6271 = relay.TupleGetItem(func_2754_call(), 3)
output = relay.Tuple([call_6270,])
output2 = relay.Tuple([call_6271,])
func_6283 = relay.Function([], output)
mod['func_6283'] = func_6283
mod = relay.transform.InferType()(mod)
output = func_6283()
func_6284 = relay.Function([], output)
mutated_mod['func_6284'] = func_6284
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4589_call = mod.get_global_var('func_4589')
func_4591_call = mutated_mod.get_global_var('func_4591')
call_6317 = func_4589_call()
call_6318 = func_4589_call()
output = call_6317
output2 = call_6318
func_6341 = relay.Function([], output)
mod['func_6341'] = func_6341
mod = relay.transform.InferType()(mod)
mutated_mod['func_6341'] = func_6341
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6341_call = mutated_mod.get_global_var('func_6341')
call_6342 = func_6341_call()
output = call_6342
func_6343 = relay.Function([], output)
mutated_mod['func_6343'] = func_6343
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1716_call = mod.get_global_var('func_1716')
func_1718_call = mutated_mod.get_global_var('func_1718')
call_6433 = relay.TupleGetItem(func_1716_call(), 0)
call_6434 = relay.TupleGetItem(func_1718_call(), 0)
func_1983_call = mod.get_global_var('func_1983')
func_1987_call = mutated_mod.get_global_var('func_1987')
const_6442 = relay.const([-2.284199,-3.191847,-0.461283,7.787225,0.746343,-5.954947,1.160760,1.856752,-4.763581,-1.045626,8.478396,-2.551957,-1.521460,4.995224,-6.838121,-6.281363,8.224772,-3.876334,2.081857,4.798034,-2.825630,5.615513,4.636095,-3.253486,5.694501,5.185514,8.946812,-8.263391,3.993268,5.671135,9.970349,-6.031625,-4.811416,-8.370077,-1.611326,3.774530,6.826786,-4.457639,0.270533,-3.019651,7.170969,8.003505], dtype = "float64")#candidate|6442|(42,)|const|float64
var_6443 = relay.var("var_6443", dtype = "float64", shape = (42, 2))#candidate|6443|(42, 2)|var|float64
call_6441 = relay.TupleGetItem(func_1983_call(relay.reshape(const_6442.astype('float64'), [3, 1, 14]), relay.reshape(var_6443.astype('float64'), [3, 2, 14]), ), 0)
call_6444 = relay.TupleGetItem(func_1987_call(relay.reshape(const_6442.astype('float64'), [3, 1, 14]), relay.reshape(var_6443.astype('float64'), [3, 2, 14]), ), 0)
output = relay.Tuple([call_6433,call_6441,const_6442,var_6443,])
output2 = relay.Tuple([call_6434,call_6444,const_6442,var_6443,])
func_6462 = relay.Function([var_6443,], output)
mod['func_6462'] = func_6462
mod = relay.transform.InferType()(mod)
var_6463 = relay.var("var_6463", dtype = "float64", shape = (42, 2))#candidate|6463|(42, 2)|var|float64
output = func_6462(var_6463)
func_6464 = relay.Function([var_6463], output)
mutated_mod['func_6464'] = func_6464
mutated_mod = relay.transform.InferType()(mutated_mod)
func_546_call = mod.get_global_var('func_546')
func_547_call = mutated_mod.get_global_var('func_547')
call_6484 = relay.TupleGetItem(func_546_call(), 2)
call_6485 = relay.TupleGetItem(func_547_call(), 2)
output = call_6484
output2 = call_6485
func_6488 = relay.Function([], output)
mod['func_6488'] = func_6488
mod = relay.transform.InferType()(mod)
output = func_6488()
func_6489 = relay.Function([], output)
mutated_mod['func_6489'] = func_6489
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5375_call = mod.get_global_var('func_5375')
func_5377_call = mutated_mod.get_global_var('func_5377')
call_6553 = func_5375_call()
call_6554 = func_5375_call()
output = call_6553
output2 = call_6554
func_6570 = relay.Function([], output)
mod['func_6570'] = func_6570
mod = relay.transform.InferType()(mod)
mutated_mod['func_6570'] = func_6570
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6570_call = mutated_mod.get_global_var('func_6570')
call_6571 = func_6570_call()
output = call_6571
func_6572 = relay.Function([], output)
mutated_mod['func_6572'] = func_6572
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3903_call = mod.get_global_var('func_3903')
func_3904_call = mutated_mod.get_global_var('func_3904')
call_6591 = relay.TupleGetItem(func_3903_call(), 0)
call_6592 = relay.TupleGetItem(func_3904_call(), 0)
func_4247_call = mod.get_global_var('func_4247')
func_4250_call = mutated_mod.get_global_var('func_4250')
var_6599 = relay.var("var_6599", dtype = "float32", shape = (12,))#candidate|6599|(12,)|var|float32
call_6598 = func_4247_call(relay.reshape(var_6599.astype('float32'), [4, 3]), relay.reshape(var_6599.astype('float32'), [4, 3]), )
call_6600 = func_4247_call(relay.reshape(var_6599.astype('float32'), [4, 3]), relay.reshape(var_6599.astype('float32'), [4, 3]), )
var_6601 = relay.var("var_6601", dtype = "bool", shape = (16, 12, 16))#candidate|6601|(16, 12, 16)|var|bool
bop_6602 = relay.bitwise_xor(call_6591.astype('int16'), relay.reshape(var_6601.astype('int16'), relay.shape_of(call_6591))) # shape=(16, 12, 16)
bop_6605 = relay.bitwise_xor(call_6592.astype('int16'), relay.reshape(var_6601.astype('int16'), relay.shape_of(call_6592))) # shape=(16, 12, 16)
func_3786_call = mod.get_global_var('func_3786')
func_3788_call = mutated_mod.get_global_var('func_3788')
call_6609 = relay.TupleGetItem(func_3786_call(), 1)
call_6610 = relay.TupleGetItem(func_3788_call(), 1)
output = relay.Tuple([call_6598,var_6599,bop_6602,call_6609,])
output2 = relay.Tuple([call_6600,var_6599,bop_6605,call_6610,])
func_6611 = relay.Function([var_6599,var_6601,], output)
mod['func_6611'] = func_6611
mod = relay.transform.InferType()(mod)
mutated_mod['func_6611'] = func_6611
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6611_call = mutated_mod.get_global_var('func_6611')
var_6613 = relay.var("var_6613", dtype = "float32", shape = (12,))#candidate|6613|(12,)|var|float32
var_6614 = relay.var("var_6614", dtype = "bool", shape = (16, 12, 16))#candidate|6614|(16, 12, 16)|var|bool
call_6612 = func_6611_call(var_6613,var_6614,)
output = call_6612
func_6615 = relay.Function([var_6613,var_6614,], output)
mutated_mod['func_6615'] = func_6615
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2940_call = mod.get_global_var('func_2940')
func_2941_call = mutated_mod.get_global_var('func_2941')
call_6617 = func_2940_call()
call_6618 = func_2940_call()
func_1702_call = mod.get_global_var('func_1702')
func_1705_call = mutated_mod.get_global_var('func_1705')
var_6632 = relay.var("var_6632", dtype = "float64", shape = (27,))#candidate|6632|(27,)|var|float64
call_6631 = relay.TupleGetItem(func_1702_call(relay.reshape(var_6632.astype('float64'), [1, 9, 3])), 1)
call_6633 = relay.TupleGetItem(func_1705_call(relay.reshape(var_6632.astype('float64'), [1, 9, 3])), 1)
var_6644 = relay.var("var_6644", dtype = "int32", shape = (8, 16, 8))#candidate|6644|(8, 16, 8)|var|int32
bop_6645 = relay.maximum(call_6617.astype('float64'), relay.reshape(var_6644.astype('float64'), relay.shape_of(call_6617))) # shape=(8, 16, 8)
bop_6648 = relay.maximum(call_6618.astype('float64'), relay.reshape(var_6644.astype('float64'), relay.shape_of(call_6618))) # shape=(8, 16, 8)
output = relay.Tuple([call_6631,var_6632,bop_6645,])
output2 = relay.Tuple([call_6633,var_6632,bop_6648,])
func_6652 = relay.Function([var_6632,var_6644,], output)
mod['func_6652'] = func_6652
mod = relay.transform.InferType()(mod)
var_6653 = relay.var("var_6653", dtype = "float64", shape = (27,))#candidate|6653|(27,)|var|float64
var_6654 = relay.var("var_6654", dtype = "int32", shape = (8, 16, 8))#candidate|6654|(8, 16, 8)|var|int32
output = func_6652(var_6653,var_6654,)
func_6655 = relay.Function([var_6653,var_6654,], output)
mutated_mod['func_6655'] = func_6655
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4025_call = mod.get_global_var('func_4025')
func_4027_call = mutated_mod.get_global_var('func_4027')
call_6694 = relay.TupleGetItem(func_4025_call(), 0)
call_6695 = relay.TupleGetItem(func_4027_call(), 0)
var_6696 = relay.var("var_6696", dtype = "float64", shape = (4, 196))#candidate|6696|(4, 196)|var|float64
bop_6697 = relay.divide(call_6694.astype('float64'), var_6696.astype('float64')) # shape=(4, 196)
bop_6700 = relay.divide(call_6695.astype('float64'), var_6696.astype('float64')) # shape=(4, 196)
output = relay.Tuple([bop_6697,])
output2 = relay.Tuple([bop_6700,])
func_6722 = relay.Function([var_6696,], output)
mod['func_6722'] = func_6722
mod = relay.transform.InferType()(mod)
mutated_mod['func_6722'] = func_6722
mutated_mod = relay.transform.InferType()(mutated_mod)
var_6723 = relay.var("var_6723", dtype = "float64", shape = (4, 196))#candidate|6723|(4, 196)|var|float64
func_6722_call = mutated_mod.get_global_var('func_6722')
call_6724 = func_6722_call(var_6723)
output = call_6724
func_6725 = relay.Function([var_6723], output)
mutated_mod['func_6725'] = func_6725
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2586_call = mod.get_global_var('func_2586')
func_2588_call = mutated_mod.get_global_var('func_2588')
call_6761 = relay.TupleGetItem(func_2586_call(), 0)
call_6762 = relay.TupleGetItem(func_2588_call(), 0)
output = relay.Tuple([call_6761,])
output2 = relay.Tuple([call_6762,])
func_6772 = relay.Function([], output)
mod['func_6772'] = func_6772
mod = relay.transform.InferType()(mod)
mutated_mod['func_6772'] = func_6772
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6772_call = mutated_mod.get_global_var('func_6772')
call_6773 = func_6772_call()
output = call_6773
func_6774 = relay.Function([], output)
mutated_mod['func_6774'] = func_6774
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5673_call = mod.get_global_var('func_5673')
func_5675_call = mutated_mod.get_global_var('func_5675')
call_6814 = relay.TupleGetItem(func_5673_call(), 0)
call_6815 = relay.TupleGetItem(func_5675_call(), 0)
output = call_6814
output2 = call_6815
func_6832 = relay.Function([], output)
mod['func_6832'] = func_6832
mod = relay.transform.InferType()(mod)
mutated_mod['func_6832'] = func_6832
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6832_call = mutated_mod.get_global_var('func_6832')
call_6833 = func_6832_call()
output = call_6833
func_6834 = relay.Function([], output)
mutated_mod['func_6834'] = func_6834
mutated_mod = relay.transform.InferType()(mutated_mod)
var_6843 = relay.var("var_6843", dtype = "float32", shape = (1, 13, 16))#candidate|6843|(1, 13, 16)|var|float32
var_6844 = relay.var("var_6844", dtype = "float32", shape = (1, 13, 16))#candidate|6844|(1, 13, 16)|var|float32
bop_6845 = relay.floor_divide(var_6843.astype('float32'), relay.reshape(var_6844.astype('float32'), relay.shape_of(var_6843))) # shape=(1, 13, 16)
output = bop_6845
output2 = bop_6845
func_6851 = relay.Function([var_6843,var_6844,], output)
mod['func_6851'] = func_6851
mod = relay.transform.InferType()(mod)
var_6852 = relay.var("var_6852", dtype = "float32", shape = (1, 13, 16))#candidate|6852|(1, 13, 16)|var|float32
var_6853 = relay.var("var_6853", dtype = "float32", shape = (1, 13, 16))#candidate|6853|(1, 13, 16)|var|float32
output = func_6851(var_6852,var_6853,)
func_6854 = relay.Function([var_6852,var_6853,], output)
mutated_mod['func_6854'] = func_6854
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2125_call = mod.get_global_var('func_2125')
func_2127_call = mutated_mod.get_global_var('func_2127')
call_6870 = func_2125_call()
call_6871 = func_2125_call()
func_3322_call = mod.get_global_var('func_3322')
func_3325_call = mutated_mod.get_global_var('func_3325')
var_6874 = relay.var("var_6874", dtype = "float64", shape = (275,))#candidate|6874|(275,)|var|float64
call_6873 = relay.TupleGetItem(func_3322_call(relay.reshape(var_6874.astype('float64'), [275,])), 1)
call_6875 = relay.TupleGetItem(func_3325_call(relay.reshape(var_6874.astype('float64'), [275,])), 1)
func_5978_call = mod.get_global_var('func_5978')
func_5980_call = mutated_mod.get_global_var('func_5980')
call_6878 = relay.TupleGetItem(func_5978_call(), 0)
call_6879 = relay.TupleGetItem(func_5980_call(), 0)
output = relay.Tuple([call_6870,call_6873,var_6874,call_6878,])
output2 = relay.Tuple([call_6871,call_6875,var_6874,call_6879,])
func_6885 = relay.Function([var_6874,], output)
mod['func_6885'] = func_6885
mod = relay.transform.InferType()(mod)
var_6886 = relay.var("var_6886", dtype = "float64", shape = (275,))#candidate|6886|(275,)|var|float64
output = func_6885(var_6886)
func_6887 = relay.Function([var_6886], output)
mutated_mod['func_6887'] = func_6887
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1266_call = mod.get_global_var('func_1266')
func_1267_call = mutated_mod.get_global_var('func_1267')
call_6895 = func_1266_call()
call_6896 = func_1266_call()
func_6885_call = mod.get_global_var('func_6885')
func_6887_call = mutated_mod.get_global_var('func_6887')
var_6899 = relay.var("var_6899", dtype = "float64", shape = (275,))#candidate|6899|(275,)|var|float64
call_6898 = relay.TupleGetItem(func_6885_call(relay.reshape(var_6899.astype('float64'), [275,])), 1)
call_6900 = relay.TupleGetItem(func_6887_call(relay.reshape(var_6899.astype('float64'), [275,])), 1)
output = relay.Tuple([call_6895,call_6898,var_6899,])
output2 = relay.Tuple([call_6896,call_6900,var_6899,])
func_6912 = relay.Function([var_6899,], output)
mod['func_6912'] = func_6912
mod = relay.transform.InferType()(mod)
var_6913 = relay.var("var_6913", dtype = "float64", shape = (275,))#candidate|6913|(275,)|var|float64
output = func_6912(var_6913)
func_6914 = relay.Function([var_6913], output)
mutated_mod['func_6914'] = func_6914
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5978_call = mod.get_global_var('func_5978')
func_5980_call = mutated_mod.get_global_var('func_5980')
call_6931 = relay.TupleGetItem(func_5978_call(), 0)
call_6932 = relay.TupleGetItem(func_5980_call(), 0)
func_2091_call = mod.get_global_var('func_2091')
func_2092_call = mutated_mod.get_global_var('func_2092')
call_6934 = relay.TupleGetItem(func_2091_call(), 0)
call_6935 = relay.TupleGetItem(func_2092_call(), 0)
func_356_call = mod.get_global_var('func_356')
func_359_call = mutated_mod.get_global_var('func_359')
var_6937 = relay.var("var_6937", dtype = "float32", shape = (2, 72))#candidate|6937|(2, 72)|var|float32
call_6936 = relay.TupleGetItem(func_356_call(relay.reshape(var_6937.astype('float32'), [3, 4, 12])), 0)
call_6938 = relay.TupleGetItem(func_359_call(relay.reshape(var_6937.astype('float32'), [3, 4, 12])), 0)
func_2133_call = mod.get_global_var('func_2133')
func_2134_call = mutated_mod.get_global_var('func_2134')
call_6939 = relay.TupleGetItem(func_2133_call(), 0)
call_6940 = relay.TupleGetItem(func_2134_call(), 0)
func_6885_call = mod.get_global_var('func_6885')
func_6887_call = mutated_mod.get_global_var('func_6887')
var_6947 = relay.var("var_6947", dtype = "float64", shape = (275,))#candidate|6947|(275,)|var|float64
call_6946 = relay.TupleGetItem(func_6885_call(relay.reshape(var_6947.astype('float64'), [275,])), 0)
call_6948 = relay.TupleGetItem(func_6887_call(relay.reshape(var_6947.astype('float64'), [275,])), 0)
output = relay.Tuple([call_6931,call_6934,call_6936,var_6937,call_6939,call_6946,var_6947,])
output2 = relay.Tuple([call_6932,call_6935,call_6938,var_6937,call_6940,call_6948,var_6947,])
func_6955 = relay.Function([var_6937,var_6947,], output)
mod['func_6955'] = func_6955
mod = relay.transform.InferType()(mod)
var_6956 = relay.var("var_6956", dtype = "float32", shape = (2, 72))#candidate|6956|(2, 72)|var|float32
var_6957 = relay.var("var_6957", dtype = "float64", shape = (275,))#candidate|6957|(275,)|var|float64
output = func_6955(var_6956,var_6957,)
func_6958 = relay.Function([var_6956,var_6957,], output)
mutated_mod['func_6958'] = func_6958
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5854_call = mod.get_global_var('func_5854')
func_5855_call = mutated_mod.get_global_var('func_5855')
call_6960 = relay.TupleGetItem(func_5854_call(), 2)
call_6961 = relay.TupleGetItem(func_5855_call(), 2)
func_4935_call = mod.get_global_var('func_4935')
func_4938_call = mutated_mod.get_global_var('func_4938')
var_6975 = relay.var("var_6975", dtype = "int64", shape = (480, 2))#candidate|6975|(480, 2)|var|int64
call_6974 = func_4935_call(relay.reshape(var_6975.astype('int64'), [8, 12, 10]), relay.reshape(var_6975.astype('int64'), [8, 12, 10]), )
call_6976 = func_4935_call(relay.reshape(var_6975.astype('int64'), [8, 12, 10]), relay.reshape(var_6975.astype('int64'), [8, 12, 10]), )
uop_6979 = relay.erf(call_6974.astype('float32')) # shape=(8, 12, 10)
uop_6981 = relay.erf(call_6976.astype('float32')) # shape=(8, 12, 10)
output = relay.Tuple([call_6960,var_6975,uop_6979,])
output2 = relay.Tuple([call_6961,var_6975,uop_6981,])
F = relay.Function([var_6975,], output)
mod['main'] = F
mod = relay.transform.InferType()(mod)
print('==========mod==========')
print(mod.astext(show_meta_data=False))
print('===================================')
F = relay.Function([var_6975,], output2)
mutated_mod['main'] = F
mutated_mod = relay.transform.InferType()(mutated_mod)
print('==========mutated_mod==========')
print(mutated_mod.astext(show_meta_data=False))
print('===================================')
graph, lib, params = relay.build(mod, target='llvm')
module1 = graph_runtime.create(graph, lib, tvm.device('llvm',0))
intrp2 = relay.build_module.create_executor('graph', mod, tvm.device('llvm',0),'llvm')
intrp3 = relay.build_module.create_executor('debug', mod, tvm.device('llvm',0),'llvm')
intrp4 = relay.build_module.create_executor('vm', mod, tvm.device('llvm',0),'llvm')
graph, lib, params = relay.build(mod, target='cuda')
module5 = graph_runtime.create(graph, lib, tvm.device('cuda',0))
intrp6 = relay.build_module.create_executor('graph', mod, tvm.device('cuda',0),'cuda')
intrp7 = relay.build_module.create_executor('debug', mod, tvm.device('cuda',0),'cuda')
intrp8 = relay.build_module.create_executor('vm', mod, tvm.device('cuda',0),'cuda')
seq = Sequential([
	relay.transform.AlterOpLayout(),
	relay.transform.AnnotateSpans(),
	relay.transform.BatchingOps(),
	relay.transform.CanonicalizeCast(),
	relay.transform.CanonicalizeOps(),
	relay.transform.DeadCodeElimination(),
	relay.transform.DynamicToStatic(),
	relay.transform.FastMath(),
	relay.transform.FirstOrderGradient(),
	relay.transform.EliminateCommonSubexpr(),
])
mod = seq(mod)
print(mod.astext(show_meta_data=False))
graph, lib, params = relay.build(mod, target='llvm')
module9 = graph_runtime.create(graph, lib, tvm.device('llvm',0))
intrp10 = relay.build_module.create_executor('graph', mod, tvm.device('llvm',0),'llvm')
intrp11 = relay.build_module.create_executor('debug', mod, tvm.device('llvm',0),'llvm')
intrp12 = relay.build_module.create_executor('vm', mod, tvm.device('llvm',0),'llvm')
graph, lib, params = relay.build(mod, target='cuda')
module13 = graph_runtime.create(graph, lib, tvm.device('cuda',0))
intrp14 = relay.build_module.create_executor('graph', mod, tvm.device('cuda',0),'cuda')
intrp15 = relay.build_module.create_executor('debug', mod, tvm.device('cuda',0),'cuda')
intrp16 = relay.build_module.create_executor('vm', mod, tvm.device('cuda',0),'cuda')
graph, lib, params = relay.build(mutated_mod, target='llvm')
module17 = graph_runtime.create(graph, lib, tvm.device('llvm',0))
intrp18 = relay.build_module.create_executor('graph', mutated_mod, tvm.device('llvm',0),'llvm')
intrp19 = relay.build_module.create_executor('debug', mutated_mod, tvm.device('llvm',0),'llvm')
intrp20 = relay.build_module.create_executor('vm', mutated_mod, tvm.device('llvm',0),'llvm')
graph, lib, params = relay.build(mutated_mod, target='cuda')
module21 = graph_runtime.create(graph, lib, tvm.device('cuda',0))
intrp22 = relay.build_module.create_executor('graph', mutated_mod, tvm.device('cuda',0),'cuda')
intrp23 = relay.build_module.create_executor('debug', mutated_mod, tvm.device('cuda',0),'cuda')
intrp24 = relay.build_module.create_executor('vm', mutated_mod, tvm.device('cuda',0),'cuda')

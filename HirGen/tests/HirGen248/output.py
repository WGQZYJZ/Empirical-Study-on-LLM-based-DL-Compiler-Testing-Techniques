import tvm
from tvm import relay
from tvm.ir.transform import Sequential
from tvm.contrib import graph_runtime
import numpy as np
mod = tvm.IRModule()
mutated_mod = tvm.IRModule()
var_64 = relay.var("var_64", dtype = "int8", shape = (4, 10, 14))#candidate|64|(4, 10, 14)|var|int8
var_65 = relay.var("var_65", dtype = "int8", shape = (4, 10, 14))#candidate|65|(4, 10, 14)|var|int8
bop_66 = relay.not_equal(var_64.astype('bool'), relay.reshape(var_65.astype('bool'), relay.shape_of(var_64))) # shape=(4, 10, 14)
output = bop_66
output2 = bop_66
func_75 = relay.Function([var_64,var_65,], output)
mod['func_75'] = func_75
mod = relay.transform.InferType()(mod)
var_76 = relay.var("var_76", dtype = "int8", shape = (4, 10, 14))#candidate|76|(4, 10, 14)|var|int8
var_77 = relay.var("var_77", dtype = "int8", shape = (4, 10, 14))#candidate|77|(4, 10, 14)|var|int8
output = func_75(var_76,var_77,)
func_78 = relay.Function([var_76,var_77,], output)
mutated_mod['func_78'] = func_78
mutated_mod = relay.transform.InferType()(mutated_mod)
var_87 = relay.var("var_87", dtype = "int8", shape = (11, 15, 13))#candidate|87|(11, 15, 13)|var|int8
var_88 = relay.var("var_88", dtype = "int8", shape = (11, 15, 13))#candidate|88|(11, 15, 13)|var|int8
bop_89 = relay.bitwise_xor(var_87.astype('int8'), relay.reshape(var_88.astype('int8'), relay.shape_of(var_87))) # shape=(11, 15, 13)
output = bop_89
output2 = bop_89
func_98 = relay.Function([var_87,var_88,], output)
mod['func_98'] = func_98
mod = relay.transform.InferType()(mod)
mutated_mod['func_98'] = func_98
mutated_mod = relay.transform.InferType()(mutated_mod)
func_98_call = mutated_mod.get_global_var('func_98')
var_100 = relay.var("var_100", dtype = "int8", shape = (11, 15, 13))#candidate|100|(11, 15, 13)|var|int8
var_101 = relay.var("var_101", dtype = "int8", shape = (11, 15, 13))#candidate|101|(11, 15, 13)|var|int8
call_99 = func_98_call(var_100,var_101,)
output = call_99
func_102 = relay.Function([var_100,var_101,], output)
mutated_mod['func_102'] = func_102
mutated_mod = relay.transform.InferType()(mutated_mod)
const_188 = relay.const(-9, dtype = "uint64")#candidate|188|()|const|uint64
var_189 = relay.var("var_189", dtype = "uint64", shape = (4, 6, 13))#candidate|189|(4, 6, 13)|var|uint64
bop_190 = relay.maximum(const_188.astype('uint64'), var_189.astype('uint64')) # shape=(4, 6, 13)
func_75_call = mod.get_global_var('func_75')
func_78_call = mutated_mod.get_global_var('func_78')
const_205 = relay.const([[-10,-1],[-9,6],[-1,-4],[-1,-9],[-4,-5],[-5,-6],[4,-1],[-9,-8],[6,-4],[2,-6],[10,-8],[-10,-7],[-3,5],[-3,-8],[-3,9],[8,1],[-9,-10],[4,-1],[-5,-9],[-7,-7],[-1,8],[-5,3],[5,-2],[-9,6],[7,-8],[1,9],[-10,1],[5,6],[4,9],[10,7],[-4,-8],[-1,3],[-2,3],[2,-1],[10,-8],[2,2],[9,5],[-5,-7],[-3,-4],[-1,4],[-9,1],[1,-2],[6,8],[7,5],[-3,-7],[5,9],[-9,4],[-1,-7],[9,10],[10,1],[-5,5],[10,7],[-10,-4],[-8,-5],[-6,-1],[1,-7],[-6,8],[-10,-3],[9,6],[7,5],[-8,4],[-1,-5],[10,-6],[-3,-1],[10,6],[-10,7],[-8,1],[8,7],[-6,-2],[-10,6],[10,-2],[4,2],[3,-6],[-1,-2],[-5,8],[-10,9],[-4,5],[-7,-7],[-4,2],[4,-2],[5,10],[8,-5],[-7,-8],[8,5],[2,9],[2,8],[4,-3],[-5,-5],[-2,6],[-1,5],[-6,6],[-4,-7],[2,6],[9,-3],[-6,-3],[-1,3],[5,3],[2,5],[5,-3],[4,-5],[-3,4],[9,-7],[4,-7],[-10,8],[2,3],[-1,4],[-2,5],[5,2],[-5,2],[-4,8],[-10,-2],[-7,-6],[-2,-3],[-9,-1],[3,5],[-7,8],[5,-3],[-10,8],[-6,-8],[1,-2],[-5,7],[3,5],[3,-6],[8,4],[5,-4],[-10,4],[-3,1],[-8,-8],[-9,9],[5,9],[-3,-10],[-2,-6],[-4,3],[3,10],[-10,1],[-5,5],[7,5],[7,2],[3,-10],[-8,2],[-7,6],[2,7],[8,-2],[-10,-4],[-10,-9],[-4,-4],[2,-2],[10,-10],[8,-8],[-3,-4],[6,1],[-4,3],[5,10],[10,6],[10,2],[-3,9],[-10,4],[4,4],[6,6],[-10,4],[10,7],[-10,1],[3,9],[8,7],[-7,-1],[9,-10],[1,-6],[4,8],[-4,3],[-10,-3],[10,8],[2,-5],[-6,-1],[-4,-3],[9,-5],[9,-9],[10,8],[-10,2],[-5,-7],[-8,7],[1,-3],[2,-7],[5,-6],[-9,9],[10,-9],[8,-10],[4,9],[10,-5],[5,5],[2,-8],[7,-1],[-10,-4],[-8,1],[-6,9],[8,9],[-4,-10],[-2,6],[-6,3],[8,-8],[4,1],[8,-8],[-6,-2],[4,4],[-8,7],[-7,6],[-7,7],[-2,-6],[-10,8],[2,2],[-4,-10],[-8,6],[-9,7],[-6,-9],[1,8],[2,2],[2,2],[8,10],[8,10],[-6,-5],[-9,-9],[5,-10],[6,2],[2,2],[5,-8],[7,5],[-7,5],[-3,-8],[-1,9],[-7,-6],[9,-10],[1,-4],[5,-9],[9,-8],[-1,2],[3,6],[7,2],[4,-4],[6,-5],[8,-3],[-1,-5],[-8,-9],[-8,-1],[-10,-5],[-4,-10],[6,3],[-10,1],[6,-8],[8,-1],[8,5],[2,-5],[3,-9],[8,5],[-5,-8],[-5,-2],[-4,-1],[-6,1],[4,-8],[-2,-1],[6,1],[-1,-9],[-7,1],[7,6],[-4,8],[-1,1],[-2,4],[-5,-8],[4,4],[10,-2],[-2,10],[4,3],[-4,7],[-9,-3],[-9,-5],[-3,-5],[4,4],[3,-10],[9,-4],[-7,3],[7,7],[8,7]], dtype = "int8")#candidate|205|(280, 2)|const|int8
call_204 = func_75_call(relay.reshape(const_205.astype('int8'), [4, 10, 14]), relay.reshape(const_205.astype('int8'), [4, 10, 14]), )
call_206 = func_75_call(relay.reshape(const_205.astype('int8'), [4, 10, 14]), relay.reshape(const_205.astype('int8'), [4, 10, 14]), )
func_75_call = mod.get_global_var('func_75')
func_78_call = mutated_mod.get_global_var('func_78')
call_209 = func_75_call(relay.reshape(call_204.astype('int8'), [4, 10, 14]), relay.reshape(const_205.astype('int8'), [4, 10, 14]), )
call_210 = func_75_call(relay.reshape(call_204.astype('int8'), [4, 10, 14]), relay.reshape(const_205.astype('int8'), [4, 10, 14]), )
uop_212 = relay.acos(call_204.astype('float64')) # shape=(4, 10, 14)
uop_214 = relay.acos(call_206.astype('float64')) # shape=(4, 10, 14)
var_218 = relay.var("var_218", dtype = "float64", shape = (4, 10, 14))#candidate|218|(4, 10, 14)|var|float64
bop_219 = relay.subtract(uop_212.astype('float64'), relay.reshape(var_218.astype('float64'), relay.shape_of(uop_212))) # shape=(4, 10, 14)
bop_222 = relay.subtract(uop_214.astype('float64'), relay.reshape(var_218.astype('float64'), relay.shape_of(uop_214))) # shape=(4, 10, 14)
bop_226 = relay.less_equal(uop_212.astype('bool'), relay.reshape(bop_219.astype('bool'), relay.shape_of(uop_212))) # shape=(4, 10, 14)
bop_229 = relay.less_equal(uop_214.astype('bool'), relay.reshape(bop_222.astype('bool'), relay.shape_of(uop_214))) # shape=(4, 10, 14)
func_75_call = mod.get_global_var('func_75')
func_78_call = mutated_mod.get_global_var('func_78')
call_232 = func_75_call(relay.reshape(const_205.astype('int8'), [4, 10, 14]), relay.reshape(call_209.astype('int8'), [4, 10, 14]), )
call_233 = func_75_call(relay.reshape(const_205.astype('int8'), [4, 10, 14]), relay.reshape(call_209.astype('int8'), [4, 10, 14]), )
output = relay.Tuple([bop_190,const_205,call_209,bop_226,call_232,])
output2 = relay.Tuple([bop_190,const_205,call_210,bop_229,call_233,])
func_247 = relay.Function([var_189,var_218,], output)
mod['func_247'] = func_247
mod = relay.transform.InferType()(mod)
mutated_mod['func_247'] = func_247
mutated_mod = relay.transform.InferType()(mutated_mod)
func_247_call = mutated_mod.get_global_var('func_247')
var_249 = relay.var("var_249", dtype = "uint64", shape = (4, 6, 13))#candidate|249|(4, 6, 13)|var|uint64
var_250 = relay.var("var_250", dtype = "float64", shape = (4, 10, 14))#candidate|250|(4, 10, 14)|var|float64
call_248 = func_247_call(var_249,var_250,)
output = call_248
func_251 = relay.Function([var_249,var_250,], output)
mutated_mod['func_251'] = func_251
mutated_mod = relay.transform.InferType()(mutated_mod)
var_274 = relay.var("var_274", dtype = "bool", shape = (11, 8, 16))#candidate|274|(11, 8, 16)|var|bool
var_275 = relay.var("var_275", dtype = "bool", shape = (11, 8, 16))#candidate|275|(11, 8, 16)|var|bool
bop_276 = relay.logical_or(var_274.astype('bool'), relay.reshape(var_275.astype('bool'), relay.shape_of(var_274))) # shape=(11, 8, 16)
bop_283 = relay.greater_equal(var_275.astype('bool'), relay.reshape(var_274.astype('bool'), relay.shape_of(var_275))) # shape=(11, 8, 16)
bop_293 = relay.power(var_274.astype('float32'), relay.reshape(bop_283.astype('float32'), relay.shape_of(var_274))) # shape=(11, 8, 16)
bop_299 = relay.multiply(bop_293.astype('float32'), relay.reshape(var_274.astype('float32'), relay.shape_of(bop_293))) # shape=(11, 8, 16)
bop_305 = relay.equal(bop_293.astype('bool'), relay.reshape(bop_283.astype('bool'), relay.shape_of(bop_293))) # shape=(11, 8, 16)
func_98_call = mod.get_global_var('func_98')
func_102_call = mutated_mod.get_global_var('func_102')
const_317 = relay.const([[-9,-9,-8],[-10,6,3],[6,-4,-7],[-6,5,1],[-6,-6,6],[-6,-7,-6],[5,-7,-9],[-6,4,-1],[-6,-6,-4],[6,3,-6],[3,2,6],[-5,5,3],[-4,8,-8],[9,-5,-4],[3,10,-1],[-2,8,-4],[-5,7,-1],[-1,-9,5],[9,1,10],[-2,-5,-8],[1,-3,-6],[-5,-4,-1],[5,1,1],[1,-1,-4],[8,-3,-10],[-1,1,-10],[-1,-9,9],[1,2,-6],[-10,-2,9],[-10,-4,2],[-4,-5,-7],[1,1,-2],[-8,4,6],[2,9,5],[-4,7,-9],[-3,1,7],[4,5,-8],[6,9,5],[-2,-1,4],[8,-2,5],[-3,-6,6],[-4,1,-8],[8,4,-5],[-5,7,5],[2,9,-10],[9,3,-10],[9,1,-3],[9,-2,9],[2,-4,9],[-10,5,-7],[6,-8,3],[9,-10,-2],[-1,4,-1],[-1,-6,2],[6,-6,-3],[-6,1,7],[-2,6,9],[6,-8,-3],[5,4,1],[-5,-9,-8],[6,-9,-9],[-8,5,4],[-3,-3,-3],[2,10,-9],[1,8,5],[-2,1,7],[-10,-1,-1],[8,-7,5],[-7,8,-2],[-10,9,4],[-5,6,-8],[6,-7,4],[1,-2,-2],[6,5,-1],[-1,1,-1],[5,-1,-4],[5,8,4],[-2,3,3],[2,-7,3],[3,8,-5],[8,7,-4],[-8,-10,1],[-8,8,8],[7,1,8],[-1,-10,-4],[2,-7,-1],[9,-10,-8],[2,5,-7],[1,4,7],[8,4,9],[-4,-9,-9],[2,2,8],[2,-5,-1],[-9,-6,6],[6,3,3],[7,4,-10],[6,2,5],[-7,-1,-3],[3,-7,-8],[4,9,3],[1,1,6],[8,-5,-2],[-2,9,-9],[8,-6,-3],[-9,8,6],[10,-1,-3],[-6,1,-5],[4,-9,-3],[-5,4,-7],[4,4,4],[3,-9,6],[-9,5,6],[2,7,2],[2,2,-7],[-3,-5,-4],[8,2,10],[-9,2,9],[-6,-7,4],[5,-7,4],[-6,-6,5],[-9,-5,-10],[10,-4,-5],[-10,5,6],[-9,5,-7],[-7,-5,5],[10,5,-4],[-10,6,9],[-8,4,8],[-3,10,10],[-9,10,1],[6,-9,9],[-5,10,-5],[-5,-7,6],[-9,-2,-1],[6,-1,-3],[-2,-6,-7],[-6,3,4],[-2,1,-9],[5,-10,-9],[-1,-8,-3],[-5,-2,-8],[5,3,-8],[8,-7,-1],[7,-4,-5],[5,-10,-10],[-6,8,5],[6,9,-10],[6,1,6],[-2,10,-2],[-1,-2,-2],[1,-7,-5],[-6,4,10],[-4,-1,-4],[7,-2,1],[1,-2,10],[5,-1,4],[-5,-9,-6],[3,9,-7],[1,-6,10],[-8,9,3],[-4,-5,-9],[3,7,-2],[-2,7,7],[2,-5,-4],[8,-5,1],[-6,-6,-2],[-8,-10,-6],[2,-7,9],[2,-3,-2],[3,8,4],[-5,6,1],[-6,-10,8],[9,4,-8],[2,-4,8],[-2,5,6],[-1,2,-4],[-5,6,9],[3,-3,-5],[-10,2,10],[2,-8,3],[-8,8,-10],[-5,-3,2],[4,-9,2],[9,-9,-8],[8,2,-6],[-3,-7,-6],[-1,4,1],[-5,1,1],[8,-5,-8],[9,-2,-3],[5,-5,-7],[3,-2,-2],[-5,8,-3],[-7,-9,-9],[5,5,8],[-8,-6,-7],[-5,-10,9],[4,9,8],[-10,-2,-9],[-6,-10,6],[10,2,8],[-8,-2,-4],[10,-3,-9],[-10,9,-10],[4,5,-8],[3,6,6],[7,-10,2],[-7,1,1],[2,1,-5],[10,-8,5],[-7,-3,-6],[-8,3,-1],[2,-7,-10],[5,4,-1],[-6,10,7],[9,8,6],[3,8,-4],[2,8,10],[-2,8,-10],[4,-2,-9],[2,5,-2],[-3,-7,-2],[9,-6,5],[-3,-3,-10],[-3,-1,9],[-6,-10,8],[-1,8,1],[8,3,-6],[-4,-5,3],[-9,10,-1],[-2,1,-9],[-3,-1,8],[-10,-3,-4],[1,-10,-6],[2,1,-7],[-2,-1,-10],[-1,1,-5],[-5,7,8],[-6,1,5],[-3,5,10],[6,1,-6],[-6,-4,-10],[-7,-4,2],[-8,-2,8],[-8,-6,-3],[-3,10,-6],[4,3,10],[9,-8,-2],[8,1,-10],[-7,10,-1],[2,3,9],[10,3,3],[9,-1,-6],[1,2,4],[-1,-2,8],[5,9,-4],[7,-2,-9],[2,-7,-9],[7,-9,-10],[-2,-5,3],[10,-3,-5],[-5,-3,1],[-4,-2,-7],[7,8,4],[8,2,-2],[7,2,9],[9,10,-3],[-5,-5,9],[7,7,-2],[7,6,-3],[6,-8,-4],[-6,3,6],[-6,-6,-8],[-4,-10,4],[9,-2,-3],[-3,9,-7],[-10,-5,-10],[2,9,-8],[10,-6,2],[-2,3,8],[-1,5,6],[-2,-7,-1],[5,5,-1],[3,-5,-4],[8,10,2],[-9,10,-4],[6,-3,10],[-1,9,-8],[-9,10,9],[2,1,-1],[9,5,-4],[6,-2,4],[-4,8,-1],[2,9,-3],[-7,8,-7],[1,10,7],[-3,-3,-3],[9,-4,-3],[-3,-4,-8],[-3,-3,4],[-1,-10,-1],[5,10,-10],[-7,-4,-8],[-7,-1,-5],[9,5,10],[-6,6,-2],[-2,10,-6],[-7,-3,-5],[6,-4,-4],[-8,-9,-7],[-4,-2,8],[7,10,2],[-10,-1,1],[-4,8,6],[8,-5,8],[-8,4,5],[3,-3,-9],[-8,-5,-2],[5,-3,-3],[-4,-2,-10],[10,3,7],[9,-9,-4],[7,-7,-1],[1,4,-10],[3,-10,3],[-7,9,1],[7,-5,-10],[5,10,-2],[-3,-8,6],[-4,4,-8],[-5,3,7],[9,4,2],[-4,3,-1],[7,-9,8],[5,-8,7],[7,3,7],[4,3,1],[-1,-2,-9],[1,-4,-2],[-10,6,7],[6,-9,-4],[6,-10,3],[2,-6,-10],[5,10,-4],[4,9,-3],[-5,-10,5],[-1,-9,8],[4,-6,4],[5,9,-1],[-6,-8,4],[3,8,6],[-7,-6,9],[8,6,4],[-2,-9,4],[4,4,-7],[3,10,3],[-7,-4,-7],[-7,-8,9],[-2,1,-1],[-3,5,7],[8,3,-1],[3,-9,1],[1,10,-2],[1,1,-9],[-9,5,4],[7,2,-7],[10,-1,10],[-4,-3,-10],[5,-2,7],[7,8,9],[6,1,10],[8,-1,-9],[-4,-3,9],[-5,7,1],[1,-10,-1],[-8,-7,-4],[-8,-4,-3],[1,8,-8],[7,3,1],[8,3,-10],[6,-3,8],[7,10,-6],[-8,4,-10],[5,4,-1],[-4,-6,6],[-3,-1,-5],[-4,6,8],[8,-8,4],[-3,-5,-8],[1,-5,1],[10,-4,-10],[3,-5,-9],[10,1,-10],[-7,-3,-1],[7,3,10],[3,-7,4],[-8,-3,-5],[-8,-8,4],[-3,2,-1],[6,-4,10],[-4,3,-10],[1,3,2],[6,10,10],[-3,-4,8],[-7,-5,-5],[4,-8,3],[5,7,-9],[3,-3,-1],[-6,-4,1],[-8,-8,9],[8,5,2],[5,3,3],[-4,-9,-9],[10,9,8],[7,8,10],[1,1,-5],[5,8,3],[1,-8,-4],[3,2,9],[-1,9,4],[-5,7,-10],[-8,-4,2],[-10,7,-3],[4,-7,7],[-10,4,6],[-7,2,8],[10,-4,6],[2,-9,3],[9,8,-6],[4,3,-3],[6,1,-6],[8,7,-10],[10,-7,10],[2,9,-7],[-5,9,9],[-7,2,10],[7,5,4],[6,-7,4],[5,9,6],[-7,7,8],[-5,-8,1],[6,10,1],[-7,9,-2],[-3,10,10],[-6,-6,-2],[8,9,6],[-5,-9,6],[-10,-9,-8],[3,7,-1],[-9,2,1],[-10,-3,4],[9,4,6],[-10,-6,7],[-9,5,-6],[-10,5,-10],[8,-5,9],[2,1,-5],[-9,-5,-3],[9,7,-7],[10,9,1],[-2,-1,2],[6,-7,-2],[-4,-9,-6],[-3,6,6],[-2,1,2],[1,3,-2],[-2,-10,5],[-5,-3,-8],[-9,-3,-3],[-8,-7,-8],[-1,4,-3],[-8,5,5],[-10,-9,-7],[3,9,2],[-6,9,-9],[6,-6,-5],[-7,3,1],[-3,10,-5],[10,4,-5],[-1,9,8],[-5,-10,-3],[9,8,-5],[1,9,10],[2,-1,9],[-5,8,-2],[-3,-9,9],[8,5,1],[-4,-7,-6],[4,-9,6],[-10,2,-4],[4,-1,-10],[4,-8,5],[-10,2,1],[-8,-7,1],[-7,-4,-1],[-3,-8,8],[5,-10,-3],[-2,6,-10],[-3,-4,-5],[6,10,-3],[10,5,-10],[-8,5,10],[2,10,-6],[-5,-9,9],[-5,-8,-5],[-5,-8,-5],[-3,5,-10],[7,7,-10],[-8,-1,-5],[4,5,7],[4,-9,2],[3,6,5],[-5,9,-10],[2,-5,6],[3,-4,-2],[2,-2,-10],[-6,2,-3],[9,-9,-9],[-9,-6,5],[-6,2,1],[-10,-1,6],[9,-4,-4],[-1,-4,-1],[-9,5,-7],[-9,-9,3],[-6,2,7],[9,-8,8],[10,4,10],[-9,8,-6],[4,-9,8],[-2,-5,10],[-4,8,1],[-5,5,-7],[7,-6,1],[9,9,6],[-10,-10,5],[-6,10,-1],[2,-4,-5],[6,10,-8],[-5,-4,-7],[-10,1,3],[-1,-6,-5],[-3,-5,5],[-1,-4,4],[2,9,2],[6,-2,-1],[6,-3,2],[-9,6,4],[-6,6,-6],[1,8,3],[5,-1,10],[-3,-5,-9],[6,-3,-4],[8,4,7],[2,7,8],[-9,1,2],[-3,6,-1],[4,2,2],[6,3,1],[9,10,3],[-8,-2,2],[8,7,1],[8,-7,-5],[-6,6,9],[3,-3,4],[2,-8,-10],[-8,-8,-2],[-5,6,-3],[-1,-10,-10],[6,-6,8],[-5,-3,5],[-5,-2,8],[-2,6,-6],[-9,-8,4],[9,-3,9],[7,4,-8],[5,-1,-8],[3,-3,10],[-6,4,7],[3,-8,-10],[-10,2,1],[2,-3,3],[2,-1,-4],[4,-9,5],[-8,1,7],[-4,10,-10],[4,-7,4],[10,7,-3],[-2,3,7],[7,-6,-3],[2,9,-3],[-5,10,-6],[1,2,-7],[10,-2,-3],[1,-6,10],[10,-9,6],[-10,9,-2],[-6,-2,2],[3,-3,3],[6,5,10],[1,1,-1],[-2,-9,-4],[-9,-3,-1],[4,-5,9],[-10,1,-6],[5,3,9],[-3,8,3],[3,2,-5],[-9,7,4],[3,10,3],[6,-5,-4],[-4,5,-8],[-2,2,-7],[7,4,1],[9,-3,-9],[-6,4,4],[6,-4,-10],[1,5,7],[10,9,7],[3,-5,4],[-5,-9,-2],[7,-2,10],[3,-5,-9],[-10,6,5],[9,-9,8],[-8,-6,2],[-9,7,-9],[-3,-2,-1],[-1,-10,-8],[2,2,-4],[9,-3,-9],[4,-3,-1],[-9,3,5],[10,4,-4],[-4,-2,2],[-7,7,7],[-5,4,-1],[8,-9,1],[6,-1,1],[5,-4,2],[-4,-6,-10],[-7,-1,5],[-7,-1,-6],[2,6,-2],[-7,-2,5],[-6,6,-8],[-2,-3,7],[6,-1,-10],[-3,-10,-4],[-6,1,-3],[-4,5,-10],[6,9,6],[7,8,2],[6,-8,2],[1,4,-6],[8,3,-9],[6,4,5],[9,-3,2],[5,-9,-6],[-7,-9,-9],[-6,-6,-8],[-4,8,-10],[-10,-5,-8],[-10,-4,-5],[2,-7,3],[-7,-1,-9],[-7,5,-3],[-10,-4,7],[1,4,-6],[8,-3,10],[-9,4,-1],[-10,6,-4],[10,3,9],[7,-7,7],[-2,-5,10],[-10,2,10],[6,4,7],[4,-1,5],[-7,4,-5],[-1,-6,3],[-10,4,6],[-9,-7,-6],[-10,6,-7],[3,-5,-10],[-8,9,-7],[-9,-5,1],[10,-6,3],[-1,-4,4],[8,-5,-6],[3,-6,-9],[5,2,-4],[3,-4,-9],[3,-8,7],[-6,1,7],[-8,3,-3],[9,-4,-9],[-3,-2,-3],[2,3,1],[-5,-4,-10],[-6,-1,2],[-3,1,-9],[6,5,9],[-9,2,-2],[-1,-1,3],[-7,-8,8],[-10,1,8],[2,-2,-2],[-2,1,-2],[-8,1,-9],[1,-5,-2],[-8,-6,4],[7,-8,2],[1,8,2],[6,-4,-9],[5,-8,-8]], dtype = "int8")#candidate|317|(715, 3)|const|int8
call_316 = func_98_call(relay.reshape(const_317.astype('int8'), [11, 15, 13]), relay.reshape(const_317.astype('int8'), [11, 15, 13]), )
call_318 = func_98_call(relay.reshape(const_317.astype('int8'), [11, 15, 13]), relay.reshape(const_317.astype('int8'), [11, 15, 13]), )
output = relay.Tuple([bop_276,bop_299,bop_305,call_316,const_317,])
output2 = relay.Tuple([bop_276,bop_299,bop_305,call_318,const_317,])
func_330 = relay.Function([var_274,var_275,], output)
mod['func_330'] = func_330
mod = relay.transform.InferType()(mod)
mutated_mod['func_330'] = func_330
mutated_mod = relay.transform.InferType()(mutated_mod)
func_330_call = mutated_mod.get_global_var('func_330')
var_332 = relay.var("var_332", dtype = "bool", shape = (11, 8, 16))#candidate|332|(11, 8, 16)|var|bool
var_333 = relay.var("var_333", dtype = "bool", shape = (11, 8, 16))#candidate|333|(11, 8, 16)|var|bool
call_331 = func_330_call(var_332,var_333,)
output = call_331
func_334 = relay.Function([var_332,var_333,], output)
mutated_mod['func_334'] = func_334
mutated_mod = relay.transform.InferType()(mutated_mod)
var_372 = relay.var("var_372", dtype = "uint16", shape = (7, 9, 5))#candidate|372|(7, 9, 5)|var|uint16
var_373 = relay.var("var_373", dtype = "uint16", shape = (7, 9, 5))#candidate|373|(7, 9, 5)|var|uint16
bop_374 = relay.equal(var_372.astype('bool'), relay.reshape(var_373.astype('bool'), relay.shape_of(var_372))) # shape=(7, 9, 5)
output = bop_374
output2 = bop_374
func_382 = relay.Function([var_372,var_373,], output)
mod['func_382'] = func_382
mod = relay.transform.InferType()(mod)
mutated_mod['func_382'] = func_382
mutated_mod = relay.transform.InferType()(mutated_mod)
func_382_call = mutated_mod.get_global_var('func_382')
var_384 = relay.var("var_384", dtype = "uint16", shape = (7, 9, 5))#candidate|384|(7, 9, 5)|var|uint16
var_385 = relay.var("var_385", dtype = "uint16", shape = (7, 9, 5))#candidate|385|(7, 9, 5)|var|uint16
call_383 = func_382_call(var_384,var_385,)
output = call_383
func_386 = relay.Function([var_384,var_385,], output)
mutated_mod['func_386'] = func_386
mutated_mod = relay.transform.InferType()(mutated_mod)
const_575 = relay.const([[[9,10,8,-8,-2,-4,2,-8],[10,-3,-6,8,-5,-7,-7,5],[-5,-6,6,-7,-1,-1,6,1],[9,-10,-4,-3,1,-10,-4,-4],[9,4,-6,-4,-2,9,6,-6],[5,-10,-6,2,4,6,4,-7]],[[-2,10,1,-2,-1,-3,-4,-2],[6,-9,-6,2,10,7,7,-1],[-6,6,7,2,-10,4,7,2],[7,-10,2,-2,7,8,-3,5],[-2,-9,-9,-6,10,-5,-8,-2],[8,-8,3,5,-7,-6,-2,4]],[[-9,2,7,-9,9,-6,8,-10],[2,-1,7,-5,-8,7,-9,5],[-5,6,-6,9,-8,10,4,4],[-9,-1,10,-3,4,-10,10,-10],[2,-6,-2,4,1,6,8,-1],[7,-5,5,-7,7,-1,3,-3]],[[1,5,-4,1,-5,-1,1,1],[-4,-4,2,10,-9,8,4,8],[9,-9,4,-10,-9,3,-5,-7],[-1,-9,-2,-4,-10,2,-2,-1],[6,7,10,-1,10,-8,-10,-5],[-7,6,3,-10,-10,9,7,-4]],[[8,4,-1,-8,1,-8,-2,-2],[7,-8,-5,5,3,9,2,2],[7,9,-1,8,4,2,9,4],[-9,-8,1,2,-5,-5,-8,-8],[-4,-2,-7,-8,-6,-6,-4,3],[-5,8,2,1,2,-6,-4,5]],[[3,-5,-10,1,3,3,10,-1],[-6,-10,-10,6,8,2,6,1],[7,-2,-9,4,-2,1,4,-6],[2,9,-8,6,8,-7,-9,6],[4,-4,-10,-7,9,2,-2,6],[-6,-8,1,-10,3,-5,-8,8]],[[-6,-5,5,9,-1,-7,-1,7],[-9,2,10,-1,1,-5,5,-1],[8,-1,9,6,3,3,8,1],[-6,7,7,8,4,-7,9,-3],[-3,9,-4,-1,10,-1,5,-4],[-7,8,-1,-1,2,-5,5,9]],[[2,-9,-4,-3,4,1,-6,-4],[-5,8,-1,-10,-7,5,3,-10],[-1,-3,-9,9,10,7,-4,10],[3,5,7,10,-2,-5,-8,-2],[-6,-6,-9,2,-5,-5,2,-8],[1,1,-1,-1,-6,10,5,-7]],[[-4,8,7,3,1,-1,-5,-7],[4,-6,1,-10,6,-2,-1,-4],[1,-8,-3,2,-3,6,4,4],[-3,5,-10,10,-4,-6,1,-9],[1,-3,-2,-8,-10,1,-10,-1],[7,-7,-10,2,-1,-10,8,5]],[[9,-6,2,4,-10,5,-3,-3],[4,-7,10,10,-8,4,-2,-7],[-6,1,-9,-2,-3,-9,3,7],[3,-2,1,-4,6,7,6,8],[1,4,8,8,-2,8,-8,-5],[-6,6,2,-8,-8,4,-3,8]],[[6,3,-9,-7,-6,8,-7,7],[-1,3,-10,10,10,-4,10,6],[-5,10,-7,-4,-2,-9,5,-4],[-6,8,2,4,3,4,9,9],[-6,-7,-6,8,-3,-6,-10,5],[-9,-3,-2,-2,4,-8,5,-10]],[[-6,6,10,-9,10,1,8,-7],[2,10,7,-1,-10,-8,8,-8],[5,-6,7,-5,-5,-6,-6,-1],[-2,-2,-7,-2,4,3,-5,4],[-2,-2,10,-5,-8,9,5,2],[-3,8,9,-8,-7,-5,-10,2]]], dtype = "int64")#candidate|575|(12, 6, 8)|const|int64
const_576 = relay.const([[[4,-2,9,1,5,-7,9,-10],[-5,6,-9,-2,4,1,-6,6],[8,-4,-6,-8,1,9,-3,6],[1,2,10,3,9,-6,8,5],[-1,-1,-6,-2,-4,6,2,-5],[-3,7,10,-7,-3,4,-6,5]],[[9,-6,5,-1,-9,-6,10,5],[10,-9,1,-1,-1,-4,-5,-6],[-7,7,-10,-2,-7,1,-2,1],[8,2,5,6,8,3,-10,-8],[-1,10,-5,-10,1,-10,-8,2],[-10,-9,-10,3,4,-3,-6,3]],[[8,-1,-6,-3,-4,9,-3,-2],[-7,-10,-6,9,10,8,3,-5],[7,-3,-9,-9,9,-7,-8,5],[-9,-4,-9,-9,-5,5,8,-10],[-6,-7,9,-7,3,9,4,7],[-1,10,-4,-9,6,6,5,-1]],[[8,5,-6,-4,-8,-2,-10,-6],[10,3,7,-2,7,6,-3,-3],[5,-8,2,-1,8,-3,-2,1],[6,-5,-7,5,4,-8,-8,-10],[8,-5,-10,1,8,6,2,4],[-1,-3,8,2,9,1,-10,-10]],[[6,9,10,4,3,-9,-7,-4],[-2,5,-5,1,9,-1,2,-7],[5,-6,5,4,-10,-2,-6,5],[5,7,9,6,-10,8,6,-2],[-1,-7,-8,6,-4,7,7,7],[2,-4,9,-10,6,-3,-3,-5]],[[-3,3,-5,-3,7,8,-4,6],[6,8,9,-8,-3,-9,-6,-3],[9,10,4,3,-5,-5,-6,4],[10,-1,9,-4,-8,9,7,3],[-7,-2,-8,4,5,-10,-10,-5],[6,9,-5,8,-8,-9,10,-3]],[[-5,-1,7,6,-5,-5,1,-7],[-7,-4,1,-10,-10,4,-1,10],[9,10,-5,9,1,4,5,-10],[-8,-9,-6,-8,9,8,-8,-7],[10,-4,-4,-4,9,8,1,-10],[-2,-10,9,-7,-9,-8,5,-5]],[[-3,-9,-1,1,-5,8,6,-9],[-7,1,8,-4,-4,5,6,-6],[8,-5,2,-1,-2,5,6,-10],[-4,1,-8,-10,-7,-6,4,3],[7,2,-3,-8,-3,5,-6,4],[-6,1,-10,-10,5,-2,-6,-10]],[[-3,4,-7,-1,5,10,2,1],[-9,-6,3,-7,-2,7,2,-2],[-2,-10,-1,9,-8,-9,-3,10],[5,2,-2,8,6,1,-5,-4],[3,7,-5,-2,-5,3,3,1],[-9,-10,4,6,-5,9,-2,-8]],[[6,-9,-10,-2,-1,-5,8,6],[1,-2,-4,-4,-5,-9,-5,-2],[-2,2,3,9,8,-2,-9,8],[2,2,10,5,10,-4,2,-6],[8,-8,-1,-7,-10,7,-7,7],[7,-5,7,2,-7,4,4,-6]],[[7,5,1,-9,3,8,5,9],[-7,8,-8,3,9,-5,-7,-7],[-4,-6,-6,-6,3,9,3,1],[-4,-6,-3,8,-6,7,5,-2],[6,-6,3,3,9,-5,2,2],[6,10,9,-1,2,-10,2,8]],[[8,-4,9,8,-1,-10,-8,1],[-10,-3,-1,-4,2,10,8,6],[3,8,5,-9,8,9,2,9],[-3,3,-7,-6,2,7,-3,7],[-10,7,-10,4,-6,1,-5,9],[3,1,-10,-2,-3,2,9,4]]], dtype = "int64")#candidate|576|(12, 6, 8)|const|int64
bop_577 = relay.multiply(const_575.astype('int64'), relay.reshape(const_576.astype('int64'), relay.shape_of(const_575))) # shape=(12, 6, 8)
output = bop_577
output2 = bop_577
func_593 = relay.Function([], output)
mod['func_593'] = func_593
mod = relay.transform.InferType()(mod)
mutated_mod['func_593'] = func_593
mutated_mod = relay.transform.InferType()(mutated_mod)
func_593_call = mutated_mod.get_global_var('func_593')
call_594 = func_593_call()
output = call_594
func_595 = relay.Function([], output)
mutated_mod['func_595'] = func_595
mutated_mod = relay.transform.InferType()(mutated_mod)
func_593_call = mod.get_global_var('func_593')
func_595_call = mutated_mod.get_global_var('func_595')
call_616 = func_593_call()
call_617 = func_593_call()
func_98_call = mod.get_global_var('func_98')
func_102_call = mutated_mod.get_global_var('func_102')
var_630 = relay.var("var_630", dtype = "int8", shape = (2145,))#candidate|630|(2145,)|var|int8
call_629 = func_98_call(relay.reshape(var_630.astype('int8'), [11, 15, 13]), relay.reshape(var_630.astype('int8'), [11, 15, 13]), )
call_631 = func_98_call(relay.reshape(var_630.astype('int8'), [11, 15, 13]), relay.reshape(var_630.astype('int8'), [11, 15, 13]), )
output = relay.Tuple([call_616,call_629,var_630,])
output2 = relay.Tuple([call_617,call_631,var_630,])
func_647 = relay.Function([var_630,], output)
mod['func_647'] = func_647
mod = relay.transform.InferType()(mod)
mutated_mod['func_647'] = func_647
mutated_mod = relay.transform.InferType()(mutated_mod)
var_648 = relay.var("var_648", dtype = "int8", shape = (2145,))#candidate|648|(2145,)|var|int8
func_647_call = mutated_mod.get_global_var('func_647')
call_649 = func_647_call(var_648)
output = call_649
func_650 = relay.Function([var_648], output)
mutated_mod['func_650'] = func_650
mutated_mod = relay.transform.InferType()(mutated_mod)
func_593_call = mod.get_global_var('func_593')
func_595_call = mutated_mod.get_global_var('func_595')
call_706 = func_593_call()
call_707 = func_593_call()
const_713 = relay.const([[[-7,-8,8,3,-4,1,-2,-3],[-5,8,1,4,-9,-1,9,2],[9,-2,-5,-7,3,9,3,8],[6,-3,4,-6,-4,-3,-9,10],[6,6,-8,-2,-1,6,-4,5],[-2,8,6,9,3,4,9,-9]],[[-7,-8,-8,-5,3,4,-8,7],[5,-6,-1,2,8,-3,1,4],[9,-4,4,7,-3,-3,9,-10],[5,-9,10,-10,7,-5,-7,8],[-1,-4,-4,-2,-1,-9,-5,9],[5,-8,-7,-3,-2,-5,-7,7]],[[-7,-3,-2,-7,10,-5,3,8],[-2,-2,3,-5,6,-5,5,9],[3,-3,6,7,-6,-2,-10,8],[7,1,7,-6,-10,-6,-3,8],[-8,10,-1,-2,3,7,-4,-5],[8,2,4,8,1,10,10,1]],[[-9,2,9,-8,-9,6,-3,-6],[-7,-6,-6,-6,8,-10,-3,8],[3,-3,-5,-5,-9,8,3,1],[-2,-2,1,5,3,-2,8,10],[10,-6,-6,7,-3,7,1,-8],[7,1,-8,-1,-6,7,1,-7]],[[-1,-3,-3,4,9,2,1,3],[9,-8,-2,8,-10,-2,-4,-1],[2,-6,6,1,-1,-5,2,-4],[4,10,1,-6,4,-3,8,5],[-1,5,1,5,8,8,-10,2],[4,-1,-1,7,6,-4,-7,-2]],[[-2,-6,-2,6,-10,9,5,-5],[-5,-4,-3,2,3,4,8,8],[3,-2,-4,-5,1,6,9,-4],[10,-1,-3,2,10,7,2,-6],[9,1,4,-10,4,-2,-1,-7],[6,-4,2,4,4,8,7,2]],[[-3,9,-3,-4,-9,9,-3,-1],[-6,-10,10,10,5,9,-3,-8],[-6,-4,8,-5,4,-8,-2,-8],[1,7,-1,-5,-3,8,5,-2],[5,-9,2,3,-8,5,-8,-8],[-10,-2,10,-9,4,-10,-5,2]],[[-8,4,-7,-8,-8,4,-3,-6],[-7,-3,-8,1,10,-2,4,7],[-9,2,8,2,2,-9,-8,9],[5,-4,6,6,-7,-3,4,-4],[10,10,9,-1,8,5,7,3],[8,7,-3,2,-1,2,6,10]],[[-6,-4,-4,6,-9,8,-7,-9],[8,-10,7,10,10,5,2,2],[8,2,4,-4,1,10,4,-4],[5,3,8,4,-9,-4,4,8],[-5,-4,10,-2,9,-10,3,-7],[-6,4,8,-1,-7,-8,2,-5]],[[-8,-6,6,-1,1,-9,-5,-5],[-9,-6,7,1,-2,-4,-5,-1],[-7,-5,-4,9,-10,-10,-5,6],[3,8,-9,3,8,-8,-6,7],[-6,6,9,-5,-4,-3,-1,-2],[9,6,10,1,-1,-2,8,2]],[[-2,-3,-6,1,7,-8,1,5],[-9,-9,-4,-7,-9,-2,8,10],[2,10,-4,-7,-5,9,4,-7],[9,-2,-6,8,5,2,-3,3],[8,3,-6,-2,5,6,-9,4],[9,-1,-2,2,-6,-1,9,-4]],[[9,6,10,-8,-1,-6,-7,8],[-4,-5,-5,-6,-1,2,2,6],[3,-9,-2,-10,1,-5,6,-8],[-2,9,-10,-2,3,-3,-10,-8],[-3,-8,4,-9,-3,5,10,2],[-8,3,7,1,9,-4,-2,-2]]], dtype = "int64")#candidate|713|(12, 6, 8)|const|int64
bop_714 = relay.right_shift(call_706.astype('int64'), relay.reshape(const_713.astype('int64'), relay.shape_of(call_706))) # shape=(12, 6, 8)
bop_717 = relay.right_shift(call_707.astype('int64'), relay.reshape(const_713.astype('int64'), relay.shape_of(call_707))) # shape=(12, 6, 8)
func_330_call = mod.get_global_var('func_330')
func_334_call = mutated_mod.get_global_var('func_334')
var_723 = relay.var("var_723", dtype = "bool", shape = (1408,))#candidate|723|(1408,)|var|bool
call_722 = relay.TupleGetItem(func_330_call(relay.reshape(var_723.astype('bool'), [11, 8, 16]), relay.reshape(var_723.astype('bool'), [11, 8, 16]), ), 2)
call_724 = relay.TupleGetItem(func_334_call(relay.reshape(var_723.astype('bool'), [11, 8, 16]), relay.reshape(var_723.astype('bool'), [11, 8, 16]), ), 2)
bop_725 = relay.logical_and(var_723.astype('bool'), relay.reshape(call_722.astype('bool'), relay.shape_of(var_723))) # shape=(1408,)
bop_728 = relay.logical_and(var_723.astype('bool'), relay.reshape(call_724.astype('bool'), relay.shape_of(var_723))) # shape=(1408,)
output = relay.Tuple([bop_714,bop_725,])
output2 = relay.Tuple([bop_717,bop_728,])
func_730 = relay.Function([var_723,], output)
mod['func_730'] = func_730
mod = relay.transform.InferType()(mod)
mutated_mod['func_730'] = func_730
mutated_mod = relay.transform.InferType()(mutated_mod)
var_731 = relay.var("var_731", dtype = "bool", shape = (1408,))#candidate|731|(1408,)|var|bool
func_730_call = mutated_mod.get_global_var('func_730')
call_732 = func_730_call(var_731)
output = call_732
func_733 = relay.Function([var_731], output)
mutated_mod['func_733'] = func_733
mutated_mod = relay.transform.InferType()(mutated_mod)
func_593_call = mod.get_global_var('func_593')
func_595_call = mutated_mod.get_global_var('func_595')
call_750 = func_593_call()
call_751 = func_593_call()
func_98_call = mod.get_global_var('func_98')
func_102_call = mutated_mod.get_global_var('func_102')
const_756 = relay.const([8,-6,-1,-2,9,-6,2,-4,-8,1,7,-9,5,4,-3,-4,6,-9,4,-1,-5,-2,2,-5,-8,4,10,-2,3,8,5,-8,3,8,-1,10,8,3,8,10,-4,-1,-10,-1,9,1,-3,-6,6,-2,5,-3,4,10,-3,9,-7,-2,-5,9,2,7,9,-2,7,2,-7,-6,-10,-2,9,10,4,-2,-5,-3,3,4,3,-8,1,-4,-6,9,9,1,-5,-3,-3,7,7,4,-8,-3,4,3,3,4,-10,-5,6,-8,-7,7,-7,7,-2,4,-9,5,10,1,-7,-1,7,9,-4,-4,7,2,-6,6,9,-2,-8,-4,-4,2,-9,2,2,9,6,10,5,-5,-10,10,4,-10,8,-3,-6,-6,1,-10,9,9,-5,1,3,-10,1,-4,6,7,5,-8,6,-5,4,-8,-7,2,-7,1,-1,3,-4,4,9,4,3,7,6,6,7,4,-4,7,9,3,10,-9,3,4,7,7,10,9,6,-7,-1,9,9,-7,6,8,6,-10,-1,2,-4,9,-5,-9,4,-3,9,10,-2,6,-7,-3,2,-1,-10,2,-3,10,-9,-6,7,10,5,-5,7,4,6,4,-3,-10,9,8,4,8,7,6,5,-1,6,-7,7,-4,9,10,6,-4,5,4,10,-1,-6,-10,-3,-3,-4,1,-4,-6,-6,6,8,6,3,-1,2,7,-10,-2,7,3,8,5,-10,6,7,7,-3,9,5,-7,3,-6,3,6,-3,-3,3,-2,1,9,1,7,1,8,-5,2,10,-1,-5,-5,5,9,10,-3,1,-10,9,6,3,-7,-10,-8,-6,5,7,-2,-10,2,-10,10,6,4,7,-5,-8,1,-1,10,2,-3,-7,-1,3,6,10,-7,-6,-2,-2,7,1,-8,9,-2,-5,-9,-9,9,8,5,1,-2,4,-2,-3,6,7,6,4,-8,-4,-1,-9,-3,6,-5,-10,4,3,10,-4,-9,2,10,5,7,7,10,-8,5,3,-9,-6,-6,-10,4,5,-7,-1,5,7,5,7,9,10,-9,3,5,2,10,-8,-8,-10,-9,3,8,5,-3,-1,-8,-8,4,-7,-3,-10,3,-9,-10,5,1,3,-10,-3,1,-5,4,9,7,7,-7,2,5,-10,-10,6,4,1,10,-5,7,-1,7,9,8,-5,2,-2,1,-2,8,4,-9,-4,-10,-9,2,10,-2,3,-6,2,8,-5,-7,-9,6,6,8,-2,10,-5,-3,-2,-5,-4,5,-9,1,9,-2,4,-2,3,2,-6,7,5,-8,7,-3,-2,-9,1,-6,10,9,-6,-6,-10,-4,-1,10,3,6,-1,10,-7,-6,-1,-1,8,6,-2,3,-1,8,8,-9,-8,-2,3,-2,-3,1,1,-2,3,-5,10,-4,-4,4,-4,4,9,-1,-10,-7,1,4,1,3,5,6,5,-8,-6,-5,-9,-2,-7,-3,8,-7,-7,3,6,-9,-3,8,-8,-10,-1,5,-6,-8,-4,7,10,-10,-4,4,-10,-2,-9,2,-7,2,-7,-9,5,-5,8,-10,-5,-7,5,10,-4,8,-3,1,-3,9,9,3,5,5,-10,-4,-5,-6,2,-6,10,-10,-2,-2,-3,5,1,9,7,-9,-7,2,6,2,5,6,10,6,-8,-9,3,4,3,8,-5,7,-4,6,6,-9,6,6,-1,1,3,2,-3,10,10,-6,-8,1,-1,-3,-4,9,8,-9,-8,-10,-8,8,9,-7,-5,5,7,5,-2,-6,3,-10,1,-1,8,9,-4,-9,-5,3,1,-3,-6,8,-9,6,-2,-2,-6,1,6,9,-6,-6,-7,3,9,-6,-6,-4,-1,-8,9,-3,5,-8,-5,-3,-7,4,-8,-10,2,-3,-4,-5,9,5,3,2,5,1,9,1,-4,8,1,-10,-7,3,-2,-4,2,-1,-1,-5,5,6,-1,-9,-3,7,-6,7,2,3,-8,6,-10,5,4,-8,5,4,-1,8,-10,8,-4,7,6,-1,-9,-4,-8,2,10,-2,4,-8,-8,10,5,-4,-6,-6,-3,9,-6,2,-6,5,-4,1,-2,4,-7,-6,6,-1,2,-7,6,8,-10,5,5,-2,-6,9,-1,-8,9,1,3,-8,-1,10,10,9,-8,-8,4,-4,-4,-10,7,-5,1,2,10,-1,-4,10,8,-7,-4,1,-6,10,-9,-5,8,3,-6,3,8,10,-4,-7,8,1,9,-9,9,5,10,4,-1,-7,-5,-6,-6,-4,-5,-5,7,2,-9,2,-2,6,10,10,-9,10,-9,7,-1,6,-4,-6,8,-8,10,-5,-9,-4,2,-8,-3,5,5,7,-2,9,-3,-6,6,8,-4,-8,-5,-9,8,-10,-8,-3,8,6,-3,6,3,-9,-8,4,-1,2,-7,-4,2,6,-10,2,8,-8,4,-1,7,-3,6,-6,2,-4,1,-3,-4,3,-7,2,3,-10,-3,4,-8,7,-6,2,1,4,8,6,-6,7,-2,-1,-10,-1,-2,5,4,8,2,-8,8,6,-9,9,9,-1,7,-7,-4,10,-3,-8,4,9,-5,-1,-8,10,-9,-7,9,1,-9,-2,9,1,-8,1,4,-10,-6,4,9,-5,5,9,9,1,-10,-3,7,-3,2,9,-3,-6,1,4,6,-10,-9,-6,-1,-6,-9,2,-4,3,6,-3,10,-9,-1,-10,-2,9,-9,2,3,-1,-9,-10,-7,-1,2,3,5,-2,-4,-5,-1,8,1,-10,-9,7,-3,1,10,2,-7,-6,6,3,10,-6,4,1,-5,-2,-1,4,-7,-3,-8,3,-1,-2,-6,-6,-2,-7,10,6,8,-2,8,-2,-3,-6,-1,8,7,-6,-2,-7,-9,-5,-2,-6,10,1,4,-4,8,7,8,-1,3,8,-4,-2,-1,1,7,-6,-5,-6,10,-5,-2,10,-6,-5,-8,6,7,-4,4,-4,3,9,-4,-7,5,-5,-4,6,-3,3,-5,-5,7,-1,-5,6,-4,7,10,-4,-8,3,-1,-6,-2,-8,-7,9,2,-7,-6,6,5,-2,9,-3,5,1,-5,-2,5,3,-3,-8,-4,-4,5,2,5,-7,10,-3,6,-2,-2,-9,6,-1,-6,-8,1,3,-1,-7,9,-1,6,5,-8,2,-3,7,4,-2,6,-3,9,-4,-10,-9,7,-9,3,-2,3,1,6,7,7,-2,-9,-1,-10,-1,5,1,-9,2,6,-5,1,-7,5,9,-5,-4,-4,5,1,6,5,8,8,7,8,-5,7,6,-5,-3,-3,-5,3,3,-5,10,6,7,7,-10,-8,-4,6,-9,2,-3,9,6,-7,6,9,3,3,9,-4,7,-5,-8,-8,4,-9,6,3,1,-2,4,-4,-5,7,-7,5,4,4,3,-1,3,-1,9,1,-6,1,-4,-6,-2,-3,3,-4,9,3,9,8,3,10,-3,-1,6,8,-7,-9,5,-9,-3,9,10,-6,3,10,1,-7,-5,-5,2,-10,-8,-7,2,-3,-8,7,-2,4,6,3,-6,-4,-9,-1,-4,2,-2,5,5,-9,10,-9,-8,10,-1,-1,-3,7,6,5,-10,2,-5,6,-2,-3,10,7,-8,-1,-1,-3,9,-8,-9,7,-9,-1,-3,-6,-1,-9,2,-10,4,7,-6,-10,4,4,-3,3,7,8,-1,6,3,3,-3,6,-6,3,-7,9,-2,-3,3,7,-9,1,-9,-2,-4,10,1,5,10,1,2,9,4,-7,9,6,-8,10,6,2,8,-7,9,-6,1,-6,-9,7,8,-10,-9,-7,-3,-6,8,9,1,6,-8,-7,-4,-2,-10,4,-2,-7,1,7,10,5,3,-5,-7,-2,-7,-6,6,2,8,5,4,-2,-3,-1,4,10,-7,2,10,-3,-5,-8,8,6,-9,7,-3,8,-7,1,-2,-1,-8,7,6,-4,10,1,-3,-5,8,-4,10,-8,-9,-10,-2,4,-3,9,-2,8,5,1,6,10,9,-6,-6,-9,7,-7,-10,10,-3,-3,-4,-8,-10,-8,-6,-2,-2,7,-7,2,6,3,-10,1,4,10,-7,-8,9,5,2,-2,8,-2,-6,6,-4,7,-2,9,4,-3,-10,-8,-6,-4,-10,5,-6,2,-1,-3,7,-1,10,-6,-3,-5,-1,10,6,8,-2,6,9,-1,6,7,4,4,-2,-8,3,-8,8,2,3,2,2,-3,-7,3,-8,9,-2,8,5,-1,-1,1,-6,-3,-2,4,2,6,2,3,2,4,4,8,-7,-8,-9,-8,-3,-5,8,10,7,-9,5,-10,5,1,-5,-9,-9,3,-5,2,-3,-4,6,-1,1,-3,6,-5,7,-8,-6,-5,3,4,10,-9,-5,-6,-8,4,-10,8,-2,5,-9,-2,-2,-2,8,7,2,-2,9,-5,-6,-8,8,10,-9,9,-10,4,9,-10,-10,4,-3,8,-6,-10,-4,7,-6,-1,-4,4,-1,-7,-4,9,6,-5,-10,2,6,8,-2,-1,4,5,4,3,8,8,-8,4,-10,4,2,6,10,7,9,-10,1,10,-5,-1,-2,4,3,4,9,-3,-4,10,-5,5,4,-6,3,10,-8,2,7,-9,-6,-6,-1,-7,-2,-10,-3,-10,4,-1,3,-6,2,8,-6,2,2,-8,-8,9,-1,6,3,10,-3,6,-4,-4,2,6,1,-1,-7,-5,3,7,-2,-7,-1,4,-10,10,3,-8,8,-5,3,3,5,9,3,-2,-8,-1,8,5,-8,-9,8,7,5,-8,-6,-10,-10,-8,4,-9,-1,-3,8,6,-2,-6,-4,8,-3,-10,9,9,-9,-4,9,7,-4,10,8,-7,-2,-1,-3,8,7,-4,-9,8,4,-3,5,-4,10,-2,-1,-9,1,-1,-8,10,-8,2,1,-5,1,-7,-10,9,8,-8,-2,4,-8,-10,8,2,6,3,-5,2,8,6,2,-8,9,-9,-7,-6,10,1,-6,3,-8,-9,9,-3,-3,-7,-4,-7,-4,-6,1,-4,-8,10,10,5,-4,-5,8,-9,6,-7,-2,-5,-1,5,-3,-7,-6,2,-2,7,1,-6,9,9,-3,6,-1,10,-2,-5,6,5,-7,-1,3,-5,-10,-5,-10,4,1,9,-3,-3,5,-9,8,-4,-10,-7,3,-1,-5,-3,3,6,-9,5,5,-6,-7,-1,10,3,-10,-5,10,-5,-2,-10,6,-8,-3,9,-2,8,4,6,5,-4,-8,8,-4,-5,-1,-1,10,-4,-6,-3,-9,-10,8,-7,-3,-8,9,-1,10,1,-8,10,4,5,8,8,6,-2,-4,-9,-1,8,-4,-3,4,6,6,3,2,2,3,9,10,4,-2,10,2,3,8,8,10,3,-2,10,4,3,-3,-7,-6,6,-5,-1,-6,-1,-2,4,5,-2,6,8,-3,5,3,-1,-4,9,3,6,-6,-2,8,-10,5,-1,-3,1,1,-4,-8,5,1,-3,4,4,8,8,-3,-10,-2,1,1,-3,-8,9,1,-1,-8,7,-4,1,6,-8,2,1,-1,9,-4,6,-1,-9,-7,-5,5,-6,-2,10,10,10,8,-6,-4,4,-9,-10,-3,3,9,6,9,-2,-3,-8,10,3,-9,-10,-5,-9,-5,5,9,-2,3,4,-4,-2,1,-7,9,-1,-10,9,7,10,-10,4,2,-10,5,-8,2,-3,-1,4,-2,-8,9,-10,7,10,4,7,-7,-2,2,-1,-9,7], dtype = "int8")#candidate|756|(2145,)|const|int8
call_755 = func_98_call(relay.reshape(const_756.astype('int8'), [11, 15, 13]), relay.reshape(const_756.astype('int8'), [11, 15, 13]), )
call_757 = func_98_call(relay.reshape(const_756.astype('int8'), [11, 15, 13]), relay.reshape(const_756.astype('int8'), [11, 15, 13]), )
func_247_call = mod.get_global_var('func_247')
func_251_call = mutated_mod.get_global_var('func_251')
const_759 = relay.const([-1,-3,3,-10,9,5,9,-4,-6,10,-1,2,-8,9,5,-3,10,-7,7,-6,-1,-4,-6,-3,5,10,4,-1,10,-10,-6,1,-10,-9,-4,-5,7,-7,-8,-5,-4,8,-8,2,9,-1,4,2,-8,3,7,9,9,-5,4,1,-7,-10,8,-1,4,1,-5,4,-4,-7,6,5,2,4,1,8,4,3,7,-8,-7,1,-2,5,-1,-8,-10,4,-4,10,4,3,5,8,9,5,5,-8,-10,-6,7,7,9,-1,-10,6,2,-3,-5,-1,9,2,3,-4,5,3,5,1,-3,-5,-7,8,2,6,-4,-4,4,-8,8,-9,1,-6,2,-8,-4,-10,6,10,-1,5,-3,8,-9,-6,8,1,-7,-4,8,4,5,-3,-3,-8,9,-10,6,-2,6,-1,3,-4,3,-9,-1,5,8,8,-2,4,10,6,1,1,7,-2,8,-1,5,3,5,-2,5,4,6,9,-1,-4,-4,-2,8,3,9,8,6,-7,-7,-5,9,-10,-5,-3,-5,-1,-1,-1,-6,-7,-10,8,-4,8,6,-6,1,1,6,-6,-8,-9,7,-10,-6,-7,-9,2,-10,7,-4,-2,-8,4,-7,-4,-5,-6,4,-7,-10,-7,-1,-4,-3,-6,3,-3,1,4,8,-2,2,-9,-1,-7,3,2,6,5,-5,6,1,9,-9,-9,-3,-1,-1,1,9,5,-5,7,10,-9,-5,5,6,-7,8,-1,-8,-6,-5,3,7,7,4,3,8,-1,9,-8,-1,-8,-2,10,3,1,4,-3,3,-5,6,2,-2,-6,10,-5,-10,10,4,-3,5,-7,9,4], dtype = "uint64")#candidate|759|(312,)|const|uint64
var_760 = relay.var("var_760", dtype = "float64", shape = (560,))#candidate|760|(560,)|var|float64
call_758 = relay.TupleGetItem(func_247_call(relay.reshape(const_759.astype('uint64'), [4, 6, 13]), relay.reshape(var_760.astype('float64'), [4, 10, 14]), ), 2)
call_761 = relay.TupleGetItem(func_251_call(relay.reshape(const_759.astype('uint64'), [4, 6, 13]), relay.reshape(var_760.astype('float64'), [4, 10, 14]), ), 2)
output = relay.Tuple([call_750,call_755,const_756,call_758,const_759,var_760,])
output2 = relay.Tuple([call_751,call_757,const_756,call_761,const_759,var_760,])
func_765 = relay.Function([var_760,], output)
mod['func_765'] = func_765
mod = relay.transform.InferType()(mod)
var_766 = relay.var("var_766", dtype = "float64", shape = (560,))#candidate|766|(560,)|var|float64
output = func_765(var_766)
func_767 = relay.Function([var_766], output)
mutated_mod['func_767'] = func_767
mutated_mod = relay.transform.InferType()(mutated_mod)
func_593_call = mod.get_global_var('func_593')
func_595_call = mutated_mod.get_global_var('func_595')
call_791 = func_593_call()
call_792 = func_593_call()
output = call_791
output2 = call_792
func_793 = relay.Function([], output)
mod['func_793'] = func_793
mod = relay.transform.InferType()(mod)
output = func_793()
func_794 = relay.Function([], output)
mutated_mod['func_794'] = func_794
mutated_mod = relay.transform.InferType()(mutated_mod)
func_793_call = mod.get_global_var('func_793')
func_794_call = mutated_mod.get_global_var('func_794')
call_808 = func_793_call()
call_809 = func_793_call()
func_247_call = mod.get_global_var('func_247')
func_251_call = mutated_mod.get_global_var('func_251')
var_836 = relay.var("var_836", dtype = "uint64", shape = (312,))#candidate|836|(312,)|var|uint64
const_837 = relay.const([[-9.922250,2.456017,0.910591,3.010163,3.574687,4.930546,-1.259798,-9.205711,1.024003,-9.582806,4.159764,2.059034,-3.696105,-2.214700,3.895196,-4.935929,-3.857557,-9.889982,7.751735,-6.481667,7.338030,0.655631,-2.326510,-5.936997,6.688490,-9.719411,6.387463,5.213077,-3.222829,8.040877,-3.286863,2.902703,8.166648,-6.492040,8.287283,3.800562,-1.359251,2.586110,-2.760720,-1.385791,-9.267942,7.560191,3.523944,0.986443,-3.684082,3.680273,4.921170,6.518934,-3.843040,4.823279,7.596549,-8.947000,2.725590,-0.517344,7.743791,1.882518,7.183150,-0.547773,6.432376,-0.574425,-3.910545,-0.089493,-9.053224,-3.392683,1.152953,4.170541,-7.026997,-2.665796,3.100761,-1.902076],[-7.650696,-8.313022,-7.984600,-0.883662,9.816759,9.363850,-0.036043,7.565297,6.069055,7.552915,8.735330,1.717280,7.095905,-3.194310,-9.422521,6.341240,-8.905012,-7.053126,-4.654412,4.348130,0.156658,9.736395,-3.580353,0.126515,-3.068397,5.668913,0.240166,-0.192550,-3.056948,7.166371,1.841604,0.761011,-1.213172,-6.719342,-3.989886,-3.604481,-6.153919,7.487641,-8.163418,-5.089490,-4.620150,0.378351,4.320188,-4.738958,-8.836337,-7.727930,-7.785223,1.828628,-5.051447,-6.044569,3.511352,-5.440952,-1.531875,6.833986,-6.545082,-0.770922,1.925672,-7.902747,8.444300,-6.544225,-7.014785,4.091035,9.059973,-0.804500,-5.585702,-7.609169,9.831833,3.819948,9.670324,3.195253],[-8.628407,-9.432009,4.625914,-1.127647,0.889246,-0.685224,-4.784093,-6.407437,-0.239215,7.359141,0.393049,0.877866,-9.674674,9.853351,5.142142,-2.978585,-6.390121,0.670821,1.978663,-3.673215,-9.801723,2.053428,-8.046673,-8.228143,-0.187282,5.532161,-3.762988,-5.301178,1.089493,-0.075061,-8.962871,-7.797093,6.453936,-9.498958,-6.639572,0.945402,3.519103,4.819252,-3.348220,5.696902,2.277424,1.860127,4.753450,-2.762054,2.382824,2.710119,7.901340,-6.633506,6.219060,-8.610925,0.537748,-4.291970,-7.411377,-6.552565,-0.372342,8.566766,-3.436096,1.833154,-2.151611,-4.984096,-1.225915,-7.137827,1.435920,-3.263642,6.027358,-8.261724,-5.611086,-2.040098,-0.671649,4.801510],[-2.862537,-3.320059,0.470202,-8.369324,-9.473140,2.902343,-7.478410,-3.381900,-6.500844,-1.301625,8.837787,-3.299219,6.569342,-3.188939,2.693544,-5.030120,-8.635665,-4.030073,-3.173697,-5.171024,4.651868,7.827508,5.969653,-6.678525,-8.414182,1.135472,2.241456,4.309367,-0.418127,2.922894,-6.545204,3.661258,-9.601179,-9.009220,-7.535574,6.973157,7.462740,0.849658,3.646626,-4.650803,-3.276804,8.604270,-3.380187,2.886252,3.153259,-1.001099,-0.170852,-9.997494,-4.464668,-9.692612,0.677895,-5.577646,-2.638754,2.055228,2.459295,-1.819797,-3.408063,-2.920977,-3.491482,3.667800,-7.446280,7.228949,-7.314172,5.353519,1.177606,2.888891,-5.839422,7.669341,-7.991993,-3.846821],[-5.470324,8.351580,-4.270678,4.971399,4.216346,-7.588507,0.174355,7.336992,-8.644020,-5.354287,-4.337536,-9.139485,3.039797,5.333477,5.744172,-9.107021,-7.992441,-9.295433,0.906223,-3.992345,-6.099173,-6.828213,-0.755989,0.118039,-5.832903,-9.275317,-8.389430,5.954966,-8.554015,5.192287,-4.543974,-1.400964,2.040873,-1.010057,-6.129955,-8.283318,0.897065,-5.517460,-4.921518,-1.724119,9.807512,7.550076,-1.159027,-1.337559,7.559192,-9.055275,5.781825,6.987467,4.590114,3.380992,-0.479657,-0.994398,-0.742701,5.351014,6.876237,8.282032,5.154643,-9.427359,-4.611412,-8.661063,-1.435677,7.165306,6.797673,-0.768504,-4.438574,1.714736,1.812356,8.647043,-7.305198,-9.185500],[-4.640636,7.149730,-7.454290,5.441808,-6.493280,4.873100,-0.297448,-9.317740,1.950328,-8.408261,-5.046599,-0.191601,-1.147585,8.047415,-2.312971,-1.346723,9.170491,-9.020709,5.763438,-6.391452,-3.931930,-0.693139,6.548105,-3.216197,1.004384,-2.649124,-1.883934,-3.902492,-8.541584,-2.750886,7.007186,-2.200708,-4.449412,2.896594,-1.330353,7.589299,7.876315,-2.694407,-5.186928,1.744035,7.313784,5.068448,-4.009287,-0.685296,9.505752,2.031791,5.763056,7.100608,9.134038,5.304137,1.026616,-4.149620,-7.559982,3.874128,5.328821,0.027506,-9.066897,5.507434,-4.221878,-1.911571,-8.321994,-8.811645,3.283892,1.154810,-6.619432,-9.656589,5.918887,-0.276637,7.213352,-0.287341],[-1.849071,-1.344777,-0.218258,8.364127,9.457703,-2.695678,-8.150586,-6.658806,-8.042949,-0.226329,-7.716379,-1.180135,8.085245,-8.211381,-6.282016,5.295072,-5.395292,-7.183852,2.804439,9.258820,7.815588,-0.444056,-1.041588,9.449805,-9.006903,-8.752013,-7.355047,-7.207539,1.440752,6.642862,5.649128,5.613553,-2.575525,-3.005944,4.200970,-4.612433,8.819156,-4.284596,8.957813,3.470811,4.221555,4.038013,-2.584070,1.607431,-5.661590,-1.940631,-3.426553,9.620342,1.798451,-0.032375,9.467706,0.922136,-6.706045,-3.525878,1.662116,0.504572,5.626635,-1.874806,8.987189,-5.351984,-3.621826,8.194691,-0.444475,9.612416,7.443254,-5.534185,5.616175,8.773892,-0.743231,7.176494],[2.085693,-7.542726,0.267897,3.530884,6.374327,-8.594393,-0.378787,-1.076889,-2.642370,-4.181093,0.392493,-0.407516,-6.813662,-8.831213,-5.819642,-0.054253,9.360717,-8.297170,5.836268,8.421116,7.863006,0.806395,2.523042,-2.405060,9.821450,7.824571,-3.744427,6.503843,-5.085587,6.294389,-5.027908,-2.995796,-7.373997,-3.125024,-5.049701,-7.846074,-7.791424,0.122135,1.478869,2.290244,-4.332542,-8.418050,0.887228,2.898940,5.629247,-1.191718,-4.999282,1.795339,5.096373,1.447593,7.256997,-7.289875,4.459656,-4.525520,0.857514,6.690904,-1.921347,-5.442877,-1.603535,3.338619,-0.098277,0.819035,9.371909,-5.415782,-0.622510,-4.237512,0.082449,5.424054,7.836987,-4.019021]], dtype = "float64")#candidate|837|(8, 70)|const|float64
call_835 = relay.TupleGetItem(func_247_call(relay.reshape(var_836.astype('uint64'), [4, 6, 13]), relay.reshape(const_837.astype('float64'), [4, 10, 14]), ), 4)
call_838 = relay.TupleGetItem(func_251_call(relay.reshape(var_836.astype('uint64'), [4, 6, 13]), relay.reshape(const_837.astype('float64'), [4, 10, 14]), ), 4)
func_730_call = mod.get_global_var('func_730')
func_733_call = mutated_mod.get_global_var('func_733')
var_840 = relay.var("var_840", dtype = "bool", shape = (1408,))#candidate|840|(1408,)|var|bool
call_839 = relay.TupleGetItem(func_730_call(relay.reshape(var_840.astype('bool'), [1408,])), 0)
call_841 = relay.TupleGetItem(func_733_call(relay.reshape(var_840.astype('bool'), [1408,])), 0)
func_330_call = mod.get_global_var('func_330')
func_334_call = mutated_mod.get_global_var('func_334')
call_848 = relay.TupleGetItem(func_330_call(relay.reshape(var_840.astype('bool'), [11, 8, 16]), relay.reshape(var_840.astype('bool'), [11, 8, 16]), ), 3)
call_849 = relay.TupleGetItem(func_334_call(relay.reshape(var_840.astype('bool'), [11, 8, 16]), relay.reshape(var_840.astype('bool'), [11, 8, 16]), ), 3)
output = relay.Tuple([call_808,call_835,var_836,const_837,call_839,var_840,call_848,])
output2 = relay.Tuple([call_809,call_838,var_836,const_837,call_841,var_840,call_849,])
func_852 = relay.Function([var_836,var_840,], output)
mod['func_852'] = func_852
mod = relay.transform.InferType()(mod)
var_853 = relay.var("var_853", dtype = "uint64", shape = (312,))#candidate|853|(312,)|var|uint64
var_854 = relay.var("var_854", dtype = "bool", shape = (1408,))#candidate|854|(1408,)|var|bool
output = func_852(var_853,var_854,)
func_855 = relay.Function([var_853,var_854,], output)
mutated_mod['func_855'] = func_855
mutated_mod = relay.transform.InferType()(mutated_mod)
func_793_call = mod.get_global_var('func_793')
func_794_call = mutated_mod.get_global_var('func_794')
call_879 = func_793_call()
call_880 = func_793_call()
output = call_879
output2 = call_880
func_901 = relay.Function([], output)
mod['func_901'] = func_901
mod = relay.transform.InferType()(mod)
mutated_mod['func_901'] = func_901
mutated_mod = relay.transform.InferType()(mutated_mod)
func_901_call = mutated_mod.get_global_var('func_901')
call_902 = func_901_call()
output = call_902
func_903 = relay.Function([], output)
mutated_mod['func_903'] = func_903
mutated_mod = relay.transform.InferType()(mutated_mod)
func_593_call = mod.get_global_var('func_593')
func_595_call = mutated_mod.get_global_var('func_595')
call_927 = func_593_call()
call_928 = func_593_call()
func_901_call = mod.get_global_var('func_901')
func_903_call = mutated_mod.get_global_var('func_903')
call_940 = func_901_call()
call_941 = func_901_call()
var_943 = relay.var("var_943", dtype = "int64", shape = (12, 6, 8))#candidate|943|(12, 6, 8)|var|int64
bop_944 = relay.add(call_927.astype('uint64'), relay.reshape(var_943.astype('uint64'), relay.shape_of(call_927))) # shape=(12, 6, 8)
bop_947 = relay.add(call_928.astype('uint64'), relay.reshape(var_943.astype('uint64'), relay.shape_of(call_928))) # shape=(12, 6, 8)
output = relay.Tuple([call_940,bop_944,])
output2 = relay.Tuple([call_941,bop_947,])
func_950 = relay.Function([var_943,], output)
mod['func_950'] = func_950
mod = relay.transform.InferType()(mod)
mutated_mod['func_950'] = func_950
mutated_mod = relay.transform.InferType()(mutated_mod)
var_951 = relay.var("var_951", dtype = "int64", shape = (12, 6, 8))#candidate|951|(12, 6, 8)|var|int64
func_950_call = mutated_mod.get_global_var('func_950')
call_952 = func_950_call(var_951)
output = call_952
func_953 = relay.Function([var_951], output)
mutated_mod['func_953'] = func_953
mutated_mod = relay.transform.InferType()(mutated_mod)
func_901_call = mod.get_global_var('func_901')
func_903_call = mutated_mod.get_global_var('func_903')
call_971 = func_901_call()
call_972 = func_901_call()
uop_983 = relay.log10(call_971.astype('float32')) # shape=(12, 6, 8)
uop_985 = relay.log10(call_972.astype('float32')) # shape=(12, 6, 8)
output = uop_983
output2 = uop_985
func_1009 = relay.Function([], output)
mod['func_1009'] = func_1009
mod = relay.transform.InferType()(mod)
mutated_mod['func_1009'] = func_1009
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1009_call = mutated_mod.get_global_var('func_1009')
call_1010 = func_1009_call()
output = call_1010
func_1011 = relay.Function([], output)
mutated_mod['func_1011'] = func_1011
mutated_mod = relay.transform.InferType()(mutated_mod)
func_593_call = mod.get_global_var('func_593')
func_595_call = mutated_mod.get_global_var('func_595')
call_1024 = func_593_call()
call_1025 = func_593_call()
func_901_call = mod.get_global_var('func_901')
func_903_call = mutated_mod.get_global_var('func_903')
call_1028 = func_901_call()
call_1029 = func_901_call()
output = relay.Tuple([call_1024,call_1028,])
output2 = relay.Tuple([call_1025,call_1029,])
func_1032 = relay.Function([], output)
mod['func_1032'] = func_1032
mod = relay.transform.InferType()(mod)
mutated_mod['func_1032'] = func_1032
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1032_call = mutated_mod.get_global_var('func_1032')
call_1033 = func_1032_call()
output = call_1033
func_1034 = relay.Function([], output)
mutated_mod['func_1034'] = func_1034
mutated_mod = relay.transform.InferType()(mutated_mod)
func_901_call = mod.get_global_var('func_901')
func_903_call = mutated_mod.get_global_var('func_903')
call_1086 = func_901_call()
call_1087 = func_901_call()
func_950_call = mod.get_global_var('func_950')
func_953_call = mutated_mod.get_global_var('func_953')
call_1092 = relay.TupleGetItem(func_950_call(relay.reshape(call_1086.astype('int64'), [12, 6, 8])), 0)
call_1093 = relay.TupleGetItem(func_953_call(relay.reshape(call_1086.astype('int64'), [12, 6, 8])), 0)
bop_1096 = relay.equal(call_1086.astype('bool'), relay.reshape(call_1092.astype('bool'), relay.shape_of(call_1086))) # shape=(12, 6, 8)
bop_1099 = relay.equal(call_1087.astype('bool'), relay.reshape(call_1093.astype('bool'), relay.shape_of(call_1087))) # shape=(12, 6, 8)
bop_1101 = relay.divide(call_1092.astype('float64'), relay.reshape(bop_1096.astype('float64'), relay.shape_of(call_1092))) # shape=(12, 6, 8)
bop_1104 = relay.divide(call_1093.astype('float64'), relay.reshape(bop_1099.astype('float64'), relay.shape_of(call_1093))) # shape=(12, 6, 8)
output = relay.Tuple([bop_1101,])
output2 = relay.Tuple([bop_1104,])
func_1109 = relay.Function([], output)
mod['func_1109'] = func_1109
mod = relay.transform.InferType()(mod)
mutated_mod['func_1109'] = func_1109
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1109_call = mutated_mod.get_global_var('func_1109')
call_1110 = func_1109_call()
output = call_1110
func_1111 = relay.Function([], output)
mutated_mod['func_1111'] = func_1111
mutated_mod = relay.transform.InferType()(mutated_mod)
func_593_call = mod.get_global_var('func_593')
func_595_call = mutated_mod.get_global_var('func_595')
call_1182 = func_593_call()
call_1183 = func_593_call()
func_98_call = mod.get_global_var('func_98')
func_102_call = mutated_mod.get_global_var('func_102')
const_1185 = relay.const([4,2,10,-1,-8,9,-7,-2,6,4,-6,3,-3,3,-5,-9,-10,-6,5,-5,8,-6,-4,9,-8,9,-5,-10,-1,6,3,2,-8,-4,-10,5,2,-2,-10,6,3,-4,8,-9,-6,4,2,-3,-6,3,-7,-3,-2,5,7,-9,-7,-1,4,-3,-6,-10,-2,-1,3,6,4,8,4,7,-7,2,-9,10,-6,8,1,-10,-2,-3,5,-4,9,-5,7,4,10,7,-2,5,-9,10,10,3,1,8,7,6,-3,-9,-5,-4,1,-4,-6,1,-3,-5,10,-6,8,-8,-5,-1,7,1,-4,-7,-6,-10,-2,-8,-9,-8,5,-10,8,-7,2,5,9,3,1,-8,1,-9,-6,-7,-4,-6,9,-1,3,1,-8,-7,2,-8,-10,-10,-6,-3,8,9,-5,10,-10,10,-10,1,9,5,-9,-6,1,7,5,-2,-10,-6,8,8,8,3,10,8,-3,-3,-7,-1,-5,8,10,4,10,4,9,-6,-9,6,5,3,6,10,4,-2,10,10,9,-10,5,9,-6,-10,-5,6,-10,-8,4,-10,9,-7,3,1,-1,-4,-4,10,-9,-7,-9,-4,2,9,-2,-2,2,-2,-7,10,-5,-4,-7,-1,9,1,-8,10,7,-6,8,-9,-9,7,5,4,4,-9,6,-7,7,-4,-1,7,-2,4,-2,2,6,-9,-9,-1,5,-3,-1,6,6,-4,-4,4,5,8,5,-1,1,1,3,4,3,8,8,3,6,1,-10,8,5,3,7,-10,-3,2,-5,5,4,4,-7,-3,4,-5,-1,2,-10,-7,-10,-7,9,1,6,4,7,-9,4,-9,10,-5,-6,8,-3,-3,3,5,1,-8,10,-6,-9,-3,-1,-3,8,-1,-4,-10,-5,9,-7,9,-10,7,-8,-7,2,-10,-4,-1,1,-9,-10,-2,-4,-2,-5,8,-10,5,10,7,-4,4,-9,2,-6,5,-10,4,7,-4,8,10,-9,-10,-7,-10,1,8,-8,10,-1,-3,-9,6,2,2,2,-10,7,9,-4,-4,2,6,4,5,10,-8,-2,7,-4,3,-1,8,-2,1,-7,-2,-6,-10,-6,-6,4,7,10,-1,-5,10,-9,3,5,-9,8,3,2,4,10,-6,6,10,7,10,-8,-5,1,8,3,-8,9,-3,-7,-8,-9,-1,6,-2,-5,-5,3,7,10,-9,3,2,-1,10,5,4,4,8,-7,5,3,4,-9,-1,8,-2,9,10,2,-7,10,9,-5,4,-9,3,-8,-7,9,4,8,-6,-1,-9,6,7,5,10,5,3,4,6,-4,6,1,-9,-7,7,1,10,2,-3,-5,9,6,4,10,1,2,-7,1,-3,-1,8,-6,1,-6,-7,7,1,-7,-5,-6,1,4,-1,6,-3,4,-10,10,10,-6,-6,-10,6,3,-6,-8,7,7,-8,9,9,-5,-6,10,10,1,-7,-5,10,-4,9,5,3,3,4,-5,7,-4,2,9,10,-9,2,-1,6,-3,7,-10,-2,4,-6,1,-6,6,-8,1,6,-6,8,5,3,8,5,-4,2,5,6,1,10,1,6,-8,4,3,1,5,-3,8,4,7,10,5,-7,-8,-6,8,1,-6,-10,-8,-6,-9,-7,-9,10,8,-7,4,9,-4,8,-9,-8,5,-4,10,-5,9,7,4,5,7,-3,7,-2,-7,10,1,-2,5,9,-6,-6,6,-2,-3,2,-8,-1,-7,5,-7,-3,-3,7,9,-5,10,-9,-7,9,-9,-1,6,-1,7,10,-10,-4,-5,1,7,-10,-7,5,1,7,-5,-6,-10,-7,-2,-1,-9,5,6,-10,2,-9,-9,7,8,-10,10,-5,5,-7,8,-1,-5,-1,-2,3,10,-5,6,-1,-5,7,-8,-6,-4,-2,-5,9,9,10,-10,-7,6,-9,3,-5,2,-4,4,-5,-4,-1,10,-8,10,2,2,-10,1,-1,1,5,-9,6,-10,4,-8,3,-6,10,-1,-6,2,-3,7,-1,1,-2,6,4,8,10,-2,7,5,6,10,3,7,-6,10,-3,-3,1,-2,5,-2,8,-9,-2,10,2,-9,1,1,-2,-5,1,-1,-9,-7,3,-1,-3,-5,7,-4,-5,-6,-1,-4,-9,10,-8,4,4,-4,-1,9,5,9,-9,-3,-6,-1,-5,9,-5,-3,10,2,9,2,-3,5,2,2,-9,-6,-3,1,3,3,1,-2,-5,4,2,-5,-6,3,-4,-1,-1,7,5,3,2,-7,1,-5,-6,4,6,5,10,9,-4,-9,7,-8,-8,10,4,-2,-9,-5,5,-4,-9,-2,-8,4,-1,-4,3,-1,-10,8,10,-3,6,-3,7,3,-8,-6,-5,-8,-5,7,4,-6,2,-2,-5,-1,-5,3,4,10,10,8,-8,6,-9,-3,2,9,5,-6,6,-1,-2,5,-10,-9,2,-8,6,-4,-6,9,-8,1,10,4,-5,-7,1,6,-6,2,4,8,3,-6,1,-6,-4,2,4,-7,3,9,-7,-7,-10,3,-10,-4,5,9,-5,-4,-2,10,4,-7,3,-3,1,-5,1,-4,9,2,-8,-7,-8,2,9,5,3,-2,-2,-9,5,3,-2,-6,5,-2,-1,-7,-1,-6,-3,4,7,-4,-9,1,7,-1,-10,-7,-5,7,-7,4,5,8,2,-6,6,-9,1,2,-1,6,-1,6,3,3,-10,-9,6,-3,-9,-9,-8,-3,-6,8,9,-1,-10,-6,10,4,4,-5,1,9,10,9,4,-9,-7,10,-3,-4,-7,6,2,9,3,6,-5,-6,-3,-1,6,-9,-6,-9,-1,-2,7,-8,-7,-5,-3,6,8,-1,8,-9,-1,-9,9,-6,3,9,-7,7,3,6,-2,4,-6,-10,4,-9,8,-3,-6,-7,8,-8,-4,1,-8,-5,-9,2,-1,-10,-4,3,-8,8,5,4,-3,10,-1,7,8,-4,1,4,10,1,6,-5,8,10,-9,9,-1,1,10,1,-10,-8,-1,-4,-8,-5,7,-9,-3,10,-7,6,-8,8,-5,-5,-6,-9,-5,7,8,-10,-2,-1,9,-7,-2,4,9,5,3,-10,-5,5,2,5,-6,6,-3,-2,-2,-1,-1,-2,7,4,-1,8,-5,-6,-6,8,6,-9,5,-3,10,9,9,10,3,5,-10,8,7,-2,-4,5,6,-1,7,6,-10,-7,-10,-6,-2,-5,-5,8,6,4,-10,-4,-5,5,-10,9,10,8,4,-1,4,-1,-8,10,-8,-7,-3,5,5,10,-5,-5,5,-2,-9,7,10,4,-6,-3,-9,5,3,-2,3,6,-2,-2,-6,10,-9,1,-5,-7,-1,7,3,4,5,-8,9,-6,-7,-2,1,10,-8,-9,-6,-6,-9,7,-7,9,8,-10,-1,9,-3,1,-2,-5,-2,3,-1,4,-4,-1,3,-2,-9,-7,-9,8,-7,5,10,10,-4,-9,-4,6,-6,-8,9,10,-4,-8,-1,-4,-7,-10,9,-8,-4,10,4,7,-3,8,7,-9,3,6,8,-6,9,2,7,10,1,-1,-6,-4,3,10,-10,-5,-8,10,-10,-1,-2,8,-4,-1,10,7,-10,2,3,-7,3,-7,-2,-7,1,3,10,3,10,9,9,6,9,5,2,-4,-4,3,5,-10,7,-2,-5,-3,2,-4,9,10,-8,9,-9,-4,-5,-10,-7,9,-4,-5,7,-3,-9,7,7,-8,-4,-6,2,-7,4,-9,8,9,8,-10,-1,3,-9,9,-10,2,6,9,5,4,1,-2,-1,10,6,-8,2,6,4,9,6,1,7,-9,4,-4,9,6,9,-1,8,2,1,-3,-7,10,-6,-5,-1,-7,-10,-1,-9,8,5,-4,9,4,6,-4,4,8,6,-2,8,3,-10,-6,3,6,-3,2,-8,1,-6,9,-2,-9,-10,5,-10,-7,-3,1,9,6,10,6,-4,4,-6,9,9,6,9,-1,-2,-3,-3,2,4,6,4,3,-10,8,-7,-2,5,10,-1,-6,1,-9,4,6,9,-3,5,1,-3,9,-5,10,3,7,1,7,3,-6,-7,-8,-6,9,6,-5,8,1,-9,5,-9,5,6,-3,10,-7,-2,5,-5,-9,6,-2,-10,-8,-1,10,-7,-1,-9,-1,4,9,-2,-3,-1,-10,8,1,-2,-8,4,-5,5,6,-8,4,-7,-7,-7,8,5,-3,9,-1,-5,-3,7,1,-4,5,-4,-6,-1,-1,-5,6,-8,-1,5,7,-10,-8,-10,8,-4,8,3,-10,-6,5,-4,1,10,-9,5,2,10,-2,-8,4,5,-1,-5,5,4,5,10,9,8,-6,6,8,-9,6,-3,9,-4,8,-3,-3,2,-4,3,-6,-1,-4,10,3,-6,-7,1,7,-8,7,10,10,-7,6,-8,-1,-3,-8,-8,-4,-1,-3,9,-10,-9,-10,-6,-10,-5,-2,-7,3,-7,6,-3,-2,-3,9,-9,1,-7,-4,1,7,-10,-10,2,-8,-4,6,5,4,-5,10,-3,1,-1,-6,-10,-10,-3,-7,4,6,2,-5,-2,-4,1,2,-4,5,-9,-2,3,-9,-2,1,-4,2,-1,-4,6,-1,-2,1,7,5,-5,6,9,-2,2,7,-2,-3,-5,-7,4,8,-2,-6,-4,-6,-8,-7,-6,9,4,-5,4,9,-4,2,6,-4,10,-9,8,3,6,4,1,-3,7,1,-5,-3,-9,-4,5,-5,-7,9,-8,3,4,-9,1,8,-9,1,1,2,9,9,6,-2,6,8,6,1,9,5,-3,1,-3,-5,-8,-8,-5,-4,-9,-1,8,3,1,5,4,-1,2,9,4,-2,3,1,5,8,-2,2,-10,-5,9,-10,-10,9,3,-7,-4,-3,-9,6,2,9,-4,-5,6,-5,9,-7,6,-1,8,10,-7,10,7,-9,1,-10,-10,1,-6,10,-10,6,-5,-7,-5,4,9,-7,9,3,5,-6,10,-9,-2,2,6,-9,5,3,-4,1,10,-8,-3,10,6,-2,-5,-3,-2,10,2,-10,-7,6,-9,-5,-6,-9,-3,6,-8,8,-1,-10,-5,-10,10,-4,2,-10,-9,-1,9,-4,10,-4,10,2,2,-4,-2,3,-6,-3,-1,1,-10,-4,2,-3,-10,5,-8,1,8,-6,4,4,-8,-10,10,8,-4,8,10,10,-10,-10,-1,10,-10,2,8,4,1,-7,-5,-2,9,5,-3,9,-2,-4,2,2,2,6,10,-8,-5,-3,-9,-1,6,8,-3,-5,-8,7,6,-1,-5,-8,8,7,10,4,-6,-8,3,4,-2,10,-9,-9,-8,3,9,10,7,1,-7,7,-1,4,10,9,-8,-2,-6,3,-3,-1,10,-10,-7,4,-7,5,-5,-2,-10,7,-10,4,3,-1,-4,1,-2,-2,-3,2,9,-9,-10,-1,2,8,-8,7,10,8,-10,9,-1,2,-7,-3,6,3,3,-8,-2,6,-9,-1,-10,-2,-9,2,-1,-3,1,-7,10,-2,-3,-7,-5,5,5,-2,9,3,6,-8,-2,-7,9,-7,-3,-1,1,1,10,-1,-4,-9,-6,10,8,1,1,2,-2,-6,-9,-3,-4,6,2,10,-8,-10,-1,-8,-10,-10,7,-8,10,7,-10,10,7,-1,-3,7,-2,-10,9,6,9,8,-8,6,-2,-1,-5,8,7,3,2,3,-8,9,-1,7,-10,5,-3,10,-5,-8,2,-2,-7,10,4,-3], dtype = "int8")#candidate|1185|(2145,)|const|int8
call_1184 = func_98_call(relay.reshape(const_1185.astype('int8'), [11, 15, 13]), relay.reshape(const_1185.astype('int8'), [11, 15, 13]), )
call_1186 = func_98_call(relay.reshape(const_1185.astype('int8'), [11, 15, 13]), relay.reshape(const_1185.astype('int8'), [11, 15, 13]), )
output = relay.Tuple([call_1182,call_1184,const_1185,])
output2 = relay.Tuple([call_1183,call_1186,const_1185,])
func_1198 = relay.Function([], output)
mod['func_1198'] = func_1198
mod = relay.transform.InferType()(mod)
output = func_1198()
func_1199 = relay.Function([], output)
mutated_mod['func_1199'] = func_1199
mutated_mod = relay.transform.InferType()(mutated_mod)
func_793_call = mod.get_global_var('func_793')
func_794_call = mutated_mod.get_global_var('func_794')
call_1205 = func_793_call()
call_1206 = func_793_call()
output = relay.Tuple([call_1205,])
output2 = relay.Tuple([call_1206,])
func_1227 = relay.Function([], output)
mod['func_1227'] = func_1227
mod = relay.transform.InferType()(mod)
output = func_1227()
func_1228 = relay.Function([], output)
mutated_mod['func_1228'] = func_1228
mutated_mod = relay.transform.InferType()(mutated_mod)
func_593_call = mod.get_global_var('func_593')
func_595_call = mutated_mod.get_global_var('func_595')
call_1280 = func_593_call()
call_1281 = func_593_call()
func_1109_call = mod.get_global_var('func_1109')
func_1111_call = mutated_mod.get_global_var('func_1111')
call_1290 = relay.TupleGetItem(func_1109_call(), 0)
call_1291 = relay.TupleGetItem(func_1111_call(), 0)
func_1032_call = mod.get_global_var('func_1032')
func_1034_call = mutated_mod.get_global_var('func_1034')
call_1305 = relay.TupleGetItem(func_1032_call(), 1)
call_1306 = relay.TupleGetItem(func_1034_call(), 1)
func_1198_call = mod.get_global_var('func_1198')
func_1199_call = mutated_mod.get_global_var('func_1199')
call_1312 = relay.TupleGetItem(func_1198_call(), 1)
call_1313 = relay.TupleGetItem(func_1199_call(), 1)
func_1009_call = mod.get_global_var('func_1009')
func_1011_call = mutated_mod.get_global_var('func_1011')
call_1314 = func_1009_call()
call_1315 = func_1009_call()
output = relay.Tuple([call_1280,call_1290,call_1305,call_1312,call_1314,])
output2 = relay.Tuple([call_1281,call_1291,call_1306,call_1313,call_1315,])
func_1337 = relay.Function([], output)
mod['func_1337'] = func_1337
mod = relay.transform.InferType()(mod)
output = func_1337()
func_1338 = relay.Function([], output)
mutated_mod['func_1338'] = func_1338
mutated_mod = relay.transform.InferType()(mutated_mod)
func_901_call = mod.get_global_var('func_901')
func_903_call = mutated_mod.get_global_var('func_903')
call_1345 = func_901_call()
call_1346 = func_901_call()
func_1337_call = mod.get_global_var('func_1337')
func_1338_call = mutated_mod.get_global_var('func_1338')
call_1350 = relay.TupleGetItem(func_1337_call(), 2)
call_1351 = relay.TupleGetItem(func_1338_call(), 2)
func_98_call = mod.get_global_var('func_98')
func_102_call = mutated_mod.get_global_var('func_102')
const_1355 = relay.const([[1],[-9],[-6],[1],[-8],[10],[7],[2],[-9],[8],[-9],[-5],[-7],[5],[10],[8],[-9],[-4],[-7],[-3],[-10],[-6],[5],[4],[5],[5],[1],[9],[9],[-5],[-9],[-2],[-9],[3],[5],[-8],[9],[2],[2],[-9],[8],[-10],[-4],[-10],[5],[1],[8],[10],[2],[-5],[9],[4],[7],[-3],[3],[-5],[6],[3],[6],[-2],[-7],[-5],[-10],[4],[10],[1],[-3],[9],[-10],[-1],[6],[4],[-3],[3],[-10],[-10],[-10],[4],[10],[2],[-7],[9],[-7],[-2],[-3],[-9],[-10],[3],[2],[3],[-3],[-9],[-6],[2],[10],[5],[-8],[-7],[-3],[1],[-3],[6],[-5],[-9],[7],[9],[4],[2],[10],[7],[-8],[7],[-7],[1],[5],[-7],[-4],[2],[-2],[-8],[-2],[8],[4],[8],[-3],[-4],[-7],[9],[5],[-5],[5],[9],[-5],[-1],[-3],[-7],[-6],[2],[6],[-4],[5],[2],[-8],[8],[-2],[-8],[-7],[6],[-9],[2],[-6],[8],[5],[-9],[-8],[-9],[-2],[-4],[1],[-8],[7],[10],[2],[-7],[-3],[-2],[7],[8],[-9],[-2],[-2],[9],[2],[-6],[9],[6],[7],[-1],[3],[9],[-6],[-4],[2],[6],[3],[-8],[9],[-10],[-5],[3],[-8],[10],[-6],[4],[9],[-5],[6],[-10],[5],[2],[4],[-2],[-9],[3],[7],[-8],[5],[-2],[-8],[-2],[4],[4],[9],[10],[9],[-10],[2],[-5],[4],[-9],[-4],[-10],[6],[1],[10],[3],[-1],[4],[10],[-3],[-8],[10],[-7],[-2],[-3],[-6],[7],[-5],[7],[9],[9],[1],[-8],[1],[-1],[-4],[9],[8],[9],[1],[-3],[8],[-2],[-5],[10],[8],[3],[-1],[-8],[-8],[5],[7],[-6],[-2],[-7],[8],[9],[-1],[10],[1],[7],[9],[-3],[-2],[3],[10],[-2],[1],[-4],[-2],[3],[2],[-7],[-2],[9],[6],[7],[10],[8],[-8],[4],[8],[-7],[-1],[-2],[-3],[-4],[-9],[-9],[7],[-8],[-6],[10],[2],[-7],[-8],[10],[-4],[-5],[-9],[1],[-3],[8],[5],[5],[-5],[-5],[-8],[6],[3],[-4],[-4],[-7],[3],[-7],[-8],[-4],[-3],[-5],[10],[-2],[-4],[6],[4],[-4],[5],[7],[4],[10],[-5],[-8],[5],[-6],[-4],[9],[-2],[9],[-10],[10],[6],[8],[-3],[3],[-1],[3],[-9],[-9],[-4],[-3],[5],[-2],[-2],[2],[3],[5],[-7],[-3],[10],[-8],[-8],[-4],[-5],[-1],[7],[7],[7],[6],[-10],[3],[-2],[7],[1],[-10],[5],[-1],[10],[-1],[-10],[5],[-8],[9],[4],[7],[6],[9],[8],[7],[-5],[2],[6],[2],[3],[-4],[6],[2],[2],[9],[9],[-9],[-6],[4],[4],[3],[10],[-9],[1],[6],[-7],[-8],[-8],[8],[2],[-5],[5],[-7],[-2],[-5],[4],[-6],[-5],[1],[-8],[-9],[7],[-7],[8],[6],[-5],[4],[-5],[-1],[3],[3],[-5],[-2],[-6],[6],[1],[-7],[5],[-5],[1],[6],[2],[-6],[-2],[-4],[-2],[-2],[6],[7],[6],[5],[1],[6],[-6],[-10],[2],[-1],[-7],[-1],[-3],[-3],[10],[3],[-7],[9],[4],[-3],[-6],[2],[1],[8],[-9],[8],[-7],[4],[-4],[6],[2],[1],[8],[5],[5],[-8],[8],[-2],[-3],[4],[9],[-9],[-3],[-6],[-9],[10],[-10],[1],[2],[-3],[-5],[-8],[2],[-3],[10],[6],[-9],[6],[7],[6],[4],[7],[8],[3],[7],[9],[-6],[6],[8],[-2],[5],[8],[4],[-6],[7],[7],[10],[5],[-4],[-2],[-6],[-3],[-9],[-10],[-8],[-5],[-2],[-9],[-6],[7],[8],[5],[10],[8],[10],[-4],[-2],[-9],[-8],[7],[-3],[1],[5],[4],[-2],[5],[7],[-10],[1],[10],[9],[-8],[-5],[-9],[9],[-8],[-8],[10],[6],[5],[4],[-10],[1],[7],[-9],[5],[-3],[6],[-1],[-10],[4],[-3],[-7],[-4],[-6],[3],[-10],[-1],[4],[-6],[5],[8],[4],[3],[-2],[8],[-10],[-8],[3],[-10],[-2],[8],[-7],[-4],[-7],[3],[-2],[7],[8],[3],[-4],[5],[1],[3],[-7],[2],[-7],[1],[3],[6],[-8],[9],[1],[-5],[-9],[-8],[-9],[-9],[8],[4],[-4],[-3],[1],[8],[3],[-2],[-2],[-10],[1],[1],[-6],[-3],[1],[5],[5],[-5],[10],[-1],[-3],[-4],[2],[5],[9],[8],[-3],[-9],[7],[5],[-5],[9],[2],[8],[-1],[-2],[9],[-1],[2],[-8],[3],[10],[-6],[-4],[5],[5],[2],[2],[8],[-7],[-3],[5],[4],[5],[-2],[-8],[1],[-1],[-1],[2],[-4],[5],[-10],[1],[9],[9],[8],[-3],[10],[10],[-3],[4],[-6],[-10],[10],[2],[10],[-4],[-6],[-10],[-5],[-8],[5],[-5],[1],[6],[4],[7],[5],[-9],[-1],[2],[10],[-2],[1],[3],[3],[8],[3],[10],[1],[-6],[-5],[6],[-10],[8],[-8],[3],[-6],[-6],[8],[-10],[-1],[6],[2],[-5],[-1],[-7],[-4],[10],[-2],[7],[9],[-9],[6],[-2],[7],[3],[2],[9],[7],[-6],[-5],[-7],[-10],[6],[7],[3],[5],[3],[-1],[8],[-6],[-3],[2],[2],[-8],[-8],[-5],[-3],[-3],[-8],[-2],[6],[-5],[1],[-3],[2],[-1],[8],[9],[-3],[-10],[1],[5],[10],[-2],[-10],[-9],[6],[-7],[-10],[7],[10],[8],[-1],[9],[5],[2],[-7],[-9],[9],[-7],[-8],[5],[-10],[10],[-5],[-1],[4],[4],[-8],[7],[4],[-9],[-10],[-8],[-2],[8],[-1],[5],[-7],[3],[-1],[-6],[6],[10],[3],[-7],[-9],[-8],[7],[-6],[2],[8],[-8],[9],[7],[7],[8],[2],[-3],[8],[-10],[-5],[-3],[7],[-10],[8],[6],[-9],[8],[-10],[-10],[4],[-10],[2],[1],[-9],[6],[9],[6],[9],[9],[-10],[-5],[1],[-7],[-10],[-10],[4],[3],[3],[-3],[4],[-6],[-1],[10],[-10],[9],[-6],[-9],[10],[10],[2],[6],[-9],[-10],[-2],[7],[-6],[-10],[-7],[7],[9],[-9],[2],[2],[3],[-4],[1],[3],[-9],[-4],[-7],[9],[-6],[-8],[-1],[-2],[3],[-7],[-9],[-7],[-10],[-9],[10],[-3],[-4],[2],[-10],[5],[-3],[-8],[-2],[-9],[2],[-1],[5],[-5],[-8],[-8],[-8],[-1],[-1],[-4],[-5],[-4],[-5],[-5],[5],[-3],[-9],[7],[-2],[-9],[-9],[-3],[1],[9],[-5],[3],[-5],[-10],[-1],[9],[-8],[2],[7],[-9],[6],[-1],[8],[-1],[-6],[-1],[5],[-2],[-10],[1],[5],[7],[2],[-1],[3],[-10],[-10],[3],[3],[-7],[6],[1],[-1],[-10],[-3],[-2],[2],[-4],[-3],[5],[-4],[4],[-6],[-2],[-2],[-7],[8],[-10],[8],[9],[2],[4],[1],[10],[10],[9],[-10],[10],[1],[-4],[-2],[3],[-8],[-6],[-2],[2],[6],[-8],[1],[-10],[-3],[6],[3],[9],[7],[-1],[6],[-6],[7],[-1],[-7],[-5],[-8],[-10],[10],[9],[-1],[9],[3],[2],[-3],[1],[-6],[-2],[-1],[4],[-7],[-2],[3],[-3],[4],[-10],[-8],[-2],[7],[3],[6],[-9],[-2],[-7],[-5],[2],[-3],[6],[-8],[1],[-2],[-10],[-8],[-1],[6],[-6],[9],[7],[6],[4],[-7],[3],[1],[-6],[-10],[-3],[-7],[-3],[3],[3],[10],[-4],[-3],[-10],[-4],[-10],[9],[1],[-7],[-10],[-5],[1],[4],[-9],[10],[8],[1],[8],[-2],[-5],[-3],[7],[10],[-3],[-6],[-4],[-6],[3],[9],[-6],[-5],[-8],[8],[-2],[-6],[-7],[2],[10],[-4],[9],[-8],[9],[9],[3],[-5],[6],[5],[4],[-10],[6],[-3],[-5],[-6],[9],[2],[10],[-2],[-3],[2],[-1],[-6],[4],[-1],[-7],[-7],[8],[-3],[-5],[10],[1],[-3],[-1],[1],[-5],[9],[-7],[-3],[6],[-1],[8],[5],[8],[-1],[-1],[8],[-2],[-2],[-5],[6],[-5],[8],[-1],[2],[6],[10],[3],[-1],[7],[5],[-2],[9],[-3],[8],[5],[8],[10],[1],[8],[9],[-9],[7],[6],[3],[10],[1],[-1],[6],[1],[-2],[10],[4],[5],[-9],[9],[6],[-7],[-9],[2],[8],[10],[-4],[8],[-4],[7],[-5],[5],[5],[5],[4],[4],[-1],[6],[-5],[4],[10],[3],[-4],[7],[-1],[-4],[-9],[6],[-3],[-10],[4],[-9],[-6],[-6],[3],[6],[-3],[-1],[-9],[-5],[-3],[7],[-1],[10],[3],[-1],[5],[-3],[-4],[3],[9],[3],[8],[9],[10],[-10],[-4],[-9],[-7],[9],[8],[-6],[-9],[-3],[9],[2],[-5],[2],[-7],[-1],[-4],[2],[-7],[4],[-9],[-5],[-2],[-9],[1],[6],[9],[-8],[3],[8],[-10],[8],[1],[5],[-2],[-3],[2],[7],[8],[-5],[-9],[-10],[2],[-3],[-9],[-4],[-3],[4],[-4],[-1],[8],[5],[-9],[-3],[8],[7],[-2],[-8],[-7],[9],[3],[5],[-8],[9],[8],[6],[3],[7],[6],[10],[-8],[5],[-5],[2],[3],[6],[-5],[-3],[1],[-4],[-3],[6],[-6],[7],[-3],[-7],[-3],[-10],[-5],[-10],[6],[-8],[6],[3],[-5],[-8],[-9],[-4],[7],[6],[8],[10],[-6],[-2],[3],[-1],[8],[9],[1],[3],[10],[6],[-6],[-4],[-4],[5],[-4],[5],[-5],[2],[9],[-6],[-3],[2],[10],[-1],[7],[-2],[2],[7],[8],[9],[-7],[1],[3],[10],[7],[8],[-5],[-5],[6],[-5],[-5],[-7],[5],[-2],[6],[-5],[6],[-4],[1],[1],[-10],[-9],[9],[-9],[-8],[-9],[3],[2],[10],[1],[3],[-8],[3],[-8],[-6],[4],[9],[-2],[-5],[-5],[-5],[-8],[10],[6],[-3],[-5],[-4],[7],[-7],[-2],[5],[-8],[7],[-3],[10],[7],[-2],[-4],[4],[2],[1],[-4],[-4],[-2],[8],[-3],[-2],[-5],[10],[-3],[-8],[6],[5],[4],[-1],[9],[-6],[7],[-5],[-1],[7],[-6],[-5],[-7],[-1],[-5],[-3],[8],[-2],[1],[9],[-7],[2],[6],[-5],[10],[9],[10],[-9],[8],[9],[10],[6],[-2],[-10],[-4],[-3],[-5],[7],[4],[-8],[-5],[-2],[-10],[-3],[-2],[4],[8],[10],[10],[5],[1],[9],[2],[-9],[9],[5],[-6],[-10],[-10],[9],[-7],[4],[4],[-5],[3],[2],[-7],[2],[-6],[-8],[-10],[-10],[9],[-5],[5],[1],[-4],[7],[-6],[-4],[-4],[3],[-7],[1],[-5],[10],[-3],[2],[-4],[-1],[8],[1],[6],[3],[4],[-10],[-4],[-10],[-9],[-6],[-1],[2],[9],[-7],[2],[2],[-9],[-3],[2],[-6],[-3],[-5],[-3],[-10],[7],[9],[-4],[-3],[8],[6],[8],[-9],[2],[2],[9],[-2],[-6],[3],[-3],[2],[-1],[-7],[5],[-8],[8],[10],[-1],[-2],[2],[-8],[-4],[5],[-7],[-9],[-1],[8],[3],[5],[-5],[-8],[8],[-10],[-10],[3],[-8],[3],[9],[-2],[-8],[5],[-2],[-1],[8],[3],[-10],[8],[-3],[-6],[-1],[-3],[8],[-1],[-7],[3],[3],[-5],[3],[-2],[-2],[6],[-7],[10],[3],[1],[7],[-2],[-3],[3],[-5],[-5],[8],[-7],[-8],[6],[5],[-3],[-6],[-2],[-1],[2],[-10],[-4],[-7],[-3],[5],[5],[2],[4],[3],[9],[2],[2],[-7],[9],[-9],[5],[-7],[-2],[-5],[-1],[7],[-2],[1],[6],[-8],[4],[6],[-9],[10],[10],[-3],[9],[-3],[-8],[-8],[-9],[-6],[1],[-8],[1],[-1],[-7],[-1],[-10],[8],[-10],[-3],[3],[-2],[6],[-2],[2],[-5],[5],[-9],[1],[-1],[6],[9],[-1],[-4],[-10],[-2],[6],[-5],[-1],[-5],[-5],[7],[8],[-6],[7],[-9],[7],[9],[-7],[-3],[-3],[-9],[8],[-1],[-1],[3],[9],[-3],[7],[5],[-7],[6],[-4],[-4],[-9],[7],[1],[-1],[10],[-7],[8],[-6],[-1],[5],[-8],[-1],[-7],[-1],[-4],[-4],[-3],[7],[9],[-10],[-1],[1],[-8],[-10],[5],[4],[-6],[-10],[-3],[-7],[-7],[2],[-4],[-3],[-8],[-1],[1],[-10],[-6],[-5],[-4],[6],[-5],[-4],[-9],[-5],[-2],[8],[5],[-8],[-4],[2],[10],[4],[2],[8],[-2],[7],[-3],[8],[-4],[10],[-2],[-3],[-10],[10],[9],[-1],[5],[4],[7],[-5],[-8],[-8],[7],[-5],[-1],[-8],[-5],[-9],[-3],[1],[10],[10],[7],[3],[8],[5],[-10],[7],[1],[8],[-10],[4],[-7],[-10],[-2],[2],[-1],[7],[8],[2],[-6],[2],[-1],[3],[4],[3],[-8],[-7],[2],[7],[8],[-5],[-4],[9],[-10],[8],[9],[2],[-10],[2],[-6],[5],[-6],[1],[2],[1],[7],[-9],[6],[-1],[-8],[-2],[8],[8],[1],[-9],[7],[-1],[8],[10],[-9],[-8],[-4],[-7],[6],[7],[-8],[2],[5],[3],[8],[-2],[-6],[7],[-2],[4],[7],[-8],[-10],[1],[3],[-9],[-9],[7],[8],[9],[-2],[2],[-2],[3],[-7],[7],[-8],[5],[10],[-1],[6],[-5],[8],[-8],[-10],[2],[-7],[-1],[5],[-7],[1],[-4],[-9],[-7],[5],[-3],[8],[5],[-10],[4],[-9],[3],[5],[9],[7],[10],[-9],[9],[5],[8],[-3],[-10],[-9],[-1],[-5],[10],[-5],[4],[-6],[-10],[8],[-3],[6],[7],[-9],[1],[8],[-7],[4],[7],[-4],[7],[-9],[-1],[-3],[-9],[1],[-10],[-5],[8],[3],[-8],[-1],[-9],[2],[6],[2],[-7],[-4],[7],[-9],[2],[10],[1],[-10],[9],[-8],[-4],[1],[-4],[9],[9],[3],[4],[4],[9],[-8],[7],[3],[-3],[-7],[-6],[-1],[-6],[6],[-5],[1],[-8],[-8],[6],[-6],[9],[-5],[1],[-4],[-3],[-9],[8],[1],[-2],[5],[2],[1],[-2],[2],[3],[2],[1],[-8],[-5],[7],[5],[-9],[7],[8],[-5],[-9],[9],[-6],[-9],[9],[-8],[5],[8],[2],[-8],[-3],[6],[-8],[10],[-2],[-9],[3],[-1],[10],[-1],[3],[2],[1],[-5],[-5],[-3],[-8],[8],[1],[1],[6],[-4],[-9],[10],[-6],[-2],[2],[-1],[6],[-7],[9],[-7],[8],[2],[-5],[5],[-3],[10],[6],[5],[5],[-3],[3],[-2],[-9],[8],[-9],[-2],[2],[8],[-7],[9],[-2],[5],[-1],[1]], dtype = "int8")#candidate|1355|(2145, 1)|const|int8
call_1354 = func_98_call(relay.reshape(const_1355.astype('int8'), [11, 15, 13]), relay.reshape(const_1355.astype('int8'), [11, 15, 13]), )
call_1356 = func_98_call(relay.reshape(const_1355.astype('int8'), [11, 15, 13]), relay.reshape(const_1355.astype('int8'), [11, 15, 13]), )
output = relay.Tuple([call_1345,call_1350,call_1354,const_1355,])
output2 = relay.Tuple([call_1346,call_1351,call_1356,const_1355,])
func_1360 = relay.Function([], output)
mod['func_1360'] = func_1360
mod = relay.transform.InferType()(mod)
output = func_1360()
func_1361 = relay.Function([], output)
mutated_mod['func_1361'] = func_1361
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1337_call = mod.get_global_var('func_1337')
func_1338_call = mutated_mod.get_global_var('func_1338')
call_1421 = relay.TupleGetItem(func_1337_call(), 4)
call_1422 = relay.TupleGetItem(func_1338_call(), 4)
var_1467 = relay.var("var_1467", dtype = "float32", shape = (12, 6, 8))#candidate|1467|(12, 6, 8)|var|float32
bop_1468 = relay.less(call_1421.astype('bool'), relay.reshape(var_1467.astype('bool'), relay.shape_of(call_1421))) # shape=(12, 6, 8)
bop_1471 = relay.less(call_1422.astype('bool'), relay.reshape(var_1467.astype('bool'), relay.shape_of(call_1422))) # shape=(12, 6, 8)
func_852_call = mod.get_global_var('func_852')
func_855_call = mutated_mod.get_global_var('func_855')
const_1474 = relay.const([-4,-6,-7,-4,-10,-8,6,-1,-2,-1,-9,-2,-3,1,5,-2,2,7,-4,2,9,-5,9,-9,3,1,-10,-2,2,-4,7,7,4,3,-4,-2,-4,-7,4,-2,-10,8,-8,1,-6,-6,-1,-4,-6,4,9,-2,-4,-6,6,5,10,4,-6,7,-9,6,-5,-6,-5,-10,8,-7,-2,-1,10,-4,1,-2,2,8,-2,3,5,10,-2,4,6,-2,-6,-7,-1,1,-1,-7,-2,-6,1,4,1,-4,8,-2,-3,3,9,10,-2,-10,-5,8,5,-4,3,2,3,6,-8,-4,-5,2,8,6,6,5,-4,-9,-6,5,10,-5,5,-2,4,-4,4,4,10,4,-5,-7,1,-10,-8,8,4,1,-7,-10,3,-1,-10,1,-5,5,-5,9,-8,-4,-5,6,-8,-1,-4,-5,7,-5,10,-6,-2,-5,5,2,-4,-2,1,-10,-9,-3,4,-9,5,-7,-2,10,-5,-3,-8,4,3,2,-7,10,-5,-6,-10,-9,1,-2,8,8,-6,4,6,-7,-5,1,-3,-6,4,9,-1,1,-2,-6,4,4,5,-7,5,9,4,1,-1,-8,-3,2,-5,5,-7,-8,4,-4,-9,1,-2,-3,10,-6,5,7,2,1,4,5,-8,4,-4,-3,7,6,-4,-10,6,-7,-1,-8,-6,10,-6,3,9,-8,-6,-7,-6,-6,3,5,1,10,-6,5,-7,2,-2,-9,-4,6,-9,5,-8,-6,-9,10,-4,-4,-7,2,5,-9,-1,-8,5,-5,6,10,4,-5,-8,5,-5,2,-7,10,-10,-9,-7,-6,-2,7,-4,4,-2,9,5,-1], dtype = "uint64")#candidate|1474|(312,)|const|uint64
var_1475 = relay.var("var_1475", dtype = "bool", shape = (1408,))#candidate|1475|(1408,)|var|bool
call_1473 = relay.TupleGetItem(func_852_call(relay.reshape(const_1474.astype('uint64'), [312,]), relay.reshape(var_1475.astype('bool'), [1408,]), ), 5)
call_1476 = relay.TupleGetItem(func_855_call(relay.reshape(const_1474.astype('uint64'), [312,]), relay.reshape(var_1475.astype('bool'), [1408,]), ), 5)
func_901_call = mod.get_global_var('func_901')
func_903_call = mutated_mod.get_global_var('func_903')
call_1482 = func_901_call()
call_1483 = func_901_call()
output = relay.Tuple([bop_1468,call_1473,const_1474,var_1475,call_1482,])
output2 = relay.Tuple([bop_1471,call_1476,const_1474,var_1475,call_1483,])
func_1502 = relay.Function([var_1467,var_1475,], output)
mod['func_1502'] = func_1502
mod = relay.transform.InferType()(mod)
var_1503 = relay.var("var_1503", dtype = "float32", shape = (12, 6, 8))#candidate|1503|(12, 6, 8)|var|float32
var_1504 = relay.var("var_1504", dtype = "bool", shape = (1408,))#candidate|1504|(1408,)|var|bool
output = func_1502(var_1503,var_1504,)
func_1505 = relay.Function([var_1503,var_1504,], output)
mutated_mod['func_1505'] = func_1505
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1227_call = mod.get_global_var('func_1227')
func_1228_call = mutated_mod.get_global_var('func_1228')
call_1523 = relay.TupleGetItem(func_1227_call(), 0)
call_1524 = relay.TupleGetItem(func_1228_call(), 0)
const_1533 = relay.const([[[1,-8,-8,-9,4,1,-8,7],[-7,6,2,1,-4,-9,-1,6],[2,10,4,8,-5,-1,-9,-8],[-9,-6,-4,10,-5,4,1,8],[5,-5,9,7,2,9,-10,8],[1,-4,-2,4,3,-3,-7,10]],[[-9,1,8,-2,-9,2,7,-9],[-5,-5,9,-4,9,-9,-8,-10],[-5,7,-10,6,9,9,9,6],[2,2,-3,4,-6,8,-1,3],[9,9,-8,-1,4,-4,-7,-8],[-2,-10,9,-4,-6,-10,-3,5]],[[4,3,1,-10,-3,8,7,-1],[-4,-3,-7,-9,1,2,-4,-6],[-4,-10,-5,10,9,2,-1,4],[-5,2,5,-5,-1,-10,7,-3],[9,6,6,-3,-3,10,7,-3],[2,-2,-5,3,7,10,1,5]],[[-7,-3,-6,-9,-9,-2,6,9],[-1,2,2,-3,-9,3,8,-10],[-10,9,7,-2,10,5,1,1],[6,9,9,7,9,-7,-1,-2],[-8,-4,3,-5,3,-9,5,8],[3,9,3,9,-9,7,-3,-8]],[[1,8,-1,-7,5,9,-5,-1],[-6,10,10,1,8,-9,8,2],[1,-5,4,-7,9,-9,4,-3],[-2,-10,-6,2,-9,-5,-10,8],[8,6,-7,-1,8,9,1,2],[8,-8,5,8,-10,-10,-9,-2]],[[2,-9,10,5,3,1,7,9],[-7,10,6,-5,1,7,-4,7],[6,6,7,5,5,-3,-1,-8],[7,10,9,10,-9,-10,-7,-10],[2,-10,-7,-8,-2,5,-1,-10],[4,-4,5,1,-2,-8,7,-1]],[[-4,-9,-7,-3,5,-2,10,7],[-4,-5,6,3,-8,-4,-1,-5],[9,7,-10,-6,-8,-3,10,2],[-10,3,4,3,-8,-8,-5,5],[-8,9,5,-3,4,1,8,10],[-8,-4,-10,4,-6,-9,7,3]],[[8,-3,9,-6,-4,1,-8,-1],[-5,-1,-4,2,-9,-10,-7,-4],[-7,10,5,-3,10,-2,-4,-7],[10,3,-6,3,-8,-4,6,-1],[-4,-2,-6,-9,-10,7,6,4],[-3,-7,2,6,2,6,-7,2]],[[-8,2,1,10,-4,7,2,-5],[8,6,1,1,-2,-3,4,4],[-2,-3,10,6,2,-6,-7,-1],[-3,7,9,-7,-5,-3,8,2],[-4,4,-10,-1,-6,-7,6,-7],[5,2,2,-6,-2,7,-4,9]],[[-5,5,-7,-8,-1,-7,-2,-7],[8,10,3,-6,-5,-4,-3,-9],[9,-4,10,9,-8,2,1,-9],[-1,9,-5,8,10,-8,-6,-1],[-3,-3,-6,8,-1,4,-10,-10],[-1,6,6,7,7,-8,4,-9]],[[-4,-4,5,4,10,7,-10,2],[8,9,-1,9,-2,2,8,-7],[-4,-5,-10,-4,-9,-2,-1,-2],[10,2,-8,1,10,7,5,-2],[-4,-7,-6,-5,-3,3,1,3],[-7,-5,8,6,-9,7,9,-2]],[[-4,9,1,6,3,8,-5,5],[7,-10,8,-4,10,-3,-1,-4],[-6,-7,-7,1,-2,-3,-1,10],[10,5,-5,7,2,-6,6,8],[-1,9,7,9,8,-6,-10,-10],[-6,8,-6,7,-8,-3,-3,6]]], dtype = "int64")#candidate|1533|(12, 6, 8)|const|int64
bop_1534 = relay.left_shift(call_1523.astype('int8'), relay.reshape(const_1533.astype('int8'), relay.shape_of(call_1523))) # shape=(12, 6, 8)
bop_1537 = relay.left_shift(call_1524.astype('int8'), relay.reshape(const_1533.astype('int8'), relay.shape_of(call_1524))) # shape=(12, 6, 8)
output = bop_1534
output2 = bop_1537
func_1545 = relay.Function([], output)
mod['func_1545'] = func_1545
mod = relay.transform.InferType()(mod)
mutated_mod['func_1545'] = func_1545
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1545_call = mutated_mod.get_global_var('func_1545')
call_1546 = func_1545_call()
output = call_1546
func_1547 = relay.Function([], output)
mutated_mod['func_1547'] = func_1547
mutated_mod = relay.transform.InferType()(mutated_mod)
var_1604 = relay.var("var_1604", dtype = "float64", shape = (2, 16, 12))#candidate|1604|(2, 16, 12)|var|float64
uop_1605 = relay.log2(var_1604.astype('float64')) # shape=(2, 16, 12)
output = uop_1605
output2 = uop_1605
func_1608 = relay.Function([var_1604,], output)
mod['func_1608'] = func_1608
mod = relay.transform.InferType()(mod)
mutated_mod['func_1608'] = func_1608
mutated_mod = relay.transform.InferType()(mutated_mod)
var_1609 = relay.var("var_1609", dtype = "float64", shape = (2, 16, 12))#candidate|1609|(2, 16, 12)|var|float64
func_1608_call = mutated_mod.get_global_var('func_1608')
call_1610 = func_1608_call(var_1609)
output = call_1610
func_1611 = relay.Function([var_1609], output)
mutated_mod['func_1611'] = func_1611
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1360_call = mod.get_global_var('func_1360')
func_1361_call = mutated_mod.get_global_var('func_1361')
call_1631 = relay.TupleGetItem(func_1360_call(), 0)
call_1632 = relay.TupleGetItem(func_1361_call(), 0)
output = relay.Tuple([call_1631,])
output2 = relay.Tuple([call_1632,])
func_1638 = relay.Function([], output)
mod['func_1638'] = func_1638
mod = relay.transform.InferType()(mod)
output = func_1638()
func_1639 = relay.Function([], output)
mutated_mod['func_1639'] = func_1639
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1032_call = mod.get_global_var('func_1032')
func_1034_call = mutated_mod.get_global_var('func_1034')
call_1689 = relay.TupleGetItem(func_1032_call(), 1)
call_1690 = relay.TupleGetItem(func_1034_call(), 1)
output = relay.Tuple([call_1689,])
output2 = relay.Tuple([call_1690,])
func_1694 = relay.Function([], output)
mod['func_1694'] = func_1694
mod = relay.transform.InferType()(mod)
mutated_mod['func_1694'] = func_1694
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1694_call = mutated_mod.get_global_var('func_1694')
call_1695 = func_1694_call()
output = call_1695
func_1696 = relay.Function([], output)
mutated_mod['func_1696'] = func_1696
mutated_mod = relay.transform.InferType()(mutated_mod)
const_1833 = relay.const([[[5.254328,-5.050836,3.259475,-4.148697,2.926686,-9.992743,-9.829089,-5.216905,0.318017],[-5.095480,5.753190,-6.590659,-6.763435,2.536003,-4.846280,-3.228538,9.085742,6.379805],[-0.142022,2.114053,9.943828,-1.705058,3.429053,-4.547215,7.671897,-2.770840,-0.451776],[-4.184576,5.004504,-0.814669,-6.314830,4.368819,8.859490,-5.587909,9.241266,-8.029692],[6.045901,-2.868333,1.587001,6.630896,9.400274,7.446172,8.412147,-8.754606,7.624609],[-7.123426,-5.030261,-7.228604,-3.197548,5.503032,-6.397964,-4.435145,-5.432686,8.616214],[-6.439876,-3.910881,-6.503756,6.213613,0.697680,6.117376,-3.191900,-9.193825,7.782829],[-5.091463,-7.082824,7.340100,5.188571,-0.141922,2.070068,8.970597,4.768028,6.108202],[3.529871,3.394659,8.431008,-3.215327,-6.134932,-3.537075,6.258679,-8.045817,-8.059826],[-4.030086,4.161525,0.695088,-6.705874,-2.517079,-5.263738,-1.992799,-5.602833,6.775269],[-7.013390,5.513796,-8.379470,-2.351948,5.466504,6.564607,8.882108,6.781446,8.787948],[0.292354,-5.792232,2.919176,6.806410,-5.438594,6.532866,2.628524,8.383020,-0.118841]],[[-2.419968,9.354698,6.346707,1.752976,3.164128,-9.371344,9.833601,-8.478708,9.302111],[5.516146,1.199289,9.996774,2.692839,-2.677389,2.619879,-8.441668,-3.179798,7.418485],[9.974347,-0.450556,-1.991852,8.454207,-7.349633,7.669312,3.440135,-2.550700,-5.779679],[3.929854,5.543384,3.221671,-5.567318,-2.527852,2.951933,6.500731,0.008640,6.253154],[-9.889924,0.111888,7.591385,-3.394163,8.255066,9.061330,-6.814791,7.740666,6.260882],[3.132272,9.564989,-2.577611,1.008684,4.262929,0.247845,-0.500508,2.854091,-6.824321],[-9.327954,7.630972,2.151798,-6.132695,0.080071,8.279997,-7.127018,-1.438005,2.020911],[-7.226899,-6.323623,2.088305,0.026121,3.277568,3.474972,0.937295,9.553664,-4.850659],[6.457690,-1.155663,-9.470161,4.001474,-5.347510,-9.905044,-5.991720,5.777407,-7.819797],[-9.645891,-6.378958,-8.974903,4.015022,-1.397203,-4.049389,-2.199546,2.293793,-2.949182],[-9.323098,-6.731926,-3.821727,-8.134182,1.568813,3.140946,-7.309647,1.981402,-3.412877],[8.555365,5.050935,-4.093019,-0.797039,-5.019003,8.507428,3.704228,-7.025065,1.560076]],[[8.083458,-6.908724,1.473086,-2.929794,2.242654,-6.393968,-7.360971,-9.536023,0.245760],[3.211879,9.688582,2.310935,2.161713,-9.677849,-9.507098,-0.941597,-2.714239,0.046625],[-0.669538,4.694634,5.847405,9.643943,4.723917,-8.125485,-3.224244,-2.250199,0.172397],[9.929730,5.721010,-0.268452,8.248484,9.412841,0.363730,0.312177,-9.204025,-7.785231],[-2.362352,9.133713,7.651043,3.843814,-3.356641,8.381472,4.032219,-2.719717,-9.846955],[7.451290,4.572932,4.898525,5.961318,-5.082136,-2.801808,9.633369,5.300254,-8.904763],[-3.238090,-7.513963,-2.509039,-2.119538,-1.849923,-3.381143,-9.629066,-6.542264,-7.385132],[-8.926783,-7.333943,9.688012,9.783143,-8.193574,-0.427639,2.282120,-4.427791,0.670680],[4.103798,-3.698180,-0.069515,4.136244,-6.531302,-6.689389,7.234943,-3.790507,0.804525],[-1.666076,3.528329,3.422966,-9.358045,-9.519908,2.825001,1.972528,-2.918786,-8.821465],[-3.566069,4.592363,-1.164962,7.993874,-0.088891,8.093812,4.520569,7.316269,-5.532129],[-9.883860,6.844660,1.850771,-3.149228,-8.604321,4.636952,3.853625,-5.505360,-4.391572]],[[-3.052333,-3.375631,-7.645748,0.391128,-7.931462,-2.462056,0.500197,6.838801,8.837172],[1.728478,7.418795,-4.295798,0.663094,-3.451653,-5.141331,-4.769637,-7.458734,-2.959932],[-0.486272,-3.392230,-2.635329,-3.544524,-4.013504,-5.713591,-4.232360,1.059994,5.396545],[-0.923485,-4.345630,-7.381583,-5.660350,9.128577,-3.995258,4.131271,9.872959,3.073049],[-6.261966,-8.683596,8.047584,-3.004568,-0.723616,5.264479,-7.684142,-1.342396,-1.276829],[1.449849,7.968584,9.159984,-2.659349,8.619292,-3.376365,4.279095,-4.295271,3.877847],[2.057003,5.514003,-3.228413,1.219876,0.689344,5.631085,0.346188,-8.038062,0.867691],[-4.605963,-6.753850,-3.627931,-0.867502,2.622524,4.714479,-8.695797,-7.257357,-0.416485],[-7.863539,4.038364,-5.243218,4.120719,-5.585663,-3.599469,8.647865,6.016682,-6.831076],[-1.068527,-3.011795,0.783993,6.813728,-7.350261,-2.143135,-5.481751,-5.210841,-5.303986],[-4.828318,-0.820635,3.894479,-8.238624,1.385263,-3.125392,8.992647,-7.176225,-3.632194],[8.148383,2.210959,2.090549,1.445871,-8.456797,-5.952843,-4.357861,-9.560355,1.857013]],[[7.852969,-1.105244,9.368465,3.737081,-3.950436,-1.007607,0.272002,-8.053548,3.811324],[-6.692912,6.712619,5.766811,8.190255,-0.829965,-1.761955,6.868350,6.266213,7.658216],[-5.478287,-9.131577,-0.675348,4.798781,-3.973648,5.843345,-1.929594,-7.768924,-9.602547],[5.846725,4.755443,-7.127253,3.620939,-1.491915,7.127328,7.252944,-0.633414,-2.698318],[3.610478,-2.556055,0.459622,3.566616,-8.247127,4.953292,8.451317,-0.371742,-1.118460],[6.506145,0.500385,2.824736,7.178369,-2.317930,-6.259608,-2.008281,8.551320,0.850661],[-6.560205,-8.591855,4.183136,-2.134826,-4.933379,9.046551,8.360212,-5.908589,-3.116127],[8.193822,-7.283698,6.206857,9.163088,-7.047164,4.622930,5.527731,2.344599,-6.973967],[-3.391161,9.498327,2.442159,2.988839,8.803162,7.417331,3.170137,6.036040,7.441154],[-8.024921,4.518917,1.050361,0.383969,-0.771594,-7.876725,6.117381,7.406967,1.731288],[5.127582,9.918127,-8.269875,2.657495,-3.873649,6.423141,3.014207,-5.491256,5.246171],[3.771682,-0.438606,8.879470,-4.995539,7.835691,4.411069,4.944636,-6.978246,-4.483605]],[[0.898113,-7.918703,-8.670238,3.659364,-7.244315,-7.609065,2.976180,-8.432064,-6.354109],[-6.310533,-7.874061,-2.572197,-9.967494,-9.380919,7.159772,1.072800,-6.878888,-8.721158],[-4.520025,6.380218,5.839653,-7.937817,9.494198,-7.165886,-5.316454,7.940902,6.851256],[-8.619554,7.820455,-2.999591,5.359029,5.526551,3.428776,2.411509,-4.675216,-7.944578],[-0.803803,-6.299829,7.518174,6.462886,-5.257566,-2.265579,2.130876,4.641412,-6.263976],[5.265063,-9.016163,1.324059,-7.621411,6.081191,1.401227,-6.919049,-7.237769,-0.282103],[5.236439,7.416614,-0.877621,0.733128,-6.759327,-3.635619,-8.764341,0.407609,-7.104835],[2.318351,3.150025,3.543066,-2.392950,-8.448304,3.675360,0.267831,5.268114,-1.551973],[-5.701884,6.442774,-3.797874,5.836312,5.805662,4.010465,-8.046653,-9.353331,9.816918],[-4.036288,5.607935,-0.804229,0.126587,4.888197,-0.523137,-0.586143,-7.466347,-2.273901],[2.727434,0.401670,-1.391132,1.031273,6.411749,-2.699153,7.391570,3.148243,9.045300],[9.820919,9.796315,9.219633,-8.637214,-0.159750,4.585313,-7.746081,5.362508,8.756133]],[[-5.650189,-0.196714,-7.012365,0.922215,9.439650,-0.720119,-6.778389,-5.148896,0.272611],[-5.349388,0.776145,-4.128806,5.419023,-7.190002,-7.678157,-4.762385,-8.517024,4.277843],[4.895766,-5.463170,7.023887,7.338434,6.541191,9.074390,-2.887674,-3.232761,-7.669579],[-3.824711,5.456730,-5.496290,9.816142,9.410868,6.530921,-5.881411,1.434322,-7.277593],[-5.277510,-3.647538,5.447805,-5.509885,6.542821,9.601482,4.776425,6.658851,-3.477662],[-6.068030,-9.018393,0.630350,-8.602059,-2.715465,1.727849,-6.477792,6.546430,1.116851],[-8.999631,-7.066280,-1.046718,-2.735246,7.772042,6.432653,6.678249,3.873093,7.303305],[-4.932838,7.721511,6.542114,8.264080,-3.208563,-4.578862,5.662025,6.019614,4.194515],[8.221269,3.508837,0.306960,0.657373,-3.850960,0.785184,4.563252,-6.789502,-0.239350],[3.420548,6.844602,-9.537745,2.968542,9.798803,6.753936,1.638409,-1.382094,-3.629917],[6.402542,-0.412058,-5.070157,0.132329,7.744193,-9.770735,3.099690,3.412263,1.169596],[-3.749844,6.302372,3.741614,-7.343626,-3.136910,6.862036,8.565086,-5.407403,4.646943]]], dtype = "float32")#candidate|1833|(7, 12, 9)|const|float32
var_1834 = relay.var("var_1834", dtype = "float32", shape = (7, 12, 9))#candidate|1834|(7, 12, 9)|var|float32
bop_1835 = relay.floor_mod(const_1833.astype('float32'), relay.reshape(var_1834.astype('float32'), relay.shape_of(const_1833))) # shape=(7, 12, 9)
func_793_call = mod.get_global_var('func_793')
func_794_call = mutated_mod.get_global_var('func_794')
call_1840 = func_793_call()
call_1841 = func_793_call()
bop_1865 = relay.bitwise_or(bop_1835.astype('int16'), relay.reshape(const_1833.astype('int16'), relay.shape_of(bop_1835))) # shape=(7, 12, 9)
func_765_call = mod.get_global_var('func_765')
func_767_call = mutated_mod.get_global_var('func_767')
const_1882 = relay.const([-8.936438,3.406643,-4.787768,-4.557423,-9.135604,8.997520,-3.280432,-8.126520,-1.392157,-9.225519,-5.393493,-5.170079,-9.332976,-2.869302,1.449066,-0.813948,0.136598,-2.423584,1.154824,-2.679611,6.712914,2.454838,-2.281892,9.412775,7.803014,-4.221029,4.498394,-4.913861,0.750155,1.318632,-6.007862,8.631405,-0.297983,8.791517,-7.709098,5.865865,2.614251,0.238426,3.305802,1.906616,7.525752,-2.080653,-1.029343,-5.676420,-7.141025,-8.064990,9.269042,-1.413159,-4.083915,8.117401,9.281921,-1.675253,8.432447,8.425453,4.431991,7.518968,-5.470788,0.398525,6.590165,0.556773,6.360731,-5.405787,3.745114,-2.479100,-0.783392,-8.277418,3.180897,7.246155,-1.589435,7.897563,8.545536,-8.805693,-5.777077,-6.320025,5.024205,5.572313,-9.429949,9.475558,-8.209347,7.974083,-3.746128,7.384887,-4.466831,-1.685986,3.042008,-3.435805,3.535635,-7.196493,-3.857867,4.216768,-1.917969,0.003778,-6.611619,-0.149949,-4.351720,9.083337,0.146024,-6.011812,6.352713,8.881742,-7.744146,9.321227,-3.219182,-0.156062,1.099972,4.198702,-1.021237,-7.586127,9.876682,-5.109752,-7.744903,-5.300810,-9.473834,3.131658,-7.746905,-7.902209,0.387771,-3.276905,3.510935,-3.011642,-0.715537,5.498163,-3.367432,2.467621,-0.037911,-9.531742,9.688117,2.519120,2.523384,-2.701522,3.829248,2.602084,-0.273009,-4.675124,-3.155269,-6.551962,-8.581956,5.361318,4.626646,9.970222,-6.691299,-9.731499,-8.988445,8.355389,9.416594,1.741477,-7.751888,1.327112,-8.099579,2.837599,-1.381696,4.604775,7.821852,-0.308674,4.307859,-0.843347,7.000037,-9.582973,-8.264312,4.655850,9.052501,-0.198704,6.215201,-8.989208,-7.513497,-2.255705,-1.255996,4.922944,7.856743,-4.764197,3.271740,-7.416675,-2.376550,8.127810,7.725020,-0.001841,7.705643,-6.943086,-9.927136,5.001121,-5.958093,7.263055,0.147693,-9.535665,-2.551130,-3.619430,-2.598871,-3.235523,7.155914,0.060935,9.006871,4.878534,5.160484,3.092031,-9.232286,-6.709359,0.887852,2.034768,-6.128316,5.659211,2.165713,7.555721,-2.587857,-4.104074,1.314172,-8.548791,4.615552,4.406170,-5.724861,-2.083330,2.186217,4.845612,-8.020100,-7.886610,1.904899,-6.755976,3.227558,-0.225760,5.926186,4.961971,-8.450560,5.725900,0.344900,-9.333101,-5.025310,-8.145584,5.684585,-7.725093,3.007264,0.682483,-5.265377,3.785608,3.557558,2.384708,-8.929578,3.034521,7.180418,-8.183277,8.870876,-6.255647,3.751397,-5.760025,-7.250244,-1.880463,4.713312,-4.607547,9.797377,9.996032,2.602047,-4.956936,1.296465,9.780508,-7.777695,6.937757,-1.535509,2.706326,-0.781159,2.857190,-8.035325,-7.086073,0.288743,4.896242,-9.504059,8.652575,-6.459650,0.644868,0.276753,-3.856685,-0.967702,5.116399,8.990704,-1.280706,-3.096323,-3.073552,-4.897581,-5.679231,-9.937222,-7.404911,-3.873509,-7.821652,7.701509,-1.217270,-0.958749,9.771236,-3.928725,-7.932609,4.818964,-5.192267,-0.233944,0.621709,5.946391,-2.217719,0.646248,2.056110,-1.725732,-8.715921,6.881718,-9.770120,4.430683,9.562320,-7.393654,0.676920,-3.375880,-7.171406,4.345609,7.965923,5.416322,-8.515431,2.489619,7.838500,0.883650,8.322993,-4.415517,7.125875,8.229968,-5.287275,-2.887089,-6.725954,1.733502,0.120167,-7.769126,1.979395,-1.070178,-5.776508,3.686757,8.029130,-9.406277,-4.583707,-3.226674,-0.886704,-1.270884,0.729258,2.467769,2.874923,-0.113138,4.362617,-7.120208,5.664103,-1.663166,-9.817577,3.965708,-9.655809,-4.873547,-8.817695,-3.806767,5.813565,4.390341,8.956531,-9.303659,9.589936,3.633850,6.274005,-2.644264,-7.833485,-8.828886,-4.028871,-6.588971,0.482357,1.064030,1.570604,5.883694,-4.569944,-9.892793,8.348734,0.143546,0.007849,4.691456,-3.885564,6.864128,-2.593772,9.129643,4.644217,9.195700,-0.421276,1.953998,3.206207,-7.508427,9.440495,2.646853,7.213840,-6.296377,-8.448638,2.989172,8.287614,0.710828,4.490827,-5.578269,8.873815,5.970865,1.502827,8.410667,2.764565,-7.700507,-5.108268,6.519248,-7.098113,0.158434,1.919254,9.904207,3.245453,-1.402174,7.604215,-0.529112,1.462600,1.768033,-8.627773,0.681004,-7.020500,-8.826216,3.917822,5.797727,2.897691,-9.420042,2.769237,1.131661,7.372139,3.331623,2.106359,8.262579,-6.775857,3.935107,7.836094,-4.652114,-7.570193,0.883703,2.019859,-6.829684,3.856492,0.327666,-6.413449,4.898361,2.581377,5.670113,-3.733132,8.513190,7.177856,8.624219,5.411367,-5.037473,0.898960,3.782720,-8.920366,9.388944,6.434363,7.485766,-7.305635,8.410786,2.588602,-2.830901,7.303392,-8.518315,-5.278935,1.604694,-8.748338,4.664652,0.492151,-0.353886,-6.670361,8.222707,-6.855473,-9.470262,-8.302338,-0.544673,-5.089028,5.882661,-4.350951,-7.377054,-7.783071,-4.005700,0.158751,-7.436744,4.656303,7.495848,-1.620386,4.097808,3.879954,6.510715,8.488448,1.417323,-2.881853,7.089797,9.921853,2.260734,2.244512,-2.430061,-9.480570,-8.093858,1.577908,1.608826,-3.840056,-5.158161,-7.965085,0.555409,-3.917839,9.248499,-9.558923,5.113821,-1.765114,3.597846,0.974559,2.639049,-9.852150,2.844299,4.005807,2.677830,6.047728,8.655276,-7.799745,0.836119,5.277096,7.126134,8.320608,1.629651,-7.842756,2.573852,-0.023060,4.236969,-9.295221,-7.815731,4.913349,-0.476349,-9.854554,4.025790,-4.439420,7.758787,1.852150,2.814069,9.236443,0.411660,9.767775,1.557136,7.798533,-7.162996,7.572016,5.154959,5.647202,9.350272,6.549680,-6.287382,1.291896,5.065315,-6.160613,6.747738,-4.859483,6.823275,-9.497286,0.529447,6.942660,6.041536,4.716859,-6.668875,-1.828418,-8.281376,-0.265565,-6.193226,-9.502920,-3.155167,-0.265679,-4.142800,-3.072460], dtype = "float64")#candidate|1882|(560,)|const|float64
call_1881 = relay.TupleGetItem(func_765_call(relay.reshape(const_1882.astype('float64'), [560,])), 5)
call_1883 = relay.TupleGetItem(func_767_call(relay.reshape(const_1882.astype('float64'), [560,])), 5)
func_1032_call = mod.get_global_var('func_1032')
func_1034_call = mutated_mod.get_global_var('func_1034')
call_1896 = relay.TupleGetItem(func_1032_call(), 1)
call_1897 = relay.TupleGetItem(func_1034_call(), 1)
output = relay.Tuple([call_1840,bop_1865,call_1881,const_1882,call_1896,])
output2 = relay.Tuple([call_1841,bop_1865,call_1883,const_1882,call_1897,])
func_1902 = relay.Function([var_1834,], output)
mod['func_1902'] = func_1902
mod = relay.transform.InferType()(mod)
var_1903 = relay.var("var_1903", dtype = "float32", shape = (7, 12, 9))#candidate|1903|(7, 12, 9)|var|float32
output = func_1902(var_1903)
func_1904 = relay.Function([var_1903], output)
mutated_mod['func_1904'] = func_1904
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1694_call = mod.get_global_var('func_1694')
func_1696_call = mutated_mod.get_global_var('func_1696')
call_1938 = relay.TupleGetItem(func_1694_call(), 0)
call_1939 = relay.TupleGetItem(func_1696_call(), 0)
output = call_1938
output2 = call_1939
func_1945 = relay.Function([], output)
mod['func_1945'] = func_1945
mod = relay.transform.InferType()(mod)
output = func_1945()
func_1946 = relay.Function([], output)
mutated_mod['func_1946'] = func_1946
mutated_mod = relay.transform.InferType()(mutated_mod)
var_2023 = relay.var("var_2023", dtype = "float64", shape = (7, 10, 1))#candidate|2023|(7, 10, 1)|var|float64
uop_2024 = relay.atan(var_2023.astype('float64')) # shape=(7, 10, 1)
bop_2031 = relay.add(uop_2024.astype('int8'), relay.reshape(var_2023.astype('int8'), relay.shape_of(uop_2024))) # shape=(7, 10, 1)
bop_2041 = relay.bitwise_and(var_2023.astype('uint64'), relay.reshape(uop_2024.astype('uint64'), relay.shape_of(var_2023))) # shape=(7, 10, 1)
func_1945_call = mod.get_global_var('func_1945')
func_1946_call = mutated_mod.get_global_var('func_1946')
call_2045 = func_1945_call()
call_2046 = func_1945_call()
bop_2047 = relay.less_equal(bop_2031.astype('bool'), relay.reshape(uop_2024.astype('bool'), relay.shape_of(bop_2031))) # shape=(7, 10, 1)
func_901_call = mod.get_global_var('func_901')
func_903_call = mutated_mod.get_global_var('func_903')
call_2058 = func_901_call()
call_2059 = func_901_call()
bop_2061 = relay.less(bop_2031.astype('bool'), relay.reshape(bop_2047.astype('bool'), relay.shape_of(bop_2031))) # shape=(7, 10, 1)
output = relay.Tuple([bop_2041,call_2045,call_2058,bop_2061,])
output2 = relay.Tuple([bop_2041,call_2046,call_2059,bop_2061,])
func_2084 = relay.Function([var_2023,], output)
mod['func_2084'] = func_2084
mod = relay.transform.InferType()(mod)
var_2085 = relay.var("var_2085", dtype = "float64", shape = (7, 10, 1))#candidate|2085|(7, 10, 1)|var|float64
output = func_2084(var_2085)
func_2086 = relay.Function([var_2085], output)
mutated_mod['func_2086'] = func_2086
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1198_call = mod.get_global_var('func_1198')
func_1199_call = mutated_mod.get_global_var('func_1199')
call_2122 = relay.TupleGetItem(func_1198_call(), 2)
call_2123 = relay.TupleGetItem(func_1199_call(), 2)
output = call_2122
output2 = call_2123
func_2132 = relay.Function([], output)
mod['func_2132'] = func_2132
mod = relay.transform.InferType()(mod)
output = func_2132()
func_2133 = relay.Function([], output)
mutated_mod['func_2133'] = func_2133
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1638_call = mod.get_global_var('func_1638')
func_1639_call = mutated_mod.get_global_var('func_1639')
call_2220 = relay.TupleGetItem(func_1638_call(), 0)
call_2221 = relay.TupleGetItem(func_1639_call(), 0)
uop_2222 = relay.cos(call_2220.astype('float64')) # shape=(12, 6, 8)
uop_2224 = relay.cos(call_2221.astype('float64')) # shape=(12, 6, 8)
output = relay.Tuple([uop_2222,])
output2 = relay.Tuple([uop_2224,])
func_2227 = relay.Function([], output)
mod['func_2227'] = func_2227
mod = relay.transform.InferType()(mod)
output = func_2227()
func_2228 = relay.Function([], output)
mutated_mod['func_2228'] = func_2228
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1227_call = mod.get_global_var('func_1227')
func_1228_call = mutated_mod.get_global_var('func_1228')
call_2239 = relay.TupleGetItem(func_1227_call(), 0)
call_2240 = relay.TupleGetItem(func_1228_call(), 0)
func_1360_call = mod.get_global_var('func_1360')
func_1361_call = mutated_mod.get_global_var('func_1361')
call_2269 = relay.TupleGetItem(func_1360_call(), 2)
call_2270 = relay.TupleGetItem(func_1361_call(), 2)
func_793_call = mod.get_global_var('func_793')
func_794_call = mutated_mod.get_global_var('func_794')
call_2275 = func_793_call()
call_2276 = func_793_call()
uop_2277 = relay.log2(call_2275.astype('float32')) # shape=(12, 6, 8)
uop_2279 = relay.log2(call_2276.astype('float32')) # shape=(12, 6, 8)
output = relay.Tuple([call_2239,call_2269,uop_2277,])
output2 = relay.Tuple([call_2240,call_2270,uop_2279,])
func_2282 = relay.Function([], output)
mod['func_2282'] = func_2282
mod = relay.transform.InferType()(mod)
output = func_2282()
func_2283 = relay.Function([], output)
mutated_mod['func_2283'] = func_2283
mutated_mod = relay.transform.InferType()(mutated_mod)
var_2316 = relay.var("var_2316", dtype = "uint32", shape = (13, 9, 3))#candidate|2316|(13, 9, 3)|var|uint32
var_2317 = relay.var("var_2317", dtype = "uint32", shape = (13, 9, 3))#candidate|2317|(13, 9, 3)|var|uint32
bop_2318 = relay.less(var_2316.astype('bool'), relay.reshape(var_2317.astype('bool'), relay.shape_of(var_2316))) # shape=(13, 9, 3)
func_1360_call = mod.get_global_var('func_1360')
func_1361_call = mutated_mod.get_global_var('func_1361')
call_2326 = relay.TupleGetItem(func_1360_call(), 2)
call_2327 = relay.TupleGetItem(func_1361_call(), 2)
func_382_call = mod.get_global_var('func_382')
func_386_call = mutated_mod.get_global_var('func_386')
var_2332 = relay.var("var_2332", dtype = "uint16", shape = (315,))#candidate|2332|(315,)|var|uint16
call_2331 = func_382_call(relay.reshape(var_2332.astype('uint16'), [7, 9, 5]), relay.reshape(var_2332.astype('uint16'), [7, 9, 5]), )
call_2333 = func_382_call(relay.reshape(var_2332.astype('uint16'), [7, 9, 5]), relay.reshape(var_2332.astype('uint16'), [7, 9, 5]), )
func_1337_call = mod.get_global_var('func_1337')
func_1338_call = mutated_mod.get_global_var('func_1338')
call_2341 = relay.TupleGetItem(func_1337_call(), 0)
call_2342 = relay.TupleGetItem(func_1338_call(), 0)
func_1638_call = mod.get_global_var('func_1638')
func_1639_call = mutated_mod.get_global_var('func_1639')
call_2351 = relay.TupleGetItem(func_1638_call(), 0)
call_2352 = relay.TupleGetItem(func_1639_call(), 0)
func_1109_call = mod.get_global_var('func_1109')
func_1111_call = mutated_mod.get_global_var('func_1111')
call_2354 = relay.TupleGetItem(func_1109_call(), 0)
call_2355 = relay.TupleGetItem(func_1111_call(), 0)
func_2227_call = mod.get_global_var('func_2227')
func_2228_call = mutated_mod.get_global_var('func_2228')
call_2358 = relay.TupleGetItem(func_2227_call(), 0)
call_2359 = relay.TupleGetItem(func_2228_call(), 0)
func_852_call = mod.get_global_var('func_852')
func_855_call = mutated_mod.get_global_var('func_855')
const_2364 = relay.const([[-6,-2,-8,9,-3,-3,-6,-2,1,2,3,-1,-7,8,6,6,4,-4,3,2,-6,10,-1,10,6,9,-10,-8,9,-9,-9,9,-3,6,6,3,4,-3,8,9,7,-3,8,-6,-7,-4,-7,10,5,7,-7,-3,-6,7,4,-7,-4,8,2,-9,-8,-5,-5,5,4,-1,-2,9,-3,-1,-2,7,-1,-8,-8,1,-1,1,5,5,-7,8,1,7,-4,10,-9,4,2,2,-10,-8,-3,-8,-4,-6,9,2,1,-5,-8,-3,-2,6],[2,5,-2,4,1,-4,4,10,1,-5,-1,-9,7,-7,-10,2,2,-3,-10,2,8,-10,5,6,-2,-8,3,-4,-9,9,6,3,-9,-4,3,4,-3,2,4,4,10,1,-1,-2,-7,-2,-2,-3,-1,-4,5,6,2,-6,7,-4,-3,-10,9,-7,-3,-1,3,-10,3,1,-1,7,-6,-2,4,1,3,4,-3,10,9,3,-5,8,-6,-5,-7,-2,5,7,-2,-7,-2,-6,-1,3,8,-1,8,1,10,2,-8,10,10,3,10,6],[-2,-6,-1,-2,-4,3,4,-7,2,2,4,3,1,-6,7,-2,-6,-9,-5,7,-6,3,-6,6,10,6,-10,-7,-5,4,7,-1,2,4,-1,-9,1,8,-2,3,-2,7,-10,-5,-9,8,-4,-3,-9,8,-7,-8,10,-6,-8,-6,10,2,-8,-6,7,7,3,10,6,-1,-4,1,-2,-6,-8,3,-6,9,-4,-2,-8,-4,8,2,-3,-9,9,3,-9,-6,-1,-6,-5,-10,-1,-2,1,2,4,-5,5,4,-6,-9,-5,-5,-3,-5]], dtype = "uint64")#candidate|2364|(3, 104)|const|uint64
const_2365 = relay.const([False,False,True,True,True,True,False,False,True,True,True,False,False,True,False,True,True,True,False,False,False,True,True,False,False,False,True,False,True,True,False,True,True,True,True,True,True,True,True,False,False,False,False,False,True,True,False,True,False,False,True,True,True,False,True,True,False,True,False,True,False,False,True,False,False,False,True,True,True,False,True,True,True,False,True,False,True,True,True,True,False,False,False,True,True,False,True,True,True,True,True,True,True,False,True,True,False,False,False,True,True,False,False,False,False,True,False,True,True,False,False,True,False,True,False,True,True,True,True,False,False,False,True,False,False,True,True,False,True,False,True,False,False,True,False,False,False,True,True,True,True,True,False,True,False,True,True,True,False,False,True,True,False,True,True,False,False,False,False,True,False,True,False,False,False,False,False,False,True,True,False,False,True,False,False,True,True,True,True,False,True,False,True,True,True,False,True,True,False,True,True,True,False,True,True,False,True,False,False,True,True,False,True,False,True,True,False,False,False,True,False,True,True,True,False,True,True,True,False,False,False,True,True,False,False,False,False,False,False,True,True,False,True,False,False,False,False,False,True,False,True,True,False,True,True,False,False,False,False,False,False,False,False,True,True,False,False,True,False,False,False,True,False,False,False,True,False,False,True,True,False,True,True,False,False,False,True,False,False,True,False,True,True,False,False,False,True,False,False,True,True,False,True,True,False,True,False,True,True,False,False,True,True,True,False,True,True,True,True,False,False,True,True,True,False,True,False,True,False,False,False,True,False,True,False,True,False,True,False,True,True,False,True,False,False,True,True,True,False,False,True,False,True,False,True,True,False,True,False,False,True,True,True,False,False,True,True,True,False,True,False,True,True,True,True,True,False,False,True,False,False,False,False,False,True,False,True,True,True,False,True,True,True,False,True,True,True,False,False,False,True,True,True,False,False,True,False,True,True,True,True,False,True,False,False,False,False,True,True,True,True,False,False,False,False,True,False,False,True,False,False,False,True,True,True,False,False,True,True,False,False,False,False,True,False,False,False,False,True,True,False,True,False,False,True,False,False,True,False,True,False,False,False,True,False,True,True,False,False,False,False,False,True,False,True,True,False,True,False,False,True,False,True,True,False,False,True,False,False,False,False,False,False,False,True,False,True,True,True,True,True,True,True,False,False,False,False,False,False,False,False,True,False,True,False,False,False,True,True,False,True,True,False,False,True,True,False,False,False,True,True,False,True,False,False,True,False,False,True,False,False,False,True,False,True,True,True,True,True,False,True,False,True,True,False,False,True,True,False,True,False,True,True,True,True,False,False,True,False,False,False,True,False,True,True,True,True,False,True,False,False,False,False,True,False,True,True,True,False,True,False,False,False,False,False,True,False,False,True,False,False,True,True,False,False,True,False,True,True,True,True,False,True,False,True,True,True,True,False,True,False,True,True,True,True,True,False,True,False,True,True,False,False,True,True,True,False,True,False,True,False,False,True,True,False,True,True,True,False,True,False,False,False,True,True,True,True,False,False,True,True,False,True,False,True,False,True,True,True,True,False,True,True,False,True,True,True,False,False,True,True,False,True,False,False,True,True,True,True,False,False,False,False,True,False,True,False,True,False,True,True,False,True,False,False,False,False,True,False,False,False,True,True,False,True,True,True,True,False,False,True,False,False,True,True,True,False,True,False,False,True,True,False,False,False,True,False,False,False,False,False,True,True,True,True,True,False,False,False,False,False,True,False,False,False,False,True,False,True,False,False,False,True,False,False,True,True,False,True,False,False,False,True,False,True,False,True,False,False,True,False,False,False,True,False,False,True,False,False,False,False,False,True,True,False,True,True,False,False,False,False,False,False,True,False,False,True,True,False,True,False,False,True,False,True,True,False,False,True,False,True,True,False,False,True,True,True,False,True,True,False,True,False,True,False,False,True,True,False,True,False,False,True,True,True,True,False,True,True,False,False,False,True,False,False,False,True,False,False,False,True,True,True,True,False,True,False,True,False,False,False,False,False,True,True,True,False,False,True,False,False,True,False,True,True,True,False,True,True,False,True,False,True,True,False,True,False,False,False,True,False,False,True,False,False,True,False,False,True,True,False,True,False,True,False,True,False,False,False,True,True,False,True,False,True,True,False,True,True,False,False,True,True,False,False,True,True,False,True,False,True,False,True,True,True,True,False,True,False,True,False,True,True,True,True,False,True,True,True,False,False,False,False,True,False,False,False,True,False,True,True,True,True,False,False,False,True,False,True,True,True,True,False,False,True,False,False,False,True,False,False,True,False,False,False,False,False,False,True,False,False,False,True,True,False,True,False,True,False,True,True,True,True,True,False,False,True,False,False,True,False,False,False,False,True,True,False,True,True,True,False,True,True,True,True,True,True,True,True,True,False,False,False,True,True,False,True,True,True,True,False,True,False,False,False,True,True,False,False,True,False,False,False,True,False,True,True,True,False,False,False,True,False,False,False,True,True,False,False,False,True,False,True,True,True,True,False,False,False,True,True,False,True,False,True,True,True,False,False,False,False,False,True,False,True,True,False,False,True,False,False,True,True,True,False,False,True,True,False,True,False,False,True,True,False,False,True,True,True,True,True,True,False,False,False,True,False,False,True,True,False,True,False,True,False,True,True,True,False,False,False,False,False,True,True,False,False,False,True,True,False,True,False,False,True,False,True,True,False,False,True,True,True,True,False,True,False,False,True,False,False,True,False,False,True,False,False,True,False,True,False,False,False,False,False,False,True,True,True,True,True,False,False,False,False,True,False,False,True,True,True,True,False,True,True,True,True,True,False,False,False,False,False,True,True,True,True,False,False,False,True,False,True,False,False,True,True,False,True,False,True,False,True,False,False,False,True,True,True,False,True,True,False,False,False,True,True,True,True,True,False,True,True,True,True,False,False,False,False,True,False,False,False,True,False,False,True,True,True,False,True,True,True,False,True,False,True,False,True,True,True,True,False,True,False,True,True,False,True,True,False,True,True,False,False,True,False,True,True,True,True,False,False,False,False,True,False,False,True,False,True,True,True,True,False,False,False,True,False,True,False,False,False,False,False,False,True,False,True,False,False,False,True,False,False,True,False,True,True,True,True,False,False,False,True,False,False,True,True,True,False,False,True,False,False,False,False,True,False,True,False,False,True,True,True,False,False,True,True,False,False,False,False,True,False,False,True,True,True,True,False,False,True,True,False,True,True,True,False,False,False,False,False,False,True,True,False,False,False,True,False,True,True,False,False,True,False,True], dtype = "bool")#candidate|2365|(1408,)|const|bool
call_2363 = relay.TupleGetItem(func_852_call(relay.reshape(const_2364.astype('uint64'), [312,]), relay.reshape(const_2365.astype('bool'), [1408,]), ), 4)
call_2366 = relay.TupleGetItem(func_855_call(relay.reshape(const_2364.astype('uint64'), [312,]), relay.reshape(const_2365.astype('bool'), [1408,]), ), 4)
func_1502_call = mod.get_global_var('func_1502')
func_1505_call = mutated_mod.get_global_var('func_1505')
call_2389 = relay.TupleGetItem(func_1502_call(relay.reshape(call_2351.astype('float32'), [12, 6, 8]), relay.reshape(const_2365.astype('bool'), [1408,]), ), 0)
call_2390 = relay.TupleGetItem(func_1505_call(relay.reshape(call_2351.astype('float32'), [12, 6, 8]), relay.reshape(const_2365.astype('bool'), [1408,]), ), 0)
output = relay.Tuple([bop_2318,call_2326,call_2331,var_2332,call_2341,call_2351,call_2354,call_2358,call_2363,const_2364,const_2365,call_2389,])
output2 = relay.Tuple([bop_2318,call_2327,call_2333,var_2332,call_2342,call_2352,call_2355,call_2359,call_2366,const_2364,const_2365,call_2390,])
func_2402 = relay.Function([var_2316,var_2317,var_2332,], output)
mod['func_2402'] = func_2402
mod = relay.transform.InferType()(mod)
mutated_mod['func_2402'] = func_2402
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2402_call = mutated_mod.get_global_var('func_2402')
var_2404 = relay.var("var_2404", dtype = "uint32", shape = (13, 9, 3))#candidate|2404|(13, 9, 3)|var|uint32
var_2405 = relay.var("var_2405", dtype = "uint32", shape = (13, 9, 3))#candidate|2405|(13, 9, 3)|var|uint32
var_2406 = relay.var("var_2406", dtype = "uint16", shape = (315,))#candidate|2406|(315,)|var|uint16
call_2403 = func_2402_call(var_2404,var_2405,var_2406,)
output = call_2403
func_2407 = relay.Function([var_2404,var_2405,var_2406,], output)
mutated_mod['func_2407'] = func_2407
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2132_call = mod.get_global_var('func_2132')
func_2133_call = mutated_mod.get_global_var('func_2133')
call_2414 = func_2132_call()
call_2415 = func_2132_call()
uop_2458 = relay.exp(call_2414.astype('float32')) # shape=(2145,)
uop_2460 = relay.exp(call_2415.astype('float32')) # shape=(2145,)
output = uop_2458
output2 = uop_2460
func_2467 = relay.Function([], output)
mod['func_2467'] = func_2467
mod = relay.transform.InferType()(mod)
mutated_mod['func_2467'] = func_2467
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2467_call = mutated_mod.get_global_var('func_2467')
call_2468 = func_2467_call()
output = call_2468
func_2469 = relay.Function([], output)
mutated_mod['func_2469'] = func_2469
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2227_call = mod.get_global_var('func_2227')
func_2228_call = mutated_mod.get_global_var('func_2228')
call_2480 = relay.TupleGetItem(func_2227_call(), 0)
call_2481 = relay.TupleGetItem(func_2228_call(), 0)
uop_2483 = relay.rsqrt(call_2480.astype('float64')) # shape=(12, 6, 8)
uop_2485 = relay.rsqrt(call_2481.astype('float64')) # shape=(12, 6, 8)
output = uop_2483
output2 = uop_2485
func_2487 = relay.Function([], output)
mod['func_2487'] = func_2487
mod = relay.transform.InferType()(mod)
mutated_mod['func_2487'] = func_2487
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2487_call = mutated_mod.get_global_var('func_2487')
call_2488 = func_2487_call()
output = call_2488
func_2489 = relay.Function([], output)
mutated_mod['func_2489'] = func_2489
mutated_mod = relay.transform.InferType()(mutated_mod)
var_2495 = relay.var("var_2495", dtype = "int8", shape = ())#candidate|2495|()|var|int8
var_2496 = relay.var("var_2496", dtype = "int8", shape = (4, 6, 3))#candidate|2496|(4, 6, 3)|var|int8
bop_2497 = relay.minimum(var_2495.astype('int8'), var_2496.astype('int8')) # shape=(4, 6, 3)
func_593_call = mod.get_global_var('func_593')
func_595_call = mutated_mod.get_global_var('func_595')
call_2513 = func_593_call()
call_2514 = func_593_call()
output = relay.Tuple([bop_2497,call_2513,])
output2 = relay.Tuple([bop_2497,call_2514,])
func_2516 = relay.Function([var_2495,var_2496,], output)
mod['func_2516'] = func_2516
mod = relay.transform.InferType()(mod)
mutated_mod['func_2516'] = func_2516
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2516_call = mutated_mod.get_global_var('func_2516')
var_2518 = relay.var("var_2518", dtype = "int8", shape = ())#candidate|2518|()|var|int8
var_2519 = relay.var("var_2519", dtype = "int8", shape = (4, 6, 3))#candidate|2519|(4, 6, 3)|var|int8
call_2517 = func_2516_call(var_2518,var_2519,)
output = call_2517
func_2520 = relay.Function([var_2518,var_2519,], output)
mutated_mod['func_2520'] = func_2520
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1337_call = mod.get_global_var('func_1337')
func_1338_call = mutated_mod.get_global_var('func_1338')
call_2535 = relay.TupleGetItem(func_1337_call(), 2)
call_2536 = relay.TupleGetItem(func_1338_call(), 2)
func_852_call = mod.get_global_var('func_852')
func_855_call = mutated_mod.get_global_var('func_855')
const_2538 = relay.const([9,7,-3,3,-3,3,-4,-3,-5,-2,-1,10,-6,-8,1,7,1,5,-9,8,-5,6,-3,4,7,2,2,4,4,-4,9,-4,-7,6,7,-8,6,-2,2,-8,3,-9,-1,-2,6,9,-9,-8,4,-10,8,3,-1,-5,-10,-4,-1,9,-7,-7,9,8,1,-4,-10,3,-6,1,1,10,7,6,6,-1,6,-6,8,-5,-2,3,5,7,2,9,-4,-7,-5,-2,-8,-6,5,-9,7,-9,3,10,-9,1,7,-7,1,3,-4,-8,9,7,5,-4,-2,-1,6,4,10,-7,7,7,5,-5,6,3,7,-9,8,7,6,-4,1,8,-5,-6,8,-2,5,3,-1,7,8,2,-9,5,-9,10,9,9,4,8,-1,4,-8,-9,5,8,-4,-1,-9,10,9,6,-9,-4,2,-4,2,9,7,8,-6,9,-5,2,-9,2,4,8,2,-8,-1,7,10,-3,8,1,8,-3,-10,-6,9,9,-5,9,-8,-4,-9,2,1,-6,-9,-2,-7,-9,-1,-8,-5,6,-3,-9,-1,-9,8,-8,9,9,-3,4,-5,6,7,6,10,-2,-6,3,-6,6,4,-4,-1,2,3,3,6,-3,3,3,-1,6,5,-5,-2,6,6,-2,4,-9,9,-6,3,-7,1,2,6,1,7,-4,-4,6,4,-7,1,7,9,-4,5,1,-3,9,-2,1,-4,-10,-7,10,-4,10,-2,5,10,-6,-3,10,1,-5,8,2,-3,10,-1,-9,-7,2,6,1,-9,1,-5,7,-10,6,-8,-10,3,1,4,10,-9,-1,10,-8,-10,-10,-2,10], dtype = "uint64")#candidate|2538|(312,)|const|uint64
const_2539 = relay.const([True,False,True,False,True,True,False,True,True,False,False,True,False,False,False,False,True,True,False,False,False,True,False,True,False,True,False,True,True,True,True,False,True,True,False,False,False,True,False,False,True,False,True,True,False,True,True,True,False,True,True,False,False,True,True,False,False,True,True,False,False,False,False,True,True,True,False,False,False,False,False,True,False,True,False,False,False,True,True,False,False,False,False,False,False,True,False,False,False,True,False,True,True,True,False,True,False,False,True,False,False,True,True,False,False,True,False,False,False,True,False,False,False,False,False,False,True,False,False,True,True,True,False,False,False,True,True,False,True,False,False,False,True,True,False,True,False,True,True,False,False,True,False,False,True,False,False,False,False,True,False,True,False,False,True,False,True,True,False,True,True,False,True,True,True,True,False,True,False,False,True,True,True,True,True,True,True,False,True,True,True,True,False,True,False,True,True,True,False,True,False,False,True,True,True,False,True,True,True,True,True,False,False,True,True,False,False,False,False,True,True,True,True,True,False,True,False,True,False,True,False,True,True,True,False,False,True,True,True,False,True,True,False,True,False,True,True,False,True,True,True,False,False,False,True,False,True,True,True,False,False,True,True,True,False,True,True,True,True,True,True,False,False,True,True,False,False,True,False,True,False,True,True,True,False,False,True,True,False,True,True,False,False,False,False,True,False,True,False,True,False,False,True,False,True,False,False,False,True,False,True,False,False,True,True,False,True,False,True,True,True,True,False,False,True,False,True,True,True,True,False,False,True,True,False,True,False,True,True,True,True,False,True,True,True,False,True,True,True,True,False,False,False,False,False,True,False,True,True,False,True,True,False,False,True,False,True,True,True,False,False,True,True,False,False,False,False,False,True,True,True,False,False,True,False,False,False,True,False,True,True,True,True,True,True,False,True,True,True,True,True,True,False,False,True,False,True,False,False,False,True,True,False,True,False,True,False,True,False,False,False,True,True,True,False,False,True,True,True,False,False,True,False,False,True,True,True,False,True,True,True,True,True,True,False,True,False,False,False,False,False,True,True,True,False,True,False,False,True,True,False,True,False,False,False,False,False,True,False,True,False,True,False,True,True,True,True,True,True,True,False,False,False,True,True,True,True,True,True,False,True,True,True,True,False,True,True,False,False,False,True,True,True,False,False,False,True,True,False,False,True,False,False,True,True,False,False,False,True,True,False,False,True,False,False,True,True,True,True,False,True,False,True,True,False,True,True,True,True,True,False,False,True,False,True,True,False,False,True,False,True,False,False,False,False,False,True,True,False,False,True,True,True,False,False,True,False,False,True,True,True,True,True,True,True,False,False,False,False,True,False,False,True,False,False,True,True,False,True,True,False,False,False,True,True,True,True,True,True,False,False,False,True,True,True,False,True,True,False,False,True,False,False,False,True,False,False,False,False,True,True,True,True,True,False,False,False,True,True,True,True,True,False,False,False,True,True,False,True,True,False,False,False,False,False,True,False,False,True,True,True,False,False,True,True,False,True,False,False,True,True,True,False,True,False,True,True,True,True,False,False,True,False,False,True,False,True,True,True,False,False,False,False,False,True,False,True,True,False,True,False,True,False,False,True,False,True,False,True,False,False,False,True,False,False,False,False,False,False,True,False,False,False,True,True,True,True,False,False,True,True,False,False,True,True,True,False,False,True,True,True,True,True,False,True,False,True,False,False,True,True,False,True,True,True,False,True,False,False,True,True,True,False,False,True,True,True,True,True,True,False,False,False,False,True,False,False,False,False,False,True,True,False,False,True,False,True,False,False,True,True,False,True,True,False,False,False,True,True,False,False,True,False,True,True,True,True,True,True,True,True,False,False,False,True,True,False,False,True,False,True,True,False,False,False,False,False,True,False,True,True,False,True,True,True,False,True,False,False,False,True,True,True,False,True,False,True,True,False,True,False,True,False,False,False,False,True,False,True,True,False,False,True,True,False,True,True,True,True,True,True,True,True,False,True,False,False,False,False,False,True,False,False,True,False,False,False,True,False,True,False,False,False,False,True,False,True,True,True,False,False,False,True,True,True,False,False,True,True,False,False,False,False,False,False,False,False,False,False,False,True,False,True,True,False,False,True,True,True,False,False,False,True,True,True,False,False,True,True,True,True,True,True,True,True,True,False,True,True,False,False,True,False,True,False,True,True,False,False,True,False,False,True,True,False,False,True,False,False,True,True,True,False,False,True,False,False,True,True,True,True,True,False,True,False,True,False,False,True,True,True,True,True,False,True,True,False,False,True,False,True,False,False,False,True,True,False,True,False,True,False,True,True,True,False,True,False,True,True,True,False,False,False,True,False,True,True,True,False,False,True,True,True,True,True,False,False,True,True,False,True,True,True,False,False,False,True,False,True,True,True,True,True,False,False,False,True,True,True,True,False,False,True,True,False,False,True,False,False,False,True,True,True,False,True,False,False,False,False,True,True,False,False,True,False,True,True,True,False,False,True,False,False,False,True,False,False,False,True,False,False,False,True,False,False,False,False,True,True,False,False,False,False,True,True,False,False,False,False,False,False,True,True,True,True,False,True,True,True,False,False,True,False,True,True,True,False,True,False,True,False,False,True,False,True,True,True,True,True,True,False,False,False,True,True,True,True,False,False,False,True,False,False,True,False,True,False,False,True,False,True,True,True,False,True,False,True,False,False,True,True,False,True,True,True,False,False,False,False,True,True,True,True,True,True,True,False,True,True,True,False,False,False,True,True,False,True,False,False,True,True,False,True,False,True,False,False,False,True,True,True,False,False,False,True,True,False,True,True,True,True,True,False,True,False,True,True,True,True,False,True,True,False,False,True,True,True,False,True,False,True,False,False,True,True,True,True,True,False,False,False,True,True,False,True,True,True,False,False,True,False,True,False,False,False,True,False,True,True,True,True,False,False,True,False,True,False,True,False,False,True,False,False,False,True,True,True,False,True,True,True,False,True,True,False,True,True,False,False,False,False,True,True,False,False,True,True,False,False,True,False,True,True,False,True,False,True,False,True,True,True,False,True,False,False,True,True,True,False,True,True,False,False,False,False,False,True,True,False,True,False,True,False,True,True,True,False,True,True,True,False,True,True,True,True,True,False,True,False,False,False,False,False,True,False,False,True,False,True,False,True,True,True,False,True,False,True,True,True,True,False,True,False,True,False,True,True,True,False,True,True,True,True,False,False,False,False,True,False,False,True,True,True,False,True,False,True,True,True,False,False,True,False,False,True,False,True,False], dtype = "bool")#candidate|2539|(1408,)|const|bool
call_2537 = relay.TupleGetItem(func_852_call(relay.reshape(const_2538.astype('uint64'), [312,]), relay.reshape(const_2539.astype('bool'), [1408,]), ), 5)
call_2540 = relay.TupleGetItem(func_855_call(relay.reshape(const_2538.astype('uint64'), [312,]), relay.reshape(const_2539.astype('bool'), [1408,]), ), 5)
output = relay.Tuple([call_2535,call_2537,const_2538,const_2539,])
output2 = relay.Tuple([call_2536,call_2540,const_2538,const_2539,])
func_2546 = relay.Function([], output)
mod['func_2546'] = func_2546
mod = relay.transform.InferType()(mod)
output = func_2546()
func_2547 = relay.Function([], output)
mutated_mod['func_2547'] = func_2547
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2132_call = mod.get_global_var('func_2132')
func_2133_call = mutated_mod.get_global_var('func_2133')
call_2559 = func_2132_call()
call_2560 = func_2132_call()
output = relay.Tuple([call_2559,])
output2 = relay.Tuple([call_2560,])
func_2568 = relay.Function([], output)
mod['func_2568'] = func_2568
mod = relay.transform.InferType()(mod)
mutated_mod['func_2568'] = func_2568
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2568_call = mutated_mod.get_global_var('func_2568')
call_2569 = func_2568_call()
output = call_2569
func_2570 = relay.Function([], output)
mutated_mod['func_2570'] = func_2570
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1545_call = mod.get_global_var('func_1545')
func_1547_call = mutated_mod.get_global_var('func_1547')
call_2571 = func_1545_call()
call_2572 = func_1545_call()
uop_2575 = relay.asin(call_2571.astype('float64')) # shape=(12, 6, 8)
uop_2577 = relay.asin(call_2572.astype('float64')) # shape=(12, 6, 8)
func_1694_call = mod.get_global_var('func_1694')
func_1696_call = mutated_mod.get_global_var('func_1696')
call_2580 = relay.TupleGetItem(func_1694_call(), 0)
call_2581 = relay.TupleGetItem(func_1696_call(), 0)
const_2583 = relay.const([[[-9,-3,4,-9,2,1,10,1],[-4,-1,10,-9,-4,5,-10,1],[9,-2,8,4,-3,-2,-2,-2],[-6,7,5,-10,-3,-6,7,-4],[-1,-3,-8,-1,-3,3,-5,-2],[-8,-8,-7,3,-3,-4,-6,1]],[[7,-6,-1,5,1,-9,-2,7],[2,-2,-4,-10,6,9,4,-7],[2,-7,10,6,1,8,-8,3],[10,10,2,1,6,8,-8,3],[10,-2,2,-4,3,6,6,-3],[7,-8,-7,-7,-7,-5,1,4]],[[9,-2,3,-4,5,-8,-1,7],[6,7,4,-6,-10,-7,-10,10],[6,2,7,6,8,-5,4,-9],[7,4,1,-4,3,-1,2,-4],[-5,-10,4,6,-7,-3,3,1],[-9,3,5,2,-7,-2,-4,1]],[[-3,-2,4,-9,9,4,-5,3],[-2,-5,-2,-6,9,1,-6,-5],[-1,6,-4,-8,8,-6,9,-6],[-4,9,-7,8,-4,-1,9,-9],[-2,-6,9,-3,8,-9,-9,-7],[5,2,10,2,-6,4,9,-6]],[[8,1,-9,-4,6,-1,6,9],[-3,-7,-10,9,-2,-3,-4,-5],[-4,10,3,-8,7,3,7,-7],[4,3,3,-1,-5,-5,3,3],[-6,-1,-9,7,8,9,3,-4],[-2,-2,1,9,8,-4,3,10]],[[-10,-6,10,5,3,-1,-4,3],[6,-2,-9,-10,4,-9,3,6],[-10,4,-8,-6,-3,-7,-4,4],[8,-6,6,5,1,-8,-3,10],[9,-3,-3,7,-8,4,7,-1],[-5,-3,4,-2,1,-1,-6,-8]],[[-5,9,-2,5,-1,1,6,-2],[-10,3,-2,-10,6,-7,-2,-5],[-8,4,-1,9,7,-9,-3,-5],[7,-8,2,-3,-9,9,7,-6],[-6,-6,-1,-8,-6,-1,-9,5],[-4,-6,1,3,2,-9,5,6]],[[10,-10,-7,-7,-7,-4,-7,-2],[-10,-7,10,2,1,-10,1,-10],[8,-9,-8,7,-9,2,10,8],[4,2,5,-3,7,5,-9,-6],[4,-3,-4,-8,3,-10,3,2],[3,-1,-8,-7,8,-3,-6,6]],[[-4,2,9,-2,9,-3,10,-2],[-9,-1,9,-4,-9,-6,5,5],[-10,1,9,2,-5,-4,10,8],[-1,10,9,7,-2,5,4,1],[8,-3,-3,-9,-8,5,-9,9],[4,-9,5,10,-6,7,4,-4]],[[-7,-3,10,1,3,7,-1,-3],[8,-7,-8,10,-2,6,4,10],[6,4,-3,5,-2,-1,3,-7],[6,5,9,-9,-4,-8,-4,-10],[2,-8,10,5,8,-5,10,3],[6,-9,3,7,-3,-6,3,-7]],[[9,-2,-7,-10,-2,7,9,-9],[5,-1,6,-8,4,3,-1,4],[6,-10,4,-9,5,10,3,8],[-7,-10,8,1,-3,1,7,-5],[-3,5,3,6,9,3,-5,-1],[1,-5,-1,-2,3,8,9,2]],[[-6,-7,-2,-8,-9,4,-1,6],[8,10,-8,-2,6,-2,3,6],[4,8,-6,-6,5,-1,-4,-8],[-6,2,5,-6,5,-5,-3,-8],[6,-2,10,9,7,4,5,-6],[4,-7,-3,9,3,6,5,-3]]], dtype = "int8")#candidate|2583|(12, 6, 8)|const|int8
bop_2584 = relay.subtract(call_2571.astype('int64'), relay.reshape(const_2583.astype('int64'), relay.shape_of(call_2571))) # shape=(12, 6, 8)
bop_2587 = relay.subtract(call_2572.astype('int64'), relay.reshape(const_2583.astype('int64'), relay.shape_of(call_2572))) # shape=(12, 6, 8)
func_2227_call = mod.get_global_var('func_2227')
func_2228_call = mutated_mod.get_global_var('func_2228')
call_2588 = relay.TupleGetItem(func_2227_call(), 0)
call_2589 = relay.TupleGetItem(func_2228_call(), 0)
output = relay.Tuple([uop_2575,call_2580,bop_2584,call_2588,])
output2 = relay.Tuple([uop_2577,call_2581,bop_2587,call_2589,])
func_2599 = relay.Function([], output)
mod['func_2599'] = func_2599
mod = relay.transform.InferType()(mod)
mutated_mod['func_2599'] = func_2599
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2599_call = mutated_mod.get_global_var('func_2599')
call_2600 = func_2599_call()
output = call_2600
func_2601 = relay.Function([], output)
mutated_mod['func_2601'] = func_2601
mutated_mod = relay.transform.InferType()(mutated_mod)
const_2624 = relay.const([[[-1.592369,-5.627497,8.592257,9.411384,3.822496],[3.522853,2.612521,4.263680,-2.585094,-3.562175],[-9.349483,-6.036554,-7.382225,-5.577026,4.401902],[9.177496,0.180649,6.822178,0.739778,0.228259],[9.170815,-5.152706,0.614576,4.673771,-4.312960],[-7.272426,-3.329189,-5.975746,1.448572,-0.849307],[-5.872081,-0.761830,0.225092,-2.343635,4.061855],[2.024044,6.160735,7.219916,-0.579732,-3.639505],[-5.480911,4.216454,8.981028,7.865749,8.104150],[5.350537,5.248513,4.644828,5.677971,1.167934],[1.886912,-3.346715,3.006176,9.750558,-5.261186],[-1.222135,6.715663,3.743078,5.586786,9.977418],[-3.279919,2.075286,0.466384,7.302053,-4.778794],[3.067182,2.334695,-5.487306,1.131890,-7.383497],[-6.074321,-1.180260,8.751673,-4.020106,-6.782150],[4.122251,3.289702,-9.406978,4.309834,0.999960]],[[3.487044,-0.417759,-4.591820,6.595085,-4.928671],[4.755799,-5.944275,-1.374944,1.371340,7.663645],[3.235677,9.019850,8.858758,2.302043,0.281871],[-1.881544,0.021250,3.967787,-8.763874,5.682398],[8.035871,4.654538,-1.642736,7.200107,-9.385301],[6.671296,5.367467,-0.952316,-9.263885,0.767602],[8.543583,-0.629331,-6.825200,-1.085716,-7.207458],[-8.177767,2.827006,-2.108587,9.201171,7.525102],[-5.842407,0.575648,8.922466,-8.693240,6.024294],[6.189544,6.071643,0.204317,-1.499833,-4.299229],[8.922275,-9.176827,-2.866956,-2.267605,-1.390948],[-0.568125,-0.449966,-4.818761,8.298214,-0.430595],[-4.412557,2.717070,5.815900,-2.679474,4.489788],[4.713222,1.602418,7.935106,-5.713408,9.025536],[5.734173,0.766418,-2.085184,-5.327905,-2.642820],[-3.229409,-8.384309,-8.969869,7.654545,0.393125]],[[-2.052711,4.350094,-5.193139,8.742871,9.064032],[8.423080,-5.748043,-5.497836,-6.115279,4.484621],[5.588055,-9.543149,7.355996,-1.014163,3.244683],[6.715588,-7.901426,8.724034,9.145388,3.653417],[4.823355,-9.441785,0.174542,-8.183098,4.725936],[-3.587088,-8.077189,-6.828951,6.320282,-5.926941],[4.966946,-9.194398,-0.102224,-0.633127,3.518036],[-3.714709,7.518573,-6.109321,-1.120957,-8.879996],[-2.407496,-2.227466,2.803049,3.279200,6.402154],[4.394252,1.071244,-2.645865,6.233802,-3.676643],[-3.212760,-6.282793,9.557137,-8.613294,1.569699],[0.781851,2.362868,-6.854787,-6.402249,-2.278618],[3.787806,-3.074422,2.172666,9.978189,-6.470104],[5.284128,-3.032993,-9.057838,2.768577,3.157395],[7.019972,-4.416490,4.192621,-1.093230,-6.563504],[8.852792,-8.394129,0.590911,8.025376,0.768424]],[[-7.831576,-8.189982,-3.662941,-0.026456,-6.360775],[-3.209943,-9.327821,-3.263522,-5.008538,7.212191],[4.315350,-8.546608,5.816356,-9.048760,-7.207711],[-5.481344,-6.839582,-5.424085,7.109336,-6.982214],[-6.668729,1.191852,-9.828456,-8.011925,-5.014609],[1.325449,5.978576,-8.634531,8.646224,3.283723],[-1.688072,-3.042140,-9.102617,6.206997,9.035547],[7.955581,-6.071759,-8.719031,6.088850,4.023548],[7.438892,0.624346,5.490613,0.444451,-2.897586],[-6.603986,-5.938662,-4.563831,7.119946,-3.174624],[1.314288,7.832216,-1.530999,-9.432502,-7.506569],[-1.622667,2.801152,-1.673556,7.708891,8.181592],[-4.351165,-2.613296,1.782052,-6.095545,-6.717813],[6.444006,-5.797672,0.522015,6.556778,-3.704529],[-5.878527,5.917219,7.653425,-4.415172,0.137099],[-4.544355,7.653280,-0.674592,6.518842,-3.256830]],[[3.378974,-1.749694,-2.129225,-1.920720,9.597347],[7.475408,1.487257,9.883879,3.721329,4.302027],[-2.963907,-7.662845,-1.337070,-5.252668,1.557492],[3.938446,-4.705324,9.819887,-5.395611,-2.500932],[-6.604443,8.197082,-0.333260,-0.136052,-6.648441],[-7.164019,-6.645082,-2.967618,8.113275,-5.385343],[6.633544,8.331456,0.936591,-6.992536,2.253430],[-6.284464,0.813744,6.288870,-6.954004,3.591938],[-7.921743,4.139967,-0.081697,5.950551,-6.440052],[1.579909,-8.067179,-8.456933,2.224366,5.989704],[5.318988,-8.560714,9.909535,2.849640,-8.904142],[-2.536221,-9.386772,4.499100,0.501858,6.276189],[-8.889413,-7.566366,7.162943,2.056160,7.090823],[9.068191,-6.769445,1.257330,-8.845226,7.393481],[3.400192,9.888430,-9.066117,0.128403,2.035960],[4.046382,5.639441,-3.894985,-2.290606,6.008982]],[[-3.188334,9.063093,-7.721131,-1.007861,9.243141],[1.870916,9.718582,-8.370737,4.111323,-6.508739],[-3.030024,4.165083,7.323757,7.709802,2.348205],[0.768103,7.130809,-2.742546,-5.752802,-7.752739],[-9.570124,-7.727765,-8.588719,9.307982,-1.370163],[7.937154,-4.153242,-2.100981,-2.777306,8.452317],[-6.248935,-7.912039,5.673179,-5.928720,2.926042],[9.888335,-4.094549,-1.598897,4.446520,6.876700],[2.543286,-3.802719,8.292534,6.680271,-8.504346],[4.205419,1.869405,8.878572,-4.804902,-0.871226],[-1.007090,0.062006,-0.412990,-2.698877,-4.317407],[6.111195,-2.507137,1.652881,8.602532,1.187405],[8.476536,-5.295053,-8.081740,-3.473148,8.161171],[7.215553,-5.918596,9.021823,-5.754025,-1.859539],[1.002696,-0.777808,-9.634611,1.133193,-6.133486],[4.265236,7.221661,-0.765905,9.276443,-0.080571]],[[-5.947998,0.914952,-4.303859,2.015664,-7.549971],[0.983408,8.361914,5.658232,9.031949,6.429385],[0.523520,-8.012891,4.364620,4.913502,8.456511],[2.044382,2.821069,-0.813431,3.198220,-7.617766],[-5.334728,1.937970,7.510778,0.425078,7.718310],[-0.217423,7.768497,8.878674,2.694659,-8.263259],[-1.268728,-9.665392,-0.200036,-5.756470,-6.126765],[9.497051,-8.514656,7.520027,9.064048,8.112207],[3.523591,1.836282,-2.245874,4.640031,6.542644],[-8.941702,-1.383536,4.549129,1.725684,-6.829603],[-2.649078,-8.785689,4.007611,-3.489929,-5.626747],[3.605345,7.244871,3.116703,-3.273026,-0.606300],[-2.764702,9.418402,9.326407,5.699432,-8.774980],[8.939687,6.923602,-6.676024,3.629814,7.294978],[-5.604579,6.588961,6.399610,5.271586,-2.641712],[-3.274872,-3.500025,6.425667,-2.443494,-7.440755]],[[-6.244046,-0.739045,-6.959727,-6.539066,1.590695],[0.282849,6.641646,-2.812068,7.747301,-3.036142],[7.382760,-9.648343,-8.926757,1.479080,-9.878207],[-7.209980,7.018478,-4.659069,3.368422,1.473079],[-9.174058,-5.144186,-0.226530,4.087981,-2.272644],[3.492968,-7.478070,4.928178,4.897947,1.297548],[-7.836953,-4.025500,-7.463592,4.580296,-7.480576],[7.299797,-5.769987,-4.631302,-3.129545,-2.967433],[0.567769,-5.756094,-5.945446,-2.880512,-7.155754],[2.867446,0.051687,0.528655,3.102709,3.794529],[2.268670,-4.504007,-4.776494,-0.103019,-3.920824],[8.758047,-5.490193,7.661667,1.093307,-4.938167],[-1.876392,6.600299,-5.110470,9.795871,2.877515],[0.104726,4.987723,-3.243322,-1.950641,-3.000527],[-6.687883,-1.742954,0.774365,4.126584,8.208888],[5.638497,4.607779,-6.296478,6.209178,9.540054]],[[-1.500964,4.281731,1.253035,-1.284545,6.263912],[-8.657355,-2.263885,-4.162144,0.410345,0.670610],[-8.402650,-4.271272,2.117230,2.476298,-6.846527],[8.062539,5.278476,0.479410,4.240611,-5.601024],[-4.372505,-4.062914,7.245029,2.666124,-8.960259],[6.834933,3.537024,-3.501131,-1.274648,7.505954],[1.074946,-8.135725,9.511622,9.596507,7.157140],[1.683676,-3.764236,-6.809581,3.007536,-9.902106],[-3.517351,-4.039842,5.208022,-4.075112,-2.643721],[8.652743,6.725060,-2.276515,7.928491,4.798694],[7.416983,-4.678732,-6.716994,2.854921,-1.336241],[9.659444,5.903468,-3.780615,-0.688268,7.851895],[-4.751530,-5.110222,-2.393881,5.472020,-8.015313],[-0.566481,4.318703,-4.341583,7.011730,0.171324],[6.042779,1.205127,-4.439806,-7.469849,-1.758747],[8.570106,-5.928561,-0.353325,-7.206932,-3.884073]],[[-1.869181,-8.987167,7.671788,8.819522,-6.647402],[5.188964,2.181025,9.992048,-6.058378,6.301958],[3.441445,-2.433479,-6.966363,-1.976877,-0.400146],[-8.670733,1.596110,-3.045586,1.869709,1.073736],[0.545369,5.314969,1.478575,-2.418030,-5.035112],[5.371928,4.202664,1.364893,-5.744439,-4.240922],[-5.033018,-0.336718,-0.093100,3.954423,-8.927777],[7.532081,4.998320,7.354724,1.851343,-5.121090],[6.218338,7.104221,4.981059,-9.007970,-8.439476],[-8.134632,2.369385,-3.128529,-2.873220,7.872684],[2.135885,-1.285351,-6.228231,9.354572,6.287537],[0.363841,0.293240,4.324485,-7.583949,1.203052],[1.735774,5.258826,-1.062043,-6.277365,0.377189],[7.975908,-8.966033,9.206904,5.201387,9.497996],[9.854905,8.769984,5.467566,5.909564,2.010707],[8.405572,3.205677,9.874684,-2.585815,-2.644455]]], dtype = "float32")#candidate|2624|(10, 16, 5)|const|float32
uop_2625 = relay.atan(const_2624.astype('float32')) # shape=(10, 16, 5)
output = uop_2625
output2 = uop_2625
func_2627 = relay.Function([], output)
mod['func_2627'] = func_2627
mod = relay.transform.InferType()(mod)
mutated_mod['func_2627'] = func_2627
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2627_call = mutated_mod.get_global_var('func_2627')
call_2628 = func_2627_call()
output = call_2628
func_2629 = relay.Function([], output)
mutated_mod['func_2629'] = func_2629
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2227_call = mod.get_global_var('func_2227')
func_2228_call = mutated_mod.get_global_var('func_2228')
call_2726 = relay.TupleGetItem(func_2227_call(), 0)
call_2727 = relay.TupleGetItem(func_2228_call(), 0)
func_765_call = mod.get_global_var('func_765')
func_767_call = mutated_mod.get_global_var('func_767')
const_2732 = relay.const([[-3.534413,-1.554418,3.463641,9.836569,8.153520,7.652457,-8.840019,6.585451,-6.047015,-0.161060,-9.839171,-9.142826,-3.648959,7.884715,0.596828,6.265274,2.103222,4.712957,4.077404,-9.581003,5.275496,-2.361412,-9.891282,3.324309,9.720831,-0.937715,5.799579,-8.220426,9.055650,-9.079620,7.457727,-5.841885,-6.443301,6.494531,8.090234,-7.919858,0.516458,-4.946443,-4.222149,-6.648368,5.774900,2.536875,5.437345,2.213140,-3.195202,-1.030468,3.589388,-0.983205,-2.336805,4.451155,4.742718,7.020233,2.786829,-8.080508,0.225994,8.605218,-8.359011,-5.039987,-9.796037,-2.669140,5.799441,-3.486049,6.015230,-8.128584,-7.620581,5.250134,2.609984,-8.870725,-1.279490,3.474168,6.395850,2.635762,9.595430,2.909309,8.580998,-1.546185,-7.761443,5.895275,6.230553,-1.610638,2.972512,-5.602184,-4.613653,4.893577,5.193017,-2.186305,3.347246,-3.056275,4.324594,-4.549504,4.182340,-6.350853,5.856059,-1.444310,6.897249,-2.348262,-4.146526,-1.469805,5.328957,-5.970187,-5.246344,9.611730,-8.793786,-8.267440,-3.676786,-5.014567,-2.908232,6.237440,-8.787461,-9.637886,-3.722326,-8.678108,3.299661,7.872299,1.830060,-4.286857,0.992159,5.920019,3.884656,7.760804,2.043407,-9.295399,-6.338648,4.317615,2.476175,6.250625,4.149082,-8.012199,-4.058350,8.993431,6.860959,9.410311,-0.826319,-8.642983,-0.431542,1.765681,2.956938,0.652615,6.164766,-1.868523,6.131919,1.308986,-4.142627,8.967761,2.375031,-1.217219,-9.585356,3.383968,-6.598871,4.412489,-7.138370,-2.892124,-3.945239,7.104446,4.309668,-8.566741,5.609226,6.396973,8.799252,-0.910668,3.709013,-1.564729,-8.899331,-6.222260,1.759625,-1.250276,-3.443910,-1.483076,-8.982572,3.248167,1.460030,-1.004669,5.592211,-2.722116,2.668609,6.407870,3.973864,-1.311503,-0.747362,1.649788,-6.056448,6.794488,-0.297017,0.045718,6.391987,-4.841175,-8.924337,-1.871911,-4.541736,3.165009,8.927868,7.757418,-3.327545,4.104812,-9.818143,-3.048782,-2.208641,-0.872703,5.117201,3.840168,-0.012146,-4.837216,8.277927,-0.477591,6.259785,9.097109,-5.881598,-3.870488,-8.139622,8.443064,-3.202986,-8.676109,8.208295,7.873690,-9.081817,-4.489818,2.922697,-3.692500,4.915101,-6.571639,-5.733135,1.875956,-4.558621,9.178372,4.789170,-5.762948,-5.539246,-8.295613,5.997872,0.097657,4.636452,-7.599144,-3.789742,0.611554,3.689624,-9.469327,8.615622,-4.750088,5.983022,-4.124049,8.042434,-7.212575,0.465471,2.531309,5.792455,4.251635,-9.480022,6.386297,-5.173487,-9.021545,-4.048732,6.344172,4.608097,-2.358131,3.720420,0.369861,9.337063,-3.226585,5.460892,4.662376,-9.370536,8.204472,-7.230263,3.071915,2.394524,-6.123478,8.721124,0.442809,5.737640,3.552346,-8.142300,2.044748,0.131207,6.716130,-5.867245,9.769831,2.919645,8.760102,5.782054,-1.674411],[4.478824,-0.110270,-4.006749,3.525450,8.237249,-5.083710,5.544811,1.214943,5.031127,4.063745,8.323326,3.945825,3.190631,-0.864703,2.484037,9.616714,9.518280,3.251132,0.577638,-0.985576,-3.566007,4.625293,-6.155508,-7.970857,8.187093,8.505134,-2.073797,5.234179,-0.563882,-6.156045,-2.514654,-7.917915,7.599418,0.624570,-6.939727,-1.261370,-6.117385,-0.135476,-1.047786,-3.539237,2.433777,5.053204,-0.645885,1.386397,-7.913590,6.070806,-1.184333,6.349048,8.365594,-0.362464,-8.294789,-0.849857,-9.946308,8.335326,5.794452,-9.169183,-5.736269,-9.960302,-1.749880,0.120880,7.328509,2.971129,-9.290863,-7.693083,8.874721,9.618318,5.604783,-8.431348,-1.388808,-0.618026,-3.921890,-1.230417,-3.993582,3.372127,1.466145,-2.503438,4.353315,-6.016189,-8.123235,-2.589632,4.994985,4.364133,4.585110,0.278649,6.223779,-8.259608,-3.248888,-5.168148,4.494593,-4.289464,-6.836777,-4.571573,-5.359963,6.936379,4.000448,1.881281,2.518788,7.993094,-3.807676,8.195917,-8.455114,8.701596,-1.755942,-9.897037,-9.602386,-1.649120,1.839796,-0.526818,7.849882,-4.866322,6.015853,-9.445343,-0.374365,-5.413884,-4.185946,-6.033677,2.132413,4.521465,-6.896030,0.497704,-8.920024,6.174900,-9.231411,-5.189585,-1.908099,-9.328584,-7.766559,-2.348293,-6.323203,0.827041,-9.711377,-5.948065,-2.315483,-2.717711,1.140844,7.378352,0.946934,8.070076,-3.357303,-4.939915,-3.135326,6.116822,8.599035,1.610416,-0.325163,-7.644336,-0.032507,-7.096655,-8.449655,9.189579,-3.327918,-7.530418,-3.539805,-8.355076,7.915881,9.276595,0.380953,-2.417093,-3.133584,4.715091,-5.603640,-1.857338,-9.601278,4.051226,1.380378,-6.846428,6.929202,3.578747,-1.471875,9.088581,-4.435924,9.407758,8.133583,-5.143957,7.430674,-8.840996,8.014418,-4.457444,5.729529,4.124757,1.535959,-9.557840,-0.742376,-8.362061,5.092925,-3.405596,-2.272276,-0.254617,8.893958,1.070349,-4.190445,-5.614412,-0.066544,0.675580,8.585508,-1.730834,-2.810697,7.861422,0.401283,6.651032,8.359332,-2.878932,5.626803,1.883620,-9.062838,6.789424,-7.278254,-0.030605,-0.131608,-9.809164,-7.584908,-1.612637,-5.132351,2.507676,3.697477,-5.110597,-4.098545,-9.888602,7.916929,-2.944812,4.011249,-7.442349,-3.538846,-0.051755,-4.014208,-0.673800,-9.691406,0.116342,-1.035197,-7.389755,3.805892,5.078945,2.960343,8.274549,9.928545,-7.358924,8.089965,5.755334,-9.377884,3.725074,-7.767447,4.149227,-2.552417,0.262609,-9.661919,5.653768,1.828832,4.572713,-6.159494,0.369342,5.418971,-8.216779,7.469223,-4.851612,-9.569234,-6.329018,0.728139,6.690469,0.839514,-4.148994,-5.012828,5.965535,-2.369158,-7.946116,-1.840026,6.765398,-6.107397,-4.121316,9.827263,5.052321,-7.137133,-6.469779,7.516290,-2.832907,5.022177,-6.767740,-1.847563,4.380648,1.292838,6.793109]], dtype = "float64")#candidate|2732|(2, 280)|const|float64
call_2731 = relay.TupleGetItem(func_765_call(relay.reshape(const_2732.astype('float64'), [560,])), 1)
call_2733 = relay.TupleGetItem(func_767_call(relay.reshape(const_2732.astype('float64'), [560,])), 1)
output = relay.Tuple([call_2726,call_2731,const_2732,])
output2 = relay.Tuple([call_2727,call_2733,const_2732,])
func_2739 = relay.Function([], output)
mod['func_2739'] = func_2739
mod = relay.transform.InferType()(mod)
output = func_2739()
func_2740 = relay.Function([], output)
mutated_mod['func_2740'] = func_2740
mutated_mod = relay.transform.InferType()(mutated_mod)
const_2741 = relay.const([[[-3.709513,0.002041,0.181555,-8.498557,9.934670,-2.934173,9.127590,9.163676,7.511624,-3.238551,9.772784,-0.142296,-3.084546,-2.394236],[-2.946474,0.471868,5.682745,-3.733211,-0.005824,-9.995385,-4.713555,-4.379181,5.478383,5.062033,9.915206,-9.348286,8.007693,-1.141688],[0.509302,-2.986358,-9.083858,-4.834800,-9.957881,0.753861,8.320146,8.070947,-8.518861,1.175807,6.792496,5.703071,-7.061745,-5.470088],[-2.323659,8.422821,9.210631,2.402953,2.683150,9.344156,-3.710784,-1.991891,8.465857,2.628143,-1.788547,0.989231,4.408467,-6.246845],[-0.403861,2.697581,2.486327,-8.404176,9.357867,8.820044,0.489993,-4.290574,4.470038,9.525771,-7.728557,-7.098322,3.946170,4.294897],[-2.992891,-1.459193,-1.351392,6.999993,-8.567596,-8.669519,7.702847,8.624781,-7.837197,-1.254102,-8.396714,-8.777522,-7.727070,6.608571],[-2.604297,4.942020,0.416795,-7.134882,8.971043,4.777667,9.628760,9.917816,8.580552,-5.301236,3.499261,7.663210,-7.247829,-5.683196],[6.931655,2.740599,-8.758426,-3.126517,-6.840166,3.711803,5.913284,-3.480908,-2.229265,9.226456,-3.898624,-5.328724,5.042538,4.670967],[4.312032,-7.597666,-2.372036,3.546051,-4.323928,-3.271022,-9.203360,5.081772,-3.607995,-4.061110,8.285170,6.079246,8.654955,7.191160]]], dtype = "float32")#candidate|2741|(1, 9, 14)|const|float32
const_2742 = relay.constdtype = "float32")#candidate|2742|(13, 9, 14)|const|float32
bop_2743 = relay.floor_mod(const_2741.astype('float32'), const_2742.astype('float32')) # shape=(13, 9, 14)
func_1337_call = mod.get_global_var('func_1337')
func_1338_call = mutated_mod.get_global_var('func_1338')
call_2749 = relay.TupleGetItem(func_1337_call(), 3)
call_2750 = relay.TupleGetItem(func_1338_call(), 3)
bop_2761 = relay.not_equal(const_2742.astype('bool'), const_2741.astype('bool')) # shape=(13, 9, 14)
uop_2764 = relay.atanh(call_2749.astype('float32')) # shape=(11, 15, 13)
uop_2766 = relay.atanh(call_2750.astype('float32')) # shape=(11, 15, 13)
func_1227_call = mod.get_global_var('func_1227')
func_1228_call = mutated_mod.get_global_var('func_1228')
call_2768 = relay.TupleGetItem(func_1227_call(), 0)
call_2769 = relay.TupleGetItem(func_1228_call(), 0)
output = relay.Tuple([bop_2743,bop_2761,uop_2764,call_2768,])
output2 = relay.Tuple([bop_2743,bop_2761,uop_2766,call_2769,])
func_2775 = relay.Function([], output)
mod['func_2775'] = func_2775
mod = relay.transform.InferType()(mod)
mutated_mod['func_2775'] = func_2775
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2775_call = mutated_mod.get_global_var('func_2775')
call_2776 = func_2775_call()
output = call_2776
func_2777 = relay.Function([], output)
mutated_mod['func_2777'] = func_2777
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1545_call = mod.get_global_var('func_1545')
func_1547_call = mutated_mod.get_global_var('func_1547')
call_2778 = func_1545_call()
call_2779 = func_1545_call()
func_1694_call = mod.get_global_var('func_1694')
func_1696_call = mutated_mod.get_global_var('func_1696')
call_2781 = relay.TupleGetItem(func_1694_call(), 0)
call_2782 = relay.TupleGetItem(func_1696_call(), 0)
bop_2784 = relay.logical_or(call_2781.astype('bool'), relay.reshape(call_2778.astype('bool'), relay.shape_of(call_2781))) # shape=(12, 6, 8)
bop_2787 = relay.logical_or(call_2782.astype('bool'), relay.reshape(call_2779.astype('bool'), relay.shape_of(call_2782))) # shape=(12, 6, 8)
func_2627_call = mod.get_global_var('func_2627')
func_2629_call = mutated_mod.get_global_var('func_2629')
call_2788 = func_2627_call()
call_2789 = func_2627_call()
output = relay.Tuple([bop_2784,call_2788,])
output2 = relay.Tuple([bop_2787,call_2789,])
func_2790 = relay.Function([], output)
mod['func_2790'] = func_2790
mod = relay.transform.InferType()(mod)
output = func_2790()
func_2791 = relay.Function([], output)
mutated_mod['func_2791'] = func_2791
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1638_call = mod.get_global_var('func_1638')
func_1639_call = mutated_mod.get_global_var('func_1639')
call_2816 = relay.TupleGetItem(func_1638_call(), 0)
call_2817 = relay.TupleGetItem(func_1639_call(), 0)
output = relay.Tuple([call_2816,])
output2 = relay.Tuple([call_2817,])
func_2818 = relay.Function([], output)
mod['func_2818'] = func_2818
mod = relay.transform.InferType()(mod)
output = func_2818()
func_2819 = relay.Function([], output)
mutated_mod['func_2819'] = func_2819
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2282_call = mod.get_global_var('func_2282')
func_2283_call = mutated_mod.get_global_var('func_2283')
call_2828 = relay.TupleGetItem(func_2282_call(), 2)
call_2829 = relay.TupleGetItem(func_2283_call(), 2)
func_2775_call = mod.get_global_var('func_2775')
func_2777_call = mutated_mod.get_global_var('func_2777')
call_2846 = relay.TupleGetItem(func_2775_call(), 2)
call_2847 = relay.TupleGetItem(func_2777_call(), 2)
output = relay.Tuple([call_2828,call_2846,])
output2 = relay.Tuple([call_2829,call_2847,])
func_2856 = relay.Function([], output)
mod['func_2856'] = func_2856
mod = relay.transform.InferType()(mod)
output = func_2856()
func_2857 = relay.Function([], output)
mutated_mod['func_2857'] = func_2857
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1009_call = mod.get_global_var('func_1009')
func_1011_call = mutated_mod.get_global_var('func_1011')
call_2936 = func_1009_call()
call_2937 = func_1009_call()
func_1032_call = mod.get_global_var('func_1032')
func_1034_call = mutated_mod.get_global_var('func_1034')
call_2944 = relay.TupleGetItem(func_1032_call(), 1)
call_2945 = relay.TupleGetItem(func_1034_call(), 1)
output = relay.Tuple([call_2936,call_2944,])
output2 = relay.Tuple([call_2937,call_2945,])
func_2946 = relay.Function([], output)
mod['func_2946'] = func_2946
mod = relay.transform.InferType()(mod)
mutated_mod['func_2946'] = func_2946
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2946_call = mutated_mod.get_global_var('func_2946')
call_2947 = func_2946_call()
output = call_2947
func_2948 = relay.Function([], output)
mutated_mod['func_2948'] = func_2948
mutated_mod = relay.transform.InferType()(mutated_mod)
const_2961 = relay.const([[[5.532859]],[[1.311183]],[[5.189630]],[[9.220902]],[[8.581281]],[[9.390757]],[[0.347377]],[[6.522123]],[[1.362052]]], dtype = "float32")#candidate|2961|(9, 1, 1)|const|float32
uop_2962 = relay.atan(const_2961.astype('float32')) # shape=(9, 1, 1)
func_2546_call = mod.get_global_var('func_2546')
func_2547_call = mutated_mod.get_global_var('func_2547')
call_2973 = relay.TupleGetItem(func_2546_call(), 1)
call_2974 = relay.TupleGetItem(func_2547_call(), 1)
func_2739_call = mod.get_global_var('func_2739')
func_2740_call = mutated_mod.get_global_var('func_2740')
call_2986 = relay.TupleGetItem(func_2739_call(), 0)
call_2987 = relay.TupleGetItem(func_2740_call(), 0)
output = relay.Tuple([uop_2962,call_2973,call_2986,])
output2 = relay.Tuple([uop_2962,call_2974,call_2987,])
func_2989 = relay.Function([], output)
mod['func_2989'] = func_2989
mod = relay.transform.InferType()(mod)
output = func_2989()
func_2990 = relay.Function([], output)
mutated_mod['func_2990'] = func_2990
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2818_call = mod.get_global_var('func_2818')
func_2819_call = mutated_mod.get_global_var('func_2819')
call_3075 = relay.TupleGetItem(func_2818_call(), 0)
call_3076 = relay.TupleGetItem(func_2819_call(), 0)
output = relay.Tuple([call_3075,])
output2 = relay.Tuple([call_3076,])
func_3083 = relay.Function([], output)
mod['func_3083'] = func_3083
mod = relay.transform.InferType()(mod)
mutated_mod['func_3083'] = func_3083
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3083_call = mutated_mod.get_global_var('func_3083')
call_3084 = func_3083_call()
output = call_3084
func_3085 = relay.Function([], output)
mutated_mod['func_3085'] = func_3085
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2467_call = mod.get_global_var('func_2467')
func_2469_call = mutated_mod.get_global_var('func_2469')
call_3113 = func_2467_call()
call_3114 = func_2467_call()
output = relay.Tuple([call_3113,])
output2 = relay.Tuple([call_3114,])
func_3163 = relay.Function([], output)
mod['func_3163'] = func_3163
mod = relay.transform.InferType()(mod)
mutated_mod['func_3163'] = func_3163
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3163_call = mutated_mod.get_global_var('func_3163')
call_3164 = func_3163_call()
output = call_3164
func_3165 = relay.Function([], output)
mutated_mod['func_3165'] = func_3165
mutated_mod = relay.transform.InferType()(mutated_mod)
var_3207 = relay.var("var_3207", dtype = "float64", shape = (2, 4, 7))#candidate|3207|(2, 4, 7)|var|float64
uop_3208 = relay.sin(var_3207.astype('float64')) # shape=(2, 4, 7)
func_950_call = mod.get_global_var('func_950')
func_953_call = mutated_mod.get_global_var('func_953')
const_3211 = relay.const([-1,-5,3,-4,-7,10,-4,4,-2,-4,-9,3,-7,-4,-7,8,-1,4,4,-2,-5,-7,-7,-10,-7,5,1,8,4,-8,2,-8,-8,-10,2,-3,4,-7,10,-9,4,-5,-3,2,-2,10,-6,-10,3,-5,3,4,-8,10,10,5,5,-8,-2,8,1,-1,-6,-1,2,-2,6,2,-8,-1,2,-2,-7,-7,-3,4,-3,-2,7,-6,1,-4,5,-2,8,3,1,-9,8,-7,3,4,8,2,9,-4,9,9,4,9,5,4,-9,-4,10,-9,-5,-6,-9,8,-10,10,2,5,3,10,10,-3,6,8,-1,9,-10,-8,-7,6,-1,-9,10,-1,-10,10,-2,8,2,-5,1,-8,-1,9,-5,5,5,-8,-8,5,-9,-5,-10,10,9,5,-9,10,-1,8,-5,-1,7,-3,-10,2,-5,-8,-1,9,4,-1,-8,5,-1,-3,-7,7,4,10,2,3,2,2,-10,3,-4,-8,-5,-2,-7,-5,1,-10,-3,9,4,-1,-3,-10,-6,10,-9,-4,1,-3,3,3,-9,9,3,5,1,-6,3,-9,10,8,-8,-6,-8,-7,6,-3,5,6,1,7,-9,6,8,-10,-5,-6,3,-3,-10,4,-2,-10,8,-7,7,-10,-7,-10,-4,-3,-3,3,2,8,6,-9,-8,7,5,6,-8,-10,-5,-1,-5,7,3,5,-7,9,-5,-4,-5,3,-5,-4,7,9,4,-10,-4,6,-10,5,4,-1,-2,3,5,9,-5,4,-7,-4,5,-2,5,-6,-9,-10,-5,-3,5,-6,10,-4,-6,-6,3,6,8,-7,-5,7,4,-8,-10,7,7,-10,9,-3,-4,8,1,-5,1,3,5,-10,1,9,9,9,-9,2,-4,-3,-3,4,-6,-6,-3,2,1,8,-2,-3,4,6,2,-1,2,-5,-8,3,-9,2,-8,-1,-8,10,5,10,7,3,5,-8,-10,4,-3,2,5,-6,-8,-1,4,-8,-5,6,-6,5,-3,-8,7,10,10,4,6,8,6,4,-1,9,-3,-1,-6,-10,-1,-1,-4,-10,5,-2,3,8,-9,9,5,9,-3,-6,-7,7,5,-8,-2,-3,-10,9,5,1,10,-8,-8,-2,7,1,4,-4,7,-10,-8,-8,-10,-2,-4,10,4,10,7,2,-10,2,10,-5,-7,10,7,-8,2,-1,4,2,-3,10,4,6,7,-8,-3,8,5,7,-3,-1,4,3,5,-8,8,8,3,6,9,9,-6,-4,-4,-4,-8,3,-7,2,4,2,-9,3,-6,2,-2,9,-7,-10,-4,7,9,3,-10,2,6,-5,-6,-7,-9,8,-7,1,10,4,-6,-7,4,-1,-7,-6,6,-8,-4,-5,-3,6,9,-3,-1,-4,-1,-9,1,9,4,-2,9,-3,4,-7,2,-6,-3,10,9,10,-5,5,3,-5,-9,7,7,-2,9,-8,5,10,5,3,-5,4,-3,7,2,3,9,1,10,-6,5,8,10,-9,9,10,6,-6,-4,-7,5,10,-9,-9,-4,-6], dtype = "int64")#candidate|3211|(576,)|const|int64
call_3210 = relay.TupleGetItem(func_950_call(relay.reshape(const_3211.astype('int64'), [12, 6, 8])), 0)
call_3212 = relay.TupleGetItem(func_953_call(relay.reshape(const_3211.astype('int64'), [12, 6, 8])), 0)
var_3227 = relay.var("var_3227", dtype = "float64", shape = (2, 4, 7))#candidate|3227|(2, 4, 7)|var|float64
bop_3228 = relay.subtract(uop_3208.astype('uint16'), relay.reshape(var_3227.astype('uint16'), relay.shape_of(uop_3208))) # shape=(2, 4, 7)
output = relay.Tuple([call_3210,const_3211,bop_3228,])
output2 = relay.Tuple([call_3212,const_3211,bop_3228,])
func_3231 = relay.Function([var_3207,var_3227,], output)
mod['func_3231'] = func_3231
mod = relay.transform.InferType()(mod)
mutated_mod['func_3231'] = func_3231
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3231_call = mutated_mod.get_global_var('func_3231')
var_3233 = relay.var("var_3233", dtype = "float64", shape = (2, 4, 7))#candidate|3233|(2, 4, 7)|var|float64
var_3234 = relay.var("var_3234", dtype = "float64", shape = (2, 4, 7))#candidate|3234|(2, 4, 7)|var|float64
call_3232 = func_3231_call(var_3233,var_3234,)
output = call_3232
func_3235 = relay.Function([var_3233,var_3234,], output)
mutated_mod['func_3235'] = func_3235
mutated_mod = relay.transform.InferType()(mutated_mod)
func_901_call = mod.get_global_var('func_901')
func_903_call = mutated_mod.get_global_var('func_903')
call_3299 = func_901_call()
call_3300 = func_901_call()
func_1227_call = mod.get_global_var('func_1227')
func_1228_call = mutated_mod.get_global_var('func_1228')
call_3304 = relay.TupleGetItem(func_1227_call(), 0)
call_3305 = relay.TupleGetItem(func_1228_call(), 0)
func_1337_call = mod.get_global_var('func_1337')
func_1338_call = mutated_mod.get_global_var('func_1338')
call_3308 = relay.TupleGetItem(func_1337_call(), 4)
call_3309 = relay.TupleGetItem(func_1338_call(), 4)
func_2568_call = mod.get_global_var('func_2568')
func_2570_call = mutated_mod.get_global_var('func_2570')
call_3318 = relay.TupleGetItem(func_2568_call(), 0)
call_3319 = relay.TupleGetItem(func_2570_call(), 0)
output = relay.Tuple([call_3299,call_3304,call_3308,call_3318,])
output2 = relay.Tuple([call_3300,call_3305,call_3309,call_3319,])
func_3320 = relay.Function([], output)
mod['func_3320'] = func_3320
mod = relay.transform.InferType()(mod)
mutated_mod['func_3320'] = func_3320
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3320_call = mutated_mod.get_global_var('func_3320')
call_3321 = func_3320_call()
output = call_3321
func_3322 = relay.Function([], output)
mutated_mod['func_3322'] = func_3322
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2599_call = mod.get_global_var('func_2599')
func_2601_call = mutated_mod.get_global_var('func_2601')
call_3364 = relay.TupleGetItem(func_2599_call(), 0)
call_3365 = relay.TupleGetItem(func_2601_call(), 0)
func_3083_call = mod.get_global_var('func_3083')
func_3085_call = mutated_mod.get_global_var('func_3085')
call_3374 = relay.TupleGetItem(func_3083_call(), 0)
call_3375 = relay.TupleGetItem(func_3085_call(), 0)
func_2946_call = mod.get_global_var('func_2946')
func_2948_call = mutated_mod.get_global_var('func_2948')
call_3382 = relay.TupleGetItem(func_2946_call(), 0)
call_3383 = relay.TupleGetItem(func_2948_call(), 0)
output = relay.Tuple([call_3364,call_3374,call_3382,])
output2 = relay.Tuple([call_3365,call_3375,call_3383,])
func_3399 = relay.Function([], output)
mod['func_3399'] = func_3399
mod = relay.transform.InferType()(mod)
mutated_mod['func_3399'] = func_3399
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3399_call = mutated_mod.get_global_var('func_3399')
call_3400 = func_3399_call()
output = call_3400
func_3401 = relay.Function([], output)
mutated_mod['func_3401'] = func_3401
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3320_call = mod.get_global_var('func_3320')
func_3322_call = mutated_mod.get_global_var('func_3322')
call_3407 = relay.TupleGetItem(func_3320_call(), 1)
call_3408 = relay.TupleGetItem(func_3322_call(), 1)
uop_3415 = relay.acosh(call_3407.astype('float32')) # shape=(12, 6, 8)
uop_3417 = relay.acosh(call_3408.astype('float32')) # shape=(12, 6, 8)
output = uop_3415
output2 = uop_3417
func_3419 = relay.Function([], output)
mod['func_3419'] = func_3419
mod = relay.transform.InferType()(mod)
mutated_mod['func_3419'] = func_3419
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3419_call = mutated_mod.get_global_var('func_3419')
call_3420 = func_3419_call()
output = call_3420
func_3421 = relay.Function([], output)
mutated_mod['func_3421'] = func_3421
mutated_mod = relay.transform.InferType()(mutated_mod)
const_3451 = relay.const([[[False,False,True,True],[True,False,False,False],[False,True,False,False],[False,True,False,False]],[[True,True,True,True],[False,False,True,False],[False,False,False,False],[True,True,True,True]],[[True,False,False,True],[False,False,True,True],[True,True,True,False],[False,False,False,True]],[[True,True,False,True],[False,False,False,False],[False,False,False,True],[True,True,False,True]],[[False,True,False,False],[True,True,True,True],[False,True,True,False],[True,True,True,False]],[[True,True,True,True],[True,True,True,True],[True,True,False,True],[True,True,False,True]],[[False,False,True,True],[True,True,False,True],[False,True,True,True],[True,False,True,False]],[[True,False,True,True],[False,False,False,True],[True,True,False,False],[False,False,True,False]],[[False,True,True,True],[False,False,False,False],[True,True,True,False],[True,False,False,True]],[[False,True,False,False],[True,False,False,True],[True,False,True,True],[True,True,True,True]],[[False,True,True,False],[True,True,False,False],[True,True,True,False],[True,True,True,True]],[[True,True,False,False],[False,False,True,True],[False,True,True,True],[False,False,True,False]],[[True,False,False,False],[True,False,True,False],[True,False,True,False],[True,False,True,False]]], dtype = "bool")#candidate|3451|(13, 4, 4)|const|bool
var_3452 = relay.var("var_3452", dtype = "bool", shape = (13, 4, 4))#candidate|3452|(13, 4, 4)|var|bool
bop_3453 = relay.logical_or(const_3451.astype('bool'), relay.reshape(var_3452.astype('bool'), relay.shape_of(const_3451))) # shape=(13, 4, 4)
func_1694_call = mod.get_global_var('func_1694')
func_1696_call = mutated_mod.get_global_var('func_1696')
call_3457 = relay.TupleGetItem(func_1694_call(), 0)
call_3458 = relay.TupleGetItem(func_1696_call(), 0)
func_2516_call = mod.get_global_var('func_2516')
func_2520_call = mutated_mod.get_global_var('func_2520')
var_3462 = relay.var("var_3462", dtype = "int8", shape = ())#candidate|3462|()|var|int8
const_3463 = relay.const([[5,-3,10,-4,-6,6,1,-6,-1,-4,-7,10,-9,-5,9,8,-7,-4,10,-3,-10,6,9,8,4,4,9,5,-5,8,-8,-9,-9,1,3,-8,3,4,9,-3,-6,-6,1,4,6,3,8,10,-4,-9,-6,-10,2,-2,-4,3,4,-4,5,-4,-1,6,8,7,8,9,-2,3,-10,4,-4,5]], dtype = "int8")#candidate|3463|(1, 72)|const|int8
call_3461 = relay.TupleGetItem(func_2516_call(relay.reshape(var_3462.astype('int8'), []), relay.reshape(const_3463.astype('int8'), [4, 6, 3]), ), 0)
call_3464 = relay.TupleGetItem(func_2520_call(relay.reshape(var_3462.astype('int8'), []), relay.reshape(const_3463.astype('int8'), [4, 6, 3]), ), 0)
func_1032_call = mod.get_global_var('func_1032')
func_1034_call = mutated_mod.get_global_var('func_1034')
call_3476 = relay.TupleGetItem(func_1032_call(), 0)
call_3477 = relay.TupleGetItem(func_1034_call(), 0)
func_2739_call = mod.get_global_var('func_2739')
func_2740_call = mutated_mod.get_global_var('func_2740')
call_3478 = relay.TupleGetItem(func_2739_call(), 2)
call_3479 = relay.TupleGetItem(func_2740_call(), 2)
func_3419_call = mod.get_global_var('func_3419')
func_3421_call = mutated_mod.get_global_var('func_3421')
call_3480 = func_3419_call()
call_3481 = func_3419_call()
uop_3511 = relay.asin(bop_3453.astype('float64')) # shape=(13, 4, 4)
output = relay.Tuple([call_3457,call_3461,var_3462,const_3463,call_3476,call_3478,call_3480,uop_3511,])
output2 = relay.Tuple([call_3458,call_3464,var_3462,const_3463,call_3477,call_3479,call_3481,uop_3511,])
func_3516 = relay.Function([var_3452,var_3462,], output)
mod['func_3516'] = func_3516
mod = relay.transform.InferType()(mod)
mutated_mod['func_3516'] = func_3516
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3516_call = mutated_mod.get_global_var('func_3516')
var_3518 = relay.var("var_3518", dtype = "bool", shape = (13, 4, 4))#candidate|3518|(13, 4, 4)|var|bool
var_3519 = relay.var("var_3519", dtype = "int8", shape = ())#candidate|3519|()|var|int8
call_3517 = func_3516_call(var_3518,var_3519,)
output = call_3517
func_3520 = relay.Function([var_3518,var_3519,], output)
mutated_mod['func_3520'] = func_3520
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2282_call = mod.get_global_var('func_2282')
func_2283_call = mutated_mod.get_global_var('func_2283')
call_3531 = relay.TupleGetItem(func_2282_call(), 0)
call_3532 = relay.TupleGetItem(func_2283_call(), 0)
func_901_call = mod.get_global_var('func_901')
func_903_call = mutated_mod.get_global_var('func_903')
call_3548 = func_901_call()
call_3549 = func_901_call()
output = relay.Tuple([call_3531,call_3548,])
output2 = relay.Tuple([call_3532,call_3549,])
func_3555 = relay.Function([], output)
mod['func_3555'] = func_3555
mod = relay.transform.InferType()(mod)
output = func_3555()
func_3556 = relay.Function([], output)
mutated_mod['func_3556'] = func_3556
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3163_call = mod.get_global_var('func_3163')
func_3165_call = mutated_mod.get_global_var('func_3165')
call_3559 = relay.TupleGetItem(func_3163_call(), 0)
call_3560 = relay.TupleGetItem(func_3165_call(), 0)
output = call_3559
output2 = call_3560
func_3575 = relay.Function([], output)
mod['func_3575'] = func_3575
mod = relay.transform.InferType()(mod)
output = func_3575()
func_3576 = relay.Function([], output)
mutated_mod['func_3576'] = func_3576
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1198_call = mod.get_global_var('func_1198')
func_1199_call = mutated_mod.get_global_var('func_1199')
call_3623 = relay.TupleGetItem(func_1198_call(), 1)
call_3624 = relay.TupleGetItem(func_1199_call(), 1)
func_950_call = mod.get_global_var('func_950')
func_953_call = mutated_mod.get_global_var('func_953')
const_3628 = relay.const([2,1,2,-2,-2,-3,-10,3,9,8,10,7,9,8,-7,6,-10,1,-10,8,6,4,10,-7,-7,4,-8,5,-6,-7,-7,10,1,1,4,7,3,-5,-9,1,-7,7,5,-1,4,1,1,3,5,-7,-5,9,8,-10,-6,4,5,9,3,10,9,3,7,4,-9,-10,-7,-2,-3,-1,3,-4,-9,8,-4,3,2,-5,-1,-10,2,-7,-9,4,-3,-2,-4,-5,-1,7,3,-9,8,-5,-3,-1,7,3,-9,9,-4,8,-7,-3,8,-4,-1,-8,-4,-10,-2,-3,-1,6,-5,-1,5,-9,4,3,-1,5,-9,-1,-7,-2,-1,7,-1,-1,-7,-7,4,7,7,2,-4,-8,-9,7,-9,5,4,-10,-3,3,-3,-2,-6,7,-6,1,-3,4,9,7,10,6,2,-1,8,6,-6,-8,-5,8,-3,3,10,-9,-1,-5,-8,9,8,6,-5,7,1,4,2,9,-10,1,-2,-7,7,-7,4,7,-5,-9,-5,2,2,2,-7,-9,-3,-5,3,1,-5,-4,-4,2,-4,-2,7,-7,-9,5,9,-10,-8,-1,-10,-8,-1,-5,-1,-6,8,-6,-1,6,-1,3,6,-6,2,-3,10,-7,-4,-9,9,-4,3,-2,2,-2,10,4,-1,-10,8,3,-7,-10,-3,9,-4,7,-2,4,8,6,-3,5,1,-7,1,8,2,-10,-6,-7,2,10,4,8,1,-1,4,-8,-1,5,-7,-7,-10,-6,-6,9,-6,1,-4,-1,3,-7,7,-4,-10,-10,2,8,6,8,-4,1,-5,-9,1,2,-3,3,-4,-10,-5,-5,-10,9,-6,10,-4,-9,5,-8,9,2,-2,-6,1,-3,8,3,1,-6,9,-7,8,3,-6,-2,2,-1,-9,1,4,-6,3,2,1,1,7,2,5,-1,-8,-10,-8,-5,7,-7,-3,3,10,2,-5,-1,10,-8,-3,-10,3,-1,10,-8,-5,5,-5,6,6,-9,8,3,-7,6,1,9,5,-3,-6,-9,-3,1,-7,-5,2,3,-4,-9,-9,-1,1,4,-9,-1,7,8,-6,-10,-5,-5,-1,-8,-7,5,3,6,-5,-10,-7,-1,-10,-6,7,9,-3,8,5,8,-2,9,3,9,-8,-2,1,1,2,8,-7,3,3,5,-7,3,-10,-7,10,8,-7,6,6,9,-7,1,-6,-6,-6,-1,4,4,-6,4,9,7,6,5,-1,4,-3,-3,-9,-2,-8,10,6,-5,-7,10,2,-3,1,10,4,9,1,8,1,-7,-4,-2,-2,-3,-5,-6,-2,-3,7,-4,-1,8,-7,2,-8,-8,5,-1,4,-6,10,-3,-1,5,4,-8,-2,-5,-3,-6,5,3,1,-6,1,3,-6,-4,-5,-4,6,-3,8,-7,6,-4,-7,-10,-3,5,-10,3,-7,10,4,2,-6,8,5,-5,-1,2,5,10,10,-10,-6,-4,-2,6,10,7,2,-8,-3,8,1,3,3,4,1,-4,8,1,-4,-5,-2,10,8,-1,-10,-6,-10,-9], dtype = "int64")#candidate|3628|(576,)|const|int64
call_3627 = relay.TupleGetItem(func_950_call(relay.reshape(const_3628.astype('int64'), [12, 6, 8])), 0)
call_3629 = relay.TupleGetItem(func_953_call(relay.reshape(const_3628.astype('int64'), [12, 6, 8])), 0)
func_1032_call = mod.get_global_var('func_1032')
func_1034_call = mutated_mod.get_global_var('func_1034')
call_3632 = relay.TupleGetItem(func_1032_call(), 1)
call_3633 = relay.TupleGetItem(func_1034_call(), 1)
func_2775_call = mod.get_global_var('func_2775')
func_2777_call = mutated_mod.get_global_var('func_2777')
call_3640 = relay.TupleGetItem(func_2775_call(), 0)
call_3641 = relay.TupleGetItem(func_2777_call(), 0)
const_3650 = relay.const([[[9.120199,8.180271,7.535905,4.019136,9.238748,3.381030,5.480444,-2.709888,1.219639,-0.863396,5.828388,-8.894491,-5.053370,5.096753],[9.931167,-0.242102,8.717324,-4.761938,3.796685,-1.729393,0.719249,3.198810,1.250865,-6.060643,-9.145370,9.432040,1.382193,4.947149],[-1.947994,-8.434596,-8.247216,-3.923977,-5.042942,-6.377717,-4.652710,-7.414371,-2.137665,1.158323,4.396939,-1.336864,-3.685660,2.801487],[-8.629529,2.304886,5.191606,-3.720471,-8.144248,3.347163,7.720718,4.224301,-1.208529,4.073950,9.147304,-1.538792,-4.141580,6.459319],[8.116648,-5.952647,6.160198,-6.763955,5.693866,-3.245898,6.969741,-1.039529,-3.125162,-1.413093,9.160979,4.833985,-9.084679,7.093955],[0.919548,-3.908500,7.576102,-7.822840,-4.686489,8.437129,0.533979,-4.918930,-1.195540,6.298805,-7.359101,5.975032,9.562050,-7.967380],[9.225768,-4.451241,-0.885746,7.252199,-7.443361,3.148801,-2.120570,-4.811886,-9.928961,-9.151134,-7.294472,4.028879,8.449298,-8.449343],[-7.399374,8.307149,8.388355,-1.070311,-2.187476,4.695183,0.764649,5.756119,-4.402659,3.576097,-8.880908,5.617210,9.932344,9.552621],[3.449000,4.874792,3.712733,2.815060,-3.911016,-0.397870,2.690212,9.950603,-5.108946,-1.742241,5.948303,-9.929735,8.573763,-7.182087]],[[-3.417142,-9.374986,2.704372,3.542975,-8.761151,1.020065,-9.946940,7.886225,-7.974989,-4.699920,1.802236,4.007004,-0.328255,2.701443],[7.667821,-2.500345,1.412945,5.353948,-7.113005,2.360187,-0.260537,-9.431401,8.566450,-7.501324,-0.115853,-2.385088,-4.346728,-6.859997],[4.961330,-3.427005,2.119684,4.958129,1.123007,-4.564263,5.843281,-8.401590,-1.673647,9.379181,-0.117137,0.070495,-9.553506,0.340093],[1.458615,-1.694419,0.363359,3.806974,5.468303,9.381563,-0.753370,8.819780,-4.523198,7.949421,-2.844728,-3.857360,-7.520225,3.750220],[0.735642,8.724172,4.143948,-7.183091,1.146204,5.353930,-8.430841,2.630697,-5.073083,-9.248132,3.070848,-7.304239,-6.504269,-2.450829],[-8.782163,-0.013354,-5.595721,4.937771,2.397793,-8.438140,7.535244,3.251824,6.852715,-9.117044,6.821149,-2.502149,-8.489919,-2.502081],[4.573267,-4.523626,1.978647,5.147722,-6.320371,4.650333,-5.404146,-1.952243,2.749094,7.649071,7.686618,7.899496,8.742643,0.534410],[-1.528956,-6.837892,-1.937204,6.020412,0.604626,-0.618547,8.097469,5.786260,5.801135,-0.578303,-4.820652,3.695035,8.521616,-0.439163],[-3.336779,8.426082,-2.448493,-0.634574,-2.781465,-9.504177,8.550422,2.112632,-4.518161,-7.151988,0.105309,-7.993354,6.483288,2.985494]],[[-4.296607,5.303829,3.576533,1.782626,-9.538492,-1.521998,-3.184215,3.912626,5.769754,-3.299563,6.091269,-3.917644,1.438839,-3.861048],[-1.519470,-1.226795,-3.447015,-3.139173,-0.221926,7.847817,4.593580,0.763231,-6.712906,5.824275,9.316118,8.164340,9.882029,1.561253],[-2.006115,1.389866,3.203645,-2.064193,7.246877,0.749709,-8.106618,-8.208790,0.780552,2.502970,-0.859376,3.929733,8.716353,1.694978],[-7.803974,8.358588,-8.459060,-0.608047,-7.291720,5.265055,4.434335,9.822985,7.767803,4.132536,4.342945,-5.887280,-6.173636,-1.927998],[-6.478195,-0.623514,-7.362363,-3.750421,-4.148844,7.147074,0.947518,-3.015491,9.721727,-0.948758,7.219063,3.965122,2.079063,8.956406],[-7.650448,7.659814,0.734218,0.480210,1.967985,-9.388812,-1.494013,0.782541,6.756987,-2.014646,5.251112,5.847583,3.984511,-1.846325],[4.403104,-3.753436,3.812023,-1.758779,2.186056,-9.485421,4.303520,-8.832979,-3.749887,1.831005,6.843297,4.652567,4.465310,9.606544],[0.713570,3.730881,8.793523,-4.248822,3.126679,6.658058,4.201190,5.337676,8.772580,-0.687912,6.794249,4.342753,-1.489621,-5.970064],[6.358476,-6.646471,0.230767,4.189481,3.207604,9.626146,2.897599,9.652006,-5.704758,3.825215,-1.703899,-1.824956,-5.387480,-5.895949]],[[-1.346543,-3.180198,-0.813522,-3.144140,-0.227633,0.070045,-2.278724,-3.515661,6.512190,-1.322004,-7.378956,0.246982,8.815572,7.459424],[2.877756,-5.025589,-0.274793,-1.247832,7.075849,-8.199181,-5.479192,1.353954,-1.129379,-8.331424,6.176363,3.391856,1.344864,-3.618836],[-5.816222,-7.565981,1.430926,2.359660,7.377562,6.914622,7.111556,-8.240633,0.548179,-1.845109,9.499626,6.709129,1.084438,-2.839122],[-6.859608,0.440778,-9.316195,-9.477739,2.165812,7.848545,7.576047,6.884588,-8.661439,0.608915,-1.911106,7.769077,-7.437934,-2.798357],[-8.471320,-1.073347,-5.768811,8.908137,1.537102,-4.799335,-1.524384,5.588538,-5.939429,-6.533921,-4.997126,-6.263777,1.856064,-6.834351],[1.437046,4.546485,-5.016057,-2.894208,8.203151,8.600375,9.168890,6.131148,-0.433500,-1.585308,-6.676768,4.305267,-0.638739,5.467115],[-3.811059,0.755424,-5.923024,2.775628,0.179239,9.448998,1.202055,5.227546,1.384044,-5.830433,-3.111022,-9.173891,9.172069,2.191067],[-5.595586,2.907656,5.454533,-2.622615,6.284756,-2.159211,6.665086,-9.243296,-5.984874,9.344945,-4.152188,6.748116,-4.198058,8.787560],[-1.302310,8.669188,0.536225,1.502234,-1.620951,5.346876,9.306153,-1.749932,3.075185,3.122659,-1.693940,6.049084,5.417555,8.372403]],[[5.564666,6.281839,-5.246769,-3.529876,-1.101116,-1.843687,1.657722,-2.361633,7.285510,6.200598,9.530723,-7.009559,6.175340,2.133755],[0.961360,6.065648,9.614845,-1.577214,7.662001,-3.311929,-8.796978,-9.830084,-4.519095,-1.924009,0.534309,-9.152389,-5.928100,0.533508],[8.490713,-0.951833,7.112205,6.358643,4.841183,-5.577019,-6.184004,-7.047000,8.736883,-1.694602,8.287640,6.243388,-3.079605,-1.508392],[2.740368,-4.200724,-8.451295,7.428942,-8.926787,-1.096008,-1.872686,8.812535,2.554279,0.580709,-0.885108,-3.952642,-9.710709,8.047226],[-2.328222,9.034364,4.748469,-6.010211,7.899008,8.470556,-1.533919,5.525912,3.276643,6.006312,-5.189411,2.097646,-6.963684,-4.038670],[-4.860066,0.658541,3.743982,-4.223415,-3.040599,-4.222253,-1.019822,-1.685725,-6.377456,7.882699,-2.423013,-3.239933,4.849785,8.183501],[-4.080431,-3.362317,6.024134,2.806650,-2.030078,1.429758,-4.410574,-6.582636,-9.473050,0.789818,-6.647009,-0.618623,1.720974,6.541928],[-6.996414,-2.040056,6.698596,7.601370,-7.821994,7.865181,-9.158688,4.424354,6.447052,0.112152,-1.832990,-3.526125,3.379370,7.343453],[1.064326,5.679654,-7.948814,-7.538167,-0.156599,-7.692163,-7.483947,-4.790684,4.078106,3.876859,0.326908,-2.687043,1.617562,7.950793]],[[3.272291,3.269932,9.609443,-9.435685,-3.260033,8.196122,8.099408,9.968518,-1.801163,-1.949053,-1.363487,-6.308694,4.140239,0.111538],[1.455618,5.934036,-9.500687,1.350165,-2.187999,8.232452,8.077638,3.650709,-4.513253,-5.772346,-2.157417,-3.059141,5.742814,6.008785],[4.778039,2.808690,3.799509,4.010071,-3.420816,5.243028,5.176298,4.535882,-8.839858,3.386755,-4.978067,5.440760,-1.978227,9.361663],[-3.261285,-2.712113,8.525248,-8.937638,2.737730,-6.753613,-0.059931,-3.768029,-9.635266,-2.321215,-2.325437,-9.183746,-4.103318,-8.322398],[5.274468,-0.393397,-6.221767,-6.543106,-4.770670,-4.559912,-5.253332,3.062961,-8.690534,-7.206616,-5.079539,9.806963,-6.448655,7.951563],[3.045785,-0.619024,2.304792,-7.795434,8.667856,1.920331,5.229724,3.149842,6.116013,0.821575,-5.201833,-6.900593,-3.555605,-0.767685],[1.727397,6.316176,0.926624,-0.462581,-9.984300,-8.726571,5.058365,-7.258479,9.756069,-3.930272,-0.944241,-2.066681,-0.208947,2.525911],[5.115717,9.552717,2.489374,6.326196,-3.288510,7.347567,2.131327,2.757857,-4.973988,0.271011,0.579169,-0.725163,7.978822,6.615936],[6.504656,4.394992,-9.132472,-1.238171,6.610510,-8.680369,7.349352,3.854681,2.262317,7.829976,-7.070481,1.312166,-5.011796,1.647329]],[[-4.343650,2.753219,-9.983884,-3.855323,-0.755996,-2.380384,0.744679,9.217536,2.011467,4.043545,7.788306,-9.794898,5.916908,-8.564321],[8.005401,-3.798041,-1.881867,0.100768,-4.424113,3.667471,-2.657903,-9.028706,-4.325570,-9.148851,-3.693911,-4.518624,-8.234743,4.437251],[-5.398385,-2.696857,-2.716678,7.946334,-9.983120,0.857942,6.218186,3.140653,-0.658511,4.952448,-9.746734,-7.739517,6.864575,-0.745143],[1.963338,1.901374,4.354975,4.508105,-3.822442,-4.358798,-3.852144,8.628666,-1.986996,8.471088,1.064955,2.717539,0.523707,-4.516004],[-5.675458,-6.776311,8.104930,2.188464,9.584015,-0.957239,-4.224629,3.342463,-5.199428,-3.974137,7.977677,8.483715,-8.681331,-4.551745],[7.477465,-0.716379,-7.084739,1.730130,-1.755475,-9.503884,-4.221433,-3.540322,-9.379177,8.239024,-5.600682,1.402956,0.647819,-4.141252],[-8.149710,9.684397,-7.542503,7.594436,1.478517,-6.312141,-9.001174,9.142223,9.402803,4.830934,0.568845,-0.673362,-0.272010,-2.813908],[-1.232697,6.749962,4.369517,-6.410685,-3.567964,-2.578559,9.443321,2.518007,-0.438660,-2.511749,-2.832945,8.852320,-1.929902,-9.864668],[7.842357,-7.934370,7.458874,-6.602086,9.919111,-1.223899,1.188897,9.551800,3.458348,-3.400878,0.031015,5.364649,-7.758142,-7.323220]],[[-6.960336,8.193069,6.280449,-2.111522,1.604994,6.146841,5.352759,-4.318264,0.628976,2.167427,-6.216801,-2.375953,-8.460904,-8.205885],[-0.472795,8.006400,7.806768,-5.745719,6.770599,5.417782,-3.795916,2.085436,8.796603,-3.414902,8.953610,8.153004,0.858998,6.671476],[-7.759545,-1.988945,-8.276425,9.141211,-7.395173,-4.792846,-0.933448,-7.887445,9.714665,1.589872,4.543505,2.567119,3.640212,-1.031437],[-0.506288,1.245362,2.401093,7.504116,7.940674,5.766238,-9.330205,7.818046,-2.226733,1.455414,6.185353,-6.177648,-7.300268,9.075073],[-2.799348,-3.599542,-1.279834,5.378280,8.289002,0.833105,-0.247376,-4.554274,5.202663,8.523122,2.946667,7.533828,9.121298,5.465076],[7.075173,-1.491951,4.203533,-3.012091,-5.989953,0.546640,-4.944549,-3.266521,-5.227673,2.887440,2.761159,6.079418,-6.092722,6.116046],[-3.319849,2.200502,-6.730171,8.598410,2.682836,6.013037,-5.558457,9.135055,2.787739,9.480375,4.766827,1.560074,0.646351,4.434823],[2.092097,-0.862580,-7.053726,1.094834,1.942566,-5.404633,-0.666720,-9.457851,-8.905546,4.737561,4.797032,4.997008,-5.682135,1.537197],[5.268137,6.762343,-0.760460,-4.102529,9.258131,9.016293,0.949518,3.506287,0.072542,-9.509583,-3.506876,7.059951,-0.702937,-9.260447]],[[-2.766318,-1.302277,-7.164592,-0.088041,9.619868,3.116993,5.359247,6.975073,-1.788192,-9.142081,-1.057675,-0.430852,5.572873,3.100439],[-7.971474,-3.575828,6.319977,2.983708,-3.663476,-7.659852,-4.521240,-3.634708,-9.289391,-3.087563,7.942037,-1.165206,0.563858,-2.486132],[4.906955,-9.444352,3.895859,-6.404378,-6.077983,-8.207260,6.391091,-4.602830,9.639275,8.360759,0.278641,-0.290915,4.679820,-8.758477],[0.800006,3.761380,-1.593605,3.031416,-2.111686,9.955847,4.733142,3.362127,-5.316747,-3.497647,-9.493527,-7.810400,-9.009780,-6.362795],[3.944798,-2.309810,7.191940,9.434599,-3.302185,3.255423,-2.800041,1.663007,8.015075,3.201709,-8.567261,4.212392,5.034088,-3.850893],[-2.641414,5.457143,-8.783093,8.454292,1.955073,4.973868,8.289568,-7.009896,3.820025,7.860197,-5.891559,5.795974,-0.210844,-7.925994],[-8.412442,8.674730,4.619239,-2.420979,4.474131,-1.351775,9.421427,-7.700108,-5.172200,-0.970436,-5.268602,-3.882925,-9.676258,6.606982],[-7.255467,0.181074,0.247261,-2.942104,1.727220,-1.045696,-2.168055,-9.377038,-2.657297,-8.286973,7.311334,6.391923,-2.282709,3.936704],[9.096876,4.307743,-3.624653,-9.075110,-3.603966,-5.013464,5.633275,-0.936740,5.885441,6.384696,6.934804,7.796625,2.774366,-8.905688]],[[-9.750626,-5.762116,-9.819488,-9.406563,-9.504415,-6.019003,2.351477,4.461833,5.255454,-1.874848,-7.084403,1.756288,5.003616,-3.812884],[6.004815,-6.918584,-0.487485,8.249030,-8.115389,3.078584,-0.571549,8.714868,0.963927,-9.844752,-9.324008,2.644881,1.252460,-9.856289],[4.976110,6.302185,5.994300,9.656482,-1.924449,1.019307,-0.134496,-6.766981,-0.950821,-8.821089,-3.882129,6.714790,3.420471,7.268781],[5.088173,4.982570,-0.508466,5.166839,-4.992971,-2.664342,2.156198,8.712434,-4.366554,-2.505236,-7.650679,-9.979954,3.545557,9.064921],[3.593584,4.415335,5.658954,4.215544,9.160616,6.181628,8.647830,7.317005,0.997541,-3.379435,-2.547383,9.519065,6.376979,3.754669],[9.346165,8.407168,0.456774,0.640469,7.241033,-5.077991,7.363798,-4.823131,9.911506,3.214412,9.382121,2.323433,-9.399157,-9.858954],[-6.766274,-6.132138,-7.821534,-7.254444,8.217325,-3.113832,6.783193,0.287698,5.814221,7.916013,6.885037,0.157430,3.842121,-1.647397],[0.377397,0.574362,-5.494420,3.625504,-7.609120,-5.876345,9.900376,-1.342672,-7.331078,0.393866,-5.525902,-9.778669,8.238648,-8.964115],[-5.681298,-5.176398,5.931817,-8.270449,-3.905841,-5.668322,4.157991,-5.555999,-5.041733,5.012837,-5.931344,-3.026018,-5.007144,3.862666]],[[-3.147165,-6.934529,-1.392232,3.439852,-4.372744,-6.346493,5.085465,1.659409,0.880599,-8.880457,0.859302,-8.730132,-8.443777,-8.271465],[-8.665495,0.946973,7.609448,9.805315,-0.660226,0.007293,-3.307831,3.632681,-3.457686,8.760210,-7.262282,3.623379,5.957524,-7.611209],[-5.763612,-8.836758,-8.040517,-3.742813,4.006996,6.907938,-7.520029,4.959315,-8.731350,-9.471578,6.983011,4.138808,0.710376,7.292670],[-5.114546,5.138247,-7.918008,4.488847,0.561709,-0.943236,-9.924380,-5.866435,-2.643942,2.370017,4.121795,-1.348921,8.618259,-7.542433],[-9.605761,-3.352779,6.494166,-2.028154,7.718657,-0.945529,1.493165,-2.472485,6.707651,-1.822499,-7.971603,-9.178259,0.312692,-4.063655],[-4.039595,-1.104986,5.436541,-4.534155,-3.277070,-5.736676,-2.091165,-9.800101,-7.454707,4.496089,0.438317,7.323468,-2.125900,9.853873],[-1.966501,-7.875402,9.321075,-1.366173,6.169751,6.673372,4.149095,-7.550926,4.018490,7.166287,9.994326,1.535785,-8.939665,-3.298929],[-0.915760,-2.993441,5.063525,-9.083660,3.890909,6.141333,2.772844,-9.588395,5.516895,-0.445525,4.465627,-2.774371,0.906938,-8.484606],[-7.521523,-3.885933,-6.109235,-6.615988,7.503927,-5.184956,4.997613,-4.827764,7.186153,0.321884,0.797055,2.802650,3.582676,6.014121]],[[8.010426,-6.802427,-3.211415,-5.291426,7.007032,-2.262181,4.761943,-6.140479,4.809909,5.550411,3.817339,9.400685,6.776863,-8.851630],[-5.026499,5.104441,8.869451,5.251274,-6.464680,-2.194115,-8.978270,-7.374148,-8.298797,-9.759343,2.631755,-6.101099,-2.708831,1.314825],[-7.873149,-8.789214,9.091792,-5.819801,9.254566,-8.271468,8.619551,-1.048504,-1.512283,-8.715222,3.112822,-2.943445,-1.185443,4.472993],[-8.203371,-2.269875,-6.231830,0.349726,-3.321724,-6.286397,3.186987,0.487969,-6.221481,6.070684,7.606845,3.655811,-0.845136,6.629429],[-2.994256,-9.263022,-8.538379,7.203588,4.793531,-6.479482,-0.479322,-8.672414,-6.201316,-9.318346,5.647971,3.460545,7.300570,6.883500],[-5.048578,1.179492,5.971654,2.547033,-4.632127,7.771611,7.971130,-1.784427,-3.929074,6.738962,-1.186375,1.617015,9.756426,-3.947810],[3.760447,5.692541,2.064826,-1.104145,-2.729497,-3.684619,-5.133404,-8.947172,7.452651,6.212175,7.495270,-9.645452,6.384031,1.444900],[-1.042266,6.499166,2.581903,1.812175,0.206767,-1.263284,0.346508,8.521988,-7.252666,6.215130,-2.227768,5.034224,-5.163646,9.962212],[-7.667145,-0.827160,0.776316,-3.622055,-0.712924,0.949345,-7.108871,5.446599,-6.814231,3.808977,8.669258,-9.456627,-8.225915,1.379223]],[[-4.956944,-4.477287,-8.738246,3.661696,-4.127949,-0.740323,-7.523900,4.936105,2.326476,-3.928270,4.631839,-4.014067,0.036952,-9.190685],[3.821299,-4.924992,-3.047024,-8.391754,7.044560,-4.754129,0.932928,2.487176,-7.146365,-2.721735,7.070177,0.784843,3.169421,1.319775],[0.242482,-7.399591,-2.204500,-0.351151,0.245109,3.157741,-9.713497,-1.319700,-0.648684,6.057491,-9.339854,2.226901,5.218170,-7.481232],[-7.435198,2.499299,7.486557,-1.864382,-1.996334,5.048143,9.519126,-0.118211,-1.419171,-2.659180,-7.706237,-8.762063,8.063112,9.579684],[-2.003242,5.261179,8.433752,-0.153984,-5.439795,-3.599050,2.299088,-3.445016,-1.493959,5.352767,-1.734466,-5.397400,6.112119,6.263840],[-4.334223,2.959460,8.490293,2.226965,3.922454,3.235524,6.493995,-1.706376,3.175168,1.529947,-6.246633,6.760056,-3.272048,3.736417],[-0.301661,1.602289,7.420174,5.411170,6.639886,-6.114265,6.622894,4.356357,3.970328,6.386463,-0.756402,9.768227,1.970725,9.793581],[-6.627564,-7.378661,-1.596643,4.992954,-0.354113,-0.986964,7.415296,6.422091,-9.643642,1.961766,-5.401632,7.448399,-2.579371,8.376157],[2.809357,2.939293,-1.741141,-6.032863,9.604518,-7.370625,-8.498583,-0.333506,3.209506,-0.368876,-7.244179,-5.787354,3.501660,6.153408]]], dtype = "float32")#candidate|3650|(13, 9, 14)|const|float32
bop_3651 = relay.greater(call_3640.astype('bool'), relay.reshape(const_3650.astype('bool'), relay.shape_of(call_3640))) # shape=(13, 9, 14)
bop_3654 = relay.greater(call_3641.astype('bool'), relay.reshape(const_3650.astype('bool'), relay.shape_of(call_3641))) # shape=(13, 9, 14)
func_247_call = mod.get_global_var('func_247')
func_251_call = mutated_mod.get_global_var('func_251')
var_3661 = relay.var("var_3661", dtype = "uint64", shape = (312,))#candidate|3661|(312,)|var|uint64
var_3662 = relay.var("var_3662", dtype = "float64", shape = (560,))#candidate|3662|(560,)|var|float64
call_3660 = relay.TupleGetItem(func_247_call(relay.reshape(var_3661.astype('uint64'), [4, 6, 13]), relay.reshape(var_3662.astype('float64'), [4, 10, 14]), ), 2)
call_3663 = relay.TupleGetItem(func_251_call(relay.reshape(var_3661.astype('uint64'), [4, 6, 13]), relay.reshape(var_3662.astype('float64'), [4, 10, 14]), ), 2)
uop_3667 = relay.atanh(const_3650.astype('float64')) # shape=(13, 9, 14)
func_1337_call = mod.get_global_var('func_1337')
func_1338_call = mutated_mod.get_global_var('func_1338')
call_3669 = relay.TupleGetItem(func_1337_call(), 1)
call_3670 = relay.TupleGetItem(func_1338_call(), 1)
output = relay.Tuple([call_3623,call_3627,const_3628,call_3632,bop_3651,call_3660,var_3661,var_3662,uop_3667,call_3669,])
output2 = relay.Tuple([call_3624,call_3629,const_3628,call_3633,bop_3654,call_3663,var_3661,var_3662,uop_3667,call_3670,])
func_3671 = relay.Function([var_3661,var_3662,], output)
mod['func_3671'] = func_3671
mod = relay.transform.InferType()(mod)
mutated_mod['func_3671'] = func_3671
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3671_call = mutated_mod.get_global_var('func_3671')
var_3673 = relay.var("var_3673", dtype = "uint64", shape = (312,))#candidate|3673|(312,)|var|uint64
var_3674 = relay.var("var_3674", dtype = "float64", shape = (560,))#candidate|3674|(560,)|var|float64
call_3672 = func_3671_call(var_3673,var_3674,)
output = call_3672
func_3675 = relay.Function([var_3673,var_3674,], output)
mutated_mod['func_3675'] = func_3675
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3399_call = mod.get_global_var('func_3399')
func_3401_call = mutated_mod.get_global_var('func_3401')
call_3741 = relay.TupleGetItem(func_3399_call(), 0)
call_3742 = relay.TupleGetItem(func_3401_call(), 0)
func_3083_call = mod.get_global_var('func_3083')
func_3085_call = mutated_mod.get_global_var('func_3085')
call_3753 = relay.TupleGetItem(func_3083_call(), 0)
call_3754 = relay.TupleGetItem(func_3085_call(), 0)
output = relay.Tuple([call_3741,call_3753,])
output2 = relay.Tuple([call_3742,call_3754,])
func_3764 = relay.Function([], output)
mod['func_3764'] = func_3764
mod = relay.transform.InferType()(mod)
output = func_3764()
func_3765 = relay.Function([], output)
mutated_mod['func_3765'] = func_3765
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3575_call = mod.get_global_var('func_3575')
func_3576_call = mutated_mod.get_global_var('func_3576')
call_3795 = func_3575_call()
call_3796 = func_3575_call()
func_3320_call = mod.get_global_var('func_3320')
func_3322_call = mutated_mod.get_global_var('func_3322')
call_3823 = relay.TupleGetItem(func_3320_call(), 3)
call_3824 = relay.TupleGetItem(func_3322_call(), 3)
var_3832 = relay.var("var_3832", dtype = "int8", shape = (2145,))#candidate|3832|(2145,)|var|int8
bop_3833 = relay.greater(call_3823.astype('bool'), relay.reshape(var_3832.astype('bool'), relay.shape_of(call_3823))) # shape=(2145,)
bop_3836 = relay.greater(call_3824.astype('bool'), relay.reshape(var_3832.astype('bool'), relay.shape_of(call_3824))) # shape=(2145,)
output = relay.Tuple([call_3795,bop_3833,])
output2 = relay.Tuple([call_3796,bop_3836,])
func_3839 = relay.Function([var_3832,], output)
mod['func_3839'] = func_3839
mod = relay.transform.InferType()(mod)
mutated_mod['func_3839'] = func_3839
mutated_mod = relay.transform.InferType()(mutated_mod)
var_3840 = relay.var("var_3840", dtype = "int8", shape = (2145,))#candidate|3840|(2145,)|var|int8
func_3839_call = mutated_mod.get_global_var('func_3839')
call_3841 = func_3839_call(var_3840)
output = call_3841
func_3842 = relay.Function([var_3840], output)
mutated_mod['func_3842'] = func_3842
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2946_call = mod.get_global_var('func_2946')
func_2948_call = mutated_mod.get_global_var('func_2948')
call_3844 = relay.TupleGetItem(func_2946_call(), 1)
call_3845 = relay.TupleGetItem(func_2948_call(), 1)
func_2818_call = mod.get_global_var('func_2818')
func_2819_call = mutated_mod.get_global_var('func_2819')
call_3873 = relay.TupleGetItem(func_2818_call(), 0)
call_3874 = relay.TupleGetItem(func_2819_call(), 0)
func_730_call = mod.get_global_var('func_730')
func_733_call = mutated_mod.get_global_var('func_733')
const_3878 = relay.const([False,True,True,True,True,False,True,True,True,True,False,True,False,False,True,False,False,False,True,False,False,False,False,True,True,True,False,False,True,True,True,True,False,False,True,False,True,False,True,False,True,True,True,True,True,True,True,False,True,False,False,False,False,True,True,True,False,True,False,True,False,True,True,True,True,False,True,False,False,False,False,True,True,False,False,True,True,True,True,False,False,True,False,False,False,True,False,True,True,False,False,True,True,True,False,False,True,True,True,True,True,True,False,True,True,False,False,False,False,True,True,False,False,True,False,True,True,False,False,False,False,False,True,True,False,False,False,True,True,True,True,True,False,True,False,False,False,False,False,False,True,True,False,True,True,False,False,False,True,False,False,True,True,True,True,True,True,True,False,True,False,True,False,False,True,False,False,True,False,True,True,True,False,True,False,True,True,True,True,False,True,True,False,False,True,True,True,False,False,False,True,False,True,True,False,False,True,True,True,True,False,False,False,False,True,True,False,True,False,True,True,True,True,True,False,False,False,True,False,False,True,False,False,True,True,True,True,True,False,True,False,False,True,True,False,True,False,False,False,False,False,True,True,True,True,True,True,True,True,True,False,False,True,False,True,True,True,True,False,True,False,False,True,True,True,False,False,True,False,False,True,False,False,True,True,True,False,False,False,True,False,False,False,True,True,True,False,False,False,False,False,False,True,True,False,False,True,False,False,False,True,True,False,True,False,False,False,True,False,False,False,False,True,False,False,False,False,False,False,False,True,False,True,False,False,True,False,True,True,False,True,False,False,False,True,False,False,True,True,False,False,False,True,True,False,True,True,False,True,True,True,False,False,False,False,False,True,True,True,False,True,True,True,True,True,False,False,True,False,True,True,False,True,False,True,False,True,False,False,True,True,True,True,True,True,False,True,False,True,True,True,False,False,False,False,True,False,False,False,False,True,True,False,True,False,True,True,True,True,True,False,True,True,False,False,False,False,False,True,True,True,False,True,True,False,True,False,False,True,False,True,True,True,True,False,True,True,True,True,False,False,True,True,True,True,False,False,True,False,True,False,True,True,False,False,True,True,False,True,True,False,False,False,True,False,False,True,True,True,False,True,True,True,True,True,True,True,True,False,True,False,True,False,True,True,False,False,False,False,True,True,False,False,True,True,False,True,False,True,False,False,False,False,False,True,True,True,False,False,True,True,False,False,True,True,True,True,True,False,True,False,True,True,False,True,True,False,False,True,True,True,False,False,True,False,True,False,True,False,False,False,True,False,True,True,True,False,False,False,False,False,False,False,True,True,True,False,True,True,False,True,False,False,True,True,False,False,True,True,False,True,True,False,True,False,True,False,True,True,False,True,True,True,True,True,False,False,True,True,False,True,False,False,True,True,False,True,False,True,False,False,True,False,False,False,False,True,True,True,True,True,True,False,False,False,True,False,True,True,False,True,False,False,True,False,False,True,True,False,True,False,False,False,False,True,False,False,False,True,False,True,True,True,False,True,True,True,False,False,False,False,True,True,False,True,True,False,False,False,False,True,False,True,True,False,False,False,True,False,True,True,False,False,False,False,False,True,True,False,False,False,False,True,True,False,False,False,True,True,False,True,False,True,False,False,True,False,False,False,True,True,True,True,False,True,True,False,True,False,False,True,False,False,False,True,False,True,True,True,False,False,True,False,True,True,False,False,False,False,True,True,False,False,False,False,False,True,False,True,True,False,False,False,False,False,True,False,True,True,False,True,True,True,False,False,False,False,False,False,True,True,True,True,False,True,True,False,False,True,True,False,True,True,False,True,True,True,True,True,False,True,False,True,False,False,True,True,True,False,True,False,True,True,True,True,False,False,True,True,True,False,True,False,True,True,True,True,False,False,False,True,False,False,False,False,True,False,True,False,False,True,False,True,False,True,True,False,True,False,True,False,True,False,False,False,True,True,True,False,True,True,True,True,False,True,False,True,True,True,True,True,False,True,True,False,False,False,True,True,False,False,True,True,True,True,False,False,False,True,False,True,True,True,True,True,True,True,False,False,False,True,False,True,False,True,True,False,True,False,True,True,True,False,True,False,True,True,False,True,False,True,False,True,False,True,False,True,False,False,False,True,True,False,False,True,True,True,True,False,False,False,True,True,False,False,True,True,True,True,False,False,False,True,True,True,False,False,False,True,False,False,False,False,False,False,True,True,True,True,True,True,True,True,False,False,True,True,True,True,True,False,True,True,True,False,False,True,False,True,False,True,True,False,True,False,False,False,True,False,True,True,True,True,False,False,True,True,True,False,False,False,False,True,False,True,False,False,True,False,True,True,True,True,False,False,True,False,True,False,False,False,True,False,True,True,False,False,True,True,True,True,False,True,True,False,True,True,False,False,True,False,True,True,True,True,True,False,False,False,False,False,True,False,False,False,True,False,True,False,False,False,False,False,True,True,False,False,False,False,False,True,False,False,False,True,True,False,True,True,False,False,False,True,False,False,False,True,True,True,False,True,True,False,True,False,True,True,True,True,True,True,False,False,True,True,True,True,True,True,False,True,True,False,True,True,True,True,False,False,False,False,True,True,False,False,True,True,True,False,False,False,False,True,False,True,False,False,False,True,True,True,False,False,True,True,True,False,False,True,False,False,False,True,True,False,True,True,False,False,True,False,True,True,True,True,True,True,True,True,False,False,False,True,False,False,False,True,False,True,True,True,True,True,False,True,True,False,False,True,False,True,False,True,True,True,True,False,True,False,True,True,True,False,False,True,False,True,True,False,False,False,True,True,True,False,False,False,False,False,False,False,False,False,False,True,True,True,True,False,True,False,False,False,False,False,False,False,True,True,True,True,True,False,True,False,False,True,False,False,False,False,True,False,False,True,True,False,False,False,False,True,False,False,False,True,True,False,True,False,True,False,False,False,True,True,False,True,False,False,False,False,True,True,False,True,False,True,True,False,True,False,True,False,False,True,True,True,True,False,False,False,True,False,False,False,True,False,True,True,True,True,False,False,False,False,True,False,False,True,False,True,True,False,True,True,True,False,True,True,True,True,True,False,True,False,False,False,False,True,True,True,True,True,True,True,False,True,False,False,False,False,True,True,False,True,False,False,True,True,True,False,False,False,False,True,False,False,True,True,False,True,False,True,False,False,False,False,True,False,False,True,True,False,False,True,True,False,True,False,False,False,True,False,True,True,False,True,False,True,False,False,False,True,True,True,True,True,True,False,False,False,True,True,False,True,False,True,True], dtype = "bool")#candidate|3878|(1408,)|const|bool
call_3877 = relay.TupleGetItem(func_730_call(relay.reshape(const_3878.astype('bool'), [1408,])), 1)
call_3879 = relay.TupleGetItem(func_733_call(relay.reshape(const_3878.astype('bool'), [1408,])), 1)
uop_3889 = relay.atanh(const_3878.astype('float64')) # shape=(1408,)
func_1545_call = mod.get_global_var('func_1545')
func_1547_call = mutated_mod.get_global_var('func_1547')
call_3891 = func_1545_call()
call_3892 = func_1545_call()
func_1009_call = mod.get_global_var('func_1009')
func_1011_call = mutated_mod.get_global_var('func_1011')
call_3893 = func_1009_call()
call_3894 = func_1009_call()
output = relay.Tuple([call_3844,call_3873,call_3877,uop_3889,call_3891,call_3893,])
output2 = relay.Tuple([call_3845,call_3874,call_3879,uop_3889,call_3892,call_3894,])
func_3906 = relay.Function([], output)
mod['func_3906'] = func_3906
mod = relay.transform.InferType()(mod)
output = func_3906()
func_3907 = relay.Function([], output)
mutated_mod['func_3907'] = func_3907
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1227_call = mod.get_global_var('func_1227')
func_1228_call = mutated_mod.get_global_var('func_1228')
call_3916 = relay.TupleGetItem(func_1227_call(), 0)
call_3917 = relay.TupleGetItem(func_1228_call(), 0)
output = relay.Tuple([call_3916,])
output2 = relay.Tuple([call_3917,])
func_3925 = relay.Function([], output)
mod['func_3925'] = func_3925
mod = relay.transform.InferType()(mod)
output = func_3925()
func_3926 = relay.Function([], output)
mutated_mod['func_3926'] = func_3926
mutated_mod = relay.transform.InferType()(mutated_mod)
var_4032 = relay.var("var_4032", dtype = "float32", shape = (14, 7, 1))#candidate|4032|(14, 7, 1)|var|float32
uop_4033 = relay.rsqrt(var_4032.astype('float32')) # shape=(14, 7, 1)
func_2790_call = mod.get_global_var('func_2790')
func_2791_call = mutated_mod.get_global_var('func_2791')
call_4035 = relay.TupleGetItem(func_2790_call(), 0)
call_4036 = relay.TupleGetItem(func_2791_call(), 0)
func_2282_call = mod.get_global_var('func_2282')
func_2283_call = mutated_mod.get_global_var('func_2283')
call_4050 = relay.TupleGetItem(func_2282_call(), 1)
call_4051 = relay.TupleGetItem(func_2283_call(), 1)
var_4069 = relay.var("var_4069", dtype = "int8", shape = (11, 15, 13))#candidate|4069|(11, 15, 13)|var|int8
bop_4070 = relay.bitwise_and(call_4050.astype('uint32'), relay.reshape(var_4069.astype('uint32'), relay.shape_of(call_4050))) # shape=(11, 15, 13)
bop_4073 = relay.bitwise_and(call_4051.astype('uint32'), relay.reshape(var_4069.astype('uint32'), relay.shape_of(call_4051))) # shape=(11, 15, 13)
output = relay.Tuple([uop_4033,call_4035,bop_4070,])
output2 = relay.Tuple([uop_4033,call_4036,bop_4073,])
func_4078 = relay.Function([var_4032,var_4069,], output)
mod['func_4078'] = func_4078
mod = relay.transform.InferType()(mod)
mutated_mod['func_4078'] = func_4078
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4078_call = mutated_mod.get_global_var('func_4078')
var_4080 = relay.var("var_4080", dtype = "float32", shape = (14, 7, 1))#candidate|4080|(14, 7, 1)|var|float32
var_4081 = relay.var("var_4081", dtype = "int8", shape = (11, 15, 13))#candidate|4081|(11, 15, 13)|var|int8
call_4079 = func_4078_call(var_4080,var_4081,)
output = call_4079
func_4082 = relay.Function([var_4080,var_4081,], output)
mutated_mod['func_4082'] = func_4082
mutated_mod = relay.transform.InferType()(mutated_mod)
func_901_call = mod.get_global_var('func_901')
func_903_call = mutated_mod.get_global_var('func_903')
call_4128 = func_901_call()
call_4129 = func_901_call()
output = call_4128
output2 = call_4129
func_4143 = relay.Function([], output)
mod['func_4143'] = func_4143
mod = relay.transform.InferType()(mod)
mutated_mod['func_4143'] = func_4143
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4143_call = mutated_mod.get_global_var('func_4143')
call_4144 = func_4143_call()
output = call_4144
func_4145 = relay.Function([], output)
mutated_mod['func_4145'] = func_4145
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2856_call = mod.get_global_var('func_2856')
func_2857_call = mutated_mod.get_global_var('func_2857')
call_4149 = relay.TupleGetItem(func_2856_call(), 1)
call_4150 = relay.TupleGetItem(func_2857_call(), 1)
func_75_call = mod.get_global_var('func_75')
func_78_call = mutated_mod.get_global_var('func_78')
var_4163 = relay.var("var_4163", dtype = "int8", shape = (560,))#candidate|4163|(560,)|var|int8
call_4162 = func_75_call(relay.reshape(var_4163.astype('int8'), [4, 10, 14]), relay.reshape(var_4163.astype('int8'), [4, 10, 14]), )
call_4164 = func_75_call(relay.reshape(var_4163.astype('int8'), [4, 10, 14]), relay.reshape(var_4163.astype('int8'), [4, 10, 14]), )
var_4166 = relay.var("var_4166", dtype = "float32", shape = (11, 15, 13))#candidate|4166|(11, 15, 13)|var|float32
bop_4167 = relay.bitwise_or(call_4149.astype('uint64'), relay.reshape(var_4166.astype('uint64'), relay.shape_of(call_4149))) # shape=(11, 15, 13)
bop_4170 = relay.bitwise_or(call_4150.astype('uint64'), relay.reshape(var_4166.astype('uint64'), relay.shape_of(call_4150))) # shape=(11, 15, 13)
output = relay.Tuple([call_4162,var_4163,bop_4167,])
output2 = relay.Tuple([call_4164,var_4163,bop_4170,])
func_4171 = relay.Function([var_4163,var_4166,], output)
mod['func_4171'] = func_4171
mod = relay.transform.InferType()(mod)
var_4172 = relay.var("var_4172", dtype = "int8", shape = (560,))#candidate|4172|(560,)|var|int8
var_4173 = relay.var("var_4173", dtype = "float32", shape = (11, 15, 13))#candidate|4173|(11, 15, 13)|var|float32
output = func_4171(var_4172,var_4173,)
func_4174 = relay.Function([var_4172,var_4173,], output)
mutated_mod['func_4174'] = func_4174
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3320_call = mod.get_global_var('func_3320')
func_3322_call = mutated_mod.get_global_var('func_3322')
call_4176 = relay.TupleGetItem(func_3320_call(), 0)
call_4177 = relay.TupleGetItem(func_3322_call(), 0)
func_2516_call = mod.get_global_var('func_2516')
func_2520_call = mutated_mod.get_global_var('func_2520')
const_4198 = relay.const(5, dtype = "int8")#candidate|4198|()|const|int8
var_4199 = relay.var("var_4199", dtype = "int8", shape = (72,))#candidate|4199|(72,)|var|int8
call_4197 = relay.TupleGetItem(func_2516_call(relay.reshape(const_4198.astype('int8'), []), relay.reshape(var_4199.astype('int8'), [4, 6, 3]), ), 1)
call_4200 = relay.TupleGetItem(func_2520_call(relay.reshape(const_4198.astype('int8'), []), relay.reshape(var_4199.astype('int8'), [4, 6, 3]), ), 1)
output = relay.Tuple([call_4176,call_4197,const_4198,var_4199,])
output2 = relay.Tuple([call_4177,call_4200,const_4198,var_4199,])
func_4212 = relay.Function([var_4199,], output)
mod['func_4212'] = func_4212
mod = relay.transform.InferType()(mod)
mutated_mod['func_4212'] = func_4212
mutated_mod = relay.transform.InferType()(mutated_mod)
var_4213 = relay.var("var_4213", dtype = "int8", shape = (72,))#candidate|4213|(72,)|var|int8
func_4212_call = mutated_mod.get_global_var('func_4212')
call_4214 = func_4212_call(var_4213)
output = call_4214
func_4215 = relay.Function([var_4213], output)
mutated_mod['func_4215'] = func_4215
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2467_call = mod.get_global_var('func_2467')
func_2469_call = mutated_mod.get_global_var('func_2469')
call_4349 = func_2467_call()
call_4350 = func_2467_call()
output = call_4349
output2 = call_4350
func_4410 = relay.Function([], output)
mod['func_4410'] = func_4410
mod = relay.transform.InferType()(mod)
output = func_4410()
func_4411 = relay.Function([], output)
mutated_mod['func_4411'] = func_4411
mutated_mod = relay.transform.InferType()(mutated_mod)
var_4426 = relay.var("var_4426", dtype = "float64", shape = (12, 4, 12))#candidate|4426|(12, 4, 12)|var|float64
uop_4427 = relay.cosh(var_4426.astype('float64')) # shape=(12, 4, 12)
var_4438 = relay.var("var_4438", dtype = "float64", shape = (12, 4, 12))#candidate|4438|(12, 4, 12)|var|float64
bop_4439 = relay.bitwise_xor(uop_4427.astype('uint16'), relay.reshape(var_4438.astype('uint16'), relay.shape_of(uop_4427))) # shape=(12, 4, 12)
output = bop_4439
output2 = bop_4439
func_4445 = relay.Function([var_4426,var_4438,], output)
mod['func_4445'] = func_4445
mod = relay.transform.InferType()(mod)
var_4446 = relay.var("var_4446", dtype = "float64", shape = (12, 4, 12))#candidate|4446|(12, 4, 12)|var|float64
var_4447 = relay.var("var_4447", dtype = "float64", shape = (12, 4, 12))#candidate|4447|(12, 4, 12)|var|float64
output = func_4445(var_4446,var_4447,)
func_4448 = relay.Function([var_4446,var_4447,], output)
mutated_mod['func_4448'] = func_4448
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2775_call = mod.get_global_var('func_2775')
func_2777_call = mutated_mod.get_global_var('func_2777')
call_4464 = relay.TupleGetItem(func_2775_call(), 1)
call_4465 = relay.TupleGetItem(func_2777_call(), 1)
uop_4471 = relay.acos(call_4464.astype('float32')) # shape=(13, 9, 14)
uop_4473 = relay.acos(call_4465.astype('float32')) # shape=(13, 9, 14)
func_3575_call = mod.get_global_var('func_3575')
func_3576_call = mutated_mod.get_global_var('func_3576')
call_4480 = func_3575_call()
call_4481 = func_3575_call()
output = relay.Tuple([uop_4471,call_4480,])
output2 = relay.Tuple([uop_4473,call_4481,])
func_4484 = relay.Function([], output)
mod['func_4484'] = func_4484
mod = relay.transform.InferType()(mod)
output = func_4484()
func_4485 = relay.Function([], output)
mutated_mod['func_4485'] = func_4485
mutated_mod = relay.transform.InferType()(mutated_mod)
var_4536 = relay.var("var_4536", dtype = "float64", shape = (12, 14, 13))#candidate|4536|(12, 14, 13)|var|float64
uop_4537 = relay.asin(var_4536.astype('float64')) # shape=(12, 14, 13)
func_2084_call = mod.get_global_var('func_2084')
func_2086_call = mutated_mod.get_global_var('func_2086')
const_4541 = relay.const([[-8.534887],[-4.390211],[-0.876563],[6.386704],[-2.471516],[4.043382],[-3.681793],[-7.959915],[5.969289],[4.098666],[-6.872360],[2.412664],[-7.752945],[0.578934],[-2.492258],[-0.345894],[6.661933],[9.785462],[-7.546442],[-1.751654],[-3.378636],[-3.515998],[-0.117991],[-7.639376],[-7.022411],[-3.319896],[9.559207],[7.763722],[-4.086313],[3.886061],[7.409894],[3.145376],[-7.631029],[-6.932017],[4.097399],[5.950381],[-8.434263],[-5.836494],[7.900800],[-7.215646],[0.096406],[-3.484305],[-3.696875],[-7.535301],[9.257915],[8.733712],[-7.454743],[9.592083],[4.770502],[4.284677],[-2.320333],[-3.661915],[-6.726401],[-0.651638],[8.280835],[-1.566780],[7.899174],[-3.022744],[-0.944944],[-4.229829],[-7.588422],[-6.274019],[7.327585],[0.808069],[8.182361],[8.495591],[8.973937],[-0.268335],[5.954622],[8.110001]], dtype = "float64")#candidate|4541|(70, 1)|const|float64
call_4540 = relay.TupleGetItem(func_2084_call(relay.reshape(const_4541.astype('float64'), [7, 10, 1])), 1)
call_4542 = relay.TupleGetItem(func_2086_call(relay.reshape(const_4541.astype('float64'), [7, 10, 1])), 1)
output = relay.Tuple([uop_4537,call_4540,const_4541,])
output2 = relay.Tuple([uop_4537,call_4542,const_4541,])
func_4544 = relay.Function([var_4536,], output)
mod['func_4544'] = func_4544
mod = relay.transform.InferType()(mod)
var_4545 = relay.var("var_4545", dtype = "float64", shape = (12, 14, 13))#candidate|4545|(12, 14, 13)|var|float64
output = func_4544(var_4545)
func_4546 = relay.Function([var_4545], output)
mutated_mod['func_4546'] = func_4546
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2227_call = mod.get_global_var('func_2227')
func_2228_call = mutated_mod.get_global_var('func_2228')
call_4607 = relay.TupleGetItem(func_2227_call(), 0)
call_4608 = relay.TupleGetItem(func_2228_call(), 0)
output = relay.Tuple([call_4607,])
output2 = relay.Tuple([call_4608,])
func_4621 = relay.Function([], output)
mod['func_4621'] = func_4621
mod = relay.transform.InferType()(mod)
mutated_mod['func_4621'] = func_4621
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4621_call = mutated_mod.get_global_var('func_4621')
call_4622 = func_4621_call()
output = call_4622
func_4623 = relay.Function([], output)
mutated_mod['func_4623'] = func_4623
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1945_call = mod.get_global_var('func_1945')
func_1946_call = mutated_mod.get_global_var('func_1946')
call_4670 = func_1945_call()
call_4671 = func_1945_call()
var_4691 = relay.var("var_4691", dtype = "int64", shape = (12, 6, 8))#candidate|4691|(12, 6, 8)|var|int64
bop_4692 = relay.bitwise_xor(call_4670.astype('uint32'), relay.reshape(var_4691.astype('uint32'), relay.shape_of(call_4670))) # shape=(12, 6, 8)
bop_4695 = relay.bitwise_xor(call_4671.astype('uint32'), relay.reshape(var_4691.astype('uint32'), relay.shape_of(call_4671))) # shape=(12, 6, 8)
output = relay.Tuple([bop_4692,])
output2 = relay.Tuple([bop_4695,])
func_4699 = relay.Function([var_4691,], output)
mod['func_4699'] = func_4699
mod = relay.transform.InferType()(mod)
var_4700 = relay.var("var_4700", dtype = "int64", shape = (12, 6, 8))#candidate|4700|(12, 6, 8)|var|int64
output = func_4699(var_4700)
func_4701 = relay.Function([var_4700], output)
mutated_mod['func_4701'] = func_4701
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2818_call = mod.get_global_var('func_2818')
func_2819_call = mutated_mod.get_global_var('func_2819')
call_4818 = relay.TupleGetItem(func_2818_call(), 0)
call_4819 = relay.TupleGetItem(func_2819_call(), 0)
output = relay.Tuple([call_4818,])
output2 = relay.Tuple([call_4819,])
func_4829 = relay.Function([], output)
mod['func_4829'] = func_4829
mod = relay.transform.InferType()(mod)
mutated_mod['func_4829'] = func_4829
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4829_call = mutated_mod.get_global_var('func_4829')
call_4830 = func_4829_call()
output = call_4830
func_4831 = relay.Function([], output)
mutated_mod['func_4831'] = func_4831
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4143_call = mod.get_global_var('func_4143')
func_4145_call = mutated_mod.get_global_var('func_4145')
call_4915 = func_4143_call()
call_4916 = func_4143_call()
func_2227_call = mod.get_global_var('func_2227')
func_2228_call = mutated_mod.get_global_var('func_2228')
call_4917 = relay.TupleGetItem(func_2227_call(), 0)
call_4918 = relay.TupleGetItem(func_2228_call(), 0)
uop_4924 = relay.sigmoid(call_4915.astype('float32')) # shape=(12, 6, 8)
uop_4926 = relay.sigmoid(call_4916.astype('float32')) # shape=(12, 6, 8)
output = relay.Tuple([call_4917,uop_4924,])
output2 = relay.Tuple([call_4918,uop_4926,])
func_4931 = relay.Function([], output)
mod['func_4931'] = func_4931
mod = relay.transform.InferType()(mod)
mutated_mod['func_4931'] = func_4931
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4931_call = mutated_mod.get_global_var('func_4931')
call_4932 = func_4931_call()
output = call_4932
func_4933 = relay.Function([], output)
mutated_mod['func_4933'] = func_4933
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3555_call = mod.get_global_var('func_3555')
func_3556_call = mutated_mod.get_global_var('func_3556')
call_4940 = relay.TupleGetItem(func_3555_call(), 0)
call_4941 = relay.TupleGetItem(func_3556_call(), 0)
output = call_4940
output2 = call_4941
func_4953 = relay.Function([], output)
mod['func_4953'] = func_4953
mod = relay.transform.InferType()(mod)
mutated_mod['func_4953'] = func_4953
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4953_call = mutated_mod.get_global_var('func_4953')
call_4954 = func_4953_call()
output = call_4954
func_4955 = relay.Function([], output)
mutated_mod['func_4955'] = func_4955
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4484_call = mod.get_global_var('func_4484')
func_4485_call = mutated_mod.get_global_var('func_4485')
call_4972 = relay.TupleGetItem(func_4484_call(), 0)
call_4973 = relay.TupleGetItem(func_4485_call(), 0)
output = call_4972
output2 = call_4973
func_4974 = relay.Function([], output)
mod['func_4974'] = func_4974
mod = relay.transform.InferType()(mod)
output = func_4974()
func_4975 = relay.Function([], output)
mutated_mod['func_4975'] = func_4975
mutated_mod = relay.transform.InferType()(mutated_mod)
const_5012 = relay.const([[[False,True,True,True,False,True,False,True]],[[False,False,False,True,True,False,False,True]],[[True,True,False,True,True,False,True,True]],[[True,True,False,False,True,True,False,True]],[[False,True,True,True,False,True,False,False]],[[False,False,True,True,False,False,False,True]],[[True,True,True,True,True,False,False,False]],[[False,False,False,True,True,False,True,True]]], dtype = "bool")#candidate|5012|(8, 1, 8)|const|bool
var_5013 = relay.var("var_5013", dtype = "bool", shape = (8, 14, 8))#candidate|5013|(8, 14, 8)|var|bool
bop_5014 = relay.logical_or(const_5012.astype('bool'), var_5013.astype('bool')) # shape=(8, 14, 8)
var_5017 = relay.var("var_5017", dtype = "bool", shape = (8, 14, 8))#candidate|5017|(8, 14, 8)|var|bool
bop_5018 = relay.greater(var_5013.astype('bool'), relay.reshape(var_5017.astype('bool'), relay.shape_of(var_5013))) # shape=(8, 14, 8)
uop_5021 = relay.tan(var_5013.astype('float32')) # shape=(8, 14, 8)
func_2818_call = mod.get_global_var('func_2818')
func_2819_call = mutated_mod.get_global_var('func_2819')
call_5034 = relay.TupleGetItem(func_2818_call(), 0)
call_5035 = relay.TupleGetItem(func_2819_call(), 0)
output = relay.Tuple([bop_5014,bop_5018,uop_5021,call_5034,])
output2 = relay.Tuple([bop_5014,bop_5018,uop_5021,call_5035,])
func_5048 = relay.Function([var_5013,var_5017,], output)
mod['func_5048'] = func_5048
mod = relay.transform.InferType()(mod)
var_5049 = relay.var("var_5049", dtype = "bool", shape = (8, 14, 8))#candidate|5049|(8, 14, 8)|var|bool
var_5050 = relay.var("var_5050", dtype = "bool", shape = (8, 14, 8))#candidate|5050|(8, 14, 8)|var|bool
output = func_5048(var_5049,var_5050,)
func_5051 = relay.Function([var_5049,var_5050,], output)
mutated_mod['func_5051'] = func_5051
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1545_call = mod.get_global_var('func_1545')
func_1547_call = mutated_mod.get_global_var('func_1547')
call_5055 = func_1545_call()
call_5056 = func_1545_call()
output = call_5055
output2 = call_5056
func_5063 = relay.Function([], output)
mod['func_5063'] = func_5063
mod = relay.transform.InferType()(mod)
output = func_5063()
func_5064 = relay.Function([], output)
mutated_mod['func_5064'] = func_5064
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2856_call = mod.get_global_var('func_2856')
func_2857_call = mutated_mod.get_global_var('func_2857')
call_5125 = relay.TupleGetItem(func_2856_call(), 0)
call_5126 = relay.TupleGetItem(func_2857_call(), 0)
output = call_5125
output2 = call_5126
func_5128 = relay.Function([], output)
mod['func_5128'] = func_5128
mod = relay.transform.InferType()(mod)
mutated_mod['func_5128'] = func_5128
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5128_call = mutated_mod.get_global_var('func_5128')
call_5129 = func_5128_call()
output = call_5129
func_5130 = relay.Function([], output)
mutated_mod['func_5130'] = func_5130
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3163_call = mod.get_global_var('func_3163')
func_3165_call = mutated_mod.get_global_var('func_3165')
call_5262 = relay.TupleGetItem(func_3163_call(), 0)
call_5263 = relay.TupleGetItem(func_3165_call(), 0)
var_5268 = relay.var("var_5268", dtype = "float32", shape = (2145,))#candidate|5268|(2145,)|var|float32
bop_5269 = relay.power(call_5262.astype('float64'), relay.reshape(var_5268.astype('float64'), relay.shape_of(call_5262))) # shape=(2145,)
bop_5272 = relay.power(call_5263.astype('float64'), relay.reshape(var_5268.astype('float64'), relay.shape_of(call_5263))) # shape=(2145,)
bop_5281 = relay.bitwise_or(bop_5269.astype('int64'), relay.reshape(var_5268.astype('int64'), relay.shape_of(bop_5269))) # shape=(2145,)
bop_5284 = relay.bitwise_or(bop_5272.astype('int64'), relay.reshape(var_5268.astype('int64'), relay.shape_of(bop_5272))) # shape=(2145,)
func_901_call = mod.get_global_var('func_901')
func_903_call = mutated_mod.get_global_var('func_903')
call_5288 = func_901_call()
call_5289 = func_901_call()
uop_5291 = relay.cos(call_5262.astype('float32')) # shape=(2145,)
uop_5293 = relay.cos(call_5263.astype('float32')) # shape=(2145,)
func_1902_call = mod.get_global_var('func_1902')
func_1904_call = mutated_mod.get_global_var('func_1904')
var_5296 = relay.var("var_5296", dtype = "float32", shape = (756,))#candidate|5296|(756,)|var|float32
call_5295 = relay.TupleGetItem(func_1902_call(relay.reshape(var_5296.astype('float32'), [7, 12, 9])), 1)
call_5297 = relay.TupleGetItem(func_1904_call(relay.reshape(var_5296.astype('float32'), [7, 12, 9])), 1)
func_5048_call = mod.get_global_var('func_5048')
func_5051_call = mutated_mod.get_global_var('func_5051')
var_5308 = relay.var("var_5308", dtype = "bool", shape = (896,))#candidate|5308|(896,)|var|bool
call_5307 = relay.TupleGetItem(func_5048_call(relay.reshape(var_5308.astype('bool'), [8, 14, 8]), relay.reshape(var_5308.astype('bool'), [8, 14, 8]), ), 3)
call_5309 = relay.TupleGetItem(func_5051_call(relay.reshape(var_5308.astype('bool'), [8, 14, 8]), relay.reshape(var_5308.astype('bool'), [8, 14, 8]), ), 3)
output = relay.Tuple([bop_5281,call_5288,uop_5291,call_5295,var_5296,call_5307,var_5308,])
output2 = relay.Tuple([bop_5284,call_5289,uop_5293,call_5297,var_5296,call_5309,var_5308,])
func_5311 = relay.Function([var_5268,var_5296,var_5308,], output)
mod['func_5311'] = func_5311
mod = relay.transform.InferType()(mod)
mutated_mod['func_5311'] = func_5311
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5311_call = mutated_mod.get_global_var('func_5311')
var_5313 = relay.var("var_5313", dtype = "float32", shape = (2145,))#candidate|5313|(2145,)|var|float32
var_5314 = relay.var("var_5314", dtype = "float32", shape = (756,))#candidate|5314|(756,)|var|float32
var_5315 = relay.var("var_5315", dtype = "bool", shape = (896,))#candidate|5315|(896,)|var|bool
call_5312 = func_5311_call(var_5313,var_5314,var_5315,)
output = call_5312
func_5316 = relay.Function([var_5313,var_5314,var_5315,], output)
mutated_mod['func_5316'] = func_5316
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2227_call = mod.get_global_var('func_2227')
func_2228_call = mutated_mod.get_global_var('func_2228')
call_5327 = relay.TupleGetItem(func_2227_call(), 0)
call_5328 = relay.TupleGetItem(func_2228_call(), 0)
func_3399_call = mod.get_global_var('func_3399')
func_3401_call = mutated_mod.get_global_var('func_3401')
call_5330 = relay.TupleGetItem(func_3399_call(), 1)
call_5331 = relay.TupleGetItem(func_3401_call(), 1)
output = relay.Tuple([call_5327,call_5330,])
output2 = relay.Tuple([call_5328,call_5331,])
func_5367 = relay.Function([], output)
mod['func_5367'] = func_5367
mod = relay.transform.InferType()(mod)
output = func_5367()
func_5368 = relay.Function([], output)
mutated_mod['func_5368'] = func_5368
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3575_call = mod.get_global_var('func_3575')
func_3576_call = mutated_mod.get_global_var('func_3576')
call_5381 = func_3575_call()
call_5382 = func_3575_call()
output = call_5381
output2 = call_5382
func_5392 = relay.Function([], output)
mod['func_5392'] = func_5392
mod = relay.transform.InferType()(mod)
output = func_5392()
func_5393 = relay.Function([], output)
mutated_mod['func_5393'] = func_5393
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3163_call = mod.get_global_var('func_3163')
func_3165_call = mutated_mod.get_global_var('func_3165')
call_5428 = relay.TupleGetItem(func_3163_call(), 0)
call_5429 = relay.TupleGetItem(func_3165_call(), 0)
func_1608_call = mod.get_global_var('func_1608')
func_1611_call = mutated_mod.get_global_var('func_1611')
const_5440 = relay.const([[-0.512561,-6.909966,-7.028219,-4.791646,-6.234085,-2.748111,-3.137917,1.943720,-6.231779,1.507286,-2.008669,-3.541937,-1.527940,-8.476909,-3.981571,-3.041628,-4.659674,-5.826191,-4.778137,-0.215878,-1.466231,4.790969,2.461488,-6.005231,-6.155260,-4.901454,8.080982,-3.650721,-8.525498,-5.996840,9.422452,9.911972],[-3.798121,-5.063232,-3.765944,8.679357,-3.856402,2.088302,-8.189220,8.827528,-1.482790,2.146343,-8.014142,6.011353,5.178886,-7.568942,-1.711234,-5.484774,4.139476,6.839375,-7.463737,-1.202393,3.217851,-1.864224,-3.085247,6.999683,3.063795,-3.230253,-0.360153,-4.167637,7.004044,-6.018390,1.605777,-4.265858],[-6.984260,-3.225800,9.644963,1.182827,0.472132,-0.717332,6.013189,-3.267340,-4.019293,3.432629,-9.713565,-8.006543,-5.867282,-2.078137,-5.389804,-6.978376,-3.461701,3.944466,6.925106,8.385734,-1.337686,-2.143605,3.810691,1.604987,1.872219,-0.239620,-3.047587,-8.434637,-1.447561,-6.444433,3.364605,5.283898],[-7.932698,6.175653,4.449690,-0.066887,-8.139712,3.068119,8.195178,-4.307953,3.878827,-6.806820,0.111196,-7.058819,0.883833,-0.496704,5.325446,9.457157,-8.510151,-5.796894,7.989404,-0.247664,2.801919,6.299995,-9.459462,-5.571486,-8.818847,0.903181,3.316138,0.117643,5.246774,7.420236,0.027372,-7.790754],[-1.595473,5.077947,8.094965,0.079035,-5.395613,7.626619,-1.827908,-7.693888,-1.550925,9.175073,-8.397463,3.685274,-9.015591,-5.133905,6.626165,-3.660428,9.526852,1.928136,5.312972,-8.808677,5.056147,-1.233157,0.778912,-8.472693,-2.640704,1.439524,1.860257,-4.483001,2.459373,8.651845,5.011047,-1.935557],[-2.707635,8.398164,1.069397,3.310106,4.940568,-6.367399,-5.381940,3.800206,-4.662387,1.476038,6.621527,-0.611170,1.924591,9.128077,5.730525,5.058345,9.752898,8.958189,-8.543808,5.043078,-6.946256,-1.582639,-9.392156,2.127332,-6.144259,-0.410956,9.538977,3.103066,9.940992,9.895792,-3.839304,-7.098176],[-5.206467,-9.780348,-2.643974,-9.350217,-2.213489,5.979888,-8.154736,8.782775,-4.792291,-7.532028,-2.267253,-5.572061,-6.225277,-0.778451,-0.844787,-7.701022,-8.430036,-1.071259,-4.486140,2.447095,6.072341,-3.180214,-8.910162,4.291811,5.754118,-3.459548,8.919507,2.593527,-7.107566,-9.785267,-5.825292,4.857634],[-3.897911,9.316616,8.767628,3.771183,-7.640600,-8.119377,2.547654,1.713586,-3.713643,0.998761,-3.611542,0.267786,-9.786800,4.250655,5.567649,-4.785421,-4.642406,-3.146449,-8.394954,2.293236,0.282963,9.616791,5.928513,-8.444417,-4.045744,7.415649,-9.268043,-2.029029,-7.978950,-2.482306,-9.117641,3.246783],[-6.332846,-6.005145,3.344348,5.237003,-5.214461,-4.750403,4.106815,8.451618,-8.108216,-0.621446,6.941691,7.486981,4.546122,0.206494,-4.342001,-8.022186,5.173918,-4.094601,-3.732092,1.981376,-2.440602,-3.783680,-5.280017,-0.801726,-3.539470,-2.217765,8.715084,-0.573777,9.267616,-5.337460,-7.519583,-8.735931],[-9.571199,9.867446,8.396430,0.479605,-8.677531,9.585149,0.138247,6.509190,8.108359,9.838143,3.123953,6.961475,-3.735050,5.529392,-5.430350,-2.238801,-0.534759,-1.800220,-6.497492,9.367383,0.394217,-5.071913,-3.575295,8.688651,2.858870,-4.321671,-4.316918,6.191698,-5.649650,3.313170,-1.457713,3.869529],[0.893941,-2.091607,9.728474,-8.903648,3.960908,3.656176,-5.613015,9.577362,0.320281,8.370924,0.541353,-7.605403,5.664168,-5.012651,4.708085,-0.974001,4.919467,4.181447,-3.816660,-7.409623,-7.554646,-7.935873,-5.363151,-3.287337,1.455139,1.476766,-4.504619,-8.117851,9.007828,7.044130,-1.810895,-3.068742],[4.549993,-4.205163,4.948554,8.923732,-4.767902,0.590555,5.053944,8.334184,9.647004,0.447917,-7.197469,5.015236,-7.129342,1.631838,-9.498561,8.394121,1.890467,4.999952,-3.234869,-7.707439,-2.858073,7.274209,4.944336,8.530021,4.505232,-3.979096,-4.006347,8.726293,-7.976450,-6.352641,-8.096114,-7.180705]], dtype = "float64")#candidate|5440|(12, 32)|const|float64
call_5439 = func_1608_call(relay.reshape(const_5440.astype('float64'), [2, 16, 12]))
call_5441 = func_1608_call(relay.reshape(const_5440.astype('float64'), [2, 16, 12]))
var_5461 = relay.var("var_5461", dtype = "float64", shape = (12, 32))#candidate|5461|(12, 32)|var|float64
bop_5462 = relay.equal(const_5440.astype('bool'), relay.reshape(var_5461.astype('bool'), relay.shape_of(const_5440))) # shape=(12, 32)
func_3399_call = mod.get_global_var('func_3399')
func_3401_call = mutated_mod.get_global_var('func_3401')
call_5475 = relay.TupleGetItem(func_3399_call(), 1)
call_5476 = relay.TupleGetItem(func_3401_call(), 1)
func_647_call = mod.get_global_var('func_647')
func_650_call = mutated_mod.get_global_var('func_650')
call_5480 = relay.TupleGetItem(func_647_call(relay.reshape(call_5428.astype('int8'), [2145,])), 0)
call_5481 = relay.TupleGetItem(func_650_call(relay.reshape(call_5428.astype('int8'), [2145,])), 0)
output = relay.Tuple([call_5428,call_5439,bop_5462,call_5475,call_5480,])
output2 = relay.Tuple([call_5429,call_5441,bop_5462,call_5476,call_5481,])
func_5485 = relay.Function([var_5461,], output)
mod['func_5485'] = func_5485
mod = relay.transform.InferType()(mod)
mutated_mod['func_5485'] = func_5485
mutated_mod = relay.transform.InferType()(mutated_mod)
var_5486 = relay.var("var_5486", dtype = "float64", shape = (12, 32))#candidate|5486|(12, 32)|var|float64
func_5485_call = mutated_mod.get_global_var('func_5485')
call_5487 = func_5485_call(var_5486)
output = call_5487
func_5488 = relay.Function([var_5486], output)
mutated_mod['func_5488'] = func_5488
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1638_call = mod.get_global_var('func_1638')
func_1639_call = mutated_mod.get_global_var('func_1639')
call_5518 = relay.TupleGetItem(func_1638_call(), 0)
call_5519 = relay.TupleGetItem(func_1639_call(), 0)
func_2946_call = mod.get_global_var('func_2946')
func_2948_call = mutated_mod.get_global_var('func_2948')
call_5533 = relay.TupleGetItem(func_2946_call(), 1)
call_5534 = relay.TupleGetItem(func_2948_call(), 1)
func_4829_call = mod.get_global_var('func_4829')
func_4831_call = mutated_mod.get_global_var('func_4831')
call_5535 = relay.TupleGetItem(func_4829_call(), 0)
call_5536 = relay.TupleGetItem(func_4831_call(), 0)
output = relay.Tuple([call_5518,call_5533,call_5535,])
output2 = relay.Tuple([call_5519,call_5534,call_5536,])
func_5539 = relay.Function([], output)
mod['func_5539'] = func_5539
mod = relay.transform.InferType()(mod)
output = func_5539()
func_5540 = relay.Function([], output)
mutated_mod['func_5540'] = func_5540
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5128_call = mod.get_global_var('func_5128')
func_5130_call = mutated_mod.get_global_var('func_5130')
call_5554 = func_5128_call()
call_5555 = func_5128_call()
output = call_5554
output2 = call_5555
func_5560 = relay.Function([], output)
mod['func_5560'] = func_5560
mod = relay.transform.InferType()(mod)
mutated_mod['func_5560'] = func_5560
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5560_call = mutated_mod.get_global_var('func_5560')
call_5561 = func_5560_call()
output = call_5561
func_5562 = relay.Function([], output)
mutated_mod['func_5562'] = func_5562
mutated_mod = relay.transform.InferType()(mutated_mod)
var_5576 = relay.var("var_5576", dtype = "uint64", shape = (3, 2, 2))#candidate|5576|(3, 2, 2)|var|uint64
const_5577 = relay.const([[[-4,2],[-5,6]],[[-8,6],[-1,-10]],[[-3,-8],[2,6]]], dtype = "uint64")#candidate|5577|(3, 2, 2)|const|uint64
bop_5578 = relay.right_shift(var_5576.astype('uint64'), relay.reshape(const_5577.astype('uint64'), relay.shape_of(var_5576))) # shape=(3, 2, 2)
uop_5583 = relay.erf(bop_5578.astype('float32')) # shape=(3, 2, 2)
bop_5585 = relay.power(uop_5583.astype('float64'), relay.reshape(bop_5578.astype('float64'), relay.shape_of(uop_5583))) # shape=(3, 2, 2)
output = bop_5585
output2 = bop_5585
func_5589 = relay.Function([var_5576,], output)
mod['func_5589'] = func_5589
mod = relay.transform.InferType()(mod)
var_5590 = relay.var("var_5590", dtype = "uint64", shape = (3, 2, 2))#candidate|5590|(3, 2, 2)|var|uint64
output = func_5589(var_5590)
func_5591 = relay.Function([var_5590], output)
mutated_mod['func_5591'] = func_5591
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3399_call = mod.get_global_var('func_3399')
func_3401_call = mutated_mod.get_global_var('func_3401')
call_5677 = relay.TupleGetItem(func_3399_call(), 0)
call_5678 = relay.TupleGetItem(func_3401_call(), 0)
func_793_call = mod.get_global_var('func_793')
func_794_call = mutated_mod.get_global_var('func_794')
call_5680 = func_793_call()
call_5681 = func_793_call()
output = relay.Tuple([call_5677,call_5680,])
output2 = relay.Tuple([call_5678,call_5681,])
func_5698 = relay.Function([], output)
mod['func_5698'] = func_5698
mod = relay.transform.InferType()(mod)
output = func_5698()
func_5699 = relay.Function([], output)
mutated_mod['func_5699'] = func_5699
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4931_call = mod.get_global_var('func_4931')
func_4933_call = mutated_mod.get_global_var('func_4933')
call_5718 = relay.TupleGetItem(func_4931_call(), 0)
call_5719 = relay.TupleGetItem(func_4933_call(), 0)
output = relay.Tuple([call_5718,])
output2 = relay.Tuple([call_5719,])
func_5730 = relay.Function([], output)
mod['func_5730'] = func_5730
mod = relay.transform.InferType()(mod)
mutated_mod['func_5730'] = func_5730
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5730_call = mutated_mod.get_global_var('func_5730')
call_5731 = func_5730_call()
output = call_5731
func_5732 = relay.Function([], output)
mutated_mod['func_5732'] = func_5732
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5730_call = mod.get_global_var('func_5730')
func_5732_call = mutated_mod.get_global_var('func_5732')
call_5791 = relay.TupleGetItem(func_5730_call(), 0)
call_5792 = relay.TupleGetItem(func_5732_call(), 0)
func_4171_call = mod.get_global_var('func_4171')
func_4174_call = mutated_mod.get_global_var('func_4174')
const_5794 = relay.const([-2,6,4,-3,-1,4,10,-9,-8,-9,-6,8,1,-6,-10,10,5,7,3,6,1,-5,-3,9,1,-6,8,6,5,6,2,7,-5,9,-4,-1,6,-7,-2,10,6,-10,-1,-4,10,-2,-7,2,-3,9,7,-4,9,3,8,5,-1,-10,3,9,-5,10,9,-3,2,-10,3,-1,5,-4,-7,-9,-5,-3,5,6,6,-10,-5,-7,-7,5,3,4,9,-3,8,7,2,-4,5,-5,-3,5,-1,6,-1,10,6,-4,-4,3,8,5,-3,9,10,-8,10,-2,8,-9,-10,5,-6,1,5,-2,-6,-4,-8,7,-6,1,-2,9,3,-1,8,9,6,-4,7,-5,-6,2,-2,4,-7,8,-9,1,4,7,9,-7,-9,7,8,-9,-1,-8,3,2,6,9,-6,9,4,1,-3,10,9,6,-7,4,5,10,-6,7,-4,-9,-9,-8,6,8,-8,-1,-6,-6,1,1,-4,5,-5,1,-3,10,3,-6,-7,-10,3,-4,8,1,2,7,-3,5,7,7,-10,-1,-5,2,1,1,-3,2,6,9,5,5,8,-8,-10,4,-2,-3,-10,-10,-8,5,-5,1,10,3,-7,3,-10,2,-6,2,-1,-6,1,-4,-9,10,-5,9,-2,1,1,-9,-5,-5,-9,-10,1,3,-5,2,-5,-10,-5,8,-9,1,4,-5,2,1,-6,-2,-8,10,2,-7,-8,1,-6,-5,9,7,5,-2,9,-8,4,-1,-5,-8,-6,-5,-4,10,-5,-4,-10,-6,2,-1,9,5,9,10,10,-8,6,1,-10,-9,7,-7,-6,-1,1,9,-3,-7,-2,-4,-4,-9,8,10,2,-10,7,-5,2,-3,-1,-5,9,-7,-7,-3,7,-3,3,-2,-5,5,2,6,7,-7,2,-5,3,9,-6,3,6,8,-9,4,5,-5,9,-2,-1,-9,10,3,7,-3,6,-8,-10,-2,9,5,5,-2,3,5,3,-8,-7,6,3,-8,-5,-1,-5,8,-1,7,-2,2,-2,-9,2,-10,8,-4,-7,-10,-1,1,-8,-9,9,4,-6,7,7,5,-5,8,-2,4,9,4,-7,-5,4,-3,-9,-6,-7,-2,-1,4,1,9,8,-5,-7,4,-5,-10,-2,-4,4,-3,5,5,-2,3,-3,-9,6,-6,4,-1,-1,-10,6,4,-5,10,4,-7,-4,-10,-3,-8,4,3,7,6,5,-3,-1,-2,5,8,7,6,6,-2,4,7,5,-5,-4,-10,-9,1,-9,-10,-4,4,4,7,-5,-10,-9,8,-6,4,-7,10,-7,-8,5,1,-6,3,6,-1,-8,-3,-7,9,-5,5,9,-10,8,3,5,5,10,3,-9,-8,-5,-2,-3,6,-5,-1,-8,-9,8,2,-5,-5,4,-2,2,9,-10,-10,1,-10,-8,-1,10,3,-3,1,1,-4,4,9,5,-3,-9,5,-10,-8,-5,-3,2,-3,10,-4,10,7,3,1,-3,10], dtype = "int8")#candidate|5794|(560,)|const|int8
const_5795 = relay.const([[5.231216,5.393361,3.052830],[-2.864649,-8.562439,4.434676],[-6.105940,7.646458,-0.903775],[-7.349733,2.764867,-3.599694],[3.596067,-3.539446,4.190127],[-3.007612,0.453893,-8.962855],[-3.989677,3.209148,-5.759703],[-7.162952,7.654931,3.595476],[-0.200300,-1.904879,-8.491874],[5.170258,9.942701,-4.556830],[-0.197781,7.092475,-3.437557],[-2.203612,-9.839152,1.621047],[-2.344662,0.177593,-8.275617],[-2.499108,-1.639385,-1.632905],[9.613819,-0.331040,9.521657],[7.621297,1.799138,4.318263],[-9.898606,-7.542682,6.051017],[-6.480733,6.377501,-1.317278],[-2.604811,-1.528352,1.892513],[7.772188,-6.963887,7.127339],[-8.818963,1.476958,8.654883],[-4.671882,6.063228,-9.157595],[-2.140777,-9.285705,-4.806041],[4.240308,0.066942,0.598328],[8.639911,8.845100,-5.352036],[7.952455,-3.187229,-5.167547],[-7.777903,5.902145,6.088005],[-0.435507,-4.631668,0.505210],[5.082315,1.603492,5.397520],[-5.248889,-0.680842,-7.591458],[-9.874051,8.463189,1.129412],[4.513981,-7.060238,8.729155],[-3.086804,-1.811949,-0.699463],[-5.062788,-3.834315,5.950751],[-9.692675,-9.287345,3.156707],[-0.436183,2.617479,-1.808113],[1.055353,-4.551669,9.321727],[-1.401292,6.753939,-3.682018],[-8.848698,-9.337365,0.579208],[-6.943424,6.573519,-3.444791],[-5.792645,-6.202051,-6.034186],[-0.575504,-8.241300,-3.414718],[-0.461210,-3.228275,2.130936],[4.553496,1.955568,-8.892790],[9.250529,-4.797974,-2.459133],[-9.054533,2.917465,-6.599638],[6.053897,-5.416213,1.147161],[8.393366,7.158561,1.248346],[4.337606,-7.231075,-5.240261],[3.612639,-6.146465,-3.344135],[-0.392066,2.128790,-4.220797],[9.213053,-4.998614,8.535641],[-7.516350,0.700584,-0.026465],[-1.976534,7.847638,-0.917147],[-1.929240,-9.555504,-3.412828],[6.857363,4.734148,-6.811062],[-9.442448,7.552698,0.986079],[-1.451958,-3.970391,7.491698],[-2.197243,-1.179837,1.170258],[-9.930843,-9.271700,-8.613240],[2.190303,5.874970,-0.468150],[-0.712860,1.424683,2.020933],[9.308369,0.248960,5.848052],[-1.741006,-9.031334,0.856120],[-7.415956,0.376317,-1.189565],[1.360054,8.652090,-0.662742],[-1.254384,-6.370795,4.201524],[8.119526,8.332494,-8.729973],[3.679235,2.261638,4.692508],[9.627971,-6.328465,-3.712380],[-2.001192,-2.993422,-3.882913],[2.215071,-0.523615,-6.735647],[4.344224,-1.473725,-6.073357],[9.517846,3.247953,-6.190369],[-9.115146,-1.422859,-3.230579],[3.733121,-3.731677,7.247198],[9.118889,-4.487947,-6.088827],[3.678128,-8.618478,7.432979],[-0.907814,-8.017357,8.466055],[-1.159093,2.749287,-0.135473],[9.699051,-4.946005,4.676681],[-0.237367,4.492937,-4.743009],[7.519553,6.594320,9.092015],[3.976855,-2.164952,-6.703107],[-1.100493,9.585048,1.220391],[2.579112,9.684488,5.611805],[9.151491,2.320353,-3.700378],[4.733860,2.849087,7.238808],[6.257738,-6.027118,-8.923378],[4.042553,8.857889,-8.073183],[-2.899630,5.620545,-3.930282],[-6.273007,-5.407632,-3.497688],[-1.400918,5.578424,-0.161054],[-2.148519,7.898579,0.949037],[6.823678,-8.183245,3.882383],[-0.792498,-8.656724,-8.006381],[-0.844840,8.916774,-8.341349],[7.301581,4.732519,6.006145],[6.865957,4.044881,-1.238762],[-2.664120,0.892095,0.022985],[-4.322035,-7.207904,5.155318],[6.522277,0.710386,6.959262],[-2.582616,-4.309444,0.170962],[7.594685,-3.014932,6.930082],[-3.856079,-9.341495,-3.805629],[-8.148538,3.595908,5.157751],[4.967977,-3.825630,3.610527],[6.113679,-3.684167,3.031350],[5.227677,-5.696549,2.918305],[-6.456927,-5.929048,8.455940],[-4.882708,6.601997,-0.533595],[5.698368,6.505338,8.814999],[6.335738,-5.593244,-5.527699],[4.781107,-9.058246,3.381790],[1.872072,5.059298,1.892996],[-9.828260,0.031825,6.850875],[-7.665629,1.570155,8.501524],[4.294837,4.174808,-7.809415],[1.216723,4.910875,-5.891671],[-6.207666,1.933299,6.797932],[-4.167728,-4.786900,4.825027],[-8.206815,-1.098859,2.844286],[-2.321113,-9.651615,-4.528785],[6.808333,-2.429742,7.264926],[-8.419826,-2.496684,-5.237147],[-2.428715,5.773876,-5.394442],[-3.171987,0.959670,-1.227567],[-7.526780,8.139450,4.942807],[-9.192667,3.682426,5.682039],[5.559519,-1.261004,0.632694],[9.991508,-4.395264,0.028887],[7.896107,3.277874,-2.866865],[7.225981,-1.487696,-3.016488],[-9.922255,-0.260341,0.068114],[-6.030789,8.353696,8.033302],[0.084497,-8.490421,2.654799],[-5.073387,-5.118064,5.766465],[-4.896992,7.566590,2.470975],[-0.911966,-9.828984,-5.066360],[-4.827399,-4.635479,1.519796],[0.997959,-8.924358,-2.517641],[2.520309,-3.846819,-6.903845],[-0.457583,-7.047198,9.831158],[2.255355,7.975227,2.559471],[-7.959288,4.587091,4.965808],[-1.996879,7.530841,8.555590],[-0.586613,1.795509,-3.314943],[6.652514,-6.607676,-2.336434],[1.021292,5.042656,-0.891592],[-8.184249,-8.871120,2.672431],[1.871633,-5.976625,5.329153],[-7.855283,-3.578127,-6.959923],[-8.257773,-9.881939,-6.351463],[-5.726140,-8.456283,-8.736388],[-2.900586,7.059258,-3.757663],[3.102459,-2.331434,0.373694],[9.257532,-8.871471,1.729323],[-8.899388,-9.363732,-7.988106],[4.441802,-0.567833,-3.492654],[-9.662496,-0.409461,6.195208],[8.324777,-7.746820,6.220135],[7.862095,4.124529,-1.125914],[-7.827775,-7.120068,9.391455],[8.434891,-9.670429,9.722948],[4.230045,7.612219,3.811345],[-6.141383,1.565876,2.493253],[-6.670961,7.739793,-9.057725],[-4.267432,-7.016849,6.580097],[8.005152,9.562854,-8.253328],[-8.272303,-4.381411,4.551950],[0.957240,-5.997041,-3.059353],[4.381931,-2.318354,8.365761],[-6.180751,-6.127963,-9.035617],[5.534862,-8.499105,6.178799],[8.799308,-8.579422,-4.550394],[7.980723,-7.731574,-7.614716],[7.376806,9.839823,5.312568],[-1.789986,7.787263,-5.009880],[-1.467596,1.722761,-2.635866],[-6.950526,7.577871,-3.517701],[-8.407367,4.418612,9.238407],[-2.790214,4.730163,6.607769],[-5.260408,-0.742919,-8.444623],[4.957943,-9.689913,4.093884],[-5.768981,-7.984051,9.583022],[3.982176,0.649531,-3.036236],[-0.806031,5.000032,-4.394723],[-4.071445,4.551535,-8.195533],[-9.573223,-3.431459,8.003750],[8.970973,2.271309,4.316312],[-0.491706,6.457846,9.270497],[9.985486,-0.843007,9.590883],[9.100041,3.402758,-0.939741],[-9.791928,1.997175,-9.622560],[-5.572550,-3.522819,4.817444],[-0.676729,-6.954137,8.350453],[5.907892,-9.775065,-6.394714],[8.375228,8.615820,-5.349439],[-6.729796,-9.120970,8.068401],[-1.025034,5.614975,-1.288238],[-2.175427,-9.191870,-9.993972],[-1.124056,-9.828812,4.306973],[-6.699364,-9.179592,7.517114],[-0.831220,1.903329,1.662979],[6.734198,4.265295,8.445487],[7.973909,-3.308038,-6.229574],[-8.946791,8.122911,2.572609],[7.155162,8.209389,-9.169434],[-6.364873,-9.665738,2.934319],[-6.143376,-8.784213,2.705590],[3.556337,2.835307,8.656436],[-0.442059,4.987073,-7.619562],[-6.100529,-6.584658,-3.014227],[-3.409575,4.507541,-9.145103],[3.771597,4.708111,-0.952642],[7.312091,-1.378862,-5.433861],[-5.827070,6.406400,-0.836828],[7.338645,9.976930,-8.951879],[-4.066826,-5.776139,5.324475],[-5.135877,1.908167,-7.500164],[7.343722,-9.852243,4.707058],[6.988810,5.213083,2.537559],[-2.738535,0.072284,-4.672853],[5.033512,-7.552692,8.041440],[5.014473,-7.762318,9.693157],[-4.010022,-9.670361,-2.066150],[2.486780,-0.108100,-8.628006],[-7.705325,-3.141725,-2.389689],[4.676894,5.930795,7.227600],[-0.844424,-2.431302,-3.189492],[1.422687,-6.038419,3.076242],[3.241371,-8.329202,4.197987],[1.152856,-4.688045,8.315732],[9.222659,-5.471530,9.721514],[4.708866,-4.560938,-6.552874],[8.350086,-3.850694,-5.254225],[1.418667,-7.843966,0.344464],[-2.389214,-1.377510,-1.792474],[-9.201580,-8.950565,-0.304236],[-3.560812,6.337811,3.870109],[1.290333,-9.283057,8.783138],[2.328419,-3.135620,-1.584834],[-1.723429,9.574459,3.817531],[-7.283164,6.287346,1.015529],[-2.697057,6.715861,-0.042516],[-9.707173,6.871797,2.964570],[4.691318,4.665576,2.538658],[2.695882,3.211497,-6.876681],[-3.028752,-6.062932,0.381483],[2.353128,2.765835,-4.974383],[6.022128,-8.480213,9.890488],[5.499958,-9.639347,-4.097073],[6.517699,8.953311,-3.888837],[0.536162,7.889295,-7.186448],[6.308961,-8.342299,-5.346213],[7.392115,4.729189,2.926305],[9.610477,0.358162,1.771798],[9.927885,7.185521,2.634901],[-7.819255,-3.360046,-9.678981],[1.600118,-9.716013,2.068617],[-1.518512,2.817428,-9.752774],[-4.552166,1.397573,1.458584],[8.415439,5.873017,-4.491882],[2.153699,-0.361609,-1.293101],[-2.103433,-8.275227,5.361332],[-3.355404,-9.443540,-7.597655],[-5.026516,2.002799,-5.471709],[-4.958237,1.941159,4.929177],[9.753592,1.805960,-6.446700],[-9.417725,1.342063,-9.431143],[-9.234212,-9.399510,-4.901098],[1.555673,9.730228,-2.802694],[-6.788941,5.636240,9.306446],[1.435558,5.698072,-4.952211],[-1.925395,7.973112,5.702164],[-8.980773,-0.620468,6.732232],[9.089692,1.940181,2.935816],[0.963323,-7.298392,5.147639],[3.757802,-3.594597,8.801222],[-4.380777,-2.637669,1.870677],[4.318941,3.306334,-3.449272],[-3.978270,-2.002709,-9.429932],[-4.356019,9.993848,1.003713],[-2.960015,0.975484,2.351229],[5.077239,-4.938163,1.568458],[2.737041,6.062123,-6.680285],[7.921301,-5.629456,-5.684236],[6.315144,-0.645346,-5.883932],[-8.307948,-3.975709,4.229990],[-7.099096,9.977771,-7.347200],[0.520390,-6.379420,6.529517],[-3.741445,5.616709,-5.666493],[-7.217741,-0.521137,-9.404241],[-3.612709,0.404516,-1.678637],[-7.837292,4.810654,0.471867],[0.770718,-1.875834,1.330621],[-8.805119,-9.198983,-6.772787],[-6.860036,1.368776,5.131740],[2.773778,-3.282815,-1.009053],[5.608647,7.811621,9.442361],[0.531677,8.868418,-0.079927],[3.281051,5.830082,-9.875144],[-6.805195,-0.697562,-4.756678],[6.768610,5.808905,-2.241134],[-1.809266,-2.568581,0.799623],[-3.473171,-4.368647,-0.269711],[-5.428673,-1.480248,1.496386],[-0.459268,3.147072,5.056853],[-8.602330,6.241583,-1.773546],[-5.845546,2.984132,3.678125],[-9.754348,8.909705,4.326521],[4.266592,3.423828,9.346445],[-6.235795,-2.779373,-0.685321],[4.021346,-9.144107,-0.046163],[9.421253,9.626921,-2.648394],[5.070951,-0.872828,5.859142],[-9.554696,-2.590290,-8.781260],[-5.264348,6.432548,-1.645211],[2.013455,-3.208314,-4.841981],[-1.608214,1.805804,8.197345],[-8.585104,-9.801796,8.507324],[7.215062,-8.685199,-7.319109],[5.977729,-6.364207,7.225182],[3.301432,-3.571803,4.192933],[-9.862729,-1.644949,9.652519],[2.478939,-8.175850,0.284334],[-5.854751,0.055421,-3.216880],[6.692116,0.821487,-2.730487],[0.022408,2.802735,8.760979],[-8.419398,-4.362883,-3.292944],[-1.865851,-4.473923,4.099518],[0.166185,-1.115121,1.817275],[-5.836946,-3.304573,-7.583334],[-5.530100,-6.274979,3.647784],[-3.453952,-0.384732,0.829211],[8.511934,-5.731362,-9.055710],[8.951016,0.024695,8.091473],[-7.140781,-2.376011,3.129789],[4.720372,-9.669684,2.886731],[8.769673,7.023261,-1.322090],[-9.296297,1.752862,6.223687],[9.455382,8.974950,-0.224857],[1.696456,-3.006241,-5.839277],[-8.098188,0.516646,6.091474],[-6.323800,2.711833,-5.031574],[-9.154966,0.220370,-1.602844],[-1.470299,7.175330,-9.914516],[-4.888321,-5.506052,7.446781],[-9.575300,-3.344906,-0.167680],[-2.069360,-0.188854,8.237734],[8.214334,-2.872976,9.884473],[-6.257450,-3.116412,2.241259],[5.929271,-5.848083,-0.411958],[-3.460597,9.019566,-1.357407],[6.705009,-6.567513,-6.143595],[-4.623847,-4.526631,-7.878181],[4.128259,7.091602,-9.311972],[0.534011,-0.113934,0.101388],[3.100615,5.077834,-1.565430],[3.946422,-4.359865,-5.589903],[6.336857,-7.483077,6.541586],[9.001649,2.914277,-8.098848],[3.509608,-8.579085,8.206749],[-1.679660,5.569980,9.368531],[2.712183,2.779651,-0.005709],[6.172022,2.359319,9.884842],[-3.610810,6.328020,1.589371],[-8.425120,4.731459,-5.594940],[-9.447061,-3.334697,-3.107453],[-3.503429,-8.439532,5.644339],[9.227958,-6.140745,4.493408],[6.925210,-4.950900,9.047108],[-4.537580,-8.044213,-8.576881],[-5.031797,9.334614,1.882116],[-1.959514,8.119099,0.469923],[3.037636,4.498780,1.730317],[-4.539656,8.458986,-1.820279],[-7.988628,-1.542206,-3.567508],[-8.977921,8.542767,1.797739],[0.823719,-1.078238,-3.514011],[-2.586007,-0.342600,2.513534],[-6.709603,-5.607319,-8.676440],[-7.155885,7.413933,0.811079],[-2.438287,-9.725840,3.414369],[-3.469251,4.844286,-1.691552],[-6.297914,-7.778228,-8.674471],[6.930052,7.125878,-6.969339],[-8.559883,-5.549576,1.446135],[8.262983,1.196350,-1.223277],[-8.673559,-0.971585,0.983215],[6.690415,7.838954,4.357057],[-0.333813,-1.041227,-7.373949],[1.305807,1.214083,5.927264],[-0.549367,-7.277222,-8.866715],[-7.293615,1.720335,8.095919],[8.275144,1.898906,-5.570706],[4.505405,1.560161,-0.062134],[-8.773684,-7.056486,9.215391],[6.339669,-2.981115,-3.724491],[-6.245731,2.565705,1.241217],[-6.189808,-1.578102,6.682579],[-6.611473,7.112876,-6.495392],[-7.493108,7.275805,-7.120705],[-4.946098,-1.276544,-7.280225],[4.620351,-0.907059,-0.005667],[1.882905,-4.017204,-2.922251],[-1.655150,-0.041972,-4.829963],[2.035792,-1.627631,3.470771],[-1.608316,-0.426421,8.030671],[8.474561,9.394436,6.667615],[8.721740,-7.674884,-4.666569],[5.922490,-7.387479,-0.131752],[-9.621477,0.605209,0.782538],[0.564353,-7.053300,-7.002828],[-1.421863,-3.656624,0.485300],[-0.107670,6.713260,0.089516],[8.224216,-7.617897,-7.388381],[2.754269,3.358964,2.444547],[6.658026,-1.928003,-4.409912],[7.809687,-7.921123,-6.107782],[-0.664376,-4.377200,-6.183586],[7.664742,-2.834427,1.890547],[9.830243,4.752265,0.175806],[3.972350,1.995570,-5.186209],[-7.693570,5.202798,1.555890],[9.215765,-4.376229,5.663919],[5.700647,-4.977112,0.791602],[-6.275483,-7.986732,3.915620],[8.341105,6.045965,-9.723515],[-0.146313,3.580708,4.917173],[-6.021808,-1.833672,-4.606098],[0.300020,3.604068,4.688157],[5.459821,8.370149,4.088662],[4.807742,4.368531,2.112069],[-4.808048,-8.773737,2.813870],[-1.661906,-1.160471,-7.849374],[7.726888,-6.586619,-0.377169],[2.663850,-7.267805,5.024020],[9.773661,-7.367330,2.717166],[-9.039793,1.533080,-1.644351],[-4.766335,-1.491865,8.620345],[5.429988,-3.431828,2.713164],[6.892809,-2.473893,1.929161],[5.700009,-7.708711,0.628411],[8.928295,8.309609,6.064616],[-0.351047,6.813639,-9.558860],[8.144521,3.058304,-6.667077],[-9.449332,3.520630,7.843064],[7.417623,4.268187,-7.606634],[1.324222,-1.683469,-2.348498],[-3.745140,7.505008,-2.676091],[4.355951,1.749982,1.983820],[4.232216,7.852891,9.063157],[-5.948629,3.870907,-7.229693],[-6.081525,5.212247,8.369762],[-1.202670,-7.298509,4.298127],[-3.795519,5.268016,0.458504],[9.348420,-5.860297,9.598500],[3.932794,-7.498341,4.172463],[-5.113810,1.125700,-7.109563],[6.093912,-2.373248,-7.097304],[-6.201022,-5.456945,-7.369119],[5.760731,3.837736,-3.928694],[2.710121,-6.575888,-5.433530],[-4.419886,1.130969,-6.156631],[-2.736634,5.599422,-9.508083],[-5.919397,-1.346148,-6.687684],[-6.685121,-0.219240,8.899547],[-8.304041,-1.821586,0.718843],[-7.248549,7.210954,5.242635],[3.061588,1.564526,-3.727211],[-6.300998,8.971709,-8.516647],[7.133948,0.597655,-2.529624],[-0.916741,1.005155,2.901907],[7.776370,-3.588097,4.795581],[7.234409,-4.436133,3.486221],[-4.912133,7.439182,-3.369663],[1.223200,2.300300,0.206817],[2.308756,-4.594309,-2.552532],[9.123715,-1.537109,-8.649267],[5.748162,-9.788745,9.219284],[2.598411,-1.653831,1.450702],[-4.633547,-0.127533,6.859416],[1.507828,-4.685665,7.646089],[4.472251,-9.632137,-6.302125],[9.436982,-2.120229,7.239836],[-4.740723,9.073486,-5.643616],[3.374849,6.802026,-7.578012],[-3.097280,-8.813407,0.509266],[2.253585,-1.675212,-5.103762],[1.881820,6.300486,-2.153822],[5.440465,2.124281,1.890968],[9.455935,-6.491255,-3.669003],[6.097934,-4.829634,1.145149],[2.286493,-0.066768,3.842618],[-1.785529,-8.290558,-6.055722],[8.906559,1.407663,0.111155],[-2.601354,-6.073681,2.793197],[2.775807,3.480306,-3.709808],[5.466898,3.689352,-0.259215],[1.747477,2.418784,-6.262106],[-7.137230,2.976835,-3.726719],[-8.685389,2.061752,1.598204],[8.176630,7.994476,-4.896839],[-0.174940,8.784178,0.718856],[-6.402869,7.888369,-7.802763],[8.711156,8.140489,4.215347],[4.621851,-0.070696,-5.188244],[-9.758457,-6.792546,-5.007244],[3.266530,-9.803876,-8.040077],[-5.894961,-8.068676,5.085081],[3.088672,6.540891,5.706282],[-3.717261,-2.797117,-9.644088],[-0.508010,5.064290,-4.082179],[7.568280,-8.797419,7.074638],[3.650417,4.321456,0.678890],[6.535098,5.960229,7.006542],[3.708342,-0.458142,-7.074086],[-1.338246,8.417822,9.739459],[5.199341,3.926239,-9.067025],[-1.845890,5.129128,-6.867270],[-1.610104,5.673186,-3.813207],[2.831858,6.410150,-3.145350],[-0.813318,-5.069580,-3.456766],[3.845417,1.542901,2.552360],[3.542132,9.156496,8.728854],[0.132878,3.483145,9.309740],[9.447354,0.855828,-0.200529],[-6.384915,-2.393528,-0.985325],[-1.624158,-5.977972,7.947026],[-6.200155,-2.180787,0.977119],[8.447797,3.390831,4.484567],[-0.390989,2.263504,6.593936],[9.746517,-7.428159,0.988692],[-3.604899,8.891417,0.047327],[-9.756895,5.946831,3.753729],[-6.912340,-0.195807,-6.074338],[0.911515,-5.672737,-5.734068],[-7.571900,-8.229132,-8.775054],[-2.550408,2.408336,0.012225],[-8.900011,-7.097537,-4.260731],[-5.155534,-7.378845,5.770345],[-4.320981,-7.606229,0.630591],[6.318160,-0.455572,9.043286],[5.115266,-6.063768,4.005779],[6.465221,6.226422,6.991031],[6.872430,7.697640,-9.605633],[-7.092508,2.066805,-2.502447],[-2.043742,-1.245401,1.192694],[3.386490,5.739545,8.273126],[8.188824,-2.478100,6.686541],[7.450444,5.643497,-9.077049],[4.690502,6.527461,1.679831],[9.083220,8.225082,7.597024],[4.956126,7.835816,-6.967846],[2.809554,7.018869,-6.118074],[-6.856694,0.334921,-2.150185],[8.614761,8.120196,-4.579545],[-5.354341,-0.560252,-0.045647],[-3.589925,-5.608628,-0.296228],[6.415474,-0.655232,-6.517285],[6.762625,-4.246311,-6.686509],[-2.495891,-4.269090,-7.122024],[5.471588,6.474472,-8.456589],[6.148732,4.091088,-7.182827],[-6.054950,-2.704482,-0.760577],[4.956151,1.521026,0.062807],[5.132241,6.968052,7.936157],[-9.041121,2.308227,-4.024969],[2.664266,-7.060588,8.523252],[7.259398,-1.549933,-2.547346],[-4.165681,-1.381494,-2.865518],[6.258583,-0.980669,9.788426],[1.823189,-1.959886,0.567990],[-3.099686,-0.346095,-5.343351],[-5.947306,0.714634,5.470784],[5.997284,0.875408,8.740724],[9.066675,3.248422,7.327835],[4.381762,1.400595,4.682961],[-2.109631,8.959847,0.981355],[-9.775734,7.682480,-5.090425],[-3.179560,-7.348274,-8.286536],[8.910874,8.416543,5.511420],[3.940961,0.117736,-3.519340],[-1.393334,-2.573363,5.385853],[5.802002,3.239230,7.246028],[0.144341,-7.455528,7.560077],[9.037848,-7.242581,-8.591286],[7.686372,7.149295,-1.518823],[-7.336025,-0.250679,-9.908928],[-3.728098,-8.452781,5.725715],[8.887678,7.656875,-6.842054],[-0.796555,9.614236,-3.517677],[-2.472172,5.635726,-0.299749],[5.393330,-1.090130,-2.770427],[2.850787,-6.081738,-4.958822],[0.912060,-5.764963,4.958239],[-1.304641,-1.248523,6.978361],[1.118628,2.714915,3.674787],[-7.035026,-0.785299,-7.796652],[9.864284,5.927793,2.493583],[3.514143,2.325951,6.224731],[1.592469,0.953687,7.342484],[-2.750043,-1.469721,-8.998304],[-3.513426,7.262722,4.850857],[6.350301,7.820158,3.805706],[-0.011562,-5.639824,-9.581649],[4.986751,9.351264,-2.729541],[0.133055,5.047092,-2.664620],[0.045673,-1.560025,7.883896],[-7.684536,-2.192092,2.743070],[2.956064,8.283430,5.661376],[6.916076,3.896144,9.525050],[-3.742546,-1.404995,7.605917],[8.870204,6.086225,7.422786],[2.501873,9.499644,0.667156],[0.815023,2.367353,-2.142904],[8.675305,7.957571,-6.033959],[-1.479256,1.794287,-4.711284],[0.910282,4.376660,2.167754],[8.928179,-2.114155,6.983594],[6.369600,-1.104929,1.369627],[9.328347,6.540111,3.941502],[-5.996616,-0.556036,-6.304420],[-5.792248,-1.758098,3.390747],[-7.880873,-7.152916,3.588734],[-2.595699,5.147464,0.851258],[-6.145847,0.762696,5.588470],[9.085357,-8.325458,8.500944],[8.070457,-0.861801,8.860233],[8.282771,-6.263016,9.874680],[7.635561,-2.081290,-6.452203],[5.848619,-9.970740,-2.866443],[7.625578,0.998695,5.645646],[0.785538,-1.773996,-8.532261],[9.789897,6.305989,-5.063900],[9.895156,5.980057,-1.807466],[-6.432437,-4.957176,-3.485263],[-2.581480,-1.966484,3.356963],[4.598500,-4.681864,-6.880746],[1.203478,2.651885,7.384091],[0.656459,8.005706,-8.442467],[0.922439,-4.076744,8.816834],[-5.920752,-8.068699,-5.940603],[5.817305,-6.807666,9.304383],[-5.765239,-4.719040,-7.145828],[9.038055,7.203451,-3.942003],[-6.033354,-8.087143,9.357334],[5.746956,3.614006,-0.399042],[5.935381,8.679329,-0.192159],[-9.594408,-5.454957,-9.118411],[-0.930971,-5.712242,-1.890066],[3.823196,-2.448211,0.142393],[-0.622590,-2.706903,9.375306],[3.328233,-0.294175,-1.289466],[6.724301,6.527962,-3.400089],[-2.949877,-5.686785,-6.743735],[5.276486,4.931872,9.352652],[9.658326,-7.664528,3.956195],[4.207290,-5.275985,-5.782571],[-1.173000,-4.555985,4.873243],[1.075836,4.413673,-8.505722],[-5.586725,-4.437907,-9.105393],[3.293261,0.709345,2.489232],[9.837156,7.385840,-3.691616],[-2.895229,7.677481,-5.444967],[8.296450,4.910137,4.275465],[-1.335057,1.043372,-4.751142],[-1.431135,-2.791870,4.029568],[5.841130,-7.469503,-3.278080],[-2.202501,8.134857,2.555248],[-1.646743,5.005448,-5.308139],[2.238775,-0.928867,7.028304],[-1.687043,-9.883958,0.585274],[-2.526610,-3.751512,8.023750],[5.871122,-9.267823,0.599970],[3.829812,-1.607974,6.571097],[7.024502,-3.197551,-6.813121],[-8.406167,1.558711,5.816130],[-0.145388,4.524200,-9.890327],[-8.751844,-5.353008,-7.334310],[-6.406683,5.992477,-8.954773],[2.450380,-3.491773,6.175746],[0.197758,4.049604,4.126514],[3.855423,0.264971,-4.561661],[4.606566,7.104480,7.801343],[-0.849730,5.329476,1.079819],[-6.968998,-5.265141,-7.352202],[8.910621,2.064423,-8.544040],[2.460927,1.888464,0.018898],[-1.762388,-0.161257,-3.325322],[6.443428,8.678418,3.308911],[-1.394171,-3.586725,-0.669135],[1.134330,-5.100325,-9.447539],[7.574498,5.733845,-0.607759],[-9.335518,2.128093,7.343500],[9.189426,-5.405982,5.114986],[5.426777,-1.939105,-3.112383],[-5.287860,-1.818748,7.819474],[4.095647,3.457504,7.425818],[3.296454,-5.817771,-7.522395],[3.381553,9.713128,-8.784391],[1.530068,-5.960133,4.827273],[-2.605694,-7.634018,6.788412],[3.345934,-1.031589,1.172436],[8.779721,-7.634923,6.760826],[4.796636,-6.661412,2.704725],[9.116412,-6.330374,-9.307787],[7.390820,3.794239,7.532514],[5.506313,7.706189,6.014423],[4.112343,-6.475788,8.654313],[-2.195709,-1.323137,2.956931],[0.068801,-6.592507,-3.027250],[-2.696205,6.353934,-2.515241],[-4.912893,5.597787,9.578771]], dtype = "float32")#candidate|5795|(715, 3)|const|float32
call_5793 = relay.TupleGetItem(func_4171_call(relay.reshape(const_5794.astype('int8'), [560,]), relay.reshape(const_5795.astype('float32'), [11, 15, 13]), ), 1)
call_5796 = relay.TupleGetItem(func_4174_call(relay.reshape(const_5794.astype('int8'), [560,]), relay.reshape(const_5795.astype('float32'), [11, 15, 13]), ), 1)
var_5799 = relay.var("var_5799", dtype = "float32", shape = (715, 3))#candidate|5799|(715, 3)|var|float32
bop_5800 = relay.mod(const_5795.astype('float32'), relay.reshape(var_5799.astype('float32'), relay.shape_of(const_5795))) # shape=(715, 3)
func_852_call = mod.get_global_var('func_852')
func_855_call = mutated_mod.get_global_var('func_855')
const_5811 = relay.const([3,-6,-6,3,-3,-2,9,10,-6,-10,-4,-10,1,3,10,-2,2,10,-6,7,-2,-2,4,9,-6,10,3,3,2,4,6,4,6,7,7,-1,-5,-9,8,3,-6,-6,-5,-5,-4,10,6,9,6,-4,-10,-1,10,7,6,2,5,3,6,8,6,2,-1,-2,9,-1,10,5,2,8,4,-3,9,-10,1,-6,7,9,-1,9,6,8,-2,6,8,5,7,10,2,-2,1,2,-10,-8,-3,-2,4,4,4,3,5,4,6,9,-8,-4,1,-7,-8,-1,-9,-7,2,3,3,-9,-4,2,9,-9,-2,-5,9,-3,4,-8,-6,8,-8,5,-6,10,9,1,5,6,3,2,1,10,9,10,3,-5,-8,-10,9,4,4,-8,7,6,-3,-3,4,-2,9,10,8,3,-10,-10,-3,-6,2,-5,6,-9,10,5,-7,-8,-9,-10,-6,2,-6,-4,9,-7,6,9,5,-2,2,-10,-4,-7,9,-9,10,2,6,-6,-7,-5,7,6,-4,9,-4,6,7,1,1,-2,1,-9,-1,-3,10,-3,4,8,-8,3,-6,-1,2,-1,-10,-6,-9,2,-1,-2,3,-9,7,-4,-4,6,-5,7,7,-2,2,-1,-2,5,-8,-6,4,-7,-3,-7,-7,9,10,-1,5,-7,1,10,-1,-7,-3,9,8,-10,8,-8,-10,8,4,-8,-3,5,-3,7,9,-2,-9,-2,6,8,1,8,2,1,3,2,-4,-10,-2,-10,3,7,-10,8,3,9,-1,-3,-1,8,6,2,9,-7,-10,-5,-9,-4,-1,7,8,8,-1,2,-7,-7], dtype = "uint64")#candidate|5811|(312,)|const|uint64
var_5812 = relay.var("var_5812", dtype = "bool", shape = (352, 4))#candidate|5812|(352, 4)|var|bool
call_5810 = relay.TupleGetItem(func_852_call(relay.reshape(const_5811.astype('uint64'), [312,]), relay.reshape(var_5812.astype('bool'), [1408,]), ), 4)
call_5813 = relay.TupleGetItem(func_855_call(relay.reshape(const_5811.astype('uint64'), [312,]), relay.reshape(var_5812.astype('bool'), [1408,]), ), 4)
func_3925_call = mod.get_global_var('func_3925')
func_3926_call = mutated_mod.get_global_var('func_3926')
call_5814 = relay.TupleGetItem(func_3925_call(), 0)
call_5815 = relay.TupleGetItem(func_3926_call(), 0)
func_1360_call = mod.get_global_var('func_1360')
func_1361_call = mutated_mod.get_global_var('func_1361')
call_5837 = relay.TupleGetItem(func_1360_call(), 0)
call_5838 = relay.TupleGetItem(func_1361_call(), 0)
func_730_call = mod.get_global_var('func_730')
func_733_call = mutated_mod.get_global_var('func_733')
call_5845 = relay.TupleGetItem(func_730_call(relay.reshape(var_5812.astype('bool'), [1408,])), 0)
call_5846 = relay.TupleGetItem(func_733_call(relay.reshape(var_5812.astype('bool'), [1408,])), 0)
func_2282_call = mod.get_global_var('func_2282')
func_2283_call = mutated_mod.get_global_var('func_2283')
call_5850 = relay.TupleGetItem(func_2282_call(), 2)
call_5851 = relay.TupleGetItem(func_2283_call(), 2)
output = relay.Tuple([call_5791,call_5793,const_5794,bop_5800,call_5810,const_5811,var_5812,call_5814,call_5837,call_5845,call_5850,])
output2 = relay.Tuple([call_5792,call_5796,const_5794,bop_5800,call_5813,const_5811,var_5812,call_5815,call_5838,call_5846,call_5851,])
func_5876 = relay.Function([var_5799,var_5812,], output)
mod['func_5876'] = func_5876
mod = relay.transform.InferType()(mod)
var_5877 = relay.var("var_5877", dtype = "float32", shape = (715, 3))#candidate|5877|(715, 3)|var|float32
var_5878 = relay.var("var_5878", dtype = "bool", shape = (352, 4))#candidate|5878|(352, 4)|var|bool
output = func_5876(var_5877,var_5878,)
func_5879 = relay.Function([var_5877,var_5878,], output)
mutated_mod['func_5879'] = func_5879
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2946_call = mod.get_global_var('func_2946')
func_2948_call = mutated_mod.get_global_var('func_2948')
call_5881 = relay.TupleGetItem(func_2946_call(), 0)
call_5882 = relay.TupleGetItem(func_2948_call(), 0)
func_3575_call = mod.get_global_var('func_3575')
func_3576_call = mutated_mod.get_global_var('func_3576')
call_5888 = func_3575_call()
call_5889 = func_3575_call()
output = relay.Tuple([call_5881,call_5888,])
output2 = relay.Tuple([call_5882,call_5889,])
func_5896 = relay.Function([], output)
mod['func_5896'] = func_5896
mod = relay.transform.InferType()(mod)
output = func_5896()
func_5897 = relay.Function([], output)
mutated_mod['func_5897'] = func_5897
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1227_call = mod.get_global_var('func_1227')
func_1228_call = mutated_mod.get_global_var('func_1228')
call_5931 = relay.TupleGetItem(func_1227_call(), 0)
call_5932 = relay.TupleGetItem(func_1228_call(), 0)
output = call_5931
output2 = call_5932
func_5934 = relay.Function([], output)
mod['func_5934'] = func_5934
mod = relay.transform.InferType()(mod)
output = func_5934()
func_5935 = relay.Function([], output)
mutated_mod['func_5935'] = func_5935
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2818_call = mod.get_global_var('func_2818')
func_2819_call = mutated_mod.get_global_var('func_2819')
call_5969 = relay.TupleGetItem(func_2818_call(), 0)
call_5970 = relay.TupleGetItem(func_2819_call(), 0)
output = relay.Tuple([call_5969,])
output2 = relay.Tuple([call_5970,])
func_5975 = relay.Function([], output)
mod['func_5975'] = func_5975
mod = relay.transform.InferType()(mod)
output = func_5975()
func_5976 = relay.Function([], output)
mutated_mod['func_5976'] = func_5976
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1032_call = mod.get_global_var('func_1032')
func_1034_call = mutated_mod.get_global_var('func_1034')
call_6012 = relay.TupleGetItem(func_1032_call(), 1)
call_6013 = relay.TupleGetItem(func_1034_call(), 1)
func_2627_call = mod.get_global_var('func_2627')
func_2629_call = mutated_mod.get_global_var('func_2629')
call_6014 = func_2627_call()
call_6015 = func_2627_call()
output = relay.Tuple([call_6012,call_6014,])
output2 = relay.Tuple([call_6013,call_6015,])
func_6023 = relay.Function([], output)
mod['func_6023'] = func_6023
mod = relay.transform.InferType()(mod)
mutated_mod['func_6023'] = func_6023
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6023_call = mutated_mod.get_global_var('func_6023')
call_6024 = func_6023_call()
output = call_6024
func_6025 = relay.Function([], output)
mutated_mod['func_6025'] = func_6025
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5392_call = mod.get_global_var('func_5392')
func_5393_call = mutated_mod.get_global_var('func_5393')
call_6034 = func_5392_call()
call_6035 = func_5392_call()
func_2546_call = mod.get_global_var('func_2546')
func_2547_call = mutated_mod.get_global_var('func_2547')
call_6036 = relay.TupleGetItem(func_2546_call(), 0)
call_6037 = relay.TupleGetItem(func_2547_call(), 0)
output = relay.Tuple([call_6034,call_6036,])
output2 = relay.Tuple([call_6035,call_6037,])
func_6073 = relay.Function([], output)
mod['func_6073'] = func_6073
mod = relay.transform.InferType()(mod)
output = func_6073()
func_6074 = relay.Function([], output)
mutated_mod['func_6074'] = func_6074
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2282_call = mod.get_global_var('func_2282')
func_2283_call = mutated_mod.get_global_var('func_2283')
call_6081 = relay.TupleGetItem(func_2282_call(), 2)
call_6082 = relay.TupleGetItem(func_2283_call(), 2)
func_1902_call = mod.get_global_var('func_1902')
func_1904_call = mutated_mod.get_global_var('func_1904')
const_6086 = relay.const([1.768678,-6.134450,-1.458757,2.935518,-0.676440,-8.491606,-5.384269,6.386166,-4.480545,6.727382,7.317939,-4.379518,9.200689,7.080483,-3.958809,7.499703,-1.535661,-0.886079,-7.682851,-9.749503,4.366115,-4.521584,-9.412051,2.554827,-9.545895,-5.812560,2.597939,1.377695,7.937652,6.987364,9.083469,7.310409,-7.993441,0.227547,3.944452,-8.766584,-6.622803,4.004131,-2.399053,2.662848,7.894709,-7.508018,6.973621,1.339929,-3.862587,-5.788045,0.799919,-4.050240,2.380902,-2.965408,6.147672,9.446984,-3.494500,-5.735335,4.085008,5.515557,6.030434,-2.903153,0.423704,-0.683718,-8.439354,9.646025,-3.068612,-0.503791,3.198033,9.593765,8.723752,5.984297,9.971643,-6.454891,7.618228,9.875865,-0.304098,3.599118,-6.425768,5.136457,-5.678253,-2.998610,-7.116074,-1.913241,-0.079505,-7.653269,7.618824,8.725033,4.001178,4.128603,3.183953,-8.179156,-2.362907,2.755589,3.386215,-3.515974,7.545464,-5.322617,9.687438,-5.443786,-4.901833,0.145432,-5.299741,-8.674437,-1.616275,-9.900548,5.594856,2.176655,1.899276,-5.549282,-1.202995,-8.610423,8.741478,0.618597,-5.255538,-0.680656,6.845976,-1.086873,-8.004550,4.078684,-2.773823,-5.611593,-3.038762,-7.512034,-2.785415,-3.462203,5.950093,7.805934,-6.358372,8.639970,-0.924258,0.756799,0.898762,8.323411,5.917098,-6.147824,-3.523960,1.263030,4.766541,-3.347147,-7.169839,-0.258107,-1.023924,-4.202871,-5.917808,7.602260,-3.787387,-1.996429,-1.545405,6.932657,7.584242,9.292465,2.072801,-4.442554,-5.024843,-8.365547,-8.281961,-7.213134,-7.112559,1.942109,-1.409786,9.910479,9.936446,-7.796247,7.242092,8.513138,-2.782331,4.794089,9.760129,-9.460414,-1.731435,-8.976233,0.429618,7.754809,-9.440542,-3.547746,5.535101,1.420775,-1.408334,-5.480138,8.406902,-5.508326,4.451778,1.537056,3.806564,-0.009438,2.283489,-9.442652,-1.757973,-0.939241,-8.090395,9.749629,0.367302,9.669537,4.873666,0.885934,4.479842,-9.806986,9.762567,-6.405321,0.610022,4.892784,1.183246,9.652424,4.280715,-4.971196,-5.091389,-0.561933,-2.919062,8.403558,6.693984,1.575070,-9.702545,1.366336,7.421653,9.404426,3.435741,9.557573,-2.908056,-9.133660,3.781306,-7.023068,-6.609796,1.101798,-1.558196,-4.560170,3.472021,-0.864502,7.957387,-1.255415,7.065366,8.100012,-3.374054,-7.278210,1.337805,-6.842512,5.782940,8.329616,8.620853,4.444256,4.239705,-2.108374,2.055795,8.230090,-6.474050,4.797142,4.162766,-7.566953,-1.352143,-2.770492,8.152526,-5.459661,7.081512,5.499058,-4.191377,-0.326299,-4.429213,-4.397110,-4.063749,3.267801,4.386930,-6.550867,4.351114,-9.179443,9.920500,-6.147237,-1.491584,-7.682403,-7.423447,-7.410508,-7.120925,-4.768330,5.595365,-8.475282,-1.393607,9.247033,-8.527935,-1.522438,-3.399404,3.476276,-6.301756,4.693243,-0.970042,-1.429833,6.294327,9.378619,-1.603441,-3.397501,0.351263,3.007939,-5.163003,6.176027,-8.017914,9.959943,8.029910,6.453032,-1.821827,-3.226481,-8.859549,4.963591,5.530644,2.725614,-7.187668,-1.145301,-6.054912,-1.458673,-0.353038,3.422617,9.010101,9.217971,-9.808167,-7.067244,4.351904,6.153062,-0.330036,8.907640,-8.873723,7.722723,2.080809,-3.427634,7.849861,-8.590078,-2.967080,-0.898718,-1.218629,-4.483112,-5.314083,1.975826,1.447340,3.682653,9.900385,-4.711553,7.816623,1.897880,2.224414,-7.982323,-2.295853,-5.260445,4.877479,-6.343914,-9.487581,-5.255590,-8.825007,1.323853,-9.347007,0.619852,9.672632,9.792916,5.549979,4.571154,-5.735958,7.608077,4.803846,-9.366054,-8.540907,-4.375364,9.430517,-0.942978,0.095815,-0.802629,-1.730650,1.347175,6.928537,2.772546,9.680936,1.957790,-6.845941,-8.903504,-3.038088,-8.889829,-3.290534,0.896091,1.553605,1.768534,8.832237,3.577224,6.683480,-4.046432,9.411658,2.541004,-0.039022,5.223524,3.419547,-8.596118,-4.105712,-4.675374,-4.966900,-1.923635,1.904038,-6.104334,4.005843,2.370697,-8.573924,9.326489,1.982067,5.404459,9.284902,-4.391278,-0.581598,-2.301852,-9.511848,6.993945,6.355608,-1.359516,0.757907,5.561349,-7.293104,4.635068,-0.827236,2.126051,4.892805,-9.984372,1.274397,7.356821,5.881672,-2.419096,6.349543,-3.452194,7.745262,7.159638,9.536678,-7.816206,1.911718,0.405519,-2.808886,2.724735,9.321176,2.977030,3.384359,-7.883125,-4.216846,-7.244688,2.537971,-2.453905,0.629270,3.214373,1.246044,5.681010,-7.633643,-7.616442,8.299463,-4.041561,1.222707,0.655229,6.124599,-3.540953,-2.486609,3.547529,9.877370,-7.862781,7.762614,-6.444756,2.338636,-5.015978,-0.101053,6.266864,-7.306653,-2.885099,9.954146,-7.792228,3.707381,-3.693832,5.381213,7.452545,-8.590313,-1.987488,-0.610689,-9.600221,-7.713304,3.372210,5.426554,-0.256726,-3.993163,-6.390094,-6.368556,-1.682024,0.460331,4.027033,-7.594508,8.968020,-5.835175,1.364395,-7.827762,8.140281,-3.734414,2.617056,9.411113,6.037632,-0.661815,6.925716,2.363716,2.229354,-1.597348,6.088121,2.618964,0.755173,-8.990959,-4.601559,-1.784458,4.096624,-4.601570,6.703868,-9.497714,-5.381545,-5.258162,0.241825,0.798998,-2.648989,2.826344,4.841054,-0.992790,1.353638,8.956276,-5.894704,7.820938,-6.988204,-7.637972,9.263522,-5.330221,-9.609200,0.783578,-7.593482,-6.288074,-5.999156,2.037968,-8.155771,8.558470,-8.881558,-0.361981,-8.768532,1.789746,1.887456,-6.256014,-9.916638,-9.348370,9.086603,0.427528,7.690425,-3.728678,5.015942,9.706916,-6.185763,1.343520,4.943292,0.328952,4.839881,-8.810657,-0.926999,6.340544,4.749982,1.261417,7.087410,2.275192,-9.950395,8.497156,3.708108,-4.566809,3.459009,-0.871931,4.635913,-6.239314,-8.918120,2.765015,-3.958476,-7.458495,8.124573,-5.865462,-1.728441,9.233159,-1.639129,-2.193084,7.512520,3.636487,4.237720,1.524965,6.788842,4.171085,-9.104644,-4.311237,-4.622811,-0.168136,7.036136,-6.233142,-9.441091,-0.651723,-4.849184,-6.216843,1.852219,-1.876425,-9.419874,9.816448,-2.433826,2.556156,-6.383129,8.210311,-2.431178,-3.377227,-3.494324,3.123605,-7.168674,0.428377,2.478703,-1.161454,0.150567,7.282818,-9.209662,4.578672,3.544278,3.827351,6.465434,-0.866938,-1.474083,0.167609,-0.827207,-8.784350,-5.603810,5.805715,2.654335,2.347309,7.853726,-9.817445,0.745674,-3.032023,0.127184,-9.211776,-4.284169,-1.565407,2.937227,7.933352,5.044601,-8.040343,-1.779281,0.064348,9.934304,-4.331050,1.570575,-6.719539,4.255561,4.601986,-8.583525,0.245553,1.999004,-9.303026,4.024222,-7.336172,4.803626,-5.712415,-9.927897,8.699854,-5.246622,-6.436590,7.673058,7.778661,6.458180,6.106197,-2.540979,-1.624520,-5.100623,4.386867,7.554969,-3.390518,-3.951387,-7.509351,-6.004884,6.654923,4.500354,-1.938432,-2.022394,9.620223,5.578247,-4.253347,6.369744,0.840630,6.854992,0.991679,-0.604720,3.802700,2.347518,8.449062,7.624557,-5.909463,2.938042,6.454200,-0.013375,0.312463,8.484843,-8.972250,3.984586,0.090447,-6.735585,6.098798,-8.084484,6.955407,-7.722243,-4.687711,5.821550,-4.994302,2.666001,9.031621,6.631209,2.620803,-9.398724,2.614212,2.545240,-1.431024,-6.726869,-9.936084,-1.467438,-2.207266,1.844701,-7.153887,3.866944,0.770344,2.010554,6.912841,1.550114,9.063789,-6.507382,5.317338,5.063329,6.774413,7.053900,7.022912,5.657903,-8.677938,-9.040723,-7.062506,-0.731935,-7.348671,-0.927856,-6.538471,9.374640,6.277753,-1.931091,2.919753,-6.229279,9.316476,4.493621,6.727148,-2.482096,3.146111,-3.029960,1.353721,3.036089,-3.349645,7.661162,9.593610,0.819450,-8.302459,-6.995866,8.571402,-3.109097,-1.996905,1.877660,-6.410943,-6.085939,-8.926939,6.899070,3.612591,-6.185900], dtype = "float32")#candidate|6086|(756,)|const|float32
call_6085 = relay.TupleGetItem(func_1902_call(relay.reshape(const_6086.astype('float32'), [7, 12, 9])), 3)
call_6087 = relay.TupleGetItem(func_1904_call(relay.reshape(const_6086.astype('float32'), [7, 12, 9])), 3)
output = relay.Tuple([call_6081,call_6085,const_6086,])
output2 = relay.Tuple([call_6082,call_6087,const_6086,])
func_6162 = relay.Function([], output)
mod['func_6162'] = func_6162
mod = relay.transform.InferType()(mod)
output = func_6162()
func_6163 = relay.Function([], output)
mutated_mod['func_6163'] = func_6163
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1945_call = mod.get_global_var('func_1945')
func_1946_call = mutated_mod.get_global_var('func_1946')
call_6188 = func_1945_call()
call_6189 = func_1945_call()
func_5730_call = mod.get_global_var('func_5730')
func_5732_call = mutated_mod.get_global_var('func_5732')
call_6204 = relay.TupleGetItem(func_5730_call(), 0)
call_6205 = relay.TupleGetItem(func_5732_call(), 0)
output = relay.Tuple([call_6188,call_6204,])
output2 = relay.Tuple([call_6189,call_6205,])
func_6206 = relay.Function([], output)
mod['func_6206'] = func_6206
mod = relay.transform.InferType()(mod)
mutated_mod['func_6206'] = func_6206
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6206_call = mutated_mod.get_global_var('func_6206')
call_6207 = func_6206_call()
output = call_6207
func_6208 = relay.Function([], output)
mutated_mod['func_6208'] = func_6208
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3764_call = mod.get_global_var('func_3764')
func_3765_call = mutated_mod.get_global_var('func_3765')
call_6211 = relay.TupleGetItem(func_3764_call(), 0)
call_6212 = relay.TupleGetItem(func_3765_call(), 0)
output = call_6211
output2 = call_6212
func_6217 = relay.Function([], output)
mod['func_6217'] = func_6217
mod = relay.transform.InferType()(mod)
output = func_6217()
func_6218 = relay.Function([], output)
mutated_mod['func_6218'] = func_6218
mutated_mod = relay.transform.InferType()(mutated_mod)
var_6240 = relay.var("var_6240", dtype = "float32", shape = (4, 1, 16))#candidate|6240|(4, 1, 16)|var|float32
var_6241 = relay.var("var_6241", dtype = "float32", shape = (4, 8, 16))#candidate|6241|(4, 8, 16)|var|float32
bop_6242 = relay.not_equal(var_6240.astype('bool'), var_6241.astype('bool')) # shape=(4, 8, 16)
output = bop_6242
output2 = bop_6242
func_6247 = relay.Function([var_6240,var_6241,], output)
mod['func_6247'] = func_6247
mod = relay.transform.InferType()(mod)
mutated_mod['func_6247'] = func_6247
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6247_call = mutated_mod.get_global_var('func_6247')
var_6249 = relay.var("var_6249", dtype = "float32", shape = (4, 1, 16))#candidate|6249|(4, 1, 16)|var|float32
var_6250 = relay.var("var_6250", dtype = "float32", shape = (4, 8, 16))#candidate|6250|(4, 8, 16)|var|float32
call_6248 = func_6247_call(var_6249,var_6250,)
output = call_6248
func_6251 = relay.Function([var_6249,var_6250,], output)
mutated_mod['func_6251'] = func_6251
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2546_call = mod.get_global_var('func_2546')
func_2547_call = mutated_mod.get_global_var('func_2547')
call_6269 = relay.TupleGetItem(func_2546_call(), 2)
call_6270 = relay.TupleGetItem(func_2547_call(), 2)
output = relay.Tuple([call_6269,])
output2 = relay.Tuple([call_6270,])
func_6282 = relay.Function([], output)
mod['func_6282'] = func_6282
mod = relay.transform.InferType()(mod)
mutated_mod['func_6282'] = func_6282
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6282_call = mutated_mod.get_global_var('func_6282')
call_6283 = func_6282_call()
output = call_6283
func_6284 = relay.Function([], output)
mutated_mod['func_6284'] = func_6284
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2856_call = mod.get_global_var('func_2856')
func_2857_call = mutated_mod.get_global_var('func_2857')
call_6285 = relay.TupleGetItem(func_2856_call(), 0)
call_6286 = relay.TupleGetItem(func_2857_call(), 0)
output = relay.Tuple([call_6285,])
output2 = relay.Tuple([call_6286,])
func_6294 = relay.Function([], output)
mod['func_6294'] = func_6294
mod = relay.transform.InferType()(mod)
mutated_mod['func_6294'] = func_6294
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6294_call = mutated_mod.get_global_var('func_6294')
call_6295 = func_6294_call()
output = call_6295
func_6296 = relay.Function([], output)
mutated_mod['func_6296'] = func_6296
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2467_call = mod.get_global_var('func_2467')
func_2469_call = mutated_mod.get_global_var('func_2469')
call_6323 = func_2467_call()
call_6324 = func_2467_call()
func_2627_call = mod.get_global_var('func_2627')
func_2629_call = mutated_mod.get_global_var('func_2629')
call_6327 = func_2627_call()
call_6328 = func_2627_call()
output = relay.Tuple([call_6323,call_6327,])
output2 = relay.Tuple([call_6324,call_6328,])
func_6333 = relay.Function([], output)
mod['func_6333'] = func_6333
mod = relay.transform.InferType()(mod)
mutated_mod['func_6333'] = func_6333
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6333_call = mutated_mod.get_global_var('func_6333')
call_6334 = func_6333_call()
output = call_6334
func_6335 = relay.Function([], output)
mutated_mod['func_6335'] = func_6335
mutated_mod = relay.transform.InferType()(mutated_mod)
var_6346 = relay.var("var_6346", dtype = "float64", shape = (15, 8, 9))#candidate|6346|(15, 8, 9)|var|float64
var_6347 = relay.var("var_6347", dtype = "float64", shape = (15, 8, 9))#candidate|6347|(15, 8, 9)|var|float64
bop_6348 = relay.maximum(var_6346.astype('float64'), relay.reshape(var_6347.astype('float64'), relay.shape_of(var_6346))) # shape=(15, 8, 9)
bop_6357 = relay.bitwise_and(var_6347.astype('uint64'), relay.reshape(bop_6348.astype('uint64'), relay.shape_of(var_6347))) # shape=(15, 8, 9)
bop_6367 = relay.left_shift(var_6346.astype('uint8'), relay.reshape(var_6347.astype('uint8'), relay.shape_of(var_6346))) # shape=(15, 8, 9)
bop_6371 = relay.greater_equal(bop_6367.astype('bool'), relay.reshape(var_6347.astype('bool'), relay.shape_of(bop_6367))) # shape=(15, 8, 9)
uop_6377 = relay.acosh(bop_6348.astype('float32')) # shape=(15, 8, 9)
uop_6380 = relay.atanh(bop_6348.astype('float32')) # shape=(15, 8, 9)
uop_6409 = relay.sin(bop_6357.astype('float32')) # shape=(15, 8, 9)
output = relay.Tuple([bop_6371,uop_6377,uop_6380,uop_6409,])
output2 = relay.Tuple([bop_6371,uop_6377,uop_6380,uop_6409,])
func_6420 = relay.Function([var_6346,var_6347,], output)
mod['func_6420'] = func_6420
mod = relay.transform.InferType()(mod)
mutated_mod['func_6420'] = func_6420
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6420_call = mutated_mod.get_global_var('func_6420')
var_6422 = relay.var("var_6422", dtype = "float64", shape = (15, 8, 9))#candidate|6422|(15, 8, 9)|var|float64
var_6423 = relay.var("var_6423", dtype = "float64", shape = (15, 8, 9))#candidate|6423|(15, 8, 9)|var|float64
call_6421 = func_6420_call(var_6422,var_6423,)
output = call_6421
func_6424 = relay.Function([var_6422,var_6423,], output)
mutated_mod['func_6424'] = func_6424
mutated_mod = relay.transform.InferType()(mutated_mod)
var_6434 = relay.var("var_6434", dtype = "int8", shape = (1, 8, 7))#candidate|6434|(1, 8, 7)|var|int8
var_6435 = relay.var("var_6435", dtype = "int8", shape = (3, 8, 7))#candidate|6435|(3, 8, 7)|var|int8
bop_6436 = relay.bitwise_or(var_6434.astype('int8'), var_6435.astype('int8')) # shape=(3, 8, 7)
output = relay.Tuple([bop_6436,])
output2 = relay.Tuple([bop_6436,])
func_6445 = relay.Function([var_6434,var_6435,], output)
mod['func_6445'] = func_6445
mod = relay.transform.InferType()(mod)
mutated_mod['func_6445'] = func_6445
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6445_call = mutated_mod.get_global_var('func_6445')
var_6447 = relay.var("var_6447", dtype = "int8", shape = (1, 8, 7))#candidate|6447|(1, 8, 7)|var|int8
var_6448 = relay.var("var_6448", dtype = "int8", shape = (3, 8, 7))#candidate|6448|(3, 8, 7)|var|int8
call_6446 = func_6445_call(var_6447,var_6448,)
output = call_6446
func_6449 = relay.Function([var_6447,var_6448,], output)
mutated_mod['func_6449'] = func_6449
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2546_call = mod.get_global_var('func_2546')
func_2547_call = mutated_mod.get_global_var('func_2547')
call_6498 = relay.TupleGetItem(func_2546_call(), 1)
call_6499 = relay.TupleGetItem(func_2547_call(), 1)
uop_6503 = relay.exp(call_6498.astype('float64')) # shape=(1408,)
uop_6505 = relay.exp(call_6499.astype('float64')) # shape=(1408,)
func_5063_call = mod.get_global_var('func_5063')
func_5064_call = mutated_mod.get_global_var('func_5064')
call_6510 = func_5063_call()
call_6511 = func_5063_call()
output = relay.Tuple([uop_6503,call_6510,])
output2 = relay.Tuple([uop_6505,call_6511,])
func_6520 = relay.Function([], output)
mod['func_6520'] = func_6520
mod = relay.transform.InferType()(mod)
output = func_6520()
func_6521 = relay.Function([], output)
mutated_mod['func_6521'] = func_6521
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3399_call = mod.get_global_var('func_3399')
func_3401_call = mutated_mod.get_global_var('func_3401')
call_6539 = relay.TupleGetItem(func_3399_call(), 1)
call_6540 = relay.TupleGetItem(func_3401_call(), 1)
func_1608_call = mod.get_global_var('func_1608')
func_1611_call = mutated_mod.get_global_var('func_1611')
var_6544 = relay.var("var_6544", dtype = "float64", shape = (384,))#candidate|6544|(384,)|var|float64
call_6543 = func_1608_call(relay.reshape(var_6544.astype('float64'), [2, 16, 12]))
call_6545 = func_1608_call(relay.reshape(var_6544.astype('float64'), [2, 16, 12]))
uop_6549 = relay.acosh(call_6543.astype('float64')) # shape=(2, 16, 12)
uop_6551 = relay.acosh(call_6545.astype('float64')) # shape=(2, 16, 12)
func_4171_call = mod.get_global_var('func_4171')
func_4174_call = mutated_mod.get_global_var('func_4174')
var_6556 = relay.var("var_6556", dtype = "int8", shape = (560,))#candidate|6556|(560,)|var|int8
var_6557 = relay.var("var_6557", dtype = "float32", shape = (2145,))#candidate|6557|(2145,)|var|float32
call_6555 = relay.TupleGetItem(func_4171_call(relay.reshape(var_6556.astype('int8'), [560,]), relay.reshape(var_6557.astype('float32'), [11, 15, 13]), ), 2)
call_6558 = relay.TupleGetItem(func_4174_call(relay.reshape(var_6556.astype('int8'), [560,]), relay.reshape(var_6557.astype('float32'), [11, 15, 13]), ), 2)
output = relay.Tuple([call_6539,var_6544,uop_6549,call_6555,var_6556,var_6557,])
output2 = relay.Tuple([call_6540,var_6544,uop_6551,call_6558,var_6556,var_6557,])
func_6567 = relay.Function([var_6544,var_6556,var_6557,], output)
mod['func_6567'] = func_6567
mod = relay.transform.InferType()(mod)
mutated_mod['func_6567'] = func_6567
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6567_call = mutated_mod.get_global_var('func_6567')
var_6569 = relay.var("var_6569", dtype = "float64", shape = (384,))#candidate|6569|(384,)|var|float64
var_6570 = relay.var("var_6570", dtype = "int8", shape = (560,))#candidate|6570|(560,)|var|int8
var_6571 = relay.var("var_6571", dtype = "float32", shape = (2145,))#candidate|6571|(2145,)|var|float32
call_6568 = func_6567_call(var_6569,var_6570,var_6571,)
output = call_6568
func_6572 = relay.Function([var_6569,var_6570,var_6571,], output)
mutated_mod['func_6572'] = func_6572
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4484_call = mod.get_global_var('func_4484')
func_4485_call = mutated_mod.get_global_var('func_4485')
call_6588 = relay.TupleGetItem(func_4484_call(), 1)
call_6589 = relay.TupleGetItem(func_4485_call(), 1)
func_2132_call = mod.get_global_var('func_2132')
func_2133_call = mutated_mod.get_global_var('func_2133')
call_6592 = func_2132_call()
call_6593 = func_2132_call()
func_5896_call = mod.get_global_var('func_5896')
func_5897_call = mutated_mod.get_global_var('func_5897')
call_6595 = relay.TupleGetItem(func_5896_call(), 0)
call_6596 = relay.TupleGetItem(func_5897_call(), 0)
output = relay.Tuple([call_6588,call_6592,call_6595,])
output2 = relay.Tuple([call_6589,call_6593,call_6596,])
func_6601 = relay.Function([], output)
mod['func_6601'] = func_6601
mod = relay.transform.InferType()(mod)
mutated_mod['func_6601'] = func_6601
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6601_call = mutated_mod.get_global_var('func_6601')
call_6602 = func_6601_call()
output = call_6602
func_6603 = relay.Function([], output)
mutated_mod['func_6603'] = func_6603
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1032_call = mod.get_global_var('func_1032')
func_1034_call = mutated_mod.get_global_var('func_1034')
call_6607 = relay.TupleGetItem(func_1032_call(), 1)
call_6608 = relay.TupleGetItem(func_1034_call(), 1)
output = relay.Tuple([call_6607,])
output2 = relay.Tuple([call_6608,])
func_6637 = relay.Function([], output)
mod['func_6637'] = func_6637
mod = relay.transform.InferType()(mod)
output = func_6637()
func_6638 = relay.Function([], output)
mutated_mod['func_6638'] = func_6638
mutated_mod = relay.transform.InferType()(mutated_mod)
var_6654 = relay.var("var_6654", dtype = "float64", shape = (1, 1, 11))#candidate|6654|(1, 1, 11)|var|float64
var_6655 = relay.var("var_6655", dtype = "float64", shape = (7, 3, 11))#candidate|6655|(7, 3, 11)|var|float64
bop_6656 = relay.floor_mod(var_6654.astype('float64'), var_6655.astype('float64')) # shape=(7, 3, 11)
uop_6669 = relay.erf(bop_6656.astype('float32')) # shape=(7, 3, 11)
output = relay.Tuple([uop_6669,])
output2 = relay.Tuple([uop_6669,])
func_6672 = relay.Function([var_6654,var_6655,], output)
mod['func_6672'] = func_6672
mod = relay.transform.InferType()(mod)
var_6673 = relay.var("var_6673", dtype = "float64", shape = (1, 1, 11))#candidate|6673|(1, 1, 11)|var|float64
var_6674 = relay.var("var_6674", dtype = "float64", shape = (7, 3, 11))#candidate|6674|(7, 3, 11)|var|float64
output = func_6672(var_6673,var_6674,)
func_6675 = relay.Function([var_6673,var_6674,], output)
mutated_mod['func_6675'] = func_6675
mutated_mod = relay.transform.InferType()(mutated_mod)
var_6704 = relay.var("var_6704", dtype = "uint64", shape = (8, 16, 15))#candidate|6704|(8, 16, 15)|var|uint64
var_6705 = relay.var("var_6705", dtype = "uint64", shape = (8, 16, 15))#candidate|6705|(8, 16, 15)|var|uint64
bop_6706 = relay.add(var_6704.astype('uint64'), relay.reshape(var_6705.astype('uint64'), relay.shape_of(var_6704))) # shape=(8, 16, 15)
output = relay.Tuple([bop_6706,])
output2 = relay.Tuple([bop_6706,])
func_6713 = relay.Function([var_6704,var_6705,], output)
mod['func_6713'] = func_6713
mod = relay.transform.InferType()(mod)
mutated_mod['func_6713'] = func_6713
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6713_call = mutated_mod.get_global_var('func_6713')
var_6715 = relay.var("var_6715", dtype = "uint64", shape = (8, 16, 15))#candidate|6715|(8, 16, 15)|var|uint64
var_6716 = relay.var("var_6716", dtype = "uint64", shape = (8, 16, 15))#candidate|6716|(8, 16, 15)|var|uint64
call_6714 = func_6713_call(var_6715,var_6716,)
output = call_6714
func_6717 = relay.Function([var_6715,var_6716,], output)
mutated_mod['func_6717'] = func_6717
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5367_call = mod.get_global_var('func_5367')
func_5368_call = mutated_mod.get_global_var('func_5368')
call_6750 = relay.TupleGetItem(func_5367_call(), 1)
call_6751 = relay.TupleGetItem(func_5368_call(), 1)
output = relay.Tuple([call_6750,])
output2 = relay.Tuple([call_6751,])
func_6758 = relay.Function([], output)
mod['func_6758'] = func_6758
mod = relay.transform.InferType()(mod)
mutated_mod['func_6758'] = func_6758
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6758_call = mutated_mod.get_global_var('func_6758')
call_6759 = func_6758_call()
output = call_6759
func_6760 = relay.Function([], output)
mutated_mod['func_6760'] = func_6760
mutated_mod = relay.transform.InferType()(mutated_mod)
var_6768 = relay.var("var_6768", dtype = "float32", shape = (6, 6, 15))#candidate|6768|(6, 6, 15)|var|float32
var_6769 = relay.var("var_6769", dtype = "float32", shape = (6, 6, 15))#candidate|6769|(6, 6, 15)|var|float32
bop_6770 = relay.power(var_6768.astype('float32'), relay.reshape(var_6769.astype('float32'), relay.shape_of(var_6768))) # shape=(6, 6, 15)
output = relay.Tuple([bop_6770,])
output2 = relay.Tuple([bop_6770,])
func_6777 = relay.Function([var_6768,var_6769,], output)
mod['func_6777'] = func_6777
mod = relay.transform.InferType()(mod)
mutated_mod['func_6777'] = func_6777
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6777_call = mutated_mod.get_global_var('func_6777')
var_6779 = relay.var("var_6779", dtype = "float32", shape = (6, 6, 15))#candidate|6779|(6, 6, 15)|var|float32
var_6780 = relay.var("var_6780", dtype = "float32", shape = (6, 6, 15))#candidate|6780|(6, 6, 15)|var|float32
call_6778 = func_6777_call(var_6779,var_6780,)
output = call_6778
func_6781 = relay.Function([var_6779,var_6780,], output)
mutated_mod['func_6781'] = func_6781
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3083_call = mod.get_global_var('func_3083')
func_3085_call = mutated_mod.get_global_var('func_3085')
call_6793 = relay.TupleGetItem(func_3083_call(), 0)
call_6794 = relay.TupleGetItem(func_3085_call(), 0)
func_6282_call = mod.get_global_var('func_6282')
func_6284_call = mutated_mod.get_global_var('func_6284')
call_6799 = relay.TupleGetItem(func_6282_call(), 0)
call_6800 = relay.TupleGetItem(func_6284_call(), 0)
var_6815 = relay.var("var_6815", dtype = "uint64", shape = (312,))#candidate|6815|(312,)|var|uint64
bop_6816 = relay.maximum(call_6799.astype('uint16'), relay.reshape(var_6815.astype('uint16'), relay.shape_of(call_6799))) # shape=(312,)
bop_6819 = relay.maximum(call_6800.astype('uint16'), relay.reshape(var_6815.astype('uint16'), relay.shape_of(call_6800))) # shape=(312,)
func_1945_call = mod.get_global_var('func_1945')
func_1946_call = mutated_mod.get_global_var('func_1946')
call_6827 = func_1945_call()
call_6828 = func_1945_call()
uop_6831 = relay.atanh(bop_6816.astype('float32')) # shape=(312,)
uop_6833 = relay.atanh(bop_6819.astype('float32')) # shape=(312,)
func_6073_call = mod.get_global_var('func_6073')
func_6074_call = mutated_mod.get_global_var('func_6074')
call_6837 = relay.TupleGetItem(func_6073_call(), 0)
call_6838 = relay.TupleGetItem(func_6074_call(), 0)
func_1032_call = mod.get_global_var('func_1032')
func_1034_call = mutated_mod.get_global_var('func_1034')
call_6839 = relay.TupleGetItem(func_1032_call(), 0)
call_6840 = relay.TupleGetItem(func_1034_call(), 0)
output = relay.Tuple([call_6793,call_6827,uop_6831,call_6837,call_6839,])
output2 = relay.Tuple([call_6794,call_6828,uop_6833,call_6838,call_6840,])
func_6841 = relay.Function([var_6815,], output)
mod['func_6841'] = func_6841
mod = relay.transform.InferType()(mod)
mutated_mod['func_6841'] = func_6841
mutated_mod = relay.transform.InferType()(mutated_mod)
var_6842 = relay.var("var_6842", dtype = "uint64", shape = (312,))#candidate|6842|(312,)|var|uint64
func_6841_call = mutated_mod.get_global_var('func_6841')
call_6843 = func_6841_call(var_6842)
output = call_6843
func_6844 = relay.Function([var_6842], output)
mutated_mod['func_6844'] = func_6844
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2568_call = mod.get_global_var('func_2568')
func_2570_call = mutated_mod.get_global_var('func_2570')
call_6846 = relay.TupleGetItem(func_2568_call(), 0)
call_6847 = relay.TupleGetItem(func_2570_call(), 0)
func_6672_call = mod.get_global_var('func_6672')
func_6675_call = mutated_mod.get_global_var('func_6675')
var_6855 = relay.var("var_6855", dtype = "float64", shape = (11,))#candidate|6855|(11,)|var|float64
const_6856 = relay.const([-8.147181,0.254138,9.881484,-8.079975,5.598966,-3.646376,0.114716,8.273907,9.952714,-4.234951,-1.954569,5.065136,2.163287,7.811467,-5.897114,1.655989,8.659893,-7.087662,5.407718,-2.840081,-3.947062,4.274070,4.192541,-3.427925,-3.535500,-4.466933,-2.383940,9.182560,-3.766356,0.026928,9.507672,-2.807778,7.955413,8.582424,8.669967,-0.837393,-6.946354,2.888222,-0.277434,-9.912272,-6.018828,-1.985574,-8.929128,3.285627,-9.895636,-4.404296,6.238870,-0.458884,4.729075,1.859366,4.329008,6.658422,5.221849,8.282045,-3.491103,-4.295772,-9.276600,-2.075695,-3.638894,-9.083074,-8.057738,-9.001511,7.490329,-3.995881,5.860522,8.375074,8.150790,-8.954308,9.287526,4.102138,-7.437588,2.513286,-3.955616,9.346126,1.679054,5.209222,-0.396596,0.454279,-5.592227,3.419837,2.118012,-1.716535,4.093243,6.459617,-4.210537,-1.514668,7.534950,7.551607,7.202639,-0.573374,-1.663342,-3.805287,-0.849143,-4.452089,-5.312445,-2.480210,-6.364760,-6.224621,4.150518,7.522654,-5.310340,-9.793729,1.112051,1.232311,6.943678,1.287685,4.190747,-6.454668,7.566370,-1.764868,-0.004246,6.538843,3.809405,-8.280279,2.917698,-3.550327,-8.751453,9.735204,7.808569,-8.377808,4.608649,-6.792009,-6.126513,-7.322462,-3.748715,9.503608,8.720869,3.951264,-0.001799,9.627347,1.228331,-1.250500,8.934467,1.290555,-8.008689,1.231594,5.057140,1.912630,-6.741935,2.690025,-5.173896,-1.111015,8.312705,1.888705,0.815988,-4.418435,-5.490695,-0.726077,-4.974458,-8.139113,-1.346349,-3.217730,-9.766739,4.445144,3.366345,0.316991,9.264621,8.317292,8.688940,-0.426935,-4.727599,-7.855240,5.911881,-1.995461,-2.285428,9.514007,-8.288554,2.479232,4.217509,5.043314,5.801663,-8.081156,-7.182855,-7.169305,-7.990523,1.702734,7.491056,-8.480484,-6.042594,-9.655248,2.913975,1.064496,-5.246146,-4.246551,7.027692,-1.918553,-1.430128,5.754022,1.935244,2.079205,1.346246,-7.760862,-7.628371,8.342086,9.164472,2.338175,7.899679,-3.872194,3.195183,3.519286,-2.014054,-2.466631,5.747252,-8.795529,2.462864,-2.012201,-8.483453,6.785005,9.207377,3.479504,-1.369002,-6.290844,-7.444097,4.617318,8.890861,-4.526940,1.399252,4.002476,9.943644,5.638914,1.102945,5.368737,-9.572214,-4.662959,1.198802,-1.182700,-4.289570,-6.857346,6.770399,2.501666,-0.455854], dtype = "float64")#candidate|6856|(231,)|const|float64
call_6854 = relay.TupleGetItem(func_6672_call(relay.reshape(var_6855.astype('float64'), [1, 1, 11]), relay.reshape(const_6856.astype('float64'), [7, 3, 11]), ), 0)
call_6857 = relay.TupleGetItem(func_6675_call(relay.reshape(var_6855.astype('float64'), [1, 1, 11]), relay.reshape(const_6856.astype('float64'), [7, 3, 11]), ), 0)
output = relay.Tuple([call_6846,call_6854,var_6855,const_6856,])
output2 = relay.Tuple([call_6847,call_6857,var_6855,const_6856,])
func_6858 = relay.Function([var_6855,], output)
mod['func_6858'] = func_6858
mod = relay.transform.InferType()(mod)
var_6859 = relay.var("var_6859", dtype = "float64", shape = (11,))#candidate|6859|(11,)|var|float64
output = func_6858(var_6859)
func_6860 = relay.Function([var_6859], output)
mutated_mod['func_6860'] = func_6860
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5698_call = mod.get_global_var('func_5698')
func_5699_call = mutated_mod.get_global_var('func_5699')
call_6936 = relay.TupleGetItem(func_5698_call(), 0)
call_6937 = relay.TupleGetItem(func_5699_call(), 0)
uop_6940 = relay.log(call_6936.astype('float64')) # shape=(12, 6, 8)
uop_6942 = relay.log(call_6937.astype('float64')) # shape=(12, 6, 8)
output = uop_6940
output2 = uop_6942
func_6943 = relay.Function([], output)
mod['func_6943'] = func_6943
mod = relay.transform.InferType()(mod)
mutated_mod['func_6943'] = func_6943
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6943_call = mutated_mod.get_global_var('func_6943')
call_6944 = func_6943_call()
output = call_6944
func_6945 = relay.Function([], output)
mutated_mod['func_6945'] = func_6945
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5063_call = mod.get_global_var('func_5063')
func_5064_call = mutated_mod.get_global_var('func_5064')
call_6985 = func_5063_call()
call_6986 = func_5063_call()
output = relay.Tuple([call_6985,])
output2 = relay.Tuple([call_6986,])
func_6990 = relay.Function([], output)
mod['func_6990'] = func_6990
mod = relay.transform.InferType()(mod)
mutated_mod['func_6990'] = func_6990
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6990_call = mutated_mod.get_global_var('func_6990')
call_6991 = func_6990_call()
output = call_6991
func_6992 = relay.Function([], output)
mutated_mod['func_6992'] = func_6992
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2790_call = mod.get_global_var('func_2790')
func_2791_call = mutated_mod.get_global_var('func_2791')
call_7012 = relay.TupleGetItem(func_2790_call(), 0)
call_7013 = relay.TupleGetItem(func_2791_call(), 0)
func_6777_call = mod.get_global_var('func_6777')
func_6781_call = mutated_mod.get_global_var('func_6781')
var_7018 = relay.var("var_7018", dtype = "float32", shape = (540,))#candidate|7018|(540,)|var|float32
call_7017 = relay.TupleGetItem(func_6777_call(relay.reshape(var_7018.astype('float32'), [6, 6, 15]), relay.reshape(var_7018.astype('float32'), [6, 6, 15]), ), 0)
call_7019 = relay.TupleGetItem(func_6781_call(relay.reshape(var_7018.astype('float32'), [6, 6, 15]), relay.reshape(var_7018.astype('float32'), [6, 6, 15]), ), 0)
output = relay.Tuple([call_7012,call_7017,var_7018,])
output2 = relay.Tuple([call_7013,call_7019,var_7018,])
func_7047 = relay.Function([var_7018,], output)
mod['func_7047'] = func_7047
mod = relay.transform.InferType()(mod)
mutated_mod['func_7047'] = func_7047
mutated_mod = relay.transform.InferType()(mutated_mod)
var_7048 = relay.var("var_7048", dtype = "float32", shape = (540,))#candidate|7048|(540,)|var|float32
func_7047_call = mutated_mod.get_global_var('func_7047')
call_7049 = func_7047_call(var_7048)
output = call_7049
func_7050 = relay.Function([var_7048], output)
mutated_mod['func_7050'] = func_7050
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1227_call = mod.get_global_var('func_1227')
func_1228_call = mutated_mod.get_global_var('func_1228')
call_7075 = relay.TupleGetItem(func_1227_call(), 0)
call_7076 = relay.TupleGetItem(func_1228_call(), 0)
func_3764_call = mod.get_global_var('func_3764')
func_3765_call = mutated_mod.get_global_var('func_3765')
call_7111 = relay.TupleGetItem(func_3764_call(), 1)
call_7112 = relay.TupleGetItem(func_3765_call(), 1)
func_4974_call = mod.get_global_var('func_4974')
func_4975_call = mutated_mod.get_global_var('func_4975')
call_7119 = func_4974_call()
call_7120 = func_4974_call()
func_2989_call = mod.get_global_var('func_2989')
func_2990_call = mutated_mod.get_global_var('func_2990')
call_7124 = relay.TupleGetItem(func_2989_call(), 0)
call_7125 = relay.TupleGetItem(func_2990_call(), 0)
func_6777_call = mod.get_global_var('func_6777')
func_6781_call = mutated_mod.get_global_var('func_6781')
var_7130 = relay.var("var_7130", dtype = "float32", shape = (9, 60))#candidate|7130|(9, 60)|var|float32
call_7129 = relay.TupleGetItem(func_6777_call(relay.reshape(var_7130.astype('float32'), [6, 6, 15]), relay.reshape(var_7130.astype('float32'), [6, 6, 15]), ), 0)
call_7131 = relay.TupleGetItem(func_6781_call(relay.reshape(var_7130.astype('float32'), [6, 6, 15]), relay.reshape(var_7130.astype('float32'), [6, 6, 15]), ), 0)
func_5560_call = mod.get_global_var('func_5560')
func_5562_call = mutated_mod.get_global_var('func_5562')
call_7135 = func_5560_call()
call_7136 = func_5560_call()
output = relay.Tuple([call_7075,call_7111,call_7119,call_7124,call_7129,var_7130,call_7135,])
output2 = relay.Tuple([call_7076,call_7112,call_7120,call_7125,call_7131,var_7130,call_7136,])
func_7157 = relay.Function([var_7130,], output)
mod['func_7157'] = func_7157
mod = relay.transform.InferType()(mod)
mutated_mod['func_7157'] = func_7157
mutated_mod = relay.transform.InferType()(mutated_mod)
var_7158 = relay.var("var_7158", dtype = "float32", shape = (9, 60))#candidate|7158|(9, 60)|var|float32
func_7157_call = mutated_mod.get_global_var('func_7157')
call_7159 = func_7157_call(var_7158)
output = call_7159
func_7160 = relay.Function([var_7158], output)
mutated_mod['func_7160'] = func_7160
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1198_call = mod.get_global_var('func_1198')
func_1199_call = mutated_mod.get_global_var('func_1199')
call_7213 = relay.TupleGetItem(func_1198_call(), 1)
call_7214 = relay.TupleGetItem(func_1199_call(), 1)
var_7216 = relay.var("var_7216", dtype = "int8", shape = (11, 15, 13))#candidate|7216|(11, 15, 13)|var|int8
bop_7217 = relay.mod(call_7213.astype('float32'), relay.reshape(var_7216.astype('float32'), relay.shape_of(call_7213))) # shape=(11, 15, 13)
bop_7220 = relay.mod(call_7214.astype('float32'), relay.reshape(var_7216.astype('float32'), relay.shape_of(call_7214))) # shape=(11, 15, 13)
func_6943_call = mod.get_global_var('func_6943')
func_6945_call = mutated_mod.get_global_var('func_6945')
call_7224 = func_6943_call()
call_7225 = func_6943_call()
func_2132_call = mod.get_global_var('func_2132')
func_2133_call = mutated_mod.get_global_var('func_2133')
call_7235 = func_2132_call()
call_7236 = func_2132_call()
uop_7242 = relay.sinh(call_7235.astype('float64')) # shape=(2145,)
uop_7244 = relay.sinh(call_7236.astype('float64')) # shape=(2145,)
func_5589_call = mod.get_global_var('func_5589')
func_5591_call = mutated_mod.get_global_var('func_5591')
var_7246 = relay.var("var_7246", dtype = "uint64", shape = (12,))#candidate|7246|(12,)|var|uint64
call_7245 = func_5589_call(relay.reshape(var_7246.astype('uint64'), [3, 2, 2]))
call_7247 = func_5589_call(relay.reshape(var_7246.astype('uint64'), [3, 2, 2]))
output = relay.Tuple([bop_7217,call_7224,uop_7242,call_7245,var_7246,])
output2 = relay.Tuple([bop_7220,call_7225,uop_7244,call_7247,var_7246,])
func_7251 = relay.Function([var_7216,var_7246,], output)
mod['func_7251'] = func_7251
mod = relay.transform.InferType()(mod)
var_7252 = relay.var("var_7252", dtype = "int8", shape = (11, 15, 13))#candidate|7252|(11, 15, 13)|var|int8
var_7253 = relay.var("var_7253", dtype = "uint64", shape = (12,))#candidate|7253|(12,)|var|uint64
output = func_7251(var_7252,var_7253,)
func_7254 = relay.Function([var_7252,var_7253,], output)
mutated_mod['func_7254'] = func_7254
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6990_call = mod.get_global_var('func_6990')
func_6992_call = mutated_mod.get_global_var('func_6992')
call_7259 = relay.TupleGetItem(func_6990_call(), 0)
call_7260 = relay.TupleGetItem(func_6992_call(), 0)
func_5367_call = mod.get_global_var('func_5367')
func_5368_call = mutated_mod.get_global_var('func_5368')
call_7267 = relay.TupleGetItem(func_5367_call(), 0)
call_7268 = relay.TupleGetItem(func_5368_call(), 0)
func_2818_call = mod.get_global_var('func_2818')
func_2819_call = mutated_mod.get_global_var('func_2819')
call_7272 = relay.TupleGetItem(func_2818_call(), 0)
call_7273 = relay.TupleGetItem(func_2819_call(), 0)
output = relay.Tuple([call_7259,call_7267,call_7272,])
output2 = relay.Tuple([call_7260,call_7268,call_7273,])
func_7288 = relay.Function([], output)
mod['func_7288'] = func_7288
mod = relay.transform.InferType()(mod)
output = func_7288()
func_7289 = relay.Function([], output)
mutated_mod['func_7289'] = func_7289
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6943_call = mod.get_global_var('func_6943')
func_6945_call = mutated_mod.get_global_var('func_6945')
call_7324 = func_6943_call()
call_7325 = func_6943_call()
func_7157_call = mod.get_global_var('func_7157')
func_7160_call = mutated_mod.get_global_var('func_7160')
var_7359 = relay.var("var_7359", dtype = "float32", shape = (540,))#candidate|7359|(540,)|var|float32
call_7358 = relay.TupleGetItem(func_7157_call(relay.reshape(var_7359.astype('float32'), [9, 60])), 4)
call_7360 = relay.TupleGetItem(func_7160_call(relay.reshape(var_7359.astype('float32'), [9, 60])), 4)
func_3516_call = mod.get_global_var('func_3516')
func_3520_call = mutated_mod.get_global_var('func_3520')
const_7378 = relay.const([True,False,False,False,False,False,True,True,False,True,True,True,True,True,False,False,True,False,False,True,False,False,False,True,False,False,False,True,False,False,True,True,True,True,True,True,True,False,True,True,True,False,False,False,True,False,False,True,False,True,False,True,True,False,False,True,False,True,False,False,True,True,True,False,False,False,False,True,False,True,False,True,True,False,True,True,False,False,False,False,True,False,True,False,False,False,True,True,True,True,True,False,False,True,True,False,True,True,True,False,False,True,True,True,True,True,False,True,True,False,True,False,False,True,False,True,True,True,False,False,False,True,False,False,False,True,False,False,False,True,False,False,False,True,False,True,False,False,False,True,True,True,True,True,False,True,False,True,False,False,True,False,False,False,False,False,True,False,False,False,True,False,False,True,False,False,False,False,True,False,False,False,False,True,True,False,True,False,False,True,False,True,False,False,True,False,True,True,True,True,True,False,False,True,False,False,False,False,False,True,True,False,True,True,False,False,True,True], dtype = "bool")#candidate|7378|(208,)|const|bool
const_7379 = relay.const(8, dtype = "int8")#candidate|7379|()|const|int8
call_7377 = relay.TupleGetItem(func_3516_call(relay.reshape(const_7378.astype('bool'), [13, 4, 4]), relay.reshape(const_7379.astype('int8'), []), ), 2)
call_7380 = relay.TupleGetItem(func_3520_call(relay.reshape(const_7378.astype('bool'), [13, 4, 4]), relay.reshape(const_7379.astype('int8'), []), ), 2)
output = relay.Tuple([call_7324,call_7358,var_7359,call_7377,const_7378,const_7379,])
output2 = relay.Tuple([call_7325,call_7360,var_7359,call_7380,const_7378,const_7379,])
func_7384 = relay.Function([var_7359,], output)
mod['func_7384'] = func_7384
mod = relay.transform.InferType()(mod)
mutated_mod['func_7384'] = func_7384
mutated_mod = relay.transform.InferType()(mutated_mod)
var_7385 = relay.var("var_7385", dtype = "float32", shape = (540,))#candidate|7385|(540,)|var|float32
func_7384_call = mutated_mod.get_global_var('func_7384')
call_7386 = func_7384_call(var_7385)
output = call_7386
func_7387 = relay.Function([var_7385], output)
mutated_mod['func_7387'] = func_7387
mutated_mod = relay.transform.InferType()(mutated_mod)
var_7395 = relay.var("var_7395", dtype = "float64", shape = (15, 7, 10))#candidate|7395|(15, 7, 10)|var|float64
uop_7396 = relay.asin(var_7395.astype('float64')) # shape=(15, 7, 10)
func_2856_call = mod.get_global_var('func_2856')
func_2857_call = mutated_mod.get_global_var('func_2857')
call_7412 = relay.TupleGetItem(func_2856_call(), 1)
call_7413 = relay.TupleGetItem(func_2857_call(), 1)
output = relay.Tuple([uop_7396,call_7412,])
output2 = relay.Tuple([uop_7396,call_7413,])
func_7416 = relay.Function([var_7395,], output)
mod['func_7416'] = func_7416
mod = relay.transform.InferType()(mod)
mutated_mod['func_7416'] = func_7416
mutated_mod = relay.transform.InferType()(mutated_mod)
var_7417 = relay.var("var_7417", dtype = "float64", shape = (15, 7, 10))#candidate|7417|(15, 7, 10)|var|float64
func_7416_call = mutated_mod.get_global_var('func_7416')
call_7418 = func_7416_call(var_7417)
output = call_7418
func_7419 = relay.Function([var_7417], output)
mutated_mod['func_7419'] = func_7419
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5128_call = mod.get_global_var('func_5128')
func_5130_call = mutated_mod.get_global_var('func_5130')
call_7470 = func_5128_call()
call_7471 = func_5128_call()
output = relay.Tuple([call_7470,])
output2 = relay.Tuple([call_7471,])
func_7492 = relay.Function([], output)
mod['func_7492'] = func_7492
mod = relay.transform.InferType()(mod)
output = func_7492()
func_7493 = relay.Function([], output)
mutated_mod['func_7493'] = func_7493
mutated_mod = relay.transform.InferType()(mutated_mod)
var_7501 = relay.var("var_7501", dtype = "float32", shape = (1, 4, 11))#candidate|7501|(1, 4, 11)|var|float32
uop_7502 = relay.log2(var_7501.astype('float32')) # shape=(1, 4, 11)
uop_7504 = relay.sin(uop_7502.astype('float32')) # shape=(1, 4, 11)
output = relay.Tuple([uop_7504,])
output2 = relay.Tuple([uop_7504,])
func_7506 = relay.Function([var_7501,], output)
mod['func_7506'] = func_7506
mod = relay.transform.InferType()(mod)
var_7507 = relay.var("var_7507", dtype = "float32", shape = (1, 4, 11))#candidate|7507|(1, 4, 11)|var|float32
output = func_7506(var_7507)
func_7508 = relay.Function([var_7507], output)
mutated_mod['func_7508'] = func_7508
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2467_call = mod.get_global_var('func_2467')
func_2469_call = mutated_mod.get_global_var('func_2469')
call_7514 = func_2467_call()
call_7515 = func_2467_call()
func_3906_call = mod.get_global_var('func_3906')
func_3907_call = mutated_mod.get_global_var('func_3907')
call_7535 = relay.TupleGetItem(func_3906_call(), 3)
call_7536 = relay.TupleGetItem(func_3907_call(), 3)
var_7551 = relay.var("var_7551", dtype = "float64", shape = (1408,))#candidate|7551|(1408,)|var|float64
bop_7552 = relay.left_shift(call_7535.astype('int32'), relay.reshape(var_7551.astype('int32'), relay.shape_of(call_7535))) # shape=(1408,)
bop_7555 = relay.left_shift(call_7536.astype('int32'), relay.reshape(var_7551.astype('int32'), relay.shape_of(call_7536))) # shape=(1408,)
func_5560_call = mod.get_global_var('func_5560')
func_5562_call = mutated_mod.get_global_var('func_5562')
call_7569 = func_5560_call()
call_7570 = func_5560_call()
func_5063_call = mod.get_global_var('func_5063')
func_5064_call = mutated_mod.get_global_var('func_5064')
call_7590 = func_5063_call()
call_7591 = func_5063_call()
output = relay.Tuple([call_7514,bop_7552,call_7569,call_7590,])
output2 = relay.Tuple([call_7515,bop_7555,call_7570,call_7591,])
func_7594 = relay.Function([var_7551,], output)
mod['func_7594'] = func_7594
mod = relay.transform.InferType()(mod)
mutated_mod['func_7594'] = func_7594
mutated_mod = relay.transform.InferType()(mutated_mod)
var_7595 = relay.var("var_7595", dtype = "float64", shape = (1408,))#candidate|7595|(1408,)|var|float64
func_7594_call = mutated_mod.get_global_var('func_7594')
call_7596 = func_7594_call(var_7595)
output = call_7596
func_7597 = relay.Function([var_7595], output)
mutated_mod['func_7597'] = func_7597
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5560_call = mod.get_global_var('func_5560')
func_5562_call = mutated_mod.get_global_var('func_5562')
call_7599 = func_5560_call()
call_7600 = func_5560_call()
output = call_7599
output2 = call_7600
func_7635 = relay.Function([], output)
mod['func_7635'] = func_7635
mod = relay.transform.InferType()(mod)
mutated_mod['func_7635'] = func_7635
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7635_call = mutated_mod.get_global_var('func_7635')
call_7636 = func_7635_call()
output = call_7636
func_7637 = relay.Function([], output)
mutated_mod['func_7637'] = func_7637
mutated_mod = relay.transform.InferType()(mutated_mod)
var_7638 = relay.var("var_7638", dtype = "float32", shape = (9, 11, 2))#candidate|7638|(9, 11, 2)|var|float32
uop_7639 = relay.atanh(var_7638.astype('float32')) # shape=(9, 11, 2)
output = uop_7639
output2 = uop_7639
func_7673 = relay.Function([var_7638,], output)
mod['func_7673'] = func_7673
mod = relay.transform.InferType()(mod)
var_7674 = relay.var("var_7674", dtype = "float32", shape = (9, 11, 2))#candidate|7674|(9, 11, 2)|var|float32
output = func_7673(var_7674)
func_7675 = relay.Function([var_7674], output)
mutated_mod['func_7675'] = func_7675
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3906_call = mod.get_global_var('func_3906')
func_3907_call = mutated_mod.get_global_var('func_3907')
call_7727 = relay.TupleGetItem(func_3906_call(), 3)
call_7728 = relay.TupleGetItem(func_3907_call(), 3)
output = call_7727
output2 = call_7728
func_7736 = relay.Function([], output)
mod['func_7736'] = func_7736
mod = relay.transform.InferType()(mod)
mutated_mod['func_7736'] = func_7736
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7736_call = mutated_mod.get_global_var('func_7736')
call_7737 = func_7736_call()
output = call_7737
func_7738 = relay.Function([], output)
mutated_mod['func_7738'] = func_7738
mutated_mod = relay.transform.InferType()(mutated_mod)
var_7742 = relay.var("var_7742", dtype = "uint64", shape = (11, 7, 7))#candidate|7742|(11, 7, 7)|var|uint64
const_7743 = relay.const([[[-8,2,8,8,9,8,1],[-2,-7,4,6,-1,-6,-10],[8,6,-3,-9,10,-2,3],[2,9,-2,10,-10,-6,7],[-1,-1,-9,4,7,-6,1],[7,-5,-7,2,-3,-7,-1],[6,-5,4,-4,2,8,1]],[[8,9,-5,-4,-1,2,-3],[8,2,-3,-1,-2,2,2],[7,2,-5,-1,-7,3,-5],[3,5,-1,7,5,-3,-2],[-3,4,8,-5,9,5,3],[4,-4,6,-10,8,3,5],[2,-10,10,7,2,-4,10]],[[-8,9,10,1,-5,-5,8],[8,-3,-1,-5,8,10,4],[2,-5,-8,2,-8,-6,-4],[7,10,-7,6,-7,-8,3],[-7,-4,-2,1,3,-7,-6],[5,-5,-4,-6,7,9,-4],[-3,5,-5,-10,7,-6,5]],[[-1,-10,3,-7,-10,9,8],[3,3,7,7,6,-1,-9],[1,-2,-6,-9,8,7,-2],[5,-4,-9,6,4,10,-1],[3,9,3,-6,-4,8,-2],[9,-1,3,-5,-2,-10,4],[-8,-2,2,-5,-3,-6,8]],[[2,-8,6,-7,7,-3,3],[-9,5,2,6,-1,1,-2],[4,10,1,-6,9,8,-5],[9,6,7,-5,1,4,-2],[7,-1,-5,-4,9,5,-3],[-8,-6,8,-4,5,5,1],[-9,4,9,6,6,-2,10]],[[-5,-10,3,9,-8,-8,2],[-9,5,-6,-4,6,-2,-10],[9,2,2,6,-8,7,-10],[8,-10,-3,-5,-8,7,-8],[8,3,-7,3,9,-5,8],[4,8,-8,-9,5,-3,4],[9,-8,2,-8,6,-10,-3]],[[-1,-8,-7,-7,5,7,1],[-5,9,-10,4,-8,-3,-4],[-1,-8,5,7,10,-8,-9],[9,6,-6,-9,-2,10,-5],[-8,4,5,-10,-7,4,-1],[4,-9,2,6,-10,6,-10],[-4,9,-4,-1,-6,1,8]],[[-3,-10,-10,10,4,-2,3],[-6,8,7,-4,-2,-2,-6],[4,-8,6,3,-7,-10,9],[3,1,4,-3,-7,-4,2],[9,-8,-3,-1,-6,-4,9],[2,-5,-1,-8,6,-6,8],[3,-5,-9,9,-1,2,-7]],[[10,2,4,-1,-6,10,10],[-6,-7,10,3,-6,3,3],[5,-6,7,-9,5,-6,6],[-2,3,7,-9,1,-8,4],[-4,-9,-8,6,-2,6,2],[8,-9,6,-10,-9,10,1],[-7,-9,2,10,2,-5,8]],[[2,5,-9,2,-4,8,1],[3,8,-7,-1,-7,-10,6],[5,-9,5,9,-6,-1,5],[-6,-9,-10,-9,4,-7,10],[9,-3,1,1,5,1,-1],[4,2,-4,-8,-8,3,-8],[10,-8,-3,1,-4,-9,-2]],[[-2,5,-3,-7,7,-3,-4],[-6,7,-8,5,5,-5,-8],[-9,9,5,9,-10,-5,2],[4,4,-8,-6,-5,10,-6],[-2,3,7,3,5,-2,-6],[4,6,-4,9,-3,-10,5],[2,-5,8,-4,-10,-8,10]]], dtype = "uint64")#candidate|7743|(11, 7, 7)|const|uint64
bop_7744 = relay.bitwise_or(var_7742.astype('uint64'), relay.reshape(const_7743.astype('uint64'), relay.shape_of(var_7742))) # shape=(11, 7, 7)
func_1009_call = mod.get_global_var('func_1009')
func_1011_call = mutated_mod.get_global_var('func_1011')
call_7757 = func_1009_call()
call_7758 = func_1009_call()
bop_7765 = relay.bitwise_xor(bop_7744.astype('int32'), relay.reshape(const_7743.astype('int32'), relay.shape_of(bop_7744))) # shape=(11, 7, 7)
output = relay.Tuple([call_7757,bop_7765,])
output2 = relay.Tuple([call_7758,bop_7765,])
func_7772 = relay.Function([var_7742,], output)
mod['func_7772'] = func_7772
mod = relay.transform.InferType()(mod)
mutated_mod['func_7772'] = func_7772
mutated_mod = relay.transform.InferType()(mutated_mod)
var_7773 = relay.var("var_7773", dtype = "uint64", shape = (11, 7, 7))#candidate|7773|(11, 7, 7)|var|uint64
func_7772_call = mutated_mod.get_global_var('func_7772')
call_7774 = func_7772_call(var_7773)
output = call_7774
func_7775 = relay.Function([var_7773], output)
mutated_mod['func_7775'] = func_7775
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5128_call = mod.get_global_var('func_5128')
func_5130_call = mutated_mod.get_global_var('func_5130')
call_7793 = func_5128_call()
call_7794 = func_5128_call()
output = relay.Tuple([call_7793,])
output2 = relay.Tuple([call_7794,])
func_7843 = relay.Function([], output)
mod['func_7843'] = func_7843
mod = relay.transform.InferType()(mod)
mutated_mod['func_7843'] = func_7843
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7843_call = mutated_mod.get_global_var('func_7843')
call_7844 = func_7843_call()
output = call_7844
func_7845 = relay.Function([], output)
mutated_mod['func_7845'] = func_7845
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5698_call = mod.get_global_var('func_5698')
func_5699_call = mutated_mod.get_global_var('func_5699')
call_7916 = relay.TupleGetItem(func_5698_call(), 1)
call_7917 = relay.TupleGetItem(func_5699_call(), 1)
func_3671_call = mod.get_global_var('func_3671')
func_3675_call = mutated_mod.get_global_var('func_3675')
const_7924 = relay.const([-6,9,-1,3,9,7,-10,-7,9,-6,6,-10,-9,-8,-3,-6,1,7,10,-6,-4,10,-8,-4,-9,-9,8,-9,-6,1,-5,-10,-2,10,5,-2,1,-4,-1,7,1,-4,-5,5,10,-1,-4,-3,6,-8,-1,1,-2,-4,-3,2,7,4,-7,-3,6,-3,-3,-5,-2,-3,3,7,-8,6,-2,-7,4,-2,2,-9,-7,9,9,-2,-6,5,8,-3,-3,-10,-1,5,-10,-8,10,9,2,-9,1,-3,8,-8,-10,-3,-2,-7,1,8,-6,-2,-6,6,-10,-10,-8,-9,2,3,8,4,-10,-5,-2,-2,1,-7,-6,8,9,6,2,-4,-3,-6,-6,3,3,6,-2,6,-2,-4,-5,2,-10,-3,-6,-9,-5,-9,7,-6,-9,6,1,-5,-6,-9,1,6,2,8,-8,6,-3,-6,-9,3,-5,9,2,8,5,8,1,-9,-3,2,3,-5,-6,-9,3,3,2,3,8,-9,-1,10,2,8,6,9,9,-8,-4,10,-10,7,-6,5,4,-8,-2,8,10,1,7,7,-3,10,3,-7,2,-6,-4,4,-6,4,1,-4,-9,6,5,1,10,7,3,8,-10,6,7,4,2,-1,-4,-5,2,-9,5,-8,3,-10,-1,-4,5,5,-1,3,-8,6,3,-5,3,3,5,-6,-7,7,-5,9,2,-1,-6,6,-3,8,-6,-9,8,-10,5,3,2,-2,-2,8,6,9,-6,-7,-1,-2,-7,-9,-7,8,-5,-4,5,-4,8,3,1,-7,10,5,7,10,2,-9,-8,-9,-1,10,10,3,7,-3,9,-5,-3,10,-10,6], dtype = "uint64")#candidate|7924|(312,)|const|uint64
var_7925 = relay.var("var_7925", dtype = "float64", shape = (40, 14))#candidate|7925|(40, 14)|var|float64
call_7923 = relay.TupleGetItem(func_3671_call(relay.reshape(const_7924.astype('uint64'), [312,]), relay.reshape(var_7925.astype('float64'), [560,]), ), 7)
call_7926 = relay.TupleGetItem(func_3675_call(relay.reshape(const_7924.astype('uint64'), [312,]), relay.reshape(var_7925.astype('float64'), [560,]), ), 7)
output = relay.Tuple([call_7916,call_7923,const_7924,var_7925,])
output2 = relay.Tuple([call_7917,call_7926,const_7924,var_7925,])
func_7928 = relay.Function([var_7925,], output)
mod['func_7928'] = func_7928
mod = relay.transform.InferType()(mod)
mutated_mod['func_7928'] = func_7928
mutated_mod = relay.transform.InferType()(mutated_mod)
var_7929 = relay.var("var_7929", dtype = "float64", shape = (40, 14))#candidate|7929|(40, 14)|var|float64
func_7928_call = mutated_mod.get_global_var('func_7928')
call_7930 = func_7928_call(var_7929)
output = call_7930
func_7931 = relay.Function([var_7929], output)
mutated_mod['func_7931'] = func_7931
mutated_mod = relay.transform.InferType()(mutated_mod)
const_7947 = relay.const([[-2.716066,6.604745,5.454092,-1.749527,-5.458807,7.286538,-7.224228,5.522215,0.532646,7.347396,1.882756,-0.808849,-9.255256],[-1.512438,9.978699,-2.789551,-0.618087,4.947121,-0.198075,2.365359,-1.350966,7.060391,6.136044,-7.039466,-2.266947,7.230911],[-0.368065,-3.028135,-7.684514,5.869644,0.428292,-5.502920,0.183906,3.637554,7.362751,6.689692,-9.004941,-2.906415,0.536726],[-4.686649,-5.846342,6.020430,-9.677536,8.550587,9.184574,-7.568625,0.650159,-3.708253,-1.951495,-0.369260,-6.269292,-7.162685],[-0.321481,-7.408329,6.929679,-2.783646,-3.724610,0.777349,3.594153,-7.085000,2.396093,5.315851,8.990670,1.078089,-1.442380],[1.301089,8.657226,9.611188,-0.299409,7.363377,-2.869116,8.089018,-7.545249,6.936133,-7.940220,-6.978938,2.799166,-7.386665],[0.810618,-5.641596,8.215104,-6.127186,8.172463,-0.951516,-8.138699,-0.010862,2.712429,1.037296,-7.143894,-9.003358,-7.335368],[-6.642430,-1.407662,-0.735331,-4.161674,8.649807,-9.368035,3.832479,7.942546,0.148635,4.076849,1.730069,-7.319839,-9.439885],[6.437102,0.562950,5.932437,5.254745,-6.324463,2.126509,0.902159,-2.812953,7.072189,1.996919,2.217364,-3.620879,-0.245014],[-8.951976,-6.271612,2.888242,5.793857,-3.924879,-3.113583,-9.175464,1.011890,-3.341812,1.194282,4.430644,-5.680504,8.608891]], dtype = "float64")#candidate|7947|(10, 13)|const|float64
uop_7948 = relay.atanh(const_7947.astype('float64')) # shape=(10, 13)
output = relay.Tuple([uop_7948,])
output2 = relay.Tuple([uop_7948,])
F = relay.Function([], output)
mod['main'] = F
mod = relay.transform.InferType()(mod)
print('==========mod==========')
print(mod.astext(show_meta_data=False))
print('===================================')
F = relay.Function([], output2)
mutated_mod['main'] = F
mutated_mod = relay.transform.InferType()(mutated_mod)
print('==========mutated_mod==========')
print(mutated_mod.astext(show_meta_data=False))
print('===================================')
graph, lib, params = relay.build(mod, target='llvm')
module1 = graph_runtime.create(graph, lib, tvm.device('llvm',0))
intrp2 = relay.build_module.create_executor('graph', mod, tvm.device('llvm',0),'llvm')
intrp3 = relay.build_module.create_executor('debug', mod, tvm.device('llvm',0),'llvm')
intrp4 = relay.build_module.create_executor('vm', mod, tvm.device('llvm',0),'llvm')
graph, lib, params = relay.build(mod, target='cuda')
module5 = graph_runtime.create(graph, lib, tvm.device('cuda',0))
intrp6 = relay.build_module.create_executor('graph', mod, tvm.device('cuda',0),'cuda')
intrp7 = relay.build_module.create_executor('debug', mod, tvm.device('cuda',0),'cuda')
intrp8 = relay.build_module.create_executor('vm', mod, tvm.device('cuda',0),'cuda')
seq = Sequential([
	relay.transform.AlterOpLayout(),
	relay.transform.AnnotateSpans(),
	relay.transform.BatchingOps(),
	relay.transform.CanonicalizeCast(),
	relay.transform.CanonicalizeOps(),
	relay.transform.DeadCodeElimination(),
	relay.transform.DynamicToStatic(),
	relay.transform.FastMath(),
	relay.transform.FirstOrderGradient(),
	relay.transform.EliminateCommonSubexpr(),
])
mod = seq(mod)
print(mod.astext(show_meta_data=False))
graph, lib, params = relay.build(mod, target='llvm')
module9 = graph_runtime.create(graph, lib, tvm.device('llvm',0))
intrp10 = relay.build_module.create_executor('graph', mod, tvm.device('llvm',0),'llvm')
intrp11 = relay.build_module.create_executor('debug', mod, tvm.device('llvm',0),'llvm')
intrp12 = relay.build_module.create_executor('vm', mod, tvm.device('llvm',0),'llvm')
graph, lib, params = relay.build(mod, target='cuda')
module13 = graph_runtime.create(graph, lib, tvm.device('cuda',0))
intrp14 = relay.build_module.create_executor('graph', mod, tvm.device('cuda',0),'cuda')
intrp15 = relay.build_module.create_executor('debug', mod, tvm.device('cuda',0),'cuda')
intrp16 = relay.build_module.create_executor('vm', mod, tvm.device('cuda',0),'cuda')
graph, lib, params = relay.build(mutated_mod, target='llvm')
module17 = graph_runtime.create(graph, lib, tvm.device('llvm',0))
intrp18 = relay.build_module.create_executor('graph', mutated_mod, tvm.device('llvm',0),'llvm')
intrp19 = relay.build_module.create_executor('debug', mutated_mod, tvm.device('llvm',0),'llvm')
intrp20 = relay.build_module.create_executor('vm', mutated_mod, tvm.device('llvm',0),'llvm')
graph, lib, params = relay.build(mutated_mod, target='cuda')
module21 = graph_runtime.create(graph, lib, tvm.device('cuda',0))
intrp22 = relay.build_module.create_executor('graph', mutated_mod, tvm.device('cuda',0),'cuda')
intrp23 = relay.build_module.create_executor('debug', mutated_mod, tvm.device('cuda',0),'cuda')
intrp24 = relay.build_module.create_executor('vm', mutated_mod, tvm.device('cuda',0),'cuda')

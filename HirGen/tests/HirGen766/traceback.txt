==========mod==========
#[version = "0.0.5"]
def @func_11514() -> Tensor[(8, 13, 1), float64] {
  %0 = cast(meta[relay.Constant][0] /* ty=Tensor[(8, 13, 1), float64] */, dtype="float64") /* ty=Tensor[(8, 13, 1), float64] */;
  sin(%0) /* ty=Tensor[(8, 13, 1), float64] */
}

def @func_12638() -> (Tensor[(8, 13, 1), float32],) {
  %1 = @func_11514() /* ty=Tensor[(8, 13, 1), float64] */;
  %2 = cast(%1, dtype="float32") /* ty=Tensor[(8, 13, 1), float32] */;
  %3 = asin(%2) /* ty=Tensor[(8, 13, 1), float32] */;
  (%3,)
}

def @func_11662(%var_11653: Tensor[(84), bool], %var_11656: Tensor[(6, 16, 14), bool]) -> (Tensor[(8, 13, 1), float64], Tensor[(84), bool], Tensor[(1344), bool], Tensor[(6, 16, 14), uint64]) {
  %4 = cast(%var_11653, dtype="bool") /* ty=Tensor[(84), bool] */;
  %5 = cast(meta[relay.Constant][1] /* ty=Tensor[(1344), bool] */, dtype="bool") /* ty=Tensor[(1344), bool] */;
  %6 = reshape(%4, newshape=[6, 1, 14]) /* ty=Tensor[(6, 1, 14), bool] */;
  %7 = reshape(%5, newshape=[6, 16, 14]) /* ty=Tensor[(6, 16, 14), bool] */;
  %8 = @func_3207(%6, %7) /* ty=(Tensor[(6, 16, 14), bool],) */;
  %9 = %8.0;
  %10 = cast(%var_11656, dtype="uint64") /* ty=Tensor[(6, 16, 14), uint64] */;
  %11 = shape_of(%9, dtype="int32") /* ty=Tensor[(3), int32] */;
  %12 = cast(%9, dtype="uint64") /* ty=Tensor[(6, 16, 14), uint64] */;
  %13 = dyn.reshape(%10, %11, newshape=[]) /* ty=Tensor[(?, ?, ?), uint64] */;
  %14 = @func_11514() /* ty=Tensor[(8, 13, 1), float64] */;
  %15 = right_shift(%12, %13) /* ty=Tensor[(6, 16, 14), uint64] */;
  (%14, %var_11653, meta[relay.Constant][1] /* ty=Tensor[(1344), bool] */, %15)
}

def @func_13953() -> Tensor[(8, 13, 1), float32] {
  %16 = @func_12638() /* ty=(Tensor[(8, 13, 1), float32],) */;
  %16.0
}

def @func_12461(%var_12453: Tensor[(1232), int64], %var_12454: Tensor[(84), int8]) -> (Tensor[(8, 13, 1), float64], Tensor[(10, 12, 13), int8], Tensor[(120), int8], Tensor[(1560), int8], int64, Tensor[(1232), int64], Tensor[(84), int8]) {
  %17 = @func_11553() /* ty=(Tensor[(8, 13, 1), float64],) */;
  %18 = cast(meta[relay.Constant][2] /* ty=Tensor[(120), int8] */, dtype="int8") /* ty=Tensor[(120), int8] */;
  %19 = cast(meta[relay.Constant][3] /* ty=Tensor[(1560), int8] */, dtype="int8") /* ty=Tensor[(1560), int8] */;
  %20 = cast(-6 /* ty=int64 */, dtype="int64") /* ty=int64 */;
  %21 = cast(%var_12453, dtype="int64") /* ty=Tensor[(1232), int64] */;
  %22 = cast(%var_12454, dtype="int8") /* ty=Tensor[(84), int8] */;
  %23 = reshape(%18, newshape=[10, 12, 1]) /* ty=Tensor[(10, 12, 1), int8] */;
  %24 = reshape(%19, newshape=[10, 12, 13]) /* ty=Tensor[(10, 12, 13), int8] */;
  %25 = reshape(%20, newshape=[]) /* ty=int64 */;
  %26 = reshape(%21, newshape=[1232]) /* ty=Tensor[(1232), int64] */;
  %27 = reshape(%22, newshape=[84]) /* ty=Tensor[(84), int8] */;
  %28 = @func_4093(%23, %24, %25, %26, %27) /* ty=(Tensor[(10, 12, 13), int8], Tensor[(11, 8, 14), int64], int64, Tensor[(1232), int64], Tensor[(84), int8], Tensor[(14, 5, 6), bool], Tensor[(10, 3), bool], Tensor[(420), bool], Tensor[(4, 7, 3), int8]) */;
  %29 = %17.0;
  %30 = %28.0;
  (%29, %30, meta[relay.Constant][2] /* ty=Tensor[(120), int8] */, meta[relay.Constant][3] /* ty=Tensor[(1560), int8] */, -6 /* ty=int64 */, %var_12453, %var_12454)
}

def @func_13218() -> (Tensor[(8, 13, 1), float64], Tensor[(12, 11, 9), int64], Tensor[(9, 132), int64], Tensor[(8, 16, 16), uint8], Tensor[(2048), uint8], Tensor[(1232), int64], Tensor[(8, 13, 84), uint32]) {
  %31 = @func_11553() /* ty=(Tensor[(8, 13, 1), float64],) */;
  %32 = cast(meta[relay.Constant][4] /* ty=Tensor[(9, 132), int64] */, dtype="int64") /* ty=Tensor[(9, 132), int64] */;
  %33 = cast(meta[relay.Constant][4] /* ty=Tensor[(9, 132), int64] */, dtype="int64") /* ty=Tensor[(9, 132), int64] */;
  %34 = reshape(%32, newshape=[12, 11, 9]) /* ty=Tensor[(12, 11, 9), int64] */;
  %35 = reshape(%33, newshape=[12, 11, 9]) /* ty=Tensor[(12, 11, 9), int64] */;
  %36 = @func_7512(%34, %35) /* ty=(Tensor[(12, 11, 9), int64],) */;
  %37 = cast(meta[relay.Constant][5] /* ty=Tensor[(2048), uint8] */, dtype="uint8") /* ty=Tensor[(2048), uint8] */;
  %38 = cast(meta[relay.Constant][5] /* ty=Tensor[(2048), uint8] */, dtype="uint8") /* ty=Tensor[(2048), uint8] */;
  %39 = reshape(%37, newshape=[8, 16, 16]) /* ty=Tensor[(8, 16, 16), uint8] */;
  %40 = reshape(%38, newshape=[8, 16, 16]) /* ty=Tensor[(8, 16, 16), uint8] */;
  %41 = @func_1916(%39, %40) /* ty=(Tensor[(8, 16, 16), uint8],) */;
  %42 = cast(meta[relay.Constant][6] /* ty=Tensor[(1232), int64] */, dtype="int64") /* ty=Tensor[(1232), int64] */;
  %43 = cast(meta[relay.Constant][7] /* ty=Tensor[(84), int8] */, dtype="int8") /* ty=Tensor[(84), int8] */;
  %44 = reshape(%42, newshape=[1232]) /* ty=Tensor[(1232), int64] */;
  %45 = reshape(%43, newshape=[84]) /* ty=Tensor[(84), int8] */;
  %46 = @func_12461(%44, %45) /* ty=(Tensor[(8, 13, 1), float64], Tensor[(10, 12, 13), int8], Tensor[(120), int8], Tensor[(1560), int8], int64, Tensor[(1232), int64], Tensor[(84), int8]) */;
  %47 = %46.0;
  %48 = cast(meta[relay.Constant][7] /* ty=Tensor[(84), int8] */, dtype="uint32") /* ty=Tensor[(84), uint32] */;
  %49 = cast(%47, dtype="uint32") /* ty=Tensor[(8, 13, 1), uint32] */;
  %50 = %31.0;
  %51 = %36.0;
  %52 = %41.0;
  %53 = bitwise_xor(%48, %49) /* ty=Tensor[(8, 13, 84), uint32] */;
  (%50, %51, meta[relay.Constant][4] /* ty=Tensor[(9, 132), int64] */, %52, meta[relay.Constant][5] /* ty=Tensor[(2048), uint8] */, meta[relay.Constant][6] /* ty=Tensor[(1232), int64] */, %53)
}

def @func_14289() -> Tensor[(420, 4), float64] {
  %54 = @func_13642() /* ty=(Tensor[(420, 4), float64],) */;
  %54.0
}

def @func_5626(%var_5541: int32, %var_5552: Tensor[(84), int8], %var_5555: Tensor[(30), bool], %var_5591: Tensor[(1, 80), float64], %var_5592: Tensor[(1232), int64]) -> (Tensor[(1, 6, 11), bool], Tensor[(4, 7, 3), int8], Tensor[(84), int8], Tensor[(14, 5, 6), bool], Tensor[(30), bool], Tensor[(420), bool], Tensor[(1680), float64], Tensor[(1, 80), float64], Tensor[(1232), int64], Tensor[(16, 15, 7), float64], Tensor[(1, 2048), float32], int64) {
  %55 = cast(%var_5541, dtype="bool") /* ty=bool */;
  %56 = cast(meta[relay.Constant][8] /* ty=Tensor[(1, 6, 11), int32] */, dtype="bool") /* ty=Tensor[(1, 6, 11), bool] */;
  %57 = cast(%var_5552, dtype="int8") /* ty=Tensor[(84), int8] */;
  %58 = cast(%var_5552, dtype="int8") /* ty=Tensor[(84), int8] */;
  %59 = reshape(%57, newshape=[4, 7, 3]) /* ty=Tensor[(4, 7, 3), int8] */;
  %60 = reshape(%58, newshape=[4, 7, 3]) /* ty=Tensor[(4, 7, 3), int8] */;
  %61 = @func_809(%59, %60) /* ty=(Tensor[(4, 7, 3), int8],) */;
  %62 = cast(%var_5555, dtype="bool") /* ty=Tensor[(30), bool] */;
  %63 = cast(meta[relay.Constant][9] /* ty=Tensor[(420), bool] */, dtype="bool") /* ty=Tensor[(420), bool] */;
  %64 = reshape(%62, newshape=[1, 5, 6]) /* ty=Tensor[(1, 5, 6), bool] */;
  %65 = reshape(%63, newshape=[14, 5, 6]) /* ty=Tensor[(14, 5, 6), bool] */;
  %66 = @func_2137(%64, %65) /* ty=(Tensor[(14, 5, 6), bool], Tensor[(14, 5, 6), float32]) */;
  %67 = cast(meta[relay.Constant][10] /* ty=Tensor[(1680), float64] */, dtype="float64") /* ty=Tensor[(1680), float64] */;
  %68 = reshape(%67, newshape=[16, 15, 7]) /* ty=Tensor[(16, 15, 7), float64] */;
  %69 = @func_924(%68) /* ty=Tensor[(16, 15, 7), float64] */;
  %70 = cast(%69, dtype="float64") /* ty=Tensor[(16, 15, 7), float64] */;
  %71 = cast(%var_5591, dtype="float64") /* ty=Tensor[(1, 80), float64] */;
  %72 = cast(%var_5592, dtype="int64") /* ty=Tensor[(1232), int64] */;
  %73 = cast(%var_5555, dtype="bool") /* ty=Tensor[(30), bool] */;
  %74 = cast(meta[relay.Constant][9] /* ty=Tensor[(420), bool] */, dtype="bool") /* ty=Tensor[(420), bool] */;
  %75 = reshape(%71, newshape=[4, 10, 2]) /* ty=Tensor[(4, 10, 2), float64] */;
  %76 = reshape(%72, newshape=[1232]) /* ty=Tensor[(1232), int64] */;
  %77 = reshape(%73, newshape=[30]) /* ty=Tensor[(30), bool] */;
  %78 = reshape(%74, newshape=[70, 6]) /* ty=Tensor[(70, 6), bool] */;
  %79 = @func_5129(%75, %76, %77, %78) /* ty=(Tensor[(4, 10, 2), float64], Tensor[(1560), int8], int64, Tensor[(1232), int64], Tensor[(1, 84), int8], Tensor[(14, 5, 6), bool], Tensor[(30), bool], Tensor[(70, 6), bool], Tensor[(8, 16, 16), uint8], Tensor[(1, 2048), uint8], Tensor[(60, 2), bool]) */;
  %80 = %79.9;
  %81 = cast(%80, dtype="float32") /* ty=Tensor[(1, 2048), float32] */;
  %82 = cast(%var_5591, dtype="float64") /* ty=Tensor[(1, 80), float64] */;
  %83 = cast(%var_5592, dtype="int64") /* ty=Tensor[(1232), int64] */;
  %84 = cast(%var_5555, dtype="bool") /* ty=Tensor[(30), bool] */;
  %85 = cast(meta[relay.Constant][9] /* ty=Tensor[(420), bool] */, dtype="bool") /* ty=Tensor[(420), bool] */;
  %86 = reshape(%82, newshape=[4, 10, 2]) /* ty=Tensor[(4, 10, 2), float64] */;
  %87 = reshape(%83, newshape=[1232]) /* ty=Tensor[(1232), int64] */;
  %88 = reshape(%84, newshape=[30]) /* ty=Tensor[(30), bool] */;
  %89 = reshape(%85, newshape=[70, 6]) /* ty=Tensor[(70, 6), bool] */;
  %90 = @func_5129(%86, %87, %88, %89) /* ty=(Tensor[(4, 10, 2), float64], Tensor[(1560), int8], int64, Tensor[(1232), int64], Tensor[(1, 84), int8], Tensor[(14, 5, 6), bool], Tensor[(30), bool], Tensor[(70, 6), bool], Tensor[(8, 16, 16), uint8], Tensor[(1, 2048), uint8], Tensor[(60, 2), bool]) */;
  %91 = less(%55, %56) /* ty=Tensor[(1, 6, 11), bool] */;
  %92 = %61.0;
  %93 = %66.0;
  %94 = tan(%70) /* ty=Tensor[(16, 15, 7), float64] */;
  %95 = sin(%81) /* ty=Tensor[(1, 2048), float32] */;
  %96 = %90.2;
  (%91, %92, %var_5552, %93, %var_5555, meta[relay.Constant][9] /* ty=Tensor[(420), bool] */, meta[relay.Constant][10] /* ty=Tensor[(1680), float64] */, %var_5591, %var_5592, %94, %95, %96)
}

def @func_12686() -> (Tensor[(1, 1560), int8],) {
  %97 = @func_12409() /* ty=(Tensor[(8, 13, 1), float64], Tensor[(56, 22), int64], Tensor[(1024), float64], Tensor[(120), int8], Tensor[(1, 1560), int8], int64, Tensor[(1232), int64]) */;
  %98 = %97.4;
  (%98,)
}

def @func_12296() -> (Tensor[(8, 13, 1), float64], Tensor[(420, 4), float64], Tensor[(1680), float64]) {
  %99 = @func_11553() /* ty=(Tensor[(8, 13, 1), float64],) */;
  %100 = cast(meta[relay.Constant][11] /* ty=Tensor[(1680), float64] */, dtype="float64") /* ty=Tensor[(1680), float64] */;
  %101 = reshape(%100, newshape=[420, 4]) /* ty=Tensor[(420, 4), float64] */;
  %102 = @func_12182(%101) /* ty=(Tensor[(16, 15, 7), float64], Tensor[(420, 4), float64], Tensor[(8, 13, 896), int64]) */;
  %103 = %99.0;
  %104 = %102.1;
  (%103, %104, meta[relay.Constant][11] /* ty=Tensor[(1680), float64] */)
}

def @func_5450(%var_5441: Tensor[(12, 5, 10), float64]) -> Tensor[(12, 5, 10), float32] {
  %105 = cast(%var_5441, dtype="float64") /* ty=Tensor[(12, 5, 10), float64] */;
  %106 = log2(%105) /* ty=Tensor[(12, 5, 10), float64] */;
  %107 = cast(meta[relay.Constant][12] /* ty=Tensor[(12, 5, 10), float64] */, dtype="float32") /* ty=Tensor[(12, 5, 10), float32] */;
  %108 = shape_of(%106, dtype="int32") /* ty=Tensor[(3), int32] */;
  %109 = cast(%106, dtype="float32") /* ty=Tensor[(12, 5, 10), float32] */;
  %110 = dyn.reshape(%107, %108, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  power(%109, %110) /* ty=Tensor[(12, 5, 10), float32] */
}

def @func_13776(%var_13756: Tensor[(70), uint32], %var_13757: Tensor[(700, 1), uint32]) -> (Tensor[(8, 13, 1), float32], Tensor[(600), float64], Tensor[(70), uint32], Tensor[(700, 1), uint32], Tensor[(2048), uint8]) {
  %111 = @func_12638() /* ty=(Tensor[(8, 13, 1), float32],) */;
  %112 = cast(%var_13756, dtype="uint32") /* ty=Tensor[(70), uint32] */;
  %113 = cast(%var_13757, dtype="uint32") /* ty=Tensor[(700, 1), uint32] */;
  %114 = cast(meta[relay.Constant][13] /* ty=Tensor[(2048), uint8] */, dtype="uint8") /* ty=Tensor[(2048), uint8] */;
  %115 = reshape(%112, newshape=[1, 5, 14]) /* ty=Tensor[(1, 5, 14), uint32] */;
  %116 = reshape(%113, newshape=[10, 5, 14]) /* ty=Tensor[(10, 5, 14), uint32] */;
  %117 = reshape(%114, newshape=[512, 4]) /* ty=Tensor[(512, 4), uint8] */;
  %118 = @func_6337(%115, %116, %117) /* ty=(Tensor[(12, 5, 10), float32], Tensor[(600), float64], Tensor[(10, 5, 14), float32], Tensor[(4, 7, 3), int8], Tensor[(84), int8], Tensor[(8, 16, 16), uint8], Tensor[(512, 4), uint8], Tensor[(8, 16, 16), uint8]) */;
  %119 = %111.0;
  %120 = %118.1;
  (%119, %120, %var_13756, %var_13757, meta[relay.Constant][13] /* ty=Tensor[(2048), uint8] */)
}

def @func_2974(%var_2938: uint64, %var_2939: Tensor[(5, 3, 15), uint64], %var_2957: Tensor[(390), float64]) -> (Tensor[(5, 3, 15), uint16], Tensor[(5, 3, 15), float64], Tensor[(6, 13, 5), float64], Tensor[(390), float64]) {
  %121 = cast(%var_2939, dtype="uint16") /* ty=Tensor[(5, 3, 15), uint16] */;
  %122 = cast(%var_2938, dtype="uint16") /* ty=uint16 */;
  %123 = cast(%var_2938, dtype="bool") /* ty=bool */;
  %124 = cast(%var_2939, dtype="bool") /* ty=Tensor[(5, 3, 15), bool] */;
  %125 = greater_equal(%123, %124) /* ty=Tensor[(5, 3, 15), bool] */;
  %126 = cast(%125, dtype="float64") /* ty=Tensor[(5, 3, 15), float64] */;
  %127 = shape_of(%var_2939, dtype="int32") /* ty=Tensor[(3), int32] */;
  %128 = cast(%var_2939, dtype="float64") /* ty=Tensor[(5, 3, 15), float64] */;
  %129 = dyn.reshape(%126, %127, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %130 = cast(%var_2957, dtype="float64") /* ty=Tensor[(390), float64] */;
  %131 = reshape(%130, newshape=[6, 13, 5]) /* ty=Tensor[(6, 13, 5), float64] */;
  %132 = @func_278(%131) /* ty=(Tensor[(6, 13, 5), float64],) */;
  %133 = minimum(%121, %122) /* ty=Tensor[(5, 3, 15), uint16] */;
  %134 = power(%128, %129) /* ty=Tensor[(5, 3, 15), float64] */;
  %135 = %132.0;
  (%133, %134, %135, %var_2957)
}

def @func_7620(%var_7612: Tensor[(9, 3, 6), float64]) -> (Tensor[(9, 3, 6), float64],) {
  %136 = cast(%var_7612, dtype="float64") /* ty=Tensor[(9, 3, 6), float64] */;
  %137 = log(%136) /* ty=Tensor[(9, 3, 6), float64] */;
  (%137,)
}

def @func_3207(%var_3188: Tensor[(6, 1, 14), bool], %var_3189: Tensor[(6, 16, 14), bool]) -> (Tensor[(6, 16, 14), bool],) {
  %138 = cast(%var_3188, dtype="bool") /* ty=Tensor[(6, 1, 14), bool] */;
  %139 = cast(%var_3189, dtype="bool") /* ty=Tensor[(6, 16, 14), bool] */;
  %140 = logical_or(%138, %139) /* ty=Tensor[(6, 16, 14), bool] */;
  (%140,)
}

def @func_12746() -> (Tensor[(8, 13, 1), float64], Tensor[(6, 13, 5), float64], Tensor[(195, 2), float64]) {
  %141 = cast(meta[relay.Constant][14] /* ty=Tensor[(195, 2), float64] */, dtype="float64") /* ty=Tensor[(195, 2), float64] */;
  %142 = reshape(%141, newshape=[6, 13, 5]) /* ty=Tensor[(6, 13, 5), float64] */;
  %143 = @func_278(%142) /* ty=(Tensor[(6, 13, 5), float64],) */;
  %144 = @func_11514() /* ty=Tensor[(8, 13, 1), float64] */;
  %145 = %143.0;
  (%144, %145, meta[relay.Constant][14] /* ty=Tensor[(195, 2), float64] */)
}

def @func_6688(%var_6657: Tensor[(8, 8, 16), float64], %var_6672: Tensor[(120), int8], %var_6673: Tensor[(6, 260), int8], %var_6674: int64, %var_6675: Tensor[(56, 22), int64], %var_6678: Tensor[(8, 8, 16), float64]) -> (Tensor[(4, 7, 3), int8], Tensor[(120), int8], Tensor[(6, 260), int8], int64, Tensor[(56, 22), int64], Tensor[(84), int8], Tensor[(8, 8, 16), bool], Tensor[(8, 8, 16), uint64]) {
  %146 = cast(%var_6672, dtype="int8") /* ty=Tensor[(120), int8] */;
  %147 = cast(%var_6673, dtype="int8") /* ty=Tensor[(6, 260), int8] */;
  %148 = cast(%var_6674, dtype="int64") /* ty=int64 */;
  %149 = cast(%var_6675, dtype="int64") /* ty=Tensor[(56, 22), int64] */;
  %150 = cast(meta[relay.Constant][15] /* ty=Tensor[(84), int8] */, dtype="int8") /* ty=Tensor[(84), int8] */;
  %151 = reshape(%146, newshape=[10, 12, 1]) /* ty=Tensor[(10, 12, 1), int8] */;
  %152 = reshape(%147, newshape=[10, 12, 13]) /* ty=Tensor[(10, 12, 13), int8] */;
  %153 = reshape(%148, newshape=[]) /* ty=int64 */;
  %154 = reshape(%149, newshape=[1232]) /* ty=Tensor[(1232), int64] */;
  %155 = reshape(%150, newshape=[84]) /* ty=Tensor[(84), int8] */;
  %156 = @func_4093(%151, %152, %153, %154, %155) /* ty=(Tensor[(10, 12, 13), int8], Tensor[(11, 8, 14), int64], int64, Tensor[(1232), int64], Tensor[(84), int8], Tensor[(14, 5, 6), bool], Tensor[(10, 3), bool], Tensor[(420), bool], Tensor[(4, 7, 3), int8]) */;
  %157 = cast(%var_6678, dtype="bool") /* ty=Tensor[(8, 8, 16), bool] */;
  %158 = shape_of(%var_6657, dtype="int32") /* ty=Tensor[(3), int32] */;
  %159 = cast(%var_6657, dtype="bool") /* ty=Tensor[(8, 8, 16), bool] */;
  %160 = dyn.reshape(%157, %158, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %161 = cast(%var_6657, dtype="float64") /* ty=Tensor[(8, 8, 16), float64] */;
  %162 = log10(%161) /* ty=Tensor[(8, 8, 16), float64] */;
  %163 = cast(%var_6678, dtype="uint64") /* ty=Tensor[(8, 8, 16), uint64] */;
  %164 = shape_of(%162, dtype="int32") /* ty=Tensor[(3), int32] */;
  %165 = cast(%162, dtype="uint64") /* ty=Tensor[(8, 8, 16), uint64] */;
  %166 = dyn.reshape(%163, %164, newshape=[]) /* ty=Tensor[(?, ?, ?), uint64] */;
  %167 = %156.8;
  %168 = greater(%159, %160) /* ty=Tensor[(8, 8, 16), bool] */;
  %169 = subtract(%165, %166) /* ty=Tensor[(8, 8, 16), uint64] */;
  (%167, %var_6672, %var_6673, %var_6674, %var_6675, meta[relay.Constant][15] /* ty=Tensor[(84), int8] */, %168, %169)
}

def @func_6337(%var_6260: Tensor[(1, 5, 14), uint32], %var_6261: Tensor[(10, 5, 14), uint32], %var_6331: Tensor[(512, 4), uint8]) -> (Tensor[(12, 5, 10), float32], Tensor[(600), float64], Tensor[(10, 5, 14), float32], Tensor[(4, 7, 3), int8], Tensor[(84), int8], Tensor[(8, 16, 16), uint8], Tensor[(512, 4), uint8], Tensor[(8, 16, 16), uint8]) {
  %170 = cast(meta[relay.Constant][16] /* ty=Tensor[(600), float64] */, dtype="float64") /* ty=Tensor[(600), float64] */;
  %171 = reshape(%170, newshape=[12, 5, 10]) /* ty=Tensor[(12, 5, 10), float64] */;
  %172 = cast(%var_6260, dtype="uint32") /* ty=Tensor[(1, 5, 14), uint32] */;
  %173 = cast(%var_6261, dtype="uint32") /* ty=Tensor[(10, 5, 14), uint32] */;
  %174 = bitwise_and(%172, %173) /* ty=Tensor[(10, 5, 14), uint32] */;
  %175 = cast(%var_6260, dtype="float32") /* ty=Tensor[(1, 5, 14), float32] */;
  %176 = cast(%174, dtype="float32") /* ty=Tensor[(10, 5, 14), float32] */;
  %177 = cast(meta[relay.Constant][17] /* ty=Tensor[(84), int8] */, dtype="int8") /* ty=Tensor[(84), int8] */;
  %178 = cast(meta[relay.Constant][17] /* ty=Tensor[(84), int8] */, dtype="int8") /* ty=Tensor[(84), int8] */;
  %179 = reshape(%177, newshape=[4, 7, 3]) /* ty=Tensor[(4, 7, 3), int8] */;
  %180 = reshape(%178, newshape=[4, 7, 3]) /* ty=Tensor[(4, 7, 3), int8] */;
  %181 = @func_809(%179, %180) /* ty=(Tensor[(4, 7, 3), int8],) */;
  %182 = cast(%var_6331, dtype="uint8") /* ty=Tensor[(512, 4), uint8] */;
  %183 = cast(%var_6331, dtype="uint8") /* ty=Tensor[(512, 4), uint8] */;
  %184 = reshape(%182, newshape=[8, 16, 16]) /* ty=Tensor[(8, 16, 16), uint8] */;
  %185 = reshape(%183, newshape=[8, 16, 16]) /* ty=Tensor[(8, 16, 16), uint8] */;
  %186 = @func_1916(%184, %185) /* ty=(Tensor[(8, 16, 16), uint8],) */;
  %187 = %186.0;
  %188 = cast(%187, dtype="uint8") /* ty=Tensor[(8, 16, 16), uint8] */;
  %189 = cast(%var_6331, dtype="uint8") /* ty=Tensor[(512, 4), uint8] */;
  %190 = reshape(%188, newshape=[8, 16, 16]) /* ty=Tensor[(8, 16, 16), uint8] */;
  %191 = reshape(%189, newshape=[8, 16, 16]) /* ty=Tensor[(8, 16, 16), uint8] */;
  %192 = @func_1916(%190, %191) /* ty=(Tensor[(8, 16, 16), uint8],) */;
  %193 = @func_5450(%171) /* ty=Tensor[(12, 5, 10), float32] */;
  %194 = power(%175, %176) /* ty=Tensor[(10, 5, 14), float32] */;
  %195 = %181.0;
  %196 = %192.0;
  (%193, meta[relay.Constant][16] /* ty=Tensor[(600), float64] */, %194, %195, meta[relay.Constant][17] /* ty=Tensor[(84), int8] */, %187, %var_6331, %196)
}

def @func_14016(%var_14010: Tensor[(195), float32], %var_14011: uint64, %var_14012: Tensor[(225), uint64]) -> (Tensor[(1232), int64], Tensor[(?, 16, 9), bool], Tensor[(1680), float64], Tensor[(144), float32], uint64, Tensor[(195), float32], uint64, Tensor[(225), uint64]) {
  %197 = @func_13218() /* ty=(Tensor[(8, 13, 1), float64], Tensor[(12, 11, 9), int64], Tensor[(9, 132), int64], Tensor[(8, 16, 16), uint8], Tensor[(2048), uint8], Tensor[(1232), int64], Tensor[(8, 13, 84), uint32]) */;
  %198 = cast(meta[relay.Constant][18] /* ty=Tensor[(1680), float64] */, dtype="float64") /* ty=Tensor[(1680), float64] */;
  %199 = cast(meta[relay.Constant][19] /* ty=Tensor[(144), float32] */, dtype="float32") /* ty=Tensor[(144), float32] */;
  %200 = reshape(%198, newshape=[420, 4]) /* ty=Tensor[(420, 4), float64] */;
  %201 = reshape(%199, newshape=[8, 18]) /* ty=Tensor[(8, 18), float32] */;
  %202 = @func_13107(%200, %201) /* ty=(Tensor[(420, 4), bool], Tensor[(?, 16, 9), bool], Tensor[(8, 18), float32], Tensor[(195, 2), float64]) */;
  %203 = cast(%var_14010, dtype="float32") /* ty=Tensor[(195), float32] */;
  %204 = cast(%var_14011, dtype="uint64") /* ty=uint64 */;
  %205 = cast(%var_14012, dtype="uint64") /* ty=Tensor[(225), uint64] */;
  %206 = reshape(%203, newshape=[13, 15, 1]) /* ty=Tensor[(13, 15, 1), float32] */;
  %207 = reshape(%204, newshape=[]) /* ty=uint64 */;
  %208 = reshape(%205, newshape=[25, 9]) /* ty=Tensor[(25, 9), uint64] */;
  %209 = @func_6923(%206, %207, %208) /* ty=(uint64, Tensor[(25, 9), uint64], Tensor[(390), float64], Tensor[(13, 15, 390), int32]) */;
  %210 = %197.5;
  %211 = %202.1;
  %212 = %209.0;
  (%210, %211, meta[relay.Constant][18] /* ty=Tensor[(1680), float64] */, meta[relay.Constant][19] /* ty=Tensor[(144), float32] */, %212, %var_14010, %var_14011, %var_14012)
}

def @func_12381(%var_12369: Tensor[(30), bool], %var_12370: Tensor[(80, 1), float64], %var_12371: Tensor[(1232), int64]) -> (Tensor[(1680), float64], Tensor[(60, 10), float32], int32, Tensor[(30), bool], Tensor[(1232), int64], Tensor[(80, 1232), bool]) {
  %213 = @func_12296() /* ty=(Tensor[(8, 13, 1), float64], Tensor[(420, 4), float64], Tensor[(1680), float64]) */;
  %214 = cast(meta[relay.Constant][20] /* ty=Tensor[(60, 10), float32] */, dtype="float32") /* ty=Tensor[(60, 10), float32] */;
  %215 = cast(4 /* ty=int32 */, dtype="int32") /* ty=int32 */;
  %216 = cast(%var_12369, dtype="bool") /* ty=Tensor[(30), bool] */;
  %217 = cast(%var_12370, dtype="float64") /* ty=Tensor[(80, 1), float64] */;
  %218 = cast(%var_12371, dtype="int64") /* ty=Tensor[(1232), int64] */;
  %219 = reshape(%214, newshape=[5, 15, 8]) /* ty=Tensor[(5, 15, 8), float32] */;
  %220 = reshape(%215, newshape=[]) /* ty=int32 */;
  %221 = reshape(%216, newshape=[30]) /* ty=Tensor[(30), bool] */;
  %222 = reshape(%217, newshape=[80]) /* ty=Tensor[(80), float64] */;
  %223 = reshape(%218, newshape=[1232]) /* ty=Tensor[(1232), int64] */;
  %224 = @func_10128(%219, %220, %221, %222, %223) /* ty=(Tensor[(5, 15, 8), float32], Tensor[(1680), float64], int32, Tensor[(84), int8], Tensor[(30), bool], Tensor[(80), float64], Tensor[(1232), int64]) */;
  %225 = %224.6;
  %226 = cast(%225, dtype="bool") /* ty=Tensor[(1232), bool] */;
  %227 = cast(%var_12370, dtype="bool") /* ty=Tensor[(80, 1), bool] */;
  %228 = %213.2;
  %229 = logical_or(%226, %227) /* ty=Tensor[(80, 1232), bool] */;
  (%228, meta[relay.Constant][20] /* ty=Tensor[(60, 10), float32] */, 4 /* ty=int32 */, %var_12369, %var_12371, %229)
}

def @func_2137(%var_2114: Tensor[(1, 5, 6), bool], %var_2115: Tensor[(14, 5, 6), bool]) -> (Tensor[(14, 5, 6), bool], Tensor[(14, 5, 6), float32]) {
  %230 = cast(%var_2114, dtype="bool") /* ty=Tensor[(1, 5, 6), bool] */;
  %231 = cast(%var_2115, dtype="bool") /* ty=Tensor[(14, 5, 6), bool] */;
  %232 = cast(%var_2115, dtype="float32") /* ty=Tensor[(14, 5, 6), float32] */;
  %233 = logical_or(%230, %231) /* ty=Tensor[(14, 5, 6), bool] */;
  %234 = cosh(%232) /* ty=Tensor[(14, 5, 6), float32] */;
  (%233, %234)
}

def @func_13291() -> (Tensor[(1, 1560), int8],) {
  %235 = @func_12686() /* ty=(Tensor[(1, 1560), int8],) */;
  %236 = %235.0;
  (%236,)
}

def @func_13107(%var_13088: Tensor[(420, 4), float64], %var_13101: Tensor[(8, 18), float32]) -> (Tensor[(420, 4), bool], Tensor[(?, 16, 9), bool], Tensor[(8, 18), float32], Tensor[(195, 2), float64]) {
  %237 = @func_12553() /* ty=(Tensor[(420, 4), float64],) */;
  %238 = %237.0;
  %239 = cast(%var_13088, dtype="bool") /* ty=Tensor[(420, 4), bool] */;
  %240 = shape_of(%238, dtype="int32") /* ty=Tensor[(2), int32] */;
  %241 = cast(%238, dtype="bool") /* ty=Tensor[(420, 4), bool] */;
  %242 = dyn.reshape(%239, %240, newshape=[]) /* ty=Tensor[(?, ?), bool] */;
  %243 = cast(%var_13101, dtype="float32") /* ty=Tensor[(8, 18), float32] */;
  %244 = cast(meta[relay.Constant][21] /* ty=Tensor[(195, 2), float64] */, dtype="float64") /* ty=Tensor[(195, 2), float64] */;
  %245 = reshape(%243, newshape=[1, 16, 9]) /* ty=Tensor[(1, 16, 9), float32] */;
  %246 = reshape(%244, newshape=[390]) /* ty=Tensor[(390), float64] */;
  %247 = @func_351(%245, %246) /* ty=(Tensor[(?, 16, 9), bool], Tensor[(6, 13, 5), float64], Tensor[(390), float64]) */;
  %248 = logical_and(%241, %242) /* ty=Tensor[(420, 4), bool] */;
  %249 = %247.0;
  (%248, %249, %var_13101, meta[relay.Constant][21] /* ty=Tensor[(195, 2), float64] */)
}

def @func_7063(%var_6974: Tensor[(6, 15, 6), float32], %var_6996: Tensor[(80), float64]) -> (Tensor[(6, 15, 6), float32], Tensor[(6, 15, 6), float64], Tensor[(8, 16, 16), uint8], Tensor[(80), float64], Tensor[(1232), int64], Tensor[(30), bool], Tensor[(420), bool], Tensor[(600), float64], Tensor[(70), uint32], Tensor[(700), uint32]) {
  %250 = cast(%var_6974, dtype="float32") /* ty=Tensor[(6, 15, 6), float32] */;
  %251 = cast(%var_6974, dtype="float64") /* ty=Tensor[(6, 15, 6), float64] */;
  %252 = exp(%251) /* ty=Tensor[(6, 15, 6), float64] */;
  %253 = cast(%252, dtype="float64") /* ty=Tensor[(6, 15, 6), float64] */;
  %254 = cast(%var_6996, dtype="float64") /* ty=Tensor[(80), float64] */;
  %255 = cast(meta[relay.Constant][22] /* ty=Tensor[(1232), int64] */, dtype="int64") /* ty=Tensor[(1232), int64] */;
  %256 = cast(meta[relay.Constant][23] /* ty=Tensor[(30), bool] */, dtype="bool") /* ty=Tensor[(30), bool] */;
  %257 = cast(meta[relay.Constant][24] /* ty=Tensor[(420), bool] */, dtype="bool") /* ty=Tensor[(420), bool] */;
  %258 = reshape(%254, newshape=[4, 10, 2]) /* ty=Tensor[(4, 10, 2), float64] */;
  %259 = reshape(%255, newshape=[1232]) /* ty=Tensor[(1232), int64] */;
  %260 = reshape(%256, newshape=[30]) /* ty=Tensor[(30), bool] */;
  %261 = reshape(%257, newshape=[70, 6]) /* ty=Tensor[(70, 6), bool] */;
  %262 = @func_5129(%258, %259, %260, %261) /* ty=(Tensor[(4, 10, 2), float64], Tensor[(1560), int8], int64, Tensor[(1232), int64], Tensor[(1, 84), int8], Tensor[(14, 5, 6), bool], Tensor[(30), bool], Tensor[(70, 6), bool], Tensor[(8, 16, 16), uint8], Tensor[(1, 2048), uint8], Tensor[(60, 2), bool]) */;
  %263 = cast(meta[relay.Constant][25] /* ty=Tensor[(70), uint32] */, dtype="uint32") /* ty=Tensor[(70), uint32] */;
  %264 = cast(meta[relay.Constant][26] /* ty=Tensor[(700), uint32] */, dtype="uint32") /* ty=Tensor[(700), uint32] */;
  %265 = %262.8;
  %266 = cast(%265, dtype="uint8") /* ty=Tensor[(8, 16, 16), uint8] */;
  %267 = reshape(%263, newshape=[1, 5, 14]) /* ty=Tensor[(1, 5, 14), uint32] */;
  %268 = reshape(%264, newshape=[10, 5, 14]) /* ty=Tensor[(10, 5, 14), uint32] */;
  %269 = reshape(%266, newshape=[512, 4]) /* ty=Tensor[(512, 4), uint8] */;
  %270 = @func_6337(%267, %268, %269) /* ty=(Tensor[(12, 5, 10), float32], Tensor[(600), float64], Tensor[(10, 5, 14), float32], Tensor[(4, 7, 3), int8], Tensor[(84), int8], Tensor[(8, 16, 16), uint8], Tensor[(512, 4), uint8], Tensor[(8, 16, 16), uint8]) */;
  %271 = sin(%250) /* ty=Tensor[(6, 15, 6), float32] */;
  %272 = acosh(%253) /* ty=Tensor[(6, 15, 6), float64] */;
  %273 = %270.1;
  (%271, %272, %265, %var_6996, meta[relay.Constant][22] /* ty=Tensor[(1232), int64] */, meta[relay.Constant][23] /* ty=Tensor[(30), bool] */, meta[relay.Constant][24] /* ty=Tensor[(420), bool] */, %273, meta[relay.Constant][25] /* ty=Tensor[(70), uint32] */, meta[relay.Constant][26] /* ty=Tensor[(700), uint32] */)
}

def @func_11553() -> (Tensor[(8, 13, 1), float64],) {
  %274 = @func_11514() /* ty=Tensor[(8, 13, 1), float64] */;
  (%274,)
}

def @func_278(%var_256: Tensor[(6, 13, 5), float64]) -> (Tensor[(6, 13, 5), float64],) {
  %275 = cast(%var_256, dtype="float64") /* ty=Tensor[(6, 13, 5), float64] */;
  %276 = log(%275) /* ty=Tensor[(6, 13, 5), float64] */;
  (%276,)
}

def @func_11847(%var_11799: Tensor[(8, 13, 12), float64], %var_11805: Tensor[(126), float64], %var_11808: int32, %var_11809: Tensor[(84), int8], %var_11810: Tensor[(30), bool]) -> (Tensor[(8, 13, 12), uint64], Tensor[(6, 3, 7), uint64], Tensor[(126), float64], int64, int32, Tensor[(84), int8], Tensor[(30), bool], Tensor[(1232), int64], Tensor[(1, 80), float32]) {
  %277 = @func_11553() /* ty=(Tensor[(8, 13, 1), float64],) */;
  %278 = %277.0;
  %279 = cast(%278, dtype="uint64") /* ty=Tensor[(8, 13, 1), uint64] */;
  %280 = cast(%var_11799, dtype="uint64") /* ty=Tensor[(8, 13, 12), uint64] */;
  %281 = cast(%var_11805, dtype="float64") /* ty=Tensor[(126), float64] */;
  %282 = reshape(%281, newshape=[6, 3, 7]) /* ty=Tensor[(6, 3, 7), float64] */;
  %283 = cast(%var_11808, dtype="int32") /* ty=int32 */;
  %284 = cast(%var_11809, dtype="int8") /* ty=Tensor[(84), int8] */;
  %285 = cast(%var_11810, dtype="bool") /* ty=Tensor[(30), bool] */;
  %286 = cast(meta[relay.Constant][27] /* ty=Tensor[(1, 80), float64] */, dtype="float64") /* ty=Tensor[(1, 80), float64] */;
  %287 = cast(meta[relay.Constant][28] /* ty=Tensor[(1232), int64] */, dtype="int64") /* ty=Tensor[(1232), int64] */;
  %288 = reshape(%283, newshape=[]) /* ty=int32 */;
  %289 = reshape(%284, newshape=[84]) /* ty=Tensor[(84), int8] */;
  %290 = reshape(%285, newshape=[30]) /* ty=Tensor[(30), bool] */;
  %291 = reshape(%286, newshape=[1, 80]) /* ty=Tensor[(1, 80), float64] */;
  %292 = reshape(%287, newshape=[1232]) /* ty=Tensor[(1232), int64] */;
  %293 = @func_5626(%288, %289, %290, %291, %292) /* ty=(Tensor[(1, 6, 11), bool], Tensor[(4, 7, 3), int8], Tensor[(84), int8], Tensor[(14, 5, 6), bool], Tensor[(30), bool], Tensor[(420), bool], Tensor[(1680), float64], Tensor[(1, 80), float64], Tensor[(1232), int64], Tensor[(16, 15, 7), float64], Tensor[(1, 2048), float32], int64) */;
  %294 = cast(meta[relay.Constant][27] /* ty=Tensor[(1, 80), float64] */, dtype="float32") /* ty=Tensor[(1, 80), float32] */;
  %295 = bitwise_and(%279, %280) /* ty=Tensor[(8, 13, 12), uint64] */;
  %296 = @func_7984(%282) /* ty=Tensor[(6, 3, 7), uint64] */;
  %297 = %293.11;
  %298 = tan(%294) /* ty=Tensor[(1, 80), float32] */;
  (%295, %296, %var_11805, %297, %var_11808, %var_11809, %var_11810, meta[relay.Constant][28] /* ty=Tensor[(1232), int64] */, %298)
}

def @func_12493() -> (Tensor[(8, 13, 1), float64],) {
  %299 = @func_11514() /* ty=Tensor[(8, 13, 1), float64] */;
  (%299,)
}

def @func_13351() -> Tensor[(1680), float64] {
  %300 = @func_12296() /* ty=(Tensor[(8, 13, 1), float64], Tensor[(420, 4), float64], Tensor[(1680), float64]) */;
  %300.2
}

def @func_13642() -> (Tensor[(420, 4), float64],) {
  %301 = @func_12776() /* ty=(Tensor[(420, 4), float64], Tensor[(420, 4), float32]) */;
  %302 = %301.0;
  (%302,)
}

def @func_14431() -> Tensor[(8, 13, 1), float64] {
  %303 = @func_14212() /* ty=(Tensor[(6, 3, 7), uint64], Tensor[(8, 13, 1), float64]) */;
  %303.1
}

def @func_13564(%var_13558: Tensor[(1188), int64]) -> (Tensor[(420, 4), float64], Tensor[(12, 11, 9), int64], Tensor[(1188), int64]) {
  %304 = @func_12553() /* ty=(Tensor[(420, 4), float64],) */;
  %305 = cast(%var_13558, dtype="int64") /* ty=Tensor[(1188), int64] */;
  %306 = cast(%var_13558, dtype="int64") /* ty=Tensor[(1188), int64] */;
  %307 = reshape(%305, newshape=[12, 11, 9]) /* ty=Tensor[(12, 11, 9), int64] */;
  %308 = reshape(%306, newshape=[12, 11, 9]) /* ty=Tensor[(12, 11, 9), int64] */;
  %309 = @func_7512(%307, %308) /* ty=(Tensor[(12, 11, 9), int64],) */;
  %310 = %304.0;
  %311 = %309.0;
  (%310, %311, %var_13558)
}

def @func_13802(%var_13797: Tensor[(9, 1, 3), float64]) -> Tensor[(9, 1, 3), float64] {
  %312 = cast(%var_13797, dtype="float64") /* ty=Tensor[(9, 1, 3), float64] */;
  cosh(%312) /* ty=Tensor[(9, 1, 3), float64] */
}

def @func_14263(%var_14235: Tensor[(96), uint8], %var_14254: Tensor[(8, 13, 96), int64]) -> (Tensor[(80), float64], Tensor[(?, 8, 12), bool], Tensor[(8, 13, 96), int8]) {
  %313 = @func_14150() /* ty=(Tensor[(8, 13, 1), float64], Tensor[(80), float64]) */;
  %314 = cast(%var_14235, dtype="uint8") /* ty=Tensor[(96), uint8] */;
  %315 = reshape(%314, newshape=[1, 8, 12]) /* ty=Tensor[(1, 8, 12), uint8] */;
  %316 = @func_7812(%315) /* ty=(Tensor[(?, 8, 12), bool],) */;
  %317 = @func_14212() /* ty=(Tensor[(6, 3, 7), uint64], Tensor[(8, 13, 1), float64]) */;
  %318 = %317.1;
  %319 = cast(%318, dtype="int64") /* ty=Tensor[(8, 13, 1), int64] */;
  %320 = cast(%var_14235, dtype="int64") /* ty=Tensor[(96), int64] */;
  %321 = right_shift(%319, %320) /* ty=Tensor[(8, 13, 96), int64] */;
  %322 = cast(%var_14254, dtype="int8") /* ty=Tensor[(8, 13, 96), int8] */;
  %323 = shape_of(%321, dtype="int32") /* ty=Tensor[(3), int32] */;
  %324 = cast(%321, dtype="int8") /* ty=Tensor[(8, 13, 96), int8] */;
  %325 = dyn.reshape(%322, %323, newshape=[]) /* ty=Tensor[(?, ?, ?), int8] */;
  %326 = %313.1;
  %327 = %316.0;
  %328 = add(%324, %325) /* ty=Tensor[(8, 13, 96), int8] */;
  (%326, %327, %328)
}

def @func_12182(%var_12163: Tensor[(420, 4), float64]) -> (Tensor[(16, 15, 7), float64], Tensor[(420, 4), float64], Tensor[(8, 13, 896), int64]) {
  %329 = cast(meta[relay.Constant][29] /* ty=Tensor[(896), int8] */, dtype="int8") /* ty=Tensor[(896), int8] */;
  %330 = cast(meta[relay.Constant][29] /* ty=Tensor[(896), int8] */, dtype="int8") /* ty=Tensor[(896), int8] */;
  %331 = cast(%var_12163, dtype="float64") /* ty=Tensor[(420, 4), float64] */;
  %332 = reshape(%329, newshape=[4, 14, 16]) /* ty=Tensor[(4, 14, 16), int8] */;
  %333 = reshape(%330, newshape=[4, 14, 16]) /* ty=Tensor[(4, 14, 16), int8] */;
  %334 = reshape(%331, newshape=[1680]) /* ty=Tensor[(1680), float64] */;
  %335 = @func_8937(%332, %333, %334) /* ty=(Tensor[(4, 14, 16), int8], Tensor[(16, 15, 7), float64], Tensor[(1680), float64]) */;
  %336 = @func_11553() /* ty=(Tensor[(8, 13, 1), float64],) */;
  %337 = %336.0;
  %338 = cast(%337, dtype="float64") /* ty=Tensor[(8, 13, 1), float64] */;
  %339 = sinh(%338) /* ty=Tensor[(8, 13, 1), float64] */;
  %340 = cast(%339, dtype="int64") /* ty=Tensor[(8, 13, 1), int64] */;
  %341 = cast(meta[relay.Constant][29] /* ty=Tensor[(896), int8] */, dtype="int64") /* ty=Tensor[(896), int64] */;
  %342 = %335.1;
  %343 = subtract(%340, %341) /* ty=Tensor[(8, 13, 896), int64] */;
  (%342, %var_12163, %343)
}

def @func_14508(%var_14501: Tensor[(420, 4), float64]) -> Tensor[(420, 4), int64] {
  %344 = @func_12553() /* ty=(Tensor[(420, 4), float64],) */;
  %345 = %344.0;
  %346 = cast(%var_14501, dtype="int64") /* ty=Tensor[(420, 4), int64] */;
  %347 = shape_of(%345, dtype="int32") /* ty=Tensor[(2), int32] */;
  %348 = cast(%345, dtype="int64") /* ty=Tensor[(420, 4), int64] */;
  %349 = dyn.reshape(%346, %347, newshape=[]) /* ty=Tensor[(?, ?), int64] */;
  minimum(%348, %349) /* ty=Tensor[(420, 4), int64] */
}

def @func_12776() -> (Tensor[(420, 4), float64], Tensor[(420, 4), float32]) {
  %350 = @func_12296() /* ty=(Tensor[(8, 13, 1), float64], Tensor[(420, 4), float64], Tensor[(1680), float64]) */;
  %351 = %350.1;
  %352 = cast(%351, dtype="float64") /* ty=Tensor[(420, 4), float64] */;
  %353 = cast(%351, dtype="float32") /* ty=Tensor[(420, 4), float32] */;
  %354 = sqrt(%352) /* ty=Tensor[(420, 4), float64] */;
  %355 = log10(%353) /* ty=Tensor[(420, 4), float32] */;
  (%354, %355)
}

def @func_12249(%var_12226: Tensor[(9, 4, 10), float64], %var_12233: Tensor[(84), bool], %var_12234: Tensor[(1344), bool]) -> (Tensor[(9, 4, 10), float64], Tensor[(6, 16, 14), uint64], Tensor[(84), bool], Tensor[(1344), bool], Tensor[(16, 15, 7), float64], Tensor[(896), int8], Tensor[(84, 20), float64]) {
  %356 = cast(meta[relay.Constant][30] /* ty=Tensor[(9, 4, 10), float64] */, dtype="float64") /* ty=Tensor[(9, 4, 10), float64] */;
  %357 = shape_of(%var_12226, dtype="int32") /* ty=Tensor[(3), int32] */;
  %358 = cast(%var_12226, dtype="float64") /* ty=Tensor[(9, 4, 10), float64] */;
  %359 = dyn.reshape(%356, %357, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %360 = cast(%var_12233, dtype="bool") /* ty=Tensor[(84), bool] */;
  %361 = cast(%var_12234, dtype="bool") /* ty=Tensor[(1344), bool] */;
  %362 = reshape(%360, newshape=[84]) /* ty=Tensor[(84), bool] */;
  %363 = reshape(%361, newshape=[6, 16, 14]) /* ty=Tensor[(6, 16, 14), bool] */;
  %364 = @func_11662(%362, %363) /* ty=(Tensor[(8, 13, 1), float64], Tensor[(84), bool], Tensor[(1344), bool], Tensor[(6, 16, 14), uint64]) */;
  %365 = cast(meta[relay.Constant][31] /* ty=Tensor[(896), int8] */, dtype="int8") /* ty=Tensor[(896), int8] */;
  %366 = cast(meta[relay.Constant][31] /* ty=Tensor[(896), int8] */, dtype="int8") /* ty=Tensor[(896), int8] */;
  %367 = cast(meta[relay.Constant][32] /* ty=Tensor[(84, 20), float64] */, dtype="float64") /* ty=Tensor[(84, 20), float64] */;
  %368 = reshape(%365, newshape=[4, 14, 16]) /* ty=Tensor[(4, 14, 16), int8] */;
  %369 = reshape(%366, newshape=[4, 14, 16]) /* ty=Tensor[(4, 14, 16), int8] */;
  %370 = reshape(%367, newshape=[1680]) /* ty=Tensor[(1680), float64] */;
  %371 = @func_8937(%368, %369, %370) /* ty=(Tensor[(4, 14, 16), int8], Tensor[(16, 15, 7), float64], Tensor[(1680), float64]) */;
  %372 = floor_mod(%358, %359) /* ty=Tensor[(9, 4, 10), float64] */;
  %373 = %364.3;
  %374 = %371.1;
  (%372, %373, %var_12233, %var_12234, %374, meta[relay.Constant][31] /* ty=Tensor[(896), int8] */, meta[relay.Constant][32] /* ty=Tensor[(84, 20), float64] */)
}

def @func_13140(%var_13134: Tensor[(10, 1560), int8]) -> Tensor[(10, 1560), bool] {
  %375 = @func_12686() /* ty=(Tensor[(1, 1560), int8],) */;
  %376 = %375.0;
  %377 = cast(%376, dtype="bool") /* ty=Tensor[(1, 1560), bool] */;
  %378 = cast(%var_13134, dtype="bool") /* ty=Tensor[(10, 1560), bool] */;
  not_equal(%377, %378) /* ty=Tensor[(10, 1560), bool] */
}

def @func_12609() -> (Tensor[(120), int8], Tensor[(14, 5, 6), float32], Tensor[(30), bool], Tensor[(420), bool]) {
  %379 = @func_12409() /* ty=(Tensor[(8, 13, 1), float64], Tensor[(56, 22), int64], Tensor[(1024), float64], Tensor[(120), int8], Tensor[(1, 1560), int8], int64, Tensor[(1232), int64]) */;
  %380 = cast(meta[relay.Constant][33] /* ty=Tensor[(30), bool] */, dtype="bool") /* ty=Tensor[(30), bool] */;
  %381 = cast(meta[relay.Constant][34] /* ty=Tensor[(420), bool] */, dtype="bool") /* ty=Tensor[(420), bool] */;
  %382 = reshape(%380, newshape=[1, 5, 6]) /* ty=Tensor[(1, 5, 6), bool] */;
  %383 = reshape(%381, newshape=[14, 5, 6]) /* ty=Tensor[(14, 5, 6), bool] */;
  %384 = @func_2137(%382, %383) /* ty=(Tensor[(14, 5, 6), bool], Tensor[(14, 5, 6), float32]) */;
  %385 = %379.3;
  %386 = %384.1;
  (%385, %386, meta[relay.Constant][33] /* ty=Tensor[(30), bool] */, meta[relay.Constant][34] /* ty=Tensor[(420), bool] */)
}

def @func_13244(%var_13232: Tensor[(2, 1560), int8]) -> (Tensor[(2, 1560), bool],) {
  %387 = @func_12686() /* ty=(Tensor[(1, 1560), int8],) */;
  %388 = %387.0;
  %389 = cast(%388, dtype="bool") /* ty=Tensor[(1, 1560), bool] */;
  %390 = cast(%var_13232, dtype="bool") /* ty=Tensor[(2, 1560), bool] */;
  %391 = equal(%389, %390) /* ty=Tensor[(2, 1560), bool] */;
  (%391,)
}

def @func_12536() -> Tensor[(420, 4), float64] {
  %392 = @func_12296() /* ty=(Tensor[(8, 13, 1), float64], Tensor[(420, 4), float64], Tensor[(1680), float64]) */;
  %392.1
}

def @func_13056(%var_13051: Tensor[(8, 13, 7), float32]) -> Tensor[(8, 13, 7), bool] {
  %393 = @func_12638() /* ty=(Tensor[(8, 13, 1), float32],) */;
  %394 = %393.0;
  %395 = cast(%394, dtype="bool") /* ty=Tensor[(8, 13, 1), bool] */;
  %396 = cast(%var_13051, dtype="bool") /* ty=Tensor[(8, 13, 7), bool] */;
  greater_equal(%395, %396) /* ty=Tensor[(8, 13, 7), bool] */
}

def @func_14088() -> Tensor[(8, 13, 1), float64] {
  %397 = @func_11553() /* ty=(Tensor[(8, 13, 1), float64],) */;
  %397.0
}

def @func_14317() -> (Tensor[(8, 13, 1), float32],) {
  %398 = @func_12638() /* ty=(Tensor[(8, 13, 1), float32],) */;
  %399 = %398.0;
  (%399,)
}

def @func_14150() -> (Tensor[(8, 13, 1), float64], Tensor[(80), float64]) {
  %400 = @func_11553() /* ty=(Tensor[(8, 13, 1), float64],) */;
  %401 = @func_13339() /* ty=(Tensor[(8, 13, 1), float64], Tensor[(30), bool], Tensor[(540), float32], Tensor[(80), float64]) */;
  %402 = %400.0;
  %403 = %401.3;
  (%402, %403)
}

def @func_14484() -> (Tensor[(8, 16, 16), uint8], Tensor[(256, 8), uint8], Tensor[(8, 13, 9), int8]) {
  %404 = cast(meta[relay.Constant][35] /* ty=Tensor[(256, 8), uint8] */, dtype="uint8") /* ty=Tensor[(256, 8), uint8] */;
  %405 = cast(meta[relay.Constant][35] /* ty=Tensor[(256, 8), uint8] */, dtype="uint8") /* ty=Tensor[(256, 8), uint8] */;
  %406 = reshape(%404, newshape=[8, 16, 16]) /* ty=Tensor[(8, 16, 16), uint8] */;
  %407 = reshape(%405, newshape=[8, 16, 16]) /* ty=Tensor[(8, 16, 16), uint8] */;
  %408 = @func_1916(%406, %407) /* ty=(Tensor[(8, 16, 16), uint8],) */;
  %409 = @func_12493() /* ty=(Tensor[(8, 13, 1), float64],) */;
  %410 = %409.0;
  %411 = cast(%410, dtype="int8") /* ty=Tensor[(8, 13, 1), int8] */;
  %412 = cast(meta[relay.Constant][36] /* ty=Tensor[(8, 13, 9), float64] */, dtype="int8") /* ty=Tensor[(8, 13, 9), int8] */;
  %413 = %408.0;
  %414 = bitwise_and(%411, %412) /* ty=Tensor[(8, 13, 9), int8] */;
  (%413, meta[relay.Constant][35] /* ty=Tensor[(256, 8), uint8] */, %414)
}

def @func_5202(%var_5191: Tensor[(16, 6, 13), float64]) -> Tensor[(16, 6, 13), float64] {
  %415 = cast(%var_5191, dtype="float64") /* ty=Tensor[(16, 6, 13), float64] */;
  acos(%415) /* ty=Tensor[(16, 6, 13), float64] */
}

def @func_14678(%var_14669: Tensor[(4, 1560), int8]) -> (Tensor[(4, 1560), uint64], Tensor[(8, 13, 1), float64]) {
  %416 = @func_12686() /* ty=(Tensor[(1, 1560), int8],) */;
  %417 = %416.0;
  %418 = cast(%417, dtype="uint64") /* ty=Tensor[(1, 1560), uint64] */;
  %419 = cast(%var_14669, dtype="uint64") /* ty=Tensor[(4, 1560), uint64] */;
  %420 = logical_xor(%418, %419) /* ty=Tensor[(4, 1560), uint64] */;
  %421 = @func_11514() /* ty=Tensor[(8, 13, 1), float64] */;
  (%420, %421)
}

def @func_8588(%var_8565: Tensor[(4, 11, 8), int16], %var_8566: Tensor[(4, 11, 8), int16]) -> Tensor[(4, 11, 8), int16] {
  %422 = cast(%var_8566, dtype="int16") /* ty=Tensor[(4, 11, 8), int16] */;
  %423 = shape_of(%var_8565, dtype="int32") /* ty=Tensor[(3), int32] */;
  %424 = cast(%var_8565, dtype="int16") /* ty=Tensor[(4, 11, 8), int16] */;
  %425 = dyn.reshape(%422, %423, newshape=[]) /* ty=Tensor[(?, ?, ?), int16] */;
  bitwise_or(%424, %425) /* ty=Tensor[(4, 11, 8), int16] */
}

def @func_13720(%var_13696: Tensor[(420, 4), float64], %var_13702: int32) -> (Tensor[(420, 4), bool], Tensor[(420), bool], int32, Tensor[(84), int8], Tensor[(10, 3), bool], Tensor[(80), float64], Tensor[(1232), int64], Tensor[(420, 4), uint32]) {
  %426 = @func_13642() /* ty=(Tensor[(420, 4), float64],) */;
  %427 = %426.0;
  %428 = cast(%var_13696, dtype="bool") /* ty=Tensor[(420, 4), bool] */;
  %429 = shape_of(%427, dtype="int32") /* ty=Tensor[(2), int32] */;
  %430 = cast(%427, dtype="bool") /* ty=Tensor[(420, 4), bool] */;
  %431 = dyn.reshape(%428, %429, newshape=[]) /* ty=Tensor[(?, ?), bool] */;
  %432 = cast(%var_13702, dtype="int32") /* ty=int32 */;
  %433 = cast(meta[relay.Constant][37] /* ty=Tensor[(84), int8] */, dtype="int8") /* ty=Tensor[(84), int8] */;
  %434 = cast(meta[relay.Constant][38] /* ty=Tensor[(10, 3), bool] */, dtype="bool") /* ty=Tensor[(10, 3), bool] */;
  %435 = cast(meta[relay.Constant][39] /* ty=Tensor[(80), float64] */, dtype="float64") /* ty=Tensor[(80), float64] */;
  %436 = cast(meta[relay.Constant][40] /* ty=Tensor[(1232), int64] */, dtype="int64") /* ty=Tensor[(1232), int64] */;
  %437 = reshape(%432, newshape=[]) /* ty=int32 */;
  %438 = reshape(%433, newshape=[84]) /* ty=Tensor[(84), int8] */;
  %439 = reshape(%434, newshape=[30]) /* ty=Tensor[(30), bool] */;
  %440 = reshape(%435, newshape=[1, 80]) /* ty=Tensor[(1, 80), float64] */;
  %441 = reshape(%436, newshape=[1232]) /* ty=Tensor[(1232), int64] */;
  %442 = @func_5626(%437, %438, %439, %440, %441) /* ty=(Tensor[(1, 6, 11), bool], Tensor[(4, 7, 3), int8], Tensor[(84), int8], Tensor[(14, 5, 6), bool], Tensor[(30), bool], Tensor[(420), bool], Tensor[(1680), float64], Tensor[(1, 80), float64], Tensor[(1232), int64], Tensor[(16, 15, 7), float64], Tensor[(1, 2048), float32], int64) */;
  %443 = cast(%427, dtype="float64") /* ty=Tensor[(420, 4), float64] */;
  %444 = exp(%443) /* ty=Tensor[(420, 4), float64] */;
  %445 = cast(%427, dtype="uint32") /* ty=Tensor[(420, 4), uint32] */;
  %446 = shape_of(%444, dtype="int32") /* ty=Tensor[(2), int32] */;
  %447 = cast(%444, dtype="uint32") /* ty=Tensor[(420, 4), uint32] */;
  %448 = dyn.reshape(%445, %446, newshape=[]) /* ty=Tensor[(?, ?), uint32] */;
  %449 = not_equal(%430, %431) /* ty=Tensor[(420, 4), bool] */;
  %450 = %442.5;
  %451 = logical_xor(%447, %448) /* ty=Tensor[(420, 4), uint32] */;
  (%449, %450, %var_13702, meta[relay.Constant][37] /* ty=Tensor[(84), int8] */, meta[relay.Constant][38] /* ty=Tensor[(10, 3), bool] */, meta[relay.Constant][39] /* ty=Tensor[(80), float64] */, meta[relay.Constant][40] /* ty=Tensor[(1232), int64] */, %451)
}

def @func_10128(%var_10100: Tensor[(5, 15, 8), float32], %var_10119: int32, %var_10121: Tensor[(30), bool], %var_10122: Tensor[(80), float64], %var_10123: Tensor[(1232), int64]) -> (Tensor[(5, 15, 8), float32], Tensor[(1680), float64], int32, Tensor[(84), int8], Tensor[(30), bool], Tensor[(80), float64], Tensor[(1232), int64]) {
  %452 = cast(%var_10100, dtype="float32") /* ty=Tensor[(5, 15, 8), float32] */;
  %453 = atanh(%452) /* ty=Tensor[(5, 15, 8), float32] */;
  %454 = cast(%453, dtype="float32") /* ty=Tensor[(5, 15, 8), float32] */;
  %455 = cast(%var_10119, dtype="int32") /* ty=int32 */;
  %456 = cast(meta[relay.Constant][41] /* ty=Tensor[(84), int8] */, dtype="int8") /* ty=Tensor[(84), int8] */;
  %457 = cast(%var_10121, dtype="bool") /* ty=Tensor[(30), bool] */;
  %458 = cast(%var_10122, dtype="float64") /* ty=Tensor[(80), float64] */;
  %459 = cast(%var_10123, dtype="int64") /* ty=Tensor[(1232), int64] */;
  %460 = reshape(%455, newshape=[]) /* ty=int32 */;
  %461 = reshape(%456, newshape=[84]) /* ty=Tensor[(84), int8] */;
  %462 = reshape(%457, newshape=[30]) /* ty=Tensor[(30), bool] */;
  %463 = reshape(%458, newshape=[1, 80]) /* ty=Tensor[(1, 80), float64] */;
  %464 = reshape(%459, newshape=[1232]) /* ty=Tensor[(1232), int64] */;
  %465 = @func_5626(%460, %461, %462, %463, %464) /* ty=(Tensor[(1, 6, 11), bool], Tensor[(4, 7, 3), int8], Tensor[(84), int8], Tensor[(14, 5, 6), bool], Tensor[(30), bool], Tensor[(420), bool], Tensor[(1680), float64], Tensor[(1, 80), float64], Tensor[(1232), int64], Tensor[(16, 15, 7), float64], Tensor[(1, 2048), float32], int64) */;
  %466 = acosh(%454) /* ty=Tensor[(5, 15, 8), float32] */;
  %467 = %465.6;
  (%466, %467, %var_10119, meta[relay.Constant][41] /* ty=Tensor[(84), int8] */, %var_10121, %var_10122, %var_10123)
}

def @func_14827(%var_14777: Tensor[(420, 4), float64], %var_14802: Tensor[(420, 4), uint64]) -> (Tensor[(420, 4), uint64], Tensor[(8, 13, 1), float64], Tensor[(420, 4), float32]) {
  %468 = @func_12536() /* ty=Tensor[(420, 4), float64] */;
  %469 = cast(%var_14777, dtype="uint64") /* ty=Tensor[(420, 4), uint64] */;
  %470 = shape_of(%468, dtype="int32") /* ty=Tensor[(2), int32] */;
  %471 = cast(%468, dtype="uint64") /* ty=Tensor[(420, 4), uint64] */;
  %472 = dyn.reshape(%469, %470, newshape=[]) /* ty=Tensor[(?, ?), uint64] */;
  %473 = add(%471, %472) /* ty=Tensor[(420, 4), uint64] */;
  %474 = cast(%var_14802, dtype="uint64") /* ty=Tensor[(420, 4), uint64] */;
  %475 = shape_of(%473, dtype="int32") /* ty=Tensor[(2), int32] */;
  %476 = cast(%473, dtype="uint64") /* ty=Tensor[(420, 4), uint64] */;
  %477 = dyn.reshape(%474, %475, newshape=[]) /* ty=Tensor[(?, ?), uint64] */;
  %478 = @func_12409() /* ty=(Tensor[(8, 13, 1), float64], Tensor[(56, 22), int64], Tensor[(1024), float64], Tensor[(120), int8], Tensor[(1, 1560), int8], int64, Tensor[(1232), int64]) */;
  %479 = cast(%473, dtype="float32") /* ty=Tensor[(420, 4), float32] */;
  %480 = bitwise_xor(%476, %477) /* ty=Tensor[(420, 4), uint64] */;
  %481 = %478.0;
  %482 = rsqrt(%479) /* ty=Tensor[(420, 4), float32] */;
  (%480, %481, %482)
}

def @func_6923(%var_6887: Tensor[(13, 15, 1), float32], %var_6894: uint64, %var_6895: Tensor[(25, 9), uint64]) -> (uint64, Tensor[(25, 9), uint64], Tensor[(390), float64], Tensor[(13, 15, 390), int32]) {
  %483 = cast(%var_6887, dtype="float32") /* ty=Tensor[(13, 15, 1), float32] */;
  %484 = cos(%483) /* ty=Tensor[(13, 15, 1), float32] */;
  %485 = cast(%var_6894, dtype="uint64") /* ty=uint64 */;
  %486 = cast(%var_6895, dtype="uint64") /* ty=Tensor[(25, 9), uint64] */;
  %487 = cast(meta[relay.Constant][42] /* ty=Tensor[(390), float64] */, dtype="float64") /* ty=Tensor[(390), float64] */;
  %488 = reshape(%485, newshape=[]) /* ty=uint64 */;
  %489 = reshape(%486, newshape=[5, 3, 15]) /* ty=Tensor[(5, 3, 15), uint64] */;
  %490 = reshape(%487, newshape=[390]) /* ty=Tensor[(390), float64] */;
  %491 = @func_2974(%488, %489, %490) /* ty=(Tensor[(5, 3, 15), uint16], Tensor[(5, 3, 15), float64], Tensor[(6, 13, 5), float64], Tensor[(390), float64]) */;
  %492 = %491.3;
  %493 = cast(%484, dtype="int32") /* ty=Tensor[(13, 15, 1), int32] */;
  %494 = cast(%492, dtype="int32") /* ty=Tensor[(390), int32] */;
  %495 = bitwise_xor(%493, %494) /* ty=Tensor[(13, 15, 390), int32] */;
  (%var_6894, %var_6895, meta[relay.Constant][42] /* ty=Tensor[(390), float64] */, %495)
}

def @func_13043(%var_13033: Tensor[(1232), int64]) -> (Tensor[(8, 13, 1), float64], Tensor[(60, 10), float32], Tensor[(80), float64], Tensor[(1232), int64], Tensor[(30, 1), float32]) {
  %496 = cast(meta[relay.Constant][43] /* ty=Tensor[(30, 1), bool] */, dtype="bool") /* ty=Tensor[(30, 1), bool] */;
  %497 = cast(meta[relay.Constant][44] /* ty=Tensor[(80), float64] */, dtype="float64") /* ty=Tensor[(80), float64] */;
  %498 = cast(%var_13033, dtype="int64") /* ty=Tensor[(1232), int64] */;
  %499 = reshape(%496, newshape=[30]) /* ty=Tensor[(30), bool] */;
  %500 = reshape(%497, newshape=[80, 1]) /* ty=Tensor[(80, 1), float64] */;
  %501 = reshape(%498, newshape=[1232]) /* ty=Tensor[(1232), int64] */;
  %502 = @func_12381(%499, %500, %501) /* ty=(Tensor[(1680), float64], Tensor[(60, 10), float32], int32, Tensor[(30), bool], Tensor[(1232), int64], Tensor[(80, 1232), bool]) */;
  %503 = cast(meta[relay.Constant][43] /* ty=Tensor[(30, 1), bool] */, dtype="float32") /* ty=Tensor[(30, 1), float32] */;
  %504 = @func_11514() /* ty=Tensor[(8, 13, 1), float64] */;
  %505 = %502.1;
  %506 = acos(%503) /* ty=Tensor[(30, 1), float32] */;
  (%504, %505, meta[relay.Constant][44] /* ty=Tensor[(80), float64] */, %var_13033, %506)
}

def @func_11690() -> Tensor[(8, 13, 1), float64] {
  %507 = @func_11553() /* ty=(Tensor[(8, 13, 1), float64],) */;
  %507.0
}

def @func_7812(%var_7801: Tensor[(1, 8, 12), uint8]) -> (Tensor[(?, 8, 12), bool],) {
  %508 = cast(meta[relay.Constant][45] /* ty=Tensor[(1, 8, 12), uint8] */, dtype="bool") /* ty=Tensor[(1, 8, 12), bool] */;
  %509 = shape_of(%var_7801, dtype="int32") /* ty=Tensor[(3), int32] */;
  %510 = cast(%var_7801, dtype="bool") /* ty=Tensor[(1, 8, 12), bool] */;
  %511 = dyn.reshape(%508, %509, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %512 = not_equal(%510, %511) /* ty=Tensor[(?, 8, 12), bool] */;
  (%512,)
}

def @func_13478() -> (Tensor[(8, 13, 84), uint32], Tensor[(8, 13, 1), float64], Tensor[(1, 1560), int8], Tensor[(420, 4), uint16], Tensor[(6, 3, 7), uint64], Tensor[(126), float64], Tensor[(420, 4), float64], Tensor[(12, 5, 10), float32], Tensor[(600), float64]) {
  %513 = @func_13218() /* ty=(Tensor[(8, 13, 1), float64], Tensor[(12, 11, 9), int64], Tensor[(9, 132), int64], Tensor[(8, 16, 16), uint8], Tensor[(2048), uint8], Tensor[(1232), int64], Tensor[(8, 13, 84), uint32]) */;
  %514 = @func_12296() /* ty=(Tensor[(8, 13, 1), float64], Tensor[(420, 4), float64], Tensor[(1680), float64]) */;
  %515 = @func_13291() /* ty=(Tensor[(1, 1560), int8],) */;
  %516 = @func_12553() /* ty=(Tensor[(420, 4), float64],) */;
  %517 = %516.0;
  %518 = cast(%517, dtype="float64") /* ty=Tensor[(420, 4), float64] */;
  %519 = log2(%518) /* ty=Tensor[(420, 4), float64] */;
  %520 = cast(%519, dtype="int16") /* ty=Tensor[(420, 4), int16] */;
  %521 = shape_of(%517, dtype="int32") /* ty=Tensor[(2), int32] */;
  %522 = cast(%517, dtype="int16") /* ty=Tensor[(420, 4), int16] */;
  %523 = dyn.reshape(%520, %521, newshape=[]) /* ty=Tensor[(?, ?), int16] */;
  %524 = subtract(%522, %523) /* ty=Tensor[(420, 4), int16] */;
  %525 = cast(%517, dtype="uint16") /* ty=Tensor[(420, 4), uint16] */;
  %526 = shape_of(%524, dtype="int32") /* ty=Tensor[(2), int32] */;
  %527 = cast(%524, dtype="uint16") /* ty=Tensor[(420, 4), uint16] */;
  %528 = dyn.reshape(%525, %526, newshape=[]) /* ty=Tensor[(?, ?), uint16] */;
  %529 = cast(meta[relay.Constant][46] /* ty=Tensor[(126), float64] */, dtype="float64") /* ty=Tensor[(126), float64] */;
  %530 = reshape(%529, newshape=[6, 3, 7]) /* ty=Tensor[(6, 3, 7), float64] */;
  %531 = cast(%517, dtype="float64") /* ty=Tensor[(420, 4), float64] */;
  %532 = cast(meta[relay.Constant][47] /* ty=Tensor[(600), float64] */, dtype="float64") /* ty=Tensor[(600), float64] */;
  %533 = reshape(%532, newshape=[12, 5, 10]) /* ty=Tensor[(12, 5, 10), float64] */;
  %534 = %513.6;
  %535 = %514.0;
  %536 = %515.0;
  %537 = left_shift(%527, %528) /* ty=Tensor[(420, 4), uint16] */;
  %538 = @func_7984(%530) /* ty=Tensor[(6, 3, 7), uint64] */;
  %539 = cos(%531) /* ty=Tensor[(420, 4), float64] */;
  %540 = @func_5450(%533) /* ty=Tensor[(12, 5, 10), float32] */;
  (%534, %535, %536, %537, %538, meta[relay.Constant][46] /* ty=Tensor[(126), float64] */, %539, %540, meta[relay.Constant][47] /* ty=Tensor[(600), float64] */)
}

def @func_10257(%var_10196: int64, %var_10197: Tensor[(3, 15, 13), int64], %var_10203: Tensor[(1024), float64], %var_10206: Tensor[(1, 1232), int64], %var_10222: Tensor[(600), float64], %var_10223: Tensor[(1680), float64]) -> (Tensor[(3, 15, 13), int64], Tensor[(84), int8], Tensor[(1024), float64], Tensor[(120), int8], Tensor[(1560), int8], Tensor[(1, 1232), int64], Tensor[(1248), float64], Tensor[(600), float64], Tensor[(5, 42), float64], Tensor[(1680), float32]) {
  %541 = cast(%var_10196, dtype="int64") /* ty=int64 */;
  %542 = cast(%var_10197, dtype="int64") /* ty=Tensor[(3, 15, 13), int64] */;
  %543 = cast(%var_10203, dtype="float64") /* ty=Tensor[(1024), float64] */;
  %544 = cast(meta[relay.Constant][48] /* ty=Tensor[(120), int8] */, dtype="int8") /* ty=Tensor[(120), int8] */;
  %545 = cast(meta[relay.Constant][49] /* ty=Tensor[(1560), int8] */, dtype="int8") /* ty=Tensor[(1560), int8] */;
  %546 = cast(%var_10196, dtype="int64") /* ty=int64 */;
  %547 = cast(%var_10206, dtype="int64") /* ty=Tensor[(1, 1232), int64] */;
  %548 = cast(%var_10203, dtype="float64") /* ty=Tensor[(1024), float64] */;
  %549 = reshape(%543, newshape=[8, 8, 16]) /* ty=Tensor[(8, 8, 16), float64] */;
  %550 = reshape(%544, newshape=[120]) /* ty=Tensor[(120), int8] */;
  %551 = reshape(%545, newshape=[6, 260]) /* ty=Tensor[(6, 260), int8] */;
  %552 = reshape(%546, newshape=[]) /* ty=int64 */;
  %553 = reshape(%547, newshape=[56, 22]) /* ty=Tensor[(56, 22), int64] */;
  %554 = reshape(%548, newshape=[8, 8, 16]) /* ty=Tensor[(8, 8, 16), float64] */;
  %555 = @func_6688(%549, %550, %551, %552, %553, %554) /* ty=(Tensor[(4, 7, 3), int8], Tensor[(120), int8], Tensor[(6, 260), int8], int64, Tensor[(56, 22), int64], Tensor[(84), int8], Tensor[(8, 8, 16), bool], Tensor[(8, 8, 16), uint64]) */;
  %556 = cast(meta[relay.Constant][50] /* ty=Tensor[(5, 42), float64] */, dtype="float64") /* ty=Tensor[(5, 42), float64] */;
  %557 = cast(%var_10222, dtype="float64") /* ty=Tensor[(600), float64] */;
  %558 = %555.5;
  %559 = cast(%558, dtype="int8") /* ty=Tensor[(84), int8] */;
  %560 = cast(%var_10223, dtype="float64") /* ty=Tensor[(1680), float64] */;
  %561 = cast(meta[relay.Constant][49] /* ty=Tensor[(1560), int8] */, dtype="int8") /* ty=Tensor[(1560), int8] */;
  %562 = cast(%var_10196, dtype="int64") /* ty=int64 */;
  %563 = cast(%var_10206, dtype="int64") /* ty=Tensor[(1, 1232), int64] */;
  %564 = reshape(%556, newshape=[6, 5, 7]) /* ty=Tensor[(6, 5, 7), float64] */;
  %565 = reshape(%557, newshape=[600]) /* ty=Tensor[(600), float64] */;
  %566 = reshape(%559, newshape=[42, 2]) /* ty=Tensor[(42, 2), int8] */;
  %567 = reshape(%560, newshape=[840, 2]) /* ty=Tensor[(840, 2), float64] */;
  %568 = reshape(%561, newshape=[1560]) /* ty=Tensor[(1560), int8] */;
  %569 = reshape(%562, newshape=[]) /* ty=int64 */;
  %570 = reshape(%563, newshape=[1232]) /* ty=Tensor[(1232), int64] */;
  %571 = @func_6548(%564, %565, %566, %567, %568, %569, %570) /* ty=(Tensor[(12, 5, 10), float32], Tensor[(600), float64], Tensor[(4, 7, 3), int8], Tensor[(42, 2), int8], Tensor[(12, 5, 10), float32], Tensor[(16, 15, 7), float64], Tensor[(840, 2), float64], Tensor[(6, 5, 7), bool], Tensor[(6, 5, 7), float64], Tensor[(14, 5, 6), bool], Tensor[(120), int8], Tensor[(1560), int8], int64, Tensor[(1232), int64], Tensor[(16, 6, 13), float64], Tensor[(1248), float64]) */;
  %572 = cast(meta[relay.Constant][50] /* ty=Tensor[(5, 42), float64] */, dtype="float64") /* ty=Tensor[(5, 42), float64] */;
  %573 = cast(%var_10196, dtype="float64") /* ty=float64 */;
  %574 = cast(%var_10223, dtype="float32") /* ty=Tensor[(1680), float32] */;
  %575 = right_shift(%541, %542) /* ty=Tensor[(3, 15, 13), int64] */;
  %576 = %571.15;
  %577 = divide(%572, %573) /* ty=Tensor[(5, 42), float64] */;
  %578 = acos(%574) /* ty=Tensor[(1680), float32] */;
  (%575, %558, %var_10203, meta[relay.Constant][48] /* ty=Tensor[(120), int8] */, meta[relay.Constant][49] /* ty=Tensor[(1560), int8] */, %var_10206, %576, %var_10222, %577, %578)
}

def @func_12553() -> (Tensor[(420, 4), float64],) {
  %579 = @func_12536() /* ty=Tensor[(420, 4), float64] */;
  %580 = cast(%579, dtype="float64") /* ty=Tensor[(420, 4), float64] */;
  %581 = asin(%580) /* ty=Tensor[(420, 4), float64] */;
  (%581,)
}

def @func_10464(%var_10461: Tensor[(16, 15, 6), float32]) -> (Tensor[(16, 15, 6), float32],) {
  %582 = cast(%var_10461, dtype="float32") /* ty=Tensor[(16, 15, 6), float32] */;
  %583 = atan(%582) /* ty=Tensor[(16, 15, 6), float32] */;
  (%583,)
}

def @func_11164(%var_11138: Tensor[(6, 5, 1), bool], %var_11139: Tensor[(6, 5, 9), bool]) -> (Tensor[(6, 5, 9), bool], Tensor[(14, 5, 6), bool], Tensor[(420), bool]) {
  %584 = cast(%var_11138, dtype="bool") /* ty=Tensor[(6, 5, 1), bool] */;
  %585 = cast(%var_11139, dtype="bool") /* ty=Tensor[(6, 5, 9), bool] */;
  %586 = cast(%var_11138, dtype="bool") /* ty=Tensor[(6, 5, 1), bool] */;
  %587 = cast(meta[relay.Constant][51] /* ty=Tensor[(420), bool] */, dtype="bool") /* ty=Tensor[(420), bool] */;
  %588 = reshape(%586, newshape=[1, 5, 6]) /* ty=Tensor[(1, 5, 6), bool] */;
  %589 = reshape(%587, newshape=[14, 5, 6]) /* ty=Tensor[(14, 5, 6), bool] */;
  %590 = @func_2137(%588, %589) /* ty=(Tensor[(14, 5, 6), bool], Tensor[(14, 5, 6), float32]) */;
  %591 = logical_and(%584, %585) /* ty=Tensor[(6, 5, 9), bool] */;
  %592 = %590.0;
  (%591, %592, meta[relay.Constant][51] /* ty=Tensor[(420), bool] */)
}

def @func_924(%var_900: Tensor[(16, 15, 7), float64]) -> Tensor[(16, 15, 7), float64] {
  %593 = cast(%var_900, dtype="float64") /* ty=Tensor[(16, 15, 7), float64] */;
  erf(%593) /* ty=Tensor[(16, 15, 7), float64] */
}

def @func_13524(%var_13513: Tensor[(12, 1560), int8], %var_13519: Tensor[(12, 1560), float64]) -> (Tensor[(12, 1560), int64], Tensor[(12, 1560), bool], Tensor[(12, 1560), int16]) {
  %594 = @func_13291() /* ty=(Tensor[(1, 1560), int8],) */;
  %595 = %594.0;
  %596 = cast(%595, dtype="int64") /* ty=Tensor[(1, 1560), int64] */;
  %597 = cast(meta[relay.Constant][52] /* ty=Tensor[(12, 1560), int8] */, dtype="int64") /* ty=Tensor[(12, 1560), int64] */;
  %598 = cast(%var_13513, dtype="bool") /* ty=Tensor[(12, 1560), bool] */;
  %599 = shape_of(meta[relay.Constant][52] /* ty=Tensor[(12, 1560), int8] */, dtype="int32") /* ty=Tensor[(2), int32] */;
  %600 = cast(meta[relay.Constant][52] /* ty=Tensor[(12, 1560), int8] */, dtype="bool") /* ty=Tensor[(12, 1560), bool] */;
  %601 = dyn.reshape(%598, %599, newshape=[]) /* ty=Tensor[(?, ?), bool] */;
  %602 = cast(%595, dtype="float64") /* ty=Tensor[(1, 1560), float64] */;
  %603 = cast(meta[relay.Constant][52] /* ty=Tensor[(12, 1560), int8] */, dtype="float64") /* ty=Tensor[(12, 1560), float64] */;
  %604 = mod(%602, %603) /* ty=Tensor[(12, 1560), float64] */;
  %605 = cast(%var_13519, dtype="int16") /* ty=Tensor[(12, 1560), int16] */;
  %606 = shape_of(%604, dtype="int32") /* ty=Tensor[(2), int32] */;
  %607 = cast(%604, dtype="int16") /* ty=Tensor[(12, 1560), int16] */;
  %608 = dyn.reshape(%605, %606, newshape=[]) /* ty=Tensor[(?, ?), int16] */;
  %609 = maximum(%596, %597) /* ty=Tensor[(12, 1560), int64] */;
  %610 = logical_and(%600, %601) /* ty=Tensor[(12, 1560), bool] */;
  %611 = add(%607, %608) /* ty=Tensor[(12, 1560), int16] */;
  (%609, %610, %611)
}

def @func_12664(%var_12651: uint64, %var_12652: Tensor[(225), uint64], %var_12653: Tensor[(390), float64], %var_12661: Tensor[(2, 616), int64]) -> (Tensor[(8, 13, 1), float32], Tensor[(6, 13, 5), float64], uint64, Tensor[(225), uint64], Tensor[(390), float64], Tensor[(10, 12, 13), int8], Tensor[(2, 616), int64], Tensor[(84), int8]) {
  %612 = @func_12493() /* ty=(Tensor[(8, 13, 1), float64],) */;
  %613 = %612.0;
  %614 = cast(%613, dtype="float32") /* ty=Tensor[(8, 13, 1), float32] */;
  %615 = cast(%var_12651, dtype="uint64") /* ty=uint64 */;
  %616 = cast(%var_12652, dtype="uint64") /* ty=Tensor[(225), uint64] */;
  %617 = cast(%var_12653, dtype="float64") /* ty=Tensor[(390), float64] */;
  %618 = reshape(%615, newshape=[]) /* ty=uint64 */;
  %619 = reshape(%616, newshape=[5, 3, 15]) /* ty=Tensor[(5, 3, 15), uint64] */;
  %620 = reshape(%617, newshape=[390]) /* ty=Tensor[(390), float64] */;
  %621 = @func_2974(%618, %619, %620) /* ty=(Tensor[(5, 3, 15), uint16], Tensor[(5, 3, 15), float64], Tensor[(6, 13, 5), float64], Tensor[(390), float64]) */;
  %622 = cast(%var_12661, dtype="int64") /* ty=Tensor[(2, 616), int64] */;
  %623 = cast(meta[relay.Constant][53] /* ty=Tensor[(84), int8] */, dtype="int8") /* ty=Tensor[(84), int8] */;
  %624 = reshape(%622, newshape=[1232]) /* ty=Tensor[(1232), int64] */;
  %625 = reshape(%623, newshape=[84]) /* ty=Tensor[(84), int8] */;
  %626 = @func_12461(%624, %625) /* ty=(Tensor[(8, 13, 1), float64], Tensor[(10, 12, 13), int8], Tensor[(120), int8], Tensor[(1560), int8], int64, Tensor[(1232), int64], Tensor[(84), int8]) */;
  %627 = sigmoid(%614) /* ty=Tensor[(8, 13, 1), float32] */;
  %628 = %621.2;
  %629 = %626.1;
  (%627, %628, %var_12651, %var_12652, %var_12653, %629, %var_12661, meta[relay.Constant][53] /* ty=Tensor[(84), int8] */)
}

def @func_14369() -> Tensor[(420, 4), float64] {
  @func_14289() /* ty=Tensor[(420, 4), float64] */
}

def @func_351(%var_310: Tensor[(1, 16, 9), float32], %var_334: Tensor[(390), float64]) -> (Tensor[(?, 16, 9), bool], Tensor[(6, 13, 5), float64], Tensor[(390), float64]) {
  %630 = cast(%var_310, dtype="float32") /* ty=Tensor[(1, 16, 9), float32] */;
  %631 = sin(%630) /* ty=Tensor[(1, 16, 9), float32] */;
  %632 = cast(%var_310, dtype="bool") /* ty=Tensor[(1, 16, 9), bool] */;
  %633 = shape_of(%631, dtype="int32") /* ty=Tensor[(3), int32] */;
  %634 = cast(%631, dtype="bool") /* ty=Tensor[(1, 16, 9), bool] */;
  %635 = dyn.reshape(%632, %633, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %636 = cast(%var_334, dtype="float64") /* ty=Tensor[(390), float64] */;
  %637 = reshape(%636, newshape=[6, 13, 5]) /* ty=Tensor[(6, 13, 5), float64] */;
  %638 = @func_278(%637) /* ty=(Tensor[(6, 13, 5), float64],) */;
  %639 = greater_equal(%634, %635) /* ty=Tensor[(?, 16, 9), bool] */;
  %640 = %638.0;
  (%639, %640, %var_334)
}

def @func_6548(%var_6442: Tensor[(6, 5, 7), float64], %var_6460: Tensor[(600), float64], %var_6468: Tensor[(42, 2), int8], %var_6480: Tensor[(840, 2), float64], %var_6525: Tensor[(1560), int8], %var_6526: int64, %var_6527: Tensor[(1232), int64]) -> (Tensor[(12, 5, 10), float32], Tensor[(600), float64], Tensor[(4, 7, 3), int8], Tensor[(42, 2), int8], Tensor[(12, 5, 10), float32], Tensor[(16, 15, 7), float64], Tensor[(840, 2), float64], Tensor[(6, 5, 7), bool], Tensor[(6, 5, 7), float64], Tensor[(14, 5, 6), bool], Tensor[(120), int8], Tensor[(1560), int8], int64, Tensor[(1232), int64], Tensor[(16, 6, 13), float64], Tensor[(1248), float64]) {
  %641 = cast(%var_6460, dtype="float64") /* ty=Tensor[(600), float64] */;
  %642 = reshape(%641, newshape=[12, 5, 10]) /* ty=Tensor[(12, 5, 10), float64] */;
  %643 = cast(%var_6468, dtype="int8") /* ty=Tensor[(42, 2), int8] */;
  %644 = cast(%var_6468, dtype="int8") /* ty=Tensor[(42, 2), int8] */;
  %645 = reshape(%643, newshape=[4, 7, 3]) /* ty=Tensor[(4, 7, 3), int8] */;
  %646 = reshape(%644, newshape=[4, 7, 3]) /* ty=Tensor[(4, 7, 3), int8] */;
  %647 = @func_809(%645, %646) /* ty=(Tensor[(4, 7, 3), int8],) */;
  %648 = @func_5450(%642) /* ty=Tensor[(12, 5, 10), float32] */;
  %649 = cast(%648, dtype="float64") /* ty=Tensor[(12, 5, 10), float64] */;
  %650 = reshape(%649, newshape=[12, 5, 10]) /* ty=Tensor[(12, 5, 10), float64] */;
  %651 = cast(%var_6480, dtype="float64") /* ty=Tensor[(840, 2), float64] */;
  %652 = reshape(%651, newshape=[16, 15, 7]) /* ty=Tensor[(16, 15, 7), float64] */;
  %653 = cast(%var_6442, dtype="float64") /* ty=Tensor[(6, 5, 7), float64] */;
  %654 = log2(%653) /* ty=Tensor[(6, 5, 7), float64] */;
  %655 = cast(%var_6442, dtype="bool") /* ty=Tensor[(6, 5, 7), bool] */;
  %656 = shape_of(%654, dtype="int32") /* ty=Tensor[(3), int32] */;
  %657 = cast(%654, dtype="bool") /* ty=Tensor[(6, 5, 7), bool] */;
  %658 = dyn.reshape(%655, %656, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %659 = cast(%var_6442, dtype="float64") /* ty=Tensor[(6, 5, 7), float64] */;
  %660 = cast(meta[relay.Constant][54] /* ty=Tensor[(120), int8] */, dtype="int8") /* ty=Tensor[(120), int8] */;
  %661 = cast(%var_6525, dtype="int8") /* ty=Tensor[(1560), int8] */;
  %662 = cast(%var_6526, dtype="int64") /* ty=int64 */;
  %663 = cast(%var_6527, dtype="int64") /* ty=Tensor[(1232), int64] */;
  %664 = %647.0;
  %665 = cast(%664, dtype="int8") /* ty=Tensor[(4, 7, 3), int8] */;
  %666 = reshape(%660, newshape=[10, 12, 1]) /* ty=Tensor[(10, 12, 1), int8] */;
  %667 = reshape(%661, newshape=[10, 12, 13]) /* ty=Tensor[(10, 12, 13), int8] */;
  %668 = reshape(%662, newshape=[]) /* ty=int64 */;
  %669 = reshape(%663, newshape=[1232]) /* ty=Tensor[(1232), int64] */;
  %670 = reshape(%665, newshape=[84]) /* ty=Tensor[(84), int8] */;
  %671 = @func_4093(%666, %667, %668, %669, %670) /* ty=(Tensor[(10, 12, 13), int8], Tensor[(11, 8, 14), int64], int64, Tensor[(1232), int64], Tensor[(84), int8], Tensor[(14, 5, 6), bool], Tensor[(10, 3), bool], Tensor[(420), bool], Tensor[(4, 7, 3), int8]) */;
  %672 = cast(meta[relay.Constant][55] /* ty=Tensor[(1248), float64] */, dtype="float64") /* ty=Tensor[(1248), float64] */;
  %673 = reshape(%672, newshape=[16, 6, 13]) /* ty=Tensor[(16, 6, 13), float64] */;
  %674 = @func_5450(%650) /* ty=Tensor[(12, 5, 10), float32] */;
  %675 = @func_924(%652) /* ty=Tensor[(16, 15, 7), float64] */;
  %676 = equal(%657, %658) /* ty=Tensor[(6, 5, 7), bool] */;
  %677 = exp(%659) /* ty=Tensor[(6, 5, 7), float64] */;
  %678 = %671.5;
  %679 = @func_5202(%673) /* ty=Tensor[(16, 6, 13), float64] */;
  (%648, %var_6460, %664, %var_6468, %674, %675, %var_6480, %676, %677, %678, meta[relay.Constant][54] /* ty=Tensor[(120), int8] */, %var_6525, %var_6526, %var_6527, %679, meta[relay.Constant][55] /* ty=Tensor[(1248), float64] */)
}

def @func_12005(%var_11959: Tensor[(96), uint8], %var_11962: Tensor[(896), int8], %var_11963: Tensor[(1680, 1), float64], %var_11994: uint64) -> (Tensor[(?, 8, 12), bool], Tensor[(96), uint8], Tensor[(16, 15, 7), float64], Tensor[(896), int8], Tensor[(1680, 1), float64], Tensor[(6, 3, 7), uint64], Tensor[(8, 13, 126), float32], Tensor[(8, 13, 126), bool], Tensor[(5, 3, 15), float64], uint64, Tensor[(225, 1), uint64], Tensor[(390), float64]) {
  %680 = cast(%var_11959, dtype="uint8") /* ty=Tensor[(96), uint8] */;
  %681 = reshape(%680, newshape=[1, 8, 12]) /* ty=Tensor[(1, 8, 12), uint8] */;
  %682 = @func_7812(%681) /* ty=(Tensor[(?, 8, 12), bool],) */;
  %683 = cast(%var_11962, dtype="int8") /* ty=Tensor[(896), int8] */;
  %684 = cast(%var_11962, dtype="int8") /* ty=Tensor[(896), int8] */;
  %685 = cast(%var_11963, dtype="float64") /* ty=Tensor[(1680, 1), float64] */;
  %686 = reshape(%683, newshape=[4, 14, 16]) /* ty=Tensor[(4, 14, 16), int8] */;
  %687 = reshape(%684, newshape=[4, 14, 16]) /* ty=Tensor[(4, 14, 16), int8] */;
  %688 = reshape(%685, newshape=[1680]) /* ty=Tensor[(1680), float64] */;
  %689 = @func_8937(%686, %687, %688) /* ty=(Tensor[(4, 14, 16), int8], Tensor[(16, 15, 7), float64], Tensor[(1680), float64]) */;
  %690 = cast(meta[relay.Constant][56] /* ty=Tensor[(126), float64] */, dtype="float64") /* ty=Tensor[(126), float64] */;
  %691 = reshape(%690, newshape=[6, 3, 7]) /* ty=Tensor[(6, 3, 7), float64] */;
  %692 = @func_11553() /* ty=(Tensor[(8, 13, 1), float64],) */;
  %693 = %692.0;
  %694 = cast(%693, dtype="float32") /* ty=Tensor[(8, 13, 1), float32] */;
  %695 = cast(meta[relay.Constant][56] /* ty=Tensor[(126), float64] */, dtype="float32") /* ty=Tensor[(126), float32] */;
  %696 = @func_11514() /* ty=Tensor[(8, 13, 1), float64] */;
  %697 = cast(%696, dtype="bool") /* ty=Tensor[(8, 13, 1), bool] */;
  %698 = cast(meta[relay.Constant][56] /* ty=Tensor[(126), float64] */, dtype="bool") /* ty=Tensor[(126), bool] */;
  %699 = cast(%var_11994, dtype="uint64") /* ty=uint64 */;
  %700 = cast(meta[relay.Constant][57] /* ty=Tensor[(225, 1), uint64] */, dtype="uint64") /* ty=Tensor[(225, 1), uint64] */;
  %701 = cast(meta[relay.Constant][58] /* ty=Tensor[(390), float64] */, dtype="float64") /* ty=Tensor[(390), float64] */;
  %702 = reshape(%699, newshape=[]) /* ty=uint64 */;
  %703 = reshape(%700, newshape=[5, 3, 15]) /* ty=Tensor[(5, 3, 15), uint64] */;
  %704 = reshape(%701, newshape=[390]) /* ty=Tensor[(390), float64] */;
  %705 = @func_2974(%702, %703, %704) /* ty=(Tensor[(5, 3, 15), uint16], Tensor[(5, 3, 15), float64], Tensor[(6, 13, 5), float64], Tensor[(390), float64]) */;
  %706 = %682.0;
  %707 = %689.1;
  %708 = @func_7984(%691) /* ty=Tensor[(6, 3, 7), uint64] */;
  %709 = mod(%694, %695) /* ty=Tensor[(8, 13, 126), float32] */;
  %710 = greater_equal(%697, %698) /* ty=Tensor[(8, 13, 126), bool] */;
  %711 = %705.1;
  (%706, %var_11959, %707, %var_11962, %var_11963, %708, %709, %710, %711, %var_11994, meta[relay.Constant][57] /* ty=Tensor[(225, 1), uint64] */, meta[relay.Constant][58] /* ty=Tensor[(390), float64] */)
}

def @func_12067(%var_12023: Tensor[(96), uint8], %var_12024: Tensor[(448, 2), int8], %var_12025: Tensor[(1680), float64]) -> (Tensor[(8, 13, 1), float64], Tensor[(96), uint8], Tensor[(1680), float64], Tensor[(1680), float64], Tensor[(448, 2), float32], Tensor[(16, 15, 7), float64], Tensor[(5, 3, 15), int64]) {
  %712 = cast(%var_12024, dtype="int8") /* ty=Tensor[(448, 2), int8] */;
  %713 = cast(%var_12024, dtype="int8") /* ty=Tensor[(448, 2), int8] */;
  %714 = cast(%var_12025, dtype="float64") /* ty=Tensor[(1680), float64] */;
  %715 = reshape(%712, newshape=[4, 14, 16]) /* ty=Tensor[(4, 14, 16), int8] */;
  %716 = reshape(%713, newshape=[4, 14, 16]) /* ty=Tensor[(4, 14, 16), int8] */;
  %717 = reshape(%714, newshape=[1680]) /* ty=Tensor[(1680), float64] */;
  %718 = @func_8937(%715, %716, %717) /* ty=(Tensor[(4, 14, 16), int8], Tensor[(16, 15, 7), float64], Tensor[(1680), float64]) */;
  %719 = cast(%var_12024, dtype="float32") /* ty=Tensor[(448, 2), float32] */;
  %720 = cast(%var_12025, dtype="float64") /* ty=Tensor[(1680), float64] */;
  %721 = reshape(%720, newshape=[16, 15, 7]) /* ty=Tensor[(16, 15, 7), float64] */;
  %722 = cast(%var_12023, dtype="uint8") /* ty=Tensor[(96), uint8] */;
  %723 = cast(%var_12024, dtype="int8") /* ty=Tensor[(448, 2), int8] */;
  %724 = cast(%var_12025, dtype="float64") /* ty=Tensor[(1680), float64] */;
  %725 = cast(meta[relay.Constant][59] /* ty=uint64 */, dtype="uint64") /* ty=uint64 */;
  %726 = reshape(%722, newshape=[96]) /* ty=Tensor[(96), uint8] */;
  %727 = reshape(%723, newshape=[896]) /* ty=Tensor[(896), int8] */;
  %728 = reshape(%724, newshape=[1680, 1]) /* ty=Tensor[(1680, 1), float64] */;
  %729 = reshape(%725, newshape=[]) /* ty=uint64 */;
  %730 = @func_12005(%726, %727, %728, %729) /* ty=(Tensor[(?, 8, 12), bool], Tensor[(96), uint8], Tensor[(16, 15, 7), float64], Tensor[(896), int8], Tensor[(1680, 1), float64], Tensor[(6, 3, 7), uint64], Tensor[(8, 13, 126), float32], Tensor[(8, 13, 126), bool], Tensor[(5, 3, 15), float64], uint64, Tensor[(225, 1), uint64], Tensor[(390), float64]) */;
  %731 = %730.8;
  %732 = cast(%731, dtype="int64") /* ty=Tensor[(5, 3, 15), int64] */;
  %733 = cast(meta[relay.Constant][59] /* ty=uint64 */, dtype="int64") /* ty=int64 */;
  %734 = @func_11690() /* ty=Tensor[(8, 13, 1), float64] */;
  %735 = %718.2;
  %736 = sqrt(%719) /* ty=Tensor[(448, 2), float32] */;
  %737 = @func_924(%721) /* ty=Tensor[(16, 15, 7), float64] */;
  %738 = right_shift(%732, %733) /* ty=Tensor[(5, 3, 15), int64] */;
  (%734, %var_12023, %var_12025, %735, %736, %737, %738)
}

def @func_14892() -> (Tensor[(8, 13, 9), int8], Tensor[(30), bool]) {
  %739 = @func_14484() /* ty=(Tensor[(8, 16, 16), uint8], Tensor[(256, 8), uint8], Tensor[(8, 13, 9), int8]) */;
  %740 = @func_12609() /* ty=(Tensor[(120), int8], Tensor[(14, 5, 6), float32], Tensor[(30), bool], Tensor[(420), bool]) */;
  %741 = %739.2;
  %742 = %740.2;
  (%741, %742)
}

def @main(%var_14972: Tensor[(14, 5, 6), float32]) -> (Tensor[(14, 5, 6), uint64],) {
  %743 = @func_12609() /* ty=(Tensor[(120), int8], Tensor[(14, 5, 6), float32], Tensor[(30), bool], Tensor[(420), bool]) */;
  %744 = %743.1;
  %745 = cast(%var_14972, dtype="uint64") /* ty=Tensor[(14, 5, 6), uint64] */;
  %746 = shape_of(%744, dtype="int32") /* ty=Tensor[(3), int32] */;
  %747 = cast(%744, dtype="uint64") /* ty=Tensor[(14, 5, 6), uint64] */;
  %748 = dyn.reshape(%745, %746, newshape=[]) /* ty=Tensor[(?, ?, ?), uint64] */;
  %749 = logical_xor(%747, %748) /* ty=Tensor[(14, 5, 6), uint64] */;
  (%749,)
}

def @func_7984(%var_7975: Tensor[(6, 3, 7), float64]) -> Tensor[(6, 3, 7), uint64] {
  %750 = cast(%var_7975, dtype="float64") /* ty=Tensor[(6, 3, 7), float64] */;
  %751 = log(%750) /* ty=Tensor[(6, 3, 7), float64] */;
  %752 = cast(%751, dtype="uint64") /* ty=Tensor[(6, 3, 7), uint64] */;
  %753 = shape_of(%var_7975, dtype="int32") /* ty=Tensor[(3), int32] */;
  %754 = cast(%var_7975, dtype="uint64") /* ty=Tensor[(6, 3, 7), uint64] */;
  %755 = dyn.reshape(%752, %753, newshape=[]) /* ty=Tensor[(?, ?, ?), uint64] */;
  bitwise_and(%754, %755) /* ty=Tensor[(6, 3, 7), uint64] */
}

def @func_14212() -> (Tensor[(6, 3, 7), uint64], Tensor[(8, 13, 1), float64]) {
  %756 = @func_13478() /* ty=(Tensor[(8, 13, 84), uint32], Tensor[(8, 13, 1), float64], Tensor[(1, 1560), int8], Tensor[(420, 4), uint16], Tensor[(6, 3, 7), uint64], Tensor[(126), float64], Tensor[(420, 4), float64], Tensor[(12, 5, 10), float32], Tensor[(600), float64]) */;
  %757 = @func_11553() /* ty=(Tensor[(8, 13, 1), float64],) */;
  %758 = %756.4;
  %759 = %757.0;
  (%758, %759)
}

def @func_13339() -> (Tensor[(8, 13, 1), float64], Tensor[(30), bool], Tensor[(540), float32], Tensor[(80), float64]) {
  %760 = @func_12409() /* ty=(Tensor[(8, 13, 1), float64], Tensor[(56, 22), int64], Tensor[(1024), float64], Tensor[(120), int8], Tensor[(1, 1560), int8], int64, Tensor[(1232), int64]) */;
  %761 = cast(meta[relay.Constant][60] /* ty=Tensor[(540), float32] */, dtype="float32") /* ty=Tensor[(540), float32] */;
  %762 = cast(meta[relay.Constant][61] /* ty=Tensor[(80), float64] */, dtype="float64") /* ty=Tensor[(80), float64] */;
  %763 = reshape(%761, newshape=[6, 15, 6]) /* ty=Tensor[(6, 15, 6), float32] */;
  %764 = reshape(%762, newshape=[80]) /* ty=Tensor[(80), float64] */;
  %765 = @func_7063(%763, %764) /* ty=(Tensor[(6, 15, 6), float32], Tensor[(6, 15, 6), float64], Tensor[(8, 16, 16), uint8], Tensor[(80), float64], Tensor[(1232), int64], Tensor[(30), bool], Tensor[(420), bool], Tensor[(600), float64], Tensor[(70), uint32], Tensor[(700), uint32]) */;
  %766 = %760.0;
  %767 = %765.5;
  (%766, %767, meta[relay.Constant][60] /* ty=Tensor[(540), float32] */, meta[relay.Constant][61] /* ty=Tensor[(80), float64] */)
}

def @func_5129(%var_5067: Tensor[(4, 10, 2), float64], %var_5081: Tensor[(1232), int64], %var_5101: Tensor[(30), bool], %var_5102: Tensor[(70, 6), bool]) -> (Tensor[(4, 10, 2), float64], Tensor[(1560), int8], int64, Tensor[(1232), int64], Tensor[(1, 84), int8], Tensor[(14, 5, 6), bool], Tensor[(30), bool], Tensor[(70, 6), bool], Tensor[(8, 16, 16), uint8], Tensor[(1, 2048), uint8], Tensor[(60, 2), bool]) {
  %768 = cast(%var_5067, dtype="float64") /* ty=Tensor[(4, 10, 2), float64] */;
  %769 = cast(%var_5101, dtype="bool") /* ty=Tensor[(30), bool] */;
  %770 = cast(%var_5102, dtype="bool") /* ty=Tensor[(70, 6), bool] */;
  %771 = reshape(%769, newshape=[1, 5, 6]) /* ty=Tensor[(1, 5, 6), bool] */;
  %772 = reshape(%770, newshape=[14, 5, 6]) /* ty=Tensor[(14, 5, 6), bool] */;
  %773 = @func_2137(%771, %772) /* ty=(Tensor[(14, 5, 6), bool], Tensor[(14, 5, 6), float32]) */;
  %774 = cast(meta[relay.Constant][64] /* ty=Tensor[(1, 2048), uint8] */, dtype="uint8") /* ty=Tensor[(1, 2048), uint8] */;
  %775 = cast(meta[relay.Constant][64] /* ty=Tensor[(1, 2048), uint8] */, dtype="uint8") /* ty=Tensor[(1, 2048), uint8] */;
  %776 = reshape(%774, newshape=[8, 16, 16]) /* ty=Tensor[(8, 16, 16), uint8] */;
  %777 = reshape(%775, newshape=[8, 16, 16]) /* ty=Tensor[(8, 16, 16), uint8] */;
  %778 = @func_1916(%776, %777) /* ty=(Tensor[(8, 16, 16), uint8],) */;
  %779 = cast(meta[relay.Constant][65] /* ty=Tensor[(60, 2), int8] */, dtype="int8") /* ty=Tensor[(60, 2), int8] */;
  %780 = cast(meta[relay.Constant][62] /* ty=Tensor[(1560), int8] */, dtype="int8") /* ty=Tensor[(1560), int8] */;
  %781 = cast(-10 /* ty=int64 */, dtype="int64") /* ty=int64 */;
  %782 = cast(%var_5081, dtype="int64") /* ty=Tensor[(1232), int64] */;
  %783 = cast(meta[relay.Constant][63] /* ty=Tensor[(1, 84), int8] */, dtype="int8") /* ty=Tensor[(1, 84), int8] */;
  %784 = reshape(%779, newshape=[10, 12, 1]) /* ty=Tensor[(10, 12, 1), int8] */;
  %785 = reshape(%780, newshape=[10, 12, 13]) /* ty=Tensor[(10, 12, 13), int8] */;
  %786 = reshape(%781, newshape=[]) /* ty=int64 */;
  %787 = reshape(%782, newshape=[1232]) /* ty=Tensor[(1232), int64] */;
  %788 = reshape(%783, newshape=[84]) /* ty=Tensor[(84), int8] */;
  %789 = @func_4093(%784, %785, %786, %787, %788) /* ty=(Tensor[(10, 12, 13), int8], Tensor[(11, 8, 14), int64], int64, Tensor[(1232), int64], Tensor[(84), int8], Tensor[(14, 5, 6), bool], Tensor[(10, 3), bool], Tensor[(420), bool], Tensor[(4, 7, 3), int8]) */;
  %790 = %789.2;
  %791 = cast(meta[relay.Constant][65] /* ty=Tensor[(60, 2), int8] */, dtype="bool") /* ty=Tensor[(60, 2), bool] */;
  %792 = cast(%790, dtype="bool") /* ty=bool */;
  %793 = tan(%768) /* ty=Tensor[(4, 10, 2), float64] */;
  %794 = %773.0;
  %795 = %778.0;
  %796 = greater_equal(%791, %792) /* ty=Tensor[(60, 2), bool] */;
  (%793, meta[relay.Constant][62] /* ty=Tensor[(1560), int8] */, -10 /* ty=int64 */, %var_5081, meta[relay.Constant][63] /* ty=Tensor[(1, 84), int8] */, %794, %var_5101, %var_5102, %795, meta[relay.Constant][64] /* ty=Tensor[(1, 2048), uint8] */, %796)
}

def @func_12996(%var_12963: Tensor[(1232), int64], %var_12964: Tensor[(600), float64], %var_12965: Tensor[(1680), float64]) -> (Tensor[(1, 1560), int8], Tensor[(1024), float64], Tensor[(585), int64], Tensor[(32, 32), float64], Tensor[(1232), int64], Tensor[(600), float64], Tensor[(1680), float64], Tensor[(80), float64], Tensor[(30), bool], Tensor[(420), bool], Tensor[(1560), bool]) {
  %797 = @func_12409() /* ty=(Tensor[(8, 13, 1), float64], Tensor[(56, 22), int64], Tensor[(1024), float64], Tensor[(120), int8], Tensor[(1, 1560), int8], int64, Tensor[(1232), int64]) */;
  %798 = cast(10 /* ty=int64 */, dtype="int64") /* ty=int64 */;
  %799 = cast(meta[relay.Constant][66] /* ty=Tensor[(585), int64] */, dtype="int64") /* ty=Tensor[(585), int64] */;
  %800 = cast(meta[relay.Constant][67] /* ty=Tensor[(32, 32), float64] */, dtype="float64") /* ty=Tensor[(32, 32), float64] */;
  %801 = cast(%var_12963, dtype="int64") /* ty=Tensor[(1232), int64] */;
  %802 = cast(%var_12964, dtype="float64") /* ty=Tensor[(600), float64] */;
  %803 = cast(%var_12965, dtype="float64") /* ty=Tensor[(1680), float64] */;
  %804 = reshape(%798, newshape=[]) /* ty=int64 */;
  %805 = reshape(%799, newshape=[3, 15, 13]) /* ty=Tensor[(3, 15, 13), int64] */;
  %806 = reshape(%800, newshape=[1024]) /* ty=Tensor[(1024), float64] */;
  %807 = reshape(%801, newshape=[1, 1232]) /* ty=Tensor[(1, 1232), int64] */;
  %808 = reshape(%802, newshape=[600]) /* ty=Tensor[(600), float64] */;
  %809 = reshape(%803, newshape=[1680]) /* ty=Tensor[(1680), float64] */;
  %810 = @func_10257(%804, %805, %806, %807, %808, %809) /* ty=(Tensor[(3, 15, 13), int64], Tensor[(84), int8], Tensor[(1024), float64], Tensor[(120), int8], Tensor[(1560), int8], Tensor[(1, 1232), int64], Tensor[(1248), float64], Tensor[(600), float64], Tensor[(5, 42), float64], Tensor[(1680), float32]) */;
  %811 = cast(meta[relay.Constant][68] /* ty=Tensor[(80), float64] */, dtype="float64") /* ty=Tensor[(80), float64] */;
  %812 = cast(%var_12963, dtype="int64") /* ty=Tensor[(1232), int64] */;
  %813 = cast(meta[relay.Constant][69] /* ty=Tensor[(30), bool] */, dtype="bool") /* ty=Tensor[(30), bool] */;
  %814 = cast(meta[relay.Constant][70] /* ty=Tensor[(420), bool] */, dtype="bool") /* ty=Tensor[(420), bool] */;
  %815 = reshape(%811, newshape=[4, 10, 2]) /* ty=Tensor[(4, 10, 2), float64] */;
  %816 = reshape(%812, newshape=[1232]) /* ty=Tensor[(1232), int64] */;
  %817 = reshape(%813, newshape=[30]) /* ty=Tensor[(30), bool] */;
  %818 = reshape(%814, newshape=[70, 6]) /* ty=Tensor[(70, 6), bool] */;
  %819 = @func_5129(%815, %816, %817, %818) /* ty=(Tensor[(4, 10, 2), float64], Tensor[(1560), int8], int64, Tensor[(1232), int64], Tensor[(1, 84), int8], Tensor[(14, 5, 6), bool], Tensor[(30), bool], Tensor[(70, 6), bool], Tensor[(8, 16, 16), uint8], Tensor[(1, 2048), uint8], Tensor[(60, 2), bool]) */;
  %820 = %819.1;
  %821 = cast(%820, dtype="bool") /* ty=Tensor[(1560), bool] */;
  %822 = cast(10 /* ty=int64 */, dtype="bool") /* ty=bool */;
  %823 = %797.4;
  %824 = %810.2;
  %825 = less(%821, %822) /* ty=Tensor[(1560), bool] */;
  (%823, %824, meta[relay.Constant][66] /* ty=Tensor[(585), int64] */, meta[relay.Constant][67] /* ty=Tensor[(32, 32), float64] */, %var_12963, %var_12964, %var_12965, meta[relay.Constant][68] /* ty=Tensor[(80), float64] */, meta[relay.Constant][69] /* ty=Tensor[(30), bool] */, meta[relay.Constant][70] /* ty=Tensor[(420), bool] */, %825)
}

def @func_2851(%var_2827: int64, %var_2828: Tensor[(11, 8, 14), int64], %var_2839: Tensor[(84), int8]) -> (Tensor[(11, 8, 14), int64], Tensor[(4, 7, 3), int8], Tensor[(84), int8]) {
  %826 = cast(%var_2827, dtype="int64") /* ty=int64 */;
  %827 = cast(%var_2828, dtype="int64") /* ty=Tensor[(11, 8, 14), int64] */;
  %828 = cast(%var_2839, dtype="int8") /* ty=Tensor[(84), int8] */;
  %829 = cast(%var_2839, dtype="int8") /* ty=Tensor[(84), int8] */;
  %830 = reshape(%828, newshape=[4, 7, 3]) /* ty=Tensor[(4, 7, 3), int8] */;
  %831 = reshape(%829, newshape=[4, 7, 3]) /* ty=Tensor[(4, 7, 3), int8] */;
  %832 = @func_809(%830, %831) /* ty=(Tensor[(4, 7, 3), int8],) */;
  %833 = bitwise_and(%826, %827) /* ty=Tensor[(11, 8, 14), int64] */;
  %834 = %832.0;
  (%833, %834, %var_2839)
}

def @func_8937(%var_8894: Tensor[(4, 14, 16), int8], %var_8895: Tensor[(4, 14, 16), int8], %var_8918: Tensor[(1680), float64]) -> (Tensor[(4, 14, 16), int8], Tensor[(16, 15, 7), float64], Tensor[(1680), float64]) {
  %835 = cast(%var_8895, dtype="int8") /* ty=Tensor[(4, 14, 16), int8] */;
  %836 = shape_of(%var_8894, dtype="int32") /* ty=Tensor[(3), int32] */;
  %837 = cast(%var_8894, dtype="int8") /* ty=Tensor[(4, 14, 16), int8] */;
  %838 = dyn.reshape(%835, %836, newshape=[]) /* ty=Tensor[(?, ?, ?), int8] */;
  %839 = cast(%var_8918, dtype="float64") /* ty=Tensor[(1680), float64] */;
  %840 = reshape(%839, newshape=[16, 15, 7]) /* ty=Tensor[(16, 15, 7), float64] */;
  %841 = bitwise_and(%837, %838) /* ty=Tensor[(4, 14, 16), int8] */;
  %842 = @func_924(%840) /* ty=Tensor[(16, 15, 7), float64] */;
  (%841, %842, %var_8918)
}

def @func_809(%var_804: Tensor[(4, 7, 3), int8], %var_805: Tensor[(4, 7, 3), int8]) -> (Tensor[(4, 7, 3), int8],) {
  %843 = cast(%var_805, dtype="int8") /* ty=Tensor[(4, 7, 3), int8] */;
  %844 = shape_of(%var_804, dtype="int32") /* ty=Tensor[(3), int32] */;
  %845 = cast(%var_804, dtype="int8") /* ty=Tensor[(4, 7, 3), int8] */;
  %846 = dyn.reshape(%843, %844, newshape=[]) /* ty=Tensor[(?, ?, ?), int8] */;
  %847 = left_shift(%845, %846) /* ty=Tensor[(4, 7, 3), int8] */;
  (%847,)
}

def @func_11728(%var_11712: Tensor[(1, 195), float32]) -> (Tensor[(16, 15, 6), float32], Tensor[(1440), float32], Tensor[(1, 195), float32], uint64, Tensor[(225, 1), uint64], Tensor[(8, 13, 390), int16]) {
  %848 = cast(meta[relay.Constant][71] /* ty=Tensor[(1440), float32] */, dtype="float32") /* ty=Tensor[(1440), float32] */;
  %849 = reshape(%848, newshape=[16, 15, 6]) /* ty=Tensor[(16, 15, 6), float32] */;
  %850 = @func_10464(%849) /* ty=(Tensor[(16, 15, 6), float32],) */;
  %851 = cast(%var_11712, dtype="float32") /* ty=Tensor[(1, 195), float32] */;
  %852 = cast(meta[relay.Constant][72] /* ty=uint64 */, dtype="uint64") /* ty=uint64 */;
  %853 = cast(meta[relay.Constant][73] /* ty=Tensor[(225, 1), uint64] */, dtype="uint64") /* ty=Tensor[(225, 1), uint64] */;
  %854 = reshape(%851, newshape=[13, 15, 1]) /* ty=Tensor[(13, 15, 1), float32] */;
  %855 = reshape(%852, newshape=[]) /* ty=uint64 */;
  %856 = reshape(%853, newshape=[25, 9]) /* ty=Tensor[(25, 9), uint64] */;
  %857 = @func_6923(%854, %855, %856) /* ty=(uint64, Tensor[(25, 9), uint64], Tensor[(390), float64], Tensor[(13, 15, 390), int32]) */;
  %858 = %857.2;
  %859 = @func_11553() /* ty=(Tensor[(8, 13, 1), float64],) */;
  %860 = %859.0;
  %861 = cast(%858, dtype="int16") /* ty=Tensor[(390), int16] */;
  %862 = cast(%860, dtype="int16") /* ty=Tensor[(8, 13, 1), int16] */;
  %863 = %850.0;
  %864 = bitwise_and(%861, %862) /* ty=Tensor[(8, 13, 390), int16] */;
  (%863, meta[relay.Constant][71] /* ty=Tensor[(1440), float32] */, %var_11712, meta[relay.Constant][72] /* ty=uint64 */, meta[relay.Constant][73] /* ty=Tensor[(225, 1), uint64] */, %864)
}

def @func_12409() -> (Tensor[(8, 13, 1), float64], Tensor[(56, 22), int64], Tensor[(1024), float64], Tensor[(120), int8], Tensor[(1, 1560), int8], int64, Tensor[(1232), int64]) {
  %865 = cast(meta[relay.Constant][74] /* ty=Tensor[(1024), float64] */, dtype="float64") /* ty=Tensor[(1024), float64] */;
  %866 = cast(meta[relay.Constant][75] /* ty=Tensor[(120), int8] */, dtype="int8") /* ty=Tensor[(120), int8] */;
  %867 = cast(meta[relay.Constant][76] /* ty=Tensor[(1, 1560), int8] */, dtype="int8") /* ty=Tensor[(1, 1560), int8] */;
  %868 = cast(4 /* ty=int64 */, dtype="int64") /* ty=int64 */;
  %869 = cast(meta[relay.Constant][77] /* ty=Tensor[(1232), int64] */, dtype="int64") /* ty=Tensor[(1232), int64] */;
  %870 = cast(meta[relay.Constant][74] /* ty=Tensor[(1024), float64] */, dtype="float64") /* ty=Tensor[(1024), float64] */;
  %871 = reshape(%865, newshape=[8, 8, 16]) /* ty=Tensor[(8, 8, 16), float64] */;
  %872 = reshape(%866, newshape=[120]) /* ty=Tensor[(120), int8] */;
  %873 = reshape(%867, newshape=[6, 260]) /* ty=Tensor[(6, 260), int8] */;
  %874 = reshape(%868, newshape=[]) /* ty=int64 */;
  %875 = reshape(%869, newshape=[56, 22]) /* ty=Tensor[(56, 22), int64] */;
  %876 = reshape(%870, newshape=[8, 8, 16]) /* ty=Tensor[(8, 8, 16), float64] */;
  %877 = @func_6688(%871, %872, %873, %874, %875, %876) /* ty=(Tensor[(4, 7, 3), int8], Tensor[(120), int8], Tensor[(6, 260), int8], int64, Tensor[(56, 22), int64], Tensor[(84), int8], Tensor[(8, 8, 16), bool], Tensor[(8, 8, 16), uint64]) */;
  %878 = @func_11514() /* ty=Tensor[(8, 13, 1), float64] */;
  %879 = %877.4;
  (%878, %879, meta[relay.Constant][74] /* ty=Tensor[(1024), float64] */, meta[relay.Constant][75] /* ty=Tensor[(120), int8] */, meta[relay.Constant][76] /* ty=Tensor[(1, 1560), int8] */, 4 /* ty=int64 */, meta[relay.Constant][77] /* ty=Tensor[(1232), int64] */)
}

def @func_12886(%var_12849: int32, %var_12851: Tensor[(80), float64], %var_12857: Tensor[(195), float32]) -> (int32, Tensor[(12, 50), float32], int32, Tensor[(5, 6), bool], Tensor[(80), float64], Tensor[(1232), int64], Tensor[(1440), float32], Tensor[(195), float32], Tensor[(195, 2), int64]) {
  %880 = cast(meta[relay.Constant][78] /* ty=Tensor[(12, 50), float32] */, dtype="float32") /* ty=Tensor[(12, 50), float32] */;
  %881 = cast(%var_12849, dtype="int32") /* ty=int32 */;
  %882 = cast(meta[relay.Constant][79] /* ty=Tensor[(5, 6), bool] */, dtype="bool") /* ty=Tensor[(5, 6), bool] */;
  %883 = cast(%var_12851, dtype="float64") /* ty=Tensor[(80), float64] */;
  %884 = cast(meta[relay.Constant][80] /* ty=Tensor[(1232), int64] */, dtype="int64") /* ty=Tensor[(1232), int64] */;
  %885 = reshape(%880, newshape=[5, 15, 8]) /* ty=Tensor[(5, 15, 8), float32] */;
  %886 = reshape(%881, newshape=[]) /* ty=int32 */;
  %887 = reshape(%882, newshape=[30]) /* ty=Tensor[(30), bool] */;
  %888 = reshape(%883, newshape=[80]) /* ty=Tensor[(80), float64] */;
  %889 = reshape(%884, newshape=[1232]) /* ty=Tensor[(1232), int64] */;
  %890 = @func_10128(%885, %886, %887, %888, %889) /* ty=(Tensor[(5, 15, 8), float32], Tensor[(1680), float64], int32, Tensor[(84), int8], Tensor[(30), bool], Tensor[(80), float64], Tensor[(1232), int64]) */;
  %891 = cast(%var_12857, dtype="float32") /* ty=Tensor[(195), float32] */;
  %892 = reshape(%891, newshape=[1, 195]) /* ty=Tensor[(1, 195), float32] */;
  %893 = @func_11728(%892) /* ty=(Tensor[(16, 15, 6), float32], Tensor[(1440), float32], Tensor[(1, 195), float32], uint64, Tensor[(225, 1), uint64], Tensor[(8, 13, 390), int16]) */;
  %894 = @func_12746() /* ty=(Tensor[(8, 13, 1), float64], Tensor[(6, 13, 5), float64], Tensor[(195, 2), float64]) */;
  %895 = %894.2;
  %896 = cast(%895, dtype="float64") /* ty=Tensor[(195, 2), float64] */;
  %897 = sinh(%896) /* ty=Tensor[(195, 2), float64] */;
  %898 = cast(%897, dtype="float64") /* ty=Tensor[(195, 2), float64] */;
  %899 = rsqrt(%898) /* ty=Tensor[(195, 2), float64] */;
  %900 = cast(%895, dtype="int64") /* ty=Tensor[(195, 2), int64] */;
  %901 = shape_of(%899, dtype="int32") /* ty=Tensor[(2), int32] */;
  %902 = cast(%899, dtype="int64") /* ty=Tensor[(195, 2), int64] */;
  %903 = dyn.reshape(%900, %901, newshape=[]) /* ty=Tensor[(?, ?), int64] */;
  %904 = %890.2;
  %905 = %893.1;
  %906 = subtract(%902, %903) /* ty=Tensor[(195, 2), int64] */;
  (%904, meta[relay.Constant][78] /* ty=Tensor[(12, 50), float32] */, %var_12849, meta[relay.Constant][79] /* ty=Tensor[(5, 6), bool] */, %var_12851, meta[relay.Constant][80] /* ty=Tensor[(1232), int64] */, %905, %var_12857, %906)
}

def @func_1916(%var_1904: Tensor[(8, 16, 16), uint8], %var_1905: Tensor[(8, 16, 16), uint8]) -> (Tensor[(8, 16, 16), uint8],) {
  %907 = cast(%var_1905, dtype="uint8") /* ty=Tensor[(8, 16, 16), uint8] */;
  %908 = shape_of(%var_1904, dtype="int32") /* ty=Tensor[(3), int32] */;
  %909 = cast(%var_1904, dtype="uint8") /* ty=Tensor[(8, 16, 16), uint8] */;
  %910 = dyn.reshape(%907, %908, newshape=[]) /* ty=Tensor[(?, ?, ?), uint8] */;
  %911 = minimum(%909, %910) /* ty=Tensor[(8, 16, 16), uint8] */;
  (%911,)
}

def @func_7512(%var_7507: Tensor[(12, 11, 9), int64], %var_7508: Tensor[(12, 11, 9), int64]) -> (Tensor[(12, 11, 9), int64],) {
  %912 = cast(%var_7508, dtype="int64") /* ty=Tensor[(12, 11, 9), int64] */;
  %913 = shape_of(%var_7507, dtype="int32") /* ty=Tensor[(3), int32] */;
  %914 = cast(%var_7507, dtype="int64") /* ty=Tensor[(12, 11, 9), int64] */;
  %915 = dyn.reshape(%912, %913, newshape=[]) /* ty=Tensor[(?, ?, ?), int64] */;
  %916 = bitwise_and(%914, %915) /* ty=Tensor[(12, 11, 9), int64] */;
  (%916,)
}

def @func_12333(%var_12315: Tensor[(1248), float64], %var_12317: int32, %var_12318: Tensor[(84), int8], %var_12319: Tensor[(30, 1), bool], %var_12323: Tensor[(14, 9, 8), int32]) -> (Tensor[(8, 13, 1), float64], Tensor[(1, 80), float32], Tensor[(1248), float64], Tensor[(126), float64], Tensor[(84), int8], Tensor[(30, 1), bool], Tensor[(14, 9, 8), uint8], Tensor[(8, 13, 1), float64]) {
  %917 = cast(%var_12315, dtype="float64") /* ty=Tensor[(1248), float64] */;
  %918 = cast(meta[relay.Constant][81] /* ty=Tensor[(126), float64] */, dtype="float64") /* ty=Tensor[(126), float64] */;
  %919 = cast(%var_12317, dtype="int32") /* ty=int32 */;
  %920 = cast(%var_12318, dtype="int8") /* ty=Tensor[(84), int8] */;
  %921 = cast(%var_12319, dtype="bool") /* ty=Tensor[(30, 1), bool] */;
  %922 = reshape(%917, newshape=[8, 13, 12]) /* ty=Tensor[(8, 13, 12), float64] */;
  %923 = reshape(%918, newshape=[126]) /* ty=Tensor[(126), float64] */;
  %924 = reshape(%919, newshape=[]) /* ty=int32 */;
  %925 = reshape(%920, newshape=[84]) /* ty=Tensor[(84), int8] */;
  %926 = reshape(%921, newshape=[30]) /* ty=Tensor[(30), bool] */;
  %927 = @func_11847(%922, %923, %924, %925, %926) /* ty=(Tensor[(8, 13, 12), uint64], Tensor[(6, 3, 7), uint64], Tensor[(126), float64], int64, int32, Tensor[(84), int8], Tensor[(30), bool], Tensor[(1232), int64], Tensor[(1, 80), float32]) */;
  %928 = cast(%var_12317, dtype="uint8") /* ty=uint8 */;
  %929 = cast(%var_12323, dtype="uint8") /* ty=Tensor[(14, 9, 8), uint8] */;
  %930 = @func_11514() /* ty=Tensor[(8, 13, 1), float64] */;
  %931 = %927.8;
  %932 = add(%928, %929) /* ty=Tensor[(14, 9, 8), uint8] */;
  %933 = @func_11514() /* ty=Tensor[(8, 13, 1), float64] */;
  (%930, %931, %var_12315, meta[relay.Constant][81] /* ty=Tensor[(126), float64] */, %var_12318, %var_12319, %932, %933)
}

def @func_4093(%var_4045: Tensor[(10, 12, 1), int8], %var_4046: Tensor[(10, 12, 13), int8], %var_4051: int64, %var_4052: Tensor[(1232), int64], %var_4053: Tensor[(84), int8]) -> (Tensor[(10, 12, 13), int8], Tensor[(11, 8, 14), int64], int64, Tensor[(1232), int64], Tensor[(84), int8], Tensor[(14, 5, 6), bool], Tensor[(10, 3), bool], Tensor[(420), bool], Tensor[(4, 7, 3), int8]) {
  %934 = cast(%var_4045, dtype="int8") /* ty=Tensor[(10, 12, 1), int8] */;
  %935 = cast(%var_4046, dtype="int8") /* ty=Tensor[(10, 12, 13), int8] */;
  %936 = cast(%var_4051, dtype="int64") /* ty=int64 */;
  %937 = cast(%var_4052, dtype="int64") /* ty=Tensor[(1232), int64] */;
  %938 = cast(%var_4053, dtype="int8") /* ty=Tensor[(84), int8] */;
  %939 = reshape(%936, newshape=[]) /* ty=int64 */;
  %940 = reshape(%937, newshape=[11, 8, 14]) /* ty=Tensor[(11, 8, 14), int64] */;
  %941 = reshape(%938, newshape=[84]) /* ty=Tensor[(84), int8] */;
  %942 = @func_2851(%939, %940, %941) /* ty=(Tensor[(11, 8, 14), int64], Tensor[(4, 7, 3), int8], Tensor[(84), int8]) */;
  %943 = cast(meta[relay.Constant][82] /* ty=Tensor[(10, 3), bool] */, dtype="bool") /* ty=Tensor[(10, 3), bool] */;
  %944 = cast(meta[relay.Constant][83] /* ty=Tensor[(420), bool] */, dtype="bool") /* ty=Tensor[(420), bool] */;
  %945 = reshape(%943, newshape=[1, 5, 6]) /* ty=Tensor[(1, 5, 6), bool] */;
  %946 = reshape(%944, newshape=[14, 5, 6]) /* ty=Tensor[(14, 5, 6), bool] */;
  %947 = @func_2137(%945, %946) /* ty=(Tensor[(14, 5, 6), bool], Tensor[(14, 5, 6), float32]) */;
  %948 = cast(%var_4053, dtype="int8") /* ty=Tensor[(84), int8] */;
  %949 = cast(%var_4053, dtype="int8") /* ty=Tensor[(84), int8] */;
  %950 = reshape(%948, newshape=[4, 7, 3]) /* ty=Tensor[(4, 7, 3), int8] */;
  %951 = reshape(%949, newshape=[4, 7, 3]) /* ty=Tensor[(4, 7, 3), int8] */;
  %952 = @func_809(%950, %951) /* ty=(Tensor[(4, 7, 3), int8],) */;
  %953 = left_shift(%934, %935) /* ty=Tensor[(10, 12, 13), int8] */;
  %954 = %942.0;
  %955 = %947.0;
  %956 = %952.0;
  (%953, %954, %var_4051, %var_4052, %var_4053, %955, meta[relay.Constant][82] /* ty=Tensor[(10, 3), bool] */, meta[relay.Constant][83] /* ty=Tensor[(420), bool] */, %956)
}

def @func_7362(%var_7351: Tensor[(8, 14, 13), float32], %var_7357: Tensor[(225), uint64]) -> (Tensor[(8, 14, 13), float32], uint64, Tensor[(195), float32], uint64, Tensor[(225), uint64]) {
  %957 = cast(%var_7351, dtype="float32") /* ty=Tensor[(8, 14, 13), float32] */;
  %958 = cast(meta[relay.Constant][84] /* ty=Tensor[(195), float32] */, dtype="float32") /* ty=Tensor[(195), float32] */;
  %959 = cast(meta[relay.Constant][85] /* ty=uint64 */, dtype="uint64") /* ty=uint64 */;
  %960 = cast(%var_7357, dtype="uint64") /* ty=Tensor[(225), uint64] */;
  %961 = reshape(%958, newshape=[13, 15, 1]) /* ty=Tensor[(13, 15, 1), float32] */;
  %962 = reshape(%959, newshape=[]) /* ty=uint64 */;
  %963 = reshape(%960, newshape=[25, 9]) /* ty=Tensor[(25, 9), uint64] */;
  %964 = @func_6923(%961, %962, %963) /* ty=(uint64, Tensor[(25, 9), uint64], Tensor[(390), float64], Tensor[(13, 15, 390), int32]) */;
  %965 = acosh(%957) /* ty=Tensor[(8, 14, 13), float32] */;
  %966 = %964.0;
  (%965, %966, meta[relay.Constant][84] /* ty=Tensor[(195), float32] */, meta[relay.Constant][85] /* ty=uint64 */, %var_7357)
}

def @func_14423(%var_14404: Tensor[(390), float64]) -> (Tensor[(420, 4), float64], Tensor[(10, 1560), bool], Tensor[(15600), int8], Tensor[(6, 13, 5), float64], Tensor[(390), float64]) {
  %967 = cast(meta[relay.Constant][86] /* ty=Tensor[(15600), int8] */, dtype="int8") /* ty=Tensor[(15600), int8] */;
  %968 = reshape(%967, newshape=[10, 1560]) /* ty=Tensor[(10, 1560), int8] */;
  %969 = cast(%var_14404, dtype="float64") /* ty=Tensor[(390), float64] */;
  %970 = reshape(%969, newshape=[6, 13, 5]) /* ty=Tensor[(6, 13, 5), float64] */;
  %971 = @func_278(%970) /* ty=(Tensor[(6, 13, 5), float64],) */;
  %972 = @func_14369() /* ty=Tensor[(420, 4), float64] */;
  %973 = @func_13140(%968) /* ty=Tensor[(10, 1560), bool] */;
  %974 = %971.0;
  (%972, %973, meta[relay.Constant][86] /* ty=Tensor[(15600), int8] */, %974, %var_14404)
}

/* For debugging purposes the metadata section has been omitted.
 * If you would like to see the full metadata section you can set the 
 * option to `True` when invoking `astext`. 
 */
===================================
==========mutated_mod==========
#[version = "0.0.5"]
def @func_14152() -> (Tensor[(8, 13, 1), float64], Tensor[(80), float64]) {
  @func_14150() /* ty=(Tensor[(8, 13, 1), float64], Tensor[(80), float64]) */
}

def @func_14433() -> Tensor[(8, 13, 1), float64] {
  @func_14431() /* ty=Tensor[(8, 13, 1), float64] */
}

def @func_12072(%var_12069: Tensor[(96), uint8], %var_12070: Tensor[(448, 2), int8], %var_12071: Tensor[(1680), float64]) -> (Tensor[(8, 13, 1), float64], Tensor[(96), uint8], Tensor[(1680), float64], Tensor[(1680), float64], Tensor[(448, 2), float32], Tensor[(16, 15, 7), float64], Tensor[(5, 3, 15), int64]) {
  @func_12067(%var_12069, %var_12070, %var_12071) /* ty=(Tensor[(8, 13, 1), float64], Tensor[(96), uint8], Tensor[(1680), float64], Tensor[(1680), float64], Tensor[(448, 2), float32], Tensor[(16, 15, 7), float64], Tensor[(5, 3, 15), int64]) */
}

def @func_13776(%var_13756: Tensor[(70), uint32], %var_13757: Tensor[(700, 1), uint32]) -> (Tensor[(8, 13, 1), float32], Tensor[(600), float64], Tensor[(70), uint32], Tensor[(700, 1), uint32], Tensor[(2048), uint8]) {
  %0 = @func_12638() /* ty=(Tensor[(8, 13, 1), float32],) */;
  %1 = cast(%var_13756, dtype="uint32") /* ty=Tensor[(70), uint32] */;
  %2 = cast(%var_13757, dtype="uint32") /* ty=Tensor[(700, 1), uint32] */;
  %3 = cast(meta[relay.Constant][0] /* ty=Tensor[(2048), uint8] */, dtype="uint8") /* ty=Tensor[(2048), uint8] */;
  %4 = reshape(%1, newshape=[1, 5, 14]) /* ty=Tensor[(1, 5, 14), uint32] */;
  %5 = reshape(%2, newshape=[10, 5, 14]) /* ty=Tensor[(10, 5, 14), uint32] */;
  %6 = reshape(%3, newshape=[512, 4]) /* ty=Tensor[(512, 4), uint8] */;
  %7 = @func_6337(%4, %5, %6) /* ty=(Tensor[(12, 5, 10), float32], Tensor[(600), float64], Tensor[(10, 5, 14), float32], Tensor[(4, 7, 3), int8], Tensor[(84), int8], Tensor[(8, 16, 16), uint8], Tensor[(512, 4), uint8], Tensor[(8, 16, 16), uint8]) */;
  %8 = %0.0;
  %9 = %7.1;
  (%8, %9, %var_13756, %var_13757, meta[relay.Constant][0] /* ty=Tensor[(2048), uint8] */)
}

def @func_14150() -> (Tensor[(8, 13, 1), float64], Tensor[(80), float64]) {
  %10 = @func_11553() /* ty=(Tensor[(8, 13, 1), float64],) */;
  %11 = @func_13339() /* ty=(Tensor[(8, 13, 1), float64], Tensor[(30), bool], Tensor[(540), float32], Tensor[(80), float64]) */;
  %12 = %10.0;
  %13 = %11.3;
  (%12, %13)
}

def @func_12537() -> Tensor[(420, 4), float64] {
  %15 = fn () -> Tensor[(420, 4), float64] {
    %14 = @func_12296() /* ty=(Tensor[(8, 13, 1), float64], Tensor[(420, 4), float64], Tensor[(1680), float64]) */;
    %14.1
  };
  %15() /* ty=Tensor[(420, 4), float64] */
}

def @func_5632(%var_5627: int32, %var_5628: Tensor[(84), int8], %var_5629: Tensor[(30), bool], %var_5630: Tensor[(1, 80), float64], %var_5631: Tensor[(1232), int64]) -> (Tensor[(1, 6, 11), bool], Tensor[(4, 7, 3), int8], Tensor[(84), int8], Tensor[(14, 5, 6), bool], Tensor[(30), bool], Tensor[(420), bool], Tensor[(1680), float64], Tensor[(1, 80), float64], Tensor[(1232), int64], Tensor[(16, 15, 7), float64], Tensor[(1, 2048), float32], int64) {
  %58 = fn (%var_5541: int32, %var_5552: Tensor[(84), int8], %var_5555: Tensor[(30), bool], %var_5591: Tensor[(1, 80), float64], %var_5592: Tensor[(1232), int64]) -> (Tensor[(1, 6, 11), bool], Tensor[(4, 7, 3), int8], Tensor[(84), int8], Tensor[(14, 5, 6), bool], Tensor[(30), bool], Tensor[(420), bool], Tensor[(1680), float64], Tensor[(1, 80), float64], Tensor[(1232), int64], Tensor[(16, 15, 7), float64], Tensor[(1, 2048), float32], int64) {
    %16 = cast(%var_5541, dtype="bool") /* ty=bool */;
    %17 = cast(meta[relay.Constant][1] /* ty=Tensor[(1, 6, 11), int32] */, dtype="bool") /* ty=Tensor[(1, 6, 11), bool] */;
    %18 = cast(%var_5552, dtype="int8") /* ty=Tensor[(84), int8] */;
    %19 = cast(%var_5552, dtype="int8") /* ty=Tensor[(84), int8] */;
    %20 = reshape(%18, newshape=[4, 7, 3]) /* ty=Tensor[(4, 7, 3), int8] */;
    %21 = reshape(%19, newshape=[4, 7, 3]) /* ty=Tensor[(4, 7, 3), int8] */;
    %22 = @func_809(%20, %21) /* ty=(Tensor[(4, 7, 3), int8],) */;
    %23 = cast(%var_5555, dtype="bool") /* ty=Tensor[(30), bool] */;
    %24 = cast(meta[relay.Constant][2] /* ty=Tensor[(420), bool] */, dtype="bool") /* ty=Tensor[(420), bool] */;
    %25 = reshape(%23, newshape=[1, 5, 6]) /* ty=Tensor[(1, 5, 6), bool] */;
    %26 = reshape(%24, newshape=[14, 5, 6]) /* ty=Tensor[(14, 5, 6), bool] */;
    %27 = @func_2137(%25, %26) /* ty=(Tensor[(14, 5, 6), bool], Tensor[(14, 5, 6), float32]) */;
    %28 = cast(meta[relay.Constant][3] /* ty=Tensor[(1680), float64] */, dtype="float64") /* ty=Tensor[(1680), float64] */;
    %29 = reshape(%28, newshape=[16, 15, 7]) /* ty=Tensor[(16, 15, 7), float64] */;
    %30 = @func_924(%29) /* ty=Tensor[(16, 15, 7), float64] */;
    %31 = cast(%30, dtype="float64") /* ty=Tensor[(16, 15, 7), float64] */;
    %32 = cast(%var_5591, dtype="float64") /* ty=Tensor[(1, 80), float64] */;
    %33 = cast(%var_5592, dtype="int64") /* ty=Tensor[(1232), int64] */;
    %34 = cast(%var_5555, dtype="bool") /* ty=Tensor[(30), bool] */;
    %35 = cast(meta[relay.Constant][2] /* ty=Tensor[(420), bool] */, dtype="bool") /* ty=Tensor[(420), bool] */;
    %36 = reshape(%32, newshape=[4, 10, 2]) /* ty=Tensor[(4, 10, 2), float64] */;
    %37 = reshape(%33, newshape=[1232]) /* ty=Tensor[(1232), int64] */;
    %38 = reshape(%34, newshape=[30]) /* ty=Tensor[(30), bool] */;
    %39 = reshape(%35, newshape=[70, 6]) /* ty=Tensor[(70, 6), bool] */;
    %40 = @func_5129(%36, %37, %38, %39) /* ty=(Tensor[(4, 10, 2), float64], Tensor[(1560), int8], int64, Tensor[(1232), int64], Tensor[(1, 84), int8], Tensor[(14, 5, 6), bool], Tensor[(30), bool], Tensor[(70, 6), bool], Tensor[(8, 16, 16), uint8], Tensor[(1, 2048), uint8], Tensor[(60, 2), bool]) */;
    %41 = %40.9;
    %42 = cast(%41, dtype="float32") /* ty=Tensor[(1, 2048), float32] */;
    %43 = cast(%var_5591, dtype="float64") /* ty=Tensor[(1, 80), float64] */;
    %44 = cast(%var_5592, dtype="int64") /* ty=Tensor[(1232), int64] */;
    %45 = cast(%var_5555, dtype="bool") /* ty=Tensor[(30), bool] */;
    %46 = cast(meta[relay.Constant][2] /* ty=Tensor[(420), bool] */, dtype="bool") /* ty=Tensor[(420), bool] */;
    %47 = reshape(%43, newshape=[4, 10, 2]) /* ty=Tensor[(4, 10, 2), float64] */;
    %48 = reshape(%44, newshape=[1232]) /* ty=Tensor[(1232), int64] */;
    %49 = reshape(%45, newshape=[30]) /* ty=Tensor[(30), bool] */;
    %50 = reshape(%46, newshape=[70, 6]) /* ty=Tensor[(70, 6), bool] */;
    %51 = @func_5129(%47, %48, %49, %50) /* ty=(Tensor[(4, 10, 2), float64], Tensor[(1560), int8], int64, Tensor[(1232), int64], Tensor[(1, 84), int8], Tensor[(14, 5, 6), bool], Tensor[(30), bool], Tensor[(70, 6), bool], Tensor[(8, 16, 16), uint8], Tensor[(1, 2048), uint8], Tensor[(60, 2), bool]) */;
    %52 = less(%16, %17) /* ty=Tensor[(1, 6, 11), bool] */;
    %53 = %22.0;
    %54 = %27.0;
    %55 = tan(%31) /* ty=Tensor[(16, 15, 7), float64] */;
    %56 = sin(%42) /* ty=Tensor[(1, 2048), float32] */;
    %57 = %51.2;
    (%52, %53, %var_5552, %54, %var_5555, meta[relay.Constant][2] /* ty=Tensor[(420), bool] */, meta[relay.Constant][3] /* ty=Tensor[(1680), float64] */, %var_5591, %var_5592, %55, %56, %57)
  };
  %58(%var_5627, %var_5628, %var_5629, %var_5630, %var_5631) /* ty=(Tensor[(1, 6, 11), bool], Tensor[(4, 7, 3), int8], Tensor[(84), int8], Tensor[(14, 5, 6), bool], Tensor[(30), bool], Tensor[(420), bool], Tensor[(1680), float64], Tensor[(1, 80), float64], Tensor[(1232), int64], Tensor[(16, 15, 7), float64], Tensor[(1, 2048), float32], int64) */
}

def @func_7814(%var_7813: Tensor[(1, 8, 12), uint8]) -> (Tensor[(?, 8, 12), bool],) {
  %64 = fn (%var_7801: Tensor[(1, 8, 12), uint8]) -> (Tensor[(?, 8, 12), bool],) {
    %59 = cast(meta[relay.Constant][4] /* ty=Tensor[(1, 8, 12), uint8] */, dtype="bool") /* ty=Tensor[(1, 8, 12), bool] */;
    %60 = shape_of(%var_7801, dtype="int32") /* ty=Tensor[(3), int32] */;
    %61 = cast(%var_7801, dtype="bool") /* ty=Tensor[(1, 8, 12), bool] */;
    %62 = dyn.reshape(%59, %60, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    %63 = not_equal(%61, %62) /* ty=Tensor[(?, 8, 12), bool] */;
    (%63,)
  };
  %64(%var_7813) /* ty=(Tensor[(?, 8, 12), bool],) */
}

def @func_13000(%var_12997: Tensor[(1232), int64], %var_12998: Tensor[(600), float64], %var_12999: Tensor[(1680), float64]) -> (Tensor[(1, 1560), int8], Tensor[(1024), float64], Tensor[(585), int64], Tensor[(32, 32), float64], Tensor[(1232), int64], Tensor[(600), float64], Tensor[(1680), float64], Tensor[(80), float64], Tensor[(30), bool], Tensor[(420), bool], Tensor[(1560), bool]) {
  %94 = fn (%var_12963: Tensor[(1232), int64], %var_12964: Tensor[(600), float64], %var_12965: Tensor[(1680), float64]) -> (Tensor[(1, 1560), int8], Tensor[(1024), float64], Tensor[(585), int64], Tensor[(32, 32), float64], Tensor[(1232), int64], Tensor[(600), float64], Tensor[(1680), float64], Tensor[(80), float64], Tensor[(30), bool], Tensor[(420), bool], Tensor[(1560), bool]) {
    %65 = @func_12409() /* ty=(Tensor[(8, 13, 1), float64], Tensor[(56, 22), int64], Tensor[(1024), float64], Tensor[(120), int8], Tensor[(1, 1560), int8], int64, Tensor[(1232), int64]) */;
    %66 = cast(10 /* ty=int64 */, dtype="int64") /* ty=int64 */;
    %67 = cast(meta[relay.Constant][5] /* ty=Tensor[(585), int64] */, dtype="int64") /* ty=Tensor[(585), int64] */;
    %68 = cast(meta[relay.Constant][6] /* ty=Tensor[(32, 32), float64] */, dtype="float64") /* ty=Tensor[(32, 32), float64] */;
    %69 = cast(%var_12963, dtype="int64") /* ty=Tensor[(1232), int64] */;
    %70 = cast(%var_12964, dtype="float64") /* ty=Tensor[(600), float64] */;
    %71 = cast(%var_12965, dtype="float64") /* ty=Tensor[(1680), float64] */;
    %72 = reshape(%66, newshape=[]) /* ty=int64 */;
    %73 = reshape(%67, newshape=[3, 15, 13]) /* ty=Tensor[(3, 15, 13), int64] */;
    %74 = reshape(%68, newshape=[1024]) /* ty=Tensor[(1024), float64] */;
    %75 = reshape(%69, newshape=[1, 1232]) /* ty=Tensor[(1, 1232), int64] */;
    %76 = reshape(%70, newshape=[600]) /* ty=Tensor[(600), float64] */;
    %77 = reshape(%71, newshape=[1680]) /* ty=Tensor[(1680), float64] */;
    %78 = @func_10257(%72, %73, %74, %75, %76, %77) /* ty=(Tensor[(3, 15, 13), int64], Tensor[(84), int8], Tensor[(1024), float64], Tensor[(120), int8], Tensor[(1560), int8], Tensor[(1, 1232), int64], Tensor[(1248), float64], Tensor[(600), float64], Tensor[(5, 42), float64], Tensor[(1680), float32]) */;
    %79 = cast(meta[relay.Constant][7] /* ty=Tensor[(80), float64] */, dtype="float64") /* ty=Tensor[(80), float64] */;
    %80 = cast(%var_12963, dtype="int64") /* ty=Tensor[(1232), int64] */;
    %81 = cast(meta[relay.Constant][8] /* ty=Tensor[(30), bool] */, dtype="bool") /* ty=Tensor[(30), bool] */;
    %82 = cast(meta[relay.Constant][9] /* ty=Tensor[(420), bool] */, dtype="bool") /* ty=Tensor[(420), bool] */;
    %83 = reshape(%79, newshape=[4, 10, 2]) /* ty=Tensor[(4, 10, 2), float64] */;
    %84 = reshape(%80, newshape=[1232]) /* ty=Tensor[(1232), int64] */;
    %85 = reshape(%81, newshape=[30]) /* ty=Tensor[(30), bool] */;
    %86 = reshape(%82, newshape=[70, 6]) /* ty=Tensor[(70, 6), bool] */;
    %87 = @func_5129(%83, %84, %85, %86) /* ty=(Tensor[(4, 10, 2), float64], Tensor[(1560), int8], int64, Tensor[(1232), int64], Tensor[(1, 84), int8], Tensor[(14, 5, 6), bool], Tensor[(30), bool], Tensor[(70, 6), bool], Tensor[(8, 16, 16), uint8], Tensor[(1, 2048), uint8], Tensor[(60, 2), bool]) */;
    %88 = %87.1;
    %89 = cast(%88, dtype="bool") /* ty=Tensor[(1560), bool] */;
    %90 = cast(10 /* ty=int64 */, dtype="bool") /* ty=bool */;
    %91 = %65.4;
    %92 = %78.2;
    %93 = less(%89, %90) /* ty=Tensor[(1560), bool] */;
    (%91, %92, meta[relay.Constant][5] /* ty=Tensor[(585), int64] */, meta[relay.Constant][6] /* ty=Tensor[(32, 32), float64] */, %var_12963, %var_12964, %var_12965, meta[relay.Constant][7] /* ty=Tensor[(80), float64] */, meta[relay.Constant][8] /* ty=Tensor[(30), bool] */, meta[relay.Constant][9] /* ty=Tensor[(420), bool] */, %93)
  };
  %94(%var_12997, %var_12998, %var_12999) /* ty=(Tensor[(1, 1560), int8], Tensor[(1024), float64], Tensor[(585), int64], Tensor[(32, 32), float64], Tensor[(1232), int64], Tensor[(600), float64], Tensor[(1680), float64], Tensor[(80), float64], Tensor[(30), bool], Tensor[(420), bool], Tensor[(1560), bool]) */
}

def @func_11665(%var_11663: Tensor[(84), bool], %var_11664: Tensor[(6, 16, 14), bool]) -> (Tensor[(8, 13, 1), float64], Tensor[(84), bool], Tensor[(1344), bool], Tensor[(6, 16, 14), uint64]) {
  %107 = fn (%var_11653: Tensor[(84), bool], %var_11656: Tensor[(6, 16, 14), bool]) -> (Tensor[(8, 13, 1), float64], Tensor[(84), bool], Tensor[(1344), bool], Tensor[(6, 16, 14), uint64]) {
    %95 = cast(%var_11653, dtype="bool") /* ty=Tensor[(84), bool] */;
    %96 = cast(meta[relay.Constant][10] /* ty=Tensor[(1344), bool] */, dtype="bool") /* ty=Tensor[(1344), bool] */;
    %97 = reshape(%95, newshape=[6, 1, 14]) /* ty=Tensor[(6, 1, 14), bool] */;
    %98 = reshape(%96, newshape=[6, 16, 14]) /* ty=Tensor[(6, 16, 14), bool] */;
    %99 = @func_3207(%97, %98) /* ty=(Tensor[(6, 16, 14), bool],) */;
    %100 = %99.0;
    %101 = cast(%var_11656, dtype="uint64") /* ty=Tensor[(6, 16, 14), uint64] */;
    %102 = shape_of(%100, dtype="int32") /* ty=Tensor[(3), int32] */;
    %103 = cast(%100, dtype="uint64") /* ty=Tensor[(6, 16, 14), uint64] */;
    %104 = dyn.reshape(%101, %102, newshape=[]) /* ty=Tensor[(?, ?, ?), uint64] */;
    %105 = @func_11514() /* ty=Tensor[(8, 13, 1), float64] */;
    %106 = right_shift(%103, %104) /* ty=Tensor[(6, 16, 14), uint64] */;
    (%105, %var_11653, meta[relay.Constant][10] /* ty=Tensor[(1344), bool] */, %106)
  };
  %107(%var_11663, %var_11664) /* ty=(Tensor[(8, 13, 1), float64], Tensor[(84), bool], Tensor[(1344), bool], Tensor[(6, 16, 14), uint64]) */
}

def @func_12381(%var_12369: Tensor[(30), bool], %var_12370: Tensor[(80, 1), float64], %var_12371: Tensor[(1232), int64]) -> (Tensor[(1680), float64], Tensor[(60, 10), float32], int32, Tensor[(30), bool], Tensor[(1232), int64], Tensor[(80, 1232), bool]) {
  %108 = @func_12296() /* ty=(Tensor[(8, 13, 1), float64], Tensor[(420, 4), float64], Tensor[(1680), float64]) */;
  %109 = cast(meta[relay.Constant][11] /* ty=Tensor[(60, 10), float32] */, dtype="float32") /* ty=Tensor[(60, 10), float32] */;
  %110 = cast(4 /* ty=int32 */, dtype="int32") /* ty=int32 */;
  %111 = cast(%var_12369, dtype="bool") /* ty=Tensor[(30), bool] */;
  %112 = cast(%var_12370, dtype="float64") /* ty=Tensor[(80, 1), float64] */;
  %113 = cast(%var_12371, dtype="int64") /* ty=Tensor[(1232), int64] */;
  %114 = reshape(%109, newshape=[5, 15, 8]) /* ty=Tensor[(5, 15, 8), float32] */;
  %115 = reshape(%110, newshape=[]) /* ty=int32 */;
  %116 = reshape(%111, newshape=[30]) /* ty=Tensor[(30), bool] */;
  %117 = reshape(%112, newshape=[80]) /* ty=Tensor[(80), float64] */;
  %118 = reshape(%113, newshape=[1232]) /* ty=Tensor[(1232), int64] */;
  %119 = @func_10128(%114, %115, %116, %117, %118) /* ty=(Tensor[(5, 15, 8), float32], Tensor[(1680), float64], int32, Tensor[(84), int8], Tensor[(30), bool], Tensor[(80), float64], Tensor[(1232), int64]) */;
  %120 = %119.6;
  %121 = cast(%120, dtype="bool") /* ty=Tensor[(1232), bool] */;
  %122 = cast(%var_12370, dtype="bool") /* ty=Tensor[(80, 1), bool] */;
  %123 = %108.2;
  %124 = logical_or(%121, %122) /* ty=Tensor[(80, 1232), bool] */;
  (%123, meta[relay.Constant][11] /* ty=Tensor[(60, 10), float32] */, 4 /* ty=int32 */, %var_12369, %var_12371, %124)
}

def @func_927(%var_925: Tensor[(16, 15, 7), float64]) -> Tensor[(16, 15, 7), float64] {
  @func_924(%var_925) /* ty=Tensor[(16, 15, 7), float64] */
}

def @func_14266(%var_14264: Tensor[(96), uint8], %var_14265: Tensor[(8, 13, 96), int64]) -> (Tensor[(80), float64], Tensor[(?, 8, 12), bool], Tensor[(8, 13, 96), int8]) {
  %141 = fn (%var_14235: Tensor[(96), uint8], %var_14254: Tensor[(8, 13, 96), int64]) -> (Tensor[(80), float64], Tensor[(?, 8, 12), bool], Tensor[(8, 13, 96), int8]) {
    %125 = @func_14150() /* ty=(Tensor[(8, 13, 1), float64], Tensor[(80), float64]) */;
    %126 = cast(%var_14235, dtype="uint8") /* ty=Tensor[(96), uint8] */;
    %127 = reshape(%126, newshape=[1, 8, 12]) /* ty=Tensor[(1, 8, 12), uint8] */;
    %128 = @func_7812(%127) /* ty=(Tensor[(?, 8, 12), bool],) */;
    %129 = @func_14212() /* ty=(Tensor[(6, 3, 7), uint64], Tensor[(8, 13, 1), float64]) */;
    %130 = %129.1;
    %131 = cast(%130, dtype="int64") /* ty=Tensor[(8, 13, 1), int64] */;
    %132 = cast(%var_14235, dtype="int64") /* ty=Tensor[(96), int64] */;
    %133 = right_shift(%131, %132) /* ty=Tensor[(8, 13, 96), int64] */;
    %134 = cast(%var_14254, dtype="int8") /* ty=Tensor[(8, 13, 96), int8] */;
    %135 = shape_of(%133, dtype="int32") /* ty=Tensor[(3), int32] */;
    %136 = cast(%133, dtype="int8") /* ty=Tensor[(8, 13, 96), int8] */;
    %137 = dyn.reshape(%134, %135, newshape=[]) /* ty=Tensor[(?, ?, ?), int8] */;
    %138 = %125.1;
    %139 = %128.0;
    %140 = add(%136, %137) /* ty=Tensor[(8, 13, 96), int8] */;
    (%138, %139, %140)
  };
  %141(%var_14264, %var_14265) /* ty=(Tensor[(80), float64], Tensor[(?, 8, 12), bool], Tensor[(8, 13, 96), int8]) */
}

def @func_14892() -> (Tensor[(8, 13, 9), int8], Tensor[(30), bool]) {
  %142 = @func_14484() /* ty=(Tensor[(8, 16, 16), uint8], Tensor[(256, 8), uint8], Tensor[(8, 13, 9), int8]) */;
  %143 = @func_12609() /* ty=(Tensor[(120), int8], Tensor[(14, 5, 6), float32], Tensor[(30), bool], Tensor[(420), bool]) */;
  %144 = %142.2;
  %145 = %143.2;
  (%144, %145)
}

def @func_12640() -> (Tensor[(8, 13, 1), float32],) {
  @func_12638() /* ty=(Tensor[(8, 13, 1), float32],) */
}

def @func_10464(%var_10461: Tensor[(16, 15, 6), float32]) -> (Tensor[(16, 15, 6), float32],) {
  %146 = cast(%var_10461, dtype="float32") /* ty=Tensor[(16, 15, 6), float32] */;
  %147 = atan(%146) /* ty=Tensor[(16, 15, 6), float32] */;
  (%147,)
}

def @func_7515(%var_7513: Tensor[(12, 11, 9), int64], %var_7514: Tensor[(12, 11, 9), int64]) -> (Tensor[(12, 11, 9), int64],) {
  %153 = fn (%var_7507: Tensor[(12, 11, 9), int64], %var_7508: Tensor[(12, 11, 9), int64]) -> (Tensor[(12, 11, 9), int64],) {
    %148 = cast(%var_7508, dtype="int64") /* ty=Tensor[(12, 11, 9), int64] */;
    %149 = shape_of(%var_7507, dtype="int32") /* ty=Tensor[(3), int32] */;
    %150 = cast(%var_7507, dtype="int64") /* ty=Tensor[(12, 11, 9), int64] */;
    %151 = dyn.reshape(%148, %149, newshape=[]) /* ty=Tensor[(?, ?, ?), int64] */;
    %152 = bitwise_and(%150, %151) /* ty=Tensor[(12, 11, 9), int64] */;
    (%152,)
  };
  %153(%var_7513, %var_7514) /* ty=(Tensor[(12, 11, 9), int64],) */
}

def @func_13564(%var_13558: Tensor[(1188), int64]) -> (Tensor[(420, 4), float64], Tensor[(12, 11, 9), int64], Tensor[(1188), int64]) {
  %154 = @func_12553() /* ty=(Tensor[(420, 4), float64],) */;
  %155 = cast(%var_13558, dtype="int64") /* ty=Tensor[(1188), int64] */;
  %156 = cast(%var_13558, dtype="int64") /* ty=Tensor[(1188), int64] */;
  %157 = reshape(%155, newshape=[12, 11, 9]) /* ty=Tensor[(12, 11, 9), int64] */;
  %158 = reshape(%156, newshape=[12, 11, 9]) /* ty=Tensor[(12, 11, 9), int64] */;
  %159 = @func_7512(%157, %158) /* ty=(Tensor[(12, 11, 9), int64],) */;
  %160 = %154.0;
  %161 = %159.0;
  (%160, %161, %var_13558)
}

def @func_12339(%var_12334: Tensor[(1248), float64], %var_12335: int32, %var_12336: Tensor[(84), int8], %var_12337: Tensor[(30, 1), bool], %var_12338: Tensor[(14, 9, 8), int32]) -> (Tensor[(8, 13, 1), float64], Tensor[(1, 80), float32], Tensor[(1248), float64], Tensor[(126), float64], Tensor[(84), int8], Tensor[(30, 1), bool], Tensor[(14, 9, 8), uint8], Tensor[(8, 13, 1), float64]) {
  %179 = fn (%var_12315: Tensor[(1248), float64], %var_12317: int32, %var_12318: Tensor[(84), int8], %var_12319: Tensor[(30, 1), bool], %var_12323: Tensor[(14, 9, 8), int32]) -> (Tensor[(8, 13, 1), float64], Tensor[(1, 80), float32], Tensor[(1248), float64], Tensor[(126), float64], Tensor[(84), int8], Tensor[(30, 1), bool], Tensor[(14, 9, 8), uint8], Tensor[(8, 13, 1), float64]) {
    %162 = cast(%var_12315, dtype="float64") /* ty=Tensor[(1248), float64] */;
    %163 = cast(meta[relay.Constant][12] /* ty=Tensor[(126), float64] */, dtype="float64") /* ty=Tensor[(126), float64] */;
    %164 = cast(%var_12317, dtype="int32") /* ty=int32 */;
    %165 = cast(%var_12318, dtype="int8") /* ty=Tensor[(84), int8] */;
    %166 = cast(%var_12319, dtype="bool") /* ty=Tensor[(30, 1), bool] */;
    %167 = reshape(%162, newshape=[8, 13, 12]) /* ty=Tensor[(8, 13, 12), float64] */;
    %168 = reshape(%163, newshape=[126]) /* ty=Tensor[(126), float64] */;
    %169 = reshape(%164, newshape=[]) /* ty=int32 */;
    %170 = reshape(%165, newshape=[84]) /* ty=Tensor[(84), int8] */;
    %171 = reshape(%166, newshape=[30]) /* ty=Tensor[(30), bool] */;
    %172 = @func_11847(%167, %168, %169, %170, %171) /* ty=(Tensor[(8, 13, 12), uint64], Tensor[(6, 3, 7), uint64], Tensor[(126), float64], int64, int32, Tensor[(84), int8], Tensor[(30), bool], Tensor[(1232), int64], Tensor[(1, 80), float32]) */;
    %173 = cast(%var_12317, dtype="uint8") /* ty=uint8 */;
    %174 = cast(%var_12323, dtype="uint8") /* ty=Tensor[(14, 9, 8), uint8] */;
    %175 = @func_11514() /* ty=Tensor[(8, 13, 1), float64] */;
    %176 = %172.8;
    %177 = add(%173, %174) /* ty=Tensor[(14, 9, 8), uint8] */;
    %178 = @func_11514() /* ty=Tensor[(8, 13, 1), float64] */;
    (%175, %176, %var_12315, meta[relay.Constant][12] /* ty=Tensor[(126), float64] */, %var_12318, %var_12319, %177, %178)
  };
  %179(%var_12334, %var_12335, %var_12336, %var_12337, %var_12338) /* ty=(Tensor[(8, 13, 1), float64], Tensor[(1, 80), float32], Tensor[(1248), float64], Tensor[(126), float64], Tensor[(84), int8], Tensor[(30, 1), bool], Tensor[(14, 9, 8), uint8], Tensor[(8, 13, 1), float64]) */
}

def @func_8941(%var_8938: Tensor[(4, 14, 16), int8], %var_8939: Tensor[(4, 14, 16), int8], %var_8940: Tensor[(1680), float64]) -> (Tensor[(4, 14, 16), int8], Tensor[(16, 15, 7), float64], Tensor[(1680), float64]) {
  %188 = fn (%var_8894: Tensor[(4, 14, 16), int8], %var_8895: Tensor[(4, 14, 16), int8], %var_8918: Tensor[(1680), float64]) -> (Tensor[(4, 14, 16), int8], Tensor[(16, 15, 7), float64], Tensor[(1680), float64]) {
    %180 = cast(%var_8895, dtype="int8") /* ty=Tensor[(4, 14, 16), int8] */;
    %181 = shape_of(%var_8894, dtype="int32") /* ty=Tensor[(3), int32] */;
    %182 = cast(%var_8894, dtype="int8") /* ty=Tensor[(4, 14, 16), int8] */;
    %183 = dyn.reshape(%180, %181, newshape=[]) /* ty=Tensor[(?, ?, ?), int8] */;
    %184 = cast(%var_8918, dtype="float64") /* ty=Tensor[(1680), float64] */;
    %185 = reshape(%184, newshape=[16, 15, 7]) /* ty=Tensor[(16, 15, 7), float64] */;
    %186 = bitwise_and(%182, %183) /* ty=Tensor[(4, 14, 16), int8] */;
    %187 = @func_924(%185) /* ty=Tensor[(16, 15, 7), float64] */;
    (%186, %187, %var_8918)
  };
  %188(%var_8938, %var_8939, %var_8940) /* ty=(Tensor[(4, 14, 16), int8], Tensor[(16, 15, 7), float64], Tensor[(1680), float64]) */
}

def @func_13780(%var_13778: Tensor[(70), uint32], %var_13779: Tensor[(700, 1), uint32]) -> (Tensor[(8, 13, 1), float32], Tensor[(600), float64], Tensor[(70), uint32], Tensor[(700, 1), uint32], Tensor[(2048), uint8]) {
  @func_13776(%var_13778, %var_13779) /* ty=(Tensor[(8, 13, 1), float32], Tensor[(600), float64], Tensor[(70), uint32], Tensor[(700, 1), uint32], Tensor[(2048), uint8]) */
}

def @func_12005(%var_11959: Tensor[(96), uint8], %var_11962: Tensor[(896), int8], %var_11963: Tensor[(1680, 1), float64], %var_11994: uint64) -> (Tensor[(?, 8, 12), bool], Tensor[(96), uint8], Tensor[(16, 15, 7), float64], Tensor[(896), int8], Tensor[(1680, 1), float64], Tensor[(6, 3, 7), uint64], Tensor[(8, 13, 126), float32], Tensor[(8, 13, 126), bool], Tensor[(5, 3, 15), float64], uint64, Tensor[(225, 1), uint64], Tensor[(390), float64]) {
  %189 = cast(%var_11959, dtype="uint8") /* ty=Tensor[(96), uint8] */;
  %190 = reshape(%189, newshape=[1, 8, 12]) /* ty=Tensor[(1, 8, 12), uint8] */;
  %191 = @func_7812(%190) /* ty=(Tensor[(?, 8, 12), bool],) */;
  %192 = cast(%var_11962, dtype="int8") /* ty=Tensor[(896), int8] */;
  %193 = cast(%var_11962, dtype="int8") /* ty=Tensor[(896), int8] */;
  %194 = cast(%var_11963, dtype="float64") /* ty=Tensor[(1680, 1), float64] */;
  %195 = reshape(%192, newshape=[4, 14, 16]) /* ty=Tensor[(4, 14, 16), int8] */;
  %196 = reshape(%193, newshape=[4, 14, 16]) /* ty=Tensor[(4, 14, 16), int8] */;
  %197 = reshape(%194, newshape=[1680]) /* ty=Tensor[(1680), float64] */;
  %198 = @func_8937(%195, %196, %197) /* ty=(Tensor[(4, 14, 16), int8], Tensor[(16, 15, 7), float64], Tensor[(1680), float64]) */;
  %199 = cast(meta[relay.Constant][13] /* ty=Tensor[(126), float64] */, dtype="float64") /* ty=Tensor[(126), float64] */;
  %200 = reshape(%199, newshape=[6, 3, 7]) /* ty=Tensor[(6, 3, 7), float64] */;
  %201 = @func_11553() /* ty=(Tensor[(8, 13, 1), float64],) */;
  %202 = %201.0;
  %203 = cast(%202, dtype="float32") /* ty=Tensor[(8, 13, 1), float32] */;
  %204 = cast(meta[relay.Constant][13] /* ty=Tensor[(126), float64] */, dtype="float32") /* ty=Tensor[(126), float32] */;
  %205 = @func_11514() /* ty=Tensor[(8, 13, 1), float64] */;
  %206 = cast(%205, dtype="bool") /* ty=Tensor[(8, 13, 1), bool] */;
  %207 = cast(meta[relay.Constant][13] /* ty=Tensor[(126), float64] */, dtype="bool") /* ty=Tensor[(126), bool] */;
  %208 = cast(%var_11994, dtype="uint64") /* ty=uint64 */;
  %209 = cast(meta[relay.Constant][14] /* ty=Tensor[(225, 1), uint64] */, dtype="uint64") /* ty=Tensor[(225, 1), uint64] */;
  %210 = cast(meta[relay.Constant][15] /* ty=Tensor[(390), float64] */, dtype="float64") /* ty=Tensor[(390), float64] */;
  %211 = reshape(%208, newshape=[]) /* ty=uint64 */;
  %212 = reshape(%209, newshape=[5, 3, 15]) /* ty=Tensor[(5, 3, 15), uint64] */;
  %213 = reshape(%210, newshape=[390]) /* ty=Tensor[(390), float64] */;
  %214 = @func_2974(%211, %212, %213) /* ty=(Tensor[(5, 3, 15), uint16], Tensor[(5, 3, 15), float64], Tensor[(6, 13, 5), float64], Tensor[(390), float64]) */;
  %215 = %191.0;
  %216 = %198.1;
  %217 = @func_7984(%200) /* ty=Tensor[(6, 3, 7), uint64] */;
  %218 = mod(%203, %204) /* ty=Tensor[(8, 13, 126), float32] */;
  %219 = greater_equal(%206, %207) /* ty=Tensor[(8, 13, 126), bool] */;
  %220 = %214.1;
  (%215, %var_11959, %216, %var_11962, %var_11963, %217, %218, %219, %220, %var_11994, meta[relay.Constant][14] /* ty=Tensor[(225, 1), uint64] */, meta[relay.Constant][15] /* ty=Tensor[(390), float64] */)
}

def @func_12011(%var_12007: Tensor[(96), uint8], %var_12008: Tensor[(896), int8], %var_12009: Tensor[(1680, 1), float64], %var_12010: uint64) -> (Tensor[(?, 8, 12), bool], Tensor[(96), uint8], Tensor[(16, 15, 7), float64], Tensor[(896), int8], Tensor[(1680, 1), float64], Tensor[(6, 3, 7), uint64], Tensor[(8, 13, 126), float32], Tensor[(8, 13, 126), bool], Tensor[(5, 3, 15), float64], uint64, Tensor[(225, 1), uint64], Tensor[(390), float64]) {
  @func_12005(%var_12007, %var_12008, %var_12009, %var_12010) /* ty=(Tensor[(?, 8, 12), bool], Tensor[(96), uint8], Tensor[(16, 15, 7), float64], Tensor[(896), int8], Tensor[(1680, 1), float64], Tensor[(6, 3, 7), uint64], Tensor[(8, 13, 126), float32], Tensor[(8, 13, 126), bool], Tensor[(5, 3, 15), float64], uint64, Tensor[(225, 1), uint64], Tensor[(390), float64]) */
}

def @func_924(%var_900: Tensor[(16, 15, 7), float64]) -> Tensor[(16, 15, 7), float64] {
  %221 = cast(%var_900, dtype="float64") /* ty=Tensor[(16, 15, 7), float64] */;
  erf(%221) /* ty=Tensor[(16, 15, 7), float64] */
}

def @func_13805(%var_13803: Tensor[(9, 1, 3), float64]) -> Tensor[(9, 1, 3), float64] {
  @func_13802(%var_13803) /* ty=Tensor[(9, 1, 3), float64] */
}

def @func_14020(%var_14017: Tensor[(195), float32], %var_14018: uint64, %var_14019: Tensor[(225), uint64]) -> (Tensor[(1232), int64], Tensor[(?, 16, 9), bool], Tensor[(1680), float64], Tensor[(144), float32], uint64, Tensor[(195), float32], uint64, Tensor[(225), uint64]) {
  %238 = fn (%var_14010: Tensor[(195), float32], %var_14011: uint64, %var_14012: Tensor[(225), uint64]) -> (Tensor[(1232), int64], Tensor[(?, 16, 9), bool], Tensor[(1680), float64], Tensor[(144), float32], uint64, Tensor[(195), float32], uint64, Tensor[(225), uint64]) {
    %222 = @func_13218() /* ty=(Tensor[(8, 13, 1), float64], Tensor[(12, 11, 9), int64], Tensor[(9, 132), int64], Tensor[(8, 16, 16), uint8], Tensor[(2048), uint8], Tensor[(1232), int64], Tensor[(8, 13, 84), uint32]) */;
    %223 = cast(meta[relay.Constant][16] /* ty=Tensor[(1680), float64] */, dtype="float64") /* ty=Tensor[(1680), float64] */;
    %224 = cast(meta[relay.Constant][17] /* ty=Tensor[(144), float32] */, dtype="float32") /* ty=Tensor[(144), float32] */;
    %225 = reshape(%223, newshape=[420, 4]) /* ty=Tensor[(420, 4), float64] */;
    %226 = reshape(%224, newshape=[8, 18]) /* ty=Tensor[(8, 18), float32] */;
    %227 = @func_13107(%225, %226) /* ty=(Tensor[(420, 4), bool], Tensor[(?, 16, 9), bool], Tensor[(8, 18), float32], Tensor[(195, 2), float64]) */;
    %228 = cast(%var_14010, dtype="float32") /* ty=Tensor[(195), float32] */;
    %229 = cast(%var_14011, dtype="uint64") /* ty=uint64 */;
    %230 = cast(%var_14012, dtype="uint64") /* ty=Tensor[(225), uint64] */;
    %231 = reshape(%228, newshape=[13, 15, 1]) /* ty=Tensor[(13, 15, 1), float32] */;
    %232 = reshape(%229, newshape=[]) /* ty=uint64 */;
    %233 = reshape(%230, newshape=[25, 9]) /* ty=Tensor[(25, 9), uint64] */;
    %234 = @func_6923(%231, %232, %233) /* ty=(uint64, Tensor[(25, 9), uint64], Tensor[(390), float64], Tensor[(13, 15, 390), int32]) */;
    %235 = %222.5;
    %236 = %227.1;
    %237 = %234.0;
    (%235, %236, meta[relay.Constant][16] /* ty=Tensor[(1680), float64] */, meta[relay.Constant][17] /* ty=Tensor[(144), float32] */, %237, %var_14010, %var_14011, %var_14012)
  };
  %238(%var_14017, %var_14018, %var_14019) /* ty=(Tensor[(1232), int64], Tensor[(?, 16, 9), bool], Tensor[(1680), float64], Tensor[(144), float32], uint64, Tensor[(195), float32], uint64, Tensor[(225), uint64]) */
}

def @func_13045(%var_13044: Tensor[(1232), int64]) -> (Tensor[(8, 13, 1), float64], Tensor[(60, 10), float32], Tensor[(80), float64], Tensor[(1232), int64], Tensor[(30, 1), float32]) {
  %250 = fn (%var_13033: Tensor[(1232), int64]) -> (Tensor[(8, 13, 1), float64], Tensor[(60, 10), float32], Tensor[(80), float64], Tensor[(1232), int64], Tensor[(30, 1), float32]) {
    %239 = cast(meta[relay.Constant][18] /* ty=Tensor[(30, 1), bool] */, dtype="bool") /* ty=Tensor[(30, 1), bool] */;
    %240 = cast(meta[relay.Constant][19] /* ty=Tensor[(80), float64] */, dtype="float64") /* ty=Tensor[(80), float64] */;
    %241 = cast(%var_13033, dtype="int64") /* ty=Tensor[(1232), int64] */;
    %242 = reshape(%239, newshape=[30]) /* ty=Tensor[(30), bool] */;
    %243 = reshape(%240, newshape=[80, 1]) /* ty=Tensor[(80, 1), float64] */;
    %244 = reshape(%241, newshape=[1232]) /* ty=Tensor[(1232), int64] */;
    %245 = @func_12381(%242, %243, %244) /* ty=(Tensor[(1680), float64], Tensor[(60, 10), float32], int32, Tensor[(30), bool], Tensor[(1232), int64], Tensor[(80, 1232), bool]) */;
    %246 = cast(meta[relay.Constant][18] /* ty=Tensor[(30, 1), bool] */, dtype="float32") /* ty=Tensor[(30, 1), float32] */;
    %247 = @func_11514() /* ty=Tensor[(8, 13, 1), float64] */;
    %248 = %245.1;
    %249 = acos(%246) /* ty=Tensor[(30, 1), float32] */;
    (%247, %248, meta[relay.Constant][19] /* ty=Tensor[(80), float64] */, %var_13033, %249)
  };
  %250(%var_13044) /* ty=(Tensor[(8, 13, 1), float64], Tensor[(60, 10), float32], Tensor[(80), float64], Tensor[(1232), int64], Tensor[(30, 1), float32]) */
}

def @func_12886(%var_12849: int32, %var_12851: Tensor[(80), float64], %var_12857: Tensor[(195), float32]) -> (int32, Tensor[(12, 50), float32], int32, Tensor[(5, 6), bool], Tensor[(80), float64], Tensor[(1232), int64], Tensor[(1440), float32], Tensor[(195), float32], Tensor[(195, 2), int64]) {
  %251 = cast(meta[relay.Constant][20] /* ty=Tensor[(12, 50), float32] */, dtype="float32") /* ty=Tensor[(12, 50), float32] */;
  %252 = cast(%var_12849, dtype="int32") /* ty=int32 */;
  %253 = cast(meta[relay.Constant][21] /* ty=Tensor[(5, 6), bool] */, dtype="bool") /* ty=Tensor[(5, 6), bool] */;
  %254 = cast(%var_12851, dtype="float64") /* ty=Tensor[(80), float64] */;
  %255 = cast(meta[relay.Constant][22] /* ty=Tensor[(1232), int64] */, dtype="int64") /* ty=Tensor[(1232), int64] */;
  %256 = reshape(%251, newshape=[5, 15, 8]) /* ty=Tensor[(5, 15, 8), float32] */;
  %257 = reshape(%252, newshape=[]) /* ty=int32 */;
  %258 = reshape(%253, newshape=[30]) /* ty=Tensor[(30), bool] */;
  %259 = reshape(%254, newshape=[80]) /* ty=Tensor[(80), float64] */;
  %260 = reshape(%255, newshape=[1232]) /* ty=Tensor[(1232), int64] */;
  %261 = @func_10128(%256, %257, %258, %259, %260) /* ty=(Tensor[(5, 15, 8), float32], Tensor[(1680), float64], int32, Tensor[(84), int8], Tensor[(30), bool], Tensor[(80), float64], Tensor[(1232), int64]) */;
  %262 = cast(%var_12857, dtype="float32") /* ty=Tensor[(195), float32] */;
  %263 = reshape(%262, newshape=[1, 195]) /* ty=Tensor[(1, 195), float32] */;
  %264 = @func_11728(%263) /* ty=(Tensor[(16, 15, 6), float32], Tensor[(1440), float32], Tensor[(1, 195), float32], uint64, Tensor[(225, 1), uint64], Tensor[(8, 13, 390), int16]) */;
  %265 = @func_12746() /* ty=(Tensor[(8, 13, 1), float64], Tensor[(6, 13, 5), float64], Tensor[(195, 2), float64]) */;
  %266 = %265.2;
  %267 = cast(%266, dtype="float64") /* ty=Tensor[(195, 2), float64] */;
  %268 = sinh(%267) /* ty=Tensor[(195, 2), float64] */;
  %269 = cast(%268, dtype="float64") /* ty=Tensor[(195, 2), float64] */;
  %270 = rsqrt(%269) /* ty=Tensor[(195, 2), float64] */;
  %271 = cast(%266, dtype="int64") /* ty=Tensor[(195, 2), int64] */;
  %272 = shape_of(%270, dtype="int32") /* ty=Tensor[(2), int32] */;
  %273 = cast(%270, dtype="int64") /* ty=Tensor[(195, 2), int64] */;
  %274 = dyn.reshape(%271, %272, newshape=[]) /* ty=Tensor[(?, ?), int64] */;
  %275 = %261.2;
  %276 = %264.1;
  %277 = subtract(%273, %274) /* ty=Tensor[(195, 2), int64] */;
  (%275, meta[relay.Constant][20] /* ty=Tensor[(12, 50), float32] */, %var_12849, meta[relay.Constant][21] /* ty=Tensor[(5, 6), bool] */, %var_12851, meta[relay.Constant][22] /* ty=Tensor[(1232), int64] */, %276, %var_12857, %277)
}

def @func_13293() -> (Tensor[(1, 1560), int8],) {
  @func_13291() /* ty=(Tensor[(1, 1560), int8],) */
}

def @func_809(%var_804: Tensor[(4, 7, 3), int8], %var_805: Tensor[(4, 7, 3), int8]) -> (Tensor[(4, 7, 3), int8],) {
  %278 = cast(%var_805, dtype="int8") /* ty=Tensor[(4, 7, 3), int8] */;
  %279 = shape_of(%var_804, dtype="int32") /* ty=Tensor[(3), int32] */;
  %280 = cast(%var_804, dtype="int8") /* ty=Tensor[(4, 7, 3), int8] */;
  %281 = dyn.reshape(%278, %279, newshape=[]) /* ty=Tensor[(?, ?, ?), int8] */;
  %282 = left_shift(%280, %281) /* ty=Tensor[(4, 7, 3), int8] */;
  (%282,)
}

def @func_13953() -> Tensor[(8, 13, 1), float32] {
  %283 = @func_12638() /* ty=(Tensor[(8, 13, 1), float32],) */;
  %283.0
}

def @func_12555() -> (Tensor[(420, 4), float64],) {
  @func_12553() /* ty=(Tensor[(420, 4), float64],) */
}

def @func_12687() -> (Tensor[(1, 1560), int8],) {
  %286 = fn () -> (Tensor[(1, 1560), int8],) {
    %284 = @func_12409() /* ty=(Tensor[(8, 13, 1), float64], Tensor[(56, 22), int64], Tensor[(1024), float64], Tensor[(120), int8], Tensor[(1, 1560), int8], int64, Tensor[(1232), int64]) */;
    %285 = %284.4;
    (%285,)
  };
  %286() /* ty=(Tensor[(1, 1560), int8],) */
}

def @func_2851(%var_2827: int64, %var_2828: Tensor[(11, 8, 14), int64], %var_2839: Tensor[(84), int8]) -> (Tensor[(11, 8, 14), int64], Tensor[(4, 7, 3), int8], Tensor[(84), int8]) {
  %287 = cast(%var_2827, dtype="int64") /* ty=int64 */;
  %288 = cast(%var_2828, dtype="int64") /* ty=Tensor[(11, 8, 14), int64] */;
  %289 = cast(%var_2839, dtype="int8") /* ty=Tensor[(84), int8] */;
  %290 = cast(%var_2839, dtype="int8") /* ty=Tensor[(84), int8] */;
  %291 = reshape(%289, newshape=[4, 7, 3]) /* ty=Tensor[(4, 7, 3), int8] */;
  %292 = reshape(%290, newshape=[4, 7, 3]) /* ty=Tensor[(4, 7, 3), int8] */;
  %293 = @func_809(%291, %292) /* ty=(Tensor[(4, 7, 3), int8],) */;
  %294 = bitwise_and(%287, %288) /* ty=Tensor[(11, 8, 14), int64] */;
  %295 = %293.0;
  (%294, %295, %var_2839)
}

def @func_12638() -> (Tensor[(8, 13, 1), float32],) {
  %296 = @func_11514() /* ty=Tensor[(8, 13, 1), float64] */;
  %297 = cast(%296, dtype="float32") /* ty=Tensor[(8, 13, 1), float32] */;
  %298 = asin(%297) /* ty=Tensor[(8, 13, 1), float32] */;
  (%298,)
}

def @func_14678(%var_14669: Tensor[(4, 1560), int8]) -> (Tensor[(4, 1560), uint64], Tensor[(8, 13, 1), float64]) {
  %299 = @func_12686() /* ty=(Tensor[(1, 1560), int8],) */;
  %300 = %299.0;
  %301 = cast(%300, dtype="uint64") /* ty=Tensor[(1, 1560), uint64] */;
  %302 = cast(%var_14669, dtype="uint64") /* ty=Tensor[(4, 1560), uint64] */;
  %303 = logical_xor(%301, %302) /* ty=Tensor[(4, 1560), uint64] */;
  %304 = @func_11514() /* ty=Tensor[(8, 13, 1), float64] */;
  (%303, %304)
}

def @func_14831(%var_14829: Tensor[(420, 4), float64], %var_14830: Tensor[(420, 4), uint64]) -> (Tensor[(420, 4), uint64], Tensor[(8, 13, 1), float64], Tensor[(420, 4), float32]) {
  @func_14827(%var_14829, %var_14830) /* ty=(Tensor[(420, 4), uint64], Tensor[(8, 13, 1), float64], Tensor[(420, 4), float32]) */
}

def @func_14088() -> Tensor[(8, 13, 1), float64] {
  %305 = @func_11553() /* ty=(Tensor[(8, 13, 1), float64],) */;
  %305.0
}

def @func_13339() -> (Tensor[(8, 13, 1), float64], Tensor[(30), bool], Tensor[(540), float32], Tensor[(80), float64]) {
  %306 = @func_12409() /* ty=(Tensor[(8, 13, 1), float64], Tensor[(56, 22), int64], Tensor[(1024), float64], Tensor[(120), int8], Tensor[(1, 1560), int8], int64, Tensor[(1232), int64]) */;
  %307 = cast(meta[relay.Constant][23] /* ty=Tensor[(540), float32] */, dtype="float32") /* ty=Tensor[(540), float32] */;
  %308 = cast(meta[relay.Constant][24] /* ty=Tensor[(80), float64] */, dtype="float64") /* ty=Tensor[(80), float64] */;
  %309 = reshape(%307, newshape=[6, 15, 6]) /* ty=Tensor[(6, 15, 6), float32] */;
  %310 = reshape(%308, newshape=[80]) /* ty=Tensor[(80), float64] */;
  %311 = @func_7063(%309, %310) /* ty=(Tensor[(6, 15, 6), float32], Tensor[(6, 15, 6), float64], Tensor[(8, 16, 16), uint8], Tensor[(80), float64], Tensor[(1232), int64], Tensor[(30), bool], Tensor[(420), bool], Tensor[(600), float64], Tensor[(70), uint32], Tensor[(700), uint32]) */;
  %312 = %306.0;
  %313 = %311.5;
  (%312, %313, meta[relay.Constant][23] /* ty=Tensor[(540), float32] */, meta[relay.Constant][24] /* ty=Tensor[(80), float64] */)
}

def @func_6556(%var_6549: Tensor[(6, 5, 7), float64], %var_6550: Tensor[(600), float64], %var_6551: Tensor[(42, 2), int8], %var_6552: Tensor[(840, 2), float64], %var_6553: Tensor[(1560), int8], %var_6554: int64, %var_6555: Tensor[(1232), int64]) -> (Tensor[(12, 5, 10), float32], Tensor[(600), float64], Tensor[(4, 7, 3), int8], Tensor[(42, 2), int8], Tensor[(12, 5, 10), float32], Tensor[(16, 15, 7), float64], Tensor[(840, 2), float64], Tensor[(6, 5, 7), bool], Tensor[(6, 5, 7), float64], Tensor[(14, 5, 6), bool], Tensor[(120), int8], Tensor[(1560), int8], int64, Tensor[(1232), int64], Tensor[(16, 6, 13), float64], Tensor[(1248), float64]) {
  %353 = fn (%var_6442: Tensor[(6, 5, 7), float64], %var_6460: Tensor[(600), float64], %var_6468: Tensor[(42, 2), int8], %var_6480: Tensor[(840, 2), float64], %var_6525: Tensor[(1560), int8], %var_6526: int64, %var_6527: Tensor[(1232), int64]) -> (Tensor[(12, 5, 10), float32], Tensor[(600), float64], Tensor[(4, 7, 3), int8], Tensor[(42, 2), int8], Tensor[(12, 5, 10), float32], Tensor[(16, 15, 7), float64], Tensor[(840, 2), float64], Tensor[(6, 5, 7), bool], Tensor[(6, 5, 7), float64], Tensor[(14, 5, 6), bool], Tensor[(120), int8], Tensor[(1560), int8], int64, Tensor[(1232), int64], Tensor[(16, 6, 13), float64], Tensor[(1248), float64]) {
    %314 = cast(%var_6460, dtype="float64") /* ty=Tensor[(600), float64] */;
    %315 = reshape(%314, newshape=[12, 5, 10]) /* ty=Tensor[(12, 5, 10), float64] */;
    %316 = cast(%var_6468, dtype="int8") /* ty=Tensor[(42, 2), int8] */;
    %317 = cast(%var_6468, dtype="int8") /* ty=Tensor[(42, 2), int8] */;
    %318 = reshape(%316, newshape=[4, 7, 3]) /* ty=Tensor[(4, 7, 3), int8] */;
    %319 = reshape(%317, newshape=[4, 7, 3]) /* ty=Tensor[(4, 7, 3), int8] */;
    %320 = @func_809(%318, %319) /* ty=(Tensor[(4, 7, 3), int8],) */;
    %321 = @func_5450(%315) /* ty=Tensor[(12, 5, 10), float32] */;
    %322 = cast(%321, dtype="float64") /* ty=Tensor[(12, 5, 10), float64] */;
    %323 = reshape(%322, newshape=[12, 5, 10]) /* ty=Tensor[(12, 5, 10), float64] */;
    %324 = cast(%var_6480, dtype="float64") /* ty=Tensor[(840, 2), float64] */;
    %325 = reshape(%324, newshape=[16, 15, 7]) /* ty=Tensor[(16, 15, 7), float64] */;
    %326 = cast(%var_6442, dtype="float64") /* ty=Tensor[(6, 5, 7), float64] */;
    %327 = log2(%326) /* ty=Tensor[(6, 5, 7), float64] */;
    %328 = cast(%var_6442, dtype="bool") /* ty=Tensor[(6, 5, 7), bool] */;
    %329 = shape_of(%327, dtype="int32") /* ty=Tensor[(3), int32] */;
    %330 = cast(%327, dtype="bool") /* ty=Tensor[(6, 5, 7), bool] */;
    %331 = dyn.reshape(%328, %329, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    %332 = cast(%var_6442, dtype="float64") /* ty=Tensor[(6, 5, 7), float64] */;
    %333 = cast(meta[relay.Constant][25] /* ty=Tensor[(120), int8] */, dtype="int8") /* ty=Tensor[(120), int8] */;
    %334 = cast(%var_6525, dtype="int8") /* ty=Tensor[(1560), int8] */;
    %335 = cast(%var_6526, dtype="int64") /* ty=int64 */;
    %336 = cast(%var_6527, dtype="int64") /* ty=Tensor[(1232), int64] */;
    %337 = %320.0;
    %338 = cast(%337, dtype="int8") /* ty=Tensor[(4, 7, 3), int8] */;
    %339 = reshape(%333, newshape=[10, 12, 1]) /* ty=Tensor[(10, 12, 1), int8] */;
    %340 = reshape(%334, newshape=[10, 12, 13]) /* ty=Tensor[(10, 12, 13), int8] */;
    %341 = reshape(%335, newshape=[]) /* ty=int64 */;
    %342 = reshape(%336, newshape=[1232]) /* ty=Tensor[(1232), int64] */;
    %343 = reshape(%338, newshape=[84]) /* ty=Tensor[(84), int8] */;
    %344 = @func_4093(%339, %340, %341, %342, %343) /* ty=(Tensor[(10, 12, 13), int8], Tensor[(11, 8, 14), int64], int64, Tensor[(1232), int64], Tensor[(84), int8], Tensor[(14, 5, 6), bool], Tensor[(10, 3), bool], Tensor[(420), bool], Tensor[(4, 7, 3), int8]) */;
    %345 = cast(meta[relay.Constant][26] /* ty=Tensor[(1248), float64] */, dtype="float64") /* ty=Tensor[(1248), float64] */;
    %346 = reshape(%345, newshape=[16, 6, 13]) /* ty=Tensor[(16, 6, 13), float64] */;
    %347 = @func_5450(%323) /* ty=Tensor[(12, 5, 10), float32] */;
    %348 = @func_924(%325) /* ty=Tensor[(16, 15, 7), float64] */;
    %349 = equal(%330, %331) /* ty=Tensor[(6, 5, 7), bool] */;
    %350 = exp(%332) /* ty=Tensor[(6, 5, 7), float64] */;
    %351 = %344.5;
    %352 = @func_5202(%346) /* ty=Tensor[(16, 6, 13), float64] */;
    (%321, %var_6460, %337, %var_6468, %347, %348, %var_6480, %349, %350, %351, meta[relay.Constant][25] /* ty=Tensor[(120), int8] */, %var_6525, %var_6526, %var_6527, %352, meta[relay.Constant][26] /* ty=Tensor[(1248), float64] */)
  };
  %353(%var_6549, %var_6550, %var_6551, %var_6552, %var_6553, %var_6554, %var_6555) /* ty=(Tensor[(12, 5, 10), float32], Tensor[(600), float64], Tensor[(4, 7, 3), int8], Tensor[(42, 2), int8], Tensor[(12, 5, 10), float32], Tensor[(16, 15, 7), float64], Tensor[(840, 2), float64], Tensor[(6, 5, 7), bool], Tensor[(6, 5, 7), float64], Tensor[(14, 5, 6), bool], Tensor[(120), int8], Tensor[(1560), int8], int64, Tensor[(1232), int64], Tensor[(16, 6, 13), float64], Tensor[(1248), float64]) */
}

def @func_813(%var_811: Tensor[(4, 7, 3), int8], %var_812: Tensor[(4, 7, 3), int8]) -> (Tensor[(4, 7, 3), int8],) {
  @func_809(%var_811, %var_812) /* ty=(Tensor[(4, 7, 3), int8],) */
}

def @func_13291() -> (Tensor[(1, 1560), int8],) {
  %354 = @func_12686() /* ty=(Tensor[(1, 1560), int8],) */;
  %355 = %354.0;
  (%355,)
}

def @func_12465(%var_12463: Tensor[(1232), int64], %var_12464: Tensor[(84), int8]) -> (Tensor[(8, 13, 1), float64], Tensor[(10, 12, 13), int8], Tensor[(120), int8], Tensor[(1560), int8], int64, Tensor[(1232), int64], Tensor[(84), int8]) {
  @func_12461(%var_12463, %var_12464) /* ty=(Tensor[(8, 13, 1), float64], Tensor[(10, 12, 13), int8], Tensor[(120), int8], Tensor[(1560), int8], int64, Tensor[(1232), int64], Tensor[(84), int8]) */
}

def @func_5450(%var_5441: Tensor[(12, 5, 10), float64]) -> Tensor[(12, 5, 10), float32] {
  %356 = cast(%var_5441, dtype="float64") /* ty=Tensor[(12, 5, 10), float64] */;
  %357 = log2(%356) /* ty=Tensor[(12, 5, 10), float64] */;
  %358 = cast(meta[relay.Constant][27] /* ty=Tensor[(12, 5, 10), float64] */, dtype="float32") /* ty=Tensor[(12, 5, 10), float32] */;
  %359 = shape_of(%357, dtype="int32") /* ty=Tensor[(3), int32] */;
  %360 = cast(%357, dtype="float32") /* ty=Tensor[(12, 5, 10), float32] */;
  %361 = dyn.reshape(%358, %359, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  power(%360, %361) /* ty=Tensor[(12, 5, 10), float32] */
}

def @func_12611() -> (Tensor[(120), int8], Tensor[(14, 5, 6), float32], Tensor[(30), bool], Tensor[(420), bool]) {
  @func_12609() /* ty=(Tensor[(120), int8], Tensor[(14, 5, 6), float32], Tensor[(30), bool], Tensor[(420), bool]) */
}

def @func_14370() -> Tensor[(420, 4), float64] {
  %362 = fn () -> Tensor[(420, 4), float64] {
    @func_14289() /* ty=Tensor[(420, 4), float64] */
  };
  %362() /* ty=Tensor[(420, 4), float64] */
}

def @func_7366(%var_7364: Tensor[(8, 14, 13), float32], %var_7365: Tensor[(225), uint64]) -> (Tensor[(8, 14, 13), float32], uint64, Tensor[(195), float32], uint64, Tensor[(225), uint64]) {
  @func_7362(%var_7364, %var_7365) /* ty=(Tensor[(8, 14, 13), float32], uint64, Tensor[(195), float32], uint64, Tensor[(225), uint64]) */
}

def @func_14681(%var_14679: Tensor[(4, 1560), int8]) -> (Tensor[(4, 1560), uint64], Tensor[(8, 13, 1), float64]) {
  @func_14678(%var_14679) /* ty=(Tensor[(4, 1560), uint64], Tensor[(8, 13, 1), float64]) */
}

def @func_14894() -> (Tensor[(8, 13, 9), int8], Tensor[(30), bool]) {
  @func_14892() /* ty=(Tensor[(8, 13, 9), int8], Tensor[(30), bool]) */
}

def @func_14090() -> Tensor[(8, 13, 1), float64] {
  @func_14088() /* ty=Tensor[(8, 13, 1), float64] */
}

def @func_13246(%var_13245: Tensor[(2, 1560), int8]) -> (Tensor[(2, 1560), bool],) {
  %368 = fn (%var_13232: Tensor[(2, 1560), int8]) -> (Tensor[(2, 1560), bool],) {
    %363 = @func_12686() /* ty=(Tensor[(1, 1560), int8],) */;
    %364 = %363.0;
    %365 = cast(%364, dtype="bool") /* ty=Tensor[(1, 1560), bool] */;
    %366 = cast(%var_13232, dtype="bool") /* ty=Tensor[(2, 1560), bool] */;
    %367 = equal(%365, %366) /* ty=Tensor[(2, 1560), bool] */;
    (%367,)
  };
  %368(%var_13245) /* ty=(Tensor[(2, 1560), bool],) */
}

def @func_12067(%var_12023: Tensor[(96), uint8], %var_12024: Tensor[(448, 2), int8], %var_12025: Tensor[(1680), float64]) -> (Tensor[(8, 13, 1), float64], Tensor[(96), uint8], Tensor[(1680), float64], Tensor[(1680), float64], Tensor[(448, 2), float32], Tensor[(16, 15, 7), float64], Tensor[(5, 3, 15), int64]) {
  %369 = cast(%var_12024, dtype="int8") /* ty=Tensor[(448, 2), int8] */;
  %370 = cast(%var_12024, dtype="int8") /* ty=Tensor[(448, 2), int8] */;
  %371 = cast(%var_12025, dtype="float64") /* ty=Tensor[(1680), float64] */;
  %372 = reshape(%369, newshape=[4, 14, 16]) /* ty=Tensor[(4, 14, 16), int8] */;
  %373 = reshape(%370, newshape=[4, 14, 16]) /* ty=Tensor[(4, 14, 16), int8] */;
  %374 = reshape(%371, newshape=[1680]) /* ty=Tensor[(1680), float64] */;
  %375 = @func_8937(%372, %373, %374) /* ty=(Tensor[(4, 14, 16), int8], Tensor[(16, 15, 7), float64], Tensor[(1680), float64]) */;
  %376 = cast(%var_12024, dtype="float32") /* ty=Tensor[(448, 2), float32] */;
  %377 = cast(%var_12025, dtype="float64") /* ty=Tensor[(1680), float64] */;
  %378 = reshape(%377, newshape=[16, 15, 7]) /* ty=Tensor[(16, 15, 7), float64] */;
  %379 = cast(%var_12023, dtype="uint8") /* ty=Tensor[(96), uint8] */;
  %380 = cast(%var_12024, dtype="int8") /* ty=Tensor[(448, 2), int8] */;
  %381 = cast(%var_12025, dtype="float64") /* ty=Tensor[(1680), float64] */;
  %382 = cast(meta[relay.Constant][28] /* ty=uint64 */, dtype="uint64") /* ty=uint64 */;
  %383 = reshape(%379, newshape=[96]) /* ty=Tensor[(96), uint8] */;
  %384 = reshape(%380, newshape=[896]) /* ty=Tensor[(896), int8] */;
  %385 = reshape(%381, newshape=[1680, 1]) /* ty=Tensor[(1680, 1), float64] */;
  %386 = reshape(%382, newshape=[]) /* ty=uint64 */;
  %387 = @func_12005(%383, %384, %385, %386) /* ty=(Tensor[(?, 8, 12), bool], Tensor[(96), uint8], Tensor[(16, 15, 7), float64], Tensor[(896), int8], Tensor[(1680, 1), float64], Tensor[(6, 3, 7), uint64], Tensor[(8, 13, 126), float32], Tensor[(8, 13, 126), bool], Tensor[(5, 3, 15), float64], uint64, Tensor[(225, 1), uint64], Tensor[(390), float64]) */;
  %388 = %387.8;
  %389 = cast(%388, dtype="int64") /* ty=Tensor[(5, 3, 15), int64] */;
  %390 = cast(meta[relay.Constant][28] /* ty=uint64 */, dtype="int64") /* ty=int64 */;
  %391 = @func_11690() /* ty=Tensor[(8, 13, 1), float64] */;
  %392 = %375.2;
  %393 = sqrt(%376) /* ty=Tensor[(448, 2), float32] */;
  %394 = @func_924(%378) /* ty=Tensor[(16, 15, 7), float64] */;
  %395 = right_shift(%389, %390) /* ty=Tensor[(5, 3, 15), int64] */;
  (%391, %var_12023, %var_12025, %392, %393, %394, %395)
}

def @main(%var_14972: Tensor[(14, 5, 6), float32]) -> (Tensor[(14, 5, 6), uint64],) {
  %396 = @func_12611() /* ty=(Tensor[(120), int8], Tensor[(14, 5, 6), float32], Tensor[(30), bool], Tensor[(420), bool]) */;
  %397 = %396.1;
  %398 = cast(%var_14972, dtype="uint64") /* ty=Tensor[(14, 5, 6), uint64] */;
  %399 = shape_of(%397, dtype="int32") /* ty=Tensor[(3), int32] */;
  %400 = cast(%397, dtype="uint64") /* ty=Tensor[(14, 5, 6), uint64] */;
  %401 = dyn.reshape(%398, %399, newshape=[]) /* ty=Tensor[(?, ?, ?), uint64] */;
  %402 = logical_xor(%400, %401) /* ty=Tensor[(14, 5, 6), uint64] */;
  (%402,)
}

def @func_1920(%var_1918: Tensor[(8, 16, 16), uint8], %var_1919: Tensor[(8, 16, 16), uint8]) -> (Tensor[(8, 16, 16), uint8],) {
  @func_1916(%var_1918, %var_1919) /* ty=(Tensor[(8, 16, 16), uint8],) */
}

def @func_13143(%var_13141: Tensor[(10, 1560), int8]) -> Tensor[(10, 1560), bool] {
  @func_13140(%var_13141) /* ty=Tensor[(10, 1560), bool] */
}

def @func_14213() -> (Tensor[(6, 3, 7), uint64], Tensor[(8, 13, 1), float64]) {
  %407 = fn () -> (Tensor[(6, 3, 7), uint64], Tensor[(8, 13, 1), float64]) {
    %403 = @func_13478() /* ty=(Tensor[(8, 13, 84), uint32], Tensor[(8, 13, 1), float64], Tensor[(1, 1560), int8], Tensor[(420, 4), uint16], Tensor[(6, 3, 7), uint64], Tensor[(126), float64], Tensor[(420, 4), float64], Tensor[(12, 5, 10), float32], Tensor[(600), float64]) */;
    %404 = @func_11553() /* ty=(Tensor[(8, 13, 1), float64],) */;
    %405 = %403.4;
    %406 = %404.0;
    (%405, %406)
  };
  %407() /* ty=(Tensor[(6, 3, 7), uint64], Tensor[(8, 13, 1), float64]) */
}

def @func_7362(%var_7351: Tensor[(8, 14, 13), float32], %var_7357: Tensor[(225), uint64]) -> (Tensor[(8, 14, 13), float32], uint64, Tensor[(195), float32], uint64, Tensor[(225), uint64]) {
  %408 = cast(%var_7351, dtype="float32") /* ty=Tensor[(8, 14, 13), float32] */;
  %409 = cast(meta[relay.Constant][29] /* ty=Tensor[(195), float32] */, dtype="float32") /* ty=Tensor[(195), float32] */;
  %410 = cast(meta[relay.Constant][30] /* ty=uint64 */, dtype="uint64") /* ty=uint64 */;
  %411 = cast(%var_7357, dtype="uint64") /* ty=Tensor[(225), uint64] */;
  %412 = reshape(%409, newshape=[13, 15, 1]) /* ty=Tensor[(13, 15, 1), float32] */;
  %413 = reshape(%410, newshape=[]) /* ty=uint64 */;
  %414 = reshape(%411, newshape=[25, 9]) /* ty=Tensor[(25, 9), uint64] */;
  %415 = @func_6923(%412, %413, %414) /* ty=(uint64, Tensor[(25, 9), uint64], Tensor[(390), float64], Tensor[(13, 15, 390), int32]) */;
  %416 = acosh(%408) /* ty=Tensor[(8, 14, 13), float32] */;
  %417 = %415.0;
  (%416, %417, meta[relay.Constant][29] /* ty=Tensor[(195), float32] */, meta[relay.Constant][30] /* ty=uint64 */, %var_7357)
}

def @func_11167(%var_11165: Tensor[(6, 5, 1), bool], %var_11166: Tensor[(6, 5, 9), bool]) -> (Tensor[(6, 5, 9), bool], Tensor[(14, 5, 6), bool], Tensor[(420), bool]) {
  %427 = fn (%var_11138: Tensor[(6, 5, 1), bool], %var_11139: Tensor[(6, 5, 9), bool]) -> (Tensor[(6, 5, 9), bool], Tensor[(14, 5, 6), bool], Tensor[(420), bool]) {
    %418 = cast(%var_11138, dtype="bool") /* ty=Tensor[(6, 5, 1), bool] */;
    %419 = cast(%var_11139, dtype="bool") /* ty=Tensor[(6, 5, 9), bool] */;
    %420 = cast(%var_11138, dtype="bool") /* ty=Tensor[(6, 5, 1), bool] */;
    %421 = cast(meta[relay.Constant][31] /* ty=Tensor[(420), bool] */, dtype="bool") /* ty=Tensor[(420), bool] */;
    %422 = reshape(%420, newshape=[1, 5, 6]) /* ty=Tensor[(1, 5, 6), bool] */;
    %423 = reshape(%421, newshape=[14, 5, 6]) /* ty=Tensor[(14, 5, 6), bool] */;
    %424 = @func_2137(%422, %423) /* ty=(Tensor[(14, 5, 6), bool], Tensor[(14, 5, 6), float32]) */;
    %425 = logical_and(%418, %419) /* ty=Tensor[(6, 5, 9), bool] */;
    %426 = %424.0;
    (%425, %426, meta[relay.Constant][31] /* ty=Tensor[(420), bool] */)
  };
  %427(%var_11165, %var_11166) /* ty=(Tensor[(6, 5, 9), bool], Tensor[(14, 5, 6), bool], Tensor[(420), bool]) */
}

def @func_11515() -> Tensor[(8, 13, 1), float64] {
  %429 = fn () -> Tensor[(8, 13, 1), float64] {
    %428 = cast(meta[relay.Constant][32] /* ty=Tensor[(8, 13, 1), float64] */, dtype="float64") /* ty=Tensor[(8, 13, 1), float64] */;
    sin(%428) /* ty=Tensor[(8, 13, 1), float64] */
  };
  %429() /* ty=Tensor[(8, 13, 1), float64] */
}

def @func_13527(%var_13525: Tensor[(12, 1560), int8], %var_13526: Tensor[(12, 1560), float64]) -> (Tensor[(12, 1560), int64], Tensor[(12, 1560), bool], Tensor[(12, 1560), int16]) {
  %448 = fn (%var_13513: Tensor[(12, 1560), int8], %var_13519: Tensor[(12, 1560), float64]) -> (Tensor[(12, 1560), int64], Tensor[(12, 1560), bool], Tensor[(12, 1560), int16]) {
    %430 = @func_13291() /* ty=(Tensor[(1, 1560), int8],) */;
    %431 = %430.0;
    %432 = cast(%431, dtype="int64") /* ty=Tensor[(1, 1560), int64] */;
    %433 = cast(meta[relay.Constant][33] /* ty=Tensor[(12, 1560), int8] */, dtype="int64") /* ty=Tensor[(12, 1560), int64] */;
    %434 = cast(%var_13513, dtype="bool") /* ty=Tensor[(12, 1560), bool] */;
    %435 = shape_of(meta[relay.Constant][33] /* ty=Tensor[(12, 1560), int8] */, dtype="int32") /* ty=Tensor[(2), int32] */;
    %436 = cast(meta[relay.Constant][33] /* ty=Tensor[(12, 1560), int8] */, dtype="bool") /* ty=Tensor[(12, 1560), bool] */;
    %437 = dyn.reshape(%434, %435, newshape=[]) /* ty=Tensor[(?, ?), bool] */;
    %438 = cast(%431, dtype="float64") /* ty=Tensor[(1, 1560), float64] */;
    %439 = cast(meta[relay.Constant][33] /* ty=Tensor[(12, 1560), int8] */, dtype="float64") /* ty=Tensor[(12, 1560), float64] */;
    %440 = mod(%438, %439) /* ty=Tensor[(12, 1560), float64] */;
    %441 = cast(%var_13519, dtype="int16") /* ty=Tensor[(12, 1560), int16] */;
    %442 = shape_of(%440, dtype="int32") /* ty=Tensor[(2), int32] */;
    %443 = cast(%440, dtype="int16") /* ty=Tensor[(12, 1560), int16] */;
    %444 = dyn.reshape(%441, %442, newshape=[]) /* ty=Tensor[(?, ?), int16] */;
    %445 = maximum(%432, %433) /* ty=Tensor[(12, 1560), int64] */;
    %446 = logical_and(%436, %437) /* ty=Tensor[(12, 1560), bool] */;
    %447 = add(%443, %444) /* ty=Tensor[(12, 1560), int16] */;
    (%445, %446, %447)
  };
  %448(%var_13525, %var_13526) /* ty=(Tensor[(12, 1560), int64], Tensor[(12, 1560), bool], Tensor[(12, 1560), int16]) */
}

def @func_7066(%var_7064: Tensor[(6, 15, 6), float32], %var_7065: Tensor[(80), float64]) -> (Tensor[(6, 15, 6), float32], Tensor[(6, 15, 6), float64], Tensor[(8, 16, 16), uint8], Tensor[(80), float64], Tensor[(1232), int64], Tensor[(30), bool], Tensor[(420), bool], Tensor[(600), float64], Tensor[(70), uint32], Tensor[(700), uint32]) {
  %473 = fn (%var_6974: Tensor[(6, 15, 6), float32], %var_6996: Tensor[(80), float64]) -> (Tensor[(6, 15, 6), float32], Tensor[(6, 15, 6), float64], Tensor[(8, 16, 16), uint8], Tensor[(80), float64], Tensor[(1232), int64], Tensor[(30), bool], Tensor[(420), bool], Tensor[(600), float64], Tensor[(70), uint32], Tensor[(700), uint32]) {
    %449 = cast(%var_6974, dtype="float32") /* ty=Tensor[(6, 15, 6), float32] */;
    %450 = cast(%var_6974, dtype="float64") /* ty=Tensor[(6, 15, 6), float64] */;
    %451 = exp(%450) /* ty=Tensor[(6, 15, 6), float64] */;
    %452 = cast(%451, dtype="float64") /* ty=Tensor[(6, 15, 6), float64] */;
    %453 = cast(%var_6996, dtype="float64") /* ty=Tensor[(80), float64] */;
    %454 = cast(meta[relay.Constant][34] /* ty=Tensor[(1232), int64] */, dtype="int64") /* ty=Tensor[(1232), int64] */;
    %455 = cast(meta[relay.Constant][35] /* ty=Tensor[(30), bool] */, dtype="bool") /* ty=Tensor[(30), bool] */;
    %456 = cast(meta[relay.Constant][36] /* ty=Tensor[(420), bool] */, dtype="bool") /* ty=Tensor[(420), bool] */;
    %457 = reshape(%453, newshape=[4, 10, 2]) /* ty=Tensor[(4, 10, 2), float64] */;
    %458 = reshape(%454, newshape=[1232]) /* ty=Tensor[(1232), int64] */;
    %459 = reshape(%455, newshape=[30]) /* ty=Tensor[(30), bool] */;
    %460 = reshape(%456, newshape=[70, 6]) /* ty=Tensor[(70, 6), bool] */;
    %461 = @func_5129(%457, %458, %459, %460) /* ty=(Tensor[(4, 10, 2), float64], Tensor[(1560), int8], int64, Tensor[(1232), int64], Tensor[(1, 84), int8], Tensor[(14, 5, 6), bool], Tensor[(30), bool], Tensor[(70, 6), bool], Tensor[(8, 16, 16), uint8], Tensor[(1, 2048), uint8], Tensor[(60, 2), bool]) */;
    %462 = cast(meta[relay.Constant][37] /* ty=Tensor[(70), uint32] */, dtype="uint32") /* ty=Tensor[(70), uint32] */;
    %463 = cast(meta[relay.Constant][38] /* ty=Tensor[(700), uint32] */, dtype="uint32") /* ty=Tensor[(700), uint32] */;
    %464 = %461.8;
    %465 = cast(%464, dtype="uint8") /* ty=Tensor[(8, 16, 16), uint8] */;
    %466 = reshape(%462, newshape=[1, 5, 14]) /* ty=Tensor[(1, 5, 14), uint32] */;
    %467 = reshape(%463, newshape=[10, 5, 14]) /* ty=Tensor[(10, 5, 14), uint32] */;
    %468 = reshape(%465, newshape=[512, 4]) /* ty=Tensor[(512, 4), uint8] */;
    %469 = @func_6337(%466, %467, %468) /* ty=(Tensor[(12, 5, 10), float32], Tensor[(600), float64], Tensor[(10, 5, 14), float32], Tensor[(4, 7, 3), int8], Tensor[(84), int8], Tensor[(8, 16, 16), uint8], Tensor[(512, 4), uint8], Tensor[(8, 16, 16), uint8]) */;
    %470 = sin(%449) /* ty=Tensor[(6, 15, 6), float32] */;
    %471 = acosh(%452) /* ty=Tensor[(6, 15, 6), float64] */;
    %472 = %469.1;
    (%470, %471, %464, %var_6996, meta[relay.Constant][34] /* ty=Tensor[(1232), int64] */, meta[relay.Constant][35] /* ty=Tensor[(30), bool] */, meta[relay.Constant][36] /* ty=Tensor[(420), bool] */, %472, meta[relay.Constant][37] /* ty=Tensor[(70), uint32] */, meta[relay.Constant][38] /* ty=Tensor[(700), uint32] */)
  };
  %473(%var_7064, %var_7065) /* ty=(Tensor[(6, 15, 6), float32], Tensor[(6, 15, 6), float64], Tensor[(8, 16, 16), uint8], Tensor[(80), float64], Tensor[(1232), int64], Tensor[(30), bool], Tensor[(420), bool], Tensor[(600), float64], Tensor[(70), uint32], Tensor[(700), uint32]) */
}

def @func_7984(%var_7975: Tensor[(6, 3, 7), float64]) -> Tensor[(6, 3, 7), uint64] {
  %474 = cast(%var_7975, dtype="float64") /* ty=Tensor[(6, 3, 7), float64] */;
  %475 = log(%474) /* ty=Tensor[(6, 3, 7), float64] */;
  %476 = cast(%475, dtype="uint64") /* ty=Tensor[(6, 3, 7), uint64] */;
  %477 = shape_of(%var_7975, dtype="int32") /* ty=Tensor[(3), int32] */;
  %478 = cast(%var_7975, dtype="uint64") /* ty=Tensor[(6, 3, 7), uint64] */;
  %479 = dyn.reshape(%476, %477, newshape=[]) /* ty=Tensor[(?, ?, ?), uint64] */;
  bitwise_and(%478, %479) /* ty=Tensor[(6, 3, 7), uint64] */
}

def @func_278(%var_256: Tensor[(6, 13, 5), float64]) -> (Tensor[(6, 13, 5), float64],) {
  %480 = cast(%var_256, dtype="float64") /* ty=Tensor[(6, 13, 5), float64] */;
  %481 = log(%480) /* ty=Tensor[(6, 13, 5), float64] */;
  (%481,)
}

def @func_1916(%var_1904: Tensor[(8, 16, 16), uint8], %var_1905: Tensor[(8, 16, 16), uint8]) -> (Tensor[(8, 16, 16), uint8],) {
  %482 = cast(%var_1905, dtype="uint8") /* ty=Tensor[(8, 16, 16), uint8] */;
  %483 = shape_of(%var_1904, dtype="int32") /* ty=Tensor[(3), int32] */;
  %484 = cast(%var_1904, dtype="uint8") /* ty=Tensor[(8, 16, 16), uint8] */;
  %485 = dyn.reshape(%482, %483, newshape=[]) /* ty=Tensor[(?, ?, ?), uint8] */;
  %486 = minimum(%484, %485) /* ty=Tensor[(8, 16, 16), uint8] */;
  (%486,)
}

def @func_13353() -> Tensor[(1680), float64] {
  @func_13351() /* ty=Tensor[(1680), float64] */
}

def @func_4100(%var_4095: Tensor[(10, 12, 1), int8], %var_4096: Tensor[(10, 12, 13), int8], %var_4097: int64, %var_4098: Tensor[(1232), int64], %var_4099: Tensor[(84), int8]) -> (Tensor[(10, 12, 13), int8], Tensor[(11, 8, 14), int64], int64, Tensor[(1232), int64], Tensor[(84), int8], Tensor[(14, 5, 6), bool], Tensor[(10, 3), bool], Tensor[(420), bool], Tensor[(4, 7, 3), int8]) {
  @func_4093(%var_4095, %var_4096, %var_4097, %var_4098, %var_4099) /* ty=(Tensor[(10, 12, 13), int8], Tensor[(11, 8, 14), int64], int64, Tensor[(1232), int64], Tensor[(84), int8], Tensor[(14, 5, 6), bool], Tensor[(10, 3), bool], Tensor[(420), bool], Tensor[(4, 7, 3), int8]) */
}

def @func_13058(%var_13057: Tensor[(8, 13, 7), float32]) -> Tensor[(8, 13, 7), bool] {
  %491 = fn (%var_13051: Tensor[(8, 13, 7), float32]) -> Tensor[(8, 13, 7), bool] {
    %487 = @func_12638() /* ty=(Tensor[(8, 13, 1), float32],) */;
    %488 = %487.0;
    %489 = cast(%488, dtype="bool") /* ty=Tensor[(8, 13, 1), bool] */;
    %490 = cast(%var_13051, dtype="bool") /* ty=Tensor[(8, 13, 7), bool] */;
    greater_equal(%489, %490) /* ty=Tensor[(8, 13, 7), bool] */
  };
  %491(%var_13057) /* ty=Tensor[(8, 13, 7), bool] */
}

def @func_14484() -> (Tensor[(8, 16, 16), uint8], Tensor[(256, 8), uint8], Tensor[(8, 13, 9), int8]) {
  %492 = cast(meta[relay.Constant][39] /* ty=Tensor[(256, 8), uint8] */, dtype="uint8") /* ty=Tensor[(256, 8), uint8] */;
  %493 = cast(meta[relay.Constant][39] /* ty=Tensor[(256, 8), uint8] */, dtype="uint8") /* ty=Tensor[(256, 8), uint8] */;
  %494 = reshape(%492, newshape=[8, 16, 16]) /* ty=Tensor[(8, 16, 16), uint8] */;
  %495 = reshape(%493, newshape=[8, 16, 16]) /* ty=Tensor[(8, 16, 16), uint8] */;
  %496 = @func_1916(%494, %495) /* ty=(Tensor[(8, 16, 16), uint8],) */;
  %497 = @func_12493() /* ty=(Tensor[(8, 13, 1), float64],) */;
  %498 = %497.0;
  %499 = cast(%498, dtype="int8") /* ty=Tensor[(8, 13, 1), int8] */;
  %500 = cast(meta[relay.Constant][40] /* ty=Tensor[(8, 13, 9), float64] */, dtype="int8") /* ty=Tensor[(8, 13, 9), int8] */;
  %501 = %496.0;
  %502 = bitwise_and(%499, %500) /* ty=Tensor[(8, 13, 9), int8] */;
  (%501, meta[relay.Constant][39] /* ty=Tensor[(256, 8), uint8] */, %502)
}

def @func_10467(%var_10465: Tensor[(16, 15, 6), float32]) -> (Tensor[(16, 15, 6), float32],) {
  @func_10464(%var_10465) /* ty=(Tensor[(16, 15, 6), float32],) */
}

def @func_12669(%var_12665: uint64, %var_12666: Tensor[(225), uint64], %var_12667: Tensor[(390), float64], %var_12668: Tensor[(2, 616), int64]) -> (Tensor[(8, 13, 1), float32], Tensor[(6, 13, 5), float64], uint64, Tensor[(225), uint64], Tensor[(390), float64], Tensor[(10, 12, 13), int8], Tensor[(2, 616), int64], Tensor[(84), int8]) {
  %521 = fn (%var_12651: uint64, %var_12652: Tensor[(225), uint64], %var_12653: Tensor[(390), float64], %var_12661: Tensor[(2, 616), int64]) -> (Tensor[(8, 13, 1), float32], Tensor[(6, 13, 5), float64], uint64, Tensor[(225), uint64], Tensor[(390), float64], Tensor[(10, 12, 13), int8], Tensor[(2, 616), int64], Tensor[(84), int8]) {
    %503 = @func_12493() /* ty=(Tensor[(8, 13, 1), float64],) */;
    %504 = %503.0;
    %505 = cast(%504, dtype="float32") /* ty=Tensor[(8, 13, 1), float32] */;
    %506 = cast(%var_12651, dtype="uint64") /* ty=uint64 */;
    %507 = cast(%var_12652, dtype="uint64") /* ty=Tensor[(225), uint64] */;
    %508 = cast(%var_12653, dtype="float64") /* ty=Tensor[(390), float64] */;
    %509 = reshape(%506, newshape=[]) /* ty=uint64 */;
    %510 = reshape(%507, newshape=[5, 3, 15]) /* ty=Tensor[(5, 3, 15), uint64] */;
    %511 = reshape(%508, newshape=[390]) /* ty=Tensor[(390), float64] */;
    %512 = @func_2974(%509, %510, %511) /* ty=(Tensor[(5, 3, 15), uint16], Tensor[(5, 3, 15), float64], Tensor[(6, 13, 5), float64], Tensor[(390), float64]) */;
    %513 = cast(%var_12661, dtype="int64") /* ty=Tensor[(2, 616), int64] */;
    %514 = cast(meta[relay.Constant][41] /* ty=Tensor[(84), int8] */, dtype="int8") /* ty=Tensor[(84), int8] */;
    %515 = reshape(%513, newshape=[1232]) /* ty=Tensor[(1232), int64] */;
    %516 = reshape(%514, newshape=[84]) /* ty=Tensor[(84), int8] */;
    %517 = @func_12461(%515, %516) /* ty=(Tensor[(8, 13, 1), float64], Tensor[(10, 12, 13), int8], Tensor[(120), int8], Tensor[(1560), int8], int64, Tensor[(1232), int64], Tensor[(84), int8]) */;
    %518 = sigmoid(%505) /* ty=Tensor[(8, 13, 1), float32] */;
    %519 = %512.2;
    %520 = %517.1;
    (%518, %519, %var_12651, %var_12652, %var_12653, %520, %var_12661, meta[relay.Constant][41] /* ty=Tensor[(84), int8] */)
  };
  %521(%var_12665, %var_12666, %var_12667, %var_12668) /* ty=(Tensor[(8, 13, 1), float32], Tensor[(6, 13, 5), float64], uint64, Tensor[(225), uint64], Tensor[(390), float64], Tensor[(10, 12, 13), int8], Tensor[(2, 616), int64], Tensor[(84), int8]) */
}

def @func_12386(%var_12383: Tensor[(30), bool], %var_12384: Tensor[(80, 1), float64], %var_12385: Tensor[(1232), int64]) -> (Tensor[(1680), float64], Tensor[(60, 10), float32], int32, Tensor[(30), bool], Tensor[(1232), int64], Tensor[(80, 1232), bool]) {
  @func_12381(%var_12383, %var_12384, %var_12385) /* ty=(Tensor[(1680), float64], Tensor[(60, 10), float32], int32, Tensor[(30), bool], Tensor[(1232), int64], Tensor[(80, 1232), bool]) */
}

def @func_13219() -> (Tensor[(8, 13, 1), float64], Tensor[(12, 11, 9), int64], Tensor[(9, 132), int64], Tensor[(8, 16, 16), uint8], Tensor[(2048), uint8], Tensor[(1232), int64], Tensor[(8, 13, 84), uint32]) {
  %545 = fn () -> (Tensor[(8, 13, 1), float64], Tensor[(12, 11, 9), int64], Tensor[(9, 132), int64], Tensor[(8, 16, 16), uint8], Tensor[(2048), uint8], Tensor[(1232), int64], Tensor[(8, 13, 84), uint32]) {
    %522 = @func_11553() /* ty=(Tensor[(8, 13, 1), float64],) */;
    %523 = cast(meta[relay.Constant][42] /* ty=Tensor[(9, 132), int64] */, dtype="int64") /* ty=Tensor[(9, 132), int64] */;
    %524 = cast(meta[relay.Constant][42] /* ty=Tensor[(9, 132), int64] */, dtype="int64") /* ty=Tensor[(9, 132), int64] */;
    %525 = reshape(%523, newshape=[12, 11, 9]) /* ty=Tensor[(12, 11, 9), int64] */;
    %526 = reshape(%524, newshape=[12, 11, 9]) /* ty=Tensor[(12, 11, 9), int64] */;
    %527 = @func_7512(%525, %526) /* ty=(Tensor[(12, 11, 9), int64],) */;
    %528 = cast(meta[relay.Constant][43] /* ty=Tensor[(2048), uint8] */, dtype="uint8") /* ty=Tensor[(2048), uint8] */;
    %529 = cast(meta[relay.Constant][43] /* ty=Tensor[(2048), uint8] */, dtype="uint8") /* ty=Tensor[(2048), uint8] */;
    %530 = reshape(%528, newshape=[8, 16, 16]) /* ty=Tensor[(8, 16, 16), uint8] */;
    %531 = reshape(%529, newshape=[8, 16, 16]) /* ty=Tensor[(8, 16, 16), uint8] */;
    %532 = @func_1916(%530, %531) /* ty=(Tensor[(8, 16, 16), uint8],) */;
    %533 = cast(meta[relay.Constant][44] /* ty=Tensor[(1232), int64] */, dtype="int64") /* ty=Tensor[(1232), int64] */;
    %534 = cast(meta[relay.Constant][45] /* ty=Tensor[(84), int8] */, dtype="int8") /* ty=Tensor[(84), int8] */;
    %535 = reshape(%533, newshape=[1232]) /* ty=Tensor[(1232), int64] */;
    %536 = reshape(%534, newshape=[84]) /* ty=Tensor[(84), int8] */;
    %537 = @func_12461(%535, %536) /* ty=(Tensor[(8, 13, 1), float64], Tensor[(10, 12, 13), int8], Tensor[(120), int8], Tensor[(1560), int8], int64, Tensor[(1232), int64], Tensor[(84), int8]) */;
    %538 = %537.0;
    %539 = cast(meta[relay.Constant][45] /* ty=Tensor[(84), int8] */, dtype="uint32") /* ty=Tensor[(84), uint32] */;
    %540 = cast(%538, dtype="uint32") /* ty=Tensor[(8, 13, 1), uint32] */;
    %541 = %522.0;
    %542 = %527.0;
    %543 = %532.0;
    %544 = bitwise_xor(%539, %540) /* ty=Tensor[(8, 13, 84), uint32] */;
    (%541, %542, meta[relay.Constant][42] /* ty=Tensor[(9, 132), int64] */, %543, meta[relay.Constant][43] /* ty=Tensor[(2048), uint8] */, meta[relay.Constant][44] /* ty=Tensor[(1232), int64] */, %544)
  };
  %545() /* ty=(Tensor[(8, 13, 1), float64], Tensor[(12, 11, 9), int64], Tensor[(9, 132), int64], Tensor[(8, 16, 16), uint8], Tensor[(2048), uint8], Tensor[(1232), int64], Tensor[(8, 13, 84), uint32]) */
}

def @func_12494() -> (Tensor[(8, 13, 1), float64],) {
  %547 = fn () -> (Tensor[(8, 13, 1), float64],) {
    %546 = @func_11514() /* ty=Tensor[(8, 13, 1), float64] */;
    (%546,)
  };
  %547() /* ty=(Tensor[(8, 13, 1), float64],) */
}

def @func_6696(%var_6690: Tensor[(8, 8, 16), float64], %var_6691: Tensor[(120), int8], %var_6692: Tensor[(6, 260), int8], %var_6693: int64, %var_6694: Tensor[(56, 22), int64], %var_6695: Tensor[(8, 8, 16), float64]) -> (Tensor[(4, 7, 3), int8], Tensor[(120), int8], Tensor[(6, 260), int8], int64, Tensor[(56, 22), int64], Tensor[(84), int8], Tensor[(8, 8, 16), bool], Tensor[(8, 8, 16), uint64]) {
  @func_6688(%var_6690, %var_6691, %var_6692, %var_6693, %var_6694, %var_6695) /* ty=(Tensor[(4, 7, 3), int8], Tensor[(120), int8], Tensor[(6, 260), int8], int64, Tensor[(56, 22), int64], Tensor[(84), int8], Tensor[(8, 8, 16), bool], Tensor[(8, 8, 16), uint64]) */
}

def @func_12409() -> (Tensor[(8, 13, 1), float64], Tensor[(56, 22), int64], Tensor[(1024), float64], Tensor[(120), int8], Tensor[(1, 1560), int8], int64, Tensor[(1232), int64]) {
  %548 = cast(meta[relay.Constant][46] /* ty=Tensor[(1024), float64] */, dtype="float64") /* ty=Tensor[(1024), float64] */;
  %549 = cast(meta[relay.Constant][47] /* ty=Tensor[(120), int8] */, dtype="int8") /* ty=Tensor[(120), int8] */;
  %550 = cast(meta[relay.Constant][48] /* ty=Tensor[(1, 1560), int8] */, dtype="int8") /* ty=Tensor[(1, 1560), int8] */;
  %551 = cast(4 /* ty=int64 */, dtype="int64") /* ty=int64 */;
  %552 = cast(meta[relay.Constant][49] /* ty=Tensor[(1232), int64] */, dtype="int64") /* ty=Tensor[(1232), int64] */;
  %553 = cast(meta[relay.Constant][46] /* ty=Tensor[(1024), float64] */, dtype="float64") /* ty=Tensor[(1024), float64] */;
  %554 = reshape(%548, newshape=[8, 8, 16]) /* ty=Tensor[(8, 8, 16), float64] */;
  %555 = reshape(%549, newshape=[120]) /* ty=Tensor[(120), int8] */;
  %556 = reshape(%550, newshape=[6, 260]) /* ty=Tensor[(6, 260), int8] */;
  %557 = reshape(%551, newshape=[]) /* ty=int64 */;
  %558 = reshape(%552, newshape=[56, 22]) /* ty=Tensor[(56, 22), int64] */;
  %559 = reshape(%553, newshape=[8, 8, 16]) /* ty=Tensor[(8, 8, 16), float64] */;
  %560 = @func_6688(%554, %555, %556, %557, %558, %559) /* ty=(Tensor[(4, 7, 3), int8], Tensor[(120), int8], Tensor[(6, 260), int8], int64, Tensor[(56, 22), int64], Tensor[(84), int8], Tensor[(8, 8, 16), bool], Tensor[(8, 8, 16), uint64]) */;
  %561 = @func_11514() /* ty=Tensor[(8, 13, 1), float64] */;
  %562 = %560.4;
  (%561, %562, meta[relay.Constant][46] /* ty=Tensor[(1024), float64] */, meta[relay.Constant][47] /* ty=Tensor[(120), int8] */, meta[relay.Constant][48] /* ty=Tensor[(1, 1560), int8] */, 4 /* ty=int64 */, meta[relay.Constant][49] /* ty=Tensor[(1232), int64] */)
}

def @func_12748() -> (Tensor[(8, 13, 1), float64], Tensor[(6, 13, 5), float64], Tensor[(195, 2), float64]) {
  @func_12746() /* ty=(Tensor[(8, 13, 1), float64], Tensor[(6, 13, 5), float64], Tensor[(195, 2), float64]) */
}

def @func_10264(%var_10258: int64, %var_10259: Tensor[(3, 15, 13), int64], %var_10260: Tensor[(1024), float64], %var_10261: Tensor[(1, 1232), int64], %var_10262: Tensor[(600), float64], %var_10263: Tensor[(1680), float64]) -> (Tensor[(3, 15, 13), int64], Tensor[(84), int8], Tensor[(1024), float64], Tensor[(120), int8], Tensor[(1560), int8], Tensor[(1, 1232), int64], Tensor[(1248), float64], Tensor[(600), float64], Tensor[(5, 42), float64], Tensor[(1680), float32]) {
  %601 = fn (%var_10196: int64, %var_10197: Tensor[(3, 15, 13), int64], %var_10203: Tensor[(1024), float64], %var_10206: Tensor[(1, 1232), int64], %var_10222: Tensor[(600), float64], %var_10223: Tensor[(1680), float64]) -> (Tensor[(3, 15, 13), int64], Tensor[(84), int8], Tensor[(1024), float64], Tensor[(120), int8], Tensor[(1560), int8], Tensor[(1, 1232), int64], Tensor[(1248), float64], Tensor[(600), float64], Tensor[(5, 42), float64], Tensor[(1680), float32]) {
    %563 = cast(%var_10196, dtype="int64") /* ty=int64 */;
    %564 = cast(%var_10197, dtype="int64") /* ty=Tensor[(3, 15, 13), int64] */;
    %565 = cast(%var_10203, dtype="float64") /* ty=Tensor[(1024), float64] */;
    %566 = cast(meta[relay.Constant][50] /* ty=Tensor[(120), int8] */, dtype="int8") /* ty=Tensor[(120), int8] */;
    %567 = cast(meta[relay.Constant][51] /* ty=Tensor[(1560), int8] */, dtype="int8") /* ty=Tensor[(1560), int8] */;
    %568 = cast(%var_10196, dtype="int64") /* ty=int64 */;
    %569 = cast(%var_10206, dtype="int64") /* ty=Tensor[(1, 1232), int64] */;
    %570 = cast(%var_10203, dtype="float64") /* ty=Tensor[(1024), float64] */;
    %571 = reshape(%565, newshape=[8, 8, 16]) /* ty=Tensor[(8, 8, 16), float64] */;
    %572 = reshape(%566, newshape=[120]) /* ty=Tensor[(120), int8] */;
    %573 = reshape(%567, newshape=[6, 260]) /* ty=Tensor[(6, 260), int8] */;
    %574 = reshape(%568, newshape=[]) /* ty=int64 */;
    %575 = reshape(%569, newshape=[56, 22]) /* ty=Tensor[(56, 22), int64] */;
    %576 = reshape(%570, newshape=[8, 8, 16]) /* ty=Tensor[(8, 8, 16), float64] */;
    %577 = @func_6688(%571, %572, %573, %574, %575, %576) /* ty=(Tensor[(4, 7, 3), int8], Tensor[(120), int8], Tensor[(6, 260), int8], int64, Tensor[(56, 22), int64], Tensor[(84), int8], Tensor[(8, 8, 16), bool], Tensor[(8, 8, 16), uint64]) */;
    %578 = cast(meta[relay.Constant][52] /* ty=Tensor[(5, 42), float64] */, dtype="float64") /* ty=Tensor[(5, 42), float64] */;
    %579 = cast(%var_10222, dtype="float64") /* ty=Tensor[(600), float64] */;
    %580 = %577.5;
    %581 = cast(%580, dtype="int8") /* ty=Tensor[(84), int8] */;
    %582 = cast(%var_10223, dtype="float64") /* ty=Tensor[(1680), float64] */;
    %583 = cast(meta[relay.Constant][51] /* ty=Tensor[(1560), int8] */, dtype="int8") /* ty=Tensor[(1560), int8] */;
    %584 = cast(%var_10196, dtype="int64") /* ty=int64 */;
    %585 = cast(%var_10206, dtype="int64") /* ty=Tensor[(1, 1232), int64] */;
    %586 = reshape(%578, newshape=[6, 5, 7]) /* ty=Tensor[(6, 5, 7), float64] */;
    %587 = reshape(%579, newshape=[600]) /* ty=Tensor[(600), float64] */;
    %588 = reshape(%581, newshape=[42, 2]) /* ty=Tensor[(42, 2), int8] */;
    %589 = reshape(%582, newshape=[840, 2]) /* ty=Tensor[(840, 2), float64] */;
    %590 = reshape(%583, newshape=[1560]) /* ty=Tensor[(1560), int8] */;
    %591 = reshape(%584, newshape=[]) /* ty=int64 */;
    %592 = reshape(%585, newshape=[1232]) /* ty=Tensor[(1232), int64] */;
    %593 = @func_6548(%586, %587, %588, %589, %590, %591, %592) /* ty=(Tensor[(12, 5, 10), float32], Tensor[(600), float64], Tensor[(4, 7, 3), int8], Tensor[(42, 2), int8], Tensor[(12, 5, 10), float32], Tensor[(16, 15, 7), float64], Tensor[(840, 2), float64], Tensor[(6, 5, 7), bool], Tensor[(6, 5, 7), float64], Tensor[(14, 5, 6), bool], Tensor[(120), int8], Tensor[(1560), int8], int64, Tensor[(1232), int64], Tensor[(16, 6, 13), float64], Tensor[(1248), float64]) */;
    %594 = cast(meta[relay.Constant][52] /* ty=Tensor[(5, 42), float64] */, dtype="float64") /* ty=Tensor[(5, 42), float64] */;
    %595 = cast(%var_10196, dtype="float64") /* ty=float64 */;
    %596 = cast(%var_10223, dtype="float32") /* ty=Tensor[(1680), float32] */;
    %597 = right_shift(%563, %564) /* ty=Tensor[(3, 15, 13), int64] */;
    %598 = %593.15;
    %599 = divide(%594, %595) /* ty=Tensor[(5, 42), float64] */;
    %600 = acos(%596) /* ty=Tensor[(1680), float32] */;
    (%597, %580, %var_10203, meta[relay.Constant][50] /* ty=Tensor[(120), int8] */, meta[relay.Constant][51] /* ty=Tensor[(1560), int8] */, %var_10206, %598, %var_10222, %599, %600)
  };
  %601(%var_10258, %var_10259, %var_10260, %var_10261, %var_10262, %var_10263) /* ty=(Tensor[(3, 15, 13), int64], Tensor[(84), int8], Tensor[(1024), float64], Tensor[(120), int8], Tensor[(1560), int8], Tensor[(1, 1232), int64], Tensor[(1248), float64], Tensor[(600), float64], Tensor[(5, 42), float64], Tensor[(1680), float32]) */
}

def @func_11691() -> Tensor[(8, 13, 1), float64] {
  %603 = fn () -> Tensor[(8, 13, 1), float64] {
    %602 = @func_11553() /* ty=(Tensor[(8, 13, 1), float64],) */;
    %602.0
  };
  %603() /* ty=Tensor[(8, 13, 1), float64] */
}

def @func_5135(%var_5131: Tensor[(4, 10, 2), float64], %var_5132: Tensor[(1232), int64], %var_5133: Tensor[(30), bool], %var_5134: Tensor[(70, 6), bool]) -> (Tensor[(4, 10, 2), float64], Tensor[(1560), int8], int64, Tensor[(1232), int64], Tensor[(1, 84), int8], Tensor[(14, 5, 6), bool], Tensor[(30), bool], Tensor[(70, 6), bool], Tensor[(8, 16, 16), uint8], Tensor[(1, 2048), uint8], Tensor[(60, 2), bool]) {
  @func_5129(%var_5131, %var_5132, %var_5133, %var_5134) /* ty=(Tensor[(4, 10, 2), float64], Tensor[(1560), int8], int64, Tensor[(1232), int64], Tensor[(1, 84), int8], Tensor[(14, 5, 6), bool], Tensor[(30), bool], Tensor[(70, 6), bool], Tensor[(8, 16, 16), uint8], Tensor[(1, 2048), uint8], Tensor[(60, 2), bool]) */
}

def @func_12184(%var_12183: Tensor[(420, 4), float64]) -> (Tensor[(16, 15, 7), float64], Tensor[(420, 4), float64], Tensor[(8, 13, 896), int64]) {
  %619 = fn (%var_12163: Tensor[(420, 4), float64]) -> (Tensor[(16, 15, 7), float64], Tensor[(420, 4), float64], Tensor[(8, 13, 896), int64]) {
    %604 = cast(meta[relay.Constant][53] /* ty=Tensor[(896), int8] */, dtype="int8") /* ty=Tensor[(896), int8] */;
    %605 = cast(meta[relay.Constant][53] /* ty=Tensor[(896), int8] */, dtype="int8") /* ty=Tensor[(896), int8] */;
    %606 = cast(%var_12163, dtype="float64") /* ty=Tensor[(420, 4), float64] */;
    %607 = reshape(%604, newshape=[4, 14, 16]) /* ty=Tensor[(4, 14, 16), int8] */;
    %608 = reshape(%605, newshape=[4, 14, 16]) /* ty=Tensor[(4, 14, 16), int8] */;
    %609 = reshape(%606, newshape=[1680]) /* ty=Tensor[(1680), float64] */;
    %610 = @func_8937(%607, %608, %609) /* ty=(Tensor[(4, 14, 16), int8], Tensor[(16, 15, 7), float64], Tensor[(1680), float64]) */;
    %611 = @func_11553() /* ty=(Tensor[(8, 13, 1), float64],) */;
    %612 = %611.0;
    %613 = cast(%612, dtype="float64") /* ty=Tensor[(8, 13, 1), float64] */;
    %614 = sinh(%613) /* ty=Tensor[(8, 13, 1), float64] */;
    %615 = cast(%614, dtype="int64") /* ty=Tensor[(8, 13, 1), int64] */;
    %616 = cast(meta[relay.Constant][53] /* ty=Tensor[(896), int8] */, dtype="int64") /* ty=Tensor[(896), int64] */;
    %617 = %610.1;
    %618 = subtract(%615, %616) /* ty=Tensor[(8, 13, 896), int64] */;
    (%617, %var_12163, %618)
  };
  %619(%var_12183) /* ty=(Tensor[(16, 15, 7), float64], Tensor[(420, 4), float64], Tensor[(8, 13, 896), int64]) */
}

def @func_13351() -> Tensor[(1680), float64] {
  %620 = @func_12296() /* ty=(Tensor[(8, 13, 1), float64], Tensor[(420, 4), float64], Tensor[(1680), float64]) */;
  %620.2
}

def @func_12609() -> (Tensor[(120), int8], Tensor[(14, 5, 6), float32], Tensor[(30), bool], Tensor[(420), bool]) {
  %621 = @func_12409() /* ty=(Tensor[(8, 13, 1), float64], Tensor[(56, 22), int64], Tensor[(1024), float64], Tensor[(120), int8], Tensor[(1, 1560), int8], int64, Tensor[(1232), int64]) */;
  %622 = cast(meta[relay.Constant][54] /* ty=Tensor[(30), bool] */, dtype="bool") /* ty=Tensor[(30), bool] */;
  %623 = cast(meta[relay.Constant][55] /* ty=Tensor[(420), bool] */, dtype="bool") /* ty=Tensor[(420), bool] */;
  %624 = reshape(%622, newshape=[1, 5, 6]) /* ty=Tensor[(1, 5, 6), bool] */;
  %625 = reshape(%623, newshape=[14, 5, 6]) /* ty=Tensor[(14, 5, 6), bool] */;
  %626 = @func_2137(%624, %625) /* ty=(Tensor[(14, 5, 6), bool], Tensor[(14, 5, 6), float32]) */;
  %627 = %621.3;
  %628 = %626.1;
  (%627, %628, meta[relay.Constant][54] /* ty=Tensor[(30), bool] */, meta[relay.Constant][55] /* ty=Tensor[(420), bool] */)
}

def @func_12891(%var_12888: int32, %var_12889: Tensor[(80), float64], %var_12890: Tensor[(195), float32]) -> (int32, Tensor[(12, 50), float32], int32, Tensor[(5, 6), bool], Tensor[(80), float64], Tensor[(1232), int64], Tensor[(1440), float32], Tensor[(195), float32], Tensor[(195, 2), int64]) {
  @func_12886(%var_12888, %var_12889, %var_12890) /* ty=(int32, Tensor[(12, 50), float32], int32, Tensor[(5, 6), bool], Tensor[(80), float64], Tensor[(1232), int64], Tensor[(1440), float32], Tensor[(195), float32], Tensor[(195, 2), int64]) */
}

def @func_13724(%var_13722: Tensor[(420, 4), float64], %var_13723: int32) -> (Tensor[(420, 4), bool], Tensor[(420), bool], int32, Tensor[(84), int8], Tensor[(10, 3), bool], Tensor[(80), float64], Tensor[(1232), int64], Tensor[(420, 4), uint32]) {
  @func_13720(%var_13722, %var_13723) /* ty=(Tensor[(420, 4), bool], Tensor[(420), bool], int32, Tensor[(84), int8], Tensor[(10, 3), bool], Tensor[(80), float64], Tensor[(1232), int64], Tensor[(420, 4), uint32]) */
}

def @func_11854(%var_11849: Tensor[(8, 13, 12), float64], %var_11850: Tensor[(126), float64], %var_11851: int32, %var_11852: Tensor[(84), int8], %var_11853: Tensor[(30), bool]) -> (Tensor[(8, 13, 12), uint64], Tensor[(6, 3, 7), uint64], Tensor[(126), float64], int64, int32, Tensor[(84), int8], Tensor[(30), bool], Tensor[(1232), int64], Tensor[(1, 80), float32]) {
  @func_11847(%var_11849, %var_11850, %var_11851, %var_11852, %var_11853) /* ty=(Tensor[(8, 13, 12), uint64], Tensor[(6, 3, 7), uint64], Tensor[(126), float64], int64, int32, Tensor[(84), int8], Tensor[(30), bool], Tensor[(1232), int64], Tensor[(1, 80), float32]) */
}

def @func_12553() -> (Tensor[(420, 4), float64],) {
  %629 = @func_12536() /* ty=Tensor[(420, 4), float64] */;
  %630 = cast(%629, dtype="float64") /* ty=Tensor[(420, 4), float64] */;
  %631 = asin(%630) /* ty=Tensor[(420, 4), float64] */;
  (%631,)
}

def @func_12411() -> (Tensor[(8, 13, 1), float64], Tensor[(56, 22), int64], Tensor[(1024), float64], Tensor[(120), int8], Tensor[(1, 1560), int8], int64, Tensor[(1232), int64]) {
  @func_12409() /* ty=(Tensor[(8, 13, 1), float64], Tensor[(56, 22), int64], Tensor[(1024), float64], Tensor[(120), int8], Tensor[(1, 1560), int8], int64, Tensor[(1232), int64]) */
}

def @func_6927(%var_6924: Tensor[(13, 15, 1), float32], %var_6925: uint64, %var_6926: Tensor[(25, 9), uint64]) -> (uint64, Tensor[(25, 9), uint64], Tensor[(390), float64], Tensor[(13, 15, 390), int32]) {
  %645 = fn (%var_6887: Tensor[(13, 15, 1), float32], %var_6894: uint64, %var_6895: Tensor[(25, 9), uint64]) -> (uint64, Tensor[(25, 9), uint64], Tensor[(390), float64], Tensor[(13, 15, 390), int32]) {
    %632 = cast(%var_6887, dtype="float32") /* ty=Tensor[(13, 15, 1), float32] */;
    %633 = cos(%632) /* ty=Tensor[(13, 15, 1), float32] */;
    %634 = cast(%var_6894, dtype="uint64") /* ty=uint64 */;
    %635 = cast(%var_6895, dtype="uint64") /* ty=Tensor[(25, 9), uint64] */;
    %636 = cast(meta[relay.Constant][56] /* ty=Tensor[(390), float64] */, dtype="float64") /* ty=Tensor[(390), float64] */;
    %637 = reshape(%634, newshape=[]) /* ty=uint64 */;
    %638 = reshape(%635, newshape=[5, 3, 15]) /* ty=Tensor[(5, 3, 15), uint64] */;
    %639 = reshape(%636, newshape=[390]) /* ty=Tensor[(390), float64] */;
    %640 = @func_2974(%637, %638, %639) /* ty=(Tensor[(5, 3, 15), uint16], Tensor[(5, 3, 15), float64], Tensor[(6, 13, 5), float64], Tensor[(390), float64]) */;
    %641 = %640.3;
    %642 = cast(%633, dtype="int32") /* ty=Tensor[(13, 15, 1), int32] */;
    %643 = cast(%641, dtype="int32") /* ty=Tensor[(390), int32] */;
    %644 = bitwise_xor(%642, %643) /* ty=Tensor[(13, 15, 390), int32] */;
    (%var_6894, %var_6895, meta[relay.Constant][56] /* ty=Tensor[(390), float64] */, %644)
  };
  %645(%var_6924, %var_6925, %var_6926) /* ty=(uint64, Tensor[(25, 9), uint64], Tensor[(390), float64], Tensor[(13, 15, 390), int32]) */
}

def @func_14486() -> (Tensor[(8, 16, 16), uint8], Tensor[(256, 8), uint8], Tensor[(8, 13, 9), int8]) {
  @func_14484() /* ty=(Tensor[(8, 16, 16), uint8], Tensor[(256, 8), uint8], Tensor[(8, 13, 9), int8]) */
}

def @func_12776() -> (Tensor[(420, 4), float64], Tensor[(420, 4), float32]) {
  %646 = @func_12296() /* ty=(Tensor[(8, 13, 1), float64], Tensor[(420, 4), float64], Tensor[(1680), float64]) */;
  %647 = %646.1;
  %648 = cast(%647, dtype="float64") /* ty=Tensor[(420, 4), float64] */;
  %649 = cast(%647, dtype="float32") /* ty=Tensor[(420, 4), float32] */;
  %650 = sqrt(%648) /* ty=Tensor[(420, 4), float64] */;
  %651 = log10(%649) /* ty=Tensor[(420, 4), float32] */;
  (%650, %651)
}

def @func_13479() -> (Tensor[(8, 13, 84), uint32], Tensor[(8, 13, 1), float64], Tensor[(1, 1560), int8], Tensor[(420, 4), uint16], Tensor[(6, 3, 7), uint64], Tensor[(126), float64], Tensor[(420, 4), float64], Tensor[(12, 5, 10), float32], Tensor[(600), float64]) {
  %680 = fn () -> (Tensor[(8, 13, 84), uint32], Tensor[(8, 13, 1), float64], Tensor[(1, 1560), int8], Tensor[(420, 4), uint16], Tensor[(6, 3, 7), uint64], Tensor[(126), float64], Tensor[(420, 4), float64], Tensor[(12, 5, 10), float32], Tensor[(600), float64]) {
    %652 = @func_13218() /* ty=(Tensor[(8, 13, 1), float64], Tensor[(12, 11, 9), int64], Tensor[(9, 132), int64], Tensor[(8, 16, 16), uint8], Tensor[(2048), uint8], Tensor[(1232), int64], Tensor[(8, 13, 84), uint32]) */;
    %653 = @func_12296() /* ty=(Tensor[(8, 13, 1), float64], Tensor[(420, 4), float64], Tensor[(1680), float64]) */;
    %654 = @func_13291() /* ty=(Tensor[(1, 1560), int8],) */;
    %655 = @func_12553() /* ty=(Tensor[(420, 4), float64],) */;
    %656 = %655.0;
    %657 = cast(%656, dtype="float64") /* ty=Tensor[(420, 4), float64] */;
    %658 = log2(%657) /* ty=Tensor[(420, 4), float64] */;
    %659 = cast(%658, dtype="int16") /* ty=Tensor[(420, 4), int16] */;
    %660 = shape_of(%656, dtype="int32") /* ty=Tensor[(2), int32] */;
    %661 = cast(%656, dtype="int16") /* ty=Tensor[(420, 4), int16] */;
    %662 = dyn.reshape(%659, %660, newshape=[]) /* ty=Tensor[(?, ?), int16] */;
    %663 = subtract(%661, %662) /* ty=Tensor[(420, 4), int16] */;
    %664 = cast(%656, dtype="uint16") /* ty=Tensor[(420, 4), uint16] */;
    %665 = shape_of(%663, dtype="int32") /* ty=Tensor[(2), int32] */;
    %666 = cast(%663, dtype="uint16") /* ty=Tensor[(420, 4), uint16] */;
    %667 = dyn.reshape(%664, %665, newshape=[]) /* ty=Tensor[(?, ?), uint16] */;
    %668 = cast(meta[relay.Constant][57] /* ty=Tensor[(126), float64] */, dtype="float64") /* ty=Tensor[(126), float64] */;
    %669 = reshape(%668, newshape=[6, 3, 7]) /* ty=Tensor[(6, 3, 7), float64] */;
    %670 = cast(%656, dtype="float64") /* ty=Tensor[(420, 4), float64] */;
    %671 = cast(meta[relay.Constant][58] /* ty=Tensor[(600), float64] */, dtype="float64") /* ty=Tensor[(600), float64] */;
    %672 = reshape(%671, newshape=[12, 5, 10]) /* ty=Tensor[(12, 5, 10), float64] */;
    %673 = %652.6;
    %674 = %653.0;
    %675 = %654.0;
    %676 = left_shift(%666, %667) /* ty=Tensor[(420, 4), uint16] */;
    %677 = @func_7984(%669) /* ty=Tensor[(6, 3, 7), uint64] */;
    %678 = cos(%670) /* ty=Tensor[(420, 4), float64] */;
    %679 = @func_5450(%672) /* ty=Tensor[(12, 5, 10), float32] */;
    (%673, %674, %675, %676, %677, meta[relay.Constant][57] /* ty=Tensor[(126), float64] */, %678, %679, meta[relay.Constant][58] /* ty=Tensor[(600), float64] */)
  };
  %680() /* ty=(Tensor[(8, 13, 84), uint32], Tensor[(8, 13, 1), float64], Tensor[(1, 1560), int8], Tensor[(420, 4), uint16], Tensor[(6, 3, 7), uint64], Tensor[(126), float64], Tensor[(420, 4), float64], Tensor[(12, 5, 10), float32], Tensor[(600), float64]) */
}

def @func_281(%var_279: Tensor[(6, 13, 5), float64]) -> (Tensor[(6, 13, 5), float64],) {
  @func_278(%var_279) /* ty=(Tensor[(6, 13, 5), float64],) */
}

def @func_5453(%var_5451: Tensor[(12, 5, 10), float64]) -> Tensor[(12, 5, 10), float32] {
  @func_5450(%var_5451) /* ty=Tensor[(12, 5, 10), float32] */
}

def @func_7622(%var_7621: Tensor[(9, 3, 6), float64]) -> (Tensor[(9, 3, 6), float64],) {
  %683 = fn (%var_7612: Tensor[(9, 3, 6), float64]) -> (Tensor[(9, 3, 6), float64],) {
    %681 = cast(%var_7612, dtype="float64") /* ty=Tensor[(9, 3, 6), float64] */;
    %682 = log(%681) /* ty=Tensor[(9, 3, 6), float64] */;
    (%682,)
  };
  %683(%var_7621) /* ty=(Tensor[(9, 3, 6), float64],) */
}

def @func_13140(%var_13134: Tensor[(10, 1560), int8]) -> Tensor[(10, 1560), bool] {
  %684 = @func_12686() /* ty=(Tensor[(1, 1560), int8],) */;
  %685 = %684.0;
  %686 = cast(%685, dtype="bool") /* ty=Tensor[(1, 1560), bool] */;
  %687 = cast(%var_13134, dtype="bool") /* ty=Tensor[(10, 1560), bool] */;
  not_equal(%686, %687) /* ty=Tensor[(10, 1560), bool] */
}

def @func_12778() -> (Tensor[(420, 4), float64], Tensor[(420, 4), float32]) {
  @func_12776() /* ty=(Tensor[(420, 4), float64], Tensor[(420, 4), float32]) */
}

def @func_14510(%var_14509: Tensor[(420, 4), float64]) -> Tensor[(420, 4), int64] {
  %694 = fn (%var_14501: Tensor[(420, 4), float64]) -> Tensor[(420, 4), int64] {
    %688 = @func_12553() /* ty=(Tensor[(420, 4), float64],) */;
    %689 = %688.0;
    %690 = cast(%var_14501, dtype="int64") /* ty=Tensor[(420, 4), int64] */;
    %691 = shape_of(%689, dtype="int32") /* ty=Tensor[(2), int32] */;
    %692 = cast(%689, dtype="int64") /* ty=Tensor[(420, 4), int64] */;
    %693 = dyn.reshape(%690, %691, newshape=[]) /* ty=Tensor[(?, ?), int64] */;
    minimum(%692, %693) /* ty=Tensor[(420, 4), int64] */
  };
  %694(%var_14509) /* ty=Tensor[(420, 4), int64] */
}

def @func_14318() -> (Tensor[(8, 13, 1), float32],) {
  %697 = fn () -> (Tensor[(8, 13, 1), float32],) {
    %695 = @func_12638() /* ty=(Tensor[(8, 13, 1), float32],) */;
    %696 = %695.0;
    (%696,)
  };
  %697() /* ty=(Tensor[(8, 13, 1), float32],) */
}

def @func_351(%var_310: Tensor[(1, 16, 9), float32], %var_334: Tensor[(390), float64]) -> (Tensor[(?, 16, 9), bool], Tensor[(6, 13, 5), float64], Tensor[(390), float64]) {
  %698 = cast(%var_310, dtype="float32") /* ty=Tensor[(1, 16, 9), float32] */;
  %699 = sin(%698) /* ty=Tensor[(1, 16, 9), float32] */;
  %700 = cast(%var_310, dtype="bool") /* ty=Tensor[(1, 16, 9), bool] */;
  %701 = shape_of(%699, dtype="int32") /* ty=Tensor[(3), int32] */;
  %702 = cast(%699, dtype="bool") /* ty=Tensor[(1, 16, 9), bool] */;
  %703 = dyn.reshape(%700, %701, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %704 = cast(%var_334, dtype="float64") /* ty=Tensor[(390), float64] */;
  %705 = reshape(%704, newshape=[6, 13, 5]) /* ty=Tensor[(6, 13, 5), float64] */;
  %706 = @func_278(%705) /* ty=(Tensor[(6, 13, 5), float64],) */;
  %707 = greater_equal(%702, %703) /* ty=Tensor[(?, 16, 9), bool] */;
  %708 = %706.0;
  (%707, %708, %var_334)
}

def @func_2140(%var_2138: Tensor[(1, 5, 6), bool], %var_2139: Tensor[(14, 5, 6), bool]) -> (Tensor[(14, 5, 6), bool], Tensor[(14, 5, 6), float32]) {
  %714 = fn (%var_2114: Tensor[(1, 5, 6), bool], %var_2115: Tensor[(14, 5, 6), bool]) -> (Tensor[(14, 5, 6), bool], Tensor[(14, 5, 6), float32]) {
    %709 = cast(%var_2114, dtype="bool") /* ty=Tensor[(1, 5, 6), bool] */;
    %710 = cast(%var_2115, dtype="bool") /* ty=Tensor[(14, 5, 6), bool] */;
    %711 = cast(%var_2115, dtype="float32") /* ty=Tensor[(14, 5, 6), float32] */;
    %712 = logical_or(%709, %710) /* ty=Tensor[(14, 5, 6), bool] */;
    %713 = cosh(%711) /* ty=Tensor[(14, 5, 6), float32] */;
    (%712, %713)
  };
  %714(%var_2138, %var_2139) /* ty=(Tensor[(14, 5, 6), bool], Tensor[(14, 5, 6), float32]) */
}

def @func_4093(%var_4045: Tensor[(10, 12, 1), int8], %var_4046: Tensor[(10, 12, 13), int8], %var_4051: int64, %var_4052: Tensor[(1232), int64], %var_4053: Tensor[(84), int8]) -> (Tensor[(10, 12, 13), int8], Tensor[(11, 8, 14), int64], int64, Tensor[(1232), int64], Tensor[(84), int8], Tensor[(14, 5, 6), bool], Tensor[(10, 3), bool], Tensor[(420), bool], Tensor[(4, 7, 3), int8]) {
  %715 = cast(%var_4045, dtype="int8") /* ty=Tensor[(10, 12, 1), int8] */;
  %716 = cast(%var_4046, dtype="int8") /* ty=Tensor[(10, 12, 13), int8] */;
  %717 = cast(%var_4051, dtype="int64") /* ty=int64 */;
  %718 = cast(%var_4052, dtype="int64") /* ty=Tensor[(1232), int64] */;
  %719 = cast(%var_4053, dtype="int8") /* ty=Tensor[(84), int8] */;
  %720 = reshape(%717, newshape=[]) /* ty=int64 */;
  %721 = reshape(%718, newshape=[11, 8, 14]) /* ty=Tensor[(11, 8, 14), int64] */;
  %722 = reshape(%719, newshape=[84]) /* ty=Tensor[(84), int8] */;
  %723 = @func_2851(%720, %721, %722) /* ty=(Tensor[(11, 8, 14), int64], Tensor[(4, 7, 3), int8], Tensor[(84), int8]) */;
  %724 = cast(meta[relay.Constant][59] /* ty=Tensor[(10, 3), bool] */, dtype="bool") /* ty=Tensor[(10, 3), bool] */;
  %725 = cast(meta[relay.Constant][60] /* ty=Tensor[(420), bool] */, dtype="bool") /* ty=Tensor[(420), bool] */;
  %726 = reshape(%724, newshape=[1, 5, 6]) /* ty=Tensor[(1, 5, 6), bool] */;
  %727 = reshape(%725, newshape=[14, 5, 6]) /* ty=Tensor[(14, 5, 6), bool] */;
  %728 = @func_2137(%726, %727) /* ty=(Tensor[(14, 5, 6), bool], Tensor[(14, 5, 6), float32]) */;
  %729 = cast(%var_4053, dtype="int8") /* ty=Tensor[(84), int8] */;
  %730 = cast(%var_4053, dtype="int8") /* ty=Tensor[(84), int8] */;
  %731 = reshape(%729, newshape=[4, 7, 3]) /* ty=Tensor[(4, 7, 3), int8] */;
  %732 = reshape(%730, newshape=[4, 7, 3]) /* ty=Tensor[(4, 7, 3), int8] */;
  %733 = @func_809(%731, %732) /* ty=(Tensor[(4, 7, 3), int8],) */;
  %734 = left_shift(%715, %716) /* ty=Tensor[(10, 12, 13), int8] */;
  %735 = %723.0;
  %736 = %728.0;
  %737 = %733.0;
  (%734, %735, %var_4051, %var_4052, %var_4053, %736, meta[relay.Constant][59] /* ty=Tensor[(10, 3), bool] */, meta[relay.Constant][60] /* ty=Tensor[(420), bool] */, %737)
}

def @func_13644() -> (Tensor[(420, 4), float64],) {
  @func_13642() /* ty=(Tensor[(420, 4), float64],) */
}

def @func_13955() -> Tensor[(8, 13, 1), float32] {
  @func_13953() /* ty=Tensor[(8, 13, 1), float32] */
}

def @func_7987(%var_7985: Tensor[(6, 3, 7), float64]) -> Tensor[(6, 3, 7), uint64] {
  @func_7984(%var_7985) /* ty=Tensor[(6, 3, 7), uint64] */
}

def @func_13341() -> (Tensor[(8, 13, 1), float64], Tensor[(30), bool], Tensor[(540), float32], Tensor[(80), float64]) {
  @func_13339() /* ty=(Tensor[(8, 13, 1), float64], Tensor[(30), bool], Tensor[(540), float32], Tensor[(80), float64]) */
}

def @func_12746() -> (Tensor[(8, 13, 1), float64], Tensor[(6, 13, 5), float64], Tensor[(195, 2), float64]) {
  %738 = cast(meta[relay.Constant][61] /* ty=Tensor[(195, 2), float64] */, dtype="float64") /* ty=Tensor[(195, 2), float64] */;
  %739 = reshape(%738, newshape=[6, 13, 5]) /* ty=Tensor[(6, 13, 5), float64] */;
  %740 = @func_278(%739) /* ty=(Tensor[(6, 13, 5), float64],) */;
  %741 = @func_11514() /* ty=Tensor[(8, 13, 1), float64] */;
  %742 = %740.0;
  (%741, %742, meta[relay.Constant][61] /* ty=Tensor[(195, 2), float64] */)
}

def @func_12253(%var_12250: Tensor[(9, 4, 10), float64], %var_12251: Tensor[(84), bool], %var_12252: Tensor[(1344), bool]) -> (Tensor[(9, 4, 10), float64], Tensor[(6, 16, 14), uint64], Tensor[(84), bool], Tensor[(1344), bool], Tensor[(16, 15, 7), float64], Tensor[(896), int8], Tensor[(84, 20), float64]) {
  %762 = fn (%var_12226: Tensor[(9, 4, 10), float64], %var_12233: Tensor[(84), bool], %var_12234: Tensor[(1344), bool]) -> (Tensor[(9, 4, 10), float64], Tensor[(6, 16, 14), uint64], Tensor[(84), bool], Tensor[(1344), bool], Tensor[(16, 15, 7), float64], Tensor[(896), int8], Tensor[(84, 20), float64]) {
    %743 = cast(meta[relay.Constant][62] /* ty=Tensor[(9, 4, 10), float64] */, dtype="float64") /* ty=Tensor[(9, 4, 10), float64] */;
    %744 = shape_of(%var_12226, dtype="int32") /* ty=Tensor[(3), int32] */;
    %745 = cast(%var_12226, dtype="float64") /* ty=Tensor[(9, 4, 10), float64] */;
    %746 = dyn.reshape(%743, %744, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
    %747 = cast(%var_12233, dtype="bool") /* ty=Tensor[(84), bool] */;
    %748 = cast(%var_12234, dtype="bool") /* ty=Tensor[(1344), bool] */;
    %749 = reshape(%747, newshape=[84]) /* ty=Tensor[(84), bool] */;
    %750 = reshape(%748, newshape=[6, 16, 14]) /* ty=Tensor[(6, 16, 14), bool] */;
    %751 = @func_11662(%749, %750) /* ty=(Tensor[(8, 13, 1), float64], Tensor[(84), bool], Tensor[(1344), bool], Tensor[(6, 16, 14), uint64]) */;
    %752 = cast(meta[relay.Constant][63] /* ty=Tensor[(896), int8] */, dtype="int8") /* ty=Tensor[(896), int8] */;
    %753 = cast(meta[relay.Constant][63] /* ty=Tensor[(896), int8] */, dtype="int8") /* ty=Tensor[(896), int8] */;
    %754 = cast(meta[relay.Constant][64] /* ty=Tensor[(84, 20), float64] */, dtype="float64") /* ty=Tensor[(84, 20), float64] */;
    %755 = reshape(%752, newshape=[4, 14, 16]) /* ty=Tensor[(4, 14, 16), int8] */;
    %756 = reshape(%753, newshape=[4, 14, 16]) /* ty=Tensor[(4, 14, 16), int8] */;
    %757 = reshape(%754, newshape=[1680]) /* ty=Tensor[(1680), float64] */;
    %758 = @func_8937(%755, %756, %757) /* ty=(Tensor[(4, 14, 16), int8], Tensor[(16, 15, 7), float64], Tensor[(1680), float64]) */;
    %759 = floor_mod(%745, %746) /* ty=Tensor[(9, 4, 10), float64] */;
    %760 = %751.3;
    %761 = %758.1;
    (%759, %760, %var_12233, %var_12234, %761, meta[relay.Constant][63] /* ty=Tensor[(896), int8] */, meta[relay.Constant][64] /* ty=Tensor[(84, 20), float64] */)
  };
  %762(%var_12250, %var_12251, %var_12252) /* ty=(Tensor[(9, 4, 10), float64], Tensor[(6, 16, 14), uint64], Tensor[(84), bool], Tensor[(1344), bool], Tensor[(16, 15, 7), float64], Tensor[(896), int8], Tensor[(84, 20), float64]) */
}

def @func_14827(%var_14777: Tensor[(420, 4), float64], %var_14802: Tensor[(420, 4), uint64]) -> (Tensor[(420, 4), uint64], Tensor[(8, 13, 1), float64], Tensor[(420, 4), float32]) {
  %763 = @func_12536() /* ty=Tensor[(420, 4), float64] */;
  %764 = cast(%var_14777, dtype="uint64") /* ty=Tensor[(420, 4), uint64] */;
  %765 = shape_of(%763, dtype="int32") /* ty=Tensor[(2), int32] */;
  %766 = cast(%763, dtype="uint64") /* ty=Tensor[(420, 4), uint64] */;
  %767 = dyn.reshape(%764, %765, newshape=[]) /* ty=Tensor[(?, ?), uint64] */;
  %768 = add(%766, %767) /* ty=Tensor[(420, 4), uint64] */;
  %769 = cast(%var_14802, dtype="uint64") /* ty=Tensor[(420, 4), uint64] */;
  %770 = shape_of(%768, dtype="int32") /* ty=Tensor[(2), int32] */;
  %771 = cast(%768, dtype="uint64") /* ty=Tensor[(420, 4), uint64] */;
  %772 = dyn.reshape(%769, %770, newshape=[]) /* ty=Tensor[(?, ?), uint64] */;
  %773 = @func_12409() /* ty=(Tensor[(8, 13, 1), float64], Tensor[(56, 22), int64], Tensor[(1024), float64], Tensor[(120), int8], Tensor[(1, 1560), int8], int64, Tensor[(1232), int64]) */;
  %774 = cast(%768, dtype="float32") /* ty=Tensor[(420, 4), float32] */;
  %775 = bitwise_xor(%771, %772) /* ty=Tensor[(420, 4), uint64] */;
  %776 = %773.0;
  %777 = rsqrt(%774) /* ty=Tensor[(420, 4), float32] */;
  (%775, %776, %777)
}

def @func_11847(%var_11799: Tensor[(8, 13, 12), float64], %var_11805: Tensor[(126), float64], %var_11808: int32, %var_11809: Tensor[(84), int8], %var_11810: Tensor[(30), bool]) -> (Tensor[(8, 13, 12), uint64], Tensor[(6, 3, 7), uint64], Tensor[(126), float64], int64, int32, Tensor[(84), int8], Tensor[(30), bool], Tensor[(1232), int64], Tensor[(1, 80), float32]) {
  %778 = @func_11553() /* ty=(Tensor[(8, 13, 1), float64],) */;
  %779 = %778.0;
  %780 = cast(%779, dtype="uint64") /* ty=Tensor[(8, 13, 1), uint64] */;
  %781 = cast(%var_11799, dtype="uint64") /* ty=Tensor[(8, 13, 12), uint64] */;
  %782 = cast(%var_11805, dtype="float64") /* ty=Tensor[(126), float64] */;
  %783 = reshape(%782, newshape=[6, 3, 7]) /* ty=Tensor[(6, 3, 7), float64] */;
  %784 = cast(%var_11808, dtype="int32") /* ty=int32 */;
  %785 = cast(%var_11809, dtype="int8") /* ty=Tensor[(84), int8] */;
  %786 = cast(%var_11810, dtype="bool") /* ty=Tensor[(30), bool] */;
  %787 = cast(meta[relay.Constant][65] /* ty=Tensor[(1, 80), float64] */, dtype="float64") /* ty=Tensor[(1, 80), float64] */;
  %788 = cast(meta[relay.Constant][66] /* ty=Tensor[(1232), int64] */, dtype="int64") /* ty=Tensor[(1232), int64] */;
  %789 = reshape(%784, newshape=[]) /* ty=int32 */;
  %790 = reshape(%785, newshape=[84]) /* ty=Tensor[(84), int8] */;
  %791 = reshape(%786, newshape=[30]) /* ty=Tensor[(30), bool] */;
  %792 = reshape(%787, newshape=[1, 80]) /* ty=Tensor[(1, 80), float64] */;
  %793 = reshape(%788, newshape=[1232]) /* ty=Tensor[(1232), int64] */;
  %794 = @func_5626(%789, %790, %791, %792, %793) /* ty=(Tensor[(1, 6, 11), bool], Tensor[(4, 7, 3), int8], Tensor[(84), int8], Tensor[(14, 5, 6), bool], Tensor[(30), bool], Tensor[(420), bool], Tensor[(1680), float64], Tensor[(1, 80), float64], Tensor[(1232), int64], Tensor[(16, 15, 7), float64], Tensor[(1, 2048), float32], int64) */;
  %795 = cast(meta[relay.Constant][65] /* ty=Tensor[(1, 80), float64] */, dtype="float32") /* ty=Tensor[(1, 80), float32] */;
  %796 = bitwise_and(%780, %781) /* ty=Tensor[(8, 13, 12), uint64] */;
  %797 = @func_7984(%783) /* ty=Tensor[(6, 3, 7), uint64] */;
  %798 = %794.11;
  %799 = tan(%795) /* ty=Tensor[(1, 80), float32] */;
  (%796, %797, %var_11805, %798, %var_11808, %var_11809, %var_11810, meta[relay.Constant][66] /* ty=Tensor[(1232), int64] */, %799)
}

def @func_12297() -> (Tensor[(8, 13, 1), float64], Tensor[(420, 4), float64], Tensor[(1680), float64]) {
  %806 = fn () -> (Tensor[(8, 13, 1), float64], Tensor[(420, 4), float64], Tensor[(1680), float64]) {
    %800 = @func_11553() /* ty=(Tensor[(8, 13, 1), float64],) */;
    %801 = cast(meta[relay.Constant][67] /* ty=Tensor[(1680), float64] */, dtype="float64") /* ty=Tensor[(1680), float64] */;
    %802 = reshape(%801, newshape=[420, 4]) /* ty=Tensor[(420, 4), float64] */;
    %803 = @func_12182(%802) /* ty=(Tensor[(16, 15, 7), float64], Tensor[(420, 4), float64], Tensor[(8, 13, 896), int64]) */;
    %804 = %800.0;
    %805 = %803.1;
    (%804, %805, meta[relay.Constant][67] /* ty=Tensor[(1680), float64] */)
  };
  %806() /* ty=(Tensor[(8, 13, 1), float64], Tensor[(420, 4), float64], Tensor[(1680), float64]) */
}

def @func_11554() -> (Tensor[(8, 13, 1), float64],) {
  %808 = fn () -> (Tensor[(8, 13, 1), float64],) {
    %807 = @func_11514() /* ty=Tensor[(8, 13, 1), float64] */;
    (%807,)
  };
  %808() /* ty=(Tensor[(8, 13, 1), float64],) */
}

def @func_2856(%var_2853: int64, %var_2854: Tensor[(11, 8, 14), int64], %var_2855: Tensor[(84), int8]) -> (Tensor[(11, 8, 14), int64], Tensor[(4, 7, 3), int8], Tensor[(84), int8]) {
  @func_2851(%var_2853, %var_2854, %var_2855) /* ty=(Tensor[(11, 8, 14), int64], Tensor[(4, 7, 3), int8], Tensor[(84), int8]) */
}

def @func_12461(%var_12453: Tensor[(1232), int64], %var_12454: Tensor[(84), int8]) -> (Tensor[(8, 13, 1), float64], Tensor[(10, 12, 13), int8], Tensor[(120), int8], Tensor[(1560), int8], int64, Tensor[(1232), int64], Tensor[(84), int8]) {
  %809 = @func_11553() /* ty=(Tensor[(8, 13, 1), float64],) */;
  %810 = cast(meta[relay.Constant][68] /* ty=Tensor[(120), int8] */, dtype="int8") /* ty=Tensor[(120), int8] */;
  %811 = cast(meta[relay.Constant][69] /* ty=Tensor[(1560), int8] */, dtype="int8") /* ty=Tensor[(1560), int8] */;
  %812 = cast(-6 /* ty=int64 */, dtype="int64") /* ty=int64 */;
  %813 = cast(%var_12453, dtype="int64") /* ty=Tensor[(1232), int64] */;
  %814 = cast(%var_12454, dtype="int8") /* ty=Tensor[(84), int8] */;
  %815 = reshape(%810, newshape=[10, 12, 1]) /* ty=Tensor[(10, 12, 1), int8] */;
  %816 = reshape(%811, newshape=[10, 12, 13]) /* ty=Tensor[(10, 12, 13), int8] */;
  %817 = reshape(%812, newshape=[]) /* ty=int64 */;
  %818 = reshape(%813, newshape=[1232]) /* ty=Tensor[(1232), int64] */;
  %819 = reshape(%814, newshape=[84]) /* ty=Tensor[(84), int8] */;
  %820 = @func_4093(%815, %816, %817, %818, %819) /* ty=(Tensor[(10, 12, 13), int8], Tensor[(11, 8, 14), int64], int64, Tensor[(1232), int64], Tensor[(84), int8], Tensor[(14, 5, 6), bool], Tensor[(10, 3), bool], Tensor[(420), bool], Tensor[(4, 7, 3), int8]) */;
  %821 = %809.0;
  %822 = %820.0;
  (%821, %822, meta[relay.Constant][68] /* ty=Tensor[(120), int8] */, meta[relay.Constant][69] /* ty=Tensor[(1560), int8] */, -6 /* ty=int64 */, %var_12453, %var_12454)
}

def @func_10134(%var_10129: Tensor[(5, 15, 8), float32], %var_10130: int32, %var_10131: Tensor[(30), bool], %var_10132: Tensor[(80), float64], %var_10133: Tensor[(1232), int64]) -> (Tensor[(5, 15, 8), float32], Tensor[(1680), float64], int32, Tensor[(84), int8], Tensor[(30), bool], Tensor[(80), float64], Tensor[(1232), int64]) {
  %839 = fn (%var_10100: Tensor[(5, 15, 8), float32], %var_10119: int32, %var_10121: Tensor[(30), bool], %var_10122: Tensor[(80), float64], %var_10123: Tensor[(1232), int64]) -> (Tensor[(5, 15, 8), float32], Tensor[(1680), float64], int32, Tensor[(84), int8], Tensor[(30), bool], Tensor[(80), float64], Tensor[(1232), int64]) {
    %823 = cast(%var_10100, dtype="float32") /* ty=Tensor[(5, 15, 8), float32] */;
    %824 = atanh(%823) /* ty=Tensor[(5, 15, 8), float32] */;
    %825 = cast(%824, dtype="float32") /* ty=Tensor[(5, 15, 8), float32] */;
    %826 = cast(%var_10119, dtype="int32") /* ty=int32 */;
    %827 = cast(meta[relay.Constant][70] /* ty=Tensor[(84), int8] */, dtype="int8") /* ty=Tensor[(84), int8] */;
    %828 = cast(%var_10121, dtype="bool") /* ty=Tensor[(30), bool] */;
    %829 = cast(%var_10122, dtype="float64") /* ty=Tensor[(80), float64] */;
    %830 = cast(%var_10123, dtype="int64") /* ty=Tensor[(1232), int64] */;
    %831 = reshape(%826, newshape=[]) /* ty=int32 */;
    %832 = reshape(%827, newshape=[84]) /* ty=Tensor[(84), int8] */;
    %833 = reshape(%828, newshape=[30]) /* ty=Tensor[(30), bool] */;
    %834 = reshape(%829, newshape=[1, 80]) /* ty=Tensor[(1, 80), float64] */;
    %835 = reshape(%830, newshape=[1232]) /* ty=Tensor[(1232), int64] */;
    %836 = @func_5626(%831, %832, %833, %834, %835) /* ty=(Tensor[(1, 6, 11), bool], Tensor[(4, 7, 3), int8], Tensor[(84), int8], Tensor[(14, 5, 6), bool], Tensor[(30), bool], Tensor[(420), bool], Tensor[(1680), float64], Tensor[(1, 80), float64], Tensor[(1232), int64], Tensor[(16, 15, 7), float64], Tensor[(1, 2048), float32], int64) */;
    %837 = acosh(%825) /* ty=Tensor[(5, 15, 8), float32] */;
    %838 = %836.6;
    (%837, %838, %var_10119, meta[relay.Constant][70] /* ty=Tensor[(84), int8] */, %var_10121, %var_10122, %var_10123)
  };
  %839(%var_10129, %var_10130, %var_10131, %var_10132, %var_10133) /* ty=(Tensor[(5, 15, 8), float32], Tensor[(1680), float64], int32, Tensor[(84), int8], Tensor[(30), bool], Tensor[(80), float64], Tensor[(1232), int64]) */
}

def @func_355(%var_353: Tensor[(1, 16, 9), float32], %var_354: Tensor[(390), float64]) -> (Tensor[(?, 16, 9), bool], Tensor[(6, 13, 5), float64], Tensor[(390), float64]) {
  @func_351(%var_353, %var_354) /* ty=(Tensor[(?, 16, 9), bool], Tensor[(6, 13, 5), float64], Tensor[(390), float64]) */
}

def @func_13110(%var_13108: Tensor[(420, 4), float64], %var_13109: Tensor[(8, 18), float32]) -> (Tensor[(420, 4), bool], Tensor[(?, 16, 9), bool], Tensor[(8, 18), float32], Tensor[(195, 2), float64]) {
  %853 = fn (%var_13088: Tensor[(420, 4), float64], %var_13101: Tensor[(8, 18), float32]) -> (Tensor[(420, 4), bool], Tensor[(?, 16, 9), bool], Tensor[(8, 18), float32], Tensor[(195, 2), float64]) {
    %840 = @func_12553() /* ty=(Tensor[(420, 4), float64],) */;
    %841 = %840.0;
    %842 = cast(%var_13088, dtype="bool") /* ty=Tensor[(420, 4), bool] */;
    %843 = shape_of(%841, dtype="int32") /* ty=Tensor[(2), int32] */;
    %844 = cast(%841, dtype="bool") /* ty=Tensor[(420, 4), bool] */;
    %845 = dyn.reshape(%842, %843, newshape=[]) /* ty=Tensor[(?, ?), bool] */;
    %846 = cast(%var_13101, dtype="float32") /* ty=Tensor[(8, 18), float32] */;
    %847 = cast(meta[relay.Constant][71] /* ty=Tensor[(195, 2), float64] */, dtype="float64") /* ty=Tensor[(195, 2), float64] */;
    %848 = reshape(%846, newshape=[1, 16, 9]) /* ty=Tensor[(1, 16, 9), float32] */;
    %849 = reshape(%847, newshape=[390]) /* ty=Tensor[(390), float64] */;
    %850 = @func_351(%848, %849) /* ty=(Tensor[(?, 16, 9), bool], Tensor[(6, 13, 5), float64], Tensor[(390), float64]) */;
    %851 = logical_and(%844, %845) /* ty=Tensor[(420, 4), bool] */;
    %852 = %850.0;
    (%851, %852, %var_13101, meta[relay.Constant][71] /* ty=Tensor[(195, 2), float64] */)
  };
  %853(%var_13108, %var_13109) /* ty=(Tensor[(420, 4), bool], Tensor[(?, 16, 9), bool], Tensor[(8, 18), float32], Tensor[(195, 2), float64]) */
}

def @func_11730(%var_11729: Tensor[(1, 195), float32]) -> (Tensor[(16, 15, 6), float32], Tensor[(1440), float32], Tensor[(1, 195), float32], uint64, Tensor[(225, 1), uint64], Tensor[(8, 13, 390), int16]) {
  %871 = fn (%var_11712: Tensor[(1, 195), float32]) -> (Tensor[(16, 15, 6), float32], Tensor[(1440), float32], Tensor[(1, 195), float32], uint64, Tensor[(225, 1), uint64], Tensor[(8, 13, 390), int16]) {
    %854 = cast(meta[relay.Constant][72] /* ty=Tensor[(1440), float32] */, dtype="float32") /* ty=Tensor[(1440), float32] */;
    %855 = reshape(%854, newshape=[16, 15, 6]) /* ty=Tensor[(16, 15, 6), float32] */;
    %856 = @func_10464(%855) /* ty=(Tensor[(16, 15, 6), float32],) */;
    %857 = cast(%var_11712, dtype="float32") /* ty=Tensor[(1, 195), float32] */;
    %858 = cast(meta[relay.Constant][73] /* ty=uint64 */, dtype="uint64") /* ty=uint64 */;
    %859 = cast(meta[relay.Constant][74] /* ty=Tensor[(225, 1), uint64] */, dtype="uint64") /* ty=Tensor[(225, 1), uint64] */;
    %860 = reshape(%857, newshape=[13, 15, 1]) /* ty=Tensor[(13, 15, 1), float32] */;
    %861 = reshape(%858, newshape=[]) /* ty=uint64 */;
    %862 = reshape(%859, newshape=[25, 9]) /* ty=Tensor[(25, 9), uint64] */;
    %863 = @func_6923(%860, %861, %862) /* ty=(uint64, Tensor[(25, 9), uint64], Tensor[(390), float64], Tensor[(13, 15, 390), int32]) */;
    %864 = %863.2;
    %865 = @func_11553() /* ty=(Tensor[(8, 13, 1), float64],) */;
    %866 = %865.0;
    %867 = cast(%864, dtype="int16") /* ty=Tensor[(390), int16] */;
    %868 = cast(%866, dtype="int16") /* ty=Tensor[(8, 13, 1), int16] */;
    %869 = %856.0;
    %870 = bitwise_and(%867, %868) /* ty=Tensor[(8, 13, 390), int16] */;
    (%869, meta[relay.Constant][72] /* ty=Tensor[(1440), float32] */, %var_11712, meta[relay.Constant][73] /* ty=uint64 */, meta[relay.Constant][74] /* ty=Tensor[(225, 1), uint64] */, %870)
  };
  %871(%var_11729) /* ty=(Tensor[(16, 15, 6), float32], Tensor[(1440), float32], Tensor[(1, 195), float32], uint64, Tensor[(225, 1), uint64], Tensor[(8, 13, 390), int16]) */
}

def @func_13567(%var_13565: Tensor[(1188), int64]) -> (Tensor[(420, 4), float64], Tensor[(12, 11, 9), int64], Tensor[(1188), int64]) {
  @func_13564(%var_13565) /* ty=(Tensor[(420, 4), float64], Tensor[(12, 11, 9), int64], Tensor[(1188), int64]) */
}

def @func_13720(%var_13696: Tensor[(420, 4), float64], %var_13702: int32) -> (Tensor[(420, 4), bool], Tensor[(420), bool], int32, Tensor[(84), int8], Tensor[(10, 3), bool], Tensor[(80), float64], Tensor[(1232), int64], Tensor[(420, 4), uint32]) {
  %872 = @func_13642() /* ty=(Tensor[(420, 4), float64],) */;
  %873 = %872.0;
  %874 = cast(%var_13696, dtype="bool") /* ty=Tensor[(420, 4), bool] */;
  %875 = shape_of(%873, dtype="int32") /* ty=Tensor[(2), int32] */;
  %876 = cast(%873, dtype="bool") /* ty=Tensor[(420, 4), bool] */;
  %877 = dyn.reshape(%874, %875, newshape=[]) /* ty=Tensor[(?, ?), bool] */;
  %878 = cast(%var_13702, dtype="int32") /* ty=int32 */;
  %879 = cast(meta[relay.Constant][75] /* ty=Tensor[(84), int8] */, dtype="int8") /* ty=Tensor[(84), int8] */;
  %880 = cast(meta[relay.Constant][76] /* ty=Tensor[(10, 3), bool] */, dtype="bool") /* ty=Tensor[(10, 3), bool] */;
  %881 = cast(meta[relay.Constant][77] /* ty=Tensor[(80), float64] */, dtype="float64") /* ty=Tensor[(80), float64] */;
  %882 = cast(meta[relay.Constant][78] /* ty=Tensor[(1232), int64] */, dtype="int64") /* ty=Tensor[(1232), int64] */;
  %883 = reshape(%878, newshape=[]) /* ty=int32 */;
  %884 = reshape(%879, newshape=[84]) /* ty=Tensor[(84), int8] */;
  %885 = reshape(%880, newshape=[30]) /* ty=Tensor[(30), bool] */;
  %886 = reshape(%881, newshape=[1, 80]) /* ty=Tensor[(1, 80), float64] */;
  %887 = reshape(%882, newshape=[1232]) /* ty=Tensor[(1232), int64] */;
  %888 = @func_5626(%883, %884, %885, %886, %887) /* ty=(Tensor[(1, 6, 11), bool], Tensor[(4, 7, 3), int8], Tensor[(84), int8], Tensor[(14, 5, 6), bool], Tensor[(30), bool], Tensor[(420), bool], Tensor[(1680), float64], Tensor[(1, 80), float64], Tensor[(1232), int64], Tensor[(16, 15, 7), float64], Tensor[(1, 2048), float32], int64) */;
  %889 = cast(%873, dtype="float64") /* ty=Tensor[(420, 4), float64] */;
  %890 = exp(%889) /* ty=Tensor[(420, 4), float64] */;
  %891 = cast(%873, dtype="uint32") /* ty=Tensor[(420, 4), uint32] */;
  %892 = shape_of(%890, dtype="int32") /* ty=Tensor[(2), int32] */;
  %893 = cast(%890, dtype="uint32") /* ty=Tensor[(420, 4), uint32] */;
  %894 = dyn.reshape(%891, %892, newshape=[]) /* ty=Tensor[(?, ?), uint32] */;
  %895 = not_equal(%876, %877) /* ty=Tensor[(420, 4), bool] */;
  %896 = %888.5;
  %897 = logical_xor(%893, %894) /* ty=Tensor[(420, 4), uint32] */;
  (%895, %896, %var_13702, meta[relay.Constant][75] /* ty=Tensor[(84), int8] */, meta[relay.Constant][76] /* ty=Tensor[(10, 3), bool] */, meta[relay.Constant][77] /* ty=Tensor[(80), float64] */, meta[relay.Constant][78] /* ty=Tensor[(1232), int64] */, %897)
}

def @func_14426(%var_14424: Tensor[(390), float64]) -> (Tensor[(420, 4), float64], Tensor[(10, 1560), bool], Tensor[(15600), int8], Tensor[(6, 13, 5), float64], Tensor[(390), float64]) {
  @func_14423(%var_14424) /* ty=(Tensor[(420, 4), float64], Tensor[(10, 1560), bool], Tensor[(15600), int8], Tensor[(6, 13, 5), float64], Tensor[(390), float64]) */
}

def @func_2978(%var_2975: uint64, %var_2976: Tensor[(5, 3, 15), uint64], %var_2977: Tensor[(390), float64]) -> (Tensor[(5, 3, 15), uint16], Tensor[(5, 3, 15), float64], Tensor[(6, 13, 5), float64], Tensor[(390), float64]) {
  %913 = fn (%var_2938: uint64, %var_2939: Tensor[(5, 3, 15), uint64], %var_2957: Tensor[(390), float64]) -> (Tensor[(5, 3, 15), uint16], Tensor[(5, 3, 15), float64], Tensor[(6, 13, 5), float64], Tensor[(390), float64]) {
    %898 = cast(%var_2939, dtype="uint16") /* ty=Tensor[(5, 3, 15), uint16] */;
    %899 = cast(%var_2938, dtype="uint16") /* ty=uint16 */;
    %900 = cast(%var_2938, dtype="bool") /* ty=bool */;
    %901 = cast(%var_2939, dtype="bool") /* ty=Tensor[(5, 3, 15), bool] */;
    %902 = greater_equal(%900, %901) /* ty=Tensor[(5, 3, 15), bool] */;
    %903 = cast(%902, dtype="float64") /* ty=Tensor[(5, 3, 15), float64] */;
    %904 = shape_of(%var_2939, dtype="int32") /* ty=Tensor[(3), int32] */;
    %905 = cast(%var_2939, dtype="float64") /* ty=Tensor[(5, 3, 15), float64] */;
    %906 = dyn.reshape(%903, %904, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
    %907 = cast(%var_2957, dtype="float64") /* ty=Tensor[(390), float64] */;
    %908 = reshape(%907, newshape=[6, 13, 5]) /* ty=Tensor[(6, 13, 5), float64] */;
    %909 = @func_278(%908) /* ty=(Tensor[(6, 13, 5), float64],) */;
    %910 = minimum(%898, %899) /* ty=Tensor[(5, 3, 15), uint16] */;
    %911 = power(%905, %906) /* ty=Tensor[(5, 3, 15), float64] */;
    %912 = %909.0;
    (%910, %911, %912, %var_2957)
  };
  %913(%var_2975, %var_2976, %var_2977) /* ty=(Tensor[(5, 3, 15), uint16], Tensor[(5, 3, 15), float64], Tensor[(6, 13, 5), float64], Tensor[(390), float64]) */
}

def @func_13802(%var_13797: Tensor[(9, 1, 3), float64]) -> Tensor[(9, 1, 3), float64] {
  %914 = cast(%var_13797, dtype="float64") /* ty=Tensor[(9, 1, 3), float64] */;
  cosh(%914) /* ty=Tensor[(9, 1, 3), float64] */
}

def @func_8591(%var_8589: Tensor[(4, 11, 8), int16], %var_8590: Tensor[(4, 11, 8), int16]) -> Tensor[(4, 11, 8), int16] {
  %919 = fn (%var_8565: Tensor[(4, 11, 8), int16], %var_8566: Tensor[(4, 11, 8), int16]) -> Tensor[(4, 11, 8), int16] {
    %915 = cast(%var_8566, dtype="int16") /* ty=Tensor[(4, 11, 8), int16] */;
    %916 = shape_of(%var_8565, dtype="int32") /* ty=Tensor[(3), int32] */;
    %917 = cast(%var_8565, dtype="int16") /* ty=Tensor[(4, 11, 8), int16] */;
    %918 = dyn.reshape(%915, %916, newshape=[]) /* ty=Tensor[(?, ?, ?), int16] */;
    bitwise_or(%917, %918) /* ty=Tensor[(4, 11, 8), int16] */
  };
  %919(%var_8589, %var_8590) /* ty=Tensor[(4, 11, 8), int16] */
}

def @func_3211(%var_3209: Tensor[(6, 1, 14), bool], %var_3210: Tensor[(6, 16, 14), bool]) -> (Tensor[(6, 16, 14), bool],) {
  @func_3207(%var_3209, %var_3210) /* ty=(Tensor[(6, 16, 14), bool],) */
}

def @func_5129(%var_5067: Tensor[(4, 10, 2), float64], %var_5081: Tensor[(1232), int64], %var_5101: Tensor[(30), bool], %var_5102: Tensor[(70, 6), bool]) -> (Tensor[(4, 10, 2), float64], Tensor[(1560), int8], int64, Tensor[(1232), int64], Tensor[(1, 84), int8], Tensor[(14, 5, 6), bool], Tensor[(30), bool], Tensor[(70, 6), bool], Tensor[(8, 16, 16), uint8], Tensor[(1, 2048), uint8], Tensor[(60, 2), bool]) {
  %920 = cast(%var_5067, dtype="float64") /* ty=Tensor[(4, 10, 2), float64] */;
  %921 = cast(%var_5101, dtype="bool") /* ty=Tensor[(30), bool] */;
  %922 = cast(%var_5102, dtype="bool") /* ty=Tensor[(70, 6), bool] */;
  %923 = reshape(%921, newshape=[1, 5, 6]) /* ty=Tensor[(1, 5, 6), bool] */;
  %924 = reshape(%922, newshape=[14, 5, 6]) /* ty=Tensor[(14, 5, 6), bool] */;
  %925 = @func_2137(%923, %924) /* ty=(Tensor[(14, 5, 6), bool], Tensor[(14, 5, 6), float32]) */;
  %926 = cast(meta[relay.Constant][81] /* ty=Tensor[(1, 2048), uint8] */, dtype="uint8") /* ty=Tensor[(1, 2048), uint8] */;
  %927 = cast(meta[relay.Constant][81] /* ty=Tensor[(1, 2048), uint8] */, dtype="uint8") /* ty=Tensor[(1, 2048), uint8] */;
  %928 = reshape(%926, newshape=[8, 16, 16]) /* ty=Tensor[(8, 16, 16), uint8] */;
  %929 = reshape(%927, newshape=[8, 16, 16]) /* ty=Tensor[(8, 16, 16), uint8] */;
  %930 = @func_1916(%928, %929) /* ty=(Tensor[(8, 16, 16), uint8],) */;
  %931 = cast(meta[relay.Constant][82] /* ty=Tensor[(60, 2), int8] */, dtype="int8") /* ty=Tensor[(60, 2), int8] */;
  %932 = cast(meta[relay.Constant][79] /* ty=Tensor[(1560), int8] */, dtype="int8") /* ty=Tensor[(1560), int8] */;
  %933 = cast(-10 /* ty=int64 */, dtype="int64") /* ty=int64 */;
  %934 = cast(%var_5081, dtype="int64") /* ty=Tensor[(1232), int64] */;
  %935 = cast(meta[relay.Constant][80] /* ty=Tensor[(1, 84), int8] */, dtype="int8") /* ty=Tensor[(1, 84), int8] */;
  %936 = reshape(%931, newshape=[10, 12, 1]) /* ty=Tensor[(10, 12, 1), int8] */;
  %937 = reshape(%932, newshape=[10, 12, 13]) /* ty=Tensor[(10, 12, 13), int8] */;
  %938 = reshape(%933, newshape=[]) /* ty=int64 */;
  %939 = reshape(%934, newshape=[1232]) /* ty=Tensor[(1232), int64] */;
  %940 = reshape(%935, newshape=[84]) /* ty=Tensor[(84), int8] */;
  %941 = @func_4093(%936, %937, %938, %939, %940) /* ty=(Tensor[(10, 12, 13), int8], Tensor[(11, 8, 14), int64], int64, Tensor[(1232), int64], Tensor[(84), int8], Tensor[(14, 5, 6), bool], Tensor[(10, 3), bool], Tensor[(420), bool], Tensor[(4, 7, 3), int8]) */;
  %942 = %941.2;
  %943 = cast(meta[relay.Constant][82] /* ty=Tensor[(60, 2), int8] */, dtype="bool") /* ty=Tensor[(60, 2), bool] */;
  %944 = cast(%942, dtype="bool") /* ty=bool */;
  %945 = tan(%920) /* ty=Tensor[(4, 10, 2), float64] */;
  %946 = %925.0;
  %947 = %930.0;
  %948 = greater_equal(%943, %944) /* ty=Tensor[(60, 2), bool] */;
  (%945, meta[relay.Constant][79] /* ty=Tensor[(1560), int8] */, -10 /* ty=int64 */, %var_5081, meta[relay.Constant][80] /* ty=Tensor[(1, 84), int8] */, %946, %var_5101, %var_5102, %947, meta[relay.Constant][81] /* ty=Tensor[(1, 2048), uint8] */, %948)
}

def @func_14423(%var_14404: Tensor[(390), float64]) -> (Tensor[(420, 4), float64], Tensor[(10, 1560), bool], Tensor[(15600), int8], Tensor[(6, 13, 5), float64], Tensor[(390), float64]) {
  %949 = cast(meta[relay.Constant][83] /* ty=Tensor[(15600), int8] */, dtype="int8") /* ty=Tensor[(15600), int8] */;
  %950 = reshape(%949, newshape=[10, 1560]) /* ty=Tensor[(10, 1560), int8] */;
  %951 = cast(%var_14404, dtype="float64") /* ty=Tensor[(390), float64] */;
  %952 = reshape(%951, newshape=[6, 13, 5]) /* ty=Tensor[(6, 13, 5), float64] */;
  %953 = @func_278(%952) /* ty=(Tensor[(6, 13, 5), float64],) */;
  %954 = @func_14369() /* ty=Tensor[(420, 4), float64] */;
  %955 = @func_13140(%950) /* ty=Tensor[(10, 1560), bool] */;
  %956 = %953.0;
  (%954, %955, meta[relay.Constant][83] /* ty=Tensor[(15600), int8] */, %956, %var_14404)
}

def @func_3207(%var_3188: Tensor[(6, 1, 14), bool], %var_3189: Tensor[(6, 16, 14), bool]) -> (Tensor[(6, 16, 14), bool],) {
  %957 = cast(%var_3188, dtype="bool") /* ty=Tensor[(6, 1, 14), bool] */;
  %958 = cast(%var_3189, dtype="bool") /* ty=Tensor[(6, 16, 14), bool] */;
  %959 = logical_or(%957, %958) /* ty=Tensor[(6, 16, 14), bool] */;
  (%959,)
}

def @func_13642() -> (Tensor[(420, 4), float64],) {
  %960 = @func_12776() /* ty=(Tensor[(420, 4), float64], Tensor[(420, 4), float32]) */;
  %961 = %960.0;
  (%961,)
}

def @func_14290() -> Tensor[(420, 4), float64] {
  %963 = fn () -> Tensor[(420, 4), float64] {
    %962 = @func_13642() /* ty=(Tensor[(420, 4), float64],) */;
    %962.0
  };
  %963() /* ty=Tensor[(420, 4), float64] */
}

def @func_6341(%var_6338: Tensor[(1, 5, 14), uint32], %var_6339: Tensor[(10, 5, 14), uint32], %var_6340: Tensor[(512, 4), uint8]) -> (Tensor[(12, 5, 10), float32], Tensor[(600), float64], Tensor[(10, 5, 14), float32], Tensor[(4, 7, 3), int8], Tensor[(84), int8], Tensor[(8, 16, 16), uint8], Tensor[(512, 4), uint8], Tensor[(8, 16, 16), uint8]) {
  %991 = fn (%var_6260: Tensor[(1, 5, 14), uint32], %var_6261: Tensor[(10, 5, 14), uint32], %var_6331: Tensor[(512, 4), uint8]) -> (Tensor[(12, 5, 10), float32], Tensor[(600), float64], Tensor[(10, 5, 14), float32], Tensor[(4, 7, 3), int8], Tensor[(84), int8], Tensor[(8, 16, 16), uint8], Tensor[(512, 4), uint8], Tensor[(8, 16, 16), uint8]) {
    %964 = cast(meta[relay.Constant][84] /* ty=Tensor[(600), float64] */, dtype="float64") /* ty=Tensor[(600), float64] */;
    %965 = reshape(%964, newshape=[12, 5, 10]) /* ty=Tensor[(12, 5, 10), float64] */;
    %966 = cast(%var_6260, dtype="uint32") /* ty=Tensor[(1, 5, 14), uint32] */;
    %967 = cast(%var_6261, dtype="uint32") /* ty=Tensor[(10, 5, 14), uint32] */;
    %968 = bitwise_and(%966, %967) /* ty=Tensor[(10, 5, 14), uint32] */;
    %969 = cast(%var_6260, dtype="float32") /* ty=Tensor[(1, 5, 14), float32] */;
    %970 = cast(%968, dtype="float32") /* ty=Tensor[(10, 5, 14), float32] */;
    %971 = cast(meta[relay.Constant][85] /* ty=Tensor[(84), int8] */, dtype="int8") /* ty=Tensor[(84), int8] */;
    %972 = cast(meta[relay.Constant][85] /* ty=Tensor[(84), int8] */, dtype="int8") /* ty=Tensor[(84), int8] */;
    %973 = reshape(%971, newshape=[4, 7, 3]) /* ty=Tensor[(4, 7, 3), int8] */;
    %974 = reshape(%972, newshape=[4, 7, 3]) /* ty=Tensor[(4, 7, 3), int8] */;
    %975 = @func_809(%973, %974) /* ty=(Tensor[(4, 7, 3), int8],) */;
    %976 = cast(%var_6331, dtype="uint8") /* ty=Tensor[(512, 4), uint8] */;
    %977 = cast(%var_6331, dtype="uint8") /* ty=Tensor[(512, 4), uint8] */;
    %978 = reshape(%976, newshape=[8, 16, 16]) /* ty=Tensor[(8, 16, 16), uint8] */;
    %979 = reshape(%977, newshape=[8, 16, 16]) /* ty=Tensor[(8, 16, 16), uint8] */;
    %980 = @func_1916(%978, %979) /* ty=(Tensor[(8, 16, 16), uint8],) */;
    %981 = %980.0;
    %982 = cast(%981, dtype="uint8") /* ty=Tensor[(8, 16, 16), uint8] */;
    %983 = cast(%var_6331, dtype="uint8") /* ty=Tensor[(512, 4), uint8] */;
    %984 = reshape(%982, newshape=[8, 16, 16]) /* ty=Tensor[(8, 16, 16), uint8] */;
    %985 = reshape(%983, newshape=[8, 16, 16]) /* ty=Tensor[(8, 16, 16), uint8] */;
    %986 = @func_1916(%984, %985) /* ty=(Tensor[(8, 16, 16), uint8],) */;
    %987 = @func_5450(%965) /* ty=Tensor[(12, 5, 10), float32] */;
    %988 = power(%969, %970) /* ty=Tensor[(10, 5, 14), float32] */;
    %989 = %975.0;
    %990 = %986.0;
    (%987, meta[relay.Constant][84] /* ty=Tensor[(600), float64] */, %988, %989, meta[relay.Constant][85] /* ty=Tensor[(84), int8] */, %981, %var_6331, %990)
  };
  %991(%var_6338, %var_6339, %var_6340) /* ty=(Tensor[(12, 5, 10), float32], Tensor[(600), float64], Tensor[(10, 5, 14), float32], Tensor[(4, 7, 3), int8], Tensor[(84), int8], Tensor[(8, 16, 16), uint8], Tensor[(512, 4), uint8], Tensor[(8, 16, 16), uint8]) */
}

def @func_6688(%var_6657: Tensor[(8, 8, 16), float64], %var_6672: Tensor[(120), int8], %var_6673: Tensor[(6, 260), int8], %var_6674: int64, %var_6675: Tensor[(56, 22), int64], %var_6678: Tensor[(8, 8, 16), float64]) -> (Tensor[(4, 7, 3), int8], Tensor[(120), int8], Tensor[(6, 260), int8], int64, Tensor[(56, 22), int64], Tensor[(84), int8], Tensor[(8, 8, 16), bool], Tensor[(8, 8, 16), uint64]) {
  %992 = cast(%var_6672, dtype="int8") /* ty=Tensor[(120), int8] */;
  %993 = cast(%var_6673, dtype="int8") /* ty=Tensor[(6, 260), int8] */;
  %994 = cast(%var_6674, dtype="int64") /* ty=int64 */;
  %995 = cast(%var_6675, dtype="int64") /* ty=Tensor[(56, 22), int64] */;
  %996 = cast(meta[relay.Constant][86] /* ty=Tensor[(84), int8] */, dtype="int8") /* ty=Tensor[(84), int8] */;
  %997 = reshape(%992, newshape=[10, 12, 1]) /* ty=Tensor[(10, 12, 1), int8] */;
  %998 = reshape(%993, newshape=[10, 12, 13]) /* ty=Tensor[(10, 12, 13), int8] */;
  %999 = reshape(%994, newshape=[]) /* ty=int64 */;
  %1000 = reshape(%995, newshape=[1232]) /* ty=Tensor[(1232), int64] */;
  %1001 = reshape(%996, newshape=[84]) /* ty=Tensor[(84), int8] */;
  %1002 = @func_4093(%997, %998, %999, %1000, %1001) /* ty=(Tensor[(10, 12, 13), int8], Tensor[(11, 8, 14), int64], int64, Tensor[(1232), int64], Tensor[(84), int8], Tensor[(14, 5, 6), bool], Tensor[(10, 3), bool], Tensor[(420), bool], Tensor[(4, 7, 3), int8]) */;
  %1003 = cast(%var_6678, dtype="bool") /* ty=Tensor[(8, 8, 16), bool] */;
  %1004 = shape_of(%var_6657, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1005 = cast(%var_6657, dtype="bool") /* ty=Tensor[(8, 8, 16), bool] */;
  %1006 = dyn.reshape(%1003, %1004, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %1007 = cast(%var_6657, dtype="float64") /* ty=Tensor[(8, 8, 16), float64] */;
  %1008 = log10(%1007) /* ty=Tensor[(8, 8, 16), float64] */;
  %1009 = cast(%var_6678, dtype="uint64") /* ty=Tensor[(8, 8, 16), uint64] */;
  %1010 = shape_of(%1008, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1011 = cast(%1008, dtype="uint64") /* ty=Tensor[(8, 8, 16), uint64] */;
  %1012 = dyn.reshape(%1009, %1010, newshape=[]) /* ty=Tensor[(?, ?, ?), uint64] */;
  %1013 = %1002.8;
  %1014 = greater(%1005, %1006) /* ty=Tensor[(8, 8, 16), bool] */;
  %1015 = subtract(%1011, %1012) /* ty=Tensor[(8, 8, 16), uint64] */;
  (%1013, %var_6672, %var_6673, %var_6674, %var_6675, meta[relay.Constant][86] /* ty=Tensor[(84), int8] */, %1014, %1015)
}

def @func_5204(%var_5203: Tensor[(16, 6, 13), float64]) -> Tensor[(16, 6, 13), float64] {
  %1017 = fn (%var_5191: Tensor[(16, 6, 13), float64]) -> Tensor[(16, 6, 13), float64] {
    %1016 = cast(%var_5191, dtype="float64") /* ty=Tensor[(16, 6, 13), float64] */;
    acos(%1016) /* ty=Tensor[(16, 6, 13), float64] */
  };
  %1017(%var_5203) /* ty=Tensor[(16, 6, 13), float64] */
}

def @func_14431() -> Tensor[(8, 13, 1), float64] {
  %1018 = @func_14212() /* ty=(Tensor[(6, 3, 7), uint64], Tensor[(8, 13, 1), float64]) */;
  %1018.1
}

/* For debugging purposes the metadata section has been omitted.
 * If you would like to see the full metadata section you can set the 
 * option to `True` when invoking `astext`. 
 */the function is provided too many arguments expected 1, found 6

===================================
note: run with `TVM_BACKTRACE=1` environment variable to display a backtrace.

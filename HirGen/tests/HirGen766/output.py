import tvm
from tvm import relay
from tvm.ir.transform import Sequential
from tvm.contrib import graph_runtime
import numpy as np
mod = tvm.IRModule()
mutated_mod = tvm.IRModule()
var_256 = relay.var("var_256", dtype = "float64", shape = (6, 13, 5))#candidate|256|(6, 13, 5)|var|float64
uop_257 = relay.log(var_256.astype('float64')) # shape=(6, 13, 5)
output = relay.Tuple([uop_257,])
output2 = relay.Tuple([uop_257,])
func_278 = relay.Function([var_256,], output)
mod['func_278'] = func_278
mod = relay.transform.InferType()(mod)
mutated_mod['func_278'] = func_278
mutated_mod = relay.transform.InferType()(mutated_mod)
var_279 = relay.var("var_279", dtype = "float64", shape = (6, 13, 5))#candidate|279|(6, 13, 5)|var|float64
func_278_call = mutated_mod.get_global_var('func_278')
call_280 = func_278_call(var_279)
output = call_280
func_281 = relay.Function([var_279], output)
mutated_mod['func_281'] = func_281
mutated_mod = relay.transform.InferType()(mutated_mod)
var_310 = relay.var("var_310", dtype = "float32", shape = (1, 16, 9))#candidate|310|(1, 16, 9)|var|float32
uop_311 = relay.sin(var_310.astype('float32')) # shape=(1, 16, 9)
bop_320 = relay.greater_equal(uop_311.astype('bool'), relay.reshape(var_310.astype('bool'), relay.shape_of(uop_311))) # shape=(1, 16, 9)
func_278_call = mod.get_global_var('func_278')
func_281_call = mutated_mod.get_global_var('func_281')
var_334 = relay.var("var_334", dtype = "float64", shape = (390,))#candidate|334|(390,)|var|float64
call_333 = relay.TupleGetItem(func_278_call(relay.reshape(var_334.astype('float64'), [6, 13, 5])), 0)
call_335 = relay.TupleGetItem(func_281_call(relay.reshape(var_334.astype('float64'), [6, 13, 5])), 0)
output = relay.Tuple([bop_320,call_333,var_334,])
output2 = relay.Tuple([bop_320,call_335,var_334,])
func_351 = relay.Function([var_310,var_334,], output)
mod['func_351'] = func_351
mod = relay.transform.InferType()(mod)
mutated_mod['func_351'] = func_351
mutated_mod = relay.transform.InferType()(mutated_mod)
func_351_call = mutated_mod.get_global_var('func_351')
var_353 = relay.var("var_353", dtype = "float32", shape = (1, 16, 9))#candidate|353|(1, 16, 9)|var|float32
var_354 = relay.var("var_354", dtype = "float64", shape = (390,))#candidate|354|(390,)|var|float64
call_352 = func_351_call(var_353,var_354,)
output = call_352
func_355 = relay.Function([var_353,var_354,], output)
mutated_mod['func_355'] = func_355
mutated_mod = relay.transform.InferType()(mutated_mod)
var_804 = relay.var("var_804", dtype = "int8", shape = (4, 7, 3))#candidate|804|(4, 7, 3)|var|int8
var_805 = relay.var("var_805", dtype = "int8", shape = (4, 7, 3))#candidate|805|(4, 7, 3)|var|int8
bop_806 = relay.left_shift(var_804.astype('int8'), relay.reshape(var_805.astype('int8'), relay.shape_of(var_804))) # shape=(4, 7, 3)
output = relay.Tuple([bop_806,])
output2 = relay.Tuple([bop_806,])
func_809 = relay.Function([var_804,var_805,], output)
mod['func_809'] = func_809
mod = relay.transform.InferType()(mod)
mutated_mod['func_809'] = func_809
mutated_mod = relay.transform.InferType()(mutated_mod)
func_809_call = mutated_mod.get_global_var('func_809')
var_811 = relay.var("var_811", dtype = "int8", shape = (4, 7, 3))#candidate|811|(4, 7, 3)|var|int8
var_812 = relay.var("var_812", dtype = "int8", shape = (4, 7, 3))#candidate|812|(4, 7, 3)|var|int8
call_810 = func_809_call(var_811,var_812,)
output = call_810
func_813 = relay.Function([var_811,var_812,], output)
mutated_mod['func_813'] = func_813
mutated_mod = relay.transform.InferType()(mutated_mod)
var_900 = relay.var("var_900", dtype = "float64", shape = (16, 15, 7))#candidate|900|(16, 15, 7)|var|float64
uop_901 = relay.erf(var_900.astype('float64')) # shape=(16, 15, 7)
output = uop_901
output2 = uop_901
func_924 = relay.Function([var_900,], output)
mod['func_924'] = func_924
mod = relay.transform.InferType()(mod)
mutated_mod['func_924'] = func_924
mutated_mod = relay.transform.InferType()(mutated_mod)
var_925 = relay.var("var_925", dtype = "float64", shape = (16, 15, 7))#candidate|925|(16, 15, 7)|var|float64
func_924_call = mutated_mod.get_global_var('func_924')
call_926 = func_924_call(var_925)
output = call_926
func_927 = relay.Function([var_925], output)
mutated_mod['func_927'] = func_927
mutated_mod = relay.transform.InferType()(mutated_mod)
var_1904 = relay.var("var_1904", dtype = "uint8", shape = (8, 16, 16))#candidate|1904|(8, 16, 16)|var|uint8
var_1905 = relay.var("var_1905", dtype = "uint8", shape = (8, 16, 16))#candidate|1905|(8, 16, 16)|var|uint8
bop_1906 = relay.minimum(var_1904.astype('uint8'), relay.reshape(var_1905.astype('uint8'), relay.shape_of(var_1904))) # shape=(8, 16, 16)
output = relay.Tuple([bop_1906,])
output2 = relay.Tuple([bop_1906,])
func_1916 = relay.Function([var_1904,var_1905,], output)
mod['func_1916'] = func_1916
mod = relay.transform.InferType()(mod)
mutated_mod['func_1916'] = func_1916
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1916_call = mutated_mod.get_global_var('func_1916')
var_1918 = relay.var("var_1918", dtype = "uint8", shape = (8, 16, 16))#candidate|1918|(8, 16, 16)|var|uint8
var_1919 = relay.var("var_1919", dtype = "uint8", shape = (8, 16, 16))#candidate|1919|(8, 16, 16)|var|uint8
call_1917 = func_1916_call(var_1918,var_1919,)
output = call_1917
func_1920 = relay.Function([var_1918,var_1919,], output)
mutated_mod['func_1920'] = func_1920
mutated_mod = relay.transform.InferType()(mutated_mod)
var_2114 = relay.var("var_2114", dtype = "bool", shape = (1, 5, 6))#candidate|2114|(1, 5, 6)|var|bool
var_2115 = relay.var("var_2115", dtype = "bool", shape = (14, 5, 6))#candidate|2115|(14, 5, 6)|var|bool
bop_2116 = relay.logical_or(var_2114.astype('bool'), var_2115.astype('bool')) # shape=(14, 5, 6)
uop_2129 = relay.cosh(var_2115.astype('float32')) # shape=(14, 5, 6)
output = relay.Tuple([bop_2116,uop_2129,])
output2 = relay.Tuple([bop_2116,uop_2129,])
func_2137 = relay.Function([var_2114,var_2115,], output)
mod['func_2137'] = func_2137
mod = relay.transform.InferType()(mod)
var_2138 = relay.var("var_2138", dtype = "bool", shape = (1, 5, 6))#candidate|2138|(1, 5, 6)|var|bool
var_2139 = relay.var("var_2139", dtype = "bool", shape = (14, 5, 6))#candidate|2139|(14, 5, 6)|var|bool
output = func_2137(var_2138,var_2139,)
func_2140 = relay.Function([var_2138,var_2139,], output)
mutated_mod['func_2140'] = func_2140
mutated_mod = relay.transform.InferType()(mutated_mod)
var_2827 = relay.var("var_2827", dtype = "int64", shape = ())#candidate|2827|()|var|int64
var_2828 = relay.var("var_2828", dtype = "int64", shape = (11, 8, 14))#candidate|2828|(11, 8, 14)|var|int64
bop_2829 = relay.bitwise_and(var_2827.astype('int64'), var_2828.astype('int64')) # shape=(11, 8, 14)
func_809_call = mod.get_global_var('func_809')
func_813_call = mutated_mod.get_global_var('func_813')
var_2839 = relay.var("var_2839", dtype = "int8", shape = (84,))#candidate|2839|(84,)|var|int8
call_2838 = relay.TupleGetItem(func_809_call(relay.reshape(var_2839.astype('int8'), [4, 7, 3]), relay.reshape(var_2839.astype('int8'), [4, 7, 3]), ), 0)
call_2840 = relay.TupleGetItem(func_813_call(relay.reshape(var_2839.astype('int8'), [4, 7, 3]), relay.reshape(var_2839.astype('int8'), [4, 7, 3]), ), 0)
output = relay.Tuple([bop_2829,call_2838,var_2839,])
output2 = relay.Tuple([bop_2829,call_2840,var_2839,])
func_2851 = relay.Function([var_2827,var_2828,var_2839,], output)
mod['func_2851'] = func_2851
mod = relay.transform.InferType()(mod)
mutated_mod['func_2851'] = func_2851
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2851_call = mutated_mod.get_global_var('func_2851')
var_2853 = relay.var("var_2853", dtype = "int64", shape = ())#candidate|2853|()|var|int64
var_2854 = relay.var("var_2854", dtype = "int64", shape = (11, 8, 14))#candidate|2854|(11, 8, 14)|var|int64
var_2855 = relay.var("var_2855", dtype = "int8", shape = (84,))#candidate|2855|(84,)|var|int8
call_2852 = func_2851_call(var_2853,var_2854,var_2855,)
output = call_2852
func_2856 = relay.Function([var_2853,var_2854,var_2855,], output)
mutated_mod['func_2856'] = func_2856
mutated_mod = relay.transform.InferType()(mutated_mod)
var_2938 = relay.var("var_2938", dtype = "uint64", shape = ())#candidate|2938|()|var|uint64
var_2939 = relay.var("var_2939", dtype = "uint64", shape = (5, 3, 15))#candidate|2939|(5, 3, 15)|var|uint64
bop_2940 = relay.greater_equal(var_2938.astype('bool'), var_2939.astype('bool')) # shape=(5, 3, 15)
bop_2943 = relay.minimum(var_2939.astype('uint16'), var_2938.astype('uint16')) # shape=(5, 3, 15)
bop_2952 = relay.power(var_2939.astype('float64'), relay.reshape(bop_2940.astype('float64'), relay.shape_of(var_2939))) # shape=(5, 3, 15)
func_278_call = mod.get_global_var('func_278')
func_281_call = mutated_mod.get_global_var('func_281')
var_2957 = relay.var("var_2957", dtype = "float64", shape = (390,))#candidate|2957|(390,)|var|float64
call_2956 = relay.TupleGetItem(func_278_call(relay.reshape(var_2957.astype('float64'), [6, 13, 5])), 0)
call_2958 = relay.TupleGetItem(func_281_call(relay.reshape(var_2957.astype('float64'), [6, 13, 5])), 0)
output = relay.Tuple([bop_2943,bop_2952,call_2956,var_2957,])
output2 = relay.Tuple([bop_2943,bop_2952,call_2958,var_2957,])
func_2974 = relay.Function([var_2938,var_2939,var_2957,], output)
mod['func_2974'] = func_2974
mod = relay.transform.InferType()(mod)
var_2975 = relay.var("var_2975", dtype = "uint64", shape = ())#candidate|2975|()|var|uint64
var_2976 = relay.var("var_2976", dtype = "uint64", shape = (5, 3, 15))#candidate|2976|(5, 3, 15)|var|uint64
var_2977 = relay.var("var_2977", dtype = "float64", shape = (390,))#candidate|2977|(390,)|var|float64
output = func_2974(var_2975,var_2976,var_2977,)
func_2978 = relay.Function([var_2975,var_2976,var_2977,], output)
mutated_mod['func_2978'] = func_2978
mutated_mod = relay.transform.InferType()(mutated_mod)
var_3188 = relay.var("var_3188", dtype = "bool", shape = (6, 1, 14))#candidate|3188|(6, 1, 14)|var|bool
var_3189 = relay.var("var_3189", dtype = "bool", shape = (6, 16, 14))#candidate|3189|(6, 16, 14)|var|bool
bop_3190 = relay.logical_or(var_3188.astype('bool'), var_3189.astype('bool')) # shape=(6, 16, 14)
output = relay.Tuple([bop_3190,])
output2 = relay.Tuple([bop_3190,])
func_3207 = relay.Function([var_3188,var_3189,], output)
mod['func_3207'] = func_3207
mod = relay.transform.InferType()(mod)
mutated_mod['func_3207'] = func_3207
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3207_call = mutated_mod.get_global_var('func_3207')
var_3209 = relay.var("var_3209", dtype = "bool", shape = (6, 1, 14))#candidate|3209|(6, 1, 14)|var|bool
var_3210 = relay.var("var_3210", dtype = "bool", shape = (6, 16, 14))#candidate|3210|(6, 16, 14)|var|bool
call_3208 = func_3207_call(var_3209,var_3210,)
output = call_3208
func_3211 = relay.Function([var_3209,var_3210,], output)
mutated_mod['func_3211'] = func_3211
mutated_mod = relay.transform.InferType()(mutated_mod)
var_4045 = relay.var("var_4045", dtype = "int8", shape = (10, 12, 1))#candidate|4045|(10, 12, 1)|var|int8
var_4046 = relay.var("var_4046", dtype = "int8", shape = (10, 12, 13))#candidate|4046|(10, 12, 13)|var|int8
bop_4047 = relay.left_shift(var_4045.astype('int8'), var_4046.astype('int8')) # shape=(10, 12, 13)
func_2851_call = mod.get_global_var('func_2851')
func_2856_call = mutated_mod.get_global_var('func_2856')
var_4051 = relay.var("var_4051", dtype = "int64", shape = ())#candidate|4051|()|var|int64
var_4052 = relay.var("var_4052", dtype = "int64", shape = (1232,))#candidate|4052|(1232,)|var|int64
var_4053 = relay.var("var_4053", dtype = "int8", shape = (84,))#candidate|4053|(84,)|var|int8
call_4050 = relay.TupleGetItem(func_2851_call(relay.reshape(var_4051.astype('int64'), []), relay.reshape(var_4052.astype('int64'), [11, 8, 14]), relay.reshape(var_4053.astype('int8'), [84,]), ), 0)
call_4054 = relay.TupleGetItem(func_2856_call(relay.reshape(var_4051.astype('int64'), []), relay.reshape(var_4052.astype('int64'), [11, 8, 14]), relay.reshape(var_4053.astype('int8'), [84,]), ), 0)
func_2137_call = mod.get_global_var('func_2137')
func_2140_call = mutated_mod.get_global_var('func_2140')
const_4058 = relay.const([[True,False,False],[False,True,False],[False,False,True],[True,False,True],[True,True,False],[True,True,True],[False,True,True],[True,True,False],[False,False,False],[False,False,False]], dtype = "bool")#candidate|4058|(10, 3)|const|bool
const_4059 = relay.const([False,False,False,True,True,False,False,False,True,False,False,False,True,False,False,False,True,False,True,True,True,True,True,True,True,True,True,False,True,False,False,True,False,False,True,True,True,True,False,False,True,False,True,False,False,True,False,False,True,True,True,False,False,False,False,False,True,True,False,True,True,False,False,False,False,True,True,True,False,True,False,True,True,True,True,False,False,True,False,True,True,True,True,True,True,True,True,False,True,True,True,False,True,False,False,False,True,False,True,False,True,True,True,True,False,True,True,False,False,True,True,True,False,True,True,True,False,False,True,True,False,True,False,True,True,False,True,False,False,True,False,False,False,False,True,True,True,False,True,True,True,True,True,True,False,False,False,False,False,True,False,False,False,False,False,True,False,True,False,True,False,False,True,True,False,False,False,True,False,True,True,True,False,False,False,False,False,False,True,False,True,True,True,False,True,True,True,True,False,True,False,True,False,True,False,False,True,False,False,True,True,True,False,False,True,False,False,True,False,True,True,False,False,False,False,True,True,True,True,False,True,True,True,True,True,True,True,False,True,True,False,False,False,False,False,True,True,True,False,True,False,False,True,True,False,True,False,False,True,True,False,False,True,True,True,False,False,False,False,True,False,False,True,False,True,False,False,False,True,False,True,True,False,True,False,True,False,True,True,True,False,True,True,True,False,False,True,False,True,False,True,True,False,False,True,True,False,True,True,True,False,True,True,False,False,True,True,False,False,False,False,True,True,True,False,True,False,False,True,True,False,False,False,False,True,True,False,True,True,True,True,True,False,False,True,False,True,True,True,False,True,True,True,True,False,True,False,False,True,False,True,True,False,True,False,True,True,False,True,False,True,False,True,False,False,False,False,True,True,True,True,True,False,False,False,True,False,False,True,True,False,True,True,True,False,True,False,True,True,True,True,False,True,False,False,True,True,True,True,False,False,False,True,True,True,True,False,True,False,True,False,False,False,True,True,True,False,False,False,True], dtype = "bool")#candidate|4059|(420,)|const|bool
call_4057 = relay.TupleGetItem(func_2137_call(relay.reshape(const_4058.astype('bool'), [1, 5, 6]), relay.reshape(const_4059.astype('bool'), [14, 5, 6]), ), 0)
call_4060 = relay.TupleGetItem(func_2140_call(relay.reshape(const_4058.astype('bool'), [1, 5, 6]), relay.reshape(const_4059.astype('bool'), [14, 5, 6]), ), 0)
func_809_call = mod.get_global_var('func_809')
func_813_call = mutated_mod.get_global_var('func_813')
call_4068 = relay.TupleGetItem(func_809_call(relay.reshape(var_4053.astype('int8'), [4, 7, 3]), relay.reshape(var_4053.astype('int8'), [4, 7, 3]), ), 0)
call_4069 = relay.TupleGetItem(func_813_call(relay.reshape(var_4053.astype('int8'), [4, 7, 3]), relay.reshape(var_4053.astype('int8'), [4, 7, 3]), ), 0)
output = relay.Tuple([bop_4047,call_4050,var_4051,var_4052,var_4053,call_4057,const_4058,const_4059,call_4068,])
output2 = relay.Tuple([bop_4047,call_4054,var_4051,var_4052,var_4053,call_4060,const_4058,const_4059,call_4069,])
func_4093 = relay.Function([var_4045,var_4046,var_4051,var_4052,var_4053,], output)
mod['func_4093'] = func_4093
mod = relay.transform.InferType()(mod)
mutated_mod['func_4093'] = func_4093
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4093_call = mutated_mod.get_global_var('func_4093')
var_4095 = relay.var("var_4095", dtype = "int8", shape = (10, 12, 1))#candidate|4095|(10, 12, 1)|var|int8
var_4096 = relay.var("var_4096", dtype = "int8", shape = (10, 12, 13))#candidate|4096|(10, 12, 13)|var|int8
var_4097 = relay.var("var_4097", dtype = "int64", shape = ())#candidate|4097|()|var|int64
var_4098 = relay.var("var_4098", dtype = "int64", shape = (1232,))#candidate|4098|(1232,)|var|int64
var_4099 = relay.var("var_4099", dtype = "int8", shape = (84,))#candidate|4099|(84,)|var|int8
call_4094 = func_4093_call(var_4095,var_4096,var_4097,var_4098,var_4099,)
output = call_4094
func_4100 = relay.Function([var_4095,var_4096,var_4097,var_4098,var_4099,], output)
mutated_mod['func_4100'] = func_4100
mutated_mod = relay.transform.InferType()(mutated_mod)
var_5067 = relay.var("var_5067", dtype = "float64", shape = (4, 10, 2))#candidate|5067|(4, 10, 2)|var|float64
uop_5068 = relay.tan(var_5067.astype('float64')) # shape=(4, 10, 2)
func_4093_call = mod.get_global_var('func_4093')
func_4100_call = mutated_mod.get_global_var('func_4100')
const_5078 = relay.const([[10,-2],[4,9],[4,4],[5,-7],[-9,-9],[-10,6],[1,-8],[2,1],[-2,4],[-4,7],[4,-5],[7,-2],[-7,-7],[3,8],[-7,-9],[8,2],[2,7],[-10,-3],[8,-5],[-7,3],[-7,-4],[-6,-4],[-1,-4],[2,9],[2,9],[2,8],[7,-9],[10,10],[-4,8],[9,3],[-5,-10],[-2,3],[7,-8],[2,-1],[9,3],[3,7],[-2,-7],[4,-2],[4,-8],[-1,2],[2,6],[-6,-3],[8,6],[-3,-1],[7,7],[-6,2],[1,8],[-2,-1],[-10,10],[-6,3],[-1,7],[10,-1],[6,8],[-7,3],[2,-1],[4,1],[-8,2],[-6,-8],[-1,-2],[-5,-10]], dtype = "int8")#candidate|5078|(60, 2)|const|int8
const_5079 = relay.const([2,-10,-5,10,9,9,-10,10,1,-6,-4,-5,2,9,10,9,5,1,-2,-9,9,-10,5,2,8,6,-6,10,5,-9,-9,-1,8,6,4,-10,3,1,-1,-7,-10,-3,-6,-6,2,7,2,6,9,9,-9,-6,10,-2,10,-2,-2,1,-7,10,10,1,-3,-5,8,6,4,10,9,5,-1,2,-3,3,7,1,1,3,-6,-8,2,-4,6,-10,-7,-2,3,2,-6,8,-6,-3,1,-3,-4,-3,-3,-3,-10,3,8,-6,1,1,-10,-9,9,5,7,7,9,8,-7,-2,-1,-4,10,4,-7,9,5,6,-1,2,-1,1,-8,-3,-7,-10,9,9,-4,-3,9,8,1,8,9,1,-8,1,9,-9,-8,-7,4,6,-1,1,-10,-4,5,2,1,-5,6,-4,-9,-1,5,3,4,-9,10,-6,1,1,3,1,9,-4,-3,9,-5,-8,-8,10,-2,-6,-3,3,2,1,1,9,1,4,4,-3,-4,9,-3,4,10,-8,-2,-6,-6,2,-2,-7,6,4,-5,-1,9,2,1,-9,-8,3,-7,6,9,-3,1,-1,-1,9,3,8,-9,3,-6,2,-9,-6,7,4,-2,-4,-6,9,9,5,7,-3,-6,8,-1,8,7,-8,7,-8,-8,-1,-7,-4,-8,8,4,2,10,-2,2,10,-3,2,4,-9,2,7,-10,-8,9,4,9,-3,-7,1,6,-9,-2,1,10,-8,-9,4,5,-8,7,-10,-9,7,-10,7,10,7,6,-9,7,9,-4,7,-4,-6,8,-9,-8,7,7,-4,-10,2,-8,-4,-10,-2,7,-6,6,-2,-9,-3,1,7,-4,6,1,-3,1,-1,-2,7,-2,-10,4,-3,5,2,-6,6,7,5,2,-4,-5,5,-9,7,-3,10,-9,2,8,1,-10,-3,9,-6,8,-5,6,10,-10,9,-2,-3,-1,-4,-9,-3,2,-8,8,3,4,8,-5,7,5,-1,6,-7,-10,-8,-8,8,8,2,-9,-1,10,-7,8,-2,-2,10,-6,-5,-2,5,-3,-1,-8,9,7,-4,-1,-3,5,-4,6,-2,-2,1,9,7,9,-5,2,-6,-3,-5,-1,5,-4,10,-2,-4,-1,-10,9,4,-7,4,-2,10,3,2,-6,8,6,9,4,2,-8,-8,4,-6,-3,-2,-5,10,10,1,-1,-5,1,-4,-9,10,3,-6,-2,-7,7,9,10,7,3,5,9,10,-3,-4,-3,10,4,10,-2,-2,6,8,-1,5,5,10,9,-5,-8,-7,-3,6,6,-5,3,-5,9,5,10,-5,-4,-10,-9,-7,4,-8,2,-4,10,-5,7,3,5,7,2,2,-1,8,7,-6,1,8,10,2,-3,4,-8,9,7,-9,-10,-4,3,-2,9,-3,-4,6,5,3,-6,10,-3,7,5,-10,9,5,-6,-4,4,9,-8,-9,2,1,-8,4,-9,3,9,8,-5,-1,9,10,-3,-3,-4,2,-4,-6,5,6,-10,-8,10,8,1,8,5,7,-7,-6,3,-6,4,-1,-1,3,-4,10,-8,-1,8,-3,9,10,10,-4,-8,10,-2,9,6,5,-4,5,-3,-5,8,-5,-7,1,-3,-10,7,10,-1,-3,2,8,-10,8,-9,-6,10,-2,-6,-8,-9,-9,8,-6,-2,-7,-4,10,6,-1,2,2,9,-1,-8,-6,-7,3,-6,-6,7,-3,-8,7,3,-3,-5,7,10,1,-8,6,1,3,-10,8,-4,-6,-5,10,-1,3,7,-10,-7,-4,-7,10,-2,7,-4,7,7,-2,-8,-10,-5,-5,-2,-7,5,6,2,9,-1,-5,-3,-4,-6,5,-1,5,10,6,6,-3,-7,-2,-8,-4,-1,-5,9,-7,8,-1,6,4,-5,-10,-6,-3,-3,-3,-7,-2,-3,-3,8,9,1,-6,-5,3,-5,-2,-5,3,1,-10,2,-7,1,-9,-1,7,-10,8,-7,7,3,10,-6,7,10,6,-1,5,6,-1,2,-10,10,10,-1,9,8,-4,-4,-4,2,6,-4,3,7,-8,1,3,-5,1,10,10,1,4,8,-2,7,-2,-9,2,1,4,7,-5,10,8,8,-8,3,4,10,-10,4,-10,8,-8,4,-1,1,3,4,1,-9,-10,-1,-4,10,9,-5,-8,1,-2,-10,-5,-10,2,10,-5,4,-3,-10,7,-10,-6,5,2,8,2,8,10,-8,2,-8,8,10,9,8,-2,4,7,-9,-9,2,6,-9,-10,1,-4,8,-2,-3,10,9,-2,-7,-4,8,5,5,2,10,-2,3,-9,-9,-1,2,-6,3,-5,6,9,5,8,7,-7,-1,7,6,-6,7,-7,-9,3,10,-4,-9,4,1,7,1,7,2,7,2,-5,1,9,5,-3,1,-3,2,-6,9,-3,7,2,3,-1,3,5,8,-3,7,-9,-3,9,-2,-10,-10,9,2,9,1,2,6,7,3,-4,-3,-9,5,-4,4,-8,-7,-2,-10,-6,-2,6,-8,-9,-10,3,8,-2,1,2,1,8,6,-9,-2,9,3,-4,-10,-2,-8,6,9,10,7,5,-1,8,-4,8,-1,-4,4,-5,-10,5,-4,-5,10,-4,9,-6,4,-2,10,6,8,-6,-9,7,8,7,-4,4,2,-2,7,5,-2,10,6,-3,-8,-9,8,6,9,-9,-10,10,2,2,1,-1,-4,-7,8,7,1,-3,-3,6,-4,6,7,-5,9,8,-5,-5,7,9,3,3,3,2,7,-9,-2,-7,2,-10,9,3,5,1,1,9,-10,-10,8,-1,2,8,-5,-5,-6,10,-10,-7,2,-9,2,10,2,-6,-4,7,-7,1,9,10,10,-9,4,7,6,2,-8,1,-2,10,4,-1,-10,2,8,-5,4,1,9,-6,6,6,-10,-3,4,10,9,-8,6,10,-3,-4,-8,5,-3,-4,-10,-2,-9,-7,-8,-2,8,8,9,-10,5,-9,7,10,-8,-10,7,3,8,-1,-6,-5,-3,10,3,6,2,-8,-1,2,5,8,-5,-9,10,1,-3,10,-9,9,10,9,3,2,8,-3,-7,8,-3,-7,7,7,-2,7,7,3,-3,1,2,10,-9,-4,6,-8,-6,-10,-3,-4,-5,-6,9,2,-2,10,6,3,-2,2,6,7,-7,9,-5,4,-6,-2,10,8,5,-5,9,8,4,1,2,-5,4,-6,9,-9,-10,1,-5,3,9,2,-7,-1,-10,2,10,-8,3,5,6,6,-5,8,-6,-1,-9,2,3,9,-6,5,10,2,1,-5,9,5,-10,5,3,2,-9,10,-8,5,-9,1,6,-5,9,4,-5,4,-3,1,5,2,8,5,-10,-3,3,-2,-7,5,-9,6,1,9,-10,-2,4,8,5,-9,4,-7,3,-5,6,-8,1,1,5,6,10,2,-3,3,4,4,-1,-4,-10,-7,-10,-3,1,5,-2,3,2,-4,-6,10,1,7,-4,-8,-3,-1,2,-6,-6,8,5,-9,-9,-9,-2,-4,-4,6,-5,2,-1,-10,9,-5,10,-4,-7,1,8,10,10,2,8,-2,4,10,1,10,10,4,1,5,8,3,-6,5,-8,10,7,-10,7,6,-1,-5,-2,-1,6,-8,-1,-10,3,-3,-4,-8,6,-2,7,1,4,9,7,-6,3,7,4,-1,5,-9,-8,2,4,-8,-1,9,9,1,5,8,1,3,5,4,1,-10,2,-4,-7,-7,3,6,-3,7,4,9,-1,1,-8,5,-10,-10,-9,9,7,6,4,-2,-1,-9,2,-10,-2,-8,-8,10,2,-2,-4,-8,-1,-1,-10,-3,1,6,10,8,-7,-2,3,-6,-2,7,1,9,2,6,4,-1,-1,-8,-2,-3,-5,5,7,-3,2,-8,-5,-5,-6,9,10,5,-8,2,-1,9,10,-6,-7,-9,-8,2,-4,2,-7,10,-10,1,-7,-8,-8,4,2,8,-8,-10,3,-2,10,5,-5,-7,9,5,-10,4,-9,-7,-8,-2,-1,-5,-4,-9,10,-2,-10,-2,-6,5,-1,4,-7,10,-6,-4,-3,-1,-5,-3,-6,-4,5,-5,4,-7,-9,4,3,-3,-6,-6,-5,8,-7,7,-8,-10,-8,4,-5,6,3,9,-3,5], dtype = "int8")#candidate|5079|(1560,)|const|int8
const_5080 = relay.const(-10, dtype = "int64")#candidate|5080|()|const|int64
var_5081 = relay.var("var_5081", dtype = "int64", shape = (1232,))#candidate|5081|(1232,)|var|int64
const_5082 = relay.const([[-9,-8,1,-1,-2,-2,5,10,7,-4,-2,-2,9,3,8,-2,6,5,7,10,-1,8,-10,6,8,10,8,-8,1,-4,-9,-7,6,4,-10,-5,-7,-10,1,-4,7,-8,-5,-3,10,-7,-4,3,10,3,4,-2,-3,7,10,3,-5,-4,7,-9,7,-5,-2,-10,10,4,-3,4,-9,-10,-2,6,-3,-10,-10,-1,-4,-7,-7,-9,-2,10,9,3]], dtype = "int8")#candidate|5082|(1, 84)|const|int8
call_5077 = relay.TupleGetItem(func_4093_call(relay.reshape(const_5078.astype('int8'), [10, 12, 1]), relay.reshape(const_5079.astype('int8'), [10, 12, 13]), relay.reshape(const_5080.astype('int64'), []), relay.reshape(var_5081.astype('int64'), [1232,]), relay.reshape(const_5082.astype('int8'), [84,]), ), 2)
call_5083 = relay.TupleGetItem(func_4100_call(relay.reshape(const_5078.astype('int8'), [10, 12, 1]), relay.reshape(const_5079.astype('int8'), [10, 12, 13]), relay.reshape(const_5080.astype('int64'), []), relay.reshape(var_5081.astype('int64'), [1232,]), relay.reshape(const_5082.astype('int8'), [84,]), ), 2)
func_2137_call = mod.get_global_var('func_2137')
func_2140_call = mutated_mod.get_global_var('func_2140')
var_5101 = relay.var("var_5101", dtype = "bool", shape = (30,))#candidate|5101|(30,)|var|bool
var_5102 = relay.var("var_5102", dtype = "bool", shape = (70, 6))#candidate|5102|(70, 6)|var|bool
call_5100 = relay.TupleGetItem(func_2137_call(relay.reshape(var_5101.astype('bool'), [1, 5, 6]), relay.reshape(var_5102.astype('bool'), [14, 5, 6]), ), 0)
call_5103 = relay.TupleGetItem(func_2140_call(relay.reshape(var_5101.astype('bool'), [1, 5, 6]), relay.reshape(var_5102.astype('bool'), [14, 5, 6]), ), 0)
func_1916_call = mod.get_global_var('func_1916')
func_1920_call = mutated_mod.get_global_var('func_1920')
const_5111 = relay.const([[2,6,2,5,-10,6,-2,-2,8,-9,4,7,-7,-7,-6,-6,5,-10,5,4,10,9,-8,6,-7,-8,4,4,-6,2,8,-10,-1,-1,-10,4,-5,-5,-4,-9,-5,-1,4,10,8,2,1,-8,-6,1,-6,-7,7,-5,2,-1,-3,-8,10,9,-2,-4,4,-9,3,-6,4,1,7,4,2,-10,8,3,6,3,-10,-4,9,5,-3,2,-6,9,-2,5,-8,8,3,-3,-1,10,5,8,-7,-7,-7,8,-5,9,1,9,10,-5,-9,3,-7,3,-9,6,-7,-8,4,-10,-4,6,4,5,5,9,2,-5,-7,1,-3,-3,1,-5,-5,6,3,-7,9,2,-5,9,-7,6,-5,9,5,-6,-3,-1,-7,10,-1,8,-8,-4,-3,10,-5,5,3,-6,8,-5,7,9,-5,2,3,-3,-2,6,8,-7,-2,3,-6,6,-4,-3,6,-3,-1,6,6,-7,-6,4,-8,-9,3,10,4,3,4,9,8,-1,-8,2,-6,-2,3,8,-1,6,10,3,-9,-2,-4,2,-2,10,-8,5,5,-8,-5,2,3,10,-1,7,-9,2,1,-5,5,-4,2,-8,-9,5,-3,2,2,-9,-4,2,7,-9,8,-3,3,-7,-9,2,-1,1,-6,10,-4,-3,-5,-6,-9,-1,10,9,1,10,10,7,-1,-5,-3,4,-2,-10,2,-9,10,9,4,-5,3,-7,7,6,6,4,-6,9,-5,-5,4,1,4,5,-9,2,-6,-7,-5,-3,-4,-10,-7,-8,-9,-1,-7,-8,4,8,6,5,1,6,-5,-4,-8,-9,5,-9,-10,-7,5,-9,-1,-10,9,10,9,3,-7,-5,3,-1,-9,1,3,8,5,4,-6,-2,2,-4,-10,-7,8,-3,5,-7,6,-6,8,-6,-1,1,-7,-4,-7,-1,9,-3,1,-6,-1,3,-3,-8,-2,3,7,3,-7,4,-7,-10,-5,1,-8,-4,-2,-8,-5,5,3,3,4,-5,-4,6,5,8,-8,8,8,4,-7,4,-1,9,10,3,9,8,10,-5,-9,-5,-1,-2,-4,-10,1,5,6,-3,8,-2,-7,-10,-4,1,7,-10,-10,-9,1,7,5,1,6,10,3,2,-10,-8,-7,-8,7,-5,2,-1,-7,-4,-10,6,2,-3,7,6,8,-4,3,1,1,6,4,-6,-8,3,-5,8,-6,4,-4,1,-2,-9,6,-4,-10,10,-8,4,7,5,-8,-1,4,6,-4,2,-3,-3,-2,7,7,-5,4,-4,7,-2,4,1,-9,-6,5,10,-8,6,10,-2,-1,-6,4,-5,-1,8,-2,-3,-6,-3,8,1,-6,8,10,-7,-6,-5,4,3,-9,-3,2,2,-7,-10,-8,-5,-8,10,-4,1,9,2,8,-9,8,7,-9,1,4,5,4,6,-2,2,-3,-5,10,6,-5,-2,8,-7,10,5,9,6,9,-5,-8,8,-1,4,2,-7,8,2,-1,-4,-4,5,-10,-7,4,-9,-1,4,10,5,-9,-9,-4,-2,9,-5,5,-6,-2,-4,-7,1,-10,1,-2,-3,9,-7,-4,-7,4,-6,4,6,7,4,-2,1,9,-3,-8,-1,2,-9,6,-9,-10,9,-9,1,4,-9,10,8,1,2,2,6,3,10,3,-10,-6,-4,4,2,-3,-4,-10,4,-6,1,-2,-1,6,6,1,-10,-5,-4,2,-8,-7,-9,5,-8,-2,10,-10,8,-10,-5,10,-8,2,5,9,10,-4,-3,-2,3,-2,7,1,7,-2,4,8,7,5,-7,-5,-10,-7,9,6,3,-2,1,10,7,-10,3,3,9,4,-2,-4,6,-7,-1,7,-2,-6,4,-1,-7,-4,-1,2,4,-8,3,-9,1,5,1,-8,3,-4,-10,-2,5,9,10,8,7,2,-7,-10,9,10,9,10,2,3,-10,10,8,1,-1,3,4,8,8,-10,3,-6,-8,6,-2,-3,-1,-8,-2,-8,10,1,-9,-5,-4,4,7,-10,8,-6,-3,3,-1,3,-9,-8,-4,-3,5,10,5,5,-5,6,10,-4,-2,-5,7,8,-10,-7,3,-9,-9,6,-2,3,-7,-9,-2,8,-9,7,-4,3,9,-10,9,-1,-8,-2,1,6,-6,-4,9,10,-8,5,2,-6,8,-5,7,7,6,-4,7,-4,-8,-1,2,-6,-8,10,2,1,6,-9,4,6,7,7,-1,-7,9,5,-1,10,5,9,10,7,8,6,-4,-3,2,5,1,10,1,-1,-8,2,-3,-1,3,-6,4,4,-4,-8,-7,8,6,7,-5,2,9,7,6,-4,5,-9,-4,6,-2,-4,7,6,-2,-1,-9,-10,-6,10,-2,1,6,6,-5,-8,7,5,-6,5,1,-4,-8,9,-9,6,-5,1,-6,-3,-1,7,5,-2,-2,8,5,-4,-6,9,-5,-1,1,-4,-10,10,-8,-1,-1,-3,-2,-6,4,-1,6,8,-8,-2,10,8,2,5,-6,-2,-1,-10,7,9,-8,2,4,-5,-8,1,-2,-1,-8,-6,-3,1,-7,-7,9,-6,10,-10,9,-7,2,-6,-9,-3,-5,1,-9,-2,-5,1,-6,-10,-4,-3,6,9,-9,4,-3,-5,6,-6,2,1,8,-1,8,1,4,4,-3,9,7,-2,-10,7,-4,-3,3,-4,-6,5,8,6,9,3,-1,8,8,10,-6,6,-2,-8,4,3,-7,-4,4,9,7,9,-6,10,6,4,7,-2,10,3,2,-4,4,-5,7,4,-8,4,10,10,3,8,5,-10,-1,-8,7,-1,-9,1,-2,10,8,6,1,5,-1,4,4,2,7,8,4,-4,6,9,-10,8,6,-9,-1,8,7,9,-8,-9,-10,8,6,9,9,2,8,9,-3,8,5,5,2,5,4,4,1,-10,-5,-9,-6,6,-10,-5,-5,6,-10,2,-6,1,-1,3,-8,8,-3,-8,7,-10,-10,1,-9,5,-9,-3,-6,-4,1,10,2,3,-7,4,-6,1,1,-1,-1,2,-5,-5,-9,-9,-8,-8,-7,8,3,-7,6,2,2,-10,2,-2,-4,8,-8,4,6,-6,4,-8,-6,3,-5,-1,-10,1,-2,-9,-2,2,3,-3,9,-3,-5,-9,6,-3,8,-1,7,-2,-4,5,-9,-5,-4,-3,-10,-7,5,-6,-9,3,4,-8,5,8,-3,7,-4,4,3,-3,2,-9,-8,-10,-5,8,9,8,8,-3,-3,-10,-5,4,-2,2,-9,-2,8,-7,7,10,-3,-7,-6,-1,3,5,8,7,-8,-3,-1,-5,-7,10,8,-9,10,-2,-8,-7,-8,10,-4,5,7,-1,1,5,-10,3,5,-9,-7,3,-7,8,-5,-9,-7,-2,-2,-1,1,-2,-3,9,6,4,2,-1,-6,-2,7,-9,-6,9,6,-1,-7,9,10,9,7,-9,9,-6,9,5,9,-2,-6,5,2,10,10,9,-7,-6,-2,-3,-5,7,7,9,7,-3,2,-7,-3,-4,-6,5,-3,-8,-3,7,10,-1,-5,2,-2,7,4,-8,2,-2,-5,4,5,5,2,8,-6,-6,-1,-5,7,9,-7,-8,9,9,-8,-3,4,-5,-10,6,-3,-6,-5,7,2,-3,3,10,-5,7,4,6,-8,4,-3,-1,-7,1,8,3,-6,-9,-10,-2,-9,-8,-10,9,-7,-5,5,7,3,-3,-7,-10,-5,-5,-9,-1,7,9,6,-5,-5,5,6,-2,-1,-9,3,3,-10,6,7,-6,-9,-2,-7,9,-7,1,-6,2,8,-8,-3,-1,-1,-2,4,-3,-5,1,-3,-3,7,-4,5,-10,9,5,1,5,-3,-10,-3,2,-1,-1,5,7,-5,5,-6,6,5,7,7,7,7,7,-2,9,3,-8,-3,10,-5,-10,2,-8,7,-2,-7,2,-8,-5,7,-4,3,9,-6,-4,4,3,1,-2,7,1,-4,-8,-4,-3,-7,3,8,4,1,-2,-3,8,6,-2,-3,-7,-10,1,7,4,10,2,1,9,-7,6,8,5,5,7,2,7,8,-3,4,9,-7,2,-8,-10,4,4,-2,-5,6,-7,5,-10,3,-10,-3,1,-1,-9,-3,-5,-7,-8,9,7,5,-4,9,-5,-9,7,7,3,-10,8,-5,10,-3,-2,2,-10,3,-9,-9,-3,3,-2,10,8,-10,-3,3,-7,-4,1,-8,4,4,-4,-8,-1,8,1,1,-10,-10,-5,8,1,3,-7,2,2,5,-9,2,-5,-3,10,10,4,3,-2,3,5,7,7,-5,5,3,-4,6,-7,8,5,-7,7,-10,3,4,1,1,-1,5,6,-2,6,10,6,-1,5,8,2,-2,-3,-4,-10,-2,-9,8,6,-4,5,6,-3,10,6,3,-10,-2,3,-7,1,5,6,-3,-3,-7,-4,-10,1,-8,-2,5,-6,-2,3,2,-1,-3,-2,1,7,4,2,-10,-5,-8,-7,-8,-9,2,2,-7,-2,-9,-9,10,10,-9,9,3,-6,-3,-5,-8,3,-10,3,-7,-10,-1,-9,-6,6,-1,-3,-3,7,-3,-6,9,-10,-4,8,10,-8,-6,-2,5,-6,-5,3,9,3,-4,-5,-10,-4,10,6,8,10,2,-6,2,-3,4,-6,-6,7,1,3,-8,6,8,5,7,-2,9,-7,-4,1,-8,1,7,-4,-1,-2,7,-7,1,3,-9,-8,-4,3,-7,6,-1,-9,-6,-1,-3,5,10,-3,4,-10,2,3,-4,6,1,5,10,4,-9,10,-5,-10,-7,-7,-10,5,-4,-7,-9,8,-4,3,8,-7,-2,7,-4,-6,9,-5,8,-10,-2,-3,-10,10,5,-8,-1,-10,-6,4,-3,2,-4,10,6,-6,-6,9,1,10,1,9,-4,8,-5,9,-5,-9,-9,2,-10,6,-9,-10,2,-4,-5,-6,-3,9,1,5,1,4,2,5,-6,8,4,4,5,9,-5,10,-1,4,-9,9,-3,-7,-1,-9,-1,-10,4,-1,6,-2,6,6,3,1,-1,9,3,10,-8,9,-7,-8,-7,-9,-10,-1,-3,6,-9,7,7,-5,-3,6,-8,-5,-6,-4,-2,3,4,-6,2,-4,-1,2,-6,-10,-6,2,-1,-6,10,1,5,-3,9,7,-3,4,-9,-2,5,-5,10,4,-6,10,2,-9,-7,-5,2,-10,10,-9,-2,5,-4,-8,-2,8,5,-8,-1,-4,-7,-7,-1,-4,-10,-4,-3,-10,1,-3,-4,-5,-1,6,7,-10,-10,-3,-5,6,9,8,8,3,9,6,-7,2,1,-9,1,3,8,6,5,9,-1,10,-8,-1,-6,-10,-6,-10,4,7,1,-9,-10,-2,-5,10,9,-5,10,-4,3,-1,8,-7,-3,6,-6,2,-9,10,-5,-10,-10,-1,-1,9,9,-4,-5,7,-7,3,9,-1,10,-2,2,1,-9,4,-9,5,-7,5,9]], dtype = "uint8")#candidate|5111|(1, 2048)|const|uint8
call_5110 = relay.TupleGetItem(func_1916_call(relay.reshape(const_5111.astype('uint8'), [8, 16, 16]), relay.reshape(const_5111.astype('uint8'), [8, 16, 16]), ), 0)
call_5112 = relay.TupleGetItem(func_1920_call(relay.reshape(const_5111.astype('uint8'), [8, 16, 16]), relay.reshape(const_5111.astype('uint8'), [8, 16, 16]), ), 0)
bop_5117 = relay.greater_equal(const_5078.astype('bool'), call_5077.astype('bool')) # shape=(60, 2)
bop_5120 = relay.greater_equal(const_5078.astype('bool'), call_5083.astype('bool')) # shape=(60, 2)
output = relay.Tuple([uop_5068,const_5079,const_5080,var_5081,const_5082,call_5100,var_5101,var_5102,call_5110,const_5111,bop_5117,])
output2 = relay.Tuple([uop_5068,const_5079,const_5080,var_5081,const_5082,call_5103,var_5101,var_5102,call_5112,const_5111,bop_5120,])
func_5129 = relay.Function([var_5067,var_5081,var_5101,var_5102,], output)
mod['func_5129'] = func_5129
mod = relay.transform.InferType()(mod)
mutated_mod['func_5129'] = func_5129
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5129_call = mutated_mod.get_global_var('func_5129')
var_5131 = relay.var("var_5131", dtype = "float64", shape = (4, 10, 2))#candidate|5131|(4, 10, 2)|var|float64
var_5132 = relay.var("var_5132", dtype = "int64", shape = (1232,))#candidate|5132|(1232,)|var|int64
var_5133 = relay.var("var_5133", dtype = "bool", shape = (30,))#candidate|5133|(30,)|var|bool
var_5134 = relay.var("var_5134", dtype = "bool", shape = (70, 6))#candidate|5134|(70, 6)|var|bool
call_5130 = func_5129_call(var_5131,var_5132,var_5133,var_5134,)
output = call_5130
func_5135 = relay.Function([var_5131,var_5132,var_5133,var_5134,], output)
mutated_mod['func_5135'] = func_5135
mutated_mod = relay.transform.InferType()(mutated_mod)
var_5191 = relay.var("var_5191", dtype = "float64", shape = (16, 6, 13))#candidate|5191|(16, 6, 13)|var|float64
uop_5192 = relay.acos(var_5191.astype('float64')) # shape=(16, 6, 13)
output = uop_5192
output2 = uop_5192
func_5202 = relay.Function([var_5191,], output)
mod['func_5202'] = func_5202
mod = relay.transform.InferType()(mod)
var_5203 = relay.var("var_5203", dtype = "float64", shape = (16, 6, 13))#candidate|5203|(16, 6, 13)|var|float64
output = func_5202(var_5203)
func_5204 = relay.Function([var_5203], output)
mutated_mod['func_5204'] = func_5204
mutated_mod = relay.transform.InferType()(mutated_mod)
var_5441 = relay.var("var_5441", dtype = "float64", shape = (12, 5, 10))#candidate|5441|(12, 5, 10)|var|float64
uop_5442 = relay.log2(var_5441.astype('float64')) # shape=(12, 5, 10)
const_5446 = relay.const([[[1.887593,3.121168,2.200984,-6.734019,8.166094,-2.724950,9.934248,-3.570247,-1.428319,8.391954],[-4.495238,2.707899,-9.923585,1.954564,2.112169,1.735729,-0.670828,-0.810231,4.541978,-7.827254],[9.196925,2.382439,0.614992,-4.358151,-5.763106,-3.496972,7.378591,-0.007608,-9.984779,0.294600],[2.572544,-5.846695,1.955743,8.965369,-7.222366,2.947615,-4.648137,-1.925749,-0.008366,3.506866],[-2.402509,2.173825,8.024745,-0.416133,7.598988,-9.131372,-9.246651,7.593985,0.280466,-7.090770]],[[-0.836579,2.045220,-2.059235,-2.015802,-9.805037,5.676669,2.547067,-4.377086,0.836420,-4.946914],[-4.302744,7.299765,-5.359651,-5.160997,9.729927,1.531569,-8.194093,-9.031151,-2.287075,-7.552983],[-4.941374,-6.919039,-0.753032,5.997911,3.419589,5.217526,-3.847442,-1.952548,3.009241,-0.331838],[-8.670815,-9.047295,-6.771237,9.638290,3.245025,3.893031,-5.270579,1.423240,-0.101006,-0.951594],[2.920157,-2.816589,-7.602403,-7.592321,6.236012,-3.839298,-0.384633,2.184766,8.007836,2.838085]],[[-3.725989,-8.221949,-2.132365,6.463363,-3.317451,-6.932754,1.578154,8.656264,-2.773289,5.586323],[-1.014527,7.962965,-7.085303,2.725228,4.640060,-7.892349,4.105674,-1.298595,2.771550,4.728638],[8.932055,7.264181,-9.994853,-6.566411,-0.006688,-0.222731,8.239777,3.458810,-3.089111,2.684815],[1.715574,5.280140,0.290280,5.758729,-0.251324,-8.584632,-8.203635,-2.682560,4.226569,8.470065],[8.013683,-9.562372,3.794386,-4.406666,2.864300,-7.713586,-2.909874,4.418966,6.400618,-1.454913]],[[4.550271,-8.030318,-0.379577,-7.594802,2.456694,6.157471,-8.278604,-1.013836,5.920368,5.295835],[-6.850259,8.436327,-3.186871,-1.023755,5.827068,3.776770,-4.462134,1.446290,-3.073942,-7.873549],[4.280455,-8.776084,2.925873,-7.117512,-5.779991,0.533718,0.725449,1.988575,-1.724572,0.325459],[-5.830924,-3.804388,-2.638769,6.808620,-0.061617,7.598335,7.121197,3.503427,-1.933282,7.675278],[5.489225,7.850441,1.030400,-3.987078,0.978102,-9.756135,-5.985182,-4.155237,-8.692211,-1.783246]],[[6.720602,-8.257377,3.725946,5.973801,6.045355,-5.759606,-3.686700,1.066753,-1.346334,0.452137],[-0.389813,5.081131,-4.723730,5.015793,1.452091,1.314824,0.060257,2.903493,8.878360,-7.479646],[7.151433,-3.134359,4.278790,-9.611506,1.286325,4.122461,1.375862,1.930814,-9.774412,-2.888699],[-5.796204,-7.470163,6.011218,-1.984702,-1.704581,-2.316922,-9.417422,3.591999,-3.612601,5.125293],[5.764032,0.732000,-2.548395,5.508435,-6.908254,-0.262912,3.133635,-6.856099,7.416720,-8.272172]],[[-5.951288,3.252025,3.949355,-6.311278,-8.728176,5.441778,-3.205696,-0.354262,9.045464,7.965115],[8.314594,-3.268165,-9.906702,-3.655156,-5.945076,6.394906,1.479026,6.173329,-2.920527,-8.269591],[3.613369,-1.463527,4.074469,-5.045643,-7.319193,-7.823447,-8.552630,6.595145,5.804121,-5.748353],[-4.779175,-7.306002,-8.269176,-5.935558,1.543506,-6.793410,-4.060022,-3.787796,9.814134,4.533227],[-8.680567,-3.267634,-2.368952,5.670491,8.587581,1.863354,-0.146560,2.396411,1.242903,2.166470]],[[-8.672153,-8.539722,-2.118562,-7.528625,6.680380,-4.226221,1.805674,-8.618743,-0.694088,-1.299194],[4.548782,8.643561,4.134307,0.444731,-7.437507,-5.450514,-8.623873,8.181632,7.992663,-9.454989],[1.718594,8.234016,6.739839,7.662586,1.967624,2.893024,2.965285,-5.149943,5.323280,-9.661931],[-3.062295,1.065259,6.417104,-3.612099,-5.746962,5.476329,4.236928,5.060727,2.499973,-2.501788],[-0.346794,9.647889,-2.112958,-0.004167,1.102144,5.274508,1.136530,-3.141145,8.822351,-6.660923]],[[-8.861763,-8.487011,-2.561074,-7.360917,-3.548266,-4.635839,7.661885,-6.970838,-3.834601,3.222359],[8.862466,5.071391,0.295326,6.041530,-6.891643,6.409253,-8.783526,-9.572284,7.627091,-7.965545],[0.671148,-2.004329,-1.134103,-9.123327,6.600149,7.324425,-7.617240,-6.440390,-3.028679,0.825242],[8.175707,8.744312,-5.761620,-5.898940,2.651592,2.695329,4.528751,0.012985,-3.110682,-6.355349],[9.726687,6.059596,7.570888,-7.054266,3.122903,-1.744411,-5.114880,-6.128038,-5.438115,-2.418125]],[[4.184078,-2.992804,7.069584,3.035151,-4.239828,5.400752,2.787418,4.833493,-3.944811,-8.309520],[1.018373,-3.906155,4.654285,-2.729401,9.885721,9.380677,-2.426903,-9.232345,7.589765,-7.525166],[6.409780,5.607220,-5.687133,4.303437,-0.794004,-4.620516,0.827626,2.960384,-4.752150,-7.614702],[-0.975920,-4.336302,5.864922,-3.681685,-2.237381,-2.468096,9.822295,-1.189278,7.650146,-6.041449],[-6.015444,2.997208,-2.523860,-9.913107,4.850330,-8.246170,-4.330018,-8.035933,2.264280,-2.980504]],[[8.583421,-3.698706,-6.913918,-0.846528,-7.513270,-8.751805,-1.046067,-5.129141,-1.209593,1.385547],[3.967498,-9.481085,-1.451009,-6.673036,2.896165,-2.395519,9.689661,9.461786,3.964900,2.163875],[2.934222,-4.245826,-5.398024,-3.412750,3.600363,-1.099574,9.043765,-6.956350,7.250210,-4.878425],[1.883866,-1.980649,7.264391,9.883902,9.688895,-1.539215,-7.397726,-0.179096,-0.619614,5.122053],[-0.153821,-8.890773,-8.979894,-3.781362,1.294963,2.009127,8.194410,-3.639458,9.868831,3.243745]],[[-7.764690,6.658279,1.215727,9.549866,-5.925244,8.111389,-9.886165,3.560052,4.138403,9.506917],[-0.277078,9.969735,-7.171824,-3.732597,4.328063,-0.759245,7.773266,-5.165432,-7.026231,-1.976416],[2.522904,1.356404,-2.001802,-2.606380,-1.549547,-1.964355,-6.143265,-6.184588,3.780471,8.399657],[2.889718,6.790852,0.391570,2.530618,3.427286,5.860243,1.256785,4.295699,3.056744,3.612169],[1.613964,-0.918469,-6.960687,-2.066982,2.999806,-3.579736,5.632990,5.662928,-7.919928,-9.534757]],[[2.513174,-9.953375,7.073001,-0.388846,8.350772,-0.829576,1.538928,2.357372,-6.284213,-0.191709],[7.560600,-2.905595,-2.814771,5.894270,-7.379713,-9.263132,7.509048,-1.114058,-3.021193,4.356362],[5.961275,-0.381600,-9.375661,-9.584420,5.094820,-2.398661,9.491106,-5.024565,0.036532,-0.743471],[0.949095,9.147963,3.507191,3.769480,-7.503238,-2.620530,6.621387,-7.858743,-1.962446,-6.745850],[7.899184,-0.694780,5.862099,-7.553122,-1.238522,-1.685443,-3.120372,7.053358,5.959156,8.472260]]], dtype = "float64")#candidate|5446|(12, 5, 10)|const|float64
bop_5447 = relay.power(uop_5442.astype('float32'), relay.reshape(const_5446.astype('float32'), relay.shape_of(uop_5442))) # shape=(12, 5, 10)
output = bop_5447
output2 = bop_5447
func_5450 = relay.Function([var_5441,], output)
mod['func_5450'] = func_5450
mod = relay.transform.InferType()(mod)
mutated_mod['func_5450'] = func_5450
mutated_mod = relay.transform.InferType()(mutated_mod)
var_5451 = relay.var("var_5451", dtype = "float64", shape = (12, 5, 10))#candidate|5451|(12, 5, 10)|var|float64
func_5450_call = mutated_mod.get_global_var('func_5450')
call_5452 = func_5450_call(var_5451)
output = call_5452
func_5453 = relay.Function([var_5451], output)
mutated_mod['func_5453'] = func_5453
mutated_mod = relay.transform.InferType()(mutated_mod)
var_5541 = relay.var("var_5541", dtype = "int32", shape = ())#candidate|5541|()|var|int32
const_5542 = relay.const([[[10,-8,-4,7,-7,-1,2,3,-7,-7,-10],[-9,-10,-7,1,-8,9,8,-2,7,1,-4],[-9,7,9,-1,10,7,-10,10,-8,4,4],[-1,6,-4,5,10,-4,-4,-2,5,-6,3],[-9,-7,1,4,-5,2,2,-10,5,-5,-8],[3,3,-3,10,-4,1,6,5,9,-5,-1]]], dtype = "int32")#candidate|5542|(1, 6, 11)|const|int32
bop_5543 = relay.less(var_5541.astype('bool'), const_5542.astype('bool')) # shape=(1, 6, 11)
func_809_call = mod.get_global_var('func_809')
func_813_call = mutated_mod.get_global_var('func_813')
var_5552 = relay.var("var_5552", dtype = "int8", shape = (84,))#candidate|5552|(84,)|var|int8
call_5551 = relay.TupleGetItem(func_809_call(relay.reshape(var_5552.astype('int8'), [4, 7, 3]), relay.reshape(var_5552.astype('int8'), [4, 7, 3]), ), 0)
call_5553 = relay.TupleGetItem(func_813_call(relay.reshape(var_5552.astype('int8'), [4, 7, 3]), relay.reshape(var_5552.astype('int8'), [4, 7, 3]), ), 0)
func_2137_call = mod.get_global_var('func_2137')
func_2140_call = mutated_mod.get_global_var('func_2140')
var_5555 = relay.var("var_5555", dtype = "bool", shape = (30,))#candidate|5555|(30,)|var|bool
const_5556 = relay.const([False,False,True,True,True,False,True,True,False,True,False,True,False,False,True,False,True,False,True,True,False,False,False,True,False,True,True,True,True,True,False,True,False,True,False,True,True,True,False,False,True,True,True,True,True,False,True,False,True,True,True,True,True,False,False,False,True,False,True,False,True,False,True,True,True,True,True,True,True,True,True,False,False,False,True,False,False,True,False,True,False,False,False,True,False,True,True,True,True,True,False,False,True,True,False,False,True,True,True,False,False,False,False,True,False,True,True,True,False,True,False,False,True,True,False,True,False,True,True,True,False,True,True,True,False,True,False,True,False,True,True,True,False,True,False,False,True,True,True,True,False,False,False,False,True,False,True,True,True,False,False,False,True,True,True,False,True,True,True,True,True,True,False,True,False,False,True,True,True,True,True,False,True,True,False,False,True,True,True,False,False,True,False,True,False,False,True,True,True,True,True,False,False,True,True,False,False,True,False,True,False,True,True,True,False,True,True,True,True,False,True,True,True,False,False,True,False,False,True,True,True,False,False,True,True,True,True,True,False,True,True,False,False,False,True,False,False,False,True,True,False,True,False,True,True,False,True,True,False,False,False,True,False,False,False,True,False,False,True,False,True,False,True,False,False,False,False,False,True,False,True,True,True,True,True,False,False,False,True,False,False,True,False,False,False,False,True,False,False,False,False,False,False,True,False,True,False,False,True,True,False,True,False,True,False,True,True,False,True,False,True,True,False,True,True,False,True,True,False,False,True,False,False,False,False,False,True,False,False,False,True,True,True,True,False,False,True,False,False,False,False,True,False,False,False,True,False,False,False,False,False,False,True,False,False,True,False,True,True,False,True,False,True,True,True,False,True,False,False,True,True,False,True,True,True,True,False,True,True,True,False,True,True,True,True,True,False,True,False,True,False,True,True,True,False,False,True,True,True,True,True,False,False,False,True,True,True,True,False,True,False,False,False,True,True,False,False,True,True,False], dtype = "bool")#candidate|5556|(420,)|const|bool
call_5554 = relay.TupleGetItem(func_2137_call(relay.reshape(var_5555.astype('bool'), [1, 5, 6]), relay.reshape(const_5556.astype('bool'), [14, 5, 6]), ), 0)
call_5557 = relay.TupleGetItem(func_2140_call(relay.reshape(var_5555.astype('bool'), [1, 5, 6]), relay.reshape(const_5556.astype('bool'), [14, 5, 6]), ), 0)
func_924_call = mod.get_global_var('func_924')
func_927_call = mutated_mod.get_global_var('func_927')
const_5561 = relay.const([9.923428,-1.720989,5.150234,-4.499668,-4.997775,-8.058928,2.756796,3.914510,9.721658,-8.064380,-1.821064,7.440967,3.638072,-1.226136,-4.461265,6.226323,-7.191065,-7.584495,3.973851,-9.828088,1.543055,-2.207327,-4.542122,4.996773,-4.101914,8.130799,8.850284,7.805534,-8.744495,0.874292,-7.608371,-4.826304,-2.617217,-6.701758,3.377181,-9.251384,-9.036513,1.862396,-1.686643,-2.570793,4.415700,9.304156,-3.563068,2.789793,-3.756904,2.811518,7.557571,-1.209244,-8.833476,-7.994752,1.809141,-7.585509,3.814284,-2.666778,5.666444,-1.716389,-2.624472,1.904594,-7.921143,8.402008,-6.409413,9.089037,-3.058914,7.890963,-4.681258,-9.716150,-9.071692,4.606991,8.675733,9.532953,-7.002925,7.992089,-1.840653,0.129796,6.432333,2.503524,-4.329939,9.230614,-2.757620,5.350525,-6.055488,-9.711705,8.312644,-4.669146,0.070502,1.903737,6.885638,-0.017739,5.759162,-8.331881,-3.373752,-6.016204,-5.236801,4.213490,6.675318,-3.248107,9.027055,-0.719389,-4.105777,8.242516,2.967424,-9.089509,7.109067,-5.956448,-9.522691,0.308629,-8.319212,4.619074,2.191131,-2.218816,-1.283038,3.343358,6.390020,-3.150562,-7.005266,-6.563439,-6.669627,8.055063,8.717219,-9.401739,-5.889888,7.143455,-5.225531,-7.924966,8.664943,-9.323792,4.389283,5.747643,4.037760,-4.546105,6.908189,2.366849,7.384535,3.595693,-5.442296,3.864034,4.138817,-2.873611,9.939353,-0.270939,2.380505,-8.051766,-7.042559,7.940501,5.543059,2.050840,-1.568784,-1.951463,1.784722,6.748177,-0.354287,7.983001,9.052316,1.196314,-4.439314,8.183730,-3.485261,-5.640167,-3.650711,-0.696379,8.596269,-8.585517,3.218213,-2.555918,4.141660,-6.302643,-3.725863,1.260394,0.805672,-3.659554,-5.276949,0.391144,-0.043360,9.098372,-9.324142,-8.241707,-7.173077,7.858797,-6.604231,-9.638911,2.660612,4.792507,-1.506192,2.747615,6.018154,9.576507,-0.758253,-7.152322,-0.222713,9.917109,8.986253,8.629452,-6.449738,8.438072,-2.018638,-5.212172,4.936912,2.657332,1.074424,2.651176,-9.673258,-1.031851,-3.457006,7.812682,8.190937,4.420352,7.516590,-4.631058,2.688891,-1.786179,2.232376,-9.993429,-4.516077,3.599640,-5.942526,-9.889762,0.195209,4.786527,2.864058,4.924089,3.366467,7.444135,8.631656,9.889452,-2.449854,-2.448289,-7.724062,-5.409925,-0.565433,-7.623379,-2.741910,0.381488,-8.754028,2.238748,-7.052104,-1.949632,0.629282,-8.180346,7.005599,-7.142726,5.620039,1.950769,0.584072,-9.595650,9.631243,-1.066421,8.999370,-7.017942,6.695295,2.934375,-2.748937,7.049584,8.335657,-5.736947,1.160196,-9.954754,4.435760,8.388828,0.480937,-6.953460,-7.345310,1.415351,-4.188587,1.288613,6.903163,2.691418,-6.968220,-3.674345,-8.373560,-8.180878,6.053477,-6.318131,8.017366,4.932778,4.011476,8.728578,-4.832974,5.147170,-1.507707,-5.502078,7.704216,3.032559,7.183947,-5.559930,-6.321500,3.074821,7.101860,-5.846040,2.930696,-7.055376,5.370971,6.773892,-2.482093,8.608011,6.314195,-8.559485,0.589625,8.516277,7.799166,4.027291,-1.824882,8.254459,-9.909611,-8.180486,9.109753,3.693885,7.018290,8.745708,4.468646,-0.385345,-2.308163,-5.176160,5.340224,-6.464641,1.045566,-6.110991,9.737251,9.748891,-7.355783,1.733868,-9.898169,-1.098026,5.610573,4.143838,-1.444859,-3.133560,6.054383,6.644367,-8.354996,0.574830,3.198277,8.644654,-6.954416,-5.770301,7.346686,-3.786664,-6.049321,5.803010,-0.707807,1.887877,-7.690898,-4.448109,-9.318075,-9.699093,3.457910,-6.042537,-0.613033,5.599513,-9.564941,0.060634,-1.289770,-0.826999,-2.097451,-5.322185,-0.460044,-4.513682,0.086010,-0.273356,-3.825488,-8.285384,6.068319,-4.596155,7.595337,-0.511804,2.808569,0.608806,1.223193,1.164271,9.016616,8.126916,2.999360,-0.686645,-4.207840,-0.055514,-9.145968,-1.121254,1.881168,7.346550,0.885608,-1.276096,0.543989,-0.409357,0.404960,-1.450466,5.825696,7.851592,2.378757,-7.024426,-9.464245,-1.890598,8.036269,-5.134049,6.554971,6.203655,9.708138,-2.491772,7.338515,-0.694407,-4.387409,1.888816,-0.121427,-0.575304,2.284931,5.606373,2.820699,-6.820488,-9.759362,2.548764,-8.162898,-1.981907,-6.947612,-7.246740,9.888424,2.649417,4.162766,-7.130602,3.248512,-0.599545,6.634042,-7.901491,6.747077,9.340723,-5.609714,-5.185235,-4.339133,-1.366519,4.958610,-9.236459,9.809054,-2.404872,5.671825,-3.679936,6.294337,7.150958,-8.950405,0.131448,-7.585887,-8.491024,6.765659,2.241094,5.825284,-1.827510,-3.744177,-5.900351,-8.798784,-0.001396,9.977309,-6.320376,9.336765,4.970356,-6.245437,-3.669038,6.743935,3.024945,0.954000,-2.117933,-8.308473,3.144478,-5.706493,3.426598,-4.344650,-6.482697,-7.177454,-6.156556,-5.367956,-3.710995,-9.359643,3.471091,8.030051,-4.814107,3.774632,8.741139,1.108394,-1.433885,-1.331725,4.855016,5.079985,-5.914444,-4.851309,-0.164224,-7.605273,0.337679,0.697990,4.989103,9.100093,5.618807,-7.619779,8.366321,1.834250,3.995897,7.131309,-5.962580,-4.036429,-0.865304,0.801912,7.854246,5.841020,-6.112520,4.635154,6.196134,8.429760,5.641318,-8.668691,0.664262,-2.067957,4.649832,5.383726,1.826148,0.791311,6.179272,-8.180649,-7.262240,8.916417,-4.346937,-3.912826,-9.497822,-7.244725,-1.114705,-8.548397,-9.810738,-1.580125,-7.904136,4.323839,-9.356869,3.752485,2.380400,-4.361077,-7.603807,-8.440149,6.602052,-9.596834,-5.995498,9.154252,7.844364,-2.149994,2.642423,-5.447721,1.328964,0.787462,-1.592782,7.819554,-8.175254,8.485833,7.655438,7.508788,2.444253,-9.868424,-6.850860,-1.478282,2.485923,1.405348,6.581468,-6.189933,4.829650,-5.857444,9.918160,8.833334,-1.534217,-2.362263,-8.136964,-5.012614,8.802896,0.865441,-6.081626,-4.008119,-6.572725,-9.802784,0.694785,-4.568519,-2.018055,-2.391956,-9.066786,9.407241,-4.990801,2.601914,6.827998,-3.192924,-5.107175,-2.044827,0.281579,8.382538,-3.892157,-1.547702,-5.674677,-5.337717,5.362813,-0.487381,-9.474566,-7.837238,0.550368,3.547599,6.668994,-6.640679,8.175792,4.259180,4.315844,5.336962,-7.582222,6.739037,-3.334391,-2.068989,-1.368917,-9.803121,-5.022227,4.390085,-7.007525,7.048315,5.788751,5.821611,-0.315886,8.540916,1.213710,-8.595620,-9.811877,2.420622,6.010718,6.421201,-1.778538,9.630448,-1.580590,3.106835,2.047749,3.896020,-8.601863,-8.043056,3.363306,-2.724905,-8.906109,-1.154821,-9.313486,1.007457,4.832427,8.375881,-9.050509,6.625566,9.262322,6.291412,6.465234,7.524052,-6.357405,-1.936449,-7.634907,-5.085422,8.161470,8.228464,-5.445622,-0.376096,2.851507,-2.436620,-6.872278,3.894909,-7.438100,-6.801179,8.883801,2.257286,5.613730,2.530598,-9.004721,-2.687304,-5.601910,1.682983,1.628471,4.546862,4.077594,-0.342067,9.187762,7.554803,1.859424,8.629012,-0.483565,-1.136632,-0.650276,9.184249,0.355640,0.210565,6.768171,0.798345,-3.350346,-3.374253,-1.741175,7.994306,-9.822537,6.000061,-8.999489,-0.752722,3.378577,3.094396,-2.784079,-9.838652,-6.221475,9.991336,-8.492603,-8.880859,1.649242,-2.341824,-6.366578,2.251847,-7.137422,-4.874076,1.761820,3.715538,6.347731,2.353563,0.381526,7.118405,5.849033,-6.811947,9.598209,-8.882903,5.691787,-8.013649,-0.150333,-7.877717,-8.019183,0.050164,8.493988,-6.811875,1.398526,-0.404297,1.343848,9.888931,-8.585204,-7.973489,-8.568342,3.725429,4.724634,6.444577,7.411593,1.560951,-2.835490,-9.764813,6.930361,-8.919099,-8.065228,-9.887675,6.110383,-8.481708,1.388571,0.071698,4.076695,5.376229,3.239644,-0.917142,-0.587099,-1.756580,-4.473087,-9.916215,-6.875478,2.691685,7.902253,-9.856158,2.407128,-2.747385,-2.064803,-2.189571,-4.415069,-6.696529,3.262090,8.183631,-5.585410,-2.365237,-3.648361,8.855179,-5.110603,1.189454,-1.298106,-5.781302,-5.567129,-3.962130,-1.972524,-5.360212,-3.467327,-1.103294,1.805588,6.967554,-8.246098,-7.501477,-4.116596,3.182628,-4.277182,-2.624177,-2.227054,-5.649303,6.095414,4.843748,-8.456944,2.992491,1.191519,-3.368799,1.930085,-9.605714,8.509445,-3.183105,-2.923138,-7.478044,-4.973502,8.427740,6.420753,8.474574,-5.353200,6.769822,-3.207034,9.056990,-3.529034,-7.195085,2.497200,0.431482,1.935588,-7.801103,4.508070,4.534947,8.424336,5.665041,-7.333761,-6.869862,4.470146,9.429643,-3.984861,2.156161,-4.945447,-5.531276,0.728511,2.087556,7.366528,-3.716511,-1.398396,-3.183003,7.500169,7.965027,-2.006850,-5.517637,8.381585,6.433584,0.471622,-2.251822,-9.041907,1.878124,4.603283,-9.196109,7.602985,1.581471,-5.486873,8.014542,6.116634,-0.711144,-1.944833,-2.648086,-3.965013,8.980784,-4.441165,-3.495078,-2.629207,-5.906625,-3.130235,-0.687799,-9.348470,7.427996,8.609734,-5.984159,6.442034,-7.908789,2.853352,8.738632,-5.641757,8.783934,6.790254,6.224735,-5.878798,2.744222,1.325252,-1.903250,6.531781,-8.416152,-0.337904,-6.269342,1.289736,-7.700269,2.064173,4.428474,-7.667441,-5.081193,-3.781637,-4.772391,-4.741929,9.098495,8.788440,4.514165,5.939795,-0.783960,-2.204393,-4.047858,0.790928,-9.411512,-5.135370,5.734584,1.491099,-9.010186,9.261742,-3.458667,-5.326348,2.291527,9.389020,0.647289,7.977172,-5.451446,-5.762978,7.562871,2.952461,-0.958310,7.360478,7.643681,3.567197,-3.861864,-0.504684,-6.897763,-1.266478,-0.436508,-0.713951,4.141182,2.998097,1.652714,-6.460363,-8.893781,4.900221,6.695098,-2.977541,0.118090,3.754147,-1.696578,-1.090892,-6.364501,1.610243,-7.492968,-8.701884,9.778420,7.949651,3.624978,8.311039,-8.750478,-2.367839,-9.502060,-0.740531,0.299967,7.777302,0.946099,-3.009013,4.626179,-1.412836,-9.720415,3.380773,8.510859,-1.932678,-7.874121,-0.721887,-3.368815,-9.078861,9.382127,-5.308037,-5.366926,-4.874206,6.356458,-1.307076,-8.001995,-6.160251,2.822024,-6.832970,1.324027,-8.826334,5.969103,-4.989960,6.208799,-8.294103,0.995266,3.166145,-6.789127,9.432913,0.696692,-9.976757,-5.220418,-4.734209,-3.918084,-1.088203,1.939443,8.610040,1.290119,5.256742,7.181155,1.940207,-4.785397,-3.215450,5.522212,5.296174,9.906445,-4.719260,-4.113799,-2.652524,-7.120483,-1.890817,4.633406,-6.304245,8.551322,9.533043,8.872397,4.427219,-3.989572,-4.302646,6.148674,-0.940895,-1.385789,2.384357,2.011608,4.597030,-6.030717,7.063317,-3.224252,8.143481,4.629196,-1.823177,1.353586,7.302246,3.682390,5.096151,8.155825,-6.938428,5.361585,-8.334660,1.861939,-2.403521,-7.171833,2.503856,1.658094,-7.360093,9.491118,6.482998,4.579086,-3.788721,-6.282284,6.704390,1.309084,0.563651,0.261932,1.840120,-0.204749,5.633764,-9.697124,3.503411,5.007313,-7.893965,-4.382503,8.687554,-6.603728,-1.913213,-5.175747,-8.235354,4.513675,-4.206264,-4.125336,2.258104,1.583119,5.480861,3.939309,8.854707,-7.738079,-6.331472,3.142384,-9.986003,2.779491,-9.885990,4.468333,-5.554950,8.356920,9.218415,-0.183480,-6.408689,7.522209,8.104189,-2.443922,4.584217,3.537711,9.718210,-6.645147,-7.982821,-0.083137,8.304277,-6.963059,1.913525,-6.917587,9.246132,1.012460,-7.321228,4.366800,-3.847619,-5.886033,-8.638415,6.783243,-0.118427,-0.030615,7.705300,7.400453,-4.937447,-2.487103,6.944732,-0.303705,-0.661944,-3.920551,1.558498,-1.346537,2.965649,7.034799,-1.366873,7.073460,-3.994310,-1.595418,7.409963,-9.205320,0.280283,9.156663,8.268078,1.165919,1.976173,-1.437479,6.724307,-0.412308,6.235777,-0.168072,-7.716257,-9.532405,4.455499,9.316736,6.997030,-5.301790,-3.638789,2.322945,-9.021572,8.388360,9.182594,-9.015580,2.932071,3.483366,-6.176718,-4.913296,-2.881186,-7.810105,3.252465,-6.795642,7.511533,2.545363,-9.517588,-4.947057,1.695337,-1.327232,4.429578,4.528365,-9.364345,-2.810403,5.376157,4.025687,0.577886,6.435458,1.112812,9.969762,3.034398,0.091817,-2.888846,-9.554678,0.982080,-1.143664,7.445717,3.034501,-0.468479,-4.215815,4.556944,4.043463,8.107708,7.980657,-4.073022,-4.889084,-2.052155,4.224335,2.591169,-1.015448,7.416654,2.715490,5.014559,-4.211560,-6.090786,9.376994,-4.717517,7.771863,0.609171,2.068340,0.067575,8.097034,0.289758,-2.449952,-1.406452,4.094640,7.036550,-5.085785,-2.313825,9.270091,-5.201981,-3.184206,5.088805,-7.621348,-8.688205,4.021576,3.198393,7.891072,9.610058,4.126195,5.986287,2.085255,-1.825105,1.931544,-4.836833,4.682623,5.327146,-6.688811,1.356156,0.199558,-0.559220,-7.949444,-0.693529,-8.843456,6.346631,6.729670,-7.813470,-5.231521,3.999850,6.224603,-9.010040,-0.512626,-3.371743,-2.504363,2.299717,-9.430539,-5.458668,-9.882459,-3.736284,5.962714,-0.325523,-8.134557,4.603581,8.532704,-5.242179,5.024499,-4.378745,-9.834589,-2.614914,-3.417292,0.781821,5.639206,3.492617,-3.682031,-5.737455,-5.168526,-5.955713,8.273715,6.448800,-3.467024,-4.294847,-3.091694,1.180050,1.106093,1.780288,-0.943018,-6.245182,3.870668,1.041595,-8.350279,4.178959,-0.530035,3.676665,3.424918,7.324192,2.857270,0.808888,-3.545705,-8.517093,-0.427079,7.889396,-3.258804,-5.367082,-7.040145,3.502471,8.417231,5.759181,2.750434,-4.442792,5.291090,-5.677470,0.066140,-5.385897,9.532760,0.928595,-0.451941,-4.509420,8.348573,-5.841300,-3.265265,-3.175724,-6.551483,7.615393,-4.443794,5.245352,5.502072,-7.328813,7.396377,-8.447240,-9.832399,4.986405,1.972440,3.770807,-9.458016,-0.040435,-0.137084,5.100099,-6.044831,-5.998550,-6.405947,-7.183298,9.322202,-1.718341,2.218896,0.968918,-1.482875,-8.721320,-3.704921,-2.197714,-0.266530,9.961992,6.585141,9.975006,-2.510204,0.757577,1.925127,-0.198704,-1.801735,-0.597920,-1.005619,5.893559,-4.965598,-4.635215,-8.075368,1.831045,2.681949,6.802051,6.517971,-6.417565,-0.761747,-6.328390,8.846334,-7.394723,0.854802,7.198853,5.819815,3.078830,-0.685817,-6.593409,-3.628252,5.174844,1.015004,4.137194,-6.478187,-3.140075,9.007027,-0.225510,5.100478,-6.136990,7.387544,-4.430398,6.792565,-9.575892,1.994590,-5.067056,5.357439,6.751811,-7.539752,3.247626,-7.568794,0.205875,8.996259,-0.939852,-3.159942,6.958314,-5.679357,-6.513679,4.260061,-0.511345,-5.219037,2.784974,-2.445273,-1.114612,9.744482,9.517181,3.120211,2.209140,4.673065,2.085597,-9.183935,2.617567,2.248533,-9.748488,8.528647,4.590513,8.790661,2.003806,-7.446116,-0.462071,7.813388,2.136884,-8.979019,2.992044,3.978232,-3.154896,-8.444387,-0.746830,4.604101,-1.205600,6.847126,-7.009640,-8.262079,8.715628,9.835288,-9.091201,9.728112,3.962458,-1.035501,0.153889,-3.003541,-1.448031,-0.980027,-9.307643,2.326855,-0.905141,-5.841062,-9.866477,-7.918529,9.440490,8.276726,-8.518825,-5.983325,4.768389,2.821179,-0.906714,-2.805641,-2.966868,6.400597,-1.674469,9.258972,-4.869849,-6.522593,5.376866,-7.147656,-7.186396,-7.735060,-6.377016,1.796727,-9.213361,4.531779,-5.949588,9.771475,-8.842782,6.844520,7.987823,9.113008,-9.411322,-6.337921,-9.614378,5.678833,5.037570,4.930550,-0.893200,9.486805,7.018656,7.109050,-9.090265,-0.752226,3.242187,8.426590,2.566674,-3.587705,-9.435539,7.025468,1.225874,-0.060134,-5.117891,3.259469,-1.575539,0.825650,3.895277,2.113894,2.763684,-1.949082,6.507260,-0.022683,-7.909938,-5.763732,8.018846,9.525834,-5.171879,9.305602,2.178088,3.486507,1.925482,-0.830304,4.928175,-8.289024,0.923594,-1.886298,0.946476,3.612536,1.913415,-9.844361,5.149493,-2.704287,3.668463,4.097792,-7.494110,-8.447992,7.491552,-5.270090,-2.217717,-9.092253,2.715877,-9.450066,4.638058,-8.571713,-8.392717,3.107716,-3.743105,7.695228,-7.951987,-3.345530,-6.247617,-2.271451,2.267148,-4.477082,-4.668812,-0.888222,0.930194,-0.042328,-9.774293,-1.117341,5.375274,4.936959,1.469713,-1.589700,3.142850,-8.215082,7.625494,0.827180,2.900007,8.518915,-2.918397,3.094328,-2.617061,-7.288300,-4.061519,8.726728,5.111108,5.223622,-5.734968,-6.171348,-2.426817,4.343153,3.943401,5.931931,-4.498727,-3.252085,-4.962405,3.939182,9.829436,3.756929,-9.738909,-5.346443,6.576969,-8.237336,0.190549,0.699338,4.178464,8.100703,-0.015540,7.487429,9.153873,4.089303,5.867536,6.859712,7.417730,-6.129472,4.177076,7.284157,-4.491842,-6.766002,-6.719092,0.528995,-9.860692,-9.486600,0.891233,-4.965014,-7.820848,-2.048464,-5.733696,-4.110640,4.224275,6.304103,8.972612,7.929087,-5.655566,2.590147,-5.050403,-5.193258,-0.979675,1.278557,-2.174713,-8.716183,6.858820,-3.396427,-2.484383,2.075635,2.365488,6.349027,8.767084,-2.890890,-5.586455,-1.081736,-4.290537,-7.380067,-7.602367,1.583461,7.430173,8.392437,-3.131475,-5.109856,-1.811766,-8.208890,-0.126051,7.596418,8.187284,1.308665,1.989480,-4.745950,-7.943813,-6.663135,-6.657388,3.792558,-7.375031,-9.895669,-7.227529,2.493327,0.923147,-8.676627,6.878979,5.901056,1.735722,6.816217,4.544807,-3.754540,-2.379273,-9.758102,-6.992851,-6.434224,-0.526725,-2.846040,9.780575,2.790355,8.897532,-4.389324,9.000508,8.618004,-9.711103,-7.250001,-0.994667,7.627883,4.307626,7.616314,4.457319,-0.705133,9.540114], dtype = "float64")#candidate|5561|(1680,)|const|float64
call_5560 = func_924_call(relay.reshape(const_5561.astype('float64'), [16, 15, 7]))
call_5562 = func_924_call(relay.reshape(const_5561.astype('float64'), [16, 15, 7]))
func_5129_call = mod.get_global_var('func_5129')
func_5135_call = mutated_mod.get_global_var('func_5135')
var_5591 = relay.var("var_5591", dtype = "float64", shape = (1, 80))#candidate|5591|(1, 80)|var|float64
var_5592 = relay.var("var_5592", dtype = "int64", shape = (1232,))#candidate|5592|(1232,)|var|int64
call_5590 = relay.TupleGetItem(func_5129_call(relay.reshape(var_5591.astype('float64'), [4, 10, 2]), relay.reshape(var_5592.astype('int64'), [1232,]), relay.reshape(var_5555.astype('bool'), [30,]), relay.reshape(const_5556.astype('bool'), [70, 6]), ), 9)
call_5593 = relay.TupleGetItem(func_5135_call(relay.reshape(var_5591.astype('float64'), [4, 10, 2]), relay.reshape(var_5592.astype('int64'), [1232,]), relay.reshape(var_5555.astype('bool'), [30,]), relay.reshape(const_5556.astype('bool'), [70, 6]), ), 9)
uop_5601 = relay.tan(call_5560.astype('float64')) # shape=(16, 15, 7)
uop_5603 = relay.tan(call_5562.astype('float64')) # shape=(16, 15, 7)
uop_5614 = relay.sin(call_5590.astype('float32')) # shape=(1, 2048)
uop_5616 = relay.sin(call_5593.astype('float32')) # shape=(1, 2048)
func_5129_call = mod.get_global_var('func_5129')
func_5135_call = mutated_mod.get_global_var('func_5135')
call_5617 = relay.TupleGetItem(func_5129_call(relay.reshape(var_5591.astype('float64'), [4, 10, 2]), relay.reshape(var_5592.astype('int64'), [1232,]), relay.reshape(var_5555.astype('bool'), [30,]), relay.reshape(const_5556.astype('bool'), [70, 6]), ), 2)
call_5618 = relay.TupleGetItem(func_5135_call(relay.reshape(var_5591.astype('float64'), [4, 10, 2]), relay.reshape(var_5592.astype('int64'), [1232,]), relay.reshape(var_5555.astype('bool'), [30,]), relay.reshape(const_5556.astype('bool'), [70, 6]), ), 2)
output = relay.Tuple([bop_5543,call_5551,var_5552,call_5554,var_5555,const_5556,const_5561,var_5591,var_5592,uop_5601,uop_5614,call_5617,])
output2 = relay.Tuple([bop_5543,call_5553,var_5552,call_5557,var_5555,const_5556,const_5561,var_5591,var_5592,uop_5603,uop_5616,call_5618,])
func_5626 = relay.Function([var_5541,var_5552,var_5555,var_5591,var_5592,], output)
mod['func_5626'] = func_5626
mod = relay.transform.InferType()(mod)
var_5627 = relay.var("var_5627", dtype = "int32", shape = ())#candidate|5627|()|var|int32
var_5628 = relay.var("var_5628", dtype = "int8", shape = (84,))#candidate|5628|(84,)|var|int8
var_5629 = relay.var("var_5629", dtype = "bool", shape = (30,))#candidate|5629|(30,)|var|bool
var_5630 = relay.var("var_5630", dtype = "float64", shape = (1, 80))#candidate|5630|(1, 80)|var|float64
var_5631 = relay.var("var_5631", dtype = "int64", shape = (1232,))#candidate|5631|(1232,)|var|int64
output = func_5626(var_5627,var_5628,var_5629,var_5630,var_5631,)
func_5632 = relay.Function([var_5627,var_5628,var_5629,var_5630,var_5631,], output)
mutated_mod['func_5632'] = func_5632
mutated_mod = relay.transform.InferType()(mutated_mod)
var_6260 = relay.var("var_6260", dtype = "uint32", shape = (1, 5, 14))#candidate|6260|(1, 5, 14)|var|uint32
var_6261 = relay.var("var_6261", dtype = "uint32", shape = (10, 5, 14))#candidate|6261|(10, 5, 14)|var|uint32
bop_6262 = relay.bitwise_and(var_6260.astype('uint32'), var_6261.astype('uint32')) # shape=(10, 5, 14)
func_5450_call = mod.get_global_var('func_5450')
func_5453_call = mutated_mod.get_global_var('func_5453')
const_6280 = relay.const([6.189540,-7.595105,-5.656920,-0.624686,5.666342,-9.816748,4.637726,-4.596001,-8.400588,1.051827,0.293072,-4.687147,-2.339767,-3.802450,0.229441,-2.272578,9.033162,6.656752,-6.985188,0.013925,4.830519,-3.610883,1.497849,8.859891,3.159797,-5.082156,-3.457546,-5.979676,-2.194046,-2.451897,-2.393701,6.883631,0.947687,8.682921,-6.219232,6.807582,0.546343,6.857088,-8.437083,-4.536480,6.126814,4.967120,5.161805,-0.690452,-7.318037,4.626702,4.667424,-4.943789,-4.682015,-2.484167,4.686818,-5.082468,-3.017705,6.691124,-0.309329,-0.163717,-8.012718,2.619277,7.918430,-8.427947,-6.818353,-5.927066,-2.431066,-7.798050,-3.461734,1.078100,-7.497572,-0.191949,4.618497,-6.767870,7.385653,0.500297,-1.107143,1.325406,6.384181,2.466714,-9.091934,7.827892,7.388415,6.180674,0.393037,6.997939,-9.083140,-3.920565,2.906375,-0.301369,1.312816,9.500028,-1.671009,5.737672,-7.266576,-0.446808,-7.789392,4.666219,3.075091,0.528730,5.733929,1.002293,8.479362,-6.566777,-7.415707,8.643716,-2.493188,5.908309,-3.894146,-7.611653,1.875424,5.412161,9.375905,4.489676,1.583709,2.862796,5.613073,-8.369925,-9.785041,-2.108543,9.582091,-2.408832,-5.045927,4.229627,-0.286666,6.667762,-8.372426,4.844883,7.918917,-5.341794,8.167056,6.148853,-2.160803,8.445623,-0.486207,6.840656,-5.956098,-1.407520,6.048425,7.054621,4.857788,-0.449736,3.198232,3.657656,-4.636623,8.799871,6.339366,8.806150,-5.828286,-4.530161,-2.432854,7.961624,9.191465,3.818351,8.718691,-9.184276,8.987764,-6.061980,-4.474672,5.842379,6.160685,6.584190,0.698587,2.760961,1.670383,3.879187,9.167415,-4.135477,-8.103486,-1.022539,-2.394859,-1.795564,8.561453,-1.041763,8.541102,-8.205698,-7.596960,8.520586,-4.621351,-5.719643,4.120159,4.052466,-5.599597,1.682180,4.325100,-3.796765,9.025798,1.543412,2.381784,-2.839785,7.449866,6.624187,-0.083438,-9.139341,0.793979,6.792214,-0.481593,-5.811786,-2.064977,0.462339,2.911009,-4.164348,-5.411877,3.350926,4.448022,-7.997995,-1.901260,1.713001,6.112691,-2.835676,-7.811588,5.448415,-9.013736,6.951403,9.996906,6.436097,-8.791618,6.806182,9.749042,-8.819609,8.956407,-2.619264,-4.690116,-4.525441,6.489119,8.107775,-5.876461,-5.074928,-9.357043,-7.093647,-1.500481,-2.436823,1.968637,1.406235,-4.499426,9.065703,2.433253,7.399574,2.393179,1.309295,-2.285960,-7.796247,1.922589,-6.340217,-7.610447,6.726438,-7.883903,2.553505,-9.034956,-8.247304,-1.802999,-6.209395,6.521388,-4.249790,8.763208,1.580742,-3.008420,1.145952,-9.535535,2.407893,-3.538944,8.492312,-6.907520,-7.865760,-7.179973,3.054904,-9.313590,-0.436436,6.887386,5.815399,-2.692941,8.314895,-2.410330,-7.348751,-8.654035,-2.672068,-0.840256,2.034076,-2.559428,9.888524,-3.979614,-7.255326,-0.874320,2.426089,1.194276,2.852886,5.017200,-9.953182,0.481847,9.932043,-0.072041,-5.566151,9.251808,4.202297,7.788704,-2.495583,3.277917,-8.820161,6.319490,6.596606,-7.950347,-2.697290,5.376688,-9.500526,3.826073,-8.213507,7.608077,4.721487,-1.701437,-3.972763,6.992977,-7.915392,8.927922,1.691157,-9.020544,5.394273,6.410698,-0.976050,-6.361469,5.283969,-7.952506,6.063581,-7.976539,9.912441,4.594212,-1.991329,-1.315471,6.672834,9.263721,2.113700,-2.388282,8.829422,-3.318558,-1.231334,-7.114340,8.999571,-1.480518,-6.159443,5.957406,9.757517,4.531423,3.793924,-3.097622,-0.741480,3.570703,7.218051,-5.893106,0.029076,2.900277,-6.807110,9.538344,-2.002548,-9.381948,-8.795607,-3.531629,3.581012,1.225482,-5.520768,5.567307,-9.242601,-3.791757,-4.148973,-7.017345,3.330165,-9.780826,1.138459,2.785490,4.381606,-0.892038,2.846315,1.592974,-6.083190,-8.208679,8.189846,6.036250,-2.551036,2.167790,5.605183,6.913718,7.918024,-4.646537,5.806268,2.207198,0.473510,0.843013,-9.313176,5.130900,1.265174,0.215853,-8.145560,-6.913647,-0.649245,3.210161,6.470001,3.004547,-5.384581,4.268008,4.438874,-0.588854,-0.654951,-5.739156,9.650548,-7.983504,0.646896,0.020146,-2.390635,-0.032607,6.970553,-9.878342,-9.804883,-9.955031,1.909940,6.393873,-7.521398,-3.819932,9.589033,1.684659,-7.810479,5.674171,-2.522608,1.804621,7.726214,9.431202,-8.226842,5.202575,8.123380,6.793306,-9.504367,-4.228465,8.708532,7.107746,1.059319,4.217689,-2.280770,2.743474,4.105206,-2.570900,-6.755235,6.999824,2.662316,-9.229210,-0.288213,-5.043675,-9.337838,2.873033,0.356150,-4.472869,-5.129343,-3.173149,-5.300000,5.425579,1.967488,-8.736962,4.897093,-3.146167,5.573254,-9.398826,-5.394163,-7.727993,0.722566,-2.296597,-6.373788,5.245537,-0.596796,-6.280821,6.984110,-8.373294,4.120240,-4.871097,9.962583,9.962185,0.279431,-0.184002,-4.532784,-2.805285,5.997536,-6.706254,2.107829,-0.086703,-5.125251,4.586958,-5.707823,-8.892783,-8.395521,-3.949389,4.110149,-4.582983,7.657077,-5.516167,4.631607,7.747508,-5.753686,2.341576,0.273516,9.018253,-8.364284,5.095540,4.850561,-8.515851,1.804658,7.652815,-1.679942,6.946616,-8.932617,-3.012464,3.287687,-4.684436,5.961512,3.538475,5.217616,-6.493742,9.602646,-2.256175,3.544211,6.252881,-7.411933,4.938958,-9.102033,-8.370227,4.321144,5.568614,1.898018,-3.473392,6.129408,4.203091,-6.638639,-4.560884,-2.098571,-1.056185,1.274015,-7.239147,-4.131499,-3.773697,-6.565456,-8.681959,1.786753,-3.025856,3.577530,-9.461671,7.281777,-8.531782,0.183265,9.168424,3.231542,-3.427299,0.348502,-1.390851,-1.151756,8.017125,-7.074218,-6.843123,8.193432,-9.730562,3.855188,1.924678,-1.557978,8.381436,-7.372680,7.846947,-0.635187,-0.488029,-9.677915,-9.787291,7.866690,-0.294459,6.640082,-8.523199,6.848259,1.479156,4.257612,9.612146,-9.543393,9.431709,-8.185353,1.314880,-2.523344,-8.055377,-4.966796,-3.007038,-3.625856,4.669636,6.632396,-2.295826,-8.866728,-8.561953,-2.251347,-2.692984,-0.430492,4.610903,-6.871373,1.495961,-4.306309,-6.175527,-9.765007,5.753470,6.703516,-6.642209,-3.396613,0.176081,0.037609,-9.981117,-0.061861,-1.166726,-5.125149], dtype = "float64")#candidate|6280|(600,)|const|float64
call_6279 = func_5450_call(relay.reshape(const_6280.astype('float64'), [12, 5, 10]))
call_6281 = func_5450_call(relay.reshape(const_6280.astype('float64'), [12, 5, 10]))
bop_6299 = relay.power(var_6260.astype('float32'), bop_6262.astype('float32')) # shape=(10, 5, 14)
func_809_call = mod.get_global_var('func_809')
func_813_call = mutated_mod.get_global_var('func_813')
const_6317 = relay.const([2,4,-2,-5,-1,-6,-9,-2,2,-1,4,-6,-1,3,6,-1,-1,4,10,-8,4,-3,-10,-10,-10,7,-6,-4,-3,5,3,2,5,-7,-7,-7,3,-4,4,5,6,5,-4,1,7,9,-3,4,-6,4,-8,-6,10,3,-5,-9,10,-5,4,2,-1,1,-3,-6,8,4,-3,-6,-10,9,7,6,-4,10,6,-1,-4,-5,-9,-7,10,-2,2,6], dtype = "int8")#candidate|6317|(84,)|const|int8
call_6316 = relay.TupleGetItem(func_809_call(relay.reshape(const_6317.astype('int8'), [4, 7, 3]), relay.reshape(const_6317.astype('int8'), [4, 7, 3]), ), 0)
call_6318 = relay.TupleGetItem(func_813_call(relay.reshape(const_6317.astype('int8'), [4, 7, 3]), relay.reshape(const_6317.astype('int8'), [4, 7, 3]), ), 0)
func_1916_call = mod.get_global_var('func_1916')
func_1920_call = mutated_mod.get_global_var('func_1920')
var_6331 = relay.var("var_6331", dtype = "uint8", shape = (512, 4))#candidate|6331|(512, 4)|var|uint8
call_6330 = relay.TupleGetItem(func_1916_call(relay.reshape(var_6331.astype('uint8'), [8, 16, 16]), relay.reshape(var_6331.astype('uint8'), [8, 16, 16]), ), 0)
call_6332 = relay.TupleGetItem(func_1920_call(relay.reshape(var_6331.astype('uint8'), [8, 16, 16]), relay.reshape(var_6331.astype('uint8'), [8, 16, 16]), ), 0)
func_1916_call = mod.get_global_var('func_1916')
func_1920_call = mutated_mod.get_global_var('func_1920')
call_6333 = relay.TupleGetItem(func_1916_call(relay.reshape(call_6330.astype('uint8'), [8, 16, 16]), relay.reshape(var_6331.astype('uint8'), [8, 16, 16]), ), 0)
call_6334 = relay.TupleGetItem(func_1920_call(relay.reshape(call_6330.astype('uint8'), [8, 16, 16]), relay.reshape(var_6331.astype('uint8'), [8, 16, 16]), ), 0)
output = relay.Tuple([call_6279,const_6280,bop_6299,call_6316,const_6317,call_6330,var_6331,call_6333,])
output2 = relay.Tuple([call_6281,const_6280,bop_6299,call_6318,const_6317,call_6332,var_6331,call_6334,])
func_6337 = relay.Function([var_6260,var_6261,var_6331,], output)
mod['func_6337'] = func_6337
mod = relay.transform.InferType()(mod)
var_6338 = relay.var("var_6338", dtype = "uint32", shape = (1, 5, 14))#candidate|6338|(1, 5, 14)|var|uint32
var_6339 = relay.var("var_6339", dtype = "uint32", shape = (10, 5, 14))#candidate|6339|(10, 5, 14)|var|uint32
var_6340 = relay.var("var_6340", dtype = "uint8", shape = (512, 4))#candidate|6340|(512, 4)|var|uint8
output = func_6337(var_6338,var_6339,var_6340,)
func_6341 = relay.Function([var_6338,var_6339,var_6340,], output)
mutated_mod['func_6341'] = func_6341
mutated_mod = relay.transform.InferType()(mutated_mod)
var_6442 = relay.var("var_6442", dtype = "float64", shape = (6, 5, 7))#candidate|6442|(6, 5, 7)|var|float64
uop_6443 = relay.log2(var_6442.astype('float64')) # shape=(6, 5, 7)
func_5450_call = mod.get_global_var('func_5450')
func_5453_call = mutated_mod.get_global_var('func_5453')
var_6460 = relay.var("var_6460", dtype = "float64", shape = (600,))#candidate|6460|(600,)|var|float64
call_6459 = func_5450_call(relay.reshape(var_6460.astype('float64'), [12, 5, 10]))
call_6461 = func_5450_call(relay.reshape(var_6460.astype('float64'), [12, 5, 10]))
func_809_call = mod.get_global_var('func_809')
func_813_call = mutated_mod.get_global_var('func_813')
var_6468 = relay.var("var_6468", dtype = "int8", shape = (42, 2))#candidate|6468|(42, 2)|var|int8
call_6467 = relay.TupleGetItem(func_809_call(relay.reshape(var_6468.astype('int8'), [4, 7, 3]), relay.reshape(var_6468.astype('int8'), [4, 7, 3]), ), 0)
call_6469 = relay.TupleGetItem(func_813_call(relay.reshape(var_6468.astype('int8'), [4, 7, 3]), relay.reshape(var_6468.astype('int8'), [4, 7, 3]), ), 0)
func_5450_call = mod.get_global_var('func_5450')
func_5453_call = mutated_mod.get_global_var('func_5453')
call_6470 = func_5450_call(relay.reshape(call_6459.astype('float64'), [12, 5, 10]))
call_6471 = func_5450_call(relay.reshape(call_6459.astype('float64'), [12, 5, 10]))
func_924_call = mod.get_global_var('func_924')
func_927_call = mutated_mod.get_global_var('func_927')
var_6480 = relay.var("var_6480", dtype = "float64", shape = (840, 2))#candidate|6480|(840, 2)|var|float64
call_6479 = func_924_call(relay.reshape(var_6480.astype('float64'), [16, 15, 7]))
call_6481 = func_924_call(relay.reshape(var_6480.astype('float64'), [16, 15, 7]))
bop_6487 = relay.equal(uop_6443.astype('bool'), relay.reshape(var_6442.astype('bool'), relay.shape_of(uop_6443))) # shape=(6, 5, 7)
uop_6510 = relay.exp(var_6442.astype('float64')) # shape=(6, 5, 7)
func_4093_call = mod.get_global_var('func_4093')
func_4100_call = mutated_mod.get_global_var('func_4100')
const_6524 = relay.const([1,-10,-1,-2,-10,2,-5,10,8,-5,10,5,1,5,8,-8,10,-6,1,-1,10,-5,-2,7,4,7,1,2,-4,5,-4,1,-3,7,4,6,-5,-10,-3,-7,2,3,-7,-3,-3,-3,3,3,2,9,9,-1,-6,1,10,10,-1,-3,-7,7,7,9,3,-4,-5,2,-10,-8,4,8,7,-3,-1,5,5,10,-4,-9,-4,-4,8,2,-9,-4,10,-4,-10,-3,5,10,2,1,-8,4,3,-10,-4,-9,-1,-3,-5,-7,-5,-7,-10,2,5,-7,4,-7,-1,-8,-7,7,9,10,8,10,-8,8], dtype = "int8")#candidate|6524|(120,)|const|int8
var_6525 = relay.var("var_6525", dtype = "int8", shape = (1560,))#candidate|6525|(1560,)|var|int8
var_6526 = relay.var("var_6526", dtype = "int64", shape = ())#candidate|6526|()|var|int64
var_6527 = relay.var("var_6527", dtype = "int64", shape = (1232,))#candidate|6527|(1232,)|var|int64
call_6523 = relay.TupleGetItem(func_4093_call(relay.reshape(const_6524.astype('int8'), [10, 12, 1]), relay.reshape(var_6525.astype('int8'), [10, 12, 13]), relay.reshape(var_6526.astype('int64'), []), relay.reshape(var_6527.astype('int64'), [1232,]), relay.reshape(call_6467.astype('int8'), [84,]), ), 5)
call_6528 = relay.TupleGetItem(func_4100_call(relay.reshape(const_6524.astype('int8'), [10, 12, 1]), relay.reshape(var_6525.astype('int8'), [10, 12, 13]), relay.reshape(var_6526.astype('int64'), []), relay.reshape(var_6527.astype('int64'), [1232,]), relay.reshape(call_6467.astype('int8'), [84,]), ), 5)
func_5202_call = mod.get_global_var('func_5202')
func_5204_call = mutated_mod.get_global_var('func_5204')
const_6546 = relay.const([8.197834,0.693025,8.306029,-3.874770,5.083833,6.664728,6.114255,-7.526195,6.760805,8.752618,-7.631718,6.551181,2.164295,6.439124,8.593301,-8.877470,0.090212,5.457489,3.665663,-7.380125,-3.107058,2.272600,-5.002861,-8.831754,4.589725,2.583484,-7.792116,5.360648,9.212993,-1.097835,-4.428121,-3.289190,8.092686,7.804540,1.905584,6.057751,5.424392,2.719345,1.592792,2.775344,-8.313965,-3.344751,-3.528201,-6.653379,-9.138492,-2.246026,9.285150,-4.649786,6.901434,3.878246,6.659717,-7.966294,-0.151916,1.441393,3.579203,-6.352360,8.931868,-0.143353,-3.318763,5.035956,6.763895,-0.520478,-1.761974,3.239171,-1.305439,3.487782,-1.814516,-6.644122,9.853140,-7.420552,-5.825560,-0.316147,4.998736,4.756619,-7.295446,-1.258926,0.818222,-9.301577,-3.252115,8.967665,9.783854,-2.803937,-7.560659,-5.545611,-1.831458,-5.074023,6.247098,-0.136493,4.267097,-3.861284,0.795641,1.524359,4.879913,-3.685935,-4.335291,-9.686024,-3.068024,0.606578,5.320234,1.073808,-5.249287,3.151946,-8.107937,-2.305480,9.381906,3.710498,7.691157,6.282161,1.173475,-6.429345,1.428632,5.976544,-9.833275,-3.276089,-3.946143,5.475777,7.832312,-9.044575,1.676848,3.373774,9.787944,3.149272,-0.232911,-2.383407,-9.637259,9.692825,0.117919,-5.649356,0.688344,-4.665701,-4.655757,-1.021354,-2.584826,4.514805,6.296237,-8.702752,-9.687321,4.757204,6.244816,-8.612046,7.288227,9.334704,-1.446782,-9.590823,5.024362,0.428836,-0.869537,1.274844,-6.720644,-0.499149,-8.600339,-6.132739,-6.732678,6.343319,0.178047,-2.217396,4.454612,-2.508805,1.809829,0.182755,6.694643,-1.563884,-8.816463,-5.155942,-4.507523,-4.018797,9.300443,0.486221,-8.223339,8.834269,-8.261990,-7.386162,-3.367988,6.389375,1.497701,-2.915940,7.804720,1.836255,-0.164625,-6.184620,-7.300960,6.361942,-7.401065,-0.601742,4.839147,-5.663254,8.754890,7.348462,9.981495,2.710962,7.159679,5.974341,-8.100650,-7.331943,-7.493804,3.977529,0.899325,6.461969,-5.288825,0.879562,5.918967,4.345870,-5.363593,-0.289699,-0.163557,5.970754,4.660003,-5.715943,5.226312,8.205885,-2.905465,-5.671564,1.109427,0.725408,1.243133,-2.656317,-9.529211,3.067484,-2.516288,6.699964,1.128312,9.732040,8.396836,-3.595542,-2.169369,0.243374,2.653687,6.071974,0.110823,-2.202958,2.125523,9.854122,-0.938943,-1.664811,1.013866,5.516618,-2.442412,5.667155,4.618781,-9.382482,6.103055,-1.115630,-4.184562,-4.383127,-6.907785,-2.373689,7.112282,2.933799,2.803479,-7.170328,2.067287,3.492447,-5.335889,-5.738707,0.769294,-4.125863,-8.649337,3.501497,-6.753768,-3.832764,-4.961755,-3.510196,-4.765706,7.439820,0.502750,-7.677265,-6.472639,6.813965,3.108273,-5.723858,-2.775229,1.131041,2.455227,5.115478,-8.034473,-0.634433,6.695618,-0.250114,-2.392918,2.844376,-1.411355,1.407169,3.710176,2.079741,-2.827602,9.779726,-2.063692,4.131423,0.500334,0.583499,-9.602791,-6.299652,-2.581858,9.212961,8.945415,6.732072,0.320541,-1.747685,5.669260,1.237287,0.679826,-7.611206,1.290303,5.361036,7.730560,7.429693,-0.453582,7.420063,-1.624530,7.283548,0.475779,8.114654,3.390015,5.333590,-9.839669,-3.625955,-3.498968,9.742258,-3.242669,-6.953090,-2.352271,7.614308,-2.477647,0.204537,-6.487649,-8.935103,1.999800,-6.793664,5.167359,7.580453,-2.226983,5.944245,6.808053,-2.878255,6.853292,5.427892,-9.672029,-1.378028,1.319217,-7.412844,-1.327393,3.007499,-5.764963,8.541607,1.344472,9.806407,-0.196071,-0.907408,-2.835047,-7.203881,-8.237317,5.771760,-0.792837,3.192340,1.248065,5.372025,-0.468975,-1.088266,-2.679659,-2.109205,-7.375618,1.911228,-3.790107,-8.376407,6.663005,-9.389870,-7.727219,-3.538118,9.538858,-3.459044,2.514281,-1.423166,-1.766120,6.488280,-2.945051,3.263448,9.594742,-4.861497,-2.711441,-0.310417,1.969179,7.664998,-6.551253,-7.788600,9.906371,8.922828,6.736275,-0.125124,-6.874000,-8.829474,4.401963,1.073512,7.796001,-4.844843,5.072563,8.052616,6.522952,-5.204454,-2.397832,8.052023,-4.388776,2.162286,8.653558,7.371703,8.274650,-0.405768,1.459154,7.958801,4.295236,6.207861,1.575801,0.263368,1.155113,-0.549804,6.148195,-9.444629,-2.199992,0.410883,8.600583,2.956484,-9.836059,-9.991147,-7.623001,-6.536472,1.363023,-0.595068,-8.779512,-7.614831,1.197330,-4.262486,-1.988211,-1.802452,-6.208838,-6.614321,8.564043,-4.583068,-5.630858,9.488837,-8.412022,-0.228949,4.329177,-6.090188,7.616185,-4.123822,-9.125146,5.641799,5.158015,0.569246,0.321045,5.651093,-9.772936,-7.679010,-4.230311,6.067164,-1.549993,6.982436,-2.176216,5.441811,-5.936225,-6.982228,-5.212919,7.087649,-6.405496,4.048843,5.618672,-0.554819,-1.500101,-8.110320,-7.096631,-3.373238,7.385789,9.063457,9.347837,6.021021,-0.220660,-0.892175,2.008265,-6.845692,4.940699,9.818186,-6.311172,-4.275560,8.529366,-5.908328,-6.978973,-6.798352,-0.522165,8.881276,-9.826726,1.554124,-1.407714,-0.027009,3.930950,4.536329,-6.286360,5.907236,-8.620708,-7.382227,-7.421883,-2.373133,6.759316,9.441440,-0.996286,4.530634,8.571762,6.273745,4.748789,-9.414562,-7.234840,7.673819,-9.076255,8.972580,-9.872326,-0.751721,-0.520936,3.287923,2.761213,1.017123,9.282076,6.485359,3.418921,-9.738430,-6.294656,-4.684752,0.433967,8.185197,-2.322877,-5.606856,-4.997221,-8.957236,2.239686,-6.294661,-3.526069,-7.683352,2.452463,-4.684421,-0.036101,6.603771,9.918457,8.166816,4.552011,2.292310,-3.484667,-9.738263,-8.131332,4.762945,-4.446254,5.380027,-1.672539,-2.572517,1.861891,-3.636672,7.359785,-7.262816,0.045847,2.349731,-4.294979,7.939240,8.934073,-0.787337,-1.955570,3.214094,5.850860,8.319343,2.466412,6.297269,-0.167853,-5.831989,9.252174,0.337674,6.060008,0.135710,6.411879,-4.198619,-1.652571,-1.271478,-9.147894,3.995931,-8.727371,8.761794,-3.516121,-1.627647,9.170920,1.218578,7.488322,7.564574,8.186686,4.617360,6.531413,2.269777,-9.450520,-7.055864,-8.585988,-4.799503,-7.662131,-5.964092,0.407077,-8.836452,2.196589,3.523050,-3.813197,0.324308,-9.881341,-3.936123,-7.952638,6.387988,6.190372,-1.757506,-8.869524,2.586817,-5.057038,6.518398,-0.580289,-6.966129,0.163146,0.952958,1.721382,-0.737080,0.563496,4.228759,-1.094230,-5.379600,5.764640,4.186289,8.987232,-9.117704,-8.061022,4.416927,1.373928,5.544237,-8.654548,-3.612502,1.408164,6.638575,5.470759,6.950771,0.676240,-5.301902,-8.970231,-6.547568,-2.514916,8.319497,4.520122,0.375968,0.358903,5.478015,0.185830,6.353013,-3.786821,9.272949,9.065031,-9.549472,-0.364677,6.709517,-7.703654,5.723402,9.543964,-7.614844,2.507851,1.818027,-9.615481,-2.748883,2.441652,-8.016769,-0.257906,2.945326,-3.408054,5.043508,-7.544763,6.477470,-6.654188,9.316618,-7.068169,-7.738096,-7.969371,-6.298128,5.405313,-1.529498,-9.789753,-2.408794,2.609760,-3.451905,1.725081,-3.419855,8.830160,8.534193,-2.890295,8.570418,-1.098511,0.015786,6.451894,7.099301,-4.655523,2.853010,-6.793095,-5.354475,-2.388390,-7.467195,-6.045129,0.175899,-7.483169,8.961025,-5.994218,0.397155,2.391153,2.162027,-2.683062,4.273467,-0.450648,9.690983,-2.779530,-1.022594,9.648031,9.724777,-5.559318,6.296235,0.077638,2.421832,3.381100,-8.862689,3.352093,6.098542,-7.066146,3.921035,-1.277874,4.147224,-5.086290,1.562109,-7.963674,6.916452,1.324832,-9.005951,3.389725,-1.701800,-8.609878,8.156401,-3.905677,-3.048780,1.737955,-8.052583,-3.303212,2.349882,8.195683,-5.477813,0.962054,-8.647869,-5.848141,6.083315,6.852274,-2.243400,-5.428244,9.483577,1.158729,7.450340,3.403155,-1.696821,2.701841,-7.328255,-0.403583,3.286899,-5.073934,-8.405027,-6.824657,4.720066,-4.684632,1.999912,1.133116,4.400842,-6.821926,-9.983030,-4.688840,-3.551841,-8.730123,5.766617,8.255269,-5.556155,-1.465629,8.399251,-0.143871,-8.312937,-5.320282,2.640328,9.798711,-2.280857,8.193246,0.923003,9.332976,8.701180,2.115328,-1.150276,5.349417,-3.298430,-4.409089,-0.819133,-0.141863,2.398557,5.424043,5.994865,9.820535,-1.865921,-9.143714,0.979815,1.609328,5.005006,6.980071,-2.350066,-5.113518,-9.370399,-0.858816,3.652599,-9.357184,6.568035,3.589936,-1.765543,6.152829,5.873384,-3.416433,6.590201,5.985860,-2.824748,8.425504,-6.523262,-2.344932,-3.673636,9.500213,9.694940,-1.099286,5.947436,8.035295,-3.766337,5.638164,-3.302663,-9.019093,0.480645,-3.898504,-0.665838,-3.428414,0.630869,-2.940086,2.635822,8.695351,8.071037,-8.660000,1.015423,-4.603301,-3.444640,5.845378,8.315070,-9.472641,-0.248701,7.957465,-0.089049,1.980384,-9.816677,7.892298,5.581263,-7.697456,-0.647954,-2.353050,1.201643,-4.829828,-6.618249,-4.784124,7.016068,-4.521730,-6.364062,2.579372,-3.641808,-9.454891,-5.979561,-0.092296,3.014434,-9.830122,1.396772,1.634701,9.469422,-0.602249,-2.713677,0.807800,-5.305844,4.283391,5.755699,6.332427,7.094563,-0.544519,-8.436080,3.724003,-1.900386,4.035162,-2.150329,-5.634526,-2.767789,9.657704,5.405124,6.542305,3.018455,-5.437152,8.503299,-4.842333,-0.705443,-8.095544,1.585609,-0.331719,8.523061,-4.517042,-0.960653,8.598105,9.628243,4.233277,7.520643,-0.830692,7.478790,-7.628241,6.414615,2.284804,3.740685,-7.563355,-1.185750,-3.138669,-7.564202,5.592067,6.388748,-2.584485,-6.324981,-4.842856,-7.463278,-7.532578,2.511616,-8.971530,5.155099,-2.575701,7.775700,2.687471,1.353578,1.069474,-8.882529,2.675758,1.685054,3.880234,2.326214,0.298262,-7.764984,-9.938699,-5.137115,-8.265654,-1.104537,3.452142,6.006312,3.145153,-4.559309,5.192752,-6.945162,7.305367,-1.811017,0.943781,-5.513338,1.194467,-4.665149,-0.738609,-6.190201,-0.562653,-0.051376,-6.055698,-9.079431,-2.142455,-9.747615,-8.616807,-9.964689,-6.600621,-3.282902,4.244994,-6.440306,7.263142,-1.445591,-4.403665,8.437527,5.870855,-8.360130,6.665853,-3.429042,0.745459,6.963161,1.532811,6.260100,-8.363133,3.419014,-2.884876,-3.521151,-2.390409,-5.649506,7.011462,8.829227,8.716592,-2.347182,-6.003014,-1.110632,3.490722,8.204089,-8.011827,-9.532633,-2.648052,-0.597032,-6.023035,9.959668,9.227742,4.602032,6.545002,6.032942,-3.311926,5.994442,-7.487339,-0.322341,-2.880142,-6.962499,2.155939,9.838359,-3.464320,-7.835806,5.074300,9.557121,7.846088,3.368267,5.115680,1.606770,8.736581,5.327520,1.425438,0.244163,2.909641,-9.752566,6.477742,8.276976,0.979064,-0.833317,2.501298,1.373306,-0.609777,8.568638,7.607876,2.170034,4.402819,0.254438,-2.434643,-4.930210,-4.780179,-8.896761,7.553455,-5.113721,-1.532772,5.899180,-8.605088,-9.904244,4.295346,3.010497,6.644854,9.259077,9.887674,7.997251,-2.951293,1.586310,-1.440580,-0.030484,9.860957,-0.955354,5.888111,0.336948,-5.371019,-6.881554,6.145395,-7.594558,-3.420701,-5.140827,-8.161431,1.148507,8.864821,-3.736195,5.109155,8.960313,9.949258,-5.383087,9.252537,-5.614592,6.623560,-2.163619,-0.349138,3.330451,-0.828714,-4.147156,7.235543,4.555794,9.467067,-8.555375,-1.592617,4.465767,2.265136,-2.369693,-3.388934,-2.724008,4.012216,-7.715775,-4.306820,-8.268074,7.572680,7.631078,1.997719,-9.782736,-1.971939,7.964717,-7.134528,-7.322804,-5.655292,0.930014,-4.755639,-6.684856,-8.829287,1.435411,4.312469,2.825887,4.974116,1.266689,-8.019617,7.625194,2.872244,7.567073,0.885040,2.817194,8.171825,-6.182490,7.760062,8.556934,-7.008720,-3.996170,3.923767,-1.641471,-4.174349,1.650258,9.091199,-6.697184,1.944892,2.009295,1.470825,-8.216350,9.242477,-7.946823,4.575574,-4.722923,8.743425,9.993687,-1.196824,9.919526,-1.135854,2.133356,3.728543,-3.114591,-9.535581,8.541885,-4.225571,-9.092089,9.876710,-0.500444,-1.059179,-1.764589,5.568286,-7.637846,0.451886,6.344282,-1.618467,-9.040514,-0.113204,-2.360553,-4.133733,-0.994174,5.547943,-8.489766,-4.259919,-5.819696,6.982876,-1.155736,-8.858047,-2.670112,-2.557080,8.174815,1.092171,-0.863282,-7.661133,-9.990200,-4.361251,-9.969549,2.126500,-2.799214,3.009111,-7.468627,6.378236,-9.974085,-4.315281,-5.720048,-6.282333,3.125634,8.476267,3.497045,7.501460,-5.974581,-0.874454,2.186915,0.636393,3.681868,-3.706345,6.177671,-3.612106,-6.942969,-5.703296,5.023245,-7.584999,-1.062991,-3.279898,-3.273050,6.727143,-4.646544,8.131647,1.769903,8.195017,7.682824,9.117622,-3.409416,-2.165520,-8.674397,1.043615,6.518545,-2.463660,1.883392,0.917415,-4.038803,-9.249303,7.980182,2.104296,-5.635958,4.361986,-2.799583,-4.874224,9.317167,6.749121,8.451545,4.453167,7.087860,2.476968,0.218927,-6.889855,4.188517], dtype = "float64")#candidate|6546|(1248,)|const|float64
call_6545 = func_5202_call(relay.reshape(const_6546.astype('float64'), [16, 6, 13]))
call_6547 = func_5202_call(relay.reshape(const_6546.astype('float64'), [16, 6, 13]))
output = relay.Tuple([call_6459,var_6460,call_6467,var_6468,call_6470,call_6479,var_6480,bop_6487,uop_6510,call_6523,const_6524,var_6525,var_6526,var_6527,call_6545,const_6546,])
output2 = relay.Tuple([call_6461,var_6460,call_6469,var_6468,call_6471,call_6481,var_6480,bop_6487,uop_6510,call_6528,const_6524,var_6525,var_6526,var_6527,call_6547,const_6546,])
func_6548 = relay.Function([var_6442,var_6460,var_6468,var_6480,var_6525,var_6526,var_6527,], output)
mod['func_6548'] = func_6548
mod = relay.transform.InferType()(mod)
var_6549 = relay.var("var_6549", dtype = "float64", shape = (6, 5, 7))#candidate|6549|(6, 5, 7)|var|float64
var_6550 = relay.var("var_6550", dtype = "float64", shape = (600,))#candidate|6550|(600,)|var|float64
var_6551 = relay.var("var_6551", dtype = "int8", shape = (42, 2))#candidate|6551|(42, 2)|var|int8
var_6552 = relay.var("var_6552", dtype = "float64", shape = (840, 2))#candidate|6552|(840, 2)|var|float64
var_6553 = relay.var("var_6553", dtype = "int8", shape = (1560,))#candidate|6553|(1560,)|var|int8
var_6554 = relay.var("var_6554", dtype = "int64", shape = ())#candidate|6554|()|var|int64
var_6555 = relay.var("var_6555", dtype = "int64", shape = (1232,))#candidate|6555|(1232,)|var|int64
output = func_6548(var_6549,var_6550,var_6551,var_6552,var_6553,var_6554,var_6555,)
func_6556 = relay.Function([var_6549,var_6550,var_6551,var_6552,var_6553,var_6554,var_6555,], output)
mutated_mod['func_6556'] = func_6556
mutated_mod = relay.transform.InferType()(mutated_mod)
var_6657 = relay.var("var_6657", dtype = "float64", shape = (8, 8, 16))#candidate|6657|(8, 8, 16)|var|float64
uop_6658 = relay.log10(var_6657.astype('float64')) # shape=(8, 8, 16)
func_4093_call = mod.get_global_var('func_4093')
func_4100_call = mutated_mod.get_global_var('func_4100')
var_6672 = relay.var("var_6672", dtype = "int8", shape = (120,))#candidate|6672|(120,)|var|int8
var_6673 = relay.var("var_6673", dtype = "int8", shape = (6, 260))#candidate|6673|(6, 260)|var|int8
var_6674 = relay.var("var_6674", dtype = "int64", shape = ())#candidate|6674|()|var|int64
var_6675 = relay.var("var_6675", dtype = "int64", shape = (56, 22))#candidate|6675|(56, 22)|var|int64
const_6676 = relay.const([-3,-9,-10,-9,2,-9,-9,-3,-6,-1,-1,-1,2,5,9,10,-8,-10,-3,-5,6,-5,-8,-1,3,9,-10,-10,8,-4,-3,2,-1,-4,-3,1,-5,-2,7,9,-7,3,-9,-10,10,5,-6,9,-1,-4,-9,4,3,7,1,-9,4,-4,7,-9,7,4,-5,3,-3,-2,3,-8,-2,-6,3,-1,-9,10,-10,5,-7,3,2,-9,2,-9,7,-9], dtype = "int8")#candidate|6676|(84,)|const|int8
call_6671 = relay.TupleGetItem(func_4093_call(relay.reshape(var_6672.astype('int8'), [10, 12, 1]), relay.reshape(var_6673.astype('int8'), [10, 12, 13]), relay.reshape(var_6674.astype('int64'), []), relay.reshape(var_6675.astype('int64'), [1232,]), relay.reshape(const_6676.astype('int8'), [84,]), ), 8)
call_6677 = relay.TupleGetItem(func_4100_call(relay.reshape(var_6672.astype('int8'), [10, 12, 1]), relay.reshape(var_6673.astype('int8'), [10, 12, 13]), relay.reshape(var_6674.astype('int64'), []), relay.reshape(var_6675.astype('int64'), [1232,]), relay.reshape(const_6676.astype('int8'), [84,]), ), 8)
var_6678 = relay.var("var_6678", dtype = "float64", shape = (8, 8, 16))#candidate|6678|(8, 8, 16)|var|float64
bop_6679 = relay.greater(var_6657.astype('bool'), relay.reshape(var_6678.astype('bool'), relay.shape_of(var_6657))) # shape=(8, 8, 16)
bop_6683 = relay.subtract(uop_6658.astype('uint64'), relay.reshape(var_6678.astype('uint64'), relay.shape_of(uop_6658))) # shape=(8, 8, 16)
output = relay.Tuple([call_6671,var_6672,var_6673,var_6674,var_6675,const_6676,bop_6679,bop_6683,])
output2 = relay.Tuple([call_6677,var_6672,var_6673,var_6674,var_6675,const_6676,bop_6679,bop_6683,])
func_6688 = relay.Function([var_6657,var_6672,var_6673,var_6674,var_6675,var_6678,], output)
mod['func_6688'] = func_6688
mod = relay.transform.InferType()(mod)
mutated_mod['func_6688'] = func_6688
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6688_call = mutated_mod.get_global_var('func_6688')
var_6690 = relay.var("var_6690", dtype = "float64", shape = (8, 8, 16))#candidate|6690|(8, 8, 16)|var|float64
var_6691 = relay.var("var_6691", dtype = "int8", shape = (120,))#candidate|6691|(120,)|var|int8
var_6692 = relay.var("var_6692", dtype = "int8", shape = (6, 260))#candidate|6692|(6, 260)|var|int8
var_6693 = relay.var("var_6693", dtype = "int64", shape = ())#candidate|6693|()|var|int64
var_6694 = relay.var("var_6694", dtype = "int64", shape = (56, 22))#candidate|6694|(56, 22)|var|int64
var_6695 = relay.var("var_6695", dtype = "float64", shape = (8, 8, 16))#candidate|6695|(8, 8, 16)|var|float64
call_6689 = func_6688_call(var_6690,var_6691,var_6692,var_6693,var_6694,var_6695,)
output = call_6689
func_6696 = relay.Function([var_6690,var_6691,var_6692,var_6693,var_6694,var_6695,], output)
mutated_mod['func_6696'] = func_6696
mutated_mod = relay.transform.InferType()(mutated_mod)
var_6887 = relay.var("var_6887", dtype = "float32", shape = (13, 15, 1))#candidate|6887|(13, 15, 1)|var|float32
uop_6888 = relay.cos(var_6887.astype('float32')) # shape=(13, 15, 1)
func_2974_call = mod.get_global_var('func_2974')
func_2978_call = mutated_mod.get_global_var('func_2978')
var_6894 = relay.var("var_6894", dtype = "uint64", shape = ())#candidate|6894|()|var|uint64
var_6895 = relay.var("var_6895", dtype = "uint64", shape = (25, 9))#candidate|6895|(25, 9)|var|uint64
const_6896 = relay.const([8.563868,5.428554,7.609127,3.475693,-3.208070,-6.461785,-3.316019,-2.888399,7.169296,-7.423673,5.964285,5.005419,-4.371295,-0.596804,8.988324,2.871504,9.760348,3.177738,-3.758603,2.221046,8.458877,-0.133877,6.426633,8.202560,1.225486,-0.453451,-3.667286,-4.978225,8.246887,3.781095,-1.557972,9.795747,2.447076,-3.299141,6.128328,-3.472250,9.949657,0.181654,5.215205,1.669731,-6.233867,6.572634,5.971606,4.581435,-3.822704,4.697213,2.850047,-6.181725,5.229319,-7.380962,-5.038469,-7.743207,3.119592,-5.522288,-5.490128,8.958159,-3.543306,2.220431,-1.828334,-3.420216,2.320305,7.140250,-2.871939,-8.770680,-3.725507,2.327959,4.828899,-1.679658,9.402643,-1.013804,-2.688345,-7.448082,-7.954560,-5.490544,-9.871478,-8.262037,5.879227,-1.286448,8.827226,6.633908,1.252325,6.732542,-6.867070,-4.994640,-7.424063,1.901460,-3.197488,0.188828,-6.073149,-5.757268,-6.255718,-2.774101,-0.653535,-8.198841,7.600476,-1.670717,-4.022675,-8.894101,1.541164,-5.963266,7.365103,5.947317,1.003595,-8.276446,-0.895263,-4.996461,9.290808,-9.623907,3.667570,-6.041085,8.315138,9.068644,-9.494602,-9.447318,-6.386101,2.667552,0.520948,-9.132715,-4.569363,-4.831221,4.348939,1.468815,9.289780,-6.953080,-5.462689,-9.610564,1.646146,0.181095,1.695469,-9.708685,-0.029175,1.214557,-2.078552,-4.156149,-7.757159,2.913917,2.061817,4.019809,5.184669,5.075802,-9.537388,4.659492,-8.707828,4.954652,-8.029630,1.510061,1.277512,-4.049405,-2.111585,-4.548031,5.623330,-4.855576,9.864061,-5.559392,-2.631246,-4.609833,9.589332,-0.405617,8.576948,0.935282,8.547407,-6.406394,4.676032,-3.244725,-3.329754,-6.115422,9.191278,-9.393172,-0.223199,4.904939,5.356806,1.096678,0.739855,-6.493545,9.970383,-6.823857,-1.436834,-5.531668,-1.057273,-7.545711,1.899535,-6.601633,6.859074,5.858031,7.117618,-9.846681,5.813705,3.871674,-5.208288,4.407647,3.031299,-2.868074,-3.061606,0.817374,-0.457752,1.672491,7.428825,-8.400388,1.905146,-8.244905,-1.148498,1.810266,3.477542,-3.766667,-5.374682,9.794689,9.693042,1.914807,-7.881653,-5.629434,-5.862686,0.694700,-3.367518,0.184907,7.998746,-1.115727,-1.356923,6.516869,0.492484,0.235492,7.570503,8.524539,9.469144,5.815616,-3.989659,-4.646463,4.872399,-6.971314,0.011466,8.891076,4.154945,-4.446253,5.159887,4.112053,9.724637,-0.598484,-7.401806,5.168600,5.051480,6.686599,7.270974,-2.177861,6.676519,-6.563850,-7.245933,-0.205076,5.884743,-6.213884,-7.964119,2.798662,-3.861663,0.339337,-6.177159,-1.548306,3.114121,6.820130,1.233169,7.091973,-9.994221,8.728148,-9.562863,-5.666883,-7.428334,-0.244103,3.657901,-2.046890,-0.229077,-1.169224,4.333643,-1.144036,-3.652985,1.232151,0.263303,1.005565,-9.054452,0.723328,-1.639420,-9.941128,-1.310583,7.139415,4.575253,0.981171,4.411162,-1.714504,8.043171,7.732000,-3.047178,7.514926,-6.215885,1.045348,-4.394404,3.399543,-4.950071,5.656976,-0.234117,-7.754452,7.504779,2.784753,2.262502,9.126351,-0.102127,8.158679,5.168840,2.952923,8.677226,-1.819259,2.016812,-6.883081,1.474706,-3.657088,-5.303911,2.871145,-3.289084,9.232426,-1.731882,-7.101728,3.240096,6.309919,2.705252,-9.516090,7.257091,-4.462875,-9.367543,7.822126,-0.953686,-8.492489,-5.884519,-2.524550,-1.042760,2.889895,-1.309182,-3.265602,3.395396,-3.854356,-8.182093,5.514502,6.867976,-8.063845,-4.874381,-6.534781,1.535811,7.097537,-3.609288,-5.556277,8.156186,-5.365757,-4.870766,-2.236823,-4.770375,-1.128479,7.204010,9.720374,4.059088,2.791261,3.305757,-1.012582,-8.835012,-8.020344,-7.254442,8.887951,-4.940369,7.821984,-8.500633,-5.671750,0.257168,9.842838,-0.354568,5.506054,-1.345700,0.627511,-2.661825,-3.249654,-4.728740,-1.142332,-4.779503,-8.247843,1.034786,5.254254,2.915675,-3.109753,-0.370395,-7.646177,-0.941473,-8.546554,-0.802435,-1.635184,2.779144,0.785500,-4.023718,-1.750312], dtype = "float64")#candidate|6896|(390,)|const|float64
call_6893 = relay.TupleGetItem(func_2974_call(relay.reshape(var_6894.astype('uint64'), []), relay.reshape(var_6895.astype('uint64'), [5, 3, 15]), relay.reshape(const_6896.astype('float64'), [390,]), ), 3)
call_6897 = relay.TupleGetItem(func_2978_call(relay.reshape(var_6894.astype('uint64'), []), relay.reshape(var_6895.astype('uint64'), [5, 3, 15]), relay.reshape(const_6896.astype('float64'), [390,]), ), 3)
bop_6916 = relay.bitwise_xor(uop_6888.astype('int32'), call_6893.astype('int32')) # shape=(13, 15, 390)
bop_6919 = relay.bitwise_xor(uop_6888.astype('int32'), call_6897.astype('int32')) # shape=(13, 15, 390)
output = relay.Tuple([var_6894,var_6895,const_6896,bop_6916,])
output2 = relay.Tuple([var_6894,var_6895,const_6896,bop_6919,])
func_6923 = relay.Function([var_6887,var_6894,var_6895,], output)
mod['func_6923'] = func_6923
mod = relay.transform.InferType()(mod)
var_6924 = relay.var("var_6924", dtype = "float32", shape = (13, 15, 1))#candidate|6924|(13, 15, 1)|var|float32
var_6925 = relay.var("var_6925", dtype = "uint64", shape = ())#candidate|6925|()|var|uint64
var_6926 = relay.var("var_6926", dtype = "uint64", shape = (25, 9))#candidate|6926|(25, 9)|var|uint64
output = func_6923(var_6924,var_6925,var_6926,)
func_6927 = relay.Function([var_6924,var_6925,var_6926,], output)
mutated_mod['func_6927'] = func_6927
mutated_mod = relay.transform.InferType()(mutated_mod)
var_6974 = relay.var("var_6974", dtype = "float32", shape = (6, 15, 6))#candidate|6974|(6, 15, 6)|var|float32
uop_6975 = relay.sin(var_6974.astype('float32')) # shape=(6, 15, 6)
uop_6987 = relay.exp(var_6974.astype('float64')) # shape=(6, 15, 6)
uop_6992 = relay.acosh(uop_6987.astype('float64')) # shape=(6, 15, 6)
func_5129_call = mod.get_global_var('func_5129')
func_5135_call = mutated_mod.get_global_var('func_5135')
var_6996 = relay.var("var_6996", dtype = "float64", shape = (80,))#candidate|6996|(80,)|var|float64
const_6997 = relay.const([3,-10,2,2,8,6,3,2,9,-4,-2,7,9,-9,5,10,-5,6,-2,5,-6,-7,6,4,-5,-8,-7,-5,4,-1,6,-10,2,10,6,3,-6,-1,-4,-10,3,-6,-2,9,4,6,9,-3,-3,6,8,-1,2,1,-9,2,8,4,-10,-5,-3,6,-8,-3,-4,2,8,10,-7,5,9,-2,7,6,-1,2,1,-3,7,-10,7,-4,-5,-7,5,-2,7,-3,2,-4,8,6,-3,8,7,2,-10,-10,-3,1,7,4,9,-10,7,-3,-9,-4,-8,-2,-10,8,5,7,5,7,1,-5,1,1,-9,-10,-3,-1,-7,-5,-1,7,3,5,-1,-9,6,-3,1,-4,8,1,10,-2,6,4,-2,-5,-6,-4,-5,-9,7,9,-8,10,-8,-9,2,-7,-1,-10,-3,-10,5,6,-7,2,-1,-3,7,4,4,-6,-5,9,-4,-10,1,-6,6,-8,-10,-8,-5,-7,6,-8,7,9,8,9,-4,-9,-9,-3,10,9,-4,-9,9,1,-9,6,-6,-7,2,6,-5,10,1,-10,-7,-9,7,1,-5,-1,-5,10,3,-4,3,10,-5,1,-6,-9,1,5,7,4,-2,6,-4,-9,-4,-2,4,-7,2,7,1,2,-3,10,5,-9,2,4,-2,5,-5,4,-8,-8,-9,10,-10,-3,-1,2,10,-3,-9,-8,-8,-6,1,2,-1,2,7,1,6,10,-9,-3,6,-9,1,-5,-2,3,2,-5,-10,-2,-8,-4,-9,2,-1,-4,1,3,5,-2,-8,10,-2,3,-1,9,-2,-4,1,8,10,-10,-7,2,10,9,-1,-10,-6,-5,9,-6,10,1,-7,5,1,10,-8,-2,-8,-6,1,-4,-8,4,4,10,2,-9,-10,-8,-10,1,-3,-6,-3,2,8,-1,-4,6,4,5,-7,5,-9,-10,-1,8,-3,7,-9,-2,-6,5,-9,-9,9,1,8,-7,10,7,8,7,4,-9,-4,1,-3,9,1,7,4,10,-5,-1,2,-6,7,-2,-7,5,-2,-9,-5,9,6,8,3,4,-2,-2,-2,7,-2,-10,1,-10,4,-10,-10,6,4,-8,1,6,4,2,-6,7,9,7,-5,-3,-6,7,-3,-4,7,5,-3,-5,-8,-6,3,2,-3,2,-6,6,-1,10,5,10,-5,2,-7,-4,4,-1,3,1,-2,3,-1,10,1,-3,-1,10,9,3,-1,-10,8,1,5,-9,-6,-5,-3,-6,-4,-3,-5,2,-7,9,3,-4,-1,4,9,-2,-8,-2,1,-9,9,9,-7,8,-5,3,-8,-1,-1,6,-10,7,-7,-1,6,-3,-2,-9,-5,-4,-5,10,-3,2,-6,6,-9,6,-1,-6,6,2,-4,-8,9,1,8,-7,2,9,-8,-4,7,4,-6,4,10,2,8,-4,4,3,7,-5,1,-7,-8,-7,2,4,10,1,-6,5,-7,-3,4,-2,-9,-10,-10,9,-9,-4,6,10,-6,7,8,-5,10,-5,-7,-9,-2,5,7,10,8,8,10,1,1,-7,9,3,4,-8,-4,7,6,-8,6,1,-1,-10,-9,8,-9,10,-1,-9,-10,3,-4,10,2,4,-7,6,4,-3,-8,-2,10,-7,4,3,3,-9,-6,-6,10,-8,5,-9,9,1,-4,4,-4,4,-7,5,3,-6,7,-9,3,6,-3,-4,-6,2,9,-6,9,4,-5,7,-5,8,8,-10,9,7,-10,6,8,-8,6,-10,1,2,-3,5,3,-1,-5,9,7,-7,7,-3,-5,-1,-2,-7,-5,1,7,7,1,10,8,-1,-7,10,-4,-8,3,-10,-10,-9,6,-2,-6,-5,-6,-5,8,9,-6,9,3,1,-9,-2,9,-4,9,-8,-7,-4,-1,7,-8,-3,5,-6,-3,6,-9,-1,-8,-3,-4,-4,7,-4,-8,6,-9,-10,-4,5,-7,-7,7,-5,4,-2,1,9,-3,-4,8,-6,-10,-3,7,2,-9,8,-1,-3,-1,5,-2,-9,9,-7,-5,4,-1,2,5,10,4,-3,3,10,-2,7,9,-10,-9,-5,-10,-2,4,-1,-9,-4,-10,-8,3,-6,-4,1,-1,2,-8,6,6,10,-1,10,1,5,-2,-2,-2,2,-3,9,-1,-4,8,6,-8,-5,-7,-1,10,10,8,7,-2,5,-9,9,-5,-9,-5,-10,-3,-3,9,-1,-9,-9,2,-8,6,-2,-8,-6,-6,-10,2,-1,5,7,10,-1,8,-8,7,-5,-1,-7,-7,-6,8,3,5,4,10,4,-9,8,6,-8,-4,-5,1,6,6,3,7,5,2,2,3,1,-10,1,-7,-8,-3,9,-8,4,-6,-10,-2,5,-8,-5,4,5,5,9,-7,6,-1,-4,8,4,6,7,3,-4,-8,2,-5,5,4,-3,-2,-1,-1,-5,-4,3,7,9,-9,-10,10,-10,-10,-4,-10,3,3,8,-8,3,1,3,-5,7,3,-2,9,7,-10,2,-7,3,-1,-4,-3,3,2,-4,-6,10,6,2,7,-5,-2,6,-3,9,-9,5,9,-7,-5,7,-2,3,-2,-3,6,-5,-4,8,-9,3,2,-3,-7,-2,-1,-4,-10,1,1,1,4,8,7,5,-4,6,-6,7,-9,-6,9,-5,8,-1,2,8,5,3,-3,8,7,-5,2,8,2,4,-5,-10,-7,-4,10,2,-10,-9,-3,4,2,-7,-1,8,1,3,-2,-9,-4,5,-6,9,-4,-9,-7,1,2,4,2,-7,3,-7,4,2,-10,10,-8,2,-9,-2,-5,6,10,-1,9,3,9,-6,9,-9,-9,-5,-1,-10,1,9,-7,-3,2,-7,-3,2,10,5,8,-8,-6,-3,-3,9,8,-10,-10,10,-9,2,7,6,-4,9,-8,8,-4,-10,5,-1,-5,8,5,9,6,8,7,-3,8,2,2,7,-10,-5,6,10,8,-9,5,-9,-9,-6,-2,5,2,-5,7,2,-10,-4,2,10,-1,5,6,9,-10,2,-4,3,4,2,-1,-1,-1,7,-9,5,7,8,-3,-1,-1,-8,-9,1,-10,-7,7,-2,-2,-2,-8,-3,-7,10,-7,5,-3,-3,4,6,-8,5,-10,4,5,-3,2,-10,6,-9,1,2,-8,4,10,-8,-4,4,9,6,-1,-7,-4,2,-8,-2,6,3,-9,-6,9,-5,-6,-7,-6,-8,-1,-10,3,4,4,10,-1,1,-10,-9,2,3,5,-10,-2,-10,5,-5,-3,-10,8,4,-3,-9,6,3,6,-6,4,3,-6,7,2,-10], dtype = "int64")#candidate|6997|(1232,)|const|int64
const_6998 = relay.const([False,True,False,True,True,False,True,False,True,False,False,True,False,True,False,True,False,True,False,True,True,True,False,True,True,False,False,False,True,False], dtype = "bool")#candidate|6998|(30,)|const|bool
const_6999 = relay.const([True,True,True,True,True,False,True,True,False,True,False,True,True,False,False,True,True,False,False,True,False,True,False,True,True,False,False,False,False,False,False,False,True,False,True,True,False,False,False,True,True,False,False,False,True,False,False,False,True,False,True,True,True,False,False,False,False,False,True,True,True,True,True,False,True,False,True,False,False,True,True,True,False,True,False,True,True,False,True,False,False,True,True,False,True,False,False,True,False,True,False,True,True,True,False,False,True,True,False,True,True,True,True,True,False,True,False,False,True,True,False,True,False,False,True,True,False,False,True,False,True,True,False,False,True,False,True,False,True,True,False,False,True,True,True,True,False,True,True,True,True,False,False,True,False,False,True,False,False,False,False,True,True,False,False,False,False,True,True,False,False,True,False,True,False,False,True,False,True,False,True,False,False,True,False,False,True,True,False,True,True,True,True,False,True,True,True,False,False,False,False,False,True,False,False,True,False,True,True,False,True,False,False,False,True,False,False,True,True,True,False,False,False,True,True,True,False,False,True,False,False,True,True,True,False,True,False,False,False,True,False,True,True,True,True,False,True,False,True,True,True,False,True,True,True,False,False,False,False,False,False,False,True,True,True,True,False,True,False,False,False,False,False,True,True,True,False,True,True,True,False,False,True,True,True,True,False,False,True,False,False,True,True,True,True,False,True,True,False,True,False,False,True,False,False,True,True,False,False,True,True,False,True,True,True,True,False,True,True,True,False,True,False,True,False,True,True,True,True,True,False,True,False,False,True,False,True,False,False,True,True,True,True,True,False,False,False,False,False,True,True,False,False,False,True,False,True,False,False,False,False,False,True,False,False,False,False,True,True,False,False,False,True,True,True,False,False,True,False,False,False,False,False,False,False,True,True,True,True,True,False,True,True,True,True,False,False,True,True,True,True,False,True,True,True,True,True,True,False,True,True,True,True,True,True,True,False,False,True,False,True,True,True,True,False,True,True,False,False,False], dtype = "bool")#candidate|6999|(420,)|const|bool
call_6995 = relay.TupleGetItem(func_5129_call(relay.reshape(var_6996.astype('float64'), [4, 10, 2]), relay.reshape(const_6997.astype('int64'), [1232,]), relay.reshape(const_6998.astype('bool'), [30,]), relay.reshape(const_6999.astype('bool'), [70, 6]), ), 8)
call_7000 = relay.TupleGetItem(func_5135_call(relay.reshape(var_6996.astype('float64'), [4, 10, 2]), relay.reshape(const_6997.astype('int64'), [1232,]), relay.reshape(const_6998.astype('bool'), [30,]), relay.reshape(const_6999.astype('bool'), [70, 6]), ), 8)
func_6337_call = mod.get_global_var('func_6337')
func_6341_call = mutated_mod.get_global_var('func_6341')
const_7015 = relay.const([-1,5,-3,6,7,7,-6,-5,-10,-1,-3,8,2,-9,5,1,6,10,2,-1,5,3,2,2,-5,5,-9,5,9,8,-8,1,-4,-5,9,5,3,7,-8,-7,2,-4,-5,4,-4,7,9,10,-1,10,-1,1,-3,-9,-7,-5,-8,-2,7,-6,-6,7,-1,1,-1,9,5,8,-2,8], dtype = "uint32")#candidate|7015|(70,)|const|uint32
const_7016 = relay.const([8,1,4,-6,3,3,1,6,-5,2,1,-8,5,7,-9,8,2,9,-9,6,1,1,-3,-4,4,-6,3,-5,6,-4,2,4,5,-4,10,-8,9,-3,-6,3,-2,6,-5,-6,5,-5,5,-5,-3,-5,-8,6,-2,-10,-7,-10,-3,6,9,10,5,-3,5,1,4,2,8,-9,-10,-9,-3,-8,5,-8,-8,-8,-2,-5,6,6,1,4,-8,10,-2,-5,-7,-3,6,5,-8,1,4,8,2,-4,1,-4,10,9,2,7,6,10,-1,-8,-1,-10,4,7,-3,-9,-10,5,7,-2,-7,-10,10,5,-6,2,-1,-2,-2,1,1,-2,-4,-1,-3,2,5,-3,2,8,-2,-7,3,-7,2,2,7,6,-9,2,1,1,8,1,-5,-9,-9,1,-10,9,-8,5,3,9,-10,5,7,-7,4,-6,-9,6,-3,-2,-7,5,1,3,1,9,2,-3,2,5,-10,-6,6,-6,1,2,-10,5,6,7,-9,1,2,2,5,-1,6,5,9,9,-9,8,-7,-3,1,2,-8,-1,6,4,9,-8,1,5,5,10,6,-5,10,-7,10,9,2,-6,-3,4,4,-7,5,6,7,-6,-3,9,1,-4,-5,6,-7,10,1,-10,-5,-3,-8,-10,5,1,9,3,3,-8,4,-10,4,-9,-3,1,7,-8,-3,3,6,-7,-1,2,2,6,4,7,7,3,8,-8,8,-3,8,-2,-9,9,1,-7,3,-1,1,-3,5,-8,1,-9,4,1,-9,4,2,-1,7,8,-3,-5,6,-3,-5,5,7,-5,9,10,-9,-7,2,-5,-5,-8,-1,-1,2,-9,4,-1,1,1,1,7,10,10,1,-10,8,3,3,-6,9,-2,-3,-6,-8,-6,2,9,-9,-5,-2,-7,5,10,7,2,5,-10,6,5,-5,-3,6,9,10,-8,-9,5,-6,-3,-2,6,1,-6,-2,-3,1,3,9,-5,-6,-3,7,-10,-2,-5,-7,10,8,5,6,-8,3,8,-3,-2,5,5,-1,4,-7,-8,1,2,-5,-9,6,-9,9,2,-10,1,10,-9,1,6,4,2,-1,3,3,6,9,10,-5,-8,-9,-2,4,-9,5,-3,-9,-2,-1,-6,-7,8,10,-4,2,-9,2,7,-1,5,10,-6,-4,9,3,2,10,10,7,4,-7,-8,2,-6,-2,2,-8,-2,7,10,7,-2,3,6,5,9,10,-2,5,-9,1,-10,10,-1,-3,6,4,-6,1,7,1,9,-5,8,-1,10,10,10,2,-6,-4,-5,-4,5,7,3,-8,-3,-5,7,-10,9,7,-4,3,-3,4,-5,-3,4,-4,9,-1,-7,3,-4,10,-5,-3,3,-8,-2,6,-1,-2,10,3,-8,-10,-1,-8,8,-2,-3,1,-10,-4,-5,4,1,10,9,-1,-8,-1,-3,-7,7,3,4,-7,7,9,-6,-8,8,-10,-3,-6,-9,-1,-6,-3,-8,4,-4,-6,-4,1,-9,-7,-8,6,8,-4,10,1,-4,10,5,-3,5,-8,-6,1,1,-4,6,10,-1,1,10,7,8,-5,1,2,7,9,10,-9,-7,-9,3,7,6,7,-1,9,4,-4,1,-5,5,-4,-3,7,-7,2,-8,6,-6,1,9,-7,-3,2,-9,4,10,-1,10,2,8,7,-5,-1,8,-8,-1,2,8,-8,10,10,-10,2,3,-7,-9,7,9,-5,-10,-4,10,5,-9,-6,6,8,1,8,-7,4,-3,-10,-1,-9,-1,-1,8,-10,2,-5,-4,-8,6,-10,3,9,-7,6,7,8,-8,-9,-9,-3,-7,-1,5,7,-3,4,-2,-2,3,6,5,8,-5], dtype = "uint32")#candidate|7016|(700,)|const|uint32
call_7014 = relay.TupleGetItem(func_6337_call(relay.reshape(const_7015.astype('uint32'), [1, 5, 14]), relay.reshape(const_7016.astype('uint32'), [10, 5, 14]), relay.reshape(call_6995.astype('uint8'), [512, 4]), ), 1)
call_7017 = relay.TupleGetItem(func_6341_call(relay.reshape(const_7015.astype('uint32'), [1, 5, 14]), relay.reshape(const_7016.astype('uint32'), [10, 5, 14]), relay.reshape(call_6995.astype('uint8'), [512, 4]), ), 1)
output = relay.Tuple([uop_6975,uop_6992,call_6995,var_6996,const_6997,const_6998,const_6999,call_7014,const_7015,const_7016,])
output2 = relay.Tuple([uop_6975,uop_6992,call_7000,var_6996,const_6997,const_6998,const_6999,call_7017,const_7015,const_7016,])
func_7063 = relay.Function([var_6974,var_6996,], output)
mod['func_7063'] = func_7063
mod = relay.transform.InferType()(mod)
var_7064 = relay.var("var_7064", dtype = "float32", shape = (6, 15, 6))#candidate|7064|(6, 15, 6)|var|float32
var_7065 = relay.var("var_7065", dtype = "float64", shape = (80,))#candidate|7065|(80,)|var|float64
output = func_7063(var_7064,var_7065,)
func_7066 = relay.Function([var_7064,var_7065,], output)
mutated_mod['func_7066'] = func_7066
mutated_mod = relay.transform.InferType()(mutated_mod)
var_7351 = relay.var("var_7351", dtype = "float32", shape = (8, 14, 13))#candidate|7351|(8, 14, 13)|var|float32
uop_7352 = relay.acosh(var_7351.astype('float32')) # shape=(8, 14, 13)
func_6923_call = mod.get_global_var('func_6923')
func_6927_call = mutated_mod.get_global_var('func_6927')
const_7355 = relay.const([-3.892624,-0.535944,-6.971437,1.117906,-3.846432,-4.078955,5.280526,6.892385,2.918533,-4.142280,3.450951,-9.091413,0.194590,-8.731937,-5.193733,-7.300106,4.534654,3.399143,-6.384589,-8.063279,-7.103433,1.116497,6.689165,4.730379,5.170188,-5.856140,-7.329629,-5.009570,-6.307925,-6.468706,-1.411166,7.894609,9.542251,-6.531165,9.387016,-2.116879,8.994719,-5.767350,-9.257350,1.162822,4.421259,-6.937370,-0.925851,3.771622,7.337759,7.586791,-6.397766,2.475691,9.944653,-4.775845,2.224755,4.245245,-6.306146,4.328661,0.671788,-0.644082,-6.853713,-7.466722,5.025932,-3.554259,6.913530,0.557183,-1.931144,5.306012,-4.977111,9.332158,-2.857840,-1.803838,-6.432549,7.403810,-7.618664,-7.154567,-1.127407,1.587603,3.772754,-2.064977,-8.695573,-6.889488,-4.330455,-8.261291,5.158438,-8.573063,-0.566554,7.267067,1.940566,-2.723787,-9.578364,-2.548588,0.753258,8.470943,6.805225,1.670157,6.074213,4.989995,3.402927,-1.858167,9.120093,-5.109202,0.561257,-9.309047,-1.374673,-0.967056,4.456610,7.046066,-0.629083,0.986264,-4.636852,7.518426,9.178449,-9.308526,9.765997,7.638901,5.510513,-7.318843,1.799388,6.509581,-7.634616,8.664476,4.407838,-1.561682,8.668264,9.745330,4.715651,4.758675,1.406241,8.925286,-9.595797,4.468923,3.717334,-9.241252,-0.738026,-1.801059,6.484103,8.939066,0.211903,-3.778909,7.990045,-2.480322,4.480298,5.298274,6.650570,8.656371,-7.635335,-0.630660,-8.306341,-6.549233,-5.865289,5.704524,-6.062047,-1.906484,1.678688,-8.768811,1.841904,2.626033,-9.636779,3.539099,0.218568,4.141257,-4.098691,7.794702,-8.792661,9.931573,2.334394,-0.548106,2.504046,6.231361,-2.239775,-8.520088,-1.734097,-6.049458,-8.991046,9.140898,-9.333720,6.619980,-3.311148,7.048872,9.813297,3.132307,-7.354165,-6.885350,5.861710,-0.033126,-7.902980,3.908594,-6.572972,3.089433,8.452225,-6.187107,-2.665597,-2.540218,4.487701,5.532507,1.797290,9.451640,8.516310], dtype = "float32")#candidate|7355|(195,)|const|float32
const_7356 = relay.const(-1, dtype = "uint64")#candidate|7356|()|const|uint64
var_7357 = relay.var("var_7357", dtype = "uint64", shape = (225,))#candidate|7357|(225,)|var|uint64
call_7354 = relay.TupleGetItem(func_6923_call(relay.reshape(const_7355.astype('float32'), [13, 15, 1]), relay.reshape(const_7356.astype('uint64'), []), relay.reshape(var_7357.astype('uint64'), [25, 9]), ), 0)
call_7358 = relay.TupleGetItem(func_6927_call(relay.reshape(const_7355.astype('float32'), [13, 15, 1]), relay.reshape(const_7356.astype('uint64'), []), relay.reshape(var_7357.astype('uint64'), [25, 9]), ), 0)
output = relay.Tuple([uop_7352,call_7354,const_7355,const_7356,var_7357,])
output2 = relay.Tuple([uop_7352,call_7358,const_7355,const_7356,var_7357,])
func_7362 = relay.Function([var_7351,var_7357,], output)
mod['func_7362'] = func_7362
mod = relay.transform.InferType()(mod)
mutated_mod['func_7362'] = func_7362
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7362_call = mutated_mod.get_global_var('func_7362')
var_7364 = relay.var("var_7364", dtype = "float32", shape = (8, 14, 13))#candidate|7364|(8, 14, 13)|var|float32
var_7365 = relay.var("var_7365", dtype = "uint64", shape = (225,))#candidate|7365|(225,)|var|uint64
call_7363 = func_7362_call(var_7364,var_7365,)
output = call_7363
func_7366 = relay.Function([var_7364,var_7365,], output)
mutated_mod['func_7366'] = func_7366
mutated_mod = relay.transform.InferType()(mutated_mod)
var_7507 = relay.var("var_7507", dtype = "int64", shape = (12, 11, 9))#candidate|7507|(12, 11, 9)|var|int64
var_7508 = relay.var("var_7508", dtype = "int64", shape = (12, 11, 9))#candidate|7508|(12, 11, 9)|var|int64
bop_7509 = relay.bitwise_and(var_7507.astype('int64'), relay.reshape(var_7508.astype('int64'), relay.shape_of(var_7507))) # shape=(12, 11, 9)
output = relay.Tuple([bop_7509,])
output2 = relay.Tuple([bop_7509,])
func_7512 = relay.Function([var_7507,var_7508,], output)
mod['func_7512'] = func_7512
mod = relay.transform.InferType()(mod)
var_7513 = relay.var("var_7513", dtype = "int64", shape = (12, 11, 9))#candidate|7513|(12, 11, 9)|var|int64
var_7514 = relay.var("var_7514", dtype = "int64", shape = (12, 11, 9))#candidate|7514|(12, 11, 9)|var|int64
output = func_7512(var_7513,var_7514,)
func_7515 = relay.Function([var_7513,var_7514,], output)
mutated_mod['func_7515'] = func_7515
mutated_mod = relay.transform.InferType()(mutated_mod)
var_7612 = relay.var("var_7612", dtype = "float64", shape = (9, 3, 6))#candidate|7612|(9, 3, 6)|var|float64
uop_7613 = relay.log(var_7612.astype('float64')) # shape=(9, 3, 6)
output = relay.Tuple([uop_7613,])
output2 = relay.Tuple([uop_7613,])
func_7620 = relay.Function([var_7612,], output)
mod['func_7620'] = func_7620
mod = relay.transform.InferType()(mod)
var_7621 = relay.var("var_7621", dtype = "float64", shape = (9, 3, 6))#candidate|7621|(9, 3, 6)|var|float64
output = func_7620(var_7621)
func_7622 = relay.Function([var_7621], output)
mutated_mod['func_7622'] = func_7622
mutated_mod = relay.transform.InferType()(mutated_mod)
var_7801 = relay.var("var_7801", dtype = "uint8", shape = (1, 8, 12))#candidate|7801|(1, 8, 12)|var|uint8
const_7802 = relay.const([[[-9,3,1,10,-6,-2,9,3,9,-5,4,9],[4,-2,9,6,-2,-1,-5,-8,2,-1,10,-5],[1,-1,9,9,-7,10,2,6,-3,8,8,8],[-8,2,-4,-8,-6,8,-8,-7,-7,10,2,-5],[3,-4,1,-10,2,6,7,-1,-2,8,-5,2],[-3,3,-10,-10,-2,-3,-8,-2,3,8,-2,2],[-5,2,7,-2,-10,-4,3,-3,-10,-10,7,1],[-9,-1,8,-7,-6,-3,-4,-1,-1,-5,1,-1]]], dtype = "uint8")#candidate|7802|(1, 8, 12)|const|uint8
bop_7803 = relay.not_equal(var_7801.astype('bool'), relay.reshape(const_7802.astype('bool'), relay.shape_of(var_7801))) # shape=(1, 8, 12)
output = relay.Tuple([bop_7803,])
output2 = relay.Tuple([bop_7803,])
func_7812 = relay.Function([var_7801,], output)
mod['func_7812'] = func_7812
mod = relay.transform.InferType()(mod)
var_7813 = relay.var("var_7813", dtype = "uint8", shape = (1, 8, 12))#candidate|7813|(1, 8, 12)|var|uint8
output = func_7812(var_7813)
func_7814 = relay.Function([var_7813], output)
mutated_mod['func_7814'] = func_7814
mutated_mod = relay.transform.InferType()(mutated_mod)
var_7975 = relay.var("var_7975", dtype = "float64", shape = (6, 3, 7))#candidate|7975|(6, 3, 7)|var|float64
uop_7976 = relay.log(var_7975.astype('float64')) # shape=(6, 3, 7)
bop_7981 = relay.bitwise_and(var_7975.astype('uint64'), relay.reshape(uop_7976.astype('uint64'), relay.shape_of(var_7975))) # shape=(6, 3, 7)
output = bop_7981
output2 = bop_7981
func_7984 = relay.Function([var_7975,], output)
mod['func_7984'] = func_7984
mod = relay.transform.InferType()(mod)
mutated_mod['func_7984'] = func_7984
mutated_mod = relay.transform.InferType()(mutated_mod)
var_7985 = relay.var("var_7985", dtype = "float64", shape = (6, 3, 7))#candidate|7985|(6, 3, 7)|var|float64
func_7984_call = mutated_mod.get_global_var('func_7984')
call_7986 = func_7984_call(var_7985)
output = call_7986
func_7987 = relay.Function([var_7985], output)
mutated_mod['func_7987'] = func_7987
mutated_mod = relay.transform.InferType()(mutated_mod)
var_8565 = relay.var("var_8565", dtype = "int16", shape = (4, 11, 8))#candidate|8565|(4, 11, 8)|var|int16
var_8566 = relay.var("var_8566", dtype = "int16", shape = (4, 11, 8))#candidate|8566|(4, 11, 8)|var|int16
bop_8567 = relay.bitwise_or(var_8565.astype('int16'), relay.reshape(var_8566.astype('int16'), relay.shape_of(var_8565))) # shape=(4, 11, 8)
output = bop_8567
output2 = bop_8567
func_8588 = relay.Function([var_8565,var_8566,], output)
mod['func_8588'] = func_8588
mod = relay.transform.InferType()(mod)
var_8589 = relay.var("var_8589", dtype = "int16", shape = (4, 11, 8))#candidate|8589|(4, 11, 8)|var|int16
var_8590 = relay.var("var_8590", dtype = "int16", shape = (4, 11, 8))#candidate|8590|(4, 11, 8)|var|int16
output = func_8588(var_8589,var_8590,)
func_8591 = relay.Function([var_8589,var_8590,], output)
mutated_mod['func_8591'] = func_8591
mutated_mod = relay.transform.InferType()(mutated_mod)
var_8894 = relay.var("var_8894", dtype = "int8", shape = (4, 14, 16))#candidate|8894|(4, 14, 16)|var|int8
var_8895 = relay.var("var_8895", dtype = "int8", shape = (4, 14, 16))#candidate|8895|(4, 14, 16)|var|int8
bop_8896 = relay.bitwise_and(var_8894.astype('int8'), relay.reshape(var_8895.astype('int8'), relay.shape_of(var_8894))) # shape=(4, 14, 16)
func_924_call = mod.get_global_var('func_924')
func_927_call = mutated_mod.get_global_var('func_927')
var_8918 = relay.var("var_8918", dtype = "float64", shape = (1680,))#candidate|8918|(1680,)|var|float64
call_8917 = func_924_call(relay.reshape(var_8918.astype('float64'), [16, 15, 7]))
call_8919 = func_924_call(relay.reshape(var_8918.astype('float64'), [16, 15, 7]))
output = relay.Tuple([bop_8896,call_8917,var_8918,])
output2 = relay.Tuple([bop_8896,call_8919,var_8918,])
func_8937 = relay.Function([var_8894,var_8895,var_8918,], output)
mod['func_8937'] = func_8937
mod = relay.transform.InferType()(mod)
var_8938 = relay.var("var_8938", dtype = "int8", shape = (4, 14, 16))#candidate|8938|(4, 14, 16)|var|int8
var_8939 = relay.var("var_8939", dtype = "int8", shape = (4, 14, 16))#candidate|8939|(4, 14, 16)|var|int8
var_8940 = relay.var("var_8940", dtype = "float64", shape = (1680,))#candidate|8940|(1680,)|var|float64
output = func_8937(var_8938,var_8939,var_8940,)
func_8941 = relay.Function([var_8938,var_8939,var_8940,], output)
mutated_mod['func_8941'] = func_8941
mutated_mod = relay.transform.InferType()(mutated_mod)
var_10100 = relay.var("var_10100", dtype = "float32", shape = (5, 15, 8))#candidate|10100|(5, 15, 8)|var|float32
uop_10101 = relay.atanh(var_10100.astype('float32')) # shape=(5, 15, 8)
uop_10103 = relay.acosh(uop_10101.astype('float32')) # shape=(5, 15, 8)
func_5626_call = mod.get_global_var('func_5626')
func_5632_call = mutated_mod.get_global_var('func_5632')
var_10119 = relay.var("var_10119", dtype = "int32", shape = ())#candidate|10119|()|var|int32
const_10120 = relay.const([2,-10,6,-3,4,8,-4,1,7,-3,3,-6,-2,-3,7,3,-7,-2,-8,-7,6,4,-8,-8,-9,7,-2,4,-7,-9,2,-6,4,-9,4,3,-1,-2,2,-5,-10,2,5,-8,-4,9,-8,2,-2,4,-6,9,-6,8,10,8,6,-4,7,-3,8,6,6,9,8,5,-2,3,7,5,-7,-9,-4,-3,-4,1,-10,-7,-4,6,2,10,-8,-4], dtype = "int8")#candidate|10120|(84,)|const|int8
var_10121 = relay.var("var_10121", dtype = "bool", shape = (30,))#candidate|10121|(30,)|var|bool
var_10122 = relay.var("var_10122", dtype = "float64", shape = (80,))#candidate|10122|(80,)|var|float64
var_10123 = relay.var("var_10123", dtype = "int64", shape = (1232,))#candidate|10123|(1232,)|var|int64
call_10118 = relay.TupleGetItem(func_5626_call(relay.reshape(var_10119.astype('int32'), []), relay.reshape(const_10120.astype('int8'), [84,]), relay.reshape(var_10121.astype('bool'), [30,]), relay.reshape(var_10122.astype('float64'), [1, 80]), relay.reshape(var_10123.astype('int64'), [1232,]), ), 6)
call_10124 = relay.TupleGetItem(func_5632_call(relay.reshape(var_10119.astype('int32'), []), relay.reshape(const_10120.astype('int8'), [84,]), relay.reshape(var_10121.astype('bool'), [30,]), relay.reshape(var_10122.astype('float64'), [1, 80]), relay.reshape(var_10123.astype('int64'), [1232,]), ), 6)
output = relay.Tuple([uop_10103,call_10118,var_10119,const_10120,var_10121,var_10122,var_10123,])
output2 = relay.Tuple([uop_10103,call_10124,var_10119,const_10120,var_10121,var_10122,var_10123,])
func_10128 = relay.Function([var_10100,var_10119,var_10121,var_10122,var_10123,], output)
mod['func_10128'] = func_10128
mod = relay.transform.InferType()(mod)
var_10129 = relay.var("var_10129", dtype = "float32", shape = (5, 15, 8))#candidate|10129|(5, 15, 8)|var|float32
var_10130 = relay.var("var_10130", dtype = "int32", shape = ())#candidate|10130|()|var|int32
var_10131 = relay.var("var_10131", dtype = "bool", shape = (30,))#candidate|10131|(30,)|var|bool
var_10132 = relay.var("var_10132", dtype = "float64", shape = (80,))#candidate|10132|(80,)|var|float64
var_10133 = relay.var("var_10133", dtype = "int64", shape = (1232,))#candidate|10133|(1232,)|var|int64
output = func_10128(var_10129,var_10130,var_10131,var_10132,var_10133,)
func_10134 = relay.Function([var_10129,var_10130,var_10131,var_10132,var_10133,], output)
mutated_mod['func_10134'] = func_10134
mutated_mod = relay.transform.InferType()(mutated_mod)
var_10196 = relay.var("var_10196", dtype = "int64", shape = ())#candidate|10196|()|var|int64
var_10197 = relay.var("var_10197", dtype = "int64", shape = (3, 15, 13))#candidate|10197|(3, 15, 13)|var|int64
bop_10198 = relay.right_shift(var_10196.astype('int64'), var_10197.astype('int64')) # shape=(3, 15, 13)
func_6688_call = mod.get_global_var('func_6688')
func_6696_call = mutated_mod.get_global_var('func_6696')
var_10203 = relay.var("var_10203", dtype = "float64", shape = (1024,))#candidate|10203|(1024,)|var|float64
const_10204 = relay.const([-8,-7,-5,7,-6,-9,-5,-8,10,8,8,8,-7,-4,-5,-8,-1,-9,-3,-4,-7,7,-2,4,7,-5,4,-10,2,-6,8,2,-10,-6,9,2,-2,8,6,-4,-4,9,-4,-10,2,5,-1,-1,-10,-4,6,-5,-6,10,4,4,-5,-7,3,-5,-5,-7,9,-7,-5,-8,-6,-9,7,-2,-5,9,1,-1,7,-9,8,9,4,-4,7,-9,-6,-3,10,-4,-6,-9,10,3,-5,10,-10,9,-4,-2,9,-4,-2,8,6,8,-4,9,4,1,-6,-3,9,10,-6,-4,8,10,7,-1,-7,-3,6,4], dtype = "int8")#candidate|10204|(120,)|const|int8
const_10205 = relay.const([1,6,8,7,9,-2,10,3,9,7,10,-1,-4,-8,8,6,7,-3,-9,4,-6,3,8,6,-5,-7,7,-2,6,-1,-5,4,-9,8,-9,-8,-3,-1,-8,-6,9,9,-3,7,3,2,7,10,4,3,-4,-10,-3,-6,7,-3,-7,-2,-5,10,1,4,9,-3,5,8,-7,4,9,-1,4,-5,-6,3,-8,-7,-8,-6,-8,2,4,-1,-6,3,9,-2,-7,5,-3,-5,5,1,-5,-10,5,4,-10,2,-4,-1,-8,7,9,-9,4,5,-5,1,-5,-3,-3,-2,6,10,1,-4,-6,4,-4,-10,-6,6,-5,-3,9,3,-7,-6,-10,-4,8,10,8,9,-7,-8,6,-6,4,1,5,7,10,-6,10,1,-5,-1,-7,5,-1,-6,-1,-8,-2,-10,5,-1,-3,-7,-5,10,-1,7,3,-1,6,-3,-2,4,2,-10,-3,1,-8,-6,7,6,-9,6,-4,-8,6,9,-2,9,9,10,2,6,10,-4,-10,-6,1,4,-9,-8,-4,3,2,-2,3,4,3,-5,2,1,2,-4,1,10,10,5,7,-10,1,-1,-3,-10,-5,-1,-6,10,2,-1,-1,3,9,5,-7,6,-6,2,1,8,-9,-4,3,-3,9,-10,-6,-2,-2,-10,2,8,-4,9,-4,-1,8,-8,-9,-8,4,9,-2,5,-7,-4,3,-9,6,-2,7,-1,-9,7,-9,-8,-2,5,7,-9,-6,-3,7,-6,2,-3,-1,3,5,-10,7,-9,3,3,3,6,7,8,5,-6,4,-5,6,-5,-10,-9,-2,-5,4,9,-2,-9,-6,2,3,-8,9,-1,1,-10,-2,-9,-7,1,4,9,5,-4,4,-2,-6,-3,-4,-2,2,-8,-10,9,1,7,10,-1,3,-3,1,-4,-8,2,1,6,5,-8,-3,10,-6,9,-4,-10,4,-4,1,-10,2,8,5,7,-10,-4,-1,-4,5,5,-4,8,8,-4,7,5,-7,5,9,-1,6,-9,-4,-5,8,8,-7,-1,6,4,-9,-7,4,-8,3,-1,7,-5,6,-9,2,-10,4,3,-7,7,8,4,-5,6,-4,-6,-10,1,1,-2,-9,-1,4,-5,1,-8,-6,-2,5,-9,-6,1,6,-9,3,-1,4,5,5,8,2,8,8,-10,-7,-3,4,6,5,-8,-9,-9,10,-10,4,5,-3,5,-3,6,6,3,-1,-1,-6,-5,7,-9,-7,-1,6,10,-9,3,-10,1,8,5,3,-8,-4,-4,-6,-7,2,8,6,-9,3,-8,-1,-10,-3,8,2,4,8,6,-1,-7,-2,8,2,-2,9,7,-1,9,-1,-1,-5,-10,3,5,8,-4,8,8,-1,-3,2,-2,-7,8,-10,-1,-4,-7,7,-10,3,-7,7,-1,6,1,-1,3,-4,6,-10,10,-9,10,7,3,3,3,5,-8,-5,9,2,6,4,1,-2,-9,-5,9,10,-6,-1,-3,-2,-7,10,4,1,7,5,-1,-8,-8,-1,7,-10,-6,-1,-9,-10,9,-4,3,7,1,9,-9,-2,1,7,-7,-10,-9,-2,3,5,-3,9,2,-7,7,5,-2,-6,-2,-9,-1,-2,10,-9,7,7,2,-5,1,9,7,-8,1,-9,9,4,9,-8,-1,3,10,-7,7,7,3,8,10,-8,-9,5,-7,6,4,-6,-1,-2,-1,3,10,-6,6,2,7,8,-7,4,2,9,-3,1,-5,7,2,4,10,5,-3,5,-9,7,-5,-9,10,3,2,-1,8,3,-6,2,-8,-3,5,2,-10,-1,10,2,-9,-5,-2,10,-4,8,1,-5,8,-1,-7,-9,3,-2,2,-3,2,4,6,-1,-8,-10,10,9,5,-1,6,-1,-1,-10,-8,6,4,-3,-5,-1,-5,1,6,3,3,-6,-5,-5,-10,3,-1,8,-10,-4,-5,-7,5,6,-1,3,-3,4,3,-8,6,1,-2,-3,-9,-9,-1,3,-8,7,7,5,8,10,1,-4,-1,4,-1,-10,-5,5,9,4,-6,-9,1,-3,-5,8,-2,3,-7,-1,-6,-1,9,-7,-3,-8,-9,1,2,9,-8,-3,1,-6,-3,-9,7,7,7,6,4,8,-10,-3,7,-10,-9,7,-9,8,-1,10,-8,-6,3,-2,8,10,3,2,5,4,5,4,4,5,-9,-3,-3,2,1,-3,-8,-8,-4,10,2,-3,-5,2,-9,5,1,-6,7,2,-4,8,8,2,6,-3,-5,-7,3,10,-6,1,2,-6,5,-6,3,-10,8,4,3,-4,6,-9,-1,-1,3,-6,9,-2,10,-3,10,5,-3,-5,8,5,3,5,2,-2,-7,-9,-10,1,9,-4,-5,-10,-10,7,4,-4,-7,-10,-4,-3,3,-7,5,5,-2,-2,8,7,6,-7,-7,7,7,-2,-4,-2,-9,1,9,-7,-7,-9,-2,4,-4,10,2,-3,9,-2,2,-9,4,-4,-8,-5,-1,-1,-5,-1,-5,-8,10,-10,9,-1,5,-2,2,4,-9,6,-5,5,1,7,-8,-7,-8,-7,-6,-8,10,1,-9,3,-4,-10,-5,9,10,6,-10,-6,7,-7,-4,5,6,6,-1,-3,-10,-5,7,-3,-1,7,-9,2,-8,10,-4,6,10,-3,-2,9,-1,-7,10,7,8,-3,-9,-2,3,-1,-8,5,10,1,8,4,-6,-10,-2,8,-3,6,5,10,-1,-5,9,-6,-9,3,-9,-7,-9,-1,-3,10,9,9,5,4,-4,4,8,-4,-9,6,-3,2,9,-2,2,8,7,7,-1,-7,-9,-8,-1,6,7,-7,-5,2,-2,-6,-8,6,-4,-7,-4,-7,5,10,6,-7,7,5,3,-6,4,9,-4,7,-8,2,1,4,5,-2,-7,-5,-3,8,6,2,4,3,-6,8,7,7,9,1,-3,-6,4,-9,-10,4,9,-7,7,10,10,-9,-10,-2,8,-5,-8,5,2,10,9,7,10,-10,4,10,10,1,-8,10,-8,-10,8,10,-7,10,-6,5,-1,-5,-5,-10,-6,8,8,1,5,-4,-7,10,7,-2,-9,1,10,-6,2,-3,-9,-2,6,-2,-5,3,3,5,-5,6,-4,3,-4,-10,-5,3,-1,-2,2,-10,-2,-8,8,8,-4,5,-1,1,-7,10,-5,9,-9,5,-7,-8,-7,4,4,7,6,6,-2,1,-10,-3,-5,1,3,5,10,-9,-4,4,-6,-7,-5,-8,-2,8,1,8,-6,-9,-6,1,2,5,-4,3,10,-2,3,-3,10,-8,3,-6,5,-7,2,9,7,-9,2,1,-3,6,3,-2,1,4,8,-4,-9,-5,1,4,-7,9,8,9,10,-9,7,6,3,-3,-3,-3,-9,3,2,8,-2,-7,6,2,-5,9,-4,3,4,-8,4,9,-2,3,-10,3,7,-2,10,-7,5,-9,10,6,-10,2,10,7,-2,7,-9,-3,4,7,9,1,1,-3,-1,-6,-5,-5,10,8,2,5,10,8,-5,-8,-3,8,-8,-5,-2,-2,-9,-4,10,-4,-9,-2,7,3,-8,-6,-9,-3,5,-7,-10,4,7,10,-1,-8,3,9,3,-4,2,-10,-2,9,-4,4,7,-3,5,-2,10,-9,3,5,-10,6,8,-5,10,10,10,8,-2,-2,8,5,3,5,2,1,-10,5,3,-8,6,9,-10,5,-1,10,10,-9,9,-10,-3,-2,8,-1,-1,-5,5,-7,4,8,9,-5,3,-2,10,-3,3,-8,-7,3,7,7,2,8,3,1,6,-9,-2,5,-4,-6,4,-9,10,8,-10,1,6,9,-7,-1,6,6,-4,-1,9,-7,-1,5,10,1,8,-1,-1,-6,-1,-3,-1,-7,2,-5,-7,-4,-1,-10,-2,-9,2,7,-10,-4,-3,8,-8,1,4,10,8,-10,3,-10,-2,7,10,-7,-10,3,-10,7,5,7,-2,3,-1,1,-2,8,3,-5,-1,5,-5,-5,7,-2,-8,6,-8,-3,9,-10,6,-4,-7,-2,-3,-2,-3,-5,8,7,-10,9,-1,4,4,-10,6,-9,-4,1,-8,-8,-9,3,4,-5,-4,-10,-5,-4,2,3,-9,9,3,-1,-7,4,-3,5,-9,-2,5,8,10,-2,8,-8,-6,-10,-1,2,1], dtype = "int8")#candidate|10205|(1560,)|const|int8
var_10206 = relay.var("var_10206", dtype = "int64", shape = (1, 1232))#candidate|10206|(1, 1232)|var|int64
call_10202 = relay.TupleGetItem(func_6688_call(relay.reshape(var_10203.astype('float64'), [8, 8, 16]), relay.reshape(const_10204.astype('int8'), [120,]), relay.reshape(const_10205.astype('int8'), [6, 260]), relay.reshape(var_10196.astype('int64'), []), relay.reshape(var_10206.astype('int64'), [56, 22]), relay.reshape(var_10203.astype('float64'), [8, 8, 16]), ), 5)
call_10207 = relay.TupleGetItem(func_6696_call(relay.reshape(var_10203.astype('float64'), [8, 8, 16]), relay.reshape(const_10204.astype('int8'), [120,]), relay.reshape(const_10205.astype('int8'), [6, 260]), relay.reshape(var_10196.astype('int64'), []), relay.reshape(var_10206.astype('int64'), [56, 22]), relay.reshape(var_10203.astype('float64'), [8, 8, 16]), ), 5)
func_6548_call = mod.get_global_var('func_6548')
func_6556_call = mutated_mod.get_global_var('func_6556')
const_10221 = relay.const([[-2.416985,-9.486967,1.464643,-4.589785,8.539283,-7.473777,8.887873,-1.013936,-3.708212,-2.360425,-4.202553,6.256378,-8.952722,8.494290,0.315308,6.166847,2.154787,-8.696082,5.669285,8.680339,1.955261,-9.164835,-2.616898,6.753965,-9.132901,9.434839,-0.791677,1.026320,3.720303,-2.892213,-9.693781,-2.509572,4.690182,-9.910162,-3.898036,-6.108087,6.133743,-9.253034,0.150253,-7.356912,-9.622820,-7.394320],[-7.870082,6.571808,-9.426805,8.287601,6.358118,-5.088456,-8.410507,-1.051765,6.064934,0.574663,1.266860,-5.963975,6.547937,-3.150008,-3.700928,4.996989,2.196136,-7.821782,-9.771260,-1.635728,-9.226443,-8.240115,4.380270,2.421932,0.455322,5.386726,-4.454028,-9.095718,8.815786,8.629351,5.639399,-7.009122,-1.468357,6.365345,-8.523499,-0.806466,-8.227595,-5.957284,7.593074,-0.309033,-5.442518,3.585738],[0.398382,-5.236870,0.072053,-6.368472,-5.944394,4.967016,-6.933500,0.934392,-1.915137,4.290255,0.662912,-7.189776,1.092932,1.621786,-8.263746,-0.398339,-4.336107,-9.879371,9.912099,8.759461,-6.948452,-6.309036,4.498994,5.228147,1.864301,-8.631142,-2.831520,-0.432571,-7.994886,5.008231,-5.769321,-9.007145,6.039495,-3.545952,-8.237375,-6.772040,-6.109830,7.299130,1.303751,6.983448,4.499728,6.083379],[-7.112434,5.605782,1.987854,-6.542235,-6.505266,5.261045,4.134805,-1.132015,9.936502,-9.273692,7.303975,1.671798,3.118866,-9.892079,-7.744637,-5.455488,5.154222,3.849966,8.631840,-7.032819,7.997605,8.067024,-6.997238,-0.118443,-4.928510,5.423616,-1.386899,-4.522498,-0.489155,-8.099466,-4.828986,7.998538,-0.188936,7.016686,-9.371987,6.788034,7.566321,5.438020,9.675078,9.709149,-6.261511,6.867818],[9.892337,-4.448800,-7.447612,-4.990427,-0.886248,-4.947620,3.319655,-8.965053,-0.560522,3.604408,-9.288064,9.736108,-2.036110,3.646449,2.232991,7.357268,0.868424,-0.701222,-5.353613,-2.379448,3.639983,5.216697,-6.006693,-7.394007,4.283484,-4.236891,-6.582559,5.469734,-4.891797,-1.855807,-2.166168,-8.972940,3.895231,7.193255,-0.242940,-5.773464,5.648761,-6.118754,3.396717,-1.044598,-7.610372,-4.534107]], dtype = "float64")#candidate|10221|(5, 42)|const|float64
var_10222 = relay.var("var_10222", dtype = "float64", shape = (600,))#candidate|10222|(600,)|var|float64
var_10223 = relay.var("var_10223", dtype = "float64", shape = (1680,))#candidate|10223|(1680,)|var|float64
call_10220 = relay.TupleGetItem(func_6548_call(relay.reshape(const_10221.astype('float64'), [6, 5, 7]), relay.reshape(var_10222.astype('float64'), [600,]), relay.reshape(call_10202.astype('int8'), [42, 2]), relay.reshape(var_10223.astype('float64'), [840, 2]), relay.reshape(const_10205.astype('int8'), [1560,]), relay.reshape(var_10196.astype('int64'), []), relay.reshape(var_10206.astype('int64'), [1232,]), ), 15)
call_10224 = relay.TupleGetItem(func_6556_call(relay.reshape(const_10221.astype('float64'), [6, 5, 7]), relay.reshape(var_10222.astype('float64'), [600,]), relay.reshape(call_10202.astype('int8'), [42, 2]), relay.reshape(var_10223.astype('float64'), [840, 2]), relay.reshape(const_10205.astype('int8'), [1560,]), relay.reshape(var_10196.astype('int64'), []), relay.reshape(var_10206.astype('int64'), [1232,]), ), 15)
bop_10244 = relay.divide(const_10221.astype('float64'), var_10196.astype('float64')) # shape=(5, 42)
uop_10247 = relay.acos(var_10223.astype('float32')) # shape=(1680,)
output = relay.Tuple([bop_10198,call_10202,var_10203,const_10204,const_10205,var_10206,call_10220,var_10222,bop_10244,uop_10247,])
output2 = relay.Tuple([bop_10198,call_10207,var_10203,const_10204,const_10205,var_10206,call_10224,var_10222,bop_10244,uop_10247,])
func_10257 = relay.Function([var_10196,var_10197,var_10203,var_10206,var_10222,var_10223,], output)
mod['func_10257'] = func_10257
mod = relay.transform.InferType()(mod)
var_10258 = relay.var("var_10258", dtype = "int64", shape = ())#candidate|10258|()|var|int64
var_10259 = relay.var("var_10259", dtype = "int64", shape = (3, 15, 13))#candidate|10259|(3, 15, 13)|var|int64
var_10260 = relay.var("var_10260", dtype = "float64", shape = (1024,))#candidate|10260|(1024,)|var|float64
var_10261 = relay.var("var_10261", dtype = "int64", shape = (1, 1232))#candidate|10261|(1, 1232)|var|int64
var_10262 = relay.var("var_10262", dtype = "float64", shape = (600,))#candidate|10262|(600,)|var|float64
var_10263 = relay.var("var_10263", dtype = "float64", shape = (1680,))#candidate|10263|(1680,)|var|float64
output = func_10257(var_10258,var_10259,var_10260,var_10261,var_10262,var_10263,)
func_10264 = relay.Function([var_10258,var_10259,var_10260,var_10261,var_10262,var_10263,], output)
mutated_mod['func_10264'] = func_10264
mutated_mod = relay.transform.InferType()(mutated_mod)
var_10461 = relay.var("var_10461", dtype = "float32", shape = (16, 15, 6))#candidate|10461|(16, 15, 6)|var|float32
uop_10462 = relay.atan(var_10461.astype('float32')) # shape=(16, 15, 6)
output = relay.Tuple([uop_10462,])
output2 = relay.Tuple([uop_10462,])
func_10464 = relay.Function([var_10461,], output)
mod['func_10464'] = func_10464
mod = relay.transform.InferType()(mod)
mutated_mod['func_10464'] = func_10464
mutated_mod = relay.transform.InferType()(mutated_mod)
var_10465 = relay.var("var_10465", dtype = "float32", shape = (16, 15, 6))#candidate|10465|(16, 15, 6)|var|float32
func_10464_call = mutated_mod.get_global_var('func_10464')
call_10466 = func_10464_call(var_10465)
output = call_10466
func_10467 = relay.Function([var_10465], output)
mutated_mod['func_10467'] = func_10467
mutated_mod = relay.transform.InferType()(mutated_mod)
var_11138 = relay.var("var_11138", dtype = "bool", shape = (6, 5, 1))#candidate|11138|(6, 5, 1)|var|bool
var_11139 = relay.var("var_11139", dtype = "bool", shape = (6, 5, 9))#candidate|11139|(6, 5, 9)|var|bool
bop_11140 = relay.logical_and(var_11138.astype('bool'), var_11139.astype('bool')) # shape=(6, 5, 9)
func_2137_call = mod.get_global_var('func_2137')
func_2140_call = mutated_mod.get_global_var('func_2140')
const_11156 = relay.const([False,False,True,True,True,True,False,True,True,False,False,True,True,True,True,False,False,False,False,True,True,True,True,False,False,True,False,False,False,False,True,False,True,False,False,False,False,False,True,True,False,False,False,True,True,False,True,False,False,True,True,True,True,False,True,True,True,True,True,True,False,False,False,True,True,False,True,True,False,False,False,True,False,False,False,False,False,False,False,False,True,True,False,False,True,True,True,False,True,True,True,True,True,True,False,False,True,True,True,False,True,True,True,False,False,True,False,False,True,False,True,True,True,True,True,False,False,True,False,True,False,True,False,True,True,False,False,False,True,True,False,True,True,True,True,True,True,True,True,False,True,False,True,False,True,True,False,False,False,False,True,False,True,False,True,False,False,True,True,False,True,True,True,False,True,False,True,False,True,False,False,False,True,False,False,False,True,False,False,True,False,False,True,True,False,False,False,False,False,True,False,True,False,True,True,True,True,False,True,False,False,False,False,True,False,False,False,True,False,False,False,False,False,True,False,False,True,False,True,True,True,True,False,True,True,True,True,False,True,False,True,False,False,True,True,False,False,True,True,False,False,True,True,False,False,True,True,False,True,False,True,False,True,False,True,False,True,False,True,True,True,False,True,True,True,False,False,True,False,True,False,False,True,True,False,True,False,True,True,True,True,True,True,True,True,False,True,False,True,False,True,False,False,False,True,False,True,True,True,True,True,True,True,False,False,True,True,False,True,True,True,False,False,False,True,True,True,True,True,False,True,True,False,False,True,True,False,False,True,True,True,False,True,False,False,True,False,True,False,True,False,True,True,False,False,True,True,True,False,True,True,True,False,True,True,True,False,True,False,True,True,True,True,False,False,True,True,False,True,True,True,True,True,False,False,True,True,True,False,True,False,True,True,False,False,False,False,False,False,False,False,True,True,True,True,True,True,False,True,False,False,False,True,True,True,True,False,False,True,False,False,True,True,True,False,True,True,False,True,True], dtype = "bool")#candidate|11156|(420,)|const|bool
call_11155 = relay.TupleGetItem(func_2137_call(relay.reshape(var_11138.astype('bool'), [1, 5, 6]), relay.reshape(const_11156.astype('bool'), [14, 5, 6]), ), 0)
call_11157 = relay.TupleGetItem(func_2140_call(relay.reshape(var_11138.astype('bool'), [1, 5, 6]), relay.reshape(const_11156.astype('bool'), [14, 5, 6]), ), 0)
output = relay.Tuple([bop_11140,call_11155,const_11156,])
output2 = relay.Tuple([bop_11140,call_11157,const_11156,])
func_11164 = relay.Function([var_11138,var_11139,], output)
mod['func_11164'] = func_11164
mod = relay.transform.InferType()(mod)
var_11165 = relay.var("var_11165", dtype = "bool", shape = (6, 5, 1))#candidate|11165|(6, 5, 1)|var|bool
var_11166 = relay.var("var_11166", dtype = "bool", shape = (6, 5, 9))#candidate|11166|(6, 5, 9)|var|bool
output = func_11164(var_11165,var_11166,)
func_11167 = relay.Function([var_11165,var_11166,], output)
mutated_mod['func_11167'] = func_11167
mutated_mod = relay.transform.InferType()(mutated_mod)
const_11506 = relay.const([[[-1.518707],[3.948412],[-3.798771],[-8.459395],[9.777666],[1.292589],[-0.590143],[-1.530284],[-0.883141],[-5.955385],[1.965959],[0.943811],[-6.466579]],[[1.000597],[3.557557],[7.382293],[-4.809231],[-4.812772],[-3.657118],[0.193862],[3.773243],[8.868680],[3.896568],[-8.803786],[8.475683],[8.340793]],[[-3.624463],[-1.695837],[1.148958],[-2.379101],[-3.561038],[-0.576472],[-0.279688],[2.400368],[-3.506306],[-4.330393],[1.868910],[6.574943],[-4.151852]],[[9.258566],[-6.569574],[-4.778703],[3.186239],[-7.215300],[-8.958232],[0.258250],[-4.897129],[4.029809],[-5.611312],[1.562444],[9.060963],[4.544426]],[[7.712653],[8.436042],[-8.573322],[6.433416],[5.871022],[8.945787],[-0.289360],[3.516735],[-1.624938],[2.150953],[-6.182569],[-4.673813],[-7.741784]],[[4.087468],[5.981228],[-5.842373],[4.747738],[-7.213624],[-9.129144],[6.619211],[7.272531],[8.667611],[-6.348350],[-2.858636],[5.422189],[8.269434]],[[-6.950434],[6.512803],[8.210925],[-0.955717],[4.726549],[-1.165960],[-9.543444],[-8.974213],[-1.004398],[-4.246187],[6.380838],[-7.423827],[-8.720910]],[[-7.389678],[-0.354566],[-7.529471],[8.399638],[6.235156],[-4.759349],[-7.602986],[5.923542],[2.801073],[7.873055],[-2.663523],[6.284382],[-9.494303]]], dtype = "float64")#candidate|11506|(8, 13, 1)|const|float64
uop_11507 = relay.sin(const_11506.astype('float64')) # shape=(8, 13, 1)
output = uop_11507
output2 = uop_11507
func_11514 = relay.Function([], output)
mod['func_11514'] = func_11514
mod = relay.transform.InferType()(mod)
output = func_11514()
func_11515 = relay.Function([], output)
mutated_mod['func_11515'] = func_11515
mutated_mod = relay.transform.InferType()(mutated_mod)
func_11514_call = mod.get_global_var('func_11514')
func_11515_call = mutated_mod.get_global_var('func_11515')
call_11527 = func_11514_call()
call_11528 = func_11514_call()
output = relay.Tuple([call_11527,])
output2 = relay.Tuple([call_11528,])
func_11553 = relay.Function([], output)
mod['func_11553'] = func_11553
mod = relay.transform.InferType()(mod)
output = func_11553()
func_11554 = relay.Function([], output)
mutated_mod['func_11554'] = func_11554
mutated_mod = relay.transform.InferType()(mutated_mod)
func_11514_call = mod.get_global_var('func_11514')
func_11515_call = mutated_mod.get_global_var('func_11515')
call_11643 = func_11514_call()
call_11644 = func_11514_call()
func_3207_call = mod.get_global_var('func_3207')
func_3211_call = mutated_mod.get_global_var('func_3211')
var_11653 = relay.var("var_11653", dtype = "bool", shape = (84,))#candidate|11653|(84,)|var|bool
const_11654 = relay.const([True,True,False,True,False,True,False,True,False,False,False,True,False,False,False,False,True,False,False,False,True,False,False,True,True,False,True,False,False,True,False,True,False,True,True,True,False,True,False,True,True,False,False,True,False,False,False,True,True,False,False,False,False,False,False,False,False,True,False,False,False,True,True,True,False,False,False,False,True,False,True,False,False,False,False,True,False,False,False,True,False,False,False,True,False,False,True,False,True,True,False,True,False,False,False,False,False,False,True,False,False,False,False,True,False,False,False,True,False,False,False,True,True,False,False,True,False,True,False,True,False,False,True,True,False,True,True,True,False,False,True,False,True,True,True,True,False,True,False,False,False,True,True,True,True,True,False,False,False,False,True,True,True,False,False,True,False,True,False,False,False,True,False,True,True,False,False,True,True,True,True,True,False,True,False,True,False,True,True,True,True,True,False,False,True,False,False,True,True,False,True,True,False,False,False,True,False,True,False,True,False,True,True,False,False,True,True,True,False,True,False,False,False,False,False,True,False,False,True,True,True,False,True,True,False,True,False,False,False,False,False,False,True,True,False,False,False,False,True,True,True,True,True,True,True,True,False,True,False,True,False,True,False,True,False,False,True,False,True,True,False,True,False,True,False,False,True,False,False,False,True,True,True,False,False,False,False,True,True,False,False,False,True,False,True,True,True,False,True,False,False,True,True,False,False,True,False,False,True,True,False,True,False,False,True,True,False,True,False,False,True,False,False,False,True,True,True,False,False,False,False,False,True,True,False,False,False,False,False,True,True,False,False,False,False,False,True,True,True,True,True,True,True,True,True,False,False,True,False,False,True,False,False,True,True,False,True,True,True,True,True,False,True,True,False,False,True,True,True,True,False,False,False,False,True,True,False,True,False,True,False,False,True,False,True,True,True,False,False,False,True,True,False,False,True,True,False,False,False,True,True,True,True,True,True,False,True,True,False,True,False,False,True,False,False,False,True,True,False,True,True,True,True,False,False,False,True,False,False,True,False,False,False,True,True,True,False,False,True,False,False,True,False,True,True,False,False,False,False,False,False,True,False,True,True,False,True,False,False,True,False,False,True,False,False,True,False,False,True,True,False,True,False,False,True,False,False,True,False,False,True,False,False,True,True,True,True,False,False,False,False,False,False,True,False,False,False,False,False,False,True,False,True,False,False,False,False,True,True,False,True,True,True,True,False,False,True,False,True,True,False,True,True,False,False,True,True,True,False,True,True,True,False,False,True,False,True,True,True,False,False,True,True,True,False,False,True,True,False,False,False,False,True,True,False,False,True,True,True,True,True,False,False,True,False,False,True,True,True,True,False,True,False,True,False,False,True,False,False,True,False,False,True,False,False,False,False,True,True,True,False,False,True,False,True,True,False,True,True,False,False,True,True,False,False,False,False,False,False,False,True,False,True,True,False,True,True,False,False,False,True,False,True,False,False,False,False,True,True,True,True,True,False,False,True,False,False,False,False,False,False,False,True,True,True,True,False,False,False,False,False,True,False,True,False,True,False,False,False,True,True,True,True,True,True,False,True,False,False,False,False,True,False,True,False,True,True,True,True,True,True,True,False,False,True,False,True,True,False,True,False,True,False,True,False,True,False,False,True,False,False,False,True,False,True,False,True,False,True,False,True,False,True,False,False,False,False,True,True,True,False,False,False,False,True,True,False,True,True,True,False,True,True,True,True,True,True,False,True,False,False,True,True,True,True,True,False,True,True,True,False,True,True,True,False,True,False,False,False,True,True,False,False,True,False,True,False,True,True,True,False,True,False,True,False,True,False,False,True,True,False,True,True,True,False,True,False,False,True,True,True,False,True,True,True,True,False,True,True,True,True,True,False,True,False,True,True,False,True,False,False,True,True,True,True,False,False,True,False,True,False,False,True,False,True,True,True,False,False,False,True,True,True,False,True,True,True,False,False,False,False,False,False,True,True,True,True,True,False,False,False,True,False,True,True,True,False,False,True,True,True,True,False,False,True,True,False,False,True,False,False,True,False,False,True,True,True,False,False,False,False,False,True,False,True,False,False,False,False,True,True,True,False,True,False,True,True,False,True,False,False,False,False,False,False,True,True,False,True,True,False,False,True,True,False,False,True,False,False,True,False,True,True,False,True,True,False,False,True,True,False,True,True,False,True,False,True,False,False,True,True,False,True,False,True,True,False,False,False,True,True,False,False,False,False,True,True,False,True,False,False,False,True,True,False,False,True,False,False,True,True,True,True,False,True,False,True,False,False,True,True,False,True,True,False,False,True,False,False,False,False,False,False,False,False,True,False,True,True,True,True,False,False,False,False,False,True,True,False,True,True,True,True,False,False,False,False,True,False,True,False,False,True,False,False,True,True,True,True,False,False,False,False,False,False,False,False,True,False,False,True,True,True,False,True,False,False,False,True,False,True,True,True,False,False,True,False,True,False,True,False,False,True,False,True,True,True,True,True,True,False,False,False,True,False,True,True,True,True,True,True,False,False,False,True,False,False,True,False,False,False,False,True,True,False,False,False,True,True,True,False,True,True,False,True,False,False,False,True,True,True,False,False,False,True,True,False,True,False,False,True,False,False,False,True,True,False,True,False,False,True,True,True,False,True,False,False,True,True,True,True,False,False,True,False,True,False,True,False,False,True,True,False,False,False,True,True,False,False,True,False,True,False,False,False,False,False,False,True,True,False,False,False,False,True,False,True,True,True,True,True,True,False,True,True,False,False,False,True,True,True,True,False,False,True,False,False,False,True,True,True,True,False,True,True,True,False,False,True,True,True,False,False,True,False,True,False,False,True,True,True,True,False,False,True,False,False,True,False,True,False,True,False,False,True,True,False,True,True,True,False,False,True,True,False,True,False,False,False,False,True,True,True,True,True,False,True,False,True,True,True,True,True,False,False,False,True,False,True,True,True,True,True,False,False,True,False,True,True,False,True,False,True,False,False,True,False,True,True,True,True,False,False,False,False,False,False,False,False,True,True,True,False,False,False,True,False,False,False,True,False,True,False,True,True,False,False,True,True,True,False,False,False,False,False,False,True,False,False,True,True,True,True,False,False,True,True,False,True,True,True,True,False,True], dtype = "bool")#candidate|11654|(1344,)|const|bool
call_11652 = relay.TupleGetItem(func_3207_call(relay.reshape(var_11653.astype('bool'), [6, 1, 14]), relay.reshape(const_11654.astype('bool'), [6, 16, 14]), ), 0)
call_11655 = relay.TupleGetItem(func_3211_call(relay.reshape(var_11653.astype('bool'), [6, 1, 14]), relay.reshape(const_11654.astype('bool'), [6, 16, 14]), ), 0)
var_11656 = relay.var("var_11656", dtype = "bool", shape = (6, 16, 14))#candidate|11656|(6, 16, 14)|var|bool
bop_11657 = relay.right_shift(call_11652.astype('uint64'), relay.reshape(var_11656.astype('uint64'), relay.shape_of(call_11652))) # shape=(6, 16, 14)
bop_11660 = relay.right_shift(call_11655.astype('uint64'), relay.reshape(var_11656.astype('uint64'), relay.shape_of(call_11655))) # shape=(6, 16, 14)
output = relay.Tuple([call_11643,var_11653,const_11654,bop_11657,])
output2 = relay.Tuple([call_11644,var_11653,const_11654,bop_11660,])
func_11662 = relay.Function([var_11653,var_11656,], output)
mod['func_11662'] = func_11662
mod = relay.transform.InferType()(mod)
var_11663 = relay.var("var_11663", dtype = "bool", shape = (84,))#candidate|11663|(84,)|var|bool
var_11664 = relay.var("var_11664", dtype = "bool", shape = (6, 16, 14))#candidate|11664|(6, 16, 14)|var|bool
output = func_11662(var_11663,var_11664,)
func_11665 = relay.Function([var_11663,var_11664,], output)
mutated_mod['func_11665'] = func_11665
mutated_mod = relay.transform.InferType()(mutated_mod)
func_11553_call = mod.get_global_var('func_11553')
func_11554_call = mutated_mod.get_global_var('func_11554')
call_11685 = relay.TupleGetItem(func_11553_call(), 0)
call_11686 = relay.TupleGetItem(func_11554_call(), 0)
output = call_11685
output2 = call_11686
func_11690 = relay.Function([], output)
mod['func_11690'] = func_11690
mod = relay.transform.InferType()(mod)
output = func_11690()
func_11691 = relay.Function([], output)
mutated_mod['func_11691'] = func_11691
mutated_mod = relay.transform.InferType()(mutated_mod)
func_11553_call = mod.get_global_var('func_11553')
func_11554_call = mutated_mod.get_global_var('func_11554')
call_11701 = relay.TupleGetItem(func_11553_call(), 0)
call_11702 = relay.TupleGetItem(func_11554_call(), 0)
func_10464_call = mod.get_global_var('func_10464')
func_10467_call = mutated_mod.get_global_var('func_10467')
const_11704 = relay.const([3.985602,2.644388,3.801628,7.196512,1.336994,6.936535,2.618332,2.932032,7.499170,-2.752053,-5.914094,-4.654485,9.090724,-2.038294,-3.317601,-3.751210,4.918913,-1.874512,0.442816,-2.296753,9.932009,5.411157,0.965454,2.398736,4.052334,7.441971,2.722206,8.761757,-8.225987,0.929567,7.776094,-0.663865,1.892133,7.074802,-1.160529,-3.293059,9.122603,-0.959032,-7.087981,-8.941845,0.360589,6.380446,7.973551,-9.029900,-7.237675,-3.740268,7.206623,6.657025,-7.058019,0.964140,-4.318128,-8.409598,6.971939,4.143372,-8.059983,7.189692,2.645802,-4.289530,1.351639,9.440435,-8.077363,4.380409,-0.411281,0.996431,3.140435,-6.645127,-1.261117,-2.634976,6.576603,3.585185,8.501344,-2.297394,1.852089,1.194292,6.714968,4.266570,6.498356,9.192978,2.537317,-3.489077,-2.154089,-3.121915,4.182569,-3.930211,-9.270331,-0.827557,7.188224,0.259643,9.142110,7.978612,2.192564,-8.655752,-5.338330,-8.109959,-0.909537,-3.930457,8.249312,7.735328,8.037414,-4.997732,1.134087,3.358505,7.599821,-6.475288,-2.253064,6.868290,-7.521963,-7.203471,9.324199,-2.872921,8.467531,-9.665822,5.549102,8.780200,-4.440044,2.338251,-4.067800,-5.490134,3.602685,-0.515813,-8.081028,9.903359,5.851783,0.286288,-1.352150,3.394475,1.183166,3.529069,1.983678,4.264850,-7.291618,-8.071678,-9.941144,-7.008823,2.113072,5.868414,-7.410386,-3.025480,-2.031018,-9.405015,5.067880,-6.381057,-4.522741,6.920214,-3.097214,6.542742,0.154989,2.842669,-8.819406,2.619273,-9.248094,6.177515,8.540532,-0.318298,-3.898439,7.341941,-4.807866,-7.002837,5.443328,2.070602,-7.449358,-4.316107,-5.250403,2.463271,1.065646,-3.343160,7.750325,-2.863230,7.317559,-1.972456,5.120900,3.113405,2.359153,-2.689527,7.979105,-6.144153,-5.558865,-8.653820,-8.230370,0.661821,-5.051840,6.645377,-0.424741,2.855922,3.034561,2.149364,1.647241,-1.804383,-9.402359,1.986105,-8.181785,3.485425,-6.514604,4.330566,-2.533698,-5.503360,-4.830841,-9.003873,0.013678,-4.639865,-6.877124,9.929114,-8.812041,-1.006423,6.294730,4.840061,-1.066048,-1.218423,-4.642860,7.360334,4.017292,1.542956,-2.697078,-8.204693,2.278239,-5.407216,-2.351155,2.380513,2.806560,3.287571,1.601202,4.453374,2.434220,-8.720969,1.327013,-3.979987,2.669793,9.878441,-7.783011,3.196679,-1.502615,1.051596,-2.687420,-7.700153,-5.029939,-3.939135,-3.587880,7.870469,2.098661,2.080963,-2.283467,1.033236,3.344443,3.628503,-1.822987,-8.399270,-4.325084,2.622587,-4.963795,-2.117033,2.745228,6.698127,-9.625077,-6.948363,-2.211848,9.793480,4.005123,6.432253,8.065637,-1.736122,0.958307,-0.509404,-4.806346,-8.761815,4.417955,-2.012558,0.413699,-0.842175,-0.883560,-1.466999,-1.421864,7.740106,-3.942149,1.614618,3.303592,-3.164108,-7.709710,-4.649210,-6.296420,9.268063,-0.295498,4.872596,3.237311,3.239998,-9.482537,0.210287,0.361077,-0.241860,2.717872,9.165369,-6.617448,3.990017,6.953048,5.387928,3.735289,4.537810,-8.893181,8.288480,7.216649,-5.187757,-4.866525,-6.026295,-1.306571,-4.492780,-9.039275,8.134721,3.088146,2.838421,-1.208384,-2.737981,-6.877749,4.288627,-3.783354,-6.429637,-2.909884,9.904685,-8.147136,-6.674578,0.023363,-1.635965,1.989558,-5.324001,4.208504,0.789983,-1.977377,3.430015,2.129079,-0.395939,5.752430,9.384445,5.285938,6.019081,7.708698,-1.950838,-0.937794,-1.105150,-4.178848,-8.977621,0.101423,-9.811729,3.003159,-6.583544,-4.667669,6.414915,1.174093,8.949303,5.957177,2.511633,3.444814,5.749568,-1.588494,6.916204,-0.388747,-5.771561,0.965008,-1.111842,-4.211208,3.961397,4.922905,8.246062,-0.007394,6.092190,8.877151,-0.217849,-8.969338,-6.456586,3.986320,-9.693467,6.790113,0.122053,6.557789,5.467857,-7.294165,-2.876776,5.601265,7.907766,3.172738,-8.942639,3.193743,6.549661,-0.002973,-4.381163,7.421796,-3.662659,-5.186874,4.663657,1.095356,0.645139,0.644153,8.550218,0.162332,-0.022781,1.631752,8.828803,6.436351,-0.250711,-9.530677,-9.848074,7.418028,-7.741428,-1.185670,8.049883,4.035737,-1.086622,9.384722,6.465841,-8.064996,8.398982,-1.966679,-1.295146,7.416335,-8.391941,5.676529,5.209182,6.978354,-9.071920,7.423996,2.116614,9.298902,4.303947,0.102459,4.681429,4.348728,2.025464,-5.051422,3.992095,-2.506019,3.384824,-8.251964,8.518018,8.170220,-4.756250,2.263563,6.858129,3.806811,1.782140,6.946461,-0.488165,7.281440,2.647486,5.629449,9.715341,-8.848116,3.556685,4.609710,-1.852944,3.998898,5.448841,-5.406114,3.599513,-7.583128,-4.236318,5.617689,-8.441384,-1.789330,-9.302698,-3.693700,6.146068,3.654984,-5.921875,1.884817,7.058388,4.216149,-7.131230,5.797476,0.571290,-6.561011,9.990665,-4.488612,0.265494,0.646957,-7.629808,4.168816,-9.785704,-2.859871,-6.735317,2.105012,-8.727899,-9.626762,-3.703526,-8.322609,0.414625,5.453060,1.698234,-1.566253,-0.607731,-7.359247,-4.198716,1.085643,-5.418104,1.042107,3.963264,-9.958634,9.756597,-7.557032,-1.832361,3.115019,-6.943250,3.200864,-7.687669,-3.344020,1.203320,3.237282,-1.922511,5.630510,-2.252571,1.019206,6.029111,-9.952382,5.109141,1.538698,2.673365,0.249080,4.725145,4.871996,7.934151,5.207107,3.969825,-8.683032,5.792631,-1.221468,-7.720262,7.148800,-9.389764,-9.970068,4.133691,8.529131,-4.620627,-6.964659,7.864805,7.202763,9.969193,-4.547271,0.548405,-6.353441,-1.095404,-9.834100,3.086101,-3.109734,7.527192,1.657420,-3.990022,-6.508317,3.624362,2.202727,-9.950051,6.208360,1.305370,-6.467715,-0.124535,0.423029,-0.962814,3.042973,7.913060,7.260126,-7.764949,6.434528,4.923356,1.732343,-9.558538,-3.298340,6.105719,-2.153106,9.581094,9.666076,-6.594895,-7.523973,4.928784,-5.344994,2.548168,9.919443,-9.501912,5.262383,-6.894681,-9.145262,8.214101,-0.980921,3.932792,0.885783,0.751057,-2.150310,6.896951,-0.137241,2.930289,4.626032,-4.670976,-5.701412,-3.904637,4.811616,3.870698,0.693499,-9.570344,6.230796,1.448712,-0.578591,-8.935537,-4.479286,4.778569,-5.503359,7.604789,0.316698,-8.958136,-2.617152,7.607562,-4.901432,3.687294,8.935219,3.293343,3.304760,2.697631,6.835831,6.891910,2.113886,2.360200,9.105287,-7.328660,-6.562071,-2.930281,0.160855,-6.567188,-3.461219,8.428190,8.368954,8.287816,2.288031,-7.846486,-9.889441,-1.224948,-4.311755,7.030662,-0.791368,5.498632,-8.798289,9.683676,1.847438,1.342184,-2.495851,-9.652402,1.866943,-3.022080,-0.322034,-3.777312,-3.150561,2.428037,-0.615124,-3.428598,-1.196012,8.348887,-3.284143,-9.698717,0.307353,4.782960,-2.391723,1.113076,0.844424,9.775285,2.843657,-1.593034,-1.342616,-4.550672,-7.862949,-7.177463,-6.587898,-4.285576,-0.045994,0.524840,-7.694287,4.565927,-8.474066,0.876565,7.365957,1.570610,-8.455413,-7.997631,4.000082,4.178984,-2.771370,-4.066613,5.254148,1.263003,5.446599,2.774072,8.414196,0.400704,-2.883655,-2.205136,2.776362,-8.059418,1.849198,-3.026595,1.096533,3.644068,1.845019,8.563679,-4.867105,8.281137,0.053384,7.336015,3.318202,-9.388363,2.603876,2.474718,-2.151010,-2.121443,6.032003,0.423548,-7.754327,-8.369704,-5.732292,1.589410,-2.406642,1.280500,3.168626,-8.548472,1.389051,-6.279578,1.632327,2.714725,1.163442,-1.287135,-8.059433,-6.797729,-9.912789,1.732212,-2.130788,2.281063,0.442659,-8.168563,6.648447,9.444571,0.515903,-2.694174,-6.751076,-7.594039,2.779411,-6.532801,-1.561802,0.718277,7.180147,-6.918575,5.449146,-6.889395,-2.967014,5.743678,9.282702,-8.164866,1.620024,-0.656163,-9.936580,0.934589,9.026752,8.119858,-8.296627,-8.973122,2.804905,5.542618,-5.103397,4.911786,-6.213909,-5.756109,-4.388147,-4.721030,1.707865,3.637263,-2.123958,-6.912069,-9.653051,4.709130,-5.701386,-6.912475,-7.160967,-2.733571,5.072741,6.401408,-8.124808,2.268072,-9.186178,-6.102193,-2.975840,3.610117,9.325225,-0.816725,-2.770996,-9.884622,7.438662,-9.826444,3.679902,-7.526498,6.209254,-7.551752,-9.618555,-1.480918,-6.000994,-4.429426,-3.209652,3.047142,0.016269,8.659765,3.711754,-0.224117,-1.352384,1.104732,6.932080,-9.981976,5.250110,8.301291,-9.522332,2.104989,-2.698819,-8.842412,2.226760,-3.171323,1.815436,-6.780931,-5.795684,-1.253745,-0.028591,-6.204623,5.307868,-6.803340,9.117675,-9.919970,4.197924,-7.869797,-4.307704,-4.845630,-4.608330,-4.715908,-5.223938,7.224125,-8.296808,1.461328,7.341728,-6.018729,-7.726628,8.879690,-6.352644,1.772019,3.950608,-4.162115,-1.333905,-1.630149,0.363882,2.382798,5.002040,-3.797796,-2.711260,-7.292815,8.653394,-6.381971,2.910117,-6.863556,-3.283742,6.819226,1.757376,2.563247,-5.158267,8.642473,-9.051183,5.607445,1.829854,3.938244,7.720334,1.825950,4.194495,-8.871460,5.057141,-4.705759,5.133454,-4.724726,1.900480,-5.579883,6.045174,-1.713091,-6.139852,6.973999,2.405022,4.369618,8.434428,-9.636444,2.392065,3.959372,7.260636,-7.531769,-2.611043,0.283778,-3.368481,7.625675,4.640996,3.896229,-6.192250,7.818801,-4.384885,-8.649913,6.759146,-3.094705,-5.739860,-9.595735,5.236780,-6.753137,6.959900,-0.908199,4.355896,1.607721,7.935352,4.828438,1.875485,1.963402,2.042668,7.234982,-1.068029,8.291665,-2.799275,-7.152789,-6.606911,8.208814,3.783130,6.407531,7.253639,5.551952,-1.845367,-2.757651,-6.258026,2.670367,-8.924803,-3.427990,-6.354124,0.309189,5.852363,-9.821427,-0.245688,9.766632,9.713765,-3.025671,6.970667,3.625865,-6.366879,-5.696252,-8.356380,5.377141,-9.302806,1.434105,4.014164,1.193790,4.000440,5.262539,5.207407,7.620551,7.220534,-3.885956,1.987240,-2.717421,7.213661,-0.340628,-2.575320,-5.546861,-2.929553,3.390129,-8.981952,-3.394283,7.075853,5.272358,7.666382,0.244935,1.593555,1.691793,-9.761676,-9.246768,-2.597368,3.138443,-6.813802,-6.111224,8.465770,4.419635,-6.207679,2.550272,6.269780,3.413715,8.067280,1.649724,-5.797716,-9.691141,4.572208,-0.051478,0.312927,-1.626127,-5.834900,-2.193067,3.604825,8.818778,-4.309865,7.045317,-3.037617,-6.923096,2.574074,-1.231436,-1.745412,-8.500966,1.479653,-0.569026,-5.095036,8.318202,4.592202,2.112385,8.578302,-1.729877,9.638329,3.852710,-7.481459,-2.677483,7.464118,8.552157,1.947171,6.517605,7.286130,7.484053,1.405265,-8.492146,0.037816,9.859328,-4.419307,-4.367379,8.599415,4.882170,0.872083,0.516351,-4.616422,-0.642192,2.684733,3.048376,1.421725,-9.144275,1.493954,5.579791,-2.258992,1.160086,1.053663,7.368705,7.828102,-6.588214,-5.871819,3.179636,1.246942,-1.718521,-4.066745,5.640709,-5.760917,-7.135241,-3.636847,-1.796417,-8.602010,1.766506,1.154441,-8.121883,-4.779677,2.294720,-1.066680,0.621327,4.791757,-4.797700,9.441598,5.180524,-6.167153,9.912910,-7.337178,5.737023,5.986647,-7.923999,3.895734,7.152419,2.398946,-2.514712,-1.778223,7.778409,8.584409,7.903688,7.568751,6.791242,-4.620513,-3.406650,-2.229531,8.194686,7.594140,4.793179,-1.478959,-2.846156,6.575106,1.054958,-1.102646,2.274297,7.564239,5.057708,-4.110830,-0.344000,4.927327,3.280383,-9.025677,-0.604959,-2.151773,1.624374,-8.267933,-8.919603,-4.993528,1.578124,0.344988,0.075603,2.605586,5.864851,9.253584,-8.073452,3.342219,-1.941906,-2.949052,8.174041,-6.538782,5.670043,-6.260710,2.480019,-9.719598,9.032301,7.614363,-2.705345,5.750040,-3.731285,6.789134,-9.686625,-0.023080,-0.729876,4.148068,1.088667,-3.246788,-9.636006,7.642436,-6.893431,1.951312,9.054941,-2.293373,2.377588,8.977483,-6.552511,0.185812,5.222277,6.599097,-8.326217,7.426883,2.403629,5.399262,-0.470823,9.803609,-7.469395,9.327094,6.232900,6.412438,7.261206,1.643182,8.530819,-5.826848,-7.576605,-6.347855,-2.701179,0.003570,-1.640181,-7.680862,5.458080,0.635166,-8.547098,9.743418,-0.211093,-4.109385,9.619640,8.025021,-3.606195,-5.810973,8.528552,-5.916592,-5.286336,6.690965,-3.017659,-3.222785,0.157972,9.915372,-3.071914,-4.943978,2.260637,-1.496335,-7.342963,2.601316,-9.502601,8.319105,-2.329917,8.653559,3.858774,4.253544,-8.341273,6.216932,5.389120,1.037587,9.391610,-6.670607,1.228814,-6.172633,-1.002959,-3.726562,1.108851,6.295068,3.351791,-9.729726,3.385644,-1.947123,0.240733,-6.386188,-9.441785,-2.026668,9.710363,-3.828431,-7.865588,-9.991312,-6.074324,5.606281,-5.905909,-9.984463,9.090129,6.518835,-5.664346,4.496034,3.620157,7.296028,0.851538,-2.776576,-0.414749,3.468545,5.792922,-7.634187,5.979658,8.327095,-9.457909,2.238086,-9.201892,-8.695438,3.129413,7.492546,7.925515,-9.753693,-0.624488,3.505059,-3.301461,7.840514,-1.052785,5.113795,5.502128,-9.263194,-7.817861,-7.265148,-9.012737,-4.565117,-1.561804,-0.035937,-1.447144,-1.595539,1.608350,4.594969,1.927766,9.654556,-5.034345,8.501668,5.415969,1.558799,5.227115,7.245353,0.569500,6.545962,5.521485,2.282659,5.460957,-4.358745,-0.589050,-7.481527,7.306485,2.584394,-0.093237,3.720714,-8.503876,-4.186825,-6.374932,5.562887,5.809747,6.101827,3.816372,-9.461651,9.512984,5.337368,-4.195954,5.313938,-3.839229,-6.994828,7.088372,-3.343952,-6.453860,7.065858,-7.598392,-6.901893,-0.325115,-3.556397,1.704222,-0.051841,-7.088442,-0.140256,9.179072,-7.794195,-2.455380,-1.403933,-4.644903,-9.980098,9.463750,-9.609125,-7.471792,0.564078,-2.822796,-2.579114,-7.302759,-6.670572,1.625707,-6.131293,-9.923225,-0.166494,7.470377,-3.729512,2.919130,-3.301324,5.447381,2.260785,-5.873689,-2.072218,-3.809075,-6.817924,6.861214,5.884177,1.060540,4.730424,-4.981039,-8.295774,-0.555280,-8.797310,4.703954,5.998128,5.747926,1.613386,3.894897,-0.830210,-6.601647,8.852432,-4.406212,-2.240915,-5.672049,7.368900,8.273447,-4.759168,2.751521,-0.007256,8.221330,5.833616,-4.786448,-4.802100,-7.224662,2.801753,5.789354,-1.110600,-8.864091,1.223068,-4.522914,6.639118,3.911081,6.818772,-2.292488,3.664442,2.636242,-2.465434,8.401401,-9.618985,-1.555719,5.383936,-1.860125,4.410522,-8.487176,4.657858,1.647149,8.194926,-8.253900,3.551088,-7.864427,-8.397574,9.759613,4.126034,-5.870931,-8.442094,3.205073,-4.227298,7.553296,-8.049054,9.610181,-6.464061,2.304708,9.777694,3.218263,-3.914261,2.530083,0.339515,-4.134705,-1.071513,-9.082810,9.234794,-2.734679,3.350244,5.183379,2.688195,9.649311,5.638043,1.087425,-2.380881,-5.193770,-3.979333,-9.644198,-2.894858,-3.156874,0.250627,-9.578770,0.020379,-4.602792,-0.731605,-6.561765,-6.643623,-4.739137,-0.357219,-7.549661,-7.505118,-2.221637,9.670355,-0.208260,2.707142,-9.510902], dtype = "float32")#candidate|11704|(1440,)|const|float32
call_11703 = relay.TupleGetItem(func_10464_call(relay.reshape(const_11704.astype('float32'), [16, 15, 6])), 0)
call_11705 = relay.TupleGetItem(func_10467_call(relay.reshape(const_11704.astype('float32'), [16, 15, 6])), 0)
func_6923_call = mod.get_global_var('func_6923')
func_6927_call = mutated_mod.get_global_var('func_6927')
var_11712 = relay.var("var_11712", dtype = "float32", shape = (1, 195))#candidate|11712|(1, 195)|var|float32
const_11713 = relay.const(7, dtype = "uint64")#candidate|11713|()|const|uint64
const_11714 = relay.const([[-5],[-1],[8],[-7],[8],[-5],[3],[-3],[-4],[3],[7],[-6],[-1],[10],[-2],[3],[-9],[-2],[-4],[6],[-6],[-4],[-8],[2],[-1],[-6],[7],[3],[5],[-8],[-10],[-6],[-9],[-8],[9],[4],[2],[2],[7],[3],[-1],[8],[3],[9],[-7],[-4],[-10],[-5],[-9],[4],[4],[3],[8],[-7],[-9],[4],[-9],[9],[-6],[-9],[5],[-9],[6],[-6],[5],[-4],[7],[-7],[3],[1],[2],[4],[-10],[5],[-1],[-8],[-8],[1],[-8],[-10],[6],[4],[-1],[8],[4],[-6],[7],[-10],[-4],[10],[9],[-10],[-2],[2],[6],[5],[-6],[-5],[9],[-1],[-5],[9],[-8],[6],[6],[-5],[-3],[-4],[6],[8],[-8],[5],[-1],[2],[-6],[-5],[3],[-10],[5],[-3],[3],[5],[-7],[-4],[5],[-6],[-7],[10],[1],[-10],[-7],[7],[-10],[-1],[6],[-5],[-5],[6],[1],[4],[4],[-10],[1],[10],[2],[-1],[4],[-10],[-7],[-1],[-6],[2],[9],[3],[2],[6],[7],[8],[6],[2],[-8],[8],[2],[-8],[9],[-2],[6],[-8],[5],[-6],[1],[2],[10],[8],[8],[5],[-6],[7],[10],[-7],[-5],[-6],[6],[-5],[-7],[8],[3],[-6],[10],[10],[-7],[-3],[7],[-10],[-7],[6],[7],[-2],[-7],[-4],[10],[-2],[1],[-7],[-3],[10],[-9],[10],[-5],[2],[9],[-4],[1],[-1],[-5],[-1],[-6],[9],[1],[10],[-2],[-4],[5],[6],[6]], dtype = "uint64")#candidate|11714|(225, 1)|const|uint64
call_11711 = relay.TupleGetItem(func_6923_call(relay.reshape(var_11712.astype('float32'), [13, 15, 1]), relay.reshape(const_11713.astype('uint64'), []), relay.reshape(const_11714.astype('uint64'), [25, 9]), ), 2)
call_11715 = relay.TupleGetItem(func_6927_call(relay.reshape(var_11712.astype('float32'), [13, 15, 1]), relay.reshape(const_11713.astype('uint64'), []), relay.reshape(const_11714.astype('uint64'), [25, 9]), ), 2)
bop_11718 = relay.bitwise_and(call_11711.astype('int16'), call_11701.astype('int16')) # shape=(8, 13, 390)
bop_11721 = relay.bitwise_and(call_11715.astype('int16'), call_11702.astype('int16')) # shape=(8, 13, 390)
output = relay.Tuple([call_11703,const_11704,var_11712,const_11713,const_11714,bop_11718,])
output2 = relay.Tuple([call_11705,const_11704,var_11712,const_11713,const_11714,bop_11721,])
func_11728 = relay.Function([var_11712,], output)
mod['func_11728'] = func_11728
mod = relay.transform.InferType()(mod)
var_11729 = relay.var("var_11729", dtype = "float32", shape = (1, 195))#candidate|11729|(1, 195)|var|float32
output = func_11728(var_11729)
func_11730 = relay.Function([var_11729], output)
mutated_mod['func_11730'] = func_11730
mutated_mod = relay.transform.InferType()(mutated_mod)
func_11553_call = mod.get_global_var('func_11553')
func_11554_call = mutated_mod.get_global_var('func_11554')
call_11797 = relay.TupleGetItem(func_11553_call(), 0)
call_11798 = relay.TupleGetItem(func_11554_call(), 0)
var_11799 = relay.var("var_11799", dtype = "float64", shape = (8, 13, 12))#candidate|11799|(8, 13, 12)|var|float64
bop_11800 = relay.bitwise_and(call_11797.astype('uint64'), var_11799.astype('uint64')) # shape=(8, 13, 12)
bop_11803 = relay.bitwise_and(call_11798.astype('uint64'), var_11799.astype('uint64')) # shape=(8, 13, 12)
func_7984_call = mod.get_global_var('func_7984')
func_7987_call = mutated_mod.get_global_var('func_7987')
var_11805 = relay.var("var_11805", dtype = "float64", shape = (126,))#candidate|11805|(126,)|var|float64
call_11804 = func_7984_call(relay.reshape(var_11805.astype('float64'), [6, 3, 7]))
call_11806 = func_7984_call(relay.reshape(var_11805.astype('float64'), [6, 3, 7]))
func_5626_call = mod.get_global_var('func_5626')
func_5632_call = mutated_mod.get_global_var('func_5632')
var_11808 = relay.var("var_11808", dtype = "int32", shape = ())#candidate|11808|()|var|int32
var_11809 = relay.var("var_11809", dtype = "int8", shape = (84,))#candidate|11809|(84,)|var|int8
var_11810 = relay.var("var_11810", dtype = "bool", shape = (30,))#candidate|11810|(30,)|var|bool
const_11811 = relay.const([[-6.090423,8.988476,5.024746,2.470980,-1.215716,-8.287919,8.026612,-1.165958,-5.369682,7.130498,-3.929606,8.720050,5.814968,-4.801012,-7.598836,5.656042,2.609526,-1.348134,7.089186,-2.285244,-8.083314,8.076047,9.401405,6.939358,2.833020,7.394370,-1.295174,8.634465,6.928493,-7.320642,8.945829,-9.560771,-3.270410,-3.253057,3.886477,-3.749731,4.478627,9.033681,3.896213,-1.744405,0.026320,5.159689,-6.072153,8.860793,-1.142140,-6.523884,-5.749753,-5.331813,8.060329,-7.500265,6.941584,-6.684576,-4.950997,-1.241284,1.975813,-0.523866,-6.353870,-2.913593,-7.332867,-9.559847,0.568219,4.988734,-6.622831,9.104085,-2.356077,-0.176162,-9.921628,-5.497394,-2.015938,-6.352122,-9.802440,4.920829,-2.943618,8.299656,7.048096,7.426924,-2.752742,-7.554355,-7.645096,-9.865638]], dtype = "float64")#candidate|11811|(1, 80)|const|float64
const_11812 = relay.const([8,-4,4,-7,-8,4,8,8,-2,10,-6,-6,10,-2,-1,-4,8,-9,5,-7,-10,1,-4,9,7,-8,4,8,7,2,6,-8,-3,5,5,-9,4,3,10,5,-1,-2,6,1,-9,5,9,10,-2,-8,-10,4,-8,3,10,5,1,-8,-7,-4,2,-4,3,-10,2,4,6,5,8,2,-5,9,4,7,-6,2,10,-8,-1,-10,8,-6,-3,-8,8,-6,7,-3,3,-4,10,-9,-1,5,-5,6,8,-8,4,1,8,-7,5,7,9,-10,-7,-1,-4,-2,-1,2,2,-2,8,10,-3,2,-6,-7,-2,4,-4,10,1,-6,-4,-4,8,5,-9,9,-2,1,10,3,-5,-1,-3,-8,5,-7,-2,-7,4,6,9,-7,-6,8,-6,-10,-1,-1,-4,-9,5,-9,-6,7,2,-5,-9,-1,1,-5,-2,8,-7,-10,-8,-1,-4,9,-1,-1,-2,-2,-9,9,4,-6,8,2,1,-6,10,1,10,-5,6,3,-4,-10,8,4,-1,8,2,-7,-3,-3,4,8,-4,4,1,-10,2,8,9,-2,2,-2,-2,-9,-5,8,6,1,1,2,3,-8,3,-5,-8,3,-8,4,5,7,-6,7,-2,-4,6,-8,-9,3,2,2,-8,-10,9,8,-7,-2,-9,7,-9,-6,-6,-3,-9,-4,-6,-3,-3,-1,-8,6,4,-10,-9,4,-7,-1,5,5,2,-6,-8,-5,1,3,6,5,-7,3,-2,-4,-7,2,-10,-7,8,1,4,9,3,-5,1,-9,6,6,6,9,-4,-7,-7,5,10,1,3,9,2,-6,-5,3,4,-1,9,8,-10,8,-1,-3,10,-5,6,2,10,-2,3,-6,5,9,-7,7,-4,-7,7,-8,-5,-3,-8,8,-1,1,-6,-2,4,6,10,1,8,1,-7,6,1,-3,-4,-5,1,-10,-4,-7,4,2,-7,-8,-8,-4,-7,6,-10,6,-8,-9,-10,-6,-9,-3,-8,-7,-7,-2,3,1,-6,7,-6,8,-6,4,5,-10,-5,-7,9,10,8,-2,-7,10,-2,7,-10,1,-1,-3,5,1,6,4,4,3,5,-3,-2,6,-10,9,10,-7,5,9,3,1,-10,7,1,5,9,10,1,-5,-1,-2,-6,-3,-8,10,-2,3,8,-7,-1,-6,-10,-2,-2,-3,-1,3,-5,8,-9,-5,3,-5,7,9,6,-10,10,9,-9,7,9,-7,6,-8,-8,-6,-2,-10,-4,-8,-4,7,10,-10,-10,9,6,-4,3,-9,-4,10,7,4,10,-2,-2,-2,6,-9,8,-6,6,-9,9,-10,5,8,1,-5,-5,9,7,10,-3,10,9,-6,-5,3,-2,-10,4,-9,1,8,-1,5,-10,1,-4,-3,-8,-7,3,-8,3,-10,-5,2,2,-6,-8,-3,6,2,-5,-4,-3,6,10,-10,4,-10,10,-9,-3,-7,5,-1,-2,-4,7,1,-10,-7,5,-3,-9,9,4,-4,-2,10,-9,-10,-4,-1,4,-1,9,5,7,-2,-1,-8,1,-4,2,-10,-4,3,9,-9,6,-7,9,-10,10,-5,-4,-7,-4,8,6,-7,10,-8,-4,2,-6,6,1,-2,-9,-3,7,-8,3,-6,-3,9,5,-4,4,-10,5,6,3,6,-2,-4,10,-3,-7,-2,-4,-6,8,-9,-8,-5,-8,-8,6,2,4,10,-10,-5,-1,-9,-9,5,7,-2,-4,5,-5,-10,8,10,10,3,2,-6,6,8,-2,-5,-7,-3,3,1,-2,10,7,-9,-9,-6,2,-3,-9,6,-2,-10,7,9,1,7,-3,3,-6,-6,7,-5,5,-1,-9,-8,9,1,1,-7,10,-8,-10,4,5,2,-3,3,9,6,3,8,-2,-2,-8,5,-3,-2,4,-3,-7,1,4,-10,9,10,8,6,8,2,6,-6,10,4,-6,-1,3,-3,-5,1,-6,8,10,3,1,-6,5,-8,3,-9,8,-2,-3,10,-5,-3,-2,5,4,-10,7,4,9,7,3,-1,-9,3,-7,3,4,2,-7,-5,-9,8,2,-6,-3,5,2,-8,-10,-4,-6,8,2,-5,7,2,7,-1,-1,4,-1,-9,-6,5,-9,-4,5,4,-1,6,9,3,-7,6,3,-3,8,9,-10,3,-3,-6,-8,8,9,7,-4,-5,7,9,1,6,4,7,-10,-5,5,3,-4,-3,7,-3,10,-9,1,-7,-2,4,-8,1,-1,-5,2,10,-1,8,-2,-6,-1,9,5,-4,1,-4,-9,9,5,-6,1,2,-10,-9,-5,5,10,-8,2,-3,-2,-3,3,-10,-7,-7,4,-2,2,-9,4,3,-7,-10,-4,5,-9,-6,-2,5,5,-8,3,-5,1,4,-7,-1,9,-7,-4,7,-1,-10,-9,2,8,5,2,-6,4,-2,6,-7,-7,-8,-5,6,9,-10,-2,-4,-4,2,9,-3,-2,5,-8,-5,-7,8,7,9,-2,4,-3,6,7,5,10,10,3,-9,10,-8,6,-10,-9,-7,-9,-9,-9,-10,-7,-2,-3,8,-10,8,3,-8,3,-10,-8,-5,9,-9,-1,7,-4,-6,1,-4,2,-2,10,-4,9,-7,-4,-4,-8,-3,2,8,9,2,9,5,-9,-8,9,4,-7,-5,-3,8,-3,-2,-1,10,4,3,9,-5,-5,1,-5,1,6,-7,-8,2,-5,4,-3,-7,-8,10,-8,-8,-8,-8,4,6,-9,8,-7,-7,-5,8,7,6,-8,5,-1,-1,-1,-3,10,4,-4,7,5,2,6,7,-7,-3,7,-3,8,-9,-4,-4,4,6,-10,-7,-6,2,-3,9,2,-7,7,-9,-7,-6,3,-7,-7,2,5,-2,-2,-7,5,-7,6,-8,-5,2,7,2,7,6,-2,3,10,2,-2,-9,5,-4,9,5,-8,3,-6,-7,4,-9,2,6,5,-7,7,4,9,2,-9,-1,6,4,7,-5,7,-7,-3,-2,-1,7,-5,9,-8,-2,-9,-6,7,9,3,6,7,8,6,-2,1,6,-10,-9,-5,-5,-4,-3,1,4,7,2,3,8,2,-8,-7,8,-9,-6,-8,3,10,-2,10,-2,5,-3,-6,10,8,2,4,5,-4,10,-9,-3,-10,9,10,9,7,-6,2,2,5,7,3,5,-10,1,-9,-10,9,1,3,9,-1,-5,-2,-2,3,6,-9,3,-5,1,-9,5,2,-9,9,5,4,2,8,-1,-5,-5,10,-6,-2,-1,9,9,5,6,-8,3,-10,-8,-10,7,7,-10,2,2], dtype = "int64")#candidate|11812|(1232,)|const|int64
call_11807 = relay.TupleGetItem(func_5626_call(relay.reshape(var_11808.astype('int32'), []), relay.reshape(var_11809.astype('int8'), [84,]), relay.reshape(var_11810.astype('bool'), [30,]), relay.reshape(const_11811.astype('float64'), [1, 80]), relay.reshape(const_11812.astype('int64'), [1232,]), ), 11)
call_11813 = relay.TupleGetItem(func_5632_call(relay.reshape(var_11808.astype('int32'), []), relay.reshape(var_11809.astype('int8'), [84,]), relay.reshape(var_11810.astype('bool'), [30,]), relay.reshape(const_11811.astype('float64'), [1, 80]), relay.reshape(const_11812.astype('int64'), [1232,]), ), 11)
uop_11826 = relay.tan(const_11811.astype('float32')) # shape=(1, 80)
output = relay.Tuple([bop_11800,call_11804,var_11805,call_11807,var_11808,var_11809,var_11810,const_11812,uop_11826,])
output2 = relay.Tuple([bop_11803,call_11806,var_11805,call_11813,var_11808,var_11809,var_11810,const_11812,uop_11826,])
func_11847 = relay.Function([var_11799,var_11805,var_11808,var_11809,var_11810,], output)
mod['func_11847'] = func_11847
mod = relay.transform.InferType()(mod)
mutated_mod['func_11847'] = func_11847
mutated_mod = relay.transform.InferType()(mutated_mod)
func_11847_call = mutated_mod.get_global_var('func_11847')
var_11849 = relay.var("var_11849", dtype = "float64", shape = (8, 13, 12))#candidate|11849|(8, 13, 12)|var|float64
var_11850 = relay.var("var_11850", dtype = "float64", shape = (126,))#candidate|11850|(126,)|var|float64
var_11851 = relay.var("var_11851", dtype = "int32", shape = ())#candidate|11851|()|var|int32
var_11852 = relay.var("var_11852", dtype = "int8", shape = (84,))#candidate|11852|(84,)|var|int8
var_11853 = relay.var("var_11853", dtype = "bool", shape = (30,))#candidate|11853|(30,)|var|bool
call_11848 = func_11847_call(var_11849,var_11850,var_11851,var_11852,var_11853,)
output = call_11848
func_11854 = relay.Function([var_11849,var_11850,var_11851,var_11852,var_11853,], output)
mutated_mod['func_11854'] = func_11854
mutated_mod = relay.transform.InferType()(mutated_mod)
func_11514_call = mod.get_global_var('func_11514')
func_11515_call = mutated_mod.get_global_var('func_11515')
call_11924 = func_11514_call()
call_11925 = func_11514_call()
func_7812_call = mod.get_global_var('func_7812')
func_7814_call = mutated_mod.get_global_var('func_7814')
var_11959 = relay.var("var_11959", dtype = "uint8", shape = (96,))#candidate|11959|(96,)|var|uint8
call_11958 = relay.TupleGetItem(func_7812_call(relay.reshape(var_11959.astype('uint8'), [1, 8, 12])), 0)
call_11960 = relay.TupleGetItem(func_7814_call(relay.reshape(var_11959.astype('uint8'), [1, 8, 12])), 0)
func_8937_call = mod.get_global_var('func_8937')
func_8941_call = mutated_mod.get_global_var('func_8941')
var_11962 = relay.var("var_11962", dtype = "int8", shape = (896,))#candidate|11962|(896,)|var|int8
var_11963 = relay.var("var_11963", dtype = "float64", shape = (1680, 1))#candidate|11963|(1680, 1)|var|float64
call_11961 = relay.TupleGetItem(func_8937_call(relay.reshape(var_11962.astype('int8'), [4, 14, 16]), relay.reshape(var_11962.astype('int8'), [4, 14, 16]), relay.reshape(var_11963.astype('float64'), [1680,]), ), 1)
call_11964 = relay.TupleGetItem(func_8941_call(relay.reshape(var_11962.astype('int8'), [4, 14, 16]), relay.reshape(var_11962.astype('int8'), [4, 14, 16]), relay.reshape(var_11963.astype('float64'), [1680,]), ), 1)
func_7984_call = mod.get_global_var('func_7984')
func_7987_call = mutated_mod.get_global_var('func_7987')
const_11966 = relay.const([-7.563368,-2.860232,5.230534,5.684775,-4.697697,-4.946847,6.497396,-8.520908,4.435944,0.444075,9.390423,8.825039,8.577758,7.280017,8.760170,-1.405290,-0.828735,8.099597,-7.490605,5.263134,1.324286,0.461124,-0.202520,-8.590848,-2.597572,-9.719389,-4.994334,7.070198,8.355195,-9.344083,-2.725921,-0.925297,-4.909680,-1.424493,1.228370,3.434498,5.136630,2.863591,-7.838027,-1.274917,-8.856336,0.509795,-4.389338,-6.998996,6.804428,8.134013,8.311804,-2.734337,0.153640,-3.714776,7.177792,5.646689,-0.147775,-7.218264,-2.855246,-0.496968,4.842328,4.678040,-4.191905,2.018411,3.844736,0.133971,3.330405,-1.063578,5.449298,6.102779,-1.084254,3.651255,2.830506,-8.840300,-4.451201,-9.841803,-2.197986,-7.886842,5.146492,-7.068732,-0.211121,0.064600,8.403573,-6.310780,-8.943387,7.663553,-2.942126,-4.110078,6.007069,9.859320,4.018543,2.690386,-6.068817,-6.174966,-2.545656,-5.648886,2.015752,-1.513615,9.283095,7.706284,-8.365667,-3.819933,5.019400,-7.140646,8.863494,9.104301,-9.423458,-4.579698,-2.309441,-1.858260,9.479499,3.510945,3.639556,-0.886411,-3.712387,-2.566826,-3.188543,6.616033,6.599586,-0.580464,3.837358,3.493311,8.773625,-7.943993,6.192393,-7.787035,3.761907,8.505412,9.986354,9.854027], dtype = "float64")#candidate|11966|(126,)|const|float64
call_11965 = func_7984_call(relay.reshape(const_11966.astype('float64'), [6, 3, 7]))
call_11967 = func_7984_call(relay.reshape(const_11966.astype('float64'), [6, 3, 7]))
func_11553_call = mod.get_global_var('func_11553')
func_11554_call = mutated_mod.get_global_var('func_11554')
call_11968 = relay.TupleGetItem(func_11553_call(), 0)
call_11969 = relay.TupleGetItem(func_11554_call(), 0)
bop_11977 = relay.mod(call_11968.astype('float32'), const_11966.astype('float32')) # shape=(8, 13, 126)
bop_11980 = relay.mod(call_11969.astype('float32'), const_11966.astype('float32')) # shape=(8, 13, 126)
bop_11986 = relay.greater_equal(call_11924.astype('bool'), const_11966.astype('bool')) # shape=(8, 13, 126)
bop_11989 = relay.greater_equal(call_11925.astype('bool'), const_11966.astype('bool')) # shape=(8, 13, 126)
func_2974_call = mod.get_global_var('func_2974')
func_2978_call = mutated_mod.get_global_var('func_2978')
var_11994 = relay.var("var_11994", dtype = "uint64", shape = ())#candidate|11994|()|var|uint64
const_11995 = relay.const([[9],[-10],[5],[-7],[7],[5],[-5],[10],[-5],[4],[4],[-5],[-3],[2],[6],[-10],[-3],[7],[8],[4],[-3],[7],[-6],[-7],[-10],[8],[-10],[-7],[-5],[-2],[-2],[-7],[3],[-4],[5],[6],[-5],[-7],[10],[3],[4],[3],[8],[7],[-2],[6],[1],[10],[7],[-3],[-10],[-2],[2],[7],[3],[3],[3],[1],[8],[5],[-7],[4],[4],[2],[-6],[6],[5],[-2],[-7],[-10],[-10],[8],[-1],[-7],[7],[8],[4],[-3],[-6],[10],[1],[-9],[-3],[-3],[1],[-1],[-8],[-6],[-7],[9],[6],[-9],[-1],[-9],[-9],[-10],[-8],[-5],[1],[3],[3],[5],[-2],[10],[4],[5],[-7],[2],[-9],[5],[-1],[-8],[-4],[-10],[-3],[9],[7],[-7],[6],[2],[9],[2],[2],[-5],[5],[8],[-5],[-7],[-1],[7],[9],[2],[-1],[9],[-10],[-9],[-6],[6],[5],[10],[-3],[7],[7],[8],[8],[4],[1],[-7],[4],[-10],[-7],[-3],[10],[-3],[-3],[4],[-1],[4],[5],[-6],[7],[-2],[5],[-1],[-5],[3],[-9],[-5],[10],[-5],[-8],[10],[2],[-7],[-6],[-9],[2],[-1],[1],[6],[-2],[6],[-7],[-2],[8],[1],[6],[5],[-5],[-2],[5],[4],[-3],[4],[9],[-9],[-1],[4],[-5],[-7],[4],[9],[9],[-10],[6],[5],[-5],[1],[-8],[-1],[-9],[7],[5],[-9],[8],[5],[6],[-3],[-10],[9],[-7],[9],[7],[-10],[-9]], dtype = "uint64")#candidate|11995|(225, 1)|const|uint64
const_11996 = relay.const([6.168943,-3.320711,0.523999,-4.064127,-5.362184,3.598575,9.704163,4.652046,-5.990429,9.563474,2.392791,7.870839,-3.780233,4.542058,-5.772657,6.388644,9.852002,3.456488,8.455949,0.027167,-1.010364,-8.612611,2.318566,-5.621667,-0.869168,-7.251280,-9.303302,-4.150643,-3.344640,-8.445646,-1.124927,-2.213281,6.852337,-3.223690,3.943581,-2.153310,8.052413,6.874871,-0.867545,-6.630837,-0.099021,-2.230051,-5.021198,3.347621,1.621462,8.117911,1.337459,1.889460,3.177204,9.194181,3.326780,-7.210188,-1.817683,6.601384,-7.146437,-2.081585,7.211753,1.589162,9.787129,-2.586368,-9.530104,9.789770,7.826938,0.184839,-8.405350,-4.807193,-3.789897,-8.863349,-0.264608,-3.576673,9.775065,8.443670,3.629243,-5.511381,9.121579,0.197616,9.255578,3.459389,0.782689,8.723036,-4.444563,1.640179,6.177360,4.261240,-5.228430,-8.382365,-4.937860,-3.338685,-1.663400,3.016925,3.686621,3.298580,2.926477,4.025213,6.063039,-5.001276,-9.190931,8.915902,-4.105639,-4.396690,-1.694129,-2.962853,-8.558003,-2.583436,-1.189341,1.475785,3.360142,-1.516578,1.841934,4.999261,-6.162657,-3.614357,-8.374081,-2.986024,5.200022,7.907699,8.620611,-3.051989,-0.307291,-8.903083,-3.482005,-2.662191,2.201952,-6.732561,-1.090632,7.591301,-2.480146,-4.369118,0.498906,7.623252,8.191758,-4.054616,-3.465276,-9.892715,-7.212436,4.747143,-0.343507,-5.117940,-8.692900,6.600184,-7.912984,-1.582406,-1.072169,6.641294,5.270228,-9.088078,3.420661,-1.638357,-9.826852,-9.808945,6.093803,6.687067,0.065565,7.656661,5.686002,2.654558,-5.357285,-1.935107,-1.948741,-7.049660,-0.538529,-4.771271,-5.284564,9.295520,5.332331,4.954250,-0.736711,1.156268,-6.300316,5.006240,5.268866,9.485515,-2.338716,-8.272096,-7.350702,7.946036,-6.406599,-3.504298,-7.496241,9.316179,-0.919122,-0.233762,8.524534,-8.901472,7.592314,1.896534,-6.992585,-2.319716,-6.529694,0.211594,1.092777,1.432702,-9.083631,-1.394592,-7.485186,5.867131,-4.477992,2.201966,0.993749,2.676052,0.595840,7.343449,-0.915514,3.249579,-6.969146,8.278783,6.591380,9.861361,-5.631115,-9.249923,0.264615,7.856127,4.994000,-1.081472,8.160046,7.420963,-3.428763,-2.282854,-2.102351,-1.574270,0.976628,8.870993,-9.834308,-2.925044,-6.337014,3.257561,-6.006777,-8.805527,2.564297,-3.593542,-4.557122,-1.631950,-8.100254,0.193526,-8.658140,-6.538765,2.685032,-7.776760,-5.057722,3.000246,2.002754,6.604316,2.739589,4.843481,-6.385752,1.230886,-6.398813,3.515119,4.402605,6.152102,-4.203606,9.177472,7.604045,-7.075165,-9.595653,7.722250,-6.511383,-7.139987,-4.833444,8.767498,8.913900,8.752583,-5.321547,0.649031,-2.490865,0.284360,-8.469771,-3.037678,-9.248754,3.830533,-7.178133,-0.831783,5.020085,0.492337,-8.320725,-6.033496,6.889937,2.869925,2.388518,9.341253,-7.768334,-2.249689,0.316061,-6.314413,4.762337,6.862837,-8.089062,7.602333,-1.803933,7.192678,0.650959,-3.451631,-9.042506,-5.623462,-5.281961,9.613021,-5.943071,7.442547,-8.910108,3.426128,-8.887922,-6.967979,-5.792142,-0.552467,-3.921246,9.569768,-2.170106,-5.960079,-9.583633,-7.468266,5.720088,4.739075,0.109079,2.339484,-3.530796,-9.182359,7.129708,-4.158194,-3.481417,-1.544851,-4.112336,-1.048343,-6.130343,3.237192,7.857057,8.383082,6.187624,-2.486374,-2.219428,6.029125,-9.486356,3.619074,-6.806512,9.270447,-5.578437,1.208937,1.680288,1.079236,-7.988217,-5.567511,-4.930520,-2.556506,-5.757091,7.946794,4.589851,-5.425370,-9.868412,0.217855,0.889220,3.995346,9.613967,-7.639717,-8.489683,-8.310634,1.142006,-8.077897,-1.495304,5.729406,6.154057,1.698867,7.284758,-8.089500,9.850635,-0.420484,-5.341360,7.663423,-2.140116,-0.097549,5.108640,-9.714850,-0.220019,9.761247,1.509340,1.798847,5.241967,5.611502,-2.703814,-1.957778,-9.345853,-7.805306,-5.952596,-9.451864,-0.857667,9.781130,7.453752,-8.585303,-2.757854,-9.653613,-7.730809,-3.567486], dtype = "float64")#candidate|11996|(390,)|const|float64
call_11993 = relay.TupleGetItem(func_2974_call(relay.reshape(var_11994.astype('uint64'), []), relay.reshape(const_11995.astype('uint64'), [5, 3, 15]), relay.reshape(const_11996.astype('float64'), [390,]), ), 1)
call_11997 = relay.TupleGetItem(func_2978_call(relay.reshape(var_11994.astype('uint64'), []), relay.reshape(const_11995.astype('uint64'), [5, 3, 15]), relay.reshape(const_11996.astype('float64'), [390,]), ), 1)
output = relay.Tuple([call_11958,var_11959,call_11961,var_11962,var_11963,call_11965,bop_11977,bop_11986,call_11993,var_11994,const_11995,const_11996,])
output2 = relay.Tuple([call_11960,var_11959,call_11964,var_11962,var_11963,call_11967,bop_11980,bop_11989,call_11997,var_11994,const_11995,const_11996,])
func_12005 = relay.Function([var_11959,var_11962,var_11963,var_11994,], output)
mod['func_12005'] = func_12005
mod = relay.transform.InferType()(mod)
mutated_mod['func_12005'] = func_12005
mutated_mod = relay.transform.InferType()(mutated_mod)
func_12005_call = mutated_mod.get_global_var('func_12005')
var_12007 = relay.var("var_12007", dtype = "uint8", shape = (96,))#candidate|12007|(96,)|var|uint8
var_12008 = relay.var("var_12008", dtype = "int8", shape = (896,))#candidate|12008|(896,)|var|int8
var_12009 = relay.var("var_12009", dtype = "float64", shape = (1680, 1))#candidate|12009|(1680, 1)|var|float64
var_12010 = relay.var("var_12010", dtype = "uint64", shape = ())#candidate|12010|()|var|uint64
call_12006 = func_12005_call(var_12007,var_12008,var_12009,var_12010,)
output = call_12006
func_12011 = relay.Function([var_12007,var_12008,var_12009,var_12010,], output)
mutated_mod['func_12011'] = func_12011
mutated_mod = relay.transform.InferType()(mutated_mod)
func_11690_call = mod.get_global_var('func_11690')
func_11691_call = mutated_mod.get_global_var('func_11691')
call_12020 = func_11690_call()
call_12021 = func_11690_call()
func_12005_call = mod.get_global_var('func_12005')
func_12011_call = mutated_mod.get_global_var('func_12011')
var_12023 = relay.var("var_12023", dtype = "uint8", shape = (96,))#candidate|12023|(96,)|var|uint8
var_12024 = relay.var("var_12024", dtype = "int8", shape = (448, 2))#candidate|12024|(448, 2)|var|int8
var_12025 = relay.var("var_12025", dtype = "float64", shape = (1680,))#candidate|12025|(1680,)|var|float64
const_12026 = relay.const(-6, dtype = "uint64")#candidate|12026|()|const|uint64
call_12022 = relay.TupleGetItem(func_12005_call(relay.reshape(var_12023.astype('uint8'), [96,]), relay.reshape(var_12024.astype('int8'), [896,]), relay.reshape(var_12025.astype('float64'), [1680, 1]), relay.reshape(const_12026.astype('uint64'), []), ), 8)
call_12027 = relay.TupleGetItem(func_12011_call(relay.reshape(var_12023.astype('uint8'), [96,]), relay.reshape(var_12024.astype('int8'), [896,]), relay.reshape(var_12025.astype('float64'), [1680, 1]), relay.reshape(const_12026.astype('uint64'), []), ), 8)
func_8937_call = mod.get_global_var('func_8937')
func_8941_call = mutated_mod.get_global_var('func_8941')
call_12038 = relay.TupleGetItem(func_8937_call(relay.reshape(var_12024.astype('int8'), [4, 14, 16]), relay.reshape(var_12024.astype('int8'), [4, 14, 16]), relay.reshape(var_12025.astype('float64'), [1680,]), ), 2)
call_12039 = relay.TupleGetItem(func_8941_call(relay.reshape(var_12024.astype('int8'), [4, 14, 16]), relay.reshape(var_12024.astype('int8'), [4, 14, 16]), relay.reshape(var_12025.astype('float64'), [1680,]), ), 2)
uop_12044 = relay.sqrt(var_12024.astype('float32')) # shape=(448, 2)
func_924_call = mod.get_global_var('func_924')
func_927_call = mutated_mod.get_global_var('func_927')
call_12050 = func_924_call(relay.reshape(var_12025.astype('float64'), [16, 15, 7]))
call_12051 = func_924_call(relay.reshape(var_12025.astype('float64'), [16, 15, 7]))
bop_12060 = relay.right_shift(call_12022.astype('int64'), const_12026.astype('int64')) # shape=(5, 3, 15)
bop_12063 = relay.right_shift(call_12027.astype('int64'), const_12026.astype('int64')) # shape=(5, 3, 15)
output = relay.Tuple([call_12020,var_12023,var_12025,call_12038,uop_12044,call_12050,bop_12060,])
output2 = relay.Tuple([call_12021,var_12023,var_12025,call_12039,uop_12044,call_12051,bop_12063,])
func_12067 = relay.Function([var_12023,var_12024,var_12025,], output)
mod['func_12067'] = func_12067
mod = relay.transform.InferType()(mod)
mutated_mod['func_12067'] = func_12067
mutated_mod = relay.transform.InferType()(mutated_mod)
func_12067_call = mutated_mod.get_global_var('func_12067')
var_12069 = relay.var("var_12069", dtype = "uint8", shape = (96,))#candidate|12069|(96,)|var|uint8
var_12070 = relay.var("var_12070", dtype = "int8", shape = (448, 2))#candidate|12070|(448, 2)|var|int8
var_12071 = relay.var("var_12071", dtype = "float64", shape = (1680,))#candidate|12071|(1680,)|var|float64
call_12068 = func_12067_call(var_12069,var_12070,var_12071,)
output = call_12068
func_12072 = relay.Function([var_12069,var_12070,var_12071,], output)
mutated_mod['func_12072'] = func_12072
mutated_mod = relay.transform.InferType()(mutated_mod)
func_11553_call = mod.get_global_var('func_11553')
func_11554_call = mutated_mod.get_global_var('func_11554')
call_12136 = relay.TupleGetItem(func_11553_call(), 0)
call_12137 = relay.TupleGetItem(func_11554_call(), 0)
uop_12156 = relay.sinh(call_12136.astype('float64')) # shape=(8, 13, 1)
uop_12158 = relay.sinh(call_12137.astype('float64')) # shape=(8, 13, 1)
func_8937_call = mod.get_global_var('func_8937')
func_8941_call = mutated_mod.get_global_var('func_8941')
const_12162 = relay.const([-7,-10,-1,1,1,-7,-3,-5,2,-2,1,-4,-1,-3,2,-8,2,8,-4,7,-1,8,-7,10,9,6,1,10,-10,8,5,-10,5,2,7,5,-4,-1,-7,10,4,-7,7,-6,2,-10,-1,6,10,-3,5,-4,-2,2,5,-7,-10,-3,-2,6,2,-3,-8,-9,4,5,2,2,6,5,-6,2,7,-4,2,-4,-6,9,5,2,10,1,-1,-5,-7,-10,-3,10,6,10,2,4,3,1,3,-7,3,4,3,10,-10,-4,1,-4,7,-4,-1,6,6,-2,-1,4,9,7,-7,-1,-5,3,-8,-4,-2,4,9,-7,-9,5,-10,-3,7,10,-7,5,7,-10,5,-1,-2,-10,7,9,-8,6,-3,8,1,6,-10,-1,-8,-5,-5,-10,3,10,-9,8,3,-7,4,-8,5,2,6,-6,4,-7,-10,-6,7,5,-4,7,-6,6,2,-5,-8,2,-2,-8,2,5,-10,-4,-8,-7,1,-2,8,7,1,-7,-10,-5,-9,-1,8,-2,-9,-7,5,-1,-8,1,2,6,-1,4,-3,-8,-2,3,6,-8,2,-4,-1,-1,-10,5,-4,5,5,9,-10,2,7,-2,3,-10,7,-1,-10,7,9,-2,-4,-8,-6,-9,-7,8,8,-7,-2,-5,-10,7,-3,8,6,-4,-6,-9,3,-9,-9,-2,-7,-8,-5,-7,-1,3,-9,-5,10,5,-2,-8,-10,-5,4,-6,8,1,6,6,-4,-3,-9,-8,-8,7,-5,6,2,6,1,-10,-5,10,-10,-3,5,-7,-4,5,8,-3,7,-10,-1,6,8,10,-8,7,1,4,5,2,6,1,-1,7,-4,-6,3,10,1,-5,2,-9,-3,1,-4,-7,-2,2,-5,-1,6,-5,-3,-10,-4,-3,8,-1,5,-9,5,-7,6,-10,10,9,1,5,-10,-6,2,3,3,3,8,-7,9,1,5,6,3,3,1,5,7,-6,-3,8,-4,4,-4,4,6,9,-7,9,4,3,4,-9,-1,7,-5,-10,8,1,-6,5,2,-3,3,-8,-6,2,-1,10,-5,6,5,-9,3,-7,6,-10,10,-7,5,-7,6,-4,8,9,-2,1,2,-10,-9,1,-1,-4,-4,1,6,-4,-7,9,2,-9,2,10,2,-6,-9,8,10,2,-1,-3,2,9,-6,7,6,-10,7,-2,-4,-2,7,-4,2,-1,2,9,-1,-5,9,-5,-9,-5,7,-7,-10,-3,-1,-4,-6,5,8,1,-6,-6,-10,2,-6,-8,-8,5,8,-5,-6,1,3,-1,1,2,-10,-2,9,-2,5,-1,6,1,3,-2,-6,-2,-6,1,5,-5,-2,-5,-1,8,-6,-8,-5,6,-6,7,-1,10,4,-5,3,-3,-6,-7,-7,4,-6,-6,3,8,-2,1,6,1,3,8,-5,-2,-1,-10,4,10,6,10,1,9,5,-5,1,2,1,9,-10,10,8,8,4,3,-7,9,2,-9,8,-9,-1,3,10,-1,3,-4,1,-4,-3,3,1,-7,-10,2,-4,6,-4,9,-1,6,2,-6,3,8,-8,-5,-4,3,-3,-3,6,10,10,-5,10,6,3,-4,3,-4,2,-3,-6,-2,1,-3,7,-8,5,-8,7,8,8,-10,-4,6,-6,2,-3,-10,-10,-3,8,-3,-7,9,-7,-5,9,-9,-10,10,-2,-9,-9,-1,-1,5,8,-4,9,6,-2,-2,-6,5,4,1,10,-2,6,7,10,1,-7,10,10,-1,-8,-5,-4,8,8,3,-9,8,-10,5,6,-5,-10,-1,10,-3,7,-3,-10,8,-10,7,-5,7,1,-5,-9,-4,-5,9,8,-6,-4,5,-9,2,-3,-1,8,-6,-9,8,3,-6,8,6,1,-3,2,-7,-3,2,-1,-6,8,-10,5,4,-9,-6,8,-4,-5,-2,-9,8,9,1,3,-1,-1,8,8,-4,2,5,-2,-7,-10,-4,9,2,-3,9,10,5,-8,7,-6,-2,-1,-8,-8,1,-5,4,8,1,-8,-7,8,-10,-6,-4,-10,-1,-3,-5,4,-6,3,-3,7,4,4,-6,3,1,-2,2,-1,-2,-1,-7,3,4,-7,-8,-10,-2,2,-9,1,-8,6,7,-4,4,-6,-10,6,6,2,-8,4,9,5,5,-7,-10,-3,-10,6,2,-7,-2,10,-6,1,5,3,3,1,5,1,8,-4,2,-4,-5,-1,-4,4,1,6,-1,1,9,2,-9,3,8,8,9,-6,-3,-3,6,-6,5,5,1,1,-8,-5,-7,-6,6,-5,-4,-1,-6,3,-2,-8,-3,4,-1,-7,10,-7,10,2,-5,-3,7,-7,10,4,-3,10,9,3,1,-8,1,9,-7,7,7,-3,8,9,2,-2,8], dtype = "int8")#candidate|12162|(896,)|const|int8
var_12163 = relay.var("var_12163", dtype = "float64", shape = (420, 4))#candidate|12163|(420, 4)|var|float64
call_12161 = relay.TupleGetItem(func_8937_call(relay.reshape(const_12162.astype('int8'), [4, 14, 16]), relay.reshape(const_12162.astype('int8'), [4, 14, 16]), relay.reshape(var_12163.astype('float64'), [1680,]), ), 1)
call_12164 = relay.TupleGetItem(func_8941_call(relay.reshape(const_12162.astype('int8'), [4, 14, 16]), relay.reshape(const_12162.astype('int8'), [4, 14, 16]), relay.reshape(var_12163.astype('float64'), [1680,]), ), 1)
bop_12167 = relay.subtract(uop_12156.astype('int64'), const_12162.astype('int64')) # shape=(8, 13, 896)
bop_12170 = relay.subtract(uop_12158.astype('int64'), const_12162.astype('int64')) # shape=(8, 13, 896)
output = relay.Tuple([call_12161,var_12163,bop_12167,])
output2 = relay.Tuple([call_12164,var_12163,bop_12170,])
func_12182 = relay.Function([var_12163,], output)
mod['func_12182'] = func_12182
mod = relay.transform.InferType()(mod)
var_12183 = relay.var("var_12183", dtype = "float64", shape = (420, 4))#candidate|12183|(420, 4)|var|float64
output = func_12182(var_12183)
func_12184 = relay.Function([var_12183], output)
mutated_mod['func_12184'] = func_12184
mutated_mod = relay.transform.InferType()(mutated_mod)
var_12226 = relay.var("var_12226", dtype = "float64", shape = (9, 4, 10))#candidate|12226|(9, 4, 10)|var|float64
const_12227 = relay.const([[[9.514188,1.770156,-4.471134,-4.900010,-1.659562,2.102072,-6.318655,-1.449529,-6.327124,-0.609648],[8.632713,5.927835,-2.024500,6.292932,1.135968,-2.680747,-2.448861,-4.806876,9.265482,-5.378131],[0.170898,-7.495439,-1.206220,4.293972,-4.247276,9.237408,0.864924,9.072611,-4.201567,-4.178529],[-7.595036,6.651850,-2.981208,3.788582,-2.478488,6.056546,6.662021,-1.306605,-4.269910,-7.187047]],[[2.014586,-7.589368,3.374126,-3.767741,-2.050175,4.444438,-6.732209,9.704646,-0.963748,-1.724253],[-7.428939,-5.971567,-6.278859,-6.775572,9.352774,3.857534,-3.500608,9.344243,-2.831553,-2.204906],[-4.769510,6.298094,-6.884579,4.765763,3.108054,4.103626,0.904800,3.189594,-6.808127,3.618431],[6.575747,0.448525,-4.738143,5.246922,-4.519052,-4.852016,6.411358,2.152005,-2.613986,-0.749897]],[[6.665313,-7.356536,4.602411,-6.204687,7.746584,8.810231,-0.880739,-7.667574,-4.912887,3.298009],[2.816500,1.831376,3.536480,-9.990949,-5.723469,8.082717,4.131979,-2.602453,-4.823375,-1.218626],[-4.938543,-1.463343,-5.753073,-5.271235,-7.068925,-2.406357,0.679408,-7.401992,-0.414548,-9.941805],[5.660196,-7.790501,4.375790,4.429698,0.081140,5.139791,-6.330338,0.517866,6.098046,8.648051]],[[0.166637,3.259686,2.336803,-9.291889,0.278039,-7.668035,-9.454999,9.545093,-1.794486,6.734197],[-6.714362,0.267222,-0.797086,-4.636128,-0.307097,6.309637,4.725529,-3.097638,-3.110888,-9.959289],[-1.824040,-4.506037,-0.606234,-2.899596,2.870251,-5.448709,6.011335,-9.978950,-0.673045,5.745061],[-1.200084,0.687531,6.382613,-6.912242,-7.565559,7.008074,-9.507769,5.590926,6.512111,9.116308]],[[-8.509797,5.702006,8.102944,4.858985,-5.104029,1.689582,-3.294457,-8.023739,-4.938258,2.293537],[3.279701,2.152355,2.572297,-8.425036,0.891454,4.373694,-1.205190,3.267672,-3.466559,4.304818],[2.171421,3.859815,9.408155,3.699364,-3.631747,-9.973762,-5.270450,6.378292,6.142918,-2.068848],[8.793186,-8.978049,-9.904181,-6.750776,-8.935181,4.493247,-2.426806,6.591747,-4.392905,6.574901]],[[-9.673046,5.003869,-0.116409,-2.332115,-1.666695,-2.829675,-7.565447,2.154185,-4.846566,1.973730],[-7.296795,-0.622884,4.791455,-1.464229,-0.687788,-2.645483,-8.628197,2.932238,5.880321,-0.912641],[9.622232,2.007381,3.138494,-1.038457,-4.777016,-2.764784,8.106265,3.344355,9.542114,-1.748149],[-3.190222,-1.694679,-3.335939,2.935719,0.904299,-8.665167,-9.995843,-7.706850,-2.566424,8.729323]],[[-1.522856,8.300049,-2.922313,-8.049676,5.467308,9.087869,5.867598,-7.940507,-1.182106,0.114335],[7.869098,-9.497130,-2.956925,5.208466,8.171635,3.979294,-3.006923,1.875974,-7.958408,-0.022996],[7.958068,3.890699,3.832575,-9.165156,5.321957,6.685338,1.603467,-8.739294,-1.682635,1.023638],[-0.410956,1.980613,6.992191,8.233053,-5.688386,0.969587,8.984499,4.667600,-8.432217,-7.389894]],[[6.521232,-8.013676,4.004277,-6.825796,-1.337817,-4.839980,1.529552,-3.429889,-5.716173,-7.168551],[2.701811,-3.379992,-3.760013,-9.859843,-1.140436,-1.553400,-8.444778,-6.552795,1.007398,-2.121842],[-0.941163,-8.750737,-3.536512,1.196965,-9.991545,-4.826590,5.164573,-4.469458,-7.550022,5.449043],[-8.790011,-4.712956,-7.613078,-9.087878,-1.374228,-1.701324,7.671849,-1.024651,5.304922,2.844983]],[[4.136052,9.093053,-8.470546,-2.801683,-7.821147,4.779944,8.363562,-0.578165,8.310317,5.279131],[5.515586,-3.796374,-7.389128,-4.563354,-8.330136,4.753314,8.524024,5.234487,-8.250241,-1.543789],[5.090347,9.288034,-9.770244,-1.504972,4.912241,5.049422,7.231628,9.760039,-8.158548,3.337185],[0.066499,-4.948469,-6.880159,9.326683,2.413995,7.710587,0.649683,9.934570,-1.764533,5.489121]]], dtype = "float64")#candidate|12227|(9, 4, 10)|const|float64
bop_12228 = relay.floor_mod(var_12226.astype('float64'), relay.reshape(const_12227.astype('float64'), relay.shape_of(var_12226))) # shape=(9, 4, 10)
func_11662_call = mod.get_global_var('func_11662')
func_11665_call = mutated_mod.get_global_var('func_11665')
var_12233 = relay.var("var_12233", dtype = "bool", shape = (84,))#candidate|12233|(84,)|var|bool
var_12234 = relay.var("var_12234", dtype = "bool", shape = (1344,))#candidate|12234|(1344,)|var|bool
call_12232 = relay.TupleGetItem(func_11662_call(relay.reshape(var_12233.astype('bool'), [84,]), relay.reshape(var_12234.astype('bool'), [6, 16, 14]), ), 3)
call_12235 = relay.TupleGetItem(func_11665_call(relay.reshape(var_12233.astype('bool'), [84,]), relay.reshape(var_12234.astype('bool'), [6, 16, 14]), ), 3)
func_8937_call = mod.get_global_var('func_8937')
func_8941_call = mutated_mod.get_global_var('func_8941')
const_12238 = relay.const([8,-5,7,-6,5,-2,6,-3,9,-1,8,5,5,-5,7,-6,-1,1,-4,-8,7,-5,4,-5,1,9,-3,5,4,-10,3,9,8,4,7,8,-2,8,10,10,-7,-3,5,-10,-2,-1,6,-1,-10,-4,-4,2,7,5,-1,-9,4,-1,-9,-10,-3,6,-3,-6,1,-9,-6,3,10,9,3,-2,-9,7,-5,-1,-10,-2,5,3,9,10,-4,7,1,3,-5,2,-9,-3,8,5,-2,-8,-6,-10,-4,10,-5,1,-6,-1,-1,-6,2,5,3,7,-10,2,-7,-10,-3,8,-1,4,-5,-10,-8,7,6,-1,3,-4,-2,-6,9,9,-10,9,-7,-1,-8,9,7,-7,7,2,5,-10,2,-5,5,2,2,-9,4,3,4,7,7,4,1,3,-2,4,-10,5,-4,1,8,-7,3,-6,10,-8,-9,-1,6,8,-7,-4,-3,2,-5,5,6,-6,10,6,7,-6,-4,-7,-3,2,9,-8,-2,2,-5,1,-7,-10,10,6,8,2,-1,6,-7,-5,-2,-1,-1,-4,-9,8,3,-2,4,8,2,-5,10,6,-8,4,-3,-6,9,3,-6,-6,10,10,8,5,-10,4,2,9,-2,-1,9,9,9,8,4,-2,3,-6,2,4,2,3,-7,-3,5,-4,-1,-6,7,-6,9,-3,2,5,1,-5,7,-6,-8,3,-10,2,10,-4,2,-5,-9,-3,-10,-4,-10,-5,-5,-9,-9,-8,9,-10,8,5,-5,-10,1,-5,2,5,8,-8,2,-8,2,-9,8,2,-5,-5,-7,7,8,2,-1,3,8,4,1,-10,10,3,-9,5,2,-6,-6,-9,-5,6,10,7,3,10,5,-4,-9,4,-2,6,10,-2,-5,3,-4,5,-10,-1,-6,-4,3,10,7,-2,5,-2,1,5,5,-3,-7,-2,-3,-2,6,-3,-4,-10,9,9,-1,-10,4,-8,3,9,-2,-9,-8,5,6,2,3,2,-6,-5,-1,1,10,8,1,-3,10,7,2,-3,-3,8,-7,-7,1,-1,-7,-10,4,-8,7,7,3,7,-7,4,5,6,-4,6,5,10,2,8,-9,-10,-10,-6,-10,-8,3,-6,6,10,-7,7,-6,5,-6,5,-9,-2,1,-2,10,7,-4,4,9,1,-10,7,3,5,4,7,-2,-2,8,3,6,3,-5,1,1,-9,10,9,9,-5,2,8,-4,9,6,1,-2,-3,3,2,-6,7,10,-9,9,-3,7,-7,4,2,9,-4,-10,-9,-9,-7,3,-8,9,1,-3,-9,8,3,1,1,-1,-3,2,-3,5,5,-5,3,2,10,-10,8,-4,-9,-6,-6,-7,-9,-1,9,4,5,9,-5,-2,8,5,-10,-7,-7,1,-2,-4,-5,-5,2,8,-1,5,-8,1,9,-2,-7,9,-3,-7,7,8,-6,-6,-4,-6,-1,-3,8,-3,-1,7,3,2,-6,-3,-10,-7,-5,7,-9,-8,-3,-7,6,9,6,-7,-2,5,10,1,8,-8,-2,4,-7,-10,-3,3,-9,-1,8,4,-7,-8,-6,8,-10,10,-9,-1,-7,9,10,-3,4,-5,-2,-2,7,-7,-2,8,-9,-4,-3,5,6,3,-5,6,-8,2,10,-10,-8,10,10,-2,6,-9,10,2,7,-3,-2,4,10,2,1,-4,7,-9,-4,7,-6,3,-10,2,-10,2,4,4,1,5,-7,1,5,-2,2,10,-4,3,-6,3,-10,8,2,-9,7,7,2,-10,9,-5,9,-6,-8,1,4,10,9,-9,3,4,-1,-5,-8,-2,-5,5,-4,-1,1,-8,5,8,-7,5,-4,-9,-9,-10,9,3,2,-2,-2,-1,-4,-6,7,1,9,-4,-4,-8,1,-9,1,-6,1,-9,10,3,-7,3,5,7,-1,-8,8,-7,5,9,9,9,3,2,-8,-7,8,-10,-5,8,10,10,-2,-6,2,-5,3,10,1,-9,-9,-5,-8,9,-2,7,2,9,-4,-3,2,-9,9,3,3,9,10,-10,-9,-10,-5,10,-6,-1,7,9,9,6,-7,-8,-1,-4,-2,-7,-3,-9,-6,4,-1,-2,-9,8,9,6,3,10,-4,4,9,7,10,8,9,8,7,6,3,3,-10,-1,4,6,6,-4,-1,6,-8,-9,-6,-5,-9,10,7,-7,2,-1,-9,-4,8,9,8,-3,10,1,9,1,-9,1,6,-4,-5,-7,-1,-1,-1,-8,-6,5,-3,1,4,-9,7,-10,9,3,8,-10,1,8,10,2,9,1,6,3,8,-5,-5,7,-1,-7,10,-8,7,-4,-3,4,-2,3,8,9,1,10,1,7,-8,8,2,-9,-1,-5,-7,-6,5,-8,7,-9,-3,2,8], dtype = "int8")#candidate|12238|(896,)|const|int8
const_12239 = relay.constdtype = "float64")#candidate|12239|(84, 20)|const|float64
call_12237 = relay.TupleGetItem(func_8937_call(relay.reshape(const_12238.astype('int8'), [4, 14, 16]), relay.reshape(const_12238.astype('int8'), [4, 14, 16]), relay.reshape(const_12239.astype('float64'), [1680,]), ), 1)
call_12240 = relay.TupleGetItem(func_8941_call(relay.reshape(const_12238.astype('int8'), [4, 14, 16]), relay.reshape(const_12238.astype('int8'), [4, 14, 16]), relay.reshape(const_12239.astype('float64'), [1680,]), ), 1)
output = relay.Tuple([bop_12228,call_12232,var_12233,var_12234,call_12237,const_12238,const_12239,])
output2 = relay.Tuple([bop_12228,call_12235,var_12233,var_12234,call_12240,const_12238,const_12239,])
func_12249 = relay.Function([var_12226,var_12233,var_12234,], output)
mod['func_12249'] = func_12249
mod = relay.transform.InferType()(mod)
var_12250 = relay.var("var_12250", dtype = "float64", shape = (9, 4, 10))#candidate|12250|(9, 4, 10)|var|float64
var_12251 = relay.var("var_12251", dtype = "bool", shape = (84,))#candidate|12251|(84,)|var|bool
var_12252 = relay.var("var_12252", dtype = "bool", shape = (1344,))#candidate|12252|(1344,)|var|bool
output = func_12249(var_12250,var_12251,var_12252,)
func_12253 = relay.Function([var_12250,var_12251,var_12252,], output)
mutated_mod['func_12253'] = func_12253
mutated_mod = relay.transform.InferType()(mutated_mod)
func_11553_call = mod.get_global_var('func_11553')
func_11554_call = mutated_mod.get_global_var('func_11554')
call_12277 = relay.TupleGetItem(func_11553_call(), 0)
call_12278 = relay.TupleGetItem(func_11554_call(), 0)
func_12182_call = mod.get_global_var('func_12182')
func_12184_call = mutated_mod.get_global_var('func_12184')
const_12289 = relay.const([6.254574,-5.953255,7.252825,3.102385,1.080315,-8.011257,0.985028,-4.990147,9.251782,-1.679720,-6.548778,3.799759,-0.831565,-2.425586,-7.955225,-9.859001,8.438133,-3.371248,-5.521437,5.748653,-7.895131,-0.688683,-7.914343,-3.287576,2.100965,4.812467,-7.390703,7.509578,-0.529897,1.274460,1.799692,-1.408752,-4.805973,9.525678,-7.393051,2.916938,-4.205559,8.601582,-5.191845,-0.308058,-3.587672,-7.166903,8.773160,0.756594,2.876032,-9.960355,-6.335206,-9.521394,7.541943,8.059475,-6.754873,0.659196,5.477653,4.812881,-7.351991,9.490399,4.183957,8.363301,2.466694,-5.490517,3.356892,9.405126,3.957318,1.643743,-9.179128,6.724061,1.413531,0.573837,2.805333,-0.279407,7.430880,-9.169386,2.047263,2.336118,-2.043010,-9.136712,-5.000433,7.121832,5.344557,7.544730,-2.212894,-0.878359,0.218665,-0.063363,-5.611072,-0.582359,-2.511275,0.617820,-5.898581,-4.230885,-6.968876,6.530303,-1.767617,3.238452,4.806475,5.040290,8.309806,5.233538,-9.669248,8.635803,-8.506983,-7.412617,-1.190057,9.818398,-6.886533,6.540786,-5.825713,2.767041,4.110906,-1.873720,5.856947,-8.864785,1.342301,0.453841,0.772104,-9.443534,-9.046211,-5.278169,-2.049456,-1.743395,2.175037,-5.154275,-5.786909,8.123282,-3.582320,-2.373165,6.509253,-2.340791,-4.699162,-6.415231,-8.786692,7.153033,1.542793,8.604270,0.425144,-0.151223,3.293679,-4.287255,9.865954,3.398573,9.791220,3.511944,9.930213,5.556893,-9.123593,3.209576,0.085997,7.026136,4.273209,-7.244936,-0.288415,4.881944,9.978235,2.316234,7.866054,-1.212797,-3.915189,-9.950850,5.886113,4.652066,4.042242,-4.788102,-1.424192,-6.385857,-3.691039,-4.181361,7.532638,-7.048329,-4.600693,4.435758,2.329868,-3.423193,-4.883929,6.858926,8.157270,8.144712,0.314125,4.422037,8.468361,0.920765,-8.023862,2.705395,-3.246866,6.698140,4.401903,-2.317262,-5.515692,8.347154,0.080889,1.743260,4.696524,-2.658757,-2.736687,-8.844142,5.342283,-7.301262,-8.274949,3.363463,5.401388,5.897075,-3.037070,3.058121,-8.302379,3.681169,7.419144,-0.788446,3.346445,-8.121266,-3.727936,9.034166,-5.350234,-9.132887,1.636010,6.474652,-6.103321,-6.111495,5.047501,2.377277,-2.977400,4.212866,4.350519,-0.072270,-5.879052,2.912769,-3.816532,-9.047415,-6.421136,3.611436,3.170843,-1.854597,7.957478,-3.570400,6.958495,-9.438314,-6.957277,6.185057,-1.752766,-0.813556,-6.546378,9.176833,-0.323176,-1.133373,-4.101555,7.928618,-1.505680,0.545325,-2.493330,-7.914734,-6.699657,4.437326,6.073522,-8.190607,-8.208942,-5.852011,-7.633943,5.786728,-6.535405,7.333320,1.341587,-3.601187,3.279154,2.211838,5.073470,4.416234,0.207591,-5.396344,2.371352,-0.017799,0.673262,3.072194,-4.989839,-6.093080,-3.313933,-5.782927,-2.093233,6.746695,-6.243204,3.311868,4.869035,9.332640,4.195352,8.037231,1.148571,8.823527,-5.232201,-9.625346,8.525898,7.868958,2.774535,-9.458249,-0.664340,3.130355,-2.690069,-1.703882,8.374091,-9.680820,9.933877,2.996828,8.252349,5.206898,5.415290,6.320551,5.732418,-4.014632,-3.084083,-8.457033,6.915221,2.475217,1.186841,4.725933,-9.182776,3.514341,4.500823,-4.716038,4.524089,-1.716364,1.480640,-1.880963,1.528647,8.438552,7.967965,-4.713390,2.143758,-7.974811,-3.403272,6.541137,-6.123606,-8.038729,-9.937215,-7.328665,7.061061,-6.275826,-8.037903,9.907250,-4.765917,2.645040,-2.992073,-7.701969,-7.183943,-0.677283,-0.639886,3.464579,9.742088,-2.799324,-0.282606,6.853501,1.919816,-8.502687,-6.857304,9.237363,2.255482,-8.687905,8.533450,4.344571,-9.073091,-8.145946,-1.015614,8.066890,8.912783,0.269715,-0.602200,3.284368,-0.340575,-6.691705,2.023398,4.973480,-4.753282,2.675572,-0.380810,5.606269,-8.831877,6.851196,1.695046,-7.461800,-2.683287,-7.497833,4.880360,2.073680,-6.088091,-8.197961,3.040125,-7.541273,-1.278522,6.818084,-7.045020,3.811171,-3.258074,1.309358,7.924357,1.281969,8.481327,-4.827346,3.403157,8.633667,7.645232,-1.003432,8.903781,6.132477,-4.669489,3.589656,1.928212,7.182958,6.074977,-2.281536,0.406621,1.864826,9.616526,4.288003,4.753162,-5.539580,-3.990310,8.608287,1.722897,3.674200,-6.421010,9.277882,6.318287,0.750405,1.598302,3.634632,3.507354,-4.758912,7.870143,-3.342435,-5.133255,6.558334,3.215137,-5.717774,1.688390,-0.433409,-9.149647,-8.921548,-3.770677,5.596159,3.062660,-8.869103,6.891425,7.249478,-4.234271,3.554168,5.915507,-9.313987,3.325189,1.997927,-1.063054,-6.443587,1.141357,1.155415,2.233224,-3.682477,3.532356,8.700382,9.444943,5.888220,-6.534788,-3.190766,-7.171123,-0.689713,3.895183,-0.657309,0.530319,6.757680,9.341683,3.598814,3.297740,7.851053,-5.050648,3.149534,-9.135520,-8.039436,9.668910,-9.392900,4.590150,9.187407,-1.754441,-1.824098,9.455929,0.956522,-5.585283,6.438977,-4.393291,8.127009,1.498590,-3.807424,1.929218,9.230924,7.982888,-1.009172,-2.039495,5.906990,-9.526691,7.548187,7.869474,-1.847847,7.549360,3.671402,1.810707,-6.832863,3.005111,-1.759703,8.383179,1.871619,4.650737,4.733549,-4.665515,-9.018141,4.880344,-8.928440,-6.884212,-5.031224,-1.636143,8.996187,-7.846579,-4.478251,-9.686295,2.261133,-7.639413,-5.266325,-5.217214,-7.286761,6.569346,7.360681,-2.183465,6.315564,6.947370,-1.601728,-5.661970,8.286458,4.709607,-9.623571,-7.270701,-5.615128,7.769967,-4.123888,-7.496887,-0.732100,2.399054,-1.160612,0.364081,1.602419,-2.130741,-1.212622,1.049453,6.191212,4.724151,5.327274,3.274817,7.749877,-2.324079,1.516861,-9.084584,-8.472781,1.312484,6.099229,4.095884,5.183641,-4.721071,-4.769356,9.759070,-5.614180,9.804963,-2.673991,2.654570,8.002566,4.337539,7.605602,-3.200570,-2.107688,-4.239600,-2.237536,-0.937765,6.024029,9.033014,-1.688539,-3.663923,-4.516993,-4.229929,-5.056768,-7.220761,-2.926064,-4.696759,2.531160,0.612520,0.444148,9.589061,9.192353,4.023224,-6.363429,-0.238885,-5.570799,2.994050,9.112732,5.340061,-8.252608,5.995097,-1.077363,-7.037822,7.236350,4.759439,5.194740,-5.822474,-6.098568,-3.361106,1.570062,0.956088,2.089755,-5.522130,6.406779,-5.822538,1.938230,-1.044223,-0.699664,1.050176,-2.192901,-6.182414,6.863482,9.876017,-4.728537,-3.742636,-2.178085,4.106050,-3.997723,-9.588539,-0.322453,3.591371,1.532902,0.064728,-4.610695,3.080599,3.729161,5.278184,-3.132334,-9.633665,-5.283587,-3.235001,-8.645242,-5.687892,1.988536,-5.747115,8.409318,9.516324,7.846845,-4.319118,4.986134,9.825286,2.760201,8.168933,1.190284,4.792034,-1.804621,-3.014023,5.298361,-4.121858,-4.832664,-8.261648,-2.847102,-7.458621,-4.908502,-2.377657,-1.080281,-2.675699,-7.862627,6.908235,1.094947,0.493344,7.351607,8.742318,-6.927854,5.365891,-1.743713,-9.604565,-8.234183,6.569996,-8.680615,-6.005066,2.507575,-9.297055,5.017556,4.203322,-1.492662,-9.905761,-3.204268,8.850336,7.257495,8.860964,-3.600173,3.897985,-0.013726,-6.536940,-3.573834,6.345621,3.754281,1.578929,-1.975945,-6.712490,3.495985,-8.908644,-5.939468,-1.676804,-7.471845,6.468585,2.322387,9.727344,3.634979,-7.009369,9.143975,6.484969,-8.318315,6.968296,2.634564,5.403421,-5.568985,7.960984,9.660374,8.831516,9.670182,9.143536,8.396962,7.510245,-7.816331,-5.182197,2.382911,-3.928743,-1.576889,-2.496893,4.880183,-4.095933,4.625758,-3.447419,1.860013,6.889412,9.637525,5.533846,3.715594,5.782246,8.185376,8.910128,-8.349807,-9.005336,3.922523,-3.655996,-7.639738,2.131881,-8.374587,2.447775,0.515498,4.052118,8.402570,6.687223,8.753308,-2.637410,-3.699454,3.230613,6.717913,3.258757,5.625165,-0.100358,-2.441538,6.140666,5.379301,-6.327366,6.900203,9.595396,-7.820937,-2.625754,-6.617868,-2.487933,-4.985033,1.237220,7.230040,2.919164,-6.299652,8.124667,3.462651,-7.109193,9.325742,2.328980,-5.131140,9.072181,0.887452,-7.090112,-1.667245,-9.125914,-8.427085,-2.414427,-0.962346,-4.858901,6.755852,1.114413,6.977826,-6.405656,-4.837681,2.491132,-4.691865,9.656793,-3.988281,3.751528,4.923461,-3.494578,1.825470,0.111371,-7.206130,7.160320,5.998996,-1.054217,-8.161093,2.595024,-0.359700,3.729308,8.446669,-5.092567,-8.917640,-3.216906,6.516228,6.764734,-5.051973,-2.580350,9.746870,-9.761639,-0.223814,9.096888,6.925256,7.104803,7.605126,6.071989,0.005626,6.815555,6.429562,4.077544,-7.910537,-4.113086,-6.206355,4.630109,-5.498361,-0.521207,-6.594286,9.616571,6.530787,8.537741,2.490271,7.158447,-5.904929,-7.942676,2.980994,-9.866038,-2.297395,-9.508880,1.423438,-3.924146,8.835945,-0.490724,-5.515661,-0.453686,-5.237039,8.346374,-9.095262,-9.569617,2.124816,-6.781909,1.787315,-5.337343,6.097227,-2.522306,-4.943477,-1.122478,1.290314,7.195951,-0.605309,7.484749,1.116283,-3.457424,-2.326328,-5.232878,8.642723,-5.189409,9.114170,8.712785,7.219501,0.899024,-8.254893,2.675090,-4.589523,-1.618111,-3.026935,3.573914,-5.962556,1.500526,-0.219413,-8.905942,5.119988,-0.702739,0.795101,4.015474,1.639294,-9.656704,0.871653,-2.560857,-0.519643,-3.282248,-8.930776,-8.718029,-5.682153,6.157951,6.896334,-8.046555,-1.330927,9.842518,-5.843691,-1.812385,6.437382,-9.463216,2.707130,-8.011259,2.840774,-8.815451,-6.251230,-2.267043,3.671438,3.715167,4.378781,0.558112,7.143891,0.335800,6.725848,6.965138,-5.333740,5.928311,-4.979471,0.228382,6.275252,-7.374743,-2.268613,-1.085146,-5.191766,-1.994643,3.049889,-5.205164,-8.085869,7.700862,5.537347,-1.622807,-6.167854,2.249422,0.960440,-9.843685,0.521460,-2.425222,6.989474,3.692216,-6.404004,0.607190,1.306465,-9.055289,1.303552,7.798860,7.537175,-0.755923,-4.822980,-7.905793,-5.667731,-8.339422,6.770301,1.281457,6.173321,0.769911,-9.346979,7.511987,-0.085232,2.895805,7.034527,-0.291071,-6.780826,-9.556171,5.077203,-3.965010,7.363618,3.340117,9.701740,5.327864,3.644947,-4.352185,2.189132,8.728474,-4.401088,1.492623,4.251607,-7.292228,-1.421173,-8.398109,0.880219,8.540414,0.464480,-0.244567,8.530178,4.892696,-3.881523,-4.011891,-0.637350,4.328599,-6.006643,-2.049320,-1.997198,3.595439,-0.796168,-0.210304,-8.898099,-8.114522,-0.726093,-1.150283,5.941723,-8.139160,-6.986450,6.247318,-7.125231,8.626103,-5.589316,6.579374,-3.749207,6.566021,-8.211046,-8.238178,-3.313087,0.096778,8.385836,-8.692651,0.312156,-2.008194,-2.531135,-6.694763,-4.132781,9.110197,-8.749856,-9.376385,-7.763750,0.395925,5.189032,7.307853,-1.996745,4.622645,0.952141,-3.965325,-4.146205,-8.058651,1.570839,-3.277418,-7.982308,-8.226842,-5.851363,1.742289,-9.314597,6.164227,-6.009501,3.645808,3.147789,3.909122,4.206109,-8.015749,-0.921978,-1.862179,9.040303,-8.166843,-9.359166,-3.599237,1.498440,3.148945,-0.447081,0.916844,-8.760024,-9.130895,0.685772,-8.294246,4.199084,5.308740,5.270845,1.982438,-0.295850,-4.088932,-1.435845,6.923844,-2.520159,-9.590082,5.158866,8.976644,-2.829299,-6.909649,7.651597,-5.318450,9.958078,0.419116,0.879877,9.325723,-7.065731,1.622073,6.545790,-7.576842,2.949820,-2.601749,-5.357436,-7.358858,2.785319,4.693235,6.209148,-9.729408,0.872595,9.524898,-9.813428,-7.817751,-2.341665,-1.298106,-3.157699,9.959395,4.705879,-5.829266,-3.145364,-5.401248,9.691411,-5.900569,-5.029709,0.546050,-9.275650,-3.252400,-9.991892,7.585621,-2.863371,-5.878828,-1.472195,5.743577,1.870960,-2.719077,-6.500873,-4.348218,-4.541045,6.337069,5.785861,-5.085448,3.713390,-8.066638,4.180445,9.351611,9.111479,-4.389880,0.020313,5.902984,9.774287,-6.649763,3.710447,-3.593558,-3.341342,-1.956953,-5.108403,3.762691,8.401563,7.738396,-9.243236,5.294765,-1.992814,5.332700,5.262567,9.837697,-6.406451,-8.333657,-3.339486,4.221169,-0.306969,-4.753176,-4.553316,6.260724,0.006572,-9.378175,3.722051,-7.547916,0.700809,6.806176,-5.540145,-8.594028,5.451456,-7.437042,2.263033,-1.536888,9.365646,-2.205950,-1.476458,-2.719288,3.812706,7.371667,-7.261495,-1.772933,-3.485208,-6.915860,-4.776619,0.002816,1.972294,7.461724,-6.324392,0.403497,-5.601326,7.138571,8.048368,8.344450,4.831726,6.261034,-8.452750,1.116992,1.469051,1.509296,-5.180443,3.810564,0.462814,-1.755833,-3.147520,7.035067,-3.416358,-3.749814,-8.428850,-9.451283,-3.858896,9.870395,6.349713,2.436725,-2.630137,8.162317,-4.406970,0.871294,4.765129,2.362360,8.814172,7.326734,9.674167,8.083970,3.661961,0.937141,4.645947,-7.648434,-7.856257,6.195748,-6.315073,2.180168,-8.576257,-0.496244,2.474648,1.970394,9.286457,-6.789603,-2.136926,-9.389023,8.160234,-5.011680,2.083647,3.088098,-3.054613,-9.343243,9.815063,5.725228,-0.680803,-7.186009,2.475598,-6.264640,-8.418320,-1.054333,-3.104682,-1.323655,-5.373642,-8.246692,8.505753,3.391249,7.777468,-0.998739,-5.644585,-2.624460,-3.583615,-0.705359,-4.029902,-2.129421,8.743324,-3.033977,5.391327,2.576170,9.287105,4.708043,4.068647,-1.605881,1.205837,-9.868264,9.738304,-3.817775,2.152542,3.820134,-5.630928,-4.905134,-8.844450,2.045952,1.352351,-5.389347,0.540417,7.276665,-8.600687,5.272166,-6.587738,0.062039,-6.251756,6.804648,-7.011304,3.942912,-4.931758,-3.531689,-3.308768,1.755654,-5.647376,-8.550877,1.052954,7.315876,-5.474898,9.574968,-5.162367,-5.352000,7.538614,-3.265088,-7.915200,-1.250495,1.328831,-1.483046,-0.709839,8.637608,1.086712,-7.462494,4.048587,-8.257640,-0.788820,-7.688806,5.131451,6.100278,1.629096,-8.935744,-2.672581,-0.429329,-9.192077,9.899209,-3.457869,7.086413,9.306837,3.466534,5.943983,-9.624977,4.493299,-1.977270,4.290972,9.530247,2.197112,-1.984681,-0.578407,0.504696,5.441189,-8.703275,7.823472,2.121334,8.687787,3.592724,1.499343,4.975493,6.028625,6.530456,7.134078,4.773744,-6.202163,-0.864529,-3.557663,7.076069,9.150365,-0.981390,-7.541654,0.856009,-5.938323,-5.352974,-9.830399,-2.636009,-3.739438,-4.678622,6.721322,-4.395981,3.234494,-1.753635,1.903277,-4.583889,8.444392,4.160560,-2.553420,-4.052768,-4.619347,-6.119774,-2.693799,-1.783791,-5.117337,-9.869743,-4.893074,-6.808996,-3.678931,6.981287,-5.365004,-3.221780,-7.929133,5.986742,-0.663991,6.011989,4.253558,4.930716,6.564386,-3.858738,-2.156488,4.880121,0.786455,-0.469777,-6.552035,9.510748,4.757632,3.566866,-6.718364,0.784776,-8.063959,7.827075,-5.625344,3.872430,-1.121357,-9.556652,-9.353035,2.624394,2.908283,2.245971,1.303196,-8.716257,-4.508889,2.413452,1.211123,2.843230,2.893222,6.150593,1.019590,4.340988,-8.749924,-8.379269,2.821340,-3.575483,-8.184039,6.659844,5.362399,-3.641007,2.442452,-4.490306,-0.596937,-4.168945,-5.180167,-2.293574,-9.189807,8.416195,4.616505,1.492173,4.287219,2.711827,-3.458746,5.327359,-8.921221,7.729251,5.951355,-8.435886,-3.081660,-1.973752,-7.522176,-2.855803,-8.353521,5.211495,-6.806070,3.300511,1.618271,4.321247,3.704094,9.063685,-1.104364,9.277896,-5.878433,-5.834134,-1.181552,5.774702,2.225962,6.071406,6.105937,2.422076,9.565559,0.305576,0.143096,-8.431120,9.833021,-1.230533,7.001146,-6.898843,-0.074199,-6.346055,8.628712,2.963057,9.122613,-6.919792,-4.153493,-7.223819,-5.286305,-8.563048,-9.125300,-7.251709,-2.736756,-7.370980,-9.750001,3.681973,1.410337,7.908011,9.238262,8.694418,4.445759,4.120042,6.284581,-7.987832,5.079866,2.041931,5.388935,5.804555,-6.773007,0.162279,-3.043184,4.572149,-4.394269,-4.677741,-5.778941,4.812065,-8.734502,4.169899,-3.710310,7.291885,-6.275640,-8.579442,5.631397,9.230069,8.636506,-3.531334,1.967320,9.455445,7.613794,4.629045,3.354868,9.762081,9.499231,1.191090,-2.376727,3.705974,3.839514,9.328025,3.554578,-9.358026,0.012549,9.363552,9.125068,4.733380,-6.009854,-6.943484,7.178868,7.183589,-2.720550,-9.757753,-0.582927,2.457803,4.839971,-7.013485,5.182258,8.415552,5.842334,8.312318,5.810190,5.186322,1.356720,7.439470,-3.656414,2.756711,5.700792,4.376400,1.723049,1.467078,8.004609,4.462849,7.269307,-0.319517,1.470434,2.903430,-0.503405,7.861933,-3.073610,-6.753460,4.355149,8.436229,1.800631,-0.806125,6.187683,-7.162185,2.842710,0.151664,-2.038082,-1.215837,4.906401,9.583741,-3.666930,5.200894,9.728563,5.193624,5.868450,-4.447234,-8.236981,2.599883,-9.473656,-5.042174,4.425152,-5.613343,4.628264,-4.451727,-8.353522,-8.115099,-0.532977,9.105775,1.981600,-7.736273,8.408086,-2.950541,-1.982751,8.777063,8.346651,-5.118634,2.879638,-0.130407,2.020582,7.743877,-8.917805,9.251799,6.685589,0.398347,0.340649,8.041316,-0.901203,-7.194636,0.603916,4.381109,-2.235158,-6.426413,8.215846,-5.410922,9.537550,-9.477352,-0.936133,-4.073796,3.804908,-4.915390,1.431541,1.718261,0.267969,-1.074464,-3.774196,0.864040,-3.622371,-2.114168,9.005625,-6.688640,7.892731,-2.145283,-5.908846,0.078689,-7.838241,8.661392,-8.025991,9.117642,-6.882075,-8.217654,-1.895390,2.573540,9.195171,-1.961511,9.922473,1.158196,3.931147], dtype = "float64")#candidate|12289|(1680,)|const|float64
call_12288 = relay.TupleGetItem(func_12182_call(relay.reshape(const_12289.astype('float64'), [420, 4])), 1)
call_12290 = relay.TupleGetItem(func_12184_call(relay.reshape(const_12289.astype('float64'), [420, 4])), 1)
output = relay.Tuple([call_12277,call_12288,const_12289,])
output2 = relay.Tuple([call_12278,call_12290,const_12289,])
func_12296 = relay.Function([], output)
mod['func_12296'] = func_12296
mod = relay.transform.InferType()(mod)
output = func_12296()
func_12297 = relay.Function([], output)
mutated_mod['func_12297'] = func_12297
mutated_mod = relay.transform.InferType()(mutated_mod)
func_11514_call = mod.get_global_var('func_11514')
func_11515_call = mutated_mod.get_global_var('func_11515')
call_12298 = func_11514_call()
call_12299 = func_11514_call()
func_11847_call = mod.get_global_var('func_11847')
func_11854_call = mutated_mod.get_global_var('func_11854')
var_12315 = relay.var("var_12315", dtype = "float64", shape = (1248,))#candidate|12315|(1248,)|var|float64
const_12316 = relay.const([-7.461487,9.359019,7.870483,-1.449705,-3.196247,8.214219,-7.489560,8.423644,0.789379,-3.818903,6.819333,-1.038616,5.941390,3.774501,1.784921,4.206015,-0.596576,7.868745,-0.549898,-4.967537,-7.429283,0.176850,-0.758188,-3.766018,-5.254237,1.205688,-6.394774,6.543950,7.536167,-8.007343,-8.297021,4.384090,-5.786190,-0.243438,-5.563376,-7.787870,-1.447817,1.613719,-3.406145,7.976406,6.533036,-4.385190,-9.840777,2.408982,-8.818417,-7.822277,-3.126916,4.280862,-1.786056,2.504763,-3.203794,6.616055,7.304097,1.256691,-0.849944,-7.934522,1.689450,7.396379,-1.116083,-2.563385,8.074108,8.030844,-6.726943,-4.928723,-1.420664,3.068332,2.503007,-7.235136,2.113684,-5.628515,-1.037859,2.067383,3.512061,4.670525,-7.266678,-3.160913,-1.267226,7.309962,-7.168388,-2.834069,9.276835,9.111025,-9.277140,3.824315,-7.819356,-8.647514,3.199373,-9.809897,-8.232440,-1.759004,0.435859,-6.226236,1.074870,-3.796299,-4.870265,-0.881172,-6.934771,-3.106002,2.379514,0.212075,-8.508298,-2.492562,8.970008,-6.429653,-3.098084,-3.938320,-9.486681,-7.032045,-4.115966,3.647067,9.363706,-5.644892,-1.611208,-9.530876,8.215814,8.607973,1.274964,0.703473,-3.388874,4.057529,-1.159248,8.310640,-0.574754,-4.950290,-0.860647,5.599561], dtype = "float64")#candidate|12316|(126,)|const|float64
var_12317 = relay.var("var_12317", dtype = "int32", shape = ())#candidate|12317|()|var|int32
var_12318 = relay.var("var_12318", dtype = "int8", shape = (84,))#candidate|12318|(84,)|var|int8
var_12319 = relay.var("var_12319", dtype = "bool", shape = (30, 1))#candidate|12319|(30, 1)|var|bool
call_12314 = relay.TupleGetItem(func_11847_call(relay.reshape(var_12315.astype('float64'), [8, 13, 12]), relay.reshape(const_12316.astype('float64'), [126,]), relay.reshape(var_12317.astype('int32'), []), relay.reshape(var_12318.astype('int8'), [84,]), relay.reshape(var_12319.astype('bool'), [30,]), ), 8)
call_12320 = relay.TupleGetItem(func_11854_call(relay.reshape(var_12315.astype('float64'), [8, 13, 12]), relay.reshape(const_12316.astype('float64'), [126,]), relay.reshape(var_12317.astype('int32'), []), relay.reshape(var_12318.astype('int8'), [84,]), relay.reshape(var_12319.astype('bool'), [30,]), ), 8)
var_12323 = relay.var("var_12323", dtype = "int32", shape = (14, 9, 8))#candidate|12323|(14, 9, 8)|var|int32
bop_12324 = relay.add(var_12317.astype('uint8'), var_12323.astype('uint8')) # shape=(14, 9, 8)
func_11514_call = mod.get_global_var('func_11514')
func_11515_call = mutated_mod.get_global_var('func_11515')
call_12329 = func_11514_call()
call_12330 = func_11514_call()
output = relay.Tuple([call_12298,call_12314,var_12315,const_12316,var_12318,var_12319,bop_12324,call_12329,])
output2 = relay.Tuple([call_12299,call_12320,var_12315,const_12316,var_12318,var_12319,bop_12324,call_12330,])
func_12333 = relay.Function([var_12315,var_12317,var_12318,var_12319,var_12323,], output)
mod['func_12333'] = func_12333
mod = relay.transform.InferType()(mod)
var_12334 = relay.var("var_12334", dtype = "float64", shape = (1248,))#candidate|12334|(1248,)|var|float64
var_12335 = relay.var("var_12335", dtype = "int32", shape = ())#candidate|12335|()|var|int32
var_12336 = relay.var("var_12336", dtype = "int8", shape = (84,))#candidate|12336|(84,)|var|int8
var_12337 = relay.var("var_12337", dtype = "bool", shape = (30, 1))#candidate|12337|(30, 1)|var|bool
var_12338 = relay.var("var_12338", dtype = "int32", shape = (14, 9, 8))#candidate|12338|(14, 9, 8)|var|int32
output = func_12333(var_12334,var_12335,var_12336,var_12337,var_12338,)
func_12339 = relay.Function([var_12334,var_12335,var_12336,var_12337,var_12338,], output)
mutated_mod['func_12339'] = func_12339
mutated_mod = relay.transform.InferType()(mutated_mod)
func_12296_call = mod.get_global_var('func_12296')
func_12297_call = mutated_mod.get_global_var('func_12297')
call_12362 = relay.TupleGetItem(func_12296_call(), 2)
call_12363 = relay.TupleGetItem(func_12297_call(), 2)
func_10128_call = mod.get_global_var('func_10128')
func_10134_call = mutated_mod.get_global_var('func_10134')
const_12367 = relay.const([[-1.335297,-6.509540,9.443720,-2.730587,-5.680957,-5.534492,-4.811748,4.121893,3.324163,3.635386],[-0.374982,3.875601,3.556883,7.718615,5.946292,2.999466,3.443928,-5.339541,6.623081,-6.224723],[-8.039773,-1.985437,1.385006,-1.242116,8.195964,-2.947896,-8.759136,6.023598,-2.486208,5.391357],[6.612356,-8.115455,-6.632554,4.027548,9.142626,-3.569122,-0.666265,1.050539,-9.806218,-7.648972],[8.719241,2.998941,-7.945852,8.091742,9.923318,-1.141280,2.453464,0.756883,-1.250197,2.941096],[-7.556383,3.483398,-0.728370,-7.635026,-1.043794,-8.504714,-4.388379,8.138595,9.166982,7.873280],[1.379289,2.658775,-8.522384,0.653828,9.684174,9.975736,-8.775107,-0.953897,6.969406,6.946253],[2.584304,9.710305,-2.763406,8.598054,6.277116,-1.625333,-3.981486,0.749584,6.668335,1.034267],[5.295597,-1.993709,-8.107370,6.271115,-0.319416,8.365530,-2.745308,9.853271,-6.323461,-2.596831],[8.606852,-9.042018,-0.143330,2.656388,-3.830224,-4.407302,6.190751,3.042762,6.950598,3.405634],[-9.387118,-7.632593,0.324722,0.649048,-1.415195,0.897857,-8.845555,5.114238,7.533189,-8.727158],[-8.641765,0.009319,-4.075953,9.384006,8.307300,4.094869,7.484412,2.928984,9.644218,-7.021193],[-5.827220,0.968398,-2.586275,-3.720523,7.629634,9.114868,5.493096,1.080128,-8.499958,-3.073946],[8.740260,4.039293,9.644617,9.589034,7.965085,-7.247917,0.353219,-3.927722,-4.276546,1.250439],[-5.723914,8.479246,-9.961191,5.244927,2.462077,-3.173223,3.425909,-2.913000,-1.268011,1.192518],[1.657430,-5.340521,8.537885,-5.873954,3.154886,-4.975649,5.449621,7.840714,-8.050200,-2.381408],[-7.461522,9.457642,-6.802155,-3.153165,9.796465,-5.551099,2.490716,-9.539783,7.777241,2.524107],[-8.521967,-0.529512,1.990527,7.169940,-5.699371,-8.834078,8.846282,-4.331373,7.416065,-5.192687],[-8.778283,7.200480,7.355719,8.998090,1.412967,4.930446,-3.988463,1.000302,-9.310968,2.148816],[-3.280399,5.916922,1.059056,2.842111,6.483702,-0.999488,-3.693518,8.833343,4.512462,-4.436515],[0.927337,-8.934983,-7.121764,-8.933326,0.088705,5.009702,6.767823,5.140218,7.395602,4.263251],[-8.333159,-1.400438,3.861623,9.392470,-1.510427,4.209735,7.699273,9.032262,2.702712,-5.102373],[-4.228847,-6.696269,4.055115,-4.697596,-0.001846,5.360936,6.482608,7.082153,1.641037,1.546117],[7.881093,-5.378047,5.657225,-3.502213,8.326559,5.908729,-4.605134,3.762231,8.142858,-0.300547],[6.950588,-4.069557,-5.300446,8.873931,-7.364879,6.510980,-5.918864,5.401116,-7.176848,-3.157732],[-9.164585,2.699798,-1.604076,-4.196622,-8.667318,9.622425,-8.075152,0.281148,-3.195165,4.309295],[6.781016,-6.601036,-6.837225,6.329593,1.994027,-4.987176,5.414264,-6.283590,-1.655188,9.982284],[-2.372226,-4.014671,9.592891,9.828847,-1.809495,-2.995188,1.963120,9.422017,-3.890512,-4.379768],[7.151389,-3.582039,-9.921418,-2.883790,9.397147,-9.407393,-3.844398,0.098783,-8.954847,8.376726],[3.492347,-3.865033,-8.045678,-3.077109,5.930306,-3.711267,7.887719,7.872114,-5.512427,-2.103459],[-6.406542,8.053922,6.727591,-6.743216,9.745083,-3.148131,8.515958,2.995363,3.857210,3.727397],[9.756817,9.061381,-6.860171,-3.859026,-5.816391,-4.259806,8.538651,6.330621,-1.156782,-4.018000],[-1.746315,-3.744207,-7.121112,2.629385,3.205187,-0.568664,7.385042,4.139283,-3.179221,-1.692162],[-1.304773,2.096263,-6.876210,-3.919550,-8.695234,-2.717758,-3.898379,3.175238,-1.225140,-0.137069],[1.254640,-7.980038,-6.381134,-4.699645,-2.443865,0.413492,7.928311,-1.527800,0.796864,8.715819],[-4.052484,-4.458239,-8.883277,6.251884,3.890928,0.348428,-8.057074,7.278556,2.874119,4.978713],[-8.591628,2.120211,-7.070690,7.533854,-5.981738,4.924641,-4.228873,6.913643,3.605391,9.305119],[-2.183537,5.243260,5.435352,5.399301,-1.917891,-4.074314,9.177942,3.387717,6.888413,-5.220845],[8.968826,-4.293331,6.845113,-5.398454,-3.317715,8.689118,-1.047374,8.065026,5.254409,0.039383],[-2.038224,-6.922912,3.293142,8.440798,-9.923585,-0.972296,5.561530,4.521100,9.976504,-2.666390],[-5.720651,-0.497630,-9.124021,-4.555593,2.628473,-7.456043,9.224240,1.627964,-2.188073,6.598802],[-3.516865,-2.227498,1.617823,6.638602,2.809077,-8.369616,1.426334,0.462668,9.625918,-7.502751],[2.110012,-4.453895,3.348764,9.197119,-8.208426,7.409787,-0.349942,-9.150488,8.923963,-5.718591],[8.372783,-7.580669,-1.115566,2.252199,1.057991,-6.375025,-4.475103,2.148465,-8.564994,3.284917],[-6.008197,-7.851986,-1.754248,-2.606681,-1.616369,-3.053371,6.331393,-1.960829,-8.132901,5.493305],[1.037912,-9.823912,-5.763729,-7.478035,-3.194651,3.652935,-4.342470,-2.174952,0.930339,-1.566113],[4.672799,3.048199,-7.448173,-0.536473,4.080487,-3.751258,0.560267,-2.310269,4.441878,8.175174],[-5.454355,-8.396817,-8.728279,3.999118,7.357266,9.338789,2.192676,0.280604,-0.141715,-9.783032],[-9.852541,2.601200,-7.450976,9.205863,-5.400027,8.580086,-5.634911,5.776234,-8.339322,-0.165769],[-6.326297,5.554943,-5.607968,3.718406,-2.507232,8.507402,0.267989,7.559250,-8.900432,3.488059],[6.444776,-9.548129,-7.790352,-4.135964,-0.372951,-5.043693,-2.250770,-6.472518,-3.857958,0.378075],[-1.123014,0.679615,3.172643,9.903054,-5.147506,-1.011648,9.442944,1.995671,-6.782924,1.095205],[-9.273892,-2.760970,9.704423,8.912618,-2.655760,-2.878209,2.359621,-9.006905,-0.746364,1.152888],[-2.872284,-4.348703,-1.286889,5.949890,7.506416,4.363343,-3.759326,-4.919325,3.955169,-9.118831],[2.010541,-1.556107,-4.692756,9.870151,-1.363347,3.488176,2.219051,-0.959832,7.174893,-3.987417],[-3.636900,-9.298163,1.752133,-9.048030,5.622190,5.115498,-4.761471,4.012904,-8.608895,6.856394],[6.711544,-6.469471,2.317590,-8.820293,-2.499300,6.590601,2.427507,-6.977574,3.098164,1.184398],[3.954277,5.941747,-0.317122,-6.862940,7.106657,1.796965,5.313062,6.323360,-4.529371,3.179184],[3.438086,-8.819388,2.811776,5.474863,3.902819,5.661109,9.100896,-6.488170,6.581872,8.458578],[4.937071,-7.254291,-7.073042,0.768419,9.357950,9.317521,2.021551,1.402485,-9.777040,3.371853]], dtype = "float32")#candidate|12367|(60, 10)|const|float32
const_12368 = relay.const(4, dtype = "int32")#candidate|12368|()|const|int32
var_12369 = relay.var("var_12369", dtype = "bool", shape = (30,))#candidate|12369|(30,)|var|bool
var_12370 = relay.var("var_12370", dtype = "float64", shape = (80, 1))#candidate|12370|(80, 1)|var|float64
var_12371 = relay.var("var_12371", dtype = "int64", shape = (1232,))#candidate|12371|(1232,)|var|int64
call_12366 = relay.TupleGetItem(func_10128_call(relay.reshape(const_12367.astype('float32'), [5, 15, 8]), relay.reshape(const_12368.astype('int32'), []), relay.reshape(var_12369.astype('bool'), [30,]), relay.reshape(var_12370.astype('float64'), [80,]), relay.reshape(var_12371.astype('int64'), [1232,]), ), 6)
call_12372 = relay.TupleGetItem(func_10134_call(relay.reshape(const_12367.astype('float32'), [5, 15, 8]), relay.reshape(const_12368.astype('int32'), []), relay.reshape(var_12369.astype('bool'), [30,]), relay.reshape(var_12370.astype('float64'), [80,]), relay.reshape(var_12371.astype('int64'), [1232,]), ), 6)
bop_12377 = relay.logical_or(call_12366.astype('bool'), var_12370.astype('bool')) # shape=(80, 1232)
bop_12380 = relay.logical_or(call_12372.astype('bool'), var_12370.astype('bool')) # shape=(80, 1232)
output = relay.Tuple([call_12362,const_12367,const_12368,var_12369,var_12371,bop_12377,])
output2 = relay.Tuple([call_12363,const_12367,const_12368,var_12369,var_12371,bop_12380,])
func_12381 = relay.Function([var_12369,var_12370,var_12371,], output)
mod['func_12381'] = func_12381
mod = relay.transform.InferType()(mod)
mutated_mod['func_12381'] = func_12381
mutated_mod = relay.transform.InferType()(mutated_mod)
func_12381_call = mutated_mod.get_global_var('func_12381')
var_12383 = relay.var("var_12383", dtype = "bool", shape = (30,))#candidate|12383|(30,)|var|bool
var_12384 = relay.var("var_12384", dtype = "float64", shape = (80, 1))#candidate|12384|(80, 1)|var|float64
var_12385 = relay.var("var_12385", dtype = "int64", shape = (1232,))#candidate|12385|(1232,)|var|int64
call_12382 = func_12381_call(var_12383,var_12384,var_12385,)
output = call_12382
func_12386 = relay.Function([var_12383,var_12384,var_12385,], output)
mutated_mod['func_12386'] = func_12386
mutated_mod = relay.transform.InferType()(mutated_mod)
func_11514_call = mod.get_global_var('func_11514')
func_11515_call = mutated_mod.get_global_var('func_11515')
call_12398 = func_11514_call()
call_12399 = func_11514_call()
func_6688_call = mod.get_global_var('func_6688')
func_6696_call = mutated_mod.get_global_var('func_6696')
const_12403 = relay.const([-0.690909,5.654906,-2.967157,3.624639,1.392518,4.731408,1.826802,-8.572643,8.479075,-9.595564,0.958501,-6.624444,-1.112469,5.630234,-1.873145,3.196515,-2.783823,-1.975325,4.024328,-2.711514,-3.752380,-7.676183,9.428700,5.325906,4.045204,-1.538925,-0.106141,-0.550023,5.872590,-2.045504,6.411517,-8.327315,5.183902,-2.221231,1.663718,0.145226,-5.853375,4.940013,9.326646,-7.181344,-7.233401,2.771557,-7.135506,-0.110482,0.944361,5.453936,-3.181764,-4.183029,-5.291027,-6.596527,2.255473,-3.177262,3.787114,3.926973,-5.473335,0.172093,7.732677,8.175244,0.059271,3.330444,-3.703781,0.745839,-7.896067,-6.631614,-0.732089,-4.255805,7.086920,-5.555707,-0.461143,6.073955,6.873367,-5.155954,0.013860,-5.818494,0.987797,4.394641,9.384601,-3.610142,-0.011737,-6.203977,9.229745,-1.551749,6.748060,7.260231,4.973010,-5.380859,-6.527623,4.436829,-1.007363,-5.726877,9.514092,-4.241028,-7.048934,-0.736963,6.477568,4.608328,-6.230630,4.710904,-8.886829,7.416049,2.600467,3.774891,-0.779000,8.145093,-0.541846,-2.743619,4.494225,-4.901330,4.906498,-1.005125,-6.078343,0.670189,-7.012181,-0.493327,-4.505247,-8.120175,-2.029076,7.705759,-2.941327,0.845090,-9.601742,-1.831642,-7.419034,6.099307,4.381595,9.247750,1.106167,-6.239958,7.961267,6.043390,8.907894,-2.066714,1.801158,-3.410547,-0.587075,-3.997119,-3.007284,2.767084,-5.624355,-7.651942,-7.058033,3.679354,5.603199,8.877910,-0.447726,-9.441090,-7.694527,0.026647,-4.202976,9.001312,-9.107229,4.748813,-3.491843,0.960196,2.961310,8.288940,8.163265,5.620021,-5.399749,-8.860152,5.287469,-5.768216,5.320330,7.651641,-5.456538,-7.981150,4.381743,9.679783,-1.713516,-2.726913,-1.174685,-9.495905,-9.753907,-7.525932,-4.355505,4.445655,2.924033,-2.284819,-6.831303,-1.701192,-3.357677,8.954152,-1.253617,-7.217310,4.023405,-1.058459,-8.197509,-7.302758,5.699740,6.734727,4.701863,7.225239,4.875681,1.278533,-7.234690,-0.447397,-8.191793,-5.469090,-4.539374,-6.665480,1.869452,0.546750,0.811006,-0.811711,6.152213,-1.123932,-8.384365,0.091589,1.882764,1.839772,6.509517,5.198393,4.459444,-5.850708,-3.343387,-6.578624,-0.604111,1.407665,2.610854,-4.810213,3.812829,7.539304,-3.628203,3.612336,2.007042,7.277340,-1.392421,-5.588149,-7.043357,4.253050,7.407883,-3.054145,-9.242903,6.704960,7.283268,-1.041123,7.861240,4.274415,-4.621343,5.860341,0.704541,-9.708257,8.866732,-6.127489,-4.948417,-1.977936,6.628746,4.643225,-3.146032,4.213583,-3.693880,8.892135,6.909934,2.410666,7.434401,6.825162,-2.975463,2.397619,-3.673918,7.537535,6.628353,6.168332,1.830380,-0.010266,4.111059,2.974327,6.545070,6.993038,9.056512,2.877289,-3.648747,-5.762946,-8.636827,-6.030477,4.476600,2.343161,-4.511985,7.085698,4.224917,9.365022,2.000054,-1.637333,2.577826,5.118209,1.874386,-7.813880,5.080459,-2.455982,-7.521486,-4.280788,-3.642748,-4.104042,-1.271235,-1.699321,-2.954489,2.243798,1.493448,-2.983841,8.100232,4.176614,-3.572914,-3.363695,-8.730740,-9.912541,-1.026299,-4.624551,-1.549498,4.299483,-2.744927,2.383305,1.968976,-3.865298,-3.453666,-0.170639,-5.212260,-2.680504,5.132866,-6.711319,2.022177,-3.312092,-6.352397,4.832993,9.125492,3.221822,-3.777027,-1.056241,4.571448,-6.907395,-1.177527,-7.081591,3.996619,0.425695,5.548369,-1.920610,-5.962939,-2.944453,-1.628950,-3.908240,-6.720118,8.219611,-6.678038,7.415785,8.349585,6.408842,-0.556603,-5.707507,9.572432,-0.351088,-3.237843,4.290682,3.327681,4.627303,1.331751,1.704781,0.763648,8.399447,4.158496,-5.773080,-4.382325,-2.759015,7.503005,-9.029903,-9.814489,9.677597,-9.809217,-5.913920,1.162617,5.433410,0.886141,-4.777052,2.441157,-7.431806,-4.806003,9.234155,-1.702110,5.629720,6.258796,-5.818433,-3.157668,-3.698282,4.430609,-5.176050,-5.793476,4.174250,0.329280,-9.735151,2.538911,9.833001,6.175334,3.755143,-7.129256,8.488539,-4.911468,3.066851,-1.549542,7.133883,-2.083990,-5.612673,9.892031,-9.701469,6.363469,-4.542822,4.425053,3.588959,-6.629385,5.608501,6.145201,-0.472150,-9.899675,6.873300,9.271445,-3.253865,-0.446918,-1.187763,8.707998,-2.499551,-4.218781,6.141711,-2.130785,-7.722120,8.471893,6.616889,7.771184,0.309888,-9.815101,-1.247400,4.959309,3.421645,3.527466,-1.111670,1.881793,3.950226,7.413432,6.470470,7.876761,-7.492711,9.105694,-6.363784,-3.101110,9.122802,-1.527028,-9.563237,-0.339347,9.314044,-4.469431,-4.813274,6.907953,9.616027,8.827540,-9.805025,-4.298758,2.897232,9.850715,-1.103324,2.491989,-8.624492,8.024505,-6.676046,-4.596267,5.078990,7.435051,-5.612807,-3.635033,3.286488,8.062217,-5.502974,-8.016117,2.085824,0.744268,7.446376,3.623006,-9.233505,2.451012,1.436864,6.915422,-9.258229,-3.619020,9.148919,-7.624470,-2.253458,-3.930391,3.150330,5.312564,-8.644408,5.021586,6.618982,6.298991,9.624162,-8.888731,1.562054,-5.088450,-7.433099,-4.788314,1.566204,-0.884550,-2.503765,-1.893482,-1.702370,1.378390,0.545283,-7.960221,1.456279,-8.903305,-9.427886,5.681307,-1.991822,4.643501,1.323506,-8.589854,-8.938618,-5.058685,-1.767288,0.973922,-1.413596,8.126177,5.470542,2.685347,-6.416308,9.364898,-1.739361,-3.474235,-5.558989,-2.241188,9.739488,-1.168930,3.167623,7.546890,-9.799685,-5.450307,1.476083,-0.176231,-9.508241,4.480957,7.851657,1.018467,-5.768981,9.902349,-2.033040,-5.601950,-3.678504,9.593818,8.232824,6.378210,2.297505,5.792848,-2.417638,4.790604,5.345175,3.640606,-1.937918,-6.332290,-9.932546,2.312057,3.336924,-7.866586,3.859480,-2.551359,-8.580711,-2.989240,2.443378,-5.256733,1.287898,-0.765409,7.524638,9.623325,9.950590,-0.585570,2.553955,-6.221273,4.932221,1.982361,-5.401736,2.337639,5.021606,9.778130,3.742923,-1.559067,6.425917,7.054549,-0.477146,-7.360646,7.580080,9.283231,1.859536,1.717140,2.608152,2.834017,-7.271397,-9.663613,-3.038690,9.464244,-2.110547,-3.701890,-9.973458,-1.042498,-2.661566,-1.710872,2.829214,7.961634,3.073804,9.063680,6.936491,4.931313,1.489386,3.375836,7.937254,-0.342386,8.567023,2.866601,-3.282482,-4.635954,1.438293,-4.571573,6.067811,7.195900,1.956051,0.545884,3.947636,-5.204889,-6.522385,-5.775518,-1.481110,2.908729,8.571096,-0.942231,-4.442565,-1.859051,5.393442,-4.582420,-1.258653,-4.636405,-2.689844,-6.340980,-8.479725,6.666703,4.233267,-6.713746,-1.157926,4.004184,-1.038460,1.185206,-6.268462,-1.754092,7.707788,-1.401080,-9.637128,4.892888,-3.720619,-3.300711,-1.476380,-1.339236,3.437745,-3.423484,-8.254994,4.099578,3.137219,-0.277192,7.323481,3.644980,4.303091,-4.088220,-5.552556,6.439446,-6.075746,1.681351,7.384003,-1.481411,-4.695148,-8.092183,-8.396402,-3.654648,-3.719063,3.379816,8.752432,-4.829786,3.223869,7.764016,-1.573339,-7.334416,-0.513189,-9.288823,1.875736,2.796565,0.280357,3.226066,5.920533,8.544084,-9.948122,5.605452,3.706706,-7.025044,5.772708,5.361271,-2.528452,-3.483449,2.802144,-2.499397,7.948914,7.565888,9.634991,-4.270001,-9.423865,8.880661,-5.186634,-5.103930,-1.642161,-0.173006,-5.270654,-4.179378,-5.839225,-5.003717,5.514580,-1.309074,-4.034269,1.145439,-7.288147,-3.410533,1.696149,6.412133,5.668448,3.905161,0.067525,4.639648,1.377793,-6.664794,-1.629698,-6.274604,-1.578346,-7.786904,-8.021881,-5.498991,3.315101,2.696294,-8.957603,-7.250004,-8.914689,-6.058908,-9.778977,-4.596269,2.763620,1.011984,6.924989,3.417184,-4.789653,-2.647302,7.716585,-1.833640,4.170196,3.963204,-7.417336,5.500800,2.537373,-6.936058,3.683156,-4.235102,-7.051067,-8.291053,9.976217,7.000483,2.598065,-7.946075,-3.363195,2.377672,-3.307785,-3.287701,9.195897,4.729795,5.892250,-6.705759,-3.923944,4.095708,-9.733546,-7.614921,7.868079,8.265528,0.435180,8.618746,-8.744913,-4.537577,9.136240,-0.948586,-5.564673,5.673566,2.754055,3.673050,-4.181912,-3.140717,-9.812797,-5.915911,-1.141962,5.537142,3.584553,-2.952395,0.647231,-7.669282,1.578696,8.415428,2.966045,6.464322,-2.000758,-3.356302,0.139606,1.513783,-7.267454,0.491623,-9.011604,-2.124689,9.264062,5.230936,7.023286,4.769616,-4.253301,1.132295,0.228623,8.395011,5.601066,9.201584,-5.034230,-5.554418,-6.136308,-4.314854,-4.597913,1.128757,0.144090,0.640330,-0.473863,6.098322,1.300526,-5.861767,8.900634,8.153228,-7.726467,2.908872,1.792233,5.523062,8.957624,-9.897882,-9.617376,6.390428,8.224730,6.788792,1.990855,-4.748826,1.350330,7.555131,-8.437984,4.898781,8.051285,-7.721466,-4.948393,8.956913,8.192206,-3.955587,3.576679,2.797678,-9.141881,-6.491867,1.227120,-6.924653,-0.607106,1.752218,-8.039686,0.586489,6.053071,3.468123,5.587328,3.315481,-3.628646,-9.042424,1.942673,-7.677884,-7.304866,6.214127,-7.210574,-4.498178,9.327683,0.503643,-6.873753,-5.118413,-0.418025,-6.728210,-1.014708,-6.862357,8.668120,-5.120651,-1.787972,-8.919693,6.460758,-3.642832,7.842517,-5.366370,-4.872525,1.756778,-6.249439,-1.475379,6.226417,-9.595380,-5.440203,-2.963327,-2.960255,-8.971971,-3.249026,1.946697,-2.434189,7.097003,1.586082,6.877277,0.388803,-9.319356,-6.808712,3.689296,7.315364,5.289420,-0.657401,1.371488,-2.441808,-3.154368,-1.021430,-4.611753,0.185820,0.225811,-3.795349,6.842536,2.327278,7.501661,-8.695703,2.318352,2.903413,-6.568109,-6.442805,-7.179963,9.812015,2.147992,-4.604798,4.021210,6.971954,-3.118750,9.106309,-7.933334,-8.851825,-6.590035,-2.445074,-7.198298,-7.727190,6.850511,1.905319,1.744242,-0.266371,-9.526839,-2.838850,2.656254,-5.820889,7.479332,4.269105,-5.988839,-9.274763,-8.279348,-2.866896,-7.339186,6.910839,-9.973743,2.755453,-6.163462,-1.967334,-4.528042,-9.258811,7.584641,-9.428157,-4.883387,-3.354204,0.306256,5.730272,0.535346,-6.846503,-9.619200,2.075054,-3.634256,-6.714962,0.485627,-2.832001,1.758889,7.260404,0.282728,-6.925195,1.864776,7.469829,4.597074,-7.412498,-9.273905,-9.056397,0.211543,2.989941,-8.620408,-9.380551,9.643169,6.163000,6.270423,4.823822,-2.371115,-7.347443,-7.187242,-0.587375,-9.326122,-2.657645,-5.662132,0.549886,-4.070815,4.239793,-3.857505,-1.477463,-1.886421,-2.695455,-8.070520,5.972301,1.072929,-3.169291,3.492974,3.401248,-5.241513,-0.831115,-3.950896,-9.483122,2.255903,0.961667], dtype = "float64")#candidate|12403|(1024,)|const|float64
const_12404 = relay.const([6,5,-6,5,-7,-9,-6,-10,5,-4,-1,-10,-9,7,2,7,1,-2,-6,-8,-3,-10,7,5,-5,6,-3,-6,-5,-6,2,-5,-5,1,-7,6,5,10,5,-6,4,4,-10,-2,5,4,-1,-2,7,10,4,5,-2,-1,-10,-9,1,-4,6,-8,5,-2,-10,-7,-10,4,-4,3,-1,5,3,8,9,-3,-9,8,2,2,-4,2,5,8,-2,-7,5,-6,8,-10,-5,4,5,-8,1,10,9,1,-9,-7,-10,-6,8,3,8,-5,-8,9,-10,-2,-8,-8,8,3,10,8,4,-5,8,2,-1,2], dtype = "int8")#candidate|12404|(120,)|const|int8
const_12405 = relay.const([[6,-6,9,-9,9,10,9,2,4,3,-6,-1,-2,-5,7,-6,-5,3,-4,-1,-2,-6,-10,-1,8,4,-4,-6,-6,-9,8,5,-8,9,1,-5,-1,-6,-1,-7,10,-4,8,3,1,-8,7,-4,4,-5,1,9,-2,3,3,4,-1,10,-6,-7,6,10,1,-6,-5,-1,4,-10,-5,10,3,3,-10,-7,-7,5,-10,-7,-9,5,8,2,-5,6,7,10,-8,6,-6,-6,7,-6,-8,-7,8,1,-5,-7,7,-10,1,-6,3,-7,-5,9,4,-9,10,9,6,-5,-5,3,8,-8,-5,8,-6,-4,7,3,3,-6,-7,-3,5,6,-10,3,4,7,-8,9,7,5,9,9,-9,4,-8,-9,-3,-4,-5,1,2,1,2,-4,-3,4,6,-3,8,8,-4,-10,1,-2,-3,-6,-2,5,-6,2,7,-1,-1,7,-2,5,4,-5,-9,3,-9,-9,9,4,2,-5,3,-3,10,2,-8,10,-2,9,9,5,5,10,7,-9,1,1,10,6,5,4,7,-5,6,-10,10,-4,1,-8,9,9,-1,-1,4,3,-9,1,8,3,-2,10,10,6,7,10,-3,-5,1,5,5,-5,4,10,-3,-7,-8,8,10,-9,-8,-2,-10,-5,-3,8,-10,-4,-10,8,9,-10,-2,-7,2,1,7,-1,10,-9,8,-5,-10,-5,-5,-4,8,-3,2,-5,8,-4,-1,1,3,-6,-7,1,10,-8,9,-1,-5,1,6,10,4,-8,-9,6,-1,2,1,-5,-9,6,-4,7,1,7,-4,3,2,-2,-10,-4,-9,9,2,-1,-9,-1,5,-4,-5,-6,-9,6,-10,-4,-7,3,5,-5,8,-7,4,9,7,-8,4,1,10,-7,-8,-1,9,8,-8,2,1,-2,-9,-6,4,-9,7,4,-7,-8,-3,-7,-2,8,-10,-5,-10,-9,8,5,1,-10,4,-6,4,8,-2,10,4,6,-6,6,-8,7,2,7,8,2,9,4,3,-1,-9,-10,6,-4,9,-10,-6,-6,-1,-4,8,8,5,3,4,-2,2,3,-2,-2,-10,1,-1,6,7,8,7,5,10,9,-1,-6,-7,-4,-7,-9,1,2,-6,-4,8,10,-2,7,-4,-5,-9,9,9,6,-10,-4,6,2,2,-5,-2,6,-2,3,9,-1,10,-8,-3,-6,9,3,5,5,5,-10,5,-8,-6,2,-10,8,3,10,8,9,5,-1,9,-8,8,-1,3,-1,-4,-6,6,-4,-8,6,-10,3,7,6,2,4,1,2,-7,-4,-5,-5,4,1,4,10,-10,-1,-7,-7,-10,-6,6,-6,-2,-4,-1,-8,-8,7,-6,-10,-7,7,8,2,5,-1,-7,-6,5,6,8,-1,4,-10,4,-7,1,-7,-8,-6,-7,5,-4,-5,-10,-7,4,5,-5,-8,-7,9,1,-8,3,3,3,-7,9,-5,10,5,9,4,7,10,9,5,-3,8,-8,-9,-8,-7,-8,-4,-6,4,3,7,2,-5,7,8,2,10,-6,1,5,9,-2,-4,5,4,-6,7,10,-8,1,-9,-1,-3,9,-8,-3,10,1,-4,1,-2,8,-6,1,-7,9,5,6,6,-3,-10,1,-4,3,9,-7,-1,-2,5,-1,6,-10,-8,9,2,8,10,3,4,-1,9,7,5,9,5,-2,-7,-1,9,-1,-4,4,-10,6,-2,-8,7,3,5,1,1,10,-8,-5,3,-7,-6,-10,7,-2,-5,3,6,-5,9,2,1,-8,-4,-5,2,5,4,-6,-1,1,-7,-9,2,5,-2,-9,-8,4,-3,-1,5,-3,-9,-10,-5,6,7,6,-1,-1,5,-8,9,7,4,-7,3,-6,10,3,-10,1,6,9,8,4,9,8,-5,10,-2,6,10,8,-9,7,-1,7,4,7,-5,7,3,2,10,-7,2,10,7,-1,-8,-8,-7,-6,-2,-4,4,-10,7,-6,7,-3,-9,10,10,4,2,-9,-8,1,-10,6,-6,-2,2,2,-3,8,-8,2,2,8,-10,2,-3,-6,7,10,10,-6,2,-2,3,-1,-8,8,10,3,-4,6,7,-4,-5,6,6,10,2,-7,1,5,-10,1,-9,-8,9,-4,-9,9,-1,-1,-8,7,2,4,-1,-5,2,-10,10,5,3,6,-6,-8,-9,-5,10,9,-7,9,2,8,-2,6,-8,3,-10,5,-3,4,2,1,3,-5,-4,6,-10,1,-3,-6,-6,4,8,-2,2,5,5,-7,-7,-7,-9,-9,9,3,-5,-5,-9,-8,10,-10,-8,-8,10,-3,8,-7,5,5,6,-8,-6,3,-3,2,3,-8,6,5,-9,-2,8,-3,-7,-9,-6,-3,1,10,9,7,-6,4,-1,8,7,9,3,-10,-2,-3,-7,5,-6,-2,-6,6,6,-4,9,10,-3,-1,3,-7,10,5,8,-5,-4,-9,8,4,7,2,1,-10,-1,1,2,-10,9,2,-5,4,-6,10,10,7,-2,-1,-10,-9,4,4,-7,-10,10,-6,1,-2,4,-8,-8,10,-5,-4,4,6,1,-5,4,7,-7,9,-6,4,7,-2,8,-4,5,-6,9,-6,-1,3,6,1,6,3,5,9,1,4,5,10,5,-8,9,-9,7,-8,-1,-8,1,6,-9,5,-8,9,8,-3,7,-9,7,5,-7,7,-3,4,6,-9,7,-7,4,8,5,-5,5,7,10,-6,-6,-5,-9,3,3,2,-6,6,-5,2,-10,-2,-8,6,10,7,8,5,2,-3,-9,-6,-6,-7,-1,-10,-5,-5,-9,3,5,-7,1,-10,-1,-2,10,7,2,-6,2,-1,8,2,-9,9,4,-8,-10,-1,-3,-3,-1,-8,4,-6,-10,3,-5,7,9,-7,-4,1,-5,-4,5,1,8,9,-3,-10,1,1,8,7,4,4,1,1,-8,-4,2,9,3,4,10,-9,9,5,7,-7,-10,-8,-8,8,-4,9,6,-8,5,-6,-7,-5,4,6,-6,2,-5,8,9,-9,6,9,-7,2,-2,-8,3,7,-7,-9,-5,-8,3,-4,-10,7,1,10,4,2,10,7,5,-1,7,5,2,2,7,-2,-7,5,-5,-9,-8,-5,3,4,-5,2,8,4,1,7,-2,-7,6,-8,-10,9,10,-8,7,-2,-10,6,2,-8,-8,10,-4,10,2,2,-6,10,5,8,-2,6,-3,-10,2,7,-2,1,-8,7,-8,-10,10,-10,-9,-8,-7,5,-5,-6,-2,9,3,-2,-1,-9,-10,3,10,-6,10,-2,-6,-8,1,-10,-8,-8,10,-2,-1,-10,-1,-10,8,1,-7,6,9,6,9,-2,-8,-8,10,-1,-2,-1,-6,5,6,2,9,9,-2,-8,3,-10,10,-1,-9,-9,-5,-1,1,7,-1,3,6,2,8,-9,-9,4,-6,-8,-7,-5,9,-5,1,10,-8,-6,4,4,-7,5,-1,-7,-3,-3,4,-5,3,5,-10,8,5,-4,-3,3,1,-7,-6,-3,-9,-9,4,8,-2,3,-6,-1,6,-2,-2,-8,2,7,-8,-6,7,-4,9,-10,4,2,4,-3,-9,-9,1,-5,-3,-10,3,1,-1,-4,-4,-1,8,8,-7,4,5,6,-1,10,3,8,-8,-9,2,9,-6,4,-4,-7,3,-6,5,8,-2,1,-8,3,-5,-5,4,3,-4,5,1,-8,1,5,-7,1,1,5,2,5,8,4,-4,3,6,-8,10,-3,2,-9,3,8,-4,3,-1,-3,8,3,8,4,8,3,7,-10,-4,-8,1,-10,1,2,10,2,-7,-4,3,-9,7,10,7,-5,-1,7,10,-10,1,-2,-9,10,9,1,1,4,3,4,-4,-1,3,-8,7,4,9,-8,-10,6,-4,3,8,-5,-1,-1,9,1,-1,-5,-6,6,-4,-8,3,-6,-3,-10,6,2,-6,4,4,-7,4,-3,10,-10,2,-1,-1,1,5,5,-9,-1,-7,-8,2,-5,-7,1,-6,2,-8,-2,-1,5,6,-9,6,-10,7,-5,5,-7,8,10,6,1,-6,-5,10,4,1,-1,-5,3,8,1,9,6,4,1,-9,-6,-9,-3,-4,-5,10,3,4,7,5,7,-6,3,-8,-1,-1,3,9,-9,5]], dtype = "int8")#candidate|12405|(1, 1560)|const|int8
const_12406 = relay.const(4, dtype = "int64")#candidate|12406|()|const|int64
const_12407 = relay.const([2,-7,5,-3,-10,-4,4,3,-1,-8,-1,-2,-8,-5,4,5,6,-2,-8,9,10,1,3,-7,-6,-5,-10,4,-3,-4,4,2,1,-1,9,-7,5,-4,-3,-3,6,6,6,-5,8,3,-7,2,-8,-7,4,5,-3,6,-10,4,8,3,1,-2,-7,3,-1,-2,-9,-8,-4,-10,2,2,6,7,6,-9,-7,-8,-7,8,7,9,-10,10,-9,-10,8,-2,-8,10,10,2,4,4,2,-1,6,6,-8,2,7,-8,-4,1,3,5,-5,-3,-9,-2,10,2,5,2,6,-1,-5,-10,-1,-10,-2,-10,-4,-6,9,-5,-1,-5,-7,-8,-10,-8,9,-4,8,-7,-9,-7,-9,7,1,8,-1,8,7,-2,6,2,9,6,-7,10,-9,2,-2,-7,-3,6,-6,-3,-10,-10,9,10,5,7,-8,-2,4,6,-3,10,5,-1,8,-4,2,-3,-7,1,10,5,-3,-6,1,2,4,-1,7,10,9,-2,-9,4,-1,-7,2,-10,1,1,-9,-5,6,3,-1,9,-8,-2,7,2,-2,-10,3,9,-9,3,7,2,-5,7,8,5,-6,-3,-5,-4,4,-9,-5,10,-1,1,-2,-1,9,-4,-5,-3,5,5,-10,7,2,-2,4,-10,-6,3,5,-6,4,-1,8,10,-9,5,6,5,8,5,-1,9,8,-5,5,-5,-9,8,10,1,2,9,6,6,-1,-7,7,-10,-7,-8,-4,3,-1,1,8,-9,7,-8,1,-8,6,5,-1,-8,9,1,9,7,3,-1,1,1,9,-5,-5,5,10,5,-4,-8,-1,6,-2,-9,-2,-6,-2,1,6,2,-10,-3,6,2,2,-4,-10,2,3,7,-6,8,-9,9,-6,-9,7,-5,-1,-6,-8,6,1,7,3,-9,6,7,8,-3,7,9,3,9,-2,6,3,5,2,-10,-8,2,-6,-9,4,-7,3,5,1,-9,8,2,-5,-7,-10,2,4,2,-2,6,-3,7,2,-2,-5,-5,-4,6,5,8,8,5,-3,-4,8,-3,7,-8,3,2,-3,-2,-6,-8,-10,8,6,10,10,6,-7,10,-10,-3,-8,-10,-1,-8,1,-10,4,-10,3,10,5,-1,5,-6,-10,6,3,-9,-10,-1,-4,-3,1,9,-5,-7,-2,-5,-2,2,10,-1,5,7,-10,-8,1,3,5,6,-10,2,-5,-1,-8,10,10,-2,5,10,-8,-10,-10,-1,-6,6,-1,-1,3,-3,4,10,-9,1,-10,9,-7,-8,-3,-3,9,-6,8,-7,9,4,5,1,4,8,-3,5,6,-9,4,8,1,-4,-3,-10,2,8,-7,3,-1,7,-8,3,6,2,4,-3,-8,-4,7,3,-9,9,10,-9,-3,-2,-7,-4,7,-2,10,7,-2,8,6,-1,2,3,9,10,8,-2,7,7,6,6,-5,-5,-4,8,-4,-9,6,6,-5,9,8,-8,1,-10,7,2,-1,-10,-10,8,-7,10,-8,1,3,-7,-3,-8,2,-1,8,-2,-2,5,-3,8,8,5,2,-1,8,-8,7,-5,-5,-10,2,3,6,-8,9,-1,3,4,2,2,7,10,5,-5,-4,7,-8,-1,-6,-3,4,1,8,3,-3,9,-5,6,-6,4,3,-5,-10,5,-7,1,2,9,9,1,8,-4,1,-3,-8,-7,8,3,-2,4,-7,-1,6,1,3,-7,-6,-4,-10,3,5,10,6,1,-10,-7,1,7,9,5,2,3,-5,-4,-5,3,-1,-3,-4,4,1,-2,9,-10,-7,-10,-8,-8,1,8,-3,4,-3,10,1,-3,5,-5,-5,3,-1,-3,-10,-2,5,5,-10,-9,-7,-4,2,3,5,4,-4,-3,3,-3,-7,2,-2,7,7,9,-6,4,-2,-7,-6,6,9,-4,5,3,-10,-3,3,8,-9,-6,10,3,9,-9,-3,5,-4,4,6,-1,-2,3,-6,5,-8,10,-3,1,7,6,-7,-1,4,10,1,-8,-8,8,4,1,6,-1,8,-10,-6,-2,1,-3,9,5,-7,-4,-4,10,8,1,5,-3,-5,-8,1,-3,-3,5,10,-3,1,-3,-2,4,-6,-7,8,-6,3,6,-3,-4,5,-10,7,1,1,-6,9,-6,-6,8,3,7,-7,9,1,-6,-3,1,-10,-2,8,-5,-10,4,5,8,-5,3,-9,1,6,-6,4,2,10,4,-2,5,-3,7,-10,-6,-3,8,-9,-2,6,5,3,-5,-1,-1,1,4,2,2,8,6,4,3,-2,-2,1,10,5,9,6,9,-3,-1,-6,-6,10,-6,-5,-10,4,-7,9,2,-5,-10,-10,-8,3,9,-4,-6,8,-1,-2,10,-2,4,-4,-5,-7,10,5,-10,9,10,6,-10,-1,-7,-9,-1,-4,4,1,-7,-6,8,4,2,9,9,-9,10,-7,2,-2,8,-8,-3,2,9,-6,-9,-7,6,-2,-1,-3,10,-6,7,-5,-5,9,-4,-10,1,10,-8,1,-2,8,-6,4,2,-8,9,6,-6,4,6,-3,-9,6,-1,-3,4,6,-4,-7,10,7,-1,-3,-8,9,2,10,6,-1,7,-1,5,2,-8,8,-6,-7,-6,6,-9,7,-6,5,4,-2,-1,-1,-10,8,4,6,-10,7,-3,-9,7,-6,-4,-6,10,-1,-10,-9,-7,-6,2,-1,5,8,10,-2,7,9,-2,2,-2,3,7,-2,-1,-5,2,-7,3,-5,-5,1,5,-3,-8,9,10,-4,7,3,-4,-3,6,3,5,4,5,2,-9,8,-2,7,-10,10,7,-7,4,9,-8,-9,10,-3,-1,4,-1,-9,-9,4,-7,9,10,7,4,3,-8,-6,-6,-3,5,-10,10,-9,4,-8,-2,7,3,-5,1,10,8,8,-7,4,-8,10,2,5,-5,-10,-4,-8,-4,5,-10,-5,-2,-4,-3,3,-5,-9,2,-4,1,-5,-3,-1,5,2,-2,6,9,-5,10,-8,-10,-1,-3,1,-1,8,-9,-10,-6,2,9,-3,7,5,-7,2,9,8,-10,-7,-5,-4,-5,-1,-9,8,2,-8,-1,-8,-5,-6,6,8,4,7,-10,4,-7,6,-9,-6,8,-9,9,9,-10,10,-8,-1,2,10,9,7,10,-4,8,9,5,6,7,-10,8,-2,8,9,-9,4,-4,6,6,4,-9,1,2,10,3,-8,-1,7,4,-1,-6,3,-8,5,-8,-10,-1,2,8,-5,-3,-2,-3,-4,-7,-2,-2,3,5,-3,-7,1,-4], dtype = "int64")#candidate|12407|(1232,)|const|int64
call_12402 = relay.TupleGetItem(func_6688_call(relay.reshape(const_12403.astype('float64'), [8, 8, 16]), relay.reshape(const_12404.astype('int8'), [120,]), relay.reshape(const_12405.astype('int8'), [6, 260]), relay.reshape(const_12406.astype('int64'), []), relay.reshape(const_12407.astype('int64'), [56, 22]), relay.reshape(const_12403.astype('float64'), [8, 8, 16]), ), 4)
call_12408 = relay.TupleGetItem(func_6696_call(relay.reshape(const_12403.astype('float64'), [8, 8, 16]), relay.reshape(const_12404.astype('int8'), [120,]), relay.reshape(const_12405.astype('int8'), [6, 260]), relay.reshape(const_12406.astype('int64'), []), relay.reshape(const_12407.astype('int64'), [56, 22]), relay.reshape(const_12403.astype('float64'), [8, 8, 16]), ), 4)
output = relay.Tuple([call_12398,call_12402,const_12403,const_12404,const_12405,const_12406,const_12407,])
output2 = relay.Tuple([call_12399,call_12408,const_12403,const_12404,const_12405,const_12406,const_12407,])
func_12409 = relay.Function([], output)
mod['func_12409'] = func_12409
mod = relay.transform.InferType()(mod)
mutated_mod['func_12409'] = func_12409
mutated_mod = relay.transform.InferType()(mutated_mod)
func_12409_call = mutated_mod.get_global_var('func_12409')
call_12410 = func_12409_call()
output = call_12410
func_12411 = relay.Function([], output)
mutated_mod['func_12411'] = func_12411
mutated_mod = relay.transform.InferType()(mutated_mod)
func_11553_call = mod.get_global_var('func_11553')
func_11554_call = mutated_mod.get_global_var('func_11554')
call_12427 = relay.TupleGetItem(func_11553_call(), 0)
call_12428 = relay.TupleGetItem(func_11554_call(), 0)
func_4093_call = mod.get_global_var('func_4093')
func_4100_call = mutated_mod.get_global_var('func_4100')
const_12450 = relay.const([-9,6,1,9,-9,-7,-5,5,-2,-6,5,-7,10,5,-6,-9,-7,-1,2,4,-10,-4,3,10,-8,-6,-10,1,-10,-2,-5,3,8,10,3,-1,4,7,7,-5,-6,9,5,-5,-8,-3,-8,3,-2,5,-7,-8,2,-10,-7,-5,9,8,-3,1,2,4,-2,-5,10,-10,6,9,7,6,-6,6,6,9,9,-1,-6,10,-2,2,6,-10,-2,-8,-8,-3,-9,2,-5,5,3,-4,2,6,-10,7,-2,6,-6,5,3,10,8,-7,5,6,9,6,3,-5,-10,-9,-1,-6,-3,9,-10,-8,-3,3], dtype = "int8")#candidate|12450|(120,)|const|int8
const_12451 = relay.const([5,-7,-7,-2,-5,7,7,-1,3,6,10,4,-6,2,-2,-9,5,7,8,6,-4,-7,1,3,-10,7,-7,-7,-8,4,-8,-9,9,-4,-7,-8,3,1,-3,-7,7,4,-7,-9,-10,4,-6,-10,1,1,2,9,5,9,-6,3,-2,-7,6,3,1,-3,-2,-3,4,-1,3,4,-1,8,-9,1,7,-10,8,-10,-1,-7,3,6,-3,-6,6,-6,2,4,-6,3,-7,-8,-6,-3,9,-2,1,10,4,2,-7,-8,-4,-2,-7,4,10,8,-8,5,-2,-10,4,7,-9,1,-7,4,-9,-2,1,-2,-5,9,3,3,-10,8,-4,-5,4,-8,4,10,8,2,7,-2,-6,8,-2,5,-3,-7,8,1,-7,10,-8,-5,-4,8,2,-6,9,-10,-6,-7,7,-7,8,-4,-4,8,-7,-10,1,4,8,-4,3,-1,8,-7,2,8,3,-6,-8,-1,-7,-8,1,-2,10,-5,9,-4,-4,9,-7,7,-1,-9,9,-6,10,-3,-5,-9,2,-2,10,5,6,-3,3,3,4,4,1,-10,-7,-4,-9,-9,-9,-1,4,-4,-9,5,8,9,1,5,-5,-5,-9,5,3,10,-7,-10,6,3,-2,9,-8,2,-2,-1,4,-1,6,5,-2,-1,6,9,-7,7,-1,-9,-7,-8,8,7,-7,6,-6,5,4,6,9,-1,-8,-8,-9,9,6,4,-7,5,-9,9,2,3,2,-7,5,-9,-10,-3,4,2,9,5,7,2,-2,3,-3,-1,8,-5,-8,7,3,-5,-3,-10,-5,10,6,-9,-1,4,1,-10,-3,-3,1,-7,9,3,8,-6,-8,-4,8,-7,-10,-4,6,1,9,8,-3,4,6,-5,3,-9,10,7,1,-9,-5,-1,7,8,-7,5,3,3,7,6,-1,-10,8,-9,3,9,10,-7,-3,2,1,-9,7,4,10,-3,-4,-10,-4,3,-6,3,2,5,-5,5,-4,-2,4,4,-9,3,-4,8,-5,-5,-3,8,-8,-3,10,1,-2,-3,-3,10,-6,5,-9,7,-4,-4,-1,-6,-5,-4,-7,-7,9,5,8,4,-10,7,-4,3,9,6,-10,-8,1,10,-6,5,10,1,-5,4,-6,5,7,9,-5,-3,7,-10,3,6,-8,9,1,5,-7,-1,2,-4,-4,-5,7,-4,9,-5,-5,-6,-10,-10,-8,-8,8,9,-5,-8,-3,-10,1,7,7,4,2,4,8,-4,-10,1,-2,-7,1,-8,8,-7,1,9,-5,-1,-7,-9,-10,1,-5,-8,-3,4,10,-10,-9,7,10,-1,3,4,-8,6,7,-7,-2,-9,-2,8,-6,-10,5,6,-7,2,10,3,2,5,-9,-4,-1,-5,-8,3,-1,-9,-4,2,6,5,-2,4,-8,-5,-3,-9,2,7,6,3,7,-4,1,-4,9,-10,8,7,5,2,-1,-4,4,4,-3,7,-1,1,-6,6,4,8,-4,-7,-1,8,-1,-4,6,-5,4,-9,5,-6,4,-6,-2,10,3,4,6,5,-8,2,-6,-3,9,7,9,-4,-9,-1,7,6,9,-4,-4,2,-8,6,-9,8,10,-3,1,3,-10,-1,-6,-8,7,-9,1,-4,4,-6,-8,5,2,-6,7,-4,-4,5,2,-2,-7,1,-10,8,-5,-9,9,-9,-3,-5,-4,9,-2,5,-10,-4,-10,5,-9,6,-7,5,10,-8,-8,-5,-2,10,1,-9,-4,7,7,4,5,10,-6,2,8,10,3,-10,-10,-10,-6,9,1,2,8,-3,-7,-6,7,-10,8,-3,-5,-5,-3,-5,3,7,-2,1,6,-4,7,5,-6,1,8,4,-6,10,3,8,-1,-9,3,-4,5,9,8,8,-2,-7,-4,4,1,9,9,-9,2,5,7,2,9,-4,9,10,-2,2,9,5,-9,-3,4,3,9,1,9,-10,7,5,9,-7,-2,6,-6,3,-9,-8,-10,1,8,7,-5,8,-2,-10,-8,-1,-10,6,-10,-3,-5,2,-3,5,4,1,-1,-5,-1,6,-4,2,6,9,-6,6,7,-7,2,-2,-5,10,-1,3,-10,3,-7,-9,4,-2,-4,2,-6,-10,2,-5,-4,-5,9,-8,8,-4,-8,-10,5,-3,-10,-10,3,-5,1,-1,4,-9,3,-4,9,-6,3,7,9,6,-4,-6,-6,1,-2,2,6,10,9,10,4,-2,3,-4,1,4,8,-2,2,4,6,9,-7,3,3,-1,9,-3,-7,5,-10,-5,10,5,-3,-5,2,10,2,-5,-7,3,2,-8,-4,-8,3,-3,1,4,-4,2,2,-9,-7,1,-3,-10,10,-3,-3,9,4,-9,-9,-6,2,2,2,-8,6,-1,-2,3,8,-6,-6,-7,6,-5,10,9,1,-6,3,-10,-1,-7,1,-7,-5,-10,-8,3,-4,3,10,-6,5,4,5,-6,-6,-1,10,-7,-1,-6,-5,-6,-7,-3,-1,10,2,-4,9,-3,-5,-3,4,-10,1,5,6,5,10,-10,10,7,-5,8,2,-10,-10,2,7,9,9,-3,7,8,-9,-10,-10,10,-9,9,4,8,6,-7,1,8,2,-5,-1,-10,-1,9,9,-7,10,2,9,7,10,-6,-2,3,8,-6,-2,9,-7,7,8,8,1,-1,10,6,3,-4,-10,10,-6,-7,1,4,-4,7,4,-7,5,-5,-7,-4,-5,-5,5,3,2,-2,7,2,-4,3,-6,2,10,4,-10,-10,-9,2,-2,7,-6,-6,4,4,9,-5,8,4,-5,-7,-9,2,4,3,-8,8,1,8,-4,-3,-10,9,6,-7,-4,-7,-3,-2,-4,1,-9,-7,2,6,-8,10,7,-7,3,-3,-10,3,-1,8,-1,-7,-7,3,-10,7,7,-5,9,7,-5,10,-1,9,-7,7,-6,-10,-1,-2,1,-8,-9,3,6,-9,-10,-6,-1,3,2,9,6,-10,-2,7,-4,-4,-9,-2,-6,-6,1,7,9,-1,2,10,1,5,4,9,-9,4,9,-3,-6,-1,-10,-10,-10,3,-3,8,-5,-7,4,-1,-8,-1,1,-2,-2,6,3,3,7,3,-9,3,-5,4,-6,-4,-10,-1,-8,7,-6,-2,-7,2,2,-5,10,6,-6,-7,-5,-7,8,3,-1,-8,3,7,6,7,5,-1,-8,10,-7,-10,-10,5,-7,5,-3,4,-4,8,-10,-10,-7,-2,7,-2,-1,-5,9,8,-2,-3,-8,1,-10,2,5,9,-4,-10,-2,-5,5,3,-4,2,-8,9,6,7,-10,-7,2,9,-6,-7,1,3,-4,4,9,-1,2,2,1,-3,-8,-8,-8,-8,-7,-5,9,-6,4,10,-5,2,-5,7,-4,9,-3,-4,-5,7,9,2,-8,4,10,7,9,5,4,1,2,-9,8,-8,-8,-7,-7,-7,-7,8,7,5,3,-7,1,4,-10,10,6,1,5,3,6,6,2,-5,9,2,-9,8,9,-5,5,-6,-5,7,6,-1,-9,-10,-1,10,4,-2,5,4,4,-4,9,9,1,-4,-5,1,-2,-5,-5,-2,10,-1,6,8,7,8,-4,-9,-3,1,-6,2,-5,-10,3,-7,-6,8,6,-1,-10,8,-5,10,-10,4,3,-3,-4,-9,4,9,-6,3,5,-6,4,10,3,-7,-8,8,-8,2,-5,-8,8,-3,6,-8,-2,5,-8,-5,-2,-3,-3,6,3,3,10,1,9,-2,-9,-6,-5,-7,6,4,-4,10,10,-9,5,-5,3,3,-9,7,-5,9,3,-3,-9,7,-7,-1,3,2,-3,-5,2,-10,-2,6,-9,-7,2,9,8,5,3,2,7,7,10,6,-9,2,-5,-7,5,7,6,1,4,-1,1,6,-9,5,5,1,2,-3,4,-9,6,8,-4,7,-4,-6,2,-10,4,-10,1,-1,7,-7,-6,9,4,5,6,-9,-8,5,6,-1,-3,1,2,-6,-8,7,-1,7,6,7,-3,2,1,3,5,10,-5,-3,-3,-6,-1,-4,-9,-2,-2,-7,-3,-10,8,-2,7,2,-4,-9,-3,-7,-7,-9,-1,-3,9,-10,3,-7,-3,-6,2,4,-1,3,9,-8,-1,7,9,-5,-2,-9,6,7,-6,2,1,5,1,7,8,-10,-4,10], dtype = "int8")#candidate|12451|(1560,)|const|int8
const_12452 = relay.const(-6, dtype = "int64")#candidate|12452|()|const|int64
var_12453 = relay.var("var_12453", dtype = "int64", shape = (1232,))#candidate|12453|(1232,)|var|int64
var_12454 = relay.var("var_12454", dtype = "int8", shape = (84,))#candidate|12454|(84,)|var|int8
call_12449 = relay.TupleGetItem(func_4093_call(relay.reshape(const_12450.astype('int8'), [10, 12, 1]), relay.reshape(const_12451.astype('int8'), [10, 12, 13]), relay.reshape(const_12452.astype('int64'), []), relay.reshape(var_12453.astype('int64'), [1232,]), relay.reshape(var_12454.astype('int8'), [84,]), ), 0)
call_12455 = relay.TupleGetItem(func_4100_call(relay.reshape(const_12450.astype('int8'), [10, 12, 1]), relay.reshape(const_12451.astype('int8'), [10, 12, 13]), relay.reshape(const_12452.astype('int64'), []), relay.reshape(var_12453.astype('int64'), [1232,]), relay.reshape(var_12454.astype('int8'), [84,]), ), 0)
output = relay.Tuple([call_12427,call_12449,const_12450,const_12451,const_12452,var_12453,var_12454,])
output2 = relay.Tuple([call_12428,call_12455,const_12450,const_12451,const_12452,var_12453,var_12454,])
func_12461 = relay.Function([var_12453,var_12454,], output)
mod['func_12461'] = func_12461
mod = relay.transform.InferType()(mod)
mutated_mod['func_12461'] = func_12461
mutated_mod = relay.transform.InferType()(mutated_mod)
func_12461_call = mutated_mod.get_global_var('func_12461')
var_12463 = relay.var("var_12463", dtype = "int64", shape = (1232,))#candidate|12463|(1232,)|var|int64
var_12464 = relay.var("var_12464", dtype = "int8", shape = (84,))#candidate|12464|(84,)|var|int8
call_12462 = func_12461_call(var_12463,var_12464,)
output = call_12462
func_12465 = relay.Function([var_12463,var_12464,], output)
mutated_mod['func_12465'] = func_12465
mutated_mod = relay.transform.InferType()(mutated_mod)
func_11514_call = mod.get_global_var('func_11514')
func_11515_call = mutated_mod.get_global_var('func_11515')
call_12485 = func_11514_call()
call_12486 = func_11514_call()
output = relay.Tuple([call_12485,])
output2 = relay.Tuple([call_12486,])
func_12493 = relay.Function([], output)
mod['func_12493'] = func_12493
mod = relay.transform.InferType()(mod)
output = func_12493()
func_12494 = relay.Function([], output)
mutated_mod['func_12494'] = func_12494
mutated_mod = relay.transform.InferType()(mutated_mod)
func_12296_call = mod.get_global_var('func_12296')
func_12297_call = mutated_mod.get_global_var('func_12297')
call_12527 = relay.TupleGetItem(func_12296_call(), 1)
call_12528 = relay.TupleGetItem(func_12297_call(), 1)
output = call_12527
output2 = call_12528
func_12536 = relay.Function([], output)
mod['func_12536'] = func_12536
mod = relay.transform.InferType()(mod)
output = func_12536()
func_12537 = relay.Function([], output)
mutated_mod['func_12537'] = func_12537
mutated_mod = relay.transform.InferType()(mutated_mod)
func_12536_call = mod.get_global_var('func_12536')
func_12537_call = mutated_mod.get_global_var('func_12537')
call_12538 = func_12536_call()
call_12539 = func_12536_call()
uop_12543 = relay.asin(call_12538.astype('float64')) # shape=(420, 4)
uop_12545 = relay.asin(call_12539.astype('float64')) # shape=(420, 4)
output = relay.Tuple([uop_12543,])
output2 = relay.Tuple([uop_12545,])
func_12553 = relay.Function([], output)
mod['func_12553'] = func_12553
mod = relay.transform.InferType()(mod)
mutated_mod['func_12553'] = func_12553
mutated_mod = relay.transform.InferType()(mutated_mod)
func_12553_call = mutated_mod.get_global_var('func_12553')
call_12554 = func_12553_call()
output = call_12554
func_12555 = relay.Function([], output)
mutated_mod['func_12555'] = func_12555
mutated_mod = relay.transform.InferType()(mutated_mod)
func_12409_call = mod.get_global_var('func_12409')
func_12411_call = mutated_mod.get_global_var('func_12411')
call_12591 = relay.TupleGetItem(func_12409_call(), 3)
call_12592 = relay.TupleGetItem(func_12411_call(), 3)
func_2137_call = mod.get_global_var('func_2137')
func_2140_call = mutated_mod.get_global_var('func_2140')
const_12594 = relay.const([False,True,True,False,True,False,False,True,True,True,True,False,True,True,True,True,False,False,False,False,True,True,True,True,True,True,False,True,False,True], dtype = "bool")#candidate|12594|(30,)|const|bool
const_12595 = relay.const([False,True,True,False,True,True,True,True,False,False,True,False,True,False,True,True,False,True,True,True,False,False,False,False,False,True,True,False,False,True,True,False,True,False,False,False,True,True,True,False,True,True,False,False,True,True,False,False,False,True,True,True,False,False,True,False,True,False,False,True,True,False,True,False,False,False,True,False,True,False,False,True,True,False,True,True,True,True,True,True,True,False,False,True,False,True,True,True,True,True,False,True,True,False,True,False,False,False,False,True,True,False,False,False,False,False,True,True,True,False,False,False,True,True,True,True,False,False,True,False,False,True,True,True,True,False,True,True,True,True,True,False,True,True,False,True,True,False,False,True,False,True,True,True,False,True,True,False,True,False,False,True,True,True,True,True,False,False,False,True,False,True,True,True,True,True,True,False,True,True,True,False,False,True,True,False,False,False,True,True,False,True,True,False,True,False,True,True,False,True,False,False,True,True,False,False,False,True,False,False,False,False,False,True,True,True,True,True,False,False,False,False,False,True,False,True,True,True,False,False,True,False,False,False,True,False,False,True,True,False,True,False,False,True,True,True,True,False,False,True,True,True,True,True,False,False,False,False,True,False,False,False,False,False,False,True,True,False,False,False,True,False,False,True,True,True,True,False,False,True,True,True,False,True,False,True,True,False,True,False,False,True,True,False,True,True,True,False,False,True,True,True,True,True,False,True,True,True,True,True,True,True,False,True,False,False,False,True,False,True,True,False,False,False,False,False,False,True,False,False,False,True,True,False,True,True,True,False,True,False,True,False,True,True,True,True,True,False,False,True,True,False,True,False,False,True,False,False,False,False,False,False,False,True,False,True,True,True,True,False,False,False,False,True,True,True,True,False,True,True,True,True,True,False,True,False,True,True,False,True,True,True,True,True,False,False,False,True,True,True,True,True,True,True,True,False,True,False,False,False,True,True,True,True,True,False,True,False,True,True,True,True,False,True,False,True,True,True,False,False], dtype = "bool")#candidate|12595|(420,)|const|bool
call_12593 = relay.TupleGetItem(func_2137_call(relay.reshape(const_12594.astype('bool'), [1, 5, 6]), relay.reshape(const_12595.astype('bool'), [14, 5, 6]), ), 1)
call_12596 = relay.TupleGetItem(func_2140_call(relay.reshape(const_12594.astype('bool'), [1, 5, 6]), relay.reshape(const_12595.astype('bool'), [14, 5, 6]), ), 1)
output = relay.Tuple([call_12591,call_12593,const_12594,const_12595,])
output2 = relay.Tuple([call_12592,call_12596,const_12594,const_12595,])
func_12609 = relay.Function([], output)
mod['func_12609'] = func_12609
mod = relay.transform.InferType()(mod)
mutated_mod['func_12609'] = func_12609
mutated_mod = relay.transform.InferType()(mutated_mod)
func_12609_call = mutated_mod.get_global_var('func_12609')
call_12610 = func_12609_call()
output = call_12610
func_12611 = relay.Function([], output)
mutated_mod['func_12611'] = func_12611
mutated_mod = relay.transform.InferType()(mutated_mod)
func_11514_call = mod.get_global_var('func_11514')
func_11515_call = mutated_mod.get_global_var('func_11515')
call_12612 = func_11514_call()
call_12613 = func_11514_call()
uop_12621 = relay.asin(call_12612.astype('float32')) # shape=(8, 13, 1)
uop_12623 = relay.asin(call_12613.astype('float32')) # shape=(8, 13, 1)
output = relay.Tuple([uop_12621,])
output2 = relay.Tuple([uop_12623,])
func_12638 = relay.Function([], output)
mod['func_12638'] = func_12638
mod = relay.transform.InferType()(mod)
mutated_mod['func_12638'] = func_12638
mutated_mod = relay.transform.InferType()(mutated_mod)
func_12638_call = mutated_mod.get_global_var('func_12638')
call_12639 = func_12638_call()
output = call_12639
func_12640 = relay.Function([], output)
mutated_mod['func_12640'] = func_12640
mutated_mod = relay.transform.InferType()(mutated_mod)
func_12493_call = mod.get_global_var('func_12493')
func_12494_call = mutated_mod.get_global_var('func_12494')
call_12641 = relay.TupleGetItem(func_12493_call(), 0)
call_12642 = relay.TupleGetItem(func_12494_call(), 0)
uop_12645 = relay.sigmoid(call_12641.astype('float32')) # shape=(8, 13, 1)
uop_12647 = relay.sigmoid(call_12642.astype('float32')) # shape=(8, 13, 1)
func_2974_call = mod.get_global_var('func_2974')
func_2978_call = mutated_mod.get_global_var('func_2978')
var_12651 = relay.var("var_12651", dtype = "uint64", shape = ())#candidate|12651|()|var|uint64
var_12652 = relay.var("var_12652", dtype = "uint64", shape = (225,))#candidate|12652|(225,)|var|uint64
var_12653 = relay.var("var_12653", dtype = "float64", shape = (390,))#candidate|12653|(390,)|var|float64
call_12650 = relay.TupleGetItem(func_2974_call(relay.reshape(var_12651.astype('uint64'), []), relay.reshape(var_12652.astype('uint64'), [5, 3, 15]), relay.reshape(var_12653.astype('float64'), [390,]), ), 2)
call_12654 = relay.TupleGetItem(func_2978_call(relay.reshape(var_12651.astype('uint64'), []), relay.reshape(var_12652.astype('uint64'), [5, 3, 15]), relay.reshape(var_12653.astype('float64'), [390,]), ), 2)
func_12461_call = mod.get_global_var('func_12461')
func_12465_call = mutated_mod.get_global_var('func_12465')
var_12661 = relay.var("var_12661", dtype = "int64", shape = (2, 616))#candidate|12661|(2, 616)|var|int64
const_12662 = relay.const([-9,5,2,-4,7,-5,9,-10,-7,4,-2,3,1,-2,7,-1,6,-2,8,-1,5,7,-8,-6,9,-2,-4,-10,-1,6,-10,4,3,-6,-1,5,3,-9,-9,5,-6,-1,-10,-7,-5,-10,-10,-3,-2,5,4,-7,-1,7,1,8,-8,8,-9,-10,-10,9,7,-4,-1,-2,8,-3,4,-9,-3,-2,7,9,-7,-10,1,6,3,9,-8,8,-10,6], dtype = "int8")#candidate|12662|(84,)|const|int8
call_12660 = relay.TupleGetItem(func_12461_call(relay.reshape(var_12661.astype('int64'), [1232,]), relay.reshape(const_12662.astype('int8'), [84,]), ), 1)
call_12663 = relay.TupleGetItem(func_12465_call(relay.reshape(var_12661.astype('int64'), [1232,]), relay.reshape(const_12662.astype('int8'), [84,]), ), 1)
output = relay.Tuple([uop_12645,call_12650,var_12651,var_12652,var_12653,call_12660,var_12661,const_12662,])
output2 = relay.Tuple([uop_12647,call_12654,var_12651,var_12652,var_12653,call_12663,var_12661,const_12662,])
func_12664 = relay.Function([var_12651,var_12652,var_12653,var_12661,], output)
mod['func_12664'] = func_12664
mod = relay.transform.InferType()(mod)
var_12665 = relay.var("var_12665", dtype = "uint64", shape = ())#candidate|12665|()|var|uint64
var_12666 = relay.var("var_12666", dtype = "uint64", shape = (225,))#candidate|12666|(225,)|var|uint64
var_12667 = relay.var("var_12667", dtype = "float64", shape = (390,))#candidate|12667|(390,)|var|float64
var_12668 = relay.var("var_12668", dtype = "int64", shape = (2, 616))#candidate|12668|(2, 616)|var|int64
output = func_12664(var_12665,var_12666,var_12667,var_12668,)
func_12669 = relay.Function([var_12665,var_12666,var_12667,var_12668,], output)
mutated_mod['func_12669'] = func_12669
mutated_mod = relay.transform.InferType()(mutated_mod)
func_12409_call = mod.get_global_var('func_12409')
func_12411_call = mutated_mod.get_global_var('func_12411')
call_12682 = relay.TupleGetItem(func_12409_call(), 4)
call_12683 = relay.TupleGetItem(func_12411_call(), 4)
output = relay.Tuple([call_12682,])
output2 = relay.Tuple([call_12683,])
func_12686 = relay.Function([], output)
mod['func_12686'] = func_12686
mod = relay.transform.InferType()(mod)
output = func_12686()
func_12687 = relay.Function([], output)
mutated_mod['func_12687'] = func_12687
mutated_mod = relay.transform.InferType()(mutated_mod)
func_11514_call = mod.get_global_var('func_11514')
func_11515_call = mutated_mod.get_global_var('func_11515')
call_12739 = func_11514_call()
call_12740 = func_11514_call()
func_278_call = mod.get_global_var('func_278')
func_281_call = mutated_mod.get_global_var('func_281')
const_12744 = relay.const([[8.995539,4.919820],[8.545051,4.460967],[-1.739299,-0.198154],[-9.950216,-2.358039],[-9.388171,0.452023],[1.138651,2.363114],[-5.116717,1.129160],[1.563386,1.787735],[-2.073770,6.856144],[2.959991,6.856652],[-8.922459,4.903218],[-9.290582,-9.463563],[-4.801678,-9.118782],[-0.838417,-6.266843],[-1.491738,-8.831557],[6.672926,0.497475],[-9.236464,-6.428916],[3.746340,-7.966954],[3.318758,8.742814],[3.137969,-8.534392],[8.595278,6.570652],[7.030357,-0.853916],[-0.882513,6.100939],[-2.990420,4.275697],[2.294858,-3.512788],[-6.435576,1.181022],[6.488636,0.397709],[-2.922220,-9.786380],[2.097161,3.569496],[2.986262,-8.912560],[-0.166993,-2.478425],[-7.944909,-6.772639],[9.861541,0.787006],[2.838093,2.505830],[3.966007,4.970861],[2.228275,4.362642],[7.279223,7.383603],[-0.420393,-4.455899],[4.506809,8.230084],[6.906783,-7.311701],[9.750802,-3.697027],[-5.595979,3.406899],[-4.427780,0.438136],[-7.036895,-7.138119],[5.670457,-2.058538],[-6.105162,4.860350],[9.182829,1.064255],[-8.133269,0.522677],[1.484405,-2.082310],[-0.179330,0.858193],[-1.499711,-8.459149],[8.189622,-3.808484],[-6.725977,-0.160601],[-9.604540,-5.923065],[3.874939,-3.708802],[0.496467,4.700012],[8.343006,-1.118269],[5.564783,-5.644226],[-0.507322,-1.617033],[-3.656561,1.819433],[3.676521,8.316408],[2.213390,-0.252044],[3.821640,-5.867221],[-3.708562,-2.553850],[0.536436,7.703102],[-2.158412,-9.406236],[-8.331612,4.094089],[7.916976,9.226715],[-9.939842,-8.109245],[8.865662,-0.436649],[2.380344,9.743257],[-1.140857,6.678250],[1.369967,-8.439030],[6.788148,-2.459217],[2.355948,-1.192459],[-6.969475,-1.214675],[-4.470764,-3.430968],[9.161035,-0.577619],[6.304013,-2.166670],[7.408339,8.103789],[4.450685,8.111273],[-1.563484,-1.878476],[9.609433,9.167378],[2.086523,-4.662629],[-3.519875,2.292718],[-3.289733,4.247142],[6.283901,4.953857],[0.363788,4.931970],[4.830582,7.280743],[2.912136,0.205043],[-9.438390,-3.965375],[-6.442898,9.766689],[-4.262167,-2.723696],[7.062075,-2.612612],[-8.291525,4.720651],[8.459623,-7.669868],[4.872948,-2.102868],[9.398296,1.775333],[-8.591056,9.823959],[2.362033,-1.595396],[8.506018,-6.284706],[-2.179968,-1.167503],[-5.701085,-5.595571],[-2.409962,-8.696498],[5.439932,-0.525953],[2.265614,-7.275471],[-8.886760,-9.699774],[7.965295,1.306240],[-0.117734,9.620970],[-4.297023,7.886629],[3.200287,-0.995261],[-9.016327,-7.622845],[-4.251485,-4.963198],[-9.186848,7.162270],[5.650191,-8.989457],[-7.973183,6.618934],[6.568844,8.937990],[-5.345332,4.065233],[3.748300,-9.397564],[-5.794027,6.791470],[5.692059,-2.204796],[-2.158701,-3.080351],[-3.769466,-7.542124],[-0.400433,4.815745],[-1.806371,-2.796483],[7.709818,6.764316],[0.312858,-5.510553],[-2.741744,-5.862203],[3.627040,5.088817],[5.476922,6.899093],[8.380669,-5.180774],[-3.739998,4.393734],[4.974966,6.805124],[3.139133,7.148417],[-2.616361,7.192306],[0.186479,2.267400],[-7.987669,-7.351489],[-4.862178,7.980220],[-6.822589,-0.997173],[5.555771,3.117932],[1.680158,7.278723],[7.854635,7.947491],[-8.314885,-6.413816],[0.541840,1.959607],[9.391953,7.800395],[4.809811,0.177988],[-1.637481,-3.397332],[2.135764,-7.158733],[7.433877,-5.172060],[-2.718873,-6.031267],[-8.996987,-9.696952],[-8.767194,7.375317],[-6.073829,-7.374891],[-8.022140,7.384636],[3.610741,-9.941902],[0.871572,0.705015],[8.738681,-5.431210],[6.445113,-2.112603],[0.978706,0.949186],[-7.640506,3.430204],[4.297019,5.803650],[7.280745,2.449868],[-5.469084,-1.466861],[-6.556739,-0.466311],[4.623994,-2.796911],[-9.295122,-7.912524],[2.645623,7.571367],[-3.648956,-6.248597],[-9.316031,4.206111],[-5.910411,-7.868984],[3.090114,8.673902],[-8.250896,8.389963],[-1.017340,3.243814],[-6.359319,-3.625231],[7.095858,-7.157524],[0.058863,-1.654028],[-2.556371,3.244263],[-3.804870,2.177618],[-3.509465,6.499049],[1.721454,-3.206065],[-6.545074,-6.243999],[8.172001,5.125379],[-6.084986,3.607694],[-0.830630,-2.282404],[3.935759,-1.033043],[4.787924,2.450145],[-9.440975,7.670770],[2.845030,7.284826],[4.948831,4.684652],[-2.810726,4.948641],[-0.783329,-6.679460],[-5.345528,9.984282],[1.322710,4.314279],[7.966208,-8.287484],[-1.163625,8.913733]], dtype = "float64")#candidate|12744|(195, 2)|const|float64
call_12743 = relay.TupleGetItem(func_278_call(relay.reshape(const_12744.astype('float64'), [6, 13, 5])), 0)
call_12745 = relay.TupleGetItem(func_281_call(relay.reshape(const_12744.astype('float64'), [6, 13, 5])), 0)
output = relay.Tuple([call_12739,call_12743,const_12744,])
output2 = relay.Tuple([call_12740,call_12745,const_12744,])
func_12746 = relay.Function([], output)
mod['func_12746'] = func_12746
mod = relay.transform.InferType()(mod)
mutated_mod['func_12746'] = func_12746
mutated_mod = relay.transform.InferType()(mutated_mod)
func_12746_call = mutated_mod.get_global_var('func_12746')
call_12747 = func_12746_call()
output = call_12747
func_12748 = relay.Function([], output)
mutated_mod['func_12748'] = func_12748
mutated_mod = relay.transform.InferType()(mutated_mod)
func_12296_call = mod.get_global_var('func_12296')
func_12297_call = mutated_mod.get_global_var('func_12297')
call_12763 = relay.TupleGetItem(func_12296_call(), 1)
call_12764 = relay.TupleGetItem(func_12297_call(), 1)
uop_12765 = relay.sqrt(call_12763.astype('float64')) # shape=(420, 4)
uop_12767 = relay.sqrt(call_12764.astype('float64')) # shape=(420, 4)
uop_12773 = relay.log10(call_12763.astype('float32')) # shape=(420, 4)
uop_12775 = relay.log10(call_12764.astype('float32')) # shape=(420, 4)
output = relay.Tuple([uop_12765,uop_12773,])
output2 = relay.Tuple([uop_12767,uop_12775,])
func_12776 = relay.Function([], output)
mod['func_12776'] = func_12776
mod = relay.transform.InferType()(mod)
mutated_mod['func_12776'] = func_12776
mutated_mod = relay.transform.InferType()(mutated_mod)
func_12776_call = mutated_mod.get_global_var('func_12776')
call_12777 = func_12776_call()
output = call_12777
func_12778 = relay.Function([], output)
mutated_mod['func_12778'] = func_12778
mutated_mod = relay.transform.InferType()(mutated_mod)
func_12746_call = mod.get_global_var('func_12746')
func_12748_call = mutated_mod.get_global_var('func_12748')
call_12823 = relay.TupleGetItem(func_12746_call(), 2)
call_12824 = relay.TupleGetItem(func_12748_call(), 2)
uop_12835 = relay.sinh(call_12823.astype('float64')) # shape=(195, 2)
uop_12837 = relay.sinh(call_12824.astype('float64')) # shape=(195, 2)
func_10128_call = mod.get_global_var('func_10128')
func_10134_call = mutated_mod.get_global_var('func_10134')
const_12848 = relay.const([[1.059940,2.535707,7.214284,-8.633887,3.062195,-0.834035,3.243877,-8.005683,-1.797628,5.576151,4.373337,0.488130,2.482326,-9.517463,-8.287725,-1.081106,4.301097,8.883275,-8.080118,7.081808,-5.812764,-3.057936,8.093002,-5.536349,-8.243763,8.867383,-0.441675,-9.366337,1.238023,1.658065,2.480964,-4.070092,6.828936,-2.526055,3.712958,1.743227,0.938774,4.243786,-5.627512,-5.606009,1.184112,-8.760551,2.394793,-2.583742,4.656077,-1.660605,1.015916,2.859531,3.411284,-7.796260],[9.381978,-3.574839,-8.712370,8.280391,7.215129,1.771601,-9.484043,-3.030364,-2.650304,-3.573720,-7.301829,4.694761,1.725333,-6.663029,-7.387195,1.304609,-3.750709,-4.295569,-3.804205,-8.228027,5.482160,-4.537915,0.227298,7.147106,6.097341,-5.018341,4.802609,-5.102618,-9.212992,0.383682,0.833360,0.714091,-3.655768,-0.947735,8.575022,-9.537075,-0.267143,-4.688765,8.938402,-7.016704,-9.683817,-1.941547,-9.974816,-3.085113,2.638375,1.512559,5.752702,-1.064682,-6.197736,-3.104745],[7.431338,-1.595776,6.842979,-1.086071,4.485706,-1.604083,2.239008,3.760516,9.660712,-3.466450,0.654931,6.545178,-8.059786,-4.440065,4.236065,9.594580,6.686628,-1.317253,-0.539273,7.693848,5.801295,7.130466,-1.420777,-9.635512,4.909249,-3.177244,-3.681262,9.370326,7.961534,5.742093,-1.995704,-8.022902,9.826819,-0.133339,1.268698,0.380850,0.759567,9.353216,7.430935,8.010033,-6.880022,8.592615,-1.670191,-4.574186,-0.340659,-8.303984,-2.720192,-1.729386,0.097630,7.352256],[-7.321458,-1.232622,-5.558746,1.949317,6.656458,-5.822788,-2.928407,6.416508,-8.421755,-2.881315,1.670282,6.174918,1.667680,1.583532,-7.748870,4.223949,9.153504,2.931663,6.518917,6.595907,7.472323,0.387205,4.108875,-1.857684,-4.424097,-4.326631,1.621339,3.867591,6.445557,-4.557586,6.864942,-9.874303,4.652698,-2.389207,-8.848582,0.485610,0.779039,3.915494,3.627626,-5.220637,5.228690,-0.842889,-5.569979,8.392353,-1.992499,-0.477863,-6.363545,3.618598,-2.059855,-9.820005],[9.372180,-4.665328,-0.102815,-8.473092,-7.531516,6.517991,0.946798,-2.031898,1.045130,-3.968335,7.034430,-5.377284,8.939416,5.689449,4.765746,6.981183,-2.603358,-8.978540,1.670975,-7.884986,3.021945,1.455918,2.890211,1.973309,-2.432436,2.605145,-0.896944,1.749751,1.326594,1.826833,-7.808340,4.460308,-9.907460,-5.873212,-1.136798,0.751524,-8.148371,4.844300,6.813800,8.886630,-9.279375,6.656322,-1.864131,-4.492031,-0.392397,-8.914526,-9.162595,3.113596,9.318332,1.660834],[-1.905620,-3.128512,2.361466,8.998646,-5.157362,-5.429398,3.751759,3.116316,-8.281002,4.392948,7.633928,-3.708042,8.606005,-0.254169,4.099728,9.550290,0.608727,-6.242134,6.525582,6.636195,-3.368083,-5.962484,3.992680,5.780879,8.119488,-6.218623,8.549925,5.093361,-5.333655,0.761353,0.890558,-2.710662,-4.429606,6.199046,-1.677635,3.953311,0.203531,-3.540847,3.221930,-0.897459,-8.533239,6.169579,6.269080,-7.298477,9.543459,3.286319,-4.774594,7.999905,0.816924,-7.644019],[6.686792,-6.232030,6.200957,1.248757,7.092668,-3.463709,5.616367,7.585421,-7.870722,-5.306233,6.146532,-8.409565,1.136428,7.623633,-8.987115,-2.857306,9.231678,-5.333551,4.749604,-4.953613,-1.511945,-2.553135,-8.658707,-8.776644,-8.898174,-6.535973,5.001206,1.924106,-7.507664,0.937208,6.259725,-8.074579,-0.805407,7.303007,0.026341,-0.561954,-7.442026,2.280491,-4.499366,8.325718,-8.779588,5.339694,-0.470617,4.032069,9.563733,-7.414860,-3.454439,9.496502,7.492949,2.736656],[-6.319614,-4.976702,-5.754408,-4.879756,-0.332824,1.656945,1.370806,-7.068459,-6.612459,9.677857,-2.294019,-2.404041,-2.070721,2.372208,-4.997072,-3.377571,9.159329,-6.326707,-3.585037,-0.542641,-9.526869,-4.394662,-4.243513,-9.178615,-0.182780,-3.374385,4.416644,5.286378,3.654734,5.847330,0.273089,-5.841709,6.917807,9.580002,9.234651,-1.054174,6.065290,-6.607458,6.529843,-1.374345,-8.071775,-2.145709,3.407652,7.046971,-9.888176,4.078148,7.037904,-4.227765,-9.793355,-0.729744],[-2.245750,1.590790,1.568723,6.420581,-7.473314,-8.725663,2.914395,-7.563772,1.643708,8.121111,5.693972,3.586319,-8.971314,4.515110,1.006031,1.299752,-3.897849,-1.312331,-4.282430,-1.795772,5.480403,1.376764,0.206450,-4.176304,0.826781,-5.061968,-8.364816,0.977811,-6.107015,9.046652,2.114850,2.634532,8.259226,6.273233,3.583925,0.656141,5.192962,0.951452,-3.320554,5.902909,1.716785,-6.774434,1.427773,7.427411,-5.054132,-6.595838,8.581651,3.675130,5.032498,-3.269778],[-9.993174,2.282824,-3.318864,-0.603640,-4.301168,-8.248382,-5.948950,2.646392,2.870456,0.850382,2.895988,7.683834,0.469132,-1.324958,6.175841,8.000271,-0.952904,8.434805,-0.674918,9.184511,1.784843,-1.745699,1.834340,-7.602798,-8.208042,-7.790541,0.085062,-3.702604,2.236080,9.164217,5.084859,-1.816682,7.695504,-2.951018,-6.953564,1.062398,-8.333528,5.910387,0.371674,-7.272376,8.117284,-6.536817,-1.048700,9.111922,1.813800,-6.990882,9.363265,-1.335587,8.813673,-1.853499],[-0.437945,7.107746,-1.407435,-9.428053,-9.389776,4.685506,-4.629734,-4.229517,1.519821,-4.928714,-1.434959,5.161361,0.600333,8.292045,1.237634,-5.694069,1.688848,-9.793507,-6.787831,9.456549,6.471096,-4.822241,-4.557339,-4.037639,-9.974192,-6.745646,8.892505,3.757748,2.183499,5.907642,-1.530018,1.930459,-1.762052,6.607147,-4.533737,4.771191,-5.726662,5.899309,7.828444,-1.907389,-4.390199,-5.119275,-6.850793,7.098942,-5.213432,-1.254040,-9.332313,-7.479129,8.484191,-1.561031],[8.516611,3.209975,7.158144,-2.497921,-7.538004,8.727377,-5.350681,7.928232,8.526513,-1.767320,1.143404,-8.929266,-4.365657,-2.189266,6.305418,-4.674042,4.873264,-0.270507,-8.440946,2.912079,8.327102,-6.975853,-7.870950,-3.836226,-1.158395,-6.410247,-4.776634,8.574235,4.475881,-3.661210,-5.806368,3.451864,6.722790,8.482320,8.109473,-9.098941,2.324086,-1.613850,-2.206938,4.752114,0.620455,6.853064,-7.713078,4.476056,-7.184480,-5.320210,-5.841429,-6.875743,5.203215,9.634041]], dtype = "float32")#candidate|12848|(12, 50)|const|float32
var_12849 = relay.var("var_12849", dtype = "int32", shape = ())#candidate|12849|()|var|int32
const_12850 = relay.const([[False,False,False,True,True,False],[False,False,True,False,False,True],[False,False,False,True,False,False],[True,False,False,True,True,True],[False,False,False,False,False,True]], dtype = "bool")#candidate|12850|(5, 6)|const|bool
var_12851 = relay.var("var_12851", dtype = "float64", shape = (80,))#candidate|12851|(80,)|var|float64
const_12852 = relay.const([-10,2,6,1,2,-5,-3,-9,4,9,-5,7,-8,6,-10,-10,9,10,-2,1,5,3,4,10,9,4,-4,9,1,7,-10,4,8,3,8,-6,-1,10,-10,-5,-2,3,8,-7,1,2,2,9,1,2,9,2,-4,5,-5,-4,-9,-4,-1,6,6,3,6,-9,-5,8,-8,2,-5,7,9,-8,10,-5,-2,5,1,-5,10,-5,5,-9,-4,-7,1,-8,7,9,5,-2,-9,4,-5,-8,-4,-1,6,4,-2,6,4,4,-7,1,-8,-8,10,-8,10,-3,9,-3,-6,3,-5,9,-3,3,5,2,6,2,-2,2,-8,-6,1,-2,-6,2,5,3,4,10,1,-7,-3,-5,-1,9,-4,-6,6,-9,-4,6,-4,-9,-6,-10,-2,5,5,-2,-1,-6,6,9,2,4,2,-7,-10,5,-7,4,3,5,-1,6,10,6,-6,9,6,-3,-3,5,9,1,6,-7,5,6,-1,-8,6,6,-3,-9,-8,7,3,7,9,-7,-3,3,6,-4,4,7,-9,2,-8,9,3,7,8,-9,-2,-2,-1,-3,-6,6,-2,-2,8,3,6,9,-7,-7,-2,2,3,1,10,-2,2,8,3,-4,-5,4,-8,1,1,2,4,-1,9,2,-5,-8,2,-2,-8,-3,-1,4,-2,-7,-5,-10,3,8,1,-1,-4,-7,7,-1,-4,-7,3,-8,-6,-8,4,-2,9,-8,9,9,10,-10,-5,-1,-7,-6,10,3,-9,-7,-1,9,-10,-10,-6,-4,7,3,-7,1,-5,-2,2,-8,-10,-3,3,-1,-9,-4,2,-1,-2,-2,-1,2,-3,8,4,6,3,3,3,1,-4,9,2,8,-6,-4,-5,-2,3,-4,8,-10,-1,-8,-6,-10,-3,10,-7,-9,9,10,10,-10,4,1,-6,-4,4,3,3,4,-10,-3,-3,2,6,5,5,-10,-1,-10,3,-4,-10,-9,-2,-8,7,3,-4,1,-8,7,-4,-2,-9,2,8,9,4,-10,-8,1,2,7,-9,-7,7,-8,-2,-7,-3,-4,-6,-9,-10,-9,9,-6,-3,6,-1,7,-6,10,7,8,-8,-3,5,7,2,6,7,2,-4,2,-1,5,7,-3,5,-4,-6,-9,8,-6,5,2,3,2,2,5,6,-1,9,5,7,-9,4,-4,6,-3,-4,-3,-10,-8,-2,8,-7,8,2,8,-3,-2,6,9,10,3,10,-4,-4,5,-7,3,-1,-8,6,-4,-4,6,-6,2,-9,-1,4,1,8,-5,2,-9,-10,-8,4,3,-10,-7,-6,-2,5,-5,-7,-8,-6,-1,10,-1,-4,7,3,-5,-1,-9,3,-1,3,7,4,-8,-8,-7,7,-9,9,9,5,6,8,10,-7,10,-7,-1,-4,-9,5,1,8,-5,5,10,9,6,1,7,-9,7,3,6,8,10,-5,-7,10,-1,-5,-6,7,2,-2,-6,-7,6,3,-9,-9,-4,9,-9,-3,-5,1,5,-5,-6,7,7,-4,-3,-5,8,1,-10,5,-3,-10,-1,10,-7,-2,-2,-6,2,-2,-9,-1,-4,-2,5,6,8,-6,4,-4,3,-7,-6,5,-3,6,7,10,10,-6,9,-4,-7,-7,-6,-4,-8,7,-4,-5,1,-10,1,-10,3,-7,-9,3,-1,6,1,8,3,-7,-10,-5,-6,-9,-8,-9,4,-5,-6,8,-7,5,-6,-1,-10,7,3,-1,10,7,9,-9,1,-6,2,-4,-8,-9,4,5,-10,-6,-8,-3,6,-8,-7,6,3,-5,-5,4,-8,2,-4,-5,-3,9,-7,2,6,6,9,9,5,-6,3,-6,2,-10,-6,3,8,-1,-6,-6,-2,-4,-6,4,-9,2,8,-10,7,-7,8,2,-1,9,-5,10,9,10,-8,-7,-5,-8,10,-3,1,1,1,-3,6,10,9,1,-7,-5,7,4,10,5,4,-6,10,-4,1,-3,-1,10,-6,-10,-4,-8,5,-5,5,-5,-9,-4,10,-2,-3,-2,2,4,5,-9,-9,9,8,-10,-5,-2,10,5,-1,-3,-4,1,-8,-3,1,9,-10,5,-4,3,-10,4,-10,-9,8,9,8,-7,5,7,-4,7,9,-4,-4,2,3,-3,-7,-5,-6,-6,-4,-1,4,6,-6,-2,4,-8,2,-4,10,-7,2,1,-6,-2,-1,-1,3,-5,-10,-6,10,3,-5,-6,-4,1,6,-4,10,-5,1,10,-3,4,9,-10,-3,-2,9,3,-2,1,-8,-10,-3,1,-1,7,-5,9,-3,4,1,-6,5,-8,-6,7,-4,-2,4,-10,-6,8,1,5,6,8,7,-10,3,-1,6,3,-7,-8,10,-3,-6,10,-8,-9,-4,2,3,6,-9,-7,5,7,-4,-2,-3,-5,-7,6,9,10,4,-7,-3,5,9,8,-1,-7,-2,-3,5,-5,2,8,7,-7,7,8,-8,-1,-6,-3,6,3,-1,2,-4,-10,6,-8,-3,6,8,1,8,4,-3,-10,-9,6,9,7,4,-10,3,-5,-2,10,4,9,-3,7,-8,-4,2,-8,-7,6,2,2,-5,-4,8,10,-5,-6,-10,6,-2,6,2,4,-8,-3,-8,6,3,-2,-3,-5,-1,-9,-3,-10,7,8,-9,1,5,-8,10,-8,-3,4,-3,6,-9,5,-10,-9,-1,6,-1,9,-2,3,-2,-5,-1,3,-9,10,-6,1,1,2,-9,6,-9,8,-4,3,1,-1,10,-10,4,4,6,5,5,1,-10,-4,4,10,4,-3,3,9,1,10,-9,7,-2,-5,2,3,-5,-10,-10,6,-4,-8,3,10,-7,1,-9,-3,1,-9,6,-4,10,9,-2,1,3,3,-7,2,-5,9,-9,6,10,2,9,6,-8,9,-9,-8,-2,-10,5,-2,-5,4,-1,4,8,-7,2,8,10,1,-10,4,1,-10,6,-5,-10,6,1,-5,8,10,7,1,5,-7,-3,6,6,8,-7,4,-6,-3,2,8,9,-9,5,-6,-4,-7,5,-10,-1,-3,-3,-10,-7,8,8,-9,-3,7,-8,10,5,10,-3,9,1,4,8,5,-4,7,8,-1,4,-10,-1,8,-6,-6,-9,2,-8,5,10,-3,4,8,-6,4,-9,6,-3,-5,-1,9,-7,-1,1,3,10,8,8,6,9,5,4,-9,4,-7,7,6,-1,9,4,1,-9,-8,7,10,3,3,9,-4,7,9,-9,8,-3,-2,-10,-3,-4,-8,4,-6,-5,6,-2,-6,-6,-3,-1,7,-9,-5,1,-9,-8], dtype = "int64")#candidate|12852|(1232,)|const|int64
call_12847 = relay.TupleGetItem(func_10128_call(relay.reshape(const_12848.astype('float32'), [5, 15, 8]), relay.reshape(var_12849.astype('int32'), []), relay.reshape(const_12850.astype('bool'), [30,]), relay.reshape(var_12851.astype('float64'), [80,]), relay.reshape(const_12852.astype('int64'), [1232,]), ), 2)
call_12853 = relay.TupleGetItem(func_10134_call(relay.reshape(const_12848.astype('float32'), [5, 15, 8]), relay.reshape(var_12849.astype('int32'), []), relay.reshape(const_12850.astype('bool'), [30,]), relay.reshape(var_12851.astype('float64'), [80,]), relay.reshape(const_12852.astype('int64'), [1232,]), ), 2)
func_11728_call = mod.get_global_var('func_11728')
func_11730_call = mutated_mod.get_global_var('func_11730')
var_12857 = relay.var("var_12857", dtype = "float32", shape = (195,))#candidate|12857|(195,)|var|float32
call_12856 = relay.TupleGetItem(func_11728_call(relay.reshape(var_12857.astype('float32'), [1, 195])), 1)
call_12858 = relay.TupleGetItem(func_11730_call(relay.reshape(var_12857.astype('float32'), [1, 195])), 1)
uop_12860 = relay.rsqrt(uop_12835.astype('float64')) # shape=(195, 2)
uop_12862 = relay.rsqrt(uop_12837.astype('float64')) # shape=(195, 2)
bop_12869 = relay.subtract(uop_12860.astype('int64'), relay.reshape(call_12823.astype('int64'), relay.shape_of(uop_12860))) # shape=(195, 2)
bop_12872 = relay.subtract(uop_12862.astype('int64'), relay.reshape(call_12824.astype('int64'), relay.shape_of(uop_12862))) # shape=(195, 2)
output = relay.Tuple([call_12847,const_12848,var_12849,const_12850,var_12851,const_12852,call_12856,var_12857,bop_12869,])
output2 = relay.Tuple([call_12853,const_12848,var_12849,const_12850,var_12851,const_12852,call_12858,var_12857,bop_12872,])
func_12886 = relay.Function([var_12849,var_12851,var_12857,], output)
mod['func_12886'] = func_12886
mod = relay.transform.InferType()(mod)
mutated_mod['func_12886'] = func_12886
mutated_mod = relay.transform.InferType()(mutated_mod)
func_12886_call = mutated_mod.get_global_var('func_12886')
var_12888 = relay.var("var_12888", dtype = "int32", shape = ())#candidate|12888|()|var|int32
var_12889 = relay.var("var_12889", dtype = "float64", shape = (80,))#candidate|12889|(80,)|var|float64
var_12890 = relay.var("var_12890", dtype = "float32", shape = (195,))#candidate|12890|(195,)|var|float32
call_12887 = func_12886_call(var_12888,var_12889,var_12890,)
output = call_12887
func_12891 = relay.Function([var_12888,var_12889,var_12890,], output)
mutated_mod['func_12891'] = func_12891
mutated_mod = relay.transform.InferType()(mutated_mod)
func_12409_call = mod.get_global_var('func_12409')
func_12411_call = mutated_mod.get_global_var('func_12411')
call_12956 = relay.TupleGetItem(func_12409_call(), 4)
call_12957 = relay.TupleGetItem(func_12411_call(), 4)
func_10257_call = mod.get_global_var('func_10257')
func_10264_call = mutated_mod.get_global_var('func_10264')
const_12960 = relay.const(10, dtype = "int64")#candidate|12960|()|const|int64
const_12961 = relay.const([-10,5,2,5,-1,9,1,-4,4,-2,-5,6,-1,1,1,-10,5,-5,7,-6,-10,-8,-3,-7,-10,6,2,-5,9,6,-10,-10,-2,-3,7,-7,4,-8,-6,6,4,1,1,2,-4,1,5,-8,-8,-5,-10,-2,6,3,-6,9,-8,7,8,1,-10,-5,-8,3,4,3,-10,10,6,9,-2,-4,-1,-2,-2,3,9,-6,-3,-3,7,-2,-10,3,6,9,-2,-10,6,4,-7,10,6,-1,7,7,1,-10,-4,8,-7,-9,2,4,1,7,-6,2,-5,3,8,-5,-1,-9,-8,-6,3,-3,-5,2,6,4,8,-6,-10,6,-10,8,-6,8,-5,8,-8,-3,-8,8,6,-8,9,-9,4,10,4,7,6,-3,-10,1,2,2,2,-5,-4,-3,8,4,7,6,-4,3,-8,3,7,-7,-9,-2,1,-9,2,-9,-6,-2,9,-4,1,-2,-4,-9,8,-4,7,6,-3,4,-7,-6,8,-5,6,-7,-7,-7,4,3,-6,-9,-3,4,1,3,-2,2,9,-6,-7,3,4,6,-10,1,6,-10,8,4,1,-1,6,-3,-1,1,4,3,-4,7,9,-9,-2,3,10,-1,-5,-3,6,-8,-7,-6,-3,-10,-9,10,-8,5,5,-2,-5,7,5,-5,-8,-9,-1,7,-5,10,5,-4,-6,-3,-6,7,9,-5,4,7,-2,6,-3,-7,1,2,7,10,-4,-8,9,-4,-1,-3,7,-8,6,4,8,-8,1,4,-8,5,7,-4,1,5,5,7,-7,2,-9,-3,-10,-6,10,10,4,10,9,2,-2,-9,4,-2,3,6,-2,8,9,2,-6,9,-8,-5,-5,-4,-3,-5,-1,10,2,-7,-3,4,-1,-3,-9,-6,3,3,-8,4,-1,8,7,7,2,-2,9,10,4,-6,6,-1,5,7,-2,5,-2,-7,-3,-6,10,-1,-8,2,4,7,2,-9,6,2,-6,1,-2,-7,-7,-9,3,-10,10,-2,-10,4,-9,-8,-8,-2,7,-4,-6,-3,6,-3,-1,9,-5,-4,10,-6,1,-5,-4,7,4,2,2,4,7,-6,-10,-10,6,7,-3,6,-9,-7,1,6,-5,5,6,-7,5,-3,-8,10,-8,1,-2,-7,9,-3,8,-6,-2,10,8,-2,9,-10,8,-3,8,10,-1,10,3,-2,7,-3,7,-6,9,2,3,8,-3,-10,5,1,-10,-9,8,-5,-7,3,-2,-1,-7,10,6,-1,-9,1,4,-3,7,-9,-1,-10,-3,-4,-2,-5,-9,-8,4,-7,-4,-8,-2,-3,3,4,6,-4,-6,3,5,-8,-4,-1,-8,1,7,-10,-4,-8,5,-3,-7,-10,-5,-3,-3,-7,9,-5,-8,-1,-10,6,6,-1,7,1,-10,6,-6,-8,-2,-7,-4,-10,-1,-1,-3,-4,-2,-9,-8,-4,-1,-6,1,-7,-8,6,7,8,8,-10,6,-10,-1,-9,9,-7,-4,-9,-6,10,1,10,3,-7,-5,3,-4,-10,-4,-4,-2,5,-6,3,-3,10,10,-3,5,-5,8,2,5,-7,-10], dtype = "int64")#candidate|12961|(585,)|const|int64
const_12962 = relay.const([[-8.017111,-7.554133,-9.982951,3.566735,-9.473989,3.687926,7.029054,0.873991,-3.272869,5.081440,-5.946108,-9.977155,9.385459,2.936801,-8.517703,1.323514,9.798526,1.533306,-3.617430,-7.614720,-0.973030,-8.935317,-9.102809,-2.448253,-1.829835,9.363313,-8.273727,1.906952,7.750855,9.216366,-6.894256,-8.073573],[-7.714160,4.225368,-6.563313,-7.311940,4.385973,-2.670079,-0.036751,-0.023260,-9.882039,-5.426640,6.237184,-9.492837,-4.277410,9.604315,-9.704801,5.509123,3.210194,7.777624,-3.628703,4.587699,6.396156,3.788088,-4.491645,-5.525526,0.639585,9.198048,3.212699,4.580143,9.083971,-5.219692,2.330104,1.050789],[-1.230707,-2.035733,-4.154896,0.670850,-1.729498,9.046526,-9.692087,1.548638,-8.970096,4.767656,6.274573,-1.249756,0.597221,-2.536729,-4.377037,8.922195,1.143487,2.067211,2.448313,3.454670,8.617733,1.400691,-7.406136,8.229183,2.769561,-7.677410,3.200718,-5.106357,1.186800,0.250790,-3.740212,8.671310],[5.065052,7.057415,8.913380,-3.915445,9.962605,-2.759939,-2.008614,6.583430,-2.865262,-6.409300,-3.179526,-9.493847,-8.783997,6.597026,8.211718,-4.004013,9.086174,4.546821,-7.867731,1.177677,3.464475,6.030786,9.059891,-8.808130,2.744695,8.752555,5.164647,9.369633,-8.973179,-7.451324,3.495615,-6.474963],[-9.697399,2.829553,5.345280,-7.815569,4.475892,-9.573762,-0.296664,-0.531957,-8.243102,5.352019,-2.749745,6.349765,2.849582,-9.856356,-9.344645,4.687502,-7.935965,0.470721,7.728434,3.316915,1.198237,8.302936,-1.739701,4.921797,-9.818453,-8.324316,-2.691212,5.644079,3.229922,-8.205632,-1.954868,-3.862600],[1.044761,-4.713042,7.780047,6.521167,3.657576,5.584249,-3.678234,-7.669085,6.747309,1.113891,-1.397393,-6.103892,-0.384991,9.498719,-6.090832,-1.700201,3.724120,2.518759,-5.416015,-8.452698,4.612919,9.440787,-5.551592,-1.498415,-2.236541,0.851971,-0.992979,-6.151796,1.909246,5.317055,5.687007,0.687167],[-4.761415,3.888936,5.152440,1.077806,4.869125,-3.764881,-5.299895,-4.320942,2.365090,-4.684342,1.111621,-4.352828,-5.573174,-8.637900,3.549291,8.018012,-1.785816,-4.305651,-9.832157,7.303072,-4.973157,9.734293,-3.863900,5.493631,-0.295980,-0.355558,-7.261294,-6.494378,-5.002304,-5.576550,-3.131997,-2.958764],[0.944774,-6.200184,-1.071820,1.768925,8.051263,2.126625,-5.413174,0.140314,-3.620244,-4.755658,6.400395,-2.297747,-0.158415,9.699325,-1.482893,3.030171,9.273867,4.935865,7.739302,-3.182820,0.706634,2.069410,3.254835,-4.873380,-2.486502,-5.410014,1.747337,3.027783,-7.215748,-5.841289,-2.916276,-8.266316],[7.268761,1.926674,-3.177453,-1.994884,-7.651108,-0.068283,-4.339274,7.556647,2.942545,-3.263520,-8.919021,-8.917446,4.000868,3.623995,2.912663,7.026617,0.364145,4.986519,-7.681070,-8.274053,9.540224,-5.471581,9.274885,-9.631504,-0.784622,-9.429387,8.595057,6.350379,1.234448,-3.368189,-2.023025,-2.304279],[3.062180,1.068434,9.492171,-3.672035,-3.519195,-7.566216,-5.306962,8.332319,-3.550969,-1.218507,-6.133335,-9.671839,-8.167408,-6.351054,-0.966334,4.938918,7.793405,5.998540,-0.138249,4.968241,0.893457,-5.064233,6.402220,-7.403573,8.237506,0.973001,-7.411406,-2.232365,-3.422676,2.337844,2.652430,-3.037441],[9.461357,6.549030,5.174101,4.412350,-2.468238,2.070691,9.125308,3.834949,-9.916134,-1.211528,-0.801222,3.918407,-0.834251,0.297656,0.166580,-2.029330,-6.704703,-0.596665,-0.481431,-8.325398,-5.354067,-8.121345,7.462467,-5.020336,-0.315422,-0.239789,3.462392,-8.059859,-0.600617,3.457458,9.861093,-9.821495],[0.943964,-2.290031,-0.080890,2.045284,-4.753067,-6.657419,4.289234,3.709322,-3.835416,1.855185,0.182895,2.587187,4.499249,-7.262677,-6.053103,-6.814840,3.139865,6.054343,0.464050,-1.323457,7.438470,2.941743,-6.266710,-3.018588,-9.574361,-3.726753,8.978200,1.185104,4.406312,-2.397492,3.002057,4.430237],[2.592127,-6.133629,4.718116,-0.460571,-0.246566,-1.355308,-6.453072,0.496088,-7.885139,-5.788248,3.206105,-5.874349,5.327664,-8.164809,-3.422815,-6.535113,-7.841952,-9.096125,0.028781,-5.959935,2.720044,-0.858289,-6.224089,-8.101930,-9.246691,-6.960385,9.605949,-6.719929,4.777741,4.683192,-0.823684,5.711705],[-2.256188,5.920456,-8.366735,6.577376,-4.990619,7.031203,8.127129,4.117381,3.649949,1.067178,-7.946846,0.808096,-6.668079,1.615605,-7.934116,-4.562873,3.128986,0.206949,0.668778,1.245871,-3.676762,-9.452340,-6.309423,9.559460,-5.333672,-4.608356,-5.305970,-4.817823,-4.933575,-5.462848,3.867097,-2.159078],[-4.504883,-4.788326,-1.396183,2.232487,5.248372,8.857644,6.519287,2.343871,3.486120,-1.625094,9.197643,8.394309,2.935530,5.283603,-3.159040,9.972623,9.055365,-3.472114,9.769367,-5.908126,-4.159009,-2.274523,9.240432,9.806074,-1.688917,-9.314872,-5.799559,5.224924,6.954179,-6.089534,-3.679327,-1.175649],[-7.695126,-5.707123,-7.685460,-0.959632,-6.092157,-0.957085,-1.315227,-2.646492,-5.038434,-1.772984,-2.281230,-7.703842,-8.526365,1.110842,-8.790426,-2.117208,7.596588,-9.430094,-4.027659,-8.384175,0.035605,-4.822538,-6.507373,-6.622108,2.172715,9.095064,9.293764,-2.024173,9.654140,-7.820260,4.406667,-7.544917],[1.315178,8.024610,4.078334,-3.772274,-1.182900,-1.467391,-5.759784,3.943886,2.637017,3.642157,-7.283650,9.381761,-4.373292,8.355129,-6.882982,-9.543345,-7.542405,0.374061,9.006843,0.750344,-4.720525,-6.606991,-7.715041,5.674831,-4.513100,-6.036264,-9.745320,-0.782806,-7.276533,-8.791307,6.966638,-0.353307],[-1.259639,8.633225,-7.727100,-0.324107,-0.462119,4.784003,-7.933197,5.333980,2.217822,-4.576317,3.540554,-4.666145,-5.332076,-9.266447,2.245137,-3.707123,7.599000,6.570176,-2.870975,-2.149768,-2.124077,5.488843,-4.928498,-5.503033,5.679639,7.323515,9.482634,-2.749286,1.780282,-1.127050,4.174300,-8.272713],[-1.599676,-5.180720,9.723205,-1.660226,-9.054929,0.537568,-4.744170,1.207947,-1.519736,-7.018907,-7.665308,1.745398,8.135833,4.509864,-3.413512,9.918736,9.750738,1.086418,3.207468,5.175154,-4.213949,-5.542532,-2.548414,-9.256276,6.958745,-8.403217,1.108425,2.045844,3.808736,8.888425,-1.991801,3.375098],[4.218973,6.802692,-1.661720,-7.660913,1.889831,6.092005,-0.911876,-3.689847,-5.517055,-0.185945,-4.829454,-4.734071,-8.810594,-9.532941,3.843619,-9.258580,-2.719314,2.935458,-7.544872,8.644101,-4.631271,5.277533,-1.044189,-3.857081,4.906587,-1.939991,-6.476889,5.604784,7.468600,-2.008839,6.999819,9.652503],[-2.935945,-2.430984,-4.703298,-8.878113,-5.343341,-5.510010,1.192319,9.095087,7.977676,-9.648739,2.542669,-5.942508,4.946701,2.426351,8.999279,5.754339,7.259471,7.357957,4.727597,-3.386240,1.820484,4.244532,-5.824361,5.532813,-9.536602,4.376799,-0.428387,-6.708420,-6.661496,-0.695369,-7.496605,0.337010],[-9.362420,-7.196754,-5.964627,2.204357,8.871616,-9.679558,-5.015850,7.006262,-7.778942,-8.910485,-1.855465,-4.119118,-7.397099,-8.310089,-8.729799,-6.677346,-3.381632,8.909944,9.527336,3.474412,9.972028,-6.870062,5.971477,-5.838579,4.269379,-3.666122,-2.024925,-9.841322,-4.504318,3.955142,8.096328,7.265254],[-0.658806,-4.879249,1.286497,-9.270779,-7.615904,-2.313575,-4.716337,7.428341,6.751369,1.208872,-3.434096,-4.963078,3.655047,-7.838969,0.560797,-1.058040,-8.371819,-4.665999,-5.438560,-8.688959,7.736213,5.007860,7.275221,8.127349,-6.957550,-9.360487,1.594418,9.484122,3.743854,0.819594,5.351816,-3.944077],[-2.563276,-6.528294,-9.573918,2.172102,7.347268,8.220378,3.302646,-1.387477,-3.565060,8.209098,4.117045,-2.017663,-0.571758,-0.257551,4.510751,9.089567,9.206818,2.813014,-8.509074,6.001075,6.027996,-8.687475,-1.025420,-2.384618,-9.403164,-5.545644,4.232397,-2.923002,-9.976702,8.327393,0.939278,6.741640],[-4.856054,-3.455409,-9.733153,5.398340,8.506574,-2.951490,-6.564247,-0.809417,-0.664714,-5.228445,5.299271,8.113631,4.607912,5.479553,1.057284,7.410862,9.268851,-5.066713,-1.206327,0.980526,-3.467405,7.655726,6.228290,1.203319,-8.428638,6.278034,-4.829915,6.290112,4.122479,-0.216852,7.199505,6.766963],[-2.137015,-5.961724,1.587848,-1.686872,-9.358499,-2.295361,0.678707,0.212001,2.572203,3.199370,-0.043127,-7.355508,9.505485,-0.518941,-0.245604,-1.363451,-8.624672,6.850724,-7.704803,9.372144,5.373698,-2.778852,2.171240,-7.351120,-8.068283,-7.581457,-1.986191,9.414188,6.799834,7.665623,1.905809,-1.018052],[-0.232197,1.934915,7.898710,8.502838,-4.295304,2.189962,-2.791694,-2.402411,4.291162,9.226097,3.826007,-5.384856,-3.239352,6.558490,2.459564,9.184949,1.307245,-2.874634,4.798694,-6.595031,-0.179227,6.274299,6.931348,0.130229,-7.412167,6.348995,3.000841,1.139731,0.341216,5.945072,-7.729491,-3.896350],[0.172261,2.607489,0.601271,-9.387918,4.031277,-3.225999,-5.204274,-6.225264,-0.132514,-0.119650,8.065514,6.415820,-9.884698,6.967341,-6.274917,6.034698,-6.729142,-3.410739,-4.770891,0.087632,0.399375,-6.094824,-6.004615,-5.326331,-9.548102,-0.857173,-6.602987,-9.262722,0.978032,-5.939662,-5.246588,0.503197],[-9.367515,-0.031659,1.670320,-4.521449,7.430445,-4.040702,2.928183,-8.696453,9.704393,6.679199,-1.062443,0.302232,1.389737,9.810211,3.238996,0.474436,4.319937,-9.073180,1.576456,3.998558,6.800632,-9.110317,-5.775628,5.130393,-0.719959,-8.540801,-3.498070,-1.640900,0.443307,0.525611,-2.998806,-7.333001],[-2.564652,-7.982382,8.964597,-7.878124,4.104527,-9.404873,0.713251,-9.166423,-5.665715,5.803970,-9.132014,9.151484,4.657958,-1.431077,0.507112,6.637489,2.709199,8.482236,7.654811,7.845862,5.570456,6.897749,3.135032,-7.972925,-1.111971,1.692822,0.113487,-8.892292,2.896351,-9.598871,2.021602,9.566321],[-2.058101,7.155038,-7.402109,-3.786148,-9.657334,6.340618,4.101413,-3.917202,8.493415,-8.892231,-2.682236,8.574910,1.825151,-2.567429,-4.676046,1.985584,-7.695238,-6.808232,-0.216043,-8.726263,-5.688571,-8.675722,2.242542,7.004710,-3.044382,7.149057,-4.601396,1.593930,4.177050,-8.937461,1.459669,-5.200897],[3.753781,-1.476380,4.252478,-1.369790,-0.990291,-2.327973,5.937283,-5.123130,9.828853,-3.167100,2.967440,-7.415633,2.338923,-9.419115,-2.016783,4.873324,8.095652,6.674878,-4.847333,1.046695,8.102755,3.768615,8.686334,-8.238583,3.333626,2.972721,-2.261755,9.788446,-6.967534,-2.226687,-3.096962,-0.744038]], dtype = "float64")#candidate|12962|(32, 32)|const|float64
var_12963 = relay.var("var_12963", dtype = "int64", shape = (1232,))#candidate|12963|(1232,)|var|int64
var_12964 = relay.var("var_12964", dtype = "float64", shape = (600,))#candidate|12964|(600,)|var|float64
var_12965 = relay.var("var_12965", dtype = "float64", shape = (1680,))#candidate|12965|(1680,)|var|float64
call_12959 = relay.TupleGetItem(func_10257_call(relay.reshape(const_12960.astype('int64'), []), relay.reshape(const_12961.astype('int64'), [3, 15, 13]), relay.reshape(const_12962.astype('float64'), [1024,]), relay.reshape(var_12963.astype('int64'), [1, 1232]), relay.reshape(var_12964.astype('float64'), [600,]), relay.reshape(var_12965.astype('float64'), [1680,]), ), 2)
call_12966 = relay.TupleGetItem(func_10264_call(relay.reshape(const_12960.astype('int64'), []), relay.reshape(const_12961.astype('int64'), [3, 15, 13]), relay.reshape(const_12962.astype('float64'), [1024,]), relay.reshape(var_12963.astype('int64'), [1, 1232]), relay.reshape(var_12964.astype('float64'), [600,]), relay.reshape(var_12965.astype('float64'), [1680,]), ), 2)
func_5129_call = mod.get_global_var('func_5129')
func_5135_call = mutated_mod.get_global_var('func_5135')
const_12981 = relay.const([9.911914,-4.860757,9.896977,-6.579786,-9.890535,-2.481822,-5.760467,-1.392310,-4.946794,7.823792,3.229731,4.517826,-5.075450,8.114462,4.625132,6.234279,-1.487645,-4.801629,-8.051954,-3.815349,9.737662,8.803159,-8.771868,0.976241,-8.968172,0.196207,0.173226,-6.688090,-1.397738,-3.218456,-3.594550,8.707762,8.503797,2.344198,-4.024302,-5.272851,-1.355077,1.364670,1.141741,9.247193,4.337909,7.391945,-9.216463,-6.728013,-5.515763,-6.665476,4.187117,9.672242,3.433249,-2.786245,-1.080852,-6.810827,8.435108,-5.939898,-5.722215,-8.950593,-8.985371,1.830202,1.494596,-5.013914,-3.486214,-7.981461,-6.853624,-6.781175,-7.857553,1.722381,3.249070,4.301753,8.152494,-6.373433,-5.500349,3.266259,-0.245432,3.104573,2.175157,1.503069,-9.084876,2.247303,6.547217,-3.451590], dtype = "float64")#candidate|12981|(80,)|const|float64
const_12982 = relay.const([True,True,False,False,False,False,False,True,True,False,False,False,True,False,False,False,False,True,True,True,True,True,True,True,False,True,False,True,False,False], dtype = "bool")#candidate|12982|(30,)|const|bool
const_12983 = relay.const([True,False,False,True,False,True,True,True,True,True,True,False,False,True,False,False,True,True,True,False,False,False,True,False,True,True,False,False,True,False,False,False,False,False,False,False,True,True,True,False,False,False,True,False,True,True,True,False,True,False,False,True,True,False,False,False,True,False,False,True,False,False,True,False,True,True,False,False,False,True,True,True,True,False,True,False,True,False,True,False,True,True,False,False,True,False,False,True,False,True,False,False,True,True,False,False,True,False,True,True,True,False,False,False,False,False,False,True,False,True,False,True,True,False,True,False,False,False,True,False,True,True,False,False,True,False,True,False,False,False,True,True,False,False,True,False,False,True,True,False,True,True,False,False,True,True,False,True,True,False,True,False,True,True,True,False,True,False,False,True,False,False,False,False,False,True,False,False,True,True,False,False,True,False,False,False,False,False,False,True,False,True,False,False,True,True,False,False,True,True,False,True,True,False,True,True,False,True,True,True,False,True,True,True,False,True,False,False,True,False,True,False,True,True,False,False,False,False,True,True,True,True,False,False,True,True,True,True,False,False,False,True,False,True,False,False,False,False,False,False,False,True,False,False,True,False,False,True,False,True,True,False,False,True,False,False,True,False,True,True,False,False,False,False,True,True,False,False,True,False,False,False,False,False,False,True,False,False,False,False,False,True,False,False,True,True,False,False,True,False,True,True,False,False,False,True,True,False,True,False,True,True,False,True,True,False,False,True,True,False,False,True,False,False,True,True,True,False,True,False,False,False,False,False,False,False,True,True,False,True,False,True,False,False,False,False,True,False,True,False,True,True,True,True,False,False,False,True,False,True,False,False,True,False,False,False,False,False,True,False,True,True,False,True,False,False,True,True,True,True,True,False,False,False,True,False,False,True,False,True,False,False,True,True,False,False,True,False,False,True,False,True,False,False,False,False,True,False,True,False,True,False,False,True,False,True,False,True,False,False,False,False,False,True,True,False,True,True,False,True], dtype = "bool")#candidate|12983|(420,)|const|bool
call_12980 = relay.TupleGetItem(func_5129_call(relay.reshape(const_12981.astype('float64'), [4, 10, 2]), relay.reshape(var_12963.astype('int64'), [1232,]), relay.reshape(const_12982.astype('bool'), [30,]), relay.reshape(const_12983.astype('bool'), [70, 6]), ), 1)
call_12984 = relay.TupleGetItem(func_5135_call(relay.reshape(const_12981.astype('float64'), [4, 10, 2]), relay.reshape(var_12963.astype('int64'), [1232,]), relay.reshape(const_12982.astype('bool'), [30,]), relay.reshape(const_12983.astype('bool'), [70, 6]), ), 1)
bop_12990 = relay.less(call_12980.astype('bool'), const_12960.astype('bool')) # shape=(1560,)
bop_12993 = relay.less(call_12984.astype('bool'), const_12960.astype('bool')) # shape=(1560,)
output = relay.Tuple([call_12956,call_12959,const_12961,const_12962,var_12963,var_12964,var_12965,const_12981,const_12982,const_12983,bop_12990,])
output2 = relay.Tuple([call_12957,call_12966,const_12961,const_12962,var_12963,var_12964,var_12965,const_12981,const_12982,const_12983,bop_12993,])
func_12996 = relay.Function([var_12963,var_12964,var_12965,], output)
mod['func_12996'] = func_12996
mod = relay.transform.InferType()(mod)
var_12997 = relay.var("var_12997", dtype = "int64", shape = (1232,))#candidate|12997|(1232,)|var|int64
var_12998 = relay.var("var_12998", dtype = "float64", shape = (600,))#candidate|12998|(600,)|var|float64
var_12999 = relay.var("var_12999", dtype = "float64", shape = (1680,))#candidate|12999|(1680,)|var|float64
output = func_12996(var_12997,var_12998,var_12999,)
func_13000 = relay.Function([var_12997,var_12998,var_12999,], output)
mutated_mod['func_13000'] = func_13000
mutated_mod = relay.transform.InferType()(mutated_mod)
func_11514_call = mod.get_global_var('func_11514')
func_11515_call = mutated_mod.get_global_var('func_11515')
call_13026 = func_11514_call()
call_13027 = func_11514_call()
func_12381_call = mod.get_global_var('func_12381')
func_12386_call = mutated_mod.get_global_var('func_12386')
const_13031 = relay.const([[True],[True],[True],[False],[True],[False],[True],[True],[False],[True],[False],[False],[False],[True],[False],[True],[False],[False],[True],[True],[False],[False],[True],[False],[False],[False],[False],[True],[False],[False]], dtype = "bool")#candidate|13031|(30, 1)|const|bool
const_13032 = relay.const([-1.058730,0.746638,0.299116,-1.379021,6.585919,-5.706655,2.825118,8.848227,7.906184,1.580482,-0.808784,-9.805590,-3.059062,-0.204284,5.352474,-3.428019,-5.864367,-8.753282,1.393598,3.705444,-7.310025,-0.787691,6.279380,-4.436807,9.363628,0.164129,-9.580661,8.894715,6.891214,-9.288699,8.909291,8.747725,-3.619791,5.941624,-3.793653,4.524557,8.859568,-7.370542,2.803770,0.670045,-7.518816,-4.260498,-7.916545,-3.907873,5.802086,4.608085,0.523512,1.284282,-1.989423,-1.553325,1.254724,-2.641744,0.128016,7.823083,2.659767,8.150978,3.770490,-8.515807,-3.144327,-0.767955,-5.414548,-0.654875,-7.393891,5.058227,6.591838,6.086771,2.981464,8.296103,-9.204164,-5.084660,5.552993,1.897081,4.834917,0.550394,-3.182581,-4.987490,8.308533,8.402856,-0.986380,-9.785168], dtype = "float64")#candidate|13032|(80,)|const|float64
var_13033 = relay.var("var_13033", dtype = "int64", shape = (1232,))#candidate|13033|(1232,)|var|int64
call_13030 = relay.TupleGetItem(func_12381_call(relay.reshape(const_13031.astype('bool'), [30,]), relay.reshape(const_13032.astype('float64'), [80, 1]), relay.reshape(var_13033.astype('int64'), [1232,]), ), 1)
call_13034 = relay.TupleGetItem(func_12386_call(relay.reshape(const_13031.astype('bool'), [30,]), relay.reshape(const_13032.astype('float64'), [80, 1]), relay.reshape(var_13033.astype('int64'), [1232,]), ), 1)
uop_13035 = relay.acos(const_13031.astype('float32')) # shape=(30, 1)
output = relay.Tuple([call_13026,call_13030,const_13032,var_13033,uop_13035,])
output2 = relay.Tuple([call_13027,call_13034,const_13032,var_13033,uop_13035,])
func_13043 = relay.Function([var_13033,], output)
mod['func_13043'] = func_13043
mod = relay.transform.InferType()(mod)
var_13044 = relay.var("var_13044", dtype = "int64", shape = (1232,))#candidate|13044|(1232,)|var|int64
output = func_13043(var_13044)
func_13045 = relay.Function([var_13044], output)
mutated_mod['func_13045'] = func_13045
mutated_mod = relay.transform.InferType()(mutated_mod)
func_12638_call = mod.get_global_var('func_12638')
func_12640_call = mutated_mod.get_global_var('func_12640')
call_13047 = relay.TupleGetItem(func_12638_call(), 0)
call_13048 = relay.TupleGetItem(func_12640_call(), 0)
var_13051 = relay.var("var_13051", dtype = "float32", shape = (8, 13, 7))#candidate|13051|(8, 13, 7)|var|float32
bop_13052 = relay.greater_equal(call_13047.astype('bool'), var_13051.astype('bool')) # shape=(8, 13, 7)
bop_13055 = relay.greater_equal(call_13048.astype('bool'), var_13051.astype('bool')) # shape=(8, 13, 7)
output = bop_13052
output2 = bop_13055
func_13056 = relay.Function([var_13051,], output)
mod['func_13056'] = func_13056
mod = relay.transform.InferType()(mod)
var_13057 = relay.var("var_13057", dtype = "float32", shape = (8, 13, 7))#candidate|13057|(8, 13, 7)|var|float32
output = func_13056(var_13057)
func_13058 = relay.Function([var_13057], output)
mutated_mod['func_13058'] = func_13058
mutated_mod = relay.transform.InferType()(mutated_mod)
func_12553_call = mod.get_global_var('func_12553')
func_12555_call = mutated_mod.get_global_var('func_12555')
call_13073 = relay.TupleGetItem(func_12553_call(), 0)
call_13074 = relay.TupleGetItem(func_12555_call(), 0)
var_13088 = relay.var("var_13088", dtype = "float64", shape = (420, 4))#candidate|13088|(420, 4)|var|float64
bop_13089 = relay.logical_and(call_13073.astype('bool'), relay.reshape(var_13088.astype('bool'), relay.shape_of(call_13073))) # shape=(420, 4)
bop_13092 = relay.logical_and(call_13074.astype('bool'), relay.reshape(var_13088.astype('bool'), relay.shape_of(call_13074))) # shape=(420, 4)
func_351_call = mod.get_global_var('func_351')
func_355_call = mutated_mod.get_global_var('func_355')
var_13101 = relay.var("var_13101", dtype = "float32", shape = (8, 18))#candidate|13101|(8, 18)|var|float32
const_13102 = relay.const([[3.219949,-9.245966],[-1.306033,-6.610330],[3.383618,-6.651653],[2.332275,6.707110],[-2.000901,-2.878734],[-2.184929,-1.714137],[9.851273,-3.670419],[-3.977948,4.020810],[-2.864294,8.718479],[-6.871592,7.427412],[7.562962,9.378686],[-6.450397,-2.528764],[-6.489363,-8.997081],[1.246350,-6.680235],[-8.428746,6.089810],[-4.703946,0.140473],[-6.590383,-9.870924],[-1.386458,-8.151135],[8.718721,-8.516490],[-3.390373,-4.663545],[3.003672,-1.622318],[8.942687,-9.775776],[8.636974,-6.268785],[-6.731299,-4.457049],[-5.251152,4.136547],[-4.269246,-5.718158],[-6.986234,-4.282685],[5.261501,4.219730],[4.685618,-4.174816],[-6.531265,-3.140019],[-6.273837,9.891230],[-2.223164,1.178433],[-4.153374,-3.263104],[-0.986805,-9.153025],[5.132586,-3.750715],[8.516492,-3.149066],[8.124806,8.364630],[7.266807,7.736860],[-0.444619,-8.964373],[-9.008287,7.789534],[-0.220040,-0.542633],[-9.374839,0.938598],[6.269123,2.337033],[6.601330,7.769678],[-1.331348,-5.159831],[-3.660541,4.706481],[2.149740,-5.680730],[0.378546,-6.324615],[6.578629,-7.052040],[-4.695256,8.650429],[1.492554,-6.248490],[-3.378184,0.348113],[8.519409,-6.159629],[4.749688,-6.521081],[0.367859,7.213405],[7.972981,6.424031],[-2.329256,-6.127861],[5.021236,-4.999094],[-8.489791,-9.611480],[-2.796153,6.331863],[4.337685,1.950264],[5.554494,2.254234],[-1.846307,0.972666],[6.514751,-4.751344],[8.769046,-1.263925],[0.462516,2.453151],[8.394877,-5.439235],[-8.946978,5.940818],[-4.802620,-1.926680],[8.870697,-2.468752],[-5.841887,6.753480],[-4.611393,7.143965],[-7.435878,1.375623],[-4.839664,-7.162579],[-2.440388,3.925825],[-2.843005,-5.781002],[-6.258198,2.507504],[8.285085,3.195764],[9.008622,1.313364],[1.595524,8.410638],[-9.417928,2.491942],[-6.649290,-9.766456],[-7.955444,4.194923],[7.697898,6.296716],[-0.625717,8.832238],[9.446031,-0.767681],[5.492005,-4.359409],[-0.977574,-9.763133],[-3.155033,-5.966314],[1.544412,7.636274],[-8.011935,1.157713],[1.998993,0.370033],[7.063193,8.581072],[-3.469584,8.430607],[4.620606,-0.015970],[-7.684316,-5.575877],[-7.886194,8.821268],[3.066797,1.052445],[9.474277,8.316957],[-8.266559,-2.479816],[0.821632,-0.349416],[2.468642,3.221882],[2.952108,4.603416],[9.337243,1.297351],[-5.746198,2.744394],[9.675102,2.641118],[5.753906,3.899473],[-3.028305,8.184886],[9.038707,1.907445],[-0.603956,8.884056],[-4.119007,8.530192],[-0.433785,4.175854],[6.134988,8.443889],[0.195620,1.848787],[6.882559,-6.544210],[-2.716137,-4.852479],[2.039837,7.506574],[-6.888298,-8.269650],[1.543657,-5.702985],[-0.919097,-4.313500],[7.288861,-3.481878],[-1.544275,7.187306],[7.956690,2.322811],[-7.892261,3.534982],[7.714504,0.639563],[-3.464163,-1.587546],[9.956768,9.412682],[-7.169908,2.846544],[3.642987,4.087884],[7.327035,-2.518856],[-1.993741,-9.701242],[0.448454,2.546566],[-2.340615,-0.832884],[-3.774936,-0.273396],[-1.504871,5.504486],[4.368340,-4.646018],[-1.420327,0.677968],[-3.258743,-1.187116],[8.823205,1.178574],[9.430701,-3.644335],[8.553674,-2.308335],[6.629621,3.568807],[-5.977883,4.926082],[2.262630,3.259768],[0.974506,5.800454],[-7.719858,-6.382919],[4.915911,-7.221483],[-6.238698,-7.906382],[6.114731,9.155217],[-9.605193,-5.894013],[2.848240,-8.081409],[4.336213,5.235394],[-6.968347,1.656094],[-7.887827,0.377749],[3.891733,-4.659040],[-7.583005,-7.425946],[9.011005,-2.592312],[-5.702412,5.890420],[-8.675561,3.248984],[7.968541,-6.339288],[4.695192,-4.391887],[-0.130612,1.331303],[3.930192,3.195393],[3.266902,0.975479],[-3.954702,-1.525838],[2.518978,-8.242006],[2.131820,6.178915],[-4.854553,6.384446],[0.591355,-2.075554],[8.656362,-7.254562],[5.838309,-9.520870],[7.068155,-5.576627],[1.822189,-9.642987],[-8.445640,8.843662],[-1.482676,-8.399259],[-4.120831,7.709547],[4.838994,0.928520],[8.018271,7.049070],[-4.154461,7.641989],[2.065354,3.113258],[-0.579376,4.429459],[-2.698181,0.996384],[-2.919302,-7.481497],[4.697137,-2.379909],[3.137727,9.361804],[1.889388,7.691463],[-4.152085,9.446219],[-3.329580,-3.462547],[0.445805,3.748169],[-2.270150,-1.900195],[-1.516582,-3.162788],[-4.960290,-2.621024],[-0.983589,1.309254],[-5.586549,2.788215],[2.383990,0.030875]], dtype = "float64")#candidate|13102|(195, 2)|const|float64
call_13100 = relay.TupleGetItem(func_351_call(relay.reshape(var_13101.astype('float32'), [1, 16, 9]), relay.reshape(const_13102.astype('float64'), [390,]), ), 0)
call_13103 = relay.TupleGetItem(func_355_call(relay.reshape(var_13101.astype('float32'), [1, 16, 9]), relay.reshape(const_13102.astype('float64'), [390,]), ), 0)
output = relay.Tuple([bop_13089,call_13100,var_13101,const_13102,])
output2 = relay.Tuple([bop_13092,call_13103,var_13101,const_13102,])
func_13107 = relay.Function([var_13088,var_13101,], output)
mod['func_13107'] = func_13107
mod = relay.transform.InferType()(mod)
var_13108 = relay.var("var_13108", dtype = "float64", shape = (420, 4))#candidate|13108|(420, 4)|var|float64
var_13109 = relay.var("var_13109", dtype = "float32", shape = (8, 18))#candidate|13109|(8, 18)|var|float32
output = func_13107(var_13108,var_13109,)
func_13110 = relay.Function([var_13108,var_13109,], output)
mutated_mod['func_13110'] = func_13110
mutated_mod = relay.transform.InferType()(mutated_mod)
func_12686_call = mod.get_global_var('func_12686')
func_12687_call = mutated_mod.get_global_var('func_12687')
call_13132 = relay.TupleGetItem(func_12686_call(), 0)
call_13133 = relay.TupleGetItem(func_12687_call(), 0)
var_13134 = relay.var("var_13134", dtype = "int8", shape = (10, 1560))#candidate|13134|(10, 1560)|var|int8
bop_13135 = relay.not_equal(call_13132.astype('bool'), var_13134.astype('bool')) # shape=(10, 1560)
bop_13138 = relay.not_equal(call_13133.astype('bool'), var_13134.astype('bool')) # shape=(10, 1560)
output = bop_13135
output2 = bop_13138
func_13140 = relay.Function([var_13134,], output)
mod['func_13140'] = func_13140
mod = relay.transform.InferType()(mod)
mutated_mod['func_13140'] = func_13140
mutated_mod = relay.transform.InferType()(mutated_mod)
var_13141 = relay.var("var_13141", dtype = "int8", shape = (10, 1560))#candidate|13141|(10, 1560)|var|int8
func_13140_call = mutated_mod.get_global_var('func_13140')
call_13142 = func_13140_call(var_13141)
output = call_13142
func_13143 = relay.Function([var_13141], output)
mutated_mod['func_13143'] = func_13143
mutated_mod = relay.transform.InferType()(mutated_mod)
func_11553_call = mod.get_global_var('func_11553')
func_11554_call = mutated_mod.get_global_var('func_11554')
call_13172 = relay.TupleGetItem(func_11553_call(), 0)
call_13173 = relay.TupleGetItem(func_11554_call(), 0)
func_7512_call = mod.get_global_var('func_7512')
func_7515_call = mutated_mod.get_global_var('func_7515')
const_13178 = relay.const([[-3,4,7,1,4,7,9,-7,8,2,-4,-3,8,5,-5,-5,-1,-8,5,-6,-3,10,-8,4,9,-10,-4,-6,-2,2,3,-10,8,-5,-9,1,5,-7,10,-10,9,4,2,-8,2,-6,9,1,3,-10,6,-4,5,-3,3,6,5,5,-3,-4,7,1,-3,3,8,-6,-9,5,-2,-10,4,-6,5,6,6,-2,9,9,6,10,9,8,8,1,2,6,-5,-2,-4,10,-10,5,10,5,-7,-9,1,-4,1,-1,-5,8,9,-4,-10,-5,1,-4,-5,4,-2,-10,-2,-3,8,-7,-1,4,-5,-3,5,9,-9,4,10,7,4,-6,-2,1,-5,4],[3,3,8,-7,5,8,9,-7,-1,2,10,2,-8,-1,-3,-8,4,-8,-1,-7,1,8,7,-10,8,6,1,-9,2,4,6,4,7,-2,7,3,-5,9,-6,2,10,-3,5,3,-3,-3,-1,9,-8,-6,-2,-4,-10,9,-9,-4,-7,1,-1,9,1,5,8,-2,6,-3,5,-5,8,4,3,8,5,1,-4,-1,2,-9,-1,7,6,-8,-7,7,7,3,-7,1,10,9,-4,-1,8,7,10,1,-5,-9,1,8,-7,-7,3,8,2,1,10,2,-3,-9,6,9,8,4,3,-7,-6,-7,-4,4,4,4,9,-2,-7,-3,1,-4,1,-6,3,-5],[8,8,6,-10,9,-4,9,1,7,7,-8,-6,-1,5,8,3,-1,9,-4,10,2,6,-10,-5,10,6,7,9,6,1,4,-9,-6,-6,7,8,2,1,8,2,10,-10,-9,6,-4,9,-3,-5,-9,1,-1,-7,2,6,4,10,5,4,10,1,-4,-2,-1,6,-9,7,-6,2,2,8,5,1,-7,-6,-4,-10,9,5,-8,9,-10,9,9,-1,-1,-9,6,-8,7,-1,3,7,-3,2,-7,-1,5,10,3,-7,2,-3,-7,5,-7,3,10,-1,-6,4,-2,-8,-9,5,2,8,-9,4,4,-10,-6,2,-4,-8,-6,4,1,6,-2,2,4,-10],[1,-1,-3,-9,-3,-4,-3,-7,-7,8,-3,-6,9,1,-7,8,-6,6,-9,10,-5,-9,9,9,5,5,-6,-2,-10,8,-7,7,5,-5,-8,4,-1,4,-7,9,-2,1,-5,1,-10,-3,3,-10,-5,3,-10,-7,-10,-3,5,2,-6,3,5,-7,5,2,3,-8,-5,-10,-8,7,9,6,2,1,-8,-9,10,-10,9,-3,-1,9,-10,2,9,5,-9,-1,-6,1,7,-8,10,-10,-9,-9,3,-8,-8,-2,-2,-4,7,-4,-6,-10,-8,7,-8,5,3,-10,4,1,10,9,-2,5,-6,6,-7,-4,5,-3,10,10,3,-10,-10,9,6,-6,-8,-10],[1,8,-10,-2,-4,8,2,5,-10,10,-8,1,-6,-4,7,1,-10,5,1,-5,-2,-7,2,8,9,-1,-9,-2,-9,-1,10,4,1,10,-9,-7,7,-5,-7,1,3,4,-6,6,3,-4,9,3,-9,4,-7,9,2,-2,-7,7,-7,-1,-7,8,4,5,10,-3,-2,-7,5,-2,9,8,-9,5,3,-8,-3,-4,-10,8,8,1,8,8,5,2,6,-10,-4,10,1,10,8,-8,-5,-8,-10,5,-6,-1,3,-7,-5,3,-3,7,-2,-9,2,-9,-6,2,-6,5,-9,5,2,-10,-10,-6,-5,1,1,10,-9,-2,5,-2,10,3,4,1,1,-2],[-4,7,3,-9,-8,-8,9,2,2,5,1,-1,-7,2,-4,10,-5,7,5,-10,8,-9,-8,9,7,3,-1,5,-5,-5,-3,6,1,6,1,10,6,6,-2,-5,10,-9,10,-8,-2,5,9,-3,-5,8,-3,-5,8,2,-6,-9,4,-7,3,-9,-8,10,6,-10,10,-6,6,3,-3,-6,-1,5,-4,-10,-8,1,5,-5,-5,-1,3,-8,-7,5,-4,-8,9,-2,6,1,1,9,-5,7,7,3,-3,1,9,-1,10,-2,5,-1,4,-4,-5,-2,-7,-10,-7,6,-3,-2,-4,9,-6,-10,-5,-1,-2,5,-8,-8,6,-1,1,2,4,-10,9,-4],[-10,-6,-7,3,2,9,-5,-6,6,-1,-7,-3,-9,1,2,-2,10,-5,-5,-6,-6,-8,1,1,3,4,-7,1,10,3,-7,-4,3,4,8,4,5,7,9,-3,2,-4,-4,4,-9,8,3,5,-1,-1,-8,-5,10,9,9,-6,7,1,-7,7,-3,-3,7,10,4,-7,10,-5,5,4,6,-7,9,6,3,1,-10,-2,-10,-5,8,1,5,2,10,3,3,-8,-8,-8,10,8,-4,7,7,-2,-3,4,-9,-7,2,4,2,10,8,2,9,-8,-2,-9,-6,-3,2,-6,-6,1,-2,5,-8,-5,-5,6,7,-7,10,8,-6,2,2,8,-10,-6],[-3,8,8,-2,10,-6,-4,6,10,-10,8,-4,-2,8,3,-6,-5,-10,8,5,-9,-5,-4,9,-6,10,-2,4,-7,8,6,-6,8,3,9,-6,-9,-1,3,-6,-8,-4,-1,4,9,-7,6,6,-3,-2,7,1,10,-8,4,1,-2,-2,-3,10,8,9,-5,8,5,10,-9,-7,-5,-1,3,-2,-8,8,1,-5,9,3,-8,2,10,-5,-5,9,9,10,5,-7,-6,-6,4,8,-5,7,-1,-9,3,1,10,1,-9,1,4,-6,-4,-9,-4,-2,-7,4,-8,-8,-9,-2,-8,-8,3,-2,-9,9,-1,-2,5,-3,2,10,-10,-2,7,8,6,-4],[-7,-8,-5,10,5,-2,-7,-3,-4,-9,-1,-5,-7,-6,1,4,8,-4,8,10,7,4,-9,-3,9,-9,-6,-3,-7,6,10,-6,1,-1,6,-2,3,9,4,7,5,-6,-8,4,7,-7,-9,5,-5,-10,-8,-5,10,-5,7,8,5,3,-2,-3,6,-5,-3,8,7,-8,-2,-7,9,7,-3,-8,-10,4,-7,-10,-4,-9,-7,4,4,-8,7,9,7,-1,-2,7,-9,3,-7,-10,-1,-8,7,2,-4,-8,-6,-6,-4,3,8,-9,10,-5,-8,-8,6,-7,7,-6,4,3,-4,4,10,7,7,2,-9,-6,4,6,-9,-6,-6,9,-8,-9,5,-2]], dtype = "int64")#candidate|13178|(9, 132)|const|int64
call_13177 = relay.TupleGetItem(func_7512_call(relay.reshape(const_13178.astype('int64'), [12, 11, 9]), relay.reshape(const_13178.astype('int64'), [12, 11, 9]), ), 0)
call_13179 = relay.TupleGetItem(func_7515_call(relay.reshape(const_13178.astype('int64'), [12, 11, 9]), relay.reshape(const_13178.astype('int64'), [12, 11, 9]), ), 0)
func_1916_call = mod.get_global_var('func_1916')
func_1920_call = mutated_mod.get_global_var('func_1920')
const_13182 = relay.const([-1,-5,-6,-2,5,7,-10,-8,9,2,-8,-1,1,3,10,1,-1,-10,3,1,4,1,1,2,-5,-1,9,1,10,10,-8,-3,7,5,-7,-7,-2,-2,-10,-5,9,5,-10,10,10,9,-8,6,6,-5,-8,6,1,-5,4,-5,7,-3,-8,-4,10,8,-6,3,-6,6,1,5,2,4,-1,-9,8,-5,4,7,-3,-3,-9,-4,9,10,4,3,-7,-9,3,-9,1,-9,3,2,1,8,4,-5,-2,4,-10,9,3,10,-10,-8,2,10,3,5,7,-4,-3,-5,-1,10,-5,3,-1,-3,3,-3,-9,4,5,8,1,5,8,-1,-1,4,-4,-2,-1,5,8,-1,-1,1,-2,-7,10,1,4,-8,-4,8,1,-2,-7,-8,-5,2,-6,1,1,-3,10,8,7,-8,10,1,-8,-6,8,-1,-5,-8,-7,8,-4,10,6,-9,-6,6,-3,-7,-9,-7,7,9,-3,2,3,8,3,-3,-8,4,9,1,-8,-4,-1,2,-1,1,-8,-1,-5,10,9,-8,10,-2,-3,-3,-1,-6,10,-2,10,2,-8,-3,-4,-2,-8,1,-4,7,7,-8,6,3,-3,6,10,-5,1,-5,1,-9,10,9,6,-1,5,-1,3,-9,-1,-4,-3,3,-5,10,-6,6,-10,9,-10,-8,10,-10,-5,3,-3,7,4,-9,-8,6,9,-1,-9,-6,-1,-6,6,-7,-4,-7,5,-3,3,9,-1,7,-9,9,-9,6,1,-2,-7,-6,-7,-10,-8,-3,-4,-4,9,5,10,-5,10,6,5,-8,6,5,-8,10,-7,7,-7,-6,-2,4,8,-10,3,2,5,2,4,9,-4,8,-1,-5,-7,5,-6,3,10,-4,1,-3,-4,10,-4,-1,-5,4,-3,-4,-9,-2,-8,9,-8,1,7,-8,8,-10,-6,-3,-10,-8,-5,3,-1,-1,10,7,2,-9,-3,-1,-4,3,4,2,-4,-6,3,5,6,5,5,-6,-1,8,-4,4,2,8,7,7,-10,-2,-2,-7,4,-6,5,6,9,-1,-2,10,4,9,8,5,-9,-3,6,1,3,9,-9,5,10,10,-2,-10,-8,10,-5,6,-1,-6,8,-9,7,8,-6,4,10,1,-2,-8,8,-8,2,8,2,2,-3,10,10,6,2,3,-3,6,3,-6,2,5,-8,9,9,10,4,-4,10,10,9,6,8,-7,-5,-4,-7,-3,4,-4,3,6,4,2,9,5,-9,-10,-10,10,8,-2,-4,9,-7,10,-7,-9,-8,2,-7,5,-8,3,-10,3,6,4,-2,-8,7,3,8,-4,5,4,-5,-5,4,8,10,1,-9,-8,9,2,-5,10,6,-10,10,-10,2,7,-5,9,6,-3,-6,-8,8,9,-4,9,-2,9,-4,8,-6,2,-10,7,3,-3,-3,-2,-10,4,-1,-3,3,-7,-3,-5,-10,10,-9,5,9,1,-8,2,-5,1,-1,-2,-8,-1,6,8,2,3,5,3,8,3,-6,-4,-1,-10,-1,9,1,-8,6,10,-4,-1,-5,-2,-8,-6,1,-5,5,7,8,-3,5,-4,9,-1,9,1,-6,-4,7,-9,2,-1,1,-2,3,6,9,9,5,1,3,9,-7,6,-5,-2,-10,3,-2,-10,2,-3,9,-1,3,10,5,7,-4,-6,9,7,5,-3,-7,-4,-3,2,-10,-6,-6,-10,6,5,-2,1,2,-3,10,-6,10,-5,-8,5,-1,-2,9,-2,-1,7,9,-7,7,-8,7,-3,-5,-2,-7,-2,9,-9,-7,-5,7,4,-1,-5,-2,-5,-8,-5,-7,5,-5,-4,10,-5,2,5,-4,-5,9,-5,-6,9,-1,6,-3,-1,9,-3,9,-6,-7,-2,2,-6,-1,4,-1,9,9,-9,-10,1,8,-10,3,1,9,-1,-5,1,-5,-1,-10,-8,8,3,10,7,9,8,-3,2,-6,-2,7,5,10,10,-6,9,10,4,-6,-9,-10,9,-7,9,1,2,-7,-3,5,-7,4,7,-9,-3,5,10,-10,-3,9,10,-3,1,3,7,7,-9,1,4,-10,-5,-10,2,-5,9,-5,5,5,-8,-7,-6,-10,-5,2,10,-6,-7,-9,8,-4,-9,8,-6,7,-1,10,9,2,-10,-3,8,-5,-8,6,10,5,-10,3,-5,-2,5,4,2,9,-4,-4,4,1,-4,9,8,5,-6,6,9,10,1,-1,1,9,-10,10,-10,7,-10,2,-10,-6,5,8,3,9,3,9,8,1,-8,-4,-4,4,7,1,-3,4,10,-2,-9,7,1,-7,-5,-8,1,-3,5,8,3,9,-6,-4,4,-1,6,-6,5,5,2,-3,9,6,3,-6,-3,4,6,10,-3,3,-1,6,2,8,-7,7,-6,10,6,8,8,1,-10,-4,-1,2,-7,8,2,-5,6,4,4,-3,-7,2,-3,-1,-1,5,5,-4,8,4,-9,-8,1,-8,4,-5,-2,-6,7,9,-4,4,4,4,1,1,-6,-6,10,10,-5,5,-2,-4,10,-1,-10,6,10,-5,7,-4,6,10,3,-10,-6,10,5,9,7,-2,2,10,-9,6,4,8,9,6,9,2,8,-5,6,-10,1,-2,3,6,1,-9,9,7,-7,-10,8,4,-6,10,-1,8,6,7,-6,-3,-5,3,10,-2,2,3,-5,-7,6,-4,-2,10,-4,9,-10,-6,5,-8,1,1,-1,-5,-1,-9,2,5,8,3,-10,2,7,4,-9,-6,-2,6,-1,-2,-5,-1,-6,2,10,8,8,-2,9,-6,8,-1,-8,4,9,-4,-8,-9,3,-2,7,-5,-9,-1,-2,-9,10,1,-8,-7,-4,9,-8,-8,-2,-4,-10,5,7,-8,-4,1,6,1,-10,8,1,-6,6,2,6,-6,-6,-6,8,3,-10,5,10,-9,-6,2,6,8,4,1,-5,-6,7,-3,-5,-6,-3,-2,-7,-1,8,10,-3,-8,-8,5,-4,-4,3,8,6,-3,-3,1,-6,4,-8,-9,-3,-6,-4,6,-1,10,10,10,-2,-4,-9,-6,7,-10,4,-6,6,2,2,-9,10,5,-9,-5,-1,5,-4,-7,-1,-6,6,-4,3,-4,3,7,5,3,-10,-5,7,-1,3,4,4,-10,1,5,-1,-8,-4,-10,-7,-3,1,-8,-5,1,-6,3,4,-10,-9,-8,6,5,-1,9,7,-4,7,9,10,2,-5,-6,6,4,3,-6,-10,-8,-7,10,6,-4,-8,7,-3,6,3,6,1,5,-2,4,-3,4,9,3,9,-10,-8,-5,-5,-8,-6,-8,-2,1,-5,9,-9,-7,6,6,5,2,-5,6,-9,-8,9,-2,-2,-9,9,-4,-1,-5,-1,2,-6,-1,1,-1,-2,-7,-9,-3,1,-8,8,-7,3,5,4,9,-4,-3,8,7,-6,-2,-3,-4,7,-3,3,3,3,-7,-9,-8,-7,-8,-6,-8,1,-7,-6,-7,4,9,1,1,-4,-2,7,4,5,-2,8,5,-1,-2,-5,2,-10,-7,5,-6,8,-9,-9,10,6,-5,1,4,2,9,-4,7,1,6,1,2,9,6,-6,-10,-8,7,-6,-9,8,8,-10,7,-8,-7,2,-8,-3,-8,1,-3,4,-6,2,1,-7,3,1,-9,10,7,5,4,-10,-1,10,-9,6,7,5,10,-4,-7,1,-5,2,-7,-7,-9,3,7,-3,-10,-6,-9,-4,10,9,6,-5,-3,2,6,-10,6,4,-9,-4,6,-7,-8,1,2,9,-2,-8,3,-6,9,5,-3,1,-8,2,-2,8,-1,-9,-2,10,5,10,8,-9,4,-4,-5,-9,-9,-6,10,-2,6,2,2,-2,10,6,-8,4,-9,10,-3,-8,10,3,1,-10,9,-4,4,7,-8,1,-8,-1,-5,-2,10,1,5,1,-1,2,1,-10,-2,10,-2,7,7,-8,6,1,1,7,9,-3,-7,10,-10,4,1,-1,4,-2,3,3,1,9,-9,-9,4,-9,-6,-10,1,-8,7,-5,7,-2,-7,-2,-3,2,7,10,-5,4,-8,-10,8,1,-7,-8,4,-5,-9,9,9,-3,5,8,10,3,-6,-7,1,2,4,4,-4,-9,7,-4,-1,3,-10,-8,-4,-10,-4,-7,-5,-6,-2,7,9,-8,5,-1,9,-4,6,9,3,-10,-6,-3,-7,2,-7,-5,4,-3,5,5,7,-5,1,2,-5,10,-9,-4,2,-6,-6,7,2,1,3,5,7,-2,-4,-10,-7,2,-5,-2,4,-8,-9,-2,-5,10,1,8,5,-4,-4,-10,9,9,-10,-9,-9,7,-1,10,-2,-4,6,-10,-3,2,3,10,-5,3,2,-10,-10,10,5,-7,-10,1,4,9,-8,-7,-2,-10,-6,2,7,-8,10,8,7,4,10,-3,9,-2,-2,5,-5,-9,-7,10,3,-3,-7,-10,-8,-2,-2,-3,-9,-5,5,5,6,-5,-4,-9,5,2,2,-8,8,9,7,10,-10,-8,-6,6,-6,-5,6,-9,-5,-2,-7,-7,2,-5,-9,-6,-2,3,5,10,-8,4,-8,-2,-8,-9,-7,-7,2,8,9,-10,8,8,1,-7,-2,3,-5,-4,1,7,-10,9,-8,-3,2,-7,5,8,-3,4,-7,5,2,-5,5,-3,6,-6,8,3,-3,2,4,-3,-4,-2,4,5,9,10,-1,8,4,4,-3,4,7,-3,6,8,5,-1,9,6,7,3,-1,-7,-5,7,-8,-6,-6,6,5,2,-5,-8,10,-4,1,2,6,-7,10,3,-6,3,-7,2,4,-1,-6,5,6,2,5,-9,5,4,-1,-5,5,9,-8,4,-6,3,8,9,-5,1,-4,3,-8,5,5,8,-10,1,-7,-2,-4,4,-2,7,-3,9,1,-7,10,-10,-3,-6,5,-1,-6,7,7,-3,-6,8,1,9,1,2,-9,10,-1,5,6,10,6,-2,-1,-1,7,8,-9,9,2,-3,4,-3,10,10,-1,-5,-10,-1,4,-7,3,1,2,-2,-1,-3,8,7,3,3,-10,2,-7,-2,-9,4,-4,-6,4,1,4,-8,10,-10,7,-7,-2,-8,4,-2,8,-4,2,9,9,1,3,-8,7,6,-3,-2,3,-6,7,-9,5,-7,5,-4,7,-10,7,5,-5,-9,-7,-3,-10,-7,-8,-1,-10,-1,6,1,-3,8,-8,5,6,-2,-4,3,-8,10,-7,-9,1,3,-5,3,-7,7,5,-9,-5,-6,-9,-2,9,1,3,6,1,-3,6,-4,6,8,-1,-4,9,-5,9,5,9,6,7,-8,-1,-5,-7,-10,8,6,-7,8,-10,-4,2,7,-7,-7,-6,3,6,-6,4,-7,6,-6,4,8,-10,-3,2,-6,-4,3,10,9,3,8,-5,-4,10,5,5,-10,-8,7,-2,10,6,9,-9,-1,-6,-2], dtype = "uint8")#candidate|13182|(2048,)|const|uint8
call_13181 = relay.TupleGetItem(func_1916_call(relay.reshape(const_13182.astype('uint8'), [8, 16, 16]), relay.reshape(const_13182.astype('uint8'), [8, 16, 16]), ), 0)
call_13183 = relay.TupleGetItem(func_1920_call(relay.reshape(const_13182.astype('uint8'), [8, 16, 16]), relay.reshape(const_13182.astype('uint8'), [8, 16, 16]), ), 0)
func_12461_call = mod.get_global_var('func_12461')
func_12465_call = mutated_mod.get_global_var('func_12465')
const_13199 = relay.const([3,-4,5,-3,2,-10,-4,-7,4,-5,-6,-1,4,3,5,-4,3,-7,1,-9,-1,-7,9,5,-10,2,7,4,-5,3,-10,10,-6,-4,-10,-3,3,6,-4,7,3,-3,-5,4,-6,3,7,-9,-2,-1,7,3,-5,-4,-10,-6,-2,-3,-6,8,5,7,-5,-6,-1,-9,-2,8,9,-8,-5,-4,-3,-4,8,-10,3,7,-4,-5,10,1,6,1,3,6,6,-3,-9,-8,10,1,5,-1,9,-2,-10,2,4,1,3,-5,9,5,-8,-6,1,2,-5,5,-9,-4,-9,4,8,-3,5,9,10,2,9,4,7,-7,9,6,-8,6,7,-5,5,5,7,-2,9,5,-5,-9,-7,5,-8,-3,-1,6,-8,2,-8,-3,-10,4,-2,7,-1,10,-3,-5,5,-9,-8,-6,-3,-10,-5,8,10,7,4,-7,-2,-5,3,-8,-8,7,-2,-2,9,-8,5,-2,-9,-4,4,-7,2,3,-10,4,-10,3,3,-8,7,9,-1,6,-1,-2,6,3,-9,-3,-9,-8,7,-2,-7,3,4,8,4,-5,8,1,-5,4,-1,5,-6,-1,-4,-5,1,7,-1,-1,10,-1,-3,6,5,4,-9,-7,1,9,-9,6,-4,7,7,2,4,-10,4,-7,-4,-6,-1,9,1,5,2,-1,-4,4,6,1,-7,-9,4,9,-8,-2,-8,-10,9,-10,-9,-9,-9,4,-7,5,7,5,1,-1,9,-7,4,-7,-5,6,-9,-6,-8,-4,-7,-8,-5,8,-7,5,2,-6,-1,1,-1,1,4,8,10,-8,3,3,-9,3,10,5,-2,-8,3,1,8,1,9,-5,-1,8,-9,1,-4,5,2,5,10,-7,5,-6,-9,-7,6,9,-3,3,-10,9,9,-7,5,-3,5,7,-7,5,1,4,3,7,10,7,4,-7,1,4,-8,-10,-8,-5,3,-10,-1,2,-8,10,-10,-2,-3,9,-3,-10,1,-5,1,3,9,6,10,4,8,-5,-8,-3,6,-7,-5,9,8,-5,4,-3,-5,-3,-9,-10,8,5,4,9,2,-8,-2,2,-1,-1,9,7,2,-7,-6,8,-4,-4,-3,-8,-8,1,-3,1,4,-10,5,4,-7,8,10,7,-3,2,-3,-2,-9,4,7,-8,9,-3,5,-2,10,6,-10,-4,6,-10,6,-4,4,-7,-5,-4,-2,1,-6,-2,4,6,10,8,4,7,-9,-7,10,6,8,10,-8,-9,-5,-3,-8,-5,-7,-6,-1,2,-5,3,-2,9,-2,2,-1,6,-4,4,-6,-10,-4,-5,-1,-6,-6,2,-1,-8,1,3,-2,9,-6,8,4,6,-6,6,7,-4,3,1,-6,-5,8,10,-6,8,3,-5,-3,8,9,-7,-6,-9,6,2,-8,10,6,-8,10,-4,1,10,8,5,2,4,-4,8,3,-1,-9,-7,-10,7,2,-3,-9,-10,2,6,7,1,-5,3,-9,8,-5,10,3,-7,9,9,4,-4,-5,8,10,-5,-8,-4,-3,2,-9,-5,-2,-9,-4,-8,10,-5,-2,-6,2,-1,10,-7,8,-2,6,1,-2,8,9,-6,-9,3,-6,8,-2,10,2,6,-9,-7,6,2,6,-5,7,5,4,9,-9,-8,4,3,-5,6,-5,-8,10,-10,9,3,-9,-2,-8,-5,-6,8,-2,7,-9,-3,7,7,3,-4,-3,8,9,6,-1,-2,7,8,-10,9,10,-4,-5,-2,8,-9,-7,2,-9,1,3,-6,5,10,-10,5,-10,7,-1,2,-7,8,-1,9,-3,7,-6,-6,8,-6,-2,-10,-3,-8,8,-2,4,-10,-4,-5,9,-3,-7,-6,5,-7,7,1,-4,4,2,6,8,1,3,7,7,9,-10,-3,10,-4,-5,7,-6,1,7,-4,-3,4,-10,-10,-2,-5,3,-9,-5,-10,-10,2,-7,3,-2,6,-1,-3,-3,2,-1,10,-2,-9,-4,1,-7,1,8,8,3,5,-6,7,-1,-5,-3,-6,-5,-5,-5,6,-9,-6,3,9,7,9,4,3,4,-8,2,-5,-9,8,7,6,1,5,5,9,7,7,6,7,-7,-1,8,-8,6,-3,-1,9,10,-5,5,10,4,5,7,-3,6,-7,-8,1,4,7,2,7,-7,8,-8,7,-6,-5,-4,-1,-2,5,3,4,-10,3,6,-4,4,-6,-2,8,5,3,2,2,-2,4,4,5,10,6,7,8,3,6,6,5,5,-3,-2,1,-5,-9,2,3,-1,-5,-10,-10,6,10,7,-3,1,-1,4,-7,6,6,-10,-9,7,-9,-8,9,4,8,-3,6,-9,-9,9,-10,3,-5,4,-2,-10,7,2,4,5,7,-2,-6,-2,-4,2,-7,9,-8,8,5,2,7,-9,-10,-4,-6,4,9,-8,8,-6,-7,-9,-9,6,6,-9,-4,6,5,-2,8,5,-1,-10,-7,8,-1,-10,3,-6,5,-1,-4,-10,-9,-1,8,6,-1,10,3,3,-4,-8,-8,-7,-10,10,7,4,-2,-5,-1,10,7,1,6,8,4,9,10,4,4,5,-4,9,4,-6,5,8,-8,4,10,5,7,7,-8,7,-3,-5,-1,-4,-6,-9,-8,5,-5,-1,-10,-10,-10,6,8,-2,-8,-9,-1,4,-3,10,-10,-9,-3,-10,5,-2,9,-3,-5,-9,1,-2,10,2,6,9,7,1,-8,-3,-4,-8,-6,9,7,2,7,4,9,5,8,-3,1,2,-8,-2,3,5,-2,-9,-2,1,-7,9,9,-1,-5,1,-10,-5,2,-1,7,4,-8,-10,-4,-2,-4,-6,4,-3,2,6,8,10,-7,5,-5,-3,2,7,-4,6,1,-2,-9,-5,8,-3,-1,6,-4,-1,-10,3,-8,9,-1,-10,6,7,-9,-8,-4,-3,6,4,-4,10,-1,-7,3,-3,-10,-7,6,-4,6,4,-3,-4,8,-8,3,6,10,5,9,8,-10,6,8,-3,-9,4,-5,10,6,-6,3,5,7,-7,-7,-6,1,-4,-3,5,5,-4,10,4,2,-5,3,-8,-9,9,-3,2,8,-7,5,2,3,-10,2,9,5,-8,-5,9,5,-7,-2,4,-6,-2,3,3,-10,1,1,5,-3,2,-9,-1,10,3,-8,3,-10,-9,7,-10,-6,-10,-10,-3,-5,-2,-8,1,2,10,-2,6,-8,-4,-6,3,-7,1,5,2,-10,6,-7,6,10,-1,-8,6,-3,-2,-7,3,7,9,9,-2,6,-7,-7,-4,8], dtype = "int64")#candidate|13199|(1232,)|const|int64
const_13200 = relay.const([2,4,8,-4,-1,6,2,-10,9,-10,-1,9,9,-7,9,-4,5,-6,-6,-7,1,4,1,6,5,-4,-2,-6,-6,-7,1,6,1,-9,6,1,3,1,-9,-3,-3,-3,-2,6,-10,-3,-4,6,-2,-2,5,6,-1,2,-5,4,-4,5,-6,5,3,6,6,-5,-9,9,-2,-9,-5,3,-8,10,-4,7,5,5,-10,9,4,-6,-3,-6,3,8], dtype = "int8")#candidate|13200|(84,)|const|int8
call_13198 = relay.TupleGetItem(func_12461_call(relay.reshape(const_13199.astype('int64'), [1232,]), relay.reshape(const_13200.astype('int8'), [84,]), ), 0)
call_13201 = relay.TupleGetItem(func_12465_call(relay.reshape(const_13199.astype('int64'), [1232,]), relay.reshape(const_13200.astype('int8'), [84,]), ), 0)
bop_13207 = relay.bitwise_xor(const_13200.astype('uint32'), call_13198.astype('uint32')) # shape=(8, 13, 84)
bop_13210 = relay.bitwise_xor(const_13200.astype('uint32'), call_13201.astype('uint32')) # shape=(8, 13, 84)
output = relay.Tuple([call_13172,call_13177,const_13178,call_13181,const_13182,const_13199,bop_13207,])
output2 = relay.Tuple([call_13173,call_13179,const_13178,call_13183,const_13182,const_13199,bop_13210,])
func_13218 = relay.Function([], output)
mod['func_13218'] = func_13218
mod = relay.transform.InferType()(mod)
output = func_13218()
func_13219 = relay.Function([], output)
mutated_mod['func_13219'] = func_13219
mutated_mod = relay.transform.InferType()(mutated_mod)
func_12686_call = mod.get_global_var('func_12686')
func_12687_call = mutated_mod.get_global_var('func_12687')
call_13229 = relay.TupleGetItem(func_12686_call(), 0)
call_13230 = relay.TupleGetItem(func_12687_call(), 0)
var_13232 = relay.var("var_13232", dtype = "int8", shape = (2, 1560))#candidate|13232|(2, 1560)|var|int8
bop_13233 = relay.equal(call_13229.astype('bool'), var_13232.astype('bool')) # shape=(2, 1560)
bop_13236 = relay.equal(call_13230.astype('bool'), var_13232.astype('bool')) # shape=(2, 1560)
output = relay.Tuple([bop_13233,])
output2 = relay.Tuple([bop_13236,])
func_13244 = relay.Function([var_13232,], output)
mod['func_13244'] = func_13244
mod = relay.transform.InferType()(mod)
var_13245 = relay.var("var_13245", dtype = "int8", shape = (2, 1560))#candidate|13245|(2, 1560)|var|int8
output = func_13244(var_13245)
func_13246 = relay.Function([var_13245], output)
mutated_mod['func_13246'] = func_13246
mutated_mod = relay.transform.InferType()(mutated_mod)
func_12686_call = mod.get_global_var('func_12686')
func_12687_call = mutated_mod.get_global_var('func_12687')
call_13274 = relay.TupleGetItem(func_12686_call(), 0)
call_13275 = relay.TupleGetItem(func_12687_call(), 0)
output = relay.Tuple([call_13274,])
output2 = relay.Tuple([call_13275,])
func_13291 = relay.Function([], output)
mod['func_13291'] = func_13291
mod = relay.transform.InferType()(mod)
mutated_mod['func_13291'] = func_13291
mutated_mod = relay.transform.InferType()(mutated_mod)
func_13291_call = mutated_mod.get_global_var('func_13291')
call_13292 = func_13291_call()
output = call_13292
func_13293 = relay.Function([], output)
mutated_mod['func_13293'] = func_13293
mutated_mod = relay.transform.InferType()(mutated_mod)
func_12409_call = mod.get_global_var('func_12409')
func_12411_call = mutated_mod.get_global_var('func_12411')
call_13312 = relay.TupleGetItem(func_12409_call(), 0)
call_13313 = relay.TupleGetItem(func_12411_call(), 0)
func_7063_call = mod.get_global_var('func_7063')
func_7066_call = mutated_mod.get_global_var('func_7066')
const_13334 = relay.const([5.174497,-8.112001,6.367148,-6.473938,5.281930,-7.764200,-7.566362,-7.819103,-6.712113,3.528362,-7.599084,6.240947,5.500436,4.952970,-7.348508,6.002220,8.953476,-5.741598,1.323739,-9.664308,2.535927,-5.012509,-8.864274,1.138487,8.080609,5.299867,-7.819412,-2.250694,6.652852,9.824946,8.709264,7.335470,-6.105820,8.896732,-0.195276,-8.182326,-6.062691,8.533910,-7.114827,5.707863,4.586430,3.460857,1.798739,4.186217,-0.880871,-0.540769,7.790421,-0.801771,6.054933,-0.414943,9.289345,0.382463,0.244291,-7.044891,-2.804858,9.876675,1.620843,5.601916,-1.696502,6.358043,0.301147,-9.976401,5.682257,1.153168,-1.225922,-5.047222,-6.914411,1.789137,0.003435,3.647528,8.910880,8.654056,-2.513301,4.587608,-1.915531,4.410760,-8.775389,-7.930761,-2.014796,2.789396,1.317683,-2.140341,7.789802,7.530139,4.427933,-9.415651,-4.006466,1.784311,8.113680,3.813810,2.568195,3.350659,8.418218,6.119775,4.895744,-5.674670,3.660640,9.532299,3.161343,0.204247,3.931915,9.580294,0.758631,-5.519345,-5.564608,-1.451155,-9.467367,3.382191,-6.027543,0.420521,7.761495,-2.074811,-1.128325,-4.301370,5.798322,1.402502,5.503309,-7.197369,5.565857,3.242847,-8.706699,-1.760853,-1.945326,-2.452859,-1.451217,-8.870680,-2.146580,-8.684612,-1.121343,-0.190919,-5.413214,8.792259,-9.836370,3.753808,-2.746095,7.683795,-6.444459,-2.052590,-5.405932,8.322729,-6.947818,-7.680326,9.675025,-4.655628,4.197420,4.279788,-8.824973,-8.868653,-5.843730,-3.838401,-3.176035,7.673326,0.667557,0.801512,2.675534,0.918094,0.460783,-5.672677,-4.442495,-8.789711,8.784843,-6.213091,-0.661772,-7.801581,-9.329957,-2.123103,0.107870,3.437570,5.120745,-6.162379,-8.359533,-8.520318,2.158234,-4.324182,5.326904,-7.456937,-9.108995,-3.078307,2.863313,3.686541,-7.253776,-6.257703,0.861636,-5.972361,6.169593,1.200162,-4.823039,8.341482,-8.919532,-5.454381,-5.847529,-9.685388,8.099670,-3.163088,-7.580246,-3.460380,8.049102,-2.132618,-3.805053,6.545859,6.298000,0.588163,-0.759441,6.612947,-3.895628,3.487308,-8.020075,6.802886,-7.609696,-7.725824,6.187034,8.889687,-9.322226,-2.754216,4.414243,-7.852338,-2.672282,-5.094743,-8.181204,-6.478112,6.702220,1.733456,4.012054,7.008376,-6.011707,-0.937522,-3.590020,-3.037078,5.982834,-0.745454,-2.959833,4.702039,-5.390569,-8.110263,-6.865330,-5.398917,-8.775134,6.698555,-3.075575,8.329889,1.748813,0.734953,-4.358308,-8.781803,-5.582788,-7.874749,0.848189,4.980727,3.844907,-2.517909,-9.067609,-3.143225,-0.490000,0.406946,-2.511783,-5.357489,-9.413275,-3.115962,6.710448,0.958548,5.173963,0.664001,4.547970,-4.261413,-8.642754,-9.443327,5.356147,3.095599,6.272055,0.422414,8.494690,2.071002,1.533140,-0.508783,-0.824763,-8.091839,0.434121,-9.817009,-9.027616,-1.330636,1.165304,-0.818913,3.699079,-4.465014,-5.192873,-4.530494,6.095305,7.140527,1.413502,-2.746153,3.739500,3.626863,-4.267556,-0.956026,5.118215,8.869780,3.109145,0.300475,4.231335,1.085854,4.239782,9.481714,5.796568,5.762736,0.330727,-3.358718,-7.980017,2.358284,2.736432,-9.814543,-0.901221,1.025555,3.247830,-7.705029,1.763964,-3.774122,-3.952021,4.934021,-3.388446,-3.978413,-1.784405,6.064653,9.160859,7.799113,-7.913268,6.529107,0.594285,-9.494546,3.799153,4.121523,2.909756,-2.202615,-2.916098,9.370848,-1.057229,-6.125680,4.332782,-8.714035,-2.330082,4.751006,5.277613,-3.519044,-1.004310,8.258876,5.838922,-2.963539,-6.435506,-2.320183,-9.439915,6.458052,-1.096322,-0.232630,2.522682,-2.438905,-8.114480,-1.545525,-4.371866,6.680590,-5.586541,-4.543089,1.885740,-9.411470,0.469670,-8.165992,-4.223069,1.239885,5.802737,-5.429253,-9.705277,6.560700,9.380141,-3.110748,-3.816812,-4.230737,-0.492826,-0.539902,7.453317,7.036146,-5.691662,-9.129448,0.846391,6.383667,7.156222,-9.603110,-5.493088,9.817156,1.149037,6.660358,1.348471,-5.750015,-1.045384,8.225612,2.501007,5.207010,2.687263,7.888605,7.039486,3.437433,-1.418163,-4.397615,6.618025,-8.022020,4.484791,-2.279384,6.455624,-7.561328,-7.437253,0.289827,-5.038236,3.591142,5.925529,-7.498333,7.607161,8.174661,7.189648,-1.588927,8.069696,-2.589473,-1.893237,5.516182,3.928377,6.548741,-3.273595,-6.120947,8.202366,-0.203155,-8.180462,1.134915,-7.197297,2.485383,-3.122545,2.857027,3.521508,-7.646505,-1.539396,7.897013,8.240061,7.893783,-7.903769,-4.038115,9.433107,-2.447502,-6.088530,2.497035,-9.143270,-2.287261,-9.679150,6.073951,6.165551,8.534212,3.942898,-3.204402,-8.086856,-1.595629,2.390153,-9.739006,3.141795,-6.000514,0.730516,2.739747,-5.286700,-4.734529,2.766644,-9.246731,-4.126677,-9.006620,9.070432,-1.540483,3.342776,-6.462314,-6.467701,3.519706,7.015101,4.350781,-7.768691,-4.384576,-9.625762,1.060003,-9.062719,8.020384,-8.759730,5.478968,-1.755401,0.589371,-8.138959,-2.170978,-5.496245,7.653600,6.872780,-7.994093,9.703450,-6.821615,-5.358431,2.093658,-4.031803,8.508643,-8.837045,-6.931477,-9.295723,-5.216645,3.158875,6.043841,4.237346,5.148117,5.995062,-0.281151,-4.855202,1.056120,-0.973946,-4.628857,3.591870,9.595166,-7.045296,-8.621245,8.050540,5.545405,2.837467,2.849776,3.390582,0.201372,-3.148930,4.659637,-7.586398,0.095703,7.423602,6.156896,4.985775,1.098823,-2.457175,8.373872,-8.783318,-5.829878,6.242836,-8.943817,-3.064287,-8.955062,8.675829,-7.483835,-1.487734,4.694784], dtype = "float32")#candidate|13334|(540,)|const|float32
const_13335 = relay.const([1.727645,-8.703698,2.647921,-7.887353,-3.304598,6.065803,-6.237700,6.082034,0.965349,8.762028,8.186218,-0.943303,-1.692820,-9.881236,6.555087,-7.127273,-2.944811,-0.199911,-1.241071,9.898922,-3.097539,6.873159,4.823939,6.216168,-7.960522,3.891189,-9.218639,0.290877,1.344613,-1.864521,-9.197877,-6.140945,2.163520,-9.240701,6.171275,3.272945,-7.184656,-4.884644,9.982657,-4.332201,-4.957411,9.203869,2.515172,8.372506,-0.175584,5.699204,9.819114,5.816449,0.514892,-2.668305,-3.997468,-3.689364,-4.903213,-2.468852,-4.562257,3.752930,-3.313519,-6.813026,1.932649,4.292141,6.982106,-7.477901,-7.264163,-3.660323,0.185489,-8.833644,-8.314046,-3.766586,1.473477,-1.021204,6.927920,-9.177292,-1.887145,-9.491054,9.952712,-8.974669,-3.812815,6.059219,-5.784457,-0.552245], dtype = "float64")#candidate|13335|(80,)|const|float64
call_13333 = relay.TupleGetItem(func_7063_call(relay.reshape(const_13334.astype('float32'), [6, 15, 6]), relay.reshape(const_13335.astype('float64'), [80,]), ), 5)
call_13336 = relay.TupleGetItem(func_7066_call(relay.reshape(const_13334.astype('float32'), [6, 15, 6]), relay.reshape(const_13335.astype('float64'), [80,]), ), 5)
output = relay.Tuple([call_13312,call_13333,const_13334,const_13335,])
output2 = relay.Tuple([call_13313,call_13336,const_13334,const_13335,])
func_13339 = relay.Function([], output)
mod['func_13339'] = func_13339
mod = relay.transform.InferType()(mod)
mutated_mod['func_13339'] = func_13339
mutated_mod = relay.transform.InferType()(mutated_mod)
func_13339_call = mutated_mod.get_global_var('func_13339')
call_13340 = func_13339_call()
output = call_13340
func_13341 = relay.Function([], output)
mutated_mod['func_13341'] = func_13341
mutated_mod = relay.transform.InferType()(mutated_mod)
func_12296_call = mod.get_global_var('func_12296')
func_12297_call = mutated_mod.get_global_var('func_12297')
call_13342 = relay.TupleGetItem(func_12296_call(), 2)
call_13343 = relay.TupleGetItem(func_12297_call(), 2)
output = call_13342
output2 = call_13343
func_13351 = relay.Function([], output)
mod['func_13351'] = func_13351
mod = relay.transform.InferType()(mod)
mutated_mod['func_13351'] = func_13351
mutated_mod = relay.transform.InferType()(mutated_mod)
func_13351_call = mutated_mod.get_global_var('func_13351')
call_13352 = func_13351_call()
output = call_13352
func_13353 = relay.Function([], output)
mutated_mod['func_13353'] = func_13353
mutated_mod = relay.transform.InferType()(mutated_mod)
func_12553_call = mod.get_global_var('func_12553')
func_12555_call = mutated_mod.get_global_var('func_12555')
call_13410 = relay.TupleGetItem(func_12553_call(), 0)
call_13411 = relay.TupleGetItem(func_12555_call(), 0)
func_13218_call = mod.get_global_var('func_13218')
func_13219_call = mutated_mod.get_global_var('func_13219')
call_13413 = relay.TupleGetItem(func_13218_call(), 6)
call_13414 = relay.TupleGetItem(func_13219_call(), 6)
uop_13424 = relay.log2(call_13410.astype('float64')) # shape=(420, 4)
uop_13426 = relay.log2(call_13411.astype('float64')) # shape=(420, 4)
bop_13438 = relay.subtract(call_13410.astype('int16'), relay.reshape(uop_13424.astype('int16'), relay.shape_of(call_13410))) # shape=(420, 4)
bop_13441 = relay.subtract(call_13411.astype('int16'), relay.reshape(uop_13426.astype('int16'), relay.shape_of(call_13411))) # shape=(420, 4)
func_12296_call = mod.get_global_var('func_12296')
func_12297_call = mutated_mod.get_global_var('func_12297')
call_13443 = relay.TupleGetItem(func_12296_call(), 0)
call_13444 = relay.TupleGetItem(func_12297_call(), 0)
func_13291_call = mod.get_global_var('func_13291')
func_13293_call = mutated_mod.get_global_var('func_13293')
call_13445 = relay.TupleGetItem(func_13291_call(), 0)
call_13446 = relay.TupleGetItem(func_13293_call(), 0)
bop_13451 = relay.left_shift(bop_13438.astype('uint16'), relay.reshape(call_13410.astype('uint16'), relay.shape_of(bop_13438))) # shape=(420, 4)
bop_13454 = relay.left_shift(bop_13441.astype('uint16'), relay.reshape(call_13411.astype('uint16'), relay.shape_of(bop_13441))) # shape=(420, 4)
func_7984_call = mod.get_global_var('func_7984')
func_7987_call = mutated_mod.get_global_var('func_7987')
const_13458 = relay.const([9.425477,1.215077,4.852198,8.448704,-0.600828,-4.157227,6.396451,-2.567452,-3.072185,6.899297,4.651461,5.386312,0.706791,4.787097,6.360692,9.773795,-8.520854,1.515314,-8.202711,-0.886547,-3.089581,6.513260,-9.016836,7.237771,-5.411937,7.494765,8.148903,6.856579,7.101840,-9.039447,3.713893,7.713598,-5.407501,4.431396,1.104687,-3.411746,4.425243,-0.377520,5.129649,-1.236206,-2.120527,5.312210,9.285308,-7.916481,3.311802,1.844311,-9.970336,3.636393,9.639686,7.533809,-0.628038,-5.195958,1.528754,-9.679190,-7.199587,8.700811,-8.931296,-9.948617,7.630070,-2.673894,3.916450,9.053027,7.795963,4.758218,2.026089,3.911554,-4.447049,5.241451,-6.711802,-4.030642,3.815051,5.221579,-1.079841,1.649505,-3.945226,-2.548607,8.124687,-4.326725,-1.135119,3.770317,-2.402934,-2.528060,-0.887975,6.879878,9.278329,9.540295,1.196140,-5.960927,-2.905251,8.468335,-5.583874,9.570124,9.988687,-4.994150,1.638036,3.011178,-7.843138,-1.913880,-8.067111,-6.193214,7.578522,-4.045418,-8.242678,-2.445885,-2.591146,-1.446345,4.727013,-2.188588,4.763397,0.779837,-4.884407,-1.594025,-6.211198,9.284907,-1.156072,-5.513731,5.199446,-9.728882,0.267470,-6.090968,-7.793114,-6.034504,-0.480026,-2.014569,7.482380,-6.246948], dtype = "float64")#candidate|13458|(126,)|const|float64
call_13457 = func_7984_call(relay.reshape(const_13458.astype('float64'), [6, 3, 7]))
call_13459 = func_7984_call(relay.reshape(const_13458.astype('float64'), [6, 3, 7]))
uop_13464 = relay.cos(call_13410.astype('float64')) # shape=(420, 4)
uop_13466 = relay.cos(call_13411.astype('float64')) # shape=(420, 4)
func_5450_call = mod.get_global_var('func_5450')
func_5453_call = mutated_mod.get_global_var('func_5453')
const_13469 = relay.const([-9.900767,1.496804,2.837353,2.622589,6.750421,-2.600192,-9.818450,1.318407,-5.186525,-9.350794,6.656147,3.429079,6.760547,-5.944237,-3.387589,4.894227,-1.387252,2.794860,8.990308,-8.121926,3.342995,7.521661,-0.921802,8.725355,-5.569928,0.263968,8.603293,3.508712,9.820613,2.219613,0.364249,4.266996,1.739100,5.664022,5.497001,4.041450,-6.569032,-1.371620,8.467615,4.166656,2.884437,3.053689,9.745254,0.273714,-2.425521,-7.175232,-6.644665,4.820026,-3.999266,-5.024692,6.920445,-7.872627,-7.340865,-5.372603,2.384843,8.150824,-4.936973,8.586664,7.967820,6.917526,1.232545,8.758198,0.043472,5.166910,3.801925,3.429514,-3.223384,-5.647181,-9.925807,-2.346695,-0.481345,8.678893,6.052972,-5.961306,5.275052,-6.384425,0.162571,-9.922711,3.611769,-5.767071,-0.714985,5.301729,-1.606035,1.612700,-7.187238,-0.671935,-0.666531,-8.719320,-5.533493,-4.287217,-2.843701,-4.928998,1.052970,-8.506912,-1.821603,7.238570,-6.027872,5.783268,2.820308,1.011544,3.986400,-6.319660,8.269188,0.540635,-7.684429,-1.069428,-4.963260,-9.646477,1.421334,-6.530740,-2.439780,-8.324644,-0.303317,8.519987,6.129213,-8.596065,-5.918091,-6.008122,1.512406,5.370044,1.459249,-6.220448,-3.124521,1.966911,0.655861,8.124759,-6.530931,-7.521802,-5.644280,-7.761131,-9.904055,-0.184950,6.434842,2.519502,-5.793208,-6.878781,-7.831168,8.667753,-9.612833,-9.715376,7.168543,1.131668,-4.483695,-7.078447,6.111315,-6.599014,1.035234,-1.121589,4.997400,3.330224,-0.384101,2.786125,-8.829241,5.264895,-1.025710,-2.641229,2.985065,7.804610,0.815591,-7.756850,-2.320135,0.609449,7.249814,-4.639818,4.995940,-1.547582,-5.314135,-1.818479,6.210790,7.188590,5.436784,5.672196,4.831363,-8.531380,-5.764711,1.731352,0.250854,8.797723,-7.251152,5.078222,6.083269,5.802150,-2.363170,5.743935,8.464199,3.132816,-9.762111,0.011407,8.212632,6.093801,8.839562,-9.902511,3.722955,3.978496,8.947991,9.279050,9.024264,-3.801321,-7.420529,1.933178,-3.147619,-1.645060,5.553802,-2.388093,-7.751128,-0.945502,-3.958915,-6.852872,-9.590261,6.740302,7.299267,8.204684,5.792285,-8.126609,1.860934,2.602886,-7.232760,-8.238583,-5.531369,-4.593756,-3.723096,-2.365425,9.143984,-8.606008,-6.571448,5.097423,-7.817055,-9.484694,6.565030,7.696544,-7.378510,-0.380708,3.090986,-4.694867,-9.852307,-8.443079,-3.172226,6.431273,0.983386,2.994309,-0.386877,7.822595,9.319534,-2.804394,-8.407737,6.303375,8.761436,8.572367,2.956119,-6.245056,-5.201591,-0.867687,2.842239,-6.074892,-5.104636,-5.282033,1.607812,9.900907,-6.137148,3.338915,-0.656481,4.165387,-6.300430,-2.541877,0.176226,3.510256,5.753210,-2.174638,-1.060632,3.211943,-7.707031,4.910164,-1.227731,3.462412,-9.019373,5.163693,4.144119,-6.110398,-0.996515,5.002003,5.893232,0.096117,3.046118,4.922146,4.145122,-5.779821,6.511178,5.427752,-4.275215,-8.033068,5.158886,7.325122,-9.679099,-0.712470,-0.393275,-3.234067,7.323566,-2.383899,1.603279,-3.510515,4.961648,0.788196,-3.726696,-7.186591,8.160657,9.213576,-7.524577,0.842453,2.987891,7.067787,-2.713735,5.500805,-6.469333,-4.408873,-4.147985,-5.307911,5.025100,-8.769428,-7.593198,-8.029720,0.656561,-8.032453,0.459373,-9.373292,6.583802,-6.581813,-6.844515,5.352221,-7.763309,-2.495598,-5.384803,-5.027182,-9.875086,1.923298,9.794351,-7.527024,-6.655540,-2.146926,5.906875,-5.115538,0.009229,-6.220859,-3.261703,-6.706144,3.398619,1.084249,3.856978,5.979266,-6.133163,-0.809334,-3.928691,-9.356191,2.371517,-2.084871,-9.949827,8.724937,-8.420581,0.049255,-6.039648,0.360190,-0.430483,6.350982,-1.202300,-8.101353,-5.489043,-2.086437,0.746204,7.562673,3.523258,3.360092,-9.766664,7.840524,-6.215340,9.789544,-4.564644,-6.544553,-1.273540,-3.516685,-0.234418,8.799235,7.463549,-1.660813,2.528450,1.059708,5.718454,-2.840610,-6.146722,-7.100192,-1.114733,3.667018,-0.790989,6.262674,2.529659,2.936946,-6.948469,-2.066570,-5.269445,2.387669,-7.175651,4.117623,6.879966,4.682131,5.041279,4.701821,-3.224631,0.426283,-9.717160,3.086463,-6.229998,-7.916634,1.945723,2.544307,1.253969,7.504105,8.973579,4.003342,-6.100172,-5.783975,3.191751,7.837383,-9.665382,-9.204030,-9.844672,6.416888,2.273996,6.205654,-9.760962,-3.150454,0.963571,-1.652430,-2.347846,-3.961441,-9.891020,0.782075,-4.176508,7.178954,2.329984,7.330266,2.931314,-6.047265,-6.396707,-7.521001,-1.706641,-1.059566,-4.497504,9.974367,9.463670,-4.355538,-6.437329,5.377677,-0.577746,-0.976111,-7.765824,9.311306,-0.018843,-5.305604,-0.809760,1.977923,-2.643873,-2.840438,-1.196891,9.994249,3.169375,-9.356070,3.973337,-8.268080,-4.754626,1.306208,1.101290,2.677984,3.387536,-0.973965,-1.377034,-0.337181,-5.439501,4.887065,-1.113103,-9.924427,-4.463721,-3.111931,-8.896127,-0.537689,5.260100,9.148028,-3.161105,-2.869501,4.106986,2.279169,-2.085453,-4.546397,8.881137,-6.270710,-0.265138,7.442794,6.540659,8.892731,9.264452,-2.932771,8.761856,5.841548,-9.583975,2.584308,-3.819193,8.737770,5.033150,5.457085,-4.777910,-4.764905,-9.531630,9.542139,4.833740,6.662096,-6.294817,3.072470,-5.898349,-9.714992,-0.822326,-8.170201,-9.556347,-9.361429,8.253767,-3.211389,5.281137,-7.549883,7.435507,7.730529,-7.787265,0.913508,-2.089542,0.355959,1.357645,-0.126948,9.491851,-1.478320,-2.539826,3.417324,0.013610,4.361381,7.827182,-6.250524,-6.612574,2.090095,0.783735,6.114389,-3.428789,-3.730199,-3.784453,4.542935,5.025588,-1.478316,-8.351578,4.566575,1.287624,-6.537928,-6.246913,2.278677,-1.347087,-9.969571,1.926972,-7.731107,-4.915246,1.235734,9.972119,-4.073555,5.882043,-4.213635,6.339912,7.326624,4.761763,5.466462,-5.288712,-5.134455,1.975247,-1.363139,-3.315528,-6.638629,2.820096,-3.641905,5.043788,3.110847,7.678019,-5.323075,2.900008,5.245039,-5.404344,3.573356,-9.608818,0.520825,-9.448021,-1.446798,-1.776638,0.192240,0.262534,-3.877265,-5.494043,2.403618,-8.312901,-8.551317,1.954499,-3.697235], dtype = "float64")#candidate|13469|(600,)|const|float64
call_13468 = func_5450_call(relay.reshape(const_13469.astype('float64'), [12, 5, 10]))
call_13470 = func_5450_call(relay.reshape(const_13469.astype('float64'), [12, 5, 10]))
output = relay.Tuple([call_13413,call_13443,call_13445,bop_13451,call_13457,const_13458,uop_13464,call_13468,const_13469,])
output2 = relay.Tuple([call_13414,call_13444,call_13446,bop_13454,call_13459,const_13458,uop_13466,call_13470,const_13469,])
func_13478 = relay.Function([], output)
mod['func_13478'] = func_13478
mod = relay.transform.InferType()(mod)
output = func_13478()
func_13479 = relay.Function([], output)
mutated_mod['func_13479'] = func_13479
mutated_mod = relay.transform.InferType()(mutated_mod)
func_13291_call = mod.get_global_var('func_13291')
func_13293_call = mutated_mod.get_global_var('func_13293')
call_13485 = relay.TupleGetItem(func_13291_call(), 0)
call_13486 = relay.TupleGetItem(func_13293_call(), 0)
const_13492 = relay.const([[6,-4,-2,7,-2,6,10,-6,7,-7,7,-10,5,-5,1,-6,3,7,-10,3,-5,-9,5,1,5,6,-1,3,8,-10,3,-8,-7,-4,-1,10,8,-10,-5,4,10,-10,-6,5,-10,5,-3,2,9,-7,-2,6,-6,-2,9,9,-8,8,-3,-10,-10,-8,7,4,-5,6,-8,7,9,5,7,-7,6,-1,-8,3,5,2,-3,-7,7,-8,-6,-1,6,4,1,-8,-7,-5,9,5,-9,-3,-5,-1,-6,9,3,8,7,3,-1,4,-2,-5,7,3,8,8,-8,6,-7,-7,-5,2,-5,2,9,-6,-5,10,-10,9,2,-1,-8,6,2,-8,6,-10,8,-9,-8,-8,7,-6,-2,4,4,-6,-2,8,4,10,-9,-3,10,5,-8,-10,2,3,-3,-8,4,-9,-6,10,-4,-10,-1,-1,-6,1,-9,10,-9,5,-1,10,9,-4,6,-5,-6,-7,-9,-10,-5,10,3,7,-4,-7,7,2,7,-3,10,5,-4,-3,-1,9,-5,3,-8,4,-3,8,-8,-10,-6,10,-2,2,-7,10,-9,7,-7,-3,-1,8,10,5,-4,-5,-7,-6,9,-4,2,-8,2,-4,4,-5,-6,8,-7,-4,-10,-3,3,6,7,10,-6,10,-2,9,4,2,9,6,4,8,10,-1,-3,6,-8,9,3,-6,-6,2,10,-9,-3,-4,-6,1,6,-10,-10,8,3,6,1,-10,6,6,-5,5,-2,6,-1,-8,10,7,4,-10,5,2,5,-2,3,8,-2,5,10,-4,10,-2,-9,2,4,-2,-7,4,4,4,-3,5,-3,-1,-4,8,8,4,-6,-3,-8,9,9,7,9,-1,2,-10,-6,10,10,4,5,-7,4,-1,-7,6,-6,-7,4,9,-4,3,-2,10,10,-1,-1,5,-10,-8,1,-1,8,-3,-8,10,-3,-3,-5,-8,6,1,-8,5,-5,5,10,4,-3,-2,-9,-4,7,-7,10,-9,-5,-6,-7,2,-5,-9,-10,2,-9,-8,-9,1,10,8,3,8,8,-2,-8,-10,-1,7,3,7,-6,-2,-7,-10,-1,9,-8,6,3,-2,4,4,-10,-7,4,6,-8,4,-1,2,-5,-10,10,-8,3,5,-3,-3,2,7,-1,-6,1,-4,-6,-4,9,-3,-9,-3,-4,-2,-7,-9,2,-5,-1,3,2,-4,-8,-1,-2,8,-9,6,7,-8,2,3,7,8,-10,-10,10,3,2,-5,-10,10,3,-3,-5,-5,2,2,10,7,-10,-2,-3,-8,-3,-3,-5,-2,-8,-9,8,1,-3,-9,-2,-3,-3,3,-2,-3,4,-9,7,-5,8,10,-7,-6,-2,5,9,-8,-3,-2,-2,1,9,4,1,2,3,-5,-3,-3,4,-10,-6,-9,1,-5,6,-10,-5,-2,-4,-6,-8,-9,2,7,10,10,8,-4,-3,-2,4,-4,6,7,-4,-9,6,5,-10,5,-2,3,-8,-8,5,-8,2,9,-9,10,-1,-8,-4,6,-7,-1,10,8,-2,-9,-8,7,-10,-8,5,4,4,3,-7,4,-4,1,-1,-1,7,2,-8,5,-7,1,-10,6,-9,6,1,-7,4,-8,1,10,1,5,-2,9,3,1,-7,1,-7,-1,6,-3,8,-5,-1,8,8,-3,-2,-2,-4,-2,10,-6,-10,-5,-5,-7,8,-3,-9,-2,2,9,-8,3,-4,3,-8,-10,6,-5,4,7,3,2,10,-9,9,-8,-9,-9,6,6,10,4,-1,-8,-10,6,4,-5,4,-7,-4,-2,-6,7,-4,7,6,2,2,-2,-5,-8,-8,3,9,-7,-5,-7,1,-2,-4,8,2,-1,10,-7,-2,5,-7,4,-8,-10,-9,1,-10,2,6,8,-2,10,-2,8,-1,-8,1,6,-10,-2,7,8,8,5,-1,-2,4,6,1,2,9,2,-9,-1,7,9,-7,-3,-6,-1,-1,-2,4,-1,-2,-5,-2,-2,7,3,9,8,-8,2,-9,-10,3,3,10,10,-8,4,4,-2,-1,7,-4,3,7,-5,8,7,7,-9,-6,10,6,4,10,-2,-9,-9,5,-7,1,7,9,-9,5,-5,8,3,-9,-5,2,-10,-8,8,-4,6,-8,5,6,-8,-3,-2,-10,5,3,-10,9,8,2,-1,-10,2,-9,-9,-2,-7,-2,3,5,3,8,-1,-5,6,-4,6,5,3,-6,2,1,-10,-10,7,1,-1,3,-9,2,8,4,9,-1,-7,9,2,1,-3,6,-6,9,-7,-3,3,-2,1,-6,-7,-7,3,-6,-3,10,9,7,-1,5,1,4,3,-6,2,-7,8,-7,-7,7,-1,-10,-2,-6,-3,1,-8,7,-1,-6,-4,5,-6,-4,-5,-4,9,5,-1,4,-1,-10,-2,-8,2,7,8,10,4,6,-9,6,-6,-9,3,3,-8,10,-9,-2,-4,-9,-1,-4,-4,-6,3,-9,2,-6,-1,8,-9,1,7,-1,2,-3,8,10,2,-3,6,3,-1,-5,-7,4,-1,6,-8,-1,6,3,-5,-3,9,-1,-9,-4,-5,-7,-2,-10,5,5,4,6,-3,-1,-4,-7,-2,5,-5,6,-10,2,-3,6,-2,-3,-6,6,10,8,-4,4,-3,1,-9,-8,9,10,-4,-10,-7,3,-4,3,-8,5,-5,-2,-9,8,10,-9,-8,9,-7,-10,-3,-10,-4,10,-5,6,7,10,-10,6,-4,7,5,-6,6,-9,-9,-8,3,4,7,7,7,10,6,7,2,-4,9,-1,5,6,8,-10,-3,8,6,2,3,-3,9,-2,4,-9,-5,-10,10,-8,-9,9,3,-10,1,4,-5,6,7,-6,-4,-5,-7,1,10,-4,-8,-3,-10,-1,6,-6,4,-6,2,1,-8,4,3,1,-7,-4,-9,9,1,-10,-7,9,-2,10,8,-9,10,-10,-3,8,-7,6,-1,-7,6,9,-6,5,-5,2,-8,8,6,-3,-10,-10,3,-4,2,-5,9,-2,-6,2,1,3,-9,-9,10,6,3,8,2,8,-5,2,1,-8,-10,6,-8,-3,1,-2,8,-2,3,-6,-4,-9,-1,3,-5,-9,-5,8,-6,-10,7,-8,1,-5,-2,9,7,-6,-7,10,-4,-8,-2,4,-9,4,8,2,-6,4,-8,-5,-1,3,2,1,-10,4,-7,-1,3,-6,-9,-2,5,-2,-1,8,-10,9,4,-5,-10,8,7,8,5,5,-10,9,-5,8,8,7,9,-9,9,-7,4,8,5,5,10,3,7,5,5,-9,1,10,-3,3,4,10,-7,3,-4,3,-8,-4,-10,-8,-4,7,-2,-5,7,-6,-2,-3,5,-3,4,-3,-4,-9,5,7,-4,-5,3,-1,10,3,4,-2,-2,9,1,-10,8,9,-5,-3,3,5,-9,-8,6,2,-9,-10,-9,9,-1,-7,8,-4,-4,-2,-6,5,-5,-6,-6,10,3,10,-1,2,-8,2,-4,-9,-3,5,7,-5,-3,-3,9,6,-7,2,5,-1,2,9,10,-2,10,-2,-7,1,-10,-1,-2,-1,-5,-7,10,5,9,-7,3,-2,9,10,-5,-6,-7,-5,5,-8,-10,1,10,1,-10,-10,8,-6,8,-2,10,7,6,6,10,4,-6,-2,-10,8,1,-5,-10,7,10,10,-9,7,10,1,-7,10,9,-2,4,1,5,-6,8,2,5,5,-8,-3,8,-8,8,-8,7,8,-9,-9,-4,7,8,-9,1,9,8,8,6,9,-4,-1,-9,4,-7,-10,8,2,-9,9,4,-9,-7,-8,-5,-7,6,-1,8,-2,-8,7,-2,-2,-9,-2,8,-7,2,-8,-2,7,-4,2,-4,8,-7,-8,3,1,-8,6,6,-10,9,-5,-6,9,-1,-3,-5,6,5,10,-1,-9,6,6,-9,10,6,-10,-8,-4,10,-3,-8,7,-1,1,-10,3,-4,-7,5,10,5,-6,9,-3,9,5,4,-1,3,-9,10,10,-10,6,6,-1,-8,-5,8,9,3,3,8,-2,-5,3,-4,-1,1,4,-7,-8,1,-3,1,-4,-6,4,2,4,-9,-5,1,9,-5,-9,7,7,-3,5,-2,10,8,1,-2,-7,3,5,-10,-6,-9,-7,-2,-2,-7,-9,-8,9,5,-5,-5,9,6,2,10,3,2,-4,6],[-9,7,-4,-1,2,-2,-4,-1,7,-6,-5,6,4,10,2,5,3,-3,8,1,-9,-7,10,-3,7,-5,-4,2,10,-5,10,-8,-4,9,3,10,-2,3,4,10,-5,-6,9,6,-10,4,3,-2,-10,-8,2,5,4,-8,3,-2,5,9,5,-3,-8,-4,8,-7,8,1,5,6,5,-10,1,9,1,2,-3,1,-2,2,1,-8,7,9,-7,-1,-8,-1,6,-9,-7,-5,3,-2,10,-5,-5,10,-4,6,-5,-4,-2,5,4,-5,2,1,-5,-2,-9,6,2,10,6,-7,-2,5,3,-2,-4,10,-6,-5,6,-3,-6,10,4,4,-5,10,-10,-1,-7,-2,9,-8,2,5,-1,-4,-9,5,-6,3,7,-1,2,-10,5,9,3,-1,1,5,-6,8,-5,9,1,-5,7,5,-7,8,6,-8,-5,4,-8,-9,-7,-2,-2,-6,-4,3,-6,-1,-5,7,-6,-10,5,-10,-4,9,-8,6,1,2,2,7,4,-2,-8,-10,-3,7,6,-3,6,4,3,3,1,-9,3,-2,5,5,3,8,-8,6,-4,-6,2,-6,9,9,7,4,6,-4,-2,-4,6,10,7,-8,6,-3,4,-3,9,3,-2,3,-3,-8,-7,9,-2,-7,-7,-2,-9,-3,-2,-7,8,4,-7,7,5,-4,-6,6,-1,1,-8,-3,5,1,10,-8,-8,-8,1,-4,1,-1,-10,-6,-1,-9,9,-5,7,4,4,8,6,6,3,6,-7,-10,-5,7,5,-3,9,-1,-8,8,10,-3,-3,-6,10,-10,-8,-3,9,6,-8,-2,-1,-5,-9,10,-10,6,3,-10,5,-9,2,-5,-3,-7,-4,-8,-2,-3,-6,10,7,9,-9,4,-1,-8,-6,-6,-6,10,9,-6,-2,4,3,6,-2,-1,-8,-7,-9,-3,-8,3,-9,-3,-2,-1,-7,2,9,-1,5,-3,6,-1,7,-9,3,8,-7,-2,9,3,8,-7,5,9,-9,-2,-4,-1,9,5,-3,3,3,9,9,-9,7,-4,-3,4,-5,10,-1,10,2,1,-8,5,2,-5,-6,-7,-10,7,6,-9,8,-2,-2,-1,10,10,-10,1,-9,-2,1,-7,-4,6,6,1,-7,-4,-7,-3,-1,-5,8,-3,-2,-9,8,-4,10,10,-7,1,6,-1,4,-2,-7,-6,-2,-1,5,7,-7,6,3,5,-9,-2,-4,1,-8,-3,-9,9,7,8,-9,-7,-6,-6,-9,6,9,-4,-4,-9,8,-9,-10,-8,6,2,1,-4,2,-5,-2,10,3,-2,-9,-1,-4,3,7,-2,-9,2,4,10,-7,7,-8,-1,-3,9,-8,8,-1,6,6,4,-10,7,4,10,-2,3,5,2,10,9,-4,-10,2,4,3,3,-6,-9,-10,2,-7,-4,10,2,9,-8,2,9,-3,10,-3,-1,-5,-9,-1,-9,-7,-5,-10,7,-8,-6,2,-4,10,-2,9,2,-8,-1,2,-9,4,6,-1,-3,9,-1,5,-7,-9,8,4,4,-10,1,6,9,-4,-3,-9,5,-8,-8,-2,-7,-3,9,-6,-9,9,-6,-2,4,-1,2,-3,-9,-3,-1,-1,-6,-5,4,-7,8,3,-10,1,10,8,4,-8,10,10,-8,4,-7,-8,-10,2,-2,2,-9,-5,4,10,7,-1,-3,10,3,-3,3,-9,-8,-3,-7,4,7,-6,5,9,8,-10,-4,-10,4,-5,-9,-2,-7,-9,9,4,-3,6,-8,1,-6,7,-9,7,4,-2,8,10,-10,-2,10,-4,-8,-2,-5,4,-2,-1,10,8,-10,5,-6,-3,-3,5,3,-8,-10,-7,3,-6,2,8,5,-6,-8,-3,5,3,1,1,7,-4,10,-2,5,-8,3,-1,-3,5,5,6,-2,-7,-8,8,8,4,5,10,2,-9,3,-7,-4,-8,8,2,-6,6,9,-9,8,-4,-9,-5,2,10,-3,-4,7,9,-9,-7,9,-6,7,-3,1,8,-4,3,-6,-3,-9,-5,10,-2,-2,-3,2,9,-7,4,2,1,4,1,-6,8,-1,2,6,2,4,-1,5,8,4,3,4,3,-8,8,1,9,-9,-7,6,-5,3,7,-7,3,6,9,-9,-10,9,3,5,5,-5,-1,10,-9,3,4,-10,-1,-4,-8,3,2,-7,-3,8,-6,-10,2,-2,-4,1,-5,6,9,4,-5,-7,-10,-3,-7,-1,-2,10,1,-8,-9,5,-10,-7,3,6,10,-4,-8,-1,7,-7,-1,4,-3,6,-9,-3,4,-8,3,4,9,-2,-6,-3,-7,10,9,9,-6,3,8,4,8,-8,10,-4,1,-8,-1,7,-1,-5,3,-4,2,6,-7,-3,-4,8,4,-3,-2,-1,-9,-2,-7,3,-2,1,-8,8,-7,10,4,5,2,3,6,6,4,8,-4,1,1,3,-9,3,-2,5,-3,-3,8,-10,2,2,3,-7,-4,-6,-2,-2,-8,5,2,-5,2,-9,-6,5,-6,-5,-10,9,-5,-8,-3,-10,-9,-10,-6,-3,5,-9,4,10,-2,8,-1,7,-1,-7,-7,-5,1,-7,-2,-7,4,-7,-1,-8,-4,-6,-3,-3,8,-7,6,-3,-7,5,-1,-6,10,5,10,6,-10,-1,5,-5,3,-2,-6,-5,3,4,-4,-1,4,6,9,-8,-4,10,-4,-4,9,-5,1,9,9,10,-4,8,8,1,-5,8,9,-9,-5,9,9,10,-3,-3,-2,8,7,3,-9,5,-5,-3,1,7,-5,1,-2,3,1,10,3,3,-5,5,3,9,-3,2,4,-1,8,2,-4,-5,-3,2,4,-5,-2,-4,10,-10,-8,8,-4,1,-10,9,-10,-1,-9,10,-6,4,-5,2,-4,2,-7,-1,9,2,-7,-3,7,-9,-9,-10,1,-5,-2,6,9,5,-8,8,2,-5,3,3,4,-6,8,7,2,10,9,10,-3,6,5,7,6,-4,1,-8,-7,9,-2,7,-10,-8,10,-9,-2,4,-10,5,-6,4,-4,4,9,-7,4,5,-10,3,8,4,-8,9,3,4,1,-7,-2,-8,-6,2,-10,4,-9,-1,10,8,6,-5,-1,6,-1,-9,-6,4,2,4,4,-2,-4,9,-8,3,6,3,-9,1,4,2,7,-3,-3,-2,4,9,7,-3,7,-1,6,-2,6,6,3,1,-6,-10,-3,8,-8,-7,-5,2,-6,4,-10,8,10,-8,-2,5,-3,-8,9,4,-3,4,1,9,-2,1,9,-8,3,-4,-4,6,-5,-6,10,-4,10,8,-6,9,10,-10,1,-10,5,-3,2,-8,4,1,-3,7,-5,-3,4,10,3,-4,9,1,7,-5,-3,-6,-5,3,4,-1,4,1,-7,-1,1,9,9,-6,-5,-5,-3,7,8,8,-9,10,-3,1,-1,4,-8,-2,2,5,-10,-6,-1,-1,-3,10,7,5,-2,2,9,-5,-7,-5,-8,6,3,9,5,3,-10,-1,-5,-9,-3,10,6,-10,-6,-4,7,2,-10,-4,-2,4,-9,3,1,9,-4,5,-8,-5,-10,-9,-6,7,-2,2,7,8,-1,8,-4,6,-9,7,8,2,-8,-6,-1,-2,-5,9,-2,-6,9,-7,-2,-10,-5,-10,7,-10,-4,9,1,-10,-6,6,7,1,7,-10,2,-2,5,2,6,6,10,5,7,-6,6,2,-6,-1,10,4,9,1,-9,-5,4,-3,7,4,5,8,1,-7,3,-10,7,-7,9,10,8,3,7,6,5,-7,-9,-4,-2,-7,-6,10,-8,-2,4,7,9,5,5,9,1,-2,10,-3,6,-9,-7,-10,5,-6,-5,-10,10,-2,5,4,-9,10,-4,-4,-3,5,-2,-8,6,-6,6,9,9,10,-5,4,1,-5,-5,7,2,1,-6,2,5,-7,4,-5,-7,9,-9,6,-4,-7,10,8,-6,7,-10,-6,-9,-3,8,5,5,7,-6,-6,-6,9,6,7,8,6,6,-4,6,7,-7,9,-8,-6,1,-5,6,10,-3,6,4,-1,3,-5,-3,10,7,-2,6,-1,1,-4,10,-8,3,-2,5,7,-9,4,-7,9,-6,10,10,-10,7,-7,10,-8,1,-1,-5,2,-1,3,-5,-1,-5,4,2,8,2,6,5,4],[-4,-10,-3,3,1,9,10,6,1,-3,-7,-4,-10,-10,4,1,-9,7,3,6,-5,1,-5,1,8,10,-6,-6,-7,-3,2,-9,5,3,-5,4,-3,3,2,5,9,9,2,-4,-2,9,1,5,1,7,-8,-6,-6,1,3,9,-3,-9,-6,3,-10,-3,10,10,-7,-9,-8,8,-4,-1,4,10,10,2,2,3,-10,6,6,3,-1,-8,7,-2,-4,-1,6,-6,3,-2,3,-9,-4,3,1,3,8,2,9,6,8,4,1,10,-5,-10,-10,1,4,-5,-10,8,2,-1,5,-6,7,4,-7,-3,-9,-1,2,4,-6,2,7,-3,-1,10,4,-6,4,-10,-6,-3,5,-5,-6,2,8,-9,3,4,6,9,-9,-2,7,-4,-6,8,-3,-6,-2,2,-4,4,10,-3,-3,-6,-7,5,-10,-7,-8,-6,9,-9,-4,-10,-9,-6,-4,5,1,-10,-8,4,-4,4,7,-2,-4,5,9,6,2,6,3,5,-1,-4,-10,6,-1,-7,-2,3,7,6,5,-3,-4,-5,8,-2,-3,-9,7,8,-8,6,-3,6,7,7,3,-9,8,-5,1,7,-8,-8,2,4,-10,-9,-7,2,-8,6,-8,-10,10,-3,5,-7,-4,7,-1,-5,-1,-6,9,4,7,-9,-6,1,4,-7,4,1,8,-4,-1,2,3,-10,-5,2,-4,-7,1,6,-2,6,4,-5,-7,1,-10,-10,10,7,-2,-7,1,-7,-2,8,6,1,3,-2,7,-10,10,-1,-10,6,-9,-8,-7,-1,-8,4,-2,3,10,-4,3,-3,-4,3,-5,5,2,-2,-10,9,-1,3,-7,-7,-4,-6,-6,9,-5,3,-3,-4,4,5,9,2,-8,-3,1,-4,2,-3,-10,8,5,7,-2,5,9,9,-6,9,-8,-1,-4,-6,-6,5,-1,5,-8,8,-5,7,-2,5,-1,-4,-9,-10,1,-9,6,4,1,-7,-4,-1,7,5,6,7,-6,-4,5,8,-3,2,-5,9,8,6,-1,10,-7,-7,-5,-8,-7,-6,8,10,-4,-1,1,-6,-7,10,1,8,-5,9,-9,-2,1,1,-3,3,3,6,-5,4,7,10,6,-6,-2,2,3,-10,-4,-6,-1,-6,-4,-2,-7,10,10,1,-7,6,3,-3,-4,3,-5,6,-9,-2,-7,1,-1,-9,1,9,-1,7,5,-2,-2,-10,5,3,-10,-8,-1,2,-10,-7,3,8,2,-7,5,9,-6,6,-5,-5,6,-2,2,1,7,10,-3,-3,6,-2,-1,10,-8,-9,7,-7,-7,2,-5,1,10,-1,2,5,-5,-8,-10,4,-7,2,-6,1,-10,-7,5,-4,-1,-7,8,-10,-1,-9,-9,10,5,1,2,9,4,-4,3,-5,2,7,4,-3,6,-7,-7,2,-10,7,7,-4,1,-2,-6,9,7,-8,-3,-7,4,-3,-2,5,8,-3,-8,-5,-3,-3,2,-8,10,-1,8,-2,-1,-5,2,4,-2,4,-4,-8,6,7,-7,-8,-3,-2,4,-5,-10,7,-2,1,-9,-5,6,9,9,3,-1,3,-9,-6,10,9,4,2,-8,-4,-2,10,-4,-1,3,9,4,-9,-6,5,6,7,-1,-10,4,5,-10,-3,4,-7,9,-2,-7,-5,7,10,3,5,-6,2,-8,-5,4,5,5,4,8,-6,-8,-8,10,-8,5,6,10,-3,-9,-7,8,10,3,-7,1,-6,4,-3,3,-7,5,-2,-3,3,5,4,1,-9,9,5,-1,8,4,10,-3,8,2,2,4,7,5,-5,7,-3,1,-6,-9,-8,4,-2,4,-4,9,2,-3,-5,2,5,5,8,7,6,6,1,-1,6,1,2,8,-5,4,-9,1,8,5,-2,9,6,-4,-5,10,-10,5,-2,5,4,-9,-6,1,6,1,6,-8,5,-1,-6,-4,-1,8,4,3,5,-2,-2,-6,-9,-8,4,9,-7,10,1,-8,4,8,-1,5,2,-6,2,-7,-6,-8,-1,10,1,-1,-5,-7,-9,9,7,-6,3,5,4,8,9,2,7,9,-3,10,-1,1,5,10,3,-1,9,-4,10,-5,-10,-10,-1,6,-9,-6,-5,-10,6,-2,-7,-7,-1,-1,3,-1,-5,3,-7,-3,-5,-9,-5,-3,-1,10,-8,-4,8,-1,1,7,2,-3,-8,9,5,-6,-7,1,-1,-7,2,9,7,2,-5,-8,-8,8,-7,-9,-5,5,3,-1,1,-7,-9,2,8,8,4,2,6,7,-9,8,-3,-7,8,-5,5,-1,-8,-4,6,10,5,1,-2,-5,-9,4,-5,-10,-8,-4,-7,-9,10,9,-3,-6,-3,-2,-7,5,-1,8,9,-2,5,9,-3,-4,2,-10,4,-5,-5,1,5,8,4,-5,5,9,-3,1,7,-10,-1,-5,-6,-2,-9,-3,-9,-4,8,-4,-5,7,1,6,3,8,6,-9,-4,-5,3,1,10,3,-3,5,1,-5,-7,-2,-9,-6,-4,1,-5,-2,6,-10,-9,6,-1,-9,10,7,-7,10,9,-4,3,10,-2,8,-8,-4,-3,-8,-1,9,10,-1,-2,6,-10,-4,-6,1,-1,-7,9,-7,-4,-7,9,-8,-1,-8,1,6,-4,4,-9,1,-8,-8,-2,9,9,4,-3,8,3,-9,-2,8,7,8,-9,-3,-7,-1,-7,6,-10,5,3,7,1,-10,1,1,-10,-4,-7,-5,2,-3,8,-7,10,-2,-7,-8,-7,3,6,7,-2,6,-10,2,-7,-10,-4,3,-1,6,-4,-6,1,-10,-5,7,-8,7,-2,-7,-5,5,-6,-3,3,-2,-2,-9,-10,-3,4,2,-3,-7,7,-5,2,2,-6,2,-4,8,7,-10,6,1,3,1,2,10,-3,2,5,-5,10,-2,-4,-2,-8,7,8,-6,-3,7,-5,5,-2,-7,-2,7,8,8,-2,4,-3,-5,-10,1,8,-9,7,-2,4,7,10,9,5,-3,-6,-6,7,-1,2,2,-10,-2,-6,5,6,7,-5,-7,4,7,6,-2,-9,-1,2,1,-4,-10,-1,-4,6,4,-10,4,-10,5,-8,-10,9,-8,-3,-5,-3,-1,10,3,7,-1,-8,-10,-8,6,-3,3,-6,-2,-9,9,-4,8,6,-3,-9,-7,-9,-9,1,5,10,5,-8,-8,-8,10,-7,-7,10,-5,4,9,-8,-2,-2,4,-6,1,-8,10,-7,-7,9,-7,-1,9,4,-9,-4,5,10,1,8,10,10,1,2,-2,-9,-1,3,8,-8,2,-9,-10,-6,-5,-5,-10,6,-4,9,-9,-7,1,-10,7,-5,2,8,3,4,-8,-4,4,2,-10,4,-1,2,10,2,-10,8,1,3,-8,5,-6,4,10,-5,-9,10,9,2,3,-9,-1,6,-3,-9,8,8,-2,1,10,-2,7,7,-3,-5,4,-1,1,8,-8,4,10,9,4,-4,8,-3,8,-10,10,-7,-9,9,10,1,-2,-6,-7,-4,7,-7,-4,1,-10,-2,6,5,10,3,-9,9,-1,6,2,-1,8,7,8,-3,-6,-7,4,6,-5,-5,-5,-8,1,-4,-3,-5,5,-4,-7,9,2,8,9,-2,-4,9,-3,-4,2,-1,-7,8,8,2,1,-1,-1,-8,2,5,7,3,-2,6,9,8,4,5,-10,-9,2,5,-10,4,-3,8,-4,1,10,-7,-7,-6,-3,-6,9,5,7,5,-2,-7,-7,-6,6,6,-9,8,9,8,4,-8,-9,-6,-2,-4,-1,1,6,8,7,1,-8,3,-2,1,6,2,-2,-4,1,-9,8,8,-9,7,10,-3,6,6,-10,-5,6,-4,6,-3,5,-7,3,-9,4,10,6,4,1,10,-9,-8,10,3,9,1,9,-10,-5,-5,-7,-7,-10,4,3,3,-9,-6,2,-5,7,-8,7,-9,7,3,10,-8,1,10,-8,-5,-3,-7,2,7,-1,-8,-2,-1,2,6,6,-10,6,2,-4,-10,-9,3,1,3,-6,-10,-5,-9,7,-8,-9,-3,-10,-10,1,3,-9,3,6,-1,6,-3,4,-9,9,-5,6,5,2,-2,7,5,2,5,-4,2,-2,3,7,9,7,-4,2,1,-7,9,10,10,-3,-2,5,-9,9,3,3,-1],[5,-5,9,3,3,-9,-7,3,-4,-9,8,-6,-1,2,10,-6,3,4,-9,7,10,-5,3,-8,-2,7,-6,-9,-3,-3,-8,-8,10,2,-6,3,3,2,5,-6,-7,-9,6,-2,-2,-2,3,1,9,-3,2,-10,2,-4,3,4,-3,-7,-2,7,-5,4,8,-9,1,-1,-10,2,4,10,6,-9,10,7,4,-8,5,-7,7,8,-10,3,-2,3,-10,5,-9,-4,-10,-3,-5,5,10,2,8,7,9,-9,6,-6,6,-4,-6,6,-9,2,9,-5,9,-8,7,6,-7,6,-8,-2,6,1,-4,9,7,9,-9,7,-2,-7,-2,7,-8,5,-7,-10,4,-6,2,2,-7,7,7,-5,9,-10,-3,-10,-9,-6,-3,1,10,4,1,3,-8,3,4,-4,10,-4,8,5,-1,8,-9,-1,-6,-3,2,-6,-6,-6,7,-5,-4,1,7,3,-8,3,-10,6,-9,3,-5,-6,8,-3,-3,-3,1,1,9,-5,-5,-4,-1,8,-1,5,-10,9,2,4,-2,4,-8,-9,-1,5,3,10,2,-7,-3,-1,3,2,1,1,-10,5,2,-6,-10,-10,2,8,1,9,8,-6,9,6,-1,-1,4,10,2,10,7,-7,-9,5,8,4,3,7,-8,-1,-10,2,8,9,-6,-4,-8,-3,3,8,1,9,2,7,-7,-8,9,-10,-10,1,-9,-10,-3,5,-1,1,-5,-8,-6,-8,1,1,-8,9,1,5,-4,-6,-9,6,4,-4,8,7,-4,1,10,7,5,5,7,-8,6,7,7,-9,-1,-1,4,-6,-2,6,-9,2,-9,3,-9,-7,7,2,9,6,-4,-10,-6,7,-3,9,-3,7,-8,-10,-3,3,10,5,-7,-9,9,-9,6,-2,6,3,4,5,-10,10,9,3,-9,1,1,-8,1,-7,3,8,-5,-1,8,-1,-9,4,-4,-1,7,-8,-2,-3,2,-2,1,4,-8,3,1,8,6,-9,-9,3,4,4,-8,1,-7,6,-2,2,-7,7,2,9,-5,10,1,-10,5,-1,1,4,4,5,-10,5,5,-7,-7,-7,-7,6,8,-2,-2,-7,-6,10,-1,-7,6,-10,6,-8,-6,-5,1,2,9,-4,9,-3,-2,-9,10,6,10,6,7,-6,8,7,-5,1,-3,5,8,-10,-1,-7,-5,-6,1,8,6,3,7,5,9,6,-3,-5,-8,-5,-4,-9,-5,3,-7,-6,-8,8,8,-7,-1,8,-3,7,8,2,4,2,-8,-5,-7,-7,1,10,9,6,-8,4,-9,-7,-4,-10,2,-8,-6,-3,-6,-8,6,-8,-3,4,1,7,10,-9,-4,-1,-1,-5,3,-10,10,6,7,-10,-10,-6,-2,-3,8,5,2,-6,-6,-10,1,-8,9,7,-9,8,1,2,-6,6,-8,-4,8,5,-1,2,4,-2,-3,-9,-6,-4,9,-2,1,-9,-8,1,-10,-9,1,4,-1,-8,-5,-9,-6,-10,6,-1,10,8,-2,-4,-7,-5,4,4,4,-10,-3,-2,9,-3,3,-4,6,9,-4,8,5,10,3,-5,-7,7,-5,6,-8,10,7,-2,-7,8,-5,-3,-2,-2,-6,-1,3,1,-5,-1,-10,-6,-5,7,-1,-5,3,-9,-10,9,7,9,8,-5,8,9,6,-4,-4,-5,8,-3,8,4,-2,-4,-5,-8,-2,7,10,-8,9,-7,7,-10,-4,3,-7,-1,-4,-10,5,-1,3,-7,-3,-9,-8,-5,-10,9,-10,-7,-3,-5,-3,-3,7,5,1,-4,6,-7,10,1,-9,-6,-5,3,3,-3,7,5,2,-3,-10,7,10,4,6,-10,6,-1,10,8,-5,10,-9,-5,4,5,-7,-2,6,7,-1,-6,-4,7,4,9,-6,-1,-5,7,-6,-5,-7,-10,-5,7,-5,-3,2,4,5,5,-4,6,5,-9,8,-6,1,9,4,-1,9,-7,-4,-8,2,-10,-2,-6,-4,9,-8,-6,-2,4,1,4,-9,-2,2,4,3,-2,2,3,-2,-7,-9,1,10,-9,3,10,6,7,-1,-2,6,-1,-2,4,9,8,6,1,-5,8,4,1,1,-8,8,-9,5,-3,-6,-3,-10,-5,10,-4,-6,2,2,10,1,8,-9,6,-8,-1,5,9,6,-2,10,1,2,-6,7,10,5,9,-6,7,3,-8,1,4,1,-4,-5,7,-8,-4,8,-7,3,-6,-3,2,-1,4,8,-1,-7,-2,-10,2,1,-5,1,3,-7,2,3,6,4,10,-10,-1,-6,3,-9,3,2,-10,-9,-8,1,4,4,10,10,10,-10,10,1,3,-8,-1,-6,5,3,2,3,-9,-6,7,-8,-9,-7,4,2,-9,4,5,2,-5,-3,-10,-3,-5,8,8,-6,-4,-7,2,-6,2,-2,9,-6,10,3,6,-9,-6,3,-10,-2,4,3,-9,-7,-8,-9,-5,-3,-6,5,2,-5,8,2,-8,4,-6,-8,-5,-7,5,10,-2,-5,7,2,-3,-8,6,-2,-8,8,3,-8,-10,1,-2,-7,4,-5,-3,2,8,10,-2,8,-9,2,2,-2,7,-2,-6,5,1,1,-1,-2,3,-2,-4,-2,9,-9,-6,-5,-6,-9,-6,-2,-6,-10,8,-5,4,5,-8,-3,3,-9,-2,-1,1,-3,-6,-3,10,9,-3,-10,-2,5,5,8,-7,-8,-9,-9,9,-9,-7,-7,-4,-6,3,-4,-4,-4,4,-9,-8,1,-6,-10,-2,-9,-1,-7,-7,2,2,4,6,7,1,-2,-4,8,3,4,7,4,4,-5,-4,-2,4,2,-7,9,-4,-8,-3,-10,-2,-2,10,9,5,8,10,6,5,5,7,-9,-6,-1,3,7,-8,6,-5,3,-10,1,-10,-5,7,8,-5,-8,3,-2,-3,-2,8,-8,-5,-4,1,-7,2,-7,-4,-4,-1,10,2,-2,10,5,-4,-10,-3,5,10,6,-4,3,-7,6,1,-3,5,7,1,-3,4,-5,-10,2,2,1,2,-5,3,8,5,-7,7,8,-8,5,6,9,-10,-5,-1,-10,2,-4,7,1,3,4,3,-10,-5,-3,4,-9,6,-9,-10,-10,6,-9,3,-5,-7,-6,1,1,10,-8,-9,1,1,-10,10,-5,-3,-7,6,5,-9,4,-9,-7,-1,5,2,-3,7,3,-5,-2,-5,-9,1,4,6,-1,7,6,-6,7,-9,10,8,-3,-6,-3,4,-1,5,4,-7,8,6,1,-9,8,3,-5,-5,-3,-1,-3,-10,9,-2,-9,-9,-3,3,5,-6,-9,4,9,-2,2,1,-8,10,8,-2,10,-4,-4,-1,-10,-3,4,-4,-7,-5,10,4,9,-7,5,4,9,-2,-6,4,-8,4,4,-6,4,4,9,2,-2,-5,-8,-4,-6,4,9,-7,-4,-8,-10,-3,-8,-8,5,-5,9,-5,8,6,6,-5,7,-2,4,3,-6,6,-3,9,4,-4,5,-4,1,-8,-9,3,-4,8,7,-1,8,-5,4,9,-1,3,-4,-10,6,-1,-8,10,9,1,9,-9,9,-8,-1,1,3,9,-2,4,4,2,2,-7,1,-9,9,-9,-5,3,7,-9,1,-10,6,10,1,-3,7,-8,-7,1,6,-6,7,10,-7,-4,8,1,10,-3,7,-4,5,3,8,7,5,8,7,6,6,2,6,5,7,6,5,8,-3,-1,6,6,5,3,-1,-6,3,-10,-3,4,4,-2,2,-8,-1,-6,9,10,6,-6,6,-4,1,-7,-1,-2,3,-4,6,-9,-3,5,7,-7,-1,-1,-6,6,-1,10,8,-6,8,5,4,-2,-7,2,-4,-6,-2,2,2,-5,-2,4,9,-10,-10,2,1,2,2,-3,-2,1,-5,-2,-2,-1,-2,-6,-3,-9,-5,8,4,3,5,-2,4,3,-8,-8,3,-9,-4,-5,3,-1,-4,6,2,-6,7,6,-3,3,-5,6,-2,-3,9,-5,-2,3,-9,6,10,10,1,-9,6,-8,4,-1,6,-7,1,-1,10,9,-5,-1,-8,-2,-7,-3,-4,-6,-4,7,8,-9,5,2,-4,-5,9,-3,8,-5,-6,-10,9,9,2,5,1,10,4,3,6,-6,-5,9,-4,-10,3,1,5,-7,-9,8],[-8,7,-10,-1,-10,1,-6,1,-5,2,-9,1,-4,-3,-5,-4,7,7,2,8,-5,-7,9,2,-7,3,-7,3,7,6,-5,6,-2,3,-3,5,-8,-10,10,-3,6,4,4,-9,-3,4,-7,-2,-5,4,6,5,-2,2,-7,-1,-3,-8,-2,10,4,-3,-4,10,8,9,-3,-7,-1,9,6,-3,-4,-5,-10,4,-9,-2,10,4,8,-3,10,-10,-2,1,8,4,6,2,6,-7,1,-10,3,-2,-9,-4,8,2,-4,6,6,5,3,8,-1,4,6,6,10,-4,4,8,3,-2,2,8,9,-9,-1,2,4,6,4,1,2,2,3,-2,9,-1,3,8,5,6,4,7,-8,8,-9,-3,-4,8,5,4,-3,7,-6,-10,4,-4,4,6,6,-1,5,-5,10,-6,5,-3,5,-6,4,-10,2,7,-5,7,1,8,5,-4,-9,4,-8,-4,-6,2,8,10,-5,-7,2,-6,5,8,7,7,-10,-2,7,-1,-8,-2,-4,8,9,-2,1,-5,-1,-6,-5,-4,1,5,-4,10,-9,10,-7,3,-6,-1,6,-1,9,5,10,8,7,-1,10,-5,-6,-10,-5,-10,-1,-8,-7,4,-8,-9,-10,2,-2,2,-6,9,-4,-6,-6,-10,9,6,8,-1,10,-7,-7,-10,3,1,9,-3,10,1,-6,-5,-10,-1,10,5,2,-10,2,-9,4,-4,9,5,5,-7,7,-7,10,5,2,2,1,-6,-4,8,7,10,-7,9,-8,-6,6,-2,-5,-8,7,4,2,1,-7,3,-10,3,-5,-3,7,-10,5,3,10,-9,-3,-5,3,2,-6,5,7,5,-10,-7,-8,-2,-10,2,-6,7,2,-4,-9,-4,-1,-2,6,-10,-4,3,-3,-4,2,3,7,-7,1,3,-10,-4,7,-9,3,-9,-6,8,1,-4,-8,-1,6,-1,3,-6,4,-6,-6,-3,-6,-6,9,4,6,3,5,-6,-3,-8,2,1,-4,6,-4,10,3,2,8,2,-6,-5,-8,-3,-9,-1,-7,-8,1,-2,4,5,-8,9,-5,-9,5,-5,8,-6,-1,9,-9,-2,10,3,5,-3,-7,10,-3,-4,-6,9,-8,-8,-2,-8,3,-9,-3,-9,2,-3,4,2,4,-6,-4,-2,-2,3,9,-2,1,-5,6,7,8,7,-5,9,-5,-10,10,3,-4,5,-10,-4,-10,7,5,-4,-6,-4,1,10,8,7,2,9,8,7,-1,-9,4,-7,-4,3,-3,10,-10,-10,-2,6,6,-10,-7,4,-2,7,1,-4,-4,-4,3,10,8,-2,6,-6,1,-1,-5,-6,-8,-2,8,5,-2,-10,-4,-8,2,-5,-6,-5,7,7,10,10,8,-6,-7,-2,-1,3,5,-10,-9,-9,5,4,-1,5,-4,-1,6,-3,-10,3,-7,7,-10,-3,1,6,10,-6,-10,-4,8,1,3,-9,6,2,-10,7,5,9,-4,2,6,4,-10,2,-4,-2,-4,-9,4,-8,-2,6,-7,-5,-1,-4,4,-1,-8,2,6,10,2,-4,5,-3,-7,6,4,-4,10,-10,-7,1,-5,-9,5,-3,-9,5,9,10,-7,-9,-2,5,-8,-8,-7,-10,2,-5,9,5,-5,3,-10,-9,3,-7,-10,7,-7,-4,-6,9,6,-4,-10,-4,-1,2,-1,-8,8,1,10,-7,-5,-3,5,-8,4,5,-10,2,7,-3,-4,5,6,1,4,-5,6,1,-8,4,8,9,-8,9,4,4,-3,-9,4,7,7,-8,-7,-8,-7,-10,-10,5,7,-5,-8,-8,-7,1,8,-3,1,-2,2,5,10,6,-4,2,-7,-4,-6,-7,1,6,8,-6,1,-9,-8,2,-2,10,9,9,8,10,-8,-7,-7,-8,-4,-5,-2,8,9,-8,8,6,1,-3,9,-5,2,-5,6,-5,-10,5,-5,10,3,-4,7,10,5,6,-7,-2,2,-10,-3,-1,5,4,9,3,-3,2,-7,7,6,-6,6,-3,-7,9,8,-4,-5,3,2,3,3,5,-10,1,-8,10,-7,4,-8,6,2,8,-8,-1,-1,8,-4,3,7,-9,-1,1,-3,-1,-8,6,-7,-9,-9,5,-7,-1,6,-4,-8,-10,-3,6,-5,-7,-4,-5,9,-5,-6,-8,5,-3,-5,-6,3,3,-6,-4,-6,2,-5,-10,-2,-5,-5,-1,-4,1,-3,-4,2,2,6,9,-6,3,-9,-10,-8,-7,-7,3,-3,1,-3,2,-2,-5,10,-2,4,-2,6,2,-4,-7,9,2,-8,10,8,7,6,-10,-6,5,-6,3,-6,8,-7,-2,-8,-8,9,-8,-10,7,-8,2,-9,-4,-5,-1,-3,2,-7,-6,-9,9,-2,5,1,8,10,3,-9,8,-5,5,-9,10,1,1,2,-10,-7,6,8,9,-6,-1,3,-10,-2,8,4,-7,6,7,-10,-10,-3,-6,2,2,10,-6,-7,-3,3,-10,9,-2,-7,-3,-9,3,1,4,7,-5,3,9,-8,-7,-4,-6,8,10,-10,-2,7,-10,5,4,-1,-8,-10,4,-1,-9,-10,10,6,3,4,-2,3,9,-5,1,-2,2,-7,-2,-7,-5,-9,-7,6,10,7,1,3,7,3,-5,6,8,2,-4,-4,-8,-4,7,-6,4,-8,-3,-6,-8,8,-5,9,-8,5,1,-10,2,7,6,6,-9,4,5,2,-9,9,5,-9,-10,-4,6,2,-8,9,2,-5,-2,-3,-10,-4,-7,3,10,6,10,1,-4,6,-1,7,2,4,-2,5,-4,-1,10,3,-7,10,-7,-3,-1,4,-6,5,6,4,-8,9,7,-3,3,-9,-2,-10,-7,3,-6,1,-9,-1,-8,2,5,-10,-1,-9,8,9,-6,-1,5,-10,1,2,10,7,-8,5,-2,6,-9,-10,-5,-9,9,4,3,5,-7,-8,-10,-6,5,4,8,1,-8,-4,-9,6,2,1,5,-1,-3,-1,5,-3,-7,-8,-10,-2,-9,3,-7,5,8,5,10,-8,-7,5,-4,-2,9,8,8,-8,-6,4,-10,3,3,-3,-5,5,8,4,10,5,-4,9,-2,-9,-7,-4,-10,-7,4,-5,9,-1,-1,10,-10,1,9,6,-8,-10,5,-4,-10,9,10,-4,-5,-7,1,8,-4,5,-2,5,-3,-4,8,5,-8,-3,-10,7,-4,-2,2,6,2,9,2,1,-8,8,-3,-5,9,9,-7,-3,-1,-7,4,10,7,-9,3,6,6,-9,-7,10,-2,-3,5,1,-10,10,-6,-1,2,-3,9,6,1,4,10,6,-5,1,5,-8,4,3,10,2,2,-5,-5,8,-8,6,6,-8,-10,-3,-4,-2,-10,-6,-8,10,-6,-3,-8,6,3,4,3,2,-2,10,7,4,-8,-6,1,-8,-3,-7,-2,-8,7,6,-5,-5,5,-5,-9,10,1,4,3,10,-3,-10,-10,-1,2,6,6,-4,-7,3,-8,-3,-10,3,-7,1,2,6,-10,8,4,9,7,3,2,10,-1,-1,10,-4,8,8,7,-1,-2,-8,5,8,-1,-8,9,5,10,8,-1,-8,8,-1,1,1,-3,10,8,-9,-9,4,-4,-5,-4,-6,-5,-7,2,5,10,-7,-9,-10,-2,-6,8,8,-8,10,-6,-10,-3,-2,-5,-8,-5,7,-9,10,9,-4,-7,-1,-5,-8,7,10,5,5,-10,-2,-10,-10,-7,4,-10,3,9,2,-4,5,-10,-1,6,2,1,-5,-4,-1,7,7,4,-3,-5,-6,-9,10,5,-2,-7,9,8,-10,8,3,9,-3,1,5,-2,5,-2,-1,-6,10,-7,1,2,6,-5,7,1,4,-7,8,-9,-3,9,10,6,7,8,7,-3,3,-3,1,-10,6,5,-7,8,-7,-3,-10,-4,2,-9,3,-3,-10,-7,-10,6,-6,-1,-7,-4,-6,9,8,5,7,-9,5,-9,10,-6,4,-6,4,3,6,4,-4,8,-10,2,-6,-10,-4,-8,4,5,-7,-6,10,-2,5,-8,1,-1,-8,8,5,-7,-6,3,10,-6,3,-7,3,9,5,9,3,5,-4,-7,1,-9,-10,7,-2,-6,6,10,-3,7,8,4,-7,-5,3,1,-8,1,3,-10,2,2,1,7,-10,-4],[2,10,-10,-2,6,7,4,-4,7,-3,-3,-6,8,-10,10,9,-5,-3,3,-8,-3,-5,-4,-5,6,-9,-7,-3,10,3,9,-4,-10,-9,-6,-6,-1,-5,1,-5,10,-3,-1,-1,-2,-1,-8,-5,-3,3,-9,-6,9,5,-3,-6,8,-1,-8,2,-9,-10,9,7,-10,-9,7,-1,-7,8,-9,-5,6,8,10,-3,-4,-8,-10,2,3,-9,9,9,-6,-7,1,-4,8,10,-1,-7,-8,7,-9,-8,-2,-7,6,-8,2,9,-7,-10,-4,-5,5,-1,8,-3,-7,-1,7,-2,3,7,-5,-1,-1,9,3,-2,5,-5,1,10,-8,-1,-1,10,-4,1,5,-4,-5,4,9,8,1,-9,-1,4,-1,6,7,6,-7,3,-9,10,1,1,2,-4,-5,7,3,9,6,6,3,5,10,-2,4,-2,8,5,-7,2,3,9,-1,-7,-4,-2,-6,-7,-6,5,2,7,5,9,2,-3,3,8,-10,4,-2,3,3,4,10,9,7,10,-7,-3,2,-3,-7,2,-10,3,1,9,5,-1,-3,7,-8,1,7,4,9,8,-2,7,-7,5,-8,1,-8,-10,-5,-2,-3,-8,-6,-4,4,4,10,-8,-4,4,7,-5,10,-7,-2,7,1,-10,2,5,3,1,-1,-2,-4,-4,2,8,-7,-6,-4,-8,2,4,-1,-9,-6,-10,1,-1,8,6,9,1,-10,8,-2,9,-6,10,-9,2,9,-6,3,7,-5,1,-8,-1,-9,-2,-5,7,-3,-9,-5,-2,4,-9,5,10,9,-5,4,-7,5,6,-10,3,9,8,4,10,-5,-7,-5,2,8,2,1,5,-9,-8,-3,4,3,-7,1,-5,6,-9,-10,-4,-6,10,-6,-5,-7,5,4,-3,-1,-1,10,9,9,7,-8,-8,1,-4,-7,3,-2,6,-6,-2,-3,-9,1,9,5,9,-10,10,7,6,2,7,-8,9,-4,-2,6,-10,-9,-8,4,10,4,-5,1,-2,3,-7,2,6,9,-5,-7,-3,-3,-3,-8,-2,2,-1,9,7,5,-2,2,-5,3,-7,6,-1,10,-7,-8,9,6,-4,-5,8,9,-7,7,-3,3,-3,9,-9,9,-7,6,-6,8,-9,2,-5,7,-3,5,5,5,8,-3,5,4,6,10,2,3,-4,-9,8,-8,-8,-7,10,10,-8,-6,2,8,10,3,7,5,3,-10,-10,3,1,3,-4,3,6,8,9,-10,-4,-3,9,4,-4,6,-3,3,9,-7,-1,-6,10,-6,9,-10,-9,4,2,1,-2,-1,-5,9,2,-8,8,9,9,-1,-3,1,-5,-1,5,-5,6,2,-10,-7,8,-5,-1,-8,-4,-9,9,1,5,3,4,6,3,3,-8,-8,-6,-5,-9,-5,2,-2,-2,-7,4,6,9,8,-10,7,-9,-6,-8,-10,-4,4,1,-8,-8,1,-8,-8,10,1,6,10,3,-10,7,-9,-9,8,8,2,-3,-6,1,-8,-1,-1,-6,-4,-4,-1,-6,-1,-3,2,5,7,-8,-6,8,-8,-4,-8,9,-1,-6,-6,-5,7,8,-9,-5,10,9,2,4,8,10,-10,8,4,6,-6,8,6,5,10,4,-5,8,4,-9,9,10,10,1,-2,5,5,-3,9,8,10,-9,-7,-4,6,3,7,-3,1,-1,10,-3,9,-5,6,8,-7,4,-4,7,4,-5,5,-7,3,-1,4,-7,-2,1,-8,-5,-6,1,7,-9,-7,-3,-6,9,8,4,4,5,4,3,5,-4,-8,2,-2,10,7,4,-2,5,-2,2,-10,1,2,-3,5,9,-4,-1,-2,-8,4,4,-4,6,8,2,-4,10,-9,3,2,-7,1,-5,-9,-1,6,9,-4,7,-4,10,2,-3,4,-4,10,-5,9,5,4,1,3,1,4,9,-7,-7,2,-1,-8,5,8,10,-1,-5,10,6,-7,-1,6,-10,-3,-3,7,-1,9,-4,7,4,8,4,9,-1,8,-9,6,-9,-6,-1,-6,-7,-8,4,2,3,1,-8,-1,7,5,-6,-5,7,5,4,2,-8,10,-6,-10,-4,10,1,5,1,-4,-8,-9,-10,-4,-8,4,9,-8,10,-5,8,10,-7,7,-4,4,-2,8,-1,-6,1,5,-6,4,-2,4,-6,-1,-9,2,1,-5,1,5,-10,-3,1,-2,2,6,-6,-3,-5,7,5,7,-5,9,8,10,-6,-8,2,5,5,-7,2,-3,-6,-2,8,-7,2,3,-3,-7,-5,-6,-4,-10,-2,9,-6,-2,-3,-3,2,7,9,3,2,-9,-4,5,-5,6,-3,3,9,2,-2,6,7,9,3,8,-1,-2,3,4,4,7,-6,7,-8,1,5,3,3,8,3,1,4,-10,3,-2,3,-4,-2,8,1,-1,7,10,5,5,-5,-5,-2,-3,8,-3,9,-1,10,10,-7,10,4,-5,10,-10,-6,4,-7,-2,6,-5,3,-3,-5,6,5,-7,6,9,-2,10,1,8,3,-4,-7,2,-7,5,-10,-4,-7,-4,-3,-10,4,-6,6,-5,-6,-9,-10,-5,10,6,2,-6,9,3,-5,-10,5,-3,10,3,7,-10,-5,-1,-6,-4,7,7,-10,-9,-3,3,4,10,-4,-1,5,9,6,-4,8,-3,7,-10,-10,3,9,5,4,7,-8,-10,-10,4,8,10,-7,-1,-1,-5,-10,-8,4,2,9,-7,-6,2,5,-1,6,-1,4,-9,-2,8,3,-3,-9,7,2,5,-1,3,-2,3,8,1,5,-7,-6,-3,2,10,-10,-9,2,-2,8,-1,2,6,-7,1,1,-10,-2,-10,8,-6,-6,1,-7,-1,10,5,7,1,-2,-5,-10,-2,10,7,-9,-4,-9,4,-10,3,8,-10,-9,6,-3,4,10,6,-5,5,9,10,-6,4,-9,4,4,2,-6,7,-3,-5,-7,10,5,10,9,-1,-4,1,-3,3,-2,3,5,-9,10,-1,6,-3,-1,4,2,-4,-10,10,-3,-1,9,-5,3,-5,10,4,-9,5,-7,-9,4,-5,-10,10,-9,-10,-4,-5,9,-9,-7,-4,-9,8,10,7,1,-10,7,6,-10,8,-1,8,4,10,-10,8,5,-7,3,1,-4,-9,-3,-10,-3,-5,-1,6,-2,-5,-3,4,-10,5,5,-9,8,-1,-5,2,-1,-4,-1,6,-9,8,7,-1,4,-10,3,7,9,2,3,4,2,4,8,-9,-4,-10,10,6,9,-5,9,-6,2,-4,2,8,-6,9,6,-1,-4,9,-4,10,-5,8,8,4,-1,-6,-8,7,9,-8,-2,3,-1,2,9,1,-8,8,2,-6,2,-4,-8,-4,6,2,-10,8,1,-9,3,-4,8,8,6,2,8,6,-8,-3,-2,-6,3,-8,-3,5,-6,8,-5,-5,-10,8,-3,-4,-7,-7,3,3,-7,-10,-7,-8,-6,-8,-5,-1,-8,-5,-3,3,-7,9,6,-7,1,5,2,1,-2,-8,-2,5,8,-2,-2,-1,7,-10,9,6,-3,-10,-4,5,-9,-6,2,10,3,10,-9,6,-10,1,-2,-1,-7,9,1,-1,7,-9,1,10,3,1,3,-8,-2,4,5,8,-6,5,-3,8,-4,-10,8,8,9,3,-7,-5,-1,2,4,-10,-6,-10,3,-8,8,-1,7,-8,-1,8,-6,-4,2,5,-5,-8,9,-10,9,9,-8,-2,2,-1,4,8,2,9,7,10,8,-2,8,-1,-4,2,1,-6,7,5,-7,-3,4,-3,-5,-4,10,2,-10,7,-3,5,-5,8,-8,-7,-5,-4,-2,1,-9,-2,1,-9,7,4,-6,-4,9,7,3,2,4,-7,4,-6,3,2,-4,-6,10,8,10,-7,4,-8,-7,4,-8,-8,1,5,-3,-1,-1,-7,8,5,7,-8,-7,9,7,-3,-8,-7,-6,4,-9,-8,1,-1,1,8,-9,1,1,8,-5,2,4,2,-10,-1,1,-1,-7,1,8,7,6,-3,-10,-4,4,10,-3,-9,-1,4,-2,-4,7,8,-7,-3,5,-7,-9,-3,6,10,-6,-2,1,-8,-3,3,-10,-5,8,-7,6,-9,6,7,-3,-9,7,-7,1,5,-10,4,-1,-6,-1,-1,8],[1,10,-3,-6,-4,-8,-5,-8,3,-9,7,-7,1,7,-4,-2,8,4,4,8,5,1,-4,-10,-7,3,-1,9,8,-3,-3,-9,6,-6,5,10,-1,2,10,-2,3,10,-6,7,7,8,7,-4,-3,5,4,10,6,1,-7,2,-8,5,3,10,6,-1,5,7,-6,6,10,5,1,4,9,-8,-10,5,-9,-3,-2,7,2,5,-8,9,-10,-4,2,-9,-3,10,-3,5,9,-6,-6,10,9,-5,-8,-3,-1,-9,4,-4,4,8,-8,-9,5,-9,8,-9,7,-4,-10,-5,-5,-2,2,-5,9,-4,-10,-7,8,-4,-7,7,-8,-1,9,7,-8,-2,6,-7,-3,-5,5,6,8,-2,-6,1,2,-2,7,5,-10,-8,-6,-3,-7,4,8,5,-1,-3,8,10,-7,10,-4,9,-4,10,1,1,-2,8,-4,-10,-4,3,-8,-3,-5,-6,10,3,-2,5,8,9,-10,2,4,10,-4,1,8,-6,6,2,-7,1,-9,3,2,-9,-1,-8,-10,2,-5,-5,-8,6,3,2,-6,-9,9,4,6,-4,4,-1,-4,10,9,-10,8,-10,7,-1,7,8,4,7,-3,6,-5,-2,1,8,-9,4,6,6,-10,-4,1,-10,2,-6,10,-4,8,-4,10,-8,10,-6,-9,-10,1,3,4,8,3,-2,-5,-6,4,1,-3,3,-2,10,3,-8,1,-8,-7,4,-10,2,5,-8,9,-3,10,-6,6,6,3,4,7,1,-10,-5,1,6,5,-7,5,7,-7,-10,8,-4,1,-6,-2,4,2,-2,7,1,2,-8,-9,4,7,-10,-1,-5,4,3,-8,8,6,-7,8,7,-7,8,-10,-1,-6,4,-5,2,-2,-5,-1,2,-5,-2,-8,-4,6,10,-4,-4,4,-10,1,-8,6,-3,10,-4,-6,-7,-7,-1,3,-8,-4,9,-2,-7,-10,6,-10,-1,-8,-5,-3,-1,5,1,7,5,4,1,3,-9,-3,-9,7,5,-6,8,-5,8,-2,8,-8,3,8,-8,-10,-4,-5,9,-2,5,-7,7,-3,3,-6,7,5,8,1,-6,4,-7,-2,2,1,4,-2,1,8,3,7,7,-1,7,10,5,3,4,-8,-3,-4,8,-10,1,5,9,7,5,-1,-10,-8,-7,-6,-8,7,-3,10,9,10,-5,6,-4,2,-1,-4,3,7,-4,-1,7,-4,3,10,4,-1,-5,-7,-2,-10,1,5,5,6,-4,2,8,-10,1,-2,1,6,-2,7,-1,10,-1,7,-6,-7,-3,10,8,2,-1,6,8,10,-6,-8,3,8,5,-2,-2,1,-2,5,-2,-1,1,-9,-3,3,-3,4,-10,-10,10,6,-2,7,10,6,-1,7,6,3,4,-7,-10,2,7,-5,-5,9,7,-3,-10,-9,6,2,-3,-1,2,3,-3,2,-7,5,7,9,-3,-1,1,-1,7,9,8,-6,-8,-4,3,10,-4,-4,-10,7,7,-6,9,3,1,-5,-2,1,1,2,5,8,7,-2,-6,2,-6,-4,-6,-10,-1,-5,-7,4,6,-6,9,10,-7,-5,-9,8,7,-10,-9,9,-7,-2,3,-6,3,9,5,8,-10,-5,-3,-8,-5,3,-1,3,-7,4,-4,-8,-2,10,4,7,2,7,-5,6,-5,3,9,6,4,5,-2,-4,8,10,-2,8,-1,1,-1,-3,4,-2,5,-1,8,6,7,-4,3,-8,3,3,2,9,1,-2,9,9,2,10,6,-9,7,9,-9,7,5,-5,3,2,5,10,8,7,-1,-9,4,-9,3,-1,5,4,7,8,-3,-6,6,2,7,-3,6,-3,-4,-1,2,-1,9,8,-7,10,9,-6,-3,-1,6,9,8,4,6,-10,7,-7,9,2,4,-5,7,-9,10,1,4,9,3,5,-9,10,-8,-2,-2,4,6,8,1,-4,-7,-8,-8,-2,-2,-2,4,7,-9,-1,-3,9,-4,-3,-6,7,-3,-4,-2,3,5,-7,7,3,2,9,8,-5,4,-7,-6,-4,9,-1,6,5,9,-4,-5,-4,-8,-6,-10,-9,10,5,-2,6,-6,-2,-1,8,8,-8,-9,-4,7,5,1,-2,-2,7,-7,-5,10,-7,-4,-4,-9,9,-7,4,3,1,-5,-6,-1,1,8,1,3,10,7,2,-8,-3,-4,-7,6,2,3,8,-1,-4,-7,6,6,-9,-1,6,-2,4,-6,2,1,5,1,1,-4,-2,9,3,5,-8,-1,-8,5,-8,3,5,3,1,3,8,5,8,-8,-1,1,1,-4,-6,3,10,-5,1,4,3,-1,3,-1,-4,-2,-3,-4,6,5,7,-7,3,3,-1,5,-2,-5,6,10,4,-5,-4,1,-7,5,4,2,-5,1,-9,9,5,-10,1,-9,1,-4,-2,-6,-5,4,2,-7,10,4,4,-5,-1,-10,-3,9,-4,9,-2,-7,-8,6,-9,-9,-1,-10,-6,4,10,-10,-4,8,-6,3,4,4,-5,1,1,4,-3,-9,-1,-8,8,5,1,-7,2,2,4,-9,-6,4,2,-1,6,6,4,10,4,-3,1,-1,-4,1,10,-6,10,-6,-1,9,-9,-7,-1,-7,4,-1,10,8,-6,1,-8,-2,8,-3,7,8,-7,2,-2,4,-7,-1,-8,10,-9,-9,9,-7,1,7,4,-7,10,10,6,-6,-10,1,-5,1,3,10,1,-2,9,-4,5,-3,-1,-5,-6,2,-7,3,6,-5,-6,-3,-4,1,4,-6,9,4,-2,-6,1,4,1,-1,5,-7,2,-8,-5,-8,6,-10,3,2,-6,-4,8,-6,-7,-5,-4,3,-2,-10,10,10,4,-1,-3,-10,3,5,-2,-10,9,-3,-8,6,-5,-1,-6,1,8,-5,-6,1,1,-3,-10,-3,-8,1,-3,8,-5,5,9,-1,9,-1,3,6,-1,-8,-2,9,1,8,8,2,-6,-5,4,-5,2,-9,9,10,6,10,-2,10,8,7,-5,-7,7,-7,8,5,-7,8,10,7,-7,-6,3,-4,3,6,4,8,-7,-4,8,-6,2,2,-1,9,-3,1,-8,-8,8,-8,9,-4,10,3,7,-4,3,-2,4,-6,-6,-4,2,7,8,-4,1,3,-8,-1,6,-4,3,5,9,4,-8,2,-2,2,6,9,4,1,8,6,1,-5,8,-10,1,2,4,-9,-5,-10,-5,-8,-1,-10,5,3,8,8,7,-2,-6,6,-10,-8,-6,-8,7,9,-7,7,8,7,7,1,5,-2,10,1,-5,-7,-9,-9,10,-6,-10,10,4,-4,-5,7,-10,3,9,2,-6,2,-3,-6,2,4,5,-9,-3,2,-8,2,-7,8,10,9,-8,-3,-3,-5,-1,6,3,6,8,6,8,4,2,1,-3,-7,-1,-3,9,1,7,7,3,-7,-1,9,-8,5,6,-1,-8,1,1,6,-1,2,-4,-7,-2,2,-7,3,3,-7,-7,9,7,5,-1,9,-9,10,-8,4,3,-5,6,-8,-7,-9,3,10,-7,7,-7,2,7,-9,2,7,9,8,10,-4,10,3,-1,-3,-7,8,9,10,-3,3,4,1,-1,-9,-6,10,-4,9,-6,-6,7,7,-4,-3,9,2,-5,-7,3,-9,-6,-5,2,8,8,-10,-7,-2,7,-8,3,-8,-5,7,10,7,5,-6,5,4,9,-10,-3,5,-10,-6,5,5,8,7,10,-4,5,-1,-6,-6,10,-9,-10,5,-1,5,5,-5,-2,1,-8,6,-6,8,3,-7,1,10,-4,1,5,1,-8,5,3,-1,-2,6,5,10,-7,-2,4,-10,-6,4,-9,-3,3,6,-5,-7,-5,5,-7,7,-3,-2,1,-7,-3,10,10,-6,3,-9,8,-5,8,-2,-6,-9,-9,8,-5,9,-10,9,-4,10,-8,6,-4,-10,1,-7,2,-6,1,3,10,3,2,-9,6,4,10,-1,-10,-7,4,8,4,-8,-9,-10,-4,-1,4,3,-1,5,6,4,-8,9,-6,7,-2,-4,8,3,4,8,-4,-7,7,-4,9,-9,10,-8,-6,8,-2,10,-6,-1,7,-8,8,5,9,-8,-9,3,4,10,6,9,-10,-7,-2,-7,-6,1,2,1],[5,-8,-6,-8,2,-2,7,4,10,6,-10,10,-9,1,-7,3,-10,10,1,8,-5,-2,2,2,9,-2,10,-4,5,2,-8,5,7,-7,1,-4,6,1,-1,-7,-10,1,5,10,-3,-1,9,-10,-9,-5,-2,1,4,-5,-4,9,-5,5,-6,-9,9,-9,-6,-7,5,9,2,7,-1,-2,7,8,-10,2,-8,-4,-3,-7,3,5,-5,-7,-2,2,-9,8,-6,9,-9,-3,-4,-6,-1,3,7,5,-2,-9,-7,8,7,-1,2,10,-1,-8,1,1,7,9,-3,7,7,2,9,1,7,1,-3,3,-6,-8,-5,1,2,7,4,-3,-10,-4,-4,-6,-6,10,-8,3,4,-10,-2,-4,-1,-2,-4,6,7,-4,-7,-1,7,-4,6,8,-1,-10,9,7,-4,-7,-3,6,-4,-10,1,4,5,-5,-5,1,-9,-9,5,-8,-7,9,9,10,6,-4,3,8,-8,-9,4,-1,2,-1,7,8,-6,2,2,9,-3,-8,-3,-4,-9,-3,6,-6,-3,-5,-8,-4,10,8,-7,-4,9,7,-8,2,8,8,1,-2,1,-7,-10,3,-7,4,9,-6,-9,2,-6,5,-4,-9,9,1,1,-10,9,3,-6,9,6,-6,8,4,-4,9,-6,-3,10,-8,4,-3,3,6,-4,5,-10,-7,-10,-10,4,4,-8,6,5,-8,-1,-9,-7,-4,-9,3,1,-8,4,9,7,-7,-2,-2,6,3,3,2,8,4,-6,-9,-8,-9,-4,10,2,6,-2,-3,2,-8,10,6,-9,-7,7,1,2,-10,10,8,1,10,-4,-4,8,1,5,8,-10,-6,-1,-4,10,-7,-6,-6,9,-10,8,-1,-7,6,2,3,-7,8,-9,10,8,2,2,-1,-6,6,-5,10,-1,-4,-10,-4,-10,-6,-7,-8,4,9,10,9,-10,-9,3,-9,-8,7,1,-7,-4,-10,7,-7,10,9,7,7,6,-4,-5,-5,-3,-1,4,5,-10,10,-3,-10,-5,4,-8,1,6,3,6,4,-10,6,-4,-1,-6,-2,2,-1,-1,-10,7,-1,7,-4,-3,4,5,5,-3,-4,1,-7,7,9,4,-5,1,3,1,2,-6,-7,-8,-2,1,9,1,-7,5,-6,-5,1,-8,-5,2,5,4,10,-4,-5,10,9,10,-10,1,-8,-9,-2,3,-8,-3,-2,-2,-10,-7,-1,9,-8,5,-7,-6,-3,-2,-1,-10,-10,1,1,6,-8,-6,-10,1,5,-6,2,-5,-8,-8,4,10,-3,7,2,5,6,1,8,4,7,6,-3,-4,10,9,-2,-7,10,8,7,4,-9,-9,-6,-10,2,-4,-1,-3,-2,6,-1,-10,-6,3,-6,-7,1,-9,7,-1,9,2,-4,10,9,-2,8,-3,2,8,-2,-2,10,-9,-3,6,6,2,4,5,-8,6,-9,-2,5,-1,-4,-10,-4,-1,-9,-9,-6,-2,4,4,6,-2,8,-8,-4,8,1,2,6,2,-10,-10,-3,5,-4,1,-10,5,-7,-1,-3,8,-8,7,2,3,10,6,-8,3,3,-1,9,3,10,-4,6,5,2,9,-3,6,6,9,7,7,7,3,4,1,-1,-7,7,-10,-5,-3,-1,-2,-2,-2,-4,-9,5,-7,7,4,-5,4,2,2,-2,6,5,2,-10,8,-3,6,-8,-8,-3,4,1,9,-1,3,-6,-9,-8,2,-7,-3,-7,8,-4,-2,-9,6,-6,5,5,-3,8,6,4,3,6,10,7,-9,-6,-1,-7,7,1,1,10,9,-7,-4,-10,-2,7,2,-2,6,-1,-3,1,2,-1,-7,6,-1,-10,-3,5,1,-7,-5,-3,9,7,10,1,9,-4,7,4,-4,4,-7,3,9,8,-1,5,4,-1,10,-6,-5,7,2,-9,-6,-4,-2,-8,6,-4,-6,4,-1,-4,-6,1,-5,-3,-10,5,-5,-6,5,7,1,-6,-2,-6,-7,7,-5,5,7,-8,10,10,10,2,1,7,-1,-8,5,-10,-6,-6,-3,2,-10,-6,4,6,3,9,7,5,-1,3,-7,-8,7,-8,6,-2,-10,5,-8,10,-10,5,-7,7,3,3,2,7,-5,4,4,-6,-6,-10,5,-6,-9,2,3,-3,9,8,-7,-3,-9,4,2,-2,4,-3,-2,-3,9,-8,-7,1,-6,9,6,-6,10,-10,1,-1,4,5,2,-8,5,7,6,8,-7,-3,-1,-9,10,-3,3,-5,7,-4,8,-4,-7,-7,-9,3,3,10,-9,-5,10,8,-2,-10,-5,-10,4,7,4,-4,-10,8,5,7,9,-2,10,2,-5,10,7,-4,-5,4,-5,-4,-5,8,2,-5,7,-10,7,8,-4,-3,-2,2,6,-9,-4,5,7,9,-9,10,2,-5,-4,3,3,7,-1,-3,6,-9,4,8,-9,1,-3,-6,-5,-6,-3,-6,-2,-2,-3,1,8,8,4,-5,6,1,-1,6,7,4,8,-8,3,5,-6,5,-6,6,-2,-3,7,8,2,-3,-6,8,-4,-6,6,-3,8,6,5,-4,-5,5,-2,1,7,-2,10,8,-8,-1,8,9,-5,1,-1,5,3,-7,3,10,1,-4,4,4,-10,8,-2,5,-6,-5,1,-10,-2,-9,6,-6,3,-9,-3,1,-2,1,-8,1,-3,8,8,8,8,4,9,2,-9,-9,7,-4,-8,5,1,1,-2,-8,8,10,-7,9,-6,10,-5,-8,8,3,6,4,-2,3,-4,6,-1,10,-3,-6,2,-4,4,9,-3,9,-10,9,10,8,5,7,-10,-3,-6,4,4,6,8,-9,-10,2,-1,-4,5,6,5,7,10,10,1,-5,2,1,9,-10,-8,8,5,10,-3,-1,10,6,8,-8,-2,3,6,-3,-6,3,7,-5,5,-2,4,7,-1,-5,-10,9,-8,5,8,9,1,8,-5,-8,-10,9,4,-5,-10,4,-3,-2,-5,5,3,7,-7,-1,10,3,2,2,-9,-10,9,-10,9,5,7,7,-3,-5,9,-3,7,-9,-1,4,-9,-10,10,-3,10,-3,6,-10,-4,9,2,4,-9,8,-5,-1,-5,-3,1,-4,-1,-1,-6,-8,-7,-4,1,8,-3,2,-7,2,-6,-8,10,9,8,-2,10,-5,-9,5,10,-1,-8,-1,-10,8,8,2,-10,1,10,4,-3,6,-1,1,-4,4,-7,-8,8,2,4,5,-4,3,2,-3,-10,7,2,5,-2,8,8,8,-2,3,4,-1,6,4,5,1,8,1,7,6,6,9,-9,-9,9,10,-10,2,7,4,-5,1,4,-3,-7,8,-2,7,-6,-6,-10,8,7,8,8,-10,-6,4,1,10,-8,-3,-7,-6,1,-10,8,3,-10,1,-2,10,-2,-9,-4,2,7,-6,8,-1,-4,9,1,-7,-2,8,1,-3,4,5,1,2,5,-4,10,9,6,-3,-10,7,-1,8,-3,-3,5,7,-7,3,6,4,-3,-7,-3,-6,-3,6,6,-5,5,7,8,-5,2,-9,-5,6,6,-7,-6,-1,-5,-4,-1,1,-7,-5,4,-1,7,-9,-1,-2,-8,7,3,-4,6,-9,-7,4,-3,-8,-8,7,7,10,1,-6,-1,7,-2,2,1,5,-6,-9,-8,7,-5,3,-10,-1,-5,2,-1,-9,1,1,5,-9,6,9,6,2,-10,-3,-10,-3,-3,-10,-5,-7,2,-8,7,9,5,9,-6,3,6,8,10,10,8,8,-10,-10,5,1,-7,-5,-10,4,-5,-2,4,-8,3,10,9,5,-2,-2,-6,1,5,6,2,1,-8,10,-5,8,10,9,7,7,-10,-8,-3,-8,5,-4,-5,-4,-2,-6,-5,-4,4,4,-7,1,-9,-2,8,-1,-5,7,3,-4,8,-1,6,-7,7,2,-2,1,-3,-6,-4,-1,-3,10,2,1,4,2,-7,10,2,-8,-6,6,4,10,8,-1,-2,8,-5,-5,-3,8,-7,4,10,-4,2,6,3,-6,-7,-3,-7,2,-4,-10,-5,-6,5,-2,5,1,-7,5,-1,10,-7,-5,-7,-6,-6,-7,5,3,-5,-6,2,-8,-2,-8,4,-9,2,5,4,8,10,-3,1,8,3,-8,9,4,1,-4,-2,5],[-10,-1,6,6,-7,4,7,7,3,-6,3,4,4,8,3,-9,-6,9,4,-9,-6,-10,-2,-4,-2,9,-4,7,3,5,-1,-10,7,-10,-5,-3,-1,-6,9,9,-2,-7,1,4,1,9,6,-8,9,5,8,-4,8,-3,-10,10,-1,8,-3,8,-4,6,6,-4,-4,10,-4,1,6,10,-6,-10,9,1,-2,4,5,7,-5,-10,-7,-1,7,-4,-3,1,-7,8,-10,-8,7,-10,3,6,10,7,6,-10,-9,6,-1,1,9,-3,-6,3,4,-8,5,-5,9,2,-1,8,5,9,-4,-3,10,4,-9,-1,-2,-10,-2,2,6,-7,-4,-6,-3,-6,-5,-10,7,1,2,-10,1,-3,-2,6,-9,-6,10,-4,7,9,-1,7,4,-5,-3,3,3,-9,-1,5,-8,4,3,2,-8,-1,4,6,-9,-6,-7,6,-5,7,2,7,-2,-1,-9,-6,5,-5,-7,-7,-3,1,-4,-10,-4,6,-8,7,3,9,-10,-8,-2,4,-3,8,-3,-8,5,-5,-4,6,-5,-3,8,10,-5,-3,-1,-8,7,2,6,9,5,-2,-7,10,1,10,-5,9,7,7,-8,-2,-3,-7,4,10,-1,8,-1,10,4,-3,-8,-9,4,-5,-2,-9,1,6,1,-5,-8,-8,3,-3,8,6,-8,-3,10,9,4,9,-2,-1,10,-5,10,9,3,-10,8,9,10,10,-1,-4,-7,-10,-9,-1,-6,-7,-2,-10,8,8,-6,2,10,-8,3,3,8,-8,-4,-5,-9,-7,-9,-6,6,3,-10,2,8,-10,-3,-2,8,-7,3,3,4,-3,-6,10,-4,6,7,-5,-7,10,7,2,-4,-8,-10,-6,-2,9,-9,-1,-3,8,-4,-7,-7,-2,8,10,2,-6,-8,9,5,-9,9,7,7,-2,-6,2,5,-8,8,5,-5,-4,-7,-6,-3,7,4,-3,-9,2,5,1,-7,-5,6,-7,-2,7,-6,-2,-7,-10,-2,10,8,-7,7,3,6,1,9,-6,-10,2,5,2,4,-2,7,-8,-3,7,4,4,-7,3,-4,7,-3,10,5,-9,-6,-5,-3,7,7,-8,2,-10,-8,5,1,5,-2,-1,7,-4,-3,5,2,-3,-3,-10,4,6,-5,5,-4,10,-7,3,-3,8,-7,-3,6,10,9,-6,1,7,6,4,4,8,-6,-7,7,6,-8,-5,-7,4,4,-8,-6,1,-9,-10,10,4,8,-7,-7,-10,-4,-1,-9,-6,9,-10,-1,4,5,-2,-3,-10,-10,-7,2,3,-4,6,9,8,7,2,-8,-7,10,9,8,4,8,4,-1,-5,-1,-10,-2,10,-4,-7,-9,-7,-6,2,-8,3,-8,-4,-5,-3,10,9,-10,1,-3,10,5,-1,-4,8,-7,-7,-9,3,-10,10,-10,3,-2,-7,5,7,5,-2,8,10,-10,-2,8,2,-4,7,5,-5,4,-2,-1,10,6,4,3,-1,1,-3,9,-6,-8,-8,-4,-10,6,9,2,3,5,-1,-1,3,-6,-10,2,7,-10,-4,7,-3,9,-2,5,-8,1,1,2,4,2,10,-2,5,3,6,-7,-4,-5,7,10,-8,-5,-4,5,-2,4,1,2,-7,9,-4,4,-3,4,9,-5,8,-8,-4,2,7,1,-5,-6,-5,-8,1,9,-3,4,-9,-8,9,-9,6,3,1,-3,-5,9,-6,-1,10,-1,-2,-2,-5,8,-6,-1,10,10,-7,8,-4,6,-5,-6,-8,8,3,-1,-2,-4,-7,5,-10,9,-9,-3,-5,2,-5,-4,5,-3,6,7,-4,-8,-8,8,-9,-5,-5,1,7,-9,2,-7,9,-7,5,-3,-5,-10,6,-10,7,1,-6,-2,-6,5,-8,8,4,10,-9,10,4,8,-10,-4,6,8,10,2,3,-5,-2,8,-8,7,3,-3,1,-8,-10,9,8,7,-9,3,8,5,-10,-8,-3,-8,-6,3,2,8,4,7,7,9,3,-10,-9,-3,-9,-1,-9,9,10,3,-5,-4,-10,-10,-7,5,-10,-2,-3,2,-9,-6,-2,4,-9,3,-9,3,-10,-8,-10,10,9,3,-9,6,7,-6,7,8,8,1,8,9,-5,-8,2,-8,-10,-5,-3,-6,-10,-9,2,-4,9,-8,-9,7,-5,-2,-3,-10,-9,-9,-3,-5,7,2,1,10,3,-7,6,-8,-10,-8,1,5,10,-6,-9,5,-5,3,-3,6,-10,8,-8,7,-1,3,2,5,2,-6,-2,-6,6,-3,-4,-6,-1,-2,-5,10,-5,-7,1,-10,3,5,-5,-2,-2,-3,-3,3,-3,4,-4,-1,7,6,2,-2,-10,-10,-8,9,5,-8,-10,2,-6,1,-3,6,2,10,8,9,-1,-6,-1,-10,-8,5,-9,-1,-7,4,-7,-10,4,7,3,1,-4,2,-3,-2,-3,9,7,-7,-6,-4,1,6,-3,-7,-8,10,-7,-7,-7,1,9,-1,2,3,-9,1,-1,7,-7,-10,-5,8,5,10,6,1,1,-6,-2,-1,3,10,8,-8,4,-1,-10,-10,-4,-6,-4,-10,1,-8,-4,-1,-10,3,-2,4,-8,-4,-3,3,5,-10,6,-3,-5,-7,9,-7,3,-6,10,-1,-4,9,9,5,-1,2,6,-4,8,1,3,6,-8,3,4,-8,-10,6,-9,3,5,-9,3,-1,7,8,-1,-8,-9,-7,-6,1,-2,-3,-5,2,4,-2,-5,7,6,3,-2,-4,-1,-5,-8,3,3,-4,2,10,-9,4,7,7,-7,-9,-9,-9,8,9,10,7,-8,4,6,8,6,9,-1,7,7,8,-10,8,3,-3,9,-6,8,-5,-4,10,-4,5,5,5,7,8,10,-5,-3,-6,8,-7,4,3,-6,-9,-1,-6,-6,10,4,-1,4,-9,-4,-1,-9,-1,2,-4,-6,-1,-9,5,9,7,3,-8,-3,8,-2,-2,-7,5,-4,2,-1,-8,1,6,-9,1,-2,-1,-6,4,7,-10,-8,6,5,3,2,-8,5,2,8,5,4,3,-6,9,-3,-8,5,3,3,-10,7,7,-2,5,-2,-10,-10,-6,1,10,6,5,3,3,-5,-4,-1,-4,9,4,2,10,6,8,3,1,5,1,5,-7,-9,3,-1,-4,6,6,2,10,3,-7,-6,-8,-6,3,4,-2,-3,2,1,8,6,7,-1,-7,-7,-3,-5,-5,9,-2,10,-4,8,6,-4,9,8,9,5,4,-10,-6,-5,6,1,-6,2,3,-8,1,3,1,8,-1,-5,6,1,2,2,-1,-8,1,7,-9,-3,8,-10,1,8,-10,8,-2,-7,6,-4,2,4,-1,-7,7,-3,-10,-3,-3,-3,-7,1,10,4,7,5,-2,-3,9,7,4,2,-3,2,-7,10,-6,3,-7,3,9,-3,6,-5,-8,2,10,-5,-8,-10,-4,1,1,9,3,4,-10,10,-5,-3,-5,6,-1,-2,-9,-4,-5,6,-8,-6,7,-10,6,-4,-7,5,-4,-9,1,-3,-8,-5,1,8,4,-2,-3,9,4,-4,2,5,10,8,7,-2,-8,7,8,-3,-1,-3,-7,8,8,4,-1,4,3,3,-5,7,3,5,1,-2,-10,9,-1,-1,-8,7,-2,-9,4,6,-8,-5,9,10,7,-4,-1,6,-9,1,10,7,10,8,9,-5,9,7,9,9,1,5,-6,6,-8,3,4,1,-5,9,-2,-10,-4,10,4,9,3,-1,-7,-4,-3,-2,-6,-10,1,-6,4,6,3,-1,-7,4,4,-9,-2,5,-2,4,-1,1,-6,7,-3,7,-10,2,-7,-7,4,4,-9,-3,10,-8,-4,3,8,-7,2,6,2,-9,-8,2,2,-10,-8,3,10,9,2,3,1,-10,6,4,6,7,-10,4,6,5,6,-2,-1,2,2,-5,5,-7,-1,-7,4,9,-2,8,-8,3,-4,2,-7,-1,10,-3,9,-8,-1,-7,8,1,-10,9,5,-4,9,4,-4,5,1,1,-8,-4,3,-5,7,4,-6,-7,-6,-2,1,-1,3,9,5,-5,8,-5,-1,5,-8,-7,-3,-7,-9,6,-5,3,6,-1,1,-6,-5,1,1,6,-4,-4,-9,-5,-10,-8,-9,-10,-4,-6,6,3,2,1],[-9,-5,-2,-7,-3,-1,3,-7,-2,-7,-7,9,-4,-9,8,4,-7,-10,9,9,-2,-5,10,9,-9,6,9,3,2,2,2,-7,4,-7,7,-6,-4,3,-3,6,9,9,-9,-1,-4,1,8,6,-7,4,-7,-2,3,7,-10,-7,-6,8,1,-4,-2,-3,-5,2,-2,-6,9,3,3,-8,-4,-1,3,4,9,-1,7,3,2,3,-4,-4,7,4,7,3,7,2,5,6,-7,7,10,5,-5,-8,7,1,1,-4,-7,2,10,6,1,9,6,10,-8,-9,-3,-2,-9,2,10,8,2,-5,-3,10,-2,2,7,-5,-8,7,-1,2,4,2,2,3,-2,-10,9,1,-9,3,-8,10,-5,9,-8,8,7,-5,-1,-4,-7,2,-2,-9,-7,-10,9,2,9,-9,-10,-6,-8,5,9,4,4,2,-8,-1,-1,1,1,5,-3,-6,3,2,-4,3,-8,9,-5,-10,-2,-2,-9,7,6,-1,-6,4,10,-3,6,-8,-6,-6,10,6,6,8,-10,-7,-5,-5,-7,4,-8,-2,4,-9,-8,1,-3,-1,4,-6,4,-1,2,-4,7,-6,5,-9,7,1,-3,3,-9,4,-6,8,-4,3,-4,-6,-4,-8,-10,10,-7,3,1,-5,-2,4,1,-10,-10,2,-9,-9,-3,-2,5,10,-10,9,9,-4,7,1,-1,-3,-5,6,-5,4,9,-3,-7,6,8,-1,-1,7,4,-6,-10,-5,-7,-8,-4,-2,-10,9,10,7,1,2,-4,10,9,-10,-8,-4,5,-7,4,-2,-4,4,-6,-9,-8,9,-4,-9,-8,3,-3,8,9,-7,-3,-9,-9,1,3,-4,-5,-2,-3,-1,9,6,-1,2,-10,-6,7,1,10,5,4,-4,-2,7,7,-6,-1,10,7,-5,10,-9,7,-5,4,10,-7,8,-1,5,-10,-4,-5,5,6,-10,-1,3,1,-5,-8,-4,1,6,-4,10,6,-8,-6,-5,-3,9,4,-10,-2,9,-3,-8,-4,6,7,-5,-8,4,-4,-8,-3,-8,1,-3,6,6,4,4,8,5,6,8,1,-9,2,3,-4,-4,3,-1,-9,10,9,-1,-4,2,-6,-3,4,-5,9,4,1,10,7,-2,-8,-2,-6,4,9,1,8,-6,4,-1,-9,8,-4,3,2,10,8,7,-4,6,-8,-1,-9,-9,10,7,4,9,-6,3,-10,5,6,-1,-4,-4,-4,-9,5,9,9,-5,3,-4,8,4,10,-3,-3,7,-3,-10,-7,1,10,-7,6,-3,-6,8,2,-10,-1,-9,9,-4,6,-1,-4,6,2,2,-3,-9,-9,1,-8,6,-5,-6,10,9,3,-2,4,-2,1,-6,-8,-3,1,2,6,1,-2,6,-6,-1,-4,-7,-1,5,-2,4,6,-10,-3,8,-8,-9,-5,-6,1,-1,10,-5,6,1,-1,-9,4,5,2,7,2,2,-2,-10,8,7,-9,9,2,-5,-6,-1,-6,10,-8,7,4,7,10,8,-1,5,9,9,-3,6,9,-2,2,2,-8,1,-10,9,-8,-9,-5,-10,6,8,4,-1,-3,-9,-4,6,9,5,6,9,-2,-2,3,-1,-1,-10,-7,9,3,-7,-6,8,-10,5,6,1,-4,-5,9,8,7,5,1,3,2,1,-3,-3,4,3,6,10,-9,9,-2,-7,8,-4,8,5,7,7,-6,7,2,10,3,10,-2,1,-9,-5,-2,6,-6,9,-6,7,1,-2,3,-1,-9,-10,1,6,-10,6,8,2,-2,9,-9,10,10,3,3,10,4,-4,1,-6,1,-3,-2,6,5,-4,2,4,-7,5,-10,1,-7,2,6,-1,8,9,8,-3,-1,-9,2,-4,2,-8,-6,-8,-5,1,6,10,3,-3,-5,5,-5,10,10,6,-3,6,-1,-2,-5,-10,2,-7,9,7,-8,1,-9,-3,-5,2,-1,-9,3,1,-2,-2,-10,1,-1,-7,-1,4,-9,10,6,-4,-2,-9,2,-6,-2,-1,7,4,-8,-9,-9,-2,10,4,6,2,1,-5,-5,9,7,-10,10,2,-4,1,-6,4,5,-3,-4,-8,-8,9,-4,-1,-8,5,4,8,-2,3,-1,3,3,-8,-1,-3,9,-4,-10,-4,-7,-6,10,-1,4,8,1,1,5,2,-8,-7,-8,-2,8,-9,-6,-8,-1,-9,-4,-8,10,10,1,-3,8,-7,-3,-7,4,-7,-10,-9,5,6,6,-4,-5,4,-6,-6,9,3,2,-4,-7,-7,6,-8,5,-2,-9,-9,-1,-2,-2,-3,4,2,7,2,-8,1,-6,-7,-4,-6,-5,7,10,5,10,2,4,-1,1,-5,4,-5,4,3,-8,8,4,9,7,-5,-2,2,-4,-6,-6,-3,4,3,9,5,5,-3,1,4,-6,4,7,-3,-10,-5,10,9,8,-6,-9,4,-6,-4,9,-6,6,-2,-5,3,5,-2,-6,3,-4,-10,-9,7,-3,4,-9,-8,10,8,-6,3,-9,-8,-7,-10,9,-3,6,8,3,1,4,-6,9,2,-7,9,-3,2,8,-2,-1,9,-7,7,1,-1,-7,-9,-5,4,-9,9,-9,-1,-10,-8,-8,-6,-4,-4,-1,9,-3,6,3,-9,2,2,8,10,6,9,-5,-8,10,-5,8,10,-6,9,-6,-2,8,-2,7,4,-10,-9,10,5,9,10,7,9,6,-3,-8,-1,-8,5,-4,1,2,8,-7,-1,-4,6,-10,-5,4,-9,2,3,2,7,6,10,10,-1,1,-7,-2,-6,-9,9,8,10,-7,-10,-10,6,7,-6,-4,-5,-9,-1,3,-5,10,-8,3,8,10,8,-7,5,-10,10,-8,-10,7,-9,-1,-5,-10,1,10,3,1,9,8,1,-5,-2,8,-1,5,7,6,-9,4,2,-1,-5,8,2,2,-2,6,1,7,-1,1,8,-10,6,9,10,-2,-4,-1,-6,10,9,3,-4,-9,1,-2,7,-8,-6,10,-6,-10,-7,-7,-3,3,4,1,6,-4,-4,-8,10,6,2,3,10,-10,-6,10,-7,3,-8,-1,8,3,-2,3,-6,8,-4,-8,6,-3,-9,4,-7,7,-3,2,-2,5,6,5,-8,-2,4,9,7,2,9,2,-3,1,-5,-1,-8,10,4,-5,-8,5,6,4,7,1,-2,-2,-10,-4,6,4,2,7,9,8,-1,-1,-8,10,1,-3,-4,9,-10,3,-8,1,10,6,1,9,1,-9,-3,6,2,-6,-8,4,-7,3,1,5,-1,-3,9,4,-1,8,-4,7,-6,6,-7,-2,-5,-2,-9,10,-10,-4,-6,-8,3,-3,10,7,-3,2,1,-6,8,-5,-7,-7,-9,-7,-1,-5,8,-5,8,-6,5,10,-9,2,-4,-4,-3,7,4,-8,6,-1,-1,-5,-10,-9,7,9,-6,3,10,-1,10,5,-4,1,8,6,-10,-8,10,-3,7,-4,7,-4,-5,-9,5,-1,1,-8,-5,10,-5,-6,-6,-3,5,7,-5,10,-10,-4,-5,5,-6,4,-9,-7,-3,-1,-3,5,2,-1,-4,6,10,-8,-7,-2,6,-4,-10,-9,-5,-3,5,-8,9,3,-2,7,10,-8,10,10,8,1,7,3,10,-2,-4,-1,4,8,4,-8,5,-3,-8,9,9,3,9,9,2,4,6,2,-1,5,-8,-4,-9,-7,2,-2,-7,-8,-1,-8,2,10,9,-7,-2,8,5,2,8,10,7,-10,7,1,-9,-2,10,9,3,2,10,7,3,-9,1,1,-3,10,-3,7,-1,2,-2,3,-9,-1,6,-4,9,9,5,6,5,8,-7,9,-6,1,4,-3,8,3,4,-2,3,1,-5,5,-2,-7,10,9,7,-3,-2,3,10,6,3,7,1,-5,-4,6,3,-7,1,8,5,-10,-8,9,-1,4,-2,2,-6,10,5,-5,1,-1,5,-2,-1,-7,7,6,10,-2,8,6,2,3,-9,-8,-10,3,-8,-8,-9,-5,3,-2,1,5,-1,5,-6,1,-9,-8,-7,6,7,-2,9,1,-1,6,1,5,-4,-5,1,8,4,10,-6,-7,-10,-9,8,-4,-5,5,4,7,-10,-8,10,-4,-1,-8,-1,-2,-5,4,3,4,-8,5,9],[-10,6,-4,6,-3,-2,-8,3,6,2,-1,7,4,-8,-5,-3,-8,5,-7,9,7,-8,-4,4,-1,1,-3,9,4,-6,-4,6,-10,-5,-1,5,-4,5,-6,-10,-7,-8,9,-8,5,-4,5,-3,10,-9,2,10,-9,-6,4,-1,-4,1,-6,-6,3,2,-1,-2,-2,-3,7,2,10,10,-1,5,9,1,-5,8,9,7,-4,-3,9,3,-1,1,-3,7,3,-9,10,-8,7,4,-4,7,9,6,-6,-2,-6,-10,6,-2,9,-9,-1,3,-3,-5,-9,8,-2,6,5,-7,-2,9,2,7,3,10,5,6,-2,6,5,9,-10,7,4,-8,1,-6,-1,6,-1,9,-10,3,-6,-3,-4,-8,9,2,9,4,7,7,-5,1,-9,-1,3,-1,6,10,8,6,5,-1,-8,-6,-4,-1,6,-4,-2,6,-10,6,2,-8,4,-6,-4,3,1,-4,-4,6,9,-5,-7,-6,-9,-5,-8,3,-8,1,7,1,5,5,-2,-9,10,-2,6,-6,-10,-10,-3,-2,-2,-3,9,7,9,5,-4,4,10,-3,-4,5,-9,4,-6,4,-9,6,-1,6,-6,3,7,6,-1,-6,-9,1,-6,1,-9,-1,-10,-8,2,10,5,10,1,1,-4,-9,10,10,-2,1,5,-2,10,7,4,-2,3,2,7,-9,2,5,-7,9,7,5,-3,9,4,7,-3,8,-10,-1,-2,9,8,6,-10,-9,7,1,8,5,-7,-4,3,8,10,10,2,8,3,7,10,-2,-9,-1,4,3,-10,2,6,-7,-1,-10,6,3,3,7,-6,-4,-4,4,-1,-1,-3,-6,-5,5,10,9,5,-7,3,-4,3,-6,3,8,6,-6,-4,-7,-5,-7,2,-1,9,5,-10,-1,-9,1,-6,5,-8,-2,-5,-3,5,-3,7,4,-2,8,-10,-6,-7,-10,-7,6,7,-8,-8,1,1,10,10,4,3,-5,-2,-1,-9,3,-5,1,-8,4,-2,-1,1,-2,3,4,-1,-10,-1,3,3,7,-4,10,1,-8,-9,9,8,2,9,-1,6,-3,-4,8,-2,-5,-5,-6,1,1,-3,-1,-2,-6,8,1,-9,-2,5,-8,6,3,10,-10,-5,10,-3,-1,-3,-8,-4,-6,5,6,9,7,9,9,-9,-8,-3,-4,-9,-1,-4,5,8,-3,-1,-5,2,6,-1,-1,-5,7,-9,-4,6,3,4,7,1,-9,8,-3,-5,2,-5,6,-3,-9,4,5,1,-1,7,-1,8,1,1,6,10,-1,4,6,-2,2,-8,-7,6,-6,-6,1,4,-1,3,-10,-9,9,-8,-1,-8,6,9,-7,-3,-5,-1,-4,8,9,-5,4,1,7,6,10,8,-4,-1,-1,-7,3,5,-2,-5,2,-1,3,-10,1,-8,-4,7,3,-10,-2,3,4,3,8,-6,-7,9,-8,2,-8,2,-7,1,-7,-6,-9,-4,-4,-8,4,-5,10,-1,-6,2,3,8,-3,10,4,-10,-5,-6,1,3,10,6,-3,-10,2,-5,-6,-5,-3,-10,2,-2,4,6,-3,-1,-9,3,-6,3,7,-2,-2,-1,-3,4,2,-2,3,2,-9,9,1,-9,6,-4,-1,-5,3,-10,8,-4,9,7,-6,-7,3,2,-5,1,-5,4,1,-1,-7,1,-4,-8,-2,2,-5,2,3,1,7,1,9,7,7,2,-6,1,-9,2,3,1,3,5,-7,7,-10,-5,-6,-9,-10,-6,6,-8,-6,8,4,-7,-3,4,1,-6,-2,2,-5,10,1,-2,3,4,8,-1,3,9,10,-10,7,-4,8,4,4,-9,-1,-2,10,-6,-1,-1,4,-2,5,7,-7,10,6,9,9,-5,-6,5,-4,-6,-7,-9,9,5,-3,-8,5,6,-2,-1,10,9,4,3,4,-5,6,-2,-5,-1,-1,-9,-6,8,-9,-7,7,-6,-2,1,10,-9,-9,-3,7,-5,4,-5,-10,-6,-1,5,-3,-9,1,4,-5,10,-1,-2,-1,-7,2,3,4,-8,-6,-5,7,-7,7,2,2,7,8,-4,-8,-2,-2,4,-8,-4,-7,-5,-4,-5,-4,4,10,9,-3,-5,-3,-3,3,4,-10,-8,-7,1,7,-4,-2,5,10,-8,-9,3,-1,9,-4,5,-1,-10,8,-2,9,4,-4,3,-6,-8,7,9,8,2,-2,5,-10,4,8,2,3,1,6,-3,9,7,3,-4,5,2,-10,3,-1,9,4,-1,7,4,7,4,-1,4,9,4,1,-5,4,-3,4,6,-3,-5,-8,4,8,-3,-10,-2,4,-5,3,-6,-8,2,10,2,-7,-6,5,2,7,-2,-4,-8,-2,1,-2,2,5,4,2,-1,-10,-3,6,-10,-3,-1,-9,-5,-3,6,-3,-5,-10,6,-4,2,3,-1,-3,5,5,2,7,3,-4,-5,-7,5,-1,1,7,9,7,2,-3,5,-5,10,-6,1,-3,-7,1,8,-5,7,-10,-4,6,-8,-5,7,-2,1,3,8,-2,-8,8,-5,5,-5,-8,-6,6,-5,9,-10,-2,-8,3,-1,-10,-8,-5,1,2,-6,4,-7,6,-3,6,5,-2,-1,1,-2,2,-1,-10,8,-8,-6,-6,5,5,-6,-1,6,-6,-10,2,-1,-1,-3,5,-7,-6,5,4,-4,8,-9,-3,-4,-6,7,8,2,10,-2,-7,-6,-2,4,1,-6,-8,-9,3,-9,10,7,-3,9,6,-8,2,3,5,9,-5,-4,-9,-1,8,1,7,-10,-1,-4,2,-8,-4,-8,10,4,4,8,4,-6,-1,-2,9,9,-1,-4,4,9,7,-8,7,-4,-1,4,4,-8,1,5,2,-7,-8,-7,-5,2,-4,-8,-2,1,5,-1,-7,5,-8,7,6,-2,5,7,-6,1,-9,2,-3,7,2,8,6,9,-6,4,10,-8,-7,-6,-6,-2,10,-8,-1,-1,-2,2,2,4,8,2,7,-5,-7,-5,10,7,5,2,-10,-7,-2,4,2,4,7,-8,-5,9,3,-4,3,-4,-9,-4,-1,-3,4,9,-5,-6,8,-9,4,-5,-3,-2,4,-7,-6,2,-4,10,-2,1,-1,-2,-10,2,-10,-3,-9,9,4,-4,7,-6,3,-8,-9,4,8,1,-8,2,-1,1,3,-3,6,-5,-5,5,-1,5,-3,-9,7,-9,-2,-3,7,3,5,-6,3,-5,4,-8,-2,4,2,-4,-3,3,3,8,-1,-1,9,7,-9,-2,-2,-8,5,-8,5,-5,-7,4,4,2,-7,2,-10,-7,1,2,2,-8,1,-4,-9,5,-7,6,4,-9,-2,-6,1,-3,-7,-8,4,5,-1,2,-8,-4,7,-8,-9,-4,9,-5,-7,5,-3,2,6,-3,-6,4,1,1,-9,2,6,-9,8,-7,2,7,-2,3,6,-4,-10,-8,-8,10,10,7,8,2,2,2,-9,9,10,1,7,-10,-6,7,-9,-3,-9,-6,-6,6,8,-2,-7,-10,3,2,-5,-7,3,6,1,3,-10,10,7,-4,3,4,6,-6,-3,1,1,10,-3,7,8,7,-1,3,-4,5,-4,-9,2,1,4,-5,1,-10,-4,2,9,9,6,-9,1,-10,-2,-5,-6,10,-10,6,2,10,7,7,9,5,8,-10,10,5,-10,-8,9,-8,-5,-2,2,-1,4,-4,-4,10,5,-4,-1,6,-9,8,2,-7,-2,-2,-3,-3,2,9,8,-9,-1,-7,2,-4,6,7,9,5,-4,-4,-1,-3,-6,-9,6,-9,-3,-9,-10,5,6,3,5,5,-4,-6,9,6,-4,2,-6,-4,7,-3,-10,-2,10,2,-3,9,-7,10,4,3,-4,-7,8,-9,-7,-2,3,-3,-9,-2,-1,10,6,6,-10,8,-6,4,8,-10,8,-2,-8,-5,2,-1,-8,3,-5,-4,1,-8,-8,-2,-8,1,-4,8,-2,9,2,-6,-3,4,9,-2,1,7,4,6,-10,1,-4,6,-4,9,-6,-4,-6,-6,6,5,-8,7,-4,8,-3,-9,-8,2,-1,5,8,6,-8,8,10,1,8,2,2,7,8,2,-1,9,-7,-1,4,8,-2,7,-2,10,8,-3,3,-6,5,1,2,10,-4,6,-10,1,-1,-4,9],[-4,-7,7,-8,-2,-1,-9,-3,-4,-1,5,3,3,-8,-8,10,-4,-2,6,-4,-2,-3,7,1,-5,2,-6,-7,10,6,2,1,-1,-1,-10,9,-9,3,10,-9,-8,6,5,-1,-9,-10,-10,-1,3,-2,-6,-5,5,2,3,2,-4,3,2,-2,-10,-3,5,-5,-5,-3,8,-7,5,-8,-3,-10,-9,-6,-9,-3,3,3,-2,-8,5,-10,-9,-8,8,-5,-8,-10,9,7,4,-9,6,7,-10,6,8,2,3,-2,-6,4,3,1,7,2,-8,10,-2,-5,-6,10,7,1,-10,2,1,1,9,-6,2,10,8,7,9,-4,10,-8,4,10,-2,3,8,7,-8,6,2,1,7,10,7,-10,-8,8,8,9,10,-3,-5,-8,3,4,-9,5,-2,-2,1,-8,2,2,-1,10,-2,-2,3,-2,3,4,-1,-7,-8,-2,3,-9,-5,3,-1,-7,-7,-9,-8,-9,-7,4,3,-2,10,-9,3,8,-8,-6,-5,9,-4,2,-9,3,-1,-7,8,-5,-3,-3,-2,-4,3,7,-3,-10,7,8,-1,4,-10,6,10,10,6,10,6,6,6,-7,-2,-7,-7,4,10,9,1,-9,7,-4,5,-10,-10,2,10,8,-6,-8,1,-10,2,-10,7,3,3,6,3,-2,-2,2,4,5,-4,5,-7,-6,-8,-1,10,-8,3,-2,2,3,6,8,-3,4,-6,-5,-5,3,9,-8,-9,-1,-2,1,7,-10,9,-7,-2,10,-9,2,-5,-7,10,5,-10,4,-1,8,10,3,7,-2,10,-7,-8,-10,6,9,-3,-5,-1,6,5,10,-3,5,-2,9,10,8,6,10,9,8,-4,-4,-4,-8,6,6,-2,9,7,-5,-3,4,-5,1,-6,4,4,6,2,-8,-2,8,-5,-8,-3,9,8,-5,-8,6,9,-5,-10,2,-4,10,5,10,5,10,10,5,-3,-10,-1,6,-8,3,-1,-10,5,9,-10,-10,6,4,-1,4,3,6,2,-4,-4,-8,1,-8,-10,8,7,-4,2,-8,10,1,-8,7,-1,-10,-9,-8,6,9,-4,-5,-9,-3,-8,-5,3,-2,-5,10,-4,-10,9,-3,5,-1,3,9,7,-4,-1,5,-7,6,10,9,-8,-4,7,4,-3,1,2,-9,-2,-6,-4,-10,10,4,-3,1,-1,2,6,2,-10,-5,-4,9,-7,-10,6,3,-5,-5,1,-2,2,-2,10,8,-8,-10,7,-8,-6,7,-8,9,9,-2,9,3,-7,-2,9,-7,-2,9,8,-6,-8,8,3,-7,-1,-3,2,4,10,-8,-5,-6,-4,8,4,8,-5,8,-6,-10,-4,7,-6,-9,6,-7,-2,8,10,10,10,-6,6,2,-8,9,5,10,-1,-10,-6,-8,10,6,3,-3,-2,7,2,-2,-2,-10,8,-8,9,-6,5,-3,1,4,-3,-7,4,5,-1,-6,-7,-2,8,-6,8,-10,-7,7,-10,1,5,-10,-10,-7,-9,8,1,3,-9,-4,2,-9,7,-6,-8,2,-5,-4,-7,-7,-6,-4,-2,6,-7,-8,6,-7,-7,2,10,-9,-6,9,6,10,1,-2,-3,6,-1,-1,4,-2,1,-6,-9,5,8,9,-9,9,-4,-7,-9,9,7,-7,-9,4,2,-10,-5,-6,-10,8,-5,1,9,-8,-1,6,-8,1,-1,-7,6,-4,4,-5,-5,4,-1,-9,5,7,-4,-3,10,-10,-10,-6,4,-7,-9,5,-5,-6,-5,7,2,-3,-8,1,-10,-9,-5,9,4,-10,-8,1,-5,2,-1,10,-2,2,-1,10,-3,6,-3,-9,-8,-1,5,2,8,10,10,7,-6,3,-1,1,-1,1,-9,-2,1,-5,-7,8,10,9,9,3,-4,-3,9,-8,-10,-6,-9,-9,-6,-1,-3,10,-7,3,-4,1,3,2,9,-4,-9,9,-3,-10,-3,3,8,-9,-4,-10,1,6,-5,-7,8,-3,-6,-5,-1,9,6,1,-5,10,7,8,1,-3,2,-3,5,-5,10,-1,5,-6,10,-4,10,-4,3,-4,-6,3,6,8,3,2,5,4,-3,-10,10,8,9,-8,2,9,8,5,1,7,1,5,5,8,10,1,-6,-9,-8,9,8,7,-3,3,-10,-6,-2,-8,2,6,-4,3,3,4,10,1,-3,-7,-3,-10,1,-3,-9,-3,-7,-7,4,-10,4,8,9,-4,-8,-9,-1,3,5,6,-4,-6,-8,1,-5,-8,-9,4,8,10,-9,6,-8,-2,2,8,9,-9,9,8,5,4,6,1,8,-9,-4,6,1,-6,8,-3,10,-5,-3,4,2,-3,-7,-2,8,1,4,4,5,-2,-6,3,6,6,10,-1,-1,1,-9,-3,2,-10,1,-4,8,1,-1,-1,-2,-8,8,-5,4,-6,-8,-3,-3,9,-9,-2,8,-10,-10,8,9,-4,-5,-7,-4,-1,4,-3,7,2,-4,4,10,3,-6,-9,6,9,2,-8,10,1,3,10,-5,-7,-7,-2,-4,6,-5,4,-10,-1,-8,-1,10,2,-5,7,-7,8,5,2,3,1,2,-9,8,-5,1,-7,-7,6,3,1,-8,-3,-6,-6,2,-9,3,-9,10,-1,1,3,7,9,5,-10,-8,9,10,5,3,8,-5,-8,2,-7,-7,10,-2,-6,8,3,10,10,-5,4,2,-5,1,-2,-3,6,9,-6,3,-1,7,-7,-4,-7,-5,-9,2,-1,-7,6,10,-4,5,4,-1,1,7,-4,-8,-1,1,7,6,-8,1,-7,-7,-1,-10,-2,-10,-10,4,9,7,6,-4,3,3,2,-7,-6,-9,-7,-4,9,-4,10,-3,2,2,7,-1,5,4,-7,-8,5,9,-6,5,-6,6,-8,6,-10,10,-6,2,4,-1,-6,3,6,-7,5,-2,10,-7,-1,-10,5,10,10,3,7,4,-2,-9,1,5,-8,8,-6,-6,-10,-10,6,-6,-2,-10,-2,-4,-3,7,9,-1,10,4,-6,5,-9,-1,-6,1,6,9,-8,-4,-6,-7,2,1,-9,8,-7,1,9,-1,1,-1,3,-6,-2,4,-3,2,-2,7,-10,-9,9,3,4,-1,5,-1,-3,-1,-9,-5,-5,8,-4,1,10,-10,-9,-7,4,7,1,10,-7,10,-6,-6,6,8,-9,-1,-8,9,2,10,7,7,-7,3,8,8,10,4,-10,-5,3,9,7,-7,-8,-6,6,3,2,5,-1,3,1,-9,-10,-9,10,-4,-7,-5,10,10,-7,-9,-10,9,1,7,9,-2,-2,-2,10,1,-9,-2,10,-6,8,-5,2,-2,-4,-5,-8,-2,10,5,1,7,2,10,-3,6,2,10,5,-8,-4,2,2,2,-9,9,-1,-2,6,-5,-8,10,4,5,5,-8,8,1,-3,9,-10,-4,5,-3,7,9,9,-9,-3,-2,-10,9,10,6,-3,-7,-3,3,6,8,4,-1,9,7,4,10,10,2,9,3,-2,6,-1,5,7,-1,9,5,3,9,1,-3,-9,1,2,-2,6,2,-7,5,8,-4,-9,6,10,1,-5,2,-1,1,-9,-8,1,2,-6,-1,-2,-5,3,-5,7,4,-2,5,3,7,-1,9,-8,1,6,10,8,-9,7,5,1,5,10,-7,9,7,2,3,4,3,9,-10,-9,9,-4,-1,8,8,-7,2,-2,8,-2,-3,-7,8,10,-3,8,8,-8,9,-4,-7,4,10,8,-10,-9,9,-9,-9,5,-9,-4,7,5,-10,-2,3,6,-2,1,5,4,3,-8,-2,4,10,-10,2,2,8,8,-10,5,9,5,-6,-5,-10,-1,8,4,3,-6,1,6,-1,-1,9,4,-1,-1,8,6,-8,8,4,5,-6,-4,-6,6,-7,2,-2,5,7,-2,9,-1,-7,-5,3,-10,-9,-7,7,6,-10,-1,5,10,1,5,2,-8,-6,-1,3,9,-6,-10,-10,8,-3,6,6,-9,8,10,3,10,-3,10,10,9,-6,2,5,9,10,7,-1,-4,4,10,2,-7,-9,-2,-6,9,-1,-1,-3,-6,6,-9,-10,10,7,-1,10,-5,-5,-1,9,5,3,6,-6,6,-6,1,-8,-1,-10,5,10,-10,6,-8,-1,6]], dtype = "int8")#candidate|13492|(12, 1560)|const|int8
bop_13493 = relay.maximum(call_13485.astype('int64'), const_13492.astype('int64')) # shape=(12, 1560)
bop_13496 = relay.maximum(call_13486.astype('int64'), const_13492.astype('int64')) # shape=(12, 1560)
bop_13506 = relay.mod(call_13485.astype('float64'), const_13492.astype('float64')) # shape=(12, 1560)
bop_13509 = relay.mod(call_13486.astype('float64'), const_13492.astype('float64')) # shape=(12, 1560)
var_13513 = relay.var("var_13513", dtype = "int8", shape = (12, 1560))#candidate|13513|(12, 1560)|var|int8
bop_13514 = relay.logical_and(const_13492.astype('bool'), relay.reshape(var_13513.astype('bool'), relay.shape_of(const_13492))) # shape=(12, 1560)
var_13519 = relay.var("var_13519", dtype = "float64", shape = (12, 1560))#candidate|13519|(12, 1560)|var|float64
bop_13520 = relay.add(bop_13506.astype('int16'), relay.reshape(var_13519.astype('int16'), relay.shape_of(bop_13506))) # shape=(12, 1560)
bop_13523 = relay.add(bop_13509.astype('int16'), relay.reshape(var_13519.astype('int16'), relay.shape_of(bop_13509))) # shape=(12, 1560)
output = relay.Tuple([bop_13493,bop_13514,bop_13520,])
output2 = relay.Tuple([bop_13496,bop_13514,bop_13523,])
func_13524 = relay.Function([var_13513,var_13519,], output)
mod['func_13524'] = func_13524
mod = relay.transform.InferType()(mod)
var_13525 = relay.var("var_13525", dtype = "int8", shape = (12, 1560))#candidate|13525|(12, 1560)|var|int8
var_13526 = relay.var("var_13526", dtype = "float64", shape = (12, 1560))#candidate|13526|(12, 1560)|var|float64
output = func_13524(var_13525,var_13526,)
func_13527 = relay.Function([var_13525,var_13526,], output)
mutated_mod['func_13527'] = func_13527
mutated_mod = relay.transform.InferType()(mutated_mod)
func_12553_call = mod.get_global_var('func_12553')
func_12555_call = mutated_mod.get_global_var('func_12555')
call_13550 = relay.TupleGetItem(func_12553_call(), 0)
call_13551 = relay.TupleGetItem(func_12555_call(), 0)
func_7512_call = mod.get_global_var('func_7512')
func_7515_call = mutated_mod.get_global_var('func_7515')
var_13558 = relay.var("var_13558", dtype = "int64", shape = (1188,))#candidate|13558|(1188,)|var|int64
call_13557 = relay.TupleGetItem(func_7512_call(relay.reshape(var_13558.astype('int64'), [12, 11, 9]), relay.reshape(var_13558.astype('int64'), [12, 11, 9]), ), 0)
call_13559 = relay.TupleGetItem(func_7515_call(relay.reshape(var_13558.astype('int64'), [12, 11, 9]), relay.reshape(var_13558.astype('int64'), [12, 11, 9]), ), 0)
output = relay.Tuple([call_13550,call_13557,var_13558,])
output2 = relay.Tuple([call_13551,call_13559,var_13558,])
func_13564 = relay.Function([var_13558,], output)
mod['func_13564'] = func_13564
mod = relay.transform.InferType()(mod)
mutated_mod['func_13564'] = func_13564
mutated_mod = relay.transform.InferType()(mutated_mod)
var_13565 = relay.var("var_13565", dtype = "int64", shape = (1188,))#candidate|13565|(1188,)|var|int64
func_13564_call = mutated_mod.get_global_var('func_13564')
call_13566 = func_13564_call(var_13565)
output = call_13566
func_13567 = relay.Function([var_13565], output)
mutated_mod['func_13567'] = func_13567
mutated_mod = relay.transform.InferType()(mutated_mod)
func_12776_call = mod.get_global_var('func_12776')
func_12778_call = mutated_mod.get_global_var('func_12778')
call_13633 = relay.TupleGetItem(func_12776_call(), 0)
call_13634 = relay.TupleGetItem(func_12778_call(), 0)
output = relay.Tuple([call_13633,])
output2 = relay.Tuple([call_13634,])
func_13642 = relay.Function([], output)
mod['func_13642'] = func_13642
mod = relay.transform.InferType()(mod)
mutated_mod['func_13642'] = func_13642
mutated_mod = relay.transform.InferType()(mutated_mod)
func_13642_call = mutated_mod.get_global_var('func_13642')
call_13643 = func_13642_call()
output = call_13643
func_13644 = relay.Function([], output)
mutated_mod['func_13644'] = func_13644
mutated_mod = relay.transform.InferType()(mutated_mod)
func_13642_call = mod.get_global_var('func_13642')
func_13644_call = mutated_mod.get_global_var('func_13644')
call_13677 = relay.TupleGetItem(func_13642_call(), 0)
call_13678 = relay.TupleGetItem(func_13644_call(), 0)
var_13696 = relay.var("var_13696", dtype = "float64", shape = (420, 4))#candidate|13696|(420, 4)|var|float64
bop_13697 = relay.not_equal(call_13677.astype('bool'), relay.reshape(var_13696.astype('bool'), relay.shape_of(call_13677))) # shape=(420, 4)
bop_13700 = relay.not_equal(call_13678.astype('bool'), relay.reshape(var_13696.astype('bool'), relay.shape_of(call_13678))) # shape=(420, 4)
func_5626_call = mod.get_global_var('func_5626')
func_5632_call = mutated_mod.get_global_var('func_5632')
var_13702 = relay.var("var_13702", dtype = "int32", shape = ())#candidate|13702|()|var|int32
const_13703 = relay.const([6,6,-3,-4,9,7,-8,7,3,-2,-6,2,6,1,10,-7,7,4,10,8,-5,7,1,1,-3,-8,-1,8,-6,5,-6,-2,-6,2,8,5,-7,5,6,4,9,8,-4,9,-7,8,5,-6,-8,-8,10,-10,-6,7,-10,-1,4,-9,8,-10,2,-10,-8,9,7,-2,9,-4,-6,-8,3,-7,9,-7,4,3,3,-3,10,-9,-9,3,-3,-4], dtype = "int8")#candidate|13703|(84,)|const|int8
const_13704 = relay.const([[False,True,True],[False,True,True],[False,False,False],[False,False,True],[True,False,True],[False,True,True],[False,False,False],[False,True,False],[False,False,False],[True,True,True]], dtype = "bool")#candidate|13704|(10, 3)|const|bool
const_13705 = relay.const([8.103128,-1.747093,-0.616629,-6.472407,6.914270,1.265484,-4.012412,-3.564410,6.313209,-2.073613,5.312828,-9.599662,8.812168,-2.335454,1.241377,-7.733581,0.870296,7.985957,2.003381,2.927364,1.210560,-9.189639,-4.512563,3.816267,-5.289468,-2.377646,1.023706,8.682241,7.037898,8.222491,2.527730,7.087288,-1.372313,-3.998875,-2.243947,-7.704703,-5.714242,7.892064,9.708443,0.665759,-2.039550,6.783332,-1.784900,-2.241260,-2.867842,-5.970048,-4.054350,5.982121,8.561031,-6.832312,8.018638,2.431575,7.667827,-1.043049,-0.389788,-5.494295,5.571574,-6.347547,5.907497,6.285851,-4.759698,2.850938,4.740231,8.104869,-4.568277,-2.145549,-1.198835,-4.830226,-5.074188,0.605161,-2.474753,-1.744434,9.406252,7.565209,3.351444,0.808027,6.217718,-1.693097,7.825526,3.956706], dtype = "float64")#candidate|13705|(80,)|const|float64
const_13706 = relay.const([9,-1,3,7,-8,-9,-4,-2,7,-6,-2,1,2,-4,5,1,1,5,1,-3,1,-6,9,9,-3,1,8,5,-7,3,4,7,7,1,-4,-7,-6,-1,-2,-1,7,-10,-3,5,4,3,3,5,-2,7,1,-2,-6,2,-3,-3,-4,-5,8,6,-1,1,-6,3,-5,3,-4,-4,6,-6,-8,9,-2,6,6,3,10,-1,-2,-4,5,-4,-2,9,4,-7,6,2,-2,-9,2,-6,-8,9,-3,7,-2,-9,9,2,-5,6,7,-9,-10,-7,-10,5,2,-8,-8,-7,7,-3,-3,-2,6,-10,-9,1,-7,10,-3,-7,-10,2,-1,-6,-4,-9,-6,5,-10,-4,-4,-6,3,-10,2,1,-4,10,1,-8,-7,-2,-7,-4,2,7,2,8,-3,4,-8,7,-8,-1,-5,6,5,4,4,10,5,-1,3,4,10,1,-3,-1,-7,3,-9,-3,-6,-6,-6,-8,4,-10,1,-4,4,-8,-6,-9,9,-7,1,-3,-7,-9,5,-6,7,9,1,-8,9,-1,2,7,4,-2,-4,-5,-3,-5,-2,-1,-6,8,4,-10,1,-7,5,-6,10,5,-10,6,-3,-6,-4,5,-7,-7,6,-3,1,9,6,5,1,1,-10,-9,-9,-9,9,-5,4,7,-9,6,2,8,-1,3,4,-5,10,7,-8,4,-10,-6,-1,6,-3,4,10,-3,-4,2,8,-2,3,10,10,1,-5,6,-9,-5,-5,-8,-10,5,-7,4,8,6,9,-5,1,9,-2,-1,-7,3,-7,8,-4,-3,-2,8,5,3,1,-1,3,-8,4,6,-8,-5,10,2,6,4,-4,-8,-6,3,9,2,5,-7,-1,-2,3,-4,1,-6,-3,5,-5,-6,-3,10,4,-4,-4,-10,5,4,1,1,-3,-9,9,4,6,-7,-1,-1,-1,-6,5,9,-9,-9,8,4,-7,8,8,2,-1,3,7,9,-8,-2,10,-6,-2,-1,5,2,10,-9,-1,2,-1,-6,-10,6,-9,-4,8,9,-3,2,8,1,3,6,-3,8,3,4,-8,-5,9,-5,9,8,-6,1,4,4,2,-1,-6,8,-4,7,3,10,-1,-10,9,-2,8,-1,-3,-8,-4,-9,2,2,-2,-10,10,8,5,2,5,10,-7,-4,7,7,-2,2,6,2,4,4,3,5,-7,1,1,5,-6,2,10,-3,-6,8,10,1,-3,-5,-6,-4,9,6,9,-2,10,-8,-1,-5,-7,-2,-5,8,9,-4,-8,-7,6,-9,-7,-9,4,7,10,4,-5,2,-1,-7,8,3,-2,2,-8,-4,-1,9,-2,-3,-6,-8,5,-10,4,5,3,-5,2,4,10,2,2,-9,10,5,-8,9,-6,-10,-8,-2,6,-7,-7,-8,-8,-8,-4,5,8,-1,4,4,9,-10,-10,2,-2,-4,-10,3,3,-8,-10,-10,-2,9,-1,8,6,8,2,1,9,-10,8,-6,-9,-7,-7,1,7,7,-2,7,7,-5,-7,3,-4,4,-8,-2,-5,6,-3,5,-9,-8,-9,1,2,5,6,5,10,-1,-10,-5,-9,8,10,-4,6,-1,6,-3,10,8,-5,-4,-2,3,-8,-6,-1,-1,-8,9,-6,2,-2,10,2,-6,1,-2,-8,3,-3,-3,5,-5,-8,10,-5,-5,7,9,-3,8,8,9,7,2,-2,6,8,2,-8,-7,5,1,7,-3,8,8,-3,2,8,-2,8,8,9,-1,2,-9,-1,-9,10,-1,-3,-4,6,6,1,-4,6,-6,-4,10,-6,5,9,6,-3,-10,7,-5,-2,-5,-9,-6,5,-9,-1,-8,-8,-6,4,8,10,6,-2,8,-1,10,6,-6,10,-1,-4,9,10,1,-7,3,-7,-3,-9,-6,6,2,-4,2,-2,6,-9,-10,-2,5,9,7,7,8,4,8,-2,1,-9,-3,-5,-10,5,5,10,9,8,-7,9,-2,-1,-3,3,10,-9,4,3,-2,4,8,-9,-3,-6,-1,8,-7,4,-4,8,-8,9,2,-7,-10,4,-3,8,8,-8,8,4,5,-7,-6,2,-1,7,-3,-10,3,3,-4,4,5,-5,-8,-10,7,-3,-2,9,8,-1,-10,3,4,3,-1,4,-9,-10,-5,1,8,7,8,5,3,6,6,9,9,10,9,5,10,-4,-4,9,8,1,-5,2,2,-1,9,-8,4,-8,9,-10,7,-4,-10,2,-2,-3,-1,4,5,2,7,-4,-8,-5,-4,-8,10,3,-6,7,-9,-6,7,4,5,-10,7,-5,-4,2,5,10,-1,-5,-7,-6,5,7,-1,-6,6,-9,9,8,2,5,9,3,8,10,10,-10,-9,7,-7,-4,-10,-5,-7,-6,2,-6,-7,-2,7,-10,9,2,-8,-6,3,-7,-5,5,5,10,-3,8,-7,6,-4,3,-6,-9,-5,9,-7,2,-1,5,-8,-1,3,-2,-2,4,-3,-9,-1,5,-3,5,-3,3,4,9,-3,5,-2,6,-3,1,-7,-7,7,6,10,-2,-8,8,3,8,-8,1,7,-5,8,-10,-6,-5,1,-5,-5,-4,3,9,-9,-3,-7,8,-4,8,-1,-8,5,10,-7,7,-1,6,-2,10,-9,8,-7,-4,3,2,-8,1,-6,-9,5,6,6,-9,-7,10,10,-4,6,6,9,5,8,3,8,-8,10,10,8,-4,8,10,2,5,-1,-9,-10,-8,-2,-6,-2,5,8,8,7,-10,-6,3,4,9,-2,4,5,-2,-2,9,-3,-6,10,-9,-7,-1,9,2,5,-9,-2,-9,-6,3,-1,1,-7,-7,2,5,6,2,-2,-9,8,4,-2,8,-5,-5,5,10,-5,-10,-4,-6,-3,-6,-5,-1,-6,6,7,-7,4,9,-7,3,6,1,-10,-10,5,9,-4,6,7,-7,3,7,3,-9,4,6,-5,10,2,-10,8,1,-2,-2,-7,5,1,9,7,8,-10,-1,-1,-4,-3,-2,-6,4,7,8,5,6,-7,-1,5,-6,-6,-3,10,-10,4,5,-6,-9,-5,9,-2,7,3,4,1,-4,6,4,5,-8,-9,-8,-4,-9,5,10,-4,7,-6,5,10,4,7,4,3,10,7,-6,4,-1,-3,8,-7,-7,5,-10,-1,5,-4,9,-10,-7,8,9,7,3,-8,-9,6,-10,8,-8,-6,-7,1,-6,-7,-10,-8,-9,7,-7,10,2,2,7,-5,8,-7,2,3,8,4,-6,-7,7,4,-2,10,2,-7,-1,-3,4,4,-9,5], dtype = "int64")#candidate|13706|(1232,)|const|int64
call_13701 = relay.TupleGetItem(func_5626_call(relay.reshape(var_13702.astype('int32'), []), relay.reshape(const_13703.astype('int8'), [84,]), relay.reshape(const_13704.astype('bool'), [30,]), relay.reshape(const_13705.astype('float64'), [1, 80]), relay.reshape(const_13706.astype('int64'), [1232,]), ), 5)
call_13707 = relay.TupleGetItem(func_5632_call(relay.reshape(var_13702.astype('int32'), []), relay.reshape(const_13703.astype('int8'), [84,]), relay.reshape(const_13704.astype('bool'), [30,]), relay.reshape(const_13705.astype('float64'), [1, 80]), relay.reshape(const_13706.astype('int64'), [1232,]), ), 5)
uop_13709 = relay.exp(call_13677.astype('float64')) # shape=(420, 4)
uop_13711 = relay.exp(call_13678.astype('float64')) # shape=(420, 4)
bop_13712 = relay.logical_xor(uop_13709.astype('uint32'), relay.reshape(call_13677.astype('uint32'), relay.shape_of(uop_13709))) # shape=(420, 4)
bop_13715 = relay.logical_xor(uop_13711.astype('uint32'), relay.reshape(call_13678.astype('uint32'), relay.shape_of(uop_13711))) # shape=(420, 4)
output = relay.Tuple([bop_13697,call_13701,var_13702,const_13703,const_13704,const_13705,const_13706,bop_13712,])
output2 = relay.Tuple([bop_13700,call_13707,var_13702,const_13703,const_13704,const_13705,const_13706,bop_13715,])
func_13720 = relay.Function([var_13696,var_13702,], output)
mod['func_13720'] = func_13720
mod = relay.transform.InferType()(mod)
mutated_mod['func_13720'] = func_13720
mutated_mod = relay.transform.InferType()(mutated_mod)
func_13720_call = mutated_mod.get_global_var('func_13720')
var_13722 = relay.var("var_13722", dtype = "float64", shape = (420, 4))#candidate|13722|(420, 4)|var|float64
var_13723 = relay.var("var_13723", dtype = "int32", shape = ())#candidate|13723|()|var|int32
call_13721 = func_13720_call(var_13722,var_13723,)
output = call_13721
func_13724 = relay.Function([var_13722,var_13723,], output)
mutated_mod['func_13724'] = func_13724
mutated_mod = relay.transform.InferType()(mutated_mod)
func_12638_call = mod.get_global_var('func_12638')
func_12640_call = mutated_mod.get_global_var('func_12640')
call_13753 = relay.TupleGetItem(func_12638_call(), 0)
call_13754 = relay.TupleGetItem(func_12640_call(), 0)
func_6337_call = mod.get_global_var('func_6337')
func_6341_call = mutated_mod.get_global_var('func_6341')
var_13756 = relay.var("var_13756", dtype = "uint32", shape = (70,))#candidate|13756|(70,)|var|uint32
var_13757 = relay.var("var_13757", dtype = "uint32", shape = (700, 1))#candidate|13757|(700, 1)|var|uint32
const_13758 = relay.const([8,-9,-9,-1,-5,-6,8,10,2,-2,-2,4,8,6,-4,4,-3,8,1,9,-2,8,10,-3,-7,-3,6,9,-1,-3,-2,-9,-9,6,-6,5,10,7,-1,-4,5,-9,7,6,-5,-4,-5,1,-10,5,-2,6,-4,-3,5,-3,-5,3,2,-9,-10,1,6,1,-1,-3,-9,-6,-2,-9,-6,-7,-7,-10,-2,6,-2,7,-1,3,7,4,5,-8,-10,-5,-1,7,5,-9,-6,8,1,5,4,-3,-4,-6,10,-7,2,5,4,-3,9,5,6,5,-9,-9,-8,1,-3,2,-10,2,-9,-7,-10,4,-2,-5,4,-6,-2,-5,1,-4,-4,8,5,8,-10,9,-7,7,3,8,6,2,8,10,-5,6,3,3,-5,-10,-8,-4,3,4,5,-5,5,1,-5,5,-5,9,-4,-4,7,-3,-6,-2,8,6,8,-6,-1,6,-8,-7,-1,-3,-1,1,4,5,-1,-8,2,4,-5,3,-7,-3,-2,-8,-9,6,-9,-9,5,10,10,-4,-1,-4,-9,4,6,1,-8,-10,1,8,-7,10,1,-7,-9,5,9,8,-6,6,-10,1,7,6,1,7,-10,-9,8,-4,-9,6,-8,-8,7,-6,10,-8,1,4,-9,-10,-7,-10,7,3,-4,-5,-3,7,-8,10,2,-4,3,5,-8,-1,-3,1,8,5,-3,4,-5,10,8,1,10,-3,3,5,2,-8,8,5,3,7,2,4,4,1,3,-2,-9,-6,-6,8,6,4,-3,-1,1,-4,9,10,-1,-5,-7,7,-5,-2,3,-8,-4,-4,-1,5,3,5,-7,-7,-10,-3,3,-4,-3,9,4,7,-10,-7,10,-3,1,-6,6,7,6,-4,-9,7,-5,-10,-4,7,1,-6,-7,-3,8,-9,1,-2,-3,7,-5,4,1,-8,-2,-10,10,2,-7,-8,-2,-1,10,-1,-2,-4,3,6,3,-2,3,-6,9,2,4,-3,6,1,-9,-10,-1,7,-4,1,-1,2,4,-6,-7,1,8,-8,-7,-2,-1,7,-9,-9,1,2,-10,3,6,9,10,7,-1,4,-5,-6,3,10,10,-6,-9,1,7,-3,5,-6,-1,5,-7,-2,7,9,-3,-1,10,4,-8,-9,2,7,8,-2,-4,1,-6,-6,-2,3,5,8,1,-7,6,-5,-1,-8,6,6,-9,-3,-1,-9,5,-8,-6,-8,-6,-8,-2,-3,-5,-10,10,-3,4,-3,-7,7,4,10,10,7,-4,10,-7,-7,-3,5,2,2,4,-10,-10,10,-2,2,-2,-8,3,10,-3,4,1,-1,7,-8,1,-1,3,-4,6,7,-4,-2,-4,-9,-7,-5,2,3,9,10,7,10,-5,-7,10,-6,-10,3,1,1,7,-8,1,-10,-3,10,-2,-2,-7,-7,-4,5,-1,7,2,-2,5,-10,1,7,-10,6,1,8,-10,7,6,-7,10,-1,-4,-3,-4,7,5,-1,-3,7,-6,4,-8,9,2,-2,-2,9,7,8,7,7,7,6,-7,-6,6,9,10,9,-6,6,-4,-5,-7,2,-8,7,-9,7,-6,8,-2,7,7,-6,6,2,-7,5,-1,9,8,-5,10,4,5,-9,1,9,-3,2,6,-3,2,-10,-5,-2,-6,-1,-9,2,8,-2,-9,-8,7,4,-5,-10,-5,2,9,4,-3,10,1,-7,-3,-10,2,-5,-8,-4,-7,2,5,5,-7,9,-7,3,1,9,-9,-6,-4,1,3,-7,-2,-4,2,-2,10,1,10,-7,4,-5,-4,-7,4,-2,-5,-9,7,-7,5,-10,-9,-4,6,2,-7,4,-9,-2,9,2,-5,5,4,-3,-9,6,5,-9,-3,-1,-9,4,6,-3,-1,8,-7,10,-3,2,5,2,-10,-10,-3,5,-6,1,8,6,10,5,-7,9,-7,5,-1,-1,7,5,-4,1,-3,1,-8,-1,1,6,-1,1,7,10,-3,10,4,-2,-8,-8,7,2,-4,-2,9,4,-6,-9,-1,1,-10,3,-8,2,-8,-7,-8,8,4,-9,-1,-4,-8,-10,-10,2,-3,3,10,7,4,2,-7,-5,4,3,-7,-10,7,-5,-2,8,1,-7,7,-8,-10,-4,-3,-7,3,2,-6,-6,-4,-2,5,10,-1,5,-10,10,5,10,-3,5,-6,7,-9,7,-1,8,10,1,4,1,1,8,5,4,-5,-5,3,-7,4,-6,4,10,3,-5,-9,2,8,-6,10,-3,8,-7,10,3,-7,-9,-4,-5,10,3,6,1,-7,-9,8,1,-9,-7,2,5,1,-10,-2,-2,-7,-2,-10,9,10,4,1,4,-4,1,2,-7,9,-10,4,-1,-6,-6,-8,4,6,-7,-3,-6,-3,5,2,-2,1,2,-3,10,8,8,2,3,9,-4,-3,9,7,3,10,-2,7,-8,-9,-4,4,-2,-1,6,-6,-2,1,7,9,-1,5,-10,9,7,-8,-2,2,-1,-8,-4,-7,5,2,-8,-2,-10,4,1,9,9,10,2,-5,4,-9,-2,-7,-8,7,-9,-7,-5,-10,2,8,-7,-3,10,-1,3,-5,10,-10,-10,-4,-7,8,2,2,-7,3,7,-4,-4,-1,9,-4,7,-9,2,-8,6,4,-5,-10,-5,8,-1,-10,1,5,-9,-1,2,5,-3,4,-10,7,-5,8,2,-5,-2,9,8,3,1,-6,-6,-9,-6,8,3,1,-4,9,7,-10,-9,-10,3,6,1,-8,-5,-6,4,-8,1,7,6,-3,2,-2,10,-9,7,-8,-7,5,-7,-4,-5,8,-10,1,-4,1,-6,6,4,1,-9,10,-9,-10,6,-5,-4,4,1,2,-10,9,3,-5,1,8,7,5,-3,-2,9,-9,-2,7,-10,9,9,9,-3,8,-10,-3,-2,-5,-5,5,4,-9,9,-10,-4,-9,6,6,2,-3,-8,-1,9,9,-3,-10,-8,-3,-4,6,-9,2,4,-5,9,9,8,-10,-8,-3,-3,7,-1,-8,3,-4,10,-10,-5,1,6,-3,-1,-1,2,-1,-8,-8,-1,5,-2,-8,6,-7,6,-5,9,7,1,-3,4,9,2,-1,6,9,-5,-2,-7,-2,-8,-5,6,-1,10,3,-7,5,2,2,-2,-7,10,-9,-10,-9,-1,9,6,6,3,-1,-2,2,2,1,7,-2,7,3,6,8,-4,-3,-7,8,8,4,6,1,10,-4,10,-3,9,6,5,1,1,2,4,-1,9,-10,1,-5,-5,-7,4,4,7,-9,6,-4,7,-8,-7,-3,4,3,7,6,6,-7,-5,-6,-10,5,-6,-4,6,-3,-3,-1,-10,-2,-2,-8,-2,-1,-3,9,3,-3,4,3,1,7,4,1,-2,-10,-9,-3,3,-10,-10,-2,-7,-1,4,3,1,9,7,9,1,2,-10,-3,-8,9,-1,10,-6,9,6,-5,-3,2,2,-7,-1,-3,5,-3,-8,-10,3,-9,10,9,1,5,-8,-3,-8,-5,3,-1,-5,-1,7,2,-1,9,10,-9,5,6,-1,-6,-3,-8,-9,3,3,7,-7,-10,-1,-10,-10,-3,-5,8,1,-4,5,1,1,7,9,-4,4,-5,-2,5,5,6,-10,9,8,-6,-7,4,10,-2,7,5,9,-4,4,4,1,3,-6,-1,-6,-5,3,-1,-3,3,-10,-1,8,-3,-7,4,-8,-7,7,-9,6,-6,-5,1,-9,-10,-5,-9,6,-5,-8,1,8,-10,-10,10,3,5,2,-8,2,-9,8,-10,-9,-9,6,4,-10,10,5,5,5,-6,8,5,1,-9,-3,5,-3,-10,-6,4,-1,5,-2,4,4,4,5,4,-5,-8,9,10,-8,3,-5,10,-1,1,-9,3,-6,-3,-6,10,-9,8,2,4,-10,-3,-5,-10,10,-2,-8,-10,9,7,2,5,-4,1,-4,-5,3,-9,1,-5,-5,-9,9,7,-5,-5,2,10,4,-3,8,5,5,10,-7,8,1,3,7,9,-4,8,-4,-1,10,1,1,-9,-9,-4,-3,6,-2,-3,-1,-10,7,-1,4,1,6,-4,-5,-5,10,-1,-4,7,10,-4,2,-5,1,10,-10,1,-3,4,8,4,-9,-2,-4,10,9,-4,-9,8,7,-5,-10,-4,1,-1,-5,8,-2,10,7,1,-5,7,-5,2,-4,10,5,-5,10,-7,2,1,-4,-1,1,9,8,10,10,7,10,7,9,-4,-9,4,-6,7,-7,3,4,-4,5,-8,-7,-10,-10,2,9,10,9,-1,-10,5,9,-5,-7,5,-4,-8,8,8,2,-9,8,-1,3,1,10,-9,1,2,-5,-9,-10,2,4,-5,-1,-9,4,-5,-10,8,-2,1,-5,1,-9,-10,9,6,1,-10,-6,3,-9,-4,-7,-10,-3,4,1,-7,8,-9,1,-10,7,-7,1,10,8,-10,10,6,1,9,-5,-6,6,-2,3,1,6,-2,8,8,7,3,-9,1,8,6,8,10,7,3,6,7,-10,10,2,5,7,7,6,-8,9,2,3,-1,4,8,8,3,-6,-7,10,-8,-10,4,4,-2,5,-8,6,9,-3,-3,4,-8,-8,7,-7,-8,1,-2,-2,-5,8,5,5,7,1,-1,-5,-5,6,-2,6,-9,-2,1,-5,2,2,-9,-1,6,-4,9,6,4,-6,4,-8,9,1,-3,8,2,-3,6,-7,8,-1,-3,-10,10,3,8,-4,1,-8,-6,10,-4,-8,6,7,7,2,-5,-6,10,9,-3,6,-2,6,9,-5,8,-7,9,2,-10,-7,-9,-1,6,-7,-3,-3,-7,1,7,-1,9,1,2,3,8,-8,-5,-5,7,10,-7,4,-1,10,-1,3,8,6,-5,-3,-1,1,-10,-8,10,-8,8,9,-9,7,9,-9,-4,-7,6,-2,-1,-4,9,1,-10,6,-2,-9,-5,10,6,1,4,9,-9,8,5,-2,-6,4,3,3,-7,6,-1,-6,-6,9,6,-10,10,-5,-2,9,-10,-5,5,8,-2,-5,-1,-10,-9,-6,6,8,-6,8,9,-7,2,-2,9,10,4,-4,6,1,4,8,5,-5,10,10,-3,-8,8,2,10,9,-7,1,1,-9,-1,-7,7,-7,9,4,-4,-7,-4,10,-4,10,-5,5,4,1,4,-2,-1,-8,6,-10,-6,-3,-9,4,3,5,4,-4,-7,-4,2,-2,4,-1,1,1,2,8,4,-7,4,6,3,6,4,10,5,9,3,-2,-5,4,4,1,3,-6,1,7,-2,3,-3,2,-9,9,-4,8,3,-7,3,-6,7,5,6,9,7,3,-8,-9,-7,7,-9,-9,7,9,5,8,9,-9,7,4,1,-3,-2,6,-3,1,7,6,7,6,3,3,9,-9,-1,10,8,-10,10,-10,-10,4,-10,-3,-8,-8,-3,2,-2,-10,-4,4,8,2,2,8,4,9], dtype = "uint8")#candidate|13758|(2048,)|const|uint8
call_13755 = relay.TupleGetItem(func_6337_call(relay.reshape(var_13756.astype('uint32'), [1, 5, 14]), relay.reshape(var_13757.astype('uint32'), [10, 5, 14]), relay.reshape(const_13758.astype('uint8'), [512, 4]), ), 1)
call_13759 = relay.TupleGetItem(func_6341_call(relay.reshape(var_13756.astype('uint32'), [1, 5, 14]), relay.reshape(var_13757.astype('uint32'), [10, 5, 14]), relay.reshape(const_13758.astype('uint8'), [512, 4]), ), 1)
output = relay.Tuple([call_13753,call_13755,var_13756,var_13757,const_13758,])
output2 = relay.Tuple([call_13754,call_13759,var_13756,var_13757,const_13758,])
func_13776 = relay.Function([var_13756,var_13757,], output)
mod['func_13776'] = func_13776
mod = relay.transform.InferType()(mod)
mutated_mod['func_13776'] = func_13776
mutated_mod = relay.transform.InferType()(mutated_mod)
func_13776_call = mutated_mod.get_global_var('func_13776')
var_13778 = relay.var("var_13778", dtype = "uint32", shape = (70,))#candidate|13778|(70,)|var|uint32
var_13779 = relay.var("var_13779", dtype = "uint32", shape = (700, 1))#candidate|13779|(700, 1)|var|uint32
call_13777 = func_13776_call(var_13778,var_13779,)
output = call_13777
func_13780 = relay.Function([var_13778,var_13779,], output)
mutated_mod['func_13780'] = func_13780
mutated_mod = relay.transform.InferType()(mutated_mod)
var_13797 = relay.var("var_13797", dtype = "float64", shape = (9, 1, 3))#candidate|13797|(9, 1, 3)|var|float64
uop_13798 = relay.cosh(var_13797.astype('float64')) # shape=(9, 1, 3)
output = uop_13798
output2 = uop_13798
func_13802 = relay.Function([var_13797,], output)
mod['func_13802'] = func_13802
mod = relay.transform.InferType()(mod)
mutated_mod['func_13802'] = func_13802
mutated_mod = relay.transform.InferType()(mutated_mod)
var_13803 = relay.var("var_13803", dtype = "float64", shape = (9, 1, 3))#candidate|13803|(9, 1, 3)|var|float64
func_13802_call = mutated_mod.get_global_var('func_13802')
call_13804 = func_13802_call(var_13803)
output = call_13804
func_13805 = relay.Function([var_13803], output)
mutated_mod['func_13805'] = func_13805
mutated_mod = relay.transform.InferType()(mutated_mod)
func_12638_call = mod.get_global_var('func_12638')
func_12640_call = mutated_mod.get_global_var('func_12640')
call_13950 = relay.TupleGetItem(func_12638_call(), 0)
call_13951 = relay.TupleGetItem(func_12640_call(), 0)
output = call_13950
output2 = call_13951
func_13953 = relay.Function([], output)
mod['func_13953'] = func_13953
mod = relay.transform.InferType()(mod)
mutated_mod['func_13953'] = func_13953
mutated_mod = relay.transform.InferType()(mutated_mod)
func_13953_call = mutated_mod.get_global_var('func_13953')
call_13954 = func_13953_call()
output = call_13954
func_13955 = relay.Function([], output)
mutated_mod['func_13955'] = func_13955
mutated_mod = relay.transform.InferType()(mutated_mod)
func_13218_call = mod.get_global_var('func_13218')
func_13219_call = mutated_mod.get_global_var('func_13219')
call_13987 = relay.TupleGetItem(func_13218_call(), 5)
call_13988 = relay.TupleGetItem(func_13219_call(), 5)
func_13107_call = mod.get_global_var('func_13107')
func_13110_call = mutated_mod.get_global_var('func_13110')
const_14001 = relay.const([1.699099,-3.614700,-6.465400,0.352215,-2.562360,7.564359,-3.461779,9.058860,6.249972,-4.481632,2.133470,9.158264,-2.075537,-6.826765,4.552741,-9.829481,-5.051314,-3.591289,-1.461476,-1.087933,2.515710,-5.849972,-4.047909,-9.754928,5.804057,3.409772,-1.157341,1.327880,8.069330,-3.156648,0.762142,6.388255,6.876056,4.177021,3.220347,-9.861931,2.201972,-9.049204,9.852482,1.133452,9.765473,6.084406,-9.541225,-8.611140,2.802820,-3.566638,-3.608839,-5.211294,4.265909,0.840794,0.653800,9.601657,8.763733,3.891899,-3.904049,0.141084,4.517187,0.470752,-3.346197,5.393792,-7.208538,-2.515518,-4.918695,-9.851827,-6.621951,-1.921586,-6.546938,-3.510300,-3.339201,-4.244431,4.746680,-4.670555,-5.534386,-3.624108,-9.727089,-0.031658,5.431473,0.498383,-4.843504,5.883903,8.391225,-9.128392,8.690126,0.748662,-8.220858,4.223829,-2.841494,8.946403,5.726020,4.741783,9.936842,3.447010,-5.040689,-6.179754,-0.801674,-9.472293,-0.529252,3.483857,0.331841,7.687966,-2.157444,5.736215,-1.453896,-2.690262,-0.426745,4.161113,6.581958,-6.991859,0.728576,-5.404940,-8.148760,-6.333178,-5.129221,9.570472,-0.284044,4.444048,0.720896,9.730262,7.403403,0.835465,2.204222,-5.523114,1.822689,1.283741,7.613346,7.062742,-7.059940,-3.378916,5.655888,-4.051848,-3.830199,8.715225,2.520022,-7.969583,-7.846194,-4.337970,-5.437517,-5.941099,-6.202255,2.762001,-7.433402,2.686250,-2.715767,9.889637,6.679329,8.123442,5.950151,5.232420,-2.119192,-4.015274,-0.842006,-7.756798,0.896266,-1.360849,-1.532036,5.153817,-7.712220,3.228864,6.451848,0.817049,5.002232,-5.746778,7.799094,6.540165,9.501650,-4.784898,-5.807958,7.049335,8.675187,4.709876,8.299013,-8.993690,-6.696213,-0.132040,-5.938855,-9.768094,-7.847250,6.005647,1.514219,9.275819,-4.704853,-2.049584,0.106828,-2.032120,9.345252,-5.733226,-8.130707,8.180693,1.519386,-6.274995,5.328959,3.771977,-6.096937,2.500175,8.980400,-1.929649,-7.757134,-4.878328,-4.424854,-8.126946,2.901508,-0.680597,-3.487344,-9.912318,9.238220,6.793049,5.854387,6.407357,5.222506,4.809723,2.621276,-4.579075,-7.361464,9.279610,4.938705,8.095548,4.996567,1.594821,9.857742,0.523583,-6.423305,5.940608,8.749009,3.004846,1.447282,8.780856,1.140918,-2.676457,-7.374794,-5.413699,6.922131,-7.356904,-3.389561,-6.707313,8.479204,-3.882850,0.426643,-8.967203,-2.175339,5.414766,-8.658190,3.576387,3.799154,-7.328499,2.818055,4.737097,-5.929455,5.965032,5.584956,-3.158164,5.409205,7.886303,-4.035846,2.509289,9.505013,-6.561656,9.792312,7.099268,5.420882,1.886010,1.051555,1.072395,-9.018694,-9.523304,6.406546,5.951153,6.786888,3.855204,-2.221150,1.363735,8.982772,3.434884,4.261855,5.853978,-1.057373,7.181519,-8.942642,0.112890,-7.901390,-7.103254,-1.580420,-4.110024,-2.489132,2.532354,4.300148,8.405778,-9.405023,0.630439,8.685895,-7.854988,6.383900,5.857863,5.614629,1.419352,-3.793596,3.563876,0.594296,0.353129,6.499181,-6.648629,7.952846,0.913865,-1.000182,9.902554,-3.192252,-1.206409,9.971526,6.901915,-6.693098,-4.472728,-0.360066,-7.599171,-2.475354,-1.890758,-4.057688,-4.983550,-3.770317,-0.082679,-9.975482,-4.677212,2.238393,8.994668,4.133028,2.889600,3.824840,-7.456259,3.186412,6.705701,-7.077871,4.018102,-8.909585,-7.895432,-5.958017,0.299718,-6.360448,9.477849,-8.617644,6.833124,4.328142,-2.157227,-8.637361,-2.171076,7.890370,4.569288,4.208595,-7.388182,-6.807531,-0.010609,0.443644,-6.670783,-4.383452,-4.195058,-5.076141,-5.808493,-7.678288,-7.826267,0.495084,9.471297,-5.944267,8.043194,6.760142,4.661921,-0.306471,-3.778627,0.098534,-1.346768,-8.188147,0.903947,-3.161662,-6.818560,-5.387559,9.145189,-0.375568,-6.706918,-2.332772,-4.464709,8.790882,9.829763,-5.689328,-1.634775,-1.267149,3.107177,3.642396,0.874916,-1.423382,-7.136970,-7.942167,-9.554299,-2.466364,8.302315,-1.041584,1.827352,4.088730,-7.510452,-0.916611,-3.949523,2.182365,-7.808092,-7.249745,-0.661096,7.969194,5.766615,-8.195585,-7.554186,-2.476189,2.213481,-6.680036,-2.765644,-9.147160,5.212668,2.668957,8.343196,2.914314,2.721350,-4.680296,-7.676885,1.547675,5.153100,4.100309,-6.556228,-0.096728,2.776430,-1.214534,-0.568670,-9.805099,-4.279852,2.457982,-0.535761,8.573943,-1.537475,6.016941,0.662654,-9.463773,-9.144816,9.473382,3.079843,6.285140,-1.888361,3.875811,-0.630753,-4.200886,9.518052,-8.334683,-6.032049,-8.601822,8.314496,2.087202,-9.086736,-2.801432,2.924924,6.962224,0.279583,1.606927,8.899019,-0.210203,-6.208751,-2.377266,8.422577,3.495179,-0.462161,-2.364346,0.227107,-2.984907,-4.173787,6.561274,-5.819446,-1.111070,2.255411,6.906194,-6.376975,-9.644193,-6.757535,5.000764,7.639213,0.679533,-1.708811,-2.063956,6.692020,6.411926,5.161152,-7.484678,7.316809,8.032730,-2.013730,8.956936,-1.350287,-2.220090,-6.730538,-5.536957,-2.248702,7.278916,-2.581553,7.636895,7.767819,6.238757,7.746451,-6.933709,-1.307059,7.168978,0.130661,-3.178040,-7.715267,-7.898358,-0.530446,-7.645030,0.050621,9.339186,3.912929,1.910973,1.339777,5.409154,-3.754754,4.206128,5.922307,-0.855585,-0.651356,3.083870,1.738899,7.498039,-0.197141,-6.993666,-1.119249,8.987250,-0.054356,-4.766069,0.413537,-4.377657,2.344728,6.044973,-3.593220,3.281183,-9.533674,5.864724,8.184221,6.895104,2.705930,8.326709,8.869328,2.011472,3.965391,5.618832,-7.478062,5.293131,0.310006,-3.137391,-7.763386,-1.129562,-9.419905,-5.630652,0.756491,-0.602546,9.789833,-2.485034,-8.440296,9.168702,7.859144,0.883240,-7.845674,6.994979,5.665534,-4.027354,-4.441109,-0.802394,-4.393347,-4.047820,-8.006442,-6.839235,-4.429513,-9.323596,9.315237,-5.902705,-4.034719,-1.253634,-8.457848,-7.804332,1.842818,8.879030,-0.207344,3.755006,-0.956656,-1.595022,-3.698300,5.423263,2.069680,2.976704,3.535905,1.479195,7.204811,-2.222193,1.736865,3.408385,2.365858,-2.296948,-6.369933,8.100316,8.602431,3.285119,-5.127930,-1.034015,-6.466523,-3.874491,-5.417990,5.150887,3.972045,7.705802,8.885848,-3.979119,-6.603492,-5.144536,-6.980296,8.277421,9.277125,1.222405,7.304877,9.419003,0.994840,7.016430,3.298262,-3.609013,8.508348,6.341734,-4.086222,4.525696,0.511111,-8.711071,8.314702,3.474833,-7.576308,8.077798,4.994313,-3.333924,-9.443836,-2.188091,-2.197749,9.608667,-2.920104,-7.242916,-1.467803,6.285816,2.958119,5.094675,-1.086064,6.684505,5.667811,-2.633765,9.998121,9.980423,9.235905,7.663939,-0.019000,2.954588,-7.727448,-5.441259,1.328521,-7.823738,8.443951,-1.635155,-1.608764,-5.969666,-1.184751,-2.903808,9.754454,6.967460,6.116610,8.973978,4.738615,1.176414,-2.907498,-2.591763,6.864395,0.574490,-6.432930,-4.065988,9.264626,-0.199251,-0.248503,-5.658916,3.082709,-0.293012,-4.230146,-3.263470,-0.962440,8.775831,9.048105,-8.498469,-9.518289,9.673972,7.214743,-0.357444,5.459695,-0.822873,7.889813,8.271885,7.226857,-9.087553,4.167107,3.596459,-5.973782,6.365968,5.968617,-4.617118,1.182506,-8.754664,-5.851839,9.552724,-2.608285,5.400863,-6.229545,-7.586273,-9.618949,-0.611612,4.300537,1.219251,-6.079255,-9.638146,-8.028086,-7.088901,-5.781504,6.469291,6.250374,-6.708392,-7.371459,9.459422,9.627788,-5.559269,-8.473256,5.516917,7.362091,5.032921,2.691283,5.381789,8.083146,5.910232,-4.649165,-5.579177,-6.317184,5.653557,-9.975192,5.177234,-7.321094,2.712995,-6.688612,0.672806,5.486536,-8.287406,-2.160556,-1.345911,7.284213,8.753094,-5.123563,6.498521,5.640062,-9.168199,4.461681,3.614636,5.582442,0.841268,0.158101,4.504017,4.879322,-1.682864,7.249157,7.931869,-2.711805,5.132956,-3.982846,3.473183,6.347379,8.354915,-8.589530,1.648561,3.405338,0.627792,7.449142,7.492153,-9.671040,-0.721636,4.009441,-2.296171,-4.319499,-1.435032,-5.931724,-6.670195,0.378246,4.509878,-9.385812,-5.405525,2.474959,9.826442,-2.679082,0.624970,-7.218575,9.084953,-3.842757,1.064878,1.166824,4.209373,-1.133997,5.805881,-6.230958,1.822331,4.822386,-0.421753,6.963893,2.595816,2.861766,0.103785,-4.940486,7.544858,-8.531347,-0.096804,-2.221448,-6.818998,7.824293,4.197420,-4.690976,2.782168,-6.675460,-3.881057,3.301892,9.177532,-2.840365,-2.171346,8.972952,4.361624,-3.568753,1.779544,-4.622187,6.995088,-0.674956,9.551940,8.775792,-7.071142,-9.735866,-9.082887,7.393827,-7.897971,-8.440006,-7.304994,-4.505304,9.770916,5.422163,-6.000297,-4.877697,-4.548689,-8.748028,5.302044,-7.365788,5.918025,-1.504891,-4.661971,6.223350,-3.888805,9.620290,-5.448432,-5.459160,-7.784487,-5.632556,6.645660,2.389494,7.753346,0.766535,8.746487,9.447314,8.989148,-4.618981,1.899782,-1.405074,8.273323,-9.163382,-2.909907,-8.308783,9.406652,9.922504,1.655412,-9.872664,-2.931119,-2.872430,4.966415,-4.228753,2.545141,-9.950745,-1.003307,-7.420025,-9.391776,1.480912,-0.342345,5.685334,1.788062,-1.387739,3.048296,6.962367,6.568334,-9.218070,0.492531,9.553750,7.200837,9.073689,-8.254716,-7.725284,9.036028,5.528810,9.091602,2.322648,6.067938,6.248348,-3.403182,-2.205094,-0.015474,-3.436094,2.456617,3.591143,3.592545,6.336170,-2.184740,-0.412146,9.775455,5.370482,-1.880678,1.582505,7.737611,3.084421,-8.596091,4.298162,-8.051132,-6.959825,6.056239,-8.708315,0.665192,-6.253170,8.565611,5.711159,7.409072,4.706998,8.785837,7.788329,-9.067190,-5.856614,5.040226,3.976233,8.299700,9.748912,0.237096,8.709252,8.121602,0.577409,-5.424890,-5.158687,3.683018,3.456702,-2.545279,4.728531,3.174273,3.304195,8.249121,-1.976246,3.590279,5.807698,-1.737218,8.981223,2.748076,-5.577641,1.704642,8.893686,7.638343,7.158057,1.649648,-7.407925,-0.505591,6.073735,-2.833019,-3.577645,-5.829488,8.925383,-5.937233,-2.624173,1.494055,9.974125,5.842810,5.238804,9.631758,9.380701,-6.285602,-0.407628,1.493284,-7.533912,0.554668,4.905935,0.732511,-5.814071,6.920352,3.910086,-7.994127,6.259161,8.267515,-4.131307,3.198521,3.098611,7.705096,-7.997732,-2.398979,-0.804708,8.767996,3.923189,-3.716643,-3.296370,-5.509755,-0.850441,-7.439499,6.840801,6.047344,5.829210,9.799268,-9.841929,-9.988686,5.794119,6.542757,-4.531082,-8.663338,7.538724,-4.389996,-6.114397,1.312583,4.194760,8.027354,5.435873,-2.272532,2.374776,-8.640330,-4.701949,2.809384,4.034483,6.491011,4.207809,1.915825,0.491461,5.493386,-6.260118,-0.216542,-4.084473,-2.298584,-9.183372,-5.437401,-4.565822,0.658999,9.024316,6.374993,-8.463642,7.812560,-4.859419,-6.640015,-5.274866,9.220834,7.420237,-3.534036,9.769266,2.253445,0.402235,-6.428398,-9.317498,-4.165383,-5.332621,-7.256588,-3.037673,-3.411709,-8.209598,-7.633179,-7.695009,-5.302620,-4.424674,-6.299442,1.587684,7.654375,6.542208,2.245542,-0.259194,-4.967284,9.872972,7.675318,-2.518943,-9.649341,-2.703144,0.060501,-4.523441,-5.938103,-3.826431,9.519214,2.540822,-1.950187,-7.255819,-8.250836,8.843312,5.252192,-2.548988,-8.922194,-0.442944,5.931893,-2.656012,-4.401112,-7.387618,6.144223,5.710494,3.564190,4.782271,9.432820,6.434459,-6.015421,-3.276748,3.871634,-3.462516,7.038533,-4.229704,-0.248303,1.248558,6.978467,9.683201,-4.331597,5.658205,0.323579,6.260346,-4.915455,7.217409,1.618343,-5.444863,-5.984429,3.348577,-2.396950,-0.347267,-8.228507,6.746196,-7.338351,-2.037296,4.066541,-1.908057,-8.660776,3.991638,-7.661605,-2.558530,6.132032,-9.000175,7.025684,3.356314,7.333579,-5.060252,-2.006943,9.117474,0.076905,7.902886,-1.415375,0.188512,-9.937450,5.912276,8.742394,-1.955059,8.799829,-0.065456,-1.398511,-6.551348,-0.390650,5.850965,-3.708833,4.478290,-6.404146,-4.984792,-8.745902,-3.936577,-8.847815,1.977681,3.873013,-2.333063,-0.714052,2.555339,7.940644,-0.124882,3.883170,-1.243009,-7.421549,7.105502,-3.494187,3.625445,0.472880,7.861282,-5.751887,-7.081996,8.991073,-0.829526,4.337558,-0.621281,8.948819,-9.637849,9.054583,-4.666184,-2.442568,-4.170774,8.948677,3.457184,8.552088,-5.702109,8.392226,7.594945,-7.025017,-0.025730,-1.625146,-6.199890,8.972164,-8.109313,5.091534,5.619964,-0.531010,-8.614161,8.831649,-7.288059,7.525366,-2.978339,7.671874,6.343081,2.358619,-7.658330,-3.003609,2.240197,2.970706,-9.672576,-6.284280,8.890284,-0.741893,-9.540511,1.665637,-6.343528,-4.107411,-0.470021,3.049849,2.308595,1.280057,-2.879598,-7.272735,-9.739072,6.419639,-6.577697,-7.546609,-9.873999,9.661223,-0.531945,2.670541,1.336336,-6.895025,-4.946877,1.863851,-8.910730,9.255348,6.449019,1.422913,1.691560,-0.242025,-1.077085,9.443059,1.944232,-0.982914,-0.593267,5.328568,6.321707,1.084559,2.341877,4.554053,9.305587,-0.824303,-4.278061,-4.518520,-1.094060,4.649633,1.223062,1.826831,2.827431,2.400646,2.074081,-3.696097,-4.303366,-1.261155,-0.131407,7.117300,-6.510450,-6.323318,1.195201,1.474394,-1.430552,4.333062,8.965523,-5.810442,-1.326792,-0.546402,-0.655038,-0.757369,-1.968715,-9.755583,-2.920222,6.605433,9.522165,7.161582,-8.850749,-6.254528,6.340672,6.363476,-7.226542,6.081947,4.268611,4.501077,-7.173476,-0.485438,-3.536882,-3.299519,-8.012175,-4.738610,1.248676,8.993186,-9.640535,-0.944507,0.801187,-0.794509,-7.692731,-0.223458,-4.808212,3.992209,0.533532,9.118886,7.689082,-1.488496,2.605309,9.256280,-3.004284,2.758678,2.754618,-3.433239,7.110421,-3.385262,-5.789377,7.589003,-1.268077,-0.373404,-9.882282,-3.088540,0.759529,8.963023,0.425369,9.439177,0.319281,-0.932190,1.452871,5.167885,0.256808,-5.289304,-4.166313,-7.510606,-3.187577,-6.739655,6.467956,-4.225944,2.504405,2.157320,9.561320,-0.507359,6.603772,8.057846,9.068384,1.538814,-0.796609,2.440279,8.351579,-3.790919,-8.876720,-8.418210,9.176104,-4.405345,5.400380,0.689912,-5.829955,5.221125,-3.457452,-0.616564,-3.657724,-4.547235,1.267066,1.694929,-2.634326,1.067759,7.074818,-6.820562,-6.024829,9.447088,-9.043811,-3.377725,7.365534,7.890643,-3.625532,3.544302,6.974684,-7.282079,8.205588,-2.409362,1.100950,-8.871747,1.370516,2.432342,1.999339,6.254419,9.266774,7.947316,-0.516294,-6.088579,-3.155597,2.504851,6.650698,7.628388,6.399180,-4.381647,7.286972,6.041102,2.116194,-6.593876,-3.213513,6.432872,-5.847750,-5.584482,2.188004,6.972735,-0.039912,9.243787,-6.495941,5.324625,-5.406088,-4.032700,-3.680640,9.869682,-2.966184,1.002070,4.442724,-4.167477,8.114796,-6.553874,4.239116,-7.403767,-7.695077,-2.892558,-8.772759,9.228556,2.958508,-0.336100,7.182650,-8.910000,-7.011254,-2.997087,-5.233507,7.352821,8.970426,-0.542479,9.856599,6.377108,-0.130915,5.088875,0.723895,-9.226060,-8.696710,-0.866462,-4.952010,-2.191837,-1.728356,-8.262466,8.685962,-9.037404,-9.476763,-1.879868,-4.710081,5.502126,2.838805,5.004634,5.357247,8.256682,4.215430,-6.357690,-3.386437,-1.969271,4.151913,7.195832,-8.271244,-7.589813,-0.444561,-0.802836,-7.272864,-3.728818,-2.730926,-1.868503,4.088811,-3.942364,4.469687,-0.831213,7.322475,4.213440,4.322373,9.349349,-6.100051,-6.419421,-9.652415,6.997782,8.623060,-8.727422,-0.196978,5.121615,7.803683,-9.353169,-3.457499,-9.840146,4.143141,9.740159,9.249619,-9.424885,-5.393345,-2.306131,6.941142,7.345833,6.270435,8.737979,-5.493065,6.705307,-0.817821,-2.973780,-8.459910,-4.525396,-9.006284,1.260533,-2.915392,-4.494049,-4.513234,-6.728380,-4.346873,-3.935975,1.798436,3.821695,6.401139,5.934957,-8.129686,-2.981614,1.247239,-1.497488,-7.564100,1.683918,1.085004,8.735828,-4.316085,-9.443132,0.412581,5.706103,-3.746393,-8.885176,5.907608,2.338630,-6.262996,1.432923,-8.044992,3.633050,9.650806,3.914593,-6.531038,-8.495813,-9.078547,-6.265165,-4.445976,4.776005,-3.506292,-4.901578,0.808048,-9.311285,1.245162,7.985066,3.773051,6.653104,3.351312,-5.743196,6.514422,6.640697,1.154508,-2.246360,8.878723,-7.550831,1.003609,0.772102,-4.526167,-9.246304,4.774758,7.618473,5.745184,7.161820,4.788969,-5.610039,5.786180,3.340712,2.392778,-2.606283,1.352539,8.469900,8.307076,2.199651,-8.672937,5.426621,-7.184062,-3.030827,3.951067,-0.537828,9.105469,-1.678488,-8.768608,0.979463,9.216053,-2.349433,-0.160533,5.690488,8.610933,8.061680,3.128494,5.202609,7.271820,6.454283,-6.790499,-6.322941,-5.143468,-4.190097,-3.180512,6.404061,7.956667,-8.562533,1.670656,8.531730,-7.147192,-2.924699,8.602134,4.550161,1.010497,-5.213995,1.747464,-8.381470,1.229151,-6.873028,-5.391875,3.636687,-0.015206,-6.580062,2.045441,-0.287965,-4.420470,6.133736,-4.144990,6.149588,1.295557,6.184415,-0.385026,6.356440,-7.945400,9.061493,7.263792,-4.952757,-5.874359,8.090867,-3.103065,5.607301,-5.881759,5.135982,-6.222173,-4.873414,-1.238235,-1.801987,3.077367,-6.379326,3.298716,0.341850,-2.738722,-8.741116,-8.878495,-2.054824,7.672600,3.914638,6.861897,7.577169,3.113045], dtype = "float64")#candidate|14001|(1680,)|const|float64
const_14002 = relay.const([-5.349085,2.133198,9.500622,-0.480969,5.761652,-0.098835,1.938856,4.055617,-7.523566,-5.680729,-6.245661,-4.300413,6.609518,-7.248610,8.772572,-5.366290,-7.927423,-2.773975,-9.765431,-1.217226,9.525261,-4.334680,5.150584,-4.287456,-1.902070,-8.553442,-1.451636,-9.002354,-7.674217,3.715904,8.348620,-6.442116,4.529991,6.597328,9.968597,-3.502812,-3.999535,-2.054859,-2.884944,5.092750,6.035106,-5.792984,-4.361116,8.779130,5.352109,-8.048739,-2.514537,-9.778149,7.045205,8.663029,-3.242776,6.422548,-7.637590,-5.473693,0.038677,-1.034759,9.131958,-2.088111,0.555176,6.311877,-8.137568,6.249116,-2.722411,5.134035,7.739694,-9.301920,-2.856781,9.578033,0.033976,6.637540,7.119302,0.132603,-0.255803,3.721827,5.751784,-3.421874,-5.851140,-8.246977,-8.415766,1.453240,3.459528,4.882007,3.519244,-3.755533,-8.629892,8.876960,0.045262,4.476926,8.716913,-4.512105,8.164409,-6.278668,-9.722365,-5.592708,-1.284739,2.875978,4.583153,0.819580,2.992263,-6.067934,-2.817297,7.553620,-3.677864,7.859585,6.107279,7.715659,4.404606,7.311996,-3.432295,-1.809370,4.136953,-9.154456,-1.157924,9.287687,-5.582408,6.903780,-5.127972,-8.203844,6.354692,-8.746491,1.737397,7.274653,4.257375,2.688388,-2.135342,5.483671,0.423702,6.456244,0.200309,8.737497,-0.407554,-9.938806,5.049981,3.392287,9.128824,-6.924574,3.132221,8.154228,-5.746688,4.852205,-0.545872,-6.767277,-3.756721,5.282966], dtype = "float32")#candidate|14002|(144,)|const|float32
call_14000 = relay.TupleGetItem(func_13107_call(relay.reshape(const_14001.astype('float64'), [420, 4]), relay.reshape(const_14002.astype('float32'), [8, 18]), ), 1)
call_14003 = relay.TupleGetItem(func_13110_call(relay.reshape(const_14001.astype('float64'), [420, 4]), relay.reshape(const_14002.astype('float32'), [8, 18]), ), 1)
func_6923_call = mod.get_global_var('func_6923')
func_6927_call = mutated_mod.get_global_var('func_6927')
var_14010 = relay.var("var_14010", dtype = "float32", shape = (195,))#candidate|14010|(195,)|var|float32
var_14011 = relay.var("var_14011", dtype = "uint64", shape = ())#candidate|14011|()|var|uint64
var_14012 = relay.var("var_14012", dtype = "uint64", shape = (225,))#candidate|14012|(225,)|var|uint64
call_14009 = relay.TupleGetItem(func_6923_call(relay.reshape(var_14010.astype('float32'), [13, 15, 1]), relay.reshape(var_14011.astype('uint64'), []), relay.reshape(var_14012.astype('uint64'), [25, 9]), ), 0)
call_14013 = relay.TupleGetItem(func_6927_call(relay.reshape(var_14010.astype('float32'), [13, 15, 1]), relay.reshape(var_14011.astype('uint64'), []), relay.reshape(var_14012.astype('uint64'), [25, 9]), ), 0)
output = relay.Tuple([call_13987,call_14000,const_14001,const_14002,call_14009,var_14010,var_14011,var_14012,])
output2 = relay.Tuple([call_13988,call_14003,const_14001,const_14002,call_14013,var_14010,var_14011,var_14012,])
func_14016 = relay.Function([var_14010,var_14011,var_14012,], output)
mod['func_14016'] = func_14016
mod = relay.transform.InferType()(mod)
var_14017 = relay.var("var_14017", dtype = "float32", shape = (195,))#candidate|14017|(195,)|var|float32
var_14018 = relay.var("var_14018", dtype = "uint64", shape = ())#candidate|14018|()|var|uint64
var_14019 = relay.var("var_14019", dtype = "uint64", shape = (225,))#candidate|14019|(225,)|var|uint64
output = func_14016(var_14017,var_14018,var_14019,)
func_14020 = relay.Function([var_14017,var_14018,var_14019,], output)
mutated_mod['func_14020'] = func_14020
mutated_mod = relay.transform.InferType()(mutated_mod)
func_11553_call = mod.get_global_var('func_11553')
func_11554_call = mutated_mod.get_global_var('func_11554')
call_14086 = relay.TupleGetItem(func_11553_call(), 0)
call_14087 = relay.TupleGetItem(func_11554_call(), 0)
output = call_14086
output2 = call_14087
func_14088 = relay.Function([], output)
mod['func_14088'] = func_14088
mod = relay.transform.InferType()(mod)
mutated_mod['func_14088'] = func_14088
mutated_mod = relay.transform.InferType()(mutated_mod)
func_14088_call = mutated_mod.get_global_var('func_14088')
call_14089 = func_14088_call()
output = call_14089
func_14090 = relay.Function([], output)
mutated_mod['func_14090'] = func_14090
mutated_mod = relay.transform.InferType()(mutated_mod)
func_11553_call = mod.get_global_var('func_11553')
func_11554_call = mutated_mod.get_global_var('func_11554')
call_14144 = relay.TupleGetItem(func_11553_call(), 0)
call_14145 = relay.TupleGetItem(func_11554_call(), 0)
func_13339_call = mod.get_global_var('func_13339')
func_13341_call = mutated_mod.get_global_var('func_13341')
call_14148 = relay.TupleGetItem(func_13339_call(), 3)
call_14149 = relay.TupleGetItem(func_13341_call(), 3)
output = relay.Tuple([call_14144,call_14148,])
output2 = relay.Tuple([call_14145,call_14149,])
func_14150 = relay.Function([], output)
mod['func_14150'] = func_14150
mod = relay.transform.InferType()(mod)
mutated_mod['func_14150'] = func_14150
mutated_mod = relay.transform.InferType()(mutated_mod)
func_14150_call = mutated_mod.get_global_var('func_14150')
call_14151 = func_14150_call()
output = call_14151
func_14152 = relay.Function([], output)
mutated_mod['func_14152'] = func_14152
mutated_mod = relay.transform.InferType()(mutated_mod)
func_13478_call = mod.get_global_var('func_13478')
func_13479_call = mutated_mod.get_global_var('func_13479')
call_14201 = relay.TupleGetItem(func_13478_call(), 4)
call_14202 = relay.TupleGetItem(func_13479_call(), 4)
func_11553_call = mod.get_global_var('func_11553')
func_11554_call = mutated_mod.get_global_var('func_11554')
call_14206 = relay.TupleGetItem(func_11553_call(), 0)
call_14207 = relay.TupleGetItem(func_11554_call(), 0)
output = relay.Tuple([call_14201,call_14206,])
output2 = relay.Tuple([call_14202,call_14207,])
func_14212 = relay.Function([], output)
mod['func_14212'] = func_14212
mod = relay.transform.InferType()(mod)
output = func_14212()
func_14213 = relay.Function([], output)
mutated_mod['func_14213'] = func_14213
mutated_mod = relay.transform.InferType()(mutated_mod)
func_14150_call = mod.get_global_var('func_14150')
func_14152_call = mutated_mod.get_global_var('func_14152')
call_14225 = relay.TupleGetItem(func_14150_call(), 1)
call_14226 = relay.TupleGetItem(func_14152_call(), 1)
func_7812_call = mod.get_global_var('func_7812')
func_7814_call = mutated_mod.get_global_var('func_7814')
var_14235 = relay.var("var_14235", dtype = "uint8", shape = (96,))#candidate|14235|(96,)|var|uint8
call_14234 = relay.TupleGetItem(func_7812_call(relay.reshape(var_14235.astype('uint8'), [1, 8, 12])), 0)
call_14236 = relay.TupleGetItem(func_7814_call(relay.reshape(var_14235.astype('uint8'), [1, 8, 12])), 0)
func_14212_call = mod.get_global_var('func_14212')
func_14213_call = mutated_mod.get_global_var('func_14213')
call_14243 = relay.TupleGetItem(func_14212_call(), 1)
call_14244 = relay.TupleGetItem(func_14213_call(), 1)
bop_14250 = relay.right_shift(call_14243.astype('int64'), var_14235.astype('int64')) # shape=(8, 13, 96)
bop_14253 = relay.right_shift(call_14244.astype('int64'), var_14235.astype('int64')) # shape=(8, 13, 96)
var_14254 = relay.var("var_14254", dtype = "int64", shape = (8, 13, 96))#candidate|14254|(8, 13, 96)|var|int64
bop_14255 = relay.add(bop_14250.astype('int8'), relay.reshape(var_14254.astype('int8'), relay.shape_of(bop_14250))) # shape=(8, 13, 96)
bop_14258 = relay.add(bop_14253.astype('int8'), relay.reshape(var_14254.astype('int8'), relay.shape_of(bop_14253))) # shape=(8, 13, 96)
output = relay.Tuple([call_14225,call_14234,bop_14255,])
output2 = relay.Tuple([call_14226,call_14236,bop_14258,])
func_14263 = relay.Function([var_14235,var_14254,], output)
mod['func_14263'] = func_14263
mod = relay.transform.InferType()(mod)
var_14264 = relay.var("var_14264", dtype = "uint8", shape = (96,))#candidate|14264|(96,)|var|uint8
var_14265 = relay.var("var_14265", dtype = "int64", shape = (8, 13, 96))#candidate|14265|(8, 13, 96)|var|int64
output = func_14263(var_14264,var_14265,)
func_14266 = relay.Function([var_14264,var_14265,], output)
mutated_mod['func_14266'] = func_14266
mutated_mod = relay.transform.InferType()(mutated_mod)
func_13642_call = mod.get_global_var('func_13642')
func_13644_call = mutated_mod.get_global_var('func_13644')
call_14268 = relay.TupleGetItem(func_13642_call(), 0)
call_14269 = relay.TupleGetItem(func_13644_call(), 0)
output = call_14268
output2 = call_14269
func_14289 = relay.Function([], output)
mod['func_14289'] = func_14289
mod = relay.transform.InferType()(mod)
output = func_14289()
func_14290 = relay.Function([], output)
mutated_mod['func_14290'] = func_14290
mutated_mod = relay.transform.InferType()(mutated_mod)
func_12638_call = mod.get_global_var('func_12638')
func_12640_call = mutated_mod.get_global_var('func_12640')
call_14304 = relay.TupleGetItem(func_12638_call(), 0)
call_14305 = relay.TupleGetItem(func_12640_call(), 0)
output = relay.Tuple([call_14304,])
output2 = relay.Tuple([call_14305,])
func_14317 = relay.Function([], output)
mod['func_14317'] = func_14317
mod = relay.transform.InferType()(mod)
output = func_14317()
func_14318 = relay.Function([], output)
mutated_mod['func_14318'] = func_14318
mutated_mod = relay.transform.InferType()(mutated_mod)
func_14289_call = mod.get_global_var('func_14289')
func_14290_call = mutated_mod.get_global_var('func_14290')
call_14360 = func_14289_call()
call_14361 = func_14289_call()
output = call_14360
output2 = call_14361
func_14369 = relay.Function([], output)
mod['func_14369'] = func_14369
mod = relay.transform.InferType()(mod)
output = func_14369()
func_14370 = relay.Function([], output)
mutated_mod['func_14370'] = func_14370
mutated_mod = relay.transform.InferType()(mutated_mod)
func_14369_call = mod.get_global_var('func_14369')
func_14370_call = mutated_mod.get_global_var('func_14370')
call_14395 = func_14369_call()
call_14396 = func_14369_call()
func_13140_call = mod.get_global_var('func_13140')
func_13143_call = mutated_mod.get_global_var('func_13143')
const_14401 = relay.const([3,-7,2,7,-1,-6,8,-7,5,2,4,-9,2,-7,2,-7,-5,9,2,-9,-3,-5,8,-1,7,-5,9,-5,9,-9,2,-5,10,8,-4,-4,-2,7,1,5,1,1,5,8,-8,5,5,-8,-8,9,-3,-6,-10,-7,10,10,-5,9,9,-5,6,-8,2,6,-10,1,-7,-10,-9,-9,10,-2,10,-4,1,-7,-1,-8,9,-2,-10,-4,-9,6,-1,9,-4,-6,-2,-7,-10,-10,7,4,3,-7,-1,9,-5,-8,-2,8,7,2,6,10,2,-7,-7,7,10,-2,6,9,-8,8,5,6,1,9,9,-3,1,-2,-4,-10,-4,3,6,1,-10,-4,8,7,9,-7,9,-9,-2,1,-1,-8,5,-5,7,5,-9,-4,-8,-6,-9,5,-3,-8,-5,-8,-4,-1,2,-8,-6,-6,-1,-1,1,7,-8,-8,7,5,9,-10,4,9,-1,-2,-1,1,-9,4,10,10,4,-1,7,4,-9,-6,10,-6,-6,8,-9,3,3,-9,-7,-3,8,3,-7,-1,5,-9,5,-6,6,-10,2,4,-9,8,-2,8,-4,7,-9,-8,-6,-9,-4,1,6,-6,3,6,3,-7,-7,-8,7,10,2,10,7,-8,-2,-3,-10,-9,-9,4,-10,-10,7,6,1,-2,8,-2,1,5,1,-4,-7,4,9,-9,-1,6,4,4,1,-2,-7,-3,-8,-4,8,-10,4,-10,-5,3,-9,6,2,3,-5,2,1,2,6,6,7,-7,-3,-5,-10,-4,7,4,-9,5,-2,-8,2,10,-8,-2,-6,8,-9,-8,1,-8,10,-10,-1,-3,-9,7,10,1,-6,5,-3,-1,-5,-1,-1,-7,-3,9,9,8,-4,-1,-2,4,-7,-10,-1,-1,10,-5,1,1,8,-9,-4,6,1,2,-2,-1,-5,-9,4,5,2,-4,-5,-8,-6,9,-3,10,2,7,-8,5,1,-10,-4,8,6,-10,8,-3,4,-6,8,-2,8,6,-2,-7,-3,-8,3,-2,2,1,1,-4,-7,3,-6,6,8,10,-1,3,-6,-2,10,10,-7,2,7,4,-8,-7,-3,10,5,1,9,-3,-8,-5,-10,-10,8,-6,10,8,6,-2,-10,-2,4,-10,-1,1,-7,-8,3,-5,-2,7,10,9,3,-7,-6,8,4,5,3,7,-2,7,4,8,3,-7,-3,9,8,10,6,-5,6,-8,-6,10,-9,-7,1,1,3,6,-4,5,-10,-7,-1,-9,-2,7,-1,8,-6,-4,-10,-10,5,-2,-1,-3,10,-7,2,-1,2,-4,6,4,-9,-8,5,4,4,-9,3,-3,-1,5,6,-8,5,-3,6,-5,-6,-3,-1,-9,5,9,1,10,-4,-5,-2,-1,7,-9,1,-7,9,8,-9,6,-6,-1,-8,-8,7,-5,8,-7,1,-7,4,-1,-6,-4,5,-8,-6,7,1,6,-9,-8,-10,4,-4,6,-7,-10,4,-7,-5,-2,-3,5,-4,-1,-4,2,5,-7,-6,-7,-8,5,1,10,6,-7,1,-2,-4,10,3,4,-7,-5,2,6,-8,-1,-3,-7,5,8,5,-10,5,7,-1,4,-9,-3,-2,10,-1,1,4,-3,-1,4,2,-4,-6,-5,-1,-7,1,-3,10,-4,-6,5,4,-10,10,2,-2,1,9,-4,-6,-3,2,9,-1,3,10,9,7,-1,-7,-2,-1,-4,-8,1,3,2,-9,-7,6,8,-7,3,10,2,-9,6,-7,10,-1,3,6,9,-8,6,6,1,-2,-9,8,-10,6,-9,-6,-2,2,1,1,-1,-6,-3,2,-6,-10,-7,-6,7,2,-9,-3,-7,6,-2,10,8,-2,-8,6,-9,9,-5,2,1,6,-4,10,-5,-1,-5,-2,-7,-3,9,1,6,-3,-6,-2,10,-4,-8,-8,-3,2,2,-1,8,-5,5,-2,-5,3,9,8,-7,8,9,10,6,9,6,8,6,-9,-9,-6,-8,-6,8,8,8,-1,-3,8,3,-7,9,-2,-9,10,4,2,4,-8,-4,8,-4,9,-1,7,6,2,-1,2,5,-8,5,10,-10,4,7,-5,2,-8,-1,-7,-9,4,-5,-10,6,1,7,-5,-10,-10,2,7,9,8,-10,-9,-6,-1,-7,5,-8,-7,8,4,2,4,-9,-7,-8,-10,-10,9,4,-8,10,6,-10,5,-4,7,-2,9,3,2,3,-2,-5,-10,3,-9,3,-9,8,-2,-2,8,9,-7,-5,4,5,2,8,-6,-2,-2,-10,-2,6,1,-5,3,-10,6,3,3,9,7,-9,-8,10,10,4,8,-7,9,-2,6,5,7,-4,-6,-8,-10,-6,10,10,-5,3,4,4,10,8,-6,-7,-2,3,-6,9,-10,6,-2,-9,1,-10,-1,-2,10,6,4,-1,6,2,-7,-10,9,-6,-4,-6,8,-4,10,-8,6,8,-9,6,-5,9,-1,-8,7,-1,-8,10,5,-4,9,-7,8,-5,-4,-2,9,-10,10,-3,1,-2,3,6,-5,2,2,9,3,-7,-4,8,10,-6,-6,-7,-4,-6,10,-4,-10,-1,4,-4,-5,-7,-8,4,3,-8,10,-3,-6,-3,1,-3,2,5,3,6,-8,7,-6,-6,3,-7,1,1,-9,6,-10,2,1,9,-5,-10,-5,-3,-1,1,4,9,8,-3,-2,8,5,5,7,10,6,9,10,-6,10,5,5,-9,3,1,-10,9,-1,3,-8,-2,-4,8,10,3,1,-5,-3,1,-6,-3,-3,4,-9,-2,10,1,-4,8,-5,5,10,-4,4,-8,10,-7,-6,-9,-7,-1,-6,1,-3,3,9,-6,7,1,-7,-2,-10,4,-9,10,5,-3,4,-10,-4,-5,-8,-1,2,6,2,-8,6,-8,-4,-1,8,9,-9,-8,-9,-5,5,6,9,-7,-10,3,5,-1,10,10,-7,9,-8,-8,-4,-8,10,-6,-5,-1,-8,-3,8,3,-7,5,4,1,-4,2,3,-7,-5,-5,6,7,4,8,-5,9,8,7,9,3,-8,-1,7,7,3,-2,2,4,3,-8,-6,2,1,5,9,5,-5,2,8,-3,3,-1,-7,1,-8,-8,-5,8,2,-8,-3,10,-3,9,-4,-2,10,-2,-8,-8,-9,3,-9,-10,6,3,4,7,-8,7,-9,-8,2,-5,-2,-7,9,7,-2,-8,8,10,-5,-7,3,4,5,-10,-4,5,8,-1,3,5,-6,8,4,-5,-4,3,-8,-9,3,-8,-4,4,-7,7,10,7,-6,-1,-10,-1,-9,-4,-5,10,2,-4,-2,-6,-1,9,6,-1,-9,-3,9,7,-2,4,2,5,1,10,-10,-2,-9,6,7,8,-10,-6,6,-6,2,6,-4,-10,2,10,-6,5,-3,3,-10,5,1,-6,5,-3,-4,5,-2,4,-4,-8,-9,8,-5,4,-1,3,2,-10,5,-8,-4,6,-7,-10,9,3,-2,-1,-3,2,6,7,9,7,-1,-1,-5,1,-9,4,10,7,-8,8,-5,-5,-8,-1,10,-10,-10,-5,10,-8,8,9,9,1,4,9,2,10,-6,8,8,6,1,-4,9,1,6,-7,-6,10,-10,9,3,-3,-10,-5,-8,-8,-2,3,-6,3,6,5,-10,2,-6,-9,10,-5,2,-1,-1,-3,-3,8,-1,-3,1,-9,-5,-1,1,9,2,4,-6,-8,5,-1,6,-10,-2,-5,3,6,-6,8,-6,1,-2,6,1,6,3,-6,9,-9,-1,4,8,-9,-6,4,-5,-2,9,7,-1,-7,2,-5,-9,2,7,-3,7,-3,-10,-6,1,6,-7,-9,-7,3,10,-10,2,-1,9,8,-8,10,-8,-5,-6,9,5,4,-6,9,6,-7,3,-9,-1,-10,-8,7,9,-4,-4,-10,3,-8,10,-7,9,5,1,4,-1,-1,7,4,1,-2,-1,1,-6,-2,-6,-3,2,-7,-1,5,7,10,3,1,2,-8,-6,6,7,10,-9,-10,-10,2,-10,-3,4,-3,7,-10,9,-3,-6,-9,-1,8,-10,8,9,-1,-10,8,-8,-8,8,8,-7,-2,-2,-6,10,2,6,1,-2,6,7,-6,6,-3,-4,-2,2,4,5,-8,5,4,-9,-9,-7,5,-9,-10,4,1,-4,9,-7,1,-2,-4,8,10,-4,8,-6,-5,3,1,-1,-5,5,3,4,3,-5,-3,-8,-10,-4,2,-5,-6,-4,-6,-1,-2,-3,-10,2,-5,2,-2,2,1,-4,7,-3,6,10,-4,2,-9,4,-6,-5,-5,-6,7,1,-6,-2,4,4,3,-1,6,5,-2,9,7,-6,10,1,2,7,7,-10,5,1,9,6,-9,3,2,-9,5,-1,-9,-2,4,-10,-9,2,-4,3,-6,9,2,7,5,2,9,-4,-6,1,6,-1,-2,10,-7,-7,1,-8,-9,6,-9,1,2,10,2,5,3,-4,10,-10,6,-10,5,-10,3,8,2,1,7,-1,-3,8,4,-2,7,-1,-9,-9,-9,9,-5,-5,8,-3,9,3,-10,-9,-6,-1,1,5,-5,4,-5,7,10,1,7,-3,7,10,9,-4,-8,-8,-8,-9,-9,-6,-4,6,-4,1,2,10,10,-9,-7,5,-9,-4,-4,-8,4,9,7,-3,4,-2,8,8,-2,-10,-1,4,-6,6,9,-4,10,-2,-9,-7,9,-1,-3,-8,5,6,10,7,8,7,1,-2,-5,9,-1,6,8,-8,6,8,5,7,-3,1,-10,-1,-2,-2,-9,-8,7,-10,-3,10,8,9,3,7,4,7,10,7,-3,6,9,-10,-10,-5,-1,-2,-4,-2,-1,-3,9,-1,10,-1,-6,-2,-3,-5,-5,7,5,6,-2,-4,-7,8,-9,-7,6,1,-4,-10,7,9,-4,-9,8,8,-2,-3,-3,7,1,-10,-1,-10,4,-4,-3,-3,1,-8,7,-7,2,10,-10,-7,10,-7,-8,9,-6,5,6,-8,9,-4,-6,5,-10,1,-1,-2,-6,5,-5,-8,-7,-4,-10,-10,10,5,-4,4,-5,-5,-3,-9,-5,5,-9,2,-7,-7,-9,-9,-10,5,-7,9,3,-10,10,-9,2,-4,8,-4,-4,-3,-9,-4,-9,4,-9,7,6,2,5,-10,5,7,-4,10,6,-3,-8,-6,9,10,-5,-1,4,-7,-3,7,3,-3,9,-6,-7,-1,-7,9,-9,1,-5,4,-8,-10,10,-10,1,1,-5,4,8,-4,-4,-9,1,6,-4,7,1,-4,-5,7,6,-6,7,-2,7,7,10,-2,-8,10,9,4,5,3,2,7,-10,-8,3,1,9,-9,4,1,2,-3,-9,2,-7,-5,7,-5,-5,1,7,7,-9,-5,10,6,9,4,8,-3,1,2,-2,-2,-3,6,-6,-8,-1,-2,10,4,9,7,-4,-2,2,4,4,2,10,9,-1,4,1,5,-6,-3,9,-4,-4,-9,-4,-10,-8,8,-2,-7,-6,-7,9,-10,-2,-1,5,-5,4,5,8,6,10,7,1,-7,7,3,5,-4,-6,-10,-2,10,-3,-4,2,9,4,-6,-2,-3,4,-8,1,5,-6,-10,2,-4,7,-5,10,3,-2,2,-9,-4,2,3,3,-1,-3,-7,5,9,1,-2,-8,8,3,3,-4,-6,-10,-8,-7,1,-3,6,-10,-9,8,4,6,3,2,1,4,2,8,-8,2,6,8,3,-8,-10,4,2,8,9,-3,5,2,3,1,7,-1,-9,7,-6,4,3,10,10,-1,7,3,-3,-3,-5,8,-6,-4,-7,-6,-8,-6,8,4,-5,9,9,6,-7,8,1,-3,-8,-1,8,7,8,6,-1,-4,-7,8,4,-10,3,2,-8,1,2,9,9,-7,-9,-3,-5,-9,-3,-10,1,8,2,5,5,-5,10,-6,-10,-6,-5,-3,9,5,-9,8,9,-1,6,-8,-4,5,-7,-2,3,9,-10,-8,-4,-10,-10,-10,-4,9,-9,-8,-9,8,3,4,10,4,8,9,-7,-5,-7,7,8,-9,2,-1,-2,9,-8,3,-8,8,-1,8,-5,-8,-9,-2,-10,3,10,-2,-2,-8,-4,10,8,-8,4,8,10,-10,8,6,-4,-9,-5,-5,-2,9,3,-9,-9,1,-6,3,-2,7,-6,9,3,2,-1,-7,1,-10,-7,-7,-10,10,-5,2,-7,-9,-1,4,-6,-2,-5,-1,-6,3,2,2,10,7,-6,-5,7,9,-4,-4,9,-9,-6,3,1,-7,-7,2,2,5,8,2,-5,7,-2,-10,-8,5,9,-10,-5,-3,6,10,-7,-6,4,-4,9,-8,2,-3,-9,8,6,10,5,-4,1,10,8,4,-6,-2,-10,7,8,-4,-6,-7,-2,-6,10,-9,3,-10,-5,-6,5,-5,6,-6,-2,1,7,-2,5,-6,-7,6,2,2,2,-10,4,1,9,-6,2,-9,-5,5,-9,3,-4,6,8,-7,8,7,-5,3,8,7,5,8,-8,-10,-2,3,-5,-5,-8,3,-10,-7,-1,-2,-10,-10,6,-6,8,1,10,-7,-4,-8,-5,-8,1,1,-8,2,4,4,7,4,6,5,-9,3,-7,8,1,-6,-3,-6,-1,-10,8,5,-4,1,4,7,2,-9,-2,10,2,8,4,8,-2,-2,-2,6,-8,5,-6,-7,4,-5,2,-10,3,2,1,7,-8,-4,8,6,10,9,-6,2,2,-4,5,9,-9,-7,2,-4,3,-3,-9,-8,-10,4,-3,6,4,-2,-4,-8,3,-5,-9,5,6,-2,7,-5,9,5,-6,9,-2,10,1,9,3,-9,3,-4,-4,-8,-8,-9,2,9,8,-7,-9,4,-5,4,-9,10,-6,4,1,-10,7,-6,-7,7,2,-6,3,1,-5,7,7,-9,-4,-3,-7,5,-4,2,-5,7,-5,10,-4,-7,5,6,-3,-3,8,-5,-8,-8,1,-6,-9,6,7,-3,5,2,3,-2,-3,-7,-10,5,-3,10,4,-2,10,-8,-4,-8,10,10,5,4,-4,8,-3,4,7,10,10,4,-10,7,-3,2,2,-9,-2,5,-1,-2,8,-10,9,-6,-2,1,5,3,-10,3,6,8,-4,6,8,2,3,10,-4,1,1,7,9,-7,-6,10,4,-10,3,-8,3,8,1,-7,6,-10,-9,4,6,6,4,4,8,-8,7,3,-3,-5,8,-1,10,-3,8,-9,-9,-6,5,-10,-1,3,4,9,8,4,-8,10,6,-10,-1,9,-8,-4,5,5,4,-6,-5,-8,3,-8,-8,-10,4,-1,1,-6,6,-1,5,7,-5,2,9,4,1,-2,2,5,4,-10,7,5,5,-2,-1,4,1,-7,-5,2,-2,-6,6,10,-9,-6,-6,10,6,-4,3,6,-3,6,-3,3,-3,-2,2,1,-4,-8,8,2,1,5,-5,2,4,-3,6,-4,4,-10,-2,8,9,-6,5,5,3,4,10,5,3,1,-5,10,5,-8,2,2,-3,8,-6,7,-2,-9,-6,6,-2,9,-6,-9,-1,-7,-2,-2,-9,4,-5,7,2,2,2,-9,7,-2,-9,1,7,-10,-8,3,-7,5,9,-1,-9,1,1,6,10,-8,-10,-6,8,5,10,-5,4,-9,3,-6,-3,4,8,1,-9,-6,7,-5,10,4,7,-7,1,-5,-7,9,-9,3,4,-7,2,-1,3,-5,5,5,1,4,-9,10,-2,-6,-1,-2,5,-7,1,6,-5,9,2,-5,-5,9,-10,1,-8,-6,-8,-4,-6,-9,-1,4,-8,10,-6,-7,4,6,4,5,-6,1,-9,-8,7,3,2,8,10,-2,-10,9,4,7,3,-10,-5,5,-7,9,10,-6,9,4,9,-6,-2,5,10,-4,6,-6,-6,-2,-3,10,5,10,7,3,-10,9,6,8,7,-1,-7,-3,7,7,-8,-7,-1,7,1,-8,-1,-2,10,-2,-1,10,-1,10,-8,-2,-4,-7,6,-4,4,-7,-8,1,-1,5,-8,-2,7,9,-1,-2,-7,-9,-5,-1,5,-5,9,1,8,1,-2,-5,5,6,4,-10,-9,6,-1,2,-7,1,2,5,9,-6,-1,1,6,1,-5,10,1,7,-5,10,-5,-9,4,-7,-9,5,5,-5,3,-8,10,-2,6,-3,-8,4,-7,-2,-6,-5,3,7,7,-6,2,1,-4,1,10,-4,10,-2,2,7,5,4,-3,4,5,-2,-4,6,-6,9,-2,6,10,8,-4,-9,-8,-6,4,-3,-2,3,-10,5,8,5,6,4,9,-7,9,-3,8,8,-1,-2,-9,-8,-6,8,8,5,-3,1,3,7,3,8,7,-7,8,1,4,8,-4,-5,-8,-6,9,4,-5,-1,9,4,-7,6,10,-5,-7,-6,9,-3,2,-9,9,3,2,-4,5,-7,-9,-8,-10,-5,5,-8,-5,-1,-2,-7,4,5,-6,-7,7,1,-8,-6,1,-5,-5,3,6,6,-6,1,3,-4,-6,-9,-6,10,-1,-2,8,-3,2,10,9,8,-8,-5,-6,1,-1,-5,-3,3,-9,-10,-2,-7,-8,2,4,-5,8,5,-9,6,-9,9,5,-9,4,-3,-2,-3,-9,8,-5,-6,-2,-7,-9,1,5,1,-1,-6,10,3,10,-2,9,4,2,-6,-3,5,7,10,-7,2,3,-3,7,-5,-2,-10,9,-6,6,-5,-9,2,8,8,5,1,9,-1,2,5,-2,-8,1,-2,-9,5,-9,4,9,1,3,1,10,10,7,9,-10,-2,2,-7,3,7,-1,9,4,-3,6,8,-6,-9,4,2,-4,7,10,-6,-8,-7,3,-8,-10,3,4,3,2,3,-9,-3,9,10,8,4,-9,4,9,-1,4,2,-7,-8,-6,-8,5,-1,-3,-6,6,-6,1,9,3,-6,5,-5,-4,5,3,6,-5,4,7,-9,-8,-10,-7,8,2,-5,1,-1,-2,-4,10,-4,-6,-4,-6,7,-10,-4,7,-6,-5,6,-2,10,3,-8,-3,-7,1,-1,-4,5,-5,-10,-3,1,-9,4,6,-3,8,-2,-6,-10,-2,-5,7,-2,-1,5,1,1,-7,-1,-9,-1,-8,7,-4,2,-8,-2,-9,7,9,3,2,-9,-9,1,5,-4,-5,-8,10,4,-8,-2,1,6,-5,-9,3,5,8,-9,-8,-5,-5,-1,-4,-4,-1,1,8,-1,8,-2,-10,2,-5,-3,3,-5,3,-5,10,1,-8,5,-10,10,8,7,-9,8,-10,-6,-10,-3,-8,10,-10,9,-3,-5,-3,-9,7,1,-8,9,-1,-3,7,-4,6,2,6,5,8,-2,-5,1,10,-7,2,-4,-2,-4,5,-1,-1,-1,4,6,-6,-2,1,4,-7,8,8,2,1,8,-1,8,-3,1,-5,-1,5,-5,-9,6,9,-3,7,8,1,-5,8,-6,-4,-10,4,-1,7,7,-4,-9,-8,1,-10,-3,-8,5,2,7,-8,7,10,-3,6,2,3,-5,4,6,7,-4,8,1,1,-7,8,-3,2,7,7,7,1,-3,-8,-10,8,3,3,7,-3,5,8,2,-5,7,-8,-2,-6,3,-3,2,7,9,-9,-8,-3,-8,2,-3,10,-8,8,-7,-6,10,-5,1,8,-6,6,-3,-6,2,-10,-6,8,-9,6,1,-8,9,5,-9,-10,2,-8,5,-6,3,-3,-6,-3,-7,1,-10,1,4,9,-9,-8,-5,7,-4,10,-9,-6,-5,-8,-7,2,-9,7,7,9,-7,8,-5,5,-8,-7,-7,1,-4,-4,-9,-10,-7,4,-7,1,-9,-7,6,6,-6,-2,-9,-2,-4,-6,3,1,-5,8,-7,-5,2,5,-5,-3,-5,3,-9,-7,-1,6,-8,-8,2,-6,-6,7,4,-5,4,-9,2,3,7,6,4,6,9,-7,-9,-1,-4,3,2,-9,6,5,10,-1,1,-8,9,7,7,10,4,3,4,6,-3,-2,2,9,9,-2,-9,-3,4,8,-5,9,2,7,-9,-1,9,3,3,7,6,-2,10,5,7,-5,-4,2,-6,1,6,-8,-7,8,5,-4,5,-7,-1,-8,8,3,-8,7,5,-1,-1,-6,2,-10,9,9,10,-8,-10,1,10,9,8,3,-5,-2,3,-7,-2,-3,3,-5,-10,3,-9,-10,-8,-8,5,8,6,-8,-10,6,-6,-2,-3,-9,10,-4,6,-8,3,9,-5,-9,10,2,6,3,6,-8,-2,3,1,-1,-3,9,2,3,-8,-10,4,10,9,10,7,-6,7,1,1,4,10,10,-3,3,9,-2,7,-1,-3,4,2,-1,1,8,-5,-6,6,-6,10,4,3,10,-8,-6,5,3,10,-6,-7,3,-7,-6,4,3,1,5,1,-6,8,10,-2,1,-8,-2,-3,8,3,-2,7,-5,1,4,5,3,-4,9,9,-7,-8,3,-6,-9,6,-8,-7,1,2,3,7,-1,10,-6,-9,-5,2,8,8,6,1,7,10,-7,5,-8,-6,3,10,-5,2,5,10,3,3,2,-7,1,6,8,5,-4,-8,7,6,-4,-3,-4,4,-1,-7,10,-1,-9,-6,8,4,4,-9,-9,-4,5,4,2,-9,5,-7,9,-4,7,-7,3,7,5,-10,-2,7,-4,1,9,1,5,6,6,-4,2,-7,5,4,-9,4,9,-3,2,-10,-3,4,-7,-1,2,5,7,3,-6,-3,1,10,-1,-4,-6,-6,3,8,2,-4,-5,10,-3,-7,10,-5,9,3,-6,-5,-3,-5,10,-8,-3,9,-3,3,2,4,9,-2,-5,-8,-4,-5,-3,3,4,-8,-6,-6,-5,-5,-8,-6,-10,-5,3,-6,-8,4,-3,-7,-8,3,-9,3,7,-9,-8,-2,-5,-3,-4,-5,-2,-4,-6,2,-3,8,-4,-7,8,4,3,6,4,-6,10,1,-2,7,-5,2,3,-3,10,8,6,-3,9,-6,-1,-3,6,3,10,-8,10,-6,-9,-2,9,-4,-3,3,-8,-6,5,-10,-5,1,-6,2,-6,-8,5,3,-9,8,-5,3,4,-4,9,10,-8,9,7,-9,8,-9,9,-9,-8,-10,10,8,-5,2,6,-9,-2,-8,10,3,7,2,-5,-4,-8,6,10,-1,-4,-10,-5,-7,-5,-8,-4,-2,-3,7,-5,-1,-5,-10,-10,-1,-8,-7,8,-9,-10,-10,8,-7,6,10,-5,4,-7,7,9,-4,-9,-9,-6,1,-7,-2,5,-7,3,4,-8,8,-5,7,-2,-3,3,-9,-2,6,-3,4,8,-9,-9,-7,-1,6,-1,-4,-5,6,-8,-8,-5,-10,1,-6,-7,9,8,-7,-2,-9,-6,-6,9,-9,-6,7,-1,10,1,2,1,-6,-7,9,5,-4,10,-2,-1,6,-9,-9,-10,-4,-6,-10,6,-7,-8,6,-6,-4,8,5,-10,9,4,2,8,8,2,3,6,3,-10,-7,9,5,1,9,3,-3,-7,-4,10,-10,-9,-10,-5,-9,4,-3,7,-10,-10,-10,-8,-1,-7,-9,6,-9,2,-10,-6,4,-2,5,-3,-10,6,7,2,-9,4,5,-9,4,6,10,2,-2,-1,8,1,-8,-7,-3,2,7,1,-7,-6,4,7,-2,10,-5,-10,-4,10,-10,-8,5,4,-7,2,7,-4,-10,5,-2,-7,-5,-10,1,-2,7,3,-9,4,2,-9,-5,-10,-4,8,-1,2,5,-4,4,-5,-7,4,7,-1,5,-10,2,7,6,-1,4,2,7,-6,-3,3,1,-5,7,-7,-5,-7,8,3,3,8,7,-7,-7,5,-3,-1,8,-3,3,1,9,-7,2,-9,-1,-2,-1,3,9,-8,-6,7,7,1,1,8,-8,7,4,-4,-6,-3,3,-3,-4,7,1,4,-5,8,4,8,-2,1,2,10,2,-5,1,-9,10,-7,-1,3,-5,-4,8,3,6,5,-1,-5,2,10,-7,-10,-7,2,-7,6,5,-1,1,-2,-7,-4,-5,1,-9,1,-2,-5,-10,-8,1,9,5,8,5,4,8,-2,9,10,-6,5,4,6,-8,-10,-10,2,2,-3,9,-9,-7,10,6,-3,-1,-10,-10,-8,3,-5,1,-10,7,-2,-1,5,-3,4,-3,10,7,10,6,-6,-9,4,10,5,-9,6,-7,10,6,-7,-2,4,7,-9,-3,4,7,2,-5,-7,-1,6,3,-5,-1,1,-9,5,10,-1,-8,-5,-4,-2,-3,3,1,-3,5,-7,-2,10,-3,9,10,6,-4,2,-7,9,3,-5,1,-1,6,5,-6,9,-1,-1,-8,-10,8,-2,-8,7,3,8,-2,2,-8,-5,-3,2,-3,-6,3,-5,8,8,-8,-7,-10,7,-7,9,-6,-10,9,5,-6,-6,5,-2,9,-8,6,2,-2,8,-7,-5,-9,2,-6,3,7,2,1,4,-1,-8,8,5,-8,1,7,-8,8,8,6,5,9,5,9,-9,-2,1,9,-1,-6,2,-6,-4,10,-8,1,10,-1,1,4,2,9,5,-9,6,-9,-1,-1,-1,4,9,-5,9,-6,5,10,-4,-3,10,-7,9,7,3,4,-10,5,6,-10,3,-3,6,10,-6,-10,4,3,5,3,7,-4,-6,8,-7,6,6,2,5,-3,4,-7,3,4,-9,6,4,5,-8,-9,5,7,-7,5,-1,-2,4,-3,-1,-4,4,8,-1,6,-10,-4,-2,-8,2,-10,-4,7,-6,-4,7,-7,2,-9,-10,2,-3,5,-7,-6,-6,1,-3,-9,-9,3,-3,-9,8,7,4,-8,-6,-4,-5,4,-9,1,-1,8,-5,6,-3,-2,4,1,-9,-4,-9,7,-1,5,-4,-9,-9,7,-9,-2,9,-5,5,10,2,-6,4,-7,6,4,-8,-7,9,-1,-10,-3,8,1,-4,5,6,-9,9,-7,5,5,4,4,-7,-4,-9,3,4,9,6,4,-7,6,8,-9,5,-8,-5,6,9,-6,-6,-4,-6,8,8,5,4,1,5,7,-5,2,-9,-3,-8,-5,-9,-5,-3,-6,7,-8,3,5,3,-9,-6,10,9,4,-2,2,-1,4,-9,6,-4,-9,4,-6,-5,-5,7,-8,9,-4,4,-10,-2,-8,-7,-9,9,-7,-9,9,-9,6,-10,-4,6,-9,3,-5,6,-6,-8,-3,2,-9,2,-6,4,8,-6,-4,10,5,3,-6,3,-9,8,7,1,-2,8,5,-2,8,5,10,-5,9,-5,6,-9,-9,8,-9,-6,3,1,-3,-3,8,-3,5,5,6,9,10,-9,-4,-6,8,-6,-5,-9,7,-9,1,-5,-2,8,-4,3,4,-2,-9,-3,-2,7,3,6,-9,-7,1,-9,-6,-2,-6,2,-7,10,5,-4,-4,6,9,9,9,10,-10,4,6,4,-2,-3,5,6,9,-8,-1,10,6,-7,5,-6,6,1,-5,5,-5,6,-2,-9,2,-3,4,2,3,7,-7,-3,3,7,2,5,10,7,-4,6,6,9,-3,9,8,-3,9,8,-3,7,-6,-5,4,2,-8,1,8,-1,-1,-8,-6,-6,1,4,10,9,4,6,-6,5,7,-8,-8,-5,-1,7,-5,2,-8,8,-10,6,3,-1,10,-4,1,-1,3,7,-10,3,1,9,-6,7,-6,-9,5,-9,-7,10,-3,9,9,-1,-4,2,4,3,10,3,5,4,-5,4,4,-1,7,6,-10,4,-3,-7,10,6,-2,-6,2,-8,5,-10,8,-7,-5,-2,1,-7,6,3,6,6,8,-6,3,1,7,-6,-5,3,-7,-5,3,-5,7,-5,-7,10,4,-10,-9,-3,-2,-3,-2,-9,1,9,7,3,2,-7,-10,8,3,8,-9,-8,10,10,-8,-4,6,-3,7,-8,-5,-2,2,-10,8,-6,-1,-7,-6,4,9,-10,-3,-7,10,-1,-10,1,-3,-6,-9,7,7,-10,3,4,3,-9,9,-7,1,4,-3,5,6,-6,-4,-2,6,-3,-7,3,2,-4,-7,-10,9,2,-10,9,-10,10,7,-4,-5,2,-5,10,8,-8,7,3,-3,9,4,9,10,-10,1,-9,-3,6,7,-5,2,-10,-1,-4,-2,8,-10,1,-4,6,-5,2,8,-5,-6,2,4,-6,6,7,-2,3,-2,1,-3,1,-3,-7,-3,-6,5,-8,9,-1,-3,-1,5,-8,-8,3,7,1,-9,9,-5,2,4,-6,-1,7,7,-2,2,9,8,-3,-6,-2,-7,8,7,-9,-7,3,-1,-3,-8,1,4,2,-2,6,1,4,3,7,9,3,2,5,6,-2,-4,8,2,1,-7,5,-8,-6,-10,-1,3,-6,-9,8,8,4,2,-1,4,-2,10,-8,4,-9,1,5,3,-6,-2,-2,4,-2,7,-3,-5,1,10,-4,-7,3,1,9,9,10,2,2,7,-2,-7,-7,-8,8,10,-6,-2,-3,7,1,-1,-7,-1,7,-3,4,4,4,10,1,3,8,-6,-2,-5,7,2,-9,3,4,-4,7,10,1,-5,-1,-2,6,2,-9,1,-2,-1,7,-6,-1,-9,-8,2,-10,-2,5,-2,1,9,10,7,-4,-3,-4,1,-1,6,9,1,-2,2,6,-10,-5,-7,8,9,4,-2,2,4,6,-5,5,-6,-6,8,-2,10,-5,4,-3,-7,4,-3,-3,-10,-6,-5,10,2,10,9,-6,9,8,-7,6,-5,-3,7,-5,6,3,-4,5,-8,-6,8,7,-5,3,-5,-8,-9,9,1,-4,-9,10,-9,-9,-1,7,-9,7,9,-6,8,5,6,-1,1,-6,2,4,-1,10,10,-9,2,-10,5,7,3,1,7,-6,7,7,-8,-3,-3,-10,10,1,7,-3,9,-6,-2,-4,8,7,2,7,4,10,4,-2,9,-6,-5,9,-9,-8,3,-9,-2,8,-10,-5,-8,-4,4,5,-7,10,-2,-8,5,1,6,8,-6,-3,5,3,-4,6,-10,1,-3,-1,-9,5,3,-1,8,8,-10,-2,-8,10,1,9,-8,1,1,-6,9,2,7,-10,5,-9,-8,9,6,-9,5,10,-8,5,-1,10,2,1,-7,4,-10,6,6,5,5,10,-3,3,9,3,-9,-1,6,10,-4,5,9,-3,9,8,-3,-5,-9,10,-6,-10,-5,-6,3,-4,2,3,3,8,-4,-7,7,3,-10,-3,-5,9,-2,-1,-3,-3,6,-10,-2,2,-7,4,9,-9,2,5,-3,-9,1,1,5,-1,-2,10,9,1,-1,9,4,-10,10,-6,-2,-9,7,7,5,-2,8,4,-6,-5,-2,6,4,4,1,-8,-7,6,-6,5,-2,2,-1,-9,-1,-1,-3,-9,-4,1,-5,10,6,3,10,5,4,-4,-4,-1,9,6,-2,-9,9,4,10,3,2,10,-5,4,2,6,2,1,-9,5,5,8,7,6,-7,-3,-7,9,-8,3,2,8,-5,9,-9,7,-10,5,-6,3,2,-2,-1,-2,7,-10,5,5,8,-7,-8,-10,9,4,-10,1,-6,-2,-4,-5,2,-10,-5,10,-10,-2,-1,-7,-10,6,-9,-2,9,-4,-10,4,4,2,2,5,-9,8,-1,-8,5,1,-10,3,-10,-4,3,4,-3,-9,8,-7,-2,5,-10,-4,-7,-3,1,8,-10,-2,2,4,-2,-2,-8,-7,4,4,5,10,-5,2,-8,5,-5,-5,-3,-2,-4,7,-1,-4,6,-8,-6,-6,-3,4,1,1,6,-10,-3,-4,-5,10,-5,3,-10,4,-3,-6,-9,6,-10,3,-3,5,-5,4,9,-10,-6,-6,5,-4,-8,-3,-1,-6,-7,4,-2,-5,-7,-9,-3,-1,-1,9,6,-4,-6,-3,7,-7,-8,6,10,-7,2,-5,2,-8,-4,-8,-10,5,9,-2,-7,5,-2,5,4,-10,7,-3,-3,3,6,10,-4,-4,4,1,7,-7,7,-10,4,-7,-7,-10,-9,-10,4,3,-4,3,4,-9,2,-9,-8,9,-1,2,7,10,5,-3,9,-9,4,3,7,-1,10,9,-1,9,-7,9,3,1,1,-8,-1,-7,10,5,4,8,5,1,8,-7,-10,-2,-6,-2,-9,9,-9,5,6,9,-5,1,4,6,-1,8,7,-4,-3,4,-9,1,9,9,7,3,-5,-2,6,3,-8,9,-1,2,1,7,9,10,-8,-1,-9,7,-1,-2,-8,6,-6,-5,8,-4,-3,1,-2,10,-3,7,7,3,4,7,-2,7,-6,8,10,-4,-4,-7,-7,-6,-7,-2,6,4,-3,-1,-4,5,-3,-5,-5,-7,6,-5,10,5,4,-4,3,4,9,-2,-6,-2,-8,-3,7,-1,-4,6,-8,1,-8,-6,-5,8,-8,8,7,-2,-8,-9,-4,6,7,-2,-6,-8,-10,-5,7,-10,4,-8,7,-8,-6,7,-5,10,8,-6,-4,9,3,10,9,-4,7,6,3,-8,8,8,2,-5,9,5,10,-9,7,-4,1,-1,-9,4,-10,-10,10,2,-6,-2,-2,10,2,6,1,8,-7,2,-8,9,-9,-6,9,-2,-7,-1,3,1,-1,7,-7,5,5,-2,-4,-9,-2,-3,-3,7,1,-8,-9,2,-8,-3,-3,8,6,1,3,-2,-6,-5,1,-10,-9,-7,-9,-10,7,1,4,7,3,9,-9,10,-7,4,-8,10,-5,6,7,3,1,-5,-7,-6,-2,6,-7,7,-3,4,7,7,-3,8,-10,8,-8,10,-7,8,1,-3,10,4,2,3,2,-1,-4,8,3,9,9,9,-6,-7,10,-7,9,4,-7,-1,8,7,5,7,-9,1,6,4,-6,-10,9,9,-9,1,1,-9,6,-10,-9,-8,5,-6,9,6,-1,6,-4,-9,-9,10,-2,8,3,8,-8,10,-6,-6,-6,-2,9,-6,2,-7,-8,10,6,-8,7,2,-4,1,-1,-5,-9,4,5,-2,-9,-8,6,7,-6,-4,2,-10,-10,-6,-8,-10,8,-5,-7,-9,-6,1,5,-7,-4,-5,6,-3,-6,1,-10,3,6,2,-4,8,-10,-3,9,-7,10,-7,9,7,9,-1,9,-8,9,6,4,7,-7,2,-10,-6,3,9,5,7,-3,6,10,5,-7,5,9,7,4,-9,-8,-7,2,3,1,3,6,-6,-5,-6,-3,4,-4,-5,10,-3,3,-1,5,2,2,9,-7,4,7,-4,10,-2,9,-5,5,9,-7,1,-4,7,10,-4,5,1,-6,2,-1,4,-4,-8,4,-7,8,2,-2,-8,9,9,7,-5,5,3,-2,7,-6,4,-2,3,-8,-4,8,-3,3,10,-4,-5,2,4,-6,1,5,4,-8,-1,-1,-7,6,-5,-3,-9,4,7,-3,-2,-3,-3,-10,-8,-1,7,4,3,5,7,7,-7,9,8,5,2,-5,-6,1,5,3,-8,-5,6,-10,-8,-8,-9,6,-2,-7,9,-1,-7,9,6,2,-8,6,-7,-9,-5,-9,-6,2,-8,-2,1,1,6,1,-1,-10,2,-5,4,3,10,6,10,2,8,-6,7,-8,7,-7,-2,1,2,-2,-9,6,8,-5,-1,-6,-3,8,2,-3,5,9,-8,9,6,8,6,-7,7,5,-9,5,-5,-1,10,6,-5,-1,5,7,-3,9,9,6,-5,2,-3,-7,-1,-5,-2,6,-6,-4,-9,4,-4,-1,-8,6,7,-1,-6,-9,7,-10,5,-8,-5,3,1,-3,-2,-7,1,-8,-3,9,7,8,1,3,-6,-6,3,-2,-9,-9,-1,-5,-10,-3,2,-2,-1,3,10,8,6,4,3,4,-3,5,9,-8,-3,-4,4,-7,8,-9,-7,4,-10,5,-6,-7,1,-3,-2,-3,-2,3,3,-3,10,-9,6,2,-4,1,-3,-7,8,7,2,8,-7,2,-9,-2,6,5,7,-9,-2,10,-7,-4,-8,-7,-10,-6,6,-8,-10,3,6,-7,-7,3,-7,9,-2,10,-3,-10,-2,2,4,-2,-4,10,6,2,-6,-5,10,6,6,-9,3,-1,-8,4,7,-6,-2,9,-6,1,6,4,1,-5,5,5,-7,-4,3,7,-3,-1,9,-3,10,8,2,-1,3,-2,-4,-6,-7,-6,-8,10,-5,-6,-10,-9,5,-6,1,-1,-5,-3,-2,-10,1,9,10,-1,-10,-9,-6,-1,-8,-7,4,1,3,-10,5,5,-7,-5,6,10,-3,-6,-9,-1,4,6,-5,9,3,4,9,-1,-4,3,-4,-5,2,-7,10,10,5,-2,-2,-10,-8,10,6,4,-10,1,10,1,9,4,8,-1,-7,3,4,4,-2,9,-8,7,10,1,5,-3,-2,4,-1,2,10,9,3,-5,-10,10,-7,-7,8,-6,-10,7,-6,-3,-10,6,2,-3,3,-7,-10,2,-7,-4,-4,8,-9,-9,8,3,9,-7,7,6,-5,2,2,-5,-10,6,9,-2,-10,3,-5,7,6,-4,3,-2,3,-8,-9,-5,-9,-4,6,-7,9,8,6,7,-1,-6,1,5,-3,8,-5,10,-6,2,-2,-10,-9,-6,-4,-9,-4,-9,3,8,8,-10,2,9,-6,-2,10,-3,10,3,2,7,7,2,2,9,-7,5,1,-9,-4,7,-3,-4,10,5,1,8,9,-9,-10,-1,7,8,9,-5,8,-9,-4,4,-10,8,2,-1,-7,-2,-7,6,8,-10,-3,1,8,-4,3,-8,8,6,1,-1,-8,-5,-5,-8,5,1,4,-1,4,-7,-7,9,9,5,5,-8,8,-5,-4,-7,3,-9,4,3,7,-4,-3,10,-10,-3,3,-5,5,-6,-5,8,-5,-8,6,6,1,10,2,-7,-6,-7,-4,-2,2,-5,-2,-8,-9,7,-8,-1,-2,-3,2,7,2,7,-6,-2,8,7,2,9,2,7,9,-8,-8,5,5,-9,6,3,-6,10,6,-4,-3,-8,-8,-6,10,8,-9,1,7,-10,-6,4,-10,4,4,-2,10,5,-4,5,-6,-3,5,8,-2,6,-3,-9,-7,-9,-10,1,1,-8,-6,9,7,9,-8,6,7,-9,2,-1,1,-3,3,1,-7,-10,-5,7,5,-5,-2,2,-3,-8,-6,-8,-3,8,-5,9,-1,7,10,-7,9,-5,-3,10,7,-4,1,2,3,9,2,-9,6,8,-9,10,-8,-9,-5,10,-9,9,-6,-3,2,6,9,-6,1,-5,-2,6,-4,-3,-4,-1,5,4,-10,10,-10,-7,-2,-7,10,1,7,-1,2,7,7,10,7,-3,4,10,-2,4,1,-4,1,2,5,-10,7,5,-7,-6,-1,-3,6,9,-2,9,4,4,-1,7,10,-4,-5,3,-6,-6,1,1,5,-3,-7,-10,-8,-8,1,-8,3,9,1,-1,10,3,9,7,8,-10,-4,5,7,4,1,8,-2,-1,9,-1,9,10,-7,-1,9,-9,-4,-5,-8,-8,1,-2,-4,-7,4,10,1,3,-7,5,10,8,-8,4,2,-4,9,-5,8,-4,9,8,-5,7,9,-7,6,2,8,10,9,2,-2,1,-10,-4,10,-10,5,9,1,-3,-1,1,-1,1,8,8,-4,-8,3,-5,6,-9,3,4,-6,-1,2,-8,6,10,7,-2,6,-7,-3,-5,-10,-9,4,6,-2,9,-10,4,-8,-10,4,-8,-1,9,-9,-3,1,-1,7,5,6,-3,10,-4,4,5,-3,6,2,-8,-2,-10,-2,7,10,-9,7,7,-1,-6,-5,3,-8,4,6,10,2,2,3,-7,5,-3,10,-8,1,6,-8,3,-7,5,8,5,7,6,-9,5,9,-4,8,-9,-9,4,-5,-5,-2,8,-8,-10,10,-5,10,-3,-7,-9,-3,3,-5,-1,-4,5,-9,-5,-7,9,2,-8,-3,-1,-10,-7,-1,4,7,-8,-4,-6,7,-7,6,-2,2,-1,3,-7,-4,-5,-3,1,-8,3,-4,-4,-10,-7,-9,-7,1,7,-9,6,-7,8,-1,3,10,9,5,-6,6,-3,2,-7,-7,-6,9,2,2,7,1,-1,8,-6,5,9,-7,8,2,4,-10,-6,2,-4,-9,8,-4,10,10,4,10,-9,-4,8,-2,5,-3,-2,10,7,-10,-9,5,4,-9,-3,10,8,10,-1,-6,-8,-9,4,-8,-1,8,-1,-1,-8,-5,-9,-4,-10,3,-1,-10,-10,1,10,-6,6,-1,7,-5,-4,8,5,2,-10,-7,-6,2,-5,9,-10,6,-9,4,3,-10,8,-2,-10,10,-9,-1,-5,-10,-3,6,4,-9,3,8,3,-4,-6,7,9,7,4,5,-10,10,6,9,1,4,3,1,1,-10,10,-4,5,-8,-1,10,10,9,9,-5,-7,-6,2,-8,-3,-10,8,-5,-9,-5,8,4,-7,-3,10,-9,-8,7,4,-10,6,3,6,-10,-1,-5,-10,8,-1,-4,-10,6,-1,5,-10,4,5,-3,-5,5,-6,8,9,-3,-6,1,-1,-1,2,8,1,10,-3,-8,-6,8,-5,-7,-10,-5,7,-2,3,-3,-1,8,6,1,-3,-8,4,-10,-10,-5,7,-1,-6,-7,8,3,-10,3,-9,5,-3,-10,9,-8,-8,1,3,-2,-5,-7,8,4,10,-5,-2,-10,3,4,9,1,4,-3,-6,-5,5,-3,1,2,-5,-10,-7,-1,-10,10,-6,-7,5,-9,-6,-1,8,5,-3,1,-3,-4,1,9,-10,-3,2,-1,1,-9,6,-1,5,-6,-2,-8,-7,-3,8,4,-3,-6,-6,-5,9,-7,3,1,-3,-10,-1,-9,-1,-1,-6,-8,-1,-5,3,5,3,7,9,8,3,6,-6,-6,-7,9,1,4,4,-10,-1,-1,8,-2,5,10,8,4,1,3,7,3,9,-2,9,2,-7,-2,-10,-4,4,1,-2,-6,-4,-2,8,1,-3,2,4,-1,6,8,8,9,7,-2,6,1,6,3,9,3,6,5,9,1,-9,-1,2,-9,-1,-8,-2,9,2,-3,-7,-6,-2,-4,-7,10,5,-5,3,-6,8,5,4,-5,7,9,4,6,-6,-1,-7,-1,2,1,-9,-4,-2,-6,-3,3,10,-4,9,2,-2,8,-6,2,-2,-5,-10,9,-6,-8,-7,8,7,4,2,9,3,-1,-6,-4,6,1,-8,9,7,-4,-2,-6,2,5,7,8,-3,6,-4,8,-4,7,1,-8,3,7,-2,-4,-2,-10,3,1,-7,-3,-9,-10,-2,-7,-2,1,4,-1,-10,5,-4,-3,5,2,10,4,8,4,-10,1,3,7,2,8,-5,-4,-9,5,-8,5,-4,-9,2,2,-4,4,-9,-7,-1,2,9,6,-2,10,-9,10,-4,8,2,-10,3,6,-6,-2,7,4,10,3,-10,4,10,5,-2,-1,-10,-3,-2,-8,1,5,4,5,9,7,-1,-1,4,-6,-8,5,6,5,-6,-6,3,-8,-5,10,-2,-5,8,5,-5,-10,-6,3,2,9,10,-8,1,9,-10,-9,-6,5,-4,5,9,-2,-10,-6,2,-2,-3,7,-8,-9,5,-9,6,-6,4,10,9,-2,-7,-3,6,-3,-8,4,-9,4,-2,-7,-9,-9,-6,-8,-10,-4,-9,-8,-4,3,-3,8,9,-6,-5,1,5,6,-10,-4,7,9,-7,-10,-8,-3,-9,3,-2,-2,1,8,-5,7,1,8,-1,3,-2,9,5,2,-2,5,-3,1,-2,10,-3,3,-10,1,7,-9,6,-10,-1,-8,-9,-7,2,6,6,9,5,-5,-4,6,2,-10,-7,-1,5,1,2,6,-5,6,-2,-5,9,-2,6,-4,-7,-7,9,1,7,9,2,-3,-10,10,-6,-9,-5,-9,2,1,10,-4,-6,-4,-8,2,8,7,-6,10,-4,-8,1,-1,-1,-4,10,1,-2,-9,-5,8,-8,-1,-6,6,-1,8,-10,-9,-1,3,9,-7,8,-1,1,-8,6,3,4,1,-4,1,8,-8,-1,8,6,10,5,8,-3,-5,10,1,9,-1,-1,-10,2,-7,10,2,-3,9,8,-6,-8,9,10,1,-4,-6,-5,-3,6,-10,5,2,8,8,1,-6,6,6,-5,-7,1,1,2,5,-6,-4,-10,-1,-10,-4,-4,7,-4,-3,-1,-8,-6,10,-5,-5,1,1,8,8,10,6,-4,1,-7,7,-7,-2,-3,10,-7,-8,4,8,1,9,-9,5,-9,1,3,6,4,4,10,7,6,-6,5,4,1,9,-8,5,-1,5,-6,-5,-1,-8,-2,8,10,-10,-9,3,8,2,-6,-3,-3,2,-9,10,7,-3,-2,-9,-7,9,5,-6,6,9,4,1,-8,7,-4,-9,4,2,-3,10,3,-7,-5,-1,10,-5,2,2,-2,9,-3,-9,-2,-4,-5,6,6,-4,6,-2,-7,-3,-4,9,3,2,-8,-4,3,5,2,3,5,-7,-5,1,7,-1,8,-8,7,8,10,-4,-8,2,10,-8,-5,10,-5,3,5,-4,3,-6,2,8,4,7,-2,-3,-4,-1,-5,10,2,-3,-7,-1,-9,-1,-1,-4,-2,10,-2,6,2,-5,-8,7,6,6,9,4,-6,-10,5,-3,-9,-10,-6,4,-4,4,-4,10,1,5,-5,9,-7,8,4,-8,-6,1,5,-7,8,8,2,-4,-6,-4,-2,-2,-1,9,-4,8,5,10,-7,-6,-8,-9,-6,3,3,-5,-10,2,-7,-7,-9,-9,-6,-4,-5,10,-7,-2,-1,7,2,-9,-8,6,-3,6,-9,6,-3,-8,1,10,6,-4,-8,-9,2,-5,-10,-6,3,4,-5,7,1,6,3,3,-7,6,-8,8,-4,10,1,4,-6,-5,-9,10,-10,-3,2,4,-2,7,-5,10,5,1,6,3,6,-4,2,4,-2,-5,-2,6,-7,-4,7,2,-3,-9,2,2,1,2,2,3,2,10,7,10,8,-8,7,6,-7,-1,-8,7,-9,-3,5,-6,-4,-3,-2,-4,-6,-5,4,-6,-10,-8,-10,-8,-3,1,-6,5,3,2,-10,6,-1,-10,6,-4,3,-5,-6,-1,5,-7,10,5,-9,-9,-3,4,9,9,-9,2,-4,4,-3,10,-8,-10,-8,-4,-2,-7,-9,9,6,1,-10,9,1,3,-10,-1,10,9,-6,7,3,3,5,-9,-9,-8,3,-2,-1,-6,9,-9,9,-9,10,-3,9,6,7,7,-4,-6,2,-1,4,-4,-7,4,-3,-8,-8,-8,6,-1,7,-8,2,-2,-1,-9,-2,-8,8,-2,-4,3,-3,8,-3,2,-8,-5,-6,7,9,2,9,-10,-1,-7,5,8,-1,9,7,5,4,10,-6,5,4,-7,-7,-1,9,3,8,-4,-10,-4,-6,6,1,-8,-2,-2,-10,9,-8,-8,-8,3,-4,6,1,1,-9,5,-3,-6,-8,1,-9,-7,-3,-4,-6,9,-5,4,-3,3,-3,1,-5,-1,5,-1,4,-1,-3,-10,-3,10,1,6,-8,7,1,-7,5,7,10,4,8,-3,-2,9,-1,3,-3,-6,-10,-4,1,7,-1,-5,4,7,5,-2,-2,-2,10,-4,6,7,5,9,5,9,8,-7,3,4,-3,-7,-7,-9,-6,-1,-5,10,-10,-3,3,-10,-7,-5,10,-8,-6,-1,4,10,-5,2,-1,-9,1,7,5,7,4,-10,-3,-1,-3,-2,4,-9,-4,8,-5,-6,10,-2,-1,-7,-5,3,-7,-7,-9,-9,10,2,9,7,9,-2,-9,4,-5,8,7,-8,-6,-5,3,-7,-2,-4,1,6,-9,8,3,9,-2,8,10,4,-10,-10,2,3,-8,-4,-2,-8,-1,10,-10,-3,-8,4,6,4,6,10,-1,2,2,8,-8,-7,-5,-2,6,9,-4,-9,-8,10,-7,2,3,-7,9,1,2,-6,-2,1,-2,1,-3,10,-3,5,-1,8,-10,3,10,9,-1,-10,3,-3,2,-5,-2,6,7,5,-10,-4,-8,2,-10,-4,7,-5,5,-9,10,4,9,9,-3,4,9,-4,4,9,-8,-4,-4,7,-5,-10,10,-8,6,-5,-4,-2,6,10,-3,-1,-1,-8,-3,6,-1,4,-10,10,-2,5,-1,-8,5,6,-6,-1,-3,-2,3,-6,-6,-8,5,-2,-1,10,4,-1,-8,6,-6,-1,-5,-7,4,-5,-6,-7,-10,-7,-6,3,6,8,10,8,-3,5,5,-10,-7,-9,9,3,3,-10,-8,-8,8,-8,1,4,-6,-6,3,10,-3,3,3,9,8,6,2,-2,-9,9,-8,-8,4,-5,-9,6,-6,-2,-5,-6,2,-10,-5,7,5,-5,-10,7,-6,10,-1,-7,-3,5,-4,2,-4,-2,-5,2,6,-2,2,-8,-4,-4,-5,2,-4,8,2,3,2,-5,-6,-6,-8,-7,-10,9,-5,10,5,-10,3,-6,9,10,-7,-8,-6,3,5,-4,-7,8,5,-4,2,-1,3,9,-7,3,8,6,8,-7,9,7,-2,10,4,10,-9,10,-10,-1,-2,2,-6,3,8,-6,-9,5,-9,-1,-10,-9,-3,8,-2,10,-5,-3,1,-4,5,-5,4,-6,-4,4,-9,2,5,-3,1,10,-8,-7,-6,5,1,-6,2,8,10,-2,6,-10,2,-6,1,-8,-9,-5,6,-8,1,-1,-7,-1,-10,7,4,7,-3,10,-8,-10,-3,-4,6,-5,-6,-2,-7,10,-3,-5,4,-5,-6,-2,3,-3,-8,3,-7,-1,-9,5,-5,5,-2,4,-4,-5,-4,-5,9,-1,-3,1,7,4,-6,-1,-4,10,9,-1,3,-3,5,3,-6,-10,-3,10,2,5,2,10,4,-9,-4,-6,-10,-5,7,-8,-6,-1,-7,8,-6,1,1,-4,-1,-8,5,3,2,-10,-8,1,7,3,-4,5,-4,-8,10,-9,-4,6,-10,-7,-9,-1,-5,10,-4,-8,-6,10,1,-4,-9,2,10,5,8,-2,10,5,6,9,-10,8,-10,-3,-6,2,2,1,3,-9,9,-10,-5,-6,10,-10,-2,6,7,-3,-8,10,-10,-9,-8,-5,-2,-6,10,9,-9,10,-9,3,6,1,-2,4,-4,8,3,-9,-8,5,8,8,3,7,2,10,-8,2,3,-6,8,9,5,8,2,1,-7,7,7,-4,6,9,-4,-5,-6,2,-5,7,8,5,-9,1,-7,8,4,5,5,-5,-6,3,-3,7,-9,-8,-10,-8,1,-6,2,4,-5,8,-2,8,5,-1,-8,6,3,-6,-9,5,-6,10,-5,5,-3,10,6,-3,-9,1,5,7,-3,4,-7,-6,9,2,10,6,8,9,5,-7,8,-4,-7,-10,5,-6,2,7,8,5,-7,-9,8,1,2,8,7,-3,-6,-7,-9,-3,-3,-2,10,-8,10,-1,7,-2,1,-1,5,-3,8,-9,-10,-10,5,-3,1,1,1,2,6,-7,5,5,3,-8,-7,10,1,10,3,-2,-7,8,7,-5,3,9,-1,7,-4,5,-1,-7,-8,-2,-2,-7,-5,8,4,-4,9,-6,-2,6,-7,-5,7,-3,-1,-6,-9,-4,8,6,-9,-3,-8,1,-2,-3,-8,-7,2,-2,7,6,2,10,-3,-6,-9,-1,7,-6,-8,8,-9,3,-7,2,4,9,9,-8,6,-5,2,-5,-9,-8,1,-3,2,-2,2,4,4,-1,-5,-7,2,7,9,3,-4,-5,8,5,-5,-3,-3,-2,-2,-1,-2,7,10,6,-7,-9,9,-6,-3,10,-8,-4,2,1,7,-3,2,-2,6,-4,-6,-6,7,5,2,8,8,4,-6,-6,-9,-3,-8,5,-3,-9,-2,-6,-8,8,6,-2,8,4,1,8,-8,-8,7,2,-2,1,-7,-4,-7,5,-8,10,10,-1,-6,10,-3,-2,-2,2,-5,-10,1,-9,8,-4,8,-4,7,-1,6,7,-10,8,3,-7,-5,3,3,-4,4,9,1,-4,9,-1,5,-2,7,8,-2,-10,-4,-2,-3,-9,-4,2,-2,-4,-10,-3,5,3,-9,-3,5,-7,4,-9,-6,7,7,-5,-6,7,6,-2,-9,-2,-5,9,-8,-3,6,1,-8,-1,-8,3,7,-9,-4,-3,-7,1,-2,3,7,-2,6,4,-2,1,3,-5,4,3,-6,-10,3,-4,-2,-5,-3,-1,-2,4,-9,-5,7,-3,3,-10,4,1,-1,-2,-2,-9,6,5,-6,4,-2,-8,-9,1,-8,-1,10,2,9,-2,3,-7,3,8,10,5,-1,2,-5,-3,3,7,-8,-5,-5,9,10,8,7,-3,8,-9,-2,-8,-4,-1,-7,-10,-9,3,2,9,-7,7,3,-10,-9,-9,-10,7,-1,10,-1,4,-7,-2,-10,-3,10,-10,-10,-5,9,-10,-2,-2,-9,1,-5,8,4,5,2,3,-7,-6,-3,-8,4,3,6,1,8,-3,-8,8,-10,-8,-10,6,-3,-8,3,1,3,5,1,-3,7,3,9,-9,-6,-3,9,-6,2,-9,10,-2,5,-2,-3,-7,-3,8,-4,2,6,-6,7,-7,6,3,7,-10,-3,1,7,8,8,3,5,-2,3,7,-10,8,-2,3,-6,-6,-5,-7,-6,-4,1,8,5,8,-10,7,-9,7,5,3,-2,2,-5,-10,2,-7,3,8,5,-7,10,4,-10,1,10,-7,-2,-2,8,9,-5,-4,2,-8,7,-4,9,6,-9,-5,2,5,-2,2,8,9,-8,4,4,-6,7,-8,8,-6,-5,-9,-2,1,-1,4,-4,3,-6,9,8,3,-5,-2,6,-1,-10,8,-5,5,-3,5,4,9,-4,-1,6,-10,4,-6,-1,-3,-9,2,-1,-10,-8,2,-5,-1,1,-1,-6,10,4,-10,4,5,-6,9,-6,2,6,-7,6,9,-1,-6,3,5,-3,2,2,-3,4,6,1,-5,3,-7,9,-8,-8,5,10,7,-9,-5,8,-9,-9,4,4,-8,-1,-8,3,-1,8,-2,-10,-6,-10,1,-8,-2,-7,9,-6,-8,4,-9,10,9,10,10,2,2,-6,10,3,-9,8,2,6,5,4,8,8,5,1,-9,-1,5,-3,-9,6,-7,-7,10,-6,5,1,-7,-3,6,-8,-6,-5,8,5,4,-7,-6,9,8,-3,9,-8,-4,9,-4,-6,-9,1,-8,-5,8,5,-8,3,10,-1,-3,-5,10,6,4,6,2,-1,6,5,9,1,4,3,4,-3,3,-2,6,6,-10,5,4,2,-5,-5,7,-2,-3,-5,9,4,9,-4,5,-7,4,7,-10,-7,8,-9,-1,-5,8,-1,-1,-10,10,7,3,10,-8,7,-6,4,8,8,-4,2,-7,10,8,2,1,-1,5,-6,-8,4,-7,9,-2,5,-2,-10,1,-8,-10,-7,2,-7,-1,2,6,-5,-4,10,-3,-6,3,-5,5,-3,6,6,-8,-4,8,10,4,10,-10,-6,5,-8,-7,5,8,7,-8,3,9,-6,-5,-2,-2,7,-5,4,4,-10,-9,-2,-5,-3,3,-10,5,-9,2,9,6,-5,10,10,-3,4,-7,9,5,-4,9,-9,10,7,9,-6,-4,5,10,10,10,-7,10,1,-1,-2,-1,-7,8,4,9,-2,1,-1,-7,-6,4,-3,1,-8,1,3,8,2,3,3,8,-7,7,1,6,10,-3,4,9,6,-9,-1,-10,-5,10,5,7,4,9,-5,-5,6,-10,-1,2,8,-10,-2,-1,-3,7,9,-3,8,-8,-10,-10,10,9,-8,1,-4,-4,-3,-5,7,8,8,9,-3,10,2,10,-9,-3,9,4,9,2,-4,8,-3,-7,8,-8,3,-6,8,-6,6,8,7,1,-2,8,3,9,-2,6,2,-3,-2,9,7,-8,7,8,-8,10,5,-7,-3,4,-3,-7,4,2,-1,7,8,-10,-1,-9,-1,-10,8,-5,-6,-6,9,5,-7,9,-10,7,2,-5,8,-6,6,5,7,-2,-7,3,-6,-9,-7,-1,5,-7,3,-3,-9,-10,-7,6,5,7,8,7,-8,5,5,4,-3,-10,-6,-9,-4,-7,-4,-6,-3,-10,-3,-5,3,8,-7,9,-5,6,4,4,4,10,6,-8,1,10,-5,6,-4,-6,-9,10,-6,5,10,7,-3,-4,4,-8,10,-8,-2,2,1,8,5,-5,-4,10,-10,-10,5,-3,-5,-2,10,9,8,-9,-1,10,5,-6,6,3,-4,-10,-6,-6,6,8,-9,8,-2,6,-6,-7,2,9,1,5,-6,2,9,-7,-5,-3,-5,2,9,-9,4,5,-1,-5,10,-8,6,2,-10,-2,-3,-1,-7,-6,-1,-3,-10,3,7,-8,8,3,7,-1,4,4,-10,8,10,-6,-8,7,7,1,-10,1,6,1,-1,2,6,5,-3,-5,-6,3,10,-1,-4,3,3,1,1,-5,-6,8,-5,10,-7,-10,-8,8,-6,8,-5,-1,6,10,-6,10,3,6,2,-5,-10,5,-1,7,3,-5,-6,-9,-2,10,5,10,7,-6,-1,-1,8,-1,10,-4,3,1,10,4,8,-2,1,1,-9,10,-7,-2,-6,4,3,8,1,-7,-9,3,-4,-2,-8,-4,9,-6,4,1,-3,5,5,3,-5,7,3,3,6,4,-8,8,4,-4,-1,8,4,-9,-9,4,-7,7,-10,9,6,7,-2,1,-8,4,-4,3,-8,-4,9,10,-9,-5,-9,-7,8,1,1,-5,9,-8,4,10,8,-8,3,2,-8,3,3,-4,-5,2,7,5,-7,-10,8,2,3,10,1,-10,-1,6,-4,-7,-3,5,6,-7,-4,-5,-4,-6,-8,-5,-10,-6,7,-7,10,9,2,-5,-3,3,-7,10,5,2,-4,-10,1,7,8,8,9,1,-9,-2,-9,2,1,-1,7,10,10,6,-4,9,9,9,-5,1,-7,8,6,-3,-1,-5,-6,10,3,-7,-10,-10,-4,-9,1,2,-1,-5,-10,5,-1,-10,3,4,5,-4,8,6,-5,8,2,-4,-2,-9,-5,4,5,6,-1,6,2,2,4,-1,-10,-4,10,-5,-5,5,-9,8,2,-1,-4,10,7,-5,8,1,-8,-8,1,3,8,-7,-6,2,-1,-2,8,-1,1,-7,6,7,-10,-2,-10,8,2,6,2,-7,-1,-8,-2,5,6,4,-9,-4,6,2,3,-6,7,5,10,-4,3,-9,10,-8,-5,8,3,-2,2,-9,-6,-7,6,4,-6,-8,-10,-3,10,-9,-6,-8,-3,-2,-6,9,3,-7,-10,9,-9,6,-2,4,-2,9,-1,1,-1,10,-1,1,5,-6,-9,2,2,1,-6,-7,7,-10,-5,4,-3,3,-3,1,2,-4,2,3,3,7,-7,10,2,-2,-3,3,1,10,-2,-2,10,-7,4,-8,4,-8,2,4,-10,-1,3,8,1,5,-1,-10,-5,-3,7,-5,7,-1,-3,-2,-1,5,6,7,-1,3,-9,3,9,2,9,6,-1,4,-4,-7,1,1,5,-7,10,10,-2,-3,3,9,-3,8,4,5,10,4,-4,-9,1,-9,7,-10,4,-9,1,9,-5,-5,8,-6,4,10,-5,8,6,-6,-9,-1,2,-2,-10,-4,-7,-3,-2,5,-8,-5,5,-8,-3,3,3,-4,6,7,-6,-10,-1,-8,-1,-9,8,-4,9,6,-8,-1,5,-3,1,8,10,-10,2,-6,-1,-1,-10,3,-9,-1,-8,-6,-10,-7,-1,-8,-4,6,6,-8,-8,5,-6,-9,-7,-9,-3,-1,6,-5,2,9,-4,1,-6,7,8,2,-2,6,-1,8,2,8,7,6,-9,-5,-2,4,-5,-2,3,-4,4,6,-7,-9,4,-8,3,10,10,6,2,-10,1,10,5,-10,-8,-4,1,-5,-1,5,6,7,-1,-10,10,-1,-1,6,-7,-6,-3,7,6,-10,-4,10,-10,-9,-9,-5,-10,-2,7,8,-4,-6,-7,-10,6,9,-5,-3,-7,8,-3,6,9,-4,-6,2,-9,7,-3,8,-7,3,-7,6,1,9,-7,7,1,-4,-6,-6,-5,2,10,-1,-6,-10,3,6,-2,-1,-7,4,-2,4,-7,2,5,-1,-3,-3,-1,3,-1,-9,1,9,-8,6,5,7,-4,3,-4,-4,1,9,10,-5,8,-3,3,9,-7,3,-8,-4,-1,2,3,4,5,5,5,8,3,-4,-3,2,-9,2,5,-10,2,2,9,-9,-9,-2,4,8,1,-6,7,4,2,3,-1,4,6,7,3,-2,2,-7,-5,-4,8,-1,-7,-1,3,6,9,-5,5,-2,2,1,7,-10,4,9,3,9,8,-9,-5,5,7,1,-6,2,-7,1,2,8,-5,-2,-8,-8,-2,-7,4,-3,4,4,-6,-7,9,9,-7,-9,-4,1,-1,-10,10,10,-1,-6,6,4,-6,7,9,9,10,10,-1,8,2,7,-5,-7,-1,-1,2,-10,-8,-4,-2,-5,-2,-10,8,7,6,-1,2,-9,-10,3,-8,8,2,3,6,-10,-2,3,8,9,5,-7,7,-1,6,9,-7,-10,-1,-6,-10,7,-7,-2,-10,1,3,2,1,9,7,3,-6,-6,-5,-6,-7,9,-1,10,-5,7,-6,10,-2,9,8,5,3,3,-4,-7,1,-4,10,-4,-5,-3,-9,10,-1,-1,9,2,-9,-3,3,-3,-5,-7,-3,10,-1,8,-5,1,7,4,10,-1,-3,4,-4,10,-6,-6,7,6,10,-8,-2,10,3,-7,-2,-5,-3,-10,-6,8,-5,-8,4,-2,7,7,1,9,3,-10,-4,-9,2,4,10,-7,-10,-9,10,-7,3,6,-3,-1,-1,-9,-4,2,10,3,1,4,6,6,-7,2,-8,4,-1,8,-6,7,-7,-5,4,-4,-7,-6,4,-8,6,-8,6,6,9,-1,10,4,-6,4,-4,-5,-9,-3,-5,-3,-8,-5,-5,6,-2,-10,5,-2,10,3,4,-6,-10,-5,9,-6,-9,3,-10,9,-6,-8,2,3,6,7,-5,5,1,2,10,-8,9,-4,-2,2,-3,-8,10,4,-9,-6,-3,10,10,5,-10,-8,4,-7,-6,-4,-1,1,-6,-7,-7,9,-3,5,3,-5,3,-1,7,5,8,2,4,3,2,6,7,3,-6,-5,-10,-1,6,-2,-9,6,-8,1,4,3,5,7,-9,-2,-9,-6,-9,-4,9,6,4,-7,2,4,1,-4,-1,10,1,6,9,1,-7,3,-10,5,-2,-4,-10,10,10,-2,7,10,2,-10,-8,-10,-5,-2,-3,8,-9,10,3,-5,-6,-3,-6,2,10,2,-4,-4,5,-5,5,4,6,-5,3,-3,6,-1,10,2,-7,2,5,4,4,-10,3,-4,7,-9,1,9,-7,-10,6,-10,4,-6,-8,1,-10,-10,7,3,3,-4,1,2,4,6,3,4,-8,6,-1,-7,-2,-5,2,2,-7,2,10,7,-5,3,-10,5,7,1,2,10,-6,-2,-2,-4,3,-8,-9,4,-9,3,-3,-5,-2,10,-6,-8,5,1,-4,-6,-10,-9,-9,-2,-1,-10,-3,-7,-3,7,-7,-2,-4,-10,5,-7,-10,3,-9,-10,1,-7,6,9,2,9,-2,-2,1,7,7,2,-10,7,-3,4,-8,10,6,3,7,7,-2,-6,-10,10,8,-5,10,-2,10,9,-6,1,-8,9,-6,-7,-5,1,7,-3,7,5,-1,-2,-2,10,-10,1,-7,5,9,2,-4,-9,8,8,-1,3,-10,4,6,10,-7,5,-3,9,-4,-6,-8,9,-1,9,10,6,9,-1,-6,-2,-4,-8,9,1,-10,2,-5,4,-8,10,7,7,7,-10,1,-7,8,3,5,-1,-2,3,-3,-5,-1,10,-2,3,-5,4,4,-10,-9,2,-9,-8,-7,10,9,-3,-2,-8,10,-6,4,-10,5,3,-4,-7,7,8,6,3,5,8,9,-2,7,3,-1,-2,-4,10,9,5,-1,-1,8,4,2,-1,-8,-9,4,-8,6,1,6,-9,9,2,-6,-8,-7,-10,-4,9,5,-7,-3,-5,-9,-10,-10,-10,5,-10,7,5,-2,-2,-7,8,-2,-10,2,-5,-2,5,-7,10,9,3,7,9,-5,6,3,-4,9,-1,1,-1,2,-4,1,1,3,-7,3,10,8,-2,9,7,1,-6,-3,-5,3,3,5,-5,7,-1,-7,-2,6,-7,9,-3,-1,3,6,-10,-1,-2,-5,7,8,-6,-10,3,10,10,-3,2,-2,9,-6,6,1,6,-6,10,10,2,-4,-5,-2,-6,10,10,-4,1,-7,9,-6,6,5,-5,-1,6,-1,-2,8,9,-7,-9,9,2,6,5,-6,5,6,8,-8,-3,-5,-1,2,-8,-8,-1,-8,4,-4,-7,10,2,1,-3,4,7,10,10,-7,-2,-7,3,-6,1,-6,10,10,1,-2,2,10,-3,5,-4,-4,-9,-9,-8,1,-7,-10,4,7,-3,10,4,5,10,-3,-4,1,9,8,-9,9,-10,10,-8,9,-7,7,7,-9,1,1,8,-1,-6,-4,-9,-10,1,5,9,1,3,7,1,8,7,-9,5,-2,10,5,-9,10,-7,9,9,1,-1,1,-4,6,-10,8,5,-4,6,-6,-6,-4,9,8,5,-9,6,8,1,-3,9,4,-1,-10,-10,1,1,1,-3,10,-6,2,-1,4,-4,-2,-6,6,-5,-4,3,2,-5,5,-10,3,6,-10,8,10,8,-5,-8,-2,9,7,3,5,-2,5,-7,-10,6,3,-1,-7,5,-3,-5,6,-3,8,-2,-6,-5,-8,9,-9,-7,10,5,9,1,5,-9,2,3,9,-6,2,6,-6,-10,-10,7,-7,9,-4,-7,6,9,-7,-1,8,3,-9,-9,-4,9,-6,-5,-1,-6,-5,-6,-9,1,5,-4,9,2,4,2,8,1,-10,-6,1,9,-5,8,-10,-9,3,10,1,-10,1,5,3,-7,4,-7,-5,2,-1,-3,-1,8,10,-4,9,-7,5,-4,-2,5,-2,3,-9,9,-7,-1,-9,-10,6,-9,9,-7,-10,7,10,7,4,-1,-7,3,5,2,-4,2,-8,6,6,4,-2,9,-2,-6,-8,-9,9,1,-7,-9,-7,2,-1,5,-4,7,-9,-10,3,-9,-2,8,-2,5,-1,-2,-5,-4,-7,-8,-7,6,9,8,1,5,-8,5,1,1,4,10,2,-8,2,-1,-8,4,-3,1,2,7,8,-1,-2,1,-10,5,-5,-2,-8,-4,9,4,-10,6,-1,-3,-7,-6,-9,-4,7,10,2,-9,-4,-7,-10,-5,-7,4,7,9,-4,-2,-3,1,-8,2,-4,10,-3,-2,-9,-5,1,-8,-9,-2,-1,5,3,-4,6,10,-6,-7,-9,-1,-8,-9,-8,-5,2,-9,4,-9,-9,-9,-10,4,-9,-6,-9,-9,7,-4,-4,1,10,3,5,2,-6,10,10,-3,-4,9,9,-10,7,9,-7,-9,4,1,-3,-7,6,6,-9,6,9,-7,-5,-3,5,6,-6,-8,-7,2,-4,1,-4,7,-6,-9,8,1,4,-8,8,8,-8,-4,5,-9,5,-8,-6,4,-8,7,8,-1,-2,1,2,-3,8,-9,1,2,7,7,-7,-5,6,2,10,8,4,-3,1,-9,3,-1,-4,-2,-7,4,4,10,3,-7,7,6,-7,8,-7,8,-4,4,-6,-1,-7,-8,6,10,1,-2,-3,2,9,9,-6,4,7,-10,-4,7,-5,2,-2,1,-10,-4,1,-4,-5,-8,9,2,2,1,2,7,3,-1,2,2,2,6,1,8,2,-8,-10,8,-4,-7,-9,6,-6,10,-8,3,-6,5,-8,5,9,-10,6,10,-1,6,3,-3,-10,10,-5,8,-9,-1,8,-6,1,-5,-8,-5,-1,-8,-7,-5,7,-5,-8,4,-5,-6,-2,9,10,10,-10,4,8,-8,-6,9,10,-6,8,6,6,6,4,-3,1,10,-8,5,-10,-8,7,10,3,4,7,-5,-1,2,10,10,9,-3,8,-3,-10,-5,-8,4,4,-5,9,-3,-2,-8,10,-4,-7,8,-6,4,-9,4,-7,-3,6,1,7,-8,8,-3,-3,1,-5,-7,-7,-8,-3,8,-1,-2,-10,-6,4,-7,-1,3,9,-6,-3,7,8,-10,10,-1,-10,1,6,6,3,-4,-6,-8,3,1,-9,-5,8,7,3,10,-1,-3,10,6,-3,-8,9,5,-10,-5,-5,-7,6,-10,4,-2,4,-3,-5,8,1,-8,-9,-10,7,1,8,4,2,4,-7,10,-4,-6,1,-8,7,3,-6,9,10,7,6,3,7,-3,-6,6,7,10,3,2,-1,-9,10,2,6,10,-1,1,2,4,10,-1,-1,6,-8,-5,-5,-8,10,7,-7,9,3,8,5,-5,-2,-9,7,7,6,-4,6,-6,-2,-4,1,9,-3,-9,-2,1,-3,9,10,5,7,4,3,-10,2,-6,-7,-5,5,-9,10,-1,4,3,5,7,1,-5,-1,1,-1,6,-1,8,-7,-3,7,-10,-3,5,4,9,-3,-10,-3,8,8,-2,7,5,7,2,3,6,-6,-5,1,6,2,8,6,9,-2,-3,3,4,9,3,-8,9,10,-4,7,4,-5,5,10,7,7,2,1,7,4,1,10,7,5,-10,-1,-2,-9,-2,-2,-5,-1,6,-5,-2,-6,-2,-5,8,-10,2,7,10,4,-6,-2,-3,10,-5,-6,-5,-1,1,-7,8,9,9,-8,1,2,6,10,7,3,-4,-8,-1,7,-7,-1,2,-6,6,-1,-4,4,-8,-1,4,-4,3,1,-1,6,-3,-4,6,7,2,9,-2,5,-7,3,-2,-4,-1,9,-3,1,-3,-2,-2,1,8,9,-2,10,-3,-5,-1,10,-1,-3,5,2,-8,-6,-3,6,6,-1,-2,-10,-5,-1,-1,10,3,8,-9,7,3,10,2,-9,-5,-9,-3,-3,-3,7,-9,-7,10,2,6,-9,-3,-6,8,3,6,-10,10,-9,2,-8,3,-3,1,-2,-5,7,-1,2,8,1,-5,5,6,8,-10,-9,2,-5,9,1,10,1,10,-1,9,6,-4,-9,7,-8,-2,1,1,6,-5,6,-4,9,2,-6,-1,-5,7,5,9,-2,-2,-4,1,5,-6,3,9,8,9,10,-8,7,9,1,7,9,-8,-2,-3,-7,7,-3,-10,-6,6,-1,3,2,-9,-7,6,-6,9,3,5,4,-10,6,7,10,-10,-10,8,4,-2,-6,9,3,9,3,-8,8,4,-9,-8,6,10,2,5,5,-10,-6,-4,10,-6,9,-10,3,3,-8,-1,-10,10,8,9,-5,-6,-10,1,-4,-3,-3,2,-8,2,-5,-10,-3,-6,-8,-6,-5,-3,3,-7,2,-3,-2,3,-7,7,7,6,2,2,-8,2,-1,2,-10,4,-8,9,10,-1,-6,-1,-10,4,9,-3,-6,-4,-1,-2,5,4,-1,-3,-4,9,5,-6,7,8,-8,6,-5,1,-7,10,1,5,-9,-2,-3,5,-1,4,3,-5,-10,-6,-3,2,2,-2,-7,4,5,9,8,-5,-6,-8,-10,1,8,-6,4,1,-1,-10,9,-4,-1,2,6,-10,-8,-3,-3,-10,-10,2,-6,4,5,10,6,-10,-7,-6,-2,7,-5,10,-5,-1,-7,-10,7,4,6,7,8,-10,-2,7,-3,7,5,9,6,-6,4,-7,10,2,5,-1,-9,-7,-9,8,-1,3,-10,7,-10,-2,8,5,3,5,7,3,9,6,6,-2,-8,-4,-7,6,-3,4,-8,-1,-6,-10,-2,-8,3,-1,-9,6,9,-6,1,4,2,5,-6,-2,-3,-5,7,10,-7,-1,-3,4,6,-8,5,1,9,7,4,-6,-4,-6,4,1,6,-10,8,10,-5,3,10,5,-1,5,-4,6,3,10,-7,-9,-4,1,2,-8,-2,6,6,-9,6,6,-4,1,-2,5,4,2,4,10,7,-4,2,8,3,-6,-3,2,-3,-7,4,6,-5,-5,-2,-6,4,7,-9,-3,4,1,2,-7,6,1,5,7,-6,10,7,8,-5,7,-1,4,10,3,9,-8,-1,5,8,7,-4,3,-10,-5,7,-8,-4,4,-10,-7,-6,-5,6,2,-4,8,-5,-3,6,-1,-10,3,-1,-8,-3,-1,-10,5,-8,9,-7,4,-10,8,-5,-8,8,-8,6,2,-1,-10,9,8,-6,1,-6,7,2,-9,-4,9,-6,-3,-5,6,7,-10,1,6,-6,3,2,5,5,8,-3,-3,5,3,-2,7,-5,8,4,-5,10,2,8,-3,-3,2,9,-5,5,6,7,9,-8,-1,-10,3,-4,2,-2,5,-10,-1,4,5,4,-7,5,-4,-4,7,1,5,-3,-9,6,10,1,-4,7,-4,-3,1,-8,10,2,-5,-7,10,9,-7,-3,10,-10,1,-4,-6,8,4,4,8,-3,-9,-5,-2,-8,9,8,5,4,5,1,-6,1,-6,5,-1,9,9,-8,-8,2,6,-1,-9,-9,4,6,-10,1,1,2,-4,-1,4,-8,6,4,-1,4,-9,-2,2,4,-4,10,2,-7,-4,1,-8,2,8,-7,-2,-7,-4,5,-9,-10,5,10,3,-4,-10,4,-4,3,6,-9,8,9,-6,-8,3,-2,9,6,3,-8,4,10,-2,-10,-10,-5,8,2,8,1,-9,10,4,9,-7,-10,-1,-1,-3,1,1,-6,2,2,-10,-1,-5,7,10,-9,-5,10,-9,-10,1,6,9,-10,9,-1,7,8,-5,-5,2,-2,3,4,-2,-4,6,-4,3,-6,-9,1,-10,-10,-3,10,9,2,-3,-5,1,-7,-1,-5,-6,-9,9,1,-1,4,5,1,7,5,-2,-4,-2,-3,3,-9,9,6,-2,-7,7,8,7,-6,-5,-4,-3,-1,1,-8,-1,5,-7,-10,-7,3,-10,6,2,-2,2,5,8,8,9,-6,-5,10,10,-10,-9,-1,-5,8,6,4,8,3,5,-5,-9,5,-2,5,-7,10,-9,-4,-7,-2,4,3,5,-8,-9,-5,8,10,4,-3,-10,6,-4,-4,5,-4,-1,-3,-2,7,7,-10,3,-2,-5,10,8,7,-10,-10,6,-6,-2,-3,9,8,5,1,-7,-7,-10,10,-4,-7,-7,-9,-5,-1,-3,1,-8,10,-6,1,3,-6,4,-8,-4,-3,6,-5,9,7,-4,-6,9,6,-6,-1,-7,-2,4,9,9,-8,-6,-7,10,-8,4,7,-9,-1,1,6,8,1,7,9,-4,2,-9,-6,3,-3,8,-4,-4,4,6,5,5,5,6,10,10,-1,-1,8,-8,4,-3,-3,-3,6,6,-3,-9,-2,4,-6,-6,-5,-1,2,6,-7,2,9,6,5,9,2,-8,-3,-8,9,4,-10,7,-6,6,1,3,5,5,3,8,2,-10,8,-3,-2,1,6,4,10,-5,-1,-2,10,-4,3,-6,8,9,-6,5,3,-1,-3,-1,8,3,-4,6,4,9,-4,2,3,-7,6,-8,-7,8,-6,2,-2,-5,-2,4,-1,-3,8,-6,-7,-1,-7,3,-7,-6,7,1,3,-10,5,10,7,-2,7,5,4,-10,-4,-7,-4,-8,-8,-4,2,-7,10,-6,9,1,7,3,-3,-4,-7,-9,-1,4,3,4,4,4,-9,10,-10,5,8,-1,-10,-9,4,-8,7,8,-1,-7,4,-8,2,8,-8,9,10,8,-3,-6,7,3,7,-3,-4,3,2,8,9,7,-10,5,6,-1,-4,-7,-3,4,4,6,10,3,-3,9,8,9,-2,-7,2,9,-4,-9,-9,-7,-2,10,-4,-7,5,-9,10,10,-6,2,4,4,-10,-5,7,3,-6,-3,-7,7,4,6,4,8,10,8,3,-1,6,-1,9,2,6,-8,-6,8,1,-6,7,-6,7,-10,7,-1,-1,-6,6,-8,3,-9,2,-9,-9,-9,2,-3,1,-7,-9,3,-1,-10,7,1,-7,9,6,-2,4,3,-9,4,2,-10,10,-10,-4,-9,-2,3,9,-7,-1,-1,-2,-2,1,-3,-9,-3,-10,-1,-5,5,9,5,9,4,-2,-4,9,7,2,-2,-7,-10,-10,-9,-1,10,-4,9,-6,-1,6,-3,1,-5,-10,-4,4,3,-6,6,-9,-7,-3,6,9,-8,-3,2,-10,9,-5,-8,8,2,-6,-3,-7,9,7,9,-3,3,-7,1,1,9,4,5,-1,-8,-7,3,1,6,-7,6,-2,-5,-3,8,6,-9,7,4,1,6,-3,4,2,6,4,9,-10,-7,-3,-6,-4,-1,9,10,7,7,-4,-8,2,-6,-5,-4,-9,7,-6,3,5,3,-9,-3,-9,-10,3,9,-1,4,10,-8,-7,-3,7,-4,-1,-6,10,-9,-2,-1,-7,2,5,-2,4,-6,-7,5,-6,-6,-6,7,4,4,-5,2,-5,-7,-2,7,-1,8,-3,-1,4,8,-10,7,-1,9,-5,-7,9,1,5,7,9,5,10,3,-3,-3,5,6,-10,3,10,-4,-6,-10,10,-8,-5,-3,8,7,8,-4,-10,3,7,-3,-8,4,1,6,3,2,-6,3,2,5,1,-5,10,-1,3,-6,3,4,5,-7,1,-6,-4,-3,10,8,-7,-2,-10,6,9,4,-1,5,-8,4,-2,8,-1,4,-9,1,-7,5,-6,-3,-2,-6,-7,10,-3,-5,-7,1,-6,-9,9,-10,-3,-6,-5,-3,-5,-1,9,-8,-8,-7,7,-2,5,7,9,10,4,2,-4,10,1,-4,5,-3,6,-7,-10,-8,-8,8,-6,-1,4,-4,8,8,5,10,-3,-2,-4,3,-6,8,-10,5,-5,-6,10,5,-4,-7,-2,-9,-1,5,-10,7,3,-3,-2,-7,-5,-3,-5,-2,1,7,8,10,9,-3,8,-8,-5,-2,-9,1,-5,8,-3,6,2,9,1,9,7,-10,2,-5,-7,4,-7,-10,9,10,-10,10,-2,-4,-10,-3,-3,-1,-9,3,-3,-3,-2,-3,-3,-5,-1,-9,-3,8,-5,2,3,4,10,-9,-2,5,7,5,1,7,6,-7,-8,-4,-5,1,-10,2,-10,-4,5,-6,-7,4,-4,2,-6,1,-5,7,3,-1,-10,-4,-4,-5,-8,-1,6,3,-8,-10,-7,10,-7,-3,2,-5,5,-7,8,7,-6,10,-6,2,9,10,-4,-7,7,3,-4,-6,-8,9,4,9,-4,2,4,-4,5,-9,6,1,-6,5,-5,-2,-1,-6,-8,-4,5,-4,9,2,-4,4,6,3,2,-5,-8,-9,-9,5,3,2,7,-7,-4,10,-9,-7,-2,9,8,-2,-1,9,-9,7,-6,-9,5,-9,6,-4,-6,10,-1,3,-10,-10,-7,1,3,-7,7,2,-2,10,10,3,-6,3,9,-9,-8,-10,-5,-10,-8,-7,-3,-6,10,2,-1,4,-7,5,3,-7,-2,-8,7,-5,-5,10,3,-4,4,-3,-3,4,-3,6,-2,7,-9,1,4,-2,10,6,10,6,-8,-2,-5,-10,3,6,-10,-9,9,6,-6,2,-10,7,10,7,2,8,-4,-8,6,-4,9,5,3,-1,2,3,6,6,-5,4,2,5,-10,-5,-8,-3,4,5,1,-6,-3,-7,-1,5,-5,5,10,-3,4,-9,9,-7,1,-10,-2,-7,7,4,-6,6,-7,-9,1,-1,10,-5,-1,-1,8,5,10,-5,-6,5,-9,5,1,4,4,7,5,-4,-6,-9,8,4,-5,-7,9,5,2,-3,4,7,3,3,-7,4,-3,10,8,1,7,6,-9,-4,-3,-8,-4,-6,-10,-7,-5,4,6,1,-10,-7,2,2,8,-4,5,-9,-8,10,-3,7,-7,-8,-7,-7,5,5,-9,1,-5,8,9,-10,2,5,6,3,-4,-6,-10,-9,7,4,-3,3,10,-9,-1,-5,9,-8,5,8,-2,2,7,9,-7,2,-6,7,8,-6,-5,4,3,8,-3,9,9,7,5,10,9,-10,-8,-2,3,7,-8,-1,-3,1,3,1,-1,10,4,-6,3,-7,-6,-7,-4,-8,-5,5,8,-6,-4,-7,-5,1,-6,-2,6,7,-10,-1,-1,7,10,6,8,10,-8,6,-3,-5,-5,-7,-8,-1,1,3,2,7,-3,-9,4,-2,-8,6,-5,-2,9,9,6,-6,-3,8,-10,-7,-8,4,8,6,4,9,2,10,-1,-9,-3,5,-3,-1,-9,-5,-5,-1,-7,-10,9,-10,1,4,-3,10,-7,1,-9,4,1,7,10,-8,4,-8,7,6,10,-1,-5,8,-7,4,1,4,-1,7,-8,10,5,7,-8,10,-4,-2,4,-1,-8,7,-6,1,-3,-9,-5,4,-7,-4,3,4,6,6,-5,-1,1,2,2,-5,2,-7,-4,-9,-2,-7,-8,2,-4,-4,-5,-2,6,6,-7,-2,-4,10,-1,-1,3,-8,7,-6,10,2,6,4,9,-9,-10,7,-9,-3,9,3,-10,-4,-3,-9,-10,-8,6,8,1,-2,-8,4,8,-8,-1,-9,-4,-1,-3,9,3,10,9,-3,-5,1,5,-1,-5,2,-1,-1,5,-9,-2,2,8,-5,1,-7,-4,-10,-6,-4,9,8,-8,-5,9,-9,-4,6,-4,1,10,2,8,3,-10,-4,-4,10,-9,2,9,-1,-6,-7,10,6,5,4,-7,-7,5,-9,-2,-10,4,-3,7,9,10,4,3,-10,7,2,-10,-4,-8,5,-3,-3,10,1,-9,-1,-6,1,-4,-8,4,6,6,-10,-2,-6,-1,-2,-6,-10,-5,6,-5,-1,-5,-1,-8,4,6,10,-10,-3,-7,3,9,-10,4,8,-10,-2,9,-5,-10,-2,-2,6,-1,4,7,-3,3,-3,-9,8,-9,6,4,6,10,-2,-10,-8,-9,-1,2,-3,9,-1,6,-8,8,4,5,5,9,2,6,-2,-2,9,9,6,9,-6,5,-1,-8,-6,-6,8,8,5,-10,7,2,-4,10,-8,-7,4,-8,6,4,9,-3,-7,7,-3,1,-8,9,-3,-2,-8,7,3,-10,3,1,4,-1,6,-3,6,10,6,-6,8,1,-6,-1,6,-8,-3,-3,4,8,-3,-1,-4,4,2,-10,-7,8,1,-2,1,8,-10,1,-8,-6,-1,-1,-9,6,5,4,8,5,1,6,7,6,-8,5,-7,6,-9,-6,4,-2,9,-8,7,-4,-3,10,6,-9,-2,-10,-5,-8,5,-3,-5,7,10,-1,-1,3,7,5,-9,10,9,10,-8,8,-4,4,5,-3,1,10,-1,7,8,1,-6,-9,-3,-9,-1,6,-10,-5,4,-10,4,-6,-4,-10,4,-2,-4,-5,1,-8,3,-8,-4,7,-10,10,8,-8,-8,-9,-2,3,1,3,-4,-4,4,-1,2,-4,-7,-8,-2,-9,7,-5,8,-4,-5,-1,-7,5,7,-10,4,-5,8,-7,-10,-3,4,-5,-3,1,8,-9,7,8,10,2,10,6,-1,-10,-9,1,10,-4,-6,5,7,1,-7,-7,-7,-2,8,-6,-1,1,1,3,-7,8,-2,-9,4,2,-9,8,-9,4,10,-6,10,3], dtype = "int8")#candidate|14401|(15600,)|const|int8
call_14400 = func_13140_call(relay.reshape(const_14401.astype('int8'), [10, 1560]))
call_14402 = func_13140_call(relay.reshape(const_14401.astype('int8'), [10, 1560]))
func_278_call = mod.get_global_var('func_278')
func_281_call = mutated_mod.get_global_var('func_281')
var_14404 = relay.var("var_14404", dtype = "float64", shape = (390,))#candidate|14404|(390,)|var|float64
call_14403 = relay.TupleGetItem(func_278_call(relay.reshape(var_14404.astype('float64'), [6, 13, 5])), 0)
call_14405 = relay.TupleGetItem(func_281_call(relay.reshape(var_14404.astype('float64'), [6, 13, 5])), 0)
output = relay.Tuple([call_14395,call_14400,const_14401,call_14403,var_14404,])
output2 = relay.Tuple([call_14396,call_14402,const_14401,call_14405,var_14404,])
func_14423 = relay.Function([var_14404,], output)
mod['func_14423'] = func_14423
mod = relay.transform.InferType()(mod)
mutated_mod['func_14423'] = func_14423
mutated_mod = relay.transform.InferType()(mutated_mod)
var_14424 = relay.var("var_14424", dtype = "float64", shape = (390,))#candidate|14424|(390,)|var|float64
func_14423_call = mutated_mod.get_global_var('func_14423')
call_14425 = func_14423_call(var_14424)
output = call_14425
func_14426 = relay.Function([var_14424], output)
mutated_mod['func_14426'] = func_14426
mutated_mod = relay.transform.InferType()(mutated_mod)
func_14212_call = mod.get_global_var('func_14212')
func_14213_call = mutated_mod.get_global_var('func_14213')
call_14428 = relay.TupleGetItem(func_14212_call(), 1)
call_14429 = relay.TupleGetItem(func_14213_call(), 1)
output = call_14428
output2 = call_14429
func_14431 = relay.Function([], output)
mod['func_14431'] = func_14431
mod = relay.transform.InferType()(mod)
mutated_mod['func_14431'] = func_14431
mutated_mod = relay.transform.InferType()(mutated_mod)
func_14431_call = mutated_mod.get_global_var('func_14431')
call_14432 = func_14431_call()
output = call_14432
func_14433 = relay.Function([], output)
mutated_mod['func_14433'] = func_14433
mutated_mod = relay.transform.InferType()(mutated_mod)
func_12493_call = mod.get_global_var('func_12493')
func_12494_call = mutated_mod.get_global_var('func_12494')
call_14442 = relay.TupleGetItem(func_12493_call(), 0)
call_14443 = relay.TupleGetItem(func_12494_call(), 0)
func_1916_call = mod.get_global_var('func_1916')
func_1920_call = mutated_mod.get_global_var('func_1920')
const_14445 = relay.const([[1,1,1,8,7,4,-9,-8],[-10,-7,-10,6,5,1,7,-5],[9,2,9,-5,1,4,8,-7],[6,3,6,-3,-7,-9,6,-3],[-10,-5,8,-7,-1,6,-2,10],[-8,3,-2,7,1,-6,-9,-3],[5,-8,-10,-1,-8,2,10,8],[-5,-2,-5,6,6,-2,2,-4],[3,-9,8,6,7,-6,8,-4],[4,9,6,5,7,7,-5,6],[2,3,-5,6,4,10,-5,-4],[2,-8,9,2,-5,5,9,-9],[9,3,-10,-8,10,-6,-2,-3],[6,-7,-9,10,6,-3,9,8],[-6,1,-9,-8,-9,-3,9,-7],[1,9,-3,-1,6,-5,-8,2],[1,9,4,-8,-4,-4,-1,7],[7,10,-6,-8,-7,-9,6,-10],[-7,-7,-6,4,10,-2,-2,-2],[2,-6,5,1,9,-8,3,1],[4,-1,-5,-10,-6,5,-9,7],[-1,2,-9,7,-4,10,-2,7],[9,6,-4,10,-9,8,-3,3],[-7,9,9,3,-2,3,6,-2],[8,10,6,-4,4,-5,6,-3],[5,1,10,9,1,-8,10,1],[-7,1,-10,10,-8,2,-5,9],[7,-3,-7,8,4,2,-7,-3],[-5,-8,1,8,-5,5,5,9],[7,-6,-4,-10,-4,2,7,-4],[2,-9,3,4,8,-5,5,-5],[-6,5,-7,8,-9,-3,-8,3],[2,-4,-9,-1,8,-10,-2,5],[7,-7,7,6,-6,6,-7,-3],[-9,1,5,-5,-10,8,-1,7],[5,2,9,-9,8,-8,-4,-1],[-8,-9,6,8,10,-5,10,-8],[-8,-8,10,-2,5,-3,-1,-10],[-9,-3,-6,9,10,-8,6,7],[8,-10,7,9,2,-10,6,-3],[10,8,-9,-3,-10,9,-9,-1],[4,-9,3,-2,8,9,2,9],[-8,-10,-5,-5,-6,-5,3,-5],[-7,-9,-10,7,-2,4,-10,8],[1,6,2,2,-8,-4,1,9],[4,10,8,4,8,2,2,-6],[7,-8,3,-9,-7,3,10,7],[7,-10,7,-5,-5,-2,8,-9],[-10,-5,8,-6,-5,-2,9,3],[-7,3,8,-8,6,7,8,10],[-6,10,9,9,-5,2,-10,-1],[7,-10,3,-7,8,4,1,-3],[-1,3,1,7,-2,-9,6,-9],[4,-10,-9,-8,1,6,-6,-3],[2,-8,-7,-8,-5,-3,-4,6],[6,-7,-2,-4,6,9,9,-10],[5,5,-4,2,9,-10,10,3],[1,2,6,10,-6,-6,8,-9],[6,8,-6,-9,8,9,7,-3],[-3,-4,1,-3,-3,-5,4,8],[7,-2,-6,7,10,1,8,-8],[1,2,-7,2,-3,-3,-10,-9],[-6,-9,1,6,3,-9,-3,4],[10,-7,-10,-7,5,-1,10,1],[10,8,-5,-3,4,-9,-10,3],[10,6,-9,4,2,9,5,10],[10,-7,4,3,-3,-9,7,4],[3,9,3,-8,-7,1,-8,9],[8,-5,5,4,-2,2,6,9],[6,-3,-1,7,1,2,-8,-7],[7,1,-10,2,10,5,10,5],[-4,-6,-3,-5,-1,-4,-7,5],[5,-8,3,-8,5,-8,9,-2],[4,-8,-3,1,-9,2,10,-2],[5,9,-3,10,-2,5,-2,6],[9,4,6,-7,-4,5,-8,6],[-8,-1,6,10,-10,1,4,-9],[-1,2,-10,-4,-7,8,-7,-1],[1,-7,5,-5,10,6,-3,-6],[10,2,6,6,-7,3,1,9],[5,-9,3,3,9,-7,8,7],[-1,10,6,-5,2,-7,1,7],[3,-4,9,10,-1,-2,-2,7],[-9,5,4,-8,-7,1,2,3],[3,2,9,2,10,-8,-3,6],[-3,7,10,-4,-2,-6,-3,4],[8,-8,9,-6,-3,1,-1,-6],[-9,-2,10,-7,-2,-9,-2,3],[-8,-9,-10,-5,-1,-9,-5,-7],[-9,3,-6,2,-5,-5,5,-9],[8,9,2,10,-10,6,-3,-10],[-5,-2,7,-8,-6,-1,8,3],[7,3,7,3,-2,5,-5,10],[9,-8,5,-9,9,-3,10,-5],[9,6,-5,3,9,5,-2,1],[-6,-8,-7,5,8,4,-3,5],[-1,5,-2,-3,4,-3,2,8],[5,10,-6,9,-2,-2,-4,-6],[9,-10,2,2,-1,4,10,-3],[9,-8,-10,-9,-10,9,9,10],[9,-1,-3,-6,-7,-10,-2,4],[10,-6,-9,-5,5,4,9,6],[-5,-8,-9,5,-7,-4,9,2],[-10,-2,-5,-7,-10,8,6,-1],[10,-9,6,-6,-8,5,10,9],[-10,-10,-9,-7,9,-10,7,6],[-1,-8,-7,-3,7,-6,-7,-1],[-7,10,-10,-5,-2,4,6,-9],[-2,-7,1,8,8,-7,9,2],[8,10,-10,-7,-9,4,-10,4],[9,-3,-1,-10,-2,-6,6,-7],[-9,-2,-9,3,-9,-5,9,-1],[9,3,-4,1,-2,9,2,-2],[-10,-3,-5,-10,3,-3,3,5],[1,-3,10,3,8,8,7,-2],[6,9,-2,-6,-2,-9,5,8],[1,1,3,3,-5,3,3,-10],[-3,-10,5,9,-5,2,-6,5],[2,-1,1,6,7,9,-5,10],[-5,-2,-4,-8,3,8,2,7],[1,-7,-3,10,4,-1,8,8],[10,6,3,3,-5,5,6,1],[1,-2,3,-4,3,8,5,-5],[-4,-8,-6,-2,2,10,1,-5],[-9,9,-9,9,-10,-3,10,1],[10,2,-10,9,-6,-10,-8,1],[2,-9,5,-4,6,-10,-5,2],[-10,-3,3,-2,3,-5,-9,-10],[8,-1,-9,6,2,4,4,-5],[2,-5,-4,-3,-1,9,7,-8],[-9,8,5,7,-9,-7,7,-9],[3,-4,-1,3,-7,1,-10,-1],[-9,10,2,-3,8,-5,-1,-2],[6,-1,-4,10,-7,-7,9,9],[-8,4,-8,-2,5,9,-10,10],[8,-7,-6,-6,-6,-1,3,-5],[-8,-1,-3,3,8,4,5,-8],[-7,-7,-9,-7,8,-2,-5,1],[5,10,-5,-4,4,-3,-3,-4],[-5,5,-4,3,-8,2,-3,9],[-5,3,-3,-4,-8,8,9,4],[-10,10,-1,7,-7,5,2,-7],[6,-6,9,-9,-7,8,8,-10],[1,4,2,-3,10,2,-3,-8],[8,-1,-4,-4,7,8,6,-4],[9,-8,1,3,-1,-3,3,5],[-5,-10,7,3,8,9,-1,-10],[5,3,-1,-9,-3,-9,4,-8],[2,-2,-2,5,6,3,-1,10],[-2,3,-1,-6,-5,-1,-8,-1],[-6,1,8,9,2,-1,-6,-10],[-6,-2,5,1,4,10,10,-4],[4,8,1,-6,-1,5,-10,8],[8,-10,9,-5,-3,6,-6,-2],[4,-2,7,-8,-5,-8,10,8],[7,4,-1,-10,6,10,4,4],[-9,-5,-2,-7,-7,-9,-2,-6],[-7,4,9,-4,9,9,-3,-3],[9,3,2,6,4,6,-4,-4],[5,1,-3,1,9,5,-4,8],[-8,-3,-8,10,8,-9,-10,-5],[2,-3,3,5,5,-5,2,-2],[-4,-3,-6,6,8,-8,10,-7],[1,7,3,7,-6,7,-8,8],[-6,2,-3,5,8,4,-9,2],[9,4,-3,-2,-5,-7,-9,-3],[-6,-6,7,-2,7,3,-7,5],[-4,9,-2,-6,-1,-10,-8,5],[9,-6,-5,1,4,-7,9,-6],[3,-2,-6,1,-1,-8,-3,-6],[-6,-1,1,-6,-8,-6,7,1],[7,2,-2,-1,-4,-2,3,3],[10,-4,-6,6,3,2,-1,-7],[-4,2,-4,9,-1,6,10,-5],[3,-1,-10,-4,6,3,7,-8],[3,-7,2,-4,8,8,9,-8],[5,-1,4,-7,9,10,4,-7],[7,-1,-1,-5,-4,8,-8,-6],[-6,9,-10,2,8,7,9,8],[-9,8,-3,2,-8,1,-7,-1],[3,10,-8,-7,4,10,-8,-3],[7,-1,-6,10,-3,2,-9,10],[-4,-7,5,-3,-6,6,3,-4],[-3,-1,-8,-3,-1,1,-9,-3],[-3,7,4,9,-5,5,4,-6],[-4,6,-9,3,3,1,-6,4],[5,-9,1,9,3,-4,5,6],[9,1,10,-8,-1,6,5,7],[3,-7,6,-2,1,-7,-6,-4],[-4,2,3,10,3,9,8,-6],[-6,9,10,-10,-7,-5,-2,9],[8,-4,3,2,2,2,9,-2],[2,6,3,10,7,-5,8,6],[7,-6,-6,6,10,-7,-7,-6],[10,-8,-10,-7,8,5,-7,-2],[1,-5,-6,4,-1,7,-9,7],[-6,6,-7,-10,-4,1,-8,-4],[-10,-7,-9,4,-1,10,-7,3],[5,-9,2,-5,6,6,10,-2],[-10,-9,-9,1,-6,-4,-9,6],[6,-4,7,-5,-7,7,-2,8],[-10,-2,-1,-1,-3,2,9,6],[3,6,-1,-3,1,-8,8,6],[2,-7,1,2,2,-8,9,-8],[5,-4,-4,-7,-6,-1,-10,2],[-5,6,6,3,-1,-1,-8,5],[-5,-10,-6,6,-3,-6,-4,-8],[7,8,-4,-1,4,5,3,5],[-9,-8,5,6,-1,-2,1,5],[-6,1,-3,-6,6,-1,3,8],[-3,8,-2,-6,9,5,10,5],[-2,7,-9,-4,-4,6,1,9],[4,-9,-4,-7,-3,-10,-4,-8],[-3,4,7,9,-1,9,10,-5],[7,-9,9,1,-10,-4,10,-1],[-6,-5,2,-6,-8,4,-3,4],[-3,1,1,-5,-7,-5,10,9],[2,-10,-7,-7,1,7,-2,-4],[-6,-8,-8,-7,-1,-9,-10,-6],[-4,7,5,10,-7,10,8,6],[-10,10,-9,-3,1,9,2,-6],[-6,-10,8,4,7,-9,-1,-8],[1,-9,6,1,7,9,-9,-8],[1,-3,5,6,-5,-6,2,-7],[1,5,9,-5,8,-6,2,-10],[-9,1,4,8,4,4,-8,-3],[7,8,-8,2,10,10,9,2],[7,-4,3,-10,5,-7,5,4],[1,-9,7,-2,-9,-7,-4,-8],[4,-2,3,-8,-6,-1,-6,-4],[-9,4,6,10,-10,-4,10,7],[-4,-3,-1,-7,-3,-7,-5,5],[-5,7,5,-7,-8,9,-2,10],[-5,7,3,2,-2,6,-1,-9],[-8,-8,-6,9,-5,-2,7,7],[6,-10,7,4,1,7,10,10],[6,2,2,-8,10,-6,-1,-8],[6,-3,-10,-4,-8,4,-1,-8],[10,-1,-3,-1,-6,-9,9,-3],[7,-2,6,9,9,3,-6,8],[-3,10,5,-9,8,9,7,-4],[9,-1,-2,-8,2,2,4,-7],[7,3,1,-5,9,-6,-6,-1],[8,2,4,2,3,5,-4,-4],[-2,-4,-8,1,3,-6,-2,5],[-10,-10,9,10,6,1,10,10],[2,-6,-3,10,6,6,-4,6],[10,-10,-9,-2,8,4,9,-3],[-10,-1,-3,8,8,7,-6,8],[10,4,-8,4,-10,-7,4,9],[-6,8,3,1,1,3,-3,-3],[9,-10,-6,7,3,-6,-4,3],[-7,-1,9,4,-2,-9,-10,-5],[10,7,2,-3,-6,5,3,-9],[-1,1,-2,1,-1,-8,3,-9],[-1,-8,-8,1,9,5,-4,-2]], dtype = "uint8")#candidate|14445|(256, 8)|const|uint8
call_14444 = relay.TupleGetItem(func_1916_call(relay.reshape(const_14445.astype('uint8'), [8, 16, 16]), relay.reshape(const_14445.astype('uint8'), [8, 16, 16]), ), 0)
call_14446 = relay.TupleGetItem(func_1920_call(relay.reshape(const_14445.astype('uint8'), [8, 16, 16]), relay.reshape(const_14445.astype('uint8'), [8, 16, 16]), ), 0)
const_14455 = relay.const([[[9.427835,-0.851413,4.331189,6.452477,-9.380039,-0.548101,-3.088834,8.984376,-2.402853],[-7.330216,-1.843635,-0.093064,7.262438,-2.709581,3.787540,5.956818,1.669949,-9.521253],[0.777428,-3.333490,1.591386,2.754893,-1.502458,-4.309763,8.922510,-9.621925,-1.174798],[3.900677,-9.058306,-1.308982,-7.102353,-0.988640,1.433451,-3.264451,-1.183293,5.542438],[1.409003,-8.585545,4.790034,3.517794,1.956925,-5.031932,-4.819961,-0.403832,7.389051],[-9.244237,-6.606814,1.333392,1.478268,-6.091982,-4.699189,7.918062,-1.838212,-8.975754],[-5.653359,1.611874,2.398454,9.611620,1.122824,-2.344108,-5.021598,-5.535745,3.471348],[4.236941,6.683443,0.606750,0.494536,-6.859661,-1.826731,1.281622,-3.967066,-6.724256],[-4.077065,3.958463,4.789051,0.362921,-7.922728,9.130093,4.796663,-2.396206,-5.457792],[0.900262,2.321845,-2.375625,-8.003257,-3.783420,-6.101842,-5.272532,1.336747,-9.761725],[-8.184811,-8.134959,-1.097997,-3.899962,-3.157634,-0.318208,-9.450430,-0.831641,5.233069],[8.698426,-6.481718,-4.918227,1.687646,-6.657664,-5.958198,2.346146,-4.896896,2.395078],[7.473842,-8.523860,9.928881,6.994139,-1.956760,7.876769,-0.624871,2.550364,-9.498737]],[[8.989814,8.385712,-0.512626,-6.855981,-7.254852,-1.550199,2.475521,3.450751,7.836171],[4.847761,5.434296,6.573846,1.816597,5.585354,-3.301958,4.317538,9.348264,9.619994],[-7.246052,-1.275904,-8.208037,1.593082,-4.956368,-1.223091,0.312376,-2.805692,1.133877],[0.327757,4.132172,-1.790069,-8.820348,5.423249,-3.277458,-1.860830,4.724533,0.560051],[6.254079,1.967230,8.192781,5.128150,0.271807,3.266222,6.238315,-2.661335,-6.999542],[0.560298,-2.899393,-2.517683,7.437453,9.521011,8.538213,1.065943,1.944366,6.171744],[-0.772850,9.707582,-5.086102,-9.911759,3.067724,0.405623,0.877463,3.633408,4.424359],[-0.841641,-6.374052,5.808985,-4.612910,-0.497552,-4.003585,3.371408,-5.655052,-2.500179],[7.525405,0.756433,7.617963,-4.987715,0.209980,-9.010792,-1.850832,9.896411,2.919249],[-8.188817,8.015515,1.809976,-2.710412,-2.898005,-5.330454,-9.413143,-3.872791,-3.703393],[-2.682588,-7.196103,-4.667404,-6.101982,-1.609645,4.645835,2.267520,0.818990,-8.875134],[-8.702756,7.965877,-9.216405,5.845490,-7.648965,-8.654263,-7.740393,4.102233,-2.799961],[2.060210,-2.236437,-1.740461,3.981950,-9.132835,6.471206,-3.669038,9.818300,-8.142252]],[[5.738189,-8.695160,8.776534,-0.345892,1.639249,7.939776,-0.759954,9.165155,-1.547045],[-5.307311,2.371144,-0.151123,-6.113005,-7.755944,1.654025,9.654208,-5.319493,-7.995404],[-3.625187,7.060778,-1.652299,6.672410,-3.203168,-4.540656,-5.555555,-4.298336,6.021158],[-2.472232,6.105365,1.131021,-8.122078,8.229117,4.211603,-2.349155,9.797867,5.759362],[-4.651997,-0.003210,9.502211,6.075303,4.411705,4.464610,2.355557,-0.631241,-6.850910],[0.081954,-5.490893,-9.357305,-9.007638,3.394340,-6.310972,2.143720,2.809041,8.669816],[-3.898045,1.900805,6.719222,-8.552546,-4.658199,6.259597,1.140282,9.989945,-2.708513],[5.995210,0.509487,-0.187242,9.286138,-8.337641,3.097934,-0.871425,0.555312,9.398976],[-5.122890,0.862748,0.244295,-4.024234,4.052460,-3.459295,7.672368,-5.094515,8.398993],[-4.163496,-9.314186,9.212267,4.638594,-4.779669,8.055000,6.214120,2.329986,1.924262],[9.250958,7.309791,6.405089,-7.635539,4.742092,7.538082,9.167196,-8.903650,8.145830],[9.384953,7.790433,7.617707,-7.454293,-1.102521,1.829045,-0.899936,3.184905,0.788712],[3.946897,8.707314,-6.078807,1.429270,6.843976,0.110741,-6.778924,1.807462,-7.916090]],[[-2.202718,3.855552,5.998459,-6.746095,3.594391,4.295748,2.303833,4.030762,-4.242443],[8.440468,4.327496,6.768832,4.192204,-0.290887,8.021983,5.105440,8.750260,-1.444450],[5.692332,-6.031158,0.259458,7.785446,-8.223765,5.225890,-5.434960,3.722206,8.570741],[2.978625,-7.778145,1.283238,-8.145662,0.243665,2.565745,-5.136612,2.115233,-0.062484],[8.030040,1.636207,-6.217846,-8.172505,3.224488,-8.171359,-6.512971,-7.407499,7.112750],[-4.676628,-1.275658,1.595000,5.532278,4.431274,-9.266557,1.848036,8.136649,-3.788861],[-7.814111,2.964123,-3.100196,-3.081641,2.449981,8.253933,9.971827,-0.373792,7.039719],[3.201430,-1.677044,5.247430,-6.958115,-8.889902,6.462806,1.525743,5.949797,-2.629836],[3.307700,-4.922461,5.223601,5.321151,3.826758,-3.705237,-9.551237,5.393315,-1.227348],[0.678323,-4.050910,8.101474,-2.666777,3.941722,1.892334,5.584000,-0.791731,0.299430],[7.767524,-2.263069,-5.193834,-2.781218,6.856202,4.811339,-0.924752,-1.266972,-2.314199],[1.202580,3.520462,-3.838403,-8.267338,2.674347,8.743777,-9.462342,1.510892,1.581450],[6.406758,-9.938315,-7.968621,8.960887,7.868042,2.108992,6.330398,-9.421899,1.861602]],[[2.246514,0.911966,-1.288464,2.946697,2.967972,-8.451789,-0.361749,-0.523214,-0.713221],[3.980658,-5.503627,0.945057,-6.261954,-7.195714,0.463254,-9.520373,9.716960,7.433478],[-1.096912,-6.514635,-7.989956,4.293797,-2.065883,1.470961,-5.279658,-0.583152,1.248543],[-4.733501,-3.220364,8.501137,-7.486261,-5.870503,8.699079,0.186883,-6.242167,6.101806],[-9.130878,-5.706317,9.241534,9.143741,-4.728696,-0.644058,-5.016330,6.175024,3.140635],[-6.668078,-1.855207,7.840049,6.812224,-4.976002,-4.614805,-1.978704,-1.968863,5.619791],[-6.989774,4.860612,3.114429,2.875587,-4.665914,-5.224251,9.678032,1.818571,-1.243980],[1.068590,7.947303,6.716569,2.270067,9.754093,-6.897487,6.574788,7.815666,0.195727],[-2.909318,-4.219688,-8.519456,-4.359488,-0.572248,4.177483,-6.363976,-0.042900,-9.728721],[0.520201,6.601639,7.259838,-1.233668,-7.075830,0.958213,-2.802608,-5.457457,-6.247206],[8.692211,-1.135980,-8.876725,-5.765921,-5.664350,7.686288,1.054855,2.328584,0.096239],[-1.455775,5.648607,4.998826,3.166252,4.439208,1.225496,-2.148072,-1.214923,-8.466656],[-8.839830,-2.289909,7.058518,-9.566491,-7.298836,9.970501,-4.296402,6.189160,-1.252483]],[[2.830818,-4.858340,-3.509057,-8.153181,7.069865,7.498437,-0.831342,-2.165357,0.952030],[-8.481376,-2.296521,5.698248,-3.837533,-1.155289,8.405374,-9.495500,-0.874367,4.960818],[-9.196289,7.946701,0.686290,1.268582,-6.675254,-1.135157,6.774384,4.840577,2.621978],[9.196746,4.089056,-4.378986,0.023625,7.759607,3.693976,-0.545653,-4.680607,2.009077],[-1.849766,6.208368,6.525153,-4.461889,-4.412716,-6.672151,-0.653967,4.468435,5.791943],[6.863605,5.189039,-2.834612,3.877808,-1.167227,-3.620041,2.874002,7.016534,-7.797703],[-9.234243,1.338719,-6.995796,3.436841,-6.363585,-2.889662,-7.567094,-4.434783,-3.029705],[-4.498013,3.899665,-9.842972,9.550342,-8.338523,-1.095121,2.031361,-9.914902,-0.740007],[-3.455127,2.595094,-7.134919,1.922366,3.928282,-5.198861,-4.689139,-8.445472,-6.216753],[-4.877319,-8.097815,-5.726642,4.761563,-8.411412,-5.227487,-0.561423,-5.409018,1.263698],[-4.621585,9.612720,-2.014977,2.167185,-9.325015,-6.297178,-8.494869,-1.228673,-6.945628],[-5.569659,-1.898855,4.690138,9.569927,-9.376039,6.970891,-8.044612,-3.803912,-6.871292],[-6.753141,7.575858,3.708408,8.216946,-2.708248,-7.156943,-1.793353,-5.579541,3.039023]],[[5.213087,-1.246489,-0.794490,-2.315506,8.240799,-7.165207,1.432760,9.863399,-6.166442],[9.772266,6.753557,2.598800,-4.789858,-1.182586,7.451019,-0.205605,-8.943188,-0.312787],[-4.711129,2.318130,9.746853,4.477603,-1.457763,5.075400,6.776784,-9.685676,8.394108],[5.922951,0.936221,-5.916055,9.775600,-4.873272,2.494171,7.674133,2.285875,2.897576],[-0.429210,3.003306,-0.812782,5.859718,4.287634,-3.909474,-8.985964,-8.785010,5.907443],[-8.131636,8.108780,-4.831729,0.438131,1.001314,-9.265367,0.787554,3.455739,-0.265911],[6.495762,-0.562414,2.508351,0.261257,-7.360174,-0.751463,0.547924,-7.439061,5.164678],[5.040962,-0.813063,8.102925,-0.297735,-8.719520,5.125616,5.592862,-4.161645,-9.132957],[-1.769908,1.048740,9.927712,-4.523782,-9.703939,-0.699201,8.049326,-5.599211,-1.331319],[-3.889827,-4.364170,-4.552691,0.807352,8.429473,5.703698,-0.994659,5.889413,-9.198926],[4.590782,6.482680,-7.796240,1.021240,-2.624677,3.887013,4.087632,8.656981,-7.602186],[5.328612,6.105306,-6.014837,-4.902611,-2.588311,-5.904880,4.784277,6.299252,-6.753863],[-3.315975,4.403420,8.171020,7.344887,-7.320492,0.091724,-8.204939,4.146471,0.964610]],[[3.990074,-1.060369,9.921894,-3.039550,-5.951074,-6.206616,8.522506,-4.785131,9.299521],[-1.251377,-8.322176,2.245109,6.111320,-3.022433,7.991607,-1.662119,-8.944360,-9.701125],[-8.109106,-5.648088,-0.747351,7.869413,4.130675,-1.018364,2.451652,2.999260,6.301290],[5.365576,-1.423513,2.232205,6.021840,-7.401764,-5.451402,-7.499828,-3.284391,0.457027],[9.345280,-2.415921,-7.361588,1.046710,8.577103,6.999043,9.018119,-2.292627,7.849792],[1.790560,8.585420,-1.551051,-4.477320,-4.529110,6.877141,2.751595,-6.598984,9.757058],[-5.165639,5.036832,2.482581,-1.792691,5.852075,-5.546282,4.339527,-0.713311,-4.009380],[-0.279938,4.785561,1.758742,8.858954,4.156173,-3.947325,-4.686325,4.169353,3.749955],[3.105606,2.973543,-7.597083,1.638531,2.534305,-4.727456,-3.678808,-6.008484,-3.588720],[-2.788847,-3.683844,1.061704,-8.934921,9.094630,6.423591,-5.116696,-6.308853,-6.848255],[6.298330,-9.896255,4.052391,-5.567532,-1.435314,6.624571,-9.335542,-8.447041,6.371896],[-1.297307,2.869524,6.059178,-4.549365,0.793664,9.876630,5.266463,3.206980,9.722754],[-6.419458,-5.099323,-0.056757,1.608391,8.175976,3.749534,-4.276521,-5.952782,5.655733]]], dtype = "float64")#candidate|14455|(8, 13, 9)|const|float64
bop_14456 = relay.bitwise_and(call_14442.astype('int8'), const_14455.astype('int8')) # shape=(8, 13, 9)
bop_14459 = relay.bitwise_and(call_14443.astype('int8'), const_14455.astype('int8')) # shape=(8, 13, 9)
output = relay.Tuple([call_14444,const_14445,bop_14456,])
output2 = relay.Tuple([call_14446,const_14445,bop_14459,])
func_14484 = relay.Function([], output)
mod['func_14484'] = func_14484
mod = relay.transform.InferType()(mod)
mutated_mod['func_14484'] = func_14484
mutated_mod = relay.transform.InferType()(mutated_mod)
func_14484_call = mutated_mod.get_global_var('func_14484')
call_14485 = func_14484_call()
output = call_14485
func_14486 = relay.Function([], output)
mutated_mod['func_14486'] = func_14486
mutated_mod = relay.transform.InferType()(mutated_mod)
func_12553_call = mod.get_global_var('func_12553')
func_12555_call = mutated_mod.get_global_var('func_12555')
call_14497 = relay.TupleGetItem(func_12553_call(), 0)
call_14498 = relay.TupleGetItem(func_12555_call(), 0)
var_14501 = relay.var("var_14501", dtype = "float64", shape = (420, 4))#candidate|14501|(420, 4)|var|float64
bop_14502 = relay.minimum(call_14497.astype('int64'), relay.reshape(var_14501.astype('int64'), relay.shape_of(call_14497))) # shape=(420, 4)
bop_14505 = relay.minimum(call_14498.astype('int64'), relay.reshape(var_14501.astype('int64'), relay.shape_of(call_14498))) # shape=(420, 4)
output = bop_14502
output2 = bop_14505
func_14508 = relay.Function([var_14501,], output)
mod['func_14508'] = func_14508
mod = relay.transform.InferType()(mod)
var_14509 = relay.var("var_14509", dtype = "float64", shape = (420, 4))#candidate|14509|(420, 4)|var|float64
output = func_14508(var_14509)
func_14510 = relay.Function([var_14509], output)
mutated_mod['func_14510'] = func_14510
mutated_mod = relay.transform.InferType()(mutated_mod)
func_12686_call = mod.get_global_var('func_12686')
func_12687_call = mutated_mod.get_global_var('func_12687')
call_14667 = relay.TupleGetItem(func_12686_call(), 0)
call_14668 = relay.TupleGetItem(func_12687_call(), 0)
var_14669 = relay.var("var_14669", dtype = "int8", shape = (4, 1560))#candidate|14669|(4, 1560)|var|int8
bop_14670 = relay.logical_xor(call_14667.astype('uint64'), var_14669.astype('uint64')) # shape=(4, 1560)
bop_14673 = relay.logical_xor(call_14668.astype('uint64'), var_14669.astype('uint64')) # shape=(4, 1560)
func_11514_call = mod.get_global_var('func_11514')
func_11515_call = mutated_mod.get_global_var('func_11515')
call_14675 = func_11514_call()
call_14676 = func_11514_call()
output = relay.Tuple([bop_14670,call_14675,])
output2 = relay.Tuple([bop_14673,call_14676,])
func_14678 = relay.Function([var_14669,], output)
mod['func_14678'] = func_14678
mod = relay.transform.InferType()(mod)
mutated_mod['func_14678'] = func_14678
mutated_mod = relay.transform.InferType()(mutated_mod)
var_14679 = relay.var("var_14679", dtype = "int8", shape = (4, 1560))#candidate|14679|(4, 1560)|var|int8
func_14678_call = mutated_mod.get_global_var('func_14678')
call_14680 = func_14678_call(var_14679)
output = call_14680
func_14681 = relay.Function([var_14679], output)
mutated_mod['func_14681'] = func_14681
mutated_mod = relay.transform.InferType()(mutated_mod)
func_12536_call = mod.get_global_var('func_12536')
func_12537_call = mutated_mod.get_global_var('func_12537')
call_14773 = func_12536_call()
call_14774 = func_12536_call()
var_14777 = relay.var("var_14777", dtype = "float64", shape = (420, 4))#candidate|14777|(420, 4)|var|float64
bop_14778 = relay.add(call_14773.astype('uint64'), relay.reshape(var_14777.astype('uint64'), relay.shape_of(call_14773))) # shape=(420, 4)
bop_14781 = relay.add(call_14774.astype('uint64'), relay.reshape(var_14777.astype('uint64'), relay.shape_of(call_14774))) # shape=(420, 4)
var_14802 = relay.var("var_14802", dtype = "uint64", shape = (420, 4))#candidate|14802|(420, 4)|var|uint64
bop_14803 = relay.bitwise_xor(bop_14778.astype('uint64'), relay.reshape(var_14802.astype('uint64'), relay.shape_of(bop_14778))) # shape=(420, 4)
bop_14806 = relay.bitwise_xor(bop_14781.astype('uint64'), relay.reshape(var_14802.astype('uint64'), relay.shape_of(bop_14781))) # shape=(420, 4)
func_12409_call = mod.get_global_var('func_12409')
func_12411_call = mutated_mod.get_global_var('func_12411')
call_14810 = relay.TupleGetItem(func_12409_call(), 0)
call_14811 = relay.TupleGetItem(func_12411_call(), 0)
uop_14820 = relay.rsqrt(bop_14778.astype('float32')) # shape=(420, 4)
uop_14822 = relay.rsqrt(bop_14781.astype('float32')) # shape=(420, 4)
output = relay.Tuple([bop_14803,call_14810,uop_14820,])
output2 = relay.Tuple([bop_14806,call_14811,uop_14822,])
func_14827 = relay.Function([var_14777,var_14802,], output)
mod['func_14827'] = func_14827
mod = relay.transform.InferType()(mod)
mutated_mod['func_14827'] = func_14827
mutated_mod = relay.transform.InferType()(mutated_mod)
func_14827_call = mutated_mod.get_global_var('func_14827')
var_14829 = relay.var("var_14829", dtype = "float64", shape = (420, 4))#candidate|14829|(420, 4)|var|float64
var_14830 = relay.var("var_14830", dtype = "uint64", shape = (420, 4))#candidate|14830|(420, 4)|var|uint64
call_14828 = func_14827_call(var_14829,var_14830,)
output = call_14828
func_14831 = relay.Function([var_14829,var_14830,], output)
mutated_mod['func_14831'] = func_14831
mutated_mod = relay.transform.InferType()(mutated_mod)
func_14484_call = mod.get_global_var('func_14484')
func_14486_call = mutated_mod.get_global_var('func_14486')
call_14857 = relay.TupleGetItem(func_14484_call(), 2)
call_14858 = relay.TupleGetItem(func_14486_call(), 2)
func_12609_call = mod.get_global_var('func_12609')
func_12611_call = mutated_mod.get_global_var('func_12611')
call_14875 = relay.TupleGetItem(func_12609_call(), 2)
call_14876 = relay.TupleGetItem(func_12611_call(), 2)
output = relay.Tuple([call_14857,call_14875,])
output2 = relay.Tuple([call_14858,call_14876,])
func_14892 = relay.Function([], output)
mod['func_14892'] = func_14892
mod = relay.transform.InferType()(mod)
mutated_mod['func_14892'] = func_14892
mutated_mod = relay.transform.InferType()(mutated_mod)
func_14892_call = mutated_mod.get_global_var('func_14892')
call_14893 = func_14892_call()
output = call_14893
func_14894 = relay.Function([], output)
mutated_mod['func_14894'] = func_14894
mutated_mod = relay.transform.InferType()(mutated_mod)
func_12609_call = mod.get_global_var('func_12609')
func_12611_call = mutated_mod.get_global_var('func_12611')
call_14960 = relay.TupleGetItem(func_12609_call(), 1)
call_14961 = relay.TupleGetItem(func_12611_call(), 1)
var_14972 = relay.var("var_14972", dtype = "float32", shape = (14, 5, 6))#candidate|14972|(14, 5, 6)|var|float32
bop_14973 = relay.logical_xor(call_14960.astype('uint64'), relay.reshape(var_14972.astype('uint64'), relay.shape_of(call_14960))) # shape=(14, 5, 6)
bop_14976 = relay.logical_xor(call_14961.astype('uint64'), relay.reshape(var_14972.astype('uint64'), relay.shape_of(call_14961))) # shape=(14, 5, 6)
output = relay.Tuple([bop_14973,])
output2 = relay.Tuple([bop_14976,])
F = relay.Function([var_14972,], output)
mod['main'] = F
mod = relay.transform.InferType()(mod)
print('==========mod==========')
print(mod.astext(show_meta_data=False))
print('===================================')
F = relay.Function([var_14972,], output2)
mutated_mod['main'] = F
mutated_mod = relay.transform.InferType()(mutated_mod)
print('==========mutated_mod==========')
print(mutated_mod.astext(show_meta_data=False))
print('===================================')
graph, lib, params = relay.build(mod, target='llvm')
module1 = graph_runtime.create(graph, lib, tvm.device('llvm',0))
intrp2 = relay.build_module.create_executor('graph', mod, tvm.device('llvm',0),'llvm')
intrp3 = relay.build_module.create_executor('debug', mod, tvm.device('llvm',0),'llvm')
intrp4 = relay.build_module.create_executor('vm', mod, tvm.device('llvm',0),'llvm')
graph, lib, params = relay.build(mod, target='cuda')
module5 = graph_runtime.create(graph, lib, tvm.device('cuda',0))
intrp6 = relay.build_module.create_executor('graph', mod, tvm.device('cuda',0),'cuda')
intrp7 = relay.build_module.create_executor('debug', mod, tvm.device('cuda',0),'cuda')
intrp8 = relay.build_module.create_executor('vm', mod, tvm.device('cuda',0),'cuda')
seq = Sequential([
	relay.transform.AlterOpLayout(),
	relay.transform.AnnotateSpans(),
	relay.transform.BatchingOps(),
	relay.transform.CanonicalizeCast(),
	relay.transform.CanonicalizeOps(),
	relay.transform.DeadCodeElimination(),
	relay.transform.DynamicToStatic(),
	relay.transform.FastMath(),
	relay.transform.FirstOrderGradient(),
	relay.transform.EliminateCommonSubexpr(),
	relay.transform.MergeCompilerRegions(),
	relay.transform.Inline(),
	relay.transform.LambdaLift(),
	relay.transform.LazyGradientInit(),
	relay.transform.PartialEvaluate(),
	relay.transform.Legalize(),
	relay.transform.FoldConstant(),
	relay.transform.ToANormalForm(),
	relay.transform.ToGraphNormalForm(),
	relay.transform.SimplifyInference(),
	relay.transform.ToBasicBlockNormalForm(),
	relay.transform.FuseOps(3),
	relay.transform.DefuseOps(),
	relay.transform.SimplifyExpr(),
])
mod = seq(mod)
print(mod.astext(show_meta_data=False))
graph, lib, params = relay.build(mod, target='llvm')
module9 = graph_runtime.create(graph, lib, tvm.device('llvm',0))
intrp10 = relay.build_module.create_executor('graph', mod, tvm.device('llvm',0),'llvm')
intrp11 = relay.build_module.create_executor('debug', mod, tvm.device('llvm',0),'llvm')
intrp12 = relay.build_module.create_executor('vm', mod, tvm.device('llvm',0),'llvm')
graph, lib, params = relay.build(mod, target='cuda')
module13 = graph_runtime.create(graph, lib, tvm.device('cuda',0))
intrp14 = relay.build_module.create_executor('graph', mod, tvm.device('cuda',0),'cuda')
intrp15 = relay.build_module.create_executor('debug', mod, tvm.device('cuda',0),'cuda')
intrp16 = relay.build_module.create_executor('vm', mod, tvm.device('cuda',0),'cuda')
graph, lib, params = relay.build(mutated_mod, target='llvm')
module17 = graph_runtime.create(graph, lib, tvm.device('llvm',0))
intrp18 = relay.build_module.create_executor('graph', mutated_mod, tvm.device('llvm',0),'llvm')
intrp19 = relay.build_module.create_executor('debug', mutated_mod, tvm.device('llvm',0),'llvm')
intrp20 = relay.build_module.create_executor('vm', mutated_mod, tvm.device('llvm',0),'llvm')
graph, lib, params = relay.build(mutated_mod, target='cuda')
module21 = graph_runtime.create(graph, lib, tvm.device('cuda',0))
intrp22 = relay.build_module.create_executor('graph', mutated_mod, tvm.device('cuda',0),'cuda')
intrp23 = relay.build_module.create_executor('debug', mutated_mod, tvm.device('cuda',0),'cuda')
intrp24 = relay.build_module.create_executor('vm', mutated_mod, tvm.device('cuda',0),'cuda')
